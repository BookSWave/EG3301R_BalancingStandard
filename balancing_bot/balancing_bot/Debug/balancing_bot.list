
balancing_bot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020ce0  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d48  08020e70  08020e70  00021e70  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08021bb8  08021bb8  000237d8  2**0
                  CONTENTS
  4 .ARM          00000008  08021bb8  08021bb8  00022bb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08021bc0  08021bc0  000237d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08021bc0  08021bc0  00022bc0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08021bc8  08021bc8  00022bc8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000007d8  20000000  08021bcc  00023000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000caac  200007d8  080223a4  000237d8  2**3
                  ALLOC
 10 ._user_heap_stack 0000d004  2000d284  080223a4  00024284  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000237d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0004109e  00000000  00000000  00023808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000b4a7  00000000  00000000  000648a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002fc0  00000000  00000000  0006fd50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00002445  00000000  00000000  00072d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003b570  00000000  00000000  00075155  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00053acb  00000000  00000000  000b06c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00103604  00000000  00000000  00104190  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  00207794  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d4bc  00000000  00000000  0020781c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  00214cd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200007d8 	.word	0x200007d8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08020e58 	.word	0x08020e58

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200007dc 	.word	0x200007dc
 80001cc:	08020e58 	.word	0x08020e58

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b96a 	b.w	8000f74 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d14e      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc4:	4694      	mov	ip, r2
 8000cc6:	458c      	cmp	ip, r1
 8000cc8:	4686      	mov	lr, r0
 8000cca:	fab2 f282 	clz	r2, r2
 8000cce:	d962      	bls.n	8000d96 <__udivmoddi4+0xde>
 8000cd0:	b14a      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd2:	f1c2 0320 	rsb	r3, r2, #32
 8000cd6:	4091      	lsls	r1, r2
 8000cd8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ce6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cea:	fa1f f68c 	uxth.w	r6, ip
 8000cee:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cf2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfe:	fb04 f106 	mul.w	r1, r4, r6
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000d0e:	f080 8112 	bcs.w	8000f36 <__udivmoddi4+0x27e>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 810f 	bls.w	8000f36 <__udivmoddi4+0x27e>
 8000d18:	3c02      	subs	r4, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a59      	subs	r1, r3, r1
 8000d1e:	fa1f f38e 	uxth.w	r3, lr
 8000d22:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d26:	fb07 1110 	mls	r1, r7, r0, r1
 8000d2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d2e:	fb00 f606 	mul.w	r6, r0, r6
 8000d32:	429e      	cmp	r6, r3
 8000d34:	d90a      	bls.n	8000d4c <__udivmoddi4+0x94>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d3e:	f080 80fc 	bcs.w	8000f3a <__udivmoddi4+0x282>
 8000d42:	429e      	cmp	r6, r3
 8000d44:	f240 80f9 	bls.w	8000f3a <__udivmoddi4+0x282>
 8000d48:	4463      	add	r3, ip
 8000d4a:	3802      	subs	r0, #2
 8000d4c:	1b9b      	subs	r3, r3, r6
 8000d4e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d52:	2100      	movs	r1, #0
 8000d54:	b11d      	cbz	r5, 8000d5e <__udivmoddi4+0xa6>
 8000d56:	40d3      	lsrs	r3, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d905      	bls.n	8000d72 <__udivmoddi4+0xba>
 8000d66:	b10d      	cbz	r5, 8000d6c <__udivmoddi4+0xb4>
 8000d68:	e9c5 0100 	strd	r0, r1, [r5]
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e7f5      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d72:	fab3 f183 	clz	r1, r3
 8000d76:	2900      	cmp	r1, #0
 8000d78:	d146      	bne.n	8000e08 <__udivmoddi4+0x150>
 8000d7a:	42a3      	cmp	r3, r4
 8000d7c:	d302      	bcc.n	8000d84 <__udivmoddi4+0xcc>
 8000d7e:	4290      	cmp	r0, r2
 8000d80:	f0c0 80f0 	bcc.w	8000f64 <__udivmoddi4+0x2ac>
 8000d84:	1a86      	subs	r6, r0, r2
 8000d86:	eb64 0303 	sbc.w	r3, r4, r3
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	d0e6      	beq.n	8000d5e <__udivmoddi4+0xa6>
 8000d90:	e9c5 6300 	strd	r6, r3, [r5]
 8000d94:	e7e3      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	f040 8090 	bne.w	8000ebc <__udivmoddi4+0x204>
 8000d9c:	eba1 040c 	sub.w	r4, r1, ip
 8000da0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000da4:	fa1f f78c 	uxth.w	r7, ip
 8000da8:	2101      	movs	r1, #1
 8000daa:	fbb4 f6f8 	udiv	r6, r4, r8
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb08 4416 	mls	r4, r8, r6, r4
 8000db6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000dba:	fb07 f006 	mul.w	r0, r7, r6
 8000dbe:	4298      	cmp	r0, r3
 8000dc0:	d908      	bls.n	8000dd4 <__udivmoddi4+0x11c>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f106 34ff 	add.w	r4, r6, #4294967295
 8000dca:	d202      	bcs.n	8000dd2 <__udivmoddi4+0x11a>
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	f200 80cd 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000dd2:	4626      	mov	r6, r4
 8000dd4:	1a1c      	subs	r4, r3, r0
 8000dd6:	fa1f f38e 	uxth.w	r3, lr
 8000dda:	fbb4 f0f8 	udiv	r0, r4, r8
 8000dde:	fb08 4410 	mls	r4, r8, r0, r4
 8000de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000de6:	fb00 f707 	mul.w	r7, r0, r7
 8000dea:	429f      	cmp	r7, r3
 8000dec:	d908      	bls.n	8000e00 <__udivmoddi4+0x148>
 8000dee:	eb1c 0303 	adds.w	r3, ip, r3
 8000df2:	f100 34ff 	add.w	r4, r0, #4294967295
 8000df6:	d202      	bcs.n	8000dfe <__udivmoddi4+0x146>
 8000df8:	429f      	cmp	r7, r3
 8000dfa:	f200 80b0 	bhi.w	8000f5e <__udivmoddi4+0x2a6>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	1bdb      	subs	r3, r3, r7
 8000e02:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e06:	e7a5      	b.n	8000d54 <__udivmoddi4+0x9c>
 8000e08:	f1c1 0620 	rsb	r6, r1, #32
 8000e0c:	408b      	lsls	r3, r1
 8000e0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000e12:	431f      	orrs	r7, r3
 8000e14:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e18:	fa04 f301 	lsl.w	r3, r4, r1
 8000e1c:	ea43 030c 	orr.w	r3, r3, ip
 8000e20:	40f4      	lsrs	r4, r6
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	0c38      	lsrs	r0, r7, #16
 8000e28:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e2c:	fbb4 fef0 	udiv	lr, r4, r0
 8000e30:	fa1f fc87 	uxth.w	ip, r7
 8000e34:	fb00 441e 	mls	r4, r0, lr, r4
 8000e38:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e3c:	fb0e f90c 	mul.w	r9, lr, ip
 8000e40:	45a1      	cmp	r9, r4
 8000e42:	fa02 f201 	lsl.w	r2, r2, r1
 8000e46:	d90a      	bls.n	8000e5e <__udivmoddi4+0x1a6>
 8000e48:	193c      	adds	r4, r7, r4
 8000e4a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e4e:	f080 8084 	bcs.w	8000f5a <__udivmoddi4+0x2a2>
 8000e52:	45a1      	cmp	r9, r4
 8000e54:	f240 8081 	bls.w	8000f5a <__udivmoddi4+0x2a2>
 8000e58:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e5c:	443c      	add	r4, r7
 8000e5e:	eba4 0409 	sub.w	r4, r4, r9
 8000e62:	fa1f f983 	uxth.w	r9, r3
 8000e66:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e6a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e6e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e72:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e76:	45a4      	cmp	ip, r4
 8000e78:	d907      	bls.n	8000e8a <__udivmoddi4+0x1d2>
 8000e7a:	193c      	adds	r4, r7, r4
 8000e7c:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e80:	d267      	bcs.n	8000f52 <__udivmoddi4+0x29a>
 8000e82:	45a4      	cmp	ip, r4
 8000e84:	d965      	bls.n	8000f52 <__udivmoddi4+0x29a>
 8000e86:	3b02      	subs	r3, #2
 8000e88:	443c      	add	r4, r7
 8000e8a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e8e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e92:	eba4 040c 	sub.w	r4, r4, ip
 8000e96:	429c      	cmp	r4, r3
 8000e98:	46ce      	mov	lr, r9
 8000e9a:	469c      	mov	ip, r3
 8000e9c:	d351      	bcc.n	8000f42 <__udivmoddi4+0x28a>
 8000e9e:	d04e      	beq.n	8000f3e <__udivmoddi4+0x286>
 8000ea0:	b155      	cbz	r5, 8000eb8 <__udivmoddi4+0x200>
 8000ea2:	ebb8 030e 	subs.w	r3, r8, lr
 8000ea6:	eb64 040c 	sbc.w	r4, r4, ip
 8000eaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000eae:	40cb      	lsrs	r3, r1
 8000eb0:	431e      	orrs	r6, r3
 8000eb2:	40cc      	lsrs	r4, r1
 8000eb4:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	e750      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000ebc:	f1c2 0320 	rsb	r3, r2, #32
 8000ec0:	fa20 f103 	lsr.w	r1, r0, r3
 8000ec4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ec8:	fa24 f303 	lsr.w	r3, r4, r3
 8000ecc:	4094      	lsls	r4, r2
 8000ece:	430c      	orrs	r4, r1
 8000ed0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ed4:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ed8:	fa1f f78c 	uxth.w	r7, ip
 8000edc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ee0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ee4:	0c23      	lsrs	r3, r4, #16
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f107 	mul.w	r1, r0, r7
 8000eee:	4299      	cmp	r1, r3
 8000ef0:	d908      	bls.n	8000f04 <__udivmoddi4+0x24c>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 36ff 	add.w	r6, r0, #4294967295
 8000efa:	d22c      	bcs.n	8000f56 <__udivmoddi4+0x29e>
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d92a      	bls.n	8000f56 <__udivmoddi4+0x29e>
 8000f00:	3802      	subs	r0, #2
 8000f02:	4463      	add	r3, ip
 8000f04:	1a5b      	subs	r3, r3, r1
 8000f06:	b2a4      	uxth	r4, r4
 8000f08:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f0c:	fb08 3311 	mls	r3, r8, r1, r3
 8000f10:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f14:	fb01 f307 	mul.w	r3, r1, r7
 8000f18:	42a3      	cmp	r3, r4
 8000f1a:	d908      	bls.n	8000f2e <__udivmoddi4+0x276>
 8000f1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000f20:	f101 36ff 	add.w	r6, r1, #4294967295
 8000f24:	d213      	bcs.n	8000f4e <__udivmoddi4+0x296>
 8000f26:	42a3      	cmp	r3, r4
 8000f28:	d911      	bls.n	8000f4e <__udivmoddi4+0x296>
 8000f2a:	3902      	subs	r1, #2
 8000f2c:	4464      	add	r4, ip
 8000f2e:	1ae4      	subs	r4, r4, r3
 8000f30:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000f34:	e739      	b.n	8000daa <__udivmoddi4+0xf2>
 8000f36:	4604      	mov	r4, r0
 8000f38:	e6f0      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e706      	b.n	8000d4c <__udivmoddi4+0x94>
 8000f3e:	45c8      	cmp	r8, r9
 8000f40:	d2ae      	bcs.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f42:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f46:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f4a:	3801      	subs	r0, #1
 8000f4c:	e7a8      	b.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f4e:	4631      	mov	r1, r6
 8000f50:	e7ed      	b.n	8000f2e <__udivmoddi4+0x276>
 8000f52:	4603      	mov	r3, r0
 8000f54:	e799      	b.n	8000e8a <__udivmoddi4+0x1d2>
 8000f56:	4630      	mov	r0, r6
 8000f58:	e7d4      	b.n	8000f04 <__udivmoddi4+0x24c>
 8000f5a:	46d6      	mov	lr, sl
 8000f5c:	e77f      	b.n	8000e5e <__udivmoddi4+0x1a6>
 8000f5e:	4463      	add	r3, ip
 8000f60:	3802      	subs	r0, #2
 8000f62:	e74d      	b.n	8000e00 <__udivmoddi4+0x148>
 8000f64:	4606      	mov	r6, r0
 8000f66:	4623      	mov	r3, r4
 8000f68:	4608      	mov	r0, r1
 8000f6a:	e70f      	b.n	8000d8c <__udivmoddi4+0xd4>
 8000f6c:	3e02      	subs	r6, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	e730      	b.n	8000dd4 <__udivmoddi4+0x11c>
 8000f72:	bf00      	nop

08000f74 <__aeabi_idiv0>:
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop

08000f78 <get_CRC8_check_sum>:
 8000f78:	b480      	push	{r7}
 8000f7a:	b087      	sub	sp, #28
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	60f8      	str	r0, [r7, #12]
 8000f80:	60b9      	str	r1, [r7, #8]
 8000f82:	4613      	mov	r3, r2
 8000f84:	71fb      	strb	r3, [r7, #7]
 8000f86:	e00a      	b.n	8000f9e <get_CRC8_check_sum+0x26>
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	1c5a      	adds	r2, r3, #1
 8000f8c:	60fa      	str	r2, [r7, #12]
 8000f8e:	781a      	ldrb	r2, [r3, #0]
 8000f90:	79fb      	ldrb	r3, [r7, #7]
 8000f92:	4053      	eors	r3, r2
 8000f94:	75fb      	strb	r3, [r7, #23]
 8000f96:	7dfb      	ldrb	r3, [r7, #23]
 8000f98:	4a07      	ldr	r2, [pc, #28]	@ (8000fb8 <get_CRC8_check_sum+0x40>)
 8000f9a:	5cd3      	ldrb	r3, [r2, r3]
 8000f9c:	71fb      	strb	r3, [r7, #7]
 8000f9e:	68bb      	ldr	r3, [r7, #8]
 8000fa0:	1e5a      	subs	r2, r3, #1
 8000fa2:	60ba      	str	r2, [r7, #8]
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d1ef      	bne.n	8000f88 <get_CRC8_check_sum+0x10>
 8000fa8:	79fb      	ldrb	r3, [r7, #7]
 8000faa:	4618      	mov	r0, r3
 8000fac:	371c      	adds	r7, #28
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	08020fd4 	.word	0x08020fd4

08000fbc <verify_CRC8_check_sum>:
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b084      	sub	sp, #16
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
 8000fc4:	6039      	str	r1, [r7, #0]
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	73fb      	strb	r3, [r7, #15]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d002      	beq.n	8000fd6 <verify_CRC8_check_sum+0x1a>
 8000fd0:	683b      	ldr	r3, [r7, #0]
 8000fd2:	2b02      	cmp	r3, #2
 8000fd4:	d801      	bhi.n	8000fda <verify_CRC8_check_sum+0x1e>
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	e013      	b.n	8001002 <verify_CRC8_check_sum+0x46>
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	3b01      	subs	r3, #1
 8000fde:	22ff      	movs	r2, #255	@ 0xff
 8000fe0:	4619      	mov	r1, r3
 8000fe2:	6878      	ldr	r0, [r7, #4]
 8000fe4:	f7ff ffc8 	bl	8000f78 <get_CRC8_check_sum>
 8000fe8:	4603      	mov	r3, r0
 8000fea:	73fb      	strb	r3, [r7, #15]
 8000fec:	683b      	ldr	r3, [r7, #0]
 8000fee:	3b01      	subs	r3, #1
 8000ff0:	687a      	ldr	r2, [r7, #4]
 8000ff2:	4413      	add	r3, r2
 8000ff4:	781b      	ldrb	r3, [r3, #0]
 8000ff6:	7bfa      	ldrb	r2, [r7, #15]
 8000ff8:	429a      	cmp	r2, r3
 8000ffa:	bf0c      	ite	eq
 8000ffc:	2301      	moveq	r3, #1
 8000ffe:	2300      	movne	r3, #0
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4618      	mov	r0, r3
 8001004:	3710      	adds	r7, #16
 8001006:	46bd      	mov	sp, r7
 8001008:	bd80      	pop	{r7, pc}

0800100a <append_CRC8_check_sum>:
 800100a:	b580      	push	{r7, lr}
 800100c:	b084      	sub	sp, #16
 800100e:	af00      	add	r7, sp, #0
 8001010:	6078      	str	r0, [r7, #4]
 8001012:	6039      	str	r1, [r7, #0]
 8001014:	2300      	movs	r3, #0
 8001016:	73fb      	strb	r3, [r7, #15]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	2b00      	cmp	r3, #0
 800101c:	d012      	beq.n	8001044 <append_CRC8_check_sum+0x3a>
 800101e:	683b      	ldr	r3, [r7, #0]
 8001020:	2b02      	cmp	r3, #2
 8001022:	d90f      	bls.n	8001044 <append_CRC8_check_sum+0x3a>
 8001024:	683b      	ldr	r3, [r7, #0]
 8001026:	3b01      	subs	r3, #1
 8001028:	22ff      	movs	r2, #255	@ 0xff
 800102a:	4619      	mov	r1, r3
 800102c:	6878      	ldr	r0, [r7, #4]
 800102e:	f7ff ffa3 	bl	8000f78 <get_CRC8_check_sum>
 8001032:	4603      	mov	r3, r0
 8001034:	73fb      	strb	r3, [r7, #15]
 8001036:	683b      	ldr	r3, [r7, #0]
 8001038:	3b01      	subs	r3, #1
 800103a:	687a      	ldr	r2, [r7, #4]
 800103c:	4413      	add	r3, r2
 800103e:	7bfa      	ldrb	r2, [r7, #15]
 8001040:	701a      	strb	r2, [r3, #0]
 8001042:	e000      	b.n	8001046 <append_CRC8_check_sum+0x3c>
 8001044:	bf00      	nop
 8001046:	3710      	adds	r7, #16
 8001048:	46bd      	mov	sp, r7
 800104a:	bd80      	pop	{r7, pc}

0800104c <get_CRC16_check_sum>:
 800104c:	b480      	push	{r7}
 800104e:	b087      	sub	sp, #28
 8001050:	af00      	add	r7, sp, #0
 8001052:	60f8      	str	r0, [r7, #12]
 8001054:	60b9      	str	r1, [r7, #8]
 8001056:	4613      	mov	r3, r2
 8001058:	80fb      	strh	r3, [r7, #6]
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d113      	bne.n	8001088 <get_CRC16_check_sum+0x3c>
 8001060:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001064:	e016      	b.n	8001094 <get_CRC16_check_sum+0x48>
 8001066:	68fb      	ldr	r3, [r7, #12]
 8001068:	1c5a      	adds	r2, r3, #1
 800106a:	60fa      	str	r2, [r7, #12]
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	75fb      	strb	r3, [r7, #23]
 8001070:	88fb      	ldrh	r3, [r7, #6]
 8001072:	0a1b      	lsrs	r3, r3, #8
 8001074:	b29a      	uxth	r2, r3
 8001076:	88f9      	ldrh	r1, [r7, #6]
 8001078:	7dfb      	ldrb	r3, [r7, #23]
 800107a:	404b      	eors	r3, r1
 800107c:	b2db      	uxtb	r3, r3
 800107e:	4908      	ldr	r1, [pc, #32]	@ (80010a0 <get_CRC16_check_sum+0x54>)
 8001080:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001084:	4053      	eors	r3, r2
 8001086:	80fb      	strh	r3, [r7, #6]
 8001088:	68bb      	ldr	r3, [r7, #8]
 800108a:	1e5a      	subs	r2, r3, #1
 800108c:	60ba      	str	r2, [r7, #8]
 800108e:	2b00      	cmp	r3, #0
 8001090:	d1e9      	bne.n	8001066 <get_CRC16_check_sum+0x1a>
 8001092:	88fb      	ldrh	r3, [r7, #6]
 8001094:	4618      	mov	r0, r3
 8001096:	371c      	adds	r7, #28
 8001098:	46bd      	mov	sp, r7
 800109a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109e:	4770      	bx	lr
 80010a0:	080210d4 	.word	0x080210d4

080010a4 <verify_CRC16_check_sum>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b084      	sub	sp, #16
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	6078      	str	r0, [r7, #4]
 80010ac:	6039      	str	r1, [r7, #0]
 80010ae:	2300      	movs	r3, #0
 80010b0:	81fb      	strh	r3, [r7, #14]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d002      	beq.n	80010be <verify_CRC16_check_sum+0x1a>
 80010b8:	683b      	ldr	r3, [r7, #0]
 80010ba:	2b02      	cmp	r3, #2
 80010bc:	d801      	bhi.n	80010c2 <verify_CRC16_check_sum+0x1e>
 80010be:	2300      	movs	r3, #0
 80010c0:	e020      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 80010c2:	683b      	ldr	r3, [r7, #0]
 80010c4:	3b02      	subs	r3, #2
 80010c6:	4a11      	ldr	r2, [pc, #68]	@ (800110c <verify_CRC16_check_sum+0x68>)
 80010c8:	8812      	ldrh	r2, [r2, #0]
 80010ca:	4619      	mov	r1, r3
 80010cc:	6878      	ldr	r0, [r7, #4]
 80010ce:	f7ff ffbd 	bl	800104c <get_CRC16_check_sum>
 80010d2:	4603      	mov	r3, r0
 80010d4:	81fb      	strh	r3, [r7, #14]
 80010d6:	89fb      	ldrh	r3, [r7, #14]
 80010d8:	b2db      	uxtb	r3, r3
 80010da:	683a      	ldr	r2, [r7, #0]
 80010dc:	3a02      	subs	r2, #2
 80010de:	6879      	ldr	r1, [r7, #4]
 80010e0:	440a      	add	r2, r1
 80010e2:	7812      	ldrb	r2, [r2, #0]
 80010e4:	4293      	cmp	r3, r2
 80010e6:	d10c      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010e8:	89fb      	ldrh	r3, [r7, #14]
 80010ea:	0a1b      	lsrs	r3, r3, #8
 80010ec:	b29b      	uxth	r3, r3
 80010ee:	b2db      	uxtb	r3, r3
 80010f0:	683a      	ldr	r2, [r7, #0]
 80010f2:	3a01      	subs	r2, #1
 80010f4:	6879      	ldr	r1, [r7, #4]
 80010f6:	440a      	add	r2, r1
 80010f8:	7812      	ldrb	r2, [r2, #0]
 80010fa:	4293      	cmp	r3, r2
 80010fc:	d101      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010fe:	2301      	movs	r3, #1
 8001100:	e000      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 8001102:	2300      	movs	r3, #0
 8001104:	4618      	mov	r0, r3
 8001106:	3710      	adds	r7, #16
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}
 800110c:	20000000 	.word	0x20000000

08001110 <append_CRC16_check_sum>:
 8001110:	b580      	push	{r7, lr}
 8001112:	b084      	sub	sp, #16
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	6039      	str	r1, [r7, #0]
 800111a:	2300      	movs	r3, #0
 800111c:	81fb      	strh	r3, [r7, #14]
 800111e:	687b      	ldr	r3, [r7, #4]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d01d      	beq.n	8001160 <append_CRC16_check_sum+0x50>
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	2b02      	cmp	r3, #2
 8001128:	d91a      	bls.n	8001160 <append_CRC16_check_sum+0x50>
 800112a:	683b      	ldr	r3, [r7, #0]
 800112c:	3b02      	subs	r3, #2
 800112e:	4a0e      	ldr	r2, [pc, #56]	@ (8001168 <append_CRC16_check_sum+0x58>)
 8001130:	8812      	ldrh	r2, [r2, #0]
 8001132:	4619      	mov	r1, r3
 8001134:	6878      	ldr	r0, [r7, #4]
 8001136:	f7ff ff89 	bl	800104c <get_CRC16_check_sum>
 800113a:	4603      	mov	r3, r0
 800113c:	81fb      	strh	r3, [r7, #14]
 800113e:	683b      	ldr	r3, [r7, #0]
 8001140:	3b02      	subs	r3, #2
 8001142:	687a      	ldr	r2, [r7, #4]
 8001144:	4413      	add	r3, r2
 8001146:	89fa      	ldrh	r2, [r7, #14]
 8001148:	b2d2      	uxtb	r2, r2
 800114a:	701a      	strb	r2, [r3, #0]
 800114c:	89fb      	ldrh	r3, [r7, #14]
 800114e:	0a1b      	lsrs	r3, r3, #8
 8001150:	b299      	uxth	r1, r3
 8001152:	683b      	ldr	r3, [r7, #0]
 8001154:	3b01      	subs	r3, #1
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	4413      	add	r3, r2
 800115a:	b2ca      	uxtb	r2, r1
 800115c:	701a      	strb	r2, [r3, #0]
 800115e:	e000      	b.n	8001162 <append_CRC16_check_sum+0x52>
 8001160:	bf00      	nop
 8001162:	3710      	adds	r7, #16
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	20000000 	.word	0x20000000

0800116c <buzzer>:
 800116c:	b480      	push	{r7}
 800116e:	b083      	sub	sp, #12
 8001170:	af00      	add	r7, sp, #0
 8001172:	4603      	mov	r3, r0
 8001174:	80fb      	strh	r3, [r7, #6]
 8001176:	88fb      	ldrh	r3, [r7, #6]
 8001178:	2b00      	cmp	r3, #0
 800117a:	d104      	bne.n	8001186 <buzzer+0x1a>
 800117c:	4b0b      	ldr	r3, [pc, #44]	@ (80011ac <buzzer+0x40>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	2200      	movs	r2, #0
 8001182:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001184:	e00c      	b.n	80011a0 <buzzer+0x34>
 8001186:	88fb      	ldrh	r3, [r7, #6]
 8001188:	f24a 4210 	movw	r2, #42000	@ 0xa410
 800118c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001190:	4b06      	ldr	r3, [pc, #24]	@ (80011ac <buzzer+0x40>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	629a      	str	r2, [r3, #40]	@ 0x28
 8001196:	4b05      	ldr	r3, [pc, #20]	@ (80011ac <buzzer+0x40>)
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800119e:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011a0:	bf00      	nop
 80011a2:	370c      	adds	r7, #12
 80011a4:	46bd      	mov	sp, r7
 80011a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011aa:	4770      	bx	lr
 80011ac:	20001b10 	.word	0x20001b10

080011b0 <buzzer_init>:
 80011b0:	b580      	push	{r7, lr}
 80011b2:	af00      	add	r7, sp, #0
 80011b4:	2108      	movs	r1, #8
 80011b6:	4804      	ldr	r0, [pc, #16]	@ (80011c8 <buzzer_init+0x18>)
 80011b8:	f010 f9b4 	bl	8011524 <HAL_TIM_PWM_Start>
 80011bc:	4b02      	ldr	r3, [pc, #8]	@ (80011c8 <buzzer_init+0x18>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	2200      	movs	r2, #0
 80011c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011c4:	bf00      	nop
 80011c6:	bd80      	pop	{r7, pc}
 80011c8:	20001b10 	.word	0x20001b10

080011cc <HAL_CAN_RxFifo0MsgPendingCallback>:
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b082      	sub	sp, #8
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f003 febf 	bl	8004f58 <can_ISR>
 80011da:	bf00      	nop
 80011dc:	3708      	adds	r7, #8
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}

080011e2 <HAL_CAN_RxFifo1MsgPendingCallback>:
 80011e2:	b580      	push	{r7, lr}
 80011e4:	b082      	sub	sp, #8
 80011e6:	af00      	add	r7, sp, #0
 80011e8:	6078      	str	r0, [r7, #4]
 80011ea:	6878      	ldr	r0, [r7, #4]
 80011ec:	f003 feb4 	bl	8004f58 <can_ISR>
 80011f0:	bf00      	nop
 80011f2:	3708      	adds	r7, #8
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}

080011f8 <can1_get_msg>:
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b084      	sub	sp, #16
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	60f8      	str	r0, [r7, #12]
 8001200:	60b9      	str	r1, [r7, #8]
 8001202:	607a      	str	r2, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	68ba      	ldr	r2, [r7, #8]
 8001208:	2100      	movs	r1, #0
 800120a:	68f8      	ldr	r0, [r7, #12]
 800120c:	f00a fc85 	bl	800bb1a <HAL_CAN_GetRxMessage>
 8001210:	2300      	movs	r3, #0
 8001212:	4618      	mov	r0, r3
 8001214:	3710      	adds	r7, #16
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}

0800121a <can2_get_msg>:
 800121a:	b580      	push	{r7, lr}
 800121c:	b084      	sub	sp, #16
 800121e:	af00      	add	r7, sp, #0
 8001220:	60f8      	str	r0, [r7, #12]
 8001222:	60b9      	str	r1, [r7, #8]
 8001224:	607a      	str	r2, [r7, #4]
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	68ba      	ldr	r2, [r7, #8]
 800122a:	2101      	movs	r1, #1
 800122c:	68f8      	ldr	r0, [r7, #12]
 800122e:	f00a fc74 	bl	800bb1a <HAL_CAN_GetRxMessage>
 8001232:	2300      	movs	r3, #0
 8001234:	4618      	mov	r0, r3
 8001236:	3710      	adds	r7, #16
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}

0800123c <can_start>:
 800123c:	b580      	push	{r7, lr}
 800123e:	b08e      	sub	sp, #56	@ 0x38
 8001240:	af00      	add	r7, sp, #0
 8001242:	60f8      	str	r0, [r7, #12]
 8001244:	60b9      	str	r1, [r7, #8]
 8001246:	607a      	str	r2, [r7, #4]
 8001248:	f107 0310 	add.w	r3, r7, #16
 800124c:	2228      	movs	r2, #40	@ 0x28
 800124e:	2100      	movs	r1, #0
 8001250:	4618      	mov	r0, r3
 8001252:	f019 fde6 	bl	801ae22 <memset>
 8001256:	2301      	movs	r3, #1
 8001258:	633b      	str	r3, [r7, #48]	@ 0x30
 800125a:	2300      	movs	r3, #0
 800125c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800125e:	2301      	movs	r3, #1
 8001260:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001262:	68bb      	ldr	r3, [r7, #8]
 8001264:	0c1b      	lsrs	r3, r3, #16
 8001266:	613b      	str	r3, [r7, #16]
 8001268:	68bb      	ldr	r3, [r7, #8]
 800126a:	b29b      	uxth	r3, r3
 800126c:	617b      	str	r3, [r7, #20]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	0c1b      	lsrs	r3, r3, #16
 8001272:	61bb      	str	r3, [r7, #24]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	b29b      	uxth	r3, r3
 8001278:	61fb      	str	r3, [r7, #28]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	4a18      	ldr	r2, [pc, #96]	@ (80012e0 <can_start+0xa4>)
 8001280:	4293      	cmp	r3, r2
 8001282:	d111      	bne.n	80012a8 <can_start+0x6c>
 8001284:	2300      	movs	r3, #0
 8001286:	627b      	str	r3, [r7, #36]	@ 0x24
 8001288:	2300      	movs	r3, #0
 800128a:	623b      	str	r3, [r7, #32]
 800128c:	f107 0310 	add.w	r3, r7, #16
 8001290:	4619      	mov	r1, r3
 8001292:	68f8      	ldr	r0, [r7, #12]
 8001294:	f00a fa42 	bl	800b71c <HAL_CAN_ConfigFilter>
 8001298:	68f8      	ldr	r0, [r7, #12]
 800129a:	f00a fb1f 	bl	800b8dc <HAL_CAN_Start>
 800129e:	2102      	movs	r1, #2
 80012a0:	68f8      	ldr	r0, [r7, #12]
 80012a2:	f00a fd4c 	bl	800bd3e <HAL_CAN_ActivateNotification>
 80012a6:	e017      	b.n	80012d8 <can_start+0x9c>
 80012a8:	68fb      	ldr	r3, [r7, #12]
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a0d      	ldr	r2, [pc, #52]	@ (80012e4 <can_start+0xa8>)
 80012ae:	4293      	cmp	r3, r2
 80012b0:	d112      	bne.n	80012d8 <can_start+0x9c>
 80012b2:	2301      	movs	r3, #1
 80012b4:	623b      	str	r3, [r7, #32]
 80012b6:	230e      	movs	r3, #14
 80012b8:	637b      	str	r3, [r7, #52]	@ 0x34
 80012ba:	230e      	movs	r3, #14
 80012bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80012be:	f107 0310 	add.w	r3, r7, #16
 80012c2:	4619      	mov	r1, r3
 80012c4:	68f8      	ldr	r0, [r7, #12]
 80012c6:	f00a fa29 	bl	800b71c <HAL_CAN_ConfigFilter>
 80012ca:	68f8      	ldr	r0, [r7, #12]
 80012cc:	f00a fb06 	bl	800b8dc <HAL_CAN_Start>
 80012d0:	2110      	movs	r1, #16
 80012d2:	68f8      	ldr	r0, [r7, #12]
 80012d4:	f00a fd33 	bl	800bd3e <HAL_CAN_ActivateNotification>
 80012d8:	bf00      	nop
 80012da:	3738      	adds	r7, #56	@ 0x38
 80012dc:	46bd      	mov	sp, r7
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	40006400 	.word	0x40006400
 80012e4:	40006800 	.word	0x40006800

080012e8 <dbus_remote_ISR>:

uint8_t remote_raw_data[REMOTE_DATA_SIZE] = {0};
remote_cmd_t g_remote_cmd = { 0 };


void dbus_remote_ISR(DMA_HandleTypeDef *hdma) {
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b084      	sub	sp, #16
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]
	g_remote_cmd.right_x = (remote_raw_data[0] | remote_raw_data[1] << 8) & 0x07FF;
 80012f0:	4b79      	ldr	r3, [pc, #484]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f2:	781b      	ldrb	r3, [r3, #0]
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	4b78      	ldr	r3, [pc, #480]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f8:	785b      	ldrb	r3, [r3, #1]
 80012fa:	021b      	lsls	r3, r3, #8
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	4313      	orrs	r3, r2
 8001300:	b21b      	sxth	r3, r3
 8001302:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001306:	b21a      	sxth	r2, r3
 8001308:	4b74      	ldr	r3, [pc, #464]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130a:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_x -= JOYSTICK_OFFSET;
 800130c:	4b73      	ldr	r3, [pc, #460]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001312:	b29b      	uxth	r3, r3
 8001314:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001318:	b29b      	uxth	r3, r3
 800131a:	b21a      	sxth	r2, r3
 800131c:	4b6f      	ldr	r3, [pc, #444]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800131e:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_y = (remote_raw_data[1] >> 3 | remote_raw_data[2] << 5) & 0x07FF;
 8001320:	4b6d      	ldr	r3, [pc, #436]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001322:	785b      	ldrb	r3, [r3, #1]
 8001324:	08db      	lsrs	r3, r3, #3
 8001326:	b2db      	uxtb	r3, r3
 8001328:	b21a      	sxth	r2, r3
 800132a:	4b6b      	ldr	r3, [pc, #428]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800132c:	789b      	ldrb	r3, [r3, #2]
 800132e:	015b      	lsls	r3, r3, #5
 8001330:	b21b      	sxth	r3, r3
 8001332:	4313      	orrs	r3, r2
 8001334:	b21b      	sxth	r3, r3
 8001336:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800133a:	b21a      	sxth	r2, r3
 800133c:	4b67      	ldr	r3, [pc, #412]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800133e:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.right_y -= JOYSTICK_OFFSET;
 8001340:	4b66      	ldr	r3, [pc, #408]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001342:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001346:	b29b      	uxth	r3, r3
 8001348:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800134c:	b29b      	uxth	r3, r3
 800134e:	b21a      	sxth	r2, r3
 8001350:	4b62      	ldr	r3, [pc, #392]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001352:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 8001354:	4b60      	ldr	r3, [pc, #384]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001356:	789b      	ldrb	r3, [r3, #2]
 8001358:	099b      	lsrs	r3, r3, #6
 800135a:	b2db      	uxtb	r3, r3
 800135c:	b21a      	sxth	r2, r3
 800135e:	4b5e      	ldr	r3, [pc, #376]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001360:	78db      	ldrb	r3, [r3, #3]
 8001362:	009b      	lsls	r3, r3, #2
 8001364:	b21b      	sxth	r3, r3
 8001366:	4313      	orrs	r3, r2
 8001368:	b21a      	sxth	r2, r3
			| remote_raw_data[4] << 10) & 0x07FF;
 800136a:	4b5b      	ldr	r3, [pc, #364]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800136c:	791b      	ldrb	r3, [r3, #4]
 800136e:	029b      	lsls	r3, r3, #10
 8001370:	b21b      	sxth	r3, r3
 8001372:	4313      	orrs	r3, r2
 8001374:	b21b      	sxth	r3, r3
 8001376:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800137a:	b21a      	sxth	r2, r3
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 800137c:	4b57      	ldr	r3, [pc, #348]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800137e:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_x -= JOYSTICK_OFFSET;
 8001380:	4b56      	ldr	r3, [pc, #344]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001382:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001386:	b29b      	uxth	r3, r3
 8001388:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800138c:	b29b      	uxth	r3, r3
 800138e:	b21a      	sxth	r2, r3
 8001390:	4b52      	ldr	r3, [pc, #328]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001392:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_y = (remote_raw_data[4] >> 1 | remote_raw_data[5] << 7) & 0x07FF;
 8001394:	4b50      	ldr	r3, [pc, #320]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001396:	791b      	ldrb	r3, [r3, #4]
 8001398:	085b      	lsrs	r3, r3, #1
 800139a:	b2db      	uxtb	r3, r3
 800139c:	b21a      	sxth	r2, r3
 800139e:	4b4e      	ldr	r3, [pc, #312]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013a0:	795b      	ldrb	r3, [r3, #5]
 80013a2:	01db      	lsls	r3, r3, #7
 80013a4:	b21b      	sxth	r3, r3
 80013a6:	4313      	orrs	r3, r2
 80013a8:	b21b      	sxth	r3, r3
 80013aa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013ae:	b21a      	sxth	r2, r3
 80013b0:	4b4a      	ldr	r3, [pc, #296]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b2:	80da      	strh	r2, [r3, #6]
	g_remote_cmd.left_y -= JOYSTICK_OFFSET;
 80013b4:	4b49      	ldr	r3, [pc, #292]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80013ba:	b29b      	uxth	r3, r3
 80013bc:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 80013c0:	b29b      	uxth	r3, r3
 80013c2:	b21a      	sxth	r2, r3
 80013c4:	4b45      	ldr	r3, [pc, #276]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013c6:	80da      	strh	r2, [r3, #6]
	//Left switch position
	g_remote_cmd.left_switch = ((remote_raw_data[5] >> 4) & 0x000C) >> 2;
 80013c8:	4b43      	ldr	r3, [pc, #268]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013ca:	795b      	ldrb	r3, [r3, #5]
 80013cc:	091b      	lsrs	r3, r3, #4
 80013ce:	b2db      	uxtb	r3, r3
 80013d0:	109b      	asrs	r3, r3, #2
 80013d2:	b25b      	sxtb	r3, r3
 80013d4:	f003 0303 	and.w	r3, r3, #3
 80013d8:	b25a      	sxtb	r2, r3
 80013da:	4b40      	ldr	r3, [pc, #256]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013dc:	721a      	strb	r2, [r3, #8]
	g_remote_cmd.right_switch = (remote_raw_data[5] >> 4) & 0x0003;
 80013de:	4b3e      	ldr	r3, [pc, #248]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013e0:	795b      	ldrb	r3, [r3, #5]
 80013e2:	091b      	lsrs	r3, r3, #4
 80013e4:	b2db      	uxtb	r3, r3
 80013e6:	b25b      	sxtb	r3, r3
 80013e8:	f003 0303 	and.w	r3, r3, #3
 80013ec:	b25a      	sxtb	r2, r3
 80013ee:	4b3b      	ldr	r3, [pc, #236]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013f0:	725a      	strb	r2, [r3, #9]
	g_remote_cmd.mouse_x = ((int16_t) remote_raw_data[6] | ((int16_t) remote_raw_data[7] << 8));
 80013f2:	4b39      	ldr	r3, [pc, #228]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013f4:	799b      	ldrb	r3, [r3, #6]
 80013f6:	b21a      	sxth	r2, r3
 80013f8:	4b37      	ldr	r3, [pc, #220]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013fa:	79db      	ldrb	r3, [r3, #7]
 80013fc:	021b      	lsls	r3, r3, #8
 80013fe:	b21b      	sxth	r3, r3
 8001400:	4313      	orrs	r3, r2
 8001402:	b21a      	sxth	r2, r3
 8001404:	4b35      	ldr	r3, [pc, #212]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001406:	815a      	strh	r2, [r3, #10]
	g_remote_cmd.mouse_y = ((int16_t) remote_raw_data[8] | ((int16_t) remote_raw_data[9] << 8));
 8001408:	4b33      	ldr	r3, [pc, #204]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800140a:	7a1b      	ldrb	r3, [r3, #8]
 800140c:	b21a      	sxth	r2, r3
 800140e:	4b32      	ldr	r3, [pc, #200]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001410:	7a5b      	ldrb	r3, [r3, #9]
 8001412:	021b      	lsls	r3, r3, #8
 8001414:	b21b      	sxth	r3, r3
 8001416:	4313      	orrs	r3, r2
 8001418:	b21a      	sxth	r2, r3
 800141a:	4b30      	ldr	r3, [pc, #192]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800141c:	819a      	strh	r2, [r3, #12]
	g_remote_cmd.mouse_z = ((int16_t) remote_raw_data[10] | ((int16_t) remote_raw_data[11] << 8));
 800141e:	4b2e      	ldr	r3, [pc, #184]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001420:	7a9b      	ldrb	r3, [r3, #10]
 8001422:	b21a      	sxth	r2, r3
 8001424:	4b2c      	ldr	r3, [pc, #176]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001426:	7adb      	ldrb	r3, [r3, #11]
 8001428:	021b      	lsls	r3, r3, #8
 800142a:	b21b      	sxth	r3, r3
 800142c:	4313      	orrs	r3, r2
 800142e:	b21a      	sxth	r2, r3
 8001430:	4b2a      	ldr	r3, [pc, #168]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001432:	81da      	strh	r2, [r3, #14]
	g_remote_cmd.mouse_hori += g_remote_cmd.mouse_x;
 8001434:	4b29      	ldr	r3, [pc, #164]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001436:	691b      	ldr	r3, [r3, #16]
 8001438:	4a28      	ldr	r2, [pc, #160]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800143a:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800143e:	4413      	add	r3, r2
 8001440:	4a26      	ldr	r2, [pc, #152]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001442:	6113      	str	r3, [r2, #16]
	g_remote_cmd.mouse_vert += g_remote_cmd.mouse_y;
 8001444:	4b25      	ldr	r3, [pc, #148]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	4a24      	ldr	r2, [pc, #144]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800144a:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 800144e:	4413      	add	r3, r2
 8001450:	4a22      	ldr	r2, [pc, #136]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001452:	6153      	str	r3, [r2, #20]
	g_remote_cmd.mouse_left = (remote_raw_data[12]);
 8001454:	4b20      	ldr	r3, [pc, #128]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001456:	7b1b      	ldrb	r3, [r3, #12]
 8001458:	b25a      	sxtb	r2, r3
 800145a:	4b20      	ldr	r3, [pc, #128]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800145c:	761a      	strb	r2, [r3, #24]
	g_remote_cmd.mouse_right = (remote_raw_data[13]);
 800145e:	4b1e      	ldr	r3, [pc, #120]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001460:	7b5b      	ldrb	r3, [r3, #13]
 8001462:	b25a      	sxtb	r2, r3
 8001464:	4b1d      	ldr	r3, [pc, #116]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001466:	765a      	strb	r2, [r3, #25]
	g_remote_cmd.keyboard_keys = (remote_raw_data[14]);
 8001468:	4b1b      	ldr	r3, [pc, #108]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800146a:	7b9b      	ldrb	r3, [r3, #14]
 800146c:	461a      	mov	r2, r3
 800146e:	4b1b      	ldr	r3, [pc, #108]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001470:	835a      	strh	r2, [r3, #26]
	g_remote_cmd.side_dial = ((int16_t) remote_raw_data[16]) | ((int16_t) remote_raw_data[17] << 8);
 8001472:	4b19      	ldr	r3, [pc, #100]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001474:	7c1b      	ldrb	r3, [r3, #16]
 8001476:	b21a      	sxth	r2, r3
 8001478:	4b17      	ldr	r3, [pc, #92]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800147a:	7c5b      	ldrb	r3, [r3, #17]
 800147c:	021b      	lsls	r3, r3, #8
 800147e:	b21b      	sxth	r3, r3
 8001480:	4313      	orrs	r3, r2
 8001482:	b21a      	sxth	r2, r3
 8001484:	4b15      	ldr	r3, [pc, #84]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001486:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.side_dial -= JOYSTICK_OFFSET;
 8001488:	4b14      	ldr	r3, [pc, #80]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800148a:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800148e:	b29b      	uxth	r3, r3
 8001490:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001494:	b29b      	uxth	r3, r3
 8001496:	b21a      	sxth	r2, r3
 8001498:	4b10      	ldr	r3, [pc, #64]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800149a:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.last_time = HAL_GetTick();
 800149c:	f009 fdb0 	bl	800b000 <HAL_GetTick>
 80014a0:	4603      	mov	r3, r0
 80014a2:	4a0e      	ldr	r2, [pc, #56]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80014a4:	6213      	str	r3, [r2, #32]

	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 80014a6:	2300      	movs	r3, #0
 80014a8:	60fb      	str	r3, [r7, #12]
	vTaskNotifyGiveFromISR(control_input_task_handle, &xHigherPriorityTaskWoken);
 80014aa:	4b0d      	ldr	r3, [pc, #52]	@ (80014e0 <dbus_remote_ISR+0x1f8>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	f107 020c 	add.w	r2, r7, #12
 80014b2:	4611      	mov	r1, r2
 80014b4:	4618      	mov	r0, r3
 80014b6:	f017 fd85 	bl	8018fc4 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d007      	beq.n	80014d0 <dbus_remote_ISR+0x1e8>
 80014c0:	4b08      	ldr	r3, [pc, #32]	@ (80014e4 <dbus_remote_ISR+0x1fc>)
 80014c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80014c6:	601a      	str	r2, [r3, #0]
 80014c8:	f3bf 8f4f 	dsb	sy
 80014cc:	f3bf 8f6f 	isb	sy
}
 80014d0:	bf00      	nop
 80014d2:	3710      	adds	r7, #16
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}
 80014d8:	200007f4 	.word	0x200007f4
 80014dc:	20000808 	.word	0x20000808
 80014e0:	20003784 	.word	0x20003784
 80014e4:	e000ed04 	.word	0xe000ed04

080014e8 <dbus_remote_start>:
/**
 * This function starts the circular DMA for receiving on a UART port. It is specifically
 * written for the UART1 port for DBUS interface from the controller.
 */
HAL_StatusTypeDef dbus_remote_start()
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b08c      	sub	sp, #48	@ 0x30
 80014ec:	af00      	add	r7, sp, #0
	uint8_t *pData = remote_raw_data;
 80014ee:	4b4d      	ldr	r3, [pc, #308]	@ (8001624 <dbus_remote_start+0x13c>)
 80014f0:	60fb      	str	r3, [r7, #12]
	UART_HandleTypeDef *huart = &DBUS_UART;
 80014f2:	4b4d      	ldr	r3, [pc, #308]	@ (8001628 <dbus_remote_start+0x140>)
 80014f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t *tmp;

	/* Check that a Rx process is not already ongoing */
	if (huart->RxState == HAL_UART_STATE_READY) {
 80014f6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80014f8:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80014fc:	b2db      	uxtb	r3, r3
 80014fe:	2b20      	cmp	r3, #32
 8001500:	f040 808b 	bne.w	800161a <dbus_remote_start+0x132>
		if ((pData == NULL) || (REMOTE_DATA_SIZE == 0U)) {
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	2b00      	cmp	r3, #0
 8001508:	d101      	bne.n	800150e <dbus_remote_start+0x26>
			return HAL_ERROR;
 800150a:	2301      	movs	r3, #1
 800150c:	e086      	b.n	800161c <dbus_remote_start+0x134>
		}

		/* Process Locked */
		__HAL_LOCK(huart);
 800150e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001510:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001514:	2b01      	cmp	r3, #1
 8001516:	d101      	bne.n	800151c <dbus_remote_start+0x34>
 8001518:	2302      	movs	r3, #2
 800151a:	e07f      	b.n	800161c <dbus_remote_start+0x134>
 800151c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800151e:	2201      	movs	r2, #1
 8001520:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8001524:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001526:	2201      	movs	r2, #1
 8001528:	631a      	str	r2, [r3, #48]	@ 0x30
		huart->pRxBuffPtr = pData;
 800152a:	68fa      	ldr	r2, [r7, #12]
 800152c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800152e:	629a      	str	r2, [r3, #40]	@ 0x28
		huart->RxXferSize = REMOTE_DATA_SIZE;
 8001530:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001532:	2212      	movs	r2, #18
 8001534:	859a      	strh	r2, [r3, #44]	@ 0x2c

		huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001536:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001538:	2200      	movs	r2, #0
 800153a:	641a      	str	r2, [r3, #64]	@ 0x40
		huart->RxState = HAL_UART_STATE_BUSY_RX;
 800153c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800153e:	2222      	movs	r2, #34	@ 0x22
 8001540:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

		/* Set the UART DMA transfer complete callback */
		huart->hdmarx->XferCpltCallback = dbus_remote_ISR;
 8001544:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001546:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001548:	4a38      	ldr	r2, [pc, #224]	@ (800162c <dbus_remote_start+0x144>)
 800154a:	63da      	str	r2, [r3, #60]	@ 0x3c

		/* Set the DMA abort callback */
		huart->hdmarx->XferAbortCallback = NULL;
 800154c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800154e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001550:	2200      	movs	r2, #0
 8001552:	651a      	str	r2, [r3, #80]	@ 0x50

		/* Enable the DMA stream */
		tmp = (uint32_t *)&pData;
 8001554:	f107 030c 	add.w	r3, r7, #12
 8001558:	62bb      	str	r3, [r7, #40]	@ 0x28
		HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, REMOTE_DATA_SIZE);
 800155a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800155c:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800155e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	3304      	adds	r3, #4
 8001564:	4619      	mov	r1, r3
 8001566:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001568:	681a      	ldr	r2, [r3, #0]
 800156a:	2312      	movs	r3, #18
 800156c:	f00b f81c 	bl	800c5a8 <HAL_DMA_Start_IT>

		/* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
		__HAL_UART_CLEAR_OREFLAG(huart);
 8001570:	2300      	movs	r3, #0
 8001572:	60bb      	str	r3, [r7, #8]
 8001574:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	60bb      	str	r3, [r7, #8]
 800157c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	685b      	ldr	r3, [r3, #4]
 8001582:	60bb      	str	r3, [r7, #8]
 8001584:	68bb      	ldr	r3, [r7, #8]

		/* Process Unlocked */
		__HAL_UNLOCK(huart);
 8001586:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001588:	2200      	movs	r2, #0
 800158a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		/* Enable the UART Parity Error Interrupt */
		SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800158e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	68da      	ldr	r2, [r3, #12]
 8001594:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800159c:	60da      	str	r2, [r3, #12]

		/* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
		SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800159e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	695a      	ldr	r2, [r3, #20]
 80015a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	f042 0201 	orr.w	r2, r2, #1
 80015ac:	615a      	str	r2, [r3, #20]

		/* Enable the DMA transfer for the receiver request by setting the DMAR bit
		in the UART CR3 register */
		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80015ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	695a      	ldr	r2, [r3, #20]
 80015b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80015bc:	615a      	str	r2, [r3, #20]

		if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80015be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015c2:	2b01      	cmp	r3, #1
 80015c4:	d125      	bne.n	8001612 <dbus_remote_start+0x12a>
		{
			__HAL_UART_CLEAR_IDLEFLAG(huart);
 80015c6:	2300      	movs	r3, #0
 80015c8:	607b      	str	r3, [r7, #4]
 80015ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	607b      	str	r3, [r7, #4]
 80015d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	685b      	ldr	r3, [r3, #4]
 80015d8:	607b      	str	r3, [r7, #4]
 80015da:	687b      	ldr	r3, [r7, #4]
			ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80015dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	330c      	adds	r3, #12
 80015e2:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80015e4:	697b      	ldr	r3, [r7, #20]
 80015e6:	e853 3f00 	ldrex	r3, [r3]
 80015ea:	613b      	str	r3, [r7, #16]
   return(result);
 80015ec:	693b      	ldr	r3, [r7, #16]
 80015ee:	f043 0310 	orr.w	r3, r3, #16
 80015f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015f4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	330c      	adds	r3, #12
 80015fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015fc:	623a      	str	r2, [r7, #32]
 80015fe:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001600:	69f9      	ldr	r1, [r7, #28]
 8001602:	6a3a      	ldr	r2, [r7, #32]
 8001604:	e841 2300 	strex	r3, r2, [r1]
 8001608:	61bb      	str	r3, [r7, #24]
   return(result);
 800160a:	69bb      	ldr	r3, [r7, #24]
 800160c:	2b00      	cmp	r3, #0
 800160e:	d1e5      	bne.n	80015dc <dbus_remote_start+0xf4>
 8001610:	e001      	b.n	8001616 <dbus_remote_start+0x12e>
		{
			/* In case of errors already pending when reception is started,
			   Interrupts may have already been raised and lead to reception abortion.
			   (Overrun error for instance).
			   In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
			return HAL_ERROR;
 8001612:	2301      	movs	r3, #1
 8001614:	e002      	b.n	800161c <dbus_remote_start+0x134>
		}
		return HAL_OK;
 8001616:	2300      	movs	r3, #0
 8001618:	e000      	b.n	800161c <dbus_remote_start+0x134>
	} else {
		return HAL_BUSY;
 800161a:	2302      	movs	r3, #2
	}
}
 800161c:	4618      	mov	r0, r3
 800161e:	3730      	adds	r7, #48	@ 0x30
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	200007f4 	.word	0x200007f4
 8001628:	20001c2c 	.word	0x20001c2c
 800162c:	080012e9 	.word	0x080012e9

08001630 <laser_on>:
 8001630:	b580      	push	{r7, lr}
 8001632:	af00      	add	r7, sp, #0
 8001634:	2200      	movs	r2, #0
 8001636:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800163a:	4802      	ldr	r0, [pc, #8]	@ (8001644 <laser_on+0x14>)
 800163c:	f00b fcb0 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001640:	bf00      	nop
 8001642:	bd80      	pop	{r7, pc}
 8001644:	40020800 	.word	0x40020800

08001648 <laser_off>:
 8001648:	b580      	push	{r7, lr}
 800164a:	af00      	add	r7, sp, #0
 800164c:	2200      	movs	r2, #0
 800164e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001652:	4802      	ldr	r0, [pc, #8]	@ (800165c <laser_off+0x14>)
 8001654:	f00b fca4 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001658:	bf00      	nop
 800165a:	bd80      	pop	{r7, pc}
 800165c:	40020800 	.word	0x40020800

08001660 <hall_disable>:
void hall_enable(){
	hall_state = HALL_ON;
	  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
}

void hall_disable(){
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
	hall_state = HALL_OFF;
 8001664:	4b03      	ldr	r3, [pc, #12]	@ (8001674 <hall_disable+0x14>)
 8001666:	2201      	movs	r2, #1
 8001668:	701a      	strb	r2, [r3, #0]
	HAL_NVIC_DisableIRQ(EXTI15_10_IRQn);
 800166a:	2028      	movs	r0, #40	@ 0x28
 800166c:	f00a fee0 	bl	800c430 <HAL_NVIC_DisableIRQ>
}
 8001670:	bf00      	nop
 8001672:	bd80      	pop	{r7, pc}
 8001674:	20000003 	.word	0x20000003

08001678 <hall_int>:


void hall_int(){
 8001678:	b580      	push	{r7, lr}
 800167a:	b082      	sub	sp, #8
 800167c:	af00      	add	r7, sp, #0
	static int32_t prev_tick;
	uint8_t curr_state = (GPIOE->IDR & GPIO_PIN_11) ? 1 : 0;
 800167e:	4b21      	ldr	r3, [pc, #132]	@ (8001704 <hall_int+0x8c>)
 8001680:	691b      	ldr	r3, [r3, #16]
 8001682:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001686:	2b00      	cmp	r3, #0
 8001688:	bf14      	ite	ne
 800168a:	2301      	movne	r3, #1
 800168c:	2300      	moveq	r3, #0
 800168e:	b2db      	uxtb	r3, r3
 8001690:	71fb      	strb	r3, [r7, #7]
	if (curr_state & GPIO_PIN_11){
 8001692:	79fb      	ldrb	r3, [r7, #7]
 8001694:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001698:	2b00      	cmp	r3, #0
 800169a:	d12e      	bne.n	80016fa <hall_int+0x82>
		//current state and previous state are the same, do nothing
		return;
	}
	if (hall_state == HALL_ON){
 800169c:	4b1a      	ldr	r3, [pc, #104]	@ (8001708 <hall_int+0x90>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d127      	bne.n	80016f4 <hall_int+0x7c>
	//assume hall sensor has changed state
		switch (curr_state){
 80016a4:	79fb      	ldrb	r3, [r7, #7]
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d009      	beq.n	80016be <hall_int+0x46>
 80016aa:	2b01      	cmp	r3, #1
 80016ac:	d11b      	bne.n	80016e6 <hall_int+0x6e>
		case HALL_OFF:
			//hall went from on to off
			//motor just brushed past
			prev_tick = g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks;
 80016ae:	4b17      	ldr	r3, [pc, #92]	@ (800170c <hall_int+0x94>)
 80016b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016b4:	f8d3 3268 	ldr.w	r3, [r3, #616]	@ 0x268
 80016b8:	4a15      	ldr	r2, [pc, #84]	@ (8001710 <hall_int+0x98>)
 80016ba:	6013      	str	r3, [r2, #0]

			break;
 80016bc:	e016      	b.n	80016ec <hall_int+0x74>
		case HALL_ON:
			//hall went from off to on
			//yaw motor just let goo
			g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks = (g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks-prev_tick)/2 ;
 80016be:	4b13      	ldr	r3, [pc, #76]	@ (800170c <hall_int+0x94>)
 80016c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016c4:	f8d3 2268 	ldr.w	r2, [r3, #616]	@ 0x268
 80016c8:	4b11      	ldr	r3, [pc, #68]	@ (8001710 <hall_int+0x98>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	1ad3      	subs	r3, r2, r3
 80016ce:	0fda      	lsrs	r2, r3, #31
 80016d0:	4413      	add	r3, r2
 80016d2:	105b      	asrs	r3, r3, #1
 80016d4:	461a      	mov	r2, r3
 80016d6:	4b0d      	ldr	r3, [pc, #52]	@ (800170c <hall_int+0x94>)
 80016d8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016dc:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
			//sensor is done, turn it off
			hall_disable();
 80016e0:	f7ff ffbe 	bl	8001660 <hall_disable>
			break;
 80016e4:	e002      	b.n	80016ec <hall_int+0x74>

		default:
			prev_state = 1;
 80016e6:	4b0b      	ldr	r3, [pc, #44]	@ (8001714 <hall_int+0x9c>)
 80016e8:	2201      	movs	r2, #1
 80016ea:	701a      	strb	r2, [r3, #0]
		}
		prev_state = curr_state;
 80016ec:	4a09      	ldr	r2, [pc, #36]	@ (8001714 <hall_int+0x9c>)
 80016ee:	79fb      	ldrb	r3, [r7, #7]
 80016f0:	7013      	strb	r3, [r2, #0]
		return;
 80016f2:	e003      	b.n	80016fc <hall_int+0x84>
	} else{
		hall_disable();
 80016f4:	f7ff ffb4 	bl	8001660 <hall_disable>
		return;
 80016f8:	e000      	b.n	80016fc <hall_int+0x84>
		return;
 80016fa:	bf00      	nop
	}
}
 80016fc:	3708      	adds	r7, #8
 80016fe:	46bd      	mov	sp, r7
 8001700:	bd80      	pop	{r7, pc}
 8001702:	bf00      	nop
 8001704:	40021000 	.word	0x40021000
 8001708:	20000003 	.word	0x20000003
 800170c:	20001e48 	.word	0x20001e48
 8001710:	2000082c 	.word	0x2000082c
 8001714:	20000002 	.word	0x20000002

08001718 <__NVIC_SystemReset>:
 8001718:	b480      	push	{r7}
 800171a:	af00      	add	r7, sp, #0
 800171c:	f3bf 8f4f 	dsb	sy
 8001720:	bf00      	nop
 8001722:	4b06      	ldr	r3, [pc, #24]	@ (800173c <__NVIC_SystemReset+0x24>)
 8001724:	68db      	ldr	r3, [r3, #12]
 8001726:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800172a:	4904      	ldr	r1, [pc, #16]	@ (800173c <__NVIC_SystemReset+0x24>)
 800172c:	4b04      	ldr	r3, [pc, #16]	@ (8001740 <__NVIC_SystemReset+0x28>)
 800172e:	4313      	orrs	r3, r2
 8001730:	60cb      	str	r3, [r1, #12]
 8001732:	f3bf 8f4f 	dsb	sy
 8001736:	bf00      	nop
 8001738:	bf00      	nop
 800173a:	e7fd      	b.n	8001738 <__NVIC_SystemReset+0x20>
 800173c:	e000ed00 	.word	0xe000ed00
 8001740:	05fa0004 	.word	0x05fa0004

08001744 <gyro_write_byte>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b086      	sub	sp, #24
 8001748:	af02      	add	r7, sp, #8
 800174a:	4603      	mov	r3, r0
 800174c:	460a      	mov	r2, r1
 800174e:	71fb      	strb	r3, [r7, #7]
 8001750:	4613      	mov	r3, r2
 8001752:	71bb      	strb	r3, [r7, #6]
 8001754:	2200      	movs	r2, #0
 8001756:	2101      	movs	r1, #1
 8001758:	4811      	ldr	r0, [pc, #68]	@ (80017a0 <gyro_write_byte+0x5c>)
 800175a:	f00b fc21 	bl	800cfa0 <HAL_GPIO_WritePin>
 800175e:	79fb      	ldrb	r3, [r7, #7]
 8001760:	73fb      	strb	r3, [r7, #15]
 8001762:	f107 020e 	add.w	r2, r7, #14
 8001766:	f107 010f 	add.w	r1, r7, #15
 800176a:	2364      	movs	r3, #100	@ 0x64
 800176c:	9300      	str	r3, [sp, #0]
 800176e:	2301      	movs	r3, #1
 8001770:	480c      	ldr	r0, [pc, #48]	@ (80017a4 <gyro_write_byte+0x60>)
 8001772:	f00f fa9d 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 8001776:	79bb      	ldrb	r3, [r7, #6]
 8001778:	73fb      	strb	r3, [r7, #15]
 800177a:	f107 020e 	add.w	r2, r7, #14
 800177e:	f107 010f 	add.w	r1, r7, #15
 8001782:	2364      	movs	r3, #100	@ 0x64
 8001784:	9300      	str	r3, [sp, #0]
 8001786:	2301      	movs	r3, #1
 8001788:	4806      	ldr	r0, [pc, #24]	@ (80017a4 <gyro_write_byte+0x60>)
 800178a:	f00f fa91 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 800178e:	2201      	movs	r2, #1
 8001790:	2101      	movs	r1, #1
 8001792:	4803      	ldr	r0, [pc, #12]	@ (80017a0 <gyro_write_byte+0x5c>)
 8001794:	f00b fc04 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001798:	bf00      	nop
 800179a:	3710      	adds	r7, #16
 800179c:	46bd      	mov	sp, r7
 800179e:	bd80      	pop	{r7, pc}
 80017a0:	40020400 	.word	0x40020400
 80017a4:	20001964 	.word	0x20001964

080017a8 <gyro_read_byte>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b086      	sub	sp, #24
 80017ac:	af02      	add	r7, sp, #8
 80017ae:	4603      	mov	r3, r0
 80017b0:	71fb      	strb	r3, [r7, #7]
 80017b2:	2200      	movs	r2, #0
 80017b4:	2101      	movs	r1, #1
 80017b6:	4811      	ldr	r0, [pc, #68]	@ (80017fc <gyro_read_byte+0x54>)
 80017b8:	f00b fbf2 	bl	800cfa0 <HAL_GPIO_WritePin>
 80017bc:	79fb      	ldrb	r3, [r7, #7]
 80017be:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80017c2:	b2db      	uxtb	r3, r3
 80017c4:	73bb      	strb	r3, [r7, #14]
 80017c6:	f107 020f 	add.w	r2, r7, #15
 80017ca:	f107 010e 	add.w	r1, r7, #14
 80017ce:	2364      	movs	r3, #100	@ 0x64
 80017d0:	9300      	str	r3, [sp, #0]
 80017d2:	2301      	movs	r3, #1
 80017d4:	480a      	ldr	r0, [pc, #40]	@ (8001800 <gyro_read_byte+0x58>)
 80017d6:	f00f fa6b 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 80017da:	f107 010f 	add.w	r1, r7, #15
 80017de:	2364      	movs	r3, #100	@ 0x64
 80017e0:	2201      	movs	r2, #1
 80017e2:	4807      	ldr	r0, [pc, #28]	@ (8001800 <gyro_read_byte+0x58>)
 80017e4:	f00f f953 	bl	8010a8e <HAL_SPI_Receive>
 80017e8:	2201      	movs	r2, #1
 80017ea:	2101      	movs	r1, #1
 80017ec:	4803      	ldr	r0, [pc, #12]	@ (80017fc <gyro_read_byte+0x54>)
 80017ee:	f00b fbd7 	bl	800cfa0 <HAL_GPIO_WritePin>
 80017f2:	7bfb      	ldrb	r3, [r7, #15]
 80017f4:	4618      	mov	r0, r3
 80017f6:	3710      	adds	r7, #16
 80017f8:	46bd      	mov	sp, r7
 80017fa:	bd80      	pop	{r7, pc}
 80017fc:	40020400 	.word	0x40020400
 8001800:	20001964 	.word	0x20001964

08001804 <gyro_read_bytes>:
 8001804:	b580      	push	{r7, lr}
 8001806:	b086      	sub	sp, #24
 8001808:	af02      	add	r7, sp, #8
 800180a:	4603      	mov	r3, r0
 800180c:	6039      	str	r1, [r7, #0]
 800180e:	71fb      	strb	r3, [r7, #7]
 8001810:	4613      	mov	r3, r2
 8001812:	71bb      	strb	r3, [r7, #6]
 8001814:	2200      	movs	r2, #0
 8001816:	2101      	movs	r1, #1
 8001818:	4811      	ldr	r0, [pc, #68]	@ (8001860 <gyro_read_bytes+0x5c>)
 800181a:	f00b fbc1 	bl	800cfa0 <HAL_GPIO_WritePin>
 800181e:	79fb      	ldrb	r3, [r7, #7]
 8001820:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001824:	b2db      	uxtb	r3, r3
 8001826:	73fb      	strb	r3, [r7, #15]
 8001828:	f107 020e 	add.w	r2, r7, #14
 800182c:	f107 010f 	add.w	r1, r7, #15
 8001830:	2364      	movs	r3, #100	@ 0x64
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	2301      	movs	r3, #1
 8001836:	480b      	ldr	r0, [pc, #44]	@ (8001864 <gyro_read_bytes+0x60>)
 8001838:	f00f fa3a 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 800183c:	79bb      	ldrb	r3, [r7, #6]
 800183e:	b29a      	uxth	r2, r3
 8001840:	2364      	movs	r3, #100	@ 0x64
 8001842:	6839      	ldr	r1, [r7, #0]
 8001844:	4807      	ldr	r0, [pc, #28]	@ (8001864 <gyro_read_bytes+0x60>)
 8001846:	f00f f922 	bl	8010a8e <HAL_SPI_Receive>
 800184a:	2201      	movs	r2, #1
 800184c:	2101      	movs	r1, #1
 800184e:	4804      	ldr	r0, [pc, #16]	@ (8001860 <gyro_read_bytes+0x5c>)
 8001850:	f00b fba6 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001854:	2300      	movs	r3, #0
 8001856:	4618      	mov	r0, r3
 8001858:	3710      	adds	r7, #16
 800185a:	46bd      	mov	sp, r7
 800185c:	bd80      	pop	{r7, pc}
 800185e:	bf00      	nop
 8001860:	40020400 	.word	0x40020400
 8001864:	20001964 	.word	0x20001964

08001868 <accel_write_byte>:
 8001868:	b580      	push	{r7, lr}
 800186a:	b086      	sub	sp, #24
 800186c:	af02      	add	r7, sp, #8
 800186e:	4603      	mov	r3, r0
 8001870:	460a      	mov	r2, r1
 8001872:	71fb      	strb	r3, [r7, #7]
 8001874:	4613      	mov	r3, r2
 8001876:	71bb      	strb	r3, [r7, #6]
 8001878:	2200      	movs	r2, #0
 800187a:	2110      	movs	r1, #16
 800187c:	4811      	ldr	r0, [pc, #68]	@ (80018c4 <accel_write_byte+0x5c>)
 800187e:	f00b fb8f 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001882:	79fb      	ldrb	r3, [r7, #7]
 8001884:	73fb      	strb	r3, [r7, #15]
 8001886:	f107 020e 	add.w	r2, r7, #14
 800188a:	f107 010f 	add.w	r1, r7, #15
 800188e:	2364      	movs	r3, #100	@ 0x64
 8001890:	9300      	str	r3, [sp, #0]
 8001892:	2301      	movs	r3, #1
 8001894:	480c      	ldr	r0, [pc, #48]	@ (80018c8 <accel_write_byte+0x60>)
 8001896:	f00f fa0b 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 800189a:	79bb      	ldrb	r3, [r7, #6]
 800189c:	73fb      	strb	r3, [r7, #15]
 800189e:	f107 020e 	add.w	r2, r7, #14
 80018a2:	f107 010f 	add.w	r1, r7, #15
 80018a6:	2364      	movs	r3, #100	@ 0x64
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	2301      	movs	r3, #1
 80018ac:	4806      	ldr	r0, [pc, #24]	@ (80018c8 <accel_write_byte+0x60>)
 80018ae:	f00f f9ff 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 80018b2:	2201      	movs	r2, #1
 80018b4:	2110      	movs	r1, #16
 80018b6:	4803      	ldr	r0, [pc, #12]	@ (80018c4 <accel_write_byte+0x5c>)
 80018b8:	f00b fb72 	bl	800cfa0 <HAL_GPIO_WritePin>
 80018bc:	bf00      	nop
 80018be:	3710      	adds	r7, #16
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bd80      	pop	{r7, pc}
 80018c4:	40020000 	.word	0x40020000
 80018c8:	20001964 	.word	0x20001964

080018cc <accel_read_byte>:
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b086      	sub	sp, #24
 80018d0:	af02      	add	r7, sp, #8
 80018d2:	4603      	mov	r3, r0
 80018d4:	71fb      	strb	r3, [r7, #7]
 80018d6:	2200      	movs	r2, #0
 80018d8:	2110      	movs	r1, #16
 80018da:	4816      	ldr	r0, [pc, #88]	@ (8001934 <accel_read_byte+0x68>)
 80018dc:	f00b fb60 	bl	800cfa0 <HAL_GPIO_WritePin>
 80018e0:	79fb      	ldrb	r3, [r7, #7]
 80018e2:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80018e6:	b2db      	uxtb	r3, r3
 80018e8:	73fb      	strb	r3, [r7, #15]
 80018ea:	f107 020e 	add.w	r2, r7, #14
 80018ee:	f107 010f 	add.w	r1, r7, #15
 80018f2:	2364      	movs	r3, #100	@ 0x64
 80018f4:	9300      	str	r3, [sp, #0]
 80018f6:	2301      	movs	r3, #1
 80018f8:	480f      	ldr	r0, [pc, #60]	@ (8001938 <accel_read_byte+0x6c>)
 80018fa:	f00f f9d9 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 80018fe:	2355      	movs	r3, #85	@ 0x55
 8001900:	73fb      	strb	r3, [r7, #15]
 8001902:	f107 010e 	add.w	r1, r7, #14
 8001906:	2364      	movs	r3, #100	@ 0x64
 8001908:	2201      	movs	r2, #1
 800190a:	480b      	ldr	r0, [pc, #44]	@ (8001938 <accel_read_byte+0x6c>)
 800190c:	f00f f8bf 	bl	8010a8e <HAL_SPI_Receive>
 8001910:	f107 010e 	add.w	r1, r7, #14
 8001914:	2364      	movs	r3, #100	@ 0x64
 8001916:	2201      	movs	r2, #1
 8001918:	4807      	ldr	r0, [pc, #28]	@ (8001938 <accel_read_byte+0x6c>)
 800191a:	f00f f8b8 	bl	8010a8e <HAL_SPI_Receive>
 800191e:	2201      	movs	r2, #1
 8001920:	2110      	movs	r1, #16
 8001922:	4804      	ldr	r0, [pc, #16]	@ (8001934 <accel_read_byte+0x68>)
 8001924:	f00b fb3c 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001928:	7bbb      	ldrb	r3, [r7, #14]
 800192a:	4618      	mov	r0, r3
 800192c:	3710      	adds	r7, #16
 800192e:	46bd      	mov	sp, r7
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	40020000 	.word	0x40020000
 8001938:	20001964 	.word	0x20001964

0800193c <accel_read_bytes>:
 800193c:	b580      	push	{r7, lr}
 800193e:	b086      	sub	sp, #24
 8001940:	af02      	add	r7, sp, #8
 8001942:	4603      	mov	r3, r0
 8001944:	6039      	str	r1, [r7, #0]
 8001946:	71fb      	strb	r3, [r7, #7]
 8001948:	4613      	mov	r3, r2
 800194a:	71bb      	strb	r3, [r7, #6]
 800194c:	2200      	movs	r2, #0
 800194e:	2110      	movs	r1, #16
 8001950:	4814      	ldr	r0, [pc, #80]	@ (80019a4 <accel_read_bytes+0x68>)
 8001952:	f00b fb25 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001956:	79fb      	ldrb	r3, [r7, #7]
 8001958:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800195c:	b2db      	uxtb	r3, r3
 800195e:	73fb      	strb	r3, [r7, #15]
 8001960:	f107 020e 	add.w	r2, r7, #14
 8001964:	f107 010f 	add.w	r1, r7, #15
 8001968:	2364      	movs	r3, #100	@ 0x64
 800196a:	9300      	str	r3, [sp, #0]
 800196c:	2301      	movs	r3, #1
 800196e:	480e      	ldr	r0, [pc, #56]	@ (80019a8 <accel_read_bytes+0x6c>)
 8001970:	f00f f99e 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 8001974:	f107 010e 	add.w	r1, r7, #14
 8001978:	2364      	movs	r3, #100	@ 0x64
 800197a:	2201      	movs	r2, #1
 800197c:	480a      	ldr	r0, [pc, #40]	@ (80019a8 <accel_read_bytes+0x6c>)
 800197e:	f00f f886 	bl	8010a8e <HAL_SPI_Receive>
 8001982:	79bb      	ldrb	r3, [r7, #6]
 8001984:	b29a      	uxth	r2, r3
 8001986:	2364      	movs	r3, #100	@ 0x64
 8001988:	6839      	ldr	r1, [r7, #0]
 800198a:	4807      	ldr	r0, [pc, #28]	@ (80019a8 <accel_read_bytes+0x6c>)
 800198c:	f00f f87f 	bl	8010a8e <HAL_SPI_Receive>
 8001990:	2201      	movs	r2, #1
 8001992:	2110      	movs	r1, #16
 8001994:	4803      	ldr	r0, [pc, #12]	@ (80019a4 <accel_read_bytes+0x68>)
 8001996:	f00b fb03 	bl	800cfa0 <HAL_GPIO_WritePin>
 800199a:	2300      	movs	r3, #0
 800199c:	4618      	mov	r0, r3
 800199e:	3710      	adds	r7, #16
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bd80      	pop	{r7, pc}
 80019a4:	40020000 	.word	0x40020000
 80019a8:	20001964 	.word	0x20001964

080019ac <gyro_init>:
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b082      	sub	sp, #8
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	21b6      	movs	r1, #182	@ 0xb6
 80019b4:	2014      	movs	r0, #20
 80019b6:	f7ff fec5 	bl	8001744 <gyro_write_byte>
 80019ba:	200a      	movs	r0, #10
 80019bc:	f009 fb2c 	bl	800b018 <HAL_Delay>
 80019c0:	2100      	movs	r1, #0
 80019c2:	2011      	movs	r0, #17
 80019c4:	f7ff febe 	bl	8001744 <gyro_write_byte>
 80019c8:	2002      	movs	r0, #2
 80019ca:	f009 fb25 	bl	800b018 <HAL_Delay>
 80019ce:	2000      	movs	r0, #0
 80019d0:	f7ff feea 	bl	80017a8 <gyro_read_byte>
 80019d4:	4603      	mov	r3, r0
 80019d6:	80fb      	strh	r3, [r7, #6]
 80019d8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80019dc:	2b0f      	cmp	r3, #15
 80019de:	d001      	beq.n	80019e4 <gyro_init+0x38>
 80019e0:	f7ff fe9a 	bl	8001718 <__NVIC_SystemReset>
 80019e4:	2002      	movs	r0, #2
 80019e6:	f009 fb17 	bl	800b018 <HAL_Delay>
 80019ea:	2102      	movs	r1, #2
 80019ec:	200f      	movs	r0, #15
 80019ee:	f7ff fea9 	bl	8001744 <gyro_write_byte>
 80019f2:	2002      	movs	r0, #2
 80019f4:	f009 fb10 	bl	800b018 <HAL_Delay>
 80019f8:	2181      	movs	r1, #129	@ 0x81
 80019fa:	2010      	movs	r0, #16
 80019fc:	f7ff fea2 	bl	8001744 <gyro_write_byte>
 8001a00:	2002      	movs	r0, #2
 8001a02:	f009 fb09 	bl	800b018 <HAL_Delay>
 8001a06:	2101      	movs	r1, #1
 8001a08:	2016      	movs	r0, #22
 8001a0a:	f7ff fe9b 	bl	8001744 <gyro_write_byte>
 8001a0e:	2002      	movs	r0, #2
 8001a10:	f009 fb02 	bl	800b018 <HAL_Delay>
 8001a14:	2101      	movs	r1, #1
 8001a16:	2018      	movs	r0, #24
 8001a18:	f7ff fe94 	bl	8001744 <gyro_write_byte>
 8001a1c:	2002      	movs	r0, #2
 8001a1e:	f009 fafb 	bl	800b018 <HAL_Delay>
 8001a22:	2300      	movs	r3, #0
 8001a24:	4618      	mov	r0, r3
 8001a26:	3708      	adds	r7, #8
 8001a28:	46bd      	mov	sp, r7
 8001a2a:	bd80      	pop	{r7, pc}

08001a2c <accel_init>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b082      	sub	sp, #8
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	2000      	movs	r0, #0
 8001a34:	f7ff ff4a 	bl	80018cc <accel_read_byte>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	71fb      	strb	r3, [r7, #7]
 8001a3c:	2002      	movs	r0, #2
 8001a3e:	f009 faeb 	bl	800b018 <HAL_Delay>
 8001a42:	2000      	movs	r0, #0
 8001a44:	f7ff ff42 	bl	80018cc <accel_read_byte>
 8001a48:	4603      	mov	r3, r0
 8001a4a:	71fb      	strb	r3, [r7, #7]
 8001a4c:	2002      	movs	r0, #2
 8001a4e:	f009 fae3 	bl	800b018 <HAL_Delay>
 8001a52:	21b6      	movs	r1, #182	@ 0xb6
 8001a54:	207e      	movs	r0, #126	@ 0x7e
 8001a56:	f7ff ff07 	bl	8001868 <accel_write_byte>
 8001a5a:	200a      	movs	r0, #10
 8001a5c:	f009 fadc 	bl	800b018 <HAL_Delay>
 8001a60:	2000      	movs	r0, #0
 8001a62:	f7ff ff33 	bl	80018cc <accel_read_byte>
 8001a66:	4603      	mov	r3, r0
 8001a68:	71fb      	strb	r3, [r7, #7]
 8001a6a:	2002      	movs	r0, #2
 8001a6c:	f009 fad4 	bl	800b018 <HAL_Delay>
 8001a70:	2000      	movs	r0, #0
 8001a72:	f7ff ff2b 	bl	80018cc <accel_read_byte>
 8001a76:	4603      	mov	r3, r0
 8001a78:	71fb      	strb	r3, [r7, #7]
 8001a7a:	2002      	movs	r0, #2
 8001a7c:	f009 facc 	bl	800b018 <HAL_Delay>
 8001a80:	79fb      	ldrb	r3, [r7, #7]
 8001a82:	2b1e      	cmp	r3, #30
 8001a84:	d001      	beq.n	8001a8a <accel_init+0x5e>
 8001a86:	2301      	movs	r3, #1
 8001a88:	e023      	b.n	8001ad2 <accel_init+0xa6>
 8001a8a:	2104      	movs	r1, #4
 8001a8c:	207d      	movs	r0, #125	@ 0x7d
 8001a8e:	f7ff feeb 	bl	8001868 <accel_write_byte>
 8001a92:	2002      	movs	r0, #2
 8001a94:	f009 fac0 	bl	800b018 <HAL_Delay>
 8001a98:	2100      	movs	r1, #0
 8001a9a:	207c      	movs	r0, #124	@ 0x7c
 8001a9c:	f7ff fee4 	bl	8001868 <accel_write_byte>
 8001aa0:	2002      	movs	r0, #2
 8001aa2:	f009 fab9 	bl	800b018 <HAL_Delay>
 8001aa6:	21a9      	movs	r1, #169	@ 0xa9
 8001aa8:	2040      	movs	r0, #64	@ 0x40
 8001aaa:	f7ff fedd 	bl	8001868 <accel_write_byte>
 8001aae:	2002      	movs	r0, #2
 8001ab0:	f009 fab2 	bl	800b018 <HAL_Delay>
 8001ab4:	2101      	movs	r1, #1
 8001ab6:	2041      	movs	r0, #65	@ 0x41
 8001ab8:	f7ff fed6 	bl	8001868 <accel_write_byte>
 8001abc:	2002      	movs	r0, #2
 8001abe:	f009 faab 	bl	800b018 <HAL_Delay>
 8001ac2:	2108      	movs	r1, #8
 8001ac4:	2053      	movs	r0, #83	@ 0x53
 8001ac6:	f7ff fecf 	bl	8001868 <accel_write_byte>
 8001aca:	2002      	movs	r0, #2
 8001acc:	f009 faa4 	bl	800b018 <HAL_Delay>
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	3708      	adds	r7, #8
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	bd80      	pop	{r7, pc}
	...

08001adc <mag_read_single_reg>:
 8001adc:	b580      	push	{r7, lr}
 8001ade:	b088      	sub	sp, #32
 8001ae0:	af04      	add	r7, sp, #16
 8001ae2:	4603      	mov	r3, r0
 8001ae4:	71fb      	strb	r3, [r7, #7]
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	73fb      	strb	r3, [r7, #15]
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	b29a      	uxth	r2, r3
 8001aee:	2305      	movs	r3, #5
 8001af0:	9302      	str	r3, [sp, #8]
 8001af2:	2301      	movs	r3, #1
 8001af4:	9301      	str	r3, [sp, #4]
 8001af6:	f107 030f 	add.w	r3, r7, #15
 8001afa:	9300      	str	r3, [sp, #0]
 8001afc:	2301      	movs	r3, #1
 8001afe:	211c      	movs	r1, #28
 8001b00:	4803      	ldr	r0, [pc, #12]	@ (8001b10 <mag_read_single_reg+0x34>)
 8001b02:	f00b fcbd 	bl	800d480 <HAL_I2C_Mem_Read>
 8001b06:	7bfb      	ldrb	r3, [r7, #15]
 8001b08:	4618      	mov	r0, r3
 8001b0a:	3710      	adds	r7, #16
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	bd80      	pop	{r7, pc}
 8001b10:	20001840 	.word	0x20001840

08001b14 <mag_write_single_reg>:
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b086      	sub	sp, #24
 8001b18:	af04      	add	r7, sp, #16
 8001b1a:	4603      	mov	r3, r0
 8001b1c:	460a      	mov	r2, r1
 8001b1e:	71fb      	strb	r3, [r7, #7]
 8001b20:	4613      	mov	r3, r2
 8001b22:	71bb      	strb	r3, [r7, #6]
 8001b24:	79fb      	ldrb	r3, [r7, #7]
 8001b26:	b29a      	uxth	r2, r3
 8001b28:	2305      	movs	r3, #5
 8001b2a:	9302      	str	r3, [sp, #8]
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	9301      	str	r3, [sp, #4]
 8001b30:	1dbb      	adds	r3, r7, #6
 8001b32:	9300      	str	r3, [sp, #0]
 8001b34:	2301      	movs	r3, #1
 8001b36:	211c      	movs	r1, #28
 8001b38:	4803      	ldr	r0, [pc, #12]	@ (8001b48 <mag_write_single_reg+0x34>)
 8001b3a:	f00b fba7 	bl	800d28c <HAL_I2C_Mem_Write>
 8001b3e:	bf00      	nop
 8001b40:	3708      	adds	r7, #8
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	20001840 	.word	0x20001840

08001b4c <mag_read_multi_reg_dma>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b084      	sub	sp, #16
 8001b50:	af02      	add	r7, sp, #8
 8001b52:	4603      	mov	r3, r0
 8001b54:	603a      	str	r2, [r7, #0]
 8001b56:	71fb      	strb	r3, [r7, #7]
 8001b58:	460b      	mov	r3, r1
 8001b5a:	80bb      	strh	r3, [r7, #4]
 8001b5c:	79fb      	ldrb	r3, [r7, #7]
 8001b5e:	b29a      	uxth	r2, r3
 8001b60:	88bb      	ldrh	r3, [r7, #4]
 8001b62:	9301      	str	r3, [sp, #4]
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	9300      	str	r3, [sp, #0]
 8001b68:	2301      	movs	r3, #1
 8001b6a:	211c      	movs	r1, #28
 8001b6c:	4803      	ldr	r0, [pc, #12]	@ (8001b7c <mag_read_multi_reg_dma+0x30>)
 8001b6e:	f00b fead 	bl	800d8cc <HAL_I2C_Mem_Read_DMA>
 8001b72:	bf00      	nop
 8001b74:	3708      	adds	r7, #8
 8001b76:	46bd      	mov	sp, r7
 8001b78:	bd80      	pop	{r7, pc}
 8001b7a:	bf00      	nop
 8001b7c:	20001840 	.word	0x20001840

08001b80 <imu_init>:
 8001b80:	b580      	push	{r7, lr}
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	2200      	movs	r2, #0
 8001b86:	2110      	movs	r1, #16
 8001b88:	480e      	ldr	r0, [pc, #56]	@ (8001bc4 <imu_init+0x44>)
 8001b8a:	f00b fa09 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001b8e:	2200      	movs	r2, #0
 8001b90:	2101      	movs	r1, #1
 8001b92:	480d      	ldr	r0, [pc, #52]	@ (8001bc8 <imu_init+0x48>)
 8001b94:	f00b fa04 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001b98:	2064      	movs	r0, #100	@ 0x64
 8001b9a:	f009 fa3d 	bl	800b018 <HAL_Delay>
 8001b9e:	2201      	movs	r2, #1
 8001ba0:	2110      	movs	r1, #16
 8001ba2:	4808      	ldr	r0, [pc, #32]	@ (8001bc4 <imu_init+0x44>)
 8001ba4:	f00b f9fc 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001ba8:	2201      	movs	r2, #1
 8001baa:	2101      	movs	r1, #1
 8001bac:	4806      	ldr	r0, [pc, #24]	@ (8001bc8 <imu_init+0x48>)
 8001bae:	f00b f9f7 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001bb2:	f7ff fefb 	bl	80019ac <gyro_init>
 8001bb6:	f7ff ff39 	bl	8001a2c <accel_init>
 8001bba:	f000 f905 	bl	8001dc8 <ist8310_init>
 8001bbe:	bf00      	nop
 8001bc0:	bd80      	pop	{r7, pc}
 8001bc2:	bf00      	nop
 8001bc4:	40020000 	.word	0x40020000
 8001bc8:	40020400 	.word	0x40020400

08001bcc <imu_start_ints>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	2180      	movs	r1, #128	@ 0x80
 8001bd2:	2015      	movs	r0, #21
 8001bd4:	f7ff fdb6 	bl	8001744 <gyro_write_byte>
 8001bd8:	200a      	movs	r0, #10
 8001bda:	f016 fbd7 	bl	801838c <vTaskDelay>
 8001bde:	2104      	movs	r1, #4
 8001be0:	2058      	movs	r0, #88	@ 0x58
 8001be2:	f7ff fe41 	bl	8001868 <accel_write_byte>
 8001be6:	200a      	movs	r0, #10
 8001be8:	f016 fbd0 	bl	801838c <vTaskDelay>
 8001bec:	2108      	movs	r1, #8
 8001bee:	200b      	movs	r0, #11
 8001bf0:	f7ff ff90 	bl	8001b14 <mag_write_single_reg>
 8001bf4:	4b02      	ldr	r3, [pc, #8]	@ (8001c00 <imu_start_ints+0x34>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	701a      	strb	r2, [r3, #0]
 8001bfa:	bf00      	nop
 8001bfc:	bd80      	pop	{r7, pc}
 8001bfe:	bf00      	nop
 8001c00:	20000880 	.word	0x20000880

08001c04 <accel_get_data>:
 8001c04:	b580      	push	{r7, lr}
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	2206      	movs	r2, #6
 8001c0a:	4903      	ldr	r1, [pc, #12]	@ (8001c18 <accel_get_data+0x14>)
 8001c0c:	2012      	movs	r0, #18
 8001c0e:	f7ff fe95 	bl	800193c <accel_read_bytes>
 8001c12:	bf00      	nop
 8001c14:	bd80      	pop	{r7, pc}
 8001c16:	bf00      	nop
 8001c18:	20000830 	.word	0x20000830

08001c1c <accel_process_data>:
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b082      	sub	sp, #8
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	4b28      	ldr	r3, [pc, #160]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c24:	785b      	ldrb	r3, [r3, #1]
 8001c26:	021b      	lsls	r3, r3, #8
 8001c28:	b21a      	sxth	r2, r3
 8001c2a:	4b26      	ldr	r3, [pc, #152]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c2c:	781b      	ldrb	r3, [r3, #0]
 8001c2e:	b21b      	sxth	r3, r3
 8001c30:	4313      	orrs	r3, r2
 8001c32:	80fb      	strh	r3, [r7, #6]
 8001c34:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c38:	ee07 3a90 	vmov	s15, r3
 8001c3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c40:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8001cc8 <accel_process_data+0xac>
 8001c44:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c48:	4b20      	ldr	r3, [pc, #128]	@ (8001ccc <accel_process_data+0xb0>)
 8001c4a:	edc3 7a04 	vstr	s15, [r3, #16]
 8001c4e:	4b1d      	ldr	r3, [pc, #116]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c50:	78db      	ldrb	r3, [r3, #3]
 8001c52:	021b      	lsls	r3, r3, #8
 8001c54:	b21a      	sxth	r2, r3
 8001c56:	4b1b      	ldr	r3, [pc, #108]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c58:	789b      	ldrb	r3, [r3, #2]
 8001c5a:	b21b      	sxth	r3, r3
 8001c5c:	4313      	orrs	r3, r2
 8001c5e:	80fb      	strh	r3, [r7, #6]
 8001c60:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c64:	ee07 3a90 	vmov	s15, r3
 8001c68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c6c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001cc8 <accel_process_data+0xac>
 8001c70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c74:	4b15      	ldr	r3, [pc, #84]	@ (8001ccc <accel_process_data+0xb0>)
 8001c76:	edc3 7a05 	vstr	s15, [r3, #20]
 8001c7a:	4b12      	ldr	r3, [pc, #72]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c7c:	795b      	ldrb	r3, [r3, #5]
 8001c7e:	021b      	lsls	r3, r3, #8
 8001c80:	b21a      	sxth	r2, r3
 8001c82:	4b10      	ldr	r3, [pc, #64]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c84:	791b      	ldrb	r3, [r3, #4]
 8001c86:	b21b      	sxth	r3, r3
 8001c88:	4313      	orrs	r3, r2
 8001c8a:	80fb      	strh	r3, [r7, #6]
 8001c8c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c90:	ee07 3a90 	vmov	s15, r3
 8001c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c98:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001cc8 <accel_process_data+0xac>
 8001c9c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ca0:	4b0a      	ldr	r3, [pc, #40]	@ (8001ccc <accel_process_data+0xb0>)
 8001ca2:	edc3 7a06 	vstr	s15, [r3, #24]
 8001ca6:	f009 f9ab 	bl	800b000 <HAL_GetTick>
 8001caa:	4603      	mov	r3, r0
 8001cac:	4a07      	ldr	r2, [pc, #28]	@ (8001ccc <accel_process_data+0xb0>)
 8001cae:	61d3      	str	r3, [r2, #28]
 8001cb0:	4b06      	ldr	r3, [pc, #24]	@ (8001ccc <accel_process_data+0xb0>)
 8001cb2:	3310      	adds	r3, #16
 8001cb4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cb6:	f005 fb23 	bl	8007300 <accel_data_ready>
 8001cba:	bf00      	nop
 8001cbc:	3708      	adds	r7, #8
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000830 	.word	0x20000830
 8001cc8:	3aeb3333 	.word	0x3aeb3333
 8001ccc:	20000848 	.word	0x20000848

08001cd0 <gyro_get_data>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	2206      	movs	r2, #6
 8001cd6:	4903      	ldr	r1, [pc, #12]	@ (8001ce4 <gyro_get_data+0x14>)
 8001cd8:	2002      	movs	r0, #2
 8001cda:	f7ff fd93 	bl	8001804 <gyro_read_bytes>
 8001cde:	bf00      	nop
 8001ce0:	bd80      	pop	{r7, pc}
 8001ce2:	bf00      	nop
 8001ce4:	20000838 	.word	0x20000838

08001ce8 <gyro_process_data>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b082      	sub	sp, #8
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	4b33      	ldr	r3, [pc, #204]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf0:	785b      	ldrb	r3, [r3, #1]
 8001cf2:	021b      	lsls	r3, r3, #8
 8001cf4:	b21a      	sxth	r2, r3
 8001cf6:	4b31      	ldr	r3, [pc, #196]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf8:	781b      	ldrb	r3, [r3, #0]
 8001cfa:	b21b      	sxth	r3, r3
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	80fb      	strh	r3, [r7, #6]
 8001d00:	88fa      	ldrh	r2, [r7, #6]
 8001d02:	4b2f      	ldr	r3, [pc, #188]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d04:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	@ 0x32
 8001d08:	b29b      	uxth	r3, r3
 8001d0a:	1ad3      	subs	r3, r2, r3
 8001d0c:	b29b      	uxth	r3, r3
 8001d0e:	80fb      	strh	r3, [r7, #6]
 8001d10:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d14:	ee07 3a90 	vmov	s15, r3
 8001d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d1c:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d24:	4b26      	ldr	r3, [pc, #152]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d26:	edc3 7a00 	vstr	s15, [r3]
 8001d2a:	4b24      	ldr	r3, [pc, #144]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d2c:	78db      	ldrb	r3, [r3, #3]
 8001d2e:	021b      	lsls	r3, r3, #8
 8001d30:	b21a      	sxth	r2, r3
 8001d32:	4b22      	ldr	r3, [pc, #136]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d34:	789b      	ldrb	r3, [r3, #2]
 8001d36:	b21b      	sxth	r3, r3
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	80fb      	strh	r3, [r7, #6]
 8001d3c:	88fa      	ldrh	r2, [r7, #6]
 8001d3e:	4b20      	ldr	r3, [pc, #128]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d40:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	@ 0x34
 8001d44:	b29b      	uxth	r3, r3
 8001d46:	1ad3      	subs	r3, r2, r3
 8001d48:	b29b      	uxth	r3, r3
 8001d4a:	80fb      	strh	r3, [r7, #6]
 8001d4c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d50:	ee07 3a90 	vmov	s15, r3
 8001d54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d58:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d60:	4b17      	ldr	r3, [pc, #92]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d62:	edc3 7a01 	vstr	s15, [r3, #4]
 8001d66:	4b15      	ldr	r3, [pc, #84]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d68:	795b      	ldrb	r3, [r3, #5]
 8001d6a:	021b      	lsls	r3, r3, #8
 8001d6c:	b21a      	sxth	r2, r3
 8001d6e:	4b13      	ldr	r3, [pc, #76]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d70:	791b      	ldrb	r3, [r3, #4]
 8001d72:	b21b      	sxth	r3, r3
 8001d74:	4313      	orrs	r3, r2
 8001d76:	80fb      	strh	r3, [r7, #6]
 8001d78:	88fa      	ldrh	r2, [r7, #6]
 8001d7a:	4b11      	ldr	r3, [pc, #68]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d7c:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	@ 0x36
 8001d80:	b29b      	uxth	r3, r3
 8001d82:	1ad3      	subs	r3, r2, r3
 8001d84:	b29b      	uxth	r3, r3
 8001d86:	80fb      	strh	r3, [r7, #6]
 8001d88:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d8c:	ee07 3a90 	vmov	s15, r3
 8001d90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d94:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d9c:	4b08      	ldr	r3, [pc, #32]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d9e:	edc3 7a02 	vstr	s15, [r3, #8]
 8001da2:	f009 f92d 	bl	800b000 <HAL_GetTick>
 8001da6:	4603      	mov	r3, r0
 8001da8:	4a05      	ldr	r2, [pc, #20]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001daa:	60d3      	str	r3, [r2, #12]
 8001dac:	4b04      	ldr	r3, [pc, #16]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001dae:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001db0:	f005 fa56 	bl	8007260 <gyro_data_ready>
 8001db4:	bf00      	nop
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}
 8001dbc:	20000838 	.word	0x20000838
 8001dc0:	20000848 	.word	0x20000848
 8001dc4:	398ba058 	.word	0x398ba058

08001dc8 <ist8310_init>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b082      	sub	sp, #8
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	2200      	movs	r2, #0
 8001dd0:	2140      	movs	r1, #64	@ 0x40
 8001dd2:	481d      	ldr	r0, [pc, #116]	@ (8001e48 <ist8310_init+0x80>)
 8001dd4:	f00b f8e4 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001dd8:	2002      	movs	r0, #2
 8001dda:	f009 f91d 	bl	800b018 <HAL_Delay>
 8001dde:	2201      	movs	r2, #1
 8001de0:	2140      	movs	r1, #64	@ 0x40
 8001de2:	4819      	ldr	r0, [pc, #100]	@ (8001e48 <ist8310_init+0x80>)
 8001de4:	f00b f8dc 	bl	800cfa0 <HAL_GPIO_WritePin>
 8001de8:	2002      	movs	r0, #2
 8001dea:	f009 f915 	bl	800b018 <HAL_Delay>
 8001dee:	2000      	movs	r0, #0
 8001df0:	f7ff fe74 	bl	8001adc <mag_read_single_reg>
 8001df4:	4603      	mov	r3, r0
 8001df6:	71fb      	strb	r3, [r7, #7]
 8001df8:	79fb      	ldrb	r3, [r7, #7]
 8001dfa:	2b10      	cmp	r3, #16
 8001dfc:	d00a      	beq.n	8001e14 <ist8310_init+0x4c>
 8001dfe:	4b13      	ldr	r3, [pc, #76]	@ (8001e4c <ist8310_init+0x84>)
 8001e00:	2200      	movs	r2, #0
 8001e02:	841a      	strh	r2, [r3, #32]
 8001e04:	4b11      	ldr	r3, [pc, #68]	@ (8001e4c <ist8310_init+0x84>)
 8001e06:	2200      	movs	r2, #0
 8001e08:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001e0a:	4b10      	ldr	r3, [pc, #64]	@ (8001e4c <ist8310_init+0x84>)
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001e10:	2300      	movs	r3, #0
 8001e12:	e015      	b.n	8001e40 <ist8310_init+0x78>
 8001e14:	2002      	movs	r0, #2
 8001e16:	f009 f8ff 	bl	800b018 <HAL_Delay>
 8001e1a:	2109      	movs	r1, #9
 8001e1c:	2041      	movs	r0, #65	@ 0x41
 8001e1e:	f7ff fe79 	bl	8001b14 <mag_write_single_reg>
 8001e22:	2002      	movs	r0, #2
 8001e24:	f009 f8f8 	bl	800b018 <HAL_Delay>
 8001e28:	21c0      	movs	r1, #192	@ 0xc0
 8001e2a:	2042      	movs	r0, #66	@ 0x42
 8001e2c:	f7ff fe72 	bl	8001b14 <mag_write_single_reg>
 8001e30:	2002      	movs	r0, #2
 8001e32:	f009 f8f1 	bl	800b018 <HAL_Delay>
 8001e36:	210b      	movs	r1, #11
 8001e38:	200a      	movs	r0, #10
 8001e3a:	f7ff fe6b 	bl	8001b14 <mag_write_single_reg>
 8001e3e:	2300      	movs	r3, #0
 8001e40:	4618      	mov	r0, r3
 8001e42:	3708      	adds	r7, #8
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	40021800 	.word	0x40021800
 8001e4c:	20000848 	.word	0x20000848

08001e50 <ist8310_get_data>:
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
 8001e54:	4a05      	ldr	r2, [pc, #20]	@ (8001e6c <ist8310_get_data+0x1c>)
 8001e56:	2105      	movs	r1, #5
 8001e58:	2003      	movs	r0, #3
 8001e5a:	f7ff fe77 	bl	8001b4c <mag_read_multi_reg_dma>
 8001e5e:	f009 f8cf 	bl	800b000 <HAL_GetTick>
 8001e62:	4603      	mov	r3, r0
 8001e64:	4a02      	ldr	r2, [pc, #8]	@ (8001e70 <ist8310_get_data+0x20>)
 8001e66:	6293      	str	r3, [r2, #40]	@ 0x28
 8001e68:	bf00      	nop
 8001e6a:	bd80      	pop	{r7, pc}
 8001e6c:	20000840 	.word	0x20000840
 8001e70:	20000848 	.word	0x20000848

08001e74 <HAL_GPIO_EXTI_Callback>:
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b082      	sub	sp, #8
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	4603      	mov	r3, r0
 8001e7c:	80fb      	strh	r3, [r7, #6]
 8001e7e:	4b13      	ldr	r3, [pc, #76]	@ (8001ecc <HAL_GPIO_EXTI_Callback+0x58>)
 8001e80:	781b      	ldrb	r3, [r3, #0]
 8001e82:	2b01      	cmp	r3, #1
 8001e84:	d11e      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001e86:	4b12      	ldr	r3, [pc, #72]	@ (8001ed0 <HAL_GPIO_EXTI_Callback+0x5c>)
 8001e88:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8001e8c:	b2db      	uxtb	r3, r3
 8001e8e:	2b01      	cmp	r3, #1
 8001e90:	d10d      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001e92:	88fb      	ldrh	r3, [r7, #6]
 8001e94:	2b20      	cmp	r3, #32
 8001e96:	d103      	bne.n	8001ea0 <HAL_GPIO_EXTI_Callback+0x2c>
 8001e98:	f7ff ff1a 	bl	8001cd0 <gyro_get_data>
 8001e9c:	f7ff ff24 	bl	8001ce8 <gyro_process_data>
 8001ea0:	88fb      	ldrh	r3, [r7, #6]
 8001ea2:	2b10      	cmp	r3, #16
 8001ea4:	d103      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001ea6:	f7ff fead 	bl	8001c04 <accel_get_data>
 8001eaa:	f7ff feb7 	bl	8001c1c <accel_process_data>
 8001eae:	88fb      	ldrh	r3, [r7, #6]
 8001eb0:	2b08      	cmp	r3, #8
 8001eb2:	d107      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001eb4:	4b07      	ldr	r3, [pc, #28]	@ (8001ed4 <HAL_GPIO_EXTI_Callback+0x60>)
 8001eb6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001eba:	b2db      	uxtb	r3, r3
 8001ebc:	2b20      	cmp	r3, #32
 8001ebe:	d101      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001ec0:	f7ff ffc6 	bl	8001e50 <ist8310_get_data>
 8001ec4:	bf00      	nop
 8001ec6:	3708      	adds	r7, #8
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bd80      	pop	{r7, pc}
 8001ecc:	20000880 	.word	0x20000880
 8001ed0:	20001964 	.word	0x20001964
 8001ed4:	20001840 	.word	0x20001840

08001ed8 <HAL_I2C_MemRxCpltCallback>:
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	b084      	sub	sp, #16
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	6078      	str	r0, [r7, #4]
 8001ee0:	4b19      	ldr	r3, [pc, #100]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ee2:	785b      	ldrb	r3, [r3, #1]
 8001ee4:	021b      	lsls	r3, r3, #8
 8001ee6:	b21a      	sxth	r2, r3
 8001ee8:	4b17      	ldr	r3, [pc, #92]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001eea:	781b      	ldrb	r3, [r3, #0]
 8001eec:	b21b      	sxth	r3, r3
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	b21b      	sxth	r3, r3
 8001ef2:	813b      	strh	r3, [r7, #8]
 8001ef4:	4b14      	ldr	r3, [pc, #80]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ef6:	78db      	ldrb	r3, [r3, #3]
 8001ef8:	021b      	lsls	r3, r3, #8
 8001efa:	b21a      	sxth	r2, r3
 8001efc:	4b12      	ldr	r3, [pc, #72]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001efe:	789b      	ldrb	r3, [r3, #2]
 8001f00:	b21b      	sxth	r3, r3
 8001f02:	4313      	orrs	r3, r2
 8001f04:	b21b      	sxth	r3, r3
 8001f06:	817b      	strh	r3, [r7, #10]
 8001f08:	4b0f      	ldr	r3, [pc, #60]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f0a:	795b      	ldrb	r3, [r3, #5]
 8001f0c:	021b      	lsls	r3, r3, #8
 8001f0e:	b21a      	sxth	r2, r3
 8001f10:	4b0d      	ldr	r3, [pc, #52]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f12:	791b      	ldrb	r3, [r3, #4]
 8001f14:	b21b      	sxth	r3, r3
 8001f16:	4313      	orrs	r3, r2
 8001f18:	b21b      	sxth	r3, r3
 8001f1a:	81bb      	strh	r3, [r7, #12]
 8001f1c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001f20:	4b0a      	ldr	r3, [pc, #40]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f22:	841a      	strh	r2, [r3, #32]
 8001f24:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8001f28:	4b08      	ldr	r3, [pc, #32]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f2a:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001f2c:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8001f30:	4b06      	ldr	r3, [pc, #24]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f32:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001f34:	4b05      	ldr	r3, [pc, #20]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f36:	3320      	adds	r3, #32
 8001f38:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001f3c:	f005 fa0c 	bl	8007358 <mag_data_ready>
 8001f40:	bf00      	nop
 8001f42:	3710      	adds	r7, #16
 8001f44:	46bd      	mov	sp, r7
 8001f46:	bd80      	pop	{r7, pc}
 8001f48:	20000840 	.word	0x20000840
 8001f4c:	20000848 	.word	0x20000848

08001f50 <led_green_off>:
 8001f50:	b480      	push	{r7}
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	4b04      	ldr	r3, [pc, #16]	@ (8001f68 <led_green_off+0x18>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	2200      	movs	r2, #0
 8001f5a:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f5c:	bf00      	nop
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f64:	4770      	bx	lr
 8001f66:	bf00      	nop
 8001f68:	20001b58 	.word	0x20001b58

08001f6c <led_on>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	2100      	movs	r1, #0
 8001f72:	480c      	ldr	r0, [pc, #48]	@ (8001fa4 <led_on+0x38>)
 8001f74:	f00f fad6 	bl	8011524 <HAL_TIM_PWM_Start>
 8001f78:	2104      	movs	r1, #4
 8001f7a:	480a      	ldr	r0, [pc, #40]	@ (8001fa4 <led_on+0x38>)
 8001f7c:	f00f fad2 	bl	8011524 <HAL_TIM_PWM_Start>
 8001f80:	2108      	movs	r1, #8
 8001f82:	4808      	ldr	r0, [pc, #32]	@ (8001fa4 <led_on+0x38>)
 8001f84:	f00f face 	bl	8011524 <HAL_TIM_PWM_Start>
 8001f88:	4b06      	ldr	r3, [pc, #24]	@ (8001fa4 <led_on+0x38>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	22ff      	movs	r2, #255	@ 0xff
 8001f8e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001f90:	4b04      	ldr	r3, [pc, #16]	@ (8001fa4 <led_on+0x38>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	22ff      	movs	r2, #255	@ 0xff
 8001f96:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f98:	4b02      	ldr	r3, [pc, #8]	@ (8001fa4 <led_on+0x38>)
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	22ff      	movs	r2, #255	@ 0xff
 8001f9e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fa0:	bf00      	nop
 8001fa2:	bd80      	pop	{r7, pc}
 8001fa4:	20001b58 	.word	0x20001b58

08001fa8 <led_toggle>:
 8001fa8:	b480      	push	{r7}
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	bf00      	nop
 8001fae:	46bd      	mov	sp, r7
 8001fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb4:	4770      	bx	lr
	...

08001fb8 <status_led>:
 8001fb8:	b480      	push	{r7}
 8001fba:	b083      	sub	sp, #12
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	4603      	mov	r3, r0
 8001fc0:	460a      	mov	r2, r1
 8001fc2:	80fb      	strh	r3, [r7, #6]
 8001fc4:	4613      	mov	r3, r2
 8001fc6:	717b      	strb	r3, [r7, #5]
 8001fc8:	797b      	ldrb	r3, [r7, #5]
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	f040 8090 	bne.w	80020f0 <status_led+0x138>
 8001fd0:	88fb      	ldrh	r3, [r7, #6]
 8001fd2:	3b01      	subs	r3, #1
 8001fd4:	2b08      	cmp	r3, #8
 8001fd6:	f200 808a 	bhi.w	80020ee <status_led+0x136>
 8001fda:	a201      	add	r2, pc, #4	@ (adr r2, 8001fe0 <status_led+0x28>)
 8001fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fe0:	08002005 	.word	0x08002005
 8001fe4:	0800201f 	.word	0x0800201f
 8001fe8:	08002039 	.word	0x08002039
 8001fec:	08002053 	.word	0x08002053
 8001ff0:	0800206d 	.word	0x0800206d
 8001ff4:	08002087 	.word	0x08002087
 8001ff8:	080020a1 	.word	0x080020a1
 8001ffc:	080020bb 	.word	0x080020bb
 8002000:	080020d5 	.word	0x080020d5
 8002004:	4b3d      	ldr	r3, [pc, #244]	@ (80020fc <status_led+0x144>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	22ff      	movs	r2, #255	@ 0xff
 800200a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800200c:	4b3b      	ldr	r3, [pc, #236]	@ (80020fc <status_led+0x144>)
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	2200      	movs	r2, #0
 8002012:	639a      	str	r2, [r3, #56]	@ 0x38
 8002014:	4b39      	ldr	r3, [pc, #228]	@ (80020fc <status_led+0x144>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	2200      	movs	r2, #0
 800201a:	635a      	str	r2, [r3, #52]	@ 0x34
 800201c:	e068      	b.n	80020f0 <status_led+0x138>
 800201e:	4b37      	ldr	r3, [pc, #220]	@ (80020fc <status_led+0x144>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	2200      	movs	r2, #0
 8002024:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002026:	4b35      	ldr	r3, [pc, #212]	@ (80020fc <status_led+0x144>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	22ff      	movs	r2, #255	@ 0xff
 800202c:	639a      	str	r2, [r3, #56]	@ 0x38
 800202e:	4b33      	ldr	r3, [pc, #204]	@ (80020fc <status_led+0x144>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	2200      	movs	r2, #0
 8002034:	635a      	str	r2, [r3, #52]	@ 0x34
 8002036:	e05b      	b.n	80020f0 <status_led+0x138>
 8002038:	4b30      	ldr	r3, [pc, #192]	@ (80020fc <status_led+0x144>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	2200      	movs	r2, #0
 800203e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002040:	4b2e      	ldr	r3, [pc, #184]	@ (80020fc <status_led+0x144>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	2200      	movs	r2, #0
 8002046:	639a      	str	r2, [r3, #56]	@ 0x38
 8002048:	4b2c      	ldr	r3, [pc, #176]	@ (80020fc <status_led+0x144>)
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	22ff      	movs	r2, #255	@ 0xff
 800204e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002050:	e04e      	b.n	80020f0 <status_led+0x138>
 8002052:	4b2a      	ldr	r3, [pc, #168]	@ (80020fc <status_led+0x144>)
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	22ff      	movs	r2, #255	@ 0xff
 8002058:	63da      	str	r2, [r3, #60]	@ 0x3c
 800205a:	4b28      	ldr	r3, [pc, #160]	@ (80020fc <status_led+0x144>)
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	2200      	movs	r2, #0
 8002060:	639a      	str	r2, [r3, #56]	@ 0x38
 8002062:	4b26      	ldr	r3, [pc, #152]	@ (80020fc <status_led+0x144>)
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	22ff      	movs	r2, #255	@ 0xff
 8002068:	635a      	str	r2, [r3, #52]	@ 0x34
 800206a:	e041      	b.n	80020f0 <status_led+0x138>
 800206c:	4b23      	ldr	r3, [pc, #140]	@ (80020fc <status_led+0x144>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2200      	movs	r2, #0
 8002072:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002074:	4b21      	ldr	r3, [pc, #132]	@ (80020fc <status_led+0x144>)
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	2200      	movs	r2, #0
 800207a:	639a      	str	r2, [r3, #56]	@ 0x38
 800207c:	4b1f      	ldr	r3, [pc, #124]	@ (80020fc <status_led+0x144>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2200      	movs	r2, #0
 8002082:	635a      	str	r2, [r3, #52]	@ 0x34
 8002084:	e034      	b.n	80020f0 <status_led+0x138>
 8002086:	4b1d      	ldr	r3, [pc, #116]	@ (80020fc <status_led+0x144>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	2200      	movs	r2, #0
 800208c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800208e:	4b1b      	ldr	r3, [pc, #108]	@ (80020fc <status_led+0x144>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	2200      	movs	r2, #0
 8002094:	639a      	str	r2, [r3, #56]	@ 0x38
 8002096:	4b19      	ldr	r3, [pc, #100]	@ (80020fc <status_led+0x144>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	2200      	movs	r2, #0
 800209c:	635a      	str	r2, [r3, #52]	@ 0x34
 800209e:	e027      	b.n	80020f0 <status_led+0x138>
 80020a0:	4b16      	ldr	r3, [pc, #88]	@ (80020fc <status_led+0x144>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	2200      	movs	r2, #0
 80020a6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020a8:	4b14      	ldr	r3, [pc, #80]	@ (80020fc <status_led+0x144>)
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	2200      	movs	r2, #0
 80020ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80020b0:	4b12      	ldr	r3, [pc, #72]	@ (80020fc <status_led+0x144>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	2200      	movs	r2, #0
 80020b6:	635a      	str	r2, [r3, #52]	@ 0x34
 80020b8:	e01a      	b.n	80020f0 <status_led+0x138>
 80020ba:	4b10      	ldr	r3, [pc, #64]	@ (80020fc <status_led+0x144>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	2200      	movs	r2, #0
 80020c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020c2:	4b0e      	ldr	r3, [pc, #56]	@ (80020fc <status_led+0x144>)
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	2200      	movs	r2, #0
 80020c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80020ca:	4b0c      	ldr	r3, [pc, #48]	@ (80020fc <status_led+0x144>)
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	2200      	movs	r2, #0
 80020d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80020d2:	e00d      	b.n	80020f0 <status_led+0x138>
 80020d4:	4b09      	ldr	r3, [pc, #36]	@ (80020fc <status_led+0x144>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	2200      	movs	r2, #0
 80020da:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020dc:	4b07      	ldr	r3, [pc, #28]	@ (80020fc <status_led+0x144>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	2200      	movs	r2, #0
 80020e2:	639a      	str	r2, [r3, #56]	@ 0x38
 80020e4:	4b05      	ldr	r3, [pc, #20]	@ (80020fc <status_led+0x144>)
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	2200      	movs	r2, #0
 80020ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80020ec:	e000      	b.n	80020f0 <status_led+0x138>
 80020ee:	bf00      	nop
 80020f0:	bf00      	nop
 80020f2:	370c      	adds	r7, #12
 80020f4:	46bd      	mov	sp, r7
 80020f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fa:	4770      	bx	lr
 80020fc:	20001b58 	.word	0x20001b58

08002100 <LL_TIM_EnableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_EnableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
{
 8002100:	b480      	push	{r7}
 8002102:	b083      	sub	sp, #12
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f043 0201 	orr.w	r2, r3, #1
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	601a      	str	r2, [r3, #0]
}
 8002114:	bf00      	nop
 8002116:	370c      	adds	r7, #12
 8002118:	46bd      	mov	sp, r7
 800211a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800211e:	4770      	bx	lr

08002120 <LL_TIM_DisableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_DisableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
{
 8002120:	b480      	push	{r7}
 8002122:	b083      	sub	sp, #12
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f023 0201 	bic.w	r2, r3, #1
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	601a      	str	r2, [r3, #0]
}
 8002134:	bf00      	nop
 8002136:	370c      	adds	r7, #12
 8002138:	46bd      	mov	sp, r7
 800213a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213e:	4770      	bx	lr

08002140 <LL_TIM_SetPrescaler>:
  * @param  TIMx Timer instance
  * @param  Prescaler between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
{
 8002140:	b480      	push	{r7}
 8002142:	b083      	sub	sp, #12
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
 8002148:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->PSC, Prescaler);
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	683a      	ldr	r2, [r7, #0]
 800214e:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8002150:	bf00      	nop
 8002152:	370c      	adds	r7, #12
 8002154:	46bd      	mov	sp, r7
 8002156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215a:	4770      	bx	lr

0800215c <micros_tick>:
#include "board_lib.h"
#include "robot_config.h"

static uint32_t gv_overflow_times = 0;

void micros_tick(){
 800215c:	b480      	push	{r7}
 800215e:	af00      	add	r7, sp, #0
	gv_overflow_times ++;
 8002160:	4b04      	ldr	r3, [pc, #16]	@ (8002174 <micros_tick+0x18>)
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	3301      	adds	r3, #1
 8002166:	4a03      	ldr	r2, [pc, #12]	@ (8002174 <micros_tick+0x18>)
 8002168:	6013      	str	r3, [r2, #0]
}
 800216a:	bf00      	nop
 800216c:	46bd      	mov	sp, r7
 800216e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002172:	4770      	bx	lr
 8002174:	20000884 	.word	0x20000884

08002178 <start_micros_timer>:

void start_micros_timer()
{
 8002178:	b580      	push	{r7, lr}
 800217a:	af00      	add	r7, sp, #0
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 800217c:	f240 3147 	movw	r1, #839	@ 0x347
 8002180:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002184:	f7ff ffdc 	bl	8002140 <LL_TIM_SetPrescaler>
	LL_TIM_DisableCounter(TIM2);
 8002188:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800218c:	f7ff ffc8 	bl	8002120 <LL_TIM_DisableCounter>
	TIM2->CNT =0;
 8002190:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002194:	2200      	movs	r2, #0
 8002196:	625a      	str	r2, [r3, #36]	@ 0x24
//	LL_TIM_DisableExternalClock(TIM2);
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 8002198:	f240 3147 	movw	r1, #839	@ 0x347
 800219c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021a0:	f7ff ffce 	bl	8002140 <LL_TIM_SetPrescaler>
//	LL_TIM_EnableUpdateEvent(TIM2);
//	LL_TIM_EnableIT_UPDATE(TIM2);
	TIM2->EGR |= TIM_EGR_UG_Msk;
 80021a4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80021a8:	695b      	ldr	r3, [r3, #20]
 80021aa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80021ae:	f043 0301 	orr.w	r3, r3, #1
 80021b2:	6153      	str	r3, [r2, #20]
	LL_TIM_EnableCounter(TIM2);
 80021b4:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021b8:	f7ff ffa2 	bl	8002100 <LL_TIM_EnableCounter>
}
 80021bc:	bf00      	nop
 80021be:	bd80      	pop	{r7, pc}

080021c0 <get_microseconds>:
static uint32_t current_cnt;
//T_start = get_microseconds();
//diff = T_end - T_start;
//T_end = T_start;
uint32_t get_microseconds()
{
 80021c0:	e92d 0fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp}
 80021c4:	b083      	sub	sp, #12
 80021c6:	af00      	add	r7, sp, #0
	current_cnt = TIM2->CNT;
 80021c8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021cc:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021ce:	4d15      	ldr	r5, [pc, #84]	@ (8002224 <get_microseconds+0x64>)
 80021d0:	602c      	str	r4, [r5, #0]
	uint64_t temp_cnt = TIM2->CNT;
 80021d2:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021d6:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021d8:	2500      	movs	r5, #0
 80021da:	4620      	mov	r0, r4
 80021dc:	4629      	mov	r1, r5
 80021de:	e9c7 0100 	strd	r0, r1, [r7]
	temp_cnt = temp_cnt * (1000000 / TIMER_FREQ);
 80021e2:	e9d7 8900 	ldrd	r8, r9, [r7]
 80021e6:	4640      	mov	r0, r8
 80021e8:	4649      	mov	r1, r9
 80021ea:	f04f 0400 	mov.w	r4, #0
 80021ee:	f04f 0500 	mov.w	r5, #0
 80021f2:	008d      	lsls	r5, r1, #2
 80021f4:	ea45 7590 	orr.w	r5, r5, r0, lsr #30
 80021f8:	0084      	lsls	r4, r0, #2
 80021fa:	4620      	mov	r0, r4
 80021fc:	4629      	mov	r1, r5
 80021fe:	eb10 0208 	adds.w	r2, r0, r8
 8002202:	eb41 0309 	adc.w	r3, r1, r9
 8002206:	eb12 0a02 	adds.w	sl, r2, r2
 800220a:	eb43 0b03 	adc.w	fp, r3, r3
 800220e:	4652      	mov	r2, sl
 8002210:	465b      	mov	r3, fp
 8002212:	e9c7 2300 	strd	r2, r3, [r7]
	return (uint32_t)temp_cnt;
 8002216:	683b      	ldr	r3, [r7, #0]
}
 8002218:	4618      	mov	r0, r3
 800221a:	370c      	adds	r7, #12
 800221c:	46bd      	mov	sp, r7
 800221e:	e8bd 0fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp}
 8002222:	4770      	bx	lr
 8002224:	20000888 	.word	0x20000888

08002228 <queue_init>:
 8002228:	b480      	push	{r7}
 800222a:	b085      	sub	sp, #20
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	2300      	movs	r3, #0
 8002232:	723b      	strb	r3, [r7, #8]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2b00      	cmp	r3, #0
 8002238:	d104      	bne.n	8002244 <queue_init+0x1c>
 800223a:	2304      	movs	r3, #4
 800223c:	723b      	strb	r3, [r7, #8]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	60fb      	str	r3, [r7, #12]
 8002242:	e00d      	b.n	8002260 <queue_init+0x38>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2200      	movs	r2, #0
 8002248:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	2200      	movs	r2, #0
 8002250:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2200      	movs	r2, #0
 8002258:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 800225c:	68bb      	ldr	r3, [r7, #8]
 800225e:	60fb      	str	r3, [r7, #12]
 8002260:	2300      	movs	r3, #0
 8002262:	89ba      	ldrh	r2, [r7, #12]
 8002264:	f362 030f 	bfi	r3, r2, #0, #16
 8002268:	89fa      	ldrh	r2, [r7, #14]
 800226a:	f362 431f 	bfi	r3, r2, #16, #16
 800226e:	4618      	mov	r0, r3
 8002270:	3714      	adds	r7, #20
 8002272:	46bd      	mov	sp, r7
 8002274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002278:	4770      	bx	lr

0800227a <queue_get_size>:
 800227a:	b480      	push	{r7}
 800227c:	b085      	sub	sp, #20
 800227e:	af00      	add	r7, sp, #0
 8002280:	6078      	str	r0, [r7, #4]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	f8b3 2100 	ldrh.w	r2, [r3, #256]	@ 0x100
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800228e:	1ad3      	subs	r3, r2, r3
 8002290:	81fb      	strh	r3, [r7, #14]
 8002292:	89fb      	ldrh	r3, [r7, #14]
 8002294:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002298:	d904      	bls.n	80022a4 <queue_get_size+0x2a>
 800229a:	89fb      	ldrh	r3, [r7, #14]
 800229c:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 80022a0:	b29b      	uxth	r3, r3
 80022a2:	e000      	b.n	80022a6 <queue_get_size+0x2c>
 80022a4:	89fb      	ldrh	r3, [r7, #14]
 80022a6:	81fb      	strh	r3, [r7, #14]
 80022a8:	89fb      	ldrh	r3, [r7, #14]
 80022aa:	4618      	mov	r0, r3
 80022ac:	3714      	adds	r7, #20
 80022ae:	46bd      	mov	sp, r7
 80022b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b4:	4770      	bx	lr

080022b6 <queue_append_byte>:
 80022b6:	b580      	push	{r7, lr}
 80022b8:	b084      	sub	sp, #16
 80022ba:	af00      	add	r7, sp, #0
 80022bc:	6078      	str	r0, [r7, #4]
 80022be:	460b      	mov	r3, r1
 80022c0:	70fb      	strb	r3, [r7, #3]
 80022c2:	2300      	movs	r3, #0
 80022c4:	723b      	strb	r3, [r7, #8]
 80022c6:	f008 fe9b 	bl	800b000 <HAL_GetTick>
 80022ca:	4602      	mov	r2, r0
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022d8:	4619      	mov	r1, r3
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	78fa      	ldrb	r2, [r7, #3]
 80022de:	545a      	strb	r2, [r3, r1]
 80022e0:	2301      	movs	r3, #1
 80022e2:	817b      	strh	r3, [r7, #10]
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022ea:	2bfe      	cmp	r3, #254	@ 0xfe
 80022ec:	d805      	bhi.n	80022fa <queue_append_byte+0x44>
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022f4:	3301      	adds	r3, #1
 80022f6:	b29a      	uxth	r2, r3
 80022f8:	e000      	b.n	80022fc <queue_append_byte+0x46>
 80022fa:	2200      	movs	r2, #0
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002302:	6878      	ldr	r0, [r7, #4]
 8002304:	f7ff ffb9 	bl	800227a <queue_get_size>
 8002308:	4603      	mov	r3, r0
 800230a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800230e:	d913      	bls.n	8002338 <queue_append_byte+0x82>
 8002310:	2301      	movs	r3, #1
 8002312:	723b      	strb	r3, [r7, #8]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800231a:	2bff      	cmp	r3, #255	@ 0xff
 800231c:	d005      	beq.n	800232a <queue_append_byte+0x74>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002324:	3301      	adds	r3, #1
 8002326:	b29a      	uxth	r2, r3
 8002328:	e000      	b.n	800232c <queue_append_byte+0x76>
 800232a:	2200      	movs	r2, #0
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002332:	68bb      	ldr	r3, [r7, #8]
 8002334:	60fb      	str	r3, [r7, #12]
 8002336:	e001      	b.n	800233c <queue_append_byte+0x86>
 8002338:	68bb      	ldr	r3, [r7, #8]
 800233a:	60fb      	str	r3, [r7, #12]
 800233c:	2300      	movs	r3, #0
 800233e:	89ba      	ldrh	r2, [r7, #12]
 8002340:	f362 030f 	bfi	r3, r2, #0, #16
 8002344:	89fa      	ldrh	r2, [r7, #14]
 8002346:	f362 431f 	bfi	r3, r2, #16, #16
 800234a:	4618      	mov	r0, r3
 800234c:	3710      	adds	r7, #16
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}

08002352 <queue_pop_element>:
 8002352:	b580      	push	{r7, lr}
 8002354:	b084      	sub	sp, #16
 8002356:	af00      	add	r7, sp, #0
 8002358:	6078      	str	r0, [r7, #4]
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f7ff ff8d 	bl	800227a <queue_get_size>
 8002360:	4603      	mov	r3, r0
 8002362:	2b00      	cmp	r3, #0
 8002364:	d101      	bne.n	800236a <queue_pop_element+0x18>
 8002366:	2300      	movs	r3, #0
 8002368:	e01c      	b.n	80023a4 <queue_pop_element+0x52>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002370:	3301      	adds	r3, #1
 8002372:	b29a      	uxth	r2, r3
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002380:	2bff      	cmp	r3, #255	@ 0xff
 8002382:	d803      	bhi.n	800238c <queue_pop_element+0x3a>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 800238a:	e000      	b.n	800238e <queue_pop_element+0x3c>
 800238c:	2200      	movs	r2, #0
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800239a:	461a      	mov	r2, r3
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	5c9b      	ldrb	r3, [r3, r2]
 80023a0:	73fb      	strb	r3, [r7, #15]
 80023a2:	7bfb      	ldrb	r3, [r7, #15]
 80023a4:	4618      	mov	r0, r3
 80023a6:	3710      	adds	r7, #16
 80023a8:	46bd      	mov	sp, r7
 80023aa:	bd80      	pop	{r7, pc}

080023ac <queue_pop_elements>:
 80023ac:	b580      	push	{r7, lr}
 80023ae:	b088      	sub	sp, #32
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	60f8      	str	r0, [r7, #12]
 80023b4:	60b9      	str	r1, [r7, #8]
 80023b6:	4613      	mov	r3, r2
 80023b8:	80fb      	strh	r3, [r7, #6]
 80023ba:	68f8      	ldr	r0, [r7, #12]
 80023bc:	f7ff ff5d 	bl	800227a <queue_get_size>
 80023c0:	4603      	mov	r3, r0
 80023c2:	83fb      	strh	r3, [r7, #30]
 80023c4:	8bfa      	ldrh	r2, [r7, #30]
 80023c6:	88fb      	ldrh	r3, [r7, #6]
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d203      	bcs.n	80023d4 <queue_pop_elements+0x28>
 80023cc:	2303      	movs	r3, #3
 80023ce:	753b      	strb	r3, [r7, #20]
 80023d0:	8bfb      	ldrh	r3, [r7, #30]
 80023d2:	80fb      	strh	r3, [r7, #6]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023da:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80023de:	83bb      	strh	r3, [r7, #28]
 80023e0:	8bba      	ldrh	r2, [r7, #28]
 80023e2:	88fb      	ldrh	r3, [r7, #6]
 80023e4:	429a      	cmp	r2, r3
 80023e6:	d30b      	bcc.n	8002400 <queue_pop_elements+0x54>
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023ee:	461a      	mov	r2, r3
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	4413      	add	r3, r2
 80023f4:	88fa      	ldrh	r2, [r7, #6]
 80023f6:	4619      	mov	r1, r3
 80023f8:	68b8      	ldr	r0, [r7, #8]
 80023fa:	f018 fdbb 	bl	801af74 <memcpy>
 80023fe:	e014      	b.n	800242a <queue_pop_elements+0x7e>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002406:	461a      	mov	r2, r3
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	4413      	add	r3, r2
 800240c:	8bba      	ldrh	r2, [r7, #28]
 800240e:	4619      	mov	r1, r3
 8002410:	68b8      	ldr	r0, [r7, #8]
 8002412:	f018 fdaf 	bl	801af74 <memcpy>
 8002416:	8bbb      	ldrh	r3, [r7, #28]
 8002418:	68ba      	ldr	r2, [r7, #8]
 800241a:	18d0      	adds	r0, r2, r3
 800241c:	68f9      	ldr	r1, [r7, #12]
 800241e:	88fa      	ldrh	r2, [r7, #6]
 8002420:	8bbb      	ldrh	r3, [r7, #28]
 8002422:	1ad3      	subs	r3, r2, r3
 8002424:	461a      	mov	r2, r3
 8002426:	f018 fda5 	bl	801af74 <memcpy>
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 8002430:	88fb      	ldrh	r3, [r7, #6]
 8002432:	4413      	add	r3, r2
 8002434:	b29a      	uxth	r2, r3
 8002436:	68fb      	ldr	r3, [r7, #12]
 8002438:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002442:	2bff      	cmp	r3, #255	@ 0xff
 8002444:	d906      	bls.n	8002454 <queue_pop_elements+0xa8>
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800244c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8002450:	b29b      	uxth	r3, r3
 8002452:	e002      	b.n	800245a <queue_pop_elements+0xae>
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800245a:	68fa      	ldr	r2, [r7, #12]
 800245c:	f8a2 3102 	strh.w	r3, [r2, #258]	@ 0x102
 8002460:	697b      	ldr	r3, [r7, #20]
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	2300      	movs	r3, #0
 8002466:	8b3a      	ldrh	r2, [r7, #24]
 8002468:	f362 030f 	bfi	r3, r2, #0, #16
 800246c:	8b7a      	ldrh	r2, [r7, #26]
 800246e:	f362 431f 	bfi	r3, r2, #16, #16
 8002472:	4618      	mov	r0, r3
 8002474:	3720      	adds	r7, #32
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}

0800247a <queue_peek>:
 800247a:	b580      	push	{r7, lr}
 800247c:	b082      	sub	sp, #8
 800247e:	af00      	add	r7, sp, #0
 8002480:	6078      	str	r0, [r7, #4]
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f7ff fef9 	bl	800227a <queue_get_size>
 8002488:	4603      	mov	r3, r0
 800248a:	2b00      	cmp	r3, #0
 800248c:	d006      	beq.n	800249c <queue_peek+0x22>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002494:	461a      	mov	r2, r3
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	5c9b      	ldrb	r3, [r3, r2]
 800249a:	e000      	b.n	800249e <queue_peek+0x24>
 800249c:	2300      	movs	r3, #0
 800249e:	4618      	mov	r0, r3
 80024a0:	3708      	adds	r7, #8
 80024a2:	46bd      	mov	sp, r7
 80024a4:	bd80      	pop	{r7, pc}

080024a6 <queue_peek_number>:
 80024a6:	b580      	push	{r7, lr}
 80024a8:	b088      	sub	sp, #32
 80024aa:	af00      	add	r7, sp, #0
 80024ac:	60f8      	str	r0, [r7, #12]
 80024ae:	60b9      	str	r1, [r7, #8]
 80024b0:	4613      	mov	r3, r2
 80024b2:	80fb      	strh	r3, [r7, #6]
 80024b4:	f008 fda4 	bl	800b000 <HAL_GetTick>
 80024b8:	4602      	mov	r2, r0
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80024c0:	2300      	movs	r3, #0
 80024c2:	753b      	strb	r3, [r7, #20]
 80024c4:	68f8      	ldr	r0, [r7, #12]
 80024c6:	f7ff fed8 	bl	800227a <queue_get_size>
 80024ca:	4603      	mov	r3, r0
 80024cc:	83fb      	strh	r3, [r7, #30]
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024d4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80024d8:	83bb      	strh	r3, [r7, #28]
 80024da:	8bfa      	ldrh	r2, [r7, #30]
 80024dc:	88fb      	ldrh	r3, [r7, #6]
 80024de:	429a      	cmp	r2, r3
 80024e0:	d203      	bcs.n	80024ea <queue_peek_number+0x44>
 80024e2:	2303      	movs	r3, #3
 80024e4:	753b      	strb	r3, [r7, #20]
 80024e6:	8bfb      	ldrh	r3, [r7, #30]
 80024e8:	80fb      	strh	r3, [r7, #6]
 80024ea:	8bba      	ldrh	r2, [r7, #28]
 80024ec:	88fb      	ldrh	r3, [r7, #6]
 80024ee:	429a      	cmp	r2, r3
 80024f0:	d30b      	bcc.n	800250a <queue_peek_number+0x64>
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024f8:	461a      	mov	r2, r3
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	4413      	add	r3, r2
 80024fe:	88fa      	ldrh	r2, [r7, #6]
 8002500:	4619      	mov	r1, r3
 8002502:	68b8      	ldr	r0, [r7, #8]
 8002504:	f018 fd36 	bl	801af74 <memcpy>
 8002508:	e014      	b.n	8002534 <queue_peek_number+0x8e>
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002510:	461a      	mov	r2, r3
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	4413      	add	r3, r2
 8002516:	8bba      	ldrh	r2, [r7, #28]
 8002518:	4619      	mov	r1, r3
 800251a:	68b8      	ldr	r0, [r7, #8]
 800251c:	f018 fd2a 	bl	801af74 <memcpy>
 8002520:	8bbb      	ldrh	r3, [r7, #28]
 8002522:	68ba      	ldr	r2, [r7, #8]
 8002524:	18d0      	adds	r0, r2, r3
 8002526:	68f9      	ldr	r1, [r7, #12]
 8002528:	88fa      	ldrh	r2, [r7, #6]
 800252a:	8bbb      	ldrh	r3, [r7, #28]
 800252c:	1ad3      	subs	r3, r2, r3
 800252e:	461a      	mov	r2, r3
 8002530:	f018 fd20 	bl	801af74 <memcpy>
 8002534:	88fb      	ldrh	r3, [r7, #6]
 8002536:	82fb      	strh	r3, [r7, #22]
 8002538:	697b      	ldr	r3, [r7, #20]
 800253a:	61bb      	str	r3, [r7, #24]
 800253c:	2300      	movs	r3, #0
 800253e:	8b3a      	ldrh	r2, [r7, #24]
 8002540:	f362 030f 	bfi	r3, r2, #0, #16
 8002544:	8b7a      	ldrh	r2, [r7, #26]
 8002546:	f362 431f 	bfi	r3, r2, #16, #16
 800254a:	4618      	mov	r0, r3
 800254c:	3720      	adds	r7, #32
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}
	...

08002554 <ref_process_data>:
 8002554:	b590      	push	{r4, r7, lr}
 8002556:	b097      	sub	sp, #92	@ 0x5c
 8002558:	af00      	add	r7, sp, #0
 800255a:	6578      	str	r0, [r7, #84]	@ 0x54
 800255c:	6539      	str	r1, [r7, #80]	@ 0x50
 800255e:	e066      	b.n	800262e <ref_process_data+0xda>
 8002560:	4b38      	ldr	r3, [pc, #224]	@ (8002644 <ref_process_data+0xf0>)
 8002562:	781b      	ldrb	r3, [r3, #0]
 8002564:	2b00      	cmp	r3, #0
 8002566:	d002      	beq.n	800256e <ref_process_data+0x1a>
 8002568:	2b01      	cmp	r3, #1
 800256a:	d036      	beq.n	80025da <ref_process_data+0x86>
 800256c:	e05f      	b.n	800262e <ref_process_data+0xda>
 800256e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002570:	f7ff fe83 	bl	800227a <queue_get_size>
 8002574:	4603      	mov	r3, r0
 8002576:	2b06      	cmp	r3, #6
 8002578:	d801      	bhi.n	800257e <ref_process_data+0x2a>
 800257a:	2302      	movs	r3, #2
 800257c:	e05e      	b.n	800263c <ref_process_data+0xe8>
 800257e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002580:	f7ff ff7b 	bl	800247a <queue_peek>
 8002584:	4603      	mov	r3, r0
 8002586:	2ba5      	cmp	r3, #165	@ 0xa5
 8002588:	d003      	beq.n	8002592 <ref_process_data+0x3e>
 800258a:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 800258c:	f7ff fee1 	bl	8002352 <queue_pop_element>
 8002590:	e04d      	b.n	800262e <ref_process_data+0xda>
 8002592:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002594:	f7ff fe71 	bl	800227a <queue_get_size>
 8002598:	4603      	mov	r3, r0
 800259a:	2b07      	cmp	r3, #7
 800259c:	d91b      	bls.n	80025d6 <ref_process_data+0x82>
 800259e:	4c2a      	ldr	r4, [pc, #168]	@ (8002648 <ref_process_data+0xf4>)
 80025a0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025a4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80025a6:	4618      	mov	r0, r3
 80025a8:	f000 f850 	bl	800264c <ref_get_header>
 80025ac:	4622      	mov	r2, r4
 80025ae:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025b2:	6818      	ldr	r0, [r3, #0]
 80025b4:	6010      	str	r0, [r2, #0]
 80025b6:	8899      	ldrh	r1, [r3, #4]
 80025b8:	799b      	ldrb	r3, [r3, #6]
 80025ba:	8091      	strh	r1, [r2, #4]
 80025bc:	7193      	strb	r3, [r2, #6]
 80025be:	4b22      	ldr	r3, [pc, #136]	@ (8002648 <ref_process_data+0xf4>)
 80025c0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80025ca:	4293      	cmp	r3, r2
 80025cc:	d02c      	beq.n	8002628 <ref_process_data+0xd4>
 80025ce:	4b1d      	ldr	r3, [pc, #116]	@ (8002644 <ref_process_data+0xf0>)
 80025d0:	2201      	movs	r2, #1
 80025d2:	701a      	strb	r2, [r3, #0]
 80025d4:	e02b      	b.n	800262e <ref_process_data+0xda>
 80025d6:	2302      	movs	r3, #2
 80025d8:	e030      	b.n	800263c <ref_process_data+0xe8>
 80025da:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 80025dc:	f7ff fe4d 	bl	800227a <queue_get_size>
 80025e0:	4603      	mov	r3, r0
 80025e2:	461a      	mov	r2, r3
 80025e4:	4b18      	ldr	r3, [pc, #96]	@ (8002648 <ref_process_data+0xf4>)
 80025e6:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80025ea:	b29b      	uxth	r3, r3
 80025ec:	3309      	adds	r3, #9
 80025ee:	429a      	cmp	r2, r3
 80025f0:	dd18      	ble.n	8002624 <ref_process_data+0xd0>
 80025f2:	4b14      	ldr	r3, [pc, #80]	@ (8002644 <ref_process_data+0xf0>)
 80025f4:	2200      	movs	r2, #0
 80025f6:	701a      	strb	r2, [r3, #0]
 80025f8:	6d3c      	ldr	r4, [r7, #80]	@ 0x50
 80025fa:	4638      	mov	r0, r7
 80025fc:	4a12      	ldr	r2, [pc, #72]	@ (8002648 <ref_process_data+0xf4>)
 80025fe:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002600:	ca06      	ldmia	r2, {r1, r2}
 8002602:	f000 f89b 	bl	800273c <ref_get_msg>
 8002606:	4620      	mov	r0, r4
 8002608:	463b      	mov	r3, r7
 800260a:	2242      	movs	r2, #66	@ 0x42
 800260c:	4619      	mov	r1, r3
 800260e:	f018 fcb1 	bl	801af74 <memcpy>
 8002612:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002614:	881b      	ldrh	r3, [r3, #0]
 8002616:	b29b      	uxth	r3, r3
 8002618:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800261c:	4293      	cmp	r3, r2
 800261e:	d005      	beq.n	800262c <ref_process_data+0xd8>
 8002620:	2300      	movs	r3, #0
 8002622:	e00b      	b.n	800263c <ref_process_data+0xe8>
 8002624:	2302      	movs	r3, #2
 8002626:	e009      	b.n	800263c <ref_process_data+0xe8>
 8002628:	bf00      	nop
 800262a:	e000      	b.n	800262e <ref_process_data+0xda>
 800262c:	bf00      	nop
 800262e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002630:	f7ff fe23 	bl	800227a <queue_get_size>
 8002634:	4603      	mov	r3, r0
 8002636:	2b07      	cmp	r3, #7
 8002638:	d892      	bhi.n	8002560 <ref_process_data+0xc>
 800263a:	2302      	movs	r3, #2
 800263c:	4618      	mov	r0, r3
 800263e:	375c      	adds	r7, #92	@ 0x5c
 8002640:	46bd      	mov	sp, r7
 8002642:	bd90      	pop	{r4, r7, pc}
 8002644:	2000088c 	.word	0x2000088c
 8002648:	20000890 	.word	0x20000890

0800264c <ref_get_header>:
 800264c:	b580      	push	{r7, lr}
 800264e:	b088      	sub	sp, #32
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	6039      	str	r1, [r7, #0]
 8002656:	f107 030c 	add.w	r3, r7, #12
 800265a:	2207      	movs	r2, #7
 800265c:	4619      	mov	r1, r3
 800265e:	6838      	ldr	r0, [r7, #0]
 8002660:	f7ff ff21 	bl	80024a6 <queue_peek_number>
 8002664:	7b3b      	ldrb	r3, [r7, #12]
 8002666:	753b      	strb	r3, [r7, #20]
 8002668:	7d3b      	ldrb	r3, [r7, #20]
 800266a:	2ba5      	cmp	r3, #165	@ 0xa5
 800266c:	d013      	beq.n	8002696 <ref_get_header+0x4a>
 800266e:	6838      	ldr	r0, [r7, #0]
 8002670:	f7ff fe6f 	bl	8002352 <queue_pop_element>
 8002674:	f04f 33ff 	mov.w	r3, #4294967295
 8002678:	767b      	strb	r3, [r7, #25]
 800267a:	f04f 33ff 	mov.w	r3, #4294967295
 800267e:	76bb      	strb	r3, [r7, #26]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	461a      	mov	r2, r3
 8002684:	f107 0314 	add.w	r3, r7, #20
 8002688:	6818      	ldr	r0, [r3, #0]
 800268a:	6010      	str	r0, [r2, #0]
 800268c:	8899      	ldrh	r1, [r3, #4]
 800268e:	799b      	ldrb	r3, [r3, #6]
 8002690:	8091      	strh	r1, [r2, #4]
 8002692:	7193      	strb	r3, [r2, #6]
 8002694:	e04d      	b.n	8002732 <ref_get_header+0xe6>
 8002696:	7bbb      	ldrb	r3, [r7, #14]
 8002698:	021b      	lsls	r3, r3, #8
 800269a:	b21a      	sxth	r2, r3
 800269c:	7b7b      	ldrb	r3, [r7, #13]
 800269e:	b21b      	sxth	r3, r3
 80026a0:	4313      	orrs	r3, r2
 80026a2:	b21b      	sxth	r3, r3
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	f8a7 3015 	strh.w	r3, [r7, #21]
 80026aa:	7bfb      	ldrb	r3, [r7, #15]
 80026ac:	75fb      	strb	r3, [r7, #23]
 80026ae:	7c3b      	ldrb	r3, [r7, #16]
 80026b0:	763b      	strb	r3, [r7, #24]
 80026b2:	f107 030c 	add.w	r3, r7, #12
 80026b6:	2105      	movs	r1, #5
 80026b8:	4618      	mov	r0, r3
 80026ba:	f7fe fc7f 	bl	8000fbc <verify_CRC8_check_sum>
 80026be:	4603      	mov	r3, r0
 80026c0:	61fb      	str	r3, [r7, #28]
 80026c2:	7cbb      	ldrb	r3, [r7, #18]
 80026c4:	021b      	lsls	r3, r3, #8
 80026c6:	b21a      	sxth	r2, r3
 80026c8:	7c7b      	ldrb	r3, [r7, #17]
 80026ca:	b21b      	sxth	r3, r3
 80026cc:	4313      	orrs	r3, r2
 80026ce:	b21b      	sxth	r3, r3
 80026d0:	b29b      	uxth	r3, r3
 80026d2:	f8a7 3019 	strh.w	r3, [r7, #25]
 80026d6:	69fb      	ldr	r3, [r7, #28]
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d00c      	beq.n	80026f6 <ref_get_header+0xaa>
 80026dc:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 80026e0:	b29b      	uxth	r3, r3
 80026e2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80026e6:	d806      	bhi.n	80026f6 <ref_get_header+0xaa>
 80026e8:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 80026ec:	b29b      	uxth	r3, r3
 80026ee:	f240 3205 	movw	r2, #773	@ 0x305
 80026f2:	4293      	cmp	r3, r2
 80026f4:	d913      	bls.n	800271e <ref_get_header+0xd2>
 80026f6:	f04f 33ff 	mov.w	r3, #4294967295
 80026fa:	767b      	strb	r3, [r7, #25]
 80026fc:	f04f 33ff 	mov.w	r3, #4294967295
 8002700:	76bb      	strb	r3, [r7, #26]
 8002702:	6838      	ldr	r0, [r7, #0]
 8002704:	f7ff fe25 	bl	8002352 <queue_pop_element>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	461a      	mov	r2, r3
 800270c:	f107 0314 	add.w	r3, r7, #20
 8002710:	6818      	ldr	r0, [r3, #0]
 8002712:	6010      	str	r0, [r2, #0]
 8002714:	8899      	ldrh	r1, [r3, #4]
 8002716:	799b      	ldrb	r3, [r3, #6]
 8002718:	8091      	strh	r1, [r2, #4]
 800271a:	7193      	strb	r3, [r2, #6]
 800271c:	e009      	b.n	8002732 <ref_get_header+0xe6>
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	461a      	mov	r2, r3
 8002722:	f107 0314 	add.w	r3, r7, #20
 8002726:	6818      	ldr	r0, [r3, #0]
 8002728:	6010      	str	r0, [r2, #0]
 800272a:	8899      	ldrh	r1, [r3, #4]
 800272c:	799b      	ldrb	r3, [r3, #6]
 800272e:	8091      	strh	r1, [r2, #4]
 8002730:	7193      	strb	r3, [r2, #6]
 8002732:	6878      	ldr	r0, [r7, #4]
 8002734:	3720      	adds	r7, #32
 8002736:	46bd      	mov	sp, r7
 8002738:	bd80      	pop	{r7, pc}
	...

0800273c <ref_get_msg>:
 800273c:	b5b0      	push	{r4, r5, r7, lr}
 800273e:	b0d8      	sub	sp, #352	@ 0x160
 8002740:	af00      	add	r7, sp, #0
 8002742:	f507 74b0 	add.w	r4, r7, #352	@ 0x160
 8002746:	f5a4 74aa 	sub.w	r4, r4, #340	@ 0x154
 800274a:	6020      	str	r0, [r4, #0]
 800274c:	f507 70b0 	add.w	r0, r7, #352	@ 0x160
 8002750:	f5a0 70ae 	sub.w	r0, r0, #348	@ 0x15c
 8002754:	e880 0006 	stmia.w	r0, {r1, r2}
 8002758:	f507 72b0 	add.w	r2, r7, #352	@ 0x160
 800275c:	f5a2 72b0 	sub.w	r2, r2, #352	@ 0x160
 8002760:	6013      	str	r3, [r2, #0]
 8002762:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002766:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800276a:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800276e:	b29b      	uxth	r3, r3
 8002770:	3309      	adds	r3, #9
 8002772:	b29a      	uxth	r2, r3
 8002774:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8002778:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800277c:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8002780:	6818      	ldr	r0, [r3, #0]
 8002782:	f7ff fe13 	bl	80023ac <queue_pop_elements>
 8002786:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800278a:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800278e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002792:	b29b      	uxth	r3, r3
 8002794:	3309      	adds	r3, #9
 8002796:	461a      	mov	r2, r3
 8002798:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800279c:	4611      	mov	r1, r2
 800279e:	4618      	mov	r0, r3
 80027a0:	f7fe fc80 	bl	80010a4 <verify_CRC16_check_sum>
 80027a4:	f8c7 015c 	str.w	r0, [r7, #348]	@ 0x15c
 80027a8:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d116      	bne.n	80027de <ref_get_msg+0xa2>
 80027b0:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027b4:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027b8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027bc:	801a      	strh	r2, [r3, #0]
 80027be:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027c2:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 80027c6:	681a      	ldr	r2, [r3, #0]
 80027c8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027cc:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027d0:	4610      	mov	r0, r2
 80027d2:	4619      	mov	r1, r3
 80027d4:	2342      	movs	r3, #66	@ 0x42
 80027d6:	461a      	mov	r2, r3
 80027d8:	f018 fbcc 	bl	801af74 <memcpy>
 80027dc:	e1a1      	b.n	8002b22 <ref_get_msg+0x3e6>
 80027de:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 80027e2:	3307      	adds	r3, #7
 80027e4:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 80027e8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027ec:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 80027f0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80027f4:	b29a      	uxth	r2, r3
 80027f6:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027fa:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027fe:	801a      	strh	r2, [r3, #0]
 8002800:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002804:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8002808:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 800280c:	b29b      	uxth	r3, r3
 800280e:	f240 3202 	movw	r2, #770	@ 0x302
 8002812:	4293      	cmp	r3, r2
 8002814:	f000 815e 	beq.w	8002ad4 <ref_get_msg+0x398>
 8002818:	f240 3202 	movw	r2, #770	@ 0x302
 800281c:	4293      	cmp	r3, r2
 800281e:	f300 8169 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002822:	f240 3201 	movw	r2, #769	@ 0x301
 8002826:	4293      	cmp	r3, r2
 8002828:	f000 8148 	beq.w	8002abc <ref_get_msg+0x380>
 800282c:	f240 3201 	movw	r2, #769	@ 0x301
 8002830:	4293      	cmp	r3, r2
 8002832:	f300 815f 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002836:	f240 220a 	movw	r2, #522	@ 0x20a
 800283a:	4293      	cmp	r3, r2
 800283c:	f300 815a 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002840:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002844:	dc04      	bgt.n	8002850 <ref_get_msg+0x114>
 8002846:	2b04      	cmp	r3, #4
 8002848:	dc40      	bgt.n	80028cc <ref_get_msg+0x190>
 800284a:	2b00      	cmp	r3, #0
 800284c:	dc2e      	bgt.n	80028ac <ref_get_msg+0x170>
 800284e:	e151      	b.n	8002af4 <ref_get_msg+0x3b8>
 8002850:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 8002854:	2b09      	cmp	r3, #9
 8002856:	f200 814d 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 800285a:	a201      	add	r2, pc, #4	@ (adr r2, 8002860 <ref_get_msg+0x124>)
 800285c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002860:	080029b5 	.word	0x080029b5
 8002864:	080029e5 	.word	0x080029e5
 8002868:	08002a05 	.word	0x08002a05
 800286c:	08002a21 	.word	0x08002a21
 8002870:	08002a39 	.word	0x08002a39
 8002874:	08002a4d 	.word	0x08002a4d
 8002878:	08002a5f 	.word	0x08002a5f
 800287c:	08002a7b 	.word	0x08002a7b
 8002880:	08002a93 	.word	0x08002a93
 8002884:	08002aa9 	.word	0x08002aa9
 8002888:	f2a3 1301 	subw	r3, r3, #257	@ 0x101
 800288c:	2b04      	cmp	r3, #4
 800288e:	f200 8131 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 8002892:	a201      	add	r2, pc, #4	@ (adr r2, 8002898 <ref_get_msg+0x15c>)
 8002894:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002898:	0800294b 	.word	0x0800294b
 800289c:	08002961 	.word	0x08002961
 80028a0:	08002977 	.word	0x08002977
 80028a4:	0800298f 	.word	0x0800298f
 80028a8:	080029a3 	.word	0x080029a3
 80028ac:	3b01      	subs	r3, #1
 80028ae:	2b03      	cmp	r3, #3
 80028b0:	f200 8120 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 80028b4:	a201      	add	r2, pc, #4	@ (adr r2, 80028bc <ref_get_msg+0x180>)
 80028b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028ba:	bf00      	nop
 80028bc:	080028dd 	.word	0x080028dd
 80028c0:	080028f5 	.word	0x080028f5
 80028c4:	08002907 	.word	0x08002907
 80028c8:	08002933 	.word	0x08002933
 80028cc:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80028d0:	f280 8110 	bge.w	8002af4 <ref_get_msg+0x3b8>
 80028d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80028d8:	dcd6      	bgt.n	8002888 <ref_get_msg+0x14c>
 80028da:	e10b      	b.n	8002af4 <ref_get_msg+0x3b8>
 80028dc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028e0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80028e4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80028e8:	3302      	adds	r3, #2
 80028ea:	8811      	ldrh	r1, [r2, #0]
 80028ec:	7892      	ldrb	r2, [r2, #2]
 80028ee:	8019      	strh	r1, [r3, #0]
 80028f0:	709a      	strb	r2, [r3, #2]
 80028f2:	e107      	b.n	8002b04 <ref_get_msg+0x3c8>
 80028f4:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80028f8:	781a      	ldrb	r2, [r3, #0]
 80028fa:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028fe:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002902:	709a      	strb	r2, [r3, #2]
 8002904:	e0fe      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002906:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800290a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800290e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002912:	3302      	adds	r3, #2
 8002914:	6814      	ldr	r4, [r2, #0]
 8002916:	6850      	ldr	r0, [r2, #4]
 8002918:	6891      	ldr	r1, [r2, #8]
 800291a:	68d5      	ldr	r5, [r2, #12]
 800291c:	601c      	str	r4, [r3, #0]
 800291e:	6058      	str	r0, [r3, #4]
 8002920:	6099      	str	r1, [r3, #8]
 8002922:	60dd      	str	r5, [r3, #12]
 8002924:	6914      	ldr	r4, [r2, #16]
 8002926:	6950      	ldr	r0, [r2, #20]
 8002928:	6991      	ldr	r1, [r2, #24]
 800292a:	611c      	str	r4, [r3, #16]
 800292c:	6158      	str	r0, [r3, #20]
 800292e:	6199      	str	r1, [r3, #24]
 8002930:	e0e8      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002932:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002936:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800293a:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 800293e:	3302      	adds	r3, #2
 8002940:	8811      	ldrh	r1, [r2, #0]
 8002942:	7892      	ldrb	r2, [r2, #2]
 8002944:	8019      	strh	r1, [r3, #0]
 8002946:	709a      	strb	r2, [r3, #2]
 8002948:	e0dc      	b.n	8002b04 <ref_get_msg+0x3c8>
 800294a:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	461a      	mov	r2, r3
 8002952:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002956:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800295a:	f8c3 2002 	str.w	r2, [r3, #2]
 800295e:	e0d1      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002960:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	461a      	mov	r2, r3
 8002968:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800296c:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002970:	f8c3 2002 	str.w	r2, [r3, #2]
 8002974:	e0c6      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002976:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800297a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800297e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002982:	3302      	adds	r3, #2
 8002984:	8811      	ldrh	r1, [r2, #0]
 8002986:	7892      	ldrb	r2, [r2, #2]
 8002988:	8019      	strh	r1, [r3, #0]
 800298a:	709a      	strb	r2, [r3, #2]
 800298c:	e0ba      	b.n	8002b04 <ref_get_msg+0x3c8>
 800298e:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002992:	881b      	ldrh	r3, [r3, #0]
 8002994:	b29a      	uxth	r2, r3
 8002996:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800299a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800299e:	805a      	strh	r2, [r3, #2]
 80029a0:	e0b0      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029a2:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80029a6:	781a      	ldrb	r2, [r3, #0]
 80029a8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029ac:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029b0:	709a      	strb	r2, [r3, #2]
 80029b2:	e0a7      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029b4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029b8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029bc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029c0:	3302      	adds	r3, #2
 80029c2:	6810      	ldr	r0, [r2, #0]
 80029c4:	6851      	ldr	r1, [r2, #4]
 80029c6:	6895      	ldr	r5, [r2, #8]
 80029c8:	68d4      	ldr	r4, [r2, #12]
 80029ca:	6018      	str	r0, [r3, #0]
 80029cc:	6059      	str	r1, [r3, #4]
 80029ce:	609d      	str	r5, [r3, #8]
 80029d0:	60dc      	str	r4, [r3, #12]
 80029d2:	6910      	ldr	r0, [r2, #16]
 80029d4:	6951      	ldr	r1, [r2, #20]
 80029d6:	6118      	str	r0, [r3, #16]
 80029d8:	6159      	str	r1, [r3, #20]
 80029da:	8b11      	ldrh	r1, [r2, #24]
 80029dc:	7e92      	ldrb	r2, [r2, #26]
 80029de:	8319      	strh	r1, [r3, #24]
 80029e0:	769a      	strb	r2, [r3, #26]
 80029e2:	e08f      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029e4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029e8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029ec:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029f0:	3302      	adds	r3, #2
 80029f2:	6814      	ldr	r4, [r2, #0]
 80029f4:	6850      	ldr	r0, [r2, #4]
 80029f6:	6891      	ldr	r1, [r2, #8]
 80029f8:	68d2      	ldr	r2, [r2, #12]
 80029fa:	601c      	str	r4, [r3, #0]
 80029fc:	6058      	str	r0, [r3, #4]
 80029fe:	6099      	str	r1, [r3, #8]
 8002a00:	60da      	str	r2, [r3, #12]
 8002a02:	e07f      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a08:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a0c:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a10:	3302      	adds	r3, #2
 8002a12:	6810      	ldr	r0, [r2, #0]
 8002a14:	6851      	ldr	r1, [r2, #4]
 8002a16:	6892      	ldr	r2, [r2, #8]
 8002a18:	6018      	str	r0, [r3, #0]
 8002a1a:	6059      	str	r1, [r3, #4]
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	e071      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a20:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a24:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a28:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a2c:	3302      	adds	r3, #2
 8002a2e:	6811      	ldr	r1, [r2, #0]
 8002a30:	6019      	str	r1, [r3, #0]
 8002a32:	8892      	ldrh	r2, [r2, #4]
 8002a34:	809a      	strh	r2, [r3, #4]
 8002a36:	e065      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a38:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a3c:	881b      	ldrh	r3, [r3, #0]
 8002a3e:	b29a      	uxth	r2, r3
 8002a40:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a44:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a48:	805a      	strh	r2, [r3, #2]
 8002a4a:	e05b      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a4c:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a50:	781a      	ldrb	r2, [r3, #0]
 8002a52:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a56:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a5a:	709a      	strb	r2, [r3, #2]
 8002a5c:	e052      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a5e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a62:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a66:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a6a:	3302      	adds	r3, #2
 8002a6c:	6811      	ldr	r1, [r2, #0]
 8002a6e:	6019      	str	r1, [r3, #0]
 8002a70:	8891      	ldrh	r1, [r2, #4]
 8002a72:	7992      	ldrb	r2, [r2, #6]
 8002a74:	8099      	strh	r1, [r3, #4]
 8002a76:	719a      	strb	r2, [r3, #6]
 8002a78:	e044      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a7a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a7e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a82:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a86:	3302      	adds	r3, #2
 8002a88:	6811      	ldr	r1, [r2, #0]
 8002a8a:	6019      	str	r1, [r3, #0]
 8002a8c:	8892      	ldrh	r2, [r2, #4]
 8002a8e:	809a      	strh	r2, [r3, #4]
 8002a90:	e038      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a92:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	461a      	mov	r2, r3
 8002a9a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a9e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002aa2:	f8c3 2002 	str.w	r2, [r3, #2]
 8002aa6:	e02d      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002aa8:	f107 0314 	add.w	r3, r7, #20
 8002aac:	3302      	adds	r3, #2
 8002aae:	2203      	movs	r2, #3
 8002ab0:	f8d7 1158 	ldr.w	r1, [r7, #344]	@ 0x158
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	f018 fa5d 	bl	801af74 <memcpy>
 8002aba:	e023      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002abc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ac0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002ac4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ac8:	3302      	adds	r3, #2
 8002aca:	6811      	ldr	r1, [r2, #0]
 8002acc:	6019      	str	r1, [r3, #0]
 8002ace:	8892      	ldrh	r2, [r2, #4]
 8002ad0:	809a      	strh	r2, [r3, #4]
 8002ad2:	e017      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002ad4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ad8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002adc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ae0:	3302      	adds	r3, #2
 8002ae2:	6814      	ldr	r4, [r2, #0]
 8002ae4:	6850      	ldr	r0, [r2, #4]
 8002ae6:	6891      	ldr	r1, [r2, #8]
 8002ae8:	601c      	str	r4, [r3, #0]
 8002aea:	6058      	str	r0, [r3, #4]
 8002aec:	6099      	str	r1, [r3, #8]
 8002aee:	7b12      	ldrb	r2, [r2, #12]
 8002af0:	731a      	strb	r2, [r3, #12]
 8002af2:	e007      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002af4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002af8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002afc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002b00:	801a      	strh	r2, [r3, #0]
 8002b02:	bf00      	nop
 8002b04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b08:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b0c:	681a      	ldr	r2, [r3, #0]
 8002b0e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b12:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002b16:	4610      	mov	r0, r2
 8002b18:	4619      	mov	r1, r3
 8002b1a:	2342      	movs	r3, #66	@ 0x42
 8002b1c:	461a      	mov	r2, r3
 8002b1e:	f018 fa29 	bl	801af74 <memcpy>
 8002b22:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b26:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b2a:	6818      	ldr	r0, [r3, #0]
 8002b2c:	f507 77b0 	add.w	r7, r7, #352	@ 0x160
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bdb0      	pop	{r4, r5, r7, pc}

08002b34 <ref_usart_start>:
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b086      	sub	sp, #24
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	603b      	str	r3, [r7, #0]
 8002b40:	4613      	mov	r3, r2
 8002b42:	80fb      	strh	r3, [r7, #6]
 8002b44:	4a3a      	ldr	r2, [pc, #232]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	6013      	str	r3, [r2, #0]
 8002b4a:	4b39      	ldr	r3, [pc, #228]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f7ff fb6a 	bl	8002228 <queue_init>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8002b5a:	b2db      	uxtb	r3, r3
 8002b5c:	2b20      	cmp	r3, #32
 8002b5e:	d162      	bne.n	8002c26 <ref_usart_start+0xf2>
 8002b60:	68bb      	ldr	r3, [r7, #8]
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d002      	beq.n	8002b6c <ref_usart_start+0x38>
 8002b66:	88fb      	ldrh	r3, [r7, #6]
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d101      	bne.n	8002b70 <ref_usart_start+0x3c>
 8002b6c:	2301      	movs	r3, #1
 8002b6e:	e05b      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b76:	2b01      	cmp	r3, #1
 8002b78:	d101      	bne.n	8002b7e <ref_usart_start+0x4a>
 8002b7a:	2302      	movs	r3, #2
 8002b7c:	e054      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	2201      	movs	r2, #1
 8002b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b86:	68ba      	ldr	r2, [r7, #8]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	88fa      	ldrh	r2, [r7, #6]
 8002b90:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	2200      	movs	r2, #0
 8002b96:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	2222      	movs	r2, #34	@ 0x22
 8002b9c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ba4:	4a23      	ldr	r2, [pc, #140]	@ (8002c34 <ref_usart_start+0x100>)
 8002ba6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bac:	4a22      	ldr	r2, [pc, #136]	@ (8002c38 <ref_usart_start+0x104>)
 8002bae:	641a      	str	r2, [r3, #64]	@ 0x40
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	651a      	str	r2, [r3, #80]	@ 0x50
 8002bb8:	f107 0308 	add.w	r3, r7, #8
 8002bbc:	617b      	str	r3, [r7, #20]
 8002bbe:	68fb      	ldr	r3, [r7, #12]
 8002bc0:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	3304      	adds	r3, #4
 8002bc8:	4619      	mov	r1, r3
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	681a      	ldr	r2, [r3, #0]
 8002bce:	88fb      	ldrh	r3, [r7, #6]
 8002bd0:	f009 fcea 	bl	800c5a8 <HAL_DMA_Start_IT>
 8002bd4:	2300      	movs	r3, #0
 8002bd6:	613b      	str	r3, [r7, #16]
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	613b      	str	r3, [r7, #16]
 8002be0:	68fb      	ldr	r3, [r7, #12]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	693b      	ldr	r3, [r7, #16]
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	2200      	movs	r2, #0
 8002bee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	68da      	ldr	r2, [r3, #12]
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002c00:	60da      	str	r2, [r3, #12]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	695a      	ldr	r2, [r3, #20]
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f042 0201 	orr.w	r2, r2, #1
 8002c10:	615a      	str	r2, [r3, #20]
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	695a      	ldr	r2, [r3, #20]
 8002c18:	68fb      	ldr	r3, [r7, #12]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002c20:	615a      	str	r2, [r3, #20]
 8002c22:	2300      	movs	r3, #0
 8002c24:	e000      	b.n	8002c28 <ref_usart_start+0xf4>
 8002c26:	2302      	movs	r3, #2
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3718      	adds	r7, #24
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	bd80      	pop	{r7, pc}
 8002c30:	20000898 	.word	0x20000898
 8002c34:	08002c99 	.word	0x08002c99
 8002c38:	08002c3d 	.word	0x08002c3d

08002c3c <ref_half_cplt_isr>:
 8002c3c:	b580      	push	{r7, lr}
 8002c3e:	b084      	sub	sp, #16
 8002c40:	af00      	add	r7, sp, #0
 8002c42:	6078      	str	r0, [r7, #4]
 8002c44:	4b11      	ldr	r3, [pc, #68]	@ (8002c8c <ref_half_cplt_isr+0x50>)
 8002c46:	681a      	ldr	r2, [r3, #0]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	68db      	ldr	r3, [r3, #12]
 8002c4e:	781b      	ldrb	r3, [r3, #0]
 8002c50:	4619      	mov	r1, r3
 8002c52:	4610      	mov	r0, r2
 8002c54:	f7ff fb2f 	bl	80022b6 <queue_append_byte>
 8002c58:	2300      	movs	r3, #0
 8002c5a:	60fb      	str	r3, [r7, #12]
 8002c5c:	4b0c      	ldr	r3, [pc, #48]	@ (8002c90 <ref_half_cplt_isr+0x54>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f107 020c 	add.w	r2, r7, #12
 8002c64:	4611      	mov	r1, r2
 8002c66:	4618      	mov	r0, r3
 8002c68:	f016 f9ac 	bl	8018fc4 <vTaskNotifyGiveFromISR>
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d007      	beq.n	8002c82 <ref_half_cplt_isr+0x46>
 8002c72:	4b08      	ldr	r3, [pc, #32]	@ (8002c94 <ref_half_cplt_isr+0x58>)
 8002c74:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002c78:	601a      	str	r2, [r3, #0]
 8002c7a:	f3bf 8f4f 	dsb	sy
 8002c7e:	f3bf 8f6f 	isb	sy
 8002c82:	bf00      	nop
 8002c84:	3710      	adds	r7, #16
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	bf00      	nop
 8002c8c:	20000898 	.word	0x20000898
 8002c90:	20003780 	.word	0x20003780
 8002c94:	e000ed04 	.word	0xe000ed04

08002c98 <ref_full_cplt_isr>:
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	6078      	str	r0, [r7, #4]
 8002ca0:	4b11      	ldr	r3, [pc, #68]	@ (8002ce8 <ref_full_cplt_isr+0x50>)
 8002ca2:	681a      	ldr	r2, [r3, #0]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	3301      	adds	r3, #1
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	4619      	mov	r1, r3
 8002cb0:	4610      	mov	r0, r2
 8002cb2:	f7ff fb00 	bl	80022b6 <queue_append_byte>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	60fb      	str	r3, [r7, #12]
 8002cba:	4b0c      	ldr	r3, [pc, #48]	@ (8002cec <ref_full_cplt_isr+0x54>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	f107 020c 	add.w	r2, r7, #12
 8002cc2:	4611      	mov	r1, r2
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	f016 f97d 	bl	8018fc4 <vTaskNotifyGiveFromISR>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d007      	beq.n	8002ce0 <ref_full_cplt_isr+0x48>
 8002cd0:	4b07      	ldr	r3, [pc, #28]	@ (8002cf0 <ref_full_cplt_isr+0x58>)
 8002cd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002cd6:	601a      	str	r2, [r3, #0]
 8002cd8:	f3bf 8f4f 	dsb	sy
 8002cdc:	f3bf 8f6f 	isb	sy
 8002ce0:	bf00      	nop
 8002ce2:	3710      	adds	r7, #16
 8002ce4:	46bd      	mov	sp, r7
 8002ce6:	bd80      	pop	{r7, pc}
 8002ce8:	20000898 	.word	0x20000898
 8002cec:	20003780 	.word	0x20003780
 8002cf0:	e000ed04 	.word	0xe000ed04

08002cf4 <MX_ADC3_Init>:
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b084      	sub	sp, #16
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	463b      	mov	r3, r7
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	609a      	str	r2, [r3, #8]
 8002d04:	60da      	str	r2, [r3, #12]
 8002d06:	4b21      	ldr	r3, [pc, #132]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d08:	4a21      	ldr	r2, [pc, #132]	@ (8002d90 <MX_ADC3_Init+0x9c>)
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	4b1f      	ldr	r3, [pc, #124]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d0e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002d12:	605a      	str	r2, [r3, #4]
 8002d14:	4b1d      	ldr	r3, [pc, #116]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d16:	2200      	movs	r2, #0
 8002d18:	609a      	str	r2, [r3, #8]
 8002d1a:	4b1c      	ldr	r3, [pc, #112]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	611a      	str	r2, [r3, #16]
 8002d20:	4b1a      	ldr	r3, [pc, #104]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	761a      	strb	r2, [r3, #24]
 8002d26:	4b19      	ldr	r3, [pc, #100]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d28:	2200      	movs	r2, #0
 8002d2a:	f883 2020 	strb.w	r2, [r3, #32]
 8002d2e:	4b17      	ldr	r3, [pc, #92]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d30:	2200      	movs	r2, #0
 8002d32:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d34:	4b15      	ldr	r3, [pc, #84]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d36:	4a17      	ldr	r2, [pc, #92]	@ (8002d94 <MX_ADC3_Init+0xa0>)
 8002d38:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d3a:	4b14      	ldr	r3, [pc, #80]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	60da      	str	r2, [r3, #12]
 8002d40:	4b12      	ldr	r3, [pc, #72]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d42:	2201      	movs	r2, #1
 8002d44:	61da      	str	r2, [r3, #28]
 8002d46:	4b11      	ldr	r3, [pc, #68]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d48:	2200      	movs	r2, #0
 8002d4a:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
 8002d4e:	4b0f      	ldr	r3, [pc, #60]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d50:	2201      	movs	r2, #1
 8002d52:	615a      	str	r2, [r3, #20]
 8002d54:	480d      	ldr	r0, [pc, #52]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d56:	f008 f983 	bl	800b060 <HAL_ADC_Init>
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d001      	beq.n	8002d64 <MX_ADC3_Init+0x70>
 8002d60:	f000 fd4a 	bl	80037f8 <Error_Handler>
 8002d64:	2308      	movs	r3, #8
 8002d66:	603b      	str	r3, [r7, #0]
 8002d68:	2301      	movs	r3, #1
 8002d6a:	607b      	str	r3, [r7, #4]
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	60bb      	str	r3, [r7, #8]
 8002d70:	463b      	mov	r3, r7
 8002d72:	4619      	mov	r1, r3
 8002d74:	4805      	ldr	r0, [pc, #20]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d76:	f008 f9b7 	bl	800b0e8 <HAL_ADC_ConfigChannel>
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d001      	beq.n	8002d84 <MX_ADC3_Init+0x90>
 8002d80:	f000 fd3a 	bl	80037f8 <Error_Handler>
 8002d84:	bf00      	nop
 8002d86:	3710      	adds	r7, #16
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd80      	pop	{r7, pc}
 8002d8c:	2000089c 	.word	0x2000089c
 8002d90:	40012200 	.word	0x40012200
 8002d94:	0f000001 	.word	0x0f000001

08002d98 <HAL_ADC_MspInit>:
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	b08a      	sub	sp, #40	@ 0x28
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
 8002da0:	f107 0314 	add.w	r3, r7, #20
 8002da4:	2200      	movs	r2, #0
 8002da6:	601a      	str	r2, [r3, #0]
 8002da8:	605a      	str	r2, [r3, #4]
 8002daa:	609a      	str	r2, [r3, #8]
 8002dac:	60da      	str	r2, [r3, #12]
 8002dae:	611a      	str	r2, [r3, #16]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	4a17      	ldr	r2, [pc, #92]	@ (8002e14 <HAL_ADC_MspInit+0x7c>)
 8002db6:	4293      	cmp	r3, r2
 8002db8:	d128      	bne.n	8002e0c <HAL_ADC_MspInit+0x74>
 8002dba:	2300      	movs	r3, #0
 8002dbc:	613b      	str	r3, [r7, #16]
 8002dbe:	4b16      	ldr	r3, [pc, #88]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dc2:	4a15      	ldr	r2, [pc, #84]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002dc8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002dca:	4b13      	ldr	r3, [pc, #76]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dce:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	693b      	ldr	r3, [r7, #16]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	60fb      	str	r3, [r7, #12]
 8002dda:	4b0f      	ldr	r3, [pc, #60]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dde:	4a0e      	ldr	r2, [pc, #56]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de0:	f043 0320 	orr.w	r3, r3, #32
 8002de4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002de6:	4b0c      	ldr	r3, [pc, #48]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dea:	f003 0320 	and.w	r3, r3, #32
 8002dee:	60fb      	str	r3, [r7, #12]
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002df6:	617b      	str	r3, [r7, #20]
 8002df8:	2303      	movs	r3, #3
 8002dfa:	61bb      	str	r3, [r7, #24]
 8002dfc:	2300      	movs	r3, #0
 8002dfe:	61fb      	str	r3, [r7, #28]
 8002e00:	f107 0314 	add.w	r3, r7, #20
 8002e04:	4619      	mov	r1, r3
 8002e06:	4805      	ldr	r0, [pc, #20]	@ (8002e1c <HAL_ADC_MspInit+0x84>)
 8002e08:	f009 ff2e 	bl	800cc68 <HAL_GPIO_Init>
 8002e0c:	bf00      	nop
 8002e0e:	3728      	adds	r7, #40	@ 0x28
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	40012200 	.word	0x40012200
 8002e18:	40023800 	.word	0x40023800
 8002e1c:	40021400 	.word	0x40021400

08002e20 <MX_CAN1_Init>:
 8002e20:	b580      	push	{r7, lr}
 8002e22:	af00      	add	r7, sp, #0
 8002e24:	4b17      	ldr	r3, [pc, #92]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e26:	4a18      	ldr	r2, [pc, #96]	@ (8002e88 <MX_CAN1_Init+0x68>)
 8002e28:	601a      	str	r2, [r3, #0]
 8002e2a:	4b16      	ldr	r3, [pc, #88]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e2c:	2203      	movs	r2, #3
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	4b14      	ldr	r3, [pc, #80]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	609a      	str	r2, [r3, #8]
 8002e36:	4b13      	ldr	r3, [pc, #76]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e38:	2200      	movs	r2, #0
 8002e3a:	60da      	str	r2, [r3, #12]
 8002e3c:	4b11      	ldr	r3, [pc, #68]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e3e:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8002e42:	611a      	str	r2, [r3, #16]
 8002e44:	4b0f      	ldr	r3, [pc, #60]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e46:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8002e4a:	615a      	str	r2, [r3, #20]
 8002e4c:	4b0d      	ldr	r3, [pc, #52]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e4e:	2200      	movs	r2, #0
 8002e50:	761a      	strb	r2, [r3, #24]
 8002e52:	4b0c      	ldr	r3, [pc, #48]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	765a      	strb	r2, [r3, #25]
 8002e58:	4b0a      	ldr	r3, [pc, #40]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e5a:	2200      	movs	r2, #0
 8002e5c:	769a      	strb	r2, [r3, #26]
 8002e5e:	4b09      	ldr	r3, [pc, #36]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e60:	2200      	movs	r2, #0
 8002e62:	76da      	strb	r2, [r3, #27]
 8002e64:	4b07      	ldr	r3, [pc, #28]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	771a      	strb	r2, [r3, #28]
 8002e6a:	4b06      	ldr	r3, [pc, #24]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	775a      	strb	r2, [r3, #29]
 8002e70:	4804      	ldr	r0, [pc, #16]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e72:	f008 fb57 	bl	800b524 <HAL_CAN_Init>
 8002e76:	4603      	mov	r3, r0
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d001      	beq.n	8002e80 <MX_CAN1_Init+0x60>
 8002e7c:	f000 fcbc 	bl	80037f8 <Error_Handler>
 8002e80:	bf00      	nop
 8002e82:	bd80      	pop	{r7, pc}
 8002e84:	200008e4 	.word	0x200008e4
 8002e88:	40006400 	.word	0x40006400

08002e8c <MX_CAN2_Init>:
 8002e8c:	b580      	push	{r7, lr}
 8002e8e:	af00      	add	r7, sp, #0
 8002e90:	4b17      	ldr	r3, [pc, #92]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e92:	4a18      	ldr	r2, [pc, #96]	@ (8002ef4 <MX_CAN2_Init+0x68>)
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	4b16      	ldr	r3, [pc, #88]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e98:	2203      	movs	r2, #3
 8002e9a:	605a      	str	r2, [r3, #4]
 8002e9c:	4b14      	ldr	r3, [pc, #80]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	609a      	str	r2, [r3, #8]
 8002ea2:	4b13      	ldr	r3, [pc, #76]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	60da      	str	r2, [r3, #12]
 8002ea8:	4b11      	ldr	r3, [pc, #68]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eaa:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8002eae:	611a      	str	r2, [r3, #16]
 8002eb0:	4b0f      	ldr	r3, [pc, #60]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eb2:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8002eb6:	615a      	str	r2, [r3, #20]
 8002eb8:	4b0d      	ldr	r3, [pc, #52]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eba:	2200      	movs	r2, #0
 8002ebc:	761a      	strb	r2, [r3, #24]
 8002ebe:	4b0c      	ldr	r3, [pc, #48]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	765a      	strb	r2, [r3, #25]
 8002ec4:	4b0a      	ldr	r3, [pc, #40]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	769a      	strb	r2, [r3, #26]
 8002eca:	4b09      	ldr	r3, [pc, #36]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	76da      	strb	r2, [r3, #27]
 8002ed0:	4b07      	ldr	r3, [pc, #28]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	771a      	strb	r2, [r3, #28]
 8002ed6:	4b06      	ldr	r3, [pc, #24]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	775a      	strb	r2, [r3, #29]
 8002edc:	4804      	ldr	r0, [pc, #16]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ede:	f008 fb21 	bl	800b524 <HAL_CAN_Init>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	d001      	beq.n	8002eec <MX_CAN2_Init+0x60>
 8002ee8:	f000 fc86 	bl	80037f8 <Error_Handler>
 8002eec:	bf00      	nop
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	2000090c 	.word	0x2000090c
 8002ef4:	40006800 	.word	0x40006800

08002ef8 <HAL_CAN_MspInit>:
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b08c      	sub	sp, #48	@ 0x30
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	f107 031c 	add.w	r3, r7, #28
 8002f04:	2200      	movs	r2, #0
 8002f06:	601a      	str	r2, [r3, #0]
 8002f08:	605a      	str	r2, [r3, #4]
 8002f0a:	609a      	str	r2, [r3, #8]
 8002f0c:	60da      	str	r2, [r3, #12]
 8002f0e:	611a      	str	r2, [r3, #16]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	4a52      	ldr	r2, [pc, #328]	@ (8003060 <HAL_CAN_MspInit+0x168>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d145      	bne.n	8002fa6 <HAL_CAN_MspInit+0xae>
 8002f1a:	4b52      	ldr	r3, [pc, #328]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	3301      	adds	r3, #1
 8002f20:	4a50      	ldr	r2, [pc, #320]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f22:	6013      	str	r3, [r2, #0]
 8002f24:	4b4f      	ldr	r3, [pc, #316]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	2b01      	cmp	r3, #1
 8002f2a:	d10d      	bne.n	8002f48 <HAL_CAN_MspInit+0x50>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	61bb      	str	r3, [r7, #24]
 8002f30:	4b4d      	ldr	r3, [pc, #308]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f34:	4a4c      	ldr	r2, [pc, #304]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f36:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002f3a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f3c:	4b4a      	ldr	r3, [pc, #296]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f40:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f44:	61bb      	str	r3, [r7, #24]
 8002f46:	69bb      	ldr	r3, [r7, #24]
 8002f48:	2300      	movs	r3, #0
 8002f4a:	617b      	str	r3, [r7, #20]
 8002f4c:	4b46      	ldr	r3, [pc, #280]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f50:	4a45      	ldr	r2, [pc, #276]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f52:	f043 0308 	orr.w	r3, r3, #8
 8002f56:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f58:	4b43      	ldr	r3, [pc, #268]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f5c:	f003 0308 	and.w	r3, r3, #8
 8002f60:	617b      	str	r3, [r7, #20]
 8002f62:	697b      	ldr	r3, [r7, #20]
 8002f64:	2303      	movs	r3, #3
 8002f66:	61fb      	str	r3, [r7, #28]
 8002f68:	2302      	movs	r3, #2
 8002f6a:	623b      	str	r3, [r7, #32]
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f70:	2303      	movs	r3, #3
 8002f72:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002f74:	2309      	movs	r3, #9
 8002f76:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002f78:	f107 031c 	add.w	r3, r7, #28
 8002f7c:	4619      	mov	r1, r3
 8002f7e:	483b      	ldr	r0, [pc, #236]	@ (800306c <HAL_CAN_MspInit+0x174>)
 8002f80:	f009 fe72 	bl	800cc68 <HAL_GPIO_Init>
 8002f84:	2200      	movs	r2, #0
 8002f86:	2105      	movs	r1, #5
 8002f88:	2014      	movs	r0, #20
 8002f8a:	f009 fa27 	bl	800c3dc <HAL_NVIC_SetPriority>
 8002f8e:	2014      	movs	r0, #20
 8002f90:	f009 fa40 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8002f94:	2200      	movs	r2, #0
 8002f96:	2105      	movs	r1, #5
 8002f98:	2015      	movs	r0, #21
 8002f9a:	f009 fa1f 	bl	800c3dc <HAL_NVIC_SetPriority>
 8002f9e:	2015      	movs	r0, #21
 8002fa0:	f009 fa38 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8002fa4:	e057      	b.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a31      	ldr	r2, [pc, #196]	@ (8003070 <HAL_CAN_MspInit+0x178>)
 8002fac:	4293      	cmp	r3, r2
 8002fae:	d152      	bne.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	613b      	str	r3, [r7, #16]
 8002fb4:	4b2c      	ldr	r3, [pc, #176]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb8:	4a2b      	ldr	r2, [pc, #172]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fba:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002fbe:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fc0:	4b29      	ldr	r3, [pc, #164]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fc4:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002fc8:	613b      	str	r3, [r7, #16]
 8002fca:	693b      	ldr	r3, [r7, #16]
 8002fcc:	4b25      	ldr	r3, [pc, #148]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	3301      	adds	r3, #1
 8002fd2:	4a24      	ldr	r2, [pc, #144]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd4:	6013      	str	r3, [r2, #0]
 8002fd6:	4b23      	ldr	r3, [pc, #140]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	2b01      	cmp	r3, #1
 8002fdc:	d10d      	bne.n	8002ffa <HAL_CAN_MspInit+0x102>
 8002fde:	2300      	movs	r3, #0
 8002fe0:	60fb      	str	r3, [r7, #12]
 8002fe2:	4b21      	ldr	r3, [pc, #132]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fe6:	4a20      	ldr	r2, [pc, #128]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002fec:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fee:	4b1e      	ldr	r3, [pc, #120]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002ff0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ff2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ff6:	60fb      	str	r3, [r7, #12]
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	2300      	movs	r3, #0
 8002ffc:	60bb      	str	r3, [r7, #8]
 8002ffe:	4b1a      	ldr	r3, [pc, #104]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003000:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003002:	4a19      	ldr	r2, [pc, #100]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003004:	f043 0302 	orr.w	r3, r3, #2
 8003008:	6313      	str	r3, [r2, #48]	@ 0x30
 800300a:	4b17      	ldr	r3, [pc, #92]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 800300c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800300e:	f003 0302 	and.w	r3, r3, #2
 8003012:	60bb      	str	r3, [r7, #8]
 8003014:	68bb      	ldr	r3, [r7, #8]
 8003016:	2360      	movs	r3, #96	@ 0x60
 8003018:	61fb      	str	r3, [r7, #28]
 800301a:	2302      	movs	r3, #2
 800301c:	623b      	str	r3, [r7, #32]
 800301e:	2300      	movs	r3, #0
 8003020:	627b      	str	r3, [r7, #36]	@ 0x24
 8003022:	2303      	movs	r3, #3
 8003024:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003026:	2309      	movs	r3, #9
 8003028:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800302a:	f107 031c 	add.w	r3, r7, #28
 800302e:	4619      	mov	r1, r3
 8003030:	4810      	ldr	r0, [pc, #64]	@ (8003074 <HAL_CAN_MspInit+0x17c>)
 8003032:	f009 fe19 	bl	800cc68 <HAL_GPIO_Init>
 8003036:	2200      	movs	r2, #0
 8003038:	2105      	movs	r1, #5
 800303a:	2040      	movs	r0, #64	@ 0x40
 800303c:	f009 f9ce 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003040:	2040      	movs	r0, #64	@ 0x40
 8003042:	f009 f9e7 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003046:	2200      	movs	r2, #0
 8003048:	2105      	movs	r1, #5
 800304a:	2041      	movs	r0, #65	@ 0x41
 800304c:	f009 f9c6 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003050:	2041      	movs	r0, #65	@ 0x41
 8003052:	f009 f9df 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003056:	bf00      	nop
 8003058:	3730      	adds	r7, #48	@ 0x30
 800305a:	46bd      	mov	sp, r7
 800305c:	bd80      	pop	{r7, pc}
 800305e:	bf00      	nop
 8003060:	40006400 	.word	0x40006400
 8003064:	20000934 	.word	0x20000934
 8003068:	40023800 	.word	0x40023800
 800306c:	40020c00 	.word	0x40020c00
 8003070:	40006800 	.word	0x40006800
 8003074:	40020400 	.word	0x40020400

08003078 <MX_DMA_Init>:
 8003078:	b580      	push	{r7, lr}
 800307a:	b082      	sub	sp, #8
 800307c:	af00      	add	r7, sp, #0
 800307e:	2300      	movs	r3, #0
 8003080:	607b      	str	r3, [r7, #4]
 8003082:	4b2f      	ldr	r3, [pc, #188]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003086:	4a2e      	ldr	r2, [pc, #184]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003088:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800308c:	6313      	str	r3, [r2, #48]	@ 0x30
 800308e:	4b2c      	ldr	r3, [pc, #176]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003092:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003096:	607b      	str	r3, [r7, #4]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2300      	movs	r3, #0
 800309c:	603b      	str	r3, [r7, #0]
 800309e:	4b28      	ldr	r3, [pc, #160]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030a2:	4a27      	ldr	r2, [pc, #156]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80030a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80030aa:	4b25      	ldr	r3, [pc, #148]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ae:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80030b2:	603b      	str	r3, [r7, #0]
 80030b4:	683b      	ldr	r3, [r7, #0]
 80030b6:	2200      	movs	r2, #0
 80030b8:	2105      	movs	r1, #5
 80030ba:	200c      	movs	r0, #12
 80030bc:	f009 f98e 	bl	800c3dc <HAL_NVIC_SetPriority>
 80030c0:	200c      	movs	r0, #12
 80030c2:	f009 f9a7 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80030c6:	2200      	movs	r2, #0
 80030c8:	2105      	movs	r1, #5
 80030ca:	200d      	movs	r0, #13
 80030cc:	f009 f986 	bl	800c3dc <HAL_NVIC_SetPriority>
 80030d0:	200d      	movs	r0, #13
 80030d2:	f009 f99f 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80030d6:	2200      	movs	r2, #0
 80030d8:	2105      	movs	r1, #5
 80030da:	200f      	movs	r0, #15
 80030dc:	f009 f97e 	bl	800c3dc <HAL_NVIC_SetPriority>
 80030e0:	200f      	movs	r0, #15
 80030e2:	f009 f997 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80030e6:	2200      	movs	r2, #0
 80030e8:	2105      	movs	r1, #5
 80030ea:	2038      	movs	r0, #56	@ 0x38
 80030ec:	f009 f976 	bl	800c3dc <HAL_NVIC_SetPriority>
 80030f0:	2038      	movs	r0, #56	@ 0x38
 80030f2:	f009 f98f 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80030f6:	2200      	movs	r2, #0
 80030f8:	2105      	movs	r1, #5
 80030fa:	2039      	movs	r0, #57	@ 0x39
 80030fc:	f009 f96e 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003100:	2039      	movs	r0, #57	@ 0x39
 8003102:	f009 f987 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003106:	2200      	movs	r2, #0
 8003108:	2105      	movs	r1, #5
 800310a:	203b      	movs	r0, #59	@ 0x3b
 800310c:	f009 f966 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003110:	203b      	movs	r0, #59	@ 0x3b
 8003112:	f009 f97f 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003116:	2200      	movs	r2, #0
 8003118:	2105      	movs	r1, #5
 800311a:	2044      	movs	r0, #68	@ 0x44
 800311c:	f009 f95e 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003120:	2044      	movs	r0, #68	@ 0x44
 8003122:	f009 f977 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003126:	2200      	movs	r2, #0
 8003128:	2105      	movs	r1, #5
 800312a:	2045      	movs	r0, #69	@ 0x45
 800312c:	f009 f956 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003130:	2045      	movs	r0, #69	@ 0x45
 8003132:	f009 f96f 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003136:	bf00      	nop
 8003138:	3708      	adds	r7, #8
 800313a:	46bd      	mov	sp, r7
 800313c:	bd80      	pop	{r7, pc}
 800313e:	bf00      	nop
 8003140:	40023800 	.word	0x40023800

08003144 <configureTimerForRunTimeStats>:
 8003144:	b480      	push	{r7}
 8003146:	af00      	add	r7, sp, #0
 8003148:	bf00      	nop
 800314a:	46bd      	mov	sp, r7
 800314c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003150:	4770      	bx	lr

08003152 <getRunTimeCounterValue>:
 8003152:	b480      	push	{r7}
 8003154:	af00      	add	r7, sp, #0
 8003156:	2300      	movs	r3, #0
 8003158:	4618      	mov	r0, r3
 800315a:	46bd      	mov	sp, r7
 800315c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003160:	4770      	bx	lr

08003162 <vApplicationStackOverflowHook>:
 8003162:	b480      	push	{r7}
 8003164:	b083      	sub	sp, #12
 8003166:	af00      	add	r7, sp, #0
 8003168:	6078      	str	r0, [r7, #4]
 800316a:	6039      	str	r1, [r7, #0]
 800316c:	bf00      	nop
 800316e:	370c      	adds	r7, #12
 8003170:	46bd      	mov	sp, r7
 8003172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003176:	4770      	bx	lr

08003178 <vApplicationGetIdleTaskMemory>:
 8003178:	b480      	push	{r7}
 800317a:	b085      	sub	sp, #20
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	4a07      	ldr	r2, [pc, #28]	@ (80031a4 <vApplicationGetIdleTaskMemory+0x2c>)
 8003188:	601a      	str	r2, [r3, #0]
 800318a:	68bb      	ldr	r3, [r7, #8]
 800318c:	4a06      	ldr	r2, [pc, #24]	@ (80031a8 <vApplicationGetIdleTaskMemory+0x30>)
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003196:	601a      	str	r2, [r3, #0]
 8003198:	bf00      	nop
 800319a:	3714      	adds	r7, #20
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr
 80031a4:	20000940 	.word	0x20000940
 80031a8:	20000ac0 	.word	0x20000ac0

080031ac <vApplicationGetTimerTaskMemory>:
 80031ac:	b480      	push	{r7}
 80031ae:	b085      	sub	sp, #20
 80031b0:	af00      	add	r7, sp, #0
 80031b2:	60f8      	str	r0, [r7, #12]
 80031b4:	60b9      	str	r1, [r7, #8]
 80031b6:	607a      	str	r2, [r7, #4]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	4a07      	ldr	r2, [pc, #28]	@ (80031d8 <vApplicationGetTimerTaskMemory+0x2c>)
 80031bc:	601a      	str	r2, [r3, #0]
 80031be:	68bb      	ldr	r3, [r7, #8]
 80031c0:	4a06      	ldr	r2, [pc, #24]	@ (80031dc <vApplicationGetTimerTaskMemory+0x30>)
 80031c2:	601a      	str	r2, [r3, #0]
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031ca:	601a      	str	r2, [r3, #0]
 80031cc:	bf00      	nop
 80031ce:	3714      	adds	r7, #20
 80031d0:	46bd      	mov	sp, r7
 80031d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d6:	4770      	bx	lr
 80031d8:	20000ec0 	.word	0x20000ec0
 80031dc:	20001040 	.word	0x20001040

080031e0 <MX_FREERTOS_Init>:
 80031e0:	b5b0      	push	{r4, r5, r7, lr}
 80031e2:	b08a      	sub	sp, #40	@ 0x28
 80031e4:	af02      	add	r7, sp, #8
 80031e6:	4b10      	ldr	r3, [pc, #64]	@ (8003228 <MX_FREERTOS_Init+0x48>)
 80031e8:	1d3c      	adds	r4, r7, #4
 80031ea:	461d      	mov	r5, r3
 80031ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80031ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80031f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80031f4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80031f8:	1d3b      	adds	r3, r7, #4
 80031fa:	2100      	movs	r1, #0
 80031fc:	4618      	mov	r0, r3
 80031fe:	f013 feba 	bl	8016f76 <osThreadCreate>
 8003202:	4603      	mov	r3, r0
 8003204:	4a09      	ldr	r2, [pc, #36]	@ (800322c <MX_FREERTOS_Init+0x4c>)
 8003206:	6013      	str	r3, [r2, #0]
 8003208:	4b09      	ldr	r3, [pc, #36]	@ (8003230 <MX_FREERTOS_Init+0x50>)
 800320a:	9301      	str	r3, [sp, #4]
 800320c:	230c      	movs	r3, #12
 800320e:	9300      	str	r3, [sp, #0]
 8003210:	2301      	movs	r3, #1
 8003212:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003216:	4907      	ldr	r1, [pc, #28]	@ (8003234 <MX_FREERTOS_Init+0x54>)
 8003218:	4807      	ldr	r0, [pc, #28]	@ (8003238 <MX_FREERTOS_Init+0x58>)
 800321a:	f014 feaf 	bl	8017f7c <xTaskCreate>
 800321e:	bf00      	nop
 8003220:	3720      	adds	r7, #32
 8003222:	46bd      	mov	sp, r7
 8003224:	bdb0      	pop	{r4, r5, r7, pc}
 8003226:	bf00      	nop
 8003228:	08020e88 	.word	0x08020e88
 800322c:	2000093c 	.word	0x2000093c
 8003230:	20000938 	.word	0x20000938
 8003234:	08020e70 	.word	0x08020e70
 8003238:	08008589 	.word	0x08008589

0800323c <StartDefaultTask>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b082      	sub	sp, #8
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	f016 ff78 	bl	801a138 <MX_USB_DEVICE_Init>
 8003248:	4801      	ldr	r0, [pc, #4]	@ (8003250 <StartDefaultTask+0x14>)
 800324a:	f013 fee0 	bl	801700e <osDelay>
 800324e:	e7fb      	b.n	8003248 <StartDefaultTask+0xc>
 8003250:	000186a0 	.word	0x000186a0

08003254 <MX_GPIO_Init>:
 8003254:	b580      	push	{r7, lr}
 8003256:	b08e      	sub	sp, #56	@ 0x38
 8003258:	af00      	add	r7, sp, #0
 800325a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800325e:	2200      	movs	r2, #0
 8003260:	601a      	str	r2, [r3, #0]
 8003262:	605a      	str	r2, [r3, #4]
 8003264:	609a      	str	r2, [r3, #8]
 8003266:	60da      	str	r2, [r3, #12]
 8003268:	611a      	str	r2, [r3, #16]
 800326a:	2300      	movs	r3, #0
 800326c:	623b      	str	r3, [r7, #32]
 800326e:	4b84      	ldr	r3, [pc, #528]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003270:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003272:	4a83      	ldr	r2, [pc, #524]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003274:	f043 0302 	orr.w	r3, r3, #2
 8003278:	6313      	str	r3, [r2, #48]	@ 0x30
 800327a:	4b81      	ldr	r3, [pc, #516]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800327c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800327e:	f003 0302 	and.w	r3, r3, #2
 8003282:	623b      	str	r3, [r7, #32]
 8003284:	6a3b      	ldr	r3, [r7, #32]
 8003286:	2300      	movs	r3, #0
 8003288:	61fb      	str	r3, [r7, #28]
 800328a:	4b7d      	ldr	r3, [pc, #500]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800328c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800328e:	4a7c      	ldr	r2, [pc, #496]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003290:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003294:	6313      	str	r3, [r2, #48]	@ 0x30
 8003296:	4b7a      	ldr	r3, [pc, #488]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003298:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800329a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800329e:	61fb      	str	r3, [r7, #28]
 80032a0:	69fb      	ldr	r3, [r7, #28]
 80032a2:	2300      	movs	r3, #0
 80032a4:	61bb      	str	r3, [r7, #24]
 80032a6:	4b76      	ldr	r3, [pc, #472]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032aa:	4a75      	ldr	r2, [pc, #468]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ac:	f043 0301 	orr.w	r3, r3, #1
 80032b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80032b2:	4b73      	ldr	r3, [pc, #460]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032b6:	f003 0301 	and.w	r3, r3, #1
 80032ba:	61bb      	str	r3, [r7, #24]
 80032bc:	69bb      	ldr	r3, [r7, #24]
 80032be:	2300      	movs	r3, #0
 80032c0:	617b      	str	r3, [r7, #20]
 80032c2:	4b6f      	ldr	r3, [pc, #444]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032c6:	4a6e      	ldr	r2, [pc, #440]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c8:	f043 0308 	orr.w	r3, r3, #8
 80032cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ce:	4b6c      	ldr	r3, [pc, #432]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d2:	f003 0308 	and.w	r3, r3, #8
 80032d6:	617b      	str	r3, [r7, #20]
 80032d8:	697b      	ldr	r3, [r7, #20]
 80032da:	2300      	movs	r3, #0
 80032dc:	613b      	str	r3, [r7, #16]
 80032de:	4b68      	ldr	r3, [pc, #416]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032e2:	4a67      	ldr	r2, [pc, #412]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e4:	f043 0304 	orr.w	r3, r3, #4
 80032e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ea:	4b65      	ldr	r3, [pc, #404]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032ee:	f003 0304 	and.w	r3, r3, #4
 80032f2:	613b      	str	r3, [r7, #16]
 80032f4:	693b      	ldr	r3, [r7, #16]
 80032f6:	2300      	movs	r3, #0
 80032f8:	60fb      	str	r3, [r7, #12]
 80032fa:	4b61      	ldr	r3, [pc, #388]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032fe:	4a60      	ldr	r2, [pc, #384]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003300:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003304:	6313      	str	r3, [r2, #48]	@ 0x30
 8003306:	4b5e      	ldr	r3, [pc, #376]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800330a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800330e:	60fb      	str	r3, [r7, #12]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	2300      	movs	r3, #0
 8003314:	60bb      	str	r3, [r7, #8]
 8003316:	4b5a      	ldr	r3, [pc, #360]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800331a:	4a59      	ldr	r2, [pc, #356]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800331c:	f043 0320 	orr.w	r3, r3, #32
 8003320:	6313      	str	r3, [r2, #48]	@ 0x30
 8003322:	4b57      	ldr	r3, [pc, #348]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003324:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003326:	f003 0320 	and.w	r3, r3, #32
 800332a:	60bb      	str	r3, [r7, #8]
 800332c:	68bb      	ldr	r3, [r7, #8]
 800332e:	2300      	movs	r3, #0
 8003330:	607b      	str	r3, [r7, #4]
 8003332:	4b53      	ldr	r3, [pc, #332]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003336:	4a52      	ldr	r2, [pc, #328]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003338:	f043 0310 	orr.w	r3, r3, #16
 800333c:	6313      	str	r3, [r2, #48]	@ 0x30
 800333e:	4b50      	ldr	r3, [pc, #320]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003342:	f003 0310 	and.w	r3, r3, #16
 8003346:	607b      	str	r3, [r7, #4]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2200      	movs	r2, #0
 800334c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003350:	484c      	ldr	r0, [pc, #304]	@ (8003484 <MX_GPIO_Init+0x230>)
 8003352:	f009 fe25 	bl	800cfa0 <HAL_GPIO_WritePin>
 8003356:	2200      	movs	r2, #0
 8003358:	2140      	movs	r1, #64	@ 0x40
 800335a:	484b      	ldr	r0, [pc, #300]	@ (8003488 <MX_GPIO_Init+0x234>)
 800335c:	f009 fe20 	bl	800cfa0 <HAL_GPIO_WritePin>
 8003360:	2201      	movs	r2, #1
 8003362:	2110      	movs	r1, #16
 8003364:	4849      	ldr	r0, [pc, #292]	@ (800348c <MX_GPIO_Init+0x238>)
 8003366:	f009 fe1b 	bl	800cfa0 <HAL_GPIO_WritePin>
 800336a:	2201      	movs	r2, #1
 800336c:	2101      	movs	r1, #1
 800336e:	4848      	ldr	r0, [pc, #288]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003370:	f009 fe16 	bl	800cfa0 <HAL_GPIO_WritePin>
 8003374:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003378:	627b      	str	r3, [r7, #36]	@ 0x24
 800337a:	2301      	movs	r3, #1
 800337c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800337e:	2300      	movs	r3, #0
 8003380:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003382:	2300      	movs	r3, #0
 8003384:	633b      	str	r3, [r7, #48]	@ 0x30
 8003386:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800338a:	4619      	mov	r1, r3
 800338c:	483d      	ldr	r0, [pc, #244]	@ (8003484 <MX_GPIO_Init+0x230>)
 800338e:	f009 fc6b 	bl	800cc68 <HAL_GPIO_Init>
 8003392:	2340      	movs	r3, #64	@ 0x40
 8003394:	627b      	str	r3, [r7, #36]	@ 0x24
 8003396:	2301      	movs	r3, #1
 8003398:	62bb      	str	r3, [r7, #40]	@ 0x28
 800339a:	2300      	movs	r3, #0
 800339c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800339e:	2300      	movs	r3, #0
 80033a0:	633b      	str	r3, [r7, #48]	@ 0x30
 80033a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033a6:	4619      	mov	r1, r3
 80033a8:	4837      	ldr	r0, [pc, #220]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033aa:	f009 fc5d 	bl	800cc68 <HAL_GPIO_Init>
 80033ae:	2308      	movs	r3, #8
 80033b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80033b2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033b8:	2301      	movs	r3, #1
 80033ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033bc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033c0:	4619      	mov	r1, r3
 80033c2:	4831      	ldr	r0, [pc, #196]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033c4:	f009 fc50 	bl	800cc68 <HAL_GPIO_Init>
 80033c8:	2310      	movs	r3, #16
 80033ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80033cc:	2301      	movs	r3, #1
 80033ce:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033d0:	2300      	movs	r3, #0
 80033d2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033d4:	2300      	movs	r3, #0
 80033d6:	633b      	str	r3, [r7, #48]	@ 0x30
 80033d8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033dc:	4619      	mov	r1, r3
 80033de:	482b      	ldr	r0, [pc, #172]	@ (800348c <MX_GPIO_Init+0x238>)
 80033e0:	f009 fc42 	bl	800cc68 <HAL_GPIO_Init>
 80033e4:	2330      	movs	r3, #48	@ 0x30
 80033e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80033e8:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033ee:	2301      	movs	r3, #1
 80033f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033f2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033f6:	4619      	mov	r1, r3
 80033f8:	4822      	ldr	r0, [pc, #136]	@ (8003484 <MX_GPIO_Init+0x230>)
 80033fa:	f009 fc35 	bl	800cc68 <HAL_GPIO_Init>
 80033fe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003402:	627b      	str	r3, [r7, #36]	@ 0x24
 8003404:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8003408:	62bb      	str	r3, [r7, #40]	@ 0x28
 800340a:	2300      	movs	r3, #0
 800340c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800340e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003412:	4619      	mov	r1, r3
 8003414:	481f      	ldr	r0, [pc, #124]	@ (8003494 <MX_GPIO_Init+0x240>)
 8003416:	f009 fc27 	bl	800cc68 <HAL_GPIO_Init>
 800341a:	2301      	movs	r3, #1
 800341c:	627b      	str	r3, [r7, #36]	@ 0x24
 800341e:	2301      	movs	r3, #1
 8003420:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003422:	2300      	movs	r3, #0
 8003424:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003426:	2300      	movs	r3, #0
 8003428:	633b      	str	r3, [r7, #48]	@ 0x30
 800342a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800342e:	4619      	mov	r1, r3
 8003430:	4817      	ldr	r0, [pc, #92]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003432:	f009 fc19 	bl	800cc68 <HAL_GPIO_Init>
 8003436:	2200      	movs	r2, #0
 8003438:	2105      	movs	r1, #5
 800343a:	2009      	movs	r0, #9
 800343c:	f008 ffce 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003440:	2009      	movs	r0, #9
 8003442:	f008 ffe7 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003446:	2200      	movs	r2, #0
 8003448:	2105      	movs	r1, #5
 800344a:	200a      	movs	r0, #10
 800344c:	f008 ffc6 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003450:	200a      	movs	r0, #10
 8003452:	f008 ffdf 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003456:	2200      	movs	r2, #0
 8003458:	2105      	movs	r1, #5
 800345a:	2017      	movs	r0, #23
 800345c:	f008 ffbe 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003460:	2017      	movs	r0, #23
 8003462:	f008 ffd7 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003466:	2200      	movs	r2, #0
 8003468:	2105      	movs	r1, #5
 800346a:	2028      	movs	r0, #40	@ 0x28
 800346c:	f008 ffb6 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003470:	2028      	movs	r0, #40	@ 0x28
 8003472:	f008 ffcf 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003476:	bf00      	nop
 8003478:	3738      	adds	r7, #56	@ 0x38
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}
 800347e:	bf00      	nop
 8003480:	40023800 	.word	0x40023800
 8003484:	40020800 	.word	0x40020800
 8003488:	40021800 	.word	0x40021800
 800348c:	40020000 	.word	0x40020000
 8003490:	40020400 	.word	0x40020400
 8003494:	40021000 	.word	0x40021000

08003498 <MX_I2C3_Init>:
 8003498:	b580      	push	{r7, lr}
 800349a:	af00      	add	r7, sp, #0
 800349c:	4b12      	ldr	r3, [pc, #72]	@ (80034e8 <MX_I2C3_Init+0x50>)
 800349e:	4a13      	ldr	r2, [pc, #76]	@ (80034ec <MX_I2C3_Init+0x54>)
 80034a0:	601a      	str	r2, [r3, #0]
 80034a2:	4b11      	ldr	r3, [pc, #68]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034a4:	4a12      	ldr	r2, [pc, #72]	@ (80034f0 <MX_I2C3_Init+0x58>)
 80034a6:	605a      	str	r2, [r3, #4]
 80034a8:	4b0f      	ldr	r3, [pc, #60]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034aa:	2200      	movs	r2, #0
 80034ac:	609a      	str	r2, [r3, #8]
 80034ae:	4b0e      	ldr	r3, [pc, #56]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b0:	2200      	movs	r2, #0
 80034b2:	60da      	str	r2, [r3, #12]
 80034b4:	4b0c      	ldr	r3, [pc, #48]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b6:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80034ba:	611a      	str	r2, [r3, #16]
 80034bc:	4b0a      	ldr	r3, [pc, #40]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034be:	2200      	movs	r2, #0
 80034c0:	615a      	str	r2, [r3, #20]
 80034c2:	4b09      	ldr	r3, [pc, #36]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034c4:	2200      	movs	r2, #0
 80034c6:	619a      	str	r2, [r3, #24]
 80034c8:	4b07      	ldr	r3, [pc, #28]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034ca:	2200      	movs	r2, #0
 80034cc:	61da      	str	r2, [r3, #28]
 80034ce:	4b06      	ldr	r3, [pc, #24]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d0:	2200      	movs	r2, #0
 80034d2:	621a      	str	r2, [r3, #32]
 80034d4:	4804      	ldr	r0, [pc, #16]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d6:	f009 fd95 	bl	800d004 <HAL_I2C_Init>
 80034da:	4603      	mov	r3, r0
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d001      	beq.n	80034e4 <MX_I2C3_Init+0x4c>
 80034e0:	f000 f98a 	bl	80037f8 <Error_Handler>
 80034e4:	bf00      	nop
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	20001840 	.word	0x20001840
 80034ec:	40005c00 	.word	0x40005c00
 80034f0:	00061a80 	.word	0x00061a80

080034f4 <HAL_I2C_MspInit>:
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b08a      	sub	sp, #40	@ 0x28
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	6078      	str	r0, [r7, #4]
 80034fc:	f107 0314 	add.w	r3, r7, #20
 8003500:	2200      	movs	r2, #0
 8003502:	601a      	str	r2, [r3, #0]
 8003504:	605a      	str	r2, [r3, #4]
 8003506:	609a      	str	r2, [r3, #8]
 8003508:	60da      	str	r2, [r3, #12]
 800350a:	611a      	str	r2, [r3, #16]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	4a5b      	ldr	r2, [pc, #364]	@ (8003680 <HAL_I2C_MspInit+0x18c>)
 8003512:	4293      	cmp	r3, r2
 8003514:	f040 80b0 	bne.w	8003678 <HAL_I2C_MspInit+0x184>
 8003518:	2300      	movs	r3, #0
 800351a:	613b      	str	r3, [r7, #16]
 800351c:	4b59      	ldr	r3, [pc, #356]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800351e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003520:	4a58      	ldr	r2, [pc, #352]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003522:	f043 0304 	orr.w	r3, r3, #4
 8003526:	6313      	str	r3, [r2, #48]	@ 0x30
 8003528:	4b56      	ldr	r3, [pc, #344]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800352a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800352c:	f003 0304 	and.w	r3, r3, #4
 8003530:	613b      	str	r3, [r7, #16]
 8003532:	693b      	ldr	r3, [r7, #16]
 8003534:	2300      	movs	r3, #0
 8003536:	60fb      	str	r3, [r7, #12]
 8003538:	4b52      	ldr	r3, [pc, #328]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800353c:	4a51      	ldr	r2, [pc, #324]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353e:	f043 0301 	orr.w	r3, r3, #1
 8003542:	6313      	str	r3, [r2, #48]	@ 0x30
 8003544:	4b4f      	ldr	r3, [pc, #316]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003546:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003548:	f003 0301 	and.w	r3, r3, #1
 800354c:	60fb      	str	r3, [r7, #12]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003554:	617b      	str	r3, [r7, #20]
 8003556:	2312      	movs	r3, #18
 8003558:	61bb      	str	r3, [r7, #24]
 800355a:	2301      	movs	r3, #1
 800355c:	61fb      	str	r3, [r7, #28]
 800355e:	2303      	movs	r3, #3
 8003560:	623b      	str	r3, [r7, #32]
 8003562:	2304      	movs	r3, #4
 8003564:	627b      	str	r3, [r7, #36]	@ 0x24
 8003566:	f107 0314 	add.w	r3, r7, #20
 800356a:	4619      	mov	r1, r3
 800356c:	4846      	ldr	r0, [pc, #280]	@ (8003688 <HAL_I2C_MspInit+0x194>)
 800356e:	f009 fb7b 	bl	800cc68 <HAL_GPIO_Init>
 8003572:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003576:	617b      	str	r3, [r7, #20]
 8003578:	2312      	movs	r3, #18
 800357a:	61bb      	str	r3, [r7, #24]
 800357c:	2301      	movs	r3, #1
 800357e:	61fb      	str	r3, [r7, #28]
 8003580:	2303      	movs	r3, #3
 8003582:	623b      	str	r3, [r7, #32]
 8003584:	2304      	movs	r3, #4
 8003586:	627b      	str	r3, [r7, #36]	@ 0x24
 8003588:	f107 0314 	add.w	r3, r7, #20
 800358c:	4619      	mov	r1, r3
 800358e:	483f      	ldr	r0, [pc, #252]	@ (800368c <HAL_I2C_MspInit+0x198>)
 8003590:	f009 fb6a 	bl	800cc68 <HAL_GPIO_Init>
 8003594:	2300      	movs	r3, #0
 8003596:	60bb      	str	r3, [r7, #8]
 8003598:	4b3a      	ldr	r3, [pc, #232]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800359c:	4a39      	ldr	r2, [pc, #228]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80035a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80035a4:	4b37      	ldr	r3, [pc, #220]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 80035a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035a8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80035ac:	60bb      	str	r3, [r7, #8]
 80035ae:	68bb      	ldr	r3, [r7, #8]
 80035b0:	4b37      	ldr	r3, [pc, #220]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b2:	4a38      	ldr	r2, [pc, #224]	@ (8003694 <HAL_I2C_MspInit+0x1a0>)
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	4b36      	ldr	r3, [pc, #216]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80035bc:	605a      	str	r2, [r3, #4]
 80035be:	4b34      	ldr	r3, [pc, #208]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c0:	2200      	movs	r2, #0
 80035c2:	609a      	str	r2, [r3, #8]
 80035c4:	4b32      	ldr	r3, [pc, #200]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c6:	2200      	movs	r2, #0
 80035c8:	60da      	str	r2, [r3, #12]
 80035ca:	4b31      	ldr	r3, [pc, #196]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035cc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80035d0:	611a      	str	r2, [r3, #16]
 80035d2:	4b2f      	ldr	r3, [pc, #188]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035d4:	2200      	movs	r2, #0
 80035d6:	615a      	str	r2, [r3, #20]
 80035d8:	4b2d      	ldr	r3, [pc, #180]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035da:	2200      	movs	r2, #0
 80035dc:	619a      	str	r2, [r3, #24]
 80035de:	4b2c      	ldr	r3, [pc, #176]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e0:	2200      	movs	r2, #0
 80035e2:	61da      	str	r2, [r3, #28]
 80035e4:	4b2a      	ldr	r3, [pc, #168]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e6:	2200      	movs	r2, #0
 80035e8:	621a      	str	r2, [r3, #32]
 80035ea:	4b29      	ldr	r3, [pc, #164]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035ec:	2200      	movs	r2, #0
 80035ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80035f0:	4827      	ldr	r0, [pc, #156]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035f2:	f008 ff2b 	bl	800c44c <HAL_DMA_Init>
 80035f6:	4603      	mov	r3, r0
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d001      	beq.n	8003600 <HAL_I2C_MspInit+0x10c>
 80035fc:	f000 f8fc 	bl	80037f8 <Error_Handler>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	4a23      	ldr	r2, [pc, #140]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003604:	639a      	str	r2, [r3, #56]	@ 0x38
 8003606:	4a22      	ldr	r2, [pc, #136]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	6393      	str	r3, [r2, #56]	@ 0x38
 800360c:	4b22      	ldr	r3, [pc, #136]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800360e:	4a23      	ldr	r2, [pc, #140]	@ (800369c <HAL_I2C_MspInit+0x1a8>)
 8003610:	601a      	str	r2, [r3, #0]
 8003612:	4b21      	ldr	r3, [pc, #132]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003614:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 8003618:	605a      	str	r2, [r3, #4]
 800361a:	4b1f      	ldr	r3, [pc, #124]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800361c:	2240      	movs	r2, #64	@ 0x40
 800361e:	609a      	str	r2, [r3, #8]
 8003620:	4b1d      	ldr	r3, [pc, #116]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003622:	2200      	movs	r2, #0
 8003624:	60da      	str	r2, [r3, #12]
 8003626:	4b1c      	ldr	r3, [pc, #112]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003628:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800362c:	611a      	str	r2, [r3, #16]
 800362e:	4b1a      	ldr	r3, [pc, #104]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003630:	2200      	movs	r2, #0
 8003632:	615a      	str	r2, [r3, #20]
 8003634:	4b18      	ldr	r3, [pc, #96]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003636:	2200      	movs	r2, #0
 8003638:	619a      	str	r2, [r3, #24]
 800363a:	4b17      	ldr	r3, [pc, #92]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800363c:	2200      	movs	r2, #0
 800363e:	61da      	str	r2, [r3, #28]
 8003640:	4b15      	ldr	r3, [pc, #84]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003642:	2200      	movs	r2, #0
 8003644:	621a      	str	r2, [r3, #32]
 8003646:	4b14      	ldr	r3, [pc, #80]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003648:	2200      	movs	r2, #0
 800364a:	625a      	str	r2, [r3, #36]	@ 0x24
 800364c:	4812      	ldr	r0, [pc, #72]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800364e:	f008 fefd 	bl	800c44c <HAL_DMA_Init>
 8003652:	4603      	mov	r3, r0
 8003654:	2b00      	cmp	r3, #0
 8003656:	d001      	beq.n	800365c <HAL_I2C_MspInit+0x168>
 8003658:	f000 f8ce 	bl	80037f8 <Error_Handler>
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	4a0e      	ldr	r2, [pc, #56]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003660:	635a      	str	r2, [r3, #52]	@ 0x34
 8003662:	4a0d      	ldr	r2, [pc, #52]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6393      	str	r3, [r2, #56]	@ 0x38
 8003668:	2200      	movs	r2, #0
 800366a:	2105      	movs	r1, #5
 800366c:	2049      	movs	r0, #73	@ 0x49
 800366e:	f008 feb5 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003672:	2049      	movs	r0, #73	@ 0x49
 8003674:	f008 fece 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003678:	bf00      	nop
 800367a:	3728      	adds	r7, #40	@ 0x28
 800367c:	46bd      	mov	sp, r7
 800367e:	bd80      	pop	{r7, pc}
 8003680:	40005c00 	.word	0x40005c00
 8003684:	40023800 	.word	0x40023800
 8003688:	40020800 	.word	0x40020800
 800368c:	40020000 	.word	0x40020000
 8003690:	20001894 	.word	0x20001894
 8003694:	40026040 	.word	0x40026040
 8003698:	200018f4 	.word	0x200018f4
 800369c:	40026070 	.word	0x40026070

080036a0 <main>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	af00      	add	r7, sp, #0
 80036a4:	f007 fc76 	bl	800af94 <HAL_Init>
 80036a8:	f000 f82a 	bl	8003700 <SystemClock_Config>
 80036ac:	f7ff fdd2 	bl	8003254 <MX_GPIO_Init>
 80036b0:	f7ff fce2 	bl	8003078 <MX_DMA_Init>
 80036b4:	f7ff fbb4 	bl	8002e20 <MX_CAN1_Init>
 80036b8:	f7ff fbe8 	bl	8002e8c <MX_CAN2_Init>
 80036bc:	f000 fdb8 	bl	8004230 <MX_TIM5_Init>
 80036c0:	f000 fe26 	bl	8004310 <MX_TIM10_Init>
 80036c4:	f000 ff74 	bl	80045b0 <MX_USART1_UART_Init>
 80036c8:	f000 ff9c 	bl	8004604 <MX_USART3_UART_Init>
 80036cc:	f000 ffc6 	bl	800465c <MX_USART6_UART_Init>
 80036d0:	f000 f8ce 	bl	8003870 <MX_SPI1_Init>
 80036d4:	f7ff fee0 	bl	8003498 <MX_I2C3_Init>
 80036d8:	f7ff fb0c 	bl	8002cf4 <MX_ADC3_Init>
 80036dc:	f000 fcdc 	bl	8004098 <MX_TIM3_Init>
 80036e0:	f000 fd4c 	bl	800417c <MX_TIM4_Init>
 80036e4:	f000 f88e 	bl	8003804 <MX_RNG_Init>
 80036e8:	f000 fca4 	bl	8004034 <MX_TIM2_Init>
 80036ec:	f007 fbd3 	bl	800ae96 <startup_task>
 80036f0:	f016 fd22 	bl	801a138 <MX_USB_DEVICE_Init>
 80036f4:	f7ff fd74 	bl	80031e0 <MX_FREERTOS_Init>
 80036f8:	f013 fc36 	bl	8016f68 <osKernelStart>
 80036fc:	bf00      	nop
 80036fe:	e7fd      	b.n	80036fc <main+0x5c>

08003700 <SystemClock_Config>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b094      	sub	sp, #80	@ 0x50
 8003704:	af00      	add	r7, sp, #0
 8003706:	f107 0320 	add.w	r3, r7, #32
 800370a:	2230      	movs	r2, #48	@ 0x30
 800370c:	2100      	movs	r1, #0
 800370e:	4618      	mov	r0, r3
 8003710:	f017 fb87 	bl	801ae22 <memset>
 8003714:	f107 030c 	add.w	r3, r7, #12
 8003718:	2200      	movs	r2, #0
 800371a:	601a      	str	r2, [r3, #0]
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	609a      	str	r2, [r3, #8]
 8003720:	60da      	str	r2, [r3, #12]
 8003722:	611a      	str	r2, [r3, #16]
 8003724:	2300      	movs	r3, #0
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	4b28      	ldr	r3, [pc, #160]	@ (80037cc <SystemClock_Config+0xcc>)
 800372a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800372c:	4a27      	ldr	r2, [pc, #156]	@ (80037cc <SystemClock_Config+0xcc>)
 800372e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003732:	6413      	str	r3, [r2, #64]	@ 0x40
 8003734:	4b25      	ldr	r3, [pc, #148]	@ (80037cc <SystemClock_Config+0xcc>)
 8003736:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003738:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800373c:	60bb      	str	r3, [r7, #8]
 800373e:	68bb      	ldr	r3, [r7, #8]
 8003740:	2300      	movs	r3, #0
 8003742:	607b      	str	r3, [r7, #4]
 8003744:	4b22      	ldr	r3, [pc, #136]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	4a21      	ldr	r2, [pc, #132]	@ (80037d0 <SystemClock_Config+0xd0>)
 800374a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800374e:	6013      	str	r3, [r2, #0]
 8003750:	4b1f      	ldr	r3, [pc, #124]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003758:	607b      	str	r3, [r7, #4]
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	2301      	movs	r3, #1
 800375e:	623b      	str	r3, [r7, #32]
 8003760:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003764:	627b      	str	r3, [r7, #36]	@ 0x24
 8003766:	2302      	movs	r3, #2
 8003768:	63bb      	str	r3, [r7, #56]	@ 0x38
 800376a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800376e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003770:	2306      	movs	r3, #6
 8003772:	643b      	str	r3, [r7, #64]	@ 0x40
 8003774:	23a8      	movs	r3, #168	@ 0xa8
 8003776:	647b      	str	r3, [r7, #68]	@ 0x44
 8003778:	2302      	movs	r3, #2
 800377a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800377c:	2307      	movs	r3, #7
 800377e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003780:	f107 0320 	add.w	r3, r7, #32
 8003784:	4618      	mov	r0, r3
 8003786:	f00c fc45 	bl	8010014 <HAL_RCC_OscConfig>
 800378a:	4603      	mov	r3, r0
 800378c:	2b00      	cmp	r3, #0
 800378e:	d001      	beq.n	8003794 <SystemClock_Config+0x94>
 8003790:	f000 f832 	bl	80037f8 <Error_Handler>
 8003794:	230f      	movs	r3, #15
 8003796:	60fb      	str	r3, [r7, #12]
 8003798:	2302      	movs	r3, #2
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	2300      	movs	r3, #0
 800379e:	617b      	str	r3, [r7, #20]
 80037a0:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80037a4:	61bb      	str	r3, [r7, #24]
 80037a6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80037aa:	61fb      	str	r3, [r7, #28]
 80037ac:	f107 030c 	add.w	r3, r7, #12
 80037b0:	2105      	movs	r1, #5
 80037b2:	4618      	mov	r0, r3
 80037b4:	f00c fea6 	bl	8010504 <HAL_RCC_ClockConfig>
 80037b8:	4603      	mov	r3, r0
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d001      	beq.n	80037c2 <SystemClock_Config+0xc2>
 80037be:	f000 f81b 	bl	80037f8 <Error_Handler>
 80037c2:	bf00      	nop
 80037c4:	3750      	adds	r7, #80	@ 0x50
 80037c6:	46bd      	mov	sp, r7
 80037c8:	bd80      	pop	{r7, pc}
 80037ca:	bf00      	nop
 80037cc:	40023800 	.word	0x40023800
 80037d0:	40007000 	.word	0x40007000

080037d4 <HAL_TIM_PeriodElapsedCallback>:
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b082      	sub	sp, #8
 80037d8:	af00      	add	r7, sp, #0
 80037da:	6078      	str	r0, [r7, #4]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	4a04      	ldr	r2, [pc, #16]	@ (80037f4 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80037e2:	4293      	cmp	r3, r2
 80037e4:	d101      	bne.n	80037ea <HAL_TIM_PeriodElapsedCallback+0x16>
 80037e6:	f007 fbf7 	bl	800afd8 <HAL_IncTick>
 80037ea:	bf00      	nop
 80037ec:	3708      	adds	r7, #8
 80037ee:	46bd      	mov	sp, r7
 80037f0:	bd80      	pop	{r7, pc}
 80037f2:	bf00      	nop
 80037f4:	40001000 	.word	0x40001000

080037f8 <Error_Handler>:
 80037f8:	b480      	push	{r7}
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	b672      	cpsid	i
 80037fe:	bf00      	nop
 8003800:	bf00      	nop
 8003802:	e7fd      	b.n	8003800 <Error_Handler+0x8>

08003804 <MX_RNG_Init>:
 8003804:	b580      	push	{r7, lr}
 8003806:	af00      	add	r7, sp, #0
 8003808:	4b06      	ldr	r3, [pc, #24]	@ (8003824 <MX_RNG_Init+0x20>)
 800380a:	4a07      	ldr	r2, [pc, #28]	@ (8003828 <MX_RNG_Init+0x24>)
 800380c:	601a      	str	r2, [r3, #0]
 800380e:	4805      	ldr	r0, [pc, #20]	@ (8003824 <MX_RNG_Init+0x20>)
 8003810:	f00d f88a 	bl	8010928 <HAL_RNG_Init>
 8003814:	4603      	mov	r3, r0
 8003816:	2b00      	cmp	r3, #0
 8003818:	d001      	beq.n	800381e <MX_RNG_Init+0x1a>
 800381a:	f7ff ffed 	bl	80037f8 <Error_Handler>
 800381e:	bf00      	nop
 8003820:	bd80      	pop	{r7, pc}
 8003822:	bf00      	nop
 8003824:	20001954 	.word	0x20001954
 8003828:	50060800 	.word	0x50060800

0800382c <HAL_RNG_MspInit>:
 800382c:	b480      	push	{r7}
 800382e:	b085      	sub	sp, #20
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	4a0b      	ldr	r2, [pc, #44]	@ (8003868 <HAL_RNG_MspInit+0x3c>)
 800383a:	4293      	cmp	r3, r2
 800383c:	d10d      	bne.n	800385a <HAL_RNG_MspInit+0x2e>
 800383e:	2300      	movs	r3, #0
 8003840:	60fb      	str	r3, [r7, #12]
 8003842:	4b0a      	ldr	r3, [pc, #40]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003844:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003846:	4a09      	ldr	r2, [pc, #36]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003848:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800384c:	6353      	str	r3, [r2, #52]	@ 0x34
 800384e:	4b07      	ldr	r3, [pc, #28]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003850:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003852:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	bf00      	nop
 800385c:	3714      	adds	r7, #20
 800385e:	46bd      	mov	sp, r7
 8003860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	50060800 	.word	0x50060800
 800386c:	40023800 	.word	0x40023800

08003870 <MX_SPI1_Init>:
 8003870:	b580      	push	{r7, lr}
 8003872:	af00      	add	r7, sp, #0
 8003874:	4b17      	ldr	r3, [pc, #92]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003876:	4a18      	ldr	r2, [pc, #96]	@ (80038d8 <MX_SPI1_Init+0x68>)
 8003878:	601a      	str	r2, [r3, #0]
 800387a:	4b16      	ldr	r3, [pc, #88]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800387c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003880:	605a      	str	r2, [r3, #4]
 8003882:	4b14      	ldr	r3, [pc, #80]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003884:	2200      	movs	r2, #0
 8003886:	609a      	str	r2, [r3, #8]
 8003888:	4b12      	ldr	r3, [pc, #72]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800388a:	2200      	movs	r2, #0
 800388c:	60da      	str	r2, [r3, #12]
 800388e:	4b11      	ldr	r3, [pc, #68]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003890:	2200      	movs	r2, #0
 8003892:	611a      	str	r2, [r3, #16]
 8003894:	4b0f      	ldr	r3, [pc, #60]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003896:	2200      	movs	r2, #0
 8003898:	615a      	str	r2, [r3, #20]
 800389a:	4b0e      	ldr	r3, [pc, #56]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800389c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80038a0:	619a      	str	r2, [r3, #24]
 80038a2:	4b0c      	ldr	r3, [pc, #48]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038a4:	2228      	movs	r2, #40	@ 0x28
 80038a6:	61da      	str	r2, [r3, #28]
 80038a8:	4b0a      	ldr	r3, [pc, #40]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038aa:	2200      	movs	r2, #0
 80038ac:	621a      	str	r2, [r3, #32]
 80038ae:	4b09      	ldr	r3, [pc, #36]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b0:	2200      	movs	r2, #0
 80038b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80038b4:	4b07      	ldr	r3, [pc, #28]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b6:	2200      	movs	r2, #0
 80038b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80038ba:	4b06      	ldr	r3, [pc, #24]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038bc:	220a      	movs	r2, #10
 80038be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038c0:	4804      	ldr	r0, [pc, #16]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038c2:	f00d f85b 	bl	801097c <HAL_SPI_Init>
 80038c6:	4603      	mov	r3, r0
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d001      	beq.n	80038d0 <MX_SPI1_Init+0x60>
 80038cc:	f7ff ff94 	bl	80037f8 <Error_Handler>
 80038d0:	bf00      	nop
 80038d2:	bd80      	pop	{r7, pc}
 80038d4:	20001964 	.word	0x20001964
 80038d8:	40013000 	.word	0x40013000

080038dc <HAL_SPI_MspInit>:
 80038dc:	b580      	push	{r7, lr}
 80038de:	b08a      	sub	sp, #40	@ 0x28
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
 80038e4:	f107 0314 	add.w	r3, r7, #20
 80038e8:	2200      	movs	r2, #0
 80038ea:	601a      	str	r2, [r3, #0]
 80038ec:	605a      	str	r2, [r3, #4]
 80038ee:	609a      	str	r2, [r3, #8]
 80038f0:	60da      	str	r2, [r3, #12]
 80038f2:	611a      	str	r2, [r3, #16]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4a56      	ldr	r2, [pc, #344]	@ (8003a54 <HAL_SPI_MspInit+0x178>)
 80038fa:	4293      	cmp	r3, r2
 80038fc:	f040 80a6 	bne.w	8003a4c <HAL_SPI_MspInit+0x170>
 8003900:	2300      	movs	r3, #0
 8003902:	613b      	str	r3, [r7, #16]
 8003904:	4b54      	ldr	r3, [pc, #336]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003906:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003908:	4a53      	ldr	r2, [pc, #332]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800390a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800390e:	6453      	str	r3, [r2, #68]	@ 0x44
 8003910:	4b51      	ldr	r3, [pc, #324]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003912:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003914:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003918:	613b      	str	r3, [r7, #16]
 800391a:	693b      	ldr	r3, [r7, #16]
 800391c:	2300      	movs	r3, #0
 800391e:	60fb      	str	r3, [r7, #12]
 8003920:	4b4d      	ldr	r3, [pc, #308]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003924:	4a4c      	ldr	r2, [pc, #304]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003926:	f043 0302 	orr.w	r3, r3, #2
 800392a:	6313      	str	r3, [r2, #48]	@ 0x30
 800392c:	4b4a      	ldr	r3, [pc, #296]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800392e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003930:	f003 0302 	and.w	r3, r3, #2
 8003934:	60fb      	str	r3, [r7, #12]
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	2300      	movs	r3, #0
 800393a:	60bb      	str	r3, [r7, #8]
 800393c:	4b46      	ldr	r3, [pc, #280]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800393e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003940:	4a45      	ldr	r2, [pc, #276]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003942:	f043 0301 	orr.w	r3, r3, #1
 8003946:	6313      	str	r3, [r2, #48]	@ 0x30
 8003948:	4b43      	ldr	r3, [pc, #268]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800394a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800394c:	f003 0301 	and.w	r3, r3, #1
 8003950:	60bb      	str	r3, [r7, #8]
 8003952:	68bb      	ldr	r3, [r7, #8]
 8003954:	2318      	movs	r3, #24
 8003956:	617b      	str	r3, [r7, #20]
 8003958:	2302      	movs	r3, #2
 800395a:	61bb      	str	r3, [r7, #24]
 800395c:	2300      	movs	r3, #0
 800395e:	61fb      	str	r3, [r7, #28]
 8003960:	2303      	movs	r3, #3
 8003962:	623b      	str	r3, [r7, #32]
 8003964:	2305      	movs	r3, #5
 8003966:	627b      	str	r3, [r7, #36]	@ 0x24
 8003968:	f107 0314 	add.w	r3, r7, #20
 800396c:	4619      	mov	r1, r3
 800396e:	483b      	ldr	r0, [pc, #236]	@ (8003a5c <HAL_SPI_MspInit+0x180>)
 8003970:	f009 f97a 	bl	800cc68 <HAL_GPIO_Init>
 8003974:	2380      	movs	r3, #128	@ 0x80
 8003976:	617b      	str	r3, [r7, #20]
 8003978:	2302      	movs	r3, #2
 800397a:	61bb      	str	r3, [r7, #24]
 800397c:	2300      	movs	r3, #0
 800397e:	61fb      	str	r3, [r7, #28]
 8003980:	2303      	movs	r3, #3
 8003982:	623b      	str	r3, [r7, #32]
 8003984:	2305      	movs	r3, #5
 8003986:	627b      	str	r3, [r7, #36]	@ 0x24
 8003988:	f107 0314 	add.w	r3, r7, #20
 800398c:	4619      	mov	r1, r3
 800398e:	4834      	ldr	r0, [pc, #208]	@ (8003a60 <HAL_SPI_MspInit+0x184>)
 8003990:	f009 f96a 	bl	800cc68 <HAL_GPIO_Init>
 8003994:	4b33      	ldr	r3, [pc, #204]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 8003996:	4a34      	ldr	r2, [pc, #208]	@ (8003a68 <HAL_SPI_MspInit+0x18c>)
 8003998:	601a      	str	r2, [r3, #0]
 800399a:	4b32      	ldr	r3, [pc, #200]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 800399c:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039a0:	605a      	str	r2, [r3, #4]
 80039a2:	4b30      	ldr	r3, [pc, #192]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039a4:	2200      	movs	r2, #0
 80039a6:	609a      	str	r2, [r3, #8]
 80039a8:	4b2e      	ldr	r3, [pc, #184]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039aa:	2200      	movs	r2, #0
 80039ac:	60da      	str	r2, [r3, #12]
 80039ae:	4b2d      	ldr	r3, [pc, #180]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80039b4:	611a      	str	r2, [r3, #16]
 80039b6:	4b2b      	ldr	r3, [pc, #172]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	615a      	str	r2, [r3, #20]
 80039bc:	4b29      	ldr	r3, [pc, #164]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039be:	2200      	movs	r2, #0
 80039c0:	619a      	str	r2, [r3, #24]
 80039c2:	4b28      	ldr	r3, [pc, #160]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039c4:	2200      	movs	r2, #0
 80039c6:	61da      	str	r2, [r3, #28]
 80039c8:	4b26      	ldr	r3, [pc, #152]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ca:	2200      	movs	r2, #0
 80039cc:	621a      	str	r2, [r3, #32]
 80039ce:	4b25      	ldr	r3, [pc, #148]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d0:	2200      	movs	r2, #0
 80039d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80039d4:	4823      	ldr	r0, [pc, #140]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d6:	f008 fd39 	bl	800c44c <HAL_DMA_Init>
 80039da:	4603      	mov	r3, r0
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d001      	beq.n	80039e4 <HAL_SPI_MspInit+0x108>
 80039e0:	f7ff ff0a 	bl	80037f8 <Error_Handler>
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	4a1f      	ldr	r2, [pc, #124]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039e8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80039ea:	4a1e      	ldr	r2, [pc, #120]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6393      	str	r3, [r2, #56]	@ 0x38
 80039f0:	4b1e      	ldr	r3, [pc, #120]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f2:	4a1f      	ldr	r2, [pc, #124]	@ (8003a70 <HAL_SPI_MspInit+0x194>)
 80039f4:	601a      	str	r2, [r3, #0]
 80039f6:	4b1d      	ldr	r3, [pc, #116]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039fc:	605a      	str	r2, [r3, #4]
 80039fe:	4b1b      	ldr	r3, [pc, #108]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a00:	2240      	movs	r2, #64	@ 0x40
 8003a02:	609a      	str	r2, [r3, #8]
 8003a04:	4b19      	ldr	r3, [pc, #100]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a06:	2200      	movs	r2, #0
 8003a08:	60da      	str	r2, [r3, #12]
 8003a0a:	4b18      	ldr	r3, [pc, #96]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a0c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003a10:	611a      	str	r2, [r3, #16]
 8003a12:	4b16      	ldr	r3, [pc, #88]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	615a      	str	r2, [r3, #20]
 8003a18:	4b14      	ldr	r3, [pc, #80]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a1a:	2200      	movs	r2, #0
 8003a1c:	619a      	str	r2, [r3, #24]
 8003a1e:	4b13      	ldr	r3, [pc, #76]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a20:	2200      	movs	r2, #0
 8003a22:	61da      	str	r2, [r3, #28]
 8003a24:	4b11      	ldr	r3, [pc, #68]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a26:	2200      	movs	r2, #0
 8003a28:	621a      	str	r2, [r3, #32]
 8003a2a:	4b10      	ldr	r3, [pc, #64]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a30:	480e      	ldr	r0, [pc, #56]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a32:	f008 fd0b 	bl	800c44c <HAL_DMA_Init>
 8003a36:	4603      	mov	r3, r0
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d001      	beq.n	8003a40 <HAL_SPI_MspInit+0x164>
 8003a3c:	f7ff fedc 	bl	80037f8 <Error_Handler>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	4a0a      	ldr	r2, [pc, #40]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a44:	649a      	str	r2, [r3, #72]	@ 0x48
 8003a46:	4a09      	ldr	r2, [pc, #36]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6393      	str	r3, [r2, #56]	@ 0x38
 8003a4c:	bf00      	nop
 8003a4e:	3728      	adds	r7, #40	@ 0x28
 8003a50:	46bd      	mov	sp, r7
 8003a52:	bd80      	pop	{r7, pc}
 8003a54:	40013000 	.word	0x40013000
 8003a58:	40023800 	.word	0x40023800
 8003a5c:	40020400 	.word	0x40020400
 8003a60:	40020000 	.word	0x40020000
 8003a64:	200019bc 	.word	0x200019bc
 8003a68:	40026410 	.word	0x40026410
 8003a6c:	20001a1c 	.word	0x20001a1c
 8003a70:	40026458 	.word	0x40026458

08003a74 <HAL_MspInit>:
 8003a74:	b580      	push	{r7, lr}
 8003a76:	b082      	sub	sp, #8
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	607b      	str	r3, [r7, #4]
 8003a7e:	4b12      	ldr	r3, [pc, #72]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a82:	4a11      	ldr	r2, [pc, #68]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a84:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003a88:	6453      	str	r3, [r2, #68]	@ 0x44
 8003a8a:	4b0f      	ldr	r3, [pc, #60]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a8e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003a92:	607b      	str	r3, [r7, #4]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2300      	movs	r3, #0
 8003a98:	603b      	str	r3, [r7, #0]
 8003a9a:	4b0b      	ldr	r3, [pc, #44]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a9e:	4a0a      	ldr	r2, [pc, #40]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003aa4:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aa6:	4b08      	ldr	r3, [pc, #32]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003aaa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003aae:	603b      	str	r3, [r7, #0]
 8003ab0:	683b      	ldr	r3, [r7, #0]
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	210f      	movs	r1, #15
 8003ab6:	f06f 0001 	mvn.w	r0, #1
 8003aba:	f008 fc8f 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003abe:	bf00      	nop
 8003ac0:	3708      	adds	r7, #8
 8003ac2:	46bd      	mov	sp, r7
 8003ac4:	bd80      	pop	{r7, pc}
 8003ac6:	bf00      	nop
 8003ac8:	40023800 	.word	0x40023800

08003acc <HAL_InitTick>:
 8003acc:	b580      	push	{r7, lr}
 8003ace:	b08e      	sub	sp, #56	@ 0x38
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ad8:	2300      	movs	r3, #0
 8003ada:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003adc:	2300      	movs	r3, #0
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	4b33      	ldr	r3, [pc, #204]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ae4:	4a32      	ldr	r2, [pc, #200]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae6:	f043 0310 	orr.w	r3, r3, #16
 8003aea:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aec:	4b30      	ldr	r3, [pc, #192]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003aee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003af0:	f003 0310 	and.w	r3, r3, #16
 8003af4:	60fb      	str	r3, [r7, #12]
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	f107 0210 	add.w	r2, r7, #16
 8003afc:	f107 0314 	add.w	r3, r7, #20
 8003b00:	4611      	mov	r1, r2
 8003b02:	4618      	mov	r0, r3
 8003b04:	f00c fede 	bl	80108c4 <HAL_RCC_GetClockConfig>
 8003b08:	6a3b      	ldr	r3, [r7, #32]
 8003b0a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003b0c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d103      	bne.n	8003b1a <HAL_InitTick+0x4e>
 8003b12:	f00c feaf 	bl	8010874 <HAL_RCC_GetPCLK1Freq>
 8003b16:	6378      	str	r0, [r7, #52]	@ 0x34
 8003b18:	e004      	b.n	8003b24 <HAL_InitTick+0x58>
 8003b1a:	f00c feab 	bl	8010874 <HAL_RCC_GetPCLK1Freq>
 8003b1e:	4603      	mov	r3, r0
 8003b20:	005b      	lsls	r3, r3, #1
 8003b22:	637b      	str	r3, [r7, #52]	@ 0x34
 8003b24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003b26:	4a23      	ldr	r2, [pc, #140]	@ (8003bb4 <HAL_InitTick+0xe8>)
 8003b28:	fba2 2303 	umull	r2, r3, r2, r3
 8003b2c:	0c9b      	lsrs	r3, r3, #18
 8003b2e:	3b01      	subs	r3, #1
 8003b30:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b32:	4b21      	ldr	r3, [pc, #132]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b34:	4a21      	ldr	r2, [pc, #132]	@ (8003bbc <HAL_InitTick+0xf0>)
 8003b36:	601a      	str	r2, [r3, #0]
 8003b38:	4b1f      	ldr	r3, [pc, #124]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8003b3e:	60da      	str	r2, [r3, #12]
 8003b40:	4a1d      	ldr	r2, [pc, #116]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b42:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b44:	6053      	str	r3, [r2, #4]
 8003b46:	4b1c      	ldr	r3, [pc, #112]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	611a      	str	r2, [r3, #16]
 8003b4c:	4b1a      	ldr	r3, [pc, #104]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b4e:	2200      	movs	r2, #0
 8003b50:	609a      	str	r2, [r3, #8]
 8003b52:	4b19      	ldr	r3, [pc, #100]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b54:	2200      	movs	r2, #0
 8003b56:	619a      	str	r2, [r3, #24]
 8003b58:	4817      	ldr	r0, [pc, #92]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b5a:	f00d fb7b 	bl	8011254 <HAL_TIM_Base_Init>
 8003b5e:	4603      	mov	r3, r0
 8003b60:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b64:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d11b      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b6c:	4812      	ldr	r0, [pc, #72]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b6e:	f00d fbc1 	bl	80112f4 <HAL_TIM_Base_Start_IT>
 8003b72:	4603      	mov	r3, r0
 8003b74:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b78:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d111      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b80:	2036      	movs	r0, #54	@ 0x36
 8003b82:	f008 fc47 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	2b0f      	cmp	r3, #15
 8003b8a:	d808      	bhi.n	8003b9e <HAL_InitTick+0xd2>
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	6879      	ldr	r1, [r7, #4]
 8003b90:	2036      	movs	r0, #54	@ 0x36
 8003b92:	f008 fc23 	bl	800c3dc <HAL_NVIC_SetPriority>
 8003b96:	4a0a      	ldr	r2, [pc, #40]	@ (8003bc0 <HAL_InitTick+0xf4>)
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	6013      	str	r3, [r2, #0]
 8003b9c:	e002      	b.n	8003ba4 <HAL_InitTick+0xd8>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003ba4:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003ba8:	4618      	mov	r0, r3
 8003baa:	3738      	adds	r7, #56	@ 0x38
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bd80      	pop	{r7, pc}
 8003bb0:	40023800 	.word	0x40023800
 8003bb4:	431bde83 	.word	0x431bde83
 8003bb8:	20001a7c 	.word	0x20001a7c
 8003bbc:	40001000 	.word	0x40001000
 8003bc0:	20000018 	.word	0x20000018

08003bc4 <NMI_Handler>:
 8003bc4:	b480      	push	{r7}
 8003bc6:	af00      	add	r7, sp, #0
 8003bc8:	bf00      	nop
 8003bca:	e7fd      	b.n	8003bc8 <NMI_Handler+0x4>

08003bcc <HardFault_Handler>:
 8003bcc:	b480      	push	{r7}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	bf00      	nop
 8003bd2:	e7fd      	b.n	8003bd0 <HardFault_Handler+0x4>

08003bd4 <MemManage_Handler>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	af00      	add	r7, sp, #0
 8003bd8:	bf00      	nop
 8003bda:	e7fd      	b.n	8003bd8 <MemManage_Handler+0x4>

08003bdc <BusFault_Handler>:
 8003bdc:	b480      	push	{r7}
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	bf00      	nop
 8003be2:	e7fd      	b.n	8003be0 <BusFault_Handler+0x4>

08003be4 <UsageFault_Handler>:
 8003be4:	b480      	push	{r7}
 8003be6:	af00      	add	r7, sp, #0
 8003be8:	bf00      	nop
 8003bea:	e7fd      	b.n	8003be8 <UsageFault_Handler+0x4>

08003bec <DebugMon_Handler>:
 8003bec:	b480      	push	{r7}
 8003bee:	af00      	add	r7, sp, #0
 8003bf0:	bf00      	nop
 8003bf2:	46bd      	mov	sp, r7
 8003bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf8:	4770      	bx	lr

08003bfa <EXTI3_IRQHandler>:
 8003bfa:	b580      	push	{r7, lr}
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	2008      	movs	r0, #8
 8003c00:	f009 f9e8 	bl	800cfd4 <HAL_GPIO_EXTI_IRQHandler>
 8003c04:	bf00      	nop
 8003c06:	bd80      	pop	{r7, pc}

08003c08 <EXTI4_IRQHandler>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	2010      	movs	r0, #16
 8003c0e:	f009 f9e1 	bl	800cfd4 <HAL_GPIO_EXTI_IRQHandler>
 8003c12:	bf00      	nop
 8003c14:	bd80      	pop	{r7, pc}
	...

08003c18 <DMA1_Stream1_IRQHandler>:
 8003c18:	b580      	push	{r7, lr}
 8003c1a:	af00      	add	r7, sp, #0
 8003c1c:	4802      	ldr	r0, [pc, #8]	@ (8003c28 <DMA1_Stream1_IRQHandler+0x10>)
 8003c1e:	f008 fdad 	bl	800c77c <HAL_DMA_IRQHandler>
 8003c22:	bf00      	nop
 8003c24:	bd80      	pop	{r7, pc}
 8003c26:	bf00      	nop
 8003c28:	20001d14 	.word	0x20001d14

08003c2c <DMA1_Stream2_IRQHandler>:
 8003c2c:	b580      	push	{r7, lr}
 8003c2e:	af00      	add	r7, sp, #0
 8003c30:	4802      	ldr	r0, [pc, #8]	@ (8003c3c <DMA1_Stream2_IRQHandler+0x10>)
 8003c32:	f008 fda3 	bl	800c77c <HAL_DMA_IRQHandler>
 8003c36:	bf00      	nop
 8003c38:	bd80      	pop	{r7, pc}
 8003c3a:	bf00      	nop
 8003c3c:	20001894 	.word	0x20001894

08003c40 <DMA1_Stream4_IRQHandler>:
 8003c40:	b580      	push	{r7, lr}
 8003c42:	af00      	add	r7, sp, #0
 8003c44:	4802      	ldr	r0, [pc, #8]	@ (8003c50 <DMA1_Stream4_IRQHandler+0x10>)
 8003c46:	f008 fd99 	bl	800c77c <HAL_DMA_IRQHandler>
 8003c4a:	bf00      	nop
 8003c4c:	bd80      	pop	{r7, pc}
 8003c4e:	bf00      	nop
 8003c50:	200018f4 	.word	0x200018f4

08003c54 <CAN1_RX0_IRQHandler>:
 8003c54:	b580      	push	{r7, lr}
 8003c56:	af00      	add	r7, sp, #0
 8003c58:	4802      	ldr	r0, [pc, #8]	@ (8003c64 <CAN1_RX0_IRQHandler+0x10>)
 8003c5a:	f008 f8bd 	bl	800bdd8 <HAL_CAN_IRQHandler>
 8003c5e:	bf00      	nop
 8003c60:	bd80      	pop	{r7, pc}
 8003c62:	bf00      	nop
 8003c64:	200008e4 	.word	0x200008e4

08003c68 <CAN1_RX1_IRQHandler>:
 8003c68:	b580      	push	{r7, lr}
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	4802      	ldr	r0, [pc, #8]	@ (8003c78 <CAN1_RX1_IRQHandler+0x10>)
 8003c6e:	f008 f8b3 	bl	800bdd8 <HAL_CAN_IRQHandler>
 8003c72:	bf00      	nop
 8003c74:	bd80      	pop	{r7, pc}
 8003c76:	bf00      	nop
 8003c78:	200008e4 	.word	0x200008e4

08003c7c <EXTI9_5_IRQHandler>:
 8003c7c:	b580      	push	{r7, lr}
 8003c7e:	af00      	add	r7, sp, #0
 8003c80:	2020      	movs	r0, #32
 8003c82:	f009 f9a7 	bl	800cfd4 <HAL_GPIO_EXTI_IRQHandler>
 8003c86:	bf00      	nop
 8003c88:	bd80      	pop	{r7, pc}
	...

08003c8c <TIM3_IRQHandler>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	af00      	add	r7, sp, #0
 8003c90:	4803      	ldr	r0, [pc, #12]	@ (8003ca0 <TIM3_IRQHandler+0x14>)
 8003c92:	f00d fd0f 	bl	80116b4 <HAL_TIM_IRQHandler>
 8003c96:	f7fe fa61 	bl	800215c <micros_tick>
 8003c9a:	bf00      	nop
 8003c9c:	bd80      	pop	{r7, pc}
 8003c9e:	bf00      	nop
 8003ca0:	20001ac8 	.word	0x20001ac8

08003ca4 <USART1_IRQHandler>:
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	af00      	add	r7, sp, #0
 8003ca8:	4802      	ldr	r0, [pc, #8]	@ (8003cb4 <USART1_IRQHandler+0x10>)
 8003caa:	f00e fd05 	bl	80126b8 <HAL_UART_IRQHandler>
 8003cae:	bf00      	nop
 8003cb0:	bd80      	pop	{r7, pc}
 8003cb2:	bf00      	nop
 8003cb4:	20001be8 	.word	0x20001be8

08003cb8 <USART3_IRQHandler>:
 8003cb8:	b580      	push	{r7, lr}
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	4802      	ldr	r0, [pc, #8]	@ (8003cc8 <USART3_IRQHandler+0x10>)
 8003cbe:	f00e fcfb 	bl	80126b8 <HAL_UART_IRQHandler>
 8003cc2:	bf00      	nop
 8003cc4:	bd80      	pop	{r7, pc}
 8003cc6:	bf00      	nop
 8003cc8:	20001c2c 	.word	0x20001c2c

08003ccc <EXTI15_10_IRQHandler>:
 8003ccc:	b580      	push	{r7, lr}
 8003cce:	af00      	add	r7, sp, #0
 8003cd0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8003cd4:	f009 f97e 	bl	800cfd4 <HAL_GPIO_EXTI_IRQHandler>
 8003cd8:	f7fd fcce 	bl	8001678 <hall_int>
 8003cdc:	bf00      	nop
 8003cde:	bd80      	pop	{r7, pc}

08003ce0 <TIM6_DAC_IRQHandler>:
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	af00      	add	r7, sp, #0
 8003ce4:	4802      	ldr	r0, [pc, #8]	@ (8003cf0 <TIM6_DAC_IRQHandler+0x10>)
 8003ce6:	f00d fce5 	bl	80116b4 <HAL_TIM_IRQHandler>
 8003cea:	bf00      	nop
 8003cec:	bd80      	pop	{r7, pc}
 8003cee:	bf00      	nop
 8003cf0:	20001a7c 	.word	0x20001a7c

08003cf4 <DMA2_Stream0_IRQHandler>:
 8003cf4:	b580      	push	{r7, lr}
 8003cf6:	af00      	add	r7, sp, #0
 8003cf8:	4802      	ldr	r0, [pc, #8]	@ (8003d04 <DMA2_Stream0_IRQHandler+0x10>)
 8003cfa:	f008 fd3f 	bl	800c77c <HAL_DMA_IRQHandler>
 8003cfe:	bf00      	nop
 8003d00:	bd80      	pop	{r7, pc}
 8003d02:	bf00      	nop
 8003d04:	200019bc 	.word	0x200019bc

08003d08 <DMA2_Stream1_IRQHandler>:
 8003d08:	b580      	push	{r7, lr}
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	4802      	ldr	r0, [pc, #8]	@ (8003d18 <DMA2_Stream1_IRQHandler+0x10>)
 8003d0e:	f008 fd35 	bl	800c77c <HAL_DMA_IRQHandler>
 8003d12:	bf00      	nop
 8003d14:	bd80      	pop	{r7, pc}
 8003d16:	bf00      	nop
 8003d18:	20001d74 	.word	0x20001d74

08003d1c <DMA2_Stream3_IRQHandler>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	4802      	ldr	r0, [pc, #8]	@ (8003d2c <DMA2_Stream3_IRQHandler+0x10>)
 8003d22:	f008 fd2b 	bl	800c77c <HAL_DMA_IRQHandler>
 8003d26:	bf00      	nop
 8003d28:	bd80      	pop	{r7, pc}
 8003d2a:	bf00      	nop
 8003d2c:	20001a1c 	.word	0x20001a1c

08003d30 <CAN2_RX0_IRQHandler>:
 8003d30:	b580      	push	{r7, lr}
 8003d32:	af00      	add	r7, sp, #0
 8003d34:	4802      	ldr	r0, [pc, #8]	@ (8003d40 <CAN2_RX0_IRQHandler+0x10>)
 8003d36:	f008 f84f 	bl	800bdd8 <HAL_CAN_IRQHandler>
 8003d3a:	bf00      	nop
 8003d3c:	bd80      	pop	{r7, pc}
 8003d3e:	bf00      	nop
 8003d40:	2000090c 	.word	0x2000090c

08003d44 <CAN2_RX1_IRQHandler>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	af00      	add	r7, sp, #0
 8003d48:	4802      	ldr	r0, [pc, #8]	@ (8003d54 <CAN2_RX1_IRQHandler+0x10>)
 8003d4a:	f008 f845 	bl	800bdd8 <HAL_CAN_IRQHandler>
 8003d4e:	bf00      	nop
 8003d50:	bd80      	pop	{r7, pc}
 8003d52:	bf00      	nop
 8003d54:	2000090c 	.word	0x2000090c

08003d58 <OTG_FS_IRQHandler>:
 8003d58:	b580      	push	{r7, lr}
 8003d5a:	af00      	add	r7, sp, #0
 8003d5c:	4802      	ldr	r0, [pc, #8]	@ (8003d68 <OTG_FS_IRQHandler+0x10>)
 8003d5e:	f00b f82c 	bl	800edba <HAL_PCD_IRQHandler>
 8003d62:	bf00      	nop
 8003d64:	bd80      	pop	{r7, pc}
 8003d66:	bf00      	nop
 8003d68:	2000c84c 	.word	0x2000c84c

08003d6c <DMA2_Stream5_IRQHandler>:
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	4802      	ldr	r0, [pc, #8]	@ (8003d7c <DMA2_Stream5_IRQHandler+0x10>)
 8003d72:	f008 fd03 	bl	800c77c <HAL_DMA_IRQHandler>
 8003d76:	bf00      	nop
 8003d78:	bd80      	pop	{r7, pc}
 8003d7a:	bf00      	nop
 8003d7c:	20001cb4 	.word	0x20001cb4

08003d80 <DMA2_Stream6_IRQHandler>:
 8003d80:	b580      	push	{r7, lr}
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	4802      	ldr	r0, [pc, #8]	@ (8003d90 <DMA2_Stream6_IRQHandler+0x10>)
 8003d86:	f008 fcf9 	bl	800c77c <HAL_DMA_IRQHandler>
 8003d8a:	bf00      	nop
 8003d8c:	bd80      	pop	{r7, pc}
 8003d8e:	bf00      	nop
 8003d90:	20001dd4 	.word	0x20001dd4

08003d94 <USART6_IRQHandler>:
 8003d94:	b580      	push	{r7, lr}
 8003d96:	af00      	add	r7, sp, #0
 8003d98:	4802      	ldr	r0, [pc, #8]	@ (8003da4 <USART6_IRQHandler+0x10>)
 8003d9a:	f00e fc8d 	bl	80126b8 <HAL_UART_IRQHandler>
 8003d9e:	bf00      	nop
 8003da0:	bd80      	pop	{r7, pc}
 8003da2:	bf00      	nop
 8003da4:	20001c70 	.word	0x20001c70

08003da8 <I2C3_ER_IRQHandler>:
 8003da8:	b580      	push	{r7, lr}
 8003daa:	af00      	add	r7, sp, #0
 8003dac:	4802      	ldr	r0, [pc, #8]	@ (8003db8 <I2C3_ER_IRQHandler+0x10>)
 8003dae:	f009 ff21 	bl	800dbf4 <HAL_I2C_ER_IRQHandler>
 8003db2:	bf00      	nop
 8003db4:	bd80      	pop	{r7, pc}
 8003db6:	bf00      	nop
 8003db8:	20001840 	.word	0x20001840

08003dbc <_getpid>:
 8003dbc:	b480      	push	{r7}
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	2301      	movs	r3, #1
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	46bd      	mov	sp, r7
 8003dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dca:	4770      	bx	lr

08003dcc <_kill>:
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b082      	sub	sp, #8
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	6039      	str	r1, [r7, #0]
 8003dd6:	f017 f89f 	bl	801af18 <__errno>
 8003dda:	4603      	mov	r3, r0
 8003ddc:	2216      	movs	r2, #22
 8003dde:	601a      	str	r2, [r3, #0]
 8003de0:	f04f 33ff 	mov.w	r3, #4294967295
 8003de4:	4618      	mov	r0, r3
 8003de6:	3708      	adds	r7, #8
 8003de8:	46bd      	mov	sp, r7
 8003dea:	bd80      	pop	{r7, pc}

08003dec <_exit>:
 8003dec:	b580      	push	{r7, lr}
 8003dee:	b082      	sub	sp, #8
 8003df0:	af00      	add	r7, sp, #0
 8003df2:	6078      	str	r0, [r7, #4]
 8003df4:	f04f 31ff 	mov.w	r1, #4294967295
 8003df8:	6878      	ldr	r0, [r7, #4]
 8003dfa:	f7ff ffe7 	bl	8003dcc <_kill>
 8003dfe:	bf00      	nop
 8003e00:	e7fd      	b.n	8003dfe <_exit+0x12>

08003e02 <_read>:
 8003e02:	b580      	push	{r7, lr}
 8003e04:	b086      	sub	sp, #24
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	60f8      	str	r0, [r7, #12]
 8003e0a:	60b9      	str	r1, [r7, #8]
 8003e0c:	607a      	str	r2, [r7, #4]
 8003e0e:	2300      	movs	r3, #0
 8003e10:	617b      	str	r3, [r7, #20]
 8003e12:	e00a      	b.n	8003e2a <_read+0x28>
 8003e14:	f3af 8000 	nop.w
 8003e18:	4601      	mov	r1, r0
 8003e1a:	68bb      	ldr	r3, [r7, #8]
 8003e1c:	1c5a      	adds	r2, r3, #1
 8003e1e:	60ba      	str	r2, [r7, #8]
 8003e20:	b2ca      	uxtb	r2, r1
 8003e22:	701a      	strb	r2, [r3, #0]
 8003e24:	697b      	ldr	r3, [r7, #20]
 8003e26:	3301      	adds	r3, #1
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	697a      	ldr	r2, [r7, #20]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	429a      	cmp	r2, r3
 8003e30:	dbf0      	blt.n	8003e14 <_read+0x12>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	4618      	mov	r0, r3
 8003e36:	3718      	adds	r7, #24
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	bd80      	pop	{r7, pc}

08003e3c <_write>:
 8003e3c:	b580      	push	{r7, lr}
 8003e3e:	b086      	sub	sp, #24
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	60f8      	str	r0, [r7, #12]
 8003e44:	60b9      	str	r1, [r7, #8]
 8003e46:	607a      	str	r2, [r7, #4]
 8003e48:	2300      	movs	r3, #0
 8003e4a:	617b      	str	r3, [r7, #20]
 8003e4c:	e009      	b.n	8003e62 <_write+0x26>
 8003e4e:	68bb      	ldr	r3, [r7, #8]
 8003e50:	1c5a      	adds	r2, r3, #1
 8003e52:	60ba      	str	r2, [r7, #8]
 8003e54:	781b      	ldrb	r3, [r3, #0]
 8003e56:	4618      	mov	r0, r3
 8003e58:	f3af 8000 	nop.w
 8003e5c:	697b      	ldr	r3, [r7, #20]
 8003e5e:	3301      	adds	r3, #1
 8003e60:	617b      	str	r3, [r7, #20]
 8003e62:	697a      	ldr	r2, [r7, #20]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	429a      	cmp	r2, r3
 8003e68:	dbf1      	blt.n	8003e4e <_write+0x12>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	3718      	adds	r7, #24
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}

08003e74 <_close>:
 8003e74:	b480      	push	{r7}
 8003e76:	b083      	sub	sp, #12
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	f04f 33ff 	mov.w	r3, #4294967295
 8003e80:	4618      	mov	r0, r3
 8003e82:	370c      	adds	r7, #12
 8003e84:	46bd      	mov	sp, r7
 8003e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8a:	4770      	bx	lr

08003e8c <_fstat>:
 8003e8c:	b480      	push	{r7}
 8003e8e:	b083      	sub	sp, #12
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	6039      	str	r1, [r7, #0]
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003e9c:	605a      	str	r2, [r3, #4]
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	370c      	adds	r7, #12
 8003ea4:	46bd      	mov	sp, r7
 8003ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eaa:	4770      	bx	lr

08003eac <_isatty>:
 8003eac:	b480      	push	{r7}
 8003eae:	b083      	sub	sp, #12
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	6078      	str	r0, [r7, #4]
 8003eb4:	2301      	movs	r3, #1
 8003eb6:	4618      	mov	r0, r3
 8003eb8:	370c      	adds	r7, #12
 8003eba:	46bd      	mov	sp, r7
 8003ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec0:	4770      	bx	lr

08003ec2 <_lseek>:
 8003ec2:	b480      	push	{r7}
 8003ec4:	b085      	sub	sp, #20
 8003ec6:	af00      	add	r7, sp, #0
 8003ec8:	60f8      	str	r0, [r7, #12]
 8003eca:	60b9      	str	r1, [r7, #8]
 8003ecc:	607a      	str	r2, [r7, #4]
 8003ece:	2300      	movs	r3, #0
 8003ed0:	4618      	mov	r0, r3
 8003ed2:	3714      	adds	r7, #20
 8003ed4:	46bd      	mov	sp, r7
 8003ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eda:	4770      	bx	lr

08003edc <_sbrk>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b086      	sub	sp, #24
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	6078      	str	r0, [r7, #4]
 8003ee4:	4a14      	ldr	r2, [pc, #80]	@ (8003f38 <_sbrk+0x5c>)
 8003ee6:	4b15      	ldr	r3, [pc, #84]	@ (8003f3c <_sbrk+0x60>)
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	617b      	str	r3, [r7, #20]
 8003eec:	697b      	ldr	r3, [r7, #20]
 8003eee:	613b      	str	r3, [r7, #16]
 8003ef0:	4b13      	ldr	r3, [pc, #76]	@ (8003f40 <_sbrk+0x64>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d102      	bne.n	8003efe <_sbrk+0x22>
 8003ef8:	4b11      	ldr	r3, [pc, #68]	@ (8003f40 <_sbrk+0x64>)
 8003efa:	4a12      	ldr	r2, [pc, #72]	@ (8003f44 <_sbrk+0x68>)
 8003efc:	601a      	str	r2, [r3, #0]
 8003efe:	4b10      	ldr	r3, [pc, #64]	@ (8003f40 <_sbrk+0x64>)
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4413      	add	r3, r2
 8003f06:	693a      	ldr	r2, [r7, #16]
 8003f08:	429a      	cmp	r2, r3
 8003f0a:	d207      	bcs.n	8003f1c <_sbrk+0x40>
 8003f0c:	f017 f804 	bl	801af18 <__errno>
 8003f10:	4603      	mov	r3, r0
 8003f12:	220c      	movs	r2, #12
 8003f14:	601a      	str	r2, [r3, #0]
 8003f16:	f04f 33ff 	mov.w	r3, #4294967295
 8003f1a:	e009      	b.n	8003f30 <_sbrk+0x54>
 8003f1c:	4b08      	ldr	r3, [pc, #32]	@ (8003f40 <_sbrk+0x64>)
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	60fb      	str	r3, [r7, #12]
 8003f22:	4b07      	ldr	r3, [pc, #28]	@ (8003f40 <_sbrk+0x64>)
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	4413      	add	r3, r2
 8003f2a:	4a05      	ldr	r2, [pc, #20]	@ (8003f40 <_sbrk+0x64>)
 8003f2c:	6013      	str	r3, [r2, #0]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	4618      	mov	r0, r3
 8003f32:	3718      	adds	r7, #24
 8003f34:	46bd      	mov	sp, r7
 8003f36:	bd80      	pop	{r7, pc}
 8003f38:	20020000 	.word	0x20020000
 8003f3c:	00009000 	.word	0x00009000
 8003f40:	20001ac4 	.word	0x20001ac4
 8003f44:	2000d288 	.word	0x2000d288

08003f48 <SystemInit>:
 8003f48:	b480      	push	{r7}
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	4b08      	ldr	r3, [pc, #32]	@ (8003f70 <SystemInit+0x28>)
 8003f4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003f52:	4a07      	ldr	r2, [pc, #28]	@ (8003f70 <SystemInit+0x28>)
 8003f54:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003f58:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003f5c:	4b04      	ldr	r3, [pc, #16]	@ (8003f70 <SystemInit+0x28>)
 8003f5e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003f62:	609a      	str	r2, [r3, #8]
 8003f64:	bf00      	nop
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop
 8003f70:	e000ed00 	.word	0xe000ed00

08003f74 <LL_TIM_DisableARRPreload>:
 8003f74:	b480      	push	{r7}
 8003f76:	b083      	sub	sp, #12
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	6078      	str	r0, [r7, #4]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	601a      	str	r2, [r3, #0]
 8003f88:	bf00      	nop
 8003f8a:	370c      	adds	r7, #12
 8003f8c:	46bd      	mov	sp, r7
 8003f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f92:	4770      	bx	lr

08003f94 <LL_TIM_SetClockSource>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	6039      	str	r1, [r7, #0]
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	689b      	ldr	r3, [r3, #8]
 8003fa2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003fa6:	f023 0307 	bic.w	r3, r3, #7
 8003faa:	683a      	ldr	r2, [r7, #0]
 8003fac:	431a      	orrs	r2, r3
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	609a      	str	r2, [r3, #8]
 8003fb2:	bf00      	nop
 8003fb4:	370c      	adds	r7, #12
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fbc:	4770      	bx	lr

08003fbe <LL_TIM_SetTriggerOutput>:
 8003fbe:	b480      	push	{r7}
 8003fc0:	b083      	sub	sp, #12
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	6078      	str	r0, [r7, #4]
 8003fc6:	6039      	str	r1, [r7, #0]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	685b      	ldr	r3, [r3, #4]
 8003fcc:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8003fd0:	683b      	ldr	r3, [r7, #0]
 8003fd2:	431a      	orrs	r2, r3
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	605a      	str	r2, [r3, #4]
 8003fd8:	bf00      	nop
 8003fda:	370c      	adds	r7, #12
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe2:	4770      	bx	lr

08003fe4 <LL_TIM_DisableMasterSlaveMode>:
 8003fe4:	b480      	push	{r7}
 8003fe6:	b083      	sub	sp, #12
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	689b      	ldr	r3, [r3, #8]
 8003ff0:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	609a      	str	r2, [r3, #8]
 8003ff8:	bf00      	nop
 8003ffa:	370c      	adds	r7, #12
 8003ffc:	46bd      	mov	sp, r7
 8003ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004002:	4770      	bx	lr

08004004 <LL_APB1_GRP1_EnableClock>:
 8004004:	b480      	push	{r7}
 8004006:	b085      	sub	sp, #20
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
 800400c:	4b08      	ldr	r3, [pc, #32]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800400e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004010:	4907      	ldr	r1, [pc, #28]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	4313      	orrs	r3, r2
 8004016:	640b      	str	r3, [r1, #64]	@ 0x40
 8004018:	4b05      	ldr	r3, [pc, #20]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800401a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	4013      	ands	r3, r2
 8004020:	60fb      	str	r3, [r7, #12]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	bf00      	nop
 8004026:	3714      	adds	r7, #20
 8004028:	46bd      	mov	sp, r7
 800402a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402e:	4770      	bx	lr
 8004030:	40023800 	.word	0x40023800

08004034 <MX_TIM2_Init>:
 8004034:	b580      	push	{r7, lr}
 8004036:	b086      	sub	sp, #24
 8004038:	af00      	add	r7, sp, #0
 800403a:	1d3b      	adds	r3, r7, #4
 800403c:	2200      	movs	r2, #0
 800403e:	601a      	str	r2, [r3, #0]
 8004040:	605a      	str	r2, [r3, #4]
 8004042:	609a      	str	r2, [r3, #8]
 8004044:	60da      	str	r2, [r3, #12]
 8004046:	611a      	str	r2, [r3, #16]
 8004048:	2001      	movs	r0, #1
 800404a:	f7ff ffdb 	bl	8004004 <LL_APB1_GRP1_EnableClock>
 800404e:	2300      	movs	r3, #0
 8004050:	80bb      	strh	r3, [r7, #4]
 8004052:	2300      	movs	r3, #0
 8004054:	60bb      	str	r3, [r7, #8]
 8004056:	f04f 33ff 	mov.w	r3, #4294967295
 800405a:	60fb      	str	r3, [r7, #12]
 800405c:	2300      	movs	r3, #0
 800405e:	613b      	str	r3, [r7, #16]
 8004060:	1d3b      	adds	r3, r7, #4
 8004062:	4619      	mov	r1, r3
 8004064:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004068:	f00f fafe 	bl	8013668 <LL_TIM_Init>
 800406c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004070:	f7ff ff80 	bl	8003f74 <LL_TIM_DisableARRPreload>
 8004074:	2100      	movs	r1, #0
 8004076:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800407a:	f7ff ff8b 	bl	8003f94 <LL_TIM_SetClockSource>
 800407e:	2100      	movs	r1, #0
 8004080:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004084:	f7ff ff9b 	bl	8003fbe <LL_TIM_SetTriggerOutput>
 8004088:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800408c:	f7ff ffaa 	bl	8003fe4 <LL_TIM_DisableMasterSlaveMode>
 8004090:	bf00      	nop
 8004092:	3718      	adds	r7, #24
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <MX_TIM3_Init>:
 8004098:	b580      	push	{r7, lr}
 800409a:	b08e      	sub	sp, #56	@ 0x38
 800409c:	af00      	add	r7, sp, #0
 800409e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80040a2:	2200      	movs	r2, #0
 80040a4:	601a      	str	r2, [r3, #0]
 80040a6:	605a      	str	r2, [r3, #4]
 80040a8:	609a      	str	r2, [r3, #8]
 80040aa:	60da      	str	r2, [r3, #12]
 80040ac:	f107 0320 	add.w	r3, r7, #32
 80040b0:	2200      	movs	r2, #0
 80040b2:	601a      	str	r2, [r3, #0]
 80040b4:	605a      	str	r2, [r3, #4]
 80040b6:	1d3b      	adds	r3, r7, #4
 80040b8:	2200      	movs	r2, #0
 80040ba:	601a      	str	r2, [r3, #0]
 80040bc:	605a      	str	r2, [r3, #4]
 80040be:	609a      	str	r2, [r3, #8]
 80040c0:	60da      	str	r2, [r3, #12]
 80040c2:	611a      	str	r2, [r3, #16]
 80040c4:	615a      	str	r2, [r3, #20]
 80040c6:	619a      	str	r2, [r3, #24]
 80040c8:	4b2a      	ldr	r3, [pc, #168]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ca:	4a2b      	ldr	r2, [pc, #172]	@ (8004178 <MX_TIM3_Init+0xe0>)
 80040cc:	601a      	str	r2, [r3, #0]
 80040ce:	4b29      	ldr	r3, [pc, #164]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d0:	22a7      	movs	r2, #167	@ 0xa7
 80040d2:	605a      	str	r2, [r3, #4]
 80040d4:	4b27      	ldr	r3, [pc, #156]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d6:	2200      	movs	r2, #0
 80040d8:	609a      	str	r2, [r3, #8]
 80040da:	4b26      	ldr	r3, [pc, #152]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040dc:	2201      	movs	r2, #1
 80040de:	60da      	str	r2, [r3, #12]
 80040e0:	4b24      	ldr	r3, [pc, #144]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e2:	2200      	movs	r2, #0
 80040e4:	611a      	str	r2, [r3, #16]
 80040e6:	4b23      	ldr	r3, [pc, #140]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e8:	2200      	movs	r2, #0
 80040ea:	619a      	str	r2, [r3, #24]
 80040ec:	4821      	ldr	r0, [pc, #132]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ee:	f00d f8b1 	bl	8011254 <HAL_TIM_Base_Init>
 80040f2:	4603      	mov	r3, r0
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d001      	beq.n	80040fc <MX_TIM3_Init+0x64>
 80040f8:	f7ff fb7e 	bl	80037f8 <Error_Handler>
 80040fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004100:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004102:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8004106:	4619      	mov	r1, r3
 8004108:	481a      	ldr	r0, [pc, #104]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800410a:	f00d fcf9 	bl	8011b00 <HAL_TIM_ConfigClockSource>
 800410e:	4603      	mov	r3, r0
 8004110:	2b00      	cmp	r3, #0
 8004112:	d001      	beq.n	8004118 <MX_TIM3_Init+0x80>
 8004114:	f7ff fb70 	bl	80037f8 <Error_Handler>
 8004118:	4816      	ldr	r0, [pc, #88]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800411a:	f00d f95b 	bl	80113d4 <HAL_TIM_OC_Init>
 800411e:	4603      	mov	r3, r0
 8004120:	2b00      	cmp	r3, #0
 8004122:	d001      	beq.n	8004128 <MX_TIM3_Init+0x90>
 8004124:	f7ff fb68 	bl	80037f8 <Error_Handler>
 8004128:	2300      	movs	r3, #0
 800412a:	623b      	str	r3, [r7, #32]
 800412c:	2300      	movs	r3, #0
 800412e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004130:	f107 0320 	add.w	r3, r7, #32
 8004134:	4619      	mov	r1, r3
 8004136:	480f      	ldr	r0, [pc, #60]	@ (8004174 <MX_TIM3_Init+0xdc>)
 8004138:	f00e f8e2 	bl	8012300 <HAL_TIMEx_MasterConfigSynchronization>
 800413c:	4603      	mov	r3, r0
 800413e:	2b00      	cmp	r3, #0
 8004140:	d001      	beq.n	8004146 <MX_TIM3_Init+0xae>
 8004142:	f7ff fb59 	bl	80037f8 <Error_Handler>
 8004146:	2300      	movs	r3, #0
 8004148:	607b      	str	r3, [r7, #4]
 800414a:	2300      	movs	r3, #0
 800414c:	60bb      	str	r3, [r7, #8]
 800414e:	2300      	movs	r3, #0
 8004150:	60fb      	str	r3, [r7, #12]
 8004152:	2300      	movs	r3, #0
 8004154:	617b      	str	r3, [r7, #20]
 8004156:	1d3b      	adds	r3, r7, #4
 8004158:	2200      	movs	r2, #0
 800415a:	4619      	mov	r1, r3
 800415c:	4805      	ldr	r0, [pc, #20]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800415e:	f00d fbb1 	bl	80118c4 <HAL_TIM_OC_ConfigChannel>
 8004162:	4603      	mov	r3, r0
 8004164:	2b00      	cmp	r3, #0
 8004166:	d001      	beq.n	800416c <MX_TIM3_Init+0xd4>
 8004168:	f7ff fb46 	bl	80037f8 <Error_Handler>
 800416c:	bf00      	nop
 800416e:	3738      	adds	r7, #56	@ 0x38
 8004170:	46bd      	mov	sp, r7
 8004172:	bd80      	pop	{r7, pc}
 8004174:	20001ac8 	.word	0x20001ac8
 8004178:	40000400 	.word	0x40000400

0800417c <MX_TIM4_Init>:
 800417c:	b580      	push	{r7, lr}
 800417e:	b08a      	sub	sp, #40	@ 0x28
 8004180:	af00      	add	r7, sp, #0
 8004182:	f107 0320 	add.w	r3, r7, #32
 8004186:	2200      	movs	r2, #0
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	605a      	str	r2, [r3, #4]
 800418c:	1d3b      	adds	r3, r7, #4
 800418e:	2200      	movs	r2, #0
 8004190:	601a      	str	r2, [r3, #0]
 8004192:	605a      	str	r2, [r3, #4]
 8004194:	609a      	str	r2, [r3, #8]
 8004196:	60da      	str	r2, [r3, #12]
 8004198:	611a      	str	r2, [r3, #16]
 800419a:	615a      	str	r2, [r3, #20]
 800419c:	619a      	str	r2, [r3, #24]
 800419e:	4b22      	ldr	r3, [pc, #136]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a0:	4a22      	ldr	r2, [pc, #136]	@ (800422c <MX_TIM4_Init+0xb0>)
 80041a2:	601a      	str	r2, [r3, #0]
 80041a4:	4b20      	ldr	r3, [pc, #128]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041aa:	605a      	str	r2, [r3, #4]
 80041ac:	4b1e      	ldr	r3, [pc, #120]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041ae:	2200      	movs	r2, #0
 80041b0:	609a      	str	r2, [r3, #8]
 80041b2:	4b1d      	ldr	r3, [pc, #116]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041b4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041b8:	60da      	str	r2, [r3, #12]
 80041ba:	4b1b      	ldr	r3, [pc, #108]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041bc:	2200      	movs	r2, #0
 80041be:	611a      	str	r2, [r3, #16]
 80041c0:	4b19      	ldr	r3, [pc, #100]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c2:	2200      	movs	r2, #0
 80041c4:	619a      	str	r2, [r3, #24]
 80041c6:	4818      	ldr	r0, [pc, #96]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c8:	f00d f95d 	bl	8011486 <HAL_TIM_PWM_Init>
 80041cc:	4603      	mov	r3, r0
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	d001      	beq.n	80041d6 <MX_TIM4_Init+0x5a>
 80041d2:	f7ff fb11 	bl	80037f8 <Error_Handler>
 80041d6:	2300      	movs	r3, #0
 80041d8:	623b      	str	r3, [r7, #32]
 80041da:	2300      	movs	r3, #0
 80041dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80041de:	f107 0320 	add.w	r3, r7, #32
 80041e2:	4619      	mov	r1, r3
 80041e4:	4810      	ldr	r0, [pc, #64]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041e6:	f00e f88b 	bl	8012300 <HAL_TIMEx_MasterConfigSynchronization>
 80041ea:	4603      	mov	r3, r0
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d001      	beq.n	80041f4 <MX_TIM4_Init+0x78>
 80041f0:	f7ff fb02 	bl	80037f8 <Error_Handler>
 80041f4:	2360      	movs	r3, #96	@ 0x60
 80041f6:	607b      	str	r3, [r7, #4]
 80041f8:	2300      	movs	r3, #0
 80041fa:	60bb      	str	r3, [r7, #8]
 80041fc:	2300      	movs	r3, #0
 80041fe:	60fb      	str	r3, [r7, #12]
 8004200:	2300      	movs	r3, #0
 8004202:	617b      	str	r3, [r7, #20]
 8004204:	1d3b      	adds	r3, r7, #4
 8004206:	2208      	movs	r2, #8
 8004208:	4619      	mov	r1, r3
 800420a:	4807      	ldr	r0, [pc, #28]	@ (8004228 <MX_TIM4_Init+0xac>)
 800420c:	f00d fbb6 	bl	801197c <HAL_TIM_PWM_ConfigChannel>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d001      	beq.n	800421a <MX_TIM4_Init+0x9e>
 8004216:	f7ff faef 	bl	80037f8 <Error_Handler>
 800421a:	4803      	ldr	r0, [pc, #12]	@ (8004228 <MX_TIM4_Init+0xac>)
 800421c:	f000 f93c 	bl	8004498 <HAL_TIM_MspPostInit>
 8004220:	bf00      	nop
 8004222:	3728      	adds	r7, #40	@ 0x28
 8004224:	46bd      	mov	sp, r7
 8004226:	bd80      	pop	{r7, pc}
 8004228:	20001b10 	.word	0x20001b10
 800422c:	40000800 	.word	0x40000800

08004230 <MX_TIM5_Init>:
 8004230:	b580      	push	{r7, lr}
 8004232:	b08a      	sub	sp, #40	@ 0x28
 8004234:	af00      	add	r7, sp, #0
 8004236:	f107 0320 	add.w	r3, r7, #32
 800423a:	2200      	movs	r2, #0
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	605a      	str	r2, [r3, #4]
 8004240:	1d3b      	adds	r3, r7, #4
 8004242:	2200      	movs	r2, #0
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	605a      	str	r2, [r3, #4]
 8004248:	609a      	str	r2, [r3, #8]
 800424a:	60da      	str	r2, [r3, #12]
 800424c:	611a      	str	r2, [r3, #16]
 800424e:	615a      	str	r2, [r3, #20]
 8004250:	619a      	str	r2, [r3, #24]
 8004252:	4b2d      	ldr	r3, [pc, #180]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004254:	4a2d      	ldr	r2, [pc, #180]	@ (800430c <MX_TIM5_Init+0xdc>)
 8004256:	601a      	str	r2, [r3, #0]
 8004258:	4b2b      	ldr	r3, [pc, #172]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800425a:	f240 5225 	movw	r2, #1317	@ 0x525
 800425e:	605a      	str	r2, [r3, #4]
 8004260:	4b29      	ldr	r3, [pc, #164]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004262:	2200      	movs	r2, #0
 8004264:	609a      	str	r2, [r3, #8]
 8004266:	4b28      	ldr	r3, [pc, #160]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004268:	22ff      	movs	r2, #255	@ 0xff
 800426a:	60da      	str	r2, [r3, #12]
 800426c:	4b26      	ldr	r3, [pc, #152]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800426e:	2200      	movs	r2, #0
 8004270:	611a      	str	r2, [r3, #16]
 8004272:	4b25      	ldr	r3, [pc, #148]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004274:	2280      	movs	r2, #128	@ 0x80
 8004276:	619a      	str	r2, [r3, #24]
 8004278:	4823      	ldr	r0, [pc, #140]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800427a:	f00d f904 	bl	8011486 <HAL_TIM_PWM_Init>
 800427e:	4603      	mov	r3, r0
 8004280:	2b00      	cmp	r3, #0
 8004282:	d001      	beq.n	8004288 <MX_TIM5_Init+0x58>
 8004284:	f7ff fab8 	bl	80037f8 <Error_Handler>
 8004288:	2300      	movs	r3, #0
 800428a:	623b      	str	r3, [r7, #32]
 800428c:	2300      	movs	r3, #0
 800428e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004290:	f107 0320 	add.w	r3, r7, #32
 8004294:	4619      	mov	r1, r3
 8004296:	481c      	ldr	r0, [pc, #112]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004298:	f00e f832 	bl	8012300 <HAL_TIMEx_MasterConfigSynchronization>
 800429c:	4603      	mov	r3, r0
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d001      	beq.n	80042a6 <MX_TIM5_Init+0x76>
 80042a2:	f7ff faa9 	bl	80037f8 <Error_Handler>
 80042a6:	2360      	movs	r3, #96	@ 0x60
 80042a8:	607b      	str	r3, [r7, #4]
 80042aa:	2300      	movs	r3, #0
 80042ac:	60bb      	str	r3, [r7, #8]
 80042ae:	2302      	movs	r3, #2
 80042b0:	60fb      	str	r3, [r7, #12]
 80042b2:	2304      	movs	r3, #4
 80042b4:	617b      	str	r3, [r7, #20]
 80042b6:	1d3b      	adds	r3, r7, #4
 80042b8:	2200      	movs	r2, #0
 80042ba:	4619      	mov	r1, r3
 80042bc:	4812      	ldr	r0, [pc, #72]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042be:	f00d fb5d 	bl	801197c <HAL_TIM_PWM_ConfigChannel>
 80042c2:	4603      	mov	r3, r0
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d001      	beq.n	80042cc <MX_TIM5_Init+0x9c>
 80042c8:	f7ff fa96 	bl	80037f8 <Error_Handler>
 80042cc:	1d3b      	adds	r3, r7, #4
 80042ce:	2204      	movs	r2, #4
 80042d0:	4619      	mov	r1, r3
 80042d2:	480d      	ldr	r0, [pc, #52]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042d4:	f00d fb52 	bl	801197c <HAL_TIM_PWM_ConfigChannel>
 80042d8:	4603      	mov	r3, r0
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d001      	beq.n	80042e2 <MX_TIM5_Init+0xb2>
 80042de:	f7ff fa8b 	bl	80037f8 <Error_Handler>
 80042e2:	1d3b      	adds	r3, r7, #4
 80042e4:	2208      	movs	r2, #8
 80042e6:	4619      	mov	r1, r3
 80042e8:	4807      	ldr	r0, [pc, #28]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042ea:	f00d fb47 	bl	801197c <HAL_TIM_PWM_ConfigChannel>
 80042ee:	4603      	mov	r3, r0
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d001      	beq.n	80042f8 <MX_TIM5_Init+0xc8>
 80042f4:	f7ff fa80 	bl	80037f8 <Error_Handler>
 80042f8:	4803      	ldr	r0, [pc, #12]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042fa:	f000 f8cd 	bl	8004498 <HAL_TIM_MspPostInit>
 80042fe:	bf00      	nop
 8004300:	3728      	adds	r7, #40	@ 0x28
 8004302:	46bd      	mov	sp, r7
 8004304:	bd80      	pop	{r7, pc}
 8004306:	bf00      	nop
 8004308:	20001b58 	.word	0x20001b58
 800430c:	40000c00 	.word	0x40000c00

08004310 <MX_TIM10_Init>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b088      	sub	sp, #32
 8004314:	af00      	add	r7, sp, #0
 8004316:	1d3b      	adds	r3, r7, #4
 8004318:	2200      	movs	r2, #0
 800431a:	601a      	str	r2, [r3, #0]
 800431c:	605a      	str	r2, [r3, #4]
 800431e:	609a      	str	r2, [r3, #8]
 8004320:	60da      	str	r2, [r3, #12]
 8004322:	611a      	str	r2, [r3, #16]
 8004324:	615a      	str	r2, [r3, #20]
 8004326:	619a      	str	r2, [r3, #24]
 8004328:	4b1e      	ldr	r3, [pc, #120]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800432a:	4a1f      	ldr	r2, [pc, #124]	@ (80043a8 <MX_TIM10_Init+0x98>)
 800432c:	601a      	str	r2, [r3, #0]
 800432e:	4b1d      	ldr	r3, [pc, #116]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004330:	2200      	movs	r2, #0
 8004332:	605a      	str	r2, [r3, #4]
 8004334:	4b1b      	ldr	r3, [pc, #108]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004336:	2200      	movs	r2, #0
 8004338:	609a      	str	r2, [r3, #8]
 800433a:	4b1a      	ldr	r3, [pc, #104]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800433c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8004340:	60da      	str	r2, [r3, #12]
 8004342:	4b18      	ldr	r3, [pc, #96]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004344:	2200      	movs	r2, #0
 8004346:	611a      	str	r2, [r3, #16]
 8004348:	4b16      	ldr	r3, [pc, #88]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800434a:	2200      	movs	r2, #0
 800434c:	619a      	str	r2, [r3, #24]
 800434e:	4815      	ldr	r0, [pc, #84]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004350:	f00c ff80 	bl	8011254 <HAL_TIM_Base_Init>
 8004354:	4603      	mov	r3, r0
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <MX_TIM10_Init+0x4e>
 800435a:	f7ff fa4d 	bl	80037f8 <Error_Handler>
 800435e:	4811      	ldr	r0, [pc, #68]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004360:	f00d f891 	bl	8011486 <HAL_TIM_PWM_Init>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	d001      	beq.n	800436e <MX_TIM10_Init+0x5e>
 800436a:	f7ff fa45 	bl	80037f8 <Error_Handler>
 800436e:	2360      	movs	r3, #96	@ 0x60
 8004370:	607b      	str	r3, [r7, #4]
 8004372:	2300      	movs	r3, #0
 8004374:	60bb      	str	r3, [r7, #8]
 8004376:	2300      	movs	r3, #0
 8004378:	60fb      	str	r3, [r7, #12]
 800437a:	2300      	movs	r3, #0
 800437c:	617b      	str	r3, [r7, #20]
 800437e:	1d3b      	adds	r3, r7, #4
 8004380:	2200      	movs	r2, #0
 8004382:	4619      	mov	r1, r3
 8004384:	4807      	ldr	r0, [pc, #28]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004386:	f00d faf9 	bl	801197c <HAL_TIM_PWM_ConfigChannel>
 800438a:	4603      	mov	r3, r0
 800438c:	2b00      	cmp	r3, #0
 800438e:	d001      	beq.n	8004394 <MX_TIM10_Init+0x84>
 8004390:	f7ff fa32 	bl	80037f8 <Error_Handler>
 8004394:	4803      	ldr	r0, [pc, #12]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004396:	f000 f87f 	bl	8004498 <HAL_TIM_MspPostInit>
 800439a:	bf00      	nop
 800439c:	3720      	adds	r7, #32
 800439e:	46bd      	mov	sp, r7
 80043a0:	bd80      	pop	{r7, pc}
 80043a2:	bf00      	nop
 80043a4:	20001ba0 	.word	0x20001ba0
 80043a8:	40014400 	.word	0x40014400

080043ac <HAL_TIM_Base_MspInit>:
 80043ac:	b580      	push	{r7, lr}
 80043ae:	b084      	sub	sp, #16
 80043b0:	af00      	add	r7, sp, #0
 80043b2:	6078      	str	r0, [r7, #4]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a18      	ldr	r2, [pc, #96]	@ (800441c <HAL_TIM_Base_MspInit+0x70>)
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d116      	bne.n	80043ec <HAL_TIM_Base_MspInit+0x40>
 80043be:	2300      	movs	r3, #0
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	4b17      	ldr	r3, [pc, #92]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043c6:	4a16      	ldr	r2, [pc, #88]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c8:	f043 0302 	orr.w	r3, r3, #2
 80043cc:	6413      	str	r3, [r2, #64]	@ 0x40
 80043ce:	4b14      	ldr	r3, [pc, #80]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043d2:	f003 0302 	and.w	r3, r3, #2
 80043d6:	60fb      	str	r3, [r7, #12]
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	2200      	movs	r2, #0
 80043dc:	2105      	movs	r1, #5
 80043de:	201d      	movs	r0, #29
 80043e0:	f007 fffc 	bl	800c3dc <HAL_NVIC_SetPriority>
 80043e4:	201d      	movs	r0, #29
 80043e6:	f008 f815 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80043ea:	e012      	b.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	4a0c      	ldr	r2, [pc, #48]	@ (8004424 <HAL_TIM_Base_MspInit+0x78>)
 80043f2:	4293      	cmp	r3, r2
 80043f4:	d10d      	bne.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043f6:	2300      	movs	r3, #0
 80043f8:	60bb      	str	r3, [r7, #8]
 80043fa:	4b09      	ldr	r3, [pc, #36]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80043fe:	4a08      	ldr	r2, [pc, #32]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004400:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004404:	6453      	str	r3, [r2, #68]	@ 0x44
 8004406:	4b06      	ldr	r3, [pc, #24]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004408:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800440a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800440e:	60bb      	str	r3, [r7, #8]
 8004410:	68bb      	ldr	r3, [r7, #8]
 8004412:	bf00      	nop
 8004414:	3710      	adds	r7, #16
 8004416:	46bd      	mov	sp, r7
 8004418:	bd80      	pop	{r7, pc}
 800441a:	bf00      	nop
 800441c:	40000400 	.word	0x40000400
 8004420:	40023800 	.word	0x40023800
 8004424:	40014400 	.word	0x40014400

08004428 <HAL_TIM_PWM_MspInit>:
 8004428:	b480      	push	{r7}
 800442a:	b085      	sub	sp, #20
 800442c:	af00      	add	r7, sp, #0
 800442e:	6078      	str	r0, [r7, #4]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a15      	ldr	r2, [pc, #84]	@ (800448c <HAL_TIM_PWM_MspInit+0x64>)
 8004436:	4293      	cmp	r3, r2
 8004438:	d10e      	bne.n	8004458 <HAL_TIM_PWM_MspInit+0x30>
 800443a:	2300      	movs	r3, #0
 800443c:	60fb      	str	r3, [r7, #12]
 800443e:	4b14      	ldr	r3, [pc, #80]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004440:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004442:	4a13      	ldr	r2, [pc, #76]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004444:	f043 0304 	orr.w	r3, r3, #4
 8004448:	6413      	str	r3, [r2, #64]	@ 0x40
 800444a:	4b11      	ldr	r3, [pc, #68]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800444c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800444e:	f003 0304 	and.w	r3, r3, #4
 8004452:	60fb      	str	r3, [r7, #12]
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	e012      	b.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	4a0d      	ldr	r2, [pc, #52]	@ (8004494 <HAL_TIM_PWM_MspInit+0x6c>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d10d      	bne.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004462:	2300      	movs	r3, #0
 8004464:	60bb      	str	r3, [r7, #8]
 8004466:	4b0a      	ldr	r3, [pc, #40]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004468:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800446a:	4a09      	ldr	r2, [pc, #36]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800446c:	f043 0308 	orr.w	r3, r3, #8
 8004470:	6413      	str	r3, [r2, #64]	@ 0x40
 8004472:	4b07      	ldr	r3, [pc, #28]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004476:	f003 0308 	and.w	r3, r3, #8
 800447a:	60bb      	str	r3, [r7, #8]
 800447c:	68bb      	ldr	r3, [r7, #8]
 800447e:	bf00      	nop
 8004480:	3714      	adds	r7, #20
 8004482:	46bd      	mov	sp, r7
 8004484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004488:	4770      	bx	lr
 800448a:	bf00      	nop
 800448c:	40000800 	.word	0x40000800
 8004490:	40023800 	.word	0x40023800
 8004494:	40000c00 	.word	0x40000c00

08004498 <HAL_TIM_MspPostInit>:
 8004498:	b580      	push	{r7, lr}
 800449a:	b08a      	sub	sp, #40	@ 0x28
 800449c:	af00      	add	r7, sp, #0
 800449e:	6078      	str	r0, [r7, #4]
 80044a0:	f107 0314 	add.w	r3, r7, #20
 80044a4:	2200      	movs	r2, #0
 80044a6:	601a      	str	r2, [r3, #0]
 80044a8:	605a      	str	r2, [r3, #4]
 80044aa:	609a      	str	r2, [r3, #8]
 80044ac:	60da      	str	r2, [r3, #12]
 80044ae:	611a      	str	r2, [r3, #16]
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	4a37      	ldr	r2, [pc, #220]	@ (8004594 <HAL_TIM_MspPostInit+0xfc>)
 80044b6:	4293      	cmp	r3, r2
 80044b8:	d11f      	bne.n	80044fa <HAL_TIM_MspPostInit+0x62>
 80044ba:	2300      	movs	r3, #0
 80044bc:	613b      	str	r3, [r7, #16]
 80044be:	4b36      	ldr	r3, [pc, #216]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044c2:	4a35      	ldr	r2, [pc, #212]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c4:	f043 0308 	orr.w	r3, r3, #8
 80044c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80044ca:	4b33      	ldr	r3, [pc, #204]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044ce:	f003 0308 	and.w	r3, r3, #8
 80044d2:	613b      	str	r3, [r7, #16]
 80044d4:	693b      	ldr	r3, [r7, #16]
 80044d6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80044da:	617b      	str	r3, [r7, #20]
 80044dc:	2302      	movs	r3, #2
 80044de:	61bb      	str	r3, [r7, #24]
 80044e0:	2300      	movs	r3, #0
 80044e2:	61fb      	str	r3, [r7, #28]
 80044e4:	2300      	movs	r3, #0
 80044e6:	623b      	str	r3, [r7, #32]
 80044e8:	2302      	movs	r3, #2
 80044ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80044ec:	f107 0314 	add.w	r3, r7, #20
 80044f0:	4619      	mov	r1, r3
 80044f2:	482a      	ldr	r0, [pc, #168]	@ (800459c <HAL_TIM_MspPostInit+0x104>)
 80044f4:	f008 fbb8 	bl	800cc68 <HAL_GPIO_Init>
 80044f8:	e047      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	681b      	ldr	r3, [r3, #0]
 80044fe:	4a28      	ldr	r2, [pc, #160]	@ (80045a0 <HAL_TIM_MspPostInit+0x108>)
 8004500:	4293      	cmp	r3, r2
 8004502:	d11f      	bne.n	8004544 <HAL_TIM_MspPostInit+0xac>
 8004504:	2300      	movs	r3, #0
 8004506:	60fb      	str	r3, [r7, #12]
 8004508:	4b23      	ldr	r3, [pc, #140]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800450c:	4a22      	ldr	r2, [pc, #136]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004512:	6313      	str	r3, [r2, #48]	@ 0x30
 8004514:	4b20      	ldr	r3, [pc, #128]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004516:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004518:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800451c:	60fb      	str	r3, [r7, #12]
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8004524:	617b      	str	r3, [r7, #20]
 8004526:	2302      	movs	r3, #2
 8004528:	61bb      	str	r3, [r7, #24]
 800452a:	2300      	movs	r3, #0
 800452c:	61fb      	str	r3, [r7, #28]
 800452e:	2300      	movs	r3, #0
 8004530:	623b      	str	r3, [r7, #32]
 8004532:	2302      	movs	r3, #2
 8004534:	627b      	str	r3, [r7, #36]	@ 0x24
 8004536:	f107 0314 	add.w	r3, r7, #20
 800453a:	4619      	mov	r1, r3
 800453c:	4819      	ldr	r0, [pc, #100]	@ (80045a4 <HAL_TIM_MspPostInit+0x10c>)
 800453e:	f008 fb93 	bl	800cc68 <HAL_GPIO_Init>
 8004542:	e022      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4a17      	ldr	r2, [pc, #92]	@ (80045a8 <HAL_TIM_MspPostInit+0x110>)
 800454a:	4293      	cmp	r3, r2
 800454c:	d11d      	bne.n	800458a <HAL_TIM_MspPostInit+0xf2>
 800454e:	2300      	movs	r3, #0
 8004550:	60bb      	str	r3, [r7, #8]
 8004552:	4b11      	ldr	r3, [pc, #68]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004556:	4a10      	ldr	r2, [pc, #64]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004558:	f043 0320 	orr.w	r3, r3, #32
 800455c:	6313      	str	r3, [r2, #48]	@ 0x30
 800455e:	4b0e      	ldr	r3, [pc, #56]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004562:	f003 0320 	and.w	r3, r3, #32
 8004566:	60bb      	str	r3, [r7, #8]
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	2340      	movs	r3, #64	@ 0x40
 800456c:	617b      	str	r3, [r7, #20]
 800456e:	2302      	movs	r3, #2
 8004570:	61bb      	str	r3, [r7, #24]
 8004572:	2300      	movs	r3, #0
 8004574:	61fb      	str	r3, [r7, #28]
 8004576:	2300      	movs	r3, #0
 8004578:	623b      	str	r3, [r7, #32]
 800457a:	2303      	movs	r3, #3
 800457c:	627b      	str	r3, [r7, #36]	@ 0x24
 800457e:	f107 0314 	add.w	r3, r7, #20
 8004582:	4619      	mov	r1, r3
 8004584:	4809      	ldr	r0, [pc, #36]	@ (80045ac <HAL_TIM_MspPostInit+0x114>)
 8004586:	f008 fb6f 	bl	800cc68 <HAL_GPIO_Init>
 800458a:	bf00      	nop
 800458c:	3728      	adds	r7, #40	@ 0x28
 800458e:	46bd      	mov	sp, r7
 8004590:	bd80      	pop	{r7, pc}
 8004592:	bf00      	nop
 8004594:	40000800 	.word	0x40000800
 8004598:	40023800 	.word	0x40023800
 800459c:	40020c00 	.word	0x40020c00
 80045a0:	40000c00 	.word	0x40000c00
 80045a4:	40021c00 	.word	0x40021c00
 80045a8:	40014400 	.word	0x40014400
 80045ac:	40021400 	.word	0x40021400

080045b0 <MX_USART1_UART_Init>:
 80045b0:	b580      	push	{r7, lr}
 80045b2:	af00      	add	r7, sp, #0
 80045b4:	4b11      	ldr	r3, [pc, #68]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045b6:	4a12      	ldr	r2, [pc, #72]	@ (8004600 <MX_USART1_UART_Init+0x50>)
 80045b8:	601a      	str	r2, [r3, #0]
 80045ba:	4b10      	ldr	r3, [pc, #64]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045bc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80045c0:	605a      	str	r2, [r3, #4]
 80045c2:	4b0e      	ldr	r3, [pc, #56]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045c4:	2200      	movs	r2, #0
 80045c6:	609a      	str	r2, [r3, #8]
 80045c8:	4b0c      	ldr	r3, [pc, #48]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045ca:	2200      	movs	r2, #0
 80045cc:	60da      	str	r2, [r3, #12]
 80045ce:	4b0b      	ldr	r3, [pc, #44]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d0:	2200      	movs	r2, #0
 80045d2:	611a      	str	r2, [r3, #16]
 80045d4:	4b09      	ldr	r3, [pc, #36]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d6:	220c      	movs	r2, #12
 80045d8:	615a      	str	r2, [r3, #20]
 80045da:	4b08      	ldr	r3, [pc, #32]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045dc:	2200      	movs	r2, #0
 80045de:	619a      	str	r2, [r3, #24]
 80045e0:	4b06      	ldr	r3, [pc, #24]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e2:	2200      	movs	r2, #0
 80045e4:	61da      	str	r2, [r3, #28]
 80045e6:	4805      	ldr	r0, [pc, #20]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e8:	f00d ff1a 	bl	8012420 <HAL_UART_Init>
 80045ec:	4603      	mov	r3, r0
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d001      	beq.n	80045f6 <MX_USART1_UART_Init+0x46>
 80045f2:	f7ff f901 	bl	80037f8 <Error_Handler>
 80045f6:	bf00      	nop
 80045f8:	bd80      	pop	{r7, pc}
 80045fa:	bf00      	nop
 80045fc:	20001be8 	.word	0x20001be8
 8004600:	40011000 	.word	0x40011000

08004604 <MX_USART3_UART_Init>:
 8004604:	b580      	push	{r7, lr}
 8004606:	af00      	add	r7, sp, #0
 8004608:	4b11      	ldr	r3, [pc, #68]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800460a:	4a12      	ldr	r2, [pc, #72]	@ (8004654 <MX_USART3_UART_Init+0x50>)
 800460c:	601a      	str	r2, [r3, #0]
 800460e:	4b10      	ldr	r3, [pc, #64]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004610:	4a11      	ldr	r2, [pc, #68]	@ (8004658 <MX_USART3_UART_Init+0x54>)
 8004612:	605a      	str	r2, [r3, #4]
 8004614:	4b0e      	ldr	r3, [pc, #56]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004616:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800461a:	609a      	str	r2, [r3, #8]
 800461c:	4b0c      	ldr	r3, [pc, #48]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800461e:	2200      	movs	r2, #0
 8004620:	60da      	str	r2, [r3, #12]
 8004622:	4b0b      	ldr	r3, [pc, #44]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004624:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004628:	611a      	str	r2, [r3, #16]
 800462a:	4b09      	ldr	r3, [pc, #36]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800462c:	220c      	movs	r2, #12
 800462e:	615a      	str	r2, [r3, #20]
 8004630:	4b07      	ldr	r3, [pc, #28]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004632:	2200      	movs	r2, #0
 8004634:	619a      	str	r2, [r3, #24]
 8004636:	4b06      	ldr	r3, [pc, #24]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004638:	2200      	movs	r2, #0
 800463a:	61da      	str	r2, [r3, #28]
 800463c:	4804      	ldr	r0, [pc, #16]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800463e:	f00d feef 	bl	8012420 <HAL_UART_Init>
 8004642:	4603      	mov	r3, r0
 8004644:	2b00      	cmp	r3, #0
 8004646:	d001      	beq.n	800464c <MX_USART3_UART_Init+0x48>
 8004648:	f7ff f8d6 	bl	80037f8 <Error_Handler>
 800464c:	bf00      	nop
 800464e:	bd80      	pop	{r7, pc}
 8004650:	20001c2c 	.word	0x20001c2c
 8004654:	40004800 	.word	0x40004800
 8004658:	000186a0 	.word	0x000186a0

0800465c <MX_USART6_UART_Init>:
 800465c:	b580      	push	{r7, lr}
 800465e:	af00      	add	r7, sp, #0
 8004660:	4b11      	ldr	r3, [pc, #68]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004662:	4a12      	ldr	r2, [pc, #72]	@ (80046ac <MX_USART6_UART_Init+0x50>)
 8004664:	601a      	str	r2, [r3, #0]
 8004666:	4b10      	ldr	r3, [pc, #64]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004668:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800466c:	605a      	str	r2, [r3, #4]
 800466e:	4b0e      	ldr	r3, [pc, #56]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004670:	2200      	movs	r2, #0
 8004672:	609a      	str	r2, [r3, #8]
 8004674:	4b0c      	ldr	r3, [pc, #48]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004676:	2200      	movs	r2, #0
 8004678:	60da      	str	r2, [r3, #12]
 800467a:	4b0b      	ldr	r3, [pc, #44]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800467c:	2200      	movs	r2, #0
 800467e:	611a      	str	r2, [r3, #16]
 8004680:	4b09      	ldr	r3, [pc, #36]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004682:	220c      	movs	r2, #12
 8004684:	615a      	str	r2, [r3, #20]
 8004686:	4b08      	ldr	r3, [pc, #32]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004688:	2200      	movs	r2, #0
 800468a:	619a      	str	r2, [r3, #24]
 800468c:	4b06      	ldr	r3, [pc, #24]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800468e:	2200      	movs	r2, #0
 8004690:	61da      	str	r2, [r3, #28]
 8004692:	4805      	ldr	r0, [pc, #20]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004694:	f00d fec4 	bl	8012420 <HAL_UART_Init>
 8004698:	4603      	mov	r3, r0
 800469a:	2b00      	cmp	r3, #0
 800469c:	d001      	beq.n	80046a2 <MX_USART6_UART_Init+0x46>
 800469e:	f7ff f8ab 	bl	80037f8 <Error_Handler>
 80046a2:	bf00      	nop
 80046a4:	bd80      	pop	{r7, pc}
 80046a6:	bf00      	nop
 80046a8:	20001c70 	.word	0x20001c70
 80046ac:	40011400 	.word	0x40011400

080046b0 <HAL_UART_MspInit>:
 80046b0:	b580      	push	{r7, lr}
 80046b2:	b08e      	sub	sp, #56	@ 0x38
 80046b4:	af00      	add	r7, sp, #0
 80046b6:	6078      	str	r0, [r7, #4]
 80046b8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80046bc:	2200      	movs	r2, #0
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	605a      	str	r2, [r3, #4]
 80046c2:	609a      	str	r2, [r3, #8]
 80046c4:	60da      	str	r2, [r3, #12]
 80046c6:	611a      	str	r2, [r3, #16]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	4a78      	ldr	r2, [pc, #480]	@ (80048b0 <HAL_UART_MspInit+0x200>)
 80046ce:	4293      	cmp	r3, r2
 80046d0:	f040 8083 	bne.w	80047da <HAL_UART_MspInit+0x12a>
 80046d4:	2300      	movs	r3, #0
 80046d6:	623b      	str	r3, [r7, #32]
 80046d8:	4b76      	ldr	r3, [pc, #472]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046dc:	4a75      	ldr	r2, [pc, #468]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046de:	f043 0310 	orr.w	r3, r3, #16
 80046e2:	6453      	str	r3, [r2, #68]	@ 0x44
 80046e4:	4b73      	ldr	r3, [pc, #460]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046e8:	f003 0310 	and.w	r3, r3, #16
 80046ec:	623b      	str	r3, [r7, #32]
 80046ee:	6a3b      	ldr	r3, [r7, #32]
 80046f0:	2300      	movs	r3, #0
 80046f2:	61fb      	str	r3, [r7, #28]
 80046f4:	4b6f      	ldr	r3, [pc, #444]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046f8:	4a6e      	ldr	r2, [pc, #440]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046fa:	f043 0302 	orr.w	r3, r3, #2
 80046fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8004700:	4b6c      	ldr	r3, [pc, #432]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004702:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004704:	f003 0302 	and.w	r3, r3, #2
 8004708:	61fb      	str	r3, [r7, #28]
 800470a:	69fb      	ldr	r3, [r7, #28]
 800470c:	2300      	movs	r3, #0
 800470e:	61bb      	str	r3, [r7, #24]
 8004710:	4b68      	ldr	r3, [pc, #416]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004714:	4a67      	ldr	r2, [pc, #412]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004716:	f043 0301 	orr.w	r3, r3, #1
 800471a:	6313      	str	r3, [r2, #48]	@ 0x30
 800471c:	4b65      	ldr	r3, [pc, #404]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800471e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004720:	f003 0301 	and.w	r3, r3, #1
 8004724:	61bb      	str	r3, [r7, #24]
 8004726:	69bb      	ldr	r3, [r7, #24]
 8004728:	2380      	movs	r3, #128	@ 0x80
 800472a:	627b      	str	r3, [r7, #36]	@ 0x24
 800472c:	2302      	movs	r3, #2
 800472e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004730:	2300      	movs	r3, #0
 8004732:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004734:	2303      	movs	r3, #3
 8004736:	633b      	str	r3, [r7, #48]	@ 0x30
 8004738:	2307      	movs	r3, #7
 800473a:	637b      	str	r3, [r7, #52]	@ 0x34
 800473c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004740:	4619      	mov	r1, r3
 8004742:	485d      	ldr	r0, [pc, #372]	@ (80048b8 <HAL_UART_MspInit+0x208>)
 8004744:	f008 fa90 	bl	800cc68 <HAL_GPIO_Init>
 8004748:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800474c:	627b      	str	r3, [r7, #36]	@ 0x24
 800474e:	2302      	movs	r3, #2
 8004750:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004752:	2300      	movs	r3, #0
 8004754:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004756:	2303      	movs	r3, #3
 8004758:	633b      	str	r3, [r7, #48]	@ 0x30
 800475a:	2307      	movs	r3, #7
 800475c:	637b      	str	r3, [r7, #52]	@ 0x34
 800475e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004762:	4619      	mov	r1, r3
 8004764:	4855      	ldr	r0, [pc, #340]	@ (80048bc <HAL_UART_MspInit+0x20c>)
 8004766:	f008 fa7f 	bl	800cc68 <HAL_GPIO_Init>
 800476a:	4b55      	ldr	r3, [pc, #340]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800476c:	4a55      	ldr	r2, [pc, #340]	@ (80048c4 <HAL_UART_MspInit+0x214>)
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	4b53      	ldr	r3, [pc, #332]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004772:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	4b51      	ldr	r3, [pc, #324]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800477a:	2200      	movs	r2, #0
 800477c:	609a      	str	r2, [r3, #8]
 800477e:	4b50      	ldr	r3, [pc, #320]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004780:	2200      	movs	r2, #0
 8004782:	60da      	str	r2, [r3, #12]
 8004784:	4b4e      	ldr	r3, [pc, #312]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004786:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800478a:	611a      	str	r2, [r3, #16]
 800478c:	4b4c      	ldr	r3, [pc, #304]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800478e:	2200      	movs	r2, #0
 8004790:	615a      	str	r2, [r3, #20]
 8004792:	4b4b      	ldr	r3, [pc, #300]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004794:	2200      	movs	r2, #0
 8004796:	619a      	str	r2, [r3, #24]
 8004798:	4b49      	ldr	r3, [pc, #292]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800479a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800479e:	61da      	str	r2, [r3, #28]
 80047a0:	4b47      	ldr	r3, [pc, #284]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a2:	2200      	movs	r2, #0
 80047a4:	621a      	str	r2, [r3, #32]
 80047a6:	4b46      	ldr	r3, [pc, #280]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a8:	2200      	movs	r2, #0
 80047aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80047ac:	4844      	ldr	r0, [pc, #272]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047ae:	f007 fe4d 	bl	800c44c <HAL_DMA_Init>
 80047b2:	4603      	mov	r3, r0
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d001      	beq.n	80047bc <HAL_UART_MspInit+0x10c>
 80047b8:	f7ff f81e 	bl	80037f8 <Error_Handler>
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	4a40      	ldr	r2, [pc, #256]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c0:	639a      	str	r2, [r3, #56]	@ 0x38
 80047c2:	4a3f      	ldr	r2, [pc, #252]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6393      	str	r3, [r2, #56]	@ 0x38
 80047c8:	2200      	movs	r2, #0
 80047ca:	2105      	movs	r1, #5
 80047cc:	2025      	movs	r0, #37	@ 0x25
 80047ce:	f007 fe05 	bl	800c3dc <HAL_NVIC_SetPriority>
 80047d2:	2025      	movs	r0, #37	@ 0x25
 80047d4:	f007 fe1e 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80047d8:	e116      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a3a      	ldr	r2, [pc, #232]	@ (80048c8 <HAL_UART_MspInit+0x218>)
 80047e0:	4293      	cmp	r3, r2
 80047e2:	d179      	bne.n	80048d8 <HAL_UART_MspInit+0x228>
 80047e4:	2300      	movs	r3, #0
 80047e6:	617b      	str	r3, [r7, #20]
 80047e8:	4b32      	ldr	r3, [pc, #200]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047ec:	4a31      	ldr	r2, [pc, #196]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ee:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80047f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80047f4:	4b2f      	ldr	r3, [pc, #188]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047f8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80047fc:	617b      	str	r3, [r7, #20]
 80047fe:	697b      	ldr	r3, [r7, #20]
 8004800:	2300      	movs	r3, #0
 8004802:	613b      	str	r3, [r7, #16]
 8004804:	4b2b      	ldr	r3, [pc, #172]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004806:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004808:	4a2a      	ldr	r2, [pc, #168]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800480a:	f043 0304 	orr.w	r3, r3, #4
 800480e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004810:	4b28      	ldr	r3, [pc, #160]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004812:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004814:	f003 0304 	and.w	r3, r3, #4
 8004818:	613b      	str	r3, [r7, #16]
 800481a:	693b      	ldr	r3, [r7, #16]
 800481c:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004820:	627b      	str	r3, [r7, #36]	@ 0x24
 8004822:	2302      	movs	r3, #2
 8004824:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004826:	2300      	movs	r3, #0
 8004828:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800482a:	2303      	movs	r3, #3
 800482c:	633b      	str	r3, [r7, #48]	@ 0x30
 800482e:	2307      	movs	r3, #7
 8004830:	637b      	str	r3, [r7, #52]	@ 0x34
 8004832:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004836:	4619      	mov	r1, r3
 8004838:	4824      	ldr	r0, [pc, #144]	@ (80048cc <HAL_UART_MspInit+0x21c>)
 800483a:	f008 fa15 	bl	800cc68 <HAL_GPIO_Init>
 800483e:	4b24      	ldr	r3, [pc, #144]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004840:	4a24      	ldr	r2, [pc, #144]	@ (80048d4 <HAL_UART_MspInit+0x224>)
 8004842:	601a      	str	r2, [r3, #0]
 8004844:	4b22      	ldr	r3, [pc, #136]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004846:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800484a:	605a      	str	r2, [r3, #4]
 800484c:	4b20      	ldr	r3, [pc, #128]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800484e:	2200      	movs	r2, #0
 8004850:	609a      	str	r2, [r3, #8]
 8004852:	4b1f      	ldr	r3, [pc, #124]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004854:	2200      	movs	r2, #0
 8004856:	60da      	str	r2, [r3, #12]
 8004858:	4b1d      	ldr	r3, [pc, #116]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800485a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800485e:	611a      	str	r2, [r3, #16]
 8004860:	4b1b      	ldr	r3, [pc, #108]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004862:	2200      	movs	r2, #0
 8004864:	615a      	str	r2, [r3, #20]
 8004866:	4b1a      	ldr	r3, [pc, #104]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004868:	2200      	movs	r2, #0
 800486a:	619a      	str	r2, [r3, #24]
 800486c:	4b18      	ldr	r3, [pc, #96]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800486e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004872:	61da      	str	r2, [r3, #28]
 8004874:	4b16      	ldr	r3, [pc, #88]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004876:	2200      	movs	r2, #0
 8004878:	621a      	str	r2, [r3, #32]
 800487a:	4b15      	ldr	r3, [pc, #84]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800487c:	2200      	movs	r2, #0
 800487e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004880:	4813      	ldr	r0, [pc, #76]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004882:	f007 fde3 	bl	800c44c <HAL_DMA_Init>
 8004886:	4603      	mov	r3, r0
 8004888:	2b00      	cmp	r3, #0
 800488a:	d001      	beq.n	8004890 <HAL_UART_MspInit+0x1e0>
 800488c:	f7fe ffb4 	bl	80037f8 <Error_Handler>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	4a0f      	ldr	r2, [pc, #60]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004894:	639a      	str	r2, [r3, #56]	@ 0x38
 8004896:	4a0e      	ldr	r2, [pc, #56]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	6393      	str	r3, [r2, #56]	@ 0x38
 800489c:	2200      	movs	r2, #0
 800489e:	2105      	movs	r1, #5
 80048a0:	2027      	movs	r0, #39	@ 0x27
 80048a2:	f007 fd9b 	bl	800c3dc <HAL_NVIC_SetPriority>
 80048a6:	2027      	movs	r0, #39	@ 0x27
 80048a8:	f007 fdb4 	bl	800c414 <HAL_NVIC_EnableIRQ>
 80048ac:	e0ac      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80048ae:	bf00      	nop
 80048b0:	40011000 	.word	0x40011000
 80048b4:	40023800 	.word	0x40023800
 80048b8:	40020400 	.word	0x40020400
 80048bc:	40020000 	.word	0x40020000
 80048c0:	20001cb4 	.word	0x20001cb4
 80048c4:	40026488 	.word	0x40026488
 80048c8:	40004800 	.word	0x40004800
 80048cc:	40020800 	.word	0x40020800
 80048d0:	20001d14 	.word	0x20001d14
 80048d4:	40026028 	.word	0x40026028
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	4a4c      	ldr	r2, [pc, #304]	@ (8004a10 <HAL_UART_MspInit+0x360>)
 80048de:	4293      	cmp	r3, r2
 80048e0:	f040 8092 	bne.w	8004a08 <HAL_UART_MspInit+0x358>
 80048e4:	2300      	movs	r3, #0
 80048e6:	60fb      	str	r3, [r7, #12]
 80048e8:	4b4a      	ldr	r3, [pc, #296]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048ec:	4a49      	ldr	r2, [pc, #292]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ee:	f043 0320 	orr.w	r3, r3, #32
 80048f2:	6453      	str	r3, [r2, #68]	@ 0x44
 80048f4:	4b47      	ldr	r3, [pc, #284]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048f8:	f003 0320 	and.w	r3, r3, #32
 80048fc:	60fb      	str	r3, [r7, #12]
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	2300      	movs	r3, #0
 8004902:	60bb      	str	r3, [r7, #8]
 8004904:	4b43      	ldr	r3, [pc, #268]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004906:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004908:	4a42      	ldr	r2, [pc, #264]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 800490a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800490e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004910:	4b40      	ldr	r3, [pc, #256]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004912:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004914:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004918:	60bb      	str	r3, [r7, #8]
 800491a:	68bb      	ldr	r3, [r7, #8]
 800491c:	f44f 4384 	mov.w	r3, #16896	@ 0x4200
 8004920:	627b      	str	r3, [r7, #36]	@ 0x24
 8004922:	2302      	movs	r3, #2
 8004924:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004926:	2300      	movs	r3, #0
 8004928:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800492a:	2303      	movs	r3, #3
 800492c:	633b      	str	r3, [r7, #48]	@ 0x30
 800492e:	2308      	movs	r3, #8
 8004930:	637b      	str	r3, [r7, #52]	@ 0x34
 8004932:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004936:	4619      	mov	r1, r3
 8004938:	4837      	ldr	r0, [pc, #220]	@ (8004a18 <HAL_UART_MspInit+0x368>)
 800493a:	f008 f995 	bl	800cc68 <HAL_GPIO_Init>
 800493e:	4b37      	ldr	r3, [pc, #220]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004940:	4a37      	ldr	r2, [pc, #220]	@ (8004a20 <HAL_UART_MspInit+0x370>)
 8004942:	601a      	str	r2, [r3, #0]
 8004944:	4b35      	ldr	r3, [pc, #212]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004946:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 800494a:	605a      	str	r2, [r3, #4]
 800494c:	4b33      	ldr	r3, [pc, #204]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800494e:	2200      	movs	r2, #0
 8004950:	609a      	str	r2, [r3, #8]
 8004952:	4b32      	ldr	r3, [pc, #200]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004954:	2200      	movs	r2, #0
 8004956:	60da      	str	r2, [r3, #12]
 8004958:	4b30      	ldr	r3, [pc, #192]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800495a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800495e:	611a      	str	r2, [r3, #16]
 8004960:	4b2e      	ldr	r3, [pc, #184]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004962:	2200      	movs	r2, #0
 8004964:	615a      	str	r2, [r3, #20]
 8004966:	4b2d      	ldr	r3, [pc, #180]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004968:	2200      	movs	r2, #0
 800496a:	619a      	str	r2, [r3, #24]
 800496c:	4b2b      	ldr	r3, [pc, #172]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800496e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004972:	61da      	str	r2, [r3, #28]
 8004974:	4b29      	ldr	r3, [pc, #164]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004976:	2200      	movs	r2, #0
 8004978:	621a      	str	r2, [r3, #32]
 800497a:	4b28      	ldr	r3, [pc, #160]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800497c:	2200      	movs	r2, #0
 800497e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004980:	4826      	ldr	r0, [pc, #152]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004982:	f007 fd63 	bl	800c44c <HAL_DMA_Init>
 8004986:	4603      	mov	r3, r0
 8004988:	2b00      	cmp	r3, #0
 800498a:	d001      	beq.n	8004990 <HAL_UART_MspInit+0x2e0>
 800498c:	f7fe ff34 	bl	80037f8 <Error_Handler>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	4a22      	ldr	r2, [pc, #136]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004994:	639a      	str	r2, [r3, #56]	@ 0x38
 8004996:	4a21      	ldr	r2, [pc, #132]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6393      	str	r3, [r2, #56]	@ 0x38
 800499c:	4b21      	ldr	r3, [pc, #132]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 800499e:	4a22      	ldr	r2, [pc, #136]	@ (8004a28 <HAL_UART_MspInit+0x378>)
 80049a0:	601a      	str	r2, [r3, #0]
 80049a2:	4b20      	ldr	r3, [pc, #128]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049a4:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 80049a8:	605a      	str	r2, [r3, #4]
 80049aa:	4b1e      	ldr	r3, [pc, #120]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049ac:	2240      	movs	r2, #64	@ 0x40
 80049ae:	609a      	str	r2, [r3, #8]
 80049b0:	4b1c      	ldr	r3, [pc, #112]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b2:	2200      	movs	r2, #0
 80049b4:	60da      	str	r2, [r3, #12]
 80049b6:	4b1b      	ldr	r3, [pc, #108]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80049bc:	611a      	str	r2, [r3, #16]
 80049be:	4b19      	ldr	r3, [pc, #100]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c0:	2200      	movs	r2, #0
 80049c2:	615a      	str	r2, [r3, #20]
 80049c4:	4b17      	ldr	r3, [pc, #92]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c6:	2200      	movs	r2, #0
 80049c8:	619a      	str	r2, [r3, #24]
 80049ca:	4b16      	ldr	r3, [pc, #88]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049cc:	2200      	movs	r2, #0
 80049ce:	61da      	str	r2, [r3, #28]
 80049d0:	4b14      	ldr	r3, [pc, #80]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d2:	2200      	movs	r2, #0
 80049d4:	621a      	str	r2, [r3, #32]
 80049d6:	4b13      	ldr	r3, [pc, #76]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d8:	2200      	movs	r2, #0
 80049da:	625a      	str	r2, [r3, #36]	@ 0x24
 80049dc:	4811      	ldr	r0, [pc, #68]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049de:	f007 fd35 	bl	800c44c <HAL_DMA_Init>
 80049e2:	4603      	mov	r3, r0
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d001      	beq.n	80049ec <HAL_UART_MspInit+0x33c>
 80049e8:	f7fe ff06 	bl	80037f8 <Error_Handler>
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	4a0d      	ldr	r2, [pc, #52]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80049f2:	4a0c      	ldr	r2, [pc, #48]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	6393      	str	r3, [r2, #56]	@ 0x38
 80049f8:	2200      	movs	r2, #0
 80049fa:	2105      	movs	r1, #5
 80049fc:	2047      	movs	r0, #71	@ 0x47
 80049fe:	f007 fced 	bl	800c3dc <HAL_NVIC_SetPriority>
 8004a02:	2047      	movs	r0, #71	@ 0x47
 8004a04:	f007 fd06 	bl	800c414 <HAL_NVIC_EnableIRQ>
 8004a08:	bf00      	nop
 8004a0a:	3738      	adds	r7, #56	@ 0x38
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}
 8004a10:	40011400 	.word	0x40011400
 8004a14:	40023800 	.word	0x40023800
 8004a18:	40021800 	.word	0x40021800
 8004a1c:	20001d74 	.word	0x20001d74
 8004a20:	40026428 	.word	0x40026428
 8004a24:	20001dd4 	.word	0x20001dd4
 8004a28:	400264a0 	.word	0x400264a0

08004a2c <Reset_Handler>:
 8004a2c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8004a64 <LoopFillZerobss+0x14>
 8004a30:	2100      	movs	r1, #0
 8004a32:	e003      	b.n	8004a3c <LoopCopyDataInit>

08004a34 <CopyDataInit>:
 8004a34:	4b0c      	ldr	r3, [pc, #48]	@ (8004a68 <LoopFillZerobss+0x18>)
 8004a36:	585b      	ldr	r3, [r3, r1]
 8004a38:	5043      	str	r3, [r0, r1]
 8004a3a:	3104      	adds	r1, #4

08004a3c <LoopCopyDataInit>:
 8004a3c:	480b      	ldr	r0, [pc, #44]	@ (8004a6c <LoopFillZerobss+0x1c>)
 8004a3e:	4b0c      	ldr	r3, [pc, #48]	@ (8004a70 <LoopFillZerobss+0x20>)
 8004a40:	1842      	adds	r2, r0, r1
 8004a42:	429a      	cmp	r2, r3
 8004a44:	d3f6      	bcc.n	8004a34 <CopyDataInit>
 8004a46:	4a0b      	ldr	r2, [pc, #44]	@ (8004a74 <LoopFillZerobss+0x24>)
 8004a48:	e002      	b.n	8004a50 <LoopFillZerobss>

08004a4a <FillZerobss>:
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	f842 3b04 	str.w	r3, [r2], #4

08004a50 <LoopFillZerobss>:
 8004a50:	4b09      	ldr	r3, [pc, #36]	@ (8004a78 <LoopFillZerobss+0x28>)
 8004a52:	429a      	cmp	r2, r3
 8004a54:	d3f9      	bcc.n	8004a4a <FillZerobss>
 8004a56:	f7ff fa77 	bl	8003f48 <SystemInit>
 8004a5a:	f016 fa63 	bl	801af24 <__libc_init_array>
 8004a5e:	f7fe fe1f 	bl	80036a0 <main>
 8004a62:	4770      	bx	lr
 8004a64:	20020000 	.word	0x20020000
 8004a68:	08021bcc 	.word	0x08021bcc
 8004a6c:	20000000 	.word	0x20000000
 8004a70:	200007d8 	.word	0x200007d8
 8004a74:	200007d8 	.word	0x200007d8
 8004a78:	2000d284 	.word	0x2000d284

08004a7c <ADC_IRQHandler>:
 8004a7c:	e7fe      	b.n	8004a7c <ADC_IRQHandler>

08004a7e <PID_Init>:
#include "typedefs.h"




void PID_Init(PID *pid, double kp, double ki, double kd, double min_output, double max_output) {
 8004a7e:	b480      	push	{r7}
 8004a80:	b08d      	sub	sp, #52	@ 0x34
 8004a82:	af00      	add	r7, sp, #0
 8004a84:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004a86:	ed87 0b08 	vstr	d0, [r7, #32]
 8004a8a:	ed87 1b06 	vstr	d1, [r7, #24]
 8004a8e:	ed87 2b04 	vstr	d2, [r7, #16]
 8004a92:	ed87 3b02 	vstr	d3, [r7, #8]
 8004a96:	ed87 4b00 	vstr	d4, [r7]
    pid->kp = kp;
 8004a9a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004a9c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004aa0:	e9c1 2300 	strd	r2, r3, [r1]
    pid->ki = ki;
 8004aa4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aa6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004aaa:	e9c1 2302 	strd	r2, r3, [r1, #8]
    pid->kd = kd;
 8004aae:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ab0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004ab4:	e9c1 2304 	strd	r2, r3, [r1, #16]
    pid->prev_error = 0;
 8004ab8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aba:	f04f 0200 	mov.w	r2, #0
 8004abe:	f04f 0300 	mov.w	r3, #0
 8004ac2:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->integral = 0;
 8004ac6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ac8:	f04f 0200 	mov.w	r2, #0
 8004acc:	f04f 0300 	mov.w	r3, #0
 8004ad0:	e9c1 2308 	strd	r2, r3, [r1, #32]
    pid->max_output = max_output;
 8004ad4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ad6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004ada:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    pid->min_output = min_output;
 8004ade:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ae0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004ae4:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
}
 8004ae8:	bf00      	nop
 8004aea:	3734      	adds	r7, #52	@ 0x34
 8004aec:	46bd      	mov	sp, r7
 8004aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af2:	4770      	bx	lr

08004af4 <PID_Compute>:

double PID_Compute(PID *pid, double setpoint, double measured_value, double dt, double deadzone) {
 8004af4:	b5b0      	push	{r4, r5, r7, lr}
 8004af6:	b090      	sub	sp, #64	@ 0x40
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	6278      	str	r0, [r7, #36]	@ 0x24
 8004afc:	ed87 0b06 	vstr	d0, [r7, #24]
 8004b00:	ed87 1b04 	vstr	d1, [r7, #16]
 8004b04:	ed87 2b02 	vstr	d2, [r7, #8]
 8004b08:	ed87 3b00 	vstr	d3, [r7]
    double error = setpoint - measured_value;
 8004b0c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004b10:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004b14:	f7fb fbb8 	bl	8000288 <__aeabi_dsub>
 8004b18:	4602      	mov	r2, r0
 8004b1a:	460b      	mov	r3, r1
 8004b1c:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    if (error < deadzone && error > -deadzone ){
 8004b20:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004b24:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b28:	f7fb ffd8 	bl	8000adc <__aeabi_dcmplt>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d012      	beq.n	8004b58 <PID_Compute+0x64>
 8004b32:	683c      	ldr	r4, [r7, #0]
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 8004b3a:	4622      	mov	r2, r4
 8004b3c:	462b      	mov	r3, r5
 8004b3e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b42:	f7fb ffe9 	bl	8000b18 <__aeabi_dcmpgt>
 8004b46:	4603      	mov	r3, r0
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	d005      	beq.n	8004b58 <PID_Compute+0x64>
    	error = 0.0;
 8004b4c:	f04f 0200 	mov.w	r2, #0
 8004b50:	f04f 0300 	mov.w	r3, #0
 8004b54:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    }
    pid->integral += error * dt;
 8004b58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b5a:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 8004b5e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b62:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b66:	f7fb fd47 	bl	80005f8 <__aeabi_dmul>
 8004b6a:	4602      	mov	r2, r0
 8004b6c:	460b      	mov	r3, r1
 8004b6e:	4620      	mov	r0, r4
 8004b70:	4629      	mov	r1, r5
 8004b72:	f7fb fb8b 	bl	800028c <__adddf3>
 8004b76:	4602      	mov	r2, r0
 8004b78:	460b      	mov	r3, r1
 8004b7a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004b7c:	e9c1 2308 	strd	r2, r3, [r1, #32]
    double derivative = (error - pid->prev_error) / dt;
 8004b80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b82:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004b86:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b8a:	f7fb fb7d 	bl	8000288 <__aeabi_dsub>
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	4610      	mov	r0, r2
 8004b94:	4619      	mov	r1, r3
 8004b96:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b9a:	f7fb fe57 	bl	800084c <__aeabi_ddiv>
 8004b9e:	4602      	mov	r2, r0
 8004ba0:	460b      	mov	r3, r1
 8004ba2:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
    double output = pid->kp * error + pid->ki * pid->integral + pid->kd * derivative;
 8004ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ba8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004bac:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004bb0:	f7fb fd22 	bl	80005f8 <__aeabi_dmul>
 8004bb4:	4602      	mov	r2, r0
 8004bb6:	460b      	mov	r3, r1
 8004bb8:	4614      	mov	r4, r2
 8004bba:	461d      	mov	r5, r3
 8004bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bbe:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8004bc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bc4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004bc8:	f7fb fd16 	bl	80005f8 <__aeabi_dmul>
 8004bcc:	4602      	mov	r2, r0
 8004bce:	460b      	mov	r3, r1
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	4629      	mov	r1, r5
 8004bd4:	f7fb fb5a 	bl	800028c <__adddf3>
 8004bd8:	4602      	mov	r2, r0
 8004bda:	460b      	mov	r3, r1
 8004bdc:	4614      	mov	r4, r2
 8004bde:	461d      	mov	r5, r3
 8004be0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004be2:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004be6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004bea:	f7fb fd05 	bl	80005f8 <__aeabi_dmul>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	4629      	mov	r1, r5
 8004bf6:	f7fb fb49 	bl	800028c <__adddf3>
 8004bfa:	4602      	mov	r2, r0
 8004bfc:	460b      	mov	r3, r1
 8004bfe:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30

    // Clamp the output to the specified max and min limits
    if (output > pid->max_output) {
 8004c02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c04:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c08:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c0c:	f7fb ff84 	bl	8000b18 <__aeabi_dcmpgt>
 8004c10:	4603      	mov	r3, r0
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d005      	beq.n	8004c22 <PID_Compute+0x12e>
        output = pid->max_output;
 8004c16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c18:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c1c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8004c20:	e00e      	b.n	8004c40 <PID_Compute+0x14c>
    } else if (output < pid->min_output) {
 8004c22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c24:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c28:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c2c:	f7fb ff56 	bl	8000adc <__aeabi_dcmplt>
 8004c30:	4603      	mov	r3, r0
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d004      	beq.n	8004c40 <PID_Compute+0x14c>
        output = pid->min_output;
 8004c36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c38:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c3c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
    }

    pid->prev_error = error;
 8004c40:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c42:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004c46:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->output =  output;
 8004c4a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c4c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004c50:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
}
 8004c54:	bf00      	nop
 8004c56:	eeb0 0a47 	vmov.f32	s0, s14
 8004c5a:	eef0 0a67 	vmov.f32	s1, s15
 8004c5e:	3740      	adds	r7, #64	@ 0x40
 8004c60:	46bd      	mov	sp, r7
 8004c62:	bdb0      	pop	{r4, r5, r7, pc}
 8004c64:	0000      	movs	r0, r0
	...

08004c68 <buzzing_task>:
 8004c68:	b580      	push	{r7, lr}
 8004c6a:	b086      	sub	sp, #24
 8004c6c:	af00      	add	r7, sp, #0
 8004c6e:	6078      	str	r0, [r7, #4]
 8004c70:	4bb5      	ldr	r3, [pc, #724]	@ (8004f48 <buzzing_task+0x2e0>)
 8004c72:	613b      	str	r3, [r7, #16]
 8004c74:	4bb5      	ldr	r3, [pc, #724]	@ (8004f4c <buzzing_task+0x2e4>)
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	f107 010d 	add.w	r1, r7, #13
 8004c7c:	f04f 32ff 	mov.w	r2, #4294967295
 8004c80:	4618      	mov	r0, r3
 8004c82:	f012 fec9 	bl	8017a18 <xQueueReceive>
 8004c86:	7b7b      	ldrb	r3, [r7, #13]
 8004c88:	2b0d      	cmp	r3, #13
 8004c8a:	f200 814c 	bhi.w	8004f26 <buzzing_task+0x2be>
 8004c8e:	a201      	add	r2, pc, #4	@ (adr r2, 8004c94 <buzzing_task+0x2c>)
 8004c90:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c94:	08004ccd 	.word	0x08004ccd
 8004c98:	08004d73 	.word	0x08004d73
 8004c9c:	08004da5 	.word	0x08004da5
 8004ca0:	08004e29 	.word	0x08004e29
 8004ca4:	08004df7 	.word	0x08004df7
 8004ca8:	08004e61 	.word	0x08004e61
 8004cac:	08004ebb 	.word	0x08004ebb
 8004cb0:	08004ecb 	.word	0x08004ecb
 8004cb4:	08004e8d 	.word	0x08004e8d
 8004cb8:	08004e9d 	.word	0x08004e9d
 8004cbc:	08004ead 	.word	0x08004ead
 8004cc0:	08004edb 	.word	0x08004edb
 8004cc4:	08004f07 	.word	0x08004f07
 8004cc8:	08004f17 	.word	0x08004f17
 8004ccc:	2300      	movs	r3, #0
 8004cce:	82fb      	strh	r3, [r7, #22]
 8004cd0:	e04b      	b.n	8004d6a <buzzing_task+0x102>
 8004cd2:	f013 fcaf 	bl	8018634 <xTaskGetTickCount>
 8004cd6:	4603      	mov	r3, r0
 8004cd8:	60bb      	str	r3, [r7, #8]
 8004cda:	8afb      	ldrh	r3, [r7, #22]
 8004cdc:	4a9c      	ldr	r2, [pc, #624]	@ (8004f50 <buzzing_task+0x2e8>)
 8004cde:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004ce2:	4618      	mov	r0, r3
 8004ce4:	f7fc fa42 	bl	800116c <buzzer>
 8004ce8:	8afb      	ldrh	r3, [r7, #22]
 8004cea:	4a9a      	ldr	r2, [pc, #616]	@ (8004f54 <buzzing_task+0x2ec>)
 8004cec:	009b      	lsls	r3, r3, #2
 8004cee:	4413      	add	r3, r2
 8004cf0:	ed93 7a00 	vldr	s14, [r3]
 8004cf4:	edd7 7a04 	vldr	s15, [r7, #16]
 8004cf8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004cfc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d00:	ee17 3a90 	vmov	r3, s15
 8004d04:	81fb      	strh	r3, [r7, #14]
 8004d06:	89fb      	ldrh	r3, [r7, #14]
 8004d08:	4618      	mov	r0, r3
 8004d0a:	f7fb fc0b 	bl	8000524 <__aeabi_i2d>
 8004d0e:	a38a      	add	r3, pc, #552	@ (adr r3, 8004f38 <buzzing_task+0x2d0>)
 8004d10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d14:	f7fb fc70 	bl	80005f8 <__aeabi_dmul>
 8004d18:	4602      	mov	r2, r0
 8004d1a:	460b      	mov	r3, r1
 8004d1c:	4610      	mov	r0, r2
 8004d1e:	4619      	mov	r1, r3
 8004d20:	f7fb ff42 	bl	8000ba8 <__aeabi_d2uiz>
 8004d24:	4602      	mov	r2, r0
 8004d26:	f107 0308 	add.w	r3, r7, #8
 8004d2a:	4611      	mov	r1, r2
 8004d2c:	4618      	mov	r0, r3
 8004d2e:	f013 faad 	bl	801828c <vTaskDelayUntil>
 8004d32:	2000      	movs	r0, #0
 8004d34:	f7fc fa1a 	bl	800116c <buzzer>
 8004d38:	89fb      	ldrh	r3, [r7, #14]
 8004d3a:	4618      	mov	r0, r3
 8004d3c:	f7fb fbf2 	bl	8000524 <__aeabi_i2d>
 8004d40:	a37f      	add	r3, pc, #508	@ (adr r3, 8004f40 <buzzing_task+0x2d8>)
 8004d42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d46:	f7fb fc57 	bl	80005f8 <__aeabi_dmul>
 8004d4a:	4602      	mov	r2, r0
 8004d4c:	460b      	mov	r3, r1
 8004d4e:	4610      	mov	r0, r2
 8004d50:	4619      	mov	r1, r3
 8004d52:	f7fb ff29 	bl	8000ba8 <__aeabi_d2uiz>
 8004d56:	4602      	mov	r2, r0
 8004d58:	f107 0308 	add.w	r3, r7, #8
 8004d5c:	4611      	mov	r1, r2
 8004d5e:	4618      	mov	r0, r3
 8004d60:	f013 fa94 	bl	801828c <vTaskDelayUntil>
 8004d64:	8afb      	ldrh	r3, [r7, #22]
 8004d66:	3301      	adds	r3, #1
 8004d68:	82fb      	strh	r3, [r7, #22]
 8004d6a:	8afb      	ldrh	r3, [r7, #22]
 8004d6c:	2b7c      	cmp	r3, #124	@ 0x7c
 8004d6e:	d9b0      	bls.n	8004cd2 <buzzing_task+0x6a>
 8004d70:	e0da      	b.n	8004f28 <buzzing_task+0x2c0>
 8004d72:	f013 fc5f 	bl	8018634 <xTaskGetTickCount>
 8004d76:	4603      	mov	r3, r0
 8004d78:	60bb      	str	r3, [r7, #8]
 8004d7a:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004d7e:	f7fc f9f5 	bl	800116c <buzzer>
 8004d82:	2064      	movs	r0, #100	@ 0x64
 8004d84:	f013 fb02 	bl	801838c <vTaskDelay>
 8004d88:	2000      	movs	r0, #0
 8004d8a:	f7fc f9ef 	bl	800116c <buzzer>
 8004d8e:	2032      	movs	r0, #50	@ 0x32
 8004d90:	f013 fafc 	bl	801838c <vTaskDelay>
 8004d94:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004d98:	f7fc f9e8 	bl	800116c <buzzer>
 8004d9c:	2064      	movs	r0, #100	@ 0x64
 8004d9e:	f013 faf5 	bl	801838c <vTaskDelay>
 8004da2:	e0c1      	b.n	8004f28 <buzzing_task+0x2c0>
 8004da4:	f013 fc46 	bl	8018634 <xTaskGetTickCount>
 8004da8:	4603      	mov	r3, r0
 8004daa:	60bb      	str	r3, [r7, #8]
 8004dac:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004db0:	f7fc f9dc 	bl	800116c <buzzer>
 8004db4:	2064      	movs	r0, #100	@ 0x64
 8004db6:	f013 fae9 	bl	801838c <vTaskDelay>
 8004dba:	2000      	movs	r0, #0
 8004dbc:	f7fc f9d6 	bl	800116c <buzzer>
 8004dc0:	2032      	movs	r0, #50	@ 0x32
 8004dc2:	f013 fae3 	bl	801838c <vTaskDelay>
 8004dc6:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004dca:	f7fc f9cf 	bl	800116c <buzzer>
 8004dce:	2064      	movs	r0, #100	@ 0x64
 8004dd0:	f013 fadc 	bl	801838c <vTaskDelay>
 8004dd4:	2000      	movs	r0, #0
 8004dd6:	f7fc f9c9 	bl	800116c <buzzer>
 8004dda:	2032      	movs	r0, #50	@ 0x32
 8004ddc:	f013 fad6 	bl	801838c <vTaskDelay>
 8004de0:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004de4:	f7fc f9c2 	bl	800116c <buzzer>
 8004de8:	2064      	movs	r0, #100	@ 0x64
 8004dea:	f013 facf 	bl	801838c <vTaskDelay>
 8004dee:	2000      	movs	r0, #0
 8004df0:	f7fc f9bc 	bl	800116c <buzzer>
 8004df4:	e098      	b.n	8004f28 <buzzing_task+0x2c0>
 8004df6:	f013 fc1d 	bl	8018634 <xTaskGetTickCount>
 8004dfa:	4603      	mov	r3, r0
 8004dfc:	60bb      	str	r3, [r7, #8]
 8004dfe:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e02:	f7fc f9b3 	bl	800116c <buzzer>
 8004e06:	2064      	movs	r0, #100	@ 0x64
 8004e08:	f013 fac0 	bl	801838c <vTaskDelay>
 8004e0c:	2000      	movs	r0, #0
 8004e0e:	f7fc f9ad 	bl	800116c <buzzer>
 8004e12:	2032      	movs	r0, #50	@ 0x32
 8004e14:	f013 faba 	bl	801838c <vTaskDelay>
 8004e18:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e1c:	f7fc f9a6 	bl	800116c <buzzer>
 8004e20:	2064      	movs	r0, #100	@ 0x64
 8004e22:	f013 fab3 	bl	801838c <vTaskDelay>
 8004e26:	e07f      	b.n	8004f28 <buzzing_task+0x2c0>
 8004e28:	f013 fc04 	bl	8018634 <xTaskGetTickCount>
 8004e2c:	4603      	mov	r3, r0
 8004e2e:	60bb      	str	r3, [r7, #8]
 8004e30:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e34:	f7fc f99a 	bl	800116c <buzzer>
 8004e38:	2064      	movs	r0, #100	@ 0x64
 8004e3a:	f013 faa7 	bl	801838c <vTaskDelay>
 8004e3e:	2000      	movs	r0, #0
 8004e40:	f7fc f994 	bl	800116c <buzzer>
 8004e44:	2032      	movs	r0, #50	@ 0x32
 8004e46:	f013 faa1 	bl	801838c <vTaskDelay>
 8004e4a:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e4e:	f7fc f98d 	bl	800116c <buzzer>
 8004e52:	2064      	movs	r0, #100	@ 0x64
 8004e54:	f013 fa9a 	bl	801838c <vTaskDelay>
 8004e58:	2064      	movs	r0, #100	@ 0x64
 8004e5a:	f7fc f987 	bl	800116c <buzzer>
 8004e5e:	e063      	b.n	8004f28 <buzzing_task+0x2c0>
 8004e60:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e64:	f7fc f982 	bl	800116c <buzzer>
 8004e68:	2064      	movs	r0, #100	@ 0x64
 8004e6a:	f013 fa8f 	bl	801838c <vTaskDelay>
 8004e6e:	f44f 7025 	mov.w	r0, #660	@ 0x294
 8004e72:	f7fc f97b 	bl	800116c <buzzer>
 8004e76:	2064      	movs	r0, #100	@ 0x64
 8004e78:	f013 fa88 	bl	801838c <vTaskDelay>
 8004e7c:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e80:	f7fc f974 	bl	800116c <buzzer>
 8004e84:	2064      	movs	r0, #100	@ 0x64
 8004e86:	f013 fa81 	bl	801838c <vTaskDelay>
 8004e8a:	e04d      	b.n	8004f28 <buzzing_task+0x2c0>
 8004e8c:	f44f 70b9 	mov.w	r0, #370	@ 0x172
 8004e90:	f7fc f96c 	bl	800116c <buzzer>
 8004e94:	2064      	movs	r0, #100	@ 0x64
 8004e96:	f013 fa79 	bl	801838c <vTaskDelay>
 8004e9a:	e045      	b.n	8004f28 <buzzing_task+0x2c0>
 8004e9c:	f640 1082 	movw	r0, #2434	@ 0x982
 8004ea0:	f7fc f964 	bl	800116c <buzzer>
 8004ea4:	2064      	movs	r0, #100	@ 0x64
 8004ea6:	f013 fa71 	bl	801838c <vTaskDelay>
 8004eaa:	e03d      	b.n	8004f28 <buzzing_task+0x2c0>
 8004eac:	2000      	movs	r0, #0
 8004eae:	f7fc f95d 	bl	800116c <buzzer>
 8004eb2:	2032      	movs	r0, #50	@ 0x32
 8004eb4:	f013 fa6a 	bl	801838c <vTaskDelay>
 8004eb8:	e036      	b.n	8004f28 <buzzing_task+0x2c0>
 8004eba:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004ebe:	f7fc f955 	bl	800116c <buzzer>
 8004ec2:	2064      	movs	r0, #100	@ 0x64
 8004ec4:	f013 fa62 	bl	801838c <vTaskDelay>
 8004ec8:	e02e      	b.n	8004f28 <buzzing_task+0x2c0>
 8004eca:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004ece:	f7fc f94d 	bl	800116c <buzzer>
 8004ed2:	2064      	movs	r0, #100	@ 0x64
 8004ed4:	f013 fa5a 	bl	801838c <vTaskDelay>
 8004ed8:	e026      	b.n	8004f28 <buzzing_task+0x2c0>
 8004eda:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 8004ede:	f7fc f945 	bl	800116c <buzzer>
 8004ee2:	2032      	movs	r0, #50	@ 0x32
 8004ee4:	f013 fa52 	bl	801838c <vTaskDelay>
 8004ee8:	f240 4017 	movw	r0, #1047	@ 0x417
 8004eec:	f7fc f93e 	bl	800116c <buzzer>
 8004ef0:	2032      	movs	r0, #50	@ 0x32
 8004ef2:	f013 fa4b 	bl	801838c <vTaskDelay>
 8004ef6:	f240 4055 	movw	r0, #1109	@ 0x455
 8004efa:	f7fc f937 	bl	800116c <buzzer>
 8004efe:	2032      	movs	r0, #50	@ 0x32
 8004f00:	f013 fa44 	bl	801838c <vTaskDelay>
 8004f04:	e010      	b.n	8004f28 <buzzing_task+0x2c0>
 8004f06:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 8004f0a:	f7fc f92f 	bl	800116c <buzzer>
 8004f0e:	2064      	movs	r0, #100	@ 0x64
 8004f10:	f013 fa3c 	bl	801838c <vTaskDelay>
 8004f14:	e008      	b.n	8004f28 <buzzing_task+0x2c0>
 8004f16:	f240 4055 	movw	r0, #1109	@ 0x455
 8004f1a:	f7fc f927 	bl	800116c <buzzer>
 8004f1e:	2064      	movs	r0, #100	@ 0x64
 8004f20:	f013 fa34 	bl	801838c <vTaskDelay>
 8004f24:	e000      	b.n	8004f28 <buzzing_task+0x2c0>
 8004f26:	bf00      	nop
 8004f28:	2000      	movs	r0, #0
 8004f2a:	f7fc f91f 	bl	800116c <buzzer>
 8004f2e:	2032      	movs	r0, #50	@ 0x32
 8004f30:	f013 fa2c 	bl	801838c <vTaskDelay>
 8004f34:	e69e      	b.n	8004c74 <buzzing_task+0xc>
 8004f36:	bf00      	nop
 8004f38:	66666666 	.word	0x66666666
 8004f3c:	3fee6666 	.word	0x3fee6666
 8004f40:	9999999a 	.word	0x9999999a
 8004f44:	3fa99999 	.word	0x3fa99999
 8004f48:	42fa0000 	.word	0x42fa0000
 8004f4c:	200037c4 	.word	0x200037c4
 8004f50:	080212ec 	.word	0x080212ec
 8004f54:	080213e8 	.word	0x080213e8

08004f58 <can_ISR>:

/**
 * CAN ISR function, triggered upon RX_FIFO0_MSG_PENDING
 * converts the raw can data to the motor_data struct form as well
 */
void can_ISR(CAN_HandleTypeDef *hcan) {
 8004f58:	b580      	push	{r7, lr}
 8004f5a:	b08c      	sub	sp, #48	@ 0x30
 8004f5c:	af00      	add	r7, sp, #0
 8004f5e:	6078      	str	r0, [r7, #4]

	CAN_RxHeaderTypeDef rx_msg_header;
	uint8_t rx_buffer[CAN_BUFFER_SIZE];
	//check which CAN bus received it
	//required because the 2 canbuses use seperate FIFOs for receive
	if (hcan->Instance == CAN1) {
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	4a1f      	ldr	r2, [pc, #124]	@ (8004fe4 <can_ISR+0x8c>)
 8004f66:	4293      	cmp	r3, r2
 8004f68:	d118      	bne.n	8004f9c <can_ISR+0x44>
		HAL_CAN_DeactivateNotification(hcan,
 8004f6a:	210e      	movs	r1, #14
 8004f6c:	6878      	ldr	r0, [r7, #4]
 8004f6e:	f006 ff0c 	bl	800bd8a <HAL_CAN_DeactivateNotification>
				CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL
						| CAN_IT_RX_FIFO0_OVERRUN);
		can1_get_msg(&hcan1, &rx_msg_header, rx_buffer);
 8004f72:	f107 020c 	add.w	r2, r7, #12
 8004f76:	f107 0314 	add.w	r3, r7, #20
 8004f7a:	4619      	mov	r1, r3
 8004f7c:	481a      	ldr	r0, [pc, #104]	@ (8004fe8 <can_ISR+0x90>)
 8004f7e:	f7fc f93b 	bl	80011f8 <can1_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId, rx_buffer);
 8004f82:	697b      	ldr	r3, [r7, #20]
 8004f84:	b29b      	uxth	r3, r3
 8004f86:	f107 020c 	add.w	r2, r7, #12
 8004f8a:	4619      	mov	r1, r3
 8004f8c:	4817      	ldr	r0, [pc, #92]	@ (8004fec <can_ISR+0x94>)
 8004f8e:	f000 f833 	bl	8004ff8 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8004f92:	210e      	movs	r1, #14
 8004f94:	6878      	ldr	r0, [r7, #4]
 8004f96:	f006 fed2 	bl	800bd3e <HAL_CAN_ActivateNotification>
		can_get_msg(&hcan2, &rx_msg_header, rx_buffer);
		process_chassis_can_msg(rx_msg_header.StdId, rx_buffer);
		HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL	| CAN_IT_RX_FIFO0_OVERRUN);
	}
#endif
}
 8004f9a:	e01e      	b.n	8004fda <can_ISR+0x82>
	else if (hcan->Instance == CAN2) {
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	681b      	ldr	r3, [r3, #0]
 8004fa0:	4a13      	ldr	r2, [pc, #76]	@ (8004ff0 <can_ISR+0x98>)
 8004fa2:	4293      	cmp	r3, r2
 8004fa4:	d119      	bne.n	8004fda <can_ISR+0x82>
		HAL_CAN_DeactivateNotification(hcan,
 8004fa6:	2170      	movs	r1, #112	@ 0x70
 8004fa8:	6878      	ldr	r0, [r7, #4]
 8004faa:	f006 feee 	bl	800bd8a <HAL_CAN_DeactivateNotification>
		can2_get_msg(&hcan2, &rx_msg_header, rx_buffer);
 8004fae:	f107 020c 	add.w	r2, r7, #12
 8004fb2:	f107 0314 	add.w	r3, r7, #20
 8004fb6:	4619      	mov	r1, r3
 8004fb8:	480e      	ldr	r0, [pc, #56]	@ (8004ff4 <can_ISR+0x9c>)
 8004fba:	f7fc f92e 	bl	800121a <can2_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId + 12, rx_buffer);
 8004fbe:	697b      	ldr	r3, [r7, #20]
 8004fc0:	b29b      	uxth	r3, r3
 8004fc2:	330c      	adds	r3, #12
 8004fc4:	b29b      	uxth	r3, r3
 8004fc6:	f107 020c 	add.w	r2, r7, #12
 8004fca:	4619      	mov	r1, r3
 8004fcc:	4807      	ldr	r0, [pc, #28]	@ (8004fec <can_ISR+0x94>)
 8004fce:	f000 f813 	bl	8004ff8 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8004fd2:	2170      	movs	r1, #112	@ 0x70
 8004fd4:	6878      	ldr	r0, [r7, #4]
 8004fd6:	f006 feb2 	bl	800bd3e <HAL_CAN_ActivateNotification>
}
 8004fda:	bf00      	nop
 8004fdc:	3730      	adds	r7, #48	@ 0x30
 8004fde:	46bd      	mov	sp, r7
 8004fe0:	bd80      	pop	{r7, pc}
 8004fe2:	bf00      	nop
 8004fe4:	40006400 	.word	0x40006400
 8004fe8:	200008e4 	.word	0x200008e4
 8004fec:	20001e48 	.word	0x20001e48
 8004ff0:	40006800 	.word	0x40006800
 8004ff4:	2000090c 	.word	0x2000090c

08004ff8 <convert_raw_can_data>:
 *
 * For GM6020 motors, it recenters the motor angle data and converts it to radians.
 */

void convert_raw_can_data(motor_data_t *can_motor_data, uint16_t motor_id,
		uint8_t *rx_buffer) {
 8004ff8:	b5b0      	push	{r4, r5, r7, lr}
 8004ffa:	b08c      	sub	sp, #48	@ 0x30
 8004ffc:	af00      	add	r7, sp, #0
 8004ffe:	60f8      	str	r0, [r7, #12]
 8005000:	460b      	mov	r3, r1
 8005002:	607a      	str	r2, [r7, #4]
 8005004:	817b      	strh	r3, [r7, #10]
	uint16_t idnum = motor_id - 0x201;
 8005006:	897b      	ldrh	r3, [r7, #10]
 8005008:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 800500c:	857b      	strh	r3, [r7, #42]	@ 0x2a

	//if idnum > 24, it's not a DJI motor. Add in a seperate processing function if other CAN devices are added
	if (idnum > 24) {
 800500e:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8005010:	2b18      	cmp	r3, #24
 8005012:	f200 81a5 	bhi.w	8005360 <convert_raw_can_data+0x368>
		return;
	}
	motor_data_t *curr_motor = &can_motor_data[idnum];
 8005016:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 8005018:	4613      	mov	r3, r2
 800501a:	011b      	lsls	r3, r3, #4
 800501c:	1a9b      	subs	r3, r3, r2
 800501e:	011b      	lsls	r3, r3, #4
 8005020:	461a      	mov	r2, r3
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	4413      	add	r3, r2
 8005026:	627b      	str	r3, [r7, #36]	@ 0x24
	//motor must be initialised in motor_config.c first
	if (curr_motor->motor_type > 0) {
 8005028:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800502a:	789b      	ldrb	r3, [r3, #2]
 800502c:	2b00      	cmp	r3, #0
 800502e:	f000 8198 	beq.w	8005362 <convert_raw_can_data+0x36a>
		//convert the raw data back into the respective values
		curr_motor->id = motor_id;
 8005032:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005034:	897a      	ldrh	r2, [r7, #10]
 8005036:	801a      	strh	r2, [r3, #0]
		curr_motor->raw_data.angle[1] = curr_motor->raw_data.angle[0];
 8005038:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800503a:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800503e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005040:	80da      	strh	r2, [r3, #6]
		curr_motor->raw_data.angle[0] = (rx_buffer[0] << 8) | rx_buffer[1];
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	781b      	ldrb	r3, [r3, #0]
 8005046:	021b      	lsls	r3, r3, #8
 8005048:	b21a      	sxth	r2, r3
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	3301      	adds	r3, #1
 800504e:	781b      	ldrb	r3, [r3, #0]
 8005050:	b21b      	sxth	r3, r3
 8005052:	4313      	orrs	r3, r2
 8005054:	b21a      	sxth	r2, r3
 8005056:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005058:	809a      	strh	r2, [r3, #4]
		int16_t temp_rpm = (rx_buffer[2] << 8) | rx_buffer[3];
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	3302      	adds	r3, #2
 800505e:	781b      	ldrb	r3, [r3, #0]
 8005060:	021b      	lsls	r3, r3, #8
 8005062:	b21a      	sxth	r2, r3
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	3303      	adds	r3, #3
 8005068:	781b      	ldrb	r3, [r3, #0]
 800506a:	b21b      	sxth	r3, r3
 800506c:	4313      	orrs	r3, r2
 800506e:	847b      	strh	r3, [r7, #34]	@ 0x22
		curr_motor->raw_data.rpm = curr_motor->raw_data.rpm * SPEED_LPF
 8005070:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005072:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8005074:	811a      	strh	r2, [r3, #8]
				+ temp_rpm * (1 - SPEED_LPF);
		curr_motor->raw_data.torque =(rx_buffer[4] << 8) | rx_buffer[5];
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	3304      	adds	r3, #4
 800507a:	781b      	ldrb	r3, [r3, #0]
 800507c:	021b      	lsls	r3, r3, #8
 800507e:	b21a      	sxth	r2, r3
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	3305      	adds	r3, #5
 8005084:	781b      	ldrb	r3, [r3, #0]
 8005086:	b21b      	sxth	r3, r3
 8005088:	4313      	orrs	r3, r2
 800508a:	b21a      	sxth	r2, r3
 800508c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800508e:	815a      	strh	r2, [r3, #10]
		curr_motor->torque_data = ((double)curr_motor->raw_data.torque / 13000.0f)*1.5f;
 8005090:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005092:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8005096:	4618      	mov	r0, r3
 8005098:	f7fb fa44 	bl	8000524 <__aeabi_i2d>
 800509c:	a3bd      	add	r3, pc, #756	@ (adr r3, 8005394 <convert_raw_can_data+0x39c>)
 800509e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80050a2:	f7fb fbd3 	bl	800084c <__aeabi_ddiv>
 80050a6:	4602      	mov	r2, r0
 80050a8:	460b      	mov	r3, r1
 80050aa:	4610      	mov	r0, r2
 80050ac:	4619      	mov	r1, r3
 80050ae:	f04f 0200 	mov.w	r2, #0
 80050b2:	4bb1      	ldr	r3, [pc, #708]	@ (8005378 <convert_raw_can_data+0x380>)
 80050b4:	f7fb faa0 	bl	80005f8 <__aeabi_dmul>
 80050b8:	4602      	mov	r2, r0
 80050ba:	460b      	mov	r3, r1
 80050bc:	4610      	mov	r0, r2
 80050be:	4619      	mov	r1, r3
 80050c0:	f7fb fd92 	bl	8000be8 <__aeabi_d2f>
 80050c4:	4602      	mov	r2, r0
 80050c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050c8:	62da      	str	r2, [r3, #44]	@ 0x2c
		curr_motor->raw_data.temp = (rx_buffer[6]);
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	799a      	ldrb	r2, [r3, #6]
 80050ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050d0:	731a      	strb	r2, [r3, #12]
		curr_motor->last_time[1] = curr_motor->last_time[0];
 80050d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050d4:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
 80050d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050da:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
		curr_motor->last_time[0] = get_microseconds();
 80050de:	f7fd f86f 	bl	80021c0 <get_microseconds>
 80050e2:	4602      	mov	r2, r0
 80050e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050e6:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4

		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 80050ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050ec:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80050f0:	461a      	mov	r2, r3
				- curr_motor->raw_data.angle[1]) / 8192;
 80050f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050f4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80050f8:	1ad3      	subs	r3, r2, r3
		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 80050fa:	ee07 3a90 	vmov	s15, r3
 80050fe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005102:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 800537c <convert_raw_can_data+0x384>
 8005106:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800510a:	edc7 7a07 	vstr	s15, [r7, #28]
		float time_diff = (float) (curr_motor->last_time[0]
 800510e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005110:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
				- curr_motor->last_time[1]) / (float) (TIMER_FREQ * 60);
 8005114:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005116:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 800511a:	1ad3      	subs	r3, r2, r3
		float time_diff = (float) (curr_motor->last_time[0]
 800511c:	ee07 3a90 	vmov	s15, r3
 8005120:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8005124:	eddf 6a96 	vldr	s13, [pc, #600]	@ 8005380 <convert_raw_can_data+0x388>
 8005128:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800512c:	edc7 7a06 	vstr	s15, [r7, #24]
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 8005130:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005132:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8005136:	4618      	mov	r0, r3
 8005138:	f7fb fa06 	bl	8000548 <__aeabi_f2d>
				* 0.95 + (rds_passed * time_diff * 0.05);
 800513c:	a38a      	add	r3, pc, #552	@ (adr r3, 8005368 <convert_raw_can_data+0x370>)
 800513e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005142:	f7fb fa59 	bl	80005f8 <__aeabi_dmul>
 8005146:	4602      	mov	r2, r0
 8005148:	460b      	mov	r3, r1
 800514a:	4614      	mov	r4, r2
 800514c:	461d      	mov	r5, r3
 800514e:	ed97 7a07 	vldr	s14, [r7, #28]
 8005152:	edd7 7a06 	vldr	s15, [r7, #24]
 8005156:	ee67 7a27 	vmul.f32	s15, s14, s15
 800515a:	ee17 0a90 	vmov	r0, s15
 800515e:	f7fb f9f3 	bl	8000548 <__aeabi_f2d>
 8005162:	a383      	add	r3, pc, #524	@ (adr r3, 8005370 <convert_raw_can_data+0x378>)
 8005164:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005168:	f7fb fa46 	bl	80005f8 <__aeabi_dmul>
 800516c:	4602      	mov	r2, r0
 800516e:	460b      	mov	r3, r1
 8005170:	4620      	mov	r0, r4
 8005172:	4629      	mov	r1, r5
 8005174:	f7fb f88a 	bl	800028c <__adddf3>
 8005178:	4602      	mov	r2, r0
 800517a:	460b      	mov	r3, r1
 800517c:	4610      	mov	r0, r2
 800517e:	4619      	mov	r1, r3
 8005180:	f7fb fd32 	bl	8000be8 <__aeabi_d2f>
 8005184:	4602      	mov	r2, r0
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 8005186:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005188:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
		//process the angle data differently depending on the motor type to get radians in the
		//adj_angle value
		switch (curr_motor->motor_type) {
 800518c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800518e:	789b      	ldrb	r3, [r3, #2]
 8005190:	3b01      	subs	r3, #1
 8005192:	2b08      	cmp	r3, #8
 8005194:	d84d      	bhi.n	8005232 <convert_raw_can_data+0x23a>
 8005196:	a201      	add	r2, pc, #4	@ (adr r2, 800519c <convert_raw_can_data+0x1a4>)
 8005198:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800519c:	080051c1 	.word	0x080051c1
 80051a0:	080051e7 	.word	0x080051e7
 80051a4:	080051e7 	.word	0x080051e7
 80051a8:	08005233 	.word	0x08005233
 80051ac:	08005233 	.word	0x08005233
 80051b0:	08005233 	.word	0x08005233
 80051b4:	0800520d 	.word	0x0800520d
 80051b8:	0800520d 	.word	0x0800520d
 80051bc:	0800520d 	.word	0x0800520d
		case TYPE_GM6020:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051c2:	1d18      	adds	r0, r3, #4
 80051c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051c6:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 80051ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051cc:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051ce:	461a      	mov	r2, r3
 80051d0:	f000 f922 	bl	8005418 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 80051d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051d6:	1d1a      	adds	r2, r3, #4
 80051d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051da:	3398      	adds	r3, #152	@ 0x98
 80051dc:	4619      	mov	r1, r3
 80051de:	4610      	mov	r0, r2
 80051e0:	f000 f8dc 	bl	800539c <angle_offset>
			break;
 80051e4:	e026      	b.n	8005234 <convert_raw_can_data+0x23c>
		case TYPE_M2006:
		case TYPE_M3508:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051e8:	1d18      	adds	r0, r3, #4
 80051ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051ec:	f103 0198 	add.w	r1, r3, #152	@ 0x98
								curr_motor->last_time);
 80051f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051f2:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051f4:	461a      	mov	r2, r3
 80051f6:	f000 f90f 	bl	8005418 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 80051fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051fc:	1d1a      	adds	r2, r3, #4
 80051fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005200:	3398      	adds	r3, #152	@ 0x98
 8005202:	4619      	mov	r1, r3
 8005204:	4610      	mov	r0, r2
 8005206:	f000 f8c9 	bl	800539c <angle_offset>
			break;
 800520a:	e013      	b.n	8005234 <convert_raw_can_data+0x23c>
//					curr_motor->last_time);
			break;
		case TYPE_M2006_ANGLE:
		case TYPE_M3508_ANGLE:
		case TYPE_GM6020_720:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800520c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800520e:	1d18      	adds	r0, r3, #4
 8005210:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005212:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 8005216:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005218:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 800521a:	461a      	mov	r2, r3
 800521c:	f000 f8fc 	bl	8005418 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005220:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005222:	1d1a      	adds	r2, r3, #4
 8005224:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005226:	3398      	adds	r3, #152	@ 0x98
 8005228:	4619      	mov	r1, r3
 800522a:	4610      	mov	r0, r2
 800522c:	f000 f8b6 	bl	800539c <angle_offset>
			break;
 8005230:	e000      	b.n	8005234 <convert_raw_can_data+0x23c>
		default:
			break;
 8005232:	bf00      	nop

		}

		//initialise task switching variables
		BaseType_t xHigherPriorityTaskWoken, xResult;
		xHigherPriorityTaskWoken = pdFALSE;
 8005234:	2300      	movs	r3, #0
 8005236:	617b      	str	r3, [r7, #20]

		//set event group bits so that the tasks and PIDs only trigger upon updated data
		//also checks if the respective tasks are set to ready
		switch (idnum + 1) {
 8005238:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 800523a:	3301      	adds	r3, #1
 800523c:	3b05      	subs	r3, #5
 800523e:	2b0f      	cmp	r3, #15
 8005240:	d87c      	bhi.n	800533c <convert_raw_can_data+0x344>
 8005242:	a201      	add	r2, pc, #4	@ (adr r2, 8005248 <convert_raw_can_data+0x250>)
 8005244:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005248:	08005289 	.word	0x08005289
 800524c:	0800529d 	.word	0x0800529d
 8005250:	080052b1 	.word	0x080052b1
 8005254:	080052c5 	.word	0x080052c5
 8005258:	0800533d 	.word	0x0800533d
 800525c:	0800533d 	.word	0x0800533d
 8005260:	0800533d 	.word	0x0800533d
 8005264:	0800533d 	.word	0x0800533d
 8005268:	0800533d 	.word	0x0800533d
 800526c:	0800533d 	.word	0x0800533d
 8005270:	080052ed 	.word	0x080052ed
 8005274:	080052d9 	.word	0x080052d9
 8005278:	08005301 	.word	0x08005301
 800527c:	08005315 	.word	0x08005315
 8005280:	0800533d 	.word	0x0800533d
 8005284:	08005329 	.word	0x08005329
#ifndef CHASSIS_MCU
		case FR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b1000,
 8005288:	4b3e      	ldr	r3, [pc, #248]	@ (8005384 <convert_raw_can_data+0x38c>)
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	f107 0214 	add.w	r2, r7, #20
 8005290:	2108      	movs	r1, #8
 8005292:	4618      	mov	r0, r3
 8005294:	f011 ff82 	bl	801719c <xEventGroupSetBitsFromISR>
 8005298:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 800529a:	e052      	b.n	8005342 <convert_raw_can_data+0x34a>
		case FL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0100,
 800529c:	4b39      	ldr	r3, [pc, #228]	@ (8005384 <convert_raw_can_data+0x38c>)
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	f107 0214 	add.w	r2, r7, #20
 80052a4:	2104      	movs	r1, #4
 80052a6:	4618      	mov	r0, r3
 80052a8:	f011 ff78 	bl	801719c <xEventGroupSetBitsFromISR>
 80052ac:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052ae:	e048      	b.n	8005342 <convert_raw_can_data+0x34a>
		case BL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0010,
 80052b0:	4b34      	ldr	r3, [pc, #208]	@ (8005384 <convert_raw_can_data+0x38c>)
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	f107 0214 	add.w	r2, r7, #20
 80052b8:	2102      	movs	r1, #2
 80052ba:	4618      	mov	r0, r3
 80052bc:	f011 ff6e 	bl	801719c <xEventGroupSetBitsFromISR>
 80052c0:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052c2:	e03e      	b.n	8005342 <convert_raw_can_data+0x34a>
		case BR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0001,
 80052c4:	4b2f      	ldr	r3, [pc, #188]	@ (8005384 <convert_raw_can_data+0x38c>)
 80052c6:	681b      	ldr	r3, [r3, #0]
 80052c8:	f107 0214 	add.w	r2, r7, #20
 80052cc:	2101      	movs	r1, #1
 80052ce:	4618      	mov	r0, r3
 80052d0:	f011 ff64 	bl	801719c <xEventGroupSetBitsFromISR>
 80052d4:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052d6:	e034      	b.n	8005342 <convert_raw_can_data+0x34a>
#endif
		case LFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b010,
 80052d8:	4b2b      	ldr	r3, [pc, #172]	@ (8005388 <convert_raw_can_data+0x390>)
 80052da:	681b      	ldr	r3, [r3, #0]
 80052dc:	f107 0214 	add.w	r2, r7, #20
 80052e0:	2102      	movs	r1, #2
 80052e2:	4618      	mov	r0, r3
 80052e4:	f011 ff5a 	bl	801719c <xEventGroupSetBitsFromISR>
 80052e8:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052ea:	e02a      	b.n	8005342 <convert_raw_can_data+0x34a>
		case RFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b001,
 80052ec:	4b26      	ldr	r3, [pc, #152]	@ (8005388 <convert_raw_can_data+0x390>)
 80052ee:	681b      	ldr	r3, [r3, #0]
 80052f0:	f107 0214 	add.w	r2, r7, #20
 80052f4:	2101      	movs	r1, #1
 80052f6:	4618      	mov	r0, r3
 80052f8:	f011 ff50 	bl	801719c <xEventGroupSetBitsFromISR>
 80052fc:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052fe:	e020      	b.n	8005342 <convert_raw_can_data+0x34a>
		case FEEDER_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b100,
 8005300:	4b21      	ldr	r3, [pc, #132]	@ (8005388 <convert_raw_can_data+0x390>)
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	f107 0214 	add.w	r2, r7, #20
 8005308:	2104      	movs	r1, #4
 800530a:	4618      	mov	r0, r3
 800530c:	f011 ff46 	bl	801719c <xEventGroupSetBitsFromISR>
 8005310:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8005312:	e016      	b.n	8005342 <convert_raw_can_data+0x34a>
		case PITCH_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b01,
 8005314:	4b1d      	ldr	r3, [pc, #116]	@ (800538c <convert_raw_can_data+0x394>)
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	f107 0214 	add.w	r2, r7, #20
 800531c:	2101      	movs	r1, #1
 800531e:	4618      	mov	r0, r3
 8005320:	f011 ff3c 	bl	801719c <xEventGroupSetBitsFromISR>
 8005324:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8005326:	e00c      	b.n	8005342 <convert_raw_can_data+0x34a>
		case YAW_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b10,
 8005328:	4b18      	ldr	r3, [pc, #96]	@ (800538c <convert_raw_can_data+0x394>)
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	f107 0214 	add.w	r2, r7, #20
 8005330:	2102      	movs	r1, #2
 8005332:	4618      	mov	r0, r3
 8005334:	f011 ff32 	bl	801719c <xEventGroupSetBitsFromISR>
 8005338:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 800533a:	e002      	b.n	8005342 <convert_raw_can_data+0x34a>
		default:
			xResult = pdFAIL;
 800533c:	2300      	movs	r3, #0
 800533e:	62fb      	str	r3, [r7, #44]	@ 0x2c
			idnum = idnum;
			//error handler
			break;
 8005340:	bf00      	nop
		}

		//switches tasks if a higher priority task is ready.
		//required because the function is in an ISR
		if (xResult != pdFAIL) {
 8005342:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8005344:	2b00      	cmp	r3, #0
 8005346:	d00c      	beq.n	8005362 <convert_raw_can_data+0x36a>
			portYIELD_FROM_ISR(xHigherPriorityTaskWoken); //forces current task to yield if higher priority task is called
 8005348:	697b      	ldr	r3, [r7, #20]
 800534a:	2b00      	cmp	r3, #0
 800534c:	d009      	beq.n	8005362 <convert_raw_can_data+0x36a>
 800534e:	4b10      	ldr	r3, [pc, #64]	@ (8005390 <convert_raw_can_data+0x398>)
 8005350:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8005354:	601a      	str	r2, [r3, #0]
 8005356:	f3bf 8f4f 	dsb	sy
 800535a:	f3bf 8f6f 	isb	sy
 800535e:	e000      	b.n	8005362 <convert_raw_can_data+0x36a>
		return;
 8005360:	bf00      	nop
		}
	} else {
		//this is a useless statement so that it is possible to set a breakpoint here lol
		//error handler
	}
}
 8005362:	3730      	adds	r7, #48	@ 0x30
 8005364:	46bd      	mov	sp, r7
 8005366:	bdb0      	pop	{r4, r5, r7, pc}
 8005368:	66666666 	.word	0x66666666
 800536c:	3fee6666 	.word	0x3fee6666
 8005370:	9999999a 	.word	0x9999999a
 8005374:	3fa99999 	.word	0x3fa99999
 8005378:	3ff80000 	.word	0x3ff80000
 800537c:	46000000 	.word	0x46000000
 8005380:	4ab71b00 	.word	0x4ab71b00
 8005384:	200037ac 	.word	0x200037ac
 8005388:	200037b0 	.word	0x200037b0
 800538c:	200037a8 	.word	0x200037a8
 8005390:	e000ed04 	.word	0xe000ed04
 8005394:	00000000 	.word	0x00000000
 8005398:	40c96400 	.word	0x40c96400

0800539c <angle_offset>:
}

/**
 * Centers the raw motor angle to between -Pi to +Pi
 */
void angle_offset(raw_data_t *motor_data, angle_data_t *angle_data) {
 800539c:	b480      	push	{r7}
 800539e:	b085      	sub	sp, #20
 80053a0:	af00      	add	r7, sp, #0
 80053a2:	6078      	str	r0, [r7, #4]
 80053a4:	6039      	str	r1, [r7, #0]
	int32_t temp_ang = 0;
 80053a6:	2300      	movs	r3, #0
 80053a8:	60fb      	str	r3, [r7, #12]
//	}
//	while (angle_data->ticks < angle_data->min_ticks) {
//		angle_data->ticks += angle_data->tick_range;
//	}

	temp_ang = angle_data->ticks - angle_data->center_ang;
 80053aa:	683b      	ldr	r3, [r7, #0]
 80053ac:	681a      	ldr	r2, [r3, #0]
 80053ae:	683b      	ldr	r3, [r7, #0]
 80053b0:	685b      	ldr	r3, [r3, #4]
 80053b2:	1ad3      	subs	r3, r2, r3
 80053b4:	60fb      	str	r3, [r7, #12]
	if (temp_ang > angle_data->max_ticks) {
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	68db      	ldr	r3, [r3, #12]
 80053ba:	68fa      	ldr	r2, [r7, #12]
 80053bc:	429a      	cmp	r2, r3
 80053be:	dd05      	ble.n	80053cc <angle_offset+0x30>
		temp_ang -= angle_data->tick_range;
 80053c0:	683b      	ldr	r3, [r7, #0]
 80053c2:	691b      	ldr	r3, [r3, #16]
 80053c4:	68fa      	ldr	r2, [r7, #12]
 80053c6:	1ad3      	subs	r3, r2, r3
 80053c8:	60fb      	str	r3, [r7, #12]
 80053ca:	e009      	b.n	80053e0 <angle_offset+0x44>
	} else if (temp_ang < angle_data->min_ticks) {
 80053cc:	683b      	ldr	r3, [r7, #0]
 80053ce:	689b      	ldr	r3, [r3, #8]
 80053d0:	68fa      	ldr	r2, [r7, #12]
 80053d2:	429a      	cmp	r2, r3
 80053d4:	da04      	bge.n	80053e0 <angle_offset+0x44>
		temp_ang += angle_data->tick_range;
 80053d6:	683b      	ldr	r3, [r7, #0]
 80053d8:	691b      	ldr	r3, [r3, #16]
 80053da:	68fa      	ldr	r2, [r7, #12]
 80053dc:	4413      	add	r3, r2
 80053de:	60fb      	str	r3, [r7, #12]
	}
//	angle_data->ticks = temp_ang;
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 80053e0:	68fb      	ldr	r3, [r7, #12]
 80053e2:	ee07 3a90 	vmov	s15, r3
 80053e6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80053ea:	683b      	ldr	r3, [r7, #0]
 80053ec:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80053f0:	ee67 6a27 	vmul.f32	s13, s14, s15
			/ angle_data->tick_range;
 80053f4:	683b      	ldr	r3, [r7, #0]
 80053f6:	691b      	ldr	r3, [r3, #16]
 80053f8:	ee07 3a90 	vmov	s15, r3
 80053fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005400:	eec6 7a87 	vdiv.f32	s15, s13, s14
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 8005404:	683b      	ldr	r3, [r7, #0]
 8005406:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34
}
 800540a:	bf00      	nop
 800540c:	3714      	adds	r7, #20
 800540e:	46bd      	mov	sp, r7
 8005410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005414:	4770      	bx	lr
	...

08005418 <motor_calc_odometry>:

void motor_calc_odometry(raw_data_t *motor_data, angle_data_t *angle_data,
		uint32_t feedback_times[]) {
 8005418:	b480      	push	{r7}
 800541a:	b087      	sub	sp, #28
 800541c:	af00      	add	r7, sp, #0
 800541e:	60f8      	str	r0, [r7, #12]
 8005420:	60b9      	str	r1, [r7, #8]
 8005422:	607a      	str	r2, [r7, #4]
	int16_t abs_angle_diff;
	abs_angle_diff = motor_data->angle[0] - motor_data->angle[1];
 8005424:	68fb      	ldr	r3, [r7, #12]
 8005426:	f9b3 3000 	ldrsh.w	r3, [r3]
 800542a:	b29a      	uxth	r2, r3
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8005432:	b29b      	uxth	r3, r3
 8005434:	1ad3      	subs	r3, r2, r3
 8005436:	b29b      	uxth	r3, r3
 8005438:	82fb      	strh	r3, [r7, #22]
	if (angle_data->init == 0){
 800543a:	68bb      	ldr	r3, [r7, #8]
 800543c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005440:	2b00      	cmp	r3, #0
 8005442:	d129      	bne.n	8005498 <motor_calc_odometry+0x80>
		angle_data->ticks = motor_data->angle[0];
 8005444:	68fb      	ldr	r3, [r7, #12]
 8005446:	f9b3 3000 	ldrsh.w	r3, [r3]
 800544a:	461a      	mov	r2, r3
 800544c:	68bb      	ldr	r3, [r7, #8]
 800544e:	601a      	str	r2, [r3, #0]
		if (angle_data->ticks > angle_data->max_ticks) {
 8005450:	68bb      	ldr	r3, [r7, #8]
 8005452:	681a      	ldr	r2, [r3, #0]
 8005454:	68bb      	ldr	r3, [r7, #8]
 8005456:	68db      	ldr	r3, [r3, #12]
 8005458:	429a      	cmp	r2, r3
 800545a:	dd06      	ble.n	800546a <motor_calc_odometry+0x52>
			angle_data->ticks -= angle_data->tick_range;
 800545c:	68bb      	ldr	r3, [r7, #8]
 800545e:	681a      	ldr	r2, [r3, #0]
 8005460:	68bb      	ldr	r3, [r7, #8]
 8005462:	691b      	ldr	r3, [r3, #16]
 8005464:	1ad2      	subs	r2, r2, r3
 8005466:	68bb      	ldr	r3, [r7, #8]
 8005468:	601a      	str	r2, [r3, #0]
		}
		if (angle_data->ticks < angle_data->min_ticks) {
 800546a:	68bb      	ldr	r3, [r7, #8]
 800546c:	681a      	ldr	r2, [r3, #0]
 800546e:	68bb      	ldr	r3, [r7, #8]
 8005470:	689b      	ldr	r3, [r3, #8]
 8005472:	429a      	cmp	r2, r3
 8005474:	da06      	bge.n	8005484 <motor_calc_odometry+0x6c>
			angle_data->ticks += angle_data->tick_range;
 8005476:	68bb      	ldr	r3, [r7, #8]
 8005478:	681a      	ldr	r2, [r3, #0]
 800547a:	68bb      	ldr	r3, [r7, #8]
 800547c:	691b      	ldr	r3, [r3, #16]
 800547e:	441a      	add	r2, r3
 8005480:	68bb      	ldr	r3, [r7, #8]
 8005482:	601a      	str	r2, [r3, #0]
		}
		motor_data->angle[1] = motor_data->angle[0];
 8005484:	68fb      	ldr	r3, [r7, #12]
 8005486:	f9b3 2000 	ldrsh.w	r2, [r3]
 800548a:	68fb      	ldr	r3, [r7, #12]
 800548c:	805a      	strh	r2, [r3, #2]
		angle_data->init = 1;
 800548e:	68bb      	ldr	r3, [r7, #8]
 8005490:	2201      	movs	r2, #1
 8005492:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
		return;
 8005496:	e06b      	b.n	8005570 <motor_calc_odometry+0x158>
	}
	angle_data->abs_ang_diff = abs_angle_diff;
 8005498:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 800549c:	68bb      	ldr	r3, [r7, #8]
 800549e:	615a      	str	r2, [r3, #20]

	//generally the motor won't exceed half a turn between each feedback
	if (abs_angle_diff > 4096) {
 80054a0:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054a4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80054a8:	dd0a      	ble.n	80054c0 <motor_calc_odometry+0xa8>
		++angle_data->rev;
 80054aa:	68bb      	ldr	r3, [r7, #8]
 80054ac:	699b      	ldr	r3, [r3, #24]
 80054ae:	1c5a      	adds	r2, r3, #1
 80054b0:	68bb      	ldr	r3, [r7, #8]
 80054b2:	619a      	str	r2, [r3, #24]
		abs_angle_diff -= 8192;
 80054b4:	8afb      	ldrh	r3, [r7, #22]
 80054b6:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 80054ba:	b29b      	uxth	r3, r3
 80054bc:	82fb      	strh	r3, [r7, #22]
 80054be:	e00e      	b.n	80054de <motor_calc_odometry+0xc6>
	} else if (abs_angle_diff < -4096) {
 80054c0:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054c4:	f513 5f80 	cmn.w	r3, #4096	@ 0x1000
 80054c8:	da09      	bge.n	80054de <motor_calc_odometry+0xc6>
		--angle_data->rev;
 80054ca:	68bb      	ldr	r3, [r7, #8]
 80054cc:	699b      	ldr	r3, [r3, #24]
 80054ce:	1e5a      	subs	r2, r3, #1
 80054d0:	68bb      	ldr	r3, [r7, #8]
 80054d2:	619a      	str	r2, [r3, #24]
		abs_angle_diff += 8192;
 80054d4:	8afb      	ldrh	r3, [r7, #22]
 80054d6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80054da:	b29b      	uxth	r3, r3
 80054dc:	82fb      	strh	r3, [r7, #22]
	}

	uint16_t gear_ticks = 8192 * angle_data->gearbox_ratio;
 80054de:	68bb      	ldr	r3, [r7, #8]
 80054e0:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 80054e4:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 800557c <motor_calc_odometry+0x164>
 80054e8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80054ec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80054f0:	ee17 3a90 	vmov	r3, s15
 80054f4:	82bb      	strh	r3, [r7, #20]
	angle_data->ticks += abs_angle_diff;
 80054f6:	68bb      	ldr	r3, [r7, #8]
 80054f8:	681a      	ldr	r2, [r3, #0]
 80054fa:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054fe:	441a      	add	r2, r3
 8005500:	68bb      	ldr	r3, [r7, #8]
 8005502:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 8005504:	e006      	b.n	8005514 <motor_calc_odometry+0xfc>
		angle_data->ticks -= angle_data->tick_range;
 8005506:	68bb      	ldr	r3, [r7, #8]
 8005508:	681a      	ldr	r2, [r3, #0]
 800550a:	68bb      	ldr	r3, [r7, #8]
 800550c:	691b      	ldr	r3, [r3, #16]
 800550e:	1ad2      	subs	r2, r2, r3
 8005510:	68bb      	ldr	r3, [r7, #8]
 8005512:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 8005514:	68bb      	ldr	r3, [r7, #8]
 8005516:	681a      	ldr	r2, [r3, #0]
 8005518:	68bb      	ldr	r3, [r7, #8]
 800551a:	68db      	ldr	r3, [r3, #12]
 800551c:	429a      	cmp	r2, r3
 800551e:	dcf2      	bgt.n	8005506 <motor_calc_odometry+0xee>
	}
	while (angle_data->ticks < angle_data->min_ticks) {
 8005520:	e006      	b.n	8005530 <motor_calc_odometry+0x118>
		angle_data->ticks += angle_data->tick_range;
 8005522:	68bb      	ldr	r3, [r7, #8]
 8005524:	681a      	ldr	r2, [r3, #0]
 8005526:	68bb      	ldr	r3, [r7, #8]
 8005528:	691b      	ldr	r3, [r3, #16]
 800552a:	441a      	add	r2, r3
 800552c:	68bb      	ldr	r3, [r7, #8]
 800552e:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks < angle_data->min_ticks) {
 8005530:	68bb      	ldr	r3, [r7, #8]
 8005532:	681a      	ldr	r2, [r3, #0]
 8005534:	68bb      	ldr	r3, [r7, #8]
 8005536:	689b      	ldr	r3, [r3, #8]
 8005538:	429a      	cmp	r2, r3
 800553a:	dbf2      	blt.n	8005522 <motor_calc_odometry+0x10a>
	}

	angle_data->dist = angle_data->ticks * angle_data->wheel_circ / gear_ticks;
 800553c:	68bb      	ldr	r3, [r7, #8]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	ee07 3a90 	vmov	s15, r3
 8005544:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005548:	68bb      	ldr	r3, [r7, #8]
 800554a:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 800554e:	ee67 6a27 	vmul.f32	s13, s14, s15
 8005552:	8abb      	ldrh	r3, [r7, #20]
 8005554:	ee07 3a90 	vmov	s15, r3
 8005558:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800555c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005560:	68bb      	ldr	r3, [r7, #8]
 8005562:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
	motor_data->angle[1] = motor_data->angle[0];
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	f9b3 2000 	ldrsh.w	r2, [r3]
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	805a      	strh	r2, [r3, #2]
}
 8005570:	371c      	adds	r7, #28
 8005572:	46bd      	mov	sp, r7
 8005574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005578:	4770      	bx	lr
 800557a:	bf00      	nop
 800557c:	46000000 	.word	0x46000000

08005580 <control_input_task>:
uint8_t g_safety_toggle = ARM_SWITCH;
uint8_t launcher_safety_toggle = ARM_SWITCH;



void control_input_task(void *argument) {
 8005580:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005584:	b088      	sub	sp, #32
 8005586:	af00      	add	r7, sp, #0
 8005588:	60f8      	str	r0, [r7, #12]
	TickType_t start_time;
	control_reset();
 800558a:	f000 f959 	bl	8005840 <control_reset>
	chassis_yaw_pid_init();
 800558e:	f000 fb47 	bl	8005c20 <chassis_yaw_pid_init>
	gimbal_ctrl_data.imu_mode = GIMBAL_MODE;
 8005592:	4b80      	ldr	r3, [pc, #512]	@ (8005794 <control_input_task+0x214>)
 8005594:	2201      	movs	r2, #1
 8005596:	731a      	strb	r2, [r3, #12]
	aimbot_pid_init();
 8005598:	f000 fee0 	bl	800635c <aimbot_pid_init>
	dbus_remote_start();
 800559c:	f7fb ffa4 	bl	80014e8 <dbus_remote_start>
	gear_speed.curr_gear = GEAR_DEFAULT;
 80055a0:	4b7d      	ldr	r3, [pc, #500]	@ (8005798 <control_input_task+0x218>)
 80055a2:	2203      	movs	r2, #3
 80055a4:	701a      	strb	r2, [r3, #0]
	set_gear();
 80055a6:	f000 fabf 	bl	8005b28 <set_gear>
	g_safety_toggle = 1;
 80055aa:	4b7c      	ldr	r3, [pc, #496]	@ (800579c <control_input_task+0x21c>)
 80055ac:	2201      	movs	r2, #1
 80055ae:	701a      	strb	r2, [r3, #0]
	vTaskDelay(100);
 80055b0:	2064      	movs	r0, #100	@ 0x64
 80055b2:	f012 feeb 	bl	801838c <vTaskDelay>
	uint8_t rc_check;
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 80055b6:	e01a      	b.n	80055ee <control_input_task+0x6e>
		uint8_t temp_msg;
		temp_msg = not_ok;
 80055b8:	2302      	movs	r3, #2
 80055ba:	74fb      	strb	r3, [r7, #19]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80055bc:	4b78      	ldr	r3, [pc, #480]	@ (80057a0 <control_input_task+0x220>)
 80055be:	6818      	ldr	r0, [r3, #0]
 80055c0:	f107 0113 	add.w	r1, r7, #19
 80055c4:	2300      	movs	r3, #0
 80055c6:	2200      	movs	r2, #0
 80055c8:	f011 fff6 	bl	80175b8 <xQueueGenericSend>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80055cc:	21c8      	movs	r1, #200	@ 0xc8
 80055ce:	2001      	movs	r0, #1
 80055d0:	f013 fcac 	bl	8018f2c <ulTaskNotifyTake>
 80055d4:	4603      	mov	r3, r0
 80055d6:	76fb      	strb	r3, [r7, #27]
		HAL_UART_DMAStop(&DBUS_UART);
 80055d8:	4872      	ldr	r0, [pc, #456]	@ (80057a4 <control_input_task+0x224>)
 80055da:	f00c ffed 	bl	80125b8 <HAL_UART_DMAStop>
		dbus_remote_start();
 80055de:	f7fb ff83 	bl	80014e8 <dbus_remote_start>
		if (rc_check){
 80055e2:	7efb      	ldrb	r3, [r7, #27]
 80055e4:	2b00      	cmp	r3, #0
 80055e6:	d002      	beq.n	80055ee <control_input_task+0x6e>
			vTaskDelay(200);
 80055e8:	20c8      	movs	r0, #200	@ 0xc8
 80055ea:	f012 fecf 	bl	801838c <vTaskDelay>
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 80055ee:	4b6e      	ldr	r3, [pc, #440]	@ (80057a8 <control_input_task+0x228>)
 80055f0:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80055f4:	4618      	mov	r0, r3
 80055f6:	f7fa ff95 	bl	8000524 <__aeabi_i2d>
 80055fa:	4602      	mov	r2, r0
 80055fc:	460b      	mov	r3, r1
 80055fe:	4690      	mov	r8, r2
 8005600:	f023 4900 	bic.w	r9, r3, #2147483648	@ 0x80000000
 8005604:	f04f 0200 	mov.w	r2, #0
 8005608:	4b68      	ldr	r3, [pc, #416]	@ (80057ac <control_input_task+0x22c>)
 800560a:	4640      	mov	r0, r8
 800560c:	4649      	mov	r1, r9
 800560e:	f7fb fa83 	bl	8000b18 <__aeabi_dcmpgt>
 8005612:	4603      	mov	r3, r0
 8005614:	2b00      	cmp	r3, #0
 8005616:	d1cf      	bne.n	80055b8 <control_input_task+0x38>
 8005618:	4b63      	ldr	r3, [pc, #396]	@ (80057a8 <control_input_task+0x228>)
 800561a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800561e:	4618      	mov	r0, r3
 8005620:	f7fa ff80 	bl	8000524 <__aeabi_i2d>
 8005624:	4602      	mov	r2, r0
 8005626:	460b      	mov	r3, r1
 8005628:	4692      	mov	sl, r2
 800562a:	f023 4b00 	bic.w	fp, r3, #2147483648	@ 0x80000000
 800562e:	f04f 0200 	mov.w	r2, #0
 8005632:	4b5e      	ldr	r3, [pc, #376]	@ (80057ac <control_input_task+0x22c>)
 8005634:	4650      	mov	r0, sl
 8005636:	4659      	mov	r1, fp
 8005638:	f7fb fa6e 	bl	8000b18 <__aeabi_dcmpgt>
 800563c:	4603      	mov	r3, r0
 800563e:	2b00      	cmp	r3, #0
 8005640:	d1ba      	bne.n	80055b8 <control_input_task+0x38>
 8005642:	4b59      	ldr	r3, [pc, #356]	@ (80057a8 <control_input_task+0x228>)
 8005644:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8005648:	4618      	mov	r0, r3
 800564a:	f7fa ff6b 	bl	8000524 <__aeabi_i2d>
 800564e:	4602      	mov	r2, r0
 8005650:	460b      	mov	r3, r1
 8005652:	603a      	str	r2, [r7, #0]
 8005654:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005658:	607b      	str	r3, [r7, #4]
 800565a:	f04f 0200 	mov.w	r2, #0
 800565e:	4b53      	ldr	r3, [pc, #332]	@ (80057ac <control_input_task+0x22c>)
 8005660:	e9d7 0100 	ldrd	r0, r1, [r7]
 8005664:	f7fb fa58 	bl	8000b18 <__aeabi_dcmpgt>
 8005668:	4603      	mov	r3, r0
 800566a:	2b00      	cmp	r3, #0
 800566c:	d1a4      	bne.n	80055b8 <control_input_task+0x38>
 800566e:	4b4e      	ldr	r3, [pc, #312]	@ (80057a8 <control_input_task+0x228>)
 8005670:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005674:	4618      	mov	r0, r3
 8005676:	f7fa ff55 	bl	8000524 <__aeabi_i2d>
 800567a:	4602      	mov	r2, r0
 800567c:	460b      	mov	r3, r1
 800567e:	4614      	mov	r4, r2
 8005680:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 8005684:	f04f 0200 	mov.w	r2, #0
 8005688:	4b48      	ldr	r3, [pc, #288]	@ (80057ac <control_input_task+0x22c>)
 800568a:	4620      	mov	r0, r4
 800568c:	4629      	mov	r1, r5
 800568e:	f7fb fa43 	bl	8000b18 <__aeabi_dcmpgt>
 8005692:	4603      	mov	r3, r0
 8005694:	2b00      	cmp	r3, #0
 8005696:	d18f      	bne.n	80055b8 <control_input_task+0x38>
		}
	}
	g_safety_toggle = ARM_SWITCH;
 8005698:	4b40      	ldr	r3, [pc, #256]	@ (800579c <control_input_task+0x21c>)
 800569a:	2201      	movs	r2, #1
 800569c:	701a      	strb	r2, [r3, #0]

	uint32_t last_song = 0;
 800569e:	2300      	movs	r3, #0
 80056a0:	61fb      	str	r3, [r7, #28]
	while (1) {
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80056a2:	21c8      	movs	r1, #200	@ 0xc8
 80056a4:	2001      	movs	r0, #1
 80056a6:	f013 fc41 	bl	8018f2c <ulTaskNotifyTake>
 80056aa:	4603      	mov	r3, r0
 80056ac:	76fb      	strb	r3, [r7, #27]
		if (rc_check) {
 80056ae:	7efb      	ldrb	r3, [r7, #27]
 80056b0:	2b00      	cmp	r3, #0
 80056b2:	d04c      	beq.n	800574e <control_input_task+0x1ce>
			status_led(1, on_led);
 80056b4:	2100      	movs	r1, #0
 80056b6:	2001      	movs	r0, #1
 80056b8:	f7fc fc7e 	bl	8001fb8 <status_led>
			start_time = xTaskGetTickCount();
 80056bc:	f012 ffba 	bl	8018634 <xTaskGetTickCount>
 80056c0:	4603      	mov	r3, r0
 80056c2:	617b      	str	r3, [r7, #20]
			if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 80056c4:	4b38      	ldr	r3, [pc, #224]	@ (80057a8 <control_input_task+0x228>)
 80056c6:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80056ca:	2b01      	cmp	r3, #1
 80056cc:	d123      	bne.n	8005716 <control_input_task+0x196>

				if ((g_remote_cmd.left_switch == ge_LSW_UNSAFE) && (HAL_GetTick() - last_song > 5000)){
 80056ce:	4b36      	ldr	r3, [pc, #216]	@ (80057a8 <control_input_task+0x228>)
 80056d0:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80056d4:	2b01      	cmp	r3, #1
 80056d6:	d10d      	bne.n	80056f4 <control_input_task+0x174>
 80056d8:	f005 fc92 	bl	800b000 <HAL_GetTick>
 80056dc:	4602      	mov	r2, r0
 80056de:	69fb      	ldr	r3, [r7, #28]
 80056e0:	1ad3      	subs	r3, r2, r3
 80056e2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80056e6:	4293      	cmp	r3, r2
 80056e8:	d904      	bls.n	80056f4 <control_input_task+0x174>
					uint8_t temp_msg;
					last_song = HAL_GetTick();
 80056ea:	f005 fc89 	bl	800b000 <HAL_GetTick>
 80056ee:	61f8      	str	r0, [r7, #28]
					temp_msg = song;
 80056f0:	2300      	movs	r3, #0
 80056f2:	76bb      	strb	r3, [r7, #26]
//					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
				}
				laser_on();
 80056f4:	f7fb ff9c 	bl	8001630 <laser_on>
				control_mode_change(g_remote_cmd.side_dial);
 80056f8:	4b2b      	ldr	r3, [pc, #172]	@ (80057a8 <control_input_task+0x228>)
 80056fa:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80056fe:	4618      	mov	r0, r3
 8005700:	f000 f8d4 	bl	80058ac <control_mode_change>
				g_safety_toggle = 0;
 8005704:	4b25      	ldr	r3, [pc, #148]	@ (800579c <control_input_task+0x21c>)
 8005706:	2200      	movs	r2, #0
 8005708:	701a      	strb	r2, [r3, #0]
				launcher_safety_toggle = 0;
 800570a:	4b29      	ldr	r3, [pc, #164]	@ (80057b0 <control_input_task+0x230>)
 800570c:	2200      	movs	r2, #0
 800570e:	701a      	strb	r2, [r3, #0]
				control_reset();
 8005710:	f000 f896 	bl	8005840 <control_reset>
 8005714:	e037      	b.n	8005786 <control_input_task+0x206>
			} else {

				switch (control_mode) {
 8005716:	4b27      	ldr	r3, [pc, #156]	@ (80057b4 <control_input_task+0x234>)
 8005718:	781b      	ldrb	r3, [r3, #0]
 800571a:	2b01      	cmp	r3, #1
 800571c:	d002      	beq.n	8005724 <control_input_task+0x1a4>
 800571e:	2b02      	cmp	r3, #2
 8005720:	d008      	beq.n	8005734 <control_input_task+0x1b4>
					break;
					;
#endif

				default:
					break;
 8005722:	e00f      	b.n	8005744 <control_input_task+0x1c4>
					keyboard_gear_shifter(&gear_speed);
 8005724:	481c      	ldr	r0, [pc, #112]	@ (8005798 <control_input_task+0x218>)
 8005726:	f000 fa9f 	bl	8005c68 <keyboard_gear_shifter>
					set_gear();
 800572a:	f000 f9fd 	bl	8005b28 <set_gear>
					keyboard_control_input();
 800572e:	f000 fa91 	bl	8005c54 <keyboard_control_input>
					break;
 8005732:	e007      	b.n	8005744 <control_input_task+0x1c4>
					remote_gear_shifter(&gear_speed);
 8005734:	4818      	ldr	r0, [pc, #96]	@ (8005798 <control_input_task+0x218>)
 8005736:	f000 fc75 	bl	8006024 <remote_gear_shifter>
					set_gear();
 800573a:	f000 f9f5 	bl	8005b28 <set_gear>
					remote_control_input();
 800573e:	f000 fc67 	bl	8006010 <remote_control_input>
					break;
 8005742:	bf00      	nop

				}
				status_led(1, off_led);
 8005744:	2101      	movs	r1, #1
 8005746:	2001      	movs	r0, #1
 8005748:	f7fc fc36 	bl	8001fb8 <status_led>
 800574c:	e01b      	b.n	8005786 <control_input_task+0x206>
			}
		} else {
			//restart remote uart
			if (HAL_GetTick() - g_remote_cmd.last_time > 100) {
 800574e:	f005 fc57 	bl	800b000 <HAL_GetTick>
 8005752:	4602      	mov	r2, r0
 8005754:	4b14      	ldr	r3, [pc, #80]	@ (80057a8 <control_input_task+0x228>)
 8005756:	6a1b      	ldr	r3, [r3, #32]
 8005758:	1ad3      	subs	r3, r2, r3
 800575a:	2b64      	cmp	r3, #100	@ 0x64
 800575c:	d909      	bls.n	8005772 <control_input_task+0x1f2>
				HAL_UART_DMAStop(&DBUS_UART);
 800575e:	4811      	ldr	r0, [pc, #68]	@ (80057a4 <control_input_task+0x224>)
 8005760:	f00c ff2a 	bl	80125b8 <HAL_UART_DMAStop>
				dbus_remote_start();
 8005764:	f7fb fec0 	bl	80014e8 <dbus_remote_start>
				g_remote_cmd.last_time = HAL_GetTick();
 8005768:	f005 fc4a 	bl	800b000 <HAL_GetTick>
 800576c:	4603      	mov	r3, r0
 800576e:	4a0e      	ldr	r2, [pc, #56]	@ (80057a8 <control_input_task+0x228>)
 8005770:	6213      	str	r3, [r2, #32]
			}
			kill_can();
 8005772:	f004 fb1d 	bl	8009db0 <kill_can>
			control_reset();
 8005776:	f000 f863 	bl	8005840 <control_reset>
			launcher_safety_toggle = LAUNCHER_SAFETY;
 800577a:	4b0d      	ldr	r3, [pc, #52]	@ (80057b0 <control_input_task+0x230>)
 800577c:	2200      	movs	r2, #0
 800577e:	701a      	strb	r2, [r3, #0]
			g_safety_toggle = 1;
 8005780:	4b06      	ldr	r3, [pc, #24]	@ (800579c <control_input_task+0x21c>)
 8005782:	2201      	movs	r2, #1
 8005784:	701a      	strb	r2, [r3, #0]

		}
		vTaskDelayUntil(&start_time, CONTROL_DELAY);
 8005786:	f107 0314 	add.w	r3, r7, #20
 800578a:	2102      	movs	r1, #2
 800578c:	4618      	mov	r0, r3
 800578e:	f012 fd7d 	bl	801828c <vTaskDelayUntil>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8005792:	e786      	b.n	80056a2 <control_input_task+0x122>
 8005794:	200034e8 	.word	0x200034e8
 8005798:	2000352c 	.word	0x2000352c
 800579c:	20000009 	.word	0x20000009
 80057a0:	200037c4 	.word	0x200037c4
 80057a4:	20001c2c 	.word	0x20001c2c
 80057a8:	20000808 	.word	0x20000808
 80057ac:	40490000 	.word	0x40490000
 80057b0:	2000000a 	.word	0x2000000a
 80057b4:	20000008 	.word	0x20000008

080057b8 <chassis_center_yaw>:
	}
	osThreadTerminate(NULL);
}

float chassis_center_yaw() {
 80057b8:	b480      	push	{r7}
 80057ba:	af00      	add	r7, sp, #0

}
 80057bc:	bf00      	nop
 80057be:	eeb0 0a67 	vmov.f32	s0, s15
 80057c2:	46bd      	mov	sp, r7
 80057c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057c8:	4770      	bx	lr
	...

080057cc <chassis_set_ctrl>:

void chassis_set_ctrl(float forward, float horizontal, float yaw){
 80057cc:	b480      	push	{r7}
 80057ce:	b085      	sub	sp, #20
 80057d0:	af00      	add	r7, sp, #0
 80057d2:	ed87 0a03 	vstr	s0, [r7, #12]
 80057d6:	edc7 0a02 	vstr	s1, [r7, #8]
 80057da:	ed87 1a01 	vstr	s2, [r7, #4]
	chassis_ctrl_data.enabled = 1;
 80057de:	4b0b      	ldr	r3, [pc, #44]	@ (800580c <chassis_set_ctrl+0x40>)
 80057e0:	2201      	movs	r2, #1
 80057e2:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.horizontal = horizontal;
 80057e4:	4a09      	ldr	r2, [pc, #36]	@ (800580c <chassis_set_ctrl+0x40>)
 80057e6:	68bb      	ldr	r3, [r7, #8]
 80057e8:	6053      	str	r3, [r2, #4]
	chassis_ctrl_data.forward = forward;
 80057ea:	4a08      	ldr	r2, [pc, #32]	@ (800580c <chassis_set_ctrl+0x40>)
 80057ec:	68fb      	ldr	r3, [r7, #12]
 80057ee:	6013      	str	r3, [r2, #0]
	chassis_ctrl_data.yaw = -yaw;
 80057f0:	edd7 7a01 	vldr	s15, [r7, #4]
 80057f4:	eef1 7a67 	vneg.f32	s15, s15
 80057f8:	4b04      	ldr	r3, [pc, #16]	@ (800580c <chassis_set_ctrl+0x40>)
 80057fa:	edc3 7a02 	vstr	s15, [r3, #8]
}
 80057fe:	bf00      	nop
 8005800:	3714      	adds	r7, #20
 8005802:	46bd      	mov	sp, r7
 8005804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005808:	4770      	bx	lr
 800580a:	bf00      	nop
 800580c:	200034c8 	.word	0x200034c8

08005810 <chassis_kill_ctrl>:

void chassis_kill_ctrl(){
 8005810:	b480      	push	{r7}
 8005812:	af00      	add	r7, sp, #0
	chassis_ctrl_data.enabled = 0;
 8005814:	4b09      	ldr	r3, [pc, #36]	@ (800583c <chassis_kill_ctrl+0x2c>)
 8005816:	2200      	movs	r2, #0
 8005818:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.forward = 0;
 800581a:	4b08      	ldr	r3, [pc, #32]	@ (800583c <chassis_kill_ctrl+0x2c>)
 800581c:	f04f 0200 	mov.w	r2, #0
 8005820:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005822:	4b06      	ldr	r3, [pc, #24]	@ (800583c <chassis_kill_ctrl+0x2c>)
 8005824:	f04f 0200 	mov.w	r2, #0
 8005828:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 800582a:	4b04      	ldr	r3, [pc, #16]	@ (800583c <chassis_kill_ctrl+0x2c>)
 800582c:	f04f 0200 	mov.w	r2, #0
 8005830:	609a      	str	r2, [r3, #8]
}
 8005832:	bf00      	nop
 8005834:	46bd      	mov	sp, r7
 8005836:	f85d 7b04 	ldr.w	r7, [sp], #4
 800583a:	4770      	bx	lr
 800583c:	200034c8 	.word	0x200034c8

08005840 <control_reset>:
		}
	}
	return 0;
}

void control_reset() {
 8005840:	b580      	push	{r7, lr}
 8005842:	af00      	add	r7, sp, #0
	chassis_ctrl_data.forward = 0;
 8005844:	4b14      	ldr	r3, [pc, #80]	@ (8005898 <control_reset+0x58>)
 8005846:	f04f 0200 	mov.w	r2, #0
 800584a:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 800584c:	4b12      	ldr	r3, [pc, #72]	@ (8005898 <control_reset+0x58>)
 800584e:	f04f 0200 	mov.w	r2, #0
 8005852:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005854:	4b10      	ldr	r3, [pc, #64]	@ (8005898 <control_reset+0x58>)
 8005856:	f04f 0200 	mov.w	r2, #0
 800585a:	609a      	str	r2, [r3, #8]
	chassis_ctrl_data.enabled = 0;
 800585c:	4b0e      	ldr	r3, [pc, #56]	@ (8005898 <control_reset+0x58>)
 800585e:	2200      	movs	r2, #0
 8005860:	751a      	strb	r2, [r3, #20]
	gimbal_ctrl_data.pitch = 0;
 8005862:	4b0e      	ldr	r3, [pc, #56]	@ (800589c <control_reset+0x5c>)
 8005864:	f04f 0200 	mov.w	r2, #0
 8005868:	601a      	str	r2, [r3, #0]
	gimbal_ctrl_data.yaw = imu_heading.yaw;
 800586a:	4b0d      	ldr	r3, [pc, #52]	@ (80058a0 <control_reset+0x60>)
 800586c:	689b      	ldr	r3, [r3, #8]
 800586e:	4a0b      	ldr	r2, [pc, #44]	@ (800589c <control_reset+0x5c>)
 8005870:	6053      	str	r3, [r2, #4]
	gimbal_ctrl_data.enabled = 0;
 8005872:	4b0a      	ldr	r3, [pc, #40]	@ (800589c <control_reset+0x5c>)
 8005874:	2200      	movs	r2, #0
 8005876:	735a      	strb	r2, [r3, #13]
	launcher_ctrl_data.firing = 0;
 8005878:	4b0a      	ldr	r3, [pc, #40]	@ (80058a4 <control_reset+0x64>)
 800587a:	2200      	movs	r2, #0
 800587c:	805a      	strh	r2, [r3, #2]
	launcher_ctrl_data.projectile_speed = 0;
 800587e:	4b09      	ldr	r3, [pc, #36]	@ (80058a4 <control_reset+0x64>)
 8005880:	2200      	movs	r2, #0
 8005882:	801a      	strh	r2, [r3, #0]
	launcher_ctrl_data.enabled = 0;
 8005884:	4b07      	ldr	r3, [pc, #28]	@ (80058a4 <control_reset+0x64>)
 8005886:	2200      	movs	r2, #0
 8005888:	715a      	strb	r2, [r3, #5]
	g_spinspin_mode = 0;
 800588a:	4b07      	ldr	r3, [pc, #28]	@ (80058a8 <control_reset+0x68>)
 800588c:	2200      	movs	r2, #0
 800588e:	601a      	str	r2, [r3, #0]
	laser_off();
 8005890:	f7fb feda 	bl	8001648 <laser_off>
}
 8005894:	bf00      	nop
 8005896:	bd80      	pop	{r7, pc}
 8005898:	200034c8 	.word	0x200034c8
 800589c:	200034e8 	.word	0x200034e8
 80058a0:	20003700 	.word	0x20003700
 80058a4:	200034e0 	.word	0x200034e0
 80058a8:	2000353c 	.word	0x2000353c

080058ac <control_mode_change>:

void control_mode_change(int16_t left_dial_input) {
 80058ac:	b580      	push	{r7, lr}
 80058ae:	b084      	sub	sp, #16
 80058b0:	af00      	add	r7, sp, #0
 80058b2:	4603      	mov	r3, r0
 80058b4:	80fb      	strh	r3, [r7, #6]
//assume already in shutdown mode here
	static uint32_t last_trig_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 80058b6:	4b6f      	ldr	r3, [pc, #444]	@ (8005a74 <control_mode_change+0x1c8>)
 80058b8:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80058bc:	2b03      	cmp	r3, #3
 80058be:	d133      	bne.n	8005928 <control_mode_change+0x7c>
		if (left_dial_input > 330 || left_dial_input < -330) {
 80058c0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80058c4:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 80058c8:	dc04      	bgt.n	80058d4 <control_mode_change+0x28>
 80058ca:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80058ce:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80058d2:	da23      	bge.n	800591c <control_mode_change+0x70>
			if (HAL_GetTick() - last_trig_time > 1000) {
 80058d4:	f005 fb94 	bl	800b000 <HAL_GetTick>
 80058d8:	4602      	mov	r2, r0
 80058da:	4b67      	ldr	r3, [pc, #412]	@ (8005a78 <control_mode_change+0x1cc>)
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	1ad3      	subs	r3, r2, r3
 80058e0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80058e4:	f240 80c2 	bls.w	8005a6c <control_mode_change+0x1c0>
				switch (control_mode) {
 80058e8:	4b64      	ldr	r3, [pc, #400]	@ (8005a7c <control_mode_change+0x1d0>)
 80058ea:	781b      	ldrb	r3, [r3, #0]
 80058ec:	3b01      	subs	r3, #1
 80058ee:	2b01      	cmp	r3, #1
 80058f0:	d80d      	bhi.n	800590e <control_mode_change+0x62>
				case KEYBOARD_CTRL_MODE:
				case REMOTE_CTRL_MODE:
					control_mode = SBC_CTRL_MODE;
 80058f2:	4b62      	ldr	r3, [pc, #392]	@ (8005a7c <control_mode_change+0x1d0>)
 80058f4:	2203      	movs	r2, #3
 80058f6:	701a      	strb	r2, [r3, #0]
					temp_msg = control_sbc;
 80058f8:	2305      	movs	r3, #5
 80058fa:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80058fc:	4b60      	ldr	r3, [pc, #384]	@ (8005a80 <control_mode_change+0x1d4>)
 80058fe:	6818      	ldr	r0, [r3, #0]
 8005900:	f107 010f 	add.w	r1, r7, #15
 8005904:	2300      	movs	r3, #0
 8005906:	2200      	movs	r2, #0
 8005908:	f011 fe56 	bl	80175b8 <xQueueGenericSend>
					break;
 800590c:	e005      	b.n	800591a <control_mode_change+0x6e>
				default:
					last_trig_time = HAL_GetTick();
 800590e:	f005 fb77 	bl	800b000 <HAL_GetTick>
 8005912:	4603      	mov	r3, r0
 8005914:	4a58      	ldr	r2, [pc, #352]	@ (8005a78 <control_mode_change+0x1cc>)
 8005916:	6013      	str	r3, [r2, #0]
					break;
 8005918:	bf00      	nop
			if (HAL_GetTick() - last_trig_time > 1000) {
 800591a:	e0a7      	b.n	8005a6c <control_mode_change+0x1c0>
				}
			}
		} else {
			last_trig_time = HAL_GetTick();
 800591c:	f005 fb70 	bl	800b000 <HAL_GetTick>
 8005920:	4603      	mov	r3, r0
 8005922:	4a55      	ldr	r2, [pc, #340]	@ (8005a78 <control_mode_change+0x1cc>)
 8005924:	6013      	str	r3, [r2, #0]
			break;
		default:
			break;
		}
	}
}
 8005926:	e0a1      	b.n	8005a6c <control_mode_change+0x1c0>
		switch (control_mode) {
 8005928:	4b54      	ldr	r3, [pc, #336]	@ (8005a7c <control_mode_change+0x1d0>)
 800592a:	781b      	ldrb	r3, [r3, #0]
 800592c:	2b03      	cmp	r3, #3
 800592e:	d052      	beq.n	80059d6 <control_mode_change+0x12a>
 8005930:	2b03      	cmp	r3, #3
 8005932:	f300 8094 	bgt.w	8005a5e <control_mode_change+0x1b2>
 8005936:	2b01      	cmp	r3, #1
 8005938:	d002      	beq.n	8005940 <control_mode_change+0x94>
 800593a:	2b02      	cmp	r3, #2
 800593c:	d026      	beq.n	800598c <control_mode_change+0xe0>
			break;
 800593e:	e08e      	b.n	8005a5e <control_mode_change+0x1b2>
			if (left_dial_input < -330) {
 8005940:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005944:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 8005948:	da1a      	bge.n	8005980 <control_mode_change+0xd4>
				if (HAL_GetTick() - last_trig_time > 1000) {
 800594a:	f005 fb59 	bl	800b000 <HAL_GetTick>
 800594e:	4602      	mov	r2, r0
 8005950:	4b49      	ldr	r3, [pc, #292]	@ (8005a78 <control_mode_change+0x1cc>)
 8005952:	681b      	ldr	r3, [r3, #0]
 8005954:	1ad3      	subs	r3, r2, r3
 8005956:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800595a:	f240 8082 	bls.w	8005a62 <control_mode_change+0x1b6>
					control_mode = REMOTE_CTRL_MODE;
 800595e:	4b47      	ldr	r3, [pc, #284]	@ (8005a7c <control_mode_change+0x1d0>)
 8005960:	2202      	movs	r2, #2
 8005962:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005964:	2304      	movs	r3, #4
 8005966:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005968:	4b45      	ldr	r3, [pc, #276]	@ (8005a80 <control_mode_change+0x1d4>)
 800596a:	6818      	ldr	r0, [r3, #0]
 800596c:	f107 010f 	add.w	r1, r7, #15
 8005970:	2300      	movs	r3, #0
 8005972:	2200      	movs	r2, #0
 8005974:	f011 fe20 	bl	80175b8 <xQueueGenericSend>
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005978:	4b42      	ldr	r3, [pc, #264]	@ (8005a84 <control_mode_change+0x1d8>)
 800597a:	2200      	movs	r2, #0
 800597c:	701a      	strb	r2, [r3, #0]
			break;
 800597e:	e070      	b.n	8005a62 <control_mode_change+0x1b6>
				last_trig_time = HAL_GetTick();
 8005980:	f005 fb3e 	bl	800b000 <HAL_GetTick>
 8005984:	4603      	mov	r3, r0
 8005986:	4a3c      	ldr	r2, [pc, #240]	@ (8005a78 <control_mode_change+0x1cc>)
 8005988:	6013      	str	r3, [r2, #0]
			break;
 800598a:	e06a      	b.n	8005a62 <control_mode_change+0x1b6>
			if (left_dial_input > 330) {
 800598c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005990:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8005994:	dd19      	ble.n	80059ca <control_mode_change+0x11e>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005996:	f005 fb33 	bl	800b000 <HAL_GetTick>
 800599a:	4602      	mov	r2, r0
 800599c:	4b36      	ldr	r3, [pc, #216]	@ (8005a78 <control_mode_change+0x1cc>)
 800599e:	681b      	ldr	r3, [r3, #0]
 80059a0:	1ad3      	subs	r3, r2, r3
 80059a2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80059a6:	d95e      	bls.n	8005a66 <control_mode_change+0x1ba>
					control_mode = KEYBOARD_CTRL_MODE;
 80059a8:	4b34      	ldr	r3, [pc, #208]	@ (8005a7c <control_mode_change+0x1d0>)
 80059aa:	2201      	movs	r2, #1
 80059ac:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 80059ae:	2303      	movs	r3, #3
 80059b0:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 80059b2:	4b34      	ldr	r3, [pc, #208]	@ (8005a84 <control_mode_change+0x1d8>)
 80059b4:	2200      	movs	r2, #0
 80059b6:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80059b8:	4b31      	ldr	r3, [pc, #196]	@ (8005a80 <control_mode_change+0x1d4>)
 80059ba:	6818      	ldr	r0, [r3, #0]
 80059bc:	f107 010f 	add.w	r1, r7, #15
 80059c0:	2300      	movs	r3, #0
 80059c2:	2200      	movs	r2, #0
 80059c4:	f011 fdf8 	bl	80175b8 <xQueueGenericSend>
			break;
 80059c8:	e04d      	b.n	8005a66 <control_mode_change+0x1ba>
				last_trig_time = HAL_GetTick();
 80059ca:	f005 fb19 	bl	800b000 <HAL_GetTick>
 80059ce:	4603      	mov	r3, r0
 80059d0:	4a29      	ldr	r2, [pc, #164]	@ (8005a78 <control_mode_change+0x1cc>)
 80059d2:	6013      	str	r3, [r2, #0]
			break;
 80059d4:	e047      	b.n	8005a66 <control_mode_change+0x1ba>
			if (left_dial_input < -330) {
 80059d6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80059da:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80059de:	da19      	bge.n	8005a14 <control_mode_change+0x168>
				if (HAL_GetTick() - last_trig_time > 1000) {
 80059e0:	f005 fb0e 	bl	800b000 <HAL_GetTick>
 80059e4:	4602      	mov	r2, r0
 80059e6:	4b24      	ldr	r3, [pc, #144]	@ (8005a78 <control_mode_change+0x1cc>)
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	1ad3      	subs	r3, r2, r3
 80059ec:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80059f0:	d93b      	bls.n	8005a6a <control_mode_change+0x1be>
					control_mode = REMOTE_CTRL_MODE;
 80059f2:	4b22      	ldr	r3, [pc, #136]	@ (8005a7c <control_mode_change+0x1d0>)
 80059f4:	2202      	movs	r2, #2
 80059f6:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 80059f8:	2304      	movs	r3, #4
 80059fa:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 80059fc:	4b21      	ldr	r3, [pc, #132]	@ (8005a84 <control_mode_change+0x1d8>)
 80059fe:	2200      	movs	r2, #0
 8005a00:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005a02:	4b1f      	ldr	r3, [pc, #124]	@ (8005a80 <control_mode_change+0x1d4>)
 8005a04:	6818      	ldr	r0, [r3, #0]
 8005a06:	f107 010f 	add.w	r1, r7, #15
 8005a0a:	2300      	movs	r3, #0
 8005a0c:	2200      	movs	r2, #0
 8005a0e:	f011 fdd3 	bl	80175b8 <xQueueGenericSend>
			break;
 8005a12:	e02a      	b.n	8005a6a <control_mode_change+0x1be>
			} else if (left_dial_input > 330) {
 8005a14:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005a18:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8005a1c:	dd19      	ble.n	8005a52 <control_mode_change+0x1a6>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005a1e:	f005 faef 	bl	800b000 <HAL_GetTick>
 8005a22:	4602      	mov	r2, r0
 8005a24:	4b14      	ldr	r3, [pc, #80]	@ (8005a78 <control_mode_change+0x1cc>)
 8005a26:	681b      	ldr	r3, [r3, #0]
 8005a28:	1ad3      	subs	r3, r2, r3
 8005a2a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005a2e:	d91c      	bls.n	8005a6a <control_mode_change+0x1be>
					control_mode = KEYBOARD_CTRL_MODE;
 8005a30:	4b12      	ldr	r3, [pc, #72]	@ (8005a7c <control_mode_change+0x1d0>)
 8005a32:	2201      	movs	r2, #1
 8005a34:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005a36:	2303      	movs	r3, #3
 8005a38:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005a3a:	4b12      	ldr	r3, [pc, #72]	@ (8005a84 <control_mode_change+0x1d8>)
 8005a3c:	2200      	movs	r2, #0
 8005a3e:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005a40:	4b0f      	ldr	r3, [pc, #60]	@ (8005a80 <control_mode_change+0x1d4>)
 8005a42:	6818      	ldr	r0, [r3, #0]
 8005a44:	f107 010f 	add.w	r1, r7, #15
 8005a48:	2300      	movs	r3, #0
 8005a4a:	2200      	movs	r2, #0
 8005a4c:	f011 fdb4 	bl	80175b8 <xQueueGenericSend>
			break;
 8005a50:	e00b      	b.n	8005a6a <control_mode_change+0x1be>
				last_trig_time = HAL_GetTick();
 8005a52:	f005 fad5 	bl	800b000 <HAL_GetTick>
 8005a56:	4603      	mov	r3, r0
 8005a58:	4a07      	ldr	r2, [pc, #28]	@ (8005a78 <control_mode_change+0x1cc>)
 8005a5a:	6013      	str	r3, [r2, #0]
			break;
 8005a5c:	e005      	b.n	8005a6a <control_mode_change+0x1be>
			break;
 8005a5e:	bf00      	nop
 8005a60:	e004      	b.n	8005a6c <control_mode_change+0x1c0>
			break;
 8005a62:	bf00      	nop
 8005a64:	e002      	b.n	8005a6c <control_mode_change+0x1c0>
			break;
 8005a66:	bf00      	nop
 8005a68:	e000      	b.n	8005a6c <control_mode_change+0x1c0>
			break;
 8005a6a:	bf00      	nop
}
 8005a6c:	bf00      	nop
 8005a6e:	3710      	adds	r7, #16
 8005a70:	46bd      	mov	sp, r7
 8005a72:	bd80      	pop	{r7, pc}
 8005a74:	20000808 	.word	0x20000808
 8005a78:	20003540 	.word	0x20003540
 8005a7c:	20000008 	.word	0x20000008
 8005a80:	200037c4 	.word	0x200037c4
 8005a84:	2000000a 	.word	0x2000000a

08005a88 <gimbal_turn_ang>:

//ADDs angle to gimbal ctrl
void gimbal_turn_ang(float pit_radians, float yaw_radians) {
 8005a88:	b480      	push	{r7}
 8005a8a:	b085      	sub	sp, #20
 8005a8c:	af00      	add	r7, sp, #0
 8005a8e:	ed87 0a01 	vstr	s0, [r7, #4]
 8005a92:	edc7 0a00 	vstr	s1, [r7]
//		yaw_radians -= 2 * PI;
//	}
//	while (yaw_radians < -PI) {
//		yaw_radians += 2 * PI;
//	}
	float temp_yaw = gimbal_ctrl_data.yaw + yaw_radians;
 8005a96:	4b20      	ldr	r3, [pc, #128]	@ (8005b18 <gimbal_turn_ang+0x90>)
 8005a98:	edd3 7a01 	vldr	s15, [r3, #4]
 8005a9c:	ed97 7a00 	vldr	s14, [r7]
 8005aa0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005aa4:	edc7 7a03 	vstr	s15, [r7, #12]
	temp_yaw = (temp_yaw > PI) ? (temp_yaw - 2 * PI) : (temp_yaw < -PI) ? (temp_yaw + 2* PI) : temp_yaw;
 8005aa8:	edd7 7a03 	vldr	s15, [r7, #12]
 8005aac:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8005b1c <gimbal_turn_ang+0x94>
 8005ab0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005ab4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ab8:	dd06      	ble.n	8005ac8 <gimbal_turn_ang+0x40>
 8005aba:	edd7 7a03 	vldr	s15, [r7, #12]
 8005abe:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8005b20 <gimbal_turn_ang+0x98>
 8005ac2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005ac6:	e011      	b.n	8005aec <gimbal_turn_ang+0x64>
 8005ac8:	edd7 7a03 	vldr	s15, [r7, #12]
 8005acc:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 8005b24 <gimbal_turn_ang+0x9c>
 8005ad0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ad8:	d506      	bpl.n	8005ae8 <gimbal_turn_ang+0x60>
 8005ada:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ade:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8005b20 <gimbal_turn_ang+0x98>
 8005ae2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ae6:	e001      	b.n	8005aec <gimbal_turn_ang+0x64>
 8005ae8:	edd7 7a03 	vldr	s15, [r7, #12]
 8005aec:	edc7 7a03 	vstr	s15, [r7, #12]
	gimbal_ctrl_data.pitch += pit_radians;
 8005af0:	4b09      	ldr	r3, [pc, #36]	@ (8005b18 <gimbal_turn_ang+0x90>)
 8005af2:	ed93 7a00 	vldr	s14, [r3]
 8005af6:	edd7 7a01 	vldr	s15, [r7, #4]
 8005afa:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005afe:	4b06      	ldr	r3, [pc, #24]	@ (8005b18 <gimbal_turn_ang+0x90>)
 8005b00:	edc3 7a00 	vstr	s15, [r3]
	gimbal_ctrl_data.yaw = temp_yaw;
 8005b04:	4a04      	ldr	r2, [pc, #16]	@ (8005b18 <gimbal_turn_ang+0x90>)
 8005b06:	68fb      	ldr	r3, [r7, #12]
 8005b08:	6053      	str	r3, [r2, #4]
}
 8005b0a:	bf00      	nop
 8005b0c:	3714      	adds	r7, #20
 8005b0e:	46bd      	mov	sp, r7
 8005b10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b14:	4770      	bx	lr
 8005b16:	bf00      	nop
 8005b18:	200034e8 	.word	0x200034e8
 8005b1c:	40490fdb 	.word	0x40490fdb
 8005b20:	40c90fdb 	.word	0x40c90fdb
 8005b24:	c0490fdb 	.word	0xc0490fdb

08005b28 <set_gear>:
	}
	gimbal_ctrl_data.pitch = pit_radians;
	gimbal_ctrl_data.yaw = yaw_radians;
}

void set_gear() {
 8005b28:	b480      	push	{r7}
 8005b2a:	af00      	add	r7, sp, #0
	switch (gear_speed.curr_gear) {
 8005b2c:	4b34      	ldr	r3, [pc, #208]	@ (8005c00 <set_gear+0xd8>)
 8005b2e:	781b      	ldrb	r3, [r3, #0]
 8005b30:	3b01      	subs	r3, #1
 8005b32:	2b05      	cmp	r3, #5
 8005b34:	d852      	bhi.n	8005bdc <set_gear+0xb4>
 8005b36:	a201      	add	r2, pc, #4	@ (adr r2, 8005b3c <set_gear+0x14>)
 8005b38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b3c:	08005b55 	.word	0x08005b55
 8005b40:	08005b6b 	.word	0x08005b6b
 8005b44:	08005b81 	.word	0x08005b81
 8005b48:	08005b9b 	.word	0x08005b9b
 8005b4c:	08005baf 	.word	0x08005baf
 8005b50:	08005bc9 	.word	0x08005bc9
	case 1:
		gear_speed.spin_mult = GEAR1_YAW_MULT;
 8005b54:	4b2a      	ldr	r3, [pc, #168]	@ (8005c00 <set_gear+0xd8>)
 8005b56:	4a2b      	ldr	r2, [pc, #172]	@ (8005c04 <set_gear+0xdc>)
 8005b58:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR1_SPEED_MULT;
 8005b5a:	4b29      	ldr	r3, [pc, #164]	@ (8005c00 <set_gear+0xd8>)
 8005b5c:	4a29      	ldr	r2, [pc, #164]	@ (8005c04 <set_gear+0xdc>)
 8005b5e:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR1_ACCEL_MULT;
 8005b60:	4b27      	ldr	r3, [pc, #156]	@ (8005c00 <set_gear+0xd8>)
 8005b62:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b66:	60da      	str	r2, [r3, #12]
		break;
 8005b68:	e045      	b.n	8005bf6 <set_gear+0xce>
	case 2:
		gear_speed.spin_mult = GEAR2_YAW_MULT;
 8005b6a:	4b25      	ldr	r3, [pc, #148]	@ (8005c00 <set_gear+0xd8>)
 8005b6c:	4a26      	ldr	r2, [pc, #152]	@ (8005c08 <set_gear+0xe0>)
 8005b6e:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR2_SPEED_MULT;
 8005b70:	4b23      	ldr	r3, [pc, #140]	@ (8005c00 <set_gear+0xd8>)
 8005b72:	4a25      	ldr	r2, [pc, #148]	@ (8005c08 <set_gear+0xe0>)
 8005b74:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR2_ACCEL_MULT;
 8005b76:	4b22      	ldr	r3, [pc, #136]	@ (8005c00 <set_gear+0xd8>)
 8005b78:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b7c:	60da      	str	r2, [r3, #12]
		break;
 8005b7e:	e03a      	b.n	8005bf6 <set_gear+0xce>
	case 3:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005b80:	4b1f      	ldr	r3, [pc, #124]	@ (8005c00 <set_gear+0xd8>)
 8005b82:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b86:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005b88:	4b1d      	ldr	r3, [pc, #116]	@ (8005c00 <set_gear+0xd8>)
 8005b8a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b8e:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005b90:	4b1b      	ldr	r3, [pc, #108]	@ (8005c00 <set_gear+0xd8>)
 8005b92:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b96:	60da      	str	r2, [r3, #12]
		break;
 8005b98:	e02d      	b.n	8005bf6 <set_gear+0xce>
	case 4:
		gear_speed.spin_mult = GEAR4_YAW_MULT;
 8005b9a:	4b19      	ldr	r3, [pc, #100]	@ (8005c00 <set_gear+0xd8>)
 8005b9c:	4a1b      	ldr	r2, [pc, #108]	@ (8005c0c <set_gear+0xe4>)
 8005b9e:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR4_SPEED_MULT;
 8005ba0:	4b17      	ldr	r3, [pc, #92]	@ (8005c00 <set_gear+0xd8>)
 8005ba2:	4a1b      	ldr	r2, [pc, #108]	@ (8005c10 <set_gear+0xe8>)
 8005ba4:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR4_ACCEL_MULT;
 8005ba6:	4b16      	ldr	r3, [pc, #88]	@ (8005c00 <set_gear+0xd8>)
 8005ba8:	4a18      	ldr	r2, [pc, #96]	@ (8005c0c <set_gear+0xe4>)
 8005baa:	60da      	str	r2, [r3, #12]
		break;
 8005bac:	e023      	b.n	8005bf6 <set_gear+0xce>
	case 5:
		gear_speed.spin_mult = GEAR5_YAW_MULT;
 8005bae:	4b14      	ldr	r3, [pc, #80]	@ (8005c00 <set_gear+0xd8>)
 8005bb0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8005bb4:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR5_SPEED_MULT;
 8005bb6:	4b12      	ldr	r3, [pc, #72]	@ (8005c00 <set_gear+0xd8>)
 8005bb8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8005bbc:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR5_ACCEL_MULT;
 8005bbe:	4b10      	ldr	r3, [pc, #64]	@ (8005c00 <set_gear+0xd8>)
 8005bc0:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8005bc4:	60da      	str	r2, [r3, #12]
		break;
 8005bc6:	e016      	b.n	8005bf6 <set_gear+0xce>
	case 6:
		gear_speed.spin_mult = GEAR6_YAW_MULT;
 8005bc8:	4b0d      	ldr	r3, [pc, #52]	@ (8005c00 <set_gear+0xd8>)
 8005bca:	4a12      	ldr	r2, [pc, #72]	@ (8005c14 <set_gear+0xec>)
 8005bcc:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR6_SPEED_MULT;
 8005bce:	4b0c      	ldr	r3, [pc, #48]	@ (8005c00 <set_gear+0xd8>)
 8005bd0:	4a11      	ldr	r2, [pc, #68]	@ (8005c18 <set_gear+0xf0>)
 8005bd2:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR6_ACCEL_MULT;
 8005bd4:	4b0a      	ldr	r3, [pc, #40]	@ (8005c00 <set_gear+0xd8>)
 8005bd6:	4a11      	ldr	r2, [pc, #68]	@ (8005c1c <set_gear+0xf4>)
 8005bd8:	60da      	str	r2, [r3, #12]
		break;
 8005bda:	e00c      	b.n	8005bf6 <set_gear+0xce>
	default:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005bdc:	4b08      	ldr	r3, [pc, #32]	@ (8005c00 <set_gear+0xd8>)
 8005bde:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005be2:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005be4:	4b06      	ldr	r3, [pc, #24]	@ (8005c00 <set_gear+0xd8>)
 8005be6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bea:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005bec:	4b04      	ldr	r3, [pc, #16]	@ (8005c00 <set_gear+0xd8>)
 8005bee:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bf2:	60da      	str	r2, [r3, #12]
		break;
 8005bf4:	bf00      	nop
	}

}
 8005bf6:	bf00      	nop
 8005bf8:	46bd      	mov	sp, r7
 8005bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bfe:	4770      	bx	lr
 8005c00:	2000352c 	.word	0x2000352c
 8005c04:	3e99999a 	.word	0x3e99999a
 8005c08:	3f19999a 	.word	0x3f19999a
 8005c0c:	3f99999a 	.word	0x3f99999a
 8005c10:	3fb33333 	.word	0x3fb33333
 8005c14:	40400000 	.word	0x40400000
 8005c18:	40a00000 	.word	0x40a00000
 8005c1c:	41200000 	.word	0x41200000

08005c20 <chassis_yaw_pid_init>:

void chassis_yaw_pid_init() {
 8005c20:	b480      	push	{r7}
 8005c22:	af00      	add	r7, sp, #0
	yaw_pid_data.kp = CHASSIS_YAW_KP;
 8005c24:	4b09      	ldr	r3, [pc, #36]	@ (8005c4c <chassis_yaw_pid_init+0x2c>)
 8005c26:	4a0a      	ldr	r2, [pc, #40]	@ (8005c50 <chassis_yaw_pid_init+0x30>)
 8005c28:	601a      	str	r2, [r3, #0]
	yaw_pid_data.ki = CHASSIS_YAW_KI;
 8005c2a:	4b08      	ldr	r3, [pc, #32]	@ (8005c4c <chassis_yaw_pid_init+0x2c>)
 8005c2c:	f04f 0200 	mov.w	r2, #0
 8005c30:	605a      	str	r2, [r3, #4]
	yaw_pid_data.kd = CHASSIS_YAW_KD;
 8005c32:	4b06      	ldr	r3, [pc, #24]	@ (8005c4c <chassis_yaw_pid_init+0x2c>)
 8005c34:	f04f 0200 	mov.w	r2, #0
 8005c38:	609a      	str	r2, [r3, #8]
	yaw_pid_data.max_out = CHASSIS_YAW_MAX_RPM;
 8005c3a:	4b04      	ldr	r3, [pc, #16]	@ (8005c4c <chassis_yaw_pid_init+0x2c>)
 8005c3c:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 8005c40:	61da      	str	r2, [r3, #28]
}
 8005c42:	bf00      	nop
 8005c44:	46bd      	mov	sp, r7
 8005c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c4a:	4770      	bx	lr
 8005c4c:	200034fc 	.word	0x200034fc
 8005c50:	3f19999a 	.word	0x3f19999a

08005c54 <keyboard_control_input>:
extern int g_spinspin_mode;
static float curr_spinspin = 0;



void keyboard_control_input() {
 8005c54:	b580      	push	{r7, lr}
 8005c56:	af00      	add	r7, sp, #0
	mouse_gimbal_input();
 8005c58:	f000 f908 	bl	8005e6c <mouse_gimbal_input>
	keyboard_chassis_input();
 8005c5c:	f000 f868 	bl	8005d30 <keyboard_chassis_input>
	mouse_launcher_control_input();
 8005c60:	f000 f97a 	bl	8005f58 <mouse_launcher_control_input>
}
 8005c64:	bf00      	nop
 8005c66:	bd80      	pop	{r7, pc}

08005c68 <keyboard_gear_shifter>:

void keyboard_gear_shifter(speed_shift_t *gear_speed) {
 8005c68:	b580      	push	{r7, lr}
 8005c6a:	b082      	sub	sp, #8
 8005c6c:	af00      	add	r7, sp, #0
 8005c6e:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	if ((g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT)
 8005c70:	4b2c      	ldr	r3, [pc, #176]	@ (8005d24 <keyboard_gear_shifter+0xbc>)
 8005c72:	8b5b      	ldrh	r3, [r3, #26]
 8005c74:	f003 0310 	and.w	r3, r3, #16
 8005c78:	2b00      	cmp	r3, #0
 8005c7a:	d013      	beq.n	8005ca4 <keyboard_gear_shifter+0x3c>
			&& (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL)) {
 8005c7c:	4b29      	ldr	r3, [pc, #164]	@ (8005d24 <keyboard_gear_shifter+0xbc>)
 8005c7e:	8b5b      	ldrh	r3, [r3, #26]
 8005c80:	f003 0320 	and.w	r3, r3, #32
 8005c84:	2b00      	cmp	r3, #0
 8005c86:	d00d      	beq.n	8005ca4 <keyboard_gear_shifter+0x3c>
		gear_speed->curr_gear = 3;
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	2203      	movs	r2, #3
 8005c8c:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005c8e:	f005 f9b7 	bl	800b000 <HAL_GetTick>
 8005c92:	4603      	mov	r3, r0
 8005c94:	4a24      	ldr	r2, [pc, #144]	@ (8005d28 <keyboard_gear_shifter+0xc0>)
 8005c96:	6013      	str	r3, [r2, #0]
		ctrl_press_time = HAL_GetTick();
 8005c98:	f005 f9b2 	bl	800b000 <HAL_GetTick>
 8005c9c:	4603      	mov	r3, r0
 8005c9e:	4a23      	ldr	r2, [pc, #140]	@ (8005d2c <keyboard_gear_shifter+0xc4>)
 8005ca0:	6013      	str	r3, [r2, #0]
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
		}
		ctrl_press_time = HAL_GetTick();
	}

}
 8005ca2:	e03a      	b.n	8005d1a <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT) {
 8005ca4:	4b1f      	ldr	r3, [pc, #124]	@ (8005d24 <keyboard_gear_shifter+0xbc>)
 8005ca6:	8b5b      	ldrh	r3, [r3, #26]
 8005ca8:	f003 0310 	and.w	r3, r3, #16
 8005cac:	2b00      	cmp	r3, #0
 8005cae:	d017      	beq.n	8005ce0 <keyboard_gear_shifter+0x78>
		if (HAL_GetTick() - shift_press_time > 100) {
 8005cb0:	f005 f9a6 	bl	800b000 <HAL_GetTick>
 8005cb4:	4602      	mov	r2, r0
 8005cb6:	4b1c      	ldr	r3, [pc, #112]	@ (8005d28 <keyboard_gear_shifter+0xc0>)
 8005cb8:	681b      	ldr	r3, [r3, #0]
 8005cba:	1ad3      	subs	r3, r2, r3
 8005cbc:	2b64      	cmp	r3, #100	@ 0x64
 8005cbe:	d909      	bls.n	8005cd4 <keyboard_gear_shifter+0x6c>
					(gear_speed->curr_gear < 5) ? gear_speed->curr_gear + 1 : 5;
 8005cc0:	687b      	ldr	r3, [r7, #4]
 8005cc2:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005cc4:	2b04      	cmp	r3, #4
 8005cc6:	bf28      	it	cs
 8005cc8:	2304      	movcs	r3, #4
 8005cca:	b2db      	uxtb	r3, r3
 8005ccc:	3301      	adds	r3, #1
 8005cce:	b2da      	uxtb	r2, r3
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005cd4:	f005 f994 	bl	800b000 <HAL_GetTick>
 8005cd8:	4603      	mov	r3, r0
 8005cda:	4a13      	ldr	r2, [pc, #76]	@ (8005d28 <keyboard_gear_shifter+0xc0>)
 8005cdc:	6013      	str	r3, [r2, #0]
}
 8005cde:	e01c      	b.n	8005d1a <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL) {
 8005ce0:	4b10      	ldr	r3, [pc, #64]	@ (8005d24 <keyboard_gear_shifter+0xbc>)
 8005ce2:	8b5b      	ldrh	r3, [r3, #26]
 8005ce4:	f003 0320 	and.w	r3, r3, #32
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d016      	beq.n	8005d1a <keyboard_gear_shifter+0xb2>
		if (HAL_GetTick() - ctrl_press_time > 100) {
 8005cec:	f005 f988 	bl	800b000 <HAL_GetTick>
 8005cf0:	4602      	mov	r2, r0
 8005cf2:	4b0e      	ldr	r3, [pc, #56]	@ (8005d2c <keyboard_gear_shifter+0xc4>)
 8005cf4:	681b      	ldr	r3, [r3, #0]
 8005cf6:	1ad3      	subs	r3, r2, r3
 8005cf8:	2b64      	cmp	r3, #100	@ 0x64
 8005cfa:	d909      	bls.n	8005d10 <keyboard_gear_shifter+0xa8>
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005d00:	2b02      	cmp	r3, #2
 8005d02:	bf38      	it	cc
 8005d04:	2302      	movcc	r3, #2
 8005d06:	b2db      	uxtb	r3, r3
 8005d08:	3b01      	subs	r3, #1
 8005d0a:	b2da      	uxtb	r2, r3
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	701a      	strb	r2, [r3, #0]
		ctrl_press_time = HAL_GetTick();
 8005d10:	f005 f976 	bl	800b000 <HAL_GetTick>
 8005d14:	4603      	mov	r3, r0
 8005d16:	4a05      	ldr	r2, [pc, #20]	@ (8005d2c <keyboard_gear_shifter+0xc4>)
 8005d18:	6013      	str	r3, [r2, #0]
}
 8005d1a:	bf00      	nop
 8005d1c:	3708      	adds	r7, #8
 8005d1e:	46bd      	mov	sp, r7
 8005d20:	bd80      	pop	{r7, pc}
 8005d22:	bf00      	nop
 8005d24:	20000808 	.word	0x20000808
 8005d28:	20003544 	.word	0x20003544
 8005d2c:	20003548 	.word	0x20003548

08005d30 <keyboard_chassis_input>:

void keyboard_chassis_input() {
 8005d30:	b580      	push	{r7, lr}
 8005d32:	b084      	sub	sp, #16
 8005d34:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8005d36:	4b49      	ldr	r3, [pc, #292]	@ (8005e5c <keyboard_chassis_input+0x12c>)
 8005d38:	781b      	ldrb	r3, [r3, #0]
 8005d3a:	2b00      	cmp	r3, #0
 8005d3c:	d104      	bne.n	8005d48 <keyboard_chassis_input+0x18>
 8005d3e:	4b48      	ldr	r3, [pc, #288]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005d40:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005d44:	2b02      	cmp	r3, #2
 8005d46:	d00f      	beq.n	8005d68 <keyboard_chassis_input+0x38>
		chassis_ctrl_data.enabled = 0;
 8005d48:	4b46      	ldr	r3, [pc, #280]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005d4a:	2200      	movs	r2, #0
 8005d4c:	751a      	strb	r2, [r3, #20]
		chassis_ctrl_data.horizontal = 0;
 8005d4e:	4b45      	ldr	r3, [pc, #276]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005d50:	f04f 0200 	mov.w	r2, #0
 8005d54:	605a      	str	r2, [r3, #4]
		chassis_ctrl_data.forward = 0;
 8005d56:	4b43      	ldr	r3, [pc, #268]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005d58:	f04f 0200 	mov.w	r2, #0
 8005d5c:	601a      	str	r2, [r3, #0]
		chassis_ctrl_data.yaw = 0;
 8005d5e:	4b41      	ldr	r3, [pc, #260]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005d60:	f04f 0200 	mov.w	r2, #0
 8005d64:	609a      	str	r2, [r3, #8]
			chassis_ctrl_data.horizontal = horizontal_input;
			chassis_ctrl_data.forward = forward_input;
			chassis_ctrl_data.yaw = yaw_input;
		}
	}
}
 8005d66:	e075      	b.n	8005e54 <keyboard_chassis_input+0x124>
		if (g_remote_cmd.right_switch == ge_RSW_ALL_ON) {
 8005d68:	4b3d      	ldr	r3, [pc, #244]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005d6a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005d6e:	2b02      	cmp	r3, #2
 8005d70:	d170      	bne.n	8005e54 <keyboard_chassis_input+0x124>
			chassis_ctrl_data.enabled = 1;
 8005d72:	4b3c      	ldr	r3, [pc, #240]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005d74:	2201      	movs	r2, #1
 8005d76:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8005d78:	f04f 0300 	mov.w	r3, #0
 8005d7c:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 8005d7e:	f04f 0300 	mov.w	r3, #0
 8005d82:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 8005d84:	f04f 0300 	mov.w	r3, #0
 8005d88:	607b      	str	r3, [r7, #4]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_Q) {
 8005d8a:	4b35      	ldr	r3, [pc, #212]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005d8c:	8b5b      	ldrh	r3, [r3, #26]
 8005d8e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005d92:	2b00      	cmp	r3, #0
 8005d94:	d003      	beq.n	8005d9e <keyboard_chassis_input+0x6e>
				g_spinspin_mode = 1;
 8005d96:	4b34      	ldr	r3, [pc, #208]	@ (8005e68 <keyboard_chassis_input+0x138>)
 8005d98:	2201      	movs	r2, #1
 8005d9a:	601a      	str	r2, [r3, #0]
 8005d9c:	e008      	b.n	8005db0 <keyboard_chassis_input+0x80>
			} else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_E) {
 8005d9e:	4b30      	ldr	r3, [pc, #192]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005da0:	8b5b      	ldrh	r3, [r3, #26]
 8005da2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005da6:	2b00      	cmp	r3, #0
 8005da8:	d002      	beq.n	8005db0 <keyboard_chassis_input+0x80>
				g_spinspin_mode = 0;
 8005daa:	4b2f      	ldr	r3, [pc, #188]	@ (8005e68 <keyboard_chassis_input+0x138>)
 8005dac:	2200      	movs	r2, #0
 8005dae:	601a      	str	r2, [r3, #0]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_W) {
 8005db0:	4b2b      	ldr	r3, [pc, #172]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005db2:	8b5b      	ldrh	r3, [r3, #26]
 8005db4:	f003 0301 	and.w	r3, r3, #1
 8005db8:	2b00      	cmp	r3, #0
 8005dba:	d007      	beq.n	8005dcc <keyboard_chassis_input+0x9c>
				forward_input += KEYBD_MAX_SPD;
 8005dbc:	edd7 7a02 	vldr	s15, [r7, #8]
 8005dc0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005dc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005dc8:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_S) {
 8005dcc:	4b24      	ldr	r3, [pc, #144]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005dce:	8b5b      	ldrh	r3, [r3, #26]
 8005dd0:	f003 0302 	and.w	r3, r3, #2
 8005dd4:	2b00      	cmp	r3, #0
 8005dd6:	d007      	beq.n	8005de8 <keyboard_chassis_input+0xb8>
				forward_input -= KEYBD_MAX_SPD;
 8005dd8:	edd7 7a02 	vldr	s15, [r7, #8]
 8005ddc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005de0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005de4:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_A) {
 8005de8:	4b1d      	ldr	r3, [pc, #116]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005dea:	8b5b      	ldrh	r3, [r3, #26]
 8005dec:	f003 0304 	and.w	r3, r3, #4
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d007      	beq.n	8005e04 <keyboard_chassis_input+0xd4>
				horizontal_input -= KEYBD_MAX_SPD;
 8005df4:	edd7 7a03 	vldr	s15, [r7, #12]
 8005df8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005dfc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005e00:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_D) {
 8005e04:	4b16      	ldr	r3, [pc, #88]	@ (8005e60 <keyboard_chassis_input+0x130>)
 8005e06:	8b5b      	ldrh	r3, [r3, #26]
 8005e08:	f003 0308 	and.w	r3, r3, #8
 8005e0c:	2b00      	cmp	r3, #0
 8005e0e:	d007      	beq.n	8005e20 <keyboard_chassis_input+0xf0>
				horizontal_input += KEYBD_MAX_SPD;
 8005e10:	edd7 7a03 	vldr	s15, [r7, #12]
 8005e14:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005e18:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e1c:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_spinspin_mode) {
 8005e20:	4b11      	ldr	r3, [pc, #68]	@ (8005e68 <keyboard_chassis_input+0x138>)
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	2b00      	cmp	r3, #0
 8005e26:	d008      	beq.n	8005e3a <keyboard_chassis_input+0x10a>
				yaw_input = g_spinspin_mode * CHASSIS_SPINSPIN_MAX;
 8005e28:	4b0f      	ldr	r3, [pc, #60]	@ (8005e68 <keyboard_chassis_input+0x138>)
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	ee07 3a90 	vmov	s15, r3
 8005e30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e34:	edc7 7a01 	vstr	s15, [r7, #4]
 8005e38:	e003      	b.n	8005e42 <keyboard_chassis_input+0x112>
				yaw_input = chassis_center_yaw();
 8005e3a:	f7ff fcbd 	bl	80057b8 <chassis_center_yaw>
 8005e3e:	ed87 0a01 	vstr	s0, [r7, #4]
			chassis_ctrl_data.horizontal = horizontal_input;
 8005e42:	4a08      	ldr	r2, [pc, #32]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005e44:	68fb      	ldr	r3, [r7, #12]
 8005e46:	6053      	str	r3, [r2, #4]
			chassis_ctrl_data.forward = forward_input;
 8005e48:	4a06      	ldr	r2, [pc, #24]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005e4a:	68bb      	ldr	r3, [r7, #8]
 8005e4c:	6013      	str	r3, [r2, #0]
			chassis_ctrl_data.yaw = yaw_input;
 8005e4e:	4a05      	ldr	r2, [pc, #20]	@ (8005e64 <keyboard_chassis_input+0x134>)
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	6093      	str	r3, [r2, #8]
}
 8005e54:	bf00      	nop
 8005e56:	3710      	adds	r7, #16
 8005e58:	46bd      	mov	sp, r7
 8005e5a:	bd80      	pop	{r7, pc}
 8005e5c:	20000009 	.word	0x20000009
 8005e60:	20000808 	.word	0x20000808
 8005e64:	200034c8 	.word	0x200034c8
 8005e68:	2000353c 	.word	0x2000353c

08005e6c <mouse_gimbal_input>:

void mouse_gimbal_input() {
 8005e6c:	b580      	push	{r7, lr}
 8005e6e:	b082      	sub	sp, #8
 8005e70:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005e72:	4b33      	ldr	r3, [pc, #204]	@ (8005f40 <mouse_gimbal_input+0xd4>)
 8005e74:	781b      	ldrb	r3, [r3, #0]
 8005e76:	2b00      	cmp	r3, #0
 8005e78:	d104      	bne.n	8005e84 <mouse_gimbal_input+0x18>
 8005e7a:	4b32      	ldr	r3, [pc, #200]	@ (8005f44 <mouse_gimbal_input+0xd8>)
 8005e7c:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005e80:	2b01      	cmp	r3, #1
 8005e82:	d103      	bne.n	8005e8c <mouse_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8005e84:	4b30      	ldr	r3, [pc, #192]	@ (8005f48 <mouse_gimbal_input+0xdc>)
 8005e86:	2200      	movs	r2, #0
 8005e88:	735a      	strb	r2, [r3, #13]
 8005e8a:	e055      	b.n	8005f38 <mouse_gimbal_input+0xcc>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8005e8c:	4b2e      	ldr	r3, [pc, #184]	@ (8005f48 <mouse_gimbal_input+0xdc>)
 8005e8e:	2201      	movs	r2, #1
 8005e90:	735a      	strb	r2, [r3, #13]
//		float pitch_mouse = (float) g_remote_cmd.mouse_y * MOUSE_Y_INVERT
//				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
//		float yaw_mouse = (float) g_remote_cmd.mouse_x * MOUSE_X_INVERT
//				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;

		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8005e92:	4b2c      	ldr	r3, [pc, #176]	@ (8005f44 <mouse_gimbal_input+0xd8>)
 8005e94:	695b      	ldr	r3, [r3, #20]
 8005e96:	ee07 3a90 	vmov	s15, r3
 8005e9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
 8005e9e:	eef1 7a67 	vneg.f32	s15, s15
 8005ea2:	ee17 3a90 	vmov	r3, s15
 8005ea6:	4618      	mov	r0, r3
 8005ea8:	f7fa fb4e 	bl	8000548 <__aeabi_f2d>
 8005eac:	f04f 0200 	mov.w	r2, #0
 8005eb0:	4b26      	ldr	r3, [pc, #152]	@ (8005f4c <mouse_gimbal_input+0xe0>)
 8005eb2:	f7fa fba1 	bl	80005f8 <__aeabi_dmul>
 8005eb6:	4602      	mov	r2, r0
 8005eb8:	460b      	mov	r3, r1
 8005eba:	4610      	mov	r0, r2
 8005ebc:	4619      	mov	r1, r3
 8005ebe:	f04f 0200 	mov.w	r2, #0
 8005ec2:	4b23      	ldr	r3, [pc, #140]	@ (8005f50 <mouse_gimbal_input+0xe4>)
 8005ec4:	f7fa fcc2 	bl	800084c <__aeabi_ddiv>
 8005ec8:	4602      	mov	r2, r0
 8005eca:	460b      	mov	r3, r1
		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8005ecc:	4610      	mov	r0, r2
 8005ece:	4619      	mov	r1, r3
 8005ed0:	f7fa fe8a 	bl	8000be8 <__aeabi_d2f>
 8005ed4:	4603      	mov	r3, r0
 8005ed6:	607b      	str	r3, [r7, #4]
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8005ed8:	4b1a      	ldr	r3, [pc, #104]	@ (8005f44 <mouse_gimbal_input+0xd8>)
 8005eda:	691b      	ldr	r3, [r3, #16]
 8005edc:	ee07 3a90 	vmov	s15, r3
 8005ee0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;
 8005ee4:	eef1 7a67 	vneg.f32	s15, s15
 8005ee8:	ee17 3a90 	vmov	r3, s15
 8005eec:	4618      	mov	r0, r3
 8005eee:	f7fa fb2b 	bl	8000548 <__aeabi_f2d>
 8005ef2:	f04f 0200 	mov.w	r2, #0
 8005ef6:	4b17      	ldr	r3, [pc, #92]	@ (8005f54 <mouse_gimbal_input+0xe8>)
 8005ef8:	f7fa fb7e 	bl	80005f8 <__aeabi_dmul>
 8005efc:	4602      	mov	r2, r0
 8005efe:	460b      	mov	r3, r1
 8005f00:	4610      	mov	r0, r2
 8005f02:	4619      	mov	r1, r3
 8005f04:	f04f 0200 	mov.w	r2, #0
 8005f08:	4b11      	ldr	r3, [pc, #68]	@ (8005f50 <mouse_gimbal_input+0xe4>)
 8005f0a:	f7fa fc9f 	bl	800084c <__aeabi_ddiv>
 8005f0e:	4602      	mov	r2, r0
 8005f10:	460b      	mov	r3, r1
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8005f12:	4610      	mov	r0, r2
 8005f14:	4619      	mov	r1, r3
 8005f16:	f7fa fe67 	bl	8000be8 <__aeabi_d2f>
 8005f1a:	4603      	mov	r3, r0
 8005f1c:	603b      	str	r3, [r7, #0]
		g_remote_cmd.mouse_vert = 0;
 8005f1e:	4b09      	ldr	r3, [pc, #36]	@ (8005f44 <mouse_gimbal_input+0xd8>)
 8005f20:	2200      	movs	r2, #0
 8005f22:	615a      	str	r2, [r3, #20]
		g_remote_cmd.mouse_hori = 0;
 8005f24:	4b07      	ldr	r3, [pc, #28]	@ (8005f44 <mouse_gimbal_input+0xd8>)
 8005f26:	2200      	movs	r2, #0
 8005f28:	611a      	str	r2, [r3, #16]
		gimbal_turn_ang(pitch_mouse, yaw_mouse);
 8005f2a:	edd7 0a00 	vldr	s1, [r7]
 8005f2e:	ed97 0a01 	vldr	s0, [r7, #4]
 8005f32:	f7ff fda9 	bl	8005a88 <gimbal_turn_ang>

	}
}
 8005f36:	bf00      	nop
 8005f38:	bf00      	nop
 8005f3a:	3708      	adds	r7, #8
 8005f3c:	46bd      	mov	sp, r7
 8005f3e:	bd80      	pop	{r7, pc}
 8005f40:	20000009 	.word	0x20000009
 8005f44:	20000808 	.word	0x20000808
 8005f48:	200034e8 	.word	0x200034e8
 8005f4c:	c0240000 	.word	0xc0240000
 8005f50:	40e00000 	.word	0x40e00000
 8005f54:	40240000 	.word	0x40240000

08005f58 <mouse_launcher_control_input>:

void mouse_launcher_control_input() {
 8005f58:	b480      	push	{r7}
 8005f5a:	af00      	add	r7, sp, #0
	if (g_safety_toggle || launcher_safety_toggle
 8005f5c:	4b28      	ldr	r3, [pc, #160]	@ (8006000 <mouse_launcher_control_input+0xa8>)
 8005f5e:	781b      	ldrb	r3, [r3, #0]
 8005f60:	2b00      	cmp	r3, #0
 8005f62:	d10d      	bne.n	8005f80 <mouse_launcher_control_input+0x28>
 8005f64:	4b27      	ldr	r3, [pc, #156]	@ (8006004 <mouse_launcher_control_input+0xac>)
 8005f66:	781b      	ldrb	r3, [r3, #0]
 8005f68:	2b00      	cmp	r3, #0
 8005f6a:	d109      	bne.n	8005f80 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8005f6c:	4b26      	ldr	r3, [pc, #152]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005f6e:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005f72:	2b01      	cmp	r3, #1
 8005f74:	d004      	beq.n	8005f80 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005f76:	4b24      	ldr	r3, [pc, #144]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005f78:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005f7c:	2b01      	cmp	r3, #1
 8005f7e:	d016      	beq.n	8005fae <mouse_launcher_control_input+0x56>
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005f80:	4b21      	ldr	r3, [pc, #132]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005f82:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005f86:	2b01      	cmp	r3, #1
 8005f88:	d102      	bne.n	8005f90 <mouse_launcher_control_input+0x38>
			launcher_ctrl_data.enabled = 0;
 8005f8a:	4b20      	ldr	r3, [pc, #128]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005f8c:	2200      	movs	r2, #0
 8005f8e:	715a      	strb	r2, [r3, #5]
		}
		launcher_ctrl_data.firing = 0;
 8005f90:	4b1e      	ldr	r3, [pc, #120]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005f92:	2200      	movs	r2, #0
 8005f94:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8005f96:	4b1d      	ldr	r3, [pc, #116]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005f98:	2200      	movs	r2, #0
 8005f9a:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005f9c:	4b1a      	ldr	r3, [pc, #104]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005f9e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005fa2:	2b01      	cmp	r3, #1
 8005fa4:	d027      	beq.n	8005ff6 <mouse_launcher_control_input+0x9e>
			launcher_safety_toggle = 0;
 8005fa6:	4b17      	ldr	r3, [pc, #92]	@ (8006004 <mouse_launcher_control_input+0xac>)
 8005fa8:	2200      	movs	r2, #0
 8005faa:	701a      	strb	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005fac:	e023      	b.n	8005ff6 <mouse_launcher_control_input+0x9e>
		}
	} else {
		launcher_ctrl_data.enabled = 1;
 8005fae:	4b17      	ldr	r3, [pc, #92]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005fb0:	2201      	movs	r2, #1
 8005fb2:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 8005fb4:	4b15      	ldr	r3, [pc, #84]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005fb6:	2201      	movs	r2, #1
 8005fb8:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8005fba:	4b13      	ldr	r3, [pc, #76]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005fbc:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005fc0:	2b01      	cmp	r3, #1
 8005fc2:	d10b      	bne.n	8005fdc <mouse_launcher_control_input+0x84>
			if (g_remote_cmd.mouse_right) {
 8005fc4:	4b10      	ldr	r3, [pc, #64]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005fc6:	f993 3019 	ldrsb.w	r3, [r3, #25]
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	d003      	beq.n	8005fd6 <mouse_launcher_control_input+0x7e>
				launcher_ctrl_data.override = 1;
 8005fce:	4b0f      	ldr	r3, [pc, #60]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005fd0:	2201      	movs	r2, #1
 8005fd2:	711a      	strb	r2, [r3, #4]
 8005fd4:	e002      	b.n	8005fdc <mouse_launcher_control_input+0x84>
			} else {
				launcher_ctrl_data.override = 0;
 8005fd6:	4b0d      	ldr	r3, [pc, #52]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005fd8:	2200      	movs	r2, #0
 8005fda:	711a      	strb	r2, [r3, #4]
			}
		}
		if (g_remote_cmd.mouse_left) {
 8005fdc:	4b0a      	ldr	r3, [pc, #40]	@ (8006008 <mouse_launcher_control_input+0xb0>)
 8005fde:	f993 3018 	ldrsb.w	r3, [r3, #24]
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	d003      	beq.n	8005fee <mouse_launcher_control_input+0x96>
			launcher_ctrl_data.firing =1;
 8005fe6:	4b09      	ldr	r3, [pc, #36]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005fe8:	2201      	movs	r2, #1
 8005fea:	805a      	strh	r2, [r3, #2]

		} else {
			launcher_ctrl_data.firing = 0;
		}
	}
}
 8005fec:	e003      	b.n	8005ff6 <mouse_launcher_control_input+0x9e>
			launcher_ctrl_data.firing = 0;
 8005fee:	4b07      	ldr	r3, [pc, #28]	@ (800600c <mouse_launcher_control_input+0xb4>)
 8005ff0:	2200      	movs	r2, #0
 8005ff2:	805a      	strh	r2, [r3, #2]
}
 8005ff4:	e7ff      	b.n	8005ff6 <mouse_launcher_control_input+0x9e>
 8005ff6:	bf00      	nop
 8005ff8:	46bd      	mov	sp, r7
 8005ffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ffe:	4770      	bx	lr
 8006000:	20000009 	.word	0x20000009
 8006004:	2000000a 	.word	0x2000000a
 8006008:	20000808 	.word	0x20000808
 800600c:	200034e0 	.word	0x200034e0

08006010 <remote_control_input>:
extern gimbal_control_t gimbal_ctrl_data;
extern uint8_t g_safety_toggle;
extern uint8_t launcher_safety_toggle;


void remote_control_input() {
 8006010:	b580      	push	{r7, lr}
 8006012:	af00      	add	r7, sp, #0
	remote_gimbal_input();
 8006014:	f000 f8f0 	bl	80061f8 <remote_gimbal_input>
	remote_chassis_input();
 8006018:	f000 f87e 	bl	8006118 <remote_chassis_input>
	remote_launcher_control_input();
 800601c:	f000 f958 	bl	80062d0 <remote_launcher_control_input>
}
 8006020:	bf00      	nop
 8006022:	bd80      	pop	{r7, pc}

08006024 <remote_gear_shifter>:
void remote_gear_shifter(speed_shift_t* gear_speed){
 8006024:	b580      	push	{r7, lr}
 8006026:	b084      	sub	sp, #16
 8006028:	af00      	add	r7, sp, #0
 800602a:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 800602c:	4b36      	ldr	r3, [pc, #216]	@ (8006108 <remote_gear_shifter+0xe4>)
 800602e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006032:	2b03      	cmp	r3, #3
 8006034:	d164      	bne.n	8006100 <remote_gear_shifter+0xdc>
		if (g_remote_cmd.side_dial > 330) {
 8006036:	4b34      	ldr	r3, [pc, #208]	@ (8006108 <remote_gear_shifter+0xe4>)
 8006038:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800603c:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8006040:	dd2c      	ble.n	800609c <remote_gear_shifter+0x78>
			if (HAL_GetTick() - shift_press_time > 100) {
 8006042:	f004 ffdd 	bl	800b000 <HAL_GetTick>
 8006046:	4602      	mov	r2, r0
 8006048:	4b30      	ldr	r3, [pc, #192]	@ (800610c <remote_gear_shifter+0xe8>)
 800604a:	681b      	ldr	r3, [r3, #0]
 800604c:	1ad3      	subs	r3, r2, r3
 800604e:	2b64      	cmp	r3, #100	@ 0x64
 8006050:	d91e      	bls.n	8006090 <remote_gear_shifter+0x6c>
				gear_speed->curr_gear =
						(gear_speed->curr_gear < 6) ?
 8006052:	687b      	ldr	r3, [r7, #4]
 8006054:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 8006056:	2b05      	cmp	r3, #5
 8006058:	bf28      	it	cs
 800605a:	2305      	movcs	r3, #5
 800605c:	b2db      	uxtb	r3, r3
 800605e:	3301      	adds	r3, #1
 8006060:	b2da      	uxtb	r2, r3
 8006062:	687b      	ldr	r3, [r7, #4]
 8006064:	701a      	strb	r2, [r3, #0]
								gear_speed->curr_gear + 1 : 6;
				temp_msg = bz_high;
 8006066:	2306      	movs	r3, #6
 8006068:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 800606a:	2300      	movs	r3, #0
 800606c:	73fb      	strb	r3, [r7, #15]
 800606e:	e00a      	b.n	8006086 <remote_gear_shifter+0x62>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8006070:	4b27      	ldr	r3, [pc, #156]	@ (8006110 <remote_gear_shifter+0xec>)
 8006072:	6818      	ldr	r0, [r3, #0]
 8006074:	f107 010d 	add.w	r1, r7, #13
 8006078:	2300      	movs	r3, #0
 800607a:	2200      	movs	r2, #0
 800607c:	f011 fa9c 	bl	80175b8 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006080:	7bfb      	ldrb	r3, [r7, #15]
 8006082:	3301      	adds	r3, #1
 8006084:	73fb      	strb	r3, [r7, #15]
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	781b      	ldrb	r3, [r3, #0]
 800608a:	7bfa      	ldrb	r2, [r7, #15]
 800608c:	429a      	cmp	r2, r3
 800608e:	d3ef      	bcc.n	8006070 <remote_gear_shifter+0x4c>
				}
			}
			shift_press_time = HAL_GetTick();
 8006090:	f004 ffb6 	bl	800b000 <HAL_GetTick>
 8006094:	4603      	mov	r3, r0
 8006096:	4a1d      	ldr	r2, [pc, #116]	@ (800610c <remote_gear_shifter+0xe8>)
 8006098:	6013      	str	r3, [r2, #0]
				}
			}
			ctrl_press_time = HAL_GetTick();
		}
	}
}
 800609a:	e031      	b.n	8006100 <remote_gear_shifter+0xdc>
		else if (g_remote_cmd.side_dial < -330) {
 800609c:	4b1a      	ldr	r3, [pc, #104]	@ (8006108 <remote_gear_shifter+0xe4>)
 800609e:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80060a2:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80060a6:	da2b      	bge.n	8006100 <remote_gear_shifter+0xdc>
			if (HAL_GetTick() - ctrl_press_time > 100) {
 80060a8:	f004 ffaa 	bl	800b000 <HAL_GetTick>
 80060ac:	4602      	mov	r2, r0
 80060ae:	4b19      	ldr	r3, [pc, #100]	@ (8006114 <remote_gear_shifter+0xf0>)
 80060b0:	681b      	ldr	r3, [r3, #0]
 80060b2:	1ad3      	subs	r3, r2, r3
 80060b4:	2b64      	cmp	r3, #100	@ 0x64
 80060b6:	d91e      	bls.n	80060f6 <remote_gear_shifter+0xd2>
						(gear_speed->curr_gear > 1) ?
 80060b8:	687b      	ldr	r3, [r7, #4]
 80060ba:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 80060bc:	2b02      	cmp	r3, #2
 80060be:	bf38      	it	cc
 80060c0:	2302      	movcc	r3, #2
 80060c2:	b2db      	uxtb	r3, r3
 80060c4:	3b01      	subs	r3, #1
 80060c6:	b2da      	uxtb	r2, r3
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	701a      	strb	r2, [r3, #0]
				temp_msg = bz_low;
 80060cc:	2307      	movs	r3, #7
 80060ce:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80060d0:	2300      	movs	r3, #0
 80060d2:	73bb      	strb	r3, [r7, #14]
 80060d4:	e00a      	b.n	80060ec <remote_gear_shifter+0xc8>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80060d6:	4b0e      	ldr	r3, [pc, #56]	@ (8006110 <remote_gear_shifter+0xec>)
 80060d8:	6818      	ldr	r0, [r3, #0]
 80060da:	f107 010d 	add.w	r1, r7, #13
 80060de:	2300      	movs	r3, #0
 80060e0:	2200      	movs	r2, #0
 80060e2:	f011 fa69 	bl	80175b8 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80060e6:	7bbb      	ldrb	r3, [r7, #14]
 80060e8:	3301      	adds	r3, #1
 80060ea:	73bb      	strb	r3, [r7, #14]
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	781b      	ldrb	r3, [r3, #0]
 80060f0:	7bba      	ldrb	r2, [r7, #14]
 80060f2:	429a      	cmp	r2, r3
 80060f4:	d3ef      	bcc.n	80060d6 <remote_gear_shifter+0xb2>
			ctrl_press_time = HAL_GetTick();
 80060f6:	f004 ff83 	bl	800b000 <HAL_GetTick>
 80060fa:	4603      	mov	r3, r0
 80060fc:	4a05      	ldr	r2, [pc, #20]	@ (8006114 <remote_gear_shifter+0xf0>)
 80060fe:	6013      	str	r3, [r2, #0]
}
 8006100:	bf00      	nop
 8006102:	3710      	adds	r7, #16
 8006104:	46bd      	mov	sp, r7
 8006106:	bd80      	pop	{r7, pc}
 8006108:	20000808 	.word	0x20000808
 800610c:	2000354c 	.word	0x2000354c
 8006110:	200037c4 	.word	0x200037c4
 8006114:	20003550 	.word	0x20003550

08006118 <remote_chassis_input>:

void remote_chassis_input() {
 8006118:	b580      	push	{r7, lr}
 800611a:	b084      	sub	sp, #16
 800611c:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 800611e:	4b32      	ldr	r3, [pc, #200]	@ (80061e8 <remote_chassis_input+0xd0>)
 8006120:	781b      	ldrb	r3, [r3, #0]
 8006122:	2b00      	cmp	r3, #0
 8006124:	d104      	bne.n	8006130 <remote_chassis_input+0x18>
 8006126:	4b31      	ldr	r3, [pc, #196]	@ (80061ec <remote_chassis_input+0xd4>)
 8006128:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800612c:	2b02      	cmp	r3, #2
 800612e:	d002      	beq.n	8006136 <remote_chassis_input+0x1e>
//		chassis_ctrl_data.enabled = 0;
		chassis_kill_ctrl();
 8006130:	f7ff fb6e 	bl	8005810 <chassis_kill_ctrl>
 8006134:	e053      	b.n	80061de <remote_chassis_input+0xc6>
	} else {
			chassis_ctrl_data.enabled = 1;
 8006136:	4b2e      	ldr	r3, [pc, #184]	@ (80061f0 <remote_chassis_input+0xd8>)
 8006138:	2201      	movs	r2, #1
 800613a:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 800613c:	f04f 0300 	mov.w	r3, #0
 8006140:	60bb      	str	r3, [r7, #8]
			float forward_input = 0.0;
 8006142:	f04f 0300 	mov.w	r3, #0
 8006146:	607b      	str	r3, [r7, #4]
			float yaw_input = 0.0;
 8006148:	f04f 0300 	mov.w	r3, #0
 800614c:	60fb      	str	r3, [r7, #12]

			forward_input = (float) g_remote_cmd.left_y / RC_LIMITS;
 800614e:	4b27      	ldr	r3, [pc, #156]	@ (80061ec <remote_chassis_input+0xd4>)
 8006150:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8006154:	ee07 3a90 	vmov	s15, r3
 8006158:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800615c:	eddf 6a25 	vldr	s13, [pc, #148]	@ 80061f4 <remote_chassis_input+0xdc>
 8006160:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006164:	edc7 7a01 	vstr	s15, [r7, #4]
			horizontal_input = (float) g_remote_cmd.left_x / RC_LIMITS;
 8006168:	4b20      	ldr	r3, [pc, #128]	@ (80061ec <remote_chassis_input+0xd4>)
 800616a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800616e:	ee07 3a90 	vmov	s15, r3
 8006172:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006176:	eddf 6a1f 	vldr	s13, [pc, #124]	@ 80061f4 <remote_chassis_input+0xdc>
 800617a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800617e:	edc7 7a02 	vstr	s15, [r7, #8]

//			yaw_input = (float)g_remote_cmd.right_x * CHASSIS_SPINSPIN_MAX/660;
//			yaw_input = 0;
			if (g_remote_cmd.left_switch == ge_LSW_STANDBY){
 8006182:	4b1a      	ldr	r3, [pc, #104]	@ (80061ec <remote_chassis_input+0xd4>)
 8006184:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006188:	2b02      	cmp	r3, #2
 800618a:	d11b      	bne.n	80061c4 <remote_chassis_input+0xac>
				if (abs(g_remote_cmd.side_dial) > 50 ){
 800618c:	4b17      	ldr	r3, [pc, #92]	@ (80061ec <remote_chassis_input+0xd4>)
 800618e:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8006192:	2b00      	cmp	r3, #0
 8006194:	bfb8      	it	lt
 8006196:	425b      	neglt	r3, r3
 8006198:	b29b      	uxth	r3, r3
 800619a:	2b32      	cmp	r3, #50	@ 0x32
 800619c:	d90d      	bls.n	80061ba <remote_chassis_input+0xa2>
					yaw_input = (float) g_remote_cmd.side_dial / RC_LIMITS;
 800619e:	4b13      	ldr	r3, [pc, #76]	@ (80061ec <remote_chassis_input+0xd4>)
 80061a0:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80061a4:	ee07 3a90 	vmov	s15, r3
 80061a8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80061ac:	eddf 6a11 	vldr	s13, [pc, #68]	@ 80061f4 <remote_chassis_input+0xdc>
 80061b0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80061b4:	edc7 7a03 	vstr	s15, [r7, #12]
 80061b8:	e008      	b.n	80061cc <remote_chassis_input+0xb4>
				}
				else {
				yaw_input = chassis_center_yaw();
 80061ba:	f7ff fafd 	bl	80057b8 <chassis_center_yaw>
 80061be:	ed87 0a03 	vstr	s0, [r7, #12]
 80061c2:	e003      	b.n	80061cc <remote_chassis_input+0xb4>
				}
			}
			else {
			yaw_input = chassis_center_yaw();
 80061c4:	f7ff faf8 	bl	80057b8 <chassis_center_yaw>
 80061c8:	ed87 0a03 	vstr	s0, [r7, #12]
			}
			//min value

//yaw_input = (float) remote_cmd.right_x * CHASSIS_YAW_MAX_RPM /RC_LIMITS;
			chassis_set_ctrl(forward_input, horizontal_input, yaw_input);
 80061cc:	ed97 1a03 	vldr	s2, [r7, #12]
 80061d0:	edd7 0a02 	vldr	s1, [r7, #8]
 80061d4:	ed97 0a01 	vldr	s0, [r7, #4]
 80061d8:	f7ff faf8 	bl	80057cc <chassis_set_ctrl>
	}
}
 80061dc:	bf00      	nop
 80061de:	bf00      	nop
 80061e0:	3710      	adds	r7, #16
 80061e2:	46bd      	mov	sp, r7
 80061e4:	bd80      	pop	{r7, pc}
 80061e6:	bf00      	nop
 80061e8:	20000009 	.word	0x20000009
 80061ec:	20000808 	.word	0x20000808
 80061f0:	200034c8 	.word	0x200034c8
 80061f4:	44250000 	.word	0x44250000

080061f8 <remote_gimbal_input>:

void remote_gimbal_input() {
 80061f8:	b580      	push	{r7, lr}
 80061fa:	b082      	sub	sp, #8
 80061fc:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 80061fe:	4b30      	ldr	r3, [pc, #192]	@ (80062c0 <remote_gimbal_input+0xc8>)
 8006200:	781b      	ldrb	r3, [r3, #0]
 8006202:	2b00      	cmp	r3, #0
 8006204:	d104      	bne.n	8006210 <remote_gimbal_input+0x18>
 8006206:	4b2f      	ldr	r3, [pc, #188]	@ (80062c4 <remote_gimbal_input+0xcc>)
 8006208:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800620c:	2b01      	cmp	r3, #1
 800620e:	d103      	bne.n	8006218 <remote_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006210:	4b2d      	ldr	r3, [pc, #180]	@ (80062c8 <remote_gimbal_input+0xd0>)
 8006212:	2200      	movs	r2, #0
 8006214:	735a      	strb	r2, [r3, #13]
 8006216:	e044      	b.n	80062a2 <remote_gimbal_input+0xaa>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8006218:	4b2b      	ldr	r3, [pc, #172]	@ (80062c8 <remote_gimbal_input+0xd0>)
 800621a:	2201      	movs	r2, #1
 800621c:	735a      	strb	r2, [r3, #13]
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 800621e:	4b29      	ldr	r3, [pc, #164]	@ (80062c4 <remote_gimbal_input+0xcc>)
 8006220:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8006224:	ee07 3a90 	vmov	s15, r3
 8006228:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800622c:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 80062cc <remote_gimbal_input+0xd4>
 8006230:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006234:	ee16 0a90 	vmov	r0, s13
 8006238:	f7fa f986 	bl	8000548 <__aeabi_f2d>
				* REMOTE_PITCH_SPEED;
 800623c:	a31c      	add	r3, pc, #112	@ (adr r3, 80062b0 <remote_gimbal_input+0xb8>)
 800623e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006242:	f7fa f9d9 	bl	80005f8 <__aeabi_dmul>
 8006246:	4602      	mov	r2, r0
 8006248:	460b      	mov	r3, r1
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 800624a:	4610      	mov	r0, r2
 800624c:	4619      	mov	r1, r3
 800624e:	f7fa fccb 	bl	8000be8 <__aeabi_d2f>
 8006252:	4603      	mov	r3, r0
 8006254:	607b      	str	r3, [r7, #4]
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 8006256:	4b1b      	ldr	r3, [pc, #108]	@ (80062c4 <remote_gimbal_input+0xcc>)
 8006258:	f9b3 3000 	ldrsh.w	r3, [r3]
 800625c:	ee07 3a90 	vmov	s15, r3
 8006260:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006264:	eddf 6a19 	vldr	s13, [pc, #100]	@ 80062cc <remote_gimbal_input+0xd4>
 8006268:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800626c:	eef1 7a67 	vneg.f32	s15, s15
 8006270:	ee17 3a90 	vmov	r3, s15
 8006274:	4618      	mov	r0, r3
 8006276:	f7fa f967 	bl	8000548 <__aeabi_f2d>
				* REMOTE_YAW_SPEED;
 800627a:	a30f      	add	r3, pc, #60	@ (adr r3, 80062b8 <remote_gimbal_input+0xc0>)
 800627c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006280:	f7fa f9ba 	bl	80005f8 <__aeabi_dmul>
 8006284:	4602      	mov	r2, r0
 8006286:	460b      	mov	r3, r1
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 8006288:	4610      	mov	r0, r2
 800628a:	4619      	mov	r1, r3
 800628c:	f7fa fcac 	bl	8000be8 <__aeabi_d2f>
 8006290:	4603      	mov	r3, r0
 8006292:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_remote, yaw_remote);
 8006294:	edd7 0a00 	vldr	s1, [r7]
 8006298:	ed97 0a01 	vldr	s0, [r7, #4]
 800629c:	f7ff fbf4 	bl	8005a88 <gimbal_turn_ang>
	}
}
 80062a0:	bf00      	nop
 80062a2:	bf00      	nop
 80062a4:	3708      	adds	r7, #8
 80062a6:	46bd      	mov	sp, r7
 80062a8:	bd80      	pop	{r7, pc}
 80062aa:	bf00      	nop
 80062ac:	f3af 8000 	nop.w
 80062b0:	9999999a 	.word	0x9999999a
 80062b4:	bfb99999 	.word	0xbfb99999
 80062b8:	9999999a 	.word	0x9999999a
 80062bc:	3fb99999 	.word	0x3fb99999
 80062c0:	20000009 	.word	0x20000009
 80062c4:	20000808 	.word	0x20000808
 80062c8:	200034e8 	.word	0x200034e8
 80062cc:	44250000 	.word	0x44250000

080062d0 <remote_launcher_control_input>:


void remote_launcher_control_input() {
 80062d0:	b480      	push	{r7}
 80062d2:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 80062d4:	4b1d      	ldr	r3, [pc, #116]	@ (800634c <remote_launcher_control_input+0x7c>)
 80062d6:	781b      	ldrb	r3, [r3, #0]
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d109      	bne.n	80062f0 <remote_launcher_control_input+0x20>
 80062dc:	4b1c      	ldr	r3, [pc, #112]	@ (8006350 <remote_launcher_control_input+0x80>)
 80062de:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80062e2:	2b01      	cmp	r3, #1
 80062e4:	d004      	beq.n	80062f0 <remote_launcher_control_input+0x20>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 80062e6:	4b1a      	ldr	r3, [pc, #104]	@ (8006350 <remote_launcher_control_input+0x80>)
 80062e8:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062ec:	2b01      	cmp	r3, #1
 80062ee:	d016      	beq.n	800631e <remote_launcher_control_input+0x4e>
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 80062f0:	4b17      	ldr	r3, [pc, #92]	@ (8006350 <remote_launcher_control_input+0x80>)
 80062f2:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062f6:	2b01      	cmp	r3, #1
 80062f8:	d002      	beq.n	8006300 <remote_launcher_control_input+0x30>
			launcher_safety_toggle = 0;
 80062fa:	4b16      	ldr	r3, [pc, #88]	@ (8006354 <remote_launcher_control_input+0x84>)
 80062fc:	2200      	movs	r2, #0
 80062fe:	701a      	strb	r2, [r3, #0]
		}
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8006300:	4b13      	ldr	r3, [pc, #76]	@ (8006350 <remote_launcher_control_input+0x80>)
 8006302:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006306:	2b01      	cmp	r3, #1
 8006308:	d102      	bne.n	8006310 <remote_launcher_control_input+0x40>
							launcher_ctrl_data.enabled = 0;
 800630a:	4b13      	ldr	r3, [pc, #76]	@ (8006358 <remote_launcher_control_input+0x88>)
 800630c:	2200      	movs	r2, #0
 800630e:	715a      	strb	r2, [r3, #5]
				}
//		launcher_ctrl_data.enabled = 0;
		launcher_ctrl_data.firing = 0;
 8006310:	4b11      	ldr	r3, [pc, #68]	@ (8006358 <remote_launcher_control_input+0x88>)
 8006312:	2200      	movs	r2, #0
 8006314:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8006316:	4b10      	ldr	r3, [pc, #64]	@ (8006358 <remote_launcher_control_input+0x88>)
 8006318:	2200      	movs	r2, #0
 800631a:	801a      	strh	r2, [r3, #0]
		} else {
			launcher_ctrl_data.firing = 0;
		}
	}

}
 800631c:	e011      	b.n	8006342 <remote_launcher_control_input+0x72>
		launcher_ctrl_data.enabled = 1;
 800631e:	4b0e      	ldr	r3, [pc, #56]	@ (8006358 <remote_launcher_control_input+0x88>)
 8006320:	2201      	movs	r2, #1
 8006322:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 8006324:	4b0c      	ldr	r3, [pc, #48]	@ (8006358 <remote_launcher_control_input+0x88>)
 8006326:	2201      	movs	r2, #1
 8006328:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 800632a:	4b09      	ldr	r3, [pc, #36]	@ (8006350 <remote_launcher_control_input+0x80>)
 800632c:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006330:	2b01      	cmp	r3, #1
 8006332:	d103      	bne.n	800633c <remote_launcher_control_input+0x6c>
			launcher_ctrl_data.firing = 1;
 8006334:	4b08      	ldr	r3, [pc, #32]	@ (8006358 <remote_launcher_control_input+0x88>)
 8006336:	2201      	movs	r2, #1
 8006338:	805a      	strh	r2, [r3, #2]
}
 800633a:	e002      	b.n	8006342 <remote_launcher_control_input+0x72>
			launcher_ctrl_data.firing = 0;
 800633c:	4b06      	ldr	r3, [pc, #24]	@ (8006358 <remote_launcher_control_input+0x88>)
 800633e:	2200      	movs	r2, #0
 8006340:	805a      	strh	r2, [r3, #2]
}
 8006342:	bf00      	nop
 8006344:	46bd      	mov	sp, r7
 8006346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800634a:	4770      	bx	lr
 800634c:	20000009 	.word	0x20000009
 8006350:	20000808 	.word	0x20000808
 8006354:	2000000a 	.word	0x2000000a
 8006358:	200034e0 	.word	0x200034e0

0800635c <aimbot_pid_init>:
		sbc_new_data = 0;
		control_reset();
	}
}

void aimbot_pid_init() {
 800635c:	b480      	push	{r7}
 800635e:	af00      	add	r7, sp, #0
	aimbot_offset.y_offset = 0;
 8006360:	4b1a      	ldr	r3, [pc, #104]	@ (80063cc <aimbot_pid_init+0x70>)
 8006362:	f04f 0200 	mov.w	r2, #0
 8006366:	605a      	str	r2, [r3, #4]
	aimbot_offset.x_offset = 0;
 8006368:	4b18      	ldr	r3, [pc, #96]	@ (80063cc <aimbot_pid_init+0x70>)
 800636a:	f04f 0200 	mov.w	r2, #0
 800636e:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.kp = AIMBOT_X_KP;
 8006370:	4b17      	ldr	r3, [pc, #92]	@ (80063d0 <aimbot_pid_init+0x74>)
 8006372:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8006376:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.ki = AIMBOT_X_KI;
 8006378:	4b15      	ldr	r3, [pc, #84]	@ (80063d0 <aimbot_pid_init+0x74>)
 800637a:	f04f 0200 	mov.w	r2, #0
 800637e:	605a      	str	r2, [r3, #4]
	aimbot_x_pid.kd = AIMBOT_X_KD;
 8006380:	4b13      	ldr	r3, [pc, #76]	@ (80063d0 <aimbot_pid_init+0x74>)
 8006382:	f04f 0200 	mov.w	r2, #0
 8006386:	609a      	str	r2, [r3, #8]
	aimbot_x_pid.max_out = 1.5;
 8006388:	4b11      	ldr	r3, [pc, #68]	@ (80063d0 <aimbot_pid_init+0x74>)
 800638a:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 800638e:	61da      	str	r2, [r3, #28]
	aimbot_x_pid.int_max = AIMBOT_KI_MAX;
 8006390:	4b0f      	ldr	r3, [pc, #60]	@ (80063d0 <aimbot_pid_init+0x74>)
 8006392:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8006396:	619a      	str	r2, [r3, #24]

	aimbot_y_pid.kp = AIMBOT_Y_KP;
 8006398:	4b0e      	ldr	r3, [pc, #56]	@ (80063d4 <aimbot_pid_init+0x78>)
 800639a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800639e:	601a      	str	r2, [r3, #0]
	aimbot_y_pid.ki = AIMBOT_Y_KI;
 80063a0:	4b0c      	ldr	r3, [pc, #48]	@ (80063d4 <aimbot_pid_init+0x78>)
 80063a2:	f04f 0200 	mov.w	r2, #0
 80063a6:	605a      	str	r2, [r3, #4]
	aimbot_y_pid.kd = AIMBOT_Y_KD;
 80063a8:	4b0a      	ldr	r3, [pc, #40]	@ (80063d4 <aimbot_pid_init+0x78>)
 80063aa:	f04f 0200 	mov.w	r2, #0
 80063ae:	609a      	str	r2, [r3, #8]
	aimbot_y_pid.max_out = 1.5;
 80063b0:	4b08      	ldr	r3, [pc, #32]	@ (80063d4 <aimbot_pid_init+0x78>)
 80063b2:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 80063b6:	61da      	str	r2, [r3, #28]
	aimbot_y_pid.int_max = AIMBOT_KI_MAX;
 80063b8:	4b06      	ldr	r3, [pc, #24]	@ (80063d4 <aimbot_pid_init+0x78>)
 80063ba:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80063be:	619a      	str	r2, [r3, #24]
}
 80063c0:	bf00      	nop
 80063c2:	46bd      	mov	sp, r7
 80063c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063c8:	4770      	bx	lr
 80063ca:	bf00      	nop
 80063cc:	200035b4 	.word	0x200035b4
 80063d0:	20003584 	.word	0x20003584
 80063d4:	20003554 	.word	0x20003554

080063d8 <hud_task>:
ref_inter_robot_data_t graphic_header;
graphic_data_struct_t graphic_data;
ref_frame_header_t send_header;
uint8_t char_buffer[30];

void hud_task(void *argument) {
 80063d8:	b580      	push	{r7, lr}
 80063da:	b084      	sub	sp, #16
 80063dc:	af00      	add	r7, sp, #0
 80063de:	6078      	str	r0, [r7, #4]

	enum drawings {
		spinspin, gearing, robot_state, motor_fault, refresh

	};
	while (ref_robot_data.robot_id == 0) {
 80063e0:	e002      	b.n	80063e8 <hud_task+0x10>
		vTaskDelay(10);
 80063e2:	200a      	movs	r0, #10
 80063e4:	f011 ffd2 	bl	801838c <vTaskDelay>
	while (ref_robot_data.robot_id == 0) {
 80063e8:	4b69      	ldr	r3, [pc, #420]	@ (8006590 <hud_task+0x1b8>)
 80063ea:	781b      	ldrb	r3, [r3, #0]
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d0f8      	beq.n	80063e2 <hud_task+0xa>
	}
	uint32_t refresh_timer = HAL_GetTick();
 80063f0:	f004 fe06 	bl	800b000 <HAL_GetTick>
 80063f4:	60f8      	str	r0, [r7, #12]

	uint8_t draw_state = spinspin;
 80063f6:	2300      	movs	r3, #0
 80063f8:	72fb      	strb	r3, [r7, #11]
	//draw all images
	vTaskDelay(1000);
 80063fa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80063fe:	f011 ffc5 	bl	801838c <vTaskDelay>
	clear_hud();
 8006402:	f000 fb29 	bl	8006a58 <clear_hud>
	vTaskDelay(150);
 8006406:	2096      	movs	r0, #150	@ 0x96
 8006408:	f011 ffc0 	bl	801838c <vTaskDelay>
	draw_spinspin(0);
 800640c:	2000      	movs	r0, #0
 800640e:	f000 f8c3 	bl	8006598 <draw_spinspin>
	vTaskDelay(150);
 8006412:	2096      	movs	r0, #150	@ 0x96
 8006414:	f011 ffba 	bl	801838c <vTaskDelay>
	draw_gearing(0);
 8006418:	2000      	movs	r0, #0
 800641a:	f000 f9f5 	bl	8006808 <draw_gearing>
	vTaskDelay(150);
 800641e:	2096      	movs	r0, #150	@ 0x96
 8006420:	f011 ffb4 	bl	801838c <vTaskDelay>
	while (1) {
		if (HAL_GetTick() - refresh_timer > 5000){
 8006424:	f004 fdec 	bl	800b000 <HAL_GetTick>
 8006428:	4602      	mov	r2, r0
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	1ad3      	subs	r3, r2, r3
 800642e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006432:	4293      	cmp	r3, r2
 8006434:	d904      	bls.n	8006440 <hud_task+0x68>
			draw_state = refresh;
 8006436:	2304      	movs	r3, #4
 8006438:	72fb      	strb	r3, [r7, #11]
			refresh_timer = HAL_GetTick();
 800643a:	f004 fde1 	bl	800b000 <HAL_GetTick>
 800643e:	60f8      	str	r0, [r7, #12]
		}
		switch (ref_robot_data.robot_id) {
 8006440:	4b53      	ldr	r3, [pc, #332]	@ (8006590 <hud_task+0x1b8>)
 8006442:	781b      	ldrb	r3, [r3, #0]
 8006444:	2b06      	cmp	r3, #6
 8006446:	dc27      	bgt.n	8006498 <hud_task+0xc0>
 8006448:	2b00      	cmp	r3, #0
 800644a:	dc13      	bgt.n	8006474 <hud_task+0x9c>
 800644c:	e065      	b.n	800651a <hud_task+0x142>
 800644e:	3b65      	subs	r3, #101	@ 0x65
 8006450:	2b05      	cmp	r3, #5
 8006452:	d862      	bhi.n	800651a <hud_task+0x142>
 8006454:	a201      	add	r2, pc, #4	@ (adr r2, 800645c <hud_task+0x84>)
 8006456:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800645a:	bf00      	nop
 800645c:	080064df 	.word	0x080064df
 8006460:	080064e9 	.word	0x080064e9
 8006464:	080064f3 	.word	0x080064f3
 8006468:	080064fd 	.word	0x080064fd
 800646c:	08006507 	.word	0x08006507
 8006470:	08006511 	.word	0x08006511
 8006474:	3b01      	subs	r3, #1
 8006476:	2b05      	cmp	r3, #5
 8006478:	d84f      	bhi.n	800651a <hud_task+0x142>
 800647a:	a201      	add	r2, pc, #4	@ (adr r2, 8006480 <hud_task+0xa8>)
 800647c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006480:	080064a3 	.word	0x080064a3
 8006484:	080064ad 	.word	0x080064ad
 8006488:	080064b7 	.word	0x080064b7
 800648c:	080064c1 	.word	0x080064c1
 8006490:	080064cb 	.word	0x080064cb
 8006494:	080064d5 	.word	0x080064d5
 8006498:	2b6a      	cmp	r3, #106	@ 0x6a
 800649a:	dc3e      	bgt.n	800651a <hud_task+0x142>
 800649c:	2b65      	cmp	r3, #101	@ 0x65
 800649e:	dad6      	bge.n	800644e <hud_task+0x76>
 80064a0:	e03b      	b.n	800651a <hud_task+0x142>
		case 1:
			g_client_id = 0x101;
 80064a2:	4b3c      	ldr	r3, [pc, #240]	@ (8006594 <hud_task+0x1bc>)
 80064a4:	f240 1201 	movw	r2, #257	@ 0x101
 80064a8:	801a      	strh	r2, [r3, #0]
			break;
 80064aa:	e03a      	b.n	8006522 <hud_task+0x14a>
		case 2:
			g_client_id = 0x102;
 80064ac:	4b39      	ldr	r3, [pc, #228]	@ (8006594 <hud_task+0x1bc>)
 80064ae:	f44f 7281 	mov.w	r2, #258	@ 0x102
 80064b2:	801a      	strh	r2, [r3, #0]
			break;
 80064b4:	e035      	b.n	8006522 <hud_task+0x14a>
		case 3:
			g_client_id = 0x103;
 80064b6:	4b37      	ldr	r3, [pc, #220]	@ (8006594 <hud_task+0x1bc>)
 80064b8:	f240 1203 	movw	r2, #259	@ 0x103
 80064bc:	801a      	strh	r2, [r3, #0]
			break;
 80064be:	e030      	b.n	8006522 <hud_task+0x14a>
		case 4:
			g_client_id = 0x104;
 80064c0:	4b34      	ldr	r3, [pc, #208]	@ (8006594 <hud_task+0x1bc>)
 80064c2:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80064c6:	801a      	strh	r2, [r3, #0]
			break;
 80064c8:	e02b      	b.n	8006522 <hud_task+0x14a>
		case 5:
			g_client_id = 0x105;
 80064ca:	4b32      	ldr	r3, [pc, #200]	@ (8006594 <hud_task+0x1bc>)
 80064cc:	f240 1205 	movw	r2, #261	@ 0x105
 80064d0:	801a      	strh	r2, [r3, #0]
			break;
 80064d2:	e026      	b.n	8006522 <hud_task+0x14a>
		case 6:
			g_client_id = 0x106;
 80064d4:	4b2f      	ldr	r3, [pc, #188]	@ (8006594 <hud_task+0x1bc>)
 80064d6:	f44f 7283 	mov.w	r2, #262	@ 0x106
 80064da:	801a      	strh	r2, [r3, #0]
			break;
 80064dc:	e021      	b.n	8006522 <hud_task+0x14a>

		case 101:
			g_client_id = 0x165;
 80064de:	4b2d      	ldr	r3, [pc, #180]	@ (8006594 <hud_task+0x1bc>)
 80064e0:	f240 1265 	movw	r2, #357	@ 0x165
 80064e4:	801a      	strh	r2, [r3, #0]
			break;
 80064e6:	e01c      	b.n	8006522 <hud_task+0x14a>
		case 102:
			g_client_id = 0x166;
 80064e8:	4b2a      	ldr	r3, [pc, #168]	@ (8006594 <hud_task+0x1bc>)
 80064ea:	f44f 72b3 	mov.w	r2, #358	@ 0x166
 80064ee:	801a      	strh	r2, [r3, #0]
			break;
 80064f0:	e017      	b.n	8006522 <hud_task+0x14a>
		case 103:
			g_client_id = 0x167;
 80064f2:	4b28      	ldr	r3, [pc, #160]	@ (8006594 <hud_task+0x1bc>)
 80064f4:	f240 1267 	movw	r2, #359	@ 0x167
 80064f8:	801a      	strh	r2, [r3, #0]
			break;
 80064fa:	e012      	b.n	8006522 <hud_task+0x14a>
		case 104:
			g_client_id = 0x168;
 80064fc:	4b25      	ldr	r3, [pc, #148]	@ (8006594 <hud_task+0x1bc>)
 80064fe:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 8006502:	801a      	strh	r2, [r3, #0]
			break;
 8006504:	e00d      	b.n	8006522 <hud_task+0x14a>
		case 105:
			g_client_id = 0x169;
 8006506:	4b23      	ldr	r3, [pc, #140]	@ (8006594 <hud_task+0x1bc>)
 8006508:	f240 1269 	movw	r2, #361	@ 0x169
 800650c:	801a      	strh	r2, [r3, #0]
			break;
 800650e:	e008      	b.n	8006522 <hud_task+0x14a>
		case 106:
			g_client_id = 0x16A;
 8006510:	4b20      	ldr	r3, [pc, #128]	@ (8006594 <hud_task+0x1bc>)
 8006512:	f44f 72b5 	mov.w	r2, #362	@ 0x16a
 8006516:	801a      	strh	r2, [r3, #0]
			break;
 8006518:	e003      	b.n	8006522 <hud_task+0x14a>
		default:
			g_client_id = 0;
 800651a:	4b1e      	ldr	r3, [pc, #120]	@ (8006594 <hud_task+0x1bc>)
 800651c:	2200      	movs	r2, #0
 800651e:	801a      	strh	r2, [r3, #0]
			break;
 8006520:	bf00      	nop

		}



		switch (draw_state) {
 8006522:	7afb      	ldrb	r3, [r7, #11]
 8006524:	2b04      	cmp	r3, #4
 8006526:	d82d      	bhi.n	8006584 <hud_task+0x1ac>
 8006528:	a201      	add	r2, pc, #4	@ (adr r2, 8006530 <hud_task+0x158>)
 800652a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800652e:	bf00      	nop
 8006530:	08006545 	.word	0x08006545
 8006534:	08006551 	.word	0x08006551
 8006538:	08006585 	.word	0x08006585
 800653c:	08006585 	.word	0x08006585
 8006540:	0800655d 	.word	0x0800655d
		case spinspin:
			draw_spinspin(1);
 8006544:	2001      	movs	r0, #1
 8006546:	f000 f827 	bl	8006598 <draw_spinspin>
			draw_state = gearing;
 800654a:	2301      	movs	r3, #1
 800654c:	72fb      	strb	r3, [r7, #11]
			break;
 800654e:	e01a      	b.n	8006586 <hud_task+0x1ae>
		case gearing:
			draw_gearing(1);
 8006550:	2001      	movs	r0, #1
 8006552:	f000 f959 	bl	8006808 <draw_gearing>
			draw_state = spinspin;
 8006556:	2300      	movs	r3, #0
 8006558:	72fb      	strb	r3, [r7, #11]
			break;
 800655a:	e014      	b.n	8006586 <hud_task+0x1ae>
		case robot_state:
			break;
		case motor_fault:
			break;
		case refresh:
			clear_hud();
 800655c:	f000 fa7c 	bl	8006a58 <clear_hud>
			vTaskDelay(150);
 8006560:	2096      	movs	r0, #150	@ 0x96
 8006562:	f011 ff13 	bl	801838c <vTaskDelay>
			draw_spinspin(0);
 8006566:	2000      	movs	r0, #0
 8006568:	f000 f816 	bl	8006598 <draw_spinspin>
			vTaskDelay(150);
 800656c:	2096      	movs	r0, #150	@ 0x96
 800656e:	f011 ff0d 	bl	801838c <vTaskDelay>
			draw_gearing(0);
 8006572:	2000      	movs	r0, #0
 8006574:	f000 f948 	bl	8006808 <draw_gearing>
			vTaskDelay(150);
 8006578:	2096      	movs	r0, #150	@ 0x96
 800657a:	f011 ff07 	bl	801838c <vTaskDelay>
			draw_state = spinspin;
 800657e:	2300      	movs	r3, #0
 8006580:	72fb      	strb	r3, [r7, #11]
			break;
 8006582:	e000      	b.n	8006586 <hud_task+0x1ae>
		default:
			break;
 8006584:	bf00      	nop
		}
		vTaskDelay(150);
 8006586:	2096      	movs	r0, #150	@ 0x96
 8006588:	f011 ff00 	bl	801838c <vTaskDelay>
		if (HAL_GetTick() - refresh_timer > 5000){
 800658c:	e74a      	b.n	8006424 <hud_task+0x4c>
 800658e:	bf00      	nop
 8006590:	20003850 	.word	0x20003850
 8006594:	200035bc 	.word	0x200035bc

08006598 <draw_spinspin>:
//	else if (&buffer_size > HUD_BUFFER_SIZE){
//		return num_obj;
//	}
}

void draw_spinspin(uint8_t modify) {
 8006598:	b590      	push	{r4, r7, lr}
 800659a:	b085      	sub	sp, #20
 800659c:	af00      	add	r7, sp, #0
 800659e:	4603      	mov	r3, r0
 80065a0:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 80065a2:	2300      	movs	r3, #0
 80065a4:	60bb      	str	r3, [r7, #8]
	uint8_t char_len = 0;
 80065a6:	2300      	movs	r3, #0
 80065a8:	73fb      	strb	r3, [r7, #15]
	curr_pos = 0;
 80065aa:	2300      	movs	r3, #0
 80065ac:	60bb      	str	r3, [r7, #8]
	if (g_spinspin_mode == 0) {
 80065ae:	4b8a      	ldr	r3, [pc, #552]	@ (80067d8 <draw_spinspin+0x240>)
 80065b0:	681b      	ldr	r3, [r3, #0]
 80065b2:	2b00      	cmp	r3, #0
 80065b4:	d10d      	bne.n	80065d2 <draw_spinspin+0x3a>
		graphic_data.color = 4; //orange
 80065b6:	4a89      	ldr	r2, [pc, #548]	@ (80067dc <draw_spinspin+0x244>)
 80065b8:	7913      	ldrb	r3, [r2, #4]
 80065ba:	2104      	movs	r1, #4
 80065bc:	f361 0385 	bfi	r3, r1, #2, #4
 80065c0:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN OFF");
 80065c2:	4a87      	ldr	r2, [pc, #540]	@ (80067e0 <draw_spinspin+0x248>)
 80065c4:	211e      	movs	r1, #30
 80065c6:	4887      	ldr	r0, [pc, #540]	@ (80067e4 <draw_spinspin+0x24c>)
 80065c8:	f014 fbb4 	bl	801ad34 <snprintf>
 80065cc:	4603      	mov	r3, r0
 80065ce:	73fb      	strb	r3, [r7, #15]
 80065d0:	e00c      	b.n	80065ec <draw_spinspin+0x54>
	} else {
		graphic_data.color = 3; //orange
 80065d2:	4a82      	ldr	r2, [pc, #520]	@ (80067dc <draw_spinspin+0x244>)
 80065d4:	7913      	ldrb	r3, [r2, #4]
 80065d6:	2103      	movs	r1, #3
 80065d8:	f361 0385 	bfi	r3, r1, #2, #4
 80065dc:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN ON");
 80065de:	4a82      	ldr	r2, [pc, #520]	@ (80067e8 <draw_spinspin+0x250>)
 80065e0:	211e      	movs	r1, #30
 80065e2:	4880      	ldr	r0, [pc, #512]	@ (80067e4 <draw_spinspin+0x24c>)
 80065e4:	f014 fba6 	bl	801ad34 <snprintf>
 80065e8:	4603      	mov	r3, r0
 80065ea:	73fb      	strb	r3, [r7, #15]
	}
	send_header.start_frame = 0xA5;
 80065ec:	4b7f      	ldr	r3, [pc, #508]	@ (80067ec <draw_spinspin+0x254>)
 80065ee:	22a5      	movs	r2, #165	@ 0xa5
 80065f0:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 80065f2:	4b7e      	ldr	r3, [pc, #504]	@ (80067ec <draw_spinspin+0x254>)
 80065f4:	2200      	movs	r2, #0
 80065f6:	f042 0201 	orr.w	r2, r2, #1
 80065fa:	715a      	strb	r2, [r3, #5]
 80065fc:	2200      	movs	r2, #0
 80065fe:	f042 0203 	orr.w	r2, r2, #3
 8006602:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8006604:	4b7a      	ldr	r3, [pc, #488]	@ (80067f0 <draw_spinspin+0x258>)
 8006606:	781b      	ldrb	r3, [r3, #0]
 8006608:	1c5a      	adds	r2, r3, #1
 800660a:	b2d1      	uxtb	r1, r2
 800660c:	4a78      	ldr	r2, [pc, #480]	@ (80067f0 <draw_spinspin+0x258>)
 800660e:	7011      	strb	r1, [r2, #0]
 8006610:	4a76      	ldr	r2, [pc, #472]	@ (80067ec <draw_spinspin+0x254>)
 8006612:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8006614:	7bfb      	ldrb	r3, [r7, #15]
 8006616:	b29b      	uxth	r3, r3
 8006618:	3315      	adds	r3, #21
 800661a:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 800661c:	4b73      	ldr	r3, [pc, #460]	@ (80067ec <draw_spinspin+0x254>)
 800661e:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8006622:	4b73      	ldr	r3, [pc, #460]	@ (80067f0 <draw_spinspin+0x258>)
 8006624:	781b      	ldrb	r3, [r3, #0]
 8006626:	1c5a      	adds	r2, r3, #1
 8006628:	b2d1      	uxtb	r1, r2
 800662a:	4a71      	ldr	r2, [pc, #452]	@ (80067f0 <draw_spinspin+0x258>)
 800662c:	7011      	strb	r1, [r2, #0]
 800662e:	4a6f      	ldr	r2, [pc, #444]	@ (80067ec <draw_spinspin+0x254>)
 8006630:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8006632:	68bb      	ldr	r3, [r7, #8]
 8006634:	4a6f      	ldr	r2, [pc, #444]	@ (80067f4 <draw_spinspin+0x25c>)
 8006636:	4413      	add	r3, r2
 8006638:	4a6c      	ldr	r2, [pc, #432]	@ (80067ec <draw_spinspin+0x254>)
 800663a:	6810      	ldr	r0, [r2, #0]
 800663c:	6018      	str	r0, [r3, #0]
 800663e:	8891      	ldrh	r1, [r2, #4]
 8006640:	7992      	ldrb	r2, [r2, #6]
 8006642:	8099      	strh	r1, [r3, #4]
 8006644:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8006646:	68bb      	ldr	r3, [r7, #8]
 8006648:	3307      	adds	r3, #7
 800664a:	60bb      	str	r3, [r7, #8]
	append_CRC8_check_sum(tx_buffer, 5);
 800664c:	2105      	movs	r1, #5
 800664e:	4869      	ldr	r0, [pc, #420]	@ (80067f4 <draw_spinspin+0x25c>)
 8006650:	f7fa fcdb 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8006654:	4b68      	ldr	r3, [pc, #416]	@ (80067f8 <draw_spinspin+0x260>)
 8006656:	f44f 7288 	mov.w	r2, #272	@ 0x110
 800665a:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 800665c:	4b67      	ldr	r3, [pc, #412]	@ (80067fc <draw_spinspin+0x264>)
 800665e:	781b      	ldrb	r3, [r3, #0]
 8006660:	461a      	mov	r2, r3
 8006662:	4b65      	ldr	r3, [pc, #404]	@ (80067f8 <draw_spinspin+0x260>)
 8006664:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 8006666:	4b66      	ldr	r3, [pc, #408]	@ (8006800 <draw_spinspin+0x268>)
 8006668:	881a      	ldrh	r2, [r3, #0]
 800666a:	4b63      	ldr	r3, [pc, #396]	@ (80067f8 <draw_spinspin+0x260>)
 800666c:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 800666e:	68bb      	ldr	r3, [r7, #8]
 8006670:	4a60      	ldr	r2, [pc, #384]	@ (80067f4 <draw_spinspin+0x25c>)
 8006672:	4413      	add	r3, r2
 8006674:	4a60      	ldr	r2, [pc, #384]	@ (80067f8 <draw_spinspin+0x260>)
 8006676:	6810      	ldr	r0, [r2, #0]
 8006678:	6018      	str	r0, [r3, #0]
 800667a:	8892      	ldrh	r2, [r2, #4]
 800667c:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 800667e:	68bb      	ldr	r3, [r7, #8]
 8006680:	3306      	adds	r3, #6
 8006682:	60bb      	str	r3, [r7, #8]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 8006684:	4b55      	ldr	r3, [pc, #340]	@ (80067dc <draw_spinspin+0x244>)
 8006686:	2200      	movs	r2, #0
 8006688:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 800668a:	4b54      	ldr	r3, [pc, #336]	@ (80067dc <draw_spinspin+0x244>)
 800668c:	2200      	movs	r2, #0
 800668e:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 1;
 8006690:	4b52      	ldr	r3, [pc, #328]	@ (80067dc <draw_spinspin+0x244>)
 8006692:	2201      	movs	r2, #1
 8006694:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 8006696:	4b51      	ldr	r3, [pc, #324]	@ (80067dc <draw_spinspin+0x244>)
 8006698:	78da      	ldrb	r2, [r3, #3]
 800669a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800669e:	70da      	strb	r2, [r3, #3]
 80066a0:	791a      	ldrb	r2, [r3, #4]
 80066a2:	f022 0203 	bic.w	r2, r2, #3
 80066a6:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 80066a8:	79fb      	ldrb	r3, [r7, #7]
 80066aa:	2b01      	cmp	r3, #1
 80066ac:	d106      	bne.n	80066bc <draw_spinspin+0x124>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80066ae:	4a4b      	ldr	r2, [pc, #300]	@ (80067dc <draw_spinspin+0x244>)
 80066b0:	78d3      	ldrb	r3, [r2, #3]
 80066b2:	2102      	movs	r1, #2
 80066b4:	f361 0302 	bfi	r3, r1, #0, #3
 80066b8:	70d3      	strb	r3, [r2, #3]
 80066ba:	e005      	b.n	80066c8 <draw_spinspin+0x130>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80066bc:	4a47      	ldr	r2, [pc, #284]	@ (80067dc <draw_spinspin+0x244>)
 80066be:	78d3      	ldrb	r3, [r2, #3]
 80066c0:	2101      	movs	r1, #1
 80066c2:	f361 0302 	bfi	r3, r1, #0, #3
 80066c6:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 80066c8:	4a44      	ldr	r2, [pc, #272]	@ (80067dc <draw_spinspin+0x244>)
 80066ca:	78d3      	ldrb	r3, [r2, #3]
 80066cc:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80066d0:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 80066d2:	4b42      	ldr	r3, [pc, #264]	@ (80067dc <draw_spinspin+0x244>)
 80066d4:	791a      	ldrb	r2, [r3, #4]
 80066d6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80066da:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 80066de:	711a      	strb	r2, [r3, #4]
 80066e0:	795a      	ldrb	r2, [r3, #5]
 80066e2:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80066e6:	f042 0207 	orr.w	r2, r2, #7
 80066ea:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 80066ec:	7bfb      	ldrb	r3, [r7, #15]
 80066ee:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80066f2:	b29a      	uxth	r2, r3
 80066f4:	4b39      	ldr	r3, [pc, #228]	@ (80067dc <draw_spinspin+0x244>)
 80066f6:	f002 0101 	and.w	r1, r2, #1
 80066fa:	01cc      	lsls	r4, r1, #7
 80066fc:	7959      	ldrb	r1, [r3, #5]
 80066fe:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 8006702:	4608      	mov	r0, r1
 8006704:	4621      	mov	r1, r4
 8006706:	4301      	orrs	r1, r0
 8006708:	7159      	strb	r1, [r3, #5]
 800670a:	0852      	lsrs	r2, r2, #1
 800670c:	b292      	uxth	r2, r2
 800670e:	b2d2      	uxtb	r2, r2
 8006710:	2100      	movs	r1, #0
 8006712:	430a      	orrs	r2, r1
 8006714:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 8006716:	4b31      	ldr	r3, [pc, #196]	@ (80067dc <draw_spinspin+0x244>)
 8006718:	2200      	movs	r2, #0
 800671a:	f042 0207 	orr.w	r2, r2, #7
 800671e:	71da      	strb	r2, [r3, #7]
 8006720:	7a1a      	ldrb	r2, [r3, #8]
 8006722:	f022 0203 	bic.w	r2, r2, #3
 8006726:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8006728:	4b2c      	ldr	r3, [pc, #176]	@ (80067dc <draw_spinspin+0x244>)
 800672a:	78da      	ldrb	r2, [r3, #3]
 800672c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006730:	70da      	strb	r2, [r3, #3]
 8006732:	791a      	ldrb	r2, [r3, #4]
 8006734:	f022 0203 	bic.w	r2, r2, #3
 8006738:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 800673a:	4b28      	ldr	r3, [pc, #160]	@ (80067dc <draw_spinspin+0x244>)
 800673c:	7a1a      	ldrb	r2, [r3, #8]
 800673e:	f002 0203 	and.w	r2, r2, #3
 8006742:	f062 0237 	orn	r2, r2, #55	@ 0x37
 8006746:	721a      	strb	r2, [r3, #8]
 8006748:	7a5a      	ldrb	r2, [r3, #9]
 800674a:	f022 021f 	bic.w	r2, r2, #31
 800674e:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 600;
 8006750:	4b22      	ldr	r3, [pc, #136]	@ (80067dc <draw_spinspin+0x244>)
 8006752:	7a5a      	ldrb	r2, [r3, #9]
 8006754:	f002 021f 	and.w	r2, r2, #31
 8006758:	725a      	strb	r2, [r3, #9]
 800675a:	2200      	movs	r2, #0
 800675c:	f042 024b 	orr.w	r2, r2, #75	@ 0x4b
 8006760:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 8006762:	68bb      	ldr	r3, [r7, #8]
 8006764:	4a23      	ldr	r2, [pc, #140]	@ (80067f4 <draw_spinspin+0x25c>)
 8006766:	4413      	add	r3, r2
 8006768:	4a1c      	ldr	r2, [pc, #112]	@ (80067dc <draw_spinspin+0x244>)
 800676a:	461c      	mov	r4, r3
 800676c:	4613      	mov	r3, r2
 800676e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006770:	6020      	str	r0, [r4, #0]
 8006772:	6061      	str	r1, [r4, #4]
 8006774:	60a2      	str	r2, [r4, #8]
 8006776:	881a      	ldrh	r2, [r3, #0]
 8006778:	789b      	ldrb	r3, [r3, #2]
 800677a:	81a2      	strh	r2, [r4, #12]
 800677c:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 800677e:	68bb      	ldr	r3, [r7, #8]
 8006780:	330f      	adds	r3, #15
 8006782:	60bb      	str	r3, [r7, #8]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8006784:	68bb      	ldr	r3, [r7, #8]
 8006786:	4a1b      	ldr	r2, [pc, #108]	@ (80067f4 <draw_spinspin+0x25c>)
 8006788:	4413      	add	r3, r2
 800678a:	7bfa      	ldrb	r2, [r7, #15]
 800678c:	4915      	ldr	r1, [pc, #84]	@ (80067e4 <draw_spinspin+0x24c>)
 800678e:	4618      	mov	r0, r3
 8006790:	f014 fbf0 	bl	801af74 <memcpy>
	curr_pos += char_len;
 8006794:	7bfb      	ldrb	r3, [r7, #15]
 8006796:	68ba      	ldr	r2, [r7, #8]
 8006798:	4413      	add	r3, r2
 800679a:	60bb      	str	r3, [r7, #8]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 800679c:	68bb      	ldr	r3, [r7, #8]
 800679e:	3302      	adds	r3, #2
 80067a0:	4619      	mov	r1, r3
 80067a2:	4814      	ldr	r0, [pc, #80]	@ (80067f4 <draw_spinspin+0x25c>)
 80067a4:	f7fa fcb4 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80067a8:	e002      	b.n	80067b0 <draw_spinspin+0x218>
		vTaskDelay(1);
 80067aa:	2001      	movs	r0, #1
 80067ac:	f011 fdee 	bl	801838c <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80067b0:	4b14      	ldr	r3, [pc, #80]	@ (8006804 <draw_spinspin+0x26c>)
 80067b2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80067b6:	b2db      	uxtb	r3, r3
 80067b8:	2b20      	cmp	r3, #32
 80067ba:	d1f6      	bne.n	80067aa <draw_spinspin+0x212>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 80067bc:	68bb      	ldr	r3, [r7, #8]
 80067be:	b29b      	uxth	r3, r3
 80067c0:	3302      	adds	r3, #2
 80067c2:	b29b      	uxth	r3, r3
 80067c4:	461a      	mov	r2, r3
 80067c6:	490b      	ldr	r1, [pc, #44]	@ (80067f4 <draw_spinspin+0x25c>)
 80067c8:	480e      	ldr	r0, [pc, #56]	@ (8006804 <draw_spinspin+0x26c>)
 80067ca:	f00b fe77 	bl	80124bc <HAL_UART_Transmit_DMA>
}
 80067ce:	bf00      	nop
 80067d0:	3714      	adds	r7, #20
 80067d2:	46bd      	mov	sp, r7
 80067d4:	bd90      	pop	{r4, r7, pc}
 80067d6:	bf00      	nop
 80067d8:	2000353c 	.word	0x2000353c
 80067dc:	200036c8 	.word	0x200036c8
 80067e0:	08020ea4 	.word	0x08020ea4
 80067e4:	200036e0 	.word	0x200036e0
 80067e8:	08020eb0 	.word	0x08020eb0
 80067ec:	200036d8 	.word	0x200036d8
 80067f0:	200038b4 	.word	0x200038b4
 80067f4:	200035c0 	.word	0x200035c0
 80067f8:	200036c0 	.word	0x200036c0
 80067fc:	20003850 	.word	0x20003850
 8006800:	200035bc 	.word	0x200035bc
 8006804:	20001c70 	.word	0x20001c70

08006808 <draw_gearing>:

void draw_gearing(uint8_t modify) {
 8006808:	b590      	push	{r4, r7, lr}
 800680a:	b085      	sub	sp, #20
 800680c:	af00      	add	r7, sp, #0
 800680e:	4603      	mov	r3, r0
 8006810:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 8006812:	2300      	movs	r3, #0
 8006814:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 8006816:	2300      	movs	r3, #0
 8006818:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 800681a:	2300      	movs	r3, #0
 800681c:	60fb      	str	r3, [r7, #12]
	graphic_data.color = 6; //CYAN
 800681e:	4a83      	ldr	r2, [pc, #524]	@ (8006a2c <draw_gearing+0x224>)
 8006820:	7913      	ldrb	r3, [r2, #4]
 8006822:	2106      	movs	r1, #6
 8006824:	f361 0385 	bfi	r3, r1, #2, #4
 8006828:	7113      	strb	r3, [r2, #4]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 800682a:	4b81      	ldr	r3, [pc, #516]	@ (8006a30 <draw_gearing+0x228>)
 800682c:	781b      	ldrb	r3, [r3, #0]
 800682e:	4a81      	ldr	r2, [pc, #516]	@ (8006a34 <draw_gearing+0x22c>)
 8006830:	211e      	movs	r1, #30
 8006832:	4881      	ldr	r0, [pc, #516]	@ (8006a38 <draw_gearing+0x230>)
 8006834:	f014 fa7e 	bl	801ad34 <snprintf>
 8006838:	4603      	mov	r3, r0
 800683a:	72fb      	strb	r3, [r7, #11]
	send_header.start_frame = 0xA5;
 800683c:	4b7f      	ldr	r3, [pc, #508]	@ (8006a3c <draw_gearing+0x234>)
 800683e:	22a5      	movs	r2, #165	@ 0xa5
 8006840:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8006842:	4b7e      	ldr	r3, [pc, #504]	@ (8006a3c <draw_gearing+0x234>)
 8006844:	2200      	movs	r2, #0
 8006846:	f042 0201 	orr.w	r2, r2, #1
 800684a:	715a      	strb	r2, [r3, #5]
 800684c:	2200      	movs	r2, #0
 800684e:	f042 0203 	orr.w	r2, r2, #3
 8006852:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8006854:	4b7a      	ldr	r3, [pc, #488]	@ (8006a40 <draw_gearing+0x238>)
 8006856:	781b      	ldrb	r3, [r3, #0]
 8006858:	1c5a      	adds	r2, r3, #1
 800685a:	b2d1      	uxtb	r1, r2
 800685c:	4a78      	ldr	r2, [pc, #480]	@ (8006a40 <draw_gearing+0x238>)
 800685e:	7011      	strb	r1, [r2, #0]
 8006860:	4a76      	ldr	r2, [pc, #472]	@ (8006a3c <draw_gearing+0x234>)
 8006862:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8006864:	7afb      	ldrb	r3, [r7, #11]
 8006866:	b29b      	uxth	r3, r3
 8006868:	3315      	adds	r3, #21
 800686a:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 800686c:	4b73      	ldr	r3, [pc, #460]	@ (8006a3c <draw_gearing+0x234>)
 800686e:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8006872:	4b73      	ldr	r3, [pc, #460]	@ (8006a40 <draw_gearing+0x238>)
 8006874:	781b      	ldrb	r3, [r3, #0]
 8006876:	1c5a      	adds	r2, r3, #1
 8006878:	b2d1      	uxtb	r1, r2
 800687a:	4a71      	ldr	r2, [pc, #452]	@ (8006a40 <draw_gearing+0x238>)
 800687c:	7011      	strb	r1, [r2, #0]
 800687e:	4a6f      	ldr	r2, [pc, #444]	@ (8006a3c <draw_gearing+0x234>)
 8006880:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	4a6f      	ldr	r2, [pc, #444]	@ (8006a44 <draw_gearing+0x23c>)
 8006886:	4413      	add	r3, r2
 8006888:	4a6c      	ldr	r2, [pc, #432]	@ (8006a3c <draw_gearing+0x234>)
 800688a:	6810      	ldr	r0, [r2, #0]
 800688c:	6018      	str	r0, [r3, #0]
 800688e:	8891      	ldrh	r1, [r2, #4]
 8006890:	7992      	ldrb	r2, [r2, #6]
 8006892:	8099      	strh	r1, [r3, #4]
 8006894:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	3307      	adds	r3, #7
 800689a:	60fb      	str	r3, [r7, #12]
	append_CRC8_check_sum(tx_buffer, 5);
 800689c:	2105      	movs	r1, #5
 800689e:	4869      	ldr	r0, [pc, #420]	@ (8006a44 <draw_gearing+0x23c>)
 80068a0:	f7fa fbb3 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 80068a4:	4b68      	ldr	r3, [pc, #416]	@ (8006a48 <draw_gearing+0x240>)
 80068a6:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80068aa:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 80068ac:	4b67      	ldr	r3, [pc, #412]	@ (8006a4c <draw_gearing+0x244>)
 80068ae:	781b      	ldrb	r3, [r3, #0]
 80068b0:	461a      	mov	r2, r3
 80068b2:	4b65      	ldr	r3, [pc, #404]	@ (8006a48 <draw_gearing+0x240>)
 80068b4:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 80068b6:	4b66      	ldr	r3, [pc, #408]	@ (8006a50 <draw_gearing+0x248>)
 80068b8:	881a      	ldrh	r2, [r3, #0]
 80068ba:	4b63      	ldr	r3, [pc, #396]	@ (8006a48 <draw_gearing+0x240>)
 80068bc:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 80068be:	68fb      	ldr	r3, [r7, #12]
 80068c0:	4a60      	ldr	r2, [pc, #384]	@ (8006a44 <draw_gearing+0x23c>)
 80068c2:	4413      	add	r3, r2
 80068c4:	4a60      	ldr	r2, [pc, #384]	@ (8006a48 <draw_gearing+0x240>)
 80068c6:	6810      	ldr	r0, [r2, #0]
 80068c8:	6018      	str	r0, [r3, #0]
 80068ca:	8892      	ldrh	r2, [r2, #4]
 80068cc:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 80068ce:	68fb      	ldr	r3, [r7, #12]
 80068d0:	3306      	adds	r3, #6
 80068d2:	60fb      	str	r3, [r7, #12]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 80068d4:	4b55      	ldr	r3, [pc, #340]	@ (8006a2c <draw_gearing+0x224>)
 80068d6:	2200      	movs	r2, #0
 80068d8:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 80068da:	4b54      	ldr	r3, [pc, #336]	@ (8006a2c <draw_gearing+0x224>)
 80068dc:	2200      	movs	r2, #0
 80068de:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 2;
 80068e0:	4b52      	ldr	r3, [pc, #328]	@ (8006a2c <draw_gearing+0x224>)
 80068e2:	2202      	movs	r2, #2
 80068e4:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 80068e6:	4b51      	ldr	r3, [pc, #324]	@ (8006a2c <draw_gearing+0x224>)
 80068e8:	78da      	ldrb	r2, [r3, #3]
 80068ea:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80068ee:	70da      	strb	r2, [r3, #3]
 80068f0:	791a      	ldrb	r2, [r3, #4]
 80068f2:	f022 0203 	bic.w	r2, r2, #3
 80068f6:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 80068f8:	79fb      	ldrb	r3, [r7, #7]
 80068fa:	2b01      	cmp	r3, #1
 80068fc:	d106      	bne.n	800690c <draw_gearing+0x104>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80068fe:	4a4b      	ldr	r2, [pc, #300]	@ (8006a2c <draw_gearing+0x224>)
 8006900:	78d3      	ldrb	r3, [r2, #3]
 8006902:	2102      	movs	r1, #2
 8006904:	f361 0302 	bfi	r3, r1, #0, #3
 8006908:	70d3      	strb	r3, [r2, #3]
 800690a:	e005      	b.n	8006918 <draw_gearing+0x110>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 800690c:	4a47      	ldr	r2, [pc, #284]	@ (8006a2c <draw_gearing+0x224>)
 800690e:	78d3      	ldrb	r3, [r2, #3]
 8006910:	2101      	movs	r1, #1
 8006912:	f361 0302 	bfi	r3, r1, #0, #3
 8006916:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8006918:	4a44      	ldr	r2, [pc, #272]	@ (8006a2c <draw_gearing+0x224>)
 800691a:	78d3      	ldrb	r3, [r2, #3]
 800691c:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8006920:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 8006922:	4b42      	ldr	r3, [pc, #264]	@ (8006a2c <draw_gearing+0x224>)
 8006924:	791a      	ldrb	r2, [r3, #4]
 8006926:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800692a:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 800692e:	711a      	strb	r2, [r3, #4]
 8006930:	795a      	ldrb	r2, [r3, #5]
 8006932:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8006936:	f042 0207 	orr.w	r2, r2, #7
 800693a:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 800693c:	7afb      	ldrb	r3, [r7, #11]
 800693e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006942:	b29a      	uxth	r2, r3
 8006944:	4b39      	ldr	r3, [pc, #228]	@ (8006a2c <draw_gearing+0x224>)
 8006946:	f002 0101 	and.w	r1, r2, #1
 800694a:	01cc      	lsls	r4, r1, #7
 800694c:	7959      	ldrb	r1, [r3, #5]
 800694e:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 8006952:	4608      	mov	r0, r1
 8006954:	4621      	mov	r1, r4
 8006956:	4301      	orrs	r1, r0
 8006958:	7159      	strb	r1, [r3, #5]
 800695a:	0852      	lsrs	r2, r2, #1
 800695c:	b292      	uxth	r2, r2
 800695e:	b2d2      	uxtb	r2, r2
 8006960:	2100      	movs	r1, #0
 8006962:	430a      	orrs	r2, r1
 8006964:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 8006966:	4b31      	ldr	r3, [pc, #196]	@ (8006a2c <draw_gearing+0x224>)
 8006968:	2200      	movs	r2, #0
 800696a:	f042 0207 	orr.w	r2, r2, #7
 800696e:	71da      	strb	r2, [r3, #7]
 8006970:	7a1a      	ldrb	r2, [r3, #8]
 8006972:	f022 0203 	bic.w	r2, r2, #3
 8006976:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8006978:	4b2c      	ldr	r3, [pc, #176]	@ (8006a2c <draw_gearing+0x224>)
 800697a:	78da      	ldrb	r2, [r3, #3]
 800697c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006980:	70da      	strb	r2, [r3, #3]
 8006982:	791a      	ldrb	r2, [r3, #4]
 8006984:	f022 0203 	bic.w	r2, r2, #3
 8006988:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 800698a:	4b28      	ldr	r3, [pc, #160]	@ (8006a2c <draw_gearing+0x224>)
 800698c:	7a1a      	ldrb	r2, [r3, #8]
 800698e:	f002 0203 	and.w	r2, r2, #3
 8006992:	f062 0237 	orn	r2, r2, #55	@ 0x37
 8006996:	721a      	strb	r2, [r3, #8]
 8006998:	7a5a      	ldrb	r2, [r3, #9]
 800699a:	f022 021f 	bic.w	r2, r2, #31
 800699e:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 650;
 80069a0:	4b22      	ldr	r3, [pc, #136]	@ (8006a2c <draw_gearing+0x224>)
 80069a2:	7a5a      	ldrb	r2, [r3, #9]
 80069a4:	f002 021f 	and.w	r2, r2, #31
 80069a8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069ac:	725a      	strb	r2, [r3, #9]
 80069ae:	2200      	movs	r2, #0
 80069b0:	f042 0251 	orr.w	r2, r2, #81	@ 0x51
 80069b4:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	4a22      	ldr	r2, [pc, #136]	@ (8006a44 <draw_gearing+0x23c>)
 80069ba:	4413      	add	r3, r2
 80069bc:	4a1b      	ldr	r2, [pc, #108]	@ (8006a2c <draw_gearing+0x224>)
 80069be:	461c      	mov	r4, r3
 80069c0:	4613      	mov	r3, r2
 80069c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80069c4:	6020      	str	r0, [r4, #0]
 80069c6:	6061      	str	r1, [r4, #4]
 80069c8:	60a2      	str	r2, [r4, #8]
 80069ca:	881a      	ldrh	r2, [r3, #0]
 80069cc:	789b      	ldrb	r3, [r3, #2]
 80069ce:	81a2      	strh	r2, [r4, #12]
 80069d0:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 80069d2:	68fb      	ldr	r3, [r7, #12]
 80069d4:	330f      	adds	r3, #15
 80069d6:	60fb      	str	r3, [r7, #12]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	4a1a      	ldr	r2, [pc, #104]	@ (8006a44 <draw_gearing+0x23c>)
 80069dc:	4413      	add	r3, r2
 80069de:	7afa      	ldrb	r2, [r7, #11]
 80069e0:	4915      	ldr	r1, [pc, #84]	@ (8006a38 <draw_gearing+0x230>)
 80069e2:	4618      	mov	r0, r3
 80069e4:	f014 fac6 	bl	801af74 <memcpy>
	curr_pos += char_len;
 80069e8:	7afb      	ldrb	r3, [r7, #11]
 80069ea:	68fa      	ldr	r2, [r7, #12]
 80069ec:	4413      	add	r3, r2
 80069ee:	60fb      	str	r3, [r7, #12]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 80069f0:	68fb      	ldr	r3, [r7, #12]
 80069f2:	3302      	adds	r3, #2
 80069f4:	4619      	mov	r1, r3
 80069f6:	4813      	ldr	r0, [pc, #76]	@ (8006a44 <draw_gearing+0x23c>)
 80069f8:	f7fa fb8a 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80069fc:	e002      	b.n	8006a04 <draw_gearing+0x1fc>
		vTaskDelay(1);
 80069fe:	2001      	movs	r0, #1
 8006a00:	f011 fcc4 	bl	801838c <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006a04:	4b13      	ldr	r3, [pc, #76]	@ (8006a54 <draw_gearing+0x24c>)
 8006a06:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006a0a:	b2db      	uxtb	r3, r3
 8006a0c:	2b20      	cmp	r3, #32
 8006a0e:	d1f6      	bne.n	80069fe <draw_gearing+0x1f6>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8006a10:	68fb      	ldr	r3, [r7, #12]
 8006a12:	b29b      	uxth	r3, r3
 8006a14:	3302      	adds	r3, #2
 8006a16:	b29b      	uxth	r3, r3
 8006a18:	461a      	mov	r2, r3
 8006a1a:	490a      	ldr	r1, [pc, #40]	@ (8006a44 <draw_gearing+0x23c>)
 8006a1c:	480d      	ldr	r0, [pc, #52]	@ (8006a54 <draw_gearing+0x24c>)
 8006a1e:	f00b fd4d 	bl	80124bc <HAL_UART_Transmit_DMA>
}
 8006a22:	bf00      	nop
 8006a24:	3714      	adds	r7, #20
 8006a26:	46bd      	mov	sp, r7
 8006a28:	bd90      	pop	{r4, r7, pc}
 8006a2a:	bf00      	nop
 8006a2c:	200036c8 	.word	0x200036c8
 8006a30:	2000352c 	.word	0x2000352c
 8006a34:	08020eb8 	.word	0x08020eb8
 8006a38:	200036e0 	.word	0x200036e0
 8006a3c:	200036d8 	.word	0x200036d8
 8006a40:	200038b4 	.word	0x200038b4
 8006a44:	200035c0 	.word	0x200035c0
 8006a48:	200036c0 	.word	0x200036c0
 8006a4c:	20003850 	.word	0x20003850
 8006a50:	200035bc 	.word	0x200035bc
 8006a54:	20001c70 	.word	0x20001c70

08006a58 <clear_hud>:


void clear_hud(){
 8006a58:	b580      	push	{r7, lr}
 8006a5a:	b084      	sub	sp, #16
 8006a5c:	af00      	add	r7, sp, #0
	uint32_t curr_pos = 0;
 8006a5e:	2300      	movs	r3, #0
 8006a60:	60fb      	str	r3, [r7, #12]
//	uint8_t char_len = 0;
//	curr_pos = 0;
//	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);

	send_header.start_frame = 0xA5;
 8006a62:	4b2f      	ldr	r3, [pc, #188]	@ (8006b20 <clear_hud+0xc8>)
 8006a64:	22a5      	movs	r2, #165	@ 0xa5
 8006a66:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8006a68:	4b2d      	ldr	r3, [pc, #180]	@ (8006b20 <clear_hud+0xc8>)
 8006a6a:	2200      	movs	r2, #0
 8006a6c:	f042 0201 	orr.w	r2, r2, #1
 8006a70:	715a      	strb	r2, [r3, #5]
 8006a72:	2200      	movs	r2, #0
 8006a74:	f042 0203 	orr.w	r2, r2, #3
 8006a78:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8006a7a:	4b2a      	ldr	r3, [pc, #168]	@ (8006b24 <clear_hud+0xcc>)
 8006a7c:	781b      	ldrb	r3, [r3, #0]
 8006a7e:	1c5a      	adds	r2, r3, #1
 8006a80:	b2d1      	uxtb	r1, r2
 8006a82:	4a28      	ldr	r2, [pc, #160]	@ (8006b24 <clear_hud+0xcc>)
 8006a84:	7011      	strb	r1, [r2, #0]
 8006a86:	4a26      	ldr	r2, [pc, #152]	@ (8006b20 <clear_hud+0xc8>)
 8006a88:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_delete_graphic_t);
 8006a8a:	4b25      	ldr	r3, [pc, #148]	@ (8006b20 <clear_hud+0xc8>)
 8006a8c:	2200      	movs	r2, #0
 8006a8e:	f042 0208 	orr.w	r2, r2, #8
 8006a92:	705a      	strb	r2, [r3, #1]
 8006a94:	2200      	movs	r2, #0
 8006a96:	709a      	strb	r2, [r3, #2]
	send_header.seq = g_ref_tx_seq++;
 8006a98:	4b22      	ldr	r3, [pc, #136]	@ (8006b24 <clear_hud+0xcc>)
 8006a9a:	781b      	ldrb	r3, [r3, #0]
 8006a9c:	1c5a      	adds	r2, r3, #1
 8006a9e:	b2d1      	uxtb	r1, r2
 8006aa0:	4a20      	ldr	r2, [pc, #128]	@ (8006b24 <clear_hud+0xcc>)
 8006aa2:	7011      	strb	r1, [r2, #0]
 8006aa4:	4a1e      	ldr	r2, [pc, #120]	@ (8006b20 <clear_hud+0xc8>)
 8006aa6:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8006aa8:	68fb      	ldr	r3, [r7, #12]
 8006aaa:	4a1f      	ldr	r2, [pc, #124]	@ (8006b28 <clear_hud+0xd0>)
 8006aac:	4413      	add	r3, r2
 8006aae:	4a1c      	ldr	r2, [pc, #112]	@ (8006b20 <clear_hud+0xc8>)
 8006ab0:	6810      	ldr	r0, [r2, #0]
 8006ab2:	6018      	str	r0, [r3, #0]
 8006ab4:	8891      	ldrh	r1, [r2, #4]
 8006ab6:	7992      	ldrb	r2, [r2, #6]
 8006ab8:	8099      	strh	r1, [r3, #4]
 8006aba:	719a      	strb	r2, [r3, #6]
	ref_delete_graphic_t ref_delete;
	ref_delete.cmd_ID = 0x100;
 8006abc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006ac0:	80bb      	strh	r3, [r7, #4]
	ref_delete.graphic_layer = 9;
 8006ac2:	2309      	movs	r3, #9
 8006ac4:	72fb      	strb	r3, [r7, #11]
	ref_delete.graphic_operation = 2;
 8006ac6:	2302      	movs	r3, #2
 8006ac8:	72bb      	strb	r3, [r7, #10]
	ref_delete.receiver_ID = g_client_id;
 8006aca:	4b18      	ldr	r3, [pc, #96]	@ (8006b2c <clear_hud+0xd4>)
 8006acc:	881b      	ldrh	r3, [r3, #0]
 8006ace:	813b      	strh	r3, [r7, #8]
	ref_delete.send_ID = ref_robot_data.robot_id;
 8006ad0:	4b17      	ldr	r3, [pc, #92]	@ (8006b30 <clear_hud+0xd8>)
 8006ad2:	781b      	ldrb	r3, [r3, #0]
 8006ad4:	80fb      	strh	r3, [r7, #6]
	memcpy(tx_buffer + curr_pos, &ref_delete, sizeof(ref_delete_graphic_t));
 8006ad6:	68fb      	ldr	r3, [r7, #12]
 8006ad8:	4a13      	ldr	r2, [pc, #76]	@ (8006b28 <clear_hud+0xd0>)
 8006ada:	4413      	add	r3, r2
 8006adc:	461a      	mov	r2, r3
 8006ade:	1d3b      	adds	r3, r7, #4
 8006ae0:	cb03      	ldmia	r3!, {r0, r1}
 8006ae2:	6010      	str	r0, [r2, #0]
 8006ae4:	6051      	str	r1, [r2, #4]
	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8006ae6:	68fb      	ldr	r3, [r7, #12]
 8006ae8:	3302      	adds	r3, #2
 8006aea:	4619      	mov	r1, r3
 8006aec:	480e      	ldr	r0, [pc, #56]	@ (8006b28 <clear_hud+0xd0>)
 8006aee:	f7fa fb0f 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006af2:	e002      	b.n	8006afa <clear_hud+0xa2>
		vTaskDelay(1);
 8006af4:	2001      	movs	r0, #1
 8006af6:	f011 fc49 	bl	801838c <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006afa:	4b0e      	ldr	r3, [pc, #56]	@ (8006b34 <clear_hud+0xdc>)
 8006afc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006b00:	b2db      	uxtb	r3, r3
 8006b02:	2b20      	cmp	r3, #32
 8006b04:	d1f6      	bne.n	8006af4 <clear_hud+0x9c>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8006b06:	68fb      	ldr	r3, [r7, #12]
 8006b08:	b29b      	uxth	r3, r3
 8006b0a:	3302      	adds	r3, #2
 8006b0c:	b29b      	uxth	r3, r3
 8006b0e:	461a      	mov	r2, r3
 8006b10:	4905      	ldr	r1, [pc, #20]	@ (8006b28 <clear_hud+0xd0>)
 8006b12:	4808      	ldr	r0, [pc, #32]	@ (8006b34 <clear_hud+0xdc>)
 8006b14:	f00b fcd2 	bl	80124bc <HAL_UART_Transmit_DMA>

}
 8006b18:	bf00      	nop
 8006b1a:	3710      	adds	r7, #16
 8006b1c:	46bd      	mov	sp, r7
 8006b1e:	bd80      	pop	{r7, pc}
 8006b20:	200036d8 	.word	0x200036d8
 8006b24:	200038b4 	.word	0x200038b4
 8006b28:	200035c0 	.word	0x200035c0
 8006b2c:	200035bc 	.word	0x200035bc
 8006b30:	20003850 	.word	0x20003850
 8006b34:	20001c70 	.word	0x20001c70

08006b38 <fusion>:
double time_dif;
#define ALPHA 0.98
#define DT 0.01
#define LPF_ALPHA 0.5  // Low-pass filter coefficient

int fusion() {
 8006b38:	b580      	push	{r7, lr}
 8006b3a:	b0ae      	sub	sp, #184	@ 0xb8
 8006b3c:	af00      	add	r7, sp, #0
    double accel_data[3];
    double gyro_data[3];
    double dt = DT;
 8006b3e:	a377      	add	r3, pc, #476	@ (adr r3, 8006d1c <fusion+0x1e4>)
 8006b40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b44:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
    IMUSensorFusion imu;

    initIMUSensorFusion(&imu);
 8006b48:	463b      	mov	r3, r7
 8006b4a:	4618      	mov	r0, r3
 8006b4c:	f000 f92a 	bl	8006da4 <initIMUSensorFusion>

    double T_end = 0.1;
 8006b50:	a374      	add	r3, pc, #464	@ (adr r3, 8006d24 <fusion+0x1ec>)
 8006b52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b56:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
    double time_dif;


    float T_start = get_microseconds();
 8006b5a:	f7fb fb31 	bl	80021c0 <get_microseconds>
 8006b5e:	ee07 0a90 	vmov	s15, r0
 8006b62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006b66:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

    // Simulate data (replace with actual sensor reading in a real application)
    while (1) {
        // Replace these functions with actual sensor data reading
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8006b6a:	4b69      	ldr	r3, [pc, #420]	@ (8006d10 <fusion+0x1d8>)
 8006b6c:	681b      	ldr	r3, [r3, #0]
 8006b6e:	4618      	mov	r0, r3
 8006b70:	f7f9 fcea 	bl	8000548 <__aeabi_f2d>
 8006b74:	4602      	mov	r2, r0
 8006b76:	460b      	mov	r3, r1
 8006b78:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
        accel_data[1] = accel_proc_data.ay;  // y-axis acceleration
 8006b7c:	4b64      	ldr	r3, [pc, #400]	@ (8006d10 <fusion+0x1d8>)
 8006b7e:	685b      	ldr	r3, [r3, #4]
 8006b80:	4618      	mov	r0, r3
 8006b82:	f7f9 fce1 	bl	8000548 <__aeabi_f2d>
 8006b86:	4602      	mov	r2, r0
 8006b88:	460b      	mov	r3, r1
 8006b8a:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
        accel_data[2] = accel_proc_data.az;  // z-axis acceleration
 8006b8e:	4b60      	ldr	r3, [pc, #384]	@ (8006d10 <fusion+0x1d8>)
 8006b90:	689b      	ldr	r3, [r3, #8]
 8006b92:	4618      	mov	r0, r3
 8006b94:	f7f9 fcd8 	bl	8000548 <__aeabi_f2d>
 8006b98:	4602      	mov	r2, r0
 8006b9a:	460b      	mov	r3, r1
 8006b9c:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90

        gyro_data[0] = gyro_proc_data.gx;  // roll rate
 8006ba0:	4b5c      	ldr	r3, [pc, #368]	@ (8006d14 <fusion+0x1dc>)
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	4618      	mov	r0, r3
 8006ba6:	f7f9 fccf 	bl	8000548 <__aeabi_f2d>
 8006baa:	4602      	mov	r2, r0
 8006bac:	460b      	mov	r3, r1
 8006bae:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
        gyro_data[1] = gyro_proc_data.gy;  // pitch rate
 8006bb2:	4b58      	ldr	r3, [pc, #352]	@ (8006d14 <fusion+0x1dc>)
 8006bb4:	685b      	ldr	r3, [r3, #4]
 8006bb6:	4618      	mov	r0, r3
 8006bb8:	f7f9 fcc6 	bl	8000548 <__aeabi_f2d>
 8006bbc:	4602      	mov	r2, r0
 8006bbe:	460b      	mov	r3, r1
 8006bc0:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
        gyro_data[2] = gyro_proc_data.gz;  // yaw rate
 8006bc4:	4b53      	ldr	r3, [pc, #332]	@ (8006d14 <fusion+0x1dc>)
 8006bc6:	689b      	ldr	r3, [r3, #8]
 8006bc8:	4618      	mov	r0, r3
 8006bca:	f7f9 fcbd 	bl	8000548 <__aeabi_f2d>
 8006bce:	4602      	mov	r2, r0
 8006bd0:	460b      	mov	r3, r1
 8006bd2:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78

        T_end = get_microseconds();
 8006bd6:	f7fb faf3 	bl	80021c0 <get_microseconds>
 8006bda:	4603      	mov	r3, r0
 8006bdc:	4618      	mov	r0, r3
 8006bde:	f7f9 fc91 	bl	8000504 <__aeabi_ui2d>
 8006be2:	4602      	mov	r2, r0
 8006be4:	460b      	mov	r3, r1
 8006be6:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
        time_dif = (T_end - T_start) * 0.000001;
 8006bea:	f8d7 00b4 	ldr.w	r0, [r7, #180]	@ 0xb4
 8006bee:	f7f9 fcab 	bl	8000548 <__aeabi_f2d>
 8006bf2:	4602      	mov	r2, r0
 8006bf4:	460b      	mov	r3, r1
 8006bf6:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8006bfa:	f7f9 fb45 	bl	8000288 <__aeabi_dsub>
 8006bfe:	4602      	mov	r2, r0
 8006c00:	460b      	mov	r3, r1
 8006c02:	4610      	mov	r0, r2
 8006c04:	4619      	mov	r1, r3
 8006c06:	a340      	add	r3, pc, #256	@ (adr r3, 8006d08 <fusion+0x1d0>)
 8006c08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c0c:	f7f9 fcf4 	bl	80005f8 <__aeabi_dmul>
 8006c10:	4602      	mov	r2, r0
 8006c12:	460b      	mov	r3, r1
 8006c14:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
        dt = time_dif;
 8006c18:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8006c1c:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
        imu_sensor_fusion(accel_data, gyro_data, dt, &imu);
 8006c20:	463a      	mov	r2, r7
 8006c22:	f107 0168 	add.w	r1, r7, #104	@ 0x68
 8006c26:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 8006c2a:	ed97 0b2a 	vldr	d0, [r7, #168]	@ 0xa8
 8006c2e:	4618      	mov	r0, r3
 8006c30:	f000 f91e 	bl	8006e70 <imu_sensor_fusion>
        T_start = get_microseconds();
 8006c34:	f7fb fac4 	bl	80021c0 <get_microseconds>
 8006c38:	ee07 0a90 	vmov	s15, r0
 8006c3c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006c40:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

        // Store the results in the imu_heading structure
        imu_heading.pit = imu.pitch;
 8006c44:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006c48:	4610      	mov	r0, r2
 8006c4a:	4619      	mov	r1, r3
 8006c4c:	f7f9 ffcc 	bl	8000be8 <__aeabi_d2f>
 8006c50:	4603      	mov	r3, r0
 8006c52:	4a31      	ldr	r2, [pc, #196]	@ (8006d18 <fusion+0x1e0>)
 8006c54:	6013      	str	r3, [r2, #0]
        imu_heading.dpit = imu.pitch_speed;
 8006c56:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006c5a:	4610      	mov	r0, r2
 8006c5c:	4619      	mov	r1, r3
 8006c5e:	f7f9 ffc3 	bl	8000be8 <__aeabi_d2f>
 8006c62:	4603      	mov	r3, r0
 8006c64:	4a2c      	ldr	r2, [pc, #176]	@ (8006d18 <fusion+0x1e0>)
 8006c66:	60d3      	str	r3, [r2, #12]
        imu_heading.ddpit = imu.pitch_accel;
 8006c68:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8006c6c:	4610      	mov	r0, r2
 8006c6e:	4619      	mov	r1, r3
 8006c70:	f7f9 ffba 	bl	8000be8 <__aeabi_d2f>
 8006c74:	4603      	mov	r3, r0
 8006c76:	4a28      	ldr	r2, [pc, #160]	@ (8006d18 <fusion+0x1e0>)
 8006c78:	6193      	str	r3, [r2, #24]
        imu_heading.rol = imu.roll;
 8006c7a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006c7e:	4610      	mov	r0, r2
 8006c80:	4619      	mov	r1, r3
 8006c82:	f7f9 ffb1 	bl	8000be8 <__aeabi_d2f>
 8006c86:	4603      	mov	r3, r0
 8006c88:	4a23      	ldr	r2, [pc, #140]	@ (8006d18 <fusion+0x1e0>)
 8006c8a:	6053      	str	r3, [r2, #4]
        imu_heading.drol = imu.roll_speed;
 8006c8c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006c90:	4610      	mov	r0, r2
 8006c92:	4619      	mov	r1, r3
 8006c94:	f7f9 ffa8 	bl	8000be8 <__aeabi_d2f>
 8006c98:	4603      	mov	r3, r0
 8006c9a:	4a1f      	ldr	r2, [pc, #124]	@ (8006d18 <fusion+0x1e0>)
 8006c9c:	6113      	str	r3, [r2, #16]
        imu_heading.ddrol = imu.roll_accel;
 8006c9e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006ca2:	4610      	mov	r0, r2
 8006ca4:	4619      	mov	r1, r3
 8006ca6:	f7f9 ff9f 	bl	8000be8 <__aeabi_d2f>
 8006caa:	4603      	mov	r3, r0
 8006cac:	4a1a      	ldr	r2, [pc, #104]	@ (8006d18 <fusion+0x1e0>)
 8006cae:	61d3      	str	r3, [r2, #28]
        imu_heading.yaw = imu.yaw;
 8006cb0:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8006cb4:	4610      	mov	r0, r2
 8006cb6:	4619      	mov	r1, r3
 8006cb8:	f7f9 ff96 	bl	8000be8 <__aeabi_d2f>
 8006cbc:	4603      	mov	r3, r0
 8006cbe:	4a16      	ldr	r2, [pc, #88]	@ (8006d18 <fusion+0x1e0>)
 8006cc0:	6093      	str	r3, [r2, #8]
        imu_heading.dyaw = imu.yaw_speed;
 8006cc2:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006cc6:	4610      	mov	r0, r2
 8006cc8:	4619      	mov	r1, r3
 8006cca:	f7f9 ff8d 	bl	8000be8 <__aeabi_d2f>
 8006cce:	4603      	mov	r3, r0
 8006cd0:	4a11      	ldr	r2, [pc, #68]	@ (8006d18 <fusion+0x1e0>)
 8006cd2:	6153      	str	r3, [r2, #20]
        imu_heading.ddyaw = imu.yaw_accel;
 8006cd4:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006cd8:	4610      	mov	r0, r2
 8006cda:	4619      	mov	r1, r3
 8006cdc:	f7f9 ff84 	bl	8000be8 <__aeabi_d2f>
 8006ce0:	4603      	mov	r3, r0
 8006ce2:	4a0d      	ldr	r2, [pc, #52]	@ (8006d18 <fusion+0x1e0>)
 8006ce4:	6213      	str	r3, [r2, #32]
        imu_heading.ddz = imu.vertical_accel;
 8006ce6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006cea:	4610      	mov	r0, r2
 8006cec:	4619      	mov	r1, r3
 8006cee:	f7f9 ff7b 	bl	8000be8 <__aeabi_d2f>
 8006cf2:	4603      	mov	r3, r0
 8006cf4:	4a08      	ldr	r2, [pc, #32]	@ (8006d18 <fusion+0x1e0>)
 8006cf6:	6253      	str	r3, [r2, #36]	@ 0x24
        ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8006cf8:	f04f 31ff 	mov.w	r1, #4294967295
 8006cfc:	2001      	movs	r0, #1
 8006cfe:	f012 f915 	bl	8018f2c <ulTaskNotifyTake>
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8006d02:	bf00      	nop
 8006d04:	e731      	b.n	8006b6a <fusion+0x32>
 8006d06:	bf00      	nop
 8006d08:	a0b5ed8d 	.word	0xa0b5ed8d
 8006d0c:	3eb0c6f7 	.word	0x3eb0c6f7
 8006d10:	20003728 	.word	0x20003728
 8006d14:	20003738 	.word	0x20003738
 8006d18:	20003700 	.word	0x20003700
 8006d1c:	47ae147b 	.word	0x47ae147b
 8006d20:	3f847ae1 	.word	0x3f847ae1
 8006d24:	9999999a 	.word	0x9999999a
 8006d28:	3fb99999 	.word	0x3fb99999

08006d2c <low_pass_filter>:

    return 0;
}

// Low-pass filter function
double low_pass_filter(double input, double *prev_output, double alpha) {
 8006d2c:	b5b0      	push	{r4, r5, r7, lr}
 8006d2e:	b086      	sub	sp, #24
 8006d30:	af00      	add	r7, sp, #0
 8006d32:	ed87 0b04 	vstr	d0, [r7, #16]
 8006d36:	60f8      	str	r0, [r7, #12]
 8006d38:	ed87 1b00 	vstr	d1, [r7]
    *prev_output = alpha * input + (1 - alpha) * (*prev_output);
 8006d3c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8006d40:	e9d7 0100 	ldrd	r0, r1, [r7]
 8006d44:	f7f9 fc58 	bl	80005f8 <__aeabi_dmul>
 8006d48:	4602      	mov	r2, r0
 8006d4a:	460b      	mov	r3, r1
 8006d4c:	4614      	mov	r4, r2
 8006d4e:	461d      	mov	r5, r3
 8006d50:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006d54:	f04f 0000 	mov.w	r0, #0
 8006d58:	4911      	ldr	r1, [pc, #68]	@ (8006da0 <low_pass_filter+0x74>)
 8006d5a:	f7f9 fa95 	bl	8000288 <__aeabi_dsub>
 8006d5e:	4602      	mov	r2, r0
 8006d60:	460b      	mov	r3, r1
 8006d62:	4610      	mov	r0, r2
 8006d64:	4619      	mov	r1, r3
 8006d66:	68fb      	ldr	r3, [r7, #12]
 8006d68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d6c:	f7f9 fc44 	bl	80005f8 <__aeabi_dmul>
 8006d70:	4602      	mov	r2, r0
 8006d72:	460b      	mov	r3, r1
 8006d74:	4620      	mov	r0, r4
 8006d76:	4629      	mov	r1, r5
 8006d78:	f7f9 fa88 	bl	800028c <__adddf3>
 8006d7c:	4602      	mov	r2, r0
 8006d7e:	460b      	mov	r3, r1
 8006d80:	68f9      	ldr	r1, [r7, #12]
 8006d82:	e9c1 2300 	strd	r2, r3, [r1]
    return *prev_output;
 8006d86:	68fb      	ldr	r3, [r7, #12]
 8006d88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d8c:	ec43 2b17 	vmov	d7, r2, r3
}
 8006d90:	eeb0 0a47 	vmov.f32	s0, s14
 8006d94:	eef0 0a67 	vmov.f32	s1, s15
 8006d98:	3718      	adds	r7, #24
 8006d9a:	46bd      	mov	sp, r7
 8006d9c:	bdb0      	pop	{r4, r5, r7, pc}
 8006d9e:	bf00      	nop
 8006da0:	3ff00000 	.word	0x3ff00000

08006da4 <initIMUSensorFusion>:


void initIMUSensorFusion(IMUSensorFusion *imu) {
 8006da4:	b480      	push	{r7}
 8006da6:	b083      	sub	sp, #12
 8006da8:	af00      	add	r7, sp, #0
 8006daa:	6078      	str	r0, [r7, #4]
    imu->pitch = 0.0;
 8006dac:	6879      	ldr	r1, [r7, #4]
 8006dae:	f04f 0200 	mov.w	r2, #0
 8006db2:	f04f 0300 	mov.w	r3, #0
 8006db6:	e9c1 2300 	strd	r2, r3, [r1]
    imu->pitch_speed = 0.0;
 8006dba:	6879      	ldr	r1, [r7, #4]
 8006dbc:	f04f 0200 	mov.w	r2, #0
 8006dc0:	f04f 0300 	mov.w	r3, #0
 8006dc4:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->pitch_accel = 0.0;
 8006dc8:	6879      	ldr	r1, [r7, #4]
 8006dca:	f04f 0200 	mov.w	r2, #0
 8006dce:	f04f 0300 	mov.w	r3, #0
 8006dd2:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll = 0.0;
 8006dd6:	6879      	ldr	r1, [r7, #4]
 8006dd8:	f04f 0200 	mov.w	r2, #0
 8006ddc:	f04f 0300 	mov.w	r3, #0
 8006de0:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->roll_speed = 0.0;
 8006de4:	6879      	ldr	r1, [r7, #4]
 8006de6:	f04f 0200 	mov.w	r2, #0
 8006dea:	f04f 0300 	mov.w	r3, #0
 8006dee:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->roll_accel = 0.0;
 8006df2:	6879      	ldr	r1, [r7, #4]
 8006df4:	f04f 0200 	mov.w	r2, #0
 8006df8:	f04f 0300 	mov.w	r3, #0
 8006dfc:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw = 0.0;
 8006e00:	6879      	ldr	r1, [r7, #4]
 8006e02:	f04f 0200 	mov.w	r2, #0
 8006e06:	f04f 0300 	mov.w	r3, #0
 8006e0a:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
    imu->yaw_speed = 0.0;
 8006e0e:	6879      	ldr	r1, [r7, #4]
 8006e10:	f04f 0200 	mov.w	r2, #0
 8006e14:	f04f 0300 	mov.w	r3, #0
 8006e18:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
    imu->yaw_accel = 0.0;
 8006e1c:	6879      	ldr	r1, [r7, #4]
 8006e1e:	f04f 0200 	mov.w	r2, #0
 8006e22:	f04f 0300 	mov.w	r3, #0
 8006e26:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40
    imu->vertical_accel = 0.0;
 8006e2a:	6879      	ldr	r1, [r7, #4]
 8006e2c:	f04f 0200 	mov.w	r2, #0
 8006e30:	f04f 0300 	mov.w	r3, #0
 8006e34:	e9c1 2312 	strd	r2, r3, [r1, #72]	@ 0x48
    imu->acc_x_lpf = 0.0;
 8006e38:	6879      	ldr	r1, [r7, #4]
 8006e3a:	f04f 0200 	mov.w	r2, #0
 8006e3e:	f04f 0300 	mov.w	r3, #0
 8006e42:	e9c1 2314 	strd	r2, r3, [r1, #80]	@ 0x50
    imu->acc_y_lpf = 0.0;
 8006e46:	6879      	ldr	r1, [r7, #4]
 8006e48:	f04f 0200 	mov.w	r2, #0
 8006e4c:	f04f 0300 	mov.w	r3, #0
 8006e50:	e9c1 2316 	strd	r2, r3, [r1, #88]	@ 0x58
    imu->acc_z_lpf = 0.0;
 8006e54:	6879      	ldr	r1, [r7, #4]
 8006e56:	f04f 0200 	mov.w	r2, #0
 8006e5a:	f04f 0300 	mov.w	r3, #0
 8006e5e:	e9c1 2318 	strd	r2, r3, [r1, #96]	@ 0x60
}
 8006e62:	bf00      	nop
 8006e64:	370c      	adds	r7, #12
 8006e66:	46bd      	mov	sp, r7
 8006e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e6c:	4770      	bx	lr
	...

08006e70 <imu_sensor_fusion>:
void imu_sensor_fusion(double accel_data[3], double gyro_data[3], double dt,
                       IMUSensorFusion *imu) {
 8006e70:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8006e74:	b08a      	sub	sp, #40	@ 0x28
 8006e76:	af00      	add	r7, sp, #0
 8006e78:	6178      	str	r0, [r7, #20]
 8006e7a:	6139      	str	r1, [r7, #16]
 8006e7c:	ed87 0b02 	vstr	d0, [r7, #8]
 8006e80:	607a      	str	r2, [r7, #4]
    // Low-pass filter accelerometer data
    accel_data[0] = low_pass_filter(accel_data[0], &(imu->acc_x_lpf), LPF_ALPHA);
 8006e82:	697b      	ldr	r3, [r7, #20]
 8006e84:	ed93 7b00 	vldr	d7, [r3]
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	3350      	adds	r3, #80	@ 0x50
 8006e8c:	ed9f 1bb8 	vldr	d1, [pc, #736]	@ 8007170 <imu_sensor_fusion+0x300>
 8006e90:	4618      	mov	r0, r3
 8006e92:	eeb0 0a47 	vmov.f32	s0, s14
 8006e96:	eef0 0a67 	vmov.f32	s1, s15
 8006e9a:	f7ff ff47 	bl	8006d2c <low_pass_filter>
 8006e9e:	eeb0 7a40 	vmov.f32	s14, s0
 8006ea2:	eef0 7a60 	vmov.f32	s15, s1
 8006ea6:	697b      	ldr	r3, [r7, #20]
 8006ea8:	ed83 7b00 	vstr	d7, [r3]
    accel_data[1] = low_pass_filter(accel_data[1], &(imu->acc_y_lpf), LPF_ALPHA);
 8006eac:	697b      	ldr	r3, [r7, #20]
 8006eae:	3308      	adds	r3, #8
 8006eb0:	ed93 7b00 	vldr	d7, [r3]
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	f103 0258 	add.w	r2, r3, #88	@ 0x58
 8006eba:	697b      	ldr	r3, [r7, #20]
 8006ebc:	f103 0408 	add.w	r4, r3, #8
 8006ec0:	ed9f 1bab 	vldr	d1, [pc, #684]	@ 8007170 <imu_sensor_fusion+0x300>
 8006ec4:	4610      	mov	r0, r2
 8006ec6:	eeb0 0a47 	vmov.f32	s0, s14
 8006eca:	eef0 0a67 	vmov.f32	s1, s15
 8006ece:	f7ff ff2d 	bl	8006d2c <low_pass_filter>
 8006ed2:	eeb0 7a40 	vmov.f32	s14, s0
 8006ed6:	eef0 7a60 	vmov.f32	s15, s1
 8006eda:	ed84 7b00 	vstr	d7, [r4]
    accel_data[2] = low_pass_filter(accel_data[2], &(imu->acc_z_lpf), LPF_ALPHA);
 8006ede:	697b      	ldr	r3, [r7, #20]
 8006ee0:	3310      	adds	r3, #16
 8006ee2:	ed93 7b00 	vldr	d7, [r3]
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 8006eec:	697b      	ldr	r3, [r7, #20]
 8006eee:	f103 0410 	add.w	r4, r3, #16
 8006ef2:	ed9f 1b9f 	vldr	d1, [pc, #636]	@ 8007170 <imu_sensor_fusion+0x300>
 8006ef6:	4610      	mov	r0, r2
 8006ef8:	eeb0 0a47 	vmov.f32	s0, s14
 8006efc:	eef0 0a67 	vmov.f32	s1, s15
 8006f00:	f7ff ff14 	bl	8006d2c <low_pass_filter>
 8006f04:	eeb0 7a40 	vmov.f32	s14, s0
 8006f08:	eef0 7a60 	vmov.f32	s15, s1
 8006f0c:	ed84 7b00 	vstr	d7, [r4]

    // Calculate pitch and roll from accelerometer data
    double pitch_accel_meas = atan2(-accel_data[0], sqrt(accel_data[1] * accel_data[1] + accel_data[2] * accel_data[2]));
 8006f10:	697b      	ldr	r3, [r7, #20]
 8006f12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f16:	4690      	mov	r8, r2
 8006f18:	f083 4900 	eor.w	r9, r3, #2147483648	@ 0x80000000
 8006f1c:	697b      	ldr	r3, [r7, #20]
 8006f1e:	3308      	adds	r3, #8
 8006f20:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006f24:	697b      	ldr	r3, [r7, #20]
 8006f26:	3308      	adds	r3, #8
 8006f28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f2c:	f7f9 fb64 	bl	80005f8 <__aeabi_dmul>
 8006f30:	4602      	mov	r2, r0
 8006f32:	460b      	mov	r3, r1
 8006f34:	4614      	mov	r4, r2
 8006f36:	461d      	mov	r5, r3
 8006f38:	697b      	ldr	r3, [r7, #20]
 8006f3a:	3310      	adds	r3, #16
 8006f3c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	3310      	adds	r3, #16
 8006f44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f48:	f7f9 fb56 	bl	80005f8 <__aeabi_dmul>
 8006f4c:	4602      	mov	r2, r0
 8006f4e:	460b      	mov	r3, r1
 8006f50:	4620      	mov	r0, r4
 8006f52:	4629      	mov	r1, r5
 8006f54:	f7f9 f99a 	bl	800028c <__adddf3>
 8006f58:	4602      	mov	r2, r0
 8006f5a:	460b      	mov	r3, r1
 8006f5c:	ec43 2b17 	vmov	d7, r2, r3
 8006f60:	eeb0 0a47 	vmov.f32	s0, s14
 8006f64:	eef0 0a67 	vmov.f32	s1, s15
 8006f68:	f018 fb88 	bl	801f67c <sqrt>
 8006f6c:	eeb0 7a40 	vmov.f32	s14, s0
 8006f70:	eef0 7a60 	vmov.f32	s15, s1
 8006f74:	eeb0 1a47 	vmov.f32	s2, s14
 8006f78:	eef0 1a67 	vmov.f32	s3, s15
 8006f7c:	ec49 8b10 	vmov	d0, r8, r9
 8006f80:	f018 fb7a 	bl	801f678 <atan2>
 8006f84:	ed87 0b08 	vstr	d0, [r7, #32]
    double roll_accel_meas = atan2(accel_data[1], accel_data[2]);
 8006f88:	697b      	ldr	r3, [r7, #20]
 8006f8a:	3308      	adds	r3, #8
 8006f8c:	ed93 7b00 	vldr	d7, [r3]
 8006f90:	697b      	ldr	r3, [r7, #20]
 8006f92:	3310      	adds	r3, #16
 8006f94:	ed93 6b00 	vldr	d6, [r3]
 8006f98:	eeb0 1a46 	vmov.f32	s2, s12
 8006f9c:	eef0 1a66 	vmov.f32	s3, s13
 8006fa0:	eeb0 0a47 	vmov.f32	s0, s14
 8006fa4:	eef0 0a67 	vmov.f32	s1, s15
 8006fa8:	f018 fb66 	bl	801f678 <atan2>
 8006fac:	ed87 0b06 	vstr	d0, [r7, #24]

    // Apply complementary filter
    imu->pitch = ALPHA * (imu->pitch + gyro_data[1] * dt) + (1 - ALPHA) * pitch_accel_meas;
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	e9d3 4500 	ldrd	r4, r5, [r3]
 8006fb6:	693b      	ldr	r3, [r7, #16]
 8006fb8:	3308      	adds	r3, #8
 8006fba:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006fbe:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006fc2:	f7f9 fb19 	bl	80005f8 <__aeabi_dmul>
 8006fc6:	4602      	mov	r2, r0
 8006fc8:	460b      	mov	r3, r1
 8006fca:	4620      	mov	r0, r4
 8006fcc:	4629      	mov	r1, r5
 8006fce:	f7f9 f95d 	bl	800028c <__adddf3>
 8006fd2:	4602      	mov	r2, r0
 8006fd4:	460b      	mov	r3, r1
 8006fd6:	4610      	mov	r0, r2
 8006fd8:	4619      	mov	r1, r3
 8006fda:	a36a      	add	r3, pc, #424	@ (adr r3, 8007184 <imu_sensor_fusion+0x314>)
 8006fdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fe0:	f7f9 fb0a 	bl	80005f8 <__aeabi_dmul>
 8006fe4:	4602      	mov	r2, r0
 8006fe6:	460b      	mov	r3, r1
 8006fe8:	4614      	mov	r4, r2
 8006fea:	461d      	mov	r5, r3
 8006fec:	a367      	add	r3, pc, #412	@ (adr r3, 800718c <imu_sensor_fusion+0x31c>)
 8006fee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ff2:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8006ff6:	f7f9 faff 	bl	80005f8 <__aeabi_dmul>
 8006ffa:	4602      	mov	r2, r0
 8006ffc:	460b      	mov	r3, r1
 8006ffe:	4620      	mov	r0, r4
 8007000:	4629      	mov	r1, r5
 8007002:	f7f9 f943 	bl	800028c <__adddf3>
 8007006:	4602      	mov	r2, r0
 8007008:	460b      	mov	r3, r1
 800700a:	6879      	ldr	r1, [r7, #4]
 800700c:	e9c1 2300 	strd	r2, r3, [r1]
    imu->roll = ALPHA * (imu->roll + gyro_data[0] * dt) + (1 - ALPHA) * roll_accel_meas;
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 8007016:	693b      	ldr	r3, [r7, #16]
 8007018:	e9d3 0100 	ldrd	r0, r1, [r3]
 800701c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007020:	f7f9 faea 	bl	80005f8 <__aeabi_dmul>
 8007024:	4602      	mov	r2, r0
 8007026:	460b      	mov	r3, r1
 8007028:	4620      	mov	r0, r4
 800702a:	4629      	mov	r1, r5
 800702c:	f7f9 f92e 	bl	800028c <__adddf3>
 8007030:	4602      	mov	r2, r0
 8007032:	460b      	mov	r3, r1
 8007034:	4610      	mov	r0, r2
 8007036:	4619      	mov	r1, r3
 8007038:	a352      	add	r3, pc, #328	@ (adr r3, 8007184 <imu_sensor_fusion+0x314>)
 800703a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800703e:	f7f9 fadb 	bl	80005f8 <__aeabi_dmul>
 8007042:	4602      	mov	r2, r0
 8007044:	460b      	mov	r3, r1
 8007046:	4614      	mov	r4, r2
 8007048:	461d      	mov	r5, r3
 800704a:	a350      	add	r3, pc, #320	@ (adr r3, 800718c <imu_sensor_fusion+0x31c>)
 800704c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007050:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8007054:	f7f9 fad0 	bl	80005f8 <__aeabi_dmul>
 8007058:	4602      	mov	r2, r0
 800705a:	460b      	mov	r3, r1
 800705c:	4620      	mov	r0, r4
 800705e:	4629      	mov	r1, r5
 8007060:	f7f9 f914 	bl	800028c <__adddf3>
 8007064:	4602      	mov	r2, r0
 8007066:	460b      	mov	r3, r1
 8007068:	6879      	ldr	r1, [r7, #4]
 800706a:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->yaw += gyro_data[2] * dt;
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	@ 0x30
 8007074:	693b      	ldr	r3, [r7, #16]
 8007076:	3310      	adds	r3, #16
 8007078:	e9d3 0100 	ldrd	r0, r1, [r3]
 800707c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007080:	f7f9 faba 	bl	80005f8 <__aeabi_dmul>
 8007084:	4602      	mov	r2, r0
 8007086:	460b      	mov	r3, r1
 8007088:	4620      	mov	r0, r4
 800708a:	4629      	mov	r1, r5
 800708c:	f7f9 f8fe 	bl	800028c <__adddf3>
 8007090:	4602      	mov	r2, r0
 8007092:	460b      	mov	r3, r1
 8007094:	6879      	ldr	r1, [r7, #4]
 8007096:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30

    // Calculate speed (rate of change of angles) directly from gyroscope data
    imu->pitch_speed = gyro_data[1];
 800709a:	693b      	ldr	r3, [r7, #16]
 800709c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80070a0:	6879      	ldr	r1, [r7, #4]
 80070a2:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->roll_speed = gyro_data[0];
 80070a6:	693b      	ldr	r3, [r7, #16]
 80070a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070ac:	6879      	ldr	r1, [r7, #4]
 80070ae:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->yaw_speed = gyro_data[2];
 80070b2:	693b      	ldr	r3, [r7, #16]
 80070b4:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80070b8:	6879      	ldr	r1, [r7, #4]
 80070ba:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38

    // Calculate acceleration (rate of change of speeds)
    static double last_pitch_speed = 0, last_roll_speed = 0, last_yaw_speed = 0;
    imu->pitch_accel = (imu->pitch_speed - last_pitch_speed) / dt;
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 80070c4:	4b2c      	ldr	r3, [pc, #176]	@ (8007178 <imu_sensor_fusion+0x308>)
 80070c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070ca:	f7f9 f8dd 	bl	8000288 <__aeabi_dsub>
 80070ce:	4602      	mov	r2, r0
 80070d0:	460b      	mov	r3, r1
 80070d2:	4610      	mov	r0, r2
 80070d4:	4619      	mov	r1, r3
 80070d6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80070da:	f7f9 fbb7 	bl	800084c <__aeabi_ddiv>
 80070de:	4602      	mov	r2, r0
 80070e0:	460b      	mov	r3, r1
 80070e2:	6879      	ldr	r1, [r7, #4]
 80070e4:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll_accel = (imu->roll_speed - last_roll_speed) / dt;
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 80070ee:	4b23      	ldr	r3, [pc, #140]	@ (800717c <imu_sensor_fusion+0x30c>)
 80070f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070f4:	f7f9 f8c8 	bl	8000288 <__aeabi_dsub>
 80070f8:	4602      	mov	r2, r0
 80070fa:	460b      	mov	r3, r1
 80070fc:	4610      	mov	r0, r2
 80070fe:	4619      	mov	r1, r3
 8007100:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007104:	f7f9 fba2 	bl	800084c <__aeabi_ddiv>
 8007108:	4602      	mov	r2, r0
 800710a:	460b      	mov	r3, r1
 800710c:	6879      	ldr	r1, [r7, #4]
 800710e:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw_accel = (imu->yaw_speed - last_yaw_speed) / dt;
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	@ 0x38
 8007118:	4b19      	ldr	r3, [pc, #100]	@ (8007180 <imu_sensor_fusion+0x310>)
 800711a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800711e:	f7f9 f8b3 	bl	8000288 <__aeabi_dsub>
 8007122:	4602      	mov	r2, r0
 8007124:	460b      	mov	r3, r1
 8007126:	4610      	mov	r0, r2
 8007128:	4619      	mov	r1, r3
 800712a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800712e:	f7f9 fb8d 	bl	800084c <__aeabi_ddiv>
 8007132:	4602      	mov	r2, r0
 8007134:	460b      	mov	r3, r1
 8007136:	6879      	ldr	r1, [r7, #4]
 8007138:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40

    // Update last speeds
    last_pitch_speed = imu->pitch_speed;
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8007142:	490d      	ldr	r1, [pc, #52]	@ (8007178 <imu_sensor_fusion+0x308>)
 8007144:	e9c1 2300 	strd	r2, r3, [r1]
    last_roll_speed = imu->roll_speed;
 8007148:	687b      	ldr	r3, [r7, #4]
 800714a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800714e:	490b      	ldr	r1, [pc, #44]	@ (800717c <imu_sensor_fusion+0x30c>)
 8007150:	e9c1 2300 	strd	r2, r3, [r1]
    last_yaw_speed = imu->yaw_speed;
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 800715a:	4909      	ldr	r1, [pc, #36]	@ (8007180 <imu_sensor_fusion+0x310>)
 800715c:	e9c1 2300 	strd	r2, r3, [r1]

    // Calculate vertical acceleration (z-axis acceleration)
    imu->vertical_accel = sqrt((accel_data[0]*accel_data[0]) + (accel_data[1]*accel_data[1]) + (accel_data[2]*accel_data[2]));
 8007160:	697b      	ldr	r3, [r7, #20]
 8007162:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007166:	697b      	ldr	r3, [r7, #20]
 8007168:	e014      	b.n	8007194 <imu_sensor_fusion+0x324>
 800716a:	bf00      	nop
 800716c:	f3af 8000 	nop.w
 8007170:	00000000 	.word	0x00000000
 8007174:	3fe00000 	.word	0x3fe00000
 8007178:	20003758 	.word	0x20003758
 800717c:	20003760 	.word	0x20003760
 8007180:	20003768 	.word	0x20003768
 8007184:	f5c28f5c 	.word	0xf5c28f5c
 8007188:	3fef5c28 	.word	0x3fef5c28
 800718c:	47ae1480 	.word	0x47ae1480
 8007190:	3f947ae1 	.word	0x3f947ae1
 8007194:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007198:	f7f9 fa2e 	bl	80005f8 <__aeabi_dmul>
 800719c:	4602      	mov	r2, r0
 800719e:	460b      	mov	r3, r1
 80071a0:	4614      	mov	r4, r2
 80071a2:	461d      	mov	r5, r3
 80071a4:	697b      	ldr	r3, [r7, #20]
 80071a6:	3308      	adds	r3, #8
 80071a8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80071ac:	697b      	ldr	r3, [r7, #20]
 80071ae:	3308      	adds	r3, #8
 80071b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071b4:	f7f9 fa20 	bl	80005f8 <__aeabi_dmul>
 80071b8:	4602      	mov	r2, r0
 80071ba:	460b      	mov	r3, r1
 80071bc:	4620      	mov	r0, r4
 80071be:	4629      	mov	r1, r5
 80071c0:	f7f9 f864 	bl	800028c <__adddf3>
 80071c4:	4602      	mov	r2, r0
 80071c6:	460b      	mov	r3, r1
 80071c8:	4614      	mov	r4, r2
 80071ca:	461d      	mov	r5, r3
 80071cc:	697b      	ldr	r3, [r7, #20]
 80071ce:	3310      	adds	r3, #16
 80071d0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80071d4:	697b      	ldr	r3, [r7, #20]
 80071d6:	3310      	adds	r3, #16
 80071d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071dc:	f7f9 fa0c 	bl	80005f8 <__aeabi_dmul>
 80071e0:	4602      	mov	r2, r0
 80071e2:	460b      	mov	r3, r1
 80071e4:	4620      	mov	r0, r4
 80071e6:	4629      	mov	r1, r5
 80071e8:	f7f9 f850 	bl	800028c <__adddf3>
 80071ec:	4602      	mov	r2, r0
 80071ee:	460b      	mov	r3, r1
 80071f0:	ec43 2b17 	vmov	d7, r2, r3
 80071f4:	eeb0 0a47 	vmov.f32	s0, s14
 80071f8:	eef0 0a67 	vmov.f32	s1, s15
 80071fc:	f018 fa3e 	bl	801f67c <sqrt>
 8007200:	eeb0 7a40 	vmov.f32	s14, s0
 8007204:	eef0 7a60 	vmov.f32	s15, s1
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	ed83 7b12 	vstr	d7, [r3, #72]	@ 0x48
}
 800720e:	bf00      	nop
 8007210:	3728      	adds	r7, #40	@ 0x28
 8007212:	46bd      	mov	sp, r7
 8007214:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}

08007218 <imu_proc_task_notif>:

void imu_proc_task_notif() {
 8007218:	b580      	push	{r7, lr}
 800721a:	b082      	sub	sp, #8
 800721c:	af00      	add	r7, sp, #0
	//resets the flags
	update_flag = 0b000;
 800721e:	4b0d      	ldr	r3, [pc, #52]	@ (8007254 <imu_proc_task_notif+0x3c>)
 8007220:	2200      	movs	r2, #0
 8007222:	701a      	strb	r2, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 8007224:	2300      	movs	r3, #0
 8007226:	607b      	str	r3, [r7, #4]
	vTaskNotifyGiveFromISR(imu_processing_task_handle, &xHigherPriorityTaskWoken);
 8007228:	4b0b      	ldr	r3, [pc, #44]	@ (8007258 <imu_proc_task_notif+0x40>)
 800722a:	681b      	ldr	r3, [r3, #0]
 800722c:	1d3a      	adds	r2, r7, #4
 800722e:	4611      	mov	r1, r2
 8007230:	4618      	mov	r0, r3
 8007232:	f011 fec7 	bl	8018fc4 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken)
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	2b00      	cmp	r3, #0
 800723a:	d007      	beq.n	800724c <imu_proc_task_notif+0x34>
 800723c:	4b07      	ldr	r3, [pc, #28]	@ (800725c <imu_proc_task_notif+0x44>)
 800723e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007242:	601a      	str	r2, [r3, #0]
 8007244:	f3bf 8f4f 	dsb	sy
 8007248:	f3bf 8f6f 	isb	sy
}
 800724c:	bf00      	nop
 800724e:	3708      	adds	r7, #8
 8007250:	46bd      	mov	sp, r7
 8007252:	bd80      	pop	{r7, pc}
 8007254:	20003754 	.word	0x20003754
 8007258:	20003794 	.word	0x20003794
 800725c:	e000ed04 	.word	0xe000ed04

08007260 <gyro_data_ready>:

void gyro_data_ready(gyro_data_t gyro_data) {
 8007260:	b590      	push	{r4, r7, lr}
 8007262:	b085      	sub	sp, #20
 8007264:	af00      	add	r7, sp, #0
 8007266:	463c      	mov	r4, r7
 8007268:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		gyro_proc_data.gx = gyro_data.gz;
		gyro_proc_data.gy = gyro_data.gy;
		gyro_proc_data.gz = -gyro_data.gx;
	} else {

		gyro_proc_data.gx = gyro_data.gx;
 800726c:	683b      	ldr	r3, [r7, #0]
 800726e:	4a22      	ldr	r2, [pc, #136]	@ (80072f8 <gyro_data_ready+0x98>)
 8007270:	6013      	str	r3, [r2, #0]
		gyro_proc_data.gy = gyro_data.gy;
 8007272:	687b      	ldr	r3, [r7, #4]
 8007274:	4a20      	ldr	r2, [pc, #128]	@ (80072f8 <gyro_data_ready+0x98>)
 8007276:	6053      	str	r3, [r2, #4]
		if (gyro_data.gz > 0.02 || gyro_data.gz < -0.02){
 8007278:	68bb      	ldr	r3, [r7, #8]
 800727a:	4618      	mov	r0, r3
 800727c:	f7f9 f964 	bl	8000548 <__aeabi_f2d>
 8007280:	a319      	add	r3, pc, #100	@ (adr r3, 80072e8 <gyro_data_ready+0x88>)
 8007282:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007286:	f7f9 fc47 	bl	8000b18 <__aeabi_dcmpgt>
 800728a:	4603      	mov	r3, r0
 800728c:	2b00      	cmp	r3, #0
 800728e:	d10b      	bne.n	80072a8 <gyro_data_ready+0x48>
 8007290:	68bb      	ldr	r3, [r7, #8]
 8007292:	4618      	mov	r0, r3
 8007294:	f7f9 f958 	bl	8000548 <__aeabi_f2d>
 8007298:	a315      	add	r3, pc, #84	@ (adr r3, 80072f0 <gyro_data_ready+0x90>)
 800729a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800729e:	f7f9 fc1d 	bl	8000adc <__aeabi_dcmplt>
 80072a2:	4603      	mov	r3, r0
 80072a4:	2b00      	cmp	r3, #0
 80072a6:	d003      	beq.n	80072b0 <gyro_data_ready+0x50>
			gyro_proc_data.gz = gyro_data.gz;
 80072a8:	68bb      	ldr	r3, [r7, #8]
 80072aa:	4a13      	ldr	r2, [pc, #76]	@ (80072f8 <gyro_data_ready+0x98>)
 80072ac:	6093      	str	r3, [r2, #8]
 80072ae:	e003      	b.n	80072b8 <gyro_data_ready+0x58>
		} else {
			gyro_proc_data.gz = 0;
 80072b0:	4b11      	ldr	r3, [pc, #68]	@ (80072f8 <gyro_data_ready+0x98>)
 80072b2:	f04f 0200 	mov.w	r2, #0
 80072b6:	609a      	str	r2, [r3, #8]
		}

	}
	gyro_proc_data.last_gyro_update = gyro_data.last_gyro_update;
 80072b8:	68fb      	ldr	r3, [r7, #12]
 80072ba:	4a0f      	ldr	r2, [pc, #60]	@ (80072f8 <gyro_data_ready+0x98>)
 80072bc:	60d3      	str	r3, [r2, #12]

	update_flag |= 1; //sets bit 0 to true
 80072be:	4b0f      	ldr	r3, [pc, #60]	@ (80072fc <gyro_data_ready+0x9c>)
 80072c0:	781b      	ldrb	r3, [r3, #0]
 80072c2:	f043 0301 	orr.w	r3, r3, #1
 80072c6:	b2da      	uxtb	r2, r3
 80072c8:	4b0c      	ldr	r3, [pc, #48]	@ (80072fc <gyro_data_ready+0x9c>)
 80072ca:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when all the data is new
	if (update_flag == 0b111|| update_flag == 0b011) {
 80072cc:	4b0b      	ldr	r3, [pc, #44]	@ (80072fc <gyro_data_ready+0x9c>)
 80072ce:	781b      	ldrb	r3, [r3, #0]
 80072d0:	2b07      	cmp	r3, #7
 80072d2:	d003      	beq.n	80072dc <gyro_data_ready+0x7c>
 80072d4:	4b09      	ldr	r3, [pc, #36]	@ (80072fc <gyro_data_ready+0x9c>)
 80072d6:	781b      	ldrb	r3, [r3, #0]
 80072d8:	2b03      	cmp	r3, #3
 80072da:	d101      	bne.n	80072e0 <gyro_data_ready+0x80>
		imu_proc_task_notif();
 80072dc:	f7ff ff9c 	bl	8007218 <imu_proc_task_notif>
	}
}
 80072e0:	bf00      	nop
 80072e2:	3714      	adds	r7, #20
 80072e4:	46bd      	mov	sp, r7
 80072e6:	bd90      	pop	{r4, r7, pc}
 80072e8:	47ae147b 	.word	0x47ae147b
 80072ec:	3f947ae1 	.word	0x3f947ae1
 80072f0:	47ae147b 	.word	0x47ae147b
 80072f4:	bf947ae1 	.word	0xbf947ae1
 80072f8:	20003738 	.word	0x20003738
 80072fc:	20003754 	.word	0x20003754

08007300 <accel_data_ready>:

void accel_data_ready(accel_data_t accel_data) {
 8007300:	b590      	push	{r4, r7, lr}
 8007302:	b085      	sub	sp, #20
 8007304:	af00      	add	r7, sp, #0
 8007306:	463c      	mov	r4, r7
 8007308:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		accel_proc_data.ax = accel_data.az;
		accel_proc_data.ay = accel_data.ay;
		accel_proc_data.az = -accel_data.ax;
	} else {

		accel_proc_data.ax = accel_data.ax;
 800730c:	683b      	ldr	r3, [r7, #0]
 800730e:	4a10      	ldr	r2, [pc, #64]	@ (8007350 <accel_data_ready+0x50>)
 8007310:	6013      	str	r3, [r2, #0]
		accel_proc_data.ay = accel_data.ay;
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	4a0e      	ldr	r2, [pc, #56]	@ (8007350 <accel_data_ready+0x50>)
 8007316:	6053      	str	r3, [r2, #4]
		accel_proc_data.az = accel_data.az;
 8007318:	68bb      	ldr	r3, [r7, #8]
 800731a:	4a0d      	ldr	r2, [pc, #52]	@ (8007350 <accel_data_ready+0x50>)
 800731c:	6093      	str	r3, [r2, #8]
	}

	accel_proc_data.last_accel_update = accel_data.last_accel_update;
 800731e:	68fb      	ldr	r3, [r7, #12]
 8007320:	4a0b      	ldr	r2, [pc, #44]	@ (8007350 <accel_data_ready+0x50>)
 8007322:	60d3      	str	r3, [r2, #12]

	update_flag |= 1 << 1; //sets bit 1 to true
 8007324:	4b0b      	ldr	r3, [pc, #44]	@ (8007354 <accel_data_ready+0x54>)
 8007326:	781b      	ldrb	r3, [r3, #0]
 8007328:	f043 0302 	orr.w	r3, r3, #2
 800732c:	b2da      	uxtb	r2, r3
 800732e:	4b09      	ldr	r3, [pc, #36]	@ (8007354 <accel_data_ready+0x54>)
 8007330:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when accel and gyro data are new
	if (update_flag == 0b111 || update_flag == 0b011) {
 8007332:	4b08      	ldr	r3, [pc, #32]	@ (8007354 <accel_data_ready+0x54>)
 8007334:	781b      	ldrb	r3, [r3, #0]
 8007336:	2b07      	cmp	r3, #7
 8007338:	d003      	beq.n	8007342 <accel_data_ready+0x42>
 800733a:	4b06      	ldr	r3, [pc, #24]	@ (8007354 <accel_data_ready+0x54>)
 800733c:	781b      	ldrb	r3, [r3, #0]
 800733e:	2b03      	cmp	r3, #3
 8007340:	d101      	bne.n	8007346 <accel_data_ready+0x46>
		imu_proc_task_notif();
 8007342:	f7ff ff69 	bl	8007218 <imu_proc_task_notif>
	}
}
 8007346:	bf00      	nop
 8007348:	3714      	adds	r7, #20
 800734a:	46bd      	mov	sp, r7
 800734c:	bd90      	pop	{r4, r7, pc}
 800734e:	bf00      	nop
 8007350:	20003728 	.word	0x20003728
 8007354:	20003754 	.word	0x20003754

08007358 <mag_data_ready>:

void mag_data_ready(mag_data_t mag_data) {
 8007358:	b480      	push	{r7}
 800735a:	b085      	sub	sp, #20
 800735c:	af00      	add	r7, sp, #0
 800735e:	1d3b      	adds	r3, r7, #4
 8007360:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	mag_proc_data.mx = mag_data.mx;
 8007364:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8007368:	4b0c      	ldr	r3, [pc, #48]	@ (800739c <mag_data_ready+0x44>)
 800736a:	801a      	strh	r2, [r3, #0]
	mag_proc_data.my = mag_data.my;
 800736c:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007370:	4b0a      	ldr	r3, [pc, #40]	@ (800739c <mag_data_ready+0x44>)
 8007372:	805a      	strh	r2, [r3, #2]
	mag_proc_data.mz = mag_data.mz;
 8007374:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8007378:	4b08      	ldr	r3, [pc, #32]	@ (800739c <mag_data_ready+0x44>)
 800737a:	809a      	strh	r2, [r3, #4]
	mag_proc_data.last_mag_update = mag_data.last_mag_update;
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	4a07      	ldr	r2, [pc, #28]	@ (800739c <mag_data_ready+0x44>)
 8007380:	6093      	str	r3, [r2, #8]

	update_flag |= 1 << 2;
 8007382:	4b07      	ldr	r3, [pc, #28]	@ (80073a0 <mag_data_ready+0x48>)
 8007384:	781b      	ldrb	r3, [r3, #0]
 8007386:	f043 0304 	orr.w	r3, r3, #4
 800738a:	b2da      	uxtb	r2, r3
 800738c:	4b04      	ldr	r3, [pc, #16]	@ (80073a0 <mag_data_ready+0x48>)
 800738e:	701a      	strb	r2, [r3, #0]
	if (update_flag == 0b111) {
		//disabled as magnetometer data is not used
		//imu_proc_task_notif();
	}
}
 8007390:	bf00      	nop
 8007392:	3714      	adds	r7, #20
 8007394:	46bd      	mov	sp, r7
 8007396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739a:	4770      	bx	lr
 800739c:	20003748 	.word	0x20003748
 80073a0:	20003754 	.word	0x20003754

080073a4 <imu_processing_task>:

void imu_processing_task(void *argument) {
 80073a4:	b580      	push	{r7, lr}
 80073a6:	b082      	sub	sp, #8
 80073a8:	af00      	add	r7, sp, #0
 80073aa:	6078      	str	r0, [r7, #4]
	imu_start_ints();
 80073ac:	f7fa fc0e 	bl	8001bcc <imu_start_ints>
	ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80073b0:	f04f 31ff 	mov.w	r1, #4294967295
 80073b4:	2001      	movs	r0, #1
 80073b6:	f011 fdb9 	bl	8018f2c <ulTaskNotifyTake>
	imu_attitude_update();
 80073ba:	f000 f815 	bl	80073e8 <imu_attitude_update>
//	quat_startup();
	while (1) {
		fusion();
 80073be:	f7ff fbbb 	bl	8006b38 <fusion>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80073c2:	f04f 31ff 	mov.w	r1, #4294967295
 80073c6:	2001      	movs	r0, #1
 80073c8:	f011 fdb0 	bl	8018f2c <ulTaskNotifyTake>
		imu_attitude_update();
 80073cc:	f000 f80c 	bl	80073e8 <imu_attitude_update>
		portYIELD();
 80073d0:	4b04      	ldr	r3, [pc, #16]	@ (80073e4 <imu_processing_task+0x40>)
 80073d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80073d6:	601a      	str	r2, [r3, #0]
 80073d8:	f3bf 8f4f 	dsb	sy
 80073dc:	f3bf 8f6f 	isb	sy
		fusion();
 80073e0:	bf00      	nop
 80073e2:	e7ec      	b.n	80073be <imu_processing_task+0x1a>
 80073e4:	e000ed04 	.word	0xe000ed04

080073e8 <imu_attitude_update>:
	}
}


void imu_attitude_update(void) {
 80073e8:	b480      	push	{r7}
 80073ea:	af00      	add	r7, sp, #0

}
 80073ec:	bf00      	nop
 80073ee:	46bd      	mov	sp, r7
 80073f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073f4:	4770      	bx	lr
	...

080073f8 <leg_kinematic_task>:
double left_F_control;
double left_Tp_control;
double right_F_control;
double right_Tp_control;
extern Target target;
void leg_kinematic_task(void *argument) {
 80073f8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80073fc:	ed2d 8b04 	vpush	{d8-d9}
 8007400:	b0da      	sub	sp, #360	@ 0x168
 8007402:	af00      	add	r7, sp, #0
 8007404:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8007408:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 800740c:	6018      	str	r0, [r3, #0]
	double leftTorque[2];
	double rightTorque[2];
	double starttime = 0;
 800740e:	f04f 0200 	mov.w	r2, #0
 8007412:	f04f 0300 	mov.w	r3, #0
 8007416:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
	double endtime = 0;
 800741a:	f04f 0200 	mov.w	r2, #0
 800741e:	f04f 0300 	mov.w	r3, #0
 8007422:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
	PID left_Tp;
	PID right_F;
	PID right_Tp;
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 8007426:	f7fa fecb 	bl	80021c0 <get_microseconds>
 800742a:	4603      	mov	r3, r0
 800742c:	4618      	mov	r0, r3
 800742e:	f7f9 f869 	bl	8000504 <__aeabi_ui2d>
 8007432:	4602      	mov	r2, r0
 8007434:	460b      	mov	r3, r1
 8007436:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
        dt = endtime - starttime;
 800743a:	e9d7 2358 	ldrd	r2, r3, [r7, #352]	@ 0x160
 800743e:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	@ 0x158
 8007442:	f7f8 ff21 	bl	8000288 <__aeabi_dsub>
 8007446:	4602      	mov	r2, r0
 8007448:	460b      	mov	r3, r1
 800744a:	e9c7 2354 	strd	r2, r3, [r7, #336]	@ 0x150
        start_time = xTaskGetTickCount();
 800744e:	f011 f8f1 	bl	8018634 <xTaskGetTickCount>
 8007452:	4602      	mov	r2, r0
 8007454:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8007458:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800745c:	601a      	str	r2, [r3, #0]
        starttime = get_microseconds();
 800745e:	f7fa feaf 	bl	80021c0 <get_microseconds>
 8007462:	4603      	mov	r3, r0
 8007464:	4618      	mov	r0, r3
 8007466:	f7f9 f84d 	bl	8000504 <__aeabi_ui2d>
 800746a:	4602      	mov	r2, r0
 800746c:	460b      	mov	r3, r1
 800746e:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
        /////////
       leg_pos(g_can_motors[7].angle_rad,g_can_motors[6].angle_rad,left_leg_pos); //8->4 9->5
 8007472:	4b6b      	ldr	r3, [pc, #428]	@ (8007620 <leg_kinematic_task+0x228>)
 8007474:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	4618      	mov	r0, r3
 800747c:	f7f9 f864 	bl	8000548 <__aeabi_f2d>
 8007480:	4680      	mov	r8, r0
 8007482:	4689      	mov	r9, r1
 8007484:	4b66      	ldr	r3, [pc, #408]	@ (8007620 <leg_kinematic_task+0x228>)
 8007486:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 800748a:	681b      	ldr	r3, [r3, #0]
 800748c:	4618      	mov	r0, r3
 800748e:	f7f9 f85b 	bl	8000548 <__aeabi_f2d>
 8007492:	4682      	mov	sl, r0
 8007494:	468b      	mov	fp, r1
 8007496:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 800749a:	4618      	mov	r0, r3
 800749c:	ec4b ab11 	vmov	d1, sl, fp
 80074a0:	ec49 8b10 	vmov	d0, r8, r9
 80074a4:	f000 f978 	bl	8007798 <leg_pos>
       leftLegPos.length = left_leg_pos[0];
 80074a8:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	@ 0x120
 80074ac:	4610      	mov	r0, r2
 80074ae:	4619      	mov	r1, r3
 80074b0:	f7f9 fb9a 	bl	8000be8 <__aeabi_d2f>
 80074b4:	4603      	mov	r3, r0
 80074b6:	4a5b      	ldr	r2, [pc, #364]	@ (8007624 <leg_kinematic_task+0x22c>)
 80074b8:	6053      	str	r3, [r2, #4]
       leftLegPos.angle = left_leg_pos[1];
 80074ba:	e9d7 234a 	ldrd	r2, r3, [r7, #296]	@ 0x128
 80074be:	4610      	mov	r0, r2
 80074c0:	4619      	mov	r1, r3
 80074c2:	f7f9 fb91 	bl	8000be8 <__aeabi_d2f>
 80074c6:	4603      	mov	r3, r0
 80074c8:	4a56      	ldr	r2, [pc, #344]	@ (8007624 <leg_kinematic_task+0x22c>)
 80074ca:	6013      	str	r3, [r2, #0]
    //    leg_pos(g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,right_leg_pos);//17->6 16->7
    //    rightLegPos.length = right_leg_pos[0];
    //    rightLegPos.angle = right_leg_pos[1];
       PID_Init(&left_F, 5, 0, 0.01, -1000, 1000); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
 80074cc:	f107 03d0 	add.w	r3, r7, #208	@ 0xd0
 80074d0:	ed9f 4b3f 	vldr	d4, [pc, #252]	@ 80075d0 <leg_kinematic_task+0x1d8>
 80074d4:	ed9f 3b40 	vldr	d3, [pc, #256]	@ 80075d8 <leg_kinematic_task+0x1e0>
 80074d8:	ed9f 2b41 	vldr	d2, [pc, #260]	@ 80075e0 <leg_kinematic_task+0x1e8>
 80074dc:	ed9f 1b42 	vldr	d1, [pc, #264]	@ 80075e8 <leg_kinematic_task+0x1f0>
 80074e0:	ed9f 0b43 	vldr	d0, [pc, #268]	@ 80075f0 <leg_kinematic_task+0x1f8>
 80074e4:	4618      	mov	r0, r3
 80074e6:	f7fd faca 	bl	8004a7e <PID_Init>
       PID_Init(&left_Tp, 0.01, 0.01, 0.01, -10, 10); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
 80074ea:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 80074ee:	ed9f 4b42 	vldr	d4, [pc, #264]	@ 80075f8 <leg_kinematic_task+0x200>
 80074f2:	ed9f 3b43 	vldr	d3, [pc, #268]	@ 8007600 <leg_kinematic_task+0x208>
 80074f6:	ed9f 2b3a 	vldr	d2, [pc, #232]	@ 80075e0 <leg_kinematic_task+0x1e8>
 80074fa:	ed9f 1b39 	vldr	d1, [pc, #228]	@ 80075e0 <leg_kinematic_task+0x1e8>
 80074fe:	ed9f 0b38 	vldr	d0, [pc, #224]	@ 80075e0 <leg_kinematic_task+0x1e8>
 8007502:	4618      	mov	r0, r3
 8007504:	f7fd fabb 	bl	8004a7e <PID_Init>
    //    PID_Init(&right_F, 5000, 0, 0.01, -1000, 1000); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
    //    PID_Init(&right_Tp, 0.01, 0.01, 0.01, -10, 10);
       left_F_control = PID_Compute(&left_F, 0.13, leftLegPos.length, dt,0.001);
 8007508:	4b46      	ldr	r3, [pc, #280]	@ (8007624 <leg_kinematic_task+0x22c>)
 800750a:	685b      	ldr	r3, [r3, #4]
 800750c:	4618      	mov	r0, r3
 800750e:	f7f9 f81b 	bl	8000548 <__aeabi_f2d>
 8007512:	f107 03d0 	add.w	r3, r7, #208	@ 0xd0
 8007516:	ed9f 3b3c 	vldr	d3, [pc, #240]	@ 8007608 <leg_kinematic_task+0x210>
 800751a:	ed97 2b54 	vldr	d2, [r7, #336]	@ 0x150
 800751e:	ec41 0b11 	vmov	d1, r0, r1
 8007522:	ed9f 0b3b 	vldr	d0, [pc, #236]	@ 8007610 <leg_kinematic_task+0x218>
 8007526:	4618      	mov	r0, r3
 8007528:	f7fd fae4 	bl	8004af4 <PID_Compute>
 800752c:	eeb0 7a40 	vmov.f32	s14, s0
 8007530:	eef0 7a60 	vmov.f32	s15, s1
 8007534:	4b3c      	ldr	r3, [pc, #240]	@ (8007628 <leg_kinematic_task+0x230>)
 8007536:	ed83 7b00 	vstr	d7, [r3]
       left_Tp_control = -PID_Compute(&left_Tp, PI/2, leftLegPos.angle, dt,0.001);
 800753a:	4b3a      	ldr	r3, [pc, #232]	@ (8007624 <leg_kinematic_task+0x22c>)
 800753c:	681b      	ldr	r3, [r3, #0]
 800753e:	4618      	mov	r0, r3
 8007540:	f7f9 f802 	bl	8000548 <__aeabi_f2d>
 8007544:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 8007548:	ed9f 3b2f 	vldr	d3, [pc, #188]	@ 8007608 <leg_kinematic_task+0x210>
 800754c:	ed97 2b54 	vldr	d2, [r7, #336]	@ 0x150
 8007550:	ec41 0b11 	vmov	d1, r0, r1
 8007554:	ed9f 0b30 	vldr	d0, [pc, #192]	@ 8007618 <leg_kinematic_task+0x220>
 8007558:	4618      	mov	r0, r3
 800755a:	f7fd facb 	bl	8004af4 <PID_Compute>
 800755e:	ec53 2b10 	vmov	r2, r3, d0
 8007562:	4614      	mov	r4, r2
 8007564:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 8007568:	4b30      	ldr	r3, [pc, #192]	@ (800762c <leg_kinematic_task+0x234>)
 800756a:	e9c3 4500 	strd	r4, r5, [r3]
    //    right_F_control = PID_Compute(&right_F, 0.13, rightLegPos.length, dt,0.001);
    //    right_Tp_control = -PID_Compute(&right_Tp, 0, rightLegPos.angle, dt,0.001);
       leg_conv(left_F_control,left_Tp_control,g_can_motors[5].angle_rad,g_can_motors[4].angle_rad,leftTorque);
 800756e:	4b2e      	ldr	r3, [pc, #184]	@ (8007628 <leg_kinematic_task+0x230>)
 8007570:	ed93 8b00 	vldr	d8, [r3]
 8007574:	4b2d      	ldr	r3, [pc, #180]	@ (800762c <leg_kinematic_task+0x234>)
 8007576:	ed93 9b00 	vldr	d9, [r3]
 800757a:	4b29      	ldr	r3, [pc, #164]	@ (8007620 <leg_kinematic_task+0x228>)
 800757c:	f503 6399 	add.w	r3, r3, #1224	@ 0x4c8
 8007580:	681b      	ldr	r3, [r3, #0]
 8007582:	4618      	mov	r0, r3
 8007584:	f7f8 ffe0 	bl	8000548 <__aeabi_f2d>
 8007588:	4680      	mov	r8, r0
 800758a:	4689      	mov	r9, r1
 800758c:	4b24      	ldr	r3, [pc, #144]	@ (8007620 <leg_kinematic_task+0x228>)
 800758e:	f8d3 33d8 	ldr.w	r3, [r3, #984]	@ 0x3d8
 8007592:	4618      	mov	r0, r3
 8007594:	f7f8 ffd8 	bl	8000548 <__aeabi_f2d>
 8007598:	4682      	mov	sl, r0
 800759a:	468b      	mov	fp, r1
 800759c:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80075a0:	4618      	mov	r0, r3
 80075a2:	ec4b ab13 	vmov	d3, sl, fp
 80075a6:	ec49 8b12 	vmov	d2, r8, r9
 80075aa:	eeb0 1a49 	vmov.f32	s2, s18
 80075ae:	eef0 1a69 	vmov.f32	s3, s19
 80075b2:	eeb0 0a48 	vmov.f32	s0, s16
 80075b6:	eef0 0a68 	vmov.f32	s1, s17
 80075ba:	f000 faa9 	bl	8007b10 <leg_conv>
    //    g_can_motors[6].torque = leftTorque[0];
    //    g_can_motors[7].torque = leftTorque[1];
    //    g_can_motors[4].torque = rightTorque[0];
    //    g_can_motors[5].torque = rightTorque[1];
        ///////////////////
        vTaskDelayUntil(&start_time, 5);
 80075be:	f107 030c 	add.w	r3, r7, #12
 80075c2:	2105      	movs	r1, #5
 80075c4:	4618      	mov	r0, r3
 80075c6:	f010 fe61 	bl	801828c <vTaskDelayUntil>
        endtime = get_microseconds();
 80075ca:	bf00      	nop
 80075cc:	e72b      	b.n	8007426 <leg_kinematic_task+0x2e>
 80075ce:	bf00      	nop
 80075d0:	00000000 	.word	0x00000000
 80075d4:	408f4000 	.word	0x408f4000
 80075d8:	00000000 	.word	0x00000000
 80075dc:	c08f4000 	.word	0xc08f4000
 80075e0:	47ae147b 	.word	0x47ae147b
 80075e4:	3f847ae1 	.word	0x3f847ae1
	...
 80075f4:	40140000 	.word	0x40140000
 80075f8:	00000000 	.word	0x00000000
 80075fc:	40240000 	.word	0x40240000
 8007600:	00000000 	.word	0x00000000
 8007604:	c0240000 	.word	0xc0240000
 8007608:	d2f1a9fc 	.word	0xd2f1a9fc
 800760c:	3f50624d 	.word	0x3f50624d
 8007610:	0a3d70a4 	.word	0x0a3d70a4
 8007614:	3fc0a3d7 	.word	0x3fc0a3d7
 8007618:	60000000 	.word	0x60000000
 800761c:	3ff921fb 	.word	0x3ff921fb
 8007620:	20001e48 	.word	0x20001e48
 8007624:	20001e34 	.word	0x20001e34
 8007628:	20003770 	.word	0x20003770
 800762c:	20003778 	.word	0x20003778

08007630 <rt_atan2d_snf>:
 8007630:	b5b0      	push	{r4, r5, r7, lr}
 8007632:	b088      	sub	sp, #32
 8007634:	af00      	add	r7, sp, #0
 8007636:	ed87 0b02 	vstr	d0, [r7, #8]
 800763a:	ed87 1b00 	vstr	d1, [r7]
 800763e:	ed97 0b02 	vldr	d0, [r7, #8]
 8007642:	f003 fc13 	bl	800ae6c <rtIsNaN>
 8007646:	4603      	mov	r3, r0
 8007648:	2b00      	cmp	r3, #0
 800764a:	d106      	bne.n	800765a <rt_atan2d_snf+0x2a>
 800764c:	ed97 0b00 	vldr	d0, [r7]
 8007650:	f003 fc0c 	bl	800ae6c <rtIsNaN>
 8007654:	4603      	mov	r3, r0
 8007656:	2b00      	cmp	r3, #0
 8007658:	d005      	beq.n	8007666 <rt_atan2d_snf+0x36>
 800765a:	4b4d      	ldr	r3, [pc, #308]	@ (8007790 <rt_atan2d_snf+0x160>)
 800765c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007660:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8007664:	e07e      	b.n	8007764 <rt_atan2d_snf+0x134>
 8007666:	ed97 0b02 	vldr	d0, [r7, #8]
 800766a:	f003 fbd1 	bl	800ae10 <rtIsInf>
 800766e:	4603      	mov	r3, r0
 8007670:	2b00      	cmp	r3, #0
 8007672:	d03b      	beq.n	80076ec <rt_atan2d_snf+0xbc>
 8007674:	ed97 0b00 	vldr	d0, [r7]
 8007678:	f003 fbca 	bl	800ae10 <rtIsInf>
 800767c:	4603      	mov	r3, r0
 800767e:	2b00      	cmp	r3, #0
 8007680:	d034      	beq.n	80076ec <rt_atan2d_snf+0xbc>
 8007682:	f04f 0200 	mov.w	r2, #0
 8007686:	f04f 0300 	mov.w	r3, #0
 800768a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800768e:	f7f9 fa43 	bl	8000b18 <__aeabi_dcmpgt>
 8007692:	4603      	mov	r3, r0
 8007694:	2b00      	cmp	r3, #0
 8007696:	d002      	beq.n	800769e <rt_atan2d_snf+0x6e>
 8007698:	2301      	movs	r3, #1
 800769a:	617b      	str	r3, [r7, #20]
 800769c:	e002      	b.n	80076a4 <rt_atan2d_snf+0x74>
 800769e:	f04f 33ff 	mov.w	r3, #4294967295
 80076a2:	617b      	str	r3, [r7, #20]
 80076a4:	f04f 0200 	mov.w	r2, #0
 80076a8:	f04f 0300 	mov.w	r3, #0
 80076ac:	e9d7 0100 	ldrd	r0, r1, [r7]
 80076b0:	f7f9 fa32 	bl	8000b18 <__aeabi_dcmpgt>
 80076b4:	4603      	mov	r3, r0
 80076b6:	2b00      	cmp	r3, #0
 80076b8:	d002      	beq.n	80076c0 <rt_atan2d_snf+0x90>
 80076ba:	2301      	movs	r3, #1
 80076bc:	613b      	str	r3, [r7, #16]
 80076be:	e002      	b.n	80076c6 <rt_atan2d_snf+0x96>
 80076c0:	f04f 33ff 	mov.w	r3, #4294967295
 80076c4:	613b      	str	r3, [r7, #16]
 80076c6:	6978      	ldr	r0, [r7, #20]
 80076c8:	f7f8 ff2c 	bl	8000524 <__aeabi_i2d>
 80076cc:	4604      	mov	r4, r0
 80076ce:	460d      	mov	r5, r1
 80076d0:	6938      	ldr	r0, [r7, #16]
 80076d2:	f7f8 ff27 	bl	8000524 <__aeabi_i2d>
 80076d6:	4602      	mov	r2, r0
 80076d8:	460b      	mov	r3, r1
 80076da:	ec43 2b11 	vmov	d1, r2, r3
 80076de:	ec45 4b10 	vmov	d0, r4, r5
 80076e2:	f017 ffc9 	bl	801f678 <atan2>
 80076e6:	ed87 0b06 	vstr	d0, [r7, #24]
 80076ea:	e03b      	b.n	8007764 <rt_atan2d_snf+0x134>
 80076ec:	f04f 0200 	mov.w	r2, #0
 80076f0:	f04f 0300 	mov.w	r3, #0
 80076f4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80076f8:	f7f9 f9e6 	bl	8000ac8 <__aeabi_dcmpeq>
 80076fc:	4603      	mov	r3, r0
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d028      	beq.n	8007754 <rt_atan2d_snf+0x124>
 8007702:	f04f 0200 	mov.w	r2, #0
 8007706:	f04f 0300 	mov.w	r3, #0
 800770a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800770e:	f7f9 fa03 	bl	8000b18 <__aeabi_dcmpgt>
 8007712:	4603      	mov	r3, r0
 8007714:	2b00      	cmp	r3, #0
 8007716:	d005      	beq.n	8007724 <rt_atan2d_snf+0xf4>
 8007718:	a319      	add	r3, pc, #100	@ (adr r3, 8007780 <rt_atan2d_snf+0x150>)
 800771a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800771e:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8007722:	e01f      	b.n	8007764 <rt_atan2d_snf+0x134>
 8007724:	f04f 0200 	mov.w	r2, #0
 8007728:	f04f 0300 	mov.w	r3, #0
 800772c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8007730:	f7f9 f9d4 	bl	8000adc <__aeabi_dcmplt>
 8007734:	4603      	mov	r3, r0
 8007736:	2b00      	cmp	r3, #0
 8007738:	d005      	beq.n	8007746 <rt_atan2d_snf+0x116>
 800773a:	a313      	add	r3, pc, #76	@ (adr r3, 8007788 <rt_atan2d_snf+0x158>)
 800773c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007740:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8007744:	e00e      	b.n	8007764 <rt_atan2d_snf+0x134>
 8007746:	f04f 0200 	mov.w	r2, #0
 800774a:	f04f 0300 	mov.w	r3, #0
 800774e:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8007752:	e007      	b.n	8007764 <rt_atan2d_snf+0x134>
 8007754:	ed97 1b00 	vldr	d1, [r7]
 8007758:	ed97 0b02 	vldr	d0, [r7, #8]
 800775c:	f017 ff8c 	bl	801f678 <atan2>
 8007760:	ed87 0b06 	vstr	d0, [r7, #24]
 8007764:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007768:	ec43 2b17 	vmov	d7, r2, r3
 800776c:	eeb0 0a47 	vmov.f32	s0, s14
 8007770:	eef0 0a67 	vmov.f32	s1, s15
 8007774:	3720      	adds	r7, #32
 8007776:	46bd      	mov	sp, r7
 8007778:	bdb0      	pop	{r4, r5, r7, pc}
 800777a:	bf00      	nop
 800777c:	f3af 8000 	nop.w
 8007780:	54442d18 	.word	0x54442d18
 8007784:	3ff921fb 	.word	0x3ff921fb
 8007788:	54442d18 	.word	0x54442d18
 800778c:	bff921fb 	.word	0xbff921fb
 8007790:	20000010 	.word	0x20000010
 8007794:	00000000 	.word	0x00000000

08007798 <leg_pos>:
 8007798:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800779c:	b09a      	sub	sp, #104	@ 0x68
 800779e:	af00      	add	r7, sp, #0
 80077a0:	ed87 0b04 	vstr	d0, [r7, #16]
 80077a4:	ed87 1b02 	vstr	d1, [r7, #8]
 80077a8:	6078      	str	r0, [r7, #4]
 80077aa:	ed97 0b04 	vldr	d0, [r7, #16]
 80077ae:	f018 f92b 	bl	801fa08 <cos>
 80077b2:	ed87 0b18 	vstr	d0, [r7, #96]	@ 0x60
 80077b6:	ed97 0b02 	vldr	d0, [r7, #8]
 80077ba:	f018 f925 	bl	801fa08 <cos>
 80077be:	ed87 0b16 	vstr	d0, [r7, #88]	@ 0x58
 80077c2:	ed97 0b04 	vldr	d0, [r7, #16]
 80077c6:	f018 f97b 	bl	801fac0 <sin>
 80077ca:	ed87 0b14 	vstr	d0, [r7, #80]	@ 0x50
 80077ce:	ed97 0b02 	vldr	d0, [r7, #8]
 80077d2:	f018 f975 	bl	801fac0 <sin>
 80077d6:	ed87 0b12 	vstr	d0, [r7, #72]	@ 0x48
 80077da:	a3c4      	add	r3, pc, #784	@ (adr r3, 8007aec <leg_pos+0x354>)
 80077dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80077e0:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 80077e4:	f7f8 ff08 	bl	80005f8 <__aeabi_dmul>
 80077e8:	4602      	mov	r2, r0
 80077ea:	460b      	mov	r3, r1
 80077ec:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 80077f0:	a3be      	add	r3, pc, #760	@ (adr r3, 8007aec <leg_pos+0x354>)
 80077f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80077f6:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 80077fa:	f7f8 fefd 	bl	80005f8 <__aeabi_dmul>
 80077fe:	4602      	mov	r2, r0
 8007800:	460b      	mov	r3, r1
 8007802:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
 8007806:	a3bb      	add	r3, pc, #748	@ (adr r3, 8007af4 <leg_pos+0x35c>)
 8007808:	e9d3 2300 	ldrd	r2, r3, [r3]
 800780c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007810:	f7f8 fef2 	bl	80005f8 <__aeabi_dmul>
 8007814:	4602      	mov	r2, r0
 8007816:	460b      	mov	r3, r1
 8007818:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 800781c:	a3b5      	add	r3, pc, #724	@ (adr r3, 8007af4 <leg_pos+0x35c>)
 800781e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007822:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007826:	f7f8 fee7 	bl	80005f8 <__aeabi_dmul>
 800782a:	4602      	mov	r2, r0
 800782c:	460b      	mov	r3, r1
 800782e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8007832:	a3ae      	add	r3, pc, #696	@ (adr r3, 8007aec <leg_pos+0x354>)
 8007834:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007838:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800783c:	f7f8 fedc 	bl	80005f8 <__aeabi_dmul>
 8007840:	4602      	mov	r2, r0
 8007842:	460b      	mov	r3, r1
 8007844:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8007848:	f7f8 fd1e 	bl	8000288 <__aeabi_dsub>
 800784c:	4602      	mov	r2, r0
 800784e:	460b      	mov	r3, r1
 8007850:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007854:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007858:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 800785c:	f7f8 fd14 	bl	8000288 <__aeabi_dsub>
 8007860:	4602      	mov	r2, r0
 8007862:	460b      	mov	r3, r1
 8007864:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8007868:	a3a0      	add	r3, pc, #640	@ (adr r3, 8007aec <leg_pos+0x354>)
 800786a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800786e:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 8007872:	f7f8 fec1 	bl	80005f8 <__aeabi_dmul>
 8007876:	4602      	mov	r2, r0
 8007878:	460b      	mov	r3, r1
 800787a:	4610      	mov	r0, r2
 800787c:	4619      	mov	r1, r3
 800787e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007882:	f7f8 fd01 	bl	8000288 <__aeabi_dsub>
 8007886:	4602      	mov	r2, r0
 8007888:	460b      	mov	r3, r1
 800788a:	4610      	mov	r0, r2
 800788c:	4619      	mov	r1, r3
 800788e:	a39b      	add	r3, pc, #620	@ (adr r3, 8007afc <leg_pos+0x364>)
 8007890:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007894:	f7f8 fcfa 	bl	800028c <__adddf3>
 8007898:	4602      	mov	r2, r0
 800789a:	460b      	mov	r3, r1
 800789c:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80078a0:	a394      	add	r3, pc, #592	@ (adr r3, 8007af4 <leg_pos+0x35c>)
 80078a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078a6:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 80078aa:	f7f8 fea5 	bl	80005f8 <__aeabi_dmul>
 80078ae:	4602      	mov	r2, r0
 80078b0:	460b      	mov	r3, r1
 80078b2:	4614      	mov	r4, r2
 80078b4:	461d      	mov	r5, r3
 80078b6:	a38f      	add	r3, pc, #572	@ (adr r3, 8007af4 <leg_pos+0x35c>)
 80078b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078bc:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 80078c0:	f7f8 fe9a 	bl	80005f8 <__aeabi_dmul>
 80078c4:	4602      	mov	r2, r0
 80078c6:	460b      	mov	r3, r1
 80078c8:	4620      	mov	r0, r4
 80078ca:	4629      	mov	r1, r5
 80078cc:	f7f8 fcdc 	bl	8000288 <__aeabi_dsub>
 80078d0:	4602      	mov	r2, r0
 80078d2:	460b      	mov	r3, r1
 80078d4:	4610      	mov	r0, r2
 80078d6:	4619      	mov	r1, r3
 80078d8:	a38a      	add	r3, pc, #552	@ (adr r3, 8007b04 <leg_pos+0x36c>)
 80078da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078de:	f7f8 fcd5 	bl	800028c <__adddf3>
 80078e2:	4602      	mov	r2, r0
 80078e4:	460b      	mov	r3, r1
 80078e6:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 80078ea:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80078ee:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 80078f2:	f7f8 fe81 	bl	80005f8 <__aeabi_dmul>
 80078f6:	4602      	mov	r2, r0
 80078f8:	460b      	mov	r3, r1
 80078fa:	4614      	mov	r4, r2
 80078fc:	461d      	mov	r5, r3
 80078fe:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007902:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8007906:	f7f8 fe77 	bl	80005f8 <__aeabi_dmul>
 800790a:	4602      	mov	r2, r0
 800790c:	460b      	mov	r3, r1
 800790e:	4620      	mov	r0, r4
 8007910:	4629      	mov	r1, r5
 8007912:	f7f8 fcbb 	bl	800028c <__adddf3>
 8007916:	4602      	mov	r2, r0
 8007918:	460b      	mov	r3, r1
 800791a:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 800791e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007922:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007926:	f7f8 fcb1 	bl	800028c <__adddf3>
 800792a:	4602      	mov	r2, r0
 800792c:	460b      	mov	r3, r1
 800792e:	f04f 0000 	mov.w	r0, #0
 8007932:	496d      	ldr	r1, [pc, #436]	@ (8007ae8 <leg_pos+0x350>)
 8007934:	f7f8 ff8a 	bl	800084c <__aeabi_ddiv>
 8007938:	4602      	mov	r2, r0
 800793a:	460b      	mov	r3, r1
 800793c:	4614      	mov	r4, r2
 800793e:	461d      	mov	r5, r3
 8007940:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8007944:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8007948:	f7f8 fc9e 	bl	8000288 <__aeabi_dsub>
 800794c:	4602      	mov	r2, r0
 800794e:	460b      	mov	r3, r1
 8007950:	4690      	mov	r8, r2
 8007952:	4699      	mov	r9, r3
 8007954:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007958:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800795c:	f7f8 fe4c 	bl	80005f8 <__aeabi_dmul>
 8007960:	4602      	mov	r2, r0
 8007962:	460b      	mov	r3, r1
 8007964:	4692      	mov	sl, r2
 8007966:	469b      	mov	fp, r3
 8007968:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800796c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007970:	f7f8 fe42 	bl	80005f8 <__aeabi_dmul>
 8007974:	4602      	mov	r2, r0
 8007976:	460b      	mov	r3, r1
 8007978:	4650      	mov	r0, sl
 800797a:	4659      	mov	r1, fp
 800797c:	f7f8 fc86 	bl	800028c <__adddf3>
 8007980:	4602      	mov	r2, r0
 8007982:	460b      	mov	r3, r1
 8007984:	4692      	mov	sl, r2
 8007986:	469b      	mov	fp, r3
 8007988:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800798c:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007990:	f7f8 fe32 	bl	80005f8 <__aeabi_dmul>
 8007994:	4602      	mov	r2, r0
 8007996:	460b      	mov	r3, r1
 8007998:	4650      	mov	r0, sl
 800799a:	4659      	mov	r1, fp
 800799c:	f7f8 fc74 	bl	8000288 <__aeabi_dsub>
 80079a0:	4602      	mov	r2, r0
 80079a2:	460b      	mov	r3, r1
 80079a4:	ec43 2b17 	vmov	d7, r2, r3
 80079a8:	eeb0 0a47 	vmov.f32	s0, s14
 80079ac:	eef0 0a67 	vmov.f32	s1, s15
 80079b0:	f017 fe64 	bl	801f67c <sqrt>
 80079b4:	ec53 2b10 	vmov	r2, r3, d0
 80079b8:	4640      	mov	r0, r8
 80079ba:	4649      	mov	r1, r9
 80079bc:	f7f8 fc66 	bl	800028c <__adddf3>
 80079c0:	4602      	mov	r2, r0
 80079c2:	460b      	mov	r3, r1
 80079c4:	4620      	mov	r0, r4
 80079c6:	4629      	mov	r1, r5
 80079c8:	f7f8 fe16 	bl	80005f8 <__aeabi_dmul>
 80079cc:	4602      	mov	r2, r0
 80079ce:	460b      	mov	r3, r1
 80079d0:	ec43 2b17 	vmov	d7, r2, r3
 80079d4:	eeb0 0a47 	vmov.f32	s0, s14
 80079d8:	eef0 0a67 	vmov.f32	s1, s15
 80079dc:	f017 fe7c 	bl	801f6d8 <atan>
 80079e0:	ec51 0b10 	vmov	r0, r1, d0
 80079e4:	4602      	mov	r2, r0
 80079e6:	460b      	mov	r3, r1
 80079e8:	f7f8 fc50 	bl	800028c <__adddf3>
 80079ec:	4602      	mov	r2, r0
 80079ee:	460b      	mov	r3, r1
 80079f0:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 80079f4:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 80079f8:	f018 f862 	bl	801fac0 <sin>
 80079fc:	ec51 0b10 	vmov	r0, r1, d0
 8007a00:	a335      	add	r3, pc, #212	@ (adr r3, 8007ad8 <leg_pos+0x340>)
 8007a02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a06:	f7f8 fdf7 	bl	80005f8 <__aeabi_dmul>
 8007a0a:	4602      	mov	r2, r0
 8007a0c:	460b      	mov	r3, r1
 8007a0e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8007a12:	f7f8 fc3b 	bl	800028c <__adddf3>
 8007a16:	4602      	mov	r2, r0
 8007a18:	460b      	mov	r3, r1
 8007a1a:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007a1e:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 8007a22:	f017 fff1 	bl	801fa08 <cos>
 8007a26:	ec51 0b10 	vmov	r0, r1, d0
 8007a2a:	a32b      	add	r3, pc, #172	@ (adr r3, 8007ad8 <leg_pos+0x340>)
 8007a2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a30:	f7f8 fde2 	bl	80005f8 <__aeabi_dmul>
 8007a34:	4602      	mov	r2, r0
 8007a36:	460b      	mov	r3, r1
 8007a38:	4610      	mov	r0, r2
 8007a3a:	4619      	mov	r1, r3
 8007a3c:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007a40:	f7f8 fc24 	bl	800028c <__adddf3>
 8007a44:	4602      	mov	r2, r0
 8007a46:	460b      	mov	r3, r1
 8007a48:	4610      	mov	r0, r2
 8007a4a:	4619      	mov	r1, r3
 8007a4c:	a324      	add	r3, pc, #144	@ (adr r3, 8007ae0 <leg_pos+0x348>)
 8007a4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a52:	f7f8 fc19 	bl	8000288 <__aeabi_dsub>
 8007a56:	4602      	mov	r2, r0
 8007a58:	460b      	mov	r3, r1
 8007a5a:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007a5e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007a62:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007a66:	f7f8 fdc7 	bl	80005f8 <__aeabi_dmul>
 8007a6a:	4602      	mov	r2, r0
 8007a6c:	460b      	mov	r3, r1
 8007a6e:	4614      	mov	r4, r2
 8007a70:	461d      	mov	r5, r3
 8007a72:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007a76:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007a7a:	f7f8 fdbd 	bl	80005f8 <__aeabi_dmul>
 8007a7e:	4602      	mov	r2, r0
 8007a80:	460b      	mov	r3, r1
 8007a82:	4620      	mov	r0, r4
 8007a84:	4629      	mov	r1, r5
 8007a86:	f7f8 fc01 	bl	800028c <__adddf3>
 8007a8a:	4602      	mov	r2, r0
 8007a8c:	460b      	mov	r3, r1
 8007a8e:	ec43 2b17 	vmov	d7, r2, r3
 8007a92:	eeb0 0a47 	vmov.f32	s0, s14
 8007a96:	eef0 0a67 	vmov.f32	s1, s15
 8007a9a:	f017 fdef 	bl	801f67c <sqrt>
 8007a9e:	eeb0 7a40 	vmov.f32	s14, s0
 8007aa2:	eef0 7a60 	vmov.f32	s15, s1
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	ed83 7b00 	vstr	d7, [r3]
 8007aac:	687b      	ldr	r3, [r7, #4]
 8007aae:	f103 0408 	add.w	r4, r3, #8
 8007ab2:	ed97 1b14 	vldr	d1, [r7, #80]	@ 0x50
 8007ab6:	ed97 0b12 	vldr	d0, [r7, #72]	@ 0x48
 8007aba:	f7ff fdb9 	bl	8007630 <rt_atan2d_snf>
 8007abe:	eeb0 7a40 	vmov.f32	s14, s0
 8007ac2:	eef0 7a60 	vmov.f32	s15, s1
 8007ac6:	ed84 7b00 	vstr	d7, [r4]
 8007aca:	bf00      	nop
 8007acc:	3768      	adds	r7, #104	@ 0x68
 8007ace:	46bd      	mov	sp, r7
 8007ad0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007ad4:	f3af 8000 	nop.w
 8007ad8:	33333333 	.word	0x33333333
 8007adc:	3fc33333 	.word	0x3fc33333
 8007ae0:	5532617c 	.word	0x5532617c
 8007ae4:	3fa92a30 	.word	0x3fa92a30
 8007ae8:	3ff00000 	.word	0x3ff00000
 8007aec:	47ae147b 	.word	0x47ae147b
 8007af0:	3fb47ae1 	.word	0x3fb47ae1
 8007af4:	bc6a7efa 	.word	0xbc6a7efa
 8007af8:	3f989374 	.word	0x3f989374
 8007afc:	5532617c 	.word	0x5532617c
 8007b00:	3fb92a30 	.word	0x3fb92a30
 8007b04:	663c74fb 	.word	0x663c74fb
 8007b08:	3f9e32a0 	.word	0x3f9e32a0
 8007b0c:	00000000 	.word	0x00000000

08007b10 <leg_conv>:
 8007b10:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007b14:	b0ba      	sub	sp, #232	@ 0xe8
 8007b16:	af00      	add	r7, sp, #0
 8007b18:	ed87 0b08 	vstr	d0, [r7, #32]
 8007b1c:	ed87 1b06 	vstr	d1, [r7, #24]
 8007b20:	ed87 2b04 	vstr	d2, [r7, #16]
 8007b24:	ed87 3b02 	vstr	d3, [r7, #8]
 8007b28:	6078      	str	r0, [r7, #4]
 8007b2a:	ed97 0b04 	vldr	d0, [r7, #16]
 8007b2e:	f017 ff6b 	bl	801fa08 <cos>
 8007b32:	ed87 0b38 	vstr	d0, [r7, #224]	@ 0xe0
 8007b36:	ed97 0b02 	vldr	d0, [r7, #8]
 8007b3a:	f017 ff65 	bl	801fa08 <cos>
 8007b3e:	ed87 0b36 	vstr	d0, [r7, #216]	@ 0xd8
 8007b42:	ed97 0b04 	vldr	d0, [r7, #16]
 8007b46:	f017 ffbb 	bl	801fac0 <sin>
 8007b4a:	ed87 0b34 	vstr	d0, [r7, #208]	@ 0xd0
 8007b4e:	ed97 0b02 	vldr	d0, [r7, #8]
 8007b52:	f017 ffb5 	bl	801fac0 <sin>
 8007b56:	ed87 0b32 	vstr	d0, [r7, #200]	@ 0xc8
 8007b5a:	f20f 5350 	addw	r3, pc, #1360	@ 0x550
 8007b5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b62:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007b66:	f7f8 fd47 	bl	80005f8 <__aeabi_dmul>
 8007b6a:	4602      	mov	r2, r0
 8007b6c:	460b      	mov	r3, r1
 8007b6e:	e9c7 2330 	strd	r2, r3, [r7, #192]	@ 0xc0
 8007b72:	f20f 5338 	addw	r3, pc, #1336	@ 0x538
 8007b76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b7a:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007b7e:	f7f8 fd3b 	bl	80005f8 <__aeabi_dmul>
 8007b82:	4602      	mov	r2, r0
 8007b84:	460b      	mov	r3, r1
 8007b86:	e9c7 232e 	strd	r2, r3, [r7, #184]	@ 0xb8
 8007b8a:	f20f 5328 	addw	r3, pc, #1320	@ 0x528
 8007b8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b92:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007b96:	f7f8 fd2f 	bl	80005f8 <__aeabi_dmul>
 8007b9a:	4602      	mov	r2, r0
 8007b9c:	460b      	mov	r3, r1
 8007b9e:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 8007ba2:	f20f 5310 	addw	r3, pc, #1296	@ 0x510
 8007ba6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007baa:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007bae:	f7f8 fd23 	bl	80005f8 <__aeabi_dmul>
 8007bb2:	4602      	mov	r2, r0
 8007bb4:	460b      	mov	r3, r1
 8007bb6:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
 8007bba:	f20f 43f8 	addw	r3, pc, #1272	@ 0x4f8
 8007bbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bc2:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007bc6:	f7f8 fd17 	bl	80005f8 <__aeabi_dmul>
 8007bca:	4602      	mov	r2, r0
 8007bcc:	460b      	mov	r3, r1
 8007bce:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 8007bd2:	f20f 43e0 	addw	r3, pc, #1248	@ 0x4e0
 8007bd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bda:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007bde:	f7f8 fd0b 	bl	80005f8 <__aeabi_dmul>
 8007be2:	4602      	mov	r2, r0
 8007be4:	460b      	mov	r3, r1
 8007be6:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
 8007bea:	f20f 43c0 	addw	r3, pc, #1216	@ 0x4c0
 8007bee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bf2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007bf6:	f7f8 fcff 	bl	80005f8 <__aeabi_dmul>
 8007bfa:	4602      	mov	r2, r0
 8007bfc:	460b      	mov	r3, r1
 8007bfe:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8007c02:	f7f8 fb41 	bl	8000288 <__aeabi_dsub>
 8007c06:	4602      	mov	r2, r0
 8007c08:	460b      	mov	r3, r1
 8007c0a:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8007c0e:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8007c12:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8007c16:	f7f8 fb37 	bl	8000288 <__aeabi_dsub>
 8007c1a:	4602      	mov	r2, r0
 8007c1c:	460b      	mov	r3, r1
 8007c1e:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
 8007c22:	f20f 4388 	addw	r3, pc, #1160	@ 0x488
 8007c26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c2a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007c2e:	f7f8 fce3 	bl	80005f8 <__aeabi_dmul>
 8007c32:	4602      	mov	r2, r0
 8007c34:	460b      	mov	r3, r1
 8007c36:	4610      	mov	r0, r2
 8007c38:	4619      	mov	r1, r3
 8007c3a:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8007c3e:	f7f8 fb23 	bl	8000288 <__aeabi_dsub>
 8007c42:	4602      	mov	r2, r0
 8007c44:	460b      	mov	r3, r1
 8007c46:	4610      	mov	r0, r2
 8007c48:	4619      	mov	r1, r3
 8007c4a:	f20f 4370 	addw	r3, pc, #1136	@ 0x470
 8007c4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c52:	f7f8 fb1b 	bl	800028c <__adddf3>
 8007c56:	4602      	mov	r2, r0
 8007c58:	460b      	mov	r3, r1
 8007c5a:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8007c5e:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8007c62:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8007c66:	f7f8 fb0f 	bl	8000288 <__aeabi_dsub>
 8007c6a:	4602      	mov	r2, r0
 8007c6c:	460b      	mov	r3, r1
 8007c6e:	4610      	mov	r0, r2
 8007c70:	4619      	mov	r1, r3
 8007c72:	f20f 4350 	addw	r3, pc, #1104	@ 0x450
 8007c76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c7a:	f7f8 fb07 	bl	800028c <__adddf3>
 8007c7e:	4602      	mov	r2, r0
 8007c80:	460b      	mov	r3, r1
 8007c82:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
 8007c86:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007c8a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8007c8e:	f7f8 fcb3 	bl	80005f8 <__aeabi_dmul>
 8007c92:	4602      	mov	r2, r0
 8007c94:	460b      	mov	r3, r1
 8007c96:	4690      	mov	r8, r2
 8007c98:	4699      	mov	r9, r3
 8007c9a:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007c9e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007ca2:	f7f8 fca9 	bl	80005f8 <__aeabi_dmul>
 8007ca6:	4602      	mov	r2, r0
 8007ca8:	460b      	mov	r3, r1
 8007caa:	4640      	mov	r0, r8
 8007cac:	4649      	mov	r1, r9
 8007cae:	f7f8 faed 	bl	800028c <__adddf3>
 8007cb2:	4602      	mov	r2, r0
 8007cb4:	460b      	mov	r3, r1
 8007cb6:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
 8007cba:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007cbe:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007cc2:	f7f8 fc99 	bl	80005f8 <__aeabi_dmul>
 8007cc6:	4602      	mov	r2, r0
 8007cc8:	460b      	mov	r3, r1
 8007cca:	4610      	mov	r0, r2
 8007ccc:	4619      	mov	r1, r3
 8007cce:	a3ff      	add	r3, pc, #1020	@ (adr r3, 80080cc <leg_conv+0x5bc>)
 8007cd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cd4:	f7f8 fc90 	bl	80005f8 <__aeabi_dmul>
 8007cd8:	4602      	mov	r2, r0
 8007cda:	460b      	mov	r3, r1
 8007cdc:	4690      	mov	r8, r2
 8007cde:	4699      	mov	r9, r3
 8007ce0:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007ce4:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007ce8:	f7f8 fc86 	bl	80005f8 <__aeabi_dmul>
 8007cec:	4602      	mov	r2, r0
 8007cee:	460b      	mov	r3, r1
 8007cf0:	4610      	mov	r0, r2
 8007cf2:	4619      	mov	r1, r3
 8007cf4:	a3f5      	add	r3, pc, #980	@ (adr r3, 80080cc <leg_conv+0x5bc>)
 8007cf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cfa:	f7f8 fc7d 	bl	80005f8 <__aeabi_dmul>
 8007cfe:	4602      	mov	r2, r0
 8007d00:	460b      	mov	r3, r1
 8007d02:	4640      	mov	r0, r8
 8007d04:	4649      	mov	r1, r9
 8007d06:	f7f8 fac1 	bl	800028c <__adddf3>
 8007d0a:	4602      	mov	r2, r0
 8007d0c:	460b      	mov	r3, r1
 8007d0e:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 8007d12:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007d16:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007d1a:	f7f8 fc6d 	bl	80005f8 <__aeabi_dmul>
 8007d1e:	4602      	mov	r2, r0
 8007d20:	460b      	mov	r3, r1
 8007d22:	4610      	mov	r0, r2
 8007d24:	4619      	mov	r1, r3
 8007d26:	a3e9      	add	r3, pc, #932	@ (adr r3, 80080cc <leg_conv+0x5bc>)
 8007d28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d2c:	f7f8 fc64 	bl	80005f8 <__aeabi_dmul>
 8007d30:	4602      	mov	r2, r0
 8007d32:	460b      	mov	r3, r1
 8007d34:	4690      	mov	r8, r2
 8007d36:	4699      	mov	r9, r3
 8007d38:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007d3c:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007d40:	f7f8 fc5a 	bl	80005f8 <__aeabi_dmul>
 8007d44:	4602      	mov	r2, r0
 8007d46:	460b      	mov	r3, r1
 8007d48:	4610      	mov	r0, r2
 8007d4a:	4619      	mov	r1, r3
 8007d4c:	a3df      	add	r3, pc, #892	@ (adr r3, 80080cc <leg_conv+0x5bc>)
 8007d4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d52:	f7f8 fc51 	bl	80005f8 <__aeabi_dmul>
 8007d56:	4602      	mov	r2, r0
 8007d58:	460b      	mov	r3, r1
 8007d5a:	4640      	mov	r0, r8
 8007d5c:	4649      	mov	r1, r9
 8007d5e:	f7f8 fa95 	bl	800028c <__adddf3>
 8007d62:	4602      	mov	r2, r0
 8007d64:	460b      	mov	r3, r1
 8007d66:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 8007d6a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8007d6e:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8007d72:	f7f8 fa8b 	bl	800028c <__adddf3>
 8007d76:	4602      	mov	r2, r0
 8007d78:	460b      	mov	r3, r1
 8007d7a:	f04f 0000 	mov.w	r0, #0
 8007d7e:	49ca      	ldr	r1, [pc, #808]	@ (80080a8 <leg_conv+0x598>)
 8007d80:	f7f8 fd64 	bl	800084c <__aeabi_ddiv>
 8007d84:	4602      	mov	r2, r0
 8007d86:	460b      	mov	r3, r1
 8007d88:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8007d8c:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007d90:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007d94:	f7f8 fc30 	bl	80005f8 <__aeabi_dmul>
 8007d98:	4602      	mov	r2, r0
 8007d9a:	460b      	mov	r3, r1
 8007d9c:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 8007da0:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8007da4:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8007da8:	f7f8 fc26 	bl	80005f8 <__aeabi_dmul>
 8007dac:	4602      	mov	r2, r0
 8007dae:	460b      	mov	r3, r1
 8007db0:	4690      	mov	r8, r2
 8007db2:	4699      	mov	r9, r3
 8007db4:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8007db8:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8007dbc:	f7f8 fc1c 	bl	80005f8 <__aeabi_dmul>
 8007dc0:	4602      	mov	r2, r0
 8007dc2:	460b      	mov	r3, r1
 8007dc4:	4640      	mov	r0, r8
 8007dc6:	4649      	mov	r1, r9
 8007dc8:	f7f8 fa60 	bl	800028c <__adddf3>
 8007dcc:	4602      	mov	r2, r0
 8007dce:	460b      	mov	r3, r1
 8007dd0:	4690      	mov	r8, r2
 8007dd2:	4699      	mov	r9, r3
 8007dd4:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8007dd8:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8007ddc:	f7f8 fc0c 	bl	80005f8 <__aeabi_dmul>
 8007de0:	4602      	mov	r2, r0
 8007de2:	460b      	mov	r3, r1
 8007de4:	4640      	mov	r0, r8
 8007de6:	4649      	mov	r1, r9
 8007de8:	f7f8 fa4e 	bl	8000288 <__aeabi_dsub>
 8007dec:	4602      	mov	r2, r0
 8007dee:	460b      	mov	r3, r1
 8007df0:	ec43 2b17 	vmov	d7, r2, r3
 8007df4:	eeb0 0a47 	vmov.f32	s0, s14
 8007df8:	eef0 0a67 	vmov.f32	s1, s15
 8007dfc:	f017 fc3e 	bl	801f67c <sqrt>
 8007e00:	ed87 0b24 	vstr	d0, [r7, #144]	@ 0x90
 8007e04:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007e08:	f04f 0000 	mov.w	r0, #0
 8007e0c:	49a6      	ldr	r1, [pc, #664]	@ (80080a8 <leg_conv+0x598>)
 8007e0e:	f7f8 fd1d 	bl	800084c <__aeabi_ddiv>
 8007e12:	4602      	mov	r2, r0
 8007e14:	460b      	mov	r3, r1
 8007e16:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007e1a:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8007e1e:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8007e22:	f7f8 fa31 	bl	8000288 <__aeabi_dsub>
 8007e26:	4602      	mov	r2, r0
 8007e28:	460b      	mov	r3, r1
 8007e2a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8007e2e:	f7f8 fa2d 	bl	800028c <__adddf3>
 8007e32:	4602      	mov	r2, r0
 8007e34:	460b      	mov	r3, r1
 8007e36:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007e3a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007e3e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007e42:	f7f8 fbd9 	bl	80005f8 <__aeabi_dmul>
 8007e46:	4602      	mov	r2, r0
 8007e48:	460b      	mov	r3, r1
 8007e4a:	ec43 2b17 	vmov	d7, r2, r3
 8007e4e:	eeb0 0a47 	vmov.f32	s0, s14
 8007e52:	eef0 0a67 	vmov.f32	s1, s15
 8007e56:	f017 fc3f 	bl	801f6d8 <atan>
 8007e5a:	ec51 0b10 	vmov	r0, r1, d0
 8007e5e:	4602      	mov	r2, r0
 8007e60:	460b      	mov	r3, r1
 8007e62:	f7f8 fa13 	bl	800028c <__adddf3>
 8007e66:	4602      	mov	r2, r0
 8007e68:	460b      	mov	r3, r1
 8007e6a:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8007e6e:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 8007e72:	f017 fdc9 	bl	801fa08 <cos>
 8007e76:	ed87 0b0e 	vstr	d0, [r7, #56]	@ 0x38
 8007e7a:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 8007e7e:	f017 fe1f 	bl	801fac0 <sin>
 8007e82:	ed87 0b0c 	vstr	d0, [r7, #48]	@ 0x30
 8007e86:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007e8a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007e8e:	f7f8 fbb3 	bl	80005f8 <__aeabi_dmul>
 8007e92:	4602      	mov	r2, r0
 8007e94:	460b      	mov	r3, r1
 8007e96:	4610      	mov	r0, r2
 8007e98:	4619      	mov	r1, r3
 8007e9a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007e9e:	f7f8 fbab 	bl	80005f8 <__aeabi_dmul>
 8007ea2:	4602      	mov	r2, r0
 8007ea4:	460b      	mov	r3, r1
 8007ea6:	4610      	mov	r0, r2
 8007ea8:	4619      	mov	r1, r3
 8007eaa:	f04f 0200 	mov.w	r2, #0
 8007eae:	4b7e      	ldr	r3, [pc, #504]	@ (80080a8 <leg_conv+0x598>)
 8007eb0:	f7f8 f9ec 	bl	800028c <__adddf3>
 8007eb4:	4602      	mov	r2, r0
 8007eb6:	460b      	mov	r3, r1
 8007eb8:	f04f 0000 	mov.w	r0, #0
 8007ebc:	497a      	ldr	r1, [pc, #488]	@ (80080a8 <leg_conv+0x598>)
 8007ebe:	f7f8 fcc5 	bl	800084c <__aeabi_ddiv>
 8007ec2:	4602      	mov	r2, r0
 8007ec4:	460b      	mov	r3, r1
 8007ec6:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8007eca:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8007ece:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8007ed2:	f7f8 f9db 	bl	800028c <__adddf3>
 8007ed6:	4602      	mov	r2, r0
 8007ed8:	460b      	mov	r3, r1
 8007eda:	4610      	mov	r0, r2
 8007edc:	4619      	mov	r1, r3
 8007ede:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007ee2:	f7f8 fb89 	bl	80005f8 <__aeabi_dmul>
 8007ee6:	4602      	mov	r2, r0
 8007ee8:	460b      	mov	r3, r1
 8007eea:	4610      	mov	r0, r2
 8007eec:	4619      	mov	r1, r3
 8007eee:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007ef2:	f7f8 fb81 	bl	80005f8 <__aeabi_dmul>
 8007ef6:	4602      	mov	r2, r0
 8007ef8:	460b      	mov	r3, r1
 8007efa:	4690      	mov	r8, r2
 8007efc:	4699      	mov	r9, r3
 8007efe:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8007f02:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007f06:	f7f8 fb77 	bl	80005f8 <__aeabi_dmul>
 8007f0a:	4602      	mov	r2, r0
 8007f0c:	460b      	mov	r3, r1
 8007f0e:	4610      	mov	r0, r2
 8007f10:	4619      	mov	r1, r3
 8007f12:	a363      	add	r3, pc, #396	@ (adr r3, 80080a0 <leg_conv+0x590>)
 8007f14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f18:	f7f8 fb6e 	bl	80005f8 <__aeabi_dmul>
 8007f1c:	4602      	mov	r2, r0
 8007f1e:	460b      	mov	r3, r1
 8007f20:	4692      	mov	sl, r2
 8007f22:	469b      	mov	fp, r3
 8007f24:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8007f28:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007f2c:	f7f8 fb64 	bl	80005f8 <__aeabi_dmul>
 8007f30:	4602      	mov	r2, r0
 8007f32:	460b      	mov	r3, r1
 8007f34:	4610      	mov	r0, r2
 8007f36:	4619      	mov	r1, r3
 8007f38:	a359      	add	r3, pc, #356	@ (adr r3, 80080a0 <leg_conv+0x590>)
 8007f3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f3e:	f7f8 fb5b 	bl	80005f8 <__aeabi_dmul>
 8007f42:	4602      	mov	r2, r0
 8007f44:	460b      	mov	r3, r1
 8007f46:	4650      	mov	r0, sl
 8007f48:	4659      	mov	r1, fp
 8007f4a:	f7f8 f99f 	bl	800028c <__adddf3>
 8007f4e:	4602      	mov	r2, r0
 8007f50:	460b      	mov	r3, r1
 8007f52:	4692      	mov	sl, r2
 8007f54:	469b      	mov	fp, r3
 8007f56:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8007f5a:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8007f5e:	f7f8 fb4b 	bl	80005f8 <__aeabi_dmul>
 8007f62:	4602      	mov	r2, r0
 8007f64:	460b      	mov	r3, r1
 8007f66:	4610      	mov	r0, r2
 8007f68:	4619      	mov	r1, r3
 8007f6a:	4602      	mov	r2, r0
 8007f6c:	460b      	mov	r3, r1
 8007f6e:	f7f8 f98d 	bl	800028c <__adddf3>
 8007f72:	4602      	mov	r2, r0
 8007f74:	460b      	mov	r3, r1
 8007f76:	4650      	mov	r0, sl
 8007f78:	4659      	mov	r1, fp
 8007f7a:	f7f8 f985 	bl	8000288 <__aeabi_dsub>
 8007f7e:	4602      	mov	r2, r0
 8007f80:	460b      	mov	r3, r1
 8007f82:	4610      	mov	r0, r2
 8007f84:	4619      	mov	r1, r3
 8007f86:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007f8a:	f7f8 fb35 	bl	80005f8 <__aeabi_dmul>
 8007f8e:	4602      	mov	r2, r0
 8007f90:	460b      	mov	r3, r1
 8007f92:	4610      	mov	r0, r2
 8007f94:	4619      	mov	r1, r3
 8007f96:	f04f 0200 	mov.w	r2, #0
 8007f9a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8007f9e:	f7f8 fc55 	bl	800084c <__aeabi_ddiv>
 8007fa2:	4602      	mov	r2, r0
 8007fa4:	460b      	mov	r3, r1
 8007fa6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8007faa:	f7f8 f96d 	bl	8000288 <__aeabi_dsub>
 8007fae:	4602      	mov	r2, r0
 8007fb0:	460b      	mov	r3, r1
 8007fb2:	4610      	mov	r0, r2
 8007fb4:	4619      	mov	r1, r3
 8007fb6:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007fba:	f7f8 fb1d 	bl	80005f8 <__aeabi_dmul>
 8007fbe:	4602      	mov	r2, r0
 8007fc0:	460b      	mov	r3, r1
 8007fc2:	4640      	mov	r0, r8
 8007fc4:	4649      	mov	r1, r9
 8007fc6:	f7f8 f961 	bl	800028c <__adddf3>
 8007fca:	4602      	mov	r2, r0
 8007fcc:	460b      	mov	r3, r1
 8007fce:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8007fd2:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 8007fd6:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8007fda:	f7f8 f957 	bl	800028c <__adddf3>
 8007fde:	4602      	mov	r2, r0
 8007fe0:	460b      	mov	r3, r1
 8007fe2:	4610      	mov	r0, r2
 8007fe4:	4619      	mov	r1, r3
 8007fe6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007fea:	f7f8 fb05 	bl	80005f8 <__aeabi_dmul>
 8007fee:	4602      	mov	r2, r0
 8007ff0:	460b      	mov	r3, r1
 8007ff2:	4610      	mov	r0, r2
 8007ff4:	4619      	mov	r1, r3
 8007ff6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007ffa:	f7f8 fafd 	bl	80005f8 <__aeabi_dmul>
 8007ffe:	4602      	mov	r2, r0
 8008000:	460b      	mov	r3, r1
 8008002:	4690      	mov	r8, r2
 8008004:	4699      	mov	r9, r3
 8008006:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800800a:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 800800e:	f7f8 faf3 	bl	80005f8 <__aeabi_dmul>
 8008012:	4602      	mov	r2, r0
 8008014:	460b      	mov	r3, r1
 8008016:	4610      	mov	r0, r2
 8008018:	4619      	mov	r1, r3
 800801a:	a321      	add	r3, pc, #132	@ (adr r3, 80080a0 <leg_conv+0x590>)
 800801c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008020:	f7f8 faea 	bl	80005f8 <__aeabi_dmul>
 8008024:	4602      	mov	r2, r0
 8008026:	460b      	mov	r3, r1
 8008028:	4692      	mov	sl, r2
 800802a:	469b      	mov	fp, r3
 800802c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8008030:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8008034:	f7f8 fae0 	bl	80005f8 <__aeabi_dmul>
 8008038:	4602      	mov	r2, r0
 800803a:	460b      	mov	r3, r1
 800803c:	4610      	mov	r0, r2
 800803e:	4619      	mov	r1, r3
 8008040:	a317      	add	r3, pc, #92	@ (adr r3, 80080a0 <leg_conv+0x590>)
 8008042:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008046:	f7f8 fad7 	bl	80005f8 <__aeabi_dmul>
 800804a:	4602      	mov	r2, r0
 800804c:	460b      	mov	r3, r1
 800804e:	4650      	mov	r0, sl
 8008050:	4659      	mov	r1, fp
 8008052:	f7f8 f91b 	bl	800028c <__adddf3>
 8008056:	4602      	mov	r2, r0
 8008058:	460b      	mov	r3, r1
 800805a:	4692      	mov	sl, r2
 800805c:	469b      	mov	fp, r3
 800805e:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 8008062:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8008066:	f7f8 fac7 	bl	80005f8 <__aeabi_dmul>
 800806a:	4602      	mov	r2, r0
 800806c:	460b      	mov	r3, r1
 800806e:	4610      	mov	r0, r2
 8008070:	4619      	mov	r1, r3
 8008072:	4602      	mov	r2, r0
 8008074:	460b      	mov	r3, r1
 8008076:	f7f8 f909 	bl	800028c <__adddf3>
 800807a:	4602      	mov	r2, r0
 800807c:	460b      	mov	r3, r1
 800807e:	4650      	mov	r0, sl
 8008080:	4659      	mov	r1, fp
 8008082:	f7f8 f901 	bl	8000288 <__aeabi_dsub>
 8008086:	4602      	mov	r2, r0
 8008088:	460b      	mov	r3, r1
 800808a:	4610      	mov	r0, r2
 800808c:	4619      	mov	r1, r3
 800808e:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8008092:	f7f8 fab1 	bl	80005f8 <__aeabi_dmul>
 8008096:	4602      	mov	r2, r0
 8008098:	460b      	mov	r3, r1
 800809a:	e01b      	b.n	80080d4 <leg_conv+0x5c4>
 800809c:	f3af 8000 	nop.w
 80080a0:	bc6a7efa 	.word	0xbc6a7efa
 80080a4:	3fa89374 	.word	0x3fa89374
 80080a8:	3ff00000 	.word	0x3ff00000
 80080ac:	47ae147b 	.word	0x47ae147b
 80080b0:	3fb47ae1 	.word	0x3fb47ae1
 80080b4:	bc6a7efa 	.word	0xbc6a7efa
 80080b8:	3f989374 	.word	0x3f989374
 80080bc:	5532617c 	.word	0x5532617c
 80080c0:	3fb92a30 	.word	0x3fb92a30
 80080c4:	663c74fb 	.word	0x663c74fb
 80080c8:	3f9e32a0 	.word	0x3f9e32a0
 80080cc:	47ae147b 	.word	0x47ae147b
 80080d0:	3fc47ae1 	.word	0x3fc47ae1
 80080d4:	4610      	mov	r0, r2
 80080d6:	4619      	mov	r1, r3
 80080d8:	f04f 0200 	mov.w	r2, #0
 80080dc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80080e0:	f7f8 fbb4 	bl	800084c <__aeabi_ddiv>
 80080e4:	4602      	mov	r2, r0
 80080e6:	460b      	mov	r3, r1
 80080e8:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 80080ec:	f7f8 f8cc 	bl	8000288 <__aeabi_dsub>
 80080f0:	4602      	mov	r2, r0
 80080f2:	460b      	mov	r3, r1
 80080f4:	4610      	mov	r0, r2
 80080f6:	4619      	mov	r1, r3
 80080f8:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 80080fc:	f7f8 fa7c 	bl	80005f8 <__aeabi_dmul>
 8008100:	4602      	mov	r2, r0
 8008102:	460b      	mov	r3, r1
 8008104:	4640      	mov	r0, r8
 8008106:	4649      	mov	r1, r9
 8008108:	f7f8 f8c0 	bl	800028c <__adddf3>
 800810c:	4602      	mov	r2, r0
 800810e:	460b      	mov	r3, r1
 8008110:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 8008114:	a3f3      	add	r3, pc, #972	@ (adr r3, 80084e4 <leg_conv+0x9d4>)
 8008116:	e9d3 2300 	ldrd	r2, r3, [r3]
 800811a:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 800811e:	f7f8 fa6b 	bl	80005f8 <__aeabi_dmul>
 8008122:	4602      	mov	r2, r0
 8008124:	460b      	mov	r3, r1
 8008126:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 800812a:	f7f8 f8af 	bl	800028c <__adddf3>
 800812e:	4602      	mov	r2, r0
 8008130:	460b      	mov	r3, r1
 8008132:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 8008136:	a3eb      	add	r3, pc, #940	@ (adr r3, 80084e4 <leg_conv+0x9d4>)
 8008138:	e9d3 2300 	ldrd	r2, r3, [r3]
 800813c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8008140:	f7f8 fa5a 	bl	80005f8 <__aeabi_dmul>
 8008144:	4602      	mov	r2, r0
 8008146:	460b      	mov	r3, r1
 8008148:	4610      	mov	r0, r2
 800814a:	4619      	mov	r1, r3
 800814c:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8008150:	f7f8 f89c 	bl	800028c <__adddf3>
 8008154:	4602      	mov	r2, r0
 8008156:	460b      	mov	r3, r1
 8008158:	4610      	mov	r0, r2
 800815a:	4619      	mov	r1, r3
 800815c:	a3e3      	add	r3, pc, #908	@ (adr r3, 80084ec <leg_conv+0x9dc>)
 800815e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008162:	f7f8 f891 	bl	8000288 <__aeabi_dsub>
 8008166:	4602      	mov	r2, r0
 8008168:	460b      	mov	r3, r1
 800816a:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 800816e:	f8d7 40c0 	ldr.w	r4, [r7, #192]	@ 0xc0
 8008172:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8008176:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 800817a:	a3da      	add	r3, pc, #872	@ (adr r3, 80084e4 <leg_conv+0x9d4>)
 800817c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008180:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8008184:	f7f8 fa38 	bl	80005f8 <__aeabi_dmul>
 8008188:	4602      	mov	r2, r0
 800818a:	460b      	mov	r3, r1
 800818c:	4620      	mov	r0, r4
 800818e:	4629      	mov	r1, r5
 8008190:	f7f8 f87a 	bl	8000288 <__aeabi_dsub>
 8008194:	4602      	mov	r2, r0
 8008196:	460b      	mov	r3, r1
 8008198:	4610      	mov	r0, r2
 800819a:	4619      	mov	r1, r3
 800819c:	a3d3      	add	r3, pc, #844	@ (adr r3, 80084ec <leg_conv+0x9dc>)
 800819e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081a2:	f7f8 f873 	bl	800028c <__adddf3>
 80081a6:	4602      	mov	r2, r0
 80081a8:	460b      	mov	r3, r1
 80081aa:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 80081ae:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80081b2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80081b6:	f7f8 fa1f 	bl	80005f8 <__aeabi_dmul>
 80081ba:	4602      	mov	r2, r0
 80081bc:	460b      	mov	r3, r1
 80081be:	e9c7 2338 	strd	r2, r3, [r7, #224]	@ 0xe0
 80081c2:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80081c6:	f04f 0000 	mov.w	r0, #0
 80081ca:	49c5      	ldr	r1, [pc, #788]	@ (80084e0 <leg_conv+0x9d0>)
 80081cc:	f7f8 fb3e 	bl	800084c <__aeabi_ddiv>
 80081d0:	4602      	mov	r2, r0
 80081d2:	460b      	mov	r3, r1
 80081d4:	e9c7 2334 	strd	r2, r3, [r7, #208]	@ 0xd0
 80081d8:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 80081dc:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 80081e0:	f7f8 fa0a 	bl	80005f8 <__aeabi_dmul>
 80081e4:	4602      	mov	r2, r0
 80081e6:	460b      	mov	r3, r1
 80081e8:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 80081ec:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80081f0:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 80081f4:	f7f8 fa00 	bl	80005f8 <__aeabi_dmul>
 80081f8:	4602      	mov	r2, r0
 80081fa:	460b      	mov	r3, r1
 80081fc:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8008200:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008204:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008208:	f7f8 f9f6 	bl	80005f8 <__aeabi_dmul>
 800820c:	4602      	mov	r2, r0
 800820e:	460b      	mov	r3, r1
 8008210:	4610      	mov	r0, r2
 8008212:	4619      	mov	r1, r3
 8008214:	a3ae      	add	r3, pc, #696	@ (adr r3, 80084d0 <leg_conv+0x9c0>)
 8008216:	e9d3 2300 	ldrd	r2, r3, [r3]
 800821a:	f7f8 f9ed 	bl	80005f8 <__aeabi_dmul>
 800821e:	4602      	mov	r2, r0
 8008220:	460b      	mov	r3, r1
 8008222:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 8008226:	f7f8 f82f 	bl	8000288 <__aeabi_dsub>
 800822a:	4602      	mov	r2, r0
 800822c:	460b      	mov	r3, r1
 800822e:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 8008232:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008236:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 800823a:	f7f8 f9dd 	bl	80005f8 <__aeabi_dmul>
 800823e:	4602      	mov	r2, r0
 8008240:	460b      	mov	r3, r1
 8008242:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 8008246:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800824a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800824e:	f7f8 f9d3 	bl	80005f8 <__aeabi_dmul>
 8008252:	4602      	mov	r2, r0
 8008254:	460b      	mov	r3, r1
 8008256:	4610      	mov	r0, r2
 8008258:	4619      	mov	r1, r3
 800825a:	a39d      	add	r3, pc, #628	@ (adr r3, 80084d0 <leg_conv+0x9c0>)
 800825c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008260:	f7f8 f9ca 	bl	80005f8 <__aeabi_dmul>
 8008264:	4602      	mov	r2, r0
 8008266:	460b      	mov	r3, r1
 8008268:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 800826c:	f7f8 f80c 	bl	8000288 <__aeabi_dsub>
 8008270:	4602      	mov	r2, r0
 8008272:	460b      	mov	r3, r1
 8008274:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8008278:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 800827c:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8008280:	f7f8 f9ba 	bl	80005f8 <__aeabi_dmul>
 8008284:	4602      	mov	r2, r0
 8008286:	460b      	mov	r3, r1
 8008288:	4610      	mov	r0, r2
 800828a:	4619      	mov	r1, r3
 800828c:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8008290:	f7f7 fffc 	bl	800028c <__adddf3>
 8008294:	4602      	mov	r2, r0
 8008296:	460b      	mov	r3, r1
 8008298:	ec43 2b17 	vmov	d7, r2, r3
 800829c:	eeb0 0a47 	vmov.f32	s0, s14
 80082a0:	eef0 0a67 	vmov.f32	s1, s15
 80082a4:	f017 f9ea 	bl	801f67c <sqrt>
 80082a8:	ec53 2b10 	vmov	r2, r3, d0
 80082ac:	f04f 0000 	mov.w	r0, #0
 80082b0:	498b      	ldr	r1, [pc, #556]	@ (80084e0 <leg_conv+0x9d0>)
 80082b2:	f7f8 facb 	bl	800084c <__aeabi_ddiv>
 80082b6:	4602      	mov	r2, r0
 80082b8:	460b      	mov	r3, r1
 80082ba:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80082be:	f7f8 f99b 	bl	80005f8 <__aeabi_dmul>
 80082c2:	4602      	mov	r2, r0
 80082c4:	460b      	mov	r3, r1
 80082c6:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 80082ca:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 80082ce:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80082d2:	f7f8 f991 	bl	80005f8 <__aeabi_dmul>
 80082d6:	4602      	mov	r2, r0
 80082d8:	460b      	mov	r3, r1
 80082da:	4614      	mov	r4, r2
 80082dc:	461d      	mov	r5, r3
 80082de:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 80082e2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80082e6:	f7f7 ffd1 	bl	800028c <__adddf3>
 80082ea:	4602      	mov	r2, r0
 80082ec:	460b      	mov	r3, r1
 80082ee:	f04f 0000 	mov.w	r0, #0
 80082f2:	497b      	ldr	r1, [pc, #492]	@ (80084e0 <leg_conv+0x9d0>)
 80082f4:	f7f8 faaa 	bl	800084c <__aeabi_ddiv>
 80082f8:	4602      	mov	r2, r0
 80082fa:	460b      	mov	r3, r1
 80082fc:	4620      	mov	r0, r4
 80082fe:	4629      	mov	r1, r5
 8008300:	f7f8 f97a 	bl	80005f8 <__aeabi_dmul>
 8008304:	4602      	mov	r2, r0
 8008306:	460b      	mov	r3, r1
 8008308:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 800830c:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8008310:	f04f 0000 	mov.w	r0, #0
 8008314:	4972      	ldr	r1, [pc, #456]	@ (80084e0 <leg_conv+0x9d0>)
 8008316:	f7f8 fa99 	bl	800084c <__aeabi_ddiv>
 800831a:	4602      	mov	r2, r0
 800831c:	460b      	mov	r3, r1
 800831e:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8008322:	f7f8 f969 	bl	80005f8 <__aeabi_dmul>
 8008326:	4602      	mov	r2, r0
 8008328:	460b      	mov	r3, r1
 800832a:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 800832e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8008332:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8008336:	f7f8 f95f 	bl	80005f8 <__aeabi_dmul>
 800833a:	4602      	mov	r2, r0
 800833c:	460b      	mov	r3, r1
 800833e:	4610      	mov	r0, r2
 8008340:	4619      	mov	r1, r3
 8008342:	4602      	mov	r2, r0
 8008344:	460b      	mov	r3, r1
 8008346:	f7f7 ffa1 	bl	800028c <__adddf3>
 800834a:	4602      	mov	r2, r0
 800834c:	460b      	mov	r3, r1
 800834e:	4614      	mov	r4, r2
 8008350:	461d      	mov	r5, r3
 8008352:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008356:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800835a:	f7f8 f94d 	bl	80005f8 <__aeabi_dmul>
 800835e:	4602      	mov	r2, r0
 8008360:	460b      	mov	r3, r1
 8008362:	4610      	mov	r0, r2
 8008364:	4619      	mov	r1, r3
 8008366:	4602      	mov	r2, r0
 8008368:	460b      	mov	r3, r1
 800836a:	f7f7 ff8f 	bl	800028c <__adddf3>
 800836e:	4602      	mov	r2, r0
 8008370:	460b      	mov	r3, r1
 8008372:	4620      	mov	r0, r4
 8008374:	4629      	mov	r1, r5
 8008376:	f7f7 ff87 	bl	8000288 <__aeabi_dsub>
 800837a:	4602      	mov	r2, r0
 800837c:	460b      	mov	r3, r1
 800837e:	4610      	mov	r0, r2
 8008380:	4619      	mov	r1, r3
 8008382:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008386:	f7f8 f937 	bl	80005f8 <__aeabi_dmul>
 800838a:	4602      	mov	r2, r0
 800838c:	460b      	mov	r3, r1
 800838e:	4610      	mov	r0, r2
 8008390:	4619      	mov	r1, r3
 8008392:	f04f 0200 	mov.w	r2, #0
 8008396:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800839a:	f7f8 fa57 	bl	800084c <__aeabi_ddiv>
 800839e:	4602      	mov	r2, r0
 80083a0:	460b      	mov	r3, r1
 80083a2:	4614      	mov	r4, r2
 80083a4:	461d      	mov	r5, r3
 80083a6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80083aa:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 80083ae:	f7f8 f923 	bl	80005f8 <__aeabi_dmul>
 80083b2:	4602      	mov	r2, r0
 80083b4:	460b      	mov	r3, r1
 80083b6:	4690      	mov	r8, r2
 80083b8:	4699      	mov	r9, r3
 80083ba:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80083be:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80083c2:	f7f8 f919 	bl	80005f8 <__aeabi_dmul>
 80083c6:	4602      	mov	r2, r0
 80083c8:	460b      	mov	r3, r1
 80083ca:	4640      	mov	r0, r8
 80083cc:	4649      	mov	r1, r9
 80083ce:	f7f7 ff5b 	bl	8000288 <__aeabi_dsub>
 80083d2:	4602      	mov	r2, r0
 80083d4:	460b      	mov	r3, r1
 80083d6:	4610      	mov	r0, r2
 80083d8:	4619      	mov	r1, r3
 80083da:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 80083de:	f7f8 f90b 	bl	80005f8 <__aeabi_dmul>
 80083e2:	4602      	mov	r2, r0
 80083e4:	460b      	mov	r3, r1
 80083e6:	4620      	mov	r0, r4
 80083e8:	4629      	mov	r1, r5
 80083ea:	f7f7 ff4d 	bl	8000288 <__aeabi_dsub>
 80083ee:	4602      	mov	r2, r0
 80083f0:	460b      	mov	r3, r1
 80083f2:	6879      	ldr	r1, [r7, #4]
 80083f4:	e9c1 2300 	strd	r2, r3, [r1]
 80083f8:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 80083fc:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008400:	f7f8 f8fa 	bl	80005f8 <__aeabi_dmul>
 8008404:	4602      	mov	r2, r0
 8008406:	460b      	mov	r3, r1
 8008408:	4610      	mov	r0, r2
 800840a:	4619      	mov	r1, r3
 800840c:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008410:	f7f8 f8f2 	bl	80005f8 <__aeabi_dmul>
 8008414:	4602      	mov	r2, r0
 8008416:	460b      	mov	r3, r1
 8008418:	4610      	mov	r0, r2
 800841a:	4619      	mov	r1, r3
 800841c:	a32e      	add	r3, pc, #184	@ (adr r3, 80084d8 <leg_conv+0x9c8>)
 800841e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008422:	f7f8 f8e9 	bl	80005f8 <__aeabi_dmul>
 8008426:	4602      	mov	r2, r0
 8008428:	460b      	mov	r3, r1
 800842a:	4614      	mov	r4, r2
 800842c:	461d      	mov	r5, r3
 800842e:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8008432:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8008436:	f7f8 f8df 	bl	80005f8 <__aeabi_dmul>
 800843a:	4602      	mov	r2, r0
 800843c:	460b      	mov	r3, r1
 800843e:	4610      	mov	r0, r2
 8008440:	4619      	mov	r1, r3
 8008442:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008446:	f7f8 f8d7 	bl	80005f8 <__aeabi_dmul>
 800844a:	4602      	mov	r2, r0
 800844c:	460b      	mov	r3, r1
 800844e:	4610      	mov	r0, r2
 8008450:	4619      	mov	r1, r3
 8008452:	a321      	add	r3, pc, #132	@ (adr r3, 80084d8 <leg_conv+0x9c8>)
 8008454:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008458:	f7f8 f8ce 	bl	80005f8 <__aeabi_dmul>
 800845c:	4602      	mov	r2, r0
 800845e:	460b      	mov	r3, r1
 8008460:	4620      	mov	r0, r4
 8008462:	4629      	mov	r1, r5
 8008464:	f7f7 ff10 	bl	8000288 <__aeabi_dsub>
 8008468:	4602      	mov	r2, r0
 800846a:	460b      	mov	r3, r1
 800846c:	4610      	mov	r0, r2
 800846e:	4619      	mov	r1, r3
 8008470:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008474:	f7f8 f8c0 	bl	80005f8 <__aeabi_dmul>
 8008478:	4602      	mov	r2, r0
 800847a:	460b      	mov	r3, r1
 800847c:	4610      	mov	r0, r2
 800847e:	4619      	mov	r1, r3
 8008480:	f04f 0200 	mov.w	r2, #0
 8008484:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8008488:	f7f8 f9e0 	bl	800084c <__aeabi_ddiv>
 800848c:	4602      	mov	r2, r0
 800848e:	460b      	mov	r3, r1
 8008490:	4690      	mov	r8, r2
 8008492:	4699      	mov	r9, r3
 8008494:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008498:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 800849c:	f7f8 f8ac 	bl	80005f8 <__aeabi_dmul>
 80084a0:	4602      	mov	r2, r0
 80084a2:	460b      	mov	r3, r1
 80084a4:	4610      	mov	r0, r2
 80084a6:	4619      	mov	r1, r3
 80084a8:	a309      	add	r3, pc, #36	@ (adr r3, 80084d0 <leg_conv+0x9c0>)
 80084aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084ae:	f7f8 f8a3 	bl	80005f8 <__aeabi_dmul>
 80084b2:	4602      	mov	r2, r0
 80084b4:	460b      	mov	r3, r1
 80084b6:	f04f 0000 	mov.w	r0, #0
 80084ba:	f04f 0100 	mov.w	r1, #0
 80084be:	f7f7 fee3 	bl	8000288 <__aeabi_dsub>
 80084c2:	4602      	mov	r2, r0
 80084c4:	460b      	mov	r3, r1
 80084c6:	4610      	mov	r0, r2
 80084c8:	4619      	mov	r1, r3
 80084ca:	e013      	b.n	80084f4 <leg_conv+0x9e4>
 80084cc:	f3af 8000 	nop.w
 80084d0:	33333333 	.word	0x33333333
 80084d4:	3fd33333 	.word	0x3fd33333
 80084d8:	33333333 	.word	0x33333333
 80084dc:	3fe33333 	.word	0x3fe33333
 80084e0:	3ff00000 	.word	0x3ff00000
 80084e4:	33333333 	.word	0x33333333
 80084e8:	3fc33333 	.word	0x3fc33333
 80084ec:	5532617c 	.word	0x5532617c
 80084f0:	3fa92a30 	.word	0x3fa92a30
 80084f4:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 80084f8:	f7f8 f87e 	bl	80005f8 <__aeabi_dmul>
 80084fc:	4602      	mov	r2, r0
 80084fe:	460b      	mov	r3, r1
 8008500:	4614      	mov	r4, r2
 8008502:	461d      	mov	r5, r3
 8008504:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008508:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800850c:	f7f8 f874 	bl	80005f8 <__aeabi_dmul>
 8008510:	4602      	mov	r2, r0
 8008512:	460b      	mov	r3, r1
 8008514:	4610      	mov	r0, r2
 8008516:	4619      	mov	r1, r3
 8008518:	a319      	add	r3, pc, #100	@ (adr r3, 8008580 <leg_conv+0xa70>)
 800851a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800851e:	f7f8 f86b 	bl	80005f8 <__aeabi_dmul>
 8008522:	4602      	mov	r2, r0
 8008524:	460b      	mov	r3, r1
 8008526:	4610      	mov	r0, r2
 8008528:	4619      	mov	r1, r3
 800852a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800852e:	f7f8 f863 	bl	80005f8 <__aeabi_dmul>
 8008532:	4602      	mov	r2, r0
 8008534:	460b      	mov	r3, r1
 8008536:	4620      	mov	r0, r4
 8008538:	4629      	mov	r1, r5
 800853a:	f7f7 fea7 	bl	800028c <__adddf3>
 800853e:	4602      	mov	r2, r0
 8008540:	460b      	mov	r3, r1
 8008542:	4610      	mov	r0, r2
 8008544:	4619      	mov	r1, r3
 8008546:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 800854a:	f7f8 f855 	bl	80005f8 <__aeabi_dmul>
 800854e:	4602      	mov	r2, r0
 8008550:	460b      	mov	r3, r1
 8008552:	4610      	mov	r0, r2
 8008554:	4619      	mov	r1, r3
 8008556:	687b      	ldr	r3, [r7, #4]
 8008558:	f103 0408 	add.w	r4, r3, #8
 800855c:	4602      	mov	r2, r0
 800855e:	460b      	mov	r3, r1
 8008560:	4640      	mov	r0, r8
 8008562:	4649      	mov	r1, r9
 8008564:	f7f7 fe92 	bl	800028c <__adddf3>
 8008568:	4602      	mov	r2, r0
 800856a:	460b      	mov	r3, r1
 800856c:	e9c4 2300 	strd	r2, r3, [r4]
 8008570:	bf00      	nop
 8008572:	37e8      	adds	r7, #232	@ 0xe8
 8008574:	46bd      	mov	sp, r7
 8008576:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800857a:	bf00      	nop
 800857c:	f3af 8000 	nop.w
 8008580:	33333333 	.word	0x33333333
 8008584:	3fd33333 	.word	0x3fd33333

08008588 <master_task>:
QueueHandle_t uart_data_queue;

extern gimbal_control_t gimbal_ctrl_data;


void master_task(void* argument){
 8008588:	b580      	push	{r7, lr}
 800858a:	b084      	sub	sp, #16
 800858c:	af02      	add	r7, sp, #8
 800858e:	6078      	str	r0, [r7, #4]
//	imu_init();
//	led_green_off();
//	start_micros_timer();
//	led_toggle();

	gimbal_event_group = xEventGroupCreate();
 8008590:	f00e fd51 	bl	8017036 <xEventGroupCreate>
 8008594:	4603      	mov	r3, r0
 8008596:	4a5d      	ldr	r2, [pc, #372]	@ (800870c <master_task+0x184>)
 8008598:	6013      	str	r3, [r2, #0]
	chassis_event_group = xEventGroupCreate();
 800859a:	f00e fd4c 	bl	8017036 <xEventGroupCreate>
 800859e:	4603      	mov	r3, r0
 80085a0:	4a5b      	ldr	r2, [pc, #364]	@ (8008710 <master_task+0x188>)
 80085a2:	6013      	str	r3, [r2, #0]
	launcher_event_group = xEventGroupCreate();
 80085a4:	f00e fd47 	bl	8017036 <xEventGroupCreate>
 80085a8:	4603      	mov	r3, r0
 80085aa:	4a5a      	ldr	r2, [pc, #360]	@ (8008714 <master_task+0x18c>)
 80085ac:	6013      	str	r3, [r2, #0]

	usb_continue_semaphore = xSemaphoreCreateBinary();
 80085ae:	2203      	movs	r2, #3
 80085b0:	2100      	movs	r1, #0
 80085b2:	2001      	movs	r0, #1
 80085b4:	f00e ffa1 	bl	80174fa <xQueueGenericCreate>
 80085b8:	4603      	mov	r3, r0
 80085ba:	4a57      	ldr	r2, [pc, #348]	@ (8008718 <master_task+0x190>)
 80085bc:	6013      	str	r3, [r2, #0]


	gyro_data_queue = xQueueCreate(5, sizeof(gyro_data_t));
 80085be:	2200      	movs	r2, #0
 80085c0:	2110      	movs	r1, #16
 80085c2:	2005      	movs	r0, #5
 80085c4:	f00e ff99 	bl	80174fa <xQueueGenericCreate>
 80085c8:	4603      	mov	r3, r0
 80085ca:	4a54      	ldr	r2, [pc, #336]	@ (800871c <master_task+0x194>)
 80085cc:	6013      	str	r3, [r2, #0]
	accel_data_queue = xQueueCreate(5, sizeof(accel_data_t));
 80085ce:	2200      	movs	r2, #0
 80085d0:	2110      	movs	r1, #16
 80085d2:	2005      	movs	r0, #5
 80085d4:	f00e ff91 	bl	80174fa <xQueueGenericCreate>
 80085d8:	4603      	mov	r3, r0
 80085da:	4a51      	ldr	r2, [pc, #324]	@ (8008720 <master_task+0x198>)
 80085dc:	6013      	str	r3, [r2, #0]
	mag_data_queue = xQueueCreate(5, sizeof(mag_data_t));
 80085de:	2200      	movs	r2, #0
 80085e0:	210c      	movs	r1, #12
 80085e2:	2005      	movs	r0, #5
 80085e4:	f00e ff89 	bl	80174fa <xQueueGenericCreate>
 80085e8:	4603      	mov	r3, r0
 80085ea:	4a4e      	ldr	r2, [pc, #312]	@ (8008724 <master_task+0x19c>)
 80085ec:	6013      	str	r3, [r2, #0]
	//telem_data_queue = xQueueCreate(10, sizeof(telem_data_struct_t));
	g_buzzing_task_msg = xQueueCreate(48, sizeof(uint8_t));
 80085ee:	2200      	movs	r2, #0
 80085f0:	2101      	movs	r1, #1
 80085f2:	2030      	movs	r0, #48	@ 0x30
 80085f4:	f00e ff81 	bl	80174fa <xQueueGenericCreate>
 80085f8:	4603      	mov	r3, r0
 80085fa:	4a4b      	ldr	r2, [pc, #300]	@ (8008728 <master_task+0x1a0>)
 80085fc:	6013      	str	r3, [r2, #0]

	// xTaskCreate(Ctrl_TargetUpdateTask, "Ctrl_TargetUpdateTask",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&Ctrl_TargetUpdateTask_handle);

	xTaskCreate(motors_process_task, "motor_process",
 80085fe:	4b4b      	ldr	r3, [pc, #300]	@ (800872c <master_task+0x1a4>)
 8008600:	9301      	str	r3, [sp, #4]
 8008602:	2304      	movs	r3, #4
 8008604:	9300      	str	r3, [sp, #0]
 8008606:	2301      	movs	r3, #1
 8008608:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800860c:	4948      	ldr	r1, [pc, #288]	@ (8008730 <master_task+0x1a8>)
 800860e:	4849      	ldr	r0, [pc, #292]	@ (8008734 <master_task+0x1ac>)
 8008610:	f00f fcb4 	bl	8017f7c <xTaskCreate>

	// xTaskCreate(balancing_task, "balancing_task",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&balancing_task_handle);

	xTaskCreate(leg_kinematic_task, "leg_kinematic",
 8008614:	4b48      	ldr	r3, [pc, #288]	@ (8008738 <master_task+0x1b0>)
 8008616:	9301      	str	r3, [sp, #4]
 8008618:	2304      	movs	r3, #4
 800861a:	9300      	str	r3, [sp, #0]
 800861c:	2301      	movs	r3, #1
 800861e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008622:	4946      	ldr	r1, [pc, #280]	@ (800873c <master_task+0x1b4>)
 8008624:	4846      	ldr	r0, [pc, #280]	@ (8008740 <master_task+0x1b8>)
 8008626:	f00f fca9 	bl	8017f7c <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
					&motors_process_handle);

	xTaskCreate(imu_processing_task, "IMU_task",
 800862a:	4b46      	ldr	r3, [pc, #280]	@ (8008744 <master_task+0x1bc>)
 800862c:	9301      	str	r3, [sp, #4]
 800862e:	230f      	movs	r3, #15
 8008630:	9300      	str	r3, [sp, #0]
 8008632:	2301      	movs	r3, #1
 8008634:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008638:	4943      	ldr	r1, [pc, #268]	@ (8008748 <master_task+0x1c0>)
 800863a:	4844      	ldr	r0, [pc, #272]	@ (800874c <master_task+0x1c4>)
 800863c:	f00f fc9e 	bl	8017f7c <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 15,
			&imu_processing_task_handle);

	xTaskCreate(motor_calib_task, "motor_calib_task",
 8008640:	4b43      	ldr	r3, [pc, #268]	@ (8008750 <master_task+0x1c8>)
 8008642:	9301      	str	r3, [sp, #4]
 8008644:	2309      	movs	r3, #9
 8008646:	9300      	str	r3, [sp, #0]
 8008648:	2301      	movs	r3, #1
 800864a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800864e:	4941      	ldr	r1, [pc, #260]	@ (8008754 <master_task+0x1cc>)
 8008650:	4841      	ldr	r0, [pc, #260]	@ (8008758 <master_task+0x1d0>)
 8008652:	f00f fc93 	bl	8017f7c <xTaskCreate>
	} else {
//		xTaskCreate(launcher_control_task, "launcher_task",
//		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
//				&launcher_control_task_handle);
	}
	gimbal_ctrl_data.yaw_semaphore = xSemaphoreCreateBinary();
 8008656:	2203      	movs	r2, #3
 8008658:	2100      	movs	r1, #0
 800865a:	2001      	movs	r0, #1
 800865c:	f00e ff4d 	bl	80174fa <xQueueGenericCreate>
 8008660:	4603      	mov	r3, r0
 8008662:	4a3e      	ldr	r2, [pc, #248]	@ (800875c <master_task+0x1d4>)
 8008664:	6113      	str	r3, [r2, #16]
	xSemaphoreGive(gimbal_ctrl_data.yaw_semaphore);
 8008666:	4b3d      	ldr	r3, [pc, #244]	@ (800875c <master_task+0x1d4>)
 8008668:	6918      	ldr	r0, [r3, #16]
 800866a:	2300      	movs	r3, #0
 800866c:	2200      	movs	r2, #0
 800866e:	2100      	movs	r1, #0
 8008670:	f00e ffa2 	bl	80175b8 <xQueueGenericSend>
	xTaskCreate(control_input_task, "RC_task",
 8008674:	4b3a      	ldr	r3, [pc, #232]	@ (8008760 <master_task+0x1d8>)
 8008676:	9301      	str	r3, [sp, #4]
 8008678:	2304      	movs	r3, #4
 800867a:	9300      	str	r3, [sp, #0]
 800867c:	2301      	movs	r3, #1
 800867e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008682:	4938      	ldr	r1, [pc, #224]	@ (8008764 <master_task+0x1dc>)
 8008684:	4838      	ldr	r0, [pc, #224]	@ (8008768 <master_task+0x1e0>)
 8008686:	f00f fc79 	bl	8017f7c <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
			&control_input_task_handle);
	xTaskCreate(referee_processing_task, "referee_task", 512, (void*) 1,
 800868a:	4b38      	ldr	r3, [pc, #224]	@ (800876c <master_task+0x1e4>)
 800868c:	9301      	str	r3, [sp, #4]
 800868e:	2302      	movs	r3, #2
 8008690:	9300      	str	r3, [sp, #0]
 8008692:	2301      	movs	r3, #1
 8008694:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8008698:	4935      	ldr	r1, [pc, #212]	@ (8008770 <master_task+0x1e8>)
 800869a:	4836      	ldr	r0, [pc, #216]	@ (8008774 <master_task+0x1ec>)
 800869c:	f00f fc6e 	bl	8017f7c <xTaskCreate>
			(UBaseType_t) 2, &referee_processing_task_handle);

	// xTaskCreate(motor_control_task, "motor_control_task", 512, (void*) 3,
	// 		(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(motor_control_task, "motor_control", 512, (void*) 3,
 80086a0:	4b35      	ldr	r3, [pc, #212]	@ (8008778 <master_task+0x1f0>)
 80086a2:	9301      	str	r3, [sp, #4]
 80086a4:	2308      	movs	r3, #8
 80086a6:	9300      	str	r3, [sp, #0]
 80086a8:	2303      	movs	r3, #3
 80086aa:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80086ae:	4933      	ldr	r1, [pc, #204]	@ (800877c <master_task+0x1f4>)
 80086b0:	4833      	ldr	r0, [pc, #204]	@ (8008780 <master_task+0x1f8>)
 80086b2:	f00f fc63 	bl	8017f7c <xTaskCreate>
			(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(buzzing_task, "buzzer_task",
 80086b6:	4b33      	ldr	r3, [pc, #204]	@ (8008784 <master_task+0x1fc>)
 80086b8:	9301      	str	r3, [sp, #4]
 80086ba:	2301      	movs	r3, #1
 80086bc:	9300      	str	r3, [sp, #0]
 80086be:	2301      	movs	r3, #1
 80086c0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80086c4:	4930      	ldr	r1, [pc, #192]	@ (8008788 <master_task+0x200>)
 80086c6:	4831      	ldr	r0, [pc, #196]	@ (800878c <master_task+0x204>)
 80086c8:	f00f fc58 	bl	8017f7c <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &buzzing_task_handle);
	if (usb_continue_semaphore == NULL) {
 80086cc:	4b12      	ldr	r3, [pc, #72]	@ (8008718 <master_task+0x190>)
 80086ce:	681b      	ldr	r3, [r3, #0]
 80086d0:	2b00      	cmp	r3, #0
 80086d2:	d00a      	beq.n	80086ea <master_task+0x162>
		//error handler
	} else {
		xTaskCreate(usb_task, "usb_task",
 80086d4:	4b2e      	ldr	r3, [pc, #184]	@ (8008790 <master_task+0x208>)
 80086d6:	9301      	str	r3, [sp, #4]
 80086d8:	2301      	movs	r3, #1
 80086da:	9300      	str	r3, [sp, #0]
 80086dc:	2301      	movs	r3, #1
 80086de:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80086e2:	492c      	ldr	r1, [pc, #176]	@ (8008794 <master_task+0x20c>)
 80086e4:	482c      	ldr	r0, [pc, #176]	@ (8008798 <master_task+0x210>)
 80086e6:	f00f fc49 	bl	8017f7c <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &usb_task_handle);
	}

//	xTaskCreate(telemetry_task, "telemetry_task", 700, (void*) 1,
//			(UBaseType_t) 5, &telemetry_task_handle);
	xTaskCreate(hud_task, "hud_task", 512, (void*) 3,
 80086ea:	4b2c      	ldr	r3, [pc, #176]	@ (800879c <master_task+0x214>)
 80086ec:	9301      	str	r3, [sp, #4]
 80086ee:	2305      	movs	r3, #5
 80086f0:	9300      	str	r3, [sp, #0]
 80086f2:	2303      	movs	r3, #3
 80086f4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80086f8:	4929      	ldr	r1, [pc, #164]	@ (80087a0 <master_task+0x218>)
 80086fa:	482a      	ldr	r0, [pc, #168]	@ (80087a4 <master_task+0x21c>)
 80086fc:	f00f fc3e 	bl	8017f7c <xTaskCreate>
			(UBaseType_t) 5, &hud_task_handle);


//	vTaskDelete(master_task_handle);
	while(1){
		vTaskDelay(1000);
 8008700:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8008704:	f00f fe42 	bl	801838c <vTaskDelay>
 8008708:	e7fa      	b.n	8008700 <master_task+0x178>
 800870a:	bf00      	nop
 800870c:	200037a8 	.word	0x200037a8
 8008710:	200037ac 	.word	0x200037ac
 8008714:	200037b0 	.word	0x200037b0
 8008718:	200037b4 	.word	0x200037b4
 800871c:	200037b8 	.word	0x200037b8
 8008720:	200037bc 	.word	0x200037bc
 8008724:	200037c0 	.word	0x200037c0
 8008728:	200037c4 	.word	0x200037c4
 800872c:	200037a4 	.word	0x200037a4
 8008730:	08020ec0 	.word	0x08020ec0
 8008734:	0800a321 	.word	0x0800a321
 8008738:	200037a0 	.word	0x200037a0
 800873c:	08020ed0 	.word	0x08020ed0
 8008740:	080073f9 	.word	0x080073f9
 8008744:	20003794 	.word	0x20003794
 8008748:	08020ee0 	.word	0x08020ee0
 800874c:	080073a5 	.word	0x080073a5
 8008750:	2000378c 	.word	0x2000378c
 8008754:	08020eec 	.word	0x08020eec
 8008758:	08009b4d 	.word	0x08009b4d
 800875c:	200034e8 	.word	0x200034e8
 8008760:	20003784 	.word	0x20003784
 8008764:	08020f00 	.word	0x08020f00
 8008768:	08005581 	.word	0x08005581
 800876c:	20003780 	.word	0x20003780
 8008770:	08020f08 	.word	0x08020f08
 8008774:	0800a9f9 	.word	0x0800a9f9
 8008778:	20003798 	.word	0x20003798
 800877c:	08020f18 	.word	0x08020f18
 8008780:	08009e21 	.word	0x08009e21
 8008784:	20003788 	.word	0x20003788
 8008788:	08020f28 	.word	0x08020f28
 800878c:	08004c69 	.word	0x08004c69
 8008790:	20003790 	.word	0x20003790
 8008794:	08020f34 	.word	0x08020f34
 8008798:	0800af85 	.word	0x0800af85
 800879c:	2000379c 	.word	0x2000379c
 80087a0:	08020f40 	.word	0x08020f40
 80087a4:	080063d9 	.word	0x080063d9

080087a8 <set_motor_config>:
#include "motor_config.h"

extern QueueHandle_t g_buzzing_task_msg;
uint16_t g_motor_fault;

void set_motor_config(motor_data_t *motor) {
 80087a8:	b480      	push	{r7}
 80087aa:	b083      	sub	sp, #12
 80087ac:	af00      	add	r7, sp, #0
 80087ae:	6078      	str	r0, [r7, #4]
	//general config:
	switch (motor->motor_type) {
 80087b0:	687b      	ldr	r3, [r7, #4]
 80087b2:	789b      	ldrb	r3, [r3, #2]
 80087b4:	3b01      	subs	r3, #1
 80087b6:	2b08      	cmp	r3, #8
 80087b8:	f200 8115 	bhi.w	80089e6 <set_motor_config+0x23e>
 80087bc:	a201      	add	r2, pc, #4	@ (adr r2, 80087c4 <set_motor_config+0x1c>)
 80087be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80087c2:	bf00      	nop
 80087c4:	080088b5 	.word	0x080088b5
 80087c8:	08008981 	.word	0x08008981
 80087cc:	080087e9 	.word	0x080087e9
 80087d0:	0800884d 	.word	0x0800884d
 80087d4:	080087e9 	.word	0x080087e9
 80087d8:	08008981 	.word	0x08008981
 80087dc:	08008981 	.word	0x08008981
 80087e0:	080087e9 	.word	0x080087e9
 80087e4:	0800891b 	.word	0x0800891b
	case TYPE_M3508_ANGLE:
	case TYPE_M3508_STEPS:
	case TYPE_M3508:
		motor->angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 80087e8:	687b      	ldr	r3, [r7, #4]
 80087ea:	4a84      	ldr	r2, [pc, #528]	@ (80089fc <set_motor_config+0x254>)
 80087ec:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	4a83      	ldr	r2, [pc, #524]	@ (8008a00 <set_motor_config+0x258>)
 80087f4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 80087f8:	687b      	ldr	r3, [r7, #4]
 80087fa:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80087fe:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M3508_GEARBOX_RATIO;
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	4a80      	ldr	r2, [pc, #512]	@ (8008a04 <set_motor_config+0x25c>)
 8008804:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M3508_GEARBOX_RATIO;
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	4a7f      	ldr	r2, [pc, #508]	@ (8008a08 <set_motor_config+0x260>)
 800880c:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 8008816:	687b      	ldr	r3, [r7, #4]
 8008818:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800881c:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	4a79      	ldr	r2, [pc, #484]	@ (8008a0c <set_motor_config+0x264>)
 8008828:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 800882c:	687b      	ldr	r3, [r7, #4]
 800882e:	4a78      	ldr	r2, [pc, #480]	@ (8008a10 <set_motor_config+0x268>)
 8008830:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang - motor->angle_data.min_ang;
 8008834:	687b      	ldr	r3, [r7, #4]
 8008836:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008840:	ee77 7a67 	vsub.f32	s15, s14, s15
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800884a:	e0cd      	b.n	80089e8 <set_motor_config+0x240>
	case TYPE_M3508_NGEARBOX:
		motor->angle_data.gearbox_ratio = 1;
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8008852:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	4a69      	ldr	r2, [pc, #420]	@ (8008a00 <set_motor_config+0x258>)
 800885a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8008864:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	4a6a      	ldr	r2, [pc, #424]	@ (8008a14 <set_motor_config+0x26c>)
 800886a:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8008874:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800887e:	687b      	ldr	r3, [r7, #4]
 8008880:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008884:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 800888c:	687b      	ldr	r3, [r7, #4]
 800888e:	4a5f      	ldr	r2, [pc, #380]	@ (8008a0c <set_motor_config+0x264>)
 8008890:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	4a5e      	ldr	r2, [pc, #376]	@ (8008a10 <set_motor_config+0x268>)
 8008898:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800889c:	687b      	ldr	r3, [r7, #4]
 800889e:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 80088a8:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80088ac:	687b      	ldr	r3, [r7, #4]
 80088ae:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 80088b2:	e099      	b.n	80089e8 <set_motor_config+0x240>

	case TYPE_GM6020:
		motor->angle_data.gearbox_ratio = 1;
 80088b4:	687b      	ldr	r3, [r7, #4]
 80088b6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80088ba:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	4a55      	ldr	r2, [pc, #340]	@ (8008a18 <set_motor_config+0x270>)
 80088c2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	4a54      	ldr	r2, [pc, #336]	@ (8008a1c <set_motor_config+0x274>)
 80088ca:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	4a51      	ldr	r2, [pc, #324]	@ (8008a14 <set_motor_config+0x26c>)
 80088d0:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 80088d4:	687b      	ldr	r3, [r7, #4]
 80088d6:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80088da:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 80088e4:	687b      	ldr	r3, [r7, #4]
 80088e6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80088ea:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.max_ang = PI;
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	4a46      	ldr	r2, [pc, #280]	@ (8008a10 <set_motor_config+0x268>)
 80088f6:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.min_ang = -PI;
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	4a43      	ldr	r2, [pc, #268]	@ (8008a0c <set_motor_config+0x264>)
 80088fe:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 800890e:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008918:	e066      	b.n	80089e8 <set_motor_config+0x240>

	case TYPE_GM6020_720:
		motor->angle_data.gearbox_ratio = 0;
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	f04f 0200 	mov.w	r2, #0
 8008920:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 8008924:	687b      	ldr	r3, [r7, #4]
 8008926:	4a3c      	ldr	r2, [pc, #240]	@ (8008a18 <set_motor_config+0x270>)
 8008928:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	4a3b      	ldr	r2, [pc, #236]	@ (8008a1c <set_motor_config+0x274>)
 8008930:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -8192;	//-4096*2
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	4a3a      	ldr	r2, [pc, #232]	@ (8008a20 <set_motor_config+0x278>)
 8008936:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 8192;	//4096*2
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8008940:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008950:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008952:	687b      	ldr	r3, [r7, #4]
 8008954:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -2 * PI;
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	4a32      	ldr	r2, [pc, #200]	@ (8008a24 <set_motor_config+0x27c>)
 800895c:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = 2 * PI;
 8008960:	687b      	ldr	r3, [r7, #4]
 8008962:	4a31      	ldr	r2, [pc, #196]	@ (8008a28 <set_motor_config+0x280>)
 8008964:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008974:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800897e:	e033      	b.n	80089e8 <set_motor_config+0x240>
	case TYPE_M2006:
	case TYPE_M2006_STEPS:
	case TYPE_M2006_ANGLE:
		motor->angle_data.gearbox_ratio = M2006_GEARBOX_RATIO;
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	4a2a      	ldr	r2, [pc, #168]	@ (8008a2c <set_motor_config+0x284>)
 8008984:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M2006_MAX_RPM;
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	4a29      	ldr	r2, [pc, #164]	@ (8008a30 <set_motor_config+0x288>)
 800898c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M2006_MAX_OUTPUT;
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8008996:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M2006_GEARBOX_RATIO;
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	4a26      	ldr	r2, [pc, #152]	@ (8008a34 <set_motor_config+0x28c>)
 800899c:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M2006_GEARBOX_RATIO;
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	f44f 3210 	mov.w	r2, #147456	@ 0x24000
 80089a6:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80089b6:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	4a12      	ldr	r2, [pc, #72]	@ (8008a0c <set_motor_config+0x264>)
 80089c2:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	4a11      	ldr	r2, [pc, #68]	@ (8008a10 <set_motor_config+0x268>)
 80089ca:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 80089da:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80089de:	687b      	ldr	r3, [r7, #4]
 80089e0:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 80089e4:	e000      	b.n	80089e8 <set_motor_config+0x240>
	default:
		break;
 80089e6:	bf00      	nop
	}

	motor->angle_data.init = 0;
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	2200      	movs	r2, #0
 80089ec:	f883 20dc 	strb.w	r2, [r3, #220]	@ 0xdc

}
 80089f0:	bf00      	nop
 80089f2:	370c      	adds	r7, #12
 80089f4:	46bd      	mov	sp, r7
 80089f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089fa:	4770      	bx	lr
 80089fc:	4199999a 	.word	0x4199999a
 8008a00:	460fc000 	.word	0x460fc000
 8008a04:	fffecccd 	.word	0xfffecccd
 8008a08:	00013333 	.word	0x00013333
 8008a0c:	c0490fdb 	.word	0xc0490fdb
 8008a10:	40490fdb 	.word	0x40490fdb
 8008a14:	fffff000 	.word	0xfffff000
 8008a18:	43c80000 	.word	0x43c80000
 8008a1c:	469c4000 	.word	0x469c4000
 8008a20:	ffffe000 	.word	0xffffe000
 8008a24:	c0c90fdb 	.word	0xc0c90fdb
 8008a28:	40c90fdb 	.word	0x40c90fdb
 8008a2c:	42100000 	.word	0x42100000
 8008a30:	466a6000 	.word	0x466a6000
 8008a34:	fffdc000 	.word	0xfffdc000

08008a38 <config_motors>:

extern motor_data_t g_can_motors[24];
void config_motors() {
 8008a38:	b580      	push	{r7, lr}
 8008a3a:	b082      	sub	sp, #8
 8008a3c:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i < 24; i++) {
 8008a3e:	2300      	movs	r3, #0
 8008a40:	71fb      	strb	r3, [r7, #7]
 8008a42:	e042      	b.n	8008aca <config_motors+0x92>
		//reset all the values to 0
		g_can_motors[i].motor_type = 0;
 8008a44:	79fa      	ldrb	r2, [r7, #7]
 8008a46:	49c4      	ldr	r1, [pc, #784]	@ (8008d58 <config_motors+0x320>)
 8008a48:	4613      	mov	r3, r2
 8008a4a:	011b      	lsls	r3, r3, #4
 8008a4c:	1a9b      	subs	r3, r3, r2
 8008a4e:	011b      	lsls	r3, r3, #4
 8008a50:	440b      	add	r3, r1
 8008a52:	3302      	adds	r3, #2
 8008a54:	2200      	movs	r2, #0
 8008a56:	701a      	strb	r2, [r3, #0]
		g_can_motors[i].rpm_pid.output = 0;
 8008a58:	79fa      	ldrb	r2, [r7, #7]
 8008a5a:	49bf      	ldr	r1, [pc, #764]	@ (8008d58 <config_motors+0x320>)
 8008a5c:	4613      	mov	r3, r2
 8008a5e:	011b      	lsls	r3, r3, #4
 8008a60:	1a9b      	subs	r3, r3, r2
 8008a62:	011b      	lsls	r3, r3, #4
 8008a64:	440b      	add	r3, r1
 8008a66:	3358      	adds	r3, #88	@ 0x58
 8008a68:	f04f 0200 	mov.w	r2, #0
 8008a6c:	601a      	str	r2, [r3, #0]
		g_can_motors[i].rpm_pid.integral = 0;
 8008a6e:	79fa      	ldrb	r2, [r7, #7]
 8008a70:	49b9      	ldr	r1, [pc, #740]	@ (8008d58 <config_motors+0x320>)
 8008a72:	4613      	mov	r3, r2
 8008a74:	011b      	lsls	r3, r3, #4
 8008a76:	1a9b      	subs	r3, r3, r2
 8008a78:	011b      	lsls	r3, r3, #4
 8008a7a:	440b      	add	r3, r1
 8008a7c:	334c      	adds	r3, #76	@ 0x4c
 8008a7e:	f04f 0200 	mov.w	r2, #0
 8008a82:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.output = 0;
 8008a84:	79fa      	ldrb	r2, [r7, #7]
 8008a86:	49b4      	ldr	r1, [pc, #720]	@ (8008d58 <config_motors+0x320>)
 8008a88:	4613      	mov	r3, r2
 8008a8a:	011b      	lsls	r3, r3, #4
 8008a8c:	1a9b      	subs	r3, r3, r2
 8008a8e:	011b      	lsls	r3, r3, #4
 8008a90:	440b      	add	r3, r1
 8008a92:	3388      	adds	r3, #136	@ 0x88
 8008a94:	f04f 0200 	mov.w	r2, #0
 8008a98:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.integral = 0;
 8008a9a:	79fa      	ldrb	r2, [r7, #7]
 8008a9c:	49ae      	ldr	r1, [pc, #696]	@ (8008d58 <config_motors+0x320>)
 8008a9e:	4613      	mov	r3, r2
 8008aa0:	011b      	lsls	r3, r3, #4
 8008aa2:	1a9b      	subs	r3, r3, r2
 8008aa4:	011b      	lsls	r3, r3, #4
 8008aa6:	440b      	add	r3, r1
 8008aa8:	337c      	adds	r3, #124	@ 0x7c
 8008aaa:	f04f 0200 	mov.w	r2, #0
 8008aae:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_data.ticks = 0;
 8008ab0:	79fa      	ldrb	r2, [r7, #7]
 8008ab2:	49a9      	ldr	r1, [pc, #676]	@ (8008d58 <config_motors+0x320>)
 8008ab4:	4613      	mov	r3, r2
 8008ab6:	011b      	lsls	r3, r3, #4
 8008ab8:	1a9b      	subs	r3, r3, r2
 8008aba:	011b      	lsls	r3, r3, #4
 8008abc:	440b      	add	r3, r1
 8008abe:	3398      	adds	r3, #152	@ 0x98
 8008ac0:	2200      	movs	r2, #0
 8008ac2:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < 24; i++) {
 8008ac4:	79fb      	ldrb	r3, [r7, #7]
 8008ac6:	3301      	adds	r3, #1
 8008ac8:	71fb      	strb	r3, [r7, #7]
 8008aca:	79fb      	ldrb	r3, [r7, #7]
 8008acc:	2b17      	cmp	r3, #23
 8008ace:	d9b9      	bls.n	8008a44 <config_motors+0xc>
	}

	//initialise motor data
#ifdef LEFT_MOTOR_ID
	uint8_t motor_id = LEFT_MOTOR_ID - 1;
 8008ad0:	2300      	movs	r3, #0
 8008ad2:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 8008ad4:	79ba      	ldrb	r2, [r7, #6]
 8008ad6:	49a0      	ldr	r1, [pc, #640]	@ (8008d58 <config_motors+0x320>)
 8008ad8:	4613      	mov	r3, r2
 8008ada:	011b      	lsls	r3, r3, #4
 8008adc:	1a9b      	subs	r3, r3, r2
 8008ade:	011b      	lsls	r3, r3, #4
 8008ae0:	440b      	add	r3, r1
 8008ae2:	3302      	adds	r3, #2
 8008ae4:	2203      	movs	r2, #3
 8008ae6:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008ae8:	79ba      	ldrb	r2, [r7, #6]
 8008aea:	4613      	mov	r3, r2
 8008aec:	011b      	lsls	r3, r3, #4
 8008aee:	1a9b      	subs	r3, r3, r2
 8008af0:	011b      	lsls	r3, r3, #4
 8008af2:	4a99      	ldr	r2, [pc, #612]	@ (8008d58 <config_motors+0x320>)
 8008af4:	4413      	add	r3, r2
 8008af6:	4618      	mov	r0, r3
 8008af8:	f7ff fe56 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008afc:	79ba      	ldrb	r2, [r7, #6]
 8008afe:	4996      	ldr	r1, [pc, #600]	@ (8008d58 <config_motors+0x320>)
 8008b00:	4613      	mov	r3, r2
 8008b02:	011b      	lsls	r3, r3, #4
 8008b04:	1a9b      	subs	r3, r3, r2
 8008b06:	011b      	lsls	r3, r3, #4
 8008b08:	440b      	add	r3, r1
 8008b0a:	339c      	adds	r3, #156	@ 0x9c
 8008b0c:	2200      	movs	r2, #0
 8008b0e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008b10:	79ba      	ldrb	r2, [r7, #6]
 8008b12:	4991      	ldr	r1, [pc, #580]	@ (8008d58 <config_motors+0x320>)
 8008b14:	4613      	mov	r3, r2
 8008b16:	011b      	lsls	r3, r3, #4
 8008b18:	1a9b      	subs	r3, r3, r2
 8008b1a:	011b      	lsls	r3, r3, #4
 8008b1c:	440b      	add	r3, r1
 8008b1e:	33c4      	adds	r3, #196	@ 0xc4
 8008b20:	4a8e      	ldr	r2, [pc, #568]	@ (8008d5c <config_motors+0x324>)
 8008b22:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008b24:	79ba      	ldrb	r2, [r7, #6]
 8008b26:	498c      	ldr	r1, [pc, #560]	@ (8008d58 <config_motors+0x320>)
 8008b28:	4613      	mov	r3, r2
 8008b2a:	011b      	lsls	r3, r3, #4
 8008b2c:	1a9b      	subs	r3, r3, r2
 8008b2e:	011b      	lsls	r3, r3, #4
 8008b30:	440b      	add	r3, r1
 8008b32:	33c0      	adds	r3, #192	@ 0xc0
 8008b34:	4a8a      	ldr	r2, [pc, #552]	@ (8008d60 <config_motors+0x328>)
 8008b36:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008b38:	79ba      	ldrb	r2, [r7, #6]
 8008b3a:	4987      	ldr	r1, [pc, #540]	@ (8008d58 <config_motors+0x320>)
 8008b3c:	4613      	mov	r3, r2
 8008b3e:	011b      	lsls	r3, r3, #4
 8008b40:	1a9b      	subs	r3, r3, r2
 8008b42:	011b      	lsls	r3, r3, #4
 8008b44:	440b      	add	r3, r1
 8008b46:	3338      	adds	r3, #56	@ 0x38
 8008b48:	f04f 0200 	mov.w	r2, #0
 8008b4c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008b4e:	79ba      	ldrb	r2, [r7, #6]
 8008b50:	4981      	ldr	r1, [pc, #516]	@ (8008d58 <config_motors+0x320>)
 8008b52:	4613      	mov	r3, r2
 8008b54:	011b      	lsls	r3, r3, #4
 8008b56:	1a9b      	subs	r3, r3, r2
 8008b58:	011b      	lsls	r3, r3, #4
 8008b5a:	440b      	add	r3, r1
 8008b5c:	333c      	adds	r3, #60	@ 0x3c
 8008b5e:	f04f 0200 	mov.w	r2, #0
 8008b62:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008b64:	79ba      	ldrb	r2, [r7, #6]
 8008b66:	497c      	ldr	r1, [pc, #496]	@ (8008d58 <config_motors+0x320>)
 8008b68:	4613      	mov	r3, r2
 8008b6a:	011b      	lsls	r3, r3, #4
 8008b6c:	1a9b      	subs	r3, r3, r2
 8008b6e:	011b      	lsls	r3, r3, #4
 8008b70:	440b      	add	r3, r1
 8008b72:	3340      	adds	r3, #64	@ 0x40
 8008b74:	f04f 0200 	mov.w	r2, #0
 8008b78:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008b7a:	79ba      	ldrb	r2, [r7, #6]
 8008b7c:	4976      	ldr	r1, [pc, #472]	@ (8008d58 <config_motors+0x320>)
 8008b7e:	4613      	mov	r3, r2
 8008b80:	011b      	lsls	r3, r3, #4
 8008b82:	1a9b      	subs	r3, r3, r2
 8008b84:	011b      	lsls	r3, r3, #4
 8008b86:	440b      	add	r3, r1
 8008b88:	33d4      	adds	r3, #212	@ 0xd4
 8008b8a:	4a76      	ldr	r2, [pc, #472]	@ (8008d64 <config_motors+0x32c>)
 8008b8c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008b8e:	79ba      	ldrb	r2, [r7, #6]
 8008b90:	4971      	ldr	r1, [pc, #452]	@ (8008d58 <config_motors+0x320>)
 8008b92:	4613      	mov	r3, r2
 8008b94:	011b      	lsls	r3, r3, #4
 8008b96:	1a9b      	subs	r3, r3, r2
 8008b98:	011b      	lsls	r3, r3, #4
 8008b9a:	440b      	add	r3, r1
 8008b9c:	3350      	adds	r3, #80	@ 0x50
 8008b9e:	f04f 0200 	mov.w	r2, #0
 8008ba2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008ba4:	79ba      	ldrb	r2, [r7, #6]
 8008ba6:	496c      	ldr	r1, [pc, #432]	@ (8008d58 <config_motors+0x320>)
 8008ba8:	4613      	mov	r3, r2
 8008baa:	011b      	lsls	r3, r3, #4
 8008bac:	1a9b      	subs	r3, r3, r2
 8008bae:	011b      	lsls	r3, r3, #4
 8008bb0:	440b      	add	r3, r1
 8008bb2:	3354      	adds	r3, #84	@ 0x54
 8008bb4:	f04f 0200 	mov.w	r2, #0
 8008bb8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 8008bba:	79ba      	ldrb	r2, [r7, #6]
 8008bbc:	4966      	ldr	r1, [pc, #408]	@ (8008d58 <config_motors+0x320>)
 8008bbe:	4613      	mov	r3, r2
 8008bc0:	011b      	lsls	r3, r3, #4
 8008bc2:	1a9b      	subs	r3, r3, r2
 8008bc4:	011b      	lsls	r3, r3, #4
 8008bc6:	440b      	add	r3, r1
 8008bc8:	3330      	adds	r3, #48	@ 0x30
 8008bca:	4a67      	ldr	r2, [pc, #412]	@ (8008d68 <config_motors+0x330>)
 8008bcc:	601a      	str	r2, [r3, #0]
#endif

#ifdef RIGHT_MOTOR_ID
	motor_id = RIGHT_MOTOR_ID - 1;
 8008bce:	2301      	movs	r3, #1
 8008bd0:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 8008bd2:	79ba      	ldrb	r2, [r7, #6]
 8008bd4:	4960      	ldr	r1, [pc, #384]	@ (8008d58 <config_motors+0x320>)
 8008bd6:	4613      	mov	r3, r2
 8008bd8:	011b      	lsls	r3, r3, #4
 8008bda:	1a9b      	subs	r3, r3, r2
 8008bdc:	011b      	lsls	r3, r3, #4
 8008bde:	440b      	add	r3, r1
 8008be0:	3302      	adds	r3, #2
 8008be2:	2203      	movs	r2, #3
 8008be4:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008be6:	79ba      	ldrb	r2, [r7, #6]
 8008be8:	4613      	mov	r3, r2
 8008bea:	011b      	lsls	r3, r3, #4
 8008bec:	1a9b      	subs	r3, r3, r2
 8008bee:	011b      	lsls	r3, r3, #4
 8008bf0:	4a59      	ldr	r2, [pc, #356]	@ (8008d58 <config_motors+0x320>)
 8008bf2:	4413      	add	r3, r2
 8008bf4:	4618      	mov	r0, r3
 8008bf6:	f7ff fdd7 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008bfa:	79ba      	ldrb	r2, [r7, #6]
 8008bfc:	4956      	ldr	r1, [pc, #344]	@ (8008d58 <config_motors+0x320>)
 8008bfe:	4613      	mov	r3, r2
 8008c00:	011b      	lsls	r3, r3, #4
 8008c02:	1a9b      	subs	r3, r3, r2
 8008c04:	011b      	lsls	r3, r3, #4
 8008c06:	440b      	add	r3, r1
 8008c08:	339c      	adds	r3, #156	@ 0x9c
 8008c0a:	2200      	movs	r2, #0
 8008c0c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008c0e:	79ba      	ldrb	r2, [r7, #6]
 8008c10:	4951      	ldr	r1, [pc, #324]	@ (8008d58 <config_motors+0x320>)
 8008c12:	4613      	mov	r3, r2
 8008c14:	011b      	lsls	r3, r3, #4
 8008c16:	1a9b      	subs	r3, r3, r2
 8008c18:	011b      	lsls	r3, r3, #4
 8008c1a:	440b      	add	r3, r1
 8008c1c:	33c4      	adds	r3, #196	@ 0xc4
 8008c1e:	4a4f      	ldr	r2, [pc, #316]	@ (8008d5c <config_motors+0x324>)
 8008c20:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008c22:	79ba      	ldrb	r2, [r7, #6]
 8008c24:	494c      	ldr	r1, [pc, #304]	@ (8008d58 <config_motors+0x320>)
 8008c26:	4613      	mov	r3, r2
 8008c28:	011b      	lsls	r3, r3, #4
 8008c2a:	1a9b      	subs	r3, r3, r2
 8008c2c:	011b      	lsls	r3, r3, #4
 8008c2e:	440b      	add	r3, r1
 8008c30:	33c0      	adds	r3, #192	@ 0xc0
 8008c32:	4a4b      	ldr	r2, [pc, #300]	@ (8008d60 <config_motors+0x328>)
 8008c34:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008c36:	79ba      	ldrb	r2, [r7, #6]
 8008c38:	4947      	ldr	r1, [pc, #284]	@ (8008d58 <config_motors+0x320>)
 8008c3a:	4613      	mov	r3, r2
 8008c3c:	011b      	lsls	r3, r3, #4
 8008c3e:	1a9b      	subs	r3, r3, r2
 8008c40:	011b      	lsls	r3, r3, #4
 8008c42:	440b      	add	r3, r1
 8008c44:	33d4      	adds	r3, #212	@ 0xd4
 8008c46:	4a47      	ldr	r2, [pc, #284]	@ (8008d64 <config_motors+0x32c>)
 8008c48:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008c4a:	79ba      	ldrb	r2, [r7, #6]
 8008c4c:	4942      	ldr	r1, [pc, #264]	@ (8008d58 <config_motors+0x320>)
 8008c4e:	4613      	mov	r3, r2
 8008c50:	011b      	lsls	r3, r3, #4
 8008c52:	1a9b      	subs	r3, r3, r2
 8008c54:	011b      	lsls	r3, r3, #4
 8008c56:	440b      	add	r3, r1
 8008c58:	3338      	adds	r3, #56	@ 0x38
 8008c5a:	f04f 0200 	mov.w	r2, #0
 8008c5e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008c60:	79ba      	ldrb	r2, [r7, #6]
 8008c62:	493d      	ldr	r1, [pc, #244]	@ (8008d58 <config_motors+0x320>)
 8008c64:	4613      	mov	r3, r2
 8008c66:	011b      	lsls	r3, r3, #4
 8008c68:	1a9b      	subs	r3, r3, r2
 8008c6a:	011b      	lsls	r3, r3, #4
 8008c6c:	440b      	add	r3, r1
 8008c6e:	333c      	adds	r3, #60	@ 0x3c
 8008c70:	f04f 0200 	mov.w	r2, #0
 8008c74:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008c76:	79ba      	ldrb	r2, [r7, #6]
 8008c78:	4937      	ldr	r1, [pc, #220]	@ (8008d58 <config_motors+0x320>)
 8008c7a:	4613      	mov	r3, r2
 8008c7c:	011b      	lsls	r3, r3, #4
 8008c7e:	1a9b      	subs	r3, r3, r2
 8008c80:	011b      	lsls	r3, r3, #4
 8008c82:	440b      	add	r3, r1
 8008c84:	3340      	adds	r3, #64	@ 0x40
 8008c86:	f04f 0200 	mov.w	r2, #0
 8008c8a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008c8c:	79ba      	ldrb	r2, [r7, #6]
 8008c8e:	4932      	ldr	r1, [pc, #200]	@ (8008d58 <config_motors+0x320>)
 8008c90:	4613      	mov	r3, r2
 8008c92:	011b      	lsls	r3, r3, #4
 8008c94:	1a9b      	subs	r3, r3, r2
 8008c96:	011b      	lsls	r3, r3, #4
 8008c98:	440b      	add	r3, r1
 8008c9a:	3350      	adds	r3, #80	@ 0x50
 8008c9c:	f04f 0200 	mov.w	r2, #0
 8008ca0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008ca2:	79ba      	ldrb	r2, [r7, #6]
 8008ca4:	492c      	ldr	r1, [pc, #176]	@ (8008d58 <config_motors+0x320>)
 8008ca6:	4613      	mov	r3, r2
 8008ca8:	011b      	lsls	r3, r3, #4
 8008caa:	1a9b      	subs	r3, r3, r2
 8008cac:	011b      	lsls	r3, r3, #4
 8008cae:	440b      	add	r3, r1
 8008cb0:	3354      	adds	r3, #84	@ 0x54
 8008cb2:	f04f 0200 	mov.w	r2, #0
 8008cb6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 8008cb8:	79ba      	ldrb	r2, [r7, #6]
 8008cba:	4927      	ldr	r1, [pc, #156]	@ (8008d58 <config_motors+0x320>)
 8008cbc:	4613      	mov	r3, r2
 8008cbe:	011b      	lsls	r3, r3, #4
 8008cc0:	1a9b      	subs	r3, r3, r2
 8008cc2:	011b      	lsls	r3, r3, #4
 8008cc4:	440b      	add	r3, r1
 8008cc6:	3330      	adds	r3, #48	@ 0x30
 8008cc8:	4a27      	ldr	r2, [pc, #156]	@ (8008d68 <config_motors+0x330>)
 8008cca:	601a      	str	r2, [r3, #0]
#endif
#ifdef FR_MOTOR_ID
	motor_id = FR_MOTOR_ID - 1;
 8008ccc:	2304      	movs	r3, #4
 8008cce:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008cd0:	79ba      	ldrb	r2, [r7, #6]
 8008cd2:	4921      	ldr	r1, [pc, #132]	@ (8008d58 <config_motors+0x320>)
 8008cd4:	4613      	mov	r3, r2
 8008cd6:	011b      	lsls	r3, r3, #4
 8008cd8:	1a9b      	subs	r3, r3, r2
 8008cda:	011b      	lsls	r3, r3, #4
 8008cdc:	440b      	add	r3, r1
 8008cde:	3302      	adds	r3, #2
 8008ce0:	2201      	movs	r2, #1
 8008ce2:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008ce4:	79ba      	ldrb	r2, [r7, #6]
 8008ce6:	4613      	mov	r3, r2
 8008ce8:	011b      	lsls	r3, r3, #4
 8008cea:	1a9b      	subs	r3, r3, r2
 8008cec:	011b      	lsls	r3, r3, #4
 8008cee:	4a1a      	ldr	r2, [pc, #104]	@ (8008d58 <config_motors+0x320>)
 8008cf0:	4413      	add	r3, r2
 8008cf2:	4618      	mov	r0, r3
 8008cf4:	f7ff fd58 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008cf8:	79ba      	ldrb	r2, [r7, #6]
 8008cfa:	4917      	ldr	r1, [pc, #92]	@ (8008d58 <config_motors+0x320>)
 8008cfc:	4613      	mov	r3, r2
 8008cfe:	011b      	lsls	r3, r3, #4
 8008d00:	1a9b      	subs	r3, r3, r2
 8008d02:	011b      	lsls	r3, r3, #4
 8008d04:	440b      	add	r3, r1
 8008d06:	339c      	adds	r3, #156	@ 0x9c
 8008d08:	2200      	movs	r2, #0
 8008d0a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008d0c:	79ba      	ldrb	r2, [r7, #6]
 8008d0e:	4912      	ldr	r1, [pc, #72]	@ (8008d58 <config_motors+0x320>)
 8008d10:	4613      	mov	r3, r2
 8008d12:	011b      	lsls	r3, r3, #4
 8008d14:	1a9b      	subs	r3, r3, r2
 8008d16:	011b      	lsls	r3, r3, #4
 8008d18:	440b      	add	r3, r1
 8008d1a:	33c4      	adds	r3, #196	@ 0xc4
 8008d1c:	4a0f      	ldr	r2, [pc, #60]	@ (8008d5c <config_motors+0x324>)
 8008d1e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008d20:	79ba      	ldrb	r2, [r7, #6]
 8008d22:	490d      	ldr	r1, [pc, #52]	@ (8008d58 <config_motors+0x320>)
 8008d24:	4613      	mov	r3, r2
 8008d26:	011b      	lsls	r3, r3, #4
 8008d28:	1a9b      	subs	r3, r3, r2
 8008d2a:	011b      	lsls	r3, r3, #4
 8008d2c:	440b      	add	r3, r1
 8008d2e:	33c0      	adds	r3, #192	@ 0xc0
 8008d30:	4a0b      	ldr	r2, [pc, #44]	@ (8008d60 <config_motors+0x328>)
 8008d32:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008d34:	79ba      	ldrb	r2, [r7, #6]
 8008d36:	4908      	ldr	r1, [pc, #32]	@ (8008d58 <config_motors+0x320>)
 8008d38:	4613      	mov	r3, r2
 8008d3a:	011b      	lsls	r3, r3, #4
 8008d3c:	1a9b      	subs	r3, r3, r2
 8008d3e:	011b      	lsls	r3, r3, #4
 8008d40:	440b      	add	r3, r1
 8008d42:	3338      	adds	r3, #56	@ 0x38
 8008d44:	f04f 0200 	mov.w	r2, #0
 8008d48:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008d4a:	79ba      	ldrb	r2, [r7, #6]
 8008d4c:	4902      	ldr	r1, [pc, #8]	@ (8008d58 <config_motors+0x320>)
 8008d4e:	4613      	mov	r3, r2
 8008d50:	011b      	lsls	r3, r3, #4
 8008d52:	1a9b      	subs	r3, r3, r2
 8008d54:	011b      	lsls	r3, r3, #4
 8008d56:	e009      	b.n	8008d6c <config_motors+0x334>
 8008d58:	20001e48 	.word	0x20001e48
 8008d5c:	40c90fdb 	.word	0x40c90fdb
 8008d60:	c0c90fdb 	.word	0xc0c90fdb
 8008d64:	43eec2d1 	.word	0x43eec2d1
 8008d68:	41200000 	.word	0x41200000
 8008d6c:	440b      	add	r3, r1
 8008d6e:	333c      	adds	r3, #60	@ 0x3c
 8008d70:	f04f 0200 	mov.w	r2, #0
 8008d74:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008d76:	79ba      	ldrb	r2, [r7, #6]
 8008d78:	49c4      	ldr	r1, [pc, #784]	@ (800908c <config_motors+0x654>)
 8008d7a:	4613      	mov	r3, r2
 8008d7c:	011b      	lsls	r3, r3, #4
 8008d7e:	1a9b      	subs	r3, r3, r2
 8008d80:	011b      	lsls	r3, r3, #4
 8008d82:	440b      	add	r3, r1
 8008d84:	3340      	adds	r3, #64	@ 0x40
 8008d86:	f04f 0200 	mov.w	r2, #0
 8008d8a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008d8c:	79ba      	ldrb	r2, [r7, #6]
 8008d8e:	49bf      	ldr	r1, [pc, #764]	@ (800908c <config_motors+0x654>)
 8008d90:	4613      	mov	r3, r2
 8008d92:	011b      	lsls	r3, r3, #4
 8008d94:	1a9b      	subs	r3, r3, r2
 8008d96:	011b      	lsls	r3, r3, #4
 8008d98:	440b      	add	r3, r1
 8008d9a:	33d4      	adds	r3, #212	@ 0xd4
 8008d9c:	4abc      	ldr	r2, [pc, #752]	@ (8009090 <config_motors+0x658>)
 8008d9e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008da0:	79ba      	ldrb	r2, [r7, #6]
 8008da2:	49ba      	ldr	r1, [pc, #744]	@ (800908c <config_motors+0x654>)
 8008da4:	4613      	mov	r3, r2
 8008da6:	011b      	lsls	r3, r3, #4
 8008da8:	1a9b      	subs	r3, r3, r2
 8008daa:	011b      	lsls	r3, r3, #4
 8008dac:	440b      	add	r3, r1
 8008dae:	3350      	adds	r3, #80	@ 0x50
 8008db0:	f04f 0200 	mov.w	r2, #0
 8008db4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008db6:	79ba      	ldrb	r2, [r7, #6]
 8008db8:	49b4      	ldr	r1, [pc, #720]	@ (800908c <config_motors+0x654>)
 8008dba:	4613      	mov	r3, r2
 8008dbc:	011b      	lsls	r3, r3, #4
 8008dbe:	1a9b      	subs	r3, r3, r2
 8008dc0:	011b      	lsls	r3, r3, #4
 8008dc2:	440b      	add	r3, r1
 8008dc4:	3354      	adds	r3, #84	@ 0x54
 8008dc6:	f04f 0200 	mov.w	r2, #0
 8008dca:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8008dcc:	79ba      	ldrb	r2, [r7, #6]
 8008dce:	49af      	ldr	r1, [pc, #700]	@ (800908c <config_motors+0x654>)
 8008dd0:	4613      	mov	r3, r2
 8008dd2:	011b      	lsls	r3, r3, #4
 8008dd4:	1a9b      	subs	r3, r3, r2
 8008dd6:	011b      	lsls	r3, r3, #4
 8008dd8:	440b      	add	r3, r1
 8008dda:	3330      	adds	r3, #48	@ 0x30
 8008ddc:	4aad      	ldr	r2, [pc, #692]	@ (8009094 <config_motors+0x65c>)
 8008dde:	601a      	str	r2, [r3, #0]
#endif

#ifdef FL_MOTOR_ID
	motor_id = FL_MOTOR_ID - 1;
 8008de0:	2305      	movs	r3, #5
 8008de2:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008de4:	79ba      	ldrb	r2, [r7, #6]
 8008de6:	49a9      	ldr	r1, [pc, #676]	@ (800908c <config_motors+0x654>)
 8008de8:	4613      	mov	r3, r2
 8008dea:	011b      	lsls	r3, r3, #4
 8008dec:	1a9b      	subs	r3, r3, r2
 8008dee:	011b      	lsls	r3, r3, #4
 8008df0:	440b      	add	r3, r1
 8008df2:	3302      	adds	r3, #2
 8008df4:	2201      	movs	r2, #1
 8008df6:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008df8:	79ba      	ldrb	r2, [r7, #6]
 8008dfa:	4613      	mov	r3, r2
 8008dfc:	011b      	lsls	r3, r3, #4
 8008dfe:	1a9b      	subs	r3, r3, r2
 8008e00:	011b      	lsls	r3, r3, #4
 8008e02:	4aa2      	ldr	r2, [pc, #648]	@ (800908c <config_motors+0x654>)
 8008e04:	4413      	add	r3, r2
 8008e06:	4618      	mov	r0, r3
 8008e08:	f7ff fcce 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008e0c:	79ba      	ldrb	r2, [r7, #6]
 8008e0e:	499f      	ldr	r1, [pc, #636]	@ (800908c <config_motors+0x654>)
 8008e10:	4613      	mov	r3, r2
 8008e12:	011b      	lsls	r3, r3, #4
 8008e14:	1a9b      	subs	r3, r3, r2
 8008e16:	011b      	lsls	r3, r3, #4
 8008e18:	440b      	add	r3, r1
 8008e1a:	339c      	adds	r3, #156	@ 0x9c
 8008e1c:	2200      	movs	r2, #0
 8008e1e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008e20:	79ba      	ldrb	r2, [r7, #6]
 8008e22:	499a      	ldr	r1, [pc, #616]	@ (800908c <config_motors+0x654>)
 8008e24:	4613      	mov	r3, r2
 8008e26:	011b      	lsls	r3, r3, #4
 8008e28:	1a9b      	subs	r3, r3, r2
 8008e2a:	011b      	lsls	r3, r3, #4
 8008e2c:	440b      	add	r3, r1
 8008e2e:	33c4      	adds	r3, #196	@ 0xc4
 8008e30:	4a99      	ldr	r2, [pc, #612]	@ (8009098 <config_motors+0x660>)
 8008e32:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008e34:	79ba      	ldrb	r2, [r7, #6]
 8008e36:	4995      	ldr	r1, [pc, #596]	@ (800908c <config_motors+0x654>)
 8008e38:	4613      	mov	r3, r2
 8008e3a:	011b      	lsls	r3, r3, #4
 8008e3c:	1a9b      	subs	r3, r3, r2
 8008e3e:	011b      	lsls	r3, r3, #4
 8008e40:	440b      	add	r3, r1
 8008e42:	33c0      	adds	r3, #192	@ 0xc0
 8008e44:	4a95      	ldr	r2, [pc, #596]	@ (800909c <config_motors+0x664>)
 8008e46:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008e48:	79ba      	ldrb	r2, [r7, #6]
 8008e4a:	4990      	ldr	r1, [pc, #576]	@ (800908c <config_motors+0x654>)
 8008e4c:	4613      	mov	r3, r2
 8008e4e:	011b      	lsls	r3, r3, #4
 8008e50:	1a9b      	subs	r3, r3, r2
 8008e52:	011b      	lsls	r3, r3, #4
 8008e54:	440b      	add	r3, r1
 8008e56:	33d4      	adds	r3, #212	@ 0xd4
 8008e58:	4a8d      	ldr	r2, [pc, #564]	@ (8009090 <config_motors+0x658>)
 8008e5a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008e5c:	79ba      	ldrb	r2, [r7, #6]
 8008e5e:	498b      	ldr	r1, [pc, #556]	@ (800908c <config_motors+0x654>)
 8008e60:	4613      	mov	r3, r2
 8008e62:	011b      	lsls	r3, r3, #4
 8008e64:	1a9b      	subs	r3, r3, r2
 8008e66:	011b      	lsls	r3, r3, #4
 8008e68:	440b      	add	r3, r1
 8008e6a:	3338      	adds	r3, #56	@ 0x38
 8008e6c:	f04f 0200 	mov.w	r2, #0
 8008e70:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008e72:	79ba      	ldrb	r2, [r7, #6]
 8008e74:	4985      	ldr	r1, [pc, #532]	@ (800908c <config_motors+0x654>)
 8008e76:	4613      	mov	r3, r2
 8008e78:	011b      	lsls	r3, r3, #4
 8008e7a:	1a9b      	subs	r3, r3, r2
 8008e7c:	011b      	lsls	r3, r3, #4
 8008e7e:	440b      	add	r3, r1
 8008e80:	333c      	adds	r3, #60	@ 0x3c
 8008e82:	f04f 0200 	mov.w	r2, #0
 8008e86:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008e88:	79ba      	ldrb	r2, [r7, #6]
 8008e8a:	4980      	ldr	r1, [pc, #512]	@ (800908c <config_motors+0x654>)
 8008e8c:	4613      	mov	r3, r2
 8008e8e:	011b      	lsls	r3, r3, #4
 8008e90:	1a9b      	subs	r3, r3, r2
 8008e92:	011b      	lsls	r3, r3, #4
 8008e94:	440b      	add	r3, r1
 8008e96:	3340      	adds	r3, #64	@ 0x40
 8008e98:	f04f 0200 	mov.w	r2, #0
 8008e9c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008e9e:	79ba      	ldrb	r2, [r7, #6]
 8008ea0:	497a      	ldr	r1, [pc, #488]	@ (800908c <config_motors+0x654>)
 8008ea2:	4613      	mov	r3, r2
 8008ea4:	011b      	lsls	r3, r3, #4
 8008ea6:	1a9b      	subs	r3, r3, r2
 8008ea8:	011b      	lsls	r3, r3, #4
 8008eaa:	440b      	add	r3, r1
 8008eac:	3350      	adds	r3, #80	@ 0x50
 8008eae:	f04f 0200 	mov.w	r2, #0
 8008eb2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008eb4:	79ba      	ldrb	r2, [r7, #6]
 8008eb6:	4975      	ldr	r1, [pc, #468]	@ (800908c <config_motors+0x654>)
 8008eb8:	4613      	mov	r3, r2
 8008eba:	011b      	lsls	r3, r3, #4
 8008ebc:	1a9b      	subs	r3, r3, r2
 8008ebe:	011b      	lsls	r3, r3, #4
 8008ec0:	440b      	add	r3, r1
 8008ec2:	3354      	adds	r3, #84	@ 0x54
 8008ec4:	f04f 0200 	mov.w	r2, #0
 8008ec8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8008eca:	79ba      	ldrb	r2, [r7, #6]
 8008ecc:	496f      	ldr	r1, [pc, #444]	@ (800908c <config_motors+0x654>)
 8008ece:	4613      	mov	r3, r2
 8008ed0:	011b      	lsls	r3, r3, #4
 8008ed2:	1a9b      	subs	r3, r3, r2
 8008ed4:	011b      	lsls	r3, r3, #4
 8008ed6:	440b      	add	r3, r1
 8008ed8:	3330      	adds	r3, #48	@ 0x30
 8008eda:	4a6e      	ldr	r2, [pc, #440]	@ (8009094 <config_motors+0x65c>)
 8008edc:	601a      	str	r2, [r3, #0]
#endif

#ifdef BL_MOTOR_ID
	motor_id = BL_MOTOR_ID - 1;
 8008ede:	2306      	movs	r3, #6
 8008ee0:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008ee2:	79ba      	ldrb	r2, [r7, #6]
 8008ee4:	4969      	ldr	r1, [pc, #420]	@ (800908c <config_motors+0x654>)
 8008ee6:	4613      	mov	r3, r2
 8008ee8:	011b      	lsls	r3, r3, #4
 8008eea:	1a9b      	subs	r3, r3, r2
 8008eec:	011b      	lsls	r3, r3, #4
 8008eee:	440b      	add	r3, r1
 8008ef0:	3302      	adds	r3, #2
 8008ef2:	2201      	movs	r2, #1
 8008ef4:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008ef6:	79ba      	ldrb	r2, [r7, #6]
 8008ef8:	4613      	mov	r3, r2
 8008efa:	011b      	lsls	r3, r3, #4
 8008efc:	1a9b      	subs	r3, r3, r2
 8008efe:	011b      	lsls	r3, r3, #4
 8008f00:	4a62      	ldr	r2, [pc, #392]	@ (800908c <config_motors+0x654>)
 8008f02:	4413      	add	r3, r2
 8008f04:	4618      	mov	r0, r3
 8008f06:	f7ff fc4f 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008f0a:	79ba      	ldrb	r2, [r7, #6]
 8008f0c:	495f      	ldr	r1, [pc, #380]	@ (800908c <config_motors+0x654>)
 8008f0e:	4613      	mov	r3, r2
 8008f10:	011b      	lsls	r3, r3, #4
 8008f12:	1a9b      	subs	r3, r3, r2
 8008f14:	011b      	lsls	r3, r3, #4
 8008f16:	440b      	add	r3, r1
 8008f18:	339c      	adds	r3, #156	@ 0x9c
 8008f1a:	2200      	movs	r2, #0
 8008f1c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 0;
 8008f1e:	79ba      	ldrb	r2, [r7, #6]
 8008f20:	495a      	ldr	r1, [pc, #360]	@ (800908c <config_motors+0x654>)
 8008f22:	4613      	mov	r3, r2
 8008f24:	011b      	lsls	r3, r3, #4
 8008f26:	1a9b      	subs	r3, r3, r2
 8008f28:	011b      	lsls	r3, r3, #4
 8008f2a:	440b      	add	r3, r1
 8008f2c:	33b8      	adds	r3, #184	@ 0xb8
 8008f2e:	f04f 0200 	mov.w	r2, #0
 8008f32:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = 0;
 8008f34:	79ba      	ldrb	r2, [r7, #6]
 8008f36:	4955      	ldr	r1, [pc, #340]	@ (800908c <config_motors+0x654>)
 8008f38:	4613      	mov	r3, r2
 8008f3a:	011b      	lsls	r3, r3, #4
 8008f3c:	1a9b      	subs	r3, r3, r2
 8008f3e:	011b      	lsls	r3, r3, #4
 8008f40:	440b      	add	r3, r1
 8008f42:	33b4      	adds	r3, #180	@ 0xb4
 8008f44:	f04f 0200 	mov.w	r2, #0
 8008f48:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008f4a:	79ba      	ldrb	r2, [r7, #6]
 8008f4c:	494f      	ldr	r1, [pc, #316]	@ (800908c <config_motors+0x654>)
 8008f4e:	4613      	mov	r3, r2
 8008f50:	011b      	lsls	r3, r3, #4
 8008f52:	1a9b      	subs	r3, r3, r2
 8008f54:	011b      	lsls	r3, r3, #4
 8008f56:	440b      	add	r3, r1
 8008f58:	33c4      	adds	r3, #196	@ 0xc4
 8008f5a:	4a4f      	ldr	r2, [pc, #316]	@ (8009098 <config_motors+0x660>)
 8008f5c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008f5e:	79ba      	ldrb	r2, [r7, #6]
 8008f60:	494a      	ldr	r1, [pc, #296]	@ (800908c <config_motors+0x654>)
 8008f62:	4613      	mov	r3, r2
 8008f64:	011b      	lsls	r3, r3, #4
 8008f66:	1a9b      	subs	r3, r3, r2
 8008f68:	011b      	lsls	r3, r3, #4
 8008f6a:	440b      	add	r3, r1
 8008f6c:	33c0      	adds	r3, #192	@ 0xc0
 8008f6e:	4a4b      	ldr	r2, [pc, #300]	@ (800909c <config_motors+0x664>)
 8008f70:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008f72:	79ba      	ldrb	r2, [r7, #6]
 8008f74:	4945      	ldr	r1, [pc, #276]	@ (800908c <config_motors+0x654>)
 8008f76:	4613      	mov	r3, r2
 8008f78:	011b      	lsls	r3, r3, #4
 8008f7a:	1a9b      	subs	r3, r3, r2
 8008f7c:	011b      	lsls	r3, r3, #4
 8008f7e:	440b      	add	r3, r1
 8008f80:	33d4      	adds	r3, #212	@ 0xd4
 8008f82:	4a43      	ldr	r2, [pc, #268]	@ (8009090 <config_motors+0x658>)
 8008f84:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 8008f86:	79ba      	ldrb	r2, [r7, #6]
 8008f88:	4940      	ldr	r1, [pc, #256]	@ (800908c <config_motors+0x654>)
 8008f8a:	4613      	mov	r3, r2
 8008f8c:	011b      	lsls	r3, r3, #4
 8008f8e:	1a9b      	subs	r3, r3, r2
 8008f90:	011b      	lsls	r3, r3, #4
 8008f92:	440b      	add	r3, r1
 8008f94:	3368      	adds	r3, #104	@ 0x68
 8008f96:	f04f 0200 	mov.w	r2, #0
 8008f9a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 8008f9c:	79ba      	ldrb	r2, [r7, #6]
 8008f9e:	493b      	ldr	r1, [pc, #236]	@ (800908c <config_motors+0x654>)
 8008fa0:	4613      	mov	r3, r2
 8008fa2:	011b      	lsls	r3, r3, #4
 8008fa4:	1a9b      	subs	r3, r3, r2
 8008fa6:	011b      	lsls	r3, r3, #4
 8008fa8:	440b      	add	r3, r1
 8008faa:	336c      	adds	r3, #108	@ 0x6c
 8008fac:	f04f 0200 	mov.w	r2, #0
 8008fb0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 8008fb2:	79ba      	ldrb	r2, [r7, #6]
 8008fb4:	4935      	ldr	r1, [pc, #212]	@ (800908c <config_motors+0x654>)
 8008fb6:	4613      	mov	r3, r2
 8008fb8:	011b      	lsls	r3, r3, #4
 8008fba:	1a9b      	subs	r3, r3, r2
 8008fbc:	011b      	lsls	r3, r3, #4
 8008fbe:	440b      	add	r3, r1
 8008fc0:	3370      	adds	r3, #112	@ 0x70
 8008fc2:	f04f 0200 	mov.w	r2, #0
 8008fc6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 8008fc8:	79ba      	ldrb	r2, [r7, #6]
 8008fca:	4930      	ldr	r1, [pc, #192]	@ (800908c <config_motors+0x654>)
 8008fcc:	4613      	mov	r3, r2
 8008fce:	011b      	lsls	r3, r3, #4
 8008fd0:	1a9b      	subs	r3, r3, r2
 8008fd2:	011b      	lsls	r3, r3, #4
 8008fd4:	440b      	add	r3, r1
 8008fd6:	3380      	adds	r3, #128	@ 0x80
 8008fd8:	f04f 0200 	mov.w	r2, #0
 8008fdc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 8008fde:	79ba      	ldrb	r2, [r7, #6]
 8008fe0:	492a      	ldr	r1, [pc, #168]	@ (800908c <config_motors+0x654>)
 8008fe2:	4613      	mov	r3, r2
 8008fe4:	011b      	lsls	r3, r3, #4
 8008fe6:	1a9b      	subs	r3, r3, r2
 8008fe8:	011b      	lsls	r3, r3, #4
 8008fea:	440b      	add	r3, r1
 8008fec:	3384      	adds	r3, #132	@ 0x84
 8008fee:	f04f 0200 	mov.w	r2, #0
 8008ff2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008ff4:	79ba      	ldrb	r2, [r7, #6]
 8008ff6:	4925      	ldr	r1, [pc, #148]	@ (800908c <config_motors+0x654>)
 8008ff8:	4613      	mov	r3, r2
 8008ffa:	011b      	lsls	r3, r3, #4
 8008ffc:	1a9b      	subs	r3, r3, r2
 8008ffe:	011b      	lsls	r3, r3, #4
 8009000:	440b      	add	r3, r1
 8009002:	3338      	adds	r3, #56	@ 0x38
 8009004:	f04f 0200 	mov.w	r2, #0
 8009008:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800900a:	79ba      	ldrb	r2, [r7, #6]
 800900c:	491f      	ldr	r1, [pc, #124]	@ (800908c <config_motors+0x654>)
 800900e:	4613      	mov	r3, r2
 8009010:	011b      	lsls	r3, r3, #4
 8009012:	1a9b      	subs	r3, r3, r2
 8009014:	011b      	lsls	r3, r3, #4
 8009016:	440b      	add	r3, r1
 8009018:	333c      	adds	r3, #60	@ 0x3c
 800901a:	f04f 0200 	mov.w	r2, #0
 800901e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8009020:	79ba      	ldrb	r2, [r7, #6]
 8009022:	491a      	ldr	r1, [pc, #104]	@ (800908c <config_motors+0x654>)
 8009024:	4613      	mov	r3, r2
 8009026:	011b      	lsls	r3, r3, #4
 8009028:	1a9b      	subs	r3, r3, r2
 800902a:	011b      	lsls	r3, r3, #4
 800902c:	440b      	add	r3, r1
 800902e:	3340      	adds	r3, #64	@ 0x40
 8009030:	f04f 0200 	mov.w	r2, #0
 8009034:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8009036:	79ba      	ldrb	r2, [r7, #6]
 8009038:	4914      	ldr	r1, [pc, #80]	@ (800908c <config_motors+0x654>)
 800903a:	4613      	mov	r3, r2
 800903c:	011b      	lsls	r3, r3, #4
 800903e:	1a9b      	subs	r3, r3, r2
 8009040:	011b      	lsls	r3, r3, #4
 8009042:	440b      	add	r3, r1
 8009044:	3350      	adds	r3, #80	@ 0x50
 8009046:	f04f 0200 	mov.w	r2, #0
 800904a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800904c:	79ba      	ldrb	r2, [r7, #6]
 800904e:	490f      	ldr	r1, [pc, #60]	@ (800908c <config_motors+0x654>)
 8009050:	4613      	mov	r3, r2
 8009052:	011b      	lsls	r3, r3, #4
 8009054:	1a9b      	subs	r3, r3, r2
 8009056:	011b      	lsls	r3, r3, #4
 8009058:	440b      	add	r3, r1
 800905a:	3354      	adds	r3, #84	@ 0x54
 800905c:	f04f 0200 	mov.w	r2, #0
 8009060:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8009062:	79ba      	ldrb	r2, [r7, #6]
 8009064:	4909      	ldr	r1, [pc, #36]	@ (800908c <config_motors+0x654>)
 8009066:	4613      	mov	r3, r2
 8009068:	011b      	lsls	r3, r3, #4
 800906a:	1a9b      	subs	r3, r3, r2
 800906c:	011b      	lsls	r3, r3, #4
 800906e:	440b      	add	r3, r1
 8009070:	3330      	adds	r3, #48	@ 0x30
 8009072:	4a08      	ldr	r2, [pc, #32]	@ (8009094 <config_motors+0x65c>)
 8009074:	601a      	str	r2, [r3, #0]
#endif

#ifdef BR_MOTOR_ID

	motor_id = BR_MOTOR_ID - 1;
 8009076:	2307      	movs	r3, #7
 8009078:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800907a:	79ba      	ldrb	r2, [r7, #6]
 800907c:	4903      	ldr	r1, [pc, #12]	@ (800908c <config_motors+0x654>)
 800907e:	4613      	mov	r3, r2
 8009080:	011b      	lsls	r3, r3, #4
 8009082:	1a9b      	subs	r3, r3, r2
 8009084:	011b      	lsls	r3, r3, #4
 8009086:	440b      	add	r3, r1
 8009088:	3302      	adds	r3, #2
 800908a:	e009      	b.n	80090a0 <config_motors+0x668>
 800908c:	20001e48 	.word	0x20001e48
 8009090:	43eec2d1 	.word	0x43eec2d1
 8009094:	447a0000 	.word	0x447a0000
 8009098:	40c90fdb 	.word	0x40c90fdb
 800909c:	c0c90fdb 	.word	0xc0c90fdb
 80090a0:	2201      	movs	r2, #1
 80090a2:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 80090a4:	79ba      	ldrb	r2, [r7, #6]
 80090a6:	4613      	mov	r3, r2
 80090a8:	011b      	lsls	r3, r3, #4
 80090aa:	1a9b      	subs	r3, r3, r2
 80090ac:	011b      	lsls	r3, r3, #4
 80090ae:	4ac3      	ldr	r2, [pc, #780]	@ (80093bc <config_motors+0x984>)
 80090b0:	4413      	add	r3, r2
 80090b2:	4618      	mov	r0, r3
 80090b4:	f7ff fb78 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 80090b8:	79ba      	ldrb	r2, [r7, #6]
 80090ba:	49c0      	ldr	r1, [pc, #768]	@ (80093bc <config_motors+0x984>)
 80090bc:	4613      	mov	r3, r2
 80090be:	011b      	lsls	r3, r3, #4
 80090c0:	1a9b      	subs	r3, r3, r2
 80090c2:	011b      	lsls	r3, r3, #4
 80090c4:	440b      	add	r3, r1
 80090c6:	339c      	adds	r3, #156	@ 0x9c
 80090c8:	2200      	movs	r2, #0
 80090ca:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 0;
 80090cc:	79ba      	ldrb	r2, [r7, #6]
 80090ce:	49bb      	ldr	r1, [pc, #748]	@ (80093bc <config_motors+0x984>)
 80090d0:	4613      	mov	r3, r2
 80090d2:	011b      	lsls	r3, r3, #4
 80090d4:	1a9b      	subs	r3, r3, r2
 80090d6:	011b      	lsls	r3, r3, #4
 80090d8:	440b      	add	r3, r1
 80090da:	33b8      	adds	r3, #184	@ 0xb8
 80090dc:	f04f 0200 	mov.w	r2, #0
 80090e0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = 0;
 80090e2:	79ba      	ldrb	r2, [r7, #6]
 80090e4:	49b5      	ldr	r1, [pc, #724]	@ (80093bc <config_motors+0x984>)
 80090e6:	4613      	mov	r3, r2
 80090e8:	011b      	lsls	r3, r3, #4
 80090ea:	1a9b      	subs	r3, r3, r2
 80090ec:	011b      	lsls	r3, r3, #4
 80090ee:	440b      	add	r3, r1
 80090f0:	33b4      	adds	r3, #180	@ 0xb4
 80090f2:	f04f 0200 	mov.w	r2, #0
 80090f6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 80090f8:	79ba      	ldrb	r2, [r7, #6]
 80090fa:	49b0      	ldr	r1, [pc, #704]	@ (80093bc <config_motors+0x984>)
 80090fc:	4613      	mov	r3, r2
 80090fe:	011b      	lsls	r3, r3, #4
 8009100:	1a9b      	subs	r3, r3, r2
 8009102:	011b      	lsls	r3, r3, #4
 8009104:	440b      	add	r3, r1
 8009106:	33c4      	adds	r3, #196	@ 0xc4
 8009108:	4aad      	ldr	r2, [pc, #692]	@ (80093c0 <config_motors+0x988>)
 800910a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800910c:	79ba      	ldrb	r2, [r7, #6]
 800910e:	49ab      	ldr	r1, [pc, #684]	@ (80093bc <config_motors+0x984>)
 8009110:	4613      	mov	r3, r2
 8009112:	011b      	lsls	r3, r3, #4
 8009114:	1a9b      	subs	r3, r3, r2
 8009116:	011b      	lsls	r3, r3, #4
 8009118:	440b      	add	r3, r1
 800911a:	33c0      	adds	r3, #192	@ 0xc0
 800911c:	4aa9      	ldr	r2, [pc, #676]	@ (80093c4 <config_motors+0x98c>)
 800911e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8009120:	79ba      	ldrb	r2, [r7, #6]
 8009122:	49a6      	ldr	r1, [pc, #664]	@ (80093bc <config_motors+0x984>)
 8009124:	4613      	mov	r3, r2
 8009126:	011b      	lsls	r3, r3, #4
 8009128:	1a9b      	subs	r3, r3, r2
 800912a:	011b      	lsls	r3, r3, #4
 800912c:	440b      	add	r3, r1
 800912e:	33d4      	adds	r3, #212	@ 0xd4
 8009130:	4aa5      	ldr	r2, [pc, #660]	@ (80093c8 <config_motors+0x990>)
 8009132:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 8009134:	79ba      	ldrb	r2, [r7, #6]
 8009136:	49a1      	ldr	r1, [pc, #644]	@ (80093bc <config_motors+0x984>)
 8009138:	4613      	mov	r3, r2
 800913a:	011b      	lsls	r3, r3, #4
 800913c:	1a9b      	subs	r3, r3, r2
 800913e:	011b      	lsls	r3, r3, #4
 8009140:	440b      	add	r3, r1
 8009142:	3368      	adds	r3, #104	@ 0x68
 8009144:	f04f 0200 	mov.w	r2, #0
 8009148:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 800914a:	79ba      	ldrb	r2, [r7, #6]
 800914c:	499b      	ldr	r1, [pc, #620]	@ (80093bc <config_motors+0x984>)
 800914e:	4613      	mov	r3, r2
 8009150:	011b      	lsls	r3, r3, #4
 8009152:	1a9b      	subs	r3, r3, r2
 8009154:	011b      	lsls	r3, r3, #4
 8009156:	440b      	add	r3, r1
 8009158:	336c      	adds	r3, #108	@ 0x6c
 800915a:	f04f 0200 	mov.w	r2, #0
 800915e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 8009160:	79ba      	ldrb	r2, [r7, #6]
 8009162:	4996      	ldr	r1, [pc, #600]	@ (80093bc <config_motors+0x984>)
 8009164:	4613      	mov	r3, r2
 8009166:	011b      	lsls	r3, r3, #4
 8009168:	1a9b      	subs	r3, r3, r2
 800916a:	011b      	lsls	r3, r3, #4
 800916c:	440b      	add	r3, r1
 800916e:	3370      	adds	r3, #112	@ 0x70
 8009170:	f04f 0200 	mov.w	r2, #0
 8009174:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 8009176:	79ba      	ldrb	r2, [r7, #6]
 8009178:	4990      	ldr	r1, [pc, #576]	@ (80093bc <config_motors+0x984>)
 800917a:	4613      	mov	r3, r2
 800917c:	011b      	lsls	r3, r3, #4
 800917e:	1a9b      	subs	r3, r3, r2
 8009180:	011b      	lsls	r3, r3, #4
 8009182:	440b      	add	r3, r1
 8009184:	3380      	adds	r3, #128	@ 0x80
 8009186:	f04f 0200 	mov.w	r2, #0
 800918a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 800918c:	79ba      	ldrb	r2, [r7, #6]
 800918e:	498b      	ldr	r1, [pc, #556]	@ (80093bc <config_motors+0x984>)
 8009190:	4613      	mov	r3, r2
 8009192:	011b      	lsls	r3, r3, #4
 8009194:	1a9b      	subs	r3, r3, r2
 8009196:	011b      	lsls	r3, r3, #4
 8009198:	440b      	add	r3, r1
 800919a:	3384      	adds	r3, #132	@ 0x84
 800919c:	f04f 0200 	mov.w	r2, #0
 80091a0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 80091a2:	79ba      	ldrb	r2, [r7, #6]
 80091a4:	4985      	ldr	r1, [pc, #532]	@ (80093bc <config_motors+0x984>)
 80091a6:	4613      	mov	r3, r2
 80091a8:	011b      	lsls	r3, r3, #4
 80091aa:	1a9b      	subs	r3, r3, r2
 80091ac:	011b      	lsls	r3, r3, #4
 80091ae:	440b      	add	r3, r1
 80091b0:	3338      	adds	r3, #56	@ 0x38
 80091b2:	f04f 0200 	mov.w	r2, #0
 80091b6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 80091b8:	79ba      	ldrb	r2, [r7, #6]
 80091ba:	4980      	ldr	r1, [pc, #512]	@ (80093bc <config_motors+0x984>)
 80091bc:	4613      	mov	r3, r2
 80091be:	011b      	lsls	r3, r3, #4
 80091c0:	1a9b      	subs	r3, r3, r2
 80091c2:	011b      	lsls	r3, r3, #4
 80091c4:	440b      	add	r3, r1
 80091c6:	333c      	adds	r3, #60	@ 0x3c
 80091c8:	f04f 0200 	mov.w	r2, #0
 80091cc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 80091ce:	79ba      	ldrb	r2, [r7, #6]
 80091d0:	497a      	ldr	r1, [pc, #488]	@ (80093bc <config_motors+0x984>)
 80091d2:	4613      	mov	r3, r2
 80091d4:	011b      	lsls	r3, r3, #4
 80091d6:	1a9b      	subs	r3, r3, r2
 80091d8:	011b      	lsls	r3, r3, #4
 80091da:	440b      	add	r3, r1
 80091dc:	3340      	adds	r3, #64	@ 0x40
 80091de:	f04f 0200 	mov.w	r2, #0
 80091e2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 80091e4:	79ba      	ldrb	r2, [r7, #6]
 80091e6:	4975      	ldr	r1, [pc, #468]	@ (80093bc <config_motors+0x984>)
 80091e8:	4613      	mov	r3, r2
 80091ea:	011b      	lsls	r3, r3, #4
 80091ec:	1a9b      	subs	r3, r3, r2
 80091ee:	011b      	lsls	r3, r3, #4
 80091f0:	440b      	add	r3, r1
 80091f2:	3350      	adds	r3, #80	@ 0x50
 80091f4:	f04f 0200 	mov.w	r2, #0
 80091f8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 80091fa:	79ba      	ldrb	r2, [r7, #6]
 80091fc:	496f      	ldr	r1, [pc, #444]	@ (80093bc <config_motors+0x984>)
 80091fe:	4613      	mov	r3, r2
 8009200:	011b      	lsls	r3, r3, #4
 8009202:	1a9b      	subs	r3, r3, r2
 8009204:	011b      	lsls	r3, r3, #4
 8009206:	440b      	add	r3, r1
 8009208:	3354      	adds	r3, #84	@ 0x54
 800920a:	f04f 0200 	mov.w	r2, #0
 800920e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8009210:	79ba      	ldrb	r2, [r7, #6]
 8009212:	496a      	ldr	r1, [pc, #424]	@ (80093bc <config_motors+0x984>)
 8009214:	4613      	mov	r3, r2
 8009216:	011b      	lsls	r3, r3, #4
 8009218:	1a9b      	subs	r3, r3, r2
 800921a:	011b      	lsls	r3, r3, #4
 800921c:	440b      	add	r3, r1
 800921e:	3330      	adds	r3, #48	@ 0x30
 8009220:	4a6a      	ldr	r2, [pc, #424]	@ (80093cc <config_motors+0x994>)
 8009222:	601a      	str	r2, [r3, #0]
#endif

#ifdef LFRICTION_MOTOR_ID
	motor_id = LFRICTION_MOTOR_ID - 1;
 8009224:	230f      	movs	r3, #15
 8009226:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 8009228:	79ba      	ldrb	r2, [r7, #6]
 800922a:	4964      	ldr	r1, [pc, #400]	@ (80093bc <config_motors+0x984>)
 800922c:	4613      	mov	r3, r2
 800922e:	011b      	lsls	r3, r3, #4
 8009230:	1a9b      	subs	r3, r3, r2
 8009232:	011b      	lsls	r3, r3, #4
 8009234:	440b      	add	r3, r1
 8009236:	3302      	adds	r3, #2
 8009238:	2204      	movs	r2, #4
 800923a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800923c:	79ba      	ldrb	r2, [r7, #6]
 800923e:	4613      	mov	r3, r2
 8009240:	011b      	lsls	r3, r3, #4
 8009242:	1a9b      	subs	r3, r3, r2
 8009244:	011b      	lsls	r3, r3, #4
 8009246:	4a5d      	ldr	r2, [pc, #372]	@ (80093bc <config_motors+0x984>)
 8009248:	4413      	add	r3, r2
 800924a:	4618      	mov	r0, r3
 800924c:	f7ff faac 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 8009250:	79ba      	ldrb	r2, [r7, #6]
 8009252:	495a      	ldr	r1, [pc, #360]	@ (80093bc <config_motors+0x984>)
 8009254:	4613      	mov	r3, r2
 8009256:	011b      	lsls	r3, r3, #4
 8009258:	1a9b      	subs	r3, r3, r2
 800925a:	011b      	lsls	r3, r3, #4
 800925c:	440b      	add	r3, r1
 800925e:	33c8      	adds	r3, #200	@ 0xc8
 8009260:	4a5b      	ldr	r2, [pc, #364]	@ (80093d0 <config_motors+0x998>)
 8009262:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 8009264:	79ba      	ldrb	r2, [r7, #6]
 8009266:	4955      	ldr	r1, [pc, #340]	@ (80093bc <config_motors+0x984>)
 8009268:	4613      	mov	r3, r2
 800926a:	011b      	lsls	r3, r3, #4
 800926c:	1a9b      	subs	r3, r3, r2
 800926e:	011b      	lsls	r3, r3, #4
 8009270:	440b      	add	r3, r1
 8009272:	338c      	adds	r3, #140	@ 0x8c
 8009274:	4a57      	ldr	r2, [pc, #348]	@ (80093d4 <config_motors+0x99c>)
 8009276:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 8009278:	79ba      	ldrb	r2, [r7, #6]
 800927a:	4950      	ldr	r1, [pc, #320]	@ (80093bc <config_motors+0x984>)
 800927c:	4613      	mov	r3, r2
 800927e:	011b      	lsls	r3, r3, #4
 8009280:	1a9b      	subs	r3, r3, r2
 8009282:	011b      	lsls	r3, r3, #4
 8009284:	440b      	add	r3, r1
 8009286:	3338      	adds	r3, #56	@ 0x38
 8009288:	4a53      	ldr	r2, [pc, #332]	@ (80093d8 <config_motors+0x9a0>)
 800928a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800928c:	79ba      	ldrb	r2, [r7, #6]
 800928e:	494b      	ldr	r1, [pc, #300]	@ (80093bc <config_motors+0x984>)
 8009290:	4613      	mov	r3, r2
 8009292:	011b      	lsls	r3, r3, #4
 8009294:	1a9b      	subs	r3, r3, r2
 8009296:	011b      	lsls	r3, r3, #4
 8009298:	440b      	add	r3, r1
 800929a:	333c      	adds	r3, #60	@ 0x3c
 800929c:	4a4f      	ldr	r2, [pc, #316]	@ (80093dc <config_motors+0x9a4>)
 800929e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 80092a0:	79ba      	ldrb	r2, [r7, #6]
 80092a2:	4946      	ldr	r1, [pc, #280]	@ (80093bc <config_motors+0x984>)
 80092a4:	4613      	mov	r3, r2
 80092a6:	011b      	lsls	r3, r3, #4
 80092a8:	1a9b      	subs	r3, r3, r2
 80092aa:	011b      	lsls	r3, r3, #4
 80092ac:	440b      	add	r3, r1
 80092ae:	3340      	adds	r3, #64	@ 0x40
 80092b0:	f04f 0200 	mov.w	r2, #0
 80092b4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 80092b6:	79ba      	ldrb	r2, [r7, #6]
 80092b8:	4940      	ldr	r1, [pc, #256]	@ (80093bc <config_motors+0x984>)
 80092ba:	4613      	mov	r3, r2
 80092bc:	011b      	lsls	r3, r3, #4
 80092be:	1a9b      	subs	r3, r3, r2
 80092c0:	011b      	lsls	r3, r3, #4
 80092c2:	440b      	add	r3, r1
 80092c4:	3350      	adds	r3, #80	@ 0x50
 80092c6:	4a46      	ldr	r2, [pc, #280]	@ (80093e0 <config_motors+0x9a8>)
 80092c8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 80092ca:	79ba      	ldrb	r2, [r7, #6]
 80092cc:	493b      	ldr	r1, [pc, #236]	@ (80093bc <config_motors+0x984>)
 80092ce:	4613      	mov	r3, r2
 80092d0:	011b      	lsls	r3, r3, #4
 80092d2:	1a9b      	subs	r3, r3, r2
 80092d4:	011b      	lsls	r3, r3, #4
 80092d6:	440b      	add	r3, r1
 80092d8:	3354      	adds	r3, #84	@ 0x54
 80092da:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80092de:	601a      	str	r2, [r3, #0]
#endif

#ifdef RFRICTION_MOTOR_ID
	motor_id = RFRICTION_MOTOR_ID - 1;
 80092e0:	230e      	movs	r3, #14
 80092e2:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 80092e4:	79ba      	ldrb	r2, [r7, #6]
 80092e6:	4935      	ldr	r1, [pc, #212]	@ (80093bc <config_motors+0x984>)
 80092e8:	4613      	mov	r3, r2
 80092ea:	011b      	lsls	r3, r3, #4
 80092ec:	1a9b      	subs	r3, r3, r2
 80092ee:	011b      	lsls	r3, r3, #4
 80092f0:	440b      	add	r3, r1
 80092f2:	3302      	adds	r3, #2
 80092f4:	2204      	movs	r2, #4
 80092f6:	701a      	strb	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 80092f8:	79ba      	ldrb	r2, [r7, #6]
 80092fa:	4930      	ldr	r1, [pc, #192]	@ (80093bc <config_motors+0x984>)
 80092fc:	4613      	mov	r3, r2
 80092fe:	011b      	lsls	r3, r3, #4
 8009300:	1a9b      	subs	r3, r3, r2
 8009302:	011b      	lsls	r3, r3, #4
 8009304:	440b      	add	r3, r1
 8009306:	338c      	adds	r3, #140	@ 0x8c
 8009308:	4a32      	ldr	r2, [pc, #200]	@ (80093d4 <config_motors+0x99c>)
 800930a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800930c:	79ba      	ldrb	r2, [r7, #6]
 800930e:	492b      	ldr	r1, [pc, #172]	@ (80093bc <config_motors+0x984>)
 8009310:	4613      	mov	r3, r2
 8009312:	011b      	lsls	r3, r3, #4
 8009314:	1a9b      	subs	r3, r3, r2
 8009316:	011b      	lsls	r3, r3, #4
 8009318:	440b      	add	r3, r1
 800931a:	3338      	adds	r3, #56	@ 0x38
 800931c:	4a2e      	ldr	r2, [pc, #184]	@ (80093d8 <config_motors+0x9a0>)
 800931e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 8009320:	79ba      	ldrb	r2, [r7, #6]
 8009322:	4926      	ldr	r1, [pc, #152]	@ (80093bc <config_motors+0x984>)
 8009324:	4613      	mov	r3, r2
 8009326:	011b      	lsls	r3, r3, #4
 8009328:	1a9b      	subs	r3, r3, r2
 800932a:	011b      	lsls	r3, r3, #4
 800932c:	440b      	add	r3, r1
 800932e:	333c      	adds	r3, #60	@ 0x3c
 8009330:	4a2a      	ldr	r2, [pc, #168]	@ (80093dc <config_motors+0x9a4>)
 8009332:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 8009334:	79ba      	ldrb	r2, [r7, #6]
 8009336:	4921      	ldr	r1, [pc, #132]	@ (80093bc <config_motors+0x984>)
 8009338:	4613      	mov	r3, r2
 800933a:	011b      	lsls	r3, r3, #4
 800933c:	1a9b      	subs	r3, r3, r2
 800933e:	011b      	lsls	r3, r3, #4
 8009340:	440b      	add	r3, r1
 8009342:	3340      	adds	r3, #64	@ 0x40
 8009344:	f04f 0200 	mov.w	r2, #0
 8009348:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800934a:	79ba      	ldrb	r2, [r7, #6]
 800934c:	491b      	ldr	r1, [pc, #108]	@ (80093bc <config_motors+0x984>)
 800934e:	4613      	mov	r3, r2
 8009350:	011b      	lsls	r3, r3, #4
 8009352:	1a9b      	subs	r3, r3, r2
 8009354:	011b      	lsls	r3, r3, #4
 8009356:	440b      	add	r3, r1
 8009358:	3350      	adds	r3, #80	@ 0x50
 800935a:	4a21      	ldr	r2, [pc, #132]	@ (80093e0 <config_motors+0x9a8>)
 800935c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800935e:	79ba      	ldrb	r2, [r7, #6]
 8009360:	4916      	ldr	r1, [pc, #88]	@ (80093bc <config_motors+0x984>)
 8009362:	4613      	mov	r3, r2
 8009364:	011b      	lsls	r3, r3, #4
 8009366:	1a9b      	subs	r3, r3, r2
 8009368:	011b      	lsls	r3, r3, #4
 800936a:	440b      	add	r3, r1
 800936c:	3354      	adds	r3, #84	@ 0x54
 800936e:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8009372:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.physical_max = M3508_MAX_OUTPUT;
 8009374:	79ba      	ldrb	r2, [r7, #6]
 8009376:	4911      	ldr	r1, [pc, #68]	@ (80093bc <config_motors+0x984>)
 8009378:	4613      	mov	r3, r2
 800937a:	011b      	lsls	r3, r3, #4
 800937c:	1a9b      	subs	r3, r3, r2
 800937e:	011b      	lsls	r3, r3, #4
 8009380:	440b      	add	r3, r1
 8009382:	335c      	adds	r3, #92	@ 0x5c
 8009384:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8009388:	601a      	str	r2, [r3, #0]
#endif

#ifdef FEEDER_MOTOR_ID
	motor_id = FEEDER_MOTOR_ID - 1;
 800938a:	2310      	movs	r3, #16
 800938c:	71bb      	strb	r3, [r7, #6]
#ifdef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M3508_ANGLE;
#endif
#ifndef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M2006;
 800938e:	79ba      	ldrb	r2, [r7, #6]
 8009390:	490a      	ldr	r1, [pc, #40]	@ (80093bc <config_motors+0x984>)
 8009392:	4613      	mov	r3, r2
 8009394:	011b      	lsls	r3, r3, #4
 8009396:	1a9b      	subs	r3, r3, r2
 8009398:	011b      	lsls	r3, r3, #4
 800939a:	440b      	add	r3, r1
 800939c:	3302      	adds	r3, #2
 800939e:	2202      	movs	r2, #2
 80093a0:	701a      	strb	r2, [r3, #0]
#endif
	set_motor_config(&g_can_motors[motor_id]);
 80093a2:	79ba      	ldrb	r2, [r7, #6]
 80093a4:	4613      	mov	r3, r2
 80093a6:	011b      	lsls	r3, r3, #4
 80093a8:	1a9b      	subs	r3, r3, r2
 80093aa:	011b      	lsls	r3, r3, #4
 80093ac:	4a03      	ldr	r2, [pc, #12]	@ (80093bc <config_motors+0x984>)
 80093ae:	4413      	add	r3, r2
 80093b0:	4618      	mov	r0, r3
 80093b2:	f7ff f9f9 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.phy_max_ang = PI;
 80093b6:	79ba      	ldrb	r2, [r7, #6]
 80093b8:	e014      	b.n	80093e4 <config_motors+0x9ac>
 80093ba:	bf00      	nop
 80093bc:	20001e48 	.word	0x20001e48
 80093c0:	40c90fdb 	.word	0x40c90fdb
 80093c4:	c0c90fdb 	.word	0xc0c90fdb
 80093c8:	43eec2d1 	.word	0x43eec2d1
 80093cc:	447a0000 	.word	0x447a0000
 80093d0:	4199999a 	.word	0x4199999a
 80093d4:	460fc000 	.word	0x460fc000
 80093d8:	40a00000 	.word	0x40a00000
 80093dc:	3b03126f 	.word	0x3b03126f
 80093e0:	461c4000 	.word	0x461c4000
 80093e4:	49c0      	ldr	r1, [pc, #768]	@ (80096e8 <config_motors+0xcb0>)
 80093e6:	4613      	mov	r3, r2
 80093e8:	011b      	lsls	r3, r3, #4
 80093ea:	1a9b      	subs	r3, r3, r2
 80093ec:	011b      	lsls	r3, r3, #4
 80093ee:	440b      	add	r3, r1
 80093f0:	33c4      	adds	r3, #196	@ 0xc4
 80093f2:	4abe      	ldr	r2, [pc, #760]	@ (80096ec <config_motors+0xcb4>)
 80093f4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -PI;
 80093f6:	79ba      	ldrb	r2, [r7, #6]
 80093f8:	49bb      	ldr	r1, [pc, #748]	@ (80096e8 <config_motors+0xcb0>)
 80093fa:	4613      	mov	r3, r2
 80093fc:	011b      	lsls	r3, r3, #4
 80093fe:	1a9b      	subs	r3, r3, r2
 8009400:	011b      	lsls	r3, r3, #4
 8009402:	440b      	add	r3, r1
 8009404:	33c0      	adds	r3, #192	@ 0xc0
 8009406:	4aba      	ldr	r2, [pc, #744]	@ (80096f0 <config_motors+0xcb8>)
 8009408:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 800940a:	79ba      	ldrb	r2, [r7, #6]
 800940c:	49b6      	ldr	r1, [pc, #728]	@ (80096e8 <config_motors+0xcb0>)
 800940e:	4613      	mov	r3, r2
 8009410:	011b      	lsls	r3, r3, #4
 8009412:	1a9b      	subs	r3, r3, r2
 8009414:	011b      	lsls	r3, r3, #4
 8009416:	440b      	add	r3, r1
 8009418:	33d4      	adds	r3, #212	@ 0xd4
 800941a:	f04f 0200 	mov.w	r2, #0
 800941e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = FEEDER_ANGLE_KP;
 8009420:	79ba      	ldrb	r2, [r7, #6]
 8009422:	49b1      	ldr	r1, [pc, #708]	@ (80096e8 <config_motors+0xcb0>)
 8009424:	4613      	mov	r3, r2
 8009426:	011b      	lsls	r3, r3, #4
 8009428:	1a9b      	subs	r3, r3, r2
 800942a:	011b      	lsls	r3, r3, #4
 800942c:	440b      	add	r3, r1
 800942e:	3368      	adds	r3, #104	@ 0x68
 8009430:	4ab0      	ldr	r2, [pc, #704]	@ (80096f4 <config_motors+0xcbc>)
 8009432:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = FEEDER_ANGLE_KI;
 8009434:	79ba      	ldrb	r2, [r7, #6]
 8009436:	49ac      	ldr	r1, [pc, #688]	@ (80096e8 <config_motors+0xcb0>)
 8009438:	4613      	mov	r3, r2
 800943a:	011b      	lsls	r3, r3, #4
 800943c:	1a9b      	subs	r3, r3, r2
 800943e:	011b      	lsls	r3, r3, #4
 8009440:	440b      	add	r3, r1
 8009442:	336c      	adds	r3, #108	@ 0x6c
 8009444:	f04f 0200 	mov.w	r2, #0
 8009448:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = FEEDER_ANGLE_KD;
 800944a:	79ba      	ldrb	r2, [r7, #6]
 800944c:	49a6      	ldr	r1, [pc, #664]	@ (80096e8 <config_motors+0xcb0>)
 800944e:	4613      	mov	r3, r2
 8009450:	011b      	lsls	r3, r3, #4
 8009452:	1a9b      	subs	r3, r3, r2
 8009454:	011b      	lsls	r3, r3, #4
 8009456:	440b      	add	r3, r1
 8009458:	3370      	adds	r3, #112	@ 0x70
 800945a:	f04f 0200 	mov.w	r2, #0
 800945e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = FEEDER_ANGLE_INT_MAX;
 8009460:	79ba      	ldrb	r2, [r7, #6]
 8009462:	49a1      	ldr	r1, [pc, #644]	@ (80096e8 <config_motors+0xcb0>)
 8009464:	4613      	mov	r3, r2
 8009466:	011b      	lsls	r3, r3, #4
 8009468:	1a9b      	subs	r3, r3, r2
 800946a:	011b      	lsls	r3, r3, #4
 800946c:	440b      	add	r3, r1
 800946e:	3380      	adds	r3, #128	@ 0x80
 8009470:	f04f 0200 	mov.w	r2, #0
 8009474:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = FEEDER_MAX_RPM;
 8009476:	79ba      	ldrb	r2, [r7, #6]
 8009478:	499b      	ldr	r1, [pc, #620]	@ (80096e8 <config_motors+0xcb0>)
 800947a:	4613      	mov	r3, r2
 800947c:	011b      	lsls	r3, r3, #4
 800947e:	1a9b      	subs	r3, r3, r2
 8009480:	011b      	lsls	r3, r3, #4
 8009482:	440b      	add	r3, r1
 8009484:	3384      	adds	r3, #132	@ 0x84
 8009486:	4a9c      	ldr	r2, [pc, #624]	@ (80096f8 <config_motors+0xcc0>)
 8009488:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FEEDER_KP;
 800948a:	79ba      	ldrb	r2, [r7, #6]
 800948c:	4996      	ldr	r1, [pc, #600]	@ (80096e8 <config_motors+0xcb0>)
 800948e:	4613      	mov	r3, r2
 8009490:	011b      	lsls	r3, r3, #4
 8009492:	1a9b      	subs	r3, r3, r2
 8009494:	011b      	lsls	r3, r3, #4
 8009496:	440b      	add	r3, r1
 8009498:	3338      	adds	r3, #56	@ 0x38
 800949a:	4a98      	ldr	r2, [pc, #608]	@ (80096fc <config_motors+0xcc4>)
 800949c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FEEDER_KI;
 800949e:	79ba      	ldrb	r2, [r7, #6]
 80094a0:	4991      	ldr	r1, [pc, #580]	@ (80096e8 <config_motors+0xcb0>)
 80094a2:	4613      	mov	r3, r2
 80094a4:	011b      	lsls	r3, r3, #4
 80094a6:	1a9b      	subs	r3, r3, r2
 80094a8:	011b      	lsls	r3, r3, #4
 80094aa:	440b      	add	r3, r1
 80094ac:	333c      	adds	r3, #60	@ 0x3c
 80094ae:	4a94      	ldr	r2, [pc, #592]	@ (8009700 <config_motors+0xcc8>)
 80094b0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FEEDER_KD;
 80094b2:	79ba      	ldrb	r2, [r7, #6]
 80094b4:	498c      	ldr	r1, [pc, #560]	@ (80096e8 <config_motors+0xcb0>)
 80094b6:	4613      	mov	r3, r2
 80094b8:	011b      	lsls	r3, r3, #4
 80094ba:	1a9b      	subs	r3, r3, r2
 80094bc:	011b      	lsls	r3, r3, #4
 80094be:	440b      	add	r3, r1
 80094c0:	3340      	adds	r3, #64	@ 0x40
 80094c2:	4a90      	ldr	r2, [pc, #576]	@ (8009704 <config_motors+0xccc>)
 80094c4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FEEDER_MAX_INT;
 80094c6:	79ba      	ldrb	r2, [r7, #6]
 80094c8:	4987      	ldr	r1, [pc, #540]	@ (80096e8 <config_motors+0xcb0>)
 80094ca:	4613      	mov	r3, r2
 80094cc:	011b      	lsls	r3, r3, #4
 80094ce:	1a9b      	subs	r3, r3, r2
 80094d0:	011b      	lsls	r3, r3, #4
 80094d2:	440b      	add	r3, r1
 80094d4:	3350      	adds	r3, #80	@ 0x50
 80094d6:	4a8c      	ldr	r2, [pc, #560]	@ (8009708 <config_motors+0xcd0>)
 80094d8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FEEDER_MAX_CURRENT;
 80094da:	79ba      	ldrb	r2, [r7, #6]
 80094dc:	4982      	ldr	r1, [pc, #520]	@ (80096e8 <config_motors+0xcb0>)
 80094de:	4613      	mov	r3, r2
 80094e0:	011b      	lsls	r3, r3, #4
 80094e2:	1a9b      	subs	r3, r3, r2
 80094e4:	011b      	lsls	r3, r3, #4
 80094e6:	440b      	add	r3, r1
 80094e8:	3354      	adds	r3, #84	@ 0x54
 80094ea:	4a87      	ldr	r2, [pc, #540]	@ (8009708 <config_motors+0xcd0>)
 80094ec:	601a      	str	r2, [r3, #0]
#endif

#ifdef PITCH_MOTOR_ID
	motor_id = PITCH_MOTOR_ID - 1;
 80094ee:	2311      	movs	r3, #17
 80094f0:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 80094f2:	79ba      	ldrb	r2, [r7, #6]
 80094f4:	497c      	ldr	r1, [pc, #496]	@ (80096e8 <config_motors+0xcb0>)
 80094f6:	4613      	mov	r3, r2
 80094f8:	011b      	lsls	r3, r3, #4
 80094fa:	1a9b      	subs	r3, r3, r2
 80094fc:	011b      	lsls	r3, r3, #4
 80094fe:	440b      	add	r3, r1
 8009500:	3302      	adds	r3, #2
 8009502:	2201      	movs	r2, #1
 8009504:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8009506:	79ba      	ldrb	r2, [r7, #6]
 8009508:	4613      	mov	r3, r2
 800950a:	011b      	lsls	r3, r3, #4
 800950c:	1a9b      	subs	r3, r3, r2
 800950e:	011b      	lsls	r3, r3, #4
 8009510:	4a75      	ldr	r2, [pc, #468]	@ (80096e8 <config_motors+0xcb0>)
 8009512:	4413      	add	r3, r2
 8009514:	4618      	mov	r0, r3
 8009516:	f7ff f947 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = PITCH_CENTER;
 800951a:	79ba      	ldrb	r2, [r7, #6]
 800951c:	4972      	ldr	r1, [pc, #456]	@ (80096e8 <config_motors+0xcb0>)
 800951e:	4613      	mov	r3, r2
 8009520:	011b      	lsls	r3, r3, #4
 8009522:	1a9b      	subs	r3, r3, r2
 8009524:	011b      	lsls	r3, r3, #4
 8009526:	440b      	add	r3, r1
 8009528:	339c      	adds	r3, #156	@ 0x9c
 800952a:	f44f 628c 	mov.w	r2, #1120	@ 0x460
 800952e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = PITCH_MAX_ANG;
 8009530:	79ba      	ldrb	r2, [r7, #6]
 8009532:	496d      	ldr	r1, [pc, #436]	@ (80096e8 <config_motors+0xcb0>)
 8009534:	4613      	mov	r3, r2
 8009536:	011b      	lsls	r3, r3, #4
 8009538:	1a9b      	subs	r3, r3, r2
 800953a:	011b      	lsls	r3, r3, #4
 800953c:	440b      	add	r3, r1
 800953e:	33c4      	adds	r3, #196	@ 0xc4
 8009540:	4a72      	ldr	r2, [pc, #456]	@ (800970c <config_motors+0xcd4>)
 8009542:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = PITCH_MIN_ANG;
 8009544:	79ba      	ldrb	r2, [r7, #6]
 8009546:	4968      	ldr	r1, [pc, #416]	@ (80096e8 <config_motors+0xcb0>)
 8009548:	4613      	mov	r3, r2
 800954a:	011b      	lsls	r3, r3, #4
 800954c:	1a9b      	subs	r3, r3, r2
 800954e:	011b      	lsls	r3, r3, #4
 8009550:	440b      	add	r3, r1
 8009552:	33c0      	adds	r3, #192	@ 0xc0
 8009554:	4a6e      	ldr	r2, [pc, #440]	@ (8009710 <config_motors+0xcd8>)
 8009556:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 8009558:	79ba      	ldrb	r2, [r7, #6]
 800955a:	4963      	ldr	r1, [pc, #396]	@ (80096e8 <config_motors+0xcb0>)
 800955c:	4613      	mov	r3, r2
 800955e:	011b      	lsls	r3, r3, #4
 8009560:	1a9b      	subs	r3, r3, r2
 8009562:	011b      	lsls	r3, r3, #4
 8009564:	440b      	add	r3, r1
 8009566:	33d4      	adds	r3, #212	@ 0xd4
 8009568:	f04f 0200 	mov.w	r2, #0
 800956c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800956e:	79ba      	ldrb	r2, [r7, #6]
 8009570:	495d      	ldr	r1, [pc, #372]	@ (80096e8 <config_motors+0xcb0>)
 8009572:	4613      	mov	r3, r2
 8009574:	011b      	lsls	r3, r3, #4
 8009576:	1a9b      	subs	r3, r3, r2
 8009578:	011b      	lsls	r3, r3, #4
 800957a:	440b      	add	r3, r1
 800957c:	3368      	adds	r3, #104	@ 0x68
 800957e:	f04f 0200 	mov.w	r2, #0
 8009582:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 8009584:	79ba      	ldrb	r2, [r7, #6]
 8009586:	4958      	ldr	r1, [pc, #352]	@ (80096e8 <config_motors+0xcb0>)
 8009588:	4613      	mov	r3, r2
 800958a:	011b      	lsls	r3, r3, #4
 800958c:	1a9b      	subs	r3, r3, r2
 800958e:	011b      	lsls	r3, r3, #4
 8009590:	440b      	add	r3, r1
 8009592:	336c      	adds	r3, #108	@ 0x6c
 8009594:	f04f 0200 	mov.w	r2, #0
 8009598:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800959a:	79ba      	ldrb	r2, [r7, #6]
 800959c:	4952      	ldr	r1, [pc, #328]	@ (80096e8 <config_motors+0xcb0>)
 800959e:	4613      	mov	r3, r2
 80095a0:	011b      	lsls	r3, r3, #4
 80095a2:	1a9b      	subs	r3, r3, r2
 80095a4:	011b      	lsls	r3, r3, #4
 80095a6:	440b      	add	r3, r1
 80095a8:	3370      	adds	r3, #112	@ 0x70
 80095aa:	f04f 0200 	mov.w	r2, #0
 80095ae:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 80095b0:	79ba      	ldrb	r2, [r7, #6]
 80095b2:	494d      	ldr	r1, [pc, #308]	@ (80096e8 <config_motors+0xcb0>)
 80095b4:	4613      	mov	r3, r2
 80095b6:	011b      	lsls	r3, r3, #4
 80095b8:	1a9b      	subs	r3, r3, r2
 80095ba:	011b      	lsls	r3, r3, #4
 80095bc:	440b      	add	r3, r1
 80095be:	3380      	adds	r3, #128	@ 0x80
 80095c0:	4a54      	ldr	r2, [pc, #336]	@ (8009714 <config_motors+0xcdc>)
 80095c2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 80095c4:	79ba      	ldrb	r2, [r7, #6]
 80095c6:	4948      	ldr	r1, [pc, #288]	@ (80096e8 <config_motors+0xcb0>)
 80095c8:	4613      	mov	r3, r2
 80095ca:	011b      	lsls	r3, r3, #4
 80095cc:	1a9b      	subs	r3, r3, r2
 80095ce:	011b      	lsls	r3, r3, #4
 80095d0:	440b      	add	r3, r1
 80095d2:	3384      	adds	r3, #132	@ 0x84
 80095d4:	f04f 4282 	mov.w	r2, #1090519040	@ 0x41000000
 80095d8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 80095da:	79ba      	ldrb	r2, [r7, #6]
 80095dc:	4942      	ldr	r1, [pc, #264]	@ (80096e8 <config_motors+0xcb0>)
 80095de:	4613      	mov	r3, r2
 80095e0:	011b      	lsls	r3, r3, #4
 80095e2:	1a9b      	subs	r3, r3, r2
 80095e4:	011b      	lsls	r3, r3, #4
 80095e6:	440b      	add	r3, r1
 80095e8:	3338      	adds	r3, #56	@ 0x38
 80095ea:	4a4b      	ldr	r2, [pc, #300]	@ (8009718 <config_motors+0xce0>)
 80095ec:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 80095ee:	79ba      	ldrb	r2, [r7, #6]
 80095f0:	493d      	ldr	r1, [pc, #244]	@ (80096e8 <config_motors+0xcb0>)
 80095f2:	4613      	mov	r3, r2
 80095f4:	011b      	lsls	r3, r3, #4
 80095f6:	1a9b      	subs	r3, r3, r2
 80095f8:	011b      	lsls	r3, r3, #4
 80095fa:	440b      	add	r3, r1
 80095fc:	333c      	adds	r3, #60	@ 0x3c
 80095fe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8009602:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 8009604:	79ba      	ldrb	r2, [r7, #6]
 8009606:	4938      	ldr	r1, [pc, #224]	@ (80096e8 <config_motors+0xcb0>)
 8009608:	4613      	mov	r3, r2
 800960a:	011b      	lsls	r3, r3, #4
 800960c:	1a9b      	subs	r3, r3, r2
 800960e:	011b      	lsls	r3, r3, #4
 8009610:	440b      	add	r3, r1
 8009612:	3340      	adds	r3, #64	@ 0x40
 8009614:	f04f 0200 	mov.w	r2, #0
 8009618:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800961a:	79ba      	ldrb	r2, [r7, #6]
 800961c:	4932      	ldr	r1, [pc, #200]	@ (80096e8 <config_motors+0xcb0>)
 800961e:	4613      	mov	r3, r2
 8009620:	011b      	lsls	r3, r3, #4
 8009622:	1a9b      	subs	r3, r3, r2
 8009624:	011b      	lsls	r3, r3, #4
 8009626:	440b      	add	r3, r1
 8009628:	3350      	adds	r3, #80	@ 0x50
 800962a:	4a3c      	ldr	r2, [pc, #240]	@ (800971c <config_motors+0xce4>)
 800962c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800962e:	79ba      	ldrb	r2, [r7, #6]
 8009630:	492d      	ldr	r1, [pc, #180]	@ (80096e8 <config_motors+0xcb0>)
 8009632:	4613      	mov	r3, r2
 8009634:	011b      	lsls	r3, r3, #4
 8009636:	1a9b      	subs	r3, r3, r2
 8009638:	011b      	lsls	r3, r3, #4
 800963a:	440b      	add	r3, r1
 800963c:	3354      	adds	r3, #84	@ 0x54
 800963e:	4a38      	ldr	r2, [pc, #224]	@ (8009720 <config_motors+0xce8>)
 8009640:	601a      	str	r2, [r3, #0]
#endif

#ifdef YAW_MOTOR_ID
#ifndef YAW_M3508
	motor_id = YAW_MOTOR_ID - 1;
 8009642:	2313      	movs	r3, #19
 8009644:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8009646:	79ba      	ldrb	r2, [r7, #6]
 8009648:	4927      	ldr	r1, [pc, #156]	@ (80096e8 <config_motors+0xcb0>)
 800964a:	4613      	mov	r3, r2
 800964c:	011b      	lsls	r3, r3, #4
 800964e:	1a9b      	subs	r3, r3, r2
 8009650:	011b      	lsls	r3, r3, #4
 8009652:	440b      	add	r3, r1
 8009654:	3302      	adds	r3, #2
 8009656:	2201      	movs	r2, #1
 8009658:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800965a:	79ba      	ldrb	r2, [r7, #6]
 800965c:	4613      	mov	r3, r2
 800965e:	011b      	lsls	r3, r3, #4
 8009660:	1a9b      	subs	r3, r3, r2
 8009662:	011b      	lsls	r3, r3, #4
 8009664:	4a20      	ldr	r2, [pc, #128]	@ (80096e8 <config_motors+0xcb0>)
 8009666:	4413      	add	r3, r2
 8009668:	4618      	mov	r0, r3
 800966a:	f7ff f89d 	bl	80087a8 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = YAW_CENTER;
 800966e:	79ba      	ldrb	r2, [r7, #6]
 8009670:	491d      	ldr	r1, [pc, #116]	@ (80096e8 <config_motors+0xcb0>)
 8009672:	4613      	mov	r3, r2
 8009674:	011b      	lsls	r3, r3, #4
 8009676:	1a9b      	subs	r3, r3, r2
 8009678:	011b      	lsls	r3, r3, #4
 800967a:	440b      	add	r3, r1
 800967c:	339c      	adds	r3, #156	@ 0x9c
 800967e:	f640 62d8 	movw	r2, #3800	@ 0xed8
 8009682:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = YAW_MAX_ANG;
 8009684:	79ba      	ldrb	r2, [r7, #6]
 8009686:	4918      	ldr	r1, [pc, #96]	@ (80096e8 <config_motors+0xcb0>)
 8009688:	4613      	mov	r3, r2
 800968a:	011b      	lsls	r3, r3, #4
 800968c:	1a9b      	subs	r3, r3, r2
 800968e:	011b      	lsls	r3, r3, #4
 8009690:	440b      	add	r3, r1
 8009692:	33c4      	adds	r3, #196	@ 0xc4
 8009694:	4a23      	ldr	r2, [pc, #140]	@ (8009724 <config_motors+0xcec>)
 8009696:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = YAW_MIN_ANG; //angle before it overflows
 8009698:	79ba      	ldrb	r2, [r7, #6]
 800969a:	4913      	ldr	r1, [pc, #76]	@ (80096e8 <config_motors+0xcb0>)
 800969c:	4613      	mov	r3, r2
 800969e:	011b      	lsls	r3, r3, #4
 80096a0:	1a9b      	subs	r3, r3, r2
 80096a2:	011b      	lsls	r3, r3, #4
 80096a4:	440b      	add	r3, r1
 80096a6:	33c0      	adds	r3, #192	@ 0xc0
 80096a8:	4a1f      	ldr	r2, [pc, #124]	@ (8009728 <config_motors+0xcf0>)
 80096aa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 80096ac:	79ba      	ldrb	r2, [r7, #6]
 80096ae:	490e      	ldr	r1, [pc, #56]	@ (80096e8 <config_motors+0xcb0>)
 80096b0:	4613      	mov	r3, r2
 80096b2:	011b      	lsls	r3, r3, #4
 80096b4:	1a9b      	subs	r3, r3, r2
 80096b6:	011b      	lsls	r3, r3, #4
 80096b8:	440b      	add	r3, r1
 80096ba:	33d4      	adds	r3, #212	@ 0xd4
 80096bc:	f04f 0200 	mov.w	r2, #0
 80096c0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = YAW_ANGLE_KP;
 80096c2:	79ba      	ldrb	r2, [r7, #6]
 80096c4:	4908      	ldr	r1, [pc, #32]	@ (80096e8 <config_motors+0xcb0>)
 80096c6:	4613      	mov	r3, r2
 80096c8:	011b      	lsls	r3, r3, #4
 80096ca:	1a9b      	subs	r3, r3, r2
 80096cc:	011b      	lsls	r3, r3, #4
 80096ce:	440b      	add	r3, r1
 80096d0:	3368      	adds	r3, #104	@ 0x68
 80096d2:	4a16      	ldr	r2, [pc, #88]	@ (800972c <config_motors+0xcf4>)
 80096d4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = YAW_ANGLE_KI;
 80096d6:	79ba      	ldrb	r2, [r7, #6]
 80096d8:	4903      	ldr	r1, [pc, #12]	@ (80096e8 <config_motors+0xcb0>)
 80096da:	4613      	mov	r3, r2
 80096dc:	011b      	lsls	r3, r3, #4
 80096de:	1a9b      	subs	r3, r3, r2
 80096e0:	011b      	lsls	r3, r3, #4
 80096e2:	440b      	add	r3, r1
 80096e4:	336c      	adds	r3, #108	@ 0x6c
 80096e6:	e023      	b.n	8009730 <config_motors+0xcf8>
 80096e8:	20001e48 	.word	0x20001e48
 80096ec:	40490fdb 	.word	0x40490fdb
 80096f0:	c0490fdb 	.word	0xc0490fdb
 80096f4:	447a0000 	.word	0x447a0000
 80096f8:	42c80000 	.word	0x42c80000
 80096fc:	40a00000 	.word	0x40a00000
 8009700:	3ca3d70a 	.word	0x3ca3d70a
 8009704:	40400000 	.word	0x40400000
 8009708:	461c4000 	.word	0x461c4000
 800970c:	3f19999a 	.word	0x3f19999a
 8009710:	be800000 	.word	0xbe800000
 8009714:	3dcccccd 	.word	0x3dcccccd
 8009718:	45bb8000 	.word	0x45bb8000
 800971c:	457a0000 	.word	0x457a0000
 8009720:	469c4000 	.word	0x469c4000
 8009724:	417b53d2 	.word	0x417b53d2
 8009728:	c17b53d2 	.word	0xc17b53d2
 800972c:	41700000 	.word	0x41700000
 8009730:	f04f 0200 	mov.w	r2, #0
 8009734:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = YAW_ANGLE_KD;
 8009736:	79ba      	ldrb	r2, [r7, #6]
 8009738:	4929      	ldr	r1, [pc, #164]	@ (80097e0 <config_motors+0xda8>)
 800973a:	4613      	mov	r3, r2
 800973c:	011b      	lsls	r3, r3, #4
 800973e:	1a9b      	subs	r3, r3, r2
 8009740:	011b      	lsls	r3, r3, #4
 8009742:	440b      	add	r3, r1
 8009744:	3370      	adds	r3, #112	@ 0x70
 8009746:	4a27      	ldr	r2, [pc, #156]	@ (80097e4 <config_motors+0xdac>)
 8009748:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = YAW_ANGLE_INT_MAX;
 800974a:	79ba      	ldrb	r2, [r7, #6]
 800974c:	4924      	ldr	r1, [pc, #144]	@ (80097e0 <config_motors+0xda8>)
 800974e:	4613      	mov	r3, r2
 8009750:	011b      	lsls	r3, r3, #4
 8009752:	1a9b      	subs	r3, r3, r2
 8009754:	011b      	lsls	r3, r3, #4
 8009756:	440b      	add	r3, r1
 8009758:	3380      	adds	r3, #128	@ 0x80
 800975a:	4a23      	ldr	r2, [pc, #140]	@ (80097e8 <config_motors+0xdb0>)
 800975c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = YAW_MAX_RPM;
 800975e:	79ba      	ldrb	r2, [r7, #6]
 8009760:	491f      	ldr	r1, [pc, #124]	@ (80097e0 <config_motors+0xda8>)
 8009762:	4613      	mov	r3, r2
 8009764:	011b      	lsls	r3, r3, #4
 8009766:	1a9b      	subs	r3, r3, r2
 8009768:	011b      	lsls	r3, r3, #4
 800976a:	440b      	add	r3, r1
 800976c:	3384      	adds	r3, #132	@ 0x84
 800976e:	4a1d      	ldr	r2, [pc, #116]	@ (80097e4 <config_motors+0xdac>)
 8009770:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = YAWRPM_KP;
 8009772:	79ba      	ldrb	r2, [r7, #6]
 8009774:	491a      	ldr	r1, [pc, #104]	@ (80097e0 <config_motors+0xda8>)
 8009776:	4613      	mov	r3, r2
 8009778:	011b      	lsls	r3, r3, #4
 800977a:	1a9b      	subs	r3, r3, r2
 800977c:	011b      	lsls	r3, r3, #4
 800977e:	440b      	add	r3, r1
 8009780:	3338      	adds	r3, #56	@ 0x38
 8009782:	4a1a      	ldr	r2, [pc, #104]	@ (80097ec <config_motors+0xdb4>)
 8009784:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = YAWRPM_KI;
 8009786:	79ba      	ldrb	r2, [r7, #6]
 8009788:	4915      	ldr	r1, [pc, #84]	@ (80097e0 <config_motors+0xda8>)
 800978a:	4613      	mov	r3, r2
 800978c:	011b      	lsls	r3, r3, #4
 800978e:	1a9b      	subs	r3, r3, r2
 8009790:	011b      	lsls	r3, r3, #4
 8009792:	440b      	add	r3, r1
 8009794:	333c      	adds	r3, #60	@ 0x3c
 8009796:	4a13      	ldr	r2, [pc, #76]	@ (80097e4 <config_motors+0xdac>)
 8009798:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = YAWRPM_KD;
 800979a:	79ba      	ldrb	r2, [r7, #6]
 800979c:	4910      	ldr	r1, [pc, #64]	@ (80097e0 <config_motors+0xda8>)
 800979e:	4613      	mov	r3, r2
 80097a0:	011b      	lsls	r3, r3, #4
 80097a2:	1a9b      	subs	r3, r3, r2
 80097a4:	011b      	lsls	r3, r3, #4
 80097a6:	440b      	add	r3, r1
 80097a8:	3340      	adds	r3, #64	@ 0x40
 80097aa:	4a11      	ldr	r2, [pc, #68]	@ (80097f0 <config_motors+0xdb8>)
 80097ac:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = YAWRPM_INT_MAX;
 80097ae:	79ba      	ldrb	r2, [r7, #6]
 80097b0:	490b      	ldr	r1, [pc, #44]	@ (80097e0 <config_motors+0xda8>)
 80097b2:	4613      	mov	r3, r2
 80097b4:	011b      	lsls	r3, r3, #4
 80097b6:	1a9b      	subs	r3, r3, r2
 80097b8:	011b      	lsls	r3, r3, #4
 80097ba:	440b      	add	r3, r1
 80097bc:	3350      	adds	r3, #80	@ 0x50
 80097be:	4a0d      	ldr	r2, [pc, #52]	@ (80097f4 <config_motors+0xdbc>)
 80097c0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = YAW_MAX_CURRENT;
 80097c2:	79ba      	ldrb	r2, [r7, #6]
 80097c4:	4906      	ldr	r1, [pc, #24]	@ (80097e0 <config_motors+0xda8>)
 80097c6:	4613      	mov	r3, r2
 80097c8:	011b      	lsls	r3, r3, #4
 80097ca:	1a9b      	subs	r3, r3, r2
 80097cc:	011b      	lsls	r3, r3, #4
 80097ce:	440b      	add	r3, r1
 80097d0:	3354      	adds	r3, #84	@ 0x54
 80097d2:	4a09      	ldr	r2, [pc, #36]	@ (80097f8 <config_motors+0xdc0>)
 80097d4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ticks = 4096 * g_can_motors[motor_id].angle_data.gearbox_ratio;
	g_can_motors[motor_id].angle_data.tick_range = g_can_motors[motor_id].angle_data.max_ticks
			- g_can_motors[motor_id].angle_data.min_ticks;
#endif
#endif
}
 80097d6:	bf00      	nop
 80097d8:	3708      	adds	r7, #8
 80097da:	46bd      	mov	sp, r7
 80097dc:	bd80      	pop	{r7, pc}
 80097de:	bf00      	nop
 80097e0:	20001e48 	.word	0x20001e48
 80097e4:	41200000 	.word	0x41200000
 80097e8:	3d4ccccd 	.word	0x3d4ccccd
 80097ec:	466a6000 	.word	0x466a6000
 80097f0:	447a0000 	.word	0x447a0000
 80097f4:	459c4000 	.word	0x459c4000
 80097f8:	469c4000 	.word	0x469c4000

080097fc <bz_buzzer>:

void bz_buzzer(uint8_t high, uint8_t low) {
 80097fc:	b580      	push	{r7, lr}
 80097fe:	b084      	sub	sp, #16
 8009800:	af00      	add	r7, sp, #0
 8009802:	4603      	mov	r3, r0
 8009804:	460a      	mov	r2, r1
 8009806:	71fb      	strb	r3, [r7, #7]
 8009808:	4613      	mov	r3, r2
 800980a:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_high;
 800980c:	2309      	movs	r3, #9
 800980e:	737b      	strb	r3, [r7, #13]
	for (uint8_t i = 0; i < high; i++) {
 8009810:	2300      	movs	r3, #0
 8009812:	73fb      	strb	r3, [r7, #15]
 8009814:	e00a      	b.n	800982c <bz_buzzer+0x30>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009816:	4b1a      	ldr	r3, [pc, #104]	@ (8009880 <bz_buzzer+0x84>)
 8009818:	6818      	ldr	r0, [r3, #0]
 800981a:	f107 010d 	add.w	r1, r7, #13
 800981e:	2300      	movs	r3, #0
 8009820:	2200      	movs	r2, #0
 8009822:	f00d fec9 	bl	80175b8 <xQueueGenericSend>
	for (uint8_t i = 0; i < high; i++) {
 8009826:	7bfb      	ldrb	r3, [r7, #15]
 8009828:	3301      	adds	r3, #1
 800982a:	73fb      	strb	r3, [r7, #15]
 800982c:	7bfa      	ldrb	r2, [r7, #15]
 800982e:	79fb      	ldrb	r3, [r7, #7]
 8009830:	429a      	cmp	r2, r3
 8009832:	d3f0      	bcc.n	8009816 <bz_buzzer+0x1a>
	}
	temp_msg = bz_debug_low;
 8009834:	2308      	movs	r3, #8
 8009836:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < low; i++) {
 8009838:	2300      	movs	r3, #0
 800983a:	73bb      	strb	r3, [r7, #14]
 800983c:	e00d      	b.n	800985a <bz_buzzer+0x5e>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800983e:	4b10      	ldr	r3, [pc, #64]	@ (8009880 <bz_buzzer+0x84>)
 8009840:	6818      	ldr	r0, [r3, #0]
 8009842:	f107 010d 	add.w	r1, r7, #13
 8009846:	2300      	movs	r3, #0
 8009848:	2200      	movs	r2, #0
 800984a:	f00d feb5 	bl	80175b8 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800984e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8009852:	b2db      	uxtb	r3, r3
 8009854:	3301      	adds	r3, #1
 8009856:	b2db      	uxtb	r3, r3
 8009858:	73bb      	strb	r3, [r7, #14]
 800985a:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800985e:	79bb      	ldrb	r3, [r7, #6]
 8009860:	429a      	cmp	r2, r3
 8009862:	dbec      	blt.n	800983e <bz_buzzer+0x42>
	}
	temp_msg = bz_debug_rest;
 8009864:	230a      	movs	r3, #10
 8009866:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009868:	4b05      	ldr	r3, [pc, #20]	@ (8009880 <bz_buzzer+0x84>)
 800986a:	6818      	ldr	r0, [r3, #0]
 800986c:	f107 010d 	add.w	r1, r7, #13
 8009870:	2300      	movs	r3, #0
 8009872:	2200      	movs	r2, #0
 8009874:	f00d fea0 	bl	80175b8 <xQueueGenericSend>
}
 8009878:	bf00      	nop
 800987a:	3710      	adds	r7, #16
 800987c:	46bd      	mov	sp, r7
 800987e:	bd80      	pop	{r7, pc}
 8009880:	200037c4 	.word	0x200037c4

08009884 <motor_temp_bz>:

void motor_temp_bz(uint8_t hi, uint8_t low) {
 8009884:	b580      	push	{r7, lr}
 8009886:	b084      	sub	sp, #16
 8009888:	af00      	add	r7, sp, #0
 800988a:	4603      	mov	r3, r0
 800988c:	460a      	mov	r2, r1
 800988e:	71fb      	strb	r3, [r7, #7]
 8009890:	4613      	mov	r3, r2
 8009892:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_hi_temp;
 8009894:	230b      	movs	r3, #11
 8009896:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009898:	4b27      	ldr	r3, [pc, #156]	@ (8009938 <motor_temp_bz+0xb4>)
 800989a:	6818      	ldr	r0, [r3, #0]
 800989c:	f107 010d 	add.w	r1, r7, #13
 80098a0:	2300      	movs	r3, #0
 80098a2:	2200      	movs	r2, #0
 80098a4:	f00d fe88 	bl	80175b8 <xQueueGenericSend>
	temp_msg = bz_debug_rest;
 80098a8:	230a      	movs	r3, #10
 80098aa:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80098ac:	4b22      	ldr	r3, [pc, #136]	@ (8009938 <motor_temp_bz+0xb4>)
 80098ae:	6818      	ldr	r0, [r3, #0]
 80098b0:	f107 010d 	add.w	r1, r7, #13
 80098b4:	2300      	movs	r3, #0
 80098b6:	2200      	movs	r2, #0
 80098b8:	f00d fe7e 	bl	80175b8 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 80098bc:	2300      	movs	r3, #0
 80098be:	73fb      	strb	r3, [r7, #15]
 80098c0:	e00f      	b.n	80098e2 <motor_temp_bz+0x5e>
		temp_msg = bz_temp_hi;
 80098c2:	230c      	movs	r3, #12
 80098c4:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80098c6:	4b1c      	ldr	r3, [pc, #112]	@ (8009938 <motor_temp_bz+0xb4>)
 80098c8:	6818      	ldr	r0, [r3, #0]
 80098ca:	f107 010d 	add.w	r1, r7, #13
 80098ce:	2300      	movs	r3, #0
 80098d0:	2200      	movs	r2, #0
 80098d2:	f00d fe71 	bl	80175b8 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 80098d6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80098da:	b2db      	uxtb	r3, r3
 80098dc:	3301      	adds	r3, #1
 80098de:	b2db      	uxtb	r3, r3
 80098e0:	73fb      	strb	r3, [r7, #15]
 80098e2:	f997 200f 	ldrsb.w	r2, [r7, #15]
 80098e6:	79fb      	ldrb	r3, [r7, #7]
 80098e8:	429a      	cmp	r2, r3
 80098ea:	dbea      	blt.n	80098c2 <motor_temp_bz+0x3e>
	}
	for (int8_t i = 0; i < low; i++) {
 80098ec:	2300      	movs	r3, #0
 80098ee:	73bb      	strb	r3, [r7, #14]
 80098f0:	e00f      	b.n	8009912 <motor_temp_bz+0x8e>
		temp_msg = bz_temp_low;
 80098f2:	230d      	movs	r3, #13
 80098f4:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80098f6:	4b10      	ldr	r3, [pc, #64]	@ (8009938 <motor_temp_bz+0xb4>)
 80098f8:	6818      	ldr	r0, [r3, #0]
 80098fa:	f107 010d 	add.w	r1, r7, #13
 80098fe:	2300      	movs	r3, #0
 8009900:	2200      	movs	r2, #0
 8009902:	f00d fe59 	bl	80175b8 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 8009906:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800990a:	b2db      	uxtb	r3, r3
 800990c:	3301      	adds	r3, #1
 800990e:	b2db      	uxtb	r3, r3
 8009910:	73bb      	strb	r3, [r7, #14]
 8009912:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8009916:	79bb      	ldrb	r3, [r7, #6]
 8009918:	429a      	cmp	r2, r3
 800991a:	dbea      	blt.n	80098f2 <motor_temp_bz+0x6e>
	}
	temp_msg = bz_debug_rest;
 800991c:	230a      	movs	r3, #10
 800991e:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009920:	4b05      	ldr	r3, [pc, #20]	@ (8009938 <motor_temp_bz+0xb4>)
 8009922:	6818      	ldr	r0, [r3, #0]
 8009924:	f107 010d 	add.w	r1, r7, #13
 8009928:	2300      	movs	r3, #0
 800992a:	2200      	movs	r2, #0
 800992c:	f00d fe44 	bl	80175b8 <xQueueGenericSend>

}
 8009930:	bf00      	nop
 8009932:	3710      	adds	r7, #16
 8009934:	46bd      	mov	sp, r7
 8009936:	bd80      	pop	{r7, pc}
 8009938:	200037c4 	.word	0x200037c4

0800993c <check_motors>:

uint16_t check_motors() {
 800993c:	b580      	push	{r7, lr}
 800993e:	b082      	sub	sp, #8
 8009940:	af00      	add	r7, sp, #0
	uint16_t error = 0;
 8009942:	2300      	movs	r3, #0
 8009944:	80fb      	strh	r3, [r7, #6]
	uint32_t curr_time = get_microseconds();
 8009946:	f7f8 fc3b 	bl	80021c0 <get_microseconds>
 800994a:	6038      	str	r0, [r7, #0]
	if (curr_time
				- g_can_motors[LEFT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800994c:	4b7d      	ldr	r3, [pc, #500]	@ (8009b44 <check_motors+0x208>)
 800994e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8009952:	683a      	ldr	r2, [r7, #0]
 8009954:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009956:	4a7c      	ldr	r2, [pc, #496]	@ (8009b48 <check_motors+0x20c>)
 8009958:	4293      	cmp	r3, r2
 800995a:	d904      	bls.n	8009966 <check_motors+0x2a>
			error |= 1 << (0);
 800995c:	88fb      	ldrh	r3, [r7, #6]
 800995e:	f043 0301 	orr.w	r3, r3, #1
 8009962:	80fb      	strh	r3, [r7, #6]
 8009964:	e007      	b.n	8009976 <check_motors+0x3a>

		} else {
			if (g_can_motors[LEFT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009966:	4b77      	ldr	r3, [pc, #476]	@ (8009b44 <check_motors+0x208>)
 8009968:	7b1b      	ldrb	r3, [r3, #12]
 800996a:	2b46      	cmp	r3, #70	@ 0x46
 800996c:	d903      	bls.n	8009976 <check_motors+0x3a>
				motor_temp_bz(1, 1);
 800996e:	2101      	movs	r1, #1
 8009970:	2001      	movs	r0, #1
 8009972:	f7ff ff87 	bl	8009884 <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
				- g_can_motors[RIGHT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009976:	4b73      	ldr	r3, [pc, #460]	@ (8009b44 <check_motors+0x208>)
 8009978:	f8d3 31d4 	ldr.w	r3, [r3, #468]	@ 0x1d4
 800997c:	683a      	ldr	r2, [r7, #0]
 800997e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009980:	4a71      	ldr	r2, [pc, #452]	@ (8009b48 <check_motors+0x20c>)
 8009982:	4293      	cmp	r3, r2
 8009984:	d904      	bls.n	8009990 <check_motors+0x54>
			error |= 1 << (0);
 8009986:	88fb      	ldrh	r3, [r7, #6]
 8009988:	f043 0301 	orr.w	r3, r3, #1
 800998c:	80fb      	strh	r3, [r7, #6]
 800998e:	e008      	b.n	80099a2 <check_motors+0x66>

		} else {
			if (g_can_motors[RIGHT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009990:	4b6c      	ldr	r3, [pc, #432]	@ (8009b44 <check_motors+0x208>)
 8009992:	f893 30fc 	ldrb.w	r3, [r3, #252]	@ 0xfc
 8009996:	2b46      	cmp	r3, #70	@ 0x46
 8009998:	d903      	bls.n	80099a2 <check_motors+0x66>
				motor_temp_bz(1, 1);
 800999a:	2101      	movs	r1, #1
 800999c:	2001      	movs	r0, #1
 800999e:	f7ff ff71 	bl	8009884 <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
			- g_can_motors[FR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 80099a2:	4b68      	ldr	r3, [pc, #416]	@ (8009b44 <check_motors+0x208>)
 80099a4:	f8d3 34a4 	ldr.w	r3, [r3, #1188]	@ 0x4a4
 80099a8:	683a      	ldr	r2, [r7, #0]
 80099aa:	1ad3      	subs	r3, r2, r3
	if (curr_time
 80099ac:	4a66      	ldr	r2, [pc, #408]	@ (8009b48 <check_motors+0x20c>)
 80099ae:	4293      	cmp	r3, r2
 80099b0:	d904      	bls.n	80099bc <check_motors+0x80>
		error |= 1 << (0);
 80099b2:	88fb      	ldrh	r3, [r7, #6]
 80099b4:	f043 0301 	orr.w	r3, r3, #1
 80099b8:	80fb      	strh	r3, [r7, #6]
 80099ba:	e008      	b.n	80099ce <check_motors+0x92>

	} else {
		if (g_can_motors[FR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 80099bc:	4b61      	ldr	r3, [pc, #388]	@ (8009b44 <check_motors+0x208>)
 80099be:	f893 33cc 	ldrb.w	r3, [r3, #972]	@ 0x3cc
 80099c2:	2b46      	cmp	r3, #70	@ 0x46
 80099c4:	d903      	bls.n	80099ce <check_motors+0x92>
			motor_temp_bz(1, 1);
 80099c6:	2101      	movs	r1, #1
 80099c8:	2001      	movs	r0, #1
 80099ca:	f7ff ff5b 	bl	8009884 <motor_temp_bz>

		}
	}

	if (curr_time
			- g_can_motors[FL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 80099ce:	4b5d      	ldr	r3, [pc, #372]	@ (8009b44 <check_motors+0x208>)
 80099d0:	f8d3 3594 	ldr.w	r3, [r3, #1428]	@ 0x594
 80099d4:	683a      	ldr	r2, [r7, #0]
 80099d6:	1ad3      	subs	r3, r2, r3
	if (curr_time
 80099d8:	4a5b      	ldr	r2, [pc, #364]	@ (8009b48 <check_motors+0x20c>)
 80099da:	4293      	cmp	r3, r2
 80099dc:	d904      	bls.n	80099e8 <check_motors+0xac>
		error |= 1 << (1);
 80099de:	88fb      	ldrh	r3, [r7, #6]
 80099e0:	f043 0302 	orr.w	r3, r3, #2
 80099e4:	80fb      	strh	r3, [r7, #6]
 80099e6:	e008      	b.n	80099fa <check_motors+0xbe>

	} else {
		if (g_can_motors[FL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 80099e8:	4b56      	ldr	r3, [pc, #344]	@ (8009b44 <check_motors+0x208>)
 80099ea:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 80099ee:	2b46      	cmp	r3, #70	@ 0x46
 80099f0:	d903      	bls.n	80099fa <check_motors+0xbe>
			motor_temp_bz(1, 2);
 80099f2:	2102      	movs	r1, #2
 80099f4:	2001      	movs	r0, #1
 80099f6:	f7ff ff45 	bl	8009884 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[BL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 80099fa:	4b52      	ldr	r3, [pc, #328]	@ (8009b44 <check_motors+0x208>)
 80099fc:	f8d3 3684 	ldr.w	r3, [r3, #1668]	@ 0x684
 8009a00:	683a      	ldr	r2, [r7, #0]
 8009a02:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a04:	4a50      	ldr	r2, [pc, #320]	@ (8009b48 <check_motors+0x20c>)
 8009a06:	4293      	cmp	r3, r2
 8009a08:	d904      	bls.n	8009a14 <check_motors+0xd8>
		error |= 1 << (2);
 8009a0a:	88fb      	ldrh	r3, [r7, #6]
 8009a0c:	f043 0304 	orr.w	r3, r3, #4
 8009a10:	80fb      	strh	r3, [r7, #6]
 8009a12:	e008      	b.n	8009a26 <check_motors+0xea>
	} else {
		if (g_can_motors[BL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a14:	4b4b      	ldr	r3, [pc, #300]	@ (8009b44 <check_motors+0x208>)
 8009a16:	f893 35ac 	ldrb.w	r3, [r3, #1452]	@ 0x5ac
 8009a1a:	2b46      	cmp	r3, #70	@ 0x46
 8009a1c:	d903      	bls.n	8009a26 <check_motors+0xea>
			motor_temp_bz(1, 3);
 8009a1e:	2103      	movs	r1, #3
 8009a20:	2001      	movs	r0, #1
 8009a22:	f7ff ff2f 	bl	8009884 <motor_temp_bz>
		}
	}
	if (curr_time
			- g_can_motors[BR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a26:	4b47      	ldr	r3, [pc, #284]	@ (8009b44 <check_motors+0x208>)
 8009a28:	f8d3 3774 	ldr.w	r3, [r3, #1908]	@ 0x774
 8009a2c:	683a      	ldr	r2, [r7, #0]
 8009a2e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a30:	4a45      	ldr	r2, [pc, #276]	@ (8009b48 <check_motors+0x20c>)
 8009a32:	4293      	cmp	r3, r2
 8009a34:	d904      	bls.n	8009a40 <check_motors+0x104>
		error |= 1 << (3);
 8009a36:	88fb      	ldrh	r3, [r7, #6]
 8009a38:	f043 0308 	orr.w	r3, r3, #8
 8009a3c:	80fb      	strh	r3, [r7, #6]
 8009a3e:	e008      	b.n	8009a52 <check_motors+0x116>
	} else {
		if (g_can_motors[BR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a40:	4b40      	ldr	r3, [pc, #256]	@ (8009b44 <check_motors+0x208>)
 8009a42:	f893 369c 	ldrb.w	r3, [r3, #1692]	@ 0x69c
 8009a46:	2b46      	cmp	r3, #70	@ 0x46
 8009a48:	d903      	bls.n	8009a52 <check_motors+0x116>
			motor_temp_bz(1, 4);
 8009a4a:	2104      	movs	r1, #4
 8009a4c:	2001      	movs	r0, #1
 8009a4e:	f7ff ff19 	bl	8009884 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[LFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a52:	4b3c      	ldr	r3, [pc, #240]	@ (8009b44 <check_motors+0x208>)
 8009a54:	f8d3 3ef4 	ldr.w	r3, [r3, #3828]	@ 0xef4
 8009a58:	683a      	ldr	r2, [r7, #0]
 8009a5a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a5c:	4a3a      	ldr	r2, [pc, #232]	@ (8009b48 <check_motors+0x20c>)
 8009a5e:	4293      	cmp	r3, r2
 8009a60:	d904      	bls.n	8009a6c <check_motors+0x130>
		error |= 1 << (4);
 8009a62:	88fb      	ldrh	r3, [r7, #6]
 8009a64:	f043 0310 	orr.w	r3, r3, #16
 8009a68:	80fb      	strh	r3, [r7, #6]
 8009a6a:	e008      	b.n	8009a7e <check_motors+0x142>

	} else {
		if (g_can_motors[LFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a6c:	4b35      	ldr	r3, [pc, #212]	@ (8009b44 <check_motors+0x208>)
 8009a6e:	f893 3e1c 	ldrb.w	r3, [r3, #3612]	@ 0xe1c
 8009a72:	2b46      	cmp	r3, #70	@ 0x46
 8009a74:	d903      	bls.n	8009a7e <check_motors+0x142>
			motor_temp_bz(2, 1);
 8009a76:	2101      	movs	r1, #1
 8009a78:	2002      	movs	r0, #2
 8009a7a:	f7ff ff03 	bl	8009884 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[RFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a7e:	4b31      	ldr	r3, [pc, #196]	@ (8009b44 <check_motors+0x208>)
 8009a80:	f8d3 3e04 	ldr.w	r3, [r3, #3588]	@ 0xe04
 8009a84:	683a      	ldr	r2, [r7, #0]
 8009a86:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a88:	4a2f      	ldr	r2, [pc, #188]	@ (8009b48 <check_motors+0x20c>)
 8009a8a:	4293      	cmp	r3, r2
 8009a8c:	d904      	bls.n	8009a98 <check_motors+0x15c>
		error |= 1 << (5);
 8009a8e:	88fb      	ldrh	r3, [r7, #6]
 8009a90:	f043 0320 	orr.w	r3, r3, #32
 8009a94:	80fb      	strh	r3, [r7, #6]
 8009a96:	e008      	b.n	8009aaa <check_motors+0x16e>

	} else {
		if (g_can_motors[RFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a98:	4b2a      	ldr	r3, [pc, #168]	@ (8009b44 <check_motors+0x208>)
 8009a9a:	f893 3d2c 	ldrb.w	r3, [r3, #3372]	@ 0xd2c
 8009a9e:	2b46      	cmp	r3, #70	@ 0x46
 8009aa0:	d903      	bls.n	8009aaa <check_motors+0x16e>
			motor_temp_bz(2, 2);
 8009aa2:	2102      	movs	r1, #2
 8009aa4:	2002      	movs	r0, #2
 8009aa6:	f7ff feed 	bl	8009884 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[FEEDER_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009aaa:	4b26      	ldr	r3, [pc, #152]	@ (8009b44 <check_motors+0x208>)
 8009aac:	f8d3 3fe4 	ldr.w	r3, [r3, #4068]	@ 0xfe4
 8009ab0:	683a      	ldr	r2, [r7, #0]
 8009ab2:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009ab4:	4a24      	ldr	r2, [pc, #144]	@ (8009b48 <check_motors+0x20c>)
 8009ab6:	4293      	cmp	r3, r2
 8009ab8:	d904      	bls.n	8009ac4 <check_motors+0x188>
		error |= 1 << 6;
 8009aba:	88fb      	ldrh	r3, [r7, #6]
 8009abc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009ac0:	80fb      	strh	r3, [r7, #6]
 8009ac2:	e008      	b.n	8009ad6 <check_motors+0x19a>

	} else {
		if (g_can_motors[FEEDER_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009ac4:	4b1f      	ldr	r3, [pc, #124]	@ (8009b44 <check_motors+0x208>)
 8009ac6:	f893 3f0c 	ldrb.w	r3, [r3, #3852]	@ 0xf0c
 8009aca:	2b46      	cmp	r3, #70	@ 0x46
 8009acc:	d903      	bls.n	8009ad6 <check_motors+0x19a>
			motor_temp_bz(2, 3);
 8009ace:	2103      	movs	r1, #3
 8009ad0:	2002      	movs	r0, #2
 8009ad2:	f7ff fed7 	bl	8009884 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[PITCH_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009ad6:	4b1b      	ldr	r3, [pc, #108]	@ (8009b44 <check_motors+0x208>)
 8009ad8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009adc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8009ae0:	683a      	ldr	r2, [r7, #0]
 8009ae2:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009ae4:	4a18      	ldr	r2, [pc, #96]	@ (8009b48 <check_motors+0x20c>)
 8009ae6:	4293      	cmp	r3, r2
 8009ae8:	d904      	bls.n	8009af4 <check_motors+0x1b8>
		error |= 1 << 7;
 8009aea:	88fb      	ldrh	r3, [r7, #6]
 8009aec:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009af0:	80fb      	strh	r3, [r7, #6]
 8009af2:	e008      	b.n	8009b06 <check_motors+0x1ca>

	} else {
		if (g_can_motors[PITCH_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009af4:	4b13      	ldr	r3, [pc, #76]	@ (8009b44 <check_motors+0x208>)
 8009af6:	f893 3ffc 	ldrb.w	r3, [r3, #4092]	@ 0xffc
 8009afa:	2b46      	cmp	r3, #70	@ 0x46
 8009afc:	d903      	bls.n	8009b06 <check_motors+0x1ca>
			motor_temp_bz(3, 1);
 8009afe:	2101      	movs	r1, #1
 8009b00:	2003      	movs	r0, #3
 8009b02:	f7ff febf 	bl	8009884 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[YAW_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b06:	4b0f      	ldr	r3, [pc, #60]	@ (8009b44 <check_motors+0x208>)
 8009b08:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009b0c:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8009b10:	683a      	ldr	r2, [r7, #0]
 8009b12:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b14:	4a0c      	ldr	r2, [pc, #48]	@ (8009b48 <check_motors+0x20c>)
 8009b16:	4293      	cmp	r3, r2
 8009b18:	d904      	bls.n	8009b24 <check_motors+0x1e8>
		error |= 1 << 8;
 8009b1a:	88fb      	ldrh	r3, [r7, #6]
 8009b1c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009b20:	80fb      	strh	r3, [r7, #6]
 8009b22:	e00a      	b.n	8009b3a <check_motors+0x1fe>

	} else {
		if (g_can_motors[YAW_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b24:	4b07      	ldr	r3, [pc, #28]	@ (8009b44 <check_motors+0x208>)
 8009b26:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009b2a:	f893 31dc 	ldrb.w	r3, [r3, #476]	@ 0x1dc
 8009b2e:	2b46      	cmp	r3, #70	@ 0x46
 8009b30:	d903      	bls.n	8009b3a <check_motors+0x1fe>
			motor_temp_bz(3, 2);
 8009b32:	2102      	movs	r1, #2
 8009b34:	2003      	movs	r0, #3
 8009b36:	f7ff fea5 	bl	8009884 <motor_temp_bz>
		}
	}
	return error;
 8009b3a:	88fb      	ldrh	r3, [r7, #6]

}
 8009b3c:	4618      	mov	r0, r3
 8009b3e:	3708      	adds	r7, #8
 8009b40:	46bd      	mov	sp, r7
 8009b42:	bd80      	pop	{r7, pc}
 8009b44:	20001e48 	.word	0x20001e48
 8009b48:	000f4240 	.word	0x000f4240

08009b4c <motor_calib_task>:

void motor_calib_task(void *argument) {
 8009b4c:	b580      	push	{r7, lr}
 8009b4e:	b088      	sub	sp, #32
 8009b50:	af00      	add	r7, sp, #0
 8009b52:	6078      	str	r0, [r7, #4]
	can_start(&hcan1, 0x00000000, 0x00000000);
 8009b54:	2200      	movs	r2, #0
 8009b56:	2100      	movs	r1, #0
 8009b58:	4842      	ldr	r0, [pc, #264]	@ (8009c64 <motor_calib_task+0x118>)
 8009b5a:	f7f7 fb6f 	bl	800123c <can_start>
	can_start(&hcan2, 0x00000000, 0x00000000);
 8009b5e:	2200      	movs	r2, #0
 8009b60:	2100      	movs	r1, #0
 8009b62:	4841      	ldr	r0, [pc, #260]	@ (8009c68 <motor_calib_task+0x11c>)
 8009b64:	f7f7 fb6a 	bl	800123c <can_start>
	config_motors();
 8009b68:	f7fe ff66 	bl	8008a38 <config_motors>
	//insert can tester?
	uint16_t error = 0b111111111;
 8009b6c:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8009b70:	82fb      	strh	r3, [r7, #22]
	vTaskDelay(50);
 8009b72:	2032      	movs	r0, #50	@ 0x32
 8009b74:	f00e fc0a 	bl	801838c <vTaskDelay>
			vTaskDelay(500);
		}
	}

	uint8_t temp_msg;
	if (error == 0) {
 8009b78:	8afb      	ldrh	r3, [r7, #22]
 8009b7a:	2b00      	cmp	r3, #0
 8009b7c:	d102      	bne.n	8009b84 <motor_calib_task+0x38>
		temp_msg = ok;
 8009b7e:	2301      	movs	r3, #1
 8009b80:	73fb      	strb	r3, [r7, #15]
 8009b82:	e001      	b.n	8009b88 <motor_calib_task+0x3c>
	} else {
		temp_msg = not_ok;
 8009b84:	2302      	movs	r3, #2
 8009b86:	73fb      	strb	r3, [r7, #15]
	}
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009b88:	4b38      	ldr	r3, [pc, #224]	@ (8009c6c <motor_calib_task+0x120>)
 8009b8a:	6818      	ldr	r0, [r3, #0]
 8009b8c:	f107 010f 	add.w	r1, r7, #15
 8009b90:	2300      	movs	r3, #0
 8009b92:	2200      	movs	r2, #0
 8009b94:	f00d fd10 	bl	80175b8 <xQueueGenericSend>
	uint32_t last_check = HAL_GetTick();
 8009b98:	f001 fa32 	bl	800b000 <HAL_GetTick>
 8009b9c:	6138      	str	r0, [r7, #16]
	while (1) {
		error = 0;
 8009b9e:	2300      	movs	r3, #0
 8009ba0:	82fb      	strh	r3, [r7, #22]

		error = check_motors();
 8009ba2:	f7ff fecb 	bl	800993c <check_motors>
 8009ba6:	4603      	mov	r3, r0
 8009ba8:	82fb      	strh	r3, [r7, #22]
		g_motor_fault = error;
 8009baa:	4a31      	ldr	r2, [pc, #196]	@ (8009c70 <motor_calib_task+0x124>)
 8009bac:	8afb      	ldrh	r3, [r7, #22]
 8009bae:	8013      	strh	r3, [r2, #0]
		uint32_t delay = 0;
 8009bb0:	2300      	movs	r3, #0
 8009bb2:	61bb      	str	r3, [r7, #24]
		if (HAL_GetTick() - last_check > 30000) {
 8009bb4:	f001 fa24 	bl	800b000 <HAL_GetTick>
 8009bb8:	4602      	mov	r2, r0
 8009bba:	693b      	ldr	r3, [r7, #16]
 8009bbc:	1ad3      	subs	r3, r2, r3
 8009bbe:	f247 5230 	movw	r2, #30000	@ 0x7530
 8009bc2:	4293      	cmp	r3, r2
 8009bc4:	d949      	bls.n	8009c5a <motor_calib_task+0x10e>
					bz_buzzer(0, 2);
					vTaskDelay(5000);
					continue;
				}
			} else {
				error = 0;
 8009bc6:	2300      	movs	r3, #0
 8009bc8:	82fb      	strh	r3, [r7, #22]
			}
			for (uint8_t i = 0; i < 4; i++) {
 8009bca:	2300      	movs	r3, #0
 8009bcc:	777b      	strb	r3, [r7, #29]
 8009bce:	e011      	b.n	8009bf4 <motor_calib_task+0xa8>
				if (error & (1 << (i))) {
 8009bd0:	8afa      	ldrh	r2, [r7, #22]
 8009bd2:	7f7b      	ldrb	r3, [r7, #29]
 8009bd4:	fa42 f303 	asr.w	r3, r2, r3
 8009bd8:	f003 0301 	and.w	r3, r3, #1
 8009bdc:	2b00      	cmp	r3, #0
 8009bde:	d006      	beq.n	8009bee <motor_calib_task+0xa2>
					bz_buzzer(1, i + 1);
 8009be0:	7f7b      	ldrb	r3, [r7, #29]
 8009be2:	3301      	adds	r3, #1
 8009be4:	b2db      	uxtb	r3, r3
 8009be6:	4619      	mov	r1, r3
 8009be8:	2001      	movs	r0, #1
 8009bea:	f7ff fe07 	bl	80097fc <bz_buzzer>
			for (uint8_t i = 0; i < 4; i++) {
 8009bee:	7f7b      	ldrb	r3, [r7, #29]
 8009bf0:	3301      	adds	r3, #1
 8009bf2:	777b      	strb	r3, [r7, #29]
 8009bf4:	7f7b      	ldrb	r3, [r7, #29]
 8009bf6:	2b03      	cmp	r3, #3
 8009bf8:	d9ea      	bls.n	8009bd0 <motor_calib_task+0x84>
				} else {

				}
			}
			for (uint8_t i = 4; i < 7; i++) {
 8009bfa:	2304      	movs	r3, #4
 8009bfc:	77bb      	strb	r3, [r7, #30]
 8009bfe:	e011      	b.n	8009c24 <motor_calib_task+0xd8>
				if (error & (1 << (i))) {
 8009c00:	8afa      	ldrh	r2, [r7, #22]
 8009c02:	7fbb      	ldrb	r3, [r7, #30]
 8009c04:	fa42 f303 	asr.w	r3, r2, r3
 8009c08:	f003 0301 	and.w	r3, r3, #1
 8009c0c:	2b00      	cmp	r3, #0
 8009c0e:	d006      	beq.n	8009c1e <motor_calib_task+0xd2>
					bz_buzzer(2, (i - 3));
 8009c10:	7fbb      	ldrb	r3, [r7, #30]
 8009c12:	3b03      	subs	r3, #3
 8009c14:	b2db      	uxtb	r3, r3
 8009c16:	4619      	mov	r1, r3
 8009c18:	2002      	movs	r0, #2
 8009c1a:	f7ff fdef 	bl	80097fc <bz_buzzer>
			for (uint8_t i = 4; i < 7; i++) {
 8009c1e:	7fbb      	ldrb	r3, [r7, #30]
 8009c20:	3301      	adds	r3, #1
 8009c22:	77bb      	strb	r3, [r7, #30]
 8009c24:	7fbb      	ldrb	r3, [r7, #30]
 8009c26:	2b06      	cmp	r3, #6
 8009c28:	d9ea      	bls.n	8009c00 <motor_calib_task+0xb4>
				}
			}
			for (uint8_t i = 7; i < 9; i++) {
 8009c2a:	2307      	movs	r3, #7
 8009c2c:	77fb      	strb	r3, [r7, #31]
 8009c2e:	e011      	b.n	8009c54 <motor_calib_task+0x108>
				if (error & (1 << (i))) {
 8009c30:	8afa      	ldrh	r2, [r7, #22]
 8009c32:	7ffb      	ldrb	r3, [r7, #31]
 8009c34:	fa42 f303 	asr.w	r3, r2, r3
 8009c38:	f003 0301 	and.w	r3, r3, #1
 8009c3c:	2b00      	cmp	r3, #0
 8009c3e:	d006      	beq.n	8009c4e <motor_calib_task+0x102>
					bz_buzzer(3, (i - 6));
 8009c40:	7ffb      	ldrb	r3, [r7, #31]
 8009c42:	3b06      	subs	r3, #6
 8009c44:	b2db      	uxtb	r3, r3
 8009c46:	4619      	mov	r1, r3
 8009c48:	2003      	movs	r0, #3
 8009c4a:	f7ff fdd7 	bl	80097fc <bz_buzzer>
			for (uint8_t i = 7; i < 9; i++) {
 8009c4e:	7ffb      	ldrb	r3, [r7, #31]
 8009c50:	3301      	adds	r3, #1
 8009c52:	77fb      	strb	r3, [r7, #31]
 8009c54:	7ffb      	ldrb	r3, [r7, #31]
 8009c56:	2b08      	cmp	r3, #8
 8009c58:	d9ea      	bls.n	8009c30 <motor_calib_task+0xe4>
				}
			}
		}

		vTaskDelay(1000);
 8009c5a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8009c5e:	f00e fb95 	bl	801838c <vTaskDelay>
	while (1) {
 8009c62:	e79c      	b.n	8009b9e <motor_calib_task+0x52>
 8009c64:	200008e4 	.word	0x200008e4
 8009c68:	2000090c 	.word	0x2000090c
 8009c6c:	200037c4 	.word	0x200037c4
 8009c70:	200037c8 	.word	0x200037c8

08009c74 <speed_pid>:
 *
 * @param setpoint target RPM
 * @param motor's current RPM
 * @param *pid pointer to the rpm_pid struct within the motor's data struct
 */
void speed_pid(double setpoint, double curr_pt, pid_data_t *pid) {
 8009c74:	b580      	push	{r7, lr}
 8009c76:	b08a      	sub	sp, #40	@ 0x28
 8009c78:	af00      	add	r7, sp, #0
 8009c7a:	ed87 0b04 	vstr	d0, [r7, #16]
 8009c7e:	ed87 1b02 	vstr	d1, [r7, #8]
 8009c82:	6078      	str	r0, [r7, #4]
	pid->last_time[1] = pid->last_time[0];
 8009c84:	687b      	ldr	r3, [r7, #4]
 8009c86:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009c88:	687b      	ldr	r3, [r7, #4]
 8009c8a:	62da      	str	r2, [r3, #44]	@ 0x2c
	pid->last_time[0] = get_microseconds();
 8009c8c:	f7f8 fa98 	bl	80021c0 <get_microseconds>
 8009c90:	4602      	mov	r2, r0
 8009c92:	687b      	ldr	r3, [r7, #4]
 8009c94:	629a      	str	r2, [r3, #40]	@ 0x28
	/*
	if (pid->last_time[1]>= pid->last_time[0]) {
		return;
	} */
	uint32_t time_mult = 1;//TIMER_FREQ / (float) (pid->last_time[0] - pid->last_time[1]);
 8009c96:	2301      	movs	r3, #1
 8009c98:	627b      	str	r3, [r7, #36]	@ 0x24
	float Pout = 0;
 8009c9a:	f04f 0300 	mov.w	r3, #0
 8009c9e:	623b      	str	r3, [r7, #32]
	float Iout = 0;
 8009ca0:	f04f 0300 	mov.w	r3, #0
 8009ca4:	61fb      	str	r3, [r7, #28]
	float Dout = 0;
 8009ca6:	f04f 0300 	mov.w	r3, #0
 8009caa:	61bb      	str	r3, [r7, #24]

	pid->error[1] = pid->error[0];
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	68da      	ldr	r2, [r3, #12]
 8009cb0:	687b      	ldr	r3, [r7, #4]
 8009cb2:	611a      	str	r2, [r3, #16]
	pid->error[0] = setpoint - curr_pt;
 8009cb4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8009cb8:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8009cbc:	f7f6 fae4 	bl	8000288 <__aeabi_dsub>
 8009cc0:	4602      	mov	r2, r0
 8009cc2:	460b      	mov	r3, r1
 8009cc4:	4610      	mov	r0, r2
 8009cc6:	4619      	mov	r1, r3
 8009cc8:	f7f6 ff8e 	bl	8000be8 <__aeabi_d2f>
 8009ccc:	4602      	mov	r2, r0
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	60da      	str	r2, [r3, #12]
	Pout = pid->error[0] * pid->kp * time_mult;
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	ed93 7a03 	vldr	s14, [r3, #12]
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	edd3 7a00 	vldr	s15, [r3]
 8009cde:	ee27 7a27 	vmul.f32	s14, s14, s15
 8009ce2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009ce4:	ee07 3a90 	vmov	s15, r3
 8009ce8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009cec:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009cf0:	edc7 7a08 	vstr	s15, [r7, #32]
	Dout = (float)(pid->error[0] - pid->error[1]) * pid->kd * time_mult;
 8009cf4:	687b      	ldr	r3, [r7, #4]
 8009cf6:	ed93 7a03 	vldr	s14, [r3, #12]
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	edd3 7a04 	vldr	s15, [r3, #16]
 8009d00:	ee37 7a67 	vsub.f32	s14, s14, s15
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	edd3 7a02 	vldr	s15, [r3, #8]
 8009d0a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8009d0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d10:	ee07 3a90 	vmov	s15, r3
 8009d14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d18:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d1c:	edc7 7a06 	vstr	s15, [r7, #24]
	pid->integral += pid->error[0] * pid->ki * time_mult;
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	ed93 7a05 	vldr	s14, [r3, #20]
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	edd3 6a03 	vldr	s13, [r3, #12]
 8009d2c:	687b      	ldr	r3, [r7, #4]
 8009d2e:	edd3 7a01 	vldr	s15, [r3, #4]
 8009d32:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8009d36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d38:	ee07 3a90 	vmov	s15, r3
 8009d3c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d40:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8009d44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8009d48:	687b      	ldr	r3, [r7, #4]
 8009d4a:	edc3 7a05 	vstr	s15, [r3, #20]
	float_minmax(&pid->integral, pid->int_max, 0);
 8009d4e:	687b      	ldr	r3, [r7, #4]
 8009d50:	f103 0214 	add.w	r2, r3, #20
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	edd3 7a06 	vldr	s15, [r3, #24]
 8009d5a:	eddf 0a14 	vldr	s1, [pc, #80]	@ 8009dac <speed_pid+0x138>
 8009d5e:	eeb0 0a67 	vmov.f32	s0, s15
 8009d62:	4610      	mov	r0, r2
 8009d64:	f000 f82b 	bl	8009dbe <float_minmax>
	Iout = pid->integral;
 8009d68:	687b      	ldr	r3, [r7, #4]
 8009d6a:	695b      	ldr	r3, [r3, #20]
 8009d6c:	61fb      	str	r3, [r7, #28]
	pid->output = Pout + Iout + Dout;
 8009d6e:	ed97 7a08 	vldr	s14, [r7, #32]
 8009d72:	edd7 7a07 	vldr	s15, [r7, #28]
 8009d76:	ee37 7a27 	vadd.f32	s14, s14, s15
 8009d7a:	edd7 7a06 	vldr	s15, [r7, #24]
 8009d7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	edc3 7a08 	vstr	s15, [r3, #32]
	float_minmax(&pid->output, pid->max_out, 0);
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	f103 0220 	add.w	r2, r3, #32
 8009d8e:	687b      	ldr	r3, [r7, #4]
 8009d90:	edd3 7a07 	vldr	s15, [r3, #28]
 8009d94:	eddf 0a05 	vldr	s1, [pc, #20]	@ 8009dac <speed_pid+0x138>
 8009d98:	eeb0 0a67 	vmov.f32	s0, s15
 8009d9c:	4610      	mov	r0, r2
 8009d9e:	f000 f80e 	bl	8009dbe <float_minmax>
}
 8009da2:	bf00      	nop
 8009da4:	3728      	adds	r7, #40	@ 0x28
 8009da6:	46bd      	mov	sp, r7
 8009da8:	bd80      	pop	{r7, pc}
 8009daa:	bf00      	nop
 8009dac:	00000000 	.word	0x00000000

08009db0 <kill_can>:
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
	}
#endif
}

void kill_can() {
 8009db0:	b480      	push	{r7}
 8009db2:	af00      	add	r7, sp, #0

}
 8009db4:	bf00      	nop
 8009db6:	46bd      	mov	sp, r7
 8009db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dbc:	4770      	bx	lr

08009dbe <float_minmax>:
 * Limits the input float variable
 * @params motor_in: the pointer to the variable to be limited
 * @params motor_max: the positive maximum value for the variable
 */

void float_minmax(float *motor_in, float motor_max, float motor_min) {
 8009dbe:	b480      	push	{r7}
 8009dc0:	b085      	sub	sp, #20
 8009dc2:	af00      	add	r7, sp, #0
 8009dc4:	60f8      	str	r0, [r7, #12]
 8009dc6:	ed87 0a02 	vstr	s0, [r7, #8]
 8009dca:	edc7 0a01 	vstr	s1, [r7, #4]
	if (*motor_in > motor_max) {
 8009dce:	68fb      	ldr	r3, [r7, #12]
 8009dd0:	edd3 7a00 	vldr	s15, [r3]
 8009dd4:	ed97 7a02 	vldr	s14, [r7, #8]
 8009dd8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009ddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009de0:	d503      	bpl.n	8009dea <float_minmax+0x2c>
		*motor_in = motor_max;
 8009de2:	68fb      	ldr	r3, [r7, #12]
 8009de4:	68ba      	ldr	r2, [r7, #8]
 8009de6:	601a      	str	r2, [r3, #0]

//	if (fabs(*motor_in) < motor_min) {
//		*motor_in = 0;
//	}

}
 8009de8:	e013      	b.n	8009e12 <float_minmax+0x54>
	} else if (*motor_in < -motor_max) {
 8009dea:	68fb      	ldr	r3, [r7, #12]
 8009dec:	ed93 7a00 	vldr	s14, [r3]
 8009df0:	edd7 7a02 	vldr	s15, [r7, #8]
 8009df4:	eef1 7a67 	vneg.f32	s15, s15
 8009df8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009dfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e00:	d400      	bmi.n	8009e04 <float_minmax+0x46>
}
 8009e02:	e006      	b.n	8009e12 <float_minmax+0x54>
		*motor_in = -motor_max;
 8009e04:	edd7 7a02 	vldr	s15, [r7, #8]
 8009e08:	eef1 7a67 	vneg.f32	s15, s15
 8009e0c:	68fb      	ldr	r3, [r7, #12]
 8009e0e:	edc3 7a00 	vstr	s15, [r3]
}
 8009e12:	bf00      	nop
 8009e14:	3714      	adds	r7, #20
 8009e16:	46bd      	mov	sp, r7
 8009e18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e1c:	4770      	bx	lr
	...

08009e20 <motor_control_task>:
extern QueueHandle_t g_buzzing_task_msg;
extern remote_cmd_t g_remote_cmd;

extern uint8_t g_safety_toggle;
volatile uint32_t g_motor_control_time;
void motor_control_task(void *argument) {
 8009e20:	b580      	push	{r7, lr}
 8009e22:	b090      	sub	sp, #64	@ 0x40
 8009e24:	af00      	add	r7, sp, #0
 8009e26:	6078      	str	r0, [r7, #4]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 8009e28:	2300      	movs	r3, #0
 8009e2a:	627b      	str	r3, [r7, #36]	@ 0x24
	CAN_tx_message.RTR = CAN_RTR_DATA;
 8009e2c:	2300      	movs	r3, #0
 8009e2e:	62bb      	str	r3, [r7, #40]	@ 0x28
	CAN_tx_message.DLC = 0x08;
 8009e30:	2308      	movs	r3, #8
 8009e32:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t enabled_motors = 0;
 8009e34:	2300      	movs	r3, #0
 8009e36:	63bb      	str	r3, [r7, #56]	@ 0x38
	//initialise motor data
#ifdef LEFT_MOTOR_ID
	if (LEFT_MOTOR_ID < 25 && LEFT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LEFT_MOTOR_ID - 1);
 8009e38:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e3a:	f043 0301 	orr.w	r3, r3, #1
 8009e3e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RIGHT_MOTOR_ID
	if (RIGHT_MOTOR_ID < 25 && RIGHT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RIGHT_MOTOR_ID - 1);
 8009e40:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e42:	f043 0302 	orr.w	r3, r3, #2
 8009e46:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
#ifdef FR_MOTOR_ID
	if (FR_MOTOR_ID < 25 && FR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FR_MOTOR_ID - 1);
 8009e48:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e4a:	f043 0310 	orr.w	r3, r3, #16
 8009e4e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FL_MOTOR_ID
	if (FL_MOTOR_ID < 25 && FL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FL_MOTOR_ID - 1);
 8009e50:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e52:	f043 0320 	orr.w	r3, r3, #32
 8009e56:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BL_MOTOR_ID
	if (BL_MOTOR_ID < 25 && BL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BL_MOTOR_ID - 1);
 8009e58:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e5a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009e5e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BR_MOTOR_ID
	if (BR_MOTOR_ID < 25 && BR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BR_MOTOR_ID - 1);
 8009e60:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e62:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009e66:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef LFRICTION_MOTOR_ID
	if (LFRICTION_MOTOR_ID < 25 && LFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LFRICTION_MOTOR_ID - 1);
 8009e68:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e6a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009e6e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RFRICTION_MOTOR_ID
	if (RFRICTION_MOTOR_ID < 25 && RFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RFRICTION_MOTOR_ID - 1);
 8009e70:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e72:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8009e76:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FEEDER_MOTOR_ID
	if (FEEDER_MOTOR_ID < 25 && FEEDER_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FEEDER_MOTOR_ID - 1);
 8009e78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e7a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8009e7e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef PITCH_MOTOR_ID
	if (PITCH_MOTOR_ID < 25 && PITCH_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (PITCH_MOTOR_ID - 1);
 8009e80:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e82:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8009e86:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef YAW_MOTOR_ID
	if (YAW_MOTOR_ID < 25 && YAW_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (YAW_MOTOR_ID - 1);
 8009e88:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e8a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8009e8e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
	TickType_t start_time;
//	uint32_t last_time;
	while (1) {
		start_time = xTaskGetTickCount();
 8009e90:	f00e fbd0 	bl	8018634 <xTaskGetTickCount>
 8009e94:	4603      	mov	r3, r0
 8009e96:	60fb      	str	r3, [r7, #12]
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8009e98:	4b30      	ldr	r3, [pc, #192]	@ (8009f5c <motor_control_task+0x13c>)
 8009e9a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8009e9e:	2b01      	cmp	r3, #1
 8009ea0:	d162      	bne.n	8009f68 <motor_control_task+0x148>
			CAN_send_data[0] = 0;
 8009ea2:	2300      	movs	r3, #0
 8009ea4:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = 0;
 8009ea6:	2300      	movs	r3, #0
 8009ea8:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = 0;
 8009eaa:	2300      	movs	r3, #0
 8009eac:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = 0;
 8009eae:	2300      	movs	r3, #0
 8009eb0:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = 0;
 8009eb2:	2300      	movs	r3, #0
 8009eb4:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = 0;
 8009eb6:	2300      	movs	r3, #0
 8009eb8:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = 0;
 8009eba:	2300      	movs	r3, #0
 8009ebc:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = 0;
 8009ebe:	2300      	movs	r3, #0
 8009ec0:	76fb      	strb	r3, [r7, #27]
			CAN_tx_message.StdId = 0x200;
 8009ec2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009ec6:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009ec8:	f107 0310 	add.w	r3, r7, #16
 8009ecc:	f107 0214 	add.w	r2, r7, #20
 8009ed0:	f107 011c 	add.w	r1, r7, #28
 8009ed4:	4822      	ldr	r0, [pc, #136]	@ (8009f60 <motor_control_task+0x140>)
 8009ed6:	f001 fd45 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 8009eda:	f107 0310 	add.w	r3, r7, #16
 8009ede:	f107 0214 	add.w	r2, r7, #20
 8009ee2:	f107 011c 	add.w	r1, r7, #28
 8009ee6:	481f      	ldr	r0, [pc, #124]	@ (8009f64 <motor_control_task+0x144>)
 8009ee8:	f001 fd3c 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);
 8009eec:	2001      	movs	r0, #1
 8009eee:	f00e fa4d 	bl	801838c <vTaskDelay>
			CAN_tx_message.StdId = 0x1FF;
 8009ef2:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8009ef6:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009ef8:	f107 0310 	add.w	r3, r7, #16
 8009efc:	f107 0214 	add.w	r2, r7, #20
 8009f00:	f107 011c 	add.w	r1, r7, #28
 8009f04:	4816      	ldr	r0, [pc, #88]	@ (8009f60 <motor_control_task+0x140>)
 8009f06:	f001 fd2d 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 8009f0a:	f107 0310 	add.w	r3, r7, #16
 8009f0e:	f107 0214 	add.w	r2, r7, #20
 8009f12:	f107 011c 	add.w	r1, r7, #28
 8009f16:	4813      	ldr	r0, [pc, #76]	@ (8009f64 <motor_control_task+0x144>)
 8009f18:	f001 fd24 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);;
 8009f1c:	2001      	movs	r0, #1
 8009f1e:	f00e fa35 	bl	801838c <vTaskDelay>
			CAN_tx_message.StdId = 0x2FF;
 8009f22:	f240 23ff 	movw	r3, #767	@ 0x2ff
 8009f26:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009f28:	f107 0310 	add.w	r3, r7, #16
 8009f2c:	f107 0214 	add.w	r2, r7, #20
 8009f30:	f107 011c 	add.w	r1, r7, #28
 8009f34:	480a      	ldr	r0, [pc, #40]	@ (8009f60 <motor_control_task+0x140>)
 8009f36:	f001 fd15 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 8009f3a:	f107 0310 	add.w	r3, r7, #16
 8009f3e:	f107 0214 	add.w	r2, r7, #20
 8009f42:	f107 011c 	add.w	r1, r7, #28
 8009f46:	4807      	ldr	r0, [pc, #28]	@ (8009f64 <motor_control_task+0x144>)
 8009f48:	f001 fd0c 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelayUntil(&start_time, 5);
 8009f4c:	f107 030c 	add.w	r3, r7, #12
 8009f50:	2105      	movs	r1, #5
 8009f52:	4618      	mov	r0, r3
 8009f54:	f00e f99a 	bl	801828c <vTaskDelayUntil>
			continue;
 8009f58:	e1dd      	b.n	800a316 <motor_control_task+0x4f6>
 8009f5a:	bf00      	nop
 8009f5c:	20000808 	.word	0x20000808
 8009f60:	200008e4 	.word	0x200008e4
 8009f64:	2000090c 	.word	0x2000090c
		}
		TickType_t delay = 0;
 8009f68:	2300      	movs	r3, #0
 8009f6a:	63fb      	str	r3, [r7, #60]	@ 0x3c
		if (enabled_motors & 0x00000F) {
 8009f6c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f6e:	f003 030f 	and.w	r3, r3, #15
 8009f72:	2b00      	cmp	r3, #0
 8009f74:	d042      	beq.n	8009ffc <motor_control_task+0x1dc>
			CAN_tx_message.StdId = 0x200;
 8009f76:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009f7a:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x0].output;
 8009f7c:	4bb3      	ldr	r3, [pc, #716]	@ (800a24c <motor_control_task+0x42c>)
 8009f7e:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	@ 0xe0
 8009f82:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 8009f84:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 8009f88:	121b      	asrs	r3, r3, #8
 8009f8a:	b21b      	sxth	r3, r3
 8009f8c:	b2db      	uxtb	r3, r3
 8009f8e:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 8009f90:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8009f92:	b2db      	uxtb	r3, r3
 8009f94:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x1].output;
 8009f96:	4bad      	ldr	r3, [pc, #692]	@ (800a24c <motor_control_task+0x42c>)
 8009f98:	f8b3 31d0 	ldrh.w	r3, [r3, #464]	@ 0x1d0
 8009f9c:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 8009f9e:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 8009fa2:	121b      	asrs	r3, r3, #8
 8009fa4:	b21b      	sxth	r3, r3
 8009fa6:	b2db      	uxtb	r3, r3
 8009fa8:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 8009faa:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8009fac:	b2db      	uxtb	r3, r3
 8009fae:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x2].output;
 8009fb0:	4ba6      	ldr	r3, [pc, #664]	@ (800a24c <motor_control_task+0x42c>)
 8009fb2:	f8b3 32c0 	ldrh.w	r3, [r3, #704]	@ 0x2c0
 8009fb6:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 8009fb8:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 8009fbc:	121b      	asrs	r3, r3, #8
 8009fbe:	b21b      	sxth	r3, r3
 8009fc0:	b2db      	uxtb	r3, r3
 8009fc2:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 8009fc4:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8009fc6:	b2db      	uxtb	r3, r3
 8009fc8:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x3].output;
 8009fca:	4ba0      	ldr	r3, [pc, #640]	@ (800a24c <motor_control_task+0x42c>)
 8009fcc:	f8b3 33b0 	ldrh.w	r3, [r3, #944]	@ 0x3b0
 8009fd0:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 8009fd2:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 8009fd6:	121b      	asrs	r3, r3, #8
 8009fd8:	b21b      	sxth	r3, r3
 8009fda:	b2db      	uxtb	r3, r3
 8009fdc:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 8009fde:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8009fe0:	b2db      	uxtb	r3, r3
 8009fe2:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009fe4:	f107 0310 	add.w	r3, r7, #16
 8009fe8:	f107 0214 	add.w	r2, r7, #20
 8009fec:	f107 011c 	add.w	r1, r7, #28
 8009ff0:	4897      	ldr	r0, [pc, #604]	@ (800a250 <motor_control_task+0x430>)
 8009ff2:	f001 fcb7 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 8009ff6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009ff8:	3301      	adds	r3, #1
 8009ffa:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		if (enabled_motors & 0x00F000) {
 8009ffc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009ffe:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800a002:	2b00      	cmp	r3, #0
 800a004:	d03e      	beq.n	800a084 <motor_control_task+0x264>
			CAN_tx_message.StdId = 0x200;
 800a006:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800a00a:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x0 + 12].output >> 8;
 800a00c:	4b8f      	ldr	r3, [pc, #572]	@ (800a24c <motor_control_task+0x42c>)
 800a00e:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800a012:	121b      	asrs	r3, r3, #8
 800a014:	b21b      	sxth	r3, r3
 800a016:	b2db      	uxtb	r3, r3
 800a018:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x0 + 12].output;
 800a01a:	4b8c      	ldr	r3, [pc, #560]	@ (800a24c <motor_control_task+0x42c>)
 800a01c:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800a020:	b2db      	uxtb	r3, r3
 800a022:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x1 + 12].output >> 8;
 800a024:	4b89      	ldr	r3, [pc, #548]	@ (800a24c <motor_control_task+0x42c>)
 800a026:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800a02a:	121b      	asrs	r3, r3, #8
 800a02c:	b21b      	sxth	r3, r3
 800a02e:	b2db      	uxtb	r3, r3
 800a030:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x1 + 12].output;
 800a032:	4b86      	ldr	r3, [pc, #536]	@ (800a24c <motor_control_task+0x42c>)
 800a034:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800a038:	b2db      	uxtb	r3, r3
 800a03a:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x2 + 12].output >> 8;
 800a03c:	4b83      	ldr	r3, [pc, #524]	@ (800a24c <motor_control_task+0x42c>)
 800a03e:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800a042:	121b      	asrs	r3, r3, #8
 800a044:	b21b      	sxth	r3, r3
 800a046:	b2db      	uxtb	r3, r3
 800a048:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x2 + 12].output;
 800a04a:	4b80      	ldr	r3, [pc, #512]	@ (800a24c <motor_control_task+0x42c>)
 800a04c:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800a050:	b2db      	uxtb	r3, r3
 800a052:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x3 + 12].output >> 8;
 800a054:	4b7d      	ldr	r3, [pc, #500]	@ (800a24c <motor_control_task+0x42c>)
 800a056:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800a05a:	121b      	asrs	r3, r3, #8
 800a05c:	b21b      	sxth	r3, r3
 800a05e:	b2db      	uxtb	r3, r3
 800a060:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x3 + 12].output;
 800a062:	4b7a      	ldr	r3, [pc, #488]	@ (800a24c <motor_control_task+0x42c>)
 800a064:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800a068:	b2db      	uxtb	r3, r3
 800a06a:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a06c:	f107 0310 	add.w	r3, r7, #16
 800a070:	f107 0214 	add.w	r2, r7, #20
 800a074:	f107 011c 	add.w	r1, r7, #28
 800a078:	4876      	ldr	r0, [pc, #472]	@ (800a254 <motor_control_task+0x434>)
 800a07a:	f001 fc73 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a07e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a080:	3301      	adds	r3, #1
 800a082:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}

		vTaskDelay(1);
 800a084:	2001      	movs	r0, #1
 800a086:	f00e f981 	bl	801838c <vTaskDelay>

		if (enabled_motors & 0x0000F0) {
 800a08a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a08c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800a090:	2b00      	cmp	r3, #0
 800a092:	d042      	beq.n	800a11a <motor_control_task+0x2fa>
			CAN_tx_message.StdId = 0x1FF;
 800a094:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a098:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x4].output;
 800a09a:	4b6c      	ldr	r3, [pc, #432]	@ (800a24c <motor_control_task+0x42c>)
 800a09c:	f8b3 34a0 	ldrh.w	r3, [r3, #1184]	@ 0x4a0
 800a0a0:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a0a2:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0a6:	121b      	asrs	r3, r3, #8
 800a0a8:	b21b      	sxth	r3, r3
 800a0aa:	b2db      	uxtb	r3, r3
 800a0ac:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a0ae:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a0b0:	b2db      	uxtb	r3, r3
 800a0b2:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x5].output;
 800a0b4:	4b65      	ldr	r3, [pc, #404]	@ (800a24c <motor_control_task+0x42c>)
 800a0b6:	f8b3 3590 	ldrh.w	r3, [r3, #1424]	@ 0x590
 800a0ba:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a0bc:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0c0:	121b      	asrs	r3, r3, #8
 800a0c2:	b21b      	sxth	r3, r3
 800a0c4:	b2db      	uxtb	r3, r3
 800a0c6:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a0c8:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a0ca:	b2db      	uxtb	r3, r3
 800a0cc:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x6].output;
 800a0ce:	4b5f      	ldr	r3, [pc, #380]	@ (800a24c <motor_control_task+0x42c>)
 800a0d0:	f8b3 3680 	ldrh.w	r3, [r3, #1664]	@ 0x680
 800a0d4:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a0d6:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0da:	121b      	asrs	r3, r3, #8
 800a0dc:	b21b      	sxth	r3, r3
 800a0de:	b2db      	uxtb	r3, r3
 800a0e0:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a0e2:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a0e4:	b2db      	uxtb	r3, r3
 800a0e6:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x7].output;
 800a0e8:	4b58      	ldr	r3, [pc, #352]	@ (800a24c <motor_control_task+0x42c>)
 800a0ea:	f8b3 3770 	ldrh.w	r3, [r3, #1904]	@ 0x770
 800a0ee:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a0f0:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0f4:	121b      	asrs	r3, r3, #8
 800a0f6:	b21b      	sxth	r3, r3
 800a0f8:	b2db      	uxtb	r3, r3
 800a0fa:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a0fc:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a0fe:	b2db      	uxtb	r3, r3
 800a100:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a102:	f107 0310 	add.w	r3, r7, #16
 800a106:	f107 0214 	add.w	r2, r7, #20
 800a10a:	f107 011c 	add.w	r1, r7, #28
 800a10e:	4850      	ldr	r0, [pc, #320]	@ (800a250 <motor_control_task+0x430>)
 800a110:	f001 fc28 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a114:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a116:	3301      	adds	r3, #1
 800a118:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x0F0000) {
 800a11a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a11c:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 800a120:	2b00      	cmp	r3, #0
 800a122:	d04a      	beq.n	800a1ba <motor_control_task+0x39a>
			CAN_tx_message.StdId = 0x1FF;
 800a124:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a128:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x4 + 12].output >> 8;
 800a12a:	4b48      	ldr	r3, [pc, #288]	@ (800a24c <motor_control_task+0x42c>)
 800a12c:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800a130:	121b      	asrs	r3, r3, #8
 800a132:	b21b      	sxth	r3, r3
 800a134:	b2db      	uxtb	r3, r3
 800a136:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x4 + 12].output;
 800a138:	4b44      	ldr	r3, [pc, #272]	@ (800a24c <motor_control_task+0x42c>)
 800a13a:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800a13e:	b2db      	uxtb	r3, r3
 800a140:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x5 + 12].output >> 8;
 800a142:	4b42      	ldr	r3, [pc, #264]	@ (800a24c <motor_control_task+0x42c>)
 800a144:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a148:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800a14c:	121b      	asrs	r3, r3, #8
 800a14e:	b21b      	sxth	r3, r3
 800a150:	b2db      	uxtb	r3, r3
 800a152:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x5 + 12].output;
 800a154:	4b3d      	ldr	r3, [pc, #244]	@ (800a24c <motor_control_task+0x42c>)
 800a156:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a15a:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800a15e:	b2db      	uxtb	r3, r3
 800a160:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x6 + 12].output >> 8;
 800a162:	4b3a      	ldr	r3, [pc, #232]	@ (800a24c <motor_control_task+0x42c>)
 800a164:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a168:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800a16c:	121b      	asrs	r3, r3, #8
 800a16e:	b21b      	sxth	r3, r3
 800a170:	b2db      	uxtb	r3, r3
 800a172:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x6 + 12].output;
 800a174:	4b35      	ldr	r3, [pc, #212]	@ (800a24c <motor_control_task+0x42c>)
 800a176:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a17a:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800a17e:	b2db      	uxtb	r3, r3
 800a180:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x7 + 12].output >> 8;
 800a182:	4b32      	ldr	r3, [pc, #200]	@ (800a24c <motor_control_task+0x42c>)
 800a184:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a188:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800a18c:	121b      	asrs	r3, r3, #8
 800a18e:	b21b      	sxth	r3, r3
 800a190:	b2db      	uxtb	r3, r3
 800a192:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x7 + 12].output;
 800a194:	4b2d      	ldr	r3, [pc, #180]	@ (800a24c <motor_control_task+0x42c>)
 800a196:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a19a:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800a19e:	b2db      	uxtb	r3, r3
 800a1a0:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a1a2:	f107 0310 	add.w	r3, r7, #16
 800a1a6:	f107 0214 	add.w	r2, r7, #20
 800a1aa:	f107 011c 	add.w	r1, r7, #28
 800a1ae:	4829      	ldr	r0, [pc, #164]	@ (800a254 <motor_control_task+0x434>)
 800a1b0:	f001 fbd8 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a1b4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a1b6:	3301      	adds	r3, #1
 800a1b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x000F00) {
 800a1ba:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a1bc:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800a1c0:	2b00      	cmp	r3, #0
 800a1c2:	d049      	beq.n	800a258 <motor_control_task+0x438>
			CAN_tx_message.StdId = 0x2FF;
 800a1c4:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a1c8:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x8].output;
 800a1ca:	4b20      	ldr	r3, [pc, #128]	@ (800a24c <motor_control_task+0x42c>)
 800a1cc:	f8b3 3860 	ldrh.w	r3, [r3, #2144]	@ 0x860
 800a1d0:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a1d2:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a1d6:	121b      	asrs	r3, r3, #8
 800a1d8:	b21b      	sxth	r3, r3
 800a1da:	b2db      	uxtb	r3, r3
 800a1dc:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a1de:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a1e0:	b2db      	uxtb	r3, r3
 800a1e2:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x9].output;
 800a1e4:	4b19      	ldr	r3, [pc, #100]	@ (800a24c <motor_control_task+0x42c>)
 800a1e6:	f8b3 3950 	ldrh.w	r3, [r3, #2384]	@ 0x950
 800a1ea:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a1ec:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a1f0:	121b      	asrs	r3, r3, #8
 800a1f2:	b21b      	sxth	r3, r3
 800a1f4:	b2db      	uxtb	r3, r3
 800a1f6:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a1f8:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a1fa:	b2db      	uxtb	r3, r3
 800a1fc:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0xA].output;
 800a1fe:	4b13      	ldr	r3, [pc, #76]	@ (800a24c <motor_control_task+0x42c>)
 800a200:	f8b3 3a40 	ldrh.w	r3, [r3, #2624]	@ 0xa40
 800a204:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a206:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a20a:	121b      	asrs	r3, r3, #8
 800a20c:	b21b      	sxth	r3, r3
 800a20e:	b2db      	uxtb	r3, r3
 800a210:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a212:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a214:	b2db      	uxtb	r3, r3
 800a216:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0xB].output;
 800a218:	4b0c      	ldr	r3, [pc, #48]	@ (800a24c <motor_control_task+0x42c>)
 800a21a:	f8b3 3b30 	ldrh.w	r3, [r3, #2864]	@ 0xb30
 800a21e:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a220:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a224:	121b      	asrs	r3, r3, #8
 800a226:	b21b      	sxth	r3, r3
 800a228:	b2db      	uxtb	r3, r3
 800a22a:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a22c:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a22e:	b2db      	uxtb	r3, r3
 800a230:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a232:	f107 0310 	add.w	r3, r7, #16
 800a236:	f107 0214 	add.w	r2, r7, #20
 800a23a:	f107 011c 	add.w	r1, r7, #28
 800a23e:	4804      	ldr	r0, [pc, #16]	@ (800a250 <motor_control_task+0x430>)
 800a240:	f001 fb90 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a244:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a246:	3301      	adds	r3, #1
 800a248:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a24a:	e005      	b.n	800a258 <motor_control_task+0x438>
 800a24c:	20001e48 	.word	0x20001e48
 800a250:	200008e4 	.word	0x200008e4
 800a254:	2000090c 	.word	0x2000090c
		}

		if (enabled_motors & 0xF00000) {
 800a258:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a25a:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 800a25e:	2b00      	cmp	r3, #0
 800a260:	d04e      	beq.n	800a300 <motor_control_task+0x4e0>
			CAN_tx_message.StdId = 0x2FF;
 800a262:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a266:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x8 + 12].output >> 8;
 800a268:	4b2b      	ldr	r3, [pc, #172]	@ (800a318 <motor_control_task+0x4f8>)
 800a26a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a26e:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800a272:	121b      	asrs	r3, r3, #8
 800a274:	b21b      	sxth	r3, r3
 800a276:	b2db      	uxtb	r3, r3
 800a278:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x8 + 12].output;
 800a27a:	4b27      	ldr	r3, [pc, #156]	@ (800a318 <motor_control_task+0x4f8>)
 800a27c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a280:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800a284:	b2db      	uxtb	r3, r3
 800a286:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] =  g_can_motors[0x9 + 12].output >> 8;
 800a288:	4b23      	ldr	r3, [pc, #140]	@ (800a318 <motor_control_task+0x4f8>)
 800a28a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a28e:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800a292:	121b      	asrs	r3, r3, #8
 800a294:	b21b      	sxth	r3, r3
 800a296:	b2db      	uxtb	r3, r3
 800a298:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] =  g_can_motors[0x9 + 12].output;
 800a29a:	4b1f      	ldr	r3, [pc, #124]	@ (800a318 <motor_control_task+0x4f8>)
 800a29c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2a0:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800a2a4:	b2db      	uxtb	r3, r3
 800a2a6:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0xA + 12].output >> 8;
 800a2a8:	4b1b      	ldr	r3, [pc, #108]	@ (800a318 <motor_control_task+0x4f8>)
 800a2aa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2ae:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800a2b2:	121b      	asrs	r3, r3, #8
 800a2b4:	b21b      	sxth	r3, r3
 800a2b6:	b2db      	uxtb	r3, r3
 800a2b8:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0xA + 12].output;
 800a2ba:	4b17      	ldr	r3, [pc, #92]	@ (800a318 <motor_control_task+0x4f8>)
 800a2bc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2c0:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800a2c4:	b2db      	uxtb	r3, r3
 800a2c6:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0xB + 12].output >> 8;
 800a2c8:	4b13      	ldr	r3, [pc, #76]	@ (800a318 <motor_control_task+0x4f8>)
 800a2ca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2ce:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800a2d2:	121b      	asrs	r3, r3, #8
 800a2d4:	b21b      	sxth	r3, r3
 800a2d6:	b2db      	uxtb	r3, r3
 800a2d8:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0xB + 12].output;
 800a2da:	4b0f      	ldr	r3, [pc, #60]	@ (800a318 <motor_control_task+0x4f8>)
 800a2dc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2e0:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800a2e4:	b2db      	uxtb	r3, r3
 800a2e6:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a2e8:	f107 0310 	add.w	r3, r7, #16
 800a2ec:	f107 0214 	add.w	r2, r7, #20
 800a2f0:	f107 011c 	add.w	r1, r7, #28
 800a2f4:	4809      	ldr	r0, [pc, #36]	@ (800a31c <motor_control_task+0x4fc>)
 800a2f6:	f001 fb35 	bl	800b964 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a2fa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a2fc:	3301      	adds	r3, #1
 800a2fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		delay = (delay > 5) ? delay : 5;
 800a300:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a302:	2b05      	cmp	r3, #5
 800a304:	bf38      	it	cc
 800a306:	2305      	movcc	r3, #5
 800a308:	63fb      	str	r3, [r7, #60]	@ 0x3c
//		last_time = get_microseconds();
		vTaskDelayUntil(&start_time, 2);
 800a30a:	f107 030c 	add.w	r3, r7, #12
 800a30e:	2102      	movs	r1, #2
 800a310:	4618      	mov	r0, r3
 800a312:	f00d ffbb 	bl	801828c <vTaskDelayUntil>
	while (1) {
 800a316:	e5bb      	b.n	8009e90 <motor_control_task+0x70>
 800a318:	20001e48 	.word	0x20001e48
 800a31c:	2000090c 	.word	0x2000090c

0800a320 <motors_process_task>:
double rev[24] = {0};
extern float motorOutRatio;



void motors_process_task(void *argument) {
 800a320:	b5b0      	push	{r4, r5, r7, lr}
 800a322:	b08e      	sub	sp, #56	@ 0x38
 800a324:	af00      	add	r7, sp, #0
 800a326:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800a328:	f04f 0200 	mov.w	r2, #0
 800a32c:	f04f 0300 	mov.w	r3, #0
 800a330:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
	double endtime = 0;
 800a334:	f04f 0200 	mov.w	r2, #0
 800a338:	f04f 0300 	mov.w	r3, #0
 800a33c:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
	double dt;
	vTaskDelay(5);
 800a340:	2005      	movs	r0, #5
 800a342:	f00e f823 	bl	801838c <vTaskDelay>
	double leftWheel_offset = (double)g_can_motors[1].raw_data.angle[0];
 800a346:	4b7c      	ldr	r3, [pc, #496]	@ (800a538 <motors_process_task+0x218>)
 800a348:	f9b3 30f4 	ldrsh.w	r3, [r3, #244]	@ 0xf4
 800a34c:	4618      	mov	r0, r3
 800a34e:	f7f6 f8e9 	bl	8000524 <__aeabi_i2d>
 800a352:	4602      	mov	r2, r0
 800a354:	460b      	mov	r3, r1
 800a356:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double rightWheel_offset = (double)g_can_motors[0].raw_data.angle[0];
 800a35a:	4b77      	ldr	r3, [pc, #476]	@ (800a538 <motors_process_task+0x218>)
 800a35c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800a360:	4618      	mov	r0, r3
 800a362:	f7f6 f8df 	bl	8000524 <__aeabi_i2d>
 800a366:	4602      	mov	r2, r0
 800a368:	460b      	mov	r3, r1
 800a36a:	e9c7 2306 	strd	r2, r3, [r7, #24]
	g_can_motors[1].rpm_pid.kp = 5000;
 800a36e:	4b72      	ldr	r3, [pc, #456]	@ (800a538 <motors_process_task+0x218>)
 800a370:	4a72      	ldr	r2, [pc, #456]	@ (800a53c <motors_process_task+0x21c>)
 800a372:	f8c3 2128 	str.w	r2, [r3, #296]	@ 0x128
	g_can_motors[0].rpm_pid.kp = 5000;
 800a376:	4b70      	ldr	r3, [pc, #448]	@ (800a538 <motors_process_task+0x218>)
 800a378:	4a70      	ldr	r2, [pc, #448]	@ (800a53c <motors_process_task+0x21c>)
 800a37a:	639a      	str	r2, [r3, #56]	@ 0x38
	g_can_motors[1].rpm_pid.ki = 0;
 800a37c:	4b6e      	ldr	r3, [pc, #440]	@ (800a538 <motors_process_task+0x218>)
 800a37e:	f04f 0200 	mov.w	r2, #0
 800a382:	f8c3 212c 	str.w	r2, [r3, #300]	@ 0x12c
	g_can_motors[0].rpm_pid.ki = 0;
 800a386:	4b6c      	ldr	r3, [pc, #432]	@ (800a538 <motors_process_task+0x218>)
 800a388:	f04f 0200 	mov.w	r2, #0
 800a38c:	63da      	str	r2, [r3, #60]	@ 0x3c
	g_can_motors[1].rpm_pid.kd = 0;
 800a38e:	4b6a      	ldr	r3, [pc, #424]	@ (800a538 <motors_process_task+0x218>)
 800a390:	f04f 0200 	mov.w	r2, #0
 800a394:	f8c3 2130 	str.w	r2, [r3, #304]	@ 0x130
	g_can_motors[0].rpm_pid.kd = 0;
 800a398:	4b67      	ldr	r3, [pc, #412]	@ (800a538 <motors_process_task+0x218>)
 800a39a:	f04f 0200 	mov.w	r2, #0
 800a39e:	641a      	str	r2, [r3, #64]	@ 0x40
	g_can_motors[1].rpm_pid.max_out = 10000;
 800a3a0:	4b65      	ldr	r3, [pc, #404]	@ (800a538 <motors_process_task+0x218>)
 800a3a2:	4a67      	ldr	r2, [pc, #412]	@ (800a540 <motors_process_task+0x220>)
 800a3a4:	f8c3 2144 	str.w	r2, [r3, #324]	@ 0x144
	g_can_motors[0].rpm_pid.max_out = 10000;
 800a3a8:	4b63      	ldr	r3, [pc, #396]	@ (800a538 <motors_process_task+0x218>)
 800a3aa:	4a65      	ldr	r2, [pc, #404]	@ (800a540 <motors_process_task+0x220>)
 800a3ac:	655a      	str	r2, [r3, #84]	@ 0x54
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800a3ae:	f7f7 ff07 	bl	80021c0 <get_microseconds>
 800a3b2:	4603      	mov	r3, r0
 800a3b4:	4618      	mov	r0, r3
 800a3b6:	f7f6 f8a5 	bl	8000504 <__aeabi_ui2d>
 800a3ba:	4602      	mov	r2, r0
 800a3bc:	460b      	mov	r3, r1
 800a3be:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
        dt = endtime - starttime;
 800a3c2:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800a3c6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800a3ca:	f7f5 ff5d 	bl	8000288 <__aeabi_dsub>
 800a3ce:	4602      	mov	r2, r0
 800a3d0:	460b      	mov	r3, r1
 800a3d2:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800a3d6:	f00e f92d 	bl	8018634 <xTaskGetTickCount>
 800a3da:	4603      	mov	r3, r0
 800a3dc:	60fb      	str	r3, [r7, #12]
        raw_angle_to_rad(g_can_motors); // Pass the array directly
 800a3de:	4856      	ldr	r0, [pc, #344]	@ (800a538 <motors_process_task+0x218>)
 800a3e0:	f000 f8ca 	bl	800a578 <raw_angle_to_rad>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[4], +1.57, 1);//3.62+PI+ // left joint[1]
 800a3e4:	2101      	movs	r1, #1
 800a3e6:	ed9f 0a57 	vldr	s0, [pc, #348]	@ 800a544 <motors_process_task+0x224>
 800a3ea:	4857      	ldr	r0, [pc, #348]	@ (800a548 <motors_process_task+0x228>)
 800a3ec:	f000 f94c 	bl	800a688 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[5], +0.48, 1); // leftjoint[0]
 800a3f0:	2101      	movs	r1, #1
 800a3f2:	ed9f 0a56 	vldr	s0, [pc, #344]	@ 800a54c <motors_process_task+0x22c>
 800a3f6:	4856      	ldr	r0, [pc, #344]	@ (800a550 <motors_process_task+0x230>)
 800a3f8:	f000 f946 	bl	800a688 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[6], -1.5, 1);
 800a3fc:	2101      	movs	r1, #1
 800a3fe:	eebf 0a08 	vmov.f32	s0, #248	@ 0xbfc00000 -1.5
 800a402:	4854      	ldr	r0, [pc, #336]	@ (800a554 <motors_process_task+0x234>)
 800a404:	f000 f940 	bl	800a688 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[7], 0.53-1.103+1.07, 1);
 800a408:	2101      	movs	r1, #1
 800a40a:	ed9f 0a53 	vldr	s0, [pc, #332]	@ 800a558 <motors_process_task+0x238>
 800a40e:	4853      	ldr	r0, [pc, #332]	@ (800a55c <motors_process_task+0x23c>)
 800a410:	f000 f93a 	bl	800a688 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[1], 0, -1);
 800a414:	f04f 31ff 	mov.w	r1, #4294967295
 800a418:	ed9f 0a51 	vldr	s0, [pc, #324]	@ 800a560 <motors_process_task+0x240>
 800a41c:	4851      	ldr	r0, [pc, #324]	@ (800a564 <motors_process_task+0x244>)
 800a41e:	f000 f933 	bl	800a688 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[0], 0, 1);
 800a422:	2101      	movs	r1, #1
 800a424:	ed9f 0a4e 	vldr	s0, [pc, #312]	@ 800a560 <motors_process_task+0x240>
 800a428:	4843      	ldr	r0, [pc, #268]	@ (800a538 <motors_process_task+0x218>)
 800a42a:	f000 f92d 	bl	800a688 <motors_raw_angle_to_desired_angle_dir>
        motors_torque_to_current_6020(&g_can_motors[4],0,1.0);
 800a42e:	ed9f 1b3e 	vldr	d1, [pc, #248]	@ 800a528 <motors_process_task+0x208>
 800a432:	ed9f 0a4b 	vldr	s0, [pc, #300]	@ 800a560 <motors_process_task+0x240>
 800a436:	4844      	ldr	r0, [pc, #272]	@ (800a548 <motors_process_task+0x228>)
 800a438:	f000 f986 	bl	800a748 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[5],0,1.0);
 800a43c:	ed9f 1b3a 	vldr	d1, [pc, #232]	@ 800a528 <motors_process_task+0x208>
 800a440:	ed9f 0a47 	vldr	s0, [pc, #284]	@ 800a560 <motors_process_task+0x240>
 800a444:	4842      	ldr	r0, [pc, #264]	@ (800a550 <motors_process_task+0x230>)
 800a446:	f000 f97f 	bl	800a748 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[6],0,1.0);
 800a44a:	ed9f 1b37 	vldr	d1, [pc, #220]	@ 800a528 <motors_process_task+0x208>
 800a44e:	ed9f 0a44 	vldr	s0, [pc, #272]	@ 800a560 <motors_process_task+0x240>
 800a452:	4840      	ldr	r0, [pc, #256]	@ (800a554 <motors_process_task+0x234>)
 800a454:	f000 f978 	bl	800a748 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[7],0,1.0);
 800a458:	ed9f 1b33 	vldr	d1, [pc, #204]	@ 800a528 <motors_process_task+0x208>
 800a45c:	ed9f 0a40 	vldr	s0, [pc, #256]	@ 800a560 <motors_process_task+0x240>
 800a460:	483e      	ldr	r0, [pc, #248]	@ (800a55c <motors_process_task+0x23c>)
 800a462:	f000 f971 	bl	800a748 <motors_torque_to_current_6020>
        motors_torque_to_current_3508_gearbox(&g_can_motors[0],15,1.0);
 800a466:	ed9f 1b30 	vldr	d1, [pc, #192]	@ 800a528 <motors_process_task+0x208>
 800a46a:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800a46e:	4832      	ldr	r0, [pc, #200]	@ (800a538 <motors_process_task+0x218>)
 800a470:	f000 f9f6 	bl	800a860 <motors_torque_to_current_3508_gearbox>
        motors_torque_to_current_3508_gearbox(&g_can_motors[1],15,-1.0);
 800a474:	ed9f 1b2e 	vldr	d1, [pc, #184]	@ 800a530 <motors_process_task+0x210>
 800a478:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800a47c:	4839      	ldr	r0, [pc, #228]	@ (800a564 <motors_process_task+0x244>)
 800a47e:	f000 f9ef 	bl	800a860 <motors_torque_to_current_3508_gearbox>


        speed_pid((double)g_can_motors[1].torque ,(double)g_can_motors[1].raw_data.rpm/1000, &g_can_motors[1].rpm_pid);
 800a482:	4b2d      	ldr	r3, [pc, #180]	@ (800a538 <motors_process_task+0x218>)
 800a484:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800a488:	4618      	mov	r0, r3
 800a48a:	f7f6 f85d 	bl	8000548 <__aeabi_f2d>
 800a48e:	4604      	mov	r4, r0
 800a490:	460d      	mov	r5, r1
 800a492:	4b29      	ldr	r3, [pc, #164]	@ (800a538 <motors_process_task+0x218>)
 800a494:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	@ 0xf8
 800a498:	4618      	mov	r0, r3
 800a49a:	f7f6 f843 	bl	8000524 <__aeabi_i2d>
 800a49e:	f04f 0200 	mov.w	r2, #0
 800a4a2:	4b31      	ldr	r3, [pc, #196]	@ (800a568 <motors_process_task+0x248>)
 800a4a4:	f7f6 f9d2 	bl	800084c <__aeabi_ddiv>
 800a4a8:	4602      	mov	r2, r0
 800a4aa:	460b      	mov	r3, r1
 800a4ac:	ec43 2b17 	vmov	d7, r2, r3
 800a4b0:	482e      	ldr	r0, [pc, #184]	@ (800a56c <motors_process_task+0x24c>)
 800a4b2:	eeb0 1a47 	vmov.f32	s2, s14
 800a4b6:	eef0 1a67 	vmov.f32	s3, s15
 800a4ba:	ec45 4b10 	vmov	d0, r4, r5
 800a4be:	f7ff fbd9 	bl	8009c74 <speed_pid>
        speed_pid((double)g_can_motors[0].torque ,(double)g_can_motors[0].raw_data.rpm/1000, &g_can_motors[0].rpm_pid);
 800a4c2:	4b1d      	ldr	r3, [pc, #116]	@ (800a538 <motors_process_task+0x218>)
 800a4c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a4c6:	4618      	mov	r0, r3
 800a4c8:	f7f6 f83e 	bl	8000548 <__aeabi_f2d>
 800a4cc:	4604      	mov	r4, r0
 800a4ce:	460d      	mov	r5, r1
 800a4d0:	4b19      	ldr	r3, [pc, #100]	@ (800a538 <motors_process_task+0x218>)
 800a4d2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a4d6:	4618      	mov	r0, r3
 800a4d8:	f7f6 f824 	bl	8000524 <__aeabi_i2d>
 800a4dc:	f04f 0200 	mov.w	r2, #0
 800a4e0:	4b21      	ldr	r3, [pc, #132]	@ (800a568 <motors_process_task+0x248>)
 800a4e2:	f7f6 f9b3 	bl	800084c <__aeabi_ddiv>
 800a4e6:	4602      	mov	r2, r0
 800a4e8:	460b      	mov	r3, r1
 800a4ea:	ec43 2b17 	vmov	d7, r2, r3
 800a4ee:	4820      	ldr	r0, [pc, #128]	@ (800a570 <motors_process_task+0x250>)
 800a4f0:	eeb0 1a47 	vmov.f32	s2, s14
 800a4f4:	eef0 1a67 	vmov.f32	s3, s15
 800a4f8:	ec45 4b10 	vmov	d0, r4, r5
 800a4fc:	f7ff fbba 	bl	8009c74 <speed_pid>
//        g_can_motors[1].output = g_can_motors[1].rpm_pid.output;
//        g_can_motors[0].output = g_can_motors[0].rpm_pid.output;
        starttime = get_microseconds();
 800a500:	f7f7 fe5e 	bl	80021c0 <get_microseconds>
 800a504:	4603      	mov	r3, r0
 800a506:	4618      	mov	r0, r3
 800a508:	f7f5 fffc 	bl	8000504 <__aeabi_ui2d>
 800a50c:	4602      	mov	r2, r0
 800a50e:	460b      	mov	r3, r1
 800a510:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30




        vTaskDelayUntil(&start_time, 5);
 800a514:	f107 030c 	add.w	r3, r7, #12
 800a518:	2105      	movs	r1, #5
 800a51a:	4618      	mov	r0, r3
 800a51c:	f00d feb6 	bl	801828c <vTaskDelayUntil>
        endtime = get_microseconds();
 800a520:	bf00      	nop
 800a522:	e744      	b.n	800a3ae <motors_process_task+0x8e>
 800a524:	f3af 8000 	nop.w
 800a528:	00000000 	.word	0x00000000
 800a52c:	3ff00000 	.word	0x3ff00000
 800a530:	00000000 	.word	0x00000000
 800a534:	bff00000 	.word	0xbff00000
 800a538:	20001e48 	.word	0x20001e48
 800a53c:	459c4000 	.word	0x459c4000
 800a540:	461c4000 	.word	0x461c4000
 800a544:	3fc8f5c3 	.word	0x3fc8f5c3
 800a548:	20002208 	.word	0x20002208
 800a54c:	3ef5c28f 	.word	0x3ef5c28f
 800a550:	200022f8 	.word	0x200022f8
 800a554:	200023e8 	.word	0x200023e8
 800a558:	3efe76c9 	.word	0x3efe76c9
 800a55c:	200024d8 	.word	0x200024d8
 800a560:	00000000 	.word	0x00000000
 800a564:	20001f38 	.word	0x20001f38
 800a568:	408f4000 	.word	0x408f4000
 800a56c:	20001f70 	.word	0x20001f70
 800a570:	20001e80 	.word	0x20001e80
 800a574:	00000000 	.word	0x00000000

0800a578 <raw_angle_to_rad>:
    }
}

void raw_angle_to_rad(motor_data_t motor[]) { // Change the parameter to accept an array
 800a578:	b590      	push	{r4, r7, lr}
 800a57a:	b087      	sub	sp, #28
 800a57c:	af00      	add	r7, sp, #0
 800a57e:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 24; i++) {
 800a580:	2300      	movs	r3, #0
 800a582:	617b      	str	r3, [r7, #20]
 800a584:	e06b      	b.n	800a65e <raw_angle_to_rad+0xe6>
        // Update moving average history
        double continuous_angle = motor[i].raw_data.angle[0] + (-motor[i].angle_data.rev*8192);
 800a586:	697a      	ldr	r2, [r7, #20]
 800a588:	4613      	mov	r3, r2
 800a58a:	011b      	lsls	r3, r3, #4
 800a58c:	1a9b      	subs	r3, r3, r2
 800a58e:	011b      	lsls	r3, r3, #4
 800a590:	461a      	mov	r2, r3
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	4413      	add	r3, r2
 800a596:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800a59a:	4619      	mov	r1, r3
 800a59c:	697a      	ldr	r2, [r7, #20]
 800a59e:	4613      	mov	r3, r2
 800a5a0:	011b      	lsls	r3, r3, #4
 800a5a2:	1a9b      	subs	r3, r3, r2
 800a5a4:	011b      	lsls	r3, r3, #4
 800a5a6:	461a      	mov	r2, r3
 800a5a8:	687b      	ldr	r3, [r7, #4]
 800a5aa:	4413      	add	r3, r2
 800a5ac:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800a5b0:	4613      	mov	r3, r2
 800a5b2:	04db      	lsls	r3, r3, #19
 800a5b4:	1a9b      	subs	r3, r3, r2
 800a5b6:	035b      	lsls	r3, r3, #13
 800a5b8:	440b      	add	r3, r1
 800a5ba:	4618      	mov	r0, r3
 800a5bc:	f7f5 ffb2 	bl	8000524 <__aeabi_i2d>
 800a5c0:	4602      	mov	r2, r0
 800a5c2:	460b      	mov	r3, r1
 800a5c4:	e9c7 2302 	strd	r2, r3, [r7, #8]
        motor[i].raw_angle_rad = (continuous_angle / 8191.0) * 2 * PI;
 800a5c8:	a32a      	add	r3, pc, #168	@ (adr r3, 800a674 <raw_angle_to_rad+0xfc>)
 800a5ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5ce:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a5d2:	f7f6 f93b 	bl	800084c <__aeabi_ddiv>
 800a5d6:	4602      	mov	r2, r0
 800a5d8:	460b      	mov	r3, r1
 800a5da:	4610      	mov	r0, r2
 800a5dc:	4619      	mov	r1, r3
 800a5de:	4602      	mov	r2, r0
 800a5e0:	460b      	mov	r3, r1
 800a5e2:	f7f5 fe53 	bl	800028c <__adddf3>
 800a5e6:	4602      	mov	r2, r0
 800a5e8:	460b      	mov	r3, r1
 800a5ea:	4610      	mov	r0, r2
 800a5ec:	4619      	mov	r1, r3
 800a5ee:	a323      	add	r3, pc, #140	@ (adr r3, 800a67c <raw_angle_to_rad+0x104>)
 800a5f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5f4:	f7f6 f800 	bl	80005f8 <__aeabi_dmul>
 800a5f8:	4602      	mov	r2, r0
 800a5fa:	460b      	mov	r3, r1
 800a5fc:	4610      	mov	r0, r2
 800a5fe:	4619      	mov	r1, r3
 800a600:	697a      	ldr	r2, [r7, #20]
 800a602:	4613      	mov	r3, r2
 800a604:	011b      	lsls	r3, r3, #4
 800a606:	1a9b      	subs	r3, r3, r2
 800a608:	011b      	lsls	r3, r3, #4
 800a60a:	461a      	mov	r2, r3
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	189c      	adds	r4, r3, r2
 800a610:	f7f6 faea 	bl	8000be8 <__aeabi_d2f>
 800a614:	4603      	mov	r3, r0
 800a616:	6123      	str	r3, [r4, #16]
        motor[i].raw_angle_deg = (continuous_angle / 8191.0) * 360;
 800a618:	a316      	add	r3, pc, #88	@ (adr r3, 800a674 <raw_angle_to_rad+0xfc>)
 800a61a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a61e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a622:	f7f6 f913 	bl	800084c <__aeabi_ddiv>
 800a626:	4602      	mov	r2, r0
 800a628:	460b      	mov	r3, r1
 800a62a:	4610      	mov	r0, r2
 800a62c:	4619      	mov	r1, r3
 800a62e:	f04f 0200 	mov.w	r2, #0
 800a632:	4b0f      	ldr	r3, [pc, #60]	@ (800a670 <raw_angle_to_rad+0xf8>)
 800a634:	f7f5 ffe0 	bl	80005f8 <__aeabi_dmul>
 800a638:	4602      	mov	r2, r0
 800a63a:	460b      	mov	r3, r1
 800a63c:	4610      	mov	r0, r2
 800a63e:	4619      	mov	r1, r3
 800a640:	697a      	ldr	r2, [r7, #20]
 800a642:	4613      	mov	r3, r2
 800a644:	011b      	lsls	r3, r3, #4
 800a646:	1a9b      	subs	r3, r3, r2
 800a648:	011b      	lsls	r3, r3, #4
 800a64a:	461a      	mov	r2, r3
 800a64c:	687b      	ldr	r3, [r7, #4]
 800a64e:	189c      	adds	r4, r3, r2
 800a650:	f7f6 faca 	bl	8000be8 <__aeabi_d2f>
 800a654:	4603      	mov	r3, r0
 800a656:	6163      	str	r3, [r4, #20]
    for (int i = 0; i < 24; i++) {
 800a658:	697b      	ldr	r3, [r7, #20]
 800a65a:	3301      	adds	r3, #1
 800a65c:	617b      	str	r3, [r7, #20]
 800a65e:	697b      	ldr	r3, [r7, #20]
 800a660:	2b17      	cmp	r3, #23
 800a662:	dd90      	ble.n	800a586 <raw_angle_to_rad+0xe>
    }
}
 800a664:	bf00      	nop
 800a666:	bf00      	nop
 800a668:	371c      	adds	r7, #28
 800a66a:	46bd      	mov	sp, r7
 800a66c:	bd90      	pop	{r4, r7, pc}
 800a66e:	bf00      	nop
 800a670:	40768000 	.word	0x40768000
 800a674:	00000000 	.word	0x00000000
 800a678:	40bfff00 	.word	0x40bfff00
 800a67c:	60000000 	.word	0x60000000
 800a680:	400921fb 	.word	0x400921fb
 800a684:	00000000 	.word	0x00000000

0800a688 <motors_raw_angle_to_desired_angle_dir>:

void motors_raw_angle_to_desired_angle_dir(motor_data_t *motor, float offset, int dir) {
 800a688:	b580      	push	{r7, lr}
 800a68a:	b084      	sub	sp, #16
 800a68c:	af00      	add	r7, sp, #0
 800a68e:	60f8      	str	r0, [r7, #12]
 800a690:	ed87 0a02 	vstr	s0, [r7, #8]
 800a694:	6079      	str	r1, [r7, #4]
    if (dir == -1) {
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a69c:	d11b      	bne.n	800a6d6 <motors_raw_angle_to_desired_angle_dir+0x4e>
        motor->angle_rad = -motor->raw_angle_rad + offset;
 800a69e:	68fb      	ldr	r3, [r7, #12]
 800a6a0:	edd3 7a04 	vldr	s15, [r3, #16]
 800a6a4:	ed97 7a02 	vldr	s14, [r7, #8]
 800a6a8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800a6ac:	68fb      	ldr	r3, [r7, #12]
 800a6ae:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = -motor->raw_data.rpm * 0.10472;
 800a6b2:	68fb      	ldr	r3, [r7, #12]
 800a6b4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a6b8:	425b      	negs	r3, r3
 800a6ba:	4618      	mov	r0, r3
 800a6bc:	f7f5 ff32 	bl	8000524 <__aeabi_i2d>
 800a6c0:	a31d      	add	r3, pc, #116	@ (adr r3, 800a738 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800a6c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6c6:	f7f5 ff97 	bl	80005f8 <__aeabi_dmul>
 800a6ca:	4602      	mov	r2, r0
 800a6cc:	460b      	mov	r3, r1
 800a6ce:	68f9      	ldr	r1, [r7, #12]
 800a6d0:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800a6d4:	e019      	b.n	800a70a <motors_raw_angle_to_desired_angle_dir+0x82>
    } else {
        motor->angle_rad = motor->raw_angle_rad + offset;
 800a6d6:	68fb      	ldr	r3, [r7, #12]
 800a6d8:	ed93 7a04 	vldr	s14, [r3, #16]
 800a6dc:	edd7 7a02 	vldr	s15, [r7, #8]
 800a6e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a6e4:	68fb      	ldr	r3, [r7, #12]
 800a6e6:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = motor->raw_data.rpm * 0.10472;
 800a6ea:	68fb      	ldr	r3, [r7, #12]
 800a6ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a6f0:	4618      	mov	r0, r3
 800a6f2:	f7f5 ff17 	bl	8000524 <__aeabi_i2d>
 800a6f6:	a310      	add	r3, pc, #64	@ (adr r3, 800a738 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800a6f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6fc:	f7f5 ff7c 	bl	80005f8 <__aeabi_dmul>
 800a700:	4602      	mov	r2, r0
 800a702:	460b      	mov	r3, r1
 800a704:	68f9      	ldr	r1, [r7, #12]
 800a706:	e9c1 2308 	strd	r2, r3, [r1, #32]
    }
    motor->angle_deg = motor->angle_rad * (180.0 / PI); // Update the degree value as well
 800a70a:	68fb      	ldr	r3, [r7, #12]
 800a70c:	699b      	ldr	r3, [r3, #24]
 800a70e:	4618      	mov	r0, r3
 800a710:	f7f5 ff1a 	bl	8000548 <__aeabi_f2d>
 800a714:	a30a      	add	r3, pc, #40	@ (adr r3, 800a740 <motors_raw_angle_to_desired_angle_dir+0xb8>)
 800a716:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a71a:	f7f5 ff6d 	bl	80005f8 <__aeabi_dmul>
 800a71e:	4602      	mov	r2, r0
 800a720:	460b      	mov	r3, r1
 800a722:	4610      	mov	r0, r2
 800a724:	4619      	mov	r1, r3
 800a726:	f7f6 fa5f 	bl	8000be8 <__aeabi_d2f>
 800a72a:	4602      	mov	r2, r0
 800a72c:	68fb      	ldr	r3, [r7, #12]
 800a72e:	61da      	str	r2, [r3, #28]

}
 800a730:	bf00      	nop
 800a732:	3710      	adds	r7, #16
 800a734:	46bd      	mov	sp, r7
 800a736:	bd80      	pop	{r7, pc}
 800a738:	0f3cb3e5 	.word	0x0f3cb3e5
 800a73c:	3fbaceee 	.word	0x3fbaceee
 800a740:	0d03cf26 	.word	0x0d03cf26
 800a744:	404ca5dc 	.word	0x404ca5dc

0800a748 <motors_torque_to_current_6020>:

void motors_torque_to_current_6020(motor_data_t *motor, float deadzone,double dir) {
 800a748:	b580      	push	{r7, lr}
 800a74a:	b086      	sub	sp, #24
 800a74c:	af00      	add	r7, sp, #0
 800a74e:	60f8      	str	r0, [r7, #12]
 800a750:	ed87 0a02 	vstr	s0, [r7, #8]
 800a754:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800a758:	f04f 0200 	mov.w	r2, #0
 800a75c:	f04f 0300 	mov.w	r3, #0
 800a760:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800a764:	68fb      	ldr	r3, [r7, #12]
 800a766:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a76a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a76e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a772:	dd17      	ble.n	800a7a4 <motors_torque_to_current_6020+0x5c>
		current = 1.8 * motor->torque + 0.2;
 800a774:	68fb      	ldr	r3, [r7, #12]
 800a776:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a778:	4618      	mov	r0, r3
 800a77a:	f7f5 fee5 	bl	8000548 <__aeabi_f2d>
 800a77e:	a333      	add	r3, pc, #204	@ (adr r3, 800a84c <motors_torque_to_current_6020+0x104>)
 800a780:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a784:	f7f5 ff38 	bl	80005f8 <__aeabi_dmul>
 800a788:	4602      	mov	r2, r0
 800a78a:	460b      	mov	r3, r1
 800a78c:	4610      	mov	r0, r2
 800a78e:	4619      	mov	r1, r3
 800a790:	a330      	add	r3, pc, #192	@ (adr r3, 800a854 <motors_torque_to_current_6020+0x10c>)
 800a792:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a796:	f7f5 fd79 	bl	800028c <__adddf3>
 800a79a:	4602      	mov	r2, r0
 800a79c:	460b      	mov	r3, r1
 800a79e:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a7a2:	e025      	b.n	800a7f0 <motors_torque_to_current_6020+0xa8>
	} else if(motor->torque < 0){
 800a7a4:	68fb      	ldr	r3, [r7, #12]
 800a7a6:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a7aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a7ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a7b2:	d517      	bpl.n	800a7e4 <motors_torque_to_current_6020+0x9c>
		current = 1.8 * motor->torque - 0.2;
 800a7b4:	68fb      	ldr	r3, [r7, #12]
 800a7b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a7b8:	4618      	mov	r0, r3
 800a7ba:	f7f5 fec5 	bl	8000548 <__aeabi_f2d>
 800a7be:	a323      	add	r3, pc, #140	@ (adr r3, 800a84c <motors_torque_to_current_6020+0x104>)
 800a7c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7c4:	f7f5 ff18 	bl	80005f8 <__aeabi_dmul>
 800a7c8:	4602      	mov	r2, r0
 800a7ca:	460b      	mov	r3, r1
 800a7cc:	4610      	mov	r0, r2
 800a7ce:	4619      	mov	r1, r3
 800a7d0:	a320      	add	r3, pc, #128	@ (adr r3, 800a854 <motors_torque_to_current_6020+0x10c>)
 800a7d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7d6:	f7f5 fd57 	bl	8000288 <__aeabi_dsub>
 800a7da:	4602      	mov	r2, r0
 800a7dc:	460b      	mov	r3, r1
 800a7de:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a7e2:	e005      	b.n	800a7f0 <motors_torque_to_current_6020+0xa8>
	} else{
		current = 0;
 800a7e4:	f04f 0200 	mov.w	r2, #0
 800a7e8:	f04f 0300 	mov.w	r3, #0
 800a7ec:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/3.0)*16385.0;
 800a7f0:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a7f4:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a7f8:	f7f5 fefe 	bl	80005f8 <__aeabi_dmul>
 800a7fc:	4602      	mov	r2, r0
 800a7fe:	460b      	mov	r3, r1
 800a800:	4610      	mov	r0, r2
 800a802:	4619      	mov	r1, r3
 800a804:	f04f 0200 	mov.w	r2, #0
 800a808:	4b0f      	ldr	r3, [pc, #60]	@ (800a848 <motors_torque_to_current_6020+0x100>)
 800a80a:	f7f6 f81f 	bl	800084c <__aeabi_ddiv>
 800a80e:	4602      	mov	r2, r0
 800a810:	460b      	mov	r3, r1
 800a812:	4610      	mov	r0, r2
 800a814:	4619      	mov	r1, r3
 800a816:	a30a      	add	r3, pc, #40	@ (adr r3, 800a840 <motors_torque_to_current_6020+0xf8>)
 800a818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a81c:	f7f5 feec 	bl	80005f8 <__aeabi_dmul>
 800a820:	4602      	mov	r2, r0
 800a822:	460b      	mov	r3, r1
 800a824:	4610      	mov	r0, r2
 800a826:	4619      	mov	r1, r3
 800a828:	f7f6 f996 	bl	8000b58 <__aeabi_d2iz>
 800a82c:	4603      	mov	r3, r0
 800a82e:	b21a      	sxth	r2, r3
 800a830:	68fb      	ldr	r3, [r7, #12]
 800a832:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800a836:	bf00      	nop
 800a838:	3718      	adds	r7, #24
 800a83a:	46bd      	mov	sp, r7
 800a83c:	bd80      	pop	{r7, pc}
 800a83e:	bf00      	nop
 800a840:	00000000 	.word	0x00000000
 800a844:	40d00040 	.word	0x40d00040
 800a848:	40080000 	.word	0x40080000
 800a84c:	cccccccd 	.word	0xcccccccd
 800a850:	3ffccccc 	.word	0x3ffccccc
 800a854:	9999999a 	.word	0x9999999a
 800a858:	3fc99999 	.word	0x3fc99999
 800a85c:	00000000 	.word	0x00000000

0800a860 <motors_torque_to_current_3508_gearbox>:
void motors_torque_to_current_3508_gearbox(motor_data_t *motor, float maxCurrent,double dir) {
 800a860:	b580      	push	{r7, lr}
 800a862:	b086      	sub	sp, #24
 800a864:	af00      	add	r7, sp, #0
 800a866:	60f8      	str	r0, [r7, #12]
 800a868:	ed87 0a02 	vstr	s0, [r7, #8]
 800a86c:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800a870:	f04f 0200 	mov.w	r2, #0
 800a874:	f04f 0300 	mov.w	r3, #0
 800a878:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800a87c:	68fb      	ldr	r3, [r7, #12]
 800a87e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a882:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a88a:	dd20      	ble.n	800a8ce <motors_torque_to_current_3508_gearbox+0x6e>
		current = (motor->torque / 4.5) * 20 + 0.08;
 800a88c:	68fb      	ldr	r3, [r7, #12]
 800a88e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a890:	4618      	mov	r0, r3
 800a892:	f7f5 fe59 	bl	8000548 <__aeabi_f2d>
 800a896:	f04f 0200 	mov.w	r2, #0
 800a89a:	4b55      	ldr	r3, [pc, #340]	@ (800a9f0 <motors_torque_to_current_3508_gearbox+0x190>)
 800a89c:	f7f5 ffd6 	bl	800084c <__aeabi_ddiv>
 800a8a0:	4602      	mov	r2, r0
 800a8a2:	460b      	mov	r3, r1
 800a8a4:	4610      	mov	r0, r2
 800a8a6:	4619      	mov	r1, r3
 800a8a8:	f04f 0200 	mov.w	r2, #0
 800a8ac:	4b51      	ldr	r3, [pc, #324]	@ (800a9f4 <motors_torque_to_current_3508_gearbox+0x194>)
 800a8ae:	f7f5 fea3 	bl	80005f8 <__aeabi_dmul>
 800a8b2:	4602      	mov	r2, r0
 800a8b4:	460b      	mov	r3, r1
 800a8b6:	4610      	mov	r0, r2
 800a8b8:	4619      	mov	r1, r3
 800a8ba:	a349      	add	r3, pc, #292	@ (adr r3, 800a9e0 <motors_torque_to_current_3508_gearbox+0x180>)
 800a8bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a8c0:	f7f5 fce4 	bl	800028c <__adddf3>
 800a8c4:	4602      	mov	r2, r0
 800a8c6:	460b      	mov	r3, r1
 800a8c8:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a8cc:	e02e      	b.n	800a92c <motors_torque_to_current_3508_gearbox+0xcc>
	} else if(motor->torque < 0){
 800a8ce:	68fb      	ldr	r3, [r7, #12]
 800a8d0:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a8d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a8d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8dc:	d520      	bpl.n	800a920 <motors_torque_to_current_3508_gearbox+0xc0>
		current = (motor->torque / 4.5) * 20 - 0.08;
 800a8de:	68fb      	ldr	r3, [r7, #12]
 800a8e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a8e2:	4618      	mov	r0, r3
 800a8e4:	f7f5 fe30 	bl	8000548 <__aeabi_f2d>
 800a8e8:	f04f 0200 	mov.w	r2, #0
 800a8ec:	4b40      	ldr	r3, [pc, #256]	@ (800a9f0 <motors_torque_to_current_3508_gearbox+0x190>)
 800a8ee:	f7f5 ffad 	bl	800084c <__aeabi_ddiv>
 800a8f2:	4602      	mov	r2, r0
 800a8f4:	460b      	mov	r3, r1
 800a8f6:	4610      	mov	r0, r2
 800a8f8:	4619      	mov	r1, r3
 800a8fa:	f04f 0200 	mov.w	r2, #0
 800a8fe:	4b3d      	ldr	r3, [pc, #244]	@ (800a9f4 <motors_torque_to_current_3508_gearbox+0x194>)
 800a900:	f7f5 fe7a 	bl	80005f8 <__aeabi_dmul>
 800a904:	4602      	mov	r2, r0
 800a906:	460b      	mov	r3, r1
 800a908:	4610      	mov	r0, r2
 800a90a:	4619      	mov	r1, r3
 800a90c:	a334      	add	r3, pc, #208	@ (adr r3, 800a9e0 <motors_torque_to_current_3508_gearbox+0x180>)
 800a90e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a912:	f7f5 fcb9 	bl	8000288 <__aeabi_dsub>
 800a916:	4602      	mov	r2, r0
 800a918:	460b      	mov	r3, r1
 800a91a:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a91e:	e005      	b.n	800a92c <motors_torque_to_current_3508_gearbox+0xcc>
	} else{
		current = 0;
 800a920:	f04f 0200 	mov.w	r2, #0
 800a924:	f04f 0300 	mov.w	r3, #0
 800a928:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	if (current > maxCurrent){
 800a92c:	68b8      	ldr	r0, [r7, #8]
 800a92e:	f7f5 fe0b 	bl	8000548 <__aeabi_f2d>
 800a932:	4602      	mov	r2, r0
 800a934:	460b      	mov	r3, r1
 800a936:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a93a:	f7f6 f8ed 	bl	8000b18 <__aeabi_dcmpgt>
 800a93e:	4603      	mov	r3, r0
 800a940:	2b00      	cmp	r3, #0
 800a942:	d007      	beq.n	800a954 <motors_torque_to_current_3508_gearbox+0xf4>
		current = maxCurrent;
 800a944:	68b8      	ldr	r0, [r7, #8]
 800a946:	f7f5 fdff 	bl	8000548 <__aeabi_f2d>
 800a94a:	4602      	mov	r2, r0
 800a94c:	460b      	mov	r3, r1
 800a94e:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a952:	e01e      	b.n	800a992 <motors_torque_to_current_3508_gearbox+0x132>
	} else if(current < -maxCurrent){
 800a954:	edd7 7a02 	vldr	s15, [r7, #8]
 800a958:	eef1 7a67 	vneg.f32	s15, s15
 800a95c:	ee17 3a90 	vmov	r3, s15
 800a960:	4618      	mov	r0, r3
 800a962:	f7f5 fdf1 	bl	8000548 <__aeabi_f2d>
 800a966:	4602      	mov	r2, r0
 800a968:	460b      	mov	r3, r1
 800a96a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a96e:	f7f6 f8b5 	bl	8000adc <__aeabi_dcmplt>
 800a972:	4603      	mov	r3, r0
 800a974:	2b00      	cmp	r3, #0
 800a976:	d00c      	beq.n	800a992 <motors_torque_to_current_3508_gearbox+0x132>
		current = -maxCurrent;
 800a978:	edd7 7a02 	vldr	s15, [r7, #8]
 800a97c:	eef1 7a67 	vneg.f32	s15, s15
 800a980:	ee17 3a90 	vmov	r3, s15
 800a984:	4618      	mov	r0, r3
 800a986:	f7f5 fddf 	bl	8000548 <__aeabi_f2d>
 800a98a:	4602      	mov	r2, r0
 800a98c:	460b      	mov	r3, r1
 800a98e:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/20.0)*16385.0;
 800a992:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a996:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a99a:	f7f5 fe2d 	bl	80005f8 <__aeabi_dmul>
 800a99e:	4602      	mov	r2, r0
 800a9a0:	460b      	mov	r3, r1
 800a9a2:	4610      	mov	r0, r2
 800a9a4:	4619      	mov	r1, r3
 800a9a6:	f04f 0200 	mov.w	r2, #0
 800a9aa:	4b12      	ldr	r3, [pc, #72]	@ (800a9f4 <motors_torque_to_current_3508_gearbox+0x194>)
 800a9ac:	f7f5 ff4e 	bl	800084c <__aeabi_ddiv>
 800a9b0:	4602      	mov	r2, r0
 800a9b2:	460b      	mov	r3, r1
 800a9b4:	4610      	mov	r0, r2
 800a9b6:	4619      	mov	r1, r3
 800a9b8:	a30b      	add	r3, pc, #44	@ (adr r3, 800a9e8 <motors_torque_to_current_3508_gearbox+0x188>)
 800a9ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a9be:	f7f5 fe1b 	bl	80005f8 <__aeabi_dmul>
 800a9c2:	4602      	mov	r2, r0
 800a9c4:	460b      	mov	r3, r1
 800a9c6:	4610      	mov	r0, r2
 800a9c8:	4619      	mov	r1, r3
 800a9ca:	f7f6 f8c5 	bl	8000b58 <__aeabi_d2iz>
 800a9ce:	4603      	mov	r3, r0
 800a9d0:	b21a      	sxth	r2, r3
 800a9d2:	68fb      	ldr	r3, [r7, #12]
 800a9d4:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800a9d8:	bf00      	nop
 800a9da:	3718      	adds	r7, #24
 800a9dc:	46bd      	mov	sp, r7
 800a9de:	bd80      	pop	{r7, pc}
 800a9e0:	47ae147b 	.word	0x47ae147b
 800a9e4:	3fb47ae1 	.word	0x3fb47ae1
 800a9e8:	00000000 	.word	0x00000000
 800a9ec:	40d00040 	.word	0x40d00040
 800a9f0:	40120000 	.word	0x40120000
 800a9f4:	40340000 	.word	0x40340000

0800a9f8 <referee_processing_task>:
uint32_t ref_mag_data_txno = 0;
uint8_t g_ref_tx_seq = 0;

queue_t referee_uart_q;

void referee_processing_task(void *argument) {
 800a9f8:	b5b0      	push	{r4, r5, r7, lr}
 800a9fa:	b088      	sub	sp, #32
 800a9fc:	af00      	add	r7, sp, #0
 800a9fe:	6078      	str	r0, [r7, #4]
	g_referee_limiters.robot_level = 0;
 800aa00:	4ba3      	ldr	r3, [pc, #652]	@ (800ac90 <referee_processing_task+0x298>)
 800aa02:	2200      	movs	r2, #0
 800aa04:	731a      	strb	r2, [r3, #12]
	uint8_t ref_buffer[2];
	ref_processing_status_t proc_status;
	g_referee_limiters.feeding_speed = LV1_FEEDER;
 800aa06:	4ba2      	ldr	r3, [pc, #648]	@ (800ac90 <referee_processing_task+0x298>)
 800aa08:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800aa0c:	801a      	strh	r2, [r3, #0]
	g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800aa0e:	4ba0      	ldr	r3, [pc, #640]	@ (800ac90 <referee_processing_task+0x298>)
 800aa10:	2213      	movs	r2, #19
 800aa12:	805a      	strh	r2, [r3, #2]
//	g_referee_limiters.wheel_power_limit = LV1_POWER;
	g_referee_limiters.robot_level = 1;
 800aa14:	4b9e      	ldr	r3, [pc, #632]	@ (800ac90 <referee_processing_task+0x298>)
 800aa16:	2201      	movs	r2, #1
 800aa18:	731a      	strb	r2, [r3, #12]
	status_led(7, on_led);
 800aa1a:	2100      	movs	r1, #0
 800aa1c:	2007      	movs	r0, #7
 800aa1e:	f7f7 facb 	bl	8001fb8 <status_led>
	status_led(8, off_led);
 800aa22:	2101      	movs	r1, #1
 800aa24:	2008      	movs	r0, #8
 800aa26:	f7f7 fac7 	bl	8001fb8 <status_led>
	ref_robot_data.robot_id = 0;
 800aa2a:	4b9a      	ldr	r3, [pc, #616]	@ (800ac94 <referee_processing_task+0x29c>)
 800aa2c:	2200      	movs	r2, #0
 800aa2e:	701a      	strb	r2, [r3, #0]
	ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800aa30:	f107 0108 	add.w	r1, r7, #8
 800aa34:	4b98      	ldr	r3, [pc, #608]	@ (800ac98 <referee_processing_task+0x2a0>)
 800aa36:	2202      	movs	r2, #2
 800aa38:	4898      	ldr	r0, [pc, #608]	@ (800ac9c <referee_processing_task+0x2a4>)
 800aa3a:	f7f8 f87b 	bl	8002b34 <ref_usart_start>
	while (1) {

		uint8_t has_data = ulTaskNotifyTake(pdTRUE, 1000);
 800aa3e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800aa42:	2001      	movs	r0, #1
 800aa44:	f00e fa72 	bl	8018f2c <ulTaskNotifyTake>
 800aa48:	4603      	mov	r3, r0
 800aa4a:	75fb      	strb	r3, [r7, #23]
		status_led(5, on_led);
 800aa4c:	2100      	movs	r1, #0
 800aa4e:	2005      	movs	r0, #5
 800aa50:	f7f7 fab2 	bl	8001fb8 <status_led>
		if (queue_get_size(&referee_uart_q) > 7) {
 800aa54:	4890      	ldr	r0, [pc, #576]	@ (800ac98 <referee_processing_task+0x2a0>)
 800aa56:	f7f7 fc10 	bl	800227a <queue_get_size>
 800aa5a:	4603      	mov	r3, r0
 800aa5c:	2b07      	cmp	r3, #7
 800aa5e:	f240 80b8 	bls.w	800abd2 <referee_processing_task+0x1da>
			while (queue_get_size(&referee_uart_q) > 7) {
 800aa62:	e0ad      	b.n	800abc0 <referee_processing_task+0x1c8>
				proc_status = ref_process_data(&referee_uart_q, &g_ref_msg_buffer);
 800aa64:	498e      	ldr	r1, [pc, #568]	@ (800aca0 <referee_processing_task+0x2a8>)
 800aa66:	488c      	ldr	r0, [pc, #560]	@ (800ac98 <referee_processing_task+0x2a0>)
 800aa68:	f7f7 fd74 	bl	8002554 <ref_process_data>
 800aa6c:	4603      	mov	r3, r0
 800aa6e:	75bb      	strb	r3, [r7, #22]
				if (proc_status == PROCESS_SUCCESS) {
 800aa70:	7dbb      	ldrb	r3, [r7, #22]
 800aa72:	2b00      	cmp	r3, #0
 800aa74:	f040 809f 	bne.w	800abb6 <referee_processing_task+0x1be>
					switch (g_ref_msg_buffer.cmd_id) {
 800aa78:	4b89      	ldr	r3, [pc, #548]	@ (800aca0 <referee_processing_task+0x2a8>)
 800aa7a:	881b      	ldrh	r3, [r3, #0]
 800aa7c:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800aa80:	f300 809d 	bgt.w	800abbe <referee_processing_task+0x1c6>
 800aa84:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800aa88:	dc04      	bgt.n	800aa94 <referee_processing_task+0x9c>
 800aa8a:	2b01      	cmp	r3, #1
 800aa8c:	d029      	beq.n	800aae2 <referee_processing_task+0xea>
 800aa8e:	2b03      	cmp	r3, #3
 800aa90:	d071      	beq.n	800ab76 <referee_processing_task+0x17e>
								sizeof(ref_magazine_data_t));
						ref_mag_data_txno++;
						//add in the memcpys here
						break;
					default:
						break;
 800aa92:	e094      	b.n	800abbe <referee_processing_task+0x1c6>
					switch (g_ref_msg_buffer.cmd_id) {
 800aa94:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 800aa98:	2b07      	cmp	r3, #7
 800aa9a:	f200 8090 	bhi.w	800abbe <referee_processing_task+0x1c6>
 800aa9e:	a201      	add	r2, pc, #4	@ (adr r2, 800aaa4 <referee_processing_task+0xac>)
 800aaa0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aaa4:	0800aafd 	.word	0x0800aafd
 800aaa8:	0800ab45 	.word	0x0800ab45
 800aaac:	0800ab2b 	.word	0x0800ab2b
 800aab0:	0800abbf 	.word	0x0800abbf
 800aab4:	0800abbf 	.word	0x0800abbf
 800aab8:	0800ab63 	.word	0x0800ab63
 800aabc:	0800aac5 	.word	0x0800aac5
 800aac0:	0800ab9d 	.word	0x0800ab9d
						memcpy(&ref_shoot_data, &g_ref_msg_buffer.data,
 800aac4:	4a77      	ldr	r2, [pc, #476]	@ (800aca4 <referee_processing_task+0x2ac>)
 800aac6:	4b76      	ldr	r3, [pc, #472]	@ (800aca0 <referee_processing_task+0x2a8>)
 800aac8:	3302      	adds	r3, #2
 800aaca:	6818      	ldr	r0, [r3, #0]
 800aacc:	6010      	str	r0, [r2, #0]
 800aace:	8899      	ldrh	r1, [r3, #4]
 800aad0:	799b      	ldrb	r3, [r3, #6]
 800aad2:	8091      	strh	r1, [r2, #4]
 800aad4:	7193      	strb	r3, [r2, #6]
						ref_shoot_data_txno++;
 800aad6:	4b74      	ldr	r3, [pc, #464]	@ (800aca8 <referee_processing_task+0x2b0>)
 800aad8:	681b      	ldr	r3, [r3, #0]
 800aada:	3301      	adds	r3, #1
 800aadc:	4a72      	ldr	r2, [pc, #456]	@ (800aca8 <referee_processing_task+0x2b0>)
 800aade:	6013      	str	r3, [r2, #0]
						break;
 800aae0:	e06e      	b.n	800abc0 <referee_processing_task+0x1c8>
							memcpy(&ref_game_state, &g_ref_msg_buffer.data,
 800aae2:	4a72      	ldr	r2, [pc, #456]	@ (800acac <referee_processing_task+0x2b4>)
 800aae4:	4b6e      	ldr	r3, [pc, #440]	@ (800aca0 <referee_processing_task+0x2a8>)
 800aae6:	3302      	adds	r3, #2
 800aae8:	8819      	ldrh	r1, [r3, #0]
 800aaea:	789b      	ldrb	r3, [r3, #2]
 800aaec:	8011      	strh	r1, [r2, #0]
 800aaee:	7093      	strb	r3, [r2, #2]
							ref_game_state_txno++;
 800aaf0:	4b6f      	ldr	r3, [pc, #444]	@ (800acb0 <referee_processing_task+0x2b8>)
 800aaf2:	681b      	ldr	r3, [r3, #0]
 800aaf4:	3301      	adds	r3, #1
 800aaf6:	4a6e      	ldr	r2, [pc, #440]	@ (800acb0 <referee_processing_task+0x2b8>)
 800aaf8:	6013      	str	r3, [r2, #0]
							break;
 800aafa:	e061      	b.n	800abc0 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_data, &g_ref_msg_buffer.data,
 800aafc:	4a65      	ldr	r2, [pc, #404]	@ (800ac94 <referee_processing_task+0x29c>)
 800aafe:	4b68      	ldr	r3, [pc, #416]	@ (800aca0 <referee_processing_task+0x2a8>)
 800ab00:	4614      	mov	r4, r2
 800ab02:	1c9d      	adds	r5, r3, #2
 800ab04:	6828      	ldr	r0, [r5, #0]
 800ab06:	6869      	ldr	r1, [r5, #4]
 800ab08:	68aa      	ldr	r2, [r5, #8]
 800ab0a:	68eb      	ldr	r3, [r5, #12]
 800ab0c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab0e:	6928      	ldr	r0, [r5, #16]
 800ab10:	6969      	ldr	r1, [r5, #20]
 800ab12:	c403      	stmia	r4!, {r0, r1}
 800ab14:	8b2b      	ldrh	r3, [r5, #24]
 800ab16:	7eaa      	ldrb	r2, [r5, #26]
 800ab18:	8023      	strh	r3, [r4, #0]
 800ab1a:	4613      	mov	r3, r2
 800ab1c:	70a3      	strb	r3, [r4, #2]
						ref_robot_data_txno++;
 800ab1e:	4b65      	ldr	r3, [pc, #404]	@ (800acb4 <referee_processing_task+0x2bc>)
 800ab20:	681b      	ldr	r3, [r3, #0]
 800ab22:	3301      	adds	r3, #1
 800ab24:	4a63      	ldr	r2, [pc, #396]	@ (800acb4 <referee_processing_task+0x2bc>)
 800ab26:	6013      	str	r3, [r2, #0]
						break;
 800ab28:	e04a      	b.n	800abc0 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_pos, &g_ref_msg_buffer.data,
 800ab2a:	4b63      	ldr	r3, [pc, #396]	@ (800acb8 <referee_processing_task+0x2c0>)
 800ab2c:	4a5c      	ldr	r2, [pc, #368]	@ (800aca0 <referee_processing_task+0x2a8>)
 800ab2e:	3202      	adds	r2, #2
 800ab30:	6810      	ldr	r0, [r2, #0]
 800ab32:	6851      	ldr	r1, [r2, #4]
 800ab34:	6892      	ldr	r2, [r2, #8]
 800ab36:	c307      	stmia	r3!, {r0, r1, r2}
						ref_robot_pos_txno++;
 800ab38:	4b60      	ldr	r3, [pc, #384]	@ (800acbc <referee_processing_task+0x2c4>)
 800ab3a:	681b      	ldr	r3, [r3, #0]
 800ab3c:	3301      	adds	r3, #1
 800ab3e:	4a5f      	ldr	r2, [pc, #380]	@ (800acbc <referee_processing_task+0x2c4>)
 800ab40:	6013      	str	r3, [r2, #0]
						break;
 800ab42:	e03d      	b.n	800abc0 <referee_processing_task+0x1c8>
						memcpy(&ref_power_data, &g_ref_msg_buffer.data,
 800ab44:	4a5e      	ldr	r2, [pc, #376]	@ (800acc0 <referee_processing_task+0x2c8>)
 800ab46:	4b56      	ldr	r3, [pc, #344]	@ (800aca0 <referee_processing_task+0x2a8>)
 800ab48:	4614      	mov	r4, r2
 800ab4a:	3302      	adds	r3, #2
 800ab4c:	6818      	ldr	r0, [r3, #0]
 800ab4e:	6859      	ldr	r1, [r3, #4]
 800ab50:	689a      	ldr	r2, [r3, #8]
 800ab52:	68db      	ldr	r3, [r3, #12]
 800ab54:	c40f      	stmia	r4!, {r0, r1, r2, r3}
						ref_power_data_txno++;
 800ab56:	4b5b      	ldr	r3, [pc, #364]	@ (800acc4 <referee_processing_task+0x2cc>)
 800ab58:	681b      	ldr	r3, [r3, #0]
 800ab5a:	3301      	adds	r3, #1
 800ab5c:	4a59      	ldr	r2, [pc, #356]	@ (800acc4 <referee_processing_task+0x2cc>)
 800ab5e:	6013      	str	r3, [r2, #0]
						break;
 800ab60:	e02e      	b.n	800abc0 <referee_processing_task+0x1c8>
						memcpy(&ref_dmg_data, &g_ref_msg_buffer.data,
 800ab62:	4b4f      	ldr	r3, [pc, #316]	@ (800aca0 <referee_processing_task+0x2a8>)
 800ab64:	789a      	ldrb	r2, [r3, #2]
 800ab66:	4b58      	ldr	r3, [pc, #352]	@ (800acc8 <referee_processing_task+0x2d0>)
 800ab68:	701a      	strb	r2, [r3, #0]
						ref_dmg_data_txno++;
 800ab6a:	4b58      	ldr	r3, [pc, #352]	@ (800accc <referee_processing_task+0x2d4>)
 800ab6c:	681b      	ldr	r3, [r3, #0]
 800ab6e:	3301      	adds	r3, #1
 800ab70:	4a56      	ldr	r2, [pc, #344]	@ (800accc <referee_processing_task+0x2d4>)
 800ab72:	6013      	str	r3, [r2, #0]
						break;
 800ab74:	e024      	b.n	800abc0 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_hp, &g_ref_msg_buffer.data,
 800ab76:	4a56      	ldr	r2, [pc, #344]	@ (800acd0 <referee_processing_task+0x2d8>)
 800ab78:	4b49      	ldr	r3, [pc, #292]	@ (800aca0 <referee_processing_task+0x2a8>)
 800ab7a:	4614      	mov	r4, r2
 800ab7c:	1c9d      	adds	r5, r3, #2
 800ab7e:	6828      	ldr	r0, [r5, #0]
 800ab80:	6869      	ldr	r1, [r5, #4]
 800ab82:	68aa      	ldr	r2, [r5, #8]
 800ab84:	68eb      	ldr	r3, [r5, #12]
 800ab86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab88:	6928      	ldr	r0, [r5, #16]
 800ab8a:	6969      	ldr	r1, [r5, #20]
 800ab8c:	69aa      	ldr	r2, [r5, #24]
 800ab8e:	c407      	stmia	r4!, {r0, r1, r2}
						ref_robot_hp_txno++;
 800ab90:	4b50      	ldr	r3, [pc, #320]	@ (800acd4 <referee_processing_task+0x2dc>)
 800ab92:	681b      	ldr	r3, [r3, #0]
 800ab94:	3301      	adds	r3, #1
 800ab96:	4a4f      	ldr	r2, [pc, #316]	@ (800acd4 <referee_processing_task+0x2dc>)
 800ab98:	6013      	str	r3, [r2, #0]
						break;
 800ab9a:	e011      	b.n	800abc0 <referee_processing_task+0x1c8>
						memcpy(&ref_mag_data, &g_ref_msg_buffer.data,
 800ab9c:	4a4e      	ldr	r2, [pc, #312]	@ (800acd8 <referee_processing_task+0x2e0>)
 800ab9e:	4b40      	ldr	r3, [pc, #256]	@ (800aca0 <referee_processing_task+0x2a8>)
 800aba0:	3302      	adds	r3, #2
 800aba2:	6818      	ldr	r0, [r3, #0]
 800aba4:	6010      	str	r0, [r2, #0]
 800aba6:	889b      	ldrh	r3, [r3, #4]
 800aba8:	8093      	strh	r3, [r2, #4]
						ref_mag_data_txno++;
 800abaa:	4b4c      	ldr	r3, [pc, #304]	@ (800acdc <referee_processing_task+0x2e4>)
 800abac:	681b      	ldr	r3, [r3, #0]
 800abae:	3301      	adds	r3, #1
 800abb0:	4a4a      	ldr	r2, [pc, #296]	@ (800acdc <referee_processing_task+0x2e4>)
 800abb2:	6013      	str	r3, [r2, #0]
						break;
 800abb4:	e004      	b.n	800abc0 <referee_processing_task+0x1c8>
					}
//						if (msg_buffer.cmd_id == REF_ROBOT_SHOOT_DATA_CMD_ID){
//							xQueueSend(uart_data_queue, &msg_buffer, 0);
//						}
				} else if (proc_status == INSUFFICIENT_DATA) {
 800abb6:	7dbb      	ldrb	r3, [r7, #22]
 800abb8:	2b02      	cmp	r3, #2
 800abba:	d009      	beq.n	800abd0 <referee_processing_task+0x1d8>
 800abbc:	e000      	b.n	800abc0 <referee_processing_task+0x1c8>
						break;
 800abbe:	bf00      	nop
			while (queue_get_size(&referee_uart_q) > 7) {
 800abc0:	4835      	ldr	r0, [pc, #212]	@ (800ac98 <referee_processing_task+0x2a0>)
 800abc2:	f7f7 fb5a 	bl	800227a <queue_get_size>
 800abc6:	4603      	mov	r3, r0
 800abc8:	2b07      	cmp	r3, #7
 800abca:	f63f af4b 	bhi.w	800aa64 <referee_processing_task+0x6c>
 800abce:	e000      	b.n	800abd2 <referee_processing_task+0x1da>
					break;
 800abd0:	bf00      	nop
				}
			}
		}
		if (!has_data){
 800abd2:	7dfb      	ldrb	r3, [r7, #23]
 800abd4:	2b00      	cmp	r3, #0
 800abd6:	d10e      	bne.n	800abf6 <referee_processing_task+0x1fe>
		    __HAL_DMA_ENABLE(&hdma_usart6_rx);
 800abd8:	4b41      	ldr	r3, [pc, #260]	@ (800ace0 <referee_processing_task+0x2e8>)
 800abda:	681b      	ldr	r3, [r3, #0]
 800abdc:	681a      	ldr	r2, [r3, #0]
 800abde:	4b40      	ldr	r3, [pc, #256]	@ (800ace0 <referee_processing_task+0x2e8>)
 800abe0:	681b      	ldr	r3, [r3, #0]
 800abe2:	f042 0201 	orr.w	r2, r2, #1
 800abe6:	601a      	str	r2, [r3, #0]
			ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800abe8:	f107 0108 	add.w	r1, r7, #8
 800abec:	4b2a      	ldr	r3, [pc, #168]	@ (800ac98 <referee_processing_task+0x2a0>)
 800abee:	2202      	movs	r2, #2
 800abf0:	482a      	ldr	r0, [pc, #168]	@ (800ac9c <referee_processing_task+0x2a4>)
 800abf2:	f7f7 ff9f 	bl	8002b34 <ref_usart_start>

		}

		status_led(5, off_led);
 800abf6:	2101      	movs	r1, #1
 800abf8:	2005      	movs	r0, #5
 800abfa:	f7f7 f9dd 	bl	8001fb8 <status_led>


		status_led(5, on_led);
 800abfe:	2100      	movs	r1, #0
 800ac00:	2005      	movs	r0, #5
 800ac02:	f7f7 f9d9 	bl	8001fb8 <status_led>
		if (ref_robot_data.robot_level == 1) {
 800ac06:	4b23      	ldr	r3, [pc, #140]	@ (800ac94 <referee_processing_task+0x29c>)
 800ac08:	785b      	ldrb	r3, [r3, #1]
 800ac0a:	2b01      	cmp	r3, #1
 800ac0c:	d112      	bne.n	800ac34 <referee_processing_task+0x23c>
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ac0e:	4b20      	ldr	r3, [pc, #128]	@ (800ac90 <referee_processing_task+0x298>)
 800ac10:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ac14:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800ac16:	4b1e      	ldr	r3, [pc, #120]	@ (800ac90 <referee_processing_task+0x298>)
 800ac18:	2213      	movs	r2, #19
 800ac1a:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 1;
 800ac1c:	4b1c      	ldr	r3, [pc, #112]	@ (800ac90 <referee_processing_task+0x298>)
 800ac1e:	2201      	movs	r2, #1
 800ac20:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800ac22:	2100      	movs	r1, #0
 800ac24:	2007      	movs	r0, #7
 800ac26:	f7f7 f9c7 	bl	8001fb8 <status_led>
			status_led(8, off_led);
 800ac2a:	2101      	movs	r1, #1
 800ac2c:	2008      	movs	r0, #8
 800ac2e:	f7f7 f9c3 	bl	8001fb8 <status_led>
 800ac32:	e05e      	b.n	800acf2 <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 2) {
 800ac34:	4b17      	ldr	r3, [pc, #92]	@ (800ac94 <referee_processing_task+0x29c>)
 800ac36:	785b      	ldrb	r3, [r3, #1]
 800ac38:	2b02      	cmp	r3, #2
 800ac3a:	d112      	bne.n	800ac62 <referee_processing_task+0x26a>
			g_referee_limiters.feeding_speed = LV2_FEEDER;
 800ac3c:	4b14      	ldr	r3, [pc, #80]	@ (800ac90 <referee_processing_task+0x298>)
 800ac3e:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ac42:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV2_PROJECTILE;
 800ac44:	4b12      	ldr	r3, [pc, #72]	@ (800ac90 <referee_processing_task+0x298>)
 800ac46:	2213      	movs	r2, #19
 800ac48:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 2;
 800ac4a:	4b11      	ldr	r3, [pc, #68]	@ (800ac90 <referee_processing_task+0x298>)
 800ac4c:	2202      	movs	r2, #2
 800ac4e:	731a      	strb	r2, [r3, #12]
			status_led(7, off_led);
 800ac50:	2101      	movs	r1, #1
 800ac52:	2007      	movs	r0, #7
 800ac54:	f7f7 f9b0 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800ac58:	2100      	movs	r1, #0
 800ac5a:	2008      	movs	r0, #8
 800ac5c:	f7f7 f9ac 	bl	8001fb8 <status_led>
 800ac60:	e047      	b.n	800acf2 <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 3) {
 800ac62:	4b0c      	ldr	r3, [pc, #48]	@ (800ac94 <referee_processing_task+0x29c>)
 800ac64:	785b      	ldrb	r3, [r3, #1]
 800ac66:	2b03      	cmp	r3, #3
 800ac68:	d13c      	bne.n	800ace4 <referee_processing_task+0x2ec>
			g_referee_limiters.feeding_speed = LV3_FEEDER;
 800ac6a:	4b09      	ldr	r3, [pc, #36]	@ (800ac90 <referee_processing_task+0x298>)
 800ac6c:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ac70:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV3_PROJECTILE;
 800ac72:	4b07      	ldr	r3, [pc, #28]	@ (800ac90 <referee_processing_task+0x298>)
 800ac74:	2213      	movs	r2, #19
 800ac76:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 3;
 800ac78:	4b05      	ldr	r3, [pc, #20]	@ (800ac90 <referee_processing_task+0x298>)
 800ac7a:	2203      	movs	r2, #3
 800ac7c:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800ac7e:	2100      	movs	r1, #0
 800ac80:	2007      	movs	r0, #7
 800ac82:	f7f7 f999 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800ac86:	2100      	movs	r1, #0
 800ac88:	2008      	movs	r0, #8
 800ac8a:	f7f7 f995 	bl	8001fb8 <status_led>
 800ac8e:	e030      	b.n	800acf2 <referee_processing_task+0x2fa>
 800ac90:	200037cc 	.word	0x200037cc
 800ac94:	20003850 	.word	0x20003850
 800ac98:	200038b8 	.word	0x200038b8
 800ac9c:	20001c70 	.word	0x20001c70
 800aca0:	200037e4 	.word	0x200037e4
 800aca4:	2000389c 	.word	0x2000389c
 800aca8:	200038a4 	.word	0x200038a4
 800acac:	20003828 	.word	0x20003828
 800acb0:	2000382c 	.word	0x2000382c
 800acb4:	2000386c 	.word	0x2000386c
 800acb8:	20003884 	.word	0x20003884
 800acbc:	20003890 	.word	0x20003890
 800acc0:	20003870 	.word	0x20003870
 800acc4:	20003880 	.word	0x20003880
 800acc8:	20003894 	.word	0x20003894
 800accc:	20003898 	.word	0x20003898
 800acd0:	20003830 	.word	0x20003830
 800acd4:	2000384c 	.word	0x2000384c
 800acd8:	200038a8 	.word	0x200038a8
 800acdc:	200038b0 	.word	0x200038b0
 800ace0:	20001d74 	.word	0x20001d74
		} else {
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ace4:	4b43      	ldr	r3, [pc, #268]	@ (800adf4 <referee_processing_task+0x3fc>)
 800ace6:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800acea:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800acec:	4b41      	ldr	r3, [pc, #260]	@ (800adf4 <referee_processing_task+0x3fc>)
 800acee:	2213      	movs	r2, #19
 800acf0:	805a      	strh	r2, [r3, #2]
		}
		if (ref_robot_data.robot_level != 0) {
 800acf2:	4b41      	ldr	r3, [pc, #260]	@ (800adf8 <referee_processing_task+0x400>)
 800acf4:	785b      	ldrb	r3, [r3, #1]
 800acf6:	2b00      	cmp	r3, #0
 800acf8:	d070      	beq.n	800addc <referee_processing_task+0x3e4>
			float temp_buffer = 1;
 800acfa:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800acfe:	61fb      	str	r3, [r7, #28]
			if (ref_power_data.buffer_energy < 50){
 800ad00:	4b3e      	ldr	r3, [pc, #248]	@ (800adfc <referee_processing_task+0x404>)
 800ad02:	891b      	ldrh	r3, [r3, #8]
 800ad04:	2b31      	cmp	r3, #49	@ 0x31
 800ad06:	d819      	bhi.n	800ad3c <referee_processing_task+0x344>
			temp_buffer = (float)ref_power_data.buffer_energy/50;
 800ad08:	4b3c      	ldr	r3, [pc, #240]	@ (800adfc <referee_processing_task+0x404>)
 800ad0a:	891b      	ldrh	r3, [r3, #8]
 800ad0c:	ee07 3a90 	vmov	s15, r3
 800ad10:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800ad14:	eddf 6a3a 	vldr	s13, [pc, #232]	@ 800ae00 <referee_processing_task+0x408>
 800ad18:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ad1c:	edc7 7a07 	vstr	s15, [r7, #28]
			temp_buffer = (temp_buffer > 1) ? 1 : temp_buffer;
 800ad20:	edd7 7a07 	vldr	s15, [r7, #28]
 800ad24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ad28:	eef4 7ac7 	vcmpe.f32	s15, s14
 800ad2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad30:	dd02      	ble.n	800ad38 <referee_processing_task+0x340>
 800ad32:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ad36:	e000      	b.n	800ad3a <referee_processing_task+0x342>
 800ad38:	69fb      	ldr	r3, [r7, #28]
 800ad3a:	61fb      	str	r3, [r7, #28]
			}
#ifdef CHASSIS_POWER_BUFFER_LIMITER
			g_referee_limiters.wheel_buffer_limit = temp_buffer * temp_buffer;
 800ad3c:	edd7 7a07 	vldr	s15, [r7, #28]
 800ad40:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800ad44:	4b2b      	ldr	r3, [pc, #172]	@ (800adf4 <referee_processing_task+0x3fc>)
 800ad46:	edc3 7a02 	vstr	s15, [r3, #8]
#else
			g_referee_limiters.wheel_buffer_limit = 1;
#endif

			static float prev_chassis_power;
			float max_power = CHASSIS_MAX_POWER;
 800ad4a:	4b2e      	ldr	r3, [pc, #184]	@ (800ae04 <referee_processing_task+0x40c>)
 800ad4c:	61bb      	str	r3, [r7, #24]
			float curr_chassis_power = prev_chassis_power * 0.5 + ref_power_data.chassis_power * 0.5;
 800ad4e:	4b2e      	ldr	r3, [pc, #184]	@ (800ae08 <referee_processing_task+0x410>)
 800ad50:	681b      	ldr	r3, [r3, #0]
 800ad52:	4618      	mov	r0, r3
 800ad54:	f7f5 fbf8 	bl	8000548 <__aeabi_f2d>
 800ad58:	f04f 0200 	mov.w	r2, #0
 800ad5c:	4b2b      	ldr	r3, [pc, #172]	@ (800ae0c <referee_processing_task+0x414>)
 800ad5e:	f7f5 fc4b 	bl	80005f8 <__aeabi_dmul>
 800ad62:	4602      	mov	r2, r0
 800ad64:	460b      	mov	r3, r1
 800ad66:	4614      	mov	r4, r2
 800ad68:	461d      	mov	r5, r3
 800ad6a:	4b24      	ldr	r3, [pc, #144]	@ (800adfc <referee_processing_task+0x404>)
 800ad6c:	685b      	ldr	r3, [r3, #4]
 800ad6e:	4618      	mov	r0, r3
 800ad70:	f7f5 fbea 	bl	8000548 <__aeabi_f2d>
 800ad74:	f04f 0200 	mov.w	r2, #0
 800ad78:	4b24      	ldr	r3, [pc, #144]	@ (800ae0c <referee_processing_task+0x414>)
 800ad7a:	f7f5 fc3d 	bl	80005f8 <__aeabi_dmul>
 800ad7e:	4602      	mov	r2, r0
 800ad80:	460b      	mov	r3, r1
 800ad82:	4620      	mov	r0, r4
 800ad84:	4629      	mov	r1, r5
 800ad86:	f7f5 fa81 	bl	800028c <__adddf3>
 800ad8a:	4602      	mov	r2, r0
 800ad8c:	460b      	mov	r3, r1
 800ad8e:	4610      	mov	r0, r2
 800ad90:	4619      	mov	r1, r3
 800ad92:	f7f5 ff29 	bl	8000be8 <__aeabi_d2f>
 800ad96:	4603      	mov	r3, r0
 800ad98:	613b      	str	r3, [r7, #16]
			prev_chassis_power = ref_power_data.chassis_power;
 800ad9a:	4b18      	ldr	r3, [pc, #96]	@ (800adfc <referee_processing_task+0x404>)
 800ad9c:	685b      	ldr	r3, [r3, #4]
 800ad9e:	4a1a      	ldr	r2, [pc, #104]	@ (800ae08 <referee_processing_task+0x410>)
 800ada0:	6013      	str	r3, [r2, #0]
			if (ref_robot_data.chassis_power_limit < CHASSIS_MAX_POWER){
 800ada2:	4b15      	ldr	r3, [pc, #84]	@ (800adf8 <referee_processing_task+0x400>)
 800ada4:	8b1b      	ldrh	r3, [r3, #24]
 800ada6:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800adaa:	d207      	bcs.n	800adbc <referee_processing_task+0x3c4>
				max_power = ref_robot_data.chassis_power_limit;
 800adac:	4b12      	ldr	r3, [pc, #72]	@ (800adf8 <referee_processing_task+0x400>)
 800adae:	8b1b      	ldrh	r3, [r3, #24]
 800adb0:	ee07 3a90 	vmov	s15, r3
 800adb4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800adb8:	edc7 7a06 	vstr	s15, [r7, #24]
			}
			float temp_power = (float) ((curr_chassis_power)/(max_power - CHASSIS_POWER_MARGIN));
 800adbc:	edd7 7a06 	vldr	s15, [r7, #24]
 800adc0:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800adc4:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800adc8:	edd7 6a04 	vldr	s13, [r7, #16]
 800adcc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800add0:	edc7 7a03 	vstr	s15, [r7, #12]
//			temp_power = (temp_power > 1) ? 1 : temp_power;
			g_referee_limiters.wheel_power_limit = temp_power;
 800add4:	4a07      	ldr	r2, [pc, #28]	@ (800adf4 <referee_processing_task+0x3fc>)
 800add6:	68fb      	ldr	r3, [r7, #12]
 800add8:	6053      	str	r3, [r2, #4]
 800adda:	e007      	b.n	800adec <referee_processing_task+0x3f4>
//			arm_sqrt_f32(temp_power, &referee_limiters.wheel_power_limit);
		} else {
			g_referee_limiters.wheel_buffer_limit = 1;
 800addc:	4b05      	ldr	r3, [pc, #20]	@ (800adf4 <referee_processing_task+0x3fc>)
 800adde:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800ade2:	609a      	str	r2, [r3, #8]
			g_referee_limiters.wheel_power_limit = 1;
 800ade4:	4b03      	ldr	r3, [pc, #12]	@ (800adf4 <referee_processing_task+0x3fc>)
 800ade6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800adea:	605a      	str	r2, [r3, #4]

		}
		vTaskDelay(2);
 800adec:	2002      	movs	r0, #2
 800adee:	f00d facd 	bl	801838c <vTaskDelay>
	while (1) {
 800adf2:	e624      	b.n	800aa3e <referee_processing_task+0x46>
 800adf4:	200037cc 	.word	0x200037cc
 800adf8:	20003850 	.word	0x20003850
 800adfc:	20003870 	.word	0x20003870
 800ae00:	42480000 	.word	0x42480000
 800ae04:	43c80000 	.word	0x43c80000
 800ae08:	200039c0 	.word	0x200039c0
 800ae0c:	3fe00000 	.word	0x3fe00000

0800ae10 <rtIsInf>:
 800ae10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae12:	b083      	sub	sp, #12
 800ae14:	af00      	add	r7, sp, #0
 800ae16:	ed87 0b00 	vstr	d0, [r7]
 800ae1a:	683c      	ldr	r4, [r7, #0]
 800ae1c:	687b      	ldr	r3, [r7, #4]
 800ae1e:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800ae22:	2301      	movs	r3, #1
 800ae24:	461e      	mov	r6, r3
 800ae26:	f04f 32ff 	mov.w	r2, #4294967295
 800ae2a:	4b0f      	ldr	r3, [pc, #60]	@ (800ae68 <rtIsInf+0x58>)
 800ae2c:	4620      	mov	r0, r4
 800ae2e:	4629      	mov	r1, r5
 800ae30:	f7f5 fe7c 	bl	8000b2c <__aeabi_dcmpun>
 800ae34:	4603      	mov	r3, r0
 800ae36:	2b00      	cmp	r3, #0
 800ae38:	d10b      	bne.n	800ae52 <rtIsInf+0x42>
 800ae3a:	f04f 32ff 	mov.w	r2, #4294967295
 800ae3e:	4b0a      	ldr	r3, [pc, #40]	@ (800ae68 <rtIsInf+0x58>)
 800ae40:	4620      	mov	r0, r4
 800ae42:	4629      	mov	r1, r5
 800ae44:	f7f5 fe54 	bl	8000af0 <__aeabi_dcmple>
 800ae48:	4603      	mov	r3, r0
 800ae4a:	2b00      	cmp	r3, #0
 800ae4c:	d101      	bne.n	800ae52 <rtIsInf+0x42>
 800ae4e:	2300      	movs	r3, #0
 800ae50:	461e      	mov	r6, r3
 800ae52:	b2f3      	uxtb	r3, r6
 800ae54:	f083 0301 	eor.w	r3, r3, #1
 800ae58:	b2db      	uxtb	r3, r3
 800ae5a:	f003 0301 	and.w	r3, r3, #1
 800ae5e:	b2db      	uxtb	r3, r3
 800ae60:	4618      	mov	r0, r3
 800ae62:	370c      	adds	r7, #12
 800ae64:	46bd      	mov	sp, r7
 800ae66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ae68:	7fefffff 	.word	0x7fefffff

0800ae6c <rtIsNaN>:
 800ae6c:	b580      	push	{r7, lr}
 800ae6e:	b082      	sub	sp, #8
 800ae70:	af00      	add	r7, sp, #0
 800ae72:	ed87 0b00 	vstr	d0, [r7]
 800ae76:	e9d7 2300 	ldrd	r2, r3, [r7]
 800ae7a:	e9d7 0100 	ldrd	r0, r1, [r7]
 800ae7e:	f7f5 fe55 	bl	8000b2c <__aeabi_dcmpun>
 800ae82:	4603      	mov	r3, r0
 800ae84:	2b00      	cmp	r3, #0
 800ae86:	d001      	beq.n	800ae8c <rtIsNaN+0x20>
 800ae88:	2301      	movs	r3, #1
 800ae8a:	e000      	b.n	800ae8e <rtIsNaN+0x22>
 800ae8c:	2300      	movs	r3, #0
 800ae8e:	4618      	mov	r0, r3
 800ae90:	3708      	adds	r7, #8
 800ae92:	46bd      	mov	sp, r7
 800ae94:	bd80      	pop	{r7, pc}

0800ae96 <startup_task>:
#include "startup_task.h"
#include "gimbal_control_task.h"
#include "buzzing_task.h"
#include <can_msg_processor.h>

void startup_task() {
 800ae96:	b580      	push	{r7, lr}
 800ae98:	af00      	add	r7, sp, #0
	//todo: shift all to an actual task, reimplement motor not connected errors
	led_on();
 800ae9a:	f7f7 f867 	bl	8001f6c <led_on>
	buzzer_init();
 800ae9e:	f7f6 f987 	bl	80011b0 <buzzer_init>
	imu_init();
 800aea2:	f7f6 fe6d 	bl	8001b80 <imu_init>
	led_green_off();
 800aea6:	f7f7 f853 	bl	8001f50 <led_green_off>
	start_micros_timer();
 800aeaa:	f7f7 f965 	bl	8002178 <start_micros_timer>
	led_toggle();
 800aeae:	f7f7 f87b 	bl	8001fa8 <led_toggle>

}
 800aeb2:	bf00      	nop
 800aeb4:	bd80      	pop	{r7, pc}
	...

0800aeb8 <usb_vcp_processing>:
uint8_t usb_waiting = 0;

//#define DATA_OUTPUT_MODE
#define USB_CONFIG_MODE

void usb_vcp_processing(uint8_t *buffer, uint32_t *len) {
 800aeb8:	b580      	push	{r7, lr}
 800aeba:	b0c4      	sub	sp, #272	@ 0x110
 800aebc:	af00      	add	r7, sp, #0
 800aebe:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800aec2:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800aec6:	6018      	str	r0, [r3, #0]
 800aec8:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800aecc:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800aed0:	6019      	str	r1, [r3, #0]
	uint8_t blank_buffer[MAX_CHAR_SIZE] = { 0 };
 800aed2:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800aed6:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800aeda:	2200      	movs	r2, #0
 800aedc:	601a      	str	r2, [r3, #0]
 800aede:	3304      	adds	r3, #4
 800aee0:	22fc      	movs	r2, #252	@ 0xfc
 800aee2:	2100      	movs	r1, #0
 800aee4:	4618      	mov	r0, r3
 800aee6:	f00f ff9c 	bl	801ae22 <memset>
	memcpy(blank_buffer, buffer, *len);
 800aeea:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800aeee:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	681a      	ldr	r2, [r3, #0]
 800aef6:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800aefa:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800aefe:	f107 0010 	add.w	r0, r7, #16
 800af02:	6819      	ldr	r1, [r3, #0]
 800af04:	f010 f836 	bl	801af74 <memcpy>
	memcpy(usb_input_buffer, blank_buffer, MAX_CHAR_SIZE);
 800af08:	4a1a      	ldr	r2, [pc, #104]	@ (800af74 <usb_vcp_processing+0xbc>)
 800af0a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af0e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800af12:	4610      	mov	r0, r2
 800af14:	4619      	mov	r1, r3
 800af16:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800af1a:	461a      	mov	r2, r3
 800af1c:	f010 f82a 	bl	801af74 <memcpy>
	usb_input_len = *len;
 800af20:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af24:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800af28:	681b      	ldr	r3, [r3, #0]
 800af2a:	681b      	ldr	r3, [r3, #0]
 800af2c:	4a12      	ldr	r2, [pc, #72]	@ (800af78 <usb_vcp_processing+0xc0>)
 800af2e:	6013      	str	r3, [r2, #0]

	//Check if the currently running task needs to yield
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 800af30:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af34:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800af38:	2200      	movs	r2, #0
 800af3a:	601a      	str	r2, [r3, #0]
	xSemaphoreGiveFromISR(usb_continue_semaphore, &xHigherPriorityTaskWoken);
 800af3c:	4b0f      	ldr	r3, [pc, #60]	@ (800af7c <usb_vcp_processing+0xc4>)
 800af3e:	681b      	ldr	r3, [r3, #0]
 800af40:	f107 020c 	add.w	r2, r7, #12
 800af44:	4611      	mov	r1, r2
 800af46:	4618      	mov	r0, r3
 800af48:	f00c fcd6 	bl	80178f8 <xQueueGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 800af4c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af50:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800af54:	681b      	ldr	r3, [r3, #0]
 800af56:	2b00      	cmp	r3, #0
 800af58:	d007      	beq.n	800af6a <usb_vcp_processing+0xb2>
 800af5a:	4b09      	ldr	r3, [pc, #36]	@ (800af80 <usb_vcp_processing+0xc8>)
 800af5c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800af60:	601a      	str	r2, [r3, #0]
 800af62:	f3bf 8f4f 	dsb	sy
 800af66:	f3bf 8f6f 	isb	sy
}
 800af6a:	bf00      	nop
 800af6c:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800af70:	46bd      	mov	sp, r7
 800af72:	bd80      	pop	{r7, pc}
 800af74:	200039c4 	.word	0x200039c4
 800af78:	20003ac4 	.word	0x20003ac4
 800af7c:	200037b4 	.word	0x200037b4
 800af80:	e000ed04 	.word	0xe000ed04

0800af84 <usb_task>:
	return 0;

}


void usb_task(void *argument) {
 800af84:	b580      	push	{r7, lr}
 800af86:	b082      	sub	sp, #8
 800af88:	af00      	add	r7, sp, #0
 800af8a:	6078      	str	r0, [r7, #4]
//						CDC_Transmit_FS(usb_input_buffer, len);
//					}
//				}
//			}
//		}
		vTaskDelay(100);
 800af8c:	2064      	movs	r0, #100	@ 0x64
 800af8e:	f00d f9fd 	bl	801838c <vTaskDelay>
 800af92:	e7fb      	b.n	800af8c <usb_task+0x8>

0800af94 <HAL_Init>:
 800af94:	b580      	push	{r7, lr}
 800af96:	af00      	add	r7, sp, #0
 800af98:	4b0e      	ldr	r3, [pc, #56]	@ (800afd4 <HAL_Init+0x40>)
 800af9a:	681b      	ldr	r3, [r3, #0]
 800af9c:	4a0d      	ldr	r2, [pc, #52]	@ (800afd4 <HAL_Init+0x40>)
 800af9e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800afa2:	6013      	str	r3, [r2, #0]
 800afa4:	4b0b      	ldr	r3, [pc, #44]	@ (800afd4 <HAL_Init+0x40>)
 800afa6:	681b      	ldr	r3, [r3, #0]
 800afa8:	4a0a      	ldr	r2, [pc, #40]	@ (800afd4 <HAL_Init+0x40>)
 800afaa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800afae:	6013      	str	r3, [r2, #0]
 800afb0:	4b08      	ldr	r3, [pc, #32]	@ (800afd4 <HAL_Init+0x40>)
 800afb2:	681b      	ldr	r3, [r3, #0]
 800afb4:	4a07      	ldr	r2, [pc, #28]	@ (800afd4 <HAL_Init+0x40>)
 800afb6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800afba:	6013      	str	r3, [r2, #0]
 800afbc:	2003      	movs	r0, #3
 800afbe:	f001 fa02 	bl	800c3c6 <HAL_NVIC_SetPriorityGrouping>
 800afc2:	200f      	movs	r0, #15
 800afc4:	f7f8 fd82 	bl	8003acc <HAL_InitTick>
 800afc8:	f7f8 fd54 	bl	8003a74 <HAL_MspInit>
 800afcc:	2300      	movs	r3, #0
 800afce:	4618      	mov	r0, r3
 800afd0:	bd80      	pop	{r7, pc}
 800afd2:	bf00      	nop
 800afd4:	40023c00 	.word	0x40023c00

0800afd8 <HAL_IncTick>:
 800afd8:	b480      	push	{r7}
 800afda:	af00      	add	r7, sp, #0
 800afdc:	4b06      	ldr	r3, [pc, #24]	@ (800aff8 <HAL_IncTick+0x20>)
 800afde:	781b      	ldrb	r3, [r3, #0]
 800afe0:	461a      	mov	r2, r3
 800afe2:	4b06      	ldr	r3, [pc, #24]	@ (800affc <HAL_IncTick+0x24>)
 800afe4:	681b      	ldr	r3, [r3, #0]
 800afe6:	4413      	add	r3, r2
 800afe8:	4a04      	ldr	r2, [pc, #16]	@ (800affc <HAL_IncTick+0x24>)
 800afea:	6013      	str	r3, [r2, #0]
 800afec:	bf00      	nop
 800afee:	46bd      	mov	sp, r7
 800aff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aff4:	4770      	bx	lr
 800aff6:	bf00      	nop
 800aff8:	2000001c 	.word	0x2000001c
 800affc:	20003ac8 	.word	0x20003ac8

0800b000 <HAL_GetTick>:
 800b000:	b480      	push	{r7}
 800b002:	af00      	add	r7, sp, #0
 800b004:	4b03      	ldr	r3, [pc, #12]	@ (800b014 <HAL_GetTick+0x14>)
 800b006:	681b      	ldr	r3, [r3, #0]
 800b008:	4618      	mov	r0, r3
 800b00a:	46bd      	mov	sp, r7
 800b00c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b010:	4770      	bx	lr
 800b012:	bf00      	nop
 800b014:	20003ac8 	.word	0x20003ac8

0800b018 <HAL_Delay>:
 800b018:	b580      	push	{r7, lr}
 800b01a:	b084      	sub	sp, #16
 800b01c:	af00      	add	r7, sp, #0
 800b01e:	6078      	str	r0, [r7, #4]
 800b020:	f7ff ffee 	bl	800b000 <HAL_GetTick>
 800b024:	60b8      	str	r0, [r7, #8]
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	60fb      	str	r3, [r7, #12]
 800b02a:	68fb      	ldr	r3, [r7, #12]
 800b02c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b030:	d005      	beq.n	800b03e <HAL_Delay+0x26>
 800b032:	4b0a      	ldr	r3, [pc, #40]	@ (800b05c <HAL_Delay+0x44>)
 800b034:	781b      	ldrb	r3, [r3, #0]
 800b036:	461a      	mov	r2, r3
 800b038:	68fb      	ldr	r3, [r7, #12]
 800b03a:	4413      	add	r3, r2
 800b03c:	60fb      	str	r3, [r7, #12]
 800b03e:	bf00      	nop
 800b040:	f7ff ffde 	bl	800b000 <HAL_GetTick>
 800b044:	4602      	mov	r2, r0
 800b046:	68bb      	ldr	r3, [r7, #8]
 800b048:	1ad3      	subs	r3, r2, r3
 800b04a:	68fa      	ldr	r2, [r7, #12]
 800b04c:	429a      	cmp	r2, r3
 800b04e:	d8f7      	bhi.n	800b040 <HAL_Delay+0x28>
 800b050:	bf00      	nop
 800b052:	bf00      	nop
 800b054:	3710      	adds	r7, #16
 800b056:	46bd      	mov	sp, r7
 800b058:	bd80      	pop	{r7, pc}
 800b05a:	bf00      	nop
 800b05c:	2000001c 	.word	0x2000001c

0800b060 <HAL_ADC_Init>:
 800b060:	b580      	push	{r7, lr}
 800b062:	b084      	sub	sp, #16
 800b064:	af00      	add	r7, sp, #0
 800b066:	6078      	str	r0, [r7, #4]
 800b068:	2300      	movs	r3, #0
 800b06a:	73fb      	strb	r3, [r7, #15]
 800b06c:	687b      	ldr	r3, [r7, #4]
 800b06e:	2b00      	cmp	r3, #0
 800b070:	d101      	bne.n	800b076 <HAL_ADC_Init+0x16>
 800b072:	2301      	movs	r3, #1
 800b074:	e033      	b.n	800b0de <HAL_ADC_Init+0x7e>
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b07a:	2b00      	cmp	r3, #0
 800b07c:	d109      	bne.n	800b092 <HAL_ADC_Init+0x32>
 800b07e:	6878      	ldr	r0, [r7, #4]
 800b080:	f7f7 fe8a 	bl	8002d98 <HAL_ADC_MspInit>
 800b084:	687b      	ldr	r3, [r7, #4]
 800b086:	2200      	movs	r2, #0
 800b088:	645a      	str	r2, [r3, #68]	@ 0x44
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	2200      	movs	r2, #0
 800b08e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b092:	687b      	ldr	r3, [r7, #4]
 800b094:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b096:	f003 0310 	and.w	r3, r3, #16
 800b09a:	2b00      	cmp	r3, #0
 800b09c:	d118      	bne.n	800b0d0 <HAL_ADC_Init+0x70>
 800b09e:	687b      	ldr	r3, [r7, #4]
 800b0a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b0a2:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800b0a6:	f023 0302 	bic.w	r3, r3, #2
 800b0aa:	f043 0202 	orr.w	r2, r3, #2
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	641a      	str	r2, [r3, #64]	@ 0x40
 800b0b2:	6878      	ldr	r0, [r7, #4]
 800b0b4:	f000 f93a 	bl	800b32c <ADC_Init>
 800b0b8:	687b      	ldr	r3, [r7, #4]
 800b0ba:	2200      	movs	r2, #0
 800b0bc:	645a      	str	r2, [r3, #68]	@ 0x44
 800b0be:	687b      	ldr	r3, [r7, #4]
 800b0c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b0c2:	f023 0303 	bic.w	r3, r3, #3
 800b0c6:	f043 0201 	orr.w	r2, r3, #1
 800b0ca:	687b      	ldr	r3, [r7, #4]
 800b0cc:	641a      	str	r2, [r3, #64]	@ 0x40
 800b0ce:	e001      	b.n	800b0d4 <HAL_ADC_Init+0x74>
 800b0d0:	2301      	movs	r3, #1
 800b0d2:	73fb      	strb	r3, [r7, #15]
 800b0d4:	687b      	ldr	r3, [r7, #4]
 800b0d6:	2200      	movs	r2, #0
 800b0d8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b0dc:	7bfb      	ldrb	r3, [r7, #15]
 800b0de:	4618      	mov	r0, r3
 800b0e0:	3710      	adds	r7, #16
 800b0e2:	46bd      	mov	sp, r7
 800b0e4:	bd80      	pop	{r7, pc}
	...

0800b0e8 <HAL_ADC_ConfigChannel>:
 800b0e8:	b480      	push	{r7}
 800b0ea:	b085      	sub	sp, #20
 800b0ec:	af00      	add	r7, sp, #0
 800b0ee:	6078      	str	r0, [r7, #4]
 800b0f0:	6039      	str	r1, [r7, #0]
 800b0f2:	2300      	movs	r3, #0
 800b0f4:	60bb      	str	r3, [r7, #8]
 800b0f6:	687b      	ldr	r3, [r7, #4]
 800b0f8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800b0fc:	2b01      	cmp	r3, #1
 800b0fe:	d101      	bne.n	800b104 <HAL_ADC_ConfigChannel+0x1c>
 800b100:	2302      	movs	r3, #2
 800b102:	e105      	b.n	800b310 <HAL_ADC_ConfigChannel+0x228>
 800b104:	687b      	ldr	r3, [r7, #4]
 800b106:	2201      	movs	r2, #1
 800b108:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b10c:	683b      	ldr	r3, [r7, #0]
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	2b09      	cmp	r3, #9
 800b112:	d925      	bls.n	800b160 <HAL_ADC_ConfigChannel+0x78>
 800b114:	687b      	ldr	r3, [r7, #4]
 800b116:	681b      	ldr	r3, [r3, #0]
 800b118:	68d9      	ldr	r1, [r3, #12]
 800b11a:	683b      	ldr	r3, [r7, #0]
 800b11c:	681b      	ldr	r3, [r3, #0]
 800b11e:	b29b      	uxth	r3, r3
 800b120:	461a      	mov	r2, r3
 800b122:	4613      	mov	r3, r2
 800b124:	005b      	lsls	r3, r3, #1
 800b126:	4413      	add	r3, r2
 800b128:	3b1e      	subs	r3, #30
 800b12a:	2207      	movs	r2, #7
 800b12c:	fa02 f303 	lsl.w	r3, r2, r3
 800b130:	43da      	mvns	r2, r3
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	681b      	ldr	r3, [r3, #0]
 800b136:	400a      	ands	r2, r1
 800b138:	60da      	str	r2, [r3, #12]
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	681b      	ldr	r3, [r3, #0]
 800b13e:	68d9      	ldr	r1, [r3, #12]
 800b140:	683b      	ldr	r3, [r7, #0]
 800b142:	689a      	ldr	r2, [r3, #8]
 800b144:	683b      	ldr	r3, [r7, #0]
 800b146:	681b      	ldr	r3, [r3, #0]
 800b148:	b29b      	uxth	r3, r3
 800b14a:	4618      	mov	r0, r3
 800b14c:	4603      	mov	r3, r0
 800b14e:	005b      	lsls	r3, r3, #1
 800b150:	4403      	add	r3, r0
 800b152:	3b1e      	subs	r3, #30
 800b154:	409a      	lsls	r2, r3
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	681b      	ldr	r3, [r3, #0]
 800b15a:	430a      	orrs	r2, r1
 800b15c:	60da      	str	r2, [r3, #12]
 800b15e:	e022      	b.n	800b1a6 <HAL_ADC_ConfigChannel+0xbe>
 800b160:	687b      	ldr	r3, [r7, #4]
 800b162:	681b      	ldr	r3, [r3, #0]
 800b164:	6919      	ldr	r1, [r3, #16]
 800b166:	683b      	ldr	r3, [r7, #0]
 800b168:	681b      	ldr	r3, [r3, #0]
 800b16a:	b29b      	uxth	r3, r3
 800b16c:	461a      	mov	r2, r3
 800b16e:	4613      	mov	r3, r2
 800b170:	005b      	lsls	r3, r3, #1
 800b172:	4413      	add	r3, r2
 800b174:	2207      	movs	r2, #7
 800b176:	fa02 f303 	lsl.w	r3, r2, r3
 800b17a:	43da      	mvns	r2, r3
 800b17c:	687b      	ldr	r3, [r7, #4]
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	400a      	ands	r2, r1
 800b182:	611a      	str	r2, [r3, #16]
 800b184:	687b      	ldr	r3, [r7, #4]
 800b186:	681b      	ldr	r3, [r3, #0]
 800b188:	6919      	ldr	r1, [r3, #16]
 800b18a:	683b      	ldr	r3, [r7, #0]
 800b18c:	689a      	ldr	r2, [r3, #8]
 800b18e:	683b      	ldr	r3, [r7, #0]
 800b190:	681b      	ldr	r3, [r3, #0]
 800b192:	b29b      	uxth	r3, r3
 800b194:	4618      	mov	r0, r3
 800b196:	4603      	mov	r3, r0
 800b198:	005b      	lsls	r3, r3, #1
 800b19a:	4403      	add	r3, r0
 800b19c:	409a      	lsls	r2, r3
 800b19e:	687b      	ldr	r3, [r7, #4]
 800b1a0:	681b      	ldr	r3, [r3, #0]
 800b1a2:	430a      	orrs	r2, r1
 800b1a4:	611a      	str	r2, [r3, #16]
 800b1a6:	683b      	ldr	r3, [r7, #0]
 800b1a8:	685b      	ldr	r3, [r3, #4]
 800b1aa:	2b06      	cmp	r3, #6
 800b1ac:	d824      	bhi.n	800b1f8 <HAL_ADC_ConfigChannel+0x110>
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	681b      	ldr	r3, [r3, #0]
 800b1b2:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b1b4:	683b      	ldr	r3, [r7, #0]
 800b1b6:	685a      	ldr	r2, [r3, #4]
 800b1b8:	4613      	mov	r3, r2
 800b1ba:	009b      	lsls	r3, r3, #2
 800b1bc:	4413      	add	r3, r2
 800b1be:	3b05      	subs	r3, #5
 800b1c0:	221f      	movs	r2, #31
 800b1c2:	fa02 f303 	lsl.w	r3, r2, r3
 800b1c6:	43da      	mvns	r2, r3
 800b1c8:	687b      	ldr	r3, [r7, #4]
 800b1ca:	681b      	ldr	r3, [r3, #0]
 800b1cc:	400a      	ands	r2, r1
 800b1ce:	635a      	str	r2, [r3, #52]	@ 0x34
 800b1d0:	687b      	ldr	r3, [r7, #4]
 800b1d2:	681b      	ldr	r3, [r3, #0]
 800b1d4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b1d6:	683b      	ldr	r3, [r7, #0]
 800b1d8:	681b      	ldr	r3, [r3, #0]
 800b1da:	b29b      	uxth	r3, r3
 800b1dc:	4618      	mov	r0, r3
 800b1de:	683b      	ldr	r3, [r7, #0]
 800b1e0:	685a      	ldr	r2, [r3, #4]
 800b1e2:	4613      	mov	r3, r2
 800b1e4:	009b      	lsls	r3, r3, #2
 800b1e6:	4413      	add	r3, r2
 800b1e8:	3b05      	subs	r3, #5
 800b1ea:	fa00 f203 	lsl.w	r2, r0, r3
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	681b      	ldr	r3, [r3, #0]
 800b1f2:	430a      	orrs	r2, r1
 800b1f4:	635a      	str	r2, [r3, #52]	@ 0x34
 800b1f6:	e04c      	b.n	800b292 <HAL_ADC_ConfigChannel+0x1aa>
 800b1f8:	683b      	ldr	r3, [r7, #0]
 800b1fa:	685b      	ldr	r3, [r3, #4]
 800b1fc:	2b0c      	cmp	r3, #12
 800b1fe:	d824      	bhi.n	800b24a <HAL_ADC_ConfigChannel+0x162>
 800b200:	687b      	ldr	r3, [r7, #4]
 800b202:	681b      	ldr	r3, [r3, #0]
 800b204:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b206:	683b      	ldr	r3, [r7, #0]
 800b208:	685a      	ldr	r2, [r3, #4]
 800b20a:	4613      	mov	r3, r2
 800b20c:	009b      	lsls	r3, r3, #2
 800b20e:	4413      	add	r3, r2
 800b210:	3b23      	subs	r3, #35	@ 0x23
 800b212:	221f      	movs	r2, #31
 800b214:	fa02 f303 	lsl.w	r3, r2, r3
 800b218:	43da      	mvns	r2, r3
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	681b      	ldr	r3, [r3, #0]
 800b21e:	400a      	ands	r2, r1
 800b220:	631a      	str	r2, [r3, #48]	@ 0x30
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	681b      	ldr	r3, [r3, #0]
 800b226:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b228:	683b      	ldr	r3, [r7, #0]
 800b22a:	681b      	ldr	r3, [r3, #0]
 800b22c:	b29b      	uxth	r3, r3
 800b22e:	4618      	mov	r0, r3
 800b230:	683b      	ldr	r3, [r7, #0]
 800b232:	685a      	ldr	r2, [r3, #4]
 800b234:	4613      	mov	r3, r2
 800b236:	009b      	lsls	r3, r3, #2
 800b238:	4413      	add	r3, r2
 800b23a:	3b23      	subs	r3, #35	@ 0x23
 800b23c:	fa00 f203 	lsl.w	r2, r0, r3
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	681b      	ldr	r3, [r3, #0]
 800b244:	430a      	orrs	r2, r1
 800b246:	631a      	str	r2, [r3, #48]	@ 0x30
 800b248:	e023      	b.n	800b292 <HAL_ADC_ConfigChannel+0x1aa>
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	681b      	ldr	r3, [r3, #0]
 800b24e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b250:	683b      	ldr	r3, [r7, #0]
 800b252:	685a      	ldr	r2, [r3, #4]
 800b254:	4613      	mov	r3, r2
 800b256:	009b      	lsls	r3, r3, #2
 800b258:	4413      	add	r3, r2
 800b25a:	3b41      	subs	r3, #65	@ 0x41
 800b25c:	221f      	movs	r2, #31
 800b25e:	fa02 f303 	lsl.w	r3, r2, r3
 800b262:	43da      	mvns	r2, r3
 800b264:	687b      	ldr	r3, [r7, #4]
 800b266:	681b      	ldr	r3, [r3, #0]
 800b268:	400a      	ands	r2, r1
 800b26a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b26c:	687b      	ldr	r3, [r7, #4]
 800b26e:	681b      	ldr	r3, [r3, #0]
 800b270:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b272:	683b      	ldr	r3, [r7, #0]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	b29b      	uxth	r3, r3
 800b278:	4618      	mov	r0, r3
 800b27a:	683b      	ldr	r3, [r7, #0]
 800b27c:	685a      	ldr	r2, [r3, #4]
 800b27e:	4613      	mov	r3, r2
 800b280:	009b      	lsls	r3, r3, #2
 800b282:	4413      	add	r3, r2
 800b284:	3b41      	subs	r3, #65	@ 0x41
 800b286:	fa00 f203 	lsl.w	r2, r0, r3
 800b28a:	687b      	ldr	r3, [r7, #4]
 800b28c:	681b      	ldr	r3, [r3, #0]
 800b28e:	430a      	orrs	r2, r1
 800b290:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b292:	4b22      	ldr	r3, [pc, #136]	@ (800b31c <HAL_ADC_ConfigChannel+0x234>)
 800b294:	60fb      	str	r3, [r7, #12]
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	681b      	ldr	r3, [r3, #0]
 800b29a:	4a21      	ldr	r2, [pc, #132]	@ (800b320 <HAL_ADC_ConfigChannel+0x238>)
 800b29c:	4293      	cmp	r3, r2
 800b29e:	d109      	bne.n	800b2b4 <HAL_ADC_ConfigChannel+0x1cc>
 800b2a0:	683b      	ldr	r3, [r7, #0]
 800b2a2:	681b      	ldr	r3, [r3, #0]
 800b2a4:	2b12      	cmp	r3, #18
 800b2a6:	d105      	bne.n	800b2b4 <HAL_ADC_ConfigChannel+0x1cc>
 800b2a8:	68fb      	ldr	r3, [r7, #12]
 800b2aa:	685b      	ldr	r3, [r3, #4]
 800b2ac:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 800b2b0:	68fb      	ldr	r3, [r7, #12]
 800b2b2:	605a      	str	r2, [r3, #4]
 800b2b4:	687b      	ldr	r3, [r7, #4]
 800b2b6:	681b      	ldr	r3, [r3, #0]
 800b2b8:	4a19      	ldr	r2, [pc, #100]	@ (800b320 <HAL_ADC_ConfigChannel+0x238>)
 800b2ba:	4293      	cmp	r3, r2
 800b2bc:	d123      	bne.n	800b306 <HAL_ADC_ConfigChannel+0x21e>
 800b2be:	683b      	ldr	r3, [r7, #0]
 800b2c0:	681b      	ldr	r3, [r3, #0]
 800b2c2:	2b10      	cmp	r3, #16
 800b2c4:	d003      	beq.n	800b2ce <HAL_ADC_ConfigChannel+0x1e6>
 800b2c6:	683b      	ldr	r3, [r7, #0]
 800b2c8:	681b      	ldr	r3, [r3, #0]
 800b2ca:	2b11      	cmp	r3, #17
 800b2cc:	d11b      	bne.n	800b306 <HAL_ADC_ConfigChannel+0x21e>
 800b2ce:	68fb      	ldr	r3, [r7, #12]
 800b2d0:	685b      	ldr	r3, [r3, #4]
 800b2d2:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800b2d6:	68fb      	ldr	r3, [r7, #12]
 800b2d8:	605a      	str	r2, [r3, #4]
 800b2da:	683b      	ldr	r3, [r7, #0]
 800b2dc:	681b      	ldr	r3, [r3, #0]
 800b2de:	2b10      	cmp	r3, #16
 800b2e0:	d111      	bne.n	800b306 <HAL_ADC_ConfigChannel+0x21e>
 800b2e2:	4b10      	ldr	r3, [pc, #64]	@ (800b324 <HAL_ADC_ConfigChannel+0x23c>)
 800b2e4:	681b      	ldr	r3, [r3, #0]
 800b2e6:	4a10      	ldr	r2, [pc, #64]	@ (800b328 <HAL_ADC_ConfigChannel+0x240>)
 800b2e8:	fba2 2303 	umull	r2, r3, r2, r3
 800b2ec:	0c9a      	lsrs	r2, r3, #18
 800b2ee:	4613      	mov	r3, r2
 800b2f0:	009b      	lsls	r3, r3, #2
 800b2f2:	4413      	add	r3, r2
 800b2f4:	005b      	lsls	r3, r3, #1
 800b2f6:	60bb      	str	r3, [r7, #8]
 800b2f8:	e002      	b.n	800b300 <HAL_ADC_ConfigChannel+0x218>
 800b2fa:	68bb      	ldr	r3, [r7, #8]
 800b2fc:	3b01      	subs	r3, #1
 800b2fe:	60bb      	str	r3, [r7, #8]
 800b300:	68bb      	ldr	r3, [r7, #8]
 800b302:	2b00      	cmp	r3, #0
 800b304:	d1f9      	bne.n	800b2fa <HAL_ADC_ConfigChannel+0x212>
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	2200      	movs	r2, #0
 800b30a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b30e:	2300      	movs	r3, #0
 800b310:	4618      	mov	r0, r3
 800b312:	3714      	adds	r7, #20
 800b314:	46bd      	mov	sp, r7
 800b316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b31a:	4770      	bx	lr
 800b31c:	40012300 	.word	0x40012300
 800b320:	40012000 	.word	0x40012000
 800b324:	20000004 	.word	0x20000004
 800b328:	431bde83 	.word	0x431bde83

0800b32c <ADC_Init>:
 800b32c:	b480      	push	{r7}
 800b32e:	b085      	sub	sp, #20
 800b330:	af00      	add	r7, sp, #0
 800b332:	6078      	str	r0, [r7, #4]
 800b334:	4b79      	ldr	r3, [pc, #484]	@ (800b51c <ADC_Init+0x1f0>)
 800b336:	60fb      	str	r3, [r7, #12]
 800b338:	68fb      	ldr	r3, [r7, #12]
 800b33a:	685b      	ldr	r3, [r3, #4]
 800b33c:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800b340:	68fb      	ldr	r3, [r7, #12]
 800b342:	605a      	str	r2, [r3, #4]
 800b344:	68fb      	ldr	r3, [r7, #12]
 800b346:	685a      	ldr	r2, [r3, #4]
 800b348:	687b      	ldr	r3, [r7, #4]
 800b34a:	685b      	ldr	r3, [r3, #4]
 800b34c:	431a      	orrs	r2, r3
 800b34e:	68fb      	ldr	r3, [r7, #12]
 800b350:	605a      	str	r2, [r3, #4]
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	681b      	ldr	r3, [r3, #0]
 800b356:	685a      	ldr	r2, [r3, #4]
 800b358:	687b      	ldr	r3, [r7, #4]
 800b35a:	681b      	ldr	r3, [r3, #0]
 800b35c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b360:	605a      	str	r2, [r3, #4]
 800b362:	687b      	ldr	r3, [r7, #4]
 800b364:	681b      	ldr	r3, [r3, #0]
 800b366:	6859      	ldr	r1, [r3, #4]
 800b368:	687b      	ldr	r3, [r7, #4]
 800b36a:	691b      	ldr	r3, [r3, #16]
 800b36c:	021a      	lsls	r2, r3, #8
 800b36e:	687b      	ldr	r3, [r7, #4]
 800b370:	681b      	ldr	r3, [r3, #0]
 800b372:	430a      	orrs	r2, r1
 800b374:	605a      	str	r2, [r3, #4]
 800b376:	687b      	ldr	r3, [r7, #4]
 800b378:	681b      	ldr	r3, [r3, #0]
 800b37a:	685a      	ldr	r2, [r3, #4]
 800b37c:	687b      	ldr	r3, [r7, #4]
 800b37e:	681b      	ldr	r3, [r3, #0]
 800b380:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800b384:	605a      	str	r2, [r3, #4]
 800b386:	687b      	ldr	r3, [r7, #4]
 800b388:	681b      	ldr	r3, [r3, #0]
 800b38a:	6859      	ldr	r1, [r3, #4]
 800b38c:	687b      	ldr	r3, [r7, #4]
 800b38e:	689a      	ldr	r2, [r3, #8]
 800b390:	687b      	ldr	r3, [r7, #4]
 800b392:	681b      	ldr	r3, [r3, #0]
 800b394:	430a      	orrs	r2, r1
 800b396:	605a      	str	r2, [r3, #4]
 800b398:	687b      	ldr	r3, [r7, #4]
 800b39a:	681b      	ldr	r3, [r3, #0]
 800b39c:	689a      	ldr	r2, [r3, #8]
 800b39e:	687b      	ldr	r3, [r7, #4]
 800b3a0:	681b      	ldr	r3, [r3, #0]
 800b3a2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b3a6:	609a      	str	r2, [r3, #8]
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	681b      	ldr	r3, [r3, #0]
 800b3ac:	6899      	ldr	r1, [r3, #8]
 800b3ae:	687b      	ldr	r3, [r7, #4]
 800b3b0:	68da      	ldr	r2, [r3, #12]
 800b3b2:	687b      	ldr	r3, [r7, #4]
 800b3b4:	681b      	ldr	r3, [r3, #0]
 800b3b6:	430a      	orrs	r2, r1
 800b3b8:	609a      	str	r2, [r3, #8]
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b3be:	4a58      	ldr	r2, [pc, #352]	@ (800b520 <ADC_Init+0x1f4>)
 800b3c0:	4293      	cmp	r3, r2
 800b3c2:	d022      	beq.n	800b40a <ADC_Init+0xde>
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	681b      	ldr	r3, [r3, #0]
 800b3c8:	689a      	ldr	r2, [r3, #8]
 800b3ca:	687b      	ldr	r3, [r7, #4]
 800b3cc:	681b      	ldr	r3, [r3, #0]
 800b3ce:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b3d2:	609a      	str	r2, [r3, #8]
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	681b      	ldr	r3, [r3, #0]
 800b3d8:	6899      	ldr	r1, [r3, #8]
 800b3da:	687b      	ldr	r3, [r7, #4]
 800b3dc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b3de:	687b      	ldr	r3, [r7, #4]
 800b3e0:	681b      	ldr	r3, [r3, #0]
 800b3e2:	430a      	orrs	r2, r1
 800b3e4:	609a      	str	r2, [r3, #8]
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	681b      	ldr	r3, [r3, #0]
 800b3ea:	689a      	ldr	r2, [r3, #8]
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	681b      	ldr	r3, [r3, #0]
 800b3f0:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b3f4:	609a      	str	r2, [r3, #8]
 800b3f6:	687b      	ldr	r3, [r7, #4]
 800b3f8:	681b      	ldr	r3, [r3, #0]
 800b3fa:	6899      	ldr	r1, [r3, #8]
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	681b      	ldr	r3, [r3, #0]
 800b404:	430a      	orrs	r2, r1
 800b406:	609a      	str	r2, [r3, #8]
 800b408:	e00f      	b.n	800b42a <ADC_Init+0xfe>
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	681b      	ldr	r3, [r3, #0]
 800b40e:	689a      	ldr	r2, [r3, #8]
 800b410:	687b      	ldr	r3, [r7, #4]
 800b412:	681b      	ldr	r3, [r3, #0]
 800b414:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b418:	609a      	str	r2, [r3, #8]
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	681b      	ldr	r3, [r3, #0]
 800b41e:	689a      	ldr	r2, [r3, #8]
 800b420:	687b      	ldr	r3, [r7, #4]
 800b422:	681b      	ldr	r3, [r3, #0]
 800b424:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b428:	609a      	str	r2, [r3, #8]
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	681b      	ldr	r3, [r3, #0]
 800b42e:	689a      	ldr	r2, [r3, #8]
 800b430:	687b      	ldr	r3, [r7, #4]
 800b432:	681b      	ldr	r3, [r3, #0]
 800b434:	f022 0202 	bic.w	r2, r2, #2
 800b438:	609a      	str	r2, [r3, #8]
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	681b      	ldr	r3, [r3, #0]
 800b43e:	6899      	ldr	r1, [r3, #8]
 800b440:	687b      	ldr	r3, [r7, #4]
 800b442:	7e1b      	ldrb	r3, [r3, #24]
 800b444:	005a      	lsls	r2, r3, #1
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	681b      	ldr	r3, [r3, #0]
 800b44a:	430a      	orrs	r2, r1
 800b44c:	609a      	str	r2, [r3, #8]
 800b44e:	687b      	ldr	r3, [r7, #4]
 800b450:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b454:	2b00      	cmp	r3, #0
 800b456:	d01b      	beq.n	800b490 <ADC_Init+0x164>
 800b458:	687b      	ldr	r3, [r7, #4]
 800b45a:	681b      	ldr	r3, [r3, #0]
 800b45c:	685a      	ldr	r2, [r3, #4]
 800b45e:	687b      	ldr	r3, [r7, #4]
 800b460:	681b      	ldr	r3, [r3, #0]
 800b462:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800b466:	605a      	str	r2, [r3, #4]
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	681b      	ldr	r3, [r3, #0]
 800b46c:	685a      	ldr	r2, [r3, #4]
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	681b      	ldr	r3, [r3, #0]
 800b472:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800b476:	605a      	str	r2, [r3, #4]
 800b478:	687b      	ldr	r3, [r7, #4]
 800b47a:	681b      	ldr	r3, [r3, #0]
 800b47c:	6859      	ldr	r1, [r3, #4]
 800b47e:	687b      	ldr	r3, [r7, #4]
 800b480:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b482:	3b01      	subs	r3, #1
 800b484:	035a      	lsls	r2, r3, #13
 800b486:	687b      	ldr	r3, [r7, #4]
 800b488:	681b      	ldr	r3, [r3, #0]
 800b48a:	430a      	orrs	r2, r1
 800b48c:	605a      	str	r2, [r3, #4]
 800b48e:	e007      	b.n	800b4a0 <ADC_Init+0x174>
 800b490:	687b      	ldr	r3, [r7, #4]
 800b492:	681b      	ldr	r3, [r3, #0]
 800b494:	685a      	ldr	r2, [r3, #4]
 800b496:	687b      	ldr	r3, [r7, #4]
 800b498:	681b      	ldr	r3, [r3, #0]
 800b49a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b49e:	605a      	str	r2, [r3, #4]
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	681b      	ldr	r3, [r3, #0]
 800b4a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	681b      	ldr	r3, [r3, #0]
 800b4aa:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800b4ae:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	681b      	ldr	r3, [r3, #0]
 800b4b4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	69db      	ldr	r3, [r3, #28]
 800b4ba:	3b01      	subs	r3, #1
 800b4bc:	051a      	lsls	r2, r3, #20
 800b4be:	687b      	ldr	r3, [r7, #4]
 800b4c0:	681b      	ldr	r3, [r3, #0]
 800b4c2:	430a      	orrs	r2, r1
 800b4c4:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	681b      	ldr	r3, [r3, #0]
 800b4ca:	689a      	ldr	r2, [r3, #8]
 800b4cc:	687b      	ldr	r3, [r7, #4]
 800b4ce:	681b      	ldr	r3, [r3, #0]
 800b4d0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800b4d4:	609a      	str	r2, [r3, #8]
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	681b      	ldr	r3, [r3, #0]
 800b4da:	6899      	ldr	r1, [r3, #8]
 800b4dc:	687b      	ldr	r3, [r7, #4]
 800b4de:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800b4e2:	025a      	lsls	r2, r3, #9
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	681b      	ldr	r3, [r3, #0]
 800b4e8:	430a      	orrs	r2, r1
 800b4ea:	609a      	str	r2, [r3, #8]
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	681b      	ldr	r3, [r3, #0]
 800b4f0:	689a      	ldr	r2, [r3, #8]
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	681b      	ldr	r3, [r3, #0]
 800b4f6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b4fa:	609a      	str	r2, [r3, #8]
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	681b      	ldr	r3, [r3, #0]
 800b500:	6899      	ldr	r1, [r3, #8]
 800b502:	687b      	ldr	r3, [r7, #4]
 800b504:	695b      	ldr	r3, [r3, #20]
 800b506:	029a      	lsls	r2, r3, #10
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	430a      	orrs	r2, r1
 800b50e:	609a      	str	r2, [r3, #8]
 800b510:	bf00      	nop
 800b512:	3714      	adds	r7, #20
 800b514:	46bd      	mov	sp, r7
 800b516:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b51a:	4770      	bx	lr
 800b51c:	40012300 	.word	0x40012300
 800b520:	0f000001 	.word	0x0f000001

0800b524 <HAL_CAN_Init>:
 800b524:	b580      	push	{r7, lr}
 800b526:	b084      	sub	sp, #16
 800b528:	af00      	add	r7, sp, #0
 800b52a:	6078      	str	r0, [r7, #4]
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	2b00      	cmp	r3, #0
 800b530:	d101      	bne.n	800b536 <HAL_CAN_Init+0x12>
 800b532:	2301      	movs	r3, #1
 800b534:	e0ed      	b.n	800b712 <HAL_CAN_Init+0x1ee>
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b53c:	b2db      	uxtb	r3, r3
 800b53e:	2b00      	cmp	r3, #0
 800b540:	d102      	bne.n	800b548 <HAL_CAN_Init+0x24>
 800b542:	6878      	ldr	r0, [r7, #4]
 800b544:	f7f7 fcd8 	bl	8002ef8 <HAL_CAN_MspInit>
 800b548:	687b      	ldr	r3, [r7, #4]
 800b54a:	681b      	ldr	r3, [r3, #0]
 800b54c:	681a      	ldr	r2, [r3, #0]
 800b54e:	687b      	ldr	r3, [r7, #4]
 800b550:	681b      	ldr	r3, [r3, #0]
 800b552:	f042 0201 	orr.w	r2, r2, #1
 800b556:	601a      	str	r2, [r3, #0]
 800b558:	f7ff fd52 	bl	800b000 <HAL_GetTick>
 800b55c:	60f8      	str	r0, [r7, #12]
 800b55e:	e012      	b.n	800b586 <HAL_CAN_Init+0x62>
 800b560:	f7ff fd4e 	bl	800b000 <HAL_GetTick>
 800b564:	4602      	mov	r2, r0
 800b566:	68fb      	ldr	r3, [r7, #12]
 800b568:	1ad3      	subs	r3, r2, r3
 800b56a:	2b0a      	cmp	r3, #10
 800b56c:	d90b      	bls.n	800b586 <HAL_CAN_Init+0x62>
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b572:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	625a      	str	r2, [r3, #36]	@ 0x24
 800b57a:	687b      	ldr	r3, [r7, #4]
 800b57c:	2205      	movs	r2, #5
 800b57e:	f883 2020 	strb.w	r2, [r3, #32]
 800b582:	2301      	movs	r3, #1
 800b584:	e0c5      	b.n	800b712 <HAL_CAN_Init+0x1ee>
 800b586:	687b      	ldr	r3, [r7, #4]
 800b588:	681b      	ldr	r3, [r3, #0]
 800b58a:	685b      	ldr	r3, [r3, #4]
 800b58c:	f003 0301 	and.w	r3, r3, #1
 800b590:	2b00      	cmp	r3, #0
 800b592:	d0e5      	beq.n	800b560 <HAL_CAN_Init+0x3c>
 800b594:	687b      	ldr	r3, [r7, #4]
 800b596:	681b      	ldr	r3, [r3, #0]
 800b598:	681a      	ldr	r2, [r3, #0]
 800b59a:	687b      	ldr	r3, [r7, #4]
 800b59c:	681b      	ldr	r3, [r3, #0]
 800b59e:	f022 0202 	bic.w	r2, r2, #2
 800b5a2:	601a      	str	r2, [r3, #0]
 800b5a4:	f7ff fd2c 	bl	800b000 <HAL_GetTick>
 800b5a8:	60f8      	str	r0, [r7, #12]
 800b5aa:	e012      	b.n	800b5d2 <HAL_CAN_Init+0xae>
 800b5ac:	f7ff fd28 	bl	800b000 <HAL_GetTick>
 800b5b0:	4602      	mov	r2, r0
 800b5b2:	68fb      	ldr	r3, [r7, #12]
 800b5b4:	1ad3      	subs	r3, r2, r3
 800b5b6:	2b0a      	cmp	r3, #10
 800b5b8:	d90b      	bls.n	800b5d2 <HAL_CAN_Init+0xae>
 800b5ba:	687b      	ldr	r3, [r7, #4]
 800b5bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5be:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	625a      	str	r2, [r3, #36]	@ 0x24
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	2205      	movs	r2, #5
 800b5ca:	f883 2020 	strb.w	r2, [r3, #32]
 800b5ce:	2301      	movs	r3, #1
 800b5d0:	e09f      	b.n	800b712 <HAL_CAN_Init+0x1ee>
 800b5d2:	687b      	ldr	r3, [r7, #4]
 800b5d4:	681b      	ldr	r3, [r3, #0]
 800b5d6:	685b      	ldr	r3, [r3, #4]
 800b5d8:	f003 0302 	and.w	r3, r3, #2
 800b5dc:	2b00      	cmp	r3, #0
 800b5de:	d1e5      	bne.n	800b5ac <HAL_CAN_Init+0x88>
 800b5e0:	687b      	ldr	r3, [r7, #4]
 800b5e2:	7e1b      	ldrb	r3, [r3, #24]
 800b5e4:	2b01      	cmp	r3, #1
 800b5e6:	d108      	bne.n	800b5fa <HAL_CAN_Init+0xd6>
 800b5e8:	687b      	ldr	r3, [r7, #4]
 800b5ea:	681b      	ldr	r3, [r3, #0]
 800b5ec:	681a      	ldr	r2, [r3, #0]
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	681b      	ldr	r3, [r3, #0]
 800b5f2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800b5f6:	601a      	str	r2, [r3, #0]
 800b5f8:	e007      	b.n	800b60a <HAL_CAN_Init+0xe6>
 800b5fa:	687b      	ldr	r3, [r7, #4]
 800b5fc:	681b      	ldr	r3, [r3, #0]
 800b5fe:	681a      	ldr	r2, [r3, #0]
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	681b      	ldr	r3, [r3, #0]
 800b604:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800b608:	601a      	str	r2, [r3, #0]
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	7e5b      	ldrb	r3, [r3, #25]
 800b60e:	2b01      	cmp	r3, #1
 800b610:	d108      	bne.n	800b624 <HAL_CAN_Init+0x100>
 800b612:	687b      	ldr	r3, [r7, #4]
 800b614:	681b      	ldr	r3, [r3, #0]
 800b616:	681a      	ldr	r2, [r3, #0]
 800b618:	687b      	ldr	r3, [r7, #4]
 800b61a:	681b      	ldr	r3, [r3, #0]
 800b61c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800b620:	601a      	str	r2, [r3, #0]
 800b622:	e007      	b.n	800b634 <HAL_CAN_Init+0x110>
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	681b      	ldr	r3, [r3, #0]
 800b628:	681a      	ldr	r2, [r3, #0]
 800b62a:	687b      	ldr	r3, [r7, #4]
 800b62c:	681b      	ldr	r3, [r3, #0]
 800b62e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b632:	601a      	str	r2, [r3, #0]
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	7e9b      	ldrb	r3, [r3, #26]
 800b638:	2b01      	cmp	r3, #1
 800b63a:	d108      	bne.n	800b64e <HAL_CAN_Init+0x12a>
 800b63c:	687b      	ldr	r3, [r7, #4]
 800b63e:	681b      	ldr	r3, [r3, #0]
 800b640:	681a      	ldr	r2, [r3, #0]
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	681b      	ldr	r3, [r3, #0]
 800b646:	f042 0220 	orr.w	r2, r2, #32
 800b64a:	601a      	str	r2, [r3, #0]
 800b64c:	e007      	b.n	800b65e <HAL_CAN_Init+0x13a>
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	681b      	ldr	r3, [r3, #0]
 800b652:	681a      	ldr	r2, [r3, #0]
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	681b      	ldr	r3, [r3, #0]
 800b658:	f022 0220 	bic.w	r2, r2, #32
 800b65c:	601a      	str	r2, [r3, #0]
 800b65e:	687b      	ldr	r3, [r7, #4]
 800b660:	7edb      	ldrb	r3, [r3, #27]
 800b662:	2b01      	cmp	r3, #1
 800b664:	d108      	bne.n	800b678 <HAL_CAN_Init+0x154>
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	681b      	ldr	r3, [r3, #0]
 800b66a:	681a      	ldr	r2, [r3, #0]
 800b66c:	687b      	ldr	r3, [r7, #4]
 800b66e:	681b      	ldr	r3, [r3, #0]
 800b670:	f022 0210 	bic.w	r2, r2, #16
 800b674:	601a      	str	r2, [r3, #0]
 800b676:	e007      	b.n	800b688 <HAL_CAN_Init+0x164>
 800b678:	687b      	ldr	r3, [r7, #4]
 800b67a:	681b      	ldr	r3, [r3, #0]
 800b67c:	681a      	ldr	r2, [r3, #0]
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	681b      	ldr	r3, [r3, #0]
 800b682:	f042 0210 	orr.w	r2, r2, #16
 800b686:	601a      	str	r2, [r3, #0]
 800b688:	687b      	ldr	r3, [r7, #4]
 800b68a:	7f1b      	ldrb	r3, [r3, #28]
 800b68c:	2b01      	cmp	r3, #1
 800b68e:	d108      	bne.n	800b6a2 <HAL_CAN_Init+0x17e>
 800b690:	687b      	ldr	r3, [r7, #4]
 800b692:	681b      	ldr	r3, [r3, #0]
 800b694:	681a      	ldr	r2, [r3, #0]
 800b696:	687b      	ldr	r3, [r7, #4]
 800b698:	681b      	ldr	r3, [r3, #0]
 800b69a:	f042 0208 	orr.w	r2, r2, #8
 800b69e:	601a      	str	r2, [r3, #0]
 800b6a0:	e007      	b.n	800b6b2 <HAL_CAN_Init+0x18e>
 800b6a2:	687b      	ldr	r3, [r7, #4]
 800b6a4:	681b      	ldr	r3, [r3, #0]
 800b6a6:	681a      	ldr	r2, [r3, #0]
 800b6a8:	687b      	ldr	r3, [r7, #4]
 800b6aa:	681b      	ldr	r3, [r3, #0]
 800b6ac:	f022 0208 	bic.w	r2, r2, #8
 800b6b0:	601a      	str	r2, [r3, #0]
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	7f5b      	ldrb	r3, [r3, #29]
 800b6b6:	2b01      	cmp	r3, #1
 800b6b8:	d108      	bne.n	800b6cc <HAL_CAN_Init+0x1a8>
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	681b      	ldr	r3, [r3, #0]
 800b6be:	681a      	ldr	r2, [r3, #0]
 800b6c0:	687b      	ldr	r3, [r7, #4]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	f042 0204 	orr.w	r2, r2, #4
 800b6c8:	601a      	str	r2, [r3, #0]
 800b6ca:	e007      	b.n	800b6dc <HAL_CAN_Init+0x1b8>
 800b6cc:	687b      	ldr	r3, [r7, #4]
 800b6ce:	681b      	ldr	r3, [r3, #0]
 800b6d0:	681a      	ldr	r2, [r3, #0]
 800b6d2:	687b      	ldr	r3, [r7, #4]
 800b6d4:	681b      	ldr	r3, [r3, #0]
 800b6d6:	f022 0204 	bic.w	r2, r2, #4
 800b6da:	601a      	str	r2, [r3, #0]
 800b6dc:	687b      	ldr	r3, [r7, #4]
 800b6de:	689a      	ldr	r2, [r3, #8]
 800b6e0:	687b      	ldr	r3, [r7, #4]
 800b6e2:	68db      	ldr	r3, [r3, #12]
 800b6e4:	431a      	orrs	r2, r3
 800b6e6:	687b      	ldr	r3, [r7, #4]
 800b6e8:	691b      	ldr	r3, [r3, #16]
 800b6ea:	431a      	orrs	r2, r3
 800b6ec:	687b      	ldr	r3, [r7, #4]
 800b6ee:	695b      	ldr	r3, [r3, #20]
 800b6f0:	ea42 0103 	orr.w	r1, r2, r3
 800b6f4:	687b      	ldr	r3, [r7, #4]
 800b6f6:	685b      	ldr	r3, [r3, #4]
 800b6f8:	1e5a      	subs	r2, r3, #1
 800b6fa:	687b      	ldr	r3, [r7, #4]
 800b6fc:	681b      	ldr	r3, [r3, #0]
 800b6fe:	430a      	orrs	r2, r1
 800b700:	61da      	str	r2, [r3, #28]
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	2200      	movs	r2, #0
 800b706:	625a      	str	r2, [r3, #36]	@ 0x24
 800b708:	687b      	ldr	r3, [r7, #4]
 800b70a:	2201      	movs	r2, #1
 800b70c:	f883 2020 	strb.w	r2, [r3, #32]
 800b710:	2300      	movs	r3, #0
 800b712:	4618      	mov	r0, r3
 800b714:	3710      	adds	r7, #16
 800b716:	46bd      	mov	sp, r7
 800b718:	bd80      	pop	{r7, pc}
	...

0800b71c <HAL_CAN_ConfigFilter>:
 800b71c:	b480      	push	{r7}
 800b71e:	b087      	sub	sp, #28
 800b720:	af00      	add	r7, sp, #0
 800b722:	6078      	str	r0, [r7, #4]
 800b724:	6039      	str	r1, [r7, #0]
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	681b      	ldr	r3, [r3, #0]
 800b72a:	617b      	str	r3, [r7, #20]
 800b72c:	687b      	ldr	r3, [r7, #4]
 800b72e:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b732:	74fb      	strb	r3, [r7, #19]
 800b734:	7cfb      	ldrb	r3, [r7, #19]
 800b736:	2b01      	cmp	r3, #1
 800b738:	d003      	beq.n	800b742 <HAL_CAN_ConfigFilter+0x26>
 800b73a:	7cfb      	ldrb	r3, [r7, #19]
 800b73c:	2b02      	cmp	r3, #2
 800b73e:	f040 80be 	bne.w	800b8be <HAL_CAN_ConfigFilter+0x1a2>
 800b742:	4b65      	ldr	r3, [pc, #404]	@ (800b8d8 <HAL_CAN_ConfigFilter+0x1bc>)
 800b744:	617b      	str	r3, [r7, #20]
 800b746:	697b      	ldr	r3, [r7, #20]
 800b748:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b74c:	f043 0201 	orr.w	r2, r3, #1
 800b750:	697b      	ldr	r3, [r7, #20]
 800b752:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b756:	697b      	ldr	r3, [r7, #20]
 800b758:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b75c:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 800b760:	697b      	ldr	r3, [r7, #20]
 800b762:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b766:	697b      	ldr	r3, [r7, #20]
 800b768:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800b76c:	683b      	ldr	r3, [r7, #0]
 800b76e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b770:	021b      	lsls	r3, r3, #8
 800b772:	431a      	orrs	r2, r3
 800b774:	697b      	ldr	r3, [r7, #20]
 800b776:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b77a:	683b      	ldr	r3, [r7, #0]
 800b77c:	695b      	ldr	r3, [r3, #20]
 800b77e:	f003 031f 	and.w	r3, r3, #31
 800b782:	2201      	movs	r2, #1
 800b784:	fa02 f303 	lsl.w	r3, r2, r3
 800b788:	60fb      	str	r3, [r7, #12]
 800b78a:	697b      	ldr	r3, [r7, #20]
 800b78c:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800b790:	68fb      	ldr	r3, [r7, #12]
 800b792:	43db      	mvns	r3, r3
 800b794:	401a      	ands	r2, r3
 800b796:	697b      	ldr	r3, [r7, #20]
 800b798:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800b79c:	683b      	ldr	r3, [r7, #0]
 800b79e:	69db      	ldr	r3, [r3, #28]
 800b7a0:	2b00      	cmp	r3, #0
 800b7a2:	d123      	bne.n	800b7ec <HAL_CAN_ConfigFilter+0xd0>
 800b7a4:	697b      	ldr	r3, [r7, #20]
 800b7a6:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800b7aa:	68fb      	ldr	r3, [r7, #12]
 800b7ac:	43db      	mvns	r3, r3
 800b7ae:	401a      	ands	r2, r3
 800b7b0:	697b      	ldr	r3, [r7, #20]
 800b7b2:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800b7b6:	683b      	ldr	r3, [r7, #0]
 800b7b8:	68db      	ldr	r3, [r3, #12]
 800b7ba:	0419      	lsls	r1, r3, #16
 800b7bc:	683b      	ldr	r3, [r7, #0]
 800b7be:	685b      	ldr	r3, [r3, #4]
 800b7c0:	b29b      	uxth	r3, r3
 800b7c2:	683a      	ldr	r2, [r7, #0]
 800b7c4:	6952      	ldr	r2, [r2, #20]
 800b7c6:	4319      	orrs	r1, r3
 800b7c8:	697b      	ldr	r3, [r7, #20]
 800b7ca:	3248      	adds	r2, #72	@ 0x48
 800b7cc:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800b7d0:	683b      	ldr	r3, [r7, #0]
 800b7d2:	689b      	ldr	r3, [r3, #8]
 800b7d4:	0419      	lsls	r1, r3, #16
 800b7d6:	683b      	ldr	r3, [r7, #0]
 800b7d8:	681b      	ldr	r3, [r3, #0]
 800b7da:	b29a      	uxth	r2, r3
 800b7dc:	683b      	ldr	r3, [r7, #0]
 800b7de:	695b      	ldr	r3, [r3, #20]
 800b7e0:	430a      	orrs	r2, r1
 800b7e2:	6979      	ldr	r1, [r7, #20]
 800b7e4:	3348      	adds	r3, #72	@ 0x48
 800b7e6:	00db      	lsls	r3, r3, #3
 800b7e8:	440b      	add	r3, r1
 800b7ea:	605a      	str	r2, [r3, #4]
 800b7ec:	683b      	ldr	r3, [r7, #0]
 800b7ee:	69db      	ldr	r3, [r3, #28]
 800b7f0:	2b01      	cmp	r3, #1
 800b7f2:	d122      	bne.n	800b83a <HAL_CAN_ConfigFilter+0x11e>
 800b7f4:	697b      	ldr	r3, [r7, #20]
 800b7f6:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800b7fa:	68fb      	ldr	r3, [r7, #12]
 800b7fc:	431a      	orrs	r2, r3
 800b7fe:	697b      	ldr	r3, [r7, #20]
 800b800:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800b804:	683b      	ldr	r3, [r7, #0]
 800b806:	681b      	ldr	r3, [r3, #0]
 800b808:	0419      	lsls	r1, r3, #16
 800b80a:	683b      	ldr	r3, [r7, #0]
 800b80c:	685b      	ldr	r3, [r3, #4]
 800b80e:	b29b      	uxth	r3, r3
 800b810:	683a      	ldr	r2, [r7, #0]
 800b812:	6952      	ldr	r2, [r2, #20]
 800b814:	4319      	orrs	r1, r3
 800b816:	697b      	ldr	r3, [r7, #20]
 800b818:	3248      	adds	r2, #72	@ 0x48
 800b81a:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800b81e:	683b      	ldr	r3, [r7, #0]
 800b820:	689b      	ldr	r3, [r3, #8]
 800b822:	0419      	lsls	r1, r3, #16
 800b824:	683b      	ldr	r3, [r7, #0]
 800b826:	68db      	ldr	r3, [r3, #12]
 800b828:	b29a      	uxth	r2, r3
 800b82a:	683b      	ldr	r3, [r7, #0]
 800b82c:	695b      	ldr	r3, [r3, #20]
 800b82e:	430a      	orrs	r2, r1
 800b830:	6979      	ldr	r1, [r7, #20]
 800b832:	3348      	adds	r3, #72	@ 0x48
 800b834:	00db      	lsls	r3, r3, #3
 800b836:	440b      	add	r3, r1
 800b838:	605a      	str	r2, [r3, #4]
 800b83a:	683b      	ldr	r3, [r7, #0]
 800b83c:	699b      	ldr	r3, [r3, #24]
 800b83e:	2b00      	cmp	r3, #0
 800b840:	d109      	bne.n	800b856 <HAL_CAN_ConfigFilter+0x13a>
 800b842:	697b      	ldr	r3, [r7, #20]
 800b844:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800b848:	68fb      	ldr	r3, [r7, #12]
 800b84a:	43db      	mvns	r3, r3
 800b84c:	401a      	ands	r2, r3
 800b84e:	697b      	ldr	r3, [r7, #20]
 800b850:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800b854:	e007      	b.n	800b866 <HAL_CAN_ConfigFilter+0x14a>
 800b856:	697b      	ldr	r3, [r7, #20]
 800b858:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800b85c:	68fb      	ldr	r3, [r7, #12]
 800b85e:	431a      	orrs	r2, r3
 800b860:	697b      	ldr	r3, [r7, #20]
 800b862:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800b866:	683b      	ldr	r3, [r7, #0]
 800b868:	691b      	ldr	r3, [r3, #16]
 800b86a:	2b00      	cmp	r3, #0
 800b86c:	d109      	bne.n	800b882 <HAL_CAN_ConfigFilter+0x166>
 800b86e:	697b      	ldr	r3, [r7, #20]
 800b870:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800b874:	68fb      	ldr	r3, [r7, #12]
 800b876:	43db      	mvns	r3, r3
 800b878:	401a      	ands	r2, r3
 800b87a:	697b      	ldr	r3, [r7, #20]
 800b87c:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800b880:	e007      	b.n	800b892 <HAL_CAN_ConfigFilter+0x176>
 800b882:	697b      	ldr	r3, [r7, #20]
 800b884:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800b888:	68fb      	ldr	r3, [r7, #12]
 800b88a:	431a      	orrs	r2, r3
 800b88c:	697b      	ldr	r3, [r7, #20]
 800b88e:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800b892:	683b      	ldr	r3, [r7, #0]
 800b894:	6a1b      	ldr	r3, [r3, #32]
 800b896:	2b01      	cmp	r3, #1
 800b898:	d107      	bne.n	800b8aa <HAL_CAN_ConfigFilter+0x18e>
 800b89a:	697b      	ldr	r3, [r7, #20]
 800b89c:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800b8a0:	68fb      	ldr	r3, [r7, #12]
 800b8a2:	431a      	orrs	r2, r3
 800b8a4:	697b      	ldr	r3, [r7, #20]
 800b8a6:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800b8aa:	697b      	ldr	r3, [r7, #20]
 800b8ac:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b8b0:	f023 0201 	bic.w	r2, r3, #1
 800b8b4:	697b      	ldr	r3, [r7, #20]
 800b8b6:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b8ba:	2300      	movs	r3, #0
 800b8bc:	e006      	b.n	800b8cc <HAL_CAN_ConfigFilter+0x1b0>
 800b8be:	687b      	ldr	r3, [r7, #4]
 800b8c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b8c2:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800b8c6:	687b      	ldr	r3, [r7, #4]
 800b8c8:	625a      	str	r2, [r3, #36]	@ 0x24
 800b8ca:	2301      	movs	r3, #1
 800b8cc:	4618      	mov	r0, r3
 800b8ce:	371c      	adds	r7, #28
 800b8d0:	46bd      	mov	sp, r7
 800b8d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8d6:	4770      	bx	lr
 800b8d8:	40006400 	.word	0x40006400

0800b8dc <HAL_CAN_Start>:
 800b8dc:	b580      	push	{r7, lr}
 800b8de:	b084      	sub	sp, #16
 800b8e0:	af00      	add	r7, sp, #0
 800b8e2:	6078      	str	r0, [r7, #4]
 800b8e4:	687b      	ldr	r3, [r7, #4]
 800b8e6:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b8ea:	b2db      	uxtb	r3, r3
 800b8ec:	2b01      	cmp	r3, #1
 800b8ee:	d12e      	bne.n	800b94e <HAL_CAN_Start+0x72>
 800b8f0:	687b      	ldr	r3, [r7, #4]
 800b8f2:	2202      	movs	r2, #2
 800b8f4:	f883 2020 	strb.w	r2, [r3, #32]
 800b8f8:	687b      	ldr	r3, [r7, #4]
 800b8fa:	681b      	ldr	r3, [r3, #0]
 800b8fc:	681a      	ldr	r2, [r3, #0]
 800b8fe:	687b      	ldr	r3, [r7, #4]
 800b900:	681b      	ldr	r3, [r3, #0]
 800b902:	f022 0201 	bic.w	r2, r2, #1
 800b906:	601a      	str	r2, [r3, #0]
 800b908:	f7ff fb7a 	bl	800b000 <HAL_GetTick>
 800b90c:	60f8      	str	r0, [r7, #12]
 800b90e:	e012      	b.n	800b936 <HAL_CAN_Start+0x5a>
 800b910:	f7ff fb76 	bl	800b000 <HAL_GetTick>
 800b914:	4602      	mov	r2, r0
 800b916:	68fb      	ldr	r3, [r7, #12]
 800b918:	1ad3      	subs	r3, r2, r3
 800b91a:	2b0a      	cmp	r3, #10
 800b91c:	d90b      	bls.n	800b936 <HAL_CAN_Start+0x5a>
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b922:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b926:	687b      	ldr	r3, [r7, #4]
 800b928:	625a      	str	r2, [r3, #36]	@ 0x24
 800b92a:	687b      	ldr	r3, [r7, #4]
 800b92c:	2205      	movs	r2, #5
 800b92e:	f883 2020 	strb.w	r2, [r3, #32]
 800b932:	2301      	movs	r3, #1
 800b934:	e012      	b.n	800b95c <HAL_CAN_Start+0x80>
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	681b      	ldr	r3, [r3, #0]
 800b93a:	685b      	ldr	r3, [r3, #4]
 800b93c:	f003 0301 	and.w	r3, r3, #1
 800b940:	2b00      	cmp	r3, #0
 800b942:	d1e5      	bne.n	800b910 <HAL_CAN_Start+0x34>
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	2200      	movs	r2, #0
 800b948:	625a      	str	r2, [r3, #36]	@ 0x24
 800b94a:	2300      	movs	r3, #0
 800b94c:	e006      	b.n	800b95c <HAL_CAN_Start+0x80>
 800b94e:	687b      	ldr	r3, [r7, #4]
 800b950:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b952:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	625a      	str	r2, [r3, #36]	@ 0x24
 800b95a:	2301      	movs	r3, #1
 800b95c:	4618      	mov	r0, r3
 800b95e:	3710      	adds	r7, #16
 800b960:	46bd      	mov	sp, r7
 800b962:	bd80      	pop	{r7, pc}

0800b964 <HAL_CAN_AddTxMessage>:
 800b964:	b480      	push	{r7}
 800b966:	b089      	sub	sp, #36	@ 0x24
 800b968:	af00      	add	r7, sp, #0
 800b96a:	60f8      	str	r0, [r7, #12]
 800b96c:	60b9      	str	r1, [r7, #8]
 800b96e:	607a      	str	r2, [r7, #4]
 800b970:	603b      	str	r3, [r7, #0]
 800b972:	68fb      	ldr	r3, [r7, #12]
 800b974:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b978:	77fb      	strb	r3, [r7, #31]
 800b97a:	68fb      	ldr	r3, [r7, #12]
 800b97c:	681b      	ldr	r3, [r3, #0]
 800b97e:	689b      	ldr	r3, [r3, #8]
 800b980:	61bb      	str	r3, [r7, #24]
 800b982:	7ffb      	ldrb	r3, [r7, #31]
 800b984:	2b01      	cmp	r3, #1
 800b986:	d003      	beq.n	800b990 <HAL_CAN_AddTxMessage+0x2c>
 800b988:	7ffb      	ldrb	r3, [r7, #31]
 800b98a:	2b02      	cmp	r3, #2
 800b98c:	f040 80b8 	bne.w	800bb00 <HAL_CAN_AddTxMessage+0x19c>
 800b990:	69bb      	ldr	r3, [r7, #24]
 800b992:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800b996:	2b00      	cmp	r3, #0
 800b998:	d10a      	bne.n	800b9b0 <HAL_CAN_AddTxMessage+0x4c>
 800b99a:	69bb      	ldr	r3, [r7, #24]
 800b99c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800b9a0:	2b00      	cmp	r3, #0
 800b9a2:	d105      	bne.n	800b9b0 <HAL_CAN_AddTxMessage+0x4c>
 800b9a4:	69bb      	ldr	r3, [r7, #24]
 800b9a6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800b9aa:	2b00      	cmp	r3, #0
 800b9ac:	f000 80a0 	beq.w	800baf0 <HAL_CAN_AddTxMessage+0x18c>
 800b9b0:	69bb      	ldr	r3, [r7, #24]
 800b9b2:	0e1b      	lsrs	r3, r3, #24
 800b9b4:	f003 0303 	and.w	r3, r3, #3
 800b9b8:	617b      	str	r3, [r7, #20]
 800b9ba:	697b      	ldr	r3, [r7, #20]
 800b9bc:	2b02      	cmp	r3, #2
 800b9be:	d907      	bls.n	800b9d0 <HAL_CAN_AddTxMessage+0x6c>
 800b9c0:	68fb      	ldr	r3, [r7, #12]
 800b9c2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9c4:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800b9c8:	68fb      	ldr	r3, [r7, #12]
 800b9ca:	625a      	str	r2, [r3, #36]	@ 0x24
 800b9cc:	2301      	movs	r3, #1
 800b9ce:	e09e      	b.n	800bb0e <HAL_CAN_AddTxMessage+0x1aa>
 800b9d0:	2201      	movs	r2, #1
 800b9d2:	697b      	ldr	r3, [r7, #20]
 800b9d4:	409a      	lsls	r2, r3
 800b9d6:	683b      	ldr	r3, [r7, #0]
 800b9d8:	601a      	str	r2, [r3, #0]
 800b9da:	68bb      	ldr	r3, [r7, #8]
 800b9dc:	689b      	ldr	r3, [r3, #8]
 800b9de:	2b00      	cmp	r3, #0
 800b9e0:	d10d      	bne.n	800b9fe <HAL_CAN_AddTxMessage+0x9a>
 800b9e2:	68bb      	ldr	r3, [r7, #8]
 800b9e4:	681b      	ldr	r3, [r3, #0]
 800b9e6:	055a      	lsls	r2, r3, #21
 800b9e8:	68bb      	ldr	r3, [r7, #8]
 800b9ea:	68db      	ldr	r3, [r3, #12]
 800b9ec:	68f9      	ldr	r1, [r7, #12]
 800b9ee:	6809      	ldr	r1, [r1, #0]
 800b9f0:	431a      	orrs	r2, r3
 800b9f2:	697b      	ldr	r3, [r7, #20]
 800b9f4:	3318      	adds	r3, #24
 800b9f6:	011b      	lsls	r3, r3, #4
 800b9f8:	440b      	add	r3, r1
 800b9fa:	601a      	str	r2, [r3, #0]
 800b9fc:	e00f      	b.n	800ba1e <HAL_CAN_AddTxMessage+0xba>
 800b9fe:	68bb      	ldr	r3, [r7, #8]
 800ba00:	685b      	ldr	r3, [r3, #4]
 800ba02:	00da      	lsls	r2, r3, #3
 800ba04:	68bb      	ldr	r3, [r7, #8]
 800ba06:	689b      	ldr	r3, [r3, #8]
 800ba08:	431a      	orrs	r2, r3
 800ba0a:	68bb      	ldr	r3, [r7, #8]
 800ba0c:	68db      	ldr	r3, [r3, #12]
 800ba0e:	68f9      	ldr	r1, [r7, #12]
 800ba10:	6809      	ldr	r1, [r1, #0]
 800ba12:	431a      	orrs	r2, r3
 800ba14:	697b      	ldr	r3, [r7, #20]
 800ba16:	3318      	adds	r3, #24
 800ba18:	011b      	lsls	r3, r3, #4
 800ba1a:	440b      	add	r3, r1
 800ba1c:	601a      	str	r2, [r3, #0]
 800ba1e:	68fb      	ldr	r3, [r7, #12]
 800ba20:	6819      	ldr	r1, [r3, #0]
 800ba22:	68bb      	ldr	r3, [r7, #8]
 800ba24:	691a      	ldr	r2, [r3, #16]
 800ba26:	697b      	ldr	r3, [r7, #20]
 800ba28:	3318      	adds	r3, #24
 800ba2a:	011b      	lsls	r3, r3, #4
 800ba2c:	440b      	add	r3, r1
 800ba2e:	3304      	adds	r3, #4
 800ba30:	601a      	str	r2, [r3, #0]
 800ba32:	68bb      	ldr	r3, [r7, #8]
 800ba34:	7d1b      	ldrb	r3, [r3, #20]
 800ba36:	2b01      	cmp	r3, #1
 800ba38:	d111      	bne.n	800ba5e <HAL_CAN_AddTxMessage+0xfa>
 800ba3a:	68fb      	ldr	r3, [r7, #12]
 800ba3c:	681a      	ldr	r2, [r3, #0]
 800ba3e:	697b      	ldr	r3, [r7, #20]
 800ba40:	3318      	adds	r3, #24
 800ba42:	011b      	lsls	r3, r3, #4
 800ba44:	4413      	add	r3, r2
 800ba46:	3304      	adds	r3, #4
 800ba48:	681b      	ldr	r3, [r3, #0]
 800ba4a:	68fa      	ldr	r2, [r7, #12]
 800ba4c:	6811      	ldr	r1, [r2, #0]
 800ba4e:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800ba52:	697b      	ldr	r3, [r7, #20]
 800ba54:	3318      	adds	r3, #24
 800ba56:	011b      	lsls	r3, r3, #4
 800ba58:	440b      	add	r3, r1
 800ba5a:	3304      	adds	r3, #4
 800ba5c:	601a      	str	r2, [r3, #0]
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	3307      	adds	r3, #7
 800ba62:	781b      	ldrb	r3, [r3, #0]
 800ba64:	061a      	lsls	r2, r3, #24
 800ba66:	687b      	ldr	r3, [r7, #4]
 800ba68:	3306      	adds	r3, #6
 800ba6a:	781b      	ldrb	r3, [r3, #0]
 800ba6c:	041b      	lsls	r3, r3, #16
 800ba6e:	431a      	orrs	r2, r3
 800ba70:	687b      	ldr	r3, [r7, #4]
 800ba72:	3305      	adds	r3, #5
 800ba74:	781b      	ldrb	r3, [r3, #0]
 800ba76:	021b      	lsls	r3, r3, #8
 800ba78:	4313      	orrs	r3, r2
 800ba7a:	687a      	ldr	r2, [r7, #4]
 800ba7c:	3204      	adds	r2, #4
 800ba7e:	7812      	ldrb	r2, [r2, #0]
 800ba80:	4610      	mov	r0, r2
 800ba82:	68fa      	ldr	r2, [r7, #12]
 800ba84:	6811      	ldr	r1, [r2, #0]
 800ba86:	ea43 0200 	orr.w	r2, r3, r0
 800ba8a:	697b      	ldr	r3, [r7, #20]
 800ba8c:	011b      	lsls	r3, r3, #4
 800ba8e:	440b      	add	r3, r1
 800ba90:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800ba94:	601a      	str	r2, [r3, #0]
 800ba96:	687b      	ldr	r3, [r7, #4]
 800ba98:	3303      	adds	r3, #3
 800ba9a:	781b      	ldrb	r3, [r3, #0]
 800ba9c:	061a      	lsls	r2, r3, #24
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	3302      	adds	r3, #2
 800baa2:	781b      	ldrb	r3, [r3, #0]
 800baa4:	041b      	lsls	r3, r3, #16
 800baa6:	431a      	orrs	r2, r3
 800baa8:	687b      	ldr	r3, [r7, #4]
 800baaa:	3301      	adds	r3, #1
 800baac:	781b      	ldrb	r3, [r3, #0]
 800baae:	021b      	lsls	r3, r3, #8
 800bab0:	4313      	orrs	r3, r2
 800bab2:	687a      	ldr	r2, [r7, #4]
 800bab4:	7812      	ldrb	r2, [r2, #0]
 800bab6:	4610      	mov	r0, r2
 800bab8:	68fa      	ldr	r2, [r7, #12]
 800baba:	6811      	ldr	r1, [r2, #0]
 800babc:	ea43 0200 	orr.w	r2, r3, r0
 800bac0:	697b      	ldr	r3, [r7, #20]
 800bac2:	011b      	lsls	r3, r3, #4
 800bac4:	440b      	add	r3, r1
 800bac6:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800baca:	601a      	str	r2, [r3, #0]
 800bacc:	68fb      	ldr	r3, [r7, #12]
 800bace:	681a      	ldr	r2, [r3, #0]
 800bad0:	697b      	ldr	r3, [r7, #20]
 800bad2:	3318      	adds	r3, #24
 800bad4:	011b      	lsls	r3, r3, #4
 800bad6:	4413      	add	r3, r2
 800bad8:	681b      	ldr	r3, [r3, #0]
 800bada:	68fa      	ldr	r2, [r7, #12]
 800badc:	6811      	ldr	r1, [r2, #0]
 800bade:	f043 0201 	orr.w	r2, r3, #1
 800bae2:	697b      	ldr	r3, [r7, #20]
 800bae4:	3318      	adds	r3, #24
 800bae6:	011b      	lsls	r3, r3, #4
 800bae8:	440b      	add	r3, r1
 800baea:	601a      	str	r2, [r3, #0]
 800baec:	2300      	movs	r3, #0
 800baee:	e00e      	b.n	800bb0e <HAL_CAN_AddTxMessage+0x1aa>
 800baf0:	68fb      	ldr	r3, [r7, #12]
 800baf2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800baf4:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800baf8:	68fb      	ldr	r3, [r7, #12]
 800bafa:	625a      	str	r2, [r3, #36]	@ 0x24
 800bafc:	2301      	movs	r3, #1
 800bafe:	e006      	b.n	800bb0e <HAL_CAN_AddTxMessage+0x1aa>
 800bb00:	68fb      	ldr	r3, [r7, #12]
 800bb02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb04:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bb08:	68fb      	ldr	r3, [r7, #12]
 800bb0a:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb0c:	2301      	movs	r3, #1
 800bb0e:	4618      	mov	r0, r3
 800bb10:	3724      	adds	r7, #36	@ 0x24
 800bb12:	46bd      	mov	sp, r7
 800bb14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb18:	4770      	bx	lr

0800bb1a <HAL_CAN_GetRxMessage>:
 800bb1a:	b480      	push	{r7}
 800bb1c:	b087      	sub	sp, #28
 800bb1e:	af00      	add	r7, sp, #0
 800bb20:	60f8      	str	r0, [r7, #12]
 800bb22:	60b9      	str	r1, [r7, #8]
 800bb24:	607a      	str	r2, [r7, #4]
 800bb26:	603b      	str	r3, [r7, #0]
 800bb28:	68fb      	ldr	r3, [r7, #12]
 800bb2a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bb2e:	75fb      	strb	r3, [r7, #23]
 800bb30:	7dfb      	ldrb	r3, [r7, #23]
 800bb32:	2b01      	cmp	r3, #1
 800bb34:	d003      	beq.n	800bb3e <HAL_CAN_GetRxMessage+0x24>
 800bb36:	7dfb      	ldrb	r3, [r7, #23]
 800bb38:	2b02      	cmp	r3, #2
 800bb3a:	f040 80f3 	bne.w	800bd24 <HAL_CAN_GetRxMessage+0x20a>
 800bb3e:	68bb      	ldr	r3, [r7, #8]
 800bb40:	2b00      	cmp	r3, #0
 800bb42:	d10e      	bne.n	800bb62 <HAL_CAN_GetRxMessage+0x48>
 800bb44:	68fb      	ldr	r3, [r7, #12]
 800bb46:	681b      	ldr	r3, [r3, #0]
 800bb48:	68db      	ldr	r3, [r3, #12]
 800bb4a:	f003 0303 	and.w	r3, r3, #3
 800bb4e:	2b00      	cmp	r3, #0
 800bb50:	d116      	bne.n	800bb80 <HAL_CAN_GetRxMessage+0x66>
 800bb52:	68fb      	ldr	r3, [r7, #12]
 800bb54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb56:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bb5a:	68fb      	ldr	r3, [r7, #12]
 800bb5c:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb5e:	2301      	movs	r3, #1
 800bb60:	e0e7      	b.n	800bd32 <HAL_CAN_GetRxMessage+0x218>
 800bb62:	68fb      	ldr	r3, [r7, #12]
 800bb64:	681b      	ldr	r3, [r3, #0]
 800bb66:	691b      	ldr	r3, [r3, #16]
 800bb68:	f003 0303 	and.w	r3, r3, #3
 800bb6c:	2b00      	cmp	r3, #0
 800bb6e:	d107      	bne.n	800bb80 <HAL_CAN_GetRxMessage+0x66>
 800bb70:	68fb      	ldr	r3, [r7, #12]
 800bb72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb74:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bb78:	68fb      	ldr	r3, [r7, #12]
 800bb7a:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb7c:	2301      	movs	r3, #1
 800bb7e:	e0d8      	b.n	800bd32 <HAL_CAN_GetRxMessage+0x218>
 800bb80:	68fb      	ldr	r3, [r7, #12]
 800bb82:	681a      	ldr	r2, [r3, #0]
 800bb84:	68bb      	ldr	r3, [r7, #8]
 800bb86:	331b      	adds	r3, #27
 800bb88:	011b      	lsls	r3, r3, #4
 800bb8a:	4413      	add	r3, r2
 800bb8c:	681b      	ldr	r3, [r3, #0]
 800bb8e:	f003 0204 	and.w	r2, r3, #4
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	609a      	str	r2, [r3, #8]
 800bb96:	687b      	ldr	r3, [r7, #4]
 800bb98:	689b      	ldr	r3, [r3, #8]
 800bb9a:	2b00      	cmp	r3, #0
 800bb9c:	d10c      	bne.n	800bbb8 <HAL_CAN_GetRxMessage+0x9e>
 800bb9e:	68fb      	ldr	r3, [r7, #12]
 800bba0:	681a      	ldr	r2, [r3, #0]
 800bba2:	68bb      	ldr	r3, [r7, #8]
 800bba4:	331b      	adds	r3, #27
 800bba6:	011b      	lsls	r3, r3, #4
 800bba8:	4413      	add	r3, r2
 800bbaa:	681b      	ldr	r3, [r3, #0]
 800bbac:	0d5b      	lsrs	r3, r3, #21
 800bbae:	f3c3 020a 	ubfx	r2, r3, #0, #11
 800bbb2:	687b      	ldr	r3, [r7, #4]
 800bbb4:	601a      	str	r2, [r3, #0]
 800bbb6:	e00b      	b.n	800bbd0 <HAL_CAN_GetRxMessage+0xb6>
 800bbb8:	68fb      	ldr	r3, [r7, #12]
 800bbba:	681a      	ldr	r2, [r3, #0]
 800bbbc:	68bb      	ldr	r3, [r7, #8]
 800bbbe:	331b      	adds	r3, #27
 800bbc0:	011b      	lsls	r3, r3, #4
 800bbc2:	4413      	add	r3, r2
 800bbc4:	681b      	ldr	r3, [r3, #0]
 800bbc6:	08db      	lsrs	r3, r3, #3
 800bbc8:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 800bbcc:	687b      	ldr	r3, [r7, #4]
 800bbce:	605a      	str	r2, [r3, #4]
 800bbd0:	68fb      	ldr	r3, [r7, #12]
 800bbd2:	681a      	ldr	r2, [r3, #0]
 800bbd4:	68bb      	ldr	r3, [r7, #8]
 800bbd6:	331b      	adds	r3, #27
 800bbd8:	011b      	lsls	r3, r3, #4
 800bbda:	4413      	add	r3, r2
 800bbdc:	681b      	ldr	r3, [r3, #0]
 800bbde:	f003 0202 	and.w	r2, r3, #2
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	60da      	str	r2, [r3, #12]
 800bbe6:	68fb      	ldr	r3, [r7, #12]
 800bbe8:	681a      	ldr	r2, [r3, #0]
 800bbea:	68bb      	ldr	r3, [r7, #8]
 800bbec:	331b      	adds	r3, #27
 800bbee:	011b      	lsls	r3, r3, #4
 800bbf0:	4413      	add	r3, r2
 800bbf2:	3304      	adds	r3, #4
 800bbf4:	681b      	ldr	r3, [r3, #0]
 800bbf6:	f003 020f 	and.w	r2, r3, #15
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	611a      	str	r2, [r3, #16]
 800bbfe:	68fb      	ldr	r3, [r7, #12]
 800bc00:	681a      	ldr	r2, [r3, #0]
 800bc02:	68bb      	ldr	r3, [r7, #8]
 800bc04:	331b      	adds	r3, #27
 800bc06:	011b      	lsls	r3, r3, #4
 800bc08:	4413      	add	r3, r2
 800bc0a:	3304      	adds	r3, #4
 800bc0c:	681b      	ldr	r3, [r3, #0]
 800bc0e:	0a1b      	lsrs	r3, r3, #8
 800bc10:	b2da      	uxtb	r2, r3
 800bc12:	687b      	ldr	r3, [r7, #4]
 800bc14:	619a      	str	r2, [r3, #24]
 800bc16:	68fb      	ldr	r3, [r7, #12]
 800bc18:	681a      	ldr	r2, [r3, #0]
 800bc1a:	68bb      	ldr	r3, [r7, #8]
 800bc1c:	331b      	adds	r3, #27
 800bc1e:	011b      	lsls	r3, r3, #4
 800bc20:	4413      	add	r3, r2
 800bc22:	3304      	adds	r3, #4
 800bc24:	681b      	ldr	r3, [r3, #0]
 800bc26:	0c1b      	lsrs	r3, r3, #16
 800bc28:	b29a      	uxth	r2, r3
 800bc2a:	687b      	ldr	r3, [r7, #4]
 800bc2c:	615a      	str	r2, [r3, #20]
 800bc2e:	68fb      	ldr	r3, [r7, #12]
 800bc30:	681a      	ldr	r2, [r3, #0]
 800bc32:	68bb      	ldr	r3, [r7, #8]
 800bc34:	011b      	lsls	r3, r3, #4
 800bc36:	4413      	add	r3, r2
 800bc38:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bc3c:	681b      	ldr	r3, [r3, #0]
 800bc3e:	b2da      	uxtb	r2, r3
 800bc40:	683b      	ldr	r3, [r7, #0]
 800bc42:	701a      	strb	r2, [r3, #0]
 800bc44:	68fb      	ldr	r3, [r7, #12]
 800bc46:	681a      	ldr	r2, [r3, #0]
 800bc48:	68bb      	ldr	r3, [r7, #8]
 800bc4a:	011b      	lsls	r3, r3, #4
 800bc4c:	4413      	add	r3, r2
 800bc4e:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bc52:	681b      	ldr	r3, [r3, #0]
 800bc54:	0a1a      	lsrs	r2, r3, #8
 800bc56:	683b      	ldr	r3, [r7, #0]
 800bc58:	3301      	adds	r3, #1
 800bc5a:	b2d2      	uxtb	r2, r2
 800bc5c:	701a      	strb	r2, [r3, #0]
 800bc5e:	68fb      	ldr	r3, [r7, #12]
 800bc60:	681a      	ldr	r2, [r3, #0]
 800bc62:	68bb      	ldr	r3, [r7, #8]
 800bc64:	011b      	lsls	r3, r3, #4
 800bc66:	4413      	add	r3, r2
 800bc68:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	0c1a      	lsrs	r2, r3, #16
 800bc70:	683b      	ldr	r3, [r7, #0]
 800bc72:	3302      	adds	r3, #2
 800bc74:	b2d2      	uxtb	r2, r2
 800bc76:	701a      	strb	r2, [r3, #0]
 800bc78:	68fb      	ldr	r3, [r7, #12]
 800bc7a:	681a      	ldr	r2, [r3, #0]
 800bc7c:	68bb      	ldr	r3, [r7, #8]
 800bc7e:	011b      	lsls	r3, r3, #4
 800bc80:	4413      	add	r3, r2
 800bc82:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	0e1a      	lsrs	r2, r3, #24
 800bc8a:	683b      	ldr	r3, [r7, #0]
 800bc8c:	3303      	adds	r3, #3
 800bc8e:	b2d2      	uxtb	r2, r2
 800bc90:	701a      	strb	r2, [r3, #0]
 800bc92:	68fb      	ldr	r3, [r7, #12]
 800bc94:	681a      	ldr	r2, [r3, #0]
 800bc96:	68bb      	ldr	r3, [r7, #8]
 800bc98:	011b      	lsls	r3, r3, #4
 800bc9a:	4413      	add	r3, r2
 800bc9c:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bca0:	681a      	ldr	r2, [r3, #0]
 800bca2:	683b      	ldr	r3, [r7, #0]
 800bca4:	3304      	adds	r3, #4
 800bca6:	b2d2      	uxtb	r2, r2
 800bca8:	701a      	strb	r2, [r3, #0]
 800bcaa:	68fb      	ldr	r3, [r7, #12]
 800bcac:	681a      	ldr	r2, [r3, #0]
 800bcae:	68bb      	ldr	r3, [r7, #8]
 800bcb0:	011b      	lsls	r3, r3, #4
 800bcb2:	4413      	add	r3, r2
 800bcb4:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bcb8:	681b      	ldr	r3, [r3, #0]
 800bcba:	0a1a      	lsrs	r2, r3, #8
 800bcbc:	683b      	ldr	r3, [r7, #0]
 800bcbe:	3305      	adds	r3, #5
 800bcc0:	b2d2      	uxtb	r2, r2
 800bcc2:	701a      	strb	r2, [r3, #0]
 800bcc4:	68fb      	ldr	r3, [r7, #12]
 800bcc6:	681a      	ldr	r2, [r3, #0]
 800bcc8:	68bb      	ldr	r3, [r7, #8]
 800bcca:	011b      	lsls	r3, r3, #4
 800bccc:	4413      	add	r3, r2
 800bcce:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bcd2:	681b      	ldr	r3, [r3, #0]
 800bcd4:	0c1a      	lsrs	r2, r3, #16
 800bcd6:	683b      	ldr	r3, [r7, #0]
 800bcd8:	3306      	adds	r3, #6
 800bcda:	b2d2      	uxtb	r2, r2
 800bcdc:	701a      	strb	r2, [r3, #0]
 800bcde:	68fb      	ldr	r3, [r7, #12]
 800bce0:	681a      	ldr	r2, [r3, #0]
 800bce2:	68bb      	ldr	r3, [r7, #8]
 800bce4:	011b      	lsls	r3, r3, #4
 800bce6:	4413      	add	r3, r2
 800bce8:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bcec:	681b      	ldr	r3, [r3, #0]
 800bcee:	0e1a      	lsrs	r2, r3, #24
 800bcf0:	683b      	ldr	r3, [r7, #0]
 800bcf2:	3307      	adds	r3, #7
 800bcf4:	b2d2      	uxtb	r2, r2
 800bcf6:	701a      	strb	r2, [r3, #0]
 800bcf8:	68bb      	ldr	r3, [r7, #8]
 800bcfa:	2b00      	cmp	r3, #0
 800bcfc:	d108      	bne.n	800bd10 <HAL_CAN_GetRxMessage+0x1f6>
 800bcfe:	68fb      	ldr	r3, [r7, #12]
 800bd00:	681b      	ldr	r3, [r3, #0]
 800bd02:	68da      	ldr	r2, [r3, #12]
 800bd04:	68fb      	ldr	r3, [r7, #12]
 800bd06:	681b      	ldr	r3, [r3, #0]
 800bd08:	f042 0220 	orr.w	r2, r2, #32
 800bd0c:	60da      	str	r2, [r3, #12]
 800bd0e:	e007      	b.n	800bd20 <HAL_CAN_GetRxMessage+0x206>
 800bd10:	68fb      	ldr	r3, [r7, #12]
 800bd12:	681b      	ldr	r3, [r3, #0]
 800bd14:	691a      	ldr	r2, [r3, #16]
 800bd16:	68fb      	ldr	r3, [r7, #12]
 800bd18:	681b      	ldr	r3, [r3, #0]
 800bd1a:	f042 0220 	orr.w	r2, r2, #32
 800bd1e:	611a      	str	r2, [r3, #16]
 800bd20:	2300      	movs	r3, #0
 800bd22:	e006      	b.n	800bd32 <HAL_CAN_GetRxMessage+0x218>
 800bd24:	68fb      	ldr	r3, [r7, #12]
 800bd26:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd28:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bd2c:	68fb      	ldr	r3, [r7, #12]
 800bd2e:	625a      	str	r2, [r3, #36]	@ 0x24
 800bd30:	2301      	movs	r3, #1
 800bd32:	4618      	mov	r0, r3
 800bd34:	371c      	adds	r7, #28
 800bd36:	46bd      	mov	sp, r7
 800bd38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd3c:	4770      	bx	lr

0800bd3e <HAL_CAN_ActivateNotification>:
 800bd3e:	b480      	push	{r7}
 800bd40:	b085      	sub	sp, #20
 800bd42:	af00      	add	r7, sp, #0
 800bd44:	6078      	str	r0, [r7, #4]
 800bd46:	6039      	str	r1, [r7, #0]
 800bd48:	687b      	ldr	r3, [r7, #4]
 800bd4a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bd4e:	73fb      	strb	r3, [r7, #15]
 800bd50:	7bfb      	ldrb	r3, [r7, #15]
 800bd52:	2b01      	cmp	r3, #1
 800bd54:	d002      	beq.n	800bd5c <HAL_CAN_ActivateNotification+0x1e>
 800bd56:	7bfb      	ldrb	r3, [r7, #15]
 800bd58:	2b02      	cmp	r3, #2
 800bd5a:	d109      	bne.n	800bd70 <HAL_CAN_ActivateNotification+0x32>
 800bd5c:	687b      	ldr	r3, [r7, #4]
 800bd5e:	681b      	ldr	r3, [r3, #0]
 800bd60:	6959      	ldr	r1, [r3, #20]
 800bd62:	687b      	ldr	r3, [r7, #4]
 800bd64:	681b      	ldr	r3, [r3, #0]
 800bd66:	683a      	ldr	r2, [r7, #0]
 800bd68:	430a      	orrs	r2, r1
 800bd6a:	615a      	str	r2, [r3, #20]
 800bd6c:	2300      	movs	r3, #0
 800bd6e:	e006      	b.n	800bd7e <HAL_CAN_ActivateNotification+0x40>
 800bd70:	687b      	ldr	r3, [r7, #4]
 800bd72:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd74:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bd78:	687b      	ldr	r3, [r7, #4]
 800bd7a:	625a      	str	r2, [r3, #36]	@ 0x24
 800bd7c:	2301      	movs	r3, #1
 800bd7e:	4618      	mov	r0, r3
 800bd80:	3714      	adds	r7, #20
 800bd82:	46bd      	mov	sp, r7
 800bd84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd88:	4770      	bx	lr

0800bd8a <HAL_CAN_DeactivateNotification>:
 800bd8a:	b480      	push	{r7}
 800bd8c:	b085      	sub	sp, #20
 800bd8e:	af00      	add	r7, sp, #0
 800bd90:	6078      	str	r0, [r7, #4]
 800bd92:	6039      	str	r1, [r7, #0]
 800bd94:	687b      	ldr	r3, [r7, #4]
 800bd96:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bd9a:	73fb      	strb	r3, [r7, #15]
 800bd9c:	7bfb      	ldrb	r3, [r7, #15]
 800bd9e:	2b01      	cmp	r3, #1
 800bda0:	d002      	beq.n	800bda8 <HAL_CAN_DeactivateNotification+0x1e>
 800bda2:	7bfb      	ldrb	r3, [r7, #15]
 800bda4:	2b02      	cmp	r3, #2
 800bda6:	d10a      	bne.n	800bdbe <HAL_CAN_DeactivateNotification+0x34>
 800bda8:	687b      	ldr	r3, [r7, #4]
 800bdaa:	681b      	ldr	r3, [r3, #0]
 800bdac:	6959      	ldr	r1, [r3, #20]
 800bdae:	683b      	ldr	r3, [r7, #0]
 800bdb0:	43da      	mvns	r2, r3
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	681b      	ldr	r3, [r3, #0]
 800bdb6:	400a      	ands	r2, r1
 800bdb8:	615a      	str	r2, [r3, #20]
 800bdba:	2300      	movs	r3, #0
 800bdbc:	e006      	b.n	800bdcc <HAL_CAN_DeactivateNotification+0x42>
 800bdbe:	687b      	ldr	r3, [r7, #4]
 800bdc0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bdc2:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	625a      	str	r2, [r3, #36]	@ 0x24
 800bdca:	2301      	movs	r3, #1
 800bdcc:	4618      	mov	r0, r3
 800bdce:	3714      	adds	r7, #20
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdd6:	4770      	bx	lr

0800bdd8 <HAL_CAN_IRQHandler>:
 800bdd8:	b580      	push	{r7, lr}
 800bdda:	b08a      	sub	sp, #40	@ 0x28
 800bddc:	af00      	add	r7, sp, #0
 800bdde:	6078      	str	r0, [r7, #4]
 800bde0:	2300      	movs	r3, #0
 800bde2:	627b      	str	r3, [r7, #36]	@ 0x24
 800bde4:	687b      	ldr	r3, [r7, #4]
 800bde6:	681b      	ldr	r3, [r3, #0]
 800bde8:	695b      	ldr	r3, [r3, #20]
 800bdea:	623b      	str	r3, [r7, #32]
 800bdec:	687b      	ldr	r3, [r7, #4]
 800bdee:	681b      	ldr	r3, [r3, #0]
 800bdf0:	685b      	ldr	r3, [r3, #4]
 800bdf2:	61fb      	str	r3, [r7, #28]
 800bdf4:	687b      	ldr	r3, [r7, #4]
 800bdf6:	681b      	ldr	r3, [r3, #0]
 800bdf8:	689b      	ldr	r3, [r3, #8]
 800bdfa:	61bb      	str	r3, [r7, #24]
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	681b      	ldr	r3, [r3, #0]
 800be00:	68db      	ldr	r3, [r3, #12]
 800be02:	617b      	str	r3, [r7, #20]
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	681b      	ldr	r3, [r3, #0]
 800be08:	691b      	ldr	r3, [r3, #16]
 800be0a:	613b      	str	r3, [r7, #16]
 800be0c:	687b      	ldr	r3, [r7, #4]
 800be0e:	681b      	ldr	r3, [r3, #0]
 800be10:	699b      	ldr	r3, [r3, #24]
 800be12:	60fb      	str	r3, [r7, #12]
 800be14:	6a3b      	ldr	r3, [r7, #32]
 800be16:	f003 0301 	and.w	r3, r3, #1
 800be1a:	2b00      	cmp	r3, #0
 800be1c:	d07c      	beq.n	800bf18 <HAL_CAN_IRQHandler+0x140>
 800be1e:	69bb      	ldr	r3, [r7, #24]
 800be20:	f003 0301 	and.w	r3, r3, #1
 800be24:	2b00      	cmp	r3, #0
 800be26:	d023      	beq.n	800be70 <HAL_CAN_IRQHandler+0x98>
 800be28:	687b      	ldr	r3, [r7, #4]
 800be2a:	681b      	ldr	r3, [r3, #0]
 800be2c:	2201      	movs	r2, #1
 800be2e:	609a      	str	r2, [r3, #8]
 800be30:	69bb      	ldr	r3, [r7, #24]
 800be32:	f003 0302 	and.w	r3, r3, #2
 800be36:	2b00      	cmp	r3, #0
 800be38:	d003      	beq.n	800be42 <HAL_CAN_IRQHandler+0x6a>
 800be3a:	6878      	ldr	r0, [r7, #4]
 800be3c:	f000 f983 	bl	800c146 <HAL_CAN_TxMailbox0CompleteCallback>
 800be40:	e016      	b.n	800be70 <HAL_CAN_IRQHandler+0x98>
 800be42:	69bb      	ldr	r3, [r7, #24]
 800be44:	f003 0304 	and.w	r3, r3, #4
 800be48:	2b00      	cmp	r3, #0
 800be4a:	d004      	beq.n	800be56 <HAL_CAN_IRQHandler+0x7e>
 800be4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800be4e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800be52:	627b      	str	r3, [r7, #36]	@ 0x24
 800be54:	e00c      	b.n	800be70 <HAL_CAN_IRQHandler+0x98>
 800be56:	69bb      	ldr	r3, [r7, #24]
 800be58:	f003 0308 	and.w	r3, r3, #8
 800be5c:	2b00      	cmp	r3, #0
 800be5e:	d004      	beq.n	800be6a <HAL_CAN_IRQHandler+0x92>
 800be60:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800be62:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800be66:	627b      	str	r3, [r7, #36]	@ 0x24
 800be68:	e002      	b.n	800be70 <HAL_CAN_IRQHandler+0x98>
 800be6a:	6878      	ldr	r0, [r7, #4]
 800be6c:	f000 f989 	bl	800c182 <HAL_CAN_TxMailbox0AbortCallback>
 800be70:	69bb      	ldr	r3, [r7, #24]
 800be72:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800be76:	2b00      	cmp	r3, #0
 800be78:	d024      	beq.n	800bec4 <HAL_CAN_IRQHandler+0xec>
 800be7a:	687b      	ldr	r3, [r7, #4]
 800be7c:	681b      	ldr	r3, [r3, #0]
 800be7e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800be82:	609a      	str	r2, [r3, #8]
 800be84:	69bb      	ldr	r3, [r7, #24]
 800be86:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800be8a:	2b00      	cmp	r3, #0
 800be8c:	d003      	beq.n	800be96 <HAL_CAN_IRQHandler+0xbe>
 800be8e:	6878      	ldr	r0, [r7, #4]
 800be90:	f000 f963 	bl	800c15a <HAL_CAN_TxMailbox1CompleteCallback>
 800be94:	e016      	b.n	800bec4 <HAL_CAN_IRQHandler+0xec>
 800be96:	69bb      	ldr	r3, [r7, #24]
 800be98:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800be9c:	2b00      	cmp	r3, #0
 800be9e:	d004      	beq.n	800beaa <HAL_CAN_IRQHandler+0xd2>
 800bea0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bea2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800bea6:	627b      	str	r3, [r7, #36]	@ 0x24
 800bea8:	e00c      	b.n	800bec4 <HAL_CAN_IRQHandler+0xec>
 800beaa:	69bb      	ldr	r3, [r7, #24]
 800beac:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800beb0:	2b00      	cmp	r3, #0
 800beb2:	d004      	beq.n	800bebe <HAL_CAN_IRQHandler+0xe6>
 800beb4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800beb6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800beba:	627b      	str	r3, [r7, #36]	@ 0x24
 800bebc:	e002      	b.n	800bec4 <HAL_CAN_IRQHandler+0xec>
 800bebe:	6878      	ldr	r0, [r7, #4]
 800bec0:	f000 f969 	bl	800c196 <HAL_CAN_TxMailbox1AbortCallback>
 800bec4:	69bb      	ldr	r3, [r7, #24]
 800bec6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800beca:	2b00      	cmp	r3, #0
 800becc:	d024      	beq.n	800bf18 <HAL_CAN_IRQHandler+0x140>
 800bece:	687b      	ldr	r3, [r7, #4]
 800bed0:	681b      	ldr	r3, [r3, #0]
 800bed2:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800bed6:	609a      	str	r2, [r3, #8]
 800bed8:	69bb      	ldr	r3, [r7, #24]
 800beda:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800bede:	2b00      	cmp	r3, #0
 800bee0:	d003      	beq.n	800beea <HAL_CAN_IRQHandler+0x112>
 800bee2:	6878      	ldr	r0, [r7, #4]
 800bee4:	f000 f943 	bl	800c16e <HAL_CAN_TxMailbox2CompleteCallback>
 800bee8:	e016      	b.n	800bf18 <HAL_CAN_IRQHandler+0x140>
 800beea:	69bb      	ldr	r3, [r7, #24]
 800beec:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800bef0:	2b00      	cmp	r3, #0
 800bef2:	d004      	beq.n	800befe <HAL_CAN_IRQHandler+0x126>
 800bef4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bef6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800befa:	627b      	str	r3, [r7, #36]	@ 0x24
 800befc:	e00c      	b.n	800bf18 <HAL_CAN_IRQHandler+0x140>
 800befe:	69bb      	ldr	r3, [r7, #24]
 800bf00:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800bf04:	2b00      	cmp	r3, #0
 800bf06:	d004      	beq.n	800bf12 <HAL_CAN_IRQHandler+0x13a>
 800bf08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf0a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800bf0e:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf10:	e002      	b.n	800bf18 <HAL_CAN_IRQHandler+0x140>
 800bf12:	6878      	ldr	r0, [r7, #4]
 800bf14:	f000 f949 	bl	800c1aa <HAL_CAN_TxMailbox2AbortCallback>
 800bf18:	6a3b      	ldr	r3, [r7, #32]
 800bf1a:	f003 0308 	and.w	r3, r3, #8
 800bf1e:	2b00      	cmp	r3, #0
 800bf20:	d00c      	beq.n	800bf3c <HAL_CAN_IRQHandler+0x164>
 800bf22:	697b      	ldr	r3, [r7, #20]
 800bf24:	f003 0310 	and.w	r3, r3, #16
 800bf28:	2b00      	cmp	r3, #0
 800bf2a:	d007      	beq.n	800bf3c <HAL_CAN_IRQHandler+0x164>
 800bf2c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf2e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800bf32:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf34:	687b      	ldr	r3, [r7, #4]
 800bf36:	681b      	ldr	r3, [r3, #0]
 800bf38:	2210      	movs	r2, #16
 800bf3a:	60da      	str	r2, [r3, #12]
 800bf3c:	6a3b      	ldr	r3, [r7, #32]
 800bf3e:	f003 0304 	and.w	r3, r3, #4
 800bf42:	2b00      	cmp	r3, #0
 800bf44:	d00b      	beq.n	800bf5e <HAL_CAN_IRQHandler+0x186>
 800bf46:	697b      	ldr	r3, [r7, #20]
 800bf48:	f003 0308 	and.w	r3, r3, #8
 800bf4c:	2b00      	cmp	r3, #0
 800bf4e:	d006      	beq.n	800bf5e <HAL_CAN_IRQHandler+0x186>
 800bf50:	687b      	ldr	r3, [r7, #4]
 800bf52:	681b      	ldr	r3, [r3, #0]
 800bf54:	2208      	movs	r2, #8
 800bf56:	60da      	str	r2, [r3, #12]
 800bf58:	6878      	ldr	r0, [r7, #4]
 800bf5a:	f000 f930 	bl	800c1be <HAL_CAN_RxFifo0FullCallback>
 800bf5e:	6a3b      	ldr	r3, [r7, #32]
 800bf60:	f003 0302 	and.w	r3, r3, #2
 800bf64:	2b00      	cmp	r3, #0
 800bf66:	d009      	beq.n	800bf7c <HAL_CAN_IRQHandler+0x1a4>
 800bf68:	687b      	ldr	r3, [r7, #4]
 800bf6a:	681b      	ldr	r3, [r3, #0]
 800bf6c:	68db      	ldr	r3, [r3, #12]
 800bf6e:	f003 0303 	and.w	r3, r3, #3
 800bf72:	2b00      	cmp	r3, #0
 800bf74:	d002      	beq.n	800bf7c <HAL_CAN_IRQHandler+0x1a4>
 800bf76:	6878      	ldr	r0, [r7, #4]
 800bf78:	f7f5 f928 	bl	80011cc <HAL_CAN_RxFifo0MsgPendingCallback>
 800bf7c:	6a3b      	ldr	r3, [r7, #32]
 800bf7e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800bf82:	2b00      	cmp	r3, #0
 800bf84:	d00c      	beq.n	800bfa0 <HAL_CAN_IRQHandler+0x1c8>
 800bf86:	693b      	ldr	r3, [r7, #16]
 800bf88:	f003 0310 	and.w	r3, r3, #16
 800bf8c:	2b00      	cmp	r3, #0
 800bf8e:	d007      	beq.n	800bfa0 <HAL_CAN_IRQHandler+0x1c8>
 800bf90:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf92:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800bf96:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf98:	687b      	ldr	r3, [r7, #4]
 800bf9a:	681b      	ldr	r3, [r3, #0]
 800bf9c:	2210      	movs	r2, #16
 800bf9e:	611a      	str	r2, [r3, #16]
 800bfa0:	6a3b      	ldr	r3, [r7, #32]
 800bfa2:	f003 0320 	and.w	r3, r3, #32
 800bfa6:	2b00      	cmp	r3, #0
 800bfa8:	d00b      	beq.n	800bfc2 <HAL_CAN_IRQHandler+0x1ea>
 800bfaa:	693b      	ldr	r3, [r7, #16]
 800bfac:	f003 0308 	and.w	r3, r3, #8
 800bfb0:	2b00      	cmp	r3, #0
 800bfb2:	d006      	beq.n	800bfc2 <HAL_CAN_IRQHandler+0x1ea>
 800bfb4:	687b      	ldr	r3, [r7, #4]
 800bfb6:	681b      	ldr	r3, [r3, #0]
 800bfb8:	2208      	movs	r2, #8
 800bfba:	611a      	str	r2, [r3, #16]
 800bfbc:	6878      	ldr	r0, [r7, #4]
 800bfbe:	f000 f908 	bl	800c1d2 <HAL_CAN_RxFifo1FullCallback>
 800bfc2:	6a3b      	ldr	r3, [r7, #32]
 800bfc4:	f003 0310 	and.w	r3, r3, #16
 800bfc8:	2b00      	cmp	r3, #0
 800bfca:	d009      	beq.n	800bfe0 <HAL_CAN_IRQHandler+0x208>
 800bfcc:	687b      	ldr	r3, [r7, #4]
 800bfce:	681b      	ldr	r3, [r3, #0]
 800bfd0:	691b      	ldr	r3, [r3, #16]
 800bfd2:	f003 0303 	and.w	r3, r3, #3
 800bfd6:	2b00      	cmp	r3, #0
 800bfd8:	d002      	beq.n	800bfe0 <HAL_CAN_IRQHandler+0x208>
 800bfda:	6878      	ldr	r0, [r7, #4]
 800bfdc:	f7f5 f901 	bl	80011e2 <HAL_CAN_RxFifo1MsgPendingCallback>
 800bfe0:	6a3b      	ldr	r3, [r7, #32]
 800bfe2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800bfe6:	2b00      	cmp	r3, #0
 800bfe8:	d00b      	beq.n	800c002 <HAL_CAN_IRQHandler+0x22a>
 800bfea:	69fb      	ldr	r3, [r7, #28]
 800bfec:	f003 0310 	and.w	r3, r3, #16
 800bff0:	2b00      	cmp	r3, #0
 800bff2:	d006      	beq.n	800c002 <HAL_CAN_IRQHandler+0x22a>
 800bff4:	687b      	ldr	r3, [r7, #4]
 800bff6:	681b      	ldr	r3, [r3, #0]
 800bff8:	2210      	movs	r2, #16
 800bffa:	605a      	str	r2, [r3, #4]
 800bffc:	6878      	ldr	r0, [r7, #4]
 800bffe:	f000 f8f2 	bl	800c1e6 <HAL_CAN_SleepCallback>
 800c002:	6a3b      	ldr	r3, [r7, #32]
 800c004:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800c008:	2b00      	cmp	r3, #0
 800c00a:	d00b      	beq.n	800c024 <HAL_CAN_IRQHandler+0x24c>
 800c00c:	69fb      	ldr	r3, [r7, #28]
 800c00e:	f003 0308 	and.w	r3, r3, #8
 800c012:	2b00      	cmp	r3, #0
 800c014:	d006      	beq.n	800c024 <HAL_CAN_IRQHandler+0x24c>
 800c016:	687b      	ldr	r3, [r7, #4]
 800c018:	681b      	ldr	r3, [r3, #0]
 800c01a:	2208      	movs	r2, #8
 800c01c:	605a      	str	r2, [r3, #4]
 800c01e:	6878      	ldr	r0, [r7, #4]
 800c020:	f000 f8eb 	bl	800c1fa <HAL_CAN_WakeUpFromRxMsgCallback>
 800c024:	6a3b      	ldr	r3, [r7, #32]
 800c026:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800c02a:	2b00      	cmp	r3, #0
 800c02c:	d07b      	beq.n	800c126 <HAL_CAN_IRQHandler+0x34e>
 800c02e:	69fb      	ldr	r3, [r7, #28]
 800c030:	f003 0304 	and.w	r3, r3, #4
 800c034:	2b00      	cmp	r3, #0
 800c036:	d072      	beq.n	800c11e <HAL_CAN_IRQHandler+0x346>
 800c038:	6a3b      	ldr	r3, [r7, #32]
 800c03a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c03e:	2b00      	cmp	r3, #0
 800c040:	d008      	beq.n	800c054 <HAL_CAN_IRQHandler+0x27c>
 800c042:	68fb      	ldr	r3, [r7, #12]
 800c044:	f003 0301 	and.w	r3, r3, #1
 800c048:	2b00      	cmp	r3, #0
 800c04a:	d003      	beq.n	800c054 <HAL_CAN_IRQHandler+0x27c>
 800c04c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c04e:	f043 0301 	orr.w	r3, r3, #1
 800c052:	627b      	str	r3, [r7, #36]	@ 0x24
 800c054:	6a3b      	ldr	r3, [r7, #32]
 800c056:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800c05a:	2b00      	cmp	r3, #0
 800c05c:	d008      	beq.n	800c070 <HAL_CAN_IRQHandler+0x298>
 800c05e:	68fb      	ldr	r3, [r7, #12]
 800c060:	f003 0302 	and.w	r3, r3, #2
 800c064:	2b00      	cmp	r3, #0
 800c066:	d003      	beq.n	800c070 <HAL_CAN_IRQHandler+0x298>
 800c068:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c06a:	f043 0302 	orr.w	r3, r3, #2
 800c06e:	627b      	str	r3, [r7, #36]	@ 0x24
 800c070:	6a3b      	ldr	r3, [r7, #32]
 800c072:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800c076:	2b00      	cmp	r3, #0
 800c078:	d008      	beq.n	800c08c <HAL_CAN_IRQHandler+0x2b4>
 800c07a:	68fb      	ldr	r3, [r7, #12]
 800c07c:	f003 0304 	and.w	r3, r3, #4
 800c080:	2b00      	cmp	r3, #0
 800c082:	d003      	beq.n	800c08c <HAL_CAN_IRQHandler+0x2b4>
 800c084:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c086:	f043 0304 	orr.w	r3, r3, #4
 800c08a:	627b      	str	r3, [r7, #36]	@ 0x24
 800c08c:	6a3b      	ldr	r3, [r7, #32]
 800c08e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800c092:	2b00      	cmp	r3, #0
 800c094:	d043      	beq.n	800c11e <HAL_CAN_IRQHandler+0x346>
 800c096:	68fb      	ldr	r3, [r7, #12]
 800c098:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800c09c:	2b00      	cmp	r3, #0
 800c09e:	d03e      	beq.n	800c11e <HAL_CAN_IRQHandler+0x346>
 800c0a0:	68fb      	ldr	r3, [r7, #12]
 800c0a2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800c0a6:	2b60      	cmp	r3, #96	@ 0x60
 800c0a8:	d02b      	beq.n	800c102 <HAL_CAN_IRQHandler+0x32a>
 800c0aa:	2b60      	cmp	r3, #96	@ 0x60
 800c0ac:	d82e      	bhi.n	800c10c <HAL_CAN_IRQHandler+0x334>
 800c0ae:	2b50      	cmp	r3, #80	@ 0x50
 800c0b0:	d022      	beq.n	800c0f8 <HAL_CAN_IRQHandler+0x320>
 800c0b2:	2b50      	cmp	r3, #80	@ 0x50
 800c0b4:	d82a      	bhi.n	800c10c <HAL_CAN_IRQHandler+0x334>
 800c0b6:	2b40      	cmp	r3, #64	@ 0x40
 800c0b8:	d019      	beq.n	800c0ee <HAL_CAN_IRQHandler+0x316>
 800c0ba:	2b40      	cmp	r3, #64	@ 0x40
 800c0bc:	d826      	bhi.n	800c10c <HAL_CAN_IRQHandler+0x334>
 800c0be:	2b30      	cmp	r3, #48	@ 0x30
 800c0c0:	d010      	beq.n	800c0e4 <HAL_CAN_IRQHandler+0x30c>
 800c0c2:	2b30      	cmp	r3, #48	@ 0x30
 800c0c4:	d822      	bhi.n	800c10c <HAL_CAN_IRQHandler+0x334>
 800c0c6:	2b10      	cmp	r3, #16
 800c0c8:	d002      	beq.n	800c0d0 <HAL_CAN_IRQHandler+0x2f8>
 800c0ca:	2b20      	cmp	r3, #32
 800c0cc:	d005      	beq.n	800c0da <HAL_CAN_IRQHandler+0x302>
 800c0ce:	e01d      	b.n	800c10c <HAL_CAN_IRQHandler+0x334>
 800c0d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0d2:	f043 0308 	orr.w	r3, r3, #8
 800c0d6:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0d8:	e019      	b.n	800c10e <HAL_CAN_IRQHandler+0x336>
 800c0da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0dc:	f043 0310 	orr.w	r3, r3, #16
 800c0e0:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0e2:	e014      	b.n	800c10e <HAL_CAN_IRQHandler+0x336>
 800c0e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0e6:	f043 0320 	orr.w	r3, r3, #32
 800c0ea:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0ec:	e00f      	b.n	800c10e <HAL_CAN_IRQHandler+0x336>
 800c0ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0f0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c0f4:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0f6:	e00a      	b.n	800c10e <HAL_CAN_IRQHandler+0x336>
 800c0f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0fa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c0fe:	627b      	str	r3, [r7, #36]	@ 0x24
 800c100:	e005      	b.n	800c10e <HAL_CAN_IRQHandler+0x336>
 800c102:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c104:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c108:	627b      	str	r3, [r7, #36]	@ 0x24
 800c10a:	e000      	b.n	800c10e <HAL_CAN_IRQHandler+0x336>
 800c10c:	bf00      	nop
 800c10e:	687b      	ldr	r3, [r7, #4]
 800c110:	681b      	ldr	r3, [r3, #0]
 800c112:	699a      	ldr	r2, [r3, #24]
 800c114:	687b      	ldr	r3, [r7, #4]
 800c116:	681b      	ldr	r3, [r3, #0]
 800c118:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c11c:	619a      	str	r2, [r3, #24]
 800c11e:	687b      	ldr	r3, [r7, #4]
 800c120:	681b      	ldr	r3, [r3, #0]
 800c122:	2204      	movs	r2, #4
 800c124:	605a      	str	r2, [r3, #4]
 800c126:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c128:	2b00      	cmp	r3, #0
 800c12a:	d008      	beq.n	800c13e <HAL_CAN_IRQHandler+0x366>
 800c12c:	687b      	ldr	r3, [r7, #4]
 800c12e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c130:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c132:	431a      	orrs	r2, r3
 800c134:	687b      	ldr	r3, [r7, #4]
 800c136:	625a      	str	r2, [r3, #36]	@ 0x24
 800c138:	6878      	ldr	r0, [r7, #4]
 800c13a:	f000 f868 	bl	800c20e <HAL_CAN_ErrorCallback>
 800c13e:	bf00      	nop
 800c140:	3728      	adds	r7, #40	@ 0x28
 800c142:	46bd      	mov	sp, r7
 800c144:	bd80      	pop	{r7, pc}

0800c146 <HAL_CAN_TxMailbox0CompleteCallback>:
 800c146:	b480      	push	{r7}
 800c148:	b083      	sub	sp, #12
 800c14a:	af00      	add	r7, sp, #0
 800c14c:	6078      	str	r0, [r7, #4]
 800c14e:	bf00      	nop
 800c150:	370c      	adds	r7, #12
 800c152:	46bd      	mov	sp, r7
 800c154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c158:	4770      	bx	lr

0800c15a <HAL_CAN_TxMailbox1CompleteCallback>:
 800c15a:	b480      	push	{r7}
 800c15c:	b083      	sub	sp, #12
 800c15e:	af00      	add	r7, sp, #0
 800c160:	6078      	str	r0, [r7, #4]
 800c162:	bf00      	nop
 800c164:	370c      	adds	r7, #12
 800c166:	46bd      	mov	sp, r7
 800c168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c16c:	4770      	bx	lr

0800c16e <HAL_CAN_TxMailbox2CompleteCallback>:
 800c16e:	b480      	push	{r7}
 800c170:	b083      	sub	sp, #12
 800c172:	af00      	add	r7, sp, #0
 800c174:	6078      	str	r0, [r7, #4]
 800c176:	bf00      	nop
 800c178:	370c      	adds	r7, #12
 800c17a:	46bd      	mov	sp, r7
 800c17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c180:	4770      	bx	lr

0800c182 <HAL_CAN_TxMailbox0AbortCallback>:
 800c182:	b480      	push	{r7}
 800c184:	b083      	sub	sp, #12
 800c186:	af00      	add	r7, sp, #0
 800c188:	6078      	str	r0, [r7, #4]
 800c18a:	bf00      	nop
 800c18c:	370c      	adds	r7, #12
 800c18e:	46bd      	mov	sp, r7
 800c190:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c194:	4770      	bx	lr

0800c196 <HAL_CAN_TxMailbox1AbortCallback>:
 800c196:	b480      	push	{r7}
 800c198:	b083      	sub	sp, #12
 800c19a:	af00      	add	r7, sp, #0
 800c19c:	6078      	str	r0, [r7, #4]
 800c19e:	bf00      	nop
 800c1a0:	370c      	adds	r7, #12
 800c1a2:	46bd      	mov	sp, r7
 800c1a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1a8:	4770      	bx	lr

0800c1aa <HAL_CAN_TxMailbox2AbortCallback>:
 800c1aa:	b480      	push	{r7}
 800c1ac:	b083      	sub	sp, #12
 800c1ae:	af00      	add	r7, sp, #0
 800c1b0:	6078      	str	r0, [r7, #4]
 800c1b2:	bf00      	nop
 800c1b4:	370c      	adds	r7, #12
 800c1b6:	46bd      	mov	sp, r7
 800c1b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1bc:	4770      	bx	lr

0800c1be <HAL_CAN_RxFifo0FullCallback>:
 800c1be:	b480      	push	{r7}
 800c1c0:	b083      	sub	sp, #12
 800c1c2:	af00      	add	r7, sp, #0
 800c1c4:	6078      	str	r0, [r7, #4]
 800c1c6:	bf00      	nop
 800c1c8:	370c      	adds	r7, #12
 800c1ca:	46bd      	mov	sp, r7
 800c1cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1d0:	4770      	bx	lr

0800c1d2 <HAL_CAN_RxFifo1FullCallback>:
 800c1d2:	b480      	push	{r7}
 800c1d4:	b083      	sub	sp, #12
 800c1d6:	af00      	add	r7, sp, #0
 800c1d8:	6078      	str	r0, [r7, #4]
 800c1da:	bf00      	nop
 800c1dc:	370c      	adds	r7, #12
 800c1de:	46bd      	mov	sp, r7
 800c1e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1e4:	4770      	bx	lr

0800c1e6 <HAL_CAN_SleepCallback>:
 800c1e6:	b480      	push	{r7}
 800c1e8:	b083      	sub	sp, #12
 800c1ea:	af00      	add	r7, sp, #0
 800c1ec:	6078      	str	r0, [r7, #4]
 800c1ee:	bf00      	nop
 800c1f0:	370c      	adds	r7, #12
 800c1f2:	46bd      	mov	sp, r7
 800c1f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1f8:	4770      	bx	lr

0800c1fa <HAL_CAN_WakeUpFromRxMsgCallback>:
 800c1fa:	b480      	push	{r7}
 800c1fc:	b083      	sub	sp, #12
 800c1fe:	af00      	add	r7, sp, #0
 800c200:	6078      	str	r0, [r7, #4]
 800c202:	bf00      	nop
 800c204:	370c      	adds	r7, #12
 800c206:	46bd      	mov	sp, r7
 800c208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c20c:	4770      	bx	lr

0800c20e <HAL_CAN_ErrorCallback>:
 800c20e:	b480      	push	{r7}
 800c210:	b083      	sub	sp, #12
 800c212:	af00      	add	r7, sp, #0
 800c214:	6078      	str	r0, [r7, #4]
 800c216:	bf00      	nop
 800c218:	370c      	adds	r7, #12
 800c21a:	46bd      	mov	sp, r7
 800c21c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c220:	4770      	bx	lr
	...

0800c224 <__NVIC_SetPriorityGrouping>:
 800c224:	b480      	push	{r7}
 800c226:	b085      	sub	sp, #20
 800c228:	af00      	add	r7, sp, #0
 800c22a:	6078      	str	r0, [r7, #4]
 800c22c:	687b      	ldr	r3, [r7, #4]
 800c22e:	f003 0307 	and.w	r3, r3, #7
 800c232:	60fb      	str	r3, [r7, #12]
 800c234:	4b0c      	ldr	r3, [pc, #48]	@ (800c268 <__NVIC_SetPriorityGrouping+0x44>)
 800c236:	68db      	ldr	r3, [r3, #12]
 800c238:	60bb      	str	r3, [r7, #8]
 800c23a:	68ba      	ldr	r2, [r7, #8]
 800c23c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800c240:	4013      	ands	r3, r2
 800c242:	60bb      	str	r3, [r7, #8]
 800c244:	68fb      	ldr	r3, [r7, #12]
 800c246:	021a      	lsls	r2, r3, #8
 800c248:	68bb      	ldr	r3, [r7, #8]
 800c24a:	4313      	orrs	r3, r2
 800c24c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800c250:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c254:	60bb      	str	r3, [r7, #8]
 800c256:	4a04      	ldr	r2, [pc, #16]	@ (800c268 <__NVIC_SetPriorityGrouping+0x44>)
 800c258:	68bb      	ldr	r3, [r7, #8]
 800c25a:	60d3      	str	r3, [r2, #12]
 800c25c:	bf00      	nop
 800c25e:	3714      	adds	r7, #20
 800c260:	46bd      	mov	sp, r7
 800c262:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c266:	4770      	bx	lr
 800c268:	e000ed00 	.word	0xe000ed00

0800c26c <__NVIC_GetPriorityGrouping>:
 800c26c:	b480      	push	{r7}
 800c26e:	af00      	add	r7, sp, #0
 800c270:	4b04      	ldr	r3, [pc, #16]	@ (800c284 <__NVIC_GetPriorityGrouping+0x18>)
 800c272:	68db      	ldr	r3, [r3, #12]
 800c274:	0a1b      	lsrs	r3, r3, #8
 800c276:	f003 0307 	and.w	r3, r3, #7
 800c27a:	4618      	mov	r0, r3
 800c27c:	46bd      	mov	sp, r7
 800c27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c282:	4770      	bx	lr
 800c284:	e000ed00 	.word	0xe000ed00

0800c288 <__NVIC_EnableIRQ>:
 800c288:	b480      	push	{r7}
 800c28a:	b083      	sub	sp, #12
 800c28c:	af00      	add	r7, sp, #0
 800c28e:	4603      	mov	r3, r0
 800c290:	71fb      	strb	r3, [r7, #7]
 800c292:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c296:	2b00      	cmp	r3, #0
 800c298:	db0b      	blt.n	800c2b2 <__NVIC_EnableIRQ+0x2a>
 800c29a:	79fb      	ldrb	r3, [r7, #7]
 800c29c:	f003 021f 	and.w	r2, r3, #31
 800c2a0:	4907      	ldr	r1, [pc, #28]	@ (800c2c0 <__NVIC_EnableIRQ+0x38>)
 800c2a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c2a6:	095b      	lsrs	r3, r3, #5
 800c2a8:	2001      	movs	r0, #1
 800c2aa:	fa00 f202 	lsl.w	r2, r0, r2
 800c2ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800c2b2:	bf00      	nop
 800c2b4:	370c      	adds	r7, #12
 800c2b6:	46bd      	mov	sp, r7
 800c2b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2bc:	4770      	bx	lr
 800c2be:	bf00      	nop
 800c2c0:	e000e100 	.word	0xe000e100

0800c2c4 <__NVIC_DisableIRQ>:
 800c2c4:	b480      	push	{r7}
 800c2c6:	b083      	sub	sp, #12
 800c2c8:	af00      	add	r7, sp, #0
 800c2ca:	4603      	mov	r3, r0
 800c2cc:	71fb      	strb	r3, [r7, #7]
 800c2ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c2d2:	2b00      	cmp	r3, #0
 800c2d4:	db12      	blt.n	800c2fc <__NVIC_DisableIRQ+0x38>
 800c2d6:	79fb      	ldrb	r3, [r7, #7]
 800c2d8:	f003 021f 	and.w	r2, r3, #31
 800c2dc:	490a      	ldr	r1, [pc, #40]	@ (800c308 <__NVIC_DisableIRQ+0x44>)
 800c2de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c2e2:	095b      	lsrs	r3, r3, #5
 800c2e4:	2001      	movs	r0, #1
 800c2e6:	fa00 f202 	lsl.w	r2, r0, r2
 800c2ea:	3320      	adds	r3, #32
 800c2ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800c2f0:	f3bf 8f4f 	dsb	sy
 800c2f4:	bf00      	nop
 800c2f6:	f3bf 8f6f 	isb	sy
 800c2fa:	bf00      	nop
 800c2fc:	bf00      	nop
 800c2fe:	370c      	adds	r7, #12
 800c300:	46bd      	mov	sp, r7
 800c302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c306:	4770      	bx	lr
 800c308:	e000e100 	.word	0xe000e100

0800c30c <__NVIC_SetPriority>:
 800c30c:	b480      	push	{r7}
 800c30e:	b083      	sub	sp, #12
 800c310:	af00      	add	r7, sp, #0
 800c312:	4603      	mov	r3, r0
 800c314:	6039      	str	r1, [r7, #0]
 800c316:	71fb      	strb	r3, [r7, #7]
 800c318:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c31c:	2b00      	cmp	r3, #0
 800c31e:	db0a      	blt.n	800c336 <__NVIC_SetPriority+0x2a>
 800c320:	683b      	ldr	r3, [r7, #0]
 800c322:	b2da      	uxtb	r2, r3
 800c324:	490c      	ldr	r1, [pc, #48]	@ (800c358 <__NVIC_SetPriority+0x4c>)
 800c326:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c32a:	0112      	lsls	r2, r2, #4
 800c32c:	b2d2      	uxtb	r2, r2
 800c32e:	440b      	add	r3, r1
 800c330:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800c334:	e00a      	b.n	800c34c <__NVIC_SetPriority+0x40>
 800c336:	683b      	ldr	r3, [r7, #0]
 800c338:	b2da      	uxtb	r2, r3
 800c33a:	4908      	ldr	r1, [pc, #32]	@ (800c35c <__NVIC_SetPriority+0x50>)
 800c33c:	79fb      	ldrb	r3, [r7, #7]
 800c33e:	f003 030f 	and.w	r3, r3, #15
 800c342:	3b04      	subs	r3, #4
 800c344:	0112      	lsls	r2, r2, #4
 800c346:	b2d2      	uxtb	r2, r2
 800c348:	440b      	add	r3, r1
 800c34a:	761a      	strb	r2, [r3, #24]
 800c34c:	bf00      	nop
 800c34e:	370c      	adds	r7, #12
 800c350:	46bd      	mov	sp, r7
 800c352:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c356:	4770      	bx	lr
 800c358:	e000e100 	.word	0xe000e100
 800c35c:	e000ed00 	.word	0xe000ed00

0800c360 <NVIC_EncodePriority>:
 800c360:	b480      	push	{r7}
 800c362:	b089      	sub	sp, #36	@ 0x24
 800c364:	af00      	add	r7, sp, #0
 800c366:	60f8      	str	r0, [r7, #12]
 800c368:	60b9      	str	r1, [r7, #8]
 800c36a:	607a      	str	r2, [r7, #4]
 800c36c:	68fb      	ldr	r3, [r7, #12]
 800c36e:	f003 0307 	and.w	r3, r3, #7
 800c372:	61fb      	str	r3, [r7, #28]
 800c374:	69fb      	ldr	r3, [r7, #28]
 800c376:	f1c3 0307 	rsb	r3, r3, #7
 800c37a:	2b04      	cmp	r3, #4
 800c37c:	bf28      	it	cs
 800c37e:	2304      	movcs	r3, #4
 800c380:	61bb      	str	r3, [r7, #24]
 800c382:	69fb      	ldr	r3, [r7, #28]
 800c384:	3304      	adds	r3, #4
 800c386:	2b06      	cmp	r3, #6
 800c388:	d902      	bls.n	800c390 <NVIC_EncodePriority+0x30>
 800c38a:	69fb      	ldr	r3, [r7, #28]
 800c38c:	3b03      	subs	r3, #3
 800c38e:	e000      	b.n	800c392 <NVIC_EncodePriority+0x32>
 800c390:	2300      	movs	r3, #0
 800c392:	617b      	str	r3, [r7, #20]
 800c394:	f04f 32ff 	mov.w	r2, #4294967295
 800c398:	69bb      	ldr	r3, [r7, #24]
 800c39a:	fa02 f303 	lsl.w	r3, r2, r3
 800c39e:	43da      	mvns	r2, r3
 800c3a0:	68bb      	ldr	r3, [r7, #8]
 800c3a2:	401a      	ands	r2, r3
 800c3a4:	697b      	ldr	r3, [r7, #20]
 800c3a6:	409a      	lsls	r2, r3
 800c3a8:	f04f 31ff 	mov.w	r1, #4294967295
 800c3ac:	697b      	ldr	r3, [r7, #20]
 800c3ae:	fa01 f303 	lsl.w	r3, r1, r3
 800c3b2:	43d9      	mvns	r1, r3
 800c3b4:	687b      	ldr	r3, [r7, #4]
 800c3b6:	400b      	ands	r3, r1
 800c3b8:	4313      	orrs	r3, r2
 800c3ba:	4618      	mov	r0, r3
 800c3bc:	3724      	adds	r7, #36	@ 0x24
 800c3be:	46bd      	mov	sp, r7
 800c3c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3c4:	4770      	bx	lr

0800c3c6 <HAL_NVIC_SetPriorityGrouping>:
 800c3c6:	b580      	push	{r7, lr}
 800c3c8:	b082      	sub	sp, #8
 800c3ca:	af00      	add	r7, sp, #0
 800c3cc:	6078      	str	r0, [r7, #4]
 800c3ce:	6878      	ldr	r0, [r7, #4]
 800c3d0:	f7ff ff28 	bl	800c224 <__NVIC_SetPriorityGrouping>
 800c3d4:	bf00      	nop
 800c3d6:	3708      	adds	r7, #8
 800c3d8:	46bd      	mov	sp, r7
 800c3da:	bd80      	pop	{r7, pc}

0800c3dc <HAL_NVIC_SetPriority>:
 800c3dc:	b580      	push	{r7, lr}
 800c3de:	b086      	sub	sp, #24
 800c3e0:	af00      	add	r7, sp, #0
 800c3e2:	4603      	mov	r3, r0
 800c3e4:	60b9      	str	r1, [r7, #8]
 800c3e6:	607a      	str	r2, [r7, #4]
 800c3e8:	73fb      	strb	r3, [r7, #15]
 800c3ea:	2300      	movs	r3, #0
 800c3ec:	617b      	str	r3, [r7, #20]
 800c3ee:	f7ff ff3d 	bl	800c26c <__NVIC_GetPriorityGrouping>
 800c3f2:	6178      	str	r0, [r7, #20]
 800c3f4:	687a      	ldr	r2, [r7, #4]
 800c3f6:	68b9      	ldr	r1, [r7, #8]
 800c3f8:	6978      	ldr	r0, [r7, #20]
 800c3fa:	f7ff ffb1 	bl	800c360 <NVIC_EncodePriority>
 800c3fe:	4602      	mov	r2, r0
 800c400:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800c404:	4611      	mov	r1, r2
 800c406:	4618      	mov	r0, r3
 800c408:	f7ff ff80 	bl	800c30c <__NVIC_SetPriority>
 800c40c:	bf00      	nop
 800c40e:	3718      	adds	r7, #24
 800c410:	46bd      	mov	sp, r7
 800c412:	bd80      	pop	{r7, pc}

0800c414 <HAL_NVIC_EnableIRQ>:
 800c414:	b580      	push	{r7, lr}
 800c416:	b082      	sub	sp, #8
 800c418:	af00      	add	r7, sp, #0
 800c41a:	4603      	mov	r3, r0
 800c41c:	71fb      	strb	r3, [r7, #7]
 800c41e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c422:	4618      	mov	r0, r3
 800c424:	f7ff ff30 	bl	800c288 <__NVIC_EnableIRQ>
 800c428:	bf00      	nop
 800c42a:	3708      	adds	r7, #8
 800c42c:	46bd      	mov	sp, r7
 800c42e:	bd80      	pop	{r7, pc}

0800c430 <HAL_NVIC_DisableIRQ>:
 800c430:	b580      	push	{r7, lr}
 800c432:	b082      	sub	sp, #8
 800c434:	af00      	add	r7, sp, #0
 800c436:	4603      	mov	r3, r0
 800c438:	71fb      	strb	r3, [r7, #7]
 800c43a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c43e:	4618      	mov	r0, r3
 800c440:	f7ff ff40 	bl	800c2c4 <__NVIC_DisableIRQ>
 800c444:	bf00      	nop
 800c446:	3708      	adds	r7, #8
 800c448:	46bd      	mov	sp, r7
 800c44a:	bd80      	pop	{r7, pc}

0800c44c <HAL_DMA_Init>:
 800c44c:	b580      	push	{r7, lr}
 800c44e:	b086      	sub	sp, #24
 800c450:	af00      	add	r7, sp, #0
 800c452:	6078      	str	r0, [r7, #4]
 800c454:	2300      	movs	r3, #0
 800c456:	617b      	str	r3, [r7, #20]
 800c458:	f7fe fdd2 	bl	800b000 <HAL_GetTick>
 800c45c:	6138      	str	r0, [r7, #16]
 800c45e:	687b      	ldr	r3, [r7, #4]
 800c460:	2b00      	cmp	r3, #0
 800c462:	d101      	bne.n	800c468 <HAL_DMA_Init+0x1c>
 800c464:	2301      	movs	r3, #1
 800c466:	e099      	b.n	800c59c <HAL_DMA_Init+0x150>
 800c468:	687b      	ldr	r3, [r7, #4]
 800c46a:	2202      	movs	r2, #2
 800c46c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c470:	687b      	ldr	r3, [r7, #4]
 800c472:	2200      	movs	r2, #0
 800c474:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c478:	687b      	ldr	r3, [r7, #4]
 800c47a:	681b      	ldr	r3, [r3, #0]
 800c47c:	681a      	ldr	r2, [r3, #0]
 800c47e:	687b      	ldr	r3, [r7, #4]
 800c480:	681b      	ldr	r3, [r3, #0]
 800c482:	f022 0201 	bic.w	r2, r2, #1
 800c486:	601a      	str	r2, [r3, #0]
 800c488:	e00f      	b.n	800c4aa <HAL_DMA_Init+0x5e>
 800c48a:	f7fe fdb9 	bl	800b000 <HAL_GetTick>
 800c48e:	4602      	mov	r2, r0
 800c490:	693b      	ldr	r3, [r7, #16]
 800c492:	1ad3      	subs	r3, r2, r3
 800c494:	2b05      	cmp	r3, #5
 800c496:	d908      	bls.n	800c4aa <HAL_DMA_Init+0x5e>
 800c498:	687b      	ldr	r3, [r7, #4]
 800c49a:	2220      	movs	r2, #32
 800c49c:	655a      	str	r2, [r3, #84]	@ 0x54
 800c49e:	687b      	ldr	r3, [r7, #4]
 800c4a0:	2203      	movs	r2, #3
 800c4a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c4a6:	2303      	movs	r3, #3
 800c4a8:	e078      	b.n	800c59c <HAL_DMA_Init+0x150>
 800c4aa:	687b      	ldr	r3, [r7, #4]
 800c4ac:	681b      	ldr	r3, [r3, #0]
 800c4ae:	681b      	ldr	r3, [r3, #0]
 800c4b0:	f003 0301 	and.w	r3, r3, #1
 800c4b4:	2b00      	cmp	r3, #0
 800c4b6:	d1e8      	bne.n	800c48a <HAL_DMA_Init+0x3e>
 800c4b8:	687b      	ldr	r3, [r7, #4]
 800c4ba:	681b      	ldr	r3, [r3, #0]
 800c4bc:	681b      	ldr	r3, [r3, #0]
 800c4be:	617b      	str	r3, [r7, #20]
 800c4c0:	697a      	ldr	r2, [r7, #20]
 800c4c2:	4b38      	ldr	r3, [pc, #224]	@ (800c5a4 <HAL_DMA_Init+0x158>)
 800c4c4:	4013      	ands	r3, r2
 800c4c6:	617b      	str	r3, [r7, #20]
 800c4c8:	687b      	ldr	r3, [r7, #4]
 800c4ca:	685a      	ldr	r2, [r3, #4]
 800c4cc:	687b      	ldr	r3, [r7, #4]
 800c4ce:	689b      	ldr	r3, [r3, #8]
 800c4d0:	431a      	orrs	r2, r3
 800c4d2:	687b      	ldr	r3, [r7, #4]
 800c4d4:	68db      	ldr	r3, [r3, #12]
 800c4d6:	431a      	orrs	r2, r3
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	691b      	ldr	r3, [r3, #16]
 800c4dc:	431a      	orrs	r2, r3
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	695b      	ldr	r3, [r3, #20]
 800c4e2:	431a      	orrs	r2, r3
 800c4e4:	687b      	ldr	r3, [r7, #4]
 800c4e6:	699b      	ldr	r3, [r3, #24]
 800c4e8:	431a      	orrs	r2, r3
 800c4ea:	687b      	ldr	r3, [r7, #4]
 800c4ec:	69db      	ldr	r3, [r3, #28]
 800c4ee:	431a      	orrs	r2, r3
 800c4f0:	687b      	ldr	r3, [r7, #4]
 800c4f2:	6a1b      	ldr	r3, [r3, #32]
 800c4f4:	4313      	orrs	r3, r2
 800c4f6:	697a      	ldr	r2, [r7, #20]
 800c4f8:	4313      	orrs	r3, r2
 800c4fa:	617b      	str	r3, [r7, #20]
 800c4fc:	687b      	ldr	r3, [r7, #4]
 800c4fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c500:	2b04      	cmp	r3, #4
 800c502:	d107      	bne.n	800c514 <HAL_DMA_Init+0xc8>
 800c504:	687b      	ldr	r3, [r7, #4]
 800c506:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800c508:	687b      	ldr	r3, [r7, #4]
 800c50a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c50c:	4313      	orrs	r3, r2
 800c50e:	697a      	ldr	r2, [r7, #20]
 800c510:	4313      	orrs	r3, r2
 800c512:	617b      	str	r3, [r7, #20]
 800c514:	687b      	ldr	r3, [r7, #4]
 800c516:	681b      	ldr	r3, [r3, #0]
 800c518:	697a      	ldr	r2, [r7, #20]
 800c51a:	601a      	str	r2, [r3, #0]
 800c51c:	687b      	ldr	r3, [r7, #4]
 800c51e:	681b      	ldr	r3, [r3, #0]
 800c520:	695b      	ldr	r3, [r3, #20]
 800c522:	617b      	str	r3, [r7, #20]
 800c524:	697b      	ldr	r3, [r7, #20]
 800c526:	f023 0307 	bic.w	r3, r3, #7
 800c52a:	617b      	str	r3, [r7, #20]
 800c52c:	687b      	ldr	r3, [r7, #4]
 800c52e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c530:	697a      	ldr	r2, [r7, #20]
 800c532:	4313      	orrs	r3, r2
 800c534:	617b      	str	r3, [r7, #20]
 800c536:	687b      	ldr	r3, [r7, #4]
 800c538:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c53a:	2b04      	cmp	r3, #4
 800c53c:	d117      	bne.n	800c56e <HAL_DMA_Init+0x122>
 800c53e:	687b      	ldr	r3, [r7, #4]
 800c540:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c542:	697a      	ldr	r2, [r7, #20]
 800c544:	4313      	orrs	r3, r2
 800c546:	617b      	str	r3, [r7, #20]
 800c548:	687b      	ldr	r3, [r7, #4]
 800c54a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c54c:	2b00      	cmp	r3, #0
 800c54e:	d00e      	beq.n	800c56e <HAL_DMA_Init+0x122>
 800c550:	6878      	ldr	r0, [r7, #4]
 800c552:	f000 fb0d 	bl	800cb70 <DMA_CheckFifoParam>
 800c556:	4603      	mov	r3, r0
 800c558:	2b00      	cmp	r3, #0
 800c55a:	d008      	beq.n	800c56e <HAL_DMA_Init+0x122>
 800c55c:	687b      	ldr	r3, [r7, #4]
 800c55e:	2240      	movs	r2, #64	@ 0x40
 800c560:	655a      	str	r2, [r3, #84]	@ 0x54
 800c562:	687b      	ldr	r3, [r7, #4]
 800c564:	2201      	movs	r2, #1
 800c566:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c56a:	2301      	movs	r3, #1
 800c56c:	e016      	b.n	800c59c <HAL_DMA_Init+0x150>
 800c56e:	687b      	ldr	r3, [r7, #4]
 800c570:	681b      	ldr	r3, [r3, #0]
 800c572:	697a      	ldr	r2, [r7, #20]
 800c574:	615a      	str	r2, [r3, #20]
 800c576:	6878      	ldr	r0, [r7, #4]
 800c578:	f000 fac4 	bl	800cb04 <DMA_CalcBaseAndBitshift>
 800c57c:	4603      	mov	r3, r0
 800c57e:	60fb      	str	r3, [r7, #12]
 800c580:	687b      	ldr	r3, [r7, #4]
 800c582:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c584:	223f      	movs	r2, #63	@ 0x3f
 800c586:	409a      	lsls	r2, r3
 800c588:	68fb      	ldr	r3, [r7, #12]
 800c58a:	609a      	str	r2, [r3, #8]
 800c58c:	687b      	ldr	r3, [r7, #4]
 800c58e:	2200      	movs	r2, #0
 800c590:	655a      	str	r2, [r3, #84]	@ 0x54
 800c592:	687b      	ldr	r3, [r7, #4]
 800c594:	2201      	movs	r2, #1
 800c596:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c59a:	2300      	movs	r3, #0
 800c59c:	4618      	mov	r0, r3
 800c59e:	3718      	adds	r7, #24
 800c5a0:	46bd      	mov	sp, r7
 800c5a2:	bd80      	pop	{r7, pc}
 800c5a4:	f010803f 	.word	0xf010803f

0800c5a8 <HAL_DMA_Start_IT>:
 800c5a8:	b580      	push	{r7, lr}
 800c5aa:	b086      	sub	sp, #24
 800c5ac:	af00      	add	r7, sp, #0
 800c5ae:	60f8      	str	r0, [r7, #12]
 800c5b0:	60b9      	str	r1, [r7, #8]
 800c5b2:	607a      	str	r2, [r7, #4]
 800c5b4:	603b      	str	r3, [r7, #0]
 800c5b6:	2300      	movs	r3, #0
 800c5b8:	75fb      	strb	r3, [r7, #23]
 800c5ba:	68fb      	ldr	r3, [r7, #12]
 800c5bc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c5be:	613b      	str	r3, [r7, #16]
 800c5c0:	68fb      	ldr	r3, [r7, #12]
 800c5c2:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800c5c6:	2b01      	cmp	r3, #1
 800c5c8:	d101      	bne.n	800c5ce <HAL_DMA_Start_IT+0x26>
 800c5ca:	2302      	movs	r3, #2
 800c5cc:	e040      	b.n	800c650 <HAL_DMA_Start_IT+0xa8>
 800c5ce:	68fb      	ldr	r3, [r7, #12]
 800c5d0:	2201      	movs	r2, #1
 800c5d2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c5d6:	68fb      	ldr	r3, [r7, #12]
 800c5d8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c5dc:	b2db      	uxtb	r3, r3
 800c5de:	2b01      	cmp	r3, #1
 800c5e0:	d12f      	bne.n	800c642 <HAL_DMA_Start_IT+0x9a>
 800c5e2:	68fb      	ldr	r3, [r7, #12]
 800c5e4:	2202      	movs	r2, #2
 800c5e6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c5ea:	68fb      	ldr	r3, [r7, #12]
 800c5ec:	2200      	movs	r2, #0
 800c5ee:	655a      	str	r2, [r3, #84]	@ 0x54
 800c5f0:	683b      	ldr	r3, [r7, #0]
 800c5f2:	687a      	ldr	r2, [r7, #4]
 800c5f4:	68b9      	ldr	r1, [r7, #8]
 800c5f6:	68f8      	ldr	r0, [r7, #12]
 800c5f8:	f000 fa56 	bl	800caa8 <DMA_SetConfig>
 800c5fc:	68fb      	ldr	r3, [r7, #12]
 800c5fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c600:	223f      	movs	r2, #63	@ 0x3f
 800c602:	409a      	lsls	r2, r3
 800c604:	693b      	ldr	r3, [r7, #16]
 800c606:	609a      	str	r2, [r3, #8]
 800c608:	68fb      	ldr	r3, [r7, #12]
 800c60a:	681b      	ldr	r3, [r3, #0]
 800c60c:	681a      	ldr	r2, [r3, #0]
 800c60e:	68fb      	ldr	r3, [r7, #12]
 800c610:	681b      	ldr	r3, [r3, #0]
 800c612:	f042 0216 	orr.w	r2, r2, #22
 800c616:	601a      	str	r2, [r3, #0]
 800c618:	68fb      	ldr	r3, [r7, #12]
 800c61a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c61c:	2b00      	cmp	r3, #0
 800c61e:	d007      	beq.n	800c630 <HAL_DMA_Start_IT+0x88>
 800c620:	68fb      	ldr	r3, [r7, #12]
 800c622:	681b      	ldr	r3, [r3, #0]
 800c624:	681a      	ldr	r2, [r3, #0]
 800c626:	68fb      	ldr	r3, [r7, #12]
 800c628:	681b      	ldr	r3, [r3, #0]
 800c62a:	f042 0208 	orr.w	r2, r2, #8
 800c62e:	601a      	str	r2, [r3, #0]
 800c630:	68fb      	ldr	r3, [r7, #12]
 800c632:	681b      	ldr	r3, [r3, #0]
 800c634:	681a      	ldr	r2, [r3, #0]
 800c636:	68fb      	ldr	r3, [r7, #12]
 800c638:	681b      	ldr	r3, [r3, #0]
 800c63a:	f042 0201 	orr.w	r2, r2, #1
 800c63e:	601a      	str	r2, [r3, #0]
 800c640:	e005      	b.n	800c64e <HAL_DMA_Start_IT+0xa6>
 800c642:	68fb      	ldr	r3, [r7, #12]
 800c644:	2200      	movs	r2, #0
 800c646:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c64a:	2302      	movs	r3, #2
 800c64c:	75fb      	strb	r3, [r7, #23]
 800c64e:	7dfb      	ldrb	r3, [r7, #23]
 800c650:	4618      	mov	r0, r3
 800c652:	3718      	adds	r7, #24
 800c654:	46bd      	mov	sp, r7
 800c656:	bd80      	pop	{r7, pc}

0800c658 <HAL_DMA_Abort>:
 800c658:	b580      	push	{r7, lr}
 800c65a:	b084      	sub	sp, #16
 800c65c:	af00      	add	r7, sp, #0
 800c65e:	6078      	str	r0, [r7, #4]
 800c660:	687b      	ldr	r3, [r7, #4]
 800c662:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c664:	60fb      	str	r3, [r7, #12]
 800c666:	f7fe fccb 	bl	800b000 <HAL_GetTick>
 800c66a:	60b8      	str	r0, [r7, #8]
 800c66c:	687b      	ldr	r3, [r7, #4]
 800c66e:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c672:	b2db      	uxtb	r3, r3
 800c674:	2b02      	cmp	r3, #2
 800c676:	d008      	beq.n	800c68a <HAL_DMA_Abort+0x32>
 800c678:	687b      	ldr	r3, [r7, #4]
 800c67a:	2280      	movs	r2, #128	@ 0x80
 800c67c:	655a      	str	r2, [r3, #84]	@ 0x54
 800c67e:	687b      	ldr	r3, [r7, #4]
 800c680:	2200      	movs	r2, #0
 800c682:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c686:	2301      	movs	r3, #1
 800c688:	e052      	b.n	800c730 <HAL_DMA_Abort+0xd8>
 800c68a:	687b      	ldr	r3, [r7, #4]
 800c68c:	681b      	ldr	r3, [r3, #0]
 800c68e:	681a      	ldr	r2, [r3, #0]
 800c690:	687b      	ldr	r3, [r7, #4]
 800c692:	681b      	ldr	r3, [r3, #0]
 800c694:	f022 0216 	bic.w	r2, r2, #22
 800c698:	601a      	str	r2, [r3, #0]
 800c69a:	687b      	ldr	r3, [r7, #4]
 800c69c:	681b      	ldr	r3, [r3, #0]
 800c69e:	695a      	ldr	r2, [r3, #20]
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	681b      	ldr	r3, [r3, #0]
 800c6a4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800c6a8:	615a      	str	r2, [r3, #20]
 800c6aa:	687b      	ldr	r3, [r7, #4]
 800c6ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c6ae:	2b00      	cmp	r3, #0
 800c6b0:	d103      	bne.n	800c6ba <HAL_DMA_Abort+0x62>
 800c6b2:	687b      	ldr	r3, [r7, #4]
 800c6b4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c6b6:	2b00      	cmp	r3, #0
 800c6b8:	d007      	beq.n	800c6ca <HAL_DMA_Abort+0x72>
 800c6ba:	687b      	ldr	r3, [r7, #4]
 800c6bc:	681b      	ldr	r3, [r3, #0]
 800c6be:	681a      	ldr	r2, [r3, #0]
 800c6c0:	687b      	ldr	r3, [r7, #4]
 800c6c2:	681b      	ldr	r3, [r3, #0]
 800c6c4:	f022 0208 	bic.w	r2, r2, #8
 800c6c8:	601a      	str	r2, [r3, #0]
 800c6ca:	687b      	ldr	r3, [r7, #4]
 800c6cc:	681b      	ldr	r3, [r3, #0]
 800c6ce:	681a      	ldr	r2, [r3, #0]
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	681b      	ldr	r3, [r3, #0]
 800c6d4:	f022 0201 	bic.w	r2, r2, #1
 800c6d8:	601a      	str	r2, [r3, #0]
 800c6da:	e013      	b.n	800c704 <HAL_DMA_Abort+0xac>
 800c6dc:	f7fe fc90 	bl	800b000 <HAL_GetTick>
 800c6e0:	4602      	mov	r2, r0
 800c6e2:	68bb      	ldr	r3, [r7, #8]
 800c6e4:	1ad3      	subs	r3, r2, r3
 800c6e6:	2b05      	cmp	r3, #5
 800c6e8:	d90c      	bls.n	800c704 <HAL_DMA_Abort+0xac>
 800c6ea:	687b      	ldr	r3, [r7, #4]
 800c6ec:	2220      	movs	r2, #32
 800c6ee:	655a      	str	r2, [r3, #84]	@ 0x54
 800c6f0:	687b      	ldr	r3, [r7, #4]
 800c6f2:	2203      	movs	r2, #3
 800c6f4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c6f8:	687b      	ldr	r3, [r7, #4]
 800c6fa:	2200      	movs	r2, #0
 800c6fc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c700:	2303      	movs	r3, #3
 800c702:	e015      	b.n	800c730 <HAL_DMA_Abort+0xd8>
 800c704:	687b      	ldr	r3, [r7, #4]
 800c706:	681b      	ldr	r3, [r3, #0]
 800c708:	681b      	ldr	r3, [r3, #0]
 800c70a:	f003 0301 	and.w	r3, r3, #1
 800c70e:	2b00      	cmp	r3, #0
 800c710:	d1e4      	bne.n	800c6dc <HAL_DMA_Abort+0x84>
 800c712:	687b      	ldr	r3, [r7, #4]
 800c714:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c716:	223f      	movs	r2, #63	@ 0x3f
 800c718:	409a      	lsls	r2, r3
 800c71a:	68fb      	ldr	r3, [r7, #12]
 800c71c:	609a      	str	r2, [r3, #8]
 800c71e:	687b      	ldr	r3, [r7, #4]
 800c720:	2201      	movs	r2, #1
 800c722:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c726:	687b      	ldr	r3, [r7, #4]
 800c728:	2200      	movs	r2, #0
 800c72a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c72e:	2300      	movs	r3, #0
 800c730:	4618      	mov	r0, r3
 800c732:	3710      	adds	r7, #16
 800c734:	46bd      	mov	sp, r7
 800c736:	bd80      	pop	{r7, pc}

0800c738 <HAL_DMA_Abort_IT>:
 800c738:	b480      	push	{r7}
 800c73a:	b083      	sub	sp, #12
 800c73c:	af00      	add	r7, sp, #0
 800c73e:	6078      	str	r0, [r7, #4]
 800c740:	687b      	ldr	r3, [r7, #4]
 800c742:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c746:	b2db      	uxtb	r3, r3
 800c748:	2b02      	cmp	r3, #2
 800c74a:	d004      	beq.n	800c756 <HAL_DMA_Abort_IT+0x1e>
 800c74c:	687b      	ldr	r3, [r7, #4]
 800c74e:	2280      	movs	r2, #128	@ 0x80
 800c750:	655a      	str	r2, [r3, #84]	@ 0x54
 800c752:	2301      	movs	r3, #1
 800c754:	e00c      	b.n	800c770 <HAL_DMA_Abort_IT+0x38>
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	2205      	movs	r2, #5
 800c75a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c75e:	687b      	ldr	r3, [r7, #4]
 800c760:	681b      	ldr	r3, [r3, #0]
 800c762:	681a      	ldr	r2, [r3, #0]
 800c764:	687b      	ldr	r3, [r7, #4]
 800c766:	681b      	ldr	r3, [r3, #0]
 800c768:	f022 0201 	bic.w	r2, r2, #1
 800c76c:	601a      	str	r2, [r3, #0]
 800c76e:	2300      	movs	r3, #0
 800c770:	4618      	mov	r0, r3
 800c772:	370c      	adds	r7, #12
 800c774:	46bd      	mov	sp, r7
 800c776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c77a:	4770      	bx	lr

0800c77c <HAL_DMA_IRQHandler>:
 800c77c:	b580      	push	{r7, lr}
 800c77e:	b086      	sub	sp, #24
 800c780:	af00      	add	r7, sp, #0
 800c782:	6078      	str	r0, [r7, #4]
 800c784:	2300      	movs	r3, #0
 800c786:	60bb      	str	r3, [r7, #8]
 800c788:	4b8e      	ldr	r3, [pc, #568]	@ (800c9c4 <HAL_DMA_IRQHandler+0x248>)
 800c78a:	681b      	ldr	r3, [r3, #0]
 800c78c:	4a8e      	ldr	r2, [pc, #568]	@ (800c9c8 <HAL_DMA_IRQHandler+0x24c>)
 800c78e:	fba2 2303 	umull	r2, r3, r2, r3
 800c792:	0a9b      	lsrs	r3, r3, #10
 800c794:	617b      	str	r3, [r7, #20]
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c79a:	613b      	str	r3, [r7, #16]
 800c79c:	693b      	ldr	r3, [r7, #16]
 800c79e:	681b      	ldr	r3, [r3, #0]
 800c7a0:	60fb      	str	r3, [r7, #12]
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c7a6:	2208      	movs	r2, #8
 800c7a8:	409a      	lsls	r2, r3
 800c7aa:	68fb      	ldr	r3, [r7, #12]
 800c7ac:	4013      	ands	r3, r2
 800c7ae:	2b00      	cmp	r3, #0
 800c7b0:	d01a      	beq.n	800c7e8 <HAL_DMA_IRQHandler+0x6c>
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	681b      	ldr	r3, [r3, #0]
 800c7b6:	681b      	ldr	r3, [r3, #0]
 800c7b8:	f003 0304 	and.w	r3, r3, #4
 800c7bc:	2b00      	cmp	r3, #0
 800c7be:	d013      	beq.n	800c7e8 <HAL_DMA_IRQHandler+0x6c>
 800c7c0:	687b      	ldr	r3, [r7, #4]
 800c7c2:	681b      	ldr	r3, [r3, #0]
 800c7c4:	681a      	ldr	r2, [r3, #0]
 800c7c6:	687b      	ldr	r3, [r7, #4]
 800c7c8:	681b      	ldr	r3, [r3, #0]
 800c7ca:	f022 0204 	bic.w	r2, r2, #4
 800c7ce:	601a      	str	r2, [r3, #0]
 800c7d0:	687b      	ldr	r3, [r7, #4]
 800c7d2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c7d4:	2208      	movs	r2, #8
 800c7d6:	409a      	lsls	r2, r3
 800c7d8:	693b      	ldr	r3, [r7, #16]
 800c7da:	609a      	str	r2, [r3, #8]
 800c7dc:	687b      	ldr	r3, [r7, #4]
 800c7de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c7e0:	f043 0201 	orr.w	r2, r3, #1
 800c7e4:	687b      	ldr	r3, [r7, #4]
 800c7e6:	655a      	str	r2, [r3, #84]	@ 0x54
 800c7e8:	687b      	ldr	r3, [r7, #4]
 800c7ea:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c7ec:	2201      	movs	r2, #1
 800c7ee:	409a      	lsls	r2, r3
 800c7f0:	68fb      	ldr	r3, [r7, #12]
 800c7f2:	4013      	ands	r3, r2
 800c7f4:	2b00      	cmp	r3, #0
 800c7f6:	d012      	beq.n	800c81e <HAL_DMA_IRQHandler+0xa2>
 800c7f8:	687b      	ldr	r3, [r7, #4]
 800c7fa:	681b      	ldr	r3, [r3, #0]
 800c7fc:	695b      	ldr	r3, [r3, #20]
 800c7fe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800c802:	2b00      	cmp	r3, #0
 800c804:	d00b      	beq.n	800c81e <HAL_DMA_IRQHandler+0xa2>
 800c806:	687b      	ldr	r3, [r7, #4]
 800c808:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c80a:	2201      	movs	r2, #1
 800c80c:	409a      	lsls	r2, r3
 800c80e:	693b      	ldr	r3, [r7, #16]
 800c810:	609a      	str	r2, [r3, #8]
 800c812:	687b      	ldr	r3, [r7, #4]
 800c814:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c816:	f043 0202 	orr.w	r2, r3, #2
 800c81a:	687b      	ldr	r3, [r7, #4]
 800c81c:	655a      	str	r2, [r3, #84]	@ 0x54
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c822:	2204      	movs	r2, #4
 800c824:	409a      	lsls	r2, r3
 800c826:	68fb      	ldr	r3, [r7, #12]
 800c828:	4013      	ands	r3, r2
 800c82a:	2b00      	cmp	r3, #0
 800c82c:	d012      	beq.n	800c854 <HAL_DMA_IRQHandler+0xd8>
 800c82e:	687b      	ldr	r3, [r7, #4]
 800c830:	681b      	ldr	r3, [r3, #0]
 800c832:	681b      	ldr	r3, [r3, #0]
 800c834:	f003 0302 	and.w	r3, r3, #2
 800c838:	2b00      	cmp	r3, #0
 800c83a:	d00b      	beq.n	800c854 <HAL_DMA_IRQHandler+0xd8>
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c840:	2204      	movs	r2, #4
 800c842:	409a      	lsls	r2, r3
 800c844:	693b      	ldr	r3, [r7, #16]
 800c846:	609a      	str	r2, [r3, #8]
 800c848:	687b      	ldr	r3, [r7, #4]
 800c84a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c84c:	f043 0204 	orr.w	r2, r3, #4
 800c850:	687b      	ldr	r3, [r7, #4]
 800c852:	655a      	str	r2, [r3, #84]	@ 0x54
 800c854:	687b      	ldr	r3, [r7, #4]
 800c856:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c858:	2210      	movs	r2, #16
 800c85a:	409a      	lsls	r2, r3
 800c85c:	68fb      	ldr	r3, [r7, #12]
 800c85e:	4013      	ands	r3, r2
 800c860:	2b00      	cmp	r3, #0
 800c862:	d043      	beq.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c864:	687b      	ldr	r3, [r7, #4]
 800c866:	681b      	ldr	r3, [r3, #0]
 800c868:	681b      	ldr	r3, [r3, #0]
 800c86a:	f003 0308 	and.w	r3, r3, #8
 800c86e:	2b00      	cmp	r3, #0
 800c870:	d03c      	beq.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c872:	687b      	ldr	r3, [r7, #4]
 800c874:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c876:	2210      	movs	r2, #16
 800c878:	409a      	lsls	r2, r3
 800c87a:	693b      	ldr	r3, [r7, #16]
 800c87c:	609a      	str	r2, [r3, #8]
 800c87e:	687b      	ldr	r3, [r7, #4]
 800c880:	681b      	ldr	r3, [r3, #0]
 800c882:	681b      	ldr	r3, [r3, #0]
 800c884:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800c888:	2b00      	cmp	r3, #0
 800c88a:	d018      	beq.n	800c8be <HAL_DMA_IRQHandler+0x142>
 800c88c:	687b      	ldr	r3, [r7, #4]
 800c88e:	681b      	ldr	r3, [r3, #0]
 800c890:	681b      	ldr	r3, [r3, #0]
 800c892:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800c896:	2b00      	cmp	r3, #0
 800c898:	d108      	bne.n	800c8ac <HAL_DMA_IRQHandler+0x130>
 800c89a:	687b      	ldr	r3, [r7, #4]
 800c89c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c89e:	2b00      	cmp	r3, #0
 800c8a0:	d024      	beq.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c8a2:	687b      	ldr	r3, [r7, #4]
 800c8a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c8a6:	6878      	ldr	r0, [r7, #4]
 800c8a8:	4798      	blx	r3
 800c8aa:	e01f      	b.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c8ac:	687b      	ldr	r3, [r7, #4]
 800c8ae:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c8b0:	2b00      	cmp	r3, #0
 800c8b2:	d01b      	beq.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c8b4:	687b      	ldr	r3, [r7, #4]
 800c8b6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c8b8:	6878      	ldr	r0, [r7, #4]
 800c8ba:	4798      	blx	r3
 800c8bc:	e016      	b.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c8be:	687b      	ldr	r3, [r7, #4]
 800c8c0:	681b      	ldr	r3, [r3, #0]
 800c8c2:	681b      	ldr	r3, [r3, #0]
 800c8c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c8c8:	2b00      	cmp	r3, #0
 800c8ca:	d107      	bne.n	800c8dc <HAL_DMA_IRQHandler+0x160>
 800c8cc:	687b      	ldr	r3, [r7, #4]
 800c8ce:	681b      	ldr	r3, [r3, #0]
 800c8d0:	681a      	ldr	r2, [r3, #0]
 800c8d2:	687b      	ldr	r3, [r7, #4]
 800c8d4:	681b      	ldr	r3, [r3, #0]
 800c8d6:	f022 0208 	bic.w	r2, r2, #8
 800c8da:	601a      	str	r2, [r3, #0]
 800c8dc:	687b      	ldr	r3, [r7, #4]
 800c8de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c8e0:	2b00      	cmp	r3, #0
 800c8e2:	d003      	beq.n	800c8ec <HAL_DMA_IRQHandler+0x170>
 800c8e4:	687b      	ldr	r3, [r7, #4]
 800c8e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c8e8:	6878      	ldr	r0, [r7, #4]
 800c8ea:	4798      	blx	r3
 800c8ec:	687b      	ldr	r3, [r7, #4]
 800c8ee:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c8f0:	2220      	movs	r2, #32
 800c8f2:	409a      	lsls	r2, r3
 800c8f4:	68fb      	ldr	r3, [r7, #12]
 800c8f6:	4013      	ands	r3, r2
 800c8f8:	2b00      	cmp	r3, #0
 800c8fa:	f000 808f 	beq.w	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800c8fe:	687b      	ldr	r3, [r7, #4]
 800c900:	681b      	ldr	r3, [r3, #0]
 800c902:	681b      	ldr	r3, [r3, #0]
 800c904:	f003 0310 	and.w	r3, r3, #16
 800c908:	2b00      	cmp	r3, #0
 800c90a:	f000 8087 	beq.w	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800c90e:	687b      	ldr	r3, [r7, #4]
 800c910:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c912:	2220      	movs	r2, #32
 800c914:	409a      	lsls	r2, r3
 800c916:	693b      	ldr	r3, [r7, #16]
 800c918:	609a      	str	r2, [r3, #8]
 800c91a:	687b      	ldr	r3, [r7, #4]
 800c91c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c920:	b2db      	uxtb	r3, r3
 800c922:	2b05      	cmp	r3, #5
 800c924:	d136      	bne.n	800c994 <HAL_DMA_IRQHandler+0x218>
 800c926:	687b      	ldr	r3, [r7, #4]
 800c928:	681b      	ldr	r3, [r3, #0]
 800c92a:	681a      	ldr	r2, [r3, #0]
 800c92c:	687b      	ldr	r3, [r7, #4]
 800c92e:	681b      	ldr	r3, [r3, #0]
 800c930:	f022 0216 	bic.w	r2, r2, #22
 800c934:	601a      	str	r2, [r3, #0]
 800c936:	687b      	ldr	r3, [r7, #4]
 800c938:	681b      	ldr	r3, [r3, #0]
 800c93a:	695a      	ldr	r2, [r3, #20]
 800c93c:	687b      	ldr	r3, [r7, #4]
 800c93e:	681b      	ldr	r3, [r3, #0]
 800c940:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800c944:	615a      	str	r2, [r3, #20]
 800c946:	687b      	ldr	r3, [r7, #4]
 800c948:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c94a:	2b00      	cmp	r3, #0
 800c94c:	d103      	bne.n	800c956 <HAL_DMA_IRQHandler+0x1da>
 800c94e:	687b      	ldr	r3, [r7, #4]
 800c950:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c952:	2b00      	cmp	r3, #0
 800c954:	d007      	beq.n	800c966 <HAL_DMA_IRQHandler+0x1ea>
 800c956:	687b      	ldr	r3, [r7, #4]
 800c958:	681b      	ldr	r3, [r3, #0]
 800c95a:	681a      	ldr	r2, [r3, #0]
 800c95c:	687b      	ldr	r3, [r7, #4]
 800c95e:	681b      	ldr	r3, [r3, #0]
 800c960:	f022 0208 	bic.w	r2, r2, #8
 800c964:	601a      	str	r2, [r3, #0]
 800c966:	687b      	ldr	r3, [r7, #4]
 800c968:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c96a:	223f      	movs	r2, #63	@ 0x3f
 800c96c:	409a      	lsls	r2, r3
 800c96e:	693b      	ldr	r3, [r7, #16]
 800c970:	609a      	str	r2, [r3, #8]
 800c972:	687b      	ldr	r3, [r7, #4]
 800c974:	2201      	movs	r2, #1
 800c976:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c97a:	687b      	ldr	r3, [r7, #4]
 800c97c:	2200      	movs	r2, #0
 800c97e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c982:	687b      	ldr	r3, [r7, #4]
 800c984:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c986:	2b00      	cmp	r3, #0
 800c988:	d07e      	beq.n	800ca88 <HAL_DMA_IRQHandler+0x30c>
 800c98a:	687b      	ldr	r3, [r7, #4]
 800c98c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c98e:	6878      	ldr	r0, [r7, #4]
 800c990:	4798      	blx	r3
 800c992:	e079      	b.n	800ca88 <HAL_DMA_IRQHandler+0x30c>
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	681b      	ldr	r3, [r3, #0]
 800c998:	681b      	ldr	r3, [r3, #0]
 800c99a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800c99e:	2b00      	cmp	r3, #0
 800c9a0:	d01d      	beq.n	800c9de <HAL_DMA_IRQHandler+0x262>
 800c9a2:	687b      	ldr	r3, [r7, #4]
 800c9a4:	681b      	ldr	r3, [r3, #0]
 800c9a6:	681b      	ldr	r3, [r3, #0]
 800c9a8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800c9ac:	2b00      	cmp	r3, #0
 800c9ae:	d10d      	bne.n	800c9cc <HAL_DMA_IRQHandler+0x250>
 800c9b0:	687b      	ldr	r3, [r7, #4]
 800c9b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c9b4:	2b00      	cmp	r3, #0
 800c9b6:	d031      	beq.n	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800c9b8:	687b      	ldr	r3, [r7, #4]
 800c9ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800c9bc:	6878      	ldr	r0, [r7, #4]
 800c9be:	4798      	blx	r3
 800c9c0:	e02c      	b.n	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800c9c2:	bf00      	nop
 800c9c4:	20000004 	.word	0x20000004
 800c9c8:	1b4e81b5 	.word	0x1b4e81b5
 800c9cc:	687b      	ldr	r3, [r7, #4]
 800c9ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	d023      	beq.n	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800c9d4:	687b      	ldr	r3, [r7, #4]
 800c9d6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800c9d8:	6878      	ldr	r0, [r7, #4]
 800c9da:	4798      	blx	r3
 800c9dc:	e01e      	b.n	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800c9de:	687b      	ldr	r3, [r7, #4]
 800c9e0:	681b      	ldr	r3, [r3, #0]
 800c9e2:	681b      	ldr	r3, [r3, #0]
 800c9e4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c9e8:	2b00      	cmp	r3, #0
 800c9ea:	d10f      	bne.n	800ca0c <HAL_DMA_IRQHandler+0x290>
 800c9ec:	687b      	ldr	r3, [r7, #4]
 800c9ee:	681b      	ldr	r3, [r3, #0]
 800c9f0:	681a      	ldr	r2, [r3, #0]
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	681b      	ldr	r3, [r3, #0]
 800c9f6:	f022 0210 	bic.w	r2, r2, #16
 800c9fa:	601a      	str	r2, [r3, #0]
 800c9fc:	687b      	ldr	r3, [r7, #4]
 800c9fe:	2201      	movs	r2, #1
 800ca00:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	2200      	movs	r2, #0
 800ca08:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800ca0c:	687b      	ldr	r3, [r7, #4]
 800ca0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ca10:	2b00      	cmp	r3, #0
 800ca12:	d003      	beq.n	800ca1c <HAL_DMA_IRQHandler+0x2a0>
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ca18:	6878      	ldr	r0, [r7, #4]
 800ca1a:	4798      	blx	r3
 800ca1c:	687b      	ldr	r3, [r7, #4]
 800ca1e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ca20:	2b00      	cmp	r3, #0
 800ca22:	d032      	beq.n	800ca8a <HAL_DMA_IRQHandler+0x30e>
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ca28:	f003 0301 	and.w	r3, r3, #1
 800ca2c:	2b00      	cmp	r3, #0
 800ca2e:	d022      	beq.n	800ca76 <HAL_DMA_IRQHandler+0x2fa>
 800ca30:	687b      	ldr	r3, [r7, #4]
 800ca32:	2205      	movs	r2, #5
 800ca34:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800ca38:	687b      	ldr	r3, [r7, #4]
 800ca3a:	681b      	ldr	r3, [r3, #0]
 800ca3c:	681a      	ldr	r2, [r3, #0]
 800ca3e:	687b      	ldr	r3, [r7, #4]
 800ca40:	681b      	ldr	r3, [r3, #0]
 800ca42:	f022 0201 	bic.w	r2, r2, #1
 800ca46:	601a      	str	r2, [r3, #0]
 800ca48:	68bb      	ldr	r3, [r7, #8]
 800ca4a:	3301      	adds	r3, #1
 800ca4c:	60bb      	str	r3, [r7, #8]
 800ca4e:	697a      	ldr	r2, [r7, #20]
 800ca50:	429a      	cmp	r2, r3
 800ca52:	d307      	bcc.n	800ca64 <HAL_DMA_IRQHandler+0x2e8>
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	681b      	ldr	r3, [r3, #0]
 800ca58:	681b      	ldr	r3, [r3, #0]
 800ca5a:	f003 0301 	and.w	r3, r3, #1
 800ca5e:	2b00      	cmp	r3, #0
 800ca60:	d1f2      	bne.n	800ca48 <HAL_DMA_IRQHandler+0x2cc>
 800ca62:	e000      	b.n	800ca66 <HAL_DMA_IRQHandler+0x2ea>
 800ca64:	bf00      	nop
 800ca66:	687b      	ldr	r3, [r7, #4]
 800ca68:	2201      	movs	r2, #1
 800ca6a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	2200      	movs	r2, #0
 800ca72:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ca7a:	2b00      	cmp	r3, #0
 800ca7c:	d005      	beq.n	800ca8a <HAL_DMA_IRQHandler+0x30e>
 800ca7e:	687b      	ldr	r3, [r7, #4]
 800ca80:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ca82:	6878      	ldr	r0, [r7, #4]
 800ca84:	4798      	blx	r3
 800ca86:	e000      	b.n	800ca8a <HAL_DMA_IRQHandler+0x30e>
 800ca88:	bf00      	nop
 800ca8a:	3718      	adds	r7, #24
 800ca8c:	46bd      	mov	sp, r7
 800ca8e:	bd80      	pop	{r7, pc}

0800ca90 <HAL_DMA_GetError>:
 800ca90:	b480      	push	{r7}
 800ca92:	b083      	sub	sp, #12
 800ca94:	af00      	add	r7, sp, #0
 800ca96:	6078      	str	r0, [r7, #4]
 800ca98:	687b      	ldr	r3, [r7, #4]
 800ca9a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ca9c:	4618      	mov	r0, r3
 800ca9e:	370c      	adds	r7, #12
 800caa0:	46bd      	mov	sp, r7
 800caa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caa6:	4770      	bx	lr

0800caa8 <DMA_SetConfig>:
 800caa8:	b480      	push	{r7}
 800caaa:	b085      	sub	sp, #20
 800caac:	af00      	add	r7, sp, #0
 800caae:	60f8      	str	r0, [r7, #12]
 800cab0:	60b9      	str	r1, [r7, #8]
 800cab2:	607a      	str	r2, [r7, #4]
 800cab4:	603b      	str	r3, [r7, #0]
 800cab6:	68fb      	ldr	r3, [r7, #12]
 800cab8:	681b      	ldr	r3, [r3, #0]
 800caba:	681a      	ldr	r2, [r3, #0]
 800cabc:	68fb      	ldr	r3, [r7, #12]
 800cabe:	681b      	ldr	r3, [r3, #0]
 800cac0:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800cac4:	601a      	str	r2, [r3, #0]
 800cac6:	68fb      	ldr	r3, [r7, #12]
 800cac8:	681b      	ldr	r3, [r3, #0]
 800caca:	683a      	ldr	r2, [r7, #0]
 800cacc:	605a      	str	r2, [r3, #4]
 800cace:	68fb      	ldr	r3, [r7, #12]
 800cad0:	689b      	ldr	r3, [r3, #8]
 800cad2:	2b40      	cmp	r3, #64	@ 0x40
 800cad4:	d108      	bne.n	800cae8 <DMA_SetConfig+0x40>
 800cad6:	68fb      	ldr	r3, [r7, #12]
 800cad8:	681b      	ldr	r3, [r3, #0]
 800cada:	687a      	ldr	r2, [r7, #4]
 800cadc:	609a      	str	r2, [r3, #8]
 800cade:	68fb      	ldr	r3, [r7, #12]
 800cae0:	681b      	ldr	r3, [r3, #0]
 800cae2:	68ba      	ldr	r2, [r7, #8]
 800cae4:	60da      	str	r2, [r3, #12]
 800cae6:	e007      	b.n	800caf8 <DMA_SetConfig+0x50>
 800cae8:	68fb      	ldr	r3, [r7, #12]
 800caea:	681b      	ldr	r3, [r3, #0]
 800caec:	68ba      	ldr	r2, [r7, #8]
 800caee:	609a      	str	r2, [r3, #8]
 800caf0:	68fb      	ldr	r3, [r7, #12]
 800caf2:	681b      	ldr	r3, [r3, #0]
 800caf4:	687a      	ldr	r2, [r7, #4]
 800caf6:	60da      	str	r2, [r3, #12]
 800caf8:	bf00      	nop
 800cafa:	3714      	adds	r7, #20
 800cafc:	46bd      	mov	sp, r7
 800cafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb02:	4770      	bx	lr

0800cb04 <DMA_CalcBaseAndBitshift>:
 800cb04:	b480      	push	{r7}
 800cb06:	b085      	sub	sp, #20
 800cb08:	af00      	add	r7, sp, #0
 800cb0a:	6078      	str	r0, [r7, #4]
 800cb0c:	687b      	ldr	r3, [r7, #4]
 800cb0e:	681b      	ldr	r3, [r3, #0]
 800cb10:	b2db      	uxtb	r3, r3
 800cb12:	3b10      	subs	r3, #16
 800cb14:	4a14      	ldr	r2, [pc, #80]	@ (800cb68 <DMA_CalcBaseAndBitshift+0x64>)
 800cb16:	fba2 2303 	umull	r2, r3, r2, r3
 800cb1a:	091b      	lsrs	r3, r3, #4
 800cb1c:	60fb      	str	r3, [r7, #12]
 800cb1e:	4a13      	ldr	r2, [pc, #76]	@ (800cb6c <DMA_CalcBaseAndBitshift+0x68>)
 800cb20:	68fb      	ldr	r3, [r7, #12]
 800cb22:	4413      	add	r3, r2
 800cb24:	781b      	ldrb	r3, [r3, #0]
 800cb26:	461a      	mov	r2, r3
 800cb28:	687b      	ldr	r3, [r7, #4]
 800cb2a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800cb2c:	68fb      	ldr	r3, [r7, #12]
 800cb2e:	2b03      	cmp	r3, #3
 800cb30:	d909      	bls.n	800cb46 <DMA_CalcBaseAndBitshift+0x42>
 800cb32:	687b      	ldr	r3, [r7, #4]
 800cb34:	681b      	ldr	r3, [r3, #0]
 800cb36:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800cb3a:	f023 0303 	bic.w	r3, r3, #3
 800cb3e:	1d1a      	adds	r2, r3, #4
 800cb40:	687b      	ldr	r3, [r7, #4]
 800cb42:	659a      	str	r2, [r3, #88]	@ 0x58
 800cb44:	e007      	b.n	800cb56 <DMA_CalcBaseAndBitshift+0x52>
 800cb46:	687b      	ldr	r3, [r7, #4]
 800cb48:	681b      	ldr	r3, [r3, #0]
 800cb4a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800cb4e:	f023 0303 	bic.w	r3, r3, #3
 800cb52:	687a      	ldr	r2, [r7, #4]
 800cb54:	6593      	str	r3, [r2, #88]	@ 0x58
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cb5a:	4618      	mov	r0, r3
 800cb5c:	3714      	adds	r7, #20
 800cb5e:	46bd      	mov	sp, r7
 800cb60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb64:	4770      	bx	lr
 800cb66:	bf00      	nop
 800cb68:	aaaaaaab 	.word	0xaaaaaaab
 800cb6c:	080215dc 	.word	0x080215dc

0800cb70 <DMA_CheckFifoParam>:
 800cb70:	b480      	push	{r7}
 800cb72:	b085      	sub	sp, #20
 800cb74:	af00      	add	r7, sp, #0
 800cb76:	6078      	str	r0, [r7, #4]
 800cb78:	2300      	movs	r3, #0
 800cb7a:	73fb      	strb	r3, [r7, #15]
 800cb7c:	687b      	ldr	r3, [r7, #4]
 800cb7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800cb80:	60bb      	str	r3, [r7, #8]
 800cb82:	687b      	ldr	r3, [r7, #4]
 800cb84:	699b      	ldr	r3, [r3, #24]
 800cb86:	2b00      	cmp	r3, #0
 800cb88:	d11f      	bne.n	800cbca <DMA_CheckFifoParam+0x5a>
 800cb8a:	68bb      	ldr	r3, [r7, #8]
 800cb8c:	2b03      	cmp	r3, #3
 800cb8e:	d856      	bhi.n	800cc3e <DMA_CheckFifoParam+0xce>
 800cb90:	a201      	add	r2, pc, #4	@ (adr r2, 800cb98 <DMA_CheckFifoParam+0x28>)
 800cb92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cb96:	bf00      	nop
 800cb98:	0800cba9 	.word	0x0800cba9
 800cb9c:	0800cbbb 	.word	0x0800cbbb
 800cba0:	0800cba9 	.word	0x0800cba9
 800cba4:	0800cc3f 	.word	0x0800cc3f
 800cba8:	687b      	ldr	r3, [r7, #4]
 800cbaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cbac:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cbb0:	2b00      	cmp	r3, #0
 800cbb2:	d046      	beq.n	800cc42 <DMA_CheckFifoParam+0xd2>
 800cbb4:	2301      	movs	r3, #1
 800cbb6:	73fb      	strb	r3, [r7, #15]
 800cbb8:	e043      	b.n	800cc42 <DMA_CheckFifoParam+0xd2>
 800cbba:	687b      	ldr	r3, [r7, #4]
 800cbbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cbbe:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800cbc2:	d140      	bne.n	800cc46 <DMA_CheckFifoParam+0xd6>
 800cbc4:	2301      	movs	r3, #1
 800cbc6:	73fb      	strb	r3, [r7, #15]
 800cbc8:	e03d      	b.n	800cc46 <DMA_CheckFifoParam+0xd6>
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	699b      	ldr	r3, [r3, #24]
 800cbce:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800cbd2:	d121      	bne.n	800cc18 <DMA_CheckFifoParam+0xa8>
 800cbd4:	68bb      	ldr	r3, [r7, #8]
 800cbd6:	2b03      	cmp	r3, #3
 800cbd8:	d837      	bhi.n	800cc4a <DMA_CheckFifoParam+0xda>
 800cbda:	a201      	add	r2, pc, #4	@ (adr r2, 800cbe0 <DMA_CheckFifoParam+0x70>)
 800cbdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cbe0:	0800cbf1 	.word	0x0800cbf1
 800cbe4:	0800cbf7 	.word	0x0800cbf7
 800cbe8:	0800cbf1 	.word	0x0800cbf1
 800cbec:	0800cc09 	.word	0x0800cc09
 800cbf0:	2301      	movs	r3, #1
 800cbf2:	73fb      	strb	r3, [r7, #15]
 800cbf4:	e030      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cbf6:	687b      	ldr	r3, [r7, #4]
 800cbf8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cbfa:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cbfe:	2b00      	cmp	r3, #0
 800cc00:	d025      	beq.n	800cc4e <DMA_CheckFifoParam+0xde>
 800cc02:	2301      	movs	r3, #1
 800cc04:	73fb      	strb	r3, [r7, #15]
 800cc06:	e022      	b.n	800cc4e <DMA_CheckFifoParam+0xde>
 800cc08:	687b      	ldr	r3, [r7, #4]
 800cc0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc0c:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800cc10:	d11f      	bne.n	800cc52 <DMA_CheckFifoParam+0xe2>
 800cc12:	2301      	movs	r3, #1
 800cc14:	73fb      	strb	r3, [r7, #15]
 800cc16:	e01c      	b.n	800cc52 <DMA_CheckFifoParam+0xe2>
 800cc18:	68bb      	ldr	r3, [r7, #8]
 800cc1a:	2b02      	cmp	r3, #2
 800cc1c:	d903      	bls.n	800cc26 <DMA_CheckFifoParam+0xb6>
 800cc1e:	68bb      	ldr	r3, [r7, #8]
 800cc20:	2b03      	cmp	r3, #3
 800cc22:	d003      	beq.n	800cc2c <DMA_CheckFifoParam+0xbc>
 800cc24:	e018      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc26:	2301      	movs	r3, #1
 800cc28:	73fb      	strb	r3, [r7, #15]
 800cc2a:	e015      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc2c:	687b      	ldr	r3, [r7, #4]
 800cc2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc30:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cc34:	2b00      	cmp	r3, #0
 800cc36:	d00e      	beq.n	800cc56 <DMA_CheckFifoParam+0xe6>
 800cc38:	2301      	movs	r3, #1
 800cc3a:	73fb      	strb	r3, [r7, #15]
 800cc3c:	e00b      	b.n	800cc56 <DMA_CheckFifoParam+0xe6>
 800cc3e:	bf00      	nop
 800cc40:	e00a      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc42:	bf00      	nop
 800cc44:	e008      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc46:	bf00      	nop
 800cc48:	e006      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc4a:	bf00      	nop
 800cc4c:	e004      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc4e:	bf00      	nop
 800cc50:	e002      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc52:	bf00      	nop
 800cc54:	e000      	b.n	800cc58 <DMA_CheckFifoParam+0xe8>
 800cc56:	bf00      	nop
 800cc58:	7bfb      	ldrb	r3, [r7, #15]
 800cc5a:	4618      	mov	r0, r3
 800cc5c:	3714      	adds	r7, #20
 800cc5e:	46bd      	mov	sp, r7
 800cc60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc64:	4770      	bx	lr
 800cc66:	bf00      	nop

0800cc68 <HAL_GPIO_Init>:
 800cc68:	b480      	push	{r7}
 800cc6a:	b089      	sub	sp, #36	@ 0x24
 800cc6c:	af00      	add	r7, sp, #0
 800cc6e:	6078      	str	r0, [r7, #4]
 800cc70:	6039      	str	r1, [r7, #0]
 800cc72:	2300      	movs	r3, #0
 800cc74:	617b      	str	r3, [r7, #20]
 800cc76:	2300      	movs	r3, #0
 800cc78:	613b      	str	r3, [r7, #16]
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	61bb      	str	r3, [r7, #24]
 800cc7e:	2300      	movs	r3, #0
 800cc80:	61fb      	str	r3, [r7, #28]
 800cc82:	e16b      	b.n	800cf5c <HAL_GPIO_Init+0x2f4>
 800cc84:	2201      	movs	r2, #1
 800cc86:	69fb      	ldr	r3, [r7, #28]
 800cc88:	fa02 f303 	lsl.w	r3, r2, r3
 800cc8c:	617b      	str	r3, [r7, #20]
 800cc8e:	683b      	ldr	r3, [r7, #0]
 800cc90:	681b      	ldr	r3, [r3, #0]
 800cc92:	697a      	ldr	r2, [r7, #20]
 800cc94:	4013      	ands	r3, r2
 800cc96:	613b      	str	r3, [r7, #16]
 800cc98:	693a      	ldr	r2, [r7, #16]
 800cc9a:	697b      	ldr	r3, [r7, #20]
 800cc9c:	429a      	cmp	r2, r3
 800cc9e:	f040 815a 	bne.w	800cf56 <HAL_GPIO_Init+0x2ee>
 800cca2:	683b      	ldr	r3, [r7, #0]
 800cca4:	685b      	ldr	r3, [r3, #4]
 800cca6:	f003 0303 	and.w	r3, r3, #3
 800ccaa:	2b01      	cmp	r3, #1
 800ccac:	d005      	beq.n	800ccba <HAL_GPIO_Init+0x52>
 800ccae:	683b      	ldr	r3, [r7, #0]
 800ccb0:	685b      	ldr	r3, [r3, #4]
 800ccb2:	f003 0303 	and.w	r3, r3, #3
 800ccb6:	2b02      	cmp	r3, #2
 800ccb8:	d130      	bne.n	800cd1c <HAL_GPIO_Init+0xb4>
 800ccba:	687b      	ldr	r3, [r7, #4]
 800ccbc:	689b      	ldr	r3, [r3, #8]
 800ccbe:	61bb      	str	r3, [r7, #24]
 800ccc0:	69fb      	ldr	r3, [r7, #28]
 800ccc2:	005b      	lsls	r3, r3, #1
 800ccc4:	2203      	movs	r2, #3
 800ccc6:	fa02 f303 	lsl.w	r3, r2, r3
 800ccca:	43db      	mvns	r3, r3
 800cccc:	69ba      	ldr	r2, [r7, #24]
 800ccce:	4013      	ands	r3, r2
 800ccd0:	61bb      	str	r3, [r7, #24]
 800ccd2:	683b      	ldr	r3, [r7, #0]
 800ccd4:	68da      	ldr	r2, [r3, #12]
 800ccd6:	69fb      	ldr	r3, [r7, #28]
 800ccd8:	005b      	lsls	r3, r3, #1
 800ccda:	fa02 f303 	lsl.w	r3, r2, r3
 800ccde:	69ba      	ldr	r2, [r7, #24]
 800cce0:	4313      	orrs	r3, r2
 800cce2:	61bb      	str	r3, [r7, #24]
 800cce4:	687b      	ldr	r3, [r7, #4]
 800cce6:	69ba      	ldr	r2, [r7, #24]
 800cce8:	609a      	str	r2, [r3, #8]
 800ccea:	687b      	ldr	r3, [r7, #4]
 800ccec:	685b      	ldr	r3, [r3, #4]
 800ccee:	61bb      	str	r3, [r7, #24]
 800ccf0:	2201      	movs	r2, #1
 800ccf2:	69fb      	ldr	r3, [r7, #28]
 800ccf4:	fa02 f303 	lsl.w	r3, r2, r3
 800ccf8:	43db      	mvns	r3, r3
 800ccfa:	69ba      	ldr	r2, [r7, #24]
 800ccfc:	4013      	ands	r3, r2
 800ccfe:	61bb      	str	r3, [r7, #24]
 800cd00:	683b      	ldr	r3, [r7, #0]
 800cd02:	685b      	ldr	r3, [r3, #4]
 800cd04:	091b      	lsrs	r3, r3, #4
 800cd06:	f003 0201 	and.w	r2, r3, #1
 800cd0a:	69fb      	ldr	r3, [r7, #28]
 800cd0c:	fa02 f303 	lsl.w	r3, r2, r3
 800cd10:	69ba      	ldr	r2, [r7, #24]
 800cd12:	4313      	orrs	r3, r2
 800cd14:	61bb      	str	r3, [r7, #24]
 800cd16:	687b      	ldr	r3, [r7, #4]
 800cd18:	69ba      	ldr	r2, [r7, #24]
 800cd1a:	605a      	str	r2, [r3, #4]
 800cd1c:	683b      	ldr	r3, [r7, #0]
 800cd1e:	685b      	ldr	r3, [r3, #4]
 800cd20:	f003 0303 	and.w	r3, r3, #3
 800cd24:	2b03      	cmp	r3, #3
 800cd26:	d017      	beq.n	800cd58 <HAL_GPIO_Init+0xf0>
 800cd28:	687b      	ldr	r3, [r7, #4]
 800cd2a:	68db      	ldr	r3, [r3, #12]
 800cd2c:	61bb      	str	r3, [r7, #24]
 800cd2e:	69fb      	ldr	r3, [r7, #28]
 800cd30:	005b      	lsls	r3, r3, #1
 800cd32:	2203      	movs	r2, #3
 800cd34:	fa02 f303 	lsl.w	r3, r2, r3
 800cd38:	43db      	mvns	r3, r3
 800cd3a:	69ba      	ldr	r2, [r7, #24]
 800cd3c:	4013      	ands	r3, r2
 800cd3e:	61bb      	str	r3, [r7, #24]
 800cd40:	683b      	ldr	r3, [r7, #0]
 800cd42:	689a      	ldr	r2, [r3, #8]
 800cd44:	69fb      	ldr	r3, [r7, #28]
 800cd46:	005b      	lsls	r3, r3, #1
 800cd48:	fa02 f303 	lsl.w	r3, r2, r3
 800cd4c:	69ba      	ldr	r2, [r7, #24]
 800cd4e:	4313      	orrs	r3, r2
 800cd50:	61bb      	str	r3, [r7, #24]
 800cd52:	687b      	ldr	r3, [r7, #4]
 800cd54:	69ba      	ldr	r2, [r7, #24]
 800cd56:	60da      	str	r2, [r3, #12]
 800cd58:	683b      	ldr	r3, [r7, #0]
 800cd5a:	685b      	ldr	r3, [r3, #4]
 800cd5c:	f003 0303 	and.w	r3, r3, #3
 800cd60:	2b02      	cmp	r3, #2
 800cd62:	d123      	bne.n	800cdac <HAL_GPIO_Init+0x144>
 800cd64:	69fb      	ldr	r3, [r7, #28]
 800cd66:	08da      	lsrs	r2, r3, #3
 800cd68:	687b      	ldr	r3, [r7, #4]
 800cd6a:	3208      	adds	r2, #8
 800cd6c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800cd70:	61bb      	str	r3, [r7, #24]
 800cd72:	69fb      	ldr	r3, [r7, #28]
 800cd74:	f003 0307 	and.w	r3, r3, #7
 800cd78:	009b      	lsls	r3, r3, #2
 800cd7a:	220f      	movs	r2, #15
 800cd7c:	fa02 f303 	lsl.w	r3, r2, r3
 800cd80:	43db      	mvns	r3, r3
 800cd82:	69ba      	ldr	r2, [r7, #24]
 800cd84:	4013      	ands	r3, r2
 800cd86:	61bb      	str	r3, [r7, #24]
 800cd88:	683b      	ldr	r3, [r7, #0]
 800cd8a:	691a      	ldr	r2, [r3, #16]
 800cd8c:	69fb      	ldr	r3, [r7, #28]
 800cd8e:	f003 0307 	and.w	r3, r3, #7
 800cd92:	009b      	lsls	r3, r3, #2
 800cd94:	fa02 f303 	lsl.w	r3, r2, r3
 800cd98:	69ba      	ldr	r2, [r7, #24]
 800cd9a:	4313      	orrs	r3, r2
 800cd9c:	61bb      	str	r3, [r7, #24]
 800cd9e:	69fb      	ldr	r3, [r7, #28]
 800cda0:	08da      	lsrs	r2, r3, #3
 800cda2:	687b      	ldr	r3, [r7, #4]
 800cda4:	3208      	adds	r2, #8
 800cda6:	69b9      	ldr	r1, [r7, #24]
 800cda8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	681b      	ldr	r3, [r3, #0]
 800cdb0:	61bb      	str	r3, [r7, #24]
 800cdb2:	69fb      	ldr	r3, [r7, #28]
 800cdb4:	005b      	lsls	r3, r3, #1
 800cdb6:	2203      	movs	r2, #3
 800cdb8:	fa02 f303 	lsl.w	r3, r2, r3
 800cdbc:	43db      	mvns	r3, r3
 800cdbe:	69ba      	ldr	r2, [r7, #24]
 800cdc0:	4013      	ands	r3, r2
 800cdc2:	61bb      	str	r3, [r7, #24]
 800cdc4:	683b      	ldr	r3, [r7, #0]
 800cdc6:	685b      	ldr	r3, [r3, #4]
 800cdc8:	f003 0203 	and.w	r2, r3, #3
 800cdcc:	69fb      	ldr	r3, [r7, #28]
 800cdce:	005b      	lsls	r3, r3, #1
 800cdd0:	fa02 f303 	lsl.w	r3, r2, r3
 800cdd4:	69ba      	ldr	r2, [r7, #24]
 800cdd6:	4313      	orrs	r3, r2
 800cdd8:	61bb      	str	r3, [r7, #24]
 800cdda:	687b      	ldr	r3, [r7, #4]
 800cddc:	69ba      	ldr	r2, [r7, #24]
 800cdde:	601a      	str	r2, [r3, #0]
 800cde0:	683b      	ldr	r3, [r7, #0]
 800cde2:	685b      	ldr	r3, [r3, #4]
 800cde4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	f000 80b4 	beq.w	800cf56 <HAL_GPIO_Init+0x2ee>
 800cdee:	2300      	movs	r3, #0
 800cdf0:	60fb      	str	r3, [r7, #12]
 800cdf2:	4b60      	ldr	r3, [pc, #384]	@ (800cf74 <HAL_GPIO_Init+0x30c>)
 800cdf4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cdf6:	4a5f      	ldr	r2, [pc, #380]	@ (800cf74 <HAL_GPIO_Init+0x30c>)
 800cdf8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800cdfc:	6453      	str	r3, [r2, #68]	@ 0x44
 800cdfe:	4b5d      	ldr	r3, [pc, #372]	@ (800cf74 <HAL_GPIO_Init+0x30c>)
 800ce00:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ce02:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800ce06:	60fb      	str	r3, [r7, #12]
 800ce08:	68fb      	ldr	r3, [r7, #12]
 800ce0a:	4a5b      	ldr	r2, [pc, #364]	@ (800cf78 <HAL_GPIO_Init+0x310>)
 800ce0c:	69fb      	ldr	r3, [r7, #28]
 800ce0e:	089b      	lsrs	r3, r3, #2
 800ce10:	3302      	adds	r3, #2
 800ce12:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ce16:	61bb      	str	r3, [r7, #24]
 800ce18:	69fb      	ldr	r3, [r7, #28]
 800ce1a:	f003 0303 	and.w	r3, r3, #3
 800ce1e:	009b      	lsls	r3, r3, #2
 800ce20:	220f      	movs	r2, #15
 800ce22:	fa02 f303 	lsl.w	r3, r2, r3
 800ce26:	43db      	mvns	r3, r3
 800ce28:	69ba      	ldr	r2, [r7, #24]
 800ce2a:	4013      	ands	r3, r2
 800ce2c:	61bb      	str	r3, [r7, #24]
 800ce2e:	687b      	ldr	r3, [r7, #4]
 800ce30:	4a52      	ldr	r2, [pc, #328]	@ (800cf7c <HAL_GPIO_Init+0x314>)
 800ce32:	4293      	cmp	r3, r2
 800ce34:	d02b      	beq.n	800ce8e <HAL_GPIO_Init+0x226>
 800ce36:	687b      	ldr	r3, [r7, #4]
 800ce38:	4a51      	ldr	r2, [pc, #324]	@ (800cf80 <HAL_GPIO_Init+0x318>)
 800ce3a:	4293      	cmp	r3, r2
 800ce3c:	d025      	beq.n	800ce8a <HAL_GPIO_Init+0x222>
 800ce3e:	687b      	ldr	r3, [r7, #4]
 800ce40:	4a50      	ldr	r2, [pc, #320]	@ (800cf84 <HAL_GPIO_Init+0x31c>)
 800ce42:	4293      	cmp	r3, r2
 800ce44:	d01f      	beq.n	800ce86 <HAL_GPIO_Init+0x21e>
 800ce46:	687b      	ldr	r3, [r7, #4]
 800ce48:	4a4f      	ldr	r2, [pc, #316]	@ (800cf88 <HAL_GPIO_Init+0x320>)
 800ce4a:	4293      	cmp	r3, r2
 800ce4c:	d019      	beq.n	800ce82 <HAL_GPIO_Init+0x21a>
 800ce4e:	687b      	ldr	r3, [r7, #4]
 800ce50:	4a4e      	ldr	r2, [pc, #312]	@ (800cf8c <HAL_GPIO_Init+0x324>)
 800ce52:	4293      	cmp	r3, r2
 800ce54:	d013      	beq.n	800ce7e <HAL_GPIO_Init+0x216>
 800ce56:	687b      	ldr	r3, [r7, #4]
 800ce58:	4a4d      	ldr	r2, [pc, #308]	@ (800cf90 <HAL_GPIO_Init+0x328>)
 800ce5a:	4293      	cmp	r3, r2
 800ce5c:	d00d      	beq.n	800ce7a <HAL_GPIO_Init+0x212>
 800ce5e:	687b      	ldr	r3, [r7, #4]
 800ce60:	4a4c      	ldr	r2, [pc, #304]	@ (800cf94 <HAL_GPIO_Init+0x32c>)
 800ce62:	4293      	cmp	r3, r2
 800ce64:	d007      	beq.n	800ce76 <HAL_GPIO_Init+0x20e>
 800ce66:	687b      	ldr	r3, [r7, #4]
 800ce68:	4a4b      	ldr	r2, [pc, #300]	@ (800cf98 <HAL_GPIO_Init+0x330>)
 800ce6a:	4293      	cmp	r3, r2
 800ce6c:	d101      	bne.n	800ce72 <HAL_GPIO_Init+0x20a>
 800ce6e:	2307      	movs	r3, #7
 800ce70:	e00e      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce72:	2308      	movs	r3, #8
 800ce74:	e00c      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce76:	2306      	movs	r3, #6
 800ce78:	e00a      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce7a:	2305      	movs	r3, #5
 800ce7c:	e008      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce7e:	2304      	movs	r3, #4
 800ce80:	e006      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce82:	2303      	movs	r3, #3
 800ce84:	e004      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce86:	2302      	movs	r3, #2
 800ce88:	e002      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce8a:	2301      	movs	r3, #1
 800ce8c:	e000      	b.n	800ce90 <HAL_GPIO_Init+0x228>
 800ce8e:	2300      	movs	r3, #0
 800ce90:	69fa      	ldr	r2, [r7, #28]
 800ce92:	f002 0203 	and.w	r2, r2, #3
 800ce96:	0092      	lsls	r2, r2, #2
 800ce98:	4093      	lsls	r3, r2
 800ce9a:	69ba      	ldr	r2, [r7, #24]
 800ce9c:	4313      	orrs	r3, r2
 800ce9e:	61bb      	str	r3, [r7, #24]
 800cea0:	4935      	ldr	r1, [pc, #212]	@ (800cf78 <HAL_GPIO_Init+0x310>)
 800cea2:	69fb      	ldr	r3, [r7, #28]
 800cea4:	089b      	lsrs	r3, r3, #2
 800cea6:	3302      	adds	r3, #2
 800cea8:	69ba      	ldr	r2, [r7, #24]
 800ceaa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800ceae:	4b3b      	ldr	r3, [pc, #236]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800ceb0:	689b      	ldr	r3, [r3, #8]
 800ceb2:	61bb      	str	r3, [r7, #24]
 800ceb4:	693b      	ldr	r3, [r7, #16]
 800ceb6:	43db      	mvns	r3, r3
 800ceb8:	69ba      	ldr	r2, [r7, #24]
 800ceba:	4013      	ands	r3, r2
 800cebc:	61bb      	str	r3, [r7, #24]
 800cebe:	683b      	ldr	r3, [r7, #0]
 800cec0:	685b      	ldr	r3, [r3, #4]
 800cec2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800cec6:	2b00      	cmp	r3, #0
 800cec8:	d003      	beq.n	800ced2 <HAL_GPIO_Init+0x26a>
 800ceca:	69ba      	ldr	r2, [r7, #24]
 800cecc:	693b      	ldr	r3, [r7, #16]
 800cece:	4313      	orrs	r3, r2
 800ced0:	61bb      	str	r3, [r7, #24]
 800ced2:	4a32      	ldr	r2, [pc, #200]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800ced4:	69bb      	ldr	r3, [r7, #24]
 800ced6:	6093      	str	r3, [r2, #8]
 800ced8:	4b30      	ldr	r3, [pc, #192]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800ceda:	68db      	ldr	r3, [r3, #12]
 800cedc:	61bb      	str	r3, [r7, #24]
 800cede:	693b      	ldr	r3, [r7, #16]
 800cee0:	43db      	mvns	r3, r3
 800cee2:	69ba      	ldr	r2, [r7, #24]
 800cee4:	4013      	ands	r3, r2
 800cee6:	61bb      	str	r3, [r7, #24]
 800cee8:	683b      	ldr	r3, [r7, #0]
 800ceea:	685b      	ldr	r3, [r3, #4]
 800ceec:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800cef0:	2b00      	cmp	r3, #0
 800cef2:	d003      	beq.n	800cefc <HAL_GPIO_Init+0x294>
 800cef4:	69ba      	ldr	r2, [r7, #24]
 800cef6:	693b      	ldr	r3, [r7, #16]
 800cef8:	4313      	orrs	r3, r2
 800cefa:	61bb      	str	r3, [r7, #24]
 800cefc:	4a27      	ldr	r2, [pc, #156]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800cefe:	69bb      	ldr	r3, [r7, #24]
 800cf00:	60d3      	str	r3, [r2, #12]
 800cf02:	4b26      	ldr	r3, [pc, #152]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800cf04:	685b      	ldr	r3, [r3, #4]
 800cf06:	61bb      	str	r3, [r7, #24]
 800cf08:	693b      	ldr	r3, [r7, #16]
 800cf0a:	43db      	mvns	r3, r3
 800cf0c:	69ba      	ldr	r2, [r7, #24]
 800cf0e:	4013      	ands	r3, r2
 800cf10:	61bb      	str	r3, [r7, #24]
 800cf12:	683b      	ldr	r3, [r7, #0]
 800cf14:	685b      	ldr	r3, [r3, #4]
 800cf16:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800cf1a:	2b00      	cmp	r3, #0
 800cf1c:	d003      	beq.n	800cf26 <HAL_GPIO_Init+0x2be>
 800cf1e:	69ba      	ldr	r2, [r7, #24]
 800cf20:	693b      	ldr	r3, [r7, #16]
 800cf22:	4313      	orrs	r3, r2
 800cf24:	61bb      	str	r3, [r7, #24]
 800cf26:	4a1d      	ldr	r2, [pc, #116]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800cf28:	69bb      	ldr	r3, [r7, #24]
 800cf2a:	6053      	str	r3, [r2, #4]
 800cf2c:	4b1b      	ldr	r3, [pc, #108]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800cf2e:	681b      	ldr	r3, [r3, #0]
 800cf30:	61bb      	str	r3, [r7, #24]
 800cf32:	693b      	ldr	r3, [r7, #16]
 800cf34:	43db      	mvns	r3, r3
 800cf36:	69ba      	ldr	r2, [r7, #24]
 800cf38:	4013      	ands	r3, r2
 800cf3a:	61bb      	str	r3, [r7, #24]
 800cf3c:	683b      	ldr	r3, [r7, #0]
 800cf3e:	685b      	ldr	r3, [r3, #4]
 800cf40:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800cf44:	2b00      	cmp	r3, #0
 800cf46:	d003      	beq.n	800cf50 <HAL_GPIO_Init+0x2e8>
 800cf48:	69ba      	ldr	r2, [r7, #24]
 800cf4a:	693b      	ldr	r3, [r7, #16]
 800cf4c:	4313      	orrs	r3, r2
 800cf4e:	61bb      	str	r3, [r7, #24]
 800cf50:	4a12      	ldr	r2, [pc, #72]	@ (800cf9c <HAL_GPIO_Init+0x334>)
 800cf52:	69bb      	ldr	r3, [r7, #24]
 800cf54:	6013      	str	r3, [r2, #0]
 800cf56:	69fb      	ldr	r3, [r7, #28]
 800cf58:	3301      	adds	r3, #1
 800cf5a:	61fb      	str	r3, [r7, #28]
 800cf5c:	69fb      	ldr	r3, [r7, #28]
 800cf5e:	2b0f      	cmp	r3, #15
 800cf60:	f67f ae90 	bls.w	800cc84 <HAL_GPIO_Init+0x1c>
 800cf64:	bf00      	nop
 800cf66:	bf00      	nop
 800cf68:	3724      	adds	r7, #36	@ 0x24
 800cf6a:	46bd      	mov	sp, r7
 800cf6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf70:	4770      	bx	lr
 800cf72:	bf00      	nop
 800cf74:	40023800 	.word	0x40023800
 800cf78:	40013800 	.word	0x40013800
 800cf7c:	40020000 	.word	0x40020000
 800cf80:	40020400 	.word	0x40020400
 800cf84:	40020800 	.word	0x40020800
 800cf88:	40020c00 	.word	0x40020c00
 800cf8c:	40021000 	.word	0x40021000
 800cf90:	40021400 	.word	0x40021400
 800cf94:	40021800 	.word	0x40021800
 800cf98:	40021c00 	.word	0x40021c00
 800cf9c:	40013c00 	.word	0x40013c00

0800cfa0 <HAL_GPIO_WritePin>:
 800cfa0:	b480      	push	{r7}
 800cfa2:	b083      	sub	sp, #12
 800cfa4:	af00      	add	r7, sp, #0
 800cfa6:	6078      	str	r0, [r7, #4]
 800cfa8:	460b      	mov	r3, r1
 800cfaa:	807b      	strh	r3, [r7, #2]
 800cfac:	4613      	mov	r3, r2
 800cfae:	707b      	strb	r3, [r7, #1]
 800cfb0:	787b      	ldrb	r3, [r7, #1]
 800cfb2:	2b00      	cmp	r3, #0
 800cfb4:	d003      	beq.n	800cfbe <HAL_GPIO_WritePin+0x1e>
 800cfb6:	887a      	ldrh	r2, [r7, #2]
 800cfb8:	687b      	ldr	r3, [r7, #4]
 800cfba:	619a      	str	r2, [r3, #24]
 800cfbc:	e003      	b.n	800cfc6 <HAL_GPIO_WritePin+0x26>
 800cfbe:	887b      	ldrh	r3, [r7, #2]
 800cfc0:	041a      	lsls	r2, r3, #16
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	619a      	str	r2, [r3, #24]
 800cfc6:	bf00      	nop
 800cfc8:	370c      	adds	r7, #12
 800cfca:	46bd      	mov	sp, r7
 800cfcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfd0:	4770      	bx	lr
	...

0800cfd4 <HAL_GPIO_EXTI_IRQHandler>:
 800cfd4:	b580      	push	{r7, lr}
 800cfd6:	b082      	sub	sp, #8
 800cfd8:	af00      	add	r7, sp, #0
 800cfda:	4603      	mov	r3, r0
 800cfdc:	80fb      	strh	r3, [r7, #6]
 800cfde:	4b08      	ldr	r3, [pc, #32]	@ (800d000 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800cfe0:	695a      	ldr	r2, [r3, #20]
 800cfe2:	88fb      	ldrh	r3, [r7, #6]
 800cfe4:	4013      	ands	r3, r2
 800cfe6:	2b00      	cmp	r3, #0
 800cfe8:	d006      	beq.n	800cff8 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800cfea:	4a05      	ldr	r2, [pc, #20]	@ (800d000 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800cfec:	88fb      	ldrh	r3, [r7, #6]
 800cfee:	6153      	str	r3, [r2, #20]
 800cff0:	88fb      	ldrh	r3, [r7, #6]
 800cff2:	4618      	mov	r0, r3
 800cff4:	f7f4 ff3e 	bl	8001e74 <HAL_GPIO_EXTI_Callback>
 800cff8:	bf00      	nop
 800cffa:	3708      	adds	r7, #8
 800cffc:	46bd      	mov	sp, r7
 800cffe:	bd80      	pop	{r7, pc}
 800d000:	40013c00 	.word	0x40013c00

0800d004 <HAL_I2C_Init>:
 800d004:	b580      	push	{r7, lr}
 800d006:	b084      	sub	sp, #16
 800d008:	af00      	add	r7, sp, #0
 800d00a:	6078      	str	r0, [r7, #4]
 800d00c:	687b      	ldr	r3, [r7, #4]
 800d00e:	2b00      	cmp	r3, #0
 800d010:	d101      	bne.n	800d016 <HAL_I2C_Init+0x12>
 800d012:	2301      	movs	r3, #1
 800d014:	e12b      	b.n	800d26e <HAL_I2C_Init+0x26a>
 800d016:	687b      	ldr	r3, [r7, #4]
 800d018:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d01c:	b2db      	uxtb	r3, r3
 800d01e:	2b00      	cmp	r3, #0
 800d020:	d106      	bne.n	800d030 <HAL_I2C_Init+0x2c>
 800d022:	687b      	ldr	r3, [r7, #4]
 800d024:	2200      	movs	r2, #0
 800d026:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d02a:	6878      	ldr	r0, [r7, #4]
 800d02c:	f7f6 fa62 	bl	80034f4 <HAL_I2C_MspInit>
 800d030:	687b      	ldr	r3, [r7, #4]
 800d032:	2224      	movs	r2, #36	@ 0x24
 800d034:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d038:	687b      	ldr	r3, [r7, #4]
 800d03a:	681b      	ldr	r3, [r3, #0]
 800d03c:	681a      	ldr	r2, [r3, #0]
 800d03e:	687b      	ldr	r3, [r7, #4]
 800d040:	681b      	ldr	r3, [r3, #0]
 800d042:	f022 0201 	bic.w	r2, r2, #1
 800d046:	601a      	str	r2, [r3, #0]
 800d048:	687b      	ldr	r3, [r7, #4]
 800d04a:	681b      	ldr	r3, [r3, #0]
 800d04c:	681a      	ldr	r2, [r3, #0]
 800d04e:	687b      	ldr	r3, [r7, #4]
 800d050:	681b      	ldr	r3, [r3, #0]
 800d052:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800d056:	601a      	str	r2, [r3, #0]
 800d058:	687b      	ldr	r3, [r7, #4]
 800d05a:	681b      	ldr	r3, [r3, #0]
 800d05c:	681a      	ldr	r2, [r3, #0]
 800d05e:	687b      	ldr	r3, [r7, #4]
 800d060:	681b      	ldr	r3, [r3, #0]
 800d062:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800d066:	601a      	str	r2, [r3, #0]
 800d068:	f003 fc04 	bl	8010874 <HAL_RCC_GetPCLK1Freq>
 800d06c:	60f8      	str	r0, [r7, #12]
 800d06e:	687b      	ldr	r3, [r7, #4]
 800d070:	685b      	ldr	r3, [r3, #4]
 800d072:	4a81      	ldr	r2, [pc, #516]	@ (800d278 <HAL_I2C_Init+0x274>)
 800d074:	4293      	cmp	r3, r2
 800d076:	d807      	bhi.n	800d088 <HAL_I2C_Init+0x84>
 800d078:	68fb      	ldr	r3, [r7, #12]
 800d07a:	4a80      	ldr	r2, [pc, #512]	@ (800d27c <HAL_I2C_Init+0x278>)
 800d07c:	4293      	cmp	r3, r2
 800d07e:	bf94      	ite	ls
 800d080:	2301      	movls	r3, #1
 800d082:	2300      	movhi	r3, #0
 800d084:	b2db      	uxtb	r3, r3
 800d086:	e006      	b.n	800d096 <HAL_I2C_Init+0x92>
 800d088:	68fb      	ldr	r3, [r7, #12]
 800d08a:	4a7d      	ldr	r2, [pc, #500]	@ (800d280 <HAL_I2C_Init+0x27c>)
 800d08c:	4293      	cmp	r3, r2
 800d08e:	bf94      	ite	ls
 800d090:	2301      	movls	r3, #1
 800d092:	2300      	movhi	r3, #0
 800d094:	b2db      	uxtb	r3, r3
 800d096:	2b00      	cmp	r3, #0
 800d098:	d001      	beq.n	800d09e <HAL_I2C_Init+0x9a>
 800d09a:	2301      	movs	r3, #1
 800d09c:	e0e7      	b.n	800d26e <HAL_I2C_Init+0x26a>
 800d09e:	68fb      	ldr	r3, [r7, #12]
 800d0a0:	4a78      	ldr	r2, [pc, #480]	@ (800d284 <HAL_I2C_Init+0x280>)
 800d0a2:	fba2 2303 	umull	r2, r3, r2, r3
 800d0a6:	0c9b      	lsrs	r3, r3, #18
 800d0a8:	60bb      	str	r3, [r7, #8]
 800d0aa:	687b      	ldr	r3, [r7, #4]
 800d0ac:	681b      	ldr	r3, [r3, #0]
 800d0ae:	685b      	ldr	r3, [r3, #4]
 800d0b0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800d0b4:	687b      	ldr	r3, [r7, #4]
 800d0b6:	681b      	ldr	r3, [r3, #0]
 800d0b8:	68ba      	ldr	r2, [r7, #8]
 800d0ba:	430a      	orrs	r2, r1
 800d0bc:	605a      	str	r2, [r3, #4]
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	681b      	ldr	r3, [r3, #0]
 800d0c2:	6a1b      	ldr	r3, [r3, #32]
 800d0c4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800d0c8:	687b      	ldr	r3, [r7, #4]
 800d0ca:	685b      	ldr	r3, [r3, #4]
 800d0cc:	4a6a      	ldr	r2, [pc, #424]	@ (800d278 <HAL_I2C_Init+0x274>)
 800d0ce:	4293      	cmp	r3, r2
 800d0d0:	d802      	bhi.n	800d0d8 <HAL_I2C_Init+0xd4>
 800d0d2:	68bb      	ldr	r3, [r7, #8]
 800d0d4:	3301      	adds	r3, #1
 800d0d6:	e009      	b.n	800d0ec <HAL_I2C_Init+0xe8>
 800d0d8:	68bb      	ldr	r3, [r7, #8]
 800d0da:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800d0de:	fb02 f303 	mul.w	r3, r2, r3
 800d0e2:	4a69      	ldr	r2, [pc, #420]	@ (800d288 <HAL_I2C_Init+0x284>)
 800d0e4:	fba2 2303 	umull	r2, r3, r2, r3
 800d0e8:	099b      	lsrs	r3, r3, #6
 800d0ea:	3301      	adds	r3, #1
 800d0ec:	687a      	ldr	r2, [r7, #4]
 800d0ee:	6812      	ldr	r2, [r2, #0]
 800d0f0:	430b      	orrs	r3, r1
 800d0f2:	6213      	str	r3, [r2, #32]
 800d0f4:	687b      	ldr	r3, [r7, #4]
 800d0f6:	681b      	ldr	r3, [r3, #0]
 800d0f8:	69db      	ldr	r3, [r3, #28]
 800d0fa:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800d0fe:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800d102:	687b      	ldr	r3, [r7, #4]
 800d104:	685b      	ldr	r3, [r3, #4]
 800d106:	495c      	ldr	r1, [pc, #368]	@ (800d278 <HAL_I2C_Init+0x274>)
 800d108:	428b      	cmp	r3, r1
 800d10a:	d819      	bhi.n	800d140 <HAL_I2C_Init+0x13c>
 800d10c:	68fb      	ldr	r3, [r7, #12]
 800d10e:	1e59      	subs	r1, r3, #1
 800d110:	687b      	ldr	r3, [r7, #4]
 800d112:	685b      	ldr	r3, [r3, #4]
 800d114:	005b      	lsls	r3, r3, #1
 800d116:	fbb1 f3f3 	udiv	r3, r1, r3
 800d11a:	1c59      	adds	r1, r3, #1
 800d11c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800d120:	400b      	ands	r3, r1
 800d122:	2b00      	cmp	r3, #0
 800d124:	d00a      	beq.n	800d13c <HAL_I2C_Init+0x138>
 800d126:	68fb      	ldr	r3, [r7, #12]
 800d128:	1e59      	subs	r1, r3, #1
 800d12a:	687b      	ldr	r3, [r7, #4]
 800d12c:	685b      	ldr	r3, [r3, #4]
 800d12e:	005b      	lsls	r3, r3, #1
 800d130:	fbb1 f3f3 	udiv	r3, r1, r3
 800d134:	3301      	adds	r3, #1
 800d136:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d13a:	e051      	b.n	800d1e0 <HAL_I2C_Init+0x1dc>
 800d13c:	2304      	movs	r3, #4
 800d13e:	e04f      	b.n	800d1e0 <HAL_I2C_Init+0x1dc>
 800d140:	687b      	ldr	r3, [r7, #4]
 800d142:	689b      	ldr	r3, [r3, #8]
 800d144:	2b00      	cmp	r3, #0
 800d146:	d111      	bne.n	800d16c <HAL_I2C_Init+0x168>
 800d148:	68fb      	ldr	r3, [r7, #12]
 800d14a:	1e58      	subs	r0, r3, #1
 800d14c:	687b      	ldr	r3, [r7, #4]
 800d14e:	6859      	ldr	r1, [r3, #4]
 800d150:	460b      	mov	r3, r1
 800d152:	005b      	lsls	r3, r3, #1
 800d154:	440b      	add	r3, r1
 800d156:	fbb0 f3f3 	udiv	r3, r0, r3
 800d15a:	3301      	adds	r3, #1
 800d15c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d160:	2b00      	cmp	r3, #0
 800d162:	bf0c      	ite	eq
 800d164:	2301      	moveq	r3, #1
 800d166:	2300      	movne	r3, #0
 800d168:	b2db      	uxtb	r3, r3
 800d16a:	e012      	b.n	800d192 <HAL_I2C_Init+0x18e>
 800d16c:	68fb      	ldr	r3, [r7, #12]
 800d16e:	1e58      	subs	r0, r3, #1
 800d170:	687b      	ldr	r3, [r7, #4]
 800d172:	6859      	ldr	r1, [r3, #4]
 800d174:	460b      	mov	r3, r1
 800d176:	009b      	lsls	r3, r3, #2
 800d178:	440b      	add	r3, r1
 800d17a:	0099      	lsls	r1, r3, #2
 800d17c:	440b      	add	r3, r1
 800d17e:	fbb0 f3f3 	udiv	r3, r0, r3
 800d182:	3301      	adds	r3, #1
 800d184:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d188:	2b00      	cmp	r3, #0
 800d18a:	bf0c      	ite	eq
 800d18c:	2301      	moveq	r3, #1
 800d18e:	2300      	movne	r3, #0
 800d190:	b2db      	uxtb	r3, r3
 800d192:	2b00      	cmp	r3, #0
 800d194:	d001      	beq.n	800d19a <HAL_I2C_Init+0x196>
 800d196:	2301      	movs	r3, #1
 800d198:	e022      	b.n	800d1e0 <HAL_I2C_Init+0x1dc>
 800d19a:	687b      	ldr	r3, [r7, #4]
 800d19c:	689b      	ldr	r3, [r3, #8]
 800d19e:	2b00      	cmp	r3, #0
 800d1a0:	d10e      	bne.n	800d1c0 <HAL_I2C_Init+0x1bc>
 800d1a2:	68fb      	ldr	r3, [r7, #12]
 800d1a4:	1e58      	subs	r0, r3, #1
 800d1a6:	687b      	ldr	r3, [r7, #4]
 800d1a8:	6859      	ldr	r1, [r3, #4]
 800d1aa:	460b      	mov	r3, r1
 800d1ac:	005b      	lsls	r3, r3, #1
 800d1ae:	440b      	add	r3, r1
 800d1b0:	fbb0 f3f3 	udiv	r3, r0, r3
 800d1b4:	3301      	adds	r3, #1
 800d1b6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d1ba:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800d1be:	e00f      	b.n	800d1e0 <HAL_I2C_Init+0x1dc>
 800d1c0:	68fb      	ldr	r3, [r7, #12]
 800d1c2:	1e58      	subs	r0, r3, #1
 800d1c4:	687b      	ldr	r3, [r7, #4]
 800d1c6:	6859      	ldr	r1, [r3, #4]
 800d1c8:	460b      	mov	r3, r1
 800d1ca:	009b      	lsls	r3, r3, #2
 800d1cc:	440b      	add	r3, r1
 800d1ce:	0099      	lsls	r1, r3, #2
 800d1d0:	440b      	add	r3, r1
 800d1d2:	fbb0 f3f3 	udiv	r3, r0, r3
 800d1d6:	3301      	adds	r3, #1
 800d1d8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d1dc:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800d1e0:	6879      	ldr	r1, [r7, #4]
 800d1e2:	6809      	ldr	r1, [r1, #0]
 800d1e4:	4313      	orrs	r3, r2
 800d1e6:	61cb      	str	r3, [r1, #28]
 800d1e8:	687b      	ldr	r3, [r7, #4]
 800d1ea:	681b      	ldr	r3, [r3, #0]
 800d1ec:	681b      	ldr	r3, [r3, #0]
 800d1ee:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800d1f2:	687b      	ldr	r3, [r7, #4]
 800d1f4:	69da      	ldr	r2, [r3, #28]
 800d1f6:	687b      	ldr	r3, [r7, #4]
 800d1f8:	6a1b      	ldr	r3, [r3, #32]
 800d1fa:	431a      	orrs	r2, r3
 800d1fc:	687b      	ldr	r3, [r7, #4]
 800d1fe:	681b      	ldr	r3, [r3, #0]
 800d200:	430a      	orrs	r2, r1
 800d202:	601a      	str	r2, [r3, #0]
 800d204:	687b      	ldr	r3, [r7, #4]
 800d206:	681b      	ldr	r3, [r3, #0]
 800d208:	689b      	ldr	r3, [r3, #8]
 800d20a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800d20e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800d212:	687a      	ldr	r2, [r7, #4]
 800d214:	6911      	ldr	r1, [r2, #16]
 800d216:	687a      	ldr	r2, [r7, #4]
 800d218:	68d2      	ldr	r2, [r2, #12]
 800d21a:	4311      	orrs	r1, r2
 800d21c:	687a      	ldr	r2, [r7, #4]
 800d21e:	6812      	ldr	r2, [r2, #0]
 800d220:	430b      	orrs	r3, r1
 800d222:	6093      	str	r3, [r2, #8]
 800d224:	687b      	ldr	r3, [r7, #4]
 800d226:	681b      	ldr	r3, [r3, #0]
 800d228:	68db      	ldr	r3, [r3, #12]
 800d22a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800d22e:	687b      	ldr	r3, [r7, #4]
 800d230:	695a      	ldr	r2, [r3, #20]
 800d232:	687b      	ldr	r3, [r7, #4]
 800d234:	699b      	ldr	r3, [r3, #24]
 800d236:	431a      	orrs	r2, r3
 800d238:	687b      	ldr	r3, [r7, #4]
 800d23a:	681b      	ldr	r3, [r3, #0]
 800d23c:	430a      	orrs	r2, r1
 800d23e:	60da      	str	r2, [r3, #12]
 800d240:	687b      	ldr	r3, [r7, #4]
 800d242:	681b      	ldr	r3, [r3, #0]
 800d244:	681a      	ldr	r2, [r3, #0]
 800d246:	687b      	ldr	r3, [r7, #4]
 800d248:	681b      	ldr	r3, [r3, #0]
 800d24a:	f042 0201 	orr.w	r2, r2, #1
 800d24e:	601a      	str	r2, [r3, #0]
 800d250:	687b      	ldr	r3, [r7, #4]
 800d252:	2200      	movs	r2, #0
 800d254:	641a      	str	r2, [r3, #64]	@ 0x40
 800d256:	687b      	ldr	r3, [r7, #4]
 800d258:	2220      	movs	r2, #32
 800d25a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d25e:	687b      	ldr	r3, [r7, #4]
 800d260:	2200      	movs	r2, #0
 800d262:	631a      	str	r2, [r3, #48]	@ 0x30
 800d264:	687b      	ldr	r3, [r7, #4]
 800d266:	2200      	movs	r2, #0
 800d268:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d26c:	2300      	movs	r3, #0
 800d26e:	4618      	mov	r0, r3
 800d270:	3710      	adds	r7, #16
 800d272:	46bd      	mov	sp, r7
 800d274:	bd80      	pop	{r7, pc}
 800d276:	bf00      	nop
 800d278:	000186a0 	.word	0x000186a0
 800d27c:	001e847f 	.word	0x001e847f
 800d280:	003d08ff 	.word	0x003d08ff
 800d284:	431bde83 	.word	0x431bde83
 800d288:	10624dd3 	.word	0x10624dd3

0800d28c <HAL_I2C_Mem_Write>:
 800d28c:	b580      	push	{r7, lr}
 800d28e:	b088      	sub	sp, #32
 800d290:	af02      	add	r7, sp, #8
 800d292:	60f8      	str	r0, [r7, #12]
 800d294:	4608      	mov	r0, r1
 800d296:	4611      	mov	r1, r2
 800d298:	461a      	mov	r2, r3
 800d29a:	4603      	mov	r3, r0
 800d29c:	817b      	strh	r3, [r7, #10]
 800d29e:	460b      	mov	r3, r1
 800d2a0:	813b      	strh	r3, [r7, #8]
 800d2a2:	4613      	mov	r3, r2
 800d2a4:	80fb      	strh	r3, [r7, #6]
 800d2a6:	f7fd feab 	bl	800b000 <HAL_GetTick>
 800d2aa:	6178      	str	r0, [r7, #20]
 800d2ac:	68fb      	ldr	r3, [r7, #12]
 800d2ae:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d2b2:	b2db      	uxtb	r3, r3
 800d2b4:	2b20      	cmp	r3, #32
 800d2b6:	f040 80d9 	bne.w	800d46c <HAL_I2C_Mem_Write+0x1e0>
 800d2ba:	697b      	ldr	r3, [r7, #20]
 800d2bc:	9300      	str	r3, [sp, #0]
 800d2be:	2319      	movs	r3, #25
 800d2c0:	2201      	movs	r2, #1
 800d2c2:	496d      	ldr	r1, [pc, #436]	@ (800d478 <HAL_I2C_Mem_Write+0x1ec>)
 800d2c4:	68f8      	ldr	r0, [r7, #12]
 800d2c6:	f001 fa4b 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800d2ca:	4603      	mov	r3, r0
 800d2cc:	2b00      	cmp	r3, #0
 800d2ce:	d001      	beq.n	800d2d4 <HAL_I2C_Mem_Write+0x48>
 800d2d0:	2302      	movs	r3, #2
 800d2d2:	e0cc      	b.n	800d46e <HAL_I2C_Mem_Write+0x1e2>
 800d2d4:	68fb      	ldr	r3, [r7, #12]
 800d2d6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d2da:	2b01      	cmp	r3, #1
 800d2dc:	d101      	bne.n	800d2e2 <HAL_I2C_Mem_Write+0x56>
 800d2de:	2302      	movs	r3, #2
 800d2e0:	e0c5      	b.n	800d46e <HAL_I2C_Mem_Write+0x1e2>
 800d2e2:	68fb      	ldr	r3, [r7, #12]
 800d2e4:	2201      	movs	r2, #1
 800d2e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d2ea:	68fb      	ldr	r3, [r7, #12]
 800d2ec:	681b      	ldr	r3, [r3, #0]
 800d2ee:	681b      	ldr	r3, [r3, #0]
 800d2f0:	f003 0301 	and.w	r3, r3, #1
 800d2f4:	2b01      	cmp	r3, #1
 800d2f6:	d007      	beq.n	800d308 <HAL_I2C_Mem_Write+0x7c>
 800d2f8:	68fb      	ldr	r3, [r7, #12]
 800d2fa:	681b      	ldr	r3, [r3, #0]
 800d2fc:	681a      	ldr	r2, [r3, #0]
 800d2fe:	68fb      	ldr	r3, [r7, #12]
 800d300:	681b      	ldr	r3, [r3, #0]
 800d302:	f042 0201 	orr.w	r2, r2, #1
 800d306:	601a      	str	r2, [r3, #0]
 800d308:	68fb      	ldr	r3, [r7, #12]
 800d30a:	681b      	ldr	r3, [r3, #0]
 800d30c:	681a      	ldr	r2, [r3, #0]
 800d30e:	68fb      	ldr	r3, [r7, #12]
 800d310:	681b      	ldr	r3, [r3, #0]
 800d312:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d316:	601a      	str	r2, [r3, #0]
 800d318:	68fb      	ldr	r3, [r7, #12]
 800d31a:	2221      	movs	r2, #33	@ 0x21
 800d31c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d320:	68fb      	ldr	r3, [r7, #12]
 800d322:	2240      	movs	r2, #64	@ 0x40
 800d324:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d328:	68fb      	ldr	r3, [r7, #12]
 800d32a:	2200      	movs	r2, #0
 800d32c:	641a      	str	r2, [r3, #64]	@ 0x40
 800d32e:	68fb      	ldr	r3, [r7, #12]
 800d330:	6a3a      	ldr	r2, [r7, #32]
 800d332:	625a      	str	r2, [r3, #36]	@ 0x24
 800d334:	68fb      	ldr	r3, [r7, #12]
 800d336:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800d338:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d33a:	68fb      	ldr	r3, [r7, #12]
 800d33c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d33e:	b29a      	uxth	r2, r3
 800d340:	68fb      	ldr	r3, [r7, #12]
 800d342:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d344:	68fb      	ldr	r3, [r7, #12]
 800d346:	4a4d      	ldr	r2, [pc, #308]	@ (800d47c <HAL_I2C_Mem_Write+0x1f0>)
 800d348:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d34a:	88f8      	ldrh	r0, [r7, #6]
 800d34c:	893a      	ldrh	r2, [r7, #8]
 800d34e:	8979      	ldrh	r1, [r7, #10]
 800d350:	697b      	ldr	r3, [r7, #20]
 800d352:	9301      	str	r3, [sp, #4]
 800d354:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d356:	9300      	str	r3, [sp, #0]
 800d358:	4603      	mov	r3, r0
 800d35a:	68f8      	ldr	r0, [r7, #12]
 800d35c:	f000 fec8 	bl	800e0f0 <I2C_RequestMemoryWrite>
 800d360:	4603      	mov	r3, r0
 800d362:	2b00      	cmp	r3, #0
 800d364:	d052      	beq.n	800d40c <HAL_I2C_Mem_Write+0x180>
 800d366:	2301      	movs	r3, #1
 800d368:	e081      	b.n	800d46e <HAL_I2C_Mem_Write+0x1e2>
 800d36a:	697a      	ldr	r2, [r7, #20]
 800d36c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800d36e:	68f8      	ldr	r0, [r7, #12]
 800d370:	f001 facc 	bl	800e90c <I2C_WaitOnTXEFlagUntilTimeout>
 800d374:	4603      	mov	r3, r0
 800d376:	2b00      	cmp	r3, #0
 800d378:	d00d      	beq.n	800d396 <HAL_I2C_Mem_Write+0x10a>
 800d37a:	68fb      	ldr	r3, [r7, #12]
 800d37c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d37e:	2b04      	cmp	r3, #4
 800d380:	d107      	bne.n	800d392 <HAL_I2C_Mem_Write+0x106>
 800d382:	68fb      	ldr	r3, [r7, #12]
 800d384:	681b      	ldr	r3, [r3, #0]
 800d386:	681a      	ldr	r2, [r3, #0]
 800d388:	68fb      	ldr	r3, [r7, #12]
 800d38a:	681b      	ldr	r3, [r3, #0]
 800d38c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d390:	601a      	str	r2, [r3, #0]
 800d392:	2301      	movs	r3, #1
 800d394:	e06b      	b.n	800d46e <HAL_I2C_Mem_Write+0x1e2>
 800d396:	68fb      	ldr	r3, [r7, #12]
 800d398:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d39a:	781a      	ldrb	r2, [r3, #0]
 800d39c:	68fb      	ldr	r3, [r7, #12]
 800d39e:	681b      	ldr	r3, [r3, #0]
 800d3a0:	611a      	str	r2, [r3, #16]
 800d3a2:	68fb      	ldr	r3, [r7, #12]
 800d3a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d3a6:	1c5a      	adds	r2, r3, #1
 800d3a8:	68fb      	ldr	r3, [r7, #12]
 800d3aa:	625a      	str	r2, [r3, #36]	@ 0x24
 800d3ac:	68fb      	ldr	r3, [r7, #12]
 800d3ae:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d3b0:	3b01      	subs	r3, #1
 800d3b2:	b29a      	uxth	r2, r3
 800d3b4:	68fb      	ldr	r3, [r7, #12]
 800d3b6:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d3b8:	68fb      	ldr	r3, [r7, #12]
 800d3ba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d3bc:	b29b      	uxth	r3, r3
 800d3be:	3b01      	subs	r3, #1
 800d3c0:	b29a      	uxth	r2, r3
 800d3c2:	68fb      	ldr	r3, [r7, #12]
 800d3c4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d3c6:	68fb      	ldr	r3, [r7, #12]
 800d3c8:	681b      	ldr	r3, [r3, #0]
 800d3ca:	695b      	ldr	r3, [r3, #20]
 800d3cc:	f003 0304 	and.w	r3, r3, #4
 800d3d0:	2b04      	cmp	r3, #4
 800d3d2:	d11b      	bne.n	800d40c <HAL_I2C_Mem_Write+0x180>
 800d3d4:	68fb      	ldr	r3, [r7, #12]
 800d3d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d3d8:	2b00      	cmp	r3, #0
 800d3da:	d017      	beq.n	800d40c <HAL_I2C_Mem_Write+0x180>
 800d3dc:	68fb      	ldr	r3, [r7, #12]
 800d3de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d3e0:	781a      	ldrb	r2, [r3, #0]
 800d3e2:	68fb      	ldr	r3, [r7, #12]
 800d3e4:	681b      	ldr	r3, [r3, #0]
 800d3e6:	611a      	str	r2, [r3, #16]
 800d3e8:	68fb      	ldr	r3, [r7, #12]
 800d3ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d3ec:	1c5a      	adds	r2, r3, #1
 800d3ee:	68fb      	ldr	r3, [r7, #12]
 800d3f0:	625a      	str	r2, [r3, #36]	@ 0x24
 800d3f2:	68fb      	ldr	r3, [r7, #12]
 800d3f4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d3f6:	3b01      	subs	r3, #1
 800d3f8:	b29a      	uxth	r2, r3
 800d3fa:	68fb      	ldr	r3, [r7, #12]
 800d3fc:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d3fe:	68fb      	ldr	r3, [r7, #12]
 800d400:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d402:	b29b      	uxth	r3, r3
 800d404:	3b01      	subs	r3, #1
 800d406:	b29a      	uxth	r2, r3
 800d408:	68fb      	ldr	r3, [r7, #12]
 800d40a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d40c:	68fb      	ldr	r3, [r7, #12]
 800d40e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d410:	2b00      	cmp	r3, #0
 800d412:	d1aa      	bne.n	800d36a <HAL_I2C_Mem_Write+0xde>
 800d414:	697a      	ldr	r2, [r7, #20]
 800d416:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800d418:	68f8      	ldr	r0, [r7, #12]
 800d41a:	f001 fab8 	bl	800e98e <I2C_WaitOnBTFFlagUntilTimeout>
 800d41e:	4603      	mov	r3, r0
 800d420:	2b00      	cmp	r3, #0
 800d422:	d00d      	beq.n	800d440 <HAL_I2C_Mem_Write+0x1b4>
 800d424:	68fb      	ldr	r3, [r7, #12]
 800d426:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d428:	2b04      	cmp	r3, #4
 800d42a:	d107      	bne.n	800d43c <HAL_I2C_Mem_Write+0x1b0>
 800d42c:	68fb      	ldr	r3, [r7, #12]
 800d42e:	681b      	ldr	r3, [r3, #0]
 800d430:	681a      	ldr	r2, [r3, #0]
 800d432:	68fb      	ldr	r3, [r7, #12]
 800d434:	681b      	ldr	r3, [r3, #0]
 800d436:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d43a:	601a      	str	r2, [r3, #0]
 800d43c:	2301      	movs	r3, #1
 800d43e:	e016      	b.n	800d46e <HAL_I2C_Mem_Write+0x1e2>
 800d440:	68fb      	ldr	r3, [r7, #12]
 800d442:	681b      	ldr	r3, [r3, #0]
 800d444:	681a      	ldr	r2, [r3, #0]
 800d446:	68fb      	ldr	r3, [r7, #12]
 800d448:	681b      	ldr	r3, [r3, #0]
 800d44a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d44e:	601a      	str	r2, [r3, #0]
 800d450:	68fb      	ldr	r3, [r7, #12]
 800d452:	2220      	movs	r2, #32
 800d454:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d458:	68fb      	ldr	r3, [r7, #12]
 800d45a:	2200      	movs	r2, #0
 800d45c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d460:	68fb      	ldr	r3, [r7, #12]
 800d462:	2200      	movs	r2, #0
 800d464:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d468:	2300      	movs	r3, #0
 800d46a:	e000      	b.n	800d46e <HAL_I2C_Mem_Write+0x1e2>
 800d46c:	2302      	movs	r3, #2
 800d46e:	4618      	mov	r0, r3
 800d470:	3718      	adds	r7, #24
 800d472:	46bd      	mov	sp, r7
 800d474:	bd80      	pop	{r7, pc}
 800d476:	bf00      	nop
 800d478:	00100002 	.word	0x00100002
 800d47c:	ffff0000 	.word	0xffff0000

0800d480 <HAL_I2C_Mem_Read>:
 800d480:	b580      	push	{r7, lr}
 800d482:	b08c      	sub	sp, #48	@ 0x30
 800d484:	af02      	add	r7, sp, #8
 800d486:	60f8      	str	r0, [r7, #12]
 800d488:	4608      	mov	r0, r1
 800d48a:	4611      	mov	r1, r2
 800d48c:	461a      	mov	r2, r3
 800d48e:	4603      	mov	r3, r0
 800d490:	817b      	strh	r3, [r7, #10]
 800d492:	460b      	mov	r3, r1
 800d494:	813b      	strh	r3, [r7, #8]
 800d496:	4613      	mov	r3, r2
 800d498:	80fb      	strh	r3, [r7, #6]
 800d49a:	f7fd fdb1 	bl	800b000 <HAL_GetTick>
 800d49e:	6278      	str	r0, [r7, #36]	@ 0x24
 800d4a0:	68fb      	ldr	r3, [r7, #12]
 800d4a2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d4a6:	b2db      	uxtb	r3, r3
 800d4a8:	2b20      	cmp	r3, #32
 800d4aa:	f040 8208 	bne.w	800d8be <HAL_I2C_Mem_Read+0x43e>
 800d4ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d4b0:	9300      	str	r3, [sp, #0]
 800d4b2:	2319      	movs	r3, #25
 800d4b4:	2201      	movs	r2, #1
 800d4b6:	497b      	ldr	r1, [pc, #492]	@ (800d6a4 <HAL_I2C_Mem_Read+0x224>)
 800d4b8:	68f8      	ldr	r0, [r7, #12]
 800d4ba:	f001 f951 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800d4be:	4603      	mov	r3, r0
 800d4c0:	2b00      	cmp	r3, #0
 800d4c2:	d001      	beq.n	800d4c8 <HAL_I2C_Mem_Read+0x48>
 800d4c4:	2302      	movs	r3, #2
 800d4c6:	e1fb      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d4c8:	68fb      	ldr	r3, [r7, #12]
 800d4ca:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d4ce:	2b01      	cmp	r3, #1
 800d4d0:	d101      	bne.n	800d4d6 <HAL_I2C_Mem_Read+0x56>
 800d4d2:	2302      	movs	r3, #2
 800d4d4:	e1f4      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d4d6:	68fb      	ldr	r3, [r7, #12]
 800d4d8:	2201      	movs	r2, #1
 800d4da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d4de:	68fb      	ldr	r3, [r7, #12]
 800d4e0:	681b      	ldr	r3, [r3, #0]
 800d4e2:	681b      	ldr	r3, [r3, #0]
 800d4e4:	f003 0301 	and.w	r3, r3, #1
 800d4e8:	2b01      	cmp	r3, #1
 800d4ea:	d007      	beq.n	800d4fc <HAL_I2C_Mem_Read+0x7c>
 800d4ec:	68fb      	ldr	r3, [r7, #12]
 800d4ee:	681b      	ldr	r3, [r3, #0]
 800d4f0:	681a      	ldr	r2, [r3, #0]
 800d4f2:	68fb      	ldr	r3, [r7, #12]
 800d4f4:	681b      	ldr	r3, [r3, #0]
 800d4f6:	f042 0201 	orr.w	r2, r2, #1
 800d4fa:	601a      	str	r2, [r3, #0]
 800d4fc:	68fb      	ldr	r3, [r7, #12]
 800d4fe:	681b      	ldr	r3, [r3, #0]
 800d500:	681a      	ldr	r2, [r3, #0]
 800d502:	68fb      	ldr	r3, [r7, #12]
 800d504:	681b      	ldr	r3, [r3, #0]
 800d506:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d50a:	601a      	str	r2, [r3, #0]
 800d50c:	68fb      	ldr	r3, [r7, #12]
 800d50e:	2222      	movs	r2, #34	@ 0x22
 800d510:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d514:	68fb      	ldr	r3, [r7, #12]
 800d516:	2240      	movs	r2, #64	@ 0x40
 800d518:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d51c:	68fb      	ldr	r3, [r7, #12]
 800d51e:	2200      	movs	r2, #0
 800d520:	641a      	str	r2, [r3, #64]	@ 0x40
 800d522:	68fb      	ldr	r3, [r7, #12]
 800d524:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800d526:	625a      	str	r2, [r3, #36]	@ 0x24
 800d528:	68fb      	ldr	r3, [r7, #12]
 800d52a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800d52c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d52e:	68fb      	ldr	r3, [r7, #12]
 800d530:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d532:	b29a      	uxth	r2, r3
 800d534:	68fb      	ldr	r3, [r7, #12]
 800d536:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d538:	68fb      	ldr	r3, [r7, #12]
 800d53a:	4a5b      	ldr	r2, [pc, #364]	@ (800d6a8 <HAL_I2C_Mem_Read+0x228>)
 800d53c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d53e:	88f8      	ldrh	r0, [r7, #6]
 800d540:	893a      	ldrh	r2, [r7, #8]
 800d542:	8979      	ldrh	r1, [r7, #10]
 800d544:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d546:	9301      	str	r3, [sp, #4]
 800d548:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d54a:	9300      	str	r3, [sp, #0]
 800d54c:	4603      	mov	r3, r0
 800d54e:	68f8      	ldr	r0, [r7, #12]
 800d550:	f000 fe64 	bl	800e21c <I2C_RequestMemoryRead>
 800d554:	4603      	mov	r3, r0
 800d556:	2b00      	cmp	r3, #0
 800d558:	d001      	beq.n	800d55e <HAL_I2C_Mem_Read+0xde>
 800d55a:	2301      	movs	r3, #1
 800d55c:	e1b0      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d55e:	68fb      	ldr	r3, [r7, #12]
 800d560:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d562:	2b00      	cmp	r3, #0
 800d564:	d113      	bne.n	800d58e <HAL_I2C_Mem_Read+0x10e>
 800d566:	2300      	movs	r3, #0
 800d568:	623b      	str	r3, [r7, #32]
 800d56a:	68fb      	ldr	r3, [r7, #12]
 800d56c:	681b      	ldr	r3, [r3, #0]
 800d56e:	695b      	ldr	r3, [r3, #20]
 800d570:	623b      	str	r3, [r7, #32]
 800d572:	68fb      	ldr	r3, [r7, #12]
 800d574:	681b      	ldr	r3, [r3, #0]
 800d576:	699b      	ldr	r3, [r3, #24]
 800d578:	623b      	str	r3, [r7, #32]
 800d57a:	6a3b      	ldr	r3, [r7, #32]
 800d57c:	68fb      	ldr	r3, [r7, #12]
 800d57e:	681b      	ldr	r3, [r3, #0]
 800d580:	681a      	ldr	r2, [r3, #0]
 800d582:	68fb      	ldr	r3, [r7, #12]
 800d584:	681b      	ldr	r3, [r3, #0]
 800d586:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d58a:	601a      	str	r2, [r3, #0]
 800d58c:	e184      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d58e:	68fb      	ldr	r3, [r7, #12]
 800d590:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d592:	2b01      	cmp	r3, #1
 800d594:	d11b      	bne.n	800d5ce <HAL_I2C_Mem_Read+0x14e>
 800d596:	68fb      	ldr	r3, [r7, #12]
 800d598:	681b      	ldr	r3, [r3, #0]
 800d59a:	681a      	ldr	r2, [r3, #0]
 800d59c:	68fb      	ldr	r3, [r7, #12]
 800d59e:	681b      	ldr	r3, [r3, #0]
 800d5a0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d5a4:	601a      	str	r2, [r3, #0]
 800d5a6:	2300      	movs	r3, #0
 800d5a8:	61fb      	str	r3, [r7, #28]
 800d5aa:	68fb      	ldr	r3, [r7, #12]
 800d5ac:	681b      	ldr	r3, [r3, #0]
 800d5ae:	695b      	ldr	r3, [r3, #20]
 800d5b0:	61fb      	str	r3, [r7, #28]
 800d5b2:	68fb      	ldr	r3, [r7, #12]
 800d5b4:	681b      	ldr	r3, [r3, #0]
 800d5b6:	699b      	ldr	r3, [r3, #24]
 800d5b8:	61fb      	str	r3, [r7, #28]
 800d5ba:	69fb      	ldr	r3, [r7, #28]
 800d5bc:	68fb      	ldr	r3, [r7, #12]
 800d5be:	681b      	ldr	r3, [r3, #0]
 800d5c0:	681a      	ldr	r2, [r3, #0]
 800d5c2:	68fb      	ldr	r3, [r7, #12]
 800d5c4:	681b      	ldr	r3, [r3, #0]
 800d5c6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d5ca:	601a      	str	r2, [r3, #0]
 800d5cc:	e164      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d5ce:	68fb      	ldr	r3, [r7, #12]
 800d5d0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d5d2:	2b02      	cmp	r3, #2
 800d5d4:	d11b      	bne.n	800d60e <HAL_I2C_Mem_Read+0x18e>
 800d5d6:	68fb      	ldr	r3, [r7, #12]
 800d5d8:	681b      	ldr	r3, [r3, #0]
 800d5da:	681a      	ldr	r2, [r3, #0]
 800d5dc:	68fb      	ldr	r3, [r7, #12]
 800d5de:	681b      	ldr	r3, [r3, #0]
 800d5e0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d5e4:	601a      	str	r2, [r3, #0]
 800d5e6:	68fb      	ldr	r3, [r7, #12]
 800d5e8:	681b      	ldr	r3, [r3, #0]
 800d5ea:	681a      	ldr	r2, [r3, #0]
 800d5ec:	68fb      	ldr	r3, [r7, #12]
 800d5ee:	681b      	ldr	r3, [r3, #0]
 800d5f0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800d5f4:	601a      	str	r2, [r3, #0]
 800d5f6:	2300      	movs	r3, #0
 800d5f8:	61bb      	str	r3, [r7, #24]
 800d5fa:	68fb      	ldr	r3, [r7, #12]
 800d5fc:	681b      	ldr	r3, [r3, #0]
 800d5fe:	695b      	ldr	r3, [r3, #20]
 800d600:	61bb      	str	r3, [r7, #24]
 800d602:	68fb      	ldr	r3, [r7, #12]
 800d604:	681b      	ldr	r3, [r3, #0]
 800d606:	699b      	ldr	r3, [r3, #24]
 800d608:	61bb      	str	r3, [r7, #24]
 800d60a:	69bb      	ldr	r3, [r7, #24]
 800d60c:	e144      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d60e:	2300      	movs	r3, #0
 800d610:	617b      	str	r3, [r7, #20]
 800d612:	68fb      	ldr	r3, [r7, #12]
 800d614:	681b      	ldr	r3, [r3, #0]
 800d616:	695b      	ldr	r3, [r3, #20]
 800d618:	617b      	str	r3, [r7, #20]
 800d61a:	68fb      	ldr	r3, [r7, #12]
 800d61c:	681b      	ldr	r3, [r3, #0]
 800d61e:	699b      	ldr	r3, [r3, #24]
 800d620:	617b      	str	r3, [r7, #20]
 800d622:	697b      	ldr	r3, [r7, #20]
 800d624:	e138      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d626:	68fb      	ldr	r3, [r7, #12]
 800d628:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d62a:	2b03      	cmp	r3, #3
 800d62c:	f200 80f1 	bhi.w	800d812 <HAL_I2C_Mem_Read+0x392>
 800d630:	68fb      	ldr	r3, [r7, #12]
 800d632:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d634:	2b01      	cmp	r3, #1
 800d636:	d123      	bne.n	800d680 <HAL_I2C_Mem_Read+0x200>
 800d638:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d63a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d63c:	68f8      	ldr	r0, [r7, #12]
 800d63e:	f001 f9e7 	bl	800ea10 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d642:	4603      	mov	r3, r0
 800d644:	2b00      	cmp	r3, #0
 800d646:	d001      	beq.n	800d64c <HAL_I2C_Mem_Read+0x1cc>
 800d648:	2301      	movs	r3, #1
 800d64a:	e139      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d64c:	68fb      	ldr	r3, [r7, #12]
 800d64e:	681b      	ldr	r3, [r3, #0]
 800d650:	691a      	ldr	r2, [r3, #16]
 800d652:	68fb      	ldr	r3, [r7, #12]
 800d654:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d656:	b2d2      	uxtb	r2, r2
 800d658:	701a      	strb	r2, [r3, #0]
 800d65a:	68fb      	ldr	r3, [r7, #12]
 800d65c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d65e:	1c5a      	adds	r2, r3, #1
 800d660:	68fb      	ldr	r3, [r7, #12]
 800d662:	625a      	str	r2, [r3, #36]	@ 0x24
 800d664:	68fb      	ldr	r3, [r7, #12]
 800d666:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d668:	3b01      	subs	r3, #1
 800d66a:	b29a      	uxth	r2, r3
 800d66c:	68fb      	ldr	r3, [r7, #12]
 800d66e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d670:	68fb      	ldr	r3, [r7, #12]
 800d672:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d674:	b29b      	uxth	r3, r3
 800d676:	3b01      	subs	r3, #1
 800d678:	b29a      	uxth	r2, r3
 800d67a:	68fb      	ldr	r3, [r7, #12]
 800d67c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d67e:	e10b      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d680:	68fb      	ldr	r3, [r7, #12]
 800d682:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d684:	2b02      	cmp	r3, #2
 800d686:	d14e      	bne.n	800d726 <HAL_I2C_Mem_Read+0x2a6>
 800d688:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d68a:	9300      	str	r3, [sp, #0]
 800d68c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d68e:	2200      	movs	r2, #0
 800d690:	4906      	ldr	r1, [pc, #24]	@ (800d6ac <HAL_I2C_Mem_Read+0x22c>)
 800d692:	68f8      	ldr	r0, [r7, #12]
 800d694:	f001 f864 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800d698:	4603      	mov	r3, r0
 800d69a:	2b00      	cmp	r3, #0
 800d69c:	d008      	beq.n	800d6b0 <HAL_I2C_Mem_Read+0x230>
 800d69e:	2301      	movs	r3, #1
 800d6a0:	e10e      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d6a2:	bf00      	nop
 800d6a4:	00100002 	.word	0x00100002
 800d6a8:	ffff0000 	.word	0xffff0000
 800d6ac:	00010004 	.word	0x00010004
 800d6b0:	68fb      	ldr	r3, [r7, #12]
 800d6b2:	681b      	ldr	r3, [r3, #0]
 800d6b4:	681a      	ldr	r2, [r3, #0]
 800d6b6:	68fb      	ldr	r3, [r7, #12]
 800d6b8:	681b      	ldr	r3, [r3, #0]
 800d6ba:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d6be:	601a      	str	r2, [r3, #0]
 800d6c0:	68fb      	ldr	r3, [r7, #12]
 800d6c2:	681b      	ldr	r3, [r3, #0]
 800d6c4:	691a      	ldr	r2, [r3, #16]
 800d6c6:	68fb      	ldr	r3, [r7, #12]
 800d6c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d6ca:	b2d2      	uxtb	r2, r2
 800d6cc:	701a      	strb	r2, [r3, #0]
 800d6ce:	68fb      	ldr	r3, [r7, #12]
 800d6d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d6d2:	1c5a      	adds	r2, r3, #1
 800d6d4:	68fb      	ldr	r3, [r7, #12]
 800d6d6:	625a      	str	r2, [r3, #36]	@ 0x24
 800d6d8:	68fb      	ldr	r3, [r7, #12]
 800d6da:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d6dc:	3b01      	subs	r3, #1
 800d6de:	b29a      	uxth	r2, r3
 800d6e0:	68fb      	ldr	r3, [r7, #12]
 800d6e2:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d6e4:	68fb      	ldr	r3, [r7, #12]
 800d6e6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d6e8:	b29b      	uxth	r3, r3
 800d6ea:	3b01      	subs	r3, #1
 800d6ec:	b29a      	uxth	r2, r3
 800d6ee:	68fb      	ldr	r3, [r7, #12]
 800d6f0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d6f2:	68fb      	ldr	r3, [r7, #12]
 800d6f4:	681b      	ldr	r3, [r3, #0]
 800d6f6:	691a      	ldr	r2, [r3, #16]
 800d6f8:	68fb      	ldr	r3, [r7, #12]
 800d6fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d6fc:	b2d2      	uxtb	r2, r2
 800d6fe:	701a      	strb	r2, [r3, #0]
 800d700:	68fb      	ldr	r3, [r7, #12]
 800d702:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d704:	1c5a      	adds	r2, r3, #1
 800d706:	68fb      	ldr	r3, [r7, #12]
 800d708:	625a      	str	r2, [r3, #36]	@ 0x24
 800d70a:	68fb      	ldr	r3, [r7, #12]
 800d70c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d70e:	3b01      	subs	r3, #1
 800d710:	b29a      	uxth	r2, r3
 800d712:	68fb      	ldr	r3, [r7, #12]
 800d714:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d716:	68fb      	ldr	r3, [r7, #12]
 800d718:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d71a:	b29b      	uxth	r3, r3
 800d71c:	3b01      	subs	r3, #1
 800d71e:	b29a      	uxth	r2, r3
 800d720:	68fb      	ldr	r3, [r7, #12]
 800d722:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d724:	e0b8      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d726:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d728:	9300      	str	r3, [sp, #0]
 800d72a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d72c:	2200      	movs	r2, #0
 800d72e:	4966      	ldr	r1, [pc, #408]	@ (800d8c8 <HAL_I2C_Mem_Read+0x448>)
 800d730:	68f8      	ldr	r0, [r7, #12]
 800d732:	f001 f815 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800d736:	4603      	mov	r3, r0
 800d738:	2b00      	cmp	r3, #0
 800d73a:	d001      	beq.n	800d740 <HAL_I2C_Mem_Read+0x2c0>
 800d73c:	2301      	movs	r3, #1
 800d73e:	e0bf      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d740:	68fb      	ldr	r3, [r7, #12]
 800d742:	681b      	ldr	r3, [r3, #0]
 800d744:	681a      	ldr	r2, [r3, #0]
 800d746:	68fb      	ldr	r3, [r7, #12]
 800d748:	681b      	ldr	r3, [r3, #0]
 800d74a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d74e:	601a      	str	r2, [r3, #0]
 800d750:	68fb      	ldr	r3, [r7, #12]
 800d752:	681b      	ldr	r3, [r3, #0]
 800d754:	691a      	ldr	r2, [r3, #16]
 800d756:	68fb      	ldr	r3, [r7, #12]
 800d758:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d75a:	b2d2      	uxtb	r2, r2
 800d75c:	701a      	strb	r2, [r3, #0]
 800d75e:	68fb      	ldr	r3, [r7, #12]
 800d760:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d762:	1c5a      	adds	r2, r3, #1
 800d764:	68fb      	ldr	r3, [r7, #12]
 800d766:	625a      	str	r2, [r3, #36]	@ 0x24
 800d768:	68fb      	ldr	r3, [r7, #12]
 800d76a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d76c:	3b01      	subs	r3, #1
 800d76e:	b29a      	uxth	r2, r3
 800d770:	68fb      	ldr	r3, [r7, #12]
 800d772:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d774:	68fb      	ldr	r3, [r7, #12]
 800d776:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d778:	b29b      	uxth	r3, r3
 800d77a:	3b01      	subs	r3, #1
 800d77c:	b29a      	uxth	r2, r3
 800d77e:	68fb      	ldr	r3, [r7, #12]
 800d780:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d782:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d784:	9300      	str	r3, [sp, #0]
 800d786:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d788:	2200      	movs	r2, #0
 800d78a:	494f      	ldr	r1, [pc, #316]	@ (800d8c8 <HAL_I2C_Mem_Read+0x448>)
 800d78c:	68f8      	ldr	r0, [r7, #12]
 800d78e:	f000 ffe7 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800d792:	4603      	mov	r3, r0
 800d794:	2b00      	cmp	r3, #0
 800d796:	d001      	beq.n	800d79c <HAL_I2C_Mem_Read+0x31c>
 800d798:	2301      	movs	r3, #1
 800d79a:	e091      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d79c:	68fb      	ldr	r3, [r7, #12]
 800d79e:	681b      	ldr	r3, [r3, #0]
 800d7a0:	681a      	ldr	r2, [r3, #0]
 800d7a2:	68fb      	ldr	r3, [r7, #12]
 800d7a4:	681b      	ldr	r3, [r3, #0]
 800d7a6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d7aa:	601a      	str	r2, [r3, #0]
 800d7ac:	68fb      	ldr	r3, [r7, #12]
 800d7ae:	681b      	ldr	r3, [r3, #0]
 800d7b0:	691a      	ldr	r2, [r3, #16]
 800d7b2:	68fb      	ldr	r3, [r7, #12]
 800d7b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7b6:	b2d2      	uxtb	r2, r2
 800d7b8:	701a      	strb	r2, [r3, #0]
 800d7ba:	68fb      	ldr	r3, [r7, #12]
 800d7bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7be:	1c5a      	adds	r2, r3, #1
 800d7c0:	68fb      	ldr	r3, [r7, #12]
 800d7c2:	625a      	str	r2, [r3, #36]	@ 0x24
 800d7c4:	68fb      	ldr	r3, [r7, #12]
 800d7c6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d7c8:	3b01      	subs	r3, #1
 800d7ca:	b29a      	uxth	r2, r3
 800d7cc:	68fb      	ldr	r3, [r7, #12]
 800d7ce:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d7d0:	68fb      	ldr	r3, [r7, #12]
 800d7d2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d7d4:	b29b      	uxth	r3, r3
 800d7d6:	3b01      	subs	r3, #1
 800d7d8:	b29a      	uxth	r2, r3
 800d7da:	68fb      	ldr	r3, [r7, #12]
 800d7dc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d7de:	68fb      	ldr	r3, [r7, #12]
 800d7e0:	681b      	ldr	r3, [r3, #0]
 800d7e2:	691a      	ldr	r2, [r3, #16]
 800d7e4:	68fb      	ldr	r3, [r7, #12]
 800d7e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7e8:	b2d2      	uxtb	r2, r2
 800d7ea:	701a      	strb	r2, [r3, #0]
 800d7ec:	68fb      	ldr	r3, [r7, #12]
 800d7ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7f0:	1c5a      	adds	r2, r3, #1
 800d7f2:	68fb      	ldr	r3, [r7, #12]
 800d7f4:	625a      	str	r2, [r3, #36]	@ 0x24
 800d7f6:	68fb      	ldr	r3, [r7, #12]
 800d7f8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d7fa:	3b01      	subs	r3, #1
 800d7fc:	b29a      	uxth	r2, r3
 800d7fe:	68fb      	ldr	r3, [r7, #12]
 800d800:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d802:	68fb      	ldr	r3, [r7, #12]
 800d804:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d806:	b29b      	uxth	r3, r3
 800d808:	3b01      	subs	r3, #1
 800d80a:	b29a      	uxth	r2, r3
 800d80c:	68fb      	ldr	r3, [r7, #12]
 800d80e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d810:	e042      	b.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d812:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d814:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d816:	68f8      	ldr	r0, [r7, #12]
 800d818:	f001 f8fa 	bl	800ea10 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d81c:	4603      	mov	r3, r0
 800d81e:	2b00      	cmp	r3, #0
 800d820:	d001      	beq.n	800d826 <HAL_I2C_Mem_Read+0x3a6>
 800d822:	2301      	movs	r3, #1
 800d824:	e04c      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d826:	68fb      	ldr	r3, [r7, #12]
 800d828:	681b      	ldr	r3, [r3, #0]
 800d82a:	691a      	ldr	r2, [r3, #16]
 800d82c:	68fb      	ldr	r3, [r7, #12]
 800d82e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d830:	b2d2      	uxtb	r2, r2
 800d832:	701a      	strb	r2, [r3, #0]
 800d834:	68fb      	ldr	r3, [r7, #12]
 800d836:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d838:	1c5a      	adds	r2, r3, #1
 800d83a:	68fb      	ldr	r3, [r7, #12]
 800d83c:	625a      	str	r2, [r3, #36]	@ 0x24
 800d83e:	68fb      	ldr	r3, [r7, #12]
 800d840:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d842:	3b01      	subs	r3, #1
 800d844:	b29a      	uxth	r2, r3
 800d846:	68fb      	ldr	r3, [r7, #12]
 800d848:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d84a:	68fb      	ldr	r3, [r7, #12]
 800d84c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d84e:	b29b      	uxth	r3, r3
 800d850:	3b01      	subs	r3, #1
 800d852:	b29a      	uxth	r2, r3
 800d854:	68fb      	ldr	r3, [r7, #12]
 800d856:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d858:	68fb      	ldr	r3, [r7, #12]
 800d85a:	681b      	ldr	r3, [r3, #0]
 800d85c:	695b      	ldr	r3, [r3, #20]
 800d85e:	f003 0304 	and.w	r3, r3, #4
 800d862:	2b04      	cmp	r3, #4
 800d864:	d118      	bne.n	800d898 <HAL_I2C_Mem_Read+0x418>
 800d866:	68fb      	ldr	r3, [r7, #12]
 800d868:	681b      	ldr	r3, [r3, #0]
 800d86a:	691a      	ldr	r2, [r3, #16]
 800d86c:	68fb      	ldr	r3, [r7, #12]
 800d86e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d870:	b2d2      	uxtb	r2, r2
 800d872:	701a      	strb	r2, [r3, #0]
 800d874:	68fb      	ldr	r3, [r7, #12]
 800d876:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d878:	1c5a      	adds	r2, r3, #1
 800d87a:	68fb      	ldr	r3, [r7, #12]
 800d87c:	625a      	str	r2, [r3, #36]	@ 0x24
 800d87e:	68fb      	ldr	r3, [r7, #12]
 800d880:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d882:	3b01      	subs	r3, #1
 800d884:	b29a      	uxth	r2, r3
 800d886:	68fb      	ldr	r3, [r7, #12]
 800d888:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d88a:	68fb      	ldr	r3, [r7, #12]
 800d88c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d88e:	b29b      	uxth	r3, r3
 800d890:	3b01      	subs	r3, #1
 800d892:	b29a      	uxth	r2, r3
 800d894:	68fb      	ldr	r3, [r7, #12]
 800d896:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d898:	68fb      	ldr	r3, [r7, #12]
 800d89a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d89c:	2b00      	cmp	r3, #0
 800d89e:	f47f aec2 	bne.w	800d626 <HAL_I2C_Mem_Read+0x1a6>
 800d8a2:	68fb      	ldr	r3, [r7, #12]
 800d8a4:	2220      	movs	r2, #32
 800d8a6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d8aa:	68fb      	ldr	r3, [r7, #12]
 800d8ac:	2200      	movs	r2, #0
 800d8ae:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d8b2:	68fb      	ldr	r3, [r7, #12]
 800d8b4:	2200      	movs	r2, #0
 800d8b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d8ba:	2300      	movs	r3, #0
 800d8bc:	e000      	b.n	800d8c0 <HAL_I2C_Mem_Read+0x440>
 800d8be:	2302      	movs	r3, #2
 800d8c0:	4618      	mov	r0, r3
 800d8c2:	3728      	adds	r7, #40	@ 0x28
 800d8c4:	46bd      	mov	sp, r7
 800d8c6:	bd80      	pop	{r7, pc}
 800d8c8:	00010004 	.word	0x00010004

0800d8cc <HAL_I2C_Mem_Read_DMA>:
 800d8cc:	b580      	push	{r7, lr}
 800d8ce:	b08c      	sub	sp, #48	@ 0x30
 800d8d0:	af02      	add	r7, sp, #8
 800d8d2:	60f8      	str	r0, [r7, #12]
 800d8d4:	4608      	mov	r0, r1
 800d8d6:	4611      	mov	r1, r2
 800d8d8:	461a      	mov	r2, r3
 800d8da:	4603      	mov	r3, r0
 800d8dc:	817b      	strh	r3, [r7, #10]
 800d8de:	460b      	mov	r3, r1
 800d8e0:	813b      	strh	r3, [r7, #8]
 800d8e2:	4613      	mov	r3, r2
 800d8e4:	80fb      	strh	r3, [r7, #6]
 800d8e6:	f7fd fb8b 	bl	800b000 <HAL_GetTick>
 800d8ea:	6278      	str	r0, [r7, #36]	@ 0x24
 800d8ec:	2300      	movs	r3, #0
 800d8ee:	61fb      	str	r3, [r7, #28]
 800d8f0:	68fb      	ldr	r3, [r7, #12]
 800d8f2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d8f6:	b2db      	uxtb	r3, r3
 800d8f8:	2b20      	cmp	r3, #32
 800d8fa:	f040 8176 	bne.w	800dbea <HAL_I2C_Mem_Read_DMA+0x31e>
 800d8fe:	4b95      	ldr	r3, [pc, #596]	@ (800db54 <HAL_I2C_Mem_Read_DMA+0x288>)
 800d900:	681b      	ldr	r3, [r3, #0]
 800d902:	08db      	lsrs	r3, r3, #3
 800d904:	4a94      	ldr	r2, [pc, #592]	@ (800db58 <HAL_I2C_Mem_Read_DMA+0x28c>)
 800d906:	fba2 2303 	umull	r2, r3, r2, r3
 800d90a:	0a1a      	lsrs	r2, r3, #8
 800d90c:	4613      	mov	r3, r2
 800d90e:	009b      	lsls	r3, r3, #2
 800d910:	4413      	add	r3, r2
 800d912:	009a      	lsls	r2, r3, #2
 800d914:	4413      	add	r3, r2
 800d916:	61fb      	str	r3, [r7, #28]
 800d918:	69fb      	ldr	r3, [r7, #28]
 800d91a:	3b01      	subs	r3, #1
 800d91c:	61fb      	str	r3, [r7, #28]
 800d91e:	69fb      	ldr	r3, [r7, #28]
 800d920:	2b00      	cmp	r3, #0
 800d922:	d116      	bne.n	800d952 <HAL_I2C_Mem_Read_DMA+0x86>
 800d924:	68fb      	ldr	r3, [r7, #12]
 800d926:	2200      	movs	r2, #0
 800d928:	631a      	str	r2, [r3, #48]	@ 0x30
 800d92a:	68fb      	ldr	r3, [r7, #12]
 800d92c:	2220      	movs	r2, #32
 800d92e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d932:	68fb      	ldr	r3, [r7, #12]
 800d934:	2200      	movs	r2, #0
 800d936:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d93a:	68fb      	ldr	r3, [r7, #12]
 800d93c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d93e:	f043 0220 	orr.w	r2, r3, #32
 800d942:	68fb      	ldr	r3, [r7, #12]
 800d944:	641a      	str	r2, [r3, #64]	@ 0x40
 800d946:	68fb      	ldr	r3, [r7, #12]
 800d948:	2200      	movs	r2, #0
 800d94a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d94e:	2301      	movs	r3, #1
 800d950:	e14c      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800d952:	68fb      	ldr	r3, [r7, #12]
 800d954:	681b      	ldr	r3, [r3, #0]
 800d956:	699b      	ldr	r3, [r3, #24]
 800d958:	f003 0302 	and.w	r3, r3, #2
 800d95c:	2b02      	cmp	r3, #2
 800d95e:	d0db      	beq.n	800d918 <HAL_I2C_Mem_Read_DMA+0x4c>
 800d960:	68fb      	ldr	r3, [r7, #12]
 800d962:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d966:	2b01      	cmp	r3, #1
 800d968:	d101      	bne.n	800d96e <HAL_I2C_Mem_Read_DMA+0xa2>
 800d96a:	2302      	movs	r3, #2
 800d96c:	e13e      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800d96e:	68fb      	ldr	r3, [r7, #12]
 800d970:	2201      	movs	r2, #1
 800d972:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d976:	68fb      	ldr	r3, [r7, #12]
 800d978:	681b      	ldr	r3, [r3, #0]
 800d97a:	681b      	ldr	r3, [r3, #0]
 800d97c:	f003 0301 	and.w	r3, r3, #1
 800d980:	2b01      	cmp	r3, #1
 800d982:	d007      	beq.n	800d994 <HAL_I2C_Mem_Read_DMA+0xc8>
 800d984:	68fb      	ldr	r3, [r7, #12]
 800d986:	681b      	ldr	r3, [r3, #0]
 800d988:	681a      	ldr	r2, [r3, #0]
 800d98a:	68fb      	ldr	r3, [r7, #12]
 800d98c:	681b      	ldr	r3, [r3, #0]
 800d98e:	f042 0201 	orr.w	r2, r2, #1
 800d992:	601a      	str	r2, [r3, #0]
 800d994:	68fb      	ldr	r3, [r7, #12]
 800d996:	681b      	ldr	r3, [r3, #0]
 800d998:	681a      	ldr	r2, [r3, #0]
 800d99a:	68fb      	ldr	r3, [r7, #12]
 800d99c:	681b      	ldr	r3, [r3, #0]
 800d99e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d9a2:	601a      	str	r2, [r3, #0]
 800d9a4:	68fb      	ldr	r3, [r7, #12]
 800d9a6:	2222      	movs	r2, #34	@ 0x22
 800d9a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d9ac:	68fb      	ldr	r3, [r7, #12]
 800d9ae:	2240      	movs	r2, #64	@ 0x40
 800d9b0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d9b4:	68fb      	ldr	r3, [r7, #12]
 800d9b6:	2200      	movs	r2, #0
 800d9b8:	641a      	str	r2, [r3, #64]	@ 0x40
 800d9ba:	68fb      	ldr	r3, [r7, #12]
 800d9bc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800d9be:	625a      	str	r2, [r3, #36]	@ 0x24
 800d9c0:	68fb      	ldr	r3, [r7, #12]
 800d9c2:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800d9c4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d9c6:	68fb      	ldr	r3, [r7, #12]
 800d9c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d9ca:	b29a      	uxth	r2, r3
 800d9cc:	68fb      	ldr	r3, [r7, #12]
 800d9ce:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d9d0:	68fb      	ldr	r3, [r7, #12]
 800d9d2:	4a62      	ldr	r2, [pc, #392]	@ (800db5c <HAL_I2C_Mem_Read_DMA+0x290>)
 800d9d4:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d9d6:	897a      	ldrh	r2, [r7, #10]
 800d9d8:	68fb      	ldr	r3, [r7, #12]
 800d9da:	645a      	str	r2, [r3, #68]	@ 0x44
 800d9dc:	893a      	ldrh	r2, [r7, #8]
 800d9de:	68fb      	ldr	r3, [r7, #12]
 800d9e0:	649a      	str	r2, [r3, #72]	@ 0x48
 800d9e2:	88fa      	ldrh	r2, [r7, #6]
 800d9e4:	68fb      	ldr	r3, [r7, #12]
 800d9e6:	64da      	str	r2, [r3, #76]	@ 0x4c
 800d9e8:	68fb      	ldr	r3, [r7, #12]
 800d9ea:	2200      	movs	r2, #0
 800d9ec:	651a      	str	r2, [r3, #80]	@ 0x50
 800d9ee:	68fb      	ldr	r3, [r7, #12]
 800d9f0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d9f2:	2b00      	cmp	r3, #0
 800d9f4:	f000 80cc 	beq.w	800db90 <HAL_I2C_Mem_Read_DMA+0x2c4>
 800d9f8:	68fb      	ldr	r3, [r7, #12]
 800d9fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d9fc:	2b00      	cmp	r3, #0
 800d9fe:	d02d      	beq.n	800da5c <HAL_I2C_Mem_Read_DMA+0x190>
 800da00:	68fb      	ldr	r3, [r7, #12]
 800da02:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da04:	4a56      	ldr	r2, [pc, #344]	@ (800db60 <HAL_I2C_Mem_Read_DMA+0x294>)
 800da06:	63da      	str	r2, [r3, #60]	@ 0x3c
 800da08:	68fb      	ldr	r3, [r7, #12]
 800da0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da0c:	4a55      	ldr	r2, [pc, #340]	@ (800db64 <HAL_I2C_Mem_Read_DMA+0x298>)
 800da0e:	64da      	str	r2, [r3, #76]	@ 0x4c
 800da10:	68fb      	ldr	r3, [r7, #12]
 800da12:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da14:	2200      	movs	r2, #0
 800da16:	641a      	str	r2, [r3, #64]	@ 0x40
 800da18:	68fb      	ldr	r3, [r7, #12]
 800da1a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da1c:	2200      	movs	r2, #0
 800da1e:	645a      	str	r2, [r3, #68]	@ 0x44
 800da20:	68fb      	ldr	r3, [r7, #12]
 800da22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da24:	2200      	movs	r2, #0
 800da26:	649a      	str	r2, [r3, #72]	@ 0x48
 800da28:	68fb      	ldr	r3, [r7, #12]
 800da2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da2c:	2200      	movs	r2, #0
 800da2e:	651a      	str	r2, [r3, #80]	@ 0x50
 800da30:	68fb      	ldr	r3, [r7, #12]
 800da32:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800da34:	68fb      	ldr	r3, [r7, #12]
 800da36:	681b      	ldr	r3, [r3, #0]
 800da38:	3310      	adds	r3, #16
 800da3a:	4619      	mov	r1, r3
 800da3c:	68fb      	ldr	r3, [r7, #12]
 800da3e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800da40:	461a      	mov	r2, r3
 800da42:	68fb      	ldr	r3, [r7, #12]
 800da44:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800da46:	f7fe fdaf 	bl	800c5a8 <HAL_DMA_Start_IT>
 800da4a:	4603      	mov	r3, r0
 800da4c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800da50:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800da54:	2b00      	cmp	r3, #0
 800da56:	f040 8087 	bne.w	800db68 <HAL_I2C_Mem_Read_DMA+0x29c>
 800da5a:	e013      	b.n	800da84 <HAL_I2C_Mem_Read_DMA+0x1b8>
 800da5c:	68fb      	ldr	r3, [r7, #12]
 800da5e:	2220      	movs	r2, #32
 800da60:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800da64:	68fb      	ldr	r3, [r7, #12]
 800da66:	2200      	movs	r2, #0
 800da68:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800da6c:	68fb      	ldr	r3, [r7, #12]
 800da6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800da70:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800da74:	68fb      	ldr	r3, [r7, #12]
 800da76:	641a      	str	r2, [r3, #64]	@ 0x40
 800da78:	68fb      	ldr	r3, [r7, #12]
 800da7a:	2200      	movs	r2, #0
 800da7c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800da80:	2301      	movs	r3, #1
 800da82:	e0b3      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800da84:	88f8      	ldrh	r0, [r7, #6]
 800da86:	893a      	ldrh	r2, [r7, #8]
 800da88:	8979      	ldrh	r1, [r7, #10]
 800da8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800da8c:	9301      	str	r3, [sp, #4]
 800da8e:	2323      	movs	r3, #35	@ 0x23
 800da90:	9300      	str	r3, [sp, #0]
 800da92:	4603      	mov	r3, r0
 800da94:	68f8      	ldr	r0, [r7, #12]
 800da96:	f000 fbc1 	bl	800e21c <I2C_RequestMemoryRead>
 800da9a:	4603      	mov	r3, r0
 800da9c:	2b00      	cmp	r3, #0
 800da9e:	d023      	beq.n	800dae8 <HAL_I2C_Mem_Read_DMA+0x21c>
 800daa0:	68fb      	ldr	r3, [r7, #12]
 800daa2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800daa4:	4618      	mov	r0, r3
 800daa6:	f7fe fe47 	bl	800c738 <HAL_DMA_Abort_IT>
 800daaa:	4603      	mov	r3, r0
 800daac:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800dab0:	68fb      	ldr	r3, [r7, #12]
 800dab2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dab4:	2200      	movs	r2, #0
 800dab6:	63da      	str	r2, [r3, #60]	@ 0x3c
 800dab8:	68fb      	ldr	r3, [r7, #12]
 800daba:	681b      	ldr	r3, [r3, #0]
 800dabc:	681a      	ldr	r2, [r3, #0]
 800dabe:	68fb      	ldr	r3, [r7, #12]
 800dac0:	681b      	ldr	r3, [r3, #0]
 800dac2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800dac6:	601a      	str	r2, [r3, #0]
 800dac8:	68fb      	ldr	r3, [r7, #12]
 800daca:	2200      	movs	r2, #0
 800dacc:	851a      	strh	r2, [r3, #40]	@ 0x28
 800dace:	68fb      	ldr	r3, [r7, #12]
 800dad0:	2200      	movs	r2, #0
 800dad2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800dad4:	68fb      	ldr	r3, [r7, #12]
 800dad6:	681b      	ldr	r3, [r3, #0]
 800dad8:	681a      	ldr	r2, [r3, #0]
 800dada:	68fb      	ldr	r3, [r7, #12]
 800dadc:	681b      	ldr	r3, [r3, #0]
 800dade:	f022 0201 	bic.w	r2, r2, #1
 800dae2:	601a      	str	r2, [r3, #0]
 800dae4:	2301      	movs	r3, #1
 800dae6:	e081      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800dae8:	68fb      	ldr	r3, [r7, #12]
 800daea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800daec:	2b01      	cmp	r3, #1
 800daee:	d108      	bne.n	800db02 <HAL_I2C_Mem_Read_DMA+0x236>
 800daf0:	68fb      	ldr	r3, [r7, #12]
 800daf2:	681b      	ldr	r3, [r3, #0]
 800daf4:	681a      	ldr	r2, [r3, #0]
 800daf6:	68fb      	ldr	r3, [r7, #12]
 800daf8:	681b      	ldr	r3, [r3, #0]
 800dafa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800dafe:	601a      	str	r2, [r3, #0]
 800db00:	e007      	b.n	800db12 <HAL_I2C_Mem_Read_DMA+0x246>
 800db02:	68fb      	ldr	r3, [r7, #12]
 800db04:	681b      	ldr	r3, [r3, #0]
 800db06:	685a      	ldr	r2, [r3, #4]
 800db08:	68fb      	ldr	r3, [r7, #12]
 800db0a:	681b      	ldr	r3, [r3, #0]
 800db0c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800db10:	605a      	str	r2, [r3, #4]
 800db12:	2300      	movs	r3, #0
 800db14:	61bb      	str	r3, [r7, #24]
 800db16:	68fb      	ldr	r3, [r7, #12]
 800db18:	681b      	ldr	r3, [r3, #0]
 800db1a:	695b      	ldr	r3, [r3, #20]
 800db1c:	61bb      	str	r3, [r7, #24]
 800db1e:	68fb      	ldr	r3, [r7, #12]
 800db20:	681b      	ldr	r3, [r3, #0]
 800db22:	699b      	ldr	r3, [r3, #24]
 800db24:	61bb      	str	r3, [r7, #24]
 800db26:	69bb      	ldr	r3, [r7, #24]
 800db28:	68fb      	ldr	r3, [r7, #12]
 800db2a:	2200      	movs	r2, #0
 800db2c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800db30:	68fb      	ldr	r3, [r7, #12]
 800db32:	681b      	ldr	r3, [r3, #0]
 800db34:	685a      	ldr	r2, [r3, #4]
 800db36:	68fb      	ldr	r3, [r7, #12]
 800db38:	681b      	ldr	r3, [r3, #0]
 800db3a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800db3e:	605a      	str	r2, [r3, #4]
 800db40:	68fb      	ldr	r3, [r7, #12]
 800db42:	681b      	ldr	r3, [r3, #0]
 800db44:	685a      	ldr	r2, [r3, #4]
 800db46:	68fb      	ldr	r3, [r7, #12]
 800db48:	681b      	ldr	r3, [r3, #0]
 800db4a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800db4e:	605a      	str	r2, [r3, #4]
 800db50:	e049      	b.n	800dbe6 <HAL_I2C_Mem_Read_DMA+0x31a>
 800db52:	bf00      	nop
 800db54:	20000004 	.word	0x20000004
 800db58:	14f8b589 	.word	0x14f8b589
 800db5c:	ffff0000 	.word	0xffff0000
 800db60:	0800e3ed 	.word	0x0800e3ed
 800db64:	0800e597 	.word	0x0800e597
 800db68:	68fb      	ldr	r3, [r7, #12]
 800db6a:	2220      	movs	r2, #32
 800db6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800db70:	68fb      	ldr	r3, [r7, #12]
 800db72:	2200      	movs	r2, #0
 800db74:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800db78:	68fb      	ldr	r3, [r7, #12]
 800db7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800db7c:	f043 0210 	orr.w	r2, r3, #16
 800db80:	68fb      	ldr	r3, [r7, #12]
 800db82:	641a      	str	r2, [r3, #64]	@ 0x40
 800db84:	68fb      	ldr	r3, [r7, #12]
 800db86:	2200      	movs	r2, #0
 800db88:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800db8c:	2301      	movs	r3, #1
 800db8e:	e02d      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800db90:	88f8      	ldrh	r0, [r7, #6]
 800db92:	893a      	ldrh	r2, [r7, #8]
 800db94:	8979      	ldrh	r1, [r7, #10]
 800db96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800db98:	9301      	str	r3, [sp, #4]
 800db9a:	2323      	movs	r3, #35	@ 0x23
 800db9c:	9300      	str	r3, [sp, #0]
 800db9e:	4603      	mov	r3, r0
 800dba0:	68f8      	ldr	r0, [r7, #12]
 800dba2:	f000 fb3b 	bl	800e21c <I2C_RequestMemoryRead>
 800dba6:	4603      	mov	r3, r0
 800dba8:	2b00      	cmp	r3, #0
 800dbaa:	d001      	beq.n	800dbb0 <HAL_I2C_Mem_Read_DMA+0x2e4>
 800dbac:	2301      	movs	r3, #1
 800dbae:	e01d      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800dbb0:	2300      	movs	r3, #0
 800dbb2:	617b      	str	r3, [r7, #20]
 800dbb4:	68fb      	ldr	r3, [r7, #12]
 800dbb6:	681b      	ldr	r3, [r3, #0]
 800dbb8:	695b      	ldr	r3, [r3, #20]
 800dbba:	617b      	str	r3, [r7, #20]
 800dbbc:	68fb      	ldr	r3, [r7, #12]
 800dbbe:	681b      	ldr	r3, [r3, #0]
 800dbc0:	699b      	ldr	r3, [r3, #24]
 800dbc2:	617b      	str	r3, [r7, #20]
 800dbc4:	697b      	ldr	r3, [r7, #20]
 800dbc6:	68fb      	ldr	r3, [r7, #12]
 800dbc8:	681b      	ldr	r3, [r3, #0]
 800dbca:	681a      	ldr	r2, [r3, #0]
 800dbcc:	68fb      	ldr	r3, [r7, #12]
 800dbce:	681b      	ldr	r3, [r3, #0]
 800dbd0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800dbd4:	601a      	str	r2, [r3, #0]
 800dbd6:	68fb      	ldr	r3, [r7, #12]
 800dbd8:	2220      	movs	r2, #32
 800dbda:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dbde:	68fb      	ldr	r3, [r7, #12]
 800dbe0:	2200      	movs	r2, #0
 800dbe2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dbe6:	2300      	movs	r3, #0
 800dbe8:	e000      	b.n	800dbec <HAL_I2C_Mem_Read_DMA+0x320>
 800dbea:	2302      	movs	r3, #2
 800dbec:	4618      	mov	r0, r3
 800dbee:	3728      	adds	r7, #40	@ 0x28
 800dbf0:	46bd      	mov	sp, r7
 800dbf2:	bd80      	pop	{r7, pc}

0800dbf4 <HAL_I2C_ER_IRQHandler>:
 800dbf4:	b580      	push	{r7, lr}
 800dbf6:	b08a      	sub	sp, #40	@ 0x28
 800dbf8:	af00      	add	r7, sp, #0
 800dbfa:	6078      	str	r0, [r7, #4]
 800dbfc:	687b      	ldr	r3, [r7, #4]
 800dbfe:	681b      	ldr	r3, [r3, #0]
 800dc00:	695b      	ldr	r3, [r3, #20]
 800dc02:	623b      	str	r3, [r7, #32]
 800dc04:	687b      	ldr	r3, [r7, #4]
 800dc06:	681b      	ldr	r3, [r3, #0]
 800dc08:	685b      	ldr	r3, [r3, #4]
 800dc0a:	61fb      	str	r3, [r7, #28]
 800dc0c:	2300      	movs	r3, #0
 800dc0e:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc10:	687b      	ldr	r3, [r7, #4]
 800dc12:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800dc16:	76fb      	strb	r3, [r7, #27]
 800dc18:	6a3b      	ldr	r3, [r7, #32]
 800dc1a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc1e:	2b00      	cmp	r3, #0
 800dc20:	d00d      	beq.n	800dc3e <HAL_I2C_ER_IRQHandler+0x4a>
 800dc22:	69fb      	ldr	r3, [r7, #28]
 800dc24:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc28:	2b00      	cmp	r3, #0
 800dc2a:	d008      	beq.n	800dc3e <HAL_I2C_ER_IRQHandler+0x4a>
 800dc2c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dc2e:	f043 0301 	orr.w	r3, r3, #1
 800dc32:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc34:	687b      	ldr	r3, [r7, #4]
 800dc36:	681b      	ldr	r3, [r3, #0]
 800dc38:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800dc3c:	615a      	str	r2, [r3, #20]
 800dc3e:	6a3b      	ldr	r3, [r7, #32]
 800dc40:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800dc44:	2b00      	cmp	r3, #0
 800dc46:	d00d      	beq.n	800dc64 <HAL_I2C_ER_IRQHandler+0x70>
 800dc48:	69fb      	ldr	r3, [r7, #28]
 800dc4a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc4e:	2b00      	cmp	r3, #0
 800dc50:	d008      	beq.n	800dc64 <HAL_I2C_ER_IRQHandler+0x70>
 800dc52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dc54:	f043 0302 	orr.w	r3, r3, #2
 800dc58:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc5a:	687b      	ldr	r3, [r7, #4]
 800dc5c:	681b      	ldr	r3, [r3, #0]
 800dc5e:	f46f 7200 	mvn.w	r2, #512	@ 0x200
 800dc62:	615a      	str	r2, [r3, #20]
 800dc64:	6a3b      	ldr	r3, [r7, #32]
 800dc66:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800dc6a:	2b00      	cmp	r3, #0
 800dc6c:	d03e      	beq.n	800dcec <HAL_I2C_ER_IRQHandler+0xf8>
 800dc6e:	69fb      	ldr	r3, [r7, #28]
 800dc70:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc74:	2b00      	cmp	r3, #0
 800dc76:	d039      	beq.n	800dcec <HAL_I2C_ER_IRQHandler+0xf8>
 800dc78:	7efb      	ldrb	r3, [r7, #27]
 800dc7a:	76bb      	strb	r3, [r7, #26]
 800dc7c:	687b      	ldr	r3, [r7, #4]
 800dc7e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800dc80:	b29b      	uxth	r3, r3
 800dc82:	617b      	str	r3, [r7, #20]
 800dc84:	687b      	ldr	r3, [r7, #4]
 800dc86:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800dc8a:	74fb      	strb	r3, [r7, #19]
 800dc8c:	687b      	ldr	r3, [r7, #4]
 800dc8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dc90:	60fb      	str	r3, [r7, #12]
 800dc92:	7ebb      	ldrb	r3, [r7, #26]
 800dc94:	2b20      	cmp	r3, #32
 800dc96:	d112      	bne.n	800dcbe <HAL_I2C_ER_IRQHandler+0xca>
 800dc98:	697b      	ldr	r3, [r7, #20]
 800dc9a:	2b00      	cmp	r3, #0
 800dc9c:	d10f      	bne.n	800dcbe <HAL_I2C_ER_IRQHandler+0xca>
 800dc9e:	7cfb      	ldrb	r3, [r7, #19]
 800dca0:	2b21      	cmp	r3, #33	@ 0x21
 800dca2:	d008      	beq.n	800dcb6 <HAL_I2C_ER_IRQHandler+0xc2>
 800dca4:	7cfb      	ldrb	r3, [r7, #19]
 800dca6:	2b29      	cmp	r3, #41	@ 0x29
 800dca8:	d005      	beq.n	800dcb6 <HAL_I2C_ER_IRQHandler+0xc2>
 800dcaa:	7cfb      	ldrb	r3, [r7, #19]
 800dcac:	2b28      	cmp	r3, #40	@ 0x28
 800dcae:	d106      	bne.n	800dcbe <HAL_I2C_ER_IRQHandler+0xca>
 800dcb0:	68fb      	ldr	r3, [r7, #12]
 800dcb2:	2b21      	cmp	r3, #33	@ 0x21
 800dcb4:	d103      	bne.n	800dcbe <HAL_I2C_ER_IRQHandler+0xca>
 800dcb6:	6878      	ldr	r0, [r7, #4]
 800dcb8:	f000 f878 	bl	800ddac <I2C_Slave_AF>
 800dcbc:	e016      	b.n	800dcec <HAL_I2C_ER_IRQHandler+0xf8>
 800dcbe:	687b      	ldr	r3, [r7, #4]
 800dcc0:	681b      	ldr	r3, [r3, #0]
 800dcc2:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800dcc6:	615a      	str	r2, [r3, #20]
 800dcc8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dcca:	f043 0304 	orr.w	r3, r3, #4
 800dcce:	627b      	str	r3, [r7, #36]	@ 0x24
 800dcd0:	7efb      	ldrb	r3, [r7, #27]
 800dcd2:	2b10      	cmp	r3, #16
 800dcd4:	d002      	beq.n	800dcdc <HAL_I2C_ER_IRQHandler+0xe8>
 800dcd6:	7efb      	ldrb	r3, [r7, #27]
 800dcd8:	2b40      	cmp	r3, #64	@ 0x40
 800dcda:	d107      	bne.n	800dcec <HAL_I2C_ER_IRQHandler+0xf8>
 800dcdc:	687b      	ldr	r3, [r7, #4]
 800dcde:	681b      	ldr	r3, [r3, #0]
 800dce0:	681a      	ldr	r2, [r3, #0]
 800dce2:	687b      	ldr	r3, [r7, #4]
 800dce4:	681b      	ldr	r3, [r3, #0]
 800dce6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800dcea:	601a      	str	r2, [r3, #0]
 800dcec:	6a3b      	ldr	r3, [r7, #32]
 800dcee:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800dcf2:	2b00      	cmp	r3, #0
 800dcf4:	d00d      	beq.n	800dd12 <HAL_I2C_ER_IRQHandler+0x11e>
 800dcf6:	69fb      	ldr	r3, [r7, #28]
 800dcf8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dcfc:	2b00      	cmp	r3, #0
 800dcfe:	d008      	beq.n	800dd12 <HAL_I2C_ER_IRQHandler+0x11e>
 800dd00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd02:	f043 0308 	orr.w	r3, r3, #8
 800dd06:	627b      	str	r3, [r7, #36]	@ 0x24
 800dd08:	687b      	ldr	r3, [r7, #4]
 800dd0a:	681b      	ldr	r3, [r3, #0]
 800dd0c:	f46f 6200 	mvn.w	r2, #2048	@ 0x800
 800dd10:	615a      	str	r2, [r3, #20]
 800dd12:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd14:	2b00      	cmp	r3, #0
 800dd16:	d008      	beq.n	800dd2a <HAL_I2C_ER_IRQHandler+0x136>
 800dd18:	687b      	ldr	r3, [r7, #4]
 800dd1a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800dd1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd1e:	431a      	orrs	r2, r3
 800dd20:	687b      	ldr	r3, [r7, #4]
 800dd22:	641a      	str	r2, [r3, #64]	@ 0x40
 800dd24:	6878      	ldr	r0, [r7, #4]
 800dd26:	f000 f8b1 	bl	800de8c <I2C_ITError>
 800dd2a:	bf00      	nop
 800dd2c:	3728      	adds	r7, #40	@ 0x28
 800dd2e:	46bd      	mov	sp, r7
 800dd30:	bd80      	pop	{r7, pc}

0800dd32 <HAL_I2C_MasterRxCpltCallback>:
 800dd32:	b480      	push	{r7}
 800dd34:	b083      	sub	sp, #12
 800dd36:	af00      	add	r7, sp, #0
 800dd38:	6078      	str	r0, [r7, #4]
 800dd3a:	bf00      	nop
 800dd3c:	370c      	adds	r7, #12
 800dd3e:	46bd      	mov	sp, r7
 800dd40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd44:	4770      	bx	lr

0800dd46 <HAL_I2C_SlaveTxCpltCallback>:
 800dd46:	b480      	push	{r7}
 800dd48:	b083      	sub	sp, #12
 800dd4a:	af00      	add	r7, sp, #0
 800dd4c:	6078      	str	r0, [r7, #4]
 800dd4e:	bf00      	nop
 800dd50:	370c      	adds	r7, #12
 800dd52:	46bd      	mov	sp, r7
 800dd54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd58:	4770      	bx	lr

0800dd5a <HAL_I2C_SlaveRxCpltCallback>:
 800dd5a:	b480      	push	{r7}
 800dd5c:	b083      	sub	sp, #12
 800dd5e:	af00      	add	r7, sp, #0
 800dd60:	6078      	str	r0, [r7, #4]
 800dd62:	bf00      	nop
 800dd64:	370c      	adds	r7, #12
 800dd66:	46bd      	mov	sp, r7
 800dd68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd6c:	4770      	bx	lr

0800dd6e <HAL_I2C_ListenCpltCallback>:
 800dd6e:	b480      	push	{r7}
 800dd70:	b083      	sub	sp, #12
 800dd72:	af00      	add	r7, sp, #0
 800dd74:	6078      	str	r0, [r7, #4]
 800dd76:	bf00      	nop
 800dd78:	370c      	adds	r7, #12
 800dd7a:	46bd      	mov	sp, r7
 800dd7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd80:	4770      	bx	lr

0800dd82 <HAL_I2C_ErrorCallback>:
 800dd82:	b480      	push	{r7}
 800dd84:	b083      	sub	sp, #12
 800dd86:	af00      	add	r7, sp, #0
 800dd88:	6078      	str	r0, [r7, #4]
 800dd8a:	bf00      	nop
 800dd8c:	370c      	adds	r7, #12
 800dd8e:	46bd      	mov	sp, r7
 800dd90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd94:	4770      	bx	lr

0800dd96 <HAL_I2C_AbortCpltCallback>:
 800dd96:	b480      	push	{r7}
 800dd98:	b083      	sub	sp, #12
 800dd9a:	af00      	add	r7, sp, #0
 800dd9c:	6078      	str	r0, [r7, #4]
 800dd9e:	bf00      	nop
 800dda0:	370c      	adds	r7, #12
 800dda2:	46bd      	mov	sp, r7
 800dda4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dda8:	4770      	bx	lr
	...

0800ddac <I2C_Slave_AF>:
 800ddac:	b580      	push	{r7, lr}
 800ddae:	b084      	sub	sp, #16
 800ddb0:	af00      	add	r7, sp, #0
 800ddb2:	6078      	str	r0, [r7, #4]
 800ddb4:	687b      	ldr	r3, [r7, #4]
 800ddb6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ddba:	73fb      	strb	r3, [r7, #15]
 800ddbc:	687b      	ldr	r3, [r7, #4]
 800ddbe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ddc0:	60bb      	str	r3, [r7, #8]
 800ddc2:	68bb      	ldr	r3, [r7, #8]
 800ddc4:	2b08      	cmp	r3, #8
 800ddc6:	d002      	beq.n	800ddce <I2C_Slave_AF+0x22>
 800ddc8:	68bb      	ldr	r3, [r7, #8]
 800ddca:	2b20      	cmp	r3, #32
 800ddcc:	d129      	bne.n	800de22 <I2C_Slave_AF+0x76>
 800ddce:	7bfb      	ldrb	r3, [r7, #15]
 800ddd0:	2b28      	cmp	r3, #40	@ 0x28
 800ddd2:	d126      	bne.n	800de22 <I2C_Slave_AF+0x76>
 800ddd4:	687b      	ldr	r3, [r7, #4]
 800ddd6:	4a2c      	ldr	r2, [pc, #176]	@ (800de88 <I2C_Slave_AF+0xdc>)
 800ddd8:	62da      	str	r2, [r3, #44]	@ 0x2c
 800ddda:	687b      	ldr	r3, [r7, #4]
 800dddc:	681b      	ldr	r3, [r3, #0]
 800ddde:	685a      	ldr	r2, [r3, #4]
 800dde0:	687b      	ldr	r3, [r7, #4]
 800dde2:	681b      	ldr	r3, [r3, #0]
 800dde4:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800dde8:	605a      	str	r2, [r3, #4]
 800ddea:	687b      	ldr	r3, [r7, #4]
 800ddec:	681b      	ldr	r3, [r3, #0]
 800ddee:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800ddf2:	615a      	str	r2, [r3, #20]
 800ddf4:	687b      	ldr	r3, [r7, #4]
 800ddf6:	681b      	ldr	r3, [r3, #0]
 800ddf8:	681a      	ldr	r2, [r3, #0]
 800ddfa:	687b      	ldr	r3, [r7, #4]
 800ddfc:	681b      	ldr	r3, [r3, #0]
 800ddfe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800de02:	601a      	str	r2, [r3, #0]
 800de04:	687b      	ldr	r3, [r7, #4]
 800de06:	2200      	movs	r2, #0
 800de08:	631a      	str	r2, [r3, #48]	@ 0x30
 800de0a:	687b      	ldr	r3, [r7, #4]
 800de0c:	2220      	movs	r2, #32
 800de0e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800de12:	687b      	ldr	r3, [r7, #4]
 800de14:	2200      	movs	r2, #0
 800de16:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800de1a:	6878      	ldr	r0, [r7, #4]
 800de1c:	f7ff ffa7 	bl	800dd6e <HAL_I2C_ListenCpltCallback>
 800de20:	e02e      	b.n	800de80 <I2C_Slave_AF+0xd4>
 800de22:	7bfb      	ldrb	r3, [r7, #15]
 800de24:	2b21      	cmp	r3, #33	@ 0x21
 800de26:	d126      	bne.n	800de76 <I2C_Slave_AF+0xca>
 800de28:	687b      	ldr	r3, [r7, #4]
 800de2a:	4a17      	ldr	r2, [pc, #92]	@ (800de88 <I2C_Slave_AF+0xdc>)
 800de2c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800de2e:	687b      	ldr	r3, [r7, #4]
 800de30:	2221      	movs	r2, #33	@ 0x21
 800de32:	631a      	str	r2, [r3, #48]	@ 0x30
 800de34:	687b      	ldr	r3, [r7, #4]
 800de36:	2220      	movs	r2, #32
 800de38:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800de3c:	687b      	ldr	r3, [r7, #4]
 800de3e:	2200      	movs	r2, #0
 800de40:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800de44:	687b      	ldr	r3, [r7, #4]
 800de46:	681b      	ldr	r3, [r3, #0]
 800de48:	685a      	ldr	r2, [r3, #4]
 800de4a:	687b      	ldr	r3, [r7, #4]
 800de4c:	681b      	ldr	r3, [r3, #0]
 800de4e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800de52:	605a      	str	r2, [r3, #4]
 800de54:	687b      	ldr	r3, [r7, #4]
 800de56:	681b      	ldr	r3, [r3, #0]
 800de58:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800de5c:	615a      	str	r2, [r3, #20]
 800de5e:	687b      	ldr	r3, [r7, #4]
 800de60:	681b      	ldr	r3, [r3, #0]
 800de62:	681a      	ldr	r2, [r3, #0]
 800de64:	687b      	ldr	r3, [r7, #4]
 800de66:	681b      	ldr	r3, [r3, #0]
 800de68:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800de6c:	601a      	str	r2, [r3, #0]
 800de6e:	6878      	ldr	r0, [r7, #4]
 800de70:	f7ff ff69 	bl	800dd46 <HAL_I2C_SlaveTxCpltCallback>
 800de74:	e004      	b.n	800de80 <I2C_Slave_AF+0xd4>
 800de76:	687b      	ldr	r3, [r7, #4]
 800de78:	681b      	ldr	r3, [r3, #0]
 800de7a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800de7e:	615a      	str	r2, [r3, #20]
 800de80:	bf00      	nop
 800de82:	3710      	adds	r7, #16
 800de84:	46bd      	mov	sp, r7
 800de86:	bd80      	pop	{r7, pc}
 800de88:	ffff0000 	.word	0xffff0000

0800de8c <I2C_ITError>:
 800de8c:	b580      	push	{r7, lr}
 800de8e:	b084      	sub	sp, #16
 800de90:	af00      	add	r7, sp, #0
 800de92:	6078      	str	r0, [r7, #4]
 800de94:	687b      	ldr	r3, [r7, #4]
 800de96:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800de9a:	73fb      	strb	r3, [r7, #15]
 800de9c:	687b      	ldr	r3, [r7, #4]
 800de9e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800dea2:	73bb      	strb	r3, [r7, #14]
 800dea4:	7bbb      	ldrb	r3, [r7, #14]
 800dea6:	2b10      	cmp	r3, #16
 800dea8:	d002      	beq.n	800deb0 <I2C_ITError+0x24>
 800deaa:	7bbb      	ldrb	r3, [r7, #14]
 800deac:	2b40      	cmp	r3, #64	@ 0x40
 800deae:	d10a      	bne.n	800dec6 <I2C_ITError+0x3a>
 800deb0:	7bfb      	ldrb	r3, [r7, #15]
 800deb2:	2b22      	cmp	r3, #34	@ 0x22
 800deb4:	d107      	bne.n	800dec6 <I2C_ITError+0x3a>
 800deb6:	687b      	ldr	r3, [r7, #4]
 800deb8:	681b      	ldr	r3, [r3, #0]
 800deba:	681a      	ldr	r2, [r3, #0]
 800debc:	687b      	ldr	r3, [r7, #4]
 800debe:	681b      	ldr	r3, [r3, #0]
 800dec0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800dec4:	601a      	str	r2, [r3, #0]
 800dec6:	7bfb      	ldrb	r3, [r7, #15]
 800dec8:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800decc:	2b28      	cmp	r3, #40	@ 0x28
 800dece:	d107      	bne.n	800dee0 <I2C_ITError+0x54>
 800ded0:	687b      	ldr	r3, [r7, #4]
 800ded2:	2200      	movs	r2, #0
 800ded4:	631a      	str	r2, [r3, #48]	@ 0x30
 800ded6:	687b      	ldr	r3, [r7, #4]
 800ded8:	2228      	movs	r2, #40	@ 0x28
 800deda:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dede:	e015      	b.n	800df0c <I2C_ITError+0x80>
 800dee0:	687b      	ldr	r3, [r7, #4]
 800dee2:	681b      	ldr	r3, [r3, #0]
 800dee4:	685b      	ldr	r3, [r3, #4]
 800dee6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800deea:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800deee:	d00a      	beq.n	800df06 <I2C_ITError+0x7a>
 800def0:	7bfb      	ldrb	r3, [r7, #15]
 800def2:	2b60      	cmp	r3, #96	@ 0x60
 800def4:	d007      	beq.n	800df06 <I2C_ITError+0x7a>
 800def6:	687b      	ldr	r3, [r7, #4]
 800def8:	2220      	movs	r2, #32
 800defa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800defe:	687b      	ldr	r3, [r7, #4]
 800df00:	2200      	movs	r2, #0
 800df02:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800df06:	687b      	ldr	r3, [r7, #4]
 800df08:	2200      	movs	r2, #0
 800df0a:	631a      	str	r2, [r3, #48]	@ 0x30
 800df0c:	687b      	ldr	r3, [r7, #4]
 800df0e:	681b      	ldr	r3, [r3, #0]
 800df10:	685b      	ldr	r3, [r3, #4]
 800df12:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800df16:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800df1a:	d162      	bne.n	800dfe2 <I2C_ITError+0x156>
 800df1c:	687b      	ldr	r3, [r7, #4]
 800df1e:	681b      	ldr	r3, [r3, #0]
 800df20:	685a      	ldr	r2, [r3, #4]
 800df22:	687b      	ldr	r3, [r7, #4]
 800df24:	681b      	ldr	r3, [r3, #0]
 800df26:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800df2a:	605a      	str	r2, [r3, #4]
 800df2c:	687b      	ldr	r3, [r7, #4]
 800df2e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df30:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800df34:	b2db      	uxtb	r3, r3
 800df36:	2b01      	cmp	r3, #1
 800df38:	d020      	beq.n	800df7c <I2C_ITError+0xf0>
 800df3a:	687b      	ldr	r3, [r7, #4]
 800df3c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df3e:	4a6a      	ldr	r2, [pc, #424]	@ (800e0e8 <I2C_ITError+0x25c>)
 800df40:	651a      	str	r2, [r3, #80]	@ 0x50
 800df42:	687b      	ldr	r3, [r7, #4]
 800df44:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df46:	4618      	mov	r0, r3
 800df48:	f7fe fbf6 	bl	800c738 <HAL_DMA_Abort_IT>
 800df4c:	4603      	mov	r3, r0
 800df4e:	2b00      	cmp	r3, #0
 800df50:	f000 8089 	beq.w	800e066 <I2C_ITError+0x1da>
 800df54:	687b      	ldr	r3, [r7, #4]
 800df56:	681b      	ldr	r3, [r3, #0]
 800df58:	681a      	ldr	r2, [r3, #0]
 800df5a:	687b      	ldr	r3, [r7, #4]
 800df5c:	681b      	ldr	r3, [r3, #0]
 800df5e:	f022 0201 	bic.w	r2, r2, #1
 800df62:	601a      	str	r2, [r3, #0]
 800df64:	687b      	ldr	r3, [r7, #4]
 800df66:	2220      	movs	r2, #32
 800df68:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800df6c:	687b      	ldr	r3, [r7, #4]
 800df6e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df70:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800df72:	687a      	ldr	r2, [r7, #4]
 800df74:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800df76:	4610      	mov	r0, r2
 800df78:	4798      	blx	r3
 800df7a:	e074      	b.n	800e066 <I2C_ITError+0x1da>
 800df7c:	687b      	ldr	r3, [r7, #4]
 800df7e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800df80:	4a59      	ldr	r2, [pc, #356]	@ (800e0e8 <I2C_ITError+0x25c>)
 800df82:	651a      	str	r2, [r3, #80]	@ 0x50
 800df84:	687b      	ldr	r3, [r7, #4]
 800df86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800df88:	4618      	mov	r0, r3
 800df8a:	f7fe fbd5 	bl	800c738 <HAL_DMA_Abort_IT>
 800df8e:	4603      	mov	r3, r0
 800df90:	2b00      	cmp	r3, #0
 800df92:	d068      	beq.n	800e066 <I2C_ITError+0x1da>
 800df94:	687b      	ldr	r3, [r7, #4]
 800df96:	681b      	ldr	r3, [r3, #0]
 800df98:	695b      	ldr	r3, [r3, #20]
 800df9a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800df9e:	2b40      	cmp	r3, #64	@ 0x40
 800dfa0:	d10b      	bne.n	800dfba <I2C_ITError+0x12e>
 800dfa2:	687b      	ldr	r3, [r7, #4]
 800dfa4:	681b      	ldr	r3, [r3, #0]
 800dfa6:	691a      	ldr	r2, [r3, #16]
 800dfa8:	687b      	ldr	r3, [r7, #4]
 800dfaa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dfac:	b2d2      	uxtb	r2, r2
 800dfae:	701a      	strb	r2, [r3, #0]
 800dfb0:	687b      	ldr	r3, [r7, #4]
 800dfb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800dfb4:	1c5a      	adds	r2, r3, #1
 800dfb6:	687b      	ldr	r3, [r7, #4]
 800dfb8:	625a      	str	r2, [r3, #36]	@ 0x24
 800dfba:	687b      	ldr	r3, [r7, #4]
 800dfbc:	681b      	ldr	r3, [r3, #0]
 800dfbe:	681a      	ldr	r2, [r3, #0]
 800dfc0:	687b      	ldr	r3, [r7, #4]
 800dfc2:	681b      	ldr	r3, [r3, #0]
 800dfc4:	f022 0201 	bic.w	r2, r2, #1
 800dfc8:	601a      	str	r2, [r3, #0]
 800dfca:	687b      	ldr	r3, [r7, #4]
 800dfcc:	2220      	movs	r2, #32
 800dfce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dfd2:	687b      	ldr	r3, [r7, #4]
 800dfd4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dfd6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dfd8:	687a      	ldr	r2, [r7, #4]
 800dfda:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800dfdc:	4610      	mov	r0, r2
 800dfde:	4798      	blx	r3
 800dfe0:	e041      	b.n	800e066 <I2C_ITError+0x1da>
 800dfe2:	687b      	ldr	r3, [r7, #4]
 800dfe4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800dfe8:	b2db      	uxtb	r3, r3
 800dfea:	2b60      	cmp	r3, #96	@ 0x60
 800dfec:	d125      	bne.n	800e03a <I2C_ITError+0x1ae>
 800dfee:	687b      	ldr	r3, [r7, #4]
 800dff0:	2220      	movs	r2, #32
 800dff2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	2200      	movs	r2, #0
 800dffa:	641a      	str	r2, [r3, #64]	@ 0x40
 800dffc:	687b      	ldr	r3, [r7, #4]
 800dffe:	681b      	ldr	r3, [r3, #0]
 800e000:	695b      	ldr	r3, [r3, #20]
 800e002:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e006:	2b40      	cmp	r3, #64	@ 0x40
 800e008:	d10b      	bne.n	800e022 <I2C_ITError+0x196>
 800e00a:	687b      	ldr	r3, [r7, #4]
 800e00c:	681b      	ldr	r3, [r3, #0]
 800e00e:	691a      	ldr	r2, [r3, #16]
 800e010:	687b      	ldr	r3, [r7, #4]
 800e012:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e014:	b2d2      	uxtb	r2, r2
 800e016:	701a      	strb	r2, [r3, #0]
 800e018:	687b      	ldr	r3, [r7, #4]
 800e01a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e01c:	1c5a      	adds	r2, r3, #1
 800e01e:	687b      	ldr	r3, [r7, #4]
 800e020:	625a      	str	r2, [r3, #36]	@ 0x24
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	681b      	ldr	r3, [r3, #0]
 800e026:	681a      	ldr	r2, [r3, #0]
 800e028:	687b      	ldr	r3, [r7, #4]
 800e02a:	681b      	ldr	r3, [r3, #0]
 800e02c:	f022 0201 	bic.w	r2, r2, #1
 800e030:	601a      	str	r2, [r3, #0]
 800e032:	6878      	ldr	r0, [r7, #4]
 800e034:	f7ff feaf 	bl	800dd96 <HAL_I2C_AbortCpltCallback>
 800e038:	e015      	b.n	800e066 <I2C_ITError+0x1da>
 800e03a:	687b      	ldr	r3, [r7, #4]
 800e03c:	681b      	ldr	r3, [r3, #0]
 800e03e:	695b      	ldr	r3, [r3, #20]
 800e040:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e044:	2b40      	cmp	r3, #64	@ 0x40
 800e046:	d10b      	bne.n	800e060 <I2C_ITError+0x1d4>
 800e048:	687b      	ldr	r3, [r7, #4]
 800e04a:	681b      	ldr	r3, [r3, #0]
 800e04c:	691a      	ldr	r2, [r3, #16]
 800e04e:	687b      	ldr	r3, [r7, #4]
 800e050:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e052:	b2d2      	uxtb	r2, r2
 800e054:	701a      	strb	r2, [r3, #0]
 800e056:	687b      	ldr	r3, [r7, #4]
 800e058:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e05a:	1c5a      	adds	r2, r3, #1
 800e05c:	687b      	ldr	r3, [r7, #4]
 800e05e:	625a      	str	r2, [r3, #36]	@ 0x24
 800e060:	6878      	ldr	r0, [r7, #4]
 800e062:	f7ff fe8e 	bl	800dd82 <HAL_I2C_ErrorCallback>
 800e066:	687b      	ldr	r3, [r7, #4]
 800e068:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e06a:	60bb      	str	r3, [r7, #8]
 800e06c:	68bb      	ldr	r3, [r7, #8]
 800e06e:	f003 0301 	and.w	r3, r3, #1
 800e072:	2b00      	cmp	r3, #0
 800e074:	d10e      	bne.n	800e094 <I2C_ITError+0x208>
 800e076:	68bb      	ldr	r3, [r7, #8]
 800e078:	f003 0302 	and.w	r3, r3, #2
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	d109      	bne.n	800e094 <I2C_ITError+0x208>
 800e080:	68bb      	ldr	r3, [r7, #8]
 800e082:	f003 0304 	and.w	r3, r3, #4
 800e086:	2b00      	cmp	r3, #0
 800e088:	d104      	bne.n	800e094 <I2C_ITError+0x208>
 800e08a:	68bb      	ldr	r3, [r7, #8]
 800e08c:	f003 0308 	and.w	r3, r3, #8
 800e090:	2b00      	cmp	r3, #0
 800e092:	d007      	beq.n	800e0a4 <I2C_ITError+0x218>
 800e094:	687b      	ldr	r3, [r7, #4]
 800e096:	681b      	ldr	r3, [r3, #0]
 800e098:	685a      	ldr	r2, [r3, #4]
 800e09a:	687b      	ldr	r3, [r7, #4]
 800e09c:	681b      	ldr	r3, [r3, #0]
 800e09e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800e0a2:	605a      	str	r2, [r3, #4]
 800e0a4:	687b      	ldr	r3, [r7, #4]
 800e0a6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e0aa:	73fb      	strb	r3, [r7, #15]
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e0b0:	f003 0304 	and.w	r3, r3, #4
 800e0b4:	2b04      	cmp	r3, #4
 800e0b6:	d113      	bne.n	800e0e0 <I2C_ITError+0x254>
 800e0b8:	7bfb      	ldrb	r3, [r7, #15]
 800e0ba:	2b28      	cmp	r3, #40	@ 0x28
 800e0bc:	d110      	bne.n	800e0e0 <I2C_ITError+0x254>
 800e0be:	687b      	ldr	r3, [r7, #4]
 800e0c0:	4a0a      	ldr	r2, [pc, #40]	@ (800e0ec <I2C_ITError+0x260>)
 800e0c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 800e0c4:	687b      	ldr	r3, [r7, #4]
 800e0c6:	2200      	movs	r2, #0
 800e0c8:	631a      	str	r2, [r3, #48]	@ 0x30
 800e0ca:	687b      	ldr	r3, [r7, #4]
 800e0cc:	2220      	movs	r2, #32
 800e0ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e0d2:	687b      	ldr	r3, [r7, #4]
 800e0d4:	2200      	movs	r2, #0
 800e0d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e0da:	6878      	ldr	r0, [r7, #4]
 800e0dc:	f7ff fe47 	bl	800dd6e <HAL_I2C_ListenCpltCallback>
 800e0e0:	bf00      	nop
 800e0e2:	3710      	adds	r7, #16
 800e0e4:	46bd      	mov	sp, r7
 800e0e6:	bd80      	pop	{r7, pc}
 800e0e8:	0800e611 	.word	0x0800e611
 800e0ec:	ffff0000 	.word	0xffff0000

0800e0f0 <I2C_RequestMemoryWrite>:
 800e0f0:	b580      	push	{r7, lr}
 800e0f2:	b088      	sub	sp, #32
 800e0f4:	af02      	add	r7, sp, #8
 800e0f6:	60f8      	str	r0, [r7, #12]
 800e0f8:	4608      	mov	r0, r1
 800e0fa:	4611      	mov	r1, r2
 800e0fc:	461a      	mov	r2, r3
 800e0fe:	4603      	mov	r3, r0
 800e100:	817b      	strh	r3, [r7, #10]
 800e102:	460b      	mov	r3, r1
 800e104:	813b      	strh	r3, [r7, #8]
 800e106:	4613      	mov	r3, r2
 800e108:	80fb      	strh	r3, [r7, #6]
 800e10a:	68fb      	ldr	r3, [r7, #12]
 800e10c:	681b      	ldr	r3, [r3, #0]
 800e10e:	681a      	ldr	r2, [r3, #0]
 800e110:	68fb      	ldr	r3, [r7, #12]
 800e112:	681b      	ldr	r3, [r3, #0]
 800e114:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e118:	601a      	str	r2, [r3, #0]
 800e11a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e11c:	9300      	str	r3, [sp, #0]
 800e11e:	6a3b      	ldr	r3, [r7, #32]
 800e120:	2200      	movs	r2, #0
 800e122:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e126:	68f8      	ldr	r0, [r7, #12]
 800e128:	f000 fb1a 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800e12c:	4603      	mov	r3, r0
 800e12e:	2b00      	cmp	r3, #0
 800e130:	d00d      	beq.n	800e14e <I2C_RequestMemoryWrite+0x5e>
 800e132:	68fb      	ldr	r3, [r7, #12]
 800e134:	681b      	ldr	r3, [r3, #0]
 800e136:	681b      	ldr	r3, [r3, #0]
 800e138:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e13c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e140:	d103      	bne.n	800e14a <I2C_RequestMemoryWrite+0x5a>
 800e142:	68fb      	ldr	r3, [r7, #12]
 800e144:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e148:	641a      	str	r2, [r3, #64]	@ 0x40
 800e14a:	2303      	movs	r3, #3
 800e14c:	e05f      	b.n	800e20e <I2C_RequestMemoryWrite+0x11e>
 800e14e:	897b      	ldrh	r3, [r7, #10]
 800e150:	b2db      	uxtb	r3, r3
 800e152:	461a      	mov	r2, r3
 800e154:	68fb      	ldr	r3, [r7, #12]
 800e156:	681b      	ldr	r3, [r3, #0]
 800e158:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800e15c:	611a      	str	r2, [r3, #16]
 800e15e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e160:	6a3a      	ldr	r2, [r7, #32]
 800e162:	492d      	ldr	r1, [pc, #180]	@ (800e218 <I2C_RequestMemoryWrite+0x128>)
 800e164:	68f8      	ldr	r0, [r7, #12]
 800e166:	f000 fb52 	bl	800e80e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e16a:	4603      	mov	r3, r0
 800e16c:	2b00      	cmp	r3, #0
 800e16e:	d001      	beq.n	800e174 <I2C_RequestMemoryWrite+0x84>
 800e170:	2301      	movs	r3, #1
 800e172:	e04c      	b.n	800e20e <I2C_RequestMemoryWrite+0x11e>
 800e174:	2300      	movs	r3, #0
 800e176:	617b      	str	r3, [r7, #20]
 800e178:	68fb      	ldr	r3, [r7, #12]
 800e17a:	681b      	ldr	r3, [r3, #0]
 800e17c:	695b      	ldr	r3, [r3, #20]
 800e17e:	617b      	str	r3, [r7, #20]
 800e180:	68fb      	ldr	r3, [r7, #12]
 800e182:	681b      	ldr	r3, [r3, #0]
 800e184:	699b      	ldr	r3, [r3, #24]
 800e186:	617b      	str	r3, [r7, #20]
 800e188:	697b      	ldr	r3, [r7, #20]
 800e18a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e18c:	6a39      	ldr	r1, [r7, #32]
 800e18e:	68f8      	ldr	r0, [r7, #12]
 800e190:	f000 fbbc 	bl	800e90c <I2C_WaitOnTXEFlagUntilTimeout>
 800e194:	4603      	mov	r3, r0
 800e196:	2b00      	cmp	r3, #0
 800e198:	d00d      	beq.n	800e1b6 <I2C_RequestMemoryWrite+0xc6>
 800e19a:	68fb      	ldr	r3, [r7, #12]
 800e19c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e19e:	2b04      	cmp	r3, #4
 800e1a0:	d107      	bne.n	800e1b2 <I2C_RequestMemoryWrite+0xc2>
 800e1a2:	68fb      	ldr	r3, [r7, #12]
 800e1a4:	681b      	ldr	r3, [r3, #0]
 800e1a6:	681a      	ldr	r2, [r3, #0]
 800e1a8:	68fb      	ldr	r3, [r7, #12]
 800e1aa:	681b      	ldr	r3, [r3, #0]
 800e1ac:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e1b0:	601a      	str	r2, [r3, #0]
 800e1b2:	2301      	movs	r3, #1
 800e1b4:	e02b      	b.n	800e20e <I2C_RequestMemoryWrite+0x11e>
 800e1b6:	88fb      	ldrh	r3, [r7, #6]
 800e1b8:	2b01      	cmp	r3, #1
 800e1ba:	d105      	bne.n	800e1c8 <I2C_RequestMemoryWrite+0xd8>
 800e1bc:	893b      	ldrh	r3, [r7, #8]
 800e1be:	b2da      	uxtb	r2, r3
 800e1c0:	68fb      	ldr	r3, [r7, #12]
 800e1c2:	681b      	ldr	r3, [r3, #0]
 800e1c4:	611a      	str	r2, [r3, #16]
 800e1c6:	e021      	b.n	800e20c <I2C_RequestMemoryWrite+0x11c>
 800e1c8:	893b      	ldrh	r3, [r7, #8]
 800e1ca:	0a1b      	lsrs	r3, r3, #8
 800e1cc:	b29b      	uxth	r3, r3
 800e1ce:	b2da      	uxtb	r2, r3
 800e1d0:	68fb      	ldr	r3, [r7, #12]
 800e1d2:	681b      	ldr	r3, [r3, #0]
 800e1d4:	611a      	str	r2, [r3, #16]
 800e1d6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e1d8:	6a39      	ldr	r1, [r7, #32]
 800e1da:	68f8      	ldr	r0, [r7, #12]
 800e1dc:	f000 fb96 	bl	800e90c <I2C_WaitOnTXEFlagUntilTimeout>
 800e1e0:	4603      	mov	r3, r0
 800e1e2:	2b00      	cmp	r3, #0
 800e1e4:	d00d      	beq.n	800e202 <I2C_RequestMemoryWrite+0x112>
 800e1e6:	68fb      	ldr	r3, [r7, #12]
 800e1e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e1ea:	2b04      	cmp	r3, #4
 800e1ec:	d107      	bne.n	800e1fe <I2C_RequestMemoryWrite+0x10e>
 800e1ee:	68fb      	ldr	r3, [r7, #12]
 800e1f0:	681b      	ldr	r3, [r3, #0]
 800e1f2:	681a      	ldr	r2, [r3, #0]
 800e1f4:	68fb      	ldr	r3, [r7, #12]
 800e1f6:	681b      	ldr	r3, [r3, #0]
 800e1f8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e1fc:	601a      	str	r2, [r3, #0]
 800e1fe:	2301      	movs	r3, #1
 800e200:	e005      	b.n	800e20e <I2C_RequestMemoryWrite+0x11e>
 800e202:	893b      	ldrh	r3, [r7, #8]
 800e204:	b2da      	uxtb	r2, r3
 800e206:	68fb      	ldr	r3, [r7, #12]
 800e208:	681b      	ldr	r3, [r3, #0]
 800e20a:	611a      	str	r2, [r3, #16]
 800e20c:	2300      	movs	r3, #0
 800e20e:	4618      	mov	r0, r3
 800e210:	3718      	adds	r7, #24
 800e212:	46bd      	mov	sp, r7
 800e214:	bd80      	pop	{r7, pc}
 800e216:	bf00      	nop
 800e218:	00010002 	.word	0x00010002

0800e21c <I2C_RequestMemoryRead>:
 800e21c:	b580      	push	{r7, lr}
 800e21e:	b088      	sub	sp, #32
 800e220:	af02      	add	r7, sp, #8
 800e222:	60f8      	str	r0, [r7, #12]
 800e224:	4608      	mov	r0, r1
 800e226:	4611      	mov	r1, r2
 800e228:	461a      	mov	r2, r3
 800e22a:	4603      	mov	r3, r0
 800e22c:	817b      	strh	r3, [r7, #10]
 800e22e:	460b      	mov	r3, r1
 800e230:	813b      	strh	r3, [r7, #8]
 800e232:	4613      	mov	r3, r2
 800e234:	80fb      	strh	r3, [r7, #6]
 800e236:	68fb      	ldr	r3, [r7, #12]
 800e238:	681b      	ldr	r3, [r3, #0]
 800e23a:	681a      	ldr	r2, [r3, #0]
 800e23c:	68fb      	ldr	r3, [r7, #12]
 800e23e:	681b      	ldr	r3, [r3, #0]
 800e240:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e244:	601a      	str	r2, [r3, #0]
 800e246:	68fb      	ldr	r3, [r7, #12]
 800e248:	681b      	ldr	r3, [r3, #0]
 800e24a:	681a      	ldr	r2, [r3, #0]
 800e24c:	68fb      	ldr	r3, [r7, #12]
 800e24e:	681b      	ldr	r3, [r3, #0]
 800e250:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e254:	601a      	str	r2, [r3, #0]
 800e256:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e258:	9300      	str	r3, [sp, #0]
 800e25a:	6a3b      	ldr	r3, [r7, #32]
 800e25c:	2200      	movs	r2, #0
 800e25e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e262:	68f8      	ldr	r0, [r7, #12]
 800e264:	f000 fa7c 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800e268:	4603      	mov	r3, r0
 800e26a:	2b00      	cmp	r3, #0
 800e26c:	d00d      	beq.n	800e28a <I2C_RequestMemoryRead+0x6e>
 800e26e:	68fb      	ldr	r3, [r7, #12]
 800e270:	681b      	ldr	r3, [r3, #0]
 800e272:	681b      	ldr	r3, [r3, #0]
 800e274:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e278:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e27c:	d103      	bne.n	800e286 <I2C_RequestMemoryRead+0x6a>
 800e27e:	68fb      	ldr	r3, [r7, #12]
 800e280:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e284:	641a      	str	r2, [r3, #64]	@ 0x40
 800e286:	2303      	movs	r3, #3
 800e288:	e0aa      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e28a:	897b      	ldrh	r3, [r7, #10]
 800e28c:	b2db      	uxtb	r3, r3
 800e28e:	461a      	mov	r2, r3
 800e290:	68fb      	ldr	r3, [r7, #12]
 800e292:	681b      	ldr	r3, [r3, #0]
 800e294:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800e298:	611a      	str	r2, [r3, #16]
 800e29a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e29c:	6a3a      	ldr	r2, [r7, #32]
 800e29e:	4952      	ldr	r1, [pc, #328]	@ (800e3e8 <I2C_RequestMemoryRead+0x1cc>)
 800e2a0:	68f8      	ldr	r0, [r7, #12]
 800e2a2:	f000 fab4 	bl	800e80e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e2a6:	4603      	mov	r3, r0
 800e2a8:	2b00      	cmp	r3, #0
 800e2aa:	d001      	beq.n	800e2b0 <I2C_RequestMemoryRead+0x94>
 800e2ac:	2301      	movs	r3, #1
 800e2ae:	e097      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e2b0:	2300      	movs	r3, #0
 800e2b2:	617b      	str	r3, [r7, #20]
 800e2b4:	68fb      	ldr	r3, [r7, #12]
 800e2b6:	681b      	ldr	r3, [r3, #0]
 800e2b8:	695b      	ldr	r3, [r3, #20]
 800e2ba:	617b      	str	r3, [r7, #20]
 800e2bc:	68fb      	ldr	r3, [r7, #12]
 800e2be:	681b      	ldr	r3, [r3, #0]
 800e2c0:	699b      	ldr	r3, [r3, #24]
 800e2c2:	617b      	str	r3, [r7, #20]
 800e2c4:	697b      	ldr	r3, [r7, #20]
 800e2c6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e2c8:	6a39      	ldr	r1, [r7, #32]
 800e2ca:	68f8      	ldr	r0, [r7, #12]
 800e2cc:	f000 fb1e 	bl	800e90c <I2C_WaitOnTXEFlagUntilTimeout>
 800e2d0:	4603      	mov	r3, r0
 800e2d2:	2b00      	cmp	r3, #0
 800e2d4:	d00d      	beq.n	800e2f2 <I2C_RequestMemoryRead+0xd6>
 800e2d6:	68fb      	ldr	r3, [r7, #12]
 800e2d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e2da:	2b04      	cmp	r3, #4
 800e2dc:	d107      	bne.n	800e2ee <I2C_RequestMemoryRead+0xd2>
 800e2de:	68fb      	ldr	r3, [r7, #12]
 800e2e0:	681b      	ldr	r3, [r3, #0]
 800e2e2:	681a      	ldr	r2, [r3, #0]
 800e2e4:	68fb      	ldr	r3, [r7, #12]
 800e2e6:	681b      	ldr	r3, [r3, #0]
 800e2e8:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e2ec:	601a      	str	r2, [r3, #0]
 800e2ee:	2301      	movs	r3, #1
 800e2f0:	e076      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e2f2:	88fb      	ldrh	r3, [r7, #6]
 800e2f4:	2b01      	cmp	r3, #1
 800e2f6:	d105      	bne.n	800e304 <I2C_RequestMemoryRead+0xe8>
 800e2f8:	893b      	ldrh	r3, [r7, #8]
 800e2fa:	b2da      	uxtb	r2, r3
 800e2fc:	68fb      	ldr	r3, [r7, #12]
 800e2fe:	681b      	ldr	r3, [r3, #0]
 800e300:	611a      	str	r2, [r3, #16]
 800e302:	e021      	b.n	800e348 <I2C_RequestMemoryRead+0x12c>
 800e304:	893b      	ldrh	r3, [r7, #8]
 800e306:	0a1b      	lsrs	r3, r3, #8
 800e308:	b29b      	uxth	r3, r3
 800e30a:	b2da      	uxtb	r2, r3
 800e30c:	68fb      	ldr	r3, [r7, #12]
 800e30e:	681b      	ldr	r3, [r3, #0]
 800e310:	611a      	str	r2, [r3, #16]
 800e312:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e314:	6a39      	ldr	r1, [r7, #32]
 800e316:	68f8      	ldr	r0, [r7, #12]
 800e318:	f000 faf8 	bl	800e90c <I2C_WaitOnTXEFlagUntilTimeout>
 800e31c:	4603      	mov	r3, r0
 800e31e:	2b00      	cmp	r3, #0
 800e320:	d00d      	beq.n	800e33e <I2C_RequestMemoryRead+0x122>
 800e322:	68fb      	ldr	r3, [r7, #12]
 800e324:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e326:	2b04      	cmp	r3, #4
 800e328:	d107      	bne.n	800e33a <I2C_RequestMemoryRead+0x11e>
 800e32a:	68fb      	ldr	r3, [r7, #12]
 800e32c:	681b      	ldr	r3, [r3, #0]
 800e32e:	681a      	ldr	r2, [r3, #0]
 800e330:	68fb      	ldr	r3, [r7, #12]
 800e332:	681b      	ldr	r3, [r3, #0]
 800e334:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e338:	601a      	str	r2, [r3, #0]
 800e33a:	2301      	movs	r3, #1
 800e33c:	e050      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e33e:	893b      	ldrh	r3, [r7, #8]
 800e340:	b2da      	uxtb	r2, r3
 800e342:	68fb      	ldr	r3, [r7, #12]
 800e344:	681b      	ldr	r3, [r3, #0]
 800e346:	611a      	str	r2, [r3, #16]
 800e348:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e34a:	6a39      	ldr	r1, [r7, #32]
 800e34c:	68f8      	ldr	r0, [r7, #12]
 800e34e:	f000 fadd 	bl	800e90c <I2C_WaitOnTXEFlagUntilTimeout>
 800e352:	4603      	mov	r3, r0
 800e354:	2b00      	cmp	r3, #0
 800e356:	d00d      	beq.n	800e374 <I2C_RequestMemoryRead+0x158>
 800e358:	68fb      	ldr	r3, [r7, #12]
 800e35a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e35c:	2b04      	cmp	r3, #4
 800e35e:	d107      	bne.n	800e370 <I2C_RequestMemoryRead+0x154>
 800e360:	68fb      	ldr	r3, [r7, #12]
 800e362:	681b      	ldr	r3, [r3, #0]
 800e364:	681a      	ldr	r2, [r3, #0]
 800e366:	68fb      	ldr	r3, [r7, #12]
 800e368:	681b      	ldr	r3, [r3, #0]
 800e36a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e36e:	601a      	str	r2, [r3, #0]
 800e370:	2301      	movs	r3, #1
 800e372:	e035      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e374:	68fb      	ldr	r3, [r7, #12]
 800e376:	681b      	ldr	r3, [r3, #0]
 800e378:	681a      	ldr	r2, [r3, #0]
 800e37a:	68fb      	ldr	r3, [r7, #12]
 800e37c:	681b      	ldr	r3, [r3, #0]
 800e37e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e382:	601a      	str	r2, [r3, #0]
 800e384:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e386:	9300      	str	r3, [sp, #0]
 800e388:	6a3b      	ldr	r3, [r7, #32]
 800e38a:	2200      	movs	r2, #0
 800e38c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e390:	68f8      	ldr	r0, [r7, #12]
 800e392:	f000 f9e5 	bl	800e760 <I2C_WaitOnFlagUntilTimeout>
 800e396:	4603      	mov	r3, r0
 800e398:	2b00      	cmp	r3, #0
 800e39a:	d00d      	beq.n	800e3b8 <I2C_RequestMemoryRead+0x19c>
 800e39c:	68fb      	ldr	r3, [r7, #12]
 800e39e:	681b      	ldr	r3, [r3, #0]
 800e3a0:	681b      	ldr	r3, [r3, #0]
 800e3a2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e3a6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e3aa:	d103      	bne.n	800e3b4 <I2C_RequestMemoryRead+0x198>
 800e3ac:	68fb      	ldr	r3, [r7, #12]
 800e3ae:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e3b2:	641a      	str	r2, [r3, #64]	@ 0x40
 800e3b4:	2303      	movs	r3, #3
 800e3b6:	e013      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e3b8:	897b      	ldrh	r3, [r7, #10]
 800e3ba:	b2db      	uxtb	r3, r3
 800e3bc:	f043 0301 	orr.w	r3, r3, #1
 800e3c0:	b2da      	uxtb	r2, r3
 800e3c2:	68fb      	ldr	r3, [r7, #12]
 800e3c4:	681b      	ldr	r3, [r3, #0]
 800e3c6:	611a      	str	r2, [r3, #16]
 800e3c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e3ca:	6a3a      	ldr	r2, [r7, #32]
 800e3cc:	4906      	ldr	r1, [pc, #24]	@ (800e3e8 <I2C_RequestMemoryRead+0x1cc>)
 800e3ce:	68f8      	ldr	r0, [r7, #12]
 800e3d0:	f000 fa1d 	bl	800e80e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e3d4:	4603      	mov	r3, r0
 800e3d6:	2b00      	cmp	r3, #0
 800e3d8:	d001      	beq.n	800e3de <I2C_RequestMemoryRead+0x1c2>
 800e3da:	2301      	movs	r3, #1
 800e3dc:	e000      	b.n	800e3e0 <I2C_RequestMemoryRead+0x1c4>
 800e3de:	2300      	movs	r3, #0
 800e3e0:	4618      	mov	r0, r3
 800e3e2:	3718      	adds	r7, #24
 800e3e4:	46bd      	mov	sp, r7
 800e3e6:	bd80      	pop	{r7, pc}
 800e3e8:	00010002 	.word	0x00010002

0800e3ec <I2C_DMAXferCplt>:
 800e3ec:	b580      	push	{r7, lr}
 800e3ee:	b086      	sub	sp, #24
 800e3f0:	af00      	add	r7, sp, #0
 800e3f2:	6078      	str	r0, [r7, #4]
 800e3f4:	687b      	ldr	r3, [r7, #4]
 800e3f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e3f8:	617b      	str	r3, [r7, #20]
 800e3fa:	697b      	ldr	r3, [r7, #20]
 800e3fc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e400:	74fb      	strb	r3, [r7, #19]
 800e402:	697b      	ldr	r3, [r7, #20]
 800e404:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e408:	74bb      	strb	r3, [r7, #18]
 800e40a:	697b      	ldr	r3, [r7, #20]
 800e40c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e40e:	60fb      	str	r3, [r7, #12]
 800e410:	697b      	ldr	r3, [r7, #20]
 800e412:	681b      	ldr	r3, [r3, #0]
 800e414:	685a      	ldr	r2, [r3, #4]
 800e416:	697b      	ldr	r3, [r7, #20]
 800e418:	681b      	ldr	r3, [r3, #0]
 800e41a:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800e41e:	605a      	str	r2, [r3, #4]
 800e420:	697b      	ldr	r3, [r7, #20]
 800e422:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e424:	2b00      	cmp	r3, #0
 800e426:	d003      	beq.n	800e430 <I2C_DMAXferCplt+0x44>
 800e428:	697b      	ldr	r3, [r7, #20]
 800e42a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e42c:	2200      	movs	r2, #0
 800e42e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e430:	697b      	ldr	r3, [r7, #20]
 800e432:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e434:	2b00      	cmp	r3, #0
 800e436:	d003      	beq.n	800e440 <I2C_DMAXferCplt+0x54>
 800e438:	697b      	ldr	r3, [r7, #20]
 800e43a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e43c:	2200      	movs	r2, #0
 800e43e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e440:	7cfb      	ldrb	r3, [r7, #19]
 800e442:	f003 0321 	and.w	r3, r3, #33	@ 0x21
 800e446:	2b21      	cmp	r3, #33	@ 0x21
 800e448:	d007      	beq.n	800e45a <I2C_DMAXferCplt+0x6e>
 800e44a:	7cfb      	ldrb	r3, [r7, #19]
 800e44c:	f003 0322 	and.w	r3, r3, #34	@ 0x22
 800e450:	2b22      	cmp	r3, #34	@ 0x22
 800e452:	d131      	bne.n	800e4b8 <I2C_DMAXferCplt+0xcc>
 800e454:	7cbb      	ldrb	r3, [r7, #18]
 800e456:	2b20      	cmp	r3, #32
 800e458:	d12e      	bne.n	800e4b8 <I2C_DMAXferCplt+0xcc>
 800e45a:	697b      	ldr	r3, [r7, #20]
 800e45c:	681b      	ldr	r3, [r3, #0]
 800e45e:	685a      	ldr	r2, [r3, #4]
 800e460:	697b      	ldr	r3, [r7, #20]
 800e462:	681b      	ldr	r3, [r3, #0]
 800e464:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e468:	605a      	str	r2, [r3, #4]
 800e46a:	697b      	ldr	r3, [r7, #20]
 800e46c:	2200      	movs	r2, #0
 800e46e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e470:	7cfb      	ldrb	r3, [r7, #19]
 800e472:	2b29      	cmp	r3, #41	@ 0x29
 800e474:	d10a      	bne.n	800e48c <I2C_DMAXferCplt+0xa0>
 800e476:	697b      	ldr	r3, [r7, #20]
 800e478:	2221      	movs	r2, #33	@ 0x21
 800e47a:	631a      	str	r2, [r3, #48]	@ 0x30
 800e47c:	697b      	ldr	r3, [r7, #20]
 800e47e:	2228      	movs	r2, #40	@ 0x28
 800e480:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e484:	6978      	ldr	r0, [r7, #20]
 800e486:	f7ff fc5e 	bl	800dd46 <HAL_I2C_SlaveTxCpltCallback>
 800e48a:	e00c      	b.n	800e4a6 <I2C_DMAXferCplt+0xba>
 800e48c:	7cfb      	ldrb	r3, [r7, #19]
 800e48e:	2b2a      	cmp	r3, #42	@ 0x2a
 800e490:	d109      	bne.n	800e4a6 <I2C_DMAXferCplt+0xba>
 800e492:	697b      	ldr	r3, [r7, #20]
 800e494:	2222      	movs	r2, #34	@ 0x22
 800e496:	631a      	str	r2, [r3, #48]	@ 0x30
 800e498:	697b      	ldr	r3, [r7, #20]
 800e49a:	2228      	movs	r2, #40	@ 0x28
 800e49c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e4a0:	6978      	ldr	r0, [r7, #20]
 800e4a2:	f7ff fc5a 	bl	800dd5a <HAL_I2C_SlaveRxCpltCallback>
 800e4a6:	697b      	ldr	r3, [r7, #20]
 800e4a8:	681b      	ldr	r3, [r3, #0]
 800e4aa:	685a      	ldr	r2, [r3, #4]
 800e4ac:	697b      	ldr	r3, [r7, #20]
 800e4ae:	681b      	ldr	r3, [r3, #0]
 800e4b0:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 800e4b4:	605a      	str	r2, [r3, #4]
 800e4b6:	e06a      	b.n	800e58e <I2C_DMAXferCplt+0x1a2>
 800e4b8:	697b      	ldr	r3, [r7, #20]
 800e4ba:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e4be:	b2db      	uxtb	r3, r3
 800e4c0:	2b00      	cmp	r3, #0
 800e4c2:	d064      	beq.n	800e58e <I2C_DMAXferCplt+0x1a2>
 800e4c4:	697b      	ldr	r3, [r7, #20]
 800e4c6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800e4c8:	b29b      	uxth	r3, r3
 800e4ca:	2b01      	cmp	r3, #1
 800e4cc:	d107      	bne.n	800e4de <I2C_DMAXferCplt+0xf2>
 800e4ce:	697b      	ldr	r3, [r7, #20]
 800e4d0:	681b      	ldr	r3, [r3, #0]
 800e4d2:	681a      	ldr	r2, [r3, #0]
 800e4d4:	697b      	ldr	r3, [r7, #20]
 800e4d6:	681b      	ldr	r3, [r3, #0]
 800e4d8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e4dc:	601a      	str	r2, [r3, #0]
 800e4de:	697b      	ldr	r3, [r7, #20]
 800e4e0:	681b      	ldr	r3, [r3, #0]
 800e4e2:	685a      	ldr	r2, [r3, #4]
 800e4e4:	697b      	ldr	r3, [r7, #20]
 800e4e6:	681b      	ldr	r3, [r3, #0]
 800e4e8:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800e4ec:	605a      	str	r2, [r3, #4]
 800e4ee:	68fb      	ldr	r3, [r7, #12]
 800e4f0:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800e4f4:	d009      	beq.n	800e50a <I2C_DMAXferCplt+0x11e>
 800e4f6:	68fb      	ldr	r3, [r7, #12]
 800e4f8:	2b08      	cmp	r3, #8
 800e4fa:	d006      	beq.n	800e50a <I2C_DMAXferCplt+0x11e>
 800e4fc:	68fb      	ldr	r3, [r7, #12]
 800e4fe:	f1b3 4f2a 	cmp.w	r3, #2852126720	@ 0xaa000000
 800e502:	d002      	beq.n	800e50a <I2C_DMAXferCplt+0x11e>
 800e504:	68fb      	ldr	r3, [r7, #12]
 800e506:	2b20      	cmp	r3, #32
 800e508:	d107      	bne.n	800e51a <I2C_DMAXferCplt+0x12e>
 800e50a:	697b      	ldr	r3, [r7, #20]
 800e50c:	681b      	ldr	r3, [r3, #0]
 800e50e:	681a      	ldr	r2, [r3, #0]
 800e510:	697b      	ldr	r3, [r7, #20]
 800e512:	681b      	ldr	r3, [r3, #0]
 800e514:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e518:	601a      	str	r2, [r3, #0]
 800e51a:	697b      	ldr	r3, [r7, #20]
 800e51c:	681b      	ldr	r3, [r3, #0]
 800e51e:	685a      	ldr	r2, [r3, #4]
 800e520:	697b      	ldr	r3, [r7, #20]
 800e522:	681b      	ldr	r3, [r3, #0]
 800e524:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800e528:	605a      	str	r2, [r3, #4]
 800e52a:	697b      	ldr	r3, [r7, #20]
 800e52c:	681b      	ldr	r3, [r3, #0]
 800e52e:	685a      	ldr	r2, [r3, #4]
 800e530:	697b      	ldr	r3, [r7, #20]
 800e532:	681b      	ldr	r3, [r3, #0]
 800e534:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e538:	605a      	str	r2, [r3, #4]
 800e53a:	697b      	ldr	r3, [r7, #20]
 800e53c:	2200      	movs	r2, #0
 800e53e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e540:	697b      	ldr	r3, [r7, #20]
 800e542:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e544:	2b00      	cmp	r3, #0
 800e546:	d003      	beq.n	800e550 <I2C_DMAXferCplt+0x164>
 800e548:	6978      	ldr	r0, [r7, #20]
 800e54a:	f7ff fc1a 	bl	800dd82 <HAL_I2C_ErrorCallback>
 800e54e:	e01e      	b.n	800e58e <I2C_DMAXferCplt+0x1a2>
 800e550:	697b      	ldr	r3, [r7, #20]
 800e552:	2220      	movs	r2, #32
 800e554:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e558:	697b      	ldr	r3, [r7, #20]
 800e55a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e55e:	b2db      	uxtb	r3, r3
 800e560:	2b40      	cmp	r3, #64	@ 0x40
 800e562:	d10a      	bne.n	800e57a <I2C_DMAXferCplt+0x18e>
 800e564:	697b      	ldr	r3, [r7, #20]
 800e566:	2200      	movs	r2, #0
 800e568:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e56c:	697b      	ldr	r3, [r7, #20]
 800e56e:	2200      	movs	r2, #0
 800e570:	631a      	str	r2, [r3, #48]	@ 0x30
 800e572:	6978      	ldr	r0, [r7, #20]
 800e574:	f7f3 fcb0 	bl	8001ed8 <HAL_I2C_MemRxCpltCallback>
 800e578:	e009      	b.n	800e58e <I2C_DMAXferCplt+0x1a2>
 800e57a:	697b      	ldr	r3, [r7, #20]
 800e57c:	2200      	movs	r2, #0
 800e57e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e582:	697b      	ldr	r3, [r7, #20]
 800e584:	2212      	movs	r2, #18
 800e586:	631a      	str	r2, [r3, #48]	@ 0x30
 800e588:	6978      	ldr	r0, [r7, #20]
 800e58a:	f7ff fbd2 	bl	800dd32 <HAL_I2C_MasterRxCpltCallback>
 800e58e:	bf00      	nop
 800e590:	3718      	adds	r7, #24
 800e592:	46bd      	mov	sp, r7
 800e594:	bd80      	pop	{r7, pc}

0800e596 <I2C_DMAError>:
 800e596:	b580      	push	{r7, lr}
 800e598:	b084      	sub	sp, #16
 800e59a:	af00      	add	r7, sp, #0
 800e59c:	6078      	str	r0, [r7, #4]
 800e59e:	687b      	ldr	r3, [r7, #4]
 800e5a0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e5a2:	60fb      	str	r3, [r7, #12]
 800e5a4:	68fb      	ldr	r3, [r7, #12]
 800e5a6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e5a8:	2b00      	cmp	r3, #0
 800e5aa:	d003      	beq.n	800e5b4 <I2C_DMAError+0x1e>
 800e5ac:	68fb      	ldr	r3, [r7, #12]
 800e5ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e5b0:	2200      	movs	r2, #0
 800e5b2:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e5b4:	68fb      	ldr	r3, [r7, #12]
 800e5b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e5b8:	2b00      	cmp	r3, #0
 800e5ba:	d003      	beq.n	800e5c4 <I2C_DMAError+0x2e>
 800e5bc:	68fb      	ldr	r3, [r7, #12]
 800e5be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e5c0:	2200      	movs	r2, #0
 800e5c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e5c4:	6878      	ldr	r0, [r7, #4]
 800e5c6:	f7fe fa63 	bl	800ca90 <HAL_DMA_GetError>
 800e5ca:	4603      	mov	r3, r0
 800e5cc:	2b02      	cmp	r3, #2
 800e5ce:	d01b      	beq.n	800e608 <I2C_DMAError+0x72>
 800e5d0:	68fb      	ldr	r3, [r7, #12]
 800e5d2:	681b      	ldr	r3, [r3, #0]
 800e5d4:	681a      	ldr	r2, [r3, #0]
 800e5d6:	68fb      	ldr	r3, [r7, #12]
 800e5d8:	681b      	ldr	r3, [r3, #0]
 800e5da:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e5de:	601a      	str	r2, [r3, #0]
 800e5e0:	68fb      	ldr	r3, [r7, #12]
 800e5e2:	2200      	movs	r2, #0
 800e5e4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e5e6:	68fb      	ldr	r3, [r7, #12]
 800e5e8:	2220      	movs	r2, #32
 800e5ea:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e5ee:	68fb      	ldr	r3, [r7, #12]
 800e5f0:	2200      	movs	r2, #0
 800e5f2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e5f6:	68fb      	ldr	r3, [r7, #12]
 800e5f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e5fa:	f043 0210 	orr.w	r2, r3, #16
 800e5fe:	68fb      	ldr	r3, [r7, #12]
 800e600:	641a      	str	r2, [r3, #64]	@ 0x40
 800e602:	68f8      	ldr	r0, [r7, #12]
 800e604:	f7ff fbbd 	bl	800dd82 <HAL_I2C_ErrorCallback>
 800e608:	bf00      	nop
 800e60a:	3710      	adds	r7, #16
 800e60c:	46bd      	mov	sp, r7
 800e60e:	bd80      	pop	{r7, pc}

0800e610 <I2C_DMAAbort>:
 800e610:	b580      	push	{r7, lr}
 800e612:	b086      	sub	sp, #24
 800e614:	af00      	add	r7, sp, #0
 800e616:	6078      	str	r0, [r7, #4]
 800e618:	2300      	movs	r3, #0
 800e61a:	60fb      	str	r3, [r7, #12]
 800e61c:	687b      	ldr	r3, [r7, #4]
 800e61e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e620:	617b      	str	r3, [r7, #20]
 800e622:	697b      	ldr	r3, [r7, #20]
 800e624:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e628:	74fb      	strb	r3, [r7, #19]
 800e62a:	4b4b      	ldr	r3, [pc, #300]	@ (800e758 <I2C_DMAAbort+0x148>)
 800e62c:	681b      	ldr	r3, [r3, #0]
 800e62e:	08db      	lsrs	r3, r3, #3
 800e630:	4a4a      	ldr	r2, [pc, #296]	@ (800e75c <I2C_DMAAbort+0x14c>)
 800e632:	fba2 2303 	umull	r2, r3, r2, r3
 800e636:	0a1a      	lsrs	r2, r3, #8
 800e638:	4613      	mov	r3, r2
 800e63a:	009b      	lsls	r3, r3, #2
 800e63c:	4413      	add	r3, r2
 800e63e:	00da      	lsls	r2, r3, #3
 800e640:	1ad3      	subs	r3, r2, r3
 800e642:	60fb      	str	r3, [r7, #12]
 800e644:	68fb      	ldr	r3, [r7, #12]
 800e646:	2b00      	cmp	r3, #0
 800e648:	d106      	bne.n	800e658 <I2C_DMAAbort+0x48>
 800e64a:	697b      	ldr	r3, [r7, #20]
 800e64c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e64e:	f043 0220 	orr.w	r2, r3, #32
 800e652:	697b      	ldr	r3, [r7, #20]
 800e654:	641a      	str	r2, [r3, #64]	@ 0x40
 800e656:	e00a      	b.n	800e66e <I2C_DMAAbort+0x5e>
 800e658:	68fb      	ldr	r3, [r7, #12]
 800e65a:	3b01      	subs	r3, #1
 800e65c:	60fb      	str	r3, [r7, #12]
 800e65e:	697b      	ldr	r3, [r7, #20]
 800e660:	681b      	ldr	r3, [r3, #0]
 800e662:	681b      	ldr	r3, [r3, #0]
 800e664:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800e668:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e66c:	d0ea      	beq.n	800e644 <I2C_DMAAbort+0x34>
 800e66e:	697b      	ldr	r3, [r7, #20]
 800e670:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e672:	2b00      	cmp	r3, #0
 800e674:	d003      	beq.n	800e67e <I2C_DMAAbort+0x6e>
 800e676:	697b      	ldr	r3, [r7, #20]
 800e678:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e67a:	2200      	movs	r2, #0
 800e67c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e67e:	697b      	ldr	r3, [r7, #20]
 800e680:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e682:	2b00      	cmp	r3, #0
 800e684:	d003      	beq.n	800e68e <I2C_DMAAbort+0x7e>
 800e686:	697b      	ldr	r3, [r7, #20]
 800e688:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e68a:	2200      	movs	r2, #0
 800e68c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e68e:	697b      	ldr	r3, [r7, #20]
 800e690:	681b      	ldr	r3, [r3, #0]
 800e692:	681a      	ldr	r2, [r3, #0]
 800e694:	697b      	ldr	r3, [r7, #20]
 800e696:	681b      	ldr	r3, [r3, #0]
 800e698:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e69c:	601a      	str	r2, [r3, #0]
 800e69e:	697b      	ldr	r3, [r7, #20]
 800e6a0:	2200      	movs	r2, #0
 800e6a2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e6a4:	697b      	ldr	r3, [r7, #20]
 800e6a6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e6a8:	2b00      	cmp	r3, #0
 800e6aa:	d003      	beq.n	800e6b4 <I2C_DMAAbort+0xa4>
 800e6ac:	697b      	ldr	r3, [r7, #20]
 800e6ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e6b0:	2200      	movs	r2, #0
 800e6b2:	651a      	str	r2, [r3, #80]	@ 0x50
 800e6b4:	697b      	ldr	r3, [r7, #20]
 800e6b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e6b8:	2b00      	cmp	r3, #0
 800e6ba:	d003      	beq.n	800e6c4 <I2C_DMAAbort+0xb4>
 800e6bc:	697b      	ldr	r3, [r7, #20]
 800e6be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e6c0:	2200      	movs	r2, #0
 800e6c2:	651a      	str	r2, [r3, #80]	@ 0x50
 800e6c4:	697b      	ldr	r3, [r7, #20]
 800e6c6:	681b      	ldr	r3, [r3, #0]
 800e6c8:	681a      	ldr	r2, [r3, #0]
 800e6ca:	697b      	ldr	r3, [r7, #20]
 800e6cc:	681b      	ldr	r3, [r3, #0]
 800e6ce:	f022 0201 	bic.w	r2, r2, #1
 800e6d2:	601a      	str	r2, [r3, #0]
 800e6d4:	697b      	ldr	r3, [r7, #20]
 800e6d6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e6da:	b2db      	uxtb	r3, r3
 800e6dc:	2b60      	cmp	r3, #96	@ 0x60
 800e6de:	d10e      	bne.n	800e6fe <I2C_DMAAbort+0xee>
 800e6e0:	697b      	ldr	r3, [r7, #20]
 800e6e2:	2220      	movs	r2, #32
 800e6e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e6e8:	697b      	ldr	r3, [r7, #20]
 800e6ea:	2200      	movs	r2, #0
 800e6ec:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e6f0:	697b      	ldr	r3, [r7, #20]
 800e6f2:	2200      	movs	r2, #0
 800e6f4:	641a      	str	r2, [r3, #64]	@ 0x40
 800e6f6:	6978      	ldr	r0, [r7, #20]
 800e6f8:	f7ff fb4d 	bl	800dd96 <HAL_I2C_AbortCpltCallback>
 800e6fc:	e027      	b.n	800e74e <I2C_DMAAbort+0x13e>
 800e6fe:	7cfb      	ldrb	r3, [r7, #19]
 800e700:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800e704:	2b28      	cmp	r3, #40	@ 0x28
 800e706:	d117      	bne.n	800e738 <I2C_DMAAbort+0x128>
 800e708:	697b      	ldr	r3, [r7, #20]
 800e70a:	681b      	ldr	r3, [r3, #0]
 800e70c:	681a      	ldr	r2, [r3, #0]
 800e70e:	697b      	ldr	r3, [r7, #20]
 800e710:	681b      	ldr	r3, [r3, #0]
 800e712:	f042 0201 	orr.w	r2, r2, #1
 800e716:	601a      	str	r2, [r3, #0]
 800e718:	697b      	ldr	r3, [r7, #20]
 800e71a:	681b      	ldr	r3, [r3, #0]
 800e71c:	681a      	ldr	r2, [r3, #0]
 800e71e:	697b      	ldr	r3, [r7, #20]
 800e720:	681b      	ldr	r3, [r3, #0]
 800e722:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e726:	601a      	str	r2, [r3, #0]
 800e728:	697b      	ldr	r3, [r7, #20]
 800e72a:	2200      	movs	r2, #0
 800e72c:	631a      	str	r2, [r3, #48]	@ 0x30
 800e72e:	697b      	ldr	r3, [r7, #20]
 800e730:	2228      	movs	r2, #40	@ 0x28
 800e732:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e736:	e007      	b.n	800e748 <I2C_DMAAbort+0x138>
 800e738:	697b      	ldr	r3, [r7, #20]
 800e73a:	2220      	movs	r2, #32
 800e73c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e740:	697b      	ldr	r3, [r7, #20]
 800e742:	2200      	movs	r2, #0
 800e744:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e748:	6978      	ldr	r0, [r7, #20]
 800e74a:	f7ff fb1a 	bl	800dd82 <HAL_I2C_ErrorCallback>
 800e74e:	bf00      	nop
 800e750:	3718      	adds	r7, #24
 800e752:	46bd      	mov	sp, r7
 800e754:	bd80      	pop	{r7, pc}
 800e756:	bf00      	nop
 800e758:	20000004 	.word	0x20000004
 800e75c:	14f8b589 	.word	0x14f8b589

0800e760 <I2C_WaitOnFlagUntilTimeout>:
 800e760:	b580      	push	{r7, lr}
 800e762:	b084      	sub	sp, #16
 800e764:	af00      	add	r7, sp, #0
 800e766:	60f8      	str	r0, [r7, #12]
 800e768:	60b9      	str	r1, [r7, #8]
 800e76a:	603b      	str	r3, [r7, #0]
 800e76c:	4613      	mov	r3, r2
 800e76e:	71fb      	strb	r3, [r7, #7]
 800e770:	e025      	b.n	800e7be <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e772:	683b      	ldr	r3, [r7, #0]
 800e774:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e778:	d021      	beq.n	800e7be <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e77a:	f7fc fc41 	bl	800b000 <HAL_GetTick>
 800e77e:	4602      	mov	r2, r0
 800e780:	69bb      	ldr	r3, [r7, #24]
 800e782:	1ad3      	subs	r3, r2, r3
 800e784:	683a      	ldr	r2, [r7, #0]
 800e786:	429a      	cmp	r2, r3
 800e788:	d302      	bcc.n	800e790 <I2C_WaitOnFlagUntilTimeout+0x30>
 800e78a:	683b      	ldr	r3, [r7, #0]
 800e78c:	2b00      	cmp	r3, #0
 800e78e:	d116      	bne.n	800e7be <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e790:	68fb      	ldr	r3, [r7, #12]
 800e792:	2200      	movs	r2, #0
 800e794:	631a      	str	r2, [r3, #48]	@ 0x30
 800e796:	68fb      	ldr	r3, [r7, #12]
 800e798:	2220      	movs	r2, #32
 800e79a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e79e:	68fb      	ldr	r3, [r7, #12]
 800e7a0:	2200      	movs	r2, #0
 800e7a2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e7a6:	68fb      	ldr	r3, [r7, #12]
 800e7a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e7aa:	f043 0220 	orr.w	r2, r3, #32
 800e7ae:	68fb      	ldr	r3, [r7, #12]
 800e7b0:	641a      	str	r2, [r3, #64]	@ 0x40
 800e7b2:	68fb      	ldr	r3, [r7, #12]
 800e7b4:	2200      	movs	r2, #0
 800e7b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e7ba:	2301      	movs	r3, #1
 800e7bc:	e023      	b.n	800e806 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800e7be:	68bb      	ldr	r3, [r7, #8]
 800e7c0:	0c1b      	lsrs	r3, r3, #16
 800e7c2:	b2db      	uxtb	r3, r3
 800e7c4:	2b01      	cmp	r3, #1
 800e7c6:	d10d      	bne.n	800e7e4 <I2C_WaitOnFlagUntilTimeout+0x84>
 800e7c8:	68fb      	ldr	r3, [r7, #12]
 800e7ca:	681b      	ldr	r3, [r3, #0]
 800e7cc:	695b      	ldr	r3, [r3, #20]
 800e7ce:	43da      	mvns	r2, r3
 800e7d0:	68bb      	ldr	r3, [r7, #8]
 800e7d2:	4013      	ands	r3, r2
 800e7d4:	b29b      	uxth	r3, r3
 800e7d6:	2b00      	cmp	r3, #0
 800e7d8:	bf0c      	ite	eq
 800e7da:	2301      	moveq	r3, #1
 800e7dc:	2300      	movne	r3, #0
 800e7de:	b2db      	uxtb	r3, r3
 800e7e0:	461a      	mov	r2, r3
 800e7e2:	e00c      	b.n	800e7fe <I2C_WaitOnFlagUntilTimeout+0x9e>
 800e7e4:	68fb      	ldr	r3, [r7, #12]
 800e7e6:	681b      	ldr	r3, [r3, #0]
 800e7e8:	699b      	ldr	r3, [r3, #24]
 800e7ea:	43da      	mvns	r2, r3
 800e7ec:	68bb      	ldr	r3, [r7, #8]
 800e7ee:	4013      	ands	r3, r2
 800e7f0:	b29b      	uxth	r3, r3
 800e7f2:	2b00      	cmp	r3, #0
 800e7f4:	bf0c      	ite	eq
 800e7f6:	2301      	moveq	r3, #1
 800e7f8:	2300      	movne	r3, #0
 800e7fa:	b2db      	uxtb	r3, r3
 800e7fc:	461a      	mov	r2, r3
 800e7fe:	79fb      	ldrb	r3, [r7, #7]
 800e800:	429a      	cmp	r2, r3
 800e802:	d0b6      	beq.n	800e772 <I2C_WaitOnFlagUntilTimeout+0x12>
 800e804:	2300      	movs	r3, #0
 800e806:	4618      	mov	r0, r3
 800e808:	3710      	adds	r7, #16
 800e80a:	46bd      	mov	sp, r7
 800e80c:	bd80      	pop	{r7, pc}

0800e80e <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800e80e:	b580      	push	{r7, lr}
 800e810:	b084      	sub	sp, #16
 800e812:	af00      	add	r7, sp, #0
 800e814:	60f8      	str	r0, [r7, #12]
 800e816:	60b9      	str	r1, [r7, #8]
 800e818:	607a      	str	r2, [r7, #4]
 800e81a:	603b      	str	r3, [r7, #0]
 800e81c:	e051      	b.n	800e8c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e81e:	68fb      	ldr	r3, [r7, #12]
 800e820:	681b      	ldr	r3, [r3, #0]
 800e822:	695b      	ldr	r3, [r3, #20]
 800e824:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800e828:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800e82c:	d123      	bne.n	800e876 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800e82e:	68fb      	ldr	r3, [r7, #12]
 800e830:	681b      	ldr	r3, [r3, #0]
 800e832:	681a      	ldr	r2, [r3, #0]
 800e834:	68fb      	ldr	r3, [r7, #12]
 800e836:	681b      	ldr	r3, [r3, #0]
 800e838:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e83c:	601a      	str	r2, [r3, #0]
 800e83e:	68fb      	ldr	r3, [r7, #12]
 800e840:	681b      	ldr	r3, [r3, #0]
 800e842:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800e846:	615a      	str	r2, [r3, #20]
 800e848:	68fb      	ldr	r3, [r7, #12]
 800e84a:	2200      	movs	r2, #0
 800e84c:	631a      	str	r2, [r3, #48]	@ 0x30
 800e84e:	68fb      	ldr	r3, [r7, #12]
 800e850:	2220      	movs	r2, #32
 800e852:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e856:	68fb      	ldr	r3, [r7, #12]
 800e858:	2200      	movs	r2, #0
 800e85a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e85e:	68fb      	ldr	r3, [r7, #12]
 800e860:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e862:	f043 0204 	orr.w	r2, r3, #4
 800e866:	68fb      	ldr	r3, [r7, #12]
 800e868:	641a      	str	r2, [r3, #64]	@ 0x40
 800e86a:	68fb      	ldr	r3, [r7, #12]
 800e86c:	2200      	movs	r2, #0
 800e86e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e872:	2301      	movs	r3, #1
 800e874:	e046      	b.n	800e904 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800e876:	687b      	ldr	r3, [r7, #4]
 800e878:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e87c:	d021      	beq.n	800e8c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e87e:	f7fc fbbf 	bl	800b000 <HAL_GetTick>
 800e882:	4602      	mov	r2, r0
 800e884:	683b      	ldr	r3, [r7, #0]
 800e886:	1ad3      	subs	r3, r2, r3
 800e888:	687a      	ldr	r2, [r7, #4]
 800e88a:	429a      	cmp	r2, r3
 800e88c:	d302      	bcc.n	800e894 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	2b00      	cmp	r3, #0
 800e892:	d116      	bne.n	800e8c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e894:	68fb      	ldr	r3, [r7, #12]
 800e896:	2200      	movs	r2, #0
 800e898:	631a      	str	r2, [r3, #48]	@ 0x30
 800e89a:	68fb      	ldr	r3, [r7, #12]
 800e89c:	2220      	movs	r2, #32
 800e89e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e8a2:	68fb      	ldr	r3, [r7, #12]
 800e8a4:	2200      	movs	r2, #0
 800e8a6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e8aa:	68fb      	ldr	r3, [r7, #12]
 800e8ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e8ae:	f043 0220 	orr.w	r2, r3, #32
 800e8b2:	68fb      	ldr	r3, [r7, #12]
 800e8b4:	641a      	str	r2, [r3, #64]	@ 0x40
 800e8b6:	68fb      	ldr	r3, [r7, #12]
 800e8b8:	2200      	movs	r2, #0
 800e8ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e8be:	2301      	movs	r3, #1
 800e8c0:	e020      	b.n	800e904 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800e8c2:	68bb      	ldr	r3, [r7, #8]
 800e8c4:	0c1b      	lsrs	r3, r3, #16
 800e8c6:	b2db      	uxtb	r3, r3
 800e8c8:	2b01      	cmp	r3, #1
 800e8ca:	d10c      	bne.n	800e8e6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 800e8cc:	68fb      	ldr	r3, [r7, #12]
 800e8ce:	681b      	ldr	r3, [r3, #0]
 800e8d0:	695b      	ldr	r3, [r3, #20]
 800e8d2:	43da      	mvns	r2, r3
 800e8d4:	68bb      	ldr	r3, [r7, #8]
 800e8d6:	4013      	ands	r3, r2
 800e8d8:	b29b      	uxth	r3, r3
 800e8da:	2b00      	cmp	r3, #0
 800e8dc:	bf14      	ite	ne
 800e8de:	2301      	movne	r3, #1
 800e8e0:	2300      	moveq	r3, #0
 800e8e2:	b2db      	uxtb	r3, r3
 800e8e4:	e00b      	b.n	800e8fe <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800e8e6:	68fb      	ldr	r3, [r7, #12]
 800e8e8:	681b      	ldr	r3, [r3, #0]
 800e8ea:	699b      	ldr	r3, [r3, #24]
 800e8ec:	43da      	mvns	r2, r3
 800e8ee:	68bb      	ldr	r3, [r7, #8]
 800e8f0:	4013      	ands	r3, r2
 800e8f2:	b29b      	uxth	r3, r3
 800e8f4:	2b00      	cmp	r3, #0
 800e8f6:	bf14      	ite	ne
 800e8f8:	2301      	movne	r3, #1
 800e8fa:	2300      	moveq	r3, #0
 800e8fc:	b2db      	uxtb	r3, r3
 800e8fe:	2b00      	cmp	r3, #0
 800e900:	d18d      	bne.n	800e81e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800e902:	2300      	movs	r3, #0
 800e904:	4618      	mov	r0, r3
 800e906:	3710      	adds	r7, #16
 800e908:	46bd      	mov	sp, r7
 800e90a:	bd80      	pop	{r7, pc}

0800e90c <I2C_WaitOnTXEFlagUntilTimeout>:
 800e90c:	b580      	push	{r7, lr}
 800e90e:	b084      	sub	sp, #16
 800e910:	af00      	add	r7, sp, #0
 800e912:	60f8      	str	r0, [r7, #12]
 800e914:	60b9      	str	r1, [r7, #8]
 800e916:	607a      	str	r2, [r7, #4]
 800e918:	e02d      	b.n	800e976 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800e91a:	68f8      	ldr	r0, [r7, #12]
 800e91c:	f000 f8ce 	bl	800eabc <I2C_IsAcknowledgeFailed>
 800e920:	4603      	mov	r3, r0
 800e922:	2b00      	cmp	r3, #0
 800e924:	d001      	beq.n	800e92a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800e926:	2301      	movs	r3, #1
 800e928:	e02d      	b.n	800e986 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800e92a:	68bb      	ldr	r3, [r7, #8]
 800e92c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e930:	d021      	beq.n	800e976 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800e932:	f7fc fb65 	bl	800b000 <HAL_GetTick>
 800e936:	4602      	mov	r2, r0
 800e938:	687b      	ldr	r3, [r7, #4]
 800e93a:	1ad3      	subs	r3, r2, r3
 800e93c:	68ba      	ldr	r2, [r7, #8]
 800e93e:	429a      	cmp	r2, r3
 800e940:	d302      	bcc.n	800e948 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800e942:	68bb      	ldr	r3, [r7, #8]
 800e944:	2b00      	cmp	r3, #0
 800e946:	d116      	bne.n	800e976 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800e948:	68fb      	ldr	r3, [r7, #12]
 800e94a:	2200      	movs	r2, #0
 800e94c:	631a      	str	r2, [r3, #48]	@ 0x30
 800e94e:	68fb      	ldr	r3, [r7, #12]
 800e950:	2220      	movs	r2, #32
 800e952:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e956:	68fb      	ldr	r3, [r7, #12]
 800e958:	2200      	movs	r2, #0
 800e95a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e95e:	68fb      	ldr	r3, [r7, #12]
 800e960:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e962:	f043 0220 	orr.w	r2, r3, #32
 800e966:	68fb      	ldr	r3, [r7, #12]
 800e968:	641a      	str	r2, [r3, #64]	@ 0x40
 800e96a:	68fb      	ldr	r3, [r7, #12]
 800e96c:	2200      	movs	r2, #0
 800e96e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e972:	2301      	movs	r3, #1
 800e974:	e007      	b.n	800e986 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800e976:	68fb      	ldr	r3, [r7, #12]
 800e978:	681b      	ldr	r3, [r3, #0]
 800e97a:	695b      	ldr	r3, [r3, #20]
 800e97c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800e980:	2b80      	cmp	r3, #128	@ 0x80
 800e982:	d1ca      	bne.n	800e91a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800e984:	2300      	movs	r3, #0
 800e986:	4618      	mov	r0, r3
 800e988:	3710      	adds	r7, #16
 800e98a:	46bd      	mov	sp, r7
 800e98c:	bd80      	pop	{r7, pc}

0800e98e <I2C_WaitOnBTFFlagUntilTimeout>:
 800e98e:	b580      	push	{r7, lr}
 800e990:	b084      	sub	sp, #16
 800e992:	af00      	add	r7, sp, #0
 800e994:	60f8      	str	r0, [r7, #12]
 800e996:	60b9      	str	r1, [r7, #8]
 800e998:	607a      	str	r2, [r7, #4]
 800e99a:	e02d      	b.n	800e9f8 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800e99c:	68f8      	ldr	r0, [r7, #12]
 800e99e:	f000 f88d 	bl	800eabc <I2C_IsAcknowledgeFailed>
 800e9a2:	4603      	mov	r3, r0
 800e9a4:	2b00      	cmp	r3, #0
 800e9a6:	d001      	beq.n	800e9ac <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800e9a8:	2301      	movs	r3, #1
 800e9aa:	e02d      	b.n	800ea08 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800e9ac:	68bb      	ldr	r3, [r7, #8]
 800e9ae:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e9b2:	d021      	beq.n	800e9f8 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800e9b4:	f7fc fb24 	bl	800b000 <HAL_GetTick>
 800e9b8:	4602      	mov	r2, r0
 800e9ba:	687b      	ldr	r3, [r7, #4]
 800e9bc:	1ad3      	subs	r3, r2, r3
 800e9be:	68ba      	ldr	r2, [r7, #8]
 800e9c0:	429a      	cmp	r2, r3
 800e9c2:	d302      	bcc.n	800e9ca <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800e9c4:	68bb      	ldr	r3, [r7, #8]
 800e9c6:	2b00      	cmp	r3, #0
 800e9c8:	d116      	bne.n	800e9f8 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800e9ca:	68fb      	ldr	r3, [r7, #12]
 800e9cc:	2200      	movs	r2, #0
 800e9ce:	631a      	str	r2, [r3, #48]	@ 0x30
 800e9d0:	68fb      	ldr	r3, [r7, #12]
 800e9d2:	2220      	movs	r2, #32
 800e9d4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e9d8:	68fb      	ldr	r3, [r7, #12]
 800e9da:	2200      	movs	r2, #0
 800e9dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e9e0:	68fb      	ldr	r3, [r7, #12]
 800e9e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e9e4:	f043 0220 	orr.w	r2, r3, #32
 800e9e8:	68fb      	ldr	r3, [r7, #12]
 800e9ea:	641a      	str	r2, [r3, #64]	@ 0x40
 800e9ec:	68fb      	ldr	r3, [r7, #12]
 800e9ee:	2200      	movs	r2, #0
 800e9f0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e9f4:	2301      	movs	r3, #1
 800e9f6:	e007      	b.n	800ea08 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800e9f8:	68fb      	ldr	r3, [r7, #12]
 800e9fa:	681b      	ldr	r3, [r3, #0]
 800e9fc:	695b      	ldr	r3, [r3, #20]
 800e9fe:	f003 0304 	and.w	r3, r3, #4
 800ea02:	2b04      	cmp	r3, #4
 800ea04:	d1ca      	bne.n	800e99c <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800ea06:	2300      	movs	r3, #0
 800ea08:	4618      	mov	r0, r3
 800ea0a:	3710      	adds	r7, #16
 800ea0c:	46bd      	mov	sp, r7
 800ea0e:	bd80      	pop	{r7, pc}

0800ea10 <I2C_WaitOnRXNEFlagUntilTimeout>:
 800ea10:	b580      	push	{r7, lr}
 800ea12:	b084      	sub	sp, #16
 800ea14:	af00      	add	r7, sp, #0
 800ea16:	60f8      	str	r0, [r7, #12]
 800ea18:	60b9      	str	r1, [r7, #8]
 800ea1a:	607a      	str	r2, [r7, #4]
 800ea1c:	e042      	b.n	800eaa4 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800ea1e:	68fb      	ldr	r3, [r7, #12]
 800ea20:	681b      	ldr	r3, [r3, #0]
 800ea22:	695b      	ldr	r3, [r3, #20]
 800ea24:	f003 0310 	and.w	r3, r3, #16
 800ea28:	2b10      	cmp	r3, #16
 800ea2a:	d119      	bne.n	800ea60 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 800ea2c:	68fb      	ldr	r3, [r7, #12]
 800ea2e:	681b      	ldr	r3, [r3, #0]
 800ea30:	f06f 0210 	mvn.w	r2, #16
 800ea34:	615a      	str	r2, [r3, #20]
 800ea36:	68fb      	ldr	r3, [r7, #12]
 800ea38:	2200      	movs	r2, #0
 800ea3a:	631a      	str	r2, [r3, #48]	@ 0x30
 800ea3c:	68fb      	ldr	r3, [r7, #12]
 800ea3e:	2220      	movs	r2, #32
 800ea40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea44:	68fb      	ldr	r3, [r7, #12]
 800ea46:	2200      	movs	r2, #0
 800ea48:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ea4c:	68fb      	ldr	r3, [r7, #12]
 800ea4e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800ea50:	68fb      	ldr	r3, [r7, #12]
 800ea52:	641a      	str	r2, [r3, #64]	@ 0x40
 800ea54:	68fb      	ldr	r3, [r7, #12]
 800ea56:	2200      	movs	r2, #0
 800ea58:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ea5c:	2301      	movs	r3, #1
 800ea5e:	e029      	b.n	800eab4 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800ea60:	f7fc face 	bl	800b000 <HAL_GetTick>
 800ea64:	4602      	mov	r2, r0
 800ea66:	687b      	ldr	r3, [r7, #4]
 800ea68:	1ad3      	subs	r3, r2, r3
 800ea6a:	68ba      	ldr	r2, [r7, #8]
 800ea6c:	429a      	cmp	r2, r3
 800ea6e:	d302      	bcc.n	800ea76 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800ea70:	68bb      	ldr	r3, [r7, #8]
 800ea72:	2b00      	cmp	r3, #0
 800ea74:	d116      	bne.n	800eaa4 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800ea76:	68fb      	ldr	r3, [r7, #12]
 800ea78:	2200      	movs	r2, #0
 800ea7a:	631a      	str	r2, [r3, #48]	@ 0x30
 800ea7c:	68fb      	ldr	r3, [r7, #12]
 800ea7e:	2220      	movs	r2, #32
 800ea80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea84:	68fb      	ldr	r3, [r7, #12]
 800ea86:	2200      	movs	r2, #0
 800ea88:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ea8c:	68fb      	ldr	r3, [r7, #12]
 800ea8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ea90:	f043 0220 	orr.w	r2, r3, #32
 800ea94:	68fb      	ldr	r3, [r7, #12]
 800ea96:	641a      	str	r2, [r3, #64]	@ 0x40
 800ea98:	68fb      	ldr	r3, [r7, #12]
 800ea9a:	2200      	movs	r2, #0
 800ea9c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eaa0:	2301      	movs	r3, #1
 800eaa2:	e007      	b.n	800eab4 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800eaa4:	68fb      	ldr	r3, [r7, #12]
 800eaa6:	681b      	ldr	r3, [r3, #0]
 800eaa8:	695b      	ldr	r3, [r3, #20]
 800eaaa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800eaae:	2b40      	cmp	r3, #64	@ 0x40
 800eab0:	d1b5      	bne.n	800ea1e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800eab2:	2300      	movs	r3, #0
 800eab4:	4618      	mov	r0, r3
 800eab6:	3710      	adds	r7, #16
 800eab8:	46bd      	mov	sp, r7
 800eaba:	bd80      	pop	{r7, pc}

0800eabc <I2C_IsAcknowledgeFailed>:
 800eabc:	b480      	push	{r7}
 800eabe:	b083      	sub	sp, #12
 800eac0:	af00      	add	r7, sp, #0
 800eac2:	6078      	str	r0, [r7, #4]
 800eac4:	687b      	ldr	r3, [r7, #4]
 800eac6:	681b      	ldr	r3, [r3, #0]
 800eac8:	695b      	ldr	r3, [r3, #20]
 800eaca:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800eace:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800ead2:	d11b      	bne.n	800eb0c <I2C_IsAcknowledgeFailed+0x50>
 800ead4:	687b      	ldr	r3, [r7, #4]
 800ead6:	681b      	ldr	r3, [r3, #0]
 800ead8:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800eadc:	615a      	str	r2, [r3, #20]
 800eade:	687b      	ldr	r3, [r7, #4]
 800eae0:	2200      	movs	r2, #0
 800eae2:	631a      	str	r2, [r3, #48]	@ 0x30
 800eae4:	687b      	ldr	r3, [r7, #4]
 800eae6:	2220      	movs	r2, #32
 800eae8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eaec:	687b      	ldr	r3, [r7, #4]
 800eaee:	2200      	movs	r2, #0
 800eaf0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800eaf4:	687b      	ldr	r3, [r7, #4]
 800eaf6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800eaf8:	f043 0204 	orr.w	r2, r3, #4
 800eafc:	687b      	ldr	r3, [r7, #4]
 800eafe:	641a      	str	r2, [r3, #64]	@ 0x40
 800eb00:	687b      	ldr	r3, [r7, #4]
 800eb02:	2200      	movs	r2, #0
 800eb04:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eb08:	2301      	movs	r3, #1
 800eb0a:	e000      	b.n	800eb0e <I2C_IsAcknowledgeFailed+0x52>
 800eb0c:	2300      	movs	r3, #0
 800eb0e:	4618      	mov	r0, r3
 800eb10:	370c      	adds	r7, #12
 800eb12:	46bd      	mov	sp, r7
 800eb14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb18:	4770      	bx	lr

0800eb1a <HAL_PCD_Init>:
 800eb1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb1c:	b08f      	sub	sp, #60	@ 0x3c
 800eb1e:	af0a      	add	r7, sp, #40	@ 0x28
 800eb20:	6078      	str	r0, [r7, #4]
 800eb22:	687b      	ldr	r3, [r7, #4]
 800eb24:	2b00      	cmp	r3, #0
 800eb26:	d101      	bne.n	800eb2c <HAL_PCD_Init+0x12>
 800eb28:	2301      	movs	r3, #1
 800eb2a:	e10f      	b.n	800ed4c <HAL_PCD_Init+0x232>
 800eb2c:	687b      	ldr	r3, [r7, #4]
 800eb2e:	681b      	ldr	r3, [r3, #0]
 800eb30:	60bb      	str	r3, [r7, #8]
 800eb32:	687b      	ldr	r3, [r7, #4]
 800eb34:	f893 34bd 	ldrb.w	r3, [r3, #1213]	@ 0x4bd
 800eb38:	b2db      	uxtb	r3, r3
 800eb3a:	2b00      	cmp	r3, #0
 800eb3c:	d106      	bne.n	800eb4c <HAL_PCD_Init+0x32>
 800eb3e:	687b      	ldr	r3, [r7, #4]
 800eb40:	2200      	movs	r2, #0
 800eb42:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800eb46:	6878      	ldr	r0, [r7, #4]
 800eb48:	f00b fd1e 	bl	801a588 <HAL_PCD_MspInit>
 800eb4c:	687b      	ldr	r3, [r7, #4]
 800eb4e:	2203      	movs	r2, #3
 800eb50:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800eb54:	68bb      	ldr	r3, [r7, #8]
 800eb56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800eb58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800eb5c:	2b00      	cmp	r3, #0
 800eb5e:	d102      	bne.n	800eb66 <HAL_PCD_Init+0x4c>
 800eb60:	687b      	ldr	r3, [r7, #4]
 800eb62:	2200      	movs	r2, #0
 800eb64:	611a      	str	r2, [r3, #16]
 800eb66:	687b      	ldr	r3, [r7, #4]
 800eb68:	681b      	ldr	r3, [r3, #0]
 800eb6a:	4618      	mov	r0, r3
 800eb6c:	f004 ff2b 	bl	80139c6 <USB_DisableGlobalInt>
 800eb70:	687b      	ldr	r3, [r7, #4]
 800eb72:	681b      	ldr	r3, [r3, #0]
 800eb74:	603b      	str	r3, [r7, #0]
 800eb76:	687e      	ldr	r6, [r7, #4]
 800eb78:	466d      	mov	r5, sp
 800eb7a:	f106 0410 	add.w	r4, r6, #16
 800eb7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800eb80:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800eb82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800eb84:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800eb86:	e894 0003 	ldmia.w	r4, {r0, r1}
 800eb8a:	e885 0003 	stmia.w	r5, {r0, r1}
 800eb8e:	1d33      	adds	r3, r6, #4
 800eb90:	cb0e      	ldmia	r3, {r1, r2, r3}
 800eb92:	6838      	ldr	r0, [r7, #0]
 800eb94:	f004 fe02 	bl	801379c <USB_CoreInit>
 800eb98:	4603      	mov	r3, r0
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	d005      	beq.n	800ebaa <HAL_PCD_Init+0x90>
 800eb9e:	687b      	ldr	r3, [r7, #4]
 800eba0:	2202      	movs	r2, #2
 800eba2:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800eba6:	2301      	movs	r3, #1
 800eba8:	e0d0      	b.n	800ed4c <HAL_PCD_Init+0x232>
 800ebaa:	687b      	ldr	r3, [r7, #4]
 800ebac:	681b      	ldr	r3, [r3, #0]
 800ebae:	2100      	movs	r1, #0
 800ebb0:	4618      	mov	r0, r3
 800ebb2:	f004 ff19 	bl	80139e8 <USB_SetCurrentMode>
 800ebb6:	2300      	movs	r3, #0
 800ebb8:	73fb      	strb	r3, [r7, #15]
 800ebba:	e04a      	b.n	800ec52 <HAL_PCD_Init+0x138>
 800ebbc:	7bfa      	ldrb	r2, [r7, #15]
 800ebbe:	6879      	ldr	r1, [r7, #4]
 800ebc0:	4613      	mov	r3, r2
 800ebc2:	00db      	lsls	r3, r3, #3
 800ebc4:	4413      	add	r3, r2
 800ebc6:	009b      	lsls	r3, r3, #2
 800ebc8:	440b      	add	r3, r1
 800ebca:	333d      	adds	r3, #61	@ 0x3d
 800ebcc:	2201      	movs	r2, #1
 800ebce:	701a      	strb	r2, [r3, #0]
 800ebd0:	7bfa      	ldrb	r2, [r7, #15]
 800ebd2:	6879      	ldr	r1, [r7, #4]
 800ebd4:	4613      	mov	r3, r2
 800ebd6:	00db      	lsls	r3, r3, #3
 800ebd8:	4413      	add	r3, r2
 800ebda:	009b      	lsls	r3, r3, #2
 800ebdc:	440b      	add	r3, r1
 800ebde:	333c      	adds	r3, #60	@ 0x3c
 800ebe0:	7bfa      	ldrb	r2, [r7, #15]
 800ebe2:	701a      	strb	r2, [r3, #0]
 800ebe4:	7bfa      	ldrb	r2, [r7, #15]
 800ebe6:	7bfb      	ldrb	r3, [r7, #15]
 800ebe8:	b298      	uxth	r0, r3
 800ebea:	6879      	ldr	r1, [r7, #4]
 800ebec:	4613      	mov	r3, r2
 800ebee:	00db      	lsls	r3, r3, #3
 800ebf0:	4413      	add	r3, r2
 800ebf2:	009b      	lsls	r3, r3, #2
 800ebf4:	440b      	add	r3, r1
 800ebf6:	3344      	adds	r3, #68	@ 0x44
 800ebf8:	4602      	mov	r2, r0
 800ebfa:	801a      	strh	r2, [r3, #0]
 800ebfc:	7bfa      	ldrb	r2, [r7, #15]
 800ebfe:	6879      	ldr	r1, [r7, #4]
 800ec00:	4613      	mov	r3, r2
 800ec02:	00db      	lsls	r3, r3, #3
 800ec04:	4413      	add	r3, r2
 800ec06:	009b      	lsls	r3, r3, #2
 800ec08:	440b      	add	r3, r1
 800ec0a:	3340      	adds	r3, #64	@ 0x40
 800ec0c:	2200      	movs	r2, #0
 800ec0e:	701a      	strb	r2, [r3, #0]
 800ec10:	7bfa      	ldrb	r2, [r7, #15]
 800ec12:	6879      	ldr	r1, [r7, #4]
 800ec14:	4613      	mov	r3, r2
 800ec16:	00db      	lsls	r3, r3, #3
 800ec18:	4413      	add	r3, r2
 800ec1a:	009b      	lsls	r3, r3, #2
 800ec1c:	440b      	add	r3, r1
 800ec1e:	3348      	adds	r3, #72	@ 0x48
 800ec20:	2200      	movs	r2, #0
 800ec22:	601a      	str	r2, [r3, #0]
 800ec24:	7bfa      	ldrb	r2, [r7, #15]
 800ec26:	6879      	ldr	r1, [r7, #4]
 800ec28:	4613      	mov	r3, r2
 800ec2a:	00db      	lsls	r3, r3, #3
 800ec2c:	4413      	add	r3, r2
 800ec2e:	009b      	lsls	r3, r3, #2
 800ec30:	440b      	add	r3, r1
 800ec32:	334c      	adds	r3, #76	@ 0x4c
 800ec34:	2200      	movs	r2, #0
 800ec36:	601a      	str	r2, [r3, #0]
 800ec38:	7bfa      	ldrb	r2, [r7, #15]
 800ec3a:	6879      	ldr	r1, [r7, #4]
 800ec3c:	4613      	mov	r3, r2
 800ec3e:	00db      	lsls	r3, r3, #3
 800ec40:	4413      	add	r3, r2
 800ec42:	009b      	lsls	r3, r3, #2
 800ec44:	440b      	add	r3, r1
 800ec46:	3354      	adds	r3, #84	@ 0x54
 800ec48:	2200      	movs	r2, #0
 800ec4a:	601a      	str	r2, [r3, #0]
 800ec4c:	7bfb      	ldrb	r3, [r7, #15]
 800ec4e:	3301      	adds	r3, #1
 800ec50:	73fb      	strb	r3, [r7, #15]
 800ec52:	7bfa      	ldrb	r2, [r7, #15]
 800ec54:	687b      	ldr	r3, [r7, #4]
 800ec56:	685b      	ldr	r3, [r3, #4]
 800ec58:	429a      	cmp	r2, r3
 800ec5a:	d3af      	bcc.n	800ebbc <HAL_PCD_Init+0xa2>
 800ec5c:	2300      	movs	r3, #0
 800ec5e:	73fb      	strb	r3, [r7, #15]
 800ec60:	e044      	b.n	800ecec <HAL_PCD_Init+0x1d2>
 800ec62:	7bfa      	ldrb	r2, [r7, #15]
 800ec64:	6879      	ldr	r1, [r7, #4]
 800ec66:	4613      	mov	r3, r2
 800ec68:	00db      	lsls	r3, r3, #3
 800ec6a:	4413      	add	r3, r2
 800ec6c:	009b      	lsls	r3, r3, #2
 800ec6e:	440b      	add	r3, r1
 800ec70:	f203 237d 	addw	r3, r3, #637	@ 0x27d
 800ec74:	2200      	movs	r2, #0
 800ec76:	701a      	strb	r2, [r3, #0]
 800ec78:	7bfa      	ldrb	r2, [r7, #15]
 800ec7a:	6879      	ldr	r1, [r7, #4]
 800ec7c:	4613      	mov	r3, r2
 800ec7e:	00db      	lsls	r3, r3, #3
 800ec80:	4413      	add	r3, r2
 800ec82:	009b      	lsls	r3, r3, #2
 800ec84:	440b      	add	r3, r1
 800ec86:	f503 731f 	add.w	r3, r3, #636	@ 0x27c
 800ec8a:	7bfa      	ldrb	r2, [r7, #15]
 800ec8c:	701a      	strb	r2, [r3, #0]
 800ec8e:	7bfa      	ldrb	r2, [r7, #15]
 800ec90:	6879      	ldr	r1, [r7, #4]
 800ec92:	4613      	mov	r3, r2
 800ec94:	00db      	lsls	r3, r3, #3
 800ec96:	4413      	add	r3, r2
 800ec98:	009b      	lsls	r3, r3, #2
 800ec9a:	440b      	add	r3, r1
 800ec9c:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 800eca0:	2200      	movs	r2, #0
 800eca2:	701a      	strb	r2, [r3, #0]
 800eca4:	7bfa      	ldrb	r2, [r7, #15]
 800eca6:	6879      	ldr	r1, [r7, #4]
 800eca8:	4613      	mov	r3, r2
 800ecaa:	00db      	lsls	r3, r3, #3
 800ecac:	4413      	add	r3, r2
 800ecae:	009b      	lsls	r3, r3, #2
 800ecb0:	440b      	add	r3, r1
 800ecb2:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800ecb6:	2200      	movs	r2, #0
 800ecb8:	601a      	str	r2, [r3, #0]
 800ecba:	7bfa      	ldrb	r2, [r7, #15]
 800ecbc:	6879      	ldr	r1, [r7, #4]
 800ecbe:	4613      	mov	r3, r2
 800ecc0:	00db      	lsls	r3, r3, #3
 800ecc2:	4413      	add	r3, r2
 800ecc4:	009b      	lsls	r3, r3, #2
 800ecc6:	440b      	add	r3, r1
 800ecc8:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 800eccc:	2200      	movs	r2, #0
 800ecce:	601a      	str	r2, [r3, #0]
 800ecd0:	7bfa      	ldrb	r2, [r7, #15]
 800ecd2:	6879      	ldr	r1, [r7, #4]
 800ecd4:	4613      	mov	r3, r2
 800ecd6:	00db      	lsls	r3, r3, #3
 800ecd8:	4413      	add	r3, r2
 800ecda:	009b      	lsls	r3, r3, #2
 800ecdc:	440b      	add	r3, r1
 800ecde:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 800ece2:	2200      	movs	r2, #0
 800ece4:	601a      	str	r2, [r3, #0]
 800ece6:	7bfb      	ldrb	r3, [r7, #15]
 800ece8:	3301      	adds	r3, #1
 800ecea:	73fb      	strb	r3, [r7, #15]
 800ecec:	7bfa      	ldrb	r2, [r7, #15]
 800ecee:	687b      	ldr	r3, [r7, #4]
 800ecf0:	685b      	ldr	r3, [r3, #4]
 800ecf2:	429a      	cmp	r2, r3
 800ecf4:	d3b5      	bcc.n	800ec62 <HAL_PCD_Init+0x148>
 800ecf6:	687b      	ldr	r3, [r7, #4]
 800ecf8:	681b      	ldr	r3, [r3, #0]
 800ecfa:	603b      	str	r3, [r7, #0]
 800ecfc:	687e      	ldr	r6, [r7, #4]
 800ecfe:	466d      	mov	r5, sp
 800ed00:	f106 0410 	add.w	r4, r6, #16
 800ed04:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ed06:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ed08:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ed0a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ed0c:	e894 0003 	ldmia.w	r4, {r0, r1}
 800ed10:	e885 0003 	stmia.w	r5, {r0, r1}
 800ed14:	1d33      	adds	r3, r6, #4
 800ed16:	cb0e      	ldmia	r3, {r1, r2, r3}
 800ed18:	6838      	ldr	r0, [r7, #0]
 800ed1a:	f004 feb1 	bl	8013a80 <USB_DevInit>
 800ed1e:	4603      	mov	r3, r0
 800ed20:	2b00      	cmp	r3, #0
 800ed22:	d005      	beq.n	800ed30 <HAL_PCD_Init+0x216>
 800ed24:	687b      	ldr	r3, [r7, #4]
 800ed26:	2202      	movs	r2, #2
 800ed28:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ed2c:	2301      	movs	r3, #1
 800ed2e:	e00d      	b.n	800ed4c <HAL_PCD_Init+0x232>
 800ed30:	687b      	ldr	r3, [r7, #4]
 800ed32:	2200      	movs	r2, #0
 800ed34:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800ed38:	687b      	ldr	r3, [r7, #4]
 800ed3a:	2201      	movs	r2, #1
 800ed3c:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ed40:	687b      	ldr	r3, [r7, #4]
 800ed42:	681b      	ldr	r3, [r3, #0]
 800ed44:	4618      	mov	r0, r3
 800ed46:	f006 f800 	bl	8014d4a <USB_DevDisconnect>
 800ed4a:	2300      	movs	r3, #0
 800ed4c:	4618      	mov	r0, r3
 800ed4e:	3714      	adds	r7, #20
 800ed50:	46bd      	mov	sp, r7
 800ed52:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ed54 <HAL_PCD_Start>:
 800ed54:	b580      	push	{r7, lr}
 800ed56:	b084      	sub	sp, #16
 800ed58:	af00      	add	r7, sp, #0
 800ed5a:	6078      	str	r0, [r7, #4]
 800ed5c:	687b      	ldr	r3, [r7, #4]
 800ed5e:	681b      	ldr	r3, [r3, #0]
 800ed60:	60fb      	str	r3, [r7, #12]
 800ed62:	687b      	ldr	r3, [r7, #4]
 800ed64:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800ed68:	2b01      	cmp	r3, #1
 800ed6a:	d101      	bne.n	800ed70 <HAL_PCD_Start+0x1c>
 800ed6c:	2302      	movs	r3, #2
 800ed6e:	e020      	b.n	800edb2 <HAL_PCD_Start+0x5e>
 800ed70:	687b      	ldr	r3, [r7, #4]
 800ed72:	2201      	movs	r2, #1
 800ed74:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800ed78:	687b      	ldr	r3, [r7, #4]
 800ed7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ed7c:	2b01      	cmp	r3, #1
 800ed7e:	d109      	bne.n	800ed94 <HAL_PCD_Start+0x40>
 800ed80:	687b      	ldr	r3, [r7, #4]
 800ed82:	699b      	ldr	r3, [r3, #24]
 800ed84:	2b01      	cmp	r3, #1
 800ed86:	d005      	beq.n	800ed94 <HAL_PCD_Start+0x40>
 800ed88:	68fb      	ldr	r3, [r7, #12]
 800ed8a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ed8c:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 800ed90:	68fb      	ldr	r3, [r7, #12]
 800ed92:	639a      	str	r2, [r3, #56]	@ 0x38
 800ed94:	687b      	ldr	r3, [r7, #4]
 800ed96:	681b      	ldr	r3, [r3, #0]
 800ed98:	4618      	mov	r0, r3
 800ed9a:	f004 fe03 	bl	80139a4 <USB_EnableGlobalInt>
 800ed9e:	687b      	ldr	r3, [r7, #4]
 800eda0:	681b      	ldr	r3, [r3, #0]
 800eda2:	4618      	mov	r0, r3
 800eda4:	f005 ffb0 	bl	8014d08 <USB_DevConnect>
 800eda8:	687b      	ldr	r3, [r7, #4]
 800edaa:	2200      	movs	r2, #0
 800edac:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800edb0:	2300      	movs	r3, #0
 800edb2:	4618      	mov	r0, r3
 800edb4:	3710      	adds	r7, #16
 800edb6:	46bd      	mov	sp, r7
 800edb8:	bd80      	pop	{r7, pc}

0800edba <HAL_PCD_IRQHandler>:
 800edba:	b590      	push	{r4, r7, lr}
 800edbc:	b08d      	sub	sp, #52	@ 0x34
 800edbe:	af00      	add	r7, sp, #0
 800edc0:	6078      	str	r0, [r7, #4]
 800edc2:	687b      	ldr	r3, [r7, #4]
 800edc4:	681b      	ldr	r3, [r3, #0]
 800edc6:	623b      	str	r3, [r7, #32]
 800edc8:	6a3b      	ldr	r3, [r7, #32]
 800edca:	61fb      	str	r3, [r7, #28]
 800edcc:	687b      	ldr	r3, [r7, #4]
 800edce:	681b      	ldr	r3, [r3, #0]
 800edd0:	4618      	mov	r0, r3
 800edd2:	f006 f86e 	bl	8014eb2 <USB_GetMode>
 800edd6:	4603      	mov	r3, r0
 800edd8:	2b00      	cmp	r3, #0
 800edda:	f040 848a 	bne.w	800f6f2 <HAL_PCD_IRQHandler+0x938>
 800edde:	687b      	ldr	r3, [r7, #4]
 800ede0:	681b      	ldr	r3, [r3, #0]
 800ede2:	4618      	mov	r0, r3
 800ede4:	f005 ffd2 	bl	8014d8c <USB_ReadInterrupts>
 800ede8:	4603      	mov	r3, r0
 800edea:	2b00      	cmp	r3, #0
 800edec:	f000 8480 	beq.w	800f6f0 <HAL_PCD_IRQHandler+0x936>
 800edf0:	69fb      	ldr	r3, [r7, #28]
 800edf2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800edf6:	689b      	ldr	r3, [r3, #8]
 800edf8:	0a1b      	lsrs	r3, r3, #8
 800edfa:	f3c3 020d 	ubfx	r2, r3, #0, #14
 800edfe:	687b      	ldr	r3, [r7, #4]
 800ee00:	f8c3 24fc 	str.w	r2, [r3, #1276]	@ 0x4fc
 800ee04:	687b      	ldr	r3, [r7, #4]
 800ee06:	681b      	ldr	r3, [r3, #0]
 800ee08:	4618      	mov	r0, r3
 800ee0a:	f005 ffbf 	bl	8014d8c <USB_ReadInterrupts>
 800ee0e:	4603      	mov	r3, r0
 800ee10:	f003 0302 	and.w	r3, r3, #2
 800ee14:	2b02      	cmp	r3, #2
 800ee16:	d107      	bne.n	800ee28 <HAL_PCD_IRQHandler+0x6e>
 800ee18:	687b      	ldr	r3, [r7, #4]
 800ee1a:	681b      	ldr	r3, [r3, #0]
 800ee1c:	695a      	ldr	r2, [r3, #20]
 800ee1e:	687b      	ldr	r3, [r7, #4]
 800ee20:	681b      	ldr	r3, [r3, #0]
 800ee22:	f002 0202 	and.w	r2, r2, #2
 800ee26:	615a      	str	r2, [r3, #20]
 800ee28:	687b      	ldr	r3, [r7, #4]
 800ee2a:	681b      	ldr	r3, [r3, #0]
 800ee2c:	4618      	mov	r0, r3
 800ee2e:	f005 ffad 	bl	8014d8c <USB_ReadInterrupts>
 800ee32:	4603      	mov	r3, r0
 800ee34:	f003 0310 	and.w	r3, r3, #16
 800ee38:	2b10      	cmp	r3, #16
 800ee3a:	d161      	bne.n	800ef00 <HAL_PCD_IRQHandler+0x146>
 800ee3c:	687b      	ldr	r3, [r7, #4]
 800ee3e:	681b      	ldr	r3, [r3, #0]
 800ee40:	699a      	ldr	r2, [r3, #24]
 800ee42:	687b      	ldr	r3, [r7, #4]
 800ee44:	681b      	ldr	r3, [r3, #0]
 800ee46:	f022 0210 	bic.w	r2, r2, #16
 800ee4a:	619a      	str	r2, [r3, #24]
 800ee4c:	6a3b      	ldr	r3, [r7, #32]
 800ee4e:	6a1b      	ldr	r3, [r3, #32]
 800ee50:	61bb      	str	r3, [r7, #24]
 800ee52:	69bb      	ldr	r3, [r7, #24]
 800ee54:	f003 020f 	and.w	r2, r3, #15
 800ee58:	4613      	mov	r3, r2
 800ee5a:	00db      	lsls	r3, r3, #3
 800ee5c:	4413      	add	r3, r2
 800ee5e:	009b      	lsls	r3, r3, #2
 800ee60:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800ee64:	687a      	ldr	r2, [r7, #4]
 800ee66:	4413      	add	r3, r2
 800ee68:	3304      	adds	r3, #4
 800ee6a:	617b      	str	r3, [r7, #20]
 800ee6c:	69bb      	ldr	r3, [r7, #24]
 800ee6e:	0c5b      	lsrs	r3, r3, #17
 800ee70:	f003 030f 	and.w	r3, r3, #15
 800ee74:	2b02      	cmp	r3, #2
 800ee76:	d124      	bne.n	800eec2 <HAL_PCD_IRQHandler+0x108>
 800ee78:	69ba      	ldr	r2, [r7, #24]
 800ee7a:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 800ee7e:	4013      	ands	r3, r2
 800ee80:	2b00      	cmp	r3, #0
 800ee82:	d035      	beq.n	800eef0 <HAL_PCD_IRQHandler+0x136>
 800ee84:	697b      	ldr	r3, [r7, #20]
 800ee86:	6919      	ldr	r1, [r3, #16]
 800ee88:	69bb      	ldr	r3, [r7, #24]
 800ee8a:	091b      	lsrs	r3, r3, #4
 800ee8c:	b29b      	uxth	r3, r3
 800ee8e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800ee92:	b29b      	uxth	r3, r3
 800ee94:	461a      	mov	r2, r3
 800ee96:	6a38      	ldr	r0, [r7, #32]
 800ee98:	f005 fde4 	bl	8014a64 <USB_ReadPacket>
 800ee9c:	697b      	ldr	r3, [r7, #20]
 800ee9e:	691a      	ldr	r2, [r3, #16]
 800eea0:	69bb      	ldr	r3, [r7, #24]
 800eea2:	091b      	lsrs	r3, r3, #4
 800eea4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800eea8:	441a      	add	r2, r3
 800eeaa:	697b      	ldr	r3, [r7, #20]
 800eeac:	611a      	str	r2, [r3, #16]
 800eeae:	697b      	ldr	r3, [r7, #20]
 800eeb0:	6a1a      	ldr	r2, [r3, #32]
 800eeb2:	69bb      	ldr	r3, [r7, #24]
 800eeb4:	091b      	lsrs	r3, r3, #4
 800eeb6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800eeba:	441a      	add	r2, r3
 800eebc:	697b      	ldr	r3, [r7, #20]
 800eebe:	621a      	str	r2, [r3, #32]
 800eec0:	e016      	b.n	800eef0 <HAL_PCD_IRQHandler+0x136>
 800eec2:	69bb      	ldr	r3, [r7, #24]
 800eec4:	0c5b      	lsrs	r3, r3, #17
 800eec6:	f003 030f 	and.w	r3, r3, #15
 800eeca:	2b06      	cmp	r3, #6
 800eecc:	d110      	bne.n	800eef0 <HAL_PCD_IRQHandler+0x136>
 800eece:	687b      	ldr	r3, [r7, #4]
 800eed0:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800eed4:	2208      	movs	r2, #8
 800eed6:	4619      	mov	r1, r3
 800eed8:	6a38      	ldr	r0, [r7, #32]
 800eeda:	f005 fdc3 	bl	8014a64 <USB_ReadPacket>
 800eede:	697b      	ldr	r3, [r7, #20]
 800eee0:	6a1a      	ldr	r2, [r3, #32]
 800eee2:	69bb      	ldr	r3, [r7, #24]
 800eee4:	091b      	lsrs	r3, r3, #4
 800eee6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800eeea:	441a      	add	r2, r3
 800eeec:	697b      	ldr	r3, [r7, #20]
 800eeee:	621a      	str	r2, [r3, #32]
 800eef0:	687b      	ldr	r3, [r7, #4]
 800eef2:	681b      	ldr	r3, [r3, #0]
 800eef4:	699a      	ldr	r2, [r3, #24]
 800eef6:	687b      	ldr	r3, [r7, #4]
 800eef8:	681b      	ldr	r3, [r3, #0]
 800eefa:	f042 0210 	orr.w	r2, r2, #16
 800eefe:	619a      	str	r2, [r3, #24]
 800ef00:	687b      	ldr	r3, [r7, #4]
 800ef02:	681b      	ldr	r3, [r3, #0]
 800ef04:	4618      	mov	r0, r3
 800ef06:	f005 ff41 	bl	8014d8c <USB_ReadInterrupts>
 800ef0a:	4603      	mov	r3, r0
 800ef0c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800ef10:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 800ef14:	f040 80a7 	bne.w	800f066 <HAL_PCD_IRQHandler+0x2ac>
 800ef18:	2300      	movs	r3, #0
 800ef1a:	627b      	str	r3, [r7, #36]	@ 0x24
 800ef1c:	687b      	ldr	r3, [r7, #4]
 800ef1e:	681b      	ldr	r3, [r3, #0]
 800ef20:	4618      	mov	r0, r3
 800ef22:	f005 ff46 	bl	8014db2 <USB_ReadDevAllOutEpInterrupt>
 800ef26:	62b8      	str	r0, [r7, #40]	@ 0x28
 800ef28:	e099      	b.n	800f05e <HAL_PCD_IRQHandler+0x2a4>
 800ef2a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ef2c:	f003 0301 	and.w	r3, r3, #1
 800ef30:	2b00      	cmp	r3, #0
 800ef32:	f000 808e 	beq.w	800f052 <HAL_PCD_IRQHandler+0x298>
 800ef36:	687b      	ldr	r3, [r7, #4]
 800ef38:	681b      	ldr	r3, [r3, #0]
 800ef3a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800ef3c:	b2d2      	uxtb	r2, r2
 800ef3e:	4611      	mov	r1, r2
 800ef40:	4618      	mov	r0, r3
 800ef42:	f005 ff6a 	bl	8014e1a <USB_ReadDevOutEPInterrupt>
 800ef46:	6138      	str	r0, [r7, #16]
 800ef48:	693b      	ldr	r3, [r7, #16]
 800ef4a:	f003 0301 	and.w	r3, r3, #1
 800ef4e:	2b00      	cmp	r3, #0
 800ef50:	d00c      	beq.n	800ef6c <HAL_PCD_IRQHandler+0x1b2>
 800ef52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ef54:	015a      	lsls	r2, r3, #5
 800ef56:	69fb      	ldr	r3, [r7, #28]
 800ef58:	4413      	add	r3, r2
 800ef5a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ef5e:	461a      	mov	r2, r3
 800ef60:	2301      	movs	r3, #1
 800ef62:	6093      	str	r3, [r2, #8]
 800ef64:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800ef66:	6878      	ldr	r0, [r7, #4]
 800ef68:	f000 fec2 	bl	800fcf0 <PCD_EP_OutXfrComplete_int>
 800ef6c:	693b      	ldr	r3, [r7, #16]
 800ef6e:	f003 0308 	and.w	r3, r3, #8
 800ef72:	2b00      	cmp	r3, #0
 800ef74:	d00c      	beq.n	800ef90 <HAL_PCD_IRQHandler+0x1d6>
 800ef76:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ef78:	015a      	lsls	r2, r3, #5
 800ef7a:	69fb      	ldr	r3, [r7, #28]
 800ef7c:	4413      	add	r3, r2
 800ef7e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ef82:	461a      	mov	r2, r3
 800ef84:	2308      	movs	r3, #8
 800ef86:	6093      	str	r3, [r2, #8]
 800ef88:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800ef8a:	6878      	ldr	r0, [r7, #4]
 800ef8c:	f000 ff98 	bl	800fec0 <PCD_EP_OutSetupPacket_int>
 800ef90:	693b      	ldr	r3, [r7, #16]
 800ef92:	f003 0310 	and.w	r3, r3, #16
 800ef96:	2b00      	cmp	r3, #0
 800ef98:	d008      	beq.n	800efac <HAL_PCD_IRQHandler+0x1f2>
 800ef9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ef9c:	015a      	lsls	r2, r3, #5
 800ef9e:	69fb      	ldr	r3, [r7, #28]
 800efa0:	4413      	add	r3, r2
 800efa2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800efa6:	461a      	mov	r2, r3
 800efa8:	2310      	movs	r3, #16
 800efaa:	6093      	str	r3, [r2, #8]
 800efac:	693b      	ldr	r3, [r7, #16]
 800efae:	f003 0302 	and.w	r3, r3, #2
 800efb2:	2b00      	cmp	r3, #0
 800efb4:	d030      	beq.n	800f018 <HAL_PCD_IRQHandler+0x25e>
 800efb6:	6a3b      	ldr	r3, [r7, #32]
 800efb8:	695b      	ldr	r3, [r3, #20]
 800efba:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800efbe:	2b80      	cmp	r3, #128	@ 0x80
 800efc0:	d109      	bne.n	800efd6 <HAL_PCD_IRQHandler+0x21c>
 800efc2:	69fb      	ldr	r3, [r7, #28]
 800efc4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800efc8:	685b      	ldr	r3, [r3, #4]
 800efca:	69fa      	ldr	r2, [r7, #28]
 800efcc:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800efd0:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800efd4:	6053      	str	r3, [r2, #4]
 800efd6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800efd8:	4613      	mov	r3, r2
 800efda:	00db      	lsls	r3, r3, #3
 800efdc:	4413      	add	r3, r2
 800efde:	009b      	lsls	r3, r3, #2
 800efe0:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800efe4:	687a      	ldr	r2, [r7, #4]
 800efe6:	4413      	add	r3, r2
 800efe8:	3304      	adds	r3, #4
 800efea:	617b      	str	r3, [r7, #20]
 800efec:	697b      	ldr	r3, [r7, #20]
 800efee:	78db      	ldrb	r3, [r3, #3]
 800eff0:	2b01      	cmp	r3, #1
 800eff2:	d108      	bne.n	800f006 <HAL_PCD_IRQHandler+0x24c>
 800eff4:	697b      	ldr	r3, [r7, #20]
 800eff6:	2200      	movs	r2, #0
 800eff8:	70da      	strb	r2, [r3, #3]
 800effa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800effc:	b2db      	uxtb	r3, r3
 800effe:	4619      	mov	r1, r3
 800f000:	6878      	ldr	r0, [r7, #4]
 800f002:	f00b fbc7 	bl	801a794 <HAL_PCD_ISOOUTIncompleteCallback>
 800f006:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f008:	015a      	lsls	r2, r3, #5
 800f00a:	69fb      	ldr	r3, [r7, #28]
 800f00c:	4413      	add	r3, r2
 800f00e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f012:	461a      	mov	r2, r3
 800f014:	2302      	movs	r3, #2
 800f016:	6093      	str	r3, [r2, #8]
 800f018:	693b      	ldr	r3, [r7, #16]
 800f01a:	f003 0320 	and.w	r3, r3, #32
 800f01e:	2b00      	cmp	r3, #0
 800f020:	d008      	beq.n	800f034 <HAL_PCD_IRQHandler+0x27a>
 800f022:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f024:	015a      	lsls	r2, r3, #5
 800f026:	69fb      	ldr	r3, [r7, #28]
 800f028:	4413      	add	r3, r2
 800f02a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f02e:	461a      	mov	r2, r3
 800f030:	2320      	movs	r3, #32
 800f032:	6093      	str	r3, [r2, #8]
 800f034:	693b      	ldr	r3, [r7, #16]
 800f036:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f03a:	2b00      	cmp	r3, #0
 800f03c:	d009      	beq.n	800f052 <HAL_PCD_IRQHandler+0x298>
 800f03e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f040:	015a      	lsls	r2, r3, #5
 800f042:	69fb      	ldr	r3, [r7, #28]
 800f044:	4413      	add	r3, r2
 800f046:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f04a:	461a      	mov	r2, r3
 800f04c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800f050:	6093      	str	r3, [r2, #8]
 800f052:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f054:	3301      	adds	r3, #1
 800f056:	627b      	str	r3, [r7, #36]	@ 0x24
 800f058:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f05a:	085b      	lsrs	r3, r3, #1
 800f05c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800f05e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f060:	2b00      	cmp	r3, #0
 800f062:	f47f af62 	bne.w	800ef2a <HAL_PCD_IRQHandler+0x170>
 800f066:	687b      	ldr	r3, [r7, #4]
 800f068:	681b      	ldr	r3, [r3, #0]
 800f06a:	4618      	mov	r0, r3
 800f06c:	f005 fe8e 	bl	8014d8c <USB_ReadInterrupts>
 800f070:	4603      	mov	r3, r0
 800f072:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800f076:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800f07a:	f040 80db 	bne.w	800f234 <HAL_PCD_IRQHandler+0x47a>
 800f07e:	687b      	ldr	r3, [r7, #4]
 800f080:	681b      	ldr	r3, [r3, #0]
 800f082:	4618      	mov	r0, r3
 800f084:	f005 feaf 	bl	8014de6 <USB_ReadDevAllInEpInterrupt>
 800f088:	62b8      	str	r0, [r7, #40]	@ 0x28
 800f08a:	2300      	movs	r3, #0
 800f08c:	627b      	str	r3, [r7, #36]	@ 0x24
 800f08e:	e0cd      	b.n	800f22c <HAL_PCD_IRQHandler+0x472>
 800f090:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f092:	f003 0301 	and.w	r3, r3, #1
 800f096:	2b00      	cmp	r3, #0
 800f098:	f000 80c2 	beq.w	800f220 <HAL_PCD_IRQHandler+0x466>
 800f09c:	687b      	ldr	r3, [r7, #4]
 800f09e:	681b      	ldr	r3, [r3, #0]
 800f0a0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f0a2:	b2d2      	uxtb	r2, r2
 800f0a4:	4611      	mov	r1, r2
 800f0a6:	4618      	mov	r0, r3
 800f0a8:	f005 fed5 	bl	8014e56 <USB_ReadDevInEPInterrupt>
 800f0ac:	6138      	str	r0, [r7, #16]
 800f0ae:	693b      	ldr	r3, [r7, #16]
 800f0b0:	f003 0301 	and.w	r3, r3, #1
 800f0b4:	2b00      	cmp	r3, #0
 800f0b6:	d057      	beq.n	800f168 <HAL_PCD_IRQHandler+0x3ae>
 800f0b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f0ba:	f003 030f 	and.w	r3, r3, #15
 800f0be:	2201      	movs	r2, #1
 800f0c0:	fa02 f303 	lsl.w	r3, r2, r3
 800f0c4:	60fb      	str	r3, [r7, #12]
 800f0c6:	69fb      	ldr	r3, [r7, #28]
 800f0c8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f0cc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f0ce:	68fb      	ldr	r3, [r7, #12]
 800f0d0:	43db      	mvns	r3, r3
 800f0d2:	69f9      	ldr	r1, [r7, #28]
 800f0d4:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800f0d8:	4013      	ands	r3, r2
 800f0da:	634b      	str	r3, [r1, #52]	@ 0x34
 800f0dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f0de:	015a      	lsls	r2, r3, #5
 800f0e0:	69fb      	ldr	r3, [r7, #28]
 800f0e2:	4413      	add	r3, r2
 800f0e4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f0e8:	461a      	mov	r2, r3
 800f0ea:	2301      	movs	r3, #1
 800f0ec:	6093      	str	r3, [r2, #8]
 800f0ee:	687b      	ldr	r3, [r7, #4]
 800f0f0:	691b      	ldr	r3, [r3, #16]
 800f0f2:	2b01      	cmp	r3, #1
 800f0f4:	d132      	bne.n	800f15c <HAL_PCD_IRQHandler+0x3a2>
 800f0f6:	6879      	ldr	r1, [r7, #4]
 800f0f8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f0fa:	4613      	mov	r3, r2
 800f0fc:	00db      	lsls	r3, r3, #3
 800f0fe:	4413      	add	r3, r2
 800f100:	009b      	lsls	r3, r3, #2
 800f102:	440b      	add	r3, r1
 800f104:	334c      	adds	r3, #76	@ 0x4c
 800f106:	6819      	ldr	r1, [r3, #0]
 800f108:	6878      	ldr	r0, [r7, #4]
 800f10a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f10c:	4613      	mov	r3, r2
 800f10e:	00db      	lsls	r3, r3, #3
 800f110:	4413      	add	r3, r2
 800f112:	009b      	lsls	r3, r3, #2
 800f114:	4403      	add	r3, r0
 800f116:	3348      	adds	r3, #72	@ 0x48
 800f118:	681b      	ldr	r3, [r3, #0]
 800f11a:	4419      	add	r1, r3
 800f11c:	6878      	ldr	r0, [r7, #4]
 800f11e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f120:	4613      	mov	r3, r2
 800f122:	00db      	lsls	r3, r3, #3
 800f124:	4413      	add	r3, r2
 800f126:	009b      	lsls	r3, r3, #2
 800f128:	4403      	add	r3, r0
 800f12a:	334c      	adds	r3, #76	@ 0x4c
 800f12c:	6019      	str	r1, [r3, #0]
 800f12e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f130:	2b00      	cmp	r3, #0
 800f132:	d113      	bne.n	800f15c <HAL_PCD_IRQHandler+0x3a2>
 800f134:	6879      	ldr	r1, [r7, #4]
 800f136:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f138:	4613      	mov	r3, r2
 800f13a:	00db      	lsls	r3, r3, #3
 800f13c:	4413      	add	r3, r2
 800f13e:	009b      	lsls	r3, r3, #2
 800f140:	440b      	add	r3, r1
 800f142:	3354      	adds	r3, #84	@ 0x54
 800f144:	681b      	ldr	r3, [r3, #0]
 800f146:	2b00      	cmp	r3, #0
 800f148:	d108      	bne.n	800f15c <HAL_PCD_IRQHandler+0x3a2>
 800f14a:	687b      	ldr	r3, [r7, #4]
 800f14c:	6818      	ldr	r0, [r3, #0]
 800f14e:	687b      	ldr	r3, [r7, #4]
 800f150:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f154:	461a      	mov	r2, r3
 800f156:	2101      	movs	r1, #1
 800f158:	f005 fedc 	bl	8014f14 <USB_EP0_OutStart>
 800f15c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f15e:	b2db      	uxtb	r3, r3
 800f160:	4619      	mov	r1, r3
 800f162:	6878      	ldr	r0, [r7, #4]
 800f164:	f00b fa91 	bl	801a68a <HAL_PCD_DataInStageCallback>
 800f168:	693b      	ldr	r3, [r7, #16]
 800f16a:	f003 0308 	and.w	r3, r3, #8
 800f16e:	2b00      	cmp	r3, #0
 800f170:	d008      	beq.n	800f184 <HAL_PCD_IRQHandler+0x3ca>
 800f172:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f174:	015a      	lsls	r2, r3, #5
 800f176:	69fb      	ldr	r3, [r7, #28]
 800f178:	4413      	add	r3, r2
 800f17a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f17e:	461a      	mov	r2, r3
 800f180:	2308      	movs	r3, #8
 800f182:	6093      	str	r3, [r2, #8]
 800f184:	693b      	ldr	r3, [r7, #16]
 800f186:	f003 0310 	and.w	r3, r3, #16
 800f18a:	2b00      	cmp	r3, #0
 800f18c:	d008      	beq.n	800f1a0 <HAL_PCD_IRQHandler+0x3e6>
 800f18e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f190:	015a      	lsls	r2, r3, #5
 800f192:	69fb      	ldr	r3, [r7, #28]
 800f194:	4413      	add	r3, r2
 800f196:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f19a:	461a      	mov	r2, r3
 800f19c:	2310      	movs	r3, #16
 800f19e:	6093      	str	r3, [r2, #8]
 800f1a0:	693b      	ldr	r3, [r7, #16]
 800f1a2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f1a6:	2b00      	cmp	r3, #0
 800f1a8:	d008      	beq.n	800f1bc <HAL_PCD_IRQHandler+0x402>
 800f1aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1ac:	015a      	lsls	r2, r3, #5
 800f1ae:	69fb      	ldr	r3, [r7, #28]
 800f1b0:	4413      	add	r3, r2
 800f1b2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f1b6:	461a      	mov	r2, r3
 800f1b8:	2340      	movs	r3, #64	@ 0x40
 800f1ba:	6093      	str	r3, [r2, #8]
 800f1bc:	693b      	ldr	r3, [r7, #16]
 800f1be:	f003 0302 	and.w	r3, r3, #2
 800f1c2:	2b00      	cmp	r3, #0
 800f1c4:	d023      	beq.n	800f20e <HAL_PCD_IRQHandler+0x454>
 800f1c6:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f1c8:	6a38      	ldr	r0, [r7, #32]
 800f1ca:	f004 fdbd 	bl	8013d48 <USB_FlushTxFifo>
 800f1ce:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f1d0:	4613      	mov	r3, r2
 800f1d2:	00db      	lsls	r3, r3, #3
 800f1d4:	4413      	add	r3, r2
 800f1d6:	009b      	lsls	r3, r3, #2
 800f1d8:	3338      	adds	r3, #56	@ 0x38
 800f1da:	687a      	ldr	r2, [r7, #4]
 800f1dc:	4413      	add	r3, r2
 800f1de:	3304      	adds	r3, #4
 800f1e0:	617b      	str	r3, [r7, #20]
 800f1e2:	697b      	ldr	r3, [r7, #20]
 800f1e4:	78db      	ldrb	r3, [r3, #3]
 800f1e6:	2b01      	cmp	r3, #1
 800f1e8:	d108      	bne.n	800f1fc <HAL_PCD_IRQHandler+0x442>
 800f1ea:	697b      	ldr	r3, [r7, #20]
 800f1ec:	2200      	movs	r2, #0
 800f1ee:	70da      	strb	r2, [r3, #3]
 800f1f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1f2:	b2db      	uxtb	r3, r3
 800f1f4:	4619      	mov	r1, r3
 800f1f6:	6878      	ldr	r0, [r7, #4]
 800f1f8:	f00b fade 	bl	801a7b8 <HAL_PCD_ISOINIncompleteCallback>
 800f1fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1fe:	015a      	lsls	r2, r3, #5
 800f200:	69fb      	ldr	r3, [r7, #28]
 800f202:	4413      	add	r3, r2
 800f204:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f208:	461a      	mov	r2, r3
 800f20a:	2302      	movs	r3, #2
 800f20c:	6093      	str	r3, [r2, #8]
 800f20e:	693b      	ldr	r3, [r7, #16]
 800f210:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f214:	2b00      	cmp	r3, #0
 800f216:	d003      	beq.n	800f220 <HAL_PCD_IRQHandler+0x466>
 800f218:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f21a:	6878      	ldr	r0, [r7, #4]
 800f21c:	f000 fcdb 	bl	800fbd6 <PCD_WriteEmptyTxFifo>
 800f220:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f222:	3301      	adds	r3, #1
 800f224:	627b      	str	r3, [r7, #36]	@ 0x24
 800f226:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f228:	085b      	lsrs	r3, r3, #1
 800f22a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800f22c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f22e:	2b00      	cmp	r3, #0
 800f230:	f47f af2e 	bne.w	800f090 <HAL_PCD_IRQHandler+0x2d6>
 800f234:	687b      	ldr	r3, [r7, #4]
 800f236:	681b      	ldr	r3, [r3, #0]
 800f238:	4618      	mov	r0, r3
 800f23a:	f005 fda7 	bl	8014d8c <USB_ReadInterrupts>
 800f23e:	4603      	mov	r3, r0
 800f240:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800f244:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800f248:	d122      	bne.n	800f290 <HAL_PCD_IRQHandler+0x4d6>
 800f24a:	69fb      	ldr	r3, [r7, #28]
 800f24c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f250:	685b      	ldr	r3, [r3, #4]
 800f252:	69fa      	ldr	r2, [r7, #28]
 800f254:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f258:	f023 0301 	bic.w	r3, r3, #1
 800f25c:	6053      	str	r3, [r2, #4]
 800f25e:	687b      	ldr	r3, [r7, #4]
 800f260:	f893 34f4 	ldrb.w	r3, [r3, #1268]	@ 0x4f4
 800f264:	2b01      	cmp	r3, #1
 800f266:	d108      	bne.n	800f27a <HAL_PCD_IRQHandler+0x4c0>
 800f268:	687b      	ldr	r3, [r7, #4]
 800f26a:	2200      	movs	r2, #0
 800f26c:	f883 24f4 	strb.w	r2, [r3, #1268]	@ 0x4f4
 800f270:	2100      	movs	r1, #0
 800f272:	6878      	ldr	r0, [r7, #4]
 800f274:	f000 fec2 	bl	800fffc <HAL_PCDEx_LPM_Callback>
 800f278:	e002      	b.n	800f280 <HAL_PCD_IRQHandler+0x4c6>
 800f27a:	6878      	ldr	r0, [r7, #4]
 800f27c:	f00b fa7c 	bl	801a778 <HAL_PCD_ResumeCallback>
 800f280:	687b      	ldr	r3, [r7, #4]
 800f282:	681b      	ldr	r3, [r3, #0]
 800f284:	695a      	ldr	r2, [r3, #20]
 800f286:	687b      	ldr	r3, [r7, #4]
 800f288:	681b      	ldr	r3, [r3, #0]
 800f28a:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 800f28e:	615a      	str	r2, [r3, #20]
 800f290:	687b      	ldr	r3, [r7, #4]
 800f292:	681b      	ldr	r3, [r3, #0]
 800f294:	4618      	mov	r0, r3
 800f296:	f005 fd79 	bl	8014d8c <USB_ReadInterrupts>
 800f29a:	4603      	mov	r3, r0
 800f29c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800f2a0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800f2a4:	d112      	bne.n	800f2cc <HAL_PCD_IRQHandler+0x512>
 800f2a6:	69fb      	ldr	r3, [r7, #28]
 800f2a8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f2ac:	689b      	ldr	r3, [r3, #8]
 800f2ae:	f003 0301 	and.w	r3, r3, #1
 800f2b2:	2b01      	cmp	r3, #1
 800f2b4:	d102      	bne.n	800f2bc <HAL_PCD_IRQHandler+0x502>
 800f2b6:	6878      	ldr	r0, [r7, #4]
 800f2b8:	f00b fa38 	bl	801a72c <HAL_PCD_SuspendCallback>
 800f2bc:	687b      	ldr	r3, [r7, #4]
 800f2be:	681b      	ldr	r3, [r3, #0]
 800f2c0:	695a      	ldr	r2, [r3, #20]
 800f2c2:	687b      	ldr	r3, [r7, #4]
 800f2c4:	681b      	ldr	r3, [r3, #0]
 800f2c6:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 800f2ca:	615a      	str	r2, [r3, #20]
 800f2cc:	687b      	ldr	r3, [r7, #4]
 800f2ce:	681b      	ldr	r3, [r3, #0]
 800f2d0:	4618      	mov	r0, r3
 800f2d2:	f005 fd5b 	bl	8014d8c <USB_ReadInterrupts>
 800f2d6:	4603      	mov	r3, r0
 800f2d8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800f2dc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f2e0:	f040 80b7 	bne.w	800f452 <HAL_PCD_IRQHandler+0x698>
 800f2e4:	69fb      	ldr	r3, [r7, #28]
 800f2e6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f2ea:	685b      	ldr	r3, [r3, #4]
 800f2ec:	69fa      	ldr	r2, [r7, #28]
 800f2ee:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f2f2:	f023 0301 	bic.w	r3, r3, #1
 800f2f6:	6053      	str	r3, [r2, #4]
 800f2f8:	687b      	ldr	r3, [r7, #4]
 800f2fa:	681b      	ldr	r3, [r3, #0]
 800f2fc:	2110      	movs	r1, #16
 800f2fe:	4618      	mov	r0, r3
 800f300:	f004 fd22 	bl	8013d48 <USB_FlushTxFifo>
 800f304:	2300      	movs	r3, #0
 800f306:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800f308:	e046      	b.n	800f398 <HAL_PCD_IRQHandler+0x5de>
 800f30a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f30c:	015a      	lsls	r2, r3, #5
 800f30e:	69fb      	ldr	r3, [r7, #28]
 800f310:	4413      	add	r3, r2
 800f312:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f316:	461a      	mov	r2, r3
 800f318:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800f31c:	6093      	str	r3, [r2, #8]
 800f31e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f320:	015a      	lsls	r2, r3, #5
 800f322:	69fb      	ldr	r3, [r7, #28]
 800f324:	4413      	add	r3, r2
 800f326:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f32a:	681b      	ldr	r3, [r3, #0]
 800f32c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f32e:	0151      	lsls	r1, r2, #5
 800f330:	69fa      	ldr	r2, [r7, #28]
 800f332:	440a      	add	r2, r1
 800f334:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800f338:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800f33c:	6013      	str	r3, [r2, #0]
 800f33e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f340:	015a      	lsls	r2, r3, #5
 800f342:	69fb      	ldr	r3, [r7, #28]
 800f344:	4413      	add	r3, r2
 800f346:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f34a:	461a      	mov	r2, r3
 800f34c:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800f350:	6093      	str	r3, [r2, #8]
 800f352:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f354:	015a      	lsls	r2, r3, #5
 800f356:	69fb      	ldr	r3, [r7, #28]
 800f358:	4413      	add	r3, r2
 800f35a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f35e:	681b      	ldr	r3, [r3, #0]
 800f360:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f362:	0151      	lsls	r1, r2, #5
 800f364:	69fa      	ldr	r2, [r7, #28]
 800f366:	440a      	add	r2, r1
 800f368:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800f36c:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800f370:	6013      	str	r3, [r2, #0]
 800f372:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f374:	015a      	lsls	r2, r3, #5
 800f376:	69fb      	ldr	r3, [r7, #28]
 800f378:	4413      	add	r3, r2
 800f37a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f37e:	681b      	ldr	r3, [r3, #0]
 800f380:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f382:	0151      	lsls	r1, r2, #5
 800f384:	69fa      	ldr	r2, [r7, #28]
 800f386:	440a      	add	r2, r1
 800f388:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800f38c:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800f390:	6013      	str	r3, [r2, #0]
 800f392:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f394:	3301      	adds	r3, #1
 800f396:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800f398:	687b      	ldr	r3, [r7, #4]
 800f39a:	685b      	ldr	r3, [r3, #4]
 800f39c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f39e:	429a      	cmp	r2, r3
 800f3a0:	d3b3      	bcc.n	800f30a <HAL_PCD_IRQHandler+0x550>
 800f3a2:	69fb      	ldr	r3, [r7, #28]
 800f3a4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f3a8:	69db      	ldr	r3, [r3, #28]
 800f3aa:	69fa      	ldr	r2, [r7, #28]
 800f3ac:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f3b0:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800f3b4:	61d3      	str	r3, [r2, #28]
 800f3b6:	687b      	ldr	r3, [r7, #4]
 800f3b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f3ba:	2b00      	cmp	r3, #0
 800f3bc:	d016      	beq.n	800f3ec <HAL_PCD_IRQHandler+0x632>
 800f3be:	69fb      	ldr	r3, [r7, #28]
 800f3c0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f3c4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800f3c8:	69fa      	ldr	r2, [r7, #28]
 800f3ca:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f3ce:	f043 030b 	orr.w	r3, r3, #11
 800f3d2:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 800f3d6:	69fb      	ldr	r3, [r7, #28]
 800f3d8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f3dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f3de:	69fa      	ldr	r2, [r7, #28]
 800f3e0:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f3e4:	f043 030b 	orr.w	r3, r3, #11
 800f3e8:	6453      	str	r3, [r2, #68]	@ 0x44
 800f3ea:	e015      	b.n	800f418 <HAL_PCD_IRQHandler+0x65e>
 800f3ec:	69fb      	ldr	r3, [r7, #28]
 800f3ee:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f3f2:	695b      	ldr	r3, [r3, #20]
 800f3f4:	69fa      	ldr	r2, [r7, #28]
 800f3f6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f3fa:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800f3fe:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 800f402:	6153      	str	r3, [r2, #20]
 800f404:	69fb      	ldr	r3, [r7, #28]
 800f406:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f40a:	691b      	ldr	r3, [r3, #16]
 800f40c:	69fa      	ldr	r2, [r7, #28]
 800f40e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f412:	f043 030b 	orr.w	r3, r3, #11
 800f416:	6113      	str	r3, [r2, #16]
 800f418:	69fb      	ldr	r3, [r7, #28]
 800f41a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f41e:	681b      	ldr	r3, [r3, #0]
 800f420:	69fa      	ldr	r2, [r7, #28]
 800f422:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f426:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800f42a:	6013      	str	r3, [r2, #0]
 800f42c:	687b      	ldr	r3, [r7, #4]
 800f42e:	6818      	ldr	r0, [r3, #0]
 800f430:	687b      	ldr	r3, [r7, #4]
 800f432:	691b      	ldr	r3, [r3, #16]
 800f434:	b2d9      	uxtb	r1, r3
 800f436:	687b      	ldr	r3, [r7, #4]
 800f438:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f43c:	461a      	mov	r2, r3
 800f43e:	f005 fd69 	bl	8014f14 <USB_EP0_OutStart>
 800f442:	687b      	ldr	r3, [r7, #4]
 800f444:	681b      	ldr	r3, [r3, #0]
 800f446:	695a      	ldr	r2, [r3, #20]
 800f448:	687b      	ldr	r3, [r7, #4]
 800f44a:	681b      	ldr	r3, [r3, #0]
 800f44c:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 800f450:	615a      	str	r2, [r3, #20]
 800f452:	687b      	ldr	r3, [r7, #4]
 800f454:	681b      	ldr	r3, [r3, #0]
 800f456:	4618      	mov	r0, r3
 800f458:	f005 fc98 	bl	8014d8c <USB_ReadInterrupts>
 800f45c:	4603      	mov	r3, r0
 800f45e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f462:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f466:	d124      	bne.n	800f4b2 <HAL_PCD_IRQHandler+0x6f8>
 800f468:	687b      	ldr	r3, [r7, #4]
 800f46a:	681b      	ldr	r3, [r3, #0]
 800f46c:	4618      	mov	r0, r3
 800f46e:	f005 fd2e 	bl	8014ece <USB_ActivateSetup>
 800f472:	687b      	ldr	r3, [r7, #4]
 800f474:	681b      	ldr	r3, [r3, #0]
 800f476:	4618      	mov	r0, r3
 800f478:	f004 fce3 	bl	8013e42 <USB_GetDevSpeed>
 800f47c:	4603      	mov	r3, r0
 800f47e:	461a      	mov	r2, r3
 800f480:	687b      	ldr	r3, [r7, #4]
 800f482:	60da      	str	r2, [r3, #12]
 800f484:	687b      	ldr	r3, [r7, #4]
 800f486:	681c      	ldr	r4, [r3, #0]
 800f488:	f001 f9e8 	bl	801085c <HAL_RCC_GetHCLKFreq>
 800f48c:	4601      	mov	r1, r0
 800f48e:	687b      	ldr	r3, [r7, #4]
 800f490:	68db      	ldr	r3, [r3, #12]
 800f492:	b2db      	uxtb	r3, r3
 800f494:	461a      	mov	r2, r3
 800f496:	4620      	mov	r0, r4
 800f498:	f004 f9e2 	bl	8013860 <USB_SetTurnaroundTime>
 800f49c:	6878      	ldr	r0, [r7, #4]
 800f49e:	f00b f91c 	bl	801a6da <HAL_PCD_ResetCallback>
 800f4a2:	687b      	ldr	r3, [r7, #4]
 800f4a4:	681b      	ldr	r3, [r3, #0]
 800f4a6:	695a      	ldr	r2, [r3, #20]
 800f4a8:	687b      	ldr	r3, [r7, #4]
 800f4aa:	681b      	ldr	r3, [r3, #0]
 800f4ac:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 800f4b0:	615a      	str	r2, [r3, #20]
 800f4b2:	687b      	ldr	r3, [r7, #4]
 800f4b4:	681b      	ldr	r3, [r3, #0]
 800f4b6:	4618      	mov	r0, r3
 800f4b8:	f005 fc68 	bl	8014d8c <USB_ReadInterrupts>
 800f4bc:	4603      	mov	r3, r0
 800f4be:	f003 0308 	and.w	r3, r3, #8
 800f4c2:	2b08      	cmp	r3, #8
 800f4c4:	d10a      	bne.n	800f4dc <HAL_PCD_IRQHandler+0x722>
 800f4c6:	6878      	ldr	r0, [r7, #4]
 800f4c8:	f00b f8f9 	bl	801a6be <HAL_PCD_SOFCallback>
 800f4cc:	687b      	ldr	r3, [r7, #4]
 800f4ce:	681b      	ldr	r3, [r3, #0]
 800f4d0:	695a      	ldr	r2, [r3, #20]
 800f4d2:	687b      	ldr	r3, [r7, #4]
 800f4d4:	681b      	ldr	r3, [r3, #0]
 800f4d6:	f002 0208 	and.w	r2, r2, #8
 800f4da:	615a      	str	r2, [r3, #20]
 800f4dc:	687b      	ldr	r3, [r7, #4]
 800f4de:	681b      	ldr	r3, [r3, #0]
 800f4e0:	4618      	mov	r0, r3
 800f4e2:	f005 fc53 	bl	8014d8c <USB_ReadInterrupts>
 800f4e6:	4603      	mov	r3, r0
 800f4e8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f4ec:	2b80      	cmp	r3, #128	@ 0x80
 800f4ee:	d122      	bne.n	800f536 <HAL_PCD_IRQHandler+0x77c>
 800f4f0:	6a3b      	ldr	r3, [r7, #32]
 800f4f2:	699b      	ldr	r3, [r3, #24]
 800f4f4:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800f4f8:	6a3b      	ldr	r3, [r7, #32]
 800f4fa:	619a      	str	r2, [r3, #24]
 800f4fc:	2301      	movs	r3, #1
 800f4fe:	627b      	str	r3, [r7, #36]	@ 0x24
 800f500:	e014      	b.n	800f52c <HAL_PCD_IRQHandler+0x772>
 800f502:	6879      	ldr	r1, [r7, #4]
 800f504:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f506:	4613      	mov	r3, r2
 800f508:	00db      	lsls	r3, r3, #3
 800f50a:	4413      	add	r3, r2
 800f50c:	009b      	lsls	r3, r3, #2
 800f50e:	440b      	add	r3, r1
 800f510:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 800f514:	781b      	ldrb	r3, [r3, #0]
 800f516:	2b01      	cmp	r3, #1
 800f518:	d105      	bne.n	800f526 <HAL_PCD_IRQHandler+0x76c>
 800f51a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f51c:	b2db      	uxtb	r3, r3
 800f51e:	4619      	mov	r1, r3
 800f520:	6878      	ldr	r0, [r7, #4]
 800f522:	f000 fb27 	bl	800fb74 <HAL_PCD_EP_Abort>
 800f526:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f528:	3301      	adds	r3, #1
 800f52a:	627b      	str	r3, [r7, #36]	@ 0x24
 800f52c:	687b      	ldr	r3, [r7, #4]
 800f52e:	685b      	ldr	r3, [r3, #4]
 800f530:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f532:	429a      	cmp	r2, r3
 800f534:	d3e5      	bcc.n	800f502 <HAL_PCD_IRQHandler+0x748>
 800f536:	687b      	ldr	r3, [r7, #4]
 800f538:	681b      	ldr	r3, [r3, #0]
 800f53a:	4618      	mov	r0, r3
 800f53c:	f005 fc26 	bl	8014d8c <USB_ReadInterrupts>
 800f540:	4603      	mov	r3, r0
 800f542:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800f546:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f54a:	d13b      	bne.n	800f5c4 <HAL_PCD_IRQHandler+0x80a>
 800f54c:	2301      	movs	r3, #1
 800f54e:	627b      	str	r3, [r7, #36]	@ 0x24
 800f550:	e02b      	b.n	800f5aa <HAL_PCD_IRQHandler+0x7f0>
 800f552:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f554:	015a      	lsls	r2, r3, #5
 800f556:	69fb      	ldr	r3, [r7, #28]
 800f558:	4413      	add	r3, r2
 800f55a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f55e:	681b      	ldr	r3, [r3, #0]
 800f560:	61bb      	str	r3, [r7, #24]
 800f562:	6879      	ldr	r1, [r7, #4]
 800f564:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f566:	4613      	mov	r3, r2
 800f568:	00db      	lsls	r3, r3, #3
 800f56a:	4413      	add	r3, r2
 800f56c:	009b      	lsls	r3, r3, #2
 800f56e:	440b      	add	r3, r1
 800f570:	3340      	adds	r3, #64	@ 0x40
 800f572:	781b      	ldrb	r3, [r3, #0]
 800f574:	2b01      	cmp	r3, #1
 800f576:	d115      	bne.n	800f5a4 <HAL_PCD_IRQHandler+0x7ea>
 800f578:	69bb      	ldr	r3, [r7, #24]
 800f57a:	2b00      	cmp	r3, #0
 800f57c:	da12      	bge.n	800f5a4 <HAL_PCD_IRQHandler+0x7ea>
 800f57e:	6879      	ldr	r1, [r7, #4]
 800f580:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f582:	4613      	mov	r3, r2
 800f584:	00db      	lsls	r3, r3, #3
 800f586:	4413      	add	r3, r2
 800f588:	009b      	lsls	r3, r3, #2
 800f58a:	440b      	add	r3, r1
 800f58c:	333f      	adds	r3, #63	@ 0x3f
 800f58e:	2201      	movs	r2, #1
 800f590:	701a      	strb	r2, [r3, #0]
 800f592:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f594:	b2db      	uxtb	r3, r3
 800f596:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800f59a:	b2db      	uxtb	r3, r3
 800f59c:	4619      	mov	r1, r3
 800f59e:	6878      	ldr	r0, [r7, #4]
 800f5a0:	f000 fae8 	bl	800fb74 <HAL_PCD_EP_Abort>
 800f5a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f5a6:	3301      	adds	r3, #1
 800f5a8:	627b      	str	r3, [r7, #36]	@ 0x24
 800f5aa:	687b      	ldr	r3, [r7, #4]
 800f5ac:	685b      	ldr	r3, [r3, #4]
 800f5ae:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f5b0:	429a      	cmp	r2, r3
 800f5b2:	d3ce      	bcc.n	800f552 <HAL_PCD_IRQHandler+0x798>
 800f5b4:	687b      	ldr	r3, [r7, #4]
 800f5b6:	681b      	ldr	r3, [r3, #0]
 800f5b8:	695a      	ldr	r2, [r3, #20]
 800f5ba:	687b      	ldr	r3, [r7, #4]
 800f5bc:	681b      	ldr	r3, [r3, #0]
 800f5be:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800f5c2:	615a      	str	r2, [r3, #20]
 800f5c4:	687b      	ldr	r3, [r7, #4]
 800f5c6:	681b      	ldr	r3, [r3, #0]
 800f5c8:	4618      	mov	r0, r3
 800f5ca:	f005 fbdf 	bl	8014d8c <USB_ReadInterrupts>
 800f5ce:	4603      	mov	r3, r0
 800f5d0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800f5d4:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800f5d8:	d155      	bne.n	800f686 <HAL_PCD_IRQHandler+0x8cc>
 800f5da:	2301      	movs	r3, #1
 800f5dc:	627b      	str	r3, [r7, #36]	@ 0x24
 800f5de:	e045      	b.n	800f66c <HAL_PCD_IRQHandler+0x8b2>
 800f5e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f5e2:	015a      	lsls	r2, r3, #5
 800f5e4:	69fb      	ldr	r3, [r7, #28]
 800f5e6:	4413      	add	r3, r2
 800f5e8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f5ec:	681b      	ldr	r3, [r3, #0]
 800f5ee:	61bb      	str	r3, [r7, #24]
 800f5f0:	6879      	ldr	r1, [r7, #4]
 800f5f2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f5f4:	4613      	mov	r3, r2
 800f5f6:	00db      	lsls	r3, r3, #3
 800f5f8:	4413      	add	r3, r2
 800f5fa:	009b      	lsls	r3, r3, #2
 800f5fc:	440b      	add	r3, r1
 800f5fe:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 800f602:	781b      	ldrb	r3, [r3, #0]
 800f604:	2b01      	cmp	r3, #1
 800f606:	d12e      	bne.n	800f666 <HAL_PCD_IRQHandler+0x8ac>
 800f608:	69bb      	ldr	r3, [r7, #24]
 800f60a:	2b00      	cmp	r3, #0
 800f60c:	da2b      	bge.n	800f666 <HAL_PCD_IRQHandler+0x8ac>
 800f60e:	69bb      	ldr	r3, [r7, #24]
 800f610:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800f614:	687b      	ldr	r3, [r7, #4]
 800f616:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	@ 0x4fc
 800f61a:	f003 0301 	and.w	r3, r3, #1
 800f61e:	429a      	cmp	r2, r3
 800f620:	d121      	bne.n	800f666 <HAL_PCD_IRQHandler+0x8ac>
 800f622:	6879      	ldr	r1, [r7, #4]
 800f624:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f626:	4613      	mov	r3, r2
 800f628:	00db      	lsls	r3, r3, #3
 800f62a:	4413      	add	r3, r2
 800f62c:	009b      	lsls	r3, r3, #2
 800f62e:	440b      	add	r3, r1
 800f630:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 800f634:	2201      	movs	r2, #1
 800f636:	701a      	strb	r2, [r3, #0]
 800f638:	6a3b      	ldr	r3, [r7, #32]
 800f63a:	699b      	ldr	r3, [r3, #24]
 800f63c:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800f640:	6a3b      	ldr	r3, [r7, #32]
 800f642:	619a      	str	r2, [r3, #24]
 800f644:	6a3b      	ldr	r3, [r7, #32]
 800f646:	695b      	ldr	r3, [r3, #20]
 800f648:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f64c:	2b00      	cmp	r3, #0
 800f64e:	d10a      	bne.n	800f666 <HAL_PCD_IRQHandler+0x8ac>
 800f650:	69fb      	ldr	r3, [r7, #28]
 800f652:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f656:	685b      	ldr	r3, [r3, #4]
 800f658:	69fa      	ldr	r2, [r7, #28]
 800f65a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f65e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800f662:	6053      	str	r3, [r2, #4]
 800f664:	e007      	b.n	800f676 <HAL_PCD_IRQHandler+0x8bc>
 800f666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f668:	3301      	adds	r3, #1
 800f66a:	627b      	str	r3, [r7, #36]	@ 0x24
 800f66c:	687b      	ldr	r3, [r7, #4]
 800f66e:	685b      	ldr	r3, [r3, #4]
 800f670:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f672:	429a      	cmp	r2, r3
 800f674:	d3b4      	bcc.n	800f5e0 <HAL_PCD_IRQHandler+0x826>
 800f676:	687b      	ldr	r3, [r7, #4]
 800f678:	681b      	ldr	r3, [r3, #0]
 800f67a:	695a      	ldr	r2, [r3, #20]
 800f67c:	687b      	ldr	r3, [r7, #4]
 800f67e:	681b      	ldr	r3, [r3, #0]
 800f680:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800f684:	615a      	str	r2, [r3, #20]
 800f686:	687b      	ldr	r3, [r7, #4]
 800f688:	681b      	ldr	r3, [r3, #0]
 800f68a:	4618      	mov	r0, r3
 800f68c:	f005 fb7e 	bl	8014d8c <USB_ReadInterrupts>
 800f690:	4603      	mov	r3, r0
 800f692:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800f696:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800f69a:	d10a      	bne.n	800f6b2 <HAL_PCD_IRQHandler+0x8f8>
 800f69c:	6878      	ldr	r0, [r7, #4]
 800f69e:	f00b f89d 	bl	801a7dc <HAL_PCD_ConnectCallback>
 800f6a2:	687b      	ldr	r3, [r7, #4]
 800f6a4:	681b      	ldr	r3, [r3, #0]
 800f6a6:	695a      	ldr	r2, [r3, #20]
 800f6a8:	687b      	ldr	r3, [r7, #4]
 800f6aa:	681b      	ldr	r3, [r3, #0]
 800f6ac:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800f6b0:	615a      	str	r2, [r3, #20]
 800f6b2:	687b      	ldr	r3, [r7, #4]
 800f6b4:	681b      	ldr	r3, [r3, #0]
 800f6b6:	4618      	mov	r0, r3
 800f6b8:	f005 fb68 	bl	8014d8c <USB_ReadInterrupts>
 800f6bc:	4603      	mov	r3, r0
 800f6be:	f003 0304 	and.w	r3, r3, #4
 800f6c2:	2b04      	cmp	r3, #4
 800f6c4:	d115      	bne.n	800f6f2 <HAL_PCD_IRQHandler+0x938>
 800f6c6:	687b      	ldr	r3, [r7, #4]
 800f6c8:	681b      	ldr	r3, [r3, #0]
 800f6ca:	685b      	ldr	r3, [r3, #4]
 800f6cc:	61bb      	str	r3, [r7, #24]
 800f6ce:	69bb      	ldr	r3, [r7, #24]
 800f6d0:	f003 0304 	and.w	r3, r3, #4
 800f6d4:	2b00      	cmp	r3, #0
 800f6d6:	d002      	beq.n	800f6de <HAL_PCD_IRQHandler+0x924>
 800f6d8:	6878      	ldr	r0, [r7, #4]
 800f6da:	f00b f88d 	bl	801a7f8 <HAL_PCD_DisconnectCallback>
 800f6de:	687b      	ldr	r3, [r7, #4]
 800f6e0:	681b      	ldr	r3, [r3, #0]
 800f6e2:	6859      	ldr	r1, [r3, #4]
 800f6e4:	687b      	ldr	r3, [r7, #4]
 800f6e6:	681b      	ldr	r3, [r3, #0]
 800f6e8:	69ba      	ldr	r2, [r7, #24]
 800f6ea:	430a      	orrs	r2, r1
 800f6ec:	605a      	str	r2, [r3, #4]
 800f6ee:	e000      	b.n	800f6f2 <HAL_PCD_IRQHandler+0x938>
 800f6f0:	bf00      	nop
 800f6f2:	3734      	adds	r7, #52	@ 0x34
 800f6f4:	46bd      	mov	sp, r7
 800f6f6:	bd90      	pop	{r4, r7, pc}

0800f6f8 <HAL_PCD_SetAddress>:
 800f6f8:	b580      	push	{r7, lr}
 800f6fa:	b082      	sub	sp, #8
 800f6fc:	af00      	add	r7, sp, #0
 800f6fe:	6078      	str	r0, [r7, #4]
 800f700:	460b      	mov	r3, r1
 800f702:	70fb      	strb	r3, [r7, #3]
 800f704:	687b      	ldr	r3, [r7, #4]
 800f706:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f70a:	2b01      	cmp	r3, #1
 800f70c:	d101      	bne.n	800f712 <HAL_PCD_SetAddress+0x1a>
 800f70e:	2302      	movs	r3, #2
 800f710:	e013      	b.n	800f73a <HAL_PCD_SetAddress+0x42>
 800f712:	687b      	ldr	r3, [r7, #4]
 800f714:	2201      	movs	r2, #1
 800f716:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f71a:	687b      	ldr	r3, [r7, #4]
 800f71c:	78fa      	ldrb	r2, [r7, #3]
 800f71e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800f722:	687b      	ldr	r3, [r7, #4]
 800f724:	681b      	ldr	r3, [r3, #0]
 800f726:	78fa      	ldrb	r2, [r7, #3]
 800f728:	4611      	mov	r1, r2
 800f72a:	4618      	mov	r0, r3
 800f72c:	f005 fac6 	bl	8014cbc <USB_SetDevAddress>
 800f730:	687b      	ldr	r3, [r7, #4]
 800f732:	2200      	movs	r2, #0
 800f734:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f738:	2300      	movs	r3, #0
 800f73a:	4618      	mov	r0, r3
 800f73c:	3708      	adds	r7, #8
 800f73e:	46bd      	mov	sp, r7
 800f740:	bd80      	pop	{r7, pc}

0800f742 <HAL_PCD_EP_Open>:
 800f742:	b580      	push	{r7, lr}
 800f744:	b084      	sub	sp, #16
 800f746:	af00      	add	r7, sp, #0
 800f748:	6078      	str	r0, [r7, #4]
 800f74a:	4608      	mov	r0, r1
 800f74c:	4611      	mov	r1, r2
 800f74e:	461a      	mov	r2, r3
 800f750:	4603      	mov	r3, r0
 800f752:	70fb      	strb	r3, [r7, #3]
 800f754:	460b      	mov	r3, r1
 800f756:	803b      	strh	r3, [r7, #0]
 800f758:	4613      	mov	r3, r2
 800f75a:	70bb      	strb	r3, [r7, #2]
 800f75c:	2300      	movs	r3, #0
 800f75e:	72fb      	strb	r3, [r7, #11]
 800f760:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f764:	2b00      	cmp	r3, #0
 800f766:	da0f      	bge.n	800f788 <HAL_PCD_EP_Open+0x46>
 800f768:	78fb      	ldrb	r3, [r7, #3]
 800f76a:	f003 020f 	and.w	r2, r3, #15
 800f76e:	4613      	mov	r3, r2
 800f770:	00db      	lsls	r3, r3, #3
 800f772:	4413      	add	r3, r2
 800f774:	009b      	lsls	r3, r3, #2
 800f776:	3338      	adds	r3, #56	@ 0x38
 800f778:	687a      	ldr	r2, [r7, #4]
 800f77a:	4413      	add	r3, r2
 800f77c:	3304      	adds	r3, #4
 800f77e:	60fb      	str	r3, [r7, #12]
 800f780:	68fb      	ldr	r3, [r7, #12]
 800f782:	2201      	movs	r2, #1
 800f784:	705a      	strb	r2, [r3, #1]
 800f786:	e00f      	b.n	800f7a8 <HAL_PCD_EP_Open+0x66>
 800f788:	78fb      	ldrb	r3, [r7, #3]
 800f78a:	f003 020f 	and.w	r2, r3, #15
 800f78e:	4613      	mov	r3, r2
 800f790:	00db      	lsls	r3, r3, #3
 800f792:	4413      	add	r3, r2
 800f794:	009b      	lsls	r3, r3, #2
 800f796:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f79a:	687a      	ldr	r2, [r7, #4]
 800f79c:	4413      	add	r3, r2
 800f79e:	3304      	adds	r3, #4
 800f7a0:	60fb      	str	r3, [r7, #12]
 800f7a2:	68fb      	ldr	r3, [r7, #12]
 800f7a4:	2200      	movs	r2, #0
 800f7a6:	705a      	strb	r2, [r3, #1]
 800f7a8:	78fb      	ldrb	r3, [r7, #3]
 800f7aa:	f003 030f 	and.w	r3, r3, #15
 800f7ae:	b2da      	uxtb	r2, r3
 800f7b0:	68fb      	ldr	r3, [r7, #12]
 800f7b2:	701a      	strb	r2, [r3, #0]
 800f7b4:	883a      	ldrh	r2, [r7, #0]
 800f7b6:	68fb      	ldr	r3, [r7, #12]
 800f7b8:	60da      	str	r2, [r3, #12]
 800f7ba:	68fb      	ldr	r3, [r7, #12]
 800f7bc:	78ba      	ldrb	r2, [r7, #2]
 800f7be:	711a      	strb	r2, [r3, #4]
 800f7c0:	68fb      	ldr	r3, [r7, #12]
 800f7c2:	785b      	ldrb	r3, [r3, #1]
 800f7c4:	2b00      	cmp	r3, #0
 800f7c6:	d004      	beq.n	800f7d2 <HAL_PCD_EP_Open+0x90>
 800f7c8:	68fb      	ldr	r3, [r7, #12]
 800f7ca:	781b      	ldrb	r3, [r3, #0]
 800f7cc:	461a      	mov	r2, r3
 800f7ce:	68fb      	ldr	r3, [r7, #12]
 800f7d0:	811a      	strh	r2, [r3, #8]
 800f7d2:	78bb      	ldrb	r3, [r7, #2]
 800f7d4:	2b02      	cmp	r3, #2
 800f7d6:	d102      	bne.n	800f7de <HAL_PCD_EP_Open+0x9c>
 800f7d8:	68fb      	ldr	r3, [r7, #12]
 800f7da:	2200      	movs	r2, #0
 800f7dc:	715a      	strb	r2, [r3, #5]
 800f7de:	687b      	ldr	r3, [r7, #4]
 800f7e0:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f7e4:	2b01      	cmp	r3, #1
 800f7e6:	d101      	bne.n	800f7ec <HAL_PCD_EP_Open+0xaa>
 800f7e8:	2302      	movs	r3, #2
 800f7ea:	e00e      	b.n	800f80a <HAL_PCD_EP_Open+0xc8>
 800f7ec:	687b      	ldr	r3, [r7, #4]
 800f7ee:	2201      	movs	r2, #1
 800f7f0:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f7f4:	687b      	ldr	r3, [r7, #4]
 800f7f6:	681b      	ldr	r3, [r3, #0]
 800f7f8:	68f9      	ldr	r1, [r7, #12]
 800f7fa:	4618      	mov	r0, r3
 800f7fc:	f004 fb46 	bl	8013e8c <USB_ActivateEndpoint>
 800f800:	687b      	ldr	r3, [r7, #4]
 800f802:	2200      	movs	r2, #0
 800f804:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f808:	7afb      	ldrb	r3, [r7, #11]
 800f80a:	4618      	mov	r0, r3
 800f80c:	3710      	adds	r7, #16
 800f80e:	46bd      	mov	sp, r7
 800f810:	bd80      	pop	{r7, pc}

0800f812 <HAL_PCD_EP_Close>:
 800f812:	b580      	push	{r7, lr}
 800f814:	b084      	sub	sp, #16
 800f816:	af00      	add	r7, sp, #0
 800f818:	6078      	str	r0, [r7, #4]
 800f81a:	460b      	mov	r3, r1
 800f81c:	70fb      	strb	r3, [r7, #3]
 800f81e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f822:	2b00      	cmp	r3, #0
 800f824:	da0f      	bge.n	800f846 <HAL_PCD_EP_Close+0x34>
 800f826:	78fb      	ldrb	r3, [r7, #3]
 800f828:	f003 020f 	and.w	r2, r3, #15
 800f82c:	4613      	mov	r3, r2
 800f82e:	00db      	lsls	r3, r3, #3
 800f830:	4413      	add	r3, r2
 800f832:	009b      	lsls	r3, r3, #2
 800f834:	3338      	adds	r3, #56	@ 0x38
 800f836:	687a      	ldr	r2, [r7, #4]
 800f838:	4413      	add	r3, r2
 800f83a:	3304      	adds	r3, #4
 800f83c:	60fb      	str	r3, [r7, #12]
 800f83e:	68fb      	ldr	r3, [r7, #12]
 800f840:	2201      	movs	r2, #1
 800f842:	705a      	strb	r2, [r3, #1]
 800f844:	e00f      	b.n	800f866 <HAL_PCD_EP_Close+0x54>
 800f846:	78fb      	ldrb	r3, [r7, #3]
 800f848:	f003 020f 	and.w	r2, r3, #15
 800f84c:	4613      	mov	r3, r2
 800f84e:	00db      	lsls	r3, r3, #3
 800f850:	4413      	add	r3, r2
 800f852:	009b      	lsls	r3, r3, #2
 800f854:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f858:	687a      	ldr	r2, [r7, #4]
 800f85a:	4413      	add	r3, r2
 800f85c:	3304      	adds	r3, #4
 800f85e:	60fb      	str	r3, [r7, #12]
 800f860:	68fb      	ldr	r3, [r7, #12]
 800f862:	2200      	movs	r2, #0
 800f864:	705a      	strb	r2, [r3, #1]
 800f866:	78fb      	ldrb	r3, [r7, #3]
 800f868:	f003 030f 	and.w	r3, r3, #15
 800f86c:	b2da      	uxtb	r2, r3
 800f86e:	68fb      	ldr	r3, [r7, #12]
 800f870:	701a      	strb	r2, [r3, #0]
 800f872:	687b      	ldr	r3, [r7, #4]
 800f874:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f878:	2b01      	cmp	r3, #1
 800f87a:	d101      	bne.n	800f880 <HAL_PCD_EP_Close+0x6e>
 800f87c:	2302      	movs	r3, #2
 800f87e:	e00e      	b.n	800f89e <HAL_PCD_EP_Close+0x8c>
 800f880:	687b      	ldr	r3, [r7, #4]
 800f882:	2201      	movs	r2, #1
 800f884:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f888:	687b      	ldr	r3, [r7, #4]
 800f88a:	681b      	ldr	r3, [r3, #0]
 800f88c:	68f9      	ldr	r1, [r7, #12]
 800f88e:	4618      	mov	r0, r3
 800f890:	f004 fb84 	bl	8013f9c <USB_DeactivateEndpoint>
 800f894:	687b      	ldr	r3, [r7, #4]
 800f896:	2200      	movs	r2, #0
 800f898:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f89c:	2300      	movs	r3, #0
 800f89e:	4618      	mov	r0, r3
 800f8a0:	3710      	adds	r7, #16
 800f8a2:	46bd      	mov	sp, r7
 800f8a4:	bd80      	pop	{r7, pc}

0800f8a6 <HAL_PCD_EP_Receive>:
 800f8a6:	b580      	push	{r7, lr}
 800f8a8:	b086      	sub	sp, #24
 800f8aa:	af00      	add	r7, sp, #0
 800f8ac:	60f8      	str	r0, [r7, #12]
 800f8ae:	607a      	str	r2, [r7, #4]
 800f8b0:	603b      	str	r3, [r7, #0]
 800f8b2:	460b      	mov	r3, r1
 800f8b4:	72fb      	strb	r3, [r7, #11]
 800f8b6:	7afb      	ldrb	r3, [r7, #11]
 800f8b8:	f003 020f 	and.w	r2, r3, #15
 800f8bc:	4613      	mov	r3, r2
 800f8be:	00db      	lsls	r3, r3, #3
 800f8c0:	4413      	add	r3, r2
 800f8c2:	009b      	lsls	r3, r3, #2
 800f8c4:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f8c8:	68fa      	ldr	r2, [r7, #12]
 800f8ca:	4413      	add	r3, r2
 800f8cc:	3304      	adds	r3, #4
 800f8ce:	617b      	str	r3, [r7, #20]
 800f8d0:	697b      	ldr	r3, [r7, #20]
 800f8d2:	687a      	ldr	r2, [r7, #4]
 800f8d4:	611a      	str	r2, [r3, #16]
 800f8d6:	697b      	ldr	r3, [r7, #20]
 800f8d8:	683a      	ldr	r2, [r7, #0]
 800f8da:	619a      	str	r2, [r3, #24]
 800f8dc:	697b      	ldr	r3, [r7, #20]
 800f8de:	2200      	movs	r2, #0
 800f8e0:	621a      	str	r2, [r3, #32]
 800f8e2:	697b      	ldr	r3, [r7, #20]
 800f8e4:	2200      	movs	r2, #0
 800f8e6:	705a      	strb	r2, [r3, #1]
 800f8e8:	7afb      	ldrb	r3, [r7, #11]
 800f8ea:	f003 030f 	and.w	r3, r3, #15
 800f8ee:	b2da      	uxtb	r2, r3
 800f8f0:	697b      	ldr	r3, [r7, #20]
 800f8f2:	701a      	strb	r2, [r3, #0]
 800f8f4:	68fb      	ldr	r3, [r7, #12]
 800f8f6:	691b      	ldr	r3, [r3, #16]
 800f8f8:	2b01      	cmp	r3, #1
 800f8fa:	d102      	bne.n	800f902 <HAL_PCD_EP_Receive+0x5c>
 800f8fc:	687a      	ldr	r2, [r7, #4]
 800f8fe:	697b      	ldr	r3, [r7, #20]
 800f900:	615a      	str	r2, [r3, #20]
 800f902:	7afb      	ldrb	r3, [r7, #11]
 800f904:	f003 030f 	and.w	r3, r3, #15
 800f908:	2b00      	cmp	r3, #0
 800f90a:	d109      	bne.n	800f920 <HAL_PCD_EP_Receive+0x7a>
 800f90c:	68fb      	ldr	r3, [r7, #12]
 800f90e:	6818      	ldr	r0, [r3, #0]
 800f910:	68fb      	ldr	r3, [r7, #12]
 800f912:	691b      	ldr	r3, [r3, #16]
 800f914:	b2db      	uxtb	r3, r3
 800f916:	461a      	mov	r2, r3
 800f918:	6979      	ldr	r1, [r7, #20]
 800f91a:	f004 fe63 	bl	80145e4 <USB_EP0StartXfer>
 800f91e:	e008      	b.n	800f932 <HAL_PCD_EP_Receive+0x8c>
 800f920:	68fb      	ldr	r3, [r7, #12]
 800f922:	6818      	ldr	r0, [r3, #0]
 800f924:	68fb      	ldr	r3, [r7, #12]
 800f926:	691b      	ldr	r3, [r3, #16]
 800f928:	b2db      	uxtb	r3, r3
 800f92a:	461a      	mov	r2, r3
 800f92c:	6979      	ldr	r1, [r7, #20]
 800f92e:	f004 fc11 	bl	8014154 <USB_EPStartXfer>
 800f932:	2300      	movs	r3, #0
 800f934:	4618      	mov	r0, r3
 800f936:	3718      	adds	r7, #24
 800f938:	46bd      	mov	sp, r7
 800f93a:	bd80      	pop	{r7, pc}

0800f93c <HAL_PCD_EP_GetRxCount>:
 800f93c:	b480      	push	{r7}
 800f93e:	b083      	sub	sp, #12
 800f940:	af00      	add	r7, sp, #0
 800f942:	6078      	str	r0, [r7, #4]
 800f944:	460b      	mov	r3, r1
 800f946:	70fb      	strb	r3, [r7, #3]
 800f948:	78fb      	ldrb	r3, [r7, #3]
 800f94a:	f003 020f 	and.w	r2, r3, #15
 800f94e:	6879      	ldr	r1, [r7, #4]
 800f950:	4613      	mov	r3, r2
 800f952:	00db      	lsls	r3, r3, #3
 800f954:	4413      	add	r3, r2
 800f956:	009b      	lsls	r3, r3, #2
 800f958:	440b      	add	r3, r1
 800f95a:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800f95e:	681b      	ldr	r3, [r3, #0]
 800f960:	4618      	mov	r0, r3
 800f962:	370c      	adds	r7, #12
 800f964:	46bd      	mov	sp, r7
 800f966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f96a:	4770      	bx	lr

0800f96c <HAL_PCD_EP_Transmit>:
 800f96c:	b580      	push	{r7, lr}
 800f96e:	b086      	sub	sp, #24
 800f970:	af00      	add	r7, sp, #0
 800f972:	60f8      	str	r0, [r7, #12]
 800f974:	607a      	str	r2, [r7, #4]
 800f976:	603b      	str	r3, [r7, #0]
 800f978:	460b      	mov	r3, r1
 800f97a:	72fb      	strb	r3, [r7, #11]
 800f97c:	7afb      	ldrb	r3, [r7, #11]
 800f97e:	f003 020f 	and.w	r2, r3, #15
 800f982:	4613      	mov	r3, r2
 800f984:	00db      	lsls	r3, r3, #3
 800f986:	4413      	add	r3, r2
 800f988:	009b      	lsls	r3, r3, #2
 800f98a:	3338      	adds	r3, #56	@ 0x38
 800f98c:	68fa      	ldr	r2, [r7, #12]
 800f98e:	4413      	add	r3, r2
 800f990:	3304      	adds	r3, #4
 800f992:	617b      	str	r3, [r7, #20]
 800f994:	697b      	ldr	r3, [r7, #20]
 800f996:	687a      	ldr	r2, [r7, #4]
 800f998:	611a      	str	r2, [r3, #16]
 800f99a:	697b      	ldr	r3, [r7, #20]
 800f99c:	683a      	ldr	r2, [r7, #0]
 800f99e:	619a      	str	r2, [r3, #24]
 800f9a0:	697b      	ldr	r3, [r7, #20]
 800f9a2:	2200      	movs	r2, #0
 800f9a4:	621a      	str	r2, [r3, #32]
 800f9a6:	697b      	ldr	r3, [r7, #20]
 800f9a8:	2201      	movs	r2, #1
 800f9aa:	705a      	strb	r2, [r3, #1]
 800f9ac:	7afb      	ldrb	r3, [r7, #11]
 800f9ae:	f003 030f 	and.w	r3, r3, #15
 800f9b2:	b2da      	uxtb	r2, r3
 800f9b4:	697b      	ldr	r3, [r7, #20]
 800f9b6:	701a      	strb	r2, [r3, #0]
 800f9b8:	68fb      	ldr	r3, [r7, #12]
 800f9ba:	691b      	ldr	r3, [r3, #16]
 800f9bc:	2b01      	cmp	r3, #1
 800f9be:	d102      	bne.n	800f9c6 <HAL_PCD_EP_Transmit+0x5a>
 800f9c0:	687a      	ldr	r2, [r7, #4]
 800f9c2:	697b      	ldr	r3, [r7, #20]
 800f9c4:	615a      	str	r2, [r3, #20]
 800f9c6:	7afb      	ldrb	r3, [r7, #11]
 800f9c8:	f003 030f 	and.w	r3, r3, #15
 800f9cc:	2b00      	cmp	r3, #0
 800f9ce:	d109      	bne.n	800f9e4 <HAL_PCD_EP_Transmit+0x78>
 800f9d0:	68fb      	ldr	r3, [r7, #12]
 800f9d2:	6818      	ldr	r0, [r3, #0]
 800f9d4:	68fb      	ldr	r3, [r7, #12]
 800f9d6:	691b      	ldr	r3, [r3, #16]
 800f9d8:	b2db      	uxtb	r3, r3
 800f9da:	461a      	mov	r2, r3
 800f9dc:	6979      	ldr	r1, [r7, #20]
 800f9de:	f004 fe01 	bl	80145e4 <USB_EP0StartXfer>
 800f9e2:	e008      	b.n	800f9f6 <HAL_PCD_EP_Transmit+0x8a>
 800f9e4:	68fb      	ldr	r3, [r7, #12]
 800f9e6:	6818      	ldr	r0, [r3, #0]
 800f9e8:	68fb      	ldr	r3, [r7, #12]
 800f9ea:	691b      	ldr	r3, [r3, #16]
 800f9ec:	b2db      	uxtb	r3, r3
 800f9ee:	461a      	mov	r2, r3
 800f9f0:	6979      	ldr	r1, [r7, #20]
 800f9f2:	f004 fbaf 	bl	8014154 <USB_EPStartXfer>
 800f9f6:	2300      	movs	r3, #0
 800f9f8:	4618      	mov	r0, r3
 800f9fa:	3718      	adds	r7, #24
 800f9fc:	46bd      	mov	sp, r7
 800f9fe:	bd80      	pop	{r7, pc}

0800fa00 <HAL_PCD_EP_SetStall>:
 800fa00:	b580      	push	{r7, lr}
 800fa02:	b084      	sub	sp, #16
 800fa04:	af00      	add	r7, sp, #0
 800fa06:	6078      	str	r0, [r7, #4]
 800fa08:	460b      	mov	r3, r1
 800fa0a:	70fb      	strb	r3, [r7, #3]
 800fa0c:	78fb      	ldrb	r3, [r7, #3]
 800fa0e:	f003 020f 	and.w	r2, r3, #15
 800fa12:	687b      	ldr	r3, [r7, #4]
 800fa14:	685b      	ldr	r3, [r3, #4]
 800fa16:	429a      	cmp	r2, r3
 800fa18:	d901      	bls.n	800fa1e <HAL_PCD_EP_SetStall+0x1e>
 800fa1a:	2301      	movs	r3, #1
 800fa1c:	e050      	b.n	800fac0 <HAL_PCD_EP_SetStall+0xc0>
 800fa1e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fa22:	2b00      	cmp	r3, #0
 800fa24:	da0f      	bge.n	800fa46 <HAL_PCD_EP_SetStall+0x46>
 800fa26:	78fb      	ldrb	r3, [r7, #3]
 800fa28:	f003 020f 	and.w	r2, r3, #15
 800fa2c:	4613      	mov	r3, r2
 800fa2e:	00db      	lsls	r3, r3, #3
 800fa30:	4413      	add	r3, r2
 800fa32:	009b      	lsls	r3, r3, #2
 800fa34:	3338      	adds	r3, #56	@ 0x38
 800fa36:	687a      	ldr	r2, [r7, #4]
 800fa38:	4413      	add	r3, r2
 800fa3a:	3304      	adds	r3, #4
 800fa3c:	60fb      	str	r3, [r7, #12]
 800fa3e:	68fb      	ldr	r3, [r7, #12]
 800fa40:	2201      	movs	r2, #1
 800fa42:	705a      	strb	r2, [r3, #1]
 800fa44:	e00d      	b.n	800fa62 <HAL_PCD_EP_SetStall+0x62>
 800fa46:	78fa      	ldrb	r2, [r7, #3]
 800fa48:	4613      	mov	r3, r2
 800fa4a:	00db      	lsls	r3, r3, #3
 800fa4c:	4413      	add	r3, r2
 800fa4e:	009b      	lsls	r3, r3, #2
 800fa50:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fa54:	687a      	ldr	r2, [r7, #4]
 800fa56:	4413      	add	r3, r2
 800fa58:	3304      	adds	r3, #4
 800fa5a:	60fb      	str	r3, [r7, #12]
 800fa5c:	68fb      	ldr	r3, [r7, #12]
 800fa5e:	2200      	movs	r2, #0
 800fa60:	705a      	strb	r2, [r3, #1]
 800fa62:	68fb      	ldr	r3, [r7, #12]
 800fa64:	2201      	movs	r2, #1
 800fa66:	709a      	strb	r2, [r3, #2]
 800fa68:	78fb      	ldrb	r3, [r7, #3]
 800fa6a:	f003 030f 	and.w	r3, r3, #15
 800fa6e:	b2da      	uxtb	r2, r3
 800fa70:	68fb      	ldr	r3, [r7, #12]
 800fa72:	701a      	strb	r2, [r3, #0]
 800fa74:	687b      	ldr	r3, [r7, #4]
 800fa76:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800fa7a:	2b01      	cmp	r3, #1
 800fa7c:	d101      	bne.n	800fa82 <HAL_PCD_EP_SetStall+0x82>
 800fa7e:	2302      	movs	r3, #2
 800fa80:	e01e      	b.n	800fac0 <HAL_PCD_EP_SetStall+0xc0>
 800fa82:	687b      	ldr	r3, [r7, #4]
 800fa84:	2201      	movs	r2, #1
 800fa86:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fa8a:	687b      	ldr	r3, [r7, #4]
 800fa8c:	681b      	ldr	r3, [r3, #0]
 800fa8e:	68f9      	ldr	r1, [r7, #12]
 800fa90:	4618      	mov	r0, r3
 800fa92:	f005 f83f 	bl	8014b14 <USB_EPSetStall>
 800fa96:	78fb      	ldrb	r3, [r7, #3]
 800fa98:	f003 030f 	and.w	r3, r3, #15
 800fa9c:	2b00      	cmp	r3, #0
 800fa9e:	d10a      	bne.n	800fab6 <HAL_PCD_EP_SetStall+0xb6>
 800faa0:	687b      	ldr	r3, [r7, #4]
 800faa2:	6818      	ldr	r0, [r3, #0]
 800faa4:	687b      	ldr	r3, [r7, #4]
 800faa6:	691b      	ldr	r3, [r3, #16]
 800faa8:	b2d9      	uxtb	r1, r3
 800faaa:	687b      	ldr	r3, [r7, #4]
 800faac:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fab0:	461a      	mov	r2, r3
 800fab2:	f005 fa2f 	bl	8014f14 <USB_EP0_OutStart>
 800fab6:	687b      	ldr	r3, [r7, #4]
 800fab8:	2200      	movs	r2, #0
 800faba:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fabe:	2300      	movs	r3, #0
 800fac0:	4618      	mov	r0, r3
 800fac2:	3710      	adds	r7, #16
 800fac4:	46bd      	mov	sp, r7
 800fac6:	bd80      	pop	{r7, pc}

0800fac8 <HAL_PCD_EP_ClrStall>:
 800fac8:	b580      	push	{r7, lr}
 800faca:	b084      	sub	sp, #16
 800facc:	af00      	add	r7, sp, #0
 800face:	6078      	str	r0, [r7, #4]
 800fad0:	460b      	mov	r3, r1
 800fad2:	70fb      	strb	r3, [r7, #3]
 800fad4:	78fb      	ldrb	r3, [r7, #3]
 800fad6:	f003 020f 	and.w	r2, r3, #15
 800fada:	687b      	ldr	r3, [r7, #4]
 800fadc:	685b      	ldr	r3, [r3, #4]
 800fade:	429a      	cmp	r2, r3
 800fae0:	d901      	bls.n	800fae6 <HAL_PCD_EP_ClrStall+0x1e>
 800fae2:	2301      	movs	r3, #1
 800fae4:	e042      	b.n	800fb6c <HAL_PCD_EP_ClrStall+0xa4>
 800fae6:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800faea:	2b00      	cmp	r3, #0
 800faec:	da0f      	bge.n	800fb0e <HAL_PCD_EP_ClrStall+0x46>
 800faee:	78fb      	ldrb	r3, [r7, #3]
 800faf0:	f003 020f 	and.w	r2, r3, #15
 800faf4:	4613      	mov	r3, r2
 800faf6:	00db      	lsls	r3, r3, #3
 800faf8:	4413      	add	r3, r2
 800fafa:	009b      	lsls	r3, r3, #2
 800fafc:	3338      	adds	r3, #56	@ 0x38
 800fafe:	687a      	ldr	r2, [r7, #4]
 800fb00:	4413      	add	r3, r2
 800fb02:	3304      	adds	r3, #4
 800fb04:	60fb      	str	r3, [r7, #12]
 800fb06:	68fb      	ldr	r3, [r7, #12]
 800fb08:	2201      	movs	r2, #1
 800fb0a:	705a      	strb	r2, [r3, #1]
 800fb0c:	e00f      	b.n	800fb2e <HAL_PCD_EP_ClrStall+0x66>
 800fb0e:	78fb      	ldrb	r3, [r7, #3]
 800fb10:	f003 020f 	and.w	r2, r3, #15
 800fb14:	4613      	mov	r3, r2
 800fb16:	00db      	lsls	r3, r3, #3
 800fb18:	4413      	add	r3, r2
 800fb1a:	009b      	lsls	r3, r3, #2
 800fb1c:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fb20:	687a      	ldr	r2, [r7, #4]
 800fb22:	4413      	add	r3, r2
 800fb24:	3304      	adds	r3, #4
 800fb26:	60fb      	str	r3, [r7, #12]
 800fb28:	68fb      	ldr	r3, [r7, #12]
 800fb2a:	2200      	movs	r2, #0
 800fb2c:	705a      	strb	r2, [r3, #1]
 800fb2e:	68fb      	ldr	r3, [r7, #12]
 800fb30:	2200      	movs	r2, #0
 800fb32:	709a      	strb	r2, [r3, #2]
 800fb34:	78fb      	ldrb	r3, [r7, #3]
 800fb36:	f003 030f 	and.w	r3, r3, #15
 800fb3a:	b2da      	uxtb	r2, r3
 800fb3c:	68fb      	ldr	r3, [r7, #12]
 800fb3e:	701a      	strb	r2, [r3, #0]
 800fb40:	687b      	ldr	r3, [r7, #4]
 800fb42:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800fb46:	2b01      	cmp	r3, #1
 800fb48:	d101      	bne.n	800fb4e <HAL_PCD_EP_ClrStall+0x86>
 800fb4a:	2302      	movs	r3, #2
 800fb4c:	e00e      	b.n	800fb6c <HAL_PCD_EP_ClrStall+0xa4>
 800fb4e:	687b      	ldr	r3, [r7, #4]
 800fb50:	2201      	movs	r2, #1
 800fb52:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fb56:	687b      	ldr	r3, [r7, #4]
 800fb58:	681b      	ldr	r3, [r3, #0]
 800fb5a:	68f9      	ldr	r1, [r7, #12]
 800fb5c:	4618      	mov	r0, r3
 800fb5e:	f005 f847 	bl	8014bf0 <USB_EPClearStall>
 800fb62:	687b      	ldr	r3, [r7, #4]
 800fb64:	2200      	movs	r2, #0
 800fb66:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fb6a:	2300      	movs	r3, #0
 800fb6c:	4618      	mov	r0, r3
 800fb6e:	3710      	adds	r7, #16
 800fb70:	46bd      	mov	sp, r7
 800fb72:	bd80      	pop	{r7, pc}

0800fb74 <HAL_PCD_EP_Abort>:
 800fb74:	b580      	push	{r7, lr}
 800fb76:	b084      	sub	sp, #16
 800fb78:	af00      	add	r7, sp, #0
 800fb7a:	6078      	str	r0, [r7, #4]
 800fb7c:	460b      	mov	r3, r1
 800fb7e:	70fb      	strb	r3, [r7, #3]
 800fb80:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fb84:	2b00      	cmp	r3, #0
 800fb86:	da0c      	bge.n	800fba2 <HAL_PCD_EP_Abort+0x2e>
 800fb88:	78fb      	ldrb	r3, [r7, #3]
 800fb8a:	f003 020f 	and.w	r2, r3, #15
 800fb8e:	4613      	mov	r3, r2
 800fb90:	00db      	lsls	r3, r3, #3
 800fb92:	4413      	add	r3, r2
 800fb94:	009b      	lsls	r3, r3, #2
 800fb96:	3338      	adds	r3, #56	@ 0x38
 800fb98:	687a      	ldr	r2, [r7, #4]
 800fb9a:	4413      	add	r3, r2
 800fb9c:	3304      	adds	r3, #4
 800fb9e:	60fb      	str	r3, [r7, #12]
 800fba0:	e00c      	b.n	800fbbc <HAL_PCD_EP_Abort+0x48>
 800fba2:	78fb      	ldrb	r3, [r7, #3]
 800fba4:	f003 020f 	and.w	r2, r3, #15
 800fba8:	4613      	mov	r3, r2
 800fbaa:	00db      	lsls	r3, r3, #3
 800fbac:	4413      	add	r3, r2
 800fbae:	009b      	lsls	r3, r3, #2
 800fbb0:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fbb4:	687a      	ldr	r2, [r7, #4]
 800fbb6:	4413      	add	r3, r2
 800fbb8:	3304      	adds	r3, #4
 800fbba:	60fb      	str	r3, [r7, #12]
 800fbbc:	687b      	ldr	r3, [r7, #4]
 800fbbe:	681b      	ldr	r3, [r3, #0]
 800fbc0:	68f9      	ldr	r1, [r7, #12]
 800fbc2:	4618      	mov	r0, r3
 800fbc4:	f004 fe66 	bl	8014894 <USB_EPStopXfer>
 800fbc8:	4603      	mov	r3, r0
 800fbca:	72fb      	strb	r3, [r7, #11]
 800fbcc:	7afb      	ldrb	r3, [r7, #11]
 800fbce:	4618      	mov	r0, r3
 800fbd0:	3710      	adds	r7, #16
 800fbd2:	46bd      	mov	sp, r7
 800fbd4:	bd80      	pop	{r7, pc}

0800fbd6 <PCD_WriteEmptyTxFifo>:
 800fbd6:	b580      	push	{r7, lr}
 800fbd8:	b08a      	sub	sp, #40	@ 0x28
 800fbda:	af02      	add	r7, sp, #8
 800fbdc:	6078      	str	r0, [r7, #4]
 800fbde:	6039      	str	r1, [r7, #0]
 800fbe0:	687b      	ldr	r3, [r7, #4]
 800fbe2:	681b      	ldr	r3, [r3, #0]
 800fbe4:	617b      	str	r3, [r7, #20]
 800fbe6:	697b      	ldr	r3, [r7, #20]
 800fbe8:	613b      	str	r3, [r7, #16]
 800fbea:	683a      	ldr	r2, [r7, #0]
 800fbec:	4613      	mov	r3, r2
 800fbee:	00db      	lsls	r3, r3, #3
 800fbf0:	4413      	add	r3, r2
 800fbf2:	009b      	lsls	r3, r3, #2
 800fbf4:	3338      	adds	r3, #56	@ 0x38
 800fbf6:	687a      	ldr	r2, [r7, #4]
 800fbf8:	4413      	add	r3, r2
 800fbfa:	3304      	adds	r3, #4
 800fbfc:	60fb      	str	r3, [r7, #12]
 800fbfe:	68fb      	ldr	r3, [r7, #12]
 800fc00:	6a1a      	ldr	r2, [r3, #32]
 800fc02:	68fb      	ldr	r3, [r7, #12]
 800fc04:	699b      	ldr	r3, [r3, #24]
 800fc06:	429a      	cmp	r2, r3
 800fc08:	d901      	bls.n	800fc0e <PCD_WriteEmptyTxFifo+0x38>
 800fc0a:	2301      	movs	r3, #1
 800fc0c:	e06c      	b.n	800fce8 <PCD_WriteEmptyTxFifo+0x112>
 800fc0e:	68fb      	ldr	r3, [r7, #12]
 800fc10:	699a      	ldr	r2, [r3, #24]
 800fc12:	68fb      	ldr	r3, [r7, #12]
 800fc14:	6a1b      	ldr	r3, [r3, #32]
 800fc16:	1ad3      	subs	r3, r2, r3
 800fc18:	61fb      	str	r3, [r7, #28]
 800fc1a:	68fb      	ldr	r3, [r7, #12]
 800fc1c:	68db      	ldr	r3, [r3, #12]
 800fc1e:	69fa      	ldr	r2, [r7, #28]
 800fc20:	429a      	cmp	r2, r3
 800fc22:	d902      	bls.n	800fc2a <PCD_WriteEmptyTxFifo+0x54>
 800fc24:	68fb      	ldr	r3, [r7, #12]
 800fc26:	68db      	ldr	r3, [r3, #12]
 800fc28:	61fb      	str	r3, [r7, #28]
 800fc2a:	69fb      	ldr	r3, [r7, #28]
 800fc2c:	3303      	adds	r3, #3
 800fc2e:	089b      	lsrs	r3, r3, #2
 800fc30:	61bb      	str	r3, [r7, #24]
 800fc32:	e02b      	b.n	800fc8c <PCD_WriteEmptyTxFifo+0xb6>
 800fc34:	68fb      	ldr	r3, [r7, #12]
 800fc36:	699a      	ldr	r2, [r3, #24]
 800fc38:	68fb      	ldr	r3, [r7, #12]
 800fc3a:	6a1b      	ldr	r3, [r3, #32]
 800fc3c:	1ad3      	subs	r3, r2, r3
 800fc3e:	61fb      	str	r3, [r7, #28]
 800fc40:	68fb      	ldr	r3, [r7, #12]
 800fc42:	68db      	ldr	r3, [r3, #12]
 800fc44:	69fa      	ldr	r2, [r7, #28]
 800fc46:	429a      	cmp	r2, r3
 800fc48:	d902      	bls.n	800fc50 <PCD_WriteEmptyTxFifo+0x7a>
 800fc4a:	68fb      	ldr	r3, [r7, #12]
 800fc4c:	68db      	ldr	r3, [r3, #12]
 800fc4e:	61fb      	str	r3, [r7, #28]
 800fc50:	69fb      	ldr	r3, [r7, #28]
 800fc52:	3303      	adds	r3, #3
 800fc54:	089b      	lsrs	r3, r3, #2
 800fc56:	61bb      	str	r3, [r7, #24]
 800fc58:	68fb      	ldr	r3, [r7, #12]
 800fc5a:	6919      	ldr	r1, [r3, #16]
 800fc5c:	683b      	ldr	r3, [r7, #0]
 800fc5e:	b2da      	uxtb	r2, r3
 800fc60:	69fb      	ldr	r3, [r7, #28]
 800fc62:	b298      	uxth	r0, r3
 800fc64:	687b      	ldr	r3, [r7, #4]
 800fc66:	691b      	ldr	r3, [r3, #16]
 800fc68:	b2db      	uxtb	r3, r3
 800fc6a:	9300      	str	r3, [sp, #0]
 800fc6c:	4603      	mov	r3, r0
 800fc6e:	6978      	ldr	r0, [r7, #20]
 800fc70:	f004 feba 	bl	80149e8 <USB_WritePacket>
 800fc74:	68fb      	ldr	r3, [r7, #12]
 800fc76:	691a      	ldr	r2, [r3, #16]
 800fc78:	69fb      	ldr	r3, [r7, #28]
 800fc7a:	441a      	add	r2, r3
 800fc7c:	68fb      	ldr	r3, [r7, #12]
 800fc7e:	611a      	str	r2, [r3, #16]
 800fc80:	68fb      	ldr	r3, [r7, #12]
 800fc82:	6a1a      	ldr	r2, [r3, #32]
 800fc84:	69fb      	ldr	r3, [r7, #28]
 800fc86:	441a      	add	r2, r3
 800fc88:	68fb      	ldr	r3, [r7, #12]
 800fc8a:	621a      	str	r2, [r3, #32]
 800fc8c:	683b      	ldr	r3, [r7, #0]
 800fc8e:	015a      	lsls	r2, r3, #5
 800fc90:	693b      	ldr	r3, [r7, #16]
 800fc92:	4413      	add	r3, r2
 800fc94:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800fc98:	699b      	ldr	r3, [r3, #24]
 800fc9a:	b29b      	uxth	r3, r3
 800fc9c:	69ba      	ldr	r2, [r7, #24]
 800fc9e:	429a      	cmp	r2, r3
 800fca0:	d809      	bhi.n	800fcb6 <PCD_WriteEmptyTxFifo+0xe0>
 800fca2:	68fb      	ldr	r3, [r7, #12]
 800fca4:	6a1a      	ldr	r2, [r3, #32]
 800fca6:	68fb      	ldr	r3, [r7, #12]
 800fca8:	699b      	ldr	r3, [r3, #24]
 800fcaa:	429a      	cmp	r2, r3
 800fcac:	d203      	bcs.n	800fcb6 <PCD_WriteEmptyTxFifo+0xe0>
 800fcae:	68fb      	ldr	r3, [r7, #12]
 800fcb0:	699b      	ldr	r3, [r3, #24]
 800fcb2:	2b00      	cmp	r3, #0
 800fcb4:	d1be      	bne.n	800fc34 <PCD_WriteEmptyTxFifo+0x5e>
 800fcb6:	68fb      	ldr	r3, [r7, #12]
 800fcb8:	699a      	ldr	r2, [r3, #24]
 800fcba:	68fb      	ldr	r3, [r7, #12]
 800fcbc:	6a1b      	ldr	r3, [r3, #32]
 800fcbe:	429a      	cmp	r2, r3
 800fcc0:	d811      	bhi.n	800fce6 <PCD_WriteEmptyTxFifo+0x110>
 800fcc2:	683b      	ldr	r3, [r7, #0]
 800fcc4:	f003 030f 	and.w	r3, r3, #15
 800fcc8:	2201      	movs	r2, #1
 800fcca:	fa02 f303 	lsl.w	r3, r2, r3
 800fcce:	60bb      	str	r3, [r7, #8]
 800fcd0:	693b      	ldr	r3, [r7, #16]
 800fcd2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800fcd6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800fcd8:	68bb      	ldr	r3, [r7, #8]
 800fcda:	43db      	mvns	r3, r3
 800fcdc:	6939      	ldr	r1, [r7, #16]
 800fcde:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800fce2:	4013      	ands	r3, r2
 800fce4:	634b      	str	r3, [r1, #52]	@ 0x34
 800fce6:	2300      	movs	r3, #0
 800fce8:	4618      	mov	r0, r3
 800fcea:	3720      	adds	r7, #32
 800fcec:	46bd      	mov	sp, r7
 800fcee:	bd80      	pop	{r7, pc}

0800fcf0 <PCD_EP_OutXfrComplete_int>:
 800fcf0:	b580      	push	{r7, lr}
 800fcf2:	b088      	sub	sp, #32
 800fcf4:	af00      	add	r7, sp, #0
 800fcf6:	6078      	str	r0, [r7, #4]
 800fcf8:	6039      	str	r1, [r7, #0]
 800fcfa:	687b      	ldr	r3, [r7, #4]
 800fcfc:	681b      	ldr	r3, [r3, #0]
 800fcfe:	61fb      	str	r3, [r7, #28]
 800fd00:	69fb      	ldr	r3, [r7, #28]
 800fd02:	61bb      	str	r3, [r7, #24]
 800fd04:	69fb      	ldr	r3, [r7, #28]
 800fd06:	333c      	adds	r3, #60	@ 0x3c
 800fd08:	3304      	adds	r3, #4
 800fd0a:	681b      	ldr	r3, [r3, #0]
 800fd0c:	617b      	str	r3, [r7, #20]
 800fd0e:	683b      	ldr	r3, [r7, #0]
 800fd10:	015a      	lsls	r2, r3, #5
 800fd12:	69bb      	ldr	r3, [r7, #24]
 800fd14:	4413      	add	r3, r2
 800fd16:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fd1a:	689b      	ldr	r3, [r3, #8]
 800fd1c:	613b      	str	r3, [r7, #16]
 800fd1e:	687b      	ldr	r3, [r7, #4]
 800fd20:	691b      	ldr	r3, [r3, #16]
 800fd22:	2b01      	cmp	r3, #1
 800fd24:	d17b      	bne.n	800fe1e <PCD_EP_OutXfrComplete_int+0x12e>
 800fd26:	693b      	ldr	r3, [r7, #16]
 800fd28:	f003 0308 	and.w	r3, r3, #8
 800fd2c:	2b00      	cmp	r3, #0
 800fd2e:	d015      	beq.n	800fd5c <PCD_EP_OutXfrComplete_int+0x6c>
 800fd30:	697b      	ldr	r3, [r7, #20]
 800fd32:	4a61      	ldr	r2, [pc, #388]	@ (800feb8 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800fd34:	4293      	cmp	r3, r2
 800fd36:	f240 80b9 	bls.w	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd3a:	693b      	ldr	r3, [r7, #16]
 800fd3c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fd40:	2b00      	cmp	r3, #0
 800fd42:	f000 80b3 	beq.w	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd46:	683b      	ldr	r3, [r7, #0]
 800fd48:	015a      	lsls	r2, r3, #5
 800fd4a:	69bb      	ldr	r3, [r7, #24]
 800fd4c:	4413      	add	r3, r2
 800fd4e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fd52:	461a      	mov	r2, r3
 800fd54:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fd58:	6093      	str	r3, [r2, #8]
 800fd5a:	e0a7      	b.n	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd5c:	693b      	ldr	r3, [r7, #16]
 800fd5e:	f003 0320 	and.w	r3, r3, #32
 800fd62:	2b00      	cmp	r3, #0
 800fd64:	d009      	beq.n	800fd7a <PCD_EP_OutXfrComplete_int+0x8a>
 800fd66:	683b      	ldr	r3, [r7, #0]
 800fd68:	015a      	lsls	r2, r3, #5
 800fd6a:	69bb      	ldr	r3, [r7, #24]
 800fd6c:	4413      	add	r3, r2
 800fd6e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fd72:	461a      	mov	r2, r3
 800fd74:	2320      	movs	r3, #32
 800fd76:	6093      	str	r3, [r2, #8]
 800fd78:	e098      	b.n	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd7a:	693b      	ldr	r3, [r7, #16]
 800fd7c:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800fd80:	2b00      	cmp	r3, #0
 800fd82:	f040 8093 	bne.w	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd86:	697b      	ldr	r3, [r7, #20]
 800fd88:	4a4b      	ldr	r2, [pc, #300]	@ (800feb8 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800fd8a:	4293      	cmp	r3, r2
 800fd8c:	d90f      	bls.n	800fdae <PCD_EP_OutXfrComplete_int+0xbe>
 800fd8e:	693b      	ldr	r3, [r7, #16]
 800fd90:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fd94:	2b00      	cmp	r3, #0
 800fd96:	d00a      	beq.n	800fdae <PCD_EP_OutXfrComplete_int+0xbe>
 800fd98:	683b      	ldr	r3, [r7, #0]
 800fd9a:	015a      	lsls	r2, r3, #5
 800fd9c:	69bb      	ldr	r3, [r7, #24]
 800fd9e:	4413      	add	r3, r2
 800fda0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fda4:	461a      	mov	r2, r3
 800fda6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fdaa:	6093      	str	r3, [r2, #8]
 800fdac:	e07e      	b.n	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fdae:	683a      	ldr	r2, [r7, #0]
 800fdb0:	4613      	mov	r3, r2
 800fdb2:	00db      	lsls	r3, r3, #3
 800fdb4:	4413      	add	r3, r2
 800fdb6:	009b      	lsls	r3, r3, #2
 800fdb8:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fdbc:	687a      	ldr	r2, [r7, #4]
 800fdbe:	4413      	add	r3, r2
 800fdc0:	3304      	adds	r3, #4
 800fdc2:	60fb      	str	r3, [r7, #12]
 800fdc4:	68fb      	ldr	r3, [r7, #12]
 800fdc6:	69da      	ldr	r2, [r3, #28]
 800fdc8:	683b      	ldr	r3, [r7, #0]
 800fdca:	0159      	lsls	r1, r3, #5
 800fdcc:	69bb      	ldr	r3, [r7, #24]
 800fdce:	440b      	add	r3, r1
 800fdd0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fdd4:	691b      	ldr	r3, [r3, #16]
 800fdd6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800fdda:	1ad2      	subs	r2, r2, r3
 800fddc:	68fb      	ldr	r3, [r7, #12]
 800fdde:	621a      	str	r2, [r3, #32]
 800fde0:	683b      	ldr	r3, [r7, #0]
 800fde2:	2b00      	cmp	r3, #0
 800fde4:	d114      	bne.n	800fe10 <PCD_EP_OutXfrComplete_int+0x120>
 800fde6:	68fb      	ldr	r3, [r7, #12]
 800fde8:	699b      	ldr	r3, [r3, #24]
 800fdea:	2b00      	cmp	r3, #0
 800fdec:	d109      	bne.n	800fe02 <PCD_EP_OutXfrComplete_int+0x112>
 800fdee:	687b      	ldr	r3, [r7, #4]
 800fdf0:	6818      	ldr	r0, [r3, #0]
 800fdf2:	687b      	ldr	r3, [r7, #4]
 800fdf4:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fdf8:	461a      	mov	r2, r3
 800fdfa:	2101      	movs	r1, #1
 800fdfc:	f005 f88a 	bl	8014f14 <USB_EP0_OutStart>
 800fe00:	e006      	b.n	800fe10 <PCD_EP_OutXfrComplete_int+0x120>
 800fe02:	68fb      	ldr	r3, [r7, #12]
 800fe04:	691a      	ldr	r2, [r3, #16]
 800fe06:	68fb      	ldr	r3, [r7, #12]
 800fe08:	6a1b      	ldr	r3, [r3, #32]
 800fe0a:	441a      	add	r2, r3
 800fe0c:	68fb      	ldr	r3, [r7, #12]
 800fe0e:	611a      	str	r2, [r3, #16]
 800fe10:	683b      	ldr	r3, [r7, #0]
 800fe12:	b2db      	uxtb	r3, r3
 800fe14:	4619      	mov	r1, r3
 800fe16:	6878      	ldr	r0, [r7, #4]
 800fe18:	f00a fc1c 	bl	801a654 <HAL_PCD_DataOutStageCallback>
 800fe1c:	e046      	b.n	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe1e:	697b      	ldr	r3, [r7, #20]
 800fe20:	4a26      	ldr	r2, [pc, #152]	@ (800febc <PCD_EP_OutXfrComplete_int+0x1cc>)
 800fe22:	4293      	cmp	r3, r2
 800fe24:	d124      	bne.n	800fe70 <PCD_EP_OutXfrComplete_int+0x180>
 800fe26:	693b      	ldr	r3, [r7, #16]
 800fe28:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fe2c:	2b00      	cmp	r3, #0
 800fe2e:	d00a      	beq.n	800fe46 <PCD_EP_OutXfrComplete_int+0x156>
 800fe30:	683b      	ldr	r3, [r7, #0]
 800fe32:	015a      	lsls	r2, r3, #5
 800fe34:	69bb      	ldr	r3, [r7, #24]
 800fe36:	4413      	add	r3, r2
 800fe38:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fe3c:	461a      	mov	r2, r3
 800fe3e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fe42:	6093      	str	r3, [r2, #8]
 800fe44:	e032      	b.n	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe46:	693b      	ldr	r3, [r7, #16]
 800fe48:	f003 0320 	and.w	r3, r3, #32
 800fe4c:	2b00      	cmp	r3, #0
 800fe4e:	d008      	beq.n	800fe62 <PCD_EP_OutXfrComplete_int+0x172>
 800fe50:	683b      	ldr	r3, [r7, #0]
 800fe52:	015a      	lsls	r2, r3, #5
 800fe54:	69bb      	ldr	r3, [r7, #24]
 800fe56:	4413      	add	r3, r2
 800fe58:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fe5c:	461a      	mov	r2, r3
 800fe5e:	2320      	movs	r3, #32
 800fe60:	6093      	str	r3, [r2, #8]
 800fe62:	683b      	ldr	r3, [r7, #0]
 800fe64:	b2db      	uxtb	r3, r3
 800fe66:	4619      	mov	r1, r3
 800fe68:	6878      	ldr	r0, [r7, #4]
 800fe6a:	f00a fbf3 	bl	801a654 <HAL_PCD_DataOutStageCallback>
 800fe6e:	e01d      	b.n	800feac <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe70:	683b      	ldr	r3, [r7, #0]
 800fe72:	2b00      	cmp	r3, #0
 800fe74:	d114      	bne.n	800fea0 <PCD_EP_OutXfrComplete_int+0x1b0>
 800fe76:	6879      	ldr	r1, [r7, #4]
 800fe78:	683a      	ldr	r2, [r7, #0]
 800fe7a:	4613      	mov	r3, r2
 800fe7c:	00db      	lsls	r3, r3, #3
 800fe7e:	4413      	add	r3, r2
 800fe80:	009b      	lsls	r3, r3, #2
 800fe82:	440b      	add	r3, r1
 800fe84:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 800fe88:	681b      	ldr	r3, [r3, #0]
 800fe8a:	2b00      	cmp	r3, #0
 800fe8c:	d108      	bne.n	800fea0 <PCD_EP_OutXfrComplete_int+0x1b0>
 800fe8e:	687b      	ldr	r3, [r7, #4]
 800fe90:	6818      	ldr	r0, [r3, #0]
 800fe92:	687b      	ldr	r3, [r7, #4]
 800fe94:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fe98:	461a      	mov	r2, r3
 800fe9a:	2100      	movs	r1, #0
 800fe9c:	f005 f83a 	bl	8014f14 <USB_EP0_OutStart>
 800fea0:	683b      	ldr	r3, [r7, #0]
 800fea2:	b2db      	uxtb	r3, r3
 800fea4:	4619      	mov	r1, r3
 800fea6:	6878      	ldr	r0, [r7, #4]
 800fea8:	f00a fbd4 	bl	801a654 <HAL_PCD_DataOutStageCallback>
 800feac:	2300      	movs	r3, #0
 800feae:	4618      	mov	r0, r3
 800feb0:	3720      	adds	r7, #32
 800feb2:	46bd      	mov	sp, r7
 800feb4:	bd80      	pop	{r7, pc}
 800feb6:	bf00      	nop
 800feb8:	4f54300a 	.word	0x4f54300a
 800febc:	4f54310a 	.word	0x4f54310a

0800fec0 <PCD_EP_OutSetupPacket_int>:
 800fec0:	b580      	push	{r7, lr}
 800fec2:	b086      	sub	sp, #24
 800fec4:	af00      	add	r7, sp, #0
 800fec6:	6078      	str	r0, [r7, #4]
 800fec8:	6039      	str	r1, [r7, #0]
 800feca:	687b      	ldr	r3, [r7, #4]
 800fecc:	681b      	ldr	r3, [r3, #0]
 800fece:	617b      	str	r3, [r7, #20]
 800fed0:	697b      	ldr	r3, [r7, #20]
 800fed2:	613b      	str	r3, [r7, #16]
 800fed4:	697b      	ldr	r3, [r7, #20]
 800fed6:	333c      	adds	r3, #60	@ 0x3c
 800fed8:	3304      	adds	r3, #4
 800feda:	681b      	ldr	r3, [r3, #0]
 800fedc:	60fb      	str	r3, [r7, #12]
 800fede:	683b      	ldr	r3, [r7, #0]
 800fee0:	015a      	lsls	r2, r3, #5
 800fee2:	693b      	ldr	r3, [r7, #16]
 800fee4:	4413      	add	r3, r2
 800fee6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800feea:	689b      	ldr	r3, [r3, #8]
 800feec:	60bb      	str	r3, [r7, #8]
 800feee:	68fb      	ldr	r3, [r7, #12]
 800fef0:	4a15      	ldr	r2, [pc, #84]	@ (800ff48 <PCD_EP_OutSetupPacket_int+0x88>)
 800fef2:	4293      	cmp	r3, r2
 800fef4:	d90e      	bls.n	800ff14 <PCD_EP_OutSetupPacket_int+0x54>
 800fef6:	68bb      	ldr	r3, [r7, #8]
 800fef8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fefc:	2b00      	cmp	r3, #0
 800fefe:	d009      	beq.n	800ff14 <PCD_EP_OutSetupPacket_int+0x54>
 800ff00:	683b      	ldr	r3, [r7, #0]
 800ff02:	015a      	lsls	r2, r3, #5
 800ff04:	693b      	ldr	r3, [r7, #16]
 800ff06:	4413      	add	r3, r2
 800ff08:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ff0c:	461a      	mov	r2, r3
 800ff0e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ff12:	6093      	str	r3, [r2, #8]
 800ff14:	6878      	ldr	r0, [r7, #4]
 800ff16:	f00a fb8b 	bl	801a630 <HAL_PCD_SetupStageCallback>
 800ff1a:	68fb      	ldr	r3, [r7, #12]
 800ff1c:	4a0a      	ldr	r2, [pc, #40]	@ (800ff48 <PCD_EP_OutSetupPacket_int+0x88>)
 800ff1e:	4293      	cmp	r3, r2
 800ff20:	d90c      	bls.n	800ff3c <PCD_EP_OutSetupPacket_int+0x7c>
 800ff22:	687b      	ldr	r3, [r7, #4]
 800ff24:	691b      	ldr	r3, [r3, #16]
 800ff26:	2b01      	cmp	r3, #1
 800ff28:	d108      	bne.n	800ff3c <PCD_EP_OutSetupPacket_int+0x7c>
 800ff2a:	687b      	ldr	r3, [r7, #4]
 800ff2c:	6818      	ldr	r0, [r3, #0]
 800ff2e:	687b      	ldr	r3, [r7, #4]
 800ff30:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800ff34:	461a      	mov	r2, r3
 800ff36:	2101      	movs	r1, #1
 800ff38:	f004 ffec 	bl	8014f14 <USB_EP0_OutStart>
 800ff3c:	2300      	movs	r3, #0
 800ff3e:	4618      	mov	r0, r3
 800ff40:	3718      	adds	r7, #24
 800ff42:	46bd      	mov	sp, r7
 800ff44:	bd80      	pop	{r7, pc}
 800ff46:	bf00      	nop
 800ff48:	4f54300a 	.word	0x4f54300a

0800ff4c <HAL_PCDEx_SetTxFiFo>:
 800ff4c:	b480      	push	{r7}
 800ff4e:	b085      	sub	sp, #20
 800ff50:	af00      	add	r7, sp, #0
 800ff52:	6078      	str	r0, [r7, #4]
 800ff54:	460b      	mov	r3, r1
 800ff56:	70fb      	strb	r3, [r7, #3]
 800ff58:	4613      	mov	r3, r2
 800ff5a:	803b      	strh	r3, [r7, #0]
 800ff5c:	687b      	ldr	r3, [r7, #4]
 800ff5e:	681b      	ldr	r3, [r3, #0]
 800ff60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ff62:	60bb      	str	r3, [r7, #8]
 800ff64:	78fb      	ldrb	r3, [r7, #3]
 800ff66:	2b00      	cmp	r3, #0
 800ff68:	d107      	bne.n	800ff7a <HAL_PCDEx_SetTxFiFo+0x2e>
 800ff6a:	883b      	ldrh	r3, [r7, #0]
 800ff6c:	0419      	lsls	r1, r3, #16
 800ff6e:	687b      	ldr	r3, [r7, #4]
 800ff70:	681b      	ldr	r3, [r3, #0]
 800ff72:	68ba      	ldr	r2, [r7, #8]
 800ff74:	430a      	orrs	r2, r1
 800ff76:	629a      	str	r2, [r3, #40]	@ 0x28
 800ff78:	e028      	b.n	800ffcc <HAL_PCDEx_SetTxFiFo+0x80>
 800ff7a:	687b      	ldr	r3, [r7, #4]
 800ff7c:	681b      	ldr	r3, [r3, #0]
 800ff7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ff80:	0c1b      	lsrs	r3, r3, #16
 800ff82:	68ba      	ldr	r2, [r7, #8]
 800ff84:	4413      	add	r3, r2
 800ff86:	60bb      	str	r3, [r7, #8]
 800ff88:	2300      	movs	r3, #0
 800ff8a:	73fb      	strb	r3, [r7, #15]
 800ff8c:	e00d      	b.n	800ffaa <HAL_PCDEx_SetTxFiFo+0x5e>
 800ff8e:	687b      	ldr	r3, [r7, #4]
 800ff90:	681a      	ldr	r2, [r3, #0]
 800ff92:	7bfb      	ldrb	r3, [r7, #15]
 800ff94:	3340      	adds	r3, #64	@ 0x40
 800ff96:	009b      	lsls	r3, r3, #2
 800ff98:	4413      	add	r3, r2
 800ff9a:	685b      	ldr	r3, [r3, #4]
 800ff9c:	0c1b      	lsrs	r3, r3, #16
 800ff9e:	68ba      	ldr	r2, [r7, #8]
 800ffa0:	4413      	add	r3, r2
 800ffa2:	60bb      	str	r3, [r7, #8]
 800ffa4:	7bfb      	ldrb	r3, [r7, #15]
 800ffa6:	3301      	adds	r3, #1
 800ffa8:	73fb      	strb	r3, [r7, #15]
 800ffaa:	7bfa      	ldrb	r2, [r7, #15]
 800ffac:	78fb      	ldrb	r3, [r7, #3]
 800ffae:	3b01      	subs	r3, #1
 800ffb0:	429a      	cmp	r2, r3
 800ffb2:	d3ec      	bcc.n	800ff8e <HAL_PCDEx_SetTxFiFo+0x42>
 800ffb4:	883b      	ldrh	r3, [r7, #0]
 800ffb6:	0418      	lsls	r0, r3, #16
 800ffb8:	687b      	ldr	r3, [r7, #4]
 800ffba:	6819      	ldr	r1, [r3, #0]
 800ffbc:	78fb      	ldrb	r3, [r7, #3]
 800ffbe:	3b01      	subs	r3, #1
 800ffc0:	68ba      	ldr	r2, [r7, #8]
 800ffc2:	4302      	orrs	r2, r0
 800ffc4:	3340      	adds	r3, #64	@ 0x40
 800ffc6:	009b      	lsls	r3, r3, #2
 800ffc8:	440b      	add	r3, r1
 800ffca:	605a      	str	r2, [r3, #4]
 800ffcc:	2300      	movs	r3, #0
 800ffce:	4618      	mov	r0, r3
 800ffd0:	3714      	adds	r7, #20
 800ffd2:	46bd      	mov	sp, r7
 800ffd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffd8:	4770      	bx	lr

0800ffda <HAL_PCDEx_SetRxFiFo>:
 800ffda:	b480      	push	{r7}
 800ffdc:	b083      	sub	sp, #12
 800ffde:	af00      	add	r7, sp, #0
 800ffe0:	6078      	str	r0, [r7, #4]
 800ffe2:	460b      	mov	r3, r1
 800ffe4:	807b      	strh	r3, [r7, #2]
 800ffe6:	687b      	ldr	r3, [r7, #4]
 800ffe8:	681b      	ldr	r3, [r3, #0]
 800ffea:	887a      	ldrh	r2, [r7, #2]
 800ffec:	625a      	str	r2, [r3, #36]	@ 0x24
 800ffee:	2300      	movs	r3, #0
 800fff0:	4618      	mov	r0, r3
 800fff2:	370c      	adds	r7, #12
 800fff4:	46bd      	mov	sp, r7
 800fff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fffa:	4770      	bx	lr

0800fffc <HAL_PCDEx_LPM_Callback>:
 800fffc:	b480      	push	{r7}
 800fffe:	b083      	sub	sp, #12
 8010000:	af00      	add	r7, sp, #0
 8010002:	6078      	str	r0, [r7, #4]
 8010004:	460b      	mov	r3, r1
 8010006:	70fb      	strb	r3, [r7, #3]
 8010008:	bf00      	nop
 801000a:	370c      	adds	r7, #12
 801000c:	46bd      	mov	sp, r7
 801000e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010012:	4770      	bx	lr

08010014 <HAL_RCC_OscConfig>:
 8010014:	b580      	push	{r7, lr}
 8010016:	b086      	sub	sp, #24
 8010018:	af00      	add	r7, sp, #0
 801001a:	6078      	str	r0, [r7, #4]
 801001c:	687b      	ldr	r3, [r7, #4]
 801001e:	2b00      	cmp	r3, #0
 8010020:	d101      	bne.n	8010026 <HAL_RCC_OscConfig+0x12>
 8010022:	2301      	movs	r3, #1
 8010024:	e267      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 8010026:	687b      	ldr	r3, [r7, #4]
 8010028:	681b      	ldr	r3, [r3, #0]
 801002a:	f003 0301 	and.w	r3, r3, #1
 801002e:	2b00      	cmp	r3, #0
 8010030:	d075      	beq.n	801011e <HAL_RCC_OscConfig+0x10a>
 8010032:	4b88      	ldr	r3, [pc, #544]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010034:	689b      	ldr	r3, [r3, #8]
 8010036:	f003 030c 	and.w	r3, r3, #12
 801003a:	2b04      	cmp	r3, #4
 801003c:	d00c      	beq.n	8010058 <HAL_RCC_OscConfig+0x44>
 801003e:	4b85      	ldr	r3, [pc, #532]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010040:	689b      	ldr	r3, [r3, #8]
 8010042:	f003 030c 	and.w	r3, r3, #12
 8010046:	2b08      	cmp	r3, #8
 8010048:	d112      	bne.n	8010070 <HAL_RCC_OscConfig+0x5c>
 801004a:	4b82      	ldr	r3, [pc, #520]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 801004c:	685b      	ldr	r3, [r3, #4]
 801004e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8010052:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8010056:	d10b      	bne.n	8010070 <HAL_RCC_OscConfig+0x5c>
 8010058:	4b7e      	ldr	r3, [pc, #504]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 801005a:	681b      	ldr	r3, [r3, #0]
 801005c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8010060:	2b00      	cmp	r3, #0
 8010062:	d05b      	beq.n	801011c <HAL_RCC_OscConfig+0x108>
 8010064:	687b      	ldr	r3, [r7, #4]
 8010066:	685b      	ldr	r3, [r3, #4]
 8010068:	2b00      	cmp	r3, #0
 801006a:	d157      	bne.n	801011c <HAL_RCC_OscConfig+0x108>
 801006c:	2301      	movs	r3, #1
 801006e:	e242      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 8010070:	687b      	ldr	r3, [r7, #4]
 8010072:	685b      	ldr	r3, [r3, #4]
 8010074:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8010078:	d106      	bne.n	8010088 <HAL_RCC_OscConfig+0x74>
 801007a:	4b76      	ldr	r3, [pc, #472]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 801007c:	681b      	ldr	r3, [r3, #0]
 801007e:	4a75      	ldr	r2, [pc, #468]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010080:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8010084:	6013      	str	r3, [r2, #0]
 8010086:	e01d      	b.n	80100c4 <HAL_RCC_OscConfig+0xb0>
 8010088:	687b      	ldr	r3, [r7, #4]
 801008a:	685b      	ldr	r3, [r3, #4]
 801008c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8010090:	d10c      	bne.n	80100ac <HAL_RCC_OscConfig+0x98>
 8010092:	4b70      	ldr	r3, [pc, #448]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010094:	681b      	ldr	r3, [r3, #0]
 8010096:	4a6f      	ldr	r2, [pc, #444]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010098:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 801009c:	6013      	str	r3, [r2, #0]
 801009e:	4b6d      	ldr	r3, [pc, #436]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100a0:	681b      	ldr	r3, [r3, #0]
 80100a2:	4a6c      	ldr	r2, [pc, #432]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100a4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80100a8:	6013      	str	r3, [r2, #0]
 80100aa:	e00b      	b.n	80100c4 <HAL_RCC_OscConfig+0xb0>
 80100ac:	4b69      	ldr	r3, [pc, #420]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100ae:	681b      	ldr	r3, [r3, #0]
 80100b0:	4a68      	ldr	r2, [pc, #416]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100b2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80100b6:	6013      	str	r3, [r2, #0]
 80100b8:	4b66      	ldr	r3, [pc, #408]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100ba:	681b      	ldr	r3, [r3, #0]
 80100bc:	4a65      	ldr	r2, [pc, #404]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100be:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80100c2:	6013      	str	r3, [r2, #0]
 80100c4:	687b      	ldr	r3, [r7, #4]
 80100c6:	685b      	ldr	r3, [r3, #4]
 80100c8:	2b00      	cmp	r3, #0
 80100ca:	d013      	beq.n	80100f4 <HAL_RCC_OscConfig+0xe0>
 80100cc:	f7fa ff98 	bl	800b000 <HAL_GetTick>
 80100d0:	6138      	str	r0, [r7, #16]
 80100d2:	e008      	b.n	80100e6 <HAL_RCC_OscConfig+0xd2>
 80100d4:	f7fa ff94 	bl	800b000 <HAL_GetTick>
 80100d8:	4602      	mov	r2, r0
 80100da:	693b      	ldr	r3, [r7, #16]
 80100dc:	1ad3      	subs	r3, r2, r3
 80100de:	2b64      	cmp	r3, #100	@ 0x64
 80100e0:	d901      	bls.n	80100e6 <HAL_RCC_OscConfig+0xd2>
 80100e2:	2303      	movs	r3, #3
 80100e4:	e207      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 80100e6:	4b5b      	ldr	r3, [pc, #364]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80100e8:	681b      	ldr	r3, [r3, #0]
 80100ea:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80100ee:	2b00      	cmp	r3, #0
 80100f0:	d0f0      	beq.n	80100d4 <HAL_RCC_OscConfig+0xc0>
 80100f2:	e014      	b.n	801011e <HAL_RCC_OscConfig+0x10a>
 80100f4:	f7fa ff84 	bl	800b000 <HAL_GetTick>
 80100f8:	6138      	str	r0, [r7, #16]
 80100fa:	e008      	b.n	801010e <HAL_RCC_OscConfig+0xfa>
 80100fc:	f7fa ff80 	bl	800b000 <HAL_GetTick>
 8010100:	4602      	mov	r2, r0
 8010102:	693b      	ldr	r3, [r7, #16]
 8010104:	1ad3      	subs	r3, r2, r3
 8010106:	2b64      	cmp	r3, #100	@ 0x64
 8010108:	d901      	bls.n	801010e <HAL_RCC_OscConfig+0xfa>
 801010a:	2303      	movs	r3, #3
 801010c:	e1f3      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 801010e:	4b51      	ldr	r3, [pc, #324]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010110:	681b      	ldr	r3, [r3, #0]
 8010112:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8010116:	2b00      	cmp	r3, #0
 8010118:	d1f0      	bne.n	80100fc <HAL_RCC_OscConfig+0xe8>
 801011a:	e000      	b.n	801011e <HAL_RCC_OscConfig+0x10a>
 801011c:	bf00      	nop
 801011e:	687b      	ldr	r3, [r7, #4]
 8010120:	681b      	ldr	r3, [r3, #0]
 8010122:	f003 0302 	and.w	r3, r3, #2
 8010126:	2b00      	cmp	r3, #0
 8010128:	d063      	beq.n	80101f2 <HAL_RCC_OscConfig+0x1de>
 801012a:	4b4a      	ldr	r3, [pc, #296]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 801012c:	689b      	ldr	r3, [r3, #8]
 801012e:	f003 030c 	and.w	r3, r3, #12
 8010132:	2b00      	cmp	r3, #0
 8010134:	d00b      	beq.n	801014e <HAL_RCC_OscConfig+0x13a>
 8010136:	4b47      	ldr	r3, [pc, #284]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010138:	689b      	ldr	r3, [r3, #8]
 801013a:	f003 030c 	and.w	r3, r3, #12
 801013e:	2b08      	cmp	r3, #8
 8010140:	d11c      	bne.n	801017c <HAL_RCC_OscConfig+0x168>
 8010142:	4b44      	ldr	r3, [pc, #272]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010144:	685b      	ldr	r3, [r3, #4]
 8010146:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 801014a:	2b00      	cmp	r3, #0
 801014c:	d116      	bne.n	801017c <HAL_RCC_OscConfig+0x168>
 801014e:	4b41      	ldr	r3, [pc, #260]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010150:	681b      	ldr	r3, [r3, #0]
 8010152:	f003 0302 	and.w	r3, r3, #2
 8010156:	2b00      	cmp	r3, #0
 8010158:	d005      	beq.n	8010166 <HAL_RCC_OscConfig+0x152>
 801015a:	687b      	ldr	r3, [r7, #4]
 801015c:	68db      	ldr	r3, [r3, #12]
 801015e:	2b01      	cmp	r3, #1
 8010160:	d001      	beq.n	8010166 <HAL_RCC_OscConfig+0x152>
 8010162:	2301      	movs	r3, #1
 8010164:	e1c7      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 8010166:	4b3b      	ldr	r3, [pc, #236]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010168:	681b      	ldr	r3, [r3, #0]
 801016a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 801016e:	687b      	ldr	r3, [r7, #4]
 8010170:	691b      	ldr	r3, [r3, #16]
 8010172:	00db      	lsls	r3, r3, #3
 8010174:	4937      	ldr	r1, [pc, #220]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010176:	4313      	orrs	r3, r2
 8010178:	600b      	str	r3, [r1, #0]
 801017a:	e03a      	b.n	80101f2 <HAL_RCC_OscConfig+0x1de>
 801017c:	687b      	ldr	r3, [r7, #4]
 801017e:	68db      	ldr	r3, [r3, #12]
 8010180:	2b00      	cmp	r3, #0
 8010182:	d020      	beq.n	80101c6 <HAL_RCC_OscConfig+0x1b2>
 8010184:	4b34      	ldr	r3, [pc, #208]	@ (8010258 <HAL_RCC_OscConfig+0x244>)
 8010186:	2201      	movs	r2, #1
 8010188:	601a      	str	r2, [r3, #0]
 801018a:	f7fa ff39 	bl	800b000 <HAL_GetTick>
 801018e:	6138      	str	r0, [r7, #16]
 8010190:	e008      	b.n	80101a4 <HAL_RCC_OscConfig+0x190>
 8010192:	f7fa ff35 	bl	800b000 <HAL_GetTick>
 8010196:	4602      	mov	r2, r0
 8010198:	693b      	ldr	r3, [r7, #16]
 801019a:	1ad3      	subs	r3, r2, r3
 801019c:	2b02      	cmp	r3, #2
 801019e:	d901      	bls.n	80101a4 <HAL_RCC_OscConfig+0x190>
 80101a0:	2303      	movs	r3, #3
 80101a2:	e1a8      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 80101a4:	4b2b      	ldr	r3, [pc, #172]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80101a6:	681b      	ldr	r3, [r3, #0]
 80101a8:	f003 0302 	and.w	r3, r3, #2
 80101ac:	2b00      	cmp	r3, #0
 80101ae:	d0f0      	beq.n	8010192 <HAL_RCC_OscConfig+0x17e>
 80101b0:	4b28      	ldr	r3, [pc, #160]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80101b2:	681b      	ldr	r3, [r3, #0]
 80101b4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80101b8:	687b      	ldr	r3, [r7, #4]
 80101ba:	691b      	ldr	r3, [r3, #16]
 80101bc:	00db      	lsls	r3, r3, #3
 80101be:	4925      	ldr	r1, [pc, #148]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80101c0:	4313      	orrs	r3, r2
 80101c2:	600b      	str	r3, [r1, #0]
 80101c4:	e015      	b.n	80101f2 <HAL_RCC_OscConfig+0x1de>
 80101c6:	4b24      	ldr	r3, [pc, #144]	@ (8010258 <HAL_RCC_OscConfig+0x244>)
 80101c8:	2200      	movs	r2, #0
 80101ca:	601a      	str	r2, [r3, #0]
 80101cc:	f7fa ff18 	bl	800b000 <HAL_GetTick>
 80101d0:	6138      	str	r0, [r7, #16]
 80101d2:	e008      	b.n	80101e6 <HAL_RCC_OscConfig+0x1d2>
 80101d4:	f7fa ff14 	bl	800b000 <HAL_GetTick>
 80101d8:	4602      	mov	r2, r0
 80101da:	693b      	ldr	r3, [r7, #16]
 80101dc:	1ad3      	subs	r3, r2, r3
 80101de:	2b02      	cmp	r3, #2
 80101e0:	d901      	bls.n	80101e6 <HAL_RCC_OscConfig+0x1d2>
 80101e2:	2303      	movs	r3, #3
 80101e4:	e187      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 80101e6:	4b1b      	ldr	r3, [pc, #108]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 80101e8:	681b      	ldr	r3, [r3, #0]
 80101ea:	f003 0302 	and.w	r3, r3, #2
 80101ee:	2b00      	cmp	r3, #0
 80101f0:	d1f0      	bne.n	80101d4 <HAL_RCC_OscConfig+0x1c0>
 80101f2:	687b      	ldr	r3, [r7, #4]
 80101f4:	681b      	ldr	r3, [r3, #0]
 80101f6:	f003 0308 	and.w	r3, r3, #8
 80101fa:	2b00      	cmp	r3, #0
 80101fc:	d036      	beq.n	801026c <HAL_RCC_OscConfig+0x258>
 80101fe:	687b      	ldr	r3, [r7, #4]
 8010200:	695b      	ldr	r3, [r3, #20]
 8010202:	2b00      	cmp	r3, #0
 8010204:	d016      	beq.n	8010234 <HAL_RCC_OscConfig+0x220>
 8010206:	4b15      	ldr	r3, [pc, #84]	@ (801025c <HAL_RCC_OscConfig+0x248>)
 8010208:	2201      	movs	r2, #1
 801020a:	601a      	str	r2, [r3, #0]
 801020c:	f7fa fef8 	bl	800b000 <HAL_GetTick>
 8010210:	6138      	str	r0, [r7, #16]
 8010212:	e008      	b.n	8010226 <HAL_RCC_OscConfig+0x212>
 8010214:	f7fa fef4 	bl	800b000 <HAL_GetTick>
 8010218:	4602      	mov	r2, r0
 801021a:	693b      	ldr	r3, [r7, #16]
 801021c:	1ad3      	subs	r3, r2, r3
 801021e:	2b02      	cmp	r3, #2
 8010220:	d901      	bls.n	8010226 <HAL_RCC_OscConfig+0x212>
 8010222:	2303      	movs	r3, #3
 8010224:	e167      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 8010226:	4b0b      	ldr	r3, [pc, #44]	@ (8010254 <HAL_RCC_OscConfig+0x240>)
 8010228:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 801022a:	f003 0302 	and.w	r3, r3, #2
 801022e:	2b00      	cmp	r3, #0
 8010230:	d0f0      	beq.n	8010214 <HAL_RCC_OscConfig+0x200>
 8010232:	e01b      	b.n	801026c <HAL_RCC_OscConfig+0x258>
 8010234:	4b09      	ldr	r3, [pc, #36]	@ (801025c <HAL_RCC_OscConfig+0x248>)
 8010236:	2200      	movs	r2, #0
 8010238:	601a      	str	r2, [r3, #0]
 801023a:	f7fa fee1 	bl	800b000 <HAL_GetTick>
 801023e:	6138      	str	r0, [r7, #16]
 8010240:	e00e      	b.n	8010260 <HAL_RCC_OscConfig+0x24c>
 8010242:	f7fa fedd 	bl	800b000 <HAL_GetTick>
 8010246:	4602      	mov	r2, r0
 8010248:	693b      	ldr	r3, [r7, #16]
 801024a:	1ad3      	subs	r3, r2, r3
 801024c:	2b02      	cmp	r3, #2
 801024e:	d907      	bls.n	8010260 <HAL_RCC_OscConfig+0x24c>
 8010250:	2303      	movs	r3, #3
 8010252:	e150      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 8010254:	40023800 	.word	0x40023800
 8010258:	42470000 	.word	0x42470000
 801025c:	42470e80 	.word	0x42470e80
 8010260:	4b88      	ldr	r3, [pc, #544]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010262:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010264:	f003 0302 	and.w	r3, r3, #2
 8010268:	2b00      	cmp	r3, #0
 801026a:	d1ea      	bne.n	8010242 <HAL_RCC_OscConfig+0x22e>
 801026c:	687b      	ldr	r3, [r7, #4]
 801026e:	681b      	ldr	r3, [r3, #0]
 8010270:	f003 0304 	and.w	r3, r3, #4
 8010274:	2b00      	cmp	r3, #0
 8010276:	f000 8097 	beq.w	80103a8 <HAL_RCC_OscConfig+0x394>
 801027a:	2300      	movs	r3, #0
 801027c:	75fb      	strb	r3, [r7, #23]
 801027e:	4b81      	ldr	r3, [pc, #516]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010280:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010282:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8010286:	2b00      	cmp	r3, #0
 8010288:	d10f      	bne.n	80102aa <HAL_RCC_OscConfig+0x296>
 801028a:	2300      	movs	r3, #0
 801028c:	60bb      	str	r3, [r7, #8]
 801028e:	4b7d      	ldr	r3, [pc, #500]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010290:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010292:	4a7c      	ldr	r2, [pc, #496]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010294:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8010298:	6413      	str	r3, [r2, #64]	@ 0x40
 801029a:	4b7a      	ldr	r3, [pc, #488]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801029c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801029e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80102a2:	60bb      	str	r3, [r7, #8]
 80102a4:	68bb      	ldr	r3, [r7, #8]
 80102a6:	2301      	movs	r3, #1
 80102a8:	75fb      	strb	r3, [r7, #23]
 80102aa:	4b77      	ldr	r3, [pc, #476]	@ (8010488 <HAL_RCC_OscConfig+0x474>)
 80102ac:	681b      	ldr	r3, [r3, #0]
 80102ae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80102b2:	2b00      	cmp	r3, #0
 80102b4:	d118      	bne.n	80102e8 <HAL_RCC_OscConfig+0x2d4>
 80102b6:	4b74      	ldr	r3, [pc, #464]	@ (8010488 <HAL_RCC_OscConfig+0x474>)
 80102b8:	681b      	ldr	r3, [r3, #0]
 80102ba:	4a73      	ldr	r2, [pc, #460]	@ (8010488 <HAL_RCC_OscConfig+0x474>)
 80102bc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80102c0:	6013      	str	r3, [r2, #0]
 80102c2:	f7fa fe9d 	bl	800b000 <HAL_GetTick>
 80102c6:	6138      	str	r0, [r7, #16]
 80102c8:	e008      	b.n	80102dc <HAL_RCC_OscConfig+0x2c8>
 80102ca:	f7fa fe99 	bl	800b000 <HAL_GetTick>
 80102ce:	4602      	mov	r2, r0
 80102d0:	693b      	ldr	r3, [r7, #16]
 80102d2:	1ad3      	subs	r3, r2, r3
 80102d4:	2b02      	cmp	r3, #2
 80102d6:	d901      	bls.n	80102dc <HAL_RCC_OscConfig+0x2c8>
 80102d8:	2303      	movs	r3, #3
 80102da:	e10c      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 80102dc:	4b6a      	ldr	r3, [pc, #424]	@ (8010488 <HAL_RCC_OscConfig+0x474>)
 80102de:	681b      	ldr	r3, [r3, #0]
 80102e0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80102e4:	2b00      	cmp	r3, #0
 80102e6:	d0f0      	beq.n	80102ca <HAL_RCC_OscConfig+0x2b6>
 80102e8:	687b      	ldr	r3, [r7, #4]
 80102ea:	689b      	ldr	r3, [r3, #8]
 80102ec:	2b01      	cmp	r3, #1
 80102ee:	d106      	bne.n	80102fe <HAL_RCC_OscConfig+0x2ea>
 80102f0:	4b64      	ldr	r3, [pc, #400]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 80102f2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80102f4:	4a63      	ldr	r2, [pc, #396]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 80102f6:	f043 0301 	orr.w	r3, r3, #1
 80102fa:	6713      	str	r3, [r2, #112]	@ 0x70
 80102fc:	e01c      	b.n	8010338 <HAL_RCC_OscConfig+0x324>
 80102fe:	687b      	ldr	r3, [r7, #4]
 8010300:	689b      	ldr	r3, [r3, #8]
 8010302:	2b05      	cmp	r3, #5
 8010304:	d10c      	bne.n	8010320 <HAL_RCC_OscConfig+0x30c>
 8010306:	4b5f      	ldr	r3, [pc, #380]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010308:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801030a:	4a5e      	ldr	r2, [pc, #376]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801030c:	f043 0304 	orr.w	r3, r3, #4
 8010310:	6713      	str	r3, [r2, #112]	@ 0x70
 8010312:	4b5c      	ldr	r3, [pc, #368]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010314:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010316:	4a5b      	ldr	r2, [pc, #364]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010318:	f043 0301 	orr.w	r3, r3, #1
 801031c:	6713      	str	r3, [r2, #112]	@ 0x70
 801031e:	e00b      	b.n	8010338 <HAL_RCC_OscConfig+0x324>
 8010320:	4b58      	ldr	r3, [pc, #352]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010322:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010324:	4a57      	ldr	r2, [pc, #348]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010326:	f023 0301 	bic.w	r3, r3, #1
 801032a:	6713      	str	r3, [r2, #112]	@ 0x70
 801032c:	4b55      	ldr	r3, [pc, #340]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801032e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010330:	4a54      	ldr	r2, [pc, #336]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010332:	f023 0304 	bic.w	r3, r3, #4
 8010336:	6713      	str	r3, [r2, #112]	@ 0x70
 8010338:	687b      	ldr	r3, [r7, #4]
 801033a:	689b      	ldr	r3, [r3, #8]
 801033c:	2b00      	cmp	r3, #0
 801033e:	d015      	beq.n	801036c <HAL_RCC_OscConfig+0x358>
 8010340:	f7fa fe5e 	bl	800b000 <HAL_GetTick>
 8010344:	6138      	str	r0, [r7, #16]
 8010346:	e00a      	b.n	801035e <HAL_RCC_OscConfig+0x34a>
 8010348:	f7fa fe5a 	bl	800b000 <HAL_GetTick>
 801034c:	4602      	mov	r2, r0
 801034e:	693b      	ldr	r3, [r7, #16]
 8010350:	1ad3      	subs	r3, r2, r3
 8010352:	f241 3288 	movw	r2, #5000	@ 0x1388
 8010356:	4293      	cmp	r3, r2
 8010358:	d901      	bls.n	801035e <HAL_RCC_OscConfig+0x34a>
 801035a:	2303      	movs	r3, #3
 801035c:	e0cb      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 801035e:	4b49      	ldr	r3, [pc, #292]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010360:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010362:	f003 0302 	and.w	r3, r3, #2
 8010366:	2b00      	cmp	r3, #0
 8010368:	d0ee      	beq.n	8010348 <HAL_RCC_OscConfig+0x334>
 801036a:	e014      	b.n	8010396 <HAL_RCC_OscConfig+0x382>
 801036c:	f7fa fe48 	bl	800b000 <HAL_GetTick>
 8010370:	6138      	str	r0, [r7, #16]
 8010372:	e00a      	b.n	801038a <HAL_RCC_OscConfig+0x376>
 8010374:	f7fa fe44 	bl	800b000 <HAL_GetTick>
 8010378:	4602      	mov	r2, r0
 801037a:	693b      	ldr	r3, [r7, #16]
 801037c:	1ad3      	subs	r3, r2, r3
 801037e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8010382:	4293      	cmp	r3, r2
 8010384:	d901      	bls.n	801038a <HAL_RCC_OscConfig+0x376>
 8010386:	2303      	movs	r3, #3
 8010388:	e0b5      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 801038a:	4b3e      	ldr	r3, [pc, #248]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801038c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801038e:	f003 0302 	and.w	r3, r3, #2
 8010392:	2b00      	cmp	r3, #0
 8010394:	d1ee      	bne.n	8010374 <HAL_RCC_OscConfig+0x360>
 8010396:	7dfb      	ldrb	r3, [r7, #23]
 8010398:	2b01      	cmp	r3, #1
 801039a:	d105      	bne.n	80103a8 <HAL_RCC_OscConfig+0x394>
 801039c:	4b39      	ldr	r3, [pc, #228]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801039e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80103a0:	4a38      	ldr	r2, [pc, #224]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 80103a2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80103a6:	6413      	str	r3, [r2, #64]	@ 0x40
 80103a8:	687b      	ldr	r3, [r7, #4]
 80103aa:	699b      	ldr	r3, [r3, #24]
 80103ac:	2b00      	cmp	r3, #0
 80103ae:	f000 80a1 	beq.w	80104f4 <HAL_RCC_OscConfig+0x4e0>
 80103b2:	4b34      	ldr	r3, [pc, #208]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 80103b4:	689b      	ldr	r3, [r3, #8]
 80103b6:	f003 030c 	and.w	r3, r3, #12
 80103ba:	2b08      	cmp	r3, #8
 80103bc:	d05c      	beq.n	8010478 <HAL_RCC_OscConfig+0x464>
 80103be:	687b      	ldr	r3, [r7, #4]
 80103c0:	699b      	ldr	r3, [r3, #24]
 80103c2:	2b02      	cmp	r3, #2
 80103c4:	d141      	bne.n	801044a <HAL_RCC_OscConfig+0x436>
 80103c6:	4b31      	ldr	r3, [pc, #196]	@ (801048c <HAL_RCC_OscConfig+0x478>)
 80103c8:	2200      	movs	r2, #0
 80103ca:	601a      	str	r2, [r3, #0]
 80103cc:	f7fa fe18 	bl	800b000 <HAL_GetTick>
 80103d0:	6138      	str	r0, [r7, #16]
 80103d2:	e008      	b.n	80103e6 <HAL_RCC_OscConfig+0x3d2>
 80103d4:	f7fa fe14 	bl	800b000 <HAL_GetTick>
 80103d8:	4602      	mov	r2, r0
 80103da:	693b      	ldr	r3, [r7, #16]
 80103dc:	1ad3      	subs	r3, r2, r3
 80103de:	2b02      	cmp	r3, #2
 80103e0:	d901      	bls.n	80103e6 <HAL_RCC_OscConfig+0x3d2>
 80103e2:	2303      	movs	r3, #3
 80103e4:	e087      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 80103e6:	4b27      	ldr	r3, [pc, #156]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 80103e8:	681b      	ldr	r3, [r3, #0]
 80103ea:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80103ee:	2b00      	cmp	r3, #0
 80103f0:	d1f0      	bne.n	80103d4 <HAL_RCC_OscConfig+0x3c0>
 80103f2:	687b      	ldr	r3, [r7, #4]
 80103f4:	69da      	ldr	r2, [r3, #28]
 80103f6:	687b      	ldr	r3, [r7, #4]
 80103f8:	6a1b      	ldr	r3, [r3, #32]
 80103fa:	431a      	orrs	r2, r3
 80103fc:	687b      	ldr	r3, [r7, #4]
 80103fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010400:	019b      	lsls	r3, r3, #6
 8010402:	431a      	orrs	r2, r3
 8010404:	687b      	ldr	r3, [r7, #4]
 8010406:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010408:	085b      	lsrs	r3, r3, #1
 801040a:	3b01      	subs	r3, #1
 801040c:	041b      	lsls	r3, r3, #16
 801040e:	431a      	orrs	r2, r3
 8010410:	687b      	ldr	r3, [r7, #4]
 8010412:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010414:	061b      	lsls	r3, r3, #24
 8010416:	491b      	ldr	r1, [pc, #108]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 8010418:	4313      	orrs	r3, r2
 801041a:	604b      	str	r3, [r1, #4]
 801041c:	4b1b      	ldr	r3, [pc, #108]	@ (801048c <HAL_RCC_OscConfig+0x478>)
 801041e:	2201      	movs	r2, #1
 8010420:	601a      	str	r2, [r3, #0]
 8010422:	f7fa fded 	bl	800b000 <HAL_GetTick>
 8010426:	6138      	str	r0, [r7, #16]
 8010428:	e008      	b.n	801043c <HAL_RCC_OscConfig+0x428>
 801042a:	f7fa fde9 	bl	800b000 <HAL_GetTick>
 801042e:	4602      	mov	r2, r0
 8010430:	693b      	ldr	r3, [r7, #16]
 8010432:	1ad3      	subs	r3, r2, r3
 8010434:	2b02      	cmp	r3, #2
 8010436:	d901      	bls.n	801043c <HAL_RCC_OscConfig+0x428>
 8010438:	2303      	movs	r3, #3
 801043a:	e05c      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 801043c:	4b11      	ldr	r3, [pc, #68]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801043e:	681b      	ldr	r3, [r3, #0]
 8010440:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8010444:	2b00      	cmp	r3, #0
 8010446:	d0f0      	beq.n	801042a <HAL_RCC_OscConfig+0x416>
 8010448:	e054      	b.n	80104f4 <HAL_RCC_OscConfig+0x4e0>
 801044a:	4b10      	ldr	r3, [pc, #64]	@ (801048c <HAL_RCC_OscConfig+0x478>)
 801044c:	2200      	movs	r2, #0
 801044e:	601a      	str	r2, [r3, #0]
 8010450:	f7fa fdd6 	bl	800b000 <HAL_GetTick>
 8010454:	6138      	str	r0, [r7, #16]
 8010456:	e008      	b.n	801046a <HAL_RCC_OscConfig+0x456>
 8010458:	f7fa fdd2 	bl	800b000 <HAL_GetTick>
 801045c:	4602      	mov	r2, r0
 801045e:	693b      	ldr	r3, [r7, #16]
 8010460:	1ad3      	subs	r3, r2, r3
 8010462:	2b02      	cmp	r3, #2
 8010464:	d901      	bls.n	801046a <HAL_RCC_OscConfig+0x456>
 8010466:	2303      	movs	r3, #3
 8010468:	e045      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 801046a:	4b06      	ldr	r3, [pc, #24]	@ (8010484 <HAL_RCC_OscConfig+0x470>)
 801046c:	681b      	ldr	r3, [r3, #0]
 801046e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8010472:	2b00      	cmp	r3, #0
 8010474:	d1f0      	bne.n	8010458 <HAL_RCC_OscConfig+0x444>
 8010476:	e03d      	b.n	80104f4 <HAL_RCC_OscConfig+0x4e0>
 8010478:	687b      	ldr	r3, [r7, #4]
 801047a:	699b      	ldr	r3, [r3, #24]
 801047c:	2b01      	cmp	r3, #1
 801047e:	d107      	bne.n	8010490 <HAL_RCC_OscConfig+0x47c>
 8010480:	2301      	movs	r3, #1
 8010482:	e038      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 8010484:	40023800 	.word	0x40023800
 8010488:	40007000 	.word	0x40007000
 801048c:	42470060 	.word	0x42470060
 8010490:	4b1b      	ldr	r3, [pc, #108]	@ (8010500 <HAL_RCC_OscConfig+0x4ec>)
 8010492:	685b      	ldr	r3, [r3, #4]
 8010494:	60fb      	str	r3, [r7, #12]
 8010496:	687b      	ldr	r3, [r7, #4]
 8010498:	699b      	ldr	r3, [r3, #24]
 801049a:	2b01      	cmp	r3, #1
 801049c:	d028      	beq.n	80104f0 <HAL_RCC_OscConfig+0x4dc>
 801049e:	68fb      	ldr	r3, [r7, #12]
 80104a0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80104a4:	687b      	ldr	r3, [r7, #4]
 80104a6:	69db      	ldr	r3, [r3, #28]
 80104a8:	429a      	cmp	r2, r3
 80104aa:	d121      	bne.n	80104f0 <HAL_RCC_OscConfig+0x4dc>
 80104ac:	68fb      	ldr	r3, [r7, #12]
 80104ae:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80104b2:	687b      	ldr	r3, [r7, #4]
 80104b4:	6a1b      	ldr	r3, [r3, #32]
 80104b6:	429a      	cmp	r2, r3
 80104b8:	d11a      	bne.n	80104f0 <HAL_RCC_OscConfig+0x4dc>
 80104ba:	68fa      	ldr	r2, [r7, #12]
 80104bc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80104c0:	4013      	ands	r3, r2
 80104c2:	687a      	ldr	r2, [r7, #4]
 80104c4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80104c6:	0192      	lsls	r2, r2, #6
 80104c8:	4293      	cmp	r3, r2
 80104ca:	d111      	bne.n	80104f0 <HAL_RCC_OscConfig+0x4dc>
 80104cc:	68fb      	ldr	r3, [r7, #12]
 80104ce:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80104d2:	687b      	ldr	r3, [r7, #4]
 80104d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80104d6:	085b      	lsrs	r3, r3, #1
 80104d8:	3b01      	subs	r3, #1
 80104da:	041b      	lsls	r3, r3, #16
 80104dc:	429a      	cmp	r2, r3
 80104de:	d107      	bne.n	80104f0 <HAL_RCC_OscConfig+0x4dc>
 80104e0:	68fb      	ldr	r3, [r7, #12]
 80104e2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80104e6:	687b      	ldr	r3, [r7, #4]
 80104e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80104ea:	061b      	lsls	r3, r3, #24
 80104ec:	429a      	cmp	r2, r3
 80104ee:	d001      	beq.n	80104f4 <HAL_RCC_OscConfig+0x4e0>
 80104f0:	2301      	movs	r3, #1
 80104f2:	e000      	b.n	80104f6 <HAL_RCC_OscConfig+0x4e2>
 80104f4:	2300      	movs	r3, #0
 80104f6:	4618      	mov	r0, r3
 80104f8:	3718      	adds	r7, #24
 80104fa:	46bd      	mov	sp, r7
 80104fc:	bd80      	pop	{r7, pc}
 80104fe:	bf00      	nop
 8010500:	40023800 	.word	0x40023800

08010504 <HAL_RCC_ClockConfig>:
 8010504:	b580      	push	{r7, lr}
 8010506:	b084      	sub	sp, #16
 8010508:	af00      	add	r7, sp, #0
 801050a:	6078      	str	r0, [r7, #4]
 801050c:	6039      	str	r1, [r7, #0]
 801050e:	687b      	ldr	r3, [r7, #4]
 8010510:	2b00      	cmp	r3, #0
 8010512:	d101      	bne.n	8010518 <HAL_RCC_ClockConfig+0x14>
 8010514:	2301      	movs	r3, #1
 8010516:	e0cc      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 8010518:	4b68      	ldr	r3, [pc, #416]	@ (80106bc <HAL_RCC_ClockConfig+0x1b8>)
 801051a:	681b      	ldr	r3, [r3, #0]
 801051c:	f003 0307 	and.w	r3, r3, #7
 8010520:	683a      	ldr	r2, [r7, #0]
 8010522:	429a      	cmp	r2, r3
 8010524:	d90c      	bls.n	8010540 <HAL_RCC_ClockConfig+0x3c>
 8010526:	4b65      	ldr	r3, [pc, #404]	@ (80106bc <HAL_RCC_ClockConfig+0x1b8>)
 8010528:	683a      	ldr	r2, [r7, #0]
 801052a:	b2d2      	uxtb	r2, r2
 801052c:	701a      	strb	r2, [r3, #0]
 801052e:	4b63      	ldr	r3, [pc, #396]	@ (80106bc <HAL_RCC_ClockConfig+0x1b8>)
 8010530:	681b      	ldr	r3, [r3, #0]
 8010532:	f003 0307 	and.w	r3, r3, #7
 8010536:	683a      	ldr	r2, [r7, #0]
 8010538:	429a      	cmp	r2, r3
 801053a:	d001      	beq.n	8010540 <HAL_RCC_ClockConfig+0x3c>
 801053c:	2301      	movs	r3, #1
 801053e:	e0b8      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 8010540:	687b      	ldr	r3, [r7, #4]
 8010542:	681b      	ldr	r3, [r3, #0]
 8010544:	f003 0302 	and.w	r3, r3, #2
 8010548:	2b00      	cmp	r3, #0
 801054a:	d020      	beq.n	801058e <HAL_RCC_ClockConfig+0x8a>
 801054c:	687b      	ldr	r3, [r7, #4]
 801054e:	681b      	ldr	r3, [r3, #0]
 8010550:	f003 0304 	and.w	r3, r3, #4
 8010554:	2b00      	cmp	r3, #0
 8010556:	d005      	beq.n	8010564 <HAL_RCC_ClockConfig+0x60>
 8010558:	4b59      	ldr	r3, [pc, #356]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 801055a:	689b      	ldr	r3, [r3, #8]
 801055c:	4a58      	ldr	r2, [pc, #352]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 801055e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8010562:	6093      	str	r3, [r2, #8]
 8010564:	687b      	ldr	r3, [r7, #4]
 8010566:	681b      	ldr	r3, [r3, #0]
 8010568:	f003 0308 	and.w	r3, r3, #8
 801056c:	2b00      	cmp	r3, #0
 801056e:	d005      	beq.n	801057c <HAL_RCC_ClockConfig+0x78>
 8010570:	4b53      	ldr	r3, [pc, #332]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010572:	689b      	ldr	r3, [r3, #8]
 8010574:	4a52      	ldr	r2, [pc, #328]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010576:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 801057a:	6093      	str	r3, [r2, #8]
 801057c:	4b50      	ldr	r3, [pc, #320]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 801057e:	689b      	ldr	r3, [r3, #8]
 8010580:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8010584:	687b      	ldr	r3, [r7, #4]
 8010586:	689b      	ldr	r3, [r3, #8]
 8010588:	494d      	ldr	r1, [pc, #308]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 801058a:	4313      	orrs	r3, r2
 801058c:	608b      	str	r3, [r1, #8]
 801058e:	687b      	ldr	r3, [r7, #4]
 8010590:	681b      	ldr	r3, [r3, #0]
 8010592:	f003 0301 	and.w	r3, r3, #1
 8010596:	2b00      	cmp	r3, #0
 8010598:	d044      	beq.n	8010624 <HAL_RCC_ClockConfig+0x120>
 801059a:	687b      	ldr	r3, [r7, #4]
 801059c:	685b      	ldr	r3, [r3, #4]
 801059e:	2b01      	cmp	r3, #1
 80105a0:	d107      	bne.n	80105b2 <HAL_RCC_ClockConfig+0xae>
 80105a2:	4b47      	ldr	r3, [pc, #284]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 80105a4:	681b      	ldr	r3, [r3, #0]
 80105a6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80105aa:	2b00      	cmp	r3, #0
 80105ac:	d119      	bne.n	80105e2 <HAL_RCC_ClockConfig+0xde>
 80105ae:	2301      	movs	r3, #1
 80105b0:	e07f      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 80105b2:	687b      	ldr	r3, [r7, #4]
 80105b4:	685b      	ldr	r3, [r3, #4]
 80105b6:	2b02      	cmp	r3, #2
 80105b8:	d003      	beq.n	80105c2 <HAL_RCC_ClockConfig+0xbe>
 80105ba:	687b      	ldr	r3, [r7, #4]
 80105bc:	685b      	ldr	r3, [r3, #4]
 80105be:	2b03      	cmp	r3, #3
 80105c0:	d107      	bne.n	80105d2 <HAL_RCC_ClockConfig+0xce>
 80105c2:	4b3f      	ldr	r3, [pc, #252]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 80105c4:	681b      	ldr	r3, [r3, #0]
 80105c6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80105ca:	2b00      	cmp	r3, #0
 80105cc:	d109      	bne.n	80105e2 <HAL_RCC_ClockConfig+0xde>
 80105ce:	2301      	movs	r3, #1
 80105d0:	e06f      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 80105d2:	4b3b      	ldr	r3, [pc, #236]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 80105d4:	681b      	ldr	r3, [r3, #0]
 80105d6:	f003 0302 	and.w	r3, r3, #2
 80105da:	2b00      	cmp	r3, #0
 80105dc:	d101      	bne.n	80105e2 <HAL_RCC_ClockConfig+0xde>
 80105de:	2301      	movs	r3, #1
 80105e0:	e067      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 80105e2:	4b37      	ldr	r3, [pc, #220]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 80105e4:	689b      	ldr	r3, [r3, #8]
 80105e6:	f023 0203 	bic.w	r2, r3, #3
 80105ea:	687b      	ldr	r3, [r7, #4]
 80105ec:	685b      	ldr	r3, [r3, #4]
 80105ee:	4934      	ldr	r1, [pc, #208]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 80105f0:	4313      	orrs	r3, r2
 80105f2:	608b      	str	r3, [r1, #8]
 80105f4:	f7fa fd04 	bl	800b000 <HAL_GetTick>
 80105f8:	60f8      	str	r0, [r7, #12]
 80105fa:	e00a      	b.n	8010612 <HAL_RCC_ClockConfig+0x10e>
 80105fc:	f7fa fd00 	bl	800b000 <HAL_GetTick>
 8010600:	4602      	mov	r2, r0
 8010602:	68fb      	ldr	r3, [r7, #12]
 8010604:	1ad3      	subs	r3, r2, r3
 8010606:	f241 3288 	movw	r2, #5000	@ 0x1388
 801060a:	4293      	cmp	r3, r2
 801060c:	d901      	bls.n	8010612 <HAL_RCC_ClockConfig+0x10e>
 801060e:	2303      	movs	r3, #3
 8010610:	e04f      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 8010612:	4b2b      	ldr	r3, [pc, #172]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010614:	689b      	ldr	r3, [r3, #8]
 8010616:	f003 020c 	and.w	r2, r3, #12
 801061a:	687b      	ldr	r3, [r7, #4]
 801061c:	685b      	ldr	r3, [r3, #4]
 801061e:	009b      	lsls	r3, r3, #2
 8010620:	429a      	cmp	r2, r3
 8010622:	d1eb      	bne.n	80105fc <HAL_RCC_ClockConfig+0xf8>
 8010624:	4b25      	ldr	r3, [pc, #148]	@ (80106bc <HAL_RCC_ClockConfig+0x1b8>)
 8010626:	681b      	ldr	r3, [r3, #0]
 8010628:	f003 0307 	and.w	r3, r3, #7
 801062c:	683a      	ldr	r2, [r7, #0]
 801062e:	429a      	cmp	r2, r3
 8010630:	d20c      	bcs.n	801064c <HAL_RCC_ClockConfig+0x148>
 8010632:	4b22      	ldr	r3, [pc, #136]	@ (80106bc <HAL_RCC_ClockConfig+0x1b8>)
 8010634:	683a      	ldr	r2, [r7, #0]
 8010636:	b2d2      	uxtb	r2, r2
 8010638:	701a      	strb	r2, [r3, #0]
 801063a:	4b20      	ldr	r3, [pc, #128]	@ (80106bc <HAL_RCC_ClockConfig+0x1b8>)
 801063c:	681b      	ldr	r3, [r3, #0]
 801063e:	f003 0307 	and.w	r3, r3, #7
 8010642:	683a      	ldr	r2, [r7, #0]
 8010644:	429a      	cmp	r2, r3
 8010646:	d001      	beq.n	801064c <HAL_RCC_ClockConfig+0x148>
 8010648:	2301      	movs	r3, #1
 801064a:	e032      	b.n	80106b2 <HAL_RCC_ClockConfig+0x1ae>
 801064c:	687b      	ldr	r3, [r7, #4]
 801064e:	681b      	ldr	r3, [r3, #0]
 8010650:	f003 0304 	and.w	r3, r3, #4
 8010654:	2b00      	cmp	r3, #0
 8010656:	d008      	beq.n	801066a <HAL_RCC_ClockConfig+0x166>
 8010658:	4b19      	ldr	r3, [pc, #100]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 801065a:	689b      	ldr	r3, [r3, #8]
 801065c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8010660:	687b      	ldr	r3, [r7, #4]
 8010662:	68db      	ldr	r3, [r3, #12]
 8010664:	4916      	ldr	r1, [pc, #88]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010666:	4313      	orrs	r3, r2
 8010668:	608b      	str	r3, [r1, #8]
 801066a:	687b      	ldr	r3, [r7, #4]
 801066c:	681b      	ldr	r3, [r3, #0]
 801066e:	f003 0308 	and.w	r3, r3, #8
 8010672:	2b00      	cmp	r3, #0
 8010674:	d009      	beq.n	801068a <HAL_RCC_ClockConfig+0x186>
 8010676:	4b12      	ldr	r3, [pc, #72]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010678:	689b      	ldr	r3, [r3, #8]
 801067a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 801067e:	687b      	ldr	r3, [r7, #4]
 8010680:	691b      	ldr	r3, [r3, #16]
 8010682:	00db      	lsls	r3, r3, #3
 8010684:	490e      	ldr	r1, [pc, #56]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010686:	4313      	orrs	r3, r2
 8010688:	608b      	str	r3, [r1, #8]
 801068a:	f000 f821 	bl	80106d0 <HAL_RCC_GetSysClockFreq>
 801068e:	4602      	mov	r2, r0
 8010690:	4b0b      	ldr	r3, [pc, #44]	@ (80106c0 <HAL_RCC_ClockConfig+0x1bc>)
 8010692:	689b      	ldr	r3, [r3, #8]
 8010694:	091b      	lsrs	r3, r3, #4
 8010696:	f003 030f 	and.w	r3, r3, #15
 801069a:	490a      	ldr	r1, [pc, #40]	@ (80106c4 <HAL_RCC_ClockConfig+0x1c0>)
 801069c:	5ccb      	ldrb	r3, [r1, r3]
 801069e:	fa22 f303 	lsr.w	r3, r2, r3
 80106a2:	4a09      	ldr	r2, [pc, #36]	@ (80106c8 <HAL_RCC_ClockConfig+0x1c4>)
 80106a4:	6013      	str	r3, [r2, #0]
 80106a6:	4b09      	ldr	r3, [pc, #36]	@ (80106cc <HAL_RCC_ClockConfig+0x1c8>)
 80106a8:	681b      	ldr	r3, [r3, #0]
 80106aa:	4618      	mov	r0, r3
 80106ac:	f7f3 fa0e 	bl	8003acc <HAL_InitTick>
 80106b0:	2300      	movs	r3, #0
 80106b2:	4618      	mov	r0, r3
 80106b4:	3710      	adds	r7, #16
 80106b6:	46bd      	mov	sp, r7
 80106b8:	bd80      	pop	{r7, pc}
 80106ba:	bf00      	nop
 80106bc:	40023c00 	.word	0x40023c00
 80106c0:	40023800 	.word	0x40023800
 80106c4:	080212d4 	.word	0x080212d4
 80106c8:	20000004 	.word	0x20000004
 80106cc:	20000018 	.word	0x20000018

080106d0 <HAL_RCC_GetSysClockFreq>:
 80106d0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80106d4:	b090      	sub	sp, #64	@ 0x40
 80106d6:	af00      	add	r7, sp, #0
 80106d8:	2300      	movs	r3, #0
 80106da:	637b      	str	r3, [r7, #52]	@ 0x34
 80106dc:	2300      	movs	r3, #0
 80106de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80106e0:	2300      	movs	r3, #0
 80106e2:	633b      	str	r3, [r7, #48]	@ 0x30
 80106e4:	2300      	movs	r3, #0
 80106e6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80106e8:	4b59      	ldr	r3, [pc, #356]	@ (8010850 <HAL_RCC_GetSysClockFreq+0x180>)
 80106ea:	689b      	ldr	r3, [r3, #8]
 80106ec:	f003 030c 	and.w	r3, r3, #12
 80106f0:	2b08      	cmp	r3, #8
 80106f2:	d00d      	beq.n	8010710 <HAL_RCC_GetSysClockFreq+0x40>
 80106f4:	2b08      	cmp	r3, #8
 80106f6:	f200 80a1 	bhi.w	801083c <HAL_RCC_GetSysClockFreq+0x16c>
 80106fa:	2b00      	cmp	r3, #0
 80106fc:	d002      	beq.n	8010704 <HAL_RCC_GetSysClockFreq+0x34>
 80106fe:	2b04      	cmp	r3, #4
 8010700:	d003      	beq.n	801070a <HAL_RCC_GetSysClockFreq+0x3a>
 8010702:	e09b      	b.n	801083c <HAL_RCC_GetSysClockFreq+0x16c>
 8010704:	4b53      	ldr	r3, [pc, #332]	@ (8010854 <HAL_RCC_GetSysClockFreq+0x184>)
 8010706:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010708:	e09b      	b.n	8010842 <HAL_RCC_GetSysClockFreq+0x172>
 801070a:	4b53      	ldr	r3, [pc, #332]	@ (8010858 <HAL_RCC_GetSysClockFreq+0x188>)
 801070c:	63bb      	str	r3, [r7, #56]	@ 0x38
 801070e:	e098      	b.n	8010842 <HAL_RCC_GetSysClockFreq+0x172>
 8010710:	4b4f      	ldr	r3, [pc, #316]	@ (8010850 <HAL_RCC_GetSysClockFreq+0x180>)
 8010712:	685b      	ldr	r3, [r3, #4]
 8010714:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8010718:	637b      	str	r3, [r7, #52]	@ 0x34
 801071a:	4b4d      	ldr	r3, [pc, #308]	@ (8010850 <HAL_RCC_GetSysClockFreq+0x180>)
 801071c:	685b      	ldr	r3, [r3, #4]
 801071e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8010722:	2b00      	cmp	r3, #0
 8010724:	d028      	beq.n	8010778 <HAL_RCC_GetSysClockFreq+0xa8>
 8010726:	4b4a      	ldr	r3, [pc, #296]	@ (8010850 <HAL_RCC_GetSysClockFreq+0x180>)
 8010728:	685b      	ldr	r3, [r3, #4]
 801072a:	099b      	lsrs	r3, r3, #6
 801072c:	2200      	movs	r2, #0
 801072e:	623b      	str	r3, [r7, #32]
 8010730:	627a      	str	r2, [r7, #36]	@ 0x24
 8010732:	6a3b      	ldr	r3, [r7, #32]
 8010734:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8010738:	2100      	movs	r1, #0
 801073a:	4b47      	ldr	r3, [pc, #284]	@ (8010858 <HAL_RCC_GetSysClockFreq+0x188>)
 801073c:	fb03 f201 	mul.w	r2, r3, r1
 8010740:	2300      	movs	r3, #0
 8010742:	fb00 f303 	mul.w	r3, r0, r3
 8010746:	4413      	add	r3, r2
 8010748:	4a43      	ldr	r2, [pc, #268]	@ (8010858 <HAL_RCC_GetSysClockFreq+0x188>)
 801074a:	fba0 1202 	umull	r1, r2, r0, r2
 801074e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8010750:	460a      	mov	r2, r1
 8010752:	62ba      	str	r2, [r7, #40]	@ 0x28
 8010754:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8010756:	4413      	add	r3, r2
 8010758:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801075a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801075c:	2200      	movs	r2, #0
 801075e:	61bb      	str	r3, [r7, #24]
 8010760:	61fa      	str	r2, [r7, #28]
 8010762:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8010766:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 801076a:	f7f0 fa8d 	bl	8000c88 <__aeabi_uldivmod>
 801076e:	4602      	mov	r2, r0
 8010770:	460b      	mov	r3, r1
 8010772:	4613      	mov	r3, r2
 8010774:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010776:	e053      	b.n	8010820 <HAL_RCC_GetSysClockFreq+0x150>
 8010778:	4b35      	ldr	r3, [pc, #212]	@ (8010850 <HAL_RCC_GetSysClockFreq+0x180>)
 801077a:	685b      	ldr	r3, [r3, #4]
 801077c:	099b      	lsrs	r3, r3, #6
 801077e:	2200      	movs	r2, #0
 8010780:	613b      	str	r3, [r7, #16]
 8010782:	617a      	str	r2, [r7, #20]
 8010784:	693b      	ldr	r3, [r7, #16]
 8010786:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 801078a:	f04f 0b00 	mov.w	fp, #0
 801078e:	4652      	mov	r2, sl
 8010790:	465b      	mov	r3, fp
 8010792:	f04f 0000 	mov.w	r0, #0
 8010796:	f04f 0100 	mov.w	r1, #0
 801079a:	0159      	lsls	r1, r3, #5
 801079c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80107a0:	0150      	lsls	r0, r2, #5
 80107a2:	4602      	mov	r2, r0
 80107a4:	460b      	mov	r3, r1
 80107a6:	ebb2 080a 	subs.w	r8, r2, sl
 80107aa:	eb63 090b 	sbc.w	r9, r3, fp
 80107ae:	f04f 0200 	mov.w	r2, #0
 80107b2:	f04f 0300 	mov.w	r3, #0
 80107b6:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80107ba:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80107be:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80107c2:	ebb2 0408 	subs.w	r4, r2, r8
 80107c6:	eb63 0509 	sbc.w	r5, r3, r9
 80107ca:	f04f 0200 	mov.w	r2, #0
 80107ce:	f04f 0300 	mov.w	r3, #0
 80107d2:	00eb      	lsls	r3, r5, #3
 80107d4:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80107d8:	00e2      	lsls	r2, r4, #3
 80107da:	4614      	mov	r4, r2
 80107dc:	461d      	mov	r5, r3
 80107de:	eb14 030a 	adds.w	r3, r4, sl
 80107e2:	603b      	str	r3, [r7, #0]
 80107e4:	eb45 030b 	adc.w	r3, r5, fp
 80107e8:	607b      	str	r3, [r7, #4]
 80107ea:	f04f 0200 	mov.w	r2, #0
 80107ee:	f04f 0300 	mov.w	r3, #0
 80107f2:	e9d7 4500 	ldrd	r4, r5, [r7]
 80107f6:	4629      	mov	r1, r5
 80107f8:	028b      	lsls	r3, r1, #10
 80107fa:	4621      	mov	r1, r4
 80107fc:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8010800:	4621      	mov	r1, r4
 8010802:	028a      	lsls	r2, r1, #10
 8010804:	4610      	mov	r0, r2
 8010806:	4619      	mov	r1, r3
 8010808:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801080a:	2200      	movs	r2, #0
 801080c:	60bb      	str	r3, [r7, #8]
 801080e:	60fa      	str	r2, [r7, #12]
 8010810:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8010814:	f7f0 fa38 	bl	8000c88 <__aeabi_uldivmod>
 8010818:	4602      	mov	r2, r0
 801081a:	460b      	mov	r3, r1
 801081c:	4613      	mov	r3, r2
 801081e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010820:	4b0b      	ldr	r3, [pc, #44]	@ (8010850 <HAL_RCC_GetSysClockFreq+0x180>)
 8010822:	685b      	ldr	r3, [r3, #4]
 8010824:	0c1b      	lsrs	r3, r3, #16
 8010826:	f003 0303 	and.w	r3, r3, #3
 801082a:	3301      	adds	r3, #1
 801082c:	005b      	lsls	r3, r3, #1
 801082e:	633b      	str	r3, [r7, #48]	@ 0x30
 8010830:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8010832:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8010834:	fbb2 f3f3 	udiv	r3, r2, r3
 8010838:	63bb      	str	r3, [r7, #56]	@ 0x38
 801083a:	e002      	b.n	8010842 <HAL_RCC_GetSysClockFreq+0x172>
 801083c:	4b05      	ldr	r3, [pc, #20]	@ (8010854 <HAL_RCC_GetSysClockFreq+0x184>)
 801083e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010840:	bf00      	nop
 8010842:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010844:	4618      	mov	r0, r3
 8010846:	3740      	adds	r7, #64	@ 0x40
 8010848:	46bd      	mov	sp, r7
 801084a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801084e:	bf00      	nop
 8010850:	40023800 	.word	0x40023800
 8010854:	00f42400 	.word	0x00f42400
 8010858:	00b71b00 	.word	0x00b71b00

0801085c <HAL_RCC_GetHCLKFreq>:
 801085c:	b480      	push	{r7}
 801085e:	af00      	add	r7, sp, #0
 8010860:	4b03      	ldr	r3, [pc, #12]	@ (8010870 <HAL_RCC_GetHCLKFreq+0x14>)
 8010862:	681b      	ldr	r3, [r3, #0]
 8010864:	4618      	mov	r0, r3
 8010866:	46bd      	mov	sp, r7
 8010868:	f85d 7b04 	ldr.w	r7, [sp], #4
 801086c:	4770      	bx	lr
 801086e:	bf00      	nop
 8010870:	20000004 	.word	0x20000004

08010874 <HAL_RCC_GetPCLK1Freq>:
 8010874:	b580      	push	{r7, lr}
 8010876:	af00      	add	r7, sp, #0
 8010878:	f7ff fff0 	bl	801085c <HAL_RCC_GetHCLKFreq>
 801087c:	4602      	mov	r2, r0
 801087e:	4b05      	ldr	r3, [pc, #20]	@ (8010894 <HAL_RCC_GetPCLK1Freq+0x20>)
 8010880:	689b      	ldr	r3, [r3, #8]
 8010882:	0a9b      	lsrs	r3, r3, #10
 8010884:	f003 0307 	and.w	r3, r3, #7
 8010888:	4903      	ldr	r1, [pc, #12]	@ (8010898 <HAL_RCC_GetPCLK1Freq+0x24>)
 801088a:	5ccb      	ldrb	r3, [r1, r3]
 801088c:	fa22 f303 	lsr.w	r3, r2, r3
 8010890:	4618      	mov	r0, r3
 8010892:	bd80      	pop	{r7, pc}
 8010894:	40023800 	.word	0x40023800
 8010898:	080212e4 	.word	0x080212e4

0801089c <HAL_RCC_GetPCLK2Freq>:
 801089c:	b580      	push	{r7, lr}
 801089e:	af00      	add	r7, sp, #0
 80108a0:	f7ff ffdc 	bl	801085c <HAL_RCC_GetHCLKFreq>
 80108a4:	4602      	mov	r2, r0
 80108a6:	4b05      	ldr	r3, [pc, #20]	@ (80108bc <HAL_RCC_GetPCLK2Freq+0x20>)
 80108a8:	689b      	ldr	r3, [r3, #8]
 80108aa:	0b5b      	lsrs	r3, r3, #13
 80108ac:	f003 0307 	and.w	r3, r3, #7
 80108b0:	4903      	ldr	r1, [pc, #12]	@ (80108c0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80108b2:	5ccb      	ldrb	r3, [r1, r3]
 80108b4:	fa22 f303 	lsr.w	r3, r2, r3
 80108b8:	4618      	mov	r0, r3
 80108ba:	bd80      	pop	{r7, pc}
 80108bc:	40023800 	.word	0x40023800
 80108c0:	080212e4 	.word	0x080212e4

080108c4 <HAL_RCC_GetClockConfig>:
 80108c4:	b480      	push	{r7}
 80108c6:	b083      	sub	sp, #12
 80108c8:	af00      	add	r7, sp, #0
 80108ca:	6078      	str	r0, [r7, #4]
 80108cc:	6039      	str	r1, [r7, #0]
 80108ce:	687b      	ldr	r3, [r7, #4]
 80108d0:	220f      	movs	r2, #15
 80108d2:	601a      	str	r2, [r3, #0]
 80108d4:	4b12      	ldr	r3, [pc, #72]	@ (8010920 <HAL_RCC_GetClockConfig+0x5c>)
 80108d6:	689b      	ldr	r3, [r3, #8]
 80108d8:	f003 0203 	and.w	r2, r3, #3
 80108dc:	687b      	ldr	r3, [r7, #4]
 80108de:	605a      	str	r2, [r3, #4]
 80108e0:	4b0f      	ldr	r3, [pc, #60]	@ (8010920 <HAL_RCC_GetClockConfig+0x5c>)
 80108e2:	689b      	ldr	r3, [r3, #8]
 80108e4:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80108e8:	687b      	ldr	r3, [r7, #4]
 80108ea:	609a      	str	r2, [r3, #8]
 80108ec:	4b0c      	ldr	r3, [pc, #48]	@ (8010920 <HAL_RCC_GetClockConfig+0x5c>)
 80108ee:	689b      	ldr	r3, [r3, #8]
 80108f0:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 80108f4:	687b      	ldr	r3, [r7, #4]
 80108f6:	60da      	str	r2, [r3, #12]
 80108f8:	4b09      	ldr	r3, [pc, #36]	@ (8010920 <HAL_RCC_GetClockConfig+0x5c>)
 80108fa:	689b      	ldr	r3, [r3, #8]
 80108fc:	08db      	lsrs	r3, r3, #3
 80108fe:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8010902:	687b      	ldr	r3, [r7, #4]
 8010904:	611a      	str	r2, [r3, #16]
 8010906:	4b07      	ldr	r3, [pc, #28]	@ (8010924 <HAL_RCC_GetClockConfig+0x60>)
 8010908:	681b      	ldr	r3, [r3, #0]
 801090a:	f003 0207 	and.w	r2, r3, #7
 801090e:	683b      	ldr	r3, [r7, #0]
 8010910:	601a      	str	r2, [r3, #0]
 8010912:	bf00      	nop
 8010914:	370c      	adds	r7, #12
 8010916:	46bd      	mov	sp, r7
 8010918:	f85d 7b04 	ldr.w	r7, [sp], #4
 801091c:	4770      	bx	lr
 801091e:	bf00      	nop
 8010920:	40023800 	.word	0x40023800
 8010924:	40023c00 	.word	0x40023c00

08010928 <HAL_RNG_Init>:
 8010928:	b580      	push	{r7, lr}
 801092a:	b082      	sub	sp, #8
 801092c:	af00      	add	r7, sp, #0
 801092e:	6078      	str	r0, [r7, #4]
 8010930:	687b      	ldr	r3, [r7, #4]
 8010932:	2b00      	cmp	r3, #0
 8010934:	d101      	bne.n	801093a <HAL_RNG_Init+0x12>
 8010936:	2301      	movs	r3, #1
 8010938:	e01c      	b.n	8010974 <HAL_RNG_Init+0x4c>
 801093a:	687b      	ldr	r3, [r7, #4]
 801093c:	795b      	ldrb	r3, [r3, #5]
 801093e:	b2db      	uxtb	r3, r3
 8010940:	2b00      	cmp	r3, #0
 8010942:	d105      	bne.n	8010950 <HAL_RNG_Init+0x28>
 8010944:	687b      	ldr	r3, [r7, #4]
 8010946:	2200      	movs	r2, #0
 8010948:	711a      	strb	r2, [r3, #4]
 801094a:	6878      	ldr	r0, [r7, #4]
 801094c:	f7f2 ff6e 	bl	800382c <HAL_RNG_MspInit>
 8010950:	687b      	ldr	r3, [r7, #4]
 8010952:	2202      	movs	r2, #2
 8010954:	715a      	strb	r2, [r3, #5]
 8010956:	687b      	ldr	r3, [r7, #4]
 8010958:	681b      	ldr	r3, [r3, #0]
 801095a:	681a      	ldr	r2, [r3, #0]
 801095c:	687b      	ldr	r3, [r7, #4]
 801095e:	681b      	ldr	r3, [r3, #0]
 8010960:	f042 0204 	orr.w	r2, r2, #4
 8010964:	601a      	str	r2, [r3, #0]
 8010966:	687b      	ldr	r3, [r7, #4]
 8010968:	2201      	movs	r2, #1
 801096a:	715a      	strb	r2, [r3, #5]
 801096c:	687b      	ldr	r3, [r7, #4]
 801096e:	2200      	movs	r2, #0
 8010970:	609a      	str	r2, [r3, #8]
 8010972:	2300      	movs	r3, #0
 8010974:	4618      	mov	r0, r3
 8010976:	3708      	adds	r7, #8
 8010978:	46bd      	mov	sp, r7
 801097a:	bd80      	pop	{r7, pc}

0801097c <HAL_SPI_Init>:
 801097c:	b580      	push	{r7, lr}
 801097e:	b082      	sub	sp, #8
 8010980:	af00      	add	r7, sp, #0
 8010982:	6078      	str	r0, [r7, #4]
 8010984:	687b      	ldr	r3, [r7, #4]
 8010986:	2b00      	cmp	r3, #0
 8010988:	d101      	bne.n	801098e <HAL_SPI_Init+0x12>
 801098a:	2301      	movs	r3, #1
 801098c:	e07b      	b.n	8010a86 <HAL_SPI_Init+0x10a>
 801098e:	687b      	ldr	r3, [r7, #4]
 8010990:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010992:	2b00      	cmp	r3, #0
 8010994:	d108      	bne.n	80109a8 <HAL_SPI_Init+0x2c>
 8010996:	687b      	ldr	r3, [r7, #4]
 8010998:	685b      	ldr	r3, [r3, #4]
 801099a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 801099e:	d009      	beq.n	80109b4 <HAL_SPI_Init+0x38>
 80109a0:	687b      	ldr	r3, [r7, #4]
 80109a2:	2200      	movs	r2, #0
 80109a4:	61da      	str	r2, [r3, #28]
 80109a6:	e005      	b.n	80109b4 <HAL_SPI_Init+0x38>
 80109a8:	687b      	ldr	r3, [r7, #4]
 80109aa:	2200      	movs	r2, #0
 80109ac:	611a      	str	r2, [r3, #16]
 80109ae:	687b      	ldr	r3, [r7, #4]
 80109b0:	2200      	movs	r2, #0
 80109b2:	615a      	str	r2, [r3, #20]
 80109b4:	687b      	ldr	r3, [r7, #4]
 80109b6:	2200      	movs	r2, #0
 80109b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80109ba:	687b      	ldr	r3, [r7, #4]
 80109bc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80109c0:	b2db      	uxtb	r3, r3
 80109c2:	2b00      	cmp	r3, #0
 80109c4:	d106      	bne.n	80109d4 <HAL_SPI_Init+0x58>
 80109c6:	687b      	ldr	r3, [r7, #4]
 80109c8:	2200      	movs	r2, #0
 80109ca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80109ce:	6878      	ldr	r0, [r7, #4]
 80109d0:	f7f2 ff84 	bl	80038dc <HAL_SPI_MspInit>
 80109d4:	687b      	ldr	r3, [r7, #4]
 80109d6:	2202      	movs	r2, #2
 80109d8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80109dc:	687b      	ldr	r3, [r7, #4]
 80109de:	681b      	ldr	r3, [r3, #0]
 80109e0:	681a      	ldr	r2, [r3, #0]
 80109e2:	687b      	ldr	r3, [r7, #4]
 80109e4:	681b      	ldr	r3, [r3, #0]
 80109e6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80109ea:	601a      	str	r2, [r3, #0]
 80109ec:	687b      	ldr	r3, [r7, #4]
 80109ee:	685b      	ldr	r3, [r3, #4]
 80109f0:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80109f4:	687b      	ldr	r3, [r7, #4]
 80109f6:	689b      	ldr	r3, [r3, #8]
 80109f8:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80109fc:	431a      	orrs	r2, r3
 80109fe:	687b      	ldr	r3, [r7, #4]
 8010a00:	68db      	ldr	r3, [r3, #12]
 8010a02:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8010a06:	431a      	orrs	r2, r3
 8010a08:	687b      	ldr	r3, [r7, #4]
 8010a0a:	691b      	ldr	r3, [r3, #16]
 8010a0c:	f003 0302 	and.w	r3, r3, #2
 8010a10:	431a      	orrs	r2, r3
 8010a12:	687b      	ldr	r3, [r7, #4]
 8010a14:	695b      	ldr	r3, [r3, #20]
 8010a16:	f003 0301 	and.w	r3, r3, #1
 8010a1a:	431a      	orrs	r2, r3
 8010a1c:	687b      	ldr	r3, [r7, #4]
 8010a1e:	699b      	ldr	r3, [r3, #24]
 8010a20:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8010a24:	431a      	orrs	r2, r3
 8010a26:	687b      	ldr	r3, [r7, #4]
 8010a28:	69db      	ldr	r3, [r3, #28]
 8010a2a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010a2e:	431a      	orrs	r2, r3
 8010a30:	687b      	ldr	r3, [r7, #4]
 8010a32:	6a1b      	ldr	r3, [r3, #32]
 8010a34:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8010a38:	ea42 0103 	orr.w	r1, r2, r3
 8010a3c:	687b      	ldr	r3, [r7, #4]
 8010a3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010a40:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8010a44:	687b      	ldr	r3, [r7, #4]
 8010a46:	681b      	ldr	r3, [r3, #0]
 8010a48:	430a      	orrs	r2, r1
 8010a4a:	601a      	str	r2, [r3, #0]
 8010a4c:	687b      	ldr	r3, [r7, #4]
 8010a4e:	699b      	ldr	r3, [r3, #24]
 8010a50:	0c1b      	lsrs	r3, r3, #16
 8010a52:	f003 0104 	and.w	r1, r3, #4
 8010a56:	687b      	ldr	r3, [r7, #4]
 8010a58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010a5a:	f003 0210 	and.w	r2, r3, #16
 8010a5e:	687b      	ldr	r3, [r7, #4]
 8010a60:	681b      	ldr	r3, [r3, #0]
 8010a62:	430a      	orrs	r2, r1
 8010a64:	605a      	str	r2, [r3, #4]
 8010a66:	687b      	ldr	r3, [r7, #4]
 8010a68:	681b      	ldr	r3, [r3, #0]
 8010a6a:	69da      	ldr	r2, [r3, #28]
 8010a6c:	687b      	ldr	r3, [r7, #4]
 8010a6e:	681b      	ldr	r3, [r3, #0]
 8010a70:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010a74:	61da      	str	r2, [r3, #28]
 8010a76:	687b      	ldr	r3, [r7, #4]
 8010a78:	2200      	movs	r2, #0
 8010a7a:	655a      	str	r2, [r3, #84]	@ 0x54
 8010a7c:	687b      	ldr	r3, [r7, #4]
 8010a7e:	2201      	movs	r2, #1
 8010a80:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010a84:	2300      	movs	r3, #0
 8010a86:	4618      	mov	r0, r3
 8010a88:	3708      	adds	r7, #8
 8010a8a:	46bd      	mov	sp, r7
 8010a8c:	bd80      	pop	{r7, pc}

08010a8e <HAL_SPI_Receive>:
 8010a8e:	b580      	push	{r7, lr}
 8010a90:	b088      	sub	sp, #32
 8010a92:	af02      	add	r7, sp, #8
 8010a94:	60f8      	str	r0, [r7, #12]
 8010a96:	60b9      	str	r1, [r7, #8]
 8010a98:	603b      	str	r3, [r7, #0]
 8010a9a:	4613      	mov	r3, r2
 8010a9c:	80fb      	strh	r3, [r7, #6]
 8010a9e:	2300      	movs	r3, #0
 8010aa0:	75fb      	strb	r3, [r7, #23]
 8010aa2:	68fb      	ldr	r3, [r7, #12]
 8010aa4:	685b      	ldr	r3, [r3, #4]
 8010aa6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010aaa:	d112      	bne.n	8010ad2 <HAL_SPI_Receive+0x44>
 8010aac:	68fb      	ldr	r3, [r7, #12]
 8010aae:	689b      	ldr	r3, [r3, #8]
 8010ab0:	2b00      	cmp	r3, #0
 8010ab2:	d10e      	bne.n	8010ad2 <HAL_SPI_Receive+0x44>
 8010ab4:	68fb      	ldr	r3, [r7, #12]
 8010ab6:	2204      	movs	r2, #4
 8010ab8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010abc:	88fa      	ldrh	r2, [r7, #6]
 8010abe:	683b      	ldr	r3, [r7, #0]
 8010ac0:	9300      	str	r3, [sp, #0]
 8010ac2:	4613      	mov	r3, r2
 8010ac4:	68ba      	ldr	r2, [r7, #8]
 8010ac6:	68b9      	ldr	r1, [r7, #8]
 8010ac8:	68f8      	ldr	r0, [r7, #12]
 8010aca:	f000 f8f1 	bl	8010cb0 <HAL_SPI_TransmitReceive>
 8010ace:	4603      	mov	r3, r0
 8010ad0:	e0ea      	b.n	8010ca8 <HAL_SPI_Receive+0x21a>
 8010ad2:	68fb      	ldr	r3, [r7, #12]
 8010ad4:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8010ad8:	2b01      	cmp	r3, #1
 8010ada:	d101      	bne.n	8010ae0 <HAL_SPI_Receive+0x52>
 8010adc:	2302      	movs	r3, #2
 8010ade:	e0e3      	b.n	8010ca8 <HAL_SPI_Receive+0x21a>
 8010ae0:	68fb      	ldr	r3, [r7, #12]
 8010ae2:	2201      	movs	r2, #1
 8010ae4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010ae8:	f7fa fa8a 	bl	800b000 <HAL_GetTick>
 8010aec:	6138      	str	r0, [r7, #16]
 8010aee:	68fb      	ldr	r3, [r7, #12]
 8010af0:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010af4:	b2db      	uxtb	r3, r3
 8010af6:	2b01      	cmp	r3, #1
 8010af8:	d002      	beq.n	8010b00 <HAL_SPI_Receive+0x72>
 8010afa:	2302      	movs	r3, #2
 8010afc:	75fb      	strb	r3, [r7, #23]
 8010afe:	e0ca      	b.n	8010c96 <HAL_SPI_Receive+0x208>
 8010b00:	68bb      	ldr	r3, [r7, #8]
 8010b02:	2b00      	cmp	r3, #0
 8010b04:	d002      	beq.n	8010b0c <HAL_SPI_Receive+0x7e>
 8010b06:	88fb      	ldrh	r3, [r7, #6]
 8010b08:	2b00      	cmp	r3, #0
 8010b0a:	d102      	bne.n	8010b12 <HAL_SPI_Receive+0x84>
 8010b0c:	2301      	movs	r3, #1
 8010b0e:	75fb      	strb	r3, [r7, #23]
 8010b10:	e0c1      	b.n	8010c96 <HAL_SPI_Receive+0x208>
 8010b12:	68fb      	ldr	r3, [r7, #12]
 8010b14:	2204      	movs	r2, #4
 8010b16:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010b1a:	68fb      	ldr	r3, [r7, #12]
 8010b1c:	2200      	movs	r2, #0
 8010b1e:	655a      	str	r2, [r3, #84]	@ 0x54
 8010b20:	68fb      	ldr	r3, [r7, #12]
 8010b22:	68ba      	ldr	r2, [r7, #8]
 8010b24:	639a      	str	r2, [r3, #56]	@ 0x38
 8010b26:	68fb      	ldr	r3, [r7, #12]
 8010b28:	88fa      	ldrh	r2, [r7, #6]
 8010b2a:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8010b2c:	68fb      	ldr	r3, [r7, #12]
 8010b2e:	88fa      	ldrh	r2, [r7, #6]
 8010b30:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010b32:	68fb      	ldr	r3, [r7, #12]
 8010b34:	2200      	movs	r2, #0
 8010b36:	631a      	str	r2, [r3, #48]	@ 0x30
 8010b38:	68fb      	ldr	r3, [r7, #12]
 8010b3a:	2200      	movs	r2, #0
 8010b3c:	869a      	strh	r2, [r3, #52]	@ 0x34
 8010b3e:	68fb      	ldr	r3, [r7, #12]
 8010b40:	2200      	movs	r2, #0
 8010b42:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010b44:	68fb      	ldr	r3, [r7, #12]
 8010b46:	2200      	movs	r2, #0
 8010b48:	641a      	str	r2, [r3, #64]	@ 0x40
 8010b4a:	68fb      	ldr	r3, [r7, #12]
 8010b4c:	2200      	movs	r2, #0
 8010b4e:	645a      	str	r2, [r3, #68]	@ 0x44
 8010b50:	68fb      	ldr	r3, [r7, #12]
 8010b52:	689b      	ldr	r3, [r3, #8]
 8010b54:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8010b58:	d10f      	bne.n	8010b7a <HAL_SPI_Receive+0xec>
 8010b5a:	68fb      	ldr	r3, [r7, #12]
 8010b5c:	681b      	ldr	r3, [r3, #0]
 8010b5e:	681a      	ldr	r2, [r3, #0]
 8010b60:	68fb      	ldr	r3, [r7, #12]
 8010b62:	681b      	ldr	r3, [r3, #0]
 8010b64:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8010b68:	601a      	str	r2, [r3, #0]
 8010b6a:	68fb      	ldr	r3, [r7, #12]
 8010b6c:	681b      	ldr	r3, [r3, #0]
 8010b6e:	681a      	ldr	r2, [r3, #0]
 8010b70:	68fb      	ldr	r3, [r7, #12]
 8010b72:	681b      	ldr	r3, [r3, #0]
 8010b74:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8010b78:	601a      	str	r2, [r3, #0]
 8010b7a:	68fb      	ldr	r3, [r7, #12]
 8010b7c:	681b      	ldr	r3, [r3, #0]
 8010b7e:	681b      	ldr	r3, [r3, #0]
 8010b80:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010b84:	2b40      	cmp	r3, #64	@ 0x40
 8010b86:	d007      	beq.n	8010b98 <HAL_SPI_Receive+0x10a>
 8010b88:	68fb      	ldr	r3, [r7, #12]
 8010b8a:	681b      	ldr	r3, [r3, #0]
 8010b8c:	681a      	ldr	r2, [r3, #0]
 8010b8e:	68fb      	ldr	r3, [r7, #12]
 8010b90:	681b      	ldr	r3, [r3, #0]
 8010b92:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8010b96:	601a      	str	r2, [r3, #0]
 8010b98:	68fb      	ldr	r3, [r7, #12]
 8010b9a:	68db      	ldr	r3, [r3, #12]
 8010b9c:	2b00      	cmp	r3, #0
 8010b9e:	d162      	bne.n	8010c66 <HAL_SPI_Receive+0x1d8>
 8010ba0:	e02e      	b.n	8010c00 <HAL_SPI_Receive+0x172>
 8010ba2:	68fb      	ldr	r3, [r7, #12]
 8010ba4:	681b      	ldr	r3, [r3, #0]
 8010ba6:	689b      	ldr	r3, [r3, #8]
 8010ba8:	f003 0301 	and.w	r3, r3, #1
 8010bac:	2b01      	cmp	r3, #1
 8010bae:	d115      	bne.n	8010bdc <HAL_SPI_Receive+0x14e>
 8010bb0:	68fb      	ldr	r3, [r7, #12]
 8010bb2:	681b      	ldr	r3, [r3, #0]
 8010bb4:	f103 020c 	add.w	r2, r3, #12
 8010bb8:	68fb      	ldr	r3, [r7, #12]
 8010bba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010bbc:	7812      	ldrb	r2, [r2, #0]
 8010bbe:	b2d2      	uxtb	r2, r2
 8010bc0:	701a      	strb	r2, [r3, #0]
 8010bc2:	68fb      	ldr	r3, [r7, #12]
 8010bc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010bc6:	1c5a      	adds	r2, r3, #1
 8010bc8:	68fb      	ldr	r3, [r7, #12]
 8010bca:	639a      	str	r2, [r3, #56]	@ 0x38
 8010bcc:	68fb      	ldr	r3, [r7, #12]
 8010bce:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010bd0:	b29b      	uxth	r3, r3
 8010bd2:	3b01      	subs	r3, #1
 8010bd4:	b29a      	uxth	r2, r3
 8010bd6:	68fb      	ldr	r3, [r7, #12]
 8010bd8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010bda:	e011      	b.n	8010c00 <HAL_SPI_Receive+0x172>
 8010bdc:	f7fa fa10 	bl	800b000 <HAL_GetTick>
 8010be0:	4602      	mov	r2, r0
 8010be2:	693b      	ldr	r3, [r7, #16]
 8010be4:	1ad3      	subs	r3, r2, r3
 8010be6:	683a      	ldr	r2, [r7, #0]
 8010be8:	429a      	cmp	r2, r3
 8010bea:	d803      	bhi.n	8010bf4 <HAL_SPI_Receive+0x166>
 8010bec:	683b      	ldr	r3, [r7, #0]
 8010bee:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010bf2:	d102      	bne.n	8010bfa <HAL_SPI_Receive+0x16c>
 8010bf4:	683b      	ldr	r3, [r7, #0]
 8010bf6:	2b00      	cmp	r3, #0
 8010bf8:	d102      	bne.n	8010c00 <HAL_SPI_Receive+0x172>
 8010bfa:	2303      	movs	r3, #3
 8010bfc:	75fb      	strb	r3, [r7, #23]
 8010bfe:	e04a      	b.n	8010c96 <HAL_SPI_Receive+0x208>
 8010c00:	68fb      	ldr	r3, [r7, #12]
 8010c02:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010c04:	b29b      	uxth	r3, r3
 8010c06:	2b00      	cmp	r3, #0
 8010c08:	d1cb      	bne.n	8010ba2 <HAL_SPI_Receive+0x114>
 8010c0a:	e031      	b.n	8010c70 <HAL_SPI_Receive+0x1e2>
 8010c0c:	68fb      	ldr	r3, [r7, #12]
 8010c0e:	681b      	ldr	r3, [r3, #0]
 8010c10:	689b      	ldr	r3, [r3, #8]
 8010c12:	f003 0301 	and.w	r3, r3, #1
 8010c16:	2b01      	cmp	r3, #1
 8010c18:	d113      	bne.n	8010c42 <HAL_SPI_Receive+0x1b4>
 8010c1a:	68fb      	ldr	r3, [r7, #12]
 8010c1c:	681b      	ldr	r3, [r3, #0]
 8010c1e:	68da      	ldr	r2, [r3, #12]
 8010c20:	68fb      	ldr	r3, [r7, #12]
 8010c22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010c24:	b292      	uxth	r2, r2
 8010c26:	801a      	strh	r2, [r3, #0]
 8010c28:	68fb      	ldr	r3, [r7, #12]
 8010c2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010c2c:	1c9a      	adds	r2, r3, #2
 8010c2e:	68fb      	ldr	r3, [r7, #12]
 8010c30:	639a      	str	r2, [r3, #56]	@ 0x38
 8010c32:	68fb      	ldr	r3, [r7, #12]
 8010c34:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010c36:	b29b      	uxth	r3, r3
 8010c38:	3b01      	subs	r3, #1
 8010c3a:	b29a      	uxth	r2, r3
 8010c3c:	68fb      	ldr	r3, [r7, #12]
 8010c3e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010c40:	e011      	b.n	8010c66 <HAL_SPI_Receive+0x1d8>
 8010c42:	f7fa f9dd 	bl	800b000 <HAL_GetTick>
 8010c46:	4602      	mov	r2, r0
 8010c48:	693b      	ldr	r3, [r7, #16]
 8010c4a:	1ad3      	subs	r3, r2, r3
 8010c4c:	683a      	ldr	r2, [r7, #0]
 8010c4e:	429a      	cmp	r2, r3
 8010c50:	d803      	bhi.n	8010c5a <HAL_SPI_Receive+0x1cc>
 8010c52:	683b      	ldr	r3, [r7, #0]
 8010c54:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010c58:	d102      	bne.n	8010c60 <HAL_SPI_Receive+0x1d2>
 8010c5a:	683b      	ldr	r3, [r7, #0]
 8010c5c:	2b00      	cmp	r3, #0
 8010c5e:	d102      	bne.n	8010c66 <HAL_SPI_Receive+0x1d8>
 8010c60:	2303      	movs	r3, #3
 8010c62:	75fb      	strb	r3, [r7, #23]
 8010c64:	e017      	b.n	8010c96 <HAL_SPI_Receive+0x208>
 8010c66:	68fb      	ldr	r3, [r7, #12]
 8010c68:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010c6a:	b29b      	uxth	r3, r3
 8010c6c:	2b00      	cmp	r3, #0
 8010c6e:	d1cd      	bne.n	8010c0c <HAL_SPI_Receive+0x17e>
 8010c70:	693a      	ldr	r2, [r7, #16]
 8010c72:	6839      	ldr	r1, [r7, #0]
 8010c74:	68f8      	ldr	r0, [r7, #12]
 8010c76:	f000 fa45 	bl	8011104 <SPI_EndRxTransaction>
 8010c7a:	4603      	mov	r3, r0
 8010c7c:	2b00      	cmp	r3, #0
 8010c7e:	d002      	beq.n	8010c86 <HAL_SPI_Receive+0x1f8>
 8010c80:	68fb      	ldr	r3, [r7, #12]
 8010c82:	2220      	movs	r2, #32
 8010c84:	655a      	str	r2, [r3, #84]	@ 0x54
 8010c86:	68fb      	ldr	r3, [r7, #12]
 8010c88:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010c8a:	2b00      	cmp	r3, #0
 8010c8c:	d002      	beq.n	8010c94 <HAL_SPI_Receive+0x206>
 8010c8e:	2301      	movs	r3, #1
 8010c90:	75fb      	strb	r3, [r7, #23]
 8010c92:	e000      	b.n	8010c96 <HAL_SPI_Receive+0x208>
 8010c94:	bf00      	nop
 8010c96:	68fb      	ldr	r3, [r7, #12]
 8010c98:	2201      	movs	r2, #1
 8010c9a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010c9e:	68fb      	ldr	r3, [r7, #12]
 8010ca0:	2200      	movs	r2, #0
 8010ca2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010ca6:	7dfb      	ldrb	r3, [r7, #23]
 8010ca8:	4618      	mov	r0, r3
 8010caa:	3718      	adds	r7, #24
 8010cac:	46bd      	mov	sp, r7
 8010cae:	bd80      	pop	{r7, pc}

08010cb0 <HAL_SPI_TransmitReceive>:
 8010cb0:	b580      	push	{r7, lr}
 8010cb2:	b08c      	sub	sp, #48	@ 0x30
 8010cb4:	af00      	add	r7, sp, #0
 8010cb6:	60f8      	str	r0, [r7, #12]
 8010cb8:	60b9      	str	r1, [r7, #8]
 8010cba:	607a      	str	r2, [r7, #4]
 8010cbc:	807b      	strh	r3, [r7, #2]
 8010cbe:	2301      	movs	r3, #1
 8010cc0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010cc2:	2300      	movs	r3, #0
 8010cc4:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010cc8:	68fb      	ldr	r3, [r7, #12]
 8010cca:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8010cce:	2b01      	cmp	r3, #1
 8010cd0:	d101      	bne.n	8010cd6 <HAL_SPI_TransmitReceive+0x26>
 8010cd2:	2302      	movs	r3, #2
 8010cd4:	e18a      	b.n	8010fec <HAL_SPI_TransmitReceive+0x33c>
 8010cd6:	68fb      	ldr	r3, [r7, #12]
 8010cd8:	2201      	movs	r2, #1
 8010cda:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010cde:	f7fa f98f 	bl	800b000 <HAL_GetTick>
 8010ce2:	6278      	str	r0, [r7, #36]	@ 0x24
 8010ce4:	68fb      	ldr	r3, [r7, #12]
 8010ce6:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010cea:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8010cee:	68fb      	ldr	r3, [r7, #12]
 8010cf0:	685b      	ldr	r3, [r3, #4]
 8010cf2:	61fb      	str	r3, [r7, #28]
 8010cf4:	887b      	ldrh	r3, [r7, #2]
 8010cf6:	837b      	strh	r3, [r7, #26]
 8010cf8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8010cfc:	2b01      	cmp	r3, #1
 8010cfe:	d00f      	beq.n	8010d20 <HAL_SPI_TransmitReceive+0x70>
 8010d00:	69fb      	ldr	r3, [r7, #28]
 8010d02:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010d06:	d107      	bne.n	8010d18 <HAL_SPI_TransmitReceive+0x68>
 8010d08:	68fb      	ldr	r3, [r7, #12]
 8010d0a:	689b      	ldr	r3, [r3, #8]
 8010d0c:	2b00      	cmp	r3, #0
 8010d0e:	d103      	bne.n	8010d18 <HAL_SPI_TransmitReceive+0x68>
 8010d10:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8010d14:	2b04      	cmp	r3, #4
 8010d16:	d003      	beq.n	8010d20 <HAL_SPI_TransmitReceive+0x70>
 8010d18:	2302      	movs	r3, #2
 8010d1a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010d1e:	e15b      	b.n	8010fd8 <HAL_SPI_TransmitReceive+0x328>
 8010d20:	68bb      	ldr	r3, [r7, #8]
 8010d22:	2b00      	cmp	r3, #0
 8010d24:	d005      	beq.n	8010d32 <HAL_SPI_TransmitReceive+0x82>
 8010d26:	687b      	ldr	r3, [r7, #4]
 8010d28:	2b00      	cmp	r3, #0
 8010d2a:	d002      	beq.n	8010d32 <HAL_SPI_TransmitReceive+0x82>
 8010d2c:	887b      	ldrh	r3, [r7, #2]
 8010d2e:	2b00      	cmp	r3, #0
 8010d30:	d103      	bne.n	8010d3a <HAL_SPI_TransmitReceive+0x8a>
 8010d32:	2301      	movs	r3, #1
 8010d34:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010d38:	e14e      	b.n	8010fd8 <HAL_SPI_TransmitReceive+0x328>
 8010d3a:	68fb      	ldr	r3, [r7, #12]
 8010d3c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010d40:	b2db      	uxtb	r3, r3
 8010d42:	2b04      	cmp	r3, #4
 8010d44:	d003      	beq.n	8010d4e <HAL_SPI_TransmitReceive+0x9e>
 8010d46:	68fb      	ldr	r3, [r7, #12]
 8010d48:	2205      	movs	r2, #5
 8010d4a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010d4e:	68fb      	ldr	r3, [r7, #12]
 8010d50:	2200      	movs	r2, #0
 8010d52:	655a      	str	r2, [r3, #84]	@ 0x54
 8010d54:	68fb      	ldr	r3, [r7, #12]
 8010d56:	687a      	ldr	r2, [r7, #4]
 8010d58:	639a      	str	r2, [r3, #56]	@ 0x38
 8010d5a:	68fb      	ldr	r3, [r7, #12]
 8010d5c:	887a      	ldrh	r2, [r7, #2]
 8010d5e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010d60:	68fb      	ldr	r3, [r7, #12]
 8010d62:	887a      	ldrh	r2, [r7, #2]
 8010d64:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8010d66:	68fb      	ldr	r3, [r7, #12]
 8010d68:	68ba      	ldr	r2, [r7, #8]
 8010d6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8010d6c:	68fb      	ldr	r3, [r7, #12]
 8010d6e:	887a      	ldrh	r2, [r7, #2]
 8010d70:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010d72:	68fb      	ldr	r3, [r7, #12]
 8010d74:	887a      	ldrh	r2, [r7, #2]
 8010d76:	869a      	strh	r2, [r3, #52]	@ 0x34
 8010d78:	68fb      	ldr	r3, [r7, #12]
 8010d7a:	2200      	movs	r2, #0
 8010d7c:	641a      	str	r2, [r3, #64]	@ 0x40
 8010d7e:	68fb      	ldr	r3, [r7, #12]
 8010d80:	2200      	movs	r2, #0
 8010d82:	645a      	str	r2, [r3, #68]	@ 0x44
 8010d84:	68fb      	ldr	r3, [r7, #12]
 8010d86:	681b      	ldr	r3, [r3, #0]
 8010d88:	681b      	ldr	r3, [r3, #0]
 8010d8a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010d8e:	2b40      	cmp	r3, #64	@ 0x40
 8010d90:	d007      	beq.n	8010da2 <HAL_SPI_TransmitReceive+0xf2>
 8010d92:	68fb      	ldr	r3, [r7, #12]
 8010d94:	681b      	ldr	r3, [r3, #0]
 8010d96:	681a      	ldr	r2, [r3, #0]
 8010d98:	68fb      	ldr	r3, [r7, #12]
 8010d9a:	681b      	ldr	r3, [r3, #0]
 8010d9c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8010da0:	601a      	str	r2, [r3, #0]
 8010da2:	68fb      	ldr	r3, [r7, #12]
 8010da4:	68db      	ldr	r3, [r3, #12]
 8010da6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8010daa:	d178      	bne.n	8010e9e <HAL_SPI_TransmitReceive+0x1ee>
 8010dac:	68fb      	ldr	r3, [r7, #12]
 8010dae:	685b      	ldr	r3, [r3, #4]
 8010db0:	2b00      	cmp	r3, #0
 8010db2:	d002      	beq.n	8010dba <HAL_SPI_TransmitReceive+0x10a>
 8010db4:	8b7b      	ldrh	r3, [r7, #26]
 8010db6:	2b01      	cmp	r3, #1
 8010db8:	d166      	bne.n	8010e88 <HAL_SPI_TransmitReceive+0x1d8>
 8010dba:	68fb      	ldr	r3, [r7, #12]
 8010dbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010dbe:	881a      	ldrh	r2, [r3, #0]
 8010dc0:	68fb      	ldr	r3, [r7, #12]
 8010dc2:	681b      	ldr	r3, [r3, #0]
 8010dc4:	60da      	str	r2, [r3, #12]
 8010dc6:	68fb      	ldr	r3, [r7, #12]
 8010dc8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010dca:	1c9a      	adds	r2, r3, #2
 8010dcc:	68fb      	ldr	r3, [r7, #12]
 8010dce:	631a      	str	r2, [r3, #48]	@ 0x30
 8010dd0:	68fb      	ldr	r3, [r7, #12]
 8010dd2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010dd4:	b29b      	uxth	r3, r3
 8010dd6:	3b01      	subs	r3, #1
 8010dd8:	b29a      	uxth	r2, r3
 8010dda:	68fb      	ldr	r3, [r7, #12]
 8010ddc:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010dde:	e053      	b.n	8010e88 <HAL_SPI_TransmitReceive+0x1d8>
 8010de0:	68fb      	ldr	r3, [r7, #12]
 8010de2:	681b      	ldr	r3, [r3, #0]
 8010de4:	689b      	ldr	r3, [r3, #8]
 8010de6:	f003 0302 	and.w	r3, r3, #2
 8010dea:	2b02      	cmp	r3, #2
 8010dec:	d11b      	bne.n	8010e26 <HAL_SPI_TransmitReceive+0x176>
 8010dee:	68fb      	ldr	r3, [r7, #12]
 8010df0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010df2:	b29b      	uxth	r3, r3
 8010df4:	2b00      	cmp	r3, #0
 8010df6:	d016      	beq.n	8010e26 <HAL_SPI_TransmitReceive+0x176>
 8010df8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8010dfa:	2b01      	cmp	r3, #1
 8010dfc:	d113      	bne.n	8010e26 <HAL_SPI_TransmitReceive+0x176>
 8010dfe:	68fb      	ldr	r3, [r7, #12]
 8010e00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e02:	881a      	ldrh	r2, [r3, #0]
 8010e04:	68fb      	ldr	r3, [r7, #12]
 8010e06:	681b      	ldr	r3, [r3, #0]
 8010e08:	60da      	str	r2, [r3, #12]
 8010e0a:	68fb      	ldr	r3, [r7, #12]
 8010e0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e0e:	1c9a      	adds	r2, r3, #2
 8010e10:	68fb      	ldr	r3, [r7, #12]
 8010e12:	631a      	str	r2, [r3, #48]	@ 0x30
 8010e14:	68fb      	ldr	r3, [r7, #12]
 8010e16:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010e18:	b29b      	uxth	r3, r3
 8010e1a:	3b01      	subs	r3, #1
 8010e1c:	b29a      	uxth	r2, r3
 8010e1e:	68fb      	ldr	r3, [r7, #12]
 8010e20:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010e22:	2300      	movs	r3, #0
 8010e24:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010e26:	68fb      	ldr	r3, [r7, #12]
 8010e28:	681b      	ldr	r3, [r3, #0]
 8010e2a:	689b      	ldr	r3, [r3, #8]
 8010e2c:	f003 0301 	and.w	r3, r3, #1
 8010e30:	2b01      	cmp	r3, #1
 8010e32:	d119      	bne.n	8010e68 <HAL_SPI_TransmitReceive+0x1b8>
 8010e34:	68fb      	ldr	r3, [r7, #12]
 8010e36:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010e38:	b29b      	uxth	r3, r3
 8010e3a:	2b00      	cmp	r3, #0
 8010e3c:	d014      	beq.n	8010e68 <HAL_SPI_TransmitReceive+0x1b8>
 8010e3e:	68fb      	ldr	r3, [r7, #12]
 8010e40:	681b      	ldr	r3, [r3, #0]
 8010e42:	68da      	ldr	r2, [r3, #12]
 8010e44:	68fb      	ldr	r3, [r7, #12]
 8010e46:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010e48:	b292      	uxth	r2, r2
 8010e4a:	801a      	strh	r2, [r3, #0]
 8010e4c:	68fb      	ldr	r3, [r7, #12]
 8010e4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010e50:	1c9a      	adds	r2, r3, #2
 8010e52:	68fb      	ldr	r3, [r7, #12]
 8010e54:	639a      	str	r2, [r3, #56]	@ 0x38
 8010e56:	68fb      	ldr	r3, [r7, #12]
 8010e58:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010e5a:	b29b      	uxth	r3, r3
 8010e5c:	3b01      	subs	r3, #1
 8010e5e:	b29a      	uxth	r2, r3
 8010e60:	68fb      	ldr	r3, [r7, #12]
 8010e62:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010e64:	2301      	movs	r3, #1
 8010e66:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010e68:	f7fa f8ca 	bl	800b000 <HAL_GetTick>
 8010e6c:	4602      	mov	r2, r0
 8010e6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010e70:	1ad3      	subs	r3, r2, r3
 8010e72:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8010e74:	429a      	cmp	r2, r3
 8010e76:	d807      	bhi.n	8010e88 <HAL_SPI_TransmitReceive+0x1d8>
 8010e78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010e7a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010e7e:	d003      	beq.n	8010e88 <HAL_SPI_TransmitReceive+0x1d8>
 8010e80:	2303      	movs	r3, #3
 8010e82:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010e86:	e0a7      	b.n	8010fd8 <HAL_SPI_TransmitReceive+0x328>
 8010e88:	68fb      	ldr	r3, [r7, #12]
 8010e8a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010e8c:	b29b      	uxth	r3, r3
 8010e8e:	2b00      	cmp	r3, #0
 8010e90:	d1a6      	bne.n	8010de0 <HAL_SPI_TransmitReceive+0x130>
 8010e92:	68fb      	ldr	r3, [r7, #12]
 8010e94:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010e96:	b29b      	uxth	r3, r3
 8010e98:	2b00      	cmp	r3, #0
 8010e9a:	d1a1      	bne.n	8010de0 <HAL_SPI_TransmitReceive+0x130>
 8010e9c:	e07c      	b.n	8010f98 <HAL_SPI_TransmitReceive+0x2e8>
 8010e9e:	68fb      	ldr	r3, [r7, #12]
 8010ea0:	685b      	ldr	r3, [r3, #4]
 8010ea2:	2b00      	cmp	r3, #0
 8010ea4:	d002      	beq.n	8010eac <HAL_SPI_TransmitReceive+0x1fc>
 8010ea6:	8b7b      	ldrh	r3, [r7, #26]
 8010ea8:	2b01      	cmp	r3, #1
 8010eaa:	d16b      	bne.n	8010f84 <HAL_SPI_TransmitReceive+0x2d4>
 8010eac:	68fb      	ldr	r3, [r7, #12]
 8010eae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8010eb0:	68fb      	ldr	r3, [r7, #12]
 8010eb2:	681b      	ldr	r3, [r3, #0]
 8010eb4:	330c      	adds	r3, #12
 8010eb6:	7812      	ldrb	r2, [r2, #0]
 8010eb8:	701a      	strb	r2, [r3, #0]
 8010eba:	68fb      	ldr	r3, [r7, #12]
 8010ebc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010ebe:	1c5a      	adds	r2, r3, #1
 8010ec0:	68fb      	ldr	r3, [r7, #12]
 8010ec2:	631a      	str	r2, [r3, #48]	@ 0x30
 8010ec4:	68fb      	ldr	r3, [r7, #12]
 8010ec6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010ec8:	b29b      	uxth	r3, r3
 8010eca:	3b01      	subs	r3, #1
 8010ecc:	b29a      	uxth	r2, r3
 8010ece:	68fb      	ldr	r3, [r7, #12]
 8010ed0:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010ed2:	e057      	b.n	8010f84 <HAL_SPI_TransmitReceive+0x2d4>
 8010ed4:	68fb      	ldr	r3, [r7, #12]
 8010ed6:	681b      	ldr	r3, [r3, #0]
 8010ed8:	689b      	ldr	r3, [r3, #8]
 8010eda:	f003 0302 	and.w	r3, r3, #2
 8010ede:	2b02      	cmp	r3, #2
 8010ee0:	d11c      	bne.n	8010f1c <HAL_SPI_TransmitReceive+0x26c>
 8010ee2:	68fb      	ldr	r3, [r7, #12]
 8010ee4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010ee6:	b29b      	uxth	r3, r3
 8010ee8:	2b00      	cmp	r3, #0
 8010eea:	d017      	beq.n	8010f1c <HAL_SPI_TransmitReceive+0x26c>
 8010eec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8010eee:	2b01      	cmp	r3, #1
 8010ef0:	d114      	bne.n	8010f1c <HAL_SPI_TransmitReceive+0x26c>
 8010ef2:	68fb      	ldr	r3, [r7, #12]
 8010ef4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8010ef6:	68fb      	ldr	r3, [r7, #12]
 8010ef8:	681b      	ldr	r3, [r3, #0]
 8010efa:	330c      	adds	r3, #12
 8010efc:	7812      	ldrb	r2, [r2, #0]
 8010efe:	701a      	strb	r2, [r3, #0]
 8010f00:	68fb      	ldr	r3, [r7, #12]
 8010f02:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010f04:	1c5a      	adds	r2, r3, #1
 8010f06:	68fb      	ldr	r3, [r7, #12]
 8010f08:	631a      	str	r2, [r3, #48]	@ 0x30
 8010f0a:	68fb      	ldr	r3, [r7, #12]
 8010f0c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f0e:	b29b      	uxth	r3, r3
 8010f10:	3b01      	subs	r3, #1
 8010f12:	b29a      	uxth	r2, r3
 8010f14:	68fb      	ldr	r3, [r7, #12]
 8010f16:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010f18:	2300      	movs	r3, #0
 8010f1a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010f1c:	68fb      	ldr	r3, [r7, #12]
 8010f1e:	681b      	ldr	r3, [r3, #0]
 8010f20:	689b      	ldr	r3, [r3, #8]
 8010f22:	f003 0301 	and.w	r3, r3, #1
 8010f26:	2b01      	cmp	r3, #1
 8010f28:	d119      	bne.n	8010f5e <HAL_SPI_TransmitReceive+0x2ae>
 8010f2a:	68fb      	ldr	r3, [r7, #12]
 8010f2c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010f2e:	b29b      	uxth	r3, r3
 8010f30:	2b00      	cmp	r3, #0
 8010f32:	d014      	beq.n	8010f5e <HAL_SPI_TransmitReceive+0x2ae>
 8010f34:	68fb      	ldr	r3, [r7, #12]
 8010f36:	681b      	ldr	r3, [r3, #0]
 8010f38:	68da      	ldr	r2, [r3, #12]
 8010f3a:	68fb      	ldr	r3, [r7, #12]
 8010f3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f3e:	b2d2      	uxtb	r2, r2
 8010f40:	701a      	strb	r2, [r3, #0]
 8010f42:	68fb      	ldr	r3, [r7, #12]
 8010f44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f46:	1c5a      	adds	r2, r3, #1
 8010f48:	68fb      	ldr	r3, [r7, #12]
 8010f4a:	639a      	str	r2, [r3, #56]	@ 0x38
 8010f4c:	68fb      	ldr	r3, [r7, #12]
 8010f4e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010f50:	b29b      	uxth	r3, r3
 8010f52:	3b01      	subs	r3, #1
 8010f54:	b29a      	uxth	r2, r3
 8010f56:	68fb      	ldr	r3, [r7, #12]
 8010f58:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010f5a:	2301      	movs	r3, #1
 8010f5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010f5e:	f7fa f84f 	bl	800b000 <HAL_GetTick>
 8010f62:	4602      	mov	r2, r0
 8010f64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010f66:	1ad3      	subs	r3, r2, r3
 8010f68:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8010f6a:	429a      	cmp	r2, r3
 8010f6c:	d803      	bhi.n	8010f76 <HAL_SPI_TransmitReceive+0x2c6>
 8010f6e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010f70:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010f74:	d102      	bne.n	8010f7c <HAL_SPI_TransmitReceive+0x2cc>
 8010f76:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010f78:	2b00      	cmp	r3, #0
 8010f7a:	d103      	bne.n	8010f84 <HAL_SPI_TransmitReceive+0x2d4>
 8010f7c:	2303      	movs	r3, #3
 8010f7e:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010f82:	e029      	b.n	8010fd8 <HAL_SPI_TransmitReceive+0x328>
 8010f84:	68fb      	ldr	r3, [r7, #12]
 8010f86:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f88:	b29b      	uxth	r3, r3
 8010f8a:	2b00      	cmp	r3, #0
 8010f8c:	d1a2      	bne.n	8010ed4 <HAL_SPI_TransmitReceive+0x224>
 8010f8e:	68fb      	ldr	r3, [r7, #12]
 8010f90:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010f92:	b29b      	uxth	r3, r3
 8010f94:	2b00      	cmp	r3, #0
 8010f96:	d19d      	bne.n	8010ed4 <HAL_SPI_TransmitReceive+0x224>
 8010f98:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010f9a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8010f9c:	68f8      	ldr	r0, [r7, #12]
 8010f9e:	f000 f917 	bl	80111d0 <SPI_EndRxTxTransaction>
 8010fa2:	4603      	mov	r3, r0
 8010fa4:	2b00      	cmp	r3, #0
 8010fa6:	d006      	beq.n	8010fb6 <HAL_SPI_TransmitReceive+0x306>
 8010fa8:	2301      	movs	r3, #1
 8010faa:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010fae:	68fb      	ldr	r3, [r7, #12]
 8010fb0:	2220      	movs	r2, #32
 8010fb2:	655a      	str	r2, [r3, #84]	@ 0x54
 8010fb4:	e010      	b.n	8010fd8 <HAL_SPI_TransmitReceive+0x328>
 8010fb6:	68fb      	ldr	r3, [r7, #12]
 8010fb8:	689b      	ldr	r3, [r3, #8]
 8010fba:	2b00      	cmp	r3, #0
 8010fbc:	d10b      	bne.n	8010fd6 <HAL_SPI_TransmitReceive+0x326>
 8010fbe:	2300      	movs	r3, #0
 8010fc0:	617b      	str	r3, [r7, #20]
 8010fc2:	68fb      	ldr	r3, [r7, #12]
 8010fc4:	681b      	ldr	r3, [r3, #0]
 8010fc6:	68db      	ldr	r3, [r3, #12]
 8010fc8:	617b      	str	r3, [r7, #20]
 8010fca:	68fb      	ldr	r3, [r7, #12]
 8010fcc:	681b      	ldr	r3, [r3, #0]
 8010fce:	689b      	ldr	r3, [r3, #8]
 8010fd0:	617b      	str	r3, [r7, #20]
 8010fd2:	697b      	ldr	r3, [r7, #20]
 8010fd4:	e000      	b.n	8010fd8 <HAL_SPI_TransmitReceive+0x328>
 8010fd6:	bf00      	nop
 8010fd8:	68fb      	ldr	r3, [r7, #12]
 8010fda:	2201      	movs	r2, #1
 8010fdc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010fe0:	68fb      	ldr	r3, [r7, #12]
 8010fe2:	2200      	movs	r2, #0
 8010fe4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010fe8:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8010fec:	4618      	mov	r0, r3
 8010fee:	3730      	adds	r7, #48	@ 0x30
 8010ff0:	46bd      	mov	sp, r7
 8010ff2:	bd80      	pop	{r7, pc}

08010ff4 <SPI_WaitFlagStateUntilTimeout>:
 8010ff4:	b580      	push	{r7, lr}
 8010ff6:	b088      	sub	sp, #32
 8010ff8:	af00      	add	r7, sp, #0
 8010ffa:	60f8      	str	r0, [r7, #12]
 8010ffc:	60b9      	str	r1, [r7, #8]
 8010ffe:	603b      	str	r3, [r7, #0]
 8011000:	4613      	mov	r3, r2
 8011002:	71fb      	strb	r3, [r7, #7]
 8011004:	f7f9 fffc 	bl	800b000 <HAL_GetTick>
 8011008:	4602      	mov	r2, r0
 801100a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801100c:	1a9b      	subs	r3, r3, r2
 801100e:	683a      	ldr	r2, [r7, #0]
 8011010:	4413      	add	r3, r2
 8011012:	61fb      	str	r3, [r7, #28]
 8011014:	f7f9 fff4 	bl	800b000 <HAL_GetTick>
 8011018:	61b8      	str	r0, [r7, #24]
 801101a:	4b39      	ldr	r3, [pc, #228]	@ (8011100 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 801101c:	681b      	ldr	r3, [r3, #0]
 801101e:	015b      	lsls	r3, r3, #5
 8011020:	0d1b      	lsrs	r3, r3, #20
 8011022:	69fa      	ldr	r2, [r7, #28]
 8011024:	fb02 f303 	mul.w	r3, r2, r3
 8011028:	617b      	str	r3, [r7, #20]
 801102a:	e054      	b.n	80110d6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 801102c:	683b      	ldr	r3, [r7, #0]
 801102e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8011032:	d050      	beq.n	80110d6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8011034:	f7f9 ffe4 	bl	800b000 <HAL_GetTick>
 8011038:	4602      	mov	r2, r0
 801103a:	69bb      	ldr	r3, [r7, #24]
 801103c:	1ad3      	subs	r3, r2, r3
 801103e:	69fa      	ldr	r2, [r7, #28]
 8011040:	429a      	cmp	r2, r3
 8011042:	d902      	bls.n	801104a <SPI_WaitFlagStateUntilTimeout+0x56>
 8011044:	69fb      	ldr	r3, [r7, #28]
 8011046:	2b00      	cmp	r3, #0
 8011048:	d13d      	bne.n	80110c6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 801104a:	68fb      	ldr	r3, [r7, #12]
 801104c:	681b      	ldr	r3, [r3, #0]
 801104e:	685a      	ldr	r2, [r3, #4]
 8011050:	68fb      	ldr	r3, [r7, #12]
 8011052:	681b      	ldr	r3, [r3, #0]
 8011054:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8011058:	605a      	str	r2, [r3, #4]
 801105a:	68fb      	ldr	r3, [r7, #12]
 801105c:	685b      	ldr	r3, [r3, #4]
 801105e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011062:	d111      	bne.n	8011088 <SPI_WaitFlagStateUntilTimeout+0x94>
 8011064:	68fb      	ldr	r3, [r7, #12]
 8011066:	689b      	ldr	r3, [r3, #8]
 8011068:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 801106c:	d004      	beq.n	8011078 <SPI_WaitFlagStateUntilTimeout+0x84>
 801106e:	68fb      	ldr	r3, [r7, #12]
 8011070:	689b      	ldr	r3, [r3, #8]
 8011072:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011076:	d107      	bne.n	8011088 <SPI_WaitFlagStateUntilTimeout+0x94>
 8011078:	68fb      	ldr	r3, [r7, #12]
 801107a:	681b      	ldr	r3, [r3, #0]
 801107c:	681a      	ldr	r2, [r3, #0]
 801107e:	68fb      	ldr	r3, [r7, #12]
 8011080:	681b      	ldr	r3, [r3, #0]
 8011082:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8011086:	601a      	str	r2, [r3, #0]
 8011088:	68fb      	ldr	r3, [r7, #12]
 801108a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801108c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011090:	d10f      	bne.n	80110b2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8011092:	68fb      	ldr	r3, [r7, #12]
 8011094:	681b      	ldr	r3, [r3, #0]
 8011096:	681a      	ldr	r2, [r3, #0]
 8011098:	68fb      	ldr	r3, [r7, #12]
 801109a:	681b      	ldr	r3, [r3, #0]
 801109c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80110a0:	601a      	str	r2, [r3, #0]
 80110a2:	68fb      	ldr	r3, [r7, #12]
 80110a4:	681b      	ldr	r3, [r3, #0]
 80110a6:	681a      	ldr	r2, [r3, #0]
 80110a8:	68fb      	ldr	r3, [r7, #12]
 80110aa:	681b      	ldr	r3, [r3, #0]
 80110ac:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80110b0:	601a      	str	r2, [r3, #0]
 80110b2:	68fb      	ldr	r3, [r7, #12]
 80110b4:	2201      	movs	r2, #1
 80110b6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80110ba:	68fb      	ldr	r3, [r7, #12]
 80110bc:	2200      	movs	r2, #0
 80110be:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80110c2:	2303      	movs	r3, #3
 80110c4:	e017      	b.n	80110f6 <SPI_WaitFlagStateUntilTimeout+0x102>
 80110c6:	697b      	ldr	r3, [r7, #20]
 80110c8:	2b00      	cmp	r3, #0
 80110ca:	d101      	bne.n	80110d0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80110cc:	2300      	movs	r3, #0
 80110ce:	61fb      	str	r3, [r7, #28]
 80110d0:	697b      	ldr	r3, [r7, #20]
 80110d2:	3b01      	subs	r3, #1
 80110d4:	617b      	str	r3, [r7, #20]
 80110d6:	68fb      	ldr	r3, [r7, #12]
 80110d8:	681b      	ldr	r3, [r3, #0]
 80110da:	689a      	ldr	r2, [r3, #8]
 80110dc:	68bb      	ldr	r3, [r7, #8]
 80110de:	4013      	ands	r3, r2
 80110e0:	68ba      	ldr	r2, [r7, #8]
 80110e2:	429a      	cmp	r2, r3
 80110e4:	bf0c      	ite	eq
 80110e6:	2301      	moveq	r3, #1
 80110e8:	2300      	movne	r3, #0
 80110ea:	b2db      	uxtb	r3, r3
 80110ec:	461a      	mov	r2, r3
 80110ee:	79fb      	ldrb	r3, [r7, #7]
 80110f0:	429a      	cmp	r2, r3
 80110f2:	d19b      	bne.n	801102c <SPI_WaitFlagStateUntilTimeout+0x38>
 80110f4:	2300      	movs	r3, #0
 80110f6:	4618      	mov	r0, r3
 80110f8:	3720      	adds	r7, #32
 80110fa:	46bd      	mov	sp, r7
 80110fc:	bd80      	pop	{r7, pc}
 80110fe:	bf00      	nop
 8011100:	20000004 	.word	0x20000004

08011104 <SPI_EndRxTransaction>:
 8011104:	b580      	push	{r7, lr}
 8011106:	b086      	sub	sp, #24
 8011108:	af02      	add	r7, sp, #8
 801110a:	60f8      	str	r0, [r7, #12]
 801110c:	60b9      	str	r1, [r7, #8]
 801110e:	607a      	str	r2, [r7, #4]
 8011110:	68fb      	ldr	r3, [r7, #12]
 8011112:	685b      	ldr	r3, [r3, #4]
 8011114:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011118:	d111      	bne.n	801113e <SPI_EndRxTransaction+0x3a>
 801111a:	68fb      	ldr	r3, [r7, #12]
 801111c:	689b      	ldr	r3, [r3, #8]
 801111e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8011122:	d004      	beq.n	801112e <SPI_EndRxTransaction+0x2a>
 8011124:	68fb      	ldr	r3, [r7, #12]
 8011126:	689b      	ldr	r3, [r3, #8]
 8011128:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801112c:	d107      	bne.n	801113e <SPI_EndRxTransaction+0x3a>
 801112e:	68fb      	ldr	r3, [r7, #12]
 8011130:	681b      	ldr	r3, [r3, #0]
 8011132:	681a      	ldr	r2, [r3, #0]
 8011134:	68fb      	ldr	r3, [r7, #12]
 8011136:	681b      	ldr	r3, [r3, #0]
 8011138:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 801113c:	601a      	str	r2, [r3, #0]
 801113e:	68fb      	ldr	r3, [r7, #12]
 8011140:	685b      	ldr	r3, [r3, #4]
 8011142:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011146:	d12a      	bne.n	801119e <SPI_EndRxTransaction+0x9a>
 8011148:	68fb      	ldr	r3, [r7, #12]
 801114a:	689b      	ldr	r3, [r3, #8]
 801114c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011150:	d012      	beq.n	8011178 <SPI_EndRxTransaction+0x74>
 8011152:	687b      	ldr	r3, [r7, #4]
 8011154:	9300      	str	r3, [sp, #0]
 8011156:	68bb      	ldr	r3, [r7, #8]
 8011158:	2200      	movs	r2, #0
 801115a:	2180      	movs	r1, #128	@ 0x80
 801115c:	68f8      	ldr	r0, [r7, #12]
 801115e:	f7ff ff49 	bl	8010ff4 <SPI_WaitFlagStateUntilTimeout>
 8011162:	4603      	mov	r3, r0
 8011164:	2b00      	cmp	r3, #0
 8011166:	d02d      	beq.n	80111c4 <SPI_EndRxTransaction+0xc0>
 8011168:	68fb      	ldr	r3, [r7, #12]
 801116a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801116c:	f043 0220 	orr.w	r2, r3, #32
 8011170:	68fb      	ldr	r3, [r7, #12]
 8011172:	655a      	str	r2, [r3, #84]	@ 0x54
 8011174:	2303      	movs	r3, #3
 8011176:	e026      	b.n	80111c6 <SPI_EndRxTransaction+0xc2>
 8011178:	687b      	ldr	r3, [r7, #4]
 801117a:	9300      	str	r3, [sp, #0]
 801117c:	68bb      	ldr	r3, [r7, #8]
 801117e:	2200      	movs	r2, #0
 8011180:	2101      	movs	r1, #1
 8011182:	68f8      	ldr	r0, [r7, #12]
 8011184:	f7ff ff36 	bl	8010ff4 <SPI_WaitFlagStateUntilTimeout>
 8011188:	4603      	mov	r3, r0
 801118a:	2b00      	cmp	r3, #0
 801118c:	d01a      	beq.n	80111c4 <SPI_EndRxTransaction+0xc0>
 801118e:	68fb      	ldr	r3, [r7, #12]
 8011190:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011192:	f043 0220 	orr.w	r2, r3, #32
 8011196:	68fb      	ldr	r3, [r7, #12]
 8011198:	655a      	str	r2, [r3, #84]	@ 0x54
 801119a:	2303      	movs	r3, #3
 801119c:	e013      	b.n	80111c6 <SPI_EndRxTransaction+0xc2>
 801119e:	687b      	ldr	r3, [r7, #4]
 80111a0:	9300      	str	r3, [sp, #0]
 80111a2:	68bb      	ldr	r3, [r7, #8]
 80111a4:	2200      	movs	r2, #0
 80111a6:	2101      	movs	r1, #1
 80111a8:	68f8      	ldr	r0, [r7, #12]
 80111aa:	f7ff ff23 	bl	8010ff4 <SPI_WaitFlagStateUntilTimeout>
 80111ae:	4603      	mov	r3, r0
 80111b0:	2b00      	cmp	r3, #0
 80111b2:	d007      	beq.n	80111c4 <SPI_EndRxTransaction+0xc0>
 80111b4:	68fb      	ldr	r3, [r7, #12]
 80111b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80111b8:	f043 0220 	orr.w	r2, r3, #32
 80111bc:	68fb      	ldr	r3, [r7, #12]
 80111be:	655a      	str	r2, [r3, #84]	@ 0x54
 80111c0:	2303      	movs	r3, #3
 80111c2:	e000      	b.n	80111c6 <SPI_EndRxTransaction+0xc2>
 80111c4:	2300      	movs	r3, #0
 80111c6:	4618      	mov	r0, r3
 80111c8:	3710      	adds	r7, #16
 80111ca:	46bd      	mov	sp, r7
 80111cc:	bd80      	pop	{r7, pc}
	...

080111d0 <SPI_EndRxTxTransaction>:
 80111d0:	b580      	push	{r7, lr}
 80111d2:	b088      	sub	sp, #32
 80111d4:	af02      	add	r7, sp, #8
 80111d6:	60f8      	str	r0, [r7, #12]
 80111d8:	60b9      	str	r1, [r7, #8]
 80111da:	607a      	str	r2, [r7, #4]
 80111dc:	4b1b      	ldr	r3, [pc, #108]	@ (801124c <SPI_EndRxTxTransaction+0x7c>)
 80111de:	681b      	ldr	r3, [r3, #0]
 80111e0:	4a1b      	ldr	r2, [pc, #108]	@ (8011250 <SPI_EndRxTxTransaction+0x80>)
 80111e2:	fba2 2303 	umull	r2, r3, r2, r3
 80111e6:	0d5b      	lsrs	r3, r3, #21
 80111e8:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80111ec:	fb02 f303 	mul.w	r3, r2, r3
 80111f0:	617b      	str	r3, [r7, #20]
 80111f2:	68fb      	ldr	r3, [r7, #12]
 80111f4:	685b      	ldr	r3, [r3, #4]
 80111f6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80111fa:	d112      	bne.n	8011222 <SPI_EndRxTxTransaction+0x52>
 80111fc:	687b      	ldr	r3, [r7, #4]
 80111fe:	9300      	str	r3, [sp, #0]
 8011200:	68bb      	ldr	r3, [r7, #8]
 8011202:	2200      	movs	r2, #0
 8011204:	2180      	movs	r1, #128	@ 0x80
 8011206:	68f8      	ldr	r0, [r7, #12]
 8011208:	f7ff fef4 	bl	8010ff4 <SPI_WaitFlagStateUntilTimeout>
 801120c:	4603      	mov	r3, r0
 801120e:	2b00      	cmp	r3, #0
 8011210:	d016      	beq.n	8011240 <SPI_EndRxTxTransaction+0x70>
 8011212:	68fb      	ldr	r3, [r7, #12]
 8011214:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011216:	f043 0220 	orr.w	r2, r3, #32
 801121a:	68fb      	ldr	r3, [r7, #12]
 801121c:	655a      	str	r2, [r3, #84]	@ 0x54
 801121e:	2303      	movs	r3, #3
 8011220:	e00f      	b.n	8011242 <SPI_EndRxTxTransaction+0x72>
 8011222:	697b      	ldr	r3, [r7, #20]
 8011224:	2b00      	cmp	r3, #0
 8011226:	d00a      	beq.n	801123e <SPI_EndRxTxTransaction+0x6e>
 8011228:	697b      	ldr	r3, [r7, #20]
 801122a:	3b01      	subs	r3, #1
 801122c:	617b      	str	r3, [r7, #20]
 801122e:	68fb      	ldr	r3, [r7, #12]
 8011230:	681b      	ldr	r3, [r3, #0]
 8011232:	689b      	ldr	r3, [r3, #8]
 8011234:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011238:	2b80      	cmp	r3, #128	@ 0x80
 801123a:	d0f2      	beq.n	8011222 <SPI_EndRxTxTransaction+0x52>
 801123c:	e000      	b.n	8011240 <SPI_EndRxTxTransaction+0x70>
 801123e:	bf00      	nop
 8011240:	2300      	movs	r3, #0
 8011242:	4618      	mov	r0, r3
 8011244:	3718      	adds	r7, #24
 8011246:	46bd      	mov	sp, r7
 8011248:	bd80      	pop	{r7, pc}
 801124a:	bf00      	nop
 801124c:	20000004 	.word	0x20000004
 8011250:	165e9f81 	.word	0x165e9f81

08011254 <HAL_TIM_Base_Init>:
 8011254:	b580      	push	{r7, lr}
 8011256:	b082      	sub	sp, #8
 8011258:	af00      	add	r7, sp, #0
 801125a:	6078      	str	r0, [r7, #4]
 801125c:	687b      	ldr	r3, [r7, #4]
 801125e:	2b00      	cmp	r3, #0
 8011260:	d101      	bne.n	8011266 <HAL_TIM_Base_Init+0x12>
 8011262:	2301      	movs	r3, #1
 8011264:	e041      	b.n	80112ea <HAL_TIM_Base_Init+0x96>
 8011266:	687b      	ldr	r3, [r7, #4]
 8011268:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 801126c:	b2db      	uxtb	r3, r3
 801126e:	2b00      	cmp	r3, #0
 8011270:	d106      	bne.n	8011280 <HAL_TIM_Base_Init+0x2c>
 8011272:	687b      	ldr	r3, [r7, #4]
 8011274:	2200      	movs	r2, #0
 8011276:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801127a:	6878      	ldr	r0, [r7, #4]
 801127c:	f7f3 f896 	bl	80043ac <HAL_TIM_Base_MspInit>
 8011280:	687b      	ldr	r3, [r7, #4]
 8011282:	2202      	movs	r2, #2
 8011284:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011288:	687b      	ldr	r3, [r7, #4]
 801128a:	681a      	ldr	r2, [r3, #0]
 801128c:	687b      	ldr	r3, [r7, #4]
 801128e:	3304      	adds	r3, #4
 8011290:	4619      	mov	r1, r3
 8011292:	4610      	mov	r0, r2
 8011294:	f000 fd24 	bl	8011ce0 <TIM_Base_SetConfig>
 8011298:	687b      	ldr	r3, [r7, #4]
 801129a:	2201      	movs	r2, #1
 801129c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80112a0:	687b      	ldr	r3, [r7, #4]
 80112a2:	2201      	movs	r2, #1
 80112a4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80112a8:	687b      	ldr	r3, [r7, #4]
 80112aa:	2201      	movs	r2, #1
 80112ac:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80112b0:	687b      	ldr	r3, [r7, #4]
 80112b2:	2201      	movs	r2, #1
 80112b4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80112b8:	687b      	ldr	r3, [r7, #4]
 80112ba:	2201      	movs	r2, #1
 80112bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80112c0:	687b      	ldr	r3, [r7, #4]
 80112c2:	2201      	movs	r2, #1
 80112c4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80112c8:	687b      	ldr	r3, [r7, #4]
 80112ca:	2201      	movs	r2, #1
 80112cc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80112d0:	687b      	ldr	r3, [r7, #4]
 80112d2:	2201      	movs	r2, #1
 80112d4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80112d8:	687b      	ldr	r3, [r7, #4]
 80112da:	2201      	movs	r2, #1
 80112dc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80112e0:	687b      	ldr	r3, [r7, #4]
 80112e2:	2201      	movs	r2, #1
 80112e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80112e8:	2300      	movs	r3, #0
 80112ea:	4618      	mov	r0, r3
 80112ec:	3708      	adds	r7, #8
 80112ee:	46bd      	mov	sp, r7
 80112f0:	bd80      	pop	{r7, pc}
	...

080112f4 <HAL_TIM_Base_Start_IT>:
 80112f4:	b480      	push	{r7}
 80112f6:	b085      	sub	sp, #20
 80112f8:	af00      	add	r7, sp, #0
 80112fa:	6078      	str	r0, [r7, #4]
 80112fc:	687b      	ldr	r3, [r7, #4]
 80112fe:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8011302:	b2db      	uxtb	r3, r3
 8011304:	2b01      	cmp	r3, #1
 8011306:	d001      	beq.n	801130c <HAL_TIM_Base_Start_IT+0x18>
 8011308:	2301      	movs	r3, #1
 801130a:	e04e      	b.n	80113aa <HAL_TIM_Base_Start_IT+0xb6>
 801130c:	687b      	ldr	r3, [r7, #4]
 801130e:	2202      	movs	r2, #2
 8011310:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011314:	687b      	ldr	r3, [r7, #4]
 8011316:	681b      	ldr	r3, [r3, #0]
 8011318:	68da      	ldr	r2, [r3, #12]
 801131a:	687b      	ldr	r3, [r7, #4]
 801131c:	681b      	ldr	r3, [r3, #0]
 801131e:	f042 0201 	orr.w	r2, r2, #1
 8011322:	60da      	str	r2, [r3, #12]
 8011324:	687b      	ldr	r3, [r7, #4]
 8011326:	681b      	ldr	r3, [r3, #0]
 8011328:	4a23      	ldr	r2, [pc, #140]	@ (80113b8 <HAL_TIM_Base_Start_IT+0xc4>)
 801132a:	4293      	cmp	r3, r2
 801132c:	d022      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 801132e:	687b      	ldr	r3, [r7, #4]
 8011330:	681b      	ldr	r3, [r3, #0]
 8011332:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011336:	d01d      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 8011338:	687b      	ldr	r3, [r7, #4]
 801133a:	681b      	ldr	r3, [r3, #0]
 801133c:	4a1f      	ldr	r2, [pc, #124]	@ (80113bc <HAL_TIM_Base_Start_IT+0xc8>)
 801133e:	4293      	cmp	r3, r2
 8011340:	d018      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 8011342:	687b      	ldr	r3, [r7, #4]
 8011344:	681b      	ldr	r3, [r3, #0]
 8011346:	4a1e      	ldr	r2, [pc, #120]	@ (80113c0 <HAL_TIM_Base_Start_IT+0xcc>)
 8011348:	4293      	cmp	r3, r2
 801134a:	d013      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 801134c:	687b      	ldr	r3, [r7, #4]
 801134e:	681b      	ldr	r3, [r3, #0]
 8011350:	4a1c      	ldr	r2, [pc, #112]	@ (80113c4 <HAL_TIM_Base_Start_IT+0xd0>)
 8011352:	4293      	cmp	r3, r2
 8011354:	d00e      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 8011356:	687b      	ldr	r3, [r7, #4]
 8011358:	681b      	ldr	r3, [r3, #0]
 801135a:	4a1b      	ldr	r2, [pc, #108]	@ (80113c8 <HAL_TIM_Base_Start_IT+0xd4>)
 801135c:	4293      	cmp	r3, r2
 801135e:	d009      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 8011360:	687b      	ldr	r3, [r7, #4]
 8011362:	681b      	ldr	r3, [r3, #0]
 8011364:	4a19      	ldr	r2, [pc, #100]	@ (80113cc <HAL_TIM_Base_Start_IT+0xd8>)
 8011366:	4293      	cmp	r3, r2
 8011368:	d004      	beq.n	8011374 <HAL_TIM_Base_Start_IT+0x80>
 801136a:	687b      	ldr	r3, [r7, #4]
 801136c:	681b      	ldr	r3, [r3, #0]
 801136e:	4a18      	ldr	r2, [pc, #96]	@ (80113d0 <HAL_TIM_Base_Start_IT+0xdc>)
 8011370:	4293      	cmp	r3, r2
 8011372:	d111      	bne.n	8011398 <HAL_TIM_Base_Start_IT+0xa4>
 8011374:	687b      	ldr	r3, [r7, #4]
 8011376:	681b      	ldr	r3, [r3, #0]
 8011378:	689b      	ldr	r3, [r3, #8]
 801137a:	f003 0307 	and.w	r3, r3, #7
 801137e:	60fb      	str	r3, [r7, #12]
 8011380:	68fb      	ldr	r3, [r7, #12]
 8011382:	2b06      	cmp	r3, #6
 8011384:	d010      	beq.n	80113a8 <HAL_TIM_Base_Start_IT+0xb4>
 8011386:	687b      	ldr	r3, [r7, #4]
 8011388:	681b      	ldr	r3, [r3, #0]
 801138a:	681a      	ldr	r2, [r3, #0]
 801138c:	687b      	ldr	r3, [r7, #4]
 801138e:	681b      	ldr	r3, [r3, #0]
 8011390:	f042 0201 	orr.w	r2, r2, #1
 8011394:	601a      	str	r2, [r3, #0]
 8011396:	e007      	b.n	80113a8 <HAL_TIM_Base_Start_IT+0xb4>
 8011398:	687b      	ldr	r3, [r7, #4]
 801139a:	681b      	ldr	r3, [r3, #0]
 801139c:	681a      	ldr	r2, [r3, #0]
 801139e:	687b      	ldr	r3, [r7, #4]
 80113a0:	681b      	ldr	r3, [r3, #0]
 80113a2:	f042 0201 	orr.w	r2, r2, #1
 80113a6:	601a      	str	r2, [r3, #0]
 80113a8:	2300      	movs	r3, #0
 80113aa:	4618      	mov	r0, r3
 80113ac:	3714      	adds	r7, #20
 80113ae:	46bd      	mov	sp, r7
 80113b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80113b4:	4770      	bx	lr
 80113b6:	bf00      	nop
 80113b8:	40010000 	.word	0x40010000
 80113bc:	40000400 	.word	0x40000400
 80113c0:	40000800 	.word	0x40000800
 80113c4:	40000c00 	.word	0x40000c00
 80113c8:	40010400 	.word	0x40010400
 80113cc:	40014000 	.word	0x40014000
 80113d0:	40001800 	.word	0x40001800

080113d4 <HAL_TIM_OC_Init>:
 80113d4:	b580      	push	{r7, lr}
 80113d6:	b082      	sub	sp, #8
 80113d8:	af00      	add	r7, sp, #0
 80113da:	6078      	str	r0, [r7, #4]
 80113dc:	687b      	ldr	r3, [r7, #4]
 80113de:	2b00      	cmp	r3, #0
 80113e0:	d101      	bne.n	80113e6 <HAL_TIM_OC_Init+0x12>
 80113e2:	2301      	movs	r3, #1
 80113e4:	e041      	b.n	801146a <HAL_TIM_OC_Init+0x96>
 80113e6:	687b      	ldr	r3, [r7, #4]
 80113e8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80113ec:	b2db      	uxtb	r3, r3
 80113ee:	2b00      	cmp	r3, #0
 80113f0:	d106      	bne.n	8011400 <HAL_TIM_OC_Init+0x2c>
 80113f2:	687b      	ldr	r3, [r7, #4]
 80113f4:	2200      	movs	r2, #0
 80113f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80113fa:	6878      	ldr	r0, [r7, #4]
 80113fc:	f000 f839 	bl	8011472 <HAL_TIM_OC_MspInit>
 8011400:	687b      	ldr	r3, [r7, #4]
 8011402:	2202      	movs	r2, #2
 8011404:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011408:	687b      	ldr	r3, [r7, #4]
 801140a:	681a      	ldr	r2, [r3, #0]
 801140c:	687b      	ldr	r3, [r7, #4]
 801140e:	3304      	adds	r3, #4
 8011410:	4619      	mov	r1, r3
 8011412:	4610      	mov	r0, r2
 8011414:	f000 fc64 	bl	8011ce0 <TIM_Base_SetConfig>
 8011418:	687b      	ldr	r3, [r7, #4]
 801141a:	2201      	movs	r2, #1
 801141c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8011420:	687b      	ldr	r3, [r7, #4]
 8011422:	2201      	movs	r2, #1
 8011424:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011428:	687b      	ldr	r3, [r7, #4]
 801142a:	2201      	movs	r2, #1
 801142c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8011430:	687b      	ldr	r3, [r7, #4]
 8011432:	2201      	movs	r2, #1
 8011434:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8011438:	687b      	ldr	r3, [r7, #4]
 801143a:	2201      	movs	r2, #1
 801143c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011440:	687b      	ldr	r3, [r7, #4]
 8011442:	2201      	movs	r2, #1
 8011444:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8011448:	687b      	ldr	r3, [r7, #4]
 801144a:	2201      	movs	r2, #1
 801144c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8011450:	687b      	ldr	r3, [r7, #4]
 8011452:	2201      	movs	r2, #1
 8011454:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8011458:	687b      	ldr	r3, [r7, #4]
 801145a:	2201      	movs	r2, #1
 801145c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8011460:	687b      	ldr	r3, [r7, #4]
 8011462:	2201      	movs	r2, #1
 8011464:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011468:	2300      	movs	r3, #0
 801146a:	4618      	mov	r0, r3
 801146c:	3708      	adds	r7, #8
 801146e:	46bd      	mov	sp, r7
 8011470:	bd80      	pop	{r7, pc}

08011472 <HAL_TIM_OC_MspInit>:
 8011472:	b480      	push	{r7}
 8011474:	b083      	sub	sp, #12
 8011476:	af00      	add	r7, sp, #0
 8011478:	6078      	str	r0, [r7, #4]
 801147a:	bf00      	nop
 801147c:	370c      	adds	r7, #12
 801147e:	46bd      	mov	sp, r7
 8011480:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011484:	4770      	bx	lr

08011486 <HAL_TIM_PWM_Init>:
 8011486:	b580      	push	{r7, lr}
 8011488:	b082      	sub	sp, #8
 801148a:	af00      	add	r7, sp, #0
 801148c:	6078      	str	r0, [r7, #4]
 801148e:	687b      	ldr	r3, [r7, #4]
 8011490:	2b00      	cmp	r3, #0
 8011492:	d101      	bne.n	8011498 <HAL_TIM_PWM_Init+0x12>
 8011494:	2301      	movs	r3, #1
 8011496:	e041      	b.n	801151c <HAL_TIM_PWM_Init+0x96>
 8011498:	687b      	ldr	r3, [r7, #4]
 801149a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 801149e:	b2db      	uxtb	r3, r3
 80114a0:	2b00      	cmp	r3, #0
 80114a2:	d106      	bne.n	80114b2 <HAL_TIM_PWM_Init+0x2c>
 80114a4:	687b      	ldr	r3, [r7, #4]
 80114a6:	2200      	movs	r2, #0
 80114a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80114ac:	6878      	ldr	r0, [r7, #4]
 80114ae:	f7f2 ffbb 	bl	8004428 <HAL_TIM_PWM_MspInit>
 80114b2:	687b      	ldr	r3, [r7, #4]
 80114b4:	2202      	movs	r2, #2
 80114b6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80114ba:	687b      	ldr	r3, [r7, #4]
 80114bc:	681a      	ldr	r2, [r3, #0]
 80114be:	687b      	ldr	r3, [r7, #4]
 80114c0:	3304      	adds	r3, #4
 80114c2:	4619      	mov	r1, r3
 80114c4:	4610      	mov	r0, r2
 80114c6:	f000 fc0b 	bl	8011ce0 <TIM_Base_SetConfig>
 80114ca:	687b      	ldr	r3, [r7, #4]
 80114cc:	2201      	movs	r2, #1
 80114ce:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80114d2:	687b      	ldr	r3, [r7, #4]
 80114d4:	2201      	movs	r2, #1
 80114d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80114da:	687b      	ldr	r3, [r7, #4]
 80114dc:	2201      	movs	r2, #1
 80114de:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80114e2:	687b      	ldr	r3, [r7, #4]
 80114e4:	2201      	movs	r2, #1
 80114e6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80114ea:	687b      	ldr	r3, [r7, #4]
 80114ec:	2201      	movs	r2, #1
 80114ee:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80114f2:	687b      	ldr	r3, [r7, #4]
 80114f4:	2201      	movs	r2, #1
 80114f6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80114fa:	687b      	ldr	r3, [r7, #4]
 80114fc:	2201      	movs	r2, #1
 80114fe:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8011502:	687b      	ldr	r3, [r7, #4]
 8011504:	2201      	movs	r2, #1
 8011506:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801150a:	687b      	ldr	r3, [r7, #4]
 801150c:	2201      	movs	r2, #1
 801150e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8011512:	687b      	ldr	r3, [r7, #4]
 8011514:	2201      	movs	r2, #1
 8011516:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801151a:	2300      	movs	r3, #0
 801151c:	4618      	mov	r0, r3
 801151e:	3708      	adds	r7, #8
 8011520:	46bd      	mov	sp, r7
 8011522:	bd80      	pop	{r7, pc}

08011524 <HAL_TIM_PWM_Start>:
 8011524:	b580      	push	{r7, lr}
 8011526:	b084      	sub	sp, #16
 8011528:	af00      	add	r7, sp, #0
 801152a:	6078      	str	r0, [r7, #4]
 801152c:	6039      	str	r1, [r7, #0]
 801152e:	683b      	ldr	r3, [r7, #0]
 8011530:	2b00      	cmp	r3, #0
 8011532:	d109      	bne.n	8011548 <HAL_TIM_PWM_Start+0x24>
 8011534:	687b      	ldr	r3, [r7, #4]
 8011536:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 801153a:	b2db      	uxtb	r3, r3
 801153c:	2b01      	cmp	r3, #1
 801153e:	bf14      	ite	ne
 8011540:	2301      	movne	r3, #1
 8011542:	2300      	moveq	r3, #0
 8011544:	b2db      	uxtb	r3, r3
 8011546:	e022      	b.n	801158e <HAL_TIM_PWM_Start+0x6a>
 8011548:	683b      	ldr	r3, [r7, #0]
 801154a:	2b04      	cmp	r3, #4
 801154c:	d109      	bne.n	8011562 <HAL_TIM_PWM_Start+0x3e>
 801154e:	687b      	ldr	r3, [r7, #4]
 8011550:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8011554:	b2db      	uxtb	r3, r3
 8011556:	2b01      	cmp	r3, #1
 8011558:	bf14      	ite	ne
 801155a:	2301      	movne	r3, #1
 801155c:	2300      	moveq	r3, #0
 801155e:	b2db      	uxtb	r3, r3
 8011560:	e015      	b.n	801158e <HAL_TIM_PWM_Start+0x6a>
 8011562:	683b      	ldr	r3, [r7, #0]
 8011564:	2b08      	cmp	r3, #8
 8011566:	d109      	bne.n	801157c <HAL_TIM_PWM_Start+0x58>
 8011568:	687b      	ldr	r3, [r7, #4]
 801156a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 801156e:	b2db      	uxtb	r3, r3
 8011570:	2b01      	cmp	r3, #1
 8011572:	bf14      	ite	ne
 8011574:	2301      	movne	r3, #1
 8011576:	2300      	moveq	r3, #0
 8011578:	b2db      	uxtb	r3, r3
 801157a:	e008      	b.n	801158e <HAL_TIM_PWM_Start+0x6a>
 801157c:	687b      	ldr	r3, [r7, #4]
 801157e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8011582:	b2db      	uxtb	r3, r3
 8011584:	2b01      	cmp	r3, #1
 8011586:	bf14      	ite	ne
 8011588:	2301      	movne	r3, #1
 801158a:	2300      	moveq	r3, #0
 801158c:	b2db      	uxtb	r3, r3
 801158e:	2b00      	cmp	r3, #0
 8011590:	d001      	beq.n	8011596 <HAL_TIM_PWM_Start+0x72>
 8011592:	2301      	movs	r3, #1
 8011594:	e07c      	b.n	8011690 <HAL_TIM_PWM_Start+0x16c>
 8011596:	683b      	ldr	r3, [r7, #0]
 8011598:	2b00      	cmp	r3, #0
 801159a:	d104      	bne.n	80115a6 <HAL_TIM_PWM_Start+0x82>
 801159c:	687b      	ldr	r3, [r7, #4]
 801159e:	2202      	movs	r2, #2
 80115a0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80115a4:	e013      	b.n	80115ce <HAL_TIM_PWM_Start+0xaa>
 80115a6:	683b      	ldr	r3, [r7, #0]
 80115a8:	2b04      	cmp	r3, #4
 80115aa:	d104      	bne.n	80115b6 <HAL_TIM_PWM_Start+0x92>
 80115ac:	687b      	ldr	r3, [r7, #4]
 80115ae:	2202      	movs	r2, #2
 80115b0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80115b4:	e00b      	b.n	80115ce <HAL_TIM_PWM_Start+0xaa>
 80115b6:	683b      	ldr	r3, [r7, #0]
 80115b8:	2b08      	cmp	r3, #8
 80115ba:	d104      	bne.n	80115c6 <HAL_TIM_PWM_Start+0xa2>
 80115bc:	687b      	ldr	r3, [r7, #4]
 80115be:	2202      	movs	r2, #2
 80115c0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80115c4:	e003      	b.n	80115ce <HAL_TIM_PWM_Start+0xaa>
 80115c6:	687b      	ldr	r3, [r7, #4]
 80115c8:	2202      	movs	r2, #2
 80115ca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80115ce:	687b      	ldr	r3, [r7, #4]
 80115d0:	681b      	ldr	r3, [r3, #0]
 80115d2:	2201      	movs	r2, #1
 80115d4:	6839      	ldr	r1, [r7, #0]
 80115d6:	4618      	mov	r0, r3
 80115d8:	f000 fe6c 	bl	80122b4 <TIM_CCxChannelCmd>
 80115dc:	687b      	ldr	r3, [r7, #4]
 80115de:	681b      	ldr	r3, [r3, #0]
 80115e0:	4a2d      	ldr	r2, [pc, #180]	@ (8011698 <HAL_TIM_PWM_Start+0x174>)
 80115e2:	4293      	cmp	r3, r2
 80115e4:	d004      	beq.n	80115f0 <HAL_TIM_PWM_Start+0xcc>
 80115e6:	687b      	ldr	r3, [r7, #4]
 80115e8:	681b      	ldr	r3, [r3, #0]
 80115ea:	4a2c      	ldr	r2, [pc, #176]	@ (801169c <HAL_TIM_PWM_Start+0x178>)
 80115ec:	4293      	cmp	r3, r2
 80115ee:	d101      	bne.n	80115f4 <HAL_TIM_PWM_Start+0xd0>
 80115f0:	2301      	movs	r3, #1
 80115f2:	e000      	b.n	80115f6 <HAL_TIM_PWM_Start+0xd2>
 80115f4:	2300      	movs	r3, #0
 80115f6:	2b00      	cmp	r3, #0
 80115f8:	d007      	beq.n	801160a <HAL_TIM_PWM_Start+0xe6>
 80115fa:	687b      	ldr	r3, [r7, #4]
 80115fc:	681b      	ldr	r3, [r3, #0]
 80115fe:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8011600:	687b      	ldr	r3, [r7, #4]
 8011602:	681b      	ldr	r3, [r3, #0]
 8011604:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8011608:	645a      	str	r2, [r3, #68]	@ 0x44
 801160a:	687b      	ldr	r3, [r7, #4]
 801160c:	681b      	ldr	r3, [r3, #0]
 801160e:	4a22      	ldr	r2, [pc, #136]	@ (8011698 <HAL_TIM_PWM_Start+0x174>)
 8011610:	4293      	cmp	r3, r2
 8011612:	d022      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 8011614:	687b      	ldr	r3, [r7, #4]
 8011616:	681b      	ldr	r3, [r3, #0]
 8011618:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801161c:	d01d      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 801161e:	687b      	ldr	r3, [r7, #4]
 8011620:	681b      	ldr	r3, [r3, #0]
 8011622:	4a1f      	ldr	r2, [pc, #124]	@ (80116a0 <HAL_TIM_PWM_Start+0x17c>)
 8011624:	4293      	cmp	r3, r2
 8011626:	d018      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 8011628:	687b      	ldr	r3, [r7, #4]
 801162a:	681b      	ldr	r3, [r3, #0]
 801162c:	4a1d      	ldr	r2, [pc, #116]	@ (80116a4 <HAL_TIM_PWM_Start+0x180>)
 801162e:	4293      	cmp	r3, r2
 8011630:	d013      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 8011632:	687b      	ldr	r3, [r7, #4]
 8011634:	681b      	ldr	r3, [r3, #0]
 8011636:	4a1c      	ldr	r2, [pc, #112]	@ (80116a8 <HAL_TIM_PWM_Start+0x184>)
 8011638:	4293      	cmp	r3, r2
 801163a:	d00e      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 801163c:	687b      	ldr	r3, [r7, #4]
 801163e:	681b      	ldr	r3, [r3, #0]
 8011640:	4a16      	ldr	r2, [pc, #88]	@ (801169c <HAL_TIM_PWM_Start+0x178>)
 8011642:	4293      	cmp	r3, r2
 8011644:	d009      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 8011646:	687b      	ldr	r3, [r7, #4]
 8011648:	681b      	ldr	r3, [r3, #0]
 801164a:	4a18      	ldr	r2, [pc, #96]	@ (80116ac <HAL_TIM_PWM_Start+0x188>)
 801164c:	4293      	cmp	r3, r2
 801164e:	d004      	beq.n	801165a <HAL_TIM_PWM_Start+0x136>
 8011650:	687b      	ldr	r3, [r7, #4]
 8011652:	681b      	ldr	r3, [r3, #0]
 8011654:	4a16      	ldr	r2, [pc, #88]	@ (80116b0 <HAL_TIM_PWM_Start+0x18c>)
 8011656:	4293      	cmp	r3, r2
 8011658:	d111      	bne.n	801167e <HAL_TIM_PWM_Start+0x15a>
 801165a:	687b      	ldr	r3, [r7, #4]
 801165c:	681b      	ldr	r3, [r3, #0]
 801165e:	689b      	ldr	r3, [r3, #8]
 8011660:	f003 0307 	and.w	r3, r3, #7
 8011664:	60fb      	str	r3, [r7, #12]
 8011666:	68fb      	ldr	r3, [r7, #12]
 8011668:	2b06      	cmp	r3, #6
 801166a:	d010      	beq.n	801168e <HAL_TIM_PWM_Start+0x16a>
 801166c:	687b      	ldr	r3, [r7, #4]
 801166e:	681b      	ldr	r3, [r3, #0]
 8011670:	681a      	ldr	r2, [r3, #0]
 8011672:	687b      	ldr	r3, [r7, #4]
 8011674:	681b      	ldr	r3, [r3, #0]
 8011676:	f042 0201 	orr.w	r2, r2, #1
 801167a:	601a      	str	r2, [r3, #0]
 801167c:	e007      	b.n	801168e <HAL_TIM_PWM_Start+0x16a>
 801167e:	687b      	ldr	r3, [r7, #4]
 8011680:	681b      	ldr	r3, [r3, #0]
 8011682:	681a      	ldr	r2, [r3, #0]
 8011684:	687b      	ldr	r3, [r7, #4]
 8011686:	681b      	ldr	r3, [r3, #0]
 8011688:	f042 0201 	orr.w	r2, r2, #1
 801168c:	601a      	str	r2, [r3, #0]
 801168e:	2300      	movs	r3, #0
 8011690:	4618      	mov	r0, r3
 8011692:	3710      	adds	r7, #16
 8011694:	46bd      	mov	sp, r7
 8011696:	bd80      	pop	{r7, pc}
 8011698:	40010000 	.word	0x40010000
 801169c:	40010400 	.word	0x40010400
 80116a0:	40000400 	.word	0x40000400
 80116a4:	40000800 	.word	0x40000800
 80116a8:	40000c00 	.word	0x40000c00
 80116ac:	40014000 	.word	0x40014000
 80116b0:	40001800 	.word	0x40001800

080116b4 <HAL_TIM_IRQHandler>:
 80116b4:	b580      	push	{r7, lr}
 80116b6:	b082      	sub	sp, #8
 80116b8:	af00      	add	r7, sp, #0
 80116ba:	6078      	str	r0, [r7, #4]
 80116bc:	687b      	ldr	r3, [r7, #4]
 80116be:	681b      	ldr	r3, [r3, #0]
 80116c0:	691b      	ldr	r3, [r3, #16]
 80116c2:	f003 0302 	and.w	r3, r3, #2
 80116c6:	2b02      	cmp	r3, #2
 80116c8:	d122      	bne.n	8011710 <HAL_TIM_IRQHandler+0x5c>
 80116ca:	687b      	ldr	r3, [r7, #4]
 80116cc:	681b      	ldr	r3, [r3, #0]
 80116ce:	68db      	ldr	r3, [r3, #12]
 80116d0:	f003 0302 	and.w	r3, r3, #2
 80116d4:	2b02      	cmp	r3, #2
 80116d6:	d11b      	bne.n	8011710 <HAL_TIM_IRQHandler+0x5c>
 80116d8:	687b      	ldr	r3, [r7, #4]
 80116da:	681b      	ldr	r3, [r3, #0]
 80116dc:	f06f 0202 	mvn.w	r2, #2
 80116e0:	611a      	str	r2, [r3, #16]
 80116e2:	687b      	ldr	r3, [r7, #4]
 80116e4:	2201      	movs	r2, #1
 80116e6:	771a      	strb	r2, [r3, #28]
 80116e8:	687b      	ldr	r3, [r7, #4]
 80116ea:	681b      	ldr	r3, [r3, #0]
 80116ec:	699b      	ldr	r3, [r3, #24]
 80116ee:	f003 0303 	and.w	r3, r3, #3
 80116f2:	2b00      	cmp	r3, #0
 80116f4:	d003      	beq.n	80116fe <HAL_TIM_IRQHandler+0x4a>
 80116f6:	6878      	ldr	r0, [r7, #4]
 80116f8:	f000 fad3 	bl	8011ca2 <HAL_TIM_IC_CaptureCallback>
 80116fc:	e005      	b.n	801170a <HAL_TIM_IRQHandler+0x56>
 80116fe:	6878      	ldr	r0, [r7, #4]
 8011700:	f000 fac5 	bl	8011c8e <HAL_TIM_OC_DelayElapsedCallback>
 8011704:	6878      	ldr	r0, [r7, #4]
 8011706:	f000 fad6 	bl	8011cb6 <HAL_TIM_PWM_PulseFinishedCallback>
 801170a:	687b      	ldr	r3, [r7, #4]
 801170c:	2200      	movs	r2, #0
 801170e:	771a      	strb	r2, [r3, #28]
 8011710:	687b      	ldr	r3, [r7, #4]
 8011712:	681b      	ldr	r3, [r3, #0]
 8011714:	691b      	ldr	r3, [r3, #16]
 8011716:	f003 0304 	and.w	r3, r3, #4
 801171a:	2b04      	cmp	r3, #4
 801171c:	d122      	bne.n	8011764 <HAL_TIM_IRQHandler+0xb0>
 801171e:	687b      	ldr	r3, [r7, #4]
 8011720:	681b      	ldr	r3, [r3, #0]
 8011722:	68db      	ldr	r3, [r3, #12]
 8011724:	f003 0304 	and.w	r3, r3, #4
 8011728:	2b04      	cmp	r3, #4
 801172a:	d11b      	bne.n	8011764 <HAL_TIM_IRQHandler+0xb0>
 801172c:	687b      	ldr	r3, [r7, #4]
 801172e:	681b      	ldr	r3, [r3, #0]
 8011730:	f06f 0204 	mvn.w	r2, #4
 8011734:	611a      	str	r2, [r3, #16]
 8011736:	687b      	ldr	r3, [r7, #4]
 8011738:	2202      	movs	r2, #2
 801173a:	771a      	strb	r2, [r3, #28]
 801173c:	687b      	ldr	r3, [r7, #4]
 801173e:	681b      	ldr	r3, [r3, #0]
 8011740:	699b      	ldr	r3, [r3, #24]
 8011742:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8011746:	2b00      	cmp	r3, #0
 8011748:	d003      	beq.n	8011752 <HAL_TIM_IRQHandler+0x9e>
 801174a:	6878      	ldr	r0, [r7, #4]
 801174c:	f000 faa9 	bl	8011ca2 <HAL_TIM_IC_CaptureCallback>
 8011750:	e005      	b.n	801175e <HAL_TIM_IRQHandler+0xaa>
 8011752:	6878      	ldr	r0, [r7, #4]
 8011754:	f000 fa9b 	bl	8011c8e <HAL_TIM_OC_DelayElapsedCallback>
 8011758:	6878      	ldr	r0, [r7, #4]
 801175a:	f000 faac 	bl	8011cb6 <HAL_TIM_PWM_PulseFinishedCallback>
 801175e:	687b      	ldr	r3, [r7, #4]
 8011760:	2200      	movs	r2, #0
 8011762:	771a      	strb	r2, [r3, #28]
 8011764:	687b      	ldr	r3, [r7, #4]
 8011766:	681b      	ldr	r3, [r3, #0]
 8011768:	691b      	ldr	r3, [r3, #16]
 801176a:	f003 0308 	and.w	r3, r3, #8
 801176e:	2b08      	cmp	r3, #8
 8011770:	d122      	bne.n	80117b8 <HAL_TIM_IRQHandler+0x104>
 8011772:	687b      	ldr	r3, [r7, #4]
 8011774:	681b      	ldr	r3, [r3, #0]
 8011776:	68db      	ldr	r3, [r3, #12]
 8011778:	f003 0308 	and.w	r3, r3, #8
 801177c:	2b08      	cmp	r3, #8
 801177e:	d11b      	bne.n	80117b8 <HAL_TIM_IRQHandler+0x104>
 8011780:	687b      	ldr	r3, [r7, #4]
 8011782:	681b      	ldr	r3, [r3, #0]
 8011784:	f06f 0208 	mvn.w	r2, #8
 8011788:	611a      	str	r2, [r3, #16]
 801178a:	687b      	ldr	r3, [r7, #4]
 801178c:	2204      	movs	r2, #4
 801178e:	771a      	strb	r2, [r3, #28]
 8011790:	687b      	ldr	r3, [r7, #4]
 8011792:	681b      	ldr	r3, [r3, #0]
 8011794:	69db      	ldr	r3, [r3, #28]
 8011796:	f003 0303 	and.w	r3, r3, #3
 801179a:	2b00      	cmp	r3, #0
 801179c:	d003      	beq.n	80117a6 <HAL_TIM_IRQHandler+0xf2>
 801179e:	6878      	ldr	r0, [r7, #4]
 80117a0:	f000 fa7f 	bl	8011ca2 <HAL_TIM_IC_CaptureCallback>
 80117a4:	e005      	b.n	80117b2 <HAL_TIM_IRQHandler+0xfe>
 80117a6:	6878      	ldr	r0, [r7, #4]
 80117a8:	f000 fa71 	bl	8011c8e <HAL_TIM_OC_DelayElapsedCallback>
 80117ac:	6878      	ldr	r0, [r7, #4]
 80117ae:	f000 fa82 	bl	8011cb6 <HAL_TIM_PWM_PulseFinishedCallback>
 80117b2:	687b      	ldr	r3, [r7, #4]
 80117b4:	2200      	movs	r2, #0
 80117b6:	771a      	strb	r2, [r3, #28]
 80117b8:	687b      	ldr	r3, [r7, #4]
 80117ba:	681b      	ldr	r3, [r3, #0]
 80117bc:	691b      	ldr	r3, [r3, #16]
 80117be:	f003 0310 	and.w	r3, r3, #16
 80117c2:	2b10      	cmp	r3, #16
 80117c4:	d122      	bne.n	801180c <HAL_TIM_IRQHandler+0x158>
 80117c6:	687b      	ldr	r3, [r7, #4]
 80117c8:	681b      	ldr	r3, [r3, #0]
 80117ca:	68db      	ldr	r3, [r3, #12]
 80117cc:	f003 0310 	and.w	r3, r3, #16
 80117d0:	2b10      	cmp	r3, #16
 80117d2:	d11b      	bne.n	801180c <HAL_TIM_IRQHandler+0x158>
 80117d4:	687b      	ldr	r3, [r7, #4]
 80117d6:	681b      	ldr	r3, [r3, #0]
 80117d8:	f06f 0210 	mvn.w	r2, #16
 80117dc:	611a      	str	r2, [r3, #16]
 80117de:	687b      	ldr	r3, [r7, #4]
 80117e0:	2208      	movs	r2, #8
 80117e2:	771a      	strb	r2, [r3, #28]
 80117e4:	687b      	ldr	r3, [r7, #4]
 80117e6:	681b      	ldr	r3, [r3, #0]
 80117e8:	69db      	ldr	r3, [r3, #28]
 80117ea:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80117ee:	2b00      	cmp	r3, #0
 80117f0:	d003      	beq.n	80117fa <HAL_TIM_IRQHandler+0x146>
 80117f2:	6878      	ldr	r0, [r7, #4]
 80117f4:	f000 fa55 	bl	8011ca2 <HAL_TIM_IC_CaptureCallback>
 80117f8:	e005      	b.n	8011806 <HAL_TIM_IRQHandler+0x152>
 80117fa:	6878      	ldr	r0, [r7, #4]
 80117fc:	f000 fa47 	bl	8011c8e <HAL_TIM_OC_DelayElapsedCallback>
 8011800:	6878      	ldr	r0, [r7, #4]
 8011802:	f000 fa58 	bl	8011cb6 <HAL_TIM_PWM_PulseFinishedCallback>
 8011806:	687b      	ldr	r3, [r7, #4]
 8011808:	2200      	movs	r2, #0
 801180a:	771a      	strb	r2, [r3, #28]
 801180c:	687b      	ldr	r3, [r7, #4]
 801180e:	681b      	ldr	r3, [r3, #0]
 8011810:	691b      	ldr	r3, [r3, #16]
 8011812:	f003 0301 	and.w	r3, r3, #1
 8011816:	2b01      	cmp	r3, #1
 8011818:	d10e      	bne.n	8011838 <HAL_TIM_IRQHandler+0x184>
 801181a:	687b      	ldr	r3, [r7, #4]
 801181c:	681b      	ldr	r3, [r3, #0]
 801181e:	68db      	ldr	r3, [r3, #12]
 8011820:	f003 0301 	and.w	r3, r3, #1
 8011824:	2b01      	cmp	r3, #1
 8011826:	d107      	bne.n	8011838 <HAL_TIM_IRQHandler+0x184>
 8011828:	687b      	ldr	r3, [r7, #4]
 801182a:	681b      	ldr	r3, [r3, #0]
 801182c:	f06f 0201 	mvn.w	r2, #1
 8011830:	611a      	str	r2, [r3, #16]
 8011832:	6878      	ldr	r0, [r7, #4]
 8011834:	f7f1 ffce 	bl	80037d4 <HAL_TIM_PeriodElapsedCallback>
 8011838:	687b      	ldr	r3, [r7, #4]
 801183a:	681b      	ldr	r3, [r3, #0]
 801183c:	691b      	ldr	r3, [r3, #16]
 801183e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011842:	2b80      	cmp	r3, #128	@ 0x80
 8011844:	d10e      	bne.n	8011864 <HAL_TIM_IRQHandler+0x1b0>
 8011846:	687b      	ldr	r3, [r7, #4]
 8011848:	681b      	ldr	r3, [r3, #0]
 801184a:	68db      	ldr	r3, [r3, #12]
 801184c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011850:	2b80      	cmp	r3, #128	@ 0x80
 8011852:	d107      	bne.n	8011864 <HAL_TIM_IRQHandler+0x1b0>
 8011854:	687b      	ldr	r3, [r7, #4]
 8011856:	681b      	ldr	r3, [r3, #0]
 8011858:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 801185c:	611a      	str	r2, [r3, #16]
 801185e:	6878      	ldr	r0, [r7, #4]
 8011860:	f000 fdd4 	bl	801240c <HAL_TIMEx_BreakCallback>
 8011864:	687b      	ldr	r3, [r7, #4]
 8011866:	681b      	ldr	r3, [r3, #0]
 8011868:	691b      	ldr	r3, [r3, #16]
 801186a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801186e:	2b40      	cmp	r3, #64	@ 0x40
 8011870:	d10e      	bne.n	8011890 <HAL_TIM_IRQHandler+0x1dc>
 8011872:	687b      	ldr	r3, [r7, #4]
 8011874:	681b      	ldr	r3, [r3, #0]
 8011876:	68db      	ldr	r3, [r3, #12]
 8011878:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801187c:	2b40      	cmp	r3, #64	@ 0x40
 801187e:	d107      	bne.n	8011890 <HAL_TIM_IRQHandler+0x1dc>
 8011880:	687b      	ldr	r3, [r7, #4]
 8011882:	681b      	ldr	r3, [r3, #0]
 8011884:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8011888:	611a      	str	r2, [r3, #16]
 801188a:	6878      	ldr	r0, [r7, #4]
 801188c:	f000 fa1d 	bl	8011cca <HAL_TIM_TriggerCallback>
 8011890:	687b      	ldr	r3, [r7, #4]
 8011892:	681b      	ldr	r3, [r3, #0]
 8011894:	691b      	ldr	r3, [r3, #16]
 8011896:	f003 0320 	and.w	r3, r3, #32
 801189a:	2b20      	cmp	r3, #32
 801189c:	d10e      	bne.n	80118bc <HAL_TIM_IRQHandler+0x208>
 801189e:	687b      	ldr	r3, [r7, #4]
 80118a0:	681b      	ldr	r3, [r3, #0]
 80118a2:	68db      	ldr	r3, [r3, #12]
 80118a4:	f003 0320 	and.w	r3, r3, #32
 80118a8:	2b20      	cmp	r3, #32
 80118aa:	d107      	bne.n	80118bc <HAL_TIM_IRQHandler+0x208>
 80118ac:	687b      	ldr	r3, [r7, #4]
 80118ae:	681b      	ldr	r3, [r3, #0]
 80118b0:	f06f 0220 	mvn.w	r2, #32
 80118b4:	611a      	str	r2, [r3, #16]
 80118b6:	6878      	ldr	r0, [r7, #4]
 80118b8:	f000 fd9e 	bl	80123f8 <HAL_TIMEx_CommutCallback>
 80118bc:	bf00      	nop
 80118be:	3708      	adds	r7, #8
 80118c0:	46bd      	mov	sp, r7
 80118c2:	bd80      	pop	{r7, pc}

080118c4 <HAL_TIM_OC_ConfigChannel>:
 80118c4:	b580      	push	{r7, lr}
 80118c6:	b086      	sub	sp, #24
 80118c8:	af00      	add	r7, sp, #0
 80118ca:	60f8      	str	r0, [r7, #12]
 80118cc:	60b9      	str	r1, [r7, #8]
 80118ce:	607a      	str	r2, [r7, #4]
 80118d0:	2300      	movs	r3, #0
 80118d2:	75fb      	strb	r3, [r7, #23]
 80118d4:	68fb      	ldr	r3, [r7, #12]
 80118d6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80118da:	2b01      	cmp	r3, #1
 80118dc:	d101      	bne.n	80118e2 <HAL_TIM_OC_ConfigChannel+0x1e>
 80118de:	2302      	movs	r3, #2
 80118e0:	e048      	b.n	8011974 <HAL_TIM_OC_ConfigChannel+0xb0>
 80118e2:	68fb      	ldr	r3, [r7, #12]
 80118e4:	2201      	movs	r2, #1
 80118e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80118ea:	687b      	ldr	r3, [r7, #4]
 80118ec:	2b0c      	cmp	r3, #12
 80118ee:	d839      	bhi.n	8011964 <HAL_TIM_OC_ConfigChannel+0xa0>
 80118f0:	a201      	add	r2, pc, #4	@ (adr r2, 80118f8 <HAL_TIM_OC_ConfigChannel+0x34>)
 80118f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80118f6:	bf00      	nop
 80118f8:	0801192d 	.word	0x0801192d
 80118fc:	08011965 	.word	0x08011965
 8011900:	08011965 	.word	0x08011965
 8011904:	08011965 	.word	0x08011965
 8011908:	0801193b 	.word	0x0801193b
 801190c:	08011965 	.word	0x08011965
 8011910:	08011965 	.word	0x08011965
 8011914:	08011965 	.word	0x08011965
 8011918:	08011949 	.word	0x08011949
 801191c:	08011965 	.word	0x08011965
 8011920:	08011965 	.word	0x08011965
 8011924:	08011965 	.word	0x08011965
 8011928:	08011957 	.word	0x08011957
 801192c:	68fb      	ldr	r3, [r7, #12]
 801192e:	681b      	ldr	r3, [r3, #0]
 8011930:	68b9      	ldr	r1, [r7, #8]
 8011932:	4618      	mov	r0, r3
 8011934:	f000 fa74 	bl	8011e20 <TIM_OC1_SetConfig>
 8011938:	e017      	b.n	801196a <HAL_TIM_OC_ConfigChannel+0xa6>
 801193a:	68fb      	ldr	r3, [r7, #12]
 801193c:	681b      	ldr	r3, [r3, #0]
 801193e:	68b9      	ldr	r1, [r7, #8]
 8011940:	4618      	mov	r0, r3
 8011942:	f000 fadd 	bl	8011f00 <TIM_OC2_SetConfig>
 8011946:	e010      	b.n	801196a <HAL_TIM_OC_ConfigChannel+0xa6>
 8011948:	68fb      	ldr	r3, [r7, #12]
 801194a:	681b      	ldr	r3, [r3, #0]
 801194c:	68b9      	ldr	r1, [r7, #8]
 801194e:	4618      	mov	r0, r3
 8011950:	f000 fb4c 	bl	8011fec <TIM_OC3_SetConfig>
 8011954:	e009      	b.n	801196a <HAL_TIM_OC_ConfigChannel+0xa6>
 8011956:	68fb      	ldr	r3, [r7, #12]
 8011958:	681b      	ldr	r3, [r3, #0]
 801195a:	68b9      	ldr	r1, [r7, #8]
 801195c:	4618      	mov	r0, r3
 801195e:	f000 fbb9 	bl	80120d4 <TIM_OC4_SetConfig>
 8011962:	e002      	b.n	801196a <HAL_TIM_OC_ConfigChannel+0xa6>
 8011964:	2301      	movs	r3, #1
 8011966:	75fb      	strb	r3, [r7, #23]
 8011968:	bf00      	nop
 801196a:	68fb      	ldr	r3, [r7, #12]
 801196c:	2200      	movs	r2, #0
 801196e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011972:	7dfb      	ldrb	r3, [r7, #23]
 8011974:	4618      	mov	r0, r3
 8011976:	3718      	adds	r7, #24
 8011978:	46bd      	mov	sp, r7
 801197a:	bd80      	pop	{r7, pc}

0801197c <HAL_TIM_PWM_ConfigChannel>:
 801197c:	b580      	push	{r7, lr}
 801197e:	b086      	sub	sp, #24
 8011980:	af00      	add	r7, sp, #0
 8011982:	60f8      	str	r0, [r7, #12]
 8011984:	60b9      	str	r1, [r7, #8]
 8011986:	607a      	str	r2, [r7, #4]
 8011988:	2300      	movs	r3, #0
 801198a:	75fb      	strb	r3, [r7, #23]
 801198c:	68fb      	ldr	r3, [r7, #12]
 801198e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011992:	2b01      	cmp	r3, #1
 8011994:	d101      	bne.n	801199a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8011996:	2302      	movs	r3, #2
 8011998:	e0ae      	b.n	8011af8 <HAL_TIM_PWM_ConfigChannel+0x17c>
 801199a:	68fb      	ldr	r3, [r7, #12]
 801199c:	2201      	movs	r2, #1
 801199e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80119a2:	687b      	ldr	r3, [r7, #4]
 80119a4:	2b0c      	cmp	r3, #12
 80119a6:	f200 809f 	bhi.w	8011ae8 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80119aa:	a201      	add	r2, pc, #4	@ (adr r2, 80119b0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80119ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80119b0:	080119e5 	.word	0x080119e5
 80119b4:	08011ae9 	.word	0x08011ae9
 80119b8:	08011ae9 	.word	0x08011ae9
 80119bc:	08011ae9 	.word	0x08011ae9
 80119c0:	08011a25 	.word	0x08011a25
 80119c4:	08011ae9 	.word	0x08011ae9
 80119c8:	08011ae9 	.word	0x08011ae9
 80119cc:	08011ae9 	.word	0x08011ae9
 80119d0:	08011a67 	.word	0x08011a67
 80119d4:	08011ae9 	.word	0x08011ae9
 80119d8:	08011ae9 	.word	0x08011ae9
 80119dc:	08011ae9 	.word	0x08011ae9
 80119e0:	08011aa7 	.word	0x08011aa7
 80119e4:	68fb      	ldr	r3, [r7, #12]
 80119e6:	681b      	ldr	r3, [r3, #0]
 80119e8:	68b9      	ldr	r1, [r7, #8]
 80119ea:	4618      	mov	r0, r3
 80119ec:	f000 fa18 	bl	8011e20 <TIM_OC1_SetConfig>
 80119f0:	68fb      	ldr	r3, [r7, #12]
 80119f2:	681b      	ldr	r3, [r3, #0]
 80119f4:	699a      	ldr	r2, [r3, #24]
 80119f6:	68fb      	ldr	r3, [r7, #12]
 80119f8:	681b      	ldr	r3, [r3, #0]
 80119fa:	f042 0208 	orr.w	r2, r2, #8
 80119fe:	619a      	str	r2, [r3, #24]
 8011a00:	68fb      	ldr	r3, [r7, #12]
 8011a02:	681b      	ldr	r3, [r3, #0]
 8011a04:	699a      	ldr	r2, [r3, #24]
 8011a06:	68fb      	ldr	r3, [r7, #12]
 8011a08:	681b      	ldr	r3, [r3, #0]
 8011a0a:	f022 0204 	bic.w	r2, r2, #4
 8011a0e:	619a      	str	r2, [r3, #24]
 8011a10:	68fb      	ldr	r3, [r7, #12]
 8011a12:	681b      	ldr	r3, [r3, #0]
 8011a14:	6999      	ldr	r1, [r3, #24]
 8011a16:	68bb      	ldr	r3, [r7, #8]
 8011a18:	691a      	ldr	r2, [r3, #16]
 8011a1a:	68fb      	ldr	r3, [r7, #12]
 8011a1c:	681b      	ldr	r3, [r3, #0]
 8011a1e:	430a      	orrs	r2, r1
 8011a20:	619a      	str	r2, [r3, #24]
 8011a22:	e064      	b.n	8011aee <HAL_TIM_PWM_ConfigChannel+0x172>
 8011a24:	68fb      	ldr	r3, [r7, #12]
 8011a26:	681b      	ldr	r3, [r3, #0]
 8011a28:	68b9      	ldr	r1, [r7, #8]
 8011a2a:	4618      	mov	r0, r3
 8011a2c:	f000 fa68 	bl	8011f00 <TIM_OC2_SetConfig>
 8011a30:	68fb      	ldr	r3, [r7, #12]
 8011a32:	681b      	ldr	r3, [r3, #0]
 8011a34:	699a      	ldr	r2, [r3, #24]
 8011a36:	68fb      	ldr	r3, [r7, #12]
 8011a38:	681b      	ldr	r3, [r3, #0]
 8011a3a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8011a3e:	619a      	str	r2, [r3, #24]
 8011a40:	68fb      	ldr	r3, [r7, #12]
 8011a42:	681b      	ldr	r3, [r3, #0]
 8011a44:	699a      	ldr	r2, [r3, #24]
 8011a46:	68fb      	ldr	r3, [r7, #12]
 8011a48:	681b      	ldr	r3, [r3, #0]
 8011a4a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011a4e:	619a      	str	r2, [r3, #24]
 8011a50:	68fb      	ldr	r3, [r7, #12]
 8011a52:	681b      	ldr	r3, [r3, #0]
 8011a54:	6999      	ldr	r1, [r3, #24]
 8011a56:	68bb      	ldr	r3, [r7, #8]
 8011a58:	691b      	ldr	r3, [r3, #16]
 8011a5a:	021a      	lsls	r2, r3, #8
 8011a5c:	68fb      	ldr	r3, [r7, #12]
 8011a5e:	681b      	ldr	r3, [r3, #0]
 8011a60:	430a      	orrs	r2, r1
 8011a62:	619a      	str	r2, [r3, #24]
 8011a64:	e043      	b.n	8011aee <HAL_TIM_PWM_ConfigChannel+0x172>
 8011a66:	68fb      	ldr	r3, [r7, #12]
 8011a68:	681b      	ldr	r3, [r3, #0]
 8011a6a:	68b9      	ldr	r1, [r7, #8]
 8011a6c:	4618      	mov	r0, r3
 8011a6e:	f000 fabd 	bl	8011fec <TIM_OC3_SetConfig>
 8011a72:	68fb      	ldr	r3, [r7, #12]
 8011a74:	681b      	ldr	r3, [r3, #0]
 8011a76:	69da      	ldr	r2, [r3, #28]
 8011a78:	68fb      	ldr	r3, [r7, #12]
 8011a7a:	681b      	ldr	r3, [r3, #0]
 8011a7c:	f042 0208 	orr.w	r2, r2, #8
 8011a80:	61da      	str	r2, [r3, #28]
 8011a82:	68fb      	ldr	r3, [r7, #12]
 8011a84:	681b      	ldr	r3, [r3, #0]
 8011a86:	69da      	ldr	r2, [r3, #28]
 8011a88:	68fb      	ldr	r3, [r7, #12]
 8011a8a:	681b      	ldr	r3, [r3, #0]
 8011a8c:	f022 0204 	bic.w	r2, r2, #4
 8011a90:	61da      	str	r2, [r3, #28]
 8011a92:	68fb      	ldr	r3, [r7, #12]
 8011a94:	681b      	ldr	r3, [r3, #0]
 8011a96:	69d9      	ldr	r1, [r3, #28]
 8011a98:	68bb      	ldr	r3, [r7, #8]
 8011a9a:	691a      	ldr	r2, [r3, #16]
 8011a9c:	68fb      	ldr	r3, [r7, #12]
 8011a9e:	681b      	ldr	r3, [r3, #0]
 8011aa0:	430a      	orrs	r2, r1
 8011aa2:	61da      	str	r2, [r3, #28]
 8011aa4:	e023      	b.n	8011aee <HAL_TIM_PWM_ConfigChannel+0x172>
 8011aa6:	68fb      	ldr	r3, [r7, #12]
 8011aa8:	681b      	ldr	r3, [r3, #0]
 8011aaa:	68b9      	ldr	r1, [r7, #8]
 8011aac:	4618      	mov	r0, r3
 8011aae:	f000 fb11 	bl	80120d4 <TIM_OC4_SetConfig>
 8011ab2:	68fb      	ldr	r3, [r7, #12]
 8011ab4:	681b      	ldr	r3, [r3, #0]
 8011ab6:	69da      	ldr	r2, [r3, #28]
 8011ab8:	68fb      	ldr	r3, [r7, #12]
 8011aba:	681b      	ldr	r3, [r3, #0]
 8011abc:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8011ac0:	61da      	str	r2, [r3, #28]
 8011ac2:	68fb      	ldr	r3, [r7, #12]
 8011ac4:	681b      	ldr	r3, [r3, #0]
 8011ac6:	69da      	ldr	r2, [r3, #28]
 8011ac8:	68fb      	ldr	r3, [r7, #12]
 8011aca:	681b      	ldr	r3, [r3, #0]
 8011acc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011ad0:	61da      	str	r2, [r3, #28]
 8011ad2:	68fb      	ldr	r3, [r7, #12]
 8011ad4:	681b      	ldr	r3, [r3, #0]
 8011ad6:	69d9      	ldr	r1, [r3, #28]
 8011ad8:	68bb      	ldr	r3, [r7, #8]
 8011ada:	691b      	ldr	r3, [r3, #16]
 8011adc:	021a      	lsls	r2, r3, #8
 8011ade:	68fb      	ldr	r3, [r7, #12]
 8011ae0:	681b      	ldr	r3, [r3, #0]
 8011ae2:	430a      	orrs	r2, r1
 8011ae4:	61da      	str	r2, [r3, #28]
 8011ae6:	e002      	b.n	8011aee <HAL_TIM_PWM_ConfigChannel+0x172>
 8011ae8:	2301      	movs	r3, #1
 8011aea:	75fb      	strb	r3, [r7, #23]
 8011aec:	bf00      	nop
 8011aee:	68fb      	ldr	r3, [r7, #12]
 8011af0:	2200      	movs	r2, #0
 8011af2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011af6:	7dfb      	ldrb	r3, [r7, #23]
 8011af8:	4618      	mov	r0, r3
 8011afa:	3718      	adds	r7, #24
 8011afc:	46bd      	mov	sp, r7
 8011afe:	bd80      	pop	{r7, pc}

08011b00 <HAL_TIM_ConfigClockSource>:
 8011b00:	b580      	push	{r7, lr}
 8011b02:	b084      	sub	sp, #16
 8011b04:	af00      	add	r7, sp, #0
 8011b06:	6078      	str	r0, [r7, #4]
 8011b08:	6039      	str	r1, [r7, #0]
 8011b0a:	2300      	movs	r3, #0
 8011b0c:	73fb      	strb	r3, [r7, #15]
 8011b0e:	687b      	ldr	r3, [r7, #4]
 8011b10:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011b14:	2b01      	cmp	r3, #1
 8011b16:	d101      	bne.n	8011b1c <HAL_TIM_ConfigClockSource+0x1c>
 8011b18:	2302      	movs	r3, #2
 8011b1a:	e0b4      	b.n	8011c86 <HAL_TIM_ConfigClockSource+0x186>
 8011b1c:	687b      	ldr	r3, [r7, #4]
 8011b1e:	2201      	movs	r2, #1
 8011b20:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011b24:	687b      	ldr	r3, [r7, #4]
 8011b26:	2202      	movs	r2, #2
 8011b28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011b2c:	687b      	ldr	r3, [r7, #4]
 8011b2e:	681b      	ldr	r3, [r3, #0]
 8011b30:	689b      	ldr	r3, [r3, #8]
 8011b32:	60bb      	str	r3, [r7, #8]
 8011b34:	68bb      	ldr	r3, [r7, #8]
 8011b36:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8011b3a:	60bb      	str	r3, [r7, #8]
 8011b3c:	68bb      	ldr	r3, [r7, #8]
 8011b3e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8011b42:	60bb      	str	r3, [r7, #8]
 8011b44:	687b      	ldr	r3, [r7, #4]
 8011b46:	681b      	ldr	r3, [r3, #0]
 8011b48:	68ba      	ldr	r2, [r7, #8]
 8011b4a:	609a      	str	r2, [r3, #8]
 8011b4c:	683b      	ldr	r3, [r7, #0]
 8011b4e:	681b      	ldr	r3, [r3, #0]
 8011b50:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011b54:	d03e      	beq.n	8011bd4 <HAL_TIM_ConfigClockSource+0xd4>
 8011b56:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011b5a:	f200 8087 	bhi.w	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b5e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011b62:	f000 8086 	beq.w	8011c72 <HAL_TIM_ConfigClockSource+0x172>
 8011b66:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011b6a:	d87f      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b6c:	2b70      	cmp	r3, #112	@ 0x70
 8011b6e:	d01a      	beq.n	8011ba6 <HAL_TIM_ConfigClockSource+0xa6>
 8011b70:	2b70      	cmp	r3, #112	@ 0x70
 8011b72:	d87b      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b74:	2b60      	cmp	r3, #96	@ 0x60
 8011b76:	d050      	beq.n	8011c1a <HAL_TIM_ConfigClockSource+0x11a>
 8011b78:	2b60      	cmp	r3, #96	@ 0x60
 8011b7a:	d877      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b7c:	2b50      	cmp	r3, #80	@ 0x50
 8011b7e:	d03c      	beq.n	8011bfa <HAL_TIM_ConfigClockSource+0xfa>
 8011b80:	2b50      	cmp	r3, #80	@ 0x50
 8011b82:	d873      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b84:	2b40      	cmp	r3, #64	@ 0x40
 8011b86:	d058      	beq.n	8011c3a <HAL_TIM_ConfigClockSource+0x13a>
 8011b88:	2b40      	cmp	r3, #64	@ 0x40
 8011b8a:	d86f      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b8c:	2b30      	cmp	r3, #48	@ 0x30
 8011b8e:	d064      	beq.n	8011c5a <HAL_TIM_ConfigClockSource+0x15a>
 8011b90:	2b30      	cmp	r3, #48	@ 0x30
 8011b92:	d86b      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b94:	2b20      	cmp	r3, #32
 8011b96:	d060      	beq.n	8011c5a <HAL_TIM_ConfigClockSource+0x15a>
 8011b98:	2b20      	cmp	r3, #32
 8011b9a:	d867      	bhi.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011b9c:	2b00      	cmp	r3, #0
 8011b9e:	d05c      	beq.n	8011c5a <HAL_TIM_ConfigClockSource+0x15a>
 8011ba0:	2b10      	cmp	r3, #16
 8011ba2:	d05a      	beq.n	8011c5a <HAL_TIM_ConfigClockSource+0x15a>
 8011ba4:	e062      	b.n	8011c6c <HAL_TIM_ConfigClockSource+0x16c>
 8011ba6:	687b      	ldr	r3, [r7, #4]
 8011ba8:	6818      	ldr	r0, [r3, #0]
 8011baa:	683b      	ldr	r3, [r7, #0]
 8011bac:	6899      	ldr	r1, [r3, #8]
 8011bae:	683b      	ldr	r3, [r7, #0]
 8011bb0:	685a      	ldr	r2, [r3, #4]
 8011bb2:	683b      	ldr	r3, [r7, #0]
 8011bb4:	68db      	ldr	r3, [r3, #12]
 8011bb6:	f000 fb5d 	bl	8012274 <TIM_ETR_SetConfig>
 8011bba:	687b      	ldr	r3, [r7, #4]
 8011bbc:	681b      	ldr	r3, [r3, #0]
 8011bbe:	689b      	ldr	r3, [r3, #8]
 8011bc0:	60bb      	str	r3, [r7, #8]
 8011bc2:	68bb      	ldr	r3, [r7, #8]
 8011bc4:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8011bc8:	60bb      	str	r3, [r7, #8]
 8011bca:	687b      	ldr	r3, [r7, #4]
 8011bcc:	681b      	ldr	r3, [r3, #0]
 8011bce:	68ba      	ldr	r2, [r7, #8]
 8011bd0:	609a      	str	r2, [r3, #8]
 8011bd2:	e04f      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011bd4:	687b      	ldr	r3, [r7, #4]
 8011bd6:	6818      	ldr	r0, [r3, #0]
 8011bd8:	683b      	ldr	r3, [r7, #0]
 8011bda:	6899      	ldr	r1, [r3, #8]
 8011bdc:	683b      	ldr	r3, [r7, #0]
 8011bde:	685a      	ldr	r2, [r3, #4]
 8011be0:	683b      	ldr	r3, [r7, #0]
 8011be2:	68db      	ldr	r3, [r3, #12]
 8011be4:	f000 fb46 	bl	8012274 <TIM_ETR_SetConfig>
 8011be8:	687b      	ldr	r3, [r7, #4]
 8011bea:	681b      	ldr	r3, [r3, #0]
 8011bec:	689a      	ldr	r2, [r3, #8]
 8011bee:	687b      	ldr	r3, [r7, #4]
 8011bf0:	681b      	ldr	r3, [r3, #0]
 8011bf2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8011bf6:	609a      	str	r2, [r3, #8]
 8011bf8:	e03c      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011bfa:	687b      	ldr	r3, [r7, #4]
 8011bfc:	6818      	ldr	r0, [r3, #0]
 8011bfe:	683b      	ldr	r3, [r7, #0]
 8011c00:	6859      	ldr	r1, [r3, #4]
 8011c02:	683b      	ldr	r3, [r7, #0]
 8011c04:	68db      	ldr	r3, [r3, #12]
 8011c06:	461a      	mov	r2, r3
 8011c08:	f000 faba 	bl	8012180 <TIM_TI1_ConfigInputStage>
 8011c0c:	687b      	ldr	r3, [r7, #4]
 8011c0e:	681b      	ldr	r3, [r3, #0]
 8011c10:	2150      	movs	r1, #80	@ 0x50
 8011c12:	4618      	mov	r0, r3
 8011c14:	f000 fb13 	bl	801223e <TIM_ITRx_SetConfig>
 8011c18:	e02c      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011c1a:	687b      	ldr	r3, [r7, #4]
 8011c1c:	6818      	ldr	r0, [r3, #0]
 8011c1e:	683b      	ldr	r3, [r7, #0]
 8011c20:	6859      	ldr	r1, [r3, #4]
 8011c22:	683b      	ldr	r3, [r7, #0]
 8011c24:	68db      	ldr	r3, [r3, #12]
 8011c26:	461a      	mov	r2, r3
 8011c28:	f000 fad9 	bl	80121de <TIM_TI2_ConfigInputStage>
 8011c2c:	687b      	ldr	r3, [r7, #4]
 8011c2e:	681b      	ldr	r3, [r3, #0]
 8011c30:	2160      	movs	r1, #96	@ 0x60
 8011c32:	4618      	mov	r0, r3
 8011c34:	f000 fb03 	bl	801223e <TIM_ITRx_SetConfig>
 8011c38:	e01c      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011c3a:	687b      	ldr	r3, [r7, #4]
 8011c3c:	6818      	ldr	r0, [r3, #0]
 8011c3e:	683b      	ldr	r3, [r7, #0]
 8011c40:	6859      	ldr	r1, [r3, #4]
 8011c42:	683b      	ldr	r3, [r7, #0]
 8011c44:	68db      	ldr	r3, [r3, #12]
 8011c46:	461a      	mov	r2, r3
 8011c48:	f000 fa9a 	bl	8012180 <TIM_TI1_ConfigInputStage>
 8011c4c:	687b      	ldr	r3, [r7, #4]
 8011c4e:	681b      	ldr	r3, [r3, #0]
 8011c50:	2140      	movs	r1, #64	@ 0x40
 8011c52:	4618      	mov	r0, r3
 8011c54:	f000 faf3 	bl	801223e <TIM_ITRx_SetConfig>
 8011c58:	e00c      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011c5a:	687b      	ldr	r3, [r7, #4]
 8011c5c:	681a      	ldr	r2, [r3, #0]
 8011c5e:	683b      	ldr	r3, [r7, #0]
 8011c60:	681b      	ldr	r3, [r3, #0]
 8011c62:	4619      	mov	r1, r3
 8011c64:	4610      	mov	r0, r2
 8011c66:	f000 faea 	bl	801223e <TIM_ITRx_SetConfig>
 8011c6a:	e003      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011c6c:	2301      	movs	r3, #1
 8011c6e:	73fb      	strb	r3, [r7, #15]
 8011c70:	e000      	b.n	8011c74 <HAL_TIM_ConfigClockSource+0x174>
 8011c72:	bf00      	nop
 8011c74:	687b      	ldr	r3, [r7, #4]
 8011c76:	2201      	movs	r2, #1
 8011c78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011c7c:	687b      	ldr	r3, [r7, #4]
 8011c7e:	2200      	movs	r2, #0
 8011c80:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011c84:	7bfb      	ldrb	r3, [r7, #15]
 8011c86:	4618      	mov	r0, r3
 8011c88:	3710      	adds	r7, #16
 8011c8a:	46bd      	mov	sp, r7
 8011c8c:	bd80      	pop	{r7, pc}

08011c8e <HAL_TIM_OC_DelayElapsedCallback>:
 8011c8e:	b480      	push	{r7}
 8011c90:	b083      	sub	sp, #12
 8011c92:	af00      	add	r7, sp, #0
 8011c94:	6078      	str	r0, [r7, #4]
 8011c96:	bf00      	nop
 8011c98:	370c      	adds	r7, #12
 8011c9a:	46bd      	mov	sp, r7
 8011c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ca0:	4770      	bx	lr

08011ca2 <HAL_TIM_IC_CaptureCallback>:
 8011ca2:	b480      	push	{r7}
 8011ca4:	b083      	sub	sp, #12
 8011ca6:	af00      	add	r7, sp, #0
 8011ca8:	6078      	str	r0, [r7, #4]
 8011caa:	bf00      	nop
 8011cac:	370c      	adds	r7, #12
 8011cae:	46bd      	mov	sp, r7
 8011cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cb4:	4770      	bx	lr

08011cb6 <HAL_TIM_PWM_PulseFinishedCallback>:
 8011cb6:	b480      	push	{r7}
 8011cb8:	b083      	sub	sp, #12
 8011cba:	af00      	add	r7, sp, #0
 8011cbc:	6078      	str	r0, [r7, #4]
 8011cbe:	bf00      	nop
 8011cc0:	370c      	adds	r7, #12
 8011cc2:	46bd      	mov	sp, r7
 8011cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cc8:	4770      	bx	lr

08011cca <HAL_TIM_TriggerCallback>:
 8011cca:	b480      	push	{r7}
 8011ccc:	b083      	sub	sp, #12
 8011cce:	af00      	add	r7, sp, #0
 8011cd0:	6078      	str	r0, [r7, #4]
 8011cd2:	bf00      	nop
 8011cd4:	370c      	adds	r7, #12
 8011cd6:	46bd      	mov	sp, r7
 8011cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cdc:	4770      	bx	lr
	...

08011ce0 <TIM_Base_SetConfig>:
 8011ce0:	b480      	push	{r7}
 8011ce2:	b085      	sub	sp, #20
 8011ce4:	af00      	add	r7, sp, #0
 8011ce6:	6078      	str	r0, [r7, #4]
 8011ce8:	6039      	str	r1, [r7, #0]
 8011cea:	687b      	ldr	r3, [r7, #4]
 8011cec:	681b      	ldr	r3, [r3, #0]
 8011cee:	60fb      	str	r3, [r7, #12]
 8011cf0:	687b      	ldr	r3, [r7, #4]
 8011cf2:	4a40      	ldr	r2, [pc, #256]	@ (8011df4 <TIM_Base_SetConfig+0x114>)
 8011cf4:	4293      	cmp	r3, r2
 8011cf6:	d013      	beq.n	8011d20 <TIM_Base_SetConfig+0x40>
 8011cf8:	687b      	ldr	r3, [r7, #4]
 8011cfa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011cfe:	d00f      	beq.n	8011d20 <TIM_Base_SetConfig+0x40>
 8011d00:	687b      	ldr	r3, [r7, #4]
 8011d02:	4a3d      	ldr	r2, [pc, #244]	@ (8011df8 <TIM_Base_SetConfig+0x118>)
 8011d04:	4293      	cmp	r3, r2
 8011d06:	d00b      	beq.n	8011d20 <TIM_Base_SetConfig+0x40>
 8011d08:	687b      	ldr	r3, [r7, #4]
 8011d0a:	4a3c      	ldr	r2, [pc, #240]	@ (8011dfc <TIM_Base_SetConfig+0x11c>)
 8011d0c:	4293      	cmp	r3, r2
 8011d0e:	d007      	beq.n	8011d20 <TIM_Base_SetConfig+0x40>
 8011d10:	687b      	ldr	r3, [r7, #4]
 8011d12:	4a3b      	ldr	r2, [pc, #236]	@ (8011e00 <TIM_Base_SetConfig+0x120>)
 8011d14:	4293      	cmp	r3, r2
 8011d16:	d003      	beq.n	8011d20 <TIM_Base_SetConfig+0x40>
 8011d18:	687b      	ldr	r3, [r7, #4]
 8011d1a:	4a3a      	ldr	r2, [pc, #232]	@ (8011e04 <TIM_Base_SetConfig+0x124>)
 8011d1c:	4293      	cmp	r3, r2
 8011d1e:	d108      	bne.n	8011d32 <TIM_Base_SetConfig+0x52>
 8011d20:	68fb      	ldr	r3, [r7, #12]
 8011d22:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8011d26:	60fb      	str	r3, [r7, #12]
 8011d28:	683b      	ldr	r3, [r7, #0]
 8011d2a:	685b      	ldr	r3, [r3, #4]
 8011d2c:	68fa      	ldr	r2, [r7, #12]
 8011d2e:	4313      	orrs	r3, r2
 8011d30:	60fb      	str	r3, [r7, #12]
 8011d32:	687b      	ldr	r3, [r7, #4]
 8011d34:	4a2f      	ldr	r2, [pc, #188]	@ (8011df4 <TIM_Base_SetConfig+0x114>)
 8011d36:	4293      	cmp	r3, r2
 8011d38:	d02b      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d3a:	687b      	ldr	r3, [r7, #4]
 8011d3c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011d40:	d027      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d42:	687b      	ldr	r3, [r7, #4]
 8011d44:	4a2c      	ldr	r2, [pc, #176]	@ (8011df8 <TIM_Base_SetConfig+0x118>)
 8011d46:	4293      	cmp	r3, r2
 8011d48:	d023      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d4a:	687b      	ldr	r3, [r7, #4]
 8011d4c:	4a2b      	ldr	r2, [pc, #172]	@ (8011dfc <TIM_Base_SetConfig+0x11c>)
 8011d4e:	4293      	cmp	r3, r2
 8011d50:	d01f      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d52:	687b      	ldr	r3, [r7, #4]
 8011d54:	4a2a      	ldr	r2, [pc, #168]	@ (8011e00 <TIM_Base_SetConfig+0x120>)
 8011d56:	4293      	cmp	r3, r2
 8011d58:	d01b      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d5a:	687b      	ldr	r3, [r7, #4]
 8011d5c:	4a29      	ldr	r2, [pc, #164]	@ (8011e04 <TIM_Base_SetConfig+0x124>)
 8011d5e:	4293      	cmp	r3, r2
 8011d60:	d017      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d62:	687b      	ldr	r3, [r7, #4]
 8011d64:	4a28      	ldr	r2, [pc, #160]	@ (8011e08 <TIM_Base_SetConfig+0x128>)
 8011d66:	4293      	cmp	r3, r2
 8011d68:	d013      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d6a:	687b      	ldr	r3, [r7, #4]
 8011d6c:	4a27      	ldr	r2, [pc, #156]	@ (8011e0c <TIM_Base_SetConfig+0x12c>)
 8011d6e:	4293      	cmp	r3, r2
 8011d70:	d00f      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d72:	687b      	ldr	r3, [r7, #4]
 8011d74:	4a26      	ldr	r2, [pc, #152]	@ (8011e10 <TIM_Base_SetConfig+0x130>)
 8011d76:	4293      	cmp	r3, r2
 8011d78:	d00b      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d7a:	687b      	ldr	r3, [r7, #4]
 8011d7c:	4a25      	ldr	r2, [pc, #148]	@ (8011e14 <TIM_Base_SetConfig+0x134>)
 8011d7e:	4293      	cmp	r3, r2
 8011d80:	d007      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d82:	687b      	ldr	r3, [r7, #4]
 8011d84:	4a24      	ldr	r2, [pc, #144]	@ (8011e18 <TIM_Base_SetConfig+0x138>)
 8011d86:	4293      	cmp	r3, r2
 8011d88:	d003      	beq.n	8011d92 <TIM_Base_SetConfig+0xb2>
 8011d8a:	687b      	ldr	r3, [r7, #4]
 8011d8c:	4a23      	ldr	r2, [pc, #140]	@ (8011e1c <TIM_Base_SetConfig+0x13c>)
 8011d8e:	4293      	cmp	r3, r2
 8011d90:	d108      	bne.n	8011da4 <TIM_Base_SetConfig+0xc4>
 8011d92:	68fb      	ldr	r3, [r7, #12]
 8011d94:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011d98:	60fb      	str	r3, [r7, #12]
 8011d9a:	683b      	ldr	r3, [r7, #0]
 8011d9c:	68db      	ldr	r3, [r3, #12]
 8011d9e:	68fa      	ldr	r2, [r7, #12]
 8011da0:	4313      	orrs	r3, r2
 8011da2:	60fb      	str	r3, [r7, #12]
 8011da4:	68fb      	ldr	r3, [r7, #12]
 8011da6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8011daa:	683b      	ldr	r3, [r7, #0]
 8011dac:	695b      	ldr	r3, [r3, #20]
 8011dae:	4313      	orrs	r3, r2
 8011db0:	60fb      	str	r3, [r7, #12]
 8011db2:	687b      	ldr	r3, [r7, #4]
 8011db4:	68fa      	ldr	r2, [r7, #12]
 8011db6:	601a      	str	r2, [r3, #0]
 8011db8:	683b      	ldr	r3, [r7, #0]
 8011dba:	689a      	ldr	r2, [r3, #8]
 8011dbc:	687b      	ldr	r3, [r7, #4]
 8011dbe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8011dc0:	683b      	ldr	r3, [r7, #0]
 8011dc2:	681a      	ldr	r2, [r3, #0]
 8011dc4:	687b      	ldr	r3, [r7, #4]
 8011dc6:	629a      	str	r2, [r3, #40]	@ 0x28
 8011dc8:	687b      	ldr	r3, [r7, #4]
 8011dca:	4a0a      	ldr	r2, [pc, #40]	@ (8011df4 <TIM_Base_SetConfig+0x114>)
 8011dcc:	4293      	cmp	r3, r2
 8011dce:	d003      	beq.n	8011dd8 <TIM_Base_SetConfig+0xf8>
 8011dd0:	687b      	ldr	r3, [r7, #4]
 8011dd2:	4a0c      	ldr	r2, [pc, #48]	@ (8011e04 <TIM_Base_SetConfig+0x124>)
 8011dd4:	4293      	cmp	r3, r2
 8011dd6:	d103      	bne.n	8011de0 <TIM_Base_SetConfig+0x100>
 8011dd8:	683b      	ldr	r3, [r7, #0]
 8011dda:	691a      	ldr	r2, [r3, #16]
 8011ddc:	687b      	ldr	r3, [r7, #4]
 8011dde:	631a      	str	r2, [r3, #48]	@ 0x30
 8011de0:	687b      	ldr	r3, [r7, #4]
 8011de2:	2201      	movs	r2, #1
 8011de4:	615a      	str	r2, [r3, #20]
 8011de6:	bf00      	nop
 8011de8:	3714      	adds	r7, #20
 8011dea:	46bd      	mov	sp, r7
 8011dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011df0:	4770      	bx	lr
 8011df2:	bf00      	nop
 8011df4:	40010000 	.word	0x40010000
 8011df8:	40000400 	.word	0x40000400
 8011dfc:	40000800 	.word	0x40000800
 8011e00:	40000c00 	.word	0x40000c00
 8011e04:	40010400 	.word	0x40010400
 8011e08:	40014000 	.word	0x40014000
 8011e0c:	40014400 	.word	0x40014400
 8011e10:	40014800 	.word	0x40014800
 8011e14:	40001800 	.word	0x40001800
 8011e18:	40001c00 	.word	0x40001c00
 8011e1c:	40002000 	.word	0x40002000

08011e20 <TIM_OC1_SetConfig>:
 8011e20:	b480      	push	{r7}
 8011e22:	b087      	sub	sp, #28
 8011e24:	af00      	add	r7, sp, #0
 8011e26:	6078      	str	r0, [r7, #4]
 8011e28:	6039      	str	r1, [r7, #0]
 8011e2a:	687b      	ldr	r3, [r7, #4]
 8011e2c:	6a1b      	ldr	r3, [r3, #32]
 8011e2e:	f023 0201 	bic.w	r2, r3, #1
 8011e32:	687b      	ldr	r3, [r7, #4]
 8011e34:	621a      	str	r2, [r3, #32]
 8011e36:	687b      	ldr	r3, [r7, #4]
 8011e38:	6a1b      	ldr	r3, [r3, #32]
 8011e3a:	617b      	str	r3, [r7, #20]
 8011e3c:	687b      	ldr	r3, [r7, #4]
 8011e3e:	685b      	ldr	r3, [r3, #4]
 8011e40:	613b      	str	r3, [r7, #16]
 8011e42:	687b      	ldr	r3, [r7, #4]
 8011e44:	699b      	ldr	r3, [r3, #24]
 8011e46:	60fb      	str	r3, [r7, #12]
 8011e48:	68fb      	ldr	r3, [r7, #12]
 8011e4a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8011e4e:	60fb      	str	r3, [r7, #12]
 8011e50:	68fb      	ldr	r3, [r7, #12]
 8011e52:	f023 0303 	bic.w	r3, r3, #3
 8011e56:	60fb      	str	r3, [r7, #12]
 8011e58:	683b      	ldr	r3, [r7, #0]
 8011e5a:	681b      	ldr	r3, [r3, #0]
 8011e5c:	68fa      	ldr	r2, [r7, #12]
 8011e5e:	4313      	orrs	r3, r2
 8011e60:	60fb      	str	r3, [r7, #12]
 8011e62:	697b      	ldr	r3, [r7, #20]
 8011e64:	f023 0302 	bic.w	r3, r3, #2
 8011e68:	617b      	str	r3, [r7, #20]
 8011e6a:	683b      	ldr	r3, [r7, #0]
 8011e6c:	689b      	ldr	r3, [r3, #8]
 8011e6e:	697a      	ldr	r2, [r7, #20]
 8011e70:	4313      	orrs	r3, r2
 8011e72:	617b      	str	r3, [r7, #20]
 8011e74:	687b      	ldr	r3, [r7, #4]
 8011e76:	4a20      	ldr	r2, [pc, #128]	@ (8011ef8 <TIM_OC1_SetConfig+0xd8>)
 8011e78:	4293      	cmp	r3, r2
 8011e7a:	d003      	beq.n	8011e84 <TIM_OC1_SetConfig+0x64>
 8011e7c:	687b      	ldr	r3, [r7, #4]
 8011e7e:	4a1f      	ldr	r2, [pc, #124]	@ (8011efc <TIM_OC1_SetConfig+0xdc>)
 8011e80:	4293      	cmp	r3, r2
 8011e82:	d10c      	bne.n	8011e9e <TIM_OC1_SetConfig+0x7e>
 8011e84:	697b      	ldr	r3, [r7, #20]
 8011e86:	f023 0308 	bic.w	r3, r3, #8
 8011e8a:	617b      	str	r3, [r7, #20]
 8011e8c:	683b      	ldr	r3, [r7, #0]
 8011e8e:	68db      	ldr	r3, [r3, #12]
 8011e90:	697a      	ldr	r2, [r7, #20]
 8011e92:	4313      	orrs	r3, r2
 8011e94:	617b      	str	r3, [r7, #20]
 8011e96:	697b      	ldr	r3, [r7, #20]
 8011e98:	f023 0304 	bic.w	r3, r3, #4
 8011e9c:	617b      	str	r3, [r7, #20]
 8011e9e:	687b      	ldr	r3, [r7, #4]
 8011ea0:	4a15      	ldr	r2, [pc, #84]	@ (8011ef8 <TIM_OC1_SetConfig+0xd8>)
 8011ea2:	4293      	cmp	r3, r2
 8011ea4:	d003      	beq.n	8011eae <TIM_OC1_SetConfig+0x8e>
 8011ea6:	687b      	ldr	r3, [r7, #4]
 8011ea8:	4a14      	ldr	r2, [pc, #80]	@ (8011efc <TIM_OC1_SetConfig+0xdc>)
 8011eaa:	4293      	cmp	r3, r2
 8011eac:	d111      	bne.n	8011ed2 <TIM_OC1_SetConfig+0xb2>
 8011eae:	693b      	ldr	r3, [r7, #16]
 8011eb0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8011eb4:	613b      	str	r3, [r7, #16]
 8011eb6:	693b      	ldr	r3, [r7, #16]
 8011eb8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8011ebc:	613b      	str	r3, [r7, #16]
 8011ebe:	683b      	ldr	r3, [r7, #0]
 8011ec0:	695b      	ldr	r3, [r3, #20]
 8011ec2:	693a      	ldr	r2, [r7, #16]
 8011ec4:	4313      	orrs	r3, r2
 8011ec6:	613b      	str	r3, [r7, #16]
 8011ec8:	683b      	ldr	r3, [r7, #0]
 8011eca:	699b      	ldr	r3, [r3, #24]
 8011ecc:	693a      	ldr	r2, [r7, #16]
 8011ece:	4313      	orrs	r3, r2
 8011ed0:	613b      	str	r3, [r7, #16]
 8011ed2:	687b      	ldr	r3, [r7, #4]
 8011ed4:	693a      	ldr	r2, [r7, #16]
 8011ed6:	605a      	str	r2, [r3, #4]
 8011ed8:	687b      	ldr	r3, [r7, #4]
 8011eda:	68fa      	ldr	r2, [r7, #12]
 8011edc:	619a      	str	r2, [r3, #24]
 8011ede:	683b      	ldr	r3, [r7, #0]
 8011ee0:	685a      	ldr	r2, [r3, #4]
 8011ee2:	687b      	ldr	r3, [r7, #4]
 8011ee4:	635a      	str	r2, [r3, #52]	@ 0x34
 8011ee6:	687b      	ldr	r3, [r7, #4]
 8011ee8:	697a      	ldr	r2, [r7, #20]
 8011eea:	621a      	str	r2, [r3, #32]
 8011eec:	bf00      	nop
 8011eee:	371c      	adds	r7, #28
 8011ef0:	46bd      	mov	sp, r7
 8011ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ef6:	4770      	bx	lr
 8011ef8:	40010000 	.word	0x40010000
 8011efc:	40010400 	.word	0x40010400

08011f00 <TIM_OC2_SetConfig>:
 8011f00:	b480      	push	{r7}
 8011f02:	b087      	sub	sp, #28
 8011f04:	af00      	add	r7, sp, #0
 8011f06:	6078      	str	r0, [r7, #4]
 8011f08:	6039      	str	r1, [r7, #0]
 8011f0a:	687b      	ldr	r3, [r7, #4]
 8011f0c:	6a1b      	ldr	r3, [r3, #32]
 8011f0e:	f023 0210 	bic.w	r2, r3, #16
 8011f12:	687b      	ldr	r3, [r7, #4]
 8011f14:	621a      	str	r2, [r3, #32]
 8011f16:	687b      	ldr	r3, [r7, #4]
 8011f18:	6a1b      	ldr	r3, [r3, #32]
 8011f1a:	617b      	str	r3, [r7, #20]
 8011f1c:	687b      	ldr	r3, [r7, #4]
 8011f1e:	685b      	ldr	r3, [r3, #4]
 8011f20:	613b      	str	r3, [r7, #16]
 8011f22:	687b      	ldr	r3, [r7, #4]
 8011f24:	699b      	ldr	r3, [r3, #24]
 8011f26:	60fb      	str	r3, [r7, #12]
 8011f28:	68fb      	ldr	r3, [r7, #12]
 8011f2a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8011f2e:	60fb      	str	r3, [r7, #12]
 8011f30:	68fb      	ldr	r3, [r7, #12]
 8011f32:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011f36:	60fb      	str	r3, [r7, #12]
 8011f38:	683b      	ldr	r3, [r7, #0]
 8011f3a:	681b      	ldr	r3, [r3, #0]
 8011f3c:	021b      	lsls	r3, r3, #8
 8011f3e:	68fa      	ldr	r2, [r7, #12]
 8011f40:	4313      	orrs	r3, r2
 8011f42:	60fb      	str	r3, [r7, #12]
 8011f44:	697b      	ldr	r3, [r7, #20]
 8011f46:	f023 0320 	bic.w	r3, r3, #32
 8011f4a:	617b      	str	r3, [r7, #20]
 8011f4c:	683b      	ldr	r3, [r7, #0]
 8011f4e:	689b      	ldr	r3, [r3, #8]
 8011f50:	011b      	lsls	r3, r3, #4
 8011f52:	697a      	ldr	r2, [r7, #20]
 8011f54:	4313      	orrs	r3, r2
 8011f56:	617b      	str	r3, [r7, #20]
 8011f58:	687b      	ldr	r3, [r7, #4]
 8011f5a:	4a22      	ldr	r2, [pc, #136]	@ (8011fe4 <TIM_OC2_SetConfig+0xe4>)
 8011f5c:	4293      	cmp	r3, r2
 8011f5e:	d003      	beq.n	8011f68 <TIM_OC2_SetConfig+0x68>
 8011f60:	687b      	ldr	r3, [r7, #4]
 8011f62:	4a21      	ldr	r2, [pc, #132]	@ (8011fe8 <TIM_OC2_SetConfig+0xe8>)
 8011f64:	4293      	cmp	r3, r2
 8011f66:	d10d      	bne.n	8011f84 <TIM_OC2_SetConfig+0x84>
 8011f68:	697b      	ldr	r3, [r7, #20]
 8011f6a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8011f6e:	617b      	str	r3, [r7, #20]
 8011f70:	683b      	ldr	r3, [r7, #0]
 8011f72:	68db      	ldr	r3, [r3, #12]
 8011f74:	011b      	lsls	r3, r3, #4
 8011f76:	697a      	ldr	r2, [r7, #20]
 8011f78:	4313      	orrs	r3, r2
 8011f7a:	617b      	str	r3, [r7, #20]
 8011f7c:	697b      	ldr	r3, [r7, #20]
 8011f7e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8011f82:	617b      	str	r3, [r7, #20]
 8011f84:	687b      	ldr	r3, [r7, #4]
 8011f86:	4a17      	ldr	r2, [pc, #92]	@ (8011fe4 <TIM_OC2_SetConfig+0xe4>)
 8011f88:	4293      	cmp	r3, r2
 8011f8a:	d003      	beq.n	8011f94 <TIM_OC2_SetConfig+0x94>
 8011f8c:	687b      	ldr	r3, [r7, #4]
 8011f8e:	4a16      	ldr	r2, [pc, #88]	@ (8011fe8 <TIM_OC2_SetConfig+0xe8>)
 8011f90:	4293      	cmp	r3, r2
 8011f92:	d113      	bne.n	8011fbc <TIM_OC2_SetConfig+0xbc>
 8011f94:	693b      	ldr	r3, [r7, #16]
 8011f96:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8011f9a:	613b      	str	r3, [r7, #16]
 8011f9c:	693b      	ldr	r3, [r7, #16]
 8011f9e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8011fa2:	613b      	str	r3, [r7, #16]
 8011fa4:	683b      	ldr	r3, [r7, #0]
 8011fa6:	695b      	ldr	r3, [r3, #20]
 8011fa8:	009b      	lsls	r3, r3, #2
 8011faa:	693a      	ldr	r2, [r7, #16]
 8011fac:	4313      	orrs	r3, r2
 8011fae:	613b      	str	r3, [r7, #16]
 8011fb0:	683b      	ldr	r3, [r7, #0]
 8011fb2:	699b      	ldr	r3, [r3, #24]
 8011fb4:	009b      	lsls	r3, r3, #2
 8011fb6:	693a      	ldr	r2, [r7, #16]
 8011fb8:	4313      	orrs	r3, r2
 8011fba:	613b      	str	r3, [r7, #16]
 8011fbc:	687b      	ldr	r3, [r7, #4]
 8011fbe:	693a      	ldr	r2, [r7, #16]
 8011fc0:	605a      	str	r2, [r3, #4]
 8011fc2:	687b      	ldr	r3, [r7, #4]
 8011fc4:	68fa      	ldr	r2, [r7, #12]
 8011fc6:	619a      	str	r2, [r3, #24]
 8011fc8:	683b      	ldr	r3, [r7, #0]
 8011fca:	685a      	ldr	r2, [r3, #4]
 8011fcc:	687b      	ldr	r3, [r7, #4]
 8011fce:	639a      	str	r2, [r3, #56]	@ 0x38
 8011fd0:	687b      	ldr	r3, [r7, #4]
 8011fd2:	697a      	ldr	r2, [r7, #20]
 8011fd4:	621a      	str	r2, [r3, #32]
 8011fd6:	bf00      	nop
 8011fd8:	371c      	adds	r7, #28
 8011fda:	46bd      	mov	sp, r7
 8011fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011fe0:	4770      	bx	lr
 8011fe2:	bf00      	nop
 8011fe4:	40010000 	.word	0x40010000
 8011fe8:	40010400 	.word	0x40010400

08011fec <TIM_OC3_SetConfig>:
 8011fec:	b480      	push	{r7}
 8011fee:	b087      	sub	sp, #28
 8011ff0:	af00      	add	r7, sp, #0
 8011ff2:	6078      	str	r0, [r7, #4]
 8011ff4:	6039      	str	r1, [r7, #0]
 8011ff6:	687b      	ldr	r3, [r7, #4]
 8011ff8:	6a1b      	ldr	r3, [r3, #32]
 8011ffa:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8011ffe:	687b      	ldr	r3, [r7, #4]
 8012000:	621a      	str	r2, [r3, #32]
 8012002:	687b      	ldr	r3, [r7, #4]
 8012004:	6a1b      	ldr	r3, [r3, #32]
 8012006:	617b      	str	r3, [r7, #20]
 8012008:	687b      	ldr	r3, [r7, #4]
 801200a:	685b      	ldr	r3, [r3, #4]
 801200c:	613b      	str	r3, [r7, #16]
 801200e:	687b      	ldr	r3, [r7, #4]
 8012010:	69db      	ldr	r3, [r3, #28]
 8012012:	60fb      	str	r3, [r7, #12]
 8012014:	68fb      	ldr	r3, [r7, #12]
 8012016:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801201a:	60fb      	str	r3, [r7, #12]
 801201c:	68fb      	ldr	r3, [r7, #12]
 801201e:	f023 0303 	bic.w	r3, r3, #3
 8012022:	60fb      	str	r3, [r7, #12]
 8012024:	683b      	ldr	r3, [r7, #0]
 8012026:	681b      	ldr	r3, [r3, #0]
 8012028:	68fa      	ldr	r2, [r7, #12]
 801202a:	4313      	orrs	r3, r2
 801202c:	60fb      	str	r3, [r7, #12]
 801202e:	697b      	ldr	r3, [r7, #20]
 8012030:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8012034:	617b      	str	r3, [r7, #20]
 8012036:	683b      	ldr	r3, [r7, #0]
 8012038:	689b      	ldr	r3, [r3, #8]
 801203a:	021b      	lsls	r3, r3, #8
 801203c:	697a      	ldr	r2, [r7, #20]
 801203e:	4313      	orrs	r3, r2
 8012040:	617b      	str	r3, [r7, #20]
 8012042:	687b      	ldr	r3, [r7, #4]
 8012044:	4a21      	ldr	r2, [pc, #132]	@ (80120cc <TIM_OC3_SetConfig+0xe0>)
 8012046:	4293      	cmp	r3, r2
 8012048:	d003      	beq.n	8012052 <TIM_OC3_SetConfig+0x66>
 801204a:	687b      	ldr	r3, [r7, #4]
 801204c:	4a20      	ldr	r2, [pc, #128]	@ (80120d0 <TIM_OC3_SetConfig+0xe4>)
 801204e:	4293      	cmp	r3, r2
 8012050:	d10d      	bne.n	801206e <TIM_OC3_SetConfig+0x82>
 8012052:	697b      	ldr	r3, [r7, #20]
 8012054:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8012058:	617b      	str	r3, [r7, #20]
 801205a:	683b      	ldr	r3, [r7, #0]
 801205c:	68db      	ldr	r3, [r3, #12]
 801205e:	021b      	lsls	r3, r3, #8
 8012060:	697a      	ldr	r2, [r7, #20]
 8012062:	4313      	orrs	r3, r2
 8012064:	617b      	str	r3, [r7, #20]
 8012066:	697b      	ldr	r3, [r7, #20]
 8012068:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 801206c:	617b      	str	r3, [r7, #20]
 801206e:	687b      	ldr	r3, [r7, #4]
 8012070:	4a16      	ldr	r2, [pc, #88]	@ (80120cc <TIM_OC3_SetConfig+0xe0>)
 8012072:	4293      	cmp	r3, r2
 8012074:	d003      	beq.n	801207e <TIM_OC3_SetConfig+0x92>
 8012076:	687b      	ldr	r3, [r7, #4]
 8012078:	4a15      	ldr	r2, [pc, #84]	@ (80120d0 <TIM_OC3_SetConfig+0xe4>)
 801207a:	4293      	cmp	r3, r2
 801207c:	d113      	bne.n	80120a6 <TIM_OC3_SetConfig+0xba>
 801207e:	693b      	ldr	r3, [r7, #16]
 8012080:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8012084:	613b      	str	r3, [r7, #16]
 8012086:	693b      	ldr	r3, [r7, #16]
 8012088:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801208c:	613b      	str	r3, [r7, #16]
 801208e:	683b      	ldr	r3, [r7, #0]
 8012090:	695b      	ldr	r3, [r3, #20]
 8012092:	011b      	lsls	r3, r3, #4
 8012094:	693a      	ldr	r2, [r7, #16]
 8012096:	4313      	orrs	r3, r2
 8012098:	613b      	str	r3, [r7, #16]
 801209a:	683b      	ldr	r3, [r7, #0]
 801209c:	699b      	ldr	r3, [r3, #24]
 801209e:	011b      	lsls	r3, r3, #4
 80120a0:	693a      	ldr	r2, [r7, #16]
 80120a2:	4313      	orrs	r3, r2
 80120a4:	613b      	str	r3, [r7, #16]
 80120a6:	687b      	ldr	r3, [r7, #4]
 80120a8:	693a      	ldr	r2, [r7, #16]
 80120aa:	605a      	str	r2, [r3, #4]
 80120ac:	687b      	ldr	r3, [r7, #4]
 80120ae:	68fa      	ldr	r2, [r7, #12]
 80120b0:	61da      	str	r2, [r3, #28]
 80120b2:	683b      	ldr	r3, [r7, #0]
 80120b4:	685a      	ldr	r2, [r3, #4]
 80120b6:	687b      	ldr	r3, [r7, #4]
 80120b8:	63da      	str	r2, [r3, #60]	@ 0x3c
 80120ba:	687b      	ldr	r3, [r7, #4]
 80120bc:	697a      	ldr	r2, [r7, #20]
 80120be:	621a      	str	r2, [r3, #32]
 80120c0:	bf00      	nop
 80120c2:	371c      	adds	r7, #28
 80120c4:	46bd      	mov	sp, r7
 80120c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120ca:	4770      	bx	lr
 80120cc:	40010000 	.word	0x40010000
 80120d0:	40010400 	.word	0x40010400

080120d4 <TIM_OC4_SetConfig>:
 80120d4:	b480      	push	{r7}
 80120d6:	b087      	sub	sp, #28
 80120d8:	af00      	add	r7, sp, #0
 80120da:	6078      	str	r0, [r7, #4]
 80120dc:	6039      	str	r1, [r7, #0]
 80120de:	687b      	ldr	r3, [r7, #4]
 80120e0:	6a1b      	ldr	r3, [r3, #32]
 80120e2:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80120e6:	687b      	ldr	r3, [r7, #4]
 80120e8:	621a      	str	r2, [r3, #32]
 80120ea:	687b      	ldr	r3, [r7, #4]
 80120ec:	6a1b      	ldr	r3, [r3, #32]
 80120ee:	613b      	str	r3, [r7, #16]
 80120f0:	687b      	ldr	r3, [r7, #4]
 80120f2:	685b      	ldr	r3, [r3, #4]
 80120f4:	617b      	str	r3, [r7, #20]
 80120f6:	687b      	ldr	r3, [r7, #4]
 80120f8:	69db      	ldr	r3, [r3, #28]
 80120fa:	60fb      	str	r3, [r7, #12]
 80120fc:	68fb      	ldr	r3, [r7, #12]
 80120fe:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8012102:	60fb      	str	r3, [r7, #12]
 8012104:	68fb      	ldr	r3, [r7, #12]
 8012106:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 801210a:	60fb      	str	r3, [r7, #12]
 801210c:	683b      	ldr	r3, [r7, #0]
 801210e:	681b      	ldr	r3, [r3, #0]
 8012110:	021b      	lsls	r3, r3, #8
 8012112:	68fa      	ldr	r2, [r7, #12]
 8012114:	4313      	orrs	r3, r2
 8012116:	60fb      	str	r3, [r7, #12]
 8012118:	693b      	ldr	r3, [r7, #16]
 801211a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801211e:	613b      	str	r3, [r7, #16]
 8012120:	683b      	ldr	r3, [r7, #0]
 8012122:	689b      	ldr	r3, [r3, #8]
 8012124:	031b      	lsls	r3, r3, #12
 8012126:	693a      	ldr	r2, [r7, #16]
 8012128:	4313      	orrs	r3, r2
 801212a:	613b      	str	r3, [r7, #16]
 801212c:	687b      	ldr	r3, [r7, #4]
 801212e:	4a12      	ldr	r2, [pc, #72]	@ (8012178 <TIM_OC4_SetConfig+0xa4>)
 8012130:	4293      	cmp	r3, r2
 8012132:	d003      	beq.n	801213c <TIM_OC4_SetConfig+0x68>
 8012134:	687b      	ldr	r3, [r7, #4]
 8012136:	4a11      	ldr	r2, [pc, #68]	@ (801217c <TIM_OC4_SetConfig+0xa8>)
 8012138:	4293      	cmp	r3, r2
 801213a:	d109      	bne.n	8012150 <TIM_OC4_SetConfig+0x7c>
 801213c:	697b      	ldr	r3, [r7, #20]
 801213e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8012142:	617b      	str	r3, [r7, #20]
 8012144:	683b      	ldr	r3, [r7, #0]
 8012146:	695b      	ldr	r3, [r3, #20]
 8012148:	019b      	lsls	r3, r3, #6
 801214a:	697a      	ldr	r2, [r7, #20]
 801214c:	4313      	orrs	r3, r2
 801214e:	617b      	str	r3, [r7, #20]
 8012150:	687b      	ldr	r3, [r7, #4]
 8012152:	697a      	ldr	r2, [r7, #20]
 8012154:	605a      	str	r2, [r3, #4]
 8012156:	687b      	ldr	r3, [r7, #4]
 8012158:	68fa      	ldr	r2, [r7, #12]
 801215a:	61da      	str	r2, [r3, #28]
 801215c:	683b      	ldr	r3, [r7, #0]
 801215e:	685a      	ldr	r2, [r3, #4]
 8012160:	687b      	ldr	r3, [r7, #4]
 8012162:	641a      	str	r2, [r3, #64]	@ 0x40
 8012164:	687b      	ldr	r3, [r7, #4]
 8012166:	693a      	ldr	r2, [r7, #16]
 8012168:	621a      	str	r2, [r3, #32]
 801216a:	bf00      	nop
 801216c:	371c      	adds	r7, #28
 801216e:	46bd      	mov	sp, r7
 8012170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012174:	4770      	bx	lr
 8012176:	bf00      	nop
 8012178:	40010000 	.word	0x40010000
 801217c:	40010400 	.word	0x40010400

08012180 <TIM_TI1_ConfigInputStage>:
 8012180:	b480      	push	{r7}
 8012182:	b087      	sub	sp, #28
 8012184:	af00      	add	r7, sp, #0
 8012186:	60f8      	str	r0, [r7, #12]
 8012188:	60b9      	str	r1, [r7, #8]
 801218a:	607a      	str	r2, [r7, #4]
 801218c:	68fb      	ldr	r3, [r7, #12]
 801218e:	6a1b      	ldr	r3, [r3, #32]
 8012190:	617b      	str	r3, [r7, #20]
 8012192:	68fb      	ldr	r3, [r7, #12]
 8012194:	6a1b      	ldr	r3, [r3, #32]
 8012196:	f023 0201 	bic.w	r2, r3, #1
 801219a:	68fb      	ldr	r3, [r7, #12]
 801219c:	621a      	str	r2, [r3, #32]
 801219e:	68fb      	ldr	r3, [r7, #12]
 80121a0:	699b      	ldr	r3, [r3, #24]
 80121a2:	613b      	str	r3, [r7, #16]
 80121a4:	693b      	ldr	r3, [r7, #16]
 80121a6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80121aa:	613b      	str	r3, [r7, #16]
 80121ac:	687b      	ldr	r3, [r7, #4]
 80121ae:	011b      	lsls	r3, r3, #4
 80121b0:	693a      	ldr	r2, [r7, #16]
 80121b2:	4313      	orrs	r3, r2
 80121b4:	613b      	str	r3, [r7, #16]
 80121b6:	697b      	ldr	r3, [r7, #20]
 80121b8:	f023 030a 	bic.w	r3, r3, #10
 80121bc:	617b      	str	r3, [r7, #20]
 80121be:	697a      	ldr	r2, [r7, #20]
 80121c0:	68bb      	ldr	r3, [r7, #8]
 80121c2:	4313      	orrs	r3, r2
 80121c4:	617b      	str	r3, [r7, #20]
 80121c6:	68fb      	ldr	r3, [r7, #12]
 80121c8:	693a      	ldr	r2, [r7, #16]
 80121ca:	619a      	str	r2, [r3, #24]
 80121cc:	68fb      	ldr	r3, [r7, #12]
 80121ce:	697a      	ldr	r2, [r7, #20]
 80121d0:	621a      	str	r2, [r3, #32]
 80121d2:	bf00      	nop
 80121d4:	371c      	adds	r7, #28
 80121d6:	46bd      	mov	sp, r7
 80121d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121dc:	4770      	bx	lr

080121de <TIM_TI2_ConfigInputStage>:
 80121de:	b480      	push	{r7}
 80121e0:	b087      	sub	sp, #28
 80121e2:	af00      	add	r7, sp, #0
 80121e4:	60f8      	str	r0, [r7, #12]
 80121e6:	60b9      	str	r1, [r7, #8]
 80121e8:	607a      	str	r2, [r7, #4]
 80121ea:	68fb      	ldr	r3, [r7, #12]
 80121ec:	6a1b      	ldr	r3, [r3, #32]
 80121ee:	f023 0210 	bic.w	r2, r3, #16
 80121f2:	68fb      	ldr	r3, [r7, #12]
 80121f4:	621a      	str	r2, [r3, #32]
 80121f6:	68fb      	ldr	r3, [r7, #12]
 80121f8:	699b      	ldr	r3, [r3, #24]
 80121fa:	617b      	str	r3, [r7, #20]
 80121fc:	68fb      	ldr	r3, [r7, #12]
 80121fe:	6a1b      	ldr	r3, [r3, #32]
 8012200:	613b      	str	r3, [r7, #16]
 8012202:	697b      	ldr	r3, [r7, #20]
 8012204:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8012208:	617b      	str	r3, [r7, #20]
 801220a:	687b      	ldr	r3, [r7, #4]
 801220c:	031b      	lsls	r3, r3, #12
 801220e:	697a      	ldr	r2, [r7, #20]
 8012210:	4313      	orrs	r3, r2
 8012212:	617b      	str	r3, [r7, #20]
 8012214:	693b      	ldr	r3, [r7, #16]
 8012216:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 801221a:	613b      	str	r3, [r7, #16]
 801221c:	68bb      	ldr	r3, [r7, #8]
 801221e:	011b      	lsls	r3, r3, #4
 8012220:	693a      	ldr	r2, [r7, #16]
 8012222:	4313      	orrs	r3, r2
 8012224:	613b      	str	r3, [r7, #16]
 8012226:	68fb      	ldr	r3, [r7, #12]
 8012228:	697a      	ldr	r2, [r7, #20]
 801222a:	619a      	str	r2, [r3, #24]
 801222c:	68fb      	ldr	r3, [r7, #12]
 801222e:	693a      	ldr	r2, [r7, #16]
 8012230:	621a      	str	r2, [r3, #32]
 8012232:	bf00      	nop
 8012234:	371c      	adds	r7, #28
 8012236:	46bd      	mov	sp, r7
 8012238:	f85d 7b04 	ldr.w	r7, [sp], #4
 801223c:	4770      	bx	lr

0801223e <TIM_ITRx_SetConfig>:
 801223e:	b480      	push	{r7}
 8012240:	b085      	sub	sp, #20
 8012242:	af00      	add	r7, sp, #0
 8012244:	6078      	str	r0, [r7, #4]
 8012246:	6039      	str	r1, [r7, #0]
 8012248:	687b      	ldr	r3, [r7, #4]
 801224a:	689b      	ldr	r3, [r3, #8]
 801224c:	60fb      	str	r3, [r7, #12]
 801224e:	68fb      	ldr	r3, [r7, #12]
 8012250:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8012254:	60fb      	str	r3, [r7, #12]
 8012256:	683a      	ldr	r2, [r7, #0]
 8012258:	68fb      	ldr	r3, [r7, #12]
 801225a:	4313      	orrs	r3, r2
 801225c:	f043 0307 	orr.w	r3, r3, #7
 8012260:	60fb      	str	r3, [r7, #12]
 8012262:	687b      	ldr	r3, [r7, #4]
 8012264:	68fa      	ldr	r2, [r7, #12]
 8012266:	609a      	str	r2, [r3, #8]
 8012268:	bf00      	nop
 801226a:	3714      	adds	r7, #20
 801226c:	46bd      	mov	sp, r7
 801226e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012272:	4770      	bx	lr

08012274 <TIM_ETR_SetConfig>:
 8012274:	b480      	push	{r7}
 8012276:	b087      	sub	sp, #28
 8012278:	af00      	add	r7, sp, #0
 801227a:	60f8      	str	r0, [r7, #12]
 801227c:	60b9      	str	r1, [r7, #8]
 801227e:	607a      	str	r2, [r7, #4]
 8012280:	603b      	str	r3, [r7, #0]
 8012282:	68fb      	ldr	r3, [r7, #12]
 8012284:	689b      	ldr	r3, [r3, #8]
 8012286:	617b      	str	r3, [r7, #20]
 8012288:	697b      	ldr	r3, [r7, #20]
 801228a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 801228e:	617b      	str	r3, [r7, #20]
 8012290:	683b      	ldr	r3, [r7, #0]
 8012292:	021a      	lsls	r2, r3, #8
 8012294:	687b      	ldr	r3, [r7, #4]
 8012296:	431a      	orrs	r2, r3
 8012298:	68bb      	ldr	r3, [r7, #8]
 801229a:	4313      	orrs	r3, r2
 801229c:	697a      	ldr	r2, [r7, #20]
 801229e:	4313      	orrs	r3, r2
 80122a0:	617b      	str	r3, [r7, #20]
 80122a2:	68fb      	ldr	r3, [r7, #12]
 80122a4:	697a      	ldr	r2, [r7, #20]
 80122a6:	609a      	str	r2, [r3, #8]
 80122a8:	bf00      	nop
 80122aa:	371c      	adds	r7, #28
 80122ac:	46bd      	mov	sp, r7
 80122ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122b2:	4770      	bx	lr

080122b4 <TIM_CCxChannelCmd>:
 80122b4:	b480      	push	{r7}
 80122b6:	b087      	sub	sp, #28
 80122b8:	af00      	add	r7, sp, #0
 80122ba:	60f8      	str	r0, [r7, #12]
 80122bc:	60b9      	str	r1, [r7, #8]
 80122be:	607a      	str	r2, [r7, #4]
 80122c0:	68bb      	ldr	r3, [r7, #8]
 80122c2:	f003 031f 	and.w	r3, r3, #31
 80122c6:	2201      	movs	r2, #1
 80122c8:	fa02 f303 	lsl.w	r3, r2, r3
 80122cc:	617b      	str	r3, [r7, #20]
 80122ce:	68fb      	ldr	r3, [r7, #12]
 80122d0:	6a1a      	ldr	r2, [r3, #32]
 80122d2:	697b      	ldr	r3, [r7, #20]
 80122d4:	43db      	mvns	r3, r3
 80122d6:	401a      	ands	r2, r3
 80122d8:	68fb      	ldr	r3, [r7, #12]
 80122da:	621a      	str	r2, [r3, #32]
 80122dc:	68fb      	ldr	r3, [r7, #12]
 80122de:	6a1a      	ldr	r2, [r3, #32]
 80122e0:	68bb      	ldr	r3, [r7, #8]
 80122e2:	f003 031f 	and.w	r3, r3, #31
 80122e6:	6879      	ldr	r1, [r7, #4]
 80122e8:	fa01 f303 	lsl.w	r3, r1, r3
 80122ec:	431a      	orrs	r2, r3
 80122ee:	68fb      	ldr	r3, [r7, #12]
 80122f0:	621a      	str	r2, [r3, #32]
 80122f2:	bf00      	nop
 80122f4:	371c      	adds	r7, #28
 80122f6:	46bd      	mov	sp, r7
 80122f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122fc:	4770      	bx	lr
	...

08012300 <HAL_TIMEx_MasterConfigSynchronization>:
 8012300:	b480      	push	{r7}
 8012302:	b085      	sub	sp, #20
 8012304:	af00      	add	r7, sp, #0
 8012306:	6078      	str	r0, [r7, #4]
 8012308:	6039      	str	r1, [r7, #0]
 801230a:	687b      	ldr	r3, [r7, #4]
 801230c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8012310:	2b01      	cmp	r3, #1
 8012312:	d101      	bne.n	8012318 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8012314:	2302      	movs	r3, #2
 8012316:	e05a      	b.n	80123ce <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8012318:	687b      	ldr	r3, [r7, #4]
 801231a:	2201      	movs	r2, #1
 801231c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012320:	687b      	ldr	r3, [r7, #4]
 8012322:	2202      	movs	r2, #2
 8012324:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012328:	687b      	ldr	r3, [r7, #4]
 801232a:	681b      	ldr	r3, [r3, #0]
 801232c:	685b      	ldr	r3, [r3, #4]
 801232e:	60fb      	str	r3, [r7, #12]
 8012330:	687b      	ldr	r3, [r7, #4]
 8012332:	681b      	ldr	r3, [r3, #0]
 8012334:	689b      	ldr	r3, [r3, #8]
 8012336:	60bb      	str	r3, [r7, #8]
 8012338:	68fb      	ldr	r3, [r7, #12]
 801233a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801233e:	60fb      	str	r3, [r7, #12]
 8012340:	683b      	ldr	r3, [r7, #0]
 8012342:	681b      	ldr	r3, [r3, #0]
 8012344:	68fa      	ldr	r2, [r7, #12]
 8012346:	4313      	orrs	r3, r2
 8012348:	60fb      	str	r3, [r7, #12]
 801234a:	687b      	ldr	r3, [r7, #4]
 801234c:	681b      	ldr	r3, [r3, #0]
 801234e:	68fa      	ldr	r2, [r7, #12]
 8012350:	605a      	str	r2, [r3, #4]
 8012352:	687b      	ldr	r3, [r7, #4]
 8012354:	681b      	ldr	r3, [r3, #0]
 8012356:	4a21      	ldr	r2, [pc, #132]	@ (80123dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8012358:	4293      	cmp	r3, r2
 801235a:	d022      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 801235c:	687b      	ldr	r3, [r7, #4]
 801235e:	681b      	ldr	r3, [r3, #0]
 8012360:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8012364:	d01d      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8012366:	687b      	ldr	r3, [r7, #4]
 8012368:	681b      	ldr	r3, [r3, #0]
 801236a:	4a1d      	ldr	r2, [pc, #116]	@ (80123e0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 801236c:	4293      	cmp	r3, r2
 801236e:	d018      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8012370:	687b      	ldr	r3, [r7, #4]
 8012372:	681b      	ldr	r3, [r3, #0]
 8012374:	4a1b      	ldr	r2, [pc, #108]	@ (80123e4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8012376:	4293      	cmp	r3, r2
 8012378:	d013      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 801237a:	687b      	ldr	r3, [r7, #4]
 801237c:	681b      	ldr	r3, [r3, #0]
 801237e:	4a1a      	ldr	r2, [pc, #104]	@ (80123e8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8012380:	4293      	cmp	r3, r2
 8012382:	d00e      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8012384:	687b      	ldr	r3, [r7, #4]
 8012386:	681b      	ldr	r3, [r3, #0]
 8012388:	4a18      	ldr	r2, [pc, #96]	@ (80123ec <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 801238a:	4293      	cmp	r3, r2
 801238c:	d009      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 801238e:	687b      	ldr	r3, [r7, #4]
 8012390:	681b      	ldr	r3, [r3, #0]
 8012392:	4a17      	ldr	r2, [pc, #92]	@ (80123f0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8012394:	4293      	cmp	r3, r2
 8012396:	d004      	beq.n	80123a2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8012398:	687b      	ldr	r3, [r7, #4]
 801239a:	681b      	ldr	r3, [r3, #0]
 801239c:	4a15      	ldr	r2, [pc, #84]	@ (80123f4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 801239e:	4293      	cmp	r3, r2
 80123a0:	d10c      	bne.n	80123bc <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80123a2:	68bb      	ldr	r3, [r7, #8]
 80123a4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80123a8:	60bb      	str	r3, [r7, #8]
 80123aa:	683b      	ldr	r3, [r7, #0]
 80123ac:	685b      	ldr	r3, [r3, #4]
 80123ae:	68ba      	ldr	r2, [r7, #8]
 80123b0:	4313      	orrs	r3, r2
 80123b2:	60bb      	str	r3, [r7, #8]
 80123b4:	687b      	ldr	r3, [r7, #4]
 80123b6:	681b      	ldr	r3, [r3, #0]
 80123b8:	68ba      	ldr	r2, [r7, #8]
 80123ba:	609a      	str	r2, [r3, #8]
 80123bc:	687b      	ldr	r3, [r7, #4]
 80123be:	2201      	movs	r2, #1
 80123c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80123c4:	687b      	ldr	r3, [r7, #4]
 80123c6:	2200      	movs	r2, #0
 80123c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80123cc:	2300      	movs	r3, #0
 80123ce:	4618      	mov	r0, r3
 80123d0:	3714      	adds	r7, #20
 80123d2:	46bd      	mov	sp, r7
 80123d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123d8:	4770      	bx	lr
 80123da:	bf00      	nop
 80123dc:	40010000 	.word	0x40010000
 80123e0:	40000400 	.word	0x40000400
 80123e4:	40000800 	.word	0x40000800
 80123e8:	40000c00 	.word	0x40000c00
 80123ec:	40010400 	.word	0x40010400
 80123f0:	40014000 	.word	0x40014000
 80123f4:	40001800 	.word	0x40001800

080123f8 <HAL_TIMEx_CommutCallback>:
 80123f8:	b480      	push	{r7}
 80123fa:	b083      	sub	sp, #12
 80123fc:	af00      	add	r7, sp, #0
 80123fe:	6078      	str	r0, [r7, #4]
 8012400:	bf00      	nop
 8012402:	370c      	adds	r7, #12
 8012404:	46bd      	mov	sp, r7
 8012406:	f85d 7b04 	ldr.w	r7, [sp], #4
 801240a:	4770      	bx	lr

0801240c <HAL_TIMEx_BreakCallback>:
 801240c:	b480      	push	{r7}
 801240e:	b083      	sub	sp, #12
 8012410:	af00      	add	r7, sp, #0
 8012412:	6078      	str	r0, [r7, #4]
 8012414:	bf00      	nop
 8012416:	370c      	adds	r7, #12
 8012418:	46bd      	mov	sp, r7
 801241a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801241e:	4770      	bx	lr

08012420 <HAL_UART_Init>:
 8012420:	b580      	push	{r7, lr}
 8012422:	b082      	sub	sp, #8
 8012424:	af00      	add	r7, sp, #0
 8012426:	6078      	str	r0, [r7, #4]
 8012428:	687b      	ldr	r3, [r7, #4]
 801242a:	2b00      	cmp	r3, #0
 801242c:	d101      	bne.n	8012432 <HAL_UART_Init+0x12>
 801242e:	2301      	movs	r3, #1
 8012430:	e03f      	b.n	80124b2 <HAL_UART_Init+0x92>
 8012432:	687b      	ldr	r3, [r7, #4]
 8012434:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012438:	b2db      	uxtb	r3, r3
 801243a:	2b00      	cmp	r3, #0
 801243c:	d106      	bne.n	801244c <HAL_UART_Init+0x2c>
 801243e:	687b      	ldr	r3, [r7, #4]
 8012440:	2200      	movs	r2, #0
 8012442:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012446:	6878      	ldr	r0, [r7, #4]
 8012448:	f7f2 f932 	bl	80046b0 <HAL_UART_MspInit>
 801244c:	687b      	ldr	r3, [r7, #4]
 801244e:	2224      	movs	r2, #36	@ 0x24
 8012450:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012454:	687b      	ldr	r3, [r7, #4]
 8012456:	681b      	ldr	r3, [r3, #0]
 8012458:	68da      	ldr	r2, [r3, #12]
 801245a:	687b      	ldr	r3, [r7, #4]
 801245c:	681b      	ldr	r3, [r3, #0]
 801245e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8012462:	60da      	str	r2, [r3, #12]
 8012464:	6878      	ldr	r0, [r7, #4]
 8012466:	f000 fe51 	bl	801310c <UART_SetConfig>
 801246a:	687b      	ldr	r3, [r7, #4]
 801246c:	681b      	ldr	r3, [r3, #0]
 801246e:	691a      	ldr	r2, [r3, #16]
 8012470:	687b      	ldr	r3, [r7, #4]
 8012472:	681b      	ldr	r3, [r3, #0]
 8012474:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8012478:	611a      	str	r2, [r3, #16]
 801247a:	687b      	ldr	r3, [r7, #4]
 801247c:	681b      	ldr	r3, [r3, #0]
 801247e:	695a      	ldr	r2, [r3, #20]
 8012480:	687b      	ldr	r3, [r7, #4]
 8012482:	681b      	ldr	r3, [r3, #0]
 8012484:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8012488:	615a      	str	r2, [r3, #20]
 801248a:	687b      	ldr	r3, [r7, #4]
 801248c:	681b      	ldr	r3, [r3, #0]
 801248e:	68da      	ldr	r2, [r3, #12]
 8012490:	687b      	ldr	r3, [r7, #4]
 8012492:	681b      	ldr	r3, [r3, #0]
 8012494:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8012498:	60da      	str	r2, [r3, #12]
 801249a:	687b      	ldr	r3, [r7, #4]
 801249c:	2200      	movs	r2, #0
 801249e:	641a      	str	r2, [r3, #64]	@ 0x40
 80124a0:	687b      	ldr	r3, [r7, #4]
 80124a2:	2220      	movs	r2, #32
 80124a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80124a8:	687b      	ldr	r3, [r7, #4]
 80124aa:	2220      	movs	r2, #32
 80124ac:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80124b0:	2300      	movs	r3, #0
 80124b2:	4618      	mov	r0, r3
 80124b4:	3708      	adds	r7, #8
 80124b6:	46bd      	mov	sp, r7
 80124b8:	bd80      	pop	{r7, pc}
	...

080124bc <HAL_UART_Transmit_DMA>:
 80124bc:	b580      	push	{r7, lr}
 80124be:	b08c      	sub	sp, #48	@ 0x30
 80124c0:	af00      	add	r7, sp, #0
 80124c2:	60f8      	str	r0, [r7, #12]
 80124c4:	60b9      	str	r1, [r7, #8]
 80124c6:	4613      	mov	r3, r2
 80124c8:	80fb      	strh	r3, [r7, #6]
 80124ca:	68fb      	ldr	r3, [r7, #12]
 80124cc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80124d0:	b2db      	uxtb	r3, r3
 80124d2:	2b20      	cmp	r3, #32
 80124d4:	d165      	bne.n	80125a2 <HAL_UART_Transmit_DMA+0xe6>
 80124d6:	68bb      	ldr	r3, [r7, #8]
 80124d8:	2b00      	cmp	r3, #0
 80124da:	d002      	beq.n	80124e2 <HAL_UART_Transmit_DMA+0x26>
 80124dc:	88fb      	ldrh	r3, [r7, #6]
 80124de:	2b00      	cmp	r3, #0
 80124e0:	d101      	bne.n	80124e6 <HAL_UART_Transmit_DMA+0x2a>
 80124e2:	2301      	movs	r3, #1
 80124e4:	e05e      	b.n	80125a4 <HAL_UART_Transmit_DMA+0xe8>
 80124e6:	68fb      	ldr	r3, [r7, #12]
 80124e8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80124ec:	2b01      	cmp	r3, #1
 80124ee:	d101      	bne.n	80124f4 <HAL_UART_Transmit_DMA+0x38>
 80124f0:	2302      	movs	r3, #2
 80124f2:	e057      	b.n	80125a4 <HAL_UART_Transmit_DMA+0xe8>
 80124f4:	68fb      	ldr	r3, [r7, #12]
 80124f6:	2201      	movs	r2, #1
 80124f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80124fc:	68ba      	ldr	r2, [r7, #8]
 80124fe:	68fb      	ldr	r3, [r7, #12]
 8012500:	621a      	str	r2, [r3, #32]
 8012502:	68fb      	ldr	r3, [r7, #12]
 8012504:	88fa      	ldrh	r2, [r7, #6]
 8012506:	849a      	strh	r2, [r3, #36]	@ 0x24
 8012508:	68fb      	ldr	r3, [r7, #12]
 801250a:	88fa      	ldrh	r2, [r7, #6]
 801250c:	84da      	strh	r2, [r3, #38]	@ 0x26
 801250e:	68fb      	ldr	r3, [r7, #12]
 8012510:	2200      	movs	r2, #0
 8012512:	641a      	str	r2, [r3, #64]	@ 0x40
 8012514:	68fb      	ldr	r3, [r7, #12]
 8012516:	2221      	movs	r2, #33	@ 0x21
 8012518:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801251c:	68fb      	ldr	r3, [r7, #12]
 801251e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012520:	4a22      	ldr	r2, [pc, #136]	@ (80125ac <HAL_UART_Transmit_DMA+0xf0>)
 8012522:	63da      	str	r2, [r3, #60]	@ 0x3c
 8012524:	68fb      	ldr	r3, [r7, #12]
 8012526:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012528:	4a21      	ldr	r2, [pc, #132]	@ (80125b0 <HAL_UART_Transmit_DMA+0xf4>)
 801252a:	641a      	str	r2, [r3, #64]	@ 0x40
 801252c:	68fb      	ldr	r3, [r7, #12]
 801252e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012530:	4a20      	ldr	r2, [pc, #128]	@ (80125b4 <HAL_UART_Transmit_DMA+0xf8>)
 8012532:	64da      	str	r2, [r3, #76]	@ 0x4c
 8012534:	68fb      	ldr	r3, [r7, #12]
 8012536:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012538:	2200      	movs	r2, #0
 801253a:	651a      	str	r2, [r3, #80]	@ 0x50
 801253c:	f107 0308 	add.w	r3, r7, #8
 8012540:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012542:	68fb      	ldr	r3, [r7, #12]
 8012544:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8012546:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8012548:	6819      	ldr	r1, [r3, #0]
 801254a:	68fb      	ldr	r3, [r7, #12]
 801254c:	681b      	ldr	r3, [r3, #0]
 801254e:	3304      	adds	r3, #4
 8012550:	461a      	mov	r2, r3
 8012552:	88fb      	ldrh	r3, [r7, #6]
 8012554:	f7fa f828 	bl	800c5a8 <HAL_DMA_Start_IT>
 8012558:	68fb      	ldr	r3, [r7, #12]
 801255a:	681b      	ldr	r3, [r3, #0]
 801255c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8012560:	601a      	str	r2, [r3, #0]
 8012562:	68fb      	ldr	r3, [r7, #12]
 8012564:	2200      	movs	r2, #0
 8012566:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801256a:	68fb      	ldr	r3, [r7, #12]
 801256c:	681b      	ldr	r3, [r3, #0]
 801256e:	3314      	adds	r3, #20
 8012570:	61bb      	str	r3, [r7, #24]
 8012572:	69bb      	ldr	r3, [r7, #24]
 8012574:	e853 3f00 	ldrex	r3, [r3]
 8012578:	617b      	str	r3, [r7, #20]
 801257a:	697b      	ldr	r3, [r7, #20]
 801257c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8012580:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012582:	68fb      	ldr	r3, [r7, #12]
 8012584:	681b      	ldr	r3, [r3, #0]
 8012586:	3314      	adds	r3, #20
 8012588:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 801258a:	627a      	str	r2, [r7, #36]	@ 0x24
 801258c:	623b      	str	r3, [r7, #32]
 801258e:	6a39      	ldr	r1, [r7, #32]
 8012590:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8012592:	e841 2300 	strex	r3, r2, [r1]
 8012596:	61fb      	str	r3, [r7, #28]
 8012598:	69fb      	ldr	r3, [r7, #28]
 801259a:	2b00      	cmp	r3, #0
 801259c:	d1e5      	bne.n	801256a <HAL_UART_Transmit_DMA+0xae>
 801259e:	2300      	movs	r3, #0
 80125a0:	e000      	b.n	80125a4 <HAL_UART_Transmit_DMA+0xe8>
 80125a2:	2302      	movs	r3, #2
 80125a4:	4618      	mov	r0, r3
 80125a6:	3730      	adds	r7, #48	@ 0x30
 80125a8:	46bd      	mov	sp, r7
 80125aa:	bd80      	pop	{r7, pc}
 80125ac:	08012c3d 	.word	0x08012c3d
 80125b0:	08012cd7 	.word	0x08012cd7
 80125b4:	08012cf3 	.word	0x08012cf3

080125b8 <HAL_UART_DMAStop>:
 80125b8:	b580      	push	{r7, lr}
 80125ba:	b090      	sub	sp, #64	@ 0x40
 80125bc:	af00      	add	r7, sp, #0
 80125be:	6078      	str	r0, [r7, #4]
 80125c0:	2300      	movs	r3, #0
 80125c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80125c4:	687b      	ldr	r3, [r7, #4]
 80125c6:	681b      	ldr	r3, [r3, #0]
 80125c8:	695b      	ldr	r3, [r3, #20]
 80125ca:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80125ce:	2b80      	cmp	r3, #128	@ 0x80
 80125d0:	bf0c      	ite	eq
 80125d2:	2301      	moveq	r3, #1
 80125d4:	2300      	movne	r3, #0
 80125d6:	b2db      	uxtb	r3, r3
 80125d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80125da:	687b      	ldr	r3, [r7, #4]
 80125dc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80125e0:	b2db      	uxtb	r3, r3
 80125e2:	2b21      	cmp	r3, #33	@ 0x21
 80125e4:	d128      	bne.n	8012638 <HAL_UART_DMAStop+0x80>
 80125e6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80125e8:	2b00      	cmp	r3, #0
 80125ea:	d025      	beq.n	8012638 <HAL_UART_DMAStop+0x80>
 80125ec:	687b      	ldr	r3, [r7, #4]
 80125ee:	681b      	ldr	r3, [r3, #0]
 80125f0:	3314      	adds	r3, #20
 80125f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80125f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80125f6:	e853 3f00 	ldrex	r3, [r3]
 80125fa:	623b      	str	r3, [r7, #32]
 80125fc:	6a3b      	ldr	r3, [r7, #32]
 80125fe:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012602:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012604:	687b      	ldr	r3, [r7, #4]
 8012606:	681b      	ldr	r3, [r3, #0]
 8012608:	3314      	adds	r3, #20
 801260a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 801260c:	633a      	str	r2, [r7, #48]	@ 0x30
 801260e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012610:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012612:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012614:	e841 2300 	strex	r3, r2, [r1]
 8012618:	62bb      	str	r3, [r7, #40]	@ 0x28
 801261a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801261c:	2b00      	cmp	r3, #0
 801261e:	d1e5      	bne.n	80125ec <HAL_UART_DMAStop+0x34>
 8012620:	687b      	ldr	r3, [r7, #4]
 8012622:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012624:	2b00      	cmp	r3, #0
 8012626:	d004      	beq.n	8012632 <HAL_UART_DMAStop+0x7a>
 8012628:	687b      	ldr	r3, [r7, #4]
 801262a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801262c:	4618      	mov	r0, r3
 801262e:	f7fa f813 	bl	800c658 <HAL_DMA_Abort>
 8012632:	6878      	ldr	r0, [r7, #4]
 8012634:	f000 fba7 	bl	8012d86 <UART_EndTxTransfer>
 8012638:	687b      	ldr	r3, [r7, #4]
 801263a:	681b      	ldr	r3, [r3, #0]
 801263c:	695b      	ldr	r3, [r3, #20]
 801263e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012642:	2b40      	cmp	r3, #64	@ 0x40
 8012644:	bf0c      	ite	eq
 8012646:	2301      	moveq	r3, #1
 8012648:	2300      	movne	r3, #0
 801264a:	b2db      	uxtb	r3, r3
 801264c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801264e:	687b      	ldr	r3, [r7, #4]
 8012650:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012654:	b2db      	uxtb	r3, r3
 8012656:	2b22      	cmp	r3, #34	@ 0x22
 8012658:	d128      	bne.n	80126ac <HAL_UART_DMAStop+0xf4>
 801265a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801265c:	2b00      	cmp	r3, #0
 801265e:	d025      	beq.n	80126ac <HAL_UART_DMAStop+0xf4>
 8012660:	687b      	ldr	r3, [r7, #4]
 8012662:	681b      	ldr	r3, [r3, #0]
 8012664:	3314      	adds	r3, #20
 8012666:	613b      	str	r3, [r7, #16]
 8012668:	693b      	ldr	r3, [r7, #16]
 801266a:	e853 3f00 	ldrex	r3, [r3]
 801266e:	60fb      	str	r3, [r7, #12]
 8012670:	68fb      	ldr	r3, [r7, #12]
 8012672:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012676:	637b      	str	r3, [r7, #52]	@ 0x34
 8012678:	687b      	ldr	r3, [r7, #4]
 801267a:	681b      	ldr	r3, [r3, #0]
 801267c:	3314      	adds	r3, #20
 801267e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8012680:	61fa      	str	r2, [r7, #28]
 8012682:	61bb      	str	r3, [r7, #24]
 8012684:	69b9      	ldr	r1, [r7, #24]
 8012686:	69fa      	ldr	r2, [r7, #28]
 8012688:	e841 2300 	strex	r3, r2, [r1]
 801268c:	617b      	str	r3, [r7, #20]
 801268e:	697b      	ldr	r3, [r7, #20]
 8012690:	2b00      	cmp	r3, #0
 8012692:	d1e5      	bne.n	8012660 <HAL_UART_DMAStop+0xa8>
 8012694:	687b      	ldr	r3, [r7, #4]
 8012696:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012698:	2b00      	cmp	r3, #0
 801269a:	d004      	beq.n	80126a6 <HAL_UART_DMAStop+0xee>
 801269c:	687b      	ldr	r3, [r7, #4]
 801269e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80126a0:	4618      	mov	r0, r3
 80126a2:	f7f9 ffd9 	bl	800c658 <HAL_DMA_Abort>
 80126a6:	6878      	ldr	r0, [r7, #4]
 80126a8:	f000 fb95 	bl	8012dd6 <UART_EndRxTransfer>
 80126ac:	2300      	movs	r3, #0
 80126ae:	4618      	mov	r0, r3
 80126b0:	3740      	adds	r7, #64	@ 0x40
 80126b2:	46bd      	mov	sp, r7
 80126b4:	bd80      	pop	{r7, pc}
	...

080126b8 <HAL_UART_IRQHandler>:
 80126b8:	b580      	push	{r7, lr}
 80126ba:	b0ba      	sub	sp, #232	@ 0xe8
 80126bc:	af00      	add	r7, sp, #0
 80126be:	6078      	str	r0, [r7, #4]
 80126c0:	687b      	ldr	r3, [r7, #4]
 80126c2:	681b      	ldr	r3, [r3, #0]
 80126c4:	681b      	ldr	r3, [r3, #0]
 80126c6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80126ca:	687b      	ldr	r3, [r7, #4]
 80126cc:	681b      	ldr	r3, [r3, #0]
 80126ce:	68db      	ldr	r3, [r3, #12]
 80126d0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80126d4:	687b      	ldr	r3, [r7, #4]
 80126d6:	681b      	ldr	r3, [r3, #0]
 80126d8:	695b      	ldr	r3, [r3, #20]
 80126da:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80126de:	2300      	movs	r3, #0
 80126e0:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80126e4:	2300      	movs	r3, #0
 80126e6:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80126ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80126ee:	f003 030f 	and.w	r3, r3, #15
 80126f2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80126f6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80126fa:	2b00      	cmp	r3, #0
 80126fc:	d10f      	bne.n	801271e <HAL_UART_IRQHandler+0x66>
 80126fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012702:	f003 0320 	and.w	r3, r3, #32
 8012706:	2b00      	cmp	r3, #0
 8012708:	d009      	beq.n	801271e <HAL_UART_IRQHandler+0x66>
 801270a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 801270e:	f003 0320 	and.w	r3, r3, #32
 8012712:	2b00      	cmp	r3, #0
 8012714:	d003      	beq.n	801271e <HAL_UART_IRQHandler+0x66>
 8012716:	6878      	ldr	r0, [r7, #4]
 8012718:	f000 fc3c 	bl	8012f94 <UART_Receive_IT>
 801271c:	e256      	b.n	8012bcc <HAL_UART_IRQHandler+0x514>
 801271e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8012722:	2b00      	cmp	r3, #0
 8012724:	f000 80de 	beq.w	80128e4 <HAL_UART_IRQHandler+0x22c>
 8012728:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 801272c:	f003 0301 	and.w	r3, r3, #1
 8012730:	2b00      	cmp	r3, #0
 8012732:	d106      	bne.n	8012742 <HAL_UART_IRQHandler+0x8a>
 8012734:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012738:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 801273c:	2b00      	cmp	r3, #0
 801273e:	f000 80d1 	beq.w	80128e4 <HAL_UART_IRQHandler+0x22c>
 8012742:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012746:	f003 0301 	and.w	r3, r3, #1
 801274a:	2b00      	cmp	r3, #0
 801274c:	d00b      	beq.n	8012766 <HAL_UART_IRQHandler+0xae>
 801274e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012752:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012756:	2b00      	cmp	r3, #0
 8012758:	d005      	beq.n	8012766 <HAL_UART_IRQHandler+0xae>
 801275a:	687b      	ldr	r3, [r7, #4]
 801275c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801275e:	f043 0201 	orr.w	r2, r3, #1
 8012762:	687b      	ldr	r3, [r7, #4]
 8012764:	641a      	str	r2, [r3, #64]	@ 0x40
 8012766:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801276a:	f003 0304 	and.w	r3, r3, #4
 801276e:	2b00      	cmp	r3, #0
 8012770:	d00b      	beq.n	801278a <HAL_UART_IRQHandler+0xd2>
 8012772:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8012776:	f003 0301 	and.w	r3, r3, #1
 801277a:	2b00      	cmp	r3, #0
 801277c:	d005      	beq.n	801278a <HAL_UART_IRQHandler+0xd2>
 801277e:	687b      	ldr	r3, [r7, #4]
 8012780:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012782:	f043 0202 	orr.w	r2, r3, #2
 8012786:	687b      	ldr	r3, [r7, #4]
 8012788:	641a      	str	r2, [r3, #64]	@ 0x40
 801278a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801278e:	f003 0302 	and.w	r3, r3, #2
 8012792:	2b00      	cmp	r3, #0
 8012794:	d00b      	beq.n	80127ae <HAL_UART_IRQHandler+0xf6>
 8012796:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 801279a:	f003 0301 	and.w	r3, r3, #1
 801279e:	2b00      	cmp	r3, #0
 80127a0:	d005      	beq.n	80127ae <HAL_UART_IRQHandler+0xf6>
 80127a2:	687b      	ldr	r3, [r7, #4]
 80127a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80127a6:	f043 0204 	orr.w	r2, r3, #4
 80127aa:	687b      	ldr	r3, [r7, #4]
 80127ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80127ae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80127b2:	f003 0308 	and.w	r3, r3, #8
 80127b6:	2b00      	cmp	r3, #0
 80127b8:	d011      	beq.n	80127de <HAL_UART_IRQHandler+0x126>
 80127ba:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80127be:	f003 0320 	and.w	r3, r3, #32
 80127c2:	2b00      	cmp	r3, #0
 80127c4:	d105      	bne.n	80127d2 <HAL_UART_IRQHandler+0x11a>
 80127c6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80127ca:	f003 0301 	and.w	r3, r3, #1
 80127ce:	2b00      	cmp	r3, #0
 80127d0:	d005      	beq.n	80127de <HAL_UART_IRQHandler+0x126>
 80127d2:	687b      	ldr	r3, [r7, #4]
 80127d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80127d6:	f043 0208 	orr.w	r2, r3, #8
 80127da:	687b      	ldr	r3, [r7, #4]
 80127dc:	641a      	str	r2, [r3, #64]	@ 0x40
 80127de:	687b      	ldr	r3, [r7, #4]
 80127e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80127e2:	2b00      	cmp	r3, #0
 80127e4:	f000 81ed 	beq.w	8012bc2 <HAL_UART_IRQHandler+0x50a>
 80127e8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80127ec:	f003 0320 	and.w	r3, r3, #32
 80127f0:	2b00      	cmp	r3, #0
 80127f2:	d008      	beq.n	8012806 <HAL_UART_IRQHandler+0x14e>
 80127f4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80127f8:	f003 0320 	and.w	r3, r3, #32
 80127fc:	2b00      	cmp	r3, #0
 80127fe:	d002      	beq.n	8012806 <HAL_UART_IRQHandler+0x14e>
 8012800:	6878      	ldr	r0, [r7, #4]
 8012802:	f000 fbc7 	bl	8012f94 <UART_Receive_IT>
 8012806:	687b      	ldr	r3, [r7, #4]
 8012808:	681b      	ldr	r3, [r3, #0]
 801280a:	695b      	ldr	r3, [r3, #20]
 801280c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012810:	2b40      	cmp	r3, #64	@ 0x40
 8012812:	bf0c      	ite	eq
 8012814:	2301      	moveq	r3, #1
 8012816:	2300      	movne	r3, #0
 8012818:	b2db      	uxtb	r3, r3
 801281a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 801281e:	687b      	ldr	r3, [r7, #4]
 8012820:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012822:	f003 0308 	and.w	r3, r3, #8
 8012826:	2b00      	cmp	r3, #0
 8012828:	d103      	bne.n	8012832 <HAL_UART_IRQHandler+0x17a>
 801282a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 801282e:	2b00      	cmp	r3, #0
 8012830:	d04f      	beq.n	80128d2 <HAL_UART_IRQHandler+0x21a>
 8012832:	6878      	ldr	r0, [r7, #4]
 8012834:	f000 facf 	bl	8012dd6 <UART_EndRxTransfer>
 8012838:	687b      	ldr	r3, [r7, #4]
 801283a:	681b      	ldr	r3, [r3, #0]
 801283c:	695b      	ldr	r3, [r3, #20]
 801283e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012842:	2b40      	cmp	r3, #64	@ 0x40
 8012844:	d141      	bne.n	80128ca <HAL_UART_IRQHandler+0x212>
 8012846:	687b      	ldr	r3, [r7, #4]
 8012848:	681b      	ldr	r3, [r3, #0]
 801284a:	3314      	adds	r3, #20
 801284c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8012850:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8012854:	e853 3f00 	ldrex	r3, [r3]
 8012858:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 801285c:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8012860:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012864:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8012868:	687b      	ldr	r3, [r7, #4]
 801286a:	681b      	ldr	r3, [r3, #0]
 801286c:	3314      	adds	r3, #20
 801286e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8012872:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8012876:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 801287a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 801287e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8012882:	e841 2300 	strex	r3, r2, [r1]
 8012886:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 801288a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 801288e:	2b00      	cmp	r3, #0
 8012890:	d1d9      	bne.n	8012846 <HAL_UART_IRQHandler+0x18e>
 8012892:	687b      	ldr	r3, [r7, #4]
 8012894:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012896:	2b00      	cmp	r3, #0
 8012898:	d013      	beq.n	80128c2 <HAL_UART_IRQHandler+0x20a>
 801289a:	687b      	ldr	r3, [r7, #4]
 801289c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801289e:	4a7d      	ldr	r2, [pc, #500]	@ (8012a94 <HAL_UART_IRQHandler+0x3dc>)
 80128a0:	651a      	str	r2, [r3, #80]	@ 0x50
 80128a2:	687b      	ldr	r3, [r7, #4]
 80128a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80128a6:	4618      	mov	r0, r3
 80128a8:	f7f9 ff46 	bl	800c738 <HAL_DMA_Abort_IT>
 80128ac:	4603      	mov	r3, r0
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	d016      	beq.n	80128e0 <HAL_UART_IRQHandler+0x228>
 80128b2:	687b      	ldr	r3, [r7, #4]
 80128b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80128b6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80128b8:	687a      	ldr	r2, [r7, #4]
 80128ba:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80128bc:	4610      	mov	r0, r2
 80128be:	4798      	blx	r3
 80128c0:	e00e      	b.n	80128e0 <HAL_UART_IRQHandler+0x228>
 80128c2:	6878      	ldr	r0, [r7, #4]
 80128c4:	f000 f9a4 	bl	8012c10 <HAL_UART_ErrorCallback>
 80128c8:	e00a      	b.n	80128e0 <HAL_UART_IRQHandler+0x228>
 80128ca:	6878      	ldr	r0, [r7, #4]
 80128cc:	f000 f9a0 	bl	8012c10 <HAL_UART_ErrorCallback>
 80128d0:	e006      	b.n	80128e0 <HAL_UART_IRQHandler+0x228>
 80128d2:	6878      	ldr	r0, [r7, #4]
 80128d4:	f000 f99c 	bl	8012c10 <HAL_UART_ErrorCallback>
 80128d8:	687b      	ldr	r3, [r7, #4]
 80128da:	2200      	movs	r2, #0
 80128dc:	641a      	str	r2, [r3, #64]	@ 0x40
 80128de:	e170      	b.n	8012bc2 <HAL_UART_IRQHandler+0x50a>
 80128e0:	bf00      	nop
 80128e2:	e16e      	b.n	8012bc2 <HAL_UART_IRQHandler+0x50a>
 80128e4:	687b      	ldr	r3, [r7, #4]
 80128e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80128e8:	2b01      	cmp	r3, #1
 80128ea:	f040 814a 	bne.w	8012b82 <HAL_UART_IRQHandler+0x4ca>
 80128ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80128f2:	f003 0310 	and.w	r3, r3, #16
 80128f6:	2b00      	cmp	r3, #0
 80128f8:	f000 8143 	beq.w	8012b82 <HAL_UART_IRQHandler+0x4ca>
 80128fc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012900:	f003 0310 	and.w	r3, r3, #16
 8012904:	2b00      	cmp	r3, #0
 8012906:	f000 813c 	beq.w	8012b82 <HAL_UART_IRQHandler+0x4ca>
 801290a:	2300      	movs	r3, #0
 801290c:	60bb      	str	r3, [r7, #8]
 801290e:	687b      	ldr	r3, [r7, #4]
 8012910:	681b      	ldr	r3, [r3, #0]
 8012912:	681b      	ldr	r3, [r3, #0]
 8012914:	60bb      	str	r3, [r7, #8]
 8012916:	687b      	ldr	r3, [r7, #4]
 8012918:	681b      	ldr	r3, [r3, #0]
 801291a:	685b      	ldr	r3, [r3, #4]
 801291c:	60bb      	str	r3, [r7, #8]
 801291e:	68bb      	ldr	r3, [r7, #8]
 8012920:	687b      	ldr	r3, [r7, #4]
 8012922:	681b      	ldr	r3, [r3, #0]
 8012924:	695b      	ldr	r3, [r3, #20]
 8012926:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801292a:	2b40      	cmp	r3, #64	@ 0x40
 801292c:	f040 80b4 	bne.w	8012a98 <HAL_UART_IRQHandler+0x3e0>
 8012930:	687b      	ldr	r3, [r7, #4]
 8012932:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012934:	681b      	ldr	r3, [r3, #0]
 8012936:	685b      	ldr	r3, [r3, #4]
 8012938:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 801293c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8012940:	2b00      	cmp	r3, #0
 8012942:	f000 8140 	beq.w	8012bc6 <HAL_UART_IRQHandler+0x50e>
 8012946:	687b      	ldr	r3, [r7, #4]
 8012948:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 801294a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 801294e:	429a      	cmp	r2, r3
 8012950:	f080 8139 	bcs.w	8012bc6 <HAL_UART_IRQHandler+0x50e>
 8012954:	687b      	ldr	r3, [r7, #4]
 8012956:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 801295a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 801295c:	687b      	ldr	r3, [r7, #4]
 801295e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012960:	69db      	ldr	r3, [r3, #28]
 8012962:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8012966:	f000 8088 	beq.w	8012a7a <HAL_UART_IRQHandler+0x3c2>
 801296a:	687b      	ldr	r3, [r7, #4]
 801296c:	681b      	ldr	r3, [r3, #0]
 801296e:	330c      	adds	r3, #12
 8012970:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8012974:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8012978:	e853 3f00 	ldrex	r3, [r3]
 801297c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8012980:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8012984:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8012988:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 801298c:	687b      	ldr	r3, [r7, #4]
 801298e:	681b      	ldr	r3, [r3, #0]
 8012990:	330c      	adds	r3, #12
 8012992:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8012996:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 801299a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 801299e:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80129a2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80129a6:	e841 2300 	strex	r3, r2, [r1]
 80129aa:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80129ae:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80129b2:	2b00      	cmp	r3, #0
 80129b4:	d1d9      	bne.n	801296a <HAL_UART_IRQHandler+0x2b2>
 80129b6:	687b      	ldr	r3, [r7, #4]
 80129b8:	681b      	ldr	r3, [r3, #0]
 80129ba:	3314      	adds	r3, #20
 80129bc:	677b      	str	r3, [r7, #116]	@ 0x74
 80129be:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80129c0:	e853 3f00 	ldrex	r3, [r3]
 80129c4:	673b      	str	r3, [r7, #112]	@ 0x70
 80129c6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80129c8:	f023 0301 	bic.w	r3, r3, #1
 80129cc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80129d0:	687b      	ldr	r3, [r7, #4]
 80129d2:	681b      	ldr	r3, [r3, #0]
 80129d4:	3314      	adds	r3, #20
 80129d6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80129da:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80129de:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80129e0:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80129e2:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80129e6:	e841 2300 	strex	r3, r2, [r1]
 80129ea:	67bb      	str	r3, [r7, #120]	@ 0x78
 80129ec:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80129ee:	2b00      	cmp	r3, #0
 80129f0:	d1e1      	bne.n	80129b6 <HAL_UART_IRQHandler+0x2fe>
 80129f2:	687b      	ldr	r3, [r7, #4]
 80129f4:	681b      	ldr	r3, [r3, #0]
 80129f6:	3314      	adds	r3, #20
 80129f8:	663b      	str	r3, [r7, #96]	@ 0x60
 80129fa:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80129fc:	e853 3f00 	ldrex	r3, [r3]
 8012a00:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8012a02:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8012a04:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012a08:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8012a0c:	687b      	ldr	r3, [r7, #4]
 8012a0e:	681b      	ldr	r3, [r3, #0]
 8012a10:	3314      	adds	r3, #20
 8012a12:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8012a16:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8012a18:	66bb      	str	r3, [r7, #104]	@ 0x68
 8012a1a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8012a1c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8012a1e:	e841 2300 	strex	r3, r2, [r1]
 8012a22:	667b      	str	r3, [r7, #100]	@ 0x64
 8012a24:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8012a26:	2b00      	cmp	r3, #0
 8012a28:	d1e3      	bne.n	80129f2 <HAL_UART_IRQHandler+0x33a>
 8012a2a:	687b      	ldr	r3, [r7, #4]
 8012a2c:	2220      	movs	r2, #32
 8012a2e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012a32:	687b      	ldr	r3, [r7, #4]
 8012a34:	2200      	movs	r2, #0
 8012a36:	631a      	str	r2, [r3, #48]	@ 0x30
 8012a38:	687b      	ldr	r3, [r7, #4]
 8012a3a:	681b      	ldr	r3, [r3, #0]
 8012a3c:	330c      	adds	r3, #12
 8012a3e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8012a40:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8012a42:	e853 3f00 	ldrex	r3, [r3]
 8012a46:	64bb      	str	r3, [r7, #72]	@ 0x48
 8012a48:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8012a4a:	f023 0310 	bic.w	r3, r3, #16
 8012a4e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8012a52:	687b      	ldr	r3, [r7, #4]
 8012a54:	681b      	ldr	r3, [r3, #0]
 8012a56:	330c      	adds	r3, #12
 8012a58:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8012a5c:	65ba      	str	r2, [r7, #88]	@ 0x58
 8012a5e:	657b      	str	r3, [r7, #84]	@ 0x54
 8012a60:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8012a62:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8012a64:	e841 2300 	strex	r3, r2, [r1]
 8012a68:	653b      	str	r3, [r7, #80]	@ 0x50
 8012a6a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8012a6c:	2b00      	cmp	r3, #0
 8012a6e:	d1e3      	bne.n	8012a38 <HAL_UART_IRQHandler+0x380>
 8012a70:	687b      	ldr	r3, [r7, #4]
 8012a72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012a74:	4618      	mov	r0, r3
 8012a76:	f7f9 fdef 	bl	800c658 <HAL_DMA_Abort>
 8012a7a:	687b      	ldr	r3, [r7, #4]
 8012a7c:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8012a7e:	687b      	ldr	r3, [r7, #4]
 8012a80:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012a82:	b29b      	uxth	r3, r3
 8012a84:	1ad3      	subs	r3, r2, r3
 8012a86:	b29b      	uxth	r3, r3
 8012a88:	4619      	mov	r1, r3
 8012a8a:	6878      	ldr	r0, [r7, #4]
 8012a8c:	f000 f8ca 	bl	8012c24 <HAL_UARTEx_RxEventCallback>
 8012a90:	e099      	b.n	8012bc6 <HAL_UART_IRQHandler+0x50e>
 8012a92:	bf00      	nop
 8012a94:	08012e9d 	.word	0x08012e9d
 8012a98:	687b      	ldr	r3, [r7, #4]
 8012a9a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8012a9c:	687b      	ldr	r3, [r7, #4]
 8012a9e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012aa0:	b29b      	uxth	r3, r3
 8012aa2:	1ad3      	subs	r3, r2, r3
 8012aa4:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8012aa8:	687b      	ldr	r3, [r7, #4]
 8012aaa:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012aac:	b29b      	uxth	r3, r3
 8012aae:	2b00      	cmp	r3, #0
 8012ab0:	f000 808b 	beq.w	8012bca <HAL_UART_IRQHandler+0x512>
 8012ab4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8012ab8:	2b00      	cmp	r3, #0
 8012aba:	f000 8086 	beq.w	8012bca <HAL_UART_IRQHandler+0x512>
 8012abe:	687b      	ldr	r3, [r7, #4]
 8012ac0:	681b      	ldr	r3, [r3, #0]
 8012ac2:	330c      	adds	r3, #12
 8012ac4:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012ac6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8012ac8:	e853 3f00 	ldrex	r3, [r3]
 8012acc:	637b      	str	r3, [r7, #52]	@ 0x34
 8012ace:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8012ad0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8012ad4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8012ad8:	687b      	ldr	r3, [r7, #4]
 8012ada:	681b      	ldr	r3, [r3, #0]
 8012adc:	330c      	adds	r3, #12
 8012ade:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8012ae2:	647a      	str	r2, [r7, #68]	@ 0x44
 8012ae4:	643b      	str	r3, [r7, #64]	@ 0x40
 8012ae6:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8012ae8:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012aea:	e841 2300 	strex	r3, r2, [r1]
 8012aee:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012af0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012af2:	2b00      	cmp	r3, #0
 8012af4:	d1e3      	bne.n	8012abe <HAL_UART_IRQHandler+0x406>
 8012af6:	687b      	ldr	r3, [r7, #4]
 8012af8:	681b      	ldr	r3, [r3, #0]
 8012afa:	3314      	adds	r3, #20
 8012afc:	627b      	str	r3, [r7, #36]	@ 0x24
 8012afe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012b00:	e853 3f00 	ldrex	r3, [r3]
 8012b04:	623b      	str	r3, [r7, #32]
 8012b06:	6a3b      	ldr	r3, [r7, #32]
 8012b08:	f023 0301 	bic.w	r3, r3, #1
 8012b0c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8012b10:	687b      	ldr	r3, [r7, #4]
 8012b12:	681b      	ldr	r3, [r3, #0]
 8012b14:	3314      	adds	r3, #20
 8012b16:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8012b1a:	633a      	str	r2, [r7, #48]	@ 0x30
 8012b1c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012b1e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012b20:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012b22:	e841 2300 	strex	r3, r2, [r1]
 8012b26:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012b28:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012b2a:	2b00      	cmp	r3, #0
 8012b2c:	d1e3      	bne.n	8012af6 <HAL_UART_IRQHandler+0x43e>
 8012b2e:	687b      	ldr	r3, [r7, #4]
 8012b30:	2220      	movs	r2, #32
 8012b32:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012b36:	687b      	ldr	r3, [r7, #4]
 8012b38:	2200      	movs	r2, #0
 8012b3a:	631a      	str	r2, [r3, #48]	@ 0x30
 8012b3c:	687b      	ldr	r3, [r7, #4]
 8012b3e:	681b      	ldr	r3, [r3, #0]
 8012b40:	330c      	adds	r3, #12
 8012b42:	613b      	str	r3, [r7, #16]
 8012b44:	693b      	ldr	r3, [r7, #16]
 8012b46:	e853 3f00 	ldrex	r3, [r3]
 8012b4a:	60fb      	str	r3, [r7, #12]
 8012b4c:	68fb      	ldr	r3, [r7, #12]
 8012b4e:	f023 0310 	bic.w	r3, r3, #16
 8012b52:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8012b56:	687b      	ldr	r3, [r7, #4]
 8012b58:	681b      	ldr	r3, [r3, #0]
 8012b5a:	330c      	adds	r3, #12
 8012b5c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8012b60:	61fa      	str	r2, [r7, #28]
 8012b62:	61bb      	str	r3, [r7, #24]
 8012b64:	69b9      	ldr	r1, [r7, #24]
 8012b66:	69fa      	ldr	r2, [r7, #28]
 8012b68:	e841 2300 	strex	r3, r2, [r1]
 8012b6c:	617b      	str	r3, [r7, #20]
 8012b6e:	697b      	ldr	r3, [r7, #20]
 8012b70:	2b00      	cmp	r3, #0
 8012b72:	d1e3      	bne.n	8012b3c <HAL_UART_IRQHandler+0x484>
 8012b74:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8012b78:	4619      	mov	r1, r3
 8012b7a:	6878      	ldr	r0, [r7, #4]
 8012b7c:	f000 f852 	bl	8012c24 <HAL_UARTEx_RxEventCallback>
 8012b80:	e023      	b.n	8012bca <HAL_UART_IRQHandler+0x512>
 8012b82:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012b86:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012b8a:	2b00      	cmp	r3, #0
 8012b8c:	d009      	beq.n	8012ba2 <HAL_UART_IRQHandler+0x4ea>
 8012b8e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012b92:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012b96:	2b00      	cmp	r3, #0
 8012b98:	d003      	beq.n	8012ba2 <HAL_UART_IRQHandler+0x4ea>
 8012b9a:	6878      	ldr	r0, [r7, #4]
 8012b9c:	f000 f992 	bl	8012ec4 <UART_Transmit_IT>
 8012ba0:	e014      	b.n	8012bcc <HAL_UART_IRQHandler+0x514>
 8012ba2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012ba6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012baa:	2b00      	cmp	r3, #0
 8012bac:	d00e      	beq.n	8012bcc <HAL_UART_IRQHandler+0x514>
 8012bae:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012bb2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012bb6:	2b00      	cmp	r3, #0
 8012bb8:	d008      	beq.n	8012bcc <HAL_UART_IRQHandler+0x514>
 8012bba:	6878      	ldr	r0, [r7, #4]
 8012bbc:	f000 f9d2 	bl	8012f64 <UART_EndTransmit_IT>
 8012bc0:	e004      	b.n	8012bcc <HAL_UART_IRQHandler+0x514>
 8012bc2:	bf00      	nop
 8012bc4:	e002      	b.n	8012bcc <HAL_UART_IRQHandler+0x514>
 8012bc6:	bf00      	nop
 8012bc8:	e000      	b.n	8012bcc <HAL_UART_IRQHandler+0x514>
 8012bca:	bf00      	nop
 8012bcc:	37e8      	adds	r7, #232	@ 0xe8
 8012bce:	46bd      	mov	sp, r7
 8012bd0:	bd80      	pop	{r7, pc}
 8012bd2:	bf00      	nop

08012bd4 <HAL_UART_TxCpltCallback>:
 8012bd4:	b480      	push	{r7}
 8012bd6:	b083      	sub	sp, #12
 8012bd8:	af00      	add	r7, sp, #0
 8012bda:	6078      	str	r0, [r7, #4]
 8012bdc:	bf00      	nop
 8012bde:	370c      	adds	r7, #12
 8012be0:	46bd      	mov	sp, r7
 8012be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012be6:	4770      	bx	lr

08012be8 <HAL_UART_TxHalfCpltCallback>:
 8012be8:	b480      	push	{r7}
 8012bea:	b083      	sub	sp, #12
 8012bec:	af00      	add	r7, sp, #0
 8012bee:	6078      	str	r0, [r7, #4]
 8012bf0:	bf00      	nop
 8012bf2:	370c      	adds	r7, #12
 8012bf4:	46bd      	mov	sp, r7
 8012bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012bfa:	4770      	bx	lr

08012bfc <HAL_UART_RxCpltCallback>:
 8012bfc:	b480      	push	{r7}
 8012bfe:	b083      	sub	sp, #12
 8012c00:	af00      	add	r7, sp, #0
 8012c02:	6078      	str	r0, [r7, #4]
 8012c04:	bf00      	nop
 8012c06:	370c      	adds	r7, #12
 8012c08:	46bd      	mov	sp, r7
 8012c0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c0e:	4770      	bx	lr

08012c10 <HAL_UART_ErrorCallback>:
 8012c10:	b480      	push	{r7}
 8012c12:	b083      	sub	sp, #12
 8012c14:	af00      	add	r7, sp, #0
 8012c16:	6078      	str	r0, [r7, #4]
 8012c18:	bf00      	nop
 8012c1a:	370c      	adds	r7, #12
 8012c1c:	46bd      	mov	sp, r7
 8012c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c22:	4770      	bx	lr

08012c24 <HAL_UARTEx_RxEventCallback>:
 8012c24:	b480      	push	{r7}
 8012c26:	b083      	sub	sp, #12
 8012c28:	af00      	add	r7, sp, #0
 8012c2a:	6078      	str	r0, [r7, #4]
 8012c2c:	460b      	mov	r3, r1
 8012c2e:	807b      	strh	r3, [r7, #2]
 8012c30:	bf00      	nop
 8012c32:	370c      	adds	r7, #12
 8012c34:	46bd      	mov	sp, r7
 8012c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c3a:	4770      	bx	lr

08012c3c <UART_DMATransmitCplt>:
 8012c3c:	b580      	push	{r7, lr}
 8012c3e:	b090      	sub	sp, #64	@ 0x40
 8012c40:	af00      	add	r7, sp, #0
 8012c42:	6078      	str	r0, [r7, #4]
 8012c44:	687b      	ldr	r3, [r7, #4]
 8012c46:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012c48:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012c4a:	687b      	ldr	r3, [r7, #4]
 8012c4c:	681b      	ldr	r3, [r3, #0]
 8012c4e:	681b      	ldr	r3, [r3, #0]
 8012c50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012c54:	2b00      	cmp	r3, #0
 8012c56:	d137      	bne.n	8012cc8 <UART_DMATransmitCplt+0x8c>
 8012c58:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012c5a:	2200      	movs	r2, #0
 8012c5c:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012c5e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012c60:	681b      	ldr	r3, [r3, #0]
 8012c62:	3314      	adds	r3, #20
 8012c64:	627b      	str	r3, [r7, #36]	@ 0x24
 8012c66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c68:	e853 3f00 	ldrex	r3, [r3]
 8012c6c:	623b      	str	r3, [r7, #32]
 8012c6e:	6a3b      	ldr	r3, [r7, #32]
 8012c70:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012c74:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012c76:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012c78:	681b      	ldr	r3, [r3, #0]
 8012c7a:	3314      	adds	r3, #20
 8012c7c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8012c7e:	633a      	str	r2, [r7, #48]	@ 0x30
 8012c80:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012c82:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012c84:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012c86:	e841 2300 	strex	r3, r2, [r1]
 8012c8a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012c8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012c8e:	2b00      	cmp	r3, #0
 8012c90:	d1e5      	bne.n	8012c5e <UART_DMATransmitCplt+0x22>
 8012c92:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012c94:	681b      	ldr	r3, [r3, #0]
 8012c96:	330c      	adds	r3, #12
 8012c98:	613b      	str	r3, [r7, #16]
 8012c9a:	693b      	ldr	r3, [r7, #16]
 8012c9c:	e853 3f00 	ldrex	r3, [r3]
 8012ca0:	60fb      	str	r3, [r7, #12]
 8012ca2:	68fb      	ldr	r3, [r7, #12]
 8012ca4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012ca8:	637b      	str	r3, [r7, #52]	@ 0x34
 8012caa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012cac:	681b      	ldr	r3, [r3, #0]
 8012cae:	330c      	adds	r3, #12
 8012cb0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8012cb2:	61fa      	str	r2, [r7, #28]
 8012cb4:	61bb      	str	r3, [r7, #24]
 8012cb6:	69b9      	ldr	r1, [r7, #24]
 8012cb8:	69fa      	ldr	r2, [r7, #28]
 8012cba:	e841 2300 	strex	r3, r2, [r1]
 8012cbe:	617b      	str	r3, [r7, #20]
 8012cc0:	697b      	ldr	r3, [r7, #20]
 8012cc2:	2b00      	cmp	r3, #0
 8012cc4:	d1e5      	bne.n	8012c92 <UART_DMATransmitCplt+0x56>
 8012cc6:	e002      	b.n	8012cce <UART_DMATransmitCplt+0x92>
 8012cc8:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8012cca:	f7ff ff83 	bl	8012bd4 <HAL_UART_TxCpltCallback>
 8012cce:	bf00      	nop
 8012cd0:	3740      	adds	r7, #64	@ 0x40
 8012cd2:	46bd      	mov	sp, r7
 8012cd4:	bd80      	pop	{r7, pc}

08012cd6 <UART_DMATxHalfCplt>:
 8012cd6:	b580      	push	{r7, lr}
 8012cd8:	b084      	sub	sp, #16
 8012cda:	af00      	add	r7, sp, #0
 8012cdc:	6078      	str	r0, [r7, #4]
 8012cde:	687b      	ldr	r3, [r7, #4]
 8012ce0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012ce2:	60fb      	str	r3, [r7, #12]
 8012ce4:	68f8      	ldr	r0, [r7, #12]
 8012ce6:	f7ff ff7f 	bl	8012be8 <HAL_UART_TxHalfCpltCallback>
 8012cea:	bf00      	nop
 8012cec:	3710      	adds	r7, #16
 8012cee:	46bd      	mov	sp, r7
 8012cf0:	bd80      	pop	{r7, pc}

08012cf2 <UART_DMAError>:
 8012cf2:	b580      	push	{r7, lr}
 8012cf4:	b084      	sub	sp, #16
 8012cf6:	af00      	add	r7, sp, #0
 8012cf8:	6078      	str	r0, [r7, #4]
 8012cfa:	2300      	movs	r3, #0
 8012cfc:	60fb      	str	r3, [r7, #12]
 8012cfe:	687b      	ldr	r3, [r7, #4]
 8012d00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012d02:	60bb      	str	r3, [r7, #8]
 8012d04:	68bb      	ldr	r3, [r7, #8]
 8012d06:	681b      	ldr	r3, [r3, #0]
 8012d08:	695b      	ldr	r3, [r3, #20]
 8012d0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012d0e:	2b80      	cmp	r3, #128	@ 0x80
 8012d10:	bf0c      	ite	eq
 8012d12:	2301      	moveq	r3, #1
 8012d14:	2300      	movne	r3, #0
 8012d16:	b2db      	uxtb	r3, r3
 8012d18:	60fb      	str	r3, [r7, #12]
 8012d1a:	68bb      	ldr	r3, [r7, #8]
 8012d1c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012d20:	b2db      	uxtb	r3, r3
 8012d22:	2b21      	cmp	r3, #33	@ 0x21
 8012d24:	d108      	bne.n	8012d38 <UART_DMAError+0x46>
 8012d26:	68fb      	ldr	r3, [r7, #12]
 8012d28:	2b00      	cmp	r3, #0
 8012d2a:	d005      	beq.n	8012d38 <UART_DMAError+0x46>
 8012d2c:	68bb      	ldr	r3, [r7, #8]
 8012d2e:	2200      	movs	r2, #0
 8012d30:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012d32:	68b8      	ldr	r0, [r7, #8]
 8012d34:	f000 f827 	bl	8012d86 <UART_EndTxTransfer>
 8012d38:	68bb      	ldr	r3, [r7, #8]
 8012d3a:	681b      	ldr	r3, [r3, #0]
 8012d3c:	695b      	ldr	r3, [r3, #20]
 8012d3e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012d42:	2b40      	cmp	r3, #64	@ 0x40
 8012d44:	bf0c      	ite	eq
 8012d46:	2301      	moveq	r3, #1
 8012d48:	2300      	movne	r3, #0
 8012d4a:	b2db      	uxtb	r3, r3
 8012d4c:	60fb      	str	r3, [r7, #12]
 8012d4e:	68bb      	ldr	r3, [r7, #8]
 8012d50:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012d54:	b2db      	uxtb	r3, r3
 8012d56:	2b22      	cmp	r3, #34	@ 0x22
 8012d58:	d108      	bne.n	8012d6c <UART_DMAError+0x7a>
 8012d5a:	68fb      	ldr	r3, [r7, #12]
 8012d5c:	2b00      	cmp	r3, #0
 8012d5e:	d005      	beq.n	8012d6c <UART_DMAError+0x7a>
 8012d60:	68bb      	ldr	r3, [r7, #8]
 8012d62:	2200      	movs	r2, #0
 8012d64:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012d66:	68b8      	ldr	r0, [r7, #8]
 8012d68:	f000 f835 	bl	8012dd6 <UART_EndRxTransfer>
 8012d6c:	68bb      	ldr	r3, [r7, #8]
 8012d6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012d70:	f043 0210 	orr.w	r2, r3, #16
 8012d74:	68bb      	ldr	r3, [r7, #8]
 8012d76:	641a      	str	r2, [r3, #64]	@ 0x40
 8012d78:	68b8      	ldr	r0, [r7, #8]
 8012d7a:	f7ff ff49 	bl	8012c10 <HAL_UART_ErrorCallback>
 8012d7e:	bf00      	nop
 8012d80:	3710      	adds	r7, #16
 8012d82:	46bd      	mov	sp, r7
 8012d84:	bd80      	pop	{r7, pc}

08012d86 <UART_EndTxTransfer>:
 8012d86:	b480      	push	{r7}
 8012d88:	b089      	sub	sp, #36	@ 0x24
 8012d8a:	af00      	add	r7, sp, #0
 8012d8c:	6078      	str	r0, [r7, #4]
 8012d8e:	687b      	ldr	r3, [r7, #4]
 8012d90:	681b      	ldr	r3, [r3, #0]
 8012d92:	330c      	adds	r3, #12
 8012d94:	60fb      	str	r3, [r7, #12]
 8012d96:	68fb      	ldr	r3, [r7, #12]
 8012d98:	e853 3f00 	ldrex	r3, [r3]
 8012d9c:	60bb      	str	r3, [r7, #8]
 8012d9e:	68bb      	ldr	r3, [r7, #8]
 8012da0:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8012da4:	61fb      	str	r3, [r7, #28]
 8012da6:	687b      	ldr	r3, [r7, #4]
 8012da8:	681b      	ldr	r3, [r3, #0]
 8012daa:	330c      	adds	r3, #12
 8012dac:	69fa      	ldr	r2, [r7, #28]
 8012dae:	61ba      	str	r2, [r7, #24]
 8012db0:	617b      	str	r3, [r7, #20]
 8012db2:	6979      	ldr	r1, [r7, #20]
 8012db4:	69ba      	ldr	r2, [r7, #24]
 8012db6:	e841 2300 	strex	r3, r2, [r1]
 8012dba:	613b      	str	r3, [r7, #16]
 8012dbc:	693b      	ldr	r3, [r7, #16]
 8012dbe:	2b00      	cmp	r3, #0
 8012dc0:	d1e5      	bne.n	8012d8e <UART_EndTxTransfer+0x8>
 8012dc2:	687b      	ldr	r3, [r7, #4]
 8012dc4:	2220      	movs	r2, #32
 8012dc6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012dca:	bf00      	nop
 8012dcc:	3724      	adds	r7, #36	@ 0x24
 8012dce:	46bd      	mov	sp, r7
 8012dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012dd4:	4770      	bx	lr

08012dd6 <UART_EndRxTransfer>:
 8012dd6:	b480      	push	{r7}
 8012dd8:	b095      	sub	sp, #84	@ 0x54
 8012dda:	af00      	add	r7, sp, #0
 8012ddc:	6078      	str	r0, [r7, #4]
 8012dde:	687b      	ldr	r3, [r7, #4]
 8012de0:	681b      	ldr	r3, [r3, #0]
 8012de2:	330c      	adds	r3, #12
 8012de4:	637b      	str	r3, [r7, #52]	@ 0x34
 8012de6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8012de8:	e853 3f00 	ldrex	r3, [r3]
 8012dec:	633b      	str	r3, [r7, #48]	@ 0x30
 8012dee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8012df0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8012df4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8012df6:	687b      	ldr	r3, [r7, #4]
 8012df8:	681b      	ldr	r3, [r3, #0]
 8012dfa:	330c      	adds	r3, #12
 8012dfc:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8012dfe:	643a      	str	r2, [r7, #64]	@ 0x40
 8012e00:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012e02:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8012e04:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8012e06:	e841 2300 	strex	r3, r2, [r1]
 8012e0a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012e0c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8012e0e:	2b00      	cmp	r3, #0
 8012e10:	d1e5      	bne.n	8012dde <UART_EndRxTransfer+0x8>
 8012e12:	687b      	ldr	r3, [r7, #4]
 8012e14:	681b      	ldr	r3, [r3, #0]
 8012e16:	3314      	adds	r3, #20
 8012e18:	623b      	str	r3, [r7, #32]
 8012e1a:	6a3b      	ldr	r3, [r7, #32]
 8012e1c:	e853 3f00 	ldrex	r3, [r3]
 8012e20:	61fb      	str	r3, [r7, #28]
 8012e22:	69fb      	ldr	r3, [r7, #28]
 8012e24:	f023 0301 	bic.w	r3, r3, #1
 8012e28:	64bb      	str	r3, [r7, #72]	@ 0x48
 8012e2a:	687b      	ldr	r3, [r7, #4]
 8012e2c:	681b      	ldr	r3, [r3, #0]
 8012e2e:	3314      	adds	r3, #20
 8012e30:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8012e32:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8012e34:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012e36:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8012e38:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8012e3a:	e841 2300 	strex	r3, r2, [r1]
 8012e3e:	627b      	str	r3, [r7, #36]	@ 0x24
 8012e40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012e42:	2b00      	cmp	r3, #0
 8012e44:	d1e5      	bne.n	8012e12 <UART_EndRxTransfer+0x3c>
 8012e46:	687b      	ldr	r3, [r7, #4]
 8012e48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012e4a:	2b01      	cmp	r3, #1
 8012e4c:	d119      	bne.n	8012e82 <UART_EndRxTransfer+0xac>
 8012e4e:	687b      	ldr	r3, [r7, #4]
 8012e50:	681b      	ldr	r3, [r3, #0]
 8012e52:	330c      	adds	r3, #12
 8012e54:	60fb      	str	r3, [r7, #12]
 8012e56:	68fb      	ldr	r3, [r7, #12]
 8012e58:	e853 3f00 	ldrex	r3, [r3]
 8012e5c:	60bb      	str	r3, [r7, #8]
 8012e5e:	68bb      	ldr	r3, [r7, #8]
 8012e60:	f023 0310 	bic.w	r3, r3, #16
 8012e64:	647b      	str	r3, [r7, #68]	@ 0x44
 8012e66:	687b      	ldr	r3, [r7, #4]
 8012e68:	681b      	ldr	r3, [r3, #0]
 8012e6a:	330c      	adds	r3, #12
 8012e6c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012e6e:	61ba      	str	r2, [r7, #24]
 8012e70:	617b      	str	r3, [r7, #20]
 8012e72:	6979      	ldr	r1, [r7, #20]
 8012e74:	69ba      	ldr	r2, [r7, #24]
 8012e76:	e841 2300 	strex	r3, r2, [r1]
 8012e7a:	613b      	str	r3, [r7, #16]
 8012e7c:	693b      	ldr	r3, [r7, #16]
 8012e7e:	2b00      	cmp	r3, #0
 8012e80:	d1e5      	bne.n	8012e4e <UART_EndRxTransfer+0x78>
 8012e82:	687b      	ldr	r3, [r7, #4]
 8012e84:	2220      	movs	r2, #32
 8012e86:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012e8a:	687b      	ldr	r3, [r7, #4]
 8012e8c:	2200      	movs	r2, #0
 8012e8e:	631a      	str	r2, [r3, #48]	@ 0x30
 8012e90:	bf00      	nop
 8012e92:	3754      	adds	r7, #84	@ 0x54
 8012e94:	46bd      	mov	sp, r7
 8012e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e9a:	4770      	bx	lr

08012e9c <UART_DMAAbortOnError>:
 8012e9c:	b580      	push	{r7, lr}
 8012e9e:	b084      	sub	sp, #16
 8012ea0:	af00      	add	r7, sp, #0
 8012ea2:	6078      	str	r0, [r7, #4]
 8012ea4:	687b      	ldr	r3, [r7, #4]
 8012ea6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012ea8:	60fb      	str	r3, [r7, #12]
 8012eaa:	68fb      	ldr	r3, [r7, #12]
 8012eac:	2200      	movs	r2, #0
 8012eae:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012eb0:	68fb      	ldr	r3, [r7, #12]
 8012eb2:	2200      	movs	r2, #0
 8012eb4:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012eb6:	68f8      	ldr	r0, [r7, #12]
 8012eb8:	f7ff feaa 	bl	8012c10 <HAL_UART_ErrorCallback>
 8012ebc:	bf00      	nop
 8012ebe:	3710      	adds	r7, #16
 8012ec0:	46bd      	mov	sp, r7
 8012ec2:	bd80      	pop	{r7, pc}

08012ec4 <UART_Transmit_IT>:
 8012ec4:	b480      	push	{r7}
 8012ec6:	b085      	sub	sp, #20
 8012ec8:	af00      	add	r7, sp, #0
 8012eca:	6078      	str	r0, [r7, #4]
 8012ecc:	687b      	ldr	r3, [r7, #4]
 8012ece:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012ed2:	b2db      	uxtb	r3, r3
 8012ed4:	2b21      	cmp	r3, #33	@ 0x21
 8012ed6:	d13e      	bne.n	8012f56 <UART_Transmit_IT+0x92>
 8012ed8:	687b      	ldr	r3, [r7, #4]
 8012eda:	689b      	ldr	r3, [r3, #8]
 8012edc:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8012ee0:	d114      	bne.n	8012f0c <UART_Transmit_IT+0x48>
 8012ee2:	687b      	ldr	r3, [r7, #4]
 8012ee4:	691b      	ldr	r3, [r3, #16]
 8012ee6:	2b00      	cmp	r3, #0
 8012ee8:	d110      	bne.n	8012f0c <UART_Transmit_IT+0x48>
 8012eea:	687b      	ldr	r3, [r7, #4]
 8012eec:	6a1b      	ldr	r3, [r3, #32]
 8012eee:	60fb      	str	r3, [r7, #12]
 8012ef0:	68fb      	ldr	r3, [r7, #12]
 8012ef2:	881b      	ldrh	r3, [r3, #0]
 8012ef4:	461a      	mov	r2, r3
 8012ef6:	687b      	ldr	r3, [r7, #4]
 8012ef8:	681b      	ldr	r3, [r3, #0]
 8012efa:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8012efe:	605a      	str	r2, [r3, #4]
 8012f00:	687b      	ldr	r3, [r7, #4]
 8012f02:	6a1b      	ldr	r3, [r3, #32]
 8012f04:	1c9a      	adds	r2, r3, #2
 8012f06:	687b      	ldr	r3, [r7, #4]
 8012f08:	621a      	str	r2, [r3, #32]
 8012f0a:	e008      	b.n	8012f1e <UART_Transmit_IT+0x5a>
 8012f0c:	687b      	ldr	r3, [r7, #4]
 8012f0e:	6a1b      	ldr	r3, [r3, #32]
 8012f10:	1c59      	adds	r1, r3, #1
 8012f12:	687a      	ldr	r2, [r7, #4]
 8012f14:	6211      	str	r1, [r2, #32]
 8012f16:	781a      	ldrb	r2, [r3, #0]
 8012f18:	687b      	ldr	r3, [r7, #4]
 8012f1a:	681b      	ldr	r3, [r3, #0]
 8012f1c:	605a      	str	r2, [r3, #4]
 8012f1e:	687b      	ldr	r3, [r7, #4]
 8012f20:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8012f22:	b29b      	uxth	r3, r3
 8012f24:	3b01      	subs	r3, #1
 8012f26:	b29b      	uxth	r3, r3
 8012f28:	687a      	ldr	r2, [r7, #4]
 8012f2a:	4619      	mov	r1, r3
 8012f2c:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8012f2e:	2b00      	cmp	r3, #0
 8012f30:	d10f      	bne.n	8012f52 <UART_Transmit_IT+0x8e>
 8012f32:	687b      	ldr	r3, [r7, #4]
 8012f34:	681b      	ldr	r3, [r3, #0]
 8012f36:	68da      	ldr	r2, [r3, #12]
 8012f38:	687b      	ldr	r3, [r7, #4]
 8012f3a:	681b      	ldr	r3, [r3, #0]
 8012f3c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8012f40:	60da      	str	r2, [r3, #12]
 8012f42:	687b      	ldr	r3, [r7, #4]
 8012f44:	681b      	ldr	r3, [r3, #0]
 8012f46:	68da      	ldr	r2, [r3, #12]
 8012f48:	687b      	ldr	r3, [r7, #4]
 8012f4a:	681b      	ldr	r3, [r3, #0]
 8012f4c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8012f50:	60da      	str	r2, [r3, #12]
 8012f52:	2300      	movs	r3, #0
 8012f54:	e000      	b.n	8012f58 <UART_Transmit_IT+0x94>
 8012f56:	2302      	movs	r3, #2
 8012f58:	4618      	mov	r0, r3
 8012f5a:	3714      	adds	r7, #20
 8012f5c:	46bd      	mov	sp, r7
 8012f5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f62:	4770      	bx	lr

08012f64 <UART_EndTransmit_IT>:
 8012f64:	b580      	push	{r7, lr}
 8012f66:	b082      	sub	sp, #8
 8012f68:	af00      	add	r7, sp, #0
 8012f6a:	6078      	str	r0, [r7, #4]
 8012f6c:	687b      	ldr	r3, [r7, #4]
 8012f6e:	681b      	ldr	r3, [r3, #0]
 8012f70:	68da      	ldr	r2, [r3, #12]
 8012f72:	687b      	ldr	r3, [r7, #4]
 8012f74:	681b      	ldr	r3, [r3, #0]
 8012f76:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8012f7a:	60da      	str	r2, [r3, #12]
 8012f7c:	687b      	ldr	r3, [r7, #4]
 8012f7e:	2220      	movs	r2, #32
 8012f80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012f84:	6878      	ldr	r0, [r7, #4]
 8012f86:	f7ff fe25 	bl	8012bd4 <HAL_UART_TxCpltCallback>
 8012f8a:	2300      	movs	r3, #0
 8012f8c:	4618      	mov	r0, r3
 8012f8e:	3708      	adds	r7, #8
 8012f90:	46bd      	mov	sp, r7
 8012f92:	bd80      	pop	{r7, pc}

08012f94 <UART_Receive_IT>:
 8012f94:	b580      	push	{r7, lr}
 8012f96:	b08c      	sub	sp, #48	@ 0x30
 8012f98:	af00      	add	r7, sp, #0
 8012f9a:	6078      	str	r0, [r7, #4]
 8012f9c:	687b      	ldr	r3, [r7, #4]
 8012f9e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012fa2:	b2db      	uxtb	r3, r3
 8012fa4:	2b22      	cmp	r3, #34	@ 0x22
 8012fa6:	f040 80ab 	bne.w	8013100 <UART_Receive_IT+0x16c>
 8012faa:	687b      	ldr	r3, [r7, #4]
 8012fac:	689b      	ldr	r3, [r3, #8]
 8012fae:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8012fb2:	d117      	bne.n	8012fe4 <UART_Receive_IT+0x50>
 8012fb4:	687b      	ldr	r3, [r7, #4]
 8012fb6:	691b      	ldr	r3, [r3, #16]
 8012fb8:	2b00      	cmp	r3, #0
 8012fba:	d113      	bne.n	8012fe4 <UART_Receive_IT+0x50>
 8012fbc:	2300      	movs	r3, #0
 8012fbe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012fc0:	687b      	ldr	r3, [r7, #4]
 8012fc2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012fc4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012fc6:	687b      	ldr	r3, [r7, #4]
 8012fc8:	681b      	ldr	r3, [r3, #0]
 8012fca:	685b      	ldr	r3, [r3, #4]
 8012fcc:	b29b      	uxth	r3, r3
 8012fce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8012fd2:	b29a      	uxth	r2, r3
 8012fd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012fd6:	801a      	strh	r2, [r3, #0]
 8012fd8:	687b      	ldr	r3, [r7, #4]
 8012fda:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012fdc:	1c9a      	adds	r2, r3, #2
 8012fde:	687b      	ldr	r3, [r7, #4]
 8012fe0:	629a      	str	r2, [r3, #40]	@ 0x28
 8012fe2:	e026      	b.n	8013032 <UART_Receive_IT+0x9e>
 8012fe4:	687b      	ldr	r3, [r7, #4]
 8012fe6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012fe8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012fea:	2300      	movs	r3, #0
 8012fec:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012fee:	687b      	ldr	r3, [r7, #4]
 8012ff0:	689b      	ldr	r3, [r3, #8]
 8012ff2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8012ff6:	d007      	beq.n	8013008 <UART_Receive_IT+0x74>
 8012ff8:	687b      	ldr	r3, [r7, #4]
 8012ffa:	689b      	ldr	r3, [r3, #8]
 8012ffc:	2b00      	cmp	r3, #0
 8012ffe:	d10a      	bne.n	8013016 <UART_Receive_IT+0x82>
 8013000:	687b      	ldr	r3, [r7, #4]
 8013002:	691b      	ldr	r3, [r3, #16]
 8013004:	2b00      	cmp	r3, #0
 8013006:	d106      	bne.n	8013016 <UART_Receive_IT+0x82>
 8013008:	687b      	ldr	r3, [r7, #4]
 801300a:	681b      	ldr	r3, [r3, #0]
 801300c:	685b      	ldr	r3, [r3, #4]
 801300e:	b2da      	uxtb	r2, r3
 8013010:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013012:	701a      	strb	r2, [r3, #0]
 8013014:	e008      	b.n	8013028 <UART_Receive_IT+0x94>
 8013016:	687b      	ldr	r3, [r7, #4]
 8013018:	681b      	ldr	r3, [r3, #0]
 801301a:	685b      	ldr	r3, [r3, #4]
 801301c:	b2db      	uxtb	r3, r3
 801301e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8013022:	b2da      	uxtb	r2, r3
 8013024:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013026:	701a      	strb	r2, [r3, #0]
 8013028:	687b      	ldr	r3, [r7, #4]
 801302a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801302c:	1c5a      	adds	r2, r3, #1
 801302e:	687b      	ldr	r3, [r7, #4]
 8013030:	629a      	str	r2, [r3, #40]	@ 0x28
 8013032:	687b      	ldr	r3, [r7, #4]
 8013034:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8013036:	b29b      	uxth	r3, r3
 8013038:	3b01      	subs	r3, #1
 801303a:	b29b      	uxth	r3, r3
 801303c:	687a      	ldr	r2, [r7, #4]
 801303e:	4619      	mov	r1, r3
 8013040:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8013042:	2b00      	cmp	r3, #0
 8013044:	d15a      	bne.n	80130fc <UART_Receive_IT+0x168>
 8013046:	687b      	ldr	r3, [r7, #4]
 8013048:	681b      	ldr	r3, [r3, #0]
 801304a:	68da      	ldr	r2, [r3, #12]
 801304c:	687b      	ldr	r3, [r7, #4]
 801304e:	681b      	ldr	r3, [r3, #0]
 8013050:	f022 0220 	bic.w	r2, r2, #32
 8013054:	60da      	str	r2, [r3, #12]
 8013056:	687b      	ldr	r3, [r7, #4]
 8013058:	681b      	ldr	r3, [r3, #0]
 801305a:	68da      	ldr	r2, [r3, #12]
 801305c:	687b      	ldr	r3, [r7, #4]
 801305e:	681b      	ldr	r3, [r3, #0]
 8013060:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8013064:	60da      	str	r2, [r3, #12]
 8013066:	687b      	ldr	r3, [r7, #4]
 8013068:	681b      	ldr	r3, [r3, #0]
 801306a:	695a      	ldr	r2, [r3, #20]
 801306c:	687b      	ldr	r3, [r7, #4]
 801306e:	681b      	ldr	r3, [r3, #0]
 8013070:	f022 0201 	bic.w	r2, r2, #1
 8013074:	615a      	str	r2, [r3, #20]
 8013076:	687b      	ldr	r3, [r7, #4]
 8013078:	2220      	movs	r2, #32
 801307a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801307e:	687b      	ldr	r3, [r7, #4]
 8013080:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013082:	2b01      	cmp	r3, #1
 8013084:	d135      	bne.n	80130f2 <UART_Receive_IT+0x15e>
 8013086:	687b      	ldr	r3, [r7, #4]
 8013088:	2200      	movs	r2, #0
 801308a:	631a      	str	r2, [r3, #48]	@ 0x30
 801308c:	687b      	ldr	r3, [r7, #4]
 801308e:	681b      	ldr	r3, [r3, #0]
 8013090:	330c      	adds	r3, #12
 8013092:	617b      	str	r3, [r7, #20]
 8013094:	697b      	ldr	r3, [r7, #20]
 8013096:	e853 3f00 	ldrex	r3, [r3]
 801309a:	613b      	str	r3, [r7, #16]
 801309c:	693b      	ldr	r3, [r7, #16]
 801309e:	f023 0310 	bic.w	r3, r3, #16
 80130a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80130a4:	687b      	ldr	r3, [r7, #4]
 80130a6:	681b      	ldr	r3, [r3, #0]
 80130a8:	330c      	adds	r3, #12
 80130aa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80130ac:	623a      	str	r2, [r7, #32]
 80130ae:	61fb      	str	r3, [r7, #28]
 80130b0:	69f9      	ldr	r1, [r7, #28]
 80130b2:	6a3a      	ldr	r2, [r7, #32]
 80130b4:	e841 2300 	strex	r3, r2, [r1]
 80130b8:	61bb      	str	r3, [r7, #24]
 80130ba:	69bb      	ldr	r3, [r7, #24]
 80130bc:	2b00      	cmp	r3, #0
 80130be:	d1e5      	bne.n	801308c <UART_Receive_IT+0xf8>
 80130c0:	687b      	ldr	r3, [r7, #4]
 80130c2:	681b      	ldr	r3, [r3, #0]
 80130c4:	681b      	ldr	r3, [r3, #0]
 80130c6:	f003 0310 	and.w	r3, r3, #16
 80130ca:	2b10      	cmp	r3, #16
 80130cc:	d10a      	bne.n	80130e4 <UART_Receive_IT+0x150>
 80130ce:	2300      	movs	r3, #0
 80130d0:	60fb      	str	r3, [r7, #12]
 80130d2:	687b      	ldr	r3, [r7, #4]
 80130d4:	681b      	ldr	r3, [r3, #0]
 80130d6:	681b      	ldr	r3, [r3, #0]
 80130d8:	60fb      	str	r3, [r7, #12]
 80130da:	687b      	ldr	r3, [r7, #4]
 80130dc:	681b      	ldr	r3, [r3, #0]
 80130de:	685b      	ldr	r3, [r3, #4]
 80130e0:	60fb      	str	r3, [r7, #12]
 80130e2:	68fb      	ldr	r3, [r7, #12]
 80130e4:	687b      	ldr	r3, [r7, #4]
 80130e6:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80130e8:	4619      	mov	r1, r3
 80130ea:	6878      	ldr	r0, [r7, #4]
 80130ec:	f7ff fd9a 	bl	8012c24 <HAL_UARTEx_RxEventCallback>
 80130f0:	e002      	b.n	80130f8 <UART_Receive_IT+0x164>
 80130f2:	6878      	ldr	r0, [r7, #4]
 80130f4:	f7ff fd82 	bl	8012bfc <HAL_UART_RxCpltCallback>
 80130f8:	2300      	movs	r3, #0
 80130fa:	e002      	b.n	8013102 <UART_Receive_IT+0x16e>
 80130fc:	2300      	movs	r3, #0
 80130fe:	e000      	b.n	8013102 <UART_Receive_IT+0x16e>
 8013100:	2302      	movs	r3, #2
 8013102:	4618      	mov	r0, r3
 8013104:	3730      	adds	r7, #48	@ 0x30
 8013106:	46bd      	mov	sp, r7
 8013108:	bd80      	pop	{r7, pc}
	...

0801310c <UART_SetConfig>:
 801310c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8013110:	b0c0      	sub	sp, #256	@ 0x100
 8013112:	af00      	add	r7, sp, #0
 8013114:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8013118:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801311c:	681b      	ldr	r3, [r3, #0]
 801311e:	691b      	ldr	r3, [r3, #16]
 8013120:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8013124:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013128:	68d9      	ldr	r1, [r3, #12]
 801312a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801312e:	681a      	ldr	r2, [r3, #0]
 8013130:	ea40 0301 	orr.w	r3, r0, r1
 8013134:	6113      	str	r3, [r2, #16]
 8013136:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801313a:	689a      	ldr	r2, [r3, #8]
 801313c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013140:	691b      	ldr	r3, [r3, #16]
 8013142:	431a      	orrs	r2, r3
 8013144:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013148:	695b      	ldr	r3, [r3, #20]
 801314a:	431a      	orrs	r2, r3
 801314c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013150:	69db      	ldr	r3, [r3, #28]
 8013152:	4313      	orrs	r3, r2
 8013154:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8013158:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801315c:	681b      	ldr	r3, [r3, #0]
 801315e:	68db      	ldr	r3, [r3, #12]
 8013160:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8013164:	f021 010c 	bic.w	r1, r1, #12
 8013168:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801316c:	681a      	ldr	r2, [r3, #0]
 801316e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8013172:	430b      	orrs	r3, r1
 8013174:	60d3      	str	r3, [r2, #12]
 8013176:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801317a:	681b      	ldr	r3, [r3, #0]
 801317c:	695b      	ldr	r3, [r3, #20]
 801317e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8013182:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013186:	6999      	ldr	r1, [r3, #24]
 8013188:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801318c:	681a      	ldr	r2, [r3, #0]
 801318e:	ea40 0301 	orr.w	r3, r0, r1
 8013192:	6153      	str	r3, [r2, #20]
 8013194:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013198:	681a      	ldr	r2, [r3, #0]
 801319a:	4b8f      	ldr	r3, [pc, #572]	@ (80133d8 <UART_SetConfig+0x2cc>)
 801319c:	429a      	cmp	r2, r3
 801319e:	d005      	beq.n	80131ac <UART_SetConfig+0xa0>
 80131a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131a4:	681a      	ldr	r2, [r3, #0]
 80131a6:	4b8d      	ldr	r3, [pc, #564]	@ (80133dc <UART_SetConfig+0x2d0>)
 80131a8:	429a      	cmp	r2, r3
 80131aa:	d104      	bne.n	80131b6 <UART_SetConfig+0xaa>
 80131ac:	f7fd fb76 	bl	801089c <HAL_RCC_GetPCLK2Freq>
 80131b0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80131b4:	e003      	b.n	80131be <UART_SetConfig+0xb2>
 80131b6:	f7fd fb5d 	bl	8010874 <HAL_RCC_GetPCLK1Freq>
 80131ba:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80131be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131c2:	69db      	ldr	r3, [r3, #28]
 80131c4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80131c8:	f040 810c 	bne.w	80133e4 <UART_SetConfig+0x2d8>
 80131cc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80131d0:	2200      	movs	r2, #0
 80131d2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80131d6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80131da:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80131de:	4622      	mov	r2, r4
 80131e0:	462b      	mov	r3, r5
 80131e2:	1891      	adds	r1, r2, r2
 80131e4:	65b9      	str	r1, [r7, #88]	@ 0x58
 80131e6:	415b      	adcs	r3, r3
 80131e8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80131ea:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80131ee:	4621      	mov	r1, r4
 80131f0:	eb12 0801 	adds.w	r8, r2, r1
 80131f4:	4629      	mov	r1, r5
 80131f6:	eb43 0901 	adc.w	r9, r3, r1
 80131fa:	f04f 0200 	mov.w	r2, #0
 80131fe:	f04f 0300 	mov.w	r3, #0
 8013202:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8013206:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 801320a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 801320e:	4690      	mov	r8, r2
 8013210:	4699      	mov	r9, r3
 8013212:	4623      	mov	r3, r4
 8013214:	eb18 0303 	adds.w	r3, r8, r3
 8013218:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 801321c:	462b      	mov	r3, r5
 801321e:	eb49 0303 	adc.w	r3, r9, r3
 8013222:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8013226:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801322a:	685b      	ldr	r3, [r3, #4]
 801322c:	2200      	movs	r2, #0
 801322e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8013232:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8013236:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 801323a:	460b      	mov	r3, r1
 801323c:	18db      	adds	r3, r3, r3
 801323e:	653b      	str	r3, [r7, #80]	@ 0x50
 8013240:	4613      	mov	r3, r2
 8013242:	eb42 0303 	adc.w	r3, r2, r3
 8013246:	657b      	str	r3, [r7, #84]	@ 0x54
 8013248:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 801324c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8013250:	f7ed fd1a 	bl	8000c88 <__aeabi_uldivmod>
 8013254:	4602      	mov	r2, r0
 8013256:	460b      	mov	r3, r1
 8013258:	4b61      	ldr	r3, [pc, #388]	@ (80133e0 <UART_SetConfig+0x2d4>)
 801325a:	fba3 2302 	umull	r2, r3, r3, r2
 801325e:	095b      	lsrs	r3, r3, #5
 8013260:	011c      	lsls	r4, r3, #4
 8013262:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013266:	2200      	movs	r2, #0
 8013268:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 801326c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8013270:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8013274:	4642      	mov	r2, r8
 8013276:	464b      	mov	r3, r9
 8013278:	1891      	adds	r1, r2, r2
 801327a:	64b9      	str	r1, [r7, #72]	@ 0x48
 801327c:	415b      	adcs	r3, r3
 801327e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8013280:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8013284:	4641      	mov	r1, r8
 8013286:	eb12 0a01 	adds.w	sl, r2, r1
 801328a:	4649      	mov	r1, r9
 801328c:	eb43 0b01 	adc.w	fp, r3, r1
 8013290:	f04f 0200 	mov.w	r2, #0
 8013294:	f04f 0300 	mov.w	r3, #0
 8013298:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 801329c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80132a0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80132a4:	4692      	mov	sl, r2
 80132a6:	469b      	mov	fp, r3
 80132a8:	4643      	mov	r3, r8
 80132aa:	eb1a 0303 	adds.w	r3, sl, r3
 80132ae:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80132b2:	464b      	mov	r3, r9
 80132b4:	eb4b 0303 	adc.w	r3, fp, r3
 80132b8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80132bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132c0:	685b      	ldr	r3, [r3, #4]
 80132c2:	2200      	movs	r2, #0
 80132c4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80132c8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80132cc:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80132d0:	460b      	mov	r3, r1
 80132d2:	18db      	adds	r3, r3, r3
 80132d4:	643b      	str	r3, [r7, #64]	@ 0x40
 80132d6:	4613      	mov	r3, r2
 80132d8:	eb42 0303 	adc.w	r3, r2, r3
 80132dc:	647b      	str	r3, [r7, #68]	@ 0x44
 80132de:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80132e2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80132e6:	f7ed fccf 	bl	8000c88 <__aeabi_uldivmod>
 80132ea:	4602      	mov	r2, r0
 80132ec:	460b      	mov	r3, r1
 80132ee:	4611      	mov	r1, r2
 80132f0:	4b3b      	ldr	r3, [pc, #236]	@ (80133e0 <UART_SetConfig+0x2d4>)
 80132f2:	fba3 2301 	umull	r2, r3, r3, r1
 80132f6:	095b      	lsrs	r3, r3, #5
 80132f8:	2264      	movs	r2, #100	@ 0x64
 80132fa:	fb02 f303 	mul.w	r3, r2, r3
 80132fe:	1acb      	subs	r3, r1, r3
 8013300:	00db      	lsls	r3, r3, #3
 8013302:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8013306:	4b36      	ldr	r3, [pc, #216]	@ (80133e0 <UART_SetConfig+0x2d4>)
 8013308:	fba3 2302 	umull	r2, r3, r3, r2
 801330c:	095b      	lsrs	r3, r3, #5
 801330e:	005b      	lsls	r3, r3, #1
 8013310:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8013314:	441c      	add	r4, r3
 8013316:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 801331a:	2200      	movs	r2, #0
 801331c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8013320:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8013324:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8013328:	4642      	mov	r2, r8
 801332a:	464b      	mov	r3, r9
 801332c:	1891      	adds	r1, r2, r2
 801332e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8013330:	415b      	adcs	r3, r3
 8013332:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013334:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8013338:	4641      	mov	r1, r8
 801333a:	1851      	adds	r1, r2, r1
 801333c:	6339      	str	r1, [r7, #48]	@ 0x30
 801333e:	4649      	mov	r1, r9
 8013340:	414b      	adcs	r3, r1
 8013342:	637b      	str	r3, [r7, #52]	@ 0x34
 8013344:	f04f 0200 	mov.w	r2, #0
 8013348:	f04f 0300 	mov.w	r3, #0
 801334c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8013350:	4659      	mov	r1, fp
 8013352:	00cb      	lsls	r3, r1, #3
 8013354:	4651      	mov	r1, sl
 8013356:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 801335a:	4651      	mov	r1, sl
 801335c:	00ca      	lsls	r2, r1, #3
 801335e:	4610      	mov	r0, r2
 8013360:	4619      	mov	r1, r3
 8013362:	4603      	mov	r3, r0
 8013364:	4642      	mov	r2, r8
 8013366:	189b      	adds	r3, r3, r2
 8013368:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 801336c:	464b      	mov	r3, r9
 801336e:	460a      	mov	r2, r1
 8013370:	eb42 0303 	adc.w	r3, r2, r3
 8013374:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8013378:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801337c:	685b      	ldr	r3, [r3, #4]
 801337e:	2200      	movs	r2, #0
 8013380:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8013384:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8013388:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 801338c:	460b      	mov	r3, r1
 801338e:	18db      	adds	r3, r3, r3
 8013390:	62bb      	str	r3, [r7, #40]	@ 0x28
 8013392:	4613      	mov	r3, r2
 8013394:	eb42 0303 	adc.w	r3, r2, r3
 8013398:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801339a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 801339e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80133a2:	f7ed fc71 	bl	8000c88 <__aeabi_uldivmod>
 80133a6:	4602      	mov	r2, r0
 80133a8:	460b      	mov	r3, r1
 80133aa:	4b0d      	ldr	r3, [pc, #52]	@ (80133e0 <UART_SetConfig+0x2d4>)
 80133ac:	fba3 1302 	umull	r1, r3, r3, r2
 80133b0:	095b      	lsrs	r3, r3, #5
 80133b2:	2164      	movs	r1, #100	@ 0x64
 80133b4:	fb01 f303 	mul.w	r3, r1, r3
 80133b8:	1ad3      	subs	r3, r2, r3
 80133ba:	00db      	lsls	r3, r3, #3
 80133bc:	3332      	adds	r3, #50	@ 0x32
 80133be:	4a08      	ldr	r2, [pc, #32]	@ (80133e0 <UART_SetConfig+0x2d4>)
 80133c0:	fba2 2303 	umull	r2, r3, r2, r3
 80133c4:	095b      	lsrs	r3, r3, #5
 80133c6:	f003 0207 	and.w	r2, r3, #7
 80133ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80133ce:	681b      	ldr	r3, [r3, #0]
 80133d0:	4422      	add	r2, r4
 80133d2:	609a      	str	r2, [r3, #8]
 80133d4:	e106      	b.n	80135e4 <UART_SetConfig+0x4d8>
 80133d6:	bf00      	nop
 80133d8:	40011000 	.word	0x40011000
 80133dc:	40011400 	.word	0x40011400
 80133e0:	51eb851f 	.word	0x51eb851f
 80133e4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80133e8:	2200      	movs	r2, #0
 80133ea:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80133ee:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80133f2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80133f6:	4642      	mov	r2, r8
 80133f8:	464b      	mov	r3, r9
 80133fa:	1891      	adds	r1, r2, r2
 80133fc:	6239      	str	r1, [r7, #32]
 80133fe:	415b      	adcs	r3, r3
 8013400:	627b      	str	r3, [r7, #36]	@ 0x24
 8013402:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8013406:	4641      	mov	r1, r8
 8013408:	1854      	adds	r4, r2, r1
 801340a:	4649      	mov	r1, r9
 801340c:	eb43 0501 	adc.w	r5, r3, r1
 8013410:	f04f 0200 	mov.w	r2, #0
 8013414:	f04f 0300 	mov.w	r3, #0
 8013418:	00eb      	lsls	r3, r5, #3
 801341a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 801341e:	00e2      	lsls	r2, r4, #3
 8013420:	4614      	mov	r4, r2
 8013422:	461d      	mov	r5, r3
 8013424:	4643      	mov	r3, r8
 8013426:	18e3      	adds	r3, r4, r3
 8013428:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 801342c:	464b      	mov	r3, r9
 801342e:	eb45 0303 	adc.w	r3, r5, r3
 8013432:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8013436:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801343a:	685b      	ldr	r3, [r3, #4]
 801343c:	2200      	movs	r2, #0
 801343e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8013442:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8013446:	f04f 0200 	mov.w	r2, #0
 801344a:	f04f 0300 	mov.w	r3, #0
 801344e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8013452:	4629      	mov	r1, r5
 8013454:	008b      	lsls	r3, r1, #2
 8013456:	4621      	mov	r1, r4
 8013458:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 801345c:	4621      	mov	r1, r4
 801345e:	008a      	lsls	r2, r1, #2
 8013460:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8013464:	f7ed fc10 	bl	8000c88 <__aeabi_uldivmod>
 8013468:	4602      	mov	r2, r0
 801346a:	460b      	mov	r3, r1
 801346c:	4b60      	ldr	r3, [pc, #384]	@ (80135f0 <UART_SetConfig+0x4e4>)
 801346e:	fba3 2302 	umull	r2, r3, r3, r2
 8013472:	095b      	lsrs	r3, r3, #5
 8013474:	011c      	lsls	r4, r3, #4
 8013476:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 801347a:	2200      	movs	r2, #0
 801347c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8013480:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8013484:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8013488:	4642      	mov	r2, r8
 801348a:	464b      	mov	r3, r9
 801348c:	1891      	adds	r1, r2, r2
 801348e:	61b9      	str	r1, [r7, #24]
 8013490:	415b      	adcs	r3, r3
 8013492:	61fb      	str	r3, [r7, #28]
 8013494:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8013498:	4641      	mov	r1, r8
 801349a:	1851      	adds	r1, r2, r1
 801349c:	6139      	str	r1, [r7, #16]
 801349e:	4649      	mov	r1, r9
 80134a0:	414b      	adcs	r3, r1
 80134a2:	617b      	str	r3, [r7, #20]
 80134a4:	f04f 0200 	mov.w	r2, #0
 80134a8:	f04f 0300 	mov.w	r3, #0
 80134ac:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80134b0:	4659      	mov	r1, fp
 80134b2:	00cb      	lsls	r3, r1, #3
 80134b4:	4651      	mov	r1, sl
 80134b6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80134ba:	4651      	mov	r1, sl
 80134bc:	00ca      	lsls	r2, r1, #3
 80134be:	4610      	mov	r0, r2
 80134c0:	4619      	mov	r1, r3
 80134c2:	4603      	mov	r3, r0
 80134c4:	4642      	mov	r2, r8
 80134c6:	189b      	adds	r3, r3, r2
 80134c8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80134cc:	464b      	mov	r3, r9
 80134ce:	460a      	mov	r2, r1
 80134d0:	eb42 0303 	adc.w	r3, r2, r3
 80134d4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80134d8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80134dc:	685b      	ldr	r3, [r3, #4]
 80134de:	2200      	movs	r2, #0
 80134e0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80134e2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80134e4:	f04f 0200 	mov.w	r2, #0
 80134e8:	f04f 0300 	mov.w	r3, #0
 80134ec:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80134f0:	4649      	mov	r1, r9
 80134f2:	008b      	lsls	r3, r1, #2
 80134f4:	4641      	mov	r1, r8
 80134f6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80134fa:	4641      	mov	r1, r8
 80134fc:	008a      	lsls	r2, r1, #2
 80134fe:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8013502:	f7ed fbc1 	bl	8000c88 <__aeabi_uldivmod>
 8013506:	4602      	mov	r2, r0
 8013508:	460b      	mov	r3, r1
 801350a:	4611      	mov	r1, r2
 801350c:	4b38      	ldr	r3, [pc, #224]	@ (80135f0 <UART_SetConfig+0x4e4>)
 801350e:	fba3 2301 	umull	r2, r3, r3, r1
 8013512:	095b      	lsrs	r3, r3, #5
 8013514:	2264      	movs	r2, #100	@ 0x64
 8013516:	fb02 f303 	mul.w	r3, r2, r3
 801351a:	1acb      	subs	r3, r1, r3
 801351c:	011b      	lsls	r3, r3, #4
 801351e:	3332      	adds	r3, #50	@ 0x32
 8013520:	4a33      	ldr	r2, [pc, #204]	@ (80135f0 <UART_SetConfig+0x4e4>)
 8013522:	fba2 2303 	umull	r2, r3, r2, r3
 8013526:	095b      	lsrs	r3, r3, #5
 8013528:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 801352c:	441c      	add	r4, r3
 801352e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013532:	2200      	movs	r2, #0
 8013534:	673b      	str	r3, [r7, #112]	@ 0x70
 8013536:	677a      	str	r2, [r7, #116]	@ 0x74
 8013538:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 801353c:	4642      	mov	r2, r8
 801353e:	464b      	mov	r3, r9
 8013540:	1891      	adds	r1, r2, r2
 8013542:	60b9      	str	r1, [r7, #8]
 8013544:	415b      	adcs	r3, r3
 8013546:	60fb      	str	r3, [r7, #12]
 8013548:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 801354c:	4641      	mov	r1, r8
 801354e:	1851      	adds	r1, r2, r1
 8013550:	6039      	str	r1, [r7, #0]
 8013552:	4649      	mov	r1, r9
 8013554:	414b      	adcs	r3, r1
 8013556:	607b      	str	r3, [r7, #4]
 8013558:	f04f 0200 	mov.w	r2, #0
 801355c:	f04f 0300 	mov.w	r3, #0
 8013560:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8013564:	4659      	mov	r1, fp
 8013566:	00cb      	lsls	r3, r1, #3
 8013568:	4651      	mov	r1, sl
 801356a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 801356e:	4651      	mov	r1, sl
 8013570:	00ca      	lsls	r2, r1, #3
 8013572:	4610      	mov	r0, r2
 8013574:	4619      	mov	r1, r3
 8013576:	4603      	mov	r3, r0
 8013578:	4642      	mov	r2, r8
 801357a:	189b      	adds	r3, r3, r2
 801357c:	66bb      	str	r3, [r7, #104]	@ 0x68
 801357e:	464b      	mov	r3, r9
 8013580:	460a      	mov	r2, r1
 8013582:	eb42 0303 	adc.w	r3, r2, r3
 8013586:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8013588:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801358c:	685b      	ldr	r3, [r3, #4]
 801358e:	2200      	movs	r2, #0
 8013590:	663b      	str	r3, [r7, #96]	@ 0x60
 8013592:	667a      	str	r2, [r7, #100]	@ 0x64
 8013594:	f04f 0200 	mov.w	r2, #0
 8013598:	f04f 0300 	mov.w	r3, #0
 801359c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80135a0:	4649      	mov	r1, r9
 80135a2:	008b      	lsls	r3, r1, #2
 80135a4:	4641      	mov	r1, r8
 80135a6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80135aa:	4641      	mov	r1, r8
 80135ac:	008a      	lsls	r2, r1, #2
 80135ae:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80135b2:	f7ed fb69 	bl	8000c88 <__aeabi_uldivmod>
 80135b6:	4602      	mov	r2, r0
 80135b8:	460b      	mov	r3, r1
 80135ba:	4b0d      	ldr	r3, [pc, #52]	@ (80135f0 <UART_SetConfig+0x4e4>)
 80135bc:	fba3 1302 	umull	r1, r3, r3, r2
 80135c0:	095b      	lsrs	r3, r3, #5
 80135c2:	2164      	movs	r1, #100	@ 0x64
 80135c4:	fb01 f303 	mul.w	r3, r1, r3
 80135c8:	1ad3      	subs	r3, r2, r3
 80135ca:	011b      	lsls	r3, r3, #4
 80135cc:	3332      	adds	r3, #50	@ 0x32
 80135ce:	4a08      	ldr	r2, [pc, #32]	@ (80135f0 <UART_SetConfig+0x4e4>)
 80135d0:	fba2 2303 	umull	r2, r3, r2, r3
 80135d4:	095b      	lsrs	r3, r3, #5
 80135d6:	f003 020f 	and.w	r2, r3, #15
 80135da:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80135de:	681b      	ldr	r3, [r3, #0]
 80135e0:	4422      	add	r2, r4
 80135e2:	609a      	str	r2, [r3, #8]
 80135e4:	bf00      	nop
 80135e6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80135ea:	46bd      	mov	sp, r7
 80135ec:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80135f0:	51eb851f 	.word	0x51eb851f

080135f4 <LL_TIM_SetPrescaler>:
 80135f4:	b480      	push	{r7}
 80135f6:	b083      	sub	sp, #12
 80135f8:	af00      	add	r7, sp, #0
 80135fa:	6078      	str	r0, [r7, #4]
 80135fc:	6039      	str	r1, [r7, #0]
 80135fe:	687b      	ldr	r3, [r7, #4]
 8013600:	683a      	ldr	r2, [r7, #0]
 8013602:	629a      	str	r2, [r3, #40]	@ 0x28
 8013604:	bf00      	nop
 8013606:	370c      	adds	r7, #12
 8013608:	46bd      	mov	sp, r7
 801360a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801360e:	4770      	bx	lr

08013610 <LL_TIM_SetAutoReload>:
 8013610:	b480      	push	{r7}
 8013612:	b083      	sub	sp, #12
 8013614:	af00      	add	r7, sp, #0
 8013616:	6078      	str	r0, [r7, #4]
 8013618:	6039      	str	r1, [r7, #0]
 801361a:	687b      	ldr	r3, [r7, #4]
 801361c:	683a      	ldr	r2, [r7, #0]
 801361e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8013620:	bf00      	nop
 8013622:	370c      	adds	r7, #12
 8013624:	46bd      	mov	sp, r7
 8013626:	f85d 7b04 	ldr.w	r7, [sp], #4
 801362a:	4770      	bx	lr

0801362c <LL_TIM_SetRepetitionCounter>:
 801362c:	b480      	push	{r7}
 801362e:	b083      	sub	sp, #12
 8013630:	af00      	add	r7, sp, #0
 8013632:	6078      	str	r0, [r7, #4]
 8013634:	6039      	str	r1, [r7, #0]
 8013636:	687b      	ldr	r3, [r7, #4]
 8013638:	683a      	ldr	r2, [r7, #0]
 801363a:	631a      	str	r2, [r3, #48]	@ 0x30
 801363c:	bf00      	nop
 801363e:	370c      	adds	r7, #12
 8013640:	46bd      	mov	sp, r7
 8013642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013646:	4770      	bx	lr

08013648 <LL_TIM_GenerateEvent_UPDATE>:
 8013648:	b480      	push	{r7}
 801364a:	b083      	sub	sp, #12
 801364c:	af00      	add	r7, sp, #0
 801364e:	6078      	str	r0, [r7, #4]
 8013650:	687b      	ldr	r3, [r7, #4]
 8013652:	695b      	ldr	r3, [r3, #20]
 8013654:	f043 0201 	orr.w	r2, r3, #1
 8013658:	687b      	ldr	r3, [r7, #4]
 801365a:	615a      	str	r2, [r3, #20]
 801365c:	bf00      	nop
 801365e:	370c      	adds	r7, #12
 8013660:	46bd      	mov	sp, r7
 8013662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013666:	4770      	bx	lr

08013668 <LL_TIM_Init>:
 8013668:	b580      	push	{r7, lr}
 801366a:	b084      	sub	sp, #16
 801366c:	af00      	add	r7, sp, #0
 801366e:	6078      	str	r0, [r7, #4]
 8013670:	6039      	str	r1, [r7, #0]
 8013672:	687b      	ldr	r3, [r7, #4]
 8013674:	681b      	ldr	r3, [r3, #0]
 8013676:	60fb      	str	r3, [r7, #12]
 8013678:	687b      	ldr	r3, [r7, #4]
 801367a:	4a3d      	ldr	r2, [pc, #244]	@ (8013770 <LL_TIM_Init+0x108>)
 801367c:	4293      	cmp	r3, r2
 801367e:	d013      	beq.n	80136a8 <LL_TIM_Init+0x40>
 8013680:	687b      	ldr	r3, [r7, #4]
 8013682:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8013686:	d00f      	beq.n	80136a8 <LL_TIM_Init+0x40>
 8013688:	687b      	ldr	r3, [r7, #4]
 801368a:	4a3a      	ldr	r2, [pc, #232]	@ (8013774 <LL_TIM_Init+0x10c>)
 801368c:	4293      	cmp	r3, r2
 801368e:	d00b      	beq.n	80136a8 <LL_TIM_Init+0x40>
 8013690:	687b      	ldr	r3, [r7, #4]
 8013692:	4a39      	ldr	r2, [pc, #228]	@ (8013778 <LL_TIM_Init+0x110>)
 8013694:	4293      	cmp	r3, r2
 8013696:	d007      	beq.n	80136a8 <LL_TIM_Init+0x40>
 8013698:	687b      	ldr	r3, [r7, #4]
 801369a:	4a38      	ldr	r2, [pc, #224]	@ (801377c <LL_TIM_Init+0x114>)
 801369c:	4293      	cmp	r3, r2
 801369e:	d003      	beq.n	80136a8 <LL_TIM_Init+0x40>
 80136a0:	687b      	ldr	r3, [r7, #4]
 80136a2:	4a37      	ldr	r2, [pc, #220]	@ (8013780 <LL_TIM_Init+0x118>)
 80136a4:	4293      	cmp	r3, r2
 80136a6:	d106      	bne.n	80136b6 <LL_TIM_Init+0x4e>
 80136a8:	68fb      	ldr	r3, [r7, #12]
 80136aa:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80136ae:	683b      	ldr	r3, [r7, #0]
 80136b0:	685b      	ldr	r3, [r3, #4]
 80136b2:	4313      	orrs	r3, r2
 80136b4:	60fb      	str	r3, [r7, #12]
 80136b6:	687b      	ldr	r3, [r7, #4]
 80136b8:	4a2d      	ldr	r2, [pc, #180]	@ (8013770 <LL_TIM_Init+0x108>)
 80136ba:	4293      	cmp	r3, r2
 80136bc:	d02b      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136be:	687b      	ldr	r3, [r7, #4]
 80136c0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80136c4:	d027      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136c6:	687b      	ldr	r3, [r7, #4]
 80136c8:	4a2a      	ldr	r2, [pc, #168]	@ (8013774 <LL_TIM_Init+0x10c>)
 80136ca:	4293      	cmp	r3, r2
 80136cc:	d023      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136ce:	687b      	ldr	r3, [r7, #4]
 80136d0:	4a29      	ldr	r2, [pc, #164]	@ (8013778 <LL_TIM_Init+0x110>)
 80136d2:	4293      	cmp	r3, r2
 80136d4:	d01f      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136d6:	687b      	ldr	r3, [r7, #4]
 80136d8:	4a28      	ldr	r2, [pc, #160]	@ (801377c <LL_TIM_Init+0x114>)
 80136da:	4293      	cmp	r3, r2
 80136dc:	d01b      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136de:	687b      	ldr	r3, [r7, #4]
 80136e0:	4a27      	ldr	r2, [pc, #156]	@ (8013780 <LL_TIM_Init+0x118>)
 80136e2:	4293      	cmp	r3, r2
 80136e4:	d017      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136e6:	687b      	ldr	r3, [r7, #4]
 80136e8:	4a26      	ldr	r2, [pc, #152]	@ (8013784 <LL_TIM_Init+0x11c>)
 80136ea:	4293      	cmp	r3, r2
 80136ec:	d013      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136ee:	687b      	ldr	r3, [r7, #4]
 80136f0:	4a25      	ldr	r2, [pc, #148]	@ (8013788 <LL_TIM_Init+0x120>)
 80136f2:	4293      	cmp	r3, r2
 80136f4:	d00f      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136f6:	687b      	ldr	r3, [r7, #4]
 80136f8:	4a24      	ldr	r2, [pc, #144]	@ (801378c <LL_TIM_Init+0x124>)
 80136fa:	4293      	cmp	r3, r2
 80136fc:	d00b      	beq.n	8013716 <LL_TIM_Init+0xae>
 80136fe:	687b      	ldr	r3, [r7, #4]
 8013700:	4a23      	ldr	r2, [pc, #140]	@ (8013790 <LL_TIM_Init+0x128>)
 8013702:	4293      	cmp	r3, r2
 8013704:	d007      	beq.n	8013716 <LL_TIM_Init+0xae>
 8013706:	687b      	ldr	r3, [r7, #4]
 8013708:	4a22      	ldr	r2, [pc, #136]	@ (8013794 <LL_TIM_Init+0x12c>)
 801370a:	4293      	cmp	r3, r2
 801370c:	d003      	beq.n	8013716 <LL_TIM_Init+0xae>
 801370e:	687b      	ldr	r3, [r7, #4]
 8013710:	4a21      	ldr	r2, [pc, #132]	@ (8013798 <LL_TIM_Init+0x130>)
 8013712:	4293      	cmp	r3, r2
 8013714:	d106      	bne.n	8013724 <LL_TIM_Init+0xbc>
 8013716:	68fb      	ldr	r3, [r7, #12]
 8013718:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 801371c:	683b      	ldr	r3, [r7, #0]
 801371e:	68db      	ldr	r3, [r3, #12]
 8013720:	4313      	orrs	r3, r2
 8013722:	60fb      	str	r3, [r7, #12]
 8013724:	687b      	ldr	r3, [r7, #4]
 8013726:	68fa      	ldr	r2, [r7, #12]
 8013728:	601a      	str	r2, [r3, #0]
 801372a:	683b      	ldr	r3, [r7, #0]
 801372c:	689b      	ldr	r3, [r3, #8]
 801372e:	4619      	mov	r1, r3
 8013730:	6878      	ldr	r0, [r7, #4]
 8013732:	f7ff ff6d 	bl	8013610 <LL_TIM_SetAutoReload>
 8013736:	683b      	ldr	r3, [r7, #0]
 8013738:	881b      	ldrh	r3, [r3, #0]
 801373a:	4619      	mov	r1, r3
 801373c:	6878      	ldr	r0, [r7, #4]
 801373e:	f7ff ff59 	bl	80135f4 <LL_TIM_SetPrescaler>
 8013742:	687b      	ldr	r3, [r7, #4]
 8013744:	4a0a      	ldr	r2, [pc, #40]	@ (8013770 <LL_TIM_Init+0x108>)
 8013746:	4293      	cmp	r3, r2
 8013748:	d003      	beq.n	8013752 <LL_TIM_Init+0xea>
 801374a:	687b      	ldr	r3, [r7, #4]
 801374c:	4a0c      	ldr	r2, [pc, #48]	@ (8013780 <LL_TIM_Init+0x118>)
 801374e:	4293      	cmp	r3, r2
 8013750:	d105      	bne.n	801375e <LL_TIM_Init+0xf6>
 8013752:	683b      	ldr	r3, [r7, #0]
 8013754:	691b      	ldr	r3, [r3, #16]
 8013756:	4619      	mov	r1, r3
 8013758:	6878      	ldr	r0, [r7, #4]
 801375a:	f7ff ff67 	bl	801362c <LL_TIM_SetRepetitionCounter>
 801375e:	6878      	ldr	r0, [r7, #4]
 8013760:	f7ff ff72 	bl	8013648 <LL_TIM_GenerateEvent_UPDATE>
 8013764:	2300      	movs	r3, #0
 8013766:	4618      	mov	r0, r3
 8013768:	3710      	adds	r7, #16
 801376a:	46bd      	mov	sp, r7
 801376c:	bd80      	pop	{r7, pc}
 801376e:	bf00      	nop
 8013770:	40010000 	.word	0x40010000
 8013774:	40000400 	.word	0x40000400
 8013778:	40000800 	.word	0x40000800
 801377c:	40000c00 	.word	0x40000c00
 8013780:	40010400 	.word	0x40010400
 8013784:	40014000 	.word	0x40014000
 8013788:	40014400 	.word	0x40014400
 801378c:	40014800 	.word	0x40014800
 8013790:	40001800 	.word	0x40001800
 8013794:	40001c00 	.word	0x40001c00
 8013798:	40002000 	.word	0x40002000

0801379c <USB_CoreInit>:
 801379c:	b084      	sub	sp, #16
 801379e:	b580      	push	{r7, lr}
 80137a0:	b084      	sub	sp, #16
 80137a2:	af00      	add	r7, sp, #0
 80137a4:	6078      	str	r0, [r7, #4]
 80137a6:	f107 001c 	add.w	r0, r7, #28
 80137aa:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 80137ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80137b0:	2b01      	cmp	r3, #1
 80137b2:	d122      	bne.n	80137fa <USB_CoreInit+0x5e>
 80137b4:	687b      	ldr	r3, [r7, #4]
 80137b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80137b8:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80137bc:	687b      	ldr	r3, [r7, #4]
 80137be:	639a      	str	r2, [r3, #56]	@ 0x38
 80137c0:	687b      	ldr	r3, [r7, #4]
 80137c2:	68db      	ldr	r3, [r3, #12]
 80137c4:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 80137c8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80137cc:	687a      	ldr	r2, [r7, #4]
 80137ce:	60d3      	str	r3, [r2, #12]
 80137d0:	687b      	ldr	r3, [r7, #4]
 80137d2:	68db      	ldr	r3, [r3, #12]
 80137d4:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 80137d8:	687b      	ldr	r3, [r7, #4]
 80137da:	60da      	str	r2, [r3, #12]
 80137dc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80137de:	2b01      	cmp	r3, #1
 80137e0:	d105      	bne.n	80137ee <USB_CoreInit+0x52>
 80137e2:	687b      	ldr	r3, [r7, #4]
 80137e4:	68db      	ldr	r3, [r3, #12]
 80137e6:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80137ea:	687b      	ldr	r3, [r7, #4]
 80137ec:	60da      	str	r2, [r3, #12]
 80137ee:	6878      	ldr	r0, [r7, #4]
 80137f0:	f001 fbee 	bl	8014fd0 <USB_CoreReset>
 80137f4:	4603      	mov	r3, r0
 80137f6:	73fb      	strb	r3, [r7, #15]
 80137f8:	e01a      	b.n	8013830 <USB_CoreInit+0x94>
 80137fa:	687b      	ldr	r3, [r7, #4]
 80137fc:	68db      	ldr	r3, [r3, #12]
 80137fe:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8013802:	687b      	ldr	r3, [r7, #4]
 8013804:	60da      	str	r2, [r3, #12]
 8013806:	6878      	ldr	r0, [r7, #4]
 8013808:	f001 fbe2 	bl	8014fd0 <USB_CoreReset>
 801380c:	4603      	mov	r3, r0
 801380e:	73fb      	strb	r3, [r7, #15]
 8013810:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8013812:	2b00      	cmp	r3, #0
 8013814:	d106      	bne.n	8013824 <USB_CoreInit+0x88>
 8013816:	687b      	ldr	r3, [r7, #4]
 8013818:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801381a:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 801381e:	687b      	ldr	r3, [r7, #4]
 8013820:	639a      	str	r2, [r3, #56]	@ 0x38
 8013822:	e005      	b.n	8013830 <USB_CoreInit+0x94>
 8013824:	687b      	ldr	r3, [r7, #4]
 8013826:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013828:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 801382c:	687b      	ldr	r3, [r7, #4]
 801382e:	639a      	str	r2, [r3, #56]	@ 0x38
 8013830:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8013832:	2b01      	cmp	r3, #1
 8013834:	d10b      	bne.n	801384e <USB_CoreInit+0xb2>
 8013836:	687b      	ldr	r3, [r7, #4]
 8013838:	689b      	ldr	r3, [r3, #8]
 801383a:	f043 0206 	orr.w	r2, r3, #6
 801383e:	687b      	ldr	r3, [r7, #4]
 8013840:	609a      	str	r2, [r3, #8]
 8013842:	687b      	ldr	r3, [r7, #4]
 8013844:	689b      	ldr	r3, [r3, #8]
 8013846:	f043 0220 	orr.w	r2, r3, #32
 801384a:	687b      	ldr	r3, [r7, #4]
 801384c:	609a      	str	r2, [r3, #8]
 801384e:	7bfb      	ldrb	r3, [r7, #15]
 8013850:	4618      	mov	r0, r3
 8013852:	3710      	adds	r7, #16
 8013854:	46bd      	mov	sp, r7
 8013856:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801385a:	b004      	add	sp, #16
 801385c:	4770      	bx	lr
	...

08013860 <USB_SetTurnaroundTime>:
 8013860:	b480      	push	{r7}
 8013862:	b087      	sub	sp, #28
 8013864:	af00      	add	r7, sp, #0
 8013866:	60f8      	str	r0, [r7, #12]
 8013868:	60b9      	str	r1, [r7, #8]
 801386a:	4613      	mov	r3, r2
 801386c:	71fb      	strb	r3, [r7, #7]
 801386e:	79fb      	ldrb	r3, [r7, #7]
 8013870:	2b02      	cmp	r3, #2
 8013872:	d165      	bne.n	8013940 <USB_SetTurnaroundTime+0xe0>
 8013874:	68bb      	ldr	r3, [r7, #8]
 8013876:	4a41      	ldr	r2, [pc, #260]	@ (801397c <USB_SetTurnaroundTime+0x11c>)
 8013878:	4293      	cmp	r3, r2
 801387a:	d906      	bls.n	801388a <USB_SetTurnaroundTime+0x2a>
 801387c:	68bb      	ldr	r3, [r7, #8]
 801387e:	4a40      	ldr	r2, [pc, #256]	@ (8013980 <USB_SetTurnaroundTime+0x120>)
 8013880:	4293      	cmp	r3, r2
 8013882:	d202      	bcs.n	801388a <USB_SetTurnaroundTime+0x2a>
 8013884:	230f      	movs	r3, #15
 8013886:	617b      	str	r3, [r7, #20]
 8013888:	e062      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 801388a:	68bb      	ldr	r3, [r7, #8]
 801388c:	4a3c      	ldr	r2, [pc, #240]	@ (8013980 <USB_SetTurnaroundTime+0x120>)
 801388e:	4293      	cmp	r3, r2
 8013890:	d306      	bcc.n	80138a0 <USB_SetTurnaroundTime+0x40>
 8013892:	68bb      	ldr	r3, [r7, #8]
 8013894:	4a3b      	ldr	r2, [pc, #236]	@ (8013984 <USB_SetTurnaroundTime+0x124>)
 8013896:	4293      	cmp	r3, r2
 8013898:	d202      	bcs.n	80138a0 <USB_SetTurnaroundTime+0x40>
 801389a:	230e      	movs	r3, #14
 801389c:	617b      	str	r3, [r7, #20]
 801389e:	e057      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 80138a0:	68bb      	ldr	r3, [r7, #8]
 80138a2:	4a38      	ldr	r2, [pc, #224]	@ (8013984 <USB_SetTurnaroundTime+0x124>)
 80138a4:	4293      	cmp	r3, r2
 80138a6:	d306      	bcc.n	80138b6 <USB_SetTurnaroundTime+0x56>
 80138a8:	68bb      	ldr	r3, [r7, #8]
 80138aa:	4a37      	ldr	r2, [pc, #220]	@ (8013988 <USB_SetTurnaroundTime+0x128>)
 80138ac:	4293      	cmp	r3, r2
 80138ae:	d202      	bcs.n	80138b6 <USB_SetTurnaroundTime+0x56>
 80138b0:	230d      	movs	r3, #13
 80138b2:	617b      	str	r3, [r7, #20]
 80138b4:	e04c      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 80138b6:	68bb      	ldr	r3, [r7, #8]
 80138b8:	4a33      	ldr	r2, [pc, #204]	@ (8013988 <USB_SetTurnaroundTime+0x128>)
 80138ba:	4293      	cmp	r3, r2
 80138bc:	d306      	bcc.n	80138cc <USB_SetTurnaroundTime+0x6c>
 80138be:	68bb      	ldr	r3, [r7, #8]
 80138c0:	4a32      	ldr	r2, [pc, #200]	@ (801398c <USB_SetTurnaroundTime+0x12c>)
 80138c2:	4293      	cmp	r3, r2
 80138c4:	d802      	bhi.n	80138cc <USB_SetTurnaroundTime+0x6c>
 80138c6:	230c      	movs	r3, #12
 80138c8:	617b      	str	r3, [r7, #20]
 80138ca:	e041      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 80138cc:	68bb      	ldr	r3, [r7, #8]
 80138ce:	4a2f      	ldr	r2, [pc, #188]	@ (801398c <USB_SetTurnaroundTime+0x12c>)
 80138d0:	4293      	cmp	r3, r2
 80138d2:	d906      	bls.n	80138e2 <USB_SetTurnaroundTime+0x82>
 80138d4:	68bb      	ldr	r3, [r7, #8]
 80138d6:	4a2e      	ldr	r2, [pc, #184]	@ (8013990 <USB_SetTurnaroundTime+0x130>)
 80138d8:	4293      	cmp	r3, r2
 80138da:	d802      	bhi.n	80138e2 <USB_SetTurnaroundTime+0x82>
 80138dc:	230b      	movs	r3, #11
 80138de:	617b      	str	r3, [r7, #20]
 80138e0:	e036      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 80138e2:	68bb      	ldr	r3, [r7, #8]
 80138e4:	4a2a      	ldr	r2, [pc, #168]	@ (8013990 <USB_SetTurnaroundTime+0x130>)
 80138e6:	4293      	cmp	r3, r2
 80138e8:	d906      	bls.n	80138f8 <USB_SetTurnaroundTime+0x98>
 80138ea:	68bb      	ldr	r3, [r7, #8]
 80138ec:	4a29      	ldr	r2, [pc, #164]	@ (8013994 <USB_SetTurnaroundTime+0x134>)
 80138ee:	4293      	cmp	r3, r2
 80138f0:	d802      	bhi.n	80138f8 <USB_SetTurnaroundTime+0x98>
 80138f2:	230a      	movs	r3, #10
 80138f4:	617b      	str	r3, [r7, #20]
 80138f6:	e02b      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 80138f8:	68bb      	ldr	r3, [r7, #8]
 80138fa:	4a26      	ldr	r2, [pc, #152]	@ (8013994 <USB_SetTurnaroundTime+0x134>)
 80138fc:	4293      	cmp	r3, r2
 80138fe:	d906      	bls.n	801390e <USB_SetTurnaroundTime+0xae>
 8013900:	68bb      	ldr	r3, [r7, #8]
 8013902:	4a25      	ldr	r2, [pc, #148]	@ (8013998 <USB_SetTurnaroundTime+0x138>)
 8013904:	4293      	cmp	r3, r2
 8013906:	d202      	bcs.n	801390e <USB_SetTurnaroundTime+0xae>
 8013908:	2309      	movs	r3, #9
 801390a:	617b      	str	r3, [r7, #20]
 801390c:	e020      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 801390e:	68bb      	ldr	r3, [r7, #8]
 8013910:	4a21      	ldr	r2, [pc, #132]	@ (8013998 <USB_SetTurnaroundTime+0x138>)
 8013912:	4293      	cmp	r3, r2
 8013914:	d306      	bcc.n	8013924 <USB_SetTurnaroundTime+0xc4>
 8013916:	68bb      	ldr	r3, [r7, #8]
 8013918:	4a20      	ldr	r2, [pc, #128]	@ (801399c <USB_SetTurnaroundTime+0x13c>)
 801391a:	4293      	cmp	r3, r2
 801391c:	d802      	bhi.n	8013924 <USB_SetTurnaroundTime+0xc4>
 801391e:	2308      	movs	r3, #8
 8013920:	617b      	str	r3, [r7, #20]
 8013922:	e015      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 8013924:	68bb      	ldr	r3, [r7, #8]
 8013926:	4a1d      	ldr	r2, [pc, #116]	@ (801399c <USB_SetTurnaroundTime+0x13c>)
 8013928:	4293      	cmp	r3, r2
 801392a:	d906      	bls.n	801393a <USB_SetTurnaroundTime+0xda>
 801392c:	68bb      	ldr	r3, [r7, #8]
 801392e:	4a1c      	ldr	r2, [pc, #112]	@ (80139a0 <USB_SetTurnaroundTime+0x140>)
 8013930:	4293      	cmp	r3, r2
 8013932:	d202      	bcs.n	801393a <USB_SetTurnaroundTime+0xda>
 8013934:	2307      	movs	r3, #7
 8013936:	617b      	str	r3, [r7, #20]
 8013938:	e00a      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 801393a:	2306      	movs	r3, #6
 801393c:	617b      	str	r3, [r7, #20]
 801393e:	e007      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 8013940:	79fb      	ldrb	r3, [r7, #7]
 8013942:	2b00      	cmp	r3, #0
 8013944:	d102      	bne.n	801394c <USB_SetTurnaroundTime+0xec>
 8013946:	2309      	movs	r3, #9
 8013948:	617b      	str	r3, [r7, #20]
 801394a:	e001      	b.n	8013950 <USB_SetTurnaroundTime+0xf0>
 801394c:	2309      	movs	r3, #9
 801394e:	617b      	str	r3, [r7, #20]
 8013950:	68fb      	ldr	r3, [r7, #12]
 8013952:	68db      	ldr	r3, [r3, #12]
 8013954:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 8013958:	68fb      	ldr	r3, [r7, #12]
 801395a:	60da      	str	r2, [r3, #12]
 801395c:	68fb      	ldr	r3, [r7, #12]
 801395e:	68da      	ldr	r2, [r3, #12]
 8013960:	697b      	ldr	r3, [r7, #20]
 8013962:	029b      	lsls	r3, r3, #10
 8013964:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 8013968:	431a      	orrs	r2, r3
 801396a:	68fb      	ldr	r3, [r7, #12]
 801396c:	60da      	str	r2, [r3, #12]
 801396e:	2300      	movs	r3, #0
 8013970:	4618      	mov	r0, r3
 8013972:	371c      	adds	r7, #28
 8013974:	46bd      	mov	sp, r7
 8013976:	f85d 7b04 	ldr.w	r7, [sp], #4
 801397a:	4770      	bx	lr
 801397c:	00d8acbf 	.word	0x00d8acbf
 8013980:	00e4e1c0 	.word	0x00e4e1c0
 8013984:	00f42400 	.word	0x00f42400
 8013988:	01067380 	.word	0x01067380
 801398c:	011a499f 	.word	0x011a499f
 8013990:	01312cff 	.word	0x01312cff
 8013994:	014ca43f 	.word	0x014ca43f
 8013998:	016e3600 	.word	0x016e3600
 801399c:	01a6ab1f 	.word	0x01a6ab1f
 80139a0:	01e84800 	.word	0x01e84800

080139a4 <USB_EnableGlobalInt>:
 80139a4:	b480      	push	{r7}
 80139a6:	b083      	sub	sp, #12
 80139a8:	af00      	add	r7, sp, #0
 80139aa:	6078      	str	r0, [r7, #4]
 80139ac:	687b      	ldr	r3, [r7, #4]
 80139ae:	689b      	ldr	r3, [r3, #8]
 80139b0:	f043 0201 	orr.w	r2, r3, #1
 80139b4:	687b      	ldr	r3, [r7, #4]
 80139b6:	609a      	str	r2, [r3, #8]
 80139b8:	2300      	movs	r3, #0
 80139ba:	4618      	mov	r0, r3
 80139bc:	370c      	adds	r7, #12
 80139be:	46bd      	mov	sp, r7
 80139c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139c4:	4770      	bx	lr

080139c6 <USB_DisableGlobalInt>:
 80139c6:	b480      	push	{r7}
 80139c8:	b083      	sub	sp, #12
 80139ca:	af00      	add	r7, sp, #0
 80139cc:	6078      	str	r0, [r7, #4]
 80139ce:	687b      	ldr	r3, [r7, #4]
 80139d0:	689b      	ldr	r3, [r3, #8]
 80139d2:	f023 0201 	bic.w	r2, r3, #1
 80139d6:	687b      	ldr	r3, [r7, #4]
 80139d8:	609a      	str	r2, [r3, #8]
 80139da:	2300      	movs	r3, #0
 80139dc:	4618      	mov	r0, r3
 80139de:	370c      	adds	r7, #12
 80139e0:	46bd      	mov	sp, r7
 80139e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139e6:	4770      	bx	lr

080139e8 <USB_SetCurrentMode>:
 80139e8:	b580      	push	{r7, lr}
 80139ea:	b084      	sub	sp, #16
 80139ec:	af00      	add	r7, sp, #0
 80139ee:	6078      	str	r0, [r7, #4]
 80139f0:	460b      	mov	r3, r1
 80139f2:	70fb      	strb	r3, [r7, #3]
 80139f4:	2300      	movs	r3, #0
 80139f6:	60fb      	str	r3, [r7, #12]
 80139f8:	687b      	ldr	r3, [r7, #4]
 80139fa:	68db      	ldr	r3, [r3, #12]
 80139fc:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 8013a00:	687b      	ldr	r3, [r7, #4]
 8013a02:	60da      	str	r2, [r3, #12]
 8013a04:	78fb      	ldrb	r3, [r7, #3]
 8013a06:	2b01      	cmp	r3, #1
 8013a08:	d115      	bne.n	8013a36 <USB_SetCurrentMode+0x4e>
 8013a0a:	687b      	ldr	r3, [r7, #4]
 8013a0c:	68db      	ldr	r3, [r3, #12]
 8013a0e:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 8013a12:	687b      	ldr	r3, [r7, #4]
 8013a14:	60da      	str	r2, [r3, #12]
 8013a16:	2001      	movs	r0, #1
 8013a18:	f7f7 fafe 	bl	800b018 <HAL_Delay>
 8013a1c:	68fb      	ldr	r3, [r7, #12]
 8013a1e:	3301      	adds	r3, #1
 8013a20:	60fb      	str	r3, [r7, #12]
 8013a22:	6878      	ldr	r0, [r7, #4]
 8013a24:	f001 fa45 	bl	8014eb2 <USB_GetMode>
 8013a28:	4603      	mov	r3, r0
 8013a2a:	2b01      	cmp	r3, #1
 8013a2c:	d01e      	beq.n	8013a6c <USB_SetCurrentMode+0x84>
 8013a2e:	68fb      	ldr	r3, [r7, #12]
 8013a30:	2b31      	cmp	r3, #49	@ 0x31
 8013a32:	d9f0      	bls.n	8013a16 <USB_SetCurrentMode+0x2e>
 8013a34:	e01a      	b.n	8013a6c <USB_SetCurrentMode+0x84>
 8013a36:	78fb      	ldrb	r3, [r7, #3]
 8013a38:	2b00      	cmp	r3, #0
 8013a3a:	d115      	bne.n	8013a68 <USB_SetCurrentMode+0x80>
 8013a3c:	687b      	ldr	r3, [r7, #4]
 8013a3e:	68db      	ldr	r3, [r3, #12]
 8013a40:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8013a44:	687b      	ldr	r3, [r7, #4]
 8013a46:	60da      	str	r2, [r3, #12]
 8013a48:	2001      	movs	r0, #1
 8013a4a:	f7f7 fae5 	bl	800b018 <HAL_Delay>
 8013a4e:	68fb      	ldr	r3, [r7, #12]
 8013a50:	3301      	adds	r3, #1
 8013a52:	60fb      	str	r3, [r7, #12]
 8013a54:	6878      	ldr	r0, [r7, #4]
 8013a56:	f001 fa2c 	bl	8014eb2 <USB_GetMode>
 8013a5a:	4603      	mov	r3, r0
 8013a5c:	2b00      	cmp	r3, #0
 8013a5e:	d005      	beq.n	8013a6c <USB_SetCurrentMode+0x84>
 8013a60:	68fb      	ldr	r3, [r7, #12]
 8013a62:	2b31      	cmp	r3, #49	@ 0x31
 8013a64:	d9f0      	bls.n	8013a48 <USB_SetCurrentMode+0x60>
 8013a66:	e001      	b.n	8013a6c <USB_SetCurrentMode+0x84>
 8013a68:	2301      	movs	r3, #1
 8013a6a:	e005      	b.n	8013a78 <USB_SetCurrentMode+0x90>
 8013a6c:	68fb      	ldr	r3, [r7, #12]
 8013a6e:	2b32      	cmp	r3, #50	@ 0x32
 8013a70:	d101      	bne.n	8013a76 <USB_SetCurrentMode+0x8e>
 8013a72:	2301      	movs	r3, #1
 8013a74:	e000      	b.n	8013a78 <USB_SetCurrentMode+0x90>
 8013a76:	2300      	movs	r3, #0
 8013a78:	4618      	mov	r0, r3
 8013a7a:	3710      	adds	r7, #16
 8013a7c:	46bd      	mov	sp, r7
 8013a7e:	bd80      	pop	{r7, pc}

08013a80 <USB_DevInit>:
 8013a80:	b084      	sub	sp, #16
 8013a82:	b580      	push	{r7, lr}
 8013a84:	b086      	sub	sp, #24
 8013a86:	af00      	add	r7, sp, #0
 8013a88:	6078      	str	r0, [r7, #4]
 8013a8a:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8013a8e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8013a92:	2300      	movs	r3, #0
 8013a94:	75fb      	strb	r3, [r7, #23]
 8013a96:	687b      	ldr	r3, [r7, #4]
 8013a98:	60fb      	str	r3, [r7, #12]
 8013a9a:	2300      	movs	r3, #0
 8013a9c:	613b      	str	r3, [r7, #16]
 8013a9e:	e009      	b.n	8013ab4 <USB_DevInit+0x34>
 8013aa0:	687a      	ldr	r2, [r7, #4]
 8013aa2:	693b      	ldr	r3, [r7, #16]
 8013aa4:	3340      	adds	r3, #64	@ 0x40
 8013aa6:	009b      	lsls	r3, r3, #2
 8013aa8:	4413      	add	r3, r2
 8013aaa:	2200      	movs	r2, #0
 8013aac:	605a      	str	r2, [r3, #4]
 8013aae:	693b      	ldr	r3, [r7, #16]
 8013ab0:	3301      	adds	r3, #1
 8013ab2:	613b      	str	r3, [r7, #16]
 8013ab4:	693b      	ldr	r3, [r7, #16]
 8013ab6:	2b0e      	cmp	r3, #14
 8013ab8:	d9f2      	bls.n	8013aa0 <USB_DevInit+0x20>
 8013aba:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013abc:	2b00      	cmp	r3, #0
 8013abe:	d11c      	bne.n	8013afa <USB_DevInit+0x7a>
 8013ac0:	68fb      	ldr	r3, [r7, #12]
 8013ac2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013ac6:	685b      	ldr	r3, [r3, #4]
 8013ac8:	68fa      	ldr	r2, [r7, #12]
 8013aca:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013ace:	f043 0302 	orr.w	r3, r3, #2
 8013ad2:	6053      	str	r3, [r2, #4]
 8013ad4:	687b      	ldr	r3, [r7, #4]
 8013ad6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013ad8:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8013adc:	687b      	ldr	r3, [r7, #4]
 8013ade:	639a      	str	r2, [r3, #56]	@ 0x38
 8013ae0:	687b      	ldr	r3, [r7, #4]
 8013ae2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013ae4:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 8013ae8:	687b      	ldr	r3, [r7, #4]
 8013aea:	639a      	str	r2, [r3, #56]	@ 0x38
 8013aec:	687b      	ldr	r3, [r7, #4]
 8013aee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013af0:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 8013af4:	687b      	ldr	r3, [r7, #4]
 8013af6:	639a      	str	r2, [r3, #56]	@ 0x38
 8013af8:	e00b      	b.n	8013b12 <USB_DevInit+0x92>
 8013afa:	687b      	ldr	r3, [r7, #4]
 8013afc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013afe:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8013b02:	687b      	ldr	r3, [r7, #4]
 8013b04:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b06:	687b      	ldr	r3, [r7, #4]
 8013b08:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b0a:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8013b0e:	687b      	ldr	r3, [r7, #4]
 8013b10:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b12:	68fb      	ldr	r3, [r7, #12]
 8013b14:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8013b18:	461a      	mov	r2, r3
 8013b1a:	2300      	movs	r3, #0
 8013b1c:	6013      	str	r3, [r2, #0]
 8013b1e:	68fb      	ldr	r3, [r7, #12]
 8013b20:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b24:	4619      	mov	r1, r3
 8013b26:	68fb      	ldr	r3, [r7, #12]
 8013b28:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b2c:	461a      	mov	r2, r3
 8013b2e:	680b      	ldr	r3, [r1, #0]
 8013b30:	6013      	str	r3, [r2, #0]
 8013b32:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013b34:	2b01      	cmp	r3, #1
 8013b36:	d10c      	bne.n	8013b52 <USB_DevInit+0xd2>
 8013b38:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013b3a:	2b00      	cmp	r3, #0
 8013b3c:	d104      	bne.n	8013b48 <USB_DevInit+0xc8>
 8013b3e:	2100      	movs	r1, #0
 8013b40:	6878      	ldr	r0, [r7, #4]
 8013b42:	f000 f965 	bl	8013e10 <USB_SetDevSpeed>
 8013b46:	e008      	b.n	8013b5a <USB_DevInit+0xda>
 8013b48:	2101      	movs	r1, #1
 8013b4a:	6878      	ldr	r0, [r7, #4]
 8013b4c:	f000 f960 	bl	8013e10 <USB_SetDevSpeed>
 8013b50:	e003      	b.n	8013b5a <USB_DevInit+0xda>
 8013b52:	2103      	movs	r1, #3
 8013b54:	6878      	ldr	r0, [r7, #4]
 8013b56:	f000 f95b 	bl	8013e10 <USB_SetDevSpeed>
 8013b5a:	2110      	movs	r1, #16
 8013b5c:	6878      	ldr	r0, [r7, #4]
 8013b5e:	f000 f8f3 	bl	8013d48 <USB_FlushTxFifo>
 8013b62:	4603      	mov	r3, r0
 8013b64:	2b00      	cmp	r3, #0
 8013b66:	d001      	beq.n	8013b6c <USB_DevInit+0xec>
 8013b68:	2301      	movs	r3, #1
 8013b6a:	75fb      	strb	r3, [r7, #23]
 8013b6c:	6878      	ldr	r0, [r7, #4]
 8013b6e:	f000 f91f 	bl	8013db0 <USB_FlushRxFifo>
 8013b72:	4603      	mov	r3, r0
 8013b74:	2b00      	cmp	r3, #0
 8013b76:	d001      	beq.n	8013b7c <USB_DevInit+0xfc>
 8013b78:	2301      	movs	r3, #1
 8013b7a:	75fb      	strb	r3, [r7, #23]
 8013b7c:	68fb      	ldr	r3, [r7, #12]
 8013b7e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b82:	461a      	mov	r2, r3
 8013b84:	2300      	movs	r3, #0
 8013b86:	6113      	str	r3, [r2, #16]
 8013b88:	68fb      	ldr	r3, [r7, #12]
 8013b8a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b8e:	461a      	mov	r2, r3
 8013b90:	2300      	movs	r3, #0
 8013b92:	6153      	str	r3, [r2, #20]
 8013b94:	68fb      	ldr	r3, [r7, #12]
 8013b96:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b9a:	461a      	mov	r2, r3
 8013b9c:	2300      	movs	r3, #0
 8013b9e:	61d3      	str	r3, [r2, #28]
 8013ba0:	2300      	movs	r3, #0
 8013ba2:	613b      	str	r3, [r7, #16]
 8013ba4:	e043      	b.n	8013c2e <USB_DevInit+0x1ae>
 8013ba6:	693b      	ldr	r3, [r7, #16]
 8013ba8:	015a      	lsls	r2, r3, #5
 8013baa:	68fb      	ldr	r3, [r7, #12]
 8013bac:	4413      	add	r3, r2
 8013bae:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013bb2:	681b      	ldr	r3, [r3, #0]
 8013bb4:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013bb8:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013bbc:	d118      	bne.n	8013bf0 <USB_DevInit+0x170>
 8013bbe:	693b      	ldr	r3, [r7, #16]
 8013bc0:	2b00      	cmp	r3, #0
 8013bc2:	d10a      	bne.n	8013bda <USB_DevInit+0x15a>
 8013bc4:	693b      	ldr	r3, [r7, #16]
 8013bc6:	015a      	lsls	r2, r3, #5
 8013bc8:	68fb      	ldr	r3, [r7, #12]
 8013bca:	4413      	add	r3, r2
 8013bcc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013bd0:	461a      	mov	r2, r3
 8013bd2:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8013bd6:	6013      	str	r3, [r2, #0]
 8013bd8:	e013      	b.n	8013c02 <USB_DevInit+0x182>
 8013bda:	693b      	ldr	r3, [r7, #16]
 8013bdc:	015a      	lsls	r2, r3, #5
 8013bde:	68fb      	ldr	r3, [r7, #12]
 8013be0:	4413      	add	r3, r2
 8013be2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013be6:	461a      	mov	r2, r3
 8013be8:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8013bec:	6013      	str	r3, [r2, #0]
 8013bee:	e008      	b.n	8013c02 <USB_DevInit+0x182>
 8013bf0:	693b      	ldr	r3, [r7, #16]
 8013bf2:	015a      	lsls	r2, r3, #5
 8013bf4:	68fb      	ldr	r3, [r7, #12]
 8013bf6:	4413      	add	r3, r2
 8013bf8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013bfc:	461a      	mov	r2, r3
 8013bfe:	2300      	movs	r3, #0
 8013c00:	6013      	str	r3, [r2, #0]
 8013c02:	693b      	ldr	r3, [r7, #16]
 8013c04:	015a      	lsls	r2, r3, #5
 8013c06:	68fb      	ldr	r3, [r7, #12]
 8013c08:	4413      	add	r3, r2
 8013c0a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c0e:	461a      	mov	r2, r3
 8013c10:	2300      	movs	r3, #0
 8013c12:	6113      	str	r3, [r2, #16]
 8013c14:	693b      	ldr	r3, [r7, #16]
 8013c16:	015a      	lsls	r2, r3, #5
 8013c18:	68fb      	ldr	r3, [r7, #12]
 8013c1a:	4413      	add	r3, r2
 8013c1c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c20:	461a      	mov	r2, r3
 8013c22:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8013c26:	6093      	str	r3, [r2, #8]
 8013c28:	693b      	ldr	r3, [r7, #16]
 8013c2a:	3301      	adds	r3, #1
 8013c2c:	613b      	str	r3, [r7, #16]
 8013c2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013c30:	693a      	ldr	r2, [r7, #16]
 8013c32:	429a      	cmp	r2, r3
 8013c34:	d3b7      	bcc.n	8013ba6 <USB_DevInit+0x126>
 8013c36:	2300      	movs	r3, #0
 8013c38:	613b      	str	r3, [r7, #16]
 8013c3a:	e043      	b.n	8013cc4 <USB_DevInit+0x244>
 8013c3c:	693b      	ldr	r3, [r7, #16]
 8013c3e:	015a      	lsls	r2, r3, #5
 8013c40:	68fb      	ldr	r3, [r7, #12]
 8013c42:	4413      	add	r3, r2
 8013c44:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013c48:	681b      	ldr	r3, [r3, #0]
 8013c4a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013c4e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013c52:	d118      	bne.n	8013c86 <USB_DevInit+0x206>
 8013c54:	693b      	ldr	r3, [r7, #16]
 8013c56:	2b00      	cmp	r3, #0
 8013c58:	d10a      	bne.n	8013c70 <USB_DevInit+0x1f0>
 8013c5a:	693b      	ldr	r3, [r7, #16]
 8013c5c:	015a      	lsls	r2, r3, #5
 8013c5e:	68fb      	ldr	r3, [r7, #12]
 8013c60:	4413      	add	r3, r2
 8013c62:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013c66:	461a      	mov	r2, r3
 8013c68:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8013c6c:	6013      	str	r3, [r2, #0]
 8013c6e:	e013      	b.n	8013c98 <USB_DevInit+0x218>
 8013c70:	693b      	ldr	r3, [r7, #16]
 8013c72:	015a      	lsls	r2, r3, #5
 8013c74:	68fb      	ldr	r3, [r7, #12]
 8013c76:	4413      	add	r3, r2
 8013c78:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013c7c:	461a      	mov	r2, r3
 8013c7e:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8013c82:	6013      	str	r3, [r2, #0]
 8013c84:	e008      	b.n	8013c98 <USB_DevInit+0x218>
 8013c86:	693b      	ldr	r3, [r7, #16]
 8013c88:	015a      	lsls	r2, r3, #5
 8013c8a:	68fb      	ldr	r3, [r7, #12]
 8013c8c:	4413      	add	r3, r2
 8013c8e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013c92:	461a      	mov	r2, r3
 8013c94:	2300      	movs	r3, #0
 8013c96:	6013      	str	r3, [r2, #0]
 8013c98:	693b      	ldr	r3, [r7, #16]
 8013c9a:	015a      	lsls	r2, r3, #5
 8013c9c:	68fb      	ldr	r3, [r7, #12]
 8013c9e:	4413      	add	r3, r2
 8013ca0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013ca4:	461a      	mov	r2, r3
 8013ca6:	2300      	movs	r3, #0
 8013ca8:	6113      	str	r3, [r2, #16]
 8013caa:	693b      	ldr	r3, [r7, #16]
 8013cac:	015a      	lsls	r2, r3, #5
 8013cae:	68fb      	ldr	r3, [r7, #12]
 8013cb0:	4413      	add	r3, r2
 8013cb2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013cb6:	461a      	mov	r2, r3
 8013cb8:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8013cbc:	6093      	str	r3, [r2, #8]
 8013cbe:	693b      	ldr	r3, [r7, #16]
 8013cc0:	3301      	adds	r3, #1
 8013cc2:	613b      	str	r3, [r7, #16]
 8013cc4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013cc6:	693a      	ldr	r2, [r7, #16]
 8013cc8:	429a      	cmp	r2, r3
 8013cca:	d3b7      	bcc.n	8013c3c <USB_DevInit+0x1bc>
 8013ccc:	68fb      	ldr	r3, [r7, #12]
 8013cce:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013cd2:	691b      	ldr	r3, [r3, #16]
 8013cd4:	68fa      	ldr	r2, [r7, #12]
 8013cd6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013cda:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8013cde:	6113      	str	r3, [r2, #16]
 8013ce0:	687b      	ldr	r3, [r7, #4]
 8013ce2:	2200      	movs	r2, #0
 8013ce4:	619a      	str	r2, [r3, #24]
 8013ce6:	687b      	ldr	r3, [r7, #4]
 8013ce8:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 8013cec:	615a      	str	r2, [r3, #20]
 8013cee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8013cf0:	2b00      	cmp	r3, #0
 8013cf2:	d105      	bne.n	8013d00 <USB_DevInit+0x280>
 8013cf4:	687b      	ldr	r3, [r7, #4]
 8013cf6:	699b      	ldr	r3, [r3, #24]
 8013cf8:	f043 0210 	orr.w	r2, r3, #16
 8013cfc:	687b      	ldr	r3, [r7, #4]
 8013cfe:	619a      	str	r2, [r3, #24]
 8013d00:	687b      	ldr	r3, [r7, #4]
 8013d02:	699a      	ldr	r2, [r3, #24]
 8013d04:	4b0f      	ldr	r3, [pc, #60]	@ (8013d44 <USB_DevInit+0x2c4>)
 8013d06:	4313      	orrs	r3, r2
 8013d08:	687a      	ldr	r2, [r7, #4]
 8013d0a:	6193      	str	r3, [r2, #24]
 8013d0c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013d0e:	2b00      	cmp	r3, #0
 8013d10:	d005      	beq.n	8013d1e <USB_DevInit+0x29e>
 8013d12:	687b      	ldr	r3, [r7, #4]
 8013d14:	699b      	ldr	r3, [r3, #24]
 8013d16:	f043 0208 	orr.w	r2, r3, #8
 8013d1a:	687b      	ldr	r3, [r7, #4]
 8013d1c:	619a      	str	r2, [r3, #24]
 8013d1e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013d20:	2b01      	cmp	r3, #1
 8013d22:	d107      	bne.n	8013d34 <USB_DevInit+0x2b4>
 8013d24:	687b      	ldr	r3, [r7, #4]
 8013d26:	699b      	ldr	r3, [r3, #24]
 8013d28:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8013d2c:	f043 0304 	orr.w	r3, r3, #4
 8013d30:	687a      	ldr	r2, [r7, #4]
 8013d32:	6193      	str	r3, [r2, #24]
 8013d34:	7dfb      	ldrb	r3, [r7, #23]
 8013d36:	4618      	mov	r0, r3
 8013d38:	3718      	adds	r7, #24
 8013d3a:	46bd      	mov	sp, r7
 8013d3c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8013d40:	b004      	add	sp, #16
 8013d42:	4770      	bx	lr
 8013d44:	803c3800 	.word	0x803c3800

08013d48 <USB_FlushTxFifo>:
 8013d48:	b480      	push	{r7}
 8013d4a:	b085      	sub	sp, #20
 8013d4c:	af00      	add	r7, sp, #0
 8013d4e:	6078      	str	r0, [r7, #4]
 8013d50:	6039      	str	r1, [r7, #0]
 8013d52:	2300      	movs	r3, #0
 8013d54:	60fb      	str	r3, [r7, #12]
 8013d56:	68fb      	ldr	r3, [r7, #12]
 8013d58:	3301      	adds	r3, #1
 8013d5a:	60fb      	str	r3, [r7, #12]
 8013d5c:	68fb      	ldr	r3, [r7, #12]
 8013d5e:	4a13      	ldr	r2, [pc, #76]	@ (8013dac <USB_FlushTxFifo+0x64>)
 8013d60:	4293      	cmp	r3, r2
 8013d62:	d901      	bls.n	8013d68 <USB_FlushTxFifo+0x20>
 8013d64:	2303      	movs	r3, #3
 8013d66:	e01b      	b.n	8013da0 <USB_FlushTxFifo+0x58>
 8013d68:	687b      	ldr	r3, [r7, #4]
 8013d6a:	691b      	ldr	r3, [r3, #16]
 8013d6c:	2b00      	cmp	r3, #0
 8013d6e:	daf2      	bge.n	8013d56 <USB_FlushTxFifo+0xe>
 8013d70:	2300      	movs	r3, #0
 8013d72:	60fb      	str	r3, [r7, #12]
 8013d74:	683b      	ldr	r3, [r7, #0]
 8013d76:	019b      	lsls	r3, r3, #6
 8013d78:	f043 0220 	orr.w	r2, r3, #32
 8013d7c:	687b      	ldr	r3, [r7, #4]
 8013d7e:	611a      	str	r2, [r3, #16]
 8013d80:	68fb      	ldr	r3, [r7, #12]
 8013d82:	3301      	adds	r3, #1
 8013d84:	60fb      	str	r3, [r7, #12]
 8013d86:	68fb      	ldr	r3, [r7, #12]
 8013d88:	4a08      	ldr	r2, [pc, #32]	@ (8013dac <USB_FlushTxFifo+0x64>)
 8013d8a:	4293      	cmp	r3, r2
 8013d8c:	d901      	bls.n	8013d92 <USB_FlushTxFifo+0x4a>
 8013d8e:	2303      	movs	r3, #3
 8013d90:	e006      	b.n	8013da0 <USB_FlushTxFifo+0x58>
 8013d92:	687b      	ldr	r3, [r7, #4]
 8013d94:	691b      	ldr	r3, [r3, #16]
 8013d96:	f003 0320 	and.w	r3, r3, #32
 8013d9a:	2b20      	cmp	r3, #32
 8013d9c:	d0f0      	beq.n	8013d80 <USB_FlushTxFifo+0x38>
 8013d9e:	2300      	movs	r3, #0
 8013da0:	4618      	mov	r0, r3
 8013da2:	3714      	adds	r7, #20
 8013da4:	46bd      	mov	sp, r7
 8013da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013daa:	4770      	bx	lr
 8013dac:	00030d40 	.word	0x00030d40

08013db0 <USB_FlushRxFifo>:
 8013db0:	b480      	push	{r7}
 8013db2:	b085      	sub	sp, #20
 8013db4:	af00      	add	r7, sp, #0
 8013db6:	6078      	str	r0, [r7, #4]
 8013db8:	2300      	movs	r3, #0
 8013dba:	60fb      	str	r3, [r7, #12]
 8013dbc:	68fb      	ldr	r3, [r7, #12]
 8013dbe:	3301      	adds	r3, #1
 8013dc0:	60fb      	str	r3, [r7, #12]
 8013dc2:	68fb      	ldr	r3, [r7, #12]
 8013dc4:	4a11      	ldr	r2, [pc, #68]	@ (8013e0c <USB_FlushRxFifo+0x5c>)
 8013dc6:	4293      	cmp	r3, r2
 8013dc8:	d901      	bls.n	8013dce <USB_FlushRxFifo+0x1e>
 8013dca:	2303      	movs	r3, #3
 8013dcc:	e018      	b.n	8013e00 <USB_FlushRxFifo+0x50>
 8013dce:	687b      	ldr	r3, [r7, #4]
 8013dd0:	691b      	ldr	r3, [r3, #16]
 8013dd2:	2b00      	cmp	r3, #0
 8013dd4:	daf2      	bge.n	8013dbc <USB_FlushRxFifo+0xc>
 8013dd6:	2300      	movs	r3, #0
 8013dd8:	60fb      	str	r3, [r7, #12]
 8013dda:	687b      	ldr	r3, [r7, #4]
 8013ddc:	2210      	movs	r2, #16
 8013dde:	611a      	str	r2, [r3, #16]
 8013de0:	68fb      	ldr	r3, [r7, #12]
 8013de2:	3301      	adds	r3, #1
 8013de4:	60fb      	str	r3, [r7, #12]
 8013de6:	68fb      	ldr	r3, [r7, #12]
 8013de8:	4a08      	ldr	r2, [pc, #32]	@ (8013e0c <USB_FlushRxFifo+0x5c>)
 8013dea:	4293      	cmp	r3, r2
 8013dec:	d901      	bls.n	8013df2 <USB_FlushRxFifo+0x42>
 8013dee:	2303      	movs	r3, #3
 8013df0:	e006      	b.n	8013e00 <USB_FlushRxFifo+0x50>
 8013df2:	687b      	ldr	r3, [r7, #4]
 8013df4:	691b      	ldr	r3, [r3, #16]
 8013df6:	f003 0310 	and.w	r3, r3, #16
 8013dfa:	2b10      	cmp	r3, #16
 8013dfc:	d0f0      	beq.n	8013de0 <USB_FlushRxFifo+0x30>
 8013dfe:	2300      	movs	r3, #0
 8013e00:	4618      	mov	r0, r3
 8013e02:	3714      	adds	r7, #20
 8013e04:	46bd      	mov	sp, r7
 8013e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e0a:	4770      	bx	lr
 8013e0c:	00030d40 	.word	0x00030d40

08013e10 <USB_SetDevSpeed>:
 8013e10:	b480      	push	{r7}
 8013e12:	b085      	sub	sp, #20
 8013e14:	af00      	add	r7, sp, #0
 8013e16:	6078      	str	r0, [r7, #4]
 8013e18:	460b      	mov	r3, r1
 8013e1a:	70fb      	strb	r3, [r7, #3]
 8013e1c:	687b      	ldr	r3, [r7, #4]
 8013e1e:	60fb      	str	r3, [r7, #12]
 8013e20:	68fb      	ldr	r3, [r7, #12]
 8013e22:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013e26:	681a      	ldr	r2, [r3, #0]
 8013e28:	78fb      	ldrb	r3, [r7, #3]
 8013e2a:	68f9      	ldr	r1, [r7, #12]
 8013e2c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013e30:	4313      	orrs	r3, r2
 8013e32:	600b      	str	r3, [r1, #0]
 8013e34:	2300      	movs	r3, #0
 8013e36:	4618      	mov	r0, r3
 8013e38:	3714      	adds	r7, #20
 8013e3a:	46bd      	mov	sp, r7
 8013e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e40:	4770      	bx	lr

08013e42 <USB_GetDevSpeed>:
 8013e42:	b480      	push	{r7}
 8013e44:	b087      	sub	sp, #28
 8013e46:	af00      	add	r7, sp, #0
 8013e48:	6078      	str	r0, [r7, #4]
 8013e4a:	687b      	ldr	r3, [r7, #4]
 8013e4c:	613b      	str	r3, [r7, #16]
 8013e4e:	693b      	ldr	r3, [r7, #16]
 8013e50:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013e54:	689b      	ldr	r3, [r3, #8]
 8013e56:	f003 0306 	and.w	r3, r3, #6
 8013e5a:	60fb      	str	r3, [r7, #12]
 8013e5c:	68fb      	ldr	r3, [r7, #12]
 8013e5e:	2b00      	cmp	r3, #0
 8013e60:	d102      	bne.n	8013e68 <USB_GetDevSpeed+0x26>
 8013e62:	2300      	movs	r3, #0
 8013e64:	75fb      	strb	r3, [r7, #23]
 8013e66:	e00a      	b.n	8013e7e <USB_GetDevSpeed+0x3c>
 8013e68:	68fb      	ldr	r3, [r7, #12]
 8013e6a:	2b02      	cmp	r3, #2
 8013e6c:	d002      	beq.n	8013e74 <USB_GetDevSpeed+0x32>
 8013e6e:	68fb      	ldr	r3, [r7, #12]
 8013e70:	2b06      	cmp	r3, #6
 8013e72:	d102      	bne.n	8013e7a <USB_GetDevSpeed+0x38>
 8013e74:	2302      	movs	r3, #2
 8013e76:	75fb      	strb	r3, [r7, #23]
 8013e78:	e001      	b.n	8013e7e <USB_GetDevSpeed+0x3c>
 8013e7a:	230f      	movs	r3, #15
 8013e7c:	75fb      	strb	r3, [r7, #23]
 8013e7e:	7dfb      	ldrb	r3, [r7, #23]
 8013e80:	4618      	mov	r0, r3
 8013e82:	371c      	adds	r7, #28
 8013e84:	46bd      	mov	sp, r7
 8013e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e8a:	4770      	bx	lr

08013e8c <USB_ActivateEndpoint>:
 8013e8c:	b480      	push	{r7}
 8013e8e:	b085      	sub	sp, #20
 8013e90:	af00      	add	r7, sp, #0
 8013e92:	6078      	str	r0, [r7, #4]
 8013e94:	6039      	str	r1, [r7, #0]
 8013e96:	687b      	ldr	r3, [r7, #4]
 8013e98:	60fb      	str	r3, [r7, #12]
 8013e9a:	683b      	ldr	r3, [r7, #0]
 8013e9c:	781b      	ldrb	r3, [r3, #0]
 8013e9e:	60bb      	str	r3, [r7, #8]
 8013ea0:	683b      	ldr	r3, [r7, #0]
 8013ea2:	785b      	ldrb	r3, [r3, #1]
 8013ea4:	2b01      	cmp	r3, #1
 8013ea6:	d13a      	bne.n	8013f1e <USB_ActivateEndpoint+0x92>
 8013ea8:	68fb      	ldr	r3, [r7, #12]
 8013eaa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013eae:	69da      	ldr	r2, [r3, #28]
 8013eb0:	683b      	ldr	r3, [r7, #0]
 8013eb2:	781b      	ldrb	r3, [r3, #0]
 8013eb4:	f003 030f 	and.w	r3, r3, #15
 8013eb8:	2101      	movs	r1, #1
 8013eba:	fa01 f303 	lsl.w	r3, r1, r3
 8013ebe:	b29b      	uxth	r3, r3
 8013ec0:	68f9      	ldr	r1, [r7, #12]
 8013ec2:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013ec6:	4313      	orrs	r3, r2
 8013ec8:	61cb      	str	r3, [r1, #28]
 8013eca:	68bb      	ldr	r3, [r7, #8]
 8013ecc:	015a      	lsls	r2, r3, #5
 8013ece:	68fb      	ldr	r3, [r7, #12]
 8013ed0:	4413      	add	r3, r2
 8013ed2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013ed6:	681b      	ldr	r3, [r3, #0]
 8013ed8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8013edc:	2b00      	cmp	r3, #0
 8013ede:	d155      	bne.n	8013f8c <USB_ActivateEndpoint+0x100>
 8013ee0:	68bb      	ldr	r3, [r7, #8]
 8013ee2:	015a      	lsls	r2, r3, #5
 8013ee4:	68fb      	ldr	r3, [r7, #12]
 8013ee6:	4413      	add	r3, r2
 8013ee8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013eec:	681a      	ldr	r2, [r3, #0]
 8013eee:	683b      	ldr	r3, [r7, #0]
 8013ef0:	68db      	ldr	r3, [r3, #12]
 8013ef2:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8013ef6:	683b      	ldr	r3, [r7, #0]
 8013ef8:	791b      	ldrb	r3, [r3, #4]
 8013efa:	049b      	lsls	r3, r3, #18
 8013efc:	4319      	orrs	r1, r3
 8013efe:	68bb      	ldr	r3, [r7, #8]
 8013f00:	059b      	lsls	r3, r3, #22
 8013f02:	430b      	orrs	r3, r1
 8013f04:	4313      	orrs	r3, r2
 8013f06:	68ba      	ldr	r2, [r7, #8]
 8013f08:	0151      	lsls	r1, r2, #5
 8013f0a:	68fa      	ldr	r2, [r7, #12]
 8013f0c:	440a      	add	r2, r1
 8013f0e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8013f12:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8013f16:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8013f1a:	6013      	str	r3, [r2, #0]
 8013f1c:	e036      	b.n	8013f8c <USB_ActivateEndpoint+0x100>
 8013f1e:	68fb      	ldr	r3, [r7, #12]
 8013f20:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013f24:	69da      	ldr	r2, [r3, #28]
 8013f26:	683b      	ldr	r3, [r7, #0]
 8013f28:	781b      	ldrb	r3, [r3, #0]
 8013f2a:	f003 030f 	and.w	r3, r3, #15
 8013f2e:	2101      	movs	r1, #1
 8013f30:	fa01 f303 	lsl.w	r3, r1, r3
 8013f34:	041b      	lsls	r3, r3, #16
 8013f36:	68f9      	ldr	r1, [r7, #12]
 8013f38:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013f3c:	4313      	orrs	r3, r2
 8013f3e:	61cb      	str	r3, [r1, #28]
 8013f40:	68bb      	ldr	r3, [r7, #8]
 8013f42:	015a      	lsls	r2, r3, #5
 8013f44:	68fb      	ldr	r3, [r7, #12]
 8013f46:	4413      	add	r3, r2
 8013f48:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013f4c:	681b      	ldr	r3, [r3, #0]
 8013f4e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8013f52:	2b00      	cmp	r3, #0
 8013f54:	d11a      	bne.n	8013f8c <USB_ActivateEndpoint+0x100>
 8013f56:	68bb      	ldr	r3, [r7, #8]
 8013f58:	015a      	lsls	r2, r3, #5
 8013f5a:	68fb      	ldr	r3, [r7, #12]
 8013f5c:	4413      	add	r3, r2
 8013f5e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013f62:	681a      	ldr	r2, [r3, #0]
 8013f64:	683b      	ldr	r3, [r7, #0]
 8013f66:	68db      	ldr	r3, [r3, #12]
 8013f68:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8013f6c:	683b      	ldr	r3, [r7, #0]
 8013f6e:	791b      	ldrb	r3, [r3, #4]
 8013f70:	049b      	lsls	r3, r3, #18
 8013f72:	430b      	orrs	r3, r1
 8013f74:	4313      	orrs	r3, r2
 8013f76:	68ba      	ldr	r2, [r7, #8]
 8013f78:	0151      	lsls	r1, r2, #5
 8013f7a:	68fa      	ldr	r2, [r7, #12]
 8013f7c:	440a      	add	r2, r1
 8013f7e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8013f82:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8013f86:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8013f8a:	6013      	str	r3, [r2, #0]
 8013f8c:	2300      	movs	r3, #0
 8013f8e:	4618      	mov	r0, r3
 8013f90:	3714      	adds	r7, #20
 8013f92:	46bd      	mov	sp, r7
 8013f94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f98:	4770      	bx	lr
	...

08013f9c <USB_DeactivateEndpoint>:
 8013f9c:	b480      	push	{r7}
 8013f9e:	b085      	sub	sp, #20
 8013fa0:	af00      	add	r7, sp, #0
 8013fa2:	6078      	str	r0, [r7, #4]
 8013fa4:	6039      	str	r1, [r7, #0]
 8013fa6:	687b      	ldr	r3, [r7, #4]
 8013fa8:	60fb      	str	r3, [r7, #12]
 8013faa:	683b      	ldr	r3, [r7, #0]
 8013fac:	781b      	ldrb	r3, [r3, #0]
 8013fae:	60bb      	str	r3, [r7, #8]
 8013fb0:	683b      	ldr	r3, [r7, #0]
 8013fb2:	785b      	ldrb	r3, [r3, #1]
 8013fb4:	2b01      	cmp	r3, #1
 8013fb6:	d161      	bne.n	801407c <USB_DeactivateEndpoint+0xe0>
 8013fb8:	68bb      	ldr	r3, [r7, #8]
 8013fba:	015a      	lsls	r2, r3, #5
 8013fbc:	68fb      	ldr	r3, [r7, #12]
 8013fbe:	4413      	add	r3, r2
 8013fc0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013fc4:	681b      	ldr	r3, [r3, #0]
 8013fc6:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013fca:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013fce:	d11f      	bne.n	8014010 <USB_DeactivateEndpoint+0x74>
 8013fd0:	68bb      	ldr	r3, [r7, #8]
 8013fd2:	015a      	lsls	r2, r3, #5
 8013fd4:	68fb      	ldr	r3, [r7, #12]
 8013fd6:	4413      	add	r3, r2
 8013fd8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013fdc:	681b      	ldr	r3, [r3, #0]
 8013fde:	68ba      	ldr	r2, [r7, #8]
 8013fe0:	0151      	lsls	r1, r2, #5
 8013fe2:	68fa      	ldr	r2, [r7, #12]
 8013fe4:	440a      	add	r2, r1
 8013fe6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8013fea:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8013fee:	6013      	str	r3, [r2, #0]
 8013ff0:	68bb      	ldr	r3, [r7, #8]
 8013ff2:	015a      	lsls	r2, r3, #5
 8013ff4:	68fb      	ldr	r3, [r7, #12]
 8013ff6:	4413      	add	r3, r2
 8013ff8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013ffc:	681b      	ldr	r3, [r3, #0]
 8013ffe:	68ba      	ldr	r2, [r7, #8]
 8014000:	0151      	lsls	r1, r2, #5
 8014002:	68fa      	ldr	r2, [r7, #12]
 8014004:	440a      	add	r2, r1
 8014006:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801400a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 801400e:	6013      	str	r3, [r2, #0]
 8014010:	68fb      	ldr	r3, [r7, #12]
 8014012:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014016:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8014018:	683b      	ldr	r3, [r7, #0]
 801401a:	781b      	ldrb	r3, [r3, #0]
 801401c:	f003 030f 	and.w	r3, r3, #15
 8014020:	2101      	movs	r1, #1
 8014022:	fa01 f303 	lsl.w	r3, r1, r3
 8014026:	b29b      	uxth	r3, r3
 8014028:	43db      	mvns	r3, r3
 801402a:	68f9      	ldr	r1, [r7, #12]
 801402c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014030:	4013      	ands	r3, r2
 8014032:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8014034:	68fb      	ldr	r3, [r7, #12]
 8014036:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801403a:	69da      	ldr	r2, [r3, #28]
 801403c:	683b      	ldr	r3, [r7, #0]
 801403e:	781b      	ldrb	r3, [r3, #0]
 8014040:	f003 030f 	and.w	r3, r3, #15
 8014044:	2101      	movs	r1, #1
 8014046:	fa01 f303 	lsl.w	r3, r1, r3
 801404a:	b29b      	uxth	r3, r3
 801404c:	43db      	mvns	r3, r3
 801404e:	68f9      	ldr	r1, [r7, #12]
 8014050:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014054:	4013      	ands	r3, r2
 8014056:	61cb      	str	r3, [r1, #28]
 8014058:	68bb      	ldr	r3, [r7, #8]
 801405a:	015a      	lsls	r2, r3, #5
 801405c:	68fb      	ldr	r3, [r7, #12]
 801405e:	4413      	add	r3, r2
 8014060:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014064:	681a      	ldr	r2, [r3, #0]
 8014066:	68bb      	ldr	r3, [r7, #8]
 8014068:	0159      	lsls	r1, r3, #5
 801406a:	68fb      	ldr	r3, [r7, #12]
 801406c:	440b      	add	r3, r1
 801406e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014072:	4619      	mov	r1, r3
 8014074:	4b35      	ldr	r3, [pc, #212]	@ (801414c <USB_DeactivateEndpoint+0x1b0>)
 8014076:	4013      	ands	r3, r2
 8014078:	600b      	str	r3, [r1, #0]
 801407a:	e060      	b.n	801413e <USB_DeactivateEndpoint+0x1a2>
 801407c:	68bb      	ldr	r3, [r7, #8]
 801407e:	015a      	lsls	r2, r3, #5
 8014080:	68fb      	ldr	r3, [r7, #12]
 8014082:	4413      	add	r3, r2
 8014084:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014088:	681b      	ldr	r3, [r3, #0]
 801408a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 801408e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014092:	d11f      	bne.n	80140d4 <USB_DeactivateEndpoint+0x138>
 8014094:	68bb      	ldr	r3, [r7, #8]
 8014096:	015a      	lsls	r2, r3, #5
 8014098:	68fb      	ldr	r3, [r7, #12]
 801409a:	4413      	add	r3, r2
 801409c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80140a0:	681b      	ldr	r3, [r3, #0]
 80140a2:	68ba      	ldr	r2, [r7, #8]
 80140a4:	0151      	lsls	r1, r2, #5
 80140a6:	68fa      	ldr	r2, [r7, #12]
 80140a8:	440a      	add	r2, r1
 80140aa:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80140ae:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80140b2:	6013      	str	r3, [r2, #0]
 80140b4:	68bb      	ldr	r3, [r7, #8]
 80140b6:	015a      	lsls	r2, r3, #5
 80140b8:	68fb      	ldr	r3, [r7, #12]
 80140ba:	4413      	add	r3, r2
 80140bc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80140c0:	681b      	ldr	r3, [r3, #0]
 80140c2:	68ba      	ldr	r2, [r7, #8]
 80140c4:	0151      	lsls	r1, r2, #5
 80140c6:	68fa      	ldr	r2, [r7, #12]
 80140c8:	440a      	add	r2, r1
 80140ca:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80140ce:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80140d2:	6013      	str	r3, [r2, #0]
 80140d4:	68fb      	ldr	r3, [r7, #12]
 80140d6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80140da:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80140dc:	683b      	ldr	r3, [r7, #0]
 80140de:	781b      	ldrb	r3, [r3, #0]
 80140e0:	f003 030f 	and.w	r3, r3, #15
 80140e4:	2101      	movs	r1, #1
 80140e6:	fa01 f303 	lsl.w	r3, r1, r3
 80140ea:	041b      	lsls	r3, r3, #16
 80140ec:	43db      	mvns	r3, r3
 80140ee:	68f9      	ldr	r1, [r7, #12]
 80140f0:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80140f4:	4013      	ands	r3, r2
 80140f6:	63cb      	str	r3, [r1, #60]	@ 0x3c
 80140f8:	68fb      	ldr	r3, [r7, #12]
 80140fa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80140fe:	69da      	ldr	r2, [r3, #28]
 8014100:	683b      	ldr	r3, [r7, #0]
 8014102:	781b      	ldrb	r3, [r3, #0]
 8014104:	f003 030f 	and.w	r3, r3, #15
 8014108:	2101      	movs	r1, #1
 801410a:	fa01 f303 	lsl.w	r3, r1, r3
 801410e:	041b      	lsls	r3, r3, #16
 8014110:	43db      	mvns	r3, r3
 8014112:	68f9      	ldr	r1, [r7, #12]
 8014114:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014118:	4013      	ands	r3, r2
 801411a:	61cb      	str	r3, [r1, #28]
 801411c:	68bb      	ldr	r3, [r7, #8]
 801411e:	015a      	lsls	r2, r3, #5
 8014120:	68fb      	ldr	r3, [r7, #12]
 8014122:	4413      	add	r3, r2
 8014124:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014128:	681a      	ldr	r2, [r3, #0]
 801412a:	68bb      	ldr	r3, [r7, #8]
 801412c:	0159      	lsls	r1, r3, #5
 801412e:	68fb      	ldr	r3, [r7, #12]
 8014130:	440b      	add	r3, r1
 8014132:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014136:	4619      	mov	r1, r3
 8014138:	4b05      	ldr	r3, [pc, #20]	@ (8014150 <USB_DeactivateEndpoint+0x1b4>)
 801413a:	4013      	ands	r3, r2
 801413c:	600b      	str	r3, [r1, #0]
 801413e:	2300      	movs	r3, #0
 8014140:	4618      	mov	r0, r3
 8014142:	3714      	adds	r7, #20
 8014144:	46bd      	mov	sp, r7
 8014146:	f85d 7b04 	ldr.w	r7, [sp], #4
 801414a:	4770      	bx	lr
 801414c:	ec337800 	.word	0xec337800
 8014150:	eff37800 	.word	0xeff37800

08014154 <USB_EPStartXfer>:
 8014154:	b580      	push	{r7, lr}
 8014156:	b08a      	sub	sp, #40	@ 0x28
 8014158:	af02      	add	r7, sp, #8
 801415a:	60f8      	str	r0, [r7, #12]
 801415c:	60b9      	str	r1, [r7, #8]
 801415e:	4613      	mov	r3, r2
 8014160:	71fb      	strb	r3, [r7, #7]
 8014162:	68fb      	ldr	r3, [r7, #12]
 8014164:	61fb      	str	r3, [r7, #28]
 8014166:	68bb      	ldr	r3, [r7, #8]
 8014168:	781b      	ldrb	r3, [r3, #0]
 801416a:	61bb      	str	r3, [r7, #24]
 801416c:	68bb      	ldr	r3, [r7, #8]
 801416e:	785b      	ldrb	r3, [r3, #1]
 8014170:	2b01      	cmp	r3, #1
 8014172:	f040 815c 	bne.w	801442e <USB_EPStartXfer+0x2da>
 8014176:	68bb      	ldr	r3, [r7, #8]
 8014178:	699b      	ldr	r3, [r3, #24]
 801417a:	2b00      	cmp	r3, #0
 801417c:	d132      	bne.n	80141e4 <USB_EPStartXfer+0x90>
 801417e:	69bb      	ldr	r3, [r7, #24]
 8014180:	015a      	lsls	r2, r3, #5
 8014182:	69fb      	ldr	r3, [r7, #28]
 8014184:	4413      	add	r3, r2
 8014186:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801418a:	691b      	ldr	r3, [r3, #16]
 801418c:	69ba      	ldr	r2, [r7, #24]
 801418e:	0151      	lsls	r1, r2, #5
 8014190:	69fa      	ldr	r2, [r7, #28]
 8014192:	440a      	add	r2, r1
 8014194:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014198:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801419c:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80141a0:	6113      	str	r3, [r2, #16]
 80141a2:	69bb      	ldr	r3, [r7, #24]
 80141a4:	015a      	lsls	r2, r3, #5
 80141a6:	69fb      	ldr	r3, [r7, #28]
 80141a8:	4413      	add	r3, r2
 80141aa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80141ae:	691b      	ldr	r3, [r3, #16]
 80141b0:	69ba      	ldr	r2, [r7, #24]
 80141b2:	0151      	lsls	r1, r2, #5
 80141b4:	69fa      	ldr	r2, [r7, #28]
 80141b6:	440a      	add	r2, r1
 80141b8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80141bc:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80141c0:	6113      	str	r3, [r2, #16]
 80141c2:	69bb      	ldr	r3, [r7, #24]
 80141c4:	015a      	lsls	r2, r3, #5
 80141c6:	69fb      	ldr	r3, [r7, #28]
 80141c8:	4413      	add	r3, r2
 80141ca:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80141ce:	691b      	ldr	r3, [r3, #16]
 80141d0:	69ba      	ldr	r2, [r7, #24]
 80141d2:	0151      	lsls	r1, r2, #5
 80141d4:	69fa      	ldr	r2, [r7, #28]
 80141d6:	440a      	add	r2, r1
 80141d8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80141dc:	0cdb      	lsrs	r3, r3, #19
 80141de:	04db      	lsls	r3, r3, #19
 80141e0:	6113      	str	r3, [r2, #16]
 80141e2:	e074      	b.n	80142ce <USB_EPStartXfer+0x17a>
 80141e4:	69bb      	ldr	r3, [r7, #24]
 80141e6:	015a      	lsls	r2, r3, #5
 80141e8:	69fb      	ldr	r3, [r7, #28]
 80141ea:	4413      	add	r3, r2
 80141ec:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80141f0:	691b      	ldr	r3, [r3, #16]
 80141f2:	69ba      	ldr	r2, [r7, #24]
 80141f4:	0151      	lsls	r1, r2, #5
 80141f6:	69fa      	ldr	r2, [r7, #28]
 80141f8:	440a      	add	r2, r1
 80141fa:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80141fe:	0cdb      	lsrs	r3, r3, #19
 8014200:	04db      	lsls	r3, r3, #19
 8014202:	6113      	str	r3, [r2, #16]
 8014204:	69bb      	ldr	r3, [r7, #24]
 8014206:	015a      	lsls	r2, r3, #5
 8014208:	69fb      	ldr	r3, [r7, #28]
 801420a:	4413      	add	r3, r2
 801420c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014210:	691b      	ldr	r3, [r3, #16]
 8014212:	69ba      	ldr	r2, [r7, #24]
 8014214:	0151      	lsls	r1, r2, #5
 8014216:	69fa      	ldr	r2, [r7, #28]
 8014218:	440a      	add	r2, r1
 801421a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801421e:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8014222:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014226:	6113      	str	r3, [r2, #16]
 8014228:	69bb      	ldr	r3, [r7, #24]
 801422a:	015a      	lsls	r2, r3, #5
 801422c:	69fb      	ldr	r3, [r7, #28]
 801422e:	4413      	add	r3, r2
 8014230:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014234:	691a      	ldr	r2, [r3, #16]
 8014236:	68bb      	ldr	r3, [r7, #8]
 8014238:	6999      	ldr	r1, [r3, #24]
 801423a:	68bb      	ldr	r3, [r7, #8]
 801423c:	68db      	ldr	r3, [r3, #12]
 801423e:	440b      	add	r3, r1
 8014240:	1e59      	subs	r1, r3, #1
 8014242:	68bb      	ldr	r3, [r7, #8]
 8014244:	68db      	ldr	r3, [r3, #12]
 8014246:	fbb1 f3f3 	udiv	r3, r1, r3
 801424a:	04d9      	lsls	r1, r3, #19
 801424c:	4b9d      	ldr	r3, [pc, #628]	@ (80144c4 <USB_EPStartXfer+0x370>)
 801424e:	400b      	ands	r3, r1
 8014250:	69b9      	ldr	r1, [r7, #24]
 8014252:	0148      	lsls	r0, r1, #5
 8014254:	69f9      	ldr	r1, [r7, #28]
 8014256:	4401      	add	r1, r0
 8014258:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 801425c:	4313      	orrs	r3, r2
 801425e:	610b      	str	r3, [r1, #16]
 8014260:	69bb      	ldr	r3, [r7, #24]
 8014262:	015a      	lsls	r2, r3, #5
 8014264:	69fb      	ldr	r3, [r7, #28]
 8014266:	4413      	add	r3, r2
 8014268:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801426c:	691a      	ldr	r2, [r3, #16]
 801426e:	68bb      	ldr	r3, [r7, #8]
 8014270:	699b      	ldr	r3, [r3, #24]
 8014272:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014276:	69b9      	ldr	r1, [r7, #24]
 8014278:	0148      	lsls	r0, r1, #5
 801427a:	69f9      	ldr	r1, [r7, #28]
 801427c:	4401      	add	r1, r0
 801427e:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8014282:	4313      	orrs	r3, r2
 8014284:	610b      	str	r3, [r1, #16]
 8014286:	68bb      	ldr	r3, [r7, #8]
 8014288:	791b      	ldrb	r3, [r3, #4]
 801428a:	2b01      	cmp	r3, #1
 801428c:	d11f      	bne.n	80142ce <USB_EPStartXfer+0x17a>
 801428e:	69bb      	ldr	r3, [r7, #24]
 8014290:	015a      	lsls	r2, r3, #5
 8014292:	69fb      	ldr	r3, [r7, #28]
 8014294:	4413      	add	r3, r2
 8014296:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801429a:	691b      	ldr	r3, [r3, #16]
 801429c:	69ba      	ldr	r2, [r7, #24]
 801429e:	0151      	lsls	r1, r2, #5
 80142a0:	69fa      	ldr	r2, [r7, #28]
 80142a2:	440a      	add	r2, r1
 80142a4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80142a8:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 80142ac:	6113      	str	r3, [r2, #16]
 80142ae:	69bb      	ldr	r3, [r7, #24]
 80142b0:	015a      	lsls	r2, r3, #5
 80142b2:	69fb      	ldr	r3, [r7, #28]
 80142b4:	4413      	add	r3, r2
 80142b6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80142ba:	691b      	ldr	r3, [r3, #16]
 80142bc:	69ba      	ldr	r2, [r7, #24]
 80142be:	0151      	lsls	r1, r2, #5
 80142c0:	69fa      	ldr	r2, [r7, #28]
 80142c2:	440a      	add	r2, r1
 80142c4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80142c8:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80142cc:	6113      	str	r3, [r2, #16]
 80142ce:	79fb      	ldrb	r3, [r7, #7]
 80142d0:	2b01      	cmp	r3, #1
 80142d2:	d14b      	bne.n	801436c <USB_EPStartXfer+0x218>
 80142d4:	68bb      	ldr	r3, [r7, #8]
 80142d6:	695b      	ldr	r3, [r3, #20]
 80142d8:	2b00      	cmp	r3, #0
 80142da:	d009      	beq.n	80142f0 <USB_EPStartXfer+0x19c>
 80142dc:	69bb      	ldr	r3, [r7, #24]
 80142de:	015a      	lsls	r2, r3, #5
 80142e0:	69fb      	ldr	r3, [r7, #28]
 80142e2:	4413      	add	r3, r2
 80142e4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80142e8:	461a      	mov	r2, r3
 80142ea:	68bb      	ldr	r3, [r7, #8]
 80142ec:	695b      	ldr	r3, [r3, #20]
 80142ee:	6153      	str	r3, [r2, #20]
 80142f0:	68bb      	ldr	r3, [r7, #8]
 80142f2:	791b      	ldrb	r3, [r3, #4]
 80142f4:	2b01      	cmp	r3, #1
 80142f6:	d128      	bne.n	801434a <USB_EPStartXfer+0x1f6>
 80142f8:	69fb      	ldr	r3, [r7, #28]
 80142fa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80142fe:	689b      	ldr	r3, [r3, #8]
 8014300:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014304:	2b00      	cmp	r3, #0
 8014306:	d110      	bne.n	801432a <USB_EPStartXfer+0x1d6>
 8014308:	69bb      	ldr	r3, [r7, #24]
 801430a:	015a      	lsls	r2, r3, #5
 801430c:	69fb      	ldr	r3, [r7, #28]
 801430e:	4413      	add	r3, r2
 8014310:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014314:	681b      	ldr	r3, [r3, #0]
 8014316:	69ba      	ldr	r2, [r7, #24]
 8014318:	0151      	lsls	r1, r2, #5
 801431a:	69fa      	ldr	r2, [r7, #28]
 801431c:	440a      	add	r2, r1
 801431e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014322:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8014326:	6013      	str	r3, [r2, #0]
 8014328:	e00f      	b.n	801434a <USB_EPStartXfer+0x1f6>
 801432a:	69bb      	ldr	r3, [r7, #24]
 801432c:	015a      	lsls	r2, r3, #5
 801432e:	69fb      	ldr	r3, [r7, #28]
 8014330:	4413      	add	r3, r2
 8014332:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014336:	681b      	ldr	r3, [r3, #0]
 8014338:	69ba      	ldr	r2, [r7, #24]
 801433a:	0151      	lsls	r1, r2, #5
 801433c:	69fa      	ldr	r2, [r7, #28]
 801433e:	440a      	add	r2, r1
 8014340:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014344:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014348:	6013      	str	r3, [r2, #0]
 801434a:	69bb      	ldr	r3, [r7, #24]
 801434c:	015a      	lsls	r2, r3, #5
 801434e:	69fb      	ldr	r3, [r7, #28]
 8014350:	4413      	add	r3, r2
 8014352:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014356:	681b      	ldr	r3, [r3, #0]
 8014358:	69ba      	ldr	r2, [r7, #24]
 801435a:	0151      	lsls	r1, r2, #5
 801435c:	69fa      	ldr	r2, [r7, #28]
 801435e:	440a      	add	r2, r1
 8014360:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014364:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8014368:	6013      	str	r3, [r2, #0]
 801436a:	e133      	b.n	80145d4 <USB_EPStartXfer+0x480>
 801436c:	69bb      	ldr	r3, [r7, #24]
 801436e:	015a      	lsls	r2, r3, #5
 8014370:	69fb      	ldr	r3, [r7, #28]
 8014372:	4413      	add	r3, r2
 8014374:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014378:	681b      	ldr	r3, [r3, #0]
 801437a:	69ba      	ldr	r2, [r7, #24]
 801437c:	0151      	lsls	r1, r2, #5
 801437e:	69fa      	ldr	r2, [r7, #28]
 8014380:	440a      	add	r2, r1
 8014382:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014386:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801438a:	6013      	str	r3, [r2, #0]
 801438c:	68bb      	ldr	r3, [r7, #8]
 801438e:	791b      	ldrb	r3, [r3, #4]
 8014390:	2b01      	cmp	r3, #1
 8014392:	d015      	beq.n	80143c0 <USB_EPStartXfer+0x26c>
 8014394:	68bb      	ldr	r3, [r7, #8]
 8014396:	699b      	ldr	r3, [r3, #24]
 8014398:	2b00      	cmp	r3, #0
 801439a:	f000 811b 	beq.w	80145d4 <USB_EPStartXfer+0x480>
 801439e:	69fb      	ldr	r3, [r7, #28]
 80143a0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80143a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80143a6:	68bb      	ldr	r3, [r7, #8]
 80143a8:	781b      	ldrb	r3, [r3, #0]
 80143aa:	f003 030f 	and.w	r3, r3, #15
 80143ae:	2101      	movs	r1, #1
 80143b0:	fa01 f303 	lsl.w	r3, r1, r3
 80143b4:	69f9      	ldr	r1, [r7, #28]
 80143b6:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80143ba:	4313      	orrs	r3, r2
 80143bc:	634b      	str	r3, [r1, #52]	@ 0x34
 80143be:	e109      	b.n	80145d4 <USB_EPStartXfer+0x480>
 80143c0:	69fb      	ldr	r3, [r7, #28]
 80143c2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80143c6:	689b      	ldr	r3, [r3, #8]
 80143c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80143cc:	2b00      	cmp	r3, #0
 80143ce:	d110      	bne.n	80143f2 <USB_EPStartXfer+0x29e>
 80143d0:	69bb      	ldr	r3, [r7, #24]
 80143d2:	015a      	lsls	r2, r3, #5
 80143d4:	69fb      	ldr	r3, [r7, #28]
 80143d6:	4413      	add	r3, r2
 80143d8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143dc:	681b      	ldr	r3, [r3, #0]
 80143de:	69ba      	ldr	r2, [r7, #24]
 80143e0:	0151      	lsls	r1, r2, #5
 80143e2:	69fa      	ldr	r2, [r7, #28]
 80143e4:	440a      	add	r2, r1
 80143e6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80143ea:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80143ee:	6013      	str	r3, [r2, #0]
 80143f0:	e00f      	b.n	8014412 <USB_EPStartXfer+0x2be>
 80143f2:	69bb      	ldr	r3, [r7, #24]
 80143f4:	015a      	lsls	r2, r3, #5
 80143f6:	69fb      	ldr	r3, [r7, #28]
 80143f8:	4413      	add	r3, r2
 80143fa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143fe:	681b      	ldr	r3, [r3, #0]
 8014400:	69ba      	ldr	r2, [r7, #24]
 8014402:	0151      	lsls	r1, r2, #5
 8014404:	69fa      	ldr	r2, [r7, #28]
 8014406:	440a      	add	r2, r1
 8014408:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801440c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014410:	6013      	str	r3, [r2, #0]
 8014412:	68bb      	ldr	r3, [r7, #8]
 8014414:	6919      	ldr	r1, [r3, #16]
 8014416:	68bb      	ldr	r3, [r7, #8]
 8014418:	781a      	ldrb	r2, [r3, #0]
 801441a:	68bb      	ldr	r3, [r7, #8]
 801441c:	699b      	ldr	r3, [r3, #24]
 801441e:	b298      	uxth	r0, r3
 8014420:	79fb      	ldrb	r3, [r7, #7]
 8014422:	9300      	str	r3, [sp, #0]
 8014424:	4603      	mov	r3, r0
 8014426:	68f8      	ldr	r0, [r7, #12]
 8014428:	f000 fade 	bl	80149e8 <USB_WritePacket>
 801442c:	e0d2      	b.n	80145d4 <USB_EPStartXfer+0x480>
 801442e:	69bb      	ldr	r3, [r7, #24]
 8014430:	015a      	lsls	r2, r3, #5
 8014432:	69fb      	ldr	r3, [r7, #28]
 8014434:	4413      	add	r3, r2
 8014436:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801443a:	691b      	ldr	r3, [r3, #16]
 801443c:	69ba      	ldr	r2, [r7, #24]
 801443e:	0151      	lsls	r1, r2, #5
 8014440:	69fa      	ldr	r2, [r7, #28]
 8014442:	440a      	add	r2, r1
 8014444:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014448:	0cdb      	lsrs	r3, r3, #19
 801444a:	04db      	lsls	r3, r3, #19
 801444c:	6113      	str	r3, [r2, #16]
 801444e:	69bb      	ldr	r3, [r7, #24]
 8014450:	015a      	lsls	r2, r3, #5
 8014452:	69fb      	ldr	r3, [r7, #28]
 8014454:	4413      	add	r3, r2
 8014456:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801445a:	691b      	ldr	r3, [r3, #16]
 801445c:	69ba      	ldr	r2, [r7, #24]
 801445e:	0151      	lsls	r1, r2, #5
 8014460:	69fa      	ldr	r2, [r7, #28]
 8014462:	440a      	add	r2, r1
 8014464:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014468:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801446c:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014470:	6113      	str	r3, [r2, #16]
 8014472:	68bb      	ldr	r3, [r7, #8]
 8014474:	699b      	ldr	r3, [r3, #24]
 8014476:	2b00      	cmp	r3, #0
 8014478:	d126      	bne.n	80144c8 <USB_EPStartXfer+0x374>
 801447a:	69bb      	ldr	r3, [r7, #24]
 801447c:	015a      	lsls	r2, r3, #5
 801447e:	69fb      	ldr	r3, [r7, #28]
 8014480:	4413      	add	r3, r2
 8014482:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014486:	691a      	ldr	r2, [r3, #16]
 8014488:	68bb      	ldr	r3, [r7, #8]
 801448a:	68db      	ldr	r3, [r3, #12]
 801448c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014490:	69b9      	ldr	r1, [r7, #24]
 8014492:	0148      	lsls	r0, r1, #5
 8014494:	69f9      	ldr	r1, [r7, #28]
 8014496:	4401      	add	r1, r0
 8014498:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 801449c:	4313      	orrs	r3, r2
 801449e:	610b      	str	r3, [r1, #16]
 80144a0:	69bb      	ldr	r3, [r7, #24]
 80144a2:	015a      	lsls	r2, r3, #5
 80144a4:	69fb      	ldr	r3, [r7, #28]
 80144a6:	4413      	add	r3, r2
 80144a8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80144ac:	691b      	ldr	r3, [r3, #16]
 80144ae:	69ba      	ldr	r2, [r7, #24]
 80144b0:	0151      	lsls	r1, r2, #5
 80144b2:	69fa      	ldr	r2, [r7, #28]
 80144b4:	440a      	add	r2, r1
 80144b6:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80144ba:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80144be:	6113      	str	r3, [r2, #16]
 80144c0:	e03a      	b.n	8014538 <USB_EPStartXfer+0x3e4>
 80144c2:	bf00      	nop
 80144c4:	1ff80000 	.word	0x1ff80000
 80144c8:	68bb      	ldr	r3, [r7, #8]
 80144ca:	699a      	ldr	r2, [r3, #24]
 80144cc:	68bb      	ldr	r3, [r7, #8]
 80144ce:	68db      	ldr	r3, [r3, #12]
 80144d0:	4413      	add	r3, r2
 80144d2:	1e5a      	subs	r2, r3, #1
 80144d4:	68bb      	ldr	r3, [r7, #8]
 80144d6:	68db      	ldr	r3, [r3, #12]
 80144d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80144dc:	82fb      	strh	r3, [r7, #22]
 80144de:	68bb      	ldr	r3, [r7, #8]
 80144e0:	68db      	ldr	r3, [r3, #12]
 80144e2:	8afa      	ldrh	r2, [r7, #22]
 80144e4:	fb03 f202 	mul.w	r2, r3, r2
 80144e8:	68bb      	ldr	r3, [r7, #8]
 80144ea:	61da      	str	r2, [r3, #28]
 80144ec:	69bb      	ldr	r3, [r7, #24]
 80144ee:	015a      	lsls	r2, r3, #5
 80144f0:	69fb      	ldr	r3, [r7, #28]
 80144f2:	4413      	add	r3, r2
 80144f4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80144f8:	691a      	ldr	r2, [r3, #16]
 80144fa:	8afb      	ldrh	r3, [r7, #22]
 80144fc:	04d9      	lsls	r1, r3, #19
 80144fe:	4b38      	ldr	r3, [pc, #224]	@ (80145e0 <USB_EPStartXfer+0x48c>)
 8014500:	400b      	ands	r3, r1
 8014502:	69b9      	ldr	r1, [r7, #24]
 8014504:	0148      	lsls	r0, r1, #5
 8014506:	69f9      	ldr	r1, [r7, #28]
 8014508:	4401      	add	r1, r0
 801450a:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 801450e:	4313      	orrs	r3, r2
 8014510:	610b      	str	r3, [r1, #16]
 8014512:	69bb      	ldr	r3, [r7, #24]
 8014514:	015a      	lsls	r2, r3, #5
 8014516:	69fb      	ldr	r3, [r7, #28]
 8014518:	4413      	add	r3, r2
 801451a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801451e:	691a      	ldr	r2, [r3, #16]
 8014520:	68bb      	ldr	r3, [r7, #8]
 8014522:	69db      	ldr	r3, [r3, #28]
 8014524:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014528:	69b9      	ldr	r1, [r7, #24]
 801452a:	0148      	lsls	r0, r1, #5
 801452c:	69f9      	ldr	r1, [r7, #28]
 801452e:	4401      	add	r1, r0
 8014530:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8014534:	4313      	orrs	r3, r2
 8014536:	610b      	str	r3, [r1, #16]
 8014538:	79fb      	ldrb	r3, [r7, #7]
 801453a:	2b01      	cmp	r3, #1
 801453c:	d10d      	bne.n	801455a <USB_EPStartXfer+0x406>
 801453e:	68bb      	ldr	r3, [r7, #8]
 8014540:	691b      	ldr	r3, [r3, #16]
 8014542:	2b00      	cmp	r3, #0
 8014544:	d009      	beq.n	801455a <USB_EPStartXfer+0x406>
 8014546:	68bb      	ldr	r3, [r7, #8]
 8014548:	6919      	ldr	r1, [r3, #16]
 801454a:	69bb      	ldr	r3, [r7, #24]
 801454c:	015a      	lsls	r2, r3, #5
 801454e:	69fb      	ldr	r3, [r7, #28]
 8014550:	4413      	add	r3, r2
 8014552:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014556:	460a      	mov	r2, r1
 8014558:	615a      	str	r2, [r3, #20]
 801455a:	68bb      	ldr	r3, [r7, #8]
 801455c:	791b      	ldrb	r3, [r3, #4]
 801455e:	2b01      	cmp	r3, #1
 8014560:	d128      	bne.n	80145b4 <USB_EPStartXfer+0x460>
 8014562:	69fb      	ldr	r3, [r7, #28]
 8014564:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014568:	689b      	ldr	r3, [r3, #8]
 801456a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801456e:	2b00      	cmp	r3, #0
 8014570:	d110      	bne.n	8014594 <USB_EPStartXfer+0x440>
 8014572:	69bb      	ldr	r3, [r7, #24]
 8014574:	015a      	lsls	r2, r3, #5
 8014576:	69fb      	ldr	r3, [r7, #28]
 8014578:	4413      	add	r3, r2
 801457a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801457e:	681b      	ldr	r3, [r3, #0]
 8014580:	69ba      	ldr	r2, [r7, #24]
 8014582:	0151      	lsls	r1, r2, #5
 8014584:	69fa      	ldr	r2, [r7, #28]
 8014586:	440a      	add	r2, r1
 8014588:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801458c:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8014590:	6013      	str	r3, [r2, #0]
 8014592:	e00f      	b.n	80145b4 <USB_EPStartXfer+0x460>
 8014594:	69bb      	ldr	r3, [r7, #24]
 8014596:	015a      	lsls	r2, r3, #5
 8014598:	69fb      	ldr	r3, [r7, #28]
 801459a:	4413      	add	r3, r2
 801459c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145a0:	681b      	ldr	r3, [r3, #0]
 80145a2:	69ba      	ldr	r2, [r7, #24]
 80145a4:	0151      	lsls	r1, r2, #5
 80145a6:	69fa      	ldr	r2, [r7, #28]
 80145a8:	440a      	add	r2, r1
 80145aa:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80145ae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80145b2:	6013      	str	r3, [r2, #0]
 80145b4:	69bb      	ldr	r3, [r7, #24]
 80145b6:	015a      	lsls	r2, r3, #5
 80145b8:	69fb      	ldr	r3, [r7, #28]
 80145ba:	4413      	add	r3, r2
 80145bc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145c0:	681b      	ldr	r3, [r3, #0]
 80145c2:	69ba      	ldr	r2, [r7, #24]
 80145c4:	0151      	lsls	r1, r2, #5
 80145c6:	69fa      	ldr	r2, [r7, #28]
 80145c8:	440a      	add	r2, r1
 80145ca:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80145ce:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80145d2:	6013      	str	r3, [r2, #0]
 80145d4:	2300      	movs	r3, #0
 80145d6:	4618      	mov	r0, r3
 80145d8:	3720      	adds	r7, #32
 80145da:	46bd      	mov	sp, r7
 80145dc:	bd80      	pop	{r7, pc}
 80145de:	bf00      	nop
 80145e0:	1ff80000 	.word	0x1ff80000

080145e4 <USB_EP0StartXfer>:
 80145e4:	b480      	push	{r7}
 80145e6:	b087      	sub	sp, #28
 80145e8:	af00      	add	r7, sp, #0
 80145ea:	60f8      	str	r0, [r7, #12]
 80145ec:	60b9      	str	r1, [r7, #8]
 80145ee:	4613      	mov	r3, r2
 80145f0:	71fb      	strb	r3, [r7, #7]
 80145f2:	68fb      	ldr	r3, [r7, #12]
 80145f4:	617b      	str	r3, [r7, #20]
 80145f6:	68bb      	ldr	r3, [r7, #8]
 80145f8:	781b      	ldrb	r3, [r3, #0]
 80145fa:	613b      	str	r3, [r7, #16]
 80145fc:	68bb      	ldr	r3, [r7, #8]
 80145fe:	785b      	ldrb	r3, [r3, #1]
 8014600:	2b01      	cmp	r3, #1
 8014602:	f040 80ce 	bne.w	80147a2 <USB_EP0StartXfer+0x1be>
 8014606:	68bb      	ldr	r3, [r7, #8]
 8014608:	699b      	ldr	r3, [r3, #24]
 801460a:	2b00      	cmp	r3, #0
 801460c:	d132      	bne.n	8014674 <USB_EP0StartXfer+0x90>
 801460e:	693b      	ldr	r3, [r7, #16]
 8014610:	015a      	lsls	r2, r3, #5
 8014612:	697b      	ldr	r3, [r7, #20]
 8014614:	4413      	add	r3, r2
 8014616:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801461a:	691b      	ldr	r3, [r3, #16]
 801461c:	693a      	ldr	r2, [r7, #16]
 801461e:	0151      	lsls	r1, r2, #5
 8014620:	697a      	ldr	r2, [r7, #20]
 8014622:	440a      	add	r2, r1
 8014624:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014628:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801462c:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014630:	6113      	str	r3, [r2, #16]
 8014632:	693b      	ldr	r3, [r7, #16]
 8014634:	015a      	lsls	r2, r3, #5
 8014636:	697b      	ldr	r3, [r7, #20]
 8014638:	4413      	add	r3, r2
 801463a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801463e:	691b      	ldr	r3, [r3, #16]
 8014640:	693a      	ldr	r2, [r7, #16]
 8014642:	0151      	lsls	r1, r2, #5
 8014644:	697a      	ldr	r2, [r7, #20]
 8014646:	440a      	add	r2, r1
 8014648:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801464c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014650:	6113      	str	r3, [r2, #16]
 8014652:	693b      	ldr	r3, [r7, #16]
 8014654:	015a      	lsls	r2, r3, #5
 8014656:	697b      	ldr	r3, [r7, #20]
 8014658:	4413      	add	r3, r2
 801465a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801465e:	691b      	ldr	r3, [r3, #16]
 8014660:	693a      	ldr	r2, [r7, #16]
 8014662:	0151      	lsls	r1, r2, #5
 8014664:	697a      	ldr	r2, [r7, #20]
 8014666:	440a      	add	r2, r1
 8014668:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801466c:	0cdb      	lsrs	r3, r3, #19
 801466e:	04db      	lsls	r3, r3, #19
 8014670:	6113      	str	r3, [r2, #16]
 8014672:	e04e      	b.n	8014712 <USB_EP0StartXfer+0x12e>
 8014674:	693b      	ldr	r3, [r7, #16]
 8014676:	015a      	lsls	r2, r3, #5
 8014678:	697b      	ldr	r3, [r7, #20]
 801467a:	4413      	add	r3, r2
 801467c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014680:	691b      	ldr	r3, [r3, #16]
 8014682:	693a      	ldr	r2, [r7, #16]
 8014684:	0151      	lsls	r1, r2, #5
 8014686:	697a      	ldr	r2, [r7, #20]
 8014688:	440a      	add	r2, r1
 801468a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801468e:	0cdb      	lsrs	r3, r3, #19
 8014690:	04db      	lsls	r3, r3, #19
 8014692:	6113      	str	r3, [r2, #16]
 8014694:	693b      	ldr	r3, [r7, #16]
 8014696:	015a      	lsls	r2, r3, #5
 8014698:	697b      	ldr	r3, [r7, #20]
 801469a:	4413      	add	r3, r2
 801469c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80146a0:	691b      	ldr	r3, [r3, #16]
 80146a2:	693a      	ldr	r2, [r7, #16]
 80146a4:	0151      	lsls	r1, r2, #5
 80146a6:	697a      	ldr	r2, [r7, #20]
 80146a8:	440a      	add	r2, r1
 80146aa:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80146ae:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80146b2:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80146b6:	6113      	str	r3, [r2, #16]
 80146b8:	68bb      	ldr	r3, [r7, #8]
 80146ba:	699a      	ldr	r2, [r3, #24]
 80146bc:	68bb      	ldr	r3, [r7, #8]
 80146be:	68db      	ldr	r3, [r3, #12]
 80146c0:	429a      	cmp	r2, r3
 80146c2:	d903      	bls.n	80146cc <USB_EP0StartXfer+0xe8>
 80146c4:	68bb      	ldr	r3, [r7, #8]
 80146c6:	68da      	ldr	r2, [r3, #12]
 80146c8:	68bb      	ldr	r3, [r7, #8]
 80146ca:	619a      	str	r2, [r3, #24]
 80146cc:	693b      	ldr	r3, [r7, #16]
 80146ce:	015a      	lsls	r2, r3, #5
 80146d0:	697b      	ldr	r3, [r7, #20]
 80146d2:	4413      	add	r3, r2
 80146d4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80146d8:	691b      	ldr	r3, [r3, #16]
 80146da:	693a      	ldr	r2, [r7, #16]
 80146dc:	0151      	lsls	r1, r2, #5
 80146de:	697a      	ldr	r2, [r7, #20]
 80146e0:	440a      	add	r2, r1
 80146e2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80146e6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80146ea:	6113      	str	r3, [r2, #16]
 80146ec:	693b      	ldr	r3, [r7, #16]
 80146ee:	015a      	lsls	r2, r3, #5
 80146f0:	697b      	ldr	r3, [r7, #20]
 80146f2:	4413      	add	r3, r2
 80146f4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80146f8:	691a      	ldr	r2, [r3, #16]
 80146fa:	68bb      	ldr	r3, [r7, #8]
 80146fc:	699b      	ldr	r3, [r3, #24]
 80146fe:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014702:	6939      	ldr	r1, [r7, #16]
 8014704:	0148      	lsls	r0, r1, #5
 8014706:	6979      	ldr	r1, [r7, #20]
 8014708:	4401      	add	r1, r0
 801470a:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 801470e:	4313      	orrs	r3, r2
 8014710:	610b      	str	r3, [r1, #16]
 8014712:	79fb      	ldrb	r3, [r7, #7]
 8014714:	2b01      	cmp	r3, #1
 8014716:	d11e      	bne.n	8014756 <USB_EP0StartXfer+0x172>
 8014718:	68bb      	ldr	r3, [r7, #8]
 801471a:	695b      	ldr	r3, [r3, #20]
 801471c:	2b00      	cmp	r3, #0
 801471e:	d009      	beq.n	8014734 <USB_EP0StartXfer+0x150>
 8014720:	693b      	ldr	r3, [r7, #16]
 8014722:	015a      	lsls	r2, r3, #5
 8014724:	697b      	ldr	r3, [r7, #20]
 8014726:	4413      	add	r3, r2
 8014728:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801472c:	461a      	mov	r2, r3
 801472e:	68bb      	ldr	r3, [r7, #8]
 8014730:	695b      	ldr	r3, [r3, #20]
 8014732:	6153      	str	r3, [r2, #20]
 8014734:	693b      	ldr	r3, [r7, #16]
 8014736:	015a      	lsls	r2, r3, #5
 8014738:	697b      	ldr	r3, [r7, #20]
 801473a:	4413      	add	r3, r2
 801473c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014740:	681b      	ldr	r3, [r3, #0]
 8014742:	693a      	ldr	r2, [r7, #16]
 8014744:	0151      	lsls	r1, r2, #5
 8014746:	697a      	ldr	r2, [r7, #20]
 8014748:	440a      	add	r2, r1
 801474a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801474e:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8014752:	6013      	str	r3, [r2, #0]
 8014754:	e097      	b.n	8014886 <USB_EP0StartXfer+0x2a2>
 8014756:	693b      	ldr	r3, [r7, #16]
 8014758:	015a      	lsls	r2, r3, #5
 801475a:	697b      	ldr	r3, [r7, #20]
 801475c:	4413      	add	r3, r2
 801475e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014762:	681b      	ldr	r3, [r3, #0]
 8014764:	693a      	ldr	r2, [r7, #16]
 8014766:	0151      	lsls	r1, r2, #5
 8014768:	697a      	ldr	r2, [r7, #20]
 801476a:	440a      	add	r2, r1
 801476c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014770:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8014774:	6013      	str	r3, [r2, #0]
 8014776:	68bb      	ldr	r3, [r7, #8]
 8014778:	699b      	ldr	r3, [r3, #24]
 801477a:	2b00      	cmp	r3, #0
 801477c:	f000 8083 	beq.w	8014886 <USB_EP0StartXfer+0x2a2>
 8014780:	697b      	ldr	r3, [r7, #20]
 8014782:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014786:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8014788:	68bb      	ldr	r3, [r7, #8]
 801478a:	781b      	ldrb	r3, [r3, #0]
 801478c:	f003 030f 	and.w	r3, r3, #15
 8014790:	2101      	movs	r1, #1
 8014792:	fa01 f303 	lsl.w	r3, r1, r3
 8014796:	6979      	ldr	r1, [r7, #20]
 8014798:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801479c:	4313      	orrs	r3, r2
 801479e:	634b      	str	r3, [r1, #52]	@ 0x34
 80147a0:	e071      	b.n	8014886 <USB_EP0StartXfer+0x2a2>
 80147a2:	693b      	ldr	r3, [r7, #16]
 80147a4:	015a      	lsls	r2, r3, #5
 80147a6:	697b      	ldr	r3, [r7, #20]
 80147a8:	4413      	add	r3, r2
 80147aa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80147ae:	691b      	ldr	r3, [r3, #16]
 80147b0:	693a      	ldr	r2, [r7, #16]
 80147b2:	0151      	lsls	r1, r2, #5
 80147b4:	697a      	ldr	r2, [r7, #20]
 80147b6:	440a      	add	r2, r1
 80147b8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80147bc:	0cdb      	lsrs	r3, r3, #19
 80147be:	04db      	lsls	r3, r3, #19
 80147c0:	6113      	str	r3, [r2, #16]
 80147c2:	693b      	ldr	r3, [r7, #16]
 80147c4:	015a      	lsls	r2, r3, #5
 80147c6:	697b      	ldr	r3, [r7, #20]
 80147c8:	4413      	add	r3, r2
 80147ca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80147ce:	691b      	ldr	r3, [r3, #16]
 80147d0:	693a      	ldr	r2, [r7, #16]
 80147d2:	0151      	lsls	r1, r2, #5
 80147d4:	697a      	ldr	r2, [r7, #20]
 80147d6:	440a      	add	r2, r1
 80147d8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80147dc:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80147e0:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80147e4:	6113      	str	r3, [r2, #16]
 80147e6:	68bb      	ldr	r3, [r7, #8]
 80147e8:	699b      	ldr	r3, [r3, #24]
 80147ea:	2b00      	cmp	r3, #0
 80147ec:	d003      	beq.n	80147f6 <USB_EP0StartXfer+0x212>
 80147ee:	68bb      	ldr	r3, [r7, #8]
 80147f0:	68da      	ldr	r2, [r3, #12]
 80147f2:	68bb      	ldr	r3, [r7, #8]
 80147f4:	619a      	str	r2, [r3, #24]
 80147f6:	68bb      	ldr	r3, [r7, #8]
 80147f8:	68da      	ldr	r2, [r3, #12]
 80147fa:	68bb      	ldr	r3, [r7, #8]
 80147fc:	61da      	str	r2, [r3, #28]
 80147fe:	693b      	ldr	r3, [r7, #16]
 8014800:	015a      	lsls	r2, r3, #5
 8014802:	697b      	ldr	r3, [r7, #20]
 8014804:	4413      	add	r3, r2
 8014806:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801480a:	691b      	ldr	r3, [r3, #16]
 801480c:	693a      	ldr	r2, [r7, #16]
 801480e:	0151      	lsls	r1, r2, #5
 8014810:	697a      	ldr	r2, [r7, #20]
 8014812:	440a      	add	r2, r1
 8014814:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014818:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 801481c:	6113      	str	r3, [r2, #16]
 801481e:	693b      	ldr	r3, [r7, #16]
 8014820:	015a      	lsls	r2, r3, #5
 8014822:	697b      	ldr	r3, [r7, #20]
 8014824:	4413      	add	r3, r2
 8014826:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801482a:	691a      	ldr	r2, [r3, #16]
 801482c:	68bb      	ldr	r3, [r7, #8]
 801482e:	69db      	ldr	r3, [r3, #28]
 8014830:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014834:	6939      	ldr	r1, [r7, #16]
 8014836:	0148      	lsls	r0, r1, #5
 8014838:	6979      	ldr	r1, [r7, #20]
 801483a:	4401      	add	r1, r0
 801483c:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8014840:	4313      	orrs	r3, r2
 8014842:	610b      	str	r3, [r1, #16]
 8014844:	79fb      	ldrb	r3, [r7, #7]
 8014846:	2b01      	cmp	r3, #1
 8014848:	d10d      	bne.n	8014866 <USB_EP0StartXfer+0x282>
 801484a:	68bb      	ldr	r3, [r7, #8]
 801484c:	691b      	ldr	r3, [r3, #16]
 801484e:	2b00      	cmp	r3, #0
 8014850:	d009      	beq.n	8014866 <USB_EP0StartXfer+0x282>
 8014852:	68bb      	ldr	r3, [r7, #8]
 8014854:	6919      	ldr	r1, [r3, #16]
 8014856:	693b      	ldr	r3, [r7, #16]
 8014858:	015a      	lsls	r2, r3, #5
 801485a:	697b      	ldr	r3, [r7, #20]
 801485c:	4413      	add	r3, r2
 801485e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014862:	460a      	mov	r2, r1
 8014864:	615a      	str	r2, [r3, #20]
 8014866:	693b      	ldr	r3, [r7, #16]
 8014868:	015a      	lsls	r2, r3, #5
 801486a:	697b      	ldr	r3, [r7, #20]
 801486c:	4413      	add	r3, r2
 801486e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014872:	681b      	ldr	r3, [r3, #0]
 8014874:	693a      	ldr	r2, [r7, #16]
 8014876:	0151      	lsls	r1, r2, #5
 8014878:	697a      	ldr	r2, [r7, #20]
 801487a:	440a      	add	r2, r1
 801487c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014880:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8014884:	6013      	str	r3, [r2, #0]
 8014886:	2300      	movs	r3, #0
 8014888:	4618      	mov	r0, r3
 801488a:	371c      	adds	r7, #28
 801488c:	46bd      	mov	sp, r7
 801488e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014892:	4770      	bx	lr

08014894 <USB_EPStopXfer>:
 8014894:	b480      	push	{r7}
 8014896:	b087      	sub	sp, #28
 8014898:	af00      	add	r7, sp, #0
 801489a:	6078      	str	r0, [r7, #4]
 801489c:	6039      	str	r1, [r7, #0]
 801489e:	2300      	movs	r3, #0
 80148a0:	60fb      	str	r3, [r7, #12]
 80148a2:	2300      	movs	r3, #0
 80148a4:	75fb      	strb	r3, [r7, #23]
 80148a6:	687b      	ldr	r3, [r7, #4]
 80148a8:	613b      	str	r3, [r7, #16]
 80148aa:	683b      	ldr	r3, [r7, #0]
 80148ac:	785b      	ldrb	r3, [r3, #1]
 80148ae:	2b01      	cmp	r3, #1
 80148b0:	d14a      	bne.n	8014948 <USB_EPStopXfer+0xb4>
 80148b2:	683b      	ldr	r3, [r7, #0]
 80148b4:	781b      	ldrb	r3, [r3, #0]
 80148b6:	015a      	lsls	r2, r3, #5
 80148b8:	693b      	ldr	r3, [r7, #16]
 80148ba:	4413      	add	r3, r2
 80148bc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80148c0:	681b      	ldr	r3, [r3, #0]
 80148c2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80148c6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80148ca:	f040 8086 	bne.w	80149da <USB_EPStopXfer+0x146>
 80148ce:	683b      	ldr	r3, [r7, #0]
 80148d0:	781b      	ldrb	r3, [r3, #0]
 80148d2:	015a      	lsls	r2, r3, #5
 80148d4:	693b      	ldr	r3, [r7, #16]
 80148d6:	4413      	add	r3, r2
 80148d8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80148dc:	681b      	ldr	r3, [r3, #0]
 80148de:	683a      	ldr	r2, [r7, #0]
 80148e0:	7812      	ldrb	r2, [r2, #0]
 80148e2:	0151      	lsls	r1, r2, #5
 80148e4:	693a      	ldr	r2, [r7, #16]
 80148e6:	440a      	add	r2, r1
 80148e8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80148ec:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80148f0:	6013      	str	r3, [r2, #0]
 80148f2:	683b      	ldr	r3, [r7, #0]
 80148f4:	781b      	ldrb	r3, [r3, #0]
 80148f6:	015a      	lsls	r2, r3, #5
 80148f8:	693b      	ldr	r3, [r7, #16]
 80148fa:	4413      	add	r3, r2
 80148fc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014900:	681b      	ldr	r3, [r3, #0]
 8014902:	683a      	ldr	r2, [r7, #0]
 8014904:	7812      	ldrb	r2, [r2, #0]
 8014906:	0151      	lsls	r1, r2, #5
 8014908:	693a      	ldr	r2, [r7, #16]
 801490a:	440a      	add	r2, r1
 801490c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014910:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8014914:	6013      	str	r3, [r2, #0]
 8014916:	68fb      	ldr	r3, [r7, #12]
 8014918:	3301      	adds	r3, #1
 801491a:	60fb      	str	r3, [r7, #12]
 801491c:	68fb      	ldr	r3, [r7, #12]
 801491e:	f242 7210 	movw	r2, #10000	@ 0x2710
 8014922:	4293      	cmp	r3, r2
 8014924:	d902      	bls.n	801492c <USB_EPStopXfer+0x98>
 8014926:	2301      	movs	r3, #1
 8014928:	75fb      	strb	r3, [r7, #23]
 801492a:	e056      	b.n	80149da <USB_EPStopXfer+0x146>
 801492c:	683b      	ldr	r3, [r7, #0]
 801492e:	781b      	ldrb	r3, [r3, #0]
 8014930:	015a      	lsls	r2, r3, #5
 8014932:	693b      	ldr	r3, [r7, #16]
 8014934:	4413      	add	r3, r2
 8014936:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801493a:	681b      	ldr	r3, [r3, #0]
 801493c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014940:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014944:	d0e7      	beq.n	8014916 <USB_EPStopXfer+0x82>
 8014946:	e048      	b.n	80149da <USB_EPStopXfer+0x146>
 8014948:	683b      	ldr	r3, [r7, #0]
 801494a:	781b      	ldrb	r3, [r3, #0]
 801494c:	015a      	lsls	r2, r3, #5
 801494e:	693b      	ldr	r3, [r7, #16]
 8014950:	4413      	add	r3, r2
 8014952:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014956:	681b      	ldr	r3, [r3, #0]
 8014958:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 801495c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014960:	d13b      	bne.n	80149da <USB_EPStopXfer+0x146>
 8014962:	683b      	ldr	r3, [r7, #0]
 8014964:	781b      	ldrb	r3, [r3, #0]
 8014966:	015a      	lsls	r2, r3, #5
 8014968:	693b      	ldr	r3, [r7, #16]
 801496a:	4413      	add	r3, r2
 801496c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014970:	681b      	ldr	r3, [r3, #0]
 8014972:	683a      	ldr	r2, [r7, #0]
 8014974:	7812      	ldrb	r2, [r2, #0]
 8014976:	0151      	lsls	r1, r2, #5
 8014978:	693a      	ldr	r2, [r7, #16]
 801497a:	440a      	add	r2, r1
 801497c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014980:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8014984:	6013      	str	r3, [r2, #0]
 8014986:	683b      	ldr	r3, [r7, #0]
 8014988:	781b      	ldrb	r3, [r3, #0]
 801498a:	015a      	lsls	r2, r3, #5
 801498c:	693b      	ldr	r3, [r7, #16]
 801498e:	4413      	add	r3, r2
 8014990:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014994:	681b      	ldr	r3, [r3, #0]
 8014996:	683a      	ldr	r2, [r7, #0]
 8014998:	7812      	ldrb	r2, [r2, #0]
 801499a:	0151      	lsls	r1, r2, #5
 801499c:	693a      	ldr	r2, [r7, #16]
 801499e:	440a      	add	r2, r1
 80149a0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80149a4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80149a8:	6013      	str	r3, [r2, #0]
 80149aa:	68fb      	ldr	r3, [r7, #12]
 80149ac:	3301      	adds	r3, #1
 80149ae:	60fb      	str	r3, [r7, #12]
 80149b0:	68fb      	ldr	r3, [r7, #12]
 80149b2:	f242 7210 	movw	r2, #10000	@ 0x2710
 80149b6:	4293      	cmp	r3, r2
 80149b8:	d902      	bls.n	80149c0 <USB_EPStopXfer+0x12c>
 80149ba:	2301      	movs	r3, #1
 80149bc:	75fb      	strb	r3, [r7, #23]
 80149be:	e00c      	b.n	80149da <USB_EPStopXfer+0x146>
 80149c0:	683b      	ldr	r3, [r7, #0]
 80149c2:	781b      	ldrb	r3, [r3, #0]
 80149c4:	015a      	lsls	r2, r3, #5
 80149c6:	693b      	ldr	r3, [r7, #16]
 80149c8:	4413      	add	r3, r2
 80149ca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80149ce:	681b      	ldr	r3, [r3, #0]
 80149d0:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80149d4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80149d8:	d0e7      	beq.n	80149aa <USB_EPStopXfer+0x116>
 80149da:	7dfb      	ldrb	r3, [r7, #23]
 80149dc:	4618      	mov	r0, r3
 80149de:	371c      	adds	r7, #28
 80149e0:	46bd      	mov	sp, r7
 80149e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149e6:	4770      	bx	lr

080149e8 <USB_WritePacket>:
 80149e8:	b480      	push	{r7}
 80149ea:	b089      	sub	sp, #36	@ 0x24
 80149ec:	af00      	add	r7, sp, #0
 80149ee:	60f8      	str	r0, [r7, #12]
 80149f0:	60b9      	str	r1, [r7, #8]
 80149f2:	4611      	mov	r1, r2
 80149f4:	461a      	mov	r2, r3
 80149f6:	460b      	mov	r3, r1
 80149f8:	71fb      	strb	r3, [r7, #7]
 80149fa:	4613      	mov	r3, r2
 80149fc:	80bb      	strh	r3, [r7, #4]
 80149fe:	68fb      	ldr	r3, [r7, #12]
 8014a00:	617b      	str	r3, [r7, #20]
 8014a02:	68bb      	ldr	r3, [r7, #8]
 8014a04:	61fb      	str	r3, [r7, #28]
 8014a06:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8014a0a:	2b00      	cmp	r3, #0
 8014a0c:	d123      	bne.n	8014a56 <USB_WritePacket+0x6e>
 8014a0e:	88bb      	ldrh	r3, [r7, #4]
 8014a10:	3303      	adds	r3, #3
 8014a12:	089b      	lsrs	r3, r3, #2
 8014a14:	613b      	str	r3, [r7, #16]
 8014a16:	2300      	movs	r3, #0
 8014a18:	61bb      	str	r3, [r7, #24]
 8014a1a:	e018      	b.n	8014a4e <USB_WritePacket+0x66>
 8014a1c:	79fb      	ldrb	r3, [r7, #7]
 8014a1e:	031a      	lsls	r2, r3, #12
 8014a20:	697b      	ldr	r3, [r7, #20]
 8014a22:	4413      	add	r3, r2
 8014a24:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014a28:	461a      	mov	r2, r3
 8014a2a:	69fb      	ldr	r3, [r7, #28]
 8014a2c:	681b      	ldr	r3, [r3, #0]
 8014a2e:	6013      	str	r3, [r2, #0]
 8014a30:	69fb      	ldr	r3, [r7, #28]
 8014a32:	3301      	adds	r3, #1
 8014a34:	61fb      	str	r3, [r7, #28]
 8014a36:	69fb      	ldr	r3, [r7, #28]
 8014a38:	3301      	adds	r3, #1
 8014a3a:	61fb      	str	r3, [r7, #28]
 8014a3c:	69fb      	ldr	r3, [r7, #28]
 8014a3e:	3301      	adds	r3, #1
 8014a40:	61fb      	str	r3, [r7, #28]
 8014a42:	69fb      	ldr	r3, [r7, #28]
 8014a44:	3301      	adds	r3, #1
 8014a46:	61fb      	str	r3, [r7, #28]
 8014a48:	69bb      	ldr	r3, [r7, #24]
 8014a4a:	3301      	adds	r3, #1
 8014a4c:	61bb      	str	r3, [r7, #24]
 8014a4e:	69ba      	ldr	r2, [r7, #24]
 8014a50:	693b      	ldr	r3, [r7, #16]
 8014a52:	429a      	cmp	r2, r3
 8014a54:	d3e2      	bcc.n	8014a1c <USB_WritePacket+0x34>
 8014a56:	2300      	movs	r3, #0
 8014a58:	4618      	mov	r0, r3
 8014a5a:	3724      	adds	r7, #36	@ 0x24
 8014a5c:	46bd      	mov	sp, r7
 8014a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014a62:	4770      	bx	lr

08014a64 <USB_ReadPacket>:
 8014a64:	b480      	push	{r7}
 8014a66:	b08b      	sub	sp, #44	@ 0x2c
 8014a68:	af00      	add	r7, sp, #0
 8014a6a:	60f8      	str	r0, [r7, #12]
 8014a6c:	60b9      	str	r1, [r7, #8]
 8014a6e:	4613      	mov	r3, r2
 8014a70:	80fb      	strh	r3, [r7, #6]
 8014a72:	68fb      	ldr	r3, [r7, #12]
 8014a74:	61bb      	str	r3, [r7, #24]
 8014a76:	68bb      	ldr	r3, [r7, #8]
 8014a78:	627b      	str	r3, [r7, #36]	@ 0x24
 8014a7a:	88fb      	ldrh	r3, [r7, #6]
 8014a7c:	089b      	lsrs	r3, r3, #2
 8014a7e:	b29b      	uxth	r3, r3
 8014a80:	617b      	str	r3, [r7, #20]
 8014a82:	88fb      	ldrh	r3, [r7, #6]
 8014a84:	f003 0303 	and.w	r3, r3, #3
 8014a88:	83fb      	strh	r3, [r7, #30]
 8014a8a:	2300      	movs	r3, #0
 8014a8c:	623b      	str	r3, [r7, #32]
 8014a8e:	e014      	b.n	8014aba <USB_ReadPacket+0x56>
 8014a90:	69bb      	ldr	r3, [r7, #24]
 8014a92:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014a96:	681a      	ldr	r2, [r3, #0]
 8014a98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014a9a:	601a      	str	r2, [r3, #0]
 8014a9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014a9e:	3301      	adds	r3, #1
 8014aa0:	627b      	str	r3, [r7, #36]	@ 0x24
 8014aa2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014aa4:	3301      	adds	r3, #1
 8014aa6:	627b      	str	r3, [r7, #36]	@ 0x24
 8014aa8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014aaa:	3301      	adds	r3, #1
 8014aac:	627b      	str	r3, [r7, #36]	@ 0x24
 8014aae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014ab0:	3301      	adds	r3, #1
 8014ab2:	627b      	str	r3, [r7, #36]	@ 0x24
 8014ab4:	6a3b      	ldr	r3, [r7, #32]
 8014ab6:	3301      	adds	r3, #1
 8014ab8:	623b      	str	r3, [r7, #32]
 8014aba:	6a3a      	ldr	r2, [r7, #32]
 8014abc:	697b      	ldr	r3, [r7, #20]
 8014abe:	429a      	cmp	r2, r3
 8014ac0:	d3e6      	bcc.n	8014a90 <USB_ReadPacket+0x2c>
 8014ac2:	8bfb      	ldrh	r3, [r7, #30]
 8014ac4:	2b00      	cmp	r3, #0
 8014ac6:	d01e      	beq.n	8014b06 <USB_ReadPacket+0xa2>
 8014ac8:	2300      	movs	r3, #0
 8014aca:	623b      	str	r3, [r7, #32]
 8014acc:	69bb      	ldr	r3, [r7, #24]
 8014ace:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014ad2:	461a      	mov	r2, r3
 8014ad4:	f107 0310 	add.w	r3, r7, #16
 8014ad8:	6812      	ldr	r2, [r2, #0]
 8014ada:	601a      	str	r2, [r3, #0]
 8014adc:	693a      	ldr	r2, [r7, #16]
 8014ade:	6a3b      	ldr	r3, [r7, #32]
 8014ae0:	b2db      	uxtb	r3, r3
 8014ae2:	00db      	lsls	r3, r3, #3
 8014ae4:	fa22 f303 	lsr.w	r3, r2, r3
 8014ae8:	b2da      	uxtb	r2, r3
 8014aea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014aec:	701a      	strb	r2, [r3, #0]
 8014aee:	6a3b      	ldr	r3, [r7, #32]
 8014af0:	3301      	adds	r3, #1
 8014af2:	623b      	str	r3, [r7, #32]
 8014af4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014af6:	3301      	adds	r3, #1
 8014af8:	627b      	str	r3, [r7, #36]	@ 0x24
 8014afa:	8bfb      	ldrh	r3, [r7, #30]
 8014afc:	3b01      	subs	r3, #1
 8014afe:	83fb      	strh	r3, [r7, #30]
 8014b00:	8bfb      	ldrh	r3, [r7, #30]
 8014b02:	2b00      	cmp	r3, #0
 8014b04:	d1ea      	bne.n	8014adc <USB_ReadPacket+0x78>
 8014b06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014b08:	4618      	mov	r0, r3
 8014b0a:	372c      	adds	r7, #44	@ 0x2c
 8014b0c:	46bd      	mov	sp, r7
 8014b0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b12:	4770      	bx	lr

08014b14 <USB_EPSetStall>:
 8014b14:	b480      	push	{r7}
 8014b16:	b085      	sub	sp, #20
 8014b18:	af00      	add	r7, sp, #0
 8014b1a:	6078      	str	r0, [r7, #4]
 8014b1c:	6039      	str	r1, [r7, #0]
 8014b1e:	687b      	ldr	r3, [r7, #4]
 8014b20:	60fb      	str	r3, [r7, #12]
 8014b22:	683b      	ldr	r3, [r7, #0]
 8014b24:	781b      	ldrb	r3, [r3, #0]
 8014b26:	60bb      	str	r3, [r7, #8]
 8014b28:	683b      	ldr	r3, [r7, #0]
 8014b2a:	785b      	ldrb	r3, [r3, #1]
 8014b2c:	2b01      	cmp	r3, #1
 8014b2e:	d12c      	bne.n	8014b8a <USB_EPSetStall+0x76>
 8014b30:	68bb      	ldr	r3, [r7, #8]
 8014b32:	015a      	lsls	r2, r3, #5
 8014b34:	68fb      	ldr	r3, [r7, #12]
 8014b36:	4413      	add	r3, r2
 8014b38:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014b3c:	681b      	ldr	r3, [r3, #0]
 8014b3e:	2b00      	cmp	r3, #0
 8014b40:	db12      	blt.n	8014b68 <USB_EPSetStall+0x54>
 8014b42:	68bb      	ldr	r3, [r7, #8]
 8014b44:	2b00      	cmp	r3, #0
 8014b46:	d00f      	beq.n	8014b68 <USB_EPSetStall+0x54>
 8014b48:	68bb      	ldr	r3, [r7, #8]
 8014b4a:	015a      	lsls	r2, r3, #5
 8014b4c:	68fb      	ldr	r3, [r7, #12]
 8014b4e:	4413      	add	r3, r2
 8014b50:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014b54:	681b      	ldr	r3, [r3, #0]
 8014b56:	68ba      	ldr	r2, [r7, #8]
 8014b58:	0151      	lsls	r1, r2, #5
 8014b5a:	68fa      	ldr	r2, [r7, #12]
 8014b5c:	440a      	add	r2, r1
 8014b5e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014b62:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8014b66:	6013      	str	r3, [r2, #0]
 8014b68:	68bb      	ldr	r3, [r7, #8]
 8014b6a:	015a      	lsls	r2, r3, #5
 8014b6c:	68fb      	ldr	r3, [r7, #12]
 8014b6e:	4413      	add	r3, r2
 8014b70:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014b74:	681b      	ldr	r3, [r3, #0]
 8014b76:	68ba      	ldr	r2, [r7, #8]
 8014b78:	0151      	lsls	r1, r2, #5
 8014b7a:	68fa      	ldr	r2, [r7, #12]
 8014b7c:	440a      	add	r2, r1
 8014b7e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014b82:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8014b86:	6013      	str	r3, [r2, #0]
 8014b88:	e02b      	b.n	8014be2 <USB_EPSetStall+0xce>
 8014b8a:	68bb      	ldr	r3, [r7, #8]
 8014b8c:	015a      	lsls	r2, r3, #5
 8014b8e:	68fb      	ldr	r3, [r7, #12]
 8014b90:	4413      	add	r3, r2
 8014b92:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014b96:	681b      	ldr	r3, [r3, #0]
 8014b98:	2b00      	cmp	r3, #0
 8014b9a:	db12      	blt.n	8014bc2 <USB_EPSetStall+0xae>
 8014b9c:	68bb      	ldr	r3, [r7, #8]
 8014b9e:	2b00      	cmp	r3, #0
 8014ba0:	d00f      	beq.n	8014bc2 <USB_EPSetStall+0xae>
 8014ba2:	68bb      	ldr	r3, [r7, #8]
 8014ba4:	015a      	lsls	r2, r3, #5
 8014ba6:	68fb      	ldr	r3, [r7, #12]
 8014ba8:	4413      	add	r3, r2
 8014baa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014bae:	681b      	ldr	r3, [r3, #0]
 8014bb0:	68ba      	ldr	r2, [r7, #8]
 8014bb2:	0151      	lsls	r1, r2, #5
 8014bb4:	68fa      	ldr	r2, [r7, #12]
 8014bb6:	440a      	add	r2, r1
 8014bb8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014bbc:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8014bc0:	6013      	str	r3, [r2, #0]
 8014bc2:	68bb      	ldr	r3, [r7, #8]
 8014bc4:	015a      	lsls	r2, r3, #5
 8014bc6:	68fb      	ldr	r3, [r7, #12]
 8014bc8:	4413      	add	r3, r2
 8014bca:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014bce:	681b      	ldr	r3, [r3, #0]
 8014bd0:	68ba      	ldr	r2, [r7, #8]
 8014bd2:	0151      	lsls	r1, r2, #5
 8014bd4:	68fa      	ldr	r2, [r7, #12]
 8014bd6:	440a      	add	r2, r1
 8014bd8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014bdc:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8014be0:	6013      	str	r3, [r2, #0]
 8014be2:	2300      	movs	r3, #0
 8014be4:	4618      	mov	r0, r3
 8014be6:	3714      	adds	r7, #20
 8014be8:	46bd      	mov	sp, r7
 8014bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014bee:	4770      	bx	lr

08014bf0 <USB_EPClearStall>:
 8014bf0:	b480      	push	{r7}
 8014bf2:	b085      	sub	sp, #20
 8014bf4:	af00      	add	r7, sp, #0
 8014bf6:	6078      	str	r0, [r7, #4]
 8014bf8:	6039      	str	r1, [r7, #0]
 8014bfa:	687b      	ldr	r3, [r7, #4]
 8014bfc:	60fb      	str	r3, [r7, #12]
 8014bfe:	683b      	ldr	r3, [r7, #0]
 8014c00:	781b      	ldrb	r3, [r3, #0]
 8014c02:	60bb      	str	r3, [r7, #8]
 8014c04:	683b      	ldr	r3, [r7, #0]
 8014c06:	785b      	ldrb	r3, [r3, #1]
 8014c08:	2b01      	cmp	r3, #1
 8014c0a:	d128      	bne.n	8014c5e <USB_EPClearStall+0x6e>
 8014c0c:	68bb      	ldr	r3, [r7, #8]
 8014c0e:	015a      	lsls	r2, r3, #5
 8014c10:	68fb      	ldr	r3, [r7, #12]
 8014c12:	4413      	add	r3, r2
 8014c14:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014c18:	681b      	ldr	r3, [r3, #0]
 8014c1a:	68ba      	ldr	r2, [r7, #8]
 8014c1c:	0151      	lsls	r1, r2, #5
 8014c1e:	68fa      	ldr	r2, [r7, #12]
 8014c20:	440a      	add	r2, r1
 8014c22:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014c26:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8014c2a:	6013      	str	r3, [r2, #0]
 8014c2c:	683b      	ldr	r3, [r7, #0]
 8014c2e:	791b      	ldrb	r3, [r3, #4]
 8014c30:	2b03      	cmp	r3, #3
 8014c32:	d003      	beq.n	8014c3c <USB_EPClearStall+0x4c>
 8014c34:	683b      	ldr	r3, [r7, #0]
 8014c36:	791b      	ldrb	r3, [r3, #4]
 8014c38:	2b02      	cmp	r3, #2
 8014c3a:	d138      	bne.n	8014cae <USB_EPClearStall+0xbe>
 8014c3c:	68bb      	ldr	r3, [r7, #8]
 8014c3e:	015a      	lsls	r2, r3, #5
 8014c40:	68fb      	ldr	r3, [r7, #12]
 8014c42:	4413      	add	r3, r2
 8014c44:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014c48:	681b      	ldr	r3, [r3, #0]
 8014c4a:	68ba      	ldr	r2, [r7, #8]
 8014c4c:	0151      	lsls	r1, r2, #5
 8014c4e:	68fa      	ldr	r2, [r7, #12]
 8014c50:	440a      	add	r2, r1
 8014c52:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014c56:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014c5a:	6013      	str	r3, [r2, #0]
 8014c5c:	e027      	b.n	8014cae <USB_EPClearStall+0xbe>
 8014c5e:	68bb      	ldr	r3, [r7, #8]
 8014c60:	015a      	lsls	r2, r3, #5
 8014c62:	68fb      	ldr	r3, [r7, #12]
 8014c64:	4413      	add	r3, r2
 8014c66:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014c6a:	681b      	ldr	r3, [r3, #0]
 8014c6c:	68ba      	ldr	r2, [r7, #8]
 8014c6e:	0151      	lsls	r1, r2, #5
 8014c70:	68fa      	ldr	r2, [r7, #12]
 8014c72:	440a      	add	r2, r1
 8014c74:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014c78:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8014c7c:	6013      	str	r3, [r2, #0]
 8014c7e:	683b      	ldr	r3, [r7, #0]
 8014c80:	791b      	ldrb	r3, [r3, #4]
 8014c82:	2b03      	cmp	r3, #3
 8014c84:	d003      	beq.n	8014c8e <USB_EPClearStall+0x9e>
 8014c86:	683b      	ldr	r3, [r7, #0]
 8014c88:	791b      	ldrb	r3, [r3, #4]
 8014c8a:	2b02      	cmp	r3, #2
 8014c8c:	d10f      	bne.n	8014cae <USB_EPClearStall+0xbe>
 8014c8e:	68bb      	ldr	r3, [r7, #8]
 8014c90:	015a      	lsls	r2, r3, #5
 8014c92:	68fb      	ldr	r3, [r7, #12]
 8014c94:	4413      	add	r3, r2
 8014c96:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014c9a:	681b      	ldr	r3, [r3, #0]
 8014c9c:	68ba      	ldr	r2, [r7, #8]
 8014c9e:	0151      	lsls	r1, r2, #5
 8014ca0:	68fa      	ldr	r2, [r7, #12]
 8014ca2:	440a      	add	r2, r1
 8014ca4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014ca8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014cac:	6013      	str	r3, [r2, #0]
 8014cae:	2300      	movs	r3, #0
 8014cb0:	4618      	mov	r0, r3
 8014cb2:	3714      	adds	r7, #20
 8014cb4:	46bd      	mov	sp, r7
 8014cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014cba:	4770      	bx	lr

08014cbc <USB_SetDevAddress>:
 8014cbc:	b480      	push	{r7}
 8014cbe:	b085      	sub	sp, #20
 8014cc0:	af00      	add	r7, sp, #0
 8014cc2:	6078      	str	r0, [r7, #4]
 8014cc4:	460b      	mov	r3, r1
 8014cc6:	70fb      	strb	r3, [r7, #3]
 8014cc8:	687b      	ldr	r3, [r7, #4]
 8014cca:	60fb      	str	r3, [r7, #12]
 8014ccc:	68fb      	ldr	r3, [r7, #12]
 8014cce:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014cd2:	681b      	ldr	r3, [r3, #0]
 8014cd4:	68fa      	ldr	r2, [r7, #12]
 8014cd6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014cda:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8014cde:	6013      	str	r3, [r2, #0]
 8014ce0:	68fb      	ldr	r3, [r7, #12]
 8014ce2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014ce6:	681a      	ldr	r2, [r3, #0]
 8014ce8:	78fb      	ldrb	r3, [r7, #3]
 8014cea:	011b      	lsls	r3, r3, #4
 8014cec:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 8014cf0:	68f9      	ldr	r1, [r7, #12]
 8014cf2:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014cf6:	4313      	orrs	r3, r2
 8014cf8:	600b      	str	r3, [r1, #0]
 8014cfa:	2300      	movs	r3, #0
 8014cfc:	4618      	mov	r0, r3
 8014cfe:	3714      	adds	r7, #20
 8014d00:	46bd      	mov	sp, r7
 8014d02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d06:	4770      	bx	lr

08014d08 <USB_DevConnect>:
 8014d08:	b480      	push	{r7}
 8014d0a:	b085      	sub	sp, #20
 8014d0c:	af00      	add	r7, sp, #0
 8014d0e:	6078      	str	r0, [r7, #4]
 8014d10:	687b      	ldr	r3, [r7, #4]
 8014d12:	60fb      	str	r3, [r7, #12]
 8014d14:	68fb      	ldr	r3, [r7, #12]
 8014d16:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8014d1a:	681b      	ldr	r3, [r3, #0]
 8014d1c:	68fa      	ldr	r2, [r7, #12]
 8014d1e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8014d22:	f023 0303 	bic.w	r3, r3, #3
 8014d26:	6013      	str	r3, [r2, #0]
 8014d28:	68fb      	ldr	r3, [r7, #12]
 8014d2a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014d2e:	685b      	ldr	r3, [r3, #4]
 8014d30:	68fa      	ldr	r2, [r7, #12]
 8014d32:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014d36:	f023 0302 	bic.w	r3, r3, #2
 8014d3a:	6053      	str	r3, [r2, #4]
 8014d3c:	2300      	movs	r3, #0
 8014d3e:	4618      	mov	r0, r3
 8014d40:	3714      	adds	r7, #20
 8014d42:	46bd      	mov	sp, r7
 8014d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d48:	4770      	bx	lr

08014d4a <USB_DevDisconnect>:
 8014d4a:	b480      	push	{r7}
 8014d4c:	b085      	sub	sp, #20
 8014d4e:	af00      	add	r7, sp, #0
 8014d50:	6078      	str	r0, [r7, #4]
 8014d52:	687b      	ldr	r3, [r7, #4]
 8014d54:	60fb      	str	r3, [r7, #12]
 8014d56:	68fb      	ldr	r3, [r7, #12]
 8014d58:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8014d5c:	681b      	ldr	r3, [r3, #0]
 8014d5e:	68fa      	ldr	r2, [r7, #12]
 8014d60:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8014d64:	f023 0303 	bic.w	r3, r3, #3
 8014d68:	6013      	str	r3, [r2, #0]
 8014d6a:	68fb      	ldr	r3, [r7, #12]
 8014d6c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014d70:	685b      	ldr	r3, [r3, #4]
 8014d72:	68fa      	ldr	r2, [r7, #12]
 8014d74:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014d78:	f043 0302 	orr.w	r3, r3, #2
 8014d7c:	6053      	str	r3, [r2, #4]
 8014d7e:	2300      	movs	r3, #0
 8014d80:	4618      	mov	r0, r3
 8014d82:	3714      	adds	r7, #20
 8014d84:	46bd      	mov	sp, r7
 8014d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d8a:	4770      	bx	lr

08014d8c <USB_ReadInterrupts>:
 8014d8c:	b480      	push	{r7}
 8014d8e:	b085      	sub	sp, #20
 8014d90:	af00      	add	r7, sp, #0
 8014d92:	6078      	str	r0, [r7, #4]
 8014d94:	687b      	ldr	r3, [r7, #4]
 8014d96:	695b      	ldr	r3, [r3, #20]
 8014d98:	60fb      	str	r3, [r7, #12]
 8014d9a:	687b      	ldr	r3, [r7, #4]
 8014d9c:	699b      	ldr	r3, [r3, #24]
 8014d9e:	68fa      	ldr	r2, [r7, #12]
 8014da0:	4013      	ands	r3, r2
 8014da2:	60fb      	str	r3, [r7, #12]
 8014da4:	68fb      	ldr	r3, [r7, #12]
 8014da6:	4618      	mov	r0, r3
 8014da8:	3714      	adds	r7, #20
 8014daa:	46bd      	mov	sp, r7
 8014dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014db0:	4770      	bx	lr

08014db2 <USB_ReadDevAllOutEpInterrupt>:
 8014db2:	b480      	push	{r7}
 8014db4:	b085      	sub	sp, #20
 8014db6:	af00      	add	r7, sp, #0
 8014db8:	6078      	str	r0, [r7, #4]
 8014dba:	687b      	ldr	r3, [r7, #4]
 8014dbc:	60fb      	str	r3, [r7, #12]
 8014dbe:	68fb      	ldr	r3, [r7, #12]
 8014dc0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014dc4:	699b      	ldr	r3, [r3, #24]
 8014dc6:	60bb      	str	r3, [r7, #8]
 8014dc8:	68fb      	ldr	r3, [r7, #12]
 8014dca:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014dce:	69db      	ldr	r3, [r3, #28]
 8014dd0:	68ba      	ldr	r2, [r7, #8]
 8014dd2:	4013      	ands	r3, r2
 8014dd4:	60bb      	str	r3, [r7, #8]
 8014dd6:	68bb      	ldr	r3, [r7, #8]
 8014dd8:	0c1b      	lsrs	r3, r3, #16
 8014dda:	4618      	mov	r0, r3
 8014ddc:	3714      	adds	r7, #20
 8014dde:	46bd      	mov	sp, r7
 8014de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014de4:	4770      	bx	lr

08014de6 <USB_ReadDevAllInEpInterrupt>:
 8014de6:	b480      	push	{r7}
 8014de8:	b085      	sub	sp, #20
 8014dea:	af00      	add	r7, sp, #0
 8014dec:	6078      	str	r0, [r7, #4]
 8014dee:	687b      	ldr	r3, [r7, #4]
 8014df0:	60fb      	str	r3, [r7, #12]
 8014df2:	68fb      	ldr	r3, [r7, #12]
 8014df4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014df8:	699b      	ldr	r3, [r3, #24]
 8014dfa:	60bb      	str	r3, [r7, #8]
 8014dfc:	68fb      	ldr	r3, [r7, #12]
 8014dfe:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e02:	69db      	ldr	r3, [r3, #28]
 8014e04:	68ba      	ldr	r2, [r7, #8]
 8014e06:	4013      	ands	r3, r2
 8014e08:	60bb      	str	r3, [r7, #8]
 8014e0a:	68bb      	ldr	r3, [r7, #8]
 8014e0c:	b29b      	uxth	r3, r3
 8014e0e:	4618      	mov	r0, r3
 8014e10:	3714      	adds	r7, #20
 8014e12:	46bd      	mov	sp, r7
 8014e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e18:	4770      	bx	lr

08014e1a <USB_ReadDevOutEPInterrupt>:
 8014e1a:	b480      	push	{r7}
 8014e1c:	b085      	sub	sp, #20
 8014e1e:	af00      	add	r7, sp, #0
 8014e20:	6078      	str	r0, [r7, #4]
 8014e22:	460b      	mov	r3, r1
 8014e24:	70fb      	strb	r3, [r7, #3]
 8014e26:	687b      	ldr	r3, [r7, #4]
 8014e28:	60fb      	str	r3, [r7, #12]
 8014e2a:	78fb      	ldrb	r3, [r7, #3]
 8014e2c:	015a      	lsls	r2, r3, #5
 8014e2e:	68fb      	ldr	r3, [r7, #12]
 8014e30:	4413      	add	r3, r2
 8014e32:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014e36:	689b      	ldr	r3, [r3, #8]
 8014e38:	60bb      	str	r3, [r7, #8]
 8014e3a:	68fb      	ldr	r3, [r7, #12]
 8014e3c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e40:	695b      	ldr	r3, [r3, #20]
 8014e42:	68ba      	ldr	r2, [r7, #8]
 8014e44:	4013      	ands	r3, r2
 8014e46:	60bb      	str	r3, [r7, #8]
 8014e48:	68bb      	ldr	r3, [r7, #8]
 8014e4a:	4618      	mov	r0, r3
 8014e4c:	3714      	adds	r7, #20
 8014e4e:	46bd      	mov	sp, r7
 8014e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e54:	4770      	bx	lr

08014e56 <USB_ReadDevInEPInterrupt>:
 8014e56:	b480      	push	{r7}
 8014e58:	b087      	sub	sp, #28
 8014e5a:	af00      	add	r7, sp, #0
 8014e5c:	6078      	str	r0, [r7, #4]
 8014e5e:	460b      	mov	r3, r1
 8014e60:	70fb      	strb	r3, [r7, #3]
 8014e62:	687b      	ldr	r3, [r7, #4]
 8014e64:	617b      	str	r3, [r7, #20]
 8014e66:	697b      	ldr	r3, [r7, #20]
 8014e68:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e6c:	691b      	ldr	r3, [r3, #16]
 8014e6e:	613b      	str	r3, [r7, #16]
 8014e70:	697b      	ldr	r3, [r7, #20]
 8014e72:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e76:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014e78:	60fb      	str	r3, [r7, #12]
 8014e7a:	78fb      	ldrb	r3, [r7, #3]
 8014e7c:	f003 030f 	and.w	r3, r3, #15
 8014e80:	68fa      	ldr	r2, [r7, #12]
 8014e82:	fa22 f303 	lsr.w	r3, r2, r3
 8014e86:	01db      	lsls	r3, r3, #7
 8014e88:	b2db      	uxtb	r3, r3
 8014e8a:	693a      	ldr	r2, [r7, #16]
 8014e8c:	4313      	orrs	r3, r2
 8014e8e:	613b      	str	r3, [r7, #16]
 8014e90:	78fb      	ldrb	r3, [r7, #3]
 8014e92:	015a      	lsls	r2, r3, #5
 8014e94:	697b      	ldr	r3, [r7, #20]
 8014e96:	4413      	add	r3, r2
 8014e98:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014e9c:	689b      	ldr	r3, [r3, #8]
 8014e9e:	693a      	ldr	r2, [r7, #16]
 8014ea0:	4013      	ands	r3, r2
 8014ea2:	60bb      	str	r3, [r7, #8]
 8014ea4:	68bb      	ldr	r3, [r7, #8]
 8014ea6:	4618      	mov	r0, r3
 8014ea8:	371c      	adds	r7, #28
 8014eaa:	46bd      	mov	sp, r7
 8014eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014eb0:	4770      	bx	lr

08014eb2 <USB_GetMode>:
 8014eb2:	b480      	push	{r7}
 8014eb4:	b083      	sub	sp, #12
 8014eb6:	af00      	add	r7, sp, #0
 8014eb8:	6078      	str	r0, [r7, #4]
 8014eba:	687b      	ldr	r3, [r7, #4]
 8014ebc:	695b      	ldr	r3, [r3, #20]
 8014ebe:	f003 0301 	and.w	r3, r3, #1
 8014ec2:	4618      	mov	r0, r3
 8014ec4:	370c      	adds	r7, #12
 8014ec6:	46bd      	mov	sp, r7
 8014ec8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ecc:	4770      	bx	lr

08014ece <USB_ActivateSetup>:
 8014ece:	b480      	push	{r7}
 8014ed0:	b085      	sub	sp, #20
 8014ed2:	af00      	add	r7, sp, #0
 8014ed4:	6078      	str	r0, [r7, #4]
 8014ed6:	687b      	ldr	r3, [r7, #4]
 8014ed8:	60fb      	str	r3, [r7, #12]
 8014eda:	68fb      	ldr	r3, [r7, #12]
 8014edc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014ee0:	681b      	ldr	r3, [r3, #0]
 8014ee2:	68fa      	ldr	r2, [r7, #12]
 8014ee4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014ee8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8014eec:	f023 0307 	bic.w	r3, r3, #7
 8014ef0:	6013      	str	r3, [r2, #0]
 8014ef2:	68fb      	ldr	r3, [r7, #12]
 8014ef4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014ef8:	685b      	ldr	r3, [r3, #4]
 8014efa:	68fa      	ldr	r2, [r7, #12]
 8014efc:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014f00:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8014f04:	6053      	str	r3, [r2, #4]
 8014f06:	2300      	movs	r3, #0
 8014f08:	4618      	mov	r0, r3
 8014f0a:	3714      	adds	r7, #20
 8014f0c:	46bd      	mov	sp, r7
 8014f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f12:	4770      	bx	lr

08014f14 <USB_EP0_OutStart>:
 8014f14:	b480      	push	{r7}
 8014f16:	b087      	sub	sp, #28
 8014f18:	af00      	add	r7, sp, #0
 8014f1a:	60f8      	str	r0, [r7, #12]
 8014f1c:	460b      	mov	r3, r1
 8014f1e:	607a      	str	r2, [r7, #4]
 8014f20:	72fb      	strb	r3, [r7, #11]
 8014f22:	68fb      	ldr	r3, [r7, #12]
 8014f24:	617b      	str	r3, [r7, #20]
 8014f26:	68fb      	ldr	r3, [r7, #12]
 8014f28:	333c      	adds	r3, #60	@ 0x3c
 8014f2a:	3304      	adds	r3, #4
 8014f2c:	681b      	ldr	r3, [r3, #0]
 8014f2e:	613b      	str	r3, [r7, #16]
 8014f30:	693b      	ldr	r3, [r7, #16]
 8014f32:	4a26      	ldr	r2, [pc, #152]	@ (8014fcc <USB_EP0_OutStart+0xb8>)
 8014f34:	4293      	cmp	r3, r2
 8014f36:	d90a      	bls.n	8014f4e <USB_EP0_OutStart+0x3a>
 8014f38:	697b      	ldr	r3, [r7, #20]
 8014f3a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f3e:	681b      	ldr	r3, [r3, #0]
 8014f40:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014f44:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014f48:	d101      	bne.n	8014f4e <USB_EP0_OutStart+0x3a>
 8014f4a:	2300      	movs	r3, #0
 8014f4c:	e037      	b.n	8014fbe <USB_EP0_OutStart+0xaa>
 8014f4e:	697b      	ldr	r3, [r7, #20]
 8014f50:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f54:	461a      	mov	r2, r3
 8014f56:	2300      	movs	r3, #0
 8014f58:	6113      	str	r3, [r2, #16]
 8014f5a:	697b      	ldr	r3, [r7, #20]
 8014f5c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f60:	691b      	ldr	r3, [r3, #16]
 8014f62:	697a      	ldr	r2, [r7, #20]
 8014f64:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014f68:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014f6c:	6113      	str	r3, [r2, #16]
 8014f6e:	697b      	ldr	r3, [r7, #20]
 8014f70:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f74:	691b      	ldr	r3, [r3, #16]
 8014f76:	697a      	ldr	r2, [r7, #20]
 8014f78:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014f7c:	f043 0318 	orr.w	r3, r3, #24
 8014f80:	6113      	str	r3, [r2, #16]
 8014f82:	697b      	ldr	r3, [r7, #20]
 8014f84:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f88:	691b      	ldr	r3, [r3, #16]
 8014f8a:	697a      	ldr	r2, [r7, #20]
 8014f8c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014f90:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 8014f94:	6113      	str	r3, [r2, #16]
 8014f96:	7afb      	ldrb	r3, [r7, #11]
 8014f98:	2b01      	cmp	r3, #1
 8014f9a:	d10f      	bne.n	8014fbc <USB_EP0_OutStart+0xa8>
 8014f9c:	697b      	ldr	r3, [r7, #20]
 8014f9e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014fa2:	461a      	mov	r2, r3
 8014fa4:	687b      	ldr	r3, [r7, #4]
 8014fa6:	6153      	str	r3, [r2, #20]
 8014fa8:	697b      	ldr	r3, [r7, #20]
 8014faa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014fae:	681b      	ldr	r3, [r3, #0]
 8014fb0:	697a      	ldr	r2, [r7, #20]
 8014fb2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014fb6:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 8014fba:	6013      	str	r3, [r2, #0]
 8014fbc:	2300      	movs	r3, #0
 8014fbe:	4618      	mov	r0, r3
 8014fc0:	371c      	adds	r7, #28
 8014fc2:	46bd      	mov	sp, r7
 8014fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014fc8:	4770      	bx	lr
 8014fca:	bf00      	nop
 8014fcc:	4f54300a 	.word	0x4f54300a

08014fd0 <USB_CoreReset>:
 8014fd0:	b480      	push	{r7}
 8014fd2:	b085      	sub	sp, #20
 8014fd4:	af00      	add	r7, sp, #0
 8014fd6:	6078      	str	r0, [r7, #4]
 8014fd8:	2300      	movs	r3, #0
 8014fda:	60fb      	str	r3, [r7, #12]
 8014fdc:	68fb      	ldr	r3, [r7, #12]
 8014fde:	3301      	adds	r3, #1
 8014fe0:	60fb      	str	r3, [r7, #12]
 8014fe2:	68fb      	ldr	r3, [r7, #12]
 8014fe4:	4a13      	ldr	r2, [pc, #76]	@ (8015034 <USB_CoreReset+0x64>)
 8014fe6:	4293      	cmp	r3, r2
 8014fe8:	d901      	bls.n	8014fee <USB_CoreReset+0x1e>
 8014fea:	2303      	movs	r3, #3
 8014fec:	e01b      	b.n	8015026 <USB_CoreReset+0x56>
 8014fee:	687b      	ldr	r3, [r7, #4]
 8014ff0:	691b      	ldr	r3, [r3, #16]
 8014ff2:	2b00      	cmp	r3, #0
 8014ff4:	daf2      	bge.n	8014fdc <USB_CoreReset+0xc>
 8014ff6:	2300      	movs	r3, #0
 8014ff8:	60fb      	str	r3, [r7, #12]
 8014ffa:	687b      	ldr	r3, [r7, #4]
 8014ffc:	691b      	ldr	r3, [r3, #16]
 8014ffe:	f043 0201 	orr.w	r2, r3, #1
 8015002:	687b      	ldr	r3, [r7, #4]
 8015004:	611a      	str	r2, [r3, #16]
 8015006:	68fb      	ldr	r3, [r7, #12]
 8015008:	3301      	adds	r3, #1
 801500a:	60fb      	str	r3, [r7, #12]
 801500c:	68fb      	ldr	r3, [r7, #12]
 801500e:	4a09      	ldr	r2, [pc, #36]	@ (8015034 <USB_CoreReset+0x64>)
 8015010:	4293      	cmp	r3, r2
 8015012:	d901      	bls.n	8015018 <USB_CoreReset+0x48>
 8015014:	2303      	movs	r3, #3
 8015016:	e006      	b.n	8015026 <USB_CoreReset+0x56>
 8015018:	687b      	ldr	r3, [r7, #4]
 801501a:	691b      	ldr	r3, [r3, #16]
 801501c:	f003 0301 	and.w	r3, r3, #1
 8015020:	2b01      	cmp	r3, #1
 8015022:	d0f0      	beq.n	8015006 <USB_CoreReset+0x36>
 8015024:	2300      	movs	r3, #0
 8015026:	4618      	mov	r0, r3
 8015028:	3714      	adds	r7, #20
 801502a:	46bd      	mov	sp, r7
 801502c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015030:	4770      	bx	lr
 8015032:	bf00      	nop
 8015034:	00030d40 	.word	0x00030d40

08015038 <USBD_CDC_Init>:
 8015038:	b580      	push	{r7, lr}
 801503a:	b084      	sub	sp, #16
 801503c:	af00      	add	r7, sp, #0
 801503e:	6078      	str	r0, [r7, #4]
 8015040:	460b      	mov	r3, r1
 8015042:	70fb      	strb	r3, [r7, #3]
 8015044:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 8015048:	f005 fd6e 	bl	801ab28 <USBD_static_malloc>
 801504c:	60f8      	str	r0, [r7, #12]
 801504e:	68fb      	ldr	r3, [r7, #12]
 8015050:	2b00      	cmp	r3, #0
 8015052:	d109      	bne.n	8015068 <USBD_CDC_Init+0x30>
 8015054:	687b      	ldr	r3, [r7, #4]
 8015056:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801505a:	687b      	ldr	r3, [r7, #4]
 801505c:	32b0      	adds	r2, #176	@ 0xb0
 801505e:	2100      	movs	r1, #0
 8015060:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8015064:	2302      	movs	r3, #2
 8015066:	e0d4      	b.n	8015212 <USBD_CDC_Init+0x1da>
 8015068:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 801506c:	2100      	movs	r1, #0
 801506e:	68f8      	ldr	r0, [r7, #12]
 8015070:	f005 fed7 	bl	801ae22 <memset>
 8015074:	687b      	ldr	r3, [r7, #4]
 8015076:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801507a:	687b      	ldr	r3, [r7, #4]
 801507c:	32b0      	adds	r2, #176	@ 0xb0
 801507e:	68f9      	ldr	r1, [r7, #12]
 8015080:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8015084:	687b      	ldr	r3, [r7, #4]
 8015086:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801508a:	687b      	ldr	r3, [r7, #4]
 801508c:	32b0      	adds	r2, #176	@ 0xb0
 801508e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8015092:	687b      	ldr	r3, [r7, #4]
 8015094:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 8015098:	687b      	ldr	r3, [r7, #4]
 801509a:	7c1b      	ldrb	r3, [r3, #16]
 801509c:	2b00      	cmp	r3, #0
 801509e:	d138      	bne.n	8015112 <USBD_CDC_Init+0xda>
 80150a0:	4b5e      	ldr	r3, [pc, #376]	@ (801521c <USBD_CDC_Init+0x1e4>)
 80150a2:	7819      	ldrb	r1, [r3, #0]
 80150a4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80150a8:	2202      	movs	r2, #2
 80150aa:	6878      	ldr	r0, [r7, #4]
 80150ac:	f005 fc19 	bl	801a8e2 <USBD_LL_OpenEP>
 80150b0:	4b5a      	ldr	r3, [pc, #360]	@ (801521c <USBD_CDC_Init+0x1e4>)
 80150b2:	781b      	ldrb	r3, [r3, #0]
 80150b4:	f003 020f 	and.w	r2, r3, #15
 80150b8:	6879      	ldr	r1, [r7, #4]
 80150ba:	4613      	mov	r3, r2
 80150bc:	009b      	lsls	r3, r3, #2
 80150be:	4413      	add	r3, r2
 80150c0:	009b      	lsls	r3, r3, #2
 80150c2:	440b      	add	r3, r1
 80150c4:	3324      	adds	r3, #36	@ 0x24
 80150c6:	2201      	movs	r2, #1
 80150c8:	801a      	strh	r2, [r3, #0]
 80150ca:	4b55      	ldr	r3, [pc, #340]	@ (8015220 <USBD_CDC_Init+0x1e8>)
 80150cc:	7819      	ldrb	r1, [r3, #0]
 80150ce:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80150d2:	2202      	movs	r2, #2
 80150d4:	6878      	ldr	r0, [r7, #4]
 80150d6:	f005 fc04 	bl	801a8e2 <USBD_LL_OpenEP>
 80150da:	4b51      	ldr	r3, [pc, #324]	@ (8015220 <USBD_CDC_Init+0x1e8>)
 80150dc:	781b      	ldrb	r3, [r3, #0]
 80150de:	f003 020f 	and.w	r2, r3, #15
 80150e2:	6879      	ldr	r1, [r7, #4]
 80150e4:	4613      	mov	r3, r2
 80150e6:	009b      	lsls	r3, r3, #2
 80150e8:	4413      	add	r3, r2
 80150ea:	009b      	lsls	r3, r3, #2
 80150ec:	440b      	add	r3, r1
 80150ee:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80150f2:	2201      	movs	r2, #1
 80150f4:	801a      	strh	r2, [r3, #0]
 80150f6:	4b4b      	ldr	r3, [pc, #300]	@ (8015224 <USBD_CDC_Init+0x1ec>)
 80150f8:	781b      	ldrb	r3, [r3, #0]
 80150fa:	f003 020f 	and.w	r2, r3, #15
 80150fe:	6879      	ldr	r1, [r7, #4]
 8015100:	4613      	mov	r3, r2
 8015102:	009b      	lsls	r3, r3, #2
 8015104:	4413      	add	r3, r2
 8015106:	009b      	lsls	r3, r3, #2
 8015108:	440b      	add	r3, r1
 801510a:	3326      	adds	r3, #38	@ 0x26
 801510c:	2210      	movs	r2, #16
 801510e:	801a      	strh	r2, [r3, #0]
 8015110:	e035      	b.n	801517e <USBD_CDC_Init+0x146>
 8015112:	4b42      	ldr	r3, [pc, #264]	@ (801521c <USBD_CDC_Init+0x1e4>)
 8015114:	7819      	ldrb	r1, [r3, #0]
 8015116:	2340      	movs	r3, #64	@ 0x40
 8015118:	2202      	movs	r2, #2
 801511a:	6878      	ldr	r0, [r7, #4]
 801511c:	f005 fbe1 	bl	801a8e2 <USBD_LL_OpenEP>
 8015120:	4b3e      	ldr	r3, [pc, #248]	@ (801521c <USBD_CDC_Init+0x1e4>)
 8015122:	781b      	ldrb	r3, [r3, #0]
 8015124:	f003 020f 	and.w	r2, r3, #15
 8015128:	6879      	ldr	r1, [r7, #4]
 801512a:	4613      	mov	r3, r2
 801512c:	009b      	lsls	r3, r3, #2
 801512e:	4413      	add	r3, r2
 8015130:	009b      	lsls	r3, r3, #2
 8015132:	440b      	add	r3, r1
 8015134:	3324      	adds	r3, #36	@ 0x24
 8015136:	2201      	movs	r2, #1
 8015138:	801a      	strh	r2, [r3, #0]
 801513a:	4b39      	ldr	r3, [pc, #228]	@ (8015220 <USBD_CDC_Init+0x1e8>)
 801513c:	7819      	ldrb	r1, [r3, #0]
 801513e:	2340      	movs	r3, #64	@ 0x40
 8015140:	2202      	movs	r2, #2
 8015142:	6878      	ldr	r0, [r7, #4]
 8015144:	f005 fbcd 	bl	801a8e2 <USBD_LL_OpenEP>
 8015148:	4b35      	ldr	r3, [pc, #212]	@ (8015220 <USBD_CDC_Init+0x1e8>)
 801514a:	781b      	ldrb	r3, [r3, #0]
 801514c:	f003 020f 	and.w	r2, r3, #15
 8015150:	6879      	ldr	r1, [r7, #4]
 8015152:	4613      	mov	r3, r2
 8015154:	009b      	lsls	r3, r3, #2
 8015156:	4413      	add	r3, r2
 8015158:	009b      	lsls	r3, r3, #2
 801515a:	440b      	add	r3, r1
 801515c:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8015160:	2201      	movs	r2, #1
 8015162:	801a      	strh	r2, [r3, #0]
 8015164:	4b2f      	ldr	r3, [pc, #188]	@ (8015224 <USBD_CDC_Init+0x1ec>)
 8015166:	781b      	ldrb	r3, [r3, #0]
 8015168:	f003 020f 	and.w	r2, r3, #15
 801516c:	6879      	ldr	r1, [r7, #4]
 801516e:	4613      	mov	r3, r2
 8015170:	009b      	lsls	r3, r3, #2
 8015172:	4413      	add	r3, r2
 8015174:	009b      	lsls	r3, r3, #2
 8015176:	440b      	add	r3, r1
 8015178:	3326      	adds	r3, #38	@ 0x26
 801517a:	2210      	movs	r2, #16
 801517c:	801a      	strh	r2, [r3, #0]
 801517e:	4b29      	ldr	r3, [pc, #164]	@ (8015224 <USBD_CDC_Init+0x1ec>)
 8015180:	7819      	ldrb	r1, [r3, #0]
 8015182:	2308      	movs	r3, #8
 8015184:	2203      	movs	r2, #3
 8015186:	6878      	ldr	r0, [r7, #4]
 8015188:	f005 fbab 	bl	801a8e2 <USBD_LL_OpenEP>
 801518c:	4b25      	ldr	r3, [pc, #148]	@ (8015224 <USBD_CDC_Init+0x1ec>)
 801518e:	781b      	ldrb	r3, [r3, #0]
 8015190:	f003 020f 	and.w	r2, r3, #15
 8015194:	6879      	ldr	r1, [r7, #4]
 8015196:	4613      	mov	r3, r2
 8015198:	009b      	lsls	r3, r3, #2
 801519a:	4413      	add	r3, r2
 801519c:	009b      	lsls	r3, r3, #2
 801519e:	440b      	add	r3, r1
 80151a0:	3324      	adds	r3, #36	@ 0x24
 80151a2:	2201      	movs	r2, #1
 80151a4:	801a      	strh	r2, [r3, #0]
 80151a6:	68fb      	ldr	r3, [r7, #12]
 80151a8:	2200      	movs	r2, #0
 80151aa:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80151ae:	687b      	ldr	r3, [r7, #4]
 80151b0:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80151b4:	687a      	ldr	r2, [r7, #4]
 80151b6:	33b0      	adds	r3, #176	@ 0xb0
 80151b8:	009b      	lsls	r3, r3, #2
 80151ba:	4413      	add	r3, r2
 80151bc:	685b      	ldr	r3, [r3, #4]
 80151be:	681b      	ldr	r3, [r3, #0]
 80151c0:	4798      	blx	r3
 80151c2:	68fb      	ldr	r3, [r7, #12]
 80151c4:	2200      	movs	r2, #0
 80151c6:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80151ca:	68fb      	ldr	r3, [r7, #12]
 80151cc:	2200      	movs	r2, #0
 80151ce:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 80151d2:	68fb      	ldr	r3, [r7, #12]
 80151d4:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 80151d8:	2b00      	cmp	r3, #0
 80151da:	d101      	bne.n	80151e0 <USBD_CDC_Init+0x1a8>
 80151dc:	2302      	movs	r3, #2
 80151de:	e018      	b.n	8015212 <USBD_CDC_Init+0x1da>
 80151e0:	687b      	ldr	r3, [r7, #4]
 80151e2:	7c1b      	ldrb	r3, [r3, #16]
 80151e4:	2b00      	cmp	r3, #0
 80151e6:	d10a      	bne.n	80151fe <USBD_CDC_Init+0x1c6>
 80151e8:	4b0d      	ldr	r3, [pc, #52]	@ (8015220 <USBD_CDC_Init+0x1e8>)
 80151ea:	7819      	ldrb	r1, [r3, #0]
 80151ec:	68fb      	ldr	r3, [r7, #12]
 80151ee:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80151f2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80151f6:	6878      	ldr	r0, [r7, #4]
 80151f8:	f005 fc62 	bl	801aac0 <USBD_LL_PrepareReceive>
 80151fc:	e008      	b.n	8015210 <USBD_CDC_Init+0x1d8>
 80151fe:	4b08      	ldr	r3, [pc, #32]	@ (8015220 <USBD_CDC_Init+0x1e8>)
 8015200:	7819      	ldrb	r1, [r3, #0]
 8015202:	68fb      	ldr	r3, [r7, #12]
 8015204:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015208:	2340      	movs	r3, #64	@ 0x40
 801520a:	6878      	ldr	r0, [r7, #4]
 801520c:	f005 fc58 	bl	801aac0 <USBD_LL_PrepareReceive>
 8015210:	2300      	movs	r3, #0
 8015212:	4618      	mov	r0, r3
 8015214:	3710      	adds	r7, #16
 8015216:	46bd      	mov	sp, r7
 8015218:	bd80      	pop	{r7, pc}
 801521a:	bf00      	nop
 801521c:	200000a7 	.word	0x200000a7
 8015220:	200000a8 	.word	0x200000a8
 8015224:	200000a9 	.word	0x200000a9

08015228 <USBD_CDC_DeInit>:
 8015228:	b580      	push	{r7, lr}
 801522a:	b082      	sub	sp, #8
 801522c:	af00      	add	r7, sp, #0
 801522e:	6078      	str	r0, [r7, #4]
 8015230:	460b      	mov	r3, r1
 8015232:	70fb      	strb	r3, [r7, #3]
 8015234:	4b3a      	ldr	r3, [pc, #232]	@ (8015320 <USBD_CDC_DeInit+0xf8>)
 8015236:	781b      	ldrb	r3, [r3, #0]
 8015238:	4619      	mov	r1, r3
 801523a:	6878      	ldr	r0, [r7, #4]
 801523c:	f005 fb77 	bl	801a92e <USBD_LL_CloseEP>
 8015240:	4b37      	ldr	r3, [pc, #220]	@ (8015320 <USBD_CDC_DeInit+0xf8>)
 8015242:	781b      	ldrb	r3, [r3, #0]
 8015244:	f003 020f 	and.w	r2, r3, #15
 8015248:	6879      	ldr	r1, [r7, #4]
 801524a:	4613      	mov	r3, r2
 801524c:	009b      	lsls	r3, r3, #2
 801524e:	4413      	add	r3, r2
 8015250:	009b      	lsls	r3, r3, #2
 8015252:	440b      	add	r3, r1
 8015254:	3324      	adds	r3, #36	@ 0x24
 8015256:	2200      	movs	r2, #0
 8015258:	801a      	strh	r2, [r3, #0]
 801525a:	4b32      	ldr	r3, [pc, #200]	@ (8015324 <USBD_CDC_DeInit+0xfc>)
 801525c:	781b      	ldrb	r3, [r3, #0]
 801525e:	4619      	mov	r1, r3
 8015260:	6878      	ldr	r0, [r7, #4]
 8015262:	f005 fb64 	bl	801a92e <USBD_LL_CloseEP>
 8015266:	4b2f      	ldr	r3, [pc, #188]	@ (8015324 <USBD_CDC_DeInit+0xfc>)
 8015268:	781b      	ldrb	r3, [r3, #0]
 801526a:	f003 020f 	and.w	r2, r3, #15
 801526e:	6879      	ldr	r1, [r7, #4]
 8015270:	4613      	mov	r3, r2
 8015272:	009b      	lsls	r3, r3, #2
 8015274:	4413      	add	r3, r2
 8015276:	009b      	lsls	r3, r3, #2
 8015278:	440b      	add	r3, r1
 801527a:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 801527e:	2200      	movs	r2, #0
 8015280:	801a      	strh	r2, [r3, #0]
 8015282:	4b29      	ldr	r3, [pc, #164]	@ (8015328 <USBD_CDC_DeInit+0x100>)
 8015284:	781b      	ldrb	r3, [r3, #0]
 8015286:	4619      	mov	r1, r3
 8015288:	6878      	ldr	r0, [r7, #4]
 801528a:	f005 fb50 	bl	801a92e <USBD_LL_CloseEP>
 801528e:	4b26      	ldr	r3, [pc, #152]	@ (8015328 <USBD_CDC_DeInit+0x100>)
 8015290:	781b      	ldrb	r3, [r3, #0]
 8015292:	f003 020f 	and.w	r2, r3, #15
 8015296:	6879      	ldr	r1, [r7, #4]
 8015298:	4613      	mov	r3, r2
 801529a:	009b      	lsls	r3, r3, #2
 801529c:	4413      	add	r3, r2
 801529e:	009b      	lsls	r3, r3, #2
 80152a0:	440b      	add	r3, r1
 80152a2:	3324      	adds	r3, #36	@ 0x24
 80152a4:	2200      	movs	r2, #0
 80152a6:	801a      	strh	r2, [r3, #0]
 80152a8:	4b1f      	ldr	r3, [pc, #124]	@ (8015328 <USBD_CDC_DeInit+0x100>)
 80152aa:	781b      	ldrb	r3, [r3, #0]
 80152ac:	f003 020f 	and.w	r2, r3, #15
 80152b0:	6879      	ldr	r1, [r7, #4]
 80152b2:	4613      	mov	r3, r2
 80152b4:	009b      	lsls	r3, r3, #2
 80152b6:	4413      	add	r3, r2
 80152b8:	009b      	lsls	r3, r3, #2
 80152ba:	440b      	add	r3, r1
 80152bc:	3326      	adds	r3, #38	@ 0x26
 80152be:	2200      	movs	r2, #0
 80152c0:	801a      	strh	r2, [r3, #0]
 80152c2:	687b      	ldr	r3, [r7, #4]
 80152c4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80152c8:	687b      	ldr	r3, [r7, #4]
 80152ca:	32b0      	adds	r2, #176	@ 0xb0
 80152cc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80152d0:	2b00      	cmp	r3, #0
 80152d2:	d01f      	beq.n	8015314 <USBD_CDC_DeInit+0xec>
 80152d4:	687b      	ldr	r3, [r7, #4]
 80152d6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80152da:	687a      	ldr	r2, [r7, #4]
 80152dc:	33b0      	adds	r3, #176	@ 0xb0
 80152de:	009b      	lsls	r3, r3, #2
 80152e0:	4413      	add	r3, r2
 80152e2:	685b      	ldr	r3, [r3, #4]
 80152e4:	685b      	ldr	r3, [r3, #4]
 80152e6:	4798      	blx	r3
 80152e8:	687b      	ldr	r3, [r7, #4]
 80152ea:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80152ee:	687b      	ldr	r3, [r7, #4]
 80152f0:	32b0      	adds	r2, #176	@ 0xb0
 80152f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80152f6:	4618      	mov	r0, r3
 80152f8:	f005 fc24 	bl	801ab44 <USBD_static_free>
 80152fc:	687b      	ldr	r3, [r7, #4]
 80152fe:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015302:	687b      	ldr	r3, [r7, #4]
 8015304:	32b0      	adds	r2, #176	@ 0xb0
 8015306:	2100      	movs	r1, #0
 8015308:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801530c:	687b      	ldr	r3, [r7, #4]
 801530e:	2200      	movs	r2, #0
 8015310:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 8015314:	2300      	movs	r3, #0
 8015316:	4618      	mov	r0, r3
 8015318:	3708      	adds	r7, #8
 801531a:	46bd      	mov	sp, r7
 801531c:	bd80      	pop	{r7, pc}
 801531e:	bf00      	nop
 8015320:	200000a7 	.word	0x200000a7
 8015324:	200000a8 	.word	0x200000a8
 8015328:	200000a9 	.word	0x200000a9

0801532c <USBD_CDC_Setup>:
 801532c:	b580      	push	{r7, lr}
 801532e:	b086      	sub	sp, #24
 8015330:	af00      	add	r7, sp, #0
 8015332:	6078      	str	r0, [r7, #4]
 8015334:	6039      	str	r1, [r7, #0]
 8015336:	687b      	ldr	r3, [r7, #4]
 8015338:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801533c:	687b      	ldr	r3, [r7, #4]
 801533e:	32b0      	adds	r2, #176	@ 0xb0
 8015340:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015344:	613b      	str	r3, [r7, #16]
 8015346:	2300      	movs	r3, #0
 8015348:	737b      	strb	r3, [r7, #13]
 801534a:	2300      	movs	r3, #0
 801534c:	817b      	strh	r3, [r7, #10]
 801534e:	2300      	movs	r3, #0
 8015350:	75fb      	strb	r3, [r7, #23]
 8015352:	693b      	ldr	r3, [r7, #16]
 8015354:	2b00      	cmp	r3, #0
 8015356:	d101      	bne.n	801535c <USBD_CDC_Setup+0x30>
 8015358:	2303      	movs	r3, #3
 801535a:	e0bf      	b.n	80154dc <USBD_CDC_Setup+0x1b0>
 801535c:	683b      	ldr	r3, [r7, #0]
 801535e:	781b      	ldrb	r3, [r3, #0]
 8015360:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015364:	2b00      	cmp	r3, #0
 8015366:	d050      	beq.n	801540a <USBD_CDC_Setup+0xde>
 8015368:	2b20      	cmp	r3, #32
 801536a:	f040 80af 	bne.w	80154cc <USBD_CDC_Setup+0x1a0>
 801536e:	683b      	ldr	r3, [r7, #0]
 8015370:	88db      	ldrh	r3, [r3, #6]
 8015372:	2b00      	cmp	r3, #0
 8015374:	d03a      	beq.n	80153ec <USBD_CDC_Setup+0xc0>
 8015376:	683b      	ldr	r3, [r7, #0]
 8015378:	781b      	ldrb	r3, [r3, #0]
 801537a:	b25b      	sxtb	r3, r3
 801537c:	2b00      	cmp	r3, #0
 801537e:	da1b      	bge.n	80153b8 <USBD_CDC_Setup+0x8c>
 8015380:	687b      	ldr	r3, [r7, #4]
 8015382:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015386:	687a      	ldr	r2, [r7, #4]
 8015388:	33b0      	adds	r3, #176	@ 0xb0
 801538a:	009b      	lsls	r3, r3, #2
 801538c:	4413      	add	r3, r2
 801538e:	685b      	ldr	r3, [r3, #4]
 8015390:	689b      	ldr	r3, [r3, #8]
 8015392:	683a      	ldr	r2, [r7, #0]
 8015394:	7850      	ldrb	r0, [r2, #1]
 8015396:	6939      	ldr	r1, [r7, #16]
 8015398:	683a      	ldr	r2, [r7, #0]
 801539a:	88d2      	ldrh	r2, [r2, #6]
 801539c:	4798      	blx	r3
 801539e:	683b      	ldr	r3, [r7, #0]
 80153a0:	88db      	ldrh	r3, [r3, #6]
 80153a2:	2b07      	cmp	r3, #7
 80153a4:	bf28      	it	cs
 80153a6:	2307      	movcs	r3, #7
 80153a8:	81fb      	strh	r3, [r7, #14]
 80153aa:	693b      	ldr	r3, [r7, #16]
 80153ac:	89fa      	ldrh	r2, [r7, #14]
 80153ae:	4619      	mov	r1, r3
 80153b0:	6878      	ldr	r0, [r7, #4]
 80153b2:	f001 fd41 	bl	8016e38 <USBD_CtlSendData>
 80153b6:	e090      	b.n	80154da <USBD_CDC_Setup+0x1ae>
 80153b8:	683b      	ldr	r3, [r7, #0]
 80153ba:	785a      	ldrb	r2, [r3, #1]
 80153bc:	693b      	ldr	r3, [r7, #16]
 80153be:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80153c2:	683b      	ldr	r3, [r7, #0]
 80153c4:	88db      	ldrh	r3, [r3, #6]
 80153c6:	2b3f      	cmp	r3, #63	@ 0x3f
 80153c8:	d803      	bhi.n	80153d2 <USBD_CDC_Setup+0xa6>
 80153ca:	683b      	ldr	r3, [r7, #0]
 80153cc:	88db      	ldrh	r3, [r3, #6]
 80153ce:	b2da      	uxtb	r2, r3
 80153d0:	e000      	b.n	80153d4 <USBD_CDC_Setup+0xa8>
 80153d2:	2240      	movs	r2, #64	@ 0x40
 80153d4:	693b      	ldr	r3, [r7, #16]
 80153d6:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 80153da:	6939      	ldr	r1, [r7, #16]
 80153dc:	693b      	ldr	r3, [r7, #16]
 80153de:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 80153e2:	461a      	mov	r2, r3
 80153e4:	6878      	ldr	r0, [r7, #4]
 80153e6:	f001 fd53 	bl	8016e90 <USBD_CtlPrepareRx>
 80153ea:	e076      	b.n	80154da <USBD_CDC_Setup+0x1ae>
 80153ec:	687b      	ldr	r3, [r7, #4]
 80153ee:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80153f2:	687a      	ldr	r2, [r7, #4]
 80153f4:	33b0      	adds	r3, #176	@ 0xb0
 80153f6:	009b      	lsls	r3, r3, #2
 80153f8:	4413      	add	r3, r2
 80153fa:	685b      	ldr	r3, [r3, #4]
 80153fc:	689b      	ldr	r3, [r3, #8]
 80153fe:	683a      	ldr	r2, [r7, #0]
 8015400:	7850      	ldrb	r0, [r2, #1]
 8015402:	2200      	movs	r2, #0
 8015404:	6839      	ldr	r1, [r7, #0]
 8015406:	4798      	blx	r3
 8015408:	e067      	b.n	80154da <USBD_CDC_Setup+0x1ae>
 801540a:	683b      	ldr	r3, [r7, #0]
 801540c:	785b      	ldrb	r3, [r3, #1]
 801540e:	2b0b      	cmp	r3, #11
 8015410:	d851      	bhi.n	80154b6 <USBD_CDC_Setup+0x18a>
 8015412:	a201      	add	r2, pc, #4	@ (adr r2, 8015418 <USBD_CDC_Setup+0xec>)
 8015414:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015418:	08015449 	.word	0x08015449
 801541c:	080154c5 	.word	0x080154c5
 8015420:	080154b7 	.word	0x080154b7
 8015424:	080154b7 	.word	0x080154b7
 8015428:	080154b7 	.word	0x080154b7
 801542c:	080154b7 	.word	0x080154b7
 8015430:	080154b7 	.word	0x080154b7
 8015434:	080154b7 	.word	0x080154b7
 8015438:	080154b7 	.word	0x080154b7
 801543c:	080154b7 	.word	0x080154b7
 8015440:	08015473 	.word	0x08015473
 8015444:	0801549d 	.word	0x0801549d
 8015448:	687b      	ldr	r3, [r7, #4]
 801544a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801544e:	b2db      	uxtb	r3, r3
 8015450:	2b03      	cmp	r3, #3
 8015452:	d107      	bne.n	8015464 <USBD_CDC_Setup+0x138>
 8015454:	f107 030a 	add.w	r3, r7, #10
 8015458:	2202      	movs	r2, #2
 801545a:	4619      	mov	r1, r3
 801545c:	6878      	ldr	r0, [r7, #4]
 801545e:	f001 fceb 	bl	8016e38 <USBD_CtlSendData>
 8015462:	e032      	b.n	80154ca <USBD_CDC_Setup+0x19e>
 8015464:	6839      	ldr	r1, [r7, #0]
 8015466:	6878      	ldr	r0, [r7, #4]
 8015468:	f001 fc75 	bl	8016d56 <USBD_CtlError>
 801546c:	2303      	movs	r3, #3
 801546e:	75fb      	strb	r3, [r7, #23]
 8015470:	e02b      	b.n	80154ca <USBD_CDC_Setup+0x19e>
 8015472:	687b      	ldr	r3, [r7, #4]
 8015474:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015478:	b2db      	uxtb	r3, r3
 801547a:	2b03      	cmp	r3, #3
 801547c:	d107      	bne.n	801548e <USBD_CDC_Setup+0x162>
 801547e:	f107 030d 	add.w	r3, r7, #13
 8015482:	2201      	movs	r2, #1
 8015484:	4619      	mov	r1, r3
 8015486:	6878      	ldr	r0, [r7, #4]
 8015488:	f001 fcd6 	bl	8016e38 <USBD_CtlSendData>
 801548c:	e01d      	b.n	80154ca <USBD_CDC_Setup+0x19e>
 801548e:	6839      	ldr	r1, [r7, #0]
 8015490:	6878      	ldr	r0, [r7, #4]
 8015492:	f001 fc60 	bl	8016d56 <USBD_CtlError>
 8015496:	2303      	movs	r3, #3
 8015498:	75fb      	strb	r3, [r7, #23]
 801549a:	e016      	b.n	80154ca <USBD_CDC_Setup+0x19e>
 801549c:	687b      	ldr	r3, [r7, #4]
 801549e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80154a2:	b2db      	uxtb	r3, r3
 80154a4:	2b03      	cmp	r3, #3
 80154a6:	d00f      	beq.n	80154c8 <USBD_CDC_Setup+0x19c>
 80154a8:	6839      	ldr	r1, [r7, #0]
 80154aa:	6878      	ldr	r0, [r7, #4]
 80154ac:	f001 fc53 	bl	8016d56 <USBD_CtlError>
 80154b0:	2303      	movs	r3, #3
 80154b2:	75fb      	strb	r3, [r7, #23]
 80154b4:	e008      	b.n	80154c8 <USBD_CDC_Setup+0x19c>
 80154b6:	6839      	ldr	r1, [r7, #0]
 80154b8:	6878      	ldr	r0, [r7, #4]
 80154ba:	f001 fc4c 	bl	8016d56 <USBD_CtlError>
 80154be:	2303      	movs	r3, #3
 80154c0:	75fb      	strb	r3, [r7, #23]
 80154c2:	e002      	b.n	80154ca <USBD_CDC_Setup+0x19e>
 80154c4:	bf00      	nop
 80154c6:	e008      	b.n	80154da <USBD_CDC_Setup+0x1ae>
 80154c8:	bf00      	nop
 80154ca:	e006      	b.n	80154da <USBD_CDC_Setup+0x1ae>
 80154cc:	6839      	ldr	r1, [r7, #0]
 80154ce:	6878      	ldr	r0, [r7, #4]
 80154d0:	f001 fc41 	bl	8016d56 <USBD_CtlError>
 80154d4:	2303      	movs	r3, #3
 80154d6:	75fb      	strb	r3, [r7, #23]
 80154d8:	bf00      	nop
 80154da:	7dfb      	ldrb	r3, [r7, #23]
 80154dc:	4618      	mov	r0, r3
 80154de:	3718      	adds	r7, #24
 80154e0:	46bd      	mov	sp, r7
 80154e2:	bd80      	pop	{r7, pc}

080154e4 <USBD_CDC_DataIn>:
 80154e4:	b580      	push	{r7, lr}
 80154e6:	b084      	sub	sp, #16
 80154e8:	af00      	add	r7, sp, #0
 80154ea:	6078      	str	r0, [r7, #4]
 80154ec:	460b      	mov	r3, r1
 80154ee:	70fb      	strb	r3, [r7, #3]
 80154f0:	687b      	ldr	r3, [r7, #4]
 80154f2:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80154f6:	60fb      	str	r3, [r7, #12]
 80154f8:	687b      	ldr	r3, [r7, #4]
 80154fa:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80154fe:	687b      	ldr	r3, [r7, #4]
 8015500:	32b0      	adds	r2, #176	@ 0xb0
 8015502:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015506:	2b00      	cmp	r3, #0
 8015508:	d101      	bne.n	801550e <USBD_CDC_DataIn+0x2a>
 801550a:	2303      	movs	r3, #3
 801550c:	e065      	b.n	80155da <USBD_CDC_DataIn+0xf6>
 801550e:	687b      	ldr	r3, [r7, #4]
 8015510:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015514:	687b      	ldr	r3, [r7, #4]
 8015516:	32b0      	adds	r2, #176	@ 0xb0
 8015518:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801551c:	60bb      	str	r3, [r7, #8]
 801551e:	78fb      	ldrb	r3, [r7, #3]
 8015520:	f003 020f 	and.w	r2, r3, #15
 8015524:	6879      	ldr	r1, [r7, #4]
 8015526:	4613      	mov	r3, r2
 8015528:	009b      	lsls	r3, r3, #2
 801552a:	4413      	add	r3, r2
 801552c:	009b      	lsls	r3, r3, #2
 801552e:	440b      	add	r3, r1
 8015530:	3318      	adds	r3, #24
 8015532:	681b      	ldr	r3, [r3, #0]
 8015534:	2b00      	cmp	r3, #0
 8015536:	d02f      	beq.n	8015598 <USBD_CDC_DataIn+0xb4>
 8015538:	78fb      	ldrb	r3, [r7, #3]
 801553a:	f003 020f 	and.w	r2, r3, #15
 801553e:	6879      	ldr	r1, [r7, #4]
 8015540:	4613      	mov	r3, r2
 8015542:	009b      	lsls	r3, r3, #2
 8015544:	4413      	add	r3, r2
 8015546:	009b      	lsls	r3, r3, #2
 8015548:	440b      	add	r3, r1
 801554a:	3318      	adds	r3, #24
 801554c:	681a      	ldr	r2, [r3, #0]
 801554e:	78fb      	ldrb	r3, [r7, #3]
 8015550:	f003 010f 	and.w	r1, r3, #15
 8015554:	68f8      	ldr	r0, [r7, #12]
 8015556:	460b      	mov	r3, r1
 8015558:	00db      	lsls	r3, r3, #3
 801555a:	440b      	add	r3, r1
 801555c:	009b      	lsls	r3, r3, #2
 801555e:	4403      	add	r3, r0
 8015560:	3348      	adds	r3, #72	@ 0x48
 8015562:	681b      	ldr	r3, [r3, #0]
 8015564:	fbb2 f1f3 	udiv	r1, r2, r3
 8015568:	fb01 f303 	mul.w	r3, r1, r3
 801556c:	1ad3      	subs	r3, r2, r3
 801556e:	2b00      	cmp	r3, #0
 8015570:	d112      	bne.n	8015598 <USBD_CDC_DataIn+0xb4>
 8015572:	78fb      	ldrb	r3, [r7, #3]
 8015574:	f003 020f 	and.w	r2, r3, #15
 8015578:	6879      	ldr	r1, [r7, #4]
 801557a:	4613      	mov	r3, r2
 801557c:	009b      	lsls	r3, r3, #2
 801557e:	4413      	add	r3, r2
 8015580:	009b      	lsls	r3, r3, #2
 8015582:	440b      	add	r3, r1
 8015584:	3318      	adds	r3, #24
 8015586:	2200      	movs	r2, #0
 8015588:	601a      	str	r2, [r3, #0]
 801558a:	78f9      	ldrb	r1, [r7, #3]
 801558c:	2300      	movs	r3, #0
 801558e:	2200      	movs	r2, #0
 8015590:	6878      	ldr	r0, [r7, #4]
 8015592:	f005 fa74 	bl	801aa7e <USBD_LL_Transmit>
 8015596:	e01f      	b.n	80155d8 <USBD_CDC_DataIn+0xf4>
 8015598:	68bb      	ldr	r3, [r7, #8]
 801559a:	2200      	movs	r2, #0
 801559c:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80155a0:	687b      	ldr	r3, [r7, #4]
 80155a2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80155a6:	687a      	ldr	r2, [r7, #4]
 80155a8:	33b0      	adds	r3, #176	@ 0xb0
 80155aa:	009b      	lsls	r3, r3, #2
 80155ac:	4413      	add	r3, r2
 80155ae:	685b      	ldr	r3, [r3, #4]
 80155b0:	691b      	ldr	r3, [r3, #16]
 80155b2:	2b00      	cmp	r3, #0
 80155b4:	d010      	beq.n	80155d8 <USBD_CDC_DataIn+0xf4>
 80155b6:	687b      	ldr	r3, [r7, #4]
 80155b8:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80155bc:	687a      	ldr	r2, [r7, #4]
 80155be:	33b0      	adds	r3, #176	@ 0xb0
 80155c0:	009b      	lsls	r3, r3, #2
 80155c2:	4413      	add	r3, r2
 80155c4:	685b      	ldr	r3, [r3, #4]
 80155c6:	691b      	ldr	r3, [r3, #16]
 80155c8:	68ba      	ldr	r2, [r7, #8]
 80155ca:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 80155ce:	68ba      	ldr	r2, [r7, #8]
 80155d0:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 80155d4:	78fa      	ldrb	r2, [r7, #3]
 80155d6:	4798      	blx	r3
 80155d8:	2300      	movs	r3, #0
 80155da:	4618      	mov	r0, r3
 80155dc:	3710      	adds	r7, #16
 80155de:	46bd      	mov	sp, r7
 80155e0:	bd80      	pop	{r7, pc}

080155e2 <USBD_CDC_DataOut>:
 80155e2:	b580      	push	{r7, lr}
 80155e4:	b084      	sub	sp, #16
 80155e6:	af00      	add	r7, sp, #0
 80155e8:	6078      	str	r0, [r7, #4]
 80155ea:	460b      	mov	r3, r1
 80155ec:	70fb      	strb	r3, [r7, #3]
 80155ee:	687b      	ldr	r3, [r7, #4]
 80155f0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80155f4:	687b      	ldr	r3, [r7, #4]
 80155f6:	32b0      	adds	r2, #176	@ 0xb0
 80155f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80155fc:	60fb      	str	r3, [r7, #12]
 80155fe:	687b      	ldr	r3, [r7, #4]
 8015600:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015604:	687b      	ldr	r3, [r7, #4]
 8015606:	32b0      	adds	r2, #176	@ 0xb0
 8015608:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801560c:	2b00      	cmp	r3, #0
 801560e:	d101      	bne.n	8015614 <USBD_CDC_DataOut+0x32>
 8015610:	2303      	movs	r3, #3
 8015612:	e01a      	b.n	801564a <USBD_CDC_DataOut+0x68>
 8015614:	78fb      	ldrb	r3, [r7, #3]
 8015616:	4619      	mov	r1, r3
 8015618:	6878      	ldr	r0, [r7, #4]
 801561a:	f005 fa72 	bl	801ab02 <USBD_LL_GetRxDataSize>
 801561e:	4602      	mov	r2, r0
 8015620:	68fb      	ldr	r3, [r7, #12]
 8015622:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8015626:	687b      	ldr	r3, [r7, #4]
 8015628:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801562c:	687a      	ldr	r2, [r7, #4]
 801562e:	33b0      	adds	r3, #176	@ 0xb0
 8015630:	009b      	lsls	r3, r3, #2
 8015632:	4413      	add	r3, r2
 8015634:	685b      	ldr	r3, [r3, #4]
 8015636:	68db      	ldr	r3, [r3, #12]
 8015638:	68fa      	ldr	r2, [r7, #12]
 801563a:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 801563e:	68fa      	ldr	r2, [r7, #12]
 8015640:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 8015644:	4611      	mov	r1, r2
 8015646:	4798      	blx	r3
 8015648:	2300      	movs	r3, #0
 801564a:	4618      	mov	r0, r3
 801564c:	3710      	adds	r7, #16
 801564e:	46bd      	mov	sp, r7
 8015650:	bd80      	pop	{r7, pc}

08015652 <USBD_CDC_EP0_RxReady>:
 8015652:	b580      	push	{r7, lr}
 8015654:	b084      	sub	sp, #16
 8015656:	af00      	add	r7, sp, #0
 8015658:	6078      	str	r0, [r7, #4]
 801565a:	687b      	ldr	r3, [r7, #4]
 801565c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015660:	687b      	ldr	r3, [r7, #4]
 8015662:	32b0      	adds	r2, #176	@ 0xb0
 8015664:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015668:	60fb      	str	r3, [r7, #12]
 801566a:	68fb      	ldr	r3, [r7, #12]
 801566c:	2b00      	cmp	r3, #0
 801566e:	d101      	bne.n	8015674 <USBD_CDC_EP0_RxReady+0x22>
 8015670:	2303      	movs	r3, #3
 8015672:	e024      	b.n	80156be <USBD_CDC_EP0_RxReady+0x6c>
 8015674:	687b      	ldr	r3, [r7, #4]
 8015676:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801567a:	687a      	ldr	r2, [r7, #4]
 801567c:	33b0      	adds	r3, #176	@ 0xb0
 801567e:	009b      	lsls	r3, r3, #2
 8015680:	4413      	add	r3, r2
 8015682:	685b      	ldr	r3, [r3, #4]
 8015684:	2b00      	cmp	r3, #0
 8015686:	d019      	beq.n	80156bc <USBD_CDC_EP0_RxReady+0x6a>
 8015688:	68fb      	ldr	r3, [r7, #12]
 801568a:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 801568e:	2bff      	cmp	r3, #255	@ 0xff
 8015690:	d014      	beq.n	80156bc <USBD_CDC_EP0_RxReady+0x6a>
 8015692:	687b      	ldr	r3, [r7, #4]
 8015694:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015698:	687a      	ldr	r2, [r7, #4]
 801569a:	33b0      	adds	r3, #176	@ 0xb0
 801569c:	009b      	lsls	r3, r3, #2
 801569e:	4413      	add	r3, r2
 80156a0:	685b      	ldr	r3, [r3, #4]
 80156a2:	689b      	ldr	r3, [r3, #8]
 80156a4:	68fa      	ldr	r2, [r7, #12]
 80156a6:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 80156aa:	68f9      	ldr	r1, [r7, #12]
 80156ac:	68fa      	ldr	r2, [r7, #12]
 80156ae:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 80156b2:	4798      	blx	r3
 80156b4:	68fb      	ldr	r3, [r7, #12]
 80156b6:	22ff      	movs	r2, #255	@ 0xff
 80156b8:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80156bc:	2300      	movs	r3, #0
 80156be:	4618      	mov	r0, r3
 80156c0:	3710      	adds	r7, #16
 80156c2:	46bd      	mov	sp, r7
 80156c4:	bd80      	pop	{r7, pc}
	...

080156c8 <USBD_CDC_GetFSCfgDesc>:
 80156c8:	b580      	push	{r7, lr}
 80156ca:	b086      	sub	sp, #24
 80156cc:	af00      	add	r7, sp, #0
 80156ce:	6078      	str	r0, [r7, #4]
 80156d0:	2182      	movs	r1, #130	@ 0x82
 80156d2:	4818      	ldr	r0, [pc, #96]	@ (8015734 <USBD_CDC_GetFSCfgDesc+0x6c>)
 80156d4:	f000 fd09 	bl	80160ea <USBD_GetEpDesc>
 80156d8:	6178      	str	r0, [r7, #20]
 80156da:	2101      	movs	r1, #1
 80156dc:	4815      	ldr	r0, [pc, #84]	@ (8015734 <USBD_CDC_GetFSCfgDesc+0x6c>)
 80156de:	f000 fd04 	bl	80160ea <USBD_GetEpDesc>
 80156e2:	6138      	str	r0, [r7, #16]
 80156e4:	2181      	movs	r1, #129	@ 0x81
 80156e6:	4813      	ldr	r0, [pc, #76]	@ (8015734 <USBD_CDC_GetFSCfgDesc+0x6c>)
 80156e8:	f000 fcff 	bl	80160ea <USBD_GetEpDesc>
 80156ec:	60f8      	str	r0, [r7, #12]
 80156ee:	697b      	ldr	r3, [r7, #20]
 80156f0:	2b00      	cmp	r3, #0
 80156f2:	d002      	beq.n	80156fa <USBD_CDC_GetFSCfgDesc+0x32>
 80156f4:	697b      	ldr	r3, [r7, #20]
 80156f6:	2210      	movs	r2, #16
 80156f8:	719a      	strb	r2, [r3, #6]
 80156fa:	693b      	ldr	r3, [r7, #16]
 80156fc:	2b00      	cmp	r3, #0
 80156fe:	d006      	beq.n	801570e <USBD_CDC_GetFSCfgDesc+0x46>
 8015700:	693b      	ldr	r3, [r7, #16]
 8015702:	2200      	movs	r2, #0
 8015704:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015708:	711a      	strb	r2, [r3, #4]
 801570a:	2200      	movs	r2, #0
 801570c:	715a      	strb	r2, [r3, #5]
 801570e:	68fb      	ldr	r3, [r7, #12]
 8015710:	2b00      	cmp	r3, #0
 8015712:	d006      	beq.n	8015722 <USBD_CDC_GetFSCfgDesc+0x5a>
 8015714:	68fb      	ldr	r3, [r7, #12]
 8015716:	2200      	movs	r2, #0
 8015718:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 801571c:	711a      	strb	r2, [r3, #4]
 801571e:	2200      	movs	r2, #0
 8015720:	715a      	strb	r2, [r3, #5]
 8015722:	687b      	ldr	r3, [r7, #4]
 8015724:	2243      	movs	r2, #67	@ 0x43
 8015726:	801a      	strh	r2, [r3, #0]
 8015728:	4b02      	ldr	r3, [pc, #8]	@ (8015734 <USBD_CDC_GetFSCfgDesc+0x6c>)
 801572a:	4618      	mov	r0, r3
 801572c:	3718      	adds	r7, #24
 801572e:	46bd      	mov	sp, r7
 8015730:	bd80      	pop	{r7, pc}
 8015732:	bf00      	nop
 8015734:	20000064 	.word	0x20000064

08015738 <USBD_CDC_GetHSCfgDesc>:
 8015738:	b580      	push	{r7, lr}
 801573a:	b086      	sub	sp, #24
 801573c:	af00      	add	r7, sp, #0
 801573e:	6078      	str	r0, [r7, #4]
 8015740:	2182      	movs	r1, #130	@ 0x82
 8015742:	4818      	ldr	r0, [pc, #96]	@ (80157a4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8015744:	f000 fcd1 	bl	80160ea <USBD_GetEpDesc>
 8015748:	6178      	str	r0, [r7, #20]
 801574a:	2101      	movs	r1, #1
 801574c:	4815      	ldr	r0, [pc, #84]	@ (80157a4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 801574e:	f000 fccc 	bl	80160ea <USBD_GetEpDesc>
 8015752:	6138      	str	r0, [r7, #16]
 8015754:	2181      	movs	r1, #129	@ 0x81
 8015756:	4813      	ldr	r0, [pc, #76]	@ (80157a4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8015758:	f000 fcc7 	bl	80160ea <USBD_GetEpDesc>
 801575c:	60f8      	str	r0, [r7, #12]
 801575e:	697b      	ldr	r3, [r7, #20]
 8015760:	2b00      	cmp	r3, #0
 8015762:	d002      	beq.n	801576a <USBD_CDC_GetHSCfgDesc+0x32>
 8015764:	697b      	ldr	r3, [r7, #20]
 8015766:	2210      	movs	r2, #16
 8015768:	719a      	strb	r2, [r3, #6]
 801576a:	693b      	ldr	r3, [r7, #16]
 801576c:	2b00      	cmp	r3, #0
 801576e:	d006      	beq.n	801577e <USBD_CDC_GetHSCfgDesc+0x46>
 8015770:	693b      	ldr	r3, [r7, #16]
 8015772:	2200      	movs	r2, #0
 8015774:	711a      	strb	r2, [r3, #4]
 8015776:	2200      	movs	r2, #0
 8015778:	f042 0202 	orr.w	r2, r2, #2
 801577c:	715a      	strb	r2, [r3, #5]
 801577e:	68fb      	ldr	r3, [r7, #12]
 8015780:	2b00      	cmp	r3, #0
 8015782:	d006      	beq.n	8015792 <USBD_CDC_GetHSCfgDesc+0x5a>
 8015784:	68fb      	ldr	r3, [r7, #12]
 8015786:	2200      	movs	r2, #0
 8015788:	711a      	strb	r2, [r3, #4]
 801578a:	2200      	movs	r2, #0
 801578c:	f042 0202 	orr.w	r2, r2, #2
 8015790:	715a      	strb	r2, [r3, #5]
 8015792:	687b      	ldr	r3, [r7, #4]
 8015794:	2243      	movs	r2, #67	@ 0x43
 8015796:	801a      	strh	r2, [r3, #0]
 8015798:	4b02      	ldr	r3, [pc, #8]	@ (80157a4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 801579a:	4618      	mov	r0, r3
 801579c:	3718      	adds	r7, #24
 801579e:	46bd      	mov	sp, r7
 80157a0:	bd80      	pop	{r7, pc}
 80157a2:	bf00      	nop
 80157a4:	20000064 	.word	0x20000064

080157a8 <USBD_CDC_GetOtherSpeedCfgDesc>:
 80157a8:	b580      	push	{r7, lr}
 80157aa:	b086      	sub	sp, #24
 80157ac:	af00      	add	r7, sp, #0
 80157ae:	6078      	str	r0, [r7, #4]
 80157b0:	2182      	movs	r1, #130	@ 0x82
 80157b2:	4818      	ldr	r0, [pc, #96]	@ (8015814 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80157b4:	f000 fc99 	bl	80160ea <USBD_GetEpDesc>
 80157b8:	6178      	str	r0, [r7, #20]
 80157ba:	2101      	movs	r1, #1
 80157bc:	4815      	ldr	r0, [pc, #84]	@ (8015814 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80157be:	f000 fc94 	bl	80160ea <USBD_GetEpDesc>
 80157c2:	6138      	str	r0, [r7, #16]
 80157c4:	2181      	movs	r1, #129	@ 0x81
 80157c6:	4813      	ldr	r0, [pc, #76]	@ (8015814 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80157c8:	f000 fc8f 	bl	80160ea <USBD_GetEpDesc>
 80157cc:	60f8      	str	r0, [r7, #12]
 80157ce:	697b      	ldr	r3, [r7, #20]
 80157d0:	2b00      	cmp	r3, #0
 80157d2:	d002      	beq.n	80157da <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 80157d4:	697b      	ldr	r3, [r7, #20]
 80157d6:	2210      	movs	r2, #16
 80157d8:	719a      	strb	r2, [r3, #6]
 80157da:	693b      	ldr	r3, [r7, #16]
 80157dc:	2b00      	cmp	r3, #0
 80157de:	d006      	beq.n	80157ee <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 80157e0:	693b      	ldr	r3, [r7, #16]
 80157e2:	2200      	movs	r2, #0
 80157e4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80157e8:	711a      	strb	r2, [r3, #4]
 80157ea:	2200      	movs	r2, #0
 80157ec:	715a      	strb	r2, [r3, #5]
 80157ee:	68fb      	ldr	r3, [r7, #12]
 80157f0:	2b00      	cmp	r3, #0
 80157f2:	d006      	beq.n	8015802 <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 80157f4:	68fb      	ldr	r3, [r7, #12]
 80157f6:	2200      	movs	r2, #0
 80157f8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80157fc:	711a      	strb	r2, [r3, #4]
 80157fe:	2200      	movs	r2, #0
 8015800:	715a      	strb	r2, [r3, #5]
 8015802:	687b      	ldr	r3, [r7, #4]
 8015804:	2243      	movs	r2, #67	@ 0x43
 8015806:	801a      	strh	r2, [r3, #0]
 8015808:	4b02      	ldr	r3, [pc, #8]	@ (8015814 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 801580a:	4618      	mov	r0, r3
 801580c:	3718      	adds	r7, #24
 801580e:	46bd      	mov	sp, r7
 8015810:	bd80      	pop	{r7, pc}
 8015812:	bf00      	nop
 8015814:	20000064 	.word	0x20000064

08015818 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8015818:	b480      	push	{r7}
 801581a:	b083      	sub	sp, #12
 801581c:	af00      	add	r7, sp, #0
 801581e:	6078      	str	r0, [r7, #4]
 8015820:	687b      	ldr	r3, [r7, #4]
 8015822:	220a      	movs	r2, #10
 8015824:	801a      	strh	r2, [r3, #0]
 8015826:	4b03      	ldr	r3, [pc, #12]	@ (8015834 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8015828:	4618      	mov	r0, r3
 801582a:	370c      	adds	r7, #12
 801582c:	46bd      	mov	sp, r7
 801582e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015832:	4770      	bx	lr
 8015834:	20000020 	.word	0x20000020

08015838 <USBD_CDC_RegisterInterface>:
 8015838:	b480      	push	{r7}
 801583a:	b083      	sub	sp, #12
 801583c:	af00      	add	r7, sp, #0
 801583e:	6078      	str	r0, [r7, #4]
 8015840:	6039      	str	r1, [r7, #0]
 8015842:	683b      	ldr	r3, [r7, #0]
 8015844:	2b00      	cmp	r3, #0
 8015846:	d101      	bne.n	801584c <USBD_CDC_RegisterInterface+0x14>
 8015848:	2303      	movs	r3, #3
 801584a:	e009      	b.n	8015860 <USBD_CDC_RegisterInterface+0x28>
 801584c:	687b      	ldr	r3, [r7, #4]
 801584e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015852:	687a      	ldr	r2, [r7, #4]
 8015854:	33b0      	adds	r3, #176	@ 0xb0
 8015856:	009b      	lsls	r3, r3, #2
 8015858:	4413      	add	r3, r2
 801585a:	683a      	ldr	r2, [r7, #0]
 801585c:	605a      	str	r2, [r3, #4]
 801585e:	2300      	movs	r3, #0
 8015860:	4618      	mov	r0, r3
 8015862:	370c      	adds	r7, #12
 8015864:	46bd      	mov	sp, r7
 8015866:	f85d 7b04 	ldr.w	r7, [sp], #4
 801586a:	4770      	bx	lr

0801586c <USBD_CDC_SetTxBuffer>:
 801586c:	b480      	push	{r7}
 801586e:	b087      	sub	sp, #28
 8015870:	af00      	add	r7, sp, #0
 8015872:	60f8      	str	r0, [r7, #12]
 8015874:	60b9      	str	r1, [r7, #8]
 8015876:	607a      	str	r2, [r7, #4]
 8015878:	68fb      	ldr	r3, [r7, #12]
 801587a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801587e:	68fb      	ldr	r3, [r7, #12]
 8015880:	32b0      	adds	r2, #176	@ 0xb0
 8015882:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015886:	617b      	str	r3, [r7, #20]
 8015888:	697b      	ldr	r3, [r7, #20]
 801588a:	2b00      	cmp	r3, #0
 801588c:	d101      	bne.n	8015892 <USBD_CDC_SetTxBuffer+0x26>
 801588e:	2303      	movs	r3, #3
 8015890:	e008      	b.n	80158a4 <USBD_CDC_SetTxBuffer+0x38>
 8015892:	697b      	ldr	r3, [r7, #20]
 8015894:	68ba      	ldr	r2, [r7, #8]
 8015896:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 801589a:	697b      	ldr	r3, [r7, #20]
 801589c:	687a      	ldr	r2, [r7, #4]
 801589e:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 80158a2:	2300      	movs	r3, #0
 80158a4:	4618      	mov	r0, r3
 80158a6:	371c      	adds	r7, #28
 80158a8:	46bd      	mov	sp, r7
 80158aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158ae:	4770      	bx	lr

080158b0 <USBD_CDC_SetRxBuffer>:
 80158b0:	b480      	push	{r7}
 80158b2:	b085      	sub	sp, #20
 80158b4:	af00      	add	r7, sp, #0
 80158b6:	6078      	str	r0, [r7, #4]
 80158b8:	6039      	str	r1, [r7, #0]
 80158ba:	687b      	ldr	r3, [r7, #4]
 80158bc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80158c0:	687b      	ldr	r3, [r7, #4]
 80158c2:	32b0      	adds	r2, #176	@ 0xb0
 80158c4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80158c8:	60fb      	str	r3, [r7, #12]
 80158ca:	68fb      	ldr	r3, [r7, #12]
 80158cc:	2b00      	cmp	r3, #0
 80158ce:	d101      	bne.n	80158d4 <USBD_CDC_SetRxBuffer+0x24>
 80158d0:	2303      	movs	r3, #3
 80158d2:	e004      	b.n	80158de <USBD_CDC_SetRxBuffer+0x2e>
 80158d4:	68fb      	ldr	r3, [r7, #12]
 80158d6:	683a      	ldr	r2, [r7, #0]
 80158d8:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80158dc:	2300      	movs	r3, #0
 80158de:	4618      	mov	r0, r3
 80158e0:	3714      	adds	r7, #20
 80158e2:	46bd      	mov	sp, r7
 80158e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158e8:	4770      	bx	lr
	...

080158ec <USBD_CDC_ReceivePacket>:
 80158ec:	b580      	push	{r7, lr}
 80158ee:	b084      	sub	sp, #16
 80158f0:	af00      	add	r7, sp, #0
 80158f2:	6078      	str	r0, [r7, #4]
 80158f4:	687b      	ldr	r3, [r7, #4]
 80158f6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80158fa:	687b      	ldr	r3, [r7, #4]
 80158fc:	32b0      	adds	r2, #176	@ 0xb0
 80158fe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015902:	60fb      	str	r3, [r7, #12]
 8015904:	687b      	ldr	r3, [r7, #4]
 8015906:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801590a:	687b      	ldr	r3, [r7, #4]
 801590c:	32b0      	adds	r2, #176	@ 0xb0
 801590e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015912:	2b00      	cmp	r3, #0
 8015914:	d101      	bne.n	801591a <USBD_CDC_ReceivePacket+0x2e>
 8015916:	2303      	movs	r3, #3
 8015918:	e018      	b.n	801594c <USBD_CDC_ReceivePacket+0x60>
 801591a:	687b      	ldr	r3, [r7, #4]
 801591c:	7c1b      	ldrb	r3, [r3, #16]
 801591e:	2b00      	cmp	r3, #0
 8015920:	d10a      	bne.n	8015938 <USBD_CDC_ReceivePacket+0x4c>
 8015922:	4b0c      	ldr	r3, [pc, #48]	@ (8015954 <USBD_CDC_ReceivePacket+0x68>)
 8015924:	7819      	ldrb	r1, [r3, #0]
 8015926:	68fb      	ldr	r3, [r7, #12]
 8015928:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 801592c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015930:	6878      	ldr	r0, [r7, #4]
 8015932:	f005 f8c5 	bl	801aac0 <USBD_LL_PrepareReceive>
 8015936:	e008      	b.n	801594a <USBD_CDC_ReceivePacket+0x5e>
 8015938:	4b06      	ldr	r3, [pc, #24]	@ (8015954 <USBD_CDC_ReceivePacket+0x68>)
 801593a:	7819      	ldrb	r1, [r3, #0]
 801593c:	68fb      	ldr	r3, [r7, #12]
 801593e:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015942:	2340      	movs	r3, #64	@ 0x40
 8015944:	6878      	ldr	r0, [r7, #4]
 8015946:	f005 f8bb 	bl	801aac0 <USBD_LL_PrepareReceive>
 801594a:	2300      	movs	r3, #0
 801594c:	4618      	mov	r0, r3
 801594e:	3710      	adds	r7, #16
 8015950:	46bd      	mov	sp, r7
 8015952:	bd80      	pop	{r7, pc}
 8015954:	200000a8 	.word	0x200000a8

08015958 <USBD_Init>:
 8015958:	b580      	push	{r7, lr}
 801595a:	b086      	sub	sp, #24
 801595c:	af00      	add	r7, sp, #0
 801595e:	60f8      	str	r0, [r7, #12]
 8015960:	60b9      	str	r1, [r7, #8]
 8015962:	4613      	mov	r3, r2
 8015964:	71fb      	strb	r3, [r7, #7]
 8015966:	68fb      	ldr	r3, [r7, #12]
 8015968:	2b00      	cmp	r3, #0
 801596a:	d101      	bne.n	8015970 <USBD_Init+0x18>
 801596c:	2303      	movs	r3, #3
 801596e:	e01f      	b.n	80159b0 <USBD_Init+0x58>
 8015970:	68fb      	ldr	r3, [r7, #12]
 8015972:	2200      	movs	r2, #0
 8015974:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8015978:	68fb      	ldr	r3, [r7, #12]
 801597a:	2200      	movs	r2, #0
 801597c:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 8015980:	68fb      	ldr	r3, [r7, #12]
 8015982:	2200      	movs	r2, #0
 8015984:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8015988:	68bb      	ldr	r3, [r7, #8]
 801598a:	2b00      	cmp	r3, #0
 801598c:	d003      	beq.n	8015996 <USBD_Init+0x3e>
 801598e:	68fb      	ldr	r3, [r7, #12]
 8015990:	68ba      	ldr	r2, [r7, #8]
 8015992:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 8015996:	68fb      	ldr	r3, [r7, #12]
 8015998:	2201      	movs	r2, #1
 801599a:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 801599e:	68fb      	ldr	r3, [r7, #12]
 80159a0:	79fa      	ldrb	r2, [r7, #7]
 80159a2:	701a      	strb	r2, [r3, #0]
 80159a4:	68f8      	ldr	r0, [r7, #12]
 80159a6:	f004 ff35 	bl	801a814 <USBD_LL_Init>
 80159aa:	4603      	mov	r3, r0
 80159ac:	75fb      	strb	r3, [r7, #23]
 80159ae:	7dfb      	ldrb	r3, [r7, #23]
 80159b0:	4618      	mov	r0, r3
 80159b2:	3718      	adds	r7, #24
 80159b4:	46bd      	mov	sp, r7
 80159b6:	bd80      	pop	{r7, pc}

080159b8 <USBD_RegisterClass>:
 80159b8:	b580      	push	{r7, lr}
 80159ba:	b084      	sub	sp, #16
 80159bc:	af00      	add	r7, sp, #0
 80159be:	6078      	str	r0, [r7, #4]
 80159c0:	6039      	str	r1, [r7, #0]
 80159c2:	2300      	movs	r3, #0
 80159c4:	81fb      	strh	r3, [r7, #14]
 80159c6:	683b      	ldr	r3, [r7, #0]
 80159c8:	2b00      	cmp	r3, #0
 80159ca:	d101      	bne.n	80159d0 <USBD_RegisterClass+0x18>
 80159cc:	2303      	movs	r3, #3
 80159ce:	e025      	b.n	8015a1c <USBD_RegisterClass+0x64>
 80159d0:	687b      	ldr	r3, [r7, #4]
 80159d2:	683a      	ldr	r2, [r7, #0]
 80159d4:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 80159d8:	687b      	ldr	r3, [r7, #4]
 80159da:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80159de:	687b      	ldr	r3, [r7, #4]
 80159e0:	32ae      	adds	r2, #174	@ 0xae
 80159e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80159e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159e8:	2b00      	cmp	r3, #0
 80159ea:	d00f      	beq.n	8015a0c <USBD_RegisterClass+0x54>
 80159ec:	687b      	ldr	r3, [r7, #4]
 80159ee:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80159f2:	687b      	ldr	r3, [r7, #4]
 80159f4:	32ae      	adds	r2, #174	@ 0xae
 80159f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80159fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159fc:	f107 020e 	add.w	r2, r7, #14
 8015a00:	4610      	mov	r0, r2
 8015a02:	4798      	blx	r3
 8015a04:	4602      	mov	r2, r0
 8015a06:	687b      	ldr	r3, [r7, #4]
 8015a08:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8015a0c:	687b      	ldr	r3, [r7, #4]
 8015a0e:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 8015a12:	1c5a      	adds	r2, r3, #1
 8015a14:	687b      	ldr	r3, [r7, #4]
 8015a16:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 8015a1a:	2300      	movs	r3, #0
 8015a1c:	4618      	mov	r0, r3
 8015a1e:	3710      	adds	r7, #16
 8015a20:	46bd      	mov	sp, r7
 8015a22:	bd80      	pop	{r7, pc}

08015a24 <USBD_Start>:
 8015a24:	b580      	push	{r7, lr}
 8015a26:	b082      	sub	sp, #8
 8015a28:	af00      	add	r7, sp, #0
 8015a2a:	6078      	str	r0, [r7, #4]
 8015a2c:	6878      	ldr	r0, [r7, #4]
 8015a2e:	f004 ff3d 	bl	801a8ac <USBD_LL_Start>
 8015a32:	4603      	mov	r3, r0
 8015a34:	4618      	mov	r0, r3
 8015a36:	3708      	adds	r7, #8
 8015a38:	46bd      	mov	sp, r7
 8015a3a:	bd80      	pop	{r7, pc}

08015a3c <USBD_RunTestMode>:
 8015a3c:	b480      	push	{r7}
 8015a3e:	b083      	sub	sp, #12
 8015a40:	af00      	add	r7, sp, #0
 8015a42:	6078      	str	r0, [r7, #4]
 8015a44:	2300      	movs	r3, #0
 8015a46:	4618      	mov	r0, r3
 8015a48:	370c      	adds	r7, #12
 8015a4a:	46bd      	mov	sp, r7
 8015a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a50:	4770      	bx	lr

08015a52 <USBD_SetClassConfig>:
 8015a52:	b580      	push	{r7, lr}
 8015a54:	b084      	sub	sp, #16
 8015a56:	af00      	add	r7, sp, #0
 8015a58:	6078      	str	r0, [r7, #4]
 8015a5a:	460b      	mov	r3, r1
 8015a5c:	70fb      	strb	r3, [r7, #3]
 8015a5e:	2300      	movs	r3, #0
 8015a60:	73fb      	strb	r3, [r7, #15]
 8015a62:	687b      	ldr	r3, [r7, #4]
 8015a64:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015a68:	2b00      	cmp	r3, #0
 8015a6a:	d009      	beq.n	8015a80 <USBD_SetClassConfig+0x2e>
 8015a6c:	687b      	ldr	r3, [r7, #4]
 8015a6e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015a72:	681b      	ldr	r3, [r3, #0]
 8015a74:	78fa      	ldrb	r2, [r7, #3]
 8015a76:	4611      	mov	r1, r2
 8015a78:	6878      	ldr	r0, [r7, #4]
 8015a7a:	4798      	blx	r3
 8015a7c:	4603      	mov	r3, r0
 8015a7e:	73fb      	strb	r3, [r7, #15]
 8015a80:	7bfb      	ldrb	r3, [r7, #15]
 8015a82:	4618      	mov	r0, r3
 8015a84:	3710      	adds	r7, #16
 8015a86:	46bd      	mov	sp, r7
 8015a88:	bd80      	pop	{r7, pc}

08015a8a <USBD_ClrClassConfig>:
 8015a8a:	b580      	push	{r7, lr}
 8015a8c:	b084      	sub	sp, #16
 8015a8e:	af00      	add	r7, sp, #0
 8015a90:	6078      	str	r0, [r7, #4]
 8015a92:	460b      	mov	r3, r1
 8015a94:	70fb      	strb	r3, [r7, #3]
 8015a96:	2300      	movs	r3, #0
 8015a98:	73fb      	strb	r3, [r7, #15]
 8015a9a:	687b      	ldr	r3, [r7, #4]
 8015a9c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015aa0:	685b      	ldr	r3, [r3, #4]
 8015aa2:	78fa      	ldrb	r2, [r7, #3]
 8015aa4:	4611      	mov	r1, r2
 8015aa6:	6878      	ldr	r0, [r7, #4]
 8015aa8:	4798      	blx	r3
 8015aaa:	4603      	mov	r3, r0
 8015aac:	2b00      	cmp	r3, #0
 8015aae:	d001      	beq.n	8015ab4 <USBD_ClrClassConfig+0x2a>
 8015ab0:	2303      	movs	r3, #3
 8015ab2:	73fb      	strb	r3, [r7, #15]
 8015ab4:	7bfb      	ldrb	r3, [r7, #15]
 8015ab6:	4618      	mov	r0, r3
 8015ab8:	3710      	adds	r7, #16
 8015aba:	46bd      	mov	sp, r7
 8015abc:	bd80      	pop	{r7, pc}

08015abe <USBD_LL_SetupStage>:
 8015abe:	b580      	push	{r7, lr}
 8015ac0:	b084      	sub	sp, #16
 8015ac2:	af00      	add	r7, sp, #0
 8015ac4:	6078      	str	r0, [r7, #4]
 8015ac6:	6039      	str	r1, [r7, #0]
 8015ac8:	687b      	ldr	r3, [r7, #4]
 8015aca:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015ace:	6839      	ldr	r1, [r7, #0]
 8015ad0:	4618      	mov	r0, r3
 8015ad2:	f001 f906 	bl	8016ce2 <USBD_ParseSetupRequest>
 8015ad6:	687b      	ldr	r3, [r7, #4]
 8015ad8:	2201      	movs	r2, #1
 8015ada:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015ade:	687b      	ldr	r3, [r7, #4]
 8015ae0:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 8015ae4:	461a      	mov	r2, r3
 8015ae6:	687b      	ldr	r3, [r7, #4]
 8015ae8:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8015aec:	687b      	ldr	r3, [r7, #4]
 8015aee:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015af2:	f003 031f 	and.w	r3, r3, #31
 8015af6:	2b02      	cmp	r3, #2
 8015af8:	d01a      	beq.n	8015b30 <USBD_LL_SetupStage+0x72>
 8015afa:	2b02      	cmp	r3, #2
 8015afc:	d822      	bhi.n	8015b44 <USBD_LL_SetupStage+0x86>
 8015afe:	2b00      	cmp	r3, #0
 8015b00:	d002      	beq.n	8015b08 <USBD_LL_SetupStage+0x4a>
 8015b02:	2b01      	cmp	r3, #1
 8015b04:	d00a      	beq.n	8015b1c <USBD_LL_SetupStage+0x5e>
 8015b06:	e01d      	b.n	8015b44 <USBD_LL_SetupStage+0x86>
 8015b08:	687b      	ldr	r3, [r7, #4]
 8015b0a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b0e:	4619      	mov	r1, r3
 8015b10:	6878      	ldr	r0, [r7, #4]
 8015b12:	f000 fb5d 	bl	80161d0 <USBD_StdDevReq>
 8015b16:	4603      	mov	r3, r0
 8015b18:	73fb      	strb	r3, [r7, #15]
 8015b1a:	e020      	b.n	8015b5e <USBD_LL_SetupStage+0xa0>
 8015b1c:	687b      	ldr	r3, [r7, #4]
 8015b1e:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b22:	4619      	mov	r1, r3
 8015b24:	6878      	ldr	r0, [r7, #4]
 8015b26:	f000 fbc5 	bl	80162b4 <USBD_StdItfReq>
 8015b2a:	4603      	mov	r3, r0
 8015b2c:	73fb      	strb	r3, [r7, #15]
 8015b2e:	e016      	b.n	8015b5e <USBD_LL_SetupStage+0xa0>
 8015b30:	687b      	ldr	r3, [r7, #4]
 8015b32:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b36:	4619      	mov	r1, r3
 8015b38:	6878      	ldr	r0, [r7, #4]
 8015b3a:	f000 fc27 	bl	801638c <USBD_StdEPReq>
 8015b3e:	4603      	mov	r3, r0
 8015b40:	73fb      	strb	r3, [r7, #15]
 8015b42:	e00c      	b.n	8015b5e <USBD_LL_SetupStage+0xa0>
 8015b44:	687b      	ldr	r3, [r7, #4]
 8015b46:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015b4a:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8015b4e:	b2db      	uxtb	r3, r3
 8015b50:	4619      	mov	r1, r3
 8015b52:	6878      	ldr	r0, [r7, #4]
 8015b54:	f004 ff0a 	bl	801a96c <USBD_LL_StallEP>
 8015b58:	4603      	mov	r3, r0
 8015b5a:	73fb      	strb	r3, [r7, #15]
 8015b5c:	bf00      	nop
 8015b5e:	7bfb      	ldrb	r3, [r7, #15]
 8015b60:	4618      	mov	r0, r3
 8015b62:	3710      	adds	r7, #16
 8015b64:	46bd      	mov	sp, r7
 8015b66:	bd80      	pop	{r7, pc}

08015b68 <USBD_LL_DataOutStage>:
 8015b68:	b580      	push	{r7, lr}
 8015b6a:	b086      	sub	sp, #24
 8015b6c:	af00      	add	r7, sp, #0
 8015b6e:	60f8      	str	r0, [r7, #12]
 8015b70:	460b      	mov	r3, r1
 8015b72:	607a      	str	r2, [r7, #4]
 8015b74:	72fb      	strb	r3, [r7, #11]
 8015b76:	2300      	movs	r3, #0
 8015b78:	75fb      	strb	r3, [r7, #23]
 8015b7a:	7afb      	ldrb	r3, [r7, #11]
 8015b7c:	2b00      	cmp	r3, #0
 8015b7e:	d16e      	bne.n	8015c5e <USBD_LL_DataOutStage+0xf6>
 8015b80:	68fb      	ldr	r3, [r7, #12]
 8015b82:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 8015b86:	613b      	str	r3, [r7, #16]
 8015b88:	68fb      	ldr	r3, [r7, #12]
 8015b8a:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8015b8e:	2b03      	cmp	r3, #3
 8015b90:	f040 8098 	bne.w	8015cc4 <USBD_LL_DataOutStage+0x15c>
 8015b94:	693b      	ldr	r3, [r7, #16]
 8015b96:	689a      	ldr	r2, [r3, #8]
 8015b98:	693b      	ldr	r3, [r7, #16]
 8015b9a:	68db      	ldr	r3, [r3, #12]
 8015b9c:	429a      	cmp	r2, r3
 8015b9e:	d913      	bls.n	8015bc8 <USBD_LL_DataOutStage+0x60>
 8015ba0:	693b      	ldr	r3, [r7, #16]
 8015ba2:	689a      	ldr	r2, [r3, #8]
 8015ba4:	693b      	ldr	r3, [r7, #16]
 8015ba6:	68db      	ldr	r3, [r3, #12]
 8015ba8:	1ad2      	subs	r2, r2, r3
 8015baa:	693b      	ldr	r3, [r7, #16]
 8015bac:	609a      	str	r2, [r3, #8]
 8015bae:	693b      	ldr	r3, [r7, #16]
 8015bb0:	68da      	ldr	r2, [r3, #12]
 8015bb2:	693b      	ldr	r3, [r7, #16]
 8015bb4:	689b      	ldr	r3, [r3, #8]
 8015bb6:	4293      	cmp	r3, r2
 8015bb8:	bf28      	it	cs
 8015bba:	4613      	movcs	r3, r2
 8015bbc:	461a      	mov	r2, r3
 8015bbe:	6879      	ldr	r1, [r7, #4]
 8015bc0:	68f8      	ldr	r0, [r7, #12]
 8015bc2:	f001 f982 	bl	8016eca <USBD_CtlContinueRx>
 8015bc6:	e07d      	b.n	8015cc4 <USBD_LL_DataOutStage+0x15c>
 8015bc8:	68fb      	ldr	r3, [r7, #12]
 8015bca:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015bce:	f003 031f 	and.w	r3, r3, #31
 8015bd2:	2b02      	cmp	r3, #2
 8015bd4:	d014      	beq.n	8015c00 <USBD_LL_DataOutStage+0x98>
 8015bd6:	2b02      	cmp	r3, #2
 8015bd8:	d81d      	bhi.n	8015c16 <USBD_LL_DataOutStage+0xae>
 8015bda:	2b00      	cmp	r3, #0
 8015bdc:	d002      	beq.n	8015be4 <USBD_LL_DataOutStage+0x7c>
 8015bde:	2b01      	cmp	r3, #1
 8015be0:	d003      	beq.n	8015bea <USBD_LL_DataOutStage+0x82>
 8015be2:	e018      	b.n	8015c16 <USBD_LL_DataOutStage+0xae>
 8015be4:	2300      	movs	r3, #0
 8015be6:	75bb      	strb	r3, [r7, #22]
 8015be8:	e018      	b.n	8015c1c <USBD_LL_DataOutStage+0xb4>
 8015bea:	68fb      	ldr	r3, [r7, #12]
 8015bec:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8015bf0:	b2db      	uxtb	r3, r3
 8015bf2:	4619      	mov	r1, r3
 8015bf4:	68f8      	ldr	r0, [r7, #12]
 8015bf6:	f000 fa5e 	bl	80160b6 <USBD_CoreFindIF>
 8015bfa:	4603      	mov	r3, r0
 8015bfc:	75bb      	strb	r3, [r7, #22]
 8015bfe:	e00d      	b.n	8015c1c <USBD_LL_DataOutStage+0xb4>
 8015c00:	68fb      	ldr	r3, [r7, #12]
 8015c02:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8015c06:	b2db      	uxtb	r3, r3
 8015c08:	4619      	mov	r1, r3
 8015c0a:	68f8      	ldr	r0, [r7, #12]
 8015c0c:	f000 fa60 	bl	80160d0 <USBD_CoreFindEP>
 8015c10:	4603      	mov	r3, r0
 8015c12:	75bb      	strb	r3, [r7, #22]
 8015c14:	e002      	b.n	8015c1c <USBD_LL_DataOutStage+0xb4>
 8015c16:	2300      	movs	r3, #0
 8015c18:	75bb      	strb	r3, [r7, #22]
 8015c1a:	bf00      	nop
 8015c1c:	7dbb      	ldrb	r3, [r7, #22]
 8015c1e:	2b00      	cmp	r3, #0
 8015c20:	d119      	bne.n	8015c56 <USBD_LL_DataOutStage+0xee>
 8015c22:	68fb      	ldr	r3, [r7, #12]
 8015c24:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015c28:	b2db      	uxtb	r3, r3
 8015c2a:	2b03      	cmp	r3, #3
 8015c2c:	d113      	bne.n	8015c56 <USBD_LL_DataOutStage+0xee>
 8015c2e:	7dba      	ldrb	r2, [r7, #22]
 8015c30:	68fb      	ldr	r3, [r7, #12]
 8015c32:	32ae      	adds	r2, #174	@ 0xae
 8015c34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015c38:	691b      	ldr	r3, [r3, #16]
 8015c3a:	2b00      	cmp	r3, #0
 8015c3c:	d00b      	beq.n	8015c56 <USBD_LL_DataOutStage+0xee>
 8015c3e:	7dba      	ldrb	r2, [r7, #22]
 8015c40:	68fb      	ldr	r3, [r7, #12]
 8015c42:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015c46:	7dba      	ldrb	r2, [r7, #22]
 8015c48:	68fb      	ldr	r3, [r7, #12]
 8015c4a:	32ae      	adds	r2, #174	@ 0xae
 8015c4c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015c50:	691b      	ldr	r3, [r3, #16]
 8015c52:	68f8      	ldr	r0, [r7, #12]
 8015c54:	4798      	blx	r3
 8015c56:	68f8      	ldr	r0, [r7, #12]
 8015c58:	f001 f948 	bl	8016eec <USBD_CtlSendStatus>
 8015c5c:	e032      	b.n	8015cc4 <USBD_LL_DataOutStage+0x15c>
 8015c5e:	7afb      	ldrb	r3, [r7, #11]
 8015c60:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8015c64:	b2db      	uxtb	r3, r3
 8015c66:	4619      	mov	r1, r3
 8015c68:	68f8      	ldr	r0, [r7, #12]
 8015c6a:	f000 fa31 	bl	80160d0 <USBD_CoreFindEP>
 8015c6e:	4603      	mov	r3, r0
 8015c70:	75bb      	strb	r3, [r7, #22]
 8015c72:	7dbb      	ldrb	r3, [r7, #22]
 8015c74:	2bff      	cmp	r3, #255	@ 0xff
 8015c76:	d025      	beq.n	8015cc4 <USBD_LL_DataOutStage+0x15c>
 8015c78:	7dbb      	ldrb	r3, [r7, #22]
 8015c7a:	2b00      	cmp	r3, #0
 8015c7c:	d122      	bne.n	8015cc4 <USBD_LL_DataOutStage+0x15c>
 8015c7e:	68fb      	ldr	r3, [r7, #12]
 8015c80:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015c84:	b2db      	uxtb	r3, r3
 8015c86:	2b03      	cmp	r3, #3
 8015c88:	d117      	bne.n	8015cba <USBD_LL_DataOutStage+0x152>
 8015c8a:	7dba      	ldrb	r2, [r7, #22]
 8015c8c:	68fb      	ldr	r3, [r7, #12]
 8015c8e:	32ae      	adds	r2, #174	@ 0xae
 8015c90:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015c94:	699b      	ldr	r3, [r3, #24]
 8015c96:	2b00      	cmp	r3, #0
 8015c98:	d00f      	beq.n	8015cba <USBD_LL_DataOutStage+0x152>
 8015c9a:	7dba      	ldrb	r2, [r7, #22]
 8015c9c:	68fb      	ldr	r3, [r7, #12]
 8015c9e:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015ca2:	7dba      	ldrb	r2, [r7, #22]
 8015ca4:	68fb      	ldr	r3, [r7, #12]
 8015ca6:	32ae      	adds	r2, #174	@ 0xae
 8015ca8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015cac:	699b      	ldr	r3, [r3, #24]
 8015cae:	7afa      	ldrb	r2, [r7, #11]
 8015cb0:	4611      	mov	r1, r2
 8015cb2:	68f8      	ldr	r0, [r7, #12]
 8015cb4:	4798      	blx	r3
 8015cb6:	4603      	mov	r3, r0
 8015cb8:	75fb      	strb	r3, [r7, #23]
 8015cba:	7dfb      	ldrb	r3, [r7, #23]
 8015cbc:	2b00      	cmp	r3, #0
 8015cbe:	d001      	beq.n	8015cc4 <USBD_LL_DataOutStage+0x15c>
 8015cc0:	7dfb      	ldrb	r3, [r7, #23]
 8015cc2:	e000      	b.n	8015cc6 <USBD_LL_DataOutStage+0x15e>
 8015cc4:	2300      	movs	r3, #0
 8015cc6:	4618      	mov	r0, r3
 8015cc8:	3718      	adds	r7, #24
 8015cca:	46bd      	mov	sp, r7
 8015ccc:	bd80      	pop	{r7, pc}

08015cce <USBD_LL_DataInStage>:
 8015cce:	b580      	push	{r7, lr}
 8015cd0:	b086      	sub	sp, #24
 8015cd2:	af00      	add	r7, sp, #0
 8015cd4:	60f8      	str	r0, [r7, #12]
 8015cd6:	460b      	mov	r3, r1
 8015cd8:	607a      	str	r2, [r7, #4]
 8015cda:	72fb      	strb	r3, [r7, #11]
 8015cdc:	7afb      	ldrb	r3, [r7, #11]
 8015cde:	2b00      	cmp	r3, #0
 8015ce0:	d16f      	bne.n	8015dc2 <USBD_LL_DataInStage+0xf4>
 8015ce2:	68fb      	ldr	r3, [r7, #12]
 8015ce4:	3314      	adds	r3, #20
 8015ce6:	613b      	str	r3, [r7, #16]
 8015ce8:	68fb      	ldr	r3, [r7, #12]
 8015cea:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8015cee:	2b02      	cmp	r3, #2
 8015cf0:	d15a      	bne.n	8015da8 <USBD_LL_DataInStage+0xda>
 8015cf2:	693b      	ldr	r3, [r7, #16]
 8015cf4:	689a      	ldr	r2, [r3, #8]
 8015cf6:	693b      	ldr	r3, [r7, #16]
 8015cf8:	68db      	ldr	r3, [r3, #12]
 8015cfa:	429a      	cmp	r2, r3
 8015cfc:	d914      	bls.n	8015d28 <USBD_LL_DataInStage+0x5a>
 8015cfe:	693b      	ldr	r3, [r7, #16]
 8015d00:	689a      	ldr	r2, [r3, #8]
 8015d02:	693b      	ldr	r3, [r7, #16]
 8015d04:	68db      	ldr	r3, [r3, #12]
 8015d06:	1ad2      	subs	r2, r2, r3
 8015d08:	693b      	ldr	r3, [r7, #16]
 8015d0a:	609a      	str	r2, [r3, #8]
 8015d0c:	693b      	ldr	r3, [r7, #16]
 8015d0e:	689b      	ldr	r3, [r3, #8]
 8015d10:	461a      	mov	r2, r3
 8015d12:	6879      	ldr	r1, [r7, #4]
 8015d14:	68f8      	ldr	r0, [r7, #12]
 8015d16:	f001 f8aa 	bl	8016e6e <USBD_CtlContinueSendData>
 8015d1a:	2300      	movs	r3, #0
 8015d1c:	2200      	movs	r2, #0
 8015d1e:	2100      	movs	r1, #0
 8015d20:	68f8      	ldr	r0, [r7, #12]
 8015d22:	f004 fecd 	bl	801aac0 <USBD_LL_PrepareReceive>
 8015d26:	e03f      	b.n	8015da8 <USBD_LL_DataInStage+0xda>
 8015d28:	693b      	ldr	r3, [r7, #16]
 8015d2a:	68da      	ldr	r2, [r3, #12]
 8015d2c:	693b      	ldr	r3, [r7, #16]
 8015d2e:	689b      	ldr	r3, [r3, #8]
 8015d30:	429a      	cmp	r2, r3
 8015d32:	d11c      	bne.n	8015d6e <USBD_LL_DataInStage+0xa0>
 8015d34:	693b      	ldr	r3, [r7, #16]
 8015d36:	685a      	ldr	r2, [r3, #4]
 8015d38:	693b      	ldr	r3, [r7, #16]
 8015d3a:	68db      	ldr	r3, [r3, #12]
 8015d3c:	429a      	cmp	r2, r3
 8015d3e:	d316      	bcc.n	8015d6e <USBD_LL_DataInStage+0xa0>
 8015d40:	693b      	ldr	r3, [r7, #16]
 8015d42:	685a      	ldr	r2, [r3, #4]
 8015d44:	68fb      	ldr	r3, [r7, #12]
 8015d46:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 8015d4a:	429a      	cmp	r2, r3
 8015d4c:	d20f      	bcs.n	8015d6e <USBD_LL_DataInStage+0xa0>
 8015d4e:	2200      	movs	r2, #0
 8015d50:	2100      	movs	r1, #0
 8015d52:	68f8      	ldr	r0, [r7, #12]
 8015d54:	f001 f88b 	bl	8016e6e <USBD_CtlContinueSendData>
 8015d58:	68fb      	ldr	r3, [r7, #12]
 8015d5a:	2200      	movs	r2, #0
 8015d5c:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8015d60:	2300      	movs	r3, #0
 8015d62:	2200      	movs	r2, #0
 8015d64:	2100      	movs	r1, #0
 8015d66:	68f8      	ldr	r0, [r7, #12]
 8015d68:	f004 feaa 	bl	801aac0 <USBD_LL_PrepareReceive>
 8015d6c:	e01c      	b.n	8015da8 <USBD_LL_DataInStage+0xda>
 8015d6e:	68fb      	ldr	r3, [r7, #12]
 8015d70:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015d74:	b2db      	uxtb	r3, r3
 8015d76:	2b03      	cmp	r3, #3
 8015d78:	d10f      	bne.n	8015d9a <USBD_LL_DataInStage+0xcc>
 8015d7a:	68fb      	ldr	r3, [r7, #12]
 8015d7c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015d80:	68db      	ldr	r3, [r3, #12]
 8015d82:	2b00      	cmp	r3, #0
 8015d84:	d009      	beq.n	8015d9a <USBD_LL_DataInStage+0xcc>
 8015d86:	68fb      	ldr	r3, [r7, #12]
 8015d88:	2200      	movs	r2, #0
 8015d8a:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015d8e:	68fb      	ldr	r3, [r7, #12]
 8015d90:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015d94:	68db      	ldr	r3, [r3, #12]
 8015d96:	68f8      	ldr	r0, [r7, #12]
 8015d98:	4798      	blx	r3
 8015d9a:	2180      	movs	r1, #128	@ 0x80
 8015d9c:	68f8      	ldr	r0, [r7, #12]
 8015d9e:	f004 fde5 	bl	801a96c <USBD_LL_StallEP>
 8015da2:	68f8      	ldr	r0, [r7, #12]
 8015da4:	f001 f8b5 	bl	8016f12 <USBD_CtlReceiveStatus>
 8015da8:	68fb      	ldr	r3, [r7, #12]
 8015daa:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8015dae:	2b00      	cmp	r3, #0
 8015db0:	d03a      	beq.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015db2:	68f8      	ldr	r0, [r7, #12]
 8015db4:	f7ff fe42 	bl	8015a3c <USBD_RunTestMode>
 8015db8:	68fb      	ldr	r3, [r7, #12]
 8015dba:	2200      	movs	r2, #0
 8015dbc:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8015dc0:	e032      	b.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015dc2:	7afb      	ldrb	r3, [r7, #11]
 8015dc4:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8015dc8:	b2db      	uxtb	r3, r3
 8015dca:	4619      	mov	r1, r3
 8015dcc:	68f8      	ldr	r0, [r7, #12]
 8015dce:	f000 f97f 	bl	80160d0 <USBD_CoreFindEP>
 8015dd2:	4603      	mov	r3, r0
 8015dd4:	75fb      	strb	r3, [r7, #23]
 8015dd6:	7dfb      	ldrb	r3, [r7, #23]
 8015dd8:	2bff      	cmp	r3, #255	@ 0xff
 8015dda:	d025      	beq.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015ddc:	7dfb      	ldrb	r3, [r7, #23]
 8015dde:	2b00      	cmp	r3, #0
 8015de0:	d122      	bne.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015de2:	68fb      	ldr	r3, [r7, #12]
 8015de4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015de8:	b2db      	uxtb	r3, r3
 8015dea:	2b03      	cmp	r3, #3
 8015dec:	d11c      	bne.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015dee:	7dfa      	ldrb	r2, [r7, #23]
 8015df0:	68fb      	ldr	r3, [r7, #12]
 8015df2:	32ae      	adds	r2, #174	@ 0xae
 8015df4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015df8:	695b      	ldr	r3, [r3, #20]
 8015dfa:	2b00      	cmp	r3, #0
 8015dfc:	d014      	beq.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015dfe:	7dfa      	ldrb	r2, [r7, #23]
 8015e00:	68fb      	ldr	r3, [r7, #12]
 8015e02:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015e06:	7dfa      	ldrb	r2, [r7, #23]
 8015e08:	68fb      	ldr	r3, [r7, #12]
 8015e0a:	32ae      	adds	r2, #174	@ 0xae
 8015e0c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015e10:	695b      	ldr	r3, [r3, #20]
 8015e12:	7afa      	ldrb	r2, [r7, #11]
 8015e14:	4611      	mov	r1, r2
 8015e16:	68f8      	ldr	r0, [r7, #12]
 8015e18:	4798      	blx	r3
 8015e1a:	4603      	mov	r3, r0
 8015e1c:	75bb      	strb	r3, [r7, #22]
 8015e1e:	7dbb      	ldrb	r3, [r7, #22]
 8015e20:	2b00      	cmp	r3, #0
 8015e22:	d001      	beq.n	8015e28 <USBD_LL_DataInStage+0x15a>
 8015e24:	7dbb      	ldrb	r3, [r7, #22]
 8015e26:	e000      	b.n	8015e2a <USBD_LL_DataInStage+0x15c>
 8015e28:	2300      	movs	r3, #0
 8015e2a:	4618      	mov	r0, r3
 8015e2c:	3718      	adds	r7, #24
 8015e2e:	46bd      	mov	sp, r7
 8015e30:	bd80      	pop	{r7, pc}

08015e32 <USBD_LL_Reset>:
 8015e32:	b580      	push	{r7, lr}
 8015e34:	b084      	sub	sp, #16
 8015e36:	af00      	add	r7, sp, #0
 8015e38:	6078      	str	r0, [r7, #4]
 8015e3a:	2300      	movs	r3, #0
 8015e3c:	73fb      	strb	r3, [r7, #15]
 8015e3e:	687b      	ldr	r3, [r7, #4]
 8015e40:	2201      	movs	r2, #1
 8015e42:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015e46:	687b      	ldr	r3, [r7, #4]
 8015e48:	2200      	movs	r2, #0
 8015e4a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015e4e:	687b      	ldr	r3, [r7, #4]
 8015e50:	2200      	movs	r2, #0
 8015e52:	605a      	str	r2, [r3, #4]
 8015e54:	687b      	ldr	r3, [r7, #4]
 8015e56:	2200      	movs	r2, #0
 8015e58:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8015e5c:	687b      	ldr	r3, [r7, #4]
 8015e5e:	2200      	movs	r2, #0
 8015e60:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8015e64:	687b      	ldr	r3, [r7, #4]
 8015e66:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015e6a:	2b00      	cmp	r3, #0
 8015e6c:	d014      	beq.n	8015e98 <USBD_LL_Reset+0x66>
 8015e6e:	687b      	ldr	r3, [r7, #4]
 8015e70:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015e74:	685b      	ldr	r3, [r3, #4]
 8015e76:	2b00      	cmp	r3, #0
 8015e78:	d00e      	beq.n	8015e98 <USBD_LL_Reset+0x66>
 8015e7a:	687b      	ldr	r3, [r7, #4]
 8015e7c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015e80:	685b      	ldr	r3, [r3, #4]
 8015e82:	687a      	ldr	r2, [r7, #4]
 8015e84:	6852      	ldr	r2, [r2, #4]
 8015e86:	b2d2      	uxtb	r2, r2
 8015e88:	4611      	mov	r1, r2
 8015e8a:	6878      	ldr	r0, [r7, #4]
 8015e8c:	4798      	blx	r3
 8015e8e:	4603      	mov	r3, r0
 8015e90:	2b00      	cmp	r3, #0
 8015e92:	d001      	beq.n	8015e98 <USBD_LL_Reset+0x66>
 8015e94:	2303      	movs	r3, #3
 8015e96:	73fb      	strb	r3, [r7, #15]
 8015e98:	2340      	movs	r3, #64	@ 0x40
 8015e9a:	2200      	movs	r2, #0
 8015e9c:	2100      	movs	r1, #0
 8015e9e:	6878      	ldr	r0, [r7, #4]
 8015ea0:	f004 fd1f 	bl	801a8e2 <USBD_LL_OpenEP>
 8015ea4:	687b      	ldr	r3, [r7, #4]
 8015ea6:	2201      	movs	r2, #1
 8015ea8:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 8015eac:	687b      	ldr	r3, [r7, #4]
 8015eae:	2240      	movs	r2, #64	@ 0x40
 8015eb0:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 8015eb4:	2340      	movs	r3, #64	@ 0x40
 8015eb6:	2200      	movs	r2, #0
 8015eb8:	2180      	movs	r1, #128	@ 0x80
 8015eba:	6878      	ldr	r0, [r7, #4]
 8015ebc:	f004 fd11 	bl	801a8e2 <USBD_LL_OpenEP>
 8015ec0:	687b      	ldr	r3, [r7, #4]
 8015ec2:	2201      	movs	r2, #1
 8015ec4:	849a      	strh	r2, [r3, #36]	@ 0x24
 8015ec6:	687b      	ldr	r3, [r7, #4]
 8015ec8:	2240      	movs	r2, #64	@ 0x40
 8015eca:	621a      	str	r2, [r3, #32]
 8015ecc:	7bfb      	ldrb	r3, [r7, #15]
 8015ece:	4618      	mov	r0, r3
 8015ed0:	3710      	adds	r7, #16
 8015ed2:	46bd      	mov	sp, r7
 8015ed4:	bd80      	pop	{r7, pc}

08015ed6 <USBD_LL_SetSpeed>:
 8015ed6:	b480      	push	{r7}
 8015ed8:	b083      	sub	sp, #12
 8015eda:	af00      	add	r7, sp, #0
 8015edc:	6078      	str	r0, [r7, #4]
 8015ede:	460b      	mov	r3, r1
 8015ee0:	70fb      	strb	r3, [r7, #3]
 8015ee2:	687b      	ldr	r3, [r7, #4]
 8015ee4:	78fa      	ldrb	r2, [r7, #3]
 8015ee6:	741a      	strb	r2, [r3, #16]
 8015ee8:	2300      	movs	r3, #0
 8015eea:	4618      	mov	r0, r3
 8015eec:	370c      	adds	r7, #12
 8015eee:	46bd      	mov	sp, r7
 8015ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015ef4:	4770      	bx	lr

08015ef6 <USBD_LL_Suspend>:
 8015ef6:	b480      	push	{r7}
 8015ef8:	b083      	sub	sp, #12
 8015efa:	af00      	add	r7, sp, #0
 8015efc:	6078      	str	r0, [r7, #4]
 8015efe:	687b      	ldr	r3, [r7, #4]
 8015f00:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015f04:	b2da      	uxtb	r2, r3
 8015f06:	687b      	ldr	r3, [r7, #4]
 8015f08:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 8015f0c:	687b      	ldr	r3, [r7, #4]
 8015f0e:	2204      	movs	r2, #4
 8015f10:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015f14:	2300      	movs	r3, #0
 8015f16:	4618      	mov	r0, r3
 8015f18:	370c      	adds	r7, #12
 8015f1a:	46bd      	mov	sp, r7
 8015f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f20:	4770      	bx	lr

08015f22 <USBD_LL_Resume>:
 8015f22:	b480      	push	{r7}
 8015f24:	b083      	sub	sp, #12
 8015f26:	af00      	add	r7, sp, #0
 8015f28:	6078      	str	r0, [r7, #4]
 8015f2a:	687b      	ldr	r3, [r7, #4]
 8015f2c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015f30:	b2db      	uxtb	r3, r3
 8015f32:	2b04      	cmp	r3, #4
 8015f34:	d106      	bne.n	8015f44 <USBD_LL_Resume+0x22>
 8015f36:	687b      	ldr	r3, [r7, #4]
 8015f38:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 8015f3c:	b2da      	uxtb	r2, r3
 8015f3e:	687b      	ldr	r3, [r7, #4]
 8015f40:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015f44:	2300      	movs	r3, #0
 8015f46:	4618      	mov	r0, r3
 8015f48:	370c      	adds	r7, #12
 8015f4a:	46bd      	mov	sp, r7
 8015f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f50:	4770      	bx	lr

08015f52 <USBD_LL_SOF>:
 8015f52:	b580      	push	{r7, lr}
 8015f54:	b082      	sub	sp, #8
 8015f56:	af00      	add	r7, sp, #0
 8015f58:	6078      	str	r0, [r7, #4]
 8015f5a:	687b      	ldr	r3, [r7, #4]
 8015f5c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015f60:	b2db      	uxtb	r3, r3
 8015f62:	2b03      	cmp	r3, #3
 8015f64:	d110      	bne.n	8015f88 <USBD_LL_SOF+0x36>
 8015f66:	687b      	ldr	r3, [r7, #4]
 8015f68:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015f6c:	2b00      	cmp	r3, #0
 8015f6e:	d00b      	beq.n	8015f88 <USBD_LL_SOF+0x36>
 8015f70:	687b      	ldr	r3, [r7, #4]
 8015f72:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015f76:	69db      	ldr	r3, [r3, #28]
 8015f78:	2b00      	cmp	r3, #0
 8015f7a:	d005      	beq.n	8015f88 <USBD_LL_SOF+0x36>
 8015f7c:	687b      	ldr	r3, [r7, #4]
 8015f7e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015f82:	69db      	ldr	r3, [r3, #28]
 8015f84:	6878      	ldr	r0, [r7, #4]
 8015f86:	4798      	blx	r3
 8015f88:	2300      	movs	r3, #0
 8015f8a:	4618      	mov	r0, r3
 8015f8c:	3708      	adds	r7, #8
 8015f8e:	46bd      	mov	sp, r7
 8015f90:	bd80      	pop	{r7, pc}

08015f92 <USBD_LL_IsoINIncomplete>:
 8015f92:	b580      	push	{r7, lr}
 8015f94:	b082      	sub	sp, #8
 8015f96:	af00      	add	r7, sp, #0
 8015f98:	6078      	str	r0, [r7, #4]
 8015f9a:	460b      	mov	r3, r1
 8015f9c:	70fb      	strb	r3, [r7, #3]
 8015f9e:	687b      	ldr	r3, [r7, #4]
 8015fa0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015fa4:	687b      	ldr	r3, [r7, #4]
 8015fa6:	32ae      	adds	r2, #174	@ 0xae
 8015fa8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015fac:	2b00      	cmp	r3, #0
 8015fae:	d101      	bne.n	8015fb4 <USBD_LL_IsoINIncomplete+0x22>
 8015fb0:	2303      	movs	r3, #3
 8015fb2:	e01c      	b.n	8015fee <USBD_LL_IsoINIncomplete+0x5c>
 8015fb4:	687b      	ldr	r3, [r7, #4]
 8015fb6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015fba:	b2db      	uxtb	r3, r3
 8015fbc:	2b03      	cmp	r3, #3
 8015fbe:	d115      	bne.n	8015fec <USBD_LL_IsoINIncomplete+0x5a>
 8015fc0:	687b      	ldr	r3, [r7, #4]
 8015fc2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015fc6:	687b      	ldr	r3, [r7, #4]
 8015fc8:	32ae      	adds	r2, #174	@ 0xae
 8015fca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015fce:	6a1b      	ldr	r3, [r3, #32]
 8015fd0:	2b00      	cmp	r3, #0
 8015fd2:	d00b      	beq.n	8015fec <USBD_LL_IsoINIncomplete+0x5a>
 8015fd4:	687b      	ldr	r3, [r7, #4]
 8015fd6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015fda:	687b      	ldr	r3, [r7, #4]
 8015fdc:	32ae      	adds	r2, #174	@ 0xae
 8015fde:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015fe2:	6a1b      	ldr	r3, [r3, #32]
 8015fe4:	78fa      	ldrb	r2, [r7, #3]
 8015fe6:	4611      	mov	r1, r2
 8015fe8:	6878      	ldr	r0, [r7, #4]
 8015fea:	4798      	blx	r3
 8015fec:	2300      	movs	r3, #0
 8015fee:	4618      	mov	r0, r3
 8015ff0:	3708      	adds	r7, #8
 8015ff2:	46bd      	mov	sp, r7
 8015ff4:	bd80      	pop	{r7, pc}

08015ff6 <USBD_LL_IsoOUTIncomplete>:
 8015ff6:	b580      	push	{r7, lr}
 8015ff8:	b082      	sub	sp, #8
 8015ffa:	af00      	add	r7, sp, #0
 8015ffc:	6078      	str	r0, [r7, #4]
 8015ffe:	460b      	mov	r3, r1
 8016000:	70fb      	strb	r3, [r7, #3]
 8016002:	687b      	ldr	r3, [r7, #4]
 8016004:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016008:	687b      	ldr	r3, [r7, #4]
 801600a:	32ae      	adds	r2, #174	@ 0xae
 801600c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016010:	2b00      	cmp	r3, #0
 8016012:	d101      	bne.n	8016018 <USBD_LL_IsoOUTIncomplete+0x22>
 8016014:	2303      	movs	r3, #3
 8016016:	e01c      	b.n	8016052 <USBD_LL_IsoOUTIncomplete+0x5c>
 8016018:	687b      	ldr	r3, [r7, #4]
 801601a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801601e:	b2db      	uxtb	r3, r3
 8016020:	2b03      	cmp	r3, #3
 8016022:	d115      	bne.n	8016050 <USBD_LL_IsoOUTIncomplete+0x5a>
 8016024:	687b      	ldr	r3, [r7, #4]
 8016026:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801602a:	687b      	ldr	r3, [r7, #4]
 801602c:	32ae      	adds	r2, #174	@ 0xae
 801602e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016032:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016034:	2b00      	cmp	r3, #0
 8016036:	d00b      	beq.n	8016050 <USBD_LL_IsoOUTIncomplete+0x5a>
 8016038:	687b      	ldr	r3, [r7, #4]
 801603a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801603e:	687b      	ldr	r3, [r7, #4]
 8016040:	32ae      	adds	r2, #174	@ 0xae
 8016042:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016046:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016048:	78fa      	ldrb	r2, [r7, #3]
 801604a:	4611      	mov	r1, r2
 801604c:	6878      	ldr	r0, [r7, #4]
 801604e:	4798      	blx	r3
 8016050:	2300      	movs	r3, #0
 8016052:	4618      	mov	r0, r3
 8016054:	3708      	adds	r7, #8
 8016056:	46bd      	mov	sp, r7
 8016058:	bd80      	pop	{r7, pc}

0801605a <USBD_LL_DevConnected>:
 801605a:	b480      	push	{r7}
 801605c:	b083      	sub	sp, #12
 801605e:	af00      	add	r7, sp, #0
 8016060:	6078      	str	r0, [r7, #4]
 8016062:	2300      	movs	r3, #0
 8016064:	4618      	mov	r0, r3
 8016066:	370c      	adds	r7, #12
 8016068:	46bd      	mov	sp, r7
 801606a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801606e:	4770      	bx	lr

08016070 <USBD_LL_DevDisconnected>:
 8016070:	b580      	push	{r7, lr}
 8016072:	b084      	sub	sp, #16
 8016074:	af00      	add	r7, sp, #0
 8016076:	6078      	str	r0, [r7, #4]
 8016078:	2300      	movs	r3, #0
 801607a:	73fb      	strb	r3, [r7, #15]
 801607c:	687b      	ldr	r3, [r7, #4]
 801607e:	2201      	movs	r2, #1
 8016080:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016084:	687b      	ldr	r3, [r7, #4]
 8016086:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801608a:	2b00      	cmp	r3, #0
 801608c:	d00e      	beq.n	80160ac <USBD_LL_DevDisconnected+0x3c>
 801608e:	687b      	ldr	r3, [r7, #4]
 8016090:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016094:	685b      	ldr	r3, [r3, #4]
 8016096:	687a      	ldr	r2, [r7, #4]
 8016098:	6852      	ldr	r2, [r2, #4]
 801609a:	b2d2      	uxtb	r2, r2
 801609c:	4611      	mov	r1, r2
 801609e:	6878      	ldr	r0, [r7, #4]
 80160a0:	4798      	blx	r3
 80160a2:	4603      	mov	r3, r0
 80160a4:	2b00      	cmp	r3, #0
 80160a6:	d001      	beq.n	80160ac <USBD_LL_DevDisconnected+0x3c>
 80160a8:	2303      	movs	r3, #3
 80160aa:	73fb      	strb	r3, [r7, #15]
 80160ac:	7bfb      	ldrb	r3, [r7, #15]
 80160ae:	4618      	mov	r0, r3
 80160b0:	3710      	adds	r7, #16
 80160b2:	46bd      	mov	sp, r7
 80160b4:	bd80      	pop	{r7, pc}

080160b6 <USBD_CoreFindIF>:
 80160b6:	b480      	push	{r7}
 80160b8:	b083      	sub	sp, #12
 80160ba:	af00      	add	r7, sp, #0
 80160bc:	6078      	str	r0, [r7, #4]
 80160be:	460b      	mov	r3, r1
 80160c0:	70fb      	strb	r3, [r7, #3]
 80160c2:	2300      	movs	r3, #0
 80160c4:	4618      	mov	r0, r3
 80160c6:	370c      	adds	r7, #12
 80160c8:	46bd      	mov	sp, r7
 80160ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80160ce:	4770      	bx	lr

080160d0 <USBD_CoreFindEP>:
 80160d0:	b480      	push	{r7}
 80160d2:	b083      	sub	sp, #12
 80160d4:	af00      	add	r7, sp, #0
 80160d6:	6078      	str	r0, [r7, #4]
 80160d8:	460b      	mov	r3, r1
 80160da:	70fb      	strb	r3, [r7, #3]
 80160dc:	2300      	movs	r3, #0
 80160de:	4618      	mov	r0, r3
 80160e0:	370c      	adds	r7, #12
 80160e2:	46bd      	mov	sp, r7
 80160e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80160e8:	4770      	bx	lr

080160ea <USBD_GetEpDesc>:
 80160ea:	b580      	push	{r7, lr}
 80160ec:	b086      	sub	sp, #24
 80160ee:	af00      	add	r7, sp, #0
 80160f0:	6078      	str	r0, [r7, #4]
 80160f2:	460b      	mov	r3, r1
 80160f4:	70fb      	strb	r3, [r7, #3]
 80160f6:	687b      	ldr	r3, [r7, #4]
 80160f8:	617b      	str	r3, [r7, #20]
 80160fa:	687b      	ldr	r3, [r7, #4]
 80160fc:	60fb      	str	r3, [r7, #12]
 80160fe:	2300      	movs	r3, #0
 8016100:	613b      	str	r3, [r7, #16]
 8016102:	68fb      	ldr	r3, [r7, #12]
 8016104:	885b      	ldrh	r3, [r3, #2]
 8016106:	b29b      	uxth	r3, r3
 8016108:	68fa      	ldr	r2, [r7, #12]
 801610a:	7812      	ldrb	r2, [r2, #0]
 801610c:	4293      	cmp	r3, r2
 801610e:	d91f      	bls.n	8016150 <USBD_GetEpDesc+0x66>
 8016110:	68fb      	ldr	r3, [r7, #12]
 8016112:	781b      	ldrb	r3, [r3, #0]
 8016114:	817b      	strh	r3, [r7, #10]
 8016116:	e013      	b.n	8016140 <USBD_GetEpDesc+0x56>
 8016118:	f107 030a 	add.w	r3, r7, #10
 801611c:	4619      	mov	r1, r3
 801611e:	6978      	ldr	r0, [r7, #20]
 8016120:	f000 f81b 	bl	801615a <USBD_GetNextDesc>
 8016124:	6178      	str	r0, [r7, #20]
 8016126:	697b      	ldr	r3, [r7, #20]
 8016128:	785b      	ldrb	r3, [r3, #1]
 801612a:	2b05      	cmp	r3, #5
 801612c:	d108      	bne.n	8016140 <USBD_GetEpDesc+0x56>
 801612e:	697b      	ldr	r3, [r7, #20]
 8016130:	613b      	str	r3, [r7, #16]
 8016132:	693b      	ldr	r3, [r7, #16]
 8016134:	789b      	ldrb	r3, [r3, #2]
 8016136:	78fa      	ldrb	r2, [r7, #3]
 8016138:	429a      	cmp	r2, r3
 801613a:	d008      	beq.n	801614e <USBD_GetEpDesc+0x64>
 801613c:	2300      	movs	r3, #0
 801613e:	613b      	str	r3, [r7, #16]
 8016140:	68fb      	ldr	r3, [r7, #12]
 8016142:	885b      	ldrh	r3, [r3, #2]
 8016144:	b29a      	uxth	r2, r3
 8016146:	897b      	ldrh	r3, [r7, #10]
 8016148:	429a      	cmp	r2, r3
 801614a:	d8e5      	bhi.n	8016118 <USBD_GetEpDesc+0x2e>
 801614c:	e000      	b.n	8016150 <USBD_GetEpDesc+0x66>
 801614e:	bf00      	nop
 8016150:	693b      	ldr	r3, [r7, #16]
 8016152:	4618      	mov	r0, r3
 8016154:	3718      	adds	r7, #24
 8016156:	46bd      	mov	sp, r7
 8016158:	bd80      	pop	{r7, pc}

0801615a <USBD_GetNextDesc>:
 801615a:	b480      	push	{r7}
 801615c:	b085      	sub	sp, #20
 801615e:	af00      	add	r7, sp, #0
 8016160:	6078      	str	r0, [r7, #4]
 8016162:	6039      	str	r1, [r7, #0]
 8016164:	687b      	ldr	r3, [r7, #4]
 8016166:	60fb      	str	r3, [r7, #12]
 8016168:	683b      	ldr	r3, [r7, #0]
 801616a:	881b      	ldrh	r3, [r3, #0]
 801616c:	68fa      	ldr	r2, [r7, #12]
 801616e:	7812      	ldrb	r2, [r2, #0]
 8016170:	4413      	add	r3, r2
 8016172:	b29a      	uxth	r2, r3
 8016174:	683b      	ldr	r3, [r7, #0]
 8016176:	801a      	strh	r2, [r3, #0]
 8016178:	68fb      	ldr	r3, [r7, #12]
 801617a:	781b      	ldrb	r3, [r3, #0]
 801617c:	461a      	mov	r2, r3
 801617e:	687b      	ldr	r3, [r7, #4]
 8016180:	4413      	add	r3, r2
 8016182:	60fb      	str	r3, [r7, #12]
 8016184:	68fb      	ldr	r3, [r7, #12]
 8016186:	4618      	mov	r0, r3
 8016188:	3714      	adds	r7, #20
 801618a:	46bd      	mov	sp, r7
 801618c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016190:	4770      	bx	lr

08016192 <SWAPBYTE>:
 8016192:	b480      	push	{r7}
 8016194:	b087      	sub	sp, #28
 8016196:	af00      	add	r7, sp, #0
 8016198:	6078      	str	r0, [r7, #4]
 801619a:	687b      	ldr	r3, [r7, #4]
 801619c:	617b      	str	r3, [r7, #20]
 801619e:	697b      	ldr	r3, [r7, #20]
 80161a0:	781b      	ldrb	r3, [r3, #0]
 80161a2:	827b      	strh	r3, [r7, #18]
 80161a4:	697b      	ldr	r3, [r7, #20]
 80161a6:	3301      	adds	r3, #1
 80161a8:	617b      	str	r3, [r7, #20]
 80161aa:	697b      	ldr	r3, [r7, #20]
 80161ac:	781b      	ldrb	r3, [r3, #0]
 80161ae:	823b      	strh	r3, [r7, #16]
 80161b0:	8a3b      	ldrh	r3, [r7, #16]
 80161b2:	021b      	lsls	r3, r3, #8
 80161b4:	b21a      	sxth	r2, r3
 80161b6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80161ba:	4313      	orrs	r3, r2
 80161bc:	b21b      	sxth	r3, r3
 80161be:	81fb      	strh	r3, [r7, #14]
 80161c0:	89fb      	ldrh	r3, [r7, #14]
 80161c2:	4618      	mov	r0, r3
 80161c4:	371c      	adds	r7, #28
 80161c6:	46bd      	mov	sp, r7
 80161c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161cc:	4770      	bx	lr
	...

080161d0 <USBD_StdDevReq>:
 80161d0:	b580      	push	{r7, lr}
 80161d2:	b084      	sub	sp, #16
 80161d4:	af00      	add	r7, sp, #0
 80161d6:	6078      	str	r0, [r7, #4]
 80161d8:	6039      	str	r1, [r7, #0]
 80161da:	2300      	movs	r3, #0
 80161dc:	73fb      	strb	r3, [r7, #15]
 80161de:	683b      	ldr	r3, [r7, #0]
 80161e0:	781b      	ldrb	r3, [r3, #0]
 80161e2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80161e6:	2b40      	cmp	r3, #64	@ 0x40
 80161e8:	d005      	beq.n	80161f6 <USBD_StdDevReq+0x26>
 80161ea:	2b40      	cmp	r3, #64	@ 0x40
 80161ec:	d857      	bhi.n	801629e <USBD_StdDevReq+0xce>
 80161ee:	2b00      	cmp	r3, #0
 80161f0:	d00f      	beq.n	8016212 <USBD_StdDevReq+0x42>
 80161f2:	2b20      	cmp	r3, #32
 80161f4:	d153      	bne.n	801629e <USBD_StdDevReq+0xce>
 80161f6:	687b      	ldr	r3, [r7, #4]
 80161f8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80161fc:	687b      	ldr	r3, [r7, #4]
 80161fe:	32ae      	adds	r2, #174	@ 0xae
 8016200:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016204:	689b      	ldr	r3, [r3, #8]
 8016206:	6839      	ldr	r1, [r7, #0]
 8016208:	6878      	ldr	r0, [r7, #4]
 801620a:	4798      	blx	r3
 801620c:	4603      	mov	r3, r0
 801620e:	73fb      	strb	r3, [r7, #15]
 8016210:	e04a      	b.n	80162a8 <USBD_StdDevReq+0xd8>
 8016212:	683b      	ldr	r3, [r7, #0]
 8016214:	785b      	ldrb	r3, [r3, #1]
 8016216:	2b09      	cmp	r3, #9
 8016218:	d83b      	bhi.n	8016292 <USBD_StdDevReq+0xc2>
 801621a:	a201      	add	r2, pc, #4	@ (adr r2, 8016220 <USBD_StdDevReq+0x50>)
 801621c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016220:	08016275 	.word	0x08016275
 8016224:	08016289 	.word	0x08016289
 8016228:	08016293 	.word	0x08016293
 801622c:	0801627f 	.word	0x0801627f
 8016230:	08016293 	.word	0x08016293
 8016234:	08016253 	.word	0x08016253
 8016238:	08016249 	.word	0x08016249
 801623c:	08016293 	.word	0x08016293
 8016240:	0801626b 	.word	0x0801626b
 8016244:	0801625d 	.word	0x0801625d
 8016248:	6839      	ldr	r1, [r7, #0]
 801624a:	6878      	ldr	r0, [r7, #4]
 801624c:	f000 fa3c 	bl	80166c8 <USBD_GetDescriptor>
 8016250:	e024      	b.n	801629c <USBD_StdDevReq+0xcc>
 8016252:	6839      	ldr	r1, [r7, #0]
 8016254:	6878      	ldr	r0, [r7, #4]
 8016256:	f000 fba1 	bl	801699c <USBD_SetAddress>
 801625a:	e01f      	b.n	801629c <USBD_StdDevReq+0xcc>
 801625c:	6839      	ldr	r1, [r7, #0]
 801625e:	6878      	ldr	r0, [r7, #4]
 8016260:	f000 fbe0 	bl	8016a24 <USBD_SetConfig>
 8016264:	4603      	mov	r3, r0
 8016266:	73fb      	strb	r3, [r7, #15]
 8016268:	e018      	b.n	801629c <USBD_StdDevReq+0xcc>
 801626a:	6839      	ldr	r1, [r7, #0]
 801626c:	6878      	ldr	r0, [r7, #4]
 801626e:	f000 fc83 	bl	8016b78 <USBD_GetConfig>
 8016272:	e013      	b.n	801629c <USBD_StdDevReq+0xcc>
 8016274:	6839      	ldr	r1, [r7, #0]
 8016276:	6878      	ldr	r0, [r7, #4]
 8016278:	f000 fcb4 	bl	8016be4 <USBD_GetStatus>
 801627c:	e00e      	b.n	801629c <USBD_StdDevReq+0xcc>
 801627e:	6839      	ldr	r1, [r7, #0]
 8016280:	6878      	ldr	r0, [r7, #4]
 8016282:	f000 fce3 	bl	8016c4c <USBD_SetFeature>
 8016286:	e009      	b.n	801629c <USBD_StdDevReq+0xcc>
 8016288:	6839      	ldr	r1, [r7, #0]
 801628a:	6878      	ldr	r0, [r7, #4]
 801628c:	f000 fd07 	bl	8016c9e <USBD_ClrFeature>
 8016290:	e004      	b.n	801629c <USBD_StdDevReq+0xcc>
 8016292:	6839      	ldr	r1, [r7, #0]
 8016294:	6878      	ldr	r0, [r7, #4]
 8016296:	f000 fd5e 	bl	8016d56 <USBD_CtlError>
 801629a:	bf00      	nop
 801629c:	e004      	b.n	80162a8 <USBD_StdDevReq+0xd8>
 801629e:	6839      	ldr	r1, [r7, #0]
 80162a0:	6878      	ldr	r0, [r7, #4]
 80162a2:	f000 fd58 	bl	8016d56 <USBD_CtlError>
 80162a6:	bf00      	nop
 80162a8:	7bfb      	ldrb	r3, [r7, #15]
 80162aa:	4618      	mov	r0, r3
 80162ac:	3710      	adds	r7, #16
 80162ae:	46bd      	mov	sp, r7
 80162b0:	bd80      	pop	{r7, pc}
 80162b2:	bf00      	nop

080162b4 <USBD_StdItfReq>:
 80162b4:	b580      	push	{r7, lr}
 80162b6:	b084      	sub	sp, #16
 80162b8:	af00      	add	r7, sp, #0
 80162ba:	6078      	str	r0, [r7, #4]
 80162bc:	6039      	str	r1, [r7, #0]
 80162be:	2300      	movs	r3, #0
 80162c0:	73fb      	strb	r3, [r7, #15]
 80162c2:	683b      	ldr	r3, [r7, #0]
 80162c4:	781b      	ldrb	r3, [r3, #0]
 80162c6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80162ca:	2b40      	cmp	r3, #64	@ 0x40
 80162cc:	d005      	beq.n	80162da <USBD_StdItfReq+0x26>
 80162ce:	2b40      	cmp	r3, #64	@ 0x40
 80162d0:	d852      	bhi.n	8016378 <USBD_StdItfReq+0xc4>
 80162d2:	2b00      	cmp	r3, #0
 80162d4:	d001      	beq.n	80162da <USBD_StdItfReq+0x26>
 80162d6:	2b20      	cmp	r3, #32
 80162d8:	d14e      	bne.n	8016378 <USBD_StdItfReq+0xc4>
 80162da:	687b      	ldr	r3, [r7, #4]
 80162dc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80162e0:	b2db      	uxtb	r3, r3
 80162e2:	3b01      	subs	r3, #1
 80162e4:	2b02      	cmp	r3, #2
 80162e6:	d840      	bhi.n	801636a <USBD_StdItfReq+0xb6>
 80162e8:	683b      	ldr	r3, [r7, #0]
 80162ea:	889b      	ldrh	r3, [r3, #4]
 80162ec:	b2db      	uxtb	r3, r3
 80162ee:	2b01      	cmp	r3, #1
 80162f0:	d836      	bhi.n	8016360 <USBD_StdItfReq+0xac>
 80162f2:	683b      	ldr	r3, [r7, #0]
 80162f4:	889b      	ldrh	r3, [r3, #4]
 80162f6:	b2db      	uxtb	r3, r3
 80162f8:	4619      	mov	r1, r3
 80162fa:	6878      	ldr	r0, [r7, #4]
 80162fc:	f7ff fedb 	bl	80160b6 <USBD_CoreFindIF>
 8016300:	4603      	mov	r3, r0
 8016302:	73bb      	strb	r3, [r7, #14]
 8016304:	7bbb      	ldrb	r3, [r7, #14]
 8016306:	2bff      	cmp	r3, #255	@ 0xff
 8016308:	d01d      	beq.n	8016346 <USBD_StdItfReq+0x92>
 801630a:	7bbb      	ldrb	r3, [r7, #14]
 801630c:	2b00      	cmp	r3, #0
 801630e:	d11a      	bne.n	8016346 <USBD_StdItfReq+0x92>
 8016310:	7bba      	ldrb	r2, [r7, #14]
 8016312:	687b      	ldr	r3, [r7, #4]
 8016314:	32ae      	adds	r2, #174	@ 0xae
 8016316:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801631a:	689b      	ldr	r3, [r3, #8]
 801631c:	2b00      	cmp	r3, #0
 801631e:	d00f      	beq.n	8016340 <USBD_StdItfReq+0x8c>
 8016320:	7bba      	ldrb	r2, [r7, #14]
 8016322:	687b      	ldr	r3, [r7, #4]
 8016324:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016328:	7bba      	ldrb	r2, [r7, #14]
 801632a:	687b      	ldr	r3, [r7, #4]
 801632c:	32ae      	adds	r2, #174	@ 0xae
 801632e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016332:	689b      	ldr	r3, [r3, #8]
 8016334:	6839      	ldr	r1, [r7, #0]
 8016336:	6878      	ldr	r0, [r7, #4]
 8016338:	4798      	blx	r3
 801633a:	4603      	mov	r3, r0
 801633c:	73fb      	strb	r3, [r7, #15]
 801633e:	e004      	b.n	801634a <USBD_StdItfReq+0x96>
 8016340:	2303      	movs	r3, #3
 8016342:	73fb      	strb	r3, [r7, #15]
 8016344:	e001      	b.n	801634a <USBD_StdItfReq+0x96>
 8016346:	2303      	movs	r3, #3
 8016348:	73fb      	strb	r3, [r7, #15]
 801634a:	683b      	ldr	r3, [r7, #0]
 801634c:	88db      	ldrh	r3, [r3, #6]
 801634e:	2b00      	cmp	r3, #0
 8016350:	d110      	bne.n	8016374 <USBD_StdItfReq+0xc0>
 8016352:	7bfb      	ldrb	r3, [r7, #15]
 8016354:	2b00      	cmp	r3, #0
 8016356:	d10d      	bne.n	8016374 <USBD_StdItfReq+0xc0>
 8016358:	6878      	ldr	r0, [r7, #4]
 801635a:	f000 fdc7 	bl	8016eec <USBD_CtlSendStatus>
 801635e:	e009      	b.n	8016374 <USBD_StdItfReq+0xc0>
 8016360:	6839      	ldr	r1, [r7, #0]
 8016362:	6878      	ldr	r0, [r7, #4]
 8016364:	f000 fcf7 	bl	8016d56 <USBD_CtlError>
 8016368:	e004      	b.n	8016374 <USBD_StdItfReq+0xc0>
 801636a:	6839      	ldr	r1, [r7, #0]
 801636c:	6878      	ldr	r0, [r7, #4]
 801636e:	f000 fcf2 	bl	8016d56 <USBD_CtlError>
 8016372:	e000      	b.n	8016376 <USBD_StdItfReq+0xc2>
 8016374:	bf00      	nop
 8016376:	e004      	b.n	8016382 <USBD_StdItfReq+0xce>
 8016378:	6839      	ldr	r1, [r7, #0]
 801637a:	6878      	ldr	r0, [r7, #4]
 801637c:	f000 fceb 	bl	8016d56 <USBD_CtlError>
 8016380:	bf00      	nop
 8016382:	7bfb      	ldrb	r3, [r7, #15]
 8016384:	4618      	mov	r0, r3
 8016386:	3710      	adds	r7, #16
 8016388:	46bd      	mov	sp, r7
 801638a:	bd80      	pop	{r7, pc}

0801638c <USBD_StdEPReq>:
 801638c:	b580      	push	{r7, lr}
 801638e:	b084      	sub	sp, #16
 8016390:	af00      	add	r7, sp, #0
 8016392:	6078      	str	r0, [r7, #4]
 8016394:	6039      	str	r1, [r7, #0]
 8016396:	2300      	movs	r3, #0
 8016398:	73fb      	strb	r3, [r7, #15]
 801639a:	683b      	ldr	r3, [r7, #0]
 801639c:	889b      	ldrh	r3, [r3, #4]
 801639e:	73bb      	strb	r3, [r7, #14]
 80163a0:	683b      	ldr	r3, [r7, #0]
 80163a2:	781b      	ldrb	r3, [r3, #0]
 80163a4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80163a8:	2b40      	cmp	r3, #64	@ 0x40
 80163aa:	d007      	beq.n	80163bc <USBD_StdEPReq+0x30>
 80163ac:	2b40      	cmp	r3, #64	@ 0x40
 80163ae:	f200 817f 	bhi.w	80166b0 <USBD_StdEPReq+0x324>
 80163b2:	2b00      	cmp	r3, #0
 80163b4:	d02a      	beq.n	801640c <USBD_StdEPReq+0x80>
 80163b6:	2b20      	cmp	r3, #32
 80163b8:	f040 817a 	bne.w	80166b0 <USBD_StdEPReq+0x324>
 80163bc:	7bbb      	ldrb	r3, [r7, #14]
 80163be:	4619      	mov	r1, r3
 80163c0:	6878      	ldr	r0, [r7, #4]
 80163c2:	f7ff fe85 	bl	80160d0 <USBD_CoreFindEP>
 80163c6:	4603      	mov	r3, r0
 80163c8:	737b      	strb	r3, [r7, #13]
 80163ca:	7b7b      	ldrb	r3, [r7, #13]
 80163cc:	2bff      	cmp	r3, #255	@ 0xff
 80163ce:	f000 8174 	beq.w	80166ba <USBD_StdEPReq+0x32e>
 80163d2:	7b7b      	ldrb	r3, [r7, #13]
 80163d4:	2b00      	cmp	r3, #0
 80163d6:	f040 8170 	bne.w	80166ba <USBD_StdEPReq+0x32e>
 80163da:	7b7a      	ldrb	r2, [r7, #13]
 80163dc:	687b      	ldr	r3, [r7, #4]
 80163de:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80163e2:	7b7a      	ldrb	r2, [r7, #13]
 80163e4:	687b      	ldr	r3, [r7, #4]
 80163e6:	32ae      	adds	r2, #174	@ 0xae
 80163e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80163ec:	689b      	ldr	r3, [r3, #8]
 80163ee:	2b00      	cmp	r3, #0
 80163f0:	f000 8163 	beq.w	80166ba <USBD_StdEPReq+0x32e>
 80163f4:	7b7a      	ldrb	r2, [r7, #13]
 80163f6:	687b      	ldr	r3, [r7, #4]
 80163f8:	32ae      	adds	r2, #174	@ 0xae
 80163fa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80163fe:	689b      	ldr	r3, [r3, #8]
 8016400:	6839      	ldr	r1, [r7, #0]
 8016402:	6878      	ldr	r0, [r7, #4]
 8016404:	4798      	blx	r3
 8016406:	4603      	mov	r3, r0
 8016408:	73fb      	strb	r3, [r7, #15]
 801640a:	e156      	b.n	80166ba <USBD_StdEPReq+0x32e>
 801640c:	683b      	ldr	r3, [r7, #0]
 801640e:	785b      	ldrb	r3, [r3, #1]
 8016410:	2b03      	cmp	r3, #3
 8016412:	d008      	beq.n	8016426 <USBD_StdEPReq+0x9a>
 8016414:	2b03      	cmp	r3, #3
 8016416:	f300 8145 	bgt.w	80166a4 <USBD_StdEPReq+0x318>
 801641a:	2b00      	cmp	r3, #0
 801641c:	f000 809b 	beq.w	8016556 <USBD_StdEPReq+0x1ca>
 8016420:	2b01      	cmp	r3, #1
 8016422:	d03c      	beq.n	801649e <USBD_StdEPReq+0x112>
 8016424:	e13e      	b.n	80166a4 <USBD_StdEPReq+0x318>
 8016426:	687b      	ldr	r3, [r7, #4]
 8016428:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801642c:	b2db      	uxtb	r3, r3
 801642e:	2b02      	cmp	r3, #2
 8016430:	d002      	beq.n	8016438 <USBD_StdEPReq+0xac>
 8016432:	2b03      	cmp	r3, #3
 8016434:	d016      	beq.n	8016464 <USBD_StdEPReq+0xd8>
 8016436:	e02c      	b.n	8016492 <USBD_StdEPReq+0x106>
 8016438:	7bbb      	ldrb	r3, [r7, #14]
 801643a:	2b00      	cmp	r3, #0
 801643c:	d00d      	beq.n	801645a <USBD_StdEPReq+0xce>
 801643e:	7bbb      	ldrb	r3, [r7, #14]
 8016440:	2b80      	cmp	r3, #128	@ 0x80
 8016442:	d00a      	beq.n	801645a <USBD_StdEPReq+0xce>
 8016444:	7bbb      	ldrb	r3, [r7, #14]
 8016446:	4619      	mov	r1, r3
 8016448:	6878      	ldr	r0, [r7, #4]
 801644a:	f004 fa8f 	bl	801a96c <USBD_LL_StallEP>
 801644e:	2180      	movs	r1, #128	@ 0x80
 8016450:	6878      	ldr	r0, [r7, #4]
 8016452:	f004 fa8b 	bl	801a96c <USBD_LL_StallEP>
 8016456:	bf00      	nop
 8016458:	e020      	b.n	801649c <USBD_StdEPReq+0x110>
 801645a:	6839      	ldr	r1, [r7, #0]
 801645c:	6878      	ldr	r0, [r7, #4]
 801645e:	f000 fc7a 	bl	8016d56 <USBD_CtlError>
 8016462:	e01b      	b.n	801649c <USBD_StdEPReq+0x110>
 8016464:	683b      	ldr	r3, [r7, #0]
 8016466:	885b      	ldrh	r3, [r3, #2]
 8016468:	2b00      	cmp	r3, #0
 801646a:	d10e      	bne.n	801648a <USBD_StdEPReq+0xfe>
 801646c:	7bbb      	ldrb	r3, [r7, #14]
 801646e:	2b00      	cmp	r3, #0
 8016470:	d00b      	beq.n	801648a <USBD_StdEPReq+0xfe>
 8016472:	7bbb      	ldrb	r3, [r7, #14]
 8016474:	2b80      	cmp	r3, #128	@ 0x80
 8016476:	d008      	beq.n	801648a <USBD_StdEPReq+0xfe>
 8016478:	683b      	ldr	r3, [r7, #0]
 801647a:	88db      	ldrh	r3, [r3, #6]
 801647c:	2b00      	cmp	r3, #0
 801647e:	d104      	bne.n	801648a <USBD_StdEPReq+0xfe>
 8016480:	7bbb      	ldrb	r3, [r7, #14]
 8016482:	4619      	mov	r1, r3
 8016484:	6878      	ldr	r0, [r7, #4]
 8016486:	f004 fa71 	bl	801a96c <USBD_LL_StallEP>
 801648a:	6878      	ldr	r0, [r7, #4]
 801648c:	f000 fd2e 	bl	8016eec <USBD_CtlSendStatus>
 8016490:	e004      	b.n	801649c <USBD_StdEPReq+0x110>
 8016492:	6839      	ldr	r1, [r7, #0]
 8016494:	6878      	ldr	r0, [r7, #4]
 8016496:	f000 fc5e 	bl	8016d56 <USBD_CtlError>
 801649a:	bf00      	nop
 801649c:	e107      	b.n	80166ae <USBD_StdEPReq+0x322>
 801649e:	687b      	ldr	r3, [r7, #4]
 80164a0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80164a4:	b2db      	uxtb	r3, r3
 80164a6:	2b02      	cmp	r3, #2
 80164a8:	d002      	beq.n	80164b0 <USBD_StdEPReq+0x124>
 80164aa:	2b03      	cmp	r3, #3
 80164ac:	d016      	beq.n	80164dc <USBD_StdEPReq+0x150>
 80164ae:	e04b      	b.n	8016548 <USBD_StdEPReq+0x1bc>
 80164b0:	7bbb      	ldrb	r3, [r7, #14]
 80164b2:	2b00      	cmp	r3, #0
 80164b4:	d00d      	beq.n	80164d2 <USBD_StdEPReq+0x146>
 80164b6:	7bbb      	ldrb	r3, [r7, #14]
 80164b8:	2b80      	cmp	r3, #128	@ 0x80
 80164ba:	d00a      	beq.n	80164d2 <USBD_StdEPReq+0x146>
 80164bc:	7bbb      	ldrb	r3, [r7, #14]
 80164be:	4619      	mov	r1, r3
 80164c0:	6878      	ldr	r0, [r7, #4]
 80164c2:	f004 fa53 	bl	801a96c <USBD_LL_StallEP>
 80164c6:	2180      	movs	r1, #128	@ 0x80
 80164c8:	6878      	ldr	r0, [r7, #4]
 80164ca:	f004 fa4f 	bl	801a96c <USBD_LL_StallEP>
 80164ce:	bf00      	nop
 80164d0:	e040      	b.n	8016554 <USBD_StdEPReq+0x1c8>
 80164d2:	6839      	ldr	r1, [r7, #0]
 80164d4:	6878      	ldr	r0, [r7, #4]
 80164d6:	f000 fc3e 	bl	8016d56 <USBD_CtlError>
 80164da:	e03b      	b.n	8016554 <USBD_StdEPReq+0x1c8>
 80164dc:	683b      	ldr	r3, [r7, #0]
 80164de:	885b      	ldrh	r3, [r3, #2]
 80164e0:	2b00      	cmp	r3, #0
 80164e2:	d136      	bne.n	8016552 <USBD_StdEPReq+0x1c6>
 80164e4:	7bbb      	ldrb	r3, [r7, #14]
 80164e6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80164ea:	2b00      	cmp	r3, #0
 80164ec:	d004      	beq.n	80164f8 <USBD_StdEPReq+0x16c>
 80164ee:	7bbb      	ldrb	r3, [r7, #14]
 80164f0:	4619      	mov	r1, r3
 80164f2:	6878      	ldr	r0, [r7, #4]
 80164f4:	f004 fa59 	bl	801a9aa <USBD_LL_ClearStallEP>
 80164f8:	6878      	ldr	r0, [r7, #4]
 80164fa:	f000 fcf7 	bl	8016eec <USBD_CtlSendStatus>
 80164fe:	7bbb      	ldrb	r3, [r7, #14]
 8016500:	4619      	mov	r1, r3
 8016502:	6878      	ldr	r0, [r7, #4]
 8016504:	f7ff fde4 	bl	80160d0 <USBD_CoreFindEP>
 8016508:	4603      	mov	r3, r0
 801650a:	737b      	strb	r3, [r7, #13]
 801650c:	7b7b      	ldrb	r3, [r7, #13]
 801650e:	2bff      	cmp	r3, #255	@ 0xff
 8016510:	d01f      	beq.n	8016552 <USBD_StdEPReq+0x1c6>
 8016512:	7b7b      	ldrb	r3, [r7, #13]
 8016514:	2b00      	cmp	r3, #0
 8016516:	d11c      	bne.n	8016552 <USBD_StdEPReq+0x1c6>
 8016518:	7b7a      	ldrb	r2, [r7, #13]
 801651a:	687b      	ldr	r3, [r7, #4]
 801651c:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016520:	7b7a      	ldrb	r2, [r7, #13]
 8016522:	687b      	ldr	r3, [r7, #4]
 8016524:	32ae      	adds	r2, #174	@ 0xae
 8016526:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801652a:	689b      	ldr	r3, [r3, #8]
 801652c:	2b00      	cmp	r3, #0
 801652e:	d010      	beq.n	8016552 <USBD_StdEPReq+0x1c6>
 8016530:	7b7a      	ldrb	r2, [r7, #13]
 8016532:	687b      	ldr	r3, [r7, #4]
 8016534:	32ae      	adds	r2, #174	@ 0xae
 8016536:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801653a:	689b      	ldr	r3, [r3, #8]
 801653c:	6839      	ldr	r1, [r7, #0]
 801653e:	6878      	ldr	r0, [r7, #4]
 8016540:	4798      	blx	r3
 8016542:	4603      	mov	r3, r0
 8016544:	73fb      	strb	r3, [r7, #15]
 8016546:	e004      	b.n	8016552 <USBD_StdEPReq+0x1c6>
 8016548:	6839      	ldr	r1, [r7, #0]
 801654a:	6878      	ldr	r0, [r7, #4]
 801654c:	f000 fc03 	bl	8016d56 <USBD_CtlError>
 8016550:	e000      	b.n	8016554 <USBD_StdEPReq+0x1c8>
 8016552:	bf00      	nop
 8016554:	e0ab      	b.n	80166ae <USBD_StdEPReq+0x322>
 8016556:	687b      	ldr	r3, [r7, #4]
 8016558:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801655c:	b2db      	uxtb	r3, r3
 801655e:	2b02      	cmp	r3, #2
 8016560:	d002      	beq.n	8016568 <USBD_StdEPReq+0x1dc>
 8016562:	2b03      	cmp	r3, #3
 8016564:	d032      	beq.n	80165cc <USBD_StdEPReq+0x240>
 8016566:	e097      	b.n	8016698 <USBD_StdEPReq+0x30c>
 8016568:	7bbb      	ldrb	r3, [r7, #14]
 801656a:	2b00      	cmp	r3, #0
 801656c:	d007      	beq.n	801657e <USBD_StdEPReq+0x1f2>
 801656e:	7bbb      	ldrb	r3, [r7, #14]
 8016570:	2b80      	cmp	r3, #128	@ 0x80
 8016572:	d004      	beq.n	801657e <USBD_StdEPReq+0x1f2>
 8016574:	6839      	ldr	r1, [r7, #0]
 8016576:	6878      	ldr	r0, [r7, #4]
 8016578:	f000 fbed 	bl	8016d56 <USBD_CtlError>
 801657c:	e091      	b.n	80166a2 <USBD_StdEPReq+0x316>
 801657e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8016582:	2b00      	cmp	r3, #0
 8016584:	da0b      	bge.n	801659e <USBD_StdEPReq+0x212>
 8016586:	7bbb      	ldrb	r3, [r7, #14]
 8016588:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801658c:	4613      	mov	r3, r2
 801658e:	009b      	lsls	r3, r3, #2
 8016590:	4413      	add	r3, r2
 8016592:	009b      	lsls	r3, r3, #2
 8016594:	3310      	adds	r3, #16
 8016596:	687a      	ldr	r2, [r7, #4]
 8016598:	4413      	add	r3, r2
 801659a:	3304      	adds	r3, #4
 801659c:	e00b      	b.n	80165b6 <USBD_StdEPReq+0x22a>
 801659e:	7bbb      	ldrb	r3, [r7, #14]
 80165a0:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80165a4:	4613      	mov	r3, r2
 80165a6:	009b      	lsls	r3, r3, #2
 80165a8:	4413      	add	r3, r2
 80165aa:	009b      	lsls	r3, r3, #2
 80165ac:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80165b0:	687a      	ldr	r2, [r7, #4]
 80165b2:	4413      	add	r3, r2
 80165b4:	3304      	adds	r3, #4
 80165b6:	60bb      	str	r3, [r7, #8]
 80165b8:	68bb      	ldr	r3, [r7, #8]
 80165ba:	2200      	movs	r2, #0
 80165bc:	601a      	str	r2, [r3, #0]
 80165be:	68bb      	ldr	r3, [r7, #8]
 80165c0:	2202      	movs	r2, #2
 80165c2:	4619      	mov	r1, r3
 80165c4:	6878      	ldr	r0, [r7, #4]
 80165c6:	f000 fc37 	bl	8016e38 <USBD_CtlSendData>
 80165ca:	e06a      	b.n	80166a2 <USBD_StdEPReq+0x316>
 80165cc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80165d0:	2b00      	cmp	r3, #0
 80165d2:	da11      	bge.n	80165f8 <USBD_StdEPReq+0x26c>
 80165d4:	7bbb      	ldrb	r3, [r7, #14]
 80165d6:	f003 020f 	and.w	r2, r3, #15
 80165da:	6879      	ldr	r1, [r7, #4]
 80165dc:	4613      	mov	r3, r2
 80165de:	009b      	lsls	r3, r3, #2
 80165e0:	4413      	add	r3, r2
 80165e2:	009b      	lsls	r3, r3, #2
 80165e4:	440b      	add	r3, r1
 80165e6:	3324      	adds	r3, #36	@ 0x24
 80165e8:	881b      	ldrh	r3, [r3, #0]
 80165ea:	2b00      	cmp	r3, #0
 80165ec:	d117      	bne.n	801661e <USBD_StdEPReq+0x292>
 80165ee:	6839      	ldr	r1, [r7, #0]
 80165f0:	6878      	ldr	r0, [r7, #4]
 80165f2:	f000 fbb0 	bl	8016d56 <USBD_CtlError>
 80165f6:	e054      	b.n	80166a2 <USBD_StdEPReq+0x316>
 80165f8:	7bbb      	ldrb	r3, [r7, #14]
 80165fa:	f003 020f 	and.w	r2, r3, #15
 80165fe:	6879      	ldr	r1, [r7, #4]
 8016600:	4613      	mov	r3, r2
 8016602:	009b      	lsls	r3, r3, #2
 8016604:	4413      	add	r3, r2
 8016606:	009b      	lsls	r3, r3, #2
 8016608:	440b      	add	r3, r1
 801660a:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 801660e:	881b      	ldrh	r3, [r3, #0]
 8016610:	2b00      	cmp	r3, #0
 8016612:	d104      	bne.n	801661e <USBD_StdEPReq+0x292>
 8016614:	6839      	ldr	r1, [r7, #0]
 8016616:	6878      	ldr	r0, [r7, #4]
 8016618:	f000 fb9d 	bl	8016d56 <USBD_CtlError>
 801661c:	e041      	b.n	80166a2 <USBD_StdEPReq+0x316>
 801661e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8016622:	2b00      	cmp	r3, #0
 8016624:	da0b      	bge.n	801663e <USBD_StdEPReq+0x2b2>
 8016626:	7bbb      	ldrb	r3, [r7, #14]
 8016628:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801662c:	4613      	mov	r3, r2
 801662e:	009b      	lsls	r3, r3, #2
 8016630:	4413      	add	r3, r2
 8016632:	009b      	lsls	r3, r3, #2
 8016634:	3310      	adds	r3, #16
 8016636:	687a      	ldr	r2, [r7, #4]
 8016638:	4413      	add	r3, r2
 801663a:	3304      	adds	r3, #4
 801663c:	e00b      	b.n	8016656 <USBD_StdEPReq+0x2ca>
 801663e:	7bbb      	ldrb	r3, [r7, #14]
 8016640:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8016644:	4613      	mov	r3, r2
 8016646:	009b      	lsls	r3, r3, #2
 8016648:	4413      	add	r3, r2
 801664a:	009b      	lsls	r3, r3, #2
 801664c:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8016650:	687a      	ldr	r2, [r7, #4]
 8016652:	4413      	add	r3, r2
 8016654:	3304      	adds	r3, #4
 8016656:	60bb      	str	r3, [r7, #8]
 8016658:	7bbb      	ldrb	r3, [r7, #14]
 801665a:	2b00      	cmp	r3, #0
 801665c:	d002      	beq.n	8016664 <USBD_StdEPReq+0x2d8>
 801665e:	7bbb      	ldrb	r3, [r7, #14]
 8016660:	2b80      	cmp	r3, #128	@ 0x80
 8016662:	d103      	bne.n	801666c <USBD_StdEPReq+0x2e0>
 8016664:	68bb      	ldr	r3, [r7, #8]
 8016666:	2200      	movs	r2, #0
 8016668:	601a      	str	r2, [r3, #0]
 801666a:	e00e      	b.n	801668a <USBD_StdEPReq+0x2fe>
 801666c:	7bbb      	ldrb	r3, [r7, #14]
 801666e:	4619      	mov	r1, r3
 8016670:	6878      	ldr	r0, [r7, #4]
 8016672:	f004 f9b9 	bl	801a9e8 <USBD_LL_IsStallEP>
 8016676:	4603      	mov	r3, r0
 8016678:	2b00      	cmp	r3, #0
 801667a:	d003      	beq.n	8016684 <USBD_StdEPReq+0x2f8>
 801667c:	68bb      	ldr	r3, [r7, #8]
 801667e:	2201      	movs	r2, #1
 8016680:	601a      	str	r2, [r3, #0]
 8016682:	e002      	b.n	801668a <USBD_StdEPReq+0x2fe>
 8016684:	68bb      	ldr	r3, [r7, #8]
 8016686:	2200      	movs	r2, #0
 8016688:	601a      	str	r2, [r3, #0]
 801668a:	68bb      	ldr	r3, [r7, #8]
 801668c:	2202      	movs	r2, #2
 801668e:	4619      	mov	r1, r3
 8016690:	6878      	ldr	r0, [r7, #4]
 8016692:	f000 fbd1 	bl	8016e38 <USBD_CtlSendData>
 8016696:	e004      	b.n	80166a2 <USBD_StdEPReq+0x316>
 8016698:	6839      	ldr	r1, [r7, #0]
 801669a:	6878      	ldr	r0, [r7, #4]
 801669c:	f000 fb5b 	bl	8016d56 <USBD_CtlError>
 80166a0:	bf00      	nop
 80166a2:	e004      	b.n	80166ae <USBD_StdEPReq+0x322>
 80166a4:	6839      	ldr	r1, [r7, #0]
 80166a6:	6878      	ldr	r0, [r7, #4]
 80166a8:	f000 fb55 	bl	8016d56 <USBD_CtlError>
 80166ac:	bf00      	nop
 80166ae:	e005      	b.n	80166bc <USBD_StdEPReq+0x330>
 80166b0:	6839      	ldr	r1, [r7, #0]
 80166b2:	6878      	ldr	r0, [r7, #4]
 80166b4:	f000 fb4f 	bl	8016d56 <USBD_CtlError>
 80166b8:	e000      	b.n	80166bc <USBD_StdEPReq+0x330>
 80166ba:	bf00      	nop
 80166bc:	7bfb      	ldrb	r3, [r7, #15]
 80166be:	4618      	mov	r0, r3
 80166c0:	3710      	adds	r7, #16
 80166c2:	46bd      	mov	sp, r7
 80166c4:	bd80      	pop	{r7, pc}
	...

080166c8 <USBD_GetDescriptor>:
 80166c8:	b580      	push	{r7, lr}
 80166ca:	b084      	sub	sp, #16
 80166cc:	af00      	add	r7, sp, #0
 80166ce:	6078      	str	r0, [r7, #4]
 80166d0:	6039      	str	r1, [r7, #0]
 80166d2:	2300      	movs	r3, #0
 80166d4:	813b      	strh	r3, [r7, #8]
 80166d6:	2300      	movs	r3, #0
 80166d8:	60fb      	str	r3, [r7, #12]
 80166da:	2300      	movs	r3, #0
 80166dc:	72fb      	strb	r3, [r7, #11]
 80166de:	683b      	ldr	r3, [r7, #0]
 80166e0:	885b      	ldrh	r3, [r3, #2]
 80166e2:	0a1b      	lsrs	r3, r3, #8
 80166e4:	b29b      	uxth	r3, r3
 80166e6:	3b01      	subs	r3, #1
 80166e8:	2b06      	cmp	r3, #6
 80166ea:	f200 8128 	bhi.w	801693e <USBD_GetDescriptor+0x276>
 80166ee:	a201      	add	r2, pc, #4	@ (adr r2, 80166f4 <USBD_GetDescriptor+0x2c>)
 80166f0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80166f4:	08016711 	.word	0x08016711
 80166f8:	08016729 	.word	0x08016729
 80166fc:	08016769 	.word	0x08016769
 8016700:	0801693f 	.word	0x0801693f
 8016704:	0801693f 	.word	0x0801693f
 8016708:	080168df 	.word	0x080168df
 801670c:	0801690b 	.word	0x0801690b
 8016710:	687b      	ldr	r3, [r7, #4]
 8016712:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016716:	681b      	ldr	r3, [r3, #0]
 8016718:	687a      	ldr	r2, [r7, #4]
 801671a:	7c12      	ldrb	r2, [r2, #16]
 801671c:	f107 0108 	add.w	r1, r7, #8
 8016720:	4610      	mov	r0, r2
 8016722:	4798      	blx	r3
 8016724:	60f8      	str	r0, [r7, #12]
 8016726:	e112      	b.n	801694e <USBD_GetDescriptor+0x286>
 8016728:	687b      	ldr	r3, [r7, #4]
 801672a:	7c1b      	ldrb	r3, [r3, #16]
 801672c:	2b00      	cmp	r3, #0
 801672e:	d10d      	bne.n	801674c <USBD_GetDescriptor+0x84>
 8016730:	687b      	ldr	r3, [r7, #4]
 8016732:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016736:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016738:	f107 0208 	add.w	r2, r7, #8
 801673c:	4610      	mov	r0, r2
 801673e:	4798      	blx	r3
 8016740:	60f8      	str	r0, [r7, #12]
 8016742:	68fb      	ldr	r3, [r7, #12]
 8016744:	3301      	adds	r3, #1
 8016746:	2202      	movs	r2, #2
 8016748:	701a      	strb	r2, [r3, #0]
 801674a:	e100      	b.n	801694e <USBD_GetDescriptor+0x286>
 801674c:	687b      	ldr	r3, [r7, #4]
 801674e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016752:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016754:	f107 0208 	add.w	r2, r7, #8
 8016758:	4610      	mov	r0, r2
 801675a:	4798      	blx	r3
 801675c:	60f8      	str	r0, [r7, #12]
 801675e:	68fb      	ldr	r3, [r7, #12]
 8016760:	3301      	adds	r3, #1
 8016762:	2202      	movs	r2, #2
 8016764:	701a      	strb	r2, [r3, #0]
 8016766:	e0f2      	b.n	801694e <USBD_GetDescriptor+0x286>
 8016768:	683b      	ldr	r3, [r7, #0]
 801676a:	885b      	ldrh	r3, [r3, #2]
 801676c:	b2db      	uxtb	r3, r3
 801676e:	2b05      	cmp	r3, #5
 8016770:	f200 80ac 	bhi.w	80168cc <USBD_GetDescriptor+0x204>
 8016774:	a201      	add	r2, pc, #4	@ (adr r2, 801677c <USBD_GetDescriptor+0xb4>)
 8016776:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801677a:	bf00      	nop
 801677c:	08016795 	.word	0x08016795
 8016780:	080167c9 	.word	0x080167c9
 8016784:	080167fd 	.word	0x080167fd
 8016788:	08016831 	.word	0x08016831
 801678c:	08016865 	.word	0x08016865
 8016790:	08016899 	.word	0x08016899
 8016794:	687b      	ldr	r3, [r7, #4]
 8016796:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801679a:	685b      	ldr	r3, [r3, #4]
 801679c:	2b00      	cmp	r3, #0
 801679e:	d00b      	beq.n	80167b8 <USBD_GetDescriptor+0xf0>
 80167a0:	687b      	ldr	r3, [r7, #4]
 80167a2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80167a6:	685b      	ldr	r3, [r3, #4]
 80167a8:	687a      	ldr	r2, [r7, #4]
 80167aa:	7c12      	ldrb	r2, [r2, #16]
 80167ac:	f107 0108 	add.w	r1, r7, #8
 80167b0:	4610      	mov	r0, r2
 80167b2:	4798      	blx	r3
 80167b4:	60f8      	str	r0, [r7, #12]
 80167b6:	e091      	b.n	80168dc <USBD_GetDescriptor+0x214>
 80167b8:	6839      	ldr	r1, [r7, #0]
 80167ba:	6878      	ldr	r0, [r7, #4]
 80167bc:	f000 facb 	bl	8016d56 <USBD_CtlError>
 80167c0:	7afb      	ldrb	r3, [r7, #11]
 80167c2:	3301      	adds	r3, #1
 80167c4:	72fb      	strb	r3, [r7, #11]
 80167c6:	e089      	b.n	80168dc <USBD_GetDescriptor+0x214>
 80167c8:	687b      	ldr	r3, [r7, #4]
 80167ca:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80167ce:	689b      	ldr	r3, [r3, #8]
 80167d0:	2b00      	cmp	r3, #0
 80167d2:	d00b      	beq.n	80167ec <USBD_GetDescriptor+0x124>
 80167d4:	687b      	ldr	r3, [r7, #4]
 80167d6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80167da:	689b      	ldr	r3, [r3, #8]
 80167dc:	687a      	ldr	r2, [r7, #4]
 80167de:	7c12      	ldrb	r2, [r2, #16]
 80167e0:	f107 0108 	add.w	r1, r7, #8
 80167e4:	4610      	mov	r0, r2
 80167e6:	4798      	blx	r3
 80167e8:	60f8      	str	r0, [r7, #12]
 80167ea:	e077      	b.n	80168dc <USBD_GetDescriptor+0x214>
 80167ec:	6839      	ldr	r1, [r7, #0]
 80167ee:	6878      	ldr	r0, [r7, #4]
 80167f0:	f000 fab1 	bl	8016d56 <USBD_CtlError>
 80167f4:	7afb      	ldrb	r3, [r7, #11]
 80167f6:	3301      	adds	r3, #1
 80167f8:	72fb      	strb	r3, [r7, #11]
 80167fa:	e06f      	b.n	80168dc <USBD_GetDescriptor+0x214>
 80167fc:	687b      	ldr	r3, [r7, #4]
 80167fe:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016802:	68db      	ldr	r3, [r3, #12]
 8016804:	2b00      	cmp	r3, #0
 8016806:	d00b      	beq.n	8016820 <USBD_GetDescriptor+0x158>
 8016808:	687b      	ldr	r3, [r7, #4]
 801680a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801680e:	68db      	ldr	r3, [r3, #12]
 8016810:	687a      	ldr	r2, [r7, #4]
 8016812:	7c12      	ldrb	r2, [r2, #16]
 8016814:	f107 0108 	add.w	r1, r7, #8
 8016818:	4610      	mov	r0, r2
 801681a:	4798      	blx	r3
 801681c:	60f8      	str	r0, [r7, #12]
 801681e:	e05d      	b.n	80168dc <USBD_GetDescriptor+0x214>
 8016820:	6839      	ldr	r1, [r7, #0]
 8016822:	6878      	ldr	r0, [r7, #4]
 8016824:	f000 fa97 	bl	8016d56 <USBD_CtlError>
 8016828:	7afb      	ldrb	r3, [r7, #11]
 801682a:	3301      	adds	r3, #1
 801682c:	72fb      	strb	r3, [r7, #11]
 801682e:	e055      	b.n	80168dc <USBD_GetDescriptor+0x214>
 8016830:	687b      	ldr	r3, [r7, #4]
 8016832:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016836:	691b      	ldr	r3, [r3, #16]
 8016838:	2b00      	cmp	r3, #0
 801683a:	d00b      	beq.n	8016854 <USBD_GetDescriptor+0x18c>
 801683c:	687b      	ldr	r3, [r7, #4]
 801683e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016842:	691b      	ldr	r3, [r3, #16]
 8016844:	687a      	ldr	r2, [r7, #4]
 8016846:	7c12      	ldrb	r2, [r2, #16]
 8016848:	f107 0108 	add.w	r1, r7, #8
 801684c:	4610      	mov	r0, r2
 801684e:	4798      	blx	r3
 8016850:	60f8      	str	r0, [r7, #12]
 8016852:	e043      	b.n	80168dc <USBD_GetDescriptor+0x214>
 8016854:	6839      	ldr	r1, [r7, #0]
 8016856:	6878      	ldr	r0, [r7, #4]
 8016858:	f000 fa7d 	bl	8016d56 <USBD_CtlError>
 801685c:	7afb      	ldrb	r3, [r7, #11]
 801685e:	3301      	adds	r3, #1
 8016860:	72fb      	strb	r3, [r7, #11]
 8016862:	e03b      	b.n	80168dc <USBD_GetDescriptor+0x214>
 8016864:	687b      	ldr	r3, [r7, #4]
 8016866:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801686a:	695b      	ldr	r3, [r3, #20]
 801686c:	2b00      	cmp	r3, #0
 801686e:	d00b      	beq.n	8016888 <USBD_GetDescriptor+0x1c0>
 8016870:	687b      	ldr	r3, [r7, #4]
 8016872:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016876:	695b      	ldr	r3, [r3, #20]
 8016878:	687a      	ldr	r2, [r7, #4]
 801687a:	7c12      	ldrb	r2, [r2, #16]
 801687c:	f107 0108 	add.w	r1, r7, #8
 8016880:	4610      	mov	r0, r2
 8016882:	4798      	blx	r3
 8016884:	60f8      	str	r0, [r7, #12]
 8016886:	e029      	b.n	80168dc <USBD_GetDescriptor+0x214>
 8016888:	6839      	ldr	r1, [r7, #0]
 801688a:	6878      	ldr	r0, [r7, #4]
 801688c:	f000 fa63 	bl	8016d56 <USBD_CtlError>
 8016890:	7afb      	ldrb	r3, [r7, #11]
 8016892:	3301      	adds	r3, #1
 8016894:	72fb      	strb	r3, [r7, #11]
 8016896:	e021      	b.n	80168dc <USBD_GetDescriptor+0x214>
 8016898:	687b      	ldr	r3, [r7, #4]
 801689a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801689e:	699b      	ldr	r3, [r3, #24]
 80168a0:	2b00      	cmp	r3, #0
 80168a2:	d00b      	beq.n	80168bc <USBD_GetDescriptor+0x1f4>
 80168a4:	687b      	ldr	r3, [r7, #4]
 80168a6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80168aa:	699b      	ldr	r3, [r3, #24]
 80168ac:	687a      	ldr	r2, [r7, #4]
 80168ae:	7c12      	ldrb	r2, [r2, #16]
 80168b0:	f107 0108 	add.w	r1, r7, #8
 80168b4:	4610      	mov	r0, r2
 80168b6:	4798      	blx	r3
 80168b8:	60f8      	str	r0, [r7, #12]
 80168ba:	e00f      	b.n	80168dc <USBD_GetDescriptor+0x214>
 80168bc:	6839      	ldr	r1, [r7, #0]
 80168be:	6878      	ldr	r0, [r7, #4]
 80168c0:	f000 fa49 	bl	8016d56 <USBD_CtlError>
 80168c4:	7afb      	ldrb	r3, [r7, #11]
 80168c6:	3301      	adds	r3, #1
 80168c8:	72fb      	strb	r3, [r7, #11]
 80168ca:	e007      	b.n	80168dc <USBD_GetDescriptor+0x214>
 80168cc:	6839      	ldr	r1, [r7, #0]
 80168ce:	6878      	ldr	r0, [r7, #4]
 80168d0:	f000 fa41 	bl	8016d56 <USBD_CtlError>
 80168d4:	7afb      	ldrb	r3, [r7, #11]
 80168d6:	3301      	adds	r3, #1
 80168d8:	72fb      	strb	r3, [r7, #11]
 80168da:	bf00      	nop
 80168dc:	e037      	b.n	801694e <USBD_GetDescriptor+0x286>
 80168de:	687b      	ldr	r3, [r7, #4]
 80168e0:	7c1b      	ldrb	r3, [r3, #16]
 80168e2:	2b00      	cmp	r3, #0
 80168e4:	d109      	bne.n	80168fa <USBD_GetDescriptor+0x232>
 80168e6:	687b      	ldr	r3, [r7, #4]
 80168e8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80168ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80168ee:	f107 0208 	add.w	r2, r7, #8
 80168f2:	4610      	mov	r0, r2
 80168f4:	4798      	blx	r3
 80168f6:	60f8      	str	r0, [r7, #12]
 80168f8:	e029      	b.n	801694e <USBD_GetDescriptor+0x286>
 80168fa:	6839      	ldr	r1, [r7, #0]
 80168fc:	6878      	ldr	r0, [r7, #4]
 80168fe:	f000 fa2a 	bl	8016d56 <USBD_CtlError>
 8016902:	7afb      	ldrb	r3, [r7, #11]
 8016904:	3301      	adds	r3, #1
 8016906:	72fb      	strb	r3, [r7, #11]
 8016908:	e021      	b.n	801694e <USBD_GetDescriptor+0x286>
 801690a:	687b      	ldr	r3, [r7, #4]
 801690c:	7c1b      	ldrb	r3, [r3, #16]
 801690e:	2b00      	cmp	r3, #0
 8016910:	d10d      	bne.n	801692e <USBD_GetDescriptor+0x266>
 8016912:	687b      	ldr	r3, [r7, #4]
 8016914:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016918:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801691a:	f107 0208 	add.w	r2, r7, #8
 801691e:	4610      	mov	r0, r2
 8016920:	4798      	blx	r3
 8016922:	60f8      	str	r0, [r7, #12]
 8016924:	68fb      	ldr	r3, [r7, #12]
 8016926:	3301      	adds	r3, #1
 8016928:	2207      	movs	r2, #7
 801692a:	701a      	strb	r2, [r3, #0]
 801692c:	e00f      	b.n	801694e <USBD_GetDescriptor+0x286>
 801692e:	6839      	ldr	r1, [r7, #0]
 8016930:	6878      	ldr	r0, [r7, #4]
 8016932:	f000 fa10 	bl	8016d56 <USBD_CtlError>
 8016936:	7afb      	ldrb	r3, [r7, #11]
 8016938:	3301      	adds	r3, #1
 801693a:	72fb      	strb	r3, [r7, #11]
 801693c:	e007      	b.n	801694e <USBD_GetDescriptor+0x286>
 801693e:	6839      	ldr	r1, [r7, #0]
 8016940:	6878      	ldr	r0, [r7, #4]
 8016942:	f000 fa08 	bl	8016d56 <USBD_CtlError>
 8016946:	7afb      	ldrb	r3, [r7, #11]
 8016948:	3301      	adds	r3, #1
 801694a:	72fb      	strb	r3, [r7, #11]
 801694c:	bf00      	nop
 801694e:	7afb      	ldrb	r3, [r7, #11]
 8016950:	2b00      	cmp	r3, #0
 8016952:	d11e      	bne.n	8016992 <USBD_GetDescriptor+0x2ca>
 8016954:	683b      	ldr	r3, [r7, #0]
 8016956:	88db      	ldrh	r3, [r3, #6]
 8016958:	2b00      	cmp	r3, #0
 801695a:	d016      	beq.n	801698a <USBD_GetDescriptor+0x2c2>
 801695c:	893b      	ldrh	r3, [r7, #8]
 801695e:	2b00      	cmp	r3, #0
 8016960:	d00e      	beq.n	8016980 <USBD_GetDescriptor+0x2b8>
 8016962:	683b      	ldr	r3, [r7, #0]
 8016964:	88da      	ldrh	r2, [r3, #6]
 8016966:	893b      	ldrh	r3, [r7, #8]
 8016968:	4293      	cmp	r3, r2
 801696a:	bf28      	it	cs
 801696c:	4613      	movcs	r3, r2
 801696e:	b29b      	uxth	r3, r3
 8016970:	813b      	strh	r3, [r7, #8]
 8016972:	893b      	ldrh	r3, [r7, #8]
 8016974:	461a      	mov	r2, r3
 8016976:	68f9      	ldr	r1, [r7, #12]
 8016978:	6878      	ldr	r0, [r7, #4]
 801697a:	f000 fa5d 	bl	8016e38 <USBD_CtlSendData>
 801697e:	e009      	b.n	8016994 <USBD_GetDescriptor+0x2cc>
 8016980:	6839      	ldr	r1, [r7, #0]
 8016982:	6878      	ldr	r0, [r7, #4]
 8016984:	f000 f9e7 	bl	8016d56 <USBD_CtlError>
 8016988:	e004      	b.n	8016994 <USBD_GetDescriptor+0x2cc>
 801698a:	6878      	ldr	r0, [r7, #4]
 801698c:	f000 faae 	bl	8016eec <USBD_CtlSendStatus>
 8016990:	e000      	b.n	8016994 <USBD_GetDescriptor+0x2cc>
 8016992:	bf00      	nop
 8016994:	3710      	adds	r7, #16
 8016996:	46bd      	mov	sp, r7
 8016998:	bd80      	pop	{r7, pc}
 801699a:	bf00      	nop

0801699c <USBD_SetAddress>:
 801699c:	b580      	push	{r7, lr}
 801699e:	b084      	sub	sp, #16
 80169a0:	af00      	add	r7, sp, #0
 80169a2:	6078      	str	r0, [r7, #4]
 80169a4:	6039      	str	r1, [r7, #0]
 80169a6:	683b      	ldr	r3, [r7, #0]
 80169a8:	889b      	ldrh	r3, [r3, #4]
 80169aa:	2b00      	cmp	r3, #0
 80169ac:	d131      	bne.n	8016a12 <USBD_SetAddress+0x76>
 80169ae:	683b      	ldr	r3, [r7, #0]
 80169b0:	88db      	ldrh	r3, [r3, #6]
 80169b2:	2b00      	cmp	r3, #0
 80169b4:	d12d      	bne.n	8016a12 <USBD_SetAddress+0x76>
 80169b6:	683b      	ldr	r3, [r7, #0]
 80169b8:	885b      	ldrh	r3, [r3, #2]
 80169ba:	2b7f      	cmp	r3, #127	@ 0x7f
 80169bc:	d829      	bhi.n	8016a12 <USBD_SetAddress+0x76>
 80169be:	683b      	ldr	r3, [r7, #0]
 80169c0:	885b      	ldrh	r3, [r3, #2]
 80169c2:	b2db      	uxtb	r3, r3
 80169c4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80169c8:	73fb      	strb	r3, [r7, #15]
 80169ca:	687b      	ldr	r3, [r7, #4]
 80169cc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80169d0:	b2db      	uxtb	r3, r3
 80169d2:	2b03      	cmp	r3, #3
 80169d4:	d104      	bne.n	80169e0 <USBD_SetAddress+0x44>
 80169d6:	6839      	ldr	r1, [r7, #0]
 80169d8:	6878      	ldr	r0, [r7, #4]
 80169da:	f000 f9bc 	bl	8016d56 <USBD_CtlError>
 80169de:	e01d      	b.n	8016a1c <USBD_SetAddress+0x80>
 80169e0:	687b      	ldr	r3, [r7, #4]
 80169e2:	7bfa      	ldrb	r2, [r7, #15]
 80169e4:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 80169e8:	7bfb      	ldrb	r3, [r7, #15]
 80169ea:	4619      	mov	r1, r3
 80169ec:	6878      	ldr	r0, [r7, #4]
 80169ee:	f004 f827 	bl	801aa40 <USBD_LL_SetUSBAddress>
 80169f2:	6878      	ldr	r0, [r7, #4]
 80169f4:	f000 fa7a 	bl	8016eec <USBD_CtlSendStatus>
 80169f8:	7bfb      	ldrb	r3, [r7, #15]
 80169fa:	2b00      	cmp	r3, #0
 80169fc:	d004      	beq.n	8016a08 <USBD_SetAddress+0x6c>
 80169fe:	687b      	ldr	r3, [r7, #4]
 8016a00:	2202      	movs	r2, #2
 8016a02:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016a06:	e009      	b.n	8016a1c <USBD_SetAddress+0x80>
 8016a08:	687b      	ldr	r3, [r7, #4]
 8016a0a:	2201      	movs	r2, #1
 8016a0c:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016a10:	e004      	b.n	8016a1c <USBD_SetAddress+0x80>
 8016a12:	6839      	ldr	r1, [r7, #0]
 8016a14:	6878      	ldr	r0, [r7, #4]
 8016a16:	f000 f99e 	bl	8016d56 <USBD_CtlError>
 8016a1a:	bf00      	nop
 8016a1c:	bf00      	nop
 8016a1e:	3710      	adds	r7, #16
 8016a20:	46bd      	mov	sp, r7
 8016a22:	bd80      	pop	{r7, pc}

08016a24 <USBD_SetConfig>:
 8016a24:	b580      	push	{r7, lr}
 8016a26:	b084      	sub	sp, #16
 8016a28:	af00      	add	r7, sp, #0
 8016a2a:	6078      	str	r0, [r7, #4]
 8016a2c:	6039      	str	r1, [r7, #0]
 8016a2e:	2300      	movs	r3, #0
 8016a30:	73fb      	strb	r3, [r7, #15]
 8016a32:	683b      	ldr	r3, [r7, #0]
 8016a34:	885b      	ldrh	r3, [r3, #2]
 8016a36:	b2da      	uxtb	r2, r3
 8016a38:	4b4e      	ldr	r3, [pc, #312]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016a3a:	701a      	strb	r2, [r3, #0]
 8016a3c:	4b4d      	ldr	r3, [pc, #308]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016a3e:	781b      	ldrb	r3, [r3, #0]
 8016a40:	2b01      	cmp	r3, #1
 8016a42:	d905      	bls.n	8016a50 <USBD_SetConfig+0x2c>
 8016a44:	6839      	ldr	r1, [r7, #0]
 8016a46:	6878      	ldr	r0, [r7, #4]
 8016a48:	f000 f985 	bl	8016d56 <USBD_CtlError>
 8016a4c:	2303      	movs	r3, #3
 8016a4e:	e08c      	b.n	8016b6a <USBD_SetConfig+0x146>
 8016a50:	687b      	ldr	r3, [r7, #4]
 8016a52:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016a56:	b2db      	uxtb	r3, r3
 8016a58:	2b02      	cmp	r3, #2
 8016a5a:	d002      	beq.n	8016a62 <USBD_SetConfig+0x3e>
 8016a5c:	2b03      	cmp	r3, #3
 8016a5e:	d029      	beq.n	8016ab4 <USBD_SetConfig+0x90>
 8016a60:	e075      	b.n	8016b4e <USBD_SetConfig+0x12a>
 8016a62:	4b44      	ldr	r3, [pc, #272]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016a64:	781b      	ldrb	r3, [r3, #0]
 8016a66:	2b00      	cmp	r3, #0
 8016a68:	d020      	beq.n	8016aac <USBD_SetConfig+0x88>
 8016a6a:	4b42      	ldr	r3, [pc, #264]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016a6c:	781b      	ldrb	r3, [r3, #0]
 8016a6e:	461a      	mov	r2, r3
 8016a70:	687b      	ldr	r3, [r7, #4]
 8016a72:	605a      	str	r2, [r3, #4]
 8016a74:	4b3f      	ldr	r3, [pc, #252]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016a76:	781b      	ldrb	r3, [r3, #0]
 8016a78:	4619      	mov	r1, r3
 8016a7a:	6878      	ldr	r0, [r7, #4]
 8016a7c:	f7fe ffe9 	bl	8015a52 <USBD_SetClassConfig>
 8016a80:	4603      	mov	r3, r0
 8016a82:	73fb      	strb	r3, [r7, #15]
 8016a84:	7bfb      	ldrb	r3, [r7, #15]
 8016a86:	2b00      	cmp	r3, #0
 8016a88:	d008      	beq.n	8016a9c <USBD_SetConfig+0x78>
 8016a8a:	6839      	ldr	r1, [r7, #0]
 8016a8c:	6878      	ldr	r0, [r7, #4]
 8016a8e:	f000 f962 	bl	8016d56 <USBD_CtlError>
 8016a92:	687b      	ldr	r3, [r7, #4]
 8016a94:	2202      	movs	r2, #2
 8016a96:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016a9a:	e065      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016a9c:	6878      	ldr	r0, [r7, #4]
 8016a9e:	f000 fa25 	bl	8016eec <USBD_CtlSendStatus>
 8016aa2:	687b      	ldr	r3, [r7, #4]
 8016aa4:	2203      	movs	r2, #3
 8016aa6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016aaa:	e05d      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016aac:	6878      	ldr	r0, [r7, #4]
 8016aae:	f000 fa1d 	bl	8016eec <USBD_CtlSendStatus>
 8016ab2:	e059      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016ab4:	4b2f      	ldr	r3, [pc, #188]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016ab6:	781b      	ldrb	r3, [r3, #0]
 8016ab8:	2b00      	cmp	r3, #0
 8016aba:	d112      	bne.n	8016ae2 <USBD_SetConfig+0xbe>
 8016abc:	687b      	ldr	r3, [r7, #4]
 8016abe:	2202      	movs	r2, #2
 8016ac0:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016ac4:	4b2b      	ldr	r3, [pc, #172]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016ac6:	781b      	ldrb	r3, [r3, #0]
 8016ac8:	461a      	mov	r2, r3
 8016aca:	687b      	ldr	r3, [r7, #4]
 8016acc:	605a      	str	r2, [r3, #4]
 8016ace:	4b29      	ldr	r3, [pc, #164]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016ad0:	781b      	ldrb	r3, [r3, #0]
 8016ad2:	4619      	mov	r1, r3
 8016ad4:	6878      	ldr	r0, [r7, #4]
 8016ad6:	f7fe ffd8 	bl	8015a8a <USBD_ClrClassConfig>
 8016ada:	6878      	ldr	r0, [r7, #4]
 8016adc:	f000 fa06 	bl	8016eec <USBD_CtlSendStatus>
 8016ae0:	e042      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016ae2:	4b24      	ldr	r3, [pc, #144]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016ae4:	781b      	ldrb	r3, [r3, #0]
 8016ae6:	461a      	mov	r2, r3
 8016ae8:	687b      	ldr	r3, [r7, #4]
 8016aea:	685b      	ldr	r3, [r3, #4]
 8016aec:	429a      	cmp	r2, r3
 8016aee:	d02a      	beq.n	8016b46 <USBD_SetConfig+0x122>
 8016af0:	687b      	ldr	r3, [r7, #4]
 8016af2:	685b      	ldr	r3, [r3, #4]
 8016af4:	b2db      	uxtb	r3, r3
 8016af6:	4619      	mov	r1, r3
 8016af8:	6878      	ldr	r0, [r7, #4]
 8016afa:	f7fe ffc6 	bl	8015a8a <USBD_ClrClassConfig>
 8016afe:	4b1d      	ldr	r3, [pc, #116]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016b00:	781b      	ldrb	r3, [r3, #0]
 8016b02:	461a      	mov	r2, r3
 8016b04:	687b      	ldr	r3, [r7, #4]
 8016b06:	605a      	str	r2, [r3, #4]
 8016b08:	4b1a      	ldr	r3, [pc, #104]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016b0a:	781b      	ldrb	r3, [r3, #0]
 8016b0c:	4619      	mov	r1, r3
 8016b0e:	6878      	ldr	r0, [r7, #4]
 8016b10:	f7fe ff9f 	bl	8015a52 <USBD_SetClassConfig>
 8016b14:	4603      	mov	r3, r0
 8016b16:	73fb      	strb	r3, [r7, #15]
 8016b18:	7bfb      	ldrb	r3, [r7, #15]
 8016b1a:	2b00      	cmp	r3, #0
 8016b1c:	d00f      	beq.n	8016b3e <USBD_SetConfig+0x11a>
 8016b1e:	6839      	ldr	r1, [r7, #0]
 8016b20:	6878      	ldr	r0, [r7, #4]
 8016b22:	f000 f918 	bl	8016d56 <USBD_CtlError>
 8016b26:	687b      	ldr	r3, [r7, #4]
 8016b28:	685b      	ldr	r3, [r3, #4]
 8016b2a:	b2db      	uxtb	r3, r3
 8016b2c:	4619      	mov	r1, r3
 8016b2e:	6878      	ldr	r0, [r7, #4]
 8016b30:	f7fe ffab 	bl	8015a8a <USBD_ClrClassConfig>
 8016b34:	687b      	ldr	r3, [r7, #4]
 8016b36:	2202      	movs	r2, #2
 8016b38:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016b3c:	e014      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016b3e:	6878      	ldr	r0, [r7, #4]
 8016b40:	f000 f9d4 	bl	8016eec <USBD_CtlSendStatus>
 8016b44:	e010      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016b46:	6878      	ldr	r0, [r7, #4]
 8016b48:	f000 f9d0 	bl	8016eec <USBD_CtlSendStatus>
 8016b4c:	e00c      	b.n	8016b68 <USBD_SetConfig+0x144>
 8016b4e:	6839      	ldr	r1, [r7, #0]
 8016b50:	6878      	ldr	r0, [r7, #4]
 8016b52:	f000 f900 	bl	8016d56 <USBD_CtlError>
 8016b56:	4b07      	ldr	r3, [pc, #28]	@ (8016b74 <USBD_SetConfig+0x150>)
 8016b58:	781b      	ldrb	r3, [r3, #0]
 8016b5a:	4619      	mov	r1, r3
 8016b5c:	6878      	ldr	r0, [r7, #4]
 8016b5e:	f7fe ff94 	bl	8015a8a <USBD_ClrClassConfig>
 8016b62:	2303      	movs	r3, #3
 8016b64:	73fb      	strb	r3, [r7, #15]
 8016b66:	bf00      	nop
 8016b68:	7bfb      	ldrb	r3, [r7, #15]
 8016b6a:	4618      	mov	r0, r3
 8016b6c:	3710      	adds	r7, #16
 8016b6e:	46bd      	mov	sp, r7
 8016b70:	bd80      	pop	{r7, pc}
 8016b72:	bf00      	nop
 8016b74:	20003acc 	.word	0x20003acc

08016b78 <USBD_GetConfig>:
 8016b78:	b580      	push	{r7, lr}
 8016b7a:	b082      	sub	sp, #8
 8016b7c:	af00      	add	r7, sp, #0
 8016b7e:	6078      	str	r0, [r7, #4]
 8016b80:	6039      	str	r1, [r7, #0]
 8016b82:	683b      	ldr	r3, [r7, #0]
 8016b84:	88db      	ldrh	r3, [r3, #6]
 8016b86:	2b01      	cmp	r3, #1
 8016b88:	d004      	beq.n	8016b94 <USBD_GetConfig+0x1c>
 8016b8a:	6839      	ldr	r1, [r7, #0]
 8016b8c:	6878      	ldr	r0, [r7, #4]
 8016b8e:	f000 f8e2 	bl	8016d56 <USBD_CtlError>
 8016b92:	e023      	b.n	8016bdc <USBD_GetConfig+0x64>
 8016b94:	687b      	ldr	r3, [r7, #4]
 8016b96:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016b9a:	b2db      	uxtb	r3, r3
 8016b9c:	2b02      	cmp	r3, #2
 8016b9e:	dc02      	bgt.n	8016ba6 <USBD_GetConfig+0x2e>
 8016ba0:	2b00      	cmp	r3, #0
 8016ba2:	dc03      	bgt.n	8016bac <USBD_GetConfig+0x34>
 8016ba4:	e015      	b.n	8016bd2 <USBD_GetConfig+0x5a>
 8016ba6:	2b03      	cmp	r3, #3
 8016ba8:	d00b      	beq.n	8016bc2 <USBD_GetConfig+0x4a>
 8016baa:	e012      	b.n	8016bd2 <USBD_GetConfig+0x5a>
 8016bac:	687b      	ldr	r3, [r7, #4]
 8016bae:	2200      	movs	r2, #0
 8016bb0:	609a      	str	r2, [r3, #8]
 8016bb2:	687b      	ldr	r3, [r7, #4]
 8016bb4:	3308      	adds	r3, #8
 8016bb6:	2201      	movs	r2, #1
 8016bb8:	4619      	mov	r1, r3
 8016bba:	6878      	ldr	r0, [r7, #4]
 8016bbc:	f000 f93c 	bl	8016e38 <USBD_CtlSendData>
 8016bc0:	e00c      	b.n	8016bdc <USBD_GetConfig+0x64>
 8016bc2:	687b      	ldr	r3, [r7, #4]
 8016bc4:	3304      	adds	r3, #4
 8016bc6:	2201      	movs	r2, #1
 8016bc8:	4619      	mov	r1, r3
 8016bca:	6878      	ldr	r0, [r7, #4]
 8016bcc:	f000 f934 	bl	8016e38 <USBD_CtlSendData>
 8016bd0:	e004      	b.n	8016bdc <USBD_GetConfig+0x64>
 8016bd2:	6839      	ldr	r1, [r7, #0]
 8016bd4:	6878      	ldr	r0, [r7, #4]
 8016bd6:	f000 f8be 	bl	8016d56 <USBD_CtlError>
 8016bda:	bf00      	nop
 8016bdc:	bf00      	nop
 8016bde:	3708      	adds	r7, #8
 8016be0:	46bd      	mov	sp, r7
 8016be2:	bd80      	pop	{r7, pc}

08016be4 <USBD_GetStatus>:
 8016be4:	b580      	push	{r7, lr}
 8016be6:	b082      	sub	sp, #8
 8016be8:	af00      	add	r7, sp, #0
 8016bea:	6078      	str	r0, [r7, #4]
 8016bec:	6039      	str	r1, [r7, #0]
 8016bee:	687b      	ldr	r3, [r7, #4]
 8016bf0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016bf4:	b2db      	uxtb	r3, r3
 8016bf6:	3b01      	subs	r3, #1
 8016bf8:	2b02      	cmp	r3, #2
 8016bfa:	d81e      	bhi.n	8016c3a <USBD_GetStatus+0x56>
 8016bfc:	683b      	ldr	r3, [r7, #0]
 8016bfe:	88db      	ldrh	r3, [r3, #6]
 8016c00:	2b02      	cmp	r3, #2
 8016c02:	d004      	beq.n	8016c0e <USBD_GetStatus+0x2a>
 8016c04:	6839      	ldr	r1, [r7, #0]
 8016c06:	6878      	ldr	r0, [r7, #4]
 8016c08:	f000 f8a5 	bl	8016d56 <USBD_CtlError>
 8016c0c:	e01a      	b.n	8016c44 <USBD_GetStatus+0x60>
 8016c0e:	687b      	ldr	r3, [r7, #4]
 8016c10:	2201      	movs	r2, #1
 8016c12:	60da      	str	r2, [r3, #12]
 8016c14:	687b      	ldr	r3, [r7, #4]
 8016c16:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 8016c1a:	2b00      	cmp	r3, #0
 8016c1c:	d005      	beq.n	8016c2a <USBD_GetStatus+0x46>
 8016c1e:	687b      	ldr	r3, [r7, #4]
 8016c20:	68db      	ldr	r3, [r3, #12]
 8016c22:	f043 0202 	orr.w	r2, r3, #2
 8016c26:	687b      	ldr	r3, [r7, #4]
 8016c28:	60da      	str	r2, [r3, #12]
 8016c2a:	687b      	ldr	r3, [r7, #4]
 8016c2c:	330c      	adds	r3, #12
 8016c2e:	2202      	movs	r2, #2
 8016c30:	4619      	mov	r1, r3
 8016c32:	6878      	ldr	r0, [r7, #4]
 8016c34:	f000 f900 	bl	8016e38 <USBD_CtlSendData>
 8016c38:	e004      	b.n	8016c44 <USBD_GetStatus+0x60>
 8016c3a:	6839      	ldr	r1, [r7, #0]
 8016c3c:	6878      	ldr	r0, [r7, #4]
 8016c3e:	f000 f88a 	bl	8016d56 <USBD_CtlError>
 8016c42:	bf00      	nop
 8016c44:	bf00      	nop
 8016c46:	3708      	adds	r7, #8
 8016c48:	46bd      	mov	sp, r7
 8016c4a:	bd80      	pop	{r7, pc}

08016c4c <USBD_SetFeature>:
 8016c4c:	b580      	push	{r7, lr}
 8016c4e:	b082      	sub	sp, #8
 8016c50:	af00      	add	r7, sp, #0
 8016c52:	6078      	str	r0, [r7, #4]
 8016c54:	6039      	str	r1, [r7, #0]
 8016c56:	683b      	ldr	r3, [r7, #0]
 8016c58:	885b      	ldrh	r3, [r3, #2]
 8016c5a:	2b01      	cmp	r3, #1
 8016c5c:	d107      	bne.n	8016c6e <USBD_SetFeature+0x22>
 8016c5e:	687b      	ldr	r3, [r7, #4]
 8016c60:	2201      	movs	r2, #1
 8016c62:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8016c66:	6878      	ldr	r0, [r7, #4]
 8016c68:	f000 f940 	bl	8016eec <USBD_CtlSendStatus>
 8016c6c:	e013      	b.n	8016c96 <USBD_SetFeature+0x4a>
 8016c6e:	683b      	ldr	r3, [r7, #0]
 8016c70:	885b      	ldrh	r3, [r3, #2]
 8016c72:	2b02      	cmp	r3, #2
 8016c74:	d10b      	bne.n	8016c8e <USBD_SetFeature+0x42>
 8016c76:	683b      	ldr	r3, [r7, #0]
 8016c78:	889b      	ldrh	r3, [r3, #4]
 8016c7a:	0a1b      	lsrs	r3, r3, #8
 8016c7c:	b29b      	uxth	r3, r3
 8016c7e:	b2da      	uxtb	r2, r3
 8016c80:	687b      	ldr	r3, [r7, #4]
 8016c82:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8016c86:	6878      	ldr	r0, [r7, #4]
 8016c88:	f000 f930 	bl	8016eec <USBD_CtlSendStatus>
 8016c8c:	e003      	b.n	8016c96 <USBD_SetFeature+0x4a>
 8016c8e:	6839      	ldr	r1, [r7, #0]
 8016c90:	6878      	ldr	r0, [r7, #4]
 8016c92:	f000 f860 	bl	8016d56 <USBD_CtlError>
 8016c96:	bf00      	nop
 8016c98:	3708      	adds	r7, #8
 8016c9a:	46bd      	mov	sp, r7
 8016c9c:	bd80      	pop	{r7, pc}

08016c9e <USBD_ClrFeature>:
 8016c9e:	b580      	push	{r7, lr}
 8016ca0:	b082      	sub	sp, #8
 8016ca2:	af00      	add	r7, sp, #0
 8016ca4:	6078      	str	r0, [r7, #4]
 8016ca6:	6039      	str	r1, [r7, #0]
 8016ca8:	687b      	ldr	r3, [r7, #4]
 8016caa:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016cae:	b2db      	uxtb	r3, r3
 8016cb0:	3b01      	subs	r3, #1
 8016cb2:	2b02      	cmp	r3, #2
 8016cb4:	d80b      	bhi.n	8016cce <USBD_ClrFeature+0x30>
 8016cb6:	683b      	ldr	r3, [r7, #0]
 8016cb8:	885b      	ldrh	r3, [r3, #2]
 8016cba:	2b01      	cmp	r3, #1
 8016cbc:	d10c      	bne.n	8016cd8 <USBD_ClrFeature+0x3a>
 8016cbe:	687b      	ldr	r3, [r7, #4]
 8016cc0:	2200      	movs	r2, #0
 8016cc2:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8016cc6:	6878      	ldr	r0, [r7, #4]
 8016cc8:	f000 f910 	bl	8016eec <USBD_CtlSendStatus>
 8016ccc:	e004      	b.n	8016cd8 <USBD_ClrFeature+0x3a>
 8016cce:	6839      	ldr	r1, [r7, #0]
 8016cd0:	6878      	ldr	r0, [r7, #4]
 8016cd2:	f000 f840 	bl	8016d56 <USBD_CtlError>
 8016cd6:	e000      	b.n	8016cda <USBD_ClrFeature+0x3c>
 8016cd8:	bf00      	nop
 8016cda:	bf00      	nop
 8016cdc:	3708      	adds	r7, #8
 8016cde:	46bd      	mov	sp, r7
 8016ce0:	bd80      	pop	{r7, pc}

08016ce2 <USBD_ParseSetupRequest>:
 8016ce2:	b580      	push	{r7, lr}
 8016ce4:	b084      	sub	sp, #16
 8016ce6:	af00      	add	r7, sp, #0
 8016ce8:	6078      	str	r0, [r7, #4]
 8016cea:	6039      	str	r1, [r7, #0]
 8016cec:	683b      	ldr	r3, [r7, #0]
 8016cee:	60fb      	str	r3, [r7, #12]
 8016cf0:	68fb      	ldr	r3, [r7, #12]
 8016cf2:	781a      	ldrb	r2, [r3, #0]
 8016cf4:	687b      	ldr	r3, [r7, #4]
 8016cf6:	701a      	strb	r2, [r3, #0]
 8016cf8:	68fb      	ldr	r3, [r7, #12]
 8016cfa:	3301      	adds	r3, #1
 8016cfc:	60fb      	str	r3, [r7, #12]
 8016cfe:	68fb      	ldr	r3, [r7, #12]
 8016d00:	781a      	ldrb	r2, [r3, #0]
 8016d02:	687b      	ldr	r3, [r7, #4]
 8016d04:	705a      	strb	r2, [r3, #1]
 8016d06:	68fb      	ldr	r3, [r7, #12]
 8016d08:	3301      	adds	r3, #1
 8016d0a:	60fb      	str	r3, [r7, #12]
 8016d0c:	68f8      	ldr	r0, [r7, #12]
 8016d0e:	f7ff fa40 	bl	8016192 <SWAPBYTE>
 8016d12:	4603      	mov	r3, r0
 8016d14:	461a      	mov	r2, r3
 8016d16:	687b      	ldr	r3, [r7, #4]
 8016d18:	805a      	strh	r2, [r3, #2]
 8016d1a:	68fb      	ldr	r3, [r7, #12]
 8016d1c:	3301      	adds	r3, #1
 8016d1e:	60fb      	str	r3, [r7, #12]
 8016d20:	68fb      	ldr	r3, [r7, #12]
 8016d22:	3301      	adds	r3, #1
 8016d24:	60fb      	str	r3, [r7, #12]
 8016d26:	68f8      	ldr	r0, [r7, #12]
 8016d28:	f7ff fa33 	bl	8016192 <SWAPBYTE>
 8016d2c:	4603      	mov	r3, r0
 8016d2e:	461a      	mov	r2, r3
 8016d30:	687b      	ldr	r3, [r7, #4]
 8016d32:	809a      	strh	r2, [r3, #4]
 8016d34:	68fb      	ldr	r3, [r7, #12]
 8016d36:	3301      	adds	r3, #1
 8016d38:	60fb      	str	r3, [r7, #12]
 8016d3a:	68fb      	ldr	r3, [r7, #12]
 8016d3c:	3301      	adds	r3, #1
 8016d3e:	60fb      	str	r3, [r7, #12]
 8016d40:	68f8      	ldr	r0, [r7, #12]
 8016d42:	f7ff fa26 	bl	8016192 <SWAPBYTE>
 8016d46:	4603      	mov	r3, r0
 8016d48:	461a      	mov	r2, r3
 8016d4a:	687b      	ldr	r3, [r7, #4]
 8016d4c:	80da      	strh	r2, [r3, #6]
 8016d4e:	bf00      	nop
 8016d50:	3710      	adds	r7, #16
 8016d52:	46bd      	mov	sp, r7
 8016d54:	bd80      	pop	{r7, pc}

08016d56 <USBD_CtlError>:
 8016d56:	b580      	push	{r7, lr}
 8016d58:	b082      	sub	sp, #8
 8016d5a:	af00      	add	r7, sp, #0
 8016d5c:	6078      	str	r0, [r7, #4]
 8016d5e:	6039      	str	r1, [r7, #0]
 8016d60:	2180      	movs	r1, #128	@ 0x80
 8016d62:	6878      	ldr	r0, [r7, #4]
 8016d64:	f003 fe02 	bl	801a96c <USBD_LL_StallEP>
 8016d68:	2100      	movs	r1, #0
 8016d6a:	6878      	ldr	r0, [r7, #4]
 8016d6c:	f003 fdfe 	bl	801a96c <USBD_LL_StallEP>
 8016d70:	bf00      	nop
 8016d72:	3708      	adds	r7, #8
 8016d74:	46bd      	mov	sp, r7
 8016d76:	bd80      	pop	{r7, pc}

08016d78 <USBD_GetString>:
 8016d78:	b580      	push	{r7, lr}
 8016d7a:	b086      	sub	sp, #24
 8016d7c:	af00      	add	r7, sp, #0
 8016d7e:	60f8      	str	r0, [r7, #12]
 8016d80:	60b9      	str	r1, [r7, #8]
 8016d82:	607a      	str	r2, [r7, #4]
 8016d84:	2300      	movs	r3, #0
 8016d86:	75fb      	strb	r3, [r7, #23]
 8016d88:	68fb      	ldr	r3, [r7, #12]
 8016d8a:	2b00      	cmp	r3, #0
 8016d8c:	d036      	beq.n	8016dfc <USBD_GetString+0x84>
 8016d8e:	68fb      	ldr	r3, [r7, #12]
 8016d90:	613b      	str	r3, [r7, #16]
 8016d92:	6938      	ldr	r0, [r7, #16]
 8016d94:	f000 f836 	bl	8016e04 <USBD_GetLen>
 8016d98:	4603      	mov	r3, r0
 8016d9a:	3301      	adds	r3, #1
 8016d9c:	b29b      	uxth	r3, r3
 8016d9e:	005b      	lsls	r3, r3, #1
 8016da0:	b29a      	uxth	r2, r3
 8016da2:	687b      	ldr	r3, [r7, #4]
 8016da4:	801a      	strh	r2, [r3, #0]
 8016da6:	7dfb      	ldrb	r3, [r7, #23]
 8016da8:	68ba      	ldr	r2, [r7, #8]
 8016daa:	4413      	add	r3, r2
 8016dac:	687a      	ldr	r2, [r7, #4]
 8016dae:	7812      	ldrb	r2, [r2, #0]
 8016db0:	701a      	strb	r2, [r3, #0]
 8016db2:	7dfb      	ldrb	r3, [r7, #23]
 8016db4:	3301      	adds	r3, #1
 8016db6:	75fb      	strb	r3, [r7, #23]
 8016db8:	7dfb      	ldrb	r3, [r7, #23]
 8016dba:	68ba      	ldr	r2, [r7, #8]
 8016dbc:	4413      	add	r3, r2
 8016dbe:	2203      	movs	r2, #3
 8016dc0:	701a      	strb	r2, [r3, #0]
 8016dc2:	7dfb      	ldrb	r3, [r7, #23]
 8016dc4:	3301      	adds	r3, #1
 8016dc6:	75fb      	strb	r3, [r7, #23]
 8016dc8:	e013      	b.n	8016df2 <USBD_GetString+0x7a>
 8016dca:	7dfb      	ldrb	r3, [r7, #23]
 8016dcc:	68ba      	ldr	r2, [r7, #8]
 8016dce:	4413      	add	r3, r2
 8016dd0:	693a      	ldr	r2, [r7, #16]
 8016dd2:	7812      	ldrb	r2, [r2, #0]
 8016dd4:	701a      	strb	r2, [r3, #0]
 8016dd6:	693b      	ldr	r3, [r7, #16]
 8016dd8:	3301      	adds	r3, #1
 8016dda:	613b      	str	r3, [r7, #16]
 8016ddc:	7dfb      	ldrb	r3, [r7, #23]
 8016dde:	3301      	adds	r3, #1
 8016de0:	75fb      	strb	r3, [r7, #23]
 8016de2:	7dfb      	ldrb	r3, [r7, #23]
 8016de4:	68ba      	ldr	r2, [r7, #8]
 8016de6:	4413      	add	r3, r2
 8016de8:	2200      	movs	r2, #0
 8016dea:	701a      	strb	r2, [r3, #0]
 8016dec:	7dfb      	ldrb	r3, [r7, #23]
 8016dee:	3301      	adds	r3, #1
 8016df0:	75fb      	strb	r3, [r7, #23]
 8016df2:	693b      	ldr	r3, [r7, #16]
 8016df4:	781b      	ldrb	r3, [r3, #0]
 8016df6:	2b00      	cmp	r3, #0
 8016df8:	d1e7      	bne.n	8016dca <USBD_GetString+0x52>
 8016dfa:	e000      	b.n	8016dfe <USBD_GetString+0x86>
 8016dfc:	bf00      	nop
 8016dfe:	3718      	adds	r7, #24
 8016e00:	46bd      	mov	sp, r7
 8016e02:	bd80      	pop	{r7, pc}

08016e04 <USBD_GetLen>:
 8016e04:	b480      	push	{r7}
 8016e06:	b085      	sub	sp, #20
 8016e08:	af00      	add	r7, sp, #0
 8016e0a:	6078      	str	r0, [r7, #4]
 8016e0c:	2300      	movs	r3, #0
 8016e0e:	73fb      	strb	r3, [r7, #15]
 8016e10:	687b      	ldr	r3, [r7, #4]
 8016e12:	60bb      	str	r3, [r7, #8]
 8016e14:	e005      	b.n	8016e22 <USBD_GetLen+0x1e>
 8016e16:	7bfb      	ldrb	r3, [r7, #15]
 8016e18:	3301      	adds	r3, #1
 8016e1a:	73fb      	strb	r3, [r7, #15]
 8016e1c:	68bb      	ldr	r3, [r7, #8]
 8016e1e:	3301      	adds	r3, #1
 8016e20:	60bb      	str	r3, [r7, #8]
 8016e22:	68bb      	ldr	r3, [r7, #8]
 8016e24:	781b      	ldrb	r3, [r3, #0]
 8016e26:	2b00      	cmp	r3, #0
 8016e28:	d1f5      	bne.n	8016e16 <USBD_GetLen+0x12>
 8016e2a:	7bfb      	ldrb	r3, [r7, #15]
 8016e2c:	4618      	mov	r0, r3
 8016e2e:	3714      	adds	r7, #20
 8016e30:	46bd      	mov	sp, r7
 8016e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016e36:	4770      	bx	lr

08016e38 <USBD_CtlSendData>:
 8016e38:	b580      	push	{r7, lr}
 8016e3a:	b084      	sub	sp, #16
 8016e3c:	af00      	add	r7, sp, #0
 8016e3e:	60f8      	str	r0, [r7, #12]
 8016e40:	60b9      	str	r1, [r7, #8]
 8016e42:	607a      	str	r2, [r7, #4]
 8016e44:	68fb      	ldr	r3, [r7, #12]
 8016e46:	2202      	movs	r2, #2
 8016e48:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016e4c:	68fb      	ldr	r3, [r7, #12]
 8016e4e:	687a      	ldr	r2, [r7, #4]
 8016e50:	619a      	str	r2, [r3, #24]
 8016e52:	68fb      	ldr	r3, [r7, #12]
 8016e54:	687a      	ldr	r2, [r7, #4]
 8016e56:	61da      	str	r2, [r3, #28]
 8016e58:	687b      	ldr	r3, [r7, #4]
 8016e5a:	68ba      	ldr	r2, [r7, #8]
 8016e5c:	2100      	movs	r1, #0
 8016e5e:	68f8      	ldr	r0, [r7, #12]
 8016e60:	f003 fe0d 	bl	801aa7e <USBD_LL_Transmit>
 8016e64:	2300      	movs	r3, #0
 8016e66:	4618      	mov	r0, r3
 8016e68:	3710      	adds	r7, #16
 8016e6a:	46bd      	mov	sp, r7
 8016e6c:	bd80      	pop	{r7, pc}

08016e6e <USBD_CtlContinueSendData>:
 8016e6e:	b580      	push	{r7, lr}
 8016e70:	b084      	sub	sp, #16
 8016e72:	af00      	add	r7, sp, #0
 8016e74:	60f8      	str	r0, [r7, #12]
 8016e76:	60b9      	str	r1, [r7, #8]
 8016e78:	607a      	str	r2, [r7, #4]
 8016e7a:	687b      	ldr	r3, [r7, #4]
 8016e7c:	68ba      	ldr	r2, [r7, #8]
 8016e7e:	2100      	movs	r1, #0
 8016e80:	68f8      	ldr	r0, [r7, #12]
 8016e82:	f003 fdfc 	bl	801aa7e <USBD_LL_Transmit>
 8016e86:	2300      	movs	r3, #0
 8016e88:	4618      	mov	r0, r3
 8016e8a:	3710      	adds	r7, #16
 8016e8c:	46bd      	mov	sp, r7
 8016e8e:	bd80      	pop	{r7, pc}

08016e90 <USBD_CtlPrepareRx>:
 8016e90:	b580      	push	{r7, lr}
 8016e92:	b084      	sub	sp, #16
 8016e94:	af00      	add	r7, sp, #0
 8016e96:	60f8      	str	r0, [r7, #12]
 8016e98:	60b9      	str	r1, [r7, #8]
 8016e9a:	607a      	str	r2, [r7, #4]
 8016e9c:	68fb      	ldr	r3, [r7, #12]
 8016e9e:	2203      	movs	r2, #3
 8016ea0:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016ea4:	68fb      	ldr	r3, [r7, #12]
 8016ea6:	687a      	ldr	r2, [r7, #4]
 8016ea8:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 8016eac:	68fb      	ldr	r3, [r7, #12]
 8016eae:	687a      	ldr	r2, [r7, #4]
 8016eb0:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 8016eb4:	687b      	ldr	r3, [r7, #4]
 8016eb6:	68ba      	ldr	r2, [r7, #8]
 8016eb8:	2100      	movs	r1, #0
 8016eba:	68f8      	ldr	r0, [r7, #12]
 8016ebc:	f003 fe00 	bl	801aac0 <USBD_LL_PrepareReceive>
 8016ec0:	2300      	movs	r3, #0
 8016ec2:	4618      	mov	r0, r3
 8016ec4:	3710      	adds	r7, #16
 8016ec6:	46bd      	mov	sp, r7
 8016ec8:	bd80      	pop	{r7, pc}

08016eca <USBD_CtlContinueRx>:
 8016eca:	b580      	push	{r7, lr}
 8016ecc:	b084      	sub	sp, #16
 8016ece:	af00      	add	r7, sp, #0
 8016ed0:	60f8      	str	r0, [r7, #12]
 8016ed2:	60b9      	str	r1, [r7, #8]
 8016ed4:	607a      	str	r2, [r7, #4]
 8016ed6:	687b      	ldr	r3, [r7, #4]
 8016ed8:	68ba      	ldr	r2, [r7, #8]
 8016eda:	2100      	movs	r1, #0
 8016edc:	68f8      	ldr	r0, [r7, #12]
 8016ede:	f003 fdef 	bl	801aac0 <USBD_LL_PrepareReceive>
 8016ee2:	2300      	movs	r3, #0
 8016ee4:	4618      	mov	r0, r3
 8016ee6:	3710      	adds	r7, #16
 8016ee8:	46bd      	mov	sp, r7
 8016eea:	bd80      	pop	{r7, pc}

08016eec <USBD_CtlSendStatus>:
 8016eec:	b580      	push	{r7, lr}
 8016eee:	b082      	sub	sp, #8
 8016ef0:	af00      	add	r7, sp, #0
 8016ef2:	6078      	str	r0, [r7, #4]
 8016ef4:	687b      	ldr	r3, [r7, #4]
 8016ef6:	2204      	movs	r2, #4
 8016ef8:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016efc:	2300      	movs	r3, #0
 8016efe:	2200      	movs	r2, #0
 8016f00:	2100      	movs	r1, #0
 8016f02:	6878      	ldr	r0, [r7, #4]
 8016f04:	f003 fdbb 	bl	801aa7e <USBD_LL_Transmit>
 8016f08:	2300      	movs	r3, #0
 8016f0a:	4618      	mov	r0, r3
 8016f0c:	3708      	adds	r7, #8
 8016f0e:	46bd      	mov	sp, r7
 8016f10:	bd80      	pop	{r7, pc}

08016f12 <USBD_CtlReceiveStatus>:
 8016f12:	b580      	push	{r7, lr}
 8016f14:	b082      	sub	sp, #8
 8016f16:	af00      	add	r7, sp, #0
 8016f18:	6078      	str	r0, [r7, #4]
 8016f1a:	687b      	ldr	r3, [r7, #4]
 8016f1c:	2205      	movs	r2, #5
 8016f1e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016f22:	2300      	movs	r3, #0
 8016f24:	2200      	movs	r2, #0
 8016f26:	2100      	movs	r1, #0
 8016f28:	6878      	ldr	r0, [r7, #4]
 8016f2a:	f003 fdc9 	bl	801aac0 <USBD_LL_PrepareReceive>
 8016f2e:	2300      	movs	r3, #0
 8016f30:	4618      	mov	r0, r3
 8016f32:	3708      	adds	r7, #8
 8016f34:	46bd      	mov	sp, r7
 8016f36:	bd80      	pop	{r7, pc}

08016f38 <makeFreeRtosPriority>:
 8016f38:	b480      	push	{r7}
 8016f3a:	b085      	sub	sp, #20
 8016f3c:	af00      	add	r7, sp, #0
 8016f3e:	4603      	mov	r3, r0
 8016f40:	80fb      	strh	r3, [r7, #6]
 8016f42:	2300      	movs	r3, #0
 8016f44:	60fb      	str	r3, [r7, #12]
 8016f46:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8016f4a:	2b84      	cmp	r3, #132	@ 0x84
 8016f4c:	d005      	beq.n	8016f5a <makeFreeRtosPriority+0x22>
 8016f4e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8016f52:	68fb      	ldr	r3, [r7, #12]
 8016f54:	4413      	add	r3, r2
 8016f56:	3303      	adds	r3, #3
 8016f58:	60fb      	str	r3, [r7, #12]
 8016f5a:	68fb      	ldr	r3, [r7, #12]
 8016f5c:	4618      	mov	r0, r3
 8016f5e:	3714      	adds	r7, #20
 8016f60:	46bd      	mov	sp, r7
 8016f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016f66:	4770      	bx	lr

08016f68 <osKernelStart>:
 8016f68:	b580      	push	{r7, lr}
 8016f6a:	af00      	add	r7, sp, #0
 8016f6c:	f001 fa44 	bl	80183f8 <vTaskStartScheduler>
 8016f70:	2300      	movs	r3, #0
 8016f72:	4618      	mov	r0, r3
 8016f74:	bd80      	pop	{r7, pc}

08016f76 <osThreadCreate>:
 8016f76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f78:	b089      	sub	sp, #36	@ 0x24
 8016f7a:	af04      	add	r7, sp, #16
 8016f7c:	6078      	str	r0, [r7, #4]
 8016f7e:	6039      	str	r1, [r7, #0]
 8016f80:	687b      	ldr	r3, [r7, #4]
 8016f82:	695b      	ldr	r3, [r3, #20]
 8016f84:	2b00      	cmp	r3, #0
 8016f86:	d020      	beq.n	8016fca <osThreadCreate+0x54>
 8016f88:	687b      	ldr	r3, [r7, #4]
 8016f8a:	699b      	ldr	r3, [r3, #24]
 8016f8c:	2b00      	cmp	r3, #0
 8016f8e:	d01c      	beq.n	8016fca <osThreadCreate+0x54>
 8016f90:	687b      	ldr	r3, [r7, #4]
 8016f92:	685c      	ldr	r4, [r3, #4]
 8016f94:	687b      	ldr	r3, [r7, #4]
 8016f96:	681d      	ldr	r5, [r3, #0]
 8016f98:	687b      	ldr	r3, [r7, #4]
 8016f9a:	691e      	ldr	r6, [r3, #16]
 8016f9c:	687b      	ldr	r3, [r7, #4]
 8016f9e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016fa2:	4618      	mov	r0, r3
 8016fa4:	f7ff ffc8 	bl	8016f38 <makeFreeRtosPriority>
 8016fa8:	4601      	mov	r1, r0
 8016faa:	687b      	ldr	r3, [r7, #4]
 8016fac:	695b      	ldr	r3, [r3, #20]
 8016fae:	687a      	ldr	r2, [r7, #4]
 8016fb0:	6992      	ldr	r2, [r2, #24]
 8016fb2:	9202      	str	r2, [sp, #8]
 8016fb4:	9301      	str	r3, [sp, #4]
 8016fb6:	9100      	str	r1, [sp, #0]
 8016fb8:	683b      	ldr	r3, [r7, #0]
 8016fba:	4632      	mov	r2, r6
 8016fbc:	4629      	mov	r1, r5
 8016fbe:	4620      	mov	r0, r4
 8016fc0:	f000 ff7a 	bl	8017eb8 <xTaskCreateStatic>
 8016fc4:	4603      	mov	r3, r0
 8016fc6:	60fb      	str	r3, [r7, #12]
 8016fc8:	e01c      	b.n	8017004 <osThreadCreate+0x8e>
 8016fca:	687b      	ldr	r3, [r7, #4]
 8016fcc:	685c      	ldr	r4, [r3, #4]
 8016fce:	687b      	ldr	r3, [r7, #4]
 8016fd0:	681d      	ldr	r5, [r3, #0]
 8016fd2:	687b      	ldr	r3, [r7, #4]
 8016fd4:	691b      	ldr	r3, [r3, #16]
 8016fd6:	b29e      	uxth	r6, r3
 8016fd8:	687b      	ldr	r3, [r7, #4]
 8016fda:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016fde:	4618      	mov	r0, r3
 8016fe0:	f7ff ffaa 	bl	8016f38 <makeFreeRtosPriority>
 8016fe4:	4602      	mov	r2, r0
 8016fe6:	f107 030c 	add.w	r3, r7, #12
 8016fea:	9301      	str	r3, [sp, #4]
 8016fec:	9200      	str	r2, [sp, #0]
 8016fee:	683b      	ldr	r3, [r7, #0]
 8016ff0:	4632      	mov	r2, r6
 8016ff2:	4629      	mov	r1, r5
 8016ff4:	4620      	mov	r0, r4
 8016ff6:	f000 ffc1 	bl	8017f7c <xTaskCreate>
 8016ffa:	4603      	mov	r3, r0
 8016ffc:	2b01      	cmp	r3, #1
 8016ffe:	d001      	beq.n	8017004 <osThreadCreate+0x8e>
 8017000:	2300      	movs	r3, #0
 8017002:	e000      	b.n	8017006 <osThreadCreate+0x90>
 8017004:	68fb      	ldr	r3, [r7, #12]
 8017006:	4618      	mov	r0, r3
 8017008:	3714      	adds	r7, #20
 801700a:	46bd      	mov	sp, r7
 801700c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801700e <osDelay>:
 801700e:	b580      	push	{r7, lr}
 8017010:	b084      	sub	sp, #16
 8017012:	af00      	add	r7, sp, #0
 8017014:	6078      	str	r0, [r7, #4]
 8017016:	687b      	ldr	r3, [r7, #4]
 8017018:	60fb      	str	r3, [r7, #12]
 801701a:	68fb      	ldr	r3, [r7, #12]
 801701c:	2b00      	cmp	r3, #0
 801701e:	d001      	beq.n	8017024 <osDelay+0x16>
 8017020:	68fb      	ldr	r3, [r7, #12]
 8017022:	e000      	b.n	8017026 <osDelay+0x18>
 8017024:	2301      	movs	r3, #1
 8017026:	4618      	mov	r0, r3
 8017028:	f001 f9b0 	bl	801838c <vTaskDelay>
 801702c:	2300      	movs	r3, #0
 801702e:	4618      	mov	r0, r3
 8017030:	3710      	adds	r7, #16
 8017032:	46bd      	mov	sp, r7
 8017034:	bd80      	pop	{r7, pc}

08017036 <xEventGroupCreate>:
 8017036:	b580      	push	{r7, lr}
 8017038:	b082      	sub	sp, #8
 801703a:	af00      	add	r7, sp, #0
 801703c:	2020      	movs	r0, #32
 801703e:	f002 fe8d 	bl	8019d5c <pvPortMalloc>
 8017042:	6078      	str	r0, [r7, #4]
 8017044:	687b      	ldr	r3, [r7, #4]
 8017046:	2b00      	cmp	r3, #0
 8017048:	d00a      	beq.n	8017060 <xEventGroupCreate+0x2a>
 801704a:	687b      	ldr	r3, [r7, #4]
 801704c:	2200      	movs	r2, #0
 801704e:	601a      	str	r2, [r3, #0]
 8017050:	687b      	ldr	r3, [r7, #4]
 8017052:	3304      	adds	r3, #4
 8017054:	4618      	mov	r0, r3
 8017056:	f000 f8b5 	bl	80171c4 <vListInitialise>
 801705a:	687b      	ldr	r3, [r7, #4]
 801705c:	2200      	movs	r2, #0
 801705e:	771a      	strb	r2, [r3, #28]
 8017060:	687b      	ldr	r3, [r7, #4]
 8017062:	4618      	mov	r0, r3
 8017064:	3708      	adds	r7, #8
 8017066:	46bd      	mov	sp, r7
 8017068:	bd80      	pop	{r7, pc}

0801706a <xEventGroupSetBits>:
 801706a:	b580      	push	{r7, lr}
 801706c:	b08e      	sub	sp, #56	@ 0x38
 801706e:	af00      	add	r7, sp, #0
 8017070:	6078      	str	r0, [r7, #4]
 8017072:	6039      	str	r1, [r7, #0]
 8017074:	2300      	movs	r3, #0
 8017076:	633b      	str	r3, [r7, #48]	@ 0x30
 8017078:	687b      	ldr	r3, [r7, #4]
 801707a:	62bb      	str	r3, [r7, #40]	@ 0x28
 801707c:	2300      	movs	r3, #0
 801707e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017080:	687b      	ldr	r3, [r7, #4]
 8017082:	2b00      	cmp	r3, #0
 8017084:	d10b      	bne.n	801709e <xEventGroupSetBits+0x34>
 8017086:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801708a:	f383 8811 	msr	BASEPRI, r3
 801708e:	f3bf 8f6f 	isb	sy
 8017092:	f3bf 8f4f 	dsb	sy
 8017096:	613b      	str	r3, [r7, #16]
 8017098:	bf00      	nop
 801709a:	bf00      	nop
 801709c:	e7fd      	b.n	801709a <xEventGroupSetBits+0x30>
 801709e:	683b      	ldr	r3, [r7, #0]
 80170a0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80170a4:	d30b      	bcc.n	80170be <xEventGroupSetBits+0x54>
 80170a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80170aa:	f383 8811 	msr	BASEPRI, r3
 80170ae:	f3bf 8f6f 	isb	sy
 80170b2:	f3bf 8f4f 	dsb	sy
 80170b6:	60fb      	str	r3, [r7, #12]
 80170b8:	bf00      	nop
 80170ba:	bf00      	nop
 80170bc:	e7fd      	b.n	80170ba <xEventGroupSetBits+0x50>
 80170be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80170c0:	3304      	adds	r3, #4
 80170c2:	627b      	str	r3, [r7, #36]	@ 0x24
 80170c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80170c6:	3308      	adds	r3, #8
 80170c8:	623b      	str	r3, [r7, #32]
 80170ca:	f001 fa07 	bl	80184dc <vTaskSuspendAll>
 80170ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80170d0:	68db      	ldr	r3, [r3, #12]
 80170d2:	637b      	str	r3, [r7, #52]	@ 0x34
 80170d4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80170d6:	681a      	ldr	r2, [r3, #0]
 80170d8:	683b      	ldr	r3, [r7, #0]
 80170da:	431a      	orrs	r2, r3
 80170dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80170de:	601a      	str	r2, [r3, #0]
 80170e0:	e03c      	b.n	801715c <xEventGroupSetBits+0xf2>
 80170e2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80170e4:	685b      	ldr	r3, [r3, #4]
 80170e6:	61fb      	str	r3, [r7, #28]
 80170e8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80170ea:	681b      	ldr	r3, [r3, #0]
 80170ec:	61bb      	str	r3, [r7, #24]
 80170ee:	2300      	movs	r3, #0
 80170f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80170f2:	69bb      	ldr	r3, [r7, #24]
 80170f4:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 80170f8:	617b      	str	r3, [r7, #20]
 80170fa:	69bb      	ldr	r3, [r7, #24]
 80170fc:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8017100:	61bb      	str	r3, [r7, #24]
 8017102:	697b      	ldr	r3, [r7, #20]
 8017104:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8017108:	2b00      	cmp	r3, #0
 801710a:	d108      	bne.n	801711e <xEventGroupSetBits+0xb4>
 801710c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801710e:	681a      	ldr	r2, [r3, #0]
 8017110:	69bb      	ldr	r3, [r7, #24]
 8017112:	4013      	ands	r3, r2
 8017114:	2b00      	cmp	r3, #0
 8017116:	d00b      	beq.n	8017130 <xEventGroupSetBits+0xc6>
 8017118:	2301      	movs	r3, #1
 801711a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801711c:	e008      	b.n	8017130 <xEventGroupSetBits+0xc6>
 801711e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017120:	681a      	ldr	r2, [r3, #0]
 8017122:	69bb      	ldr	r3, [r7, #24]
 8017124:	4013      	ands	r3, r2
 8017126:	69ba      	ldr	r2, [r7, #24]
 8017128:	429a      	cmp	r2, r3
 801712a:	d101      	bne.n	8017130 <xEventGroupSetBits+0xc6>
 801712c:	2301      	movs	r3, #1
 801712e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017130:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017132:	2b00      	cmp	r3, #0
 8017134:	d010      	beq.n	8017158 <xEventGroupSetBits+0xee>
 8017136:	697b      	ldr	r3, [r7, #20]
 8017138:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 801713c:	2b00      	cmp	r3, #0
 801713e:	d003      	beq.n	8017148 <xEventGroupSetBits+0xde>
 8017140:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8017142:	69bb      	ldr	r3, [r7, #24]
 8017144:	4313      	orrs	r3, r2
 8017146:	633b      	str	r3, [r7, #48]	@ 0x30
 8017148:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801714a:	681b      	ldr	r3, [r3, #0]
 801714c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8017150:	4619      	mov	r1, r3
 8017152:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8017154:	f001 fc7e 	bl	8018a54 <vTaskRemoveFromUnorderedEventList>
 8017158:	69fb      	ldr	r3, [r7, #28]
 801715a:	637b      	str	r3, [r7, #52]	@ 0x34
 801715c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 801715e:	6a3b      	ldr	r3, [r7, #32]
 8017160:	429a      	cmp	r2, r3
 8017162:	d1be      	bne.n	80170e2 <xEventGroupSetBits+0x78>
 8017164:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017166:	681a      	ldr	r2, [r3, #0]
 8017168:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801716a:	43db      	mvns	r3, r3
 801716c:	401a      	ands	r2, r3
 801716e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017170:	601a      	str	r2, [r3, #0]
 8017172:	f001 f9c1 	bl	80184f8 <xTaskResumeAll>
 8017176:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017178:	681b      	ldr	r3, [r3, #0]
 801717a:	4618      	mov	r0, r3
 801717c:	3738      	adds	r7, #56	@ 0x38
 801717e:	46bd      	mov	sp, r7
 8017180:	bd80      	pop	{r7, pc}

08017182 <vEventGroupSetBitsCallback>:
 8017182:	b580      	push	{r7, lr}
 8017184:	b082      	sub	sp, #8
 8017186:	af00      	add	r7, sp, #0
 8017188:	6078      	str	r0, [r7, #4]
 801718a:	6039      	str	r1, [r7, #0]
 801718c:	6839      	ldr	r1, [r7, #0]
 801718e:	6878      	ldr	r0, [r7, #4]
 8017190:	f7ff ff6b 	bl	801706a <xEventGroupSetBits>
 8017194:	bf00      	nop
 8017196:	3708      	adds	r7, #8
 8017198:	46bd      	mov	sp, r7
 801719a:	bd80      	pop	{r7, pc}

0801719c <xEventGroupSetBitsFromISR>:
 801719c:	b580      	push	{r7, lr}
 801719e:	b086      	sub	sp, #24
 80171a0:	af00      	add	r7, sp, #0
 80171a2:	60f8      	str	r0, [r7, #12]
 80171a4:	60b9      	str	r1, [r7, #8]
 80171a6:	607a      	str	r2, [r7, #4]
 80171a8:	687b      	ldr	r3, [r7, #4]
 80171aa:	68ba      	ldr	r2, [r7, #8]
 80171ac:	68f9      	ldr	r1, [r7, #12]
 80171ae:	4804      	ldr	r0, [pc, #16]	@ (80171c0 <xEventGroupSetBitsFromISR+0x24>)
 80171b0:	f002 fb5e 	bl	8019870 <xTimerPendFunctionCallFromISR>
 80171b4:	6178      	str	r0, [r7, #20]
 80171b6:	697b      	ldr	r3, [r7, #20]
 80171b8:	4618      	mov	r0, r3
 80171ba:	3718      	adds	r7, #24
 80171bc:	46bd      	mov	sp, r7
 80171be:	bd80      	pop	{r7, pc}
 80171c0:	08017183 	.word	0x08017183

080171c4 <vListInitialise>:
 80171c4:	b480      	push	{r7}
 80171c6:	b083      	sub	sp, #12
 80171c8:	af00      	add	r7, sp, #0
 80171ca:	6078      	str	r0, [r7, #4]
 80171cc:	687b      	ldr	r3, [r7, #4]
 80171ce:	f103 0208 	add.w	r2, r3, #8
 80171d2:	687b      	ldr	r3, [r7, #4]
 80171d4:	605a      	str	r2, [r3, #4]
 80171d6:	687b      	ldr	r3, [r7, #4]
 80171d8:	f04f 32ff 	mov.w	r2, #4294967295
 80171dc:	609a      	str	r2, [r3, #8]
 80171de:	687b      	ldr	r3, [r7, #4]
 80171e0:	f103 0208 	add.w	r2, r3, #8
 80171e4:	687b      	ldr	r3, [r7, #4]
 80171e6:	60da      	str	r2, [r3, #12]
 80171e8:	687b      	ldr	r3, [r7, #4]
 80171ea:	f103 0208 	add.w	r2, r3, #8
 80171ee:	687b      	ldr	r3, [r7, #4]
 80171f0:	611a      	str	r2, [r3, #16]
 80171f2:	687b      	ldr	r3, [r7, #4]
 80171f4:	2200      	movs	r2, #0
 80171f6:	601a      	str	r2, [r3, #0]
 80171f8:	bf00      	nop
 80171fa:	370c      	adds	r7, #12
 80171fc:	46bd      	mov	sp, r7
 80171fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017202:	4770      	bx	lr

08017204 <vListInitialiseItem>:
 8017204:	b480      	push	{r7}
 8017206:	b083      	sub	sp, #12
 8017208:	af00      	add	r7, sp, #0
 801720a:	6078      	str	r0, [r7, #4]
 801720c:	687b      	ldr	r3, [r7, #4]
 801720e:	2200      	movs	r2, #0
 8017210:	611a      	str	r2, [r3, #16]
 8017212:	bf00      	nop
 8017214:	370c      	adds	r7, #12
 8017216:	46bd      	mov	sp, r7
 8017218:	f85d 7b04 	ldr.w	r7, [sp], #4
 801721c:	4770      	bx	lr

0801721e <vListInsertEnd>:
 801721e:	b480      	push	{r7}
 8017220:	b085      	sub	sp, #20
 8017222:	af00      	add	r7, sp, #0
 8017224:	6078      	str	r0, [r7, #4]
 8017226:	6039      	str	r1, [r7, #0]
 8017228:	687b      	ldr	r3, [r7, #4]
 801722a:	685b      	ldr	r3, [r3, #4]
 801722c:	60fb      	str	r3, [r7, #12]
 801722e:	683b      	ldr	r3, [r7, #0]
 8017230:	68fa      	ldr	r2, [r7, #12]
 8017232:	605a      	str	r2, [r3, #4]
 8017234:	68fb      	ldr	r3, [r7, #12]
 8017236:	689a      	ldr	r2, [r3, #8]
 8017238:	683b      	ldr	r3, [r7, #0]
 801723a:	609a      	str	r2, [r3, #8]
 801723c:	68fb      	ldr	r3, [r7, #12]
 801723e:	689b      	ldr	r3, [r3, #8]
 8017240:	683a      	ldr	r2, [r7, #0]
 8017242:	605a      	str	r2, [r3, #4]
 8017244:	68fb      	ldr	r3, [r7, #12]
 8017246:	683a      	ldr	r2, [r7, #0]
 8017248:	609a      	str	r2, [r3, #8]
 801724a:	683b      	ldr	r3, [r7, #0]
 801724c:	687a      	ldr	r2, [r7, #4]
 801724e:	611a      	str	r2, [r3, #16]
 8017250:	687b      	ldr	r3, [r7, #4]
 8017252:	681b      	ldr	r3, [r3, #0]
 8017254:	1c5a      	adds	r2, r3, #1
 8017256:	687b      	ldr	r3, [r7, #4]
 8017258:	601a      	str	r2, [r3, #0]
 801725a:	bf00      	nop
 801725c:	3714      	adds	r7, #20
 801725e:	46bd      	mov	sp, r7
 8017260:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017264:	4770      	bx	lr

08017266 <vListInsert>:
 8017266:	b480      	push	{r7}
 8017268:	b085      	sub	sp, #20
 801726a:	af00      	add	r7, sp, #0
 801726c:	6078      	str	r0, [r7, #4]
 801726e:	6039      	str	r1, [r7, #0]
 8017270:	683b      	ldr	r3, [r7, #0]
 8017272:	681b      	ldr	r3, [r3, #0]
 8017274:	60bb      	str	r3, [r7, #8]
 8017276:	68bb      	ldr	r3, [r7, #8]
 8017278:	f1b3 3fff 	cmp.w	r3, #4294967295
 801727c:	d103      	bne.n	8017286 <vListInsert+0x20>
 801727e:	687b      	ldr	r3, [r7, #4]
 8017280:	691b      	ldr	r3, [r3, #16]
 8017282:	60fb      	str	r3, [r7, #12]
 8017284:	e00c      	b.n	80172a0 <vListInsert+0x3a>
 8017286:	687b      	ldr	r3, [r7, #4]
 8017288:	3308      	adds	r3, #8
 801728a:	60fb      	str	r3, [r7, #12]
 801728c:	e002      	b.n	8017294 <vListInsert+0x2e>
 801728e:	68fb      	ldr	r3, [r7, #12]
 8017290:	685b      	ldr	r3, [r3, #4]
 8017292:	60fb      	str	r3, [r7, #12]
 8017294:	68fb      	ldr	r3, [r7, #12]
 8017296:	685b      	ldr	r3, [r3, #4]
 8017298:	681b      	ldr	r3, [r3, #0]
 801729a:	68ba      	ldr	r2, [r7, #8]
 801729c:	429a      	cmp	r2, r3
 801729e:	d2f6      	bcs.n	801728e <vListInsert+0x28>
 80172a0:	68fb      	ldr	r3, [r7, #12]
 80172a2:	685a      	ldr	r2, [r3, #4]
 80172a4:	683b      	ldr	r3, [r7, #0]
 80172a6:	605a      	str	r2, [r3, #4]
 80172a8:	683b      	ldr	r3, [r7, #0]
 80172aa:	685b      	ldr	r3, [r3, #4]
 80172ac:	683a      	ldr	r2, [r7, #0]
 80172ae:	609a      	str	r2, [r3, #8]
 80172b0:	683b      	ldr	r3, [r7, #0]
 80172b2:	68fa      	ldr	r2, [r7, #12]
 80172b4:	609a      	str	r2, [r3, #8]
 80172b6:	68fb      	ldr	r3, [r7, #12]
 80172b8:	683a      	ldr	r2, [r7, #0]
 80172ba:	605a      	str	r2, [r3, #4]
 80172bc:	683b      	ldr	r3, [r7, #0]
 80172be:	687a      	ldr	r2, [r7, #4]
 80172c0:	611a      	str	r2, [r3, #16]
 80172c2:	687b      	ldr	r3, [r7, #4]
 80172c4:	681b      	ldr	r3, [r3, #0]
 80172c6:	1c5a      	adds	r2, r3, #1
 80172c8:	687b      	ldr	r3, [r7, #4]
 80172ca:	601a      	str	r2, [r3, #0]
 80172cc:	bf00      	nop
 80172ce:	3714      	adds	r7, #20
 80172d0:	46bd      	mov	sp, r7
 80172d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80172d6:	4770      	bx	lr

080172d8 <uxListRemove>:
 80172d8:	b480      	push	{r7}
 80172da:	b085      	sub	sp, #20
 80172dc:	af00      	add	r7, sp, #0
 80172de:	6078      	str	r0, [r7, #4]
 80172e0:	687b      	ldr	r3, [r7, #4]
 80172e2:	691b      	ldr	r3, [r3, #16]
 80172e4:	60fb      	str	r3, [r7, #12]
 80172e6:	687b      	ldr	r3, [r7, #4]
 80172e8:	685b      	ldr	r3, [r3, #4]
 80172ea:	687a      	ldr	r2, [r7, #4]
 80172ec:	6892      	ldr	r2, [r2, #8]
 80172ee:	609a      	str	r2, [r3, #8]
 80172f0:	687b      	ldr	r3, [r7, #4]
 80172f2:	689b      	ldr	r3, [r3, #8]
 80172f4:	687a      	ldr	r2, [r7, #4]
 80172f6:	6852      	ldr	r2, [r2, #4]
 80172f8:	605a      	str	r2, [r3, #4]
 80172fa:	68fb      	ldr	r3, [r7, #12]
 80172fc:	685b      	ldr	r3, [r3, #4]
 80172fe:	687a      	ldr	r2, [r7, #4]
 8017300:	429a      	cmp	r2, r3
 8017302:	d103      	bne.n	801730c <uxListRemove+0x34>
 8017304:	687b      	ldr	r3, [r7, #4]
 8017306:	689a      	ldr	r2, [r3, #8]
 8017308:	68fb      	ldr	r3, [r7, #12]
 801730a:	605a      	str	r2, [r3, #4]
 801730c:	687b      	ldr	r3, [r7, #4]
 801730e:	2200      	movs	r2, #0
 8017310:	611a      	str	r2, [r3, #16]
 8017312:	68fb      	ldr	r3, [r7, #12]
 8017314:	681b      	ldr	r3, [r3, #0]
 8017316:	1e5a      	subs	r2, r3, #1
 8017318:	68fb      	ldr	r3, [r7, #12]
 801731a:	601a      	str	r2, [r3, #0]
 801731c:	68fb      	ldr	r3, [r7, #12]
 801731e:	681b      	ldr	r3, [r3, #0]
 8017320:	4618      	mov	r0, r3
 8017322:	3714      	adds	r7, #20
 8017324:	46bd      	mov	sp, r7
 8017326:	f85d 7b04 	ldr.w	r7, [sp], #4
 801732a:	4770      	bx	lr

0801732c <xQueueGenericReset>:
 801732c:	b580      	push	{r7, lr}
 801732e:	b084      	sub	sp, #16
 8017330:	af00      	add	r7, sp, #0
 8017332:	6078      	str	r0, [r7, #4]
 8017334:	6039      	str	r1, [r7, #0]
 8017336:	687b      	ldr	r3, [r7, #4]
 8017338:	60fb      	str	r3, [r7, #12]
 801733a:	68fb      	ldr	r3, [r7, #12]
 801733c:	2b00      	cmp	r3, #0
 801733e:	d10b      	bne.n	8017358 <xQueueGenericReset+0x2c>
 8017340:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017344:	f383 8811 	msr	BASEPRI, r3
 8017348:	f3bf 8f6f 	isb	sy
 801734c:	f3bf 8f4f 	dsb	sy
 8017350:	60bb      	str	r3, [r7, #8]
 8017352:	bf00      	nop
 8017354:	bf00      	nop
 8017356:	e7fd      	b.n	8017354 <xQueueGenericReset+0x28>
 8017358:	f002 fbde 	bl	8019b18 <vPortEnterCritical>
 801735c:	68fb      	ldr	r3, [r7, #12]
 801735e:	681a      	ldr	r2, [r3, #0]
 8017360:	68fb      	ldr	r3, [r7, #12]
 8017362:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017364:	68f9      	ldr	r1, [r7, #12]
 8017366:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8017368:	fb01 f303 	mul.w	r3, r1, r3
 801736c:	441a      	add	r2, r3
 801736e:	68fb      	ldr	r3, [r7, #12]
 8017370:	609a      	str	r2, [r3, #8]
 8017372:	68fb      	ldr	r3, [r7, #12]
 8017374:	2200      	movs	r2, #0
 8017376:	639a      	str	r2, [r3, #56]	@ 0x38
 8017378:	68fb      	ldr	r3, [r7, #12]
 801737a:	681a      	ldr	r2, [r3, #0]
 801737c:	68fb      	ldr	r3, [r7, #12]
 801737e:	605a      	str	r2, [r3, #4]
 8017380:	68fb      	ldr	r3, [r7, #12]
 8017382:	681a      	ldr	r2, [r3, #0]
 8017384:	68fb      	ldr	r3, [r7, #12]
 8017386:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017388:	3b01      	subs	r3, #1
 801738a:	68f9      	ldr	r1, [r7, #12]
 801738c:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 801738e:	fb01 f303 	mul.w	r3, r1, r3
 8017392:	441a      	add	r2, r3
 8017394:	68fb      	ldr	r3, [r7, #12]
 8017396:	60da      	str	r2, [r3, #12]
 8017398:	68fb      	ldr	r3, [r7, #12]
 801739a:	22ff      	movs	r2, #255	@ 0xff
 801739c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80173a0:	68fb      	ldr	r3, [r7, #12]
 80173a2:	22ff      	movs	r2, #255	@ 0xff
 80173a4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80173a8:	683b      	ldr	r3, [r7, #0]
 80173aa:	2b00      	cmp	r3, #0
 80173ac:	d114      	bne.n	80173d8 <xQueueGenericReset+0xac>
 80173ae:	68fb      	ldr	r3, [r7, #12]
 80173b0:	691b      	ldr	r3, [r3, #16]
 80173b2:	2b00      	cmp	r3, #0
 80173b4:	d01a      	beq.n	80173ec <xQueueGenericReset+0xc0>
 80173b6:	68fb      	ldr	r3, [r7, #12]
 80173b8:	3310      	adds	r3, #16
 80173ba:	4618      	mov	r0, r3
 80173bc:	f001 fae6 	bl	801898c <xTaskRemoveFromEventList>
 80173c0:	4603      	mov	r3, r0
 80173c2:	2b00      	cmp	r3, #0
 80173c4:	d012      	beq.n	80173ec <xQueueGenericReset+0xc0>
 80173c6:	4b0d      	ldr	r3, [pc, #52]	@ (80173fc <xQueueGenericReset+0xd0>)
 80173c8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80173cc:	601a      	str	r2, [r3, #0]
 80173ce:	f3bf 8f4f 	dsb	sy
 80173d2:	f3bf 8f6f 	isb	sy
 80173d6:	e009      	b.n	80173ec <xQueueGenericReset+0xc0>
 80173d8:	68fb      	ldr	r3, [r7, #12]
 80173da:	3310      	adds	r3, #16
 80173dc:	4618      	mov	r0, r3
 80173de:	f7ff fef1 	bl	80171c4 <vListInitialise>
 80173e2:	68fb      	ldr	r3, [r7, #12]
 80173e4:	3324      	adds	r3, #36	@ 0x24
 80173e6:	4618      	mov	r0, r3
 80173e8:	f7ff feec 	bl	80171c4 <vListInitialise>
 80173ec:	f002 fbc6 	bl	8019b7c <vPortExitCritical>
 80173f0:	2301      	movs	r3, #1
 80173f2:	4618      	mov	r0, r3
 80173f4:	3710      	adds	r7, #16
 80173f6:	46bd      	mov	sp, r7
 80173f8:	bd80      	pop	{r7, pc}
 80173fa:	bf00      	nop
 80173fc:	e000ed04 	.word	0xe000ed04

08017400 <xQueueGenericCreateStatic>:
 8017400:	b580      	push	{r7, lr}
 8017402:	b08e      	sub	sp, #56	@ 0x38
 8017404:	af02      	add	r7, sp, #8
 8017406:	60f8      	str	r0, [r7, #12]
 8017408:	60b9      	str	r1, [r7, #8]
 801740a:	607a      	str	r2, [r7, #4]
 801740c:	603b      	str	r3, [r7, #0]
 801740e:	68fb      	ldr	r3, [r7, #12]
 8017410:	2b00      	cmp	r3, #0
 8017412:	d10b      	bne.n	801742c <xQueueGenericCreateStatic+0x2c>
 8017414:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017418:	f383 8811 	msr	BASEPRI, r3
 801741c:	f3bf 8f6f 	isb	sy
 8017420:	f3bf 8f4f 	dsb	sy
 8017424:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017426:	bf00      	nop
 8017428:	bf00      	nop
 801742a:	e7fd      	b.n	8017428 <xQueueGenericCreateStatic+0x28>
 801742c:	683b      	ldr	r3, [r7, #0]
 801742e:	2b00      	cmp	r3, #0
 8017430:	d10b      	bne.n	801744a <xQueueGenericCreateStatic+0x4a>
 8017432:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017436:	f383 8811 	msr	BASEPRI, r3
 801743a:	f3bf 8f6f 	isb	sy
 801743e:	f3bf 8f4f 	dsb	sy
 8017442:	627b      	str	r3, [r7, #36]	@ 0x24
 8017444:	bf00      	nop
 8017446:	bf00      	nop
 8017448:	e7fd      	b.n	8017446 <xQueueGenericCreateStatic+0x46>
 801744a:	687b      	ldr	r3, [r7, #4]
 801744c:	2b00      	cmp	r3, #0
 801744e:	d002      	beq.n	8017456 <xQueueGenericCreateStatic+0x56>
 8017450:	68bb      	ldr	r3, [r7, #8]
 8017452:	2b00      	cmp	r3, #0
 8017454:	d001      	beq.n	801745a <xQueueGenericCreateStatic+0x5a>
 8017456:	2301      	movs	r3, #1
 8017458:	e000      	b.n	801745c <xQueueGenericCreateStatic+0x5c>
 801745a:	2300      	movs	r3, #0
 801745c:	2b00      	cmp	r3, #0
 801745e:	d10b      	bne.n	8017478 <xQueueGenericCreateStatic+0x78>
 8017460:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017464:	f383 8811 	msr	BASEPRI, r3
 8017468:	f3bf 8f6f 	isb	sy
 801746c:	f3bf 8f4f 	dsb	sy
 8017470:	623b      	str	r3, [r7, #32]
 8017472:	bf00      	nop
 8017474:	bf00      	nop
 8017476:	e7fd      	b.n	8017474 <xQueueGenericCreateStatic+0x74>
 8017478:	687b      	ldr	r3, [r7, #4]
 801747a:	2b00      	cmp	r3, #0
 801747c:	d102      	bne.n	8017484 <xQueueGenericCreateStatic+0x84>
 801747e:	68bb      	ldr	r3, [r7, #8]
 8017480:	2b00      	cmp	r3, #0
 8017482:	d101      	bne.n	8017488 <xQueueGenericCreateStatic+0x88>
 8017484:	2301      	movs	r3, #1
 8017486:	e000      	b.n	801748a <xQueueGenericCreateStatic+0x8a>
 8017488:	2300      	movs	r3, #0
 801748a:	2b00      	cmp	r3, #0
 801748c:	d10b      	bne.n	80174a6 <xQueueGenericCreateStatic+0xa6>
 801748e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017492:	f383 8811 	msr	BASEPRI, r3
 8017496:	f3bf 8f6f 	isb	sy
 801749a:	f3bf 8f4f 	dsb	sy
 801749e:	61fb      	str	r3, [r7, #28]
 80174a0:	bf00      	nop
 80174a2:	bf00      	nop
 80174a4:	e7fd      	b.n	80174a2 <xQueueGenericCreateStatic+0xa2>
 80174a6:	2350      	movs	r3, #80	@ 0x50
 80174a8:	617b      	str	r3, [r7, #20]
 80174aa:	697b      	ldr	r3, [r7, #20]
 80174ac:	2b50      	cmp	r3, #80	@ 0x50
 80174ae:	d00b      	beq.n	80174c8 <xQueueGenericCreateStatic+0xc8>
 80174b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80174b4:	f383 8811 	msr	BASEPRI, r3
 80174b8:	f3bf 8f6f 	isb	sy
 80174bc:	f3bf 8f4f 	dsb	sy
 80174c0:	61bb      	str	r3, [r7, #24]
 80174c2:	bf00      	nop
 80174c4:	bf00      	nop
 80174c6:	e7fd      	b.n	80174c4 <xQueueGenericCreateStatic+0xc4>
 80174c8:	697b      	ldr	r3, [r7, #20]
 80174ca:	683b      	ldr	r3, [r7, #0]
 80174cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80174ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80174d0:	2b00      	cmp	r3, #0
 80174d2:	d00d      	beq.n	80174f0 <xQueueGenericCreateStatic+0xf0>
 80174d4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80174d6:	2201      	movs	r2, #1
 80174d8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80174dc:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 80174e0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80174e2:	9300      	str	r3, [sp, #0]
 80174e4:	4613      	mov	r3, r2
 80174e6:	687a      	ldr	r2, [r7, #4]
 80174e8:	68b9      	ldr	r1, [r7, #8]
 80174ea:	68f8      	ldr	r0, [r7, #12]
 80174ec:	f000 f840 	bl	8017570 <prvInitialiseNewQueue>
 80174f0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80174f2:	4618      	mov	r0, r3
 80174f4:	3730      	adds	r7, #48	@ 0x30
 80174f6:	46bd      	mov	sp, r7
 80174f8:	bd80      	pop	{r7, pc}

080174fa <xQueueGenericCreate>:
 80174fa:	b580      	push	{r7, lr}
 80174fc:	b08a      	sub	sp, #40	@ 0x28
 80174fe:	af02      	add	r7, sp, #8
 8017500:	60f8      	str	r0, [r7, #12]
 8017502:	60b9      	str	r1, [r7, #8]
 8017504:	4613      	mov	r3, r2
 8017506:	71fb      	strb	r3, [r7, #7]
 8017508:	68fb      	ldr	r3, [r7, #12]
 801750a:	2b00      	cmp	r3, #0
 801750c:	d10b      	bne.n	8017526 <xQueueGenericCreate+0x2c>
 801750e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017512:	f383 8811 	msr	BASEPRI, r3
 8017516:	f3bf 8f6f 	isb	sy
 801751a:	f3bf 8f4f 	dsb	sy
 801751e:	613b      	str	r3, [r7, #16]
 8017520:	bf00      	nop
 8017522:	bf00      	nop
 8017524:	e7fd      	b.n	8017522 <xQueueGenericCreate+0x28>
 8017526:	68fb      	ldr	r3, [r7, #12]
 8017528:	68ba      	ldr	r2, [r7, #8]
 801752a:	fb02 f303 	mul.w	r3, r2, r3
 801752e:	61fb      	str	r3, [r7, #28]
 8017530:	69fb      	ldr	r3, [r7, #28]
 8017532:	3350      	adds	r3, #80	@ 0x50
 8017534:	4618      	mov	r0, r3
 8017536:	f002 fc11 	bl	8019d5c <pvPortMalloc>
 801753a:	61b8      	str	r0, [r7, #24]
 801753c:	69bb      	ldr	r3, [r7, #24]
 801753e:	2b00      	cmp	r3, #0
 8017540:	d011      	beq.n	8017566 <xQueueGenericCreate+0x6c>
 8017542:	69bb      	ldr	r3, [r7, #24]
 8017544:	617b      	str	r3, [r7, #20]
 8017546:	697b      	ldr	r3, [r7, #20]
 8017548:	3350      	adds	r3, #80	@ 0x50
 801754a:	617b      	str	r3, [r7, #20]
 801754c:	69bb      	ldr	r3, [r7, #24]
 801754e:	2200      	movs	r2, #0
 8017550:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8017554:	79fa      	ldrb	r2, [r7, #7]
 8017556:	69bb      	ldr	r3, [r7, #24]
 8017558:	9300      	str	r3, [sp, #0]
 801755a:	4613      	mov	r3, r2
 801755c:	697a      	ldr	r2, [r7, #20]
 801755e:	68b9      	ldr	r1, [r7, #8]
 8017560:	68f8      	ldr	r0, [r7, #12]
 8017562:	f000 f805 	bl	8017570 <prvInitialiseNewQueue>
 8017566:	69bb      	ldr	r3, [r7, #24]
 8017568:	4618      	mov	r0, r3
 801756a:	3720      	adds	r7, #32
 801756c:	46bd      	mov	sp, r7
 801756e:	bd80      	pop	{r7, pc}

08017570 <prvInitialiseNewQueue>:
 8017570:	b580      	push	{r7, lr}
 8017572:	b084      	sub	sp, #16
 8017574:	af00      	add	r7, sp, #0
 8017576:	60f8      	str	r0, [r7, #12]
 8017578:	60b9      	str	r1, [r7, #8]
 801757a:	607a      	str	r2, [r7, #4]
 801757c:	70fb      	strb	r3, [r7, #3]
 801757e:	68bb      	ldr	r3, [r7, #8]
 8017580:	2b00      	cmp	r3, #0
 8017582:	d103      	bne.n	801758c <prvInitialiseNewQueue+0x1c>
 8017584:	69bb      	ldr	r3, [r7, #24]
 8017586:	69ba      	ldr	r2, [r7, #24]
 8017588:	601a      	str	r2, [r3, #0]
 801758a:	e002      	b.n	8017592 <prvInitialiseNewQueue+0x22>
 801758c:	69bb      	ldr	r3, [r7, #24]
 801758e:	687a      	ldr	r2, [r7, #4]
 8017590:	601a      	str	r2, [r3, #0]
 8017592:	69bb      	ldr	r3, [r7, #24]
 8017594:	68fa      	ldr	r2, [r7, #12]
 8017596:	63da      	str	r2, [r3, #60]	@ 0x3c
 8017598:	69bb      	ldr	r3, [r7, #24]
 801759a:	68ba      	ldr	r2, [r7, #8]
 801759c:	641a      	str	r2, [r3, #64]	@ 0x40
 801759e:	2101      	movs	r1, #1
 80175a0:	69b8      	ldr	r0, [r7, #24]
 80175a2:	f7ff fec3 	bl	801732c <xQueueGenericReset>
 80175a6:	69bb      	ldr	r3, [r7, #24]
 80175a8:	78fa      	ldrb	r2, [r7, #3]
 80175aa:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 80175ae:	bf00      	nop
 80175b0:	3710      	adds	r7, #16
 80175b2:	46bd      	mov	sp, r7
 80175b4:	bd80      	pop	{r7, pc}
	...

080175b8 <xQueueGenericSend>:
 80175b8:	b580      	push	{r7, lr}
 80175ba:	b08e      	sub	sp, #56	@ 0x38
 80175bc:	af00      	add	r7, sp, #0
 80175be:	60f8      	str	r0, [r7, #12]
 80175c0:	60b9      	str	r1, [r7, #8]
 80175c2:	607a      	str	r2, [r7, #4]
 80175c4:	603b      	str	r3, [r7, #0]
 80175c6:	2300      	movs	r3, #0
 80175c8:	637b      	str	r3, [r7, #52]	@ 0x34
 80175ca:	68fb      	ldr	r3, [r7, #12]
 80175cc:	633b      	str	r3, [r7, #48]	@ 0x30
 80175ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80175d0:	2b00      	cmp	r3, #0
 80175d2:	d10b      	bne.n	80175ec <xQueueGenericSend+0x34>
 80175d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80175d8:	f383 8811 	msr	BASEPRI, r3
 80175dc:	f3bf 8f6f 	isb	sy
 80175e0:	f3bf 8f4f 	dsb	sy
 80175e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80175e6:	bf00      	nop
 80175e8:	bf00      	nop
 80175ea:	e7fd      	b.n	80175e8 <xQueueGenericSend+0x30>
 80175ec:	68bb      	ldr	r3, [r7, #8]
 80175ee:	2b00      	cmp	r3, #0
 80175f0:	d103      	bne.n	80175fa <xQueueGenericSend+0x42>
 80175f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80175f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80175f6:	2b00      	cmp	r3, #0
 80175f8:	d101      	bne.n	80175fe <xQueueGenericSend+0x46>
 80175fa:	2301      	movs	r3, #1
 80175fc:	e000      	b.n	8017600 <xQueueGenericSend+0x48>
 80175fe:	2300      	movs	r3, #0
 8017600:	2b00      	cmp	r3, #0
 8017602:	d10b      	bne.n	801761c <xQueueGenericSend+0x64>
 8017604:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017608:	f383 8811 	msr	BASEPRI, r3
 801760c:	f3bf 8f6f 	isb	sy
 8017610:	f3bf 8f4f 	dsb	sy
 8017614:	627b      	str	r3, [r7, #36]	@ 0x24
 8017616:	bf00      	nop
 8017618:	bf00      	nop
 801761a:	e7fd      	b.n	8017618 <xQueueGenericSend+0x60>
 801761c:	683b      	ldr	r3, [r7, #0]
 801761e:	2b02      	cmp	r3, #2
 8017620:	d103      	bne.n	801762a <xQueueGenericSend+0x72>
 8017622:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017624:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017626:	2b01      	cmp	r3, #1
 8017628:	d101      	bne.n	801762e <xQueueGenericSend+0x76>
 801762a:	2301      	movs	r3, #1
 801762c:	e000      	b.n	8017630 <xQueueGenericSend+0x78>
 801762e:	2300      	movs	r3, #0
 8017630:	2b00      	cmp	r3, #0
 8017632:	d10b      	bne.n	801764c <xQueueGenericSend+0x94>
 8017634:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017638:	f383 8811 	msr	BASEPRI, r3
 801763c:	f3bf 8f6f 	isb	sy
 8017640:	f3bf 8f4f 	dsb	sy
 8017644:	623b      	str	r3, [r7, #32]
 8017646:	bf00      	nop
 8017648:	bf00      	nop
 801764a:	e7fd      	b.n	8017648 <xQueueGenericSend+0x90>
 801764c:	f001 fbc8 	bl	8018de0 <xTaskGetSchedulerState>
 8017650:	4603      	mov	r3, r0
 8017652:	2b00      	cmp	r3, #0
 8017654:	d102      	bne.n	801765c <xQueueGenericSend+0xa4>
 8017656:	687b      	ldr	r3, [r7, #4]
 8017658:	2b00      	cmp	r3, #0
 801765a:	d101      	bne.n	8017660 <xQueueGenericSend+0xa8>
 801765c:	2301      	movs	r3, #1
 801765e:	e000      	b.n	8017662 <xQueueGenericSend+0xaa>
 8017660:	2300      	movs	r3, #0
 8017662:	2b00      	cmp	r3, #0
 8017664:	d10b      	bne.n	801767e <xQueueGenericSend+0xc6>
 8017666:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801766a:	f383 8811 	msr	BASEPRI, r3
 801766e:	f3bf 8f6f 	isb	sy
 8017672:	f3bf 8f4f 	dsb	sy
 8017676:	61fb      	str	r3, [r7, #28]
 8017678:	bf00      	nop
 801767a:	bf00      	nop
 801767c:	e7fd      	b.n	801767a <xQueueGenericSend+0xc2>
 801767e:	f002 fa4b 	bl	8019b18 <vPortEnterCritical>
 8017682:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017684:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8017686:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017688:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801768a:	429a      	cmp	r2, r3
 801768c:	d302      	bcc.n	8017694 <xQueueGenericSend+0xdc>
 801768e:	683b      	ldr	r3, [r7, #0]
 8017690:	2b02      	cmp	r3, #2
 8017692:	d129      	bne.n	80176e8 <xQueueGenericSend+0x130>
 8017694:	683a      	ldr	r2, [r7, #0]
 8017696:	68b9      	ldr	r1, [r7, #8]
 8017698:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801769a:	f000 fa9f 	bl	8017bdc <prvCopyDataToQueue>
 801769e:	62f8      	str	r0, [r7, #44]	@ 0x2c
 80176a0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80176a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80176a4:	2b00      	cmp	r3, #0
 80176a6:	d010      	beq.n	80176ca <xQueueGenericSend+0x112>
 80176a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80176aa:	3324      	adds	r3, #36	@ 0x24
 80176ac:	4618      	mov	r0, r3
 80176ae:	f001 f96d 	bl	801898c <xTaskRemoveFromEventList>
 80176b2:	4603      	mov	r3, r0
 80176b4:	2b00      	cmp	r3, #0
 80176b6:	d013      	beq.n	80176e0 <xQueueGenericSend+0x128>
 80176b8:	4b3f      	ldr	r3, [pc, #252]	@ (80177b8 <xQueueGenericSend+0x200>)
 80176ba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80176be:	601a      	str	r2, [r3, #0]
 80176c0:	f3bf 8f4f 	dsb	sy
 80176c4:	f3bf 8f6f 	isb	sy
 80176c8:	e00a      	b.n	80176e0 <xQueueGenericSend+0x128>
 80176ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80176cc:	2b00      	cmp	r3, #0
 80176ce:	d007      	beq.n	80176e0 <xQueueGenericSend+0x128>
 80176d0:	4b39      	ldr	r3, [pc, #228]	@ (80177b8 <xQueueGenericSend+0x200>)
 80176d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80176d6:	601a      	str	r2, [r3, #0]
 80176d8:	f3bf 8f4f 	dsb	sy
 80176dc:	f3bf 8f6f 	isb	sy
 80176e0:	f002 fa4c 	bl	8019b7c <vPortExitCritical>
 80176e4:	2301      	movs	r3, #1
 80176e6:	e063      	b.n	80177b0 <xQueueGenericSend+0x1f8>
 80176e8:	687b      	ldr	r3, [r7, #4]
 80176ea:	2b00      	cmp	r3, #0
 80176ec:	d103      	bne.n	80176f6 <xQueueGenericSend+0x13e>
 80176ee:	f002 fa45 	bl	8019b7c <vPortExitCritical>
 80176f2:	2300      	movs	r3, #0
 80176f4:	e05c      	b.n	80177b0 <xQueueGenericSend+0x1f8>
 80176f6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80176f8:	2b00      	cmp	r3, #0
 80176fa:	d106      	bne.n	801770a <xQueueGenericSend+0x152>
 80176fc:	f107 0314 	add.w	r3, r7, #20
 8017700:	4618      	mov	r0, r3
 8017702:	f001 fa0b 	bl	8018b1c <vTaskInternalSetTimeOutState>
 8017706:	2301      	movs	r3, #1
 8017708:	637b      	str	r3, [r7, #52]	@ 0x34
 801770a:	f002 fa37 	bl	8019b7c <vPortExitCritical>
 801770e:	f000 fee5 	bl	80184dc <vTaskSuspendAll>
 8017712:	f002 fa01 	bl	8019b18 <vPortEnterCritical>
 8017716:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017718:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 801771c:	b25b      	sxtb	r3, r3
 801771e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017722:	d103      	bne.n	801772c <xQueueGenericSend+0x174>
 8017724:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017726:	2200      	movs	r2, #0
 8017728:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801772c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801772e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017732:	b25b      	sxtb	r3, r3
 8017734:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017738:	d103      	bne.n	8017742 <xQueueGenericSend+0x18a>
 801773a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801773c:	2200      	movs	r2, #0
 801773e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017742:	f002 fa1b 	bl	8019b7c <vPortExitCritical>
 8017746:	1d3a      	adds	r2, r7, #4
 8017748:	f107 0314 	add.w	r3, r7, #20
 801774c:	4611      	mov	r1, r2
 801774e:	4618      	mov	r0, r3
 8017750:	f001 f9fa 	bl	8018b48 <xTaskCheckForTimeOut>
 8017754:	4603      	mov	r3, r0
 8017756:	2b00      	cmp	r3, #0
 8017758:	d124      	bne.n	80177a4 <xQueueGenericSend+0x1ec>
 801775a:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801775c:	f000 fb36 	bl	8017dcc <prvIsQueueFull>
 8017760:	4603      	mov	r3, r0
 8017762:	2b00      	cmp	r3, #0
 8017764:	d018      	beq.n	8017798 <xQueueGenericSend+0x1e0>
 8017766:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017768:	3310      	adds	r3, #16
 801776a:	687a      	ldr	r2, [r7, #4]
 801776c:	4611      	mov	r1, r2
 801776e:	4618      	mov	r0, r3
 8017770:	f001 f8ba 	bl	80188e8 <vTaskPlaceOnEventList>
 8017774:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8017776:	f000 fac1 	bl	8017cfc <prvUnlockQueue>
 801777a:	f000 febd 	bl	80184f8 <xTaskResumeAll>
 801777e:	4603      	mov	r3, r0
 8017780:	2b00      	cmp	r3, #0
 8017782:	f47f af7c 	bne.w	801767e <xQueueGenericSend+0xc6>
 8017786:	4b0c      	ldr	r3, [pc, #48]	@ (80177b8 <xQueueGenericSend+0x200>)
 8017788:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801778c:	601a      	str	r2, [r3, #0]
 801778e:	f3bf 8f4f 	dsb	sy
 8017792:	f3bf 8f6f 	isb	sy
 8017796:	e772      	b.n	801767e <xQueueGenericSend+0xc6>
 8017798:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801779a:	f000 faaf 	bl	8017cfc <prvUnlockQueue>
 801779e:	f000 feab 	bl	80184f8 <xTaskResumeAll>
 80177a2:	e76c      	b.n	801767e <xQueueGenericSend+0xc6>
 80177a4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80177a6:	f000 faa9 	bl	8017cfc <prvUnlockQueue>
 80177aa:	f000 fea5 	bl	80184f8 <xTaskResumeAll>
 80177ae:	2300      	movs	r3, #0
 80177b0:	4618      	mov	r0, r3
 80177b2:	3738      	adds	r7, #56	@ 0x38
 80177b4:	46bd      	mov	sp, r7
 80177b6:	bd80      	pop	{r7, pc}
 80177b8:	e000ed04 	.word	0xe000ed04

080177bc <xQueueGenericSendFromISR>:
 80177bc:	b580      	push	{r7, lr}
 80177be:	b090      	sub	sp, #64	@ 0x40
 80177c0:	af00      	add	r7, sp, #0
 80177c2:	60f8      	str	r0, [r7, #12]
 80177c4:	60b9      	str	r1, [r7, #8]
 80177c6:	607a      	str	r2, [r7, #4]
 80177c8:	603b      	str	r3, [r7, #0]
 80177ca:	68fb      	ldr	r3, [r7, #12]
 80177cc:	63bb      	str	r3, [r7, #56]	@ 0x38
 80177ce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	d10b      	bne.n	80177ec <xQueueGenericSendFromISR+0x30>
 80177d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80177d8:	f383 8811 	msr	BASEPRI, r3
 80177dc:	f3bf 8f6f 	isb	sy
 80177e0:	f3bf 8f4f 	dsb	sy
 80177e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80177e6:	bf00      	nop
 80177e8:	bf00      	nop
 80177ea:	e7fd      	b.n	80177e8 <xQueueGenericSendFromISR+0x2c>
 80177ec:	68bb      	ldr	r3, [r7, #8]
 80177ee:	2b00      	cmp	r3, #0
 80177f0:	d103      	bne.n	80177fa <xQueueGenericSendFromISR+0x3e>
 80177f2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80177f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80177f6:	2b00      	cmp	r3, #0
 80177f8:	d101      	bne.n	80177fe <xQueueGenericSendFromISR+0x42>
 80177fa:	2301      	movs	r3, #1
 80177fc:	e000      	b.n	8017800 <xQueueGenericSendFromISR+0x44>
 80177fe:	2300      	movs	r3, #0
 8017800:	2b00      	cmp	r3, #0
 8017802:	d10b      	bne.n	801781c <xQueueGenericSendFromISR+0x60>
 8017804:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017808:	f383 8811 	msr	BASEPRI, r3
 801780c:	f3bf 8f6f 	isb	sy
 8017810:	f3bf 8f4f 	dsb	sy
 8017814:	627b      	str	r3, [r7, #36]	@ 0x24
 8017816:	bf00      	nop
 8017818:	bf00      	nop
 801781a:	e7fd      	b.n	8017818 <xQueueGenericSendFromISR+0x5c>
 801781c:	683b      	ldr	r3, [r7, #0]
 801781e:	2b02      	cmp	r3, #2
 8017820:	d103      	bne.n	801782a <xQueueGenericSendFromISR+0x6e>
 8017822:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017824:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017826:	2b01      	cmp	r3, #1
 8017828:	d101      	bne.n	801782e <xQueueGenericSendFromISR+0x72>
 801782a:	2301      	movs	r3, #1
 801782c:	e000      	b.n	8017830 <xQueueGenericSendFromISR+0x74>
 801782e:	2300      	movs	r3, #0
 8017830:	2b00      	cmp	r3, #0
 8017832:	d10b      	bne.n	801784c <xQueueGenericSendFromISR+0x90>
 8017834:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017838:	f383 8811 	msr	BASEPRI, r3
 801783c:	f3bf 8f6f 	isb	sy
 8017840:	f3bf 8f4f 	dsb	sy
 8017844:	623b      	str	r3, [r7, #32]
 8017846:	bf00      	nop
 8017848:	bf00      	nop
 801784a:	e7fd      	b.n	8017848 <xQueueGenericSendFromISR+0x8c>
 801784c:	f002 fa44 	bl	8019cd8 <vPortValidateInterruptPriority>
 8017850:	f3ef 8211 	mrs	r2, BASEPRI
 8017854:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017858:	f383 8811 	msr	BASEPRI, r3
 801785c:	f3bf 8f6f 	isb	sy
 8017860:	f3bf 8f4f 	dsb	sy
 8017864:	61fa      	str	r2, [r7, #28]
 8017866:	61bb      	str	r3, [r7, #24]
 8017868:	69fb      	ldr	r3, [r7, #28]
 801786a:	637b      	str	r3, [r7, #52]	@ 0x34
 801786c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801786e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8017870:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017872:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017874:	429a      	cmp	r2, r3
 8017876:	d302      	bcc.n	801787e <xQueueGenericSendFromISR+0xc2>
 8017878:	683b      	ldr	r3, [r7, #0]
 801787a:	2b02      	cmp	r3, #2
 801787c:	d12f      	bne.n	80178de <xQueueGenericSendFromISR+0x122>
 801787e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017880:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017884:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8017888:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801788a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801788c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801788e:	683a      	ldr	r2, [r7, #0]
 8017890:	68b9      	ldr	r1, [r7, #8]
 8017892:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 8017894:	f000 f9a2 	bl	8017bdc <prvCopyDataToQueue>
 8017898:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 801789c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80178a0:	d112      	bne.n	80178c8 <xQueueGenericSendFromISR+0x10c>
 80178a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80178a6:	2b00      	cmp	r3, #0
 80178a8:	d016      	beq.n	80178d8 <xQueueGenericSendFromISR+0x11c>
 80178aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178ac:	3324      	adds	r3, #36	@ 0x24
 80178ae:	4618      	mov	r0, r3
 80178b0:	f001 f86c 	bl	801898c <xTaskRemoveFromEventList>
 80178b4:	4603      	mov	r3, r0
 80178b6:	2b00      	cmp	r3, #0
 80178b8:	d00e      	beq.n	80178d8 <xQueueGenericSendFromISR+0x11c>
 80178ba:	687b      	ldr	r3, [r7, #4]
 80178bc:	2b00      	cmp	r3, #0
 80178be:	d00b      	beq.n	80178d8 <xQueueGenericSendFromISR+0x11c>
 80178c0:	687b      	ldr	r3, [r7, #4]
 80178c2:	2201      	movs	r2, #1
 80178c4:	601a      	str	r2, [r3, #0]
 80178c6:	e007      	b.n	80178d8 <xQueueGenericSendFromISR+0x11c>
 80178c8:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 80178cc:	3301      	adds	r3, #1
 80178ce:	b2db      	uxtb	r3, r3
 80178d0:	b25a      	sxtb	r2, r3
 80178d2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178d4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80178d8:	2301      	movs	r3, #1
 80178da:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80178dc:	e001      	b.n	80178e2 <xQueueGenericSendFromISR+0x126>
 80178de:	2300      	movs	r3, #0
 80178e0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80178e2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80178e4:	617b      	str	r3, [r7, #20]
 80178e6:	697b      	ldr	r3, [r7, #20]
 80178e8:	f383 8811 	msr	BASEPRI, r3
 80178ec:	bf00      	nop
 80178ee:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80178f0:	4618      	mov	r0, r3
 80178f2:	3740      	adds	r7, #64	@ 0x40
 80178f4:	46bd      	mov	sp, r7
 80178f6:	bd80      	pop	{r7, pc}

080178f8 <xQueueGiveFromISR>:
 80178f8:	b580      	push	{r7, lr}
 80178fa:	b08e      	sub	sp, #56	@ 0x38
 80178fc:	af00      	add	r7, sp, #0
 80178fe:	6078      	str	r0, [r7, #4]
 8017900:	6039      	str	r1, [r7, #0]
 8017902:	687b      	ldr	r3, [r7, #4]
 8017904:	633b      	str	r3, [r7, #48]	@ 0x30
 8017906:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017908:	2b00      	cmp	r3, #0
 801790a:	d10b      	bne.n	8017924 <xQueueGiveFromISR+0x2c>
 801790c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017910:	f383 8811 	msr	BASEPRI, r3
 8017914:	f3bf 8f6f 	isb	sy
 8017918:	f3bf 8f4f 	dsb	sy
 801791c:	623b      	str	r3, [r7, #32]
 801791e:	bf00      	nop
 8017920:	bf00      	nop
 8017922:	e7fd      	b.n	8017920 <xQueueGiveFromISR+0x28>
 8017924:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017926:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017928:	2b00      	cmp	r3, #0
 801792a:	d00b      	beq.n	8017944 <xQueueGiveFromISR+0x4c>
 801792c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017930:	f383 8811 	msr	BASEPRI, r3
 8017934:	f3bf 8f6f 	isb	sy
 8017938:	f3bf 8f4f 	dsb	sy
 801793c:	61fb      	str	r3, [r7, #28]
 801793e:	bf00      	nop
 8017940:	bf00      	nop
 8017942:	e7fd      	b.n	8017940 <xQueueGiveFromISR+0x48>
 8017944:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017946:	681b      	ldr	r3, [r3, #0]
 8017948:	2b00      	cmp	r3, #0
 801794a:	d103      	bne.n	8017954 <xQueueGiveFromISR+0x5c>
 801794c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801794e:	689b      	ldr	r3, [r3, #8]
 8017950:	2b00      	cmp	r3, #0
 8017952:	d101      	bne.n	8017958 <xQueueGiveFromISR+0x60>
 8017954:	2301      	movs	r3, #1
 8017956:	e000      	b.n	801795a <xQueueGiveFromISR+0x62>
 8017958:	2300      	movs	r3, #0
 801795a:	2b00      	cmp	r3, #0
 801795c:	d10b      	bne.n	8017976 <xQueueGiveFromISR+0x7e>
 801795e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017962:	f383 8811 	msr	BASEPRI, r3
 8017966:	f3bf 8f6f 	isb	sy
 801796a:	f3bf 8f4f 	dsb	sy
 801796e:	61bb      	str	r3, [r7, #24]
 8017970:	bf00      	nop
 8017972:	bf00      	nop
 8017974:	e7fd      	b.n	8017972 <xQueueGiveFromISR+0x7a>
 8017976:	f002 f9af 	bl	8019cd8 <vPortValidateInterruptPriority>
 801797a:	f3ef 8211 	mrs	r2, BASEPRI
 801797e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017982:	f383 8811 	msr	BASEPRI, r3
 8017986:	f3bf 8f6f 	isb	sy
 801798a:	f3bf 8f4f 	dsb	sy
 801798e:	617a      	str	r2, [r7, #20]
 8017990:	613b      	str	r3, [r7, #16]
 8017992:	697b      	ldr	r3, [r7, #20]
 8017994:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017996:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017998:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801799a:	62bb      	str	r3, [r7, #40]	@ 0x28
 801799c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801799e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80179a0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80179a2:	429a      	cmp	r2, r3
 80179a4:	d22b      	bcs.n	80179fe <xQueueGiveFromISR+0x106>
 80179a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179a8:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80179ac:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80179b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80179b2:	1c5a      	adds	r2, r3, #1
 80179b4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179b6:	639a      	str	r2, [r3, #56]	@ 0x38
 80179b8:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 80179bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80179c0:	d112      	bne.n	80179e8 <xQueueGiveFromISR+0xf0>
 80179c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80179c6:	2b00      	cmp	r3, #0
 80179c8:	d016      	beq.n	80179f8 <xQueueGiveFromISR+0x100>
 80179ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179cc:	3324      	adds	r3, #36	@ 0x24
 80179ce:	4618      	mov	r0, r3
 80179d0:	f000 ffdc 	bl	801898c <xTaskRemoveFromEventList>
 80179d4:	4603      	mov	r3, r0
 80179d6:	2b00      	cmp	r3, #0
 80179d8:	d00e      	beq.n	80179f8 <xQueueGiveFromISR+0x100>
 80179da:	683b      	ldr	r3, [r7, #0]
 80179dc:	2b00      	cmp	r3, #0
 80179de:	d00b      	beq.n	80179f8 <xQueueGiveFromISR+0x100>
 80179e0:	683b      	ldr	r3, [r7, #0]
 80179e2:	2201      	movs	r2, #1
 80179e4:	601a      	str	r2, [r3, #0]
 80179e6:	e007      	b.n	80179f8 <xQueueGiveFromISR+0x100>
 80179e8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80179ec:	3301      	adds	r3, #1
 80179ee:	b2db      	uxtb	r3, r3
 80179f0:	b25a      	sxtb	r2, r3
 80179f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179f4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80179f8:	2301      	movs	r3, #1
 80179fa:	637b      	str	r3, [r7, #52]	@ 0x34
 80179fc:	e001      	b.n	8017a02 <xQueueGiveFromISR+0x10a>
 80179fe:	2300      	movs	r3, #0
 8017a00:	637b      	str	r3, [r7, #52]	@ 0x34
 8017a02:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017a04:	60fb      	str	r3, [r7, #12]
 8017a06:	68fb      	ldr	r3, [r7, #12]
 8017a08:	f383 8811 	msr	BASEPRI, r3
 8017a0c:	bf00      	nop
 8017a0e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017a10:	4618      	mov	r0, r3
 8017a12:	3738      	adds	r7, #56	@ 0x38
 8017a14:	46bd      	mov	sp, r7
 8017a16:	bd80      	pop	{r7, pc}

08017a18 <xQueueReceive>:
 8017a18:	b580      	push	{r7, lr}
 8017a1a:	b08c      	sub	sp, #48	@ 0x30
 8017a1c:	af00      	add	r7, sp, #0
 8017a1e:	60f8      	str	r0, [r7, #12]
 8017a20:	60b9      	str	r1, [r7, #8]
 8017a22:	607a      	str	r2, [r7, #4]
 8017a24:	2300      	movs	r3, #0
 8017a26:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017a28:	68fb      	ldr	r3, [r7, #12]
 8017a2a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017a2c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017a2e:	2b00      	cmp	r3, #0
 8017a30:	d10b      	bne.n	8017a4a <xQueueReceive+0x32>
 8017a32:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017a36:	f383 8811 	msr	BASEPRI, r3
 8017a3a:	f3bf 8f6f 	isb	sy
 8017a3e:	f3bf 8f4f 	dsb	sy
 8017a42:	623b      	str	r3, [r7, #32]
 8017a44:	bf00      	nop
 8017a46:	bf00      	nop
 8017a48:	e7fd      	b.n	8017a46 <xQueueReceive+0x2e>
 8017a4a:	68bb      	ldr	r3, [r7, #8]
 8017a4c:	2b00      	cmp	r3, #0
 8017a4e:	d103      	bne.n	8017a58 <xQueueReceive+0x40>
 8017a50:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017a52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017a54:	2b00      	cmp	r3, #0
 8017a56:	d101      	bne.n	8017a5c <xQueueReceive+0x44>
 8017a58:	2301      	movs	r3, #1
 8017a5a:	e000      	b.n	8017a5e <xQueueReceive+0x46>
 8017a5c:	2300      	movs	r3, #0
 8017a5e:	2b00      	cmp	r3, #0
 8017a60:	d10b      	bne.n	8017a7a <xQueueReceive+0x62>
 8017a62:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017a66:	f383 8811 	msr	BASEPRI, r3
 8017a6a:	f3bf 8f6f 	isb	sy
 8017a6e:	f3bf 8f4f 	dsb	sy
 8017a72:	61fb      	str	r3, [r7, #28]
 8017a74:	bf00      	nop
 8017a76:	bf00      	nop
 8017a78:	e7fd      	b.n	8017a76 <xQueueReceive+0x5e>
 8017a7a:	f001 f9b1 	bl	8018de0 <xTaskGetSchedulerState>
 8017a7e:	4603      	mov	r3, r0
 8017a80:	2b00      	cmp	r3, #0
 8017a82:	d102      	bne.n	8017a8a <xQueueReceive+0x72>
 8017a84:	687b      	ldr	r3, [r7, #4]
 8017a86:	2b00      	cmp	r3, #0
 8017a88:	d101      	bne.n	8017a8e <xQueueReceive+0x76>
 8017a8a:	2301      	movs	r3, #1
 8017a8c:	e000      	b.n	8017a90 <xQueueReceive+0x78>
 8017a8e:	2300      	movs	r3, #0
 8017a90:	2b00      	cmp	r3, #0
 8017a92:	d10b      	bne.n	8017aac <xQueueReceive+0x94>
 8017a94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017a98:	f383 8811 	msr	BASEPRI, r3
 8017a9c:	f3bf 8f6f 	isb	sy
 8017aa0:	f3bf 8f4f 	dsb	sy
 8017aa4:	61bb      	str	r3, [r7, #24]
 8017aa6:	bf00      	nop
 8017aa8:	bf00      	nop
 8017aaa:	e7fd      	b.n	8017aa8 <xQueueReceive+0x90>
 8017aac:	f002 f834 	bl	8019b18 <vPortEnterCritical>
 8017ab0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017ab2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017ab4:	627b      	str	r3, [r7, #36]	@ 0x24
 8017ab6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017ab8:	2b00      	cmp	r3, #0
 8017aba:	d01f      	beq.n	8017afc <xQueueReceive+0xe4>
 8017abc:	68b9      	ldr	r1, [r7, #8]
 8017abe:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017ac0:	f000 f8f6 	bl	8017cb0 <prvCopyDataFromQueue>
 8017ac4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017ac6:	1e5a      	subs	r2, r3, #1
 8017ac8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017aca:	639a      	str	r2, [r3, #56]	@ 0x38
 8017acc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017ace:	691b      	ldr	r3, [r3, #16]
 8017ad0:	2b00      	cmp	r3, #0
 8017ad2:	d00f      	beq.n	8017af4 <xQueueReceive+0xdc>
 8017ad4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017ad6:	3310      	adds	r3, #16
 8017ad8:	4618      	mov	r0, r3
 8017ada:	f000 ff57 	bl	801898c <xTaskRemoveFromEventList>
 8017ade:	4603      	mov	r3, r0
 8017ae0:	2b00      	cmp	r3, #0
 8017ae2:	d007      	beq.n	8017af4 <xQueueReceive+0xdc>
 8017ae4:	4b3c      	ldr	r3, [pc, #240]	@ (8017bd8 <xQueueReceive+0x1c0>)
 8017ae6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017aea:	601a      	str	r2, [r3, #0]
 8017aec:	f3bf 8f4f 	dsb	sy
 8017af0:	f3bf 8f6f 	isb	sy
 8017af4:	f002 f842 	bl	8019b7c <vPortExitCritical>
 8017af8:	2301      	movs	r3, #1
 8017afa:	e069      	b.n	8017bd0 <xQueueReceive+0x1b8>
 8017afc:	687b      	ldr	r3, [r7, #4]
 8017afe:	2b00      	cmp	r3, #0
 8017b00:	d103      	bne.n	8017b0a <xQueueReceive+0xf2>
 8017b02:	f002 f83b 	bl	8019b7c <vPortExitCritical>
 8017b06:	2300      	movs	r3, #0
 8017b08:	e062      	b.n	8017bd0 <xQueueReceive+0x1b8>
 8017b0a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017b0c:	2b00      	cmp	r3, #0
 8017b0e:	d106      	bne.n	8017b1e <xQueueReceive+0x106>
 8017b10:	f107 0310 	add.w	r3, r7, #16
 8017b14:	4618      	mov	r0, r3
 8017b16:	f001 f801 	bl	8018b1c <vTaskInternalSetTimeOutState>
 8017b1a:	2301      	movs	r3, #1
 8017b1c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017b1e:	f002 f82d 	bl	8019b7c <vPortExitCritical>
 8017b22:	f000 fcdb 	bl	80184dc <vTaskSuspendAll>
 8017b26:	f001 fff7 	bl	8019b18 <vPortEnterCritical>
 8017b2a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b2c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017b30:	b25b      	sxtb	r3, r3
 8017b32:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017b36:	d103      	bne.n	8017b40 <xQueueReceive+0x128>
 8017b38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b3a:	2200      	movs	r2, #0
 8017b3c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017b40:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b42:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017b46:	b25b      	sxtb	r3, r3
 8017b48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017b4c:	d103      	bne.n	8017b56 <xQueueReceive+0x13e>
 8017b4e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b50:	2200      	movs	r2, #0
 8017b52:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017b56:	f002 f811 	bl	8019b7c <vPortExitCritical>
 8017b5a:	1d3a      	adds	r2, r7, #4
 8017b5c:	f107 0310 	add.w	r3, r7, #16
 8017b60:	4611      	mov	r1, r2
 8017b62:	4618      	mov	r0, r3
 8017b64:	f000 fff0 	bl	8018b48 <xTaskCheckForTimeOut>
 8017b68:	4603      	mov	r3, r0
 8017b6a:	2b00      	cmp	r3, #0
 8017b6c:	d123      	bne.n	8017bb6 <xQueueReceive+0x19e>
 8017b6e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017b70:	f000 f916 	bl	8017da0 <prvIsQueueEmpty>
 8017b74:	4603      	mov	r3, r0
 8017b76:	2b00      	cmp	r3, #0
 8017b78:	d017      	beq.n	8017baa <xQueueReceive+0x192>
 8017b7a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b7c:	3324      	adds	r3, #36	@ 0x24
 8017b7e:	687a      	ldr	r2, [r7, #4]
 8017b80:	4611      	mov	r1, r2
 8017b82:	4618      	mov	r0, r3
 8017b84:	f000 feb0 	bl	80188e8 <vTaskPlaceOnEventList>
 8017b88:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017b8a:	f000 f8b7 	bl	8017cfc <prvUnlockQueue>
 8017b8e:	f000 fcb3 	bl	80184f8 <xTaskResumeAll>
 8017b92:	4603      	mov	r3, r0
 8017b94:	2b00      	cmp	r3, #0
 8017b96:	d189      	bne.n	8017aac <xQueueReceive+0x94>
 8017b98:	4b0f      	ldr	r3, [pc, #60]	@ (8017bd8 <xQueueReceive+0x1c0>)
 8017b9a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017b9e:	601a      	str	r2, [r3, #0]
 8017ba0:	f3bf 8f4f 	dsb	sy
 8017ba4:	f3bf 8f6f 	isb	sy
 8017ba8:	e780      	b.n	8017aac <xQueueReceive+0x94>
 8017baa:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017bac:	f000 f8a6 	bl	8017cfc <prvUnlockQueue>
 8017bb0:	f000 fca2 	bl	80184f8 <xTaskResumeAll>
 8017bb4:	e77a      	b.n	8017aac <xQueueReceive+0x94>
 8017bb6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017bb8:	f000 f8a0 	bl	8017cfc <prvUnlockQueue>
 8017bbc:	f000 fc9c 	bl	80184f8 <xTaskResumeAll>
 8017bc0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017bc2:	f000 f8ed 	bl	8017da0 <prvIsQueueEmpty>
 8017bc6:	4603      	mov	r3, r0
 8017bc8:	2b00      	cmp	r3, #0
 8017bca:	f43f af6f 	beq.w	8017aac <xQueueReceive+0x94>
 8017bce:	2300      	movs	r3, #0
 8017bd0:	4618      	mov	r0, r3
 8017bd2:	3730      	adds	r7, #48	@ 0x30
 8017bd4:	46bd      	mov	sp, r7
 8017bd6:	bd80      	pop	{r7, pc}
 8017bd8:	e000ed04 	.word	0xe000ed04

08017bdc <prvCopyDataToQueue>:
 8017bdc:	b580      	push	{r7, lr}
 8017bde:	b086      	sub	sp, #24
 8017be0:	af00      	add	r7, sp, #0
 8017be2:	60f8      	str	r0, [r7, #12]
 8017be4:	60b9      	str	r1, [r7, #8]
 8017be6:	607a      	str	r2, [r7, #4]
 8017be8:	2300      	movs	r3, #0
 8017bea:	617b      	str	r3, [r7, #20]
 8017bec:	68fb      	ldr	r3, [r7, #12]
 8017bee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017bf0:	613b      	str	r3, [r7, #16]
 8017bf2:	68fb      	ldr	r3, [r7, #12]
 8017bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017bf6:	2b00      	cmp	r3, #0
 8017bf8:	d10d      	bne.n	8017c16 <prvCopyDataToQueue+0x3a>
 8017bfa:	68fb      	ldr	r3, [r7, #12]
 8017bfc:	681b      	ldr	r3, [r3, #0]
 8017bfe:	2b00      	cmp	r3, #0
 8017c00:	d14d      	bne.n	8017c9e <prvCopyDataToQueue+0xc2>
 8017c02:	68fb      	ldr	r3, [r7, #12]
 8017c04:	689b      	ldr	r3, [r3, #8]
 8017c06:	4618      	mov	r0, r3
 8017c08:	f001 f908 	bl	8018e1c <xTaskPriorityDisinherit>
 8017c0c:	6178      	str	r0, [r7, #20]
 8017c0e:	68fb      	ldr	r3, [r7, #12]
 8017c10:	2200      	movs	r2, #0
 8017c12:	609a      	str	r2, [r3, #8]
 8017c14:	e043      	b.n	8017c9e <prvCopyDataToQueue+0xc2>
 8017c16:	687b      	ldr	r3, [r7, #4]
 8017c18:	2b00      	cmp	r3, #0
 8017c1a:	d119      	bne.n	8017c50 <prvCopyDataToQueue+0x74>
 8017c1c:	68fb      	ldr	r3, [r7, #12]
 8017c1e:	6858      	ldr	r0, [r3, #4]
 8017c20:	68fb      	ldr	r3, [r7, #12]
 8017c22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c24:	461a      	mov	r2, r3
 8017c26:	68b9      	ldr	r1, [r7, #8]
 8017c28:	f003 f9a4 	bl	801af74 <memcpy>
 8017c2c:	68fb      	ldr	r3, [r7, #12]
 8017c2e:	685a      	ldr	r2, [r3, #4]
 8017c30:	68fb      	ldr	r3, [r7, #12]
 8017c32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c34:	441a      	add	r2, r3
 8017c36:	68fb      	ldr	r3, [r7, #12]
 8017c38:	605a      	str	r2, [r3, #4]
 8017c3a:	68fb      	ldr	r3, [r7, #12]
 8017c3c:	685a      	ldr	r2, [r3, #4]
 8017c3e:	68fb      	ldr	r3, [r7, #12]
 8017c40:	689b      	ldr	r3, [r3, #8]
 8017c42:	429a      	cmp	r2, r3
 8017c44:	d32b      	bcc.n	8017c9e <prvCopyDataToQueue+0xc2>
 8017c46:	68fb      	ldr	r3, [r7, #12]
 8017c48:	681a      	ldr	r2, [r3, #0]
 8017c4a:	68fb      	ldr	r3, [r7, #12]
 8017c4c:	605a      	str	r2, [r3, #4]
 8017c4e:	e026      	b.n	8017c9e <prvCopyDataToQueue+0xc2>
 8017c50:	68fb      	ldr	r3, [r7, #12]
 8017c52:	68d8      	ldr	r0, [r3, #12]
 8017c54:	68fb      	ldr	r3, [r7, #12]
 8017c56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c58:	461a      	mov	r2, r3
 8017c5a:	68b9      	ldr	r1, [r7, #8]
 8017c5c:	f003 f98a 	bl	801af74 <memcpy>
 8017c60:	68fb      	ldr	r3, [r7, #12]
 8017c62:	68da      	ldr	r2, [r3, #12]
 8017c64:	68fb      	ldr	r3, [r7, #12]
 8017c66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c68:	425b      	negs	r3, r3
 8017c6a:	441a      	add	r2, r3
 8017c6c:	68fb      	ldr	r3, [r7, #12]
 8017c6e:	60da      	str	r2, [r3, #12]
 8017c70:	68fb      	ldr	r3, [r7, #12]
 8017c72:	68da      	ldr	r2, [r3, #12]
 8017c74:	68fb      	ldr	r3, [r7, #12]
 8017c76:	681b      	ldr	r3, [r3, #0]
 8017c78:	429a      	cmp	r2, r3
 8017c7a:	d207      	bcs.n	8017c8c <prvCopyDataToQueue+0xb0>
 8017c7c:	68fb      	ldr	r3, [r7, #12]
 8017c7e:	689a      	ldr	r2, [r3, #8]
 8017c80:	68fb      	ldr	r3, [r7, #12]
 8017c82:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c84:	425b      	negs	r3, r3
 8017c86:	441a      	add	r2, r3
 8017c88:	68fb      	ldr	r3, [r7, #12]
 8017c8a:	60da      	str	r2, [r3, #12]
 8017c8c:	687b      	ldr	r3, [r7, #4]
 8017c8e:	2b02      	cmp	r3, #2
 8017c90:	d105      	bne.n	8017c9e <prvCopyDataToQueue+0xc2>
 8017c92:	693b      	ldr	r3, [r7, #16]
 8017c94:	2b00      	cmp	r3, #0
 8017c96:	d002      	beq.n	8017c9e <prvCopyDataToQueue+0xc2>
 8017c98:	693b      	ldr	r3, [r7, #16]
 8017c9a:	3b01      	subs	r3, #1
 8017c9c:	613b      	str	r3, [r7, #16]
 8017c9e:	693b      	ldr	r3, [r7, #16]
 8017ca0:	1c5a      	adds	r2, r3, #1
 8017ca2:	68fb      	ldr	r3, [r7, #12]
 8017ca4:	639a      	str	r2, [r3, #56]	@ 0x38
 8017ca6:	697b      	ldr	r3, [r7, #20]
 8017ca8:	4618      	mov	r0, r3
 8017caa:	3718      	adds	r7, #24
 8017cac:	46bd      	mov	sp, r7
 8017cae:	bd80      	pop	{r7, pc}

08017cb0 <prvCopyDataFromQueue>:
 8017cb0:	b580      	push	{r7, lr}
 8017cb2:	b082      	sub	sp, #8
 8017cb4:	af00      	add	r7, sp, #0
 8017cb6:	6078      	str	r0, [r7, #4]
 8017cb8:	6039      	str	r1, [r7, #0]
 8017cba:	687b      	ldr	r3, [r7, #4]
 8017cbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017cbe:	2b00      	cmp	r3, #0
 8017cc0:	d018      	beq.n	8017cf4 <prvCopyDataFromQueue+0x44>
 8017cc2:	687b      	ldr	r3, [r7, #4]
 8017cc4:	68da      	ldr	r2, [r3, #12]
 8017cc6:	687b      	ldr	r3, [r7, #4]
 8017cc8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017cca:	441a      	add	r2, r3
 8017ccc:	687b      	ldr	r3, [r7, #4]
 8017cce:	60da      	str	r2, [r3, #12]
 8017cd0:	687b      	ldr	r3, [r7, #4]
 8017cd2:	68da      	ldr	r2, [r3, #12]
 8017cd4:	687b      	ldr	r3, [r7, #4]
 8017cd6:	689b      	ldr	r3, [r3, #8]
 8017cd8:	429a      	cmp	r2, r3
 8017cda:	d303      	bcc.n	8017ce4 <prvCopyDataFromQueue+0x34>
 8017cdc:	687b      	ldr	r3, [r7, #4]
 8017cde:	681a      	ldr	r2, [r3, #0]
 8017ce0:	687b      	ldr	r3, [r7, #4]
 8017ce2:	60da      	str	r2, [r3, #12]
 8017ce4:	687b      	ldr	r3, [r7, #4]
 8017ce6:	68d9      	ldr	r1, [r3, #12]
 8017ce8:	687b      	ldr	r3, [r7, #4]
 8017cea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017cec:	461a      	mov	r2, r3
 8017cee:	6838      	ldr	r0, [r7, #0]
 8017cf0:	f003 f940 	bl	801af74 <memcpy>
 8017cf4:	bf00      	nop
 8017cf6:	3708      	adds	r7, #8
 8017cf8:	46bd      	mov	sp, r7
 8017cfa:	bd80      	pop	{r7, pc}

08017cfc <prvUnlockQueue>:
 8017cfc:	b580      	push	{r7, lr}
 8017cfe:	b084      	sub	sp, #16
 8017d00:	af00      	add	r7, sp, #0
 8017d02:	6078      	str	r0, [r7, #4]
 8017d04:	f001 ff08 	bl	8019b18 <vPortEnterCritical>
 8017d08:	687b      	ldr	r3, [r7, #4]
 8017d0a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017d0e:	73fb      	strb	r3, [r7, #15]
 8017d10:	e011      	b.n	8017d36 <prvUnlockQueue+0x3a>
 8017d12:	687b      	ldr	r3, [r7, #4]
 8017d14:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017d16:	2b00      	cmp	r3, #0
 8017d18:	d012      	beq.n	8017d40 <prvUnlockQueue+0x44>
 8017d1a:	687b      	ldr	r3, [r7, #4]
 8017d1c:	3324      	adds	r3, #36	@ 0x24
 8017d1e:	4618      	mov	r0, r3
 8017d20:	f000 fe34 	bl	801898c <xTaskRemoveFromEventList>
 8017d24:	4603      	mov	r3, r0
 8017d26:	2b00      	cmp	r3, #0
 8017d28:	d001      	beq.n	8017d2e <prvUnlockQueue+0x32>
 8017d2a:	f000 ff71 	bl	8018c10 <vTaskMissedYield>
 8017d2e:	7bfb      	ldrb	r3, [r7, #15]
 8017d30:	3b01      	subs	r3, #1
 8017d32:	b2db      	uxtb	r3, r3
 8017d34:	73fb      	strb	r3, [r7, #15]
 8017d36:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8017d3a:	2b00      	cmp	r3, #0
 8017d3c:	dce9      	bgt.n	8017d12 <prvUnlockQueue+0x16>
 8017d3e:	e000      	b.n	8017d42 <prvUnlockQueue+0x46>
 8017d40:	bf00      	nop
 8017d42:	687b      	ldr	r3, [r7, #4]
 8017d44:	22ff      	movs	r2, #255	@ 0xff
 8017d46:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017d4a:	f001 ff17 	bl	8019b7c <vPortExitCritical>
 8017d4e:	f001 fee3 	bl	8019b18 <vPortEnterCritical>
 8017d52:	687b      	ldr	r3, [r7, #4]
 8017d54:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017d58:	73bb      	strb	r3, [r7, #14]
 8017d5a:	e011      	b.n	8017d80 <prvUnlockQueue+0x84>
 8017d5c:	687b      	ldr	r3, [r7, #4]
 8017d5e:	691b      	ldr	r3, [r3, #16]
 8017d60:	2b00      	cmp	r3, #0
 8017d62:	d012      	beq.n	8017d8a <prvUnlockQueue+0x8e>
 8017d64:	687b      	ldr	r3, [r7, #4]
 8017d66:	3310      	adds	r3, #16
 8017d68:	4618      	mov	r0, r3
 8017d6a:	f000 fe0f 	bl	801898c <xTaskRemoveFromEventList>
 8017d6e:	4603      	mov	r3, r0
 8017d70:	2b00      	cmp	r3, #0
 8017d72:	d001      	beq.n	8017d78 <prvUnlockQueue+0x7c>
 8017d74:	f000 ff4c 	bl	8018c10 <vTaskMissedYield>
 8017d78:	7bbb      	ldrb	r3, [r7, #14]
 8017d7a:	3b01      	subs	r3, #1
 8017d7c:	b2db      	uxtb	r3, r3
 8017d7e:	73bb      	strb	r3, [r7, #14]
 8017d80:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8017d84:	2b00      	cmp	r3, #0
 8017d86:	dce9      	bgt.n	8017d5c <prvUnlockQueue+0x60>
 8017d88:	e000      	b.n	8017d8c <prvUnlockQueue+0x90>
 8017d8a:	bf00      	nop
 8017d8c:	687b      	ldr	r3, [r7, #4]
 8017d8e:	22ff      	movs	r2, #255	@ 0xff
 8017d90:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017d94:	f001 fef2 	bl	8019b7c <vPortExitCritical>
 8017d98:	bf00      	nop
 8017d9a:	3710      	adds	r7, #16
 8017d9c:	46bd      	mov	sp, r7
 8017d9e:	bd80      	pop	{r7, pc}

08017da0 <prvIsQueueEmpty>:
 8017da0:	b580      	push	{r7, lr}
 8017da2:	b084      	sub	sp, #16
 8017da4:	af00      	add	r7, sp, #0
 8017da6:	6078      	str	r0, [r7, #4]
 8017da8:	f001 feb6 	bl	8019b18 <vPortEnterCritical>
 8017dac:	687b      	ldr	r3, [r7, #4]
 8017dae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017db0:	2b00      	cmp	r3, #0
 8017db2:	d102      	bne.n	8017dba <prvIsQueueEmpty+0x1a>
 8017db4:	2301      	movs	r3, #1
 8017db6:	60fb      	str	r3, [r7, #12]
 8017db8:	e001      	b.n	8017dbe <prvIsQueueEmpty+0x1e>
 8017dba:	2300      	movs	r3, #0
 8017dbc:	60fb      	str	r3, [r7, #12]
 8017dbe:	f001 fedd 	bl	8019b7c <vPortExitCritical>
 8017dc2:	68fb      	ldr	r3, [r7, #12]
 8017dc4:	4618      	mov	r0, r3
 8017dc6:	3710      	adds	r7, #16
 8017dc8:	46bd      	mov	sp, r7
 8017dca:	bd80      	pop	{r7, pc}

08017dcc <prvIsQueueFull>:
 8017dcc:	b580      	push	{r7, lr}
 8017dce:	b084      	sub	sp, #16
 8017dd0:	af00      	add	r7, sp, #0
 8017dd2:	6078      	str	r0, [r7, #4]
 8017dd4:	f001 fea0 	bl	8019b18 <vPortEnterCritical>
 8017dd8:	687b      	ldr	r3, [r7, #4]
 8017dda:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8017ddc:	687b      	ldr	r3, [r7, #4]
 8017dde:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017de0:	429a      	cmp	r2, r3
 8017de2:	d102      	bne.n	8017dea <prvIsQueueFull+0x1e>
 8017de4:	2301      	movs	r3, #1
 8017de6:	60fb      	str	r3, [r7, #12]
 8017de8:	e001      	b.n	8017dee <prvIsQueueFull+0x22>
 8017dea:	2300      	movs	r3, #0
 8017dec:	60fb      	str	r3, [r7, #12]
 8017dee:	f001 fec5 	bl	8019b7c <vPortExitCritical>
 8017df2:	68fb      	ldr	r3, [r7, #12]
 8017df4:	4618      	mov	r0, r3
 8017df6:	3710      	adds	r7, #16
 8017df8:	46bd      	mov	sp, r7
 8017dfa:	bd80      	pop	{r7, pc}

08017dfc <vQueueAddToRegistry>:
 8017dfc:	b480      	push	{r7}
 8017dfe:	b085      	sub	sp, #20
 8017e00:	af00      	add	r7, sp, #0
 8017e02:	6078      	str	r0, [r7, #4]
 8017e04:	6039      	str	r1, [r7, #0]
 8017e06:	2300      	movs	r3, #0
 8017e08:	60fb      	str	r3, [r7, #12]
 8017e0a:	e014      	b.n	8017e36 <vQueueAddToRegistry+0x3a>
 8017e0c:	4a0f      	ldr	r2, [pc, #60]	@ (8017e4c <vQueueAddToRegistry+0x50>)
 8017e0e:	68fb      	ldr	r3, [r7, #12]
 8017e10:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8017e14:	2b00      	cmp	r3, #0
 8017e16:	d10b      	bne.n	8017e30 <vQueueAddToRegistry+0x34>
 8017e18:	490c      	ldr	r1, [pc, #48]	@ (8017e4c <vQueueAddToRegistry+0x50>)
 8017e1a:	68fb      	ldr	r3, [r7, #12]
 8017e1c:	683a      	ldr	r2, [r7, #0]
 8017e1e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8017e22:	4a0a      	ldr	r2, [pc, #40]	@ (8017e4c <vQueueAddToRegistry+0x50>)
 8017e24:	68fb      	ldr	r3, [r7, #12]
 8017e26:	00db      	lsls	r3, r3, #3
 8017e28:	4413      	add	r3, r2
 8017e2a:	687a      	ldr	r2, [r7, #4]
 8017e2c:	605a      	str	r2, [r3, #4]
 8017e2e:	e006      	b.n	8017e3e <vQueueAddToRegistry+0x42>
 8017e30:	68fb      	ldr	r3, [r7, #12]
 8017e32:	3301      	adds	r3, #1
 8017e34:	60fb      	str	r3, [r7, #12]
 8017e36:	68fb      	ldr	r3, [r7, #12]
 8017e38:	2b07      	cmp	r3, #7
 8017e3a:	d9e7      	bls.n	8017e0c <vQueueAddToRegistry+0x10>
 8017e3c:	bf00      	nop
 8017e3e:	bf00      	nop
 8017e40:	3714      	adds	r7, #20
 8017e42:	46bd      	mov	sp, r7
 8017e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017e48:	4770      	bx	lr
 8017e4a:	bf00      	nop
 8017e4c:	20003ad0 	.word	0x20003ad0

08017e50 <vQueueWaitForMessageRestricted>:
 8017e50:	b580      	push	{r7, lr}
 8017e52:	b086      	sub	sp, #24
 8017e54:	af00      	add	r7, sp, #0
 8017e56:	60f8      	str	r0, [r7, #12]
 8017e58:	60b9      	str	r1, [r7, #8]
 8017e5a:	607a      	str	r2, [r7, #4]
 8017e5c:	68fb      	ldr	r3, [r7, #12]
 8017e5e:	617b      	str	r3, [r7, #20]
 8017e60:	f001 fe5a 	bl	8019b18 <vPortEnterCritical>
 8017e64:	697b      	ldr	r3, [r7, #20]
 8017e66:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017e6a:	b25b      	sxtb	r3, r3
 8017e6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017e70:	d103      	bne.n	8017e7a <vQueueWaitForMessageRestricted+0x2a>
 8017e72:	697b      	ldr	r3, [r7, #20]
 8017e74:	2200      	movs	r2, #0
 8017e76:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017e7a:	697b      	ldr	r3, [r7, #20]
 8017e7c:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017e80:	b25b      	sxtb	r3, r3
 8017e82:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017e86:	d103      	bne.n	8017e90 <vQueueWaitForMessageRestricted+0x40>
 8017e88:	697b      	ldr	r3, [r7, #20]
 8017e8a:	2200      	movs	r2, #0
 8017e8c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017e90:	f001 fe74 	bl	8019b7c <vPortExitCritical>
 8017e94:	697b      	ldr	r3, [r7, #20]
 8017e96:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017e98:	2b00      	cmp	r3, #0
 8017e9a:	d106      	bne.n	8017eaa <vQueueWaitForMessageRestricted+0x5a>
 8017e9c:	697b      	ldr	r3, [r7, #20]
 8017e9e:	3324      	adds	r3, #36	@ 0x24
 8017ea0:	687a      	ldr	r2, [r7, #4]
 8017ea2:	68b9      	ldr	r1, [r7, #8]
 8017ea4:	4618      	mov	r0, r3
 8017ea6:	f000 fd45 	bl	8018934 <vTaskPlaceOnEventListRestricted>
 8017eaa:	6978      	ldr	r0, [r7, #20]
 8017eac:	f7ff ff26 	bl	8017cfc <prvUnlockQueue>
 8017eb0:	bf00      	nop
 8017eb2:	3718      	adds	r7, #24
 8017eb4:	46bd      	mov	sp, r7
 8017eb6:	bd80      	pop	{r7, pc}

08017eb8 <xTaskCreateStatic>:
 8017eb8:	b580      	push	{r7, lr}
 8017eba:	b08e      	sub	sp, #56	@ 0x38
 8017ebc:	af04      	add	r7, sp, #16
 8017ebe:	60f8      	str	r0, [r7, #12]
 8017ec0:	60b9      	str	r1, [r7, #8]
 8017ec2:	607a      	str	r2, [r7, #4]
 8017ec4:	603b      	str	r3, [r7, #0]
 8017ec6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017ec8:	2b00      	cmp	r3, #0
 8017eca:	d10b      	bne.n	8017ee4 <xTaskCreateStatic+0x2c>
 8017ecc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017ed0:	f383 8811 	msr	BASEPRI, r3
 8017ed4:	f3bf 8f6f 	isb	sy
 8017ed8:	f3bf 8f4f 	dsb	sy
 8017edc:	623b      	str	r3, [r7, #32]
 8017ede:	bf00      	nop
 8017ee0:	bf00      	nop
 8017ee2:	e7fd      	b.n	8017ee0 <xTaskCreateStatic+0x28>
 8017ee4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017ee6:	2b00      	cmp	r3, #0
 8017ee8:	d10b      	bne.n	8017f02 <xTaskCreateStatic+0x4a>
 8017eea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017eee:	f383 8811 	msr	BASEPRI, r3
 8017ef2:	f3bf 8f6f 	isb	sy
 8017ef6:	f3bf 8f4f 	dsb	sy
 8017efa:	61fb      	str	r3, [r7, #28]
 8017efc:	bf00      	nop
 8017efe:	bf00      	nop
 8017f00:	e7fd      	b.n	8017efe <xTaskCreateStatic+0x46>
 8017f02:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8017f06:	613b      	str	r3, [r7, #16]
 8017f08:	693b      	ldr	r3, [r7, #16]
 8017f0a:	f5b3 7fc0 	cmp.w	r3, #384	@ 0x180
 8017f0e:	d00b      	beq.n	8017f28 <xTaskCreateStatic+0x70>
 8017f10:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017f14:	f383 8811 	msr	BASEPRI, r3
 8017f18:	f3bf 8f6f 	isb	sy
 8017f1c:	f3bf 8f4f 	dsb	sy
 8017f20:	61bb      	str	r3, [r7, #24]
 8017f22:	bf00      	nop
 8017f24:	bf00      	nop
 8017f26:	e7fd      	b.n	8017f24 <xTaskCreateStatic+0x6c>
 8017f28:	693b      	ldr	r3, [r7, #16]
 8017f2a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017f2c:	2b00      	cmp	r3, #0
 8017f2e:	d01e      	beq.n	8017f6e <xTaskCreateStatic+0xb6>
 8017f30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017f32:	2b00      	cmp	r3, #0
 8017f34:	d01b      	beq.n	8017f6e <xTaskCreateStatic+0xb6>
 8017f36:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017f38:	627b      	str	r3, [r7, #36]	@ 0x24
 8017f3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f3c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8017f3e:	631a      	str	r2, [r3, #48]	@ 0x30
 8017f40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f42:	2202      	movs	r2, #2
 8017f44:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 8017f48:	2300      	movs	r3, #0
 8017f4a:	9303      	str	r3, [sp, #12]
 8017f4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f4e:	9302      	str	r3, [sp, #8]
 8017f50:	f107 0314 	add.w	r3, r7, #20
 8017f54:	9301      	str	r3, [sp, #4]
 8017f56:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017f58:	9300      	str	r3, [sp, #0]
 8017f5a:	683b      	ldr	r3, [r7, #0]
 8017f5c:	687a      	ldr	r2, [r7, #4]
 8017f5e:	68b9      	ldr	r1, [r7, #8]
 8017f60:	68f8      	ldr	r0, [r7, #12]
 8017f62:	f000 f851 	bl	8018008 <prvInitialiseNewTask>
 8017f66:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8017f68:	f000 f922 	bl	80181b0 <prvAddNewTaskToReadyList>
 8017f6c:	e001      	b.n	8017f72 <xTaskCreateStatic+0xba>
 8017f6e:	2300      	movs	r3, #0
 8017f70:	617b      	str	r3, [r7, #20]
 8017f72:	697b      	ldr	r3, [r7, #20]
 8017f74:	4618      	mov	r0, r3
 8017f76:	3728      	adds	r7, #40	@ 0x28
 8017f78:	46bd      	mov	sp, r7
 8017f7a:	bd80      	pop	{r7, pc}

08017f7c <xTaskCreate>:
 8017f7c:	b580      	push	{r7, lr}
 8017f7e:	b08c      	sub	sp, #48	@ 0x30
 8017f80:	af04      	add	r7, sp, #16
 8017f82:	60f8      	str	r0, [r7, #12]
 8017f84:	60b9      	str	r1, [r7, #8]
 8017f86:	603b      	str	r3, [r7, #0]
 8017f88:	4613      	mov	r3, r2
 8017f8a:	80fb      	strh	r3, [r7, #6]
 8017f8c:	88fb      	ldrh	r3, [r7, #6]
 8017f8e:	009b      	lsls	r3, r3, #2
 8017f90:	4618      	mov	r0, r3
 8017f92:	f001 fee3 	bl	8019d5c <pvPortMalloc>
 8017f96:	6178      	str	r0, [r7, #20]
 8017f98:	697b      	ldr	r3, [r7, #20]
 8017f9a:	2b00      	cmp	r3, #0
 8017f9c:	d00f      	beq.n	8017fbe <xTaskCreate+0x42>
 8017f9e:	f44f 70c0 	mov.w	r0, #384	@ 0x180
 8017fa2:	f001 fedb 	bl	8019d5c <pvPortMalloc>
 8017fa6:	61f8      	str	r0, [r7, #28]
 8017fa8:	69fb      	ldr	r3, [r7, #28]
 8017faa:	2b00      	cmp	r3, #0
 8017fac:	d003      	beq.n	8017fb6 <xTaskCreate+0x3a>
 8017fae:	69fb      	ldr	r3, [r7, #28]
 8017fb0:	697a      	ldr	r2, [r7, #20]
 8017fb2:	631a      	str	r2, [r3, #48]	@ 0x30
 8017fb4:	e005      	b.n	8017fc2 <xTaskCreate+0x46>
 8017fb6:	6978      	ldr	r0, [r7, #20]
 8017fb8:	f001 ff9e 	bl	8019ef8 <vPortFree>
 8017fbc:	e001      	b.n	8017fc2 <xTaskCreate+0x46>
 8017fbe:	2300      	movs	r3, #0
 8017fc0:	61fb      	str	r3, [r7, #28]
 8017fc2:	69fb      	ldr	r3, [r7, #28]
 8017fc4:	2b00      	cmp	r3, #0
 8017fc6:	d017      	beq.n	8017ff8 <xTaskCreate+0x7c>
 8017fc8:	69fb      	ldr	r3, [r7, #28]
 8017fca:	2200      	movs	r2, #0
 8017fcc:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 8017fd0:	88fa      	ldrh	r2, [r7, #6]
 8017fd2:	2300      	movs	r3, #0
 8017fd4:	9303      	str	r3, [sp, #12]
 8017fd6:	69fb      	ldr	r3, [r7, #28]
 8017fd8:	9302      	str	r3, [sp, #8]
 8017fda:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017fdc:	9301      	str	r3, [sp, #4]
 8017fde:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017fe0:	9300      	str	r3, [sp, #0]
 8017fe2:	683b      	ldr	r3, [r7, #0]
 8017fe4:	68b9      	ldr	r1, [r7, #8]
 8017fe6:	68f8      	ldr	r0, [r7, #12]
 8017fe8:	f000 f80e 	bl	8018008 <prvInitialiseNewTask>
 8017fec:	69f8      	ldr	r0, [r7, #28]
 8017fee:	f000 f8df 	bl	80181b0 <prvAddNewTaskToReadyList>
 8017ff2:	2301      	movs	r3, #1
 8017ff4:	61bb      	str	r3, [r7, #24]
 8017ff6:	e002      	b.n	8017ffe <xTaskCreate+0x82>
 8017ff8:	f04f 33ff 	mov.w	r3, #4294967295
 8017ffc:	61bb      	str	r3, [r7, #24]
 8017ffe:	69bb      	ldr	r3, [r7, #24]
 8018000:	4618      	mov	r0, r3
 8018002:	3720      	adds	r7, #32
 8018004:	46bd      	mov	sp, r7
 8018006:	bd80      	pop	{r7, pc}

08018008 <prvInitialiseNewTask>:
 8018008:	b580      	push	{r7, lr}
 801800a:	b088      	sub	sp, #32
 801800c:	af00      	add	r7, sp, #0
 801800e:	60f8      	str	r0, [r7, #12]
 8018010:	60b9      	str	r1, [r7, #8]
 8018012:	607a      	str	r2, [r7, #4]
 8018014:	603b      	str	r3, [r7, #0]
 8018016:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018018:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 801801a:	687b      	ldr	r3, [r7, #4]
 801801c:	009b      	lsls	r3, r3, #2
 801801e:	461a      	mov	r2, r3
 8018020:	21a5      	movs	r1, #165	@ 0xa5
 8018022:	f002 fefe 	bl	801ae22 <memset>
 8018026:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018028:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 801802a:	687b      	ldr	r3, [r7, #4]
 801802c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8018030:	3b01      	subs	r3, #1
 8018032:	009b      	lsls	r3, r3, #2
 8018034:	4413      	add	r3, r2
 8018036:	61bb      	str	r3, [r7, #24]
 8018038:	69bb      	ldr	r3, [r7, #24]
 801803a:	f023 0307 	bic.w	r3, r3, #7
 801803e:	61bb      	str	r3, [r7, #24]
 8018040:	69bb      	ldr	r3, [r7, #24]
 8018042:	f003 0307 	and.w	r3, r3, #7
 8018046:	2b00      	cmp	r3, #0
 8018048:	d00b      	beq.n	8018062 <prvInitialiseNewTask+0x5a>
 801804a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801804e:	f383 8811 	msr	BASEPRI, r3
 8018052:	f3bf 8f6f 	isb	sy
 8018056:	f3bf 8f4f 	dsb	sy
 801805a:	617b      	str	r3, [r7, #20]
 801805c:	bf00      	nop
 801805e:	bf00      	nop
 8018060:	e7fd      	b.n	801805e <prvInitialiseNewTask+0x56>
 8018062:	68bb      	ldr	r3, [r7, #8]
 8018064:	2b00      	cmp	r3, #0
 8018066:	d01f      	beq.n	80180a8 <prvInitialiseNewTask+0xa0>
 8018068:	2300      	movs	r3, #0
 801806a:	61fb      	str	r3, [r7, #28]
 801806c:	e012      	b.n	8018094 <prvInitialiseNewTask+0x8c>
 801806e:	68ba      	ldr	r2, [r7, #8]
 8018070:	69fb      	ldr	r3, [r7, #28]
 8018072:	4413      	add	r3, r2
 8018074:	7819      	ldrb	r1, [r3, #0]
 8018076:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8018078:	69fb      	ldr	r3, [r7, #28]
 801807a:	4413      	add	r3, r2
 801807c:	3334      	adds	r3, #52	@ 0x34
 801807e:	460a      	mov	r2, r1
 8018080:	701a      	strb	r2, [r3, #0]
 8018082:	68ba      	ldr	r2, [r7, #8]
 8018084:	69fb      	ldr	r3, [r7, #28]
 8018086:	4413      	add	r3, r2
 8018088:	781b      	ldrb	r3, [r3, #0]
 801808a:	2b00      	cmp	r3, #0
 801808c:	d006      	beq.n	801809c <prvInitialiseNewTask+0x94>
 801808e:	69fb      	ldr	r3, [r7, #28]
 8018090:	3301      	adds	r3, #1
 8018092:	61fb      	str	r3, [r7, #28]
 8018094:	69fb      	ldr	r3, [r7, #28]
 8018096:	2b0f      	cmp	r3, #15
 8018098:	d9e9      	bls.n	801806e <prvInitialiseNewTask+0x66>
 801809a:	e000      	b.n	801809e <prvInitialiseNewTask+0x96>
 801809c:	bf00      	nop
 801809e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180a0:	2200      	movs	r2, #0
 80180a2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80180a6:	e003      	b.n	80180b0 <prvInitialiseNewTask+0xa8>
 80180a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180aa:	2200      	movs	r2, #0
 80180ac:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80180b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80180b2:	2b0e      	cmp	r3, #14
 80180b4:	d901      	bls.n	80180ba <prvInitialiseNewTask+0xb2>
 80180b6:	230e      	movs	r3, #14
 80180b8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80180ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180bc:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80180be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80180c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180c2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80180c4:	64da      	str	r2, [r3, #76]	@ 0x4c
 80180c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180c8:	2200      	movs	r2, #0
 80180ca:	651a      	str	r2, [r3, #80]	@ 0x50
 80180cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180ce:	3304      	adds	r3, #4
 80180d0:	4618      	mov	r0, r3
 80180d2:	f7ff f897 	bl	8017204 <vListInitialiseItem>
 80180d6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180d8:	3318      	adds	r3, #24
 80180da:	4618      	mov	r0, r3
 80180dc:	f7ff f892 	bl	8017204 <vListInitialiseItem>
 80180e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180e2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80180e4:	611a      	str	r2, [r3, #16]
 80180e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80180e8:	f1c3 020f 	rsb	r2, r3, #15
 80180ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180ee:	619a      	str	r2, [r3, #24]
 80180f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180f2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80180f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80180f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180f8:	2200      	movs	r2, #0
 80180fa:	655a      	str	r2, [r3, #84]	@ 0x54
 80180fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180fe:	2200      	movs	r2, #0
 8018100:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8018104:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018106:	2200      	movs	r2, #0
 8018108:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 801810c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801810e:	3358      	adds	r3, #88	@ 0x58
 8018110:	f44f 7290 	mov.w	r2, #288	@ 0x120
 8018114:	2100      	movs	r1, #0
 8018116:	4618      	mov	r0, r3
 8018118:	f002 fe83 	bl	801ae22 <memset>
 801811c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801811e:	4a21      	ldr	r2, [pc, #132]	@ (80181a4 <prvInitialiseNewTask+0x19c>)
 8018120:	65da      	str	r2, [r3, #92]	@ 0x5c
 8018122:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018124:	4a20      	ldr	r2, [pc, #128]	@ (80181a8 <prvInitialiseNewTask+0x1a0>)
 8018126:	661a      	str	r2, [r3, #96]	@ 0x60
 8018128:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801812a:	4a20      	ldr	r2, [pc, #128]	@ (80181ac <prvInitialiseNewTask+0x1a4>)
 801812c:	665a      	str	r2, [r3, #100]	@ 0x64
 801812e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8018130:	f04f 0201 	mov.w	r2, #1
 8018134:	f04f 0300 	mov.w	r3, #0
 8018138:	e9c1 233c 	strd	r2, r3, [r1, #240]	@ 0xf0
 801813c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801813e:	f243 320e 	movw	r2, #13070	@ 0x330e
 8018142:	f8a3 20f8 	strh.w	r2, [r3, #248]	@ 0xf8
 8018146:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018148:	f64a 32cd 	movw	r2, #43981	@ 0xabcd
 801814c:	f8a3 20fa 	strh.w	r2, [r3, #250]	@ 0xfa
 8018150:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018152:	f241 2234 	movw	r2, #4660	@ 0x1234
 8018156:	f8a3 20fc 	strh.w	r2, [r3, #252]	@ 0xfc
 801815a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801815c:	f24e 626d 	movw	r2, #58989	@ 0xe66d
 8018160:	f8a3 20fe 	strh.w	r2, [r3, #254]	@ 0xfe
 8018164:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018166:	f64d 62ec 	movw	r2, #57068	@ 0xdeec
 801816a:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 801816e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018170:	2205      	movs	r2, #5
 8018172:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8018176:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018178:	220b      	movs	r2, #11
 801817a:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
 801817e:	683a      	ldr	r2, [r7, #0]
 8018180:	68f9      	ldr	r1, [r7, #12]
 8018182:	69b8      	ldr	r0, [r7, #24]
 8018184:	f001 fb94 	bl	80198b0 <pxPortInitialiseStack>
 8018188:	4602      	mov	r2, r0
 801818a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801818c:	601a      	str	r2, [r3, #0]
 801818e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8018190:	2b00      	cmp	r3, #0
 8018192:	d002      	beq.n	801819a <prvInitialiseNewTask+0x192>
 8018194:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8018196:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8018198:	601a      	str	r2, [r3, #0]
 801819a:	bf00      	nop
 801819c:	3720      	adds	r7, #32
 801819e:	46bd      	mov	sp, r7
 80181a0:	bd80      	pop	{r7, pc}
 80181a2:	bf00      	nop
 80181a4:	2000cf78 	.word	0x2000cf78
 80181a8:	2000cfe0 	.word	0x2000cfe0
 80181ac:	2000d048 	.word	0x2000d048

080181b0 <prvAddNewTaskToReadyList>:
 80181b0:	b580      	push	{r7, lr}
 80181b2:	b082      	sub	sp, #8
 80181b4:	af00      	add	r7, sp, #0
 80181b6:	6078      	str	r0, [r7, #4]
 80181b8:	f001 fcae 	bl	8019b18 <vPortEnterCritical>
 80181bc:	4b2c      	ldr	r3, [pc, #176]	@ (8018270 <prvAddNewTaskToReadyList+0xc0>)
 80181be:	681b      	ldr	r3, [r3, #0]
 80181c0:	3301      	adds	r3, #1
 80181c2:	4a2b      	ldr	r2, [pc, #172]	@ (8018270 <prvAddNewTaskToReadyList+0xc0>)
 80181c4:	6013      	str	r3, [r2, #0]
 80181c6:	4b2b      	ldr	r3, [pc, #172]	@ (8018274 <prvAddNewTaskToReadyList+0xc4>)
 80181c8:	681b      	ldr	r3, [r3, #0]
 80181ca:	2b00      	cmp	r3, #0
 80181cc:	d109      	bne.n	80181e2 <prvAddNewTaskToReadyList+0x32>
 80181ce:	4a29      	ldr	r2, [pc, #164]	@ (8018274 <prvAddNewTaskToReadyList+0xc4>)
 80181d0:	687b      	ldr	r3, [r7, #4]
 80181d2:	6013      	str	r3, [r2, #0]
 80181d4:	4b26      	ldr	r3, [pc, #152]	@ (8018270 <prvAddNewTaskToReadyList+0xc0>)
 80181d6:	681b      	ldr	r3, [r3, #0]
 80181d8:	2b01      	cmp	r3, #1
 80181da:	d110      	bne.n	80181fe <prvAddNewTaskToReadyList+0x4e>
 80181dc:	f000 fd3c 	bl	8018c58 <prvInitialiseTaskLists>
 80181e0:	e00d      	b.n	80181fe <prvAddNewTaskToReadyList+0x4e>
 80181e2:	4b25      	ldr	r3, [pc, #148]	@ (8018278 <prvAddNewTaskToReadyList+0xc8>)
 80181e4:	681b      	ldr	r3, [r3, #0]
 80181e6:	2b00      	cmp	r3, #0
 80181e8:	d109      	bne.n	80181fe <prvAddNewTaskToReadyList+0x4e>
 80181ea:	4b22      	ldr	r3, [pc, #136]	@ (8018274 <prvAddNewTaskToReadyList+0xc4>)
 80181ec:	681b      	ldr	r3, [r3, #0]
 80181ee:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80181f0:	687b      	ldr	r3, [r7, #4]
 80181f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80181f4:	429a      	cmp	r2, r3
 80181f6:	d802      	bhi.n	80181fe <prvAddNewTaskToReadyList+0x4e>
 80181f8:	4a1e      	ldr	r2, [pc, #120]	@ (8018274 <prvAddNewTaskToReadyList+0xc4>)
 80181fa:	687b      	ldr	r3, [r7, #4]
 80181fc:	6013      	str	r3, [r2, #0]
 80181fe:	4b1f      	ldr	r3, [pc, #124]	@ (801827c <prvAddNewTaskToReadyList+0xcc>)
 8018200:	681b      	ldr	r3, [r3, #0]
 8018202:	3301      	adds	r3, #1
 8018204:	4a1d      	ldr	r2, [pc, #116]	@ (801827c <prvAddNewTaskToReadyList+0xcc>)
 8018206:	6013      	str	r3, [r2, #0]
 8018208:	4b1c      	ldr	r3, [pc, #112]	@ (801827c <prvAddNewTaskToReadyList+0xcc>)
 801820a:	681a      	ldr	r2, [r3, #0]
 801820c:	687b      	ldr	r3, [r7, #4]
 801820e:	645a      	str	r2, [r3, #68]	@ 0x44
 8018210:	687b      	ldr	r3, [r7, #4]
 8018212:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018214:	2201      	movs	r2, #1
 8018216:	409a      	lsls	r2, r3
 8018218:	4b19      	ldr	r3, [pc, #100]	@ (8018280 <prvAddNewTaskToReadyList+0xd0>)
 801821a:	681b      	ldr	r3, [r3, #0]
 801821c:	4313      	orrs	r3, r2
 801821e:	4a18      	ldr	r2, [pc, #96]	@ (8018280 <prvAddNewTaskToReadyList+0xd0>)
 8018220:	6013      	str	r3, [r2, #0]
 8018222:	687b      	ldr	r3, [r7, #4]
 8018224:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018226:	4613      	mov	r3, r2
 8018228:	009b      	lsls	r3, r3, #2
 801822a:	4413      	add	r3, r2
 801822c:	009b      	lsls	r3, r3, #2
 801822e:	4a15      	ldr	r2, [pc, #84]	@ (8018284 <prvAddNewTaskToReadyList+0xd4>)
 8018230:	441a      	add	r2, r3
 8018232:	687b      	ldr	r3, [r7, #4]
 8018234:	3304      	adds	r3, #4
 8018236:	4619      	mov	r1, r3
 8018238:	4610      	mov	r0, r2
 801823a:	f7fe fff0 	bl	801721e <vListInsertEnd>
 801823e:	f001 fc9d 	bl	8019b7c <vPortExitCritical>
 8018242:	4b0d      	ldr	r3, [pc, #52]	@ (8018278 <prvAddNewTaskToReadyList+0xc8>)
 8018244:	681b      	ldr	r3, [r3, #0]
 8018246:	2b00      	cmp	r3, #0
 8018248:	d00e      	beq.n	8018268 <prvAddNewTaskToReadyList+0xb8>
 801824a:	4b0a      	ldr	r3, [pc, #40]	@ (8018274 <prvAddNewTaskToReadyList+0xc4>)
 801824c:	681b      	ldr	r3, [r3, #0]
 801824e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018250:	687b      	ldr	r3, [r7, #4]
 8018252:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018254:	429a      	cmp	r2, r3
 8018256:	d207      	bcs.n	8018268 <prvAddNewTaskToReadyList+0xb8>
 8018258:	4b0b      	ldr	r3, [pc, #44]	@ (8018288 <prvAddNewTaskToReadyList+0xd8>)
 801825a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801825e:	601a      	str	r2, [r3, #0]
 8018260:	f3bf 8f4f 	dsb	sy
 8018264:	f3bf 8f6f 	isb	sy
 8018268:	bf00      	nop
 801826a:	3708      	adds	r7, #8
 801826c:	46bd      	mov	sp, r7
 801826e:	bd80      	pop	{r7, pc}
 8018270:	20003cb0 	.word	0x20003cb0
 8018274:	20003b10 	.word	0x20003b10
 8018278:	20003cbc 	.word	0x20003cbc
 801827c:	20003ccc 	.word	0x20003ccc
 8018280:	20003cb8 	.word	0x20003cb8
 8018284:	20003b14 	.word	0x20003b14
 8018288:	e000ed04 	.word	0xe000ed04

0801828c <vTaskDelayUntil>:
 801828c:	b580      	push	{r7, lr}
 801828e:	b08a      	sub	sp, #40	@ 0x28
 8018290:	af00      	add	r7, sp, #0
 8018292:	6078      	str	r0, [r7, #4]
 8018294:	6039      	str	r1, [r7, #0]
 8018296:	2300      	movs	r3, #0
 8018298:	627b      	str	r3, [r7, #36]	@ 0x24
 801829a:	687b      	ldr	r3, [r7, #4]
 801829c:	2b00      	cmp	r3, #0
 801829e:	d10b      	bne.n	80182b8 <vTaskDelayUntil+0x2c>
 80182a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80182a4:	f383 8811 	msr	BASEPRI, r3
 80182a8:	f3bf 8f6f 	isb	sy
 80182ac:	f3bf 8f4f 	dsb	sy
 80182b0:	617b      	str	r3, [r7, #20]
 80182b2:	bf00      	nop
 80182b4:	bf00      	nop
 80182b6:	e7fd      	b.n	80182b4 <vTaskDelayUntil+0x28>
 80182b8:	683b      	ldr	r3, [r7, #0]
 80182ba:	2b00      	cmp	r3, #0
 80182bc:	d10b      	bne.n	80182d6 <vTaskDelayUntil+0x4a>
 80182be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80182c2:	f383 8811 	msr	BASEPRI, r3
 80182c6:	f3bf 8f6f 	isb	sy
 80182ca:	f3bf 8f4f 	dsb	sy
 80182ce:	613b      	str	r3, [r7, #16]
 80182d0:	bf00      	nop
 80182d2:	bf00      	nop
 80182d4:	e7fd      	b.n	80182d2 <vTaskDelayUntil+0x46>
 80182d6:	4b2a      	ldr	r3, [pc, #168]	@ (8018380 <vTaskDelayUntil+0xf4>)
 80182d8:	681b      	ldr	r3, [r3, #0]
 80182da:	2b00      	cmp	r3, #0
 80182dc:	d00b      	beq.n	80182f6 <vTaskDelayUntil+0x6a>
 80182de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80182e2:	f383 8811 	msr	BASEPRI, r3
 80182e6:	f3bf 8f6f 	isb	sy
 80182ea:	f3bf 8f4f 	dsb	sy
 80182ee:	60fb      	str	r3, [r7, #12]
 80182f0:	bf00      	nop
 80182f2:	bf00      	nop
 80182f4:	e7fd      	b.n	80182f2 <vTaskDelayUntil+0x66>
 80182f6:	f000 f8f1 	bl	80184dc <vTaskSuspendAll>
 80182fa:	4b22      	ldr	r3, [pc, #136]	@ (8018384 <vTaskDelayUntil+0xf8>)
 80182fc:	681b      	ldr	r3, [r3, #0]
 80182fe:	623b      	str	r3, [r7, #32]
 8018300:	687b      	ldr	r3, [r7, #4]
 8018302:	681b      	ldr	r3, [r3, #0]
 8018304:	683a      	ldr	r2, [r7, #0]
 8018306:	4413      	add	r3, r2
 8018308:	61fb      	str	r3, [r7, #28]
 801830a:	687b      	ldr	r3, [r7, #4]
 801830c:	681b      	ldr	r3, [r3, #0]
 801830e:	6a3a      	ldr	r2, [r7, #32]
 8018310:	429a      	cmp	r2, r3
 8018312:	d20b      	bcs.n	801832c <vTaskDelayUntil+0xa0>
 8018314:	687b      	ldr	r3, [r7, #4]
 8018316:	681b      	ldr	r3, [r3, #0]
 8018318:	69fa      	ldr	r2, [r7, #28]
 801831a:	429a      	cmp	r2, r3
 801831c:	d211      	bcs.n	8018342 <vTaskDelayUntil+0xb6>
 801831e:	69fa      	ldr	r2, [r7, #28]
 8018320:	6a3b      	ldr	r3, [r7, #32]
 8018322:	429a      	cmp	r2, r3
 8018324:	d90d      	bls.n	8018342 <vTaskDelayUntil+0xb6>
 8018326:	2301      	movs	r3, #1
 8018328:	627b      	str	r3, [r7, #36]	@ 0x24
 801832a:	e00a      	b.n	8018342 <vTaskDelayUntil+0xb6>
 801832c:	687b      	ldr	r3, [r7, #4]
 801832e:	681b      	ldr	r3, [r3, #0]
 8018330:	69fa      	ldr	r2, [r7, #28]
 8018332:	429a      	cmp	r2, r3
 8018334:	d303      	bcc.n	801833e <vTaskDelayUntil+0xb2>
 8018336:	69fa      	ldr	r2, [r7, #28]
 8018338:	6a3b      	ldr	r3, [r7, #32]
 801833a:	429a      	cmp	r2, r3
 801833c:	d901      	bls.n	8018342 <vTaskDelayUntil+0xb6>
 801833e:	2301      	movs	r3, #1
 8018340:	627b      	str	r3, [r7, #36]	@ 0x24
 8018342:	687b      	ldr	r3, [r7, #4]
 8018344:	69fa      	ldr	r2, [r7, #28]
 8018346:	601a      	str	r2, [r3, #0]
 8018348:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801834a:	2b00      	cmp	r3, #0
 801834c:	d006      	beq.n	801835c <vTaskDelayUntil+0xd0>
 801834e:	69fa      	ldr	r2, [r7, #28]
 8018350:	6a3b      	ldr	r3, [r7, #32]
 8018352:	1ad3      	subs	r3, r2, r3
 8018354:	2100      	movs	r1, #0
 8018356:	4618      	mov	r0, r3
 8018358:	f000 feca 	bl	80190f0 <prvAddCurrentTaskToDelayedList>
 801835c:	f000 f8cc 	bl	80184f8 <xTaskResumeAll>
 8018360:	61b8      	str	r0, [r7, #24]
 8018362:	69bb      	ldr	r3, [r7, #24]
 8018364:	2b00      	cmp	r3, #0
 8018366:	d107      	bne.n	8018378 <vTaskDelayUntil+0xec>
 8018368:	4b07      	ldr	r3, [pc, #28]	@ (8018388 <vTaskDelayUntil+0xfc>)
 801836a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801836e:	601a      	str	r2, [r3, #0]
 8018370:	f3bf 8f4f 	dsb	sy
 8018374:	f3bf 8f6f 	isb	sy
 8018378:	bf00      	nop
 801837a:	3728      	adds	r7, #40	@ 0x28
 801837c:	46bd      	mov	sp, r7
 801837e:	bd80      	pop	{r7, pc}
 8018380:	20003cd8 	.word	0x20003cd8
 8018384:	20003cb4 	.word	0x20003cb4
 8018388:	e000ed04 	.word	0xe000ed04

0801838c <vTaskDelay>:
 801838c:	b580      	push	{r7, lr}
 801838e:	b084      	sub	sp, #16
 8018390:	af00      	add	r7, sp, #0
 8018392:	6078      	str	r0, [r7, #4]
 8018394:	2300      	movs	r3, #0
 8018396:	60fb      	str	r3, [r7, #12]
 8018398:	687b      	ldr	r3, [r7, #4]
 801839a:	2b00      	cmp	r3, #0
 801839c:	d018      	beq.n	80183d0 <vTaskDelay+0x44>
 801839e:	4b14      	ldr	r3, [pc, #80]	@ (80183f0 <vTaskDelay+0x64>)
 80183a0:	681b      	ldr	r3, [r3, #0]
 80183a2:	2b00      	cmp	r3, #0
 80183a4:	d00b      	beq.n	80183be <vTaskDelay+0x32>
 80183a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80183aa:	f383 8811 	msr	BASEPRI, r3
 80183ae:	f3bf 8f6f 	isb	sy
 80183b2:	f3bf 8f4f 	dsb	sy
 80183b6:	60bb      	str	r3, [r7, #8]
 80183b8:	bf00      	nop
 80183ba:	bf00      	nop
 80183bc:	e7fd      	b.n	80183ba <vTaskDelay+0x2e>
 80183be:	f000 f88d 	bl	80184dc <vTaskSuspendAll>
 80183c2:	2100      	movs	r1, #0
 80183c4:	6878      	ldr	r0, [r7, #4]
 80183c6:	f000 fe93 	bl	80190f0 <prvAddCurrentTaskToDelayedList>
 80183ca:	f000 f895 	bl	80184f8 <xTaskResumeAll>
 80183ce:	60f8      	str	r0, [r7, #12]
 80183d0:	68fb      	ldr	r3, [r7, #12]
 80183d2:	2b00      	cmp	r3, #0
 80183d4:	d107      	bne.n	80183e6 <vTaskDelay+0x5a>
 80183d6:	4b07      	ldr	r3, [pc, #28]	@ (80183f4 <vTaskDelay+0x68>)
 80183d8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80183dc:	601a      	str	r2, [r3, #0]
 80183de:	f3bf 8f4f 	dsb	sy
 80183e2:	f3bf 8f6f 	isb	sy
 80183e6:	bf00      	nop
 80183e8:	3710      	adds	r7, #16
 80183ea:	46bd      	mov	sp, r7
 80183ec:	bd80      	pop	{r7, pc}
 80183ee:	bf00      	nop
 80183f0:	20003cd8 	.word	0x20003cd8
 80183f4:	e000ed04 	.word	0xe000ed04

080183f8 <vTaskStartScheduler>:
 80183f8:	b580      	push	{r7, lr}
 80183fa:	b08a      	sub	sp, #40	@ 0x28
 80183fc:	af04      	add	r7, sp, #16
 80183fe:	2300      	movs	r3, #0
 8018400:	60bb      	str	r3, [r7, #8]
 8018402:	2300      	movs	r3, #0
 8018404:	607b      	str	r3, [r7, #4]
 8018406:	463a      	mov	r2, r7
 8018408:	1d39      	adds	r1, r7, #4
 801840a:	f107 0308 	add.w	r3, r7, #8
 801840e:	4618      	mov	r0, r3
 8018410:	f7ea feb2 	bl	8003178 <vApplicationGetIdleTaskMemory>
 8018414:	6839      	ldr	r1, [r7, #0]
 8018416:	687b      	ldr	r3, [r7, #4]
 8018418:	68ba      	ldr	r2, [r7, #8]
 801841a:	9202      	str	r2, [sp, #8]
 801841c:	9301      	str	r3, [sp, #4]
 801841e:	2300      	movs	r3, #0
 8018420:	9300      	str	r3, [sp, #0]
 8018422:	2300      	movs	r3, #0
 8018424:	460a      	mov	r2, r1
 8018426:	4925      	ldr	r1, [pc, #148]	@ (80184bc <vTaskStartScheduler+0xc4>)
 8018428:	4825      	ldr	r0, [pc, #148]	@ (80184c0 <vTaskStartScheduler+0xc8>)
 801842a:	f7ff fd45 	bl	8017eb8 <xTaskCreateStatic>
 801842e:	4603      	mov	r3, r0
 8018430:	4a24      	ldr	r2, [pc, #144]	@ (80184c4 <vTaskStartScheduler+0xcc>)
 8018432:	6013      	str	r3, [r2, #0]
 8018434:	4b23      	ldr	r3, [pc, #140]	@ (80184c4 <vTaskStartScheduler+0xcc>)
 8018436:	681b      	ldr	r3, [r3, #0]
 8018438:	2b00      	cmp	r3, #0
 801843a:	d002      	beq.n	8018442 <vTaskStartScheduler+0x4a>
 801843c:	2301      	movs	r3, #1
 801843e:	617b      	str	r3, [r7, #20]
 8018440:	e001      	b.n	8018446 <vTaskStartScheduler+0x4e>
 8018442:	2300      	movs	r3, #0
 8018444:	617b      	str	r3, [r7, #20]
 8018446:	697b      	ldr	r3, [r7, #20]
 8018448:	2b01      	cmp	r3, #1
 801844a:	d102      	bne.n	8018452 <vTaskStartScheduler+0x5a>
 801844c:	f000 feb6 	bl	80191bc <xTimerCreateTimerTask>
 8018450:	6178      	str	r0, [r7, #20]
 8018452:	697b      	ldr	r3, [r7, #20]
 8018454:	2b01      	cmp	r3, #1
 8018456:	d11d      	bne.n	8018494 <vTaskStartScheduler+0x9c>
 8018458:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801845c:	f383 8811 	msr	BASEPRI, r3
 8018460:	f3bf 8f6f 	isb	sy
 8018464:	f3bf 8f4f 	dsb	sy
 8018468:	613b      	str	r3, [r7, #16]
 801846a:	bf00      	nop
 801846c:	4b16      	ldr	r3, [pc, #88]	@ (80184c8 <vTaskStartScheduler+0xd0>)
 801846e:	681b      	ldr	r3, [r3, #0]
 8018470:	3358      	adds	r3, #88	@ 0x58
 8018472:	4a16      	ldr	r2, [pc, #88]	@ (80184cc <vTaskStartScheduler+0xd4>)
 8018474:	6013      	str	r3, [r2, #0]
 8018476:	4b16      	ldr	r3, [pc, #88]	@ (80184d0 <vTaskStartScheduler+0xd8>)
 8018478:	f04f 32ff 	mov.w	r2, #4294967295
 801847c:	601a      	str	r2, [r3, #0]
 801847e:	4b15      	ldr	r3, [pc, #84]	@ (80184d4 <vTaskStartScheduler+0xdc>)
 8018480:	2201      	movs	r2, #1
 8018482:	601a      	str	r2, [r3, #0]
 8018484:	4b14      	ldr	r3, [pc, #80]	@ (80184d8 <vTaskStartScheduler+0xe0>)
 8018486:	2200      	movs	r2, #0
 8018488:	601a      	str	r2, [r3, #0]
 801848a:	f7ea fe5b 	bl	8003144 <configureTimerForRunTimeStats>
 801848e:	f001 fa9f 	bl	80199d0 <xPortStartScheduler>
 8018492:	e00f      	b.n	80184b4 <vTaskStartScheduler+0xbc>
 8018494:	697b      	ldr	r3, [r7, #20]
 8018496:	f1b3 3fff 	cmp.w	r3, #4294967295
 801849a:	d10b      	bne.n	80184b4 <vTaskStartScheduler+0xbc>
 801849c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80184a0:	f383 8811 	msr	BASEPRI, r3
 80184a4:	f3bf 8f6f 	isb	sy
 80184a8:	f3bf 8f4f 	dsb	sy
 80184ac:	60fb      	str	r3, [r7, #12]
 80184ae:	bf00      	nop
 80184b0:	bf00      	nop
 80184b2:	e7fd      	b.n	80184b0 <vTaskStartScheduler+0xb8>
 80184b4:	bf00      	nop
 80184b6:	3718      	adds	r7, #24
 80184b8:	46bd      	mov	sp, r7
 80184ba:	bd80      	pop	{r7, pc}
 80184bc:	08020f4c 	.word	0x08020f4c
 80184c0:	08018c29 	.word	0x08018c29
 80184c4:	20003cd4 	.word	0x20003cd4
 80184c8:	20003b10 	.word	0x20003b10
 80184cc:	20000120 	.word	0x20000120
 80184d0:	20003cd0 	.word	0x20003cd0
 80184d4:	20003cbc 	.word	0x20003cbc
 80184d8:	20003cb4 	.word	0x20003cb4

080184dc <vTaskSuspendAll>:
 80184dc:	b480      	push	{r7}
 80184de:	af00      	add	r7, sp, #0
 80184e0:	4b04      	ldr	r3, [pc, #16]	@ (80184f4 <vTaskSuspendAll+0x18>)
 80184e2:	681b      	ldr	r3, [r3, #0]
 80184e4:	3301      	adds	r3, #1
 80184e6:	4a03      	ldr	r2, [pc, #12]	@ (80184f4 <vTaskSuspendAll+0x18>)
 80184e8:	6013      	str	r3, [r2, #0]
 80184ea:	bf00      	nop
 80184ec:	46bd      	mov	sp, r7
 80184ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80184f2:	4770      	bx	lr
 80184f4:	20003cd8 	.word	0x20003cd8

080184f8 <xTaskResumeAll>:
 80184f8:	b580      	push	{r7, lr}
 80184fa:	b084      	sub	sp, #16
 80184fc:	af00      	add	r7, sp, #0
 80184fe:	2300      	movs	r3, #0
 8018500:	60fb      	str	r3, [r7, #12]
 8018502:	2300      	movs	r3, #0
 8018504:	60bb      	str	r3, [r7, #8]
 8018506:	4b42      	ldr	r3, [pc, #264]	@ (8018610 <xTaskResumeAll+0x118>)
 8018508:	681b      	ldr	r3, [r3, #0]
 801850a:	2b00      	cmp	r3, #0
 801850c:	d10b      	bne.n	8018526 <xTaskResumeAll+0x2e>
 801850e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018512:	f383 8811 	msr	BASEPRI, r3
 8018516:	f3bf 8f6f 	isb	sy
 801851a:	f3bf 8f4f 	dsb	sy
 801851e:	603b      	str	r3, [r7, #0]
 8018520:	bf00      	nop
 8018522:	bf00      	nop
 8018524:	e7fd      	b.n	8018522 <xTaskResumeAll+0x2a>
 8018526:	f001 faf7 	bl	8019b18 <vPortEnterCritical>
 801852a:	4b39      	ldr	r3, [pc, #228]	@ (8018610 <xTaskResumeAll+0x118>)
 801852c:	681b      	ldr	r3, [r3, #0]
 801852e:	3b01      	subs	r3, #1
 8018530:	4a37      	ldr	r2, [pc, #220]	@ (8018610 <xTaskResumeAll+0x118>)
 8018532:	6013      	str	r3, [r2, #0]
 8018534:	4b36      	ldr	r3, [pc, #216]	@ (8018610 <xTaskResumeAll+0x118>)
 8018536:	681b      	ldr	r3, [r3, #0]
 8018538:	2b00      	cmp	r3, #0
 801853a:	d161      	bne.n	8018600 <xTaskResumeAll+0x108>
 801853c:	4b35      	ldr	r3, [pc, #212]	@ (8018614 <xTaskResumeAll+0x11c>)
 801853e:	681b      	ldr	r3, [r3, #0]
 8018540:	2b00      	cmp	r3, #0
 8018542:	d05d      	beq.n	8018600 <xTaskResumeAll+0x108>
 8018544:	e02e      	b.n	80185a4 <xTaskResumeAll+0xac>
 8018546:	4b34      	ldr	r3, [pc, #208]	@ (8018618 <xTaskResumeAll+0x120>)
 8018548:	68db      	ldr	r3, [r3, #12]
 801854a:	68db      	ldr	r3, [r3, #12]
 801854c:	60fb      	str	r3, [r7, #12]
 801854e:	68fb      	ldr	r3, [r7, #12]
 8018550:	3318      	adds	r3, #24
 8018552:	4618      	mov	r0, r3
 8018554:	f7fe fec0 	bl	80172d8 <uxListRemove>
 8018558:	68fb      	ldr	r3, [r7, #12]
 801855a:	3304      	adds	r3, #4
 801855c:	4618      	mov	r0, r3
 801855e:	f7fe febb 	bl	80172d8 <uxListRemove>
 8018562:	68fb      	ldr	r3, [r7, #12]
 8018564:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018566:	2201      	movs	r2, #1
 8018568:	409a      	lsls	r2, r3
 801856a:	4b2c      	ldr	r3, [pc, #176]	@ (801861c <xTaskResumeAll+0x124>)
 801856c:	681b      	ldr	r3, [r3, #0]
 801856e:	4313      	orrs	r3, r2
 8018570:	4a2a      	ldr	r2, [pc, #168]	@ (801861c <xTaskResumeAll+0x124>)
 8018572:	6013      	str	r3, [r2, #0]
 8018574:	68fb      	ldr	r3, [r7, #12]
 8018576:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018578:	4613      	mov	r3, r2
 801857a:	009b      	lsls	r3, r3, #2
 801857c:	4413      	add	r3, r2
 801857e:	009b      	lsls	r3, r3, #2
 8018580:	4a27      	ldr	r2, [pc, #156]	@ (8018620 <xTaskResumeAll+0x128>)
 8018582:	441a      	add	r2, r3
 8018584:	68fb      	ldr	r3, [r7, #12]
 8018586:	3304      	adds	r3, #4
 8018588:	4619      	mov	r1, r3
 801858a:	4610      	mov	r0, r2
 801858c:	f7fe fe47 	bl	801721e <vListInsertEnd>
 8018590:	68fb      	ldr	r3, [r7, #12]
 8018592:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018594:	4b23      	ldr	r3, [pc, #140]	@ (8018624 <xTaskResumeAll+0x12c>)
 8018596:	681b      	ldr	r3, [r3, #0]
 8018598:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801859a:	429a      	cmp	r2, r3
 801859c:	d302      	bcc.n	80185a4 <xTaskResumeAll+0xac>
 801859e:	4b22      	ldr	r3, [pc, #136]	@ (8018628 <xTaskResumeAll+0x130>)
 80185a0:	2201      	movs	r2, #1
 80185a2:	601a      	str	r2, [r3, #0]
 80185a4:	4b1c      	ldr	r3, [pc, #112]	@ (8018618 <xTaskResumeAll+0x120>)
 80185a6:	681b      	ldr	r3, [r3, #0]
 80185a8:	2b00      	cmp	r3, #0
 80185aa:	d1cc      	bne.n	8018546 <xTaskResumeAll+0x4e>
 80185ac:	68fb      	ldr	r3, [r7, #12]
 80185ae:	2b00      	cmp	r3, #0
 80185b0:	d001      	beq.n	80185b6 <xTaskResumeAll+0xbe>
 80185b2:	f000 fbf5 	bl	8018da0 <prvResetNextTaskUnblockTime>
 80185b6:	4b1d      	ldr	r3, [pc, #116]	@ (801862c <xTaskResumeAll+0x134>)
 80185b8:	681b      	ldr	r3, [r3, #0]
 80185ba:	607b      	str	r3, [r7, #4]
 80185bc:	687b      	ldr	r3, [r7, #4]
 80185be:	2b00      	cmp	r3, #0
 80185c0:	d010      	beq.n	80185e4 <xTaskResumeAll+0xec>
 80185c2:	f000 f847 	bl	8018654 <xTaskIncrementTick>
 80185c6:	4603      	mov	r3, r0
 80185c8:	2b00      	cmp	r3, #0
 80185ca:	d002      	beq.n	80185d2 <xTaskResumeAll+0xda>
 80185cc:	4b16      	ldr	r3, [pc, #88]	@ (8018628 <xTaskResumeAll+0x130>)
 80185ce:	2201      	movs	r2, #1
 80185d0:	601a      	str	r2, [r3, #0]
 80185d2:	687b      	ldr	r3, [r7, #4]
 80185d4:	3b01      	subs	r3, #1
 80185d6:	607b      	str	r3, [r7, #4]
 80185d8:	687b      	ldr	r3, [r7, #4]
 80185da:	2b00      	cmp	r3, #0
 80185dc:	d1f1      	bne.n	80185c2 <xTaskResumeAll+0xca>
 80185de:	4b13      	ldr	r3, [pc, #76]	@ (801862c <xTaskResumeAll+0x134>)
 80185e0:	2200      	movs	r2, #0
 80185e2:	601a      	str	r2, [r3, #0]
 80185e4:	4b10      	ldr	r3, [pc, #64]	@ (8018628 <xTaskResumeAll+0x130>)
 80185e6:	681b      	ldr	r3, [r3, #0]
 80185e8:	2b00      	cmp	r3, #0
 80185ea:	d009      	beq.n	8018600 <xTaskResumeAll+0x108>
 80185ec:	2301      	movs	r3, #1
 80185ee:	60bb      	str	r3, [r7, #8]
 80185f0:	4b0f      	ldr	r3, [pc, #60]	@ (8018630 <xTaskResumeAll+0x138>)
 80185f2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80185f6:	601a      	str	r2, [r3, #0]
 80185f8:	f3bf 8f4f 	dsb	sy
 80185fc:	f3bf 8f6f 	isb	sy
 8018600:	f001 fabc 	bl	8019b7c <vPortExitCritical>
 8018604:	68bb      	ldr	r3, [r7, #8]
 8018606:	4618      	mov	r0, r3
 8018608:	3710      	adds	r7, #16
 801860a:	46bd      	mov	sp, r7
 801860c:	bd80      	pop	{r7, pc}
 801860e:	bf00      	nop
 8018610:	20003cd8 	.word	0x20003cd8
 8018614:	20003cb0 	.word	0x20003cb0
 8018618:	20003c70 	.word	0x20003c70
 801861c:	20003cb8 	.word	0x20003cb8
 8018620:	20003b14 	.word	0x20003b14
 8018624:	20003b10 	.word	0x20003b10
 8018628:	20003cc4 	.word	0x20003cc4
 801862c:	20003cc0 	.word	0x20003cc0
 8018630:	e000ed04 	.word	0xe000ed04

08018634 <xTaskGetTickCount>:
 8018634:	b480      	push	{r7}
 8018636:	b083      	sub	sp, #12
 8018638:	af00      	add	r7, sp, #0
 801863a:	4b05      	ldr	r3, [pc, #20]	@ (8018650 <xTaskGetTickCount+0x1c>)
 801863c:	681b      	ldr	r3, [r3, #0]
 801863e:	607b      	str	r3, [r7, #4]
 8018640:	687b      	ldr	r3, [r7, #4]
 8018642:	4618      	mov	r0, r3
 8018644:	370c      	adds	r7, #12
 8018646:	46bd      	mov	sp, r7
 8018648:	f85d 7b04 	ldr.w	r7, [sp], #4
 801864c:	4770      	bx	lr
 801864e:	bf00      	nop
 8018650:	20003cb4 	.word	0x20003cb4

08018654 <xTaskIncrementTick>:
 8018654:	b580      	push	{r7, lr}
 8018656:	b086      	sub	sp, #24
 8018658:	af00      	add	r7, sp, #0
 801865a:	2300      	movs	r3, #0
 801865c:	617b      	str	r3, [r7, #20]
 801865e:	4b4f      	ldr	r3, [pc, #316]	@ (801879c <xTaskIncrementTick+0x148>)
 8018660:	681b      	ldr	r3, [r3, #0]
 8018662:	2b00      	cmp	r3, #0
 8018664:	f040 808f 	bne.w	8018786 <xTaskIncrementTick+0x132>
 8018668:	4b4d      	ldr	r3, [pc, #308]	@ (80187a0 <xTaskIncrementTick+0x14c>)
 801866a:	681b      	ldr	r3, [r3, #0]
 801866c:	3301      	adds	r3, #1
 801866e:	613b      	str	r3, [r7, #16]
 8018670:	4a4b      	ldr	r2, [pc, #300]	@ (80187a0 <xTaskIncrementTick+0x14c>)
 8018672:	693b      	ldr	r3, [r7, #16]
 8018674:	6013      	str	r3, [r2, #0]
 8018676:	693b      	ldr	r3, [r7, #16]
 8018678:	2b00      	cmp	r3, #0
 801867a:	d121      	bne.n	80186c0 <xTaskIncrementTick+0x6c>
 801867c:	4b49      	ldr	r3, [pc, #292]	@ (80187a4 <xTaskIncrementTick+0x150>)
 801867e:	681b      	ldr	r3, [r3, #0]
 8018680:	681b      	ldr	r3, [r3, #0]
 8018682:	2b00      	cmp	r3, #0
 8018684:	d00b      	beq.n	801869e <xTaskIncrementTick+0x4a>
 8018686:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801868a:	f383 8811 	msr	BASEPRI, r3
 801868e:	f3bf 8f6f 	isb	sy
 8018692:	f3bf 8f4f 	dsb	sy
 8018696:	603b      	str	r3, [r7, #0]
 8018698:	bf00      	nop
 801869a:	bf00      	nop
 801869c:	e7fd      	b.n	801869a <xTaskIncrementTick+0x46>
 801869e:	4b41      	ldr	r3, [pc, #260]	@ (80187a4 <xTaskIncrementTick+0x150>)
 80186a0:	681b      	ldr	r3, [r3, #0]
 80186a2:	60fb      	str	r3, [r7, #12]
 80186a4:	4b40      	ldr	r3, [pc, #256]	@ (80187a8 <xTaskIncrementTick+0x154>)
 80186a6:	681b      	ldr	r3, [r3, #0]
 80186a8:	4a3e      	ldr	r2, [pc, #248]	@ (80187a4 <xTaskIncrementTick+0x150>)
 80186aa:	6013      	str	r3, [r2, #0]
 80186ac:	4a3e      	ldr	r2, [pc, #248]	@ (80187a8 <xTaskIncrementTick+0x154>)
 80186ae:	68fb      	ldr	r3, [r7, #12]
 80186b0:	6013      	str	r3, [r2, #0]
 80186b2:	4b3e      	ldr	r3, [pc, #248]	@ (80187ac <xTaskIncrementTick+0x158>)
 80186b4:	681b      	ldr	r3, [r3, #0]
 80186b6:	3301      	adds	r3, #1
 80186b8:	4a3c      	ldr	r2, [pc, #240]	@ (80187ac <xTaskIncrementTick+0x158>)
 80186ba:	6013      	str	r3, [r2, #0]
 80186bc:	f000 fb70 	bl	8018da0 <prvResetNextTaskUnblockTime>
 80186c0:	4b3b      	ldr	r3, [pc, #236]	@ (80187b0 <xTaskIncrementTick+0x15c>)
 80186c2:	681b      	ldr	r3, [r3, #0]
 80186c4:	693a      	ldr	r2, [r7, #16]
 80186c6:	429a      	cmp	r2, r3
 80186c8:	d348      	bcc.n	801875c <xTaskIncrementTick+0x108>
 80186ca:	4b36      	ldr	r3, [pc, #216]	@ (80187a4 <xTaskIncrementTick+0x150>)
 80186cc:	681b      	ldr	r3, [r3, #0]
 80186ce:	681b      	ldr	r3, [r3, #0]
 80186d0:	2b00      	cmp	r3, #0
 80186d2:	d104      	bne.n	80186de <xTaskIncrementTick+0x8a>
 80186d4:	4b36      	ldr	r3, [pc, #216]	@ (80187b0 <xTaskIncrementTick+0x15c>)
 80186d6:	f04f 32ff 	mov.w	r2, #4294967295
 80186da:	601a      	str	r2, [r3, #0]
 80186dc:	e03e      	b.n	801875c <xTaskIncrementTick+0x108>
 80186de:	4b31      	ldr	r3, [pc, #196]	@ (80187a4 <xTaskIncrementTick+0x150>)
 80186e0:	681b      	ldr	r3, [r3, #0]
 80186e2:	68db      	ldr	r3, [r3, #12]
 80186e4:	68db      	ldr	r3, [r3, #12]
 80186e6:	60bb      	str	r3, [r7, #8]
 80186e8:	68bb      	ldr	r3, [r7, #8]
 80186ea:	685b      	ldr	r3, [r3, #4]
 80186ec:	607b      	str	r3, [r7, #4]
 80186ee:	693a      	ldr	r2, [r7, #16]
 80186f0:	687b      	ldr	r3, [r7, #4]
 80186f2:	429a      	cmp	r2, r3
 80186f4:	d203      	bcs.n	80186fe <xTaskIncrementTick+0xaa>
 80186f6:	4a2e      	ldr	r2, [pc, #184]	@ (80187b0 <xTaskIncrementTick+0x15c>)
 80186f8:	687b      	ldr	r3, [r7, #4]
 80186fa:	6013      	str	r3, [r2, #0]
 80186fc:	e02e      	b.n	801875c <xTaskIncrementTick+0x108>
 80186fe:	68bb      	ldr	r3, [r7, #8]
 8018700:	3304      	adds	r3, #4
 8018702:	4618      	mov	r0, r3
 8018704:	f7fe fde8 	bl	80172d8 <uxListRemove>
 8018708:	68bb      	ldr	r3, [r7, #8]
 801870a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801870c:	2b00      	cmp	r3, #0
 801870e:	d004      	beq.n	801871a <xTaskIncrementTick+0xc6>
 8018710:	68bb      	ldr	r3, [r7, #8]
 8018712:	3318      	adds	r3, #24
 8018714:	4618      	mov	r0, r3
 8018716:	f7fe fddf 	bl	80172d8 <uxListRemove>
 801871a:	68bb      	ldr	r3, [r7, #8]
 801871c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801871e:	2201      	movs	r2, #1
 8018720:	409a      	lsls	r2, r3
 8018722:	4b24      	ldr	r3, [pc, #144]	@ (80187b4 <xTaskIncrementTick+0x160>)
 8018724:	681b      	ldr	r3, [r3, #0]
 8018726:	4313      	orrs	r3, r2
 8018728:	4a22      	ldr	r2, [pc, #136]	@ (80187b4 <xTaskIncrementTick+0x160>)
 801872a:	6013      	str	r3, [r2, #0]
 801872c:	68bb      	ldr	r3, [r7, #8]
 801872e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018730:	4613      	mov	r3, r2
 8018732:	009b      	lsls	r3, r3, #2
 8018734:	4413      	add	r3, r2
 8018736:	009b      	lsls	r3, r3, #2
 8018738:	4a1f      	ldr	r2, [pc, #124]	@ (80187b8 <xTaskIncrementTick+0x164>)
 801873a:	441a      	add	r2, r3
 801873c:	68bb      	ldr	r3, [r7, #8]
 801873e:	3304      	adds	r3, #4
 8018740:	4619      	mov	r1, r3
 8018742:	4610      	mov	r0, r2
 8018744:	f7fe fd6b 	bl	801721e <vListInsertEnd>
 8018748:	68bb      	ldr	r3, [r7, #8]
 801874a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801874c:	4b1b      	ldr	r3, [pc, #108]	@ (80187bc <xTaskIncrementTick+0x168>)
 801874e:	681b      	ldr	r3, [r3, #0]
 8018750:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018752:	429a      	cmp	r2, r3
 8018754:	d3b9      	bcc.n	80186ca <xTaskIncrementTick+0x76>
 8018756:	2301      	movs	r3, #1
 8018758:	617b      	str	r3, [r7, #20]
 801875a:	e7b6      	b.n	80186ca <xTaskIncrementTick+0x76>
 801875c:	4b17      	ldr	r3, [pc, #92]	@ (80187bc <xTaskIncrementTick+0x168>)
 801875e:	681b      	ldr	r3, [r3, #0]
 8018760:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018762:	4915      	ldr	r1, [pc, #84]	@ (80187b8 <xTaskIncrementTick+0x164>)
 8018764:	4613      	mov	r3, r2
 8018766:	009b      	lsls	r3, r3, #2
 8018768:	4413      	add	r3, r2
 801876a:	009b      	lsls	r3, r3, #2
 801876c:	440b      	add	r3, r1
 801876e:	681b      	ldr	r3, [r3, #0]
 8018770:	2b01      	cmp	r3, #1
 8018772:	d901      	bls.n	8018778 <xTaskIncrementTick+0x124>
 8018774:	2301      	movs	r3, #1
 8018776:	617b      	str	r3, [r7, #20]
 8018778:	4b11      	ldr	r3, [pc, #68]	@ (80187c0 <xTaskIncrementTick+0x16c>)
 801877a:	681b      	ldr	r3, [r3, #0]
 801877c:	2b00      	cmp	r3, #0
 801877e:	d007      	beq.n	8018790 <xTaskIncrementTick+0x13c>
 8018780:	2301      	movs	r3, #1
 8018782:	617b      	str	r3, [r7, #20]
 8018784:	e004      	b.n	8018790 <xTaskIncrementTick+0x13c>
 8018786:	4b0f      	ldr	r3, [pc, #60]	@ (80187c4 <xTaskIncrementTick+0x170>)
 8018788:	681b      	ldr	r3, [r3, #0]
 801878a:	3301      	adds	r3, #1
 801878c:	4a0d      	ldr	r2, [pc, #52]	@ (80187c4 <xTaskIncrementTick+0x170>)
 801878e:	6013      	str	r3, [r2, #0]
 8018790:	697b      	ldr	r3, [r7, #20]
 8018792:	4618      	mov	r0, r3
 8018794:	3718      	adds	r7, #24
 8018796:	46bd      	mov	sp, r7
 8018798:	bd80      	pop	{r7, pc}
 801879a:	bf00      	nop
 801879c:	20003cd8 	.word	0x20003cd8
 80187a0:	20003cb4 	.word	0x20003cb4
 80187a4:	20003c68 	.word	0x20003c68
 80187a8:	20003c6c 	.word	0x20003c6c
 80187ac:	20003cc8 	.word	0x20003cc8
 80187b0:	20003cd0 	.word	0x20003cd0
 80187b4:	20003cb8 	.word	0x20003cb8
 80187b8:	20003b14 	.word	0x20003b14
 80187bc:	20003b10 	.word	0x20003b10
 80187c0:	20003cc4 	.word	0x20003cc4
 80187c4:	20003cc0 	.word	0x20003cc0

080187c8 <vTaskSwitchContext>:
 80187c8:	b580      	push	{r7, lr}
 80187ca:	b086      	sub	sp, #24
 80187cc:	af00      	add	r7, sp, #0
 80187ce:	4b3e      	ldr	r3, [pc, #248]	@ (80188c8 <vTaskSwitchContext+0x100>)
 80187d0:	681b      	ldr	r3, [r3, #0]
 80187d2:	2b00      	cmp	r3, #0
 80187d4:	d003      	beq.n	80187de <vTaskSwitchContext+0x16>
 80187d6:	4b3d      	ldr	r3, [pc, #244]	@ (80188cc <vTaskSwitchContext+0x104>)
 80187d8:	2201      	movs	r2, #1
 80187da:	601a      	str	r2, [r3, #0]
 80187dc:	e06f      	b.n	80188be <vTaskSwitchContext+0xf6>
 80187de:	4b3b      	ldr	r3, [pc, #236]	@ (80188cc <vTaskSwitchContext+0x104>)
 80187e0:	2200      	movs	r2, #0
 80187e2:	601a      	str	r2, [r3, #0]
 80187e4:	f7ea fcb5 	bl	8003152 <getRunTimeCounterValue>
 80187e8:	4603      	mov	r3, r0
 80187ea:	4a39      	ldr	r2, [pc, #228]	@ (80188d0 <vTaskSwitchContext+0x108>)
 80187ec:	6013      	str	r3, [r2, #0]
 80187ee:	4b38      	ldr	r3, [pc, #224]	@ (80188d0 <vTaskSwitchContext+0x108>)
 80187f0:	681a      	ldr	r2, [r3, #0]
 80187f2:	4b38      	ldr	r3, [pc, #224]	@ (80188d4 <vTaskSwitchContext+0x10c>)
 80187f4:	681b      	ldr	r3, [r3, #0]
 80187f6:	429a      	cmp	r2, r3
 80187f8:	d909      	bls.n	801880e <vTaskSwitchContext+0x46>
 80187fa:	4b37      	ldr	r3, [pc, #220]	@ (80188d8 <vTaskSwitchContext+0x110>)
 80187fc:	681b      	ldr	r3, [r3, #0]
 80187fe:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8018800:	4a33      	ldr	r2, [pc, #204]	@ (80188d0 <vTaskSwitchContext+0x108>)
 8018802:	6810      	ldr	r0, [r2, #0]
 8018804:	4a33      	ldr	r2, [pc, #204]	@ (80188d4 <vTaskSwitchContext+0x10c>)
 8018806:	6812      	ldr	r2, [r2, #0]
 8018808:	1a82      	subs	r2, r0, r2
 801880a:	440a      	add	r2, r1
 801880c:	655a      	str	r2, [r3, #84]	@ 0x54
 801880e:	4b30      	ldr	r3, [pc, #192]	@ (80188d0 <vTaskSwitchContext+0x108>)
 8018810:	681b      	ldr	r3, [r3, #0]
 8018812:	4a30      	ldr	r2, [pc, #192]	@ (80188d4 <vTaskSwitchContext+0x10c>)
 8018814:	6013      	str	r3, [r2, #0]
 8018816:	4b30      	ldr	r3, [pc, #192]	@ (80188d8 <vTaskSwitchContext+0x110>)
 8018818:	681b      	ldr	r3, [r3, #0]
 801881a:	681a      	ldr	r2, [r3, #0]
 801881c:	4b2e      	ldr	r3, [pc, #184]	@ (80188d8 <vTaskSwitchContext+0x110>)
 801881e:	681b      	ldr	r3, [r3, #0]
 8018820:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018822:	429a      	cmp	r2, r3
 8018824:	d808      	bhi.n	8018838 <vTaskSwitchContext+0x70>
 8018826:	4b2c      	ldr	r3, [pc, #176]	@ (80188d8 <vTaskSwitchContext+0x110>)
 8018828:	681a      	ldr	r2, [r3, #0]
 801882a:	4b2b      	ldr	r3, [pc, #172]	@ (80188d8 <vTaskSwitchContext+0x110>)
 801882c:	681b      	ldr	r3, [r3, #0]
 801882e:	3334      	adds	r3, #52	@ 0x34
 8018830:	4619      	mov	r1, r3
 8018832:	4610      	mov	r0, r2
 8018834:	f7ea fc95 	bl	8003162 <vApplicationStackOverflowHook>
 8018838:	4b28      	ldr	r3, [pc, #160]	@ (80188dc <vTaskSwitchContext+0x114>)
 801883a:	681b      	ldr	r3, [r3, #0]
 801883c:	60fb      	str	r3, [r7, #12]
 801883e:	68fb      	ldr	r3, [r7, #12]
 8018840:	fab3 f383 	clz	r3, r3
 8018844:	72fb      	strb	r3, [r7, #11]
 8018846:	7afb      	ldrb	r3, [r7, #11]
 8018848:	f1c3 031f 	rsb	r3, r3, #31
 801884c:	617b      	str	r3, [r7, #20]
 801884e:	4924      	ldr	r1, [pc, #144]	@ (80188e0 <vTaskSwitchContext+0x118>)
 8018850:	697a      	ldr	r2, [r7, #20]
 8018852:	4613      	mov	r3, r2
 8018854:	009b      	lsls	r3, r3, #2
 8018856:	4413      	add	r3, r2
 8018858:	009b      	lsls	r3, r3, #2
 801885a:	440b      	add	r3, r1
 801885c:	681b      	ldr	r3, [r3, #0]
 801885e:	2b00      	cmp	r3, #0
 8018860:	d10b      	bne.n	801887a <vTaskSwitchContext+0xb2>
 8018862:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018866:	f383 8811 	msr	BASEPRI, r3
 801886a:	f3bf 8f6f 	isb	sy
 801886e:	f3bf 8f4f 	dsb	sy
 8018872:	607b      	str	r3, [r7, #4]
 8018874:	bf00      	nop
 8018876:	bf00      	nop
 8018878:	e7fd      	b.n	8018876 <vTaskSwitchContext+0xae>
 801887a:	697a      	ldr	r2, [r7, #20]
 801887c:	4613      	mov	r3, r2
 801887e:	009b      	lsls	r3, r3, #2
 8018880:	4413      	add	r3, r2
 8018882:	009b      	lsls	r3, r3, #2
 8018884:	4a16      	ldr	r2, [pc, #88]	@ (80188e0 <vTaskSwitchContext+0x118>)
 8018886:	4413      	add	r3, r2
 8018888:	613b      	str	r3, [r7, #16]
 801888a:	693b      	ldr	r3, [r7, #16]
 801888c:	685b      	ldr	r3, [r3, #4]
 801888e:	685a      	ldr	r2, [r3, #4]
 8018890:	693b      	ldr	r3, [r7, #16]
 8018892:	605a      	str	r2, [r3, #4]
 8018894:	693b      	ldr	r3, [r7, #16]
 8018896:	685a      	ldr	r2, [r3, #4]
 8018898:	693b      	ldr	r3, [r7, #16]
 801889a:	3308      	adds	r3, #8
 801889c:	429a      	cmp	r2, r3
 801889e:	d104      	bne.n	80188aa <vTaskSwitchContext+0xe2>
 80188a0:	693b      	ldr	r3, [r7, #16]
 80188a2:	685b      	ldr	r3, [r3, #4]
 80188a4:	685a      	ldr	r2, [r3, #4]
 80188a6:	693b      	ldr	r3, [r7, #16]
 80188a8:	605a      	str	r2, [r3, #4]
 80188aa:	693b      	ldr	r3, [r7, #16]
 80188ac:	685b      	ldr	r3, [r3, #4]
 80188ae:	68db      	ldr	r3, [r3, #12]
 80188b0:	4a09      	ldr	r2, [pc, #36]	@ (80188d8 <vTaskSwitchContext+0x110>)
 80188b2:	6013      	str	r3, [r2, #0]
 80188b4:	4b08      	ldr	r3, [pc, #32]	@ (80188d8 <vTaskSwitchContext+0x110>)
 80188b6:	681b      	ldr	r3, [r3, #0]
 80188b8:	3358      	adds	r3, #88	@ 0x58
 80188ba:	4a0a      	ldr	r2, [pc, #40]	@ (80188e4 <vTaskSwitchContext+0x11c>)
 80188bc:	6013      	str	r3, [r2, #0]
 80188be:	bf00      	nop
 80188c0:	3718      	adds	r7, #24
 80188c2:	46bd      	mov	sp, r7
 80188c4:	bd80      	pop	{r7, pc}
 80188c6:	bf00      	nop
 80188c8:	20003cd8 	.word	0x20003cd8
 80188cc:	20003cc4 	.word	0x20003cc4
 80188d0:	20003ce0 	.word	0x20003ce0
 80188d4:	20003cdc 	.word	0x20003cdc
 80188d8:	20003b10 	.word	0x20003b10
 80188dc:	20003cb8 	.word	0x20003cb8
 80188e0:	20003b14 	.word	0x20003b14
 80188e4:	20000120 	.word	0x20000120

080188e8 <vTaskPlaceOnEventList>:
 80188e8:	b580      	push	{r7, lr}
 80188ea:	b084      	sub	sp, #16
 80188ec:	af00      	add	r7, sp, #0
 80188ee:	6078      	str	r0, [r7, #4]
 80188f0:	6039      	str	r1, [r7, #0]
 80188f2:	687b      	ldr	r3, [r7, #4]
 80188f4:	2b00      	cmp	r3, #0
 80188f6:	d10b      	bne.n	8018910 <vTaskPlaceOnEventList+0x28>
 80188f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80188fc:	f383 8811 	msr	BASEPRI, r3
 8018900:	f3bf 8f6f 	isb	sy
 8018904:	f3bf 8f4f 	dsb	sy
 8018908:	60fb      	str	r3, [r7, #12]
 801890a:	bf00      	nop
 801890c:	bf00      	nop
 801890e:	e7fd      	b.n	801890c <vTaskPlaceOnEventList+0x24>
 8018910:	4b07      	ldr	r3, [pc, #28]	@ (8018930 <vTaskPlaceOnEventList+0x48>)
 8018912:	681b      	ldr	r3, [r3, #0]
 8018914:	3318      	adds	r3, #24
 8018916:	4619      	mov	r1, r3
 8018918:	6878      	ldr	r0, [r7, #4]
 801891a:	f7fe fca4 	bl	8017266 <vListInsert>
 801891e:	2101      	movs	r1, #1
 8018920:	6838      	ldr	r0, [r7, #0]
 8018922:	f000 fbe5 	bl	80190f0 <prvAddCurrentTaskToDelayedList>
 8018926:	bf00      	nop
 8018928:	3710      	adds	r7, #16
 801892a:	46bd      	mov	sp, r7
 801892c:	bd80      	pop	{r7, pc}
 801892e:	bf00      	nop
 8018930:	20003b10 	.word	0x20003b10

08018934 <vTaskPlaceOnEventListRestricted>:
 8018934:	b580      	push	{r7, lr}
 8018936:	b086      	sub	sp, #24
 8018938:	af00      	add	r7, sp, #0
 801893a:	60f8      	str	r0, [r7, #12]
 801893c:	60b9      	str	r1, [r7, #8]
 801893e:	607a      	str	r2, [r7, #4]
 8018940:	68fb      	ldr	r3, [r7, #12]
 8018942:	2b00      	cmp	r3, #0
 8018944:	d10b      	bne.n	801895e <vTaskPlaceOnEventListRestricted+0x2a>
 8018946:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801894a:	f383 8811 	msr	BASEPRI, r3
 801894e:	f3bf 8f6f 	isb	sy
 8018952:	f3bf 8f4f 	dsb	sy
 8018956:	617b      	str	r3, [r7, #20]
 8018958:	bf00      	nop
 801895a:	bf00      	nop
 801895c:	e7fd      	b.n	801895a <vTaskPlaceOnEventListRestricted+0x26>
 801895e:	4b0a      	ldr	r3, [pc, #40]	@ (8018988 <vTaskPlaceOnEventListRestricted+0x54>)
 8018960:	681b      	ldr	r3, [r3, #0]
 8018962:	3318      	adds	r3, #24
 8018964:	4619      	mov	r1, r3
 8018966:	68f8      	ldr	r0, [r7, #12]
 8018968:	f7fe fc59 	bl	801721e <vListInsertEnd>
 801896c:	687b      	ldr	r3, [r7, #4]
 801896e:	2b00      	cmp	r3, #0
 8018970:	d002      	beq.n	8018978 <vTaskPlaceOnEventListRestricted+0x44>
 8018972:	f04f 33ff 	mov.w	r3, #4294967295
 8018976:	60bb      	str	r3, [r7, #8]
 8018978:	6879      	ldr	r1, [r7, #4]
 801897a:	68b8      	ldr	r0, [r7, #8]
 801897c:	f000 fbb8 	bl	80190f0 <prvAddCurrentTaskToDelayedList>
 8018980:	bf00      	nop
 8018982:	3718      	adds	r7, #24
 8018984:	46bd      	mov	sp, r7
 8018986:	bd80      	pop	{r7, pc}
 8018988:	20003b10 	.word	0x20003b10

0801898c <xTaskRemoveFromEventList>:
 801898c:	b580      	push	{r7, lr}
 801898e:	b086      	sub	sp, #24
 8018990:	af00      	add	r7, sp, #0
 8018992:	6078      	str	r0, [r7, #4]
 8018994:	687b      	ldr	r3, [r7, #4]
 8018996:	68db      	ldr	r3, [r3, #12]
 8018998:	68db      	ldr	r3, [r3, #12]
 801899a:	613b      	str	r3, [r7, #16]
 801899c:	693b      	ldr	r3, [r7, #16]
 801899e:	2b00      	cmp	r3, #0
 80189a0:	d10b      	bne.n	80189ba <xTaskRemoveFromEventList+0x2e>
 80189a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80189a6:	f383 8811 	msr	BASEPRI, r3
 80189aa:	f3bf 8f6f 	isb	sy
 80189ae:	f3bf 8f4f 	dsb	sy
 80189b2:	60fb      	str	r3, [r7, #12]
 80189b4:	bf00      	nop
 80189b6:	bf00      	nop
 80189b8:	e7fd      	b.n	80189b6 <xTaskRemoveFromEventList+0x2a>
 80189ba:	693b      	ldr	r3, [r7, #16]
 80189bc:	3318      	adds	r3, #24
 80189be:	4618      	mov	r0, r3
 80189c0:	f7fe fc8a 	bl	80172d8 <uxListRemove>
 80189c4:	4b1d      	ldr	r3, [pc, #116]	@ (8018a3c <xTaskRemoveFromEventList+0xb0>)
 80189c6:	681b      	ldr	r3, [r3, #0]
 80189c8:	2b00      	cmp	r3, #0
 80189ca:	d11c      	bne.n	8018a06 <xTaskRemoveFromEventList+0x7a>
 80189cc:	693b      	ldr	r3, [r7, #16]
 80189ce:	3304      	adds	r3, #4
 80189d0:	4618      	mov	r0, r3
 80189d2:	f7fe fc81 	bl	80172d8 <uxListRemove>
 80189d6:	693b      	ldr	r3, [r7, #16]
 80189d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80189da:	2201      	movs	r2, #1
 80189dc:	409a      	lsls	r2, r3
 80189de:	4b18      	ldr	r3, [pc, #96]	@ (8018a40 <xTaskRemoveFromEventList+0xb4>)
 80189e0:	681b      	ldr	r3, [r3, #0]
 80189e2:	4313      	orrs	r3, r2
 80189e4:	4a16      	ldr	r2, [pc, #88]	@ (8018a40 <xTaskRemoveFromEventList+0xb4>)
 80189e6:	6013      	str	r3, [r2, #0]
 80189e8:	693b      	ldr	r3, [r7, #16]
 80189ea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80189ec:	4613      	mov	r3, r2
 80189ee:	009b      	lsls	r3, r3, #2
 80189f0:	4413      	add	r3, r2
 80189f2:	009b      	lsls	r3, r3, #2
 80189f4:	4a13      	ldr	r2, [pc, #76]	@ (8018a44 <xTaskRemoveFromEventList+0xb8>)
 80189f6:	441a      	add	r2, r3
 80189f8:	693b      	ldr	r3, [r7, #16]
 80189fa:	3304      	adds	r3, #4
 80189fc:	4619      	mov	r1, r3
 80189fe:	4610      	mov	r0, r2
 8018a00:	f7fe fc0d 	bl	801721e <vListInsertEnd>
 8018a04:	e005      	b.n	8018a12 <xTaskRemoveFromEventList+0x86>
 8018a06:	693b      	ldr	r3, [r7, #16]
 8018a08:	3318      	adds	r3, #24
 8018a0a:	4619      	mov	r1, r3
 8018a0c:	480e      	ldr	r0, [pc, #56]	@ (8018a48 <xTaskRemoveFromEventList+0xbc>)
 8018a0e:	f7fe fc06 	bl	801721e <vListInsertEnd>
 8018a12:	693b      	ldr	r3, [r7, #16]
 8018a14:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018a16:	4b0d      	ldr	r3, [pc, #52]	@ (8018a4c <xTaskRemoveFromEventList+0xc0>)
 8018a18:	681b      	ldr	r3, [r3, #0]
 8018a1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a1c:	429a      	cmp	r2, r3
 8018a1e:	d905      	bls.n	8018a2c <xTaskRemoveFromEventList+0xa0>
 8018a20:	2301      	movs	r3, #1
 8018a22:	617b      	str	r3, [r7, #20]
 8018a24:	4b0a      	ldr	r3, [pc, #40]	@ (8018a50 <xTaskRemoveFromEventList+0xc4>)
 8018a26:	2201      	movs	r2, #1
 8018a28:	601a      	str	r2, [r3, #0]
 8018a2a:	e001      	b.n	8018a30 <xTaskRemoveFromEventList+0xa4>
 8018a2c:	2300      	movs	r3, #0
 8018a2e:	617b      	str	r3, [r7, #20]
 8018a30:	697b      	ldr	r3, [r7, #20]
 8018a32:	4618      	mov	r0, r3
 8018a34:	3718      	adds	r7, #24
 8018a36:	46bd      	mov	sp, r7
 8018a38:	bd80      	pop	{r7, pc}
 8018a3a:	bf00      	nop
 8018a3c:	20003cd8 	.word	0x20003cd8
 8018a40:	20003cb8 	.word	0x20003cb8
 8018a44:	20003b14 	.word	0x20003b14
 8018a48:	20003c70 	.word	0x20003c70
 8018a4c:	20003b10 	.word	0x20003b10
 8018a50:	20003cc4 	.word	0x20003cc4

08018a54 <vTaskRemoveFromUnorderedEventList>:
 8018a54:	b580      	push	{r7, lr}
 8018a56:	b086      	sub	sp, #24
 8018a58:	af00      	add	r7, sp, #0
 8018a5a:	6078      	str	r0, [r7, #4]
 8018a5c:	6039      	str	r1, [r7, #0]
 8018a5e:	4b2a      	ldr	r3, [pc, #168]	@ (8018b08 <vTaskRemoveFromUnorderedEventList+0xb4>)
 8018a60:	681b      	ldr	r3, [r3, #0]
 8018a62:	2b00      	cmp	r3, #0
 8018a64:	d10b      	bne.n	8018a7e <vTaskRemoveFromUnorderedEventList+0x2a>
 8018a66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018a6a:	f383 8811 	msr	BASEPRI, r3
 8018a6e:	f3bf 8f6f 	isb	sy
 8018a72:	f3bf 8f4f 	dsb	sy
 8018a76:	613b      	str	r3, [r7, #16]
 8018a78:	bf00      	nop
 8018a7a:	bf00      	nop
 8018a7c:	e7fd      	b.n	8018a7a <vTaskRemoveFromUnorderedEventList+0x26>
 8018a7e:	683b      	ldr	r3, [r7, #0]
 8018a80:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8018a84:	687b      	ldr	r3, [r7, #4]
 8018a86:	601a      	str	r2, [r3, #0]
 8018a88:	687b      	ldr	r3, [r7, #4]
 8018a8a:	68db      	ldr	r3, [r3, #12]
 8018a8c:	617b      	str	r3, [r7, #20]
 8018a8e:	697b      	ldr	r3, [r7, #20]
 8018a90:	2b00      	cmp	r3, #0
 8018a92:	d10b      	bne.n	8018aac <vTaskRemoveFromUnorderedEventList+0x58>
 8018a94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018a98:	f383 8811 	msr	BASEPRI, r3
 8018a9c:	f3bf 8f6f 	isb	sy
 8018aa0:	f3bf 8f4f 	dsb	sy
 8018aa4:	60fb      	str	r3, [r7, #12]
 8018aa6:	bf00      	nop
 8018aa8:	bf00      	nop
 8018aaa:	e7fd      	b.n	8018aa8 <vTaskRemoveFromUnorderedEventList+0x54>
 8018aac:	6878      	ldr	r0, [r7, #4]
 8018aae:	f7fe fc13 	bl	80172d8 <uxListRemove>
 8018ab2:	697b      	ldr	r3, [r7, #20]
 8018ab4:	3304      	adds	r3, #4
 8018ab6:	4618      	mov	r0, r3
 8018ab8:	f7fe fc0e 	bl	80172d8 <uxListRemove>
 8018abc:	697b      	ldr	r3, [r7, #20]
 8018abe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ac0:	2201      	movs	r2, #1
 8018ac2:	409a      	lsls	r2, r3
 8018ac4:	4b11      	ldr	r3, [pc, #68]	@ (8018b0c <vTaskRemoveFromUnorderedEventList+0xb8>)
 8018ac6:	681b      	ldr	r3, [r3, #0]
 8018ac8:	4313      	orrs	r3, r2
 8018aca:	4a10      	ldr	r2, [pc, #64]	@ (8018b0c <vTaskRemoveFromUnorderedEventList+0xb8>)
 8018acc:	6013      	str	r3, [r2, #0]
 8018ace:	697b      	ldr	r3, [r7, #20]
 8018ad0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018ad2:	4613      	mov	r3, r2
 8018ad4:	009b      	lsls	r3, r3, #2
 8018ad6:	4413      	add	r3, r2
 8018ad8:	009b      	lsls	r3, r3, #2
 8018ada:	4a0d      	ldr	r2, [pc, #52]	@ (8018b10 <vTaskRemoveFromUnorderedEventList+0xbc>)
 8018adc:	441a      	add	r2, r3
 8018ade:	697b      	ldr	r3, [r7, #20]
 8018ae0:	3304      	adds	r3, #4
 8018ae2:	4619      	mov	r1, r3
 8018ae4:	4610      	mov	r0, r2
 8018ae6:	f7fe fb9a 	bl	801721e <vListInsertEnd>
 8018aea:	697b      	ldr	r3, [r7, #20]
 8018aec:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018aee:	4b09      	ldr	r3, [pc, #36]	@ (8018b14 <vTaskRemoveFromUnorderedEventList+0xc0>)
 8018af0:	681b      	ldr	r3, [r3, #0]
 8018af2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018af4:	429a      	cmp	r2, r3
 8018af6:	d902      	bls.n	8018afe <vTaskRemoveFromUnorderedEventList+0xaa>
 8018af8:	4b07      	ldr	r3, [pc, #28]	@ (8018b18 <vTaskRemoveFromUnorderedEventList+0xc4>)
 8018afa:	2201      	movs	r2, #1
 8018afc:	601a      	str	r2, [r3, #0]
 8018afe:	bf00      	nop
 8018b00:	3718      	adds	r7, #24
 8018b02:	46bd      	mov	sp, r7
 8018b04:	bd80      	pop	{r7, pc}
 8018b06:	bf00      	nop
 8018b08:	20003cd8 	.word	0x20003cd8
 8018b0c:	20003cb8 	.word	0x20003cb8
 8018b10:	20003b14 	.word	0x20003b14
 8018b14:	20003b10 	.word	0x20003b10
 8018b18:	20003cc4 	.word	0x20003cc4

08018b1c <vTaskInternalSetTimeOutState>:
 8018b1c:	b480      	push	{r7}
 8018b1e:	b083      	sub	sp, #12
 8018b20:	af00      	add	r7, sp, #0
 8018b22:	6078      	str	r0, [r7, #4]
 8018b24:	4b06      	ldr	r3, [pc, #24]	@ (8018b40 <vTaskInternalSetTimeOutState+0x24>)
 8018b26:	681a      	ldr	r2, [r3, #0]
 8018b28:	687b      	ldr	r3, [r7, #4]
 8018b2a:	601a      	str	r2, [r3, #0]
 8018b2c:	4b05      	ldr	r3, [pc, #20]	@ (8018b44 <vTaskInternalSetTimeOutState+0x28>)
 8018b2e:	681a      	ldr	r2, [r3, #0]
 8018b30:	687b      	ldr	r3, [r7, #4]
 8018b32:	605a      	str	r2, [r3, #4]
 8018b34:	bf00      	nop
 8018b36:	370c      	adds	r7, #12
 8018b38:	46bd      	mov	sp, r7
 8018b3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018b3e:	4770      	bx	lr
 8018b40:	20003cc8 	.word	0x20003cc8
 8018b44:	20003cb4 	.word	0x20003cb4

08018b48 <xTaskCheckForTimeOut>:
 8018b48:	b580      	push	{r7, lr}
 8018b4a:	b088      	sub	sp, #32
 8018b4c:	af00      	add	r7, sp, #0
 8018b4e:	6078      	str	r0, [r7, #4]
 8018b50:	6039      	str	r1, [r7, #0]
 8018b52:	687b      	ldr	r3, [r7, #4]
 8018b54:	2b00      	cmp	r3, #0
 8018b56:	d10b      	bne.n	8018b70 <xTaskCheckForTimeOut+0x28>
 8018b58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018b5c:	f383 8811 	msr	BASEPRI, r3
 8018b60:	f3bf 8f6f 	isb	sy
 8018b64:	f3bf 8f4f 	dsb	sy
 8018b68:	613b      	str	r3, [r7, #16]
 8018b6a:	bf00      	nop
 8018b6c:	bf00      	nop
 8018b6e:	e7fd      	b.n	8018b6c <xTaskCheckForTimeOut+0x24>
 8018b70:	683b      	ldr	r3, [r7, #0]
 8018b72:	2b00      	cmp	r3, #0
 8018b74:	d10b      	bne.n	8018b8e <xTaskCheckForTimeOut+0x46>
 8018b76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018b7a:	f383 8811 	msr	BASEPRI, r3
 8018b7e:	f3bf 8f6f 	isb	sy
 8018b82:	f3bf 8f4f 	dsb	sy
 8018b86:	60fb      	str	r3, [r7, #12]
 8018b88:	bf00      	nop
 8018b8a:	bf00      	nop
 8018b8c:	e7fd      	b.n	8018b8a <xTaskCheckForTimeOut+0x42>
 8018b8e:	f000 ffc3 	bl	8019b18 <vPortEnterCritical>
 8018b92:	4b1d      	ldr	r3, [pc, #116]	@ (8018c08 <xTaskCheckForTimeOut+0xc0>)
 8018b94:	681b      	ldr	r3, [r3, #0]
 8018b96:	61bb      	str	r3, [r7, #24]
 8018b98:	687b      	ldr	r3, [r7, #4]
 8018b9a:	685b      	ldr	r3, [r3, #4]
 8018b9c:	69ba      	ldr	r2, [r7, #24]
 8018b9e:	1ad3      	subs	r3, r2, r3
 8018ba0:	617b      	str	r3, [r7, #20]
 8018ba2:	683b      	ldr	r3, [r7, #0]
 8018ba4:	681b      	ldr	r3, [r3, #0]
 8018ba6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8018baa:	d102      	bne.n	8018bb2 <xTaskCheckForTimeOut+0x6a>
 8018bac:	2300      	movs	r3, #0
 8018bae:	61fb      	str	r3, [r7, #28]
 8018bb0:	e023      	b.n	8018bfa <xTaskCheckForTimeOut+0xb2>
 8018bb2:	687b      	ldr	r3, [r7, #4]
 8018bb4:	681a      	ldr	r2, [r3, #0]
 8018bb6:	4b15      	ldr	r3, [pc, #84]	@ (8018c0c <xTaskCheckForTimeOut+0xc4>)
 8018bb8:	681b      	ldr	r3, [r3, #0]
 8018bba:	429a      	cmp	r2, r3
 8018bbc:	d007      	beq.n	8018bce <xTaskCheckForTimeOut+0x86>
 8018bbe:	687b      	ldr	r3, [r7, #4]
 8018bc0:	685b      	ldr	r3, [r3, #4]
 8018bc2:	69ba      	ldr	r2, [r7, #24]
 8018bc4:	429a      	cmp	r2, r3
 8018bc6:	d302      	bcc.n	8018bce <xTaskCheckForTimeOut+0x86>
 8018bc8:	2301      	movs	r3, #1
 8018bca:	61fb      	str	r3, [r7, #28]
 8018bcc:	e015      	b.n	8018bfa <xTaskCheckForTimeOut+0xb2>
 8018bce:	683b      	ldr	r3, [r7, #0]
 8018bd0:	681b      	ldr	r3, [r3, #0]
 8018bd2:	697a      	ldr	r2, [r7, #20]
 8018bd4:	429a      	cmp	r2, r3
 8018bd6:	d20b      	bcs.n	8018bf0 <xTaskCheckForTimeOut+0xa8>
 8018bd8:	683b      	ldr	r3, [r7, #0]
 8018bda:	681a      	ldr	r2, [r3, #0]
 8018bdc:	697b      	ldr	r3, [r7, #20]
 8018bde:	1ad2      	subs	r2, r2, r3
 8018be0:	683b      	ldr	r3, [r7, #0]
 8018be2:	601a      	str	r2, [r3, #0]
 8018be4:	6878      	ldr	r0, [r7, #4]
 8018be6:	f7ff ff99 	bl	8018b1c <vTaskInternalSetTimeOutState>
 8018bea:	2300      	movs	r3, #0
 8018bec:	61fb      	str	r3, [r7, #28]
 8018bee:	e004      	b.n	8018bfa <xTaskCheckForTimeOut+0xb2>
 8018bf0:	683b      	ldr	r3, [r7, #0]
 8018bf2:	2200      	movs	r2, #0
 8018bf4:	601a      	str	r2, [r3, #0]
 8018bf6:	2301      	movs	r3, #1
 8018bf8:	61fb      	str	r3, [r7, #28]
 8018bfa:	f000 ffbf 	bl	8019b7c <vPortExitCritical>
 8018bfe:	69fb      	ldr	r3, [r7, #28]
 8018c00:	4618      	mov	r0, r3
 8018c02:	3720      	adds	r7, #32
 8018c04:	46bd      	mov	sp, r7
 8018c06:	bd80      	pop	{r7, pc}
 8018c08:	20003cb4 	.word	0x20003cb4
 8018c0c:	20003cc8 	.word	0x20003cc8

08018c10 <vTaskMissedYield>:
 8018c10:	b480      	push	{r7}
 8018c12:	af00      	add	r7, sp, #0
 8018c14:	4b03      	ldr	r3, [pc, #12]	@ (8018c24 <vTaskMissedYield+0x14>)
 8018c16:	2201      	movs	r2, #1
 8018c18:	601a      	str	r2, [r3, #0]
 8018c1a:	bf00      	nop
 8018c1c:	46bd      	mov	sp, r7
 8018c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018c22:	4770      	bx	lr
 8018c24:	20003cc4 	.word	0x20003cc4

08018c28 <prvIdleTask>:
 8018c28:	b580      	push	{r7, lr}
 8018c2a:	b082      	sub	sp, #8
 8018c2c:	af00      	add	r7, sp, #0
 8018c2e:	6078      	str	r0, [r7, #4]
 8018c30:	f000 f852 	bl	8018cd8 <prvCheckTasksWaitingTermination>
 8018c34:	4b06      	ldr	r3, [pc, #24]	@ (8018c50 <prvIdleTask+0x28>)
 8018c36:	681b      	ldr	r3, [r3, #0]
 8018c38:	2b01      	cmp	r3, #1
 8018c3a:	d9f9      	bls.n	8018c30 <prvIdleTask+0x8>
 8018c3c:	4b05      	ldr	r3, [pc, #20]	@ (8018c54 <prvIdleTask+0x2c>)
 8018c3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018c42:	601a      	str	r2, [r3, #0]
 8018c44:	f3bf 8f4f 	dsb	sy
 8018c48:	f3bf 8f6f 	isb	sy
 8018c4c:	e7f0      	b.n	8018c30 <prvIdleTask+0x8>
 8018c4e:	bf00      	nop
 8018c50:	20003b14 	.word	0x20003b14
 8018c54:	e000ed04 	.word	0xe000ed04

08018c58 <prvInitialiseTaskLists>:
 8018c58:	b580      	push	{r7, lr}
 8018c5a:	b082      	sub	sp, #8
 8018c5c:	af00      	add	r7, sp, #0
 8018c5e:	2300      	movs	r3, #0
 8018c60:	607b      	str	r3, [r7, #4]
 8018c62:	e00c      	b.n	8018c7e <prvInitialiseTaskLists+0x26>
 8018c64:	687a      	ldr	r2, [r7, #4]
 8018c66:	4613      	mov	r3, r2
 8018c68:	009b      	lsls	r3, r3, #2
 8018c6a:	4413      	add	r3, r2
 8018c6c:	009b      	lsls	r3, r3, #2
 8018c6e:	4a12      	ldr	r2, [pc, #72]	@ (8018cb8 <prvInitialiseTaskLists+0x60>)
 8018c70:	4413      	add	r3, r2
 8018c72:	4618      	mov	r0, r3
 8018c74:	f7fe faa6 	bl	80171c4 <vListInitialise>
 8018c78:	687b      	ldr	r3, [r7, #4]
 8018c7a:	3301      	adds	r3, #1
 8018c7c:	607b      	str	r3, [r7, #4]
 8018c7e:	687b      	ldr	r3, [r7, #4]
 8018c80:	2b0e      	cmp	r3, #14
 8018c82:	d9ef      	bls.n	8018c64 <prvInitialiseTaskLists+0xc>
 8018c84:	480d      	ldr	r0, [pc, #52]	@ (8018cbc <prvInitialiseTaskLists+0x64>)
 8018c86:	f7fe fa9d 	bl	80171c4 <vListInitialise>
 8018c8a:	480d      	ldr	r0, [pc, #52]	@ (8018cc0 <prvInitialiseTaskLists+0x68>)
 8018c8c:	f7fe fa9a 	bl	80171c4 <vListInitialise>
 8018c90:	480c      	ldr	r0, [pc, #48]	@ (8018cc4 <prvInitialiseTaskLists+0x6c>)
 8018c92:	f7fe fa97 	bl	80171c4 <vListInitialise>
 8018c96:	480c      	ldr	r0, [pc, #48]	@ (8018cc8 <prvInitialiseTaskLists+0x70>)
 8018c98:	f7fe fa94 	bl	80171c4 <vListInitialise>
 8018c9c:	480b      	ldr	r0, [pc, #44]	@ (8018ccc <prvInitialiseTaskLists+0x74>)
 8018c9e:	f7fe fa91 	bl	80171c4 <vListInitialise>
 8018ca2:	4b0b      	ldr	r3, [pc, #44]	@ (8018cd0 <prvInitialiseTaskLists+0x78>)
 8018ca4:	4a05      	ldr	r2, [pc, #20]	@ (8018cbc <prvInitialiseTaskLists+0x64>)
 8018ca6:	601a      	str	r2, [r3, #0]
 8018ca8:	4b0a      	ldr	r3, [pc, #40]	@ (8018cd4 <prvInitialiseTaskLists+0x7c>)
 8018caa:	4a05      	ldr	r2, [pc, #20]	@ (8018cc0 <prvInitialiseTaskLists+0x68>)
 8018cac:	601a      	str	r2, [r3, #0]
 8018cae:	bf00      	nop
 8018cb0:	3708      	adds	r7, #8
 8018cb2:	46bd      	mov	sp, r7
 8018cb4:	bd80      	pop	{r7, pc}
 8018cb6:	bf00      	nop
 8018cb8:	20003b14 	.word	0x20003b14
 8018cbc:	20003c40 	.word	0x20003c40
 8018cc0:	20003c54 	.word	0x20003c54
 8018cc4:	20003c70 	.word	0x20003c70
 8018cc8:	20003c84 	.word	0x20003c84
 8018ccc:	20003c9c 	.word	0x20003c9c
 8018cd0:	20003c68 	.word	0x20003c68
 8018cd4:	20003c6c 	.word	0x20003c6c

08018cd8 <prvCheckTasksWaitingTermination>:
 8018cd8:	b580      	push	{r7, lr}
 8018cda:	b082      	sub	sp, #8
 8018cdc:	af00      	add	r7, sp, #0
 8018cde:	e019      	b.n	8018d14 <prvCheckTasksWaitingTermination+0x3c>
 8018ce0:	f000 ff1a 	bl	8019b18 <vPortEnterCritical>
 8018ce4:	4b10      	ldr	r3, [pc, #64]	@ (8018d28 <prvCheckTasksWaitingTermination+0x50>)
 8018ce6:	68db      	ldr	r3, [r3, #12]
 8018ce8:	68db      	ldr	r3, [r3, #12]
 8018cea:	607b      	str	r3, [r7, #4]
 8018cec:	687b      	ldr	r3, [r7, #4]
 8018cee:	3304      	adds	r3, #4
 8018cf0:	4618      	mov	r0, r3
 8018cf2:	f7fe faf1 	bl	80172d8 <uxListRemove>
 8018cf6:	4b0d      	ldr	r3, [pc, #52]	@ (8018d2c <prvCheckTasksWaitingTermination+0x54>)
 8018cf8:	681b      	ldr	r3, [r3, #0]
 8018cfa:	3b01      	subs	r3, #1
 8018cfc:	4a0b      	ldr	r2, [pc, #44]	@ (8018d2c <prvCheckTasksWaitingTermination+0x54>)
 8018cfe:	6013      	str	r3, [r2, #0]
 8018d00:	4b0b      	ldr	r3, [pc, #44]	@ (8018d30 <prvCheckTasksWaitingTermination+0x58>)
 8018d02:	681b      	ldr	r3, [r3, #0]
 8018d04:	3b01      	subs	r3, #1
 8018d06:	4a0a      	ldr	r2, [pc, #40]	@ (8018d30 <prvCheckTasksWaitingTermination+0x58>)
 8018d08:	6013      	str	r3, [r2, #0]
 8018d0a:	f000 ff37 	bl	8019b7c <vPortExitCritical>
 8018d0e:	6878      	ldr	r0, [r7, #4]
 8018d10:	f000 f810 	bl	8018d34 <prvDeleteTCB>
 8018d14:	4b06      	ldr	r3, [pc, #24]	@ (8018d30 <prvCheckTasksWaitingTermination+0x58>)
 8018d16:	681b      	ldr	r3, [r3, #0]
 8018d18:	2b00      	cmp	r3, #0
 8018d1a:	d1e1      	bne.n	8018ce0 <prvCheckTasksWaitingTermination+0x8>
 8018d1c:	bf00      	nop
 8018d1e:	bf00      	nop
 8018d20:	3708      	adds	r7, #8
 8018d22:	46bd      	mov	sp, r7
 8018d24:	bd80      	pop	{r7, pc}
 8018d26:	bf00      	nop
 8018d28:	20003c84 	.word	0x20003c84
 8018d2c:	20003cb0 	.word	0x20003cb0
 8018d30:	20003c98 	.word	0x20003c98

08018d34 <prvDeleteTCB>:
 8018d34:	b580      	push	{r7, lr}
 8018d36:	b084      	sub	sp, #16
 8018d38:	af00      	add	r7, sp, #0
 8018d3a:	6078      	str	r0, [r7, #4]
 8018d3c:	687b      	ldr	r3, [r7, #4]
 8018d3e:	3358      	adds	r3, #88	@ 0x58
 8018d40:	4618      	mov	r0, r3
 8018d42:	f002 f887 	bl	801ae54 <_reclaim_reent>
 8018d46:	687b      	ldr	r3, [r7, #4]
 8018d48:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018d4c:	2b00      	cmp	r3, #0
 8018d4e:	d108      	bne.n	8018d62 <prvDeleteTCB+0x2e>
 8018d50:	687b      	ldr	r3, [r7, #4]
 8018d52:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018d54:	4618      	mov	r0, r3
 8018d56:	f001 f8cf 	bl	8019ef8 <vPortFree>
 8018d5a:	6878      	ldr	r0, [r7, #4]
 8018d5c:	f001 f8cc 	bl	8019ef8 <vPortFree>
 8018d60:	e019      	b.n	8018d96 <prvDeleteTCB+0x62>
 8018d62:	687b      	ldr	r3, [r7, #4]
 8018d64:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018d68:	2b01      	cmp	r3, #1
 8018d6a:	d103      	bne.n	8018d74 <prvDeleteTCB+0x40>
 8018d6c:	6878      	ldr	r0, [r7, #4]
 8018d6e:	f001 f8c3 	bl	8019ef8 <vPortFree>
 8018d72:	e010      	b.n	8018d96 <prvDeleteTCB+0x62>
 8018d74:	687b      	ldr	r3, [r7, #4]
 8018d76:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018d7a:	2b02      	cmp	r3, #2
 8018d7c:	d00b      	beq.n	8018d96 <prvDeleteTCB+0x62>
 8018d7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018d82:	f383 8811 	msr	BASEPRI, r3
 8018d86:	f3bf 8f6f 	isb	sy
 8018d8a:	f3bf 8f4f 	dsb	sy
 8018d8e:	60fb      	str	r3, [r7, #12]
 8018d90:	bf00      	nop
 8018d92:	bf00      	nop
 8018d94:	e7fd      	b.n	8018d92 <prvDeleteTCB+0x5e>
 8018d96:	bf00      	nop
 8018d98:	3710      	adds	r7, #16
 8018d9a:	46bd      	mov	sp, r7
 8018d9c:	bd80      	pop	{r7, pc}
	...

08018da0 <prvResetNextTaskUnblockTime>:
 8018da0:	b480      	push	{r7}
 8018da2:	b083      	sub	sp, #12
 8018da4:	af00      	add	r7, sp, #0
 8018da6:	4b0c      	ldr	r3, [pc, #48]	@ (8018dd8 <prvResetNextTaskUnblockTime+0x38>)
 8018da8:	681b      	ldr	r3, [r3, #0]
 8018daa:	681b      	ldr	r3, [r3, #0]
 8018dac:	2b00      	cmp	r3, #0
 8018dae:	d104      	bne.n	8018dba <prvResetNextTaskUnblockTime+0x1a>
 8018db0:	4b0a      	ldr	r3, [pc, #40]	@ (8018ddc <prvResetNextTaskUnblockTime+0x3c>)
 8018db2:	f04f 32ff 	mov.w	r2, #4294967295
 8018db6:	601a      	str	r2, [r3, #0]
 8018db8:	e008      	b.n	8018dcc <prvResetNextTaskUnblockTime+0x2c>
 8018dba:	4b07      	ldr	r3, [pc, #28]	@ (8018dd8 <prvResetNextTaskUnblockTime+0x38>)
 8018dbc:	681b      	ldr	r3, [r3, #0]
 8018dbe:	68db      	ldr	r3, [r3, #12]
 8018dc0:	68db      	ldr	r3, [r3, #12]
 8018dc2:	607b      	str	r3, [r7, #4]
 8018dc4:	687b      	ldr	r3, [r7, #4]
 8018dc6:	685b      	ldr	r3, [r3, #4]
 8018dc8:	4a04      	ldr	r2, [pc, #16]	@ (8018ddc <prvResetNextTaskUnblockTime+0x3c>)
 8018dca:	6013      	str	r3, [r2, #0]
 8018dcc:	bf00      	nop
 8018dce:	370c      	adds	r7, #12
 8018dd0:	46bd      	mov	sp, r7
 8018dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018dd6:	4770      	bx	lr
 8018dd8:	20003c68 	.word	0x20003c68
 8018ddc:	20003cd0 	.word	0x20003cd0

08018de0 <xTaskGetSchedulerState>:
 8018de0:	b480      	push	{r7}
 8018de2:	b083      	sub	sp, #12
 8018de4:	af00      	add	r7, sp, #0
 8018de6:	4b0b      	ldr	r3, [pc, #44]	@ (8018e14 <xTaskGetSchedulerState+0x34>)
 8018de8:	681b      	ldr	r3, [r3, #0]
 8018dea:	2b00      	cmp	r3, #0
 8018dec:	d102      	bne.n	8018df4 <xTaskGetSchedulerState+0x14>
 8018dee:	2301      	movs	r3, #1
 8018df0:	607b      	str	r3, [r7, #4]
 8018df2:	e008      	b.n	8018e06 <xTaskGetSchedulerState+0x26>
 8018df4:	4b08      	ldr	r3, [pc, #32]	@ (8018e18 <xTaskGetSchedulerState+0x38>)
 8018df6:	681b      	ldr	r3, [r3, #0]
 8018df8:	2b00      	cmp	r3, #0
 8018dfa:	d102      	bne.n	8018e02 <xTaskGetSchedulerState+0x22>
 8018dfc:	2302      	movs	r3, #2
 8018dfe:	607b      	str	r3, [r7, #4]
 8018e00:	e001      	b.n	8018e06 <xTaskGetSchedulerState+0x26>
 8018e02:	2300      	movs	r3, #0
 8018e04:	607b      	str	r3, [r7, #4]
 8018e06:	687b      	ldr	r3, [r7, #4]
 8018e08:	4618      	mov	r0, r3
 8018e0a:	370c      	adds	r7, #12
 8018e0c:	46bd      	mov	sp, r7
 8018e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018e12:	4770      	bx	lr
 8018e14:	20003cbc 	.word	0x20003cbc
 8018e18:	20003cd8 	.word	0x20003cd8

08018e1c <xTaskPriorityDisinherit>:
 8018e1c:	b580      	push	{r7, lr}
 8018e1e:	b086      	sub	sp, #24
 8018e20:	af00      	add	r7, sp, #0
 8018e22:	6078      	str	r0, [r7, #4]
 8018e24:	687b      	ldr	r3, [r7, #4]
 8018e26:	613b      	str	r3, [r7, #16]
 8018e28:	2300      	movs	r3, #0
 8018e2a:	617b      	str	r3, [r7, #20]
 8018e2c:	687b      	ldr	r3, [r7, #4]
 8018e2e:	2b00      	cmp	r3, #0
 8018e30:	d070      	beq.n	8018f14 <xTaskPriorityDisinherit+0xf8>
 8018e32:	4b3b      	ldr	r3, [pc, #236]	@ (8018f20 <xTaskPriorityDisinherit+0x104>)
 8018e34:	681b      	ldr	r3, [r3, #0]
 8018e36:	693a      	ldr	r2, [r7, #16]
 8018e38:	429a      	cmp	r2, r3
 8018e3a:	d00b      	beq.n	8018e54 <xTaskPriorityDisinherit+0x38>
 8018e3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018e40:	f383 8811 	msr	BASEPRI, r3
 8018e44:	f3bf 8f6f 	isb	sy
 8018e48:	f3bf 8f4f 	dsb	sy
 8018e4c:	60fb      	str	r3, [r7, #12]
 8018e4e:	bf00      	nop
 8018e50:	bf00      	nop
 8018e52:	e7fd      	b.n	8018e50 <xTaskPriorityDisinherit+0x34>
 8018e54:	693b      	ldr	r3, [r7, #16]
 8018e56:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018e58:	2b00      	cmp	r3, #0
 8018e5a:	d10b      	bne.n	8018e74 <xTaskPriorityDisinherit+0x58>
 8018e5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018e60:	f383 8811 	msr	BASEPRI, r3
 8018e64:	f3bf 8f6f 	isb	sy
 8018e68:	f3bf 8f4f 	dsb	sy
 8018e6c:	60bb      	str	r3, [r7, #8]
 8018e6e:	bf00      	nop
 8018e70:	bf00      	nop
 8018e72:	e7fd      	b.n	8018e70 <xTaskPriorityDisinherit+0x54>
 8018e74:	693b      	ldr	r3, [r7, #16]
 8018e76:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018e78:	1e5a      	subs	r2, r3, #1
 8018e7a:	693b      	ldr	r3, [r7, #16]
 8018e7c:	651a      	str	r2, [r3, #80]	@ 0x50
 8018e7e:	693b      	ldr	r3, [r7, #16]
 8018e80:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018e82:	693b      	ldr	r3, [r7, #16]
 8018e84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018e86:	429a      	cmp	r2, r3
 8018e88:	d044      	beq.n	8018f14 <xTaskPriorityDisinherit+0xf8>
 8018e8a:	693b      	ldr	r3, [r7, #16]
 8018e8c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018e8e:	2b00      	cmp	r3, #0
 8018e90:	d140      	bne.n	8018f14 <xTaskPriorityDisinherit+0xf8>
 8018e92:	693b      	ldr	r3, [r7, #16]
 8018e94:	3304      	adds	r3, #4
 8018e96:	4618      	mov	r0, r3
 8018e98:	f7fe fa1e 	bl	80172d8 <uxListRemove>
 8018e9c:	4603      	mov	r3, r0
 8018e9e:	2b00      	cmp	r3, #0
 8018ea0:	d115      	bne.n	8018ece <xTaskPriorityDisinherit+0xb2>
 8018ea2:	693b      	ldr	r3, [r7, #16]
 8018ea4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018ea6:	491f      	ldr	r1, [pc, #124]	@ (8018f24 <xTaskPriorityDisinherit+0x108>)
 8018ea8:	4613      	mov	r3, r2
 8018eaa:	009b      	lsls	r3, r3, #2
 8018eac:	4413      	add	r3, r2
 8018eae:	009b      	lsls	r3, r3, #2
 8018eb0:	440b      	add	r3, r1
 8018eb2:	681b      	ldr	r3, [r3, #0]
 8018eb4:	2b00      	cmp	r3, #0
 8018eb6:	d10a      	bne.n	8018ece <xTaskPriorityDisinherit+0xb2>
 8018eb8:	693b      	ldr	r3, [r7, #16]
 8018eba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ebc:	2201      	movs	r2, #1
 8018ebe:	fa02 f303 	lsl.w	r3, r2, r3
 8018ec2:	43da      	mvns	r2, r3
 8018ec4:	4b18      	ldr	r3, [pc, #96]	@ (8018f28 <xTaskPriorityDisinherit+0x10c>)
 8018ec6:	681b      	ldr	r3, [r3, #0]
 8018ec8:	4013      	ands	r3, r2
 8018eca:	4a17      	ldr	r2, [pc, #92]	@ (8018f28 <xTaskPriorityDisinherit+0x10c>)
 8018ecc:	6013      	str	r3, [r2, #0]
 8018ece:	693b      	ldr	r3, [r7, #16]
 8018ed0:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8018ed2:	693b      	ldr	r3, [r7, #16]
 8018ed4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8018ed6:	693b      	ldr	r3, [r7, #16]
 8018ed8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018eda:	f1c3 020f 	rsb	r2, r3, #15
 8018ede:	693b      	ldr	r3, [r7, #16]
 8018ee0:	619a      	str	r2, [r3, #24]
 8018ee2:	693b      	ldr	r3, [r7, #16]
 8018ee4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ee6:	2201      	movs	r2, #1
 8018ee8:	409a      	lsls	r2, r3
 8018eea:	4b0f      	ldr	r3, [pc, #60]	@ (8018f28 <xTaskPriorityDisinherit+0x10c>)
 8018eec:	681b      	ldr	r3, [r3, #0]
 8018eee:	4313      	orrs	r3, r2
 8018ef0:	4a0d      	ldr	r2, [pc, #52]	@ (8018f28 <xTaskPriorityDisinherit+0x10c>)
 8018ef2:	6013      	str	r3, [r2, #0]
 8018ef4:	693b      	ldr	r3, [r7, #16]
 8018ef6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018ef8:	4613      	mov	r3, r2
 8018efa:	009b      	lsls	r3, r3, #2
 8018efc:	4413      	add	r3, r2
 8018efe:	009b      	lsls	r3, r3, #2
 8018f00:	4a08      	ldr	r2, [pc, #32]	@ (8018f24 <xTaskPriorityDisinherit+0x108>)
 8018f02:	441a      	add	r2, r3
 8018f04:	693b      	ldr	r3, [r7, #16]
 8018f06:	3304      	adds	r3, #4
 8018f08:	4619      	mov	r1, r3
 8018f0a:	4610      	mov	r0, r2
 8018f0c:	f7fe f987 	bl	801721e <vListInsertEnd>
 8018f10:	2301      	movs	r3, #1
 8018f12:	617b      	str	r3, [r7, #20]
 8018f14:	697b      	ldr	r3, [r7, #20]
 8018f16:	4618      	mov	r0, r3
 8018f18:	3718      	adds	r7, #24
 8018f1a:	46bd      	mov	sp, r7
 8018f1c:	bd80      	pop	{r7, pc}
 8018f1e:	bf00      	nop
 8018f20:	20003b10 	.word	0x20003b10
 8018f24:	20003b14 	.word	0x20003b14
 8018f28:	20003cb8 	.word	0x20003cb8

08018f2c <ulTaskNotifyTake>:
 8018f2c:	b580      	push	{r7, lr}
 8018f2e:	b084      	sub	sp, #16
 8018f30:	af00      	add	r7, sp, #0
 8018f32:	6078      	str	r0, [r7, #4]
 8018f34:	6039      	str	r1, [r7, #0]
 8018f36:	f000 fdef 	bl	8019b18 <vPortEnterCritical>
 8018f3a:	4b20      	ldr	r3, [pc, #128]	@ (8018fbc <ulTaskNotifyTake+0x90>)
 8018f3c:	681b      	ldr	r3, [r3, #0]
 8018f3e:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8018f42:	2b00      	cmp	r3, #0
 8018f44:	d113      	bne.n	8018f6e <ulTaskNotifyTake+0x42>
 8018f46:	4b1d      	ldr	r3, [pc, #116]	@ (8018fbc <ulTaskNotifyTake+0x90>)
 8018f48:	681b      	ldr	r3, [r3, #0]
 8018f4a:	2201      	movs	r2, #1
 8018f4c:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8018f50:	683b      	ldr	r3, [r7, #0]
 8018f52:	2b00      	cmp	r3, #0
 8018f54:	d00b      	beq.n	8018f6e <ulTaskNotifyTake+0x42>
 8018f56:	2101      	movs	r1, #1
 8018f58:	6838      	ldr	r0, [r7, #0]
 8018f5a:	f000 f8c9 	bl	80190f0 <prvAddCurrentTaskToDelayedList>
 8018f5e:	4b18      	ldr	r3, [pc, #96]	@ (8018fc0 <ulTaskNotifyTake+0x94>)
 8018f60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018f64:	601a      	str	r2, [r3, #0]
 8018f66:	f3bf 8f4f 	dsb	sy
 8018f6a:	f3bf 8f6f 	isb	sy
 8018f6e:	f000 fe05 	bl	8019b7c <vPortExitCritical>
 8018f72:	f000 fdd1 	bl	8019b18 <vPortEnterCritical>
 8018f76:	4b11      	ldr	r3, [pc, #68]	@ (8018fbc <ulTaskNotifyTake+0x90>)
 8018f78:	681b      	ldr	r3, [r3, #0]
 8018f7a:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8018f7e:	60fb      	str	r3, [r7, #12]
 8018f80:	68fb      	ldr	r3, [r7, #12]
 8018f82:	2b00      	cmp	r3, #0
 8018f84:	d00e      	beq.n	8018fa4 <ulTaskNotifyTake+0x78>
 8018f86:	687b      	ldr	r3, [r7, #4]
 8018f88:	2b00      	cmp	r3, #0
 8018f8a:	d005      	beq.n	8018f98 <ulTaskNotifyTake+0x6c>
 8018f8c:	4b0b      	ldr	r3, [pc, #44]	@ (8018fbc <ulTaskNotifyTake+0x90>)
 8018f8e:	681b      	ldr	r3, [r3, #0]
 8018f90:	2200      	movs	r2, #0
 8018f92:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8018f96:	e005      	b.n	8018fa4 <ulTaskNotifyTake+0x78>
 8018f98:	4b08      	ldr	r3, [pc, #32]	@ (8018fbc <ulTaskNotifyTake+0x90>)
 8018f9a:	681b      	ldr	r3, [r3, #0]
 8018f9c:	68fa      	ldr	r2, [r7, #12]
 8018f9e:	3a01      	subs	r2, #1
 8018fa0:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8018fa4:	4b05      	ldr	r3, [pc, #20]	@ (8018fbc <ulTaskNotifyTake+0x90>)
 8018fa6:	681b      	ldr	r3, [r3, #0]
 8018fa8:	2200      	movs	r2, #0
 8018faa:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8018fae:	f000 fde5 	bl	8019b7c <vPortExitCritical>
 8018fb2:	68fb      	ldr	r3, [r7, #12]
 8018fb4:	4618      	mov	r0, r3
 8018fb6:	3710      	adds	r7, #16
 8018fb8:	46bd      	mov	sp, r7
 8018fba:	bd80      	pop	{r7, pc}
 8018fbc:	20003b10 	.word	0x20003b10
 8018fc0:	e000ed04 	.word	0xe000ed04

08018fc4 <vTaskNotifyGiveFromISR>:
 8018fc4:	b580      	push	{r7, lr}
 8018fc6:	b08a      	sub	sp, #40	@ 0x28
 8018fc8:	af00      	add	r7, sp, #0
 8018fca:	6078      	str	r0, [r7, #4]
 8018fcc:	6039      	str	r1, [r7, #0]
 8018fce:	687b      	ldr	r3, [r7, #4]
 8018fd0:	2b00      	cmp	r3, #0
 8018fd2:	d10b      	bne.n	8018fec <vTaskNotifyGiveFromISR+0x28>
 8018fd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018fd8:	f383 8811 	msr	BASEPRI, r3
 8018fdc:	f3bf 8f6f 	isb	sy
 8018fe0:	f3bf 8f4f 	dsb	sy
 8018fe4:	61bb      	str	r3, [r7, #24]
 8018fe6:	bf00      	nop
 8018fe8:	bf00      	nop
 8018fea:	e7fd      	b.n	8018fe8 <vTaskNotifyGiveFromISR+0x24>
 8018fec:	f000 fe74 	bl	8019cd8 <vPortValidateInterruptPriority>
 8018ff0:	687b      	ldr	r3, [r7, #4]
 8018ff2:	627b      	str	r3, [r7, #36]	@ 0x24
 8018ff4:	f3ef 8211 	mrs	r2, BASEPRI
 8018ff8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018ffc:	f383 8811 	msr	BASEPRI, r3
 8019000:	f3bf 8f6f 	isb	sy
 8019004:	f3bf 8f4f 	dsb	sy
 8019008:	617a      	str	r2, [r7, #20]
 801900a:	613b      	str	r3, [r7, #16]
 801900c:	697b      	ldr	r3, [r7, #20]
 801900e:	623b      	str	r3, [r7, #32]
 8019010:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019012:	f893 317c 	ldrb.w	r3, [r3, #380]	@ 0x17c
 8019016:	77fb      	strb	r3, [r7, #31]
 8019018:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801901a:	2202      	movs	r2, #2
 801901c:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8019020:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019022:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8019026:	1c5a      	adds	r2, r3, #1
 8019028:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801902a:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801902e:	7ffb      	ldrb	r3, [r7, #31]
 8019030:	2b01      	cmp	r3, #1
 8019032:	d146      	bne.n	80190c2 <vTaskNotifyGiveFromISR+0xfe>
 8019034:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019036:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019038:	2b00      	cmp	r3, #0
 801903a:	d00b      	beq.n	8019054 <vTaskNotifyGiveFromISR+0x90>
 801903c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019040:	f383 8811 	msr	BASEPRI, r3
 8019044:	f3bf 8f6f 	isb	sy
 8019048:	f3bf 8f4f 	dsb	sy
 801904c:	60fb      	str	r3, [r7, #12]
 801904e:	bf00      	nop
 8019050:	bf00      	nop
 8019052:	e7fd      	b.n	8019050 <vTaskNotifyGiveFromISR+0x8c>
 8019054:	4b20      	ldr	r3, [pc, #128]	@ (80190d8 <vTaskNotifyGiveFromISR+0x114>)
 8019056:	681b      	ldr	r3, [r3, #0]
 8019058:	2b00      	cmp	r3, #0
 801905a:	d11c      	bne.n	8019096 <vTaskNotifyGiveFromISR+0xd2>
 801905c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801905e:	3304      	adds	r3, #4
 8019060:	4618      	mov	r0, r3
 8019062:	f7fe f939 	bl	80172d8 <uxListRemove>
 8019066:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019068:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801906a:	2201      	movs	r2, #1
 801906c:	409a      	lsls	r2, r3
 801906e:	4b1b      	ldr	r3, [pc, #108]	@ (80190dc <vTaskNotifyGiveFromISR+0x118>)
 8019070:	681b      	ldr	r3, [r3, #0]
 8019072:	4313      	orrs	r3, r2
 8019074:	4a19      	ldr	r2, [pc, #100]	@ (80190dc <vTaskNotifyGiveFromISR+0x118>)
 8019076:	6013      	str	r3, [r2, #0]
 8019078:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801907a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801907c:	4613      	mov	r3, r2
 801907e:	009b      	lsls	r3, r3, #2
 8019080:	4413      	add	r3, r2
 8019082:	009b      	lsls	r3, r3, #2
 8019084:	4a16      	ldr	r2, [pc, #88]	@ (80190e0 <vTaskNotifyGiveFromISR+0x11c>)
 8019086:	441a      	add	r2, r3
 8019088:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801908a:	3304      	adds	r3, #4
 801908c:	4619      	mov	r1, r3
 801908e:	4610      	mov	r0, r2
 8019090:	f7fe f8c5 	bl	801721e <vListInsertEnd>
 8019094:	e005      	b.n	80190a2 <vTaskNotifyGiveFromISR+0xde>
 8019096:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019098:	3318      	adds	r3, #24
 801909a:	4619      	mov	r1, r3
 801909c:	4811      	ldr	r0, [pc, #68]	@ (80190e4 <vTaskNotifyGiveFromISR+0x120>)
 801909e:	f7fe f8be 	bl	801721e <vListInsertEnd>
 80190a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80190a6:	4b10      	ldr	r3, [pc, #64]	@ (80190e8 <vTaskNotifyGiveFromISR+0x124>)
 80190a8:	681b      	ldr	r3, [r3, #0]
 80190aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80190ac:	429a      	cmp	r2, r3
 80190ae:	d908      	bls.n	80190c2 <vTaskNotifyGiveFromISR+0xfe>
 80190b0:	683b      	ldr	r3, [r7, #0]
 80190b2:	2b00      	cmp	r3, #0
 80190b4:	d002      	beq.n	80190bc <vTaskNotifyGiveFromISR+0xf8>
 80190b6:	683b      	ldr	r3, [r7, #0]
 80190b8:	2201      	movs	r2, #1
 80190ba:	601a      	str	r2, [r3, #0]
 80190bc:	4b0b      	ldr	r3, [pc, #44]	@ (80190ec <vTaskNotifyGiveFromISR+0x128>)
 80190be:	2201      	movs	r2, #1
 80190c0:	601a      	str	r2, [r3, #0]
 80190c2:	6a3b      	ldr	r3, [r7, #32]
 80190c4:	60bb      	str	r3, [r7, #8]
 80190c6:	68bb      	ldr	r3, [r7, #8]
 80190c8:	f383 8811 	msr	BASEPRI, r3
 80190cc:	bf00      	nop
 80190ce:	bf00      	nop
 80190d0:	3728      	adds	r7, #40	@ 0x28
 80190d2:	46bd      	mov	sp, r7
 80190d4:	bd80      	pop	{r7, pc}
 80190d6:	bf00      	nop
 80190d8:	20003cd8 	.word	0x20003cd8
 80190dc:	20003cb8 	.word	0x20003cb8
 80190e0:	20003b14 	.word	0x20003b14
 80190e4:	20003c70 	.word	0x20003c70
 80190e8:	20003b10 	.word	0x20003b10
 80190ec:	20003cc4 	.word	0x20003cc4

080190f0 <prvAddCurrentTaskToDelayedList>:
 80190f0:	b580      	push	{r7, lr}
 80190f2:	b084      	sub	sp, #16
 80190f4:	af00      	add	r7, sp, #0
 80190f6:	6078      	str	r0, [r7, #4]
 80190f8:	6039      	str	r1, [r7, #0]
 80190fa:	4b29      	ldr	r3, [pc, #164]	@ (80191a0 <prvAddCurrentTaskToDelayedList+0xb0>)
 80190fc:	681b      	ldr	r3, [r3, #0]
 80190fe:	60fb      	str	r3, [r7, #12]
 8019100:	4b28      	ldr	r3, [pc, #160]	@ (80191a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019102:	681b      	ldr	r3, [r3, #0]
 8019104:	3304      	adds	r3, #4
 8019106:	4618      	mov	r0, r3
 8019108:	f7fe f8e6 	bl	80172d8 <uxListRemove>
 801910c:	4603      	mov	r3, r0
 801910e:	2b00      	cmp	r3, #0
 8019110:	d10b      	bne.n	801912a <prvAddCurrentTaskToDelayedList+0x3a>
 8019112:	4b24      	ldr	r3, [pc, #144]	@ (80191a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019114:	681b      	ldr	r3, [r3, #0]
 8019116:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019118:	2201      	movs	r2, #1
 801911a:	fa02 f303 	lsl.w	r3, r2, r3
 801911e:	43da      	mvns	r2, r3
 8019120:	4b21      	ldr	r3, [pc, #132]	@ (80191a8 <prvAddCurrentTaskToDelayedList+0xb8>)
 8019122:	681b      	ldr	r3, [r3, #0]
 8019124:	4013      	ands	r3, r2
 8019126:	4a20      	ldr	r2, [pc, #128]	@ (80191a8 <prvAddCurrentTaskToDelayedList+0xb8>)
 8019128:	6013      	str	r3, [r2, #0]
 801912a:	687b      	ldr	r3, [r7, #4]
 801912c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8019130:	d10a      	bne.n	8019148 <prvAddCurrentTaskToDelayedList+0x58>
 8019132:	683b      	ldr	r3, [r7, #0]
 8019134:	2b00      	cmp	r3, #0
 8019136:	d007      	beq.n	8019148 <prvAddCurrentTaskToDelayedList+0x58>
 8019138:	4b1a      	ldr	r3, [pc, #104]	@ (80191a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 801913a:	681b      	ldr	r3, [r3, #0]
 801913c:	3304      	adds	r3, #4
 801913e:	4619      	mov	r1, r3
 8019140:	481a      	ldr	r0, [pc, #104]	@ (80191ac <prvAddCurrentTaskToDelayedList+0xbc>)
 8019142:	f7fe f86c 	bl	801721e <vListInsertEnd>
 8019146:	e026      	b.n	8019196 <prvAddCurrentTaskToDelayedList+0xa6>
 8019148:	68fa      	ldr	r2, [r7, #12]
 801914a:	687b      	ldr	r3, [r7, #4]
 801914c:	4413      	add	r3, r2
 801914e:	60bb      	str	r3, [r7, #8]
 8019150:	4b14      	ldr	r3, [pc, #80]	@ (80191a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019152:	681b      	ldr	r3, [r3, #0]
 8019154:	68ba      	ldr	r2, [r7, #8]
 8019156:	605a      	str	r2, [r3, #4]
 8019158:	68ba      	ldr	r2, [r7, #8]
 801915a:	68fb      	ldr	r3, [r7, #12]
 801915c:	429a      	cmp	r2, r3
 801915e:	d209      	bcs.n	8019174 <prvAddCurrentTaskToDelayedList+0x84>
 8019160:	4b13      	ldr	r3, [pc, #76]	@ (80191b0 <prvAddCurrentTaskToDelayedList+0xc0>)
 8019162:	681a      	ldr	r2, [r3, #0]
 8019164:	4b0f      	ldr	r3, [pc, #60]	@ (80191a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019166:	681b      	ldr	r3, [r3, #0]
 8019168:	3304      	adds	r3, #4
 801916a:	4619      	mov	r1, r3
 801916c:	4610      	mov	r0, r2
 801916e:	f7fe f87a 	bl	8017266 <vListInsert>
 8019172:	e010      	b.n	8019196 <prvAddCurrentTaskToDelayedList+0xa6>
 8019174:	4b0f      	ldr	r3, [pc, #60]	@ (80191b4 <prvAddCurrentTaskToDelayedList+0xc4>)
 8019176:	681a      	ldr	r2, [r3, #0]
 8019178:	4b0a      	ldr	r3, [pc, #40]	@ (80191a4 <prvAddCurrentTaskToDelayedList+0xb4>)
 801917a:	681b      	ldr	r3, [r3, #0]
 801917c:	3304      	adds	r3, #4
 801917e:	4619      	mov	r1, r3
 8019180:	4610      	mov	r0, r2
 8019182:	f7fe f870 	bl	8017266 <vListInsert>
 8019186:	4b0c      	ldr	r3, [pc, #48]	@ (80191b8 <prvAddCurrentTaskToDelayedList+0xc8>)
 8019188:	681b      	ldr	r3, [r3, #0]
 801918a:	68ba      	ldr	r2, [r7, #8]
 801918c:	429a      	cmp	r2, r3
 801918e:	d202      	bcs.n	8019196 <prvAddCurrentTaskToDelayedList+0xa6>
 8019190:	4a09      	ldr	r2, [pc, #36]	@ (80191b8 <prvAddCurrentTaskToDelayedList+0xc8>)
 8019192:	68bb      	ldr	r3, [r7, #8]
 8019194:	6013      	str	r3, [r2, #0]
 8019196:	bf00      	nop
 8019198:	3710      	adds	r7, #16
 801919a:	46bd      	mov	sp, r7
 801919c:	bd80      	pop	{r7, pc}
 801919e:	bf00      	nop
 80191a0:	20003cb4 	.word	0x20003cb4
 80191a4:	20003b10 	.word	0x20003b10
 80191a8:	20003cb8 	.word	0x20003cb8
 80191ac:	20003c9c 	.word	0x20003c9c
 80191b0:	20003c6c 	.word	0x20003c6c
 80191b4:	20003c68 	.word	0x20003c68
 80191b8:	20003cd0 	.word	0x20003cd0

080191bc <xTimerCreateTimerTask>:
 80191bc:	b580      	push	{r7, lr}
 80191be:	b08a      	sub	sp, #40	@ 0x28
 80191c0:	af04      	add	r7, sp, #16
 80191c2:	2300      	movs	r3, #0
 80191c4:	617b      	str	r3, [r7, #20]
 80191c6:	f000 fb13 	bl	80197f0 <prvCheckForValidListAndQueue>
 80191ca:	4b1d      	ldr	r3, [pc, #116]	@ (8019240 <xTimerCreateTimerTask+0x84>)
 80191cc:	681b      	ldr	r3, [r3, #0]
 80191ce:	2b00      	cmp	r3, #0
 80191d0:	d021      	beq.n	8019216 <xTimerCreateTimerTask+0x5a>
 80191d2:	2300      	movs	r3, #0
 80191d4:	60fb      	str	r3, [r7, #12]
 80191d6:	2300      	movs	r3, #0
 80191d8:	60bb      	str	r3, [r7, #8]
 80191da:	1d3a      	adds	r2, r7, #4
 80191dc:	f107 0108 	add.w	r1, r7, #8
 80191e0:	f107 030c 	add.w	r3, r7, #12
 80191e4:	4618      	mov	r0, r3
 80191e6:	f7e9 ffe1 	bl	80031ac <vApplicationGetTimerTaskMemory>
 80191ea:	6879      	ldr	r1, [r7, #4]
 80191ec:	68bb      	ldr	r3, [r7, #8]
 80191ee:	68fa      	ldr	r2, [r7, #12]
 80191f0:	9202      	str	r2, [sp, #8]
 80191f2:	9301      	str	r3, [sp, #4]
 80191f4:	2302      	movs	r3, #2
 80191f6:	9300      	str	r3, [sp, #0]
 80191f8:	2300      	movs	r3, #0
 80191fa:	460a      	mov	r2, r1
 80191fc:	4911      	ldr	r1, [pc, #68]	@ (8019244 <xTimerCreateTimerTask+0x88>)
 80191fe:	4812      	ldr	r0, [pc, #72]	@ (8019248 <xTimerCreateTimerTask+0x8c>)
 8019200:	f7fe fe5a 	bl	8017eb8 <xTaskCreateStatic>
 8019204:	4603      	mov	r3, r0
 8019206:	4a11      	ldr	r2, [pc, #68]	@ (801924c <xTimerCreateTimerTask+0x90>)
 8019208:	6013      	str	r3, [r2, #0]
 801920a:	4b10      	ldr	r3, [pc, #64]	@ (801924c <xTimerCreateTimerTask+0x90>)
 801920c:	681b      	ldr	r3, [r3, #0]
 801920e:	2b00      	cmp	r3, #0
 8019210:	d001      	beq.n	8019216 <xTimerCreateTimerTask+0x5a>
 8019212:	2301      	movs	r3, #1
 8019214:	617b      	str	r3, [r7, #20]
 8019216:	697b      	ldr	r3, [r7, #20]
 8019218:	2b00      	cmp	r3, #0
 801921a:	d10b      	bne.n	8019234 <xTimerCreateTimerTask+0x78>
 801921c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019220:	f383 8811 	msr	BASEPRI, r3
 8019224:	f3bf 8f6f 	isb	sy
 8019228:	f3bf 8f4f 	dsb	sy
 801922c:	613b      	str	r3, [r7, #16]
 801922e:	bf00      	nop
 8019230:	bf00      	nop
 8019232:	e7fd      	b.n	8019230 <xTimerCreateTimerTask+0x74>
 8019234:	697b      	ldr	r3, [r7, #20]
 8019236:	4618      	mov	r0, r3
 8019238:	3718      	adds	r7, #24
 801923a:	46bd      	mov	sp, r7
 801923c:	bd80      	pop	{r7, pc}
 801923e:	bf00      	nop
 8019240:	20003d14 	.word	0x20003d14
 8019244:	08020f7c 	.word	0x08020f7c
 8019248:	08019389 	.word	0x08019389
 801924c:	20003d18 	.word	0x20003d18

08019250 <xTimerGenericCommand>:
 8019250:	b580      	push	{r7, lr}
 8019252:	b08a      	sub	sp, #40	@ 0x28
 8019254:	af00      	add	r7, sp, #0
 8019256:	60f8      	str	r0, [r7, #12]
 8019258:	60b9      	str	r1, [r7, #8]
 801925a:	607a      	str	r2, [r7, #4]
 801925c:	603b      	str	r3, [r7, #0]
 801925e:	2300      	movs	r3, #0
 8019260:	627b      	str	r3, [r7, #36]	@ 0x24
 8019262:	68fb      	ldr	r3, [r7, #12]
 8019264:	2b00      	cmp	r3, #0
 8019266:	d10b      	bne.n	8019280 <xTimerGenericCommand+0x30>
 8019268:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801926c:	f383 8811 	msr	BASEPRI, r3
 8019270:	f3bf 8f6f 	isb	sy
 8019274:	f3bf 8f4f 	dsb	sy
 8019278:	623b      	str	r3, [r7, #32]
 801927a:	bf00      	nop
 801927c:	bf00      	nop
 801927e:	e7fd      	b.n	801927c <xTimerGenericCommand+0x2c>
 8019280:	4b19      	ldr	r3, [pc, #100]	@ (80192e8 <xTimerGenericCommand+0x98>)
 8019282:	681b      	ldr	r3, [r3, #0]
 8019284:	2b00      	cmp	r3, #0
 8019286:	d02a      	beq.n	80192de <xTimerGenericCommand+0x8e>
 8019288:	68bb      	ldr	r3, [r7, #8]
 801928a:	613b      	str	r3, [r7, #16]
 801928c:	687b      	ldr	r3, [r7, #4]
 801928e:	617b      	str	r3, [r7, #20]
 8019290:	68fb      	ldr	r3, [r7, #12]
 8019292:	61bb      	str	r3, [r7, #24]
 8019294:	68bb      	ldr	r3, [r7, #8]
 8019296:	2b05      	cmp	r3, #5
 8019298:	dc18      	bgt.n	80192cc <xTimerGenericCommand+0x7c>
 801929a:	f7ff fda1 	bl	8018de0 <xTaskGetSchedulerState>
 801929e:	4603      	mov	r3, r0
 80192a0:	2b02      	cmp	r3, #2
 80192a2:	d109      	bne.n	80192b8 <xTimerGenericCommand+0x68>
 80192a4:	4b10      	ldr	r3, [pc, #64]	@ (80192e8 <xTimerGenericCommand+0x98>)
 80192a6:	6818      	ldr	r0, [r3, #0]
 80192a8:	f107 0110 	add.w	r1, r7, #16
 80192ac:	2300      	movs	r3, #0
 80192ae:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80192b0:	f7fe f982 	bl	80175b8 <xQueueGenericSend>
 80192b4:	6278      	str	r0, [r7, #36]	@ 0x24
 80192b6:	e012      	b.n	80192de <xTimerGenericCommand+0x8e>
 80192b8:	4b0b      	ldr	r3, [pc, #44]	@ (80192e8 <xTimerGenericCommand+0x98>)
 80192ba:	6818      	ldr	r0, [r3, #0]
 80192bc:	f107 0110 	add.w	r1, r7, #16
 80192c0:	2300      	movs	r3, #0
 80192c2:	2200      	movs	r2, #0
 80192c4:	f7fe f978 	bl	80175b8 <xQueueGenericSend>
 80192c8:	6278      	str	r0, [r7, #36]	@ 0x24
 80192ca:	e008      	b.n	80192de <xTimerGenericCommand+0x8e>
 80192cc:	4b06      	ldr	r3, [pc, #24]	@ (80192e8 <xTimerGenericCommand+0x98>)
 80192ce:	6818      	ldr	r0, [r3, #0]
 80192d0:	f107 0110 	add.w	r1, r7, #16
 80192d4:	2300      	movs	r3, #0
 80192d6:	683a      	ldr	r2, [r7, #0]
 80192d8:	f7fe fa70 	bl	80177bc <xQueueGenericSendFromISR>
 80192dc:	6278      	str	r0, [r7, #36]	@ 0x24
 80192de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80192e0:	4618      	mov	r0, r3
 80192e2:	3728      	adds	r7, #40	@ 0x28
 80192e4:	46bd      	mov	sp, r7
 80192e6:	bd80      	pop	{r7, pc}
 80192e8:	20003d14 	.word	0x20003d14

080192ec <prvProcessExpiredTimer>:
 80192ec:	b580      	push	{r7, lr}
 80192ee:	b088      	sub	sp, #32
 80192f0:	af02      	add	r7, sp, #8
 80192f2:	6078      	str	r0, [r7, #4]
 80192f4:	6039      	str	r1, [r7, #0]
 80192f6:	4b23      	ldr	r3, [pc, #140]	@ (8019384 <prvProcessExpiredTimer+0x98>)
 80192f8:	681b      	ldr	r3, [r3, #0]
 80192fa:	68db      	ldr	r3, [r3, #12]
 80192fc:	68db      	ldr	r3, [r3, #12]
 80192fe:	617b      	str	r3, [r7, #20]
 8019300:	697b      	ldr	r3, [r7, #20]
 8019302:	3304      	adds	r3, #4
 8019304:	4618      	mov	r0, r3
 8019306:	f7fd ffe7 	bl	80172d8 <uxListRemove>
 801930a:	697b      	ldr	r3, [r7, #20]
 801930c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019310:	f003 0304 	and.w	r3, r3, #4
 8019314:	2b00      	cmp	r3, #0
 8019316:	d023      	beq.n	8019360 <prvProcessExpiredTimer+0x74>
 8019318:	697b      	ldr	r3, [r7, #20]
 801931a:	699a      	ldr	r2, [r3, #24]
 801931c:	687b      	ldr	r3, [r7, #4]
 801931e:	18d1      	adds	r1, r2, r3
 8019320:	687b      	ldr	r3, [r7, #4]
 8019322:	683a      	ldr	r2, [r7, #0]
 8019324:	6978      	ldr	r0, [r7, #20]
 8019326:	f000 f8d5 	bl	80194d4 <prvInsertTimerInActiveList>
 801932a:	4603      	mov	r3, r0
 801932c:	2b00      	cmp	r3, #0
 801932e:	d020      	beq.n	8019372 <prvProcessExpiredTimer+0x86>
 8019330:	2300      	movs	r3, #0
 8019332:	9300      	str	r3, [sp, #0]
 8019334:	2300      	movs	r3, #0
 8019336:	687a      	ldr	r2, [r7, #4]
 8019338:	2100      	movs	r1, #0
 801933a:	6978      	ldr	r0, [r7, #20]
 801933c:	f7ff ff88 	bl	8019250 <xTimerGenericCommand>
 8019340:	6138      	str	r0, [r7, #16]
 8019342:	693b      	ldr	r3, [r7, #16]
 8019344:	2b00      	cmp	r3, #0
 8019346:	d114      	bne.n	8019372 <prvProcessExpiredTimer+0x86>
 8019348:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801934c:	f383 8811 	msr	BASEPRI, r3
 8019350:	f3bf 8f6f 	isb	sy
 8019354:	f3bf 8f4f 	dsb	sy
 8019358:	60fb      	str	r3, [r7, #12]
 801935a:	bf00      	nop
 801935c:	bf00      	nop
 801935e:	e7fd      	b.n	801935c <prvProcessExpiredTimer+0x70>
 8019360:	697b      	ldr	r3, [r7, #20]
 8019362:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019366:	f023 0301 	bic.w	r3, r3, #1
 801936a:	b2da      	uxtb	r2, r3
 801936c:	697b      	ldr	r3, [r7, #20]
 801936e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8019372:	697b      	ldr	r3, [r7, #20]
 8019374:	6a1b      	ldr	r3, [r3, #32]
 8019376:	6978      	ldr	r0, [r7, #20]
 8019378:	4798      	blx	r3
 801937a:	bf00      	nop
 801937c:	3718      	adds	r7, #24
 801937e:	46bd      	mov	sp, r7
 8019380:	bd80      	pop	{r7, pc}
 8019382:	bf00      	nop
 8019384:	20003d0c 	.word	0x20003d0c

08019388 <prvTimerTask>:
 8019388:	b580      	push	{r7, lr}
 801938a:	b084      	sub	sp, #16
 801938c:	af00      	add	r7, sp, #0
 801938e:	6078      	str	r0, [r7, #4]
 8019390:	f107 0308 	add.w	r3, r7, #8
 8019394:	4618      	mov	r0, r3
 8019396:	f000 f859 	bl	801944c <prvGetNextExpireTime>
 801939a:	60f8      	str	r0, [r7, #12]
 801939c:	68bb      	ldr	r3, [r7, #8]
 801939e:	4619      	mov	r1, r3
 80193a0:	68f8      	ldr	r0, [r7, #12]
 80193a2:	f000 f805 	bl	80193b0 <prvProcessTimerOrBlockTask>
 80193a6:	f000 f8d7 	bl	8019558 <prvProcessReceivedCommands>
 80193aa:	bf00      	nop
 80193ac:	e7f0      	b.n	8019390 <prvTimerTask+0x8>
	...

080193b0 <prvProcessTimerOrBlockTask>:
 80193b0:	b580      	push	{r7, lr}
 80193b2:	b084      	sub	sp, #16
 80193b4:	af00      	add	r7, sp, #0
 80193b6:	6078      	str	r0, [r7, #4]
 80193b8:	6039      	str	r1, [r7, #0]
 80193ba:	f7ff f88f 	bl	80184dc <vTaskSuspendAll>
 80193be:	f107 0308 	add.w	r3, r7, #8
 80193c2:	4618      	mov	r0, r3
 80193c4:	f000 f866 	bl	8019494 <prvSampleTimeNow>
 80193c8:	60f8      	str	r0, [r7, #12]
 80193ca:	68bb      	ldr	r3, [r7, #8]
 80193cc:	2b00      	cmp	r3, #0
 80193ce:	d130      	bne.n	8019432 <prvProcessTimerOrBlockTask+0x82>
 80193d0:	683b      	ldr	r3, [r7, #0]
 80193d2:	2b00      	cmp	r3, #0
 80193d4:	d10a      	bne.n	80193ec <prvProcessTimerOrBlockTask+0x3c>
 80193d6:	687a      	ldr	r2, [r7, #4]
 80193d8:	68fb      	ldr	r3, [r7, #12]
 80193da:	429a      	cmp	r2, r3
 80193dc:	d806      	bhi.n	80193ec <prvProcessTimerOrBlockTask+0x3c>
 80193de:	f7ff f88b 	bl	80184f8 <xTaskResumeAll>
 80193e2:	68f9      	ldr	r1, [r7, #12]
 80193e4:	6878      	ldr	r0, [r7, #4]
 80193e6:	f7ff ff81 	bl	80192ec <prvProcessExpiredTimer>
 80193ea:	e024      	b.n	8019436 <prvProcessTimerOrBlockTask+0x86>
 80193ec:	683b      	ldr	r3, [r7, #0]
 80193ee:	2b00      	cmp	r3, #0
 80193f0:	d008      	beq.n	8019404 <prvProcessTimerOrBlockTask+0x54>
 80193f2:	4b13      	ldr	r3, [pc, #76]	@ (8019440 <prvProcessTimerOrBlockTask+0x90>)
 80193f4:	681b      	ldr	r3, [r3, #0]
 80193f6:	681b      	ldr	r3, [r3, #0]
 80193f8:	2b00      	cmp	r3, #0
 80193fa:	d101      	bne.n	8019400 <prvProcessTimerOrBlockTask+0x50>
 80193fc:	2301      	movs	r3, #1
 80193fe:	e000      	b.n	8019402 <prvProcessTimerOrBlockTask+0x52>
 8019400:	2300      	movs	r3, #0
 8019402:	603b      	str	r3, [r7, #0]
 8019404:	4b0f      	ldr	r3, [pc, #60]	@ (8019444 <prvProcessTimerOrBlockTask+0x94>)
 8019406:	6818      	ldr	r0, [r3, #0]
 8019408:	687a      	ldr	r2, [r7, #4]
 801940a:	68fb      	ldr	r3, [r7, #12]
 801940c:	1ad3      	subs	r3, r2, r3
 801940e:	683a      	ldr	r2, [r7, #0]
 8019410:	4619      	mov	r1, r3
 8019412:	f7fe fd1d 	bl	8017e50 <vQueueWaitForMessageRestricted>
 8019416:	f7ff f86f 	bl	80184f8 <xTaskResumeAll>
 801941a:	4603      	mov	r3, r0
 801941c:	2b00      	cmp	r3, #0
 801941e:	d10a      	bne.n	8019436 <prvProcessTimerOrBlockTask+0x86>
 8019420:	4b09      	ldr	r3, [pc, #36]	@ (8019448 <prvProcessTimerOrBlockTask+0x98>)
 8019422:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8019426:	601a      	str	r2, [r3, #0]
 8019428:	f3bf 8f4f 	dsb	sy
 801942c:	f3bf 8f6f 	isb	sy
 8019430:	e001      	b.n	8019436 <prvProcessTimerOrBlockTask+0x86>
 8019432:	f7ff f861 	bl	80184f8 <xTaskResumeAll>
 8019436:	bf00      	nop
 8019438:	3710      	adds	r7, #16
 801943a:	46bd      	mov	sp, r7
 801943c:	bd80      	pop	{r7, pc}
 801943e:	bf00      	nop
 8019440:	20003d10 	.word	0x20003d10
 8019444:	20003d14 	.word	0x20003d14
 8019448:	e000ed04 	.word	0xe000ed04

0801944c <prvGetNextExpireTime>:
 801944c:	b480      	push	{r7}
 801944e:	b085      	sub	sp, #20
 8019450:	af00      	add	r7, sp, #0
 8019452:	6078      	str	r0, [r7, #4]
 8019454:	4b0e      	ldr	r3, [pc, #56]	@ (8019490 <prvGetNextExpireTime+0x44>)
 8019456:	681b      	ldr	r3, [r3, #0]
 8019458:	681b      	ldr	r3, [r3, #0]
 801945a:	2b00      	cmp	r3, #0
 801945c:	d101      	bne.n	8019462 <prvGetNextExpireTime+0x16>
 801945e:	2201      	movs	r2, #1
 8019460:	e000      	b.n	8019464 <prvGetNextExpireTime+0x18>
 8019462:	2200      	movs	r2, #0
 8019464:	687b      	ldr	r3, [r7, #4]
 8019466:	601a      	str	r2, [r3, #0]
 8019468:	687b      	ldr	r3, [r7, #4]
 801946a:	681b      	ldr	r3, [r3, #0]
 801946c:	2b00      	cmp	r3, #0
 801946e:	d105      	bne.n	801947c <prvGetNextExpireTime+0x30>
 8019470:	4b07      	ldr	r3, [pc, #28]	@ (8019490 <prvGetNextExpireTime+0x44>)
 8019472:	681b      	ldr	r3, [r3, #0]
 8019474:	68db      	ldr	r3, [r3, #12]
 8019476:	681b      	ldr	r3, [r3, #0]
 8019478:	60fb      	str	r3, [r7, #12]
 801947a:	e001      	b.n	8019480 <prvGetNextExpireTime+0x34>
 801947c:	2300      	movs	r3, #0
 801947e:	60fb      	str	r3, [r7, #12]
 8019480:	68fb      	ldr	r3, [r7, #12]
 8019482:	4618      	mov	r0, r3
 8019484:	3714      	adds	r7, #20
 8019486:	46bd      	mov	sp, r7
 8019488:	f85d 7b04 	ldr.w	r7, [sp], #4
 801948c:	4770      	bx	lr
 801948e:	bf00      	nop
 8019490:	20003d0c 	.word	0x20003d0c

08019494 <prvSampleTimeNow>:
 8019494:	b580      	push	{r7, lr}
 8019496:	b084      	sub	sp, #16
 8019498:	af00      	add	r7, sp, #0
 801949a:	6078      	str	r0, [r7, #4]
 801949c:	f7ff f8ca 	bl	8018634 <xTaskGetTickCount>
 80194a0:	60f8      	str	r0, [r7, #12]
 80194a2:	4b0b      	ldr	r3, [pc, #44]	@ (80194d0 <prvSampleTimeNow+0x3c>)
 80194a4:	681b      	ldr	r3, [r3, #0]
 80194a6:	68fa      	ldr	r2, [r7, #12]
 80194a8:	429a      	cmp	r2, r3
 80194aa:	d205      	bcs.n	80194b8 <prvSampleTimeNow+0x24>
 80194ac:	f000 f93a 	bl	8019724 <prvSwitchTimerLists>
 80194b0:	687b      	ldr	r3, [r7, #4]
 80194b2:	2201      	movs	r2, #1
 80194b4:	601a      	str	r2, [r3, #0]
 80194b6:	e002      	b.n	80194be <prvSampleTimeNow+0x2a>
 80194b8:	687b      	ldr	r3, [r7, #4]
 80194ba:	2200      	movs	r2, #0
 80194bc:	601a      	str	r2, [r3, #0]
 80194be:	4a04      	ldr	r2, [pc, #16]	@ (80194d0 <prvSampleTimeNow+0x3c>)
 80194c0:	68fb      	ldr	r3, [r7, #12]
 80194c2:	6013      	str	r3, [r2, #0]
 80194c4:	68fb      	ldr	r3, [r7, #12]
 80194c6:	4618      	mov	r0, r3
 80194c8:	3710      	adds	r7, #16
 80194ca:	46bd      	mov	sp, r7
 80194cc:	bd80      	pop	{r7, pc}
 80194ce:	bf00      	nop
 80194d0:	20003d1c 	.word	0x20003d1c

080194d4 <prvInsertTimerInActiveList>:
 80194d4:	b580      	push	{r7, lr}
 80194d6:	b086      	sub	sp, #24
 80194d8:	af00      	add	r7, sp, #0
 80194da:	60f8      	str	r0, [r7, #12]
 80194dc:	60b9      	str	r1, [r7, #8]
 80194de:	607a      	str	r2, [r7, #4]
 80194e0:	603b      	str	r3, [r7, #0]
 80194e2:	2300      	movs	r3, #0
 80194e4:	617b      	str	r3, [r7, #20]
 80194e6:	68fb      	ldr	r3, [r7, #12]
 80194e8:	68ba      	ldr	r2, [r7, #8]
 80194ea:	605a      	str	r2, [r3, #4]
 80194ec:	68fb      	ldr	r3, [r7, #12]
 80194ee:	68fa      	ldr	r2, [r7, #12]
 80194f0:	611a      	str	r2, [r3, #16]
 80194f2:	68ba      	ldr	r2, [r7, #8]
 80194f4:	687b      	ldr	r3, [r7, #4]
 80194f6:	429a      	cmp	r2, r3
 80194f8:	d812      	bhi.n	8019520 <prvInsertTimerInActiveList+0x4c>
 80194fa:	687a      	ldr	r2, [r7, #4]
 80194fc:	683b      	ldr	r3, [r7, #0]
 80194fe:	1ad2      	subs	r2, r2, r3
 8019500:	68fb      	ldr	r3, [r7, #12]
 8019502:	699b      	ldr	r3, [r3, #24]
 8019504:	429a      	cmp	r2, r3
 8019506:	d302      	bcc.n	801950e <prvInsertTimerInActiveList+0x3a>
 8019508:	2301      	movs	r3, #1
 801950a:	617b      	str	r3, [r7, #20]
 801950c:	e01b      	b.n	8019546 <prvInsertTimerInActiveList+0x72>
 801950e:	4b10      	ldr	r3, [pc, #64]	@ (8019550 <prvInsertTimerInActiveList+0x7c>)
 8019510:	681a      	ldr	r2, [r3, #0]
 8019512:	68fb      	ldr	r3, [r7, #12]
 8019514:	3304      	adds	r3, #4
 8019516:	4619      	mov	r1, r3
 8019518:	4610      	mov	r0, r2
 801951a:	f7fd fea4 	bl	8017266 <vListInsert>
 801951e:	e012      	b.n	8019546 <prvInsertTimerInActiveList+0x72>
 8019520:	687a      	ldr	r2, [r7, #4]
 8019522:	683b      	ldr	r3, [r7, #0]
 8019524:	429a      	cmp	r2, r3
 8019526:	d206      	bcs.n	8019536 <prvInsertTimerInActiveList+0x62>
 8019528:	68ba      	ldr	r2, [r7, #8]
 801952a:	683b      	ldr	r3, [r7, #0]
 801952c:	429a      	cmp	r2, r3
 801952e:	d302      	bcc.n	8019536 <prvInsertTimerInActiveList+0x62>
 8019530:	2301      	movs	r3, #1
 8019532:	617b      	str	r3, [r7, #20]
 8019534:	e007      	b.n	8019546 <prvInsertTimerInActiveList+0x72>
 8019536:	4b07      	ldr	r3, [pc, #28]	@ (8019554 <prvInsertTimerInActiveList+0x80>)
 8019538:	681a      	ldr	r2, [r3, #0]
 801953a:	68fb      	ldr	r3, [r7, #12]
 801953c:	3304      	adds	r3, #4
 801953e:	4619      	mov	r1, r3
 8019540:	4610      	mov	r0, r2
 8019542:	f7fd fe90 	bl	8017266 <vListInsert>
 8019546:	697b      	ldr	r3, [r7, #20]
 8019548:	4618      	mov	r0, r3
 801954a:	3718      	adds	r7, #24
 801954c:	46bd      	mov	sp, r7
 801954e:	bd80      	pop	{r7, pc}
 8019550:	20003d10 	.word	0x20003d10
 8019554:	20003d0c 	.word	0x20003d0c

08019558 <prvProcessReceivedCommands>:
 8019558:	b580      	push	{r7, lr}
 801955a:	b08e      	sub	sp, #56	@ 0x38
 801955c:	af02      	add	r7, sp, #8
 801955e:	e0ce      	b.n	80196fe <prvProcessReceivedCommands+0x1a6>
 8019560:	687b      	ldr	r3, [r7, #4]
 8019562:	2b00      	cmp	r3, #0
 8019564:	da19      	bge.n	801959a <prvProcessReceivedCommands+0x42>
 8019566:	1d3b      	adds	r3, r7, #4
 8019568:	3304      	adds	r3, #4
 801956a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801956c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801956e:	2b00      	cmp	r3, #0
 8019570:	d10b      	bne.n	801958a <prvProcessReceivedCommands+0x32>
 8019572:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019576:	f383 8811 	msr	BASEPRI, r3
 801957a:	f3bf 8f6f 	isb	sy
 801957e:	f3bf 8f4f 	dsb	sy
 8019582:	61fb      	str	r3, [r7, #28]
 8019584:	bf00      	nop
 8019586:	bf00      	nop
 8019588:	e7fd      	b.n	8019586 <prvProcessReceivedCommands+0x2e>
 801958a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801958c:	681b      	ldr	r3, [r3, #0]
 801958e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8019590:	6850      	ldr	r0, [r2, #4]
 8019592:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8019594:	6892      	ldr	r2, [r2, #8]
 8019596:	4611      	mov	r1, r2
 8019598:	4798      	blx	r3
 801959a:	687b      	ldr	r3, [r7, #4]
 801959c:	2b00      	cmp	r3, #0
 801959e:	f2c0 80ae 	blt.w	80196fe <prvProcessReceivedCommands+0x1a6>
 80195a2:	68fb      	ldr	r3, [r7, #12]
 80195a4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80195a6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80195a8:	695b      	ldr	r3, [r3, #20]
 80195aa:	2b00      	cmp	r3, #0
 80195ac:	d004      	beq.n	80195b8 <prvProcessReceivedCommands+0x60>
 80195ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80195b0:	3304      	adds	r3, #4
 80195b2:	4618      	mov	r0, r3
 80195b4:	f7fd fe90 	bl	80172d8 <uxListRemove>
 80195b8:	463b      	mov	r3, r7
 80195ba:	4618      	mov	r0, r3
 80195bc:	f7ff ff6a 	bl	8019494 <prvSampleTimeNow>
 80195c0:	6278      	str	r0, [r7, #36]	@ 0x24
 80195c2:	687b      	ldr	r3, [r7, #4]
 80195c4:	2b09      	cmp	r3, #9
 80195c6:	f200 8097 	bhi.w	80196f8 <prvProcessReceivedCommands+0x1a0>
 80195ca:	a201      	add	r2, pc, #4	@ (adr r2, 80195d0 <prvProcessReceivedCommands+0x78>)
 80195cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80195d0:	080195f9 	.word	0x080195f9
 80195d4:	080195f9 	.word	0x080195f9
 80195d8:	080195f9 	.word	0x080195f9
 80195dc:	0801966f 	.word	0x0801966f
 80195e0:	08019683 	.word	0x08019683
 80195e4:	080196cf 	.word	0x080196cf
 80195e8:	080195f9 	.word	0x080195f9
 80195ec:	080195f9 	.word	0x080195f9
 80195f0:	0801966f 	.word	0x0801966f
 80195f4:	08019683 	.word	0x08019683
 80195f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80195fa:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80195fe:	f043 0301 	orr.w	r3, r3, #1
 8019602:	b2da      	uxtb	r2, r3
 8019604:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019606:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801960a:	68ba      	ldr	r2, [r7, #8]
 801960c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801960e:	699b      	ldr	r3, [r3, #24]
 8019610:	18d1      	adds	r1, r2, r3
 8019612:	68bb      	ldr	r3, [r7, #8]
 8019614:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019616:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019618:	f7ff ff5c 	bl	80194d4 <prvInsertTimerInActiveList>
 801961c:	4603      	mov	r3, r0
 801961e:	2b00      	cmp	r3, #0
 8019620:	d06c      	beq.n	80196fc <prvProcessReceivedCommands+0x1a4>
 8019622:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019624:	6a1b      	ldr	r3, [r3, #32]
 8019626:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019628:	4798      	blx	r3
 801962a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801962c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019630:	f003 0304 	and.w	r3, r3, #4
 8019634:	2b00      	cmp	r3, #0
 8019636:	d061      	beq.n	80196fc <prvProcessReceivedCommands+0x1a4>
 8019638:	68ba      	ldr	r2, [r7, #8]
 801963a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801963c:	699b      	ldr	r3, [r3, #24]
 801963e:	441a      	add	r2, r3
 8019640:	2300      	movs	r3, #0
 8019642:	9300      	str	r3, [sp, #0]
 8019644:	2300      	movs	r3, #0
 8019646:	2100      	movs	r1, #0
 8019648:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801964a:	f7ff fe01 	bl	8019250 <xTimerGenericCommand>
 801964e:	6238      	str	r0, [r7, #32]
 8019650:	6a3b      	ldr	r3, [r7, #32]
 8019652:	2b00      	cmp	r3, #0
 8019654:	d152      	bne.n	80196fc <prvProcessReceivedCommands+0x1a4>
 8019656:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801965a:	f383 8811 	msr	BASEPRI, r3
 801965e:	f3bf 8f6f 	isb	sy
 8019662:	f3bf 8f4f 	dsb	sy
 8019666:	61bb      	str	r3, [r7, #24]
 8019668:	bf00      	nop
 801966a:	bf00      	nop
 801966c:	e7fd      	b.n	801966a <prvProcessReceivedCommands+0x112>
 801966e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019670:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019674:	f023 0301 	bic.w	r3, r3, #1
 8019678:	b2da      	uxtb	r2, r3
 801967a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801967c:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8019680:	e03d      	b.n	80196fe <prvProcessReceivedCommands+0x1a6>
 8019682:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019684:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019688:	f043 0301 	orr.w	r3, r3, #1
 801968c:	b2da      	uxtb	r2, r3
 801968e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019690:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8019694:	68ba      	ldr	r2, [r7, #8]
 8019696:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019698:	619a      	str	r2, [r3, #24]
 801969a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801969c:	699b      	ldr	r3, [r3, #24]
 801969e:	2b00      	cmp	r3, #0
 80196a0:	d10b      	bne.n	80196ba <prvProcessReceivedCommands+0x162>
 80196a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80196a6:	f383 8811 	msr	BASEPRI, r3
 80196aa:	f3bf 8f6f 	isb	sy
 80196ae:	f3bf 8f4f 	dsb	sy
 80196b2:	617b      	str	r3, [r7, #20]
 80196b4:	bf00      	nop
 80196b6:	bf00      	nop
 80196b8:	e7fd      	b.n	80196b6 <prvProcessReceivedCommands+0x15e>
 80196ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196bc:	699a      	ldr	r2, [r3, #24]
 80196be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80196c0:	18d1      	adds	r1, r2, r3
 80196c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80196c4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80196c6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80196c8:	f7ff ff04 	bl	80194d4 <prvInsertTimerInActiveList>
 80196cc:	e017      	b.n	80196fe <prvProcessReceivedCommands+0x1a6>
 80196ce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196d0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80196d4:	f003 0302 	and.w	r3, r3, #2
 80196d8:	2b00      	cmp	r3, #0
 80196da:	d103      	bne.n	80196e4 <prvProcessReceivedCommands+0x18c>
 80196dc:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80196de:	f000 fc0b 	bl	8019ef8 <vPortFree>
 80196e2:	e00c      	b.n	80196fe <prvProcessReceivedCommands+0x1a6>
 80196e4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196e6:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80196ea:	f023 0301 	bic.w	r3, r3, #1
 80196ee:	b2da      	uxtb	r2, r3
 80196f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196f2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80196f6:	e002      	b.n	80196fe <prvProcessReceivedCommands+0x1a6>
 80196f8:	bf00      	nop
 80196fa:	e000      	b.n	80196fe <prvProcessReceivedCommands+0x1a6>
 80196fc:	bf00      	nop
 80196fe:	4b08      	ldr	r3, [pc, #32]	@ (8019720 <prvProcessReceivedCommands+0x1c8>)
 8019700:	681b      	ldr	r3, [r3, #0]
 8019702:	1d39      	adds	r1, r7, #4
 8019704:	2200      	movs	r2, #0
 8019706:	4618      	mov	r0, r3
 8019708:	f7fe f986 	bl	8017a18 <xQueueReceive>
 801970c:	4603      	mov	r3, r0
 801970e:	2b00      	cmp	r3, #0
 8019710:	f47f af26 	bne.w	8019560 <prvProcessReceivedCommands+0x8>
 8019714:	bf00      	nop
 8019716:	bf00      	nop
 8019718:	3730      	adds	r7, #48	@ 0x30
 801971a:	46bd      	mov	sp, r7
 801971c:	bd80      	pop	{r7, pc}
 801971e:	bf00      	nop
 8019720:	20003d14 	.word	0x20003d14

08019724 <prvSwitchTimerLists>:
 8019724:	b580      	push	{r7, lr}
 8019726:	b088      	sub	sp, #32
 8019728:	af02      	add	r7, sp, #8
 801972a:	e049      	b.n	80197c0 <prvSwitchTimerLists+0x9c>
 801972c:	4b2e      	ldr	r3, [pc, #184]	@ (80197e8 <prvSwitchTimerLists+0xc4>)
 801972e:	681b      	ldr	r3, [r3, #0]
 8019730:	68db      	ldr	r3, [r3, #12]
 8019732:	681b      	ldr	r3, [r3, #0]
 8019734:	613b      	str	r3, [r7, #16]
 8019736:	4b2c      	ldr	r3, [pc, #176]	@ (80197e8 <prvSwitchTimerLists+0xc4>)
 8019738:	681b      	ldr	r3, [r3, #0]
 801973a:	68db      	ldr	r3, [r3, #12]
 801973c:	68db      	ldr	r3, [r3, #12]
 801973e:	60fb      	str	r3, [r7, #12]
 8019740:	68fb      	ldr	r3, [r7, #12]
 8019742:	3304      	adds	r3, #4
 8019744:	4618      	mov	r0, r3
 8019746:	f7fd fdc7 	bl	80172d8 <uxListRemove>
 801974a:	68fb      	ldr	r3, [r7, #12]
 801974c:	6a1b      	ldr	r3, [r3, #32]
 801974e:	68f8      	ldr	r0, [r7, #12]
 8019750:	4798      	blx	r3
 8019752:	68fb      	ldr	r3, [r7, #12]
 8019754:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019758:	f003 0304 	and.w	r3, r3, #4
 801975c:	2b00      	cmp	r3, #0
 801975e:	d02f      	beq.n	80197c0 <prvSwitchTimerLists+0x9c>
 8019760:	68fb      	ldr	r3, [r7, #12]
 8019762:	699b      	ldr	r3, [r3, #24]
 8019764:	693a      	ldr	r2, [r7, #16]
 8019766:	4413      	add	r3, r2
 8019768:	60bb      	str	r3, [r7, #8]
 801976a:	68ba      	ldr	r2, [r7, #8]
 801976c:	693b      	ldr	r3, [r7, #16]
 801976e:	429a      	cmp	r2, r3
 8019770:	d90e      	bls.n	8019790 <prvSwitchTimerLists+0x6c>
 8019772:	68fb      	ldr	r3, [r7, #12]
 8019774:	68ba      	ldr	r2, [r7, #8]
 8019776:	605a      	str	r2, [r3, #4]
 8019778:	68fb      	ldr	r3, [r7, #12]
 801977a:	68fa      	ldr	r2, [r7, #12]
 801977c:	611a      	str	r2, [r3, #16]
 801977e:	4b1a      	ldr	r3, [pc, #104]	@ (80197e8 <prvSwitchTimerLists+0xc4>)
 8019780:	681a      	ldr	r2, [r3, #0]
 8019782:	68fb      	ldr	r3, [r7, #12]
 8019784:	3304      	adds	r3, #4
 8019786:	4619      	mov	r1, r3
 8019788:	4610      	mov	r0, r2
 801978a:	f7fd fd6c 	bl	8017266 <vListInsert>
 801978e:	e017      	b.n	80197c0 <prvSwitchTimerLists+0x9c>
 8019790:	2300      	movs	r3, #0
 8019792:	9300      	str	r3, [sp, #0]
 8019794:	2300      	movs	r3, #0
 8019796:	693a      	ldr	r2, [r7, #16]
 8019798:	2100      	movs	r1, #0
 801979a:	68f8      	ldr	r0, [r7, #12]
 801979c:	f7ff fd58 	bl	8019250 <xTimerGenericCommand>
 80197a0:	6078      	str	r0, [r7, #4]
 80197a2:	687b      	ldr	r3, [r7, #4]
 80197a4:	2b00      	cmp	r3, #0
 80197a6:	d10b      	bne.n	80197c0 <prvSwitchTimerLists+0x9c>
 80197a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80197ac:	f383 8811 	msr	BASEPRI, r3
 80197b0:	f3bf 8f6f 	isb	sy
 80197b4:	f3bf 8f4f 	dsb	sy
 80197b8:	603b      	str	r3, [r7, #0]
 80197ba:	bf00      	nop
 80197bc:	bf00      	nop
 80197be:	e7fd      	b.n	80197bc <prvSwitchTimerLists+0x98>
 80197c0:	4b09      	ldr	r3, [pc, #36]	@ (80197e8 <prvSwitchTimerLists+0xc4>)
 80197c2:	681b      	ldr	r3, [r3, #0]
 80197c4:	681b      	ldr	r3, [r3, #0]
 80197c6:	2b00      	cmp	r3, #0
 80197c8:	d1b0      	bne.n	801972c <prvSwitchTimerLists+0x8>
 80197ca:	4b07      	ldr	r3, [pc, #28]	@ (80197e8 <prvSwitchTimerLists+0xc4>)
 80197cc:	681b      	ldr	r3, [r3, #0]
 80197ce:	617b      	str	r3, [r7, #20]
 80197d0:	4b06      	ldr	r3, [pc, #24]	@ (80197ec <prvSwitchTimerLists+0xc8>)
 80197d2:	681b      	ldr	r3, [r3, #0]
 80197d4:	4a04      	ldr	r2, [pc, #16]	@ (80197e8 <prvSwitchTimerLists+0xc4>)
 80197d6:	6013      	str	r3, [r2, #0]
 80197d8:	4a04      	ldr	r2, [pc, #16]	@ (80197ec <prvSwitchTimerLists+0xc8>)
 80197da:	697b      	ldr	r3, [r7, #20]
 80197dc:	6013      	str	r3, [r2, #0]
 80197de:	bf00      	nop
 80197e0:	3718      	adds	r7, #24
 80197e2:	46bd      	mov	sp, r7
 80197e4:	bd80      	pop	{r7, pc}
 80197e6:	bf00      	nop
 80197e8:	20003d0c 	.word	0x20003d0c
 80197ec:	20003d10 	.word	0x20003d10

080197f0 <prvCheckForValidListAndQueue>:
 80197f0:	b580      	push	{r7, lr}
 80197f2:	b082      	sub	sp, #8
 80197f4:	af02      	add	r7, sp, #8
 80197f6:	f000 f98f 	bl	8019b18 <vPortEnterCritical>
 80197fa:	4b15      	ldr	r3, [pc, #84]	@ (8019850 <prvCheckForValidListAndQueue+0x60>)
 80197fc:	681b      	ldr	r3, [r3, #0]
 80197fe:	2b00      	cmp	r3, #0
 8019800:	d120      	bne.n	8019844 <prvCheckForValidListAndQueue+0x54>
 8019802:	4814      	ldr	r0, [pc, #80]	@ (8019854 <prvCheckForValidListAndQueue+0x64>)
 8019804:	f7fd fcde 	bl	80171c4 <vListInitialise>
 8019808:	4813      	ldr	r0, [pc, #76]	@ (8019858 <prvCheckForValidListAndQueue+0x68>)
 801980a:	f7fd fcdb 	bl	80171c4 <vListInitialise>
 801980e:	4b13      	ldr	r3, [pc, #76]	@ (801985c <prvCheckForValidListAndQueue+0x6c>)
 8019810:	4a10      	ldr	r2, [pc, #64]	@ (8019854 <prvCheckForValidListAndQueue+0x64>)
 8019812:	601a      	str	r2, [r3, #0]
 8019814:	4b12      	ldr	r3, [pc, #72]	@ (8019860 <prvCheckForValidListAndQueue+0x70>)
 8019816:	4a10      	ldr	r2, [pc, #64]	@ (8019858 <prvCheckForValidListAndQueue+0x68>)
 8019818:	601a      	str	r2, [r3, #0]
 801981a:	2300      	movs	r3, #0
 801981c:	9300      	str	r3, [sp, #0]
 801981e:	4b11      	ldr	r3, [pc, #68]	@ (8019864 <prvCheckForValidListAndQueue+0x74>)
 8019820:	4a11      	ldr	r2, [pc, #68]	@ (8019868 <prvCheckForValidListAndQueue+0x78>)
 8019822:	2110      	movs	r1, #16
 8019824:	200a      	movs	r0, #10
 8019826:	f7fd fdeb 	bl	8017400 <xQueueGenericCreateStatic>
 801982a:	4603      	mov	r3, r0
 801982c:	4a08      	ldr	r2, [pc, #32]	@ (8019850 <prvCheckForValidListAndQueue+0x60>)
 801982e:	6013      	str	r3, [r2, #0]
 8019830:	4b07      	ldr	r3, [pc, #28]	@ (8019850 <prvCheckForValidListAndQueue+0x60>)
 8019832:	681b      	ldr	r3, [r3, #0]
 8019834:	2b00      	cmp	r3, #0
 8019836:	d005      	beq.n	8019844 <prvCheckForValidListAndQueue+0x54>
 8019838:	4b05      	ldr	r3, [pc, #20]	@ (8019850 <prvCheckForValidListAndQueue+0x60>)
 801983a:	681b      	ldr	r3, [r3, #0]
 801983c:	490b      	ldr	r1, [pc, #44]	@ (801986c <prvCheckForValidListAndQueue+0x7c>)
 801983e:	4618      	mov	r0, r3
 8019840:	f7fe fadc 	bl	8017dfc <vQueueAddToRegistry>
 8019844:	f000 f99a 	bl	8019b7c <vPortExitCritical>
 8019848:	bf00      	nop
 801984a:	46bd      	mov	sp, r7
 801984c:	bd80      	pop	{r7, pc}
 801984e:	bf00      	nop
 8019850:	20003d14 	.word	0x20003d14
 8019854:	20003ce4 	.word	0x20003ce4
 8019858:	20003cf8 	.word	0x20003cf8
 801985c:	20003d0c 	.word	0x20003d0c
 8019860:	20003d10 	.word	0x20003d10
 8019864:	20003dc0 	.word	0x20003dc0
 8019868:	20003d20 	.word	0x20003d20
 801986c:	08020f84 	.word	0x08020f84

08019870 <xTimerPendFunctionCallFromISR>:
 8019870:	b580      	push	{r7, lr}
 8019872:	b08a      	sub	sp, #40	@ 0x28
 8019874:	af00      	add	r7, sp, #0
 8019876:	60f8      	str	r0, [r7, #12]
 8019878:	60b9      	str	r1, [r7, #8]
 801987a:	607a      	str	r2, [r7, #4]
 801987c:	603b      	str	r3, [r7, #0]
 801987e:	f06f 0301 	mvn.w	r3, #1
 8019882:	617b      	str	r3, [r7, #20]
 8019884:	68fb      	ldr	r3, [r7, #12]
 8019886:	61bb      	str	r3, [r7, #24]
 8019888:	68bb      	ldr	r3, [r7, #8]
 801988a:	61fb      	str	r3, [r7, #28]
 801988c:	687b      	ldr	r3, [r7, #4]
 801988e:	623b      	str	r3, [r7, #32]
 8019890:	4b06      	ldr	r3, [pc, #24]	@ (80198ac <xTimerPendFunctionCallFromISR+0x3c>)
 8019892:	6818      	ldr	r0, [r3, #0]
 8019894:	f107 0114 	add.w	r1, r7, #20
 8019898:	2300      	movs	r3, #0
 801989a:	683a      	ldr	r2, [r7, #0]
 801989c:	f7fd ff8e 	bl	80177bc <xQueueGenericSendFromISR>
 80198a0:	6278      	str	r0, [r7, #36]	@ 0x24
 80198a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80198a4:	4618      	mov	r0, r3
 80198a6:	3728      	adds	r7, #40	@ 0x28
 80198a8:	46bd      	mov	sp, r7
 80198aa:	bd80      	pop	{r7, pc}
 80198ac:	20003d14 	.word	0x20003d14

080198b0 <pxPortInitialiseStack>:
 80198b0:	b480      	push	{r7}
 80198b2:	b085      	sub	sp, #20
 80198b4:	af00      	add	r7, sp, #0
 80198b6:	60f8      	str	r0, [r7, #12]
 80198b8:	60b9      	str	r1, [r7, #8]
 80198ba:	607a      	str	r2, [r7, #4]
 80198bc:	68fb      	ldr	r3, [r7, #12]
 80198be:	3b04      	subs	r3, #4
 80198c0:	60fb      	str	r3, [r7, #12]
 80198c2:	68fb      	ldr	r3, [r7, #12]
 80198c4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80198c8:	601a      	str	r2, [r3, #0]
 80198ca:	68fb      	ldr	r3, [r7, #12]
 80198cc:	3b04      	subs	r3, #4
 80198ce:	60fb      	str	r3, [r7, #12]
 80198d0:	68bb      	ldr	r3, [r7, #8]
 80198d2:	f023 0201 	bic.w	r2, r3, #1
 80198d6:	68fb      	ldr	r3, [r7, #12]
 80198d8:	601a      	str	r2, [r3, #0]
 80198da:	68fb      	ldr	r3, [r7, #12]
 80198dc:	3b04      	subs	r3, #4
 80198de:	60fb      	str	r3, [r7, #12]
 80198e0:	4a0c      	ldr	r2, [pc, #48]	@ (8019914 <pxPortInitialiseStack+0x64>)
 80198e2:	68fb      	ldr	r3, [r7, #12]
 80198e4:	601a      	str	r2, [r3, #0]
 80198e6:	68fb      	ldr	r3, [r7, #12]
 80198e8:	3b14      	subs	r3, #20
 80198ea:	60fb      	str	r3, [r7, #12]
 80198ec:	687a      	ldr	r2, [r7, #4]
 80198ee:	68fb      	ldr	r3, [r7, #12]
 80198f0:	601a      	str	r2, [r3, #0]
 80198f2:	68fb      	ldr	r3, [r7, #12]
 80198f4:	3b04      	subs	r3, #4
 80198f6:	60fb      	str	r3, [r7, #12]
 80198f8:	68fb      	ldr	r3, [r7, #12]
 80198fa:	f06f 0202 	mvn.w	r2, #2
 80198fe:	601a      	str	r2, [r3, #0]
 8019900:	68fb      	ldr	r3, [r7, #12]
 8019902:	3b20      	subs	r3, #32
 8019904:	60fb      	str	r3, [r7, #12]
 8019906:	68fb      	ldr	r3, [r7, #12]
 8019908:	4618      	mov	r0, r3
 801990a:	3714      	adds	r7, #20
 801990c:	46bd      	mov	sp, r7
 801990e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019912:	4770      	bx	lr
 8019914:	08019919 	.word	0x08019919

08019918 <prvTaskExitError>:
 8019918:	b480      	push	{r7}
 801991a:	b085      	sub	sp, #20
 801991c:	af00      	add	r7, sp, #0
 801991e:	2300      	movs	r3, #0
 8019920:	607b      	str	r3, [r7, #4]
 8019922:	4b13      	ldr	r3, [pc, #76]	@ (8019970 <prvTaskExitError+0x58>)
 8019924:	681b      	ldr	r3, [r3, #0]
 8019926:	f1b3 3fff 	cmp.w	r3, #4294967295
 801992a:	d00b      	beq.n	8019944 <prvTaskExitError+0x2c>
 801992c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019930:	f383 8811 	msr	BASEPRI, r3
 8019934:	f3bf 8f6f 	isb	sy
 8019938:	f3bf 8f4f 	dsb	sy
 801993c:	60fb      	str	r3, [r7, #12]
 801993e:	bf00      	nop
 8019940:	bf00      	nop
 8019942:	e7fd      	b.n	8019940 <prvTaskExitError+0x28>
 8019944:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019948:	f383 8811 	msr	BASEPRI, r3
 801994c:	f3bf 8f6f 	isb	sy
 8019950:	f3bf 8f4f 	dsb	sy
 8019954:	60bb      	str	r3, [r7, #8]
 8019956:	bf00      	nop
 8019958:	bf00      	nop
 801995a:	687b      	ldr	r3, [r7, #4]
 801995c:	2b00      	cmp	r3, #0
 801995e:	d0fc      	beq.n	801995a <prvTaskExitError+0x42>
 8019960:	bf00      	nop
 8019962:	bf00      	nop
 8019964:	3714      	adds	r7, #20
 8019966:	46bd      	mov	sp, r7
 8019968:	f85d 7b04 	ldr.w	r7, [sp], #4
 801996c:	4770      	bx	lr
 801996e:	bf00      	nop
 8019970:	200000ac 	.word	0x200000ac
	...

08019980 <SVC_Handler>:
 8019980:	4b07      	ldr	r3, [pc, #28]	@ (80199a0 <pxCurrentTCBConst2>)
 8019982:	6819      	ldr	r1, [r3, #0]
 8019984:	6808      	ldr	r0, [r1, #0]
 8019986:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801998a:	f380 8809 	msr	PSP, r0
 801998e:	f3bf 8f6f 	isb	sy
 8019992:	f04f 0000 	mov.w	r0, #0
 8019996:	f380 8811 	msr	BASEPRI, r0
 801999a:	4770      	bx	lr
 801999c:	f3af 8000 	nop.w

080199a0 <pxCurrentTCBConst2>:
 80199a0:	20003b10 	.word	0x20003b10
 80199a4:	bf00      	nop
 80199a6:	bf00      	nop

080199a8 <prvPortStartFirstTask>:
 80199a8:	4808      	ldr	r0, [pc, #32]	@ (80199cc <prvPortStartFirstTask+0x24>)
 80199aa:	6800      	ldr	r0, [r0, #0]
 80199ac:	6800      	ldr	r0, [r0, #0]
 80199ae:	f380 8808 	msr	MSP, r0
 80199b2:	f04f 0000 	mov.w	r0, #0
 80199b6:	f380 8814 	msr	CONTROL, r0
 80199ba:	b662      	cpsie	i
 80199bc:	b661      	cpsie	f
 80199be:	f3bf 8f4f 	dsb	sy
 80199c2:	f3bf 8f6f 	isb	sy
 80199c6:	df00      	svc	0
 80199c8:	bf00      	nop
 80199ca:	bf00      	nop
 80199cc:	e000ed08 	.word	0xe000ed08

080199d0 <xPortStartScheduler>:
 80199d0:	b580      	push	{r7, lr}
 80199d2:	b086      	sub	sp, #24
 80199d4:	af00      	add	r7, sp, #0
 80199d6:	4b47      	ldr	r3, [pc, #284]	@ (8019af4 <xPortStartScheduler+0x124>)
 80199d8:	681b      	ldr	r3, [r3, #0]
 80199da:	4a47      	ldr	r2, [pc, #284]	@ (8019af8 <xPortStartScheduler+0x128>)
 80199dc:	4293      	cmp	r3, r2
 80199de:	d10b      	bne.n	80199f8 <xPortStartScheduler+0x28>
 80199e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80199e4:	f383 8811 	msr	BASEPRI, r3
 80199e8:	f3bf 8f6f 	isb	sy
 80199ec:	f3bf 8f4f 	dsb	sy
 80199f0:	613b      	str	r3, [r7, #16]
 80199f2:	bf00      	nop
 80199f4:	bf00      	nop
 80199f6:	e7fd      	b.n	80199f4 <xPortStartScheduler+0x24>
 80199f8:	4b3e      	ldr	r3, [pc, #248]	@ (8019af4 <xPortStartScheduler+0x124>)
 80199fa:	681b      	ldr	r3, [r3, #0]
 80199fc:	4a3f      	ldr	r2, [pc, #252]	@ (8019afc <xPortStartScheduler+0x12c>)
 80199fe:	4293      	cmp	r3, r2
 8019a00:	d10b      	bne.n	8019a1a <xPortStartScheduler+0x4a>
 8019a02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019a06:	f383 8811 	msr	BASEPRI, r3
 8019a0a:	f3bf 8f6f 	isb	sy
 8019a0e:	f3bf 8f4f 	dsb	sy
 8019a12:	60fb      	str	r3, [r7, #12]
 8019a14:	bf00      	nop
 8019a16:	bf00      	nop
 8019a18:	e7fd      	b.n	8019a16 <xPortStartScheduler+0x46>
 8019a1a:	4b39      	ldr	r3, [pc, #228]	@ (8019b00 <xPortStartScheduler+0x130>)
 8019a1c:	617b      	str	r3, [r7, #20]
 8019a1e:	697b      	ldr	r3, [r7, #20]
 8019a20:	781b      	ldrb	r3, [r3, #0]
 8019a22:	b2db      	uxtb	r3, r3
 8019a24:	607b      	str	r3, [r7, #4]
 8019a26:	697b      	ldr	r3, [r7, #20]
 8019a28:	22ff      	movs	r2, #255	@ 0xff
 8019a2a:	701a      	strb	r2, [r3, #0]
 8019a2c:	697b      	ldr	r3, [r7, #20]
 8019a2e:	781b      	ldrb	r3, [r3, #0]
 8019a30:	b2db      	uxtb	r3, r3
 8019a32:	70fb      	strb	r3, [r7, #3]
 8019a34:	78fb      	ldrb	r3, [r7, #3]
 8019a36:	b2db      	uxtb	r3, r3
 8019a38:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8019a3c:	b2da      	uxtb	r2, r3
 8019a3e:	4b31      	ldr	r3, [pc, #196]	@ (8019b04 <xPortStartScheduler+0x134>)
 8019a40:	701a      	strb	r2, [r3, #0]
 8019a42:	4b31      	ldr	r3, [pc, #196]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a44:	2207      	movs	r2, #7
 8019a46:	601a      	str	r2, [r3, #0]
 8019a48:	e009      	b.n	8019a5e <xPortStartScheduler+0x8e>
 8019a4a:	4b2f      	ldr	r3, [pc, #188]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a4c:	681b      	ldr	r3, [r3, #0]
 8019a4e:	3b01      	subs	r3, #1
 8019a50:	4a2d      	ldr	r2, [pc, #180]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a52:	6013      	str	r3, [r2, #0]
 8019a54:	78fb      	ldrb	r3, [r7, #3]
 8019a56:	b2db      	uxtb	r3, r3
 8019a58:	005b      	lsls	r3, r3, #1
 8019a5a:	b2db      	uxtb	r3, r3
 8019a5c:	70fb      	strb	r3, [r7, #3]
 8019a5e:	78fb      	ldrb	r3, [r7, #3]
 8019a60:	b2db      	uxtb	r3, r3
 8019a62:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8019a66:	2b80      	cmp	r3, #128	@ 0x80
 8019a68:	d0ef      	beq.n	8019a4a <xPortStartScheduler+0x7a>
 8019a6a:	4b27      	ldr	r3, [pc, #156]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a6c:	681b      	ldr	r3, [r3, #0]
 8019a6e:	f1c3 0307 	rsb	r3, r3, #7
 8019a72:	2b04      	cmp	r3, #4
 8019a74:	d00b      	beq.n	8019a8e <xPortStartScheduler+0xbe>
 8019a76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019a7a:	f383 8811 	msr	BASEPRI, r3
 8019a7e:	f3bf 8f6f 	isb	sy
 8019a82:	f3bf 8f4f 	dsb	sy
 8019a86:	60bb      	str	r3, [r7, #8]
 8019a88:	bf00      	nop
 8019a8a:	bf00      	nop
 8019a8c:	e7fd      	b.n	8019a8a <xPortStartScheduler+0xba>
 8019a8e:	4b1e      	ldr	r3, [pc, #120]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a90:	681b      	ldr	r3, [r3, #0]
 8019a92:	021b      	lsls	r3, r3, #8
 8019a94:	4a1c      	ldr	r2, [pc, #112]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a96:	6013      	str	r3, [r2, #0]
 8019a98:	4b1b      	ldr	r3, [pc, #108]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019a9a:	681b      	ldr	r3, [r3, #0]
 8019a9c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8019aa0:	4a19      	ldr	r2, [pc, #100]	@ (8019b08 <xPortStartScheduler+0x138>)
 8019aa2:	6013      	str	r3, [r2, #0]
 8019aa4:	687b      	ldr	r3, [r7, #4]
 8019aa6:	b2da      	uxtb	r2, r3
 8019aa8:	697b      	ldr	r3, [r7, #20]
 8019aaa:	701a      	strb	r2, [r3, #0]
 8019aac:	4b17      	ldr	r3, [pc, #92]	@ (8019b0c <xPortStartScheduler+0x13c>)
 8019aae:	681b      	ldr	r3, [r3, #0]
 8019ab0:	4a16      	ldr	r2, [pc, #88]	@ (8019b0c <xPortStartScheduler+0x13c>)
 8019ab2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8019ab6:	6013      	str	r3, [r2, #0]
 8019ab8:	4b14      	ldr	r3, [pc, #80]	@ (8019b0c <xPortStartScheduler+0x13c>)
 8019aba:	681b      	ldr	r3, [r3, #0]
 8019abc:	4a13      	ldr	r2, [pc, #76]	@ (8019b0c <xPortStartScheduler+0x13c>)
 8019abe:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8019ac2:	6013      	str	r3, [r2, #0]
 8019ac4:	f000 f8da 	bl	8019c7c <vPortSetupTimerInterrupt>
 8019ac8:	4b11      	ldr	r3, [pc, #68]	@ (8019b10 <xPortStartScheduler+0x140>)
 8019aca:	2200      	movs	r2, #0
 8019acc:	601a      	str	r2, [r3, #0]
 8019ace:	f000 f8f9 	bl	8019cc4 <vPortEnableVFP>
 8019ad2:	4b10      	ldr	r3, [pc, #64]	@ (8019b14 <xPortStartScheduler+0x144>)
 8019ad4:	681b      	ldr	r3, [r3, #0]
 8019ad6:	4a0f      	ldr	r2, [pc, #60]	@ (8019b14 <xPortStartScheduler+0x144>)
 8019ad8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8019adc:	6013      	str	r3, [r2, #0]
 8019ade:	f7ff ff63 	bl	80199a8 <prvPortStartFirstTask>
 8019ae2:	f7fe fe71 	bl	80187c8 <vTaskSwitchContext>
 8019ae6:	f7ff ff17 	bl	8019918 <prvTaskExitError>
 8019aea:	2300      	movs	r3, #0
 8019aec:	4618      	mov	r0, r3
 8019aee:	3718      	adds	r7, #24
 8019af0:	46bd      	mov	sp, r7
 8019af2:	bd80      	pop	{r7, pc}
 8019af4:	e000ed00 	.word	0xe000ed00
 8019af8:	410fc271 	.word	0x410fc271
 8019afc:	410fc270 	.word	0x410fc270
 8019b00:	e000e400 	.word	0xe000e400
 8019b04:	20003e10 	.word	0x20003e10
 8019b08:	20003e14 	.word	0x20003e14
 8019b0c:	e000ed20 	.word	0xe000ed20
 8019b10:	200000ac 	.word	0x200000ac
 8019b14:	e000ef34 	.word	0xe000ef34

08019b18 <vPortEnterCritical>:
 8019b18:	b480      	push	{r7}
 8019b1a:	b083      	sub	sp, #12
 8019b1c:	af00      	add	r7, sp, #0
 8019b1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019b22:	f383 8811 	msr	BASEPRI, r3
 8019b26:	f3bf 8f6f 	isb	sy
 8019b2a:	f3bf 8f4f 	dsb	sy
 8019b2e:	607b      	str	r3, [r7, #4]
 8019b30:	bf00      	nop
 8019b32:	4b10      	ldr	r3, [pc, #64]	@ (8019b74 <vPortEnterCritical+0x5c>)
 8019b34:	681b      	ldr	r3, [r3, #0]
 8019b36:	3301      	adds	r3, #1
 8019b38:	4a0e      	ldr	r2, [pc, #56]	@ (8019b74 <vPortEnterCritical+0x5c>)
 8019b3a:	6013      	str	r3, [r2, #0]
 8019b3c:	4b0d      	ldr	r3, [pc, #52]	@ (8019b74 <vPortEnterCritical+0x5c>)
 8019b3e:	681b      	ldr	r3, [r3, #0]
 8019b40:	2b01      	cmp	r3, #1
 8019b42:	d110      	bne.n	8019b66 <vPortEnterCritical+0x4e>
 8019b44:	4b0c      	ldr	r3, [pc, #48]	@ (8019b78 <vPortEnterCritical+0x60>)
 8019b46:	681b      	ldr	r3, [r3, #0]
 8019b48:	b2db      	uxtb	r3, r3
 8019b4a:	2b00      	cmp	r3, #0
 8019b4c:	d00b      	beq.n	8019b66 <vPortEnterCritical+0x4e>
 8019b4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019b52:	f383 8811 	msr	BASEPRI, r3
 8019b56:	f3bf 8f6f 	isb	sy
 8019b5a:	f3bf 8f4f 	dsb	sy
 8019b5e:	603b      	str	r3, [r7, #0]
 8019b60:	bf00      	nop
 8019b62:	bf00      	nop
 8019b64:	e7fd      	b.n	8019b62 <vPortEnterCritical+0x4a>
 8019b66:	bf00      	nop
 8019b68:	370c      	adds	r7, #12
 8019b6a:	46bd      	mov	sp, r7
 8019b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019b70:	4770      	bx	lr
 8019b72:	bf00      	nop
 8019b74:	200000ac 	.word	0x200000ac
 8019b78:	e000ed04 	.word	0xe000ed04

08019b7c <vPortExitCritical>:
 8019b7c:	b480      	push	{r7}
 8019b7e:	b083      	sub	sp, #12
 8019b80:	af00      	add	r7, sp, #0
 8019b82:	4b12      	ldr	r3, [pc, #72]	@ (8019bcc <vPortExitCritical+0x50>)
 8019b84:	681b      	ldr	r3, [r3, #0]
 8019b86:	2b00      	cmp	r3, #0
 8019b88:	d10b      	bne.n	8019ba2 <vPortExitCritical+0x26>
 8019b8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019b8e:	f383 8811 	msr	BASEPRI, r3
 8019b92:	f3bf 8f6f 	isb	sy
 8019b96:	f3bf 8f4f 	dsb	sy
 8019b9a:	607b      	str	r3, [r7, #4]
 8019b9c:	bf00      	nop
 8019b9e:	bf00      	nop
 8019ba0:	e7fd      	b.n	8019b9e <vPortExitCritical+0x22>
 8019ba2:	4b0a      	ldr	r3, [pc, #40]	@ (8019bcc <vPortExitCritical+0x50>)
 8019ba4:	681b      	ldr	r3, [r3, #0]
 8019ba6:	3b01      	subs	r3, #1
 8019ba8:	4a08      	ldr	r2, [pc, #32]	@ (8019bcc <vPortExitCritical+0x50>)
 8019baa:	6013      	str	r3, [r2, #0]
 8019bac:	4b07      	ldr	r3, [pc, #28]	@ (8019bcc <vPortExitCritical+0x50>)
 8019bae:	681b      	ldr	r3, [r3, #0]
 8019bb0:	2b00      	cmp	r3, #0
 8019bb2:	d105      	bne.n	8019bc0 <vPortExitCritical+0x44>
 8019bb4:	2300      	movs	r3, #0
 8019bb6:	603b      	str	r3, [r7, #0]
 8019bb8:	683b      	ldr	r3, [r7, #0]
 8019bba:	f383 8811 	msr	BASEPRI, r3
 8019bbe:	bf00      	nop
 8019bc0:	bf00      	nop
 8019bc2:	370c      	adds	r7, #12
 8019bc4:	46bd      	mov	sp, r7
 8019bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019bca:	4770      	bx	lr
 8019bcc:	200000ac 	.word	0x200000ac

08019bd0 <PendSV_Handler>:
 8019bd0:	f3ef 8009 	mrs	r0, PSP
 8019bd4:	f3bf 8f6f 	isb	sy
 8019bd8:	4b15      	ldr	r3, [pc, #84]	@ (8019c30 <pxCurrentTCBConst>)
 8019bda:	681a      	ldr	r2, [r3, #0]
 8019bdc:	f01e 0f10 	tst.w	lr, #16
 8019be0:	bf08      	it	eq
 8019be2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8019be6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bea:	6010      	str	r0, [r2, #0]
 8019bec:	e92d 0009 	stmdb	sp!, {r0, r3}
 8019bf0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8019bf4:	f380 8811 	msr	BASEPRI, r0
 8019bf8:	f3bf 8f4f 	dsb	sy
 8019bfc:	f3bf 8f6f 	isb	sy
 8019c00:	f7fe fde2 	bl	80187c8 <vTaskSwitchContext>
 8019c04:	f04f 0000 	mov.w	r0, #0
 8019c08:	f380 8811 	msr	BASEPRI, r0
 8019c0c:	bc09      	pop	{r0, r3}
 8019c0e:	6819      	ldr	r1, [r3, #0]
 8019c10:	6808      	ldr	r0, [r1, #0]
 8019c12:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c16:	f01e 0f10 	tst.w	lr, #16
 8019c1a:	bf08      	it	eq
 8019c1c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8019c20:	f380 8809 	msr	PSP, r0
 8019c24:	f3bf 8f6f 	isb	sy
 8019c28:	4770      	bx	lr
 8019c2a:	bf00      	nop
 8019c2c:	f3af 8000 	nop.w

08019c30 <pxCurrentTCBConst>:
 8019c30:	20003b10 	.word	0x20003b10
 8019c34:	bf00      	nop
 8019c36:	bf00      	nop

08019c38 <SysTick_Handler>:
 8019c38:	b580      	push	{r7, lr}
 8019c3a:	b082      	sub	sp, #8
 8019c3c:	af00      	add	r7, sp, #0
 8019c3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019c42:	f383 8811 	msr	BASEPRI, r3
 8019c46:	f3bf 8f6f 	isb	sy
 8019c4a:	f3bf 8f4f 	dsb	sy
 8019c4e:	607b      	str	r3, [r7, #4]
 8019c50:	bf00      	nop
 8019c52:	f7fe fcff 	bl	8018654 <xTaskIncrementTick>
 8019c56:	4603      	mov	r3, r0
 8019c58:	2b00      	cmp	r3, #0
 8019c5a:	d003      	beq.n	8019c64 <SysTick_Handler+0x2c>
 8019c5c:	4b06      	ldr	r3, [pc, #24]	@ (8019c78 <SysTick_Handler+0x40>)
 8019c5e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8019c62:	601a      	str	r2, [r3, #0]
 8019c64:	2300      	movs	r3, #0
 8019c66:	603b      	str	r3, [r7, #0]
 8019c68:	683b      	ldr	r3, [r7, #0]
 8019c6a:	f383 8811 	msr	BASEPRI, r3
 8019c6e:	bf00      	nop
 8019c70:	bf00      	nop
 8019c72:	3708      	adds	r7, #8
 8019c74:	46bd      	mov	sp, r7
 8019c76:	bd80      	pop	{r7, pc}
 8019c78:	e000ed04 	.word	0xe000ed04

08019c7c <vPortSetupTimerInterrupt>:
 8019c7c:	b480      	push	{r7}
 8019c7e:	af00      	add	r7, sp, #0
 8019c80:	4b0b      	ldr	r3, [pc, #44]	@ (8019cb0 <vPortSetupTimerInterrupt+0x34>)
 8019c82:	2200      	movs	r2, #0
 8019c84:	601a      	str	r2, [r3, #0]
 8019c86:	4b0b      	ldr	r3, [pc, #44]	@ (8019cb4 <vPortSetupTimerInterrupt+0x38>)
 8019c88:	2200      	movs	r2, #0
 8019c8a:	601a      	str	r2, [r3, #0]
 8019c8c:	4b0a      	ldr	r3, [pc, #40]	@ (8019cb8 <vPortSetupTimerInterrupt+0x3c>)
 8019c8e:	681b      	ldr	r3, [r3, #0]
 8019c90:	4a0a      	ldr	r2, [pc, #40]	@ (8019cbc <vPortSetupTimerInterrupt+0x40>)
 8019c92:	fba2 2303 	umull	r2, r3, r2, r3
 8019c96:	099b      	lsrs	r3, r3, #6
 8019c98:	4a09      	ldr	r2, [pc, #36]	@ (8019cc0 <vPortSetupTimerInterrupt+0x44>)
 8019c9a:	3b01      	subs	r3, #1
 8019c9c:	6013      	str	r3, [r2, #0]
 8019c9e:	4b04      	ldr	r3, [pc, #16]	@ (8019cb0 <vPortSetupTimerInterrupt+0x34>)
 8019ca0:	2207      	movs	r2, #7
 8019ca2:	601a      	str	r2, [r3, #0]
 8019ca4:	bf00      	nop
 8019ca6:	46bd      	mov	sp, r7
 8019ca8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019cac:	4770      	bx	lr
 8019cae:	bf00      	nop
 8019cb0:	e000e010 	.word	0xe000e010
 8019cb4:	e000e018 	.word	0xe000e018
 8019cb8:	20000004 	.word	0x20000004
 8019cbc:	10624dd3 	.word	0x10624dd3
 8019cc0:	e000e014 	.word	0xe000e014

08019cc4 <vPortEnableVFP>:
 8019cc4:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8019cd4 <vPortEnableVFP+0x10>
 8019cc8:	6801      	ldr	r1, [r0, #0]
 8019cca:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8019cce:	6001      	str	r1, [r0, #0]
 8019cd0:	4770      	bx	lr
 8019cd2:	bf00      	nop
 8019cd4:	e000ed88 	.word	0xe000ed88

08019cd8 <vPortValidateInterruptPriority>:
 8019cd8:	b480      	push	{r7}
 8019cda:	b085      	sub	sp, #20
 8019cdc:	af00      	add	r7, sp, #0
 8019cde:	f3ef 8305 	mrs	r3, IPSR
 8019ce2:	60fb      	str	r3, [r7, #12]
 8019ce4:	68fb      	ldr	r3, [r7, #12]
 8019ce6:	2b0f      	cmp	r3, #15
 8019ce8:	d915      	bls.n	8019d16 <vPortValidateInterruptPriority+0x3e>
 8019cea:	4a18      	ldr	r2, [pc, #96]	@ (8019d4c <vPortValidateInterruptPriority+0x74>)
 8019cec:	68fb      	ldr	r3, [r7, #12]
 8019cee:	4413      	add	r3, r2
 8019cf0:	781b      	ldrb	r3, [r3, #0]
 8019cf2:	72fb      	strb	r3, [r7, #11]
 8019cf4:	4b16      	ldr	r3, [pc, #88]	@ (8019d50 <vPortValidateInterruptPriority+0x78>)
 8019cf6:	781b      	ldrb	r3, [r3, #0]
 8019cf8:	7afa      	ldrb	r2, [r7, #11]
 8019cfa:	429a      	cmp	r2, r3
 8019cfc:	d20b      	bcs.n	8019d16 <vPortValidateInterruptPriority+0x3e>
 8019cfe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019d02:	f383 8811 	msr	BASEPRI, r3
 8019d06:	f3bf 8f6f 	isb	sy
 8019d0a:	f3bf 8f4f 	dsb	sy
 8019d0e:	607b      	str	r3, [r7, #4]
 8019d10:	bf00      	nop
 8019d12:	bf00      	nop
 8019d14:	e7fd      	b.n	8019d12 <vPortValidateInterruptPriority+0x3a>
 8019d16:	4b0f      	ldr	r3, [pc, #60]	@ (8019d54 <vPortValidateInterruptPriority+0x7c>)
 8019d18:	681b      	ldr	r3, [r3, #0]
 8019d1a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8019d1e:	4b0e      	ldr	r3, [pc, #56]	@ (8019d58 <vPortValidateInterruptPriority+0x80>)
 8019d20:	681b      	ldr	r3, [r3, #0]
 8019d22:	429a      	cmp	r2, r3
 8019d24:	d90b      	bls.n	8019d3e <vPortValidateInterruptPriority+0x66>
 8019d26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019d2a:	f383 8811 	msr	BASEPRI, r3
 8019d2e:	f3bf 8f6f 	isb	sy
 8019d32:	f3bf 8f4f 	dsb	sy
 8019d36:	603b      	str	r3, [r7, #0]
 8019d38:	bf00      	nop
 8019d3a:	bf00      	nop
 8019d3c:	e7fd      	b.n	8019d3a <vPortValidateInterruptPriority+0x62>
 8019d3e:	bf00      	nop
 8019d40:	3714      	adds	r7, #20
 8019d42:	46bd      	mov	sp, r7
 8019d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d48:	4770      	bx	lr
 8019d4a:	bf00      	nop
 8019d4c:	e000e3f0 	.word	0xe000e3f0
 8019d50:	20003e10 	.word	0x20003e10
 8019d54:	e000ed0c 	.word	0xe000ed0c
 8019d58:	20003e14 	.word	0x20003e14

08019d5c <pvPortMalloc>:
 8019d5c:	b580      	push	{r7, lr}
 8019d5e:	b08a      	sub	sp, #40	@ 0x28
 8019d60:	af00      	add	r7, sp, #0
 8019d62:	6078      	str	r0, [r7, #4]
 8019d64:	2300      	movs	r3, #0
 8019d66:	61fb      	str	r3, [r7, #28]
 8019d68:	f7fe fbb8 	bl	80184dc <vTaskSuspendAll>
 8019d6c:	4b5c      	ldr	r3, [pc, #368]	@ (8019ee0 <pvPortMalloc+0x184>)
 8019d6e:	681b      	ldr	r3, [r3, #0]
 8019d70:	2b00      	cmp	r3, #0
 8019d72:	d101      	bne.n	8019d78 <pvPortMalloc+0x1c>
 8019d74:	f000 f924 	bl	8019fc0 <prvHeapInit>
 8019d78:	4b5a      	ldr	r3, [pc, #360]	@ (8019ee4 <pvPortMalloc+0x188>)
 8019d7a:	681a      	ldr	r2, [r3, #0]
 8019d7c:	687b      	ldr	r3, [r7, #4]
 8019d7e:	4013      	ands	r3, r2
 8019d80:	2b00      	cmp	r3, #0
 8019d82:	f040 8095 	bne.w	8019eb0 <pvPortMalloc+0x154>
 8019d86:	687b      	ldr	r3, [r7, #4]
 8019d88:	2b00      	cmp	r3, #0
 8019d8a:	d01e      	beq.n	8019dca <pvPortMalloc+0x6e>
 8019d8c:	2208      	movs	r2, #8
 8019d8e:	687b      	ldr	r3, [r7, #4]
 8019d90:	4413      	add	r3, r2
 8019d92:	607b      	str	r3, [r7, #4]
 8019d94:	687b      	ldr	r3, [r7, #4]
 8019d96:	f003 0307 	and.w	r3, r3, #7
 8019d9a:	2b00      	cmp	r3, #0
 8019d9c:	d015      	beq.n	8019dca <pvPortMalloc+0x6e>
 8019d9e:	687b      	ldr	r3, [r7, #4]
 8019da0:	f023 0307 	bic.w	r3, r3, #7
 8019da4:	3308      	adds	r3, #8
 8019da6:	607b      	str	r3, [r7, #4]
 8019da8:	687b      	ldr	r3, [r7, #4]
 8019daa:	f003 0307 	and.w	r3, r3, #7
 8019dae:	2b00      	cmp	r3, #0
 8019db0:	d00b      	beq.n	8019dca <pvPortMalloc+0x6e>
 8019db2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019db6:	f383 8811 	msr	BASEPRI, r3
 8019dba:	f3bf 8f6f 	isb	sy
 8019dbe:	f3bf 8f4f 	dsb	sy
 8019dc2:	617b      	str	r3, [r7, #20]
 8019dc4:	bf00      	nop
 8019dc6:	bf00      	nop
 8019dc8:	e7fd      	b.n	8019dc6 <pvPortMalloc+0x6a>
 8019dca:	687b      	ldr	r3, [r7, #4]
 8019dcc:	2b00      	cmp	r3, #0
 8019dce:	d06f      	beq.n	8019eb0 <pvPortMalloc+0x154>
 8019dd0:	4b45      	ldr	r3, [pc, #276]	@ (8019ee8 <pvPortMalloc+0x18c>)
 8019dd2:	681b      	ldr	r3, [r3, #0]
 8019dd4:	687a      	ldr	r2, [r7, #4]
 8019dd6:	429a      	cmp	r2, r3
 8019dd8:	d86a      	bhi.n	8019eb0 <pvPortMalloc+0x154>
 8019dda:	4b44      	ldr	r3, [pc, #272]	@ (8019eec <pvPortMalloc+0x190>)
 8019ddc:	623b      	str	r3, [r7, #32]
 8019dde:	4b43      	ldr	r3, [pc, #268]	@ (8019eec <pvPortMalloc+0x190>)
 8019de0:	681b      	ldr	r3, [r3, #0]
 8019de2:	627b      	str	r3, [r7, #36]	@ 0x24
 8019de4:	e004      	b.n	8019df0 <pvPortMalloc+0x94>
 8019de6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019de8:	623b      	str	r3, [r7, #32]
 8019dea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019dec:	681b      	ldr	r3, [r3, #0]
 8019dee:	627b      	str	r3, [r7, #36]	@ 0x24
 8019df0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019df2:	685b      	ldr	r3, [r3, #4]
 8019df4:	687a      	ldr	r2, [r7, #4]
 8019df6:	429a      	cmp	r2, r3
 8019df8:	d903      	bls.n	8019e02 <pvPortMalloc+0xa6>
 8019dfa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019dfc:	681b      	ldr	r3, [r3, #0]
 8019dfe:	2b00      	cmp	r3, #0
 8019e00:	d1f1      	bne.n	8019de6 <pvPortMalloc+0x8a>
 8019e02:	4b37      	ldr	r3, [pc, #220]	@ (8019ee0 <pvPortMalloc+0x184>)
 8019e04:	681b      	ldr	r3, [r3, #0]
 8019e06:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019e08:	429a      	cmp	r2, r3
 8019e0a:	d051      	beq.n	8019eb0 <pvPortMalloc+0x154>
 8019e0c:	6a3b      	ldr	r3, [r7, #32]
 8019e0e:	681b      	ldr	r3, [r3, #0]
 8019e10:	2208      	movs	r2, #8
 8019e12:	4413      	add	r3, r2
 8019e14:	61fb      	str	r3, [r7, #28]
 8019e16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e18:	681a      	ldr	r2, [r3, #0]
 8019e1a:	6a3b      	ldr	r3, [r7, #32]
 8019e1c:	601a      	str	r2, [r3, #0]
 8019e1e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e20:	685a      	ldr	r2, [r3, #4]
 8019e22:	687b      	ldr	r3, [r7, #4]
 8019e24:	1ad2      	subs	r2, r2, r3
 8019e26:	2308      	movs	r3, #8
 8019e28:	005b      	lsls	r3, r3, #1
 8019e2a:	429a      	cmp	r2, r3
 8019e2c:	d920      	bls.n	8019e70 <pvPortMalloc+0x114>
 8019e2e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019e30:	687b      	ldr	r3, [r7, #4]
 8019e32:	4413      	add	r3, r2
 8019e34:	61bb      	str	r3, [r7, #24]
 8019e36:	69bb      	ldr	r3, [r7, #24]
 8019e38:	f003 0307 	and.w	r3, r3, #7
 8019e3c:	2b00      	cmp	r3, #0
 8019e3e:	d00b      	beq.n	8019e58 <pvPortMalloc+0xfc>
 8019e40:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019e44:	f383 8811 	msr	BASEPRI, r3
 8019e48:	f3bf 8f6f 	isb	sy
 8019e4c:	f3bf 8f4f 	dsb	sy
 8019e50:	613b      	str	r3, [r7, #16]
 8019e52:	bf00      	nop
 8019e54:	bf00      	nop
 8019e56:	e7fd      	b.n	8019e54 <pvPortMalloc+0xf8>
 8019e58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e5a:	685a      	ldr	r2, [r3, #4]
 8019e5c:	687b      	ldr	r3, [r7, #4]
 8019e5e:	1ad2      	subs	r2, r2, r3
 8019e60:	69bb      	ldr	r3, [r7, #24]
 8019e62:	605a      	str	r2, [r3, #4]
 8019e64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e66:	687a      	ldr	r2, [r7, #4]
 8019e68:	605a      	str	r2, [r3, #4]
 8019e6a:	69b8      	ldr	r0, [r7, #24]
 8019e6c:	f000 f90a 	bl	801a084 <prvInsertBlockIntoFreeList>
 8019e70:	4b1d      	ldr	r3, [pc, #116]	@ (8019ee8 <pvPortMalloc+0x18c>)
 8019e72:	681a      	ldr	r2, [r3, #0]
 8019e74:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e76:	685b      	ldr	r3, [r3, #4]
 8019e78:	1ad3      	subs	r3, r2, r3
 8019e7a:	4a1b      	ldr	r2, [pc, #108]	@ (8019ee8 <pvPortMalloc+0x18c>)
 8019e7c:	6013      	str	r3, [r2, #0]
 8019e7e:	4b1a      	ldr	r3, [pc, #104]	@ (8019ee8 <pvPortMalloc+0x18c>)
 8019e80:	681a      	ldr	r2, [r3, #0]
 8019e82:	4b1b      	ldr	r3, [pc, #108]	@ (8019ef0 <pvPortMalloc+0x194>)
 8019e84:	681b      	ldr	r3, [r3, #0]
 8019e86:	429a      	cmp	r2, r3
 8019e88:	d203      	bcs.n	8019e92 <pvPortMalloc+0x136>
 8019e8a:	4b17      	ldr	r3, [pc, #92]	@ (8019ee8 <pvPortMalloc+0x18c>)
 8019e8c:	681b      	ldr	r3, [r3, #0]
 8019e8e:	4a18      	ldr	r2, [pc, #96]	@ (8019ef0 <pvPortMalloc+0x194>)
 8019e90:	6013      	str	r3, [r2, #0]
 8019e92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e94:	685a      	ldr	r2, [r3, #4]
 8019e96:	4b13      	ldr	r3, [pc, #76]	@ (8019ee4 <pvPortMalloc+0x188>)
 8019e98:	681b      	ldr	r3, [r3, #0]
 8019e9a:	431a      	orrs	r2, r3
 8019e9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e9e:	605a      	str	r2, [r3, #4]
 8019ea0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019ea2:	2200      	movs	r2, #0
 8019ea4:	601a      	str	r2, [r3, #0]
 8019ea6:	4b13      	ldr	r3, [pc, #76]	@ (8019ef4 <pvPortMalloc+0x198>)
 8019ea8:	681b      	ldr	r3, [r3, #0]
 8019eaa:	3301      	adds	r3, #1
 8019eac:	4a11      	ldr	r2, [pc, #68]	@ (8019ef4 <pvPortMalloc+0x198>)
 8019eae:	6013      	str	r3, [r2, #0]
 8019eb0:	f7fe fb22 	bl	80184f8 <xTaskResumeAll>
 8019eb4:	69fb      	ldr	r3, [r7, #28]
 8019eb6:	f003 0307 	and.w	r3, r3, #7
 8019eba:	2b00      	cmp	r3, #0
 8019ebc:	d00b      	beq.n	8019ed6 <pvPortMalloc+0x17a>
 8019ebe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019ec2:	f383 8811 	msr	BASEPRI, r3
 8019ec6:	f3bf 8f6f 	isb	sy
 8019eca:	f3bf 8f4f 	dsb	sy
 8019ece:	60fb      	str	r3, [r7, #12]
 8019ed0:	bf00      	nop
 8019ed2:	bf00      	nop
 8019ed4:	e7fd      	b.n	8019ed2 <pvPortMalloc+0x176>
 8019ed6:	69fb      	ldr	r3, [r7, #28]
 8019ed8:	4618      	mov	r0, r3
 8019eda:	3728      	adds	r7, #40	@ 0x28
 8019edc:	46bd      	mov	sp, r7
 8019ede:	bd80      	pop	{r7, pc}
 8019ee0:	2000b350 	.word	0x2000b350
 8019ee4:	2000b364 	.word	0x2000b364
 8019ee8:	2000b354 	.word	0x2000b354
 8019eec:	2000b348 	.word	0x2000b348
 8019ef0:	2000b358 	.word	0x2000b358
 8019ef4:	2000b35c 	.word	0x2000b35c

08019ef8 <vPortFree>:
 8019ef8:	b580      	push	{r7, lr}
 8019efa:	b086      	sub	sp, #24
 8019efc:	af00      	add	r7, sp, #0
 8019efe:	6078      	str	r0, [r7, #4]
 8019f00:	687b      	ldr	r3, [r7, #4]
 8019f02:	617b      	str	r3, [r7, #20]
 8019f04:	687b      	ldr	r3, [r7, #4]
 8019f06:	2b00      	cmp	r3, #0
 8019f08:	d04f      	beq.n	8019faa <vPortFree+0xb2>
 8019f0a:	2308      	movs	r3, #8
 8019f0c:	425b      	negs	r3, r3
 8019f0e:	697a      	ldr	r2, [r7, #20]
 8019f10:	4413      	add	r3, r2
 8019f12:	617b      	str	r3, [r7, #20]
 8019f14:	697b      	ldr	r3, [r7, #20]
 8019f16:	613b      	str	r3, [r7, #16]
 8019f18:	693b      	ldr	r3, [r7, #16]
 8019f1a:	685a      	ldr	r2, [r3, #4]
 8019f1c:	4b25      	ldr	r3, [pc, #148]	@ (8019fb4 <vPortFree+0xbc>)
 8019f1e:	681b      	ldr	r3, [r3, #0]
 8019f20:	4013      	ands	r3, r2
 8019f22:	2b00      	cmp	r3, #0
 8019f24:	d10b      	bne.n	8019f3e <vPortFree+0x46>
 8019f26:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019f2a:	f383 8811 	msr	BASEPRI, r3
 8019f2e:	f3bf 8f6f 	isb	sy
 8019f32:	f3bf 8f4f 	dsb	sy
 8019f36:	60fb      	str	r3, [r7, #12]
 8019f38:	bf00      	nop
 8019f3a:	bf00      	nop
 8019f3c:	e7fd      	b.n	8019f3a <vPortFree+0x42>
 8019f3e:	693b      	ldr	r3, [r7, #16]
 8019f40:	681b      	ldr	r3, [r3, #0]
 8019f42:	2b00      	cmp	r3, #0
 8019f44:	d00b      	beq.n	8019f5e <vPortFree+0x66>
 8019f46:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019f4a:	f383 8811 	msr	BASEPRI, r3
 8019f4e:	f3bf 8f6f 	isb	sy
 8019f52:	f3bf 8f4f 	dsb	sy
 8019f56:	60bb      	str	r3, [r7, #8]
 8019f58:	bf00      	nop
 8019f5a:	bf00      	nop
 8019f5c:	e7fd      	b.n	8019f5a <vPortFree+0x62>
 8019f5e:	693b      	ldr	r3, [r7, #16]
 8019f60:	685a      	ldr	r2, [r3, #4]
 8019f62:	4b14      	ldr	r3, [pc, #80]	@ (8019fb4 <vPortFree+0xbc>)
 8019f64:	681b      	ldr	r3, [r3, #0]
 8019f66:	4013      	ands	r3, r2
 8019f68:	2b00      	cmp	r3, #0
 8019f6a:	d01e      	beq.n	8019faa <vPortFree+0xb2>
 8019f6c:	693b      	ldr	r3, [r7, #16]
 8019f6e:	681b      	ldr	r3, [r3, #0]
 8019f70:	2b00      	cmp	r3, #0
 8019f72:	d11a      	bne.n	8019faa <vPortFree+0xb2>
 8019f74:	693b      	ldr	r3, [r7, #16]
 8019f76:	685a      	ldr	r2, [r3, #4]
 8019f78:	4b0e      	ldr	r3, [pc, #56]	@ (8019fb4 <vPortFree+0xbc>)
 8019f7a:	681b      	ldr	r3, [r3, #0]
 8019f7c:	43db      	mvns	r3, r3
 8019f7e:	401a      	ands	r2, r3
 8019f80:	693b      	ldr	r3, [r7, #16]
 8019f82:	605a      	str	r2, [r3, #4]
 8019f84:	f7fe faaa 	bl	80184dc <vTaskSuspendAll>
 8019f88:	693b      	ldr	r3, [r7, #16]
 8019f8a:	685a      	ldr	r2, [r3, #4]
 8019f8c:	4b0a      	ldr	r3, [pc, #40]	@ (8019fb8 <vPortFree+0xc0>)
 8019f8e:	681b      	ldr	r3, [r3, #0]
 8019f90:	4413      	add	r3, r2
 8019f92:	4a09      	ldr	r2, [pc, #36]	@ (8019fb8 <vPortFree+0xc0>)
 8019f94:	6013      	str	r3, [r2, #0]
 8019f96:	6938      	ldr	r0, [r7, #16]
 8019f98:	f000 f874 	bl	801a084 <prvInsertBlockIntoFreeList>
 8019f9c:	4b07      	ldr	r3, [pc, #28]	@ (8019fbc <vPortFree+0xc4>)
 8019f9e:	681b      	ldr	r3, [r3, #0]
 8019fa0:	3301      	adds	r3, #1
 8019fa2:	4a06      	ldr	r2, [pc, #24]	@ (8019fbc <vPortFree+0xc4>)
 8019fa4:	6013      	str	r3, [r2, #0]
 8019fa6:	f7fe faa7 	bl	80184f8 <xTaskResumeAll>
 8019faa:	bf00      	nop
 8019fac:	3718      	adds	r7, #24
 8019fae:	46bd      	mov	sp, r7
 8019fb0:	bd80      	pop	{r7, pc}
 8019fb2:	bf00      	nop
 8019fb4:	2000b364 	.word	0x2000b364
 8019fb8:	2000b354 	.word	0x2000b354
 8019fbc:	2000b360 	.word	0x2000b360

08019fc0 <prvHeapInit>:
 8019fc0:	b480      	push	{r7}
 8019fc2:	b085      	sub	sp, #20
 8019fc4:	af00      	add	r7, sp, #0
 8019fc6:	f247 5330 	movw	r3, #30000	@ 0x7530
 8019fca:	60bb      	str	r3, [r7, #8]
 8019fcc:	4b27      	ldr	r3, [pc, #156]	@ (801a06c <prvHeapInit+0xac>)
 8019fce:	60fb      	str	r3, [r7, #12]
 8019fd0:	68fb      	ldr	r3, [r7, #12]
 8019fd2:	f003 0307 	and.w	r3, r3, #7
 8019fd6:	2b00      	cmp	r3, #0
 8019fd8:	d00c      	beq.n	8019ff4 <prvHeapInit+0x34>
 8019fda:	68fb      	ldr	r3, [r7, #12]
 8019fdc:	3307      	adds	r3, #7
 8019fde:	60fb      	str	r3, [r7, #12]
 8019fe0:	68fb      	ldr	r3, [r7, #12]
 8019fe2:	f023 0307 	bic.w	r3, r3, #7
 8019fe6:	60fb      	str	r3, [r7, #12]
 8019fe8:	68ba      	ldr	r2, [r7, #8]
 8019fea:	68fb      	ldr	r3, [r7, #12]
 8019fec:	1ad3      	subs	r3, r2, r3
 8019fee:	4a1f      	ldr	r2, [pc, #124]	@ (801a06c <prvHeapInit+0xac>)
 8019ff0:	4413      	add	r3, r2
 8019ff2:	60bb      	str	r3, [r7, #8]
 8019ff4:	68fb      	ldr	r3, [r7, #12]
 8019ff6:	607b      	str	r3, [r7, #4]
 8019ff8:	4a1d      	ldr	r2, [pc, #116]	@ (801a070 <prvHeapInit+0xb0>)
 8019ffa:	687b      	ldr	r3, [r7, #4]
 8019ffc:	6013      	str	r3, [r2, #0]
 8019ffe:	4b1c      	ldr	r3, [pc, #112]	@ (801a070 <prvHeapInit+0xb0>)
 801a000:	2200      	movs	r2, #0
 801a002:	605a      	str	r2, [r3, #4]
 801a004:	687b      	ldr	r3, [r7, #4]
 801a006:	68ba      	ldr	r2, [r7, #8]
 801a008:	4413      	add	r3, r2
 801a00a:	60fb      	str	r3, [r7, #12]
 801a00c:	2208      	movs	r2, #8
 801a00e:	68fb      	ldr	r3, [r7, #12]
 801a010:	1a9b      	subs	r3, r3, r2
 801a012:	60fb      	str	r3, [r7, #12]
 801a014:	68fb      	ldr	r3, [r7, #12]
 801a016:	f023 0307 	bic.w	r3, r3, #7
 801a01a:	60fb      	str	r3, [r7, #12]
 801a01c:	68fb      	ldr	r3, [r7, #12]
 801a01e:	4a15      	ldr	r2, [pc, #84]	@ (801a074 <prvHeapInit+0xb4>)
 801a020:	6013      	str	r3, [r2, #0]
 801a022:	4b14      	ldr	r3, [pc, #80]	@ (801a074 <prvHeapInit+0xb4>)
 801a024:	681b      	ldr	r3, [r3, #0]
 801a026:	2200      	movs	r2, #0
 801a028:	605a      	str	r2, [r3, #4]
 801a02a:	4b12      	ldr	r3, [pc, #72]	@ (801a074 <prvHeapInit+0xb4>)
 801a02c:	681b      	ldr	r3, [r3, #0]
 801a02e:	2200      	movs	r2, #0
 801a030:	601a      	str	r2, [r3, #0]
 801a032:	687b      	ldr	r3, [r7, #4]
 801a034:	603b      	str	r3, [r7, #0]
 801a036:	683b      	ldr	r3, [r7, #0]
 801a038:	68fa      	ldr	r2, [r7, #12]
 801a03a:	1ad2      	subs	r2, r2, r3
 801a03c:	683b      	ldr	r3, [r7, #0]
 801a03e:	605a      	str	r2, [r3, #4]
 801a040:	4b0c      	ldr	r3, [pc, #48]	@ (801a074 <prvHeapInit+0xb4>)
 801a042:	681a      	ldr	r2, [r3, #0]
 801a044:	683b      	ldr	r3, [r7, #0]
 801a046:	601a      	str	r2, [r3, #0]
 801a048:	683b      	ldr	r3, [r7, #0]
 801a04a:	685b      	ldr	r3, [r3, #4]
 801a04c:	4a0a      	ldr	r2, [pc, #40]	@ (801a078 <prvHeapInit+0xb8>)
 801a04e:	6013      	str	r3, [r2, #0]
 801a050:	683b      	ldr	r3, [r7, #0]
 801a052:	685b      	ldr	r3, [r3, #4]
 801a054:	4a09      	ldr	r2, [pc, #36]	@ (801a07c <prvHeapInit+0xbc>)
 801a056:	6013      	str	r3, [r2, #0]
 801a058:	4b09      	ldr	r3, [pc, #36]	@ (801a080 <prvHeapInit+0xc0>)
 801a05a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 801a05e:	601a      	str	r2, [r3, #0]
 801a060:	bf00      	nop
 801a062:	3714      	adds	r7, #20
 801a064:	46bd      	mov	sp, r7
 801a066:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a06a:	4770      	bx	lr
 801a06c:	20003e18 	.word	0x20003e18
 801a070:	2000b348 	.word	0x2000b348
 801a074:	2000b350 	.word	0x2000b350
 801a078:	2000b358 	.word	0x2000b358
 801a07c:	2000b354 	.word	0x2000b354
 801a080:	2000b364 	.word	0x2000b364

0801a084 <prvInsertBlockIntoFreeList>:
 801a084:	b480      	push	{r7}
 801a086:	b085      	sub	sp, #20
 801a088:	af00      	add	r7, sp, #0
 801a08a:	6078      	str	r0, [r7, #4]
 801a08c:	4b28      	ldr	r3, [pc, #160]	@ (801a130 <prvInsertBlockIntoFreeList+0xac>)
 801a08e:	60fb      	str	r3, [r7, #12]
 801a090:	e002      	b.n	801a098 <prvInsertBlockIntoFreeList+0x14>
 801a092:	68fb      	ldr	r3, [r7, #12]
 801a094:	681b      	ldr	r3, [r3, #0]
 801a096:	60fb      	str	r3, [r7, #12]
 801a098:	68fb      	ldr	r3, [r7, #12]
 801a09a:	681b      	ldr	r3, [r3, #0]
 801a09c:	687a      	ldr	r2, [r7, #4]
 801a09e:	429a      	cmp	r2, r3
 801a0a0:	d8f7      	bhi.n	801a092 <prvInsertBlockIntoFreeList+0xe>
 801a0a2:	68fb      	ldr	r3, [r7, #12]
 801a0a4:	60bb      	str	r3, [r7, #8]
 801a0a6:	68fb      	ldr	r3, [r7, #12]
 801a0a8:	685b      	ldr	r3, [r3, #4]
 801a0aa:	68ba      	ldr	r2, [r7, #8]
 801a0ac:	4413      	add	r3, r2
 801a0ae:	687a      	ldr	r2, [r7, #4]
 801a0b0:	429a      	cmp	r2, r3
 801a0b2:	d108      	bne.n	801a0c6 <prvInsertBlockIntoFreeList+0x42>
 801a0b4:	68fb      	ldr	r3, [r7, #12]
 801a0b6:	685a      	ldr	r2, [r3, #4]
 801a0b8:	687b      	ldr	r3, [r7, #4]
 801a0ba:	685b      	ldr	r3, [r3, #4]
 801a0bc:	441a      	add	r2, r3
 801a0be:	68fb      	ldr	r3, [r7, #12]
 801a0c0:	605a      	str	r2, [r3, #4]
 801a0c2:	68fb      	ldr	r3, [r7, #12]
 801a0c4:	607b      	str	r3, [r7, #4]
 801a0c6:	687b      	ldr	r3, [r7, #4]
 801a0c8:	60bb      	str	r3, [r7, #8]
 801a0ca:	687b      	ldr	r3, [r7, #4]
 801a0cc:	685b      	ldr	r3, [r3, #4]
 801a0ce:	68ba      	ldr	r2, [r7, #8]
 801a0d0:	441a      	add	r2, r3
 801a0d2:	68fb      	ldr	r3, [r7, #12]
 801a0d4:	681b      	ldr	r3, [r3, #0]
 801a0d6:	429a      	cmp	r2, r3
 801a0d8:	d118      	bne.n	801a10c <prvInsertBlockIntoFreeList+0x88>
 801a0da:	68fb      	ldr	r3, [r7, #12]
 801a0dc:	681a      	ldr	r2, [r3, #0]
 801a0de:	4b15      	ldr	r3, [pc, #84]	@ (801a134 <prvInsertBlockIntoFreeList+0xb0>)
 801a0e0:	681b      	ldr	r3, [r3, #0]
 801a0e2:	429a      	cmp	r2, r3
 801a0e4:	d00d      	beq.n	801a102 <prvInsertBlockIntoFreeList+0x7e>
 801a0e6:	687b      	ldr	r3, [r7, #4]
 801a0e8:	685a      	ldr	r2, [r3, #4]
 801a0ea:	68fb      	ldr	r3, [r7, #12]
 801a0ec:	681b      	ldr	r3, [r3, #0]
 801a0ee:	685b      	ldr	r3, [r3, #4]
 801a0f0:	441a      	add	r2, r3
 801a0f2:	687b      	ldr	r3, [r7, #4]
 801a0f4:	605a      	str	r2, [r3, #4]
 801a0f6:	68fb      	ldr	r3, [r7, #12]
 801a0f8:	681b      	ldr	r3, [r3, #0]
 801a0fa:	681a      	ldr	r2, [r3, #0]
 801a0fc:	687b      	ldr	r3, [r7, #4]
 801a0fe:	601a      	str	r2, [r3, #0]
 801a100:	e008      	b.n	801a114 <prvInsertBlockIntoFreeList+0x90>
 801a102:	4b0c      	ldr	r3, [pc, #48]	@ (801a134 <prvInsertBlockIntoFreeList+0xb0>)
 801a104:	681a      	ldr	r2, [r3, #0]
 801a106:	687b      	ldr	r3, [r7, #4]
 801a108:	601a      	str	r2, [r3, #0]
 801a10a:	e003      	b.n	801a114 <prvInsertBlockIntoFreeList+0x90>
 801a10c:	68fb      	ldr	r3, [r7, #12]
 801a10e:	681a      	ldr	r2, [r3, #0]
 801a110:	687b      	ldr	r3, [r7, #4]
 801a112:	601a      	str	r2, [r3, #0]
 801a114:	68fa      	ldr	r2, [r7, #12]
 801a116:	687b      	ldr	r3, [r7, #4]
 801a118:	429a      	cmp	r2, r3
 801a11a:	d002      	beq.n	801a122 <prvInsertBlockIntoFreeList+0x9e>
 801a11c:	68fb      	ldr	r3, [r7, #12]
 801a11e:	687a      	ldr	r2, [r7, #4]
 801a120:	601a      	str	r2, [r3, #0]
 801a122:	bf00      	nop
 801a124:	3714      	adds	r7, #20
 801a126:	46bd      	mov	sp, r7
 801a128:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a12c:	4770      	bx	lr
 801a12e:	bf00      	nop
 801a130:	2000b348 	.word	0x2000b348
 801a134:	2000b350 	.word	0x2000b350

0801a138 <MX_USB_DEVICE_Init>:
 801a138:	b580      	push	{r7, lr}
 801a13a:	af00      	add	r7, sp, #0
 801a13c:	2200      	movs	r2, #0
 801a13e:	4912      	ldr	r1, [pc, #72]	@ (801a188 <MX_USB_DEVICE_Init+0x50>)
 801a140:	4812      	ldr	r0, [pc, #72]	@ (801a18c <MX_USB_DEVICE_Init+0x54>)
 801a142:	f7fb fc09 	bl	8015958 <USBD_Init>
 801a146:	4603      	mov	r3, r0
 801a148:	2b00      	cmp	r3, #0
 801a14a:	d001      	beq.n	801a150 <MX_USB_DEVICE_Init+0x18>
 801a14c:	f7e9 fb54 	bl	80037f8 <Error_Handler>
 801a150:	490f      	ldr	r1, [pc, #60]	@ (801a190 <MX_USB_DEVICE_Init+0x58>)
 801a152:	480e      	ldr	r0, [pc, #56]	@ (801a18c <MX_USB_DEVICE_Init+0x54>)
 801a154:	f7fb fc30 	bl	80159b8 <USBD_RegisterClass>
 801a158:	4603      	mov	r3, r0
 801a15a:	2b00      	cmp	r3, #0
 801a15c:	d001      	beq.n	801a162 <MX_USB_DEVICE_Init+0x2a>
 801a15e:	f7e9 fb4b 	bl	80037f8 <Error_Handler>
 801a162:	490c      	ldr	r1, [pc, #48]	@ (801a194 <MX_USB_DEVICE_Init+0x5c>)
 801a164:	4809      	ldr	r0, [pc, #36]	@ (801a18c <MX_USB_DEVICE_Init+0x54>)
 801a166:	f7fb fb67 	bl	8015838 <USBD_CDC_RegisterInterface>
 801a16a:	4603      	mov	r3, r0
 801a16c:	2b00      	cmp	r3, #0
 801a16e:	d001      	beq.n	801a174 <MX_USB_DEVICE_Init+0x3c>
 801a170:	f7e9 fb42 	bl	80037f8 <Error_Handler>
 801a174:	4805      	ldr	r0, [pc, #20]	@ (801a18c <MX_USB_DEVICE_Init+0x54>)
 801a176:	f7fb fc55 	bl	8015a24 <USBD_Start>
 801a17a:	4603      	mov	r3, r0
 801a17c:	2b00      	cmp	r3, #0
 801a17e:	d001      	beq.n	801a184 <MX_USB_DEVICE_Init+0x4c>
 801a180:	f7e9 fb3a 	bl	80037f8 <Error_Handler>
 801a184:	bf00      	nop
 801a186:	bd80      	pop	{r7, pc}
 801a188:	200000c4 	.word	0x200000c4
 801a18c:	2000b368 	.word	0x2000b368
 801a190:	2000002c 	.word	0x2000002c
 801a194:	200000b0 	.word	0x200000b0

0801a198 <CDC_Init_FS>:
 801a198:	b580      	push	{r7, lr}
 801a19a:	af00      	add	r7, sp, #0
 801a19c:	2200      	movs	r2, #0
 801a19e:	4905      	ldr	r1, [pc, #20]	@ (801a1b4 <CDC_Init_FS+0x1c>)
 801a1a0:	4805      	ldr	r0, [pc, #20]	@ (801a1b8 <CDC_Init_FS+0x20>)
 801a1a2:	f7fb fb63 	bl	801586c <USBD_CDC_SetTxBuffer>
 801a1a6:	4905      	ldr	r1, [pc, #20]	@ (801a1bc <CDC_Init_FS+0x24>)
 801a1a8:	4803      	ldr	r0, [pc, #12]	@ (801a1b8 <CDC_Init_FS+0x20>)
 801a1aa:	f7fb fb81 	bl	80158b0 <USBD_CDC_SetRxBuffer>
 801a1ae:	2300      	movs	r3, #0
 801a1b0:	4618      	mov	r0, r3
 801a1b2:	bd80      	pop	{r7, pc}
 801a1b4:	2000be4c 	.word	0x2000be4c
 801a1b8:	2000b368 	.word	0x2000b368
 801a1bc:	2000b64c 	.word	0x2000b64c

0801a1c0 <CDC_DeInit_FS>:
 801a1c0:	b480      	push	{r7}
 801a1c2:	af00      	add	r7, sp, #0
 801a1c4:	2300      	movs	r3, #0
 801a1c6:	4618      	mov	r0, r3
 801a1c8:	46bd      	mov	sp, r7
 801a1ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a1ce:	4770      	bx	lr

0801a1d0 <CDC_Control_FS>:
 801a1d0:	b480      	push	{r7}
 801a1d2:	b083      	sub	sp, #12
 801a1d4:	af00      	add	r7, sp, #0
 801a1d6:	4603      	mov	r3, r0
 801a1d8:	6039      	str	r1, [r7, #0]
 801a1da:	71fb      	strb	r3, [r7, #7]
 801a1dc:	4613      	mov	r3, r2
 801a1de:	80bb      	strh	r3, [r7, #4]
 801a1e0:	79fb      	ldrb	r3, [r7, #7]
 801a1e2:	2b23      	cmp	r3, #35	@ 0x23
 801a1e4:	f200 808c 	bhi.w	801a300 <CDC_Control_FS+0x130>
 801a1e8:	a201      	add	r2, pc, #4	@ (adr r2, 801a1f0 <CDC_Control_FS+0x20>)
 801a1ea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a1ee:	bf00      	nop
 801a1f0:	0801a301 	.word	0x0801a301
 801a1f4:	0801a301 	.word	0x0801a301
 801a1f8:	0801a301 	.word	0x0801a301
 801a1fc:	0801a301 	.word	0x0801a301
 801a200:	0801a301 	.word	0x0801a301
 801a204:	0801a301 	.word	0x0801a301
 801a208:	0801a301 	.word	0x0801a301
 801a20c:	0801a301 	.word	0x0801a301
 801a210:	0801a301 	.word	0x0801a301
 801a214:	0801a301 	.word	0x0801a301
 801a218:	0801a301 	.word	0x0801a301
 801a21c:	0801a301 	.word	0x0801a301
 801a220:	0801a301 	.word	0x0801a301
 801a224:	0801a301 	.word	0x0801a301
 801a228:	0801a301 	.word	0x0801a301
 801a22c:	0801a301 	.word	0x0801a301
 801a230:	0801a301 	.word	0x0801a301
 801a234:	0801a301 	.word	0x0801a301
 801a238:	0801a301 	.word	0x0801a301
 801a23c:	0801a301 	.word	0x0801a301
 801a240:	0801a301 	.word	0x0801a301
 801a244:	0801a301 	.word	0x0801a301
 801a248:	0801a301 	.word	0x0801a301
 801a24c:	0801a301 	.word	0x0801a301
 801a250:	0801a301 	.word	0x0801a301
 801a254:	0801a301 	.word	0x0801a301
 801a258:	0801a301 	.word	0x0801a301
 801a25c:	0801a301 	.word	0x0801a301
 801a260:	0801a301 	.word	0x0801a301
 801a264:	0801a301 	.word	0x0801a301
 801a268:	0801a301 	.word	0x0801a301
 801a26c:	0801a301 	.word	0x0801a301
 801a270:	0801a281 	.word	0x0801a281
 801a274:	0801a2bb 	.word	0x0801a2bb
 801a278:	0801a301 	.word	0x0801a301
 801a27c:	0801a301 	.word	0x0801a301
 801a280:	683b      	ldr	r3, [r7, #0]
 801a282:	781a      	ldrb	r2, [r3, #0]
 801a284:	4b22      	ldr	r3, [pc, #136]	@ (801a310 <CDC_Control_FS+0x140>)
 801a286:	701a      	strb	r2, [r3, #0]
 801a288:	683b      	ldr	r3, [r7, #0]
 801a28a:	785a      	ldrb	r2, [r3, #1]
 801a28c:	4b20      	ldr	r3, [pc, #128]	@ (801a310 <CDC_Control_FS+0x140>)
 801a28e:	705a      	strb	r2, [r3, #1]
 801a290:	683b      	ldr	r3, [r7, #0]
 801a292:	789a      	ldrb	r2, [r3, #2]
 801a294:	4b1e      	ldr	r3, [pc, #120]	@ (801a310 <CDC_Control_FS+0x140>)
 801a296:	709a      	strb	r2, [r3, #2]
 801a298:	683b      	ldr	r3, [r7, #0]
 801a29a:	78da      	ldrb	r2, [r3, #3]
 801a29c:	4b1c      	ldr	r3, [pc, #112]	@ (801a310 <CDC_Control_FS+0x140>)
 801a29e:	70da      	strb	r2, [r3, #3]
 801a2a0:	683b      	ldr	r3, [r7, #0]
 801a2a2:	791a      	ldrb	r2, [r3, #4]
 801a2a4:	4b1a      	ldr	r3, [pc, #104]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2a6:	711a      	strb	r2, [r3, #4]
 801a2a8:	683b      	ldr	r3, [r7, #0]
 801a2aa:	795a      	ldrb	r2, [r3, #5]
 801a2ac:	4b18      	ldr	r3, [pc, #96]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2ae:	715a      	strb	r2, [r3, #5]
 801a2b0:	683b      	ldr	r3, [r7, #0]
 801a2b2:	799a      	ldrb	r2, [r3, #6]
 801a2b4:	4b16      	ldr	r3, [pc, #88]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2b6:	719a      	strb	r2, [r3, #6]
 801a2b8:	e023      	b.n	801a302 <CDC_Control_FS+0x132>
 801a2ba:	4b15      	ldr	r3, [pc, #84]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2bc:	781a      	ldrb	r2, [r3, #0]
 801a2be:	683b      	ldr	r3, [r7, #0]
 801a2c0:	701a      	strb	r2, [r3, #0]
 801a2c2:	683b      	ldr	r3, [r7, #0]
 801a2c4:	3301      	adds	r3, #1
 801a2c6:	4a12      	ldr	r2, [pc, #72]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2c8:	7852      	ldrb	r2, [r2, #1]
 801a2ca:	701a      	strb	r2, [r3, #0]
 801a2cc:	683b      	ldr	r3, [r7, #0]
 801a2ce:	3302      	adds	r3, #2
 801a2d0:	4a0f      	ldr	r2, [pc, #60]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2d2:	7892      	ldrb	r2, [r2, #2]
 801a2d4:	701a      	strb	r2, [r3, #0]
 801a2d6:	683b      	ldr	r3, [r7, #0]
 801a2d8:	3303      	adds	r3, #3
 801a2da:	4a0d      	ldr	r2, [pc, #52]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2dc:	78d2      	ldrb	r2, [r2, #3]
 801a2de:	701a      	strb	r2, [r3, #0]
 801a2e0:	683b      	ldr	r3, [r7, #0]
 801a2e2:	3304      	adds	r3, #4
 801a2e4:	4a0a      	ldr	r2, [pc, #40]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2e6:	7912      	ldrb	r2, [r2, #4]
 801a2e8:	701a      	strb	r2, [r3, #0]
 801a2ea:	683b      	ldr	r3, [r7, #0]
 801a2ec:	3305      	adds	r3, #5
 801a2ee:	4a08      	ldr	r2, [pc, #32]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2f0:	7952      	ldrb	r2, [r2, #5]
 801a2f2:	701a      	strb	r2, [r3, #0]
 801a2f4:	683b      	ldr	r3, [r7, #0]
 801a2f6:	3306      	adds	r3, #6
 801a2f8:	4a05      	ldr	r2, [pc, #20]	@ (801a310 <CDC_Control_FS+0x140>)
 801a2fa:	7992      	ldrb	r2, [r2, #6]
 801a2fc:	701a      	strb	r2, [r3, #0]
 801a2fe:	e000      	b.n	801a302 <CDC_Control_FS+0x132>
 801a300:	bf00      	nop
 801a302:	2300      	movs	r3, #0
 801a304:	4618      	mov	r0, r3
 801a306:	370c      	adds	r7, #12
 801a308:	46bd      	mov	sp, r7
 801a30a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a30e:	4770      	bx	lr
 801a310:	2000b644 	.word	0x2000b644

0801a314 <CDC_Receive_FS>:
 801a314:	b580      	push	{r7, lr}
 801a316:	b082      	sub	sp, #8
 801a318:	af00      	add	r7, sp, #0
 801a31a:	6078      	str	r0, [r7, #4]
 801a31c:	6039      	str	r1, [r7, #0]
 801a31e:	6879      	ldr	r1, [r7, #4]
 801a320:	4807      	ldr	r0, [pc, #28]	@ (801a340 <CDC_Receive_FS+0x2c>)
 801a322:	f7fb fac5 	bl	80158b0 <USBD_CDC_SetRxBuffer>
 801a326:	4806      	ldr	r0, [pc, #24]	@ (801a340 <CDC_Receive_FS+0x2c>)
 801a328:	f7fb fae0 	bl	80158ec <USBD_CDC_ReceivePacket>
 801a32c:	6839      	ldr	r1, [r7, #0]
 801a32e:	6878      	ldr	r0, [r7, #4]
 801a330:	f7f0 fdc2 	bl	800aeb8 <usb_vcp_processing>
 801a334:	2300      	movs	r3, #0
 801a336:	4618      	mov	r0, r3
 801a338:	3708      	adds	r7, #8
 801a33a:	46bd      	mov	sp, r7
 801a33c:	bd80      	pop	{r7, pc}
 801a33e:	bf00      	nop
 801a340:	2000b368 	.word	0x2000b368

0801a344 <CDC_TransmitCplt_FS>:
 801a344:	b480      	push	{r7}
 801a346:	b087      	sub	sp, #28
 801a348:	af00      	add	r7, sp, #0
 801a34a:	60f8      	str	r0, [r7, #12]
 801a34c:	60b9      	str	r1, [r7, #8]
 801a34e:	4613      	mov	r3, r2
 801a350:	71fb      	strb	r3, [r7, #7]
 801a352:	2300      	movs	r3, #0
 801a354:	75fb      	strb	r3, [r7, #23]
 801a356:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801a35a:	4618      	mov	r0, r3
 801a35c:	371c      	adds	r7, #28
 801a35e:	46bd      	mov	sp, r7
 801a360:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a364:	4770      	bx	lr
	...

0801a368 <USBD_FS_DeviceDescriptor>:
 801a368:	b480      	push	{r7}
 801a36a:	b083      	sub	sp, #12
 801a36c:	af00      	add	r7, sp, #0
 801a36e:	4603      	mov	r3, r0
 801a370:	6039      	str	r1, [r7, #0]
 801a372:	71fb      	strb	r3, [r7, #7]
 801a374:	683b      	ldr	r3, [r7, #0]
 801a376:	2212      	movs	r2, #18
 801a378:	801a      	strh	r2, [r3, #0]
 801a37a:	4b03      	ldr	r3, [pc, #12]	@ (801a388 <USBD_FS_DeviceDescriptor+0x20>)
 801a37c:	4618      	mov	r0, r3
 801a37e:	370c      	adds	r7, #12
 801a380:	46bd      	mov	sp, r7
 801a382:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a386:	4770      	bx	lr
 801a388:	200000e0 	.word	0x200000e0

0801a38c <USBD_FS_LangIDStrDescriptor>:
 801a38c:	b480      	push	{r7}
 801a38e:	b083      	sub	sp, #12
 801a390:	af00      	add	r7, sp, #0
 801a392:	4603      	mov	r3, r0
 801a394:	6039      	str	r1, [r7, #0]
 801a396:	71fb      	strb	r3, [r7, #7]
 801a398:	683b      	ldr	r3, [r7, #0]
 801a39a:	2204      	movs	r2, #4
 801a39c:	801a      	strh	r2, [r3, #0]
 801a39e:	4b03      	ldr	r3, [pc, #12]	@ (801a3ac <USBD_FS_LangIDStrDescriptor+0x20>)
 801a3a0:	4618      	mov	r0, r3
 801a3a2:	370c      	adds	r7, #12
 801a3a4:	46bd      	mov	sp, r7
 801a3a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3aa:	4770      	bx	lr
 801a3ac:	200000f4 	.word	0x200000f4

0801a3b0 <USBD_FS_ProductStrDescriptor>:
 801a3b0:	b580      	push	{r7, lr}
 801a3b2:	b082      	sub	sp, #8
 801a3b4:	af00      	add	r7, sp, #0
 801a3b6:	4603      	mov	r3, r0
 801a3b8:	6039      	str	r1, [r7, #0]
 801a3ba:	71fb      	strb	r3, [r7, #7]
 801a3bc:	79fb      	ldrb	r3, [r7, #7]
 801a3be:	2b00      	cmp	r3, #0
 801a3c0:	d105      	bne.n	801a3ce <USBD_FS_ProductStrDescriptor+0x1e>
 801a3c2:	683a      	ldr	r2, [r7, #0]
 801a3c4:	4907      	ldr	r1, [pc, #28]	@ (801a3e4 <USBD_FS_ProductStrDescriptor+0x34>)
 801a3c6:	4808      	ldr	r0, [pc, #32]	@ (801a3e8 <USBD_FS_ProductStrDescriptor+0x38>)
 801a3c8:	f7fc fcd6 	bl	8016d78 <USBD_GetString>
 801a3cc:	e004      	b.n	801a3d8 <USBD_FS_ProductStrDescriptor+0x28>
 801a3ce:	683a      	ldr	r2, [r7, #0]
 801a3d0:	4904      	ldr	r1, [pc, #16]	@ (801a3e4 <USBD_FS_ProductStrDescriptor+0x34>)
 801a3d2:	4805      	ldr	r0, [pc, #20]	@ (801a3e8 <USBD_FS_ProductStrDescriptor+0x38>)
 801a3d4:	f7fc fcd0 	bl	8016d78 <USBD_GetString>
 801a3d8:	4b02      	ldr	r3, [pc, #8]	@ (801a3e4 <USBD_FS_ProductStrDescriptor+0x34>)
 801a3da:	4618      	mov	r0, r3
 801a3dc:	3708      	adds	r7, #8
 801a3de:	46bd      	mov	sp, r7
 801a3e0:	bd80      	pop	{r7, pc}
 801a3e2:	bf00      	nop
 801a3e4:	2000c64c 	.word	0x2000c64c
 801a3e8:	08020f8c 	.word	0x08020f8c

0801a3ec <USBD_FS_ManufacturerStrDescriptor>:
 801a3ec:	b580      	push	{r7, lr}
 801a3ee:	b082      	sub	sp, #8
 801a3f0:	af00      	add	r7, sp, #0
 801a3f2:	4603      	mov	r3, r0
 801a3f4:	6039      	str	r1, [r7, #0]
 801a3f6:	71fb      	strb	r3, [r7, #7]
 801a3f8:	683a      	ldr	r2, [r7, #0]
 801a3fa:	4904      	ldr	r1, [pc, #16]	@ (801a40c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801a3fc:	4804      	ldr	r0, [pc, #16]	@ (801a410 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801a3fe:	f7fc fcbb 	bl	8016d78 <USBD_GetString>
 801a402:	4b02      	ldr	r3, [pc, #8]	@ (801a40c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801a404:	4618      	mov	r0, r3
 801a406:	3708      	adds	r7, #8
 801a408:	46bd      	mov	sp, r7
 801a40a:	bd80      	pop	{r7, pc}
 801a40c:	2000c64c 	.word	0x2000c64c
 801a410:	08020fa4 	.word	0x08020fa4

0801a414 <USBD_FS_SerialStrDescriptor>:
 801a414:	b580      	push	{r7, lr}
 801a416:	b082      	sub	sp, #8
 801a418:	af00      	add	r7, sp, #0
 801a41a:	4603      	mov	r3, r0
 801a41c:	6039      	str	r1, [r7, #0]
 801a41e:	71fb      	strb	r3, [r7, #7]
 801a420:	683b      	ldr	r3, [r7, #0]
 801a422:	221a      	movs	r2, #26
 801a424:	801a      	strh	r2, [r3, #0]
 801a426:	f000 f843 	bl	801a4b0 <Get_SerialNum>
 801a42a:	4b02      	ldr	r3, [pc, #8]	@ (801a434 <USBD_FS_SerialStrDescriptor+0x20>)
 801a42c:	4618      	mov	r0, r3
 801a42e:	3708      	adds	r7, #8
 801a430:	46bd      	mov	sp, r7
 801a432:	bd80      	pop	{r7, pc}
 801a434:	200000f8 	.word	0x200000f8

0801a438 <USBD_FS_ConfigStrDescriptor>:
 801a438:	b580      	push	{r7, lr}
 801a43a:	b082      	sub	sp, #8
 801a43c:	af00      	add	r7, sp, #0
 801a43e:	4603      	mov	r3, r0
 801a440:	6039      	str	r1, [r7, #0]
 801a442:	71fb      	strb	r3, [r7, #7]
 801a444:	79fb      	ldrb	r3, [r7, #7]
 801a446:	2b00      	cmp	r3, #0
 801a448:	d105      	bne.n	801a456 <USBD_FS_ConfigStrDescriptor+0x1e>
 801a44a:	683a      	ldr	r2, [r7, #0]
 801a44c:	4907      	ldr	r1, [pc, #28]	@ (801a46c <USBD_FS_ConfigStrDescriptor+0x34>)
 801a44e:	4808      	ldr	r0, [pc, #32]	@ (801a470 <USBD_FS_ConfigStrDescriptor+0x38>)
 801a450:	f7fc fc92 	bl	8016d78 <USBD_GetString>
 801a454:	e004      	b.n	801a460 <USBD_FS_ConfigStrDescriptor+0x28>
 801a456:	683a      	ldr	r2, [r7, #0]
 801a458:	4904      	ldr	r1, [pc, #16]	@ (801a46c <USBD_FS_ConfigStrDescriptor+0x34>)
 801a45a:	4805      	ldr	r0, [pc, #20]	@ (801a470 <USBD_FS_ConfigStrDescriptor+0x38>)
 801a45c:	f7fc fc8c 	bl	8016d78 <USBD_GetString>
 801a460:	4b02      	ldr	r3, [pc, #8]	@ (801a46c <USBD_FS_ConfigStrDescriptor+0x34>)
 801a462:	4618      	mov	r0, r3
 801a464:	3708      	adds	r7, #8
 801a466:	46bd      	mov	sp, r7
 801a468:	bd80      	pop	{r7, pc}
 801a46a:	bf00      	nop
 801a46c:	2000c64c 	.word	0x2000c64c
 801a470:	08020fb8 	.word	0x08020fb8

0801a474 <USBD_FS_InterfaceStrDescriptor>:
 801a474:	b580      	push	{r7, lr}
 801a476:	b082      	sub	sp, #8
 801a478:	af00      	add	r7, sp, #0
 801a47a:	4603      	mov	r3, r0
 801a47c:	6039      	str	r1, [r7, #0]
 801a47e:	71fb      	strb	r3, [r7, #7]
 801a480:	79fb      	ldrb	r3, [r7, #7]
 801a482:	2b00      	cmp	r3, #0
 801a484:	d105      	bne.n	801a492 <USBD_FS_InterfaceStrDescriptor+0x1e>
 801a486:	683a      	ldr	r2, [r7, #0]
 801a488:	4907      	ldr	r1, [pc, #28]	@ (801a4a8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a48a:	4808      	ldr	r0, [pc, #32]	@ (801a4ac <USBD_FS_InterfaceStrDescriptor+0x38>)
 801a48c:	f7fc fc74 	bl	8016d78 <USBD_GetString>
 801a490:	e004      	b.n	801a49c <USBD_FS_InterfaceStrDescriptor+0x28>
 801a492:	683a      	ldr	r2, [r7, #0]
 801a494:	4904      	ldr	r1, [pc, #16]	@ (801a4a8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a496:	4805      	ldr	r0, [pc, #20]	@ (801a4ac <USBD_FS_InterfaceStrDescriptor+0x38>)
 801a498:	f7fc fc6e 	bl	8016d78 <USBD_GetString>
 801a49c:	4b02      	ldr	r3, [pc, #8]	@ (801a4a8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a49e:	4618      	mov	r0, r3
 801a4a0:	3708      	adds	r7, #8
 801a4a2:	46bd      	mov	sp, r7
 801a4a4:	bd80      	pop	{r7, pc}
 801a4a6:	bf00      	nop
 801a4a8:	2000c64c 	.word	0x2000c64c
 801a4ac:	08020fc4 	.word	0x08020fc4

0801a4b0 <Get_SerialNum>:
 801a4b0:	b580      	push	{r7, lr}
 801a4b2:	b084      	sub	sp, #16
 801a4b4:	af00      	add	r7, sp, #0
 801a4b6:	4b0f      	ldr	r3, [pc, #60]	@ (801a4f4 <Get_SerialNum+0x44>)
 801a4b8:	681b      	ldr	r3, [r3, #0]
 801a4ba:	60fb      	str	r3, [r7, #12]
 801a4bc:	4b0e      	ldr	r3, [pc, #56]	@ (801a4f8 <Get_SerialNum+0x48>)
 801a4be:	681b      	ldr	r3, [r3, #0]
 801a4c0:	60bb      	str	r3, [r7, #8]
 801a4c2:	4b0e      	ldr	r3, [pc, #56]	@ (801a4fc <Get_SerialNum+0x4c>)
 801a4c4:	681b      	ldr	r3, [r3, #0]
 801a4c6:	607b      	str	r3, [r7, #4]
 801a4c8:	68fa      	ldr	r2, [r7, #12]
 801a4ca:	687b      	ldr	r3, [r7, #4]
 801a4cc:	4413      	add	r3, r2
 801a4ce:	60fb      	str	r3, [r7, #12]
 801a4d0:	68fb      	ldr	r3, [r7, #12]
 801a4d2:	2b00      	cmp	r3, #0
 801a4d4:	d009      	beq.n	801a4ea <Get_SerialNum+0x3a>
 801a4d6:	2208      	movs	r2, #8
 801a4d8:	4909      	ldr	r1, [pc, #36]	@ (801a500 <Get_SerialNum+0x50>)
 801a4da:	68f8      	ldr	r0, [r7, #12]
 801a4dc:	f000 f814 	bl	801a508 <IntToUnicode>
 801a4e0:	2204      	movs	r2, #4
 801a4e2:	4908      	ldr	r1, [pc, #32]	@ (801a504 <Get_SerialNum+0x54>)
 801a4e4:	68b8      	ldr	r0, [r7, #8]
 801a4e6:	f000 f80f 	bl	801a508 <IntToUnicode>
 801a4ea:	bf00      	nop
 801a4ec:	3710      	adds	r7, #16
 801a4ee:	46bd      	mov	sp, r7
 801a4f0:	bd80      	pop	{r7, pc}
 801a4f2:	bf00      	nop
 801a4f4:	1fff7a10 	.word	0x1fff7a10
 801a4f8:	1fff7a14 	.word	0x1fff7a14
 801a4fc:	1fff7a18 	.word	0x1fff7a18
 801a500:	200000fa 	.word	0x200000fa
 801a504:	2000010a 	.word	0x2000010a

0801a508 <IntToUnicode>:
 801a508:	b480      	push	{r7}
 801a50a:	b087      	sub	sp, #28
 801a50c:	af00      	add	r7, sp, #0
 801a50e:	60f8      	str	r0, [r7, #12]
 801a510:	60b9      	str	r1, [r7, #8]
 801a512:	4613      	mov	r3, r2
 801a514:	71fb      	strb	r3, [r7, #7]
 801a516:	2300      	movs	r3, #0
 801a518:	75fb      	strb	r3, [r7, #23]
 801a51a:	2300      	movs	r3, #0
 801a51c:	75fb      	strb	r3, [r7, #23]
 801a51e:	e027      	b.n	801a570 <IntToUnicode+0x68>
 801a520:	68fb      	ldr	r3, [r7, #12]
 801a522:	0f1b      	lsrs	r3, r3, #28
 801a524:	2b09      	cmp	r3, #9
 801a526:	d80b      	bhi.n	801a540 <IntToUnicode+0x38>
 801a528:	68fb      	ldr	r3, [r7, #12]
 801a52a:	0f1b      	lsrs	r3, r3, #28
 801a52c:	b2da      	uxtb	r2, r3
 801a52e:	7dfb      	ldrb	r3, [r7, #23]
 801a530:	005b      	lsls	r3, r3, #1
 801a532:	4619      	mov	r1, r3
 801a534:	68bb      	ldr	r3, [r7, #8]
 801a536:	440b      	add	r3, r1
 801a538:	3230      	adds	r2, #48	@ 0x30
 801a53a:	b2d2      	uxtb	r2, r2
 801a53c:	701a      	strb	r2, [r3, #0]
 801a53e:	e00a      	b.n	801a556 <IntToUnicode+0x4e>
 801a540:	68fb      	ldr	r3, [r7, #12]
 801a542:	0f1b      	lsrs	r3, r3, #28
 801a544:	b2da      	uxtb	r2, r3
 801a546:	7dfb      	ldrb	r3, [r7, #23]
 801a548:	005b      	lsls	r3, r3, #1
 801a54a:	4619      	mov	r1, r3
 801a54c:	68bb      	ldr	r3, [r7, #8]
 801a54e:	440b      	add	r3, r1
 801a550:	3237      	adds	r2, #55	@ 0x37
 801a552:	b2d2      	uxtb	r2, r2
 801a554:	701a      	strb	r2, [r3, #0]
 801a556:	68fb      	ldr	r3, [r7, #12]
 801a558:	011b      	lsls	r3, r3, #4
 801a55a:	60fb      	str	r3, [r7, #12]
 801a55c:	7dfb      	ldrb	r3, [r7, #23]
 801a55e:	005b      	lsls	r3, r3, #1
 801a560:	3301      	adds	r3, #1
 801a562:	68ba      	ldr	r2, [r7, #8]
 801a564:	4413      	add	r3, r2
 801a566:	2200      	movs	r2, #0
 801a568:	701a      	strb	r2, [r3, #0]
 801a56a:	7dfb      	ldrb	r3, [r7, #23]
 801a56c:	3301      	adds	r3, #1
 801a56e:	75fb      	strb	r3, [r7, #23]
 801a570:	7dfa      	ldrb	r2, [r7, #23]
 801a572:	79fb      	ldrb	r3, [r7, #7]
 801a574:	429a      	cmp	r2, r3
 801a576:	d3d3      	bcc.n	801a520 <IntToUnicode+0x18>
 801a578:	bf00      	nop
 801a57a:	bf00      	nop
 801a57c:	371c      	adds	r7, #28
 801a57e:	46bd      	mov	sp, r7
 801a580:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a584:	4770      	bx	lr
	...

0801a588 <HAL_PCD_MspInit>:
 801a588:	b580      	push	{r7, lr}
 801a58a:	b08a      	sub	sp, #40	@ 0x28
 801a58c:	af00      	add	r7, sp, #0
 801a58e:	6078      	str	r0, [r7, #4]
 801a590:	f107 0314 	add.w	r3, r7, #20
 801a594:	2200      	movs	r2, #0
 801a596:	601a      	str	r2, [r3, #0]
 801a598:	605a      	str	r2, [r3, #4]
 801a59a:	609a      	str	r2, [r3, #8]
 801a59c:	60da      	str	r2, [r3, #12]
 801a59e:	611a      	str	r2, [r3, #16]
 801a5a0:	687b      	ldr	r3, [r7, #4]
 801a5a2:	681b      	ldr	r3, [r3, #0]
 801a5a4:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 801a5a8:	d13a      	bne.n	801a620 <HAL_PCD_MspInit+0x98>
 801a5aa:	2300      	movs	r3, #0
 801a5ac:	613b      	str	r3, [r7, #16]
 801a5ae:	4b1e      	ldr	r3, [pc, #120]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a5b2:	4a1d      	ldr	r2, [pc, #116]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5b4:	f043 0301 	orr.w	r3, r3, #1
 801a5b8:	6313      	str	r3, [r2, #48]	@ 0x30
 801a5ba:	4b1b      	ldr	r3, [pc, #108]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a5be:	f003 0301 	and.w	r3, r3, #1
 801a5c2:	613b      	str	r3, [r7, #16]
 801a5c4:	693b      	ldr	r3, [r7, #16]
 801a5c6:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 801a5ca:	617b      	str	r3, [r7, #20]
 801a5cc:	2302      	movs	r3, #2
 801a5ce:	61bb      	str	r3, [r7, #24]
 801a5d0:	2300      	movs	r3, #0
 801a5d2:	61fb      	str	r3, [r7, #28]
 801a5d4:	2303      	movs	r3, #3
 801a5d6:	623b      	str	r3, [r7, #32]
 801a5d8:	230a      	movs	r3, #10
 801a5da:	627b      	str	r3, [r7, #36]	@ 0x24
 801a5dc:	f107 0314 	add.w	r3, r7, #20
 801a5e0:	4619      	mov	r1, r3
 801a5e2:	4812      	ldr	r0, [pc, #72]	@ (801a62c <HAL_PCD_MspInit+0xa4>)
 801a5e4:	f7f2 fb40 	bl	800cc68 <HAL_GPIO_Init>
 801a5e8:	4b0f      	ldr	r3, [pc, #60]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5ea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801a5ec:	4a0e      	ldr	r2, [pc, #56]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801a5f2:	6353      	str	r3, [r2, #52]	@ 0x34
 801a5f4:	2300      	movs	r3, #0
 801a5f6:	60fb      	str	r3, [r7, #12]
 801a5f8:	4b0b      	ldr	r3, [pc, #44]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a5fc:	4a0a      	ldr	r2, [pc, #40]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a5fe:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 801a602:	6453      	str	r3, [r2, #68]	@ 0x44
 801a604:	4b08      	ldr	r3, [pc, #32]	@ (801a628 <HAL_PCD_MspInit+0xa0>)
 801a606:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a608:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 801a60c:	60fb      	str	r3, [r7, #12]
 801a60e:	68fb      	ldr	r3, [r7, #12]
 801a610:	2200      	movs	r2, #0
 801a612:	2105      	movs	r1, #5
 801a614:	2043      	movs	r0, #67	@ 0x43
 801a616:	f7f1 fee1 	bl	800c3dc <HAL_NVIC_SetPriority>
 801a61a:	2043      	movs	r0, #67	@ 0x43
 801a61c:	f7f1 fefa 	bl	800c414 <HAL_NVIC_EnableIRQ>
 801a620:	bf00      	nop
 801a622:	3728      	adds	r7, #40	@ 0x28
 801a624:	46bd      	mov	sp, r7
 801a626:	bd80      	pop	{r7, pc}
 801a628:	40023800 	.word	0x40023800
 801a62c:	40020000 	.word	0x40020000

0801a630 <HAL_PCD_SetupStageCallback>:
 801a630:	b580      	push	{r7, lr}
 801a632:	b082      	sub	sp, #8
 801a634:	af00      	add	r7, sp, #0
 801a636:	6078      	str	r0, [r7, #4]
 801a638:	687b      	ldr	r3, [r7, #4]
 801a63a:	f8d3 2508 	ldr.w	r2, [r3, #1288]	@ 0x508
 801a63e:	687b      	ldr	r3, [r7, #4]
 801a640:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 801a644:	4619      	mov	r1, r3
 801a646:	4610      	mov	r0, r2
 801a648:	f7fb fa39 	bl	8015abe <USBD_LL_SetupStage>
 801a64c:	bf00      	nop
 801a64e:	3708      	adds	r7, #8
 801a650:	46bd      	mov	sp, r7
 801a652:	bd80      	pop	{r7, pc}

0801a654 <HAL_PCD_DataOutStageCallback>:
 801a654:	b580      	push	{r7, lr}
 801a656:	b082      	sub	sp, #8
 801a658:	af00      	add	r7, sp, #0
 801a65a:	6078      	str	r0, [r7, #4]
 801a65c:	460b      	mov	r3, r1
 801a65e:	70fb      	strb	r3, [r7, #3]
 801a660:	687b      	ldr	r3, [r7, #4]
 801a662:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801a666:	78fa      	ldrb	r2, [r7, #3]
 801a668:	6879      	ldr	r1, [r7, #4]
 801a66a:	4613      	mov	r3, r2
 801a66c:	00db      	lsls	r3, r3, #3
 801a66e:	4413      	add	r3, r2
 801a670:	009b      	lsls	r3, r3, #2
 801a672:	440b      	add	r3, r1
 801a674:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 801a678:	681a      	ldr	r2, [r3, #0]
 801a67a:	78fb      	ldrb	r3, [r7, #3]
 801a67c:	4619      	mov	r1, r3
 801a67e:	f7fb fa73 	bl	8015b68 <USBD_LL_DataOutStage>
 801a682:	bf00      	nop
 801a684:	3708      	adds	r7, #8
 801a686:	46bd      	mov	sp, r7
 801a688:	bd80      	pop	{r7, pc}

0801a68a <HAL_PCD_DataInStageCallback>:
 801a68a:	b580      	push	{r7, lr}
 801a68c:	b082      	sub	sp, #8
 801a68e:	af00      	add	r7, sp, #0
 801a690:	6078      	str	r0, [r7, #4]
 801a692:	460b      	mov	r3, r1
 801a694:	70fb      	strb	r3, [r7, #3]
 801a696:	687b      	ldr	r3, [r7, #4]
 801a698:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801a69c:	78fa      	ldrb	r2, [r7, #3]
 801a69e:	6879      	ldr	r1, [r7, #4]
 801a6a0:	4613      	mov	r3, r2
 801a6a2:	00db      	lsls	r3, r3, #3
 801a6a4:	4413      	add	r3, r2
 801a6a6:	009b      	lsls	r3, r3, #2
 801a6a8:	440b      	add	r3, r1
 801a6aa:	334c      	adds	r3, #76	@ 0x4c
 801a6ac:	681a      	ldr	r2, [r3, #0]
 801a6ae:	78fb      	ldrb	r3, [r7, #3]
 801a6b0:	4619      	mov	r1, r3
 801a6b2:	f7fb fb0c 	bl	8015cce <USBD_LL_DataInStage>
 801a6b6:	bf00      	nop
 801a6b8:	3708      	adds	r7, #8
 801a6ba:	46bd      	mov	sp, r7
 801a6bc:	bd80      	pop	{r7, pc}

0801a6be <HAL_PCD_SOFCallback>:
 801a6be:	b580      	push	{r7, lr}
 801a6c0:	b082      	sub	sp, #8
 801a6c2:	af00      	add	r7, sp, #0
 801a6c4:	6078      	str	r0, [r7, #4]
 801a6c6:	687b      	ldr	r3, [r7, #4]
 801a6c8:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a6cc:	4618      	mov	r0, r3
 801a6ce:	f7fb fc40 	bl	8015f52 <USBD_LL_SOF>
 801a6d2:	bf00      	nop
 801a6d4:	3708      	adds	r7, #8
 801a6d6:	46bd      	mov	sp, r7
 801a6d8:	bd80      	pop	{r7, pc}

0801a6da <HAL_PCD_ResetCallback>:
 801a6da:	b580      	push	{r7, lr}
 801a6dc:	b084      	sub	sp, #16
 801a6de:	af00      	add	r7, sp, #0
 801a6e0:	6078      	str	r0, [r7, #4]
 801a6e2:	2301      	movs	r3, #1
 801a6e4:	73fb      	strb	r3, [r7, #15]
 801a6e6:	687b      	ldr	r3, [r7, #4]
 801a6e8:	68db      	ldr	r3, [r3, #12]
 801a6ea:	2b00      	cmp	r3, #0
 801a6ec:	d102      	bne.n	801a6f4 <HAL_PCD_ResetCallback+0x1a>
 801a6ee:	2300      	movs	r3, #0
 801a6f0:	73fb      	strb	r3, [r7, #15]
 801a6f2:	e008      	b.n	801a706 <HAL_PCD_ResetCallback+0x2c>
 801a6f4:	687b      	ldr	r3, [r7, #4]
 801a6f6:	68db      	ldr	r3, [r3, #12]
 801a6f8:	2b02      	cmp	r3, #2
 801a6fa:	d102      	bne.n	801a702 <HAL_PCD_ResetCallback+0x28>
 801a6fc:	2301      	movs	r3, #1
 801a6fe:	73fb      	strb	r3, [r7, #15]
 801a700:	e001      	b.n	801a706 <HAL_PCD_ResetCallback+0x2c>
 801a702:	f7e9 f879 	bl	80037f8 <Error_Handler>
 801a706:	687b      	ldr	r3, [r7, #4]
 801a708:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a70c:	7bfa      	ldrb	r2, [r7, #15]
 801a70e:	4611      	mov	r1, r2
 801a710:	4618      	mov	r0, r3
 801a712:	f7fb fbe0 	bl	8015ed6 <USBD_LL_SetSpeed>
 801a716:	687b      	ldr	r3, [r7, #4]
 801a718:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a71c:	4618      	mov	r0, r3
 801a71e:	f7fb fb88 	bl	8015e32 <USBD_LL_Reset>
 801a722:	bf00      	nop
 801a724:	3710      	adds	r7, #16
 801a726:	46bd      	mov	sp, r7
 801a728:	bd80      	pop	{r7, pc}
	...

0801a72c <HAL_PCD_SuspendCallback>:
 801a72c:	b580      	push	{r7, lr}
 801a72e:	b082      	sub	sp, #8
 801a730:	af00      	add	r7, sp, #0
 801a732:	6078      	str	r0, [r7, #4]
 801a734:	687b      	ldr	r3, [r7, #4]
 801a736:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a73a:	4618      	mov	r0, r3
 801a73c:	f7fb fbdb 	bl	8015ef6 <USBD_LL_Suspend>
 801a740:	687b      	ldr	r3, [r7, #4]
 801a742:	681b      	ldr	r3, [r3, #0]
 801a744:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 801a748:	681b      	ldr	r3, [r3, #0]
 801a74a:	687a      	ldr	r2, [r7, #4]
 801a74c:	6812      	ldr	r2, [r2, #0]
 801a74e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 801a752:	f043 0301 	orr.w	r3, r3, #1
 801a756:	6013      	str	r3, [r2, #0]
 801a758:	687b      	ldr	r3, [r7, #4]
 801a75a:	6a1b      	ldr	r3, [r3, #32]
 801a75c:	2b00      	cmp	r3, #0
 801a75e:	d005      	beq.n	801a76c <HAL_PCD_SuspendCallback+0x40>
 801a760:	4b04      	ldr	r3, [pc, #16]	@ (801a774 <HAL_PCD_SuspendCallback+0x48>)
 801a762:	691b      	ldr	r3, [r3, #16]
 801a764:	4a03      	ldr	r2, [pc, #12]	@ (801a774 <HAL_PCD_SuspendCallback+0x48>)
 801a766:	f043 0306 	orr.w	r3, r3, #6
 801a76a:	6113      	str	r3, [r2, #16]
 801a76c:	bf00      	nop
 801a76e:	3708      	adds	r7, #8
 801a770:	46bd      	mov	sp, r7
 801a772:	bd80      	pop	{r7, pc}
 801a774:	e000ed00 	.word	0xe000ed00

0801a778 <HAL_PCD_ResumeCallback>:
 801a778:	b580      	push	{r7, lr}
 801a77a:	b082      	sub	sp, #8
 801a77c:	af00      	add	r7, sp, #0
 801a77e:	6078      	str	r0, [r7, #4]
 801a780:	687b      	ldr	r3, [r7, #4]
 801a782:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a786:	4618      	mov	r0, r3
 801a788:	f7fb fbcb 	bl	8015f22 <USBD_LL_Resume>
 801a78c:	bf00      	nop
 801a78e:	3708      	adds	r7, #8
 801a790:	46bd      	mov	sp, r7
 801a792:	bd80      	pop	{r7, pc}

0801a794 <HAL_PCD_ISOOUTIncompleteCallback>:
 801a794:	b580      	push	{r7, lr}
 801a796:	b082      	sub	sp, #8
 801a798:	af00      	add	r7, sp, #0
 801a79a:	6078      	str	r0, [r7, #4]
 801a79c:	460b      	mov	r3, r1
 801a79e:	70fb      	strb	r3, [r7, #3]
 801a7a0:	687b      	ldr	r3, [r7, #4]
 801a7a2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a7a6:	78fa      	ldrb	r2, [r7, #3]
 801a7a8:	4611      	mov	r1, r2
 801a7aa:	4618      	mov	r0, r3
 801a7ac:	f7fb fc23 	bl	8015ff6 <USBD_LL_IsoOUTIncomplete>
 801a7b0:	bf00      	nop
 801a7b2:	3708      	adds	r7, #8
 801a7b4:	46bd      	mov	sp, r7
 801a7b6:	bd80      	pop	{r7, pc}

0801a7b8 <HAL_PCD_ISOINIncompleteCallback>:
 801a7b8:	b580      	push	{r7, lr}
 801a7ba:	b082      	sub	sp, #8
 801a7bc:	af00      	add	r7, sp, #0
 801a7be:	6078      	str	r0, [r7, #4]
 801a7c0:	460b      	mov	r3, r1
 801a7c2:	70fb      	strb	r3, [r7, #3]
 801a7c4:	687b      	ldr	r3, [r7, #4]
 801a7c6:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a7ca:	78fa      	ldrb	r2, [r7, #3]
 801a7cc:	4611      	mov	r1, r2
 801a7ce:	4618      	mov	r0, r3
 801a7d0:	f7fb fbdf 	bl	8015f92 <USBD_LL_IsoINIncomplete>
 801a7d4:	bf00      	nop
 801a7d6:	3708      	adds	r7, #8
 801a7d8:	46bd      	mov	sp, r7
 801a7da:	bd80      	pop	{r7, pc}

0801a7dc <HAL_PCD_ConnectCallback>:
 801a7dc:	b580      	push	{r7, lr}
 801a7de:	b082      	sub	sp, #8
 801a7e0:	af00      	add	r7, sp, #0
 801a7e2:	6078      	str	r0, [r7, #4]
 801a7e4:	687b      	ldr	r3, [r7, #4]
 801a7e6:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a7ea:	4618      	mov	r0, r3
 801a7ec:	f7fb fc35 	bl	801605a <USBD_LL_DevConnected>
 801a7f0:	bf00      	nop
 801a7f2:	3708      	adds	r7, #8
 801a7f4:	46bd      	mov	sp, r7
 801a7f6:	bd80      	pop	{r7, pc}

0801a7f8 <HAL_PCD_DisconnectCallback>:
 801a7f8:	b580      	push	{r7, lr}
 801a7fa:	b082      	sub	sp, #8
 801a7fc:	af00      	add	r7, sp, #0
 801a7fe:	6078      	str	r0, [r7, #4]
 801a800:	687b      	ldr	r3, [r7, #4]
 801a802:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a806:	4618      	mov	r0, r3
 801a808:	f7fb fc32 	bl	8016070 <USBD_LL_DevDisconnected>
 801a80c:	bf00      	nop
 801a80e:	3708      	adds	r7, #8
 801a810:	46bd      	mov	sp, r7
 801a812:	bd80      	pop	{r7, pc}

0801a814 <USBD_LL_Init>:
 801a814:	b580      	push	{r7, lr}
 801a816:	b082      	sub	sp, #8
 801a818:	af00      	add	r7, sp, #0
 801a81a:	6078      	str	r0, [r7, #4]
 801a81c:	687b      	ldr	r3, [r7, #4]
 801a81e:	781b      	ldrb	r3, [r3, #0]
 801a820:	2b00      	cmp	r3, #0
 801a822:	d13c      	bne.n	801a89e <USBD_LL_Init+0x8a>
 801a824:	4a20      	ldr	r2, [pc, #128]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a826:	687b      	ldr	r3, [r7, #4]
 801a828:	f8c2 3508 	str.w	r3, [r2, #1288]	@ 0x508
 801a82c:	687b      	ldr	r3, [r7, #4]
 801a82e:	4a1e      	ldr	r2, [pc, #120]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a830:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 801a834:	4b1c      	ldr	r3, [pc, #112]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a836:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 801a83a:	601a      	str	r2, [r3, #0]
 801a83c:	4b1a      	ldr	r3, [pc, #104]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a83e:	2204      	movs	r2, #4
 801a840:	605a      	str	r2, [r3, #4]
 801a842:	4b19      	ldr	r3, [pc, #100]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a844:	2202      	movs	r2, #2
 801a846:	60da      	str	r2, [r3, #12]
 801a848:	4b17      	ldr	r3, [pc, #92]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a84a:	2200      	movs	r2, #0
 801a84c:	611a      	str	r2, [r3, #16]
 801a84e:	4b16      	ldr	r3, [pc, #88]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a850:	2202      	movs	r2, #2
 801a852:	619a      	str	r2, [r3, #24]
 801a854:	4b14      	ldr	r3, [pc, #80]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a856:	2200      	movs	r2, #0
 801a858:	61da      	str	r2, [r3, #28]
 801a85a:	4b13      	ldr	r3, [pc, #76]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a85c:	2200      	movs	r2, #0
 801a85e:	621a      	str	r2, [r3, #32]
 801a860:	4b11      	ldr	r3, [pc, #68]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a862:	2200      	movs	r2, #0
 801a864:	625a      	str	r2, [r3, #36]	@ 0x24
 801a866:	4b10      	ldr	r3, [pc, #64]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a868:	2200      	movs	r2, #0
 801a86a:	62da      	str	r2, [r3, #44]	@ 0x2c
 801a86c:	4b0e      	ldr	r3, [pc, #56]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a86e:	2200      	movs	r2, #0
 801a870:	631a      	str	r2, [r3, #48]	@ 0x30
 801a872:	480d      	ldr	r0, [pc, #52]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a874:	f7f4 f951 	bl	800eb1a <HAL_PCD_Init>
 801a878:	4603      	mov	r3, r0
 801a87a:	2b00      	cmp	r3, #0
 801a87c:	d001      	beq.n	801a882 <USBD_LL_Init+0x6e>
 801a87e:	f7e8 ffbb 	bl	80037f8 <Error_Handler>
 801a882:	2180      	movs	r1, #128	@ 0x80
 801a884:	4808      	ldr	r0, [pc, #32]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a886:	f7f5 fba8 	bl	800ffda <HAL_PCDEx_SetRxFiFo>
 801a88a:	2240      	movs	r2, #64	@ 0x40
 801a88c:	2100      	movs	r1, #0
 801a88e:	4806      	ldr	r0, [pc, #24]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a890:	f7f5 fb5c 	bl	800ff4c <HAL_PCDEx_SetTxFiFo>
 801a894:	2280      	movs	r2, #128	@ 0x80
 801a896:	2101      	movs	r1, #1
 801a898:	4803      	ldr	r0, [pc, #12]	@ (801a8a8 <USBD_LL_Init+0x94>)
 801a89a:	f7f5 fb57 	bl	800ff4c <HAL_PCDEx_SetTxFiFo>
 801a89e:	2300      	movs	r3, #0
 801a8a0:	4618      	mov	r0, r3
 801a8a2:	3708      	adds	r7, #8
 801a8a4:	46bd      	mov	sp, r7
 801a8a6:	bd80      	pop	{r7, pc}
 801a8a8:	2000c84c 	.word	0x2000c84c

0801a8ac <USBD_LL_Start>:
 801a8ac:	b580      	push	{r7, lr}
 801a8ae:	b084      	sub	sp, #16
 801a8b0:	af00      	add	r7, sp, #0
 801a8b2:	6078      	str	r0, [r7, #4]
 801a8b4:	2300      	movs	r3, #0
 801a8b6:	73fb      	strb	r3, [r7, #15]
 801a8b8:	2300      	movs	r3, #0
 801a8ba:	73bb      	strb	r3, [r7, #14]
 801a8bc:	687b      	ldr	r3, [r7, #4]
 801a8be:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a8c2:	4618      	mov	r0, r3
 801a8c4:	f7f4 fa46 	bl	800ed54 <HAL_PCD_Start>
 801a8c8:	4603      	mov	r3, r0
 801a8ca:	73fb      	strb	r3, [r7, #15]
 801a8cc:	7bfb      	ldrb	r3, [r7, #15]
 801a8ce:	4618      	mov	r0, r3
 801a8d0:	f000 f942 	bl	801ab58 <USBD_Get_USB_Status>
 801a8d4:	4603      	mov	r3, r0
 801a8d6:	73bb      	strb	r3, [r7, #14]
 801a8d8:	7bbb      	ldrb	r3, [r7, #14]
 801a8da:	4618      	mov	r0, r3
 801a8dc:	3710      	adds	r7, #16
 801a8de:	46bd      	mov	sp, r7
 801a8e0:	bd80      	pop	{r7, pc}

0801a8e2 <USBD_LL_OpenEP>:
 801a8e2:	b580      	push	{r7, lr}
 801a8e4:	b084      	sub	sp, #16
 801a8e6:	af00      	add	r7, sp, #0
 801a8e8:	6078      	str	r0, [r7, #4]
 801a8ea:	4608      	mov	r0, r1
 801a8ec:	4611      	mov	r1, r2
 801a8ee:	461a      	mov	r2, r3
 801a8f0:	4603      	mov	r3, r0
 801a8f2:	70fb      	strb	r3, [r7, #3]
 801a8f4:	460b      	mov	r3, r1
 801a8f6:	70bb      	strb	r3, [r7, #2]
 801a8f8:	4613      	mov	r3, r2
 801a8fa:	803b      	strh	r3, [r7, #0]
 801a8fc:	2300      	movs	r3, #0
 801a8fe:	73fb      	strb	r3, [r7, #15]
 801a900:	2300      	movs	r3, #0
 801a902:	73bb      	strb	r3, [r7, #14]
 801a904:	687b      	ldr	r3, [r7, #4]
 801a906:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801a90a:	78bb      	ldrb	r3, [r7, #2]
 801a90c:	883a      	ldrh	r2, [r7, #0]
 801a90e:	78f9      	ldrb	r1, [r7, #3]
 801a910:	f7f4 ff17 	bl	800f742 <HAL_PCD_EP_Open>
 801a914:	4603      	mov	r3, r0
 801a916:	73fb      	strb	r3, [r7, #15]
 801a918:	7bfb      	ldrb	r3, [r7, #15]
 801a91a:	4618      	mov	r0, r3
 801a91c:	f000 f91c 	bl	801ab58 <USBD_Get_USB_Status>
 801a920:	4603      	mov	r3, r0
 801a922:	73bb      	strb	r3, [r7, #14]
 801a924:	7bbb      	ldrb	r3, [r7, #14]
 801a926:	4618      	mov	r0, r3
 801a928:	3710      	adds	r7, #16
 801a92a:	46bd      	mov	sp, r7
 801a92c:	bd80      	pop	{r7, pc}

0801a92e <USBD_LL_CloseEP>:
 801a92e:	b580      	push	{r7, lr}
 801a930:	b084      	sub	sp, #16
 801a932:	af00      	add	r7, sp, #0
 801a934:	6078      	str	r0, [r7, #4]
 801a936:	460b      	mov	r3, r1
 801a938:	70fb      	strb	r3, [r7, #3]
 801a93a:	2300      	movs	r3, #0
 801a93c:	73fb      	strb	r3, [r7, #15]
 801a93e:	2300      	movs	r3, #0
 801a940:	73bb      	strb	r3, [r7, #14]
 801a942:	687b      	ldr	r3, [r7, #4]
 801a944:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a948:	78fa      	ldrb	r2, [r7, #3]
 801a94a:	4611      	mov	r1, r2
 801a94c:	4618      	mov	r0, r3
 801a94e:	f7f4 ff60 	bl	800f812 <HAL_PCD_EP_Close>
 801a952:	4603      	mov	r3, r0
 801a954:	73fb      	strb	r3, [r7, #15]
 801a956:	7bfb      	ldrb	r3, [r7, #15]
 801a958:	4618      	mov	r0, r3
 801a95a:	f000 f8fd 	bl	801ab58 <USBD_Get_USB_Status>
 801a95e:	4603      	mov	r3, r0
 801a960:	73bb      	strb	r3, [r7, #14]
 801a962:	7bbb      	ldrb	r3, [r7, #14]
 801a964:	4618      	mov	r0, r3
 801a966:	3710      	adds	r7, #16
 801a968:	46bd      	mov	sp, r7
 801a96a:	bd80      	pop	{r7, pc}

0801a96c <USBD_LL_StallEP>:
 801a96c:	b580      	push	{r7, lr}
 801a96e:	b084      	sub	sp, #16
 801a970:	af00      	add	r7, sp, #0
 801a972:	6078      	str	r0, [r7, #4]
 801a974:	460b      	mov	r3, r1
 801a976:	70fb      	strb	r3, [r7, #3]
 801a978:	2300      	movs	r3, #0
 801a97a:	73fb      	strb	r3, [r7, #15]
 801a97c:	2300      	movs	r3, #0
 801a97e:	73bb      	strb	r3, [r7, #14]
 801a980:	687b      	ldr	r3, [r7, #4]
 801a982:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a986:	78fa      	ldrb	r2, [r7, #3]
 801a988:	4611      	mov	r1, r2
 801a98a:	4618      	mov	r0, r3
 801a98c:	f7f5 f838 	bl	800fa00 <HAL_PCD_EP_SetStall>
 801a990:	4603      	mov	r3, r0
 801a992:	73fb      	strb	r3, [r7, #15]
 801a994:	7bfb      	ldrb	r3, [r7, #15]
 801a996:	4618      	mov	r0, r3
 801a998:	f000 f8de 	bl	801ab58 <USBD_Get_USB_Status>
 801a99c:	4603      	mov	r3, r0
 801a99e:	73bb      	strb	r3, [r7, #14]
 801a9a0:	7bbb      	ldrb	r3, [r7, #14]
 801a9a2:	4618      	mov	r0, r3
 801a9a4:	3710      	adds	r7, #16
 801a9a6:	46bd      	mov	sp, r7
 801a9a8:	bd80      	pop	{r7, pc}

0801a9aa <USBD_LL_ClearStallEP>:
 801a9aa:	b580      	push	{r7, lr}
 801a9ac:	b084      	sub	sp, #16
 801a9ae:	af00      	add	r7, sp, #0
 801a9b0:	6078      	str	r0, [r7, #4]
 801a9b2:	460b      	mov	r3, r1
 801a9b4:	70fb      	strb	r3, [r7, #3]
 801a9b6:	2300      	movs	r3, #0
 801a9b8:	73fb      	strb	r3, [r7, #15]
 801a9ba:	2300      	movs	r3, #0
 801a9bc:	73bb      	strb	r3, [r7, #14]
 801a9be:	687b      	ldr	r3, [r7, #4]
 801a9c0:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a9c4:	78fa      	ldrb	r2, [r7, #3]
 801a9c6:	4611      	mov	r1, r2
 801a9c8:	4618      	mov	r0, r3
 801a9ca:	f7f5 f87d 	bl	800fac8 <HAL_PCD_EP_ClrStall>
 801a9ce:	4603      	mov	r3, r0
 801a9d0:	73fb      	strb	r3, [r7, #15]
 801a9d2:	7bfb      	ldrb	r3, [r7, #15]
 801a9d4:	4618      	mov	r0, r3
 801a9d6:	f000 f8bf 	bl	801ab58 <USBD_Get_USB_Status>
 801a9da:	4603      	mov	r3, r0
 801a9dc:	73bb      	strb	r3, [r7, #14]
 801a9de:	7bbb      	ldrb	r3, [r7, #14]
 801a9e0:	4618      	mov	r0, r3
 801a9e2:	3710      	adds	r7, #16
 801a9e4:	46bd      	mov	sp, r7
 801a9e6:	bd80      	pop	{r7, pc}

0801a9e8 <USBD_LL_IsStallEP>:
 801a9e8:	b480      	push	{r7}
 801a9ea:	b085      	sub	sp, #20
 801a9ec:	af00      	add	r7, sp, #0
 801a9ee:	6078      	str	r0, [r7, #4]
 801a9f0:	460b      	mov	r3, r1
 801a9f2:	70fb      	strb	r3, [r7, #3]
 801a9f4:	687b      	ldr	r3, [r7, #4]
 801a9f6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a9fa:	60fb      	str	r3, [r7, #12]
 801a9fc:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801aa00:	2b00      	cmp	r3, #0
 801aa02:	da0b      	bge.n	801aa1c <USBD_LL_IsStallEP+0x34>
 801aa04:	78fb      	ldrb	r3, [r7, #3]
 801aa06:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801aa0a:	68f9      	ldr	r1, [r7, #12]
 801aa0c:	4613      	mov	r3, r2
 801aa0e:	00db      	lsls	r3, r3, #3
 801aa10:	4413      	add	r3, r2
 801aa12:	009b      	lsls	r3, r3, #2
 801aa14:	440b      	add	r3, r1
 801aa16:	333e      	adds	r3, #62	@ 0x3e
 801aa18:	781b      	ldrb	r3, [r3, #0]
 801aa1a:	e00b      	b.n	801aa34 <USBD_LL_IsStallEP+0x4c>
 801aa1c:	78fb      	ldrb	r3, [r7, #3]
 801aa1e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801aa22:	68f9      	ldr	r1, [r7, #12]
 801aa24:	4613      	mov	r3, r2
 801aa26:	00db      	lsls	r3, r3, #3
 801aa28:	4413      	add	r3, r2
 801aa2a:	009b      	lsls	r3, r3, #2
 801aa2c:	440b      	add	r3, r1
 801aa2e:	f203 237e 	addw	r3, r3, #638	@ 0x27e
 801aa32:	781b      	ldrb	r3, [r3, #0]
 801aa34:	4618      	mov	r0, r3
 801aa36:	3714      	adds	r7, #20
 801aa38:	46bd      	mov	sp, r7
 801aa3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aa3e:	4770      	bx	lr

0801aa40 <USBD_LL_SetUSBAddress>:
 801aa40:	b580      	push	{r7, lr}
 801aa42:	b084      	sub	sp, #16
 801aa44:	af00      	add	r7, sp, #0
 801aa46:	6078      	str	r0, [r7, #4]
 801aa48:	460b      	mov	r3, r1
 801aa4a:	70fb      	strb	r3, [r7, #3]
 801aa4c:	2300      	movs	r3, #0
 801aa4e:	73fb      	strb	r3, [r7, #15]
 801aa50:	2300      	movs	r3, #0
 801aa52:	73bb      	strb	r3, [r7, #14]
 801aa54:	687b      	ldr	r3, [r7, #4]
 801aa56:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aa5a:	78fa      	ldrb	r2, [r7, #3]
 801aa5c:	4611      	mov	r1, r2
 801aa5e:	4618      	mov	r0, r3
 801aa60:	f7f4 fe4a 	bl	800f6f8 <HAL_PCD_SetAddress>
 801aa64:	4603      	mov	r3, r0
 801aa66:	73fb      	strb	r3, [r7, #15]
 801aa68:	7bfb      	ldrb	r3, [r7, #15]
 801aa6a:	4618      	mov	r0, r3
 801aa6c:	f000 f874 	bl	801ab58 <USBD_Get_USB_Status>
 801aa70:	4603      	mov	r3, r0
 801aa72:	73bb      	strb	r3, [r7, #14]
 801aa74:	7bbb      	ldrb	r3, [r7, #14]
 801aa76:	4618      	mov	r0, r3
 801aa78:	3710      	adds	r7, #16
 801aa7a:	46bd      	mov	sp, r7
 801aa7c:	bd80      	pop	{r7, pc}

0801aa7e <USBD_LL_Transmit>:
 801aa7e:	b580      	push	{r7, lr}
 801aa80:	b086      	sub	sp, #24
 801aa82:	af00      	add	r7, sp, #0
 801aa84:	60f8      	str	r0, [r7, #12]
 801aa86:	607a      	str	r2, [r7, #4]
 801aa88:	603b      	str	r3, [r7, #0]
 801aa8a:	460b      	mov	r3, r1
 801aa8c:	72fb      	strb	r3, [r7, #11]
 801aa8e:	2300      	movs	r3, #0
 801aa90:	75fb      	strb	r3, [r7, #23]
 801aa92:	2300      	movs	r3, #0
 801aa94:	75bb      	strb	r3, [r7, #22]
 801aa96:	68fb      	ldr	r3, [r7, #12]
 801aa98:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801aa9c:	7af9      	ldrb	r1, [r7, #11]
 801aa9e:	683b      	ldr	r3, [r7, #0]
 801aaa0:	687a      	ldr	r2, [r7, #4]
 801aaa2:	f7f4 ff63 	bl	800f96c <HAL_PCD_EP_Transmit>
 801aaa6:	4603      	mov	r3, r0
 801aaa8:	75fb      	strb	r3, [r7, #23]
 801aaaa:	7dfb      	ldrb	r3, [r7, #23]
 801aaac:	4618      	mov	r0, r3
 801aaae:	f000 f853 	bl	801ab58 <USBD_Get_USB_Status>
 801aab2:	4603      	mov	r3, r0
 801aab4:	75bb      	strb	r3, [r7, #22]
 801aab6:	7dbb      	ldrb	r3, [r7, #22]
 801aab8:	4618      	mov	r0, r3
 801aaba:	3718      	adds	r7, #24
 801aabc:	46bd      	mov	sp, r7
 801aabe:	bd80      	pop	{r7, pc}

0801aac0 <USBD_LL_PrepareReceive>:
 801aac0:	b580      	push	{r7, lr}
 801aac2:	b086      	sub	sp, #24
 801aac4:	af00      	add	r7, sp, #0
 801aac6:	60f8      	str	r0, [r7, #12]
 801aac8:	607a      	str	r2, [r7, #4]
 801aaca:	603b      	str	r3, [r7, #0]
 801aacc:	460b      	mov	r3, r1
 801aace:	72fb      	strb	r3, [r7, #11]
 801aad0:	2300      	movs	r3, #0
 801aad2:	75fb      	strb	r3, [r7, #23]
 801aad4:	2300      	movs	r3, #0
 801aad6:	75bb      	strb	r3, [r7, #22]
 801aad8:	68fb      	ldr	r3, [r7, #12]
 801aada:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801aade:	7af9      	ldrb	r1, [r7, #11]
 801aae0:	683b      	ldr	r3, [r7, #0]
 801aae2:	687a      	ldr	r2, [r7, #4]
 801aae4:	f7f4 fedf 	bl	800f8a6 <HAL_PCD_EP_Receive>
 801aae8:	4603      	mov	r3, r0
 801aaea:	75fb      	strb	r3, [r7, #23]
 801aaec:	7dfb      	ldrb	r3, [r7, #23]
 801aaee:	4618      	mov	r0, r3
 801aaf0:	f000 f832 	bl	801ab58 <USBD_Get_USB_Status>
 801aaf4:	4603      	mov	r3, r0
 801aaf6:	75bb      	strb	r3, [r7, #22]
 801aaf8:	7dbb      	ldrb	r3, [r7, #22]
 801aafa:	4618      	mov	r0, r3
 801aafc:	3718      	adds	r7, #24
 801aafe:	46bd      	mov	sp, r7
 801ab00:	bd80      	pop	{r7, pc}

0801ab02 <USBD_LL_GetRxDataSize>:
 801ab02:	b580      	push	{r7, lr}
 801ab04:	b082      	sub	sp, #8
 801ab06:	af00      	add	r7, sp, #0
 801ab08:	6078      	str	r0, [r7, #4]
 801ab0a:	460b      	mov	r3, r1
 801ab0c:	70fb      	strb	r3, [r7, #3]
 801ab0e:	687b      	ldr	r3, [r7, #4]
 801ab10:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801ab14:	78fa      	ldrb	r2, [r7, #3]
 801ab16:	4611      	mov	r1, r2
 801ab18:	4618      	mov	r0, r3
 801ab1a:	f7f4 ff0f 	bl	800f93c <HAL_PCD_EP_GetRxCount>
 801ab1e:	4603      	mov	r3, r0
 801ab20:	4618      	mov	r0, r3
 801ab22:	3708      	adds	r7, #8
 801ab24:	46bd      	mov	sp, r7
 801ab26:	bd80      	pop	{r7, pc}

0801ab28 <USBD_static_malloc>:
 801ab28:	b480      	push	{r7}
 801ab2a:	b083      	sub	sp, #12
 801ab2c:	af00      	add	r7, sp, #0
 801ab2e:	6078      	str	r0, [r7, #4]
 801ab30:	4b03      	ldr	r3, [pc, #12]	@ (801ab40 <USBD_static_malloc+0x18>)
 801ab32:	4618      	mov	r0, r3
 801ab34:	370c      	adds	r7, #12
 801ab36:	46bd      	mov	sp, r7
 801ab38:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ab3c:	4770      	bx	lr
 801ab3e:	bf00      	nop
 801ab40:	2000cd58 	.word	0x2000cd58

0801ab44 <USBD_static_free>:
 801ab44:	b480      	push	{r7}
 801ab46:	b083      	sub	sp, #12
 801ab48:	af00      	add	r7, sp, #0
 801ab4a:	6078      	str	r0, [r7, #4]
 801ab4c:	bf00      	nop
 801ab4e:	370c      	adds	r7, #12
 801ab50:	46bd      	mov	sp, r7
 801ab52:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ab56:	4770      	bx	lr

0801ab58 <USBD_Get_USB_Status>:
 801ab58:	b480      	push	{r7}
 801ab5a:	b085      	sub	sp, #20
 801ab5c:	af00      	add	r7, sp, #0
 801ab5e:	4603      	mov	r3, r0
 801ab60:	71fb      	strb	r3, [r7, #7]
 801ab62:	2300      	movs	r3, #0
 801ab64:	73fb      	strb	r3, [r7, #15]
 801ab66:	79fb      	ldrb	r3, [r7, #7]
 801ab68:	2b03      	cmp	r3, #3
 801ab6a:	d817      	bhi.n	801ab9c <USBD_Get_USB_Status+0x44>
 801ab6c:	a201      	add	r2, pc, #4	@ (adr r2, 801ab74 <USBD_Get_USB_Status+0x1c>)
 801ab6e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801ab72:	bf00      	nop
 801ab74:	0801ab85 	.word	0x0801ab85
 801ab78:	0801ab8b 	.word	0x0801ab8b
 801ab7c:	0801ab91 	.word	0x0801ab91
 801ab80:	0801ab97 	.word	0x0801ab97
 801ab84:	2300      	movs	r3, #0
 801ab86:	73fb      	strb	r3, [r7, #15]
 801ab88:	e00b      	b.n	801aba2 <USBD_Get_USB_Status+0x4a>
 801ab8a:	2303      	movs	r3, #3
 801ab8c:	73fb      	strb	r3, [r7, #15]
 801ab8e:	e008      	b.n	801aba2 <USBD_Get_USB_Status+0x4a>
 801ab90:	2301      	movs	r3, #1
 801ab92:	73fb      	strb	r3, [r7, #15]
 801ab94:	e005      	b.n	801aba2 <USBD_Get_USB_Status+0x4a>
 801ab96:	2303      	movs	r3, #3
 801ab98:	73fb      	strb	r3, [r7, #15]
 801ab9a:	e002      	b.n	801aba2 <USBD_Get_USB_Status+0x4a>
 801ab9c:	2303      	movs	r3, #3
 801ab9e:	73fb      	strb	r3, [r7, #15]
 801aba0:	bf00      	nop
 801aba2:	7bfb      	ldrb	r3, [r7, #15]
 801aba4:	4618      	mov	r0, r3
 801aba6:	3714      	adds	r7, #20
 801aba8:	46bd      	mov	sp, r7
 801abaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801abae:	4770      	bx	lr

0801abb0 <std>:
 801abb0:	2300      	movs	r3, #0
 801abb2:	b510      	push	{r4, lr}
 801abb4:	4604      	mov	r4, r0
 801abb6:	e9c0 3300 	strd	r3, r3, [r0]
 801abba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801abbe:	6083      	str	r3, [r0, #8]
 801abc0:	8181      	strh	r1, [r0, #12]
 801abc2:	6643      	str	r3, [r0, #100]	@ 0x64
 801abc4:	81c2      	strh	r2, [r0, #14]
 801abc6:	6183      	str	r3, [r0, #24]
 801abc8:	4619      	mov	r1, r3
 801abca:	2208      	movs	r2, #8
 801abcc:	305c      	adds	r0, #92	@ 0x5c
 801abce:	f000 f928 	bl	801ae22 <memset>
 801abd2:	4b0d      	ldr	r3, [pc, #52]	@ (801ac08 <std+0x58>)
 801abd4:	6223      	str	r3, [r4, #32]
 801abd6:	4b0d      	ldr	r3, [pc, #52]	@ (801ac0c <std+0x5c>)
 801abd8:	6263      	str	r3, [r4, #36]	@ 0x24
 801abda:	4b0d      	ldr	r3, [pc, #52]	@ (801ac10 <std+0x60>)
 801abdc:	62a3      	str	r3, [r4, #40]	@ 0x28
 801abde:	4b0d      	ldr	r3, [pc, #52]	@ (801ac14 <std+0x64>)
 801abe0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801abe2:	4b0d      	ldr	r3, [pc, #52]	@ (801ac18 <std+0x68>)
 801abe4:	61e4      	str	r4, [r4, #28]
 801abe6:	429c      	cmp	r4, r3
 801abe8:	d006      	beq.n	801abf8 <std+0x48>
 801abea:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801abee:	4294      	cmp	r4, r2
 801abf0:	d002      	beq.n	801abf8 <std+0x48>
 801abf2:	33d0      	adds	r3, #208	@ 0xd0
 801abf4:	429c      	cmp	r4, r3
 801abf6:	d105      	bne.n	801ac04 <std+0x54>
 801abf8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801abfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac00:	f000 b9b4 	b.w	801af6c <__retarget_lock_init_recursive>
 801ac04:	bd10      	pop	{r4, pc}
 801ac06:	bf00      	nop
 801ac08:	0801ad9d 	.word	0x0801ad9d
 801ac0c:	0801adbf 	.word	0x0801adbf
 801ac10:	0801adf7 	.word	0x0801adf7
 801ac14:	0801ae1b 	.word	0x0801ae1b
 801ac18:	2000cf78 	.word	0x2000cf78

0801ac1c <stdio_exit_handler>:
 801ac1c:	4a02      	ldr	r2, [pc, #8]	@ (801ac28 <stdio_exit_handler+0xc>)
 801ac1e:	4903      	ldr	r1, [pc, #12]	@ (801ac2c <stdio_exit_handler+0x10>)
 801ac20:	4803      	ldr	r0, [pc, #12]	@ (801ac30 <stdio_exit_handler+0x14>)
 801ac22:	f000 b869 	b.w	801acf8 <_fwalk_sglue>
 801ac26:	bf00      	nop
 801ac28:	20000114 	.word	0x20000114
 801ac2c:	0801ca25 	.word	0x0801ca25
 801ac30:	20000128 	.word	0x20000128

0801ac34 <cleanup_stdio>:
 801ac34:	6841      	ldr	r1, [r0, #4]
 801ac36:	4b0c      	ldr	r3, [pc, #48]	@ (801ac68 <cleanup_stdio+0x34>)
 801ac38:	4299      	cmp	r1, r3
 801ac3a:	b510      	push	{r4, lr}
 801ac3c:	4604      	mov	r4, r0
 801ac3e:	d001      	beq.n	801ac44 <cleanup_stdio+0x10>
 801ac40:	f001 fef0 	bl	801ca24 <_fclose_r>
 801ac44:	68a1      	ldr	r1, [r4, #8]
 801ac46:	4b09      	ldr	r3, [pc, #36]	@ (801ac6c <cleanup_stdio+0x38>)
 801ac48:	4299      	cmp	r1, r3
 801ac4a:	d002      	beq.n	801ac52 <cleanup_stdio+0x1e>
 801ac4c:	4620      	mov	r0, r4
 801ac4e:	f001 fee9 	bl	801ca24 <_fclose_r>
 801ac52:	68e1      	ldr	r1, [r4, #12]
 801ac54:	4b06      	ldr	r3, [pc, #24]	@ (801ac70 <cleanup_stdio+0x3c>)
 801ac56:	4299      	cmp	r1, r3
 801ac58:	d004      	beq.n	801ac64 <cleanup_stdio+0x30>
 801ac5a:	4620      	mov	r0, r4
 801ac5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac60:	f001 bee0 	b.w	801ca24 <_fclose_r>
 801ac64:	bd10      	pop	{r4, pc}
 801ac66:	bf00      	nop
 801ac68:	2000cf78 	.word	0x2000cf78
 801ac6c:	2000cfe0 	.word	0x2000cfe0
 801ac70:	2000d048 	.word	0x2000d048

0801ac74 <global_stdio_init.part.0>:
 801ac74:	b510      	push	{r4, lr}
 801ac76:	4b0b      	ldr	r3, [pc, #44]	@ (801aca4 <global_stdio_init.part.0+0x30>)
 801ac78:	4c0b      	ldr	r4, [pc, #44]	@ (801aca8 <global_stdio_init.part.0+0x34>)
 801ac7a:	4a0c      	ldr	r2, [pc, #48]	@ (801acac <global_stdio_init.part.0+0x38>)
 801ac7c:	601a      	str	r2, [r3, #0]
 801ac7e:	4620      	mov	r0, r4
 801ac80:	2200      	movs	r2, #0
 801ac82:	2104      	movs	r1, #4
 801ac84:	f7ff ff94 	bl	801abb0 <std>
 801ac88:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801ac8c:	2201      	movs	r2, #1
 801ac8e:	2109      	movs	r1, #9
 801ac90:	f7ff ff8e 	bl	801abb0 <std>
 801ac94:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801ac98:	2202      	movs	r2, #2
 801ac9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac9e:	2112      	movs	r1, #18
 801aca0:	f7ff bf86 	b.w	801abb0 <std>
 801aca4:	2000d0b0 	.word	0x2000d0b0
 801aca8:	2000cf78 	.word	0x2000cf78
 801acac:	0801ac1d 	.word	0x0801ac1d

0801acb0 <__sfp_lock_acquire>:
 801acb0:	4801      	ldr	r0, [pc, #4]	@ (801acb8 <__sfp_lock_acquire+0x8>)
 801acb2:	f000 b95d 	b.w	801af70 <__retarget_lock_acquire_recursive>
 801acb6:	bf00      	nop
 801acb8:	2000d0ba 	.word	0x2000d0ba

0801acbc <__sfp_lock_release>:
 801acbc:	4801      	ldr	r0, [pc, #4]	@ (801acc4 <__sfp_lock_release+0x8>)
 801acbe:	f000 b958 	b.w	801af72 <__retarget_lock_release_recursive>
 801acc2:	bf00      	nop
 801acc4:	2000d0ba 	.word	0x2000d0ba

0801acc8 <__sinit>:
 801acc8:	b510      	push	{r4, lr}
 801acca:	4604      	mov	r4, r0
 801accc:	f7ff fff0 	bl	801acb0 <__sfp_lock_acquire>
 801acd0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801acd2:	b11b      	cbz	r3, 801acdc <__sinit+0x14>
 801acd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801acd8:	f7ff bff0 	b.w	801acbc <__sfp_lock_release>
 801acdc:	4b04      	ldr	r3, [pc, #16]	@ (801acf0 <__sinit+0x28>)
 801acde:	6363      	str	r3, [r4, #52]	@ 0x34
 801ace0:	4b04      	ldr	r3, [pc, #16]	@ (801acf4 <__sinit+0x2c>)
 801ace2:	681b      	ldr	r3, [r3, #0]
 801ace4:	2b00      	cmp	r3, #0
 801ace6:	d1f5      	bne.n	801acd4 <__sinit+0xc>
 801ace8:	f7ff ffc4 	bl	801ac74 <global_stdio_init.part.0>
 801acec:	e7f2      	b.n	801acd4 <__sinit+0xc>
 801acee:	bf00      	nop
 801acf0:	0801ac35 	.word	0x0801ac35
 801acf4:	2000d0b0 	.word	0x2000d0b0

0801acf8 <_fwalk_sglue>:
 801acf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801acfc:	4607      	mov	r7, r0
 801acfe:	4688      	mov	r8, r1
 801ad00:	4614      	mov	r4, r2
 801ad02:	2600      	movs	r6, #0
 801ad04:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ad08:	f1b9 0901 	subs.w	r9, r9, #1
 801ad0c:	d505      	bpl.n	801ad1a <_fwalk_sglue+0x22>
 801ad0e:	6824      	ldr	r4, [r4, #0]
 801ad10:	2c00      	cmp	r4, #0
 801ad12:	d1f7      	bne.n	801ad04 <_fwalk_sglue+0xc>
 801ad14:	4630      	mov	r0, r6
 801ad16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ad1a:	89ab      	ldrh	r3, [r5, #12]
 801ad1c:	2b01      	cmp	r3, #1
 801ad1e:	d907      	bls.n	801ad30 <_fwalk_sglue+0x38>
 801ad20:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ad24:	3301      	adds	r3, #1
 801ad26:	d003      	beq.n	801ad30 <_fwalk_sglue+0x38>
 801ad28:	4629      	mov	r1, r5
 801ad2a:	4638      	mov	r0, r7
 801ad2c:	47c0      	blx	r8
 801ad2e:	4306      	orrs	r6, r0
 801ad30:	3568      	adds	r5, #104	@ 0x68
 801ad32:	e7e9      	b.n	801ad08 <_fwalk_sglue+0x10>

0801ad34 <snprintf>:
 801ad34:	b40c      	push	{r2, r3}
 801ad36:	b530      	push	{r4, r5, lr}
 801ad38:	4b17      	ldr	r3, [pc, #92]	@ (801ad98 <snprintf+0x64>)
 801ad3a:	1e0c      	subs	r4, r1, #0
 801ad3c:	681d      	ldr	r5, [r3, #0]
 801ad3e:	b09d      	sub	sp, #116	@ 0x74
 801ad40:	da08      	bge.n	801ad54 <snprintf+0x20>
 801ad42:	238b      	movs	r3, #139	@ 0x8b
 801ad44:	602b      	str	r3, [r5, #0]
 801ad46:	f04f 30ff 	mov.w	r0, #4294967295
 801ad4a:	b01d      	add	sp, #116	@ 0x74
 801ad4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ad50:	b002      	add	sp, #8
 801ad52:	4770      	bx	lr
 801ad54:	f44f 7302 	mov.w	r3, #520	@ 0x208
 801ad58:	f8ad 3014 	strh.w	r3, [sp, #20]
 801ad5c:	bf14      	ite	ne
 801ad5e:	f104 33ff 	addne.w	r3, r4, #4294967295
 801ad62:	4623      	moveq	r3, r4
 801ad64:	9304      	str	r3, [sp, #16]
 801ad66:	9307      	str	r3, [sp, #28]
 801ad68:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801ad6c:	9002      	str	r0, [sp, #8]
 801ad6e:	9006      	str	r0, [sp, #24]
 801ad70:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ad74:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ad76:	ab21      	add	r3, sp, #132	@ 0x84
 801ad78:	a902      	add	r1, sp, #8
 801ad7a:	4628      	mov	r0, r5
 801ad7c:	9301      	str	r3, [sp, #4]
 801ad7e:	f000 fc73 	bl	801b668 <_svfprintf_r>
 801ad82:	1c43      	adds	r3, r0, #1
 801ad84:	bfbc      	itt	lt
 801ad86:	238b      	movlt	r3, #139	@ 0x8b
 801ad88:	602b      	strlt	r3, [r5, #0]
 801ad8a:	2c00      	cmp	r4, #0
 801ad8c:	d0dd      	beq.n	801ad4a <snprintf+0x16>
 801ad8e:	9b02      	ldr	r3, [sp, #8]
 801ad90:	2200      	movs	r2, #0
 801ad92:	701a      	strb	r2, [r3, #0]
 801ad94:	e7d9      	b.n	801ad4a <snprintf+0x16>
 801ad96:	bf00      	nop
 801ad98:	20000120 	.word	0x20000120

0801ad9c <__sread>:
 801ad9c:	b510      	push	{r4, lr}
 801ad9e:	460c      	mov	r4, r1
 801ada0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ada4:	f000 f894 	bl	801aed0 <_read_r>
 801ada8:	2800      	cmp	r0, #0
 801adaa:	bfab      	itete	ge
 801adac:	6d23      	ldrge	r3, [r4, #80]	@ 0x50
 801adae:	89a3      	ldrhlt	r3, [r4, #12]
 801adb0:	181b      	addge	r3, r3, r0
 801adb2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801adb6:	bfac      	ite	ge
 801adb8:	6523      	strge	r3, [r4, #80]	@ 0x50
 801adba:	81a3      	strhlt	r3, [r4, #12]
 801adbc:	bd10      	pop	{r4, pc}

0801adbe <__swrite>:
 801adbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801adc2:	461f      	mov	r7, r3
 801adc4:	898b      	ldrh	r3, [r1, #12]
 801adc6:	05db      	lsls	r3, r3, #23
 801adc8:	4605      	mov	r5, r0
 801adca:	460c      	mov	r4, r1
 801adcc:	4616      	mov	r6, r2
 801adce:	d505      	bpl.n	801addc <__swrite+0x1e>
 801add0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801add4:	2302      	movs	r3, #2
 801add6:	2200      	movs	r2, #0
 801add8:	f000 f868 	bl	801aeac <_lseek_r>
 801addc:	89a3      	ldrh	r3, [r4, #12]
 801adde:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ade2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801ade6:	81a3      	strh	r3, [r4, #12]
 801ade8:	4632      	mov	r2, r6
 801adea:	463b      	mov	r3, r7
 801adec:	4628      	mov	r0, r5
 801adee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801adf2:	f000 b87f 	b.w	801aef4 <_write_r>

0801adf6 <__sseek>:
 801adf6:	b510      	push	{r4, lr}
 801adf8:	460c      	mov	r4, r1
 801adfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801adfe:	f000 f855 	bl	801aeac <_lseek_r>
 801ae02:	1c43      	adds	r3, r0, #1
 801ae04:	89a3      	ldrh	r3, [r4, #12]
 801ae06:	bf15      	itete	ne
 801ae08:	6520      	strne	r0, [r4, #80]	@ 0x50
 801ae0a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801ae0e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801ae12:	81a3      	strheq	r3, [r4, #12]
 801ae14:	bf18      	it	ne
 801ae16:	81a3      	strhne	r3, [r4, #12]
 801ae18:	bd10      	pop	{r4, pc}

0801ae1a <__sclose>:
 801ae1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae1e:	f000 b809 	b.w	801ae34 <_close_r>

0801ae22 <memset>:
 801ae22:	4402      	add	r2, r0
 801ae24:	4603      	mov	r3, r0
 801ae26:	4293      	cmp	r3, r2
 801ae28:	d100      	bne.n	801ae2c <memset+0xa>
 801ae2a:	4770      	bx	lr
 801ae2c:	f803 1b01 	strb.w	r1, [r3], #1
 801ae30:	e7f9      	b.n	801ae26 <memset+0x4>
	...

0801ae34 <_close_r>:
 801ae34:	b538      	push	{r3, r4, r5, lr}
 801ae36:	4d06      	ldr	r5, [pc, #24]	@ (801ae50 <_close_r+0x1c>)
 801ae38:	2300      	movs	r3, #0
 801ae3a:	4604      	mov	r4, r0
 801ae3c:	4608      	mov	r0, r1
 801ae3e:	602b      	str	r3, [r5, #0]
 801ae40:	f7e9 f818 	bl	8003e74 <_close>
 801ae44:	1c43      	adds	r3, r0, #1
 801ae46:	d102      	bne.n	801ae4e <_close_r+0x1a>
 801ae48:	682b      	ldr	r3, [r5, #0]
 801ae4a:	b103      	cbz	r3, 801ae4e <_close_r+0x1a>
 801ae4c:	6023      	str	r3, [r4, #0]
 801ae4e:	bd38      	pop	{r3, r4, r5, pc}
 801ae50:	2000d0b4 	.word	0x2000d0b4

0801ae54 <_reclaim_reent>:
 801ae54:	4b14      	ldr	r3, [pc, #80]	@ (801aea8 <_reclaim_reent+0x54>)
 801ae56:	681b      	ldr	r3, [r3, #0]
 801ae58:	4283      	cmp	r3, r0
 801ae5a:	b570      	push	{r4, r5, r6, lr}
 801ae5c:	4604      	mov	r4, r0
 801ae5e:	d022      	beq.n	801aea6 <_reclaim_reent+0x52>
 801ae60:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801ae62:	b153      	cbz	r3, 801ae7a <_reclaim_reent+0x26>
 801ae64:	2500      	movs	r5, #0
 801ae66:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801ae68:	5959      	ldr	r1, [r3, r5]
 801ae6a:	b9b1      	cbnz	r1, 801ae9a <_reclaim_reent+0x46>
 801ae6c:	3504      	adds	r5, #4
 801ae6e:	2d80      	cmp	r5, #128	@ 0x80
 801ae70:	d1f9      	bne.n	801ae66 <_reclaim_reent+0x12>
 801ae72:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801ae74:	4620      	mov	r0, r4
 801ae76:	f000 f8f1 	bl	801b05c <_free_r>
 801ae7a:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801ae7c:	b111      	cbz	r1, 801ae84 <_reclaim_reent+0x30>
 801ae7e:	4620      	mov	r0, r4
 801ae80:	f000 f8ec 	bl	801b05c <_free_r>
 801ae84:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 801ae86:	b111      	cbz	r1, 801ae8e <_reclaim_reent+0x3a>
 801ae88:	4620      	mov	r0, r4
 801ae8a:	f000 f8e7 	bl	801b05c <_free_r>
 801ae8e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801ae90:	b14b      	cbz	r3, 801aea6 <_reclaim_reent+0x52>
 801ae92:	4620      	mov	r0, r4
 801ae94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ae98:	4718      	bx	r3
 801ae9a:	680e      	ldr	r6, [r1, #0]
 801ae9c:	4620      	mov	r0, r4
 801ae9e:	f000 f8dd 	bl	801b05c <_free_r>
 801aea2:	4631      	mov	r1, r6
 801aea4:	e7e1      	b.n	801ae6a <_reclaim_reent+0x16>
 801aea6:	bd70      	pop	{r4, r5, r6, pc}
 801aea8:	20000120 	.word	0x20000120

0801aeac <_lseek_r>:
 801aeac:	b538      	push	{r3, r4, r5, lr}
 801aeae:	4d07      	ldr	r5, [pc, #28]	@ (801aecc <_lseek_r+0x20>)
 801aeb0:	4604      	mov	r4, r0
 801aeb2:	4608      	mov	r0, r1
 801aeb4:	4611      	mov	r1, r2
 801aeb6:	2200      	movs	r2, #0
 801aeb8:	602a      	str	r2, [r5, #0]
 801aeba:	461a      	mov	r2, r3
 801aebc:	f7e9 f801 	bl	8003ec2 <_lseek>
 801aec0:	1c43      	adds	r3, r0, #1
 801aec2:	d102      	bne.n	801aeca <_lseek_r+0x1e>
 801aec4:	682b      	ldr	r3, [r5, #0]
 801aec6:	b103      	cbz	r3, 801aeca <_lseek_r+0x1e>
 801aec8:	6023      	str	r3, [r4, #0]
 801aeca:	bd38      	pop	{r3, r4, r5, pc}
 801aecc:	2000d0b4 	.word	0x2000d0b4

0801aed0 <_read_r>:
 801aed0:	b538      	push	{r3, r4, r5, lr}
 801aed2:	4d07      	ldr	r5, [pc, #28]	@ (801aef0 <_read_r+0x20>)
 801aed4:	4604      	mov	r4, r0
 801aed6:	4608      	mov	r0, r1
 801aed8:	4611      	mov	r1, r2
 801aeda:	2200      	movs	r2, #0
 801aedc:	602a      	str	r2, [r5, #0]
 801aede:	461a      	mov	r2, r3
 801aee0:	f7e8 ff8f 	bl	8003e02 <_read>
 801aee4:	1c43      	adds	r3, r0, #1
 801aee6:	d102      	bne.n	801aeee <_read_r+0x1e>
 801aee8:	682b      	ldr	r3, [r5, #0]
 801aeea:	b103      	cbz	r3, 801aeee <_read_r+0x1e>
 801aeec:	6023      	str	r3, [r4, #0]
 801aeee:	bd38      	pop	{r3, r4, r5, pc}
 801aef0:	2000d0b4 	.word	0x2000d0b4

0801aef4 <_write_r>:
 801aef4:	b538      	push	{r3, r4, r5, lr}
 801aef6:	4d07      	ldr	r5, [pc, #28]	@ (801af14 <_write_r+0x20>)
 801aef8:	4604      	mov	r4, r0
 801aefa:	4608      	mov	r0, r1
 801aefc:	4611      	mov	r1, r2
 801aefe:	2200      	movs	r2, #0
 801af00:	602a      	str	r2, [r5, #0]
 801af02:	461a      	mov	r2, r3
 801af04:	f7e8 ff9a 	bl	8003e3c <_write>
 801af08:	1c43      	adds	r3, r0, #1
 801af0a:	d102      	bne.n	801af12 <_write_r+0x1e>
 801af0c:	682b      	ldr	r3, [r5, #0]
 801af0e:	b103      	cbz	r3, 801af12 <_write_r+0x1e>
 801af10:	6023      	str	r3, [r4, #0]
 801af12:	bd38      	pop	{r3, r4, r5, pc}
 801af14:	2000d0b4 	.word	0x2000d0b4

0801af18 <__errno>:
 801af18:	4b01      	ldr	r3, [pc, #4]	@ (801af20 <__errno+0x8>)
 801af1a:	6818      	ldr	r0, [r3, #0]
 801af1c:	4770      	bx	lr
 801af1e:	bf00      	nop
 801af20:	20000120 	.word	0x20000120

0801af24 <__libc_init_array>:
 801af24:	b570      	push	{r4, r5, r6, lr}
 801af26:	4d0d      	ldr	r5, [pc, #52]	@ (801af5c <__libc_init_array+0x38>)
 801af28:	4c0d      	ldr	r4, [pc, #52]	@ (801af60 <__libc_init_array+0x3c>)
 801af2a:	1b64      	subs	r4, r4, r5
 801af2c:	10a4      	asrs	r4, r4, #2
 801af2e:	2600      	movs	r6, #0
 801af30:	42a6      	cmp	r6, r4
 801af32:	d109      	bne.n	801af48 <__libc_init_array+0x24>
 801af34:	4d0b      	ldr	r5, [pc, #44]	@ (801af64 <__libc_init_array+0x40>)
 801af36:	4c0c      	ldr	r4, [pc, #48]	@ (801af68 <__libc_init_array+0x44>)
 801af38:	f005 ff8e 	bl	8020e58 <_init>
 801af3c:	1b64      	subs	r4, r4, r5
 801af3e:	10a4      	asrs	r4, r4, #2
 801af40:	2600      	movs	r6, #0
 801af42:	42a6      	cmp	r6, r4
 801af44:	d105      	bne.n	801af52 <__libc_init_array+0x2e>
 801af46:	bd70      	pop	{r4, r5, r6, pc}
 801af48:	f855 3b04 	ldr.w	r3, [r5], #4
 801af4c:	4798      	blx	r3
 801af4e:	3601      	adds	r6, #1
 801af50:	e7ee      	b.n	801af30 <__libc_init_array+0xc>
 801af52:	f855 3b04 	ldr.w	r3, [r5], #4
 801af56:	4798      	blx	r3
 801af58:	3601      	adds	r6, #1
 801af5a:	e7f2      	b.n	801af42 <__libc_init_array+0x1e>
 801af5c:	08021bc0 	.word	0x08021bc0
 801af60:	08021bc0 	.word	0x08021bc0
 801af64:	08021bc0 	.word	0x08021bc0
 801af68:	08021bc8 	.word	0x08021bc8

0801af6c <__retarget_lock_init_recursive>:
 801af6c:	4770      	bx	lr

0801af6e <__retarget_lock_close_recursive>:
 801af6e:	4770      	bx	lr

0801af70 <__retarget_lock_acquire_recursive>:
 801af70:	4770      	bx	lr

0801af72 <__retarget_lock_release_recursive>:
 801af72:	4770      	bx	lr

0801af74 <memcpy>:
 801af74:	440a      	add	r2, r1
 801af76:	4291      	cmp	r1, r2
 801af78:	f100 33ff 	add.w	r3, r0, #4294967295
 801af7c:	d100      	bne.n	801af80 <memcpy+0xc>
 801af7e:	4770      	bx	lr
 801af80:	b510      	push	{r4, lr}
 801af82:	f811 4b01 	ldrb.w	r4, [r1], #1
 801af86:	f803 4f01 	strb.w	r4, [r3, #1]!
 801af8a:	4291      	cmp	r1, r2
 801af8c:	d1f9      	bne.n	801af82 <memcpy+0xe>
 801af8e:	bd10      	pop	{r4, pc}

0801af90 <register_fini>:
 801af90:	4b02      	ldr	r3, [pc, #8]	@ (801af9c <register_fini+0xc>)
 801af92:	b113      	cbz	r3, 801af9a <register_fini+0xa>
 801af94:	4802      	ldr	r0, [pc, #8]	@ (801afa0 <register_fini+0x10>)
 801af96:	f000 b805 	b.w	801afa4 <atexit>
 801af9a:	4770      	bx	lr
 801af9c:	00000000 	.word	0x00000000
 801afa0:	0801cc85 	.word	0x0801cc85

0801afa4 <atexit>:
 801afa4:	2300      	movs	r3, #0
 801afa6:	4601      	mov	r1, r0
 801afa8:	461a      	mov	r2, r3
 801afaa:	4618      	mov	r0, r3
 801afac:	f001 bec0 	b.w	801cd30 <__register_exitproc>

0801afb0 <_malloc_trim_r>:
 801afb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801afb4:	4606      	mov	r6, r0
 801afb6:	2008      	movs	r0, #8
 801afb8:	4689      	mov	r9, r1
 801afba:	f001 fe77 	bl	801ccac <sysconf>
 801afbe:	4f24      	ldr	r7, [pc, #144]	@ (801b050 <_malloc_trim_r+0xa0>)
 801afc0:	4680      	mov	r8, r0
 801afc2:	4630      	mov	r0, r6
 801afc4:	f000 fb44 	bl	801b650 <__malloc_lock>
 801afc8:	68bb      	ldr	r3, [r7, #8]
 801afca:	685d      	ldr	r5, [r3, #4]
 801afcc:	f025 0503 	bic.w	r5, r5, #3
 801afd0:	f1a5 0411 	sub.w	r4, r5, #17
 801afd4:	eba4 0409 	sub.w	r4, r4, r9
 801afd8:	4444      	add	r4, r8
 801afda:	fbb4 f4f8 	udiv	r4, r4, r8
 801afde:	3c01      	subs	r4, #1
 801afe0:	fb08 f404 	mul.w	r4, r8, r4
 801afe4:	45a0      	cmp	r8, r4
 801afe6:	dd05      	ble.n	801aff4 <_malloc_trim_r+0x44>
 801afe8:	4630      	mov	r0, r6
 801afea:	f000 fb37 	bl	801b65c <__malloc_unlock>
 801afee:	2000      	movs	r0, #0
 801aff0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801aff4:	2100      	movs	r1, #0
 801aff6:	4630      	mov	r0, r6
 801aff8:	f001 fe34 	bl	801cc64 <_sbrk_r>
 801affc:	68bb      	ldr	r3, [r7, #8]
 801affe:	442b      	add	r3, r5
 801b000:	4298      	cmp	r0, r3
 801b002:	d1f1      	bne.n	801afe8 <_malloc_trim_r+0x38>
 801b004:	4261      	negs	r1, r4
 801b006:	4630      	mov	r0, r6
 801b008:	f001 fe2c 	bl	801cc64 <_sbrk_r>
 801b00c:	3001      	adds	r0, #1
 801b00e:	d110      	bne.n	801b032 <_malloc_trim_r+0x82>
 801b010:	2100      	movs	r1, #0
 801b012:	4630      	mov	r0, r6
 801b014:	f001 fe26 	bl	801cc64 <_sbrk_r>
 801b018:	68ba      	ldr	r2, [r7, #8]
 801b01a:	1a83      	subs	r3, r0, r2
 801b01c:	2b0f      	cmp	r3, #15
 801b01e:	dde3      	ble.n	801afe8 <_malloc_trim_r+0x38>
 801b020:	490c      	ldr	r1, [pc, #48]	@ (801b054 <_malloc_trim_r+0xa4>)
 801b022:	6809      	ldr	r1, [r1, #0]
 801b024:	1a40      	subs	r0, r0, r1
 801b026:	490c      	ldr	r1, [pc, #48]	@ (801b058 <_malloc_trim_r+0xa8>)
 801b028:	f043 0301 	orr.w	r3, r3, #1
 801b02c:	6008      	str	r0, [r1, #0]
 801b02e:	6053      	str	r3, [r2, #4]
 801b030:	e7da      	b.n	801afe8 <_malloc_trim_r+0x38>
 801b032:	68bb      	ldr	r3, [r7, #8]
 801b034:	4a08      	ldr	r2, [pc, #32]	@ (801b058 <_malloc_trim_r+0xa8>)
 801b036:	1b2d      	subs	r5, r5, r4
 801b038:	f045 0501 	orr.w	r5, r5, #1
 801b03c:	605d      	str	r5, [r3, #4]
 801b03e:	6813      	ldr	r3, [r2, #0]
 801b040:	4630      	mov	r0, r6
 801b042:	1b1b      	subs	r3, r3, r4
 801b044:	6013      	str	r3, [r2, #0]
 801b046:	f000 fb09 	bl	801b65c <__malloc_unlock>
 801b04a:	2001      	movs	r0, #1
 801b04c:	e7d0      	b.n	801aff0 <_malloc_trim_r+0x40>
 801b04e:	bf00      	nop
 801b050:	20000254 	.word	0x20000254
 801b054:	2000024c 	.word	0x2000024c
 801b058:	2000d0c0 	.word	0x2000d0c0

0801b05c <_free_r>:
 801b05c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b05e:	4604      	mov	r4, r0
 801b060:	460f      	mov	r7, r1
 801b062:	2900      	cmp	r1, #0
 801b064:	f000 80b1 	beq.w	801b1ca <_free_r+0x16e>
 801b068:	f000 faf2 	bl	801b650 <__malloc_lock>
 801b06c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 801b070:	4d56      	ldr	r5, [pc, #344]	@ (801b1cc <_free_r+0x170>)
 801b072:	f022 0001 	bic.w	r0, r2, #1
 801b076:	f1a7 0308 	sub.w	r3, r7, #8
 801b07a:	eb03 0c00 	add.w	ip, r3, r0
 801b07e:	68a9      	ldr	r1, [r5, #8]
 801b080:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b084:	4561      	cmp	r1, ip
 801b086:	f026 0603 	bic.w	r6, r6, #3
 801b08a:	f002 0201 	and.w	r2, r2, #1
 801b08e:	d11b      	bne.n	801b0c8 <_free_r+0x6c>
 801b090:	4406      	add	r6, r0
 801b092:	b93a      	cbnz	r2, 801b0a4 <_free_r+0x48>
 801b094:	f857 2c08 	ldr.w	r2, [r7, #-8]
 801b098:	1a9b      	subs	r3, r3, r2
 801b09a:	4416      	add	r6, r2
 801b09c:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 801b0a0:	60ca      	str	r2, [r1, #12]
 801b0a2:	6091      	str	r1, [r2, #8]
 801b0a4:	f046 0201 	orr.w	r2, r6, #1
 801b0a8:	605a      	str	r2, [r3, #4]
 801b0aa:	60ab      	str	r3, [r5, #8]
 801b0ac:	4b48      	ldr	r3, [pc, #288]	@ (801b1d0 <_free_r+0x174>)
 801b0ae:	681b      	ldr	r3, [r3, #0]
 801b0b0:	42b3      	cmp	r3, r6
 801b0b2:	d804      	bhi.n	801b0be <_free_r+0x62>
 801b0b4:	4b47      	ldr	r3, [pc, #284]	@ (801b1d4 <_free_r+0x178>)
 801b0b6:	4620      	mov	r0, r4
 801b0b8:	6819      	ldr	r1, [r3, #0]
 801b0ba:	f7ff ff79 	bl	801afb0 <_malloc_trim_r>
 801b0be:	4620      	mov	r0, r4
 801b0c0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801b0c4:	f000 baca 	b.w	801b65c <__malloc_unlock>
 801b0c8:	f8cc 6004 	str.w	r6, [ip, #4]
 801b0cc:	2a00      	cmp	r2, #0
 801b0ce:	d138      	bne.n	801b142 <_free_r+0xe6>
 801b0d0:	f857 1c08 	ldr.w	r1, [r7, #-8]
 801b0d4:	1a5b      	subs	r3, r3, r1
 801b0d6:	4408      	add	r0, r1
 801b0d8:	6899      	ldr	r1, [r3, #8]
 801b0da:	f105 0708 	add.w	r7, r5, #8
 801b0de:	42b9      	cmp	r1, r7
 801b0e0:	d031      	beq.n	801b146 <_free_r+0xea>
 801b0e2:	68df      	ldr	r7, [r3, #12]
 801b0e4:	60cf      	str	r7, [r1, #12]
 801b0e6:	60b9      	str	r1, [r7, #8]
 801b0e8:	eb0c 0106 	add.w	r1, ip, r6
 801b0ec:	6849      	ldr	r1, [r1, #4]
 801b0ee:	07c9      	lsls	r1, r1, #31
 801b0f0:	d40b      	bmi.n	801b10a <_free_r+0xae>
 801b0f2:	f8dc 1008 	ldr.w	r1, [ip, #8]
 801b0f6:	4430      	add	r0, r6
 801b0f8:	bb3a      	cbnz	r2, 801b14a <_free_r+0xee>
 801b0fa:	4e37      	ldr	r6, [pc, #220]	@ (801b1d8 <_free_r+0x17c>)
 801b0fc:	42b1      	cmp	r1, r6
 801b0fe:	d124      	bne.n	801b14a <_free_r+0xee>
 801b100:	e9c5 3304 	strd	r3, r3, [r5, #16]
 801b104:	e9c3 1102 	strd	r1, r1, [r3, #8]
 801b108:	2201      	movs	r2, #1
 801b10a:	f040 0101 	orr.w	r1, r0, #1
 801b10e:	6059      	str	r1, [r3, #4]
 801b110:	5018      	str	r0, [r3, r0]
 801b112:	2a00      	cmp	r2, #0
 801b114:	d1d3      	bne.n	801b0be <_free_r+0x62>
 801b116:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 801b11a:	d21b      	bcs.n	801b154 <_free_r+0xf8>
 801b11c:	08c2      	lsrs	r2, r0, #3
 801b11e:	2101      	movs	r1, #1
 801b120:	0940      	lsrs	r0, r0, #5
 801b122:	4081      	lsls	r1, r0
 801b124:	6868      	ldr	r0, [r5, #4]
 801b126:	3201      	adds	r2, #1
 801b128:	4301      	orrs	r1, r0
 801b12a:	6069      	str	r1, [r5, #4]
 801b12c:	f855 0032 	ldr.w	r0, [r5, r2, lsl #3]
 801b130:	eb05 01c2 	add.w	r1, r5, r2, lsl #3
 801b134:	3908      	subs	r1, #8
 801b136:	e9c3 0102 	strd	r0, r1, [r3, #8]
 801b13a:	f845 3032 	str.w	r3, [r5, r2, lsl #3]
 801b13e:	60c3      	str	r3, [r0, #12]
 801b140:	e7bd      	b.n	801b0be <_free_r+0x62>
 801b142:	2200      	movs	r2, #0
 801b144:	e7d0      	b.n	801b0e8 <_free_r+0x8c>
 801b146:	2201      	movs	r2, #1
 801b148:	e7ce      	b.n	801b0e8 <_free_r+0x8c>
 801b14a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 801b14e:	60ce      	str	r6, [r1, #12]
 801b150:	60b1      	str	r1, [r6, #8]
 801b152:	e7da      	b.n	801b10a <_free_r+0xae>
 801b154:	f5b0 6f20 	cmp.w	r0, #2560	@ 0xa00
 801b158:	ea4f 2250 	mov.w	r2, r0, lsr #9
 801b15c:	d214      	bcs.n	801b188 <_free_r+0x12c>
 801b15e:	0982      	lsrs	r2, r0, #6
 801b160:	3238      	adds	r2, #56	@ 0x38
 801b162:	1c51      	adds	r1, r2, #1
 801b164:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 801b168:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 801b16c:	428e      	cmp	r6, r1
 801b16e:	d125      	bne.n	801b1bc <_free_r+0x160>
 801b170:	2001      	movs	r0, #1
 801b172:	1092      	asrs	r2, r2, #2
 801b174:	fa00 f202 	lsl.w	r2, r0, r2
 801b178:	6868      	ldr	r0, [r5, #4]
 801b17a:	4302      	orrs	r2, r0
 801b17c:	606a      	str	r2, [r5, #4]
 801b17e:	e9c3 1602 	strd	r1, r6, [r3, #8]
 801b182:	60b3      	str	r3, [r6, #8]
 801b184:	60cb      	str	r3, [r1, #12]
 801b186:	e79a      	b.n	801b0be <_free_r+0x62>
 801b188:	2a14      	cmp	r2, #20
 801b18a:	d801      	bhi.n	801b190 <_free_r+0x134>
 801b18c:	325b      	adds	r2, #91	@ 0x5b
 801b18e:	e7e8      	b.n	801b162 <_free_r+0x106>
 801b190:	2a54      	cmp	r2, #84	@ 0x54
 801b192:	d802      	bhi.n	801b19a <_free_r+0x13e>
 801b194:	0b02      	lsrs	r2, r0, #12
 801b196:	326e      	adds	r2, #110	@ 0x6e
 801b198:	e7e3      	b.n	801b162 <_free_r+0x106>
 801b19a:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801b19e:	d802      	bhi.n	801b1a6 <_free_r+0x14a>
 801b1a0:	0bc2      	lsrs	r2, r0, #15
 801b1a2:	3277      	adds	r2, #119	@ 0x77
 801b1a4:	e7dd      	b.n	801b162 <_free_r+0x106>
 801b1a6:	f240 5154 	movw	r1, #1364	@ 0x554
 801b1aa:	428a      	cmp	r2, r1
 801b1ac:	bf9a      	itte	ls
 801b1ae:	0c82      	lsrls	r2, r0, #18
 801b1b0:	327c      	addls	r2, #124	@ 0x7c
 801b1b2:	227e      	movhi	r2, #126	@ 0x7e
 801b1b4:	e7d5      	b.n	801b162 <_free_r+0x106>
 801b1b6:	6889      	ldr	r1, [r1, #8]
 801b1b8:	428e      	cmp	r6, r1
 801b1ba:	d004      	beq.n	801b1c6 <_free_r+0x16a>
 801b1bc:	684a      	ldr	r2, [r1, #4]
 801b1be:	f022 0203 	bic.w	r2, r2, #3
 801b1c2:	4282      	cmp	r2, r0
 801b1c4:	d8f7      	bhi.n	801b1b6 <_free_r+0x15a>
 801b1c6:	68ce      	ldr	r6, [r1, #12]
 801b1c8:	e7d9      	b.n	801b17e <_free_r+0x122>
 801b1ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b1cc:	20000254 	.word	0x20000254
 801b1d0:	20000250 	.word	0x20000250
 801b1d4:	2000d0f0 	.word	0x2000d0f0
 801b1d8:	2000025c 	.word	0x2000025c

0801b1dc <_malloc_r>:
 801b1dc:	f101 030b 	add.w	r3, r1, #11
 801b1e0:	2b16      	cmp	r3, #22
 801b1e2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1e6:	4605      	mov	r5, r0
 801b1e8:	d906      	bls.n	801b1f8 <_malloc_r+0x1c>
 801b1ea:	f033 0707 	bics.w	r7, r3, #7
 801b1ee:	d504      	bpl.n	801b1fa <_malloc_r+0x1e>
 801b1f0:	230c      	movs	r3, #12
 801b1f2:	602b      	str	r3, [r5, #0]
 801b1f4:	2400      	movs	r4, #0
 801b1f6:	e1a3      	b.n	801b540 <_malloc_r+0x364>
 801b1f8:	2710      	movs	r7, #16
 801b1fa:	42b9      	cmp	r1, r7
 801b1fc:	d8f8      	bhi.n	801b1f0 <_malloc_r+0x14>
 801b1fe:	4628      	mov	r0, r5
 801b200:	f000 fa26 	bl	801b650 <__malloc_lock>
 801b204:	f5b7 7ffc 	cmp.w	r7, #504	@ 0x1f8
 801b208:	4eaf      	ldr	r6, [pc, #700]	@ (801b4c8 <_malloc_r+0x2ec>)
 801b20a:	d237      	bcs.n	801b27c <_malloc_r+0xa0>
 801b20c:	f107 0208 	add.w	r2, r7, #8
 801b210:	4432      	add	r2, r6
 801b212:	f1a2 0108 	sub.w	r1, r2, #8
 801b216:	6854      	ldr	r4, [r2, #4]
 801b218:	428c      	cmp	r4, r1
 801b21a:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 801b21e:	d102      	bne.n	801b226 <_malloc_r+0x4a>
 801b220:	68d4      	ldr	r4, [r2, #12]
 801b222:	42a2      	cmp	r2, r4
 801b224:	d010      	beq.n	801b248 <_malloc_r+0x6c>
 801b226:	6863      	ldr	r3, [r4, #4]
 801b228:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801b22c:	f023 0303 	bic.w	r3, r3, #3
 801b230:	60ca      	str	r2, [r1, #12]
 801b232:	4423      	add	r3, r4
 801b234:	6091      	str	r1, [r2, #8]
 801b236:	685a      	ldr	r2, [r3, #4]
 801b238:	f042 0201 	orr.w	r2, r2, #1
 801b23c:	605a      	str	r2, [r3, #4]
 801b23e:	4628      	mov	r0, r5
 801b240:	f000 fa0c 	bl	801b65c <__malloc_unlock>
 801b244:	3408      	adds	r4, #8
 801b246:	e17b      	b.n	801b540 <_malloc_r+0x364>
 801b248:	3302      	adds	r3, #2
 801b24a:	6934      	ldr	r4, [r6, #16]
 801b24c:	499f      	ldr	r1, [pc, #636]	@ (801b4cc <_malloc_r+0x2f0>)
 801b24e:	428c      	cmp	r4, r1
 801b250:	d077      	beq.n	801b342 <_malloc_r+0x166>
 801b252:	6862      	ldr	r2, [r4, #4]
 801b254:	f022 0c03 	bic.w	ip, r2, #3
 801b258:	ebac 0007 	sub.w	r0, ip, r7
 801b25c:	280f      	cmp	r0, #15
 801b25e:	dd48      	ble.n	801b2f2 <_malloc_r+0x116>
 801b260:	19e2      	adds	r2, r4, r7
 801b262:	f040 0301 	orr.w	r3, r0, #1
 801b266:	f047 0701 	orr.w	r7, r7, #1
 801b26a:	6067      	str	r7, [r4, #4]
 801b26c:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801b270:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801b274:	6053      	str	r3, [r2, #4]
 801b276:	f844 000c 	str.w	r0, [r4, ip]
 801b27a:	e7e0      	b.n	801b23e <_malloc_r+0x62>
 801b27c:	0a7b      	lsrs	r3, r7, #9
 801b27e:	d02a      	beq.n	801b2d6 <_malloc_r+0xfa>
 801b280:	2b04      	cmp	r3, #4
 801b282:	d812      	bhi.n	801b2aa <_malloc_r+0xce>
 801b284:	09bb      	lsrs	r3, r7, #6
 801b286:	3338      	adds	r3, #56	@ 0x38
 801b288:	1c5a      	adds	r2, r3, #1
 801b28a:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 801b28e:	f1a2 0c08 	sub.w	ip, r2, #8
 801b292:	6854      	ldr	r4, [r2, #4]
 801b294:	4564      	cmp	r4, ip
 801b296:	d006      	beq.n	801b2a6 <_malloc_r+0xca>
 801b298:	6862      	ldr	r2, [r4, #4]
 801b29a:	f022 0203 	bic.w	r2, r2, #3
 801b29e:	1bd0      	subs	r0, r2, r7
 801b2a0:	280f      	cmp	r0, #15
 801b2a2:	dd1c      	ble.n	801b2de <_malloc_r+0x102>
 801b2a4:	3b01      	subs	r3, #1
 801b2a6:	3301      	adds	r3, #1
 801b2a8:	e7cf      	b.n	801b24a <_malloc_r+0x6e>
 801b2aa:	2b14      	cmp	r3, #20
 801b2ac:	d801      	bhi.n	801b2b2 <_malloc_r+0xd6>
 801b2ae:	335b      	adds	r3, #91	@ 0x5b
 801b2b0:	e7ea      	b.n	801b288 <_malloc_r+0xac>
 801b2b2:	2b54      	cmp	r3, #84	@ 0x54
 801b2b4:	d802      	bhi.n	801b2bc <_malloc_r+0xe0>
 801b2b6:	0b3b      	lsrs	r3, r7, #12
 801b2b8:	336e      	adds	r3, #110	@ 0x6e
 801b2ba:	e7e5      	b.n	801b288 <_malloc_r+0xac>
 801b2bc:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 801b2c0:	d802      	bhi.n	801b2c8 <_malloc_r+0xec>
 801b2c2:	0bfb      	lsrs	r3, r7, #15
 801b2c4:	3377      	adds	r3, #119	@ 0x77
 801b2c6:	e7df      	b.n	801b288 <_malloc_r+0xac>
 801b2c8:	f240 5254 	movw	r2, #1364	@ 0x554
 801b2cc:	4293      	cmp	r3, r2
 801b2ce:	d804      	bhi.n	801b2da <_malloc_r+0xfe>
 801b2d0:	0cbb      	lsrs	r3, r7, #18
 801b2d2:	337c      	adds	r3, #124	@ 0x7c
 801b2d4:	e7d8      	b.n	801b288 <_malloc_r+0xac>
 801b2d6:	233f      	movs	r3, #63	@ 0x3f
 801b2d8:	e7d6      	b.n	801b288 <_malloc_r+0xac>
 801b2da:	237e      	movs	r3, #126	@ 0x7e
 801b2dc:	e7d4      	b.n	801b288 <_malloc_r+0xac>
 801b2de:	2800      	cmp	r0, #0
 801b2e0:	68e1      	ldr	r1, [r4, #12]
 801b2e2:	db04      	blt.n	801b2ee <_malloc_r+0x112>
 801b2e4:	68a3      	ldr	r3, [r4, #8]
 801b2e6:	60d9      	str	r1, [r3, #12]
 801b2e8:	608b      	str	r3, [r1, #8]
 801b2ea:	18a3      	adds	r3, r4, r2
 801b2ec:	e7a3      	b.n	801b236 <_malloc_r+0x5a>
 801b2ee:	460c      	mov	r4, r1
 801b2f0:	e7d0      	b.n	801b294 <_malloc_r+0xb8>
 801b2f2:	2800      	cmp	r0, #0
 801b2f4:	e9c6 1104 	strd	r1, r1, [r6, #16]
 801b2f8:	db07      	blt.n	801b30a <_malloc_r+0x12e>
 801b2fa:	44a4      	add	ip, r4
 801b2fc:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b300:	f043 0301 	orr.w	r3, r3, #1
 801b304:	f8cc 3004 	str.w	r3, [ip, #4]
 801b308:	e799      	b.n	801b23e <_malloc_r+0x62>
 801b30a:	f5bc 7f00 	cmp.w	ip, #512	@ 0x200
 801b30e:	6870      	ldr	r0, [r6, #4]
 801b310:	f080 8095 	bcs.w	801b43e <_malloc_r+0x262>
 801b314:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 801b318:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 801b31c:	f04f 0c01 	mov.w	ip, #1
 801b320:	3201      	adds	r2, #1
 801b322:	fa0c fc0e 	lsl.w	ip, ip, lr
 801b326:	ea4c 0000 	orr.w	r0, ip, r0
 801b32a:	6070      	str	r0, [r6, #4]
 801b32c:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 801b330:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 801b334:	3808      	subs	r0, #8
 801b336:	e9c4 c002 	strd	ip, r0, [r4, #8]
 801b33a:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 801b33e:	f8cc 400c 	str.w	r4, [ip, #12]
 801b342:	1098      	asrs	r0, r3, #2
 801b344:	2201      	movs	r2, #1
 801b346:	4082      	lsls	r2, r0
 801b348:	6870      	ldr	r0, [r6, #4]
 801b34a:	4290      	cmp	r0, r2
 801b34c:	d326      	bcc.n	801b39c <_malloc_r+0x1c0>
 801b34e:	4210      	tst	r0, r2
 801b350:	d106      	bne.n	801b360 <_malloc_r+0x184>
 801b352:	f023 0303 	bic.w	r3, r3, #3
 801b356:	0052      	lsls	r2, r2, #1
 801b358:	4210      	tst	r0, r2
 801b35a:	f103 0304 	add.w	r3, r3, #4
 801b35e:	d0fa      	beq.n	801b356 <_malloc_r+0x17a>
 801b360:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 801b364:	46c1      	mov	r9, r8
 801b366:	469e      	mov	lr, r3
 801b368:	f8d9 400c 	ldr.w	r4, [r9, #12]
 801b36c:	454c      	cmp	r4, r9
 801b36e:	f040 80b9 	bne.w	801b4e4 <_malloc_r+0x308>
 801b372:	f10e 0e01 	add.w	lr, lr, #1
 801b376:	f01e 0f03 	tst.w	lr, #3
 801b37a:	f109 0908 	add.w	r9, r9, #8
 801b37e:	d1f3      	bne.n	801b368 <_malloc_r+0x18c>
 801b380:	0798      	lsls	r0, r3, #30
 801b382:	f040 80e3 	bne.w	801b54c <_malloc_r+0x370>
 801b386:	6873      	ldr	r3, [r6, #4]
 801b388:	ea23 0302 	bic.w	r3, r3, r2
 801b38c:	6073      	str	r3, [r6, #4]
 801b38e:	6870      	ldr	r0, [r6, #4]
 801b390:	0052      	lsls	r2, r2, #1
 801b392:	4290      	cmp	r0, r2
 801b394:	d302      	bcc.n	801b39c <_malloc_r+0x1c0>
 801b396:	2a00      	cmp	r2, #0
 801b398:	f040 80e5 	bne.w	801b566 <_malloc_r+0x38a>
 801b39c:	f8d6 a008 	ldr.w	sl, [r6, #8]
 801b3a0:	f8da 3004 	ldr.w	r3, [sl, #4]
 801b3a4:	f023 0903 	bic.w	r9, r3, #3
 801b3a8:	45b9      	cmp	r9, r7
 801b3aa:	d304      	bcc.n	801b3b6 <_malloc_r+0x1da>
 801b3ac:	eba9 0207 	sub.w	r2, r9, r7
 801b3b0:	2a0f      	cmp	r2, #15
 801b3b2:	f300 8141 	bgt.w	801b638 <_malloc_r+0x45c>
 801b3b6:	4b46      	ldr	r3, [pc, #280]	@ (801b4d0 <_malloc_r+0x2f4>)
 801b3b8:	6819      	ldr	r1, [r3, #0]
 801b3ba:	3110      	adds	r1, #16
 801b3bc:	4439      	add	r1, r7
 801b3be:	2008      	movs	r0, #8
 801b3c0:	9101      	str	r1, [sp, #4]
 801b3c2:	f001 fc73 	bl	801ccac <sysconf>
 801b3c6:	4a43      	ldr	r2, [pc, #268]	@ (801b4d4 <_malloc_r+0x2f8>)
 801b3c8:	9901      	ldr	r1, [sp, #4]
 801b3ca:	6813      	ldr	r3, [r2, #0]
 801b3cc:	3301      	adds	r3, #1
 801b3ce:	bf1f      	itttt	ne
 801b3d0:	f101 31ff 	addne.w	r1, r1, #4294967295
 801b3d4:	1809      	addne	r1, r1, r0
 801b3d6:	4243      	negne	r3, r0
 801b3d8:	4019      	andne	r1, r3
 801b3da:	4680      	mov	r8, r0
 801b3dc:	4628      	mov	r0, r5
 801b3de:	9101      	str	r1, [sp, #4]
 801b3e0:	f001 fc40 	bl	801cc64 <_sbrk_r>
 801b3e4:	1c42      	adds	r2, r0, #1
 801b3e6:	eb0a 0b09 	add.w	fp, sl, r9
 801b3ea:	4604      	mov	r4, r0
 801b3ec:	f000 80f7 	beq.w	801b5de <_malloc_r+0x402>
 801b3f0:	4583      	cmp	fp, r0
 801b3f2:	9901      	ldr	r1, [sp, #4]
 801b3f4:	4a37      	ldr	r2, [pc, #220]	@ (801b4d4 <_malloc_r+0x2f8>)
 801b3f6:	d902      	bls.n	801b3fe <_malloc_r+0x222>
 801b3f8:	45b2      	cmp	sl, r6
 801b3fa:	f040 80f0 	bne.w	801b5de <_malloc_r+0x402>
 801b3fe:	4b36      	ldr	r3, [pc, #216]	@ (801b4d8 <_malloc_r+0x2fc>)
 801b400:	6818      	ldr	r0, [r3, #0]
 801b402:	45a3      	cmp	fp, r4
 801b404:	eb00 0e01 	add.w	lr, r0, r1
 801b408:	f8c3 e000 	str.w	lr, [r3]
 801b40c:	f108 3cff 	add.w	ip, r8, #4294967295
 801b410:	f040 80ab 	bne.w	801b56a <_malloc_r+0x38e>
 801b414:	ea1b 0f0c 	tst.w	fp, ip
 801b418:	f040 80a7 	bne.w	801b56a <_malloc_r+0x38e>
 801b41c:	68b2      	ldr	r2, [r6, #8]
 801b41e:	4449      	add	r1, r9
 801b420:	f041 0101 	orr.w	r1, r1, #1
 801b424:	6051      	str	r1, [r2, #4]
 801b426:	4a2d      	ldr	r2, [pc, #180]	@ (801b4dc <_malloc_r+0x300>)
 801b428:	681b      	ldr	r3, [r3, #0]
 801b42a:	6811      	ldr	r1, [r2, #0]
 801b42c:	428b      	cmp	r3, r1
 801b42e:	bf88      	it	hi
 801b430:	6013      	strhi	r3, [r2, #0]
 801b432:	4a2b      	ldr	r2, [pc, #172]	@ (801b4e0 <_malloc_r+0x304>)
 801b434:	6811      	ldr	r1, [r2, #0]
 801b436:	428b      	cmp	r3, r1
 801b438:	bf88      	it	hi
 801b43a:	6013      	strhi	r3, [r2, #0]
 801b43c:	e0cf      	b.n	801b5de <_malloc_r+0x402>
 801b43e:	f5bc 6f20 	cmp.w	ip, #2560	@ 0xa00
 801b442:	ea4f 225c 	mov.w	r2, ip, lsr #9
 801b446:	d218      	bcs.n	801b47a <_malloc_r+0x29e>
 801b448:	ea4f 129c 	mov.w	r2, ip, lsr #6
 801b44c:	3238      	adds	r2, #56	@ 0x38
 801b44e:	f102 0e01 	add.w	lr, r2, #1
 801b452:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 801b456:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 801b45a:	45f0      	cmp	r8, lr
 801b45c:	d12b      	bne.n	801b4b6 <_malloc_r+0x2da>
 801b45e:	1092      	asrs	r2, r2, #2
 801b460:	f04f 0c01 	mov.w	ip, #1
 801b464:	fa0c f202 	lsl.w	r2, ip, r2
 801b468:	4302      	orrs	r2, r0
 801b46a:	6072      	str	r2, [r6, #4]
 801b46c:	e9c4 e802 	strd	lr, r8, [r4, #8]
 801b470:	f8c8 4008 	str.w	r4, [r8, #8]
 801b474:	f8ce 400c 	str.w	r4, [lr, #12]
 801b478:	e763      	b.n	801b342 <_malloc_r+0x166>
 801b47a:	2a14      	cmp	r2, #20
 801b47c:	d801      	bhi.n	801b482 <_malloc_r+0x2a6>
 801b47e:	325b      	adds	r2, #91	@ 0x5b
 801b480:	e7e5      	b.n	801b44e <_malloc_r+0x272>
 801b482:	2a54      	cmp	r2, #84	@ 0x54
 801b484:	d803      	bhi.n	801b48e <_malloc_r+0x2b2>
 801b486:	ea4f 321c 	mov.w	r2, ip, lsr #12
 801b48a:	326e      	adds	r2, #110	@ 0x6e
 801b48c:	e7df      	b.n	801b44e <_malloc_r+0x272>
 801b48e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801b492:	d803      	bhi.n	801b49c <_malloc_r+0x2c0>
 801b494:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 801b498:	3277      	adds	r2, #119	@ 0x77
 801b49a:	e7d8      	b.n	801b44e <_malloc_r+0x272>
 801b49c:	f240 5e54 	movw	lr, #1364	@ 0x554
 801b4a0:	4572      	cmp	r2, lr
 801b4a2:	bf9a      	itte	ls
 801b4a4:	ea4f 429c 	movls.w	r2, ip, lsr #18
 801b4a8:	327c      	addls	r2, #124	@ 0x7c
 801b4aa:	227e      	movhi	r2, #126	@ 0x7e
 801b4ac:	e7cf      	b.n	801b44e <_malloc_r+0x272>
 801b4ae:	f8de e008 	ldr.w	lr, [lr, #8]
 801b4b2:	45f0      	cmp	r8, lr
 801b4b4:	d005      	beq.n	801b4c2 <_malloc_r+0x2e6>
 801b4b6:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b4ba:	f022 0203 	bic.w	r2, r2, #3
 801b4be:	4562      	cmp	r2, ip
 801b4c0:	d8f5      	bhi.n	801b4ae <_malloc_r+0x2d2>
 801b4c2:	f8de 800c 	ldr.w	r8, [lr, #12]
 801b4c6:	e7d1      	b.n	801b46c <_malloc_r+0x290>
 801b4c8:	20000254 	.word	0x20000254
 801b4cc:	2000025c 	.word	0x2000025c
 801b4d0:	2000d0f0 	.word	0x2000d0f0
 801b4d4:	2000024c 	.word	0x2000024c
 801b4d8:	2000d0c0 	.word	0x2000d0c0
 801b4dc:	2000d0ec 	.word	0x2000d0ec
 801b4e0:	2000d0e8 	.word	0x2000d0e8
 801b4e4:	6860      	ldr	r0, [r4, #4]
 801b4e6:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 801b4ea:	f020 0003 	bic.w	r0, r0, #3
 801b4ee:	eba0 0a07 	sub.w	sl, r0, r7
 801b4f2:	f1ba 0f0f 	cmp.w	sl, #15
 801b4f6:	dd12      	ble.n	801b51e <_malloc_r+0x342>
 801b4f8:	68a3      	ldr	r3, [r4, #8]
 801b4fa:	19e2      	adds	r2, r4, r7
 801b4fc:	f047 0701 	orr.w	r7, r7, #1
 801b500:	6067      	str	r7, [r4, #4]
 801b502:	f8c3 c00c 	str.w	ip, [r3, #12]
 801b506:	f8cc 3008 	str.w	r3, [ip, #8]
 801b50a:	f04a 0301 	orr.w	r3, sl, #1
 801b50e:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801b512:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801b516:	6053      	str	r3, [r2, #4]
 801b518:	f844 a000 	str.w	sl, [r4, r0]
 801b51c:	e68f      	b.n	801b23e <_malloc_r+0x62>
 801b51e:	f1ba 0f00 	cmp.w	sl, #0
 801b522:	db11      	blt.n	801b548 <_malloc_r+0x36c>
 801b524:	4420      	add	r0, r4
 801b526:	6843      	ldr	r3, [r0, #4]
 801b528:	f043 0301 	orr.w	r3, r3, #1
 801b52c:	6043      	str	r3, [r0, #4]
 801b52e:	f854 3f08 	ldr.w	r3, [r4, #8]!
 801b532:	4628      	mov	r0, r5
 801b534:	f8c3 c00c 	str.w	ip, [r3, #12]
 801b538:	f8cc 3008 	str.w	r3, [ip, #8]
 801b53c:	f000 f88e 	bl	801b65c <__malloc_unlock>
 801b540:	4620      	mov	r0, r4
 801b542:	b003      	add	sp, #12
 801b544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b548:	4664      	mov	r4, ip
 801b54a:	e70f      	b.n	801b36c <_malloc_r+0x190>
 801b54c:	f858 0908 	ldr.w	r0, [r8], #-8
 801b550:	4540      	cmp	r0, r8
 801b552:	f103 33ff 	add.w	r3, r3, #4294967295
 801b556:	f43f af13 	beq.w	801b380 <_malloc_r+0x1a4>
 801b55a:	e718      	b.n	801b38e <_malloc_r+0x1b2>
 801b55c:	3304      	adds	r3, #4
 801b55e:	0052      	lsls	r2, r2, #1
 801b560:	4210      	tst	r0, r2
 801b562:	d0fb      	beq.n	801b55c <_malloc_r+0x380>
 801b564:	e6fc      	b.n	801b360 <_malloc_r+0x184>
 801b566:	4673      	mov	r3, lr
 801b568:	e7fa      	b.n	801b560 <_malloc_r+0x384>
 801b56a:	6810      	ldr	r0, [r2, #0]
 801b56c:	3001      	adds	r0, #1
 801b56e:	bf1b      	ittet	ne
 801b570:	eba4 0b0b 	subne.w	fp, r4, fp
 801b574:	eb0b 020e 	addne.w	r2, fp, lr
 801b578:	6014      	streq	r4, [r2, #0]
 801b57a:	601a      	strne	r2, [r3, #0]
 801b57c:	f014 0b07 	ands.w	fp, r4, #7
 801b580:	bf1a      	itte	ne
 801b582:	f1cb 0008 	rsbne	r0, fp, #8
 801b586:	1824      	addne	r4, r4, r0
 801b588:	4658      	moveq	r0, fp
 801b58a:	1862      	adds	r2, r4, r1
 801b58c:	ea02 010c 	and.w	r1, r2, ip
 801b590:	4480      	add	r8, r0
 801b592:	eba8 0801 	sub.w	r8, r8, r1
 801b596:	ea08 080c 	and.w	r8, r8, ip
 801b59a:	4641      	mov	r1, r8
 801b59c:	4628      	mov	r0, r5
 801b59e:	9201      	str	r2, [sp, #4]
 801b5a0:	f001 fb60 	bl	801cc64 <_sbrk_r>
 801b5a4:	1c43      	adds	r3, r0, #1
 801b5a6:	9a01      	ldr	r2, [sp, #4]
 801b5a8:	4b28      	ldr	r3, [pc, #160]	@ (801b64c <_malloc_r+0x470>)
 801b5aa:	d107      	bne.n	801b5bc <_malloc_r+0x3e0>
 801b5ac:	f1bb 0f00 	cmp.w	fp, #0
 801b5b0:	d023      	beq.n	801b5fa <_malloc_r+0x41e>
 801b5b2:	f1ab 0008 	sub.w	r0, fp, #8
 801b5b6:	4410      	add	r0, r2
 801b5b8:	f04f 0800 	mov.w	r8, #0
 801b5bc:	681a      	ldr	r2, [r3, #0]
 801b5be:	60b4      	str	r4, [r6, #8]
 801b5c0:	1b00      	subs	r0, r0, r4
 801b5c2:	4440      	add	r0, r8
 801b5c4:	4442      	add	r2, r8
 801b5c6:	f040 0001 	orr.w	r0, r0, #1
 801b5ca:	45b2      	cmp	sl, r6
 801b5cc:	601a      	str	r2, [r3, #0]
 801b5ce:	6060      	str	r0, [r4, #4]
 801b5d0:	f43f af29 	beq.w	801b426 <_malloc_r+0x24a>
 801b5d4:	f1b9 0f0f 	cmp.w	r9, #15
 801b5d8:	d812      	bhi.n	801b600 <_malloc_r+0x424>
 801b5da:	2301      	movs	r3, #1
 801b5dc:	6063      	str	r3, [r4, #4]
 801b5de:	68b3      	ldr	r3, [r6, #8]
 801b5e0:	685b      	ldr	r3, [r3, #4]
 801b5e2:	f023 0303 	bic.w	r3, r3, #3
 801b5e6:	42bb      	cmp	r3, r7
 801b5e8:	eba3 0207 	sub.w	r2, r3, r7
 801b5ec:	d301      	bcc.n	801b5f2 <_malloc_r+0x416>
 801b5ee:	2a0f      	cmp	r2, #15
 801b5f0:	dc22      	bgt.n	801b638 <_malloc_r+0x45c>
 801b5f2:	4628      	mov	r0, r5
 801b5f4:	f000 f832 	bl	801b65c <__malloc_unlock>
 801b5f8:	e5fc      	b.n	801b1f4 <_malloc_r+0x18>
 801b5fa:	4610      	mov	r0, r2
 801b5fc:	46d8      	mov	r8, fp
 801b5fe:	e7dd      	b.n	801b5bc <_malloc_r+0x3e0>
 801b600:	f8da 2004 	ldr.w	r2, [sl, #4]
 801b604:	f1a9 090c 	sub.w	r9, r9, #12
 801b608:	f029 0907 	bic.w	r9, r9, #7
 801b60c:	f002 0201 	and.w	r2, r2, #1
 801b610:	ea42 0209 	orr.w	r2, r2, r9
 801b614:	f8ca 2004 	str.w	r2, [sl, #4]
 801b618:	2105      	movs	r1, #5
 801b61a:	eb0a 0209 	add.w	r2, sl, r9
 801b61e:	f1b9 0f0f 	cmp.w	r9, #15
 801b622:	e9c2 1101 	strd	r1, r1, [r2, #4]
 801b626:	f67f aefe 	bls.w	801b426 <_malloc_r+0x24a>
 801b62a:	f10a 0108 	add.w	r1, sl, #8
 801b62e:	4628      	mov	r0, r5
 801b630:	f7ff fd14 	bl	801b05c <_free_r>
 801b634:	4b05      	ldr	r3, [pc, #20]	@ (801b64c <_malloc_r+0x470>)
 801b636:	e6f6      	b.n	801b426 <_malloc_r+0x24a>
 801b638:	68b4      	ldr	r4, [r6, #8]
 801b63a:	f047 0301 	orr.w	r3, r7, #1
 801b63e:	4427      	add	r7, r4
 801b640:	f042 0201 	orr.w	r2, r2, #1
 801b644:	6063      	str	r3, [r4, #4]
 801b646:	60b7      	str	r7, [r6, #8]
 801b648:	607a      	str	r2, [r7, #4]
 801b64a:	e5f8      	b.n	801b23e <_malloc_r+0x62>
 801b64c:	2000d0c0 	.word	0x2000d0c0

0801b650 <__malloc_lock>:
 801b650:	4801      	ldr	r0, [pc, #4]	@ (801b658 <__malloc_lock+0x8>)
 801b652:	f7ff bc8d 	b.w	801af70 <__retarget_lock_acquire_recursive>
 801b656:	bf00      	nop
 801b658:	2000d0b8 	.word	0x2000d0b8

0801b65c <__malloc_unlock>:
 801b65c:	4801      	ldr	r0, [pc, #4]	@ (801b664 <__malloc_unlock+0x8>)
 801b65e:	f7ff bc88 	b.w	801af72 <__retarget_lock_release_recursive>
 801b662:	bf00      	nop
 801b664:	2000d0b8 	.word	0x2000d0b8

0801b668 <_svfprintf_r>:
 801b668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b66c:	b0d3      	sub	sp, #332	@ 0x14c
 801b66e:	468b      	mov	fp, r1
 801b670:	4691      	mov	r9, r2
 801b672:	461e      	mov	r6, r3
 801b674:	9003      	str	r0, [sp, #12]
 801b676:	f001 faf1 	bl	801cc5c <_localeconv_r>
 801b67a:	6803      	ldr	r3, [r0, #0]
 801b67c:	9316      	str	r3, [sp, #88]	@ 0x58
 801b67e:	4618      	mov	r0, r3
 801b680:	f7e4 fda6 	bl	80001d0 <strlen>
 801b684:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801b688:	900d      	str	r0, [sp, #52]	@ 0x34
 801b68a:	061b      	lsls	r3, r3, #24
 801b68c:	d515      	bpl.n	801b6ba <_svfprintf_r+0x52>
 801b68e:	f8db 3010 	ldr.w	r3, [fp, #16]
 801b692:	b993      	cbnz	r3, 801b6ba <_svfprintf_r+0x52>
 801b694:	9803      	ldr	r0, [sp, #12]
 801b696:	2140      	movs	r1, #64	@ 0x40
 801b698:	f7ff fda0 	bl	801b1dc <_malloc_r>
 801b69c:	f8cb 0000 	str.w	r0, [fp]
 801b6a0:	f8cb 0010 	str.w	r0, [fp, #16]
 801b6a4:	b930      	cbnz	r0, 801b6b4 <_svfprintf_r+0x4c>
 801b6a6:	9a03      	ldr	r2, [sp, #12]
 801b6a8:	230c      	movs	r3, #12
 801b6aa:	6013      	str	r3, [r2, #0]
 801b6ac:	f04f 33ff 	mov.w	r3, #4294967295
 801b6b0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b6b2:	e1f7      	b.n	801baa4 <_svfprintf_r+0x43c>
 801b6b4:	2340      	movs	r3, #64	@ 0x40
 801b6b6:	f8cb 3014 	str.w	r3, [fp, #20]
 801b6ba:	ed9f 7b93 	vldr	d7, [pc, #588]	@ 801b908 <_svfprintf_r+0x2a0>
 801b6be:	2300      	movs	r3, #0
 801b6c0:	e9cd 3327 	strd	r3, r3, [sp, #156]	@ 0x9c
 801b6c4:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801b6c8:	e9cd 3318 	strd	r3, r3, [sp, #96]	@ 0x60
 801b6cc:	ac29      	add	r4, sp, #164	@ 0xa4
 801b6ce:	9426      	str	r4, [sp, #152]	@ 0x98
 801b6d0:	9304      	str	r3, [sp, #16]
 801b6d2:	9309      	str	r3, [sp, #36]	@ 0x24
 801b6d4:	9312      	str	r3, [sp, #72]	@ 0x48
 801b6d6:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b6d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b6da:	464b      	mov	r3, r9
 801b6dc:	461d      	mov	r5, r3
 801b6de:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b6e2:	b10a      	cbz	r2, 801b6e8 <_svfprintf_r+0x80>
 801b6e4:	2a25      	cmp	r2, #37	@ 0x25
 801b6e6:	d1f9      	bne.n	801b6dc <_svfprintf_r+0x74>
 801b6e8:	ebb5 0709 	subs.w	r7, r5, r9
 801b6ec:	d00d      	beq.n	801b70a <_svfprintf_r+0xa2>
 801b6ee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b6f0:	443b      	add	r3, r7
 801b6f2:	9328      	str	r3, [sp, #160]	@ 0xa0
 801b6f4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b6f6:	3301      	adds	r3, #1
 801b6f8:	2b07      	cmp	r3, #7
 801b6fa:	e9c4 9700 	strd	r9, r7, [r4]
 801b6fe:	9327      	str	r3, [sp, #156]	@ 0x9c
 801b700:	dc75      	bgt.n	801b7ee <_svfprintf_r+0x186>
 801b702:	3408      	adds	r4, #8
 801b704:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b706:	443b      	add	r3, r7
 801b708:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b70a:	782b      	ldrb	r3, [r5, #0]
 801b70c:	2b00      	cmp	r3, #0
 801b70e:	f001 8148 	beq.w	801c9a2 <_svfprintf_r+0x133a>
 801b712:	2200      	movs	r2, #0
 801b714:	1c6b      	adds	r3, r5, #1
 801b716:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801b71a:	f04f 38ff 	mov.w	r8, #4294967295
 801b71e:	920e      	str	r2, [sp, #56]	@ 0x38
 801b720:	4615      	mov	r5, r2
 801b722:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b726:	9206      	str	r2, [sp, #24]
 801b728:	930c      	str	r3, [sp, #48]	@ 0x30
 801b72a:	9b06      	ldr	r3, [sp, #24]
 801b72c:	3b20      	subs	r3, #32
 801b72e:	2b5a      	cmp	r3, #90	@ 0x5a
 801b730:	f200 85a4 	bhi.w	801c27c <_svfprintf_r+0xc14>
 801b734:	e8df f013 	tbh	[pc, r3, lsl #1]
 801b738:	05a2009d 	.word	0x05a2009d
 801b73c:	00a505a2 	.word	0x00a505a2
 801b740:	05a205a2 	.word	0x05a205a2
 801b744:	008505a2 	.word	0x008505a2
 801b748:	05a205a2 	.word	0x05a205a2
 801b74c:	00b200a8 	.word	0x00b200a8
 801b750:	00af05a2 	.word	0x00af05a2
 801b754:	05a200b4 	.word	0x05a200b4
 801b758:	00d100ce 	.word	0x00d100ce
 801b75c:	00d100d1 	.word	0x00d100d1
 801b760:	00d100d1 	.word	0x00d100d1
 801b764:	00d100d1 	.word	0x00d100d1
 801b768:	00d100d1 	.word	0x00d100d1
 801b76c:	05a205a2 	.word	0x05a205a2
 801b770:	05a205a2 	.word	0x05a205a2
 801b774:	05a205a2 	.word	0x05a205a2
 801b778:	014705a2 	.word	0x014705a2
 801b77c:	010805a2 	.word	0x010805a2
 801b780:	0147011b 	.word	0x0147011b
 801b784:	01470147 	.word	0x01470147
 801b788:	05a205a2 	.word	0x05a205a2
 801b78c:	05a205a2 	.word	0x05a205a2
 801b790:	05a200e2 	.word	0x05a200e2
 801b794:	049d05a2 	.word	0x049d05a2
 801b798:	05a205a2 	.word	0x05a205a2
 801b79c:	04e705a2 	.word	0x04e705a2
 801b7a0:	050805a2 	.word	0x050805a2
 801b7a4:	05a205a2 	.word	0x05a205a2
 801b7a8:	05a2052a 	.word	0x05a2052a
 801b7ac:	05a205a2 	.word	0x05a205a2
 801b7b0:	05a205a2 	.word	0x05a205a2
 801b7b4:	05a205a2 	.word	0x05a205a2
 801b7b8:	014705a2 	.word	0x014705a2
 801b7bc:	010805a2 	.word	0x010805a2
 801b7c0:	0147011d 	.word	0x0147011d
 801b7c4:	01470147 	.word	0x01470147
 801b7c8:	011d00ee 	.word	0x011d00ee
 801b7cc:	05a20102 	.word	0x05a20102
 801b7d0:	05a200fb 	.word	0x05a200fb
 801b7d4:	049f047e 	.word	0x049f047e
 801b7d8:	010204d6 	.word	0x010204d6
 801b7dc:	04e705a2 	.word	0x04e705a2
 801b7e0:	050a009b 	.word	0x050a009b
 801b7e4:	05a205a2 	.word	0x05a205a2
 801b7e8:	05a20065 	.word	0x05a20065
 801b7ec:	009b      	.short	0x009b
 801b7ee:	9803      	ldr	r0, [sp, #12]
 801b7f0:	aa26      	add	r2, sp, #152	@ 0x98
 801b7f2:	4659      	mov	r1, fp
 801b7f4:	f002 fe0b 	bl	801e40e <__ssprint_r>
 801b7f8:	2800      	cmp	r0, #0
 801b7fa:	f040 814e 	bne.w	801ba9a <_svfprintf_r+0x432>
 801b7fe:	ac29      	add	r4, sp, #164	@ 0xa4
 801b800:	e780      	b.n	801b704 <_svfprintf_r+0x9c>
 801b802:	4b43      	ldr	r3, [pc, #268]	@ (801b910 <_svfprintf_r+0x2a8>)
 801b804:	9319      	str	r3, [sp, #100]	@ 0x64
 801b806:	f015 0320 	ands.w	r3, r5, #32
 801b80a:	f000 84c2 	beq.w	801c192 <_svfprintf_r+0xb2a>
 801b80e:	3607      	adds	r6, #7
 801b810:	f026 0307 	bic.w	r3, r6, #7
 801b814:	461a      	mov	r2, r3
 801b816:	685f      	ldr	r7, [r3, #4]
 801b818:	f852 6b08 	ldr.w	r6, [r2], #8
 801b81c:	9207      	str	r2, [sp, #28]
 801b81e:	07eb      	lsls	r3, r5, #31
 801b820:	d50a      	bpl.n	801b838 <_svfprintf_r+0x1d0>
 801b822:	ea56 0307 	orrs.w	r3, r6, r7
 801b826:	d007      	beq.n	801b838 <_svfprintf_r+0x1d0>
 801b828:	2330      	movs	r3, #48	@ 0x30
 801b82a:	f88d 307c 	strb.w	r3, [sp, #124]	@ 0x7c
 801b82e:	9b06      	ldr	r3, [sp, #24]
 801b830:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801b834:	f045 0502 	orr.w	r5, r5, #2
 801b838:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801b83c:	2302      	movs	r3, #2
 801b83e:	f000 bc28 	b.w	801c092 <_svfprintf_r+0xa2a>
 801b842:	9803      	ldr	r0, [sp, #12]
 801b844:	f001 fa0a 	bl	801cc5c <_localeconv_r>
 801b848:	6843      	ldr	r3, [r0, #4]
 801b84a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b84c:	4618      	mov	r0, r3
 801b84e:	f7e4 fcbf 	bl	80001d0 <strlen>
 801b852:	9012      	str	r0, [sp, #72]	@ 0x48
 801b854:	9803      	ldr	r0, [sp, #12]
 801b856:	f001 fa01 	bl	801cc5c <_localeconv_r>
 801b85a:	6883      	ldr	r3, [r0, #8]
 801b85c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b85e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b860:	b12b      	cbz	r3, 801b86e <_svfprintf_r+0x206>
 801b862:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b864:	b11b      	cbz	r3, 801b86e <_svfprintf_r+0x206>
 801b866:	781b      	ldrb	r3, [r3, #0]
 801b868:	b10b      	cbz	r3, 801b86e <_svfprintf_r+0x206>
 801b86a:	f445 6580 	orr.w	r5, r5, #1024	@ 0x400
 801b86e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b870:	e757      	b.n	801b722 <_svfprintf_r+0xba>
 801b872:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801b876:	2b00      	cmp	r3, #0
 801b878:	d1f9      	bne.n	801b86e <_svfprintf_r+0x206>
 801b87a:	2320      	movs	r3, #32
 801b87c:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b880:	e7f5      	b.n	801b86e <_svfprintf_r+0x206>
 801b882:	f045 0501 	orr.w	r5, r5, #1
 801b886:	e7f2      	b.n	801b86e <_svfprintf_r+0x206>
 801b888:	f856 3b04 	ldr.w	r3, [r6], #4
 801b88c:	930e      	str	r3, [sp, #56]	@ 0x38
 801b88e:	2b00      	cmp	r3, #0
 801b890:	daed      	bge.n	801b86e <_svfprintf_r+0x206>
 801b892:	425b      	negs	r3, r3
 801b894:	930e      	str	r3, [sp, #56]	@ 0x38
 801b896:	f045 0504 	orr.w	r5, r5, #4
 801b89a:	e7e8      	b.n	801b86e <_svfprintf_r+0x206>
 801b89c:	232b      	movs	r3, #43	@ 0x2b
 801b89e:	e7ed      	b.n	801b87c <_svfprintf_r+0x214>
 801b8a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b8a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b8a6:	9206      	str	r2, [sp, #24]
 801b8a8:	2a2a      	cmp	r2, #42	@ 0x2a
 801b8aa:	d10f      	bne.n	801b8cc <_svfprintf_r+0x264>
 801b8ac:	f856 2b04 	ldr.w	r2, [r6], #4
 801b8b0:	930c      	str	r3, [sp, #48]	@ 0x30
 801b8b2:	ea42 78e2 	orr.w	r8, r2, r2, asr #31
 801b8b6:	e7da      	b.n	801b86e <_svfprintf_r+0x206>
 801b8b8:	fb01 2808 	mla	r8, r1, r8, r2
 801b8bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b8c0:	9206      	str	r2, [sp, #24]
 801b8c2:	9a06      	ldr	r2, [sp, #24]
 801b8c4:	3a30      	subs	r2, #48	@ 0x30
 801b8c6:	2a09      	cmp	r2, #9
 801b8c8:	d9f6      	bls.n	801b8b8 <_svfprintf_r+0x250>
 801b8ca:	e72d      	b.n	801b728 <_svfprintf_r+0xc0>
 801b8cc:	f04f 0800 	mov.w	r8, #0
 801b8d0:	210a      	movs	r1, #10
 801b8d2:	e7f6      	b.n	801b8c2 <_svfprintf_r+0x25a>
 801b8d4:	f045 0580 	orr.w	r5, r5, #128	@ 0x80
 801b8d8:	e7c9      	b.n	801b86e <_svfprintf_r+0x206>
 801b8da:	2200      	movs	r2, #0
 801b8dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b8de:	920e      	str	r2, [sp, #56]	@ 0x38
 801b8e0:	210a      	movs	r1, #10
 801b8e2:	9a06      	ldr	r2, [sp, #24]
 801b8e4:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801b8e6:	3a30      	subs	r2, #48	@ 0x30
 801b8e8:	fb01 2200 	mla	r2, r1, r0, r2
 801b8ec:	920e      	str	r2, [sp, #56]	@ 0x38
 801b8ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b8f2:	9206      	str	r2, [sp, #24]
 801b8f4:	3a30      	subs	r2, #48	@ 0x30
 801b8f6:	2a09      	cmp	r2, #9
 801b8f8:	d9f3      	bls.n	801b8e2 <_svfprintf_r+0x27a>
 801b8fa:	e715      	b.n	801b728 <_svfprintf_r+0xc0>
 801b8fc:	f045 0508 	orr.w	r5, r5, #8
 801b900:	e7b5      	b.n	801b86e <_svfprintf_r+0x206>
 801b902:	bf00      	nop
 801b904:	f3af 8000 	nop.w
	...
 801b910:	080215f4 	.word	0x080215f4
 801b914:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b916:	781b      	ldrb	r3, [r3, #0]
 801b918:	2b68      	cmp	r3, #104	@ 0x68
 801b91a:	bf01      	itttt	eq
 801b91c:	9b0c      	ldreq	r3, [sp, #48]	@ 0x30
 801b91e:	3301      	addeq	r3, #1
 801b920:	930c      	streq	r3, [sp, #48]	@ 0x30
 801b922:	f445 7500 	orreq.w	r5, r5, #512	@ 0x200
 801b926:	bf18      	it	ne
 801b928:	f045 0540 	orrne.w	r5, r5, #64	@ 0x40
 801b92c:	e79f      	b.n	801b86e <_svfprintf_r+0x206>
 801b92e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b930:	781b      	ldrb	r3, [r3, #0]
 801b932:	2b6c      	cmp	r3, #108	@ 0x6c
 801b934:	d105      	bne.n	801b942 <_svfprintf_r+0x2da>
 801b936:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b938:	3301      	adds	r3, #1
 801b93a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b93c:	f045 0520 	orr.w	r5, r5, #32
 801b940:	e795      	b.n	801b86e <_svfprintf_r+0x206>
 801b942:	f045 0510 	orr.w	r5, r5, #16
 801b946:	e792      	b.n	801b86e <_svfprintf_r+0x206>
 801b948:	4632      	mov	r2, r6
 801b94a:	f852 3b04 	ldr.w	r3, [r2], #4
 801b94e:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801b952:	2300      	movs	r3, #0
 801b954:	9207      	str	r2, [sp, #28]
 801b956:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b95a:	469a      	mov	sl, r3
 801b95c:	f04f 0801 	mov.w	r8, #1
 801b960:	9310      	str	r3, [sp, #64]	@ 0x40
 801b962:	461f      	mov	r7, r3
 801b964:	9308      	str	r3, [sp, #32]
 801b966:	461e      	mov	r6, r3
 801b968:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801b96c:	e1d2      	b.n	801bd14 <_svfprintf_r+0x6ac>
 801b96e:	f045 0510 	orr.w	r5, r5, #16
 801b972:	06af      	lsls	r7, r5, #26
 801b974:	d512      	bpl.n	801b99c <_svfprintf_r+0x334>
 801b976:	3607      	adds	r6, #7
 801b978:	f026 0307 	bic.w	r3, r6, #7
 801b97c:	461a      	mov	r2, r3
 801b97e:	685f      	ldr	r7, [r3, #4]
 801b980:	f852 6b08 	ldr.w	r6, [r2], #8
 801b984:	9207      	str	r2, [sp, #28]
 801b986:	2f00      	cmp	r7, #0
 801b988:	da06      	bge.n	801b998 <_svfprintf_r+0x330>
 801b98a:	4276      	negs	r6, r6
 801b98c:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801b990:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 801b994:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b998:	2301      	movs	r3, #1
 801b99a:	e37d      	b.n	801c098 <_svfprintf_r+0xa30>
 801b99c:	4633      	mov	r3, r6
 801b99e:	06ee      	lsls	r6, r5, #27
 801b9a0:	f853 7b04 	ldr.w	r7, [r3], #4
 801b9a4:	9307      	str	r3, [sp, #28]
 801b9a6:	d502      	bpl.n	801b9ae <_svfprintf_r+0x346>
 801b9a8:	463e      	mov	r6, r7
 801b9aa:	17ff      	asrs	r7, r7, #31
 801b9ac:	e7eb      	b.n	801b986 <_svfprintf_r+0x31e>
 801b9ae:	0668      	lsls	r0, r5, #25
 801b9b0:	d503      	bpl.n	801b9ba <_svfprintf_r+0x352>
 801b9b2:	b23e      	sxth	r6, r7
 801b9b4:	f347 37c0 	sbfx	r7, r7, #15, #1
 801b9b8:	e7e5      	b.n	801b986 <_svfprintf_r+0x31e>
 801b9ba:	05a9      	lsls	r1, r5, #22
 801b9bc:	d5f4      	bpl.n	801b9a8 <_svfprintf_r+0x340>
 801b9be:	b27e      	sxtb	r6, r7
 801b9c0:	f347 17c0 	sbfx	r7, r7, #7, #1
 801b9c4:	e7df      	b.n	801b986 <_svfprintf_r+0x31e>
 801b9c6:	3607      	adds	r6, #7
 801b9c8:	f026 0307 	bic.w	r3, r6, #7
 801b9cc:	ecb3 7b02 	vldmia	r3!, {d7}
 801b9d0:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801b9d4:	9307      	str	r3, [sp, #28]
 801b9d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b9d8:	931a      	str	r3, [sp, #104]	@ 0x68
 801b9da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b9dc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801b9e0:	931b      	str	r3, [sp, #108]	@ 0x6c
 801b9e2:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801b9e6:	4b81      	ldr	r3, [pc, #516]	@ (801bbec <_svfprintf_r+0x584>)
 801b9e8:	f04f 32ff 	mov.w	r2, #4294967295
 801b9ec:	f7e5 f89e 	bl	8000b2c <__aeabi_dcmpun>
 801b9f0:	bb10      	cbnz	r0, 801ba38 <_svfprintf_r+0x3d0>
 801b9f2:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801b9f6:	4b7d      	ldr	r3, [pc, #500]	@ (801bbec <_svfprintf_r+0x584>)
 801b9f8:	f04f 32ff 	mov.w	r2, #4294967295
 801b9fc:	f7e5 f878 	bl	8000af0 <__aeabi_dcmple>
 801ba00:	b9d0      	cbnz	r0, 801ba38 <_svfprintf_r+0x3d0>
 801ba02:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801ba06:	2200      	movs	r2, #0
 801ba08:	2300      	movs	r3, #0
 801ba0a:	f7e5 f867 	bl	8000adc <__aeabi_dcmplt>
 801ba0e:	b110      	cbz	r0, 801ba16 <_svfprintf_r+0x3ae>
 801ba10:	232d      	movs	r3, #45	@ 0x2d
 801ba12:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801ba16:	4a76      	ldr	r2, [pc, #472]	@ (801bbf0 <_svfprintf_r+0x588>)
 801ba18:	4b76      	ldr	r3, [pc, #472]	@ (801bbf4 <_svfprintf_r+0x58c>)
 801ba1a:	9906      	ldr	r1, [sp, #24]
 801ba1c:	f025 0580 	bic.w	r5, r5, #128	@ 0x80
 801ba20:	2947      	cmp	r1, #71	@ 0x47
 801ba22:	bfd4      	ite	le
 801ba24:	4691      	movle	r9, r2
 801ba26:	4699      	movgt	r9, r3
 801ba28:	f04f 0a00 	mov.w	sl, #0
 801ba2c:	f04f 0803 	mov.w	r8, #3
 801ba30:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 801ba34:	f000 bfec 	b.w	801ca10 <_svfprintf_r+0x13a8>
 801ba38:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801ba3c:	4610      	mov	r0, r2
 801ba3e:	4619      	mov	r1, r3
 801ba40:	f7e5 f874 	bl	8000b2c <__aeabi_dcmpun>
 801ba44:	4682      	mov	sl, r0
 801ba46:	b140      	cbz	r0, 801ba5a <_svfprintf_r+0x3f2>
 801ba48:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ba4a:	4a6b      	ldr	r2, [pc, #428]	@ (801bbf8 <_svfprintf_r+0x590>)
 801ba4c:	2b00      	cmp	r3, #0
 801ba4e:	bfbc      	itt	lt
 801ba50:	232d      	movlt	r3, #45	@ 0x2d
 801ba52:	f88d 307b 	strblt.w	r3, [sp, #123]	@ 0x7b
 801ba56:	4b69      	ldr	r3, [pc, #420]	@ (801bbfc <_svfprintf_r+0x594>)
 801ba58:	e7df      	b.n	801ba1a <_svfprintf_r+0x3b2>
 801ba5a:	9b06      	ldr	r3, [sp, #24]
 801ba5c:	2b61      	cmp	r3, #97	@ 0x61
 801ba5e:	d025      	beq.n	801baac <_svfprintf_r+0x444>
 801ba60:	2b41      	cmp	r3, #65	@ 0x41
 801ba62:	d125      	bne.n	801bab0 <_svfprintf_r+0x448>
 801ba64:	2358      	movs	r3, #88	@ 0x58
 801ba66:	2230      	movs	r2, #48	@ 0x30
 801ba68:	f1b8 0f63 	cmp.w	r8, #99	@ 0x63
 801ba6c:	f88d 207c 	strb.w	r2, [sp, #124]	@ 0x7c
 801ba70:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801ba74:	f045 0502 	orr.w	r5, r5, #2
 801ba78:	f340 80a5 	ble.w	801bbc6 <_svfprintf_r+0x55e>
 801ba7c:	9803      	ldr	r0, [sp, #12]
 801ba7e:	f108 0101 	add.w	r1, r8, #1
 801ba82:	f7ff fbab 	bl	801b1dc <_malloc_r>
 801ba86:	4681      	mov	r9, r0
 801ba88:	2800      	cmp	r0, #0
 801ba8a:	f040 80a1 	bne.w	801bbd0 <_svfprintf_r+0x568>
 801ba8e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801ba92:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801ba96:	f8ab 300c 	strh.w	r3, [fp, #12]
 801ba9a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801ba9e:	065b      	lsls	r3, r3, #25
 801baa0:	f53f ae04 	bmi.w	801b6ac <_svfprintf_r+0x44>
 801baa4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801baa6:	b053      	add	sp, #332	@ 0x14c
 801baa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801baac:	2378      	movs	r3, #120	@ 0x78
 801baae:	e7da      	b.n	801ba66 <_svfprintf_r+0x3fe>
 801bab0:	f1b8 3fff 	cmp.w	r8, #4294967295
 801bab4:	f000 808e 	beq.w	801bbd4 <_svfprintf_r+0x56c>
 801bab8:	9b06      	ldr	r3, [sp, #24]
 801baba:	f023 0320 	bic.w	r3, r3, #32
 801babe:	2b47      	cmp	r3, #71	@ 0x47
 801bac0:	d105      	bne.n	801bace <_svfprintf_r+0x466>
 801bac2:	f1b8 0f00 	cmp.w	r8, #0
 801bac6:	d102      	bne.n	801bace <_svfprintf_r+0x466>
 801bac8:	46c2      	mov	sl, r8
 801baca:	f04f 0801 	mov.w	r8, #1
 801bace:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801bad2:	9311      	str	r3, [sp, #68]	@ 0x44
 801bad4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bad6:	2b00      	cmp	r3, #0
 801bad8:	da7f      	bge.n	801bbda <_svfprintf_r+0x572>
 801bada:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801badc:	9314      	str	r3, [sp, #80]	@ 0x50
 801bade:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bae0:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801bae4:	9315      	str	r3, [sp, #84]	@ 0x54
 801bae6:	232d      	movs	r3, #45	@ 0x2d
 801bae8:	931c      	str	r3, [sp, #112]	@ 0x70
 801baea:	9b06      	ldr	r3, [sp, #24]
 801baec:	f023 0320 	bic.w	r3, r3, #32
 801baf0:	2b41      	cmp	r3, #65	@ 0x41
 801baf2:	9308      	str	r3, [sp, #32]
 801baf4:	f040 81e6 	bne.w	801bec4 <_svfprintf_r+0x85c>
 801baf8:	a820      	add	r0, sp, #128	@ 0x80
 801bafa:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801bafe:	f001 f8e1 	bl	801ccc4 <frexp>
 801bb02:	2200      	movs	r2, #0
 801bb04:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 801bb08:	ec51 0b10 	vmov	r0, r1, d0
 801bb0c:	f7e4 fd74 	bl	80005f8 <__aeabi_dmul>
 801bb10:	4602      	mov	r2, r0
 801bb12:	460b      	mov	r3, r1
 801bb14:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bb18:	2200      	movs	r2, #0
 801bb1a:	2300      	movs	r3, #0
 801bb1c:	f7e4 ffd4 	bl	8000ac8 <__aeabi_dcmpeq>
 801bb20:	b108      	cbz	r0, 801bb26 <_svfprintf_r+0x4be>
 801bb22:	2301      	movs	r3, #1
 801bb24:	9320      	str	r3, [sp, #128]	@ 0x80
 801bb26:	4a36      	ldr	r2, [pc, #216]	@ (801bc00 <_svfprintf_r+0x598>)
 801bb28:	4b36      	ldr	r3, [pc, #216]	@ (801bc04 <_svfprintf_r+0x59c>)
 801bb2a:	9906      	ldr	r1, [sp, #24]
 801bb2c:	2961      	cmp	r1, #97	@ 0x61
 801bb2e:	bf18      	it	ne
 801bb30:	461a      	movne	r2, r3
 801bb32:	9210      	str	r2, [sp, #64]	@ 0x40
 801bb34:	f108 37ff 	add.w	r7, r8, #4294967295
 801bb38:	464e      	mov	r6, r9
 801bb3a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bb3e:	4b32      	ldr	r3, [pc, #200]	@ (801bc08 <_svfprintf_r+0x5a0>)
 801bb40:	2200      	movs	r2, #0
 801bb42:	f7e4 fd59 	bl	80005f8 <__aeabi_dmul>
 801bb46:	4602      	mov	r2, r0
 801bb48:	460b      	mov	r3, r1
 801bb4a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bb4e:	f7e5 f803 	bl	8000b58 <__aeabi_d2iz>
 801bb52:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bb54:	f7e4 fce6 	bl	8000524 <__aeabi_i2d>
 801bb58:	4602      	mov	r2, r0
 801bb5a:	460b      	mov	r3, r1
 801bb5c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bb60:	f7e4 fb92 	bl	8000288 <__aeabi_dsub>
 801bb64:	4602      	mov	r2, r0
 801bb66:	460b      	mov	r3, r1
 801bb68:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bb6c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bb6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bb70:	5c9b      	ldrb	r3, [r3, r2]
 801bb72:	f806 3b01 	strb.w	r3, [r6], #1
 801bb76:	1c7a      	adds	r2, r7, #1
 801bb78:	d006      	beq.n	801bb88 <_svfprintf_r+0x520>
 801bb7a:	1e7b      	subs	r3, r7, #1
 801bb7c:	931d      	str	r3, [sp, #116]	@ 0x74
 801bb7e:	2200      	movs	r2, #0
 801bb80:	2300      	movs	r3, #0
 801bb82:	f7e4 ffa1 	bl	8000ac8 <__aeabi_dcmpeq>
 801bb86:	b370      	cbz	r0, 801bbe6 <_svfprintf_r+0x57e>
 801bb88:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bb8c:	4b1f      	ldr	r3, [pc, #124]	@ (801bc0c <_svfprintf_r+0x5a4>)
 801bb8e:	2200      	movs	r2, #0
 801bb90:	f7e4 ffc2 	bl	8000b18 <__aeabi_dcmpgt>
 801bb94:	2800      	cmp	r0, #0
 801bb96:	d13b      	bne.n	801bc10 <_svfprintf_r+0x5a8>
 801bb98:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bb9c:	4b1b      	ldr	r3, [pc, #108]	@ (801bc0c <_svfprintf_r+0x5a4>)
 801bb9e:	2200      	movs	r2, #0
 801bba0:	f7e4 ff92 	bl	8000ac8 <__aeabi_dcmpeq>
 801bba4:	b110      	cbz	r0, 801bbac <_svfprintf_r+0x544>
 801bba6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bba8:	07db      	lsls	r3, r3, #31
 801bbaa:	d431      	bmi.n	801bc10 <_svfprintf_r+0x5a8>
 801bbac:	4633      	mov	r3, r6
 801bbae:	19f1      	adds	r1, r6, r7
 801bbb0:	2030      	movs	r0, #48	@ 0x30
 801bbb2:	1aca      	subs	r2, r1, r3
 801bbb4:	2a00      	cmp	r2, #0
 801bbb6:	f280 8182 	bge.w	801bebe <_svfprintf_r+0x856>
 801bbba:	1c7b      	adds	r3, r7, #1
 801bbbc:	3701      	adds	r7, #1
 801bbbe:	bfb8      	it	lt
 801bbc0:	2300      	movlt	r3, #0
 801bbc2:	441e      	add	r6, r3
 801bbc4:	e038      	b.n	801bc38 <_svfprintf_r+0x5d0>
 801bbc6:	f04f 0a00 	mov.w	sl, #0
 801bbca:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801bbce:	e77e      	b.n	801bace <_svfprintf_r+0x466>
 801bbd0:	4682      	mov	sl, r0
 801bbd2:	e77c      	b.n	801bace <_svfprintf_r+0x466>
 801bbd4:	f04f 0806 	mov.w	r8, #6
 801bbd8:	e779      	b.n	801bace <_svfprintf_r+0x466>
 801bbda:	ed9d 7b0a 	vldr	d7, [sp, #40]	@ 0x28
 801bbde:	2300      	movs	r3, #0
 801bbe0:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
 801bbe4:	e780      	b.n	801bae8 <_svfprintf_r+0x480>
 801bbe6:	9f1d      	ldr	r7, [sp, #116]	@ 0x74
 801bbe8:	e7a7      	b.n	801bb3a <_svfprintf_r+0x4d2>
 801bbea:	bf00      	nop
 801bbec:	7fefffff 	.word	0x7fefffff
 801bbf0:	080215e4 	.word	0x080215e4
 801bbf4:	080215e8 	.word	0x080215e8
 801bbf8:	080215ec 	.word	0x080215ec
 801bbfc:	080215f0 	.word	0x080215f0
 801bc00:	080215f4 	.word	0x080215f4
 801bc04:	08021605 	.word	0x08021605
 801bc08:	40300000 	.word	0x40300000
 801bc0c:	3fe00000 	.word	0x3fe00000
 801bc10:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bc12:	9624      	str	r6, [sp, #144]	@ 0x90
 801bc14:	7bd9      	ldrb	r1, [r3, #15]
 801bc16:	2030      	movs	r0, #48	@ 0x30
 801bc18:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801bc1a:	1e53      	subs	r3, r2, #1
 801bc1c:	9324      	str	r3, [sp, #144]	@ 0x90
 801bc1e:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 801bc22:	428b      	cmp	r3, r1
 801bc24:	f000 8148 	beq.w	801beb8 <_svfprintf_r+0x850>
 801bc28:	2b39      	cmp	r3, #57	@ 0x39
 801bc2a:	bf0b      	itete	eq
 801bc2c:	9b10      	ldreq	r3, [sp, #64]	@ 0x40
 801bc2e:	3301      	addne	r3, #1
 801bc30:	7a9b      	ldrbeq	r3, [r3, #10]
 801bc32:	b2db      	uxtbne	r3, r3
 801bc34:	f802 3c01 	strb.w	r3, [r2, #-1]
 801bc38:	eba6 0309 	sub.w	r3, r6, r9
 801bc3c:	9304      	str	r3, [sp, #16]
 801bc3e:	9b08      	ldr	r3, [sp, #32]
 801bc40:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801bc42:	2b47      	cmp	r3, #71	@ 0x47
 801bc44:	f040 8187 	bne.w	801bf56 <_svfprintf_r+0x8ee>
 801bc48:	1cf1      	adds	r1, r6, #3
 801bc4a:	db02      	blt.n	801bc52 <_svfprintf_r+0x5ea>
 801bc4c:	4546      	cmp	r6, r8
 801bc4e:	f340 81a5 	ble.w	801bf9c <_svfprintf_r+0x934>
 801bc52:	9b06      	ldr	r3, [sp, #24]
 801bc54:	3b02      	subs	r3, #2
 801bc56:	9306      	str	r3, [sp, #24]
 801bc58:	9906      	ldr	r1, [sp, #24]
 801bc5a:	f89d 2018 	ldrb.w	r2, [sp, #24]
 801bc5e:	f021 0120 	bic.w	r1, r1, #32
 801bc62:	2941      	cmp	r1, #65	@ 0x41
 801bc64:	bf08      	it	eq
 801bc66:	320f      	addeq	r2, #15
 801bc68:	f106 33ff 	add.w	r3, r6, #4294967295
 801bc6c:	bf06      	itte	eq
 801bc6e:	b2d2      	uxtbeq	r2, r2
 801bc70:	2101      	moveq	r1, #1
 801bc72:	2100      	movne	r1, #0
 801bc74:	2b00      	cmp	r3, #0
 801bc76:	9320      	str	r3, [sp, #128]	@ 0x80
 801bc78:	bfb8      	it	lt
 801bc7a:	f1c6 0301 	rsblt	r3, r6, #1
 801bc7e:	f88d 2088 	strb.w	r2, [sp, #136]	@ 0x88
 801bc82:	bfb4      	ite	lt
 801bc84:	222d      	movlt	r2, #45	@ 0x2d
 801bc86:	222b      	movge	r2, #43	@ 0x2b
 801bc88:	2b09      	cmp	r3, #9
 801bc8a:	f88d 2089 	strb.w	r2, [sp, #137]	@ 0x89
 801bc8e:	f340 8178 	ble.w	801bf82 <_svfprintf_r+0x91a>
 801bc92:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801bc96:	270a      	movs	r7, #10
 801bc98:	4602      	mov	r2, r0
 801bc9a:	fbb3 f6f7 	udiv	r6, r3, r7
 801bc9e:	fb07 3116 	mls	r1, r7, r6, r3
 801bca2:	3130      	adds	r1, #48	@ 0x30
 801bca4:	f802 1c01 	strb.w	r1, [r2, #-1]
 801bca8:	4619      	mov	r1, r3
 801bcaa:	2963      	cmp	r1, #99	@ 0x63
 801bcac:	f100 30ff 	add.w	r0, r0, #4294967295
 801bcb0:	4633      	mov	r3, r6
 801bcb2:	dcf1      	bgt.n	801bc98 <_svfprintf_r+0x630>
 801bcb4:	3330      	adds	r3, #48	@ 0x30
 801bcb6:	1e91      	subs	r1, r2, #2
 801bcb8:	f800 3c01 	strb.w	r3, [r0, #-1]
 801bcbc:	f10d 0689 	add.w	r6, sp, #137	@ 0x89
 801bcc0:	460b      	mov	r3, r1
 801bcc2:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801bcc6:	4283      	cmp	r3, r0
 801bcc8:	f0c0 8156 	bcc.w	801bf78 <_svfprintf_r+0x910>
 801bccc:	f10d 0399 	add.w	r3, sp, #153	@ 0x99
 801bcd0:	1a9b      	subs	r3, r3, r2
 801bcd2:	4281      	cmp	r1, r0
 801bcd4:	bf88      	it	hi
 801bcd6:	2300      	movhi	r3, #0
 801bcd8:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801bcdc:	441a      	add	r2, r3
 801bcde:	ab22      	add	r3, sp, #136	@ 0x88
 801bce0:	1ad3      	subs	r3, r2, r3
 801bce2:	9a04      	ldr	r2, [sp, #16]
 801bce4:	9318      	str	r3, [sp, #96]	@ 0x60
 801bce6:	2a01      	cmp	r2, #1
 801bce8:	eb03 0802 	add.w	r8, r3, r2
 801bcec:	dc01      	bgt.n	801bcf2 <_svfprintf_r+0x68a>
 801bcee:	07ea      	lsls	r2, r5, #31
 801bcf0:	d501      	bpl.n	801bcf6 <_svfprintf_r+0x68e>
 801bcf2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bcf4:	4498      	add	r8, r3
 801bcf6:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801bcfa:	2700      	movs	r7, #0
 801bcfc:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801bd00:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd02:	9708      	str	r7, [sp, #32]
 801bd04:	463e      	mov	r6, r7
 801bd06:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bd08:	2b00      	cmp	r3, #0
 801bd0a:	f040 818f 	bne.w	801c02c <_svfprintf_r+0x9c4>
 801bd0e:	2300      	movs	r3, #0
 801bd10:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bd12:	9310      	str	r3, [sp, #64]	@ 0x40
 801bd14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bd16:	4543      	cmp	r3, r8
 801bd18:	bfb8      	it	lt
 801bd1a:	4643      	movlt	r3, r8
 801bd1c:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd1e:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801bd22:	b113      	cbz	r3, 801bd2a <_svfprintf_r+0x6c2>
 801bd24:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bd26:	3301      	adds	r3, #1
 801bd28:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd2a:	f015 0302 	ands.w	r3, r5, #2
 801bd2e:	931c      	str	r3, [sp, #112]	@ 0x70
 801bd30:	bf1e      	ittt	ne
 801bd32:	9b11      	ldrne	r3, [sp, #68]	@ 0x44
 801bd34:	3302      	addne	r3, #2
 801bd36:	9311      	strne	r3, [sp, #68]	@ 0x44
 801bd38:	f015 0384 	ands.w	r3, r5, #132	@ 0x84
 801bd3c:	931d      	str	r3, [sp, #116]	@ 0x74
 801bd3e:	d122      	bne.n	801bd86 <_svfprintf_r+0x71e>
 801bd40:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bd42:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bd44:	1a9b      	subs	r3, r3, r2
 801bd46:	2b00      	cmp	r3, #0
 801bd48:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bd4a:	dd1c      	ble.n	801bd86 <_svfprintf_r+0x71e>
 801bd4c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bd4e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801bd52:	2810      	cmp	r0, #16
 801bd54:	489e      	ldr	r0, [pc, #632]	@ (801bfd0 <_svfprintf_r+0x968>)
 801bd56:	6020      	str	r0, [r4, #0]
 801bd58:	f102 0201 	add.w	r2, r2, #1
 801bd5c:	f104 0108 	add.w	r1, r4, #8
 801bd60:	f300 8298 	bgt.w	801c294 <_svfprintf_r+0xc2c>
 801bd64:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bd66:	6060      	str	r0, [r4, #4]
 801bd68:	4403      	add	r3, r0
 801bd6a:	2a07      	cmp	r2, #7
 801bd6c:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801bd70:	f340 82a5 	ble.w	801c2be <_svfprintf_r+0xc56>
 801bd74:	9803      	ldr	r0, [sp, #12]
 801bd76:	aa26      	add	r2, sp, #152	@ 0x98
 801bd78:	4659      	mov	r1, fp
 801bd7a:	f002 fb48 	bl	801e40e <__ssprint_r>
 801bd7e:	2800      	cmp	r0, #0
 801bd80:	f040 85ed 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801bd84:	ac29      	add	r4, sp, #164	@ 0xa4
 801bd86:	f89d 207b 	ldrb.w	r2, [sp, #123]	@ 0x7b
 801bd8a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bd8c:	b16a      	cbz	r2, 801bdaa <_svfprintf_r+0x742>
 801bd8e:	f10d 027b 	add.w	r2, sp, #123	@ 0x7b
 801bd92:	6022      	str	r2, [r4, #0]
 801bd94:	2201      	movs	r2, #1
 801bd96:	4413      	add	r3, r2
 801bd98:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bd9a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bd9c:	6062      	str	r2, [r4, #4]
 801bd9e:	4413      	add	r3, r2
 801bda0:	2b07      	cmp	r3, #7
 801bda2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bda4:	f300 828d 	bgt.w	801c2c2 <_svfprintf_r+0xc5a>
 801bda8:	3408      	adds	r4, #8
 801bdaa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801bdac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bdae:	b162      	cbz	r2, 801bdca <_svfprintf_r+0x762>
 801bdb0:	aa1f      	add	r2, sp, #124	@ 0x7c
 801bdb2:	6022      	str	r2, [r4, #0]
 801bdb4:	2202      	movs	r2, #2
 801bdb6:	4413      	add	r3, r2
 801bdb8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bdba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bdbc:	6062      	str	r2, [r4, #4]
 801bdbe:	3301      	adds	r3, #1
 801bdc0:	2b07      	cmp	r3, #7
 801bdc2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bdc4:	f300 8287 	bgt.w	801c2d6 <_svfprintf_r+0xc6e>
 801bdc8:	3408      	adds	r4, #8
 801bdca:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801bdcc:	2b80      	cmp	r3, #128	@ 0x80
 801bdce:	d122      	bne.n	801be16 <_svfprintf_r+0x7ae>
 801bdd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bdd2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bdd4:	1a9b      	subs	r3, r3, r2
 801bdd6:	2b00      	cmp	r3, #0
 801bdd8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bdda:	dd1c      	ble.n	801be16 <_svfprintf_r+0x7ae>
 801bddc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bdde:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801bde2:	2810      	cmp	r0, #16
 801bde4:	487b      	ldr	r0, [pc, #492]	@ (801bfd4 <_svfprintf_r+0x96c>)
 801bde6:	6020      	str	r0, [r4, #0]
 801bde8:	f102 0201 	add.w	r2, r2, #1
 801bdec:	f104 0108 	add.w	r1, r4, #8
 801bdf0:	f300 827b 	bgt.w	801c2ea <_svfprintf_r+0xc82>
 801bdf4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bdf6:	6060      	str	r0, [r4, #4]
 801bdf8:	4403      	add	r3, r0
 801bdfa:	2a07      	cmp	r2, #7
 801bdfc:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801be00:	f340 8288 	ble.w	801c314 <_svfprintf_r+0xcac>
 801be04:	9803      	ldr	r0, [sp, #12]
 801be06:	aa26      	add	r2, sp, #152	@ 0x98
 801be08:	4659      	mov	r1, fp
 801be0a:	f002 fb00 	bl	801e40e <__ssprint_r>
 801be0e:	2800      	cmp	r0, #0
 801be10:	f040 85a5 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801be14:	ac29      	add	r4, sp, #164	@ 0xa4
 801be16:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801be18:	eba3 0308 	sub.w	r3, r3, r8
 801be1c:	2b00      	cmp	r3, #0
 801be1e:	9310      	str	r3, [sp, #64]	@ 0x40
 801be20:	dd1c      	ble.n	801be5c <_svfprintf_r+0x7f4>
 801be22:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801be24:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801be28:	2810      	cmp	r0, #16
 801be2a:	486a      	ldr	r0, [pc, #424]	@ (801bfd4 <_svfprintf_r+0x96c>)
 801be2c:	6020      	str	r0, [r4, #0]
 801be2e:	f102 0201 	add.w	r2, r2, #1
 801be32:	f104 0108 	add.w	r1, r4, #8
 801be36:	f300 826f 	bgt.w	801c318 <_svfprintf_r+0xcb0>
 801be3a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801be3c:	6060      	str	r0, [r4, #4]
 801be3e:	4403      	add	r3, r0
 801be40:	2a07      	cmp	r2, #7
 801be42:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801be46:	f340 827c 	ble.w	801c342 <_svfprintf_r+0xcda>
 801be4a:	9803      	ldr	r0, [sp, #12]
 801be4c:	aa26      	add	r2, sp, #152	@ 0x98
 801be4e:	4659      	mov	r1, fp
 801be50:	f002 fadd 	bl	801e40e <__ssprint_r>
 801be54:	2800      	cmp	r0, #0
 801be56:	f040 8582 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801be5a:	ac29      	add	r4, sp, #164	@ 0xa4
 801be5c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801be5e:	9310      	str	r3, [sp, #64]	@ 0x40
 801be60:	05ea      	lsls	r2, r5, #23
 801be62:	f100 8275 	bmi.w	801c350 <_svfprintf_r+0xce8>
 801be66:	4443      	add	r3, r8
 801be68:	9328      	str	r3, [sp, #160]	@ 0xa0
 801be6a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801be6c:	3301      	adds	r3, #1
 801be6e:	2b07      	cmp	r3, #7
 801be70:	e9c4 9800 	strd	r9, r8, [r4]
 801be74:	9327      	str	r3, [sp, #156]	@ 0x9c
 801be76:	f300 82b1 	bgt.w	801c3dc <_svfprintf_r+0xd74>
 801be7a:	3408      	adds	r4, #8
 801be7c:	076a      	lsls	r2, r5, #29
 801be7e:	f100 8550 	bmi.w	801c922 <_svfprintf_r+0x12ba>
 801be82:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 801be86:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801be88:	428a      	cmp	r2, r1
 801be8a:	bfac      	ite	ge
 801be8c:	189b      	addge	r3, r3, r2
 801be8e:	185b      	addlt	r3, r3, r1
 801be90:	930f      	str	r3, [sp, #60]	@ 0x3c
 801be92:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801be94:	b13b      	cbz	r3, 801bea6 <_svfprintf_r+0x83e>
 801be96:	9803      	ldr	r0, [sp, #12]
 801be98:	aa26      	add	r2, sp, #152	@ 0x98
 801be9a:	4659      	mov	r1, fp
 801be9c:	f002 fab7 	bl	801e40e <__ssprint_r>
 801bea0:	2800      	cmp	r0, #0
 801bea2:	f040 855c 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801bea6:	2300      	movs	r3, #0
 801bea8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801beaa:	f1ba 0f00 	cmp.w	sl, #0
 801beae:	f040 8572 	bne.w	801c996 <_svfprintf_r+0x132e>
 801beb2:	9e07      	ldr	r6, [sp, #28]
 801beb4:	ac29      	add	r4, sp, #164	@ 0xa4
 801beb6:	e0c6      	b.n	801c046 <_svfprintf_r+0x9de>
 801beb8:	f802 0c01 	strb.w	r0, [r2, #-1]
 801bebc:	e6ac      	b.n	801bc18 <_svfprintf_r+0x5b0>
 801bebe:	f803 0b01 	strb.w	r0, [r3], #1
 801bec2:	e676      	b.n	801bbb2 <_svfprintf_r+0x54a>
 801bec4:	9b08      	ldr	r3, [sp, #32]
 801bec6:	2b46      	cmp	r3, #70	@ 0x46
 801bec8:	d005      	beq.n	801bed6 <_svfprintf_r+0x86e>
 801beca:	2b45      	cmp	r3, #69	@ 0x45
 801becc:	d11a      	bne.n	801bf04 <_svfprintf_r+0x89c>
 801bece:	f108 0601 	add.w	r6, r8, #1
 801bed2:	2102      	movs	r1, #2
 801bed4:	e001      	b.n	801beda <_svfprintf_r+0x872>
 801bed6:	4646      	mov	r6, r8
 801bed8:	2103      	movs	r1, #3
 801beda:	ab24      	add	r3, sp, #144	@ 0x90
 801bedc:	9301      	str	r3, [sp, #4]
 801bede:	ab21      	add	r3, sp, #132	@ 0x84
 801bee0:	9300      	str	r3, [sp, #0]
 801bee2:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801bee6:	ab20      	add	r3, sp, #128	@ 0x80
 801bee8:	9803      	ldr	r0, [sp, #12]
 801beea:	4632      	mov	r2, r6
 801beec:	f000 ffe8 	bl	801cec0 <_dtoa_r>
 801bef0:	9b08      	ldr	r3, [sp, #32]
 801bef2:	2b47      	cmp	r3, #71	@ 0x47
 801bef4:	4681      	mov	r9, r0
 801bef6:	d119      	bne.n	801bf2c <_svfprintf_r+0x8c4>
 801bef8:	07e8      	lsls	r0, r5, #31
 801befa:	d405      	bmi.n	801bf08 <_svfprintf_r+0x8a0>
 801befc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801befe:	eba3 0309 	sub.w	r3, r3, r9
 801bf02:	e69b      	b.n	801bc3c <_svfprintf_r+0x5d4>
 801bf04:	4646      	mov	r6, r8
 801bf06:	e7e4      	b.n	801bed2 <_svfprintf_r+0x86a>
 801bf08:	eb09 0706 	add.w	r7, r9, r6
 801bf0c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801bf10:	2200      	movs	r2, #0
 801bf12:	2300      	movs	r3, #0
 801bf14:	f7e4 fdd8 	bl	8000ac8 <__aeabi_dcmpeq>
 801bf18:	b100      	cbz	r0, 801bf1c <_svfprintf_r+0x8b4>
 801bf1a:	9724      	str	r7, [sp, #144]	@ 0x90
 801bf1c:	2230      	movs	r2, #48	@ 0x30
 801bf1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bf20:	429f      	cmp	r7, r3
 801bf22:	d9eb      	bls.n	801befc <_svfprintf_r+0x894>
 801bf24:	1c59      	adds	r1, r3, #1
 801bf26:	9124      	str	r1, [sp, #144]	@ 0x90
 801bf28:	701a      	strb	r2, [r3, #0]
 801bf2a:	e7f8      	b.n	801bf1e <_svfprintf_r+0x8b6>
 801bf2c:	9b08      	ldr	r3, [sp, #32]
 801bf2e:	2b46      	cmp	r3, #70	@ 0x46
 801bf30:	eb00 0706 	add.w	r7, r0, r6
 801bf34:	d1ea      	bne.n	801bf0c <_svfprintf_r+0x8a4>
 801bf36:	7803      	ldrb	r3, [r0, #0]
 801bf38:	2b30      	cmp	r3, #48	@ 0x30
 801bf3a:	d109      	bne.n	801bf50 <_svfprintf_r+0x8e8>
 801bf3c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801bf40:	2200      	movs	r2, #0
 801bf42:	2300      	movs	r3, #0
 801bf44:	f7e4 fdc0 	bl	8000ac8 <__aeabi_dcmpeq>
 801bf48:	b910      	cbnz	r0, 801bf50 <_svfprintf_r+0x8e8>
 801bf4a:	f1c6 0601 	rsb	r6, r6, #1
 801bf4e:	9620      	str	r6, [sp, #128]	@ 0x80
 801bf50:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bf52:	441f      	add	r7, r3
 801bf54:	e7da      	b.n	801bf0c <_svfprintf_r+0x8a4>
 801bf56:	9b08      	ldr	r3, [sp, #32]
 801bf58:	2b46      	cmp	r3, #70	@ 0x46
 801bf5a:	f47f ae7d 	bne.w	801bc58 <_svfprintf_r+0x5f0>
 801bf5e:	f005 0301 	and.w	r3, r5, #1
 801bf62:	2e00      	cmp	r6, #0
 801bf64:	ea43 0308 	orr.w	r3, r3, r8
 801bf68:	dd25      	ble.n	801bfb6 <_svfprintf_r+0x94e>
 801bf6a:	b37b      	cbz	r3, 801bfcc <_svfprintf_r+0x964>
 801bf6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bf6e:	18f3      	adds	r3, r6, r3
 801bf70:	4498      	add	r8, r3
 801bf72:	2366      	movs	r3, #102	@ 0x66
 801bf74:	9306      	str	r3, [sp, #24]
 801bf76:	e033      	b.n	801bfe0 <_svfprintf_r+0x978>
 801bf78:	f813 7b01 	ldrb.w	r7, [r3], #1
 801bf7c:	f806 7f01 	strb.w	r7, [r6, #1]!
 801bf80:	e6a1      	b.n	801bcc6 <_svfprintf_r+0x65e>
 801bf82:	b941      	cbnz	r1, 801bf96 <_svfprintf_r+0x92e>
 801bf84:	2230      	movs	r2, #48	@ 0x30
 801bf86:	f88d 208a 	strb.w	r2, [sp, #138]	@ 0x8a
 801bf8a:	f10d 028b 	add.w	r2, sp, #139	@ 0x8b
 801bf8e:	3330      	adds	r3, #48	@ 0x30
 801bf90:	f802 3b01 	strb.w	r3, [r2], #1
 801bf94:	e6a3      	b.n	801bcde <_svfprintf_r+0x676>
 801bf96:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801bf9a:	e7f8      	b.n	801bf8e <_svfprintf_r+0x926>
 801bf9c:	9b04      	ldr	r3, [sp, #16]
 801bf9e:	429e      	cmp	r6, r3
 801bfa0:	da0d      	bge.n	801bfbe <_svfprintf_r+0x956>
 801bfa2:	9b04      	ldr	r3, [sp, #16]
 801bfa4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801bfa6:	2e00      	cmp	r6, #0
 801bfa8:	eb03 0802 	add.w	r8, r3, r2
 801bfac:	dc0c      	bgt.n	801bfc8 <_svfprintf_r+0x960>
 801bfae:	f1c6 0301 	rsb	r3, r6, #1
 801bfb2:	4498      	add	r8, r3
 801bfb4:	e008      	b.n	801bfc8 <_svfprintf_r+0x960>
 801bfb6:	b17b      	cbz	r3, 801bfd8 <_svfprintf_r+0x970>
 801bfb8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bfba:	3301      	adds	r3, #1
 801bfbc:	e7d8      	b.n	801bf70 <_svfprintf_r+0x908>
 801bfbe:	07eb      	lsls	r3, r5, #31
 801bfc0:	d521      	bpl.n	801c006 <_svfprintf_r+0x99e>
 801bfc2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bfc4:	eb06 0803 	add.w	r8, r6, r3
 801bfc8:	2367      	movs	r3, #103	@ 0x67
 801bfca:	e7d3      	b.n	801bf74 <_svfprintf_r+0x90c>
 801bfcc:	46b0      	mov	r8, r6
 801bfce:	e7d0      	b.n	801bf72 <_svfprintf_r+0x90a>
 801bfd0:	08021628 	.word	0x08021628
 801bfd4:	08021618 	.word	0x08021618
 801bfd8:	2366      	movs	r3, #102	@ 0x66
 801bfda:	9306      	str	r3, [sp, #24]
 801bfdc:	f04f 0801 	mov.w	r8, #1
 801bfe0:	f415 6380 	ands.w	r3, r5, #1024	@ 0x400
 801bfe4:	9308      	str	r3, [sp, #32]
 801bfe6:	d01f      	beq.n	801c028 <_svfprintf_r+0x9c0>
 801bfe8:	2700      	movs	r7, #0
 801bfea:	2e00      	cmp	r6, #0
 801bfec:	9708      	str	r7, [sp, #32]
 801bfee:	f77f ae8a 	ble.w	801bd06 <_svfprintf_r+0x69e>
 801bff2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bff4:	781b      	ldrb	r3, [r3, #0]
 801bff6:	2bff      	cmp	r3, #255	@ 0xff
 801bff8:	d107      	bne.n	801c00a <_svfprintf_r+0x9a2>
 801bffa:	9b08      	ldr	r3, [sp, #32]
 801bffc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bffe:	443b      	add	r3, r7
 801c000:	fb02 8803 	mla	r8, r2, r3, r8
 801c004:	e67f      	b.n	801bd06 <_svfprintf_r+0x69e>
 801c006:	46b0      	mov	r8, r6
 801c008:	e7de      	b.n	801bfc8 <_svfprintf_r+0x960>
 801c00a:	42b3      	cmp	r3, r6
 801c00c:	daf5      	bge.n	801bffa <_svfprintf_r+0x992>
 801c00e:	1af6      	subs	r6, r6, r3
 801c010:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c012:	785b      	ldrb	r3, [r3, #1]
 801c014:	b133      	cbz	r3, 801c024 <_svfprintf_r+0x9bc>
 801c016:	9b08      	ldr	r3, [sp, #32]
 801c018:	3301      	adds	r3, #1
 801c01a:	9308      	str	r3, [sp, #32]
 801c01c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c01e:	3301      	adds	r3, #1
 801c020:	9309      	str	r3, [sp, #36]	@ 0x24
 801c022:	e7e6      	b.n	801bff2 <_svfprintf_r+0x98a>
 801c024:	3701      	adds	r7, #1
 801c026:	e7e4      	b.n	801bff2 <_svfprintf_r+0x98a>
 801c028:	9f08      	ldr	r7, [sp, #32]
 801c02a:	e66c      	b.n	801bd06 <_svfprintf_r+0x69e>
 801c02c:	232d      	movs	r3, #45	@ 0x2d
 801c02e:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801c032:	e66c      	b.n	801bd0e <_svfprintf_r+0x6a6>
 801c034:	06af      	lsls	r7, r5, #26
 801c036:	d50a      	bpl.n	801c04e <_svfprintf_r+0x9e6>
 801c038:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c03a:	6833      	ldr	r3, [r6, #0]
 801c03c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c03e:	17d2      	asrs	r2, r2, #31
 801c040:	e9c3 1200 	strd	r1, r2, [r3]
 801c044:	3604      	adds	r6, #4
 801c046:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c04a:	f7ff bb46 	b.w	801b6da <_svfprintf_r+0x72>
 801c04e:	06e8      	lsls	r0, r5, #27
 801c050:	d503      	bpl.n	801c05a <_svfprintf_r+0x9f2>
 801c052:	6833      	ldr	r3, [r6, #0]
 801c054:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c056:	601a      	str	r2, [r3, #0]
 801c058:	e7f4      	b.n	801c044 <_svfprintf_r+0x9dc>
 801c05a:	0669      	lsls	r1, r5, #25
 801c05c:	d503      	bpl.n	801c066 <_svfprintf_r+0x9fe>
 801c05e:	6833      	ldr	r3, [r6, #0]
 801c060:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c062:	801a      	strh	r2, [r3, #0]
 801c064:	e7ee      	b.n	801c044 <_svfprintf_r+0x9dc>
 801c066:	05aa      	lsls	r2, r5, #22
 801c068:	d5f3      	bpl.n	801c052 <_svfprintf_r+0x9ea>
 801c06a:	6833      	ldr	r3, [r6, #0]
 801c06c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c06e:	701a      	strb	r2, [r3, #0]
 801c070:	e7e8      	b.n	801c044 <_svfprintf_r+0x9dc>
 801c072:	f045 0510 	orr.w	r5, r5, #16
 801c076:	f015 0320 	ands.w	r3, r5, #32
 801c07a:	d020      	beq.n	801c0be <_svfprintf_r+0xa56>
 801c07c:	3607      	adds	r6, #7
 801c07e:	f026 0307 	bic.w	r3, r6, #7
 801c082:	461a      	mov	r2, r3
 801c084:	685f      	ldr	r7, [r3, #4]
 801c086:	f852 6b08 	ldr.w	r6, [r2], #8
 801c08a:	9207      	str	r2, [sp, #28]
 801c08c:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801c090:	2300      	movs	r3, #0
 801c092:	2200      	movs	r2, #0
 801c094:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801c098:	f1b8 3fff 	cmp.w	r8, #4294967295
 801c09c:	f000 848c 	beq.w	801c9b8 <_svfprintf_r+0x1350>
 801c0a0:	f025 0280 	bic.w	r2, r5, #128	@ 0x80
 801c0a4:	9208      	str	r2, [sp, #32]
 801c0a6:	ea56 0207 	orrs.w	r2, r6, r7
 801c0aa:	f040 848a 	bne.w	801c9c2 <_svfprintf_r+0x135a>
 801c0ae:	f1b8 0f00 	cmp.w	r8, #0
 801c0b2:	f000 80db 	beq.w	801c26c <_svfprintf_r+0xc04>
 801c0b6:	2b01      	cmp	r3, #1
 801c0b8:	f040 8486 	bne.w	801c9c8 <_svfprintf_r+0x1360>
 801c0bc:	e083      	b.n	801c1c6 <_svfprintf_r+0xb5e>
 801c0be:	4632      	mov	r2, r6
 801c0c0:	f015 0710 	ands.w	r7, r5, #16
 801c0c4:	f852 6b04 	ldr.w	r6, [r2], #4
 801c0c8:	9207      	str	r2, [sp, #28]
 801c0ca:	d001      	beq.n	801c0d0 <_svfprintf_r+0xa68>
 801c0cc:	461f      	mov	r7, r3
 801c0ce:	e7dd      	b.n	801c08c <_svfprintf_r+0xa24>
 801c0d0:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c0d4:	d001      	beq.n	801c0da <_svfprintf_r+0xa72>
 801c0d6:	b2b6      	uxth	r6, r6
 801c0d8:	e7d8      	b.n	801c08c <_svfprintf_r+0xa24>
 801c0da:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c0de:	d0d5      	beq.n	801c08c <_svfprintf_r+0xa24>
 801c0e0:	b2f6      	uxtb	r6, r6
 801c0e2:	e7f3      	b.n	801c0cc <_svfprintf_r+0xa64>
 801c0e4:	4633      	mov	r3, r6
 801c0e6:	2278      	movs	r2, #120	@ 0x78
 801c0e8:	f853 6b04 	ldr.w	r6, [r3], #4
 801c0ec:	9307      	str	r3, [sp, #28]
 801c0ee:	f647 0330 	movw	r3, #30768	@ 0x7830
 801c0f2:	f8ad 307c 	strh.w	r3, [sp, #124]	@ 0x7c
 801c0f6:	4b94      	ldr	r3, [pc, #592]	@ (801c348 <_svfprintf_r+0xce0>)
 801c0f8:	9319      	str	r3, [sp, #100]	@ 0x64
 801c0fa:	2700      	movs	r7, #0
 801c0fc:	f045 0502 	orr.w	r5, r5, #2
 801c100:	2302      	movs	r3, #2
 801c102:	9206      	str	r2, [sp, #24]
 801c104:	e7c5      	b.n	801c092 <_svfprintf_r+0xa2a>
 801c106:	4633      	mov	r3, r6
 801c108:	f1b8 3fff 	cmp.w	r8, #4294967295
 801c10c:	f853 9b04 	ldr.w	r9, [r3], #4
 801c110:	9307      	str	r3, [sp, #28]
 801c112:	f04f 0600 	mov.w	r6, #0
 801c116:	f88d 607b 	strb.w	r6, [sp, #123]	@ 0x7b
 801c11a:	d00f      	beq.n	801c13c <_svfprintf_r+0xad4>
 801c11c:	4642      	mov	r2, r8
 801c11e:	4631      	mov	r1, r6
 801c120:	4648      	mov	r0, r9
 801c122:	f7e4 f85d 	bl	80001e0 <memchr>
 801c126:	4682      	mov	sl, r0
 801c128:	2800      	cmp	r0, #0
 801c12a:	f43f ac81 	beq.w	801ba30 <_svfprintf_r+0x3c8>
 801c12e:	eba0 0809 	sub.w	r8, r0, r9
 801c132:	46b2      	mov	sl, r6
 801c134:	9610      	str	r6, [sp, #64]	@ 0x40
 801c136:	4637      	mov	r7, r6
 801c138:	9608      	str	r6, [sp, #32]
 801c13a:	e5eb      	b.n	801bd14 <_svfprintf_r+0x6ac>
 801c13c:	4648      	mov	r0, r9
 801c13e:	f7e4 f847 	bl	80001d0 <strlen>
 801c142:	46b2      	mov	sl, r6
 801c144:	4680      	mov	r8, r0
 801c146:	e473      	b.n	801ba30 <_svfprintf_r+0x3c8>
 801c148:	f045 0510 	orr.w	r5, r5, #16
 801c14c:	f015 0320 	ands.w	r3, r5, #32
 801c150:	d009      	beq.n	801c166 <_svfprintf_r+0xafe>
 801c152:	3607      	adds	r6, #7
 801c154:	f026 0307 	bic.w	r3, r6, #7
 801c158:	461a      	mov	r2, r3
 801c15a:	685f      	ldr	r7, [r3, #4]
 801c15c:	f852 6b08 	ldr.w	r6, [r2], #8
 801c160:	9207      	str	r2, [sp, #28]
 801c162:	2301      	movs	r3, #1
 801c164:	e795      	b.n	801c092 <_svfprintf_r+0xa2a>
 801c166:	4632      	mov	r2, r6
 801c168:	f015 0710 	ands.w	r7, r5, #16
 801c16c:	f852 6b04 	ldr.w	r6, [r2], #4
 801c170:	9207      	str	r2, [sp, #28]
 801c172:	d001      	beq.n	801c178 <_svfprintf_r+0xb10>
 801c174:	461f      	mov	r7, r3
 801c176:	e7f4      	b.n	801c162 <_svfprintf_r+0xafa>
 801c178:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c17c:	d001      	beq.n	801c182 <_svfprintf_r+0xb1a>
 801c17e:	b2b6      	uxth	r6, r6
 801c180:	e7ef      	b.n	801c162 <_svfprintf_r+0xafa>
 801c182:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c186:	d0ec      	beq.n	801c162 <_svfprintf_r+0xafa>
 801c188:	b2f6      	uxtb	r6, r6
 801c18a:	e7f3      	b.n	801c174 <_svfprintf_r+0xb0c>
 801c18c:	4b6f      	ldr	r3, [pc, #444]	@ (801c34c <_svfprintf_r+0xce4>)
 801c18e:	f7ff bb39 	b.w	801b804 <_svfprintf_r+0x19c>
 801c192:	4632      	mov	r2, r6
 801c194:	f015 0710 	ands.w	r7, r5, #16
 801c198:	f852 6b04 	ldr.w	r6, [r2], #4
 801c19c:	9207      	str	r2, [sp, #28]
 801c19e:	d002      	beq.n	801c1a6 <_svfprintf_r+0xb3e>
 801c1a0:	461f      	mov	r7, r3
 801c1a2:	f7ff bb3c 	b.w	801b81e <_svfprintf_r+0x1b6>
 801c1a6:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c1aa:	d002      	beq.n	801c1b2 <_svfprintf_r+0xb4a>
 801c1ac:	b2b6      	uxth	r6, r6
 801c1ae:	f7ff bb36 	b.w	801b81e <_svfprintf_r+0x1b6>
 801c1b2:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c1b6:	f43f ab32 	beq.w	801b81e <_svfprintf_r+0x1b6>
 801c1ba:	b2f6      	uxtb	r6, r6
 801c1bc:	e7f0      	b.n	801c1a0 <_svfprintf_r+0xb38>
 801c1be:	2e0a      	cmp	r6, #10
 801c1c0:	f177 0300 	sbcs.w	r3, r7, #0
 801c1c4:	d207      	bcs.n	801c1d6 <_svfprintf_r+0xb6e>
 801c1c6:	3630      	adds	r6, #48	@ 0x30
 801c1c8:	b2f6      	uxtb	r6, r6
 801c1ca:	f88d 6147 	strb.w	r6, [sp, #327]	@ 0x147
 801c1ce:	f20d 1947 	addw	r9, sp, #327	@ 0x147
 801c1d2:	f000 bc15 	b.w	801ca00 <_svfprintf_r+0x1398>
 801c1d6:	2300      	movs	r3, #0
 801c1d8:	9304      	str	r3, [sp, #16]
 801c1da:	9b08      	ldr	r3, [sp, #32]
 801c1dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801c1e0:	ad52      	add	r5, sp, #328	@ 0x148
 801c1e2:	9310      	str	r3, [sp, #64]	@ 0x40
 801c1e4:	220a      	movs	r2, #10
 801c1e6:	2300      	movs	r3, #0
 801c1e8:	4630      	mov	r0, r6
 801c1ea:	4639      	mov	r1, r7
 801c1ec:	f7e4 fd4c 	bl	8000c88 <__aeabi_uldivmod>
 801c1f0:	9b04      	ldr	r3, [sp, #16]
 801c1f2:	9011      	str	r0, [sp, #68]	@ 0x44
 801c1f4:	3301      	adds	r3, #1
 801c1f6:	9304      	str	r3, [sp, #16]
 801c1f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c1fa:	3230      	adds	r2, #48	@ 0x30
 801c1fc:	468a      	mov	sl, r1
 801c1fe:	f105 39ff 	add.w	r9, r5, #4294967295
 801c202:	f805 2c01 	strb.w	r2, [r5, #-1]
 801c206:	b1d3      	cbz	r3, 801c23e <_svfprintf_r+0xbd6>
 801c208:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c20a:	9a04      	ldr	r2, [sp, #16]
 801c20c:	781b      	ldrb	r3, [r3, #0]
 801c20e:	429a      	cmp	r2, r3
 801c210:	d115      	bne.n	801c23e <_svfprintf_r+0xbd6>
 801c212:	2aff      	cmp	r2, #255	@ 0xff
 801c214:	d013      	beq.n	801c23e <_svfprintf_r+0xbd6>
 801c216:	2e0a      	cmp	r6, #10
 801c218:	f177 0300 	sbcs.w	r3, r7, #0
 801c21c:	d30f      	bcc.n	801c23e <_svfprintf_r+0xbd6>
 801c21e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c220:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c222:	eba9 0903 	sub.w	r9, r9, r3
 801c226:	461a      	mov	r2, r3
 801c228:	4648      	mov	r0, r9
 801c22a:	f000 fcfe 	bl	801cc2a <strncpy>
 801c22e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c230:	785b      	ldrb	r3, [r3, #1]
 801c232:	b11b      	cbz	r3, 801c23c <_svfprintf_r+0xbd4>
 801c234:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c236:	3301      	adds	r3, #1
 801c238:	9309      	str	r3, [sp, #36]	@ 0x24
 801c23a:	2300      	movs	r3, #0
 801c23c:	9304      	str	r3, [sp, #16]
 801c23e:	2e0a      	cmp	r6, #10
 801c240:	f177 0700 	sbcs.w	r7, r7, #0
 801c244:	f0c0 83dc 	bcc.w	801ca00 <_svfprintf_r+0x1398>
 801c248:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801c24a:	4657      	mov	r7, sl
 801c24c:	464d      	mov	r5, r9
 801c24e:	e7c9      	b.n	801c1e4 <_svfprintf_r+0xb7c>
 801c250:	f006 030f 	and.w	r3, r6, #15
 801c254:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801c256:	0936      	lsrs	r6, r6, #4
 801c258:	5cd3      	ldrb	r3, [r2, r3]
 801c25a:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801c25e:	ea46 7607 	orr.w	r6, r6, r7, lsl #28
 801c262:	093f      	lsrs	r7, r7, #4
 801c264:	ea56 0307 	orrs.w	r3, r6, r7
 801c268:	d1f2      	bne.n	801c250 <_svfprintf_r+0xbe8>
 801c26a:	e3c9      	b.n	801ca00 <_svfprintf_r+0x1398>
 801c26c:	b91b      	cbnz	r3, 801c276 <_svfprintf_r+0xc0e>
 801c26e:	07e9      	lsls	r1, r5, #31
 801c270:	d501      	bpl.n	801c276 <_svfprintf_r+0xc0e>
 801c272:	2630      	movs	r6, #48	@ 0x30
 801c274:	e7a9      	b.n	801c1ca <_svfprintf_r+0xb62>
 801c276:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801c27a:	e3c1      	b.n	801ca00 <_svfprintf_r+0x1398>
 801c27c:	9b06      	ldr	r3, [sp, #24]
 801c27e:	2b00      	cmp	r3, #0
 801c280:	f000 838f 	beq.w	801c9a2 <_svfprintf_r+0x133a>
 801c284:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801c288:	2300      	movs	r3, #0
 801c28a:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801c28e:	9607      	str	r6, [sp, #28]
 801c290:	f7ff bb63 	b.w	801b95a <_svfprintf_r+0x2f2>
 801c294:	2010      	movs	r0, #16
 801c296:	4403      	add	r3, r0
 801c298:	2a07      	cmp	r2, #7
 801c29a:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c29e:	6060      	str	r0, [r4, #4]
 801c2a0:	dd08      	ble.n	801c2b4 <_svfprintf_r+0xc4c>
 801c2a2:	9803      	ldr	r0, [sp, #12]
 801c2a4:	aa26      	add	r2, sp, #152	@ 0x98
 801c2a6:	4659      	mov	r1, fp
 801c2a8:	f002 f8b1 	bl	801e40e <__ssprint_r>
 801c2ac:	2800      	cmp	r0, #0
 801c2ae:	f040 8356 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c2b2:	a929      	add	r1, sp, #164	@ 0xa4
 801c2b4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c2b6:	3b10      	subs	r3, #16
 801c2b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c2ba:	460c      	mov	r4, r1
 801c2bc:	e546      	b.n	801bd4c <_svfprintf_r+0x6e4>
 801c2be:	460c      	mov	r4, r1
 801c2c0:	e561      	b.n	801bd86 <_svfprintf_r+0x71e>
 801c2c2:	9803      	ldr	r0, [sp, #12]
 801c2c4:	aa26      	add	r2, sp, #152	@ 0x98
 801c2c6:	4659      	mov	r1, fp
 801c2c8:	f002 f8a1 	bl	801e40e <__ssprint_r>
 801c2cc:	2800      	cmp	r0, #0
 801c2ce:	f040 8346 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c2d2:	ac29      	add	r4, sp, #164	@ 0xa4
 801c2d4:	e569      	b.n	801bdaa <_svfprintf_r+0x742>
 801c2d6:	9803      	ldr	r0, [sp, #12]
 801c2d8:	aa26      	add	r2, sp, #152	@ 0x98
 801c2da:	4659      	mov	r1, fp
 801c2dc:	f002 f897 	bl	801e40e <__ssprint_r>
 801c2e0:	2800      	cmp	r0, #0
 801c2e2:	f040 833c 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c2e6:	ac29      	add	r4, sp, #164	@ 0xa4
 801c2e8:	e56f      	b.n	801bdca <_svfprintf_r+0x762>
 801c2ea:	2010      	movs	r0, #16
 801c2ec:	4403      	add	r3, r0
 801c2ee:	2a07      	cmp	r2, #7
 801c2f0:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c2f4:	6060      	str	r0, [r4, #4]
 801c2f6:	dd08      	ble.n	801c30a <_svfprintf_r+0xca2>
 801c2f8:	9803      	ldr	r0, [sp, #12]
 801c2fa:	aa26      	add	r2, sp, #152	@ 0x98
 801c2fc:	4659      	mov	r1, fp
 801c2fe:	f002 f886 	bl	801e40e <__ssprint_r>
 801c302:	2800      	cmp	r0, #0
 801c304:	f040 832b 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c308:	a929      	add	r1, sp, #164	@ 0xa4
 801c30a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c30c:	3b10      	subs	r3, #16
 801c30e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c310:	460c      	mov	r4, r1
 801c312:	e563      	b.n	801bddc <_svfprintf_r+0x774>
 801c314:	460c      	mov	r4, r1
 801c316:	e57e      	b.n	801be16 <_svfprintf_r+0x7ae>
 801c318:	2010      	movs	r0, #16
 801c31a:	4403      	add	r3, r0
 801c31c:	2a07      	cmp	r2, #7
 801c31e:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c322:	6060      	str	r0, [r4, #4]
 801c324:	dd08      	ble.n	801c338 <_svfprintf_r+0xcd0>
 801c326:	9803      	ldr	r0, [sp, #12]
 801c328:	aa26      	add	r2, sp, #152	@ 0x98
 801c32a:	4659      	mov	r1, fp
 801c32c:	f002 f86f 	bl	801e40e <__ssprint_r>
 801c330:	2800      	cmp	r0, #0
 801c332:	f040 8314 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c336:	a929      	add	r1, sp, #164	@ 0xa4
 801c338:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c33a:	3b10      	subs	r3, #16
 801c33c:	9310      	str	r3, [sp, #64]	@ 0x40
 801c33e:	460c      	mov	r4, r1
 801c340:	e56f      	b.n	801be22 <_svfprintf_r+0x7ba>
 801c342:	460c      	mov	r4, r1
 801c344:	e58a      	b.n	801be5c <_svfprintf_r+0x7f4>
 801c346:	bf00      	nop
 801c348:	080215f4 	.word	0x080215f4
 801c34c:	08021605 	.word	0x08021605
 801c350:	9b06      	ldr	r3, [sp, #24]
 801c352:	2b65      	cmp	r3, #101	@ 0x65
 801c354:	f340 8246 	ble.w	801c7e4 <_svfprintf_r+0x117c>
 801c358:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801c35c:	2200      	movs	r2, #0
 801c35e:	2300      	movs	r3, #0
 801c360:	f7e4 fbb2 	bl	8000ac8 <__aeabi_dcmpeq>
 801c364:	2800      	cmp	r0, #0
 801c366:	d06a      	beq.n	801c43e <_svfprintf_r+0xdd6>
 801c368:	4b73      	ldr	r3, [pc, #460]	@ (801c538 <_svfprintf_r+0xed0>)
 801c36a:	6023      	str	r3, [r4, #0]
 801c36c:	2301      	movs	r3, #1
 801c36e:	6063      	str	r3, [r4, #4]
 801c370:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c372:	3301      	adds	r3, #1
 801c374:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c376:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c378:	3301      	adds	r3, #1
 801c37a:	2b07      	cmp	r3, #7
 801c37c:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c37e:	dc37      	bgt.n	801c3f0 <_svfprintf_r+0xd88>
 801c380:	3408      	adds	r4, #8
 801c382:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c384:	9a04      	ldr	r2, [sp, #16]
 801c386:	4293      	cmp	r3, r2
 801c388:	db02      	blt.n	801c390 <_svfprintf_r+0xd28>
 801c38a:	07ef      	lsls	r7, r5, #31
 801c38c:	f57f ad76 	bpl.w	801be7c <_svfprintf_r+0x814>
 801c390:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c392:	6023      	str	r3, [r4, #0]
 801c394:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c396:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c398:	6063      	str	r3, [r4, #4]
 801c39a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c39c:	4413      	add	r3, r2
 801c39e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c3a0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c3a2:	3301      	adds	r3, #1
 801c3a4:	2b07      	cmp	r3, #7
 801c3a6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c3a8:	dc2c      	bgt.n	801c404 <_svfprintf_r+0xd9c>
 801c3aa:	3408      	adds	r4, #8
 801c3ac:	9b04      	ldr	r3, [sp, #16]
 801c3ae:	1e5e      	subs	r6, r3, #1
 801c3b0:	2e00      	cmp	r6, #0
 801c3b2:	f77f ad63 	ble.w	801be7c <_svfprintf_r+0x814>
 801c3b6:	4f61      	ldr	r7, [pc, #388]	@ (801c53c <_svfprintf_r+0xed4>)
 801c3b8:	f04f 0810 	mov.w	r8, #16
 801c3bc:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c3c0:	2e10      	cmp	r6, #16
 801c3c2:	f103 0301 	add.w	r3, r3, #1
 801c3c6:	f104 0108 	add.w	r1, r4, #8
 801c3ca:	6027      	str	r7, [r4, #0]
 801c3cc:	dc24      	bgt.n	801c418 <_svfprintf_r+0xdb0>
 801c3ce:	6066      	str	r6, [r4, #4]
 801c3d0:	2b07      	cmp	r3, #7
 801c3d2:	4416      	add	r6, r2
 801c3d4:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801c3d8:	f340 82a0 	ble.w	801c91c <_svfprintf_r+0x12b4>
 801c3dc:	9803      	ldr	r0, [sp, #12]
 801c3de:	aa26      	add	r2, sp, #152	@ 0x98
 801c3e0:	4659      	mov	r1, fp
 801c3e2:	f002 f814 	bl	801e40e <__ssprint_r>
 801c3e6:	2800      	cmp	r0, #0
 801c3e8:	f040 82b9 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c3ec:	ac29      	add	r4, sp, #164	@ 0xa4
 801c3ee:	e545      	b.n	801be7c <_svfprintf_r+0x814>
 801c3f0:	9803      	ldr	r0, [sp, #12]
 801c3f2:	aa26      	add	r2, sp, #152	@ 0x98
 801c3f4:	4659      	mov	r1, fp
 801c3f6:	f002 f80a 	bl	801e40e <__ssprint_r>
 801c3fa:	2800      	cmp	r0, #0
 801c3fc:	f040 82af 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c400:	ac29      	add	r4, sp, #164	@ 0xa4
 801c402:	e7be      	b.n	801c382 <_svfprintf_r+0xd1a>
 801c404:	9803      	ldr	r0, [sp, #12]
 801c406:	aa26      	add	r2, sp, #152	@ 0x98
 801c408:	4659      	mov	r1, fp
 801c40a:	f002 f800 	bl	801e40e <__ssprint_r>
 801c40e:	2800      	cmp	r0, #0
 801c410:	f040 82a5 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c414:	ac29      	add	r4, sp, #164	@ 0xa4
 801c416:	e7c9      	b.n	801c3ac <_svfprintf_r+0xd44>
 801c418:	3210      	adds	r2, #16
 801c41a:	2b07      	cmp	r3, #7
 801c41c:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c420:	f8c4 8004 	str.w	r8, [r4, #4]
 801c424:	dd08      	ble.n	801c438 <_svfprintf_r+0xdd0>
 801c426:	9803      	ldr	r0, [sp, #12]
 801c428:	aa26      	add	r2, sp, #152	@ 0x98
 801c42a:	4659      	mov	r1, fp
 801c42c:	f001 ffef 	bl	801e40e <__ssprint_r>
 801c430:	2800      	cmp	r0, #0
 801c432:	f040 8294 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c436:	a929      	add	r1, sp, #164	@ 0xa4
 801c438:	3e10      	subs	r6, #16
 801c43a:	460c      	mov	r4, r1
 801c43c:	e7be      	b.n	801c3bc <_svfprintf_r+0xd54>
 801c43e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c440:	2b00      	cmp	r3, #0
 801c442:	dc7d      	bgt.n	801c540 <_svfprintf_r+0xed8>
 801c444:	4b3c      	ldr	r3, [pc, #240]	@ (801c538 <_svfprintf_r+0xed0>)
 801c446:	6023      	str	r3, [r4, #0]
 801c448:	2301      	movs	r3, #1
 801c44a:	6063      	str	r3, [r4, #4]
 801c44c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c44e:	3301      	adds	r3, #1
 801c450:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c452:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c454:	3301      	adds	r3, #1
 801c456:	2b07      	cmp	r3, #7
 801c458:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c45a:	dc46      	bgt.n	801c4ea <_svfprintf_r+0xe82>
 801c45c:	3408      	adds	r4, #8
 801c45e:	9904      	ldr	r1, [sp, #16]
 801c460:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c462:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801c464:	430b      	orrs	r3, r1
 801c466:	f005 0101 	and.w	r1, r5, #1
 801c46a:	430b      	orrs	r3, r1
 801c46c:	f43f ad06 	beq.w	801be7c <_svfprintf_r+0x814>
 801c470:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c472:	6023      	str	r3, [r4, #0]
 801c474:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c476:	6063      	str	r3, [r4, #4]
 801c478:	441a      	add	r2, r3
 801c47a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c47c:	9228      	str	r2, [sp, #160]	@ 0xa0
 801c47e:	3301      	adds	r3, #1
 801c480:	2b07      	cmp	r3, #7
 801c482:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c484:	dc3b      	bgt.n	801c4fe <_svfprintf_r+0xe96>
 801c486:	f104 0308 	add.w	r3, r4, #8
 801c48a:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801c48c:	2e00      	cmp	r6, #0
 801c48e:	da1b      	bge.n	801c4c8 <_svfprintf_r+0xe60>
 801c490:	4f2a      	ldr	r7, [pc, #168]	@ (801c53c <_svfprintf_r+0xed4>)
 801c492:	4276      	negs	r6, r6
 801c494:	461a      	mov	r2, r3
 801c496:	2410      	movs	r4, #16
 801c498:	e9dd 1027 	ldrd	r1, r0, [sp, #156]	@ 0x9c
 801c49c:	2e10      	cmp	r6, #16
 801c49e:	f101 0101 	add.w	r1, r1, #1
 801c4a2:	f103 0308 	add.w	r3, r3, #8
 801c4a6:	6017      	str	r7, [r2, #0]
 801c4a8:	dc33      	bgt.n	801c512 <_svfprintf_r+0xeaa>
 801c4aa:	6056      	str	r6, [r2, #4]
 801c4ac:	2907      	cmp	r1, #7
 801c4ae:	4406      	add	r6, r0
 801c4b0:	e9cd 1627 	strd	r1, r6, [sp, #156]	@ 0x9c
 801c4b4:	dd08      	ble.n	801c4c8 <_svfprintf_r+0xe60>
 801c4b6:	9803      	ldr	r0, [sp, #12]
 801c4b8:	aa26      	add	r2, sp, #152	@ 0x98
 801c4ba:	4659      	mov	r1, fp
 801c4bc:	f001 ffa7 	bl	801e40e <__ssprint_r>
 801c4c0:	2800      	cmp	r0, #0
 801c4c2:	f040 824c 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c4c6:	ab29      	add	r3, sp, #164	@ 0xa4
 801c4c8:	9a04      	ldr	r2, [sp, #16]
 801c4ca:	9904      	ldr	r1, [sp, #16]
 801c4cc:	605a      	str	r2, [r3, #4]
 801c4ce:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801c4d0:	f8c3 9000 	str.w	r9, [r3]
 801c4d4:	440a      	add	r2, r1
 801c4d6:	9228      	str	r2, [sp, #160]	@ 0xa0
 801c4d8:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c4da:	3201      	adds	r2, #1
 801c4dc:	2a07      	cmp	r2, #7
 801c4de:	9227      	str	r2, [sp, #156]	@ 0x9c
 801c4e0:	f73f af7c 	bgt.w	801c3dc <_svfprintf_r+0xd74>
 801c4e4:	f103 0408 	add.w	r4, r3, #8
 801c4e8:	e4c8      	b.n	801be7c <_svfprintf_r+0x814>
 801c4ea:	9803      	ldr	r0, [sp, #12]
 801c4ec:	aa26      	add	r2, sp, #152	@ 0x98
 801c4ee:	4659      	mov	r1, fp
 801c4f0:	f001 ff8d 	bl	801e40e <__ssprint_r>
 801c4f4:	2800      	cmp	r0, #0
 801c4f6:	f040 8232 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c4fa:	ac29      	add	r4, sp, #164	@ 0xa4
 801c4fc:	e7af      	b.n	801c45e <_svfprintf_r+0xdf6>
 801c4fe:	9803      	ldr	r0, [sp, #12]
 801c500:	aa26      	add	r2, sp, #152	@ 0x98
 801c502:	4659      	mov	r1, fp
 801c504:	f001 ff83 	bl	801e40e <__ssprint_r>
 801c508:	2800      	cmp	r0, #0
 801c50a:	f040 8228 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c50e:	ab29      	add	r3, sp, #164	@ 0xa4
 801c510:	e7bb      	b.n	801c48a <_svfprintf_r+0xe22>
 801c512:	3010      	adds	r0, #16
 801c514:	2907      	cmp	r1, #7
 801c516:	e9cd 1027 	strd	r1, r0, [sp, #156]	@ 0x9c
 801c51a:	6054      	str	r4, [r2, #4]
 801c51c:	dd08      	ble.n	801c530 <_svfprintf_r+0xec8>
 801c51e:	9803      	ldr	r0, [sp, #12]
 801c520:	aa26      	add	r2, sp, #152	@ 0x98
 801c522:	4659      	mov	r1, fp
 801c524:	f001 ff73 	bl	801e40e <__ssprint_r>
 801c528:	2800      	cmp	r0, #0
 801c52a:	f040 8218 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c52e:	ab29      	add	r3, sp, #164	@ 0xa4
 801c530:	3e10      	subs	r6, #16
 801c532:	461a      	mov	r2, r3
 801c534:	e7b0      	b.n	801c498 <_svfprintf_r+0xe30>
 801c536:	bf00      	nop
 801c538:	08021616 	.word	0x08021616
 801c53c:	08021618 	.word	0x08021618
 801c540:	9b04      	ldr	r3, [sp, #16]
 801c542:	444b      	add	r3, r9
 801c544:	9306      	str	r3, [sp, #24]
 801c546:	9b04      	ldr	r3, [sp, #16]
 801c548:	42b3      	cmp	r3, r6
 801c54a:	bfa8      	it	ge
 801c54c:	4633      	movge	r3, r6
 801c54e:	2b00      	cmp	r3, #0
 801c550:	4698      	mov	r8, r3
 801c552:	dd0b      	ble.n	801c56c <_svfprintf_r+0xf04>
 801c554:	e9c4 9300 	strd	r9, r3, [r4]
 801c558:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c55a:	4443      	add	r3, r8
 801c55c:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c55e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c560:	3301      	adds	r3, #1
 801c562:	2b07      	cmp	r3, #7
 801c564:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c566:	f300 8089 	bgt.w	801c67c <_svfprintf_r+0x1014>
 801c56a:	3408      	adds	r4, #8
 801c56c:	4643      	mov	r3, r8
 801c56e:	2b00      	cmp	r3, #0
 801c570:	bfac      	ite	ge
 801c572:	eba6 0808 	subge.w	r8, r6, r8
 801c576:	46b0      	movlt	r8, r6
 801c578:	f1b8 0f00 	cmp.w	r8, #0
 801c57c:	dd1b      	ble.n	801c5b6 <_svfprintf_r+0xf4e>
 801c57e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801c582:	4897      	ldr	r0, [pc, #604]	@ (801c7e0 <_svfprintf_r+0x1178>)
 801c584:	6020      	str	r0, [r4, #0]
 801c586:	f1b8 0f10 	cmp.w	r8, #16
 801c58a:	f102 0201 	add.w	r2, r2, #1
 801c58e:	f104 0108 	add.w	r1, r4, #8
 801c592:	dc7d      	bgt.n	801c690 <_svfprintf_r+0x1028>
 801c594:	4443      	add	r3, r8
 801c596:	2a07      	cmp	r2, #7
 801c598:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c59c:	f8c4 8004 	str.w	r8, [r4, #4]
 801c5a0:	f340 808a 	ble.w	801c6b8 <_svfprintf_r+0x1050>
 801c5a4:	9803      	ldr	r0, [sp, #12]
 801c5a6:	aa26      	add	r2, sp, #152	@ 0x98
 801c5a8:	4659      	mov	r1, fp
 801c5aa:	f001 ff30 	bl	801e40e <__ssprint_r>
 801c5ae:	2800      	cmp	r0, #0
 801c5b0:	f040 81d5 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c5b4:	ac29      	add	r4, sp, #164	@ 0xa4
 801c5b6:	eb09 0806 	add.w	r8, r9, r6
 801c5ba:	056e      	lsls	r6, r5, #21
 801c5bc:	d508      	bpl.n	801c5d0 <_svfprintf_r+0xf68>
 801c5be:	9b08      	ldr	r3, [sp, #32]
 801c5c0:	2b00      	cmp	r3, #0
 801c5c2:	d17b      	bne.n	801c6bc <_svfprintf_r+0x1054>
 801c5c4:	2f00      	cmp	r7, #0
 801c5c6:	d17b      	bne.n	801c6c0 <_svfprintf_r+0x1058>
 801c5c8:	9b06      	ldr	r3, [sp, #24]
 801c5ca:	4598      	cmp	r8, r3
 801c5cc:	bf28      	it	cs
 801c5ce:	4698      	movcs	r8, r3
 801c5d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c5d2:	9a04      	ldr	r2, [sp, #16]
 801c5d4:	4293      	cmp	r3, r2
 801c5d6:	db01      	blt.n	801c5dc <_svfprintf_r+0xf74>
 801c5d8:	07e8      	lsls	r0, r5, #31
 801c5da:	d50e      	bpl.n	801c5fa <_svfprintf_r+0xf92>
 801c5dc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c5de:	6023      	str	r3, [r4, #0]
 801c5e0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c5e2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c5e4:	6063      	str	r3, [r4, #4]
 801c5e6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c5e8:	4413      	add	r3, r2
 801c5ea:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c5ec:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c5ee:	3301      	adds	r3, #1
 801c5f0:	2b07      	cmp	r3, #7
 801c5f2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c5f4:	f300 80df 	bgt.w	801c7b6 <_svfprintf_r+0x114e>
 801c5f8:	3408      	adds	r4, #8
 801c5fa:	9b04      	ldr	r3, [sp, #16]
 801c5fc:	9f20      	ldr	r7, [sp, #128]	@ 0x80
 801c5fe:	1bdf      	subs	r7, r3, r7
 801c600:	9b06      	ldr	r3, [sp, #24]
 801c602:	eba3 0308 	sub.w	r3, r3, r8
 801c606:	429f      	cmp	r7, r3
 801c608:	bfa8      	it	ge
 801c60a:	461f      	movge	r7, r3
 801c60c:	2f00      	cmp	r7, #0
 801c60e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c610:	dd0a      	ble.n	801c628 <_svfprintf_r+0xfc0>
 801c612:	443b      	add	r3, r7
 801c614:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c616:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c618:	3301      	adds	r3, #1
 801c61a:	2b07      	cmp	r3, #7
 801c61c:	e9c4 8700 	strd	r8, r7, [r4]
 801c620:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c622:	f300 80d2 	bgt.w	801c7ca <_svfprintf_r+0x1162>
 801c626:	3408      	adds	r4, #8
 801c628:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801c62a:	9b04      	ldr	r3, [sp, #16]
 801c62c:	2f00      	cmp	r7, #0
 801c62e:	eba3 0606 	sub.w	r6, r3, r6
 801c632:	bfa8      	it	ge
 801c634:	1bf6      	subge	r6, r6, r7
 801c636:	2e00      	cmp	r6, #0
 801c638:	f77f ac20 	ble.w	801be7c <_svfprintf_r+0x814>
 801c63c:	4f68      	ldr	r7, [pc, #416]	@ (801c7e0 <_svfprintf_r+0x1178>)
 801c63e:	f04f 0810 	mov.w	r8, #16
 801c642:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c646:	2e10      	cmp	r6, #16
 801c648:	f103 0301 	add.w	r3, r3, #1
 801c64c:	f104 0108 	add.w	r1, r4, #8
 801c650:	6027      	str	r7, [r4, #0]
 801c652:	f77f aebc 	ble.w	801c3ce <_svfprintf_r+0xd66>
 801c656:	3210      	adds	r2, #16
 801c658:	2b07      	cmp	r3, #7
 801c65a:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c65e:	f8c4 8004 	str.w	r8, [r4, #4]
 801c662:	dd08      	ble.n	801c676 <_svfprintf_r+0x100e>
 801c664:	9803      	ldr	r0, [sp, #12]
 801c666:	aa26      	add	r2, sp, #152	@ 0x98
 801c668:	4659      	mov	r1, fp
 801c66a:	f001 fed0 	bl	801e40e <__ssprint_r>
 801c66e:	2800      	cmp	r0, #0
 801c670:	f040 8175 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c674:	a929      	add	r1, sp, #164	@ 0xa4
 801c676:	3e10      	subs	r6, #16
 801c678:	460c      	mov	r4, r1
 801c67a:	e7e2      	b.n	801c642 <_svfprintf_r+0xfda>
 801c67c:	9803      	ldr	r0, [sp, #12]
 801c67e:	aa26      	add	r2, sp, #152	@ 0x98
 801c680:	4659      	mov	r1, fp
 801c682:	f001 fec4 	bl	801e40e <__ssprint_r>
 801c686:	2800      	cmp	r0, #0
 801c688:	f040 8169 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c68c:	ac29      	add	r4, sp, #164	@ 0xa4
 801c68e:	e76d      	b.n	801c56c <_svfprintf_r+0xf04>
 801c690:	2010      	movs	r0, #16
 801c692:	4403      	add	r3, r0
 801c694:	2a07      	cmp	r2, #7
 801c696:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c69a:	6060      	str	r0, [r4, #4]
 801c69c:	dd08      	ble.n	801c6b0 <_svfprintf_r+0x1048>
 801c69e:	9803      	ldr	r0, [sp, #12]
 801c6a0:	aa26      	add	r2, sp, #152	@ 0x98
 801c6a2:	4659      	mov	r1, fp
 801c6a4:	f001 feb3 	bl	801e40e <__ssprint_r>
 801c6a8:	2800      	cmp	r0, #0
 801c6aa:	f040 8158 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c6ae:	a929      	add	r1, sp, #164	@ 0xa4
 801c6b0:	f1a8 0810 	sub.w	r8, r8, #16
 801c6b4:	460c      	mov	r4, r1
 801c6b6:	e762      	b.n	801c57e <_svfprintf_r+0xf16>
 801c6b8:	460c      	mov	r4, r1
 801c6ba:	e77c      	b.n	801c5b6 <_svfprintf_r+0xf4e>
 801c6bc:	2f00      	cmp	r7, #0
 801c6be:	d04a      	beq.n	801c756 <_svfprintf_r+0x10ee>
 801c6c0:	3f01      	subs	r7, #1
 801c6c2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c6c4:	6023      	str	r3, [r4, #0]
 801c6c6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c6c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c6ca:	6063      	str	r3, [r4, #4]
 801c6cc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c6ce:	4413      	add	r3, r2
 801c6d0:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c6d2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c6d4:	3301      	adds	r3, #1
 801c6d6:	2b07      	cmp	r3, #7
 801c6d8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c6da:	dc43      	bgt.n	801c764 <_svfprintf_r+0x10fc>
 801c6dc:	3408      	adds	r4, #8
 801c6de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c6e0:	781a      	ldrb	r2, [r3, #0]
 801c6e2:	9b06      	ldr	r3, [sp, #24]
 801c6e4:	eba3 0308 	sub.w	r3, r3, r8
 801c6e8:	429a      	cmp	r2, r3
 801c6ea:	bfa8      	it	ge
 801c6ec:	461a      	movge	r2, r3
 801c6ee:	2a00      	cmp	r2, #0
 801c6f0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c6f2:	4691      	mov	r9, r2
 801c6f4:	dd09      	ble.n	801c70a <_svfprintf_r+0x10a2>
 801c6f6:	4413      	add	r3, r2
 801c6f8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c6fa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c6fc:	3301      	adds	r3, #1
 801c6fe:	2b07      	cmp	r3, #7
 801c700:	e9c4 8200 	strd	r8, r2, [r4]
 801c704:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c706:	dc37      	bgt.n	801c778 <_svfprintf_r+0x1110>
 801c708:	3408      	adds	r4, #8
 801c70a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c70c:	781e      	ldrb	r6, [r3, #0]
 801c70e:	f1b9 0f00 	cmp.w	r9, #0
 801c712:	bfa8      	it	ge
 801c714:	eba6 0609 	subge.w	r6, r6, r9
 801c718:	2e00      	cmp	r6, #0
 801c71a:	dd18      	ble.n	801c74e <_svfprintf_r+0x10e6>
 801c71c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c720:	482f      	ldr	r0, [pc, #188]	@ (801c7e0 <_svfprintf_r+0x1178>)
 801c722:	6020      	str	r0, [r4, #0]
 801c724:	2e10      	cmp	r6, #16
 801c726:	f103 0301 	add.w	r3, r3, #1
 801c72a:	f104 0108 	add.w	r1, r4, #8
 801c72e:	dc2d      	bgt.n	801c78c <_svfprintf_r+0x1124>
 801c730:	6066      	str	r6, [r4, #4]
 801c732:	2b07      	cmp	r3, #7
 801c734:	4416      	add	r6, r2
 801c736:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801c73a:	dd3a      	ble.n	801c7b2 <_svfprintf_r+0x114a>
 801c73c:	9803      	ldr	r0, [sp, #12]
 801c73e:	aa26      	add	r2, sp, #152	@ 0x98
 801c740:	4659      	mov	r1, fp
 801c742:	f001 fe64 	bl	801e40e <__ssprint_r>
 801c746:	2800      	cmp	r0, #0
 801c748:	f040 8109 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c74c:	ac29      	add	r4, sp, #164	@ 0xa4
 801c74e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c750:	781b      	ldrb	r3, [r3, #0]
 801c752:	4498      	add	r8, r3
 801c754:	e733      	b.n	801c5be <_svfprintf_r+0xf56>
 801c756:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c758:	3b01      	subs	r3, #1
 801c75a:	9309      	str	r3, [sp, #36]	@ 0x24
 801c75c:	9b08      	ldr	r3, [sp, #32]
 801c75e:	3b01      	subs	r3, #1
 801c760:	9308      	str	r3, [sp, #32]
 801c762:	e7ae      	b.n	801c6c2 <_svfprintf_r+0x105a>
 801c764:	9803      	ldr	r0, [sp, #12]
 801c766:	aa26      	add	r2, sp, #152	@ 0x98
 801c768:	4659      	mov	r1, fp
 801c76a:	f001 fe50 	bl	801e40e <__ssprint_r>
 801c76e:	2800      	cmp	r0, #0
 801c770:	f040 80f5 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c774:	ac29      	add	r4, sp, #164	@ 0xa4
 801c776:	e7b2      	b.n	801c6de <_svfprintf_r+0x1076>
 801c778:	9803      	ldr	r0, [sp, #12]
 801c77a:	aa26      	add	r2, sp, #152	@ 0x98
 801c77c:	4659      	mov	r1, fp
 801c77e:	f001 fe46 	bl	801e40e <__ssprint_r>
 801c782:	2800      	cmp	r0, #0
 801c784:	f040 80eb 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c788:	ac29      	add	r4, sp, #164	@ 0xa4
 801c78a:	e7be      	b.n	801c70a <_svfprintf_r+0x10a2>
 801c78c:	2010      	movs	r0, #16
 801c78e:	4402      	add	r2, r0
 801c790:	2b07      	cmp	r3, #7
 801c792:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c796:	6060      	str	r0, [r4, #4]
 801c798:	dd08      	ble.n	801c7ac <_svfprintf_r+0x1144>
 801c79a:	9803      	ldr	r0, [sp, #12]
 801c79c:	aa26      	add	r2, sp, #152	@ 0x98
 801c79e:	4659      	mov	r1, fp
 801c7a0:	f001 fe35 	bl	801e40e <__ssprint_r>
 801c7a4:	2800      	cmp	r0, #0
 801c7a6:	f040 80da 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c7aa:	a929      	add	r1, sp, #164	@ 0xa4
 801c7ac:	3e10      	subs	r6, #16
 801c7ae:	460c      	mov	r4, r1
 801c7b0:	e7b4      	b.n	801c71c <_svfprintf_r+0x10b4>
 801c7b2:	460c      	mov	r4, r1
 801c7b4:	e7cb      	b.n	801c74e <_svfprintf_r+0x10e6>
 801c7b6:	9803      	ldr	r0, [sp, #12]
 801c7b8:	aa26      	add	r2, sp, #152	@ 0x98
 801c7ba:	4659      	mov	r1, fp
 801c7bc:	f001 fe27 	bl	801e40e <__ssprint_r>
 801c7c0:	2800      	cmp	r0, #0
 801c7c2:	f040 80cc 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c7c6:	ac29      	add	r4, sp, #164	@ 0xa4
 801c7c8:	e717      	b.n	801c5fa <_svfprintf_r+0xf92>
 801c7ca:	9803      	ldr	r0, [sp, #12]
 801c7cc:	aa26      	add	r2, sp, #152	@ 0x98
 801c7ce:	4659      	mov	r1, fp
 801c7d0:	f001 fe1d 	bl	801e40e <__ssprint_r>
 801c7d4:	2800      	cmp	r0, #0
 801c7d6:	f040 80c2 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c7da:	ac29      	add	r4, sp, #164	@ 0xa4
 801c7dc:	e724      	b.n	801c628 <_svfprintf_r+0xfc0>
 801c7de:	bf00      	nop
 801c7e0:	08021618 	.word	0x08021618
 801c7e4:	9904      	ldr	r1, [sp, #16]
 801c7e6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c7e8:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c7ea:	2901      	cmp	r1, #1
 801c7ec:	f103 0301 	add.w	r3, r3, #1
 801c7f0:	f102 0201 	add.w	r2, r2, #1
 801c7f4:	f104 0608 	add.w	r6, r4, #8
 801c7f8:	dc02      	bgt.n	801c800 <_svfprintf_r+0x1198>
 801c7fa:	07e9      	lsls	r1, r5, #31
 801c7fc:	f140 8083 	bpl.w	801c906 <_svfprintf_r+0x129e>
 801c800:	2101      	movs	r1, #1
 801c802:	2a07      	cmp	r2, #7
 801c804:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c808:	f8c4 9000 	str.w	r9, [r4]
 801c80c:	6061      	str	r1, [r4, #4]
 801c80e:	dd08      	ble.n	801c822 <_svfprintf_r+0x11ba>
 801c810:	9803      	ldr	r0, [sp, #12]
 801c812:	aa26      	add	r2, sp, #152	@ 0x98
 801c814:	4659      	mov	r1, fp
 801c816:	f001 fdfa 	bl	801e40e <__ssprint_r>
 801c81a:	2800      	cmp	r0, #0
 801c81c:	f040 809f 	bne.w	801c95e <_svfprintf_r+0x12f6>
 801c820:	ae29      	add	r6, sp, #164	@ 0xa4
 801c822:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c824:	6033      	str	r3, [r6, #0]
 801c826:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c828:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c82a:	6073      	str	r3, [r6, #4]
 801c82c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c82e:	4413      	add	r3, r2
 801c830:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c832:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c834:	3301      	adds	r3, #1
 801c836:	2b07      	cmp	r3, #7
 801c838:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c83a:	dc33      	bgt.n	801c8a4 <_svfprintf_r+0x123c>
 801c83c:	3608      	adds	r6, #8
 801c83e:	9b04      	ldr	r3, [sp, #16]
 801c840:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801c844:	1e5c      	subs	r4, r3, #1
 801c846:	2200      	movs	r2, #0
 801c848:	2300      	movs	r3, #0
 801c84a:	e9dd 8727 	ldrd	r8, r7, [sp, #156]	@ 0x9c
 801c84e:	f7e4 f93b 	bl	8000ac8 <__aeabi_dcmpeq>
 801c852:	2800      	cmp	r0, #0
 801c854:	d12f      	bne.n	801c8b6 <_svfprintf_r+0x124e>
 801c856:	f109 0201 	add.w	r2, r9, #1
 801c85a:	e9c6 2400 	strd	r2, r4, [r6]
 801c85e:	9a04      	ldr	r2, [sp, #16]
 801c860:	f108 0301 	add.w	r3, r8, #1
 801c864:	3f01      	subs	r7, #1
 801c866:	4417      	add	r7, r2
 801c868:	2b07      	cmp	r3, #7
 801c86a:	e9cd 3727 	strd	r3, r7, [sp, #156]	@ 0x9c
 801c86e:	dd53      	ble.n	801c918 <_svfprintf_r+0x12b0>
 801c870:	9803      	ldr	r0, [sp, #12]
 801c872:	aa26      	add	r2, sp, #152	@ 0x98
 801c874:	4659      	mov	r1, fp
 801c876:	f001 fdca 	bl	801e40e <__ssprint_r>
 801c87a:	2800      	cmp	r0, #0
 801c87c:	d16f      	bne.n	801c95e <_svfprintf_r+0x12f6>
 801c87e:	ae29      	add	r6, sp, #164	@ 0xa4
 801c880:	ab22      	add	r3, sp, #136	@ 0x88
 801c882:	6033      	str	r3, [r6, #0]
 801c884:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c886:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c888:	6073      	str	r3, [r6, #4]
 801c88a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c88c:	4413      	add	r3, r2
 801c88e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c890:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c892:	3301      	adds	r3, #1
 801c894:	2b07      	cmp	r3, #7
 801c896:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c898:	f73f ada0 	bgt.w	801c3dc <_svfprintf_r+0xd74>
 801c89c:	f106 0408 	add.w	r4, r6, #8
 801c8a0:	f7ff baec 	b.w	801be7c <_svfprintf_r+0x814>
 801c8a4:	9803      	ldr	r0, [sp, #12]
 801c8a6:	aa26      	add	r2, sp, #152	@ 0x98
 801c8a8:	4659      	mov	r1, fp
 801c8aa:	f001 fdb0 	bl	801e40e <__ssprint_r>
 801c8ae:	2800      	cmp	r0, #0
 801c8b0:	d155      	bne.n	801c95e <_svfprintf_r+0x12f6>
 801c8b2:	ae29      	add	r6, sp, #164	@ 0xa4
 801c8b4:	e7c3      	b.n	801c83e <_svfprintf_r+0x11d6>
 801c8b6:	9b04      	ldr	r3, [sp, #16]
 801c8b8:	2b01      	cmp	r3, #1
 801c8ba:	dde1      	ble.n	801c880 <_svfprintf_r+0x1218>
 801c8bc:	4f57      	ldr	r7, [pc, #348]	@ (801ca1c <_svfprintf_r+0x13b4>)
 801c8be:	f04f 0810 	mov.w	r8, #16
 801c8c2:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c8c6:	2c10      	cmp	r4, #16
 801c8c8:	f103 0301 	add.w	r3, r3, #1
 801c8cc:	f106 0108 	add.w	r1, r6, #8
 801c8d0:	6037      	str	r7, [r6, #0]
 801c8d2:	dc07      	bgt.n	801c8e4 <_svfprintf_r+0x127c>
 801c8d4:	6074      	str	r4, [r6, #4]
 801c8d6:	2b07      	cmp	r3, #7
 801c8d8:	4414      	add	r4, r2
 801c8da:	e9cd 3427 	strd	r3, r4, [sp, #156]	@ 0x9c
 801c8de:	dcc7      	bgt.n	801c870 <_svfprintf_r+0x1208>
 801c8e0:	460e      	mov	r6, r1
 801c8e2:	e7cd      	b.n	801c880 <_svfprintf_r+0x1218>
 801c8e4:	3210      	adds	r2, #16
 801c8e6:	2b07      	cmp	r3, #7
 801c8e8:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c8ec:	f8c6 8004 	str.w	r8, [r6, #4]
 801c8f0:	dd06      	ble.n	801c900 <_svfprintf_r+0x1298>
 801c8f2:	9803      	ldr	r0, [sp, #12]
 801c8f4:	aa26      	add	r2, sp, #152	@ 0x98
 801c8f6:	4659      	mov	r1, fp
 801c8f8:	f001 fd89 	bl	801e40e <__ssprint_r>
 801c8fc:	bb78      	cbnz	r0, 801c95e <_svfprintf_r+0x12f6>
 801c8fe:	a929      	add	r1, sp, #164	@ 0xa4
 801c900:	3c10      	subs	r4, #16
 801c902:	460e      	mov	r6, r1
 801c904:	e7dd      	b.n	801c8c2 <_svfprintf_r+0x125a>
 801c906:	2101      	movs	r1, #1
 801c908:	2a07      	cmp	r2, #7
 801c90a:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c90e:	f8c4 9000 	str.w	r9, [r4]
 801c912:	6061      	str	r1, [r4, #4]
 801c914:	ddb4      	ble.n	801c880 <_svfprintf_r+0x1218>
 801c916:	e7ab      	b.n	801c870 <_svfprintf_r+0x1208>
 801c918:	3608      	adds	r6, #8
 801c91a:	e7b1      	b.n	801c880 <_svfprintf_r+0x1218>
 801c91c:	460c      	mov	r4, r1
 801c91e:	f7ff baad 	b.w	801be7c <_svfprintf_r+0x814>
 801c922:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c924:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c926:	1a9d      	subs	r5, r3, r2
 801c928:	2d00      	cmp	r5, #0
 801c92a:	f77f aaaa 	ble.w	801be82 <_svfprintf_r+0x81a>
 801c92e:	4e3c      	ldr	r6, [pc, #240]	@ (801ca20 <_svfprintf_r+0x13b8>)
 801c930:	2710      	movs	r7, #16
 801c932:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c936:	2d10      	cmp	r5, #16
 801c938:	f103 0301 	add.w	r3, r3, #1
 801c93c:	6026      	str	r6, [r4, #0]
 801c93e:	dc18      	bgt.n	801c972 <_svfprintf_r+0x130a>
 801c940:	442a      	add	r2, r5
 801c942:	2b07      	cmp	r3, #7
 801c944:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c948:	6065      	str	r5, [r4, #4]
 801c94a:	f77f aa9a 	ble.w	801be82 <_svfprintf_r+0x81a>
 801c94e:	9803      	ldr	r0, [sp, #12]
 801c950:	aa26      	add	r2, sp, #152	@ 0x98
 801c952:	4659      	mov	r1, fp
 801c954:	f001 fd5b 	bl	801e40e <__ssprint_r>
 801c958:	2800      	cmp	r0, #0
 801c95a:	f43f aa92 	beq.w	801be82 <_svfprintf_r+0x81a>
 801c95e:	f1ba 0f00 	cmp.w	sl, #0
 801c962:	f43f a89a 	beq.w	801ba9a <_svfprintf_r+0x432>
 801c966:	9803      	ldr	r0, [sp, #12]
 801c968:	4651      	mov	r1, sl
 801c96a:	f7fe fb77 	bl	801b05c <_free_r>
 801c96e:	f7ff b894 	b.w	801ba9a <_svfprintf_r+0x432>
 801c972:	3210      	adds	r2, #16
 801c974:	2b07      	cmp	r3, #7
 801c976:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c97a:	6067      	str	r7, [r4, #4]
 801c97c:	dc02      	bgt.n	801c984 <_svfprintf_r+0x131c>
 801c97e:	3408      	adds	r4, #8
 801c980:	3d10      	subs	r5, #16
 801c982:	e7d6      	b.n	801c932 <_svfprintf_r+0x12ca>
 801c984:	9803      	ldr	r0, [sp, #12]
 801c986:	aa26      	add	r2, sp, #152	@ 0x98
 801c988:	4659      	mov	r1, fp
 801c98a:	f001 fd40 	bl	801e40e <__ssprint_r>
 801c98e:	2800      	cmp	r0, #0
 801c990:	d1e5      	bne.n	801c95e <_svfprintf_r+0x12f6>
 801c992:	ac29      	add	r4, sp, #164	@ 0xa4
 801c994:	e7f4      	b.n	801c980 <_svfprintf_r+0x1318>
 801c996:	9803      	ldr	r0, [sp, #12]
 801c998:	4651      	mov	r1, sl
 801c99a:	f7fe fb5f 	bl	801b05c <_free_r>
 801c99e:	f7ff ba88 	b.w	801beb2 <_svfprintf_r+0x84a>
 801c9a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c9a4:	2b00      	cmp	r3, #0
 801c9a6:	f43f a878 	beq.w	801ba9a <_svfprintf_r+0x432>
 801c9aa:	9803      	ldr	r0, [sp, #12]
 801c9ac:	aa26      	add	r2, sp, #152	@ 0x98
 801c9ae:	4659      	mov	r1, fp
 801c9b0:	f001 fd2d 	bl	801e40e <__ssprint_r>
 801c9b4:	f7ff b871 	b.w	801ba9a <_svfprintf_r+0x432>
 801c9b8:	ea56 0207 	orrs.w	r2, r6, r7
 801c9bc:	9508      	str	r5, [sp, #32]
 801c9be:	f43f ab7a 	beq.w	801c0b6 <_svfprintf_r+0xa4e>
 801c9c2:	2b01      	cmp	r3, #1
 801c9c4:	f43f abfb 	beq.w	801c1be <_svfprintf_r+0xb56>
 801c9c8:	2b02      	cmp	r3, #2
 801c9ca:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801c9ce:	f43f ac3f 	beq.w	801c250 <_svfprintf_r+0xbe8>
 801c9d2:	f006 0307 	and.w	r3, r6, #7
 801c9d6:	08f6      	lsrs	r6, r6, #3
 801c9d8:	ea46 7647 	orr.w	r6, r6, r7, lsl #29
 801c9dc:	08ff      	lsrs	r7, r7, #3
 801c9de:	3330      	adds	r3, #48	@ 0x30
 801c9e0:	ea56 0107 	orrs.w	r1, r6, r7
 801c9e4:	464a      	mov	r2, r9
 801c9e6:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801c9ea:	d1f2      	bne.n	801c9d2 <_svfprintf_r+0x136a>
 801c9ec:	9908      	ldr	r1, [sp, #32]
 801c9ee:	07c8      	lsls	r0, r1, #31
 801c9f0:	d506      	bpl.n	801ca00 <_svfprintf_r+0x1398>
 801c9f2:	2b30      	cmp	r3, #48	@ 0x30
 801c9f4:	d004      	beq.n	801ca00 <_svfprintf_r+0x1398>
 801c9f6:	2330      	movs	r3, #48	@ 0x30
 801c9f8:	f809 3c01 	strb.w	r3, [r9, #-1]
 801c9fc:	f1a2 0902 	sub.w	r9, r2, #2
 801ca00:	ab52      	add	r3, sp, #328	@ 0x148
 801ca02:	9d08      	ldr	r5, [sp, #32]
 801ca04:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 801ca08:	f04f 0a00 	mov.w	sl, #0
 801ca0c:	eba3 0809 	sub.w	r8, r3, r9
 801ca10:	4657      	mov	r7, sl
 801ca12:	f8cd a020 	str.w	sl, [sp, #32]
 801ca16:	4656      	mov	r6, sl
 801ca18:	f7ff b97c 	b.w	801bd14 <_svfprintf_r+0x6ac>
 801ca1c:	08021618 	.word	0x08021618
 801ca20:	08021628 	.word	0x08021628

0801ca24 <_fclose_r>:
 801ca24:	b570      	push	{r4, r5, r6, lr}
 801ca26:	4605      	mov	r5, r0
 801ca28:	460c      	mov	r4, r1
 801ca2a:	b1b1      	cbz	r1, 801ca5a <_fclose_r+0x36>
 801ca2c:	b118      	cbz	r0, 801ca36 <_fclose_r+0x12>
 801ca2e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801ca30:	b90b      	cbnz	r3, 801ca36 <_fclose_r+0x12>
 801ca32:	f7fe f949 	bl	801acc8 <__sinit>
 801ca36:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801ca38:	07de      	lsls	r6, r3, #31
 801ca3a:	d405      	bmi.n	801ca48 <_fclose_r+0x24>
 801ca3c:	89a3      	ldrh	r3, [r4, #12]
 801ca3e:	0598      	lsls	r0, r3, #22
 801ca40:	d402      	bmi.n	801ca48 <_fclose_r+0x24>
 801ca42:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801ca44:	f7fe fa94 	bl	801af70 <__retarget_lock_acquire_recursive>
 801ca48:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ca4c:	b943      	cbnz	r3, 801ca60 <_fclose_r+0x3c>
 801ca4e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801ca50:	07d9      	lsls	r1, r3, #31
 801ca52:	d402      	bmi.n	801ca5a <_fclose_r+0x36>
 801ca54:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801ca56:	f7fe fa8c 	bl	801af72 <__retarget_lock_release_recursive>
 801ca5a:	2600      	movs	r6, #0
 801ca5c:	4630      	mov	r0, r6
 801ca5e:	bd70      	pop	{r4, r5, r6, pc}
 801ca60:	4621      	mov	r1, r4
 801ca62:	4628      	mov	r0, r5
 801ca64:	f000 f834 	bl	801cad0 <__sflush_r>
 801ca68:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801ca6a:	4606      	mov	r6, r0
 801ca6c:	b133      	cbz	r3, 801ca7c <_fclose_r+0x58>
 801ca6e:	69e1      	ldr	r1, [r4, #28]
 801ca70:	4628      	mov	r0, r5
 801ca72:	4798      	blx	r3
 801ca74:	2800      	cmp	r0, #0
 801ca76:	bfb8      	it	lt
 801ca78:	f04f 36ff 	movlt.w	r6, #4294967295
 801ca7c:	89a3      	ldrh	r3, [r4, #12]
 801ca7e:	061a      	lsls	r2, r3, #24
 801ca80:	d503      	bpl.n	801ca8a <_fclose_r+0x66>
 801ca82:	6921      	ldr	r1, [r4, #16]
 801ca84:	4628      	mov	r0, r5
 801ca86:	f7fe fae9 	bl	801b05c <_free_r>
 801ca8a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801ca8c:	b141      	cbz	r1, 801caa0 <_fclose_r+0x7c>
 801ca8e:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801ca92:	4299      	cmp	r1, r3
 801ca94:	d002      	beq.n	801ca9c <_fclose_r+0x78>
 801ca96:	4628      	mov	r0, r5
 801ca98:	f7fe fae0 	bl	801b05c <_free_r>
 801ca9c:	2300      	movs	r3, #0
 801ca9e:	6323      	str	r3, [r4, #48]	@ 0x30
 801caa0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801caa2:	b121      	cbz	r1, 801caae <_fclose_r+0x8a>
 801caa4:	4628      	mov	r0, r5
 801caa6:	f7fe fad9 	bl	801b05c <_free_r>
 801caaa:	2300      	movs	r3, #0
 801caac:	6463      	str	r3, [r4, #68]	@ 0x44
 801caae:	f7fe f8ff 	bl	801acb0 <__sfp_lock_acquire>
 801cab2:	2300      	movs	r3, #0
 801cab4:	81a3      	strh	r3, [r4, #12]
 801cab6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cab8:	07db      	lsls	r3, r3, #31
 801caba:	d402      	bmi.n	801cac2 <_fclose_r+0x9e>
 801cabc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cabe:	f7fe fa58 	bl	801af72 <__retarget_lock_release_recursive>
 801cac2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cac4:	f7fe fa53 	bl	801af6e <__retarget_lock_close_recursive>
 801cac8:	f7fe f8f8 	bl	801acbc <__sfp_lock_release>
 801cacc:	e7c6      	b.n	801ca5c <_fclose_r+0x38>
	...

0801cad0 <__sflush_r>:
 801cad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cad4:	4605      	mov	r5, r0
 801cad6:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 801cada:	0706      	lsls	r6, r0, #28
 801cadc:	460c      	mov	r4, r1
 801cade:	d457      	bmi.n	801cb90 <__sflush_r+0xc0>
 801cae0:	f440 6300 	orr.w	r3, r0, #2048	@ 0x800
 801cae4:	818b      	strh	r3, [r1, #12]
 801cae6:	684b      	ldr	r3, [r1, #4]
 801cae8:	2b00      	cmp	r3, #0
 801caea:	dc02      	bgt.n	801caf2 <__sflush_r+0x22>
 801caec:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 801caee:	2b00      	cmp	r3, #0
 801caf0:	dd4c      	ble.n	801cb8c <__sflush_r+0xbc>
 801caf2:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801caf4:	2e00      	cmp	r6, #0
 801caf6:	d049      	beq.n	801cb8c <__sflush_r+0xbc>
 801caf8:	2300      	movs	r3, #0
 801cafa:	f410 5280 	ands.w	r2, r0, #4096	@ 0x1000
 801cafe:	682f      	ldr	r7, [r5, #0]
 801cb00:	69e1      	ldr	r1, [r4, #28]
 801cb02:	602b      	str	r3, [r5, #0]
 801cb04:	d034      	beq.n	801cb70 <__sflush_r+0xa0>
 801cb06:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801cb08:	89a3      	ldrh	r3, [r4, #12]
 801cb0a:	0759      	lsls	r1, r3, #29
 801cb0c:	d505      	bpl.n	801cb1a <__sflush_r+0x4a>
 801cb0e:	6863      	ldr	r3, [r4, #4]
 801cb10:	1ad2      	subs	r2, r2, r3
 801cb12:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cb14:	b10b      	cbz	r3, 801cb1a <__sflush_r+0x4a>
 801cb16:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801cb18:	1ad2      	subs	r2, r2, r3
 801cb1a:	2300      	movs	r3, #0
 801cb1c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801cb1e:	69e1      	ldr	r1, [r4, #28]
 801cb20:	4628      	mov	r0, r5
 801cb22:	47b0      	blx	r6
 801cb24:	1c43      	adds	r3, r0, #1
 801cb26:	d106      	bne.n	801cb36 <__sflush_r+0x66>
 801cb28:	682a      	ldr	r2, [r5, #0]
 801cb2a:	2a1d      	cmp	r2, #29
 801cb2c:	d848      	bhi.n	801cbc0 <__sflush_r+0xf0>
 801cb2e:	4b2b      	ldr	r3, [pc, #172]	@ (801cbdc <__sflush_r+0x10c>)
 801cb30:	4113      	asrs	r3, r2
 801cb32:	07de      	lsls	r6, r3, #31
 801cb34:	d444      	bmi.n	801cbc0 <__sflush_r+0xf0>
 801cb36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cb3a:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 801cb3e:	81a2      	strh	r2, [r4, #12]
 801cb40:	2200      	movs	r2, #0
 801cb42:	6062      	str	r2, [r4, #4]
 801cb44:	04d9      	lsls	r1, r3, #19
 801cb46:	6922      	ldr	r2, [r4, #16]
 801cb48:	6022      	str	r2, [r4, #0]
 801cb4a:	d504      	bpl.n	801cb56 <__sflush_r+0x86>
 801cb4c:	1c42      	adds	r2, r0, #1
 801cb4e:	d101      	bne.n	801cb54 <__sflush_r+0x84>
 801cb50:	682b      	ldr	r3, [r5, #0]
 801cb52:	b903      	cbnz	r3, 801cb56 <__sflush_r+0x86>
 801cb54:	6520      	str	r0, [r4, #80]	@ 0x50
 801cb56:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801cb58:	602f      	str	r7, [r5, #0]
 801cb5a:	b1b9      	cbz	r1, 801cb8c <__sflush_r+0xbc>
 801cb5c:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801cb60:	4299      	cmp	r1, r3
 801cb62:	d002      	beq.n	801cb6a <__sflush_r+0x9a>
 801cb64:	4628      	mov	r0, r5
 801cb66:	f7fe fa79 	bl	801b05c <_free_r>
 801cb6a:	2300      	movs	r3, #0
 801cb6c:	6323      	str	r3, [r4, #48]	@ 0x30
 801cb6e:	e00d      	b.n	801cb8c <__sflush_r+0xbc>
 801cb70:	2301      	movs	r3, #1
 801cb72:	4628      	mov	r0, r5
 801cb74:	47b0      	blx	r6
 801cb76:	4602      	mov	r2, r0
 801cb78:	1c50      	adds	r0, r2, #1
 801cb7a:	d1c5      	bne.n	801cb08 <__sflush_r+0x38>
 801cb7c:	682b      	ldr	r3, [r5, #0]
 801cb7e:	2b00      	cmp	r3, #0
 801cb80:	d0c2      	beq.n	801cb08 <__sflush_r+0x38>
 801cb82:	2b1d      	cmp	r3, #29
 801cb84:	d001      	beq.n	801cb8a <__sflush_r+0xba>
 801cb86:	2b16      	cmp	r3, #22
 801cb88:	d11a      	bne.n	801cbc0 <__sflush_r+0xf0>
 801cb8a:	602f      	str	r7, [r5, #0]
 801cb8c:	2000      	movs	r0, #0
 801cb8e:	e01e      	b.n	801cbce <__sflush_r+0xfe>
 801cb90:	690f      	ldr	r7, [r1, #16]
 801cb92:	2f00      	cmp	r7, #0
 801cb94:	d0fa      	beq.n	801cb8c <__sflush_r+0xbc>
 801cb96:	0783      	lsls	r3, r0, #30
 801cb98:	680e      	ldr	r6, [r1, #0]
 801cb9a:	bf08      	it	eq
 801cb9c:	694b      	ldreq	r3, [r1, #20]
 801cb9e:	600f      	str	r7, [r1, #0]
 801cba0:	bf18      	it	ne
 801cba2:	2300      	movne	r3, #0
 801cba4:	eba6 0807 	sub.w	r8, r6, r7
 801cba8:	608b      	str	r3, [r1, #8]
 801cbaa:	f1b8 0f00 	cmp.w	r8, #0
 801cbae:	dded      	ble.n	801cb8c <__sflush_r+0xbc>
 801cbb0:	69e1      	ldr	r1, [r4, #28]
 801cbb2:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 801cbb4:	4643      	mov	r3, r8
 801cbb6:	463a      	mov	r2, r7
 801cbb8:	4628      	mov	r0, r5
 801cbba:	47b0      	blx	r6
 801cbbc:	2800      	cmp	r0, #0
 801cbbe:	dc08      	bgt.n	801cbd2 <__sflush_r+0x102>
 801cbc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cbc4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801cbc8:	81a3      	strh	r3, [r4, #12]
 801cbca:	f04f 30ff 	mov.w	r0, #4294967295
 801cbce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cbd2:	4407      	add	r7, r0
 801cbd4:	eba8 0800 	sub.w	r8, r8, r0
 801cbd8:	e7e7      	b.n	801cbaa <__sflush_r+0xda>
 801cbda:	bf00      	nop
 801cbdc:	dfbffffe 	.word	0xdfbffffe

0801cbe0 <_fflush_r>:
 801cbe0:	b538      	push	{r3, r4, r5, lr}
 801cbe2:	460c      	mov	r4, r1
 801cbe4:	4605      	mov	r5, r0
 801cbe6:	b118      	cbz	r0, 801cbf0 <_fflush_r+0x10>
 801cbe8:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801cbea:	b90b      	cbnz	r3, 801cbf0 <_fflush_r+0x10>
 801cbec:	f7fe f86c 	bl	801acc8 <__sinit>
 801cbf0:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 801cbf4:	b1b8      	cbz	r0, 801cc26 <_fflush_r+0x46>
 801cbf6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cbf8:	07db      	lsls	r3, r3, #31
 801cbfa:	d404      	bmi.n	801cc06 <_fflush_r+0x26>
 801cbfc:	0581      	lsls	r1, r0, #22
 801cbfe:	d402      	bmi.n	801cc06 <_fflush_r+0x26>
 801cc00:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cc02:	f7fe f9b5 	bl	801af70 <__retarget_lock_acquire_recursive>
 801cc06:	4628      	mov	r0, r5
 801cc08:	4621      	mov	r1, r4
 801cc0a:	f7ff ff61 	bl	801cad0 <__sflush_r>
 801cc0e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cc10:	07da      	lsls	r2, r3, #31
 801cc12:	4605      	mov	r5, r0
 801cc14:	d405      	bmi.n	801cc22 <_fflush_r+0x42>
 801cc16:	89a3      	ldrh	r3, [r4, #12]
 801cc18:	059b      	lsls	r3, r3, #22
 801cc1a:	d402      	bmi.n	801cc22 <_fflush_r+0x42>
 801cc1c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cc1e:	f7fe f9a8 	bl	801af72 <__retarget_lock_release_recursive>
 801cc22:	4628      	mov	r0, r5
 801cc24:	bd38      	pop	{r3, r4, r5, pc}
 801cc26:	4605      	mov	r5, r0
 801cc28:	e7fb      	b.n	801cc22 <_fflush_r+0x42>

0801cc2a <strncpy>:
 801cc2a:	b510      	push	{r4, lr}
 801cc2c:	3901      	subs	r1, #1
 801cc2e:	4603      	mov	r3, r0
 801cc30:	b132      	cbz	r2, 801cc40 <strncpy+0x16>
 801cc32:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801cc36:	f803 4b01 	strb.w	r4, [r3], #1
 801cc3a:	3a01      	subs	r2, #1
 801cc3c:	2c00      	cmp	r4, #0
 801cc3e:	d1f7      	bne.n	801cc30 <strncpy+0x6>
 801cc40:	441a      	add	r2, r3
 801cc42:	2100      	movs	r1, #0
 801cc44:	4293      	cmp	r3, r2
 801cc46:	d100      	bne.n	801cc4a <strncpy+0x20>
 801cc48:	bd10      	pop	{r4, pc}
 801cc4a:	f803 1b01 	strb.w	r1, [r3], #1
 801cc4e:	e7f9      	b.n	801cc44 <strncpy+0x1a>

0801cc50 <__locale_mb_cur_max>:
 801cc50:	4b01      	ldr	r3, [pc, #4]	@ (801cc58 <__locale_mb_cur_max+0x8>)
 801cc52:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
 801cc56:	4770      	bx	lr
 801cc58:	2000065c 	.word	0x2000065c

0801cc5c <_localeconv_r>:
 801cc5c:	4800      	ldr	r0, [pc, #0]	@ (801cc60 <_localeconv_r+0x4>)
 801cc5e:	4770      	bx	lr
 801cc60:	2000074c 	.word	0x2000074c

0801cc64 <_sbrk_r>:
 801cc64:	b538      	push	{r3, r4, r5, lr}
 801cc66:	4d06      	ldr	r5, [pc, #24]	@ (801cc80 <_sbrk_r+0x1c>)
 801cc68:	2300      	movs	r3, #0
 801cc6a:	4604      	mov	r4, r0
 801cc6c:	4608      	mov	r0, r1
 801cc6e:	602b      	str	r3, [r5, #0]
 801cc70:	f7e7 f934 	bl	8003edc <_sbrk>
 801cc74:	1c43      	adds	r3, r0, #1
 801cc76:	d102      	bne.n	801cc7e <_sbrk_r+0x1a>
 801cc78:	682b      	ldr	r3, [r5, #0]
 801cc7a:	b103      	cbz	r3, 801cc7e <_sbrk_r+0x1a>
 801cc7c:	6023      	str	r3, [r4, #0]
 801cc7e:	bd38      	pop	{r3, r4, r5, pc}
 801cc80:	2000d0b4 	.word	0x2000d0b4

0801cc84 <__libc_fini_array>:
 801cc84:	b538      	push	{r3, r4, r5, lr}
 801cc86:	4d07      	ldr	r5, [pc, #28]	@ (801cca4 <__libc_fini_array+0x20>)
 801cc88:	4c07      	ldr	r4, [pc, #28]	@ (801cca8 <__libc_fini_array+0x24>)
 801cc8a:	1b64      	subs	r4, r4, r5
 801cc8c:	10a4      	asrs	r4, r4, #2
 801cc8e:	b91c      	cbnz	r4, 801cc98 <__libc_fini_array+0x14>
 801cc90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cc94:	f004 b8e6 	b.w	8020e64 <_fini>
 801cc98:	3c01      	subs	r4, #1
 801cc9a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 801cc9e:	4798      	blx	r3
 801cca0:	e7f5      	b.n	801cc8e <__libc_fini_array+0xa>
 801cca2:	bf00      	nop
 801cca4:	08021bc8 	.word	0x08021bc8
 801cca8:	08021bcc 	.word	0x08021bcc

0801ccac <sysconf>:
 801ccac:	2808      	cmp	r0, #8
 801ccae:	b508      	push	{r3, lr}
 801ccb0:	d006      	beq.n	801ccc0 <sysconf+0x14>
 801ccb2:	f7fe f931 	bl	801af18 <__errno>
 801ccb6:	2316      	movs	r3, #22
 801ccb8:	6003      	str	r3, [r0, #0]
 801ccba:	f04f 30ff 	mov.w	r0, #4294967295
 801ccbe:	bd08      	pop	{r3, pc}
 801ccc0:	2080      	movs	r0, #128	@ 0x80
 801ccc2:	e7fc      	b.n	801ccbe <sysconf+0x12>

0801ccc4 <frexp>:
 801ccc4:	b570      	push	{r4, r5, r6, lr}
 801ccc6:	2100      	movs	r1, #0
 801ccc8:	ec55 4b10 	vmov	r4, r5, d0
 801cccc:	6001      	str	r1, [r0, #0]
 801ccce:	4915      	ldr	r1, [pc, #84]	@ (801cd24 <frexp+0x60>)
 801ccd0:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801ccd4:	428a      	cmp	r2, r1
 801ccd6:	4606      	mov	r6, r0
 801ccd8:	462b      	mov	r3, r5
 801ccda:	d820      	bhi.n	801cd1e <frexp+0x5a>
 801ccdc:	4621      	mov	r1, r4
 801ccde:	4311      	orrs	r1, r2
 801cce0:	d01d      	beq.n	801cd1e <frexp+0x5a>
 801cce2:	4911      	ldr	r1, [pc, #68]	@ (801cd28 <frexp+0x64>)
 801cce4:	4029      	ands	r1, r5
 801cce6:	b961      	cbnz	r1, 801cd02 <frexp+0x3e>
 801cce8:	4b10      	ldr	r3, [pc, #64]	@ (801cd2c <frexp+0x68>)
 801ccea:	2200      	movs	r2, #0
 801ccec:	4620      	mov	r0, r4
 801ccee:	4629      	mov	r1, r5
 801ccf0:	f7e3 fc82 	bl	80005f8 <__aeabi_dmul>
 801ccf4:	460b      	mov	r3, r1
 801ccf6:	f021 4200 	bic.w	r2, r1, #2147483648	@ 0x80000000
 801ccfa:	f06f 0135 	mvn.w	r1, #53	@ 0x35
 801ccfe:	4604      	mov	r4, r0
 801cd00:	6031      	str	r1, [r6, #0]
 801cd02:	6831      	ldr	r1, [r6, #0]
 801cd04:	1512      	asrs	r2, r2, #20
 801cd06:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 801cd0a:	f2a2 32fe 	subw	r2, r2, #1022	@ 0x3fe
 801cd0e:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 801cd12:	4411      	add	r1, r2
 801cd14:	f043 557f 	orr.w	r5, r3, #1069547520	@ 0x3fc00000
 801cd18:	6031      	str	r1, [r6, #0]
 801cd1a:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
 801cd1e:	ec45 4b10 	vmov	d0, r4, r5
 801cd22:	bd70      	pop	{r4, r5, r6, pc}
 801cd24:	7fefffff 	.word	0x7fefffff
 801cd28:	7ff00000 	.word	0x7ff00000
 801cd2c:	43500000 	.word	0x43500000

0801cd30 <__register_exitproc>:
 801cd30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cd34:	f8df a074 	ldr.w	sl, [pc, #116]	@ 801cdac <__register_exitproc+0x7c>
 801cd38:	4606      	mov	r6, r0
 801cd3a:	f8da 0000 	ldr.w	r0, [sl]
 801cd3e:	4698      	mov	r8, r3
 801cd40:	460f      	mov	r7, r1
 801cd42:	4691      	mov	r9, r2
 801cd44:	f7fe f914 	bl	801af70 <__retarget_lock_acquire_recursive>
 801cd48:	4b16      	ldr	r3, [pc, #88]	@ (801cda4 <__register_exitproc+0x74>)
 801cd4a:	681c      	ldr	r4, [r3, #0]
 801cd4c:	b90c      	cbnz	r4, 801cd52 <__register_exitproc+0x22>
 801cd4e:	4c16      	ldr	r4, [pc, #88]	@ (801cda8 <__register_exitproc+0x78>)
 801cd50:	601c      	str	r4, [r3, #0]
 801cd52:	6865      	ldr	r5, [r4, #4]
 801cd54:	f8da 0000 	ldr.w	r0, [sl]
 801cd58:	2d1f      	cmp	r5, #31
 801cd5a:	dd05      	ble.n	801cd68 <__register_exitproc+0x38>
 801cd5c:	f7fe f909 	bl	801af72 <__retarget_lock_release_recursive>
 801cd60:	f04f 30ff 	mov.w	r0, #4294967295
 801cd64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cd68:	b19e      	cbz	r6, 801cd92 <__register_exitproc+0x62>
 801cd6a:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 801cd6e:	2201      	movs	r2, #1
 801cd70:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
 801cd74:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
 801cd78:	40aa      	lsls	r2, r5
 801cd7a:	4313      	orrs	r3, r2
 801cd7c:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
 801cd80:	2e02      	cmp	r6, #2
 801cd82:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
 801cd86:	bf02      	ittt	eq
 801cd88:	f8d4 318c 	ldreq.w	r3, [r4, #396]	@ 0x18c
 801cd8c:	4313      	orreq	r3, r2
 801cd8e:	f8c4 318c 	streq.w	r3, [r4, #396]	@ 0x18c
 801cd92:	1c6b      	adds	r3, r5, #1
 801cd94:	3502      	adds	r5, #2
 801cd96:	6063      	str	r3, [r4, #4]
 801cd98:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 801cd9c:	f7fe f8e9 	bl	801af72 <__retarget_lock_release_recursive>
 801cda0:	2000      	movs	r0, #0
 801cda2:	e7df      	b.n	801cd64 <__register_exitproc+0x34>
 801cda4:	2000d0bc 	.word	0x2000d0bc
 801cda8:	2000d0f4 	.word	0x2000d0f4
 801cdac:	20000248 	.word	0x20000248

0801cdb0 <quorem>:
 801cdb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdb4:	6903      	ldr	r3, [r0, #16]
 801cdb6:	690c      	ldr	r4, [r1, #16]
 801cdb8:	42a3      	cmp	r3, r4
 801cdba:	4607      	mov	r7, r0
 801cdbc:	db7e      	blt.n	801cebc <quorem+0x10c>
 801cdbe:	3c01      	subs	r4, #1
 801cdc0:	f101 0814 	add.w	r8, r1, #20
 801cdc4:	00a3      	lsls	r3, r4, #2
 801cdc6:	f100 0514 	add.w	r5, r0, #20
 801cdca:	9300      	str	r3, [sp, #0]
 801cdcc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cdd0:	9301      	str	r3, [sp, #4]
 801cdd2:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801cdd6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801cdda:	3301      	adds	r3, #1
 801cddc:	429a      	cmp	r2, r3
 801cdde:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801cde2:	fbb2 f6f3 	udiv	r6, r2, r3
 801cde6:	d32e      	bcc.n	801ce46 <quorem+0x96>
 801cde8:	f04f 0a00 	mov.w	sl, #0
 801cdec:	46c4      	mov	ip, r8
 801cdee:	46ae      	mov	lr, r5
 801cdf0:	46d3      	mov	fp, sl
 801cdf2:	f85c 3b04 	ldr.w	r3, [ip], #4
 801cdf6:	b298      	uxth	r0, r3
 801cdf8:	fb06 a000 	mla	r0, r6, r0, sl
 801cdfc:	0c02      	lsrs	r2, r0, #16
 801cdfe:	0c1b      	lsrs	r3, r3, #16
 801ce00:	fb06 2303 	mla	r3, r6, r3, r2
 801ce04:	f8de 2000 	ldr.w	r2, [lr]
 801ce08:	b280      	uxth	r0, r0
 801ce0a:	b292      	uxth	r2, r2
 801ce0c:	1a12      	subs	r2, r2, r0
 801ce0e:	445a      	add	r2, fp
 801ce10:	f8de 0000 	ldr.w	r0, [lr]
 801ce14:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801ce18:	b29b      	uxth	r3, r3
 801ce1a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 801ce1e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 801ce22:	b292      	uxth	r2, r2
 801ce24:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 801ce28:	45e1      	cmp	r9, ip
 801ce2a:	f84e 2b04 	str.w	r2, [lr], #4
 801ce2e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 801ce32:	d2de      	bcs.n	801cdf2 <quorem+0x42>
 801ce34:	9b00      	ldr	r3, [sp, #0]
 801ce36:	58eb      	ldr	r3, [r5, r3]
 801ce38:	b92b      	cbnz	r3, 801ce46 <quorem+0x96>
 801ce3a:	9b01      	ldr	r3, [sp, #4]
 801ce3c:	3b04      	subs	r3, #4
 801ce3e:	429d      	cmp	r5, r3
 801ce40:	461a      	mov	r2, r3
 801ce42:	d32f      	bcc.n	801cea4 <quorem+0xf4>
 801ce44:	613c      	str	r4, [r7, #16]
 801ce46:	4638      	mov	r0, r7
 801ce48:	f001 f824 	bl	801de94 <__mcmp>
 801ce4c:	2800      	cmp	r0, #0
 801ce4e:	db25      	blt.n	801ce9c <quorem+0xec>
 801ce50:	4629      	mov	r1, r5
 801ce52:	2000      	movs	r0, #0
 801ce54:	f858 2b04 	ldr.w	r2, [r8], #4
 801ce58:	f8d1 c000 	ldr.w	ip, [r1]
 801ce5c:	fa1f fe82 	uxth.w	lr, r2
 801ce60:	fa1f f38c 	uxth.w	r3, ip
 801ce64:	eba3 030e 	sub.w	r3, r3, lr
 801ce68:	4403      	add	r3, r0
 801ce6a:	0c12      	lsrs	r2, r2, #16
 801ce6c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 801ce70:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 801ce74:	b29b      	uxth	r3, r3
 801ce76:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ce7a:	45c1      	cmp	r9, r8
 801ce7c:	f841 3b04 	str.w	r3, [r1], #4
 801ce80:	ea4f 4022 	mov.w	r0, r2, asr #16
 801ce84:	d2e6      	bcs.n	801ce54 <quorem+0xa4>
 801ce86:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801ce8a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801ce8e:	b922      	cbnz	r2, 801ce9a <quorem+0xea>
 801ce90:	3b04      	subs	r3, #4
 801ce92:	429d      	cmp	r5, r3
 801ce94:	461a      	mov	r2, r3
 801ce96:	d30b      	bcc.n	801ceb0 <quorem+0x100>
 801ce98:	613c      	str	r4, [r7, #16]
 801ce9a:	3601      	adds	r6, #1
 801ce9c:	4630      	mov	r0, r6
 801ce9e:	b003      	add	sp, #12
 801cea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cea4:	6812      	ldr	r2, [r2, #0]
 801cea6:	3b04      	subs	r3, #4
 801cea8:	2a00      	cmp	r2, #0
 801ceaa:	d1cb      	bne.n	801ce44 <quorem+0x94>
 801ceac:	3c01      	subs	r4, #1
 801ceae:	e7c6      	b.n	801ce3e <quorem+0x8e>
 801ceb0:	6812      	ldr	r2, [r2, #0]
 801ceb2:	3b04      	subs	r3, #4
 801ceb4:	2a00      	cmp	r2, #0
 801ceb6:	d1ef      	bne.n	801ce98 <quorem+0xe8>
 801ceb8:	3c01      	subs	r4, #1
 801ceba:	e7ea      	b.n	801ce92 <quorem+0xe2>
 801cebc:	2000      	movs	r0, #0
 801cebe:	e7ee      	b.n	801ce9e <quorem+0xee>

0801cec0 <_dtoa_r>:
 801cec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cec4:	b099      	sub	sp, #100	@ 0x64
 801cec6:	ed8d 0b02 	vstr	d0, [sp, #8]
 801ceca:	9109      	str	r1, [sp, #36]	@ 0x24
 801cecc:	6b81      	ldr	r1, [r0, #56]	@ 0x38
 801cece:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801ced0:	920e      	str	r2, [sp, #56]	@ 0x38
 801ced2:	ec55 4b10 	vmov	r4, r5, d0
 801ced6:	4683      	mov	fp, r0
 801ced8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ceda:	b149      	cbz	r1, 801cef0 <_dtoa_r+0x30>
 801cedc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801cede:	604a      	str	r2, [r1, #4]
 801cee0:	2301      	movs	r3, #1
 801cee2:	4093      	lsls	r3, r2
 801cee4:	608b      	str	r3, [r1, #8]
 801cee6:	f000 fdce 	bl	801da86 <_Bfree>
 801ceea:	2300      	movs	r3, #0
 801ceec:	f8cb 3038 	str.w	r3, [fp, #56]	@ 0x38
 801cef0:	1e2b      	subs	r3, r5, #0
 801cef2:	bfb9      	ittee	lt
 801cef4:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 801cef8:	9303      	strlt	r3, [sp, #12]
 801cefa:	2300      	movge	r3, #0
 801cefc:	6033      	strge	r3, [r6, #0]
 801cefe:	9f03      	ldr	r7, [sp, #12]
 801cf00:	4b97      	ldr	r3, [pc, #604]	@ (801d160 <_dtoa_r+0x2a0>)
 801cf02:	bfbc      	itt	lt
 801cf04:	2201      	movlt	r2, #1
 801cf06:	6032      	strlt	r2, [r6, #0]
 801cf08:	43bb      	bics	r3, r7
 801cf0a:	d114      	bne.n	801cf36 <_dtoa_r+0x76>
 801cf0c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cf0e:	f242 730f 	movw	r3, #9999	@ 0x270f
 801cf12:	6013      	str	r3, [r2, #0]
 801cf14:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801cf18:	4323      	orrs	r3, r4
 801cf1a:	f000 854c 	beq.w	801d9b6 <_dtoa_r+0xaf6>
 801cf1e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801cf20:	f8df a254 	ldr.w	sl, [pc, #596]	@ 801d178 <_dtoa_r+0x2b8>
 801cf24:	b11b      	cbz	r3, 801cf2e <_dtoa_r+0x6e>
 801cf26:	f10a 0303 	add.w	r3, sl, #3
 801cf2a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cf2c:	6013      	str	r3, [r2, #0]
 801cf2e:	4650      	mov	r0, sl
 801cf30:	b019      	add	sp, #100	@ 0x64
 801cf32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf36:	ed9d 7b02 	vldr	d7, [sp, #8]
 801cf3a:	2200      	movs	r2, #0
 801cf3c:	ec51 0b17 	vmov	r0, r1, d7
 801cf40:	2300      	movs	r3, #0
 801cf42:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 801cf46:	f7e3 fdbf 	bl	8000ac8 <__aeabi_dcmpeq>
 801cf4a:	4680      	mov	r8, r0
 801cf4c:	b150      	cbz	r0, 801cf64 <_dtoa_r+0xa4>
 801cf4e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cf50:	2301      	movs	r3, #1
 801cf52:	6013      	str	r3, [r2, #0]
 801cf54:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801cf56:	b113      	cbz	r3, 801cf5e <_dtoa_r+0x9e>
 801cf58:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cf5a:	4b82      	ldr	r3, [pc, #520]	@ (801d164 <_dtoa_r+0x2a4>)
 801cf5c:	6013      	str	r3, [r2, #0]
 801cf5e:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 801d17c <_dtoa_r+0x2bc>
 801cf62:	e7e4      	b.n	801cf2e <_dtoa_r+0x6e>
 801cf64:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 801cf68:	aa16      	add	r2, sp, #88	@ 0x58
 801cf6a:	a917      	add	r1, sp, #92	@ 0x5c
 801cf6c:	4658      	mov	r0, fp
 801cf6e:	f001 f841 	bl	801dff4 <__d2b>
 801cf72:	f3c7 560a 	ubfx	r6, r7, #20, #11
 801cf76:	4681      	mov	r9, r0
 801cf78:	2e00      	cmp	r6, #0
 801cf7a:	d077      	beq.n	801d06c <_dtoa_r+0x1ac>
 801cf7c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cf7e:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 801cf82:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801cf86:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801cf8a:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 801cf8e:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 801cf92:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 801cf96:	4619      	mov	r1, r3
 801cf98:	2200      	movs	r2, #0
 801cf9a:	4b73      	ldr	r3, [pc, #460]	@ (801d168 <_dtoa_r+0x2a8>)
 801cf9c:	f7e3 f974 	bl	8000288 <__aeabi_dsub>
 801cfa0:	a369      	add	r3, pc, #420	@ (adr r3, 801d148 <_dtoa_r+0x288>)
 801cfa2:	e9d3 2300 	ldrd	r2, r3, [r3]
 801cfa6:	f7e3 fb27 	bl	80005f8 <__aeabi_dmul>
 801cfaa:	a369      	add	r3, pc, #420	@ (adr r3, 801d150 <_dtoa_r+0x290>)
 801cfac:	e9d3 2300 	ldrd	r2, r3, [r3]
 801cfb0:	f7e3 f96c 	bl	800028c <__adddf3>
 801cfb4:	4604      	mov	r4, r0
 801cfb6:	4630      	mov	r0, r6
 801cfb8:	460d      	mov	r5, r1
 801cfba:	f7e3 fab3 	bl	8000524 <__aeabi_i2d>
 801cfbe:	a366      	add	r3, pc, #408	@ (adr r3, 801d158 <_dtoa_r+0x298>)
 801cfc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 801cfc4:	f7e3 fb18 	bl	80005f8 <__aeabi_dmul>
 801cfc8:	4602      	mov	r2, r0
 801cfca:	460b      	mov	r3, r1
 801cfcc:	4620      	mov	r0, r4
 801cfce:	4629      	mov	r1, r5
 801cfd0:	f7e3 f95c 	bl	800028c <__adddf3>
 801cfd4:	4604      	mov	r4, r0
 801cfd6:	460d      	mov	r5, r1
 801cfd8:	f7e3 fdbe 	bl	8000b58 <__aeabi_d2iz>
 801cfdc:	2200      	movs	r2, #0
 801cfde:	4607      	mov	r7, r0
 801cfe0:	2300      	movs	r3, #0
 801cfe2:	4620      	mov	r0, r4
 801cfe4:	4629      	mov	r1, r5
 801cfe6:	f7e3 fd79 	bl	8000adc <__aeabi_dcmplt>
 801cfea:	b140      	cbz	r0, 801cffe <_dtoa_r+0x13e>
 801cfec:	4638      	mov	r0, r7
 801cfee:	f7e3 fa99 	bl	8000524 <__aeabi_i2d>
 801cff2:	4622      	mov	r2, r4
 801cff4:	462b      	mov	r3, r5
 801cff6:	f7e3 fd67 	bl	8000ac8 <__aeabi_dcmpeq>
 801cffa:	b900      	cbnz	r0, 801cffe <_dtoa_r+0x13e>
 801cffc:	3f01      	subs	r7, #1
 801cffe:	2f16      	cmp	r7, #22
 801d000:	d851      	bhi.n	801d0a6 <_dtoa_r+0x1e6>
 801d002:	4b5a      	ldr	r3, [pc, #360]	@ (801d16c <_dtoa_r+0x2ac>)
 801d004:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d008:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d00c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d010:	f7e3 fd64 	bl	8000adc <__aeabi_dcmplt>
 801d014:	2800      	cmp	r0, #0
 801d016:	d048      	beq.n	801d0aa <_dtoa_r+0x1ea>
 801d018:	3f01      	subs	r7, #1
 801d01a:	2300      	movs	r3, #0
 801d01c:	9312      	str	r3, [sp, #72]	@ 0x48
 801d01e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d020:	1b9b      	subs	r3, r3, r6
 801d022:	1e5a      	subs	r2, r3, #1
 801d024:	bf44      	itt	mi
 801d026:	f1c3 0801 	rsbmi	r8, r3, #1
 801d02a:	2300      	movmi	r3, #0
 801d02c:	9208      	str	r2, [sp, #32]
 801d02e:	bf54      	ite	pl
 801d030:	f04f 0800 	movpl.w	r8, #0
 801d034:	9308      	strmi	r3, [sp, #32]
 801d036:	2f00      	cmp	r7, #0
 801d038:	db39      	blt.n	801d0ae <_dtoa_r+0x1ee>
 801d03a:	9b08      	ldr	r3, [sp, #32]
 801d03c:	970f      	str	r7, [sp, #60]	@ 0x3c
 801d03e:	443b      	add	r3, r7
 801d040:	9308      	str	r3, [sp, #32]
 801d042:	2300      	movs	r3, #0
 801d044:	930a      	str	r3, [sp, #40]	@ 0x28
 801d046:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d048:	2b09      	cmp	r3, #9
 801d04a:	d865      	bhi.n	801d118 <_dtoa_r+0x258>
 801d04c:	2b05      	cmp	r3, #5
 801d04e:	bfc4      	itt	gt
 801d050:	3b04      	subgt	r3, #4
 801d052:	9309      	strgt	r3, [sp, #36]	@ 0x24
 801d054:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d056:	f1a3 0302 	sub.w	r3, r3, #2
 801d05a:	bfcc      	ite	gt
 801d05c:	2400      	movgt	r4, #0
 801d05e:	2401      	movle	r4, #1
 801d060:	2b03      	cmp	r3, #3
 801d062:	d864      	bhi.n	801d12e <_dtoa_r+0x26e>
 801d064:	e8df f003 	tbb	[pc, r3]
 801d068:	5635372a 	.word	0x5635372a
 801d06c:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 801d070:	441e      	add	r6, r3
 801d072:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 801d076:	2b20      	cmp	r3, #32
 801d078:	bfc1      	itttt	gt
 801d07a:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 801d07e:	409f      	lslgt	r7, r3
 801d080:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 801d084:	fa24 f303 	lsrgt.w	r3, r4, r3
 801d088:	bfd6      	itet	le
 801d08a:	f1c3 0320 	rsble	r3, r3, #32
 801d08e:	ea47 0003 	orrgt.w	r0, r7, r3
 801d092:	fa04 f003 	lslle.w	r0, r4, r3
 801d096:	f7e3 fa35 	bl	8000504 <__aeabi_ui2d>
 801d09a:	2201      	movs	r2, #1
 801d09c:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 801d0a0:	3e01      	subs	r6, #1
 801d0a2:	9214      	str	r2, [sp, #80]	@ 0x50
 801d0a4:	e777      	b.n	801cf96 <_dtoa_r+0xd6>
 801d0a6:	2301      	movs	r3, #1
 801d0a8:	e7b8      	b.n	801d01c <_dtoa_r+0x15c>
 801d0aa:	9012      	str	r0, [sp, #72]	@ 0x48
 801d0ac:	e7b7      	b.n	801d01e <_dtoa_r+0x15e>
 801d0ae:	427b      	negs	r3, r7
 801d0b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d0b2:	2300      	movs	r3, #0
 801d0b4:	eba8 0807 	sub.w	r8, r8, r7
 801d0b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d0ba:	e7c4      	b.n	801d046 <_dtoa_r+0x186>
 801d0bc:	2300      	movs	r3, #0
 801d0be:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d0c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d0c2:	2b00      	cmp	r3, #0
 801d0c4:	dc36      	bgt.n	801d134 <_dtoa_r+0x274>
 801d0c6:	2301      	movs	r3, #1
 801d0c8:	9300      	str	r3, [sp, #0]
 801d0ca:	9307      	str	r3, [sp, #28]
 801d0cc:	461a      	mov	r2, r3
 801d0ce:	920e      	str	r2, [sp, #56]	@ 0x38
 801d0d0:	e00b      	b.n	801d0ea <_dtoa_r+0x22a>
 801d0d2:	2301      	movs	r3, #1
 801d0d4:	e7f3      	b.n	801d0be <_dtoa_r+0x1fe>
 801d0d6:	2300      	movs	r3, #0
 801d0d8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d0da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d0dc:	18fb      	adds	r3, r7, r3
 801d0de:	9300      	str	r3, [sp, #0]
 801d0e0:	3301      	adds	r3, #1
 801d0e2:	2b01      	cmp	r3, #1
 801d0e4:	9307      	str	r3, [sp, #28]
 801d0e6:	bfb8      	it	lt
 801d0e8:	2301      	movlt	r3, #1
 801d0ea:	2100      	movs	r1, #0
 801d0ec:	2204      	movs	r2, #4
 801d0ee:	f102 0014 	add.w	r0, r2, #20
 801d0f2:	4298      	cmp	r0, r3
 801d0f4:	d922      	bls.n	801d13c <_dtoa_r+0x27c>
 801d0f6:	f8cb 103c 	str.w	r1, [fp, #60]	@ 0x3c
 801d0fa:	4658      	mov	r0, fp
 801d0fc:	f000 fc9e 	bl	801da3c <_Balloc>
 801d100:	4682      	mov	sl, r0
 801d102:	2800      	cmp	r0, #0
 801d104:	d13c      	bne.n	801d180 <_dtoa_r+0x2c0>
 801d106:	4b1a      	ldr	r3, [pc, #104]	@ (801d170 <_dtoa_r+0x2b0>)
 801d108:	4602      	mov	r2, r0
 801d10a:	f240 11af 	movw	r1, #431	@ 0x1af
 801d10e:	4819      	ldr	r0, [pc, #100]	@ (801d174 <_dtoa_r+0x2b4>)
 801d110:	f001 fa14 	bl	801e53c <__assert_func>
 801d114:	2301      	movs	r3, #1
 801d116:	e7df      	b.n	801d0d8 <_dtoa_r+0x218>
 801d118:	2401      	movs	r4, #1
 801d11a:	2300      	movs	r3, #0
 801d11c:	9309      	str	r3, [sp, #36]	@ 0x24
 801d11e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d120:	f04f 33ff 	mov.w	r3, #4294967295
 801d124:	9300      	str	r3, [sp, #0]
 801d126:	9307      	str	r3, [sp, #28]
 801d128:	2200      	movs	r2, #0
 801d12a:	2312      	movs	r3, #18
 801d12c:	e7cf      	b.n	801d0ce <_dtoa_r+0x20e>
 801d12e:	2301      	movs	r3, #1
 801d130:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d132:	e7f5      	b.n	801d120 <_dtoa_r+0x260>
 801d134:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d136:	9300      	str	r3, [sp, #0]
 801d138:	9307      	str	r3, [sp, #28]
 801d13a:	e7d6      	b.n	801d0ea <_dtoa_r+0x22a>
 801d13c:	3101      	adds	r1, #1
 801d13e:	0052      	lsls	r2, r2, #1
 801d140:	e7d5      	b.n	801d0ee <_dtoa_r+0x22e>
 801d142:	bf00      	nop
 801d144:	f3af 8000 	nop.w
 801d148:	636f4361 	.word	0x636f4361
 801d14c:	3fd287a7 	.word	0x3fd287a7
 801d150:	8b60c8b3 	.word	0x8b60c8b3
 801d154:	3fc68a28 	.word	0x3fc68a28
 801d158:	509f79fb 	.word	0x509f79fb
 801d15c:	3fd34413 	.word	0x3fd34413
 801d160:	7ff00000 	.word	0x7ff00000
 801d164:	08021617 	.word	0x08021617
 801d168:	3ff80000 	.word	0x3ff80000
 801d16c:	08021748 	.word	0x08021748
 801d170:	0802164f 	.word	0x0802164f
 801d174:	08021660 	.word	0x08021660
 801d178:	0802164b 	.word	0x0802164b
 801d17c:	08021616 	.word	0x08021616
 801d180:	9b07      	ldr	r3, [sp, #28]
 801d182:	f8cb 0038 	str.w	r0, [fp, #56]	@ 0x38
 801d186:	2b0e      	cmp	r3, #14
 801d188:	f200 80a4 	bhi.w	801d2d4 <_dtoa_r+0x414>
 801d18c:	2c00      	cmp	r4, #0
 801d18e:	f000 80a1 	beq.w	801d2d4 <_dtoa_r+0x414>
 801d192:	2f00      	cmp	r7, #0
 801d194:	dd33      	ble.n	801d1fe <_dtoa_r+0x33e>
 801d196:	4bae      	ldr	r3, [pc, #696]	@ (801d450 <_dtoa_r+0x590>)
 801d198:	f007 020f 	and.w	r2, r7, #15
 801d19c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d1a0:	ed93 7b00 	vldr	d7, [r3]
 801d1a4:	05f8      	lsls	r0, r7, #23
 801d1a6:	ed8d 7b04 	vstr	d7, [sp, #16]
 801d1aa:	ea4f 1427 	mov.w	r4, r7, asr #4
 801d1ae:	d516      	bpl.n	801d1de <_dtoa_r+0x31e>
 801d1b0:	4ba8      	ldr	r3, [pc, #672]	@ (801d454 <_dtoa_r+0x594>)
 801d1b2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d1b6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801d1ba:	f7e3 fb47 	bl	800084c <__aeabi_ddiv>
 801d1be:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d1c2:	f004 040f 	and.w	r4, r4, #15
 801d1c6:	2603      	movs	r6, #3
 801d1c8:	4da2      	ldr	r5, [pc, #648]	@ (801d454 <_dtoa_r+0x594>)
 801d1ca:	b954      	cbnz	r4, 801d1e2 <_dtoa_r+0x322>
 801d1cc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801d1d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d1d4:	f7e3 fb3a 	bl	800084c <__aeabi_ddiv>
 801d1d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d1dc:	e028      	b.n	801d230 <_dtoa_r+0x370>
 801d1de:	2602      	movs	r6, #2
 801d1e0:	e7f2      	b.n	801d1c8 <_dtoa_r+0x308>
 801d1e2:	07e1      	lsls	r1, r4, #31
 801d1e4:	d508      	bpl.n	801d1f8 <_dtoa_r+0x338>
 801d1e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801d1ea:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d1ee:	f7e3 fa03 	bl	80005f8 <__aeabi_dmul>
 801d1f2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801d1f6:	3601      	adds	r6, #1
 801d1f8:	1064      	asrs	r4, r4, #1
 801d1fa:	3508      	adds	r5, #8
 801d1fc:	e7e5      	b.n	801d1ca <_dtoa_r+0x30a>
 801d1fe:	f000 80d2 	beq.w	801d3a6 <_dtoa_r+0x4e6>
 801d202:	427c      	negs	r4, r7
 801d204:	4b92      	ldr	r3, [pc, #584]	@ (801d450 <_dtoa_r+0x590>)
 801d206:	4d93      	ldr	r5, [pc, #588]	@ (801d454 <_dtoa_r+0x594>)
 801d208:	f004 020f 	and.w	r2, r4, #15
 801d20c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d210:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d214:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d218:	f7e3 f9ee 	bl	80005f8 <__aeabi_dmul>
 801d21c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d220:	1124      	asrs	r4, r4, #4
 801d222:	2300      	movs	r3, #0
 801d224:	2602      	movs	r6, #2
 801d226:	2c00      	cmp	r4, #0
 801d228:	f040 80b2 	bne.w	801d390 <_dtoa_r+0x4d0>
 801d22c:	2b00      	cmp	r3, #0
 801d22e:	d1d3      	bne.n	801d1d8 <_dtoa_r+0x318>
 801d230:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d232:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801d236:	2b00      	cmp	r3, #0
 801d238:	f000 80b7 	beq.w	801d3aa <_dtoa_r+0x4ea>
 801d23c:	4b86      	ldr	r3, [pc, #536]	@ (801d458 <_dtoa_r+0x598>)
 801d23e:	2200      	movs	r2, #0
 801d240:	4620      	mov	r0, r4
 801d242:	4629      	mov	r1, r5
 801d244:	f7e3 fc4a 	bl	8000adc <__aeabi_dcmplt>
 801d248:	2800      	cmp	r0, #0
 801d24a:	f000 80ae 	beq.w	801d3aa <_dtoa_r+0x4ea>
 801d24e:	9b07      	ldr	r3, [sp, #28]
 801d250:	2b00      	cmp	r3, #0
 801d252:	f000 80aa 	beq.w	801d3aa <_dtoa_r+0x4ea>
 801d256:	9b00      	ldr	r3, [sp, #0]
 801d258:	2b00      	cmp	r3, #0
 801d25a:	dd37      	ble.n	801d2cc <_dtoa_r+0x40c>
 801d25c:	1e7b      	subs	r3, r7, #1
 801d25e:	9304      	str	r3, [sp, #16]
 801d260:	4620      	mov	r0, r4
 801d262:	4b7e      	ldr	r3, [pc, #504]	@ (801d45c <_dtoa_r+0x59c>)
 801d264:	2200      	movs	r2, #0
 801d266:	4629      	mov	r1, r5
 801d268:	f7e3 f9c6 	bl	80005f8 <__aeabi_dmul>
 801d26c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d270:	9c00      	ldr	r4, [sp, #0]
 801d272:	3601      	adds	r6, #1
 801d274:	4630      	mov	r0, r6
 801d276:	f7e3 f955 	bl	8000524 <__aeabi_i2d>
 801d27a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d27e:	f7e3 f9bb 	bl	80005f8 <__aeabi_dmul>
 801d282:	4b77      	ldr	r3, [pc, #476]	@ (801d460 <_dtoa_r+0x5a0>)
 801d284:	2200      	movs	r2, #0
 801d286:	f7e3 f801 	bl	800028c <__adddf3>
 801d28a:	4605      	mov	r5, r0
 801d28c:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 801d290:	2c00      	cmp	r4, #0
 801d292:	f040 808d 	bne.w	801d3b0 <_dtoa_r+0x4f0>
 801d296:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d29a:	4b72      	ldr	r3, [pc, #456]	@ (801d464 <_dtoa_r+0x5a4>)
 801d29c:	2200      	movs	r2, #0
 801d29e:	f7e2 fff3 	bl	8000288 <__aeabi_dsub>
 801d2a2:	4602      	mov	r2, r0
 801d2a4:	460b      	mov	r3, r1
 801d2a6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d2aa:	462a      	mov	r2, r5
 801d2ac:	4633      	mov	r3, r6
 801d2ae:	f7e3 fc33 	bl	8000b18 <__aeabi_dcmpgt>
 801d2b2:	2800      	cmp	r0, #0
 801d2b4:	f040 828c 	bne.w	801d7d0 <_dtoa_r+0x910>
 801d2b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d2bc:	462a      	mov	r2, r5
 801d2be:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 801d2c2:	f7e3 fc0b 	bl	8000adc <__aeabi_dcmplt>
 801d2c6:	2800      	cmp	r0, #0
 801d2c8:	f040 8129 	bne.w	801d51e <_dtoa_r+0x65e>
 801d2cc:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 801d2d0:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801d2d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d2d6:	2b00      	cmp	r3, #0
 801d2d8:	f2c0 815b 	blt.w	801d592 <_dtoa_r+0x6d2>
 801d2dc:	2f0e      	cmp	r7, #14
 801d2de:	f300 8158 	bgt.w	801d592 <_dtoa_r+0x6d2>
 801d2e2:	4b5b      	ldr	r3, [pc, #364]	@ (801d450 <_dtoa_r+0x590>)
 801d2e4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d2e8:	ed93 7b00 	vldr	d7, [r3]
 801d2ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d2ee:	2b00      	cmp	r3, #0
 801d2f0:	ed8d 7b00 	vstr	d7, [sp]
 801d2f4:	da03      	bge.n	801d2fe <_dtoa_r+0x43e>
 801d2f6:	9b07      	ldr	r3, [sp, #28]
 801d2f8:	2b00      	cmp	r3, #0
 801d2fa:	f340 8102 	ble.w	801d502 <_dtoa_r+0x642>
 801d2fe:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801d302:	4656      	mov	r6, sl
 801d304:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d308:	4620      	mov	r0, r4
 801d30a:	4629      	mov	r1, r5
 801d30c:	f7e3 fa9e 	bl	800084c <__aeabi_ddiv>
 801d310:	f7e3 fc22 	bl	8000b58 <__aeabi_d2iz>
 801d314:	4680      	mov	r8, r0
 801d316:	f7e3 f905 	bl	8000524 <__aeabi_i2d>
 801d31a:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d31e:	f7e3 f96b 	bl	80005f8 <__aeabi_dmul>
 801d322:	4602      	mov	r2, r0
 801d324:	460b      	mov	r3, r1
 801d326:	4620      	mov	r0, r4
 801d328:	4629      	mov	r1, r5
 801d32a:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 801d32e:	f7e2 ffab 	bl	8000288 <__aeabi_dsub>
 801d332:	f806 4b01 	strb.w	r4, [r6], #1
 801d336:	9d07      	ldr	r5, [sp, #28]
 801d338:	eba6 040a 	sub.w	r4, r6, sl
 801d33c:	42a5      	cmp	r5, r4
 801d33e:	4602      	mov	r2, r0
 801d340:	460b      	mov	r3, r1
 801d342:	f040 8118 	bne.w	801d576 <_dtoa_r+0x6b6>
 801d346:	f7e2 ffa1 	bl	800028c <__adddf3>
 801d34a:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d34e:	4604      	mov	r4, r0
 801d350:	460d      	mov	r5, r1
 801d352:	f7e3 fbe1 	bl	8000b18 <__aeabi_dcmpgt>
 801d356:	2800      	cmp	r0, #0
 801d358:	f040 80fa 	bne.w	801d550 <_dtoa_r+0x690>
 801d35c:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d360:	4620      	mov	r0, r4
 801d362:	4629      	mov	r1, r5
 801d364:	f7e3 fbb0 	bl	8000ac8 <__aeabi_dcmpeq>
 801d368:	b118      	cbz	r0, 801d372 <_dtoa_r+0x4b2>
 801d36a:	f018 0f01 	tst.w	r8, #1
 801d36e:	f040 80ef 	bne.w	801d550 <_dtoa_r+0x690>
 801d372:	4649      	mov	r1, r9
 801d374:	4658      	mov	r0, fp
 801d376:	f000 fb86 	bl	801da86 <_Bfree>
 801d37a:	2300      	movs	r3, #0
 801d37c:	7033      	strb	r3, [r6, #0]
 801d37e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d380:	3701      	adds	r7, #1
 801d382:	601f      	str	r7, [r3, #0]
 801d384:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d386:	2b00      	cmp	r3, #0
 801d388:	f43f add1 	beq.w	801cf2e <_dtoa_r+0x6e>
 801d38c:	601e      	str	r6, [r3, #0]
 801d38e:	e5ce      	b.n	801cf2e <_dtoa_r+0x6e>
 801d390:	07e2      	lsls	r2, r4, #31
 801d392:	d505      	bpl.n	801d3a0 <_dtoa_r+0x4e0>
 801d394:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d398:	f7e3 f92e 	bl	80005f8 <__aeabi_dmul>
 801d39c:	3601      	adds	r6, #1
 801d39e:	2301      	movs	r3, #1
 801d3a0:	1064      	asrs	r4, r4, #1
 801d3a2:	3508      	adds	r5, #8
 801d3a4:	e73f      	b.n	801d226 <_dtoa_r+0x366>
 801d3a6:	2602      	movs	r6, #2
 801d3a8:	e742      	b.n	801d230 <_dtoa_r+0x370>
 801d3aa:	9c07      	ldr	r4, [sp, #28]
 801d3ac:	9704      	str	r7, [sp, #16]
 801d3ae:	e761      	b.n	801d274 <_dtoa_r+0x3b4>
 801d3b0:	4b27      	ldr	r3, [pc, #156]	@ (801d450 <_dtoa_r+0x590>)
 801d3b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801d3b4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801d3b8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801d3bc:	4454      	add	r4, sl
 801d3be:	2900      	cmp	r1, #0
 801d3c0:	d054      	beq.n	801d46c <_dtoa_r+0x5ac>
 801d3c2:	4929      	ldr	r1, [pc, #164]	@ (801d468 <_dtoa_r+0x5a8>)
 801d3c4:	2000      	movs	r0, #0
 801d3c6:	f7e3 fa41 	bl	800084c <__aeabi_ddiv>
 801d3ca:	4633      	mov	r3, r6
 801d3cc:	462a      	mov	r2, r5
 801d3ce:	f7e2 ff5b 	bl	8000288 <__aeabi_dsub>
 801d3d2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d3d6:	4656      	mov	r6, sl
 801d3d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d3dc:	f7e3 fbbc 	bl	8000b58 <__aeabi_d2iz>
 801d3e0:	4605      	mov	r5, r0
 801d3e2:	f7e3 f89f 	bl	8000524 <__aeabi_i2d>
 801d3e6:	4602      	mov	r2, r0
 801d3e8:	460b      	mov	r3, r1
 801d3ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d3ee:	f7e2 ff4b 	bl	8000288 <__aeabi_dsub>
 801d3f2:	3530      	adds	r5, #48	@ 0x30
 801d3f4:	4602      	mov	r2, r0
 801d3f6:	460b      	mov	r3, r1
 801d3f8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d3fc:	f806 5b01 	strb.w	r5, [r6], #1
 801d400:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d404:	f7e3 fb6a 	bl	8000adc <__aeabi_dcmplt>
 801d408:	2800      	cmp	r0, #0
 801d40a:	d172      	bne.n	801d4f2 <_dtoa_r+0x632>
 801d40c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d410:	4911      	ldr	r1, [pc, #68]	@ (801d458 <_dtoa_r+0x598>)
 801d412:	2000      	movs	r0, #0
 801d414:	f7e2 ff38 	bl	8000288 <__aeabi_dsub>
 801d418:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d41c:	f7e3 fb5e 	bl	8000adc <__aeabi_dcmplt>
 801d420:	2800      	cmp	r0, #0
 801d422:	f040 8096 	bne.w	801d552 <_dtoa_r+0x692>
 801d426:	42a6      	cmp	r6, r4
 801d428:	f43f af50 	beq.w	801d2cc <_dtoa_r+0x40c>
 801d42c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801d430:	4b0a      	ldr	r3, [pc, #40]	@ (801d45c <_dtoa_r+0x59c>)
 801d432:	2200      	movs	r2, #0
 801d434:	f7e3 f8e0 	bl	80005f8 <__aeabi_dmul>
 801d438:	4b08      	ldr	r3, [pc, #32]	@ (801d45c <_dtoa_r+0x59c>)
 801d43a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d43e:	2200      	movs	r2, #0
 801d440:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d444:	f7e3 f8d8 	bl	80005f8 <__aeabi_dmul>
 801d448:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d44c:	e7c4      	b.n	801d3d8 <_dtoa_r+0x518>
 801d44e:	bf00      	nop
 801d450:	08021748 	.word	0x08021748
 801d454:	08021720 	.word	0x08021720
 801d458:	3ff00000 	.word	0x3ff00000
 801d45c:	40240000 	.word	0x40240000
 801d460:	401c0000 	.word	0x401c0000
 801d464:	40140000 	.word	0x40140000
 801d468:	3fe00000 	.word	0x3fe00000
 801d46c:	4631      	mov	r1, r6
 801d46e:	4628      	mov	r0, r5
 801d470:	f7e3 f8c2 	bl	80005f8 <__aeabi_dmul>
 801d474:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d478:	9415      	str	r4, [sp, #84]	@ 0x54
 801d47a:	4656      	mov	r6, sl
 801d47c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d480:	f7e3 fb6a 	bl	8000b58 <__aeabi_d2iz>
 801d484:	4605      	mov	r5, r0
 801d486:	f7e3 f84d 	bl	8000524 <__aeabi_i2d>
 801d48a:	4602      	mov	r2, r0
 801d48c:	460b      	mov	r3, r1
 801d48e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d492:	f7e2 fef9 	bl	8000288 <__aeabi_dsub>
 801d496:	3530      	adds	r5, #48	@ 0x30
 801d498:	f806 5b01 	strb.w	r5, [r6], #1
 801d49c:	4602      	mov	r2, r0
 801d49e:	460b      	mov	r3, r1
 801d4a0:	42a6      	cmp	r6, r4
 801d4a2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d4a6:	f04f 0200 	mov.w	r2, #0
 801d4aa:	d124      	bne.n	801d4f6 <_dtoa_r+0x636>
 801d4ac:	4bac      	ldr	r3, [pc, #688]	@ (801d760 <_dtoa_r+0x8a0>)
 801d4ae:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801d4b2:	f7e2 feeb 	bl	800028c <__adddf3>
 801d4b6:	4602      	mov	r2, r0
 801d4b8:	460b      	mov	r3, r1
 801d4ba:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d4be:	f7e3 fb2b 	bl	8000b18 <__aeabi_dcmpgt>
 801d4c2:	2800      	cmp	r0, #0
 801d4c4:	d145      	bne.n	801d552 <_dtoa_r+0x692>
 801d4c6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d4ca:	49a5      	ldr	r1, [pc, #660]	@ (801d760 <_dtoa_r+0x8a0>)
 801d4cc:	2000      	movs	r0, #0
 801d4ce:	f7e2 fedb 	bl	8000288 <__aeabi_dsub>
 801d4d2:	4602      	mov	r2, r0
 801d4d4:	460b      	mov	r3, r1
 801d4d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d4da:	f7e3 faff 	bl	8000adc <__aeabi_dcmplt>
 801d4de:	2800      	cmp	r0, #0
 801d4e0:	f43f aef4 	beq.w	801d2cc <_dtoa_r+0x40c>
 801d4e4:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801d4e6:	1e73      	subs	r3, r6, #1
 801d4e8:	9315      	str	r3, [sp, #84]	@ 0x54
 801d4ea:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 801d4ee:	2b30      	cmp	r3, #48	@ 0x30
 801d4f0:	d0f8      	beq.n	801d4e4 <_dtoa_r+0x624>
 801d4f2:	9f04      	ldr	r7, [sp, #16]
 801d4f4:	e73d      	b.n	801d372 <_dtoa_r+0x4b2>
 801d4f6:	4b9b      	ldr	r3, [pc, #620]	@ (801d764 <_dtoa_r+0x8a4>)
 801d4f8:	f7e3 f87e 	bl	80005f8 <__aeabi_dmul>
 801d4fc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d500:	e7bc      	b.n	801d47c <_dtoa_r+0x5bc>
 801d502:	d10c      	bne.n	801d51e <_dtoa_r+0x65e>
 801d504:	4b98      	ldr	r3, [pc, #608]	@ (801d768 <_dtoa_r+0x8a8>)
 801d506:	2200      	movs	r2, #0
 801d508:	e9dd 0100 	ldrd	r0, r1, [sp]
 801d50c:	f7e3 f874 	bl	80005f8 <__aeabi_dmul>
 801d510:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d514:	f7e3 faf6 	bl	8000b04 <__aeabi_dcmpge>
 801d518:	2800      	cmp	r0, #0
 801d51a:	f000 8157 	beq.w	801d7cc <_dtoa_r+0x90c>
 801d51e:	2400      	movs	r4, #0
 801d520:	4625      	mov	r5, r4
 801d522:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d524:	43db      	mvns	r3, r3
 801d526:	9304      	str	r3, [sp, #16]
 801d528:	4656      	mov	r6, sl
 801d52a:	2700      	movs	r7, #0
 801d52c:	4621      	mov	r1, r4
 801d52e:	4658      	mov	r0, fp
 801d530:	f000 faa9 	bl	801da86 <_Bfree>
 801d534:	2d00      	cmp	r5, #0
 801d536:	d0dc      	beq.n	801d4f2 <_dtoa_r+0x632>
 801d538:	b12f      	cbz	r7, 801d546 <_dtoa_r+0x686>
 801d53a:	42af      	cmp	r7, r5
 801d53c:	d003      	beq.n	801d546 <_dtoa_r+0x686>
 801d53e:	4639      	mov	r1, r7
 801d540:	4658      	mov	r0, fp
 801d542:	f000 faa0 	bl	801da86 <_Bfree>
 801d546:	4629      	mov	r1, r5
 801d548:	4658      	mov	r0, fp
 801d54a:	f000 fa9c 	bl	801da86 <_Bfree>
 801d54e:	e7d0      	b.n	801d4f2 <_dtoa_r+0x632>
 801d550:	9704      	str	r7, [sp, #16]
 801d552:	4633      	mov	r3, r6
 801d554:	461e      	mov	r6, r3
 801d556:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d55a:	2a39      	cmp	r2, #57	@ 0x39
 801d55c:	d107      	bne.n	801d56e <_dtoa_r+0x6ae>
 801d55e:	459a      	cmp	sl, r3
 801d560:	d1f8      	bne.n	801d554 <_dtoa_r+0x694>
 801d562:	9a04      	ldr	r2, [sp, #16]
 801d564:	3201      	adds	r2, #1
 801d566:	9204      	str	r2, [sp, #16]
 801d568:	2230      	movs	r2, #48	@ 0x30
 801d56a:	f88a 2000 	strb.w	r2, [sl]
 801d56e:	781a      	ldrb	r2, [r3, #0]
 801d570:	3201      	adds	r2, #1
 801d572:	701a      	strb	r2, [r3, #0]
 801d574:	e7bd      	b.n	801d4f2 <_dtoa_r+0x632>
 801d576:	4b7b      	ldr	r3, [pc, #492]	@ (801d764 <_dtoa_r+0x8a4>)
 801d578:	2200      	movs	r2, #0
 801d57a:	f7e3 f83d 	bl	80005f8 <__aeabi_dmul>
 801d57e:	2200      	movs	r2, #0
 801d580:	2300      	movs	r3, #0
 801d582:	4604      	mov	r4, r0
 801d584:	460d      	mov	r5, r1
 801d586:	f7e3 fa9f 	bl	8000ac8 <__aeabi_dcmpeq>
 801d58a:	2800      	cmp	r0, #0
 801d58c:	f43f aeba 	beq.w	801d304 <_dtoa_r+0x444>
 801d590:	e6ef      	b.n	801d372 <_dtoa_r+0x4b2>
 801d592:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d594:	2a00      	cmp	r2, #0
 801d596:	f000 80db 	beq.w	801d750 <_dtoa_r+0x890>
 801d59a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d59c:	2a01      	cmp	r2, #1
 801d59e:	f300 80bf 	bgt.w	801d720 <_dtoa_r+0x860>
 801d5a2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d5a4:	2a00      	cmp	r2, #0
 801d5a6:	f000 80b7 	beq.w	801d718 <_dtoa_r+0x858>
 801d5aa:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 801d5ae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d5b0:	4646      	mov	r6, r8
 801d5b2:	9a08      	ldr	r2, [sp, #32]
 801d5b4:	2101      	movs	r1, #1
 801d5b6:	441a      	add	r2, r3
 801d5b8:	4658      	mov	r0, fp
 801d5ba:	4498      	add	r8, r3
 801d5bc:	9208      	str	r2, [sp, #32]
 801d5be:	f000 fafd 	bl	801dbbc <__i2b>
 801d5c2:	4605      	mov	r5, r0
 801d5c4:	b15e      	cbz	r6, 801d5de <_dtoa_r+0x71e>
 801d5c6:	9b08      	ldr	r3, [sp, #32]
 801d5c8:	2b00      	cmp	r3, #0
 801d5ca:	dd08      	ble.n	801d5de <_dtoa_r+0x71e>
 801d5cc:	42b3      	cmp	r3, r6
 801d5ce:	9a08      	ldr	r2, [sp, #32]
 801d5d0:	bfa8      	it	ge
 801d5d2:	4633      	movge	r3, r6
 801d5d4:	eba8 0803 	sub.w	r8, r8, r3
 801d5d8:	1af6      	subs	r6, r6, r3
 801d5da:	1ad3      	subs	r3, r2, r3
 801d5dc:	9308      	str	r3, [sp, #32]
 801d5de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d5e0:	b1f3      	cbz	r3, 801d620 <_dtoa_r+0x760>
 801d5e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d5e4:	2b00      	cmp	r3, #0
 801d5e6:	f000 80b7 	beq.w	801d758 <_dtoa_r+0x898>
 801d5ea:	b18c      	cbz	r4, 801d610 <_dtoa_r+0x750>
 801d5ec:	4629      	mov	r1, r5
 801d5ee:	4622      	mov	r2, r4
 801d5f0:	4658      	mov	r0, fp
 801d5f2:	f000 fba3 	bl	801dd3c <__pow5mult>
 801d5f6:	464a      	mov	r2, r9
 801d5f8:	4601      	mov	r1, r0
 801d5fa:	4605      	mov	r5, r0
 801d5fc:	4658      	mov	r0, fp
 801d5fe:	f000 faf3 	bl	801dbe8 <__multiply>
 801d602:	4649      	mov	r1, r9
 801d604:	9004      	str	r0, [sp, #16]
 801d606:	4658      	mov	r0, fp
 801d608:	f000 fa3d 	bl	801da86 <_Bfree>
 801d60c:	9b04      	ldr	r3, [sp, #16]
 801d60e:	4699      	mov	r9, r3
 801d610:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d612:	1b1a      	subs	r2, r3, r4
 801d614:	d004      	beq.n	801d620 <_dtoa_r+0x760>
 801d616:	4649      	mov	r1, r9
 801d618:	4658      	mov	r0, fp
 801d61a:	f000 fb8f 	bl	801dd3c <__pow5mult>
 801d61e:	4681      	mov	r9, r0
 801d620:	2101      	movs	r1, #1
 801d622:	4658      	mov	r0, fp
 801d624:	f000 faca 	bl	801dbbc <__i2b>
 801d628:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d62a:	4604      	mov	r4, r0
 801d62c:	2b00      	cmp	r3, #0
 801d62e:	f000 81cc 	beq.w	801d9ca <_dtoa_r+0xb0a>
 801d632:	461a      	mov	r2, r3
 801d634:	4601      	mov	r1, r0
 801d636:	4658      	mov	r0, fp
 801d638:	f000 fb80 	bl	801dd3c <__pow5mult>
 801d63c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d63e:	2b01      	cmp	r3, #1
 801d640:	4604      	mov	r4, r0
 801d642:	f300 8095 	bgt.w	801d770 <_dtoa_r+0x8b0>
 801d646:	9b02      	ldr	r3, [sp, #8]
 801d648:	2b00      	cmp	r3, #0
 801d64a:	f040 8087 	bne.w	801d75c <_dtoa_r+0x89c>
 801d64e:	9b03      	ldr	r3, [sp, #12]
 801d650:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801d654:	2b00      	cmp	r3, #0
 801d656:	f040 8089 	bne.w	801d76c <_dtoa_r+0x8ac>
 801d65a:	9b03      	ldr	r3, [sp, #12]
 801d65c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801d660:	0d1b      	lsrs	r3, r3, #20
 801d662:	051b      	lsls	r3, r3, #20
 801d664:	b12b      	cbz	r3, 801d672 <_dtoa_r+0x7b2>
 801d666:	9b08      	ldr	r3, [sp, #32]
 801d668:	3301      	adds	r3, #1
 801d66a:	9308      	str	r3, [sp, #32]
 801d66c:	f108 0801 	add.w	r8, r8, #1
 801d670:	2301      	movs	r3, #1
 801d672:	930a      	str	r3, [sp, #40]	@ 0x28
 801d674:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d676:	2b00      	cmp	r3, #0
 801d678:	f000 81ad 	beq.w	801d9d6 <_dtoa_r+0xb16>
 801d67c:	6923      	ldr	r3, [r4, #16]
 801d67e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801d682:	6918      	ldr	r0, [r3, #16]
 801d684:	f000 fa4e 	bl	801db24 <__hi0bits>
 801d688:	f1c0 0020 	rsb	r0, r0, #32
 801d68c:	9b08      	ldr	r3, [sp, #32]
 801d68e:	4418      	add	r0, r3
 801d690:	f010 001f 	ands.w	r0, r0, #31
 801d694:	d077      	beq.n	801d786 <_dtoa_r+0x8c6>
 801d696:	f1c0 0320 	rsb	r3, r0, #32
 801d69a:	2b04      	cmp	r3, #4
 801d69c:	dd6b      	ble.n	801d776 <_dtoa_r+0x8b6>
 801d69e:	9b08      	ldr	r3, [sp, #32]
 801d6a0:	f1c0 001c 	rsb	r0, r0, #28
 801d6a4:	4403      	add	r3, r0
 801d6a6:	4480      	add	r8, r0
 801d6a8:	4406      	add	r6, r0
 801d6aa:	9308      	str	r3, [sp, #32]
 801d6ac:	f1b8 0f00 	cmp.w	r8, #0
 801d6b0:	dd05      	ble.n	801d6be <_dtoa_r+0x7fe>
 801d6b2:	4649      	mov	r1, r9
 801d6b4:	4642      	mov	r2, r8
 801d6b6:	4658      	mov	r0, fp
 801d6b8:	f000 fb80 	bl	801ddbc <__lshift>
 801d6bc:	4681      	mov	r9, r0
 801d6be:	9b08      	ldr	r3, [sp, #32]
 801d6c0:	2b00      	cmp	r3, #0
 801d6c2:	dd05      	ble.n	801d6d0 <_dtoa_r+0x810>
 801d6c4:	4621      	mov	r1, r4
 801d6c6:	461a      	mov	r2, r3
 801d6c8:	4658      	mov	r0, fp
 801d6ca:	f000 fb77 	bl	801ddbc <__lshift>
 801d6ce:	4604      	mov	r4, r0
 801d6d0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d6d2:	2b00      	cmp	r3, #0
 801d6d4:	d059      	beq.n	801d78a <_dtoa_r+0x8ca>
 801d6d6:	4621      	mov	r1, r4
 801d6d8:	4648      	mov	r0, r9
 801d6da:	f000 fbdb 	bl	801de94 <__mcmp>
 801d6de:	2800      	cmp	r0, #0
 801d6e0:	da53      	bge.n	801d78a <_dtoa_r+0x8ca>
 801d6e2:	1e7b      	subs	r3, r7, #1
 801d6e4:	9304      	str	r3, [sp, #16]
 801d6e6:	4649      	mov	r1, r9
 801d6e8:	2300      	movs	r3, #0
 801d6ea:	220a      	movs	r2, #10
 801d6ec:	4658      	mov	r0, fp
 801d6ee:	f000 f9d3 	bl	801da98 <__multadd>
 801d6f2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d6f4:	4681      	mov	r9, r0
 801d6f6:	2b00      	cmp	r3, #0
 801d6f8:	f000 816f 	beq.w	801d9da <_dtoa_r+0xb1a>
 801d6fc:	2300      	movs	r3, #0
 801d6fe:	4629      	mov	r1, r5
 801d700:	220a      	movs	r2, #10
 801d702:	4658      	mov	r0, fp
 801d704:	f000 f9c8 	bl	801da98 <__multadd>
 801d708:	9b00      	ldr	r3, [sp, #0]
 801d70a:	2b00      	cmp	r3, #0
 801d70c:	4605      	mov	r5, r0
 801d70e:	dc67      	bgt.n	801d7e0 <_dtoa_r+0x920>
 801d710:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d712:	2b02      	cmp	r3, #2
 801d714:	dc41      	bgt.n	801d79a <_dtoa_r+0x8da>
 801d716:	e063      	b.n	801d7e0 <_dtoa_r+0x920>
 801d718:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d71a:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 801d71e:	e746      	b.n	801d5ae <_dtoa_r+0x6ee>
 801d720:	9b07      	ldr	r3, [sp, #28]
 801d722:	1e5c      	subs	r4, r3, #1
 801d724:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d726:	42a3      	cmp	r3, r4
 801d728:	bfbf      	itttt	lt
 801d72a:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 801d72c:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 801d72e:	940a      	strlt	r4, [sp, #40]	@ 0x28
 801d730:	1ae3      	sublt	r3, r4, r3
 801d732:	bfb4      	ite	lt
 801d734:	18d2      	addlt	r2, r2, r3
 801d736:	1b1c      	subge	r4, r3, r4
 801d738:	9b07      	ldr	r3, [sp, #28]
 801d73a:	bfbc      	itt	lt
 801d73c:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 801d73e:	2400      	movlt	r4, #0
 801d740:	2b00      	cmp	r3, #0
 801d742:	bfb5      	itete	lt
 801d744:	eba8 0603 	sublt.w	r6, r8, r3
 801d748:	9b07      	ldrge	r3, [sp, #28]
 801d74a:	2300      	movlt	r3, #0
 801d74c:	4646      	movge	r6, r8
 801d74e:	e730      	b.n	801d5b2 <_dtoa_r+0x6f2>
 801d750:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d752:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801d754:	4646      	mov	r6, r8
 801d756:	e735      	b.n	801d5c4 <_dtoa_r+0x704>
 801d758:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d75a:	e75c      	b.n	801d616 <_dtoa_r+0x756>
 801d75c:	2300      	movs	r3, #0
 801d75e:	e788      	b.n	801d672 <_dtoa_r+0x7b2>
 801d760:	3fe00000 	.word	0x3fe00000
 801d764:	40240000 	.word	0x40240000
 801d768:	40140000 	.word	0x40140000
 801d76c:	9b02      	ldr	r3, [sp, #8]
 801d76e:	e780      	b.n	801d672 <_dtoa_r+0x7b2>
 801d770:	2300      	movs	r3, #0
 801d772:	930a      	str	r3, [sp, #40]	@ 0x28
 801d774:	e782      	b.n	801d67c <_dtoa_r+0x7bc>
 801d776:	d099      	beq.n	801d6ac <_dtoa_r+0x7ec>
 801d778:	9a08      	ldr	r2, [sp, #32]
 801d77a:	331c      	adds	r3, #28
 801d77c:	441a      	add	r2, r3
 801d77e:	4498      	add	r8, r3
 801d780:	441e      	add	r6, r3
 801d782:	9208      	str	r2, [sp, #32]
 801d784:	e792      	b.n	801d6ac <_dtoa_r+0x7ec>
 801d786:	4603      	mov	r3, r0
 801d788:	e7f6      	b.n	801d778 <_dtoa_r+0x8b8>
 801d78a:	9b07      	ldr	r3, [sp, #28]
 801d78c:	9704      	str	r7, [sp, #16]
 801d78e:	2b00      	cmp	r3, #0
 801d790:	dc20      	bgt.n	801d7d4 <_dtoa_r+0x914>
 801d792:	9300      	str	r3, [sp, #0]
 801d794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d796:	2b02      	cmp	r3, #2
 801d798:	dd1e      	ble.n	801d7d8 <_dtoa_r+0x918>
 801d79a:	9b00      	ldr	r3, [sp, #0]
 801d79c:	2b00      	cmp	r3, #0
 801d79e:	f47f aec0 	bne.w	801d522 <_dtoa_r+0x662>
 801d7a2:	4621      	mov	r1, r4
 801d7a4:	2205      	movs	r2, #5
 801d7a6:	4658      	mov	r0, fp
 801d7a8:	f000 f976 	bl	801da98 <__multadd>
 801d7ac:	4601      	mov	r1, r0
 801d7ae:	4604      	mov	r4, r0
 801d7b0:	4648      	mov	r0, r9
 801d7b2:	f000 fb6f 	bl	801de94 <__mcmp>
 801d7b6:	2800      	cmp	r0, #0
 801d7b8:	f77f aeb3 	ble.w	801d522 <_dtoa_r+0x662>
 801d7bc:	4656      	mov	r6, sl
 801d7be:	2331      	movs	r3, #49	@ 0x31
 801d7c0:	f806 3b01 	strb.w	r3, [r6], #1
 801d7c4:	9b04      	ldr	r3, [sp, #16]
 801d7c6:	3301      	adds	r3, #1
 801d7c8:	9304      	str	r3, [sp, #16]
 801d7ca:	e6ae      	b.n	801d52a <_dtoa_r+0x66a>
 801d7cc:	9c07      	ldr	r4, [sp, #28]
 801d7ce:	9704      	str	r7, [sp, #16]
 801d7d0:	4625      	mov	r5, r4
 801d7d2:	e7f3      	b.n	801d7bc <_dtoa_r+0x8fc>
 801d7d4:	9b07      	ldr	r3, [sp, #28]
 801d7d6:	9300      	str	r3, [sp, #0]
 801d7d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d7da:	2b00      	cmp	r3, #0
 801d7dc:	f000 8101 	beq.w	801d9e2 <_dtoa_r+0xb22>
 801d7e0:	2e00      	cmp	r6, #0
 801d7e2:	dd05      	ble.n	801d7f0 <_dtoa_r+0x930>
 801d7e4:	4629      	mov	r1, r5
 801d7e6:	4632      	mov	r2, r6
 801d7e8:	4658      	mov	r0, fp
 801d7ea:	f000 fae7 	bl	801ddbc <__lshift>
 801d7ee:	4605      	mov	r5, r0
 801d7f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d7f2:	2b00      	cmp	r3, #0
 801d7f4:	d059      	beq.n	801d8aa <_dtoa_r+0x9ea>
 801d7f6:	6869      	ldr	r1, [r5, #4]
 801d7f8:	4658      	mov	r0, fp
 801d7fa:	f000 f91f 	bl	801da3c <_Balloc>
 801d7fe:	4606      	mov	r6, r0
 801d800:	b920      	cbnz	r0, 801d80c <_dtoa_r+0x94c>
 801d802:	4b83      	ldr	r3, [pc, #524]	@ (801da10 <_dtoa_r+0xb50>)
 801d804:	4602      	mov	r2, r0
 801d806:	f240 21ef 	movw	r1, #751	@ 0x2ef
 801d80a:	e480      	b.n	801d10e <_dtoa_r+0x24e>
 801d80c:	692a      	ldr	r2, [r5, #16]
 801d80e:	3202      	adds	r2, #2
 801d810:	0092      	lsls	r2, r2, #2
 801d812:	f105 010c 	add.w	r1, r5, #12
 801d816:	300c      	adds	r0, #12
 801d818:	f7fd fbac 	bl	801af74 <memcpy>
 801d81c:	2201      	movs	r2, #1
 801d81e:	4631      	mov	r1, r6
 801d820:	4658      	mov	r0, fp
 801d822:	f000 facb 	bl	801ddbc <__lshift>
 801d826:	f10a 0301 	add.w	r3, sl, #1
 801d82a:	9307      	str	r3, [sp, #28]
 801d82c:	9b00      	ldr	r3, [sp, #0]
 801d82e:	4453      	add	r3, sl
 801d830:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d832:	9b02      	ldr	r3, [sp, #8]
 801d834:	f003 0301 	and.w	r3, r3, #1
 801d838:	462f      	mov	r7, r5
 801d83a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d83c:	4605      	mov	r5, r0
 801d83e:	9b07      	ldr	r3, [sp, #28]
 801d840:	4621      	mov	r1, r4
 801d842:	3b01      	subs	r3, #1
 801d844:	4648      	mov	r0, r9
 801d846:	9300      	str	r3, [sp, #0]
 801d848:	f7ff fab2 	bl	801cdb0 <quorem>
 801d84c:	4639      	mov	r1, r7
 801d84e:	9002      	str	r0, [sp, #8]
 801d850:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801d854:	4648      	mov	r0, r9
 801d856:	f000 fb1d 	bl	801de94 <__mcmp>
 801d85a:	462a      	mov	r2, r5
 801d85c:	9008      	str	r0, [sp, #32]
 801d85e:	4621      	mov	r1, r4
 801d860:	4658      	mov	r0, fp
 801d862:	f000 fb33 	bl	801decc <__mdiff>
 801d866:	68c2      	ldr	r2, [r0, #12]
 801d868:	4606      	mov	r6, r0
 801d86a:	bb02      	cbnz	r2, 801d8ae <_dtoa_r+0x9ee>
 801d86c:	4601      	mov	r1, r0
 801d86e:	4648      	mov	r0, r9
 801d870:	f000 fb10 	bl	801de94 <__mcmp>
 801d874:	4602      	mov	r2, r0
 801d876:	4631      	mov	r1, r6
 801d878:	4658      	mov	r0, fp
 801d87a:	920e      	str	r2, [sp, #56]	@ 0x38
 801d87c:	f000 f903 	bl	801da86 <_Bfree>
 801d880:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d882:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d884:	9e07      	ldr	r6, [sp, #28]
 801d886:	ea43 0102 	orr.w	r1, r3, r2
 801d88a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d88c:	4319      	orrs	r1, r3
 801d88e:	d110      	bne.n	801d8b2 <_dtoa_r+0x9f2>
 801d890:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d894:	d029      	beq.n	801d8ea <_dtoa_r+0xa2a>
 801d896:	9b08      	ldr	r3, [sp, #32]
 801d898:	2b00      	cmp	r3, #0
 801d89a:	dd02      	ble.n	801d8a2 <_dtoa_r+0x9e2>
 801d89c:	9b02      	ldr	r3, [sp, #8]
 801d89e:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 801d8a2:	9b00      	ldr	r3, [sp, #0]
 801d8a4:	f883 8000 	strb.w	r8, [r3]
 801d8a8:	e640      	b.n	801d52c <_dtoa_r+0x66c>
 801d8aa:	4628      	mov	r0, r5
 801d8ac:	e7bb      	b.n	801d826 <_dtoa_r+0x966>
 801d8ae:	2201      	movs	r2, #1
 801d8b0:	e7e1      	b.n	801d876 <_dtoa_r+0x9b6>
 801d8b2:	9b08      	ldr	r3, [sp, #32]
 801d8b4:	2b00      	cmp	r3, #0
 801d8b6:	db04      	blt.n	801d8c2 <_dtoa_r+0xa02>
 801d8b8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d8ba:	430b      	orrs	r3, r1
 801d8bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d8be:	430b      	orrs	r3, r1
 801d8c0:	d120      	bne.n	801d904 <_dtoa_r+0xa44>
 801d8c2:	2a00      	cmp	r2, #0
 801d8c4:	dded      	ble.n	801d8a2 <_dtoa_r+0x9e2>
 801d8c6:	4649      	mov	r1, r9
 801d8c8:	2201      	movs	r2, #1
 801d8ca:	4658      	mov	r0, fp
 801d8cc:	f000 fa76 	bl	801ddbc <__lshift>
 801d8d0:	4621      	mov	r1, r4
 801d8d2:	4681      	mov	r9, r0
 801d8d4:	f000 fade 	bl	801de94 <__mcmp>
 801d8d8:	2800      	cmp	r0, #0
 801d8da:	dc03      	bgt.n	801d8e4 <_dtoa_r+0xa24>
 801d8dc:	d1e1      	bne.n	801d8a2 <_dtoa_r+0x9e2>
 801d8de:	f018 0f01 	tst.w	r8, #1
 801d8e2:	d0de      	beq.n	801d8a2 <_dtoa_r+0x9e2>
 801d8e4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d8e8:	d1d8      	bne.n	801d89c <_dtoa_r+0x9dc>
 801d8ea:	9a00      	ldr	r2, [sp, #0]
 801d8ec:	2339      	movs	r3, #57	@ 0x39
 801d8ee:	7013      	strb	r3, [r2, #0]
 801d8f0:	4633      	mov	r3, r6
 801d8f2:	461e      	mov	r6, r3
 801d8f4:	3b01      	subs	r3, #1
 801d8f6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 801d8fa:	2a39      	cmp	r2, #57	@ 0x39
 801d8fc:	d052      	beq.n	801d9a4 <_dtoa_r+0xae4>
 801d8fe:	3201      	adds	r2, #1
 801d900:	701a      	strb	r2, [r3, #0]
 801d902:	e613      	b.n	801d52c <_dtoa_r+0x66c>
 801d904:	2a00      	cmp	r2, #0
 801d906:	dd07      	ble.n	801d918 <_dtoa_r+0xa58>
 801d908:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d90c:	d0ed      	beq.n	801d8ea <_dtoa_r+0xa2a>
 801d90e:	9a00      	ldr	r2, [sp, #0]
 801d910:	f108 0301 	add.w	r3, r8, #1
 801d914:	7013      	strb	r3, [r2, #0]
 801d916:	e609      	b.n	801d52c <_dtoa_r+0x66c>
 801d918:	9b07      	ldr	r3, [sp, #28]
 801d91a:	9a07      	ldr	r2, [sp, #28]
 801d91c:	f803 8c01 	strb.w	r8, [r3, #-1]
 801d920:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d922:	4293      	cmp	r3, r2
 801d924:	d028      	beq.n	801d978 <_dtoa_r+0xab8>
 801d926:	4649      	mov	r1, r9
 801d928:	2300      	movs	r3, #0
 801d92a:	220a      	movs	r2, #10
 801d92c:	4658      	mov	r0, fp
 801d92e:	f000 f8b3 	bl	801da98 <__multadd>
 801d932:	42af      	cmp	r7, r5
 801d934:	4681      	mov	r9, r0
 801d936:	f04f 0300 	mov.w	r3, #0
 801d93a:	f04f 020a 	mov.w	r2, #10
 801d93e:	4639      	mov	r1, r7
 801d940:	4658      	mov	r0, fp
 801d942:	d107      	bne.n	801d954 <_dtoa_r+0xa94>
 801d944:	f000 f8a8 	bl	801da98 <__multadd>
 801d948:	4607      	mov	r7, r0
 801d94a:	4605      	mov	r5, r0
 801d94c:	9b07      	ldr	r3, [sp, #28]
 801d94e:	3301      	adds	r3, #1
 801d950:	9307      	str	r3, [sp, #28]
 801d952:	e774      	b.n	801d83e <_dtoa_r+0x97e>
 801d954:	f000 f8a0 	bl	801da98 <__multadd>
 801d958:	4629      	mov	r1, r5
 801d95a:	4607      	mov	r7, r0
 801d95c:	2300      	movs	r3, #0
 801d95e:	220a      	movs	r2, #10
 801d960:	4658      	mov	r0, fp
 801d962:	f000 f899 	bl	801da98 <__multadd>
 801d966:	4605      	mov	r5, r0
 801d968:	e7f0      	b.n	801d94c <_dtoa_r+0xa8c>
 801d96a:	9b00      	ldr	r3, [sp, #0]
 801d96c:	2b00      	cmp	r3, #0
 801d96e:	bfcc      	ite	gt
 801d970:	461e      	movgt	r6, r3
 801d972:	2601      	movle	r6, #1
 801d974:	4456      	add	r6, sl
 801d976:	2700      	movs	r7, #0
 801d978:	4649      	mov	r1, r9
 801d97a:	2201      	movs	r2, #1
 801d97c:	4658      	mov	r0, fp
 801d97e:	f000 fa1d 	bl	801ddbc <__lshift>
 801d982:	4621      	mov	r1, r4
 801d984:	4681      	mov	r9, r0
 801d986:	f000 fa85 	bl	801de94 <__mcmp>
 801d98a:	2800      	cmp	r0, #0
 801d98c:	dcb0      	bgt.n	801d8f0 <_dtoa_r+0xa30>
 801d98e:	d102      	bne.n	801d996 <_dtoa_r+0xad6>
 801d990:	f018 0f01 	tst.w	r8, #1
 801d994:	d1ac      	bne.n	801d8f0 <_dtoa_r+0xa30>
 801d996:	4633      	mov	r3, r6
 801d998:	461e      	mov	r6, r3
 801d99a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d99e:	2a30      	cmp	r2, #48	@ 0x30
 801d9a0:	d0fa      	beq.n	801d998 <_dtoa_r+0xad8>
 801d9a2:	e5c3      	b.n	801d52c <_dtoa_r+0x66c>
 801d9a4:	459a      	cmp	sl, r3
 801d9a6:	d1a4      	bne.n	801d8f2 <_dtoa_r+0xa32>
 801d9a8:	9b04      	ldr	r3, [sp, #16]
 801d9aa:	3301      	adds	r3, #1
 801d9ac:	9304      	str	r3, [sp, #16]
 801d9ae:	2331      	movs	r3, #49	@ 0x31
 801d9b0:	f88a 3000 	strb.w	r3, [sl]
 801d9b4:	e5ba      	b.n	801d52c <_dtoa_r+0x66c>
 801d9b6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d9b8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 801da14 <_dtoa_r+0xb54>
 801d9bc:	2b00      	cmp	r3, #0
 801d9be:	f43f aab6 	beq.w	801cf2e <_dtoa_r+0x6e>
 801d9c2:	f10a 0308 	add.w	r3, sl, #8
 801d9c6:	f7ff bab0 	b.w	801cf2a <_dtoa_r+0x6a>
 801d9ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d9cc:	2b01      	cmp	r3, #1
 801d9ce:	f77f ae3a 	ble.w	801d646 <_dtoa_r+0x786>
 801d9d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d9d4:	930a      	str	r3, [sp, #40]	@ 0x28
 801d9d6:	2001      	movs	r0, #1
 801d9d8:	e658      	b.n	801d68c <_dtoa_r+0x7cc>
 801d9da:	9b00      	ldr	r3, [sp, #0]
 801d9dc:	2b00      	cmp	r3, #0
 801d9de:	f77f aed9 	ble.w	801d794 <_dtoa_r+0x8d4>
 801d9e2:	4656      	mov	r6, sl
 801d9e4:	4621      	mov	r1, r4
 801d9e6:	4648      	mov	r0, r9
 801d9e8:	f7ff f9e2 	bl	801cdb0 <quorem>
 801d9ec:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801d9f0:	f806 8b01 	strb.w	r8, [r6], #1
 801d9f4:	9b00      	ldr	r3, [sp, #0]
 801d9f6:	eba6 020a 	sub.w	r2, r6, sl
 801d9fa:	4293      	cmp	r3, r2
 801d9fc:	ddb5      	ble.n	801d96a <_dtoa_r+0xaaa>
 801d9fe:	4649      	mov	r1, r9
 801da00:	2300      	movs	r3, #0
 801da02:	220a      	movs	r2, #10
 801da04:	4658      	mov	r0, fp
 801da06:	f000 f847 	bl	801da98 <__multadd>
 801da0a:	4681      	mov	r9, r0
 801da0c:	e7ea      	b.n	801d9e4 <_dtoa_r+0xb24>
 801da0e:	bf00      	nop
 801da10:	0802164f 	.word	0x0802164f
 801da14:	08021642 	.word	0x08021642

0801da18 <__ascii_mbtowc>:
 801da18:	b082      	sub	sp, #8
 801da1a:	b901      	cbnz	r1, 801da1e <__ascii_mbtowc+0x6>
 801da1c:	a901      	add	r1, sp, #4
 801da1e:	b142      	cbz	r2, 801da32 <__ascii_mbtowc+0x1a>
 801da20:	b14b      	cbz	r3, 801da36 <__ascii_mbtowc+0x1e>
 801da22:	7813      	ldrb	r3, [r2, #0]
 801da24:	600b      	str	r3, [r1, #0]
 801da26:	7812      	ldrb	r2, [r2, #0]
 801da28:	1e10      	subs	r0, r2, #0
 801da2a:	bf18      	it	ne
 801da2c:	2001      	movne	r0, #1
 801da2e:	b002      	add	sp, #8
 801da30:	4770      	bx	lr
 801da32:	4610      	mov	r0, r2
 801da34:	e7fb      	b.n	801da2e <__ascii_mbtowc+0x16>
 801da36:	f06f 0001 	mvn.w	r0, #1
 801da3a:	e7f8      	b.n	801da2e <__ascii_mbtowc+0x16>

0801da3c <_Balloc>:
 801da3c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801da3e:	b570      	push	{r4, r5, r6, lr}
 801da40:	4605      	mov	r5, r0
 801da42:	460c      	mov	r4, r1
 801da44:	b17b      	cbz	r3, 801da66 <_Balloc+0x2a>
 801da46:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 801da48:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801da4c:	b9a0      	cbnz	r0, 801da78 <_Balloc+0x3c>
 801da4e:	2101      	movs	r1, #1
 801da50:	fa01 f604 	lsl.w	r6, r1, r4
 801da54:	1d72      	adds	r2, r6, #5
 801da56:	0092      	lsls	r2, r2, #2
 801da58:	4628      	mov	r0, r5
 801da5a:	f000 fd8d 	bl	801e578 <_calloc_r>
 801da5e:	b148      	cbz	r0, 801da74 <_Balloc+0x38>
 801da60:	e9c0 4601 	strd	r4, r6, [r0, #4]
 801da64:	e00b      	b.n	801da7e <_Balloc+0x42>
 801da66:	2221      	movs	r2, #33	@ 0x21
 801da68:	2104      	movs	r1, #4
 801da6a:	f000 fd85 	bl	801e578 <_calloc_r>
 801da6e:	6468      	str	r0, [r5, #68]	@ 0x44
 801da70:	2800      	cmp	r0, #0
 801da72:	d1e8      	bne.n	801da46 <_Balloc+0xa>
 801da74:	2000      	movs	r0, #0
 801da76:	bd70      	pop	{r4, r5, r6, pc}
 801da78:	6802      	ldr	r2, [r0, #0]
 801da7a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 801da7e:	2300      	movs	r3, #0
 801da80:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801da84:	e7f7      	b.n	801da76 <_Balloc+0x3a>

0801da86 <_Bfree>:
 801da86:	b131      	cbz	r1, 801da96 <_Bfree+0x10>
 801da88:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801da8a:	684a      	ldr	r2, [r1, #4]
 801da8c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801da90:	6008      	str	r0, [r1, #0]
 801da92:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801da96:	4770      	bx	lr

0801da98 <__multadd>:
 801da98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801da9c:	690d      	ldr	r5, [r1, #16]
 801da9e:	4607      	mov	r7, r0
 801daa0:	460c      	mov	r4, r1
 801daa2:	461e      	mov	r6, r3
 801daa4:	f101 0c14 	add.w	ip, r1, #20
 801daa8:	2000      	movs	r0, #0
 801daaa:	f8dc 3000 	ldr.w	r3, [ip]
 801daae:	b299      	uxth	r1, r3
 801dab0:	fb02 6101 	mla	r1, r2, r1, r6
 801dab4:	0c1e      	lsrs	r6, r3, #16
 801dab6:	0c0b      	lsrs	r3, r1, #16
 801dab8:	fb02 3306 	mla	r3, r2, r6, r3
 801dabc:	b289      	uxth	r1, r1
 801dabe:	3001      	adds	r0, #1
 801dac0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801dac4:	4285      	cmp	r5, r0
 801dac6:	f84c 1b04 	str.w	r1, [ip], #4
 801daca:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801dace:	dcec      	bgt.n	801daaa <__multadd+0x12>
 801dad0:	b30e      	cbz	r6, 801db16 <__multadd+0x7e>
 801dad2:	68a3      	ldr	r3, [r4, #8]
 801dad4:	42ab      	cmp	r3, r5
 801dad6:	dc19      	bgt.n	801db0c <__multadd+0x74>
 801dad8:	6861      	ldr	r1, [r4, #4]
 801dada:	4638      	mov	r0, r7
 801dadc:	3101      	adds	r1, #1
 801dade:	f7ff ffad 	bl	801da3c <_Balloc>
 801dae2:	4680      	mov	r8, r0
 801dae4:	b928      	cbnz	r0, 801daf2 <__multadd+0x5a>
 801dae6:	4602      	mov	r2, r0
 801dae8:	4b0c      	ldr	r3, [pc, #48]	@ (801db1c <__multadd+0x84>)
 801daea:	480d      	ldr	r0, [pc, #52]	@ (801db20 <__multadd+0x88>)
 801daec:	21ba      	movs	r1, #186	@ 0xba
 801daee:	f000 fd25 	bl	801e53c <__assert_func>
 801daf2:	6922      	ldr	r2, [r4, #16]
 801daf4:	3202      	adds	r2, #2
 801daf6:	f104 010c 	add.w	r1, r4, #12
 801dafa:	0092      	lsls	r2, r2, #2
 801dafc:	300c      	adds	r0, #12
 801dafe:	f7fd fa39 	bl	801af74 <memcpy>
 801db02:	4621      	mov	r1, r4
 801db04:	4638      	mov	r0, r7
 801db06:	f7ff ffbe 	bl	801da86 <_Bfree>
 801db0a:	4644      	mov	r4, r8
 801db0c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801db10:	3501      	adds	r5, #1
 801db12:	615e      	str	r6, [r3, #20]
 801db14:	6125      	str	r5, [r4, #16]
 801db16:	4620      	mov	r0, r4
 801db18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801db1c:	0802164f 	.word	0x0802164f
 801db20:	080216b8 	.word	0x080216b8

0801db24 <__hi0bits>:
 801db24:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 801db28:	4603      	mov	r3, r0
 801db2a:	bf36      	itet	cc
 801db2c:	0403      	lslcc	r3, r0, #16
 801db2e:	2000      	movcs	r0, #0
 801db30:	2010      	movcc	r0, #16
 801db32:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 801db36:	bf3c      	itt	cc
 801db38:	021b      	lslcc	r3, r3, #8
 801db3a:	3008      	addcc	r0, #8
 801db3c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 801db40:	bf3c      	itt	cc
 801db42:	011b      	lslcc	r3, r3, #4
 801db44:	3004      	addcc	r0, #4
 801db46:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801db4a:	bf3c      	itt	cc
 801db4c:	009b      	lslcc	r3, r3, #2
 801db4e:	3002      	addcc	r0, #2
 801db50:	2b00      	cmp	r3, #0
 801db52:	db05      	blt.n	801db60 <__hi0bits+0x3c>
 801db54:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 801db58:	f100 0001 	add.w	r0, r0, #1
 801db5c:	bf08      	it	eq
 801db5e:	2020      	moveq	r0, #32
 801db60:	4770      	bx	lr

0801db62 <__lo0bits>:
 801db62:	6803      	ldr	r3, [r0, #0]
 801db64:	4602      	mov	r2, r0
 801db66:	f013 0007 	ands.w	r0, r3, #7
 801db6a:	d00b      	beq.n	801db84 <__lo0bits+0x22>
 801db6c:	07d9      	lsls	r1, r3, #31
 801db6e:	d421      	bmi.n	801dbb4 <__lo0bits+0x52>
 801db70:	0798      	lsls	r0, r3, #30
 801db72:	bf49      	itett	mi
 801db74:	085b      	lsrmi	r3, r3, #1
 801db76:	089b      	lsrpl	r3, r3, #2
 801db78:	2001      	movmi	r0, #1
 801db7a:	6013      	strmi	r3, [r2, #0]
 801db7c:	bf5c      	itt	pl
 801db7e:	6013      	strpl	r3, [r2, #0]
 801db80:	2002      	movpl	r0, #2
 801db82:	4770      	bx	lr
 801db84:	b299      	uxth	r1, r3
 801db86:	b909      	cbnz	r1, 801db8c <__lo0bits+0x2a>
 801db88:	0c1b      	lsrs	r3, r3, #16
 801db8a:	2010      	movs	r0, #16
 801db8c:	b2d9      	uxtb	r1, r3
 801db8e:	b909      	cbnz	r1, 801db94 <__lo0bits+0x32>
 801db90:	3008      	adds	r0, #8
 801db92:	0a1b      	lsrs	r3, r3, #8
 801db94:	0719      	lsls	r1, r3, #28
 801db96:	bf04      	itt	eq
 801db98:	091b      	lsreq	r3, r3, #4
 801db9a:	3004      	addeq	r0, #4
 801db9c:	0799      	lsls	r1, r3, #30
 801db9e:	bf04      	itt	eq
 801dba0:	089b      	lsreq	r3, r3, #2
 801dba2:	3002      	addeq	r0, #2
 801dba4:	07d9      	lsls	r1, r3, #31
 801dba6:	d403      	bmi.n	801dbb0 <__lo0bits+0x4e>
 801dba8:	085b      	lsrs	r3, r3, #1
 801dbaa:	f100 0001 	add.w	r0, r0, #1
 801dbae:	d003      	beq.n	801dbb8 <__lo0bits+0x56>
 801dbb0:	6013      	str	r3, [r2, #0]
 801dbb2:	4770      	bx	lr
 801dbb4:	2000      	movs	r0, #0
 801dbb6:	4770      	bx	lr
 801dbb8:	2020      	movs	r0, #32
 801dbba:	4770      	bx	lr

0801dbbc <__i2b>:
 801dbbc:	b510      	push	{r4, lr}
 801dbbe:	460c      	mov	r4, r1
 801dbc0:	2101      	movs	r1, #1
 801dbc2:	f7ff ff3b 	bl	801da3c <_Balloc>
 801dbc6:	4602      	mov	r2, r0
 801dbc8:	b928      	cbnz	r0, 801dbd6 <__i2b+0x1a>
 801dbca:	4b05      	ldr	r3, [pc, #20]	@ (801dbe0 <__i2b+0x24>)
 801dbcc:	4805      	ldr	r0, [pc, #20]	@ (801dbe4 <__i2b+0x28>)
 801dbce:	f240 1145 	movw	r1, #325	@ 0x145
 801dbd2:	f000 fcb3 	bl	801e53c <__assert_func>
 801dbd6:	2301      	movs	r3, #1
 801dbd8:	6144      	str	r4, [r0, #20]
 801dbda:	6103      	str	r3, [r0, #16]
 801dbdc:	bd10      	pop	{r4, pc}
 801dbde:	bf00      	nop
 801dbe0:	0802164f 	.word	0x0802164f
 801dbe4:	080216b8 	.word	0x080216b8

0801dbe8 <__multiply>:
 801dbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbec:	4614      	mov	r4, r2
 801dbee:	690a      	ldr	r2, [r1, #16]
 801dbf0:	6923      	ldr	r3, [r4, #16]
 801dbf2:	429a      	cmp	r2, r3
 801dbf4:	bfa8      	it	ge
 801dbf6:	4623      	movge	r3, r4
 801dbf8:	460f      	mov	r7, r1
 801dbfa:	bfa4      	itt	ge
 801dbfc:	460c      	movge	r4, r1
 801dbfe:	461f      	movge	r7, r3
 801dc00:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801dc04:	f8d7 9010 	ldr.w	r9, [r7, #16]
 801dc08:	68a3      	ldr	r3, [r4, #8]
 801dc0a:	6861      	ldr	r1, [r4, #4]
 801dc0c:	eb0a 0609 	add.w	r6, sl, r9
 801dc10:	42b3      	cmp	r3, r6
 801dc12:	b085      	sub	sp, #20
 801dc14:	bfb8      	it	lt
 801dc16:	3101      	addlt	r1, #1
 801dc18:	f7ff ff10 	bl	801da3c <_Balloc>
 801dc1c:	b930      	cbnz	r0, 801dc2c <__multiply+0x44>
 801dc1e:	4602      	mov	r2, r0
 801dc20:	4b44      	ldr	r3, [pc, #272]	@ (801dd34 <__multiply+0x14c>)
 801dc22:	4845      	ldr	r0, [pc, #276]	@ (801dd38 <__multiply+0x150>)
 801dc24:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 801dc28:	f000 fc88 	bl	801e53c <__assert_func>
 801dc2c:	f100 0514 	add.w	r5, r0, #20
 801dc30:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801dc34:	462b      	mov	r3, r5
 801dc36:	2200      	movs	r2, #0
 801dc38:	4543      	cmp	r3, r8
 801dc3a:	d321      	bcc.n	801dc80 <__multiply+0x98>
 801dc3c:	f107 0114 	add.w	r1, r7, #20
 801dc40:	f104 0214 	add.w	r2, r4, #20
 801dc44:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 801dc48:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 801dc4c:	9302      	str	r3, [sp, #8]
 801dc4e:	1b13      	subs	r3, r2, r4
 801dc50:	3b15      	subs	r3, #21
 801dc52:	f023 0303 	bic.w	r3, r3, #3
 801dc56:	3304      	adds	r3, #4
 801dc58:	f104 0715 	add.w	r7, r4, #21
 801dc5c:	42ba      	cmp	r2, r7
 801dc5e:	bf38      	it	cc
 801dc60:	2304      	movcc	r3, #4
 801dc62:	9301      	str	r3, [sp, #4]
 801dc64:	9b02      	ldr	r3, [sp, #8]
 801dc66:	9103      	str	r1, [sp, #12]
 801dc68:	428b      	cmp	r3, r1
 801dc6a:	d80c      	bhi.n	801dc86 <__multiply+0x9e>
 801dc6c:	2e00      	cmp	r6, #0
 801dc6e:	dd03      	ble.n	801dc78 <__multiply+0x90>
 801dc70:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801dc74:	2b00      	cmp	r3, #0
 801dc76:	d05b      	beq.n	801dd30 <__multiply+0x148>
 801dc78:	6106      	str	r6, [r0, #16]
 801dc7a:	b005      	add	sp, #20
 801dc7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc80:	f843 2b04 	str.w	r2, [r3], #4
 801dc84:	e7d8      	b.n	801dc38 <__multiply+0x50>
 801dc86:	f8b1 a000 	ldrh.w	sl, [r1]
 801dc8a:	f1ba 0f00 	cmp.w	sl, #0
 801dc8e:	d024      	beq.n	801dcda <__multiply+0xf2>
 801dc90:	f104 0e14 	add.w	lr, r4, #20
 801dc94:	46a9      	mov	r9, r5
 801dc96:	f04f 0c00 	mov.w	ip, #0
 801dc9a:	f85e 7b04 	ldr.w	r7, [lr], #4
 801dc9e:	f8d9 3000 	ldr.w	r3, [r9]
 801dca2:	fa1f fb87 	uxth.w	fp, r7
 801dca6:	b29b      	uxth	r3, r3
 801dca8:	fb0a 330b 	mla	r3, sl, fp, r3
 801dcac:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 801dcb0:	f8d9 7000 	ldr.w	r7, [r9]
 801dcb4:	4463      	add	r3, ip
 801dcb6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801dcba:	fb0a c70b 	mla	r7, sl, fp, ip
 801dcbe:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 801dcc2:	b29b      	uxth	r3, r3
 801dcc4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 801dcc8:	4572      	cmp	r2, lr
 801dcca:	f849 3b04 	str.w	r3, [r9], #4
 801dcce:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801dcd2:	d8e2      	bhi.n	801dc9a <__multiply+0xb2>
 801dcd4:	9b01      	ldr	r3, [sp, #4]
 801dcd6:	f845 c003 	str.w	ip, [r5, r3]
 801dcda:	9b03      	ldr	r3, [sp, #12]
 801dcdc:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 801dce0:	3104      	adds	r1, #4
 801dce2:	f1b9 0f00 	cmp.w	r9, #0
 801dce6:	d021      	beq.n	801dd2c <__multiply+0x144>
 801dce8:	682b      	ldr	r3, [r5, #0]
 801dcea:	f104 0c14 	add.w	ip, r4, #20
 801dcee:	46ae      	mov	lr, r5
 801dcf0:	f04f 0a00 	mov.w	sl, #0
 801dcf4:	f8bc b000 	ldrh.w	fp, [ip]
 801dcf8:	f8be 7002 	ldrh.w	r7, [lr, #2]
 801dcfc:	fb09 770b 	mla	r7, r9, fp, r7
 801dd00:	4457      	add	r7, sl
 801dd02:	b29b      	uxth	r3, r3
 801dd04:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 801dd08:	f84e 3b04 	str.w	r3, [lr], #4
 801dd0c:	f85c 3b04 	ldr.w	r3, [ip], #4
 801dd10:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801dd14:	f8be 3000 	ldrh.w	r3, [lr]
 801dd18:	fb09 330a 	mla	r3, r9, sl, r3
 801dd1c:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 801dd20:	4562      	cmp	r2, ip
 801dd22:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801dd26:	d8e5      	bhi.n	801dcf4 <__multiply+0x10c>
 801dd28:	9f01      	ldr	r7, [sp, #4]
 801dd2a:	51eb      	str	r3, [r5, r7]
 801dd2c:	3504      	adds	r5, #4
 801dd2e:	e799      	b.n	801dc64 <__multiply+0x7c>
 801dd30:	3e01      	subs	r6, #1
 801dd32:	e79b      	b.n	801dc6c <__multiply+0x84>
 801dd34:	0802164f 	.word	0x0802164f
 801dd38:	080216b8 	.word	0x080216b8

0801dd3c <__pow5mult>:
 801dd3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dd40:	4615      	mov	r5, r2
 801dd42:	f012 0203 	ands.w	r2, r2, #3
 801dd46:	4607      	mov	r7, r0
 801dd48:	460e      	mov	r6, r1
 801dd4a:	d007      	beq.n	801dd5c <__pow5mult+0x20>
 801dd4c:	4c1a      	ldr	r4, [pc, #104]	@ (801ddb8 <__pow5mult+0x7c>)
 801dd4e:	3a01      	subs	r2, #1
 801dd50:	2300      	movs	r3, #0
 801dd52:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801dd56:	f7ff fe9f 	bl	801da98 <__multadd>
 801dd5a:	4606      	mov	r6, r0
 801dd5c:	10ad      	asrs	r5, r5, #2
 801dd5e:	d027      	beq.n	801ddb0 <__pow5mult+0x74>
 801dd60:	6c3c      	ldr	r4, [r7, #64]	@ 0x40
 801dd62:	b944      	cbnz	r4, 801dd76 <__pow5mult+0x3a>
 801dd64:	f240 2171 	movw	r1, #625	@ 0x271
 801dd68:	4638      	mov	r0, r7
 801dd6a:	f7ff ff27 	bl	801dbbc <__i2b>
 801dd6e:	2300      	movs	r3, #0
 801dd70:	6438      	str	r0, [r7, #64]	@ 0x40
 801dd72:	4604      	mov	r4, r0
 801dd74:	6003      	str	r3, [r0, #0]
 801dd76:	f04f 0900 	mov.w	r9, #0
 801dd7a:	07eb      	lsls	r3, r5, #31
 801dd7c:	d50a      	bpl.n	801dd94 <__pow5mult+0x58>
 801dd7e:	4631      	mov	r1, r6
 801dd80:	4622      	mov	r2, r4
 801dd82:	4638      	mov	r0, r7
 801dd84:	f7ff ff30 	bl	801dbe8 <__multiply>
 801dd88:	4631      	mov	r1, r6
 801dd8a:	4680      	mov	r8, r0
 801dd8c:	4638      	mov	r0, r7
 801dd8e:	f7ff fe7a 	bl	801da86 <_Bfree>
 801dd92:	4646      	mov	r6, r8
 801dd94:	106d      	asrs	r5, r5, #1
 801dd96:	d00b      	beq.n	801ddb0 <__pow5mult+0x74>
 801dd98:	6820      	ldr	r0, [r4, #0]
 801dd9a:	b938      	cbnz	r0, 801ddac <__pow5mult+0x70>
 801dd9c:	4622      	mov	r2, r4
 801dd9e:	4621      	mov	r1, r4
 801dda0:	4638      	mov	r0, r7
 801dda2:	f7ff ff21 	bl	801dbe8 <__multiply>
 801dda6:	6020      	str	r0, [r4, #0]
 801dda8:	f8c0 9000 	str.w	r9, [r0]
 801ddac:	4604      	mov	r4, r0
 801ddae:	e7e4      	b.n	801dd7a <__pow5mult+0x3e>
 801ddb0:	4630      	mov	r0, r6
 801ddb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ddb6:	bf00      	nop
 801ddb8:	08021714 	.word	0x08021714

0801ddbc <__lshift>:
 801ddbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ddc0:	460c      	mov	r4, r1
 801ddc2:	6849      	ldr	r1, [r1, #4]
 801ddc4:	6923      	ldr	r3, [r4, #16]
 801ddc6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801ddca:	68a3      	ldr	r3, [r4, #8]
 801ddcc:	4607      	mov	r7, r0
 801ddce:	4691      	mov	r9, r2
 801ddd0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801ddd4:	f108 0601 	add.w	r6, r8, #1
 801ddd8:	42b3      	cmp	r3, r6
 801ddda:	db0b      	blt.n	801ddf4 <__lshift+0x38>
 801dddc:	4638      	mov	r0, r7
 801ddde:	f7ff fe2d 	bl	801da3c <_Balloc>
 801dde2:	4605      	mov	r5, r0
 801dde4:	b948      	cbnz	r0, 801ddfa <__lshift+0x3e>
 801dde6:	4602      	mov	r2, r0
 801dde8:	4b28      	ldr	r3, [pc, #160]	@ (801de8c <__lshift+0xd0>)
 801ddea:	4829      	ldr	r0, [pc, #164]	@ (801de90 <__lshift+0xd4>)
 801ddec:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 801ddf0:	f000 fba4 	bl	801e53c <__assert_func>
 801ddf4:	3101      	adds	r1, #1
 801ddf6:	005b      	lsls	r3, r3, #1
 801ddf8:	e7ee      	b.n	801ddd8 <__lshift+0x1c>
 801ddfa:	2300      	movs	r3, #0
 801ddfc:	f100 0114 	add.w	r1, r0, #20
 801de00:	f100 0210 	add.w	r2, r0, #16
 801de04:	4618      	mov	r0, r3
 801de06:	4553      	cmp	r3, sl
 801de08:	db33      	blt.n	801de72 <__lshift+0xb6>
 801de0a:	6920      	ldr	r0, [r4, #16]
 801de0c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801de10:	f104 0314 	add.w	r3, r4, #20
 801de14:	f019 091f 	ands.w	r9, r9, #31
 801de18:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801de1c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 801de20:	d02b      	beq.n	801de7a <__lshift+0xbe>
 801de22:	f1c9 0e20 	rsb	lr, r9, #32
 801de26:	468a      	mov	sl, r1
 801de28:	2200      	movs	r2, #0
 801de2a:	6818      	ldr	r0, [r3, #0]
 801de2c:	fa00 f009 	lsl.w	r0, r0, r9
 801de30:	4310      	orrs	r0, r2
 801de32:	f84a 0b04 	str.w	r0, [sl], #4
 801de36:	f853 2b04 	ldr.w	r2, [r3], #4
 801de3a:	459c      	cmp	ip, r3
 801de3c:	fa22 f20e 	lsr.w	r2, r2, lr
 801de40:	d8f3      	bhi.n	801de2a <__lshift+0x6e>
 801de42:	ebac 0304 	sub.w	r3, ip, r4
 801de46:	3b15      	subs	r3, #21
 801de48:	f023 0303 	bic.w	r3, r3, #3
 801de4c:	3304      	adds	r3, #4
 801de4e:	f104 0015 	add.w	r0, r4, #21
 801de52:	4584      	cmp	ip, r0
 801de54:	bf38      	it	cc
 801de56:	2304      	movcc	r3, #4
 801de58:	50ca      	str	r2, [r1, r3]
 801de5a:	b10a      	cbz	r2, 801de60 <__lshift+0xa4>
 801de5c:	f108 0602 	add.w	r6, r8, #2
 801de60:	3e01      	subs	r6, #1
 801de62:	4638      	mov	r0, r7
 801de64:	612e      	str	r6, [r5, #16]
 801de66:	4621      	mov	r1, r4
 801de68:	f7ff fe0d 	bl	801da86 <_Bfree>
 801de6c:	4628      	mov	r0, r5
 801de6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801de72:	f842 0f04 	str.w	r0, [r2, #4]!
 801de76:	3301      	adds	r3, #1
 801de78:	e7c5      	b.n	801de06 <__lshift+0x4a>
 801de7a:	3904      	subs	r1, #4
 801de7c:	f853 2b04 	ldr.w	r2, [r3], #4
 801de80:	f841 2f04 	str.w	r2, [r1, #4]!
 801de84:	459c      	cmp	ip, r3
 801de86:	d8f9      	bhi.n	801de7c <__lshift+0xc0>
 801de88:	e7ea      	b.n	801de60 <__lshift+0xa4>
 801de8a:	bf00      	nop
 801de8c:	0802164f 	.word	0x0802164f
 801de90:	080216b8 	.word	0x080216b8

0801de94 <__mcmp>:
 801de94:	690a      	ldr	r2, [r1, #16]
 801de96:	4603      	mov	r3, r0
 801de98:	6900      	ldr	r0, [r0, #16]
 801de9a:	1a80      	subs	r0, r0, r2
 801de9c:	b530      	push	{r4, r5, lr}
 801de9e:	d10e      	bne.n	801debe <__mcmp+0x2a>
 801dea0:	3314      	adds	r3, #20
 801dea2:	3114      	adds	r1, #20
 801dea4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 801dea8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 801deac:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 801deb0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801deb4:	4295      	cmp	r5, r2
 801deb6:	d003      	beq.n	801dec0 <__mcmp+0x2c>
 801deb8:	d205      	bcs.n	801dec6 <__mcmp+0x32>
 801deba:	f04f 30ff 	mov.w	r0, #4294967295
 801debe:	bd30      	pop	{r4, r5, pc}
 801dec0:	42a3      	cmp	r3, r4
 801dec2:	d3f3      	bcc.n	801deac <__mcmp+0x18>
 801dec4:	e7fb      	b.n	801debe <__mcmp+0x2a>
 801dec6:	2001      	movs	r0, #1
 801dec8:	e7f9      	b.n	801debe <__mcmp+0x2a>
	...

0801decc <__mdiff>:
 801decc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ded0:	4689      	mov	r9, r1
 801ded2:	4606      	mov	r6, r0
 801ded4:	4611      	mov	r1, r2
 801ded6:	4648      	mov	r0, r9
 801ded8:	4614      	mov	r4, r2
 801deda:	f7ff ffdb 	bl	801de94 <__mcmp>
 801dede:	1e05      	subs	r5, r0, #0
 801dee0:	d112      	bne.n	801df08 <__mdiff+0x3c>
 801dee2:	4629      	mov	r1, r5
 801dee4:	4630      	mov	r0, r6
 801dee6:	f7ff fda9 	bl	801da3c <_Balloc>
 801deea:	4602      	mov	r2, r0
 801deec:	b928      	cbnz	r0, 801defa <__mdiff+0x2e>
 801deee:	4b3f      	ldr	r3, [pc, #252]	@ (801dfec <__mdiff+0x120>)
 801def0:	f240 2137 	movw	r1, #567	@ 0x237
 801def4:	483e      	ldr	r0, [pc, #248]	@ (801dff0 <__mdiff+0x124>)
 801def6:	f000 fb21 	bl	801e53c <__assert_func>
 801defa:	2301      	movs	r3, #1
 801defc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801df00:	4610      	mov	r0, r2
 801df02:	b003      	add	sp, #12
 801df04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df08:	bfbc      	itt	lt
 801df0a:	464b      	movlt	r3, r9
 801df0c:	46a1      	movlt	r9, r4
 801df0e:	4630      	mov	r0, r6
 801df10:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801df14:	bfba      	itte	lt
 801df16:	461c      	movlt	r4, r3
 801df18:	2501      	movlt	r5, #1
 801df1a:	2500      	movge	r5, #0
 801df1c:	f7ff fd8e 	bl	801da3c <_Balloc>
 801df20:	4602      	mov	r2, r0
 801df22:	b918      	cbnz	r0, 801df2c <__mdiff+0x60>
 801df24:	4b31      	ldr	r3, [pc, #196]	@ (801dfec <__mdiff+0x120>)
 801df26:	f240 2145 	movw	r1, #581	@ 0x245
 801df2a:	e7e3      	b.n	801def4 <__mdiff+0x28>
 801df2c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 801df30:	6926      	ldr	r6, [r4, #16]
 801df32:	60c5      	str	r5, [r0, #12]
 801df34:	f109 0310 	add.w	r3, r9, #16
 801df38:	f109 0514 	add.w	r5, r9, #20
 801df3c:	f104 0e14 	add.w	lr, r4, #20
 801df40:	f100 0b14 	add.w	fp, r0, #20
 801df44:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 801df48:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 801df4c:	9301      	str	r3, [sp, #4]
 801df4e:	46d9      	mov	r9, fp
 801df50:	f04f 0c00 	mov.w	ip, #0
 801df54:	9b01      	ldr	r3, [sp, #4]
 801df56:	f85e 0b04 	ldr.w	r0, [lr], #4
 801df5a:	f853 af04 	ldr.w	sl, [r3, #4]!
 801df5e:	9301      	str	r3, [sp, #4]
 801df60:	fa1f f38a 	uxth.w	r3, sl
 801df64:	4619      	mov	r1, r3
 801df66:	b283      	uxth	r3, r0
 801df68:	1acb      	subs	r3, r1, r3
 801df6a:	0c00      	lsrs	r0, r0, #16
 801df6c:	4463      	add	r3, ip
 801df6e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 801df72:	eb00 4023 	add.w	r0, r0, r3, asr #16
 801df76:	b29b      	uxth	r3, r3
 801df78:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 801df7c:	4576      	cmp	r6, lr
 801df7e:	f849 3b04 	str.w	r3, [r9], #4
 801df82:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801df86:	d8e5      	bhi.n	801df54 <__mdiff+0x88>
 801df88:	1b33      	subs	r3, r6, r4
 801df8a:	3b15      	subs	r3, #21
 801df8c:	f023 0303 	bic.w	r3, r3, #3
 801df90:	3415      	adds	r4, #21
 801df92:	3304      	adds	r3, #4
 801df94:	42a6      	cmp	r6, r4
 801df96:	bf38      	it	cc
 801df98:	2304      	movcc	r3, #4
 801df9a:	441d      	add	r5, r3
 801df9c:	445b      	add	r3, fp
 801df9e:	461e      	mov	r6, r3
 801dfa0:	462c      	mov	r4, r5
 801dfa2:	4544      	cmp	r4, r8
 801dfa4:	d30e      	bcc.n	801dfc4 <__mdiff+0xf8>
 801dfa6:	f108 0103 	add.w	r1, r8, #3
 801dfaa:	1b49      	subs	r1, r1, r5
 801dfac:	f021 0103 	bic.w	r1, r1, #3
 801dfb0:	3d03      	subs	r5, #3
 801dfb2:	45a8      	cmp	r8, r5
 801dfb4:	bf38      	it	cc
 801dfb6:	2100      	movcc	r1, #0
 801dfb8:	440b      	add	r3, r1
 801dfba:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801dfbe:	b191      	cbz	r1, 801dfe6 <__mdiff+0x11a>
 801dfc0:	6117      	str	r7, [r2, #16]
 801dfc2:	e79d      	b.n	801df00 <__mdiff+0x34>
 801dfc4:	f854 1b04 	ldr.w	r1, [r4], #4
 801dfc8:	46e6      	mov	lr, ip
 801dfca:	0c08      	lsrs	r0, r1, #16
 801dfcc:	fa1c fc81 	uxtah	ip, ip, r1
 801dfd0:	4471      	add	r1, lr
 801dfd2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 801dfd6:	b289      	uxth	r1, r1
 801dfd8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 801dfdc:	f846 1b04 	str.w	r1, [r6], #4
 801dfe0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801dfe4:	e7dd      	b.n	801dfa2 <__mdiff+0xd6>
 801dfe6:	3f01      	subs	r7, #1
 801dfe8:	e7e7      	b.n	801dfba <__mdiff+0xee>
 801dfea:	bf00      	nop
 801dfec:	0802164f 	.word	0x0802164f
 801dff0:	080216b8 	.word	0x080216b8

0801dff4 <__d2b>:
 801dff4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801dff8:	460f      	mov	r7, r1
 801dffa:	2101      	movs	r1, #1
 801dffc:	ec59 8b10 	vmov	r8, r9, d0
 801e000:	4616      	mov	r6, r2
 801e002:	f7ff fd1b 	bl	801da3c <_Balloc>
 801e006:	4604      	mov	r4, r0
 801e008:	b930      	cbnz	r0, 801e018 <__d2b+0x24>
 801e00a:	4602      	mov	r2, r0
 801e00c:	4b23      	ldr	r3, [pc, #140]	@ (801e09c <__d2b+0xa8>)
 801e00e:	4824      	ldr	r0, [pc, #144]	@ (801e0a0 <__d2b+0xac>)
 801e010:	f240 310f 	movw	r1, #783	@ 0x30f
 801e014:	f000 fa92 	bl	801e53c <__assert_func>
 801e018:	f3c9 550a 	ubfx	r5, r9, #20, #11
 801e01c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801e020:	b10d      	cbz	r5, 801e026 <__d2b+0x32>
 801e022:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801e026:	9301      	str	r3, [sp, #4]
 801e028:	f1b8 0300 	subs.w	r3, r8, #0
 801e02c:	d023      	beq.n	801e076 <__d2b+0x82>
 801e02e:	4668      	mov	r0, sp
 801e030:	9300      	str	r3, [sp, #0]
 801e032:	f7ff fd96 	bl	801db62 <__lo0bits>
 801e036:	e9dd 1200 	ldrd	r1, r2, [sp]
 801e03a:	b1d0      	cbz	r0, 801e072 <__d2b+0x7e>
 801e03c:	f1c0 0320 	rsb	r3, r0, #32
 801e040:	fa02 f303 	lsl.w	r3, r2, r3
 801e044:	430b      	orrs	r3, r1
 801e046:	40c2      	lsrs	r2, r0
 801e048:	6163      	str	r3, [r4, #20]
 801e04a:	9201      	str	r2, [sp, #4]
 801e04c:	9b01      	ldr	r3, [sp, #4]
 801e04e:	61a3      	str	r3, [r4, #24]
 801e050:	2b00      	cmp	r3, #0
 801e052:	bf0c      	ite	eq
 801e054:	2201      	moveq	r2, #1
 801e056:	2202      	movne	r2, #2
 801e058:	6122      	str	r2, [r4, #16]
 801e05a:	b1a5      	cbz	r5, 801e086 <__d2b+0x92>
 801e05c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 801e060:	4405      	add	r5, r0
 801e062:	603d      	str	r5, [r7, #0]
 801e064:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 801e068:	6030      	str	r0, [r6, #0]
 801e06a:	4620      	mov	r0, r4
 801e06c:	b003      	add	sp, #12
 801e06e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e072:	6161      	str	r1, [r4, #20]
 801e074:	e7ea      	b.n	801e04c <__d2b+0x58>
 801e076:	a801      	add	r0, sp, #4
 801e078:	f7ff fd73 	bl	801db62 <__lo0bits>
 801e07c:	9b01      	ldr	r3, [sp, #4]
 801e07e:	6163      	str	r3, [r4, #20]
 801e080:	3020      	adds	r0, #32
 801e082:	2201      	movs	r2, #1
 801e084:	e7e8      	b.n	801e058 <__d2b+0x64>
 801e086:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e08a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 801e08e:	6038      	str	r0, [r7, #0]
 801e090:	6918      	ldr	r0, [r3, #16]
 801e092:	f7ff fd47 	bl	801db24 <__hi0bits>
 801e096:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801e09a:	e7e5      	b.n	801e068 <__d2b+0x74>
 801e09c:	0802164f 	.word	0x0802164f
 801e0a0:	080216b8 	.word	0x080216b8

0801e0a4 <_realloc_r>:
 801e0a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0a8:	4682      	mov	sl, r0
 801e0aa:	4693      	mov	fp, r2
 801e0ac:	460c      	mov	r4, r1
 801e0ae:	b929      	cbnz	r1, 801e0bc <_realloc_r+0x18>
 801e0b0:	4611      	mov	r1, r2
 801e0b2:	b003      	add	sp, #12
 801e0b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0b8:	f7fd b890 	b.w	801b1dc <_malloc_r>
 801e0bc:	f7fd fac8 	bl	801b650 <__malloc_lock>
 801e0c0:	f10b 080b 	add.w	r8, fp, #11
 801e0c4:	f854 5c04 	ldr.w	r5, [r4, #-4]
 801e0c8:	f1b8 0f16 	cmp.w	r8, #22
 801e0cc:	f1a4 0908 	sub.w	r9, r4, #8
 801e0d0:	f025 0603 	bic.w	r6, r5, #3
 801e0d4:	d908      	bls.n	801e0e8 <_realloc_r+0x44>
 801e0d6:	f038 0807 	bics.w	r8, r8, #7
 801e0da:	d507      	bpl.n	801e0ec <_realloc_r+0x48>
 801e0dc:	230c      	movs	r3, #12
 801e0de:	f8ca 3000 	str.w	r3, [sl]
 801e0e2:	f04f 0b00 	mov.w	fp, #0
 801e0e6:	e032      	b.n	801e14e <_realloc_r+0xaa>
 801e0e8:	f04f 0810 	mov.w	r8, #16
 801e0ec:	45c3      	cmp	fp, r8
 801e0ee:	d8f5      	bhi.n	801e0dc <_realloc_r+0x38>
 801e0f0:	4546      	cmp	r6, r8
 801e0f2:	f280 8174 	bge.w	801e3de <_realloc_r+0x33a>
 801e0f6:	4b9e      	ldr	r3, [pc, #632]	@ (801e370 <_realloc_r+0x2cc>)
 801e0f8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 801e0fc:	eb09 0106 	add.w	r1, r9, r6
 801e100:	458c      	cmp	ip, r1
 801e102:	6848      	ldr	r0, [r1, #4]
 801e104:	d005      	beq.n	801e112 <_realloc_r+0x6e>
 801e106:	f020 0201 	bic.w	r2, r0, #1
 801e10a:	440a      	add	r2, r1
 801e10c:	6852      	ldr	r2, [r2, #4]
 801e10e:	07d7      	lsls	r7, r2, #31
 801e110:	d449      	bmi.n	801e1a6 <_realloc_r+0x102>
 801e112:	f020 0003 	bic.w	r0, r0, #3
 801e116:	458c      	cmp	ip, r1
 801e118:	eb06 0700 	add.w	r7, r6, r0
 801e11c:	d11b      	bne.n	801e156 <_realloc_r+0xb2>
 801e11e:	f108 0210 	add.w	r2, r8, #16
 801e122:	42ba      	cmp	r2, r7
 801e124:	dc41      	bgt.n	801e1aa <_realloc_r+0x106>
 801e126:	eb09 0208 	add.w	r2, r9, r8
 801e12a:	eba7 0708 	sub.w	r7, r7, r8
 801e12e:	f047 0701 	orr.w	r7, r7, #1
 801e132:	609a      	str	r2, [r3, #8]
 801e134:	6057      	str	r7, [r2, #4]
 801e136:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801e13a:	f003 0301 	and.w	r3, r3, #1
 801e13e:	ea43 0308 	orr.w	r3, r3, r8
 801e142:	f844 3c04 	str.w	r3, [r4, #-4]
 801e146:	4650      	mov	r0, sl
 801e148:	f7fd fa88 	bl	801b65c <__malloc_unlock>
 801e14c:	46a3      	mov	fp, r4
 801e14e:	4658      	mov	r0, fp
 801e150:	b003      	add	sp, #12
 801e152:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e156:	45b8      	cmp	r8, r7
 801e158:	dc27      	bgt.n	801e1aa <_realloc_r+0x106>
 801e15a:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 801e15e:	60d3      	str	r3, [r2, #12]
 801e160:	609a      	str	r2, [r3, #8]
 801e162:	f8d9 3004 	ldr.w	r3, [r9, #4]
 801e166:	eba7 0008 	sub.w	r0, r7, r8
 801e16a:	280f      	cmp	r0, #15
 801e16c:	f003 0301 	and.w	r3, r3, #1
 801e170:	eb09 0207 	add.w	r2, r9, r7
 801e174:	f240 8135 	bls.w	801e3e2 <_realloc_r+0x33e>
 801e178:	eb09 0108 	add.w	r1, r9, r8
 801e17c:	ea48 0303 	orr.w	r3, r8, r3
 801e180:	f040 0001 	orr.w	r0, r0, #1
 801e184:	f8c9 3004 	str.w	r3, [r9, #4]
 801e188:	6048      	str	r0, [r1, #4]
 801e18a:	6853      	ldr	r3, [r2, #4]
 801e18c:	f043 0301 	orr.w	r3, r3, #1
 801e190:	6053      	str	r3, [r2, #4]
 801e192:	3108      	adds	r1, #8
 801e194:	4650      	mov	r0, sl
 801e196:	f7fc ff61 	bl	801b05c <_free_r>
 801e19a:	4650      	mov	r0, sl
 801e19c:	f7fd fa5e 	bl	801b65c <__malloc_unlock>
 801e1a0:	f109 0b08 	add.w	fp, r9, #8
 801e1a4:	e7d3      	b.n	801e14e <_realloc_r+0xaa>
 801e1a6:	2000      	movs	r0, #0
 801e1a8:	4601      	mov	r1, r0
 801e1aa:	07ea      	lsls	r2, r5, #31
 801e1ac:	f100 80c7 	bmi.w	801e33e <_realloc_r+0x29a>
 801e1b0:	f854 5c08 	ldr.w	r5, [r4, #-8]
 801e1b4:	eba9 0505 	sub.w	r5, r9, r5
 801e1b8:	686a      	ldr	r2, [r5, #4]
 801e1ba:	f022 0203 	bic.w	r2, r2, #3
 801e1be:	4432      	add	r2, r6
 801e1c0:	9201      	str	r2, [sp, #4]
 801e1c2:	2900      	cmp	r1, #0
 801e1c4:	f000 8086 	beq.w	801e2d4 <_realloc_r+0x230>
 801e1c8:	458c      	cmp	ip, r1
 801e1ca:	eb00 0702 	add.w	r7, r0, r2
 801e1ce:	d149      	bne.n	801e264 <_realloc_r+0x1c0>
 801e1d0:	f108 0210 	add.w	r2, r8, #16
 801e1d4:	42ba      	cmp	r2, r7
 801e1d6:	dc7d      	bgt.n	801e2d4 <_realloc_r+0x230>
 801e1d8:	46ab      	mov	fp, r5
 801e1da:	68ea      	ldr	r2, [r5, #12]
 801e1dc:	f85b 1f08 	ldr.w	r1, [fp, #8]!
 801e1e0:	60ca      	str	r2, [r1, #12]
 801e1e2:	6091      	str	r1, [r2, #8]
 801e1e4:	1f32      	subs	r2, r6, #4
 801e1e6:	2a24      	cmp	r2, #36	@ 0x24
 801e1e8:	d836      	bhi.n	801e258 <_realloc_r+0x1b4>
 801e1ea:	2a13      	cmp	r2, #19
 801e1ec:	d932      	bls.n	801e254 <_realloc_r+0x1b0>
 801e1ee:	6821      	ldr	r1, [r4, #0]
 801e1f0:	60a9      	str	r1, [r5, #8]
 801e1f2:	6861      	ldr	r1, [r4, #4]
 801e1f4:	60e9      	str	r1, [r5, #12]
 801e1f6:	2a1b      	cmp	r2, #27
 801e1f8:	d81a      	bhi.n	801e230 <_realloc_r+0x18c>
 801e1fa:	3408      	adds	r4, #8
 801e1fc:	f105 0210 	add.w	r2, r5, #16
 801e200:	6821      	ldr	r1, [r4, #0]
 801e202:	6011      	str	r1, [r2, #0]
 801e204:	6861      	ldr	r1, [r4, #4]
 801e206:	6051      	str	r1, [r2, #4]
 801e208:	68a1      	ldr	r1, [r4, #8]
 801e20a:	6091      	str	r1, [r2, #8]
 801e20c:	eb05 0208 	add.w	r2, r5, r8
 801e210:	eba7 0708 	sub.w	r7, r7, r8
 801e214:	f047 0701 	orr.w	r7, r7, #1
 801e218:	609a      	str	r2, [r3, #8]
 801e21a:	6057      	str	r7, [r2, #4]
 801e21c:	686b      	ldr	r3, [r5, #4]
 801e21e:	f003 0301 	and.w	r3, r3, #1
 801e222:	ea43 0308 	orr.w	r3, r3, r8
 801e226:	606b      	str	r3, [r5, #4]
 801e228:	4650      	mov	r0, sl
 801e22a:	f7fd fa17 	bl	801b65c <__malloc_unlock>
 801e22e:	e78e      	b.n	801e14e <_realloc_r+0xaa>
 801e230:	68a1      	ldr	r1, [r4, #8]
 801e232:	6129      	str	r1, [r5, #16]
 801e234:	68e1      	ldr	r1, [r4, #12]
 801e236:	6169      	str	r1, [r5, #20]
 801e238:	2a24      	cmp	r2, #36	@ 0x24
 801e23a:	bf01      	itttt	eq
 801e23c:	6922      	ldreq	r2, [r4, #16]
 801e23e:	61aa      	streq	r2, [r5, #24]
 801e240:	6961      	ldreq	r1, [r4, #20]
 801e242:	61e9      	streq	r1, [r5, #28]
 801e244:	bf19      	ittee	ne
 801e246:	3410      	addne	r4, #16
 801e248:	f105 0218 	addne.w	r2, r5, #24
 801e24c:	f105 0220 	addeq.w	r2, r5, #32
 801e250:	3418      	addeq	r4, #24
 801e252:	e7d5      	b.n	801e200 <_realloc_r+0x15c>
 801e254:	465a      	mov	r2, fp
 801e256:	e7d3      	b.n	801e200 <_realloc_r+0x15c>
 801e258:	4621      	mov	r1, r4
 801e25a:	4658      	mov	r0, fp
 801e25c:	f000 f954 	bl	801e508 <memmove>
 801e260:	4b43      	ldr	r3, [pc, #268]	@ (801e370 <_realloc_r+0x2cc>)
 801e262:	e7d3      	b.n	801e20c <_realloc_r+0x168>
 801e264:	45b8      	cmp	r8, r7
 801e266:	dc35      	bgt.n	801e2d4 <_realloc_r+0x230>
 801e268:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 801e26c:	4628      	mov	r0, r5
 801e26e:	60d3      	str	r3, [r2, #12]
 801e270:	609a      	str	r2, [r3, #8]
 801e272:	f850 2f08 	ldr.w	r2, [r0, #8]!
 801e276:	68eb      	ldr	r3, [r5, #12]
 801e278:	60d3      	str	r3, [r2, #12]
 801e27a:	609a      	str	r2, [r3, #8]
 801e27c:	1f32      	subs	r2, r6, #4
 801e27e:	2a24      	cmp	r2, #36	@ 0x24
 801e280:	d824      	bhi.n	801e2cc <_realloc_r+0x228>
 801e282:	2a13      	cmp	r2, #19
 801e284:	d908      	bls.n	801e298 <_realloc_r+0x1f4>
 801e286:	6823      	ldr	r3, [r4, #0]
 801e288:	60ab      	str	r3, [r5, #8]
 801e28a:	6863      	ldr	r3, [r4, #4]
 801e28c:	60eb      	str	r3, [r5, #12]
 801e28e:	2a1b      	cmp	r2, #27
 801e290:	d80a      	bhi.n	801e2a8 <_realloc_r+0x204>
 801e292:	3408      	adds	r4, #8
 801e294:	f105 0010 	add.w	r0, r5, #16
 801e298:	6823      	ldr	r3, [r4, #0]
 801e29a:	6003      	str	r3, [r0, #0]
 801e29c:	6863      	ldr	r3, [r4, #4]
 801e29e:	6043      	str	r3, [r0, #4]
 801e2a0:	68a3      	ldr	r3, [r4, #8]
 801e2a2:	6083      	str	r3, [r0, #8]
 801e2a4:	46a9      	mov	r9, r5
 801e2a6:	e75c      	b.n	801e162 <_realloc_r+0xbe>
 801e2a8:	68a3      	ldr	r3, [r4, #8]
 801e2aa:	612b      	str	r3, [r5, #16]
 801e2ac:	68e3      	ldr	r3, [r4, #12]
 801e2ae:	616b      	str	r3, [r5, #20]
 801e2b0:	2a24      	cmp	r2, #36	@ 0x24
 801e2b2:	bf01      	itttt	eq
 801e2b4:	6923      	ldreq	r3, [r4, #16]
 801e2b6:	61ab      	streq	r3, [r5, #24]
 801e2b8:	6963      	ldreq	r3, [r4, #20]
 801e2ba:	61eb      	streq	r3, [r5, #28]
 801e2bc:	bf19      	ittee	ne
 801e2be:	3410      	addne	r4, #16
 801e2c0:	f105 0018 	addne.w	r0, r5, #24
 801e2c4:	f105 0020 	addeq.w	r0, r5, #32
 801e2c8:	3418      	addeq	r4, #24
 801e2ca:	e7e5      	b.n	801e298 <_realloc_r+0x1f4>
 801e2cc:	4621      	mov	r1, r4
 801e2ce:	f000 f91b 	bl	801e508 <memmove>
 801e2d2:	e7e7      	b.n	801e2a4 <_realloc_r+0x200>
 801e2d4:	9b01      	ldr	r3, [sp, #4]
 801e2d6:	4598      	cmp	r8, r3
 801e2d8:	dc31      	bgt.n	801e33e <_realloc_r+0x29a>
 801e2da:	4628      	mov	r0, r5
 801e2dc:	68eb      	ldr	r3, [r5, #12]
 801e2de:	f850 2f08 	ldr.w	r2, [r0, #8]!
 801e2e2:	60d3      	str	r3, [r2, #12]
 801e2e4:	609a      	str	r2, [r3, #8]
 801e2e6:	1f32      	subs	r2, r6, #4
 801e2e8:	2a24      	cmp	r2, #36	@ 0x24
 801e2ea:	d824      	bhi.n	801e336 <_realloc_r+0x292>
 801e2ec:	2a13      	cmp	r2, #19
 801e2ee:	d908      	bls.n	801e302 <_realloc_r+0x25e>
 801e2f0:	6823      	ldr	r3, [r4, #0]
 801e2f2:	60ab      	str	r3, [r5, #8]
 801e2f4:	6863      	ldr	r3, [r4, #4]
 801e2f6:	60eb      	str	r3, [r5, #12]
 801e2f8:	2a1b      	cmp	r2, #27
 801e2fa:	d80a      	bhi.n	801e312 <_realloc_r+0x26e>
 801e2fc:	3408      	adds	r4, #8
 801e2fe:	f105 0010 	add.w	r0, r5, #16
 801e302:	6823      	ldr	r3, [r4, #0]
 801e304:	6003      	str	r3, [r0, #0]
 801e306:	6863      	ldr	r3, [r4, #4]
 801e308:	6043      	str	r3, [r0, #4]
 801e30a:	68a3      	ldr	r3, [r4, #8]
 801e30c:	6083      	str	r3, [r0, #8]
 801e30e:	9f01      	ldr	r7, [sp, #4]
 801e310:	e7c8      	b.n	801e2a4 <_realloc_r+0x200>
 801e312:	68a3      	ldr	r3, [r4, #8]
 801e314:	612b      	str	r3, [r5, #16]
 801e316:	68e3      	ldr	r3, [r4, #12]
 801e318:	616b      	str	r3, [r5, #20]
 801e31a:	2a24      	cmp	r2, #36	@ 0x24
 801e31c:	bf01      	itttt	eq
 801e31e:	6923      	ldreq	r3, [r4, #16]
 801e320:	61ab      	streq	r3, [r5, #24]
 801e322:	6963      	ldreq	r3, [r4, #20]
 801e324:	61eb      	streq	r3, [r5, #28]
 801e326:	bf19      	ittee	ne
 801e328:	3410      	addne	r4, #16
 801e32a:	f105 0018 	addne.w	r0, r5, #24
 801e32e:	f105 0020 	addeq.w	r0, r5, #32
 801e332:	3418      	addeq	r4, #24
 801e334:	e7e5      	b.n	801e302 <_realloc_r+0x25e>
 801e336:	4621      	mov	r1, r4
 801e338:	f000 f8e6 	bl	801e508 <memmove>
 801e33c:	e7e7      	b.n	801e30e <_realloc_r+0x26a>
 801e33e:	4659      	mov	r1, fp
 801e340:	4650      	mov	r0, sl
 801e342:	f7fc ff4b 	bl	801b1dc <_malloc_r>
 801e346:	4683      	mov	fp, r0
 801e348:	b918      	cbnz	r0, 801e352 <_realloc_r+0x2ae>
 801e34a:	4650      	mov	r0, sl
 801e34c:	f7fd f986 	bl	801b65c <__malloc_unlock>
 801e350:	e6c7      	b.n	801e0e2 <_realloc_r+0x3e>
 801e352:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801e356:	f023 0301 	bic.w	r3, r3, #1
 801e35a:	444b      	add	r3, r9
 801e35c:	f1a0 0208 	sub.w	r2, r0, #8
 801e360:	4293      	cmp	r3, r2
 801e362:	d107      	bne.n	801e374 <_realloc_r+0x2d0>
 801e364:	f850 7c04 	ldr.w	r7, [r0, #-4]
 801e368:	f027 0703 	bic.w	r7, r7, #3
 801e36c:	4437      	add	r7, r6
 801e36e:	e6f8      	b.n	801e162 <_realloc_r+0xbe>
 801e370:	20000254 	.word	0x20000254
 801e374:	1f32      	subs	r2, r6, #4
 801e376:	2a24      	cmp	r2, #36	@ 0x24
 801e378:	d82d      	bhi.n	801e3d6 <_realloc_r+0x332>
 801e37a:	2a13      	cmp	r2, #19
 801e37c:	d928      	bls.n	801e3d0 <_realloc_r+0x32c>
 801e37e:	6823      	ldr	r3, [r4, #0]
 801e380:	6003      	str	r3, [r0, #0]
 801e382:	6863      	ldr	r3, [r4, #4]
 801e384:	6043      	str	r3, [r0, #4]
 801e386:	2a1b      	cmp	r2, #27
 801e388:	d80e      	bhi.n	801e3a8 <_realloc_r+0x304>
 801e38a:	f104 0208 	add.w	r2, r4, #8
 801e38e:	f100 0308 	add.w	r3, r0, #8
 801e392:	6811      	ldr	r1, [r2, #0]
 801e394:	6019      	str	r1, [r3, #0]
 801e396:	6851      	ldr	r1, [r2, #4]
 801e398:	6059      	str	r1, [r3, #4]
 801e39a:	6892      	ldr	r2, [r2, #8]
 801e39c:	609a      	str	r2, [r3, #8]
 801e39e:	4621      	mov	r1, r4
 801e3a0:	4650      	mov	r0, sl
 801e3a2:	f7fc fe5b 	bl	801b05c <_free_r>
 801e3a6:	e73f      	b.n	801e228 <_realloc_r+0x184>
 801e3a8:	68a3      	ldr	r3, [r4, #8]
 801e3aa:	6083      	str	r3, [r0, #8]
 801e3ac:	68e3      	ldr	r3, [r4, #12]
 801e3ae:	60c3      	str	r3, [r0, #12]
 801e3b0:	2a24      	cmp	r2, #36	@ 0x24
 801e3b2:	bf01      	itttt	eq
 801e3b4:	6923      	ldreq	r3, [r4, #16]
 801e3b6:	6103      	streq	r3, [r0, #16]
 801e3b8:	6961      	ldreq	r1, [r4, #20]
 801e3ba:	6141      	streq	r1, [r0, #20]
 801e3bc:	bf19      	ittee	ne
 801e3be:	f104 0210 	addne.w	r2, r4, #16
 801e3c2:	f100 0310 	addne.w	r3, r0, #16
 801e3c6:	f104 0218 	addeq.w	r2, r4, #24
 801e3ca:	f100 0318 	addeq.w	r3, r0, #24
 801e3ce:	e7e0      	b.n	801e392 <_realloc_r+0x2ee>
 801e3d0:	4603      	mov	r3, r0
 801e3d2:	4622      	mov	r2, r4
 801e3d4:	e7dd      	b.n	801e392 <_realloc_r+0x2ee>
 801e3d6:	4621      	mov	r1, r4
 801e3d8:	f000 f896 	bl	801e508 <memmove>
 801e3dc:	e7df      	b.n	801e39e <_realloc_r+0x2fa>
 801e3de:	4637      	mov	r7, r6
 801e3e0:	e6bf      	b.n	801e162 <_realloc_r+0xbe>
 801e3e2:	431f      	orrs	r7, r3
 801e3e4:	f8c9 7004 	str.w	r7, [r9, #4]
 801e3e8:	6853      	ldr	r3, [r2, #4]
 801e3ea:	f043 0301 	orr.w	r3, r3, #1
 801e3ee:	6053      	str	r3, [r2, #4]
 801e3f0:	e6d3      	b.n	801e19a <_realloc_r+0xf6>
 801e3f2:	bf00      	nop

0801e3f4 <__ascii_wctomb>:
 801e3f4:	4603      	mov	r3, r0
 801e3f6:	4608      	mov	r0, r1
 801e3f8:	b141      	cbz	r1, 801e40c <__ascii_wctomb+0x18>
 801e3fa:	2aff      	cmp	r2, #255	@ 0xff
 801e3fc:	d904      	bls.n	801e408 <__ascii_wctomb+0x14>
 801e3fe:	228a      	movs	r2, #138	@ 0x8a
 801e400:	601a      	str	r2, [r3, #0]
 801e402:	f04f 30ff 	mov.w	r0, #4294967295
 801e406:	4770      	bx	lr
 801e408:	700a      	strb	r2, [r1, #0]
 801e40a:	2001      	movs	r0, #1
 801e40c:	4770      	bx	lr

0801e40e <__ssprint_r>:
 801e40e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e412:	6893      	ldr	r3, [r2, #8]
 801e414:	f8d2 b000 	ldr.w	fp, [r2]
 801e418:	9001      	str	r0, [sp, #4]
 801e41a:	460c      	mov	r4, r1
 801e41c:	4617      	mov	r7, r2
 801e41e:	2b00      	cmp	r3, #0
 801e420:	d157      	bne.n	801e4d2 <__ssprint_r+0xc4>
 801e422:	2000      	movs	r0, #0
 801e424:	2300      	movs	r3, #0
 801e426:	607b      	str	r3, [r7, #4]
 801e428:	b003      	add	sp, #12
 801e42a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e42e:	e9db a800 	ldrd	sl, r8, [fp]
 801e432:	f10b 0b08 	add.w	fp, fp, #8
 801e436:	68a6      	ldr	r6, [r4, #8]
 801e438:	6820      	ldr	r0, [r4, #0]
 801e43a:	f1b8 0f00 	cmp.w	r8, #0
 801e43e:	d0f6      	beq.n	801e42e <__ssprint_r+0x20>
 801e440:	45b0      	cmp	r8, r6
 801e442:	d32e      	bcc.n	801e4a2 <__ssprint_r+0x94>
 801e444:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e448:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 801e44c:	d029      	beq.n	801e4a2 <__ssprint_r+0x94>
 801e44e:	6921      	ldr	r1, [r4, #16]
 801e450:	6965      	ldr	r5, [r4, #20]
 801e452:	eba0 0901 	sub.w	r9, r0, r1
 801e456:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e45a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801e45e:	f109 0001 	add.w	r0, r9, #1
 801e462:	106d      	asrs	r5, r5, #1
 801e464:	4440      	add	r0, r8
 801e466:	4285      	cmp	r5, r0
 801e468:	bf38      	it	cc
 801e46a:	4605      	movcc	r5, r0
 801e46c:	0553      	lsls	r3, r2, #21
 801e46e:	d534      	bpl.n	801e4da <__ssprint_r+0xcc>
 801e470:	9801      	ldr	r0, [sp, #4]
 801e472:	4629      	mov	r1, r5
 801e474:	f7fc feb2 	bl	801b1dc <_malloc_r>
 801e478:	4606      	mov	r6, r0
 801e47a:	2800      	cmp	r0, #0
 801e47c:	d038      	beq.n	801e4f0 <__ssprint_r+0xe2>
 801e47e:	464a      	mov	r2, r9
 801e480:	6921      	ldr	r1, [r4, #16]
 801e482:	f7fc fd77 	bl	801af74 <memcpy>
 801e486:	89a2      	ldrh	r2, [r4, #12]
 801e488:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 801e48c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801e490:	81a2      	strh	r2, [r4, #12]
 801e492:	6126      	str	r6, [r4, #16]
 801e494:	6165      	str	r5, [r4, #20]
 801e496:	444e      	add	r6, r9
 801e498:	eba5 0509 	sub.w	r5, r5, r9
 801e49c:	6026      	str	r6, [r4, #0]
 801e49e:	60a5      	str	r5, [r4, #8]
 801e4a0:	4646      	mov	r6, r8
 801e4a2:	4546      	cmp	r6, r8
 801e4a4:	bf28      	it	cs
 801e4a6:	4646      	movcs	r6, r8
 801e4a8:	4632      	mov	r2, r6
 801e4aa:	4651      	mov	r1, sl
 801e4ac:	6820      	ldr	r0, [r4, #0]
 801e4ae:	f000 f82b 	bl	801e508 <memmove>
 801e4b2:	68a2      	ldr	r2, [r4, #8]
 801e4b4:	1b92      	subs	r2, r2, r6
 801e4b6:	60a2      	str	r2, [r4, #8]
 801e4b8:	6822      	ldr	r2, [r4, #0]
 801e4ba:	4432      	add	r2, r6
 801e4bc:	6022      	str	r2, [r4, #0]
 801e4be:	68ba      	ldr	r2, [r7, #8]
 801e4c0:	eba2 0308 	sub.w	r3, r2, r8
 801e4c4:	44c2      	add	sl, r8
 801e4c6:	60bb      	str	r3, [r7, #8]
 801e4c8:	2b00      	cmp	r3, #0
 801e4ca:	d0aa      	beq.n	801e422 <__ssprint_r+0x14>
 801e4cc:	f04f 0800 	mov.w	r8, #0
 801e4d0:	e7b1      	b.n	801e436 <__ssprint_r+0x28>
 801e4d2:	f04f 0a00 	mov.w	sl, #0
 801e4d6:	46d0      	mov	r8, sl
 801e4d8:	e7ad      	b.n	801e436 <__ssprint_r+0x28>
 801e4da:	9801      	ldr	r0, [sp, #4]
 801e4dc:	462a      	mov	r2, r5
 801e4de:	f7ff fde1 	bl	801e0a4 <_realloc_r>
 801e4e2:	4606      	mov	r6, r0
 801e4e4:	2800      	cmp	r0, #0
 801e4e6:	d1d4      	bne.n	801e492 <__ssprint_r+0x84>
 801e4e8:	6921      	ldr	r1, [r4, #16]
 801e4ea:	9801      	ldr	r0, [sp, #4]
 801e4ec:	f7fc fdb6 	bl	801b05c <_free_r>
 801e4f0:	9a01      	ldr	r2, [sp, #4]
 801e4f2:	230c      	movs	r3, #12
 801e4f4:	6013      	str	r3, [r2, #0]
 801e4f6:	89a3      	ldrh	r3, [r4, #12]
 801e4f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e4fc:	81a3      	strh	r3, [r4, #12]
 801e4fe:	2300      	movs	r3, #0
 801e500:	60bb      	str	r3, [r7, #8]
 801e502:	f04f 30ff 	mov.w	r0, #4294967295
 801e506:	e78d      	b.n	801e424 <__ssprint_r+0x16>

0801e508 <memmove>:
 801e508:	4288      	cmp	r0, r1
 801e50a:	b510      	push	{r4, lr}
 801e50c:	eb01 0402 	add.w	r4, r1, r2
 801e510:	d902      	bls.n	801e518 <memmove+0x10>
 801e512:	4284      	cmp	r4, r0
 801e514:	4623      	mov	r3, r4
 801e516:	d807      	bhi.n	801e528 <memmove+0x20>
 801e518:	1e43      	subs	r3, r0, #1
 801e51a:	42a1      	cmp	r1, r4
 801e51c:	d008      	beq.n	801e530 <memmove+0x28>
 801e51e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e522:	f803 2f01 	strb.w	r2, [r3, #1]!
 801e526:	e7f8      	b.n	801e51a <memmove+0x12>
 801e528:	4402      	add	r2, r0
 801e52a:	4601      	mov	r1, r0
 801e52c:	428a      	cmp	r2, r1
 801e52e:	d100      	bne.n	801e532 <memmove+0x2a>
 801e530:	bd10      	pop	{r4, pc}
 801e532:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801e536:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801e53a:	e7f7      	b.n	801e52c <memmove+0x24>

0801e53c <__assert_func>:
 801e53c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801e53e:	4614      	mov	r4, r2
 801e540:	461a      	mov	r2, r3
 801e542:	4b09      	ldr	r3, [pc, #36]	@ (801e568 <__assert_func+0x2c>)
 801e544:	681b      	ldr	r3, [r3, #0]
 801e546:	4605      	mov	r5, r0
 801e548:	68d8      	ldr	r0, [r3, #12]
 801e54a:	b954      	cbnz	r4, 801e562 <__assert_func+0x26>
 801e54c:	4b07      	ldr	r3, [pc, #28]	@ (801e56c <__assert_func+0x30>)
 801e54e:	461c      	mov	r4, r3
 801e550:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801e554:	9100      	str	r1, [sp, #0]
 801e556:	462b      	mov	r3, r5
 801e558:	4905      	ldr	r1, [pc, #20]	@ (801e570 <__assert_func+0x34>)
 801e55a:	f000 f843 	bl	801e5e4 <fiprintf>
 801e55e:	f000 ff59 	bl	801f414 <abort>
 801e562:	4b04      	ldr	r3, [pc, #16]	@ (801e574 <__assert_func+0x38>)
 801e564:	e7f4      	b.n	801e550 <__assert_func+0x14>
 801e566:	bf00      	nop
 801e568:	20000120 	.word	0x20000120
 801e56c:	0802194c 	.word	0x0802194c
 801e570:	0802191e 	.word	0x0802191e
 801e574:	08021911 	.word	0x08021911

0801e578 <_calloc_r>:
 801e578:	b538      	push	{r3, r4, r5, lr}
 801e57a:	fba1 1502 	umull	r1, r5, r1, r2
 801e57e:	b935      	cbnz	r5, 801e58e <_calloc_r+0x16>
 801e580:	f7fc fe2c 	bl	801b1dc <_malloc_r>
 801e584:	4604      	mov	r4, r0
 801e586:	b938      	cbnz	r0, 801e598 <_calloc_r+0x20>
 801e588:	2400      	movs	r4, #0
 801e58a:	4620      	mov	r0, r4
 801e58c:	bd38      	pop	{r3, r4, r5, pc}
 801e58e:	f7fc fcc3 	bl	801af18 <__errno>
 801e592:	230c      	movs	r3, #12
 801e594:	6003      	str	r3, [r0, #0]
 801e596:	e7f7      	b.n	801e588 <_calloc_r+0x10>
 801e598:	f850 2c04 	ldr.w	r2, [r0, #-4]
 801e59c:	f022 0203 	bic.w	r2, r2, #3
 801e5a0:	3a04      	subs	r2, #4
 801e5a2:	2a24      	cmp	r2, #36	@ 0x24
 801e5a4:	d819      	bhi.n	801e5da <_calloc_r+0x62>
 801e5a6:	2a13      	cmp	r2, #19
 801e5a8:	d915      	bls.n	801e5d6 <_calloc_r+0x5e>
 801e5aa:	2a1b      	cmp	r2, #27
 801e5ac:	e9c0 5500 	strd	r5, r5, [r0]
 801e5b0:	d806      	bhi.n	801e5c0 <_calloc_r+0x48>
 801e5b2:	f100 0308 	add.w	r3, r0, #8
 801e5b6:	2200      	movs	r2, #0
 801e5b8:	e9c3 2200 	strd	r2, r2, [r3]
 801e5bc:	609a      	str	r2, [r3, #8]
 801e5be:	e7e4      	b.n	801e58a <_calloc_r+0x12>
 801e5c0:	2a24      	cmp	r2, #36	@ 0x24
 801e5c2:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801e5c6:	bf11      	iteee	ne
 801e5c8:	f100 0310 	addne.w	r3, r0, #16
 801e5cc:	6105      	streq	r5, [r0, #16]
 801e5ce:	f100 0318 	addeq.w	r3, r0, #24
 801e5d2:	6145      	streq	r5, [r0, #20]
 801e5d4:	e7ef      	b.n	801e5b6 <_calloc_r+0x3e>
 801e5d6:	4603      	mov	r3, r0
 801e5d8:	e7ed      	b.n	801e5b6 <_calloc_r+0x3e>
 801e5da:	4629      	mov	r1, r5
 801e5dc:	f7fc fc21 	bl	801ae22 <memset>
 801e5e0:	e7d3      	b.n	801e58a <_calloc_r+0x12>
	...

0801e5e4 <fiprintf>:
 801e5e4:	b40e      	push	{r1, r2, r3}
 801e5e6:	b503      	push	{r0, r1, lr}
 801e5e8:	4601      	mov	r1, r0
 801e5ea:	ab03      	add	r3, sp, #12
 801e5ec:	4805      	ldr	r0, [pc, #20]	@ (801e604 <fiprintf+0x20>)
 801e5ee:	f853 2b04 	ldr.w	r2, [r3], #4
 801e5f2:	6800      	ldr	r0, [r0, #0]
 801e5f4:	9301      	str	r3, [sp, #4]
 801e5f6:	f000 f839 	bl	801e66c <_vfiprintf_r>
 801e5fa:	b002      	add	sp, #8
 801e5fc:	f85d eb04 	ldr.w	lr, [sp], #4
 801e600:	b003      	add	sp, #12
 801e602:	4770      	bx	lr
 801e604:	20000120 	.word	0x20000120

0801e608 <__sprint_r>:
 801e608:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e60c:	6893      	ldr	r3, [r2, #8]
 801e60e:	4680      	mov	r8, r0
 801e610:	460e      	mov	r6, r1
 801e612:	4614      	mov	r4, r2
 801e614:	b343      	cbz	r3, 801e668 <__sprint_r+0x60>
 801e616:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 801e618:	049d      	lsls	r5, r3, #18
 801e61a:	d522      	bpl.n	801e662 <__sprint_r+0x5a>
 801e61c:	6815      	ldr	r5, [r2, #0]
 801e61e:	68a0      	ldr	r0, [r4, #8]
 801e620:	3508      	adds	r5, #8
 801e622:	b928      	cbnz	r0, 801e630 <__sprint_r+0x28>
 801e624:	2300      	movs	r3, #0
 801e626:	60a3      	str	r3, [r4, #8]
 801e628:	2300      	movs	r3, #0
 801e62a:	6063      	str	r3, [r4, #4]
 801e62c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e630:	e955 b702 	ldrd	fp, r7, [r5, #-8]
 801e634:	f04f 0900 	mov.w	r9, #0
 801e638:	ea4f 0a97 	mov.w	sl, r7, lsr #2
 801e63c:	45ca      	cmp	sl, r9
 801e63e:	dc05      	bgt.n	801e64c <__sprint_r+0x44>
 801e640:	68a3      	ldr	r3, [r4, #8]
 801e642:	f027 0703 	bic.w	r7, r7, #3
 801e646:	1bdb      	subs	r3, r3, r7
 801e648:	60a3      	str	r3, [r4, #8]
 801e64a:	e7e8      	b.n	801e61e <__sprint_r+0x16>
 801e64c:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 801e650:	4632      	mov	r2, r6
 801e652:	4640      	mov	r0, r8
 801e654:	f000 feb5 	bl	801f3c2 <_fputwc_r>
 801e658:	1c43      	adds	r3, r0, #1
 801e65a:	d0e3      	beq.n	801e624 <__sprint_r+0x1c>
 801e65c:	f109 0901 	add.w	r9, r9, #1
 801e660:	e7ec      	b.n	801e63c <__sprint_r+0x34>
 801e662:	f000 fccb 	bl	801effc <__sfvwrite_r>
 801e666:	e7dd      	b.n	801e624 <__sprint_r+0x1c>
 801e668:	4618      	mov	r0, r3
 801e66a:	e7dd      	b.n	801e628 <__sprint_r+0x20>

0801e66c <_vfiprintf_r>:
 801e66c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e670:	b0bb      	sub	sp, #236	@ 0xec
 801e672:	460f      	mov	r7, r1
 801e674:	4693      	mov	fp, r2
 801e676:	461c      	mov	r4, r3
 801e678:	461d      	mov	r5, r3
 801e67a:	9000      	str	r0, [sp, #0]
 801e67c:	b118      	cbz	r0, 801e686 <_vfiprintf_r+0x1a>
 801e67e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801e680:	b90b      	cbnz	r3, 801e686 <_vfiprintf_r+0x1a>
 801e682:	f7fc fb21 	bl	801acc8 <__sinit>
 801e686:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e688:	07db      	lsls	r3, r3, #31
 801e68a:	d405      	bmi.n	801e698 <_vfiprintf_r+0x2c>
 801e68c:	89bb      	ldrh	r3, [r7, #12]
 801e68e:	059e      	lsls	r6, r3, #22
 801e690:	d402      	bmi.n	801e698 <_vfiprintf_r+0x2c>
 801e692:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e694:	f7fc fc6c 	bl	801af70 <__retarget_lock_acquire_recursive>
 801e698:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801e69c:	0498      	lsls	r0, r3, #18
 801e69e:	d406      	bmi.n	801e6ae <_vfiprintf_r+0x42>
 801e6a0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801e6a4:	81bb      	strh	r3, [r7, #12]
 801e6a6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e6a8:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801e6ac:	667b      	str	r3, [r7, #100]	@ 0x64
 801e6ae:	89bb      	ldrh	r3, [r7, #12]
 801e6b0:	0719      	lsls	r1, r3, #28
 801e6b2:	d501      	bpl.n	801e6b8 <_vfiprintf_r+0x4c>
 801e6b4:	693b      	ldr	r3, [r7, #16]
 801e6b6:	b9ab      	cbnz	r3, 801e6e4 <_vfiprintf_r+0x78>
 801e6b8:	9800      	ldr	r0, [sp, #0]
 801e6ba:	4639      	mov	r1, r7
 801e6bc:	f000 fdea 	bl	801f294 <__swsetup_r>
 801e6c0:	b180      	cbz	r0, 801e6e4 <_vfiprintf_r+0x78>
 801e6c2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e6c4:	07da      	lsls	r2, r3, #31
 801e6c6:	d506      	bpl.n	801e6d6 <_vfiprintf_r+0x6a>
 801e6c8:	f04f 33ff 	mov.w	r3, #4294967295
 801e6cc:	9303      	str	r3, [sp, #12]
 801e6ce:	9803      	ldr	r0, [sp, #12]
 801e6d0:	b03b      	add	sp, #236	@ 0xec
 801e6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6d6:	89bb      	ldrh	r3, [r7, #12]
 801e6d8:	059b      	lsls	r3, r3, #22
 801e6da:	d4f5      	bmi.n	801e6c8 <_vfiprintf_r+0x5c>
 801e6dc:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e6de:	f7fc fc48 	bl	801af72 <__retarget_lock_release_recursive>
 801e6e2:	e7f1      	b.n	801e6c8 <_vfiprintf_r+0x5c>
 801e6e4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801e6e8:	f003 021a 	and.w	r2, r3, #26
 801e6ec:	2a0a      	cmp	r2, #10
 801e6ee:	d114      	bne.n	801e71a <_vfiprintf_r+0xae>
 801e6f0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 801e6f4:	2a00      	cmp	r2, #0
 801e6f6:	db10      	blt.n	801e71a <_vfiprintf_r+0xae>
 801e6f8:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 801e6fa:	07d6      	lsls	r6, r2, #31
 801e6fc:	d404      	bmi.n	801e708 <_vfiprintf_r+0x9c>
 801e6fe:	059d      	lsls	r5, r3, #22
 801e700:	d402      	bmi.n	801e708 <_vfiprintf_r+0x9c>
 801e702:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e704:	f7fc fc35 	bl	801af72 <__retarget_lock_release_recursive>
 801e708:	9800      	ldr	r0, [sp, #0]
 801e70a:	4623      	mov	r3, r4
 801e70c:	465a      	mov	r2, fp
 801e70e:	4639      	mov	r1, r7
 801e710:	b03b      	add	sp, #236	@ 0xec
 801e712:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e716:	f000 bc31 	b.w	801ef7c <__sbprintf>
 801e71a:	2300      	movs	r3, #0
 801e71c:	e9cd 330f 	strd	r3, r3, [sp, #60]	@ 0x3c
 801e720:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801e724:	ae11      	add	r6, sp, #68	@ 0x44
 801e726:	960e      	str	r6, [sp, #56]	@ 0x38
 801e728:	9307      	str	r3, [sp, #28]
 801e72a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e72c:	9303      	str	r3, [sp, #12]
 801e72e:	465b      	mov	r3, fp
 801e730:	461c      	mov	r4, r3
 801e732:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e736:	b10a      	cbz	r2, 801e73c <_vfiprintf_r+0xd0>
 801e738:	2a25      	cmp	r2, #37	@ 0x25
 801e73a:	d1f9      	bne.n	801e730 <_vfiprintf_r+0xc4>
 801e73c:	ebb4 080b 	subs.w	r8, r4, fp
 801e740:	d00d      	beq.n	801e75e <_vfiprintf_r+0xf2>
 801e742:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e744:	4443      	add	r3, r8
 801e746:	9310      	str	r3, [sp, #64]	@ 0x40
 801e748:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e74a:	3301      	adds	r3, #1
 801e74c:	2b07      	cmp	r3, #7
 801e74e:	e9c6 b800 	strd	fp, r8, [r6]
 801e752:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e754:	dc75      	bgt.n	801e842 <_vfiprintf_r+0x1d6>
 801e756:	3608      	adds	r6, #8
 801e758:	9b03      	ldr	r3, [sp, #12]
 801e75a:	4443      	add	r3, r8
 801e75c:	9303      	str	r3, [sp, #12]
 801e75e:	7823      	ldrb	r3, [r4, #0]
 801e760:	2b00      	cmp	r3, #0
 801e762:	f000 83cd 	beq.w	801ef00 <_vfiprintf_r+0x894>
 801e766:	2300      	movs	r3, #0
 801e768:	f04f 32ff 	mov.w	r2, #4294967295
 801e76c:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801e770:	3401      	adds	r4, #1
 801e772:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801e776:	469a      	mov	sl, r3
 801e778:	46a3      	mov	fp, r4
 801e77a:	f81b 3b01 	ldrb.w	r3, [fp], #1
 801e77e:	f1a3 0220 	sub.w	r2, r3, #32
 801e782:	2a5a      	cmp	r2, #90	@ 0x5a
 801e784:	f200 8316 	bhi.w	801edb4 <_vfiprintf_r+0x748>
 801e788:	e8df f012 	tbh	[pc, r2, lsl #1]
 801e78c:	0314009a 	.word	0x0314009a
 801e790:	00a20314 	.word	0x00a20314
 801e794:	03140314 	.word	0x03140314
 801e798:	00820314 	.word	0x00820314
 801e79c:	03140314 	.word	0x03140314
 801e7a0:	00af00a5 	.word	0x00af00a5
 801e7a4:	00ac0314 	.word	0x00ac0314
 801e7a8:	031400b1 	.word	0x031400b1
 801e7ac:	00d000cd 	.word	0x00d000cd
 801e7b0:	00d000d0 	.word	0x00d000d0
 801e7b4:	00d000d0 	.word	0x00d000d0
 801e7b8:	00d000d0 	.word	0x00d000d0
 801e7bc:	00d000d0 	.word	0x00d000d0
 801e7c0:	03140314 	.word	0x03140314
 801e7c4:	03140314 	.word	0x03140314
 801e7c8:	03140314 	.word	0x03140314
 801e7cc:	03140314 	.word	0x03140314
 801e7d0:	00f70314 	.word	0x00f70314
 801e7d4:	03140104 	.word	0x03140104
 801e7d8:	03140314 	.word	0x03140314
 801e7dc:	03140314 	.word	0x03140314
 801e7e0:	03140314 	.word	0x03140314
 801e7e4:	03140314 	.word	0x03140314
 801e7e8:	01520314 	.word	0x01520314
 801e7ec:	03140314 	.word	0x03140314
 801e7f0:	019a0314 	.word	0x019a0314
 801e7f4:	027a0314 	.word	0x027a0314
 801e7f8:	03140314 	.word	0x03140314
 801e7fc:	0314029a 	.word	0x0314029a
 801e800:	03140314 	.word	0x03140314
 801e804:	03140314 	.word	0x03140314
 801e808:	03140314 	.word	0x03140314
 801e80c:	03140314 	.word	0x03140314
 801e810:	00f70314 	.word	0x00f70314
 801e814:	03140106 	.word	0x03140106
 801e818:	03140314 	.word	0x03140314
 801e81c:	010600e0 	.word	0x010600e0
 801e820:	031400f1 	.word	0x031400f1
 801e824:	031400eb 	.word	0x031400eb
 801e828:	01540132 	.word	0x01540132
 801e82c:	00f10189 	.word	0x00f10189
 801e830:	019a0314 	.word	0x019a0314
 801e834:	027c0098 	.word	0x027c0098
 801e838:	03140314 	.word	0x03140314
 801e83c:	03140065 	.word	0x03140065
 801e840:	0098      	.short	0x0098
 801e842:	9800      	ldr	r0, [sp, #0]
 801e844:	aa0e      	add	r2, sp, #56	@ 0x38
 801e846:	4639      	mov	r1, r7
 801e848:	f7ff fede 	bl	801e608 <__sprint_r>
 801e84c:	2800      	cmp	r0, #0
 801e84e:	f040 8336 	bne.w	801eebe <_vfiprintf_r+0x852>
 801e852:	ae11      	add	r6, sp, #68	@ 0x44
 801e854:	e780      	b.n	801e758 <_vfiprintf_r+0xec>
 801e856:	4a99      	ldr	r2, [pc, #612]	@ (801eabc <_vfiprintf_r+0x450>)
 801e858:	9205      	str	r2, [sp, #20]
 801e85a:	f01a 0220 	ands.w	r2, sl, #32
 801e85e:	f000 8231 	beq.w	801ecc4 <_vfiprintf_r+0x658>
 801e862:	3507      	adds	r5, #7
 801e864:	f025 0507 	bic.w	r5, r5, #7
 801e868:	46a8      	mov	r8, r5
 801e86a:	686d      	ldr	r5, [r5, #4]
 801e86c:	f858 4b08 	ldr.w	r4, [r8], #8
 801e870:	f01a 0f01 	tst.w	sl, #1
 801e874:	d009      	beq.n	801e88a <_vfiprintf_r+0x21e>
 801e876:	ea54 0205 	orrs.w	r2, r4, r5
 801e87a:	bf1f      	itttt	ne
 801e87c:	2230      	movne	r2, #48	@ 0x30
 801e87e:	f88d 2034 	strbne.w	r2, [sp, #52]	@ 0x34
 801e882:	f88d 3035 	strbne.w	r3, [sp, #53]	@ 0x35
 801e886:	f04a 0a02 	orrne.w	sl, sl, #2
 801e88a:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 801e88e:	e112      	b.n	801eab6 <_vfiprintf_r+0x44a>
 801e890:	9800      	ldr	r0, [sp, #0]
 801e892:	f7fe f9e3 	bl	801cc5c <_localeconv_r>
 801e896:	6843      	ldr	r3, [r0, #4]
 801e898:	9309      	str	r3, [sp, #36]	@ 0x24
 801e89a:	4618      	mov	r0, r3
 801e89c:	f7e1 fc98 	bl	80001d0 <strlen>
 801e8a0:	9007      	str	r0, [sp, #28]
 801e8a2:	9800      	ldr	r0, [sp, #0]
 801e8a4:	f7fe f9da 	bl	801cc5c <_localeconv_r>
 801e8a8:	6883      	ldr	r3, [r0, #8]
 801e8aa:	9306      	str	r3, [sp, #24]
 801e8ac:	9b07      	ldr	r3, [sp, #28]
 801e8ae:	b12b      	cbz	r3, 801e8bc <_vfiprintf_r+0x250>
 801e8b0:	9b06      	ldr	r3, [sp, #24]
 801e8b2:	b11b      	cbz	r3, 801e8bc <_vfiprintf_r+0x250>
 801e8b4:	781b      	ldrb	r3, [r3, #0]
 801e8b6:	b10b      	cbz	r3, 801e8bc <_vfiprintf_r+0x250>
 801e8b8:	f44a 6a80 	orr.w	sl, sl, #1024	@ 0x400
 801e8bc:	465c      	mov	r4, fp
 801e8be:	e75b      	b.n	801e778 <_vfiprintf_r+0x10c>
 801e8c0:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 801e8c4:	2b00      	cmp	r3, #0
 801e8c6:	d1f9      	bne.n	801e8bc <_vfiprintf_r+0x250>
 801e8c8:	2320      	movs	r3, #32
 801e8ca:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801e8ce:	e7f5      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e8d0:	f04a 0a01 	orr.w	sl, sl, #1
 801e8d4:	e7f2      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e8d6:	f855 3b04 	ldr.w	r3, [r5], #4
 801e8da:	9302      	str	r3, [sp, #8]
 801e8dc:	2b00      	cmp	r3, #0
 801e8de:	daed      	bge.n	801e8bc <_vfiprintf_r+0x250>
 801e8e0:	425b      	negs	r3, r3
 801e8e2:	9302      	str	r3, [sp, #8]
 801e8e4:	f04a 0a04 	orr.w	sl, sl, #4
 801e8e8:	e7e8      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e8ea:	232b      	movs	r3, #43	@ 0x2b
 801e8ec:	e7ed      	b.n	801e8ca <_vfiprintf_r+0x25e>
 801e8ee:	465a      	mov	r2, fp
 801e8f0:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e8f4:	2b2a      	cmp	r3, #42	@ 0x2a
 801e8f6:	d112      	bne.n	801e91e <_vfiprintf_r+0x2b2>
 801e8f8:	f855 3b04 	ldr.w	r3, [r5], #4
 801e8fc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801e900:	9301      	str	r3, [sp, #4]
 801e902:	4693      	mov	fp, r2
 801e904:	e7da      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e906:	9b01      	ldr	r3, [sp, #4]
 801e908:	fb00 1303 	mla	r3, r0, r3, r1
 801e90c:	9301      	str	r3, [sp, #4]
 801e90e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e912:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 801e916:	2909      	cmp	r1, #9
 801e918:	d9f5      	bls.n	801e906 <_vfiprintf_r+0x29a>
 801e91a:	4693      	mov	fp, r2
 801e91c:	e72f      	b.n	801e77e <_vfiprintf_r+0x112>
 801e91e:	2100      	movs	r1, #0
 801e920:	9101      	str	r1, [sp, #4]
 801e922:	200a      	movs	r0, #10
 801e924:	e7f5      	b.n	801e912 <_vfiprintf_r+0x2a6>
 801e926:	f04a 0a80 	orr.w	sl, sl, #128	@ 0x80
 801e92a:	e7c7      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e92c:	2100      	movs	r1, #0
 801e92e:	465a      	mov	r2, fp
 801e930:	9102      	str	r1, [sp, #8]
 801e932:	200a      	movs	r0, #10
 801e934:	9902      	ldr	r1, [sp, #8]
 801e936:	3b30      	subs	r3, #48	@ 0x30
 801e938:	fb00 3301 	mla	r3, r0, r1, r3
 801e93c:	9302      	str	r3, [sp, #8]
 801e93e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e942:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 801e946:	2909      	cmp	r1, #9
 801e948:	d9f4      	bls.n	801e934 <_vfiprintf_r+0x2c8>
 801e94a:	e7e6      	b.n	801e91a <_vfiprintf_r+0x2ae>
 801e94c:	f89b 3000 	ldrb.w	r3, [fp]
 801e950:	2b68      	cmp	r3, #104	@ 0x68
 801e952:	bf06      	itte	eq
 801e954:	f10b 0b01 	addeq.w	fp, fp, #1
 801e958:	f44a 7a00 	orreq.w	sl, sl, #512	@ 0x200
 801e95c:	f04a 0a40 	orrne.w	sl, sl, #64	@ 0x40
 801e960:	e7ac      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e962:	f89b 3000 	ldrb.w	r3, [fp]
 801e966:	2b6c      	cmp	r3, #108	@ 0x6c
 801e968:	d104      	bne.n	801e974 <_vfiprintf_r+0x308>
 801e96a:	f10b 0b01 	add.w	fp, fp, #1
 801e96e:	f04a 0a20 	orr.w	sl, sl, #32
 801e972:	e7a3      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e974:	f04a 0a10 	orr.w	sl, sl, #16
 801e978:	e7a0      	b.n	801e8bc <_vfiprintf_r+0x250>
 801e97a:	46a8      	mov	r8, r5
 801e97c:	2400      	movs	r4, #0
 801e97e:	f858 3b04 	ldr.w	r3, [r8], #4
 801e982:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 801e986:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 801e98a:	2301      	movs	r3, #1
 801e98c:	9301      	str	r3, [sp, #4]
 801e98e:	f10d 0984 	add.w	r9, sp, #132	@ 0x84
 801e992:	e0ab      	b.n	801eaec <_vfiprintf_r+0x480>
 801e994:	f04a 0a10 	orr.w	sl, sl, #16
 801e998:	f01a 0f20 	tst.w	sl, #32
 801e99c:	d011      	beq.n	801e9c2 <_vfiprintf_r+0x356>
 801e99e:	3507      	adds	r5, #7
 801e9a0:	f025 0507 	bic.w	r5, r5, #7
 801e9a4:	46a8      	mov	r8, r5
 801e9a6:	686d      	ldr	r5, [r5, #4]
 801e9a8:	f858 4b08 	ldr.w	r4, [r8], #8
 801e9ac:	2d00      	cmp	r5, #0
 801e9ae:	da06      	bge.n	801e9be <_vfiprintf_r+0x352>
 801e9b0:	4264      	negs	r4, r4
 801e9b2:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801e9b6:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 801e9ba:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801e9be:	2301      	movs	r3, #1
 801e9c0:	e048      	b.n	801ea54 <_vfiprintf_r+0x3e8>
 801e9c2:	46a8      	mov	r8, r5
 801e9c4:	f01a 0f10 	tst.w	sl, #16
 801e9c8:	f858 5b04 	ldr.w	r5, [r8], #4
 801e9cc:	d002      	beq.n	801e9d4 <_vfiprintf_r+0x368>
 801e9ce:	462c      	mov	r4, r5
 801e9d0:	17ed      	asrs	r5, r5, #31
 801e9d2:	e7eb      	b.n	801e9ac <_vfiprintf_r+0x340>
 801e9d4:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 801e9d8:	d003      	beq.n	801e9e2 <_vfiprintf_r+0x376>
 801e9da:	b22c      	sxth	r4, r5
 801e9dc:	f345 35c0 	sbfx	r5, r5, #15, #1
 801e9e0:	e7e4      	b.n	801e9ac <_vfiprintf_r+0x340>
 801e9e2:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 801e9e6:	d0f2      	beq.n	801e9ce <_vfiprintf_r+0x362>
 801e9e8:	b26c      	sxtb	r4, r5
 801e9ea:	f345 15c0 	sbfx	r5, r5, #7, #1
 801e9ee:	e7dd      	b.n	801e9ac <_vfiprintf_r+0x340>
 801e9f0:	f01a 0f20 	tst.w	sl, #32
 801e9f4:	d007      	beq.n	801ea06 <_vfiprintf_r+0x39a>
 801e9f6:	9a03      	ldr	r2, [sp, #12]
 801e9f8:	682b      	ldr	r3, [r5, #0]
 801e9fa:	9903      	ldr	r1, [sp, #12]
 801e9fc:	17d2      	asrs	r2, r2, #31
 801e9fe:	e9c3 1200 	strd	r1, r2, [r3]
 801ea02:	3504      	adds	r5, #4
 801ea04:	e693      	b.n	801e72e <_vfiprintf_r+0xc2>
 801ea06:	f01a 0f10 	tst.w	sl, #16
 801ea0a:	d003      	beq.n	801ea14 <_vfiprintf_r+0x3a8>
 801ea0c:	682b      	ldr	r3, [r5, #0]
 801ea0e:	9a03      	ldr	r2, [sp, #12]
 801ea10:	601a      	str	r2, [r3, #0]
 801ea12:	e7f6      	b.n	801ea02 <_vfiprintf_r+0x396>
 801ea14:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 801ea18:	d003      	beq.n	801ea22 <_vfiprintf_r+0x3b6>
 801ea1a:	682b      	ldr	r3, [r5, #0]
 801ea1c:	9a03      	ldr	r2, [sp, #12]
 801ea1e:	801a      	strh	r2, [r3, #0]
 801ea20:	e7ef      	b.n	801ea02 <_vfiprintf_r+0x396>
 801ea22:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 801ea26:	d0f1      	beq.n	801ea0c <_vfiprintf_r+0x3a0>
 801ea28:	682b      	ldr	r3, [r5, #0]
 801ea2a:	9a03      	ldr	r2, [sp, #12]
 801ea2c:	701a      	strb	r2, [r3, #0]
 801ea2e:	e7e8      	b.n	801ea02 <_vfiprintf_r+0x396>
 801ea30:	f04a 0a10 	orr.w	sl, sl, #16
 801ea34:	f01a 0320 	ands.w	r3, sl, #32
 801ea38:	d01f      	beq.n	801ea7a <_vfiprintf_r+0x40e>
 801ea3a:	3507      	adds	r5, #7
 801ea3c:	f025 0507 	bic.w	r5, r5, #7
 801ea40:	46a8      	mov	r8, r5
 801ea42:	686d      	ldr	r5, [r5, #4]
 801ea44:	f858 4b08 	ldr.w	r4, [r8], #8
 801ea48:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 801ea4c:	2300      	movs	r3, #0
 801ea4e:	2200      	movs	r2, #0
 801ea50:	f88d 2033 	strb.w	r2, [sp, #51]	@ 0x33
 801ea54:	9a01      	ldr	r2, [sp, #4]
 801ea56:	3201      	adds	r2, #1
 801ea58:	f000 825f 	beq.w	801ef1a <_vfiprintf_r+0x8ae>
 801ea5c:	f02a 0280 	bic.w	r2, sl, #128	@ 0x80
 801ea60:	9204      	str	r2, [sp, #16]
 801ea62:	ea54 0205 	orrs.w	r2, r4, r5
 801ea66:	f040 825e 	bne.w	801ef26 <_vfiprintf_r+0x8ba>
 801ea6a:	9a01      	ldr	r2, [sp, #4]
 801ea6c:	2a00      	cmp	r2, #0
 801ea6e:	f000 8198 	beq.w	801eda2 <_vfiprintf_r+0x736>
 801ea72:	2b01      	cmp	r3, #1
 801ea74:	f040 825a 	bne.w	801ef2c <_vfiprintf_r+0x8c0>
 801ea78:	e13b      	b.n	801ecf2 <_vfiprintf_r+0x686>
 801ea7a:	46a8      	mov	r8, r5
 801ea7c:	f01a 0510 	ands.w	r5, sl, #16
 801ea80:	f858 4b04 	ldr.w	r4, [r8], #4
 801ea84:	d001      	beq.n	801ea8a <_vfiprintf_r+0x41e>
 801ea86:	461d      	mov	r5, r3
 801ea88:	e7de      	b.n	801ea48 <_vfiprintf_r+0x3dc>
 801ea8a:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 801ea8e:	d001      	beq.n	801ea94 <_vfiprintf_r+0x428>
 801ea90:	b2a4      	uxth	r4, r4
 801ea92:	e7d9      	b.n	801ea48 <_vfiprintf_r+0x3dc>
 801ea94:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ea98:	d0d6      	beq.n	801ea48 <_vfiprintf_r+0x3dc>
 801ea9a:	b2e4      	uxtb	r4, r4
 801ea9c:	e7f3      	b.n	801ea86 <_vfiprintf_r+0x41a>
 801ea9e:	46a8      	mov	r8, r5
 801eaa0:	f647 0330 	movw	r3, #30768	@ 0x7830
 801eaa4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801eaa8:	f858 4b04 	ldr.w	r4, [r8], #4
 801eaac:	4b03      	ldr	r3, [pc, #12]	@ (801eabc <_vfiprintf_r+0x450>)
 801eaae:	9305      	str	r3, [sp, #20]
 801eab0:	2500      	movs	r5, #0
 801eab2:	f04a 0a02 	orr.w	sl, sl, #2
 801eab6:	2302      	movs	r3, #2
 801eab8:	e7c9      	b.n	801ea4e <_vfiprintf_r+0x3e2>
 801eaba:	bf00      	nop
 801eabc:	080215f4 	.word	0x080215f4
 801eac0:	9b01      	ldr	r3, [sp, #4]
 801eac2:	46a8      	mov	r8, r5
 801eac4:	1c5c      	adds	r4, r3, #1
 801eac6:	f04f 0500 	mov.w	r5, #0
 801eaca:	f858 9b04 	ldr.w	r9, [r8], #4
 801eace:	f88d 5033 	strb.w	r5, [sp, #51]	@ 0x33
 801ead2:	f000 80d0 	beq.w	801ec76 <_vfiprintf_r+0x60a>
 801ead6:	461a      	mov	r2, r3
 801ead8:	4629      	mov	r1, r5
 801eada:	4648      	mov	r0, r9
 801eadc:	f7e1 fb80 	bl	80001e0 <memchr>
 801eae0:	4604      	mov	r4, r0
 801eae2:	b118      	cbz	r0, 801eaec <_vfiprintf_r+0x480>
 801eae4:	eba0 0309 	sub.w	r3, r0, r9
 801eae8:	9301      	str	r3, [sp, #4]
 801eaea:	462c      	mov	r4, r5
 801eaec:	9b01      	ldr	r3, [sp, #4]
 801eaee:	42a3      	cmp	r3, r4
 801eaf0:	bfb8      	it	lt
 801eaf2:	4623      	movlt	r3, r4
 801eaf4:	9304      	str	r3, [sp, #16]
 801eaf6:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 801eafa:	b113      	cbz	r3, 801eb02 <_vfiprintf_r+0x496>
 801eafc:	9b04      	ldr	r3, [sp, #16]
 801eafe:	3301      	adds	r3, #1
 801eb00:	9304      	str	r3, [sp, #16]
 801eb02:	f01a 0302 	ands.w	r3, sl, #2
 801eb06:	9308      	str	r3, [sp, #32]
 801eb08:	bf1e      	ittt	ne
 801eb0a:	9b04      	ldrne	r3, [sp, #16]
 801eb0c:	3302      	addne	r3, #2
 801eb0e:	9304      	strne	r3, [sp, #16]
 801eb10:	f01a 0384 	ands.w	r3, sl, #132	@ 0x84
 801eb14:	930a      	str	r3, [sp, #40]	@ 0x28
 801eb16:	d11f      	bne.n	801eb58 <_vfiprintf_r+0x4ec>
 801eb18:	9b02      	ldr	r3, [sp, #8]
 801eb1a:	9a04      	ldr	r2, [sp, #16]
 801eb1c:	1a9d      	subs	r5, r3, r2
 801eb1e:	2d00      	cmp	r5, #0
 801eb20:	dd1a      	ble.n	801eb58 <_vfiprintf_r+0x4ec>
 801eb22:	4ba9      	ldr	r3, [pc, #676]	@ (801edc8 <_vfiprintf_r+0x75c>)
 801eb24:	6033      	str	r3, [r6, #0]
 801eb26:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 801eb2a:	2d10      	cmp	r5, #16
 801eb2c:	f102 0201 	add.w	r2, r2, #1
 801eb30:	f106 0008 	add.w	r0, r6, #8
 801eb34:	f300 814e 	bgt.w	801edd4 <_vfiprintf_r+0x768>
 801eb38:	6075      	str	r5, [r6, #4]
 801eb3a:	2a07      	cmp	r2, #7
 801eb3c:	4465      	add	r5, ip
 801eb3e:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 801eb42:	f340 815a 	ble.w	801edfa <_vfiprintf_r+0x78e>
 801eb46:	9800      	ldr	r0, [sp, #0]
 801eb48:	aa0e      	add	r2, sp, #56	@ 0x38
 801eb4a:	4639      	mov	r1, r7
 801eb4c:	f7ff fd5c 	bl	801e608 <__sprint_r>
 801eb50:	2800      	cmp	r0, #0
 801eb52:	f040 81b4 	bne.w	801eebe <_vfiprintf_r+0x852>
 801eb56:	ae11      	add	r6, sp, #68	@ 0x44
 801eb58:	f89d 1033 	ldrb.w	r1, [sp, #51]	@ 0x33
 801eb5c:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801eb60:	b161      	cbz	r1, 801eb7c <_vfiprintf_r+0x510>
 801eb62:	f10d 0133 	add.w	r1, sp, #51	@ 0x33
 801eb66:	3301      	adds	r3, #1
 801eb68:	6031      	str	r1, [r6, #0]
 801eb6a:	2101      	movs	r1, #1
 801eb6c:	440a      	add	r2, r1
 801eb6e:	2b07      	cmp	r3, #7
 801eb70:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801eb74:	6071      	str	r1, [r6, #4]
 801eb76:	f300 8142 	bgt.w	801edfe <_vfiprintf_r+0x792>
 801eb7a:	3608      	adds	r6, #8
 801eb7c:	9908      	ldr	r1, [sp, #32]
 801eb7e:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801eb82:	b159      	cbz	r1, 801eb9c <_vfiprintf_r+0x530>
 801eb84:	a90d      	add	r1, sp, #52	@ 0x34
 801eb86:	3301      	adds	r3, #1
 801eb88:	6031      	str	r1, [r6, #0]
 801eb8a:	2102      	movs	r1, #2
 801eb8c:	440a      	add	r2, r1
 801eb8e:	2b07      	cmp	r3, #7
 801eb90:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801eb94:	6071      	str	r1, [r6, #4]
 801eb96:	f300 813b 	bgt.w	801ee10 <_vfiprintf_r+0x7a4>
 801eb9a:	3608      	adds	r6, #8
 801eb9c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eb9e:	2b80      	cmp	r3, #128	@ 0x80
 801eba0:	d11f      	bne.n	801ebe2 <_vfiprintf_r+0x576>
 801eba2:	9b02      	ldr	r3, [sp, #8]
 801eba4:	9a04      	ldr	r2, [sp, #16]
 801eba6:	1a9d      	subs	r5, r3, r2
 801eba8:	2d00      	cmp	r5, #0
 801ebaa:	dd1a      	ble.n	801ebe2 <_vfiprintf_r+0x576>
 801ebac:	4b87      	ldr	r3, [pc, #540]	@ (801edcc <_vfiprintf_r+0x760>)
 801ebae:	6033      	str	r3, [r6, #0]
 801ebb0:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 801ebb4:	2d10      	cmp	r5, #16
 801ebb6:	f102 0201 	add.w	r2, r2, #1
 801ebba:	f106 0008 	add.w	r0, r6, #8
 801ebbe:	f300 8130 	bgt.w	801ee22 <_vfiprintf_r+0x7b6>
 801ebc2:	6075      	str	r5, [r6, #4]
 801ebc4:	2a07      	cmp	r2, #7
 801ebc6:	4465      	add	r5, ip
 801ebc8:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 801ebcc:	f340 813c 	ble.w	801ee48 <_vfiprintf_r+0x7dc>
 801ebd0:	9800      	ldr	r0, [sp, #0]
 801ebd2:	aa0e      	add	r2, sp, #56	@ 0x38
 801ebd4:	4639      	mov	r1, r7
 801ebd6:	f7ff fd17 	bl	801e608 <__sprint_r>
 801ebda:	2800      	cmp	r0, #0
 801ebdc:	f040 816f 	bne.w	801eebe <_vfiprintf_r+0x852>
 801ebe0:	ae11      	add	r6, sp, #68	@ 0x44
 801ebe2:	9b01      	ldr	r3, [sp, #4]
 801ebe4:	1ae4      	subs	r4, r4, r3
 801ebe6:	2c00      	cmp	r4, #0
 801ebe8:	dd1a      	ble.n	801ec20 <_vfiprintf_r+0x5b4>
 801ebea:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801ebee:	4877      	ldr	r0, [pc, #476]	@ (801edcc <_vfiprintf_r+0x760>)
 801ebf0:	6030      	str	r0, [r6, #0]
 801ebf2:	2c10      	cmp	r4, #16
 801ebf4:	f103 0301 	add.w	r3, r3, #1
 801ebf8:	f106 0108 	add.w	r1, r6, #8
 801ebfc:	f300 8126 	bgt.w	801ee4c <_vfiprintf_r+0x7e0>
 801ec00:	6074      	str	r4, [r6, #4]
 801ec02:	2b07      	cmp	r3, #7
 801ec04:	4414      	add	r4, r2
 801ec06:	e9cd 340f 	strd	r3, r4, [sp, #60]	@ 0x3c
 801ec0a:	f340 8130 	ble.w	801ee6e <_vfiprintf_r+0x802>
 801ec0e:	9800      	ldr	r0, [sp, #0]
 801ec10:	aa0e      	add	r2, sp, #56	@ 0x38
 801ec12:	4639      	mov	r1, r7
 801ec14:	f7ff fcf8 	bl	801e608 <__sprint_r>
 801ec18:	2800      	cmp	r0, #0
 801ec1a:	f040 8150 	bne.w	801eebe <_vfiprintf_r+0x852>
 801ec1e:	ae11      	add	r6, sp, #68	@ 0x44
 801ec20:	9b01      	ldr	r3, [sp, #4]
 801ec22:	9a01      	ldr	r2, [sp, #4]
 801ec24:	6073      	str	r3, [r6, #4]
 801ec26:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ec28:	f8c6 9000 	str.w	r9, [r6]
 801ec2c:	4413      	add	r3, r2
 801ec2e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ec30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ec32:	3301      	adds	r3, #1
 801ec34:	2b07      	cmp	r3, #7
 801ec36:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ec38:	f300 811b 	bgt.w	801ee72 <_vfiprintf_r+0x806>
 801ec3c:	f106 0308 	add.w	r3, r6, #8
 801ec40:	f01a 0f04 	tst.w	sl, #4
 801ec44:	f040 811d 	bne.w	801ee82 <_vfiprintf_r+0x816>
 801ec48:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801ec4c:	9904      	ldr	r1, [sp, #16]
 801ec4e:	428a      	cmp	r2, r1
 801ec50:	bfac      	ite	ge
 801ec52:	189b      	addge	r3, r3, r2
 801ec54:	185b      	addlt	r3, r3, r1
 801ec56:	9303      	str	r3, [sp, #12]
 801ec58:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ec5a:	b13b      	cbz	r3, 801ec6c <_vfiprintf_r+0x600>
 801ec5c:	9800      	ldr	r0, [sp, #0]
 801ec5e:	aa0e      	add	r2, sp, #56	@ 0x38
 801ec60:	4639      	mov	r1, r7
 801ec62:	f7ff fcd1 	bl	801e608 <__sprint_r>
 801ec66:	2800      	cmp	r0, #0
 801ec68:	f040 8129 	bne.w	801eebe <_vfiprintf_r+0x852>
 801ec6c:	2300      	movs	r3, #0
 801ec6e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ec70:	4645      	mov	r5, r8
 801ec72:	ae11      	add	r6, sp, #68	@ 0x44
 801ec74:	e55b      	b.n	801e72e <_vfiprintf_r+0xc2>
 801ec76:	4648      	mov	r0, r9
 801ec78:	f7e1 faaa 	bl	80001d0 <strlen>
 801ec7c:	9001      	str	r0, [sp, #4]
 801ec7e:	e734      	b.n	801eaea <_vfiprintf_r+0x47e>
 801ec80:	f04a 0a10 	orr.w	sl, sl, #16
 801ec84:	f01a 0320 	ands.w	r3, sl, #32
 801ec88:	d008      	beq.n	801ec9c <_vfiprintf_r+0x630>
 801ec8a:	3507      	adds	r5, #7
 801ec8c:	f025 0507 	bic.w	r5, r5, #7
 801ec90:	46a8      	mov	r8, r5
 801ec92:	686d      	ldr	r5, [r5, #4]
 801ec94:	f858 4b08 	ldr.w	r4, [r8], #8
 801ec98:	2301      	movs	r3, #1
 801ec9a:	e6d8      	b.n	801ea4e <_vfiprintf_r+0x3e2>
 801ec9c:	46a8      	mov	r8, r5
 801ec9e:	f01a 0510 	ands.w	r5, sl, #16
 801eca2:	f858 4b04 	ldr.w	r4, [r8], #4
 801eca6:	d001      	beq.n	801ecac <_vfiprintf_r+0x640>
 801eca8:	461d      	mov	r5, r3
 801ecaa:	e7f5      	b.n	801ec98 <_vfiprintf_r+0x62c>
 801ecac:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 801ecb0:	d001      	beq.n	801ecb6 <_vfiprintf_r+0x64a>
 801ecb2:	b2a4      	uxth	r4, r4
 801ecb4:	e7f0      	b.n	801ec98 <_vfiprintf_r+0x62c>
 801ecb6:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ecba:	d0ed      	beq.n	801ec98 <_vfiprintf_r+0x62c>
 801ecbc:	b2e4      	uxtb	r4, r4
 801ecbe:	e7f3      	b.n	801eca8 <_vfiprintf_r+0x63c>
 801ecc0:	4a43      	ldr	r2, [pc, #268]	@ (801edd0 <_vfiprintf_r+0x764>)
 801ecc2:	e5c9      	b.n	801e858 <_vfiprintf_r+0x1ec>
 801ecc4:	46a8      	mov	r8, r5
 801ecc6:	f01a 0510 	ands.w	r5, sl, #16
 801ecca:	f858 4b04 	ldr.w	r4, [r8], #4
 801ecce:	d001      	beq.n	801ecd4 <_vfiprintf_r+0x668>
 801ecd0:	4615      	mov	r5, r2
 801ecd2:	e5cd      	b.n	801e870 <_vfiprintf_r+0x204>
 801ecd4:	f01a 0240 	ands.w	r2, sl, #64	@ 0x40
 801ecd8:	d001      	beq.n	801ecde <_vfiprintf_r+0x672>
 801ecda:	b2a4      	uxth	r4, r4
 801ecdc:	e5c8      	b.n	801e870 <_vfiprintf_r+0x204>
 801ecde:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ece2:	f43f adc5 	beq.w	801e870 <_vfiprintf_r+0x204>
 801ece6:	b2e4      	uxtb	r4, r4
 801ece8:	e7f2      	b.n	801ecd0 <_vfiprintf_r+0x664>
 801ecea:	2c0a      	cmp	r4, #10
 801ecec:	f175 0300 	sbcs.w	r3, r5, #0
 801ecf0:	d206      	bcs.n	801ed00 <_vfiprintf_r+0x694>
 801ecf2:	3430      	adds	r4, #48	@ 0x30
 801ecf4:	b2e4      	uxtb	r4, r4
 801ecf6:	f88d 40e7 	strb.w	r4, [sp, #231]	@ 0xe7
 801ecfa:	f10d 09e7 	add.w	r9, sp, #231	@ 0xe7
 801ecfe:	e131      	b.n	801ef64 <_vfiprintf_r+0x8f8>
 801ed00:	ab3a      	add	r3, sp, #232	@ 0xe8
 801ed02:	9308      	str	r3, [sp, #32]
 801ed04:	9b04      	ldr	r3, [sp, #16]
 801ed06:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801ed0a:	f04f 0a00 	mov.w	sl, #0
 801ed0e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed10:	220a      	movs	r2, #10
 801ed12:	2300      	movs	r3, #0
 801ed14:	4620      	mov	r0, r4
 801ed16:	4629      	mov	r1, r5
 801ed18:	f7e1 ffb6 	bl	8000c88 <__aeabi_uldivmod>
 801ed1c:	460b      	mov	r3, r1
 801ed1e:	9908      	ldr	r1, [sp, #32]
 801ed20:	900b      	str	r0, [sp, #44]	@ 0x2c
 801ed22:	3230      	adds	r2, #48	@ 0x30
 801ed24:	f801 2c01 	strb.w	r2, [r1, #-1]
 801ed28:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ed2a:	f101 39ff 	add.w	r9, r1, #4294967295
 801ed2e:	f10a 0a01 	add.w	sl, sl, #1
 801ed32:	b1e2      	cbz	r2, 801ed6e <_vfiprintf_r+0x702>
 801ed34:	9a06      	ldr	r2, [sp, #24]
 801ed36:	7812      	ldrb	r2, [r2, #0]
 801ed38:	4552      	cmp	r2, sl
 801ed3a:	d118      	bne.n	801ed6e <_vfiprintf_r+0x702>
 801ed3c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ed40:	d015      	beq.n	801ed6e <_vfiprintf_r+0x702>
 801ed42:	2c0a      	cmp	r4, #10
 801ed44:	f175 0200 	sbcs.w	r2, r5, #0
 801ed48:	d311      	bcc.n	801ed6e <_vfiprintf_r+0x702>
 801ed4a:	9308      	str	r3, [sp, #32]
 801ed4c:	9b07      	ldr	r3, [sp, #28]
 801ed4e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ed50:	eba9 0903 	sub.w	r9, r9, r3
 801ed54:	461a      	mov	r2, r3
 801ed56:	4648      	mov	r0, r9
 801ed58:	f7fd ff67 	bl	801cc2a <strncpy>
 801ed5c:	9b06      	ldr	r3, [sp, #24]
 801ed5e:	785a      	ldrb	r2, [r3, #1]
 801ed60:	9b08      	ldr	r3, [sp, #32]
 801ed62:	b172      	cbz	r2, 801ed82 <_vfiprintf_r+0x716>
 801ed64:	9a06      	ldr	r2, [sp, #24]
 801ed66:	3201      	adds	r2, #1
 801ed68:	9206      	str	r2, [sp, #24]
 801ed6a:	f04f 0a00 	mov.w	sl, #0
 801ed6e:	2c0a      	cmp	r4, #10
 801ed70:	f175 0500 	sbcs.w	r5, r5, #0
 801ed74:	f0c0 80f6 	bcc.w	801ef64 <_vfiprintf_r+0x8f8>
 801ed78:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ed7a:	f8cd 9020 	str.w	r9, [sp, #32]
 801ed7e:	461d      	mov	r5, r3
 801ed80:	e7c6      	b.n	801ed10 <_vfiprintf_r+0x6a4>
 801ed82:	4692      	mov	sl, r2
 801ed84:	e7f3      	b.n	801ed6e <_vfiprintf_r+0x702>
 801ed86:	f004 030f 	and.w	r3, r4, #15
 801ed8a:	9a05      	ldr	r2, [sp, #20]
 801ed8c:	0924      	lsrs	r4, r4, #4
 801ed8e:	5cd3      	ldrb	r3, [r2, r3]
 801ed90:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801ed94:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 801ed98:	092d      	lsrs	r5, r5, #4
 801ed9a:	ea54 0305 	orrs.w	r3, r4, r5
 801ed9e:	d1f2      	bne.n	801ed86 <_vfiprintf_r+0x71a>
 801eda0:	e0e0      	b.n	801ef64 <_vfiprintf_r+0x8f8>
 801eda2:	b923      	cbnz	r3, 801edae <_vfiprintf_r+0x742>
 801eda4:	f01a 0f01 	tst.w	sl, #1
 801eda8:	d001      	beq.n	801edae <_vfiprintf_r+0x742>
 801edaa:	2430      	movs	r4, #48	@ 0x30
 801edac:	e7a3      	b.n	801ecf6 <_vfiprintf_r+0x68a>
 801edae:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 801edb2:	e0d7      	b.n	801ef64 <_vfiprintf_r+0x8f8>
 801edb4:	2b00      	cmp	r3, #0
 801edb6:	f000 80a3 	beq.w	801ef00 <_vfiprintf_r+0x894>
 801edba:	2400      	movs	r4, #0
 801edbc:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 801edc0:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 801edc4:	46a8      	mov	r8, r5
 801edc6:	e5e0      	b.n	801e98a <_vfiprintf_r+0x31e>
 801edc8:	0802195d 	.word	0x0802195d
 801edcc:	0802194d 	.word	0x0802194d
 801edd0:	08021605 	.word	0x08021605
 801edd4:	2110      	movs	r1, #16
 801edd6:	6071      	str	r1, [r6, #4]
 801edd8:	2a07      	cmp	r2, #7
 801edda:	4461      	add	r1, ip
 801eddc:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ede0:	dd08      	ble.n	801edf4 <_vfiprintf_r+0x788>
 801ede2:	9800      	ldr	r0, [sp, #0]
 801ede4:	aa0e      	add	r2, sp, #56	@ 0x38
 801ede6:	4639      	mov	r1, r7
 801ede8:	f7ff fc0e 	bl	801e608 <__sprint_r>
 801edec:	2800      	cmp	r0, #0
 801edee:	d166      	bne.n	801eebe <_vfiprintf_r+0x852>
 801edf0:	4b60      	ldr	r3, [pc, #384]	@ (801ef74 <_vfiprintf_r+0x908>)
 801edf2:	a811      	add	r0, sp, #68	@ 0x44
 801edf4:	3d10      	subs	r5, #16
 801edf6:	4606      	mov	r6, r0
 801edf8:	e694      	b.n	801eb24 <_vfiprintf_r+0x4b8>
 801edfa:	4606      	mov	r6, r0
 801edfc:	e6ac      	b.n	801eb58 <_vfiprintf_r+0x4ec>
 801edfe:	9800      	ldr	r0, [sp, #0]
 801ee00:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee02:	4639      	mov	r1, r7
 801ee04:	f7ff fc00 	bl	801e608 <__sprint_r>
 801ee08:	2800      	cmp	r0, #0
 801ee0a:	d158      	bne.n	801eebe <_vfiprintf_r+0x852>
 801ee0c:	ae11      	add	r6, sp, #68	@ 0x44
 801ee0e:	e6b5      	b.n	801eb7c <_vfiprintf_r+0x510>
 801ee10:	9800      	ldr	r0, [sp, #0]
 801ee12:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee14:	4639      	mov	r1, r7
 801ee16:	f7ff fbf7 	bl	801e608 <__sprint_r>
 801ee1a:	2800      	cmp	r0, #0
 801ee1c:	d14f      	bne.n	801eebe <_vfiprintf_r+0x852>
 801ee1e:	ae11      	add	r6, sp, #68	@ 0x44
 801ee20:	e6bc      	b.n	801eb9c <_vfiprintf_r+0x530>
 801ee22:	2110      	movs	r1, #16
 801ee24:	6071      	str	r1, [r6, #4]
 801ee26:	2a07      	cmp	r2, #7
 801ee28:	4461      	add	r1, ip
 801ee2a:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ee2e:	dd08      	ble.n	801ee42 <_vfiprintf_r+0x7d6>
 801ee30:	9800      	ldr	r0, [sp, #0]
 801ee32:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee34:	4639      	mov	r1, r7
 801ee36:	f7ff fbe7 	bl	801e608 <__sprint_r>
 801ee3a:	2800      	cmp	r0, #0
 801ee3c:	d13f      	bne.n	801eebe <_vfiprintf_r+0x852>
 801ee3e:	4b4e      	ldr	r3, [pc, #312]	@ (801ef78 <_vfiprintf_r+0x90c>)
 801ee40:	a811      	add	r0, sp, #68	@ 0x44
 801ee42:	3d10      	subs	r5, #16
 801ee44:	4606      	mov	r6, r0
 801ee46:	e6b2      	b.n	801ebae <_vfiprintf_r+0x542>
 801ee48:	4606      	mov	r6, r0
 801ee4a:	e6ca      	b.n	801ebe2 <_vfiprintf_r+0x576>
 801ee4c:	2010      	movs	r0, #16
 801ee4e:	4402      	add	r2, r0
 801ee50:	2b07      	cmp	r3, #7
 801ee52:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801ee56:	6070      	str	r0, [r6, #4]
 801ee58:	dd06      	ble.n	801ee68 <_vfiprintf_r+0x7fc>
 801ee5a:	9800      	ldr	r0, [sp, #0]
 801ee5c:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee5e:	4639      	mov	r1, r7
 801ee60:	f7ff fbd2 	bl	801e608 <__sprint_r>
 801ee64:	bb58      	cbnz	r0, 801eebe <_vfiprintf_r+0x852>
 801ee66:	a911      	add	r1, sp, #68	@ 0x44
 801ee68:	3c10      	subs	r4, #16
 801ee6a:	460e      	mov	r6, r1
 801ee6c:	e6bd      	b.n	801ebea <_vfiprintf_r+0x57e>
 801ee6e:	460e      	mov	r6, r1
 801ee70:	e6d6      	b.n	801ec20 <_vfiprintf_r+0x5b4>
 801ee72:	9800      	ldr	r0, [sp, #0]
 801ee74:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee76:	4639      	mov	r1, r7
 801ee78:	f7ff fbc6 	bl	801e608 <__sprint_r>
 801ee7c:	b9f8      	cbnz	r0, 801eebe <_vfiprintf_r+0x852>
 801ee7e:	ab11      	add	r3, sp, #68	@ 0x44
 801ee80:	e6de      	b.n	801ec40 <_vfiprintf_r+0x5d4>
 801ee82:	9a02      	ldr	r2, [sp, #8]
 801ee84:	9904      	ldr	r1, [sp, #16]
 801ee86:	1a54      	subs	r4, r2, r1
 801ee88:	2c00      	cmp	r4, #0
 801ee8a:	f77f aedd 	ble.w	801ec48 <_vfiprintf_r+0x5dc>
 801ee8e:	4d39      	ldr	r5, [pc, #228]	@ (801ef74 <_vfiprintf_r+0x908>)
 801ee90:	2610      	movs	r6, #16
 801ee92:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	@ 0x3c
 801ee96:	2c10      	cmp	r4, #16
 801ee98:	f102 0201 	add.w	r2, r2, #1
 801ee9c:	601d      	str	r5, [r3, #0]
 801ee9e:	dc1d      	bgt.n	801eedc <_vfiprintf_r+0x870>
 801eea0:	605c      	str	r4, [r3, #4]
 801eea2:	2a07      	cmp	r2, #7
 801eea4:	440c      	add	r4, r1
 801eea6:	e9cd 240f 	strd	r2, r4, [sp, #60]	@ 0x3c
 801eeaa:	f77f aecd 	ble.w	801ec48 <_vfiprintf_r+0x5dc>
 801eeae:	9800      	ldr	r0, [sp, #0]
 801eeb0:	aa0e      	add	r2, sp, #56	@ 0x38
 801eeb2:	4639      	mov	r1, r7
 801eeb4:	f7ff fba8 	bl	801e608 <__sprint_r>
 801eeb8:	2800      	cmp	r0, #0
 801eeba:	f43f aec5 	beq.w	801ec48 <_vfiprintf_r+0x5dc>
 801eebe:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801eec0:	07d9      	lsls	r1, r3, #31
 801eec2:	d405      	bmi.n	801eed0 <_vfiprintf_r+0x864>
 801eec4:	89bb      	ldrh	r3, [r7, #12]
 801eec6:	059a      	lsls	r2, r3, #22
 801eec8:	d402      	bmi.n	801eed0 <_vfiprintf_r+0x864>
 801eeca:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801eecc:	f7fc f851 	bl	801af72 <__retarget_lock_release_recursive>
 801eed0:	89bb      	ldrh	r3, [r7, #12]
 801eed2:	065b      	lsls	r3, r3, #25
 801eed4:	f57f abfb 	bpl.w	801e6ce <_vfiprintf_r+0x62>
 801eed8:	f7ff bbf6 	b.w	801e6c8 <_vfiprintf_r+0x5c>
 801eedc:	3110      	adds	r1, #16
 801eede:	2a07      	cmp	r2, #7
 801eee0:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801eee4:	605e      	str	r6, [r3, #4]
 801eee6:	dc02      	bgt.n	801eeee <_vfiprintf_r+0x882>
 801eee8:	3308      	adds	r3, #8
 801eeea:	3c10      	subs	r4, #16
 801eeec:	e7d1      	b.n	801ee92 <_vfiprintf_r+0x826>
 801eeee:	9800      	ldr	r0, [sp, #0]
 801eef0:	aa0e      	add	r2, sp, #56	@ 0x38
 801eef2:	4639      	mov	r1, r7
 801eef4:	f7ff fb88 	bl	801e608 <__sprint_r>
 801eef8:	2800      	cmp	r0, #0
 801eefa:	d1e0      	bne.n	801eebe <_vfiprintf_r+0x852>
 801eefc:	ab11      	add	r3, sp, #68	@ 0x44
 801eefe:	e7f4      	b.n	801eeea <_vfiprintf_r+0x87e>
 801ef00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef02:	b913      	cbnz	r3, 801ef0a <_vfiprintf_r+0x89e>
 801ef04:	2300      	movs	r3, #0
 801ef06:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ef08:	e7d9      	b.n	801eebe <_vfiprintf_r+0x852>
 801ef0a:	9800      	ldr	r0, [sp, #0]
 801ef0c:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef0e:	4639      	mov	r1, r7
 801ef10:	f7ff fb7a 	bl	801e608 <__sprint_r>
 801ef14:	2800      	cmp	r0, #0
 801ef16:	d0f5      	beq.n	801ef04 <_vfiprintf_r+0x898>
 801ef18:	e7d1      	b.n	801eebe <_vfiprintf_r+0x852>
 801ef1a:	ea54 0205 	orrs.w	r2, r4, r5
 801ef1e:	f8cd a010 	str.w	sl, [sp, #16]
 801ef22:	f43f ada6 	beq.w	801ea72 <_vfiprintf_r+0x406>
 801ef26:	2b01      	cmp	r3, #1
 801ef28:	f43f aedf 	beq.w	801ecea <_vfiprintf_r+0x67e>
 801ef2c:	2b02      	cmp	r3, #2
 801ef2e:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 801ef32:	f43f af28 	beq.w	801ed86 <_vfiprintf_r+0x71a>
 801ef36:	f004 0307 	and.w	r3, r4, #7
 801ef3a:	08e4      	lsrs	r4, r4, #3
 801ef3c:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 801ef40:	08ed      	lsrs	r5, r5, #3
 801ef42:	3330      	adds	r3, #48	@ 0x30
 801ef44:	ea54 0105 	orrs.w	r1, r4, r5
 801ef48:	464a      	mov	r2, r9
 801ef4a:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801ef4e:	d1f2      	bne.n	801ef36 <_vfiprintf_r+0x8ca>
 801ef50:	9904      	ldr	r1, [sp, #16]
 801ef52:	07c8      	lsls	r0, r1, #31
 801ef54:	d506      	bpl.n	801ef64 <_vfiprintf_r+0x8f8>
 801ef56:	2b30      	cmp	r3, #48	@ 0x30
 801ef58:	d004      	beq.n	801ef64 <_vfiprintf_r+0x8f8>
 801ef5a:	2330      	movs	r3, #48	@ 0x30
 801ef5c:	f809 3c01 	strb.w	r3, [r9, #-1]
 801ef60:	f1a2 0902 	sub.w	r9, r2, #2
 801ef64:	ab3a      	add	r3, sp, #232	@ 0xe8
 801ef66:	eba3 0309 	sub.w	r3, r3, r9
 801ef6a:	9c01      	ldr	r4, [sp, #4]
 801ef6c:	f8dd a010 	ldr.w	sl, [sp, #16]
 801ef70:	9301      	str	r3, [sp, #4]
 801ef72:	e5bb      	b.n	801eaec <_vfiprintf_r+0x480>
 801ef74:	0802195d 	.word	0x0802195d
 801ef78:	0802194d 	.word	0x0802194d

0801ef7c <__sbprintf>:
 801ef7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ef7e:	461f      	mov	r7, r3
 801ef80:	898b      	ldrh	r3, [r1, #12]
 801ef82:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
 801ef86:	f023 0302 	bic.w	r3, r3, #2
 801ef8a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801ef8e:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 801ef90:	9319      	str	r3, [sp, #100]	@ 0x64
 801ef92:	89cb      	ldrh	r3, [r1, #14]
 801ef94:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ef98:	69cb      	ldr	r3, [r1, #28]
 801ef9a:	9307      	str	r3, [sp, #28]
 801ef9c:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 801ef9e:	9309      	str	r3, [sp, #36]	@ 0x24
 801efa0:	ab1a      	add	r3, sp, #104	@ 0x68
 801efa2:	9300      	str	r3, [sp, #0]
 801efa4:	9304      	str	r3, [sp, #16]
 801efa6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801efaa:	4615      	mov	r5, r2
 801efac:	4606      	mov	r6, r0
 801efae:	9302      	str	r3, [sp, #8]
 801efb0:	9305      	str	r3, [sp, #20]
 801efb2:	a816      	add	r0, sp, #88	@ 0x58
 801efb4:	2300      	movs	r3, #0
 801efb6:	460c      	mov	r4, r1
 801efb8:	9306      	str	r3, [sp, #24]
 801efba:	f7fb ffd7 	bl	801af6c <__retarget_lock_init_recursive>
 801efbe:	462a      	mov	r2, r5
 801efc0:	463b      	mov	r3, r7
 801efc2:	4669      	mov	r1, sp
 801efc4:	4630      	mov	r0, r6
 801efc6:	f7ff fb51 	bl	801e66c <_vfiprintf_r>
 801efca:	1e05      	subs	r5, r0, #0
 801efcc:	db07      	blt.n	801efde <__sbprintf+0x62>
 801efce:	4669      	mov	r1, sp
 801efd0:	4630      	mov	r0, r6
 801efd2:	f7fd fe05 	bl	801cbe0 <_fflush_r>
 801efd6:	2800      	cmp	r0, #0
 801efd8:	bf18      	it	ne
 801efda:	f04f 35ff 	movne.w	r5, #4294967295
 801efde:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801efe2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801efe4:	065b      	lsls	r3, r3, #25
 801efe6:	bf42      	ittt	mi
 801efe8:	89a3      	ldrhmi	r3, [r4, #12]
 801efea:	f043 0340 	orrmi.w	r3, r3, #64	@ 0x40
 801efee:	81a3      	strhmi	r3, [r4, #12]
 801eff0:	f7fb ffbd 	bl	801af6e <__retarget_lock_close_recursive>
 801eff4:	4628      	mov	r0, r5
 801eff6:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
 801effa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801effc <__sfvwrite_r>:
 801effc:	6893      	ldr	r3, [r2, #8]
 801effe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f002:	4606      	mov	r6, r0
 801f004:	460c      	mov	r4, r1
 801f006:	4691      	mov	r9, r2
 801f008:	b91b      	cbnz	r3, 801f012 <__sfvwrite_r+0x16>
 801f00a:	2000      	movs	r0, #0
 801f00c:	b003      	add	sp, #12
 801f00e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f012:	898b      	ldrh	r3, [r1, #12]
 801f014:	0718      	lsls	r0, r3, #28
 801f016:	d550      	bpl.n	801f0ba <__sfvwrite_r+0xbe>
 801f018:	690b      	ldr	r3, [r1, #16]
 801f01a:	2b00      	cmp	r3, #0
 801f01c:	d04d      	beq.n	801f0ba <__sfvwrite_r+0xbe>
 801f01e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f022:	f8d9 8000 	ldr.w	r8, [r9]
 801f026:	f013 0702 	ands.w	r7, r3, #2
 801f02a:	d16b      	bne.n	801f104 <__sfvwrite_r+0x108>
 801f02c:	f013 0301 	ands.w	r3, r3, #1
 801f030:	f000 809c 	beq.w	801f16c <__sfvwrite_r+0x170>
 801f034:	4638      	mov	r0, r7
 801f036:	46ba      	mov	sl, r7
 801f038:	46bb      	mov	fp, r7
 801f03a:	f1bb 0f00 	cmp.w	fp, #0
 801f03e:	f000 8103 	beq.w	801f248 <__sfvwrite_r+0x24c>
 801f042:	b950      	cbnz	r0, 801f05a <__sfvwrite_r+0x5e>
 801f044:	465a      	mov	r2, fp
 801f046:	210a      	movs	r1, #10
 801f048:	4650      	mov	r0, sl
 801f04a:	f7e1 f8c9 	bl	80001e0 <memchr>
 801f04e:	2800      	cmp	r0, #0
 801f050:	f000 8100 	beq.w	801f254 <__sfvwrite_r+0x258>
 801f054:	3001      	adds	r0, #1
 801f056:	eba0 070a 	sub.w	r7, r0, sl
 801f05a:	6820      	ldr	r0, [r4, #0]
 801f05c:	6921      	ldr	r1, [r4, #16]
 801f05e:	68a5      	ldr	r5, [r4, #8]
 801f060:	6963      	ldr	r3, [r4, #20]
 801f062:	455f      	cmp	r7, fp
 801f064:	463a      	mov	r2, r7
 801f066:	bf28      	it	cs
 801f068:	465a      	movcs	r2, fp
 801f06a:	4288      	cmp	r0, r1
 801f06c:	f240 80f5 	bls.w	801f25a <__sfvwrite_r+0x25e>
 801f070:	441d      	add	r5, r3
 801f072:	42aa      	cmp	r2, r5
 801f074:	f340 80f1 	ble.w	801f25a <__sfvwrite_r+0x25e>
 801f078:	4651      	mov	r1, sl
 801f07a:	462a      	mov	r2, r5
 801f07c:	f7ff fa44 	bl	801e508 <memmove>
 801f080:	6823      	ldr	r3, [r4, #0]
 801f082:	442b      	add	r3, r5
 801f084:	6023      	str	r3, [r4, #0]
 801f086:	4621      	mov	r1, r4
 801f088:	4630      	mov	r0, r6
 801f08a:	f7fd fda9 	bl	801cbe0 <_fflush_r>
 801f08e:	2800      	cmp	r0, #0
 801f090:	d167      	bne.n	801f162 <__sfvwrite_r+0x166>
 801f092:	1b7f      	subs	r7, r7, r5
 801f094:	f040 80f9 	bne.w	801f28a <__sfvwrite_r+0x28e>
 801f098:	4621      	mov	r1, r4
 801f09a:	4630      	mov	r0, r6
 801f09c:	f7fd fda0 	bl	801cbe0 <_fflush_r>
 801f0a0:	2800      	cmp	r0, #0
 801f0a2:	d15e      	bne.n	801f162 <__sfvwrite_r+0x166>
 801f0a4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f0a8:	1b5b      	subs	r3, r3, r5
 801f0aa:	44aa      	add	sl, r5
 801f0ac:	ebab 0b05 	sub.w	fp, fp, r5
 801f0b0:	f8c9 3008 	str.w	r3, [r9, #8]
 801f0b4:	2b00      	cmp	r3, #0
 801f0b6:	d1c0      	bne.n	801f03a <__sfvwrite_r+0x3e>
 801f0b8:	e7a7      	b.n	801f00a <__sfvwrite_r+0xe>
 801f0ba:	4621      	mov	r1, r4
 801f0bc:	4630      	mov	r0, r6
 801f0be:	f000 f8e9 	bl	801f294 <__swsetup_r>
 801f0c2:	2800      	cmp	r0, #0
 801f0c4:	d0ab      	beq.n	801f01e <__sfvwrite_r+0x22>
 801f0c6:	f04f 30ff 	mov.w	r0, #4294967295
 801f0ca:	e79f      	b.n	801f00c <__sfvwrite_r+0x10>
 801f0cc:	e9d8 a500 	ldrd	sl, r5, [r8]
 801f0d0:	f108 0808 	add.w	r8, r8, #8
 801f0d4:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
 801f0d8:	69e1      	ldr	r1, [r4, #28]
 801f0da:	2d00      	cmp	r5, #0
 801f0dc:	d0f6      	beq.n	801f0cc <__sfvwrite_r+0xd0>
 801f0de:	42bd      	cmp	r5, r7
 801f0e0:	462b      	mov	r3, r5
 801f0e2:	4652      	mov	r2, sl
 801f0e4:	bf28      	it	cs
 801f0e6:	463b      	movcs	r3, r7
 801f0e8:	4630      	mov	r0, r6
 801f0ea:	47d8      	blx	fp
 801f0ec:	2800      	cmp	r0, #0
 801f0ee:	dd38      	ble.n	801f162 <__sfvwrite_r+0x166>
 801f0f0:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f0f4:	1a1b      	subs	r3, r3, r0
 801f0f6:	4482      	add	sl, r0
 801f0f8:	1a2d      	subs	r5, r5, r0
 801f0fa:	f8c9 3008 	str.w	r3, [r9, #8]
 801f0fe:	2b00      	cmp	r3, #0
 801f100:	d1e8      	bne.n	801f0d4 <__sfvwrite_r+0xd8>
 801f102:	e782      	b.n	801f00a <__sfvwrite_r+0xe>
 801f104:	f04f 0a00 	mov.w	sl, #0
 801f108:	4f61      	ldr	r7, [pc, #388]	@ (801f290 <__sfvwrite_r+0x294>)
 801f10a:	4655      	mov	r5, sl
 801f10c:	e7e2      	b.n	801f0d4 <__sfvwrite_r+0xd8>
 801f10e:	e9d8 7a00 	ldrd	r7, sl, [r8]
 801f112:	f108 0808 	add.w	r8, r8, #8
 801f116:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f11a:	6820      	ldr	r0, [r4, #0]
 801f11c:	68a2      	ldr	r2, [r4, #8]
 801f11e:	f1ba 0f00 	cmp.w	sl, #0
 801f122:	d0f4      	beq.n	801f10e <__sfvwrite_r+0x112>
 801f124:	0599      	lsls	r1, r3, #22
 801f126:	d563      	bpl.n	801f1f0 <__sfvwrite_r+0x1f4>
 801f128:	4552      	cmp	r2, sl
 801f12a:	d836      	bhi.n	801f19a <__sfvwrite_r+0x19e>
 801f12c:	f413 6f90 	tst.w	r3, #1152	@ 0x480
 801f130:	d033      	beq.n	801f19a <__sfvwrite_r+0x19e>
 801f132:	6921      	ldr	r1, [r4, #16]
 801f134:	6965      	ldr	r5, [r4, #20]
 801f136:	eba0 0b01 	sub.w	fp, r0, r1
 801f13a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f13e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801f142:	f10b 0201 	add.w	r2, fp, #1
 801f146:	106d      	asrs	r5, r5, #1
 801f148:	4452      	add	r2, sl
 801f14a:	4295      	cmp	r5, r2
 801f14c:	bf38      	it	cc
 801f14e:	4615      	movcc	r5, r2
 801f150:	055b      	lsls	r3, r3, #21
 801f152:	d53d      	bpl.n	801f1d0 <__sfvwrite_r+0x1d4>
 801f154:	4629      	mov	r1, r5
 801f156:	4630      	mov	r0, r6
 801f158:	f7fc f840 	bl	801b1dc <_malloc_r>
 801f15c:	b948      	cbnz	r0, 801f172 <__sfvwrite_r+0x176>
 801f15e:	230c      	movs	r3, #12
 801f160:	6033      	str	r3, [r6, #0]
 801f162:	89a3      	ldrh	r3, [r4, #12]
 801f164:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f168:	81a3      	strh	r3, [r4, #12]
 801f16a:	e7ac      	b.n	801f0c6 <__sfvwrite_r+0xca>
 801f16c:	461f      	mov	r7, r3
 801f16e:	469a      	mov	sl, r3
 801f170:	e7d1      	b.n	801f116 <__sfvwrite_r+0x11a>
 801f172:	465a      	mov	r2, fp
 801f174:	6921      	ldr	r1, [r4, #16]
 801f176:	9001      	str	r0, [sp, #4]
 801f178:	f7fb fefc 	bl	801af74 <memcpy>
 801f17c:	89a2      	ldrh	r2, [r4, #12]
 801f17e:	9b01      	ldr	r3, [sp, #4]
 801f180:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 801f184:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801f188:	81a2      	strh	r2, [r4, #12]
 801f18a:	6123      	str	r3, [r4, #16]
 801f18c:	6165      	str	r5, [r4, #20]
 801f18e:	445b      	add	r3, fp
 801f190:	eba5 050b 	sub.w	r5, r5, fp
 801f194:	6023      	str	r3, [r4, #0]
 801f196:	4652      	mov	r2, sl
 801f198:	60a5      	str	r5, [r4, #8]
 801f19a:	4552      	cmp	r2, sl
 801f19c:	bf28      	it	cs
 801f19e:	4652      	movcs	r2, sl
 801f1a0:	6820      	ldr	r0, [r4, #0]
 801f1a2:	9201      	str	r2, [sp, #4]
 801f1a4:	4639      	mov	r1, r7
 801f1a6:	f7ff f9af 	bl	801e508 <memmove>
 801f1aa:	68a3      	ldr	r3, [r4, #8]
 801f1ac:	9a01      	ldr	r2, [sp, #4]
 801f1ae:	1a9b      	subs	r3, r3, r2
 801f1b0:	60a3      	str	r3, [r4, #8]
 801f1b2:	6823      	ldr	r3, [r4, #0]
 801f1b4:	4413      	add	r3, r2
 801f1b6:	4655      	mov	r5, sl
 801f1b8:	6023      	str	r3, [r4, #0]
 801f1ba:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f1be:	1b5b      	subs	r3, r3, r5
 801f1c0:	442f      	add	r7, r5
 801f1c2:	ebaa 0a05 	sub.w	sl, sl, r5
 801f1c6:	f8c9 3008 	str.w	r3, [r9, #8]
 801f1ca:	2b00      	cmp	r3, #0
 801f1cc:	d1a3      	bne.n	801f116 <__sfvwrite_r+0x11a>
 801f1ce:	e71c      	b.n	801f00a <__sfvwrite_r+0xe>
 801f1d0:	462a      	mov	r2, r5
 801f1d2:	4630      	mov	r0, r6
 801f1d4:	f7fe ff66 	bl	801e0a4 <_realloc_r>
 801f1d8:	4603      	mov	r3, r0
 801f1da:	2800      	cmp	r0, #0
 801f1dc:	d1d5      	bne.n	801f18a <__sfvwrite_r+0x18e>
 801f1de:	6921      	ldr	r1, [r4, #16]
 801f1e0:	4630      	mov	r0, r6
 801f1e2:	f7fb ff3b 	bl	801b05c <_free_r>
 801f1e6:	89a3      	ldrh	r3, [r4, #12]
 801f1e8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 801f1ec:	81a3      	strh	r3, [r4, #12]
 801f1ee:	e7b6      	b.n	801f15e <__sfvwrite_r+0x162>
 801f1f0:	6923      	ldr	r3, [r4, #16]
 801f1f2:	4283      	cmp	r3, r0
 801f1f4:	d302      	bcc.n	801f1fc <__sfvwrite_r+0x200>
 801f1f6:	6961      	ldr	r1, [r4, #20]
 801f1f8:	4551      	cmp	r1, sl
 801f1fa:	d915      	bls.n	801f228 <__sfvwrite_r+0x22c>
 801f1fc:	4552      	cmp	r2, sl
 801f1fe:	bf28      	it	cs
 801f200:	4652      	movcs	r2, sl
 801f202:	4639      	mov	r1, r7
 801f204:	4615      	mov	r5, r2
 801f206:	f7ff f97f 	bl	801e508 <memmove>
 801f20a:	68a3      	ldr	r3, [r4, #8]
 801f20c:	6822      	ldr	r2, [r4, #0]
 801f20e:	1b5b      	subs	r3, r3, r5
 801f210:	442a      	add	r2, r5
 801f212:	60a3      	str	r3, [r4, #8]
 801f214:	6022      	str	r2, [r4, #0]
 801f216:	2b00      	cmp	r3, #0
 801f218:	d1cf      	bne.n	801f1ba <__sfvwrite_r+0x1be>
 801f21a:	4621      	mov	r1, r4
 801f21c:	4630      	mov	r0, r6
 801f21e:	f7fd fcdf 	bl	801cbe0 <_fflush_r>
 801f222:	2800      	cmp	r0, #0
 801f224:	d0c9      	beq.n	801f1ba <__sfvwrite_r+0x1be>
 801f226:	e79c      	b.n	801f162 <__sfvwrite_r+0x166>
 801f228:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 801f22c:	4553      	cmp	r3, sl
 801f22e:	bf28      	it	cs
 801f230:	4653      	movcs	r3, sl
 801f232:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f234:	fb93 f3f1 	sdiv	r3, r3, r1
 801f238:	463a      	mov	r2, r7
 801f23a:	434b      	muls	r3, r1
 801f23c:	4630      	mov	r0, r6
 801f23e:	69e1      	ldr	r1, [r4, #28]
 801f240:	47a8      	blx	r5
 801f242:	1e05      	subs	r5, r0, #0
 801f244:	dcb9      	bgt.n	801f1ba <__sfvwrite_r+0x1be>
 801f246:	e78c      	b.n	801f162 <__sfvwrite_r+0x166>
 801f248:	e9d8 ab00 	ldrd	sl, fp, [r8]
 801f24c:	2000      	movs	r0, #0
 801f24e:	f108 0808 	add.w	r8, r8, #8
 801f252:	e6f2      	b.n	801f03a <__sfvwrite_r+0x3e>
 801f254:	f10b 0701 	add.w	r7, fp, #1
 801f258:	e6ff      	b.n	801f05a <__sfvwrite_r+0x5e>
 801f25a:	4293      	cmp	r3, r2
 801f25c:	dc08      	bgt.n	801f270 <__sfvwrite_r+0x274>
 801f25e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f260:	69e1      	ldr	r1, [r4, #28]
 801f262:	4652      	mov	r2, sl
 801f264:	4630      	mov	r0, r6
 801f266:	47a8      	blx	r5
 801f268:	1e05      	subs	r5, r0, #0
 801f26a:	f73f af12 	bgt.w	801f092 <__sfvwrite_r+0x96>
 801f26e:	e778      	b.n	801f162 <__sfvwrite_r+0x166>
 801f270:	4651      	mov	r1, sl
 801f272:	9201      	str	r2, [sp, #4]
 801f274:	f7ff f948 	bl	801e508 <memmove>
 801f278:	9a01      	ldr	r2, [sp, #4]
 801f27a:	68a3      	ldr	r3, [r4, #8]
 801f27c:	1a9b      	subs	r3, r3, r2
 801f27e:	60a3      	str	r3, [r4, #8]
 801f280:	6823      	ldr	r3, [r4, #0]
 801f282:	4413      	add	r3, r2
 801f284:	6023      	str	r3, [r4, #0]
 801f286:	4615      	mov	r5, r2
 801f288:	e703      	b.n	801f092 <__sfvwrite_r+0x96>
 801f28a:	2001      	movs	r0, #1
 801f28c:	e70a      	b.n	801f0a4 <__sfvwrite_r+0xa8>
 801f28e:	bf00      	nop
 801f290:	7ffffc00 	.word	0x7ffffc00

0801f294 <__swsetup_r>:
 801f294:	b538      	push	{r3, r4, r5, lr}
 801f296:	4b29      	ldr	r3, [pc, #164]	@ (801f33c <__swsetup_r+0xa8>)
 801f298:	4605      	mov	r5, r0
 801f29a:	6818      	ldr	r0, [r3, #0]
 801f29c:	460c      	mov	r4, r1
 801f29e:	b118      	cbz	r0, 801f2a8 <__swsetup_r+0x14>
 801f2a0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f2a2:	b90b      	cbnz	r3, 801f2a8 <__swsetup_r+0x14>
 801f2a4:	f7fb fd10 	bl	801acc8 <__sinit>
 801f2a8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f2ac:	0719      	lsls	r1, r3, #28
 801f2ae:	d422      	bmi.n	801f2f6 <__swsetup_r+0x62>
 801f2b0:	06da      	lsls	r2, r3, #27
 801f2b2:	d407      	bmi.n	801f2c4 <__swsetup_r+0x30>
 801f2b4:	2209      	movs	r2, #9
 801f2b6:	602a      	str	r2, [r5, #0]
 801f2b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f2bc:	81a3      	strh	r3, [r4, #12]
 801f2be:	f04f 30ff 	mov.w	r0, #4294967295
 801f2c2:	e033      	b.n	801f32c <__swsetup_r+0x98>
 801f2c4:	0758      	lsls	r0, r3, #29
 801f2c6:	d512      	bpl.n	801f2ee <__swsetup_r+0x5a>
 801f2c8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801f2ca:	b141      	cbz	r1, 801f2de <__swsetup_r+0x4a>
 801f2cc:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801f2d0:	4299      	cmp	r1, r3
 801f2d2:	d002      	beq.n	801f2da <__swsetup_r+0x46>
 801f2d4:	4628      	mov	r0, r5
 801f2d6:	f7fb fec1 	bl	801b05c <_free_r>
 801f2da:	2300      	movs	r3, #0
 801f2dc:	6323      	str	r3, [r4, #48]	@ 0x30
 801f2de:	89a3      	ldrh	r3, [r4, #12]
 801f2e0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801f2e4:	81a3      	strh	r3, [r4, #12]
 801f2e6:	2300      	movs	r3, #0
 801f2e8:	6063      	str	r3, [r4, #4]
 801f2ea:	6923      	ldr	r3, [r4, #16]
 801f2ec:	6023      	str	r3, [r4, #0]
 801f2ee:	89a3      	ldrh	r3, [r4, #12]
 801f2f0:	f043 0308 	orr.w	r3, r3, #8
 801f2f4:	81a3      	strh	r3, [r4, #12]
 801f2f6:	6923      	ldr	r3, [r4, #16]
 801f2f8:	b94b      	cbnz	r3, 801f30e <__swsetup_r+0x7a>
 801f2fa:	89a3      	ldrh	r3, [r4, #12]
 801f2fc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801f300:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801f304:	d003      	beq.n	801f30e <__swsetup_r+0x7a>
 801f306:	4621      	mov	r1, r4
 801f308:	4628      	mov	r0, r5
 801f30a:	f000 f8c9 	bl	801f4a0 <__smakebuf_r>
 801f30e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f312:	f013 0201 	ands.w	r2, r3, #1
 801f316:	d00a      	beq.n	801f32e <__swsetup_r+0x9a>
 801f318:	2200      	movs	r2, #0
 801f31a:	60a2      	str	r2, [r4, #8]
 801f31c:	6962      	ldr	r2, [r4, #20]
 801f31e:	4252      	negs	r2, r2
 801f320:	61a2      	str	r2, [r4, #24]
 801f322:	6922      	ldr	r2, [r4, #16]
 801f324:	b942      	cbnz	r2, 801f338 <__swsetup_r+0xa4>
 801f326:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801f32a:	d1c5      	bne.n	801f2b8 <__swsetup_r+0x24>
 801f32c:	bd38      	pop	{r3, r4, r5, pc}
 801f32e:	0799      	lsls	r1, r3, #30
 801f330:	bf58      	it	pl
 801f332:	6962      	ldrpl	r2, [r4, #20]
 801f334:	60a2      	str	r2, [r4, #8]
 801f336:	e7f4      	b.n	801f322 <__swsetup_r+0x8e>
 801f338:	2000      	movs	r0, #0
 801f33a:	e7f7      	b.n	801f32c <__swsetup_r+0x98>
 801f33c:	20000120 	.word	0x20000120

0801f340 <__fputwc>:
 801f340:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801f344:	4680      	mov	r8, r0
 801f346:	460f      	mov	r7, r1
 801f348:	4614      	mov	r4, r2
 801f34a:	f7fd fc81 	bl	801cc50 <__locale_mb_cur_max>
 801f34e:	2801      	cmp	r0, #1
 801f350:	4605      	mov	r5, r0
 801f352:	d11b      	bne.n	801f38c <__fputwc+0x4c>
 801f354:	1e7b      	subs	r3, r7, #1
 801f356:	2bfe      	cmp	r3, #254	@ 0xfe
 801f358:	d818      	bhi.n	801f38c <__fputwc+0x4c>
 801f35a:	f88d 7004 	strb.w	r7, [sp, #4]
 801f35e:	2600      	movs	r6, #0
 801f360:	f10d 0904 	add.w	r9, sp, #4
 801f364:	42ae      	cmp	r6, r5
 801f366:	d021      	beq.n	801f3ac <__fputwc+0x6c>
 801f368:	68a3      	ldr	r3, [r4, #8]
 801f36a:	f816 1009 	ldrb.w	r1, [r6, r9]
 801f36e:	3b01      	subs	r3, #1
 801f370:	2b00      	cmp	r3, #0
 801f372:	60a3      	str	r3, [r4, #8]
 801f374:	da04      	bge.n	801f380 <__fputwc+0x40>
 801f376:	69a2      	ldr	r2, [r4, #24]
 801f378:	4293      	cmp	r3, r2
 801f37a:	db1b      	blt.n	801f3b4 <__fputwc+0x74>
 801f37c:	290a      	cmp	r1, #10
 801f37e:	d019      	beq.n	801f3b4 <__fputwc+0x74>
 801f380:	6823      	ldr	r3, [r4, #0]
 801f382:	1c5a      	adds	r2, r3, #1
 801f384:	6022      	str	r2, [r4, #0]
 801f386:	7019      	strb	r1, [r3, #0]
 801f388:	3601      	adds	r6, #1
 801f38a:	e7eb      	b.n	801f364 <__fputwc+0x24>
 801f38c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
 801f390:	463a      	mov	r2, r7
 801f392:	a901      	add	r1, sp, #4
 801f394:	4640      	mov	r0, r8
 801f396:	f000 f845 	bl	801f424 <_wcrtomb_r>
 801f39a:	1c43      	adds	r3, r0, #1
 801f39c:	4605      	mov	r5, r0
 801f39e:	d1de      	bne.n	801f35e <__fputwc+0x1e>
 801f3a0:	89a3      	ldrh	r3, [r4, #12]
 801f3a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f3a6:	81a3      	strh	r3, [r4, #12]
 801f3a8:	f04f 37ff 	mov.w	r7, #4294967295
 801f3ac:	4638      	mov	r0, r7
 801f3ae:	b003      	add	sp, #12
 801f3b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f3b4:	4622      	mov	r2, r4
 801f3b6:	4640      	mov	r0, r8
 801f3b8:	f000 f8ae 	bl	801f518 <__swbuf_r>
 801f3bc:	3001      	adds	r0, #1
 801f3be:	d1e3      	bne.n	801f388 <__fputwc+0x48>
 801f3c0:	e7f2      	b.n	801f3a8 <__fputwc+0x68>

0801f3c2 <_fputwc_r>:
 801f3c2:	6e53      	ldr	r3, [r2, #100]	@ 0x64
 801f3c4:	07db      	lsls	r3, r3, #31
 801f3c6:	b570      	push	{r4, r5, r6, lr}
 801f3c8:	4605      	mov	r5, r0
 801f3ca:	460e      	mov	r6, r1
 801f3cc:	4614      	mov	r4, r2
 801f3ce:	d405      	bmi.n	801f3dc <_fputwc_r+0x1a>
 801f3d0:	8993      	ldrh	r3, [r2, #12]
 801f3d2:	0598      	lsls	r0, r3, #22
 801f3d4:	d402      	bmi.n	801f3dc <_fputwc_r+0x1a>
 801f3d6:	6d90      	ldr	r0, [r2, #88]	@ 0x58
 801f3d8:	f7fb fdca 	bl	801af70 <__retarget_lock_acquire_recursive>
 801f3dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f3e0:	0499      	lsls	r1, r3, #18
 801f3e2:	d406      	bmi.n	801f3f2 <_fputwc_r+0x30>
 801f3e4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f3e8:	81a3      	strh	r3, [r4, #12]
 801f3ea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f3ec:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f3f0:	6663      	str	r3, [r4, #100]	@ 0x64
 801f3f2:	4622      	mov	r2, r4
 801f3f4:	4628      	mov	r0, r5
 801f3f6:	4631      	mov	r1, r6
 801f3f8:	f7ff ffa2 	bl	801f340 <__fputwc>
 801f3fc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f3fe:	07da      	lsls	r2, r3, #31
 801f400:	4605      	mov	r5, r0
 801f402:	d405      	bmi.n	801f410 <_fputwc_r+0x4e>
 801f404:	89a3      	ldrh	r3, [r4, #12]
 801f406:	059b      	lsls	r3, r3, #22
 801f408:	d402      	bmi.n	801f410 <_fputwc_r+0x4e>
 801f40a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f40c:	f7fb fdb1 	bl	801af72 <__retarget_lock_release_recursive>
 801f410:	4628      	mov	r0, r5
 801f412:	bd70      	pop	{r4, r5, r6, pc}

0801f414 <abort>:
 801f414:	b508      	push	{r3, lr}
 801f416:	2006      	movs	r0, #6
 801f418:	f000 f8f0 	bl	801f5fc <raise>
 801f41c:	2001      	movs	r0, #1
 801f41e:	f7e4 fce5 	bl	8003dec <_exit>
	...

0801f424 <_wcrtomb_r>:
 801f424:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f426:	4c09      	ldr	r4, [pc, #36]	@ (801f44c <_wcrtomb_r+0x28>)
 801f428:	b085      	sub	sp, #20
 801f42a:	f8d4 70e0 	ldr.w	r7, [r4, #224]	@ 0xe0
 801f42e:	4605      	mov	r5, r0
 801f430:	461e      	mov	r6, r3
 801f432:	b909      	cbnz	r1, 801f438 <_wcrtomb_r+0x14>
 801f434:	460a      	mov	r2, r1
 801f436:	a901      	add	r1, sp, #4
 801f438:	47b8      	blx	r7
 801f43a:	1c43      	adds	r3, r0, #1
 801f43c:	bf01      	itttt	eq
 801f43e:	2300      	moveq	r3, #0
 801f440:	6033      	streq	r3, [r6, #0]
 801f442:	238a      	moveq	r3, #138	@ 0x8a
 801f444:	602b      	streq	r3, [r5, #0]
 801f446:	b005      	add	sp, #20
 801f448:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f44a:	bf00      	nop
 801f44c:	2000065c 	.word	0x2000065c

0801f450 <__swhatbuf_r>:
 801f450:	b570      	push	{r4, r5, r6, lr}
 801f452:	460c      	mov	r4, r1
 801f454:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f458:	2900      	cmp	r1, #0
 801f45a:	b096      	sub	sp, #88	@ 0x58
 801f45c:	4615      	mov	r5, r2
 801f45e:	461e      	mov	r6, r3
 801f460:	da07      	bge.n	801f472 <__swhatbuf_r+0x22>
 801f462:	89a1      	ldrh	r1, [r4, #12]
 801f464:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
 801f468:	d117      	bne.n	801f49a <__swhatbuf_r+0x4a>
 801f46a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f46e:	4608      	mov	r0, r1
 801f470:	e00f      	b.n	801f492 <__swhatbuf_r+0x42>
 801f472:	466a      	mov	r2, sp
 801f474:	f000 f8ca 	bl	801f60c <_fstat_r>
 801f478:	2800      	cmp	r0, #0
 801f47a:	dbf2      	blt.n	801f462 <__swhatbuf_r+0x12>
 801f47c:	9901      	ldr	r1, [sp, #4]
 801f47e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801f482:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801f486:	4259      	negs	r1, r3
 801f488:	4159      	adcs	r1, r3
 801f48a:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 801f48e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f492:	6031      	str	r1, [r6, #0]
 801f494:	602b      	str	r3, [r5, #0]
 801f496:	b016      	add	sp, #88	@ 0x58
 801f498:	bd70      	pop	{r4, r5, r6, pc}
 801f49a:	2100      	movs	r1, #0
 801f49c:	2340      	movs	r3, #64	@ 0x40
 801f49e:	e7e6      	b.n	801f46e <__swhatbuf_r+0x1e>

0801f4a0 <__smakebuf_r>:
 801f4a0:	898b      	ldrh	r3, [r1, #12]
 801f4a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f4a4:	079d      	lsls	r5, r3, #30
 801f4a6:	4606      	mov	r6, r0
 801f4a8:	460c      	mov	r4, r1
 801f4aa:	d507      	bpl.n	801f4bc <__smakebuf_r+0x1c>
 801f4ac:	f104 0343 	add.w	r3, r4, #67	@ 0x43
 801f4b0:	6023      	str	r3, [r4, #0]
 801f4b2:	6123      	str	r3, [r4, #16]
 801f4b4:	2301      	movs	r3, #1
 801f4b6:	6163      	str	r3, [r4, #20]
 801f4b8:	b003      	add	sp, #12
 801f4ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f4bc:	ab01      	add	r3, sp, #4
 801f4be:	466a      	mov	r2, sp
 801f4c0:	f7ff ffc6 	bl	801f450 <__swhatbuf_r>
 801f4c4:	9f00      	ldr	r7, [sp, #0]
 801f4c6:	4605      	mov	r5, r0
 801f4c8:	4639      	mov	r1, r7
 801f4ca:	4630      	mov	r0, r6
 801f4cc:	f7fb fe86 	bl	801b1dc <_malloc_r>
 801f4d0:	b948      	cbnz	r0, 801f4e6 <__smakebuf_r+0x46>
 801f4d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f4d6:	059a      	lsls	r2, r3, #22
 801f4d8:	d4ee      	bmi.n	801f4b8 <__smakebuf_r+0x18>
 801f4da:	f023 0303 	bic.w	r3, r3, #3
 801f4de:	f043 0302 	orr.w	r3, r3, #2
 801f4e2:	81a3      	strh	r3, [r4, #12]
 801f4e4:	e7e2      	b.n	801f4ac <__smakebuf_r+0xc>
 801f4e6:	89a3      	ldrh	r3, [r4, #12]
 801f4e8:	6020      	str	r0, [r4, #0]
 801f4ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801f4ee:	81a3      	strh	r3, [r4, #12]
 801f4f0:	9b01      	ldr	r3, [sp, #4]
 801f4f2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801f4f6:	b15b      	cbz	r3, 801f510 <__smakebuf_r+0x70>
 801f4f8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f4fc:	4630      	mov	r0, r6
 801f4fe:	f000 f897 	bl	801f630 <_isatty_r>
 801f502:	b128      	cbz	r0, 801f510 <__smakebuf_r+0x70>
 801f504:	89a3      	ldrh	r3, [r4, #12]
 801f506:	f023 0303 	bic.w	r3, r3, #3
 801f50a:	f043 0301 	orr.w	r3, r3, #1
 801f50e:	81a3      	strh	r3, [r4, #12]
 801f510:	89a3      	ldrh	r3, [r4, #12]
 801f512:	431d      	orrs	r5, r3
 801f514:	81a5      	strh	r5, [r4, #12]
 801f516:	e7cf      	b.n	801f4b8 <__smakebuf_r+0x18>

0801f518 <__swbuf_r>:
 801f518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f51a:	460e      	mov	r6, r1
 801f51c:	4614      	mov	r4, r2
 801f51e:	4605      	mov	r5, r0
 801f520:	b118      	cbz	r0, 801f52a <__swbuf_r+0x12>
 801f522:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f524:	b90b      	cbnz	r3, 801f52a <__swbuf_r+0x12>
 801f526:	f7fb fbcf 	bl	801acc8 <__sinit>
 801f52a:	69a3      	ldr	r3, [r4, #24]
 801f52c:	60a3      	str	r3, [r4, #8]
 801f52e:	89a3      	ldrh	r3, [r4, #12]
 801f530:	0719      	lsls	r1, r3, #28
 801f532:	d501      	bpl.n	801f538 <__swbuf_r+0x20>
 801f534:	6923      	ldr	r3, [r4, #16]
 801f536:	b943      	cbnz	r3, 801f54a <__swbuf_r+0x32>
 801f538:	4621      	mov	r1, r4
 801f53a:	4628      	mov	r0, r5
 801f53c:	f7ff feaa 	bl	801f294 <__swsetup_r>
 801f540:	b118      	cbz	r0, 801f54a <__swbuf_r+0x32>
 801f542:	f04f 37ff 	mov.w	r7, #4294967295
 801f546:	4638      	mov	r0, r7
 801f548:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f54a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f54e:	b2f6      	uxtb	r6, r6
 801f550:	049a      	lsls	r2, r3, #18
 801f552:	4637      	mov	r7, r6
 801f554:	d406      	bmi.n	801f564 <__swbuf_r+0x4c>
 801f556:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f55a:	81a3      	strh	r3, [r4, #12]
 801f55c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f55e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801f562:	6663      	str	r3, [r4, #100]	@ 0x64
 801f564:	6823      	ldr	r3, [r4, #0]
 801f566:	6922      	ldr	r2, [r4, #16]
 801f568:	1a98      	subs	r0, r3, r2
 801f56a:	6963      	ldr	r3, [r4, #20]
 801f56c:	4283      	cmp	r3, r0
 801f56e:	dc05      	bgt.n	801f57c <__swbuf_r+0x64>
 801f570:	4621      	mov	r1, r4
 801f572:	4628      	mov	r0, r5
 801f574:	f7fd fb34 	bl	801cbe0 <_fflush_r>
 801f578:	2800      	cmp	r0, #0
 801f57a:	d1e2      	bne.n	801f542 <__swbuf_r+0x2a>
 801f57c:	68a3      	ldr	r3, [r4, #8]
 801f57e:	3b01      	subs	r3, #1
 801f580:	60a3      	str	r3, [r4, #8]
 801f582:	6823      	ldr	r3, [r4, #0]
 801f584:	1c5a      	adds	r2, r3, #1
 801f586:	6022      	str	r2, [r4, #0]
 801f588:	701e      	strb	r6, [r3, #0]
 801f58a:	6962      	ldr	r2, [r4, #20]
 801f58c:	1c43      	adds	r3, r0, #1
 801f58e:	429a      	cmp	r2, r3
 801f590:	d004      	beq.n	801f59c <__swbuf_r+0x84>
 801f592:	89a3      	ldrh	r3, [r4, #12]
 801f594:	07db      	lsls	r3, r3, #31
 801f596:	d5d6      	bpl.n	801f546 <__swbuf_r+0x2e>
 801f598:	2e0a      	cmp	r6, #10
 801f59a:	d1d4      	bne.n	801f546 <__swbuf_r+0x2e>
 801f59c:	4621      	mov	r1, r4
 801f59e:	4628      	mov	r0, r5
 801f5a0:	f7fd fb1e 	bl	801cbe0 <_fflush_r>
 801f5a4:	2800      	cmp	r0, #0
 801f5a6:	d0ce      	beq.n	801f546 <__swbuf_r+0x2e>
 801f5a8:	e7cb      	b.n	801f542 <__swbuf_r+0x2a>

0801f5aa <_raise_r>:
 801f5aa:	291f      	cmp	r1, #31
 801f5ac:	b538      	push	{r3, r4, r5, lr}
 801f5ae:	4605      	mov	r5, r0
 801f5b0:	460c      	mov	r4, r1
 801f5b2:	d904      	bls.n	801f5be <_raise_r+0x14>
 801f5b4:	2316      	movs	r3, #22
 801f5b6:	6003      	str	r3, [r0, #0]
 801f5b8:	f04f 30ff 	mov.w	r0, #4294967295
 801f5bc:	bd38      	pop	{r3, r4, r5, pc}
 801f5be:	f8d0 2118 	ldr.w	r2, [r0, #280]	@ 0x118
 801f5c2:	b112      	cbz	r2, 801f5ca <_raise_r+0x20>
 801f5c4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801f5c8:	b94b      	cbnz	r3, 801f5de <_raise_r+0x34>
 801f5ca:	4628      	mov	r0, r5
 801f5cc:	f000 f852 	bl	801f674 <_getpid_r>
 801f5d0:	4622      	mov	r2, r4
 801f5d2:	4601      	mov	r1, r0
 801f5d4:	4628      	mov	r0, r5
 801f5d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f5da:	f000 b839 	b.w	801f650 <_kill_r>
 801f5de:	2b01      	cmp	r3, #1
 801f5e0:	d00a      	beq.n	801f5f8 <_raise_r+0x4e>
 801f5e2:	1c59      	adds	r1, r3, #1
 801f5e4:	d103      	bne.n	801f5ee <_raise_r+0x44>
 801f5e6:	2316      	movs	r3, #22
 801f5e8:	6003      	str	r3, [r0, #0]
 801f5ea:	2001      	movs	r0, #1
 801f5ec:	e7e6      	b.n	801f5bc <_raise_r+0x12>
 801f5ee:	2100      	movs	r1, #0
 801f5f0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801f5f4:	4620      	mov	r0, r4
 801f5f6:	4798      	blx	r3
 801f5f8:	2000      	movs	r0, #0
 801f5fa:	e7df      	b.n	801f5bc <_raise_r+0x12>

0801f5fc <raise>:
 801f5fc:	4b02      	ldr	r3, [pc, #8]	@ (801f608 <raise+0xc>)
 801f5fe:	4601      	mov	r1, r0
 801f600:	6818      	ldr	r0, [r3, #0]
 801f602:	f7ff bfd2 	b.w	801f5aa <_raise_r>
 801f606:	bf00      	nop
 801f608:	20000120 	.word	0x20000120

0801f60c <_fstat_r>:
 801f60c:	b538      	push	{r3, r4, r5, lr}
 801f60e:	4d07      	ldr	r5, [pc, #28]	@ (801f62c <_fstat_r+0x20>)
 801f610:	2300      	movs	r3, #0
 801f612:	4604      	mov	r4, r0
 801f614:	4608      	mov	r0, r1
 801f616:	4611      	mov	r1, r2
 801f618:	602b      	str	r3, [r5, #0]
 801f61a:	f7e4 fc37 	bl	8003e8c <_fstat>
 801f61e:	1c43      	adds	r3, r0, #1
 801f620:	d102      	bne.n	801f628 <_fstat_r+0x1c>
 801f622:	682b      	ldr	r3, [r5, #0]
 801f624:	b103      	cbz	r3, 801f628 <_fstat_r+0x1c>
 801f626:	6023      	str	r3, [r4, #0]
 801f628:	bd38      	pop	{r3, r4, r5, pc}
 801f62a:	bf00      	nop
 801f62c:	2000d0b4 	.word	0x2000d0b4

0801f630 <_isatty_r>:
 801f630:	b538      	push	{r3, r4, r5, lr}
 801f632:	4d06      	ldr	r5, [pc, #24]	@ (801f64c <_isatty_r+0x1c>)
 801f634:	2300      	movs	r3, #0
 801f636:	4604      	mov	r4, r0
 801f638:	4608      	mov	r0, r1
 801f63a:	602b      	str	r3, [r5, #0]
 801f63c:	f7e4 fc36 	bl	8003eac <_isatty>
 801f640:	1c43      	adds	r3, r0, #1
 801f642:	d102      	bne.n	801f64a <_isatty_r+0x1a>
 801f644:	682b      	ldr	r3, [r5, #0]
 801f646:	b103      	cbz	r3, 801f64a <_isatty_r+0x1a>
 801f648:	6023      	str	r3, [r4, #0]
 801f64a:	bd38      	pop	{r3, r4, r5, pc}
 801f64c:	2000d0b4 	.word	0x2000d0b4

0801f650 <_kill_r>:
 801f650:	b538      	push	{r3, r4, r5, lr}
 801f652:	4d07      	ldr	r5, [pc, #28]	@ (801f670 <_kill_r+0x20>)
 801f654:	2300      	movs	r3, #0
 801f656:	4604      	mov	r4, r0
 801f658:	4608      	mov	r0, r1
 801f65a:	4611      	mov	r1, r2
 801f65c:	602b      	str	r3, [r5, #0]
 801f65e:	f7e4 fbb5 	bl	8003dcc <_kill>
 801f662:	1c43      	adds	r3, r0, #1
 801f664:	d102      	bne.n	801f66c <_kill_r+0x1c>
 801f666:	682b      	ldr	r3, [r5, #0]
 801f668:	b103      	cbz	r3, 801f66c <_kill_r+0x1c>
 801f66a:	6023      	str	r3, [r4, #0]
 801f66c:	bd38      	pop	{r3, r4, r5, pc}
 801f66e:	bf00      	nop
 801f670:	2000d0b4 	.word	0x2000d0b4

0801f674 <_getpid_r>:
 801f674:	f7e4 bba2 	b.w	8003dbc <_getpid>

0801f678 <atan2>:
 801f678:	f000 bd52 	b.w	8020120 <__ieee754_atan2>

0801f67c <sqrt>:
 801f67c:	b538      	push	{r3, r4, r5, lr}
 801f67e:	ed2d 8b02 	vpush	{d8}
 801f682:	ec55 4b10 	vmov	r4, r5, d0
 801f686:	f000 fa6f 	bl	801fb68 <__ieee754_sqrt>
 801f68a:	4622      	mov	r2, r4
 801f68c:	462b      	mov	r3, r5
 801f68e:	4620      	mov	r0, r4
 801f690:	4629      	mov	r1, r5
 801f692:	eeb0 8a40 	vmov.f32	s16, s0
 801f696:	eef0 8a60 	vmov.f32	s17, s1
 801f69a:	f7e1 fa47 	bl	8000b2c <__aeabi_dcmpun>
 801f69e:	b990      	cbnz	r0, 801f6c6 <sqrt+0x4a>
 801f6a0:	2200      	movs	r2, #0
 801f6a2:	2300      	movs	r3, #0
 801f6a4:	4620      	mov	r0, r4
 801f6a6:	4629      	mov	r1, r5
 801f6a8:	f7e1 fa18 	bl	8000adc <__aeabi_dcmplt>
 801f6ac:	b158      	cbz	r0, 801f6c6 <sqrt+0x4a>
 801f6ae:	f7fb fc33 	bl	801af18 <__errno>
 801f6b2:	2321      	movs	r3, #33	@ 0x21
 801f6b4:	6003      	str	r3, [r0, #0]
 801f6b6:	2200      	movs	r2, #0
 801f6b8:	2300      	movs	r3, #0
 801f6ba:	4610      	mov	r0, r2
 801f6bc:	4619      	mov	r1, r3
 801f6be:	f7e1 f8c5 	bl	800084c <__aeabi_ddiv>
 801f6c2:	ec41 0b18 	vmov	d8, r0, r1
 801f6c6:	eeb0 0a48 	vmov.f32	s0, s16
 801f6ca:	eef0 0a68 	vmov.f32	s1, s17
 801f6ce:	ecbd 8b02 	vpop	{d8}
 801f6d2:	bd38      	pop	{r3, r4, r5, pc}
 801f6d4:	0000      	movs	r0, r0
	...

0801f6d8 <atan>:
 801f6d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f6dc:	ec55 4b10 	vmov	r4, r5, d0
 801f6e0:	4bbf      	ldr	r3, [pc, #764]	@ (801f9e0 <atan+0x308>)
 801f6e2:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 801f6e6:	429e      	cmp	r6, r3
 801f6e8:	46ab      	mov	fp, r5
 801f6ea:	d918      	bls.n	801f71e <atan+0x46>
 801f6ec:	4bbd      	ldr	r3, [pc, #756]	@ (801f9e4 <atan+0x30c>)
 801f6ee:	429e      	cmp	r6, r3
 801f6f0:	d801      	bhi.n	801f6f6 <atan+0x1e>
 801f6f2:	d109      	bne.n	801f708 <atan+0x30>
 801f6f4:	b144      	cbz	r4, 801f708 <atan+0x30>
 801f6f6:	4622      	mov	r2, r4
 801f6f8:	462b      	mov	r3, r5
 801f6fa:	4620      	mov	r0, r4
 801f6fc:	4629      	mov	r1, r5
 801f6fe:	f7e0 fdc5 	bl	800028c <__adddf3>
 801f702:	4604      	mov	r4, r0
 801f704:	460d      	mov	r5, r1
 801f706:	e006      	b.n	801f716 <atan+0x3e>
 801f708:	f1bb 0f00 	cmp.w	fp, #0
 801f70c:	f340 812b 	ble.w	801f966 <atan+0x28e>
 801f710:	a597      	add	r5, pc, #604	@ (adr r5, 801f970 <atan+0x298>)
 801f712:	e9d5 4500 	ldrd	r4, r5, [r5]
 801f716:	ec45 4b10 	vmov	d0, r4, r5
 801f71a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f71e:	4bb2      	ldr	r3, [pc, #712]	@ (801f9e8 <atan+0x310>)
 801f720:	429e      	cmp	r6, r3
 801f722:	d813      	bhi.n	801f74c <atan+0x74>
 801f724:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 801f728:	429e      	cmp	r6, r3
 801f72a:	d80c      	bhi.n	801f746 <atan+0x6e>
 801f72c:	a392      	add	r3, pc, #584	@ (adr r3, 801f978 <atan+0x2a0>)
 801f72e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f732:	4620      	mov	r0, r4
 801f734:	4629      	mov	r1, r5
 801f736:	f7e0 fda9 	bl	800028c <__adddf3>
 801f73a:	4bac      	ldr	r3, [pc, #688]	@ (801f9ec <atan+0x314>)
 801f73c:	2200      	movs	r2, #0
 801f73e:	f7e1 f9eb 	bl	8000b18 <__aeabi_dcmpgt>
 801f742:	2800      	cmp	r0, #0
 801f744:	d1e7      	bne.n	801f716 <atan+0x3e>
 801f746:	f04f 3aff 	mov.w	sl, #4294967295
 801f74a:	e029      	b.n	801f7a0 <atan+0xc8>
 801f74c:	f000 f9b0 	bl	801fab0 <fabs>
 801f750:	4ba7      	ldr	r3, [pc, #668]	@ (801f9f0 <atan+0x318>)
 801f752:	429e      	cmp	r6, r3
 801f754:	ec55 4b10 	vmov	r4, r5, d0
 801f758:	f200 80bc 	bhi.w	801f8d4 <atan+0x1fc>
 801f75c:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 801f760:	429e      	cmp	r6, r3
 801f762:	f200 809e 	bhi.w	801f8a2 <atan+0x1ca>
 801f766:	4622      	mov	r2, r4
 801f768:	462b      	mov	r3, r5
 801f76a:	4620      	mov	r0, r4
 801f76c:	4629      	mov	r1, r5
 801f76e:	f7e0 fd8d 	bl	800028c <__adddf3>
 801f772:	4b9e      	ldr	r3, [pc, #632]	@ (801f9ec <atan+0x314>)
 801f774:	2200      	movs	r2, #0
 801f776:	f7e0 fd87 	bl	8000288 <__aeabi_dsub>
 801f77a:	2200      	movs	r2, #0
 801f77c:	4606      	mov	r6, r0
 801f77e:	460f      	mov	r7, r1
 801f780:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 801f784:	4620      	mov	r0, r4
 801f786:	4629      	mov	r1, r5
 801f788:	f7e0 fd80 	bl	800028c <__adddf3>
 801f78c:	4602      	mov	r2, r0
 801f78e:	460b      	mov	r3, r1
 801f790:	4630      	mov	r0, r6
 801f792:	4639      	mov	r1, r7
 801f794:	f7e1 f85a 	bl	800084c <__aeabi_ddiv>
 801f798:	f04f 0a00 	mov.w	sl, #0
 801f79c:	4604      	mov	r4, r0
 801f79e:	460d      	mov	r5, r1
 801f7a0:	4622      	mov	r2, r4
 801f7a2:	462b      	mov	r3, r5
 801f7a4:	4620      	mov	r0, r4
 801f7a6:	4629      	mov	r1, r5
 801f7a8:	f7e0 ff26 	bl	80005f8 <__aeabi_dmul>
 801f7ac:	4602      	mov	r2, r0
 801f7ae:	460b      	mov	r3, r1
 801f7b0:	4680      	mov	r8, r0
 801f7b2:	4689      	mov	r9, r1
 801f7b4:	f7e0 ff20 	bl	80005f8 <__aeabi_dmul>
 801f7b8:	a371      	add	r3, pc, #452	@ (adr r3, 801f980 <atan+0x2a8>)
 801f7ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f7be:	4606      	mov	r6, r0
 801f7c0:	460f      	mov	r7, r1
 801f7c2:	f7e0 ff19 	bl	80005f8 <__aeabi_dmul>
 801f7c6:	a370      	add	r3, pc, #448	@ (adr r3, 801f988 <atan+0x2b0>)
 801f7c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f7cc:	f7e0 fd5e 	bl	800028c <__adddf3>
 801f7d0:	4632      	mov	r2, r6
 801f7d2:	463b      	mov	r3, r7
 801f7d4:	f7e0 ff10 	bl	80005f8 <__aeabi_dmul>
 801f7d8:	a36d      	add	r3, pc, #436	@ (adr r3, 801f990 <atan+0x2b8>)
 801f7da:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f7de:	f7e0 fd55 	bl	800028c <__adddf3>
 801f7e2:	4632      	mov	r2, r6
 801f7e4:	463b      	mov	r3, r7
 801f7e6:	f7e0 ff07 	bl	80005f8 <__aeabi_dmul>
 801f7ea:	a36b      	add	r3, pc, #428	@ (adr r3, 801f998 <atan+0x2c0>)
 801f7ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f7f0:	f7e0 fd4c 	bl	800028c <__adddf3>
 801f7f4:	4632      	mov	r2, r6
 801f7f6:	463b      	mov	r3, r7
 801f7f8:	f7e0 fefe 	bl	80005f8 <__aeabi_dmul>
 801f7fc:	a368      	add	r3, pc, #416	@ (adr r3, 801f9a0 <atan+0x2c8>)
 801f7fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f802:	f7e0 fd43 	bl	800028c <__adddf3>
 801f806:	4632      	mov	r2, r6
 801f808:	463b      	mov	r3, r7
 801f80a:	f7e0 fef5 	bl	80005f8 <__aeabi_dmul>
 801f80e:	a366      	add	r3, pc, #408	@ (adr r3, 801f9a8 <atan+0x2d0>)
 801f810:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f814:	f7e0 fd3a 	bl	800028c <__adddf3>
 801f818:	4642      	mov	r2, r8
 801f81a:	464b      	mov	r3, r9
 801f81c:	f7e0 feec 	bl	80005f8 <__aeabi_dmul>
 801f820:	a363      	add	r3, pc, #396	@ (adr r3, 801f9b0 <atan+0x2d8>)
 801f822:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f826:	4680      	mov	r8, r0
 801f828:	4689      	mov	r9, r1
 801f82a:	4630      	mov	r0, r6
 801f82c:	4639      	mov	r1, r7
 801f82e:	f7e0 fee3 	bl	80005f8 <__aeabi_dmul>
 801f832:	a361      	add	r3, pc, #388	@ (adr r3, 801f9b8 <atan+0x2e0>)
 801f834:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f838:	f7e0 fd26 	bl	8000288 <__aeabi_dsub>
 801f83c:	4632      	mov	r2, r6
 801f83e:	463b      	mov	r3, r7
 801f840:	f7e0 feda 	bl	80005f8 <__aeabi_dmul>
 801f844:	a35e      	add	r3, pc, #376	@ (adr r3, 801f9c0 <atan+0x2e8>)
 801f846:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f84a:	f7e0 fd1d 	bl	8000288 <__aeabi_dsub>
 801f84e:	4632      	mov	r2, r6
 801f850:	463b      	mov	r3, r7
 801f852:	f7e0 fed1 	bl	80005f8 <__aeabi_dmul>
 801f856:	a35c      	add	r3, pc, #368	@ (adr r3, 801f9c8 <atan+0x2f0>)
 801f858:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f85c:	f7e0 fd14 	bl	8000288 <__aeabi_dsub>
 801f860:	4632      	mov	r2, r6
 801f862:	463b      	mov	r3, r7
 801f864:	f7e0 fec8 	bl	80005f8 <__aeabi_dmul>
 801f868:	a359      	add	r3, pc, #356	@ (adr r3, 801f9d0 <atan+0x2f8>)
 801f86a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f86e:	f7e0 fd0b 	bl	8000288 <__aeabi_dsub>
 801f872:	4632      	mov	r2, r6
 801f874:	463b      	mov	r3, r7
 801f876:	f7e0 febf 	bl	80005f8 <__aeabi_dmul>
 801f87a:	4602      	mov	r2, r0
 801f87c:	460b      	mov	r3, r1
 801f87e:	4640      	mov	r0, r8
 801f880:	4649      	mov	r1, r9
 801f882:	f7e0 fd03 	bl	800028c <__adddf3>
 801f886:	4622      	mov	r2, r4
 801f888:	462b      	mov	r3, r5
 801f88a:	f7e0 feb5 	bl	80005f8 <__aeabi_dmul>
 801f88e:	f1ba 3fff 	cmp.w	sl, #4294967295
 801f892:	4602      	mov	r2, r0
 801f894:	460b      	mov	r3, r1
 801f896:	d148      	bne.n	801f92a <atan+0x252>
 801f898:	4620      	mov	r0, r4
 801f89a:	4629      	mov	r1, r5
 801f89c:	f7e0 fcf4 	bl	8000288 <__aeabi_dsub>
 801f8a0:	e72f      	b.n	801f702 <atan+0x2a>
 801f8a2:	4b52      	ldr	r3, [pc, #328]	@ (801f9ec <atan+0x314>)
 801f8a4:	2200      	movs	r2, #0
 801f8a6:	4620      	mov	r0, r4
 801f8a8:	4629      	mov	r1, r5
 801f8aa:	f7e0 fced 	bl	8000288 <__aeabi_dsub>
 801f8ae:	4b4f      	ldr	r3, [pc, #316]	@ (801f9ec <atan+0x314>)
 801f8b0:	4606      	mov	r6, r0
 801f8b2:	460f      	mov	r7, r1
 801f8b4:	2200      	movs	r2, #0
 801f8b6:	4620      	mov	r0, r4
 801f8b8:	4629      	mov	r1, r5
 801f8ba:	f7e0 fce7 	bl	800028c <__adddf3>
 801f8be:	4602      	mov	r2, r0
 801f8c0:	460b      	mov	r3, r1
 801f8c2:	4630      	mov	r0, r6
 801f8c4:	4639      	mov	r1, r7
 801f8c6:	f7e0 ffc1 	bl	800084c <__aeabi_ddiv>
 801f8ca:	f04f 0a01 	mov.w	sl, #1
 801f8ce:	4604      	mov	r4, r0
 801f8d0:	460d      	mov	r5, r1
 801f8d2:	e765      	b.n	801f7a0 <atan+0xc8>
 801f8d4:	4b47      	ldr	r3, [pc, #284]	@ (801f9f4 <atan+0x31c>)
 801f8d6:	429e      	cmp	r6, r3
 801f8d8:	d21c      	bcs.n	801f914 <atan+0x23c>
 801f8da:	4b47      	ldr	r3, [pc, #284]	@ (801f9f8 <atan+0x320>)
 801f8dc:	2200      	movs	r2, #0
 801f8de:	4620      	mov	r0, r4
 801f8e0:	4629      	mov	r1, r5
 801f8e2:	f7e0 fcd1 	bl	8000288 <__aeabi_dsub>
 801f8e6:	4b44      	ldr	r3, [pc, #272]	@ (801f9f8 <atan+0x320>)
 801f8e8:	4606      	mov	r6, r0
 801f8ea:	460f      	mov	r7, r1
 801f8ec:	2200      	movs	r2, #0
 801f8ee:	4620      	mov	r0, r4
 801f8f0:	4629      	mov	r1, r5
 801f8f2:	f7e0 fe81 	bl	80005f8 <__aeabi_dmul>
 801f8f6:	4b3d      	ldr	r3, [pc, #244]	@ (801f9ec <atan+0x314>)
 801f8f8:	2200      	movs	r2, #0
 801f8fa:	f7e0 fcc7 	bl	800028c <__adddf3>
 801f8fe:	4602      	mov	r2, r0
 801f900:	460b      	mov	r3, r1
 801f902:	4630      	mov	r0, r6
 801f904:	4639      	mov	r1, r7
 801f906:	f7e0 ffa1 	bl	800084c <__aeabi_ddiv>
 801f90a:	f04f 0a02 	mov.w	sl, #2
 801f90e:	4604      	mov	r4, r0
 801f910:	460d      	mov	r5, r1
 801f912:	e745      	b.n	801f7a0 <atan+0xc8>
 801f914:	4622      	mov	r2, r4
 801f916:	462b      	mov	r3, r5
 801f918:	4938      	ldr	r1, [pc, #224]	@ (801f9fc <atan+0x324>)
 801f91a:	2000      	movs	r0, #0
 801f91c:	f7e0 ff96 	bl	800084c <__aeabi_ddiv>
 801f920:	f04f 0a03 	mov.w	sl, #3
 801f924:	4604      	mov	r4, r0
 801f926:	460d      	mov	r5, r1
 801f928:	e73a      	b.n	801f7a0 <atan+0xc8>
 801f92a:	4b35      	ldr	r3, [pc, #212]	@ (801fa00 <atan+0x328>)
 801f92c:	4e35      	ldr	r6, [pc, #212]	@ (801fa04 <atan+0x32c>)
 801f92e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 801f932:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f936:	f7e0 fca7 	bl	8000288 <__aeabi_dsub>
 801f93a:	4622      	mov	r2, r4
 801f93c:	462b      	mov	r3, r5
 801f93e:	f7e0 fca3 	bl	8000288 <__aeabi_dsub>
 801f942:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 801f946:	4602      	mov	r2, r0
 801f948:	460b      	mov	r3, r1
 801f94a:	e9d6 0100 	ldrd	r0, r1, [r6]
 801f94e:	f7e0 fc9b 	bl	8000288 <__aeabi_dsub>
 801f952:	f1bb 0f00 	cmp.w	fp, #0
 801f956:	4604      	mov	r4, r0
 801f958:	460d      	mov	r5, r1
 801f95a:	f6bf aedc 	bge.w	801f716 <atan+0x3e>
 801f95e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 801f962:	461d      	mov	r5, r3
 801f964:	e6d7      	b.n	801f716 <atan+0x3e>
 801f966:	a51c      	add	r5, pc, #112	@ (adr r5, 801f9d8 <atan+0x300>)
 801f968:	e9d5 4500 	ldrd	r4, r5, [r5]
 801f96c:	e6d3      	b.n	801f716 <atan+0x3e>
 801f96e:	bf00      	nop
 801f970:	54442d18 	.word	0x54442d18
 801f974:	3ff921fb 	.word	0x3ff921fb
 801f978:	8800759c 	.word	0x8800759c
 801f97c:	7e37e43c 	.word	0x7e37e43c
 801f980:	e322da11 	.word	0xe322da11
 801f984:	3f90ad3a 	.word	0x3f90ad3a
 801f988:	24760deb 	.word	0x24760deb
 801f98c:	3fa97b4b 	.word	0x3fa97b4b
 801f990:	a0d03d51 	.word	0xa0d03d51
 801f994:	3fb10d66 	.word	0x3fb10d66
 801f998:	c54c206e 	.word	0xc54c206e
 801f99c:	3fb745cd 	.word	0x3fb745cd
 801f9a0:	920083ff 	.word	0x920083ff
 801f9a4:	3fc24924 	.word	0x3fc24924
 801f9a8:	5555550d 	.word	0x5555550d
 801f9ac:	3fd55555 	.word	0x3fd55555
 801f9b0:	2c6a6c2f 	.word	0x2c6a6c2f
 801f9b4:	bfa2b444 	.word	0xbfa2b444
 801f9b8:	52defd9a 	.word	0x52defd9a
 801f9bc:	3fadde2d 	.word	0x3fadde2d
 801f9c0:	af749a6d 	.word	0xaf749a6d
 801f9c4:	3fb3b0f2 	.word	0x3fb3b0f2
 801f9c8:	fe231671 	.word	0xfe231671
 801f9cc:	3fbc71c6 	.word	0x3fbc71c6
 801f9d0:	9998ebc4 	.word	0x9998ebc4
 801f9d4:	3fc99999 	.word	0x3fc99999
 801f9d8:	54442d18 	.word	0x54442d18
 801f9dc:	bff921fb 	.word	0xbff921fb
 801f9e0:	440fffff 	.word	0x440fffff
 801f9e4:	7ff00000 	.word	0x7ff00000
 801f9e8:	3fdbffff 	.word	0x3fdbffff
 801f9ec:	3ff00000 	.word	0x3ff00000
 801f9f0:	3ff2ffff 	.word	0x3ff2ffff
 801f9f4:	40038000 	.word	0x40038000
 801f9f8:	3ff80000 	.word	0x3ff80000
 801f9fc:	bff00000 	.word	0xbff00000
 801fa00:	08021970 	.word	0x08021970
 801fa04:	08021990 	.word	0x08021990

0801fa08 <cos>:
 801fa08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fa0a:	ec53 2b10 	vmov	r2, r3, d0
 801fa0e:	4826      	ldr	r0, [pc, #152]	@ (801faa8 <cos+0xa0>)
 801fa10:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 801fa14:	4281      	cmp	r1, r0
 801fa16:	d806      	bhi.n	801fa26 <cos+0x1e>
 801fa18:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 801faa0 <cos+0x98>
 801fa1c:	b005      	add	sp, #20
 801fa1e:	f85d eb04 	ldr.w	lr, [sp], #4
 801fa22:	f000 b9f9 	b.w	801fe18 <__kernel_cos>
 801fa26:	4821      	ldr	r0, [pc, #132]	@ (801faac <cos+0xa4>)
 801fa28:	4281      	cmp	r1, r0
 801fa2a:	d908      	bls.n	801fa3e <cos+0x36>
 801fa2c:	4610      	mov	r0, r2
 801fa2e:	4619      	mov	r1, r3
 801fa30:	f7e0 fc2a 	bl	8000288 <__aeabi_dsub>
 801fa34:	ec41 0b10 	vmov	d0, r0, r1
 801fa38:	b005      	add	sp, #20
 801fa3a:	f85d fb04 	ldr.w	pc, [sp], #4
 801fa3e:	4668      	mov	r0, sp
 801fa40:	f000 fc36 	bl	80202b0 <__ieee754_rem_pio2>
 801fa44:	f000 0003 	and.w	r0, r0, #3
 801fa48:	2801      	cmp	r0, #1
 801fa4a:	d00b      	beq.n	801fa64 <cos+0x5c>
 801fa4c:	2802      	cmp	r0, #2
 801fa4e:	d015      	beq.n	801fa7c <cos+0x74>
 801fa50:	b9d8      	cbnz	r0, 801fa8a <cos+0x82>
 801fa52:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fa56:	ed9d 0b00 	vldr	d0, [sp]
 801fa5a:	f000 f9dd 	bl	801fe18 <__kernel_cos>
 801fa5e:	ec51 0b10 	vmov	r0, r1, d0
 801fa62:	e7e7      	b.n	801fa34 <cos+0x2c>
 801fa64:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fa68:	ed9d 0b00 	vldr	d0, [sp]
 801fa6c:	f000 fa9c 	bl	801ffa8 <__kernel_sin>
 801fa70:	ec53 2b10 	vmov	r2, r3, d0
 801fa74:	4610      	mov	r0, r2
 801fa76:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 801fa7a:	e7db      	b.n	801fa34 <cos+0x2c>
 801fa7c:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fa80:	ed9d 0b00 	vldr	d0, [sp]
 801fa84:	f000 f9c8 	bl	801fe18 <__kernel_cos>
 801fa88:	e7f2      	b.n	801fa70 <cos+0x68>
 801fa8a:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fa8e:	ed9d 0b00 	vldr	d0, [sp]
 801fa92:	2001      	movs	r0, #1
 801fa94:	f000 fa88 	bl	801ffa8 <__kernel_sin>
 801fa98:	e7e1      	b.n	801fa5e <cos+0x56>
 801fa9a:	bf00      	nop
 801fa9c:	f3af 8000 	nop.w
	...
 801faa8:	3fe921fb 	.word	0x3fe921fb
 801faac:	7fefffff 	.word	0x7fefffff

0801fab0 <fabs>:
 801fab0:	ec51 0b10 	vmov	r0, r1, d0
 801fab4:	4602      	mov	r2, r0
 801fab6:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 801faba:	ec43 2b10 	vmov	d0, r2, r3
 801fabe:	4770      	bx	lr

0801fac0 <sin>:
 801fac0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fac2:	ec53 2b10 	vmov	r2, r3, d0
 801fac6:	4826      	ldr	r0, [pc, #152]	@ (801fb60 <sin+0xa0>)
 801fac8:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 801facc:	4281      	cmp	r1, r0
 801face:	d807      	bhi.n	801fae0 <sin+0x20>
 801fad0:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 801fb58 <sin+0x98>
 801fad4:	2000      	movs	r0, #0
 801fad6:	b005      	add	sp, #20
 801fad8:	f85d eb04 	ldr.w	lr, [sp], #4
 801fadc:	f000 ba64 	b.w	801ffa8 <__kernel_sin>
 801fae0:	4820      	ldr	r0, [pc, #128]	@ (801fb64 <sin+0xa4>)
 801fae2:	4281      	cmp	r1, r0
 801fae4:	d908      	bls.n	801faf8 <sin+0x38>
 801fae6:	4610      	mov	r0, r2
 801fae8:	4619      	mov	r1, r3
 801faea:	f7e0 fbcd 	bl	8000288 <__aeabi_dsub>
 801faee:	ec41 0b10 	vmov	d0, r0, r1
 801faf2:	b005      	add	sp, #20
 801faf4:	f85d fb04 	ldr.w	pc, [sp], #4
 801faf8:	4668      	mov	r0, sp
 801fafa:	f000 fbd9 	bl	80202b0 <__ieee754_rem_pio2>
 801fafe:	f000 0003 	and.w	r0, r0, #3
 801fb02:	2801      	cmp	r0, #1
 801fb04:	d00c      	beq.n	801fb20 <sin+0x60>
 801fb06:	2802      	cmp	r0, #2
 801fb08:	d011      	beq.n	801fb2e <sin+0x6e>
 801fb0a:	b9e8      	cbnz	r0, 801fb48 <sin+0x88>
 801fb0c:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb10:	ed9d 0b00 	vldr	d0, [sp]
 801fb14:	2001      	movs	r0, #1
 801fb16:	f000 fa47 	bl	801ffa8 <__kernel_sin>
 801fb1a:	ec51 0b10 	vmov	r0, r1, d0
 801fb1e:	e7e6      	b.n	801faee <sin+0x2e>
 801fb20:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb24:	ed9d 0b00 	vldr	d0, [sp]
 801fb28:	f000 f976 	bl	801fe18 <__kernel_cos>
 801fb2c:	e7f5      	b.n	801fb1a <sin+0x5a>
 801fb2e:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb32:	ed9d 0b00 	vldr	d0, [sp]
 801fb36:	2001      	movs	r0, #1
 801fb38:	f000 fa36 	bl	801ffa8 <__kernel_sin>
 801fb3c:	ec53 2b10 	vmov	r2, r3, d0
 801fb40:	4610      	mov	r0, r2
 801fb42:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 801fb46:	e7d2      	b.n	801faee <sin+0x2e>
 801fb48:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb4c:	ed9d 0b00 	vldr	d0, [sp]
 801fb50:	f000 f962 	bl	801fe18 <__kernel_cos>
 801fb54:	e7f2      	b.n	801fb3c <sin+0x7c>
 801fb56:	bf00      	nop
	...
 801fb60:	3fe921fb 	.word	0x3fe921fb
 801fb64:	7fefffff 	.word	0x7fefffff

0801fb68 <__ieee754_sqrt>:
 801fb68:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb6c:	4a68      	ldr	r2, [pc, #416]	@ (801fd10 <__ieee754_sqrt+0x1a8>)
 801fb6e:	ec55 4b10 	vmov	r4, r5, d0
 801fb72:	43aa      	bics	r2, r5
 801fb74:	462b      	mov	r3, r5
 801fb76:	4621      	mov	r1, r4
 801fb78:	d110      	bne.n	801fb9c <__ieee754_sqrt+0x34>
 801fb7a:	4622      	mov	r2, r4
 801fb7c:	4620      	mov	r0, r4
 801fb7e:	4629      	mov	r1, r5
 801fb80:	f7e0 fd3a 	bl	80005f8 <__aeabi_dmul>
 801fb84:	4602      	mov	r2, r0
 801fb86:	460b      	mov	r3, r1
 801fb88:	4620      	mov	r0, r4
 801fb8a:	4629      	mov	r1, r5
 801fb8c:	f7e0 fb7e 	bl	800028c <__adddf3>
 801fb90:	4604      	mov	r4, r0
 801fb92:	460d      	mov	r5, r1
 801fb94:	ec45 4b10 	vmov	d0, r4, r5
 801fb98:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb9c:	2d00      	cmp	r5, #0
 801fb9e:	dc0e      	bgt.n	801fbbe <__ieee754_sqrt+0x56>
 801fba0:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801fba4:	4322      	orrs	r2, r4
 801fba6:	d0f5      	beq.n	801fb94 <__ieee754_sqrt+0x2c>
 801fba8:	b19d      	cbz	r5, 801fbd2 <__ieee754_sqrt+0x6a>
 801fbaa:	4622      	mov	r2, r4
 801fbac:	4620      	mov	r0, r4
 801fbae:	4629      	mov	r1, r5
 801fbb0:	f7e0 fb6a 	bl	8000288 <__aeabi_dsub>
 801fbb4:	4602      	mov	r2, r0
 801fbb6:	460b      	mov	r3, r1
 801fbb8:	f7e0 fe48 	bl	800084c <__aeabi_ddiv>
 801fbbc:	e7e8      	b.n	801fb90 <__ieee754_sqrt+0x28>
 801fbbe:	152a      	asrs	r2, r5, #20
 801fbc0:	d115      	bne.n	801fbee <__ieee754_sqrt+0x86>
 801fbc2:	2000      	movs	r0, #0
 801fbc4:	e009      	b.n	801fbda <__ieee754_sqrt+0x72>
 801fbc6:	0acb      	lsrs	r3, r1, #11
 801fbc8:	3a15      	subs	r2, #21
 801fbca:	0549      	lsls	r1, r1, #21
 801fbcc:	2b00      	cmp	r3, #0
 801fbce:	d0fa      	beq.n	801fbc6 <__ieee754_sqrt+0x5e>
 801fbd0:	e7f7      	b.n	801fbc2 <__ieee754_sqrt+0x5a>
 801fbd2:	462a      	mov	r2, r5
 801fbd4:	e7fa      	b.n	801fbcc <__ieee754_sqrt+0x64>
 801fbd6:	005b      	lsls	r3, r3, #1
 801fbd8:	3001      	adds	r0, #1
 801fbda:	02dc      	lsls	r4, r3, #11
 801fbdc:	d5fb      	bpl.n	801fbd6 <__ieee754_sqrt+0x6e>
 801fbde:	1e44      	subs	r4, r0, #1
 801fbe0:	1b12      	subs	r2, r2, r4
 801fbe2:	f1c0 0420 	rsb	r4, r0, #32
 801fbe6:	fa21 f404 	lsr.w	r4, r1, r4
 801fbea:	4323      	orrs	r3, r4
 801fbec:	4081      	lsls	r1, r0
 801fbee:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801fbf2:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 801fbf6:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801fbfa:	07d2      	lsls	r2, r2, #31
 801fbfc:	bf5c      	itt	pl
 801fbfe:	005b      	lslpl	r3, r3, #1
 801fc00:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 801fc04:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801fc08:	bf58      	it	pl
 801fc0a:	0049      	lslpl	r1, r1, #1
 801fc0c:	2600      	movs	r6, #0
 801fc0e:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 801fc12:	106d      	asrs	r5, r5, #1
 801fc14:	0049      	lsls	r1, r1, #1
 801fc16:	2016      	movs	r0, #22
 801fc18:	4632      	mov	r2, r6
 801fc1a:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 801fc1e:	1917      	adds	r7, r2, r4
 801fc20:	429f      	cmp	r7, r3
 801fc22:	bfde      	ittt	le
 801fc24:	193a      	addle	r2, r7, r4
 801fc26:	1bdb      	suble	r3, r3, r7
 801fc28:	1936      	addle	r6, r6, r4
 801fc2a:	0fcf      	lsrs	r7, r1, #31
 801fc2c:	3801      	subs	r0, #1
 801fc2e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 801fc32:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801fc36:	ea4f 0454 	mov.w	r4, r4, lsr #1
 801fc3a:	d1f0      	bne.n	801fc1e <__ieee754_sqrt+0xb6>
 801fc3c:	4604      	mov	r4, r0
 801fc3e:	2720      	movs	r7, #32
 801fc40:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 801fc44:	429a      	cmp	r2, r3
 801fc46:	eb00 0e0c 	add.w	lr, r0, ip
 801fc4a:	db02      	blt.n	801fc52 <__ieee754_sqrt+0xea>
 801fc4c:	d113      	bne.n	801fc76 <__ieee754_sqrt+0x10e>
 801fc4e:	458e      	cmp	lr, r1
 801fc50:	d811      	bhi.n	801fc76 <__ieee754_sqrt+0x10e>
 801fc52:	f1be 0f00 	cmp.w	lr, #0
 801fc56:	eb0e 000c 	add.w	r0, lr, ip
 801fc5a:	da42      	bge.n	801fce2 <__ieee754_sqrt+0x17a>
 801fc5c:	2800      	cmp	r0, #0
 801fc5e:	db40      	blt.n	801fce2 <__ieee754_sqrt+0x17a>
 801fc60:	f102 0801 	add.w	r8, r2, #1
 801fc64:	1a9b      	subs	r3, r3, r2
 801fc66:	458e      	cmp	lr, r1
 801fc68:	bf88      	it	hi
 801fc6a:	f103 33ff 	addhi.w	r3, r3, #4294967295
 801fc6e:	eba1 010e 	sub.w	r1, r1, lr
 801fc72:	4464      	add	r4, ip
 801fc74:	4642      	mov	r2, r8
 801fc76:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 801fc7a:	3f01      	subs	r7, #1
 801fc7c:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801fc80:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801fc84:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801fc88:	d1dc      	bne.n	801fc44 <__ieee754_sqrt+0xdc>
 801fc8a:	4319      	orrs	r1, r3
 801fc8c:	d01b      	beq.n	801fcc6 <__ieee754_sqrt+0x15e>
 801fc8e:	f8df a084 	ldr.w	sl, [pc, #132]	@ 801fd14 <__ieee754_sqrt+0x1ac>
 801fc92:	f8df b084 	ldr.w	fp, [pc, #132]	@ 801fd18 <__ieee754_sqrt+0x1b0>
 801fc96:	e9da 0100 	ldrd	r0, r1, [sl]
 801fc9a:	e9db 2300 	ldrd	r2, r3, [fp]
 801fc9e:	f7e0 faf3 	bl	8000288 <__aeabi_dsub>
 801fca2:	e9da 8900 	ldrd	r8, r9, [sl]
 801fca6:	4602      	mov	r2, r0
 801fca8:	460b      	mov	r3, r1
 801fcaa:	4640      	mov	r0, r8
 801fcac:	4649      	mov	r1, r9
 801fcae:	f7e0 ff1f 	bl	8000af0 <__aeabi_dcmple>
 801fcb2:	b140      	cbz	r0, 801fcc6 <__ieee754_sqrt+0x15e>
 801fcb4:	f1b4 3fff 	cmp.w	r4, #4294967295
 801fcb8:	e9da 0100 	ldrd	r0, r1, [sl]
 801fcbc:	e9db 2300 	ldrd	r2, r3, [fp]
 801fcc0:	d111      	bne.n	801fce6 <__ieee754_sqrt+0x17e>
 801fcc2:	3601      	adds	r6, #1
 801fcc4:	463c      	mov	r4, r7
 801fcc6:	1072      	asrs	r2, r6, #1
 801fcc8:	0863      	lsrs	r3, r4, #1
 801fcca:	07f1      	lsls	r1, r6, #31
 801fccc:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 801fcd0:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 801fcd4:	bf48      	it	mi
 801fcd6:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 801fcda:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 801fcde:	4618      	mov	r0, r3
 801fce0:	e756      	b.n	801fb90 <__ieee754_sqrt+0x28>
 801fce2:	4690      	mov	r8, r2
 801fce4:	e7be      	b.n	801fc64 <__ieee754_sqrt+0xfc>
 801fce6:	f7e0 fad1 	bl	800028c <__adddf3>
 801fcea:	e9da 8900 	ldrd	r8, r9, [sl]
 801fcee:	4602      	mov	r2, r0
 801fcf0:	460b      	mov	r3, r1
 801fcf2:	4640      	mov	r0, r8
 801fcf4:	4649      	mov	r1, r9
 801fcf6:	f7e0 fef1 	bl	8000adc <__aeabi_dcmplt>
 801fcfa:	b120      	cbz	r0, 801fd06 <__ieee754_sqrt+0x19e>
 801fcfc:	1ca0      	adds	r0, r4, #2
 801fcfe:	bf08      	it	eq
 801fd00:	3601      	addeq	r6, #1
 801fd02:	3402      	adds	r4, #2
 801fd04:	e7df      	b.n	801fcc6 <__ieee754_sqrt+0x15e>
 801fd06:	1c63      	adds	r3, r4, #1
 801fd08:	f023 0401 	bic.w	r4, r3, #1
 801fd0c:	e7db      	b.n	801fcc6 <__ieee754_sqrt+0x15e>
 801fd0e:	bf00      	nop
 801fd10:	7ff00000 	.word	0x7ff00000
 801fd14:	200007d0 	.word	0x200007d0
 801fd18:	200007c8 	.word	0x200007c8
 801fd1c:	00000000 	.word	0x00000000

0801fd20 <floor>:
 801fd20:	ec51 0b10 	vmov	r0, r1, d0
 801fd24:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801fd28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fd2c:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 801fd30:	2e13      	cmp	r6, #19
 801fd32:	460c      	mov	r4, r1
 801fd34:	4605      	mov	r5, r0
 801fd36:	4680      	mov	r8, r0
 801fd38:	dc34      	bgt.n	801fda4 <floor+0x84>
 801fd3a:	2e00      	cmp	r6, #0
 801fd3c:	da17      	bge.n	801fd6e <floor+0x4e>
 801fd3e:	a332      	add	r3, pc, #200	@ (adr r3, 801fe08 <floor+0xe8>)
 801fd40:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fd44:	f7e0 faa2 	bl	800028c <__adddf3>
 801fd48:	2200      	movs	r2, #0
 801fd4a:	2300      	movs	r3, #0
 801fd4c:	f7e0 fee4 	bl	8000b18 <__aeabi_dcmpgt>
 801fd50:	b150      	cbz	r0, 801fd68 <floor+0x48>
 801fd52:	2c00      	cmp	r4, #0
 801fd54:	da55      	bge.n	801fe02 <floor+0xe2>
 801fd56:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 801fd5a:	432c      	orrs	r4, r5
 801fd5c:	2500      	movs	r5, #0
 801fd5e:	42ac      	cmp	r4, r5
 801fd60:	4c2b      	ldr	r4, [pc, #172]	@ (801fe10 <floor+0xf0>)
 801fd62:	bf08      	it	eq
 801fd64:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 801fd68:	4621      	mov	r1, r4
 801fd6a:	4628      	mov	r0, r5
 801fd6c:	e023      	b.n	801fdb6 <floor+0x96>
 801fd6e:	4f29      	ldr	r7, [pc, #164]	@ (801fe14 <floor+0xf4>)
 801fd70:	4137      	asrs	r7, r6
 801fd72:	ea01 0307 	and.w	r3, r1, r7
 801fd76:	4303      	orrs	r3, r0
 801fd78:	d01d      	beq.n	801fdb6 <floor+0x96>
 801fd7a:	a323      	add	r3, pc, #140	@ (adr r3, 801fe08 <floor+0xe8>)
 801fd7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fd80:	f7e0 fa84 	bl	800028c <__adddf3>
 801fd84:	2200      	movs	r2, #0
 801fd86:	2300      	movs	r3, #0
 801fd88:	f7e0 fec6 	bl	8000b18 <__aeabi_dcmpgt>
 801fd8c:	2800      	cmp	r0, #0
 801fd8e:	d0eb      	beq.n	801fd68 <floor+0x48>
 801fd90:	2c00      	cmp	r4, #0
 801fd92:	bfbe      	ittt	lt
 801fd94:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 801fd98:	4133      	asrlt	r3, r6
 801fd9a:	18e4      	addlt	r4, r4, r3
 801fd9c:	ea24 0407 	bic.w	r4, r4, r7
 801fda0:	2500      	movs	r5, #0
 801fda2:	e7e1      	b.n	801fd68 <floor+0x48>
 801fda4:	2e33      	cmp	r6, #51	@ 0x33
 801fda6:	dd0a      	ble.n	801fdbe <floor+0x9e>
 801fda8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801fdac:	d103      	bne.n	801fdb6 <floor+0x96>
 801fdae:	4602      	mov	r2, r0
 801fdb0:	460b      	mov	r3, r1
 801fdb2:	f7e0 fa6b 	bl	800028c <__adddf3>
 801fdb6:	ec41 0b10 	vmov	d0, r0, r1
 801fdba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fdbe:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 801fdc2:	f04f 37ff 	mov.w	r7, #4294967295
 801fdc6:	40df      	lsrs	r7, r3
 801fdc8:	4207      	tst	r7, r0
 801fdca:	d0f4      	beq.n	801fdb6 <floor+0x96>
 801fdcc:	a30e      	add	r3, pc, #56	@ (adr r3, 801fe08 <floor+0xe8>)
 801fdce:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fdd2:	f7e0 fa5b 	bl	800028c <__adddf3>
 801fdd6:	2200      	movs	r2, #0
 801fdd8:	2300      	movs	r3, #0
 801fdda:	f7e0 fe9d 	bl	8000b18 <__aeabi_dcmpgt>
 801fdde:	2800      	cmp	r0, #0
 801fde0:	d0c2      	beq.n	801fd68 <floor+0x48>
 801fde2:	2c00      	cmp	r4, #0
 801fde4:	da0a      	bge.n	801fdfc <floor+0xdc>
 801fde6:	2e14      	cmp	r6, #20
 801fde8:	d101      	bne.n	801fdee <floor+0xce>
 801fdea:	3401      	adds	r4, #1
 801fdec:	e006      	b.n	801fdfc <floor+0xdc>
 801fdee:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 801fdf2:	2301      	movs	r3, #1
 801fdf4:	40b3      	lsls	r3, r6
 801fdf6:	441d      	add	r5, r3
 801fdf8:	4545      	cmp	r5, r8
 801fdfa:	d3f6      	bcc.n	801fdea <floor+0xca>
 801fdfc:	ea25 0507 	bic.w	r5, r5, r7
 801fe00:	e7b2      	b.n	801fd68 <floor+0x48>
 801fe02:	2500      	movs	r5, #0
 801fe04:	462c      	mov	r4, r5
 801fe06:	e7af      	b.n	801fd68 <floor+0x48>
 801fe08:	8800759c 	.word	0x8800759c
 801fe0c:	7e37e43c 	.word	0x7e37e43c
 801fe10:	bff00000 	.word	0xbff00000
 801fe14:	000fffff 	.word	0x000fffff

0801fe18 <__kernel_cos>:
 801fe18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe1c:	ec57 6b10 	vmov	r6, r7, d0
 801fe20:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 801fe24:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 801fe28:	ed8d 1b00 	vstr	d1, [sp]
 801fe2c:	d206      	bcs.n	801fe3c <__kernel_cos+0x24>
 801fe2e:	4630      	mov	r0, r6
 801fe30:	4639      	mov	r1, r7
 801fe32:	f7e0 fe91 	bl	8000b58 <__aeabi_d2iz>
 801fe36:	2800      	cmp	r0, #0
 801fe38:	f000 8088 	beq.w	801ff4c <__kernel_cos+0x134>
 801fe3c:	4632      	mov	r2, r6
 801fe3e:	463b      	mov	r3, r7
 801fe40:	4630      	mov	r0, r6
 801fe42:	4639      	mov	r1, r7
 801fe44:	f7e0 fbd8 	bl	80005f8 <__aeabi_dmul>
 801fe48:	4b51      	ldr	r3, [pc, #324]	@ (801ff90 <__kernel_cos+0x178>)
 801fe4a:	2200      	movs	r2, #0
 801fe4c:	4604      	mov	r4, r0
 801fe4e:	460d      	mov	r5, r1
 801fe50:	f7e0 fbd2 	bl	80005f8 <__aeabi_dmul>
 801fe54:	a340      	add	r3, pc, #256	@ (adr r3, 801ff58 <__kernel_cos+0x140>)
 801fe56:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fe5a:	4682      	mov	sl, r0
 801fe5c:	468b      	mov	fp, r1
 801fe5e:	4620      	mov	r0, r4
 801fe60:	4629      	mov	r1, r5
 801fe62:	f7e0 fbc9 	bl	80005f8 <__aeabi_dmul>
 801fe66:	a33e      	add	r3, pc, #248	@ (adr r3, 801ff60 <__kernel_cos+0x148>)
 801fe68:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fe6c:	f7e0 fa0e 	bl	800028c <__adddf3>
 801fe70:	4622      	mov	r2, r4
 801fe72:	462b      	mov	r3, r5
 801fe74:	f7e0 fbc0 	bl	80005f8 <__aeabi_dmul>
 801fe78:	a33b      	add	r3, pc, #236	@ (adr r3, 801ff68 <__kernel_cos+0x150>)
 801fe7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fe7e:	f7e0 fa03 	bl	8000288 <__aeabi_dsub>
 801fe82:	4622      	mov	r2, r4
 801fe84:	462b      	mov	r3, r5
 801fe86:	f7e0 fbb7 	bl	80005f8 <__aeabi_dmul>
 801fe8a:	a339      	add	r3, pc, #228	@ (adr r3, 801ff70 <__kernel_cos+0x158>)
 801fe8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fe90:	f7e0 f9fc 	bl	800028c <__adddf3>
 801fe94:	4622      	mov	r2, r4
 801fe96:	462b      	mov	r3, r5
 801fe98:	f7e0 fbae 	bl	80005f8 <__aeabi_dmul>
 801fe9c:	a336      	add	r3, pc, #216	@ (adr r3, 801ff78 <__kernel_cos+0x160>)
 801fe9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fea2:	f7e0 f9f1 	bl	8000288 <__aeabi_dsub>
 801fea6:	4622      	mov	r2, r4
 801fea8:	462b      	mov	r3, r5
 801feaa:	f7e0 fba5 	bl	80005f8 <__aeabi_dmul>
 801feae:	a334      	add	r3, pc, #208	@ (adr r3, 801ff80 <__kernel_cos+0x168>)
 801feb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 801feb4:	f7e0 f9ea 	bl	800028c <__adddf3>
 801feb8:	4622      	mov	r2, r4
 801feba:	462b      	mov	r3, r5
 801febc:	f7e0 fb9c 	bl	80005f8 <__aeabi_dmul>
 801fec0:	4622      	mov	r2, r4
 801fec2:	462b      	mov	r3, r5
 801fec4:	f7e0 fb98 	bl	80005f8 <__aeabi_dmul>
 801fec8:	e9dd 2300 	ldrd	r2, r3, [sp]
 801fecc:	4604      	mov	r4, r0
 801fece:	460d      	mov	r5, r1
 801fed0:	4630      	mov	r0, r6
 801fed2:	4639      	mov	r1, r7
 801fed4:	f7e0 fb90 	bl	80005f8 <__aeabi_dmul>
 801fed8:	460b      	mov	r3, r1
 801feda:	4602      	mov	r2, r0
 801fedc:	4629      	mov	r1, r5
 801fede:	4620      	mov	r0, r4
 801fee0:	f7e0 f9d2 	bl	8000288 <__aeabi_dsub>
 801fee4:	4b2b      	ldr	r3, [pc, #172]	@ (801ff94 <__kernel_cos+0x17c>)
 801fee6:	4598      	cmp	r8, r3
 801fee8:	4606      	mov	r6, r0
 801feea:	460f      	mov	r7, r1
 801feec:	d810      	bhi.n	801ff10 <__kernel_cos+0xf8>
 801feee:	4602      	mov	r2, r0
 801fef0:	460b      	mov	r3, r1
 801fef2:	4650      	mov	r0, sl
 801fef4:	4659      	mov	r1, fp
 801fef6:	f7e0 f9c7 	bl	8000288 <__aeabi_dsub>
 801fefa:	460b      	mov	r3, r1
 801fefc:	4926      	ldr	r1, [pc, #152]	@ (801ff98 <__kernel_cos+0x180>)
 801fefe:	4602      	mov	r2, r0
 801ff00:	2000      	movs	r0, #0
 801ff02:	f7e0 f9c1 	bl	8000288 <__aeabi_dsub>
 801ff06:	ec41 0b10 	vmov	d0, r0, r1
 801ff0a:	b003      	add	sp, #12
 801ff0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff10:	4b22      	ldr	r3, [pc, #136]	@ (801ff9c <__kernel_cos+0x184>)
 801ff12:	4921      	ldr	r1, [pc, #132]	@ (801ff98 <__kernel_cos+0x180>)
 801ff14:	4598      	cmp	r8, r3
 801ff16:	bf8c      	ite	hi
 801ff18:	4d21      	ldrhi	r5, [pc, #132]	@ (801ffa0 <__kernel_cos+0x188>)
 801ff1a:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 801ff1e:	2400      	movs	r4, #0
 801ff20:	4622      	mov	r2, r4
 801ff22:	462b      	mov	r3, r5
 801ff24:	2000      	movs	r0, #0
 801ff26:	f7e0 f9af 	bl	8000288 <__aeabi_dsub>
 801ff2a:	4622      	mov	r2, r4
 801ff2c:	4680      	mov	r8, r0
 801ff2e:	4689      	mov	r9, r1
 801ff30:	462b      	mov	r3, r5
 801ff32:	4650      	mov	r0, sl
 801ff34:	4659      	mov	r1, fp
 801ff36:	f7e0 f9a7 	bl	8000288 <__aeabi_dsub>
 801ff3a:	4632      	mov	r2, r6
 801ff3c:	463b      	mov	r3, r7
 801ff3e:	f7e0 f9a3 	bl	8000288 <__aeabi_dsub>
 801ff42:	4602      	mov	r2, r0
 801ff44:	460b      	mov	r3, r1
 801ff46:	4640      	mov	r0, r8
 801ff48:	4649      	mov	r1, r9
 801ff4a:	e7da      	b.n	801ff02 <__kernel_cos+0xea>
 801ff4c:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 801ff88 <__kernel_cos+0x170>
 801ff50:	e7db      	b.n	801ff0a <__kernel_cos+0xf2>
 801ff52:	bf00      	nop
 801ff54:	f3af 8000 	nop.w
 801ff58:	be8838d4 	.word	0xbe8838d4
 801ff5c:	bda8fae9 	.word	0xbda8fae9
 801ff60:	bdb4b1c4 	.word	0xbdb4b1c4
 801ff64:	3e21ee9e 	.word	0x3e21ee9e
 801ff68:	809c52ad 	.word	0x809c52ad
 801ff6c:	3e927e4f 	.word	0x3e927e4f
 801ff70:	19cb1590 	.word	0x19cb1590
 801ff74:	3efa01a0 	.word	0x3efa01a0
 801ff78:	16c15177 	.word	0x16c15177
 801ff7c:	3f56c16c 	.word	0x3f56c16c
 801ff80:	5555554c 	.word	0x5555554c
 801ff84:	3fa55555 	.word	0x3fa55555
 801ff88:	00000000 	.word	0x00000000
 801ff8c:	3ff00000 	.word	0x3ff00000
 801ff90:	3fe00000 	.word	0x3fe00000
 801ff94:	3fd33332 	.word	0x3fd33332
 801ff98:	3ff00000 	.word	0x3ff00000
 801ff9c:	3fe90000 	.word	0x3fe90000
 801ffa0:	3fd20000 	.word	0x3fd20000
 801ffa4:	00000000 	.word	0x00000000

0801ffa8 <__kernel_sin>:
 801ffa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ffac:	ec55 4b10 	vmov	r4, r5, d0
 801ffb0:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 801ffb4:	b085      	sub	sp, #20
 801ffb6:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 801ffba:	ed8d 1b02 	vstr	d1, [sp, #8]
 801ffbe:	4680      	mov	r8, r0
 801ffc0:	d205      	bcs.n	801ffce <__kernel_sin+0x26>
 801ffc2:	4620      	mov	r0, r4
 801ffc4:	4629      	mov	r1, r5
 801ffc6:	f7e0 fdc7 	bl	8000b58 <__aeabi_d2iz>
 801ffca:	2800      	cmp	r0, #0
 801ffcc:	d052      	beq.n	8020074 <__kernel_sin+0xcc>
 801ffce:	4622      	mov	r2, r4
 801ffd0:	462b      	mov	r3, r5
 801ffd2:	4620      	mov	r0, r4
 801ffd4:	4629      	mov	r1, r5
 801ffd6:	f7e0 fb0f 	bl	80005f8 <__aeabi_dmul>
 801ffda:	4682      	mov	sl, r0
 801ffdc:	468b      	mov	fp, r1
 801ffde:	4602      	mov	r2, r0
 801ffe0:	460b      	mov	r3, r1
 801ffe2:	4620      	mov	r0, r4
 801ffe4:	4629      	mov	r1, r5
 801ffe6:	f7e0 fb07 	bl	80005f8 <__aeabi_dmul>
 801ffea:	a342      	add	r3, pc, #264	@ (adr r3, 80200f4 <__kernel_sin+0x14c>)
 801ffec:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fff0:	e9cd 0100 	strd	r0, r1, [sp]
 801fff4:	4650      	mov	r0, sl
 801fff6:	4659      	mov	r1, fp
 801fff8:	f7e0 fafe 	bl	80005f8 <__aeabi_dmul>
 801fffc:	a33f      	add	r3, pc, #252	@ (adr r3, 80200fc <__kernel_sin+0x154>)
 801fffe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020002:	f7e0 f941 	bl	8000288 <__aeabi_dsub>
 8020006:	4652      	mov	r2, sl
 8020008:	465b      	mov	r3, fp
 802000a:	f7e0 faf5 	bl	80005f8 <__aeabi_dmul>
 802000e:	a33d      	add	r3, pc, #244	@ (adr r3, 8020104 <__kernel_sin+0x15c>)
 8020010:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020014:	f7e0 f93a 	bl	800028c <__adddf3>
 8020018:	4652      	mov	r2, sl
 802001a:	465b      	mov	r3, fp
 802001c:	f7e0 faec 	bl	80005f8 <__aeabi_dmul>
 8020020:	a33a      	add	r3, pc, #232	@ (adr r3, 802010c <__kernel_sin+0x164>)
 8020022:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020026:	f7e0 f92f 	bl	8000288 <__aeabi_dsub>
 802002a:	4652      	mov	r2, sl
 802002c:	465b      	mov	r3, fp
 802002e:	f7e0 fae3 	bl	80005f8 <__aeabi_dmul>
 8020032:	a338      	add	r3, pc, #224	@ (adr r3, 8020114 <__kernel_sin+0x16c>)
 8020034:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020038:	f7e0 f928 	bl	800028c <__adddf3>
 802003c:	4606      	mov	r6, r0
 802003e:	460f      	mov	r7, r1
 8020040:	f1b8 0f00 	cmp.w	r8, #0
 8020044:	d11b      	bne.n	802007e <__kernel_sin+0xd6>
 8020046:	4602      	mov	r2, r0
 8020048:	460b      	mov	r3, r1
 802004a:	4650      	mov	r0, sl
 802004c:	4659      	mov	r1, fp
 802004e:	f7e0 fad3 	bl	80005f8 <__aeabi_dmul>
 8020052:	a325      	add	r3, pc, #148	@ (adr r3, 80200e8 <__kernel_sin+0x140>)
 8020054:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020058:	f7e0 f916 	bl	8000288 <__aeabi_dsub>
 802005c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8020060:	f7e0 faca 	bl	80005f8 <__aeabi_dmul>
 8020064:	4602      	mov	r2, r0
 8020066:	460b      	mov	r3, r1
 8020068:	4620      	mov	r0, r4
 802006a:	4629      	mov	r1, r5
 802006c:	f7e0 f90e 	bl	800028c <__adddf3>
 8020070:	4604      	mov	r4, r0
 8020072:	460d      	mov	r5, r1
 8020074:	ec45 4b10 	vmov	d0, r4, r5
 8020078:	b005      	add	sp, #20
 802007a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802007e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020082:	4b1b      	ldr	r3, [pc, #108]	@ (80200f0 <__kernel_sin+0x148>)
 8020084:	2200      	movs	r2, #0
 8020086:	f7e0 fab7 	bl	80005f8 <__aeabi_dmul>
 802008a:	4632      	mov	r2, r6
 802008c:	4680      	mov	r8, r0
 802008e:	4689      	mov	r9, r1
 8020090:	463b      	mov	r3, r7
 8020092:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020096:	f7e0 faaf 	bl	80005f8 <__aeabi_dmul>
 802009a:	4602      	mov	r2, r0
 802009c:	460b      	mov	r3, r1
 802009e:	4640      	mov	r0, r8
 80200a0:	4649      	mov	r1, r9
 80200a2:	f7e0 f8f1 	bl	8000288 <__aeabi_dsub>
 80200a6:	4652      	mov	r2, sl
 80200a8:	465b      	mov	r3, fp
 80200aa:	f7e0 faa5 	bl	80005f8 <__aeabi_dmul>
 80200ae:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80200b2:	f7e0 f8e9 	bl	8000288 <__aeabi_dsub>
 80200b6:	a30c      	add	r3, pc, #48	@ (adr r3, 80200e8 <__kernel_sin+0x140>)
 80200b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80200bc:	4606      	mov	r6, r0
 80200be:	460f      	mov	r7, r1
 80200c0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80200c4:	f7e0 fa98 	bl	80005f8 <__aeabi_dmul>
 80200c8:	4602      	mov	r2, r0
 80200ca:	460b      	mov	r3, r1
 80200cc:	4630      	mov	r0, r6
 80200ce:	4639      	mov	r1, r7
 80200d0:	f7e0 f8dc 	bl	800028c <__adddf3>
 80200d4:	4602      	mov	r2, r0
 80200d6:	460b      	mov	r3, r1
 80200d8:	4620      	mov	r0, r4
 80200da:	4629      	mov	r1, r5
 80200dc:	f7e0 f8d4 	bl	8000288 <__aeabi_dsub>
 80200e0:	e7c6      	b.n	8020070 <__kernel_sin+0xc8>
 80200e2:	bf00      	nop
 80200e4:	f3af 8000 	nop.w
 80200e8:	55555549 	.word	0x55555549
 80200ec:	3fc55555 	.word	0x3fc55555
 80200f0:	3fe00000 	.word	0x3fe00000
 80200f4:	5acfd57c 	.word	0x5acfd57c
 80200f8:	3de5d93a 	.word	0x3de5d93a
 80200fc:	8a2b9ceb 	.word	0x8a2b9ceb
 8020100:	3e5ae5e6 	.word	0x3e5ae5e6
 8020104:	57b1fe7d 	.word	0x57b1fe7d
 8020108:	3ec71de3 	.word	0x3ec71de3
 802010c:	19c161d5 	.word	0x19c161d5
 8020110:	3f2a01a0 	.word	0x3f2a01a0
 8020114:	1110f8a6 	.word	0x1110f8a6
 8020118:	3f811111 	.word	0x3f811111
 802011c:	00000000 	.word	0x00000000

08020120 <__ieee754_atan2>:
 8020120:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020124:	ec57 6b11 	vmov	r6, r7, d1
 8020128:	4273      	negs	r3, r6
 802012a:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 80202a8 <__ieee754_atan2+0x188>
 802012e:	f027 4200 	bic.w	r2, r7, #2147483648	@ 0x80000000
 8020132:	4333      	orrs	r3, r6
 8020134:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8020138:	4543      	cmp	r3, r8
 802013a:	ec51 0b10 	vmov	r0, r1, d0
 802013e:	4635      	mov	r5, r6
 8020140:	d809      	bhi.n	8020156 <__ieee754_atan2+0x36>
 8020142:	4244      	negs	r4, r0
 8020144:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8020148:	4304      	orrs	r4, r0
 802014a:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 802014e:	4544      	cmp	r4, r8
 8020150:	468e      	mov	lr, r1
 8020152:	4681      	mov	r9, r0
 8020154:	d907      	bls.n	8020166 <__ieee754_atan2+0x46>
 8020156:	4632      	mov	r2, r6
 8020158:	463b      	mov	r3, r7
 802015a:	f7e0 f897 	bl	800028c <__adddf3>
 802015e:	ec41 0b10 	vmov	d0, r0, r1
 8020162:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020166:	f107 4440 	add.w	r4, r7, #3221225472	@ 0xc0000000
 802016a:	f504 1480 	add.w	r4, r4, #1048576	@ 0x100000
 802016e:	4334      	orrs	r4, r6
 8020170:	d103      	bne.n	802017a <__ieee754_atan2+0x5a>
 8020172:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020176:	f7ff baaf 	b.w	801f6d8 <atan>
 802017a:	17bc      	asrs	r4, r7, #30
 802017c:	f004 0402 	and.w	r4, r4, #2
 8020180:	ea53 0909 	orrs.w	r9, r3, r9
 8020184:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 8020188:	d107      	bne.n	802019a <__ieee754_atan2+0x7a>
 802018a:	2c02      	cmp	r4, #2
 802018c:	d05f      	beq.n	802024e <__ieee754_atan2+0x12e>
 802018e:	2c03      	cmp	r4, #3
 8020190:	d1e5      	bne.n	802015e <__ieee754_atan2+0x3e>
 8020192:	a141      	add	r1, pc, #260	@ (adr r1, 8020298 <__ieee754_atan2+0x178>)
 8020194:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020198:	e7e1      	b.n	802015e <__ieee754_atan2+0x3e>
 802019a:	4315      	orrs	r5, r2
 802019c:	d106      	bne.n	80201ac <__ieee754_atan2+0x8c>
 802019e:	f1be 0f00 	cmp.w	lr, #0
 80201a2:	da5f      	bge.n	8020264 <__ieee754_atan2+0x144>
 80201a4:	a13e      	add	r1, pc, #248	@ (adr r1, 80202a0 <__ieee754_atan2+0x180>)
 80201a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80201aa:	e7d8      	b.n	802015e <__ieee754_atan2+0x3e>
 80201ac:	4542      	cmp	r2, r8
 80201ae:	d10f      	bne.n	80201d0 <__ieee754_atan2+0xb0>
 80201b0:	4293      	cmp	r3, r2
 80201b2:	f104 34ff 	add.w	r4, r4, #4294967295
 80201b6:	d107      	bne.n	80201c8 <__ieee754_atan2+0xa8>
 80201b8:	2c02      	cmp	r4, #2
 80201ba:	d84c      	bhi.n	8020256 <__ieee754_atan2+0x136>
 80201bc:	4b34      	ldr	r3, [pc, #208]	@ (8020290 <__ieee754_atan2+0x170>)
 80201be:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80201c2:	e9d3 0100 	ldrd	r0, r1, [r3]
 80201c6:	e7ca      	b.n	802015e <__ieee754_atan2+0x3e>
 80201c8:	2c02      	cmp	r4, #2
 80201ca:	d848      	bhi.n	802025e <__ieee754_atan2+0x13e>
 80201cc:	4b31      	ldr	r3, [pc, #196]	@ (8020294 <__ieee754_atan2+0x174>)
 80201ce:	e7f6      	b.n	80201be <__ieee754_atan2+0x9e>
 80201d0:	4543      	cmp	r3, r8
 80201d2:	d0e4      	beq.n	802019e <__ieee754_atan2+0x7e>
 80201d4:	1a9b      	subs	r3, r3, r2
 80201d6:	f1b3 7f74 	cmp.w	r3, #63963136	@ 0x3d00000
 80201da:	ea4f 5223 	mov.w	r2, r3, asr #20
 80201de:	da1e      	bge.n	802021e <__ieee754_atan2+0xfe>
 80201e0:	2f00      	cmp	r7, #0
 80201e2:	da01      	bge.n	80201e8 <__ieee754_atan2+0xc8>
 80201e4:	323c      	adds	r2, #60	@ 0x3c
 80201e6:	db1e      	blt.n	8020226 <__ieee754_atan2+0x106>
 80201e8:	4632      	mov	r2, r6
 80201ea:	463b      	mov	r3, r7
 80201ec:	f7e0 fb2e 	bl	800084c <__aeabi_ddiv>
 80201f0:	ec41 0b10 	vmov	d0, r0, r1
 80201f4:	f7ff fc5c 	bl	801fab0 <fabs>
 80201f8:	f7ff fa6e 	bl	801f6d8 <atan>
 80201fc:	ec51 0b10 	vmov	r0, r1, d0
 8020200:	2c01      	cmp	r4, #1
 8020202:	d013      	beq.n	802022c <__ieee754_atan2+0x10c>
 8020204:	2c02      	cmp	r4, #2
 8020206:	d015      	beq.n	8020234 <__ieee754_atan2+0x114>
 8020208:	2c00      	cmp	r4, #0
 802020a:	d0a8      	beq.n	802015e <__ieee754_atan2+0x3e>
 802020c:	a318      	add	r3, pc, #96	@ (adr r3, 8020270 <__ieee754_atan2+0x150>)
 802020e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020212:	f7e0 f839 	bl	8000288 <__aeabi_dsub>
 8020216:	a318      	add	r3, pc, #96	@ (adr r3, 8020278 <__ieee754_atan2+0x158>)
 8020218:	e9d3 2300 	ldrd	r2, r3, [r3]
 802021c:	e014      	b.n	8020248 <__ieee754_atan2+0x128>
 802021e:	a118      	add	r1, pc, #96	@ (adr r1, 8020280 <__ieee754_atan2+0x160>)
 8020220:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020224:	e7ec      	b.n	8020200 <__ieee754_atan2+0xe0>
 8020226:	2000      	movs	r0, #0
 8020228:	2100      	movs	r1, #0
 802022a:	e7e9      	b.n	8020200 <__ieee754_atan2+0xe0>
 802022c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020230:	4619      	mov	r1, r3
 8020232:	e794      	b.n	802015e <__ieee754_atan2+0x3e>
 8020234:	a30e      	add	r3, pc, #56	@ (adr r3, 8020270 <__ieee754_atan2+0x150>)
 8020236:	e9d3 2300 	ldrd	r2, r3, [r3]
 802023a:	f7e0 f825 	bl	8000288 <__aeabi_dsub>
 802023e:	4602      	mov	r2, r0
 8020240:	460b      	mov	r3, r1
 8020242:	a10d      	add	r1, pc, #52	@ (adr r1, 8020278 <__ieee754_atan2+0x158>)
 8020244:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020248:	f7e0 f81e 	bl	8000288 <__aeabi_dsub>
 802024c:	e787      	b.n	802015e <__ieee754_atan2+0x3e>
 802024e:	a10a      	add	r1, pc, #40	@ (adr r1, 8020278 <__ieee754_atan2+0x158>)
 8020250:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020254:	e783      	b.n	802015e <__ieee754_atan2+0x3e>
 8020256:	a10c      	add	r1, pc, #48	@ (adr r1, 8020288 <__ieee754_atan2+0x168>)
 8020258:	e9d1 0100 	ldrd	r0, r1, [r1]
 802025c:	e77f      	b.n	802015e <__ieee754_atan2+0x3e>
 802025e:	2000      	movs	r0, #0
 8020260:	2100      	movs	r1, #0
 8020262:	e77c      	b.n	802015e <__ieee754_atan2+0x3e>
 8020264:	a106      	add	r1, pc, #24	@ (adr r1, 8020280 <__ieee754_atan2+0x160>)
 8020266:	e9d1 0100 	ldrd	r0, r1, [r1]
 802026a:	e778      	b.n	802015e <__ieee754_atan2+0x3e>
 802026c:	f3af 8000 	nop.w
 8020270:	33145c07 	.word	0x33145c07
 8020274:	3ca1a626 	.word	0x3ca1a626
 8020278:	54442d18 	.word	0x54442d18
 802027c:	400921fb 	.word	0x400921fb
 8020280:	54442d18 	.word	0x54442d18
 8020284:	3ff921fb 	.word	0x3ff921fb
 8020288:	54442d18 	.word	0x54442d18
 802028c:	3fe921fb 	.word	0x3fe921fb
 8020290:	080219c8 	.word	0x080219c8
 8020294:	080219b0 	.word	0x080219b0
 8020298:	54442d18 	.word	0x54442d18
 802029c:	c00921fb 	.word	0xc00921fb
 80202a0:	54442d18 	.word	0x54442d18
 80202a4:	bff921fb 	.word	0xbff921fb
 80202a8:	7ff00000 	.word	0x7ff00000
 80202ac:	00000000 	.word	0x00000000

080202b0 <__ieee754_rem_pio2>:
 80202b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202b4:	ec57 6b10 	vmov	r6, r7, d0
 80202b8:	4bc5      	ldr	r3, [pc, #788]	@ (80205d0 <__ieee754_rem_pio2+0x320>)
 80202ba:	b08d      	sub	sp, #52	@ 0x34
 80202bc:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 80202c0:	4598      	cmp	r8, r3
 80202c2:	4604      	mov	r4, r0
 80202c4:	9704      	str	r7, [sp, #16]
 80202c6:	d807      	bhi.n	80202d8 <__ieee754_rem_pio2+0x28>
 80202c8:	2200      	movs	r2, #0
 80202ca:	2300      	movs	r3, #0
 80202cc:	ed80 0b00 	vstr	d0, [r0]
 80202d0:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80202d4:	2500      	movs	r5, #0
 80202d6:	e028      	b.n	802032a <__ieee754_rem_pio2+0x7a>
 80202d8:	4bbe      	ldr	r3, [pc, #760]	@ (80205d4 <__ieee754_rem_pio2+0x324>)
 80202da:	4598      	cmp	r8, r3
 80202dc:	d878      	bhi.n	80203d0 <__ieee754_rem_pio2+0x120>
 80202de:	9b04      	ldr	r3, [sp, #16]
 80202e0:	4dbd      	ldr	r5, [pc, #756]	@ (80205d8 <__ieee754_rem_pio2+0x328>)
 80202e2:	2b00      	cmp	r3, #0
 80202e4:	4630      	mov	r0, r6
 80202e6:	a3ac      	add	r3, pc, #688	@ (adr r3, 8020598 <__ieee754_rem_pio2+0x2e8>)
 80202e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80202ec:	4639      	mov	r1, r7
 80202ee:	dd38      	ble.n	8020362 <__ieee754_rem_pio2+0xb2>
 80202f0:	f7df ffca 	bl	8000288 <__aeabi_dsub>
 80202f4:	45a8      	cmp	r8, r5
 80202f6:	4606      	mov	r6, r0
 80202f8:	460f      	mov	r7, r1
 80202fa:	d01a      	beq.n	8020332 <__ieee754_rem_pio2+0x82>
 80202fc:	a3a8      	add	r3, pc, #672	@ (adr r3, 80205a0 <__ieee754_rem_pio2+0x2f0>)
 80202fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020302:	f7df ffc1 	bl	8000288 <__aeabi_dsub>
 8020306:	4602      	mov	r2, r0
 8020308:	460b      	mov	r3, r1
 802030a:	4680      	mov	r8, r0
 802030c:	4689      	mov	r9, r1
 802030e:	4630      	mov	r0, r6
 8020310:	4639      	mov	r1, r7
 8020312:	f7df ffb9 	bl	8000288 <__aeabi_dsub>
 8020316:	a3a2      	add	r3, pc, #648	@ (adr r3, 80205a0 <__ieee754_rem_pio2+0x2f0>)
 8020318:	e9d3 2300 	ldrd	r2, r3, [r3]
 802031c:	f7df ffb4 	bl	8000288 <__aeabi_dsub>
 8020320:	e9c4 8900 	strd	r8, r9, [r4]
 8020324:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020328:	2501      	movs	r5, #1
 802032a:	4628      	mov	r0, r5
 802032c:	b00d      	add	sp, #52	@ 0x34
 802032e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020332:	a39d      	add	r3, pc, #628	@ (adr r3, 80205a8 <__ieee754_rem_pio2+0x2f8>)
 8020334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020338:	f7df ffa6 	bl	8000288 <__aeabi_dsub>
 802033c:	a39c      	add	r3, pc, #624	@ (adr r3, 80205b0 <__ieee754_rem_pio2+0x300>)
 802033e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020342:	4606      	mov	r6, r0
 8020344:	460f      	mov	r7, r1
 8020346:	f7df ff9f 	bl	8000288 <__aeabi_dsub>
 802034a:	4602      	mov	r2, r0
 802034c:	460b      	mov	r3, r1
 802034e:	4680      	mov	r8, r0
 8020350:	4689      	mov	r9, r1
 8020352:	4630      	mov	r0, r6
 8020354:	4639      	mov	r1, r7
 8020356:	f7df ff97 	bl	8000288 <__aeabi_dsub>
 802035a:	a395      	add	r3, pc, #596	@ (adr r3, 80205b0 <__ieee754_rem_pio2+0x300>)
 802035c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020360:	e7dc      	b.n	802031c <__ieee754_rem_pio2+0x6c>
 8020362:	f7df ff93 	bl	800028c <__adddf3>
 8020366:	45a8      	cmp	r8, r5
 8020368:	4606      	mov	r6, r0
 802036a:	460f      	mov	r7, r1
 802036c:	d018      	beq.n	80203a0 <__ieee754_rem_pio2+0xf0>
 802036e:	a38c      	add	r3, pc, #560	@ (adr r3, 80205a0 <__ieee754_rem_pio2+0x2f0>)
 8020370:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020374:	f7df ff8a 	bl	800028c <__adddf3>
 8020378:	4602      	mov	r2, r0
 802037a:	460b      	mov	r3, r1
 802037c:	4680      	mov	r8, r0
 802037e:	4689      	mov	r9, r1
 8020380:	4630      	mov	r0, r6
 8020382:	4639      	mov	r1, r7
 8020384:	f7df ff80 	bl	8000288 <__aeabi_dsub>
 8020388:	a385      	add	r3, pc, #532	@ (adr r3, 80205a0 <__ieee754_rem_pio2+0x2f0>)
 802038a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802038e:	f7df ff7d 	bl	800028c <__adddf3>
 8020392:	f04f 35ff 	mov.w	r5, #4294967295
 8020396:	e9c4 8900 	strd	r8, r9, [r4]
 802039a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 802039e:	e7c4      	b.n	802032a <__ieee754_rem_pio2+0x7a>
 80203a0:	a381      	add	r3, pc, #516	@ (adr r3, 80205a8 <__ieee754_rem_pio2+0x2f8>)
 80203a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203a6:	f7df ff71 	bl	800028c <__adddf3>
 80203aa:	a381      	add	r3, pc, #516	@ (adr r3, 80205b0 <__ieee754_rem_pio2+0x300>)
 80203ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203b0:	4606      	mov	r6, r0
 80203b2:	460f      	mov	r7, r1
 80203b4:	f7df ff6a 	bl	800028c <__adddf3>
 80203b8:	4602      	mov	r2, r0
 80203ba:	460b      	mov	r3, r1
 80203bc:	4680      	mov	r8, r0
 80203be:	4689      	mov	r9, r1
 80203c0:	4630      	mov	r0, r6
 80203c2:	4639      	mov	r1, r7
 80203c4:	f7df ff60 	bl	8000288 <__aeabi_dsub>
 80203c8:	a379      	add	r3, pc, #484	@ (adr r3, 80205b0 <__ieee754_rem_pio2+0x300>)
 80203ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203ce:	e7de      	b.n	802038e <__ieee754_rem_pio2+0xde>
 80203d0:	4b82      	ldr	r3, [pc, #520]	@ (80205dc <__ieee754_rem_pio2+0x32c>)
 80203d2:	4598      	cmp	r8, r3
 80203d4:	f200 80d1 	bhi.w	802057a <__ieee754_rem_pio2+0x2ca>
 80203d8:	f7ff fb6a 	bl	801fab0 <fabs>
 80203dc:	ec57 6b10 	vmov	r6, r7, d0
 80203e0:	a375      	add	r3, pc, #468	@ (adr r3, 80205b8 <__ieee754_rem_pio2+0x308>)
 80203e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203e6:	4630      	mov	r0, r6
 80203e8:	4639      	mov	r1, r7
 80203ea:	f7e0 f905 	bl	80005f8 <__aeabi_dmul>
 80203ee:	4b7c      	ldr	r3, [pc, #496]	@ (80205e0 <__ieee754_rem_pio2+0x330>)
 80203f0:	2200      	movs	r2, #0
 80203f2:	f7df ff4b 	bl	800028c <__adddf3>
 80203f6:	f7e0 fbaf 	bl	8000b58 <__aeabi_d2iz>
 80203fa:	4605      	mov	r5, r0
 80203fc:	f7e0 f892 	bl	8000524 <__aeabi_i2d>
 8020400:	4602      	mov	r2, r0
 8020402:	460b      	mov	r3, r1
 8020404:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8020408:	a363      	add	r3, pc, #396	@ (adr r3, 8020598 <__ieee754_rem_pio2+0x2e8>)
 802040a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802040e:	f7e0 f8f3 	bl	80005f8 <__aeabi_dmul>
 8020412:	4602      	mov	r2, r0
 8020414:	460b      	mov	r3, r1
 8020416:	4630      	mov	r0, r6
 8020418:	4639      	mov	r1, r7
 802041a:	f7df ff35 	bl	8000288 <__aeabi_dsub>
 802041e:	a360      	add	r3, pc, #384	@ (adr r3, 80205a0 <__ieee754_rem_pio2+0x2f0>)
 8020420:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020424:	4682      	mov	sl, r0
 8020426:	468b      	mov	fp, r1
 8020428:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802042c:	f7e0 f8e4 	bl	80005f8 <__aeabi_dmul>
 8020430:	2d1f      	cmp	r5, #31
 8020432:	4606      	mov	r6, r0
 8020434:	460f      	mov	r7, r1
 8020436:	dc0c      	bgt.n	8020452 <__ieee754_rem_pio2+0x1a2>
 8020438:	4b6a      	ldr	r3, [pc, #424]	@ (80205e4 <__ieee754_rem_pio2+0x334>)
 802043a:	1e6a      	subs	r2, r5, #1
 802043c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020440:	4543      	cmp	r3, r8
 8020442:	d006      	beq.n	8020452 <__ieee754_rem_pio2+0x1a2>
 8020444:	4632      	mov	r2, r6
 8020446:	463b      	mov	r3, r7
 8020448:	4650      	mov	r0, sl
 802044a:	4659      	mov	r1, fp
 802044c:	f7df ff1c 	bl	8000288 <__aeabi_dsub>
 8020450:	e00e      	b.n	8020470 <__ieee754_rem_pio2+0x1c0>
 8020452:	463b      	mov	r3, r7
 8020454:	4632      	mov	r2, r6
 8020456:	4650      	mov	r0, sl
 8020458:	4659      	mov	r1, fp
 802045a:	f7df ff15 	bl	8000288 <__aeabi_dsub>
 802045e:	ea4f 5328 	mov.w	r3, r8, asr #20
 8020462:	9305      	str	r3, [sp, #20]
 8020464:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8020468:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 802046c:	2b10      	cmp	r3, #16
 802046e:	dc02      	bgt.n	8020476 <__ieee754_rem_pio2+0x1c6>
 8020470:	e9c4 0100 	strd	r0, r1, [r4]
 8020474:	e039      	b.n	80204ea <__ieee754_rem_pio2+0x23a>
 8020476:	a34c      	add	r3, pc, #304	@ (adr r3, 80205a8 <__ieee754_rem_pio2+0x2f8>)
 8020478:	e9d3 2300 	ldrd	r2, r3, [r3]
 802047c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020480:	f7e0 f8ba 	bl	80005f8 <__aeabi_dmul>
 8020484:	4606      	mov	r6, r0
 8020486:	460f      	mov	r7, r1
 8020488:	4602      	mov	r2, r0
 802048a:	460b      	mov	r3, r1
 802048c:	4650      	mov	r0, sl
 802048e:	4659      	mov	r1, fp
 8020490:	f7df fefa 	bl	8000288 <__aeabi_dsub>
 8020494:	4602      	mov	r2, r0
 8020496:	460b      	mov	r3, r1
 8020498:	4680      	mov	r8, r0
 802049a:	4689      	mov	r9, r1
 802049c:	4650      	mov	r0, sl
 802049e:	4659      	mov	r1, fp
 80204a0:	f7df fef2 	bl	8000288 <__aeabi_dsub>
 80204a4:	4632      	mov	r2, r6
 80204a6:	463b      	mov	r3, r7
 80204a8:	f7df feee 	bl	8000288 <__aeabi_dsub>
 80204ac:	a340      	add	r3, pc, #256	@ (adr r3, 80205b0 <__ieee754_rem_pio2+0x300>)
 80204ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204b2:	4606      	mov	r6, r0
 80204b4:	460f      	mov	r7, r1
 80204b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80204ba:	f7e0 f89d 	bl	80005f8 <__aeabi_dmul>
 80204be:	4632      	mov	r2, r6
 80204c0:	463b      	mov	r3, r7
 80204c2:	f7df fee1 	bl	8000288 <__aeabi_dsub>
 80204c6:	4602      	mov	r2, r0
 80204c8:	460b      	mov	r3, r1
 80204ca:	4606      	mov	r6, r0
 80204cc:	460f      	mov	r7, r1
 80204ce:	4640      	mov	r0, r8
 80204d0:	4649      	mov	r1, r9
 80204d2:	f7df fed9 	bl	8000288 <__aeabi_dsub>
 80204d6:	9a05      	ldr	r2, [sp, #20]
 80204d8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80204dc:	1ad3      	subs	r3, r2, r3
 80204de:	2b31      	cmp	r3, #49	@ 0x31
 80204e0:	dc20      	bgt.n	8020524 <__ieee754_rem_pio2+0x274>
 80204e2:	e9c4 0100 	strd	r0, r1, [r4]
 80204e6:	46c2      	mov	sl, r8
 80204e8:	46cb      	mov	fp, r9
 80204ea:	e9d4 8900 	ldrd	r8, r9, [r4]
 80204ee:	4650      	mov	r0, sl
 80204f0:	4642      	mov	r2, r8
 80204f2:	464b      	mov	r3, r9
 80204f4:	4659      	mov	r1, fp
 80204f6:	f7df fec7 	bl	8000288 <__aeabi_dsub>
 80204fa:	463b      	mov	r3, r7
 80204fc:	4632      	mov	r2, r6
 80204fe:	f7df fec3 	bl	8000288 <__aeabi_dsub>
 8020502:	9b04      	ldr	r3, [sp, #16]
 8020504:	2b00      	cmp	r3, #0
 8020506:	e9c4 0102 	strd	r0, r1, [r4, #8]
 802050a:	f6bf af0e 	bge.w	802032a <__ieee754_rem_pio2+0x7a>
 802050e:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 8020512:	6063      	str	r3, [r4, #4]
 8020514:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020518:	f8c4 8000 	str.w	r8, [r4]
 802051c:	60a0      	str	r0, [r4, #8]
 802051e:	60e3      	str	r3, [r4, #12]
 8020520:	426d      	negs	r5, r5
 8020522:	e702      	b.n	802032a <__ieee754_rem_pio2+0x7a>
 8020524:	a326      	add	r3, pc, #152	@ (adr r3, 80205c0 <__ieee754_rem_pio2+0x310>)
 8020526:	e9d3 2300 	ldrd	r2, r3, [r3]
 802052a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802052e:	f7e0 f863 	bl	80005f8 <__aeabi_dmul>
 8020532:	4606      	mov	r6, r0
 8020534:	460f      	mov	r7, r1
 8020536:	4602      	mov	r2, r0
 8020538:	460b      	mov	r3, r1
 802053a:	4640      	mov	r0, r8
 802053c:	4649      	mov	r1, r9
 802053e:	f7df fea3 	bl	8000288 <__aeabi_dsub>
 8020542:	4602      	mov	r2, r0
 8020544:	460b      	mov	r3, r1
 8020546:	4682      	mov	sl, r0
 8020548:	468b      	mov	fp, r1
 802054a:	4640      	mov	r0, r8
 802054c:	4649      	mov	r1, r9
 802054e:	f7df fe9b 	bl	8000288 <__aeabi_dsub>
 8020552:	4632      	mov	r2, r6
 8020554:	463b      	mov	r3, r7
 8020556:	f7df fe97 	bl	8000288 <__aeabi_dsub>
 802055a:	a31b      	add	r3, pc, #108	@ (adr r3, 80205c8 <__ieee754_rem_pio2+0x318>)
 802055c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020560:	4606      	mov	r6, r0
 8020562:	460f      	mov	r7, r1
 8020564:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020568:	f7e0 f846 	bl	80005f8 <__aeabi_dmul>
 802056c:	4632      	mov	r2, r6
 802056e:	463b      	mov	r3, r7
 8020570:	f7df fe8a 	bl	8000288 <__aeabi_dsub>
 8020574:	4606      	mov	r6, r0
 8020576:	460f      	mov	r7, r1
 8020578:	e764      	b.n	8020444 <__ieee754_rem_pio2+0x194>
 802057a:	4b1b      	ldr	r3, [pc, #108]	@ (80205e8 <__ieee754_rem_pio2+0x338>)
 802057c:	4598      	cmp	r8, r3
 802057e:	d935      	bls.n	80205ec <__ieee754_rem_pio2+0x33c>
 8020580:	4632      	mov	r2, r6
 8020582:	463b      	mov	r3, r7
 8020584:	4630      	mov	r0, r6
 8020586:	4639      	mov	r1, r7
 8020588:	f7df fe7e 	bl	8000288 <__aeabi_dsub>
 802058c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020590:	e9c4 0100 	strd	r0, r1, [r4]
 8020594:	e69e      	b.n	80202d4 <__ieee754_rem_pio2+0x24>
 8020596:	bf00      	nop
 8020598:	54400000 	.word	0x54400000
 802059c:	3ff921fb 	.word	0x3ff921fb
 80205a0:	1a626331 	.word	0x1a626331
 80205a4:	3dd0b461 	.word	0x3dd0b461
 80205a8:	1a600000 	.word	0x1a600000
 80205ac:	3dd0b461 	.word	0x3dd0b461
 80205b0:	2e037073 	.word	0x2e037073
 80205b4:	3ba3198a 	.word	0x3ba3198a
 80205b8:	6dc9c883 	.word	0x6dc9c883
 80205bc:	3fe45f30 	.word	0x3fe45f30
 80205c0:	2e000000 	.word	0x2e000000
 80205c4:	3ba3198a 	.word	0x3ba3198a
 80205c8:	252049c1 	.word	0x252049c1
 80205cc:	397b839a 	.word	0x397b839a
 80205d0:	3fe921fb 	.word	0x3fe921fb
 80205d4:	4002d97b 	.word	0x4002d97b
 80205d8:	3ff921fb 	.word	0x3ff921fb
 80205dc:	413921fb 	.word	0x413921fb
 80205e0:	3fe00000 	.word	0x3fe00000
 80205e4:	080219e0 	.word	0x080219e0
 80205e8:	7fefffff 	.word	0x7fefffff
 80205ec:	ea4f 5528 	mov.w	r5, r8, asr #20
 80205f0:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 80205f4:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 80205f8:	4630      	mov	r0, r6
 80205fa:	460f      	mov	r7, r1
 80205fc:	f7e0 faac 	bl	8000b58 <__aeabi_d2iz>
 8020600:	f7df ff90 	bl	8000524 <__aeabi_i2d>
 8020604:	4602      	mov	r2, r0
 8020606:	460b      	mov	r3, r1
 8020608:	4630      	mov	r0, r6
 802060a:	4639      	mov	r1, r7
 802060c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8020610:	f7df fe3a 	bl	8000288 <__aeabi_dsub>
 8020614:	4b22      	ldr	r3, [pc, #136]	@ (80206a0 <__ieee754_rem_pio2+0x3f0>)
 8020616:	2200      	movs	r2, #0
 8020618:	f7df ffee 	bl	80005f8 <__aeabi_dmul>
 802061c:	460f      	mov	r7, r1
 802061e:	4606      	mov	r6, r0
 8020620:	f7e0 fa9a 	bl	8000b58 <__aeabi_d2iz>
 8020624:	f7df ff7e 	bl	8000524 <__aeabi_i2d>
 8020628:	4602      	mov	r2, r0
 802062a:	460b      	mov	r3, r1
 802062c:	4630      	mov	r0, r6
 802062e:	4639      	mov	r1, r7
 8020630:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8020634:	f7df fe28 	bl	8000288 <__aeabi_dsub>
 8020638:	4b19      	ldr	r3, [pc, #100]	@ (80206a0 <__ieee754_rem_pio2+0x3f0>)
 802063a:	2200      	movs	r2, #0
 802063c:	f7df ffdc 	bl	80005f8 <__aeabi_dmul>
 8020640:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8020644:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8020648:	f04f 0803 	mov.w	r8, #3
 802064c:	2600      	movs	r6, #0
 802064e:	2700      	movs	r7, #0
 8020650:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8020654:	4632      	mov	r2, r6
 8020656:	463b      	mov	r3, r7
 8020658:	46c2      	mov	sl, r8
 802065a:	f108 38ff 	add.w	r8, r8, #4294967295
 802065e:	f7e0 fa33 	bl	8000ac8 <__aeabi_dcmpeq>
 8020662:	2800      	cmp	r0, #0
 8020664:	d1f4      	bne.n	8020650 <__ieee754_rem_pio2+0x3a0>
 8020666:	4b0f      	ldr	r3, [pc, #60]	@ (80206a4 <__ieee754_rem_pio2+0x3f4>)
 8020668:	9301      	str	r3, [sp, #4]
 802066a:	2302      	movs	r3, #2
 802066c:	9300      	str	r3, [sp, #0]
 802066e:	462a      	mov	r2, r5
 8020670:	4653      	mov	r3, sl
 8020672:	4621      	mov	r1, r4
 8020674:	a806      	add	r0, sp, #24
 8020676:	f000 f897 	bl	80207a8 <__kernel_rem_pio2>
 802067a:	9b04      	ldr	r3, [sp, #16]
 802067c:	2b00      	cmp	r3, #0
 802067e:	4605      	mov	r5, r0
 8020680:	f6bf ae53 	bge.w	802032a <__ieee754_rem_pio2+0x7a>
 8020684:	e9d4 2100 	ldrd	r2, r1, [r4]
 8020688:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 802068c:	e9c4 2300 	strd	r2, r3, [r4]
 8020690:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 8020694:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020698:	e9c4 2302 	strd	r2, r3, [r4, #8]
 802069c:	e740      	b.n	8020520 <__ieee754_rem_pio2+0x270>
 802069e:	bf00      	nop
 80206a0:	41700000 	.word	0x41700000
 80206a4:	08021a60 	.word	0x08021a60

080206a8 <scalbn>:
 80206a8:	b570      	push	{r4, r5, r6, lr}
 80206aa:	ec55 4b10 	vmov	r4, r5, d0
 80206ae:	f3c5 510a 	ubfx	r1, r5, #20, #11
 80206b2:	4606      	mov	r6, r0
 80206b4:	462b      	mov	r3, r5
 80206b6:	b991      	cbnz	r1, 80206de <scalbn+0x36>
 80206b8:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 80206bc:	4323      	orrs	r3, r4
 80206be:	d03d      	beq.n	802073c <scalbn+0x94>
 80206c0:	4b35      	ldr	r3, [pc, #212]	@ (8020798 <scalbn+0xf0>)
 80206c2:	4620      	mov	r0, r4
 80206c4:	4629      	mov	r1, r5
 80206c6:	2200      	movs	r2, #0
 80206c8:	f7df ff96 	bl	80005f8 <__aeabi_dmul>
 80206cc:	4b33      	ldr	r3, [pc, #204]	@ (802079c <scalbn+0xf4>)
 80206ce:	429e      	cmp	r6, r3
 80206d0:	4604      	mov	r4, r0
 80206d2:	460d      	mov	r5, r1
 80206d4:	da0f      	bge.n	80206f6 <scalbn+0x4e>
 80206d6:	a328      	add	r3, pc, #160	@ (adr r3, 8020778 <scalbn+0xd0>)
 80206d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80206dc:	e01e      	b.n	802071c <scalbn+0x74>
 80206de:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 80206e2:	4291      	cmp	r1, r2
 80206e4:	d10b      	bne.n	80206fe <scalbn+0x56>
 80206e6:	4622      	mov	r2, r4
 80206e8:	4620      	mov	r0, r4
 80206ea:	4629      	mov	r1, r5
 80206ec:	f7df fdce 	bl	800028c <__adddf3>
 80206f0:	4604      	mov	r4, r0
 80206f2:	460d      	mov	r5, r1
 80206f4:	e022      	b.n	802073c <scalbn+0x94>
 80206f6:	460b      	mov	r3, r1
 80206f8:	f3c1 510a 	ubfx	r1, r1, #20, #11
 80206fc:	3936      	subs	r1, #54	@ 0x36
 80206fe:	f24c 3250 	movw	r2, #50000	@ 0xc350
 8020702:	4296      	cmp	r6, r2
 8020704:	dd0d      	ble.n	8020722 <scalbn+0x7a>
 8020706:	2d00      	cmp	r5, #0
 8020708:	a11d      	add	r1, pc, #116	@ (adr r1, 8020780 <scalbn+0xd8>)
 802070a:	e9d1 0100 	ldrd	r0, r1, [r1]
 802070e:	da02      	bge.n	8020716 <scalbn+0x6e>
 8020710:	a11d      	add	r1, pc, #116	@ (adr r1, 8020788 <scalbn+0xe0>)
 8020712:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020716:	a31a      	add	r3, pc, #104	@ (adr r3, 8020780 <scalbn+0xd8>)
 8020718:	e9d3 2300 	ldrd	r2, r3, [r3]
 802071c:	f7df ff6c 	bl	80005f8 <__aeabi_dmul>
 8020720:	e7e6      	b.n	80206f0 <scalbn+0x48>
 8020722:	1872      	adds	r2, r6, r1
 8020724:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8020728:	428a      	cmp	r2, r1
 802072a:	dcec      	bgt.n	8020706 <scalbn+0x5e>
 802072c:	2a00      	cmp	r2, #0
 802072e:	dd08      	ble.n	8020742 <scalbn+0x9a>
 8020730:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8020734:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8020738:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802073c:	ec45 4b10 	vmov	d0, r4, r5
 8020740:	bd70      	pop	{r4, r5, r6, pc}
 8020742:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8020746:	da08      	bge.n	802075a <scalbn+0xb2>
 8020748:	2d00      	cmp	r5, #0
 802074a:	a10b      	add	r1, pc, #44	@ (adr r1, 8020778 <scalbn+0xd0>)
 802074c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020750:	dac1      	bge.n	80206d6 <scalbn+0x2e>
 8020752:	a10f      	add	r1, pc, #60	@ (adr r1, 8020790 <scalbn+0xe8>)
 8020754:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020758:	e7bd      	b.n	80206d6 <scalbn+0x2e>
 802075a:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802075e:	3236      	adds	r2, #54	@ 0x36
 8020760:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8020764:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8020768:	4620      	mov	r0, r4
 802076a:	4b0d      	ldr	r3, [pc, #52]	@ (80207a0 <scalbn+0xf8>)
 802076c:	4629      	mov	r1, r5
 802076e:	2200      	movs	r2, #0
 8020770:	e7d4      	b.n	802071c <scalbn+0x74>
 8020772:	bf00      	nop
 8020774:	f3af 8000 	nop.w
 8020778:	c2f8f359 	.word	0xc2f8f359
 802077c:	01a56e1f 	.word	0x01a56e1f
 8020780:	8800759c 	.word	0x8800759c
 8020784:	7e37e43c 	.word	0x7e37e43c
 8020788:	8800759c 	.word	0x8800759c
 802078c:	fe37e43c 	.word	0xfe37e43c
 8020790:	c2f8f359 	.word	0xc2f8f359
 8020794:	81a56e1f 	.word	0x81a56e1f
 8020798:	43500000 	.word	0x43500000
 802079c:	ffff3cb0 	.word	0xffff3cb0
 80207a0:	3c900000 	.word	0x3c900000
 80207a4:	00000000 	.word	0x00000000

080207a8 <__kernel_rem_pio2>:
 80207a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207ac:	ed2d 8b02 	vpush	{d8}
 80207b0:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 80207b4:	f112 0f14 	cmn.w	r2, #20
 80207b8:	9306      	str	r3, [sp, #24]
 80207ba:	9104      	str	r1, [sp, #16]
 80207bc:	4bbe      	ldr	r3, [pc, #760]	@ (8020ab8 <__kernel_rem_pio2+0x310>)
 80207be:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 80207c0:	9008      	str	r0, [sp, #32]
 80207c2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80207c6:	9300      	str	r3, [sp, #0]
 80207c8:	9b06      	ldr	r3, [sp, #24]
 80207ca:	f103 33ff 	add.w	r3, r3, #4294967295
 80207ce:	bfa8      	it	ge
 80207d0:	1ed4      	subge	r4, r2, #3
 80207d2:	9305      	str	r3, [sp, #20]
 80207d4:	bfb2      	itee	lt
 80207d6:	2400      	movlt	r4, #0
 80207d8:	2318      	movge	r3, #24
 80207da:	fb94 f4f3 	sdivge	r4, r4, r3
 80207de:	f06f 0317 	mvn.w	r3, #23
 80207e2:	fb04 3303 	mla	r3, r4, r3, r3
 80207e6:	eb03 0b02 	add.w	fp, r3, r2
 80207ea:	9b00      	ldr	r3, [sp, #0]
 80207ec:	9a05      	ldr	r2, [sp, #20]
 80207ee:	ed9f 8bae 	vldr	d8, [pc, #696]	@ 8020aa8 <__kernel_rem_pio2+0x300>
 80207f2:	eb03 0802 	add.w	r8, r3, r2
 80207f6:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 80207f8:	1aa7      	subs	r7, r4, r2
 80207fa:	ae20      	add	r6, sp, #128	@ 0x80
 80207fc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8020800:	2500      	movs	r5, #0
 8020802:	4545      	cmp	r5, r8
 8020804:	dd13      	ble.n	802082e <__kernel_rem_pio2+0x86>
 8020806:	9b06      	ldr	r3, [sp, #24]
 8020808:	aa20      	add	r2, sp, #128	@ 0x80
 802080a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 802080e:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8020812:	f04f 0800 	mov.w	r8, #0
 8020816:	9b00      	ldr	r3, [sp, #0]
 8020818:	4598      	cmp	r8, r3
 802081a:	dc31      	bgt.n	8020880 <__kernel_rem_pio2+0xd8>
 802081c:	ed9f 7ba2 	vldr	d7, [pc, #648]	@ 8020aa8 <__kernel_rem_pio2+0x300>
 8020820:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8020824:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020828:	462f      	mov	r7, r5
 802082a:	2600      	movs	r6, #0
 802082c:	e01b      	b.n	8020866 <__kernel_rem_pio2+0xbe>
 802082e:	42ef      	cmn	r7, r5
 8020830:	d407      	bmi.n	8020842 <__kernel_rem_pio2+0x9a>
 8020832:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8020836:	f7df fe75 	bl	8000524 <__aeabi_i2d>
 802083a:	e8e6 0102 	strd	r0, r1, [r6], #8
 802083e:	3501      	adds	r5, #1
 8020840:	e7df      	b.n	8020802 <__kernel_rem_pio2+0x5a>
 8020842:	ec51 0b18 	vmov	r0, r1, d8
 8020846:	e7f8      	b.n	802083a <__kernel_rem_pio2+0x92>
 8020848:	e9d7 2300 	ldrd	r2, r3, [r7]
 802084c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8020850:	f7df fed2 	bl	80005f8 <__aeabi_dmul>
 8020854:	4602      	mov	r2, r0
 8020856:	460b      	mov	r3, r1
 8020858:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802085c:	f7df fd16 	bl	800028c <__adddf3>
 8020860:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8020864:	3601      	adds	r6, #1
 8020866:	9b05      	ldr	r3, [sp, #20]
 8020868:	429e      	cmp	r6, r3
 802086a:	f1a7 0708 	sub.w	r7, r7, #8
 802086e:	ddeb      	ble.n	8020848 <__kernel_rem_pio2+0xa0>
 8020870:	ed9d 7b02 	vldr	d7, [sp, #8]
 8020874:	f108 0801 	add.w	r8, r8, #1
 8020878:	ecaa 7b02 	vstmia	sl!, {d7}
 802087c:	3508      	adds	r5, #8
 802087e:	e7ca      	b.n	8020816 <__kernel_rem_pio2+0x6e>
 8020880:	9b00      	ldr	r3, [sp, #0]
 8020882:	f8dd 8000 	ldr.w	r8, [sp]
 8020886:	aa0c      	add	r2, sp, #48	@ 0x30
 8020888:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 802088c:	930a      	str	r3, [sp, #40]	@ 0x28
 802088e:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8020890:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8020894:	9309      	str	r3, [sp, #36]	@ 0x24
 8020896:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 802089a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802089c:	ab98      	add	r3, sp, #608	@ 0x260
 802089e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80208a2:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 80208a6:	ed8d 7b02 	vstr	d7, [sp, #8]
 80208aa:	ac0c      	add	r4, sp, #48	@ 0x30
 80208ac:	ab70      	add	r3, sp, #448	@ 0x1c0
 80208ae:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 80208b2:	46a1      	mov	r9, r4
 80208b4:	46c2      	mov	sl, r8
 80208b6:	f1ba 0f00 	cmp.w	sl, #0
 80208ba:	f1a5 0508 	sub.w	r5, r5, #8
 80208be:	dc77      	bgt.n	80209b0 <__kernel_rem_pio2+0x208>
 80208c0:	4658      	mov	r0, fp
 80208c2:	ed9d 0b02 	vldr	d0, [sp, #8]
 80208c6:	f7ff feef 	bl	80206a8 <scalbn>
 80208ca:	ec57 6b10 	vmov	r6, r7, d0
 80208ce:	2200      	movs	r2, #0
 80208d0:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 80208d4:	4630      	mov	r0, r6
 80208d6:	4639      	mov	r1, r7
 80208d8:	f7df fe8e 	bl	80005f8 <__aeabi_dmul>
 80208dc:	ec41 0b10 	vmov	d0, r0, r1
 80208e0:	f7ff fa1e 	bl	801fd20 <floor>
 80208e4:	4b75      	ldr	r3, [pc, #468]	@ (8020abc <__kernel_rem_pio2+0x314>)
 80208e6:	ec51 0b10 	vmov	r0, r1, d0
 80208ea:	2200      	movs	r2, #0
 80208ec:	f7df fe84 	bl	80005f8 <__aeabi_dmul>
 80208f0:	4602      	mov	r2, r0
 80208f2:	460b      	mov	r3, r1
 80208f4:	4630      	mov	r0, r6
 80208f6:	4639      	mov	r1, r7
 80208f8:	f7df fcc6 	bl	8000288 <__aeabi_dsub>
 80208fc:	460f      	mov	r7, r1
 80208fe:	4606      	mov	r6, r0
 8020900:	f7e0 f92a 	bl	8000b58 <__aeabi_d2iz>
 8020904:	9002      	str	r0, [sp, #8]
 8020906:	f7df fe0d 	bl	8000524 <__aeabi_i2d>
 802090a:	4602      	mov	r2, r0
 802090c:	460b      	mov	r3, r1
 802090e:	4630      	mov	r0, r6
 8020910:	4639      	mov	r1, r7
 8020912:	f7df fcb9 	bl	8000288 <__aeabi_dsub>
 8020916:	f1bb 0f00 	cmp.w	fp, #0
 802091a:	4606      	mov	r6, r0
 802091c:	460f      	mov	r7, r1
 802091e:	dd6c      	ble.n	80209fa <__kernel_rem_pio2+0x252>
 8020920:	f108 31ff 	add.w	r1, r8, #4294967295
 8020924:	ab0c      	add	r3, sp, #48	@ 0x30
 8020926:	9d02      	ldr	r5, [sp, #8]
 8020928:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 802092c:	f1cb 0018 	rsb	r0, fp, #24
 8020930:	fa43 f200 	asr.w	r2, r3, r0
 8020934:	4415      	add	r5, r2
 8020936:	4082      	lsls	r2, r0
 8020938:	1a9b      	subs	r3, r3, r2
 802093a:	aa0c      	add	r2, sp, #48	@ 0x30
 802093c:	9502      	str	r5, [sp, #8]
 802093e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8020942:	f1cb 0217 	rsb	r2, fp, #23
 8020946:	fa43 f902 	asr.w	r9, r3, r2
 802094a:	f1b9 0f00 	cmp.w	r9, #0
 802094e:	dd64      	ble.n	8020a1a <__kernel_rem_pio2+0x272>
 8020950:	9b02      	ldr	r3, [sp, #8]
 8020952:	2200      	movs	r2, #0
 8020954:	3301      	adds	r3, #1
 8020956:	9302      	str	r3, [sp, #8]
 8020958:	4615      	mov	r5, r2
 802095a:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 802095e:	4590      	cmp	r8, r2
 8020960:	f300 80b8 	bgt.w	8020ad4 <__kernel_rem_pio2+0x32c>
 8020964:	f1bb 0f00 	cmp.w	fp, #0
 8020968:	dd07      	ble.n	802097a <__kernel_rem_pio2+0x1d2>
 802096a:	f1bb 0f01 	cmp.w	fp, #1
 802096e:	f000 80bf 	beq.w	8020af0 <__kernel_rem_pio2+0x348>
 8020972:	f1bb 0f02 	cmp.w	fp, #2
 8020976:	f000 80c6 	beq.w	8020b06 <__kernel_rem_pio2+0x35e>
 802097a:	f1b9 0f02 	cmp.w	r9, #2
 802097e:	d14c      	bne.n	8020a1a <__kernel_rem_pio2+0x272>
 8020980:	4632      	mov	r2, r6
 8020982:	463b      	mov	r3, r7
 8020984:	494e      	ldr	r1, [pc, #312]	@ (8020ac0 <__kernel_rem_pio2+0x318>)
 8020986:	2000      	movs	r0, #0
 8020988:	f7df fc7e 	bl	8000288 <__aeabi_dsub>
 802098c:	4606      	mov	r6, r0
 802098e:	460f      	mov	r7, r1
 8020990:	2d00      	cmp	r5, #0
 8020992:	d042      	beq.n	8020a1a <__kernel_rem_pio2+0x272>
 8020994:	4658      	mov	r0, fp
 8020996:	ed9f 0b46 	vldr	d0, [pc, #280]	@ 8020ab0 <__kernel_rem_pio2+0x308>
 802099a:	f7ff fe85 	bl	80206a8 <scalbn>
 802099e:	4630      	mov	r0, r6
 80209a0:	4639      	mov	r1, r7
 80209a2:	ec53 2b10 	vmov	r2, r3, d0
 80209a6:	f7df fc6f 	bl	8000288 <__aeabi_dsub>
 80209aa:	4606      	mov	r6, r0
 80209ac:	460f      	mov	r7, r1
 80209ae:	e034      	b.n	8020a1a <__kernel_rem_pio2+0x272>
 80209b0:	4b44      	ldr	r3, [pc, #272]	@ (8020ac4 <__kernel_rem_pio2+0x31c>)
 80209b2:	2200      	movs	r2, #0
 80209b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80209b8:	f7df fe1e 	bl	80005f8 <__aeabi_dmul>
 80209bc:	f7e0 f8cc 	bl	8000b58 <__aeabi_d2iz>
 80209c0:	f7df fdb0 	bl	8000524 <__aeabi_i2d>
 80209c4:	4b40      	ldr	r3, [pc, #256]	@ (8020ac8 <__kernel_rem_pio2+0x320>)
 80209c6:	2200      	movs	r2, #0
 80209c8:	4606      	mov	r6, r0
 80209ca:	460f      	mov	r7, r1
 80209cc:	f7df fe14 	bl	80005f8 <__aeabi_dmul>
 80209d0:	4602      	mov	r2, r0
 80209d2:	460b      	mov	r3, r1
 80209d4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80209d8:	f7df fc56 	bl	8000288 <__aeabi_dsub>
 80209dc:	f7e0 f8bc 	bl	8000b58 <__aeabi_d2iz>
 80209e0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80209e4:	f849 0b04 	str.w	r0, [r9], #4
 80209e8:	4639      	mov	r1, r7
 80209ea:	4630      	mov	r0, r6
 80209ec:	f7df fc4e 	bl	800028c <__adddf3>
 80209f0:	f10a 3aff 	add.w	sl, sl, #4294967295
 80209f4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80209f8:	e75d      	b.n	80208b6 <__kernel_rem_pio2+0x10e>
 80209fa:	d107      	bne.n	8020a0c <__kernel_rem_pio2+0x264>
 80209fc:	f108 33ff 	add.w	r3, r8, #4294967295
 8020a00:	aa0c      	add	r2, sp, #48	@ 0x30
 8020a02:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020a06:	ea4f 59e3 	mov.w	r9, r3, asr #23
 8020a0a:	e79e      	b.n	802094a <__kernel_rem_pio2+0x1a2>
 8020a0c:	4b2f      	ldr	r3, [pc, #188]	@ (8020acc <__kernel_rem_pio2+0x324>)
 8020a0e:	2200      	movs	r2, #0
 8020a10:	f7e0 f878 	bl	8000b04 <__aeabi_dcmpge>
 8020a14:	2800      	cmp	r0, #0
 8020a16:	d143      	bne.n	8020aa0 <__kernel_rem_pio2+0x2f8>
 8020a18:	4681      	mov	r9, r0
 8020a1a:	2200      	movs	r2, #0
 8020a1c:	2300      	movs	r3, #0
 8020a1e:	4630      	mov	r0, r6
 8020a20:	4639      	mov	r1, r7
 8020a22:	f7e0 f851 	bl	8000ac8 <__aeabi_dcmpeq>
 8020a26:	2800      	cmp	r0, #0
 8020a28:	f000 80bf 	beq.w	8020baa <__kernel_rem_pio2+0x402>
 8020a2c:	f108 33ff 	add.w	r3, r8, #4294967295
 8020a30:	2200      	movs	r2, #0
 8020a32:	9900      	ldr	r1, [sp, #0]
 8020a34:	428b      	cmp	r3, r1
 8020a36:	da6e      	bge.n	8020b16 <__kernel_rem_pio2+0x36e>
 8020a38:	2a00      	cmp	r2, #0
 8020a3a:	f000 8089 	beq.w	8020b50 <__kernel_rem_pio2+0x3a8>
 8020a3e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020a42:	ab0c      	add	r3, sp, #48	@ 0x30
 8020a44:	f1ab 0b18 	sub.w	fp, fp, #24
 8020a48:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 8020a4c:	2b00      	cmp	r3, #0
 8020a4e:	d0f6      	beq.n	8020a3e <__kernel_rem_pio2+0x296>
 8020a50:	4658      	mov	r0, fp
 8020a52:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8020ab0 <__kernel_rem_pio2+0x308>
 8020a56:	f7ff fe27 	bl	80206a8 <scalbn>
 8020a5a:	f108 0301 	add.w	r3, r8, #1
 8020a5e:	00da      	lsls	r2, r3, #3
 8020a60:	9205      	str	r2, [sp, #20]
 8020a62:	ec55 4b10 	vmov	r4, r5, d0
 8020a66:	aa70      	add	r2, sp, #448	@ 0x1c0
 8020a68:	f8df b058 	ldr.w	fp, [pc, #88]	@ 8020ac4 <__kernel_rem_pio2+0x31c>
 8020a6c:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8020a70:	4646      	mov	r6, r8
 8020a72:	f04f 0a00 	mov.w	sl, #0
 8020a76:	2e00      	cmp	r6, #0
 8020a78:	f280 80cf 	bge.w	8020c1a <__kernel_rem_pio2+0x472>
 8020a7c:	4644      	mov	r4, r8
 8020a7e:	2c00      	cmp	r4, #0
 8020a80:	f2c0 80fd 	blt.w	8020c7e <__kernel_rem_pio2+0x4d6>
 8020a84:	4b12      	ldr	r3, [pc, #72]	@ (8020ad0 <__kernel_rem_pio2+0x328>)
 8020a86:	461f      	mov	r7, r3
 8020a88:	ab70      	add	r3, sp, #448	@ 0x1c0
 8020a8a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020a8e:	9306      	str	r3, [sp, #24]
 8020a90:	f04f 0a00 	mov.w	sl, #0
 8020a94:	f04f 0b00 	mov.w	fp, #0
 8020a98:	2600      	movs	r6, #0
 8020a9a:	eba8 0504 	sub.w	r5, r8, r4
 8020a9e:	e0e2      	b.n	8020c66 <__kernel_rem_pio2+0x4be>
 8020aa0:	f04f 0902 	mov.w	r9, #2
 8020aa4:	e754      	b.n	8020950 <__kernel_rem_pio2+0x1a8>
 8020aa6:	bf00      	nop
	...
 8020ab4:	3ff00000 	.word	0x3ff00000
 8020ab8:	08021ba8 	.word	0x08021ba8
 8020abc:	40200000 	.word	0x40200000
 8020ac0:	3ff00000 	.word	0x3ff00000
 8020ac4:	3e700000 	.word	0x3e700000
 8020ac8:	41700000 	.word	0x41700000
 8020acc:	3fe00000 	.word	0x3fe00000
 8020ad0:	08021b68 	.word	0x08021b68
 8020ad4:	f854 3b04 	ldr.w	r3, [r4], #4
 8020ad8:	b945      	cbnz	r5, 8020aec <__kernel_rem_pio2+0x344>
 8020ada:	b123      	cbz	r3, 8020ae6 <__kernel_rem_pio2+0x33e>
 8020adc:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8020ae0:	f844 3c04 	str.w	r3, [r4, #-4]
 8020ae4:	2301      	movs	r3, #1
 8020ae6:	3201      	adds	r2, #1
 8020ae8:	461d      	mov	r5, r3
 8020aea:	e738      	b.n	802095e <__kernel_rem_pio2+0x1b6>
 8020aec:	1acb      	subs	r3, r1, r3
 8020aee:	e7f7      	b.n	8020ae0 <__kernel_rem_pio2+0x338>
 8020af0:	f108 32ff 	add.w	r2, r8, #4294967295
 8020af4:	ab0c      	add	r3, sp, #48	@ 0x30
 8020af6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020afa:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8020afe:	a90c      	add	r1, sp, #48	@ 0x30
 8020b00:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8020b04:	e739      	b.n	802097a <__kernel_rem_pio2+0x1d2>
 8020b06:	f108 32ff 	add.w	r2, r8, #4294967295
 8020b0a:	ab0c      	add	r3, sp, #48	@ 0x30
 8020b0c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020b10:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8020b14:	e7f3      	b.n	8020afe <__kernel_rem_pio2+0x356>
 8020b16:	a90c      	add	r1, sp, #48	@ 0x30
 8020b18:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8020b1c:	3b01      	subs	r3, #1
 8020b1e:	430a      	orrs	r2, r1
 8020b20:	e787      	b.n	8020a32 <__kernel_rem_pio2+0x28a>
 8020b22:	3401      	adds	r4, #1
 8020b24:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8020b28:	2a00      	cmp	r2, #0
 8020b2a:	d0fa      	beq.n	8020b22 <__kernel_rem_pio2+0x37a>
 8020b2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020b2e:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8020b32:	eb0d 0503 	add.w	r5, sp, r3
 8020b36:	9b06      	ldr	r3, [sp, #24]
 8020b38:	aa20      	add	r2, sp, #128	@ 0x80
 8020b3a:	4443      	add	r3, r8
 8020b3c:	f108 0701 	add.w	r7, r8, #1
 8020b40:	3d98      	subs	r5, #152	@ 0x98
 8020b42:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 8020b46:	4444      	add	r4, r8
 8020b48:	42bc      	cmp	r4, r7
 8020b4a:	da04      	bge.n	8020b56 <__kernel_rem_pio2+0x3ae>
 8020b4c:	46a0      	mov	r8, r4
 8020b4e:	e6a2      	b.n	8020896 <__kernel_rem_pio2+0xee>
 8020b50:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020b52:	2401      	movs	r4, #1
 8020b54:	e7e6      	b.n	8020b24 <__kernel_rem_pio2+0x37c>
 8020b56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020b58:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8020b5c:	f7df fce2 	bl	8000524 <__aeabi_i2d>
 8020b60:	ed9f 7bb1 	vldr	d7, [pc, #708]	@ 8020e28 <__kernel_rem_pio2+0x680>
 8020b64:	e8e6 0102 	strd	r0, r1, [r6], #8
 8020b68:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020b6c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8020b70:	46b2      	mov	sl, r6
 8020b72:	f04f 0800 	mov.w	r8, #0
 8020b76:	9b05      	ldr	r3, [sp, #20]
 8020b78:	4598      	cmp	r8, r3
 8020b7a:	dd05      	ble.n	8020b88 <__kernel_rem_pio2+0x3e0>
 8020b7c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8020b80:	3701      	adds	r7, #1
 8020b82:	eca5 7b02 	vstmia	r5!, {d7}
 8020b86:	e7df      	b.n	8020b48 <__kernel_rem_pio2+0x3a0>
 8020b88:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 8020b8c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8020b90:	f7df fd32 	bl	80005f8 <__aeabi_dmul>
 8020b94:	4602      	mov	r2, r0
 8020b96:	460b      	mov	r3, r1
 8020b98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020b9c:	f7df fb76 	bl	800028c <__adddf3>
 8020ba0:	f108 0801 	add.w	r8, r8, #1
 8020ba4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8020ba8:	e7e5      	b.n	8020b76 <__kernel_rem_pio2+0x3ce>
 8020baa:	f1cb 0000 	rsb	r0, fp, #0
 8020bae:	ec47 6b10 	vmov	d0, r6, r7
 8020bb2:	f7ff fd79 	bl	80206a8 <scalbn>
 8020bb6:	ec55 4b10 	vmov	r4, r5, d0
 8020bba:	4b9d      	ldr	r3, [pc, #628]	@ (8020e30 <__kernel_rem_pio2+0x688>)
 8020bbc:	2200      	movs	r2, #0
 8020bbe:	4620      	mov	r0, r4
 8020bc0:	4629      	mov	r1, r5
 8020bc2:	f7df ff9f 	bl	8000b04 <__aeabi_dcmpge>
 8020bc6:	b300      	cbz	r0, 8020c0a <__kernel_rem_pio2+0x462>
 8020bc8:	4b9a      	ldr	r3, [pc, #616]	@ (8020e34 <__kernel_rem_pio2+0x68c>)
 8020bca:	2200      	movs	r2, #0
 8020bcc:	4620      	mov	r0, r4
 8020bce:	4629      	mov	r1, r5
 8020bd0:	f7df fd12 	bl	80005f8 <__aeabi_dmul>
 8020bd4:	f7df ffc0 	bl	8000b58 <__aeabi_d2iz>
 8020bd8:	4606      	mov	r6, r0
 8020bda:	f7df fca3 	bl	8000524 <__aeabi_i2d>
 8020bde:	4b94      	ldr	r3, [pc, #592]	@ (8020e30 <__kernel_rem_pio2+0x688>)
 8020be0:	2200      	movs	r2, #0
 8020be2:	f7df fd09 	bl	80005f8 <__aeabi_dmul>
 8020be6:	460b      	mov	r3, r1
 8020be8:	4602      	mov	r2, r0
 8020bea:	4629      	mov	r1, r5
 8020bec:	4620      	mov	r0, r4
 8020bee:	f7df fb4b 	bl	8000288 <__aeabi_dsub>
 8020bf2:	f7df ffb1 	bl	8000b58 <__aeabi_d2iz>
 8020bf6:	ab0c      	add	r3, sp, #48	@ 0x30
 8020bf8:	f10b 0b18 	add.w	fp, fp, #24
 8020bfc:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8020c00:	f108 0801 	add.w	r8, r8, #1
 8020c04:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 8020c08:	e722      	b.n	8020a50 <__kernel_rem_pio2+0x2a8>
 8020c0a:	4620      	mov	r0, r4
 8020c0c:	4629      	mov	r1, r5
 8020c0e:	f7df ffa3 	bl	8000b58 <__aeabi_d2iz>
 8020c12:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c14:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8020c18:	e71a      	b.n	8020a50 <__kernel_rem_pio2+0x2a8>
 8020c1a:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c1c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8020c20:	f7df fc80 	bl	8000524 <__aeabi_i2d>
 8020c24:	4622      	mov	r2, r4
 8020c26:	462b      	mov	r3, r5
 8020c28:	f7df fce6 	bl	80005f8 <__aeabi_dmul>
 8020c2c:	4652      	mov	r2, sl
 8020c2e:	e967 0102 	strd	r0, r1, [r7, #-8]!
 8020c32:	465b      	mov	r3, fp
 8020c34:	4620      	mov	r0, r4
 8020c36:	4629      	mov	r1, r5
 8020c38:	f7df fcde 	bl	80005f8 <__aeabi_dmul>
 8020c3c:	3e01      	subs	r6, #1
 8020c3e:	4604      	mov	r4, r0
 8020c40:	460d      	mov	r5, r1
 8020c42:	e718      	b.n	8020a76 <__kernel_rem_pio2+0x2ce>
 8020c44:	9906      	ldr	r1, [sp, #24]
 8020c46:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 8020c4a:	9106      	str	r1, [sp, #24]
 8020c4c:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 8020c50:	f7df fcd2 	bl	80005f8 <__aeabi_dmul>
 8020c54:	4602      	mov	r2, r0
 8020c56:	460b      	mov	r3, r1
 8020c58:	4650      	mov	r0, sl
 8020c5a:	4659      	mov	r1, fp
 8020c5c:	f7df fb16 	bl	800028c <__adddf3>
 8020c60:	3601      	adds	r6, #1
 8020c62:	4682      	mov	sl, r0
 8020c64:	468b      	mov	fp, r1
 8020c66:	9b00      	ldr	r3, [sp, #0]
 8020c68:	429e      	cmp	r6, r3
 8020c6a:	dc01      	bgt.n	8020c70 <__kernel_rem_pio2+0x4c8>
 8020c6c:	42b5      	cmp	r5, r6
 8020c6e:	dae9      	bge.n	8020c44 <__kernel_rem_pio2+0x49c>
 8020c70:	ab48      	add	r3, sp, #288	@ 0x120
 8020c72:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8020c76:	e9c5 ab00 	strd	sl, fp, [r5]
 8020c7a:	3c01      	subs	r4, #1
 8020c7c:	e6ff      	b.n	8020a7e <__kernel_rem_pio2+0x2d6>
 8020c7e:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8020c80:	2b02      	cmp	r3, #2
 8020c82:	dc0b      	bgt.n	8020c9c <__kernel_rem_pio2+0x4f4>
 8020c84:	2b00      	cmp	r3, #0
 8020c86:	dc39      	bgt.n	8020cfc <__kernel_rem_pio2+0x554>
 8020c88:	d05d      	beq.n	8020d46 <__kernel_rem_pio2+0x59e>
 8020c8a:	9b02      	ldr	r3, [sp, #8]
 8020c8c:	f003 0007 	and.w	r0, r3, #7
 8020c90:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 8020c94:	ecbd 8b02 	vpop	{d8}
 8020c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c9c:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8020c9e:	2b03      	cmp	r3, #3
 8020ca0:	d1f3      	bne.n	8020c8a <__kernel_rem_pio2+0x4e2>
 8020ca2:	9b05      	ldr	r3, [sp, #20]
 8020ca4:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8020ca8:	eb0d 0403 	add.w	r4, sp, r3
 8020cac:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8020cb0:	4625      	mov	r5, r4
 8020cb2:	46c2      	mov	sl, r8
 8020cb4:	f1ba 0f00 	cmp.w	sl, #0
 8020cb8:	f1a5 0508 	sub.w	r5, r5, #8
 8020cbc:	dc6b      	bgt.n	8020d96 <__kernel_rem_pio2+0x5ee>
 8020cbe:	4645      	mov	r5, r8
 8020cc0:	2d01      	cmp	r5, #1
 8020cc2:	f1a4 0408 	sub.w	r4, r4, #8
 8020cc6:	f300 8087 	bgt.w	8020dd8 <__kernel_rem_pio2+0x630>
 8020cca:	9c05      	ldr	r4, [sp, #20]
 8020ccc:	ab48      	add	r3, sp, #288	@ 0x120
 8020cce:	441c      	add	r4, r3
 8020cd0:	2000      	movs	r0, #0
 8020cd2:	2100      	movs	r1, #0
 8020cd4:	f1b8 0f01 	cmp.w	r8, #1
 8020cd8:	f300 809c 	bgt.w	8020e14 <__kernel_rem_pio2+0x66c>
 8020cdc:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	@ 0x120
 8020ce0:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	@ 0x128
 8020ce4:	f1b9 0f00 	cmp.w	r9, #0
 8020ce8:	f040 80a6 	bne.w	8020e38 <__kernel_rem_pio2+0x690>
 8020cec:	9b04      	ldr	r3, [sp, #16]
 8020cee:	e9c3 7800 	strd	r7, r8, [r3]
 8020cf2:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8020cf6:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8020cfa:	e7c6      	b.n	8020c8a <__kernel_rem_pio2+0x4e2>
 8020cfc:	9d05      	ldr	r5, [sp, #20]
 8020cfe:	ab48      	add	r3, sp, #288	@ 0x120
 8020d00:	441d      	add	r5, r3
 8020d02:	4644      	mov	r4, r8
 8020d04:	2000      	movs	r0, #0
 8020d06:	2100      	movs	r1, #0
 8020d08:	2c00      	cmp	r4, #0
 8020d0a:	da35      	bge.n	8020d78 <__kernel_rem_pio2+0x5d0>
 8020d0c:	f1b9 0f00 	cmp.w	r9, #0
 8020d10:	d038      	beq.n	8020d84 <__kernel_rem_pio2+0x5dc>
 8020d12:	4602      	mov	r2, r0
 8020d14:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020d18:	9c04      	ldr	r4, [sp, #16]
 8020d1a:	e9c4 2300 	strd	r2, r3, [r4]
 8020d1e:	4602      	mov	r2, r0
 8020d20:	460b      	mov	r3, r1
 8020d22:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 8020d26:	f7df faaf 	bl	8000288 <__aeabi_dsub>
 8020d2a:	ad4a      	add	r5, sp, #296	@ 0x128
 8020d2c:	2401      	movs	r4, #1
 8020d2e:	45a0      	cmp	r8, r4
 8020d30:	da2b      	bge.n	8020d8a <__kernel_rem_pio2+0x5e2>
 8020d32:	f1b9 0f00 	cmp.w	r9, #0
 8020d36:	d002      	beq.n	8020d3e <__kernel_rem_pio2+0x596>
 8020d38:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020d3c:	4619      	mov	r1, r3
 8020d3e:	9b04      	ldr	r3, [sp, #16]
 8020d40:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8020d44:	e7a1      	b.n	8020c8a <__kernel_rem_pio2+0x4e2>
 8020d46:	9c05      	ldr	r4, [sp, #20]
 8020d48:	ab48      	add	r3, sp, #288	@ 0x120
 8020d4a:	441c      	add	r4, r3
 8020d4c:	2000      	movs	r0, #0
 8020d4e:	2100      	movs	r1, #0
 8020d50:	f1b8 0f00 	cmp.w	r8, #0
 8020d54:	da09      	bge.n	8020d6a <__kernel_rem_pio2+0x5c2>
 8020d56:	f1b9 0f00 	cmp.w	r9, #0
 8020d5a:	d002      	beq.n	8020d62 <__kernel_rem_pio2+0x5ba>
 8020d5c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020d60:	4619      	mov	r1, r3
 8020d62:	9b04      	ldr	r3, [sp, #16]
 8020d64:	e9c3 0100 	strd	r0, r1, [r3]
 8020d68:	e78f      	b.n	8020c8a <__kernel_rem_pio2+0x4e2>
 8020d6a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8020d6e:	f7df fa8d 	bl	800028c <__adddf3>
 8020d72:	f108 38ff 	add.w	r8, r8, #4294967295
 8020d76:	e7eb      	b.n	8020d50 <__kernel_rem_pio2+0x5a8>
 8020d78:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8020d7c:	f7df fa86 	bl	800028c <__adddf3>
 8020d80:	3c01      	subs	r4, #1
 8020d82:	e7c1      	b.n	8020d08 <__kernel_rem_pio2+0x560>
 8020d84:	4602      	mov	r2, r0
 8020d86:	460b      	mov	r3, r1
 8020d88:	e7c6      	b.n	8020d18 <__kernel_rem_pio2+0x570>
 8020d8a:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8020d8e:	f7df fa7d 	bl	800028c <__adddf3>
 8020d92:	3401      	adds	r4, #1
 8020d94:	e7cb      	b.n	8020d2e <__kernel_rem_pio2+0x586>
 8020d96:	ed95 7b00 	vldr	d7, [r5]
 8020d9a:	ed8d 7b00 	vstr	d7, [sp]
 8020d9e:	ed95 7b02 	vldr	d7, [r5, #8]
 8020da2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020da6:	ec53 2b17 	vmov	r2, r3, d7
 8020daa:	ed8d 7b06 	vstr	d7, [sp, #24]
 8020dae:	f7df fa6d 	bl	800028c <__adddf3>
 8020db2:	4602      	mov	r2, r0
 8020db4:	460b      	mov	r3, r1
 8020db6:	4606      	mov	r6, r0
 8020db8:	460f      	mov	r7, r1
 8020dba:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020dbe:	f7df fa63 	bl	8000288 <__aeabi_dsub>
 8020dc2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8020dc6:	f7df fa61 	bl	800028c <__adddf3>
 8020dca:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020dce:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8020dd2:	e9c5 6700 	strd	r6, r7, [r5]
 8020dd6:	e76d      	b.n	8020cb4 <__kernel_rem_pio2+0x50c>
 8020dd8:	ed94 7b00 	vldr	d7, [r4]
 8020ddc:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 8020de0:	ec51 0b17 	vmov	r0, r1, d7
 8020de4:	4652      	mov	r2, sl
 8020de6:	465b      	mov	r3, fp
 8020de8:	ed8d 7b00 	vstr	d7, [sp]
 8020dec:	f7df fa4e 	bl	800028c <__adddf3>
 8020df0:	4602      	mov	r2, r0
 8020df2:	460b      	mov	r3, r1
 8020df4:	4606      	mov	r6, r0
 8020df6:	460f      	mov	r7, r1
 8020df8:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020dfc:	f7df fa44 	bl	8000288 <__aeabi_dsub>
 8020e00:	4652      	mov	r2, sl
 8020e02:	465b      	mov	r3, fp
 8020e04:	f7df fa42 	bl	800028c <__adddf3>
 8020e08:	3d01      	subs	r5, #1
 8020e0a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020e0e:	e9c4 6700 	strd	r6, r7, [r4]
 8020e12:	e755      	b.n	8020cc0 <__kernel_rem_pio2+0x518>
 8020e14:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8020e18:	f7df fa38 	bl	800028c <__adddf3>
 8020e1c:	f108 38ff 	add.w	r8, r8, #4294967295
 8020e20:	e758      	b.n	8020cd4 <__kernel_rem_pio2+0x52c>
 8020e22:	bf00      	nop
 8020e24:	f3af 8000 	nop.w
	...
 8020e30:	41700000 	.word	0x41700000
 8020e34:	3e700000 	.word	0x3e700000
 8020e38:	9b04      	ldr	r3, [sp, #16]
 8020e3a:	9a04      	ldr	r2, [sp, #16]
 8020e3c:	601f      	str	r7, [r3, #0]
 8020e3e:	f108 4400 	add.w	r4, r8, #2147483648	@ 0x80000000
 8020e42:	605c      	str	r4, [r3, #4]
 8020e44:	609d      	str	r5, [r3, #8]
 8020e46:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8020e4a:	60d3      	str	r3, [r2, #12]
 8020e4c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020e50:	6110      	str	r0, [r2, #16]
 8020e52:	6153      	str	r3, [r2, #20]
 8020e54:	e719      	b.n	8020c8a <__kernel_rem_pio2+0x4e2>
 8020e56:	bf00      	nop

08020e58 <_init>:
 8020e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e5a:	bf00      	nop
 8020e5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020e5e:	bc08      	pop	{r3}
 8020e60:	469e      	mov	lr, r3
 8020e62:	4770      	bx	lr

08020e64 <_fini>:
 8020e64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e66:	bf00      	nop
 8020e68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020e6a:	bc08      	pop	{r3}
 8020e6c:	469e      	mov	lr, r3
 8020e6e:	4770      	bx	lr
