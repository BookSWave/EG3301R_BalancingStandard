
balancing_bot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020e20  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d48  08020fb0  08020fb0  00021fb0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08021cf8  08021cf8  000237d8  2**0
                  CONTENTS
  4 .ARM          00000008  08021cf8  08021cf8  00022cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08021d00  08021d00  000237d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08021d00  08021d00  00022d00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08021d08  08021d08  00022d08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000007d8  20000000  08021d0c  00023000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000cabc  200007d8  080224e4  000237d8  2**3
                  ALLOC
 10 ._user_heap_stack 0000d004  2000d294  080224e4  00024294  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000237d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000410e1  00000000  00000000  00023808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000b4bc  00000000  00000000  000648e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002fc8  00000000  00000000  0006fda8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000244b  00000000  00000000  00072d70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003b570  00000000  00000000  000751bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00053b43  00000000  00000000  000b072b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00103619  00000000  00000000  0010426e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  00207887  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d4e0  00000000  00000000  00207910  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  00214df0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200007d8 	.word	0x200007d8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08020f98 	.word	0x08020f98

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200007dc 	.word	0x200007dc
 80001cc:	08020f98 	.word	0x08020f98

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b96a 	b.w	8000f74 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d14e      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc4:	4694      	mov	ip, r2
 8000cc6:	458c      	cmp	ip, r1
 8000cc8:	4686      	mov	lr, r0
 8000cca:	fab2 f282 	clz	r2, r2
 8000cce:	d962      	bls.n	8000d96 <__udivmoddi4+0xde>
 8000cd0:	b14a      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd2:	f1c2 0320 	rsb	r3, r2, #32
 8000cd6:	4091      	lsls	r1, r2
 8000cd8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ce6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cea:	fa1f f68c 	uxth.w	r6, ip
 8000cee:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cf2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfe:	fb04 f106 	mul.w	r1, r4, r6
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000d0e:	f080 8112 	bcs.w	8000f36 <__udivmoddi4+0x27e>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 810f 	bls.w	8000f36 <__udivmoddi4+0x27e>
 8000d18:	3c02      	subs	r4, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a59      	subs	r1, r3, r1
 8000d1e:	fa1f f38e 	uxth.w	r3, lr
 8000d22:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d26:	fb07 1110 	mls	r1, r7, r0, r1
 8000d2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d2e:	fb00 f606 	mul.w	r6, r0, r6
 8000d32:	429e      	cmp	r6, r3
 8000d34:	d90a      	bls.n	8000d4c <__udivmoddi4+0x94>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d3e:	f080 80fc 	bcs.w	8000f3a <__udivmoddi4+0x282>
 8000d42:	429e      	cmp	r6, r3
 8000d44:	f240 80f9 	bls.w	8000f3a <__udivmoddi4+0x282>
 8000d48:	4463      	add	r3, ip
 8000d4a:	3802      	subs	r0, #2
 8000d4c:	1b9b      	subs	r3, r3, r6
 8000d4e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d52:	2100      	movs	r1, #0
 8000d54:	b11d      	cbz	r5, 8000d5e <__udivmoddi4+0xa6>
 8000d56:	40d3      	lsrs	r3, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d905      	bls.n	8000d72 <__udivmoddi4+0xba>
 8000d66:	b10d      	cbz	r5, 8000d6c <__udivmoddi4+0xb4>
 8000d68:	e9c5 0100 	strd	r0, r1, [r5]
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e7f5      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d72:	fab3 f183 	clz	r1, r3
 8000d76:	2900      	cmp	r1, #0
 8000d78:	d146      	bne.n	8000e08 <__udivmoddi4+0x150>
 8000d7a:	42a3      	cmp	r3, r4
 8000d7c:	d302      	bcc.n	8000d84 <__udivmoddi4+0xcc>
 8000d7e:	4290      	cmp	r0, r2
 8000d80:	f0c0 80f0 	bcc.w	8000f64 <__udivmoddi4+0x2ac>
 8000d84:	1a86      	subs	r6, r0, r2
 8000d86:	eb64 0303 	sbc.w	r3, r4, r3
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	d0e6      	beq.n	8000d5e <__udivmoddi4+0xa6>
 8000d90:	e9c5 6300 	strd	r6, r3, [r5]
 8000d94:	e7e3      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	f040 8090 	bne.w	8000ebc <__udivmoddi4+0x204>
 8000d9c:	eba1 040c 	sub.w	r4, r1, ip
 8000da0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000da4:	fa1f f78c 	uxth.w	r7, ip
 8000da8:	2101      	movs	r1, #1
 8000daa:	fbb4 f6f8 	udiv	r6, r4, r8
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb08 4416 	mls	r4, r8, r6, r4
 8000db6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000dba:	fb07 f006 	mul.w	r0, r7, r6
 8000dbe:	4298      	cmp	r0, r3
 8000dc0:	d908      	bls.n	8000dd4 <__udivmoddi4+0x11c>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f106 34ff 	add.w	r4, r6, #4294967295
 8000dca:	d202      	bcs.n	8000dd2 <__udivmoddi4+0x11a>
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	f200 80cd 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000dd2:	4626      	mov	r6, r4
 8000dd4:	1a1c      	subs	r4, r3, r0
 8000dd6:	fa1f f38e 	uxth.w	r3, lr
 8000dda:	fbb4 f0f8 	udiv	r0, r4, r8
 8000dde:	fb08 4410 	mls	r4, r8, r0, r4
 8000de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000de6:	fb00 f707 	mul.w	r7, r0, r7
 8000dea:	429f      	cmp	r7, r3
 8000dec:	d908      	bls.n	8000e00 <__udivmoddi4+0x148>
 8000dee:	eb1c 0303 	adds.w	r3, ip, r3
 8000df2:	f100 34ff 	add.w	r4, r0, #4294967295
 8000df6:	d202      	bcs.n	8000dfe <__udivmoddi4+0x146>
 8000df8:	429f      	cmp	r7, r3
 8000dfa:	f200 80b0 	bhi.w	8000f5e <__udivmoddi4+0x2a6>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	1bdb      	subs	r3, r3, r7
 8000e02:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e06:	e7a5      	b.n	8000d54 <__udivmoddi4+0x9c>
 8000e08:	f1c1 0620 	rsb	r6, r1, #32
 8000e0c:	408b      	lsls	r3, r1
 8000e0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000e12:	431f      	orrs	r7, r3
 8000e14:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e18:	fa04 f301 	lsl.w	r3, r4, r1
 8000e1c:	ea43 030c 	orr.w	r3, r3, ip
 8000e20:	40f4      	lsrs	r4, r6
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	0c38      	lsrs	r0, r7, #16
 8000e28:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e2c:	fbb4 fef0 	udiv	lr, r4, r0
 8000e30:	fa1f fc87 	uxth.w	ip, r7
 8000e34:	fb00 441e 	mls	r4, r0, lr, r4
 8000e38:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e3c:	fb0e f90c 	mul.w	r9, lr, ip
 8000e40:	45a1      	cmp	r9, r4
 8000e42:	fa02 f201 	lsl.w	r2, r2, r1
 8000e46:	d90a      	bls.n	8000e5e <__udivmoddi4+0x1a6>
 8000e48:	193c      	adds	r4, r7, r4
 8000e4a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e4e:	f080 8084 	bcs.w	8000f5a <__udivmoddi4+0x2a2>
 8000e52:	45a1      	cmp	r9, r4
 8000e54:	f240 8081 	bls.w	8000f5a <__udivmoddi4+0x2a2>
 8000e58:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e5c:	443c      	add	r4, r7
 8000e5e:	eba4 0409 	sub.w	r4, r4, r9
 8000e62:	fa1f f983 	uxth.w	r9, r3
 8000e66:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e6a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e6e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e72:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e76:	45a4      	cmp	ip, r4
 8000e78:	d907      	bls.n	8000e8a <__udivmoddi4+0x1d2>
 8000e7a:	193c      	adds	r4, r7, r4
 8000e7c:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e80:	d267      	bcs.n	8000f52 <__udivmoddi4+0x29a>
 8000e82:	45a4      	cmp	ip, r4
 8000e84:	d965      	bls.n	8000f52 <__udivmoddi4+0x29a>
 8000e86:	3b02      	subs	r3, #2
 8000e88:	443c      	add	r4, r7
 8000e8a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e8e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e92:	eba4 040c 	sub.w	r4, r4, ip
 8000e96:	429c      	cmp	r4, r3
 8000e98:	46ce      	mov	lr, r9
 8000e9a:	469c      	mov	ip, r3
 8000e9c:	d351      	bcc.n	8000f42 <__udivmoddi4+0x28a>
 8000e9e:	d04e      	beq.n	8000f3e <__udivmoddi4+0x286>
 8000ea0:	b155      	cbz	r5, 8000eb8 <__udivmoddi4+0x200>
 8000ea2:	ebb8 030e 	subs.w	r3, r8, lr
 8000ea6:	eb64 040c 	sbc.w	r4, r4, ip
 8000eaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000eae:	40cb      	lsrs	r3, r1
 8000eb0:	431e      	orrs	r6, r3
 8000eb2:	40cc      	lsrs	r4, r1
 8000eb4:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	e750      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000ebc:	f1c2 0320 	rsb	r3, r2, #32
 8000ec0:	fa20 f103 	lsr.w	r1, r0, r3
 8000ec4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ec8:	fa24 f303 	lsr.w	r3, r4, r3
 8000ecc:	4094      	lsls	r4, r2
 8000ece:	430c      	orrs	r4, r1
 8000ed0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ed4:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ed8:	fa1f f78c 	uxth.w	r7, ip
 8000edc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ee0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ee4:	0c23      	lsrs	r3, r4, #16
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f107 	mul.w	r1, r0, r7
 8000eee:	4299      	cmp	r1, r3
 8000ef0:	d908      	bls.n	8000f04 <__udivmoddi4+0x24c>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 36ff 	add.w	r6, r0, #4294967295
 8000efa:	d22c      	bcs.n	8000f56 <__udivmoddi4+0x29e>
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d92a      	bls.n	8000f56 <__udivmoddi4+0x29e>
 8000f00:	3802      	subs	r0, #2
 8000f02:	4463      	add	r3, ip
 8000f04:	1a5b      	subs	r3, r3, r1
 8000f06:	b2a4      	uxth	r4, r4
 8000f08:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f0c:	fb08 3311 	mls	r3, r8, r1, r3
 8000f10:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f14:	fb01 f307 	mul.w	r3, r1, r7
 8000f18:	42a3      	cmp	r3, r4
 8000f1a:	d908      	bls.n	8000f2e <__udivmoddi4+0x276>
 8000f1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000f20:	f101 36ff 	add.w	r6, r1, #4294967295
 8000f24:	d213      	bcs.n	8000f4e <__udivmoddi4+0x296>
 8000f26:	42a3      	cmp	r3, r4
 8000f28:	d911      	bls.n	8000f4e <__udivmoddi4+0x296>
 8000f2a:	3902      	subs	r1, #2
 8000f2c:	4464      	add	r4, ip
 8000f2e:	1ae4      	subs	r4, r4, r3
 8000f30:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000f34:	e739      	b.n	8000daa <__udivmoddi4+0xf2>
 8000f36:	4604      	mov	r4, r0
 8000f38:	e6f0      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e706      	b.n	8000d4c <__udivmoddi4+0x94>
 8000f3e:	45c8      	cmp	r8, r9
 8000f40:	d2ae      	bcs.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f42:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f46:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f4a:	3801      	subs	r0, #1
 8000f4c:	e7a8      	b.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f4e:	4631      	mov	r1, r6
 8000f50:	e7ed      	b.n	8000f2e <__udivmoddi4+0x276>
 8000f52:	4603      	mov	r3, r0
 8000f54:	e799      	b.n	8000e8a <__udivmoddi4+0x1d2>
 8000f56:	4630      	mov	r0, r6
 8000f58:	e7d4      	b.n	8000f04 <__udivmoddi4+0x24c>
 8000f5a:	46d6      	mov	lr, sl
 8000f5c:	e77f      	b.n	8000e5e <__udivmoddi4+0x1a6>
 8000f5e:	4463      	add	r3, ip
 8000f60:	3802      	subs	r0, #2
 8000f62:	e74d      	b.n	8000e00 <__udivmoddi4+0x148>
 8000f64:	4606      	mov	r6, r0
 8000f66:	4623      	mov	r3, r4
 8000f68:	4608      	mov	r0, r1
 8000f6a:	e70f      	b.n	8000d8c <__udivmoddi4+0xd4>
 8000f6c:	3e02      	subs	r6, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	e730      	b.n	8000dd4 <__udivmoddi4+0x11c>
 8000f72:	bf00      	nop

08000f74 <__aeabi_idiv0>:
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop

08000f78 <get_CRC8_check_sum>:
 8000f78:	b480      	push	{r7}
 8000f7a:	b087      	sub	sp, #28
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	60f8      	str	r0, [r7, #12]
 8000f80:	60b9      	str	r1, [r7, #8]
 8000f82:	4613      	mov	r3, r2
 8000f84:	71fb      	strb	r3, [r7, #7]
 8000f86:	e00a      	b.n	8000f9e <get_CRC8_check_sum+0x26>
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	1c5a      	adds	r2, r3, #1
 8000f8c:	60fa      	str	r2, [r7, #12]
 8000f8e:	781a      	ldrb	r2, [r3, #0]
 8000f90:	79fb      	ldrb	r3, [r7, #7]
 8000f92:	4053      	eors	r3, r2
 8000f94:	75fb      	strb	r3, [r7, #23]
 8000f96:	7dfb      	ldrb	r3, [r7, #23]
 8000f98:	4a07      	ldr	r2, [pc, #28]	@ (8000fb8 <get_CRC8_check_sum+0x40>)
 8000f9a:	5cd3      	ldrb	r3, [r2, r3]
 8000f9c:	71fb      	strb	r3, [r7, #7]
 8000f9e:	68bb      	ldr	r3, [r7, #8]
 8000fa0:	1e5a      	subs	r2, r3, #1
 8000fa2:	60ba      	str	r2, [r7, #8]
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d1ef      	bne.n	8000f88 <get_CRC8_check_sum+0x10>
 8000fa8:	79fb      	ldrb	r3, [r7, #7]
 8000faa:	4618      	mov	r0, r3
 8000fac:	371c      	adds	r7, #28
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	08021114 	.word	0x08021114

08000fbc <verify_CRC8_check_sum>:
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b084      	sub	sp, #16
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
 8000fc4:	6039      	str	r1, [r7, #0]
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	73fb      	strb	r3, [r7, #15]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d002      	beq.n	8000fd6 <verify_CRC8_check_sum+0x1a>
 8000fd0:	683b      	ldr	r3, [r7, #0]
 8000fd2:	2b02      	cmp	r3, #2
 8000fd4:	d801      	bhi.n	8000fda <verify_CRC8_check_sum+0x1e>
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	e013      	b.n	8001002 <verify_CRC8_check_sum+0x46>
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	3b01      	subs	r3, #1
 8000fde:	22ff      	movs	r2, #255	@ 0xff
 8000fe0:	4619      	mov	r1, r3
 8000fe2:	6878      	ldr	r0, [r7, #4]
 8000fe4:	f7ff ffc8 	bl	8000f78 <get_CRC8_check_sum>
 8000fe8:	4603      	mov	r3, r0
 8000fea:	73fb      	strb	r3, [r7, #15]
 8000fec:	683b      	ldr	r3, [r7, #0]
 8000fee:	3b01      	subs	r3, #1
 8000ff0:	687a      	ldr	r2, [r7, #4]
 8000ff2:	4413      	add	r3, r2
 8000ff4:	781b      	ldrb	r3, [r3, #0]
 8000ff6:	7bfa      	ldrb	r2, [r7, #15]
 8000ff8:	429a      	cmp	r2, r3
 8000ffa:	bf0c      	ite	eq
 8000ffc:	2301      	moveq	r3, #1
 8000ffe:	2300      	movne	r3, #0
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4618      	mov	r0, r3
 8001004:	3710      	adds	r7, #16
 8001006:	46bd      	mov	sp, r7
 8001008:	bd80      	pop	{r7, pc}

0800100a <append_CRC8_check_sum>:
 800100a:	b580      	push	{r7, lr}
 800100c:	b084      	sub	sp, #16
 800100e:	af00      	add	r7, sp, #0
 8001010:	6078      	str	r0, [r7, #4]
 8001012:	6039      	str	r1, [r7, #0]
 8001014:	2300      	movs	r3, #0
 8001016:	73fb      	strb	r3, [r7, #15]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	2b00      	cmp	r3, #0
 800101c:	d012      	beq.n	8001044 <append_CRC8_check_sum+0x3a>
 800101e:	683b      	ldr	r3, [r7, #0]
 8001020:	2b02      	cmp	r3, #2
 8001022:	d90f      	bls.n	8001044 <append_CRC8_check_sum+0x3a>
 8001024:	683b      	ldr	r3, [r7, #0]
 8001026:	3b01      	subs	r3, #1
 8001028:	22ff      	movs	r2, #255	@ 0xff
 800102a:	4619      	mov	r1, r3
 800102c:	6878      	ldr	r0, [r7, #4]
 800102e:	f7ff ffa3 	bl	8000f78 <get_CRC8_check_sum>
 8001032:	4603      	mov	r3, r0
 8001034:	73fb      	strb	r3, [r7, #15]
 8001036:	683b      	ldr	r3, [r7, #0]
 8001038:	3b01      	subs	r3, #1
 800103a:	687a      	ldr	r2, [r7, #4]
 800103c:	4413      	add	r3, r2
 800103e:	7bfa      	ldrb	r2, [r7, #15]
 8001040:	701a      	strb	r2, [r3, #0]
 8001042:	e000      	b.n	8001046 <append_CRC8_check_sum+0x3c>
 8001044:	bf00      	nop
 8001046:	3710      	adds	r7, #16
 8001048:	46bd      	mov	sp, r7
 800104a:	bd80      	pop	{r7, pc}

0800104c <get_CRC16_check_sum>:
 800104c:	b480      	push	{r7}
 800104e:	b087      	sub	sp, #28
 8001050:	af00      	add	r7, sp, #0
 8001052:	60f8      	str	r0, [r7, #12]
 8001054:	60b9      	str	r1, [r7, #8]
 8001056:	4613      	mov	r3, r2
 8001058:	80fb      	strh	r3, [r7, #6]
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d113      	bne.n	8001088 <get_CRC16_check_sum+0x3c>
 8001060:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001064:	e016      	b.n	8001094 <get_CRC16_check_sum+0x48>
 8001066:	68fb      	ldr	r3, [r7, #12]
 8001068:	1c5a      	adds	r2, r3, #1
 800106a:	60fa      	str	r2, [r7, #12]
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	75fb      	strb	r3, [r7, #23]
 8001070:	88fb      	ldrh	r3, [r7, #6]
 8001072:	0a1b      	lsrs	r3, r3, #8
 8001074:	b29a      	uxth	r2, r3
 8001076:	88f9      	ldrh	r1, [r7, #6]
 8001078:	7dfb      	ldrb	r3, [r7, #23]
 800107a:	404b      	eors	r3, r1
 800107c:	b2db      	uxtb	r3, r3
 800107e:	4908      	ldr	r1, [pc, #32]	@ (80010a0 <get_CRC16_check_sum+0x54>)
 8001080:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001084:	4053      	eors	r3, r2
 8001086:	80fb      	strh	r3, [r7, #6]
 8001088:	68bb      	ldr	r3, [r7, #8]
 800108a:	1e5a      	subs	r2, r3, #1
 800108c:	60ba      	str	r2, [r7, #8]
 800108e:	2b00      	cmp	r3, #0
 8001090:	d1e9      	bne.n	8001066 <get_CRC16_check_sum+0x1a>
 8001092:	88fb      	ldrh	r3, [r7, #6]
 8001094:	4618      	mov	r0, r3
 8001096:	371c      	adds	r7, #28
 8001098:	46bd      	mov	sp, r7
 800109a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109e:	4770      	bx	lr
 80010a0:	08021214 	.word	0x08021214

080010a4 <verify_CRC16_check_sum>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b084      	sub	sp, #16
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	6078      	str	r0, [r7, #4]
 80010ac:	6039      	str	r1, [r7, #0]
 80010ae:	2300      	movs	r3, #0
 80010b0:	81fb      	strh	r3, [r7, #14]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d002      	beq.n	80010be <verify_CRC16_check_sum+0x1a>
 80010b8:	683b      	ldr	r3, [r7, #0]
 80010ba:	2b02      	cmp	r3, #2
 80010bc:	d801      	bhi.n	80010c2 <verify_CRC16_check_sum+0x1e>
 80010be:	2300      	movs	r3, #0
 80010c0:	e020      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 80010c2:	683b      	ldr	r3, [r7, #0]
 80010c4:	3b02      	subs	r3, #2
 80010c6:	4a11      	ldr	r2, [pc, #68]	@ (800110c <verify_CRC16_check_sum+0x68>)
 80010c8:	8812      	ldrh	r2, [r2, #0]
 80010ca:	4619      	mov	r1, r3
 80010cc:	6878      	ldr	r0, [r7, #4]
 80010ce:	f7ff ffbd 	bl	800104c <get_CRC16_check_sum>
 80010d2:	4603      	mov	r3, r0
 80010d4:	81fb      	strh	r3, [r7, #14]
 80010d6:	89fb      	ldrh	r3, [r7, #14]
 80010d8:	b2db      	uxtb	r3, r3
 80010da:	683a      	ldr	r2, [r7, #0]
 80010dc:	3a02      	subs	r2, #2
 80010de:	6879      	ldr	r1, [r7, #4]
 80010e0:	440a      	add	r2, r1
 80010e2:	7812      	ldrb	r2, [r2, #0]
 80010e4:	4293      	cmp	r3, r2
 80010e6:	d10c      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010e8:	89fb      	ldrh	r3, [r7, #14]
 80010ea:	0a1b      	lsrs	r3, r3, #8
 80010ec:	b29b      	uxth	r3, r3
 80010ee:	b2db      	uxtb	r3, r3
 80010f0:	683a      	ldr	r2, [r7, #0]
 80010f2:	3a01      	subs	r2, #1
 80010f4:	6879      	ldr	r1, [r7, #4]
 80010f6:	440a      	add	r2, r1
 80010f8:	7812      	ldrb	r2, [r2, #0]
 80010fa:	4293      	cmp	r3, r2
 80010fc:	d101      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010fe:	2301      	movs	r3, #1
 8001100:	e000      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 8001102:	2300      	movs	r3, #0
 8001104:	4618      	mov	r0, r3
 8001106:	3710      	adds	r7, #16
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}
 800110c:	20000000 	.word	0x20000000

08001110 <append_CRC16_check_sum>:
 8001110:	b580      	push	{r7, lr}
 8001112:	b084      	sub	sp, #16
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	6039      	str	r1, [r7, #0]
 800111a:	2300      	movs	r3, #0
 800111c:	81fb      	strh	r3, [r7, #14]
 800111e:	687b      	ldr	r3, [r7, #4]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d01d      	beq.n	8001160 <append_CRC16_check_sum+0x50>
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	2b02      	cmp	r3, #2
 8001128:	d91a      	bls.n	8001160 <append_CRC16_check_sum+0x50>
 800112a:	683b      	ldr	r3, [r7, #0]
 800112c:	3b02      	subs	r3, #2
 800112e:	4a0e      	ldr	r2, [pc, #56]	@ (8001168 <append_CRC16_check_sum+0x58>)
 8001130:	8812      	ldrh	r2, [r2, #0]
 8001132:	4619      	mov	r1, r3
 8001134:	6878      	ldr	r0, [r7, #4]
 8001136:	f7ff ff89 	bl	800104c <get_CRC16_check_sum>
 800113a:	4603      	mov	r3, r0
 800113c:	81fb      	strh	r3, [r7, #14]
 800113e:	683b      	ldr	r3, [r7, #0]
 8001140:	3b02      	subs	r3, #2
 8001142:	687a      	ldr	r2, [r7, #4]
 8001144:	4413      	add	r3, r2
 8001146:	89fa      	ldrh	r2, [r7, #14]
 8001148:	b2d2      	uxtb	r2, r2
 800114a:	701a      	strb	r2, [r3, #0]
 800114c:	89fb      	ldrh	r3, [r7, #14]
 800114e:	0a1b      	lsrs	r3, r3, #8
 8001150:	b299      	uxth	r1, r3
 8001152:	683b      	ldr	r3, [r7, #0]
 8001154:	3b01      	subs	r3, #1
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	4413      	add	r3, r2
 800115a:	b2ca      	uxtb	r2, r1
 800115c:	701a      	strb	r2, [r3, #0]
 800115e:	e000      	b.n	8001162 <append_CRC16_check_sum+0x52>
 8001160:	bf00      	nop
 8001162:	3710      	adds	r7, #16
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	20000000 	.word	0x20000000

0800116c <buzzer>:
 800116c:	b480      	push	{r7}
 800116e:	b083      	sub	sp, #12
 8001170:	af00      	add	r7, sp, #0
 8001172:	4603      	mov	r3, r0
 8001174:	80fb      	strh	r3, [r7, #6]
 8001176:	88fb      	ldrh	r3, [r7, #6]
 8001178:	2b00      	cmp	r3, #0
 800117a:	d104      	bne.n	8001186 <buzzer+0x1a>
 800117c:	4b0b      	ldr	r3, [pc, #44]	@ (80011ac <buzzer+0x40>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	2200      	movs	r2, #0
 8001182:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001184:	e00c      	b.n	80011a0 <buzzer+0x34>
 8001186:	88fb      	ldrh	r3, [r7, #6]
 8001188:	f24a 4210 	movw	r2, #42000	@ 0xa410
 800118c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001190:	4b06      	ldr	r3, [pc, #24]	@ (80011ac <buzzer+0x40>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	629a      	str	r2, [r3, #40]	@ 0x28
 8001196:	4b05      	ldr	r3, [pc, #20]	@ (80011ac <buzzer+0x40>)
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800119e:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011a0:	bf00      	nop
 80011a2:	370c      	adds	r7, #12
 80011a4:	46bd      	mov	sp, r7
 80011a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011aa:	4770      	bx	lr
 80011ac:	20001b10 	.word	0x20001b10

080011b0 <buzzer_init>:
 80011b0:	b580      	push	{r7, lr}
 80011b2:	af00      	add	r7, sp, #0
 80011b4:	2108      	movs	r1, #8
 80011b6:	4804      	ldr	r0, [pc, #16]	@ (80011c8 <buzzer_init+0x18>)
 80011b8:	f010 fa54 	bl	8011664 <HAL_TIM_PWM_Start>
 80011bc:	4b02      	ldr	r3, [pc, #8]	@ (80011c8 <buzzer_init+0x18>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	2200      	movs	r2, #0
 80011c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011c4:	bf00      	nop
 80011c6:	bd80      	pop	{r7, pc}
 80011c8:	20001b10 	.word	0x20001b10

080011cc <HAL_CAN_RxFifo0MsgPendingCallback>:
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b082      	sub	sp, #8
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f003 fec3 	bl	8004f60 <can_ISR>
 80011da:	bf00      	nop
 80011dc:	3708      	adds	r7, #8
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}

080011e2 <HAL_CAN_RxFifo1MsgPendingCallback>:
 80011e2:	b580      	push	{r7, lr}
 80011e4:	b082      	sub	sp, #8
 80011e6:	af00      	add	r7, sp, #0
 80011e8:	6078      	str	r0, [r7, #4]
 80011ea:	6878      	ldr	r0, [r7, #4]
 80011ec:	f003 feb8 	bl	8004f60 <can_ISR>
 80011f0:	bf00      	nop
 80011f2:	3708      	adds	r7, #8
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}

080011f8 <can1_get_msg>:
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b084      	sub	sp, #16
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	60f8      	str	r0, [r7, #12]
 8001200:	60b9      	str	r1, [r7, #8]
 8001202:	607a      	str	r2, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	68ba      	ldr	r2, [r7, #8]
 8001208:	2100      	movs	r1, #0
 800120a:	68f8      	ldr	r0, [r7, #12]
 800120c:	f00a fd25 	bl	800bc5a <HAL_CAN_GetRxMessage>
 8001210:	2300      	movs	r3, #0
 8001212:	4618      	mov	r0, r3
 8001214:	3710      	adds	r7, #16
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}

0800121a <can2_get_msg>:
 800121a:	b580      	push	{r7, lr}
 800121c:	b084      	sub	sp, #16
 800121e:	af00      	add	r7, sp, #0
 8001220:	60f8      	str	r0, [r7, #12]
 8001222:	60b9      	str	r1, [r7, #8]
 8001224:	607a      	str	r2, [r7, #4]
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	68ba      	ldr	r2, [r7, #8]
 800122a:	2101      	movs	r1, #1
 800122c:	68f8      	ldr	r0, [r7, #12]
 800122e:	f00a fd14 	bl	800bc5a <HAL_CAN_GetRxMessage>
 8001232:	2300      	movs	r3, #0
 8001234:	4618      	mov	r0, r3
 8001236:	3710      	adds	r7, #16
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}

0800123c <can_start>:
 800123c:	b580      	push	{r7, lr}
 800123e:	b08e      	sub	sp, #56	@ 0x38
 8001240:	af00      	add	r7, sp, #0
 8001242:	60f8      	str	r0, [r7, #12]
 8001244:	60b9      	str	r1, [r7, #8]
 8001246:	607a      	str	r2, [r7, #4]
 8001248:	f107 0310 	add.w	r3, r7, #16
 800124c:	2228      	movs	r2, #40	@ 0x28
 800124e:	2100      	movs	r1, #0
 8001250:	4618      	mov	r0, r3
 8001252:	f019 fe86 	bl	801af62 <memset>
 8001256:	2301      	movs	r3, #1
 8001258:	633b      	str	r3, [r7, #48]	@ 0x30
 800125a:	2300      	movs	r3, #0
 800125c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800125e:	2301      	movs	r3, #1
 8001260:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001262:	68bb      	ldr	r3, [r7, #8]
 8001264:	0c1b      	lsrs	r3, r3, #16
 8001266:	613b      	str	r3, [r7, #16]
 8001268:	68bb      	ldr	r3, [r7, #8]
 800126a:	b29b      	uxth	r3, r3
 800126c:	617b      	str	r3, [r7, #20]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	0c1b      	lsrs	r3, r3, #16
 8001272:	61bb      	str	r3, [r7, #24]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	b29b      	uxth	r3, r3
 8001278:	61fb      	str	r3, [r7, #28]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	4a18      	ldr	r2, [pc, #96]	@ (80012e0 <can_start+0xa4>)
 8001280:	4293      	cmp	r3, r2
 8001282:	d111      	bne.n	80012a8 <can_start+0x6c>
 8001284:	2300      	movs	r3, #0
 8001286:	627b      	str	r3, [r7, #36]	@ 0x24
 8001288:	2300      	movs	r3, #0
 800128a:	623b      	str	r3, [r7, #32]
 800128c:	f107 0310 	add.w	r3, r7, #16
 8001290:	4619      	mov	r1, r3
 8001292:	68f8      	ldr	r0, [r7, #12]
 8001294:	f00a fae2 	bl	800b85c <HAL_CAN_ConfigFilter>
 8001298:	68f8      	ldr	r0, [r7, #12]
 800129a:	f00a fbbf 	bl	800ba1c <HAL_CAN_Start>
 800129e:	2102      	movs	r1, #2
 80012a0:	68f8      	ldr	r0, [r7, #12]
 80012a2:	f00a fdec 	bl	800be7e <HAL_CAN_ActivateNotification>
 80012a6:	e017      	b.n	80012d8 <can_start+0x9c>
 80012a8:	68fb      	ldr	r3, [r7, #12]
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a0d      	ldr	r2, [pc, #52]	@ (80012e4 <can_start+0xa8>)
 80012ae:	4293      	cmp	r3, r2
 80012b0:	d112      	bne.n	80012d8 <can_start+0x9c>
 80012b2:	2301      	movs	r3, #1
 80012b4:	623b      	str	r3, [r7, #32]
 80012b6:	230e      	movs	r3, #14
 80012b8:	637b      	str	r3, [r7, #52]	@ 0x34
 80012ba:	230e      	movs	r3, #14
 80012bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80012be:	f107 0310 	add.w	r3, r7, #16
 80012c2:	4619      	mov	r1, r3
 80012c4:	68f8      	ldr	r0, [r7, #12]
 80012c6:	f00a fac9 	bl	800b85c <HAL_CAN_ConfigFilter>
 80012ca:	68f8      	ldr	r0, [r7, #12]
 80012cc:	f00a fba6 	bl	800ba1c <HAL_CAN_Start>
 80012d0:	2110      	movs	r1, #16
 80012d2:	68f8      	ldr	r0, [r7, #12]
 80012d4:	f00a fdd3 	bl	800be7e <HAL_CAN_ActivateNotification>
 80012d8:	bf00      	nop
 80012da:	3738      	adds	r7, #56	@ 0x38
 80012dc:	46bd      	mov	sp, r7
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	40006400 	.word	0x40006400
 80012e4:	40006800 	.word	0x40006800

080012e8 <dbus_remote_ISR>:

uint8_t remote_raw_data[REMOTE_DATA_SIZE] = {0};
remote_cmd_t g_remote_cmd = { 0 };


void dbus_remote_ISR(DMA_HandleTypeDef *hdma) {
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b084      	sub	sp, #16
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]
	g_remote_cmd.right_x = (remote_raw_data[0] | remote_raw_data[1] << 8) & 0x07FF;
 80012f0:	4b79      	ldr	r3, [pc, #484]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f2:	781b      	ldrb	r3, [r3, #0]
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	4b78      	ldr	r3, [pc, #480]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f8:	785b      	ldrb	r3, [r3, #1]
 80012fa:	021b      	lsls	r3, r3, #8
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	4313      	orrs	r3, r2
 8001300:	b21b      	sxth	r3, r3
 8001302:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001306:	b21a      	sxth	r2, r3
 8001308:	4b74      	ldr	r3, [pc, #464]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130a:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_x -= JOYSTICK_OFFSET;
 800130c:	4b73      	ldr	r3, [pc, #460]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001312:	b29b      	uxth	r3, r3
 8001314:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001318:	b29b      	uxth	r3, r3
 800131a:	b21a      	sxth	r2, r3
 800131c:	4b6f      	ldr	r3, [pc, #444]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800131e:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_y = (remote_raw_data[1] >> 3 | remote_raw_data[2] << 5) & 0x07FF;
 8001320:	4b6d      	ldr	r3, [pc, #436]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001322:	785b      	ldrb	r3, [r3, #1]
 8001324:	08db      	lsrs	r3, r3, #3
 8001326:	b2db      	uxtb	r3, r3
 8001328:	b21a      	sxth	r2, r3
 800132a:	4b6b      	ldr	r3, [pc, #428]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800132c:	789b      	ldrb	r3, [r3, #2]
 800132e:	015b      	lsls	r3, r3, #5
 8001330:	b21b      	sxth	r3, r3
 8001332:	4313      	orrs	r3, r2
 8001334:	b21b      	sxth	r3, r3
 8001336:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800133a:	b21a      	sxth	r2, r3
 800133c:	4b67      	ldr	r3, [pc, #412]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800133e:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.right_y -= JOYSTICK_OFFSET;
 8001340:	4b66      	ldr	r3, [pc, #408]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001342:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001346:	b29b      	uxth	r3, r3
 8001348:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800134c:	b29b      	uxth	r3, r3
 800134e:	b21a      	sxth	r2, r3
 8001350:	4b62      	ldr	r3, [pc, #392]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001352:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 8001354:	4b60      	ldr	r3, [pc, #384]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001356:	789b      	ldrb	r3, [r3, #2]
 8001358:	099b      	lsrs	r3, r3, #6
 800135a:	b2db      	uxtb	r3, r3
 800135c:	b21a      	sxth	r2, r3
 800135e:	4b5e      	ldr	r3, [pc, #376]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001360:	78db      	ldrb	r3, [r3, #3]
 8001362:	009b      	lsls	r3, r3, #2
 8001364:	b21b      	sxth	r3, r3
 8001366:	4313      	orrs	r3, r2
 8001368:	b21a      	sxth	r2, r3
			| remote_raw_data[4] << 10) & 0x07FF;
 800136a:	4b5b      	ldr	r3, [pc, #364]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800136c:	791b      	ldrb	r3, [r3, #4]
 800136e:	029b      	lsls	r3, r3, #10
 8001370:	b21b      	sxth	r3, r3
 8001372:	4313      	orrs	r3, r2
 8001374:	b21b      	sxth	r3, r3
 8001376:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800137a:	b21a      	sxth	r2, r3
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 800137c:	4b57      	ldr	r3, [pc, #348]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800137e:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_x -= JOYSTICK_OFFSET;
 8001380:	4b56      	ldr	r3, [pc, #344]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001382:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001386:	b29b      	uxth	r3, r3
 8001388:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800138c:	b29b      	uxth	r3, r3
 800138e:	b21a      	sxth	r2, r3
 8001390:	4b52      	ldr	r3, [pc, #328]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001392:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_y = (remote_raw_data[4] >> 1 | remote_raw_data[5] << 7) & 0x07FF;
 8001394:	4b50      	ldr	r3, [pc, #320]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001396:	791b      	ldrb	r3, [r3, #4]
 8001398:	085b      	lsrs	r3, r3, #1
 800139a:	b2db      	uxtb	r3, r3
 800139c:	b21a      	sxth	r2, r3
 800139e:	4b4e      	ldr	r3, [pc, #312]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013a0:	795b      	ldrb	r3, [r3, #5]
 80013a2:	01db      	lsls	r3, r3, #7
 80013a4:	b21b      	sxth	r3, r3
 80013a6:	4313      	orrs	r3, r2
 80013a8:	b21b      	sxth	r3, r3
 80013aa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013ae:	b21a      	sxth	r2, r3
 80013b0:	4b4a      	ldr	r3, [pc, #296]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b2:	80da      	strh	r2, [r3, #6]
	g_remote_cmd.left_y -= JOYSTICK_OFFSET;
 80013b4:	4b49      	ldr	r3, [pc, #292]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80013ba:	b29b      	uxth	r3, r3
 80013bc:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 80013c0:	b29b      	uxth	r3, r3
 80013c2:	b21a      	sxth	r2, r3
 80013c4:	4b45      	ldr	r3, [pc, #276]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013c6:	80da      	strh	r2, [r3, #6]
	//Left switch position
	g_remote_cmd.left_switch = ((remote_raw_data[5] >> 4) & 0x000C) >> 2;
 80013c8:	4b43      	ldr	r3, [pc, #268]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013ca:	795b      	ldrb	r3, [r3, #5]
 80013cc:	091b      	lsrs	r3, r3, #4
 80013ce:	b2db      	uxtb	r3, r3
 80013d0:	109b      	asrs	r3, r3, #2
 80013d2:	b25b      	sxtb	r3, r3
 80013d4:	f003 0303 	and.w	r3, r3, #3
 80013d8:	b25a      	sxtb	r2, r3
 80013da:	4b40      	ldr	r3, [pc, #256]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013dc:	721a      	strb	r2, [r3, #8]
	g_remote_cmd.right_switch = (remote_raw_data[5] >> 4) & 0x0003;
 80013de:	4b3e      	ldr	r3, [pc, #248]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013e0:	795b      	ldrb	r3, [r3, #5]
 80013e2:	091b      	lsrs	r3, r3, #4
 80013e4:	b2db      	uxtb	r3, r3
 80013e6:	b25b      	sxtb	r3, r3
 80013e8:	f003 0303 	and.w	r3, r3, #3
 80013ec:	b25a      	sxtb	r2, r3
 80013ee:	4b3b      	ldr	r3, [pc, #236]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013f0:	725a      	strb	r2, [r3, #9]
	g_remote_cmd.mouse_x = ((int16_t) remote_raw_data[6] | ((int16_t) remote_raw_data[7] << 8));
 80013f2:	4b39      	ldr	r3, [pc, #228]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013f4:	799b      	ldrb	r3, [r3, #6]
 80013f6:	b21a      	sxth	r2, r3
 80013f8:	4b37      	ldr	r3, [pc, #220]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013fa:	79db      	ldrb	r3, [r3, #7]
 80013fc:	021b      	lsls	r3, r3, #8
 80013fe:	b21b      	sxth	r3, r3
 8001400:	4313      	orrs	r3, r2
 8001402:	b21a      	sxth	r2, r3
 8001404:	4b35      	ldr	r3, [pc, #212]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001406:	815a      	strh	r2, [r3, #10]
	g_remote_cmd.mouse_y = ((int16_t) remote_raw_data[8] | ((int16_t) remote_raw_data[9] << 8));
 8001408:	4b33      	ldr	r3, [pc, #204]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800140a:	7a1b      	ldrb	r3, [r3, #8]
 800140c:	b21a      	sxth	r2, r3
 800140e:	4b32      	ldr	r3, [pc, #200]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001410:	7a5b      	ldrb	r3, [r3, #9]
 8001412:	021b      	lsls	r3, r3, #8
 8001414:	b21b      	sxth	r3, r3
 8001416:	4313      	orrs	r3, r2
 8001418:	b21a      	sxth	r2, r3
 800141a:	4b30      	ldr	r3, [pc, #192]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800141c:	819a      	strh	r2, [r3, #12]
	g_remote_cmd.mouse_z = ((int16_t) remote_raw_data[10] | ((int16_t) remote_raw_data[11] << 8));
 800141e:	4b2e      	ldr	r3, [pc, #184]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001420:	7a9b      	ldrb	r3, [r3, #10]
 8001422:	b21a      	sxth	r2, r3
 8001424:	4b2c      	ldr	r3, [pc, #176]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001426:	7adb      	ldrb	r3, [r3, #11]
 8001428:	021b      	lsls	r3, r3, #8
 800142a:	b21b      	sxth	r3, r3
 800142c:	4313      	orrs	r3, r2
 800142e:	b21a      	sxth	r2, r3
 8001430:	4b2a      	ldr	r3, [pc, #168]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001432:	81da      	strh	r2, [r3, #14]
	g_remote_cmd.mouse_hori += g_remote_cmd.mouse_x;
 8001434:	4b29      	ldr	r3, [pc, #164]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001436:	691b      	ldr	r3, [r3, #16]
 8001438:	4a28      	ldr	r2, [pc, #160]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800143a:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800143e:	4413      	add	r3, r2
 8001440:	4a26      	ldr	r2, [pc, #152]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001442:	6113      	str	r3, [r2, #16]
	g_remote_cmd.mouse_vert += g_remote_cmd.mouse_y;
 8001444:	4b25      	ldr	r3, [pc, #148]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	4a24      	ldr	r2, [pc, #144]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800144a:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 800144e:	4413      	add	r3, r2
 8001450:	4a22      	ldr	r2, [pc, #136]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001452:	6153      	str	r3, [r2, #20]
	g_remote_cmd.mouse_left = (remote_raw_data[12]);
 8001454:	4b20      	ldr	r3, [pc, #128]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001456:	7b1b      	ldrb	r3, [r3, #12]
 8001458:	b25a      	sxtb	r2, r3
 800145a:	4b20      	ldr	r3, [pc, #128]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800145c:	761a      	strb	r2, [r3, #24]
	g_remote_cmd.mouse_right = (remote_raw_data[13]);
 800145e:	4b1e      	ldr	r3, [pc, #120]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001460:	7b5b      	ldrb	r3, [r3, #13]
 8001462:	b25a      	sxtb	r2, r3
 8001464:	4b1d      	ldr	r3, [pc, #116]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001466:	765a      	strb	r2, [r3, #25]
	g_remote_cmd.keyboard_keys = (remote_raw_data[14]);
 8001468:	4b1b      	ldr	r3, [pc, #108]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800146a:	7b9b      	ldrb	r3, [r3, #14]
 800146c:	461a      	mov	r2, r3
 800146e:	4b1b      	ldr	r3, [pc, #108]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001470:	835a      	strh	r2, [r3, #26]
	g_remote_cmd.side_dial = ((int16_t) remote_raw_data[16]) | ((int16_t) remote_raw_data[17] << 8);
 8001472:	4b19      	ldr	r3, [pc, #100]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001474:	7c1b      	ldrb	r3, [r3, #16]
 8001476:	b21a      	sxth	r2, r3
 8001478:	4b17      	ldr	r3, [pc, #92]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800147a:	7c5b      	ldrb	r3, [r3, #17]
 800147c:	021b      	lsls	r3, r3, #8
 800147e:	b21b      	sxth	r3, r3
 8001480:	4313      	orrs	r3, r2
 8001482:	b21a      	sxth	r2, r3
 8001484:	4b15      	ldr	r3, [pc, #84]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001486:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.side_dial -= JOYSTICK_OFFSET;
 8001488:	4b14      	ldr	r3, [pc, #80]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800148a:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800148e:	b29b      	uxth	r3, r3
 8001490:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001494:	b29b      	uxth	r3, r3
 8001496:	b21a      	sxth	r2, r3
 8001498:	4b10      	ldr	r3, [pc, #64]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800149a:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.last_time = HAL_GetTick();
 800149c:	f009 fe50 	bl	800b140 <HAL_GetTick>
 80014a0:	4603      	mov	r3, r0
 80014a2:	4a0e      	ldr	r2, [pc, #56]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80014a4:	6213      	str	r3, [r2, #32]

	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 80014a6:	2300      	movs	r3, #0
 80014a8:	60fb      	str	r3, [r7, #12]
	vTaskNotifyGiveFromISR(control_input_task_handle, &xHigherPriorityTaskWoken);
 80014aa:	4b0d      	ldr	r3, [pc, #52]	@ (80014e0 <dbus_remote_ISR+0x1f8>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	f107 020c 	add.w	r2, r7, #12
 80014b2:	4611      	mov	r1, r2
 80014b4:	4618      	mov	r0, r3
 80014b6:	f017 fe25 	bl	8019104 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d007      	beq.n	80014d0 <dbus_remote_ISR+0x1e8>
 80014c0:	4b08      	ldr	r3, [pc, #32]	@ (80014e4 <dbus_remote_ISR+0x1fc>)
 80014c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80014c6:	601a      	str	r2, [r3, #0]
 80014c8:	f3bf 8f4f 	dsb	sy
 80014cc:	f3bf 8f6f 	isb	sy
}
 80014d0:	bf00      	nop
 80014d2:	3710      	adds	r7, #16
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}
 80014d8:	200007f4 	.word	0x200007f4
 80014dc:	20000808 	.word	0x20000808
 80014e0:	20003794 	.word	0x20003794
 80014e4:	e000ed04 	.word	0xe000ed04

080014e8 <dbus_remote_start>:
/**
 * This function starts the circular DMA for receiving on a UART port. It is specifically
 * written for the UART1 port for DBUS interface from the controller.
 */
HAL_StatusTypeDef dbus_remote_start()
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b08c      	sub	sp, #48	@ 0x30
 80014ec:	af00      	add	r7, sp, #0
	uint8_t *pData = remote_raw_data;
 80014ee:	4b4d      	ldr	r3, [pc, #308]	@ (8001624 <dbus_remote_start+0x13c>)
 80014f0:	60fb      	str	r3, [r7, #12]
	UART_HandleTypeDef *huart = &DBUS_UART;
 80014f2:	4b4d      	ldr	r3, [pc, #308]	@ (8001628 <dbus_remote_start+0x140>)
 80014f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t *tmp;

	/* Check that a Rx process is not already ongoing */
	if (huart->RxState == HAL_UART_STATE_READY) {
 80014f6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80014f8:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80014fc:	b2db      	uxtb	r3, r3
 80014fe:	2b20      	cmp	r3, #32
 8001500:	f040 808b 	bne.w	800161a <dbus_remote_start+0x132>
		if ((pData == NULL) || (REMOTE_DATA_SIZE == 0U)) {
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	2b00      	cmp	r3, #0
 8001508:	d101      	bne.n	800150e <dbus_remote_start+0x26>
			return HAL_ERROR;
 800150a:	2301      	movs	r3, #1
 800150c:	e086      	b.n	800161c <dbus_remote_start+0x134>
		}

		/* Process Locked */
		__HAL_LOCK(huart);
 800150e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001510:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001514:	2b01      	cmp	r3, #1
 8001516:	d101      	bne.n	800151c <dbus_remote_start+0x34>
 8001518:	2302      	movs	r3, #2
 800151a:	e07f      	b.n	800161c <dbus_remote_start+0x134>
 800151c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800151e:	2201      	movs	r2, #1
 8001520:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8001524:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001526:	2201      	movs	r2, #1
 8001528:	631a      	str	r2, [r3, #48]	@ 0x30
		huart->pRxBuffPtr = pData;
 800152a:	68fa      	ldr	r2, [r7, #12]
 800152c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800152e:	629a      	str	r2, [r3, #40]	@ 0x28
		huart->RxXferSize = REMOTE_DATA_SIZE;
 8001530:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001532:	2212      	movs	r2, #18
 8001534:	859a      	strh	r2, [r3, #44]	@ 0x2c

		huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001536:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001538:	2200      	movs	r2, #0
 800153a:	641a      	str	r2, [r3, #64]	@ 0x40
		huart->RxState = HAL_UART_STATE_BUSY_RX;
 800153c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800153e:	2222      	movs	r2, #34	@ 0x22
 8001540:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

		/* Set the UART DMA transfer complete callback */
		huart->hdmarx->XferCpltCallback = dbus_remote_ISR;
 8001544:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001546:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001548:	4a38      	ldr	r2, [pc, #224]	@ (800162c <dbus_remote_start+0x144>)
 800154a:	63da      	str	r2, [r3, #60]	@ 0x3c

		/* Set the DMA abort callback */
		huart->hdmarx->XferAbortCallback = NULL;
 800154c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800154e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001550:	2200      	movs	r2, #0
 8001552:	651a      	str	r2, [r3, #80]	@ 0x50

		/* Enable the DMA stream */
		tmp = (uint32_t *)&pData;
 8001554:	f107 030c 	add.w	r3, r7, #12
 8001558:	62bb      	str	r3, [r7, #40]	@ 0x28
		HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, REMOTE_DATA_SIZE);
 800155a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800155c:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800155e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	3304      	adds	r3, #4
 8001564:	4619      	mov	r1, r3
 8001566:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001568:	681a      	ldr	r2, [r3, #0]
 800156a:	2312      	movs	r3, #18
 800156c:	f00b f8bc 	bl	800c6e8 <HAL_DMA_Start_IT>

		/* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
		__HAL_UART_CLEAR_OREFLAG(huart);
 8001570:	2300      	movs	r3, #0
 8001572:	60bb      	str	r3, [r7, #8]
 8001574:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	60bb      	str	r3, [r7, #8]
 800157c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	685b      	ldr	r3, [r3, #4]
 8001582:	60bb      	str	r3, [r7, #8]
 8001584:	68bb      	ldr	r3, [r7, #8]

		/* Process Unlocked */
		__HAL_UNLOCK(huart);
 8001586:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001588:	2200      	movs	r2, #0
 800158a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		/* Enable the UART Parity Error Interrupt */
		SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800158e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	68da      	ldr	r2, [r3, #12]
 8001594:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800159c:	60da      	str	r2, [r3, #12]

		/* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
		SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800159e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	695a      	ldr	r2, [r3, #20]
 80015a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	f042 0201 	orr.w	r2, r2, #1
 80015ac:	615a      	str	r2, [r3, #20]

		/* Enable the DMA transfer for the receiver request by setting the DMAR bit
		in the UART CR3 register */
		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80015ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	695a      	ldr	r2, [r3, #20]
 80015b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80015bc:	615a      	str	r2, [r3, #20]

		if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80015be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015c2:	2b01      	cmp	r3, #1
 80015c4:	d125      	bne.n	8001612 <dbus_remote_start+0x12a>
		{
			__HAL_UART_CLEAR_IDLEFLAG(huart);
 80015c6:	2300      	movs	r3, #0
 80015c8:	607b      	str	r3, [r7, #4]
 80015ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	607b      	str	r3, [r7, #4]
 80015d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	685b      	ldr	r3, [r3, #4]
 80015d8:	607b      	str	r3, [r7, #4]
 80015da:	687b      	ldr	r3, [r7, #4]
			ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80015dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	330c      	adds	r3, #12
 80015e2:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80015e4:	697b      	ldr	r3, [r7, #20]
 80015e6:	e853 3f00 	ldrex	r3, [r3]
 80015ea:	613b      	str	r3, [r7, #16]
   return(result);
 80015ec:	693b      	ldr	r3, [r7, #16]
 80015ee:	f043 0310 	orr.w	r3, r3, #16
 80015f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015f4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	330c      	adds	r3, #12
 80015fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015fc:	623a      	str	r2, [r7, #32]
 80015fe:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001600:	69f9      	ldr	r1, [r7, #28]
 8001602:	6a3a      	ldr	r2, [r7, #32]
 8001604:	e841 2300 	strex	r3, r2, [r1]
 8001608:	61bb      	str	r3, [r7, #24]
   return(result);
 800160a:	69bb      	ldr	r3, [r7, #24]
 800160c:	2b00      	cmp	r3, #0
 800160e:	d1e5      	bne.n	80015dc <dbus_remote_start+0xf4>
 8001610:	e001      	b.n	8001616 <dbus_remote_start+0x12e>
		{
			/* In case of errors already pending when reception is started,
			   Interrupts may have already been raised and lead to reception abortion.
			   (Overrun error for instance).
			   In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
			return HAL_ERROR;
 8001612:	2301      	movs	r3, #1
 8001614:	e002      	b.n	800161c <dbus_remote_start+0x134>
		}
		return HAL_OK;
 8001616:	2300      	movs	r3, #0
 8001618:	e000      	b.n	800161c <dbus_remote_start+0x134>
	} else {
		return HAL_BUSY;
 800161a:	2302      	movs	r3, #2
	}
}
 800161c:	4618      	mov	r0, r3
 800161e:	3730      	adds	r7, #48	@ 0x30
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	200007f4 	.word	0x200007f4
 8001628:	20001c2c 	.word	0x20001c2c
 800162c:	080012e9 	.word	0x080012e9

08001630 <laser_on>:
 8001630:	b580      	push	{r7, lr}
 8001632:	af00      	add	r7, sp, #0
 8001634:	2200      	movs	r2, #0
 8001636:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800163a:	4802      	ldr	r0, [pc, #8]	@ (8001644 <laser_on+0x14>)
 800163c:	f00b fd50 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001640:	bf00      	nop
 8001642:	bd80      	pop	{r7, pc}
 8001644:	40020800 	.word	0x40020800

08001648 <laser_off>:
 8001648:	b580      	push	{r7, lr}
 800164a:	af00      	add	r7, sp, #0
 800164c:	2200      	movs	r2, #0
 800164e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001652:	4802      	ldr	r0, [pc, #8]	@ (800165c <laser_off+0x14>)
 8001654:	f00b fd44 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001658:	bf00      	nop
 800165a:	bd80      	pop	{r7, pc}
 800165c:	40020800 	.word	0x40020800

08001660 <hall_disable>:
void hall_enable(){
	hall_state = HALL_ON;
	  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
}

void hall_disable(){
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
	hall_state = HALL_OFF;
 8001664:	4b03      	ldr	r3, [pc, #12]	@ (8001674 <hall_disable+0x14>)
 8001666:	2201      	movs	r2, #1
 8001668:	701a      	strb	r2, [r3, #0]
	HAL_NVIC_DisableIRQ(EXTI15_10_IRQn);
 800166a:	2028      	movs	r0, #40	@ 0x28
 800166c:	f00a ff80 	bl	800c570 <HAL_NVIC_DisableIRQ>
}
 8001670:	bf00      	nop
 8001672:	bd80      	pop	{r7, pc}
 8001674:	20000003 	.word	0x20000003

08001678 <hall_int>:


void hall_int(){
 8001678:	b580      	push	{r7, lr}
 800167a:	b082      	sub	sp, #8
 800167c:	af00      	add	r7, sp, #0
	static int32_t prev_tick;
	uint8_t curr_state = (GPIOE->IDR & GPIO_PIN_11) ? 1 : 0;
 800167e:	4b21      	ldr	r3, [pc, #132]	@ (8001704 <hall_int+0x8c>)
 8001680:	691b      	ldr	r3, [r3, #16]
 8001682:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001686:	2b00      	cmp	r3, #0
 8001688:	bf14      	ite	ne
 800168a:	2301      	movne	r3, #1
 800168c:	2300      	moveq	r3, #0
 800168e:	b2db      	uxtb	r3, r3
 8001690:	71fb      	strb	r3, [r7, #7]
	if (curr_state & GPIO_PIN_11){
 8001692:	79fb      	ldrb	r3, [r7, #7]
 8001694:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001698:	2b00      	cmp	r3, #0
 800169a:	d12e      	bne.n	80016fa <hall_int+0x82>
		//current state and previous state are the same, do nothing
		return;
	}
	if (hall_state == HALL_ON){
 800169c:	4b1a      	ldr	r3, [pc, #104]	@ (8001708 <hall_int+0x90>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d127      	bne.n	80016f4 <hall_int+0x7c>
	//assume hall sensor has changed state
		switch (curr_state){
 80016a4:	79fb      	ldrb	r3, [r7, #7]
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d009      	beq.n	80016be <hall_int+0x46>
 80016aa:	2b01      	cmp	r3, #1
 80016ac:	d11b      	bne.n	80016e6 <hall_int+0x6e>
		case HALL_OFF:
			//hall went from on to off
			//motor just brushed past
			prev_tick = g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks;
 80016ae:	4b17      	ldr	r3, [pc, #92]	@ (800170c <hall_int+0x94>)
 80016b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016b4:	f8d3 3268 	ldr.w	r3, [r3, #616]	@ 0x268
 80016b8:	4a15      	ldr	r2, [pc, #84]	@ (8001710 <hall_int+0x98>)
 80016ba:	6013      	str	r3, [r2, #0]

			break;
 80016bc:	e016      	b.n	80016ec <hall_int+0x74>
		case HALL_ON:
			//hall went from off to on
			//yaw motor just let goo
			g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks = (g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks-prev_tick)/2 ;
 80016be:	4b13      	ldr	r3, [pc, #76]	@ (800170c <hall_int+0x94>)
 80016c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016c4:	f8d3 2268 	ldr.w	r2, [r3, #616]	@ 0x268
 80016c8:	4b11      	ldr	r3, [pc, #68]	@ (8001710 <hall_int+0x98>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	1ad3      	subs	r3, r2, r3
 80016ce:	0fda      	lsrs	r2, r3, #31
 80016d0:	4413      	add	r3, r2
 80016d2:	105b      	asrs	r3, r3, #1
 80016d4:	461a      	mov	r2, r3
 80016d6:	4b0d      	ldr	r3, [pc, #52]	@ (800170c <hall_int+0x94>)
 80016d8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016dc:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
			//sensor is done, turn it off
			hall_disable();
 80016e0:	f7ff ffbe 	bl	8001660 <hall_disable>
			break;
 80016e4:	e002      	b.n	80016ec <hall_int+0x74>

		default:
			prev_state = 1;
 80016e6:	4b0b      	ldr	r3, [pc, #44]	@ (8001714 <hall_int+0x9c>)
 80016e8:	2201      	movs	r2, #1
 80016ea:	701a      	strb	r2, [r3, #0]
		}
		prev_state = curr_state;
 80016ec:	4a09      	ldr	r2, [pc, #36]	@ (8001714 <hall_int+0x9c>)
 80016ee:	79fb      	ldrb	r3, [r7, #7]
 80016f0:	7013      	strb	r3, [r2, #0]
		return;
 80016f2:	e003      	b.n	80016fc <hall_int+0x84>
	} else{
		hall_disable();
 80016f4:	f7ff ffb4 	bl	8001660 <hall_disable>
		return;
 80016f8:	e000      	b.n	80016fc <hall_int+0x84>
		return;
 80016fa:	bf00      	nop
	}
}
 80016fc:	3708      	adds	r7, #8
 80016fe:	46bd      	mov	sp, r7
 8001700:	bd80      	pop	{r7, pc}
 8001702:	bf00      	nop
 8001704:	40021000 	.word	0x40021000
 8001708:	20000003 	.word	0x20000003
 800170c:	20001e48 	.word	0x20001e48
 8001710:	2000082c 	.word	0x2000082c
 8001714:	20000002 	.word	0x20000002

08001718 <__NVIC_SystemReset>:
 8001718:	b480      	push	{r7}
 800171a:	af00      	add	r7, sp, #0
 800171c:	f3bf 8f4f 	dsb	sy
 8001720:	bf00      	nop
 8001722:	4b06      	ldr	r3, [pc, #24]	@ (800173c <__NVIC_SystemReset+0x24>)
 8001724:	68db      	ldr	r3, [r3, #12]
 8001726:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800172a:	4904      	ldr	r1, [pc, #16]	@ (800173c <__NVIC_SystemReset+0x24>)
 800172c:	4b04      	ldr	r3, [pc, #16]	@ (8001740 <__NVIC_SystemReset+0x28>)
 800172e:	4313      	orrs	r3, r2
 8001730:	60cb      	str	r3, [r1, #12]
 8001732:	f3bf 8f4f 	dsb	sy
 8001736:	bf00      	nop
 8001738:	bf00      	nop
 800173a:	e7fd      	b.n	8001738 <__NVIC_SystemReset+0x20>
 800173c:	e000ed00 	.word	0xe000ed00
 8001740:	05fa0004 	.word	0x05fa0004

08001744 <gyro_write_byte>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b086      	sub	sp, #24
 8001748:	af02      	add	r7, sp, #8
 800174a:	4603      	mov	r3, r0
 800174c:	460a      	mov	r2, r1
 800174e:	71fb      	strb	r3, [r7, #7]
 8001750:	4613      	mov	r3, r2
 8001752:	71bb      	strb	r3, [r7, #6]
 8001754:	2200      	movs	r2, #0
 8001756:	2101      	movs	r1, #1
 8001758:	4811      	ldr	r0, [pc, #68]	@ (80017a0 <gyro_write_byte+0x5c>)
 800175a:	f00b fcc1 	bl	800d0e0 <HAL_GPIO_WritePin>
 800175e:	79fb      	ldrb	r3, [r7, #7]
 8001760:	73fb      	strb	r3, [r7, #15]
 8001762:	f107 020e 	add.w	r2, r7, #14
 8001766:	f107 010f 	add.w	r1, r7, #15
 800176a:	2364      	movs	r3, #100	@ 0x64
 800176c:	9300      	str	r3, [sp, #0]
 800176e:	2301      	movs	r3, #1
 8001770:	480c      	ldr	r0, [pc, #48]	@ (80017a4 <gyro_write_byte+0x60>)
 8001772:	f00f fb3d 	bl	8010df0 <HAL_SPI_TransmitReceive>
 8001776:	79bb      	ldrb	r3, [r7, #6]
 8001778:	73fb      	strb	r3, [r7, #15]
 800177a:	f107 020e 	add.w	r2, r7, #14
 800177e:	f107 010f 	add.w	r1, r7, #15
 8001782:	2364      	movs	r3, #100	@ 0x64
 8001784:	9300      	str	r3, [sp, #0]
 8001786:	2301      	movs	r3, #1
 8001788:	4806      	ldr	r0, [pc, #24]	@ (80017a4 <gyro_write_byte+0x60>)
 800178a:	f00f fb31 	bl	8010df0 <HAL_SPI_TransmitReceive>
 800178e:	2201      	movs	r2, #1
 8001790:	2101      	movs	r1, #1
 8001792:	4803      	ldr	r0, [pc, #12]	@ (80017a0 <gyro_write_byte+0x5c>)
 8001794:	f00b fca4 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001798:	bf00      	nop
 800179a:	3710      	adds	r7, #16
 800179c:	46bd      	mov	sp, r7
 800179e:	bd80      	pop	{r7, pc}
 80017a0:	40020400 	.word	0x40020400
 80017a4:	20001964 	.word	0x20001964

080017a8 <gyro_read_byte>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b086      	sub	sp, #24
 80017ac:	af02      	add	r7, sp, #8
 80017ae:	4603      	mov	r3, r0
 80017b0:	71fb      	strb	r3, [r7, #7]
 80017b2:	2200      	movs	r2, #0
 80017b4:	2101      	movs	r1, #1
 80017b6:	4811      	ldr	r0, [pc, #68]	@ (80017fc <gyro_read_byte+0x54>)
 80017b8:	f00b fc92 	bl	800d0e0 <HAL_GPIO_WritePin>
 80017bc:	79fb      	ldrb	r3, [r7, #7]
 80017be:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80017c2:	b2db      	uxtb	r3, r3
 80017c4:	73bb      	strb	r3, [r7, #14]
 80017c6:	f107 020f 	add.w	r2, r7, #15
 80017ca:	f107 010e 	add.w	r1, r7, #14
 80017ce:	2364      	movs	r3, #100	@ 0x64
 80017d0:	9300      	str	r3, [sp, #0]
 80017d2:	2301      	movs	r3, #1
 80017d4:	480a      	ldr	r0, [pc, #40]	@ (8001800 <gyro_read_byte+0x58>)
 80017d6:	f00f fb0b 	bl	8010df0 <HAL_SPI_TransmitReceive>
 80017da:	f107 010f 	add.w	r1, r7, #15
 80017de:	2364      	movs	r3, #100	@ 0x64
 80017e0:	2201      	movs	r2, #1
 80017e2:	4807      	ldr	r0, [pc, #28]	@ (8001800 <gyro_read_byte+0x58>)
 80017e4:	f00f f9f3 	bl	8010bce <HAL_SPI_Receive>
 80017e8:	2201      	movs	r2, #1
 80017ea:	2101      	movs	r1, #1
 80017ec:	4803      	ldr	r0, [pc, #12]	@ (80017fc <gyro_read_byte+0x54>)
 80017ee:	f00b fc77 	bl	800d0e0 <HAL_GPIO_WritePin>
 80017f2:	7bfb      	ldrb	r3, [r7, #15]
 80017f4:	4618      	mov	r0, r3
 80017f6:	3710      	adds	r7, #16
 80017f8:	46bd      	mov	sp, r7
 80017fa:	bd80      	pop	{r7, pc}
 80017fc:	40020400 	.word	0x40020400
 8001800:	20001964 	.word	0x20001964

08001804 <gyro_read_bytes>:
 8001804:	b580      	push	{r7, lr}
 8001806:	b086      	sub	sp, #24
 8001808:	af02      	add	r7, sp, #8
 800180a:	4603      	mov	r3, r0
 800180c:	6039      	str	r1, [r7, #0]
 800180e:	71fb      	strb	r3, [r7, #7]
 8001810:	4613      	mov	r3, r2
 8001812:	71bb      	strb	r3, [r7, #6]
 8001814:	2200      	movs	r2, #0
 8001816:	2101      	movs	r1, #1
 8001818:	4811      	ldr	r0, [pc, #68]	@ (8001860 <gyro_read_bytes+0x5c>)
 800181a:	f00b fc61 	bl	800d0e0 <HAL_GPIO_WritePin>
 800181e:	79fb      	ldrb	r3, [r7, #7]
 8001820:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001824:	b2db      	uxtb	r3, r3
 8001826:	73fb      	strb	r3, [r7, #15]
 8001828:	f107 020e 	add.w	r2, r7, #14
 800182c:	f107 010f 	add.w	r1, r7, #15
 8001830:	2364      	movs	r3, #100	@ 0x64
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	2301      	movs	r3, #1
 8001836:	480b      	ldr	r0, [pc, #44]	@ (8001864 <gyro_read_bytes+0x60>)
 8001838:	f00f fada 	bl	8010df0 <HAL_SPI_TransmitReceive>
 800183c:	79bb      	ldrb	r3, [r7, #6]
 800183e:	b29a      	uxth	r2, r3
 8001840:	2364      	movs	r3, #100	@ 0x64
 8001842:	6839      	ldr	r1, [r7, #0]
 8001844:	4807      	ldr	r0, [pc, #28]	@ (8001864 <gyro_read_bytes+0x60>)
 8001846:	f00f f9c2 	bl	8010bce <HAL_SPI_Receive>
 800184a:	2201      	movs	r2, #1
 800184c:	2101      	movs	r1, #1
 800184e:	4804      	ldr	r0, [pc, #16]	@ (8001860 <gyro_read_bytes+0x5c>)
 8001850:	f00b fc46 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001854:	2300      	movs	r3, #0
 8001856:	4618      	mov	r0, r3
 8001858:	3710      	adds	r7, #16
 800185a:	46bd      	mov	sp, r7
 800185c:	bd80      	pop	{r7, pc}
 800185e:	bf00      	nop
 8001860:	40020400 	.word	0x40020400
 8001864:	20001964 	.word	0x20001964

08001868 <accel_write_byte>:
 8001868:	b580      	push	{r7, lr}
 800186a:	b086      	sub	sp, #24
 800186c:	af02      	add	r7, sp, #8
 800186e:	4603      	mov	r3, r0
 8001870:	460a      	mov	r2, r1
 8001872:	71fb      	strb	r3, [r7, #7]
 8001874:	4613      	mov	r3, r2
 8001876:	71bb      	strb	r3, [r7, #6]
 8001878:	2200      	movs	r2, #0
 800187a:	2110      	movs	r1, #16
 800187c:	4811      	ldr	r0, [pc, #68]	@ (80018c4 <accel_write_byte+0x5c>)
 800187e:	f00b fc2f 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001882:	79fb      	ldrb	r3, [r7, #7]
 8001884:	73fb      	strb	r3, [r7, #15]
 8001886:	f107 020e 	add.w	r2, r7, #14
 800188a:	f107 010f 	add.w	r1, r7, #15
 800188e:	2364      	movs	r3, #100	@ 0x64
 8001890:	9300      	str	r3, [sp, #0]
 8001892:	2301      	movs	r3, #1
 8001894:	480c      	ldr	r0, [pc, #48]	@ (80018c8 <accel_write_byte+0x60>)
 8001896:	f00f faab 	bl	8010df0 <HAL_SPI_TransmitReceive>
 800189a:	79bb      	ldrb	r3, [r7, #6]
 800189c:	73fb      	strb	r3, [r7, #15]
 800189e:	f107 020e 	add.w	r2, r7, #14
 80018a2:	f107 010f 	add.w	r1, r7, #15
 80018a6:	2364      	movs	r3, #100	@ 0x64
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	2301      	movs	r3, #1
 80018ac:	4806      	ldr	r0, [pc, #24]	@ (80018c8 <accel_write_byte+0x60>)
 80018ae:	f00f fa9f 	bl	8010df0 <HAL_SPI_TransmitReceive>
 80018b2:	2201      	movs	r2, #1
 80018b4:	2110      	movs	r1, #16
 80018b6:	4803      	ldr	r0, [pc, #12]	@ (80018c4 <accel_write_byte+0x5c>)
 80018b8:	f00b fc12 	bl	800d0e0 <HAL_GPIO_WritePin>
 80018bc:	bf00      	nop
 80018be:	3710      	adds	r7, #16
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bd80      	pop	{r7, pc}
 80018c4:	40020000 	.word	0x40020000
 80018c8:	20001964 	.word	0x20001964

080018cc <accel_read_byte>:
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b086      	sub	sp, #24
 80018d0:	af02      	add	r7, sp, #8
 80018d2:	4603      	mov	r3, r0
 80018d4:	71fb      	strb	r3, [r7, #7]
 80018d6:	2200      	movs	r2, #0
 80018d8:	2110      	movs	r1, #16
 80018da:	4816      	ldr	r0, [pc, #88]	@ (8001934 <accel_read_byte+0x68>)
 80018dc:	f00b fc00 	bl	800d0e0 <HAL_GPIO_WritePin>
 80018e0:	79fb      	ldrb	r3, [r7, #7]
 80018e2:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80018e6:	b2db      	uxtb	r3, r3
 80018e8:	73fb      	strb	r3, [r7, #15]
 80018ea:	f107 020e 	add.w	r2, r7, #14
 80018ee:	f107 010f 	add.w	r1, r7, #15
 80018f2:	2364      	movs	r3, #100	@ 0x64
 80018f4:	9300      	str	r3, [sp, #0]
 80018f6:	2301      	movs	r3, #1
 80018f8:	480f      	ldr	r0, [pc, #60]	@ (8001938 <accel_read_byte+0x6c>)
 80018fa:	f00f fa79 	bl	8010df0 <HAL_SPI_TransmitReceive>
 80018fe:	2355      	movs	r3, #85	@ 0x55
 8001900:	73fb      	strb	r3, [r7, #15]
 8001902:	f107 010e 	add.w	r1, r7, #14
 8001906:	2364      	movs	r3, #100	@ 0x64
 8001908:	2201      	movs	r2, #1
 800190a:	480b      	ldr	r0, [pc, #44]	@ (8001938 <accel_read_byte+0x6c>)
 800190c:	f00f f95f 	bl	8010bce <HAL_SPI_Receive>
 8001910:	f107 010e 	add.w	r1, r7, #14
 8001914:	2364      	movs	r3, #100	@ 0x64
 8001916:	2201      	movs	r2, #1
 8001918:	4807      	ldr	r0, [pc, #28]	@ (8001938 <accel_read_byte+0x6c>)
 800191a:	f00f f958 	bl	8010bce <HAL_SPI_Receive>
 800191e:	2201      	movs	r2, #1
 8001920:	2110      	movs	r1, #16
 8001922:	4804      	ldr	r0, [pc, #16]	@ (8001934 <accel_read_byte+0x68>)
 8001924:	f00b fbdc 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001928:	7bbb      	ldrb	r3, [r7, #14]
 800192a:	4618      	mov	r0, r3
 800192c:	3710      	adds	r7, #16
 800192e:	46bd      	mov	sp, r7
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	40020000 	.word	0x40020000
 8001938:	20001964 	.word	0x20001964

0800193c <accel_read_bytes>:
 800193c:	b580      	push	{r7, lr}
 800193e:	b086      	sub	sp, #24
 8001940:	af02      	add	r7, sp, #8
 8001942:	4603      	mov	r3, r0
 8001944:	6039      	str	r1, [r7, #0]
 8001946:	71fb      	strb	r3, [r7, #7]
 8001948:	4613      	mov	r3, r2
 800194a:	71bb      	strb	r3, [r7, #6]
 800194c:	2200      	movs	r2, #0
 800194e:	2110      	movs	r1, #16
 8001950:	4814      	ldr	r0, [pc, #80]	@ (80019a4 <accel_read_bytes+0x68>)
 8001952:	f00b fbc5 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001956:	79fb      	ldrb	r3, [r7, #7]
 8001958:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800195c:	b2db      	uxtb	r3, r3
 800195e:	73fb      	strb	r3, [r7, #15]
 8001960:	f107 020e 	add.w	r2, r7, #14
 8001964:	f107 010f 	add.w	r1, r7, #15
 8001968:	2364      	movs	r3, #100	@ 0x64
 800196a:	9300      	str	r3, [sp, #0]
 800196c:	2301      	movs	r3, #1
 800196e:	480e      	ldr	r0, [pc, #56]	@ (80019a8 <accel_read_bytes+0x6c>)
 8001970:	f00f fa3e 	bl	8010df0 <HAL_SPI_TransmitReceive>
 8001974:	f107 010e 	add.w	r1, r7, #14
 8001978:	2364      	movs	r3, #100	@ 0x64
 800197a:	2201      	movs	r2, #1
 800197c:	480a      	ldr	r0, [pc, #40]	@ (80019a8 <accel_read_bytes+0x6c>)
 800197e:	f00f f926 	bl	8010bce <HAL_SPI_Receive>
 8001982:	79bb      	ldrb	r3, [r7, #6]
 8001984:	b29a      	uxth	r2, r3
 8001986:	2364      	movs	r3, #100	@ 0x64
 8001988:	6839      	ldr	r1, [r7, #0]
 800198a:	4807      	ldr	r0, [pc, #28]	@ (80019a8 <accel_read_bytes+0x6c>)
 800198c:	f00f f91f 	bl	8010bce <HAL_SPI_Receive>
 8001990:	2201      	movs	r2, #1
 8001992:	2110      	movs	r1, #16
 8001994:	4803      	ldr	r0, [pc, #12]	@ (80019a4 <accel_read_bytes+0x68>)
 8001996:	f00b fba3 	bl	800d0e0 <HAL_GPIO_WritePin>
 800199a:	2300      	movs	r3, #0
 800199c:	4618      	mov	r0, r3
 800199e:	3710      	adds	r7, #16
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bd80      	pop	{r7, pc}
 80019a4:	40020000 	.word	0x40020000
 80019a8:	20001964 	.word	0x20001964

080019ac <gyro_init>:
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b082      	sub	sp, #8
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	21b6      	movs	r1, #182	@ 0xb6
 80019b4:	2014      	movs	r0, #20
 80019b6:	f7ff fec5 	bl	8001744 <gyro_write_byte>
 80019ba:	200a      	movs	r0, #10
 80019bc:	f009 fbcc 	bl	800b158 <HAL_Delay>
 80019c0:	2100      	movs	r1, #0
 80019c2:	2011      	movs	r0, #17
 80019c4:	f7ff febe 	bl	8001744 <gyro_write_byte>
 80019c8:	2002      	movs	r0, #2
 80019ca:	f009 fbc5 	bl	800b158 <HAL_Delay>
 80019ce:	2000      	movs	r0, #0
 80019d0:	f7ff feea 	bl	80017a8 <gyro_read_byte>
 80019d4:	4603      	mov	r3, r0
 80019d6:	80fb      	strh	r3, [r7, #6]
 80019d8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80019dc:	2b0f      	cmp	r3, #15
 80019de:	d001      	beq.n	80019e4 <gyro_init+0x38>
 80019e0:	f7ff fe9a 	bl	8001718 <__NVIC_SystemReset>
 80019e4:	2002      	movs	r0, #2
 80019e6:	f009 fbb7 	bl	800b158 <HAL_Delay>
 80019ea:	2102      	movs	r1, #2
 80019ec:	200f      	movs	r0, #15
 80019ee:	f7ff fea9 	bl	8001744 <gyro_write_byte>
 80019f2:	2002      	movs	r0, #2
 80019f4:	f009 fbb0 	bl	800b158 <HAL_Delay>
 80019f8:	2181      	movs	r1, #129	@ 0x81
 80019fa:	2010      	movs	r0, #16
 80019fc:	f7ff fea2 	bl	8001744 <gyro_write_byte>
 8001a00:	2002      	movs	r0, #2
 8001a02:	f009 fba9 	bl	800b158 <HAL_Delay>
 8001a06:	2101      	movs	r1, #1
 8001a08:	2016      	movs	r0, #22
 8001a0a:	f7ff fe9b 	bl	8001744 <gyro_write_byte>
 8001a0e:	2002      	movs	r0, #2
 8001a10:	f009 fba2 	bl	800b158 <HAL_Delay>
 8001a14:	2101      	movs	r1, #1
 8001a16:	2018      	movs	r0, #24
 8001a18:	f7ff fe94 	bl	8001744 <gyro_write_byte>
 8001a1c:	2002      	movs	r0, #2
 8001a1e:	f009 fb9b 	bl	800b158 <HAL_Delay>
 8001a22:	2300      	movs	r3, #0
 8001a24:	4618      	mov	r0, r3
 8001a26:	3708      	adds	r7, #8
 8001a28:	46bd      	mov	sp, r7
 8001a2a:	bd80      	pop	{r7, pc}

08001a2c <accel_init>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b082      	sub	sp, #8
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	2000      	movs	r0, #0
 8001a34:	f7ff ff4a 	bl	80018cc <accel_read_byte>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	71fb      	strb	r3, [r7, #7]
 8001a3c:	2002      	movs	r0, #2
 8001a3e:	f009 fb8b 	bl	800b158 <HAL_Delay>
 8001a42:	2000      	movs	r0, #0
 8001a44:	f7ff ff42 	bl	80018cc <accel_read_byte>
 8001a48:	4603      	mov	r3, r0
 8001a4a:	71fb      	strb	r3, [r7, #7]
 8001a4c:	2002      	movs	r0, #2
 8001a4e:	f009 fb83 	bl	800b158 <HAL_Delay>
 8001a52:	21b6      	movs	r1, #182	@ 0xb6
 8001a54:	207e      	movs	r0, #126	@ 0x7e
 8001a56:	f7ff ff07 	bl	8001868 <accel_write_byte>
 8001a5a:	200a      	movs	r0, #10
 8001a5c:	f009 fb7c 	bl	800b158 <HAL_Delay>
 8001a60:	2000      	movs	r0, #0
 8001a62:	f7ff ff33 	bl	80018cc <accel_read_byte>
 8001a66:	4603      	mov	r3, r0
 8001a68:	71fb      	strb	r3, [r7, #7]
 8001a6a:	2002      	movs	r0, #2
 8001a6c:	f009 fb74 	bl	800b158 <HAL_Delay>
 8001a70:	2000      	movs	r0, #0
 8001a72:	f7ff ff2b 	bl	80018cc <accel_read_byte>
 8001a76:	4603      	mov	r3, r0
 8001a78:	71fb      	strb	r3, [r7, #7]
 8001a7a:	2002      	movs	r0, #2
 8001a7c:	f009 fb6c 	bl	800b158 <HAL_Delay>
 8001a80:	79fb      	ldrb	r3, [r7, #7]
 8001a82:	2b1e      	cmp	r3, #30
 8001a84:	d001      	beq.n	8001a8a <accel_init+0x5e>
 8001a86:	2301      	movs	r3, #1
 8001a88:	e023      	b.n	8001ad2 <accel_init+0xa6>
 8001a8a:	2104      	movs	r1, #4
 8001a8c:	207d      	movs	r0, #125	@ 0x7d
 8001a8e:	f7ff feeb 	bl	8001868 <accel_write_byte>
 8001a92:	2002      	movs	r0, #2
 8001a94:	f009 fb60 	bl	800b158 <HAL_Delay>
 8001a98:	2100      	movs	r1, #0
 8001a9a:	207c      	movs	r0, #124	@ 0x7c
 8001a9c:	f7ff fee4 	bl	8001868 <accel_write_byte>
 8001aa0:	2002      	movs	r0, #2
 8001aa2:	f009 fb59 	bl	800b158 <HAL_Delay>
 8001aa6:	21a9      	movs	r1, #169	@ 0xa9
 8001aa8:	2040      	movs	r0, #64	@ 0x40
 8001aaa:	f7ff fedd 	bl	8001868 <accel_write_byte>
 8001aae:	2002      	movs	r0, #2
 8001ab0:	f009 fb52 	bl	800b158 <HAL_Delay>
 8001ab4:	2101      	movs	r1, #1
 8001ab6:	2041      	movs	r0, #65	@ 0x41
 8001ab8:	f7ff fed6 	bl	8001868 <accel_write_byte>
 8001abc:	2002      	movs	r0, #2
 8001abe:	f009 fb4b 	bl	800b158 <HAL_Delay>
 8001ac2:	2108      	movs	r1, #8
 8001ac4:	2053      	movs	r0, #83	@ 0x53
 8001ac6:	f7ff fecf 	bl	8001868 <accel_write_byte>
 8001aca:	2002      	movs	r0, #2
 8001acc:	f009 fb44 	bl	800b158 <HAL_Delay>
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	3708      	adds	r7, #8
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	bd80      	pop	{r7, pc}
	...

08001adc <mag_read_single_reg>:
 8001adc:	b580      	push	{r7, lr}
 8001ade:	b088      	sub	sp, #32
 8001ae0:	af04      	add	r7, sp, #16
 8001ae2:	4603      	mov	r3, r0
 8001ae4:	71fb      	strb	r3, [r7, #7]
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	73fb      	strb	r3, [r7, #15]
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	b29a      	uxth	r2, r3
 8001aee:	2305      	movs	r3, #5
 8001af0:	9302      	str	r3, [sp, #8]
 8001af2:	2301      	movs	r3, #1
 8001af4:	9301      	str	r3, [sp, #4]
 8001af6:	f107 030f 	add.w	r3, r7, #15
 8001afa:	9300      	str	r3, [sp, #0]
 8001afc:	2301      	movs	r3, #1
 8001afe:	211c      	movs	r1, #28
 8001b00:	4803      	ldr	r0, [pc, #12]	@ (8001b10 <mag_read_single_reg+0x34>)
 8001b02:	f00b fd5d 	bl	800d5c0 <HAL_I2C_Mem_Read>
 8001b06:	7bfb      	ldrb	r3, [r7, #15]
 8001b08:	4618      	mov	r0, r3
 8001b0a:	3710      	adds	r7, #16
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	bd80      	pop	{r7, pc}
 8001b10:	20001840 	.word	0x20001840

08001b14 <mag_write_single_reg>:
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b086      	sub	sp, #24
 8001b18:	af04      	add	r7, sp, #16
 8001b1a:	4603      	mov	r3, r0
 8001b1c:	460a      	mov	r2, r1
 8001b1e:	71fb      	strb	r3, [r7, #7]
 8001b20:	4613      	mov	r3, r2
 8001b22:	71bb      	strb	r3, [r7, #6]
 8001b24:	79fb      	ldrb	r3, [r7, #7]
 8001b26:	b29a      	uxth	r2, r3
 8001b28:	2305      	movs	r3, #5
 8001b2a:	9302      	str	r3, [sp, #8]
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	9301      	str	r3, [sp, #4]
 8001b30:	1dbb      	adds	r3, r7, #6
 8001b32:	9300      	str	r3, [sp, #0]
 8001b34:	2301      	movs	r3, #1
 8001b36:	211c      	movs	r1, #28
 8001b38:	4803      	ldr	r0, [pc, #12]	@ (8001b48 <mag_write_single_reg+0x34>)
 8001b3a:	f00b fc47 	bl	800d3cc <HAL_I2C_Mem_Write>
 8001b3e:	bf00      	nop
 8001b40:	3708      	adds	r7, #8
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	20001840 	.word	0x20001840

08001b4c <mag_read_multi_reg_dma>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b084      	sub	sp, #16
 8001b50:	af02      	add	r7, sp, #8
 8001b52:	4603      	mov	r3, r0
 8001b54:	603a      	str	r2, [r7, #0]
 8001b56:	71fb      	strb	r3, [r7, #7]
 8001b58:	460b      	mov	r3, r1
 8001b5a:	80bb      	strh	r3, [r7, #4]
 8001b5c:	79fb      	ldrb	r3, [r7, #7]
 8001b5e:	b29a      	uxth	r2, r3
 8001b60:	88bb      	ldrh	r3, [r7, #4]
 8001b62:	9301      	str	r3, [sp, #4]
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	9300      	str	r3, [sp, #0]
 8001b68:	2301      	movs	r3, #1
 8001b6a:	211c      	movs	r1, #28
 8001b6c:	4803      	ldr	r0, [pc, #12]	@ (8001b7c <mag_read_multi_reg_dma+0x30>)
 8001b6e:	f00b ff4d 	bl	800da0c <HAL_I2C_Mem_Read_DMA>
 8001b72:	bf00      	nop
 8001b74:	3708      	adds	r7, #8
 8001b76:	46bd      	mov	sp, r7
 8001b78:	bd80      	pop	{r7, pc}
 8001b7a:	bf00      	nop
 8001b7c:	20001840 	.word	0x20001840

08001b80 <imu_init>:
 8001b80:	b580      	push	{r7, lr}
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	2200      	movs	r2, #0
 8001b86:	2110      	movs	r1, #16
 8001b88:	480e      	ldr	r0, [pc, #56]	@ (8001bc4 <imu_init+0x44>)
 8001b8a:	f00b faa9 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001b8e:	2200      	movs	r2, #0
 8001b90:	2101      	movs	r1, #1
 8001b92:	480d      	ldr	r0, [pc, #52]	@ (8001bc8 <imu_init+0x48>)
 8001b94:	f00b faa4 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001b98:	2064      	movs	r0, #100	@ 0x64
 8001b9a:	f009 fadd 	bl	800b158 <HAL_Delay>
 8001b9e:	2201      	movs	r2, #1
 8001ba0:	2110      	movs	r1, #16
 8001ba2:	4808      	ldr	r0, [pc, #32]	@ (8001bc4 <imu_init+0x44>)
 8001ba4:	f00b fa9c 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001ba8:	2201      	movs	r2, #1
 8001baa:	2101      	movs	r1, #1
 8001bac:	4806      	ldr	r0, [pc, #24]	@ (8001bc8 <imu_init+0x48>)
 8001bae:	f00b fa97 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001bb2:	f7ff fefb 	bl	80019ac <gyro_init>
 8001bb6:	f7ff ff39 	bl	8001a2c <accel_init>
 8001bba:	f000 f905 	bl	8001dc8 <ist8310_init>
 8001bbe:	bf00      	nop
 8001bc0:	bd80      	pop	{r7, pc}
 8001bc2:	bf00      	nop
 8001bc4:	40020000 	.word	0x40020000
 8001bc8:	40020400 	.word	0x40020400

08001bcc <imu_start_ints>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	2180      	movs	r1, #128	@ 0x80
 8001bd2:	2015      	movs	r0, #21
 8001bd4:	f7ff fdb6 	bl	8001744 <gyro_write_byte>
 8001bd8:	200a      	movs	r0, #10
 8001bda:	f016 fc77 	bl	80184cc <vTaskDelay>
 8001bde:	2104      	movs	r1, #4
 8001be0:	2058      	movs	r0, #88	@ 0x58
 8001be2:	f7ff fe41 	bl	8001868 <accel_write_byte>
 8001be6:	200a      	movs	r0, #10
 8001be8:	f016 fc70 	bl	80184cc <vTaskDelay>
 8001bec:	2108      	movs	r1, #8
 8001bee:	200b      	movs	r0, #11
 8001bf0:	f7ff ff90 	bl	8001b14 <mag_write_single_reg>
 8001bf4:	4b02      	ldr	r3, [pc, #8]	@ (8001c00 <imu_start_ints+0x34>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	701a      	strb	r2, [r3, #0]
 8001bfa:	bf00      	nop
 8001bfc:	bd80      	pop	{r7, pc}
 8001bfe:	bf00      	nop
 8001c00:	20000880 	.word	0x20000880

08001c04 <accel_get_data>:
 8001c04:	b580      	push	{r7, lr}
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	2206      	movs	r2, #6
 8001c0a:	4903      	ldr	r1, [pc, #12]	@ (8001c18 <accel_get_data+0x14>)
 8001c0c:	2012      	movs	r0, #18
 8001c0e:	f7ff fe95 	bl	800193c <accel_read_bytes>
 8001c12:	bf00      	nop
 8001c14:	bd80      	pop	{r7, pc}
 8001c16:	bf00      	nop
 8001c18:	20000830 	.word	0x20000830

08001c1c <accel_process_data>:
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b082      	sub	sp, #8
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	4b28      	ldr	r3, [pc, #160]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c24:	785b      	ldrb	r3, [r3, #1]
 8001c26:	021b      	lsls	r3, r3, #8
 8001c28:	b21a      	sxth	r2, r3
 8001c2a:	4b26      	ldr	r3, [pc, #152]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c2c:	781b      	ldrb	r3, [r3, #0]
 8001c2e:	b21b      	sxth	r3, r3
 8001c30:	4313      	orrs	r3, r2
 8001c32:	80fb      	strh	r3, [r7, #6]
 8001c34:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c38:	ee07 3a90 	vmov	s15, r3
 8001c3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c40:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8001cc8 <accel_process_data+0xac>
 8001c44:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c48:	4b20      	ldr	r3, [pc, #128]	@ (8001ccc <accel_process_data+0xb0>)
 8001c4a:	edc3 7a04 	vstr	s15, [r3, #16]
 8001c4e:	4b1d      	ldr	r3, [pc, #116]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c50:	78db      	ldrb	r3, [r3, #3]
 8001c52:	021b      	lsls	r3, r3, #8
 8001c54:	b21a      	sxth	r2, r3
 8001c56:	4b1b      	ldr	r3, [pc, #108]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c58:	789b      	ldrb	r3, [r3, #2]
 8001c5a:	b21b      	sxth	r3, r3
 8001c5c:	4313      	orrs	r3, r2
 8001c5e:	80fb      	strh	r3, [r7, #6]
 8001c60:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c64:	ee07 3a90 	vmov	s15, r3
 8001c68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c6c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001cc8 <accel_process_data+0xac>
 8001c70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c74:	4b15      	ldr	r3, [pc, #84]	@ (8001ccc <accel_process_data+0xb0>)
 8001c76:	edc3 7a05 	vstr	s15, [r3, #20]
 8001c7a:	4b12      	ldr	r3, [pc, #72]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c7c:	795b      	ldrb	r3, [r3, #5]
 8001c7e:	021b      	lsls	r3, r3, #8
 8001c80:	b21a      	sxth	r2, r3
 8001c82:	4b10      	ldr	r3, [pc, #64]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c84:	791b      	ldrb	r3, [r3, #4]
 8001c86:	b21b      	sxth	r3, r3
 8001c88:	4313      	orrs	r3, r2
 8001c8a:	80fb      	strh	r3, [r7, #6]
 8001c8c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c90:	ee07 3a90 	vmov	s15, r3
 8001c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c98:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001cc8 <accel_process_data+0xac>
 8001c9c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ca0:	4b0a      	ldr	r3, [pc, #40]	@ (8001ccc <accel_process_data+0xb0>)
 8001ca2:	edc3 7a06 	vstr	s15, [r3, #24]
 8001ca6:	f009 fa4b 	bl	800b140 <HAL_GetTick>
 8001caa:	4603      	mov	r3, r0
 8001cac:	4a07      	ldr	r2, [pc, #28]	@ (8001ccc <accel_process_data+0xb0>)
 8001cae:	61d3      	str	r3, [r2, #28]
 8001cb0:	4b06      	ldr	r3, [pc, #24]	@ (8001ccc <accel_process_data+0xb0>)
 8001cb2:	3310      	adds	r3, #16
 8001cb4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cb6:	f005 fb27 	bl	8007308 <accel_data_ready>
 8001cba:	bf00      	nop
 8001cbc:	3708      	adds	r7, #8
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000830 	.word	0x20000830
 8001cc8:	3aeb3333 	.word	0x3aeb3333
 8001ccc:	20000848 	.word	0x20000848

08001cd0 <gyro_get_data>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	2206      	movs	r2, #6
 8001cd6:	4903      	ldr	r1, [pc, #12]	@ (8001ce4 <gyro_get_data+0x14>)
 8001cd8:	2002      	movs	r0, #2
 8001cda:	f7ff fd93 	bl	8001804 <gyro_read_bytes>
 8001cde:	bf00      	nop
 8001ce0:	bd80      	pop	{r7, pc}
 8001ce2:	bf00      	nop
 8001ce4:	20000838 	.word	0x20000838

08001ce8 <gyro_process_data>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b082      	sub	sp, #8
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	4b33      	ldr	r3, [pc, #204]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf0:	785b      	ldrb	r3, [r3, #1]
 8001cf2:	021b      	lsls	r3, r3, #8
 8001cf4:	b21a      	sxth	r2, r3
 8001cf6:	4b31      	ldr	r3, [pc, #196]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf8:	781b      	ldrb	r3, [r3, #0]
 8001cfa:	b21b      	sxth	r3, r3
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	80fb      	strh	r3, [r7, #6]
 8001d00:	88fa      	ldrh	r2, [r7, #6]
 8001d02:	4b2f      	ldr	r3, [pc, #188]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d04:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	@ 0x32
 8001d08:	b29b      	uxth	r3, r3
 8001d0a:	1ad3      	subs	r3, r2, r3
 8001d0c:	b29b      	uxth	r3, r3
 8001d0e:	80fb      	strh	r3, [r7, #6]
 8001d10:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d14:	ee07 3a90 	vmov	s15, r3
 8001d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d1c:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d24:	4b26      	ldr	r3, [pc, #152]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d26:	edc3 7a00 	vstr	s15, [r3]
 8001d2a:	4b24      	ldr	r3, [pc, #144]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d2c:	78db      	ldrb	r3, [r3, #3]
 8001d2e:	021b      	lsls	r3, r3, #8
 8001d30:	b21a      	sxth	r2, r3
 8001d32:	4b22      	ldr	r3, [pc, #136]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d34:	789b      	ldrb	r3, [r3, #2]
 8001d36:	b21b      	sxth	r3, r3
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	80fb      	strh	r3, [r7, #6]
 8001d3c:	88fa      	ldrh	r2, [r7, #6]
 8001d3e:	4b20      	ldr	r3, [pc, #128]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d40:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	@ 0x34
 8001d44:	b29b      	uxth	r3, r3
 8001d46:	1ad3      	subs	r3, r2, r3
 8001d48:	b29b      	uxth	r3, r3
 8001d4a:	80fb      	strh	r3, [r7, #6]
 8001d4c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d50:	ee07 3a90 	vmov	s15, r3
 8001d54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d58:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d60:	4b17      	ldr	r3, [pc, #92]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d62:	edc3 7a01 	vstr	s15, [r3, #4]
 8001d66:	4b15      	ldr	r3, [pc, #84]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d68:	795b      	ldrb	r3, [r3, #5]
 8001d6a:	021b      	lsls	r3, r3, #8
 8001d6c:	b21a      	sxth	r2, r3
 8001d6e:	4b13      	ldr	r3, [pc, #76]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d70:	791b      	ldrb	r3, [r3, #4]
 8001d72:	b21b      	sxth	r3, r3
 8001d74:	4313      	orrs	r3, r2
 8001d76:	80fb      	strh	r3, [r7, #6]
 8001d78:	88fa      	ldrh	r2, [r7, #6]
 8001d7a:	4b11      	ldr	r3, [pc, #68]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d7c:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	@ 0x36
 8001d80:	b29b      	uxth	r3, r3
 8001d82:	1ad3      	subs	r3, r2, r3
 8001d84:	b29b      	uxth	r3, r3
 8001d86:	80fb      	strh	r3, [r7, #6]
 8001d88:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d8c:	ee07 3a90 	vmov	s15, r3
 8001d90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d94:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d9c:	4b08      	ldr	r3, [pc, #32]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d9e:	edc3 7a02 	vstr	s15, [r3, #8]
 8001da2:	f009 f9cd 	bl	800b140 <HAL_GetTick>
 8001da6:	4603      	mov	r3, r0
 8001da8:	4a05      	ldr	r2, [pc, #20]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001daa:	60d3      	str	r3, [r2, #12]
 8001dac:	4b04      	ldr	r3, [pc, #16]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001dae:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001db0:	f005 fa5a 	bl	8007268 <gyro_data_ready>
 8001db4:	bf00      	nop
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}
 8001dbc:	20000838 	.word	0x20000838
 8001dc0:	20000848 	.word	0x20000848
 8001dc4:	398ba058 	.word	0x398ba058

08001dc8 <ist8310_init>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b082      	sub	sp, #8
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	2200      	movs	r2, #0
 8001dd0:	2140      	movs	r1, #64	@ 0x40
 8001dd2:	481d      	ldr	r0, [pc, #116]	@ (8001e48 <ist8310_init+0x80>)
 8001dd4:	f00b f984 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001dd8:	2002      	movs	r0, #2
 8001dda:	f009 f9bd 	bl	800b158 <HAL_Delay>
 8001dde:	2201      	movs	r2, #1
 8001de0:	2140      	movs	r1, #64	@ 0x40
 8001de2:	4819      	ldr	r0, [pc, #100]	@ (8001e48 <ist8310_init+0x80>)
 8001de4:	f00b f97c 	bl	800d0e0 <HAL_GPIO_WritePin>
 8001de8:	2002      	movs	r0, #2
 8001dea:	f009 f9b5 	bl	800b158 <HAL_Delay>
 8001dee:	2000      	movs	r0, #0
 8001df0:	f7ff fe74 	bl	8001adc <mag_read_single_reg>
 8001df4:	4603      	mov	r3, r0
 8001df6:	71fb      	strb	r3, [r7, #7]
 8001df8:	79fb      	ldrb	r3, [r7, #7]
 8001dfa:	2b10      	cmp	r3, #16
 8001dfc:	d00a      	beq.n	8001e14 <ist8310_init+0x4c>
 8001dfe:	4b13      	ldr	r3, [pc, #76]	@ (8001e4c <ist8310_init+0x84>)
 8001e00:	2200      	movs	r2, #0
 8001e02:	841a      	strh	r2, [r3, #32]
 8001e04:	4b11      	ldr	r3, [pc, #68]	@ (8001e4c <ist8310_init+0x84>)
 8001e06:	2200      	movs	r2, #0
 8001e08:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001e0a:	4b10      	ldr	r3, [pc, #64]	@ (8001e4c <ist8310_init+0x84>)
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001e10:	2300      	movs	r3, #0
 8001e12:	e015      	b.n	8001e40 <ist8310_init+0x78>
 8001e14:	2002      	movs	r0, #2
 8001e16:	f009 f99f 	bl	800b158 <HAL_Delay>
 8001e1a:	2109      	movs	r1, #9
 8001e1c:	2041      	movs	r0, #65	@ 0x41
 8001e1e:	f7ff fe79 	bl	8001b14 <mag_write_single_reg>
 8001e22:	2002      	movs	r0, #2
 8001e24:	f009 f998 	bl	800b158 <HAL_Delay>
 8001e28:	21c0      	movs	r1, #192	@ 0xc0
 8001e2a:	2042      	movs	r0, #66	@ 0x42
 8001e2c:	f7ff fe72 	bl	8001b14 <mag_write_single_reg>
 8001e30:	2002      	movs	r0, #2
 8001e32:	f009 f991 	bl	800b158 <HAL_Delay>
 8001e36:	210b      	movs	r1, #11
 8001e38:	200a      	movs	r0, #10
 8001e3a:	f7ff fe6b 	bl	8001b14 <mag_write_single_reg>
 8001e3e:	2300      	movs	r3, #0
 8001e40:	4618      	mov	r0, r3
 8001e42:	3708      	adds	r7, #8
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	40021800 	.word	0x40021800
 8001e4c:	20000848 	.word	0x20000848

08001e50 <ist8310_get_data>:
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
 8001e54:	4a05      	ldr	r2, [pc, #20]	@ (8001e6c <ist8310_get_data+0x1c>)
 8001e56:	2105      	movs	r1, #5
 8001e58:	2003      	movs	r0, #3
 8001e5a:	f7ff fe77 	bl	8001b4c <mag_read_multi_reg_dma>
 8001e5e:	f009 f96f 	bl	800b140 <HAL_GetTick>
 8001e62:	4603      	mov	r3, r0
 8001e64:	4a02      	ldr	r2, [pc, #8]	@ (8001e70 <ist8310_get_data+0x20>)
 8001e66:	6293      	str	r3, [r2, #40]	@ 0x28
 8001e68:	bf00      	nop
 8001e6a:	bd80      	pop	{r7, pc}
 8001e6c:	20000840 	.word	0x20000840
 8001e70:	20000848 	.word	0x20000848

08001e74 <HAL_GPIO_EXTI_Callback>:
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b082      	sub	sp, #8
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	4603      	mov	r3, r0
 8001e7c:	80fb      	strh	r3, [r7, #6]
 8001e7e:	4b13      	ldr	r3, [pc, #76]	@ (8001ecc <HAL_GPIO_EXTI_Callback+0x58>)
 8001e80:	781b      	ldrb	r3, [r3, #0]
 8001e82:	2b01      	cmp	r3, #1
 8001e84:	d11e      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001e86:	4b12      	ldr	r3, [pc, #72]	@ (8001ed0 <HAL_GPIO_EXTI_Callback+0x5c>)
 8001e88:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8001e8c:	b2db      	uxtb	r3, r3
 8001e8e:	2b01      	cmp	r3, #1
 8001e90:	d10d      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001e92:	88fb      	ldrh	r3, [r7, #6]
 8001e94:	2b20      	cmp	r3, #32
 8001e96:	d103      	bne.n	8001ea0 <HAL_GPIO_EXTI_Callback+0x2c>
 8001e98:	f7ff ff1a 	bl	8001cd0 <gyro_get_data>
 8001e9c:	f7ff ff24 	bl	8001ce8 <gyro_process_data>
 8001ea0:	88fb      	ldrh	r3, [r7, #6]
 8001ea2:	2b10      	cmp	r3, #16
 8001ea4:	d103      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001ea6:	f7ff fead 	bl	8001c04 <accel_get_data>
 8001eaa:	f7ff feb7 	bl	8001c1c <accel_process_data>
 8001eae:	88fb      	ldrh	r3, [r7, #6]
 8001eb0:	2b08      	cmp	r3, #8
 8001eb2:	d107      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001eb4:	4b07      	ldr	r3, [pc, #28]	@ (8001ed4 <HAL_GPIO_EXTI_Callback+0x60>)
 8001eb6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001eba:	b2db      	uxtb	r3, r3
 8001ebc:	2b20      	cmp	r3, #32
 8001ebe:	d101      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001ec0:	f7ff ffc6 	bl	8001e50 <ist8310_get_data>
 8001ec4:	bf00      	nop
 8001ec6:	3708      	adds	r7, #8
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bd80      	pop	{r7, pc}
 8001ecc:	20000880 	.word	0x20000880
 8001ed0:	20001964 	.word	0x20001964
 8001ed4:	20001840 	.word	0x20001840

08001ed8 <HAL_I2C_MemRxCpltCallback>:
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	b084      	sub	sp, #16
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	6078      	str	r0, [r7, #4]
 8001ee0:	4b19      	ldr	r3, [pc, #100]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ee2:	785b      	ldrb	r3, [r3, #1]
 8001ee4:	021b      	lsls	r3, r3, #8
 8001ee6:	b21a      	sxth	r2, r3
 8001ee8:	4b17      	ldr	r3, [pc, #92]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001eea:	781b      	ldrb	r3, [r3, #0]
 8001eec:	b21b      	sxth	r3, r3
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	b21b      	sxth	r3, r3
 8001ef2:	813b      	strh	r3, [r7, #8]
 8001ef4:	4b14      	ldr	r3, [pc, #80]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ef6:	78db      	ldrb	r3, [r3, #3]
 8001ef8:	021b      	lsls	r3, r3, #8
 8001efa:	b21a      	sxth	r2, r3
 8001efc:	4b12      	ldr	r3, [pc, #72]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001efe:	789b      	ldrb	r3, [r3, #2]
 8001f00:	b21b      	sxth	r3, r3
 8001f02:	4313      	orrs	r3, r2
 8001f04:	b21b      	sxth	r3, r3
 8001f06:	817b      	strh	r3, [r7, #10]
 8001f08:	4b0f      	ldr	r3, [pc, #60]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f0a:	795b      	ldrb	r3, [r3, #5]
 8001f0c:	021b      	lsls	r3, r3, #8
 8001f0e:	b21a      	sxth	r2, r3
 8001f10:	4b0d      	ldr	r3, [pc, #52]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f12:	791b      	ldrb	r3, [r3, #4]
 8001f14:	b21b      	sxth	r3, r3
 8001f16:	4313      	orrs	r3, r2
 8001f18:	b21b      	sxth	r3, r3
 8001f1a:	81bb      	strh	r3, [r7, #12]
 8001f1c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001f20:	4b0a      	ldr	r3, [pc, #40]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f22:	841a      	strh	r2, [r3, #32]
 8001f24:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8001f28:	4b08      	ldr	r3, [pc, #32]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f2a:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001f2c:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8001f30:	4b06      	ldr	r3, [pc, #24]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f32:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001f34:	4b05      	ldr	r3, [pc, #20]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f36:	3320      	adds	r3, #32
 8001f38:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001f3c:	f005 fa10 	bl	8007360 <mag_data_ready>
 8001f40:	bf00      	nop
 8001f42:	3710      	adds	r7, #16
 8001f44:	46bd      	mov	sp, r7
 8001f46:	bd80      	pop	{r7, pc}
 8001f48:	20000840 	.word	0x20000840
 8001f4c:	20000848 	.word	0x20000848

08001f50 <led_green_off>:
 8001f50:	b480      	push	{r7}
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	4b04      	ldr	r3, [pc, #16]	@ (8001f68 <led_green_off+0x18>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	2200      	movs	r2, #0
 8001f5a:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f5c:	bf00      	nop
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f64:	4770      	bx	lr
 8001f66:	bf00      	nop
 8001f68:	20001b58 	.word	0x20001b58

08001f6c <led_on>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	2100      	movs	r1, #0
 8001f72:	480c      	ldr	r0, [pc, #48]	@ (8001fa4 <led_on+0x38>)
 8001f74:	f00f fb76 	bl	8011664 <HAL_TIM_PWM_Start>
 8001f78:	2104      	movs	r1, #4
 8001f7a:	480a      	ldr	r0, [pc, #40]	@ (8001fa4 <led_on+0x38>)
 8001f7c:	f00f fb72 	bl	8011664 <HAL_TIM_PWM_Start>
 8001f80:	2108      	movs	r1, #8
 8001f82:	4808      	ldr	r0, [pc, #32]	@ (8001fa4 <led_on+0x38>)
 8001f84:	f00f fb6e 	bl	8011664 <HAL_TIM_PWM_Start>
 8001f88:	4b06      	ldr	r3, [pc, #24]	@ (8001fa4 <led_on+0x38>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	22ff      	movs	r2, #255	@ 0xff
 8001f8e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001f90:	4b04      	ldr	r3, [pc, #16]	@ (8001fa4 <led_on+0x38>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	22ff      	movs	r2, #255	@ 0xff
 8001f96:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f98:	4b02      	ldr	r3, [pc, #8]	@ (8001fa4 <led_on+0x38>)
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	22ff      	movs	r2, #255	@ 0xff
 8001f9e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fa0:	bf00      	nop
 8001fa2:	bd80      	pop	{r7, pc}
 8001fa4:	20001b58 	.word	0x20001b58

08001fa8 <led_toggle>:
 8001fa8:	b480      	push	{r7}
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	bf00      	nop
 8001fae:	46bd      	mov	sp, r7
 8001fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb4:	4770      	bx	lr
	...

08001fb8 <status_led>:
 8001fb8:	b480      	push	{r7}
 8001fba:	b083      	sub	sp, #12
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	4603      	mov	r3, r0
 8001fc0:	460a      	mov	r2, r1
 8001fc2:	80fb      	strh	r3, [r7, #6]
 8001fc4:	4613      	mov	r3, r2
 8001fc6:	717b      	strb	r3, [r7, #5]
 8001fc8:	797b      	ldrb	r3, [r7, #5]
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	f040 8090 	bne.w	80020f0 <status_led+0x138>
 8001fd0:	88fb      	ldrh	r3, [r7, #6]
 8001fd2:	3b01      	subs	r3, #1
 8001fd4:	2b08      	cmp	r3, #8
 8001fd6:	f200 808a 	bhi.w	80020ee <status_led+0x136>
 8001fda:	a201      	add	r2, pc, #4	@ (adr r2, 8001fe0 <status_led+0x28>)
 8001fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fe0:	08002005 	.word	0x08002005
 8001fe4:	0800201f 	.word	0x0800201f
 8001fe8:	08002039 	.word	0x08002039
 8001fec:	08002053 	.word	0x08002053
 8001ff0:	0800206d 	.word	0x0800206d
 8001ff4:	08002087 	.word	0x08002087
 8001ff8:	080020a1 	.word	0x080020a1
 8001ffc:	080020bb 	.word	0x080020bb
 8002000:	080020d5 	.word	0x080020d5
 8002004:	4b3d      	ldr	r3, [pc, #244]	@ (80020fc <status_led+0x144>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	22ff      	movs	r2, #255	@ 0xff
 800200a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800200c:	4b3b      	ldr	r3, [pc, #236]	@ (80020fc <status_led+0x144>)
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	2200      	movs	r2, #0
 8002012:	639a      	str	r2, [r3, #56]	@ 0x38
 8002014:	4b39      	ldr	r3, [pc, #228]	@ (80020fc <status_led+0x144>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	2200      	movs	r2, #0
 800201a:	635a      	str	r2, [r3, #52]	@ 0x34
 800201c:	e068      	b.n	80020f0 <status_led+0x138>
 800201e:	4b37      	ldr	r3, [pc, #220]	@ (80020fc <status_led+0x144>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	2200      	movs	r2, #0
 8002024:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002026:	4b35      	ldr	r3, [pc, #212]	@ (80020fc <status_led+0x144>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	22ff      	movs	r2, #255	@ 0xff
 800202c:	639a      	str	r2, [r3, #56]	@ 0x38
 800202e:	4b33      	ldr	r3, [pc, #204]	@ (80020fc <status_led+0x144>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	2200      	movs	r2, #0
 8002034:	635a      	str	r2, [r3, #52]	@ 0x34
 8002036:	e05b      	b.n	80020f0 <status_led+0x138>
 8002038:	4b30      	ldr	r3, [pc, #192]	@ (80020fc <status_led+0x144>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	2200      	movs	r2, #0
 800203e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002040:	4b2e      	ldr	r3, [pc, #184]	@ (80020fc <status_led+0x144>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	2200      	movs	r2, #0
 8002046:	639a      	str	r2, [r3, #56]	@ 0x38
 8002048:	4b2c      	ldr	r3, [pc, #176]	@ (80020fc <status_led+0x144>)
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	22ff      	movs	r2, #255	@ 0xff
 800204e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002050:	e04e      	b.n	80020f0 <status_led+0x138>
 8002052:	4b2a      	ldr	r3, [pc, #168]	@ (80020fc <status_led+0x144>)
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	22ff      	movs	r2, #255	@ 0xff
 8002058:	63da      	str	r2, [r3, #60]	@ 0x3c
 800205a:	4b28      	ldr	r3, [pc, #160]	@ (80020fc <status_led+0x144>)
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	2200      	movs	r2, #0
 8002060:	639a      	str	r2, [r3, #56]	@ 0x38
 8002062:	4b26      	ldr	r3, [pc, #152]	@ (80020fc <status_led+0x144>)
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	22ff      	movs	r2, #255	@ 0xff
 8002068:	635a      	str	r2, [r3, #52]	@ 0x34
 800206a:	e041      	b.n	80020f0 <status_led+0x138>
 800206c:	4b23      	ldr	r3, [pc, #140]	@ (80020fc <status_led+0x144>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2200      	movs	r2, #0
 8002072:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002074:	4b21      	ldr	r3, [pc, #132]	@ (80020fc <status_led+0x144>)
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	2200      	movs	r2, #0
 800207a:	639a      	str	r2, [r3, #56]	@ 0x38
 800207c:	4b1f      	ldr	r3, [pc, #124]	@ (80020fc <status_led+0x144>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2200      	movs	r2, #0
 8002082:	635a      	str	r2, [r3, #52]	@ 0x34
 8002084:	e034      	b.n	80020f0 <status_led+0x138>
 8002086:	4b1d      	ldr	r3, [pc, #116]	@ (80020fc <status_led+0x144>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	2200      	movs	r2, #0
 800208c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800208e:	4b1b      	ldr	r3, [pc, #108]	@ (80020fc <status_led+0x144>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	2200      	movs	r2, #0
 8002094:	639a      	str	r2, [r3, #56]	@ 0x38
 8002096:	4b19      	ldr	r3, [pc, #100]	@ (80020fc <status_led+0x144>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	2200      	movs	r2, #0
 800209c:	635a      	str	r2, [r3, #52]	@ 0x34
 800209e:	e027      	b.n	80020f0 <status_led+0x138>
 80020a0:	4b16      	ldr	r3, [pc, #88]	@ (80020fc <status_led+0x144>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	2200      	movs	r2, #0
 80020a6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020a8:	4b14      	ldr	r3, [pc, #80]	@ (80020fc <status_led+0x144>)
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	2200      	movs	r2, #0
 80020ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80020b0:	4b12      	ldr	r3, [pc, #72]	@ (80020fc <status_led+0x144>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	2200      	movs	r2, #0
 80020b6:	635a      	str	r2, [r3, #52]	@ 0x34
 80020b8:	e01a      	b.n	80020f0 <status_led+0x138>
 80020ba:	4b10      	ldr	r3, [pc, #64]	@ (80020fc <status_led+0x144>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	2200      	movs	r2, #0
 80020c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020c2:	4b0e      	ldr	r3, [pc, #56]	@ (80020fc <status_led+0x144>)
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	2200      	movs	r2, #0
 80020c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80020ca:	4b0c      	ldr	r3, [pc, #48]	@ (80020fc <status_led+0x144>)
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	2200      	movs	r2, #0
 80020d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80020d2:	e00d      	b.n	80020f0 <status_led+0x138>
 80020d4:	4b09      	ldr	r3, [pc, #36]	@ (80020fc <status_led+0x144>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	2200      	movs	r2, #0
 80020da:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020dc:	4b07      	ldr	r3, [pc, #28]	@ (80020fc <status_led+0x144>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	2200      	movs	r2, #0
 80020e2:	639a      	str	r2, [r3, #56]	@ 0x38
 80020e4:	4b05      	ldr	r3, [pc, #20]	@ (80020fc <status_led+0x144>)
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	2200      	movs	r2, #0
 80020ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80020ec:	e000      	b.n	80020f0 <status_led+0x138>
 80020ee:	bf00      	nop
 80020f0:	bf00      	nop
 80020f2:	370c      	adds	r7, #12
 80020f4:	46bd      	mov	sp, r7
 80020f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fa:	4770      	bx	lr
 80020fc:	20001b58 	.word	0x20001b58

08002100 <LL_TIM_EnableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_EnableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
{
 8002100:	b480      	push	{r7}
 8002102:	b083      	sub	sp, #12
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f043 0201 	orr.w	r2, r3, #1
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	601a      	str	r2, [r3, #0]
}
 8002114:	bf00      	nop
 8002116:	370c      	adds	r7, #12
 8002118:	46bd      	mov	sp, r7
 800211a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800211e:	4770      	bx	lr

08002120 <LL_TIM_DisableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_DisableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
{
 8002120:	b480      	push	{r7}
 8002122:	b083      	sub	sp, #12
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f023 0201 	bic.w	r2, r3, #1
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	601a      	str	r2, [r3, #0]
}
 8002134:	bf00      	nop
 8002136:	370c      	adds	r7, #12
 8002138:	46bd      	mov	sp, r7
 800213a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213e:	4770      	bx	lr

08002140 <LL_TIM_SetPrescaler>:
  * @param  TIMx Timer instance
  * @param  Prescaler between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
{
 8002140:	b480      	push	{r7}
 8002142:	b083      	sub	sp, #12
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
 8002148:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->PSC, Prescaler);
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	683a      	ldr	r2, [r7, #0]
 800214e:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8002150:	bf00      	nop
 8002152:	370c      	adds	r7, #12
 8002154:	46bd      	mov	sp, r7
 8002156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215a:	4770      	bx	lr

0800215c <micros_tick>:
#include "board_lib.h"
#include "robot_config.h"

static uint32_t gv_overflow_times = 0;

void micros_tick(){
 800215c:	b480      	push	{r7}
 800215e:	af00      	add	r7, sp, #0
	gv_overflow_times ++;
 8002160:	4b04      	ldr	r3, [pc, #16]	@ (8002174 <micros_tick+0x18>)
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	3301      	adds	r3, #1
 8002166:	4a03      	ldr	r2, [pc, #12]	@ (8002174 <micros_tick+0x18>)
 8002168:	6013      	str	r3, [r2, #0]
}
 800216a:	bf00      	nop
 800216c:	46bd      	mov	sp, r7
 800216e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002172:	4770      	bx	lr
 8002174:	20000884 	.word	0x20000884

08002178 <start_micros_timer>:

void start_micros_timer()
{
 8002178:	b580      	push	{r7, lr}
 800217a:	af00      	add	r7, sp, #0
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 800217c:	f240 3147 	movw	r1, #839	@ 0x347
 8002180:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002184:	f7ff ffdc 	bl	8002140 <LL_TIM_SetPrescaler>
	LL_TIM_DisableCounter(TIM2);
 8002188:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800218c:	f7ff ffc8 	bl	8002120 <LL_TIM_DisableCounter>
	TIM2->CNT =0;
 8002190:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002194:	2200      	movs	r2, #0
 8002196:	625a      	str	r2, [r3, #36]	@ 0x24
//	LL_TIM_DisableExternalClock(TIM2);
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 8002198:	f240 3147 	movw	r1, #839	@ 0x347
 800219c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021a0:	f7ff ffce 	bl	8002140 <LL_TIM_SetPrescaler>
//	LL_TIM_EnableUpdateEvent(TIM2);
//	LL_TIM_EnableIT_UPDATE(TIM2);
	TIM2->EGR |= TIM_EGR_UG_Msk;
 80021a4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80021a8:	695b      	ldr	r3, [r3, #20]
 80021aa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80021ae:	f043 0301 	orr.w	r3, r3, #1
 80021b2:	6153      	str	r3, [r2, #20]
	LL_TIM_EnableCounter(TIM2);
 80021b4:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021b8:	f7ff ffa2 	bl	8002100 <LL_TIM_EnableCounter>
}
 80021bc:	bf00      	nop
 80021be:	bd80      	pop	{r7, pc}

080021c0 <get_microseconds>:
static uint32_t current_cnt;
//T_start = get_microseconds();
//diff = T_end - T_start;
//T_end = T_start;
uint32_t get_microseconds()
{
 80021c0:	e92d 0fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp}
 80021c4:	b083      	sub	sp, #12
 80021c6:	af00      	add	r7, sp, #0
	current_cnt = TIM2->CNT;
 80021c8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021cc:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021ce:	4d15      	ldr	r5, [pc, #84]	@ (8002224 <get_microseconds+0x64>)
 80021d0:	602c      	str	r4, [r5, #0]
	uint64_t temp_cnt = TIM2->CNT;
 80021d2:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021d6:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021d8:	2500      	movs	r5, #0
 80021da:	4620      	mov	r0, r4
 80021dc:	4629      	mov	r1, r5
 80021de:	e9c7 0100 	strd	r0, r1, [r7]
	temp_cnt = temp_cnt * (1000000 / TIMER_FREQ);
 80021e2:	e9d7 8900 	ldrd	r8, r9, [r7]
 80021e6:	4640      	mov	r0, r8
 80021e8:	4649      	mov	r1, r9
 80021ea:	f04f 0400 	mov.w	r4, #0
 80021ee:	f04f 0500 	mov.w	r5, #0
 80021f2:	008d      	lsls	r5, r1, #2
 80021f4:	ea45 7590 	orr.w	r5, r5, r0, lsr #30
 80021f8:	0084      	lsls	r4, r0, #2
 80021fa:	4620      	mov	r0, r4
 80021fc:	4629      	mov	r1, r5
 80021fe:	eb10 0208 	adds.w	r2, r0, r8
 8002202:	eb41 0309 	adc.w	r3, r1, r9
 8002206:	eb12 0a02 	adds.w	sl, r2, r2
 800220a:	eb43 0b03 	adc.w	fp, r3, r3
 800220e:	4652      	mov	r2, sl
 8002210:	465b      	mov	r3, fp
 8002212:	e9c7 2300 	strd	r2, r3, [r7]
	return (uint32_t)temp_cnt;
 8002216:	683b      	ldr	r3, [r7, #0]
}
 8002218:	4618      	mov	r0, r3
 800221a:	370c      	adds	r7, #12
 800221c:	46bd      	mov	sp, r7
 800221e:	e8bd 0fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp}
 8002222:	4770      	bx	lr
 8002224:	20000888 	.word	0x20000888

08002228 <queue_init>:
 8002228:	b480      	push	{r7}
 800222a:	b085      	sub	sp, #20
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	2300      	movs	r3, #0
 8002232:	723b      	strb	r3, [r7, #8]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2b00      	cmp	r3, #0
 8002238:	d104      	bne.n	8002244 <queue_init+0x1c>
 800223a:	2304      	movs	r3, #4
 800223c:	723b      	strb	r3, [r7, #8]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	60fb      	str	r3, [r7, #12]
 8002242:	e00d      	b.n	8002260 <queue_init+0x38>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2200      	movs	r2, #0
 8002248:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	2200      	movs	r2, #0
 8002250:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2200      	movs	r2, #0
 8002258:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 800225c:	68bb      	ldr	r3, [r7, #8]
 800225e:	60fb      	str	r3, [r7, #12]
 8002260:	2300      	movs	r3, #0
 8002262:	89ba      	ldrh	r2, [r7, #12]
 8002264:	f362 030f 	bfi	r3, r2, #0, #16
 8002268:	89fa      	ldrh	r2, [r7, #14]
 800226a:	f362 431f 	bfi	r3, r2, #16, #16
 800226e:	4618      	mov	r0, r3
 8002270:	3714      	adds	r7, #20
 8002272:	46bd      	mov	sp, r7
 8002274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002278:	4770      	bx	lr

0800227a <queue_get_size>:
 800227a:	b480      	push	{r7}
 800227c:	b085      	sub	sp, #20
 800227e:	af00      	add	r7, sp, #0
 8002280:	6078      	str	r0, [r7, #4]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	f8b3 2100 	ldrh.w	r2, [r3, #256]	@ 0x100
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800228e:	1ad3      	subs	r3, r2, r3
 8002290:	81fb      	strh	r3, [r7, #14]
 8002292:	89fb      	ldrh	r3, [r7, #14]
 8002294:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002298:	d904      	bls.n	80022a4 <queue_get_size+0x2a>
 800229a:	89fb      	ldrh	r3, [r7, #14]
 800229c:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 80022a0:	b29b      	uxth	r3, r3
 80022a2:	e000      	b.n	80022a6 <queue_get_size+0x2c>
 80022a4:	89fb      	ldrh	r3, [r7, #14]
 80022a6:	81fb      	strh	r3, [r7, #14]
 80022a8:	89fb      	ldrh	r3, [r7, #14]
 80022aa:	4618      	mov	r0, r3
 80022ac:	3714      	adds	r7, #20
 80022ae:	46bd      	mov	sp, r7
 80022b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b4:	4770      	bx	lr

080022b6 <queue_append_byte>:
 80022b6:	b580      	push	{r7, lr}
 80022b8:	b084      	sub	sp, #16
 80022ba:	af00      	add	r7, sp, #0
 80022bc:	6078      	str	r0, [r7, #4]
 80022be:	460b      	mov	r3, r1
 80022c0:	70fb      	strb	r3, [r7, #3]
 80022c2:	2300      	movs	r3, #0
 80022c4:	723b      	strb	r3, [r7, #8]
 80022c6:	f008 ff3b 	bl	800b140 <HAL_GetTick>
 80022ca:	4602      	mov	r2, r0
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022d8:	4619      	mov	r1, r3
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	78fa      	ldrb	r2, [r7, #3]
 80022de:	545a      	strb	r2, [r3, r1]
 80022e0:	2301      	movs	r3, #1
 80022e2:	817b      	strh	r3, [r7, #10]
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022ea:	2bfe      	cmp	r3, #254	@ 0xfe
 80022ec:	d805      	bhi.n	80022fa <queue_append_byte+0x44>
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022f4:	3301      	adds	r3, #1
 80022f6:	b29a      	uxth	r2, r3
 80022f8:	e000      	b.n	80022fc <queue_append_byte+0x46>
 80022fa:	2200      	movs	r2, #0
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002302:	6878      	ldr	r0, [r7, #4]
 8002304:	f7ff ffb9 	bl	800227a <queue_get_size>
 8002308:	4603      	mov	r3, r0
 800230a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800230e:	d913      	bls.n	8002338 <queue_append_byte+0x82>
 8002310:	2301      	movs	r3, #1
 8002312:	723b      	strb	r3, [r7, #8]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800231a:	2bff      	cmp	r3, #255	@ 0xff
 800231c:	d005      	beq.n	800232a <queue_append_byte+0x74>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002324:	3301      	adds	r3, #1
 8002326:	b29a      	uxth	r2, r3
 8002328:	e000      	b.n	800232c <queue_append_byte+0x76>
 800232a:	2200      	movs	r2, #0
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002332:	68bb      	ldr	r3, [r7, #8]
 8002334:	60fb      	str	r3, [r7, #12]
 8002336:	e001      	b.n	800233c <queue_append_byte+0x86>
 8002338:	68bb      	ldr	r3, [r7, #8]
 800233a:	60fb      	str	r3, [r7, #12]
 800233c:	2300      	movs	r3, #0
 800233e:	89ba      	ldrh	r2, [r7, #12]
 8002340:	f362 030f 	bfi	r3, r2, #0, #16
 8002344:	89fa      	ldrh	r2, [r7, #14]
 8002346:	f362 431f 	bfi	r3, r2, #16, #16
 800234a:	4618      	mov	r0, r3
 800234c:	3710      	adds	r7, #16
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}

08002352 <queue_pop_element>:
 8002352:	b580      	push	{r7, lr}
 8002354:	b084      	sub	sp, #16
 8002356:	af00      	add	r7, sp, #0
 8002358:	6078      	str	r0, [r7, #4]
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f7ff ff8d 	bl	800227a <queue_get_size>
 8002360:	4603      	mov	r3, r0
 8002362:	2b00      	cmp	r3, #0
 8002364:	d101      	bne.n	800236a <queue_pop_element+0x18>
 8002366:	2300      	movs	r3, #0
 8002368:	e01c      	b.n	80023a4 <queue_pop_element+0x52>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002370:	3301      	adds	r3, #1
 8002372:	b29a      	uxth	r2, r3
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002380:	2bff      	cmp	r3, #255	@ 0xff
 8002382:	d803      	bhi.n	800238c <queue_pop_element+0x3a>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 800238a:	e000      	b.n	800238e <queue_pop_element+0x3c>
 800238c:	2200      	movs	r2, #0
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800239a:	461a      	mov	r2, r3
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	5c9b      	ldrb	r3, [r3, r2]
 80023a0:	73fb      	strb	r3, [r7, #15]
 80023a2:	7bfb      	ldrb	r3, [r7, #15]
 80023a4:	4618      	mov	r0, r3
 80023a6:	3710      	adds	r7, #16
 80023a8:	46bd      	mov	sp, r7
 80023aa:	bd80      	pop	{r7, pc}

080023ac <queue_pop_elements>:
 80023ac:	b580      	push	{r7, lr}
 80023ae:	b088      	sub	sp, #32
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	60f8      	str	r0, [r7, #12]
 80023b4:	60b9      	str	r1, [r7, #8]
 80023b6:	4613      	mov	r3, r2
 80023b8:	80fb      	strh	r3, [r7, #6]
 80023ba:	68f8      	ldr	r0, [r7, #12]
 80023bc:	f7ff ff5d 	bl	800227a <queue_get_size>
 80023c0:	4603      	mov	r3, r0
 80023c2:	83fb      	strh	r3, [r7, #30]
 80023c4:	8bfa      	ldrh	r2, [r7, #30]
 80023c6:	88fb      	ldrh	r3, [r7, #6]
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d203      	bcs.n	80023d4 <queue_pop_elements+0x28>
 80023cc:	2303      	movs	r3, #3
 80023ce:	753b      	strb	r3, [r7, #20]
 80023d0:	8bfb      	ldrh	r3, [r7, #30]
 80023d2:	80fb      	strh	r3, [r7, #6]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023da:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80023de:	83bb      	strh	r3, [r7, #28]
 80023e0:	8bba      	ldrh	r2, [r7, #28]
 80023e2:	88fb      	ldrh	r3, [r7, #6]
 80023e4:	429a      	cmp	r2, r3
 80023e6:	d30b      	bcc.n	8002400 <queue_pop_elements+0x54>
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023ee:	461a      	mov	r2, r3
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	4413      	add	r3, r2
 80023f4:	88fa      	ldrh	r2, [r7, #6]
 80023f6:	4619      	mov	r1, r3
 80023f8:	68b8      	ldr	r0, [r7, #8]
 80023fa:	f018 fe5b 	bl	801b0b4 <memcpy>
 80023fe:	e014      	b.n	800242a <queue_pop_elements+0x7e>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002406:	461a      	mov	r2, r3
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	4413      	add	r3, r2
 800240c:	8bba      	ldrh	r2, [r7, #28]
 800240e:	4619      	mov	r1, r3
 8002410:	68b8      	ldr	r0, [r7, #8]
 8002412:	f018 fe4f 	bl	801b0b4 <memcpy>
 8002416:	8bbb      	ldrh	r3, [r7, #28]
 8002418:	68ba      	ldr	r2, [r7, #8]
 800241a:	18d0      	adds	r0, r2, r3
 800241c:	68f9      	ldr	r1, [r7, #12]
 800241e:	88fa      	ldrh	r2, [r7, #6]
 8002420:	8bbb      	ldrh	r3, [r7, #28]
 8002422:	1ad3      	subs	r3, r2, r3
 8002424:	461a      	mov	r2, r3
 8002426:	f018 fe45 	bl	801b0b4 <memcpy>
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 8002430:	88fb      	ldrh	r3, [r7, #6]
 8002432:	4413      	add	r3, r2
 8002434:	b29a      	uxth	r2, r3
 8002436:	68fb      	ldr	r3, [r7, #12]
 8002438:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002442:	2bff      	cmp	r3, #255	@ 0xff
 8002444:	d906      	bls.n	8002454 <queue_pop_elements+0xa8>
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800244c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8002450:	b29b      	uxth	r3, r3
 8002452:	e002      	b.n	800245a <queue_pop_elements+0xae>
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800245a:	68fa      	ldr	r2, [r7, #12]
 800245c:	f8a2 3102 	strh.w	r3, [r2, #258]	@ 0x102
 8002460:	697b      	ldr	r3, [r7, #20]
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	2300      	movs	r3, #0
 8002466:	8b3a      	ldrh	r2, [r7, #24]
 8002468:	f362 030f 	bfi	r3, r2, #0, #16
 800246c:	8b7a      	ldrh	r2, [r7, #26]
 800246e:	f362 431f 	bfi	r3, r2, #16, #16
 8002472:	4618      	mov	r0, r3
 8002474:	3720      	adds	r7, #32
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}

0800247a <queue_peek>:
 800247a:	b580      	push	{r7, lr}
 800247c:	b082      	sub	sp, #8
 800247e:	af00      	add	r7, sp, #0
 8002480:	6078      	str	r0, [r7, #4]
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f7ff fef9 	bl	800227a <queue_get_size>
 8002488:	4603      	mov	r3, r0
 800248a:	2b00      	cmp	r3, #0
 800248c:	d006      	beq.n	800249c <queue_peek+0x22>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002494:	461a      	mov	r2, r3
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	5c9b      	ldrb	r3, [r3, r2]
 800249a:	e000      	b.n	800249e <queue_peek+0x24>
 800249c:	2300      	movs	r3, #0
 800249e:	4618      	mov	r0, r3
 80024a0:	3708      	adds	r7, #8
 80024a2:	46bd      	mov	sp, r7
 80024a4:	bd80      	pop	{r7, pc}

080024a6 <queue_peek_number>:
 80024a6:	b580      	push	{r7, lr}
 80024a8:	b088      	sub	sp, #32
 80024aa:	af00      	add	r7, sp, #0
 80024ac:	60f8      	str	r0, [r7, #12]
 80024ae:	60b9      	str	r1, [r7, #8]
 80024b0:	4613      	mov	r3, r2
 80024b2:	80fb      	strh	r3, [r7, #6]
 80024b4:	f008 fe44 	bl	800b140 <HAL_GetTick>
 80024b8:	4602      	mov	r2, r0
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80024c0:	2300      	movs	r3, #0
 80024c2:	753b      	strb	r3, [r7, #20]
 80024c4:	68f8      	ldr	r0, [r7, #12]
 80024c6:	f7ff fed8 	bl	800227a <queue_get_size>
 80024ca:	4603      	mov	r3, r0
 80024cc:	83fb      	strh	r3, [r7, #30]
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024d4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80024d8:	83bb      	strh	r3, [r7, #28]
 80024da:	8bfa      	ldrh	r2, [r7, #30]
 80024dc:	88fb      	ldrh	r3, [r7, #6]
 80024de:	429a      	cmp	r2, r3
 80024e0:	d203      	bcs.n	80024ea <queue_peek_number+0x44>
 80024e2:	2303      	movs	r3, #3
 80024e4:	753b      	strb	r3, [r7, #20]
 80024e6:	8bfb      	ldrh	r3, [r7, #30]
 80024e8:	80fb      	strh	r3, [r7, #6]
 80024ea:	8bba      	ldrh	r2, [r7, #28]
 80024ec:	88fb      	ldrh	r3, [r7, #6]
 80024ee:	429a      	cmp	r2, r3
 80024f0:	d30b      	bcc.n	800250a <queue_peek_number+0x64>
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024f8:	461a      	mov	r2, r3
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	4413      	add	r3, r2
 80024fe:	88fa      	ldrh	r2, [r7, #6]
 8002500:	4619      	mov	r1, r3
 8002502:	68b8      	ldr	r0, [r7, #8]
 8002504:	f018 fdd6 	bl	801b0b4 <memcpy>
 8002508:	e014      	b.n	8002534 <queue_peek_number+0x8e>
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002510:	461a      	mov	r2, r3
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	4413      	add	r3, r2
 8002516:	8bba      	ldrh	r2, [r7, #28]
 8002518:	4619      	mov	r1, r3
 800251a:	68b8      	ldr	r0, [r7, #8]
 800251c:	f018 fdca 	bl	801b0b4 <memcpy>
 8002520:	8bbb      	ldrh	r3, [r7, #28]
 8002522:	68ba      	ldr	r2, [r7, #8]
 8002524:	18d0      	adds	r0, r2, r3
 8002526:	68f9      	ldr	r1, [r7, #12]
 8002528:	88fa      	ldrh	r2, [r7, #6]
 800252a:	8bbb      	ldrh	r3, [r7, #28]
 800252c:	1ad3      	subs	r3, r2, r3
 800252e:	461a      	mov	r2, r3
 8002530:	f018 fdc0 	bl	801b0b4 <memcpy>
 8002534:	88fb      	ldrh	r3, [r7, #6]
 8002536:	82fb      	strh	r3, [r7, #22]
 8002538:	697b      	ldr	r3, [r7, #20]
 800253a:	61bb      	str	r3, [r7, #24]
 800253c:	2300      	movs	r3, #0
 800253e:	8b3a      	ldrh	r2, [r7, #24]
 8002540:	f362 030f 	bfi	r3, r2, #0, #16
 8002544:	8b7a      	ldrh	r2, [r7, #26]
 8002546:	f362 431f 	bfi	r3, r2, #16, #16
 800254a:	4618      	mov	r0, r3
 800254c:	3720      	adds	r7, #32
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}
	...

08002554 <ref_process_data>:
 8002554:	b590      	push	{r4, r7, lr}
 8002556:	b097      	sub	sp, #92	@ 0x5c
 8002558:	af00      	add	r7, sp, #0
 800255a:	6578      	str	r0, [r7, #84]	@ 0x54
 800255c:	6539      	str	r1, [r7, #80]	@ 0x50
 800255e:	e066      	b.n	800262e <ref_process_data+0xda>
 8002560:	4b38      	ldr	r3, [pc, #224]	@ (8002644 <ref_process_data+0xf0>)
 8002562:	781b      	ldrb	r3, [r3, #0]
 8002564:	2b00      	cmp	r3, #0
 8002566:	d002      	beq.n	800256e <ref_process_data+0x1a>
 8002568:	2b01      	cmp	r3, #1
 800256a:	d036      	beq.n	80025da <ref_process_data+0x86>
 800256c:	e05f      	b.n	800262e <ref_process_data+0xda>
 800256e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002570:	f7ff fe83 	bl	800227a <queue_get_size>
 8002574:	4603      	mov	r3, r0
 8002576:	2b06      	cmp	r3, #6
 8002578:	d801      	bhi.n	800257e <ref_process_data+0x2a>
 800257a:	2302      	movs	r3, #2
 800257c:	e05e      	b.n	800263c <ref_process_data+0xe8>
 800257e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002580:	f7ff ff7b 	bl	800247a <queue_peek>
 8002584:	4603      	mov	r3, r0
 8002586:	2ba5      	cmp	r3, #165	@ 0xa5
 8002588:	d003      	beq.n	8002592 <ref_process_data+0x3e>
 800258a:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 800258c:	f7ff fee1 	bl	8002352 <queue_pop_element>
 8002590:	e04d      	b.n	800262e <ref_process_data+0xda>
 8002592:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002594:	f7ff fe71 	bl	800227a <queue_get_size>
 8002598:	4603      	mov	r3, r0
 800259a:	2b07      	cmp	r3, #7
 800259c:	d91b      	bls.n	80025d6 <ref_process_data+0x82>
 800259e:	4c2a      	ldr	r4, [pc, #168]	@ (8002648 <ref_process_data+0xf4>)
 80025a0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025a4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80025a6:	4618      	mov	r0, r3
 80025a8:	f000 f850 	bl	800264c <ref_get_header>
 80025ac:	4622      	mov	r2, r4
 80025ae:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025b2:	6818      	ldr	r0, [r3, #0]
 80025b4:	6010      	str	r0, [r2, #0]
 80025b6:	8899      	ldrh	r1, [r3, #4]
 80025b8:	799b      	ldrb	r3, [r3, #6]
 80025ba:	8091      	strh	r1, [r2, #4]
 80025bc:	7193      	strb	r3, [r2, #6]
 80025be:	4b22      	ldr	r3, [pc, #136]	@ (8002648 <ref_process_data+0xf4>)
 80025c0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80025ca:	4293      	cmp	r3, r2
 80025cc:	d02c      	beq.n	8002628 <ref_process_data+0xd4>
 80025ce:	4b1d      	ldr	r3, [pc, #116]	@ (8002644 <ref_process_data+0xf0>)
 80025d0:	2201      	movs	r2, #1
 80025d2:	701a      	strb	r2, [r3, #0]
 80025d4:	e02b      	b.n	800262e <ref_process_data+0xda>
 80025d6:	2302      	movs	r3, #2
 80025d8:	e030      	b.n	800263c <ref_process_data+0xe8>
 80025da:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 80025dc:	f7ff fe4d 	bl	800227a <queue_get_size>
 80025e0:	4603      	mov	r3, r0
 80025e2:	461a      	mov	r2, r3
 80025e4:	4b18      	ldr	r3, [pc, #96]	@ (8002648 <ref_process_data+0xf4>)
 80025e6:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80025ea:	b29b      	uxth	r3, r3
 80025ec:	3309      	adds	r3, #9
 80025ee:	429a      	cmp	r2, r3
 80025f0:	dd18      	ble.n	8002624 <ref_process_data+0xd0>
 80025f2:	4b14      	ldr	r3, [pc, #80]	@ (8002644 <ref_process_data+0xf0>)
 80025f4:	2200      	movs	r2, #0
 80025f6:	701a      	strb	r2, [r3, #0]
 80025f8:	6d3c      	ldr	r4, [r7, #80]	@ 0x50
 80025fa:	4638      	mov	r0, r7
 80025fc:	4a12      	ldr	r2, [pc, #72]	@ (8002648 <ref_process_data+0xf4>)
 80025fe:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002600:	ca06      	ldmia	r2, {r1, r2}
 8002602:	f000 f89b 	bl	800273c <ref_get_msg>
 8002606:	4620      	mov	r0, r4
 8002608:	463b      	mov	r3, r7
 800260a:	2242      	movs	r2, #66	@ 0x42
 800260c:	4619      	mov	r1, r3
 800260e:	f018 fd51 	bl	801b0b4 <memcpy>
 8002612:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002614:	881b      	ldrh	r3, [r3, #0]
 8002616:	b29b      	uxth	r3, r3
 8002618:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800261c:	4293      	cmp	r3, r2
 800261e:	d005      	beq.n	800262c <ref_process_data+0xd8>
 8002620:	2300      	movs	r3, #0
 8002622:	e00b      	b.n	800263c <ref_process_data+0xe8>
 8002624:	2302      	movs	r3, #2
 8002626:	e009      	b.n	800263c <ref_process_data+0xe8>
 8002628:	bf00      	nop
 800262a:	e000      	b.n	800262e <ref_process_data+0xda>
 800262c:	bf00      	nop
 800262e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002630:	f7ff fe23 	bl	800227a <queue_get_size>
 8002634:	4603      	mov	r3, r0
 8002636:	2b07      	cmp	r3, #7
 8002638:	d892      	bhi.n	8002560 <ref_process_data+0xc>
 800263a:	2302      	movs	r3, #2
 800263c:	4618      	mov	r0, r3
 800263e:	375c      	adds	r7, #92	@ 0x5c
 8002640:	46bd      	mov	sp, r7
 8002642:	bd90      	pop	{r4, r7, pc}
 8002644:	2000088c 	.word	0x2000088c
 8002648:	20000890 	.word	0x20000890

0800264c <ref_get_header>:
 800264c:	b580      	push	{r7, lr}
 800264e:	b088      	sub	sp, #32
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	6039      	str	r1, [r7, #0]
 8002656:	f107 030c 	add.w	r3, r7, #12
 800265a:	2207      	movs	r2, #7
 800265c:	4619      	mov	r1, r3
 800265e:	6838      	ldr	r0, [r7, #0]
 8002660:	f7ff ff21 	bl	80024a6 <queue_peek_number>
 8002664:	7b3b      	ldrb	r3, [r7, #12]
 8002666:	753b      	strb	r3, [r7, #20]
 8002668:	7d3b      	ldrb	r3, [r7, #20]
 800266a:	2ba5      	cmp	r3, #165	@ 0xa5
 800266c:	d013      	beq.n	8002696 <ref_get_header+0x4a>
 800266e:	6838      	ldr	r0, [r7, #0]
 8002670:	f7ff fe6f 	bl	8002352 <queue_pop_element>
 8002674:	f04f 33ff 	mov.w	r3, #4294967295
 8002678:	767b      	strb	r3, [r7, #25]
 800267a:	f04f 33ff 	mov.w	r3, #4294967295
 800267e:	76bb      	strb	r3, [r7, #26]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	461a      	mov	r2, r3
 8002684:	f107 0314 	add.w	r3, r7, #20
 8002688:	6818      	ldr	r0, [r3, #0]
 800268a:	6010      	str	r0, [r2, #0]
 800268c:	8899      	ldrh	r1, [r3, #4]
 800268e:	799b      	ldrb	r3, [r3, #6]
 8002690:	8091      	strh	r1, [r2, #4]
 8002692:	7193      	strb	r3, [r2, #6]
 8002694:	e04d      	b.n	8002732 <ref_get_header+0xe6>
 8002696:	7bbb      	ldrb	r3, [r7, #14]
 8002698:	021b      	lsls	r3, r3, #8
 800269a:	b21a      	sxth	r2, r3
 800269c:	7b7b      	ldrb	r3, [r7, #13]
 800269e:	b21b      	sxth	r3, r3
 80026a0:	4313      	orrs	r3, r2
 80026a2:	b21b      	sxth	r3, r3
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	f8a7 3015 	strh.w	r3, [r7, #21]
 80026aa:	7bfb      	ldrb	r3, [r7, #15]
 80026ac:	75fb      	strb	r3, [r7, #23]
 80026ae:	7c3b      	ldrb	r3, [r7, #16]
 80026b0:	763b      	strb	r3, [r7, #24]
 80026b2:	f107 030c 	add.w	r3, r7, #12
 80026b6:	2105      	movs	r1, #5
 80026b8:	4618      	mov	r0, r3
 80026ba:	f7fe fc7f 	bl	8000fbc <verify_CRC8_check_sum>
 80026be:	4603      	mov	r3, r0
 80026c0:	61fb      	str	r3, [r7, #28]
 80026c2:	7cbb      	ldrb	r3, [r7, #18]
 80026c4:	021b      	lsls	r3, r3, #8
 80026c6:	b21a      	sxth	r2, r3
 80026c8:	7c7b      	ldrb	r3, [r7, #17]
 80026ca:	b21b      	sxth	r3, r3
 80026cc:	4313      	orrs	r3, r2
 80026ce:	b21b      	sxth	r3, r3
 80026d0:	b29b      	uxth	r3, r3
 80026d2:	f8a7 3019 	strh.w	r3, [r7, #25]
 80026d6:	69fb      	ldr	r3, [r7, #28]
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d00c      	beq.n	80026f6 <ref_get_header+0xaa>
 80026dc:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 80026e0:	b29b      	uxth	r3, r3
 80026e2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80026e6:	d806      	bhi.n	80026f6 <ref_get_header+0xaa>
 80026e8:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 80026ec:	b29b      	uxth	r3, r3
 80026ee:	f240 3205 	movw	r2, #773	@ 0x305
 80026f2:	4293      	cmp	r3, r2
 80026f4:	d913      	bls.n	800271e <ref_get_header+0xd2>
 80026f6:	f04f 33ff 	mov.w	r3, #4294967295
 80026fa:	767b      	strb	r3, [r7, #25]
 80026fc:	f04f 33ff 	mov.w	r3, #4294967295
 8002700:	76bb      	strb	r3, [r7, #26]
 8002702:	6838      	ldr	r0, [r7, #0]
 8002704:	f7ff fe25 	bl	8002352 <queue_pop_element>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	461a      	mov	r2, r3
 800270c:	f107 0314 	add.w	r3, r7, #20
 8002710:	6818      	ldr	r0, [r3, #0]
 8002712:	6010      	str	r0, [r2, #0]
 8002714:	8899      	ldrh	r1, [r3, #4]
 8002716:	799b      	ldrb	r3, [r3, #6]
 8002718:	8091      	strh	r1, [r2, #4]
 800271a:	7193      	strb	r3, [r2, #6]
 800271c:	e009      	b.n	8002732 <ref_get_header+0xe6>
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	461a      	mov	r2, r3
 8002722:	f107 0314 	add.w	r3, r7, #20
 8002726:	6818      	ldr	r0, [r3, #0]
 8002728:	6010      	str	r0, [r2, #0]
 800272a:	8899      	ldrh	r1, [r3, #4]
 800272c:	799b      	ldrb	r3, [r3, #6]
 800272e:	8091      	strh	r1, [r2, #4]
 8002730:	7193      	strb	r3, [r2, #6]
 8002732:	6878      	ldr	r0, [r7, #4]
 8002734:	3720      	adds	r7, #32
 8002736:	46bd      	mov	sp, r7
 8002738:	bd80      	pop	{r7, pc}
	...

0800273c <ref_get_msg>:
 800273c:	b5b0      	push	{r4, r5, r7, lr}
 800273e:	b0d8      	sub	sp, #352	@ 0x160
 8002740:	af00      	add	r7, sp, #0
 8002742:	f507 74b0 	add.w	r4, r7, #352	@ 0x160
 8002746:	f5a4 74aa 	sub.w	r4, r4, #340	@ 0x154
 800274a:	6020      	str	r0, [r4, #0]
 800274c:	f507 70b0 	add.w	r0, r7, #352	@ 0x160
 8002750:	f5a0 70ae 	sub.w	r0, r0, #348	@ 0x15c
 8002754:	e880 0006 	stmia.w	r0, {r1, r2}
 8002758:	f507 72b0 	add.w	r2, r7, #352	@ 0x160
 800275c:	f5a2 72b0 	sub.w	r2, r2, #352	@ 0x160
 8002760:	6013      	str	r3, [r2, #0]
 8002762:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002766:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800276a:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800276e:	b29b      	uxth	r3, r3
 8002770:	3309      	adds	r3, #9
 8002772:	b29a      	uxth	r2, r3
 8002774:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8002778:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800277c:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8002780:	6818      	ldr	r0, [r3, #0]
 8002782:	f7ff fe13 	bl	80023ac <queue_pop_elements>
 8002786:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800278a:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800278e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002792:	b29b      	uxth	r3, r3
 8002794:	3309      	adds	r3, #9
 8002796:	461a      	mov	r2, r3
 8002798:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800279c:	4611      	mov	r1, r2
 800279e:	4618      	mov	r0, r3
 80027a0:	f7fe fc80 	bl	80010a4 <verify_CRC16_check_sum>
 80027a4:	f8c7 015c 	str.w	r0, [r7, #348]	@ 0x15c
 80027a8:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d116      	bne.n	80027de <ref_get_msg+0xa2>
 80027b0:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027b4:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027b8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027bc:	801a      	strh	r2, [r3, #0]
 80027be:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027c2:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 80027c6:	681a      	ldr	r2, [r3, #0]
 80027c8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027cc:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027d0:	4610      	mov	r0, r2
 80027d2:	4619      	mov	r1, r3
 80027d4:	2342      	movs	r3, #66	@ 0x42
 80027d6:	461a      	mov	r2, r3
 80027d8:	f018 fc6c 	bl	801b0b4 <memcpy>
 80027dc:	e1a1      	b.n	8002b22 <ref_get_msg+0x3e6>
 80027de:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 80027e2:	3307      	adds	r3, #7
 80027e4:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 80027e8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027ec:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 80027f0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80027f4:	b29a      	uxth	r2, r3
 80027f6:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027fa:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027fe:	801a      	strh	r2, [r3, #0]
 8002800:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002804:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8002808:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 800280c:	b29b      	uxth	r3, r3
 800280e:	f240 3202 	movw	r2, #770	@ 0x302
 8002812:	4293      	cmp	r3, r2
 8002814:	f000 815e 	beq.w	8002ad4 <ref_get_msg+0x398>
 8002818:	f240 3202 	movw	r2, #770	@ 0x302
 800281c:	4293      	cmp	r3, r2
 800281e:	f300 8169 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002822:	f240 3201 	movw	r2, #769	@ 0x301
 8002826:	4293      	cmp	r3, r2
 8002828:	f000 8148 	beq.w	8002abc <ref_get_msg+0x380>
 800282c:	f240 3201 	movw	r2, #769	@ 0x301
 8002830:	4293      	cmp	r3, r2
 8002832:	f300 815f 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002836:	f240 220a 	movw	r2, #522	@ 0x20a
 800283a:	4293      	cmp	r3, r2
 800283c:	f300 815a 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002840:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002844:	dc04      	bgt.n	8002850 <ref_get_msg+0x114>
 8002846:	2b04      	cmp	r3, #4
 8002848:	dc40      	bgt.n	80028cc <ref_get_msg+0x190>
 800284a:	2b00      	cmp	r3, #0
 800284c:	dc2e      	bgt.n	80028ac <ref_get_msg+0x170>
 800284e:	e151      	b.n	8002af4 <ref_get_msg+0x3b8>
 8002850:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 8002854:	2b09      	cmp	r3, #9
 8002856:	f200 814d 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 800285a:	a201      	add	r2, pc, #4	@ (adr r2, 8002860 <ref_get_msg+0x124>)
 800285c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002860:	080029b5 	.word	0x080029b5
 8002864:	080029e5 	.word	0x080029e5
 8002868:	08002a05 	.word	0x08002a05
 800286c:	08002a21 	.word	0x08002a21
 8002870:	08002a39 	.word	0x08002a39
 8002874:	08002a4d 	.word	0x08002a4d
 8002878:	08002a5f 	.word	0x08002a5f
 800287c:	08002a7b 	.word	0x08002a7b
 8002880:	08002a93 	.word	0x08002a93
 8002884:	08002aa9 	.word	0x08002aa9
 8002888:	f2a3 1301 	subw	r3, r3, #257	@ 0x101
 800288c:	2b04      	cmp	r3, #4
 800288e:	f200 8131 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 8002892:	a201      	add	r2, pc, #4	@ (adr r2, 8002898 <ref_get_msg+0x15c>)
 8002894:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002898:	0800294b 	.word	0x0800294b
 800289c:	08002961 	.word	0x08002961
 80028a0:	08002977 	.word	0x08002977
 80028a4:	0800298f 	.word	0x0800298f
 80028a8:	080029a3 	.word	0x080029a3
 80028ac:	3b01      	subs	r3, #1
 80028ae:	2b03      	cmp	r3, #3
 80028b0:	f200 8120 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 80028b4:	a201      	add	r2, pc, #4	@ (adr r2, 80028bc <ref_get_msg+0x180>)
 80028b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028ba:	bf00      	nop
 80028bc:	080028dd 	.word	0x080028dd
 80028c0:	080028f5 	.word	0x080028f5
 80028c4:	08002907 	.word	0x08002907
 80028c8:	08002933 	.word	0x08002933
 80028cc:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80028d0:	f280 8110 	bge.w	8002af4 <ref_get_msg+0x3b8>
 80028d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80028d8:	dcd6      	bgt.n	8002888 <ref_get_msg+0x14c>
 80028da:	e10b      	b.n	8002af4 <ref_get_msg+0x3b8>
 80028dc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028e0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80028e4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80028e8:	3302      	adds	r3, #2
 80028ea:	8811      	ldrh	r1, [r2, #0]
 80028ec:	7892      	ldrb	r2, [r2, #2]
 80028ee:	8019      	strh	r1, [r3, #0]
 80028f0:	709a      	strb	r2, [r3, #2]
 80028f2:	e107      	b.n	8002b04 <ref_get_msg+0x3c8>
 80028f4:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80028f8:	781a      	ldrb	r2, [r3, #0]
 80028fa:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028fe:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002902:	709a      	strb	r2, [r3, #2]
 8002904:	e0fe      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002906:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800290a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800290e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002912:	3302      	adds	r3, #2
 8002914:	6814      	ldr	r4, [r2, #0]
 8002916:	6850      	ldr	r0, [r2, #4]
 8002918:	6891      	ldr	r1, [r2, #8]
 800291a:	68d5      	ldr	r5, [r2, #12]
 800291c:	601c      	str	r4, [r3, #0]
 800291e:	6058      	str	r0, [r3, #4]
 8002920:	6099      	str	r1, [r3, #8]
 8002922:	60dd      	str	r5, [r3, #12]
 8002924:	6914      	ldr	r4, [r2, #16]
 8002926:	6950      	ldr	r0, [r2, #20]
 8002928:	6991      	ldr	r1, [r2, #24]
 800292a:	611c      	str	r4, [r3, #16]
 800292c:	6158      	str	r0, [r3, #20]
 800292e:	6199      	str	r1, [r3, #24]
 8002930:	e0e8      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002932:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002936:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800293a:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 800293e:	3302      	adds	r3, #2
 8002940:	8811      	ldrh	r1, [r2, #0]
 8002942:	7892      	ldrb	r2, [r2, #2]
 8002944:	8019      	strh	r1, [r3, #0]
 8002946:	709a      	strb	r2, [r3, #2]
 8002948:	e0dc      	b.n	8002b04 <ref_get_msg+0x3c8>
 800294a:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	461a      	mov	r2, r3
 8002952:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002956:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800295a:	f8c3 2002 	str.w	r2, [r3, #2]
 800295e:	e0d1      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002960:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	461a      	mov	r2, r3
 8002968:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800296c:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002970:	f8c3 2002 	str.w	r2, [r3, #2]
 8002974:	e0c6      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002976:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800297a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800297e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002982:	3302      	adds	r3, #2
 8002984:	8811      	ldrh	r1, [r2, #0]
 8002986:	7892      	ldrb	r2, [r2, #2]
 8002988:	8019      	strh	r1, [r3, #0]
 800298a:	709a      	strb	r2, [r3, #2]
 800298c:	e0ba      	b.n	8002b04 <ref_get_msg+0x3c8>
 800298e:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002992:	881b      	ldrh	r3, [r3, #0]
 8002994:	b29a      	uxth	r2, r3
 8002996:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800299a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800299e:	805a      	strh	r2, [r3, #2]
 80029a0:	e0b0      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029a2:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80029a6:	781a      	ldrb	r2, [r3, #0]
 80029a8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029ac:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029b0:	709a      	strb	r2, [r3, #2]
 80029b2:	e0a7      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029b4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029b8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029bc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029c0:	3302      	adds	r3, #2
 80029c2:	6810      	ldr	r0, [r2, #0]
 80029c4:	6851      	ldr	r1, [r2, #4]
 80029c6:	6895      	ldr	r5, [r2, #8]
 80029c8:	68d4      	ldr	r4, [r2, #12]
 80029ca:	6018      	str	r0, [r3, #0]
 80029cc:	6059      	str	r1, [r3, #4]
 80029ce:	609d      	str	r5, [r3, #8]
 80029d0:	60dc      	str	r4, [r3, #12]
 80029d2:	6910      	ldr	r0, [r2, #16]
 80029d4:	6951      	ldr	r1, [r2, #20]
 80029d6:	6118      	str	r0, [r3, #16]
 80029d8:	6159      	str	r1, [r3, #20]
 80029da:	8b11      	ldrh	r1, [r2, #24]
 80029dc:	7e92      	ldrb	r2, [r2, #26]
 80029de:	8319      	strh	r1, [r3, #24]
 80029e0:	769a      	strb	r2, [r3, #26]
 80029e2:	e08f      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029e4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029e8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029ec:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029f0:	3302      	adds	r3, #2
 80029f2:	6814      	ldr	r4, [r2, #0]
 80029f4:	6850      	ldr	r0, [r2, #4]
 80029f6:	6891      	ldr	r1, [r2, #8]
 80029f8:	68d2      	ldr	r2, [r2, #12]
 80029fa:	601c      	str	r4, [r3, #0]
 80029fc:	6058      	str	r0, [r3, #4]
 80029fe:	6099      	str	r1, [r3, #8]
 8002a00:	60da      	str	r2, [r3, #12]
 8002a02:	e07f      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a08:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a0c:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a10:	3302      	adds	r3, #2
 8002a12:	6810      	ldr	r0, [r2, #0]
 8002a14:	6851      	ldr	r1, [r2, #4]
 8002a16:	6892      	ldr	r2, [r2, #8]
 8002a18:	6018      	str	r0, [r3, #0]
 8002a1a:	6059      	str	r1, [r3, #4]
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	e071      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a20:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a24:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a28:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a2c:	3302      	adds	r3, #2
 8002a2e:	6811      	ldr	r1, [r2, #0]
 8002a30:	6019      	str	r1, [r3, #0]
 8002a32:	8892      	ldrh	r2, [r2, #4]
 8002a34:	809a      	strh	r2, [r3, #4]
 8002a36:	e065      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a38:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a3c:	881b      	ldrh	r3, [r3, #0]
 8002a3e:	b29a      	uxth	r2, r3
 8002a40:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a44:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a48:	805a      	strh	r2, [r3, #2]
 8002a4a:	e05b      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a4c:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a50:	781a      	ldrb	r2, [r3, #0]
 8002a52:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a56:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a5a:	709a      	strb	r2, [r3, #2]
 8002a5c:	e052      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a5e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a62:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a66:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a6a:	3302      	adds	r3, #2
 8002a6c:	6811      	ldr	r1, [r2, #0]
 8002a6e:	6019      	str	r1, [r3, #0]
 8002a70:	8891      	ldrh	r1, [r2, #4]
 8002a72:	7992      	ldrb	r2, [r2, #6]
 8002a74:	8099      	strh	r1, [r3, #4]
 8002a76:	719a      	strb	r2, [r3, #6]
 8002a78:	e044      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a7a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a7e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a82:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a86:	3302      	adds	r3, #2
 8002a88:	6811      	ldr	r1, [r2, #0]
 8002a8a:	6019      	str	r1, [r3, #0]
 8002a8c:	8892      	ldrh	r2, [r2, #4]
 8002a8e:	809a      	strh	r2, [r3, #4]
 8002a90:	e038      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a92:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	461a      	mov	r2, r3
 8002a9a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a9e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002aa2:	f8c3 2002 	str.w	r2, [r3, #2]
 8002aa6:	e02d      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002aa8:	f107 0314 	add.w	r3, r7, #20
 8002aac:	3302      	adds	r3, #2
 8002aae:	2203      	movs	r2, #3
 8002ab0:	f8d7 1158 	ldr.w	r1, [r7, #344]	@ 0x158
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	f018 fafd 	bl	801b0b4 <memcpy>
 8002aba:	e023      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002abc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ac0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002ac4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ac8:	3302      	adds	r3, #2
 8002aca:	6811      	ldr	r1, [r2, #0]
 8002acc:	6019      	str	r1, [r3, #0]
 8002ace:	8892      	ldrh	r2, [r2, #4]
 8002ad0:	809a      	strh	r2, [r3, #4]
 8002ad2:	e017      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002ad4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ad8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002adc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ae0:	3302      	adds	r3, #2
 8002ae2:	6814      	ldr	r4, [r2, #0]
 8002ae4:	6850      	ldr	r0, [r2, #4]
 8002ae6:	6891      	ldr	r1, [r2, #8]
 8002ae8:	601c      	str	r4, [r3, #0]
 8002aea:	6058      	str	r0, [r3, #4]
 8002aec:	6099      	str	r1, [r3, #8]
 8002aee:	7b12      	ldrb	r2, [r2, #12]
 8002af0:	731a      	strb	r2, [r3, #12]
 8002af2:	e007      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002af4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002af8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002afc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002b00:	801a      	strh	r2, [r3, #0]
 8002b02:	bf00      	nop
 8002b04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b08:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b0c:	681a      	ldr	r2, [r3, #0]
 8002b0e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b12:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002b16:	4610      	mov	r0, r2
 8002b18:	4619      	mov	r1, r3
 8002b1a:	2342      	movs	r3, #66	@ 0x42
 8002b1c:	461a      	mov	r2, r3
 8002b1e:	f018 fac9 	bl	801b0b4 <memcpy>
 8002b22:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b26:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b2a:	6818      	ldr	r0, [r3, #0]
 8002b2c:	f507 77b0 	add.w	r7, r7, #352	@ 0x160
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bdb0      	pop	{r4, r5, r7, pc}

08002b34 <ref_usart_start>:
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b086      	sub	sp, #24
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	603b      	str	r3, [r7, #0]
 8002b40:	4613      	mov	r3, r2
 8002b42:	80fb      	strh	r3, [r7, #6]
 8002b44:	4a3a      	ldr	r2, [pc, #232]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	6013      	str	r3, [r2, #0]
 8002b4a:	4b39      	ldr	r3, [pc, #228]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f7ff fb6a 	bl	8002228 <queue_init>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8002b5a:	b2db      	uxtb	r3, r3
 8002b5c:	2b20      	cmp	r3, #32
 8002b5e:	d162      	bne.n	8002c26 <ref_usart_start+0xf2>
 8002b60:	68bb      	ldr	r3, [r7, #8]
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d002      	beq.n	8002b6c <ref_usart_start+0x38>
 8002b66:	88fb      	ldrh	r3, [r7, #6]
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d101      	bne.n	8002b70 <ref_usart_start+0x3c>
 8002b6c:	2301      	movs	r3, #1
 8002b6e:	e05b      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b76:	2b01      	cmp	r3, #1
 8002b78:	d101      	bne.n	8002b7e <ref_usart_start+0x4a>
 8002b7a:	2302      	movs	r3, #2
 8002b7c:	e054      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	2201      	movs	r2, #1
 8002b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b86:	68ba      	ldr	r2, [r7, #8]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	88fa      	ldrh	r2, [r7, #6]
 8002b90:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	2200      	movs	r2, #0
 8002b96:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	2222      	movs	r2, #34	@ 0x22
 8002b9c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ba4:	4a23      	ldr	r2, [pc, #140]	@ (8002c34 <ref_usart_start+0x100>)
 8002ba6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bac:	4a22      	ldr	r2, [pc, #136]	@ (8002c38 <ref_usart_start+0x104>)
 8002bae:	641a      	str	r2, [r3, #64]	@ 0x40
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	651a      	str	r2, [r3, #80]	@ 0x50
 8002bb8:	f107 0308 	add.w	r3, r7, #8
 8002bbc:	617b      	str	r3, [r7, #20]
 8002bbe:	68fb      	ldr	r3, [r7, #12]
 8002bc0:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	3304      	adds	r3, #4
 8002bc8:	4619      	mov	r1, r3
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	681a      	ldr	r2, [r3, #0]
 8002bce:	88fb      	ldrh	r3, [r7, #6]
 8002bd0:	f009 fd8a 	bl	800c6e8 <HAL_DMA_Start_IT>
 8002bd4:	2300      	movs	r3, #0
 8002bd6:	613b      	str	r3, [r7, #16]
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	613b      	str	r3, [r7, #16]
 8002be0:	68fb      	ldr	r3, [r7, #12]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	693b      	ldr	r3, [r7, #16]
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	2200      	movs	r2, #0
 8002bee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	68da      	ldr	r2, [r3, #12]
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002c00:	60da      	str	r2, [r3, #12]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	695a      	ldr	r2, [r3, #20]
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f042 0201 	orr.w	r2, r2, #1
 8002c10:	615a      	str	r2, [r3, #20]
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	695a      	ldr	r2, [r3, #20]
 8002c18:	68fb      	ldr	r3, [r7, #12]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002c20:	615a      	str	r2, [r3, #20]
 8002c22:	2300      	movs	r3, #0
 8002c24:	e000      	b.n	8002c28 <ref_usart_start+0xf4>
 8002c26:	2302      	movs	r3, #2
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3718      	adds	r7, #24
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	bd80      	pop	{r7, pc}
 8002c30:	20000898 	.word	0x20000898
 8002c34:	08002c99 	.word	0x08002c99
 8002c38:	08002c3d 	.word	0x08002c3d

08002c3c <ref_half_cplt_isr>:
 8002c3c:	b580      	push	{r7, lr}
 8002c3e:	b084      	sub	sp, #16
 8002c40:	af00      	add	r7, sp, #0
 8002c42:	6078      	str	r0, [r7, #4]
 8002c44:	4b11      	ldr	r3, [pc, #68]	@ (8002c8c <ref_half_cplt_isr+0x50>)
 8002c46:	681a      	ldr	r2, [r3, #0]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	68db      	ldr	r3, [r3, #12]
 8002c4e:	781b      	ldrb	r3, [r3, #0]
 8002c50:	4619      	mov	r1, r3
 8002c52:	4610      	mov	r0, r2
 8002c54:	f7ff fb2f 	bl	80022b6 <queue_append_byte>
 8002c58:	2300      	movs	r3, #0
 8002c5a:	60fb      	str	r3, [r7, #12]
 8002c5c:	4b0c      	ldr	r3, [pc, #48]	@ (8002c90 <ref_half_cplt_isr+0x54>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f107 020c 	add.w	r2, r7, #12
 8002c64:	4611      	mov	r1, r2
 8002c66:	4618      	mov	r0, r3
 8002c68:	f016 fa4c 	bl	8019104 <vTaskNotifyGiveFromISR>
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d007      	beq.n	8002c82 <ref_half_cplt_isr+0x46>
 8002c72:	4b08      	ldr	r3, [pc, #32]	@ (8002c94 <ref_half_cplt_isr+0x58>)
 8002c74:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002c78:	601a      	str	r2, [r3, #0]
 8002c7a:	f3bf 8f4f 	dsb	sy
 8002c7e:	f3bf 8f6f 	isb	sy
 8002c82:	bf00      	nop
 8002c84:	3710      	adds	r7, #16
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	bf00      	nop
 8002c8c:	20000898 	.word	0x20000898
 8002c90:	20003790 	.word	0x20003790
 8002c94:	e000ed04 	.word	0xe000ed04

08002c98 <ref_full_cplt_isr>:
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	6078      	str	r0, [r7, #4]
 8002ca0:	4b11      	ldr	r3, [pc, #68]	@ (8002ce8 <ref_full_cplt_isr+0x50>)
 8002ca2:	681a      	ldr	r2, [r3, #0]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	3301      	adds	r3, #1
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	4619      	mov	r1, r3
 8002cb0:	4610      	mov	r0, r2
 8002cb2:	f7ff fb00 	bl	80022b6 <queue_append_byte>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	60fb      	str	r3, [r7, #12]
 8002cba:	4b0c      	ldr	r3, [pc, #48]	@ (8002cec <ref_full_cplt_isr+0x54>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	f107 020c 	add.w	r2, r7, #12
 8002cc2:	4611      	mov	r1, r2
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	f016 fa1d 	bl	8019104 <vTaskNotifyGiveFromISR>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d007      	beq.n	8002ce0 <ref_full_cplt_isr+0x48>
 8002cd0:	4b07      	ldr	r3, [pc, #28]	@ (8002cf0 <ref_full_cplt_isr+0x58>)
 8002cd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002cd6:	601a      	str	r2, [r3, #0]
 8002cd8:	f3bf 8f4f 	dsb	sy
 8002cdc:	f3bf 8f6f 	isb	sy
 8002ce0:	bf00      	nop
 8002ce2:	3710      	adds	r7, #16
 8002ce4:	46bd      	mov	sp, r7
 8002ce6:	bd80      	pop	{r7, pc}
 8002ce8:	20000898 	.word	0x20000898
 8002cec:	20003790 	.word	0x20003790
 8002cf0:	e000ed04 	.word	0xe000ed04

08002cf4 <MX_ADC3_Init>:
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b084      	sub	sp, #16
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	463b      	mov	r3, r7
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	609a      	str	r2, [r3, #8]
 8002d04:	60da      	str	r2, [r3, #12]
 8002d06:	4b21      	ldr	r3, [pc, #132]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d08:	4a21      	ldr	r2, [pc, #132]	@ (8002d90 <MX_ADC3_Init+0x9c>)
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	4b1f      	ldr	r3, [pc, #124]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d0e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002d12:	605a      	str	r2, [r3, #4]
 8002d14:	4b1d      	ldr	r3, [pc, #116]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d16:	2200      	movs	r2, #0
 8002d18:	609a      	str	r2, [r3, #8]
 8002d1a:	4b1c      	ldr	r3, [pc, #112]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	611a      	str	r2, [r3, #16]
 8002d20:	4b1a      	ldr	r3, [pc, #104]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	761a      	strb	r2, [r3, #24]
 8002d26:	4b19      	ldr	r3, [pc, #100]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d28:	2200      	movs	r2, #0
 8002d2a:	f883 2020 	strb.w	r2, [r3, #32]
 8002d2e:	4b17      	ldr	r3, [pc, #92]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d30:	2200      	movs	r2, #0
 8002d32:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d34:	4b15      	ldr	r3, [pc, #84]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d36:	4a17      	ldr	r2, [pc, #92]	@ (8002d94 <MX_ADC3_Init+0xa0>)
 8002d38:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d3a:	4b14      	ldr	r3, [pc, #80]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	60da      	str	r2, [r3, #12]
 8002d40:	4b12      	ldr	r3, [pc, #72]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d42:	2201      	movs	r2, #1
 8002d44:	61da      	str	r2, [r3, #28]
 8002d46:	4b11      	ldr	r3, [pc, #68]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d48:	2200      	movs	r2, #0
 8002d4a:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
 8002d4e:	4b0f      	ldr	r3, [pc, #60]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d50:	2201      	movs	r2, #1
 8002d52:	615a      	str	r2, [r3, #20]
 8002d54:	480d      	ldr	r0, [pc, #52]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d56:	f008 fa23 	bl	800b1a0 <HAL_ADC_Init>
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d001      	beq.n	8002d64 <MX_ADC3_Init+0x70>
 8002d60:	f000 fd4a 	bl	80037f8 <Error_Handler>
 8002d64:	2308      	movs	r3, #8
 8002d66:	603b      	str	r3, [r7, #0]
 8002d68:	2301      	movs	r3, #1
 8002d6a:	607b      	str	r3, [r7, #4]
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	60bb      	str	r3, [r7, #8]
 8002d70:	463b      	mov	r3, r7
 8002d72:	4619      	mov	r1, r3
 8002d74:	4805      	ldr	r0, [pc, #20]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d76:	f008 fa57 	bl	800b228 <HAL_ADC_ConfigChannel>
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d001      	beq.n	8002d84 <MX_ADC3_Init+0x90>
 8002d80:	f000 fd3a 	bl	80037f8 <Error_Handler>
 8002d84:	bf00      	nop
 8002d86:	3710      	adds	r7, #16
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd80      	pop	{r7, pc}
 8002d8c:	2000089c 	.word	0x2000089c
 8002d90:	40012200 	.word	0x40012200
 8002d94:	0f000001 	.word	0x0f000001

08002d98 <HAL_ADC_MspInit>:
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	b08a      	sub	sp, #40	@ 0x28
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
 8002da0:	f107 0314 	add.w	r3, r7, #20
 8002da4:	2200      	movs	r2, #0
 8002da6:	601a      	str	r2, [r3, #0]
 8002da8:	605a      	str	r2, [r3, #4]
 8002daa:	609a      	str	r2, [r3, #8]
 8002dac:	60da      	str	r2, [r3, #12]
 8002dae:	611a      	str	r2, [r3, #16]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	4a17      	ldr	r2, [pc, #92]	@ (8002e14 <HAL_ADC_MspInit+0x7c>)
 8002db6:	4293      	cmp	r3, r2
 8002db8:	d128      	bne.n	8002e0c <HAL_ADC_MspInit+0x74>
 8002dba:	2300      	movs	r3, #0
 8002dbc:	613b      	str	r3, [r7, #16]
 8002dbe:	4b16      	ldr	r3, [pc, #88]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dc2:	4a15      	ldr	r2, [pc, #84]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002dc8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002dca:	4b13      	ldr	r3, [pc, #76]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dce:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	693b      	ldr	r3, [r7, #16]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	60fb      	str	r3, [r7, #12]
 8002dda:	4b0f      	ldr	r3, [pc, #60]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dde:	4a0e      	ldr	r2, [pc, #56]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de0:	f043 0320 	orr.w	r3, r3, #32
 8002de4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002de6:	4b0c      	ldr	r3, [pc, #48]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dea:	f003 0320 	and.w	r3, r3, #32
 8002dee:	60fb      	str	r3, [r7, #12]
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002df6:	617b      	str	r3, [r7, #20]
 8002df8:	2303      	movs	r3, #3
 8002dfa:	61bb      	str	r3, [r7, #24]
 8002dfc:	2300      	movs	r3, #0
 8002dfe:	61fb      	str	r3, [r7, #28]
 8002e00:	f107 0314 	add.w	r3, r7, #20
 8002e04:	4619      	mov	r1, r3
 8002e06:	4805      	ldr	r0, [pc, #20]	@ (8002e1c <HAL_ADC_MspInit+0x84>)
 8002e08:	f009 ffce 	bl	800cda8 <HAL_GPIO_Init>
 8002e0c:	bf00      	nop
 8002e0e:	3728      	adds	r7, #40	@ 0x28
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	40012200 	.word	0x40012200
 8002e18:	40023800 	.word	0x40023800
 8002e1c:	40021400 	.word	0x40021400

08002e20 <MX_CAN1_Init>:
 8002e20:	b580      	push	{r7, lr}
 8002e22:	af00      	add	r7, sp, #0
 8002e24:	4b17      	ldr	r3, [pc, #92]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e26:	4a18      	ldr	r2, [pc, #96]	@ (8002e88 <MX_CAN1_Init+0x68>)
 8002e28:	601a      	str	r2, [r3, #0]
 8002e2a:	4b16      	ldr	r3, [pc, #88]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e2c:	2203      	movs	r2, #3
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	4b14      	ldr	r3, [pc, #80]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	609a      	str	r2, [r3, #8]
 8002e36:	4b13      	ldr	r3, [pc, #76]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e38:	2200      	movs	r2, #0
 8002e3a:	60da      	str	r2, [r3, #12]
 8002e3c:	4b11      	ldr	r3, [pc, #68]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e3e:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8002e42:	611a      	str	r2, [r3, #16]
 8002e44:	4b0f      	ldr	r3, [pc, #60]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e46:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8002e4a:	615a      	str	r2, [r3, #20]
 8002e4c:	4b0d      	ldr	r3, [pc, #52]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e4e:	2200      	movs	r2, #0
 8002e50:	761a      	strb	r2, [r3, #24]
 8002e52:	4b0c      	ldr	r3, [pc, #48]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	765a      	strb	r2, [r3, #25]
 8002e58:	4b0a      	ldr	r3, [pc, #40]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e5a:	2200      	movs	r2, #0
 8002e5c:	769a      	strb	r2, [r3, #26]
 8002e5e:	4b09      	ldr	r3, [pc, #36]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e60:	2200      	movs	r2, #0
 8002e62:	76da      	strb	r2, [r3, #27]
 8002e64:	4b07      	ldr	r3, [pc, #28]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	771a      	strb	r2, [r3, #28]
 8002e6a:	4b06      	ldr	r3, [pc, #24]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	775a      	strb	r2, [r3, #29]
 8002e70:	4804      	ldr	r0, [pc, #16]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e72:	f008 fbf7 	bl	800b664 <HAL_CAN_Init>
 8002e76:	4603      	mov	r3, r0
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d001      	beq.n	8002e80 <MX_CAN1_Init+0x60>
 8002e7c:	f000 fcbc 	bl	80037f8 <Error_Handler>
 8002e80:	bf00      	nop
 8002e82:	bd80      	pop	{r7, pc}
 8002e84:	200008e4 	.word	0x200008e4
 8002e88:	40006400 	.word	0x40006400

08002e8c <MX_CAN2_Init>:
 8002e8c:	b580      	push	{r7, lr}
 8002e8e:	af00      	add	r7, sp, #0
 8002e90:	4b17      	ldr	r3, [pc, #92]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e92:	4a18      	ldr	r2, [pc, #96]	@ (8002ef4 <MX_CAN2_Init+0x68>)
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	4b16      	ldr	r3, [pc, #88]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e98:	2203      	movs	r2, #3
 8002e9a:	605a      	str	r2, [r3, #4]
 8002e9c:	4b14      	ldr	r3, [pc, #80]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	609a      	str	r2, [r3, #8]
 8002ea2:	4b13      	ldr	r3, [pc, #76]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	60da      	str	r2, [r3, #12]
 8002ea8:	4b11      	ldr	r3, [pc, #68]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eaa:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8002eae:	611a      	str	r2, [r3, #16]
 8002eb0:	4b0f      	ldr	r3, [pc, #60]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eb2:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8002eb6:	615a      	str	r2, [r3, #20]
 8002eb8:	4b0d      	ldr	r3, [pc, #52]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eba:	2200      	movs	r2, #0
 8002ebc:	761a      	strb	r2, [r3, #24]
 8002ebe:	4b0c      	ldr	r3, [pc, #48]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	765a      	strb	r2, [r3, #25]
 8002ec4:	4b0a      	ldr	r3, [pc, #40]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	769a      	strb	r2, [r3, #26]
 8002eca:	4b09      	ldr	r3, [pc, #36]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	76da      	strb	r2, [r3, #27]
 8002ed0:	4b07      	ldr	r3, [pc, #28]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	771a      	strb	r2, [r3, #28]
 8002ed6:	4b06      	ldr	r3, [pc, #24]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	775a      	strb	r2, [r3, #29]
 8002edc:	4804      	ldr	r0, [pc, #16]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ede:	f008 fbc1 	bl	800b664 <HAL_CAN_Init>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	d001      	beq.n	8002eec <MX_CAN2_Init+0x60>
 8002ee8:	f000 fc86 	bl	80037f8 <Error_Handler>
 8002eec:	bf00      	nop
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	2000090c 	.word	0x2000090c
 8002ef4:	40006800 	.word	0x40006800

08002ef8 <HAL_CAN_MspInit>:
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b08c      	sub	sp, #48	@ 0x30
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	f107 031c 	add.w	r3, r7, #28
 8002f04:	2200      	movs	r2, #0
 8002f06:	601a      	str	r2, [r3, #0]
 8002f08:	605a      	str	r2, [r3, #4]
 8002f0a:	609a      	str	r2, [r3, #8]
 8002f0c:	60da      	str	r2, [r3, #12]
 8002f0e:	611a      	str	r2, [r3, #16]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	4a52      	ldr	r2, [pc, #328]	@ (8003060 <HAL_CAN_MspInit+0x168>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d145      	bne.n	8002fa6 <HAL_CAN_MspInit+0xae>
 8002f1a:	4b52      	ldr	r3, [pc, #328]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	3301      	adds	r3, #1
 8002f20:	4a50      	ldr	r2, [pc, #320]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f22:	6013      	str	r3, [r2, #0]
 8002f24:	4b4f      	ldr	r3, [pc, #316]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	2b01      	cmp	r3, #1
 8002f2a:	d10d      	bne.n	8002f48 <HAL_CAN_MspInit+0x50>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	61bb      	str	r3, [r7, #24]
 8002f30:	4b4d      	ldr	r3, [pc, #308]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f34:	4a4c      	ldr	r2, [pc, #304]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f36:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002f3a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f3c:	4b4a      	ldr	r3, [pc, #296]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f40:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f44:	61bb      	str	r3, [r7, #24]
 8002f46:	69bb      	ldr	r3, [r7, #24]
 8002f48:	2300      	movs	r3, #0
 8002f4a:	617b      	str	r3, [r7, #20]
 8002f4c:	4b46      	ldr	r3, [pc, #280]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f50:	4a45      	ldr	r2, [pc, #276]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f52:	f043 0308 	orr.w	r3, r3, #8
 8002f56:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f58:	4b43      	ldr	r3, [pc, #268]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f5c:	f003 0308 	and.w	r3, r3, #8
 8002f60:	617b      	str	r3, [r7, #20]
 8002f62:	697b      	ldr	r3, [r7, #20]
 8002f64:	2303      	movs	r3, #3
 8002f66:	61fb      	str	r3, [r7, #28]
 8002f68:	2302      	movs	r3, #2
 8002f6a:	623b      	str	r3, [r7, #32]
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f70:	2303      	movs	r3, #3
 8002f72:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002f74:	2309      	movs	r3, #9
 8002f76:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002f78:	f107 031c 	add.w	r3, r7, #28
 8002f7c:	4619      	mov	r1, r3
 8002f7e:	483b      	ldr	r0, [pc, #236]	@ (800306c <HAL_CAN_MspInit+0x174>)
 8002f80:	f009 ff12 	bl	800cda8 <HAL_GPIO_Init>
 8002f84:	2200      	movs	r2, #0
 8002f86:	2105      	movs	r1, #5
 8002f88:	2014      	movs	r0, #20
 8002f8a:	f009 fac7 	bl	800c51c <HAL_NVIC_SetPriority>
 8002f8e:	2014      	movs	r0, #20
 8002f90:	f009 fae0 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8002f94:	2200      	movs	r2, #0
 8002f96:	2105      	movs	r1, #5
 8002f98:	2015      	movs	r0, #21
 8002f9a:	f009 fabf 	bl	800c51c <HAL_NVIC_SetPriority>
 8002f9e:	2015      	movs	r0, #21
 8002fa0:	f009 fad8 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8002fa4:	e057      	b.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a31      	ldr	r2, [pc, #196]	@ (8003070 <HAL_CAN_MspInit+0x178>)
 8002fac:	4293      	cmp	r3, r2
 8002fae:	d152      	bne.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	613b      	str	r3, [r7, #16]
 8002fb4:	4b2c      	ldr	r3, [pc, #176]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb8:	4a2b      	ldr	r2, [pc, #172]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fba:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002fbe:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fc0:	4b29      	ldr	r3, [pc, #164]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fc4:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002fc8:	613b      	str	r3, [r7, #16]
 8002fca:	693b      	ldr	r3, [r7, #16]
 8002fcc:	4b25      	ldr	r3, [pc, #148]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	3301      	adds	r3, #1
 8002fd2:	4a24      	ldr	r2, [pc, #144]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd4:	6013      	str	r3, [r2, #0]
 8002fd6:	4b23      	ldr	r3, [pc, #140]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	2b01      	cmp	r3, #1
 8002fdc:	d10d      	bne.n	8002ffa <HAL_CAN_MspInit+0x102>
 8002fde:	2300      	movs	r3, #0
 8002fe0:	60fb      	str	r3, [r7, #12]
 8002fe2:	4b21      	ldr	r3, [pc, #132]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fe6:	4a20      	ldr	r2, [pc, #128]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002fec:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fee:	4b1e      	ldr	r3, [pc, #120]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002ff0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ff2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ff6:	60fb      	str	r3, [r7, #12]
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	2300      	movs	r3, #0
 8002ffc:	60bb      	str	r3, [r7, #8]
 8002ffe:	4b1a      	ldr	r3, [pc, #104]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003000:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003002:	4a19      	ldr	r2, [pc, #100]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003004:	f043 0302 	orr.w	r3, r3, #2
 8003008:	6313      	str	r3, [r2, #48]	@ 0x30
 800300a:	4b17      	ldr	r3, [pc, #92]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 800300c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800300e:	f003 0302 	and.w	r3, r3, #2
 8003012:	60bb      	str	r3, [r7, #8]
 8003014:	68bb      	ldr	r3, [r7, #8]
 8003016:	2360      	movs	r3, #96	@ 0x60
 8003018:	61fb      	str	r3, [r7, #28]
 800301a:	2302      	movs	r3, #2
 800301c:	623b      	str	r3, [r7, #32]
 800301e:	2300      	movs	r3, #0
 8003020:	627b      	str	r3, [r7, #36]	@ 0x24
 8003022:	2303      	movs	r3, #3
 8003024:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003026:	2309      	movs	r3, #9
 8003028:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800302a:	f107 031c 	add.w	r3, r7, #28
 800302e:	4619      	mov	r1, r3
 8003030:	4810      	ldr	r0, [pc, #64]	@ (8003074 <HAL_CAN_MspInit+0x17c>)
 8003032:	f009 feb9 	bl	800cda8 <HAL_GPIO_Init>
 8003036:	2200      	movs	r2, #0
 8003038:	2105      	movs	r1, #5
 800303a:	2040      	movs	r0, #64	@ 0x40
 800303c:	f009 fa6e 	bl	800c51c <HAL_NVIC_SetPriority>
 8003040:	2040      	movs	r0, #64	@ 0x40
 8003042:	f009 fa87 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003046:	2200      	movs	r2, #0
 8003048:	2105      	movs	r1, #5
 800304a:	2041      	movs	r0, #65	@ 0x41
 800304c:	f009 fa66 	bl	800c51c <HAL_NVIC_SetPriority>
 8003050:	2041      	movs	r0, #65	@ 0x41
 8003052:	f009 fa7f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003056:	bf00      	nop
 8003058:	3730      	adds	r7, #48	@ 0x30
 800305a:	46bd      	mov	sp, r7
 800305c:	bd80      	pop	{r7, pc}
 800305e:	bf00      	nop
 8003060:	40006400 	.word	0x40006400
 8003064:	20000934 	.word	0x20000934
 8003068:	40023800 	.word	0x40023800
 800306c:	40020c00 	.word	0x40020c00
 8003070:	40006800 	.word	0x40006800
 8003074:	40020400 	.word	0x40020400

08003078 <MX_DMA_Init>:
 8003078:	b580      	push	{r7, lr}
 800307a:	b082      	sub	sp, #8
 800307c:	af00      	add	r7, sp, #0
 800307e:	2300      	movs	r3, #0
 8003080:	607b      	str	r3, [r7, #4]
 8003082:	4b2f      	ldr	r3, [pc, #188]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003086:	4a2e      	ldr	r2, [pc, #184]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003088:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800308c:	6313      	str	r3, [r2, #48]	@ 0x30
 800308e:	4b2c      	ldr	r3, [pc, #176]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003092:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003096:	607b      	str	r3, [r7, #4]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2300      	movs	r3, #0
 800309c:	603b      	str	r3, [r7, #0]
 800309e:	4b28      	ldr	r3, [pc, #160]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030a2:	4a27      	ldr	r2, [pc, #156]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80030a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80030aa:	4b25      	ldr	r3, [pc, #148]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ae:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80030b2:	603b      	str	r3, [r7, #0]
 80030b4:	683b      	ldr	r3, [r7, #0]
 80030b6:	2200      	movs	r2, #0
 80030b8:	2105      	movs	r1, #5
 80030ba:	200c      	movs	r0, #12
 80030bc:	f009 fa2e 	bl	800c51c <HAL_NVIC_SetPriority>
 80030c0:	200c      	movs	r0, #12
 80030c2:	f009 fa47 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80030c6:	2200      	movs	r2, #0
 80030c8:	2105      	movs	r1, #5
 80030ca:	200d      	movs	r0, #13
 80030cc:	f009 fa26 	bl	800c51c <HAL_NVIC_SetPriority>
 80030d0:	200d      	movs	r0, #13
 80030d2:	f009 fa3f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80030d6:	2200      	movs	r2, #0
 80030d8:	2105      	movs	r1, #5
 80030da:	200f      	movs	r0, #15
 80030dc:	f009 fa1e 	bl	800c51c <HAL_NVIC_SetPriority>
 80030e0:	200f      	movs	r0, #15
 80030e2:	f009 fa37 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80030e6:	2200      	movs	r2, #0
 80030e8:	2105      	movs	r1, #5
 80030ea:	2038      	movs	r0, #56	@ 0x38
 80030ec:	f009 fa16 	bl	800c51c <HAL_NVIC_SetPriority>
 80030f0:	2038      	movs	r0, #56	@ 0x38
 80030f2:	f009 fa2f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80030f6:	2200      	movs	r2, #0
 80030f8:	2105      	movs	r1, #5
 80030fa:	2039      	movs	r0, #57	@ 0x39
 80030fc:	f009 fa0e 	bl	800c51c <HAL_NVIC_SetPriority>
 8003100:	2039      	movs	r0, #57	@ 0x39
 8003102:	f009 fa27 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003106:	2200      	movs	r2, #0
 8003108:	2105      	movs	r1, #5
 800310a:	203b      	movs	r0, #59	@ 0x3b
 800310c:	f009 fa06 	bl	800c51c <HAL_NVIC_SetPriority>
 8003110:	203b      	movs	r0, #59	@ 0x3b
 8003112:	f009 fa1f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003116:	2200      	movs	r2, #0
 8003118:	2105      	movs	r1, #5
 800311a:	2044      	movs	r0, #68	@ 0x44
 800311c:	f009 f9fe 	bl	800c51c <HAL_NVIC_SetPriority>
 8003120:	2044      	movs	r0, #68	@ 0x44
 8003122:	f009 fa17 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003126:	2200      	movs	r2, #0
 8003128:	2105      	movs	r1, #5
 800312a:	2045      	movs	r0, #69	@ 0x45
 800312c:	f009 f9f6 	bl	800c51c <HAL_NVIC_SetPriority>
 8003130:	2045      	movs	r0, #69	@ 0x45
 8003132:	f009 fa0f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003136:	bf00      	nop
 8003138:	3708      	adds	r7, #8
 800313a:	46bd      	mov	sp, r7
 800313c:	bd80      	pop	{r7, pc}
 800313e:	bf00      	nop
 8003140:	40023800 	.word	0x40023800

08003144 <configureTimerForRunTimeStats>:
 8003144:	b480      	push	{r7}
 8003146:	af00      	add	r7, sp, #0
 8003148:	bf00      	nop
 800314a:	46bd      	mov	sp, r7
 800314c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003150:	4770      	bx	lr

08003152 <getRunTimeCounterValue>:
 8003152:	b480      	push	{r7}
 8003154:	af00      	add	r7, sp, #0
 8003156:	2300      	movs	r3, #0
 8003158:	4618      	mov	r0, r3
 800315a:	46bd      	mov	sp, r7
 800315c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003160:	4770      	bx	lr

08003162 <vApplicationStackOverflowHook>:
 8003162:	b480      	push	{r7}
 8003164:	b083      	sub	sp, #12
 8003166:	af00      	add	r7, sp, #0
 8003168:	6078      	str	r0, [r7, #4]
 800316a:	6039      	str	r1, [r7, #0]
 800316c:	bf00      	nop
 800316e:	370c      	adds	r7, #12
 8003170:	46bd      	mov	sp, r7
 8003172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003176:	4770      	bx	lr

08003178 <vApplicationGetIdleTaskMemory>:
 8003178:	b480      	push	{r7}
 800317a:	b085      	sub	sp, #20
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	4a07      	ldr	r2, [pc, #28]	@ (80031a4 <vApplicationGetIdleTaskMemory+0x2c>)
 8003188:	601a      	str	r2, [r3, #0]
 800318a:	68bb      	ldr	r3, [r7, #8]
 800318c:	4a06      	ldr	r2, [pc, #24]	@ (80031a8 <vApplicationGetIdleTaskMemory+0x30>)
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003196:	601a      	str	r2, [r3, #0]
 8003198:	bf00      	nop
 800319a:	3714      	adds	r7, #20
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr
 80031a4:	20000940 	.word	0x20000940
 80031a8:	20000ac0 	.word	0x20000ac0

080031ac <vApplicationGetTimerTaskMemory>:
 80031ac:	b480      	push	{r7}
 80031ae:	b085      	sub	sp, #20
 80031b0:	af00      	add	r7, sp, #0
 80031b2:	60f8      	str	r0, [r7, #12]
 80031b4:	60b9      	str	r1, [r7, #8]
 80031b6:	607a      	str	r2, [r7, #4]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	4a07      	ldr	r2, [pc, #28]	@ (80031d8 <vApplicationGetTimerTaskMemory+0x2c>)
 80031bc:	601a      	str	r2, [r3, #0]
 80031be:	68bb      	ldr	r3, [r7, #8]
 80031c0:	4a06      	ldr	r2, [pc, #24]	@ (80031dc <vApplicationGetTimerTaskMemory+0x30>)
 80031c2:	601a      	str	r2, [r3, #0]
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031ca:	601a      	str	r2, [r3, #0]
 80031cc:	bf00      	nop
 80031ce:	3714      	adds	r7, #20
 80031d0:	46bd      	mov	sp, r7
 80031d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d6:	4770      	bx	lr
 80031d8:	20000ec0 	.word	0x20000ec0
 80031dc:	20001040 	.word	0x20001040

080031e0 <MX_FREERTOS_Init>:
 80031e0:	b5b0      	push	{r4, r5, r7, lr}
 80031e2:	b08a      	sub	sp, #40	@ 0x28
 80031e4:	af02      	add	r7, sp, #8
 80031e6:	4b10      	ldr	r3, [pc, #64]	@ (8003228 <MX_FREERTOS_Init+0x48>)
 80031e8:	1d3c      	adds	r4, r7, #4
 80031ea:	461d      	mov	r5, r3
 80031ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80031ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80031f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80031f4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80031f8:	1d3b      	adds	r3, r7, #4
 80031fa:	2100      	movs	r1, #0
 80031fc:	4618      	mov	r0, r3
 80031fe:	f013 ff5a 	bl	80170b6 <osThreadCreate>
 8003202:	4603      	mov	r3, r0
 8003204:	4a09      	ldr	r2, [pc, #36]	@ (800322c <MX_FREERTOS_Init+0x4c>)
 8003206:	6013      	str	r3, [r2, #0]
 8003208:	4b09      	ldr	r3, [pc, #36]	@ (8003230 <MX_FREERTOS_Init+0x50>)
 800320a:	9301      	str	r3, [sp, #4]
 800320c:	230c      	movs	r3, #12
 800320e:	9300      	str	r3, [sp, #0]
 8003210:	2301      	movs	r3, #1
 8003212:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003216:	4907      	ldr	r1, [pc, #28]	@ (8003234 <MX_FREERTOS_Init+0x54>)
 8003218:	4807      	ldr	r0, [pc, #28]	@ (8003238 <MX_FREERTOS_Init+0x58>)
 800321a:	f014 ff4f 	bl	80180bc <xTaskCreate>
 800321e:	bf00      	nop
 8003220:	3720      	adds	r7, #32
 8003222:	46bd      	mov	sp, r7
 8003224:	bdb0      	pop	{r4, r5, r7, pc}
 8003226:	bf00      	nop
 8003228:	08020fc8 	.word	0x08020fc8
 800322c:	2000093c 	.word	0x2000093c
 8003230:	20000938 	.word	0x20000938
 8003234:	08020fb0 	.word	0x08020fb0
 8003238:	080086c1 	.word	0x080086c1

0800323c <StartDefaultTask>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b082      	sub	sp, #8
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	f017 f818 	bl	801a278 <MX_USB_DEVICE_Init>
 8003248:	4801      	ldr	r0, [pc, #4]	@ (8003250 <StartDefaultTask+0x14>)
 800324a:	f013 ff80 	bl	801714e <osDelay>
 800324e:	e7fb      	b.n	8003248 <StartDefaultTask+0xc>
 8003250:	000186a0 	.word	0x000186a0

08003254 <MX_GPIO_Init>:
 8003254:	b580      	push	{r7, lr}
 8003256:	b08e      	sub	sp, #56	@ 0x38
 8003258:	af00      	add	r7, sp, #0
 800325a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800325e:	2200      	movs	r2, #0
 8003260:	601a      	str	r2, [r3, #0]
 8003262:	605a      	str	r2, [r3, #4]
 8003264:	609a      	str	r2, [r3, #8]
 8003266:	60da      	str	r2, [r3, #12]
 8003268:	611a      	str	r2, [r3, #16]
 800326a:	2300      	movs	r3, #0
 800326c:	623b      	str	r3, [r7, #32]
 800326e:	4b84      	ldr	r3, [pc, #528]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003270:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003272:	4a83      	ldr	r2, [pc, #524]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003274:	f043 0302 	orr.w	r3, r3, #2
 8003278:	6313      	str	r3, [r2, #48]	@ 0x30
 800327a:	4b81      	ldr	r3, [pc, #516]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800327c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800327e:	f003 0302 	and.w	r3, r3, #2
 8003282:	623b      	str	r3, [r7, #32]
 8003284:	6a3b      	ldr	r3, [r7, #32]
 8003286:	2300      	movs	r3, #0
 8003288:	61fb      	str	r3, [r7, #28]
 800328a:	4b7d      	ldr	r3, [pc, #500]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800328c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800328e:	4a7c      	ldr	r2, [pc, #496]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003290:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003294:	6313      	str	r3, [r2, #48]	@ 0x30
 8003296:	4b7a      	ldr	r3, [pc, #488]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003298:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800329a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800329e:	61fb      	str	r3, [r7, #28]
 80032a0:	69fb      	ldr	r3, [r7, #28]
 80032a2:	2300      	movs	r3, #0
 80032a4:	61bb      	str	r3, [r7, #24]
 80032a6:	4b76      	ldr	r3, [pc, #472]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032aa:	4a75      	ldr	r2, [pc, #468]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ac:	f043 0301 	orr.w	r3, r3, #1
 80032b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80032b2:	4b73      	ldr	r3, [pc, #460]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032b6:	f003 0301 	and.w	r3, r3, #1
 80032ba:	61bb      	str	r3, [r7, #24]
 80032bc:	69bb      	ldr	r3, [r7, #24]
 80032be:	2300      	movs	r3, #0
 80032c0:	617b      	str	r3, [r7, #20]
 80032c2:	4b6f      	ldr	r3, [pc, #444]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032c6:	4a6e      	ldr	r2, [pc, #440]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c8:	f043 0308 	orr.w	r3, r3, #8
 80032cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ce:	4b6c      	ldr	r3, [pc, #432]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d2:	f003 0308 	and.w	r3, r3, #8
 80032d6:	617b      	str	r3, [r7, #20]
 80032d8:	697b      	ldr	r3, [r7, #20]
 80032da:	2300      	movs	r3, #0
 80032dc:	613b      	str	r3, [r7, #16]
 80032de:	4b68      	ldr	r3, [pc, #416]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032e2:	4a67      	ldr	r2, [pc, #412]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e4:	f043 0304 	orr.w	r3, r3, #4
 80032e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ea:	4b65      	ldr	r3, [pc, #404]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032ee:	f003 0304 	and.w	r3, r3, #4
 80032f2:	613b      	str	r3, [r7, #16]
 80032f4:	693b      	ldr	r3, [r7, #16]
 80032f6:	2300      	movs	r3, #0
 80032f8:	60fb      	str	r3, [r7, #12]
 80032fa:	4b61      	ldr	r3, [pc, #388]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032fe:	4a60      	ldr	r2, [pc, #384]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003300:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003304:	6313      	str	r3, [r2, #48]	@ 0x30
 8003306:	4b5e      	ldr	r3, [pc, #376]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800330a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800330e:	60fb      	str	r3, [r7, #12]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	2300      	movs	r3, #0
 8003314:	60bb      	str	r3, [r7, #8]
 8003316:	4b5a      	ldr	r3, [pc, #360]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800331a:	4a59      	ldr	r2, [pc, #356]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800331c:	f043 0320 	orr.w	r3, r3, #32
 8003320:	6313      	str	r3, [r2, #48]	@ 0x30
 8003322:	4b57      	ldr	r3, [pc, #348]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003324:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003326:	f003 0320 	and.w	r3, r3, #32
 800332a:	60bb      	str	r3, [r7, #8]
 800332c:	68bb      	ldr	r3, [r7, #8]
 800332e:	2300      	movs	r3, #0
 8003330:	607b      	str	r3, [r7, #4]
 8003332:	4b53      	ldr	r3, [pc, #332]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003336:	4a52      	ldr	r2, [pc, #328]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003338:	f043 0310 	orr.w	r3, r3, #16
 800333c:	6313      	str	r3, [r2, #48]	@ 0x30
 800333e:	4b50      	ldr	r3, [pc, #320]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003342:	f003 0310 	and.w	r3, r3, #16
 8003346:	607b      	str	r3, [r7, #4]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2200      	movs	r2, #0
 800334c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003350:	484c      	ldr	r0, [pc, #304]	@ (8003484 <MX_GPIO_Init+0x230>)
 8003352:	f009 fec5 	bl	800d0e0 <HAL_GPIO_WritePin>
 8003356:	2200      	movs	r2, #0
 8003358:	2140      	movs	r1, #64	@ 0x40
 800335a:	484b      	ldr	r0, [pc, #300]	@ (8003488 <MX_GPIO_Init+0x234>)
 800335c:	f009 fec0 	bl	800d0e0 <HAL_GPIO_WritePin>
 8003360:	2201      	movs	r2, #1
 8003362:	2110      	movs	r1, #16
 8003364:	4849      	ldr	r0, [pc, #292]	@ (800348c <MX_GPIO_Init+0x238>)
 8003366:	f009 febb 	bl	800d0e0 <HAL_GPIO_WritePin>
 800336a:	2201      	movs	r2, #1
 800336c:	2101      	movs	r1, #1
 800336e:	4848      	ldr	r0, [pc, #288]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003370:	f009 feb6 	bl	800d0e0 <HAL_GPIO_WritePin>
 8003374:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003378:	627b      	str	r3, [r7, #36]	@ 0x24
 800337a:	2301      	movs	r3, #1
 800337c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800337e:	2300      	movs	r3, #0
 8003380:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003382:	2300      	movs	r3, #0
 8003384:	633b      	str	r3, [r7, #48]	@ 0x30
 8003386:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800338a:	4619      	mov	r1, r3
 800338c:	483d      	ldr	r0, [pc, #244]	@ (8003484 <MX_GPIO_Init+0x230>)
 800338e:	f009 fd0b 	bl	800cda8 <HAL_GPIO_Init>
 8003392:	2340      	movs	r3, #64	@ 0x40
 8003394:	627b      	str	r3, [r7, #36]	@ 0x24
 8003396:	2301      	movs	r3, #1
 8003398:	62bb      	str	r3, [r7, #40]	@ 0x28
 800339a:	2300      	movs	r3, #0
 800339c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800339e:	2300      	movs	r3, #0
 80033a0:	633b      	str	r3, [r7, #48]	@ 0x30
 80033a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033a6:	4619      	mov	r1, r3
 80033a8:	4837      	ldr	r0, [pc, #220]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033aa:	f009 fcfd 	bl	800cda8 <HAL_GPIO_Init>
 80033ae:	2308      	movs	r3, #8
 80033b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80033b2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033b8:	2301      	movs	r3, #1
 80033ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033bc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033c0:	4619      	mov	r1, r3
 80033c2:	4831      	ldr	r0, [pc, #196]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033c4:	f009 fcf0 	bl	800cda8 <HAL_GPIO_Init>
 80033c8:	2310      	movs	r3, #16
 80033ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80033cc:	2301      	movs	r3, #1
 80033ce:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033d0:	2300      	movs	r3, #0
 80033d2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033d4:	2300      	movs	r3, #0
 80033d6:	633b      	str	r3, [r7, #48]	@ 0x30
 80033d8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033dc:	4619      	mov	r1, r3
 80033de:	482b      	ldr	r0, [pc, #172]	@ (800348c <MX_GPIO_Init+0x238>)
 80033e0:	f009 fce2 	bl	800cda8 <HAL_GPIO_Init>
 80033e4:	2330      	movs	r3, #48	@ 0x30
 80033e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80033e8:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033ee:	2301      	movs	r3, #1
 80033f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033f2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033f6:	4619      	mov	r1, r3
 80033f8:	4822      	ldr	r0, [pc, #136]	@ (8003484 <MX_GPIO_Init+0x230>)
 80033fa:	f009 fcd5 	bl	800cda8 <HAL_GPIO_Init>
 80033fe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003402:	627b      	str	r3, [r7, #36]	@ 0x24
 8003404:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8003408:	62bb      	str	r3, [r7, #40]	@ 0x28
 800340a:	2300      	movs	r3, #0
 800340c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800340e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003412:	4619      	mov	r1, r3
 8003414:	481f      	ldr	r0, [pc, #124]	@ (8003494 <MX_GPIO_Init+0x240>)
 8003416:	f009 fcc7 	bl	800cda8 <HAL_GPIO_Init>
 800341a:	2301      	movs	r3, #1
 800341c:	627b      	str	r3, [r7, #36]	@ 0x24
 800341e:	2301      	movs	r3, #1
 8003420:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003422:	2300      	movs	r3, #0
 8003424:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003426:	2300      	movs	r3, #0
 8003428:	633b      	str	r3, [r7, #48]	@ 0x30
 800342a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800342e:	4619      	mov	r1, r3
 8003430:	4817      	ldr	r0, [pc, #92]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003432:	f009 fcb9 	bl	800cda8 <HAL_GPIO_Init>
 8003436:	2200      	movs	r2, #0
 8003438:	2105      	movs	r1, #5
 800343a:	2009      	movs	r0, #9
 800343c:	f009 f86e 	bl	800c51c <HAL_NVIC_SetPriority>
 8003440:	2009      	movs	r0, #9
 8003442:	f009 f887 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003446:	2200      	movs	r2, #0
 8003448:	2105      	movs	r1, #5
 800344a:	200a      	movs	r0, #10
 800344c:	f009 f866 	bl	800c51c <HAL_NVIC_SetPriority>
 8003450:	200a      	movs	r0, #10
 8003452:	f009 f87f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003456:	2200      	movs	r2, #0
 8003458:	2105      	movs	r1, #5
 800345a:	2017      	movs	r0, #23
 800345c:	f009 f85e 	bl	800c51c <HAL_NVIC_SetPriority>
 8003460:	2017      	movs	r0, #23
 8003462:	f009 f877 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003466:	2200      	movs	r2, #0
 8003468:	2105      	movs	r1, #5
 800346a:	2028      	movs	r0, #40	@ 0x28
 800346c:	f009 f856 	bl	800c51c <HAL_NVIC_SetPriority>
 8003470:	2028      	movs	r0, #40	@ 0x28
 8003472:	f009 f86f 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003476:	bf00      	nop
 8003478:	3738      	adds	r7, #56	@ 0x38
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}
 800347e:	bf00      	nop
 8003480:	40023800 	.word	0x40023800
 8003484:	40020800 	.word	0x40020800
 8003488:	40021800 	.word	0x40021800
 800348c:	40020000 	.word	0x40020000
 8003490:	40020400 	.word	0x40020400
 8003494:	40021000 	.word	0x40021000

08003498 <MX_I2C3_Init>:
 8003498:	b580      	push	{r7, lr}
 800349a:	af00      	add	r7, sp, #0
 800349c:	4b12      	ldr	r3, [pc, #72]	@ (80034e8 <MX_I2C3_Init+0x50>)
 800349e:	4a13      	ldr	r2, [pc, #76]	@ (80034ec <MX_I2C3_Init+0x54>)
 80034a0:	601a      	str	r2, [r3, #0]
 80034a2:	4b11      	ldr	r3, [pc, #68]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034a4:	4a12      	ldr	r2, [pc, #72]	@ (80034f0 <MX_I2C3_Init+0x58>)
 80034a6:	605a      	str	r2, [r3, #4]
 80034a8:	4b0f      	ldr	r3, [pc, #60]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034aa:	2200      	movs	r2, #0
 80034ac:	609a      	str	r2, [r3, #8]
 80034ae:	4b0e      	ldr	r3, [pc, #56]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b0:	2200      	movs	r2, #0
 80034b2:	60da      	str	r2, [r3, #12]
 80034b4:	4b0c      	ldr	r3, [pc, #48]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b6:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80034ba:	611a      	str	r2, [r3, #16]
 80034bc:	4b0a      	ldr	r3, [pc, #40]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034be:	2200      	movs	r2, #0
 80034c0:	615a      	str	r2, [r3, #20]
 80034c2:	4b09      	ldr	r3, [pc, #36]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034c4:	2200      	movs	r2, #0
 80034c6:	619a      	str	r2, [r3, #24]
 80034c8:	4b07      	ldr	r3, [pc, #28]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034ca:	2200      	movs	r2, #0
 80034cc:	61da      	str	r2, [r3, #28]
 80034ce:	4b06      	ldr	r3, [pc, #24]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d0:	2200      	movs	r2, #0
 80034d2:	621a      	str	r2, [r3, #32]
 80034d4:	4804      	ldr	r0, [pc, #16]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d6:	f009 fe35 	bl	800d144 <HAL_I2C_Init>
 80034da:	4603      	mov	r3, r0
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d001      	beq.n	80034e4 <MX_I2C3_Init+0x4c>
 80034e0:	f000 f98a 	bl	80037f8 <Error_Handler>
 80034e4:	bf00      	nop
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	20001840 	.word	0x20001840
 80034ec:	40005c00 	.word	0x40005c00
 80034f0:	00061a80 	.word	0x00061a80

080034f4 <HAL_I2C_MspInit>:
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b08a      	sub	sp, #40	@ 0x28
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	6078      	str	r0, [r7, #4]
 80034fc:	f107 0314 	add.w	r3, r7, #20
 8003500:	2200      	movs	r2, #0
 8003502:	601a      	str	r2, [r3, #0]
 8003504:	605a      	str	r2, [r3, #4]
 8003506:	609a      	str	r2, [r3, #8]
 8003508:	60da      	str	r2, [r3, #12]
 800350a:	611a      	str	r2, [r3, #16]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	4a5b      	ldr	r2, [pc, #364]	@ (8003680 <HAL_I2C_MspInit+0x18c>)
 8003512:	4293      	cmp	r3, r2
 8003514:	f040 80b0 	bne.w	8003678 <HAL_I2C_MspInit+0x184>
 8003518:	2300      	movs	r3, #0
 800351a:	613b      	str	r3, [r7, #16]
 800351c:	4b59      	ldr	r3, [pc, #356]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800351e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003520:	4a58      	ldr	r2, [pc, #352]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003522:	f043 0304 	orr.w	r3, r3, #4
 8003526:	6313      	str	r3, [r2, #48]	@ 0x30
 8003528:	4b56      	ldr	r3, [pc, #344]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800352a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800352c:	f003 0304 	and.w	r3, r3, #4
 8003530:	613b      	str	r3, [r7, #16]
 8003532:	693b      	ldr	r3, [r7, #16]
 8003534:	2300      	movs	r3, #0
 8003536:	60fb      	str	r3, [r7, #12]
 8003538:	4b52      	ldr	r3, [pc, #328]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800353c:	4a51      	ldr	r2, [pc, #324]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353e:	f043 0301 	orr.w	r3, r3, #1
 8003542:	6313      	str	r3, [r2, #48]	@ 0x30
 8003544:	4b4f      	ldr	r3, [pc, #316]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003546:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003548:	f003 0301 	and.w	r3, r3, #1
 800354c:	60fb      	str	r3, [r7, #12]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003554:	617b      	str	r3, [r7, #20]
 8003556:	2312      	movs	r3, #18
 8003558:	61bb      	str	r3, [r7, #24]
 800355a:	2301      	movs	r3, #1
 800355c:	61fb      	str	r3, [r7, #28]
 800355e:	2303      	movs	r3, #3
 8003560:	623b      	str	r3, [r7, #32]
 8003562:	2304      	movs	r3, #4
 8003564:	627b      	str	r3, [r7, #36]	@ 0x24
 8003566:	f107 0314 	add.w	r3, r7, #20
 800356a:	4619      	mov	r1, r3
 800356c:	4846      	ldr	r0, [pc, #280]	@ (8003688 <HAL_I2C_MspInit+0x194>)
 800356e:	f009 fc1b 	bl	800cda8 <HAL_GPIO_Init>
 8003572:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003576:	617b      	str	r3, [r7, #20]
 8003578:	2312      	movs	r3, #18
 800357a:	61bb      	str	r3, [r7, #24]
 800357c:	2301      	movs	r3, #1
 800357e:	61fb      	str	r3, [r7, #28]
 8003580:	2303      	movs	r3, #3
 8003582:	623b      	str	r3, [r7, #32]
 8003584:	2304      	movs	r3, #4
 8003586:	627b      	str	r3, [r7, #36]	@ 0x24
 8003588:	f107 0314 	add.w	r3, r7, #20
 800358c:	4619      	mov	r1, r3
 800358e:	483f      	ldr	r0, [pc, #252]	@ (800368c <HAL_I2C_MspInit+0x198>)
 8003590:	f009 fc0a 	bl	800cda8 <HAL_GPIO_Init>
 8003594:	2300      	movs	r3, #0
 8003596:	60bb      	str	r3, [r7, #8]
 8003598:	4b3a      	ldr	r3, [pc, #232]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800359c:	4a39      	ldr	r2, [pc, #228]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80035a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80035a4:	4b37      	ldr	r3, [pc, #220]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 80035a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035a8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80035ac:	60bb      	str	r3, [r7, #8]
 80035ae:	68bb      	ldr	r3, [r7, #8]
 80035b0:	4b37      	ldr	r3, [pc, #220]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b2:	4a38      	ldr	r2, [pc, #224]	@ (8003694 <HAL_I2C_MspInit+0x1a0>)
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	4b36      	ldr	r3, [pc, #216]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80035bc:	605a      	str	r2, [r3, #4]
 80035be:	4b34      	ldr	r3, [pc, #208]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c0:	2200      	movs	r2, #0
 80035c2:	609a      	str	r2, [r3, #8]
 80035c4:	4b32      	ldr	r3, [pc, #200]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c6:	2200      	movs	r2, #0
 80035c8:	60da      	str	r2, [r3, #12]
 80035ca:	4b31      	ldr	r3, [pc, #196]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035cc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80035d0:	611a      	str	r2, [r3, #16]
 80035d2:	4b2f      	ldr	r3, [pc, #188]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035d4:	2200      	movs	r2, #0
 80035d6:	615a      	str	r2, [r3, #20]
 80035d8:	4b2d      	ldr	r3, [pc, #180]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035da:	2200      	movs	r2, #0
 80035dc:	619a      	str	r2, [r3, #24]
 80035de:	4b2c      	ldr	r3, [pc, #176]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e0:	2200      	movs	r2, #0
 80035e2:	61da      	str	r2, [r3, #28]
 80035e4:	4b2a      	ldr	r3, [pc, #168]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e6:	2200      	movs	r2, #0
 80035e8:	621a      	str	r2, [r3, #32]
 80035ea:	4b29      	ldr	r3, [pc, #164]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035ec:	2200      	movs	r2, #0
 80035ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80035f0:	4827      	ldr	r0, [pc, #156]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035f2:	f008 ffcb 	bl	800c58c <HAL_DMA_Init>
 80035f6:	4603      	mov	r3, r0
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d001      	beq.n	8003600 <HAL_I2C_MspInit+0x10c>
 80035fc:	f000 f8fc 	bl	80037f8 <Error_Handler>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	4a23      	ldr	r2, [pc, #140]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003604:	639a      	str	r2, [r3, #56]	@ 0x38
 8003606:	4a22      	ldr	r2, [pc, #136]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	6393      	str	r3, [r2, #56]	@ 0x38
 800360c:	4b22      	ldr	r3, [pc, #136]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800360e:	4a23      	ldr	r2, [pc, #140]	@ (800369c <HAL_I2C_MspInit+0x1a8>)
 8003610:	601a      	str	r2, [r3, #0]
 8003612:	4b21      	ldr	r3, [pc, #132]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003614:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 8003618:	605a      	str	r2, [r3, #4]
 800361a:	4b1f      	ldr	r3, [pc, #124]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800361c:	2240      	movs	r2, #64	@ 0x40
 800361e:	609a      	str	r2, [r3, #8]
 8003620:	4b1d      	ldr	r3, [pc, #116]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003622:	2200      	movs	r2, #0
 8003624:	60da      	str	r2, [r3, #12]
 8003626:	4b1c      	ldr	r3, [pc, #112]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003628:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800362c:	611a      	str	r2, [r3, #16]
 800362e:	4b1a      	ldr	r3, [pc, #104]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003630:	2200      	movs	r2, #0
 8003632:	615a      	str	r2, [r3, #20]
 8003634:	4b18      	ldr	r3, [pc, #96]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003636:	2200      	movs	r2, #0
 8003638:	619a      	str	r2, [r3, #24]
 800363a:	4b17      	ldr	r3, [pc, #92]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800363c:	2200      	movs	r2, #0
 800363e:	61da      	str	r2, [r3, #28]
 8003640:	4b15      	ldr	r3, [pc, #84]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003642:	2200      	movs	r2, #0
 8003644:	621a      	str	r2, [r3, #32]
 8003646:	4b14      	ldr	r3, [pc, #80]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003648:	2200      	movs	r2, #0
 800364a:	625a      	str	r2, [r3, #36]	@ 0x24
 800364c:	4812      	ldr	r0, [pc, #72]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800364e:	f008 ff9d 	bl	800c58c <HAL_DMA_Init>
 8003652:	4603      	mov	r3, r0
 8003654:	2b00      	cmp	r3, #0
 8003656:	d001      	beq.n	800365c <HAL_I2C_MspInit+0x168>
 8003658:	f000 f8ce 	bl	80037f8 <Error_Handler>
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	4a0e      	ldr	r2, [pc, #56]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003660:	635a      	str	r2, [r3, #52]	@ 0x34
 8003662:	4a0d      	ldr	r2, [pc, #52]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6393      	str	r3, [r2, #56]	@ 0x38
 8003668:	2200      	movs	r2, #0
 800366a:	2105      	movs	r1, #5
 800366c:	2049      	movs	r0, #73	@ 0x49
 800366e:	f008 ff55 	bl	800c51c <HAL_NVIC_SetPriority>
 8003672:	2049      	movs	r0, #73	@ 0x49
 8003674:	f008 ff6e 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003678:	bf00      	nop
 800367a:	3728      	adds	r7, #40	@ 0x28
 800367c:	46bd      	mov	sp, r7
 800367e:	bd80      	pop	{r7, pc}
 8003680:	40005c00 	.word	0x40005c00
 8003684:	40023800 	.word	0x40023800
 8003688:	40020800 	.word	0x40020800
 800368c:	40020000 	.word	0x40020000
 8003690:	20001894 	.word	0x20001894
 8003694:	40026040 	.word	0x40026040
 8003698:	200018f4 	.word	0x200018f4
 800369c:	40026070 	.word	0x40026070

080036a0 <main>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	af00      	add	r7, sp, #0
 80036a4:	f007 fd16 	bl	800b0d4 <HAL_Init>
 80036a8:	f000 f82a 	bl	8003700 <SystemClock_Config>
 80036ac:	f7ff fdd2 	bl	8003254 <MX_GPIO_Init>
 80036b0:	f7ff fce2 	bl	8003078 <MX_DMA_Init>
 80036b4:	f7ff fbb4 	bl	8002e20 <MX_CAN1_Init>
 80036b8:	f7ff fbe8 	bl	8002e8c <MX_CAN2_Init>
 80036bc:	f000 fdb8 	bl	8004230 <MX_TIM5_Init>
 80036c0:	f000 fe26 	bl	8004310 <MX_TIM10_Init>
 80036c4:	f000 ff74 	bl	80045b0 <MX_USART1_UART_Init>
 80036c8:	f000 ff9c 	bl	8004604 <MX_USART3_UART_Init>
 80036cc:	f000 ffc6 	bl	800465c <MX_USART6_UART_Init>
 80036d0:	f000 f8ce 	bl	8003870 <MX_SPI1_Init>
 80036d4:	f7ff fee0 	bl	8003498 <MX_I2C3_Init>
 80036d8:	f7ff fb0c 	bl	8002cf4 <MX_ADC3_Init>
 80036dc:	f000 fcdc 	bl	8004098 <MX_TIM3_Init>
 80036e0:	f000 fd4c 	bl	800417c <MX_TIM4_Init>
 80036e4:	f000 f88e 	bl	8003804 <MX_RNG_Init>
 80036e8:	f000 fca4 	bl	8004034 <MX_TIM2_Init>
 80036ec:	f007 fc73 	bl	800afd6 <startup_task>
 80036f0:	f016 fdc2 	bl	801a278 <MX_USB_DEVICE_Init>
 80036f4:	f7ff fd74 	bl	80031e0 <MX_FREERTOS_Init>
 80036f8:	f013 fcd6 	bl	80170a8 <osKernelStart>
 80036fc:	bf00      	nop
 80036fe:	e7fd      	b.n	80036fc <main+0x5c>

08003700 <SystemClock_Config>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b094      	sub	sp, #80	@ 0x50
 8003704:	af00      	add	r7, sp, #0
 8003706:	f107 0320 	add.w	r3, r7, #32
 800370a:	2230      	movs	r2, #48	@ 0x30
 800370c:	2100      	movs	r1, #0
 800370e:	4618      	mov	r0, r3
 8003710:	f017 fc27 	bl	801af62 <memset>
 8003714:	f107 030c 	add.w	r3, r7, #12
 8003718:	2200      	movs	r2, #0
 800371a:	601a      	str	r2, [r3, #0]
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	609a      	str	r2, [r3, #8]
 8003720:	60da      	str	r2, [r3, #12]
 8003722:	611a      	str	r2, [r3, #16]
 8003724:	2300      	movs	r3, #0
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	4b28      	ldr	r3, [pc, #160]	@ (80037cc <SystemClock_Config+0xcc>)
 800372a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800372c:	4a27      	ldr	r2, [pc, #156]	@ (80037cc <SystemClock_Config+0xcc>)
 800372e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003732:	6413      	str	r3, [r2, #64]	@ 0x40
 8003734:	4b25      	ldr	r3, [pc, #148]	@ (80037cc <SystemClock_Config+0xcc>)
 8003736:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003738:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800373c:	60bb      	str	r3, [r7, #8]
 800373e:	68bb      	ldr	r3, [r7, #8]
 8003740:	2300      	movs	r3, #0
 8003742:	607b      	str	r3, [r7, #4]
 8003744:	4b22      	ldr	r3, [pc, #136]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	4a21      	ldr	r2, [pc, #132]	@ (80037d0 <SystemClock_Config+0xd0>)
 800374a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800374e:	6013      	str	r3, [r2, #0]
 8003750:	4b1f      	ldr	r3, [pc, #124]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003758:	607b      	str	r3, [r7, #4]
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	2301      	movs	r3, #1
 800375e:	623b      	str	r3, [r7, #32]
 8003760:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003764:	627b      	str	r3, [r7, #36]	@ 0x24
 8003766:	2302      	movs	r3, #2
 8003768:	63bb      	str	r3, [r7, #56]	@ 0x38
 800376a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800376e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003770:	2306      	movs	r3, #6
 8003772:	643b      	str	r3, [r7, #64]	@ 0x40
 8003774:	23a8      	movs	r3, #168	@ 0xa8
 8003776:	647b      	str	r3, [r7, #68]	@ 0x44
 8003778:	2302      	movs	r3, #2
 800377a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800377c:	2307      	movs	r3, #7
 800377e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003780:	f107 0320 	add.w	r3, r7, #32
 8003784:	4618      	mov	r0, r3
 8003786:	f00c fce5 	bl	8010154 <HAL_RCC_OscConfig>
 800378a:	4603      	mov	r3, r0
 800378c:	2b00      	cmp	r3, #0
 800378e:	d001      	beq.n	8003794 <SystemClock_Config+0x94>
 8003790:	f000 f832 	bl	80037f8 <Error_Handler>
 8003794:	230f      	movs	r3, #15
 8003796:	60fb      	str	r3, [r7, #12]
 8003798:	2302      	movs	r3, #2
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	2300      	movs	r3, #0
 800379e:	617b      	str	r3, [r7, #20]
 80037a0:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80037a4:	61bb      	str	r3, [r7, #24]
 80037a6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80037aa:	61fb      	str	r3, [r7, #28]
 80037ac:	f107 030c 	add.w	r3, r7, #12
 80037b0:	2105      	movs	r1, #5
 80037b2:	4618      	mov	r0, r3
 80037b4:	f00c ff46 	bl	8010644 <HAL_RCC_ClockConfig>
 80037b8:	4603      	mov	r3, r0
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d001      	beq.n	80037c2 <SystemClock_Config+0xc2>
 80037be:	f000 f81b 	bl	80037f8 <Error_Handler>
 80037c2:	bf00      	nop
 80037c4:	3750      	adds	r7, #80	@ 0x50
 80037c6:	46bd      	mov	sp, r7
 80037c8:	bd80      	pop	{r7, pc}
 80037ca:	bf00      	nop
 80037cc:	40023800 	.word	0x40023800
 80037d0:	40007000 	.word	0x40007000

080037d4 <HAL_TIM_PeriodElapsedCallback>:
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b082      	sub	sp, #8
 80037d8:	af00      	add	r7, sp, #0
 80037da:	6078      	str	r0, [r7, #4]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	4a04      	ldr	r2, [pc, #16]	@ (80037f4 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80037e2:	4293      	cmp	r3, r2
 80037e4:	d101      	bne.n	80037ea <HAL_TIM_PeriodElapsedCallback+0x16>
 80037e6:	f007 fc97 	bl	800b118 <HAL_IncTick>
 80037ea:	bf00      	nop
 80037ec:	3708      	adds	r7, #8
 80037ee:	46bd      	mov	sp, r7
 80037f0:	bd80      	pop	{r7, pc}
 80037f2:	bf00      	nop
 80037f4:	40001000 	.word	0x40001000

080037f8 <Error_Handler>:
 80037f8:	b480      	push	{r7}
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	b672      	cpsid	i
 80037fe:	bf00      	nop
 8003800:	bf00      	nop
 8003802:	e7fd      	b.n	8003800 <Error_Handler+0x8>

08003804 <MX_RNG_Init>:
 8003804:	b580      	push	{r7, lr}
 8003806:	af00      	add	r7, sp, #0
 8003808:	4b06      	ldr	r3, [pc, #24]	@ (8003824 <MX_RNG_Init+0x20>)
 800380a:	4a07      	ldr	r2, [pc, #28]	@ (8003828 <MX_RNG_Init+0x24>)
 800380c:	601a      	str	r2, [r3, #0]
 800380e:	4805      	ldr	r0, [pc, #20]	@ (8003824 <MX_RNG_Init+0x20>)
 8003810:	f00d f92a 	bl	8010a68 <HAL_RNG_Init>
 8003814:	4603      	mov	r3, r0
 8003816:	2b00      	cmp	r3, #0
 8003818:	d001      	beq.n	800381e <MX_RNG_Init+0x1a>
 800381a:	f7ff ffed 	bl	80037f8 <Error_Handler>
 800381e:	bf00      	nop
 8003820:	bd80      	pop	{r7, pc}
 8003822:	bf00      	nop
 8003824:	20001954 	.word	0x20001954
 8003828:	50060800 	.word	0x50060800

0800382c <HAL_RNG_MspInit>:
 800382c:	b480      	push	{r7}
 800382e:	b085      	sub	sp, #20
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	4a0b      	ldr	r2, [pc, #44]	@ (8003868 <HAL_RNG_MspInit+0x3c>)
 800383a:	4293      	cmp	r3, r2
 800383c:	d10d      	bne.n	800385a <HAL_RNG_MspInit+0x2e>
 800383e:	2300      	movs	r3, #0
 8003840:	60fb      	str	r3, [r7, #12]
 8003842:	4b0a      	ldr	r3, [pc, #40]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003844:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003846:	4a09      	ldr	r2, [pc, #36]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003848:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800384c:	6353      	str	r3, [r2, #52]	@ 0x34
 800384e:	4b07      	ldr	r3, [pc, #28]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003850:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003852:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	bf00      	nop
 800385c:	3714      	adds	r7, #20
 800385e:	46bd      	mov	sp, r7
 8003860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	50060800 	.word	0x50060800
 800386c:	40023800 	.word	0x40023800

08003870 <MX_SPI1_Init>:
 8003870:	b580      	push	{r7, lr}
 8003872:	af00      	add	r7, sp, #0
 8003874:	4b17      	ldr	r3, [pc, #92]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003876:	4a18      	ldr	r2, [pc, #96]	@ (80038d8 <MX_SPI1_Init+0x68>)
 8003878:	601a      	str	r2, [r3, #0]
 800387a:	4b16      	ldr	r3, [pc, #88]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800387c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003880:	605a      	str	r2, [r3, #4]
 8003882:	4b14      	ldr	r3, [pc, #80]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003884:	2200      	movs	r2, #0
 8003886:	609a      	str	r2, [r3, #8]
 8003888:	4b12      	ldr	r3, [pc, #72]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800388a:	2200      	movs	r2, #0
 800388c:	60da      	str	r2, [r3, #12]
 800388e:	4b11      	ldr	r3, [pc, #68]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003890:	2200      	movs	r2, #0
 8003892:	611a      	str	r2, [r3, #16]
 8003894:	4b0f      	ldr	r3, [pc, #60]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003896:	2200      	movs	r2, #0
 8003898:	615a      	str	r2, [r3, #20]
 800389a:	4b0e      	ldr	r3, [pc, #56]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800389c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80038a0:	619a      	str	r2, [r3, #24]
 80038a2:	4b0c      	ldr	r3, [pc, #48]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038a4:	2228      	movs	r2, #40	@ 0x28
 80038a6:	61da      	str	r2, [r3, #28]
 80038a8:	4b0a      	ldr	r3, [pc, #40]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038aa:	2200      	movs	r2, #0
 80038ac:	621a      	str	r2, [r3, #32]
 80038ae:	4b09      	ldr	r3, [pc, #36]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b0:	2200      	movs	r2, #0
 80038b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80038b4:	4b07      	ldr	r3, [pc, #28]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b6:	2200      	movs	r2, #0
 80038b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80038ba:	4b06      	ldr	r3, [pc, #24]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038bc:	220a      	movs	r2, #10
 80038be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038c0:	4804      	ldr	r0, [pc, #16]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038c2:	f00d f8fb 	bl	8010abc <HAL_SPI_Init>
 80038c6:	4603      	mov	r3, r0
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d001      	beq.n	80038d0 <MX_SPI1_Init+0x60>
 80038cc:	f7ff ff94 	bl	80037f8 <Error_Handler>
 80038d0:	bf00      	nop
 80038d2:	bd80      	pop	{r7, pc}
 80038d4:	20001964 	.word	0x20001964
 80038d8:	40013000 	.word	0x40013000

080038dc <HAL_SPI_MspInit>:
 80038dc:	b580      	push	{r7, lr}
 80038de:	b08a      	sub	sp, #40	@ 0x28
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
 80038e4:	f107 0314 	add.w	r3, r7, #20
 80038e8:	2200      	movs	r2, #0
 80038ea:	601a      	str	r2, [r3, #0]
 80038ec:	605a      	str	r2, [r3, #4]
 80038ee:	609a      	str	r2, [r3, #8]
 80038f0:	60da      	str	r2, [r3, #12]
 80038f2:	611a      	str	r2, [r3, #16]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4a56      	ldr	r2, [pc, #344]	@ (8003a54 <HAL_SPI_MspInit+0x178>)
 80038fa:	4293      	cmp	r3, r2
 80038fc:	f040 80a6 	bne.w	8003a4c <HAL_SPI_MspInit+0x170>
 8003900:	2300      	movs	r3, #0
 8003902:	613b      	str	r3, [r7, #16]
 8003904:	4b54      	ldr	r3, [pc, #336]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003906:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003908:	4a53      	ldr	r2, [pc, #332]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800390a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800390e:	6453      	str	r3, [r2, #68]	@ 0x44
 8003910:	4b51      	ldr	r3, [pc, #324]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003912:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003914:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003918:	613b      	str	r3, [r7, #16]
 800391a:	693b      	ldr	r3, [r7, #16]
 800391c:	2300      	movs	r3, #0
 800391e:	60fb      	str	r3, [r7, #12]
 8003920:	4b4d      	ldr	r3, [pc, #308]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003924:	4a4c      	ldr	r2, [pc, #304]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003926:	f043 0302 	orr.w	r3, r3, #2
 800392a:	6313      	str	r3, [r2, #48]	@ 0x30
 800392c:	4b4a      	ldr	r3, [pc, #296]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800392e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003930:	f003 0302 	and.w	r3, r3, #2
 8003934:	60fb      	str	r3, [r7, #12]
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	2300      	movs	r3, #0
 800393a:	60bb      	str	r3, [r7, #8]
 800393c:	4b46      	ldr	r3, [pc, #280]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800393e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003940:	4a45      	ldr	r2, [pc, #276]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003942:	f043 0301 	orr.w	r3, r3, #1
 8003946:	6313      	str	r3, [r2, #48]	@ 0x30
 8003948:	4b43      	ldr	r3, [pc, #268]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800394a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800394c:	f003 0301 	and.w	r3, r3, #1
 8003950:	60bb      	str	r3, [r7, #8]
 8003952:	68bb      	ldr	r3, [r7, #8]
 8003954:	2318      	movs	r3, #24
 8003956:	617b      	str	r3, [r7, #20]
 8003958:	2302      	movs	r3, #2
 800395a:	61bb      	str	r3, [r7, #24]
 800395c:	2300      	movs	r3, #0
 800395e:	61fb      	str	r3, [r7, #28]
 8003960:	2303      	movs	r3, #3
 8003962:	623b      	str	r3, [r7, #32]
 8003964:	2305      	movs	r3, #5
 8003966:	627b      	str	r3, [r7, #36]	@ 0x24
 8003968:	f107 0314 	add.w	r3, r7, #20
 800396c:	4619      	mov	r1, r3
 800396e:	483b      	ldr	r0, [pc, #236]	@ (8003a5c <HAL_SPI_MspInit+0x180>)
 8003970:	f009 fa1a 	bl	800cda8 <HAL_GPIO_Init>
 8003974:	2380      	movs	r3, #128	@ 0x80
 8003976:	617b      	str	r3, [r7, #20]
 8003978:	2302      	movs	r3, #2
 800397a:	61bb      	str	r3, [r7, #24]
 800397c:	2300      	movs	r3, #0
 800397e:	61fb      	str	r3, [r7, #28]
 8003980:	2303      	movs	r3, #3
 8003982:	623b      	str	r3, [r7, #32]
 8003984:	2305      	movs	r3, #5
 8003986:	627b      	str	r3, [r7, #36]	@ 0x24
 8003988:	f107 0314 	add.w	r3, r7, #20
 800398c:	4619      	mov	r1, r3
 800398e:	4834      	ldr	r0, [pc, #208]	@ (8003a60 <HAL_SPI_MspInit+0x184>)
 8003990:	f009 fa0a 	bl	800cda8 <HAL_GPIO_Init>
 8003994:	4b33      	ldr	r3, [pc, #204]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 8003996:	4a34      	ldr	r2, [pc, #208]	@ (8003a68 <HAL_SPI_MspInit+0x18c>)
 8003998:	601a      	str	r2, [r3, #0]
 800399a:	4b32      	ldr	r3, [pc, #200]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 800399c:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039a0:	605a      	str	r2, [r3, #4]
 80039a2:	4b30      	ldr	r3, [pc, #192]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039a4:	2200      	movs	r2, #0
 80039a6:	609a      	str	r2, [r3, #8]
 80039a8:	4b2e      	ldr	r3, [pc, #184]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039aa:	2200      	movs	r2, #0
 80039ac:	60da      	str	r2, [r3, #12]
 80039ae:	4b2d      	ldr	r3, [pc, #180]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80039b4:	611a      	str	r2, [r3, #16]
 80039b6:	4b2b      	ldr	r3, [pc, #172]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	615a      	str	r2, [r3, #20]
 80039bc:	4b29      	ldr	r3, [pc, #164]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039be:	2200      	movs	r2, #0
 80039c0:	619a      	str	r2, [r3, #24]
 80039c2:	4b28      	ldr	r3, [pc, #160]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039c4:	2200      	movs	r2, #0
 80039c6:	61da      	str	r2, [r3, #28]
 80039c8:	4b26      	ldr	r3, [pc, #152]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ca:	2200      	movs	r2, #0
 80039cc:	621a      	str	r2, [r3, #32]
 80039ce:	4b25      	ldr	r3, [pc, #148]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d0:	2200      	movs	r2, #0
 80039d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80039d4:	4823      	ldr	r0, [pc, #140]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d6:	f008 fdd9 	bl	800c58c <HAL_DMA_Init>
 80039da:	4603      	mov	r3, r0
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d001      	beq.n	80039e4 <HAL_SPI_MspInit+0x108>
 80039e0:	f7ff ff0a 	bl	80037f8 <Error_Handler>
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	4a1f      	ldr	r2, [pc, #124]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039e8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80039ea:	4a1e      	ldr	r2, [pc, #120]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6393      	str	r3, [r2, #56]	@ 0x38
 80039f0:	4b1e      	ldr	r3, [pc, #120]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f2:	4a1f      	ldr	r2, [pc, #124]	@ (8003a70 <HAL_SPI_MspInit+0x194>)
 80039f4:	601a      	str	r2, [r3, #0]
 80039f6:	4b1d      	ldr	r3, [pc, #116]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039fc:	605a      	str	r2, [r3, #4]
 80039fe:	4b1b      	ldr	r3, [pc, #108]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a00:	2240      	movs	r2, #64	@ 0x40
 8003a02:	609a      	str	r2, [r3, #8]
 8003a04:	4b19      	ldr	r3, [pc, #100]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a06:	2200      	movs	r2, #0
 8003a08:	60da      	str	r2, [r3, #12]
 8003a0a:	4b18      	ldr	r3, [pc, #96]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a0c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003a10:	611a      	str	r2, [r3, #16]
 8003a12:	4b16      	ldr	r3, [pc, #88]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	615a      	str	r2, [r3, #20]
 8003a18:	4b14      	ldr	r3, [pc, #80]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a1a:	2200      	movs	r2, #0
 8003a1c:	619a      	str	r2, [r3, #24]
 8003a1e:	4b13      	ldr	r3, [pc, #76]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a20:	2200      	movs	r2, #0
 8003a22:	61da      	str	r2, [r3, #28]
 8003a24:	4b11      	ldr	r3, [pc, #68]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a26:	2200      	movs	r2, #0
 8003a28:	621a      	str	r2, [r3, #32]
 8003a2a:	4b10      	ldr	r3, [pc, #64]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a30:	480e      	ldr	r0, [pc, #56]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a32:	f008 fdab 	bl	800c58c <HAL_DMA_Init>
 8003a36:	4603      	mov	r3, r0
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d001      	beq.n	8003a40 <HAL_SPI_MspInit+0x164>
 8003a3c:	f7ff fedc 	bl	80037f8 <Error_Handler>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	4a0a      	ldr	r2, [pc, #40]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a44:	649a      	str	r2, [r3, #72]	@ 0x48
 8003a46:	4a09      	ldr	r2, [pc, #36]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6393      	str	r3, [r2, #56]	@ 0x38
 8003a4c:	bf00      	nop
 8003a4e:	3728      	adds	r7, #40	@ 0x28
 8003a50:	46bd      	mov	sp, r7
 8003a52:	bd80      	pop	{r7, pc}
 8003a54:	40013000 	.word	0x40013000
 8003a58:	40023800 	.word	0x40023800
 8003a5c:	40020400 	.word	0x40020400
 8003a60:	40020000 	.word	0x40020000
 8003a64:	200019bc 	.word	0x200019bc
 8003a68:	40026410 	.word	0x40026410
 8003a6c:	20001a1c 	.word	0x20001a1c
 8003a70:	40026458 	.word	0x40026458

08003a74 <HAL_MspInit>:
 8003a74:	b580      	push	{r7, lr}
 8003a76:	b082      	sub	sp, #8
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	607b      	str	r3, [r7, #4]
 8003a7e:	4b12      	ldr	r3, [pc, #72]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a82:	4a11      	ldr	r2, [pc, #68]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a84:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003a88:	6453      	str	r3, [r2, #68]	@ 0x44
 8003a8a:	4b0f      	ldr	r3, [pc, #60]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a8e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003a92:	607b      	str	r3, [r7, #4]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2300      	movs	r3, #0
 8003a98:	603b      	str	r3, [r7, #0]
 8003a9a:	4b0b      	ldr	r3, [pc, #44]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a9e:	4a0a      	ldr	r2, [pc, #40]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003aa4:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aa6:	4b08      	ldr	r3, [pc, #32]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003aaa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003aae:	603b      	str	r3, [r7, #0]
 8003ab0:	683b      	ldr	r3, [r7, #0]
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	210f      	movs	r1, #15
 8003ab6:	f06f 0001 	mvn.w	r0, #1
 8003aba:	f008 fd2f 	bl	800c51c <HAL_NVIC_SetPriority>
 8003abe:	bf00      	nop
 8003ac0:	3708      	adds	r7, #8
 8003ac2:	46bd      	mov	sp, r7
 8003ac4:	bd80      	pop	{r7, pc}
 8003ac6:	bf00      	nop
 8003ac8:	40023800 	.word	0x40023800

08003acc <HAL_InitTick>:
 8003acc:	b580      	push	{r7, lr}
 8003ace:	b08e      	sub	sp, #56	@ 0x38
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ad8:	2300      	movs	r3, #0
 8003ada:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003adc:	2300      	movs	r3, #0
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	4b33      	ldr	r3, [pc, #204]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ae4:	4a32      	ldr	r2, [pc, #200]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae6:	f043 0310 	orr.w	r3, r3, #16
 8003aea:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aec:	4b30      	ldr	r3, [pc, #192]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003aee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003af0:	f003 0310 	and.w	r3, r3, #16
 8003af4:	60fb      	str	r3, [r7, #12]
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	f107 0210 	add.w	r2, r7, #16
 8003afc:	f107 0314 	add.w	r3, r7, #20
 8003b00:	4611      	mov	r1, r2
 8003b02:	4618      	mov	r0, r3
 8003b04:	f00c ff7e 	bl	8010a04 <HAL_RCC_GetClockConfig>
 8003b08:	6a3b      	ldr	r3, [r7, #32]
 8003b0a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003b0c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d103      	bne.n	8003b1a <HAL_InitTick+0x4e>
 8003b12:	f00c ff4f 	bl	80109b4 <HAL_RCC_GetPCLK1Freq>
 8003b16:	6378      	str	r0, [r7, #52]	@ 0x34
 8003b18:	e004      	b.n	8003b24 <HAL_InitTick+0x58>
 8003b1a:	f00c ff4b 	bl	80109b4 <HAL_RCC_GetPCLK1Freq>
 8003b1e:	4603      	mov	r3, r0
 8003b20:	005b      	lsls	r3, r3, #1
 8003b22:	637b      	str	r3, [r7, #52]	@ 0x34
 8003b24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003b26:	4a23      	ldr	r2, [pc, #140]	@ (8003bb4 <HAL_InitTick+0xe8>)
 8003b28:	fba2 2303 	umull	r2, r3, r2, r3
 8003b2c:	0c9b      	lsrs	r3, r3, #18
 8003b2e:	3b01      	subs	r3, #1
 8003b30:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b32:	4b21      	ldr	r3, [pc, #132]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b34:	4a21      	ldr	r2, [pc, #132]	@ (8003bbc <HAL_InitTick+0xf0>)
 8003b36:	601a      	str	r2, [r3, #0]
 8003b38:	4b1f      	ldr	r3, [pc, #124]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8003b3e:	60da      	str	r2, [r3, #12]
 8003b40:	4a1d      	ldr	r2, [pc, #116]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b42:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b44:	6053      	str	r3, [r2, #4]
 8003b46:	4b1c      	ldr	r3, [pc, #112]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	611a      	str	r2, [r3, #16]
 8003b4c:	4b1a      	ldr	r3, [pc, #104]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b4e:	2200      	movs	r2, #0
 8003b50:	609a      	str	r2, [r3, #8]
 8003b52:	4b19      	ldr	r3, [pc, #100]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b54:	2200      	movs	r2, #0
 8003b56:	619a      	str	r2, [r3, #24]
 8003b58:	4817      	ldr	r0, [pc, #92]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b5a:	f00d fc1b 	bl	8011394 <HAL_TIM_Base_Init>
 8003b5e:	4603      	mov	r3, r0
 8003b60:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b64:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d11b      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b6c:	4812      	ldr	r0, [pc, #72]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b6e:	f00d fc61 	bl	8011434 <HAL_TIM_Base_Start_IT>
 8003b72:	4603      	mov	r3, r0
 8003b74:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b78:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d111      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b80:	2036      	movs	r0, #54	@ 0x36
 8003b82:	f008 fce7 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	2b0f      	cmp	r3, #15
 8003b8a:	d808      	bhi.n	8003b9e <HAL_InitTick+0xd2>
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	6879      	ldr	r1, [r7, #4]
 8003b90:	2036      	movs	r0, #54	@ 0x36
 8003b92:	f008 fcc3 	bl	800c51c <HAL_NVIC_SetPriority>
 8003b96:	4a0a      	ldr	r2, [pc, #40]	@ (8003bc0 <HAL_InitTick+0xf4>)
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	6013      	str	r3, [r2, #0]
 8003b9c:	e002      	b.n	8003ba4 <HAL_InitTick+0xd8>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003ba4:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003ba8:	4618      	mov	r0, r3
 8003baa:	3738      	adds	r7, #56	@ 0x38
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bd80      	pop	{r7, pc}
 8003bb0:	40023800 	.word	0x40023800
 8003bb4:	431bde83 	.word	0x431bde83
 8003bb8:	20001a7c 	.word	0x20001a7c
 8003bbc:	40001000 	.word	0x40001000
 8003bc0:	20000018 	.word	0x20000018

08003bc4 <NMI_Handler>:
 8003bc4:	b480      	push	{r7}
 8003bc6:	af00      	add	r7, sp, #0
 8003bc8:	bf00      	nop
 8003bca:	e7fd      	b.n	8003bc8 <NMI_Handler+0x4>

08003bcc <HardFault_Handler>:
 8003bcc:	b480      	push	{r7}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	bf00      	nop
 8003bd2:	e7fd      	b.n	8003bd0 <HardFault_Handler+0x4>

08003bd4 <MemManage_Handler>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	af00      	add	r7, sp, #0
 8003bd8:	bf00      	nop
 8003bda:	e7fd      	b.n	8003bd8 <MemManage_Handler+0x4>

08003bdc <BusFault_Handler>:
 8003bdc:	b480      	push	{r7}
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	bf00      	nop
 8003be2:	e7fd      	b.n	8003be0 <BusFault_Handler+0x4>

08003be4 <UsageFault_Handler>:
 8003be4:	b480      	push	{r7}
 8003be6:	af00      	add	r7, sp, #0
 8003be8:	bf00      	nop
 8003bea:	e7fd      	b.n	8003be8 <UsageFault_Handler+0x4>

08003bec <DebugMon_Handler>:
 8003bec:	b480      	push	{r7}
 8003bee:	af00      	add	r7, sp, #0
 8003bf0:	bf00      	nop
 8003bf2:	46bd      	mov	sp, r7
 8003bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf8:	4770      	bx	lr

08003bfa <EXTI3_IRQHandler>:
 8003bfa:	b580      	push	{r7, lr}
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	2008      	movs	r0, #8
 8003c00:	f009 fa88 	bl	800d114 <HAL_GPIO_EXTI_IRQHandler>
 8003c04:	bf00      	nop
 8003c06:	bd80      	pop	{r7, pc}

08003c08 <EXTI4_IRQHandler>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	2010      	movs	r0, #16
 8003c0e:	f009 fa81 	bl	800d114 <HAL_GPIO_EXTI_IRQHandler>
 8003c12:	bf00      	nop
 8003c14:	bd80      	pop	{r7, pc}
	...

08003c18 <DMA1_Stream1_IRQHandler>:
 8003c18:	b580      	push	{r7, lr}
 8003c1a:	af00      	add	r7, sp, #0
 8003c1c:	4802      	ldr	r0, [pc, #8]	@ (8003c28 <DMA1_Stream1_IRQHandler+0x10>)
 8003c1e:	f008 fe4d 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003c22:	bf00      	nop
 8003c24:	bd80      	pop	{r7, pc}
 8003c26:	bf00      	nop
 8003c28:	20001d14 	.word	0x20001d14

08003c2c <DMA1_Stream2_IRQHandler>:
 8003c2c:	b580      	push	{r7, lr}
 8003c2e:	af00      	add	r7, sp, #0
 8003c30:	4802      	ldr	r0, [pc, #8]	@ (8003c3c <DMA1_Stream2_IRQHandler+0x10>)
 8003c32:	f008 fe43 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003c36:	bf00      	nop
 8003c38:	bd80      	pop	{r7, pc}
 8003c3a:	bf00      	nop
 8003c3c:	20001894 	.word	0x20001894

08003c40 <DMA1_Stream4_IRQHandler>:
 8003c40:	b580      	push	{r7, lr}
 8003c42:	af00      	add	r7, sp, #0
 8003c44:	4802      	ldr	r0, [pc, #8]	@ (8003c50 <DMA1_Stream4_IRQHandler+0x10>)
 8003c46:	f008 fe39 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003c4a:	bf00      	nop
 8003c4c:	bd80      	pop	{r7, pc}
 8003c4e:	bf00      	nop
 8003c50:	200018f4 	.word	0x200018f4

08003c54 <CAN1_RX0_IRQHandler>:
 8003c54:	b580      	push	{r7, lr}
 8003c56:	af00      	add	r7, sp, #0
 8003c58:	4802      	ldr	r0, [pc, #8]	@ (8003c64 <CAN1_RX0_IRQHandler+0x10>)
 8003c5a:	f008 f95d 	bl	800bf18 <HAL_CAN_IRQHandler>
 8003c5e:	bf00      	nop
 8003c60:	bd80      	pop	{r7, pc}
 8003c62:	bf00      	nop
 8003c64:	200008e4 	.word	0x200008e4

08003c68 <CAN1_RX1_IRQHandler>:
 8003c68:	b580      	push	{r7, lr}
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	4802      	ldr	r0, [pc, #8]	@ (8003c78 <CAN1_RX1_IRQHandler+0x10>)
 8003c6e:	f008 f953 	bl	800bf18 <HAL_CAN_IRQHandler>
 8003c72:	bf00      	nop
 8003c74:	bd80      	pop	{r7, pc}
 8003c76:	bf00      	nop
 8003c78:	200008e4 	.word	0x200008e4

08003c7c <EXTI9_5_IRQHandler>:
 8003c7c:	b580      	push	{r7, lr}
 8003c7e:	af00      	add	r7, sp, #0
 8003c80:	2020      	movs	r0, #32
 8003c82:	f009 fa47 	bl	800d114 <HAL_GPIO_EXTI_IRQHandler>
 8003c86:	bf00      	nop
 8003c88:	bd80      	pop	{r7, pc}
	...

08003c8c <TIM3_IRQHandler>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	af00      	add	r7, sp, #0
 8003c90:	4803      	ldr	r0, [pc, #12]	@ (8003ca0 <TIM3_IRQHandler+0x14>)
 8003c92:	f00d fdaf 	bl	80117f4 <HAL_TIM_IRQHandler>
 8003c96:	f7fe fa61 	bl	800215c <micros_tick>
 8003c9a:	bf00      	nop
 8003c9c:	bd80      	pop	{r7, pc}
 8003c9e:	bf00      	nop
 8003ca0:	20001ac8 	.word	0x20001ac8

08003ca4 <USART1_IRQHandler>:
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	af00      	add	r7, sp, #0
 8003ca8:	4802      	ldr	r0, [pc, #8]	@ (8003cb4 <USART1_IRQHandler+0x10>)
 8003caa:	f00e fda5 	bl	80127f8 <HAL_UART_IRQHandler>
 8003cae:	bf00      	nop
 8003cb0:	bd80      	pop	{r7, pc}
 8003cb2:	bf00      	nop
 8003cb4:	20001be8 	.word	0x20001be8

08003cb8 <USART3_IRQHandler>:
 8003cb8:	b580      	push	{r7, lr}
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	4802      	ldr	r0, [pc, #8]	@ (8003cc8 <USART3_IRQHandler+0x10>)
 8003cbe:	f00e fd9b 	bl	80127f8 <HAL_UART_IRQHandler>
 8003cc2:	bf00      	nop
 8003cc4:	bd80      	pop	{r7, pc}
 8003cc6:	bf00      	nop
 8003cc8:	20001c2c 	.word	0x20001c2c

08003ccc <EXTI15_10_IRQHandler>:
 8003ccc:	b580      	push	{r7, lr}
 8003cce:	af00      	add	r7, sp, #0
 8003cd0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8003cd4:	f009 fa1e 	bl	800d114 <HAL_GPIO_EXTI_IRQHandler>
 8003cd8:	f7fd fcce 	bl	8001678 <hall_int>
 8003cdc:	bf00      	nop
 8003cde:	bd80      	pop	{r7, pc}

08003ce0 <TIM6_DAC_IRQHandler>:
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	af00      	add	r7, sp, #0
 8003ce4:	4802      	ldr	r0, [pc, #8]	@ (8003cf0 <TIM6_DAC_IRQHandler+0x10>)
 8003ce6:	f00d fd85 	bl	80117f4 <HAL_TIM_IRQHandler>
 8003cea:	bf00      	nop
 8003cec:	bd80      	pop	{r7, pc}
 8003cee:	bf00      	nop
 8003cf0:	20001a7c 	.word	0x20001a7c

08003cf4 <DMA2_Stream0_IRQHandler>:
 8003cf4:	b580      	push	{r7, lr}
 8003cf6:	af00      	add	r7, sp, #0
 8003cf8:	4802      	ldr	r0, [pc, #8]	@ (8003d04 <DMA2_Stream0_IRQHandler+0x10>)
 8003cfa:	f008 fddf 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003cfe:	bf00      	nop
 8003d00:	bd80      	pop	{r7, pc}
 8003d02:	bf00      	nop
 8003d04:	200019bc 	.word	0x200019bc

08003d08 <DMA2_Stream1_IRQHandler>:
 8003d08:	b580      	push	{r7, lr}
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	4802      	ldr	r0, [pc, #8]	@ (8003d18 <DMA2_Stream1_IRQHandler+0x10>)
 8003d0e:	f008 fdd5 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003d12:	bf00      	nop
 8003d14:	bd80      	pop	{r7, pc}
 8003d16:	bf00      	nop
 8003d18:	20001d74 	.word	0x20001d74

08003d1c <DMA2_Stream3_IRQHandler>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	4802      	ldr	r0, [pc, #8]	@ (8003d2c <DMA2_Stream3_IRQHandler+0x10>)
 8003d22:	f008 fdcb 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003d26:	bf00      	nop
 8003d28:	bd80      	pop	{r7, pc}
 8003d2a:	bf00      	nop
 8003d2c:	20001a1c 	.word	0x20001a1c

08003d30 <CAN2_RX0_IRQHandler>:
 8003d30:	b580      	push	{r7, lr}
 8003d32:	af00      	add	r7, sp, #0
 8003d34:	4802      	ldr	r0, [pc, #8]	@ (8003d40 <CAN2_RX0_IRQHandler+0x10>)
 8003d36:	f008 f8ef 	bl	800bf18 <HAL_CAN_IRQHandler>
 8003d3a:	bf00      	nop
 8003d3c:	bd80      	pop	{r7, pc}
 8003d3e:	bf00      	nop
 8003d40:	2000090c 	.word	0x2000090c

08003d44 <CAN2_RX1_IRQHandler>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	af00      	add	r7, sp, #0
 8003d48:	4802      	ldr	r0, [pc, #8]	@ (8003d54 <CAN2_RX1_IRQHandler+0x10>)
 8003d4a:	f008 f8e5 	bl	800bf18 <HAL_CAN_IRQHandler>
 8003d4e:	bf00      	nop
 8003d50:	bd80      	pop	{r7, pc}
 8003d52:	bf00      	nop
 8003d54:	2000090c 	.word	0x2000090c

08003d58 <OTG_FS_IRQHandler>:
 8003d58:	b580      	push	{r7, lr}
 8003d5a:	af00      	add	r7, sp, #0
 8003d5c:	4802      	ldr	r0, [pc, #8]	@ (8003d68 <OTG_FS_IRQHandler+0x10>)
 8003d5e:	f00b f8cc 	bl	800eefa <HAL_PCD_IRQHandler>
 8003d62:	bf00      	nop
 8003d64:	bd80      	pop	{r7, pc}
 8003d66:	bf00      	nop
 8003d68:	2000c85c 	.word	0x2000c85c

08003d6c <DMA2_Stream5_IRQHandler>:
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	4802      	ldr	r0, [pc, #8]	@ (8003d7c <DMA2_Stream5_IRQHandler+0x10>)
 8003d72:	f008 fda3 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003d76:	bf00      	nop
 8003d78:	bd80      	pop	{r7, pc}
 8003d7a:	bf00      	nop
 8003d7c:	20001cb4 	.word	0x20001cb4

08003d80 <DMA2_Stream6_IRQHandler>:
 8003d80:	b580      	push	{r7, lr}
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	4802      	ldr	r0, [pc, #8]	@ (8003d90 <DMA2_Stream6_IRQHandler+0x10>)
 8003d86:	f008 fd99 	bl	800c8bc <HAL_DMA_IRQHandler>
 8003d8a:	bf00      	nop
 8003d8c:	bd80      	pop	{r7, pc}
 8003d8e:	bf00      	nop
 8003d90:	20001dd4 	.word	0x20001dd4

08003d94 <USART6_IRQHandler>:
 8003d94:	b580      	push	{r7, lr}
 8003d96:	af00      	add	r7, sp, #0
 8003d98:	4802      	ldr	r0, [pc, #8]	@ (8003da4 <USART6_IRQHandler+0x10>)
 8003d9a:	f00e fd2d 	bl	80127f8 <HAL_UART_IRQHandler>
 8003d9e:	bf00      	nop
 8003da0:	bd80      	pop	{r7, pc}
 8003da2:	bf00      	nop
 8003da4:	20001c70 	.word	0x20001c70

08003da8 <I2C3_ER_IRQHandler>:
 8003da8:	b580      	push	{r7, lr}
 8003daa:	af00      	add	r7, sp, #0
 8003dac:	4802      	ldr	r0, [pc, #8]	@ (8003db8 <I2C3_ER_IRQHandler+0x10>)
 8003dae:	f009 ffc1 	bl	800dd34 <HAL_I2C_ER_IRQHandler>
 8003db2:	bf00      	nop
 8003db4:	bd80      	pop	{r7, pc}
 8003db6:	bf00      	nop
 8003db8:	20001840 	.word	0x20001840

08003dbc <_getpid>:
 8003dbc:	b480      	push	{r7}
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	2301      	movs	r3, #1
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	46bd      	mov	sp, r7
 8003dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dca:	4770      	bx	lr

08003dcc <_kill>:
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b082      	sub	sp, #8
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	6039      	str	r1, [r7, #0]
 8003dd6:	f017 f93f 	bl	801b058 <__errno>
 8003dda:	4603      	mov	r3, r0
 8003ddc:	2216      	movs	r2, #22
 8003dde:	601a      	str	r2, [r3, #0]
 8003de0:	f04f 33ff 	mov.w	r3, #4294967295
 8003de4:	4618      	mov	r0, r3
 8003de6:	3708      	adds	r7, #8
 8003de8:	46bd      	mov	sp, r7
 8003dea:	bd80      	pop	{r7, pc}

08003dec <_exit>:
 8003dec:	b580      	push	{r7, lr}
 8003dee:	b082      	sub	sp, #8
 8003df0:	af00      	add	r7, sp, #0
 8003df2:	6078      	str	r0, [r7, #4]
 8003df4:	f04f 31ff 	mov.w	r1, #4294967295
 8003df8:	6878      	ldr	r0, [r7, #4]
 8003dfa:	f7ff ffe7 	bl	8003dcc <_kill>
 8003dfe:	bf00      	nop
 8003e00:	e7fd      	b.n	8003dfe <_exit+0x12>

08003e02 <_read>:
 8003e02:	b580      	push	{r7, lr}
 8003e04:	b086      	sub	sp, #24
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	60f8      	str	r0, [r7, #12]
 8003e0a:	60b9      	str	r1, [r7, #8]
 8003e0c:	607a      	str	r2, [r7, #4]
 8003e0e:	2300      	movs	r3, #0
 8003e10:	617b      	str	r3, [r7, #20]
 8003e12:	e00a      	b.n	8003e2a <_read+0x28>
 8003e14:	f3af 8000 	nop.w
 8003e18:	4601      	mov	r1, r0
 8003e1a:	68bb      	ldr	r3, [r7, #8]
 8003e1c:	1c5a      	adds	r2, r3, #1
 8003e1e:	60ba      	str	r2, [r7, #8]
 8003e20:	b2ca      	uxtb	r2, r1
 8003e22:	701a      	strb	r2, [r3, #0]
 8003e24:	697b      	ldr	r3, [r7, #20]
 8003e26:	3301      	adds	r3, #1
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	697a      	ldr	r2, [r7, #20]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	429a      	cmp	r2, r3
 8003e30:	dbf0      	blt.n	8003e14 <_read+0x12>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	4618      	mov	r0, r3
 8003e36:	3718      	adds	r7, #24
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	bd80      	pop	{r7, pc}

08003e3c <_write>:
 8003e3c:	b580      	push	{r7, lr}
 8003e3e:	b086      	sub	sp, #24
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	60f8      	str	r0, [r7, #12]
 8003e44:	60b9      	str	r1, [r7, #8]
 8003e46:	607a      	str	r2, [r7, #4]
 8003e48:	2300      	movs	r3, #0
 8003e4a:	617b      	str	r3, [r7, #20]
 8003e4c:	e009      	b.n	8003e62 <_write+0x26>
 8003e4e:	68bb      	ldr	r3, [r7, #8]
 8003e50:	1c5a      	adds	r2, r3, #1
 8003e52:	60ba      	str	r2, [r7, #8]
 8003e54:	781b      	ldrb	r3, [r3, #0]
 8003e56:	4618      	mov	r0, r3
 8003e58:	f3af 8000 	nop.w
 8003e5c:	697b      	ldr	r3, [r7, #20]
 8003e5e:	3301      	adds	r3, #1
 8003e60:	617b      	str	r3, [r7, #20]
 8003e62:	697a      	ldr	r2, [r7, #20]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	429a      	cmp	r2, r3
 8003e68:	dbf1      	blt.n	8003e4e <_write+0x12>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	3718      	adds	r7, #24
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}

08003e74 <_close>:
 8003e74:	b480      	push	{r7}
 8003e76:	b083      	sub	sp, #12
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	f04f 33ff 	mov.w	r3, #4294967295
 8003e80:	4618      	mov	r0, r3
 8003e82:	370c      	adds	r7, #12
 8003e84:	46bd      	mov	sp, r7
 8003e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8a:	4770      	bx	lr

08003e8c <_fstat>:
 8003e8c:	b480      	push	{r7}
 8003e8e:	b083      	sub	sp, #12
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	6039      	str	r1, [r7, #0]
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003e9c:	605a      	str	r2, [r3, #4]
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	370c      	adds	r7, #12
 8003ea4:	46bd      	mov	sp, r7
 8003ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eaa:	4770      	bx	lr

08003eac <_isatty>:
 8003eac:	b480      	push	{r7}
 8003eae:	b083      	sub	sp, #12
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	6078      	str	r0, [r7, #4]
 8003eb4:	2301      	movs	r3, #1
 8003eb6:	4618      	mov	r0, r3
 8003eb8:	370c      	adds	r7, #12
 8003eba:	46bd      	mov	sp, r7
 8003ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec0:	4770      	bx	lr

08003ec2 <_lseek>:
 8003ec2:	b480      	push	{r7}
 8003ec4:	b085      	sub	sp, #20
 8003ec6:	af00      	add	r7, sp, #0
 8003ec8:	60f8      	str	r0, [r7, #12]
 8003eca:	60b9      	str	r1, [r7, #8]
 8003ecc:	607a      	str	r2, [r7, #4]
 8003ece:	2300      	movs	r3, #0
 8003ed0:	4618      	mov	r0, r3
 8003ed2:	3714      	adds	r7, #20
 8003ed4:	46bd      	mov	sp, r7
 8003ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eda:	4770      	bx	lr

08003edc <_sbrk>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b086      	sub	sp, #24
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	6078      	str	r0, [r7, #4]
 8003ee4:	4a14      	ldr	r2, [pc, #80]	@ (8003f38 <_sbrk+0x5c>)
 8003ee6:	4b15      	ldr	r3, [pc, #84]	@ (8003f3c <_sbrk+0x60>)
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	617b      	str	r3, [r7, #20]
 8003eec:	697b      	ldr	r3, [r7, #20]
 8003eee:	613b      	str	r3, [r7, #16]
 8003ef0:	4b13      	ldr	r3, [pc, #76]	@ (8003f40 <_sbrk+0x64>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d102      	bne.n	8003efe <_sbrk+0x22>
 8003ef8:	4b11      	ldr	r3, [pc, #68]	@ (8003f40 <_sbrk+0x64>)
 8003efa:	4a12      	ldr	r2, [pc, #72]	@ (8003f44 <_sbrk+0x68>)
 8003efc:	601a      	str	r2, [r3, #0]
 8003efe:	4b10      	ldr	r3, [pc, #64]	@ (8003f40 <_sbrk+0x64>)
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4413      	add	r3, r2
 8003f06:	693a      	ldr	r2, [r7, #16]
 8003f08:	429a      	cmp	r2, r3
 8003f0a:	d207      	bcs.n	8003f1c <_sbrk+0x40>
 8003f0c:	f017 f8a4 	bl	801b058 <__errno>
 8003f10:	4603      	mov	r3, r0
 8003f12:	220c      	movs	r2, #12
 8003f14:	601a      	str	r2, [r3, #0]
 8003f16:	f04f 33ff 	mov.w	r3, #4294967295
 8003f1a:	e009      	b.n	8003f30 <_sbrk+0x54>
 8003f1c:	4b08      	ldr	r3, [pc, #32]	@ (8003f40 <_sbrk+0x64>)
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	60fb      	str	r3, [r7, #12]
 8003f22:	4b07      	ldr	r3, [pc, #28]	@ (8003f40 <_sbrk+0x64>)
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	4413      	add	r3, r2
 8003f2a:	4a05      	ldr	r2, [pc, #20]	@ (8003f40 <_sbrk+0x64>)
 8003f2c:	6013      	str	r3, [r2, #0]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	4618      	mov	r0, r3
 8003f32:	3718      	adds	r7, #24
 8003f34:	46bd      	mov	sp, r7
 8003f36:	bd80      	pop	{r7, pc}
 8003f38:	20020000 	.word	0x20020000
 8003f3c:	00009000 	.word	0x00009000
 8003f40:	20001ac4 	.word	0x20001ac4
 8003f44:	2000d298 	.word	0x2000d298

08003f48 <SystemInit>:
 8003f48:	b480      	push	{r7}
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	4b08      	ldr	r3, [pc, #32]	@ (8003f70 <SystemInit+0x28>)
 8003f4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003f52:	4a07      	ldr	r2, [pc, #28]	@ (8003f70 <SystemInit+0x28>)
 8003f54:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003f58:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003f5c:	4b04      	ldr	r3, [pc, #16]	@ (8003f70 <SystemInit+0x28>)
 8003f5e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003f62:	609a      	str	r2, [r3, #8]
 8003f64:	bf00      	nop
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop
 8003f70:	e000ed00 	.word	0xe000ed00

08003f74 <LL_TIM_DisableARRPreload>:
 8003f74:	b480      	push	{r7}
 8003f76:	b083      	sub	sp, #12
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	6078      	str	r0, [r7, #4]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	601a      	str	r2, [r3, #0]
 8003f88:	bf00      	nop
 8003f8a:	370c      	adds	r7, #12
 8003f8c:	46bd      	mov	sp, r7
 8003f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f92:	4770      	bx	lr

08003f94 <LL_TIM_SetClockSource>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	6039      	str	r1, [r7, #0]
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	689b      	ldr	r3, [r3, #8]
 8003fa2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003fa6:	f023 0307 	bic.w	r3, r3, #7
 8003faa:	683a      	ldr	r2, [r7, #0]
 8003fac:	431a      	orrs	r2, r3
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	609a      	str	r2, [r3, #8]
 8003fb2:	bf00      	nop
 8003fb4:	370c      	adds	r7, #12
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fbc:	4770      	bx	lr

08003fbe <LL_TIM_SetTriggerOutput>:
 8003fbe:	b480      	push	{r7}
 8003fc0:	b083      	sub	sp, #12
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	6078      	str	r0, [r7, #4]
 8003fc6:	6039      	str	r1, [r7, #0]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	685b      	ldr	r3, [r3, #4]
 8003fcc:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8003fd0:	683b      	ldr	r3, [r7, #0]
 8003fd2:	431a      	orrs	r2, r3
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	605a      	str	r2, [r3, #4]
 8003fd8:	bf00      	nop
 8003fda:	370c      	adds	r7, #12
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe2:	4770      	bx	lr

08003fe4 <LL_TIM_DisableMasterSlaveMode>:
 8003fe4:	b480      	push	{r7}
 8003fe6:	b083      	sub	sp, #12
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	689b      	ldr	r3, [r3, #8]
 8003ff0:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	609a      	str	r2, [r3, #8]
 8003ff8:	bf00      	nop
 8003ffa:	370c      	adds	r7, #12
 8003ffc:	46bd      	mov	sp, r7
 8003ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004002:	4770      	bx	lr

08004004 <LL_APB1_GRP1_EnableClock>:
 8004004:	b480      	push	{r7}
 8004006:	b085      	sub	sp, #20
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
 800400c:	4b08      	ldr	r3, [pc, #32]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800400e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004010:	4907      	ldr	r1, [pc, #28]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	4313      	orrs	r3, r2
 8004016:	640b      	str	r3, [r1, #64]	@ 0x40
 8004018:	4b05      	ldr	r3, [pc, #20]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800401a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	4013      	ands	r3, r2
 8004020:	60fb      	str	r3, [r7, #12]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	bf00      	nop
 8004026:	3714      	adds	r7, #20
 8004028:	46bd      	mov	sp, r7
 800402a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402e:	4770      	bx	lr
 8004030:	40023800 	.word	0x40023800

08004034 <MX_TIM2_Init>:
 8004034:	b580      	push	{r7, lr}
 8004036:	b086      	sub	sp, #24
 8004038:	af00      	add	r7, sp, #0
 800403a:	1d3b      	adds	r3, r7, #4
 800403c:	2200      	movs	r2, #0
 800403e:	601a      	str	r2, [r3, #0]
 8004040:	605a      	str	r2, [r3, #4]
 8004042:	609a      	str	r2, [r3, #8]
 8004044:	60da      	str	r2, [r3, #12]
 8004046:	611a      	str	r2, [r3, #16]
 8004048:	2001      	movs	r0, #1
 800404a:	f7ff ffdb 	bl	8004004 <LL_APB1_GRP1_EnableClock>
 800404e:	2300      	movs	r3, #0
 8004050:	80bb      	strh	r3, [r7, #4]
 8004052:	2300      	movs	r3, #0
 8004054:	60bb      	str	r3, [r7, #8]
 8004056:	f04f 33ff 	mov.w	r3, #4294967295
 800405a:	60fb      	str	r3, [r7, #12]
 800405c:	2300      	movs	r3, #0
 800405e:	613b      	str	r3, [r7, #16]
 8004060:	1d3b      	adds	r3, r7, #4
 8004062:	4619      	mov	r1, r3
 8004064:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004068:	f00f fb9e 	bl	80137a8 <LL_TIM_Init>
 800406c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004070:	f7ff ff80 	bl	8003f74 <LL_TIM_DisableARRPreload>
 8004074:	2100      	movs	r1, #0
 8004076:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800407a:	f7ff ff8b 	bl	8003f94 <LL_TIM_SetClockSource>
 800407e:	2100      	movs	r1, #0
 8004080:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004084:	f7ff ff9b 	bl	8003fbe <LL_TIM_SetTriggerOutput>
 8004088:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800408c:	f7ff ffaa 	bl	8003fe4 <LL_TIM_DisableMasterSlaveMode>
 8004090:	bf00      	nop
 8004092:	3718      	adds	r7, #24
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <MX_TIM3_Init>:
 8004098:	b580      	push	{r7, lr}
 800409a:	b08e      	sub	sp, #56	@ 0x38
 800409c:	af00      	add	r7, sp, #0
 800409e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80040a2:	2200      	movs	r2, #0
 80040a4:	601a      	str	r2, [r3, #0]
 80040a6:	605a      	str	r2, [r3, #4]
 80040a8:	609a      	str	r2, [r3, #8]
 80040aa:	60da      	str	r2, [r3, #12]
 80040ac:	f107 0320 	add.w	r3, r7, #32
 80040b0:	2200      	movs	r2, #0
 80040b2:	601a      	str	r2, [r3, #0]
 80040b4:	605a      	str	r2, [r3, #4]
 80040b6:	1d3b      	adds	r3, r7, #4
 80040b8:	2200      	movs	r2, #0
 80040ba:	601a      	str	r2, [r3, #0]
 80040bc:	605a      	str	r2, [r3, #4]
 80040be:	609a      	str	r2, [r3, #8]
 80040c0:	60da      	str	r2, [r3, #12]
 80040c2:	611a      	str	r2, [r3, #16]
 80040c4:	615a      	str	r2, [r3, #20]
 80040c6:	619a      	str	r2, [r3, #24]
 80040c8:	4b2a      	ldr	r3, [pc, #168]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ca:	4a2b      	ldr	r2, [pc, #172]	@ (8004178 <MX_TIM3_Init+0xe0>)
 80040cc:	601a      	str	r2, [r3, #0]
 80040ce:	4b29      	ldr	r3, [pc, #164]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d0:	22a7      	movs	r2, #167	@ 0xa7
 80040d2:	605a      	str	r2, [r3, #4]
 80040d4:	4b27      	ldr	r3, [pc, #156]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d6:	2200      	movs	r2, #0
 80040d8:	609a      	str	r2, [r3, #8]
 80040da:	4b26      	ldr	r3, [pc, #152]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040dc:	2201      	movs	r2, #1
 80040de:	60da      	str	r2, [r3, #12]
 80040e0:	4b24      	ldr	r3, [pc, #144]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e2:	2200      	movs	r2, #0
 80040e4:	611a      	str	r2, [r3, #16]
 80040e6:	4b23      	ldr	r3, [pc, #140]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e8:	2200      	movs	r2, #0
 80040ea:	619a      	str	r2, [r3, #24]
 80040ec:	4821      	ldr	r0, [pc, #132]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ee:	f00d f951 	bl	8011394 <HAL_TIM_Base_Init>
 80040f2:	4603      	mov	r3, r0
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d001      	beq.n	80040fc <MX_TIM3_Init+0x64>
 80040f8:	f7ff fb7e 	bl	80037f8 <Error_Handler>
 80040fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004100:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004102:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8004106:	4619      	mov	r1, r3
 8004108:	481a      	ldr	r0, [pc, #104]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800410a:	f00d fd99 	bl	8011c40 <HAL_TIM_ConfigClockSource>
 800410e:	4603      	mov	r3, r0
 8004110:	2b00      	cmp	r3, #0
 8004112:	d001      	beq.n	8004118 <MX_TIM3_Init+0x80>
 8004114:	f7ff fb70 	bl	80037f8 <Error_Handler>
 8004118:	4816      	ldr	r0, [pc, #88]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800411a:	f00d f9fb 	bl	8011514 <HAL_TIM_OC_Init>
 800411e:	4603      	mov	r3, r0
 8004120:	2b00      	cmp	r3, #0
 8004122:	d001      	beq.n	8004128 <MX_TIM3_Init+0x90>
 8004124:	f7ff fb68 	bl	80037f8 <Error_Handler>
 8004128:	2300      	movs	r3, #0
 800412a:	623b      	str	r3, [r7, #32]
 800412c:	2300      	movs	r3, #0
 800412e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004130:	f107 0320 	add.w	r3, r7, #32
 8004134:	4619      	mov	r1, r3
 8004136:	480f      	ldr	r0, [pc, #60]	@ (8004174 <MX_TIM3_Init+0xdc>)
 8004138:	f00e f982 	bl	8012440 <HAL_TIMEx_MasterConfigSynchronization>
 800413c:	4603      	mov	r3, r0
 800413e:	2b00      	cmp	r3, #0
 8004140:	d001      	beq.n	8004146 <MX_TIM3_Init+0xae>
 8004142:	f7ff fb59 	bl	80037f8 <Error_Handler>
 8004146:	2300      	movs	r3, #0
 8004148:	607b      	str	r3, [r7, #4]
 800414a:	2300      	movs	r3, #0
 800414c:	60bb      	str	r3, [r7, #8]
 800414e:	2300      	movs	r3, #0
 8004150:	60fb      	str	r3, [r7, #12]
 8004152:	2300      	movs	r3, #0
 8004154:	617b      	str	r3, [r7, #20]
 8004156:	1d3b      	adds	r3, r7, #4
 8004158:	2200      	movs	r2, #0
 800415a:	4619      	mov	r1, r3
 800415c:	4805      	ldr	r0, [pc, #20]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800415e:	f00d fc51 	bl	8011a04 <HAL_TIM_OC_ConfigChannel>
 8004162:	4603      	mov	r3, r0
 8004164:	2b00      	cmp	r3, #0
 8004166:	d001      	beq.n	800416c <MX_TIM3_Init+0xd4>
 8004168:	f7ff fb46 	bl	80037f8 <Error_Handler>
 800416c:	bf00      	nop
 800416e:	3738      	adds	r7, #56	@ 0x38
 8004170:	46bd      	mov	sp, r7
 8004172:	bd80      	pop	{r7, pc}
 8004174:	20001ac8 	.word	0x20001ac8
 8004178:	40000400 	.word	0x40000400

0800417c <MX_TIM4_Init>:
 800417c:	b580      	push	{r7, lr}
 800417e:	b08a      	sub	sp, #40	@ 0x28
 8004180:	af00      	add	r7, sp, #0
 8004182:	f107 0320 	add.w	r3, r7, #32
 8004186:	2200      	movs	r2, #0
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	605a      	str	r2, [r3, #4]
 800418c:	1d3b      	adds	r3, r7, #4
 800418e:	2200      	movs	r2, #0
 8004190:	601a      	str	r2, [r3, #0]
 8004192:	605a      	str	r2, [r3, #4]
 8004194:	609a      	str	r2, [r3, #8]
 8004196:	60da      	str	r2, [r3, #12]
 8004198:	611a      	str	r2, [r3, #16]
 800419a:	615a      	str	r2, [r3, #20]
 800419c:	619a      	str	r2, [r3, #24]
 800419e:	4b22      	ldr	r3, [pc, #136]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a0:	4a22      	ldr	r2, [pc, #136]	@ (800422c <MX_TIM4_Init+0xb0>)
 80041a2:	601a      	str	r2, [r3, #0]
 80041a4:	4b20      	ldr	r3, [pc, #128]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041aa:	605a      	str	r2, [r3, #4]
 80041ac:	4b1e      	ldr	r3, [pc, #120]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041ae:	2200      	movs	r2, #0
 80041b0:	609a      	str	r2, [r3, #8]
 80041b2:	4b1d      	ldr	r3, [pc, #116]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041b4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041b8:	60da      	str	r2, [r3, #12]
 80041ba:	4b1b      	ldr	r3, [pc, #108]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041bc:	2200      	movs	r2, #0
 80041be:	611a      	str	r2, [r3, #16]
 80041c0:	4b19      	ldr	r3, [pc, #100]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c2:	2200      	movs	r2, #0
 80041c4:	619a      	str	r2, [r3, #24]
 80041c6:	4818      	ldr	r0, [pc, #96]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c8:	f00d f9fd 	bl	80115c6 <HAL_TIM_PWM_Init>
 80041cc:	4603      	mov	r3, r0
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	d001      	beq.n	80041d6 <MX_TIM4_Init+0x5a>
 80041d2:	f7ff fb11 	bl	80037f8 <Error_Handler>
 80041d6:	2300      	movs	r3, #0
 80041d8:	623b      	str	r3, [r7, #32]
 80041da:	2300      	movs	r3, #0
 80041dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80041de:	f107 0320 	add.w	r3, r7, #32
 80041e2:	4619      	mov	r1, r3
 80041e4:	4810      	ldr	r0, [pc, #64]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041e6:	f00e f92b 	bl	8012440 <HAL_TIMEx_MasterConfigSynchronization>
 80041ea:	4603      	mov	r3, r0
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d001      	beq.n	80041f4 <MX_TIM4_Init+0x78>
 80041f0:	f7ff fb02 	bl	80037f8 <Error_Handler>
 80041f4:	2360      	movs	r3, #96	@ 0x60
 80041f6:	607b      	str	r3, [r7, #4]
 80041f8:	2300      	movs	r3, #0
 80041fa:	60bb      	str	r3, [r7, #8]
 80041fc:	2300      	movs	r3, #0
 80041fe:	60fb      	str	r3, [r7, #12]
 8004200:	2300      	movs	r3, #0
 8004202:	617b      	str	r3, [r7, #20]
 8004204:	1d3b      	adds	r3, r7, #4
 8004206:	2208      	movs	r2, #8
 8004208:	4619      	mov	r1, r3
 800420a:	4807      	ldr	r0, [pc, #28]	@ (8004228 <MX_TIM4_Init+0xac>)
 800420c:	f00d fc56 	bl	8011abc <HAL_TIM_PWM_ConfigChannel>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d001      	beq.n	800421a <MX_TIM4_Init+0x9e>
 8004216:	f7ff faef 	bl	80037f8 <Error_Handler>
 800421a:	4803      	ldr	r0, [pc, #12]	@ (8004228 <MX_TIM4_Init+0xac>)
 800421c:	f000 f93c 	bl	8004498 <HAL_TIM_MspPostInit>
 8004220:	bf00      	nop
 8004222:	3728      	adds	r7, #40	@ 0x28
 8004224:	46bd      	mov	sp, r7
 8004226:	bd80      	pop	{r7, pc}
 8004228:	20001b10 	.word	0x20001b10
 800422c:	40000800 	.word	0x40000800

08004230 <MX_TIM5_Init>:
 8004230:	b580      	push	{r7, lr}
 8004232:	b08a      	sub	sp, #40	@ 0x28
 8004234:	af00      	add	r7, sp, #0
 8004236:	f107 0320 	add.w	r3, r7, #32
 800423a:	2200      	movs	r2, #0
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	605a      	str	r2, [r3, #4]
 8004240:	1d3b      	adds	r3, r7, #4
 8004242:	2200      	movs	r2, #0
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	605a      	str	r2, [r3, #4]
 8004248:	609a      	str	r2, [r3, #8]
 800424a:	60da      	str	r2, [r3, #12]
 800424c:	611a      	str	r2, [r3, #16]
 800424e:	615a      	str	r2, [r3, #20]
 8004250:	619a      	str	r2, [r3, #24]
 8004252:	4b2d      	ldr	r3, [pc, #180]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004254:	4a2d      	ldr	r2, [pc, #180]	@ (800430c <MX_TIM5_Init+0xdc>)
 8004256:	601a      	str	r2, [r3, #0]
 8004258:	4b2b      	ldr	r3, [pc, #172]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800425a:	f240 5225 	movw	r2, #1317	@ 0x525
 800425e:	605a      	str	r2, [r3, #4]
 8004260:	4b29      	ldr	r3, [pc, #164]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004262:	2200      	movs	r2, #0
 8004264:	609a      	str	r2, [r3, #8]
 8004266:	4b28      	ldr	r3, [pc, #160]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004268:	22ff      	movs	r2, #255	@ 0xff
 800426a:	60da      	str	r2, [r3, #12]
 800426c:	4b26      	ldr	r3, [pc, #152]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800426e:	2200      	movs	r2, #0
 8004270:	611a      	str	r2, [r3, #16]
 8004272:	4b25      	ldr	r3, [pc, #148]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004274:	2280      	movs	r2, #128	@ 0x80
 8004276:	619a      	str	r2, [r3, #24]
 8004278:	4823      	ldr	r0, [pc, #140]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800427a:	f00d f9a4 	bl	80115c6 <HAL_TIM_PWM_Init>
 800427e:	4603      	mov	r3, r0
 8004280:	2b00      	cmp	r3, #0
 8004282:	d001      	beq.n	8004288 <MX_TIM5_Init+0x58>
 8004284:	f7ff fab8 	bl	80037f8 <Error_Handler>
 8004288:	2300      	movs	r3, #0
 800428a:	623b      	str	r3, [r7, #32]
 800428c:	2300      	movs	r3, #0
 800428e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004290:	f107 0320 	add.w	r3, r7, #32
 8004294:	4619      	mov	r1, r3
 8004296:	481c      	ldr	r0, [pc, #112]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004298:	f00e f8d2 	bl	8012440 <HAL_TIMEx_MasterConfigSynchronization>
 800429c:	4603      	mov	r3, r0
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d001      	beq.n	80042a6 <MX_TIM5_Init+0x76>
 80042a2:	f7ff faa9 	bl	80037f8 <Error_Handler>
 80042a6:	2360      	movs	r3, #96	@ 0x60
 80042a8:	607b      	str	r3, [r7, #4]
 80042aa:	2300      	movs	r3, #0
 80042ac:	60bb      	str	r3, [r7, #8]
 80042ae:	2302      	movs	r3, #2
 80042b0:	60fb      	str	r3, [r7, #12]
 80042b2:	2304      	movs	r3, #4
 80042b4:	617b      	str	r3, [r7, #20]
 80042b6:	1d3b      	adds	r3, r7, #4
 80042b8:	2200      	movs	r2, #0
 80042ba:	4619      	mov	r1, r3
 80042bc:	4812      	ldr	r0, [pc, #72]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042be:	f00d fbfd 	bl	8011abc <HAL_TIM_PWM_ConfigChannel>
 80042c2:	4603      	mov	r3, r0
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d001      	beq.n	80042cc <MX_TIM5_Init+0x9c>
 80042c8:	f7ff fa96 	bl	80037f8 <Error_Handler>
 80042cc:	1d3b      	adds	r3, r7, #4
 80042ce:	2204      	movs	r2, #4
 80042d0:	4619      	mov	r1, r3
 80042d2:	480d      	ldr	r0, [pc, #52]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042d4:	f00d fbf2 	bl	8011abc <HAL_TIM_PWM_ConfigChannel>
 80042d8:	4603      	mov	r3, r0
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d001      	beq.n	80042e2 <MX_TIM5_Init+0xb2>
 80042de:	f7ff fa8b 	bl	80037f8 <Error_Handler>
 80042e2:	1d3b      	adds	r3, r7, #4
 80042e4:	2208      	movs	r2, #8
 80042e6:	4619      	mov	r1, r3
 80042e8:	4807      	ldr	r0, [pc, #28]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042ea:	f00d fbe7 	bl	8011abc <HAL_TIM_PWM_ConfigChannel>
 80042ee:	4603      	mov	r3, r0
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d001      	beq.n	80042f8 <MX_TIM5_Init+0xc8>
 80042f4:	f7ff fa80 	bl	80037f8 <Error_Handler>
 80042f8:	4803      	ldr	r0, [pc, #12]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042fa:	f000 f8cd 	bl	8004498 <HAL_TIM_MspPostInit>
 80042fe:	bf00      	nop
 8004300:	3728      	adds	r7, #40	@ 0x28
 8004302:	46bd      	mov	sp, r7
 8004304:	bd80      	pop	{r7, pc}
 8004306:	bf00      	nop
 8004308:	20001b58 	.word	0x20001b58
 800430c:	40000c00 	.word	0x40000c00

08004310 <MX_TIM10_Init>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b088      	sub	sp, #32
 8004314:	af00      	add	r7, sp, #0
 8004316:	1d3b      	adds	r3, r7, #4
 8004318:	2200      	movs	r2, #0
 800431a:	601a      	str	r2, [r3, #0]
 800431c:	605a      	str	r2, [r3, #4]
 800431e:	609a      	str	r2, [r3, #8]
 8004320:	60da      	str	r2, [r3, #12]
 8004322:	611a      	str	r2, [r3, #16]
 8004324:	615a      	str	r2, [r3, #20]
 8004326:	619a      	str	r2, [r3, #24]
 8004328:	4b1e      	ldr	r3, [pc, #120]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800432a:	4a1f      	ldr	r2, [pc, #124]	@ (80043a8 <MX_TIM10_Init+0x98>)
 800432c:	601a      	str	r2, [r3, #0]
 800432e:	4b1d      	ldr	r3, [pc, #116]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004330:	2200      	movs	r2, #0
 8004332:	605a      	str	r2, [r3, #4]
 8004334:	4b1b      	ldr	r3, [pc, #108]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004336:	2200      	movs	r2, #0
 8004338:	609a      	str	r2, [r3, #8]
 800433a:	4b1a      	ldr	r3, [pc, #104]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800433c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8004340:	60da      	str	r2, [r3, #12]
 8004342:	4b18      	ldr	r3, [pc, #96]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004344:	2200      	movs	r2, #0
 8004346:	611a      	str	r2, [r3, #16]
 8004348:	4b16      	ldr	r3, [pc, #88]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800434a:	2200      	movs	r2, #0
 800434c:	619a      	str	r2, [r3, #24]
 800434e:	4815      	ldr	r0, [pc, #84]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004350:	f00d f820 	bl	8011394 <HAL_TIM_Base_Init>
 8004354:	4603      	mov	r3, r0
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <MX_TIM10_Init+0x4e>
 800435a:	f7ff fa4d 	bl	80037f8 <Error_Handler>
 800435e:	4811      	ldr	r0, [pc, #68]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004360:	f00d f931 	bl	80115c6 <HAL_TIM_PWM_Init>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	d001      	beq.n	800436e <MX_TIM10_Init+0x5e>
 800436a:	f7ff fa45 	bl	80037f8 <Error_Handler>
 800436e:	2360      	movs	r3, #96	@ 0x60
 8004370:	607b      	str	r3, [r7, #4]
 8004372:	2300      	movs	r3, #0
 8004374:	60bb      	str	r3, [r7, #8]
 8004376:	2300      	movs	r3, #0
 8004378:	60fb      	str	r3, [r7, #12]
 800437a:	2300      	movs	r3, #0
 800437c:	617b      	str	r3, [r7, #20]
 800437e:	1d3b      	adds	r3, r7, #4
 8004380:	2200      	movs	r2, #0
 8004382:	4619      	mov	r1, r3
 8004384:	4807      	ldr	r0, [pc, #28]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004386:	f00d fb99 	bl	8011abc <HAL_TIM_PWM_ConfigChannel>
 800438a:	4603      	mov	r3, r0
 800438c:	2b00      	cmp	r3, #0
 800438e:	d001      	beq.n	8004394 <MX_TIM10_Init+0x84>
 8004390:	f7ff fa32 	bl	80037f8 <Error_Handler>
 8004394:	4803      	ldr	r0, [pc, #12]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004396:	f000 f87f 	bl	8004498 <HAL_TIM_MspPostInit>
 800439a:	bf00      	nop
 800439c:	3720      	adds	r7, #32
 800439e:	46bd      	mov	sp, r7
 80043a0:	bd80      	pop	{r7, pc}
 80043a2:	bf00      	nop
 80043a4:	20001ba0 	.word	0x20001ba0
 80043a8:	40014400 	.word	0x40014400

080043ac <HAL_TIM_Base_MspInit>:
 80043ac:	b580      	push	{r7, lr}
 80043ae:	b084      	sub	sp, #16
 80043b0:	af00      	add	r7, sp, #0
 80043b2:	6078      	str	r0, [r7, #4]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a18      	ldr	r2, [pc, #96]	@ (800441c <HAL_TIM_Base_MspInit+0x70>)
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d116      	bne.n	80043ec <HAL_TIM_Base_MspInit+0x40>
 80043be:	2300      	movs	r3, #0
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	4b17      	ldr	r3, [pc, #92]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043c6:	4a16      	ldr	r2, [pc, #88]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c8:	f043 0302 	orr.w	r3, r3, #2
 80043cc:	6413      	str	r3, [r2, #64]	@ 0x40
 80043ce:	4b14      	ldr	r3, [pc, #80]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043d2:	f003 0302 	and.w	r3, r3, #2
 80043d6:	60fb      	str	r3, [r7, #12]
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	2200      	movs	r2, #0
 80043dc:	2105      	movs	r1, #5
 80043de:	201d      	movs	r0, #29
 80043e0:	f008 f89c 	bl	800c51c <HAL_NVIC_SetPriority>
 80043e4:	201d      	movs	r0, #29
 80043e6:	f008 f8b5 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80043ea:	e012      	b.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	4a0c      	ldr	r2, [pc, #48]	@ (8004424 <HAL_TIM_Base_MspInit+0x78>)
 80043f2:	4293      	cmp	r3, r2
 80043f4:	d10d      	bne.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043f6:	2300      	movs	r3, #0
 80043f8:	60bb      	str	r3, [r7, #8]
 80043fa:	4b09      	ldr	r3, [pc, #36]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80043fe:	4a08      	ldr	r2, [pc, #32]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004400:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004404:	6453      	str	r3, [r2, #68]	@ 0x44
 8004406:	4b06      	ldr	r3, [pc, #24]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004408:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800440a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800440e:	60bb      	str	r3, [r7, #8]
 8004410:	68bb      	ldr	r3, [r7, #8]
 8004412:	bf00      	nop
 8004414:	3710      	adds	r7, #16
 8004416:	46bd      	mov	sp, r7
 8004418:	bd80      	pop	{r7, pc}
 800441a:	bf00      	nop
 800441c:	40000400 	.word	0x40000400
 8004420:	40023800 	.word	0x40023800
 8004424:	40014400 	.word	0x40014400

08004428 <HAL_TIM_PWM_MspInit>:
 8004428:	b480      	push	{r7}
 800442a:	b085      	sub	sp, #20
 800442c:	af00      	add	r7, sp, #0
 800442e:	6078      	str	r0, [r7, #4]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a15      	ldr	r2, [pc, #84]	@ (800448c <HAL_TIM_PWM_MspInit+0x64>)
 8004436:	4293      	cmp	r3, r2
 8004438:	d10e      	bne.n	8004458 <HAL_TIM_PWM_MspInit+0x30>
 800443a:	2300      	movs	r3, #0
 800443c:	60fb      	str	r3, [r7, #12]
 800443e:	4b14      	ldr	r3, [pc, #80]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004440:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004442:	4a13      	ldr	r2, [pc, #76]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004444:	f043 0304 	orr.w	r3, r3, #4
 8004448:	6413      	str	r3, [r2, #64]	@ 0x40
 800444a:	4b11      	ldr	r3, [pc, #68]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800444c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800444e:	f003 0304 	and.w	r3, r3, #4
 8004452:	60fb      	str	r3, [r7, #12]
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	e012      	b.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	4a0d      	ldr	r2, [pc, #52]	@ (8004494 <HAL_TIM_PWM_MspInit+0x6c>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d10d      	bne.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004462:	2300      	movs	r3, #0
 8004464:	60bb      	str	r3, [r7, #8]
 8004466:	4b0a      	ldr	r3, [pc, #40]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004468:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800446a:	4a09      	ldr	r2, [pc, #36]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800446c:	f043 0308 	orr.w	r3, r3, #8
 8004470:	6413      	str	r3, [r2, #64]	@ 0x40
 8004472:	4b07      	ldr	r3, [pc, #28]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004476:	f003 0308 	and.w	r3, r3, #8
 800447a:	60bb      	str	r3, [r7, #8]
 800447c:	68bb      	ldr	r3, [r7, #8]
 800447e:	bf00      	nop
 8004480:	3714      	adds	r7, #20
 8004482:	46bd      	mov	sp, r7
 8004484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004488:	4770      	bx	lr
 800448a:	bf00      	nop
 800448c:	40000800 	.word	0x40000800
 8004490:	40023800 	.word	0x40023800
 8004494:	40000c00 	.word	0x40000c00

08004498 <HAL_TIM_MspPostInit>:
 8004498:	b580      	push	{r7, lr}
 800449a:	b08a      	sub	sp, #40	@ 0x28
 800449c:	af00      	add	r7, sp, #0
 800449e:	6078      	str	r0, [r7, #4]
 80044a0:	f107 0314 	add.w	r3, r7, #20
 80044a4:	2200      	movs	r2, #0
 80044a6:	601a      	str	r2, [r3, #0]
 80044a8:	605a      	str	r2, [r3, #4]
 80044aa:	609a      	str	r2, [r3, #8]
 80044ac:	60da      	str	r2, [r3, #12]
 80044ae:	611a      	str	r2, [r3, #16]
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	4a37      	ldr	r2, [pc, #220]	@ (8004594 <HAL_TIM_MspPostInit+0xfc>)
 80044b6:	4293      	cmp	r3, r2
 80044b8:	d11f      	bne.n	80044fa <HAL_TIM_MspPostInit+0x62>
 80044ba:	2300      	movs	r3, #0
 80044bc:	613b      	str	r3, [r7, #16]
 80044be:	4b36      	ldr	r3, [pc, #216]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044c2:	4a35      	ldr	r2, [pc, #212]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c4:	f043 0308 	orr.w	r3, r3, #8
 80044c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80044ca:	4b33      	ldr	r3, [pc, #204]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044ce:	f003 0308 	and.w	r3, r3, #8
 80044d2:	613b      	str	r3, [r7, #16]
 80044d4:	693b      	ldr	r3, [r7, #16]
 80044d6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80044da:	617b      	str	r3, [r7, #20]
 80044dc:	2302      	movs	r3, #2
 80044de:	61bb      	str	r3, [r7, #24]
 80044e0:	2300      	movs	r3, #0
 80044e2:	61fb      	str	r3, [r7, #28]
 80044e4:	2300      	movs	r3, #0
 80044e6:	623b      	str	r3, [r7, #32]
 80044e8:	2302      	movs	r3, #2
 80044ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80044ec:	f107 0314 	add.w	r3, r7, #20
 80044f0:	4619      	mov	r1, r3
 80044f2:	482a      	ldr	r0, [pc, #168]	@ (800459c <HAL_TIM_MspPostInit+0x104>)
 80044f4:	f008 fc58 	bl	800cda8 <HAL_GPIO_Init>
 80044f8:	e047      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	681b      	ldr	r3, [r3, #0]
 80044fe:	4a28      	ldr	r2, [pc, #160]	@ (80045a0 <HAL_TIM_MspPostInit+0x108>)
 8004500:	4293      	cmp	r3, r2
 8004502:	d11f      	bne.n	8004544 <HAL_TIM_MspPostInit+0xac>
 8004504:	2300      	movs	r3, #0
 8004506:	60fb      	str	r3, [r7, #12]
 8004508:	4b23      	ldr	r3, [pc, #140]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800450c:	4a22      	ldr	r2, [pc, #136]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004512:	6313      	str	r3, [r2, #48]	@ 0x30
 8004514:	4b20      	ldr	r3, [pc, #128]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004516:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004518:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800451c:	60fb      	str	r3, [r7, #12]
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8004524:	617b      	str	r3, [r7, #20]
 8004526:	2302      	movs	r3, #2
 8004528:	61bb      	str	r3, [r7, #24]
 800452a:	2300      	movs	r3, #0
 800452c:	61fb      	str	r3, [r7, #28]
 800452e:	2300      	movs	r3, #0
 8004530:	623b      	str	r3, [r7, #32]
 8004532:	2302      	movs	r3, #2
 8004534:	627b      	str	r3, [r7, #36]	@ 0x24
 8004536:	f107 0314 	add.w	r3, r7, #20
 800453a:	4619      	mov	r1, r3
 800453c:	4819      	ldr	r0, [pc, #100]	@ (80045a4 <HAL_TIM_MspPostInit+0x10c>)
 800453e:	f008 fc33 	bl	800cda8 <HAL_GPIO_Init>
 8004542:	e022      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4a17      	ldr	r2, [pc, #92]	@ (80045a8 <HAL_TIM_MspPostInit+0x110>)
 800454a:	4293      	cmp	r3, r2
 800454c:	d11d      	bne.n	800458a <HAL_TIM_MspPostInit+0xf2>
 800454e:	2300      	movs	r3, #0
 8004550:	60bb      	str	r3, [r7, #8]
 8004552:	4b11      	ldr	r3, [pc, #68]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004556:	4a10      	ldr	r2, [pc, #64]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004558:	f043 0320 	orr.w	r3, r3, #32
 800455c:	6313      	str	r3, [r2, #48]	@ 0x30
 800455e:	4b0e      	ldr	r3, [pc, #56]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004562:	f003 0320 	and.w	r3, r3, #32
 8004566:	60bb      	str	r3, [r7, #8]
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	2340      	movs	r3, #64	@ 0x40
 800456c:	617b      	str	r3, [r7, #20]
 800456e:	2302      	movs	r3, #2
 8004570:	61bb      	str	r3, [r7, #24]
 8004572:	2300      	movs	r3, #0
 8004574:	61fb      	str	r3, [r7, #28]
 8004576:	2300      	movs	r3, #0
 8004578:	623b      	str	r3, [r7, #32]
 800457a:	2303      	movs	r3, #3
 800457c:	627b      	str	r3, [r7, #36]	@ 0x24
 800457e:	f107 0314 	add.w	r3, r7, #20
 8004582:	4619      	mov	r1, r3
 8004584:	4809      	ldr	r0, [pc, #36]	@ (80045ac <HAL_TIM_MspPostInit+0x114>)
 8004586:	f008 fc0f 	bl	800cda8 <HAL_GPIO_Init>
 800458a:	bf00      	nop
 800458c:	3728      	adds	r7, #40	@ 0x28
 800458e:	46bd      	mov	sp, r7
 8004590:	bd80      	pop	{r7, pc}
 8004592:	bf00      	nop
 8004594:	40000800 	.word	0x40000800
 8004598:	40023800 	.word	0x40023800
 800459c:	40020c00 	.word	0x40020c00
 80045a0:	40000c00 	.word	0x40000c00
 80045a4:	40021c00 	.word	0x40021c00
 80045a8:	40014400 	.word	0x40014400
 80045ac:	40021400 	.word	0x40021400

080045b0 <MX_USART1_UART_Init>:
 80045b0:	b580      	push	{r7, lr}
 80045b2:	af00      	add	r7, sp, #0
 80045b4:	4b11      	ldr	r3, [pc, #68]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045b6:	4a12      	ldr	r2, [pc, #72]	@ (8004600 <MX_USART1_UART_Init+0x50>)
 80045b8:	601a      	str	r2, [r3, #0]
 80045ba:	4b10      	ldr	r3, [pc, #64]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045bc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80045c0:	605a      	str	r2, [r3, #4]
 80045c2:	4b0e      	ldr	r3, [pc, #56]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045c4:	2200      	movs	r2, #0
 80045c6:	609a      	str	r2, [r3, #8]
 80045c8:	4b0c      	ldr	r3, [pc, #48]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045ca:	2200      	movs	r2, #0
 80045cc:	60da      	str	r2, [r3, #12]
 80045ce:	4b0b      	ldr	r3, [pc, #44]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d0:	2200      	movs	r2, #0
 80045d2:	611a      	str	r2, [r3, #16]
 80045d4:	4b09      	ldr	r3, [pc, #36]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d6:	220c      	movs	r2, #12
 80045d8:	615a      	str	r2, [r3, #20]
 80045da:	4b08      	ldr	r3, [pc, #32]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045dc:	2200      	movs	r2, #0
 80045de:	619a      	str	r2, [r3, #24]
 80045e0:	4b06      	ldr	r3, [pc, #24]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e2:	2200      	movs	r2, #0
 80045e4:	61da      	str	r2, [r3, #28]
 80045e6:	4805      	ldr	r0, [pc, #20]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e8:	f00d ffba 	bl	8012560 <HAL_UART_Init>
 80045ec:	4603      	mov	r3, r0
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d001      	beq.n	80045f6 <MX_USART1_UART_Init+0x46>
 80045f2:	f7ff f901 	bl	80037f8 <Error_Handler>
 80045f6:	bf00      	nop
 80045f8:	bd80      	pop	{r7, pc}
 80045fa:	bf00      	nop
 80045fc:	20001be8 	.word	0x20001be8
 8004600:	40011000 	.word	0x40011000

08004604 <MX_USART3_UART_Init>:
 8004604:	b580      	push	{r7, lr}
 8004606:	af00      	add	r7, sp, #0
 8004608:	4b11      	ldr	r3, [pc, #68]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800460a:	4a12      	ldr	r2, [pc, #72]	@ (8004654 <MX_USART3_UART_Init+0x50>)
 800460c:	601a      	str	r2, [r3, #0]
 800460e:	4b10      	ldr	r3, [pc, #64]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004610:	4a11      	ldr	r2, [pc, #68]	@ (8004658 <MX_USART3_UART_Init+0x54>)
 8004612:	605a      	str	r2, [r3, #4]
 8004614:	4b0e      	ldr	r3, [pc, #56]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004616:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800461a:	609a      	str	r2, [r3, #8]
 800461c:	4b0c      	ldr	r3, [pc, #48]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800461e:	2200      	movs	r2, #0
 8004620:	60da      	str	r2, [r3, #12]
 8004622:	4b0b      	ldr	r3, [pc, #44]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004624:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004628:	611a      	str	r2, [r3, #16]
 800462a:	4b09      	ldr	r3, [pc, #36]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800462c:	220c      	movs	r2, #12
 800462e:	615a      	str	r2, [r3, #20]
 8004630:	4b07      	ldr	r3, [pc, #28]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004632:	2200      	movs	r2, #0
 8004634:	619a      	str	r2, [r3, #24]
 8004636:	4b06      	ldr	r3, [pc, #24]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004638:	2200      	movs	r2, #0
 800463a:	61da      	str	r2, [r3, #28]
 800463c:	4804      	ldr	r0, [pc, #16]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800463e:	f00d ff8f 	bl	8012560 <HAL_UART_Init>
 8004642:	4603      	mov	r3, r0
 8004644:	2b00      	cmp	r3, #0
 8004646:	d001      	beq.n	800464c <MX_USART3_UART_Init+0x48>
 8004648:	f7ff f8d6 	bl	80037f8 <Error_Handler>
 800464c:	bf00      	nop
 800464e:	bd80      	pop	{r7, pc}
 8004650:	20001c2c 	.word	0x20001c2c
 8004654:	40004800 	.word	0x40004800
 8004658:	000186a0 	.word	0x000186a0

0800465c <MX_USART6_UART_Init>:
 800465c:	b580      	push	{r7, lr}
 800465e:	af00      	add	r7, sp, #0
 8004660:	4b11      	ldr	r3, [pc, #68]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004662:	4a12      	ldr	r2, [pc, #72]	@ (80046ac <MX_USART6_UART_Init+0x50>)
 8004664:	601a      	str	r2, [r3, #0]
 8004666:	4b10      	ldr	r3, [pc, #64]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004668:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800466c:	605a      	str	r2, [r3, #4]
 800466e:	4b0e      	ldr	r3, [pc, #56]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004670:	2200      	movs	r2, #0
 8004672:	609a      	str	r2, [r3, #8]
 8004674:	4b0c      	ldr	r3, [pc, #48]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004676:	2200      	movs	r2, #0
 8004678:	60da      	str	r2, [r3, #12]
 800467a:	4b0b      	ldr	r3, [pc, #44]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800467c:	2200      	movs	r2, #0
 800467e:	611a      	str	r2, [r3, #16]
 8004680:	4b09      	ldr	r3, [pc, #36]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004682:	220c      	movs	r2, #12
 8004684:	615a      	str	r2, [r3, #20]
 8004686:	4b08      	ldr	r3, [pc, #32]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004688:	2200      	movs	r2, #0
 800468a:	619a      	str	r2, [r3, #24]
 800468c:	4b06      	ldr	r3, [pc, #24]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800468e:	2200      	movs	r2, #0
 8004690:	61da      	str	r2, [r3, #28]
 8004692:	4805      	ldr	r0, [pc, #20]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004694:	f00d ff64 	bl	8012560 <HAL_UART_Init>
 8004698:	4603      	mov	r3, r0
 800469a:	2b00      	cmp	r3, #0
 800469c:	d001      	beq.n	80046a2 <MX_USART6_UART_Init+0x46>
 800469e:	f7ff f8ab 	bl	80037f8 <Error_Handler>
 80046a2:	bf00      	nop
 80046a4:	bd80      	pop	{r7, pc}
 80046a6:	bf00      	nop
 80046a8:	20001c70 	.word	0x20001c70
 80046ac:	40011400 	.word	0x40011400

080046b0 <HAL_UART_MspInit>:
 80046b0:	b580      	push	{r7, lr}
 80046b2:	b08e      	sub	sp, #56	@ 0x38
 80046b4:	af00      	add	r7, sp, #0
 80046b6:	6078      	str	r0, [r7, #4]
 80046b8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80046bc:	2200      	movs	r2, #0
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	605a      	str	r2, [r3, #4]
 80046c2:	609a      	str	r2, [r3, #8]
 80046c4:	60da      	str	r2, [r3, #12]
 80046c6:	611a      	str	r2, [r3, #16]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	4a78      	ldr	r2, [pc, #480]	@ (80048b0 <HAL_UART_MspInit+0x200>)
 80046ce:	4293      	cmp	r3, r2
 80046d0:	f040 8083 	bne.w	80047da <HAL_UART_MspInit+0x12a>
 80046d4:	2300      	movs	r3, #0
 80046d6:	623b      	str	r3, [r7, #32]
 80046d8:	4b76      	ldr	r3, [pc, #472]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046dc:	4a75      	ldr	r2, [pc, #468]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046de:	f043 0310 	orr.w	r3, r3, #16
 80046e2:	6453      	str	r3, [r2, #68]	@ 0x44
 80046e4:	4b73      	ldr	r3, [pc, #460]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046e8:	f003 0310 	and.w	r3, r3, #16
 80046ec:	623b      	str	r3, [r7, #32]
 80046ee:	6a3b      	ldr	r3, [r7, #32]
 80046f0:	2300      	movs	r3, #0
 80046f2:	61fb      	str	r3, [r7, #28]
 80046f4:	4b6f      	ldr	r3, [pc, #444]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046f8:	4a6e      	ldr	r2, [pc, #440]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046fa:	f043 0302 	orr.w	r3, r3, #2
 80046fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8004700:	4b6c      	ldr	r3, [pc, #432]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004702:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004704:	f003 0302 	and.w	r3, r3, #2
 8004708:	61fb      	str	r3, [r7, #28]
 800470a:	69fb      	ldr	r3, [r7, #28]
 800470c:	2300      	movs	r3, #0
 800470e:	61bb      	str	r3, [r7, #24]
 8004710:	4b68      	ldr	r3, [pc, #416]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004714:	4a67      	ldr	r2, [pc, #412]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004716:	f043 0301 	orr.w	r3, r3, #1
 800471a:	6313      	str	r3, [r2, #48]	@ 0x30
 800471c:	4b65      	ldr	r3, [pc, #404]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800471e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004720:	f003 0301 	and.w	r3, r3, #1
 8004724:	61bb      	str	r3, [r7, #24]
 8004726:	69bb      	ldr	r3, [r7, #24]
 8004728:	2380      	movs	r3, #128	@ 0x80
 800472a:	627b      	str	r3, [r7, #36]	@ 0x24
 800472c:	2302      	movs	r3, #2
 800472e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004730:	2300      	movs	r3, #0
 8004732:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004734:	2303      	movs	r3, #3
 8004736:	633b      	str	r3, [r7, #48]	@ 0x30
 8004738:	2307      	movs	r3, #7
 800473a:	637b      	str	r3, [r7, #52]	@ 0x34
 800473c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004740:	4619      	mov	r1, r3
 8004742:	485d      	ldr	r0, [pc, #372]	@ (80048b8 <HAL_UART_MspInit+0x208>)
 8004744:	f008 fb30 	bl	800cda8 <HAL_GPIO_Init>
 8004748:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800474c:	627b      	str	r3, [r7, #36]	@ 0x24
 800474e:	2302      	movs	r3, #2
 8004750:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004752:	2300      	movs	r3, #0
 8004754:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004756:	2303      	movs	r3, #3
 8004758:	633b      	str	r3, [r7, #48]	@ 0x30
 800475a:	2307      	movs	r3, #7
 800475c:	637b      	str	r3, [r7, #52]	@ 0x34
 800475e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004762:	4619      	mov	r1, r3
 8004764:	4855      	ldr	r0, [pc, #340]	@ (80048bc <HAL_UART_MspInit+0x20c>)
 8004766:	f008 fb1f 	bl	800cda8 <HAL_GPIO_Init>
 800476a:	4b55      	ldr	r3, [pc, #340]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800476c:	4a55      	ldr	r2, [pc, #340]	@ (80048c4 <HAL_UART_MspInit+0x214>)
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	4b53      	ldr	r3, [pc, #332]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004772:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	4b51      	ldr	r3, [pc, #324]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800477a:	2200      	movs	r2, #0
 800477c:	609a      	str	r2, [r3, #8]
 800477e:	4b50      	ldr	r3, [pc, #320]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004780:	2200      	movs	r2, #0
 8004782:	60da      	str	r2, [r3, #12]
 8004784:	4b4e      	ldr	r3, [pc, #312]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004786:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800478a:	611a      	str	r2, [r3, #16]
 800478c:	4b4c      	ldr	r3, [pc, #304]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800478e:	2200      	movs	r2, #0
 8004790:	615a      	str	r2, [r3, #20]
 8004792:	4b4b      	ldr	r3, [pc, #300]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004794:	2200      	movs	r2, #0
 8004796:	619a      	str	r2, [r3, #24]
 8004798:	4b49      	ldr	r3, [pc, #292]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800479a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800479e:	61da      	str	r2, [r3, #28]
 80047a0:	4b47      	ldr	r3, [pc, #284]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a2:	2200      	movs	r2, #0
 80047a4:	621a      	str	r2, [r3, #32]
 80047a6:	4b46      	ldr	r3, [pc, #280]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a8:	2200      	movs	r2, #0
 80047aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80047ac:	4844      	ldr	r0, [pc, #272]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047ae:	f007 feed 	bl	800c58c <HAL_DMA_Init>
 80047b2:	4603      	mov	r3, r0
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d001      	beq.n	80047bc <HAL_UART_MspInit+0x10c>
 80047b8:	f7ff f81e 	bl	80037f8 <Error_Handler>
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	4a40      	ldr	r2, [pc, #256]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c0:	639a      	str	r2, [r3, #56]	@ 0x38
 80047c2:	4a3f      	ldr	r2, [pc, #252]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6393      	str	r3, [r2, #56]	@ 0x38
 80047c8:	2200      	movs	r2, #0
 80047ca:	2105      	movs	r1, #5
 80047cc:	2025      	movs	r0, #37	@ 0x25
 80047ce:	f007 fea5 	bl	800c51c <HAL_NVIC_SetPriority>
 80047d2:	2025      	movs	r0, #37	@ 0x25
 80047d4:	f007 febe 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80047d8:	e116      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a3a      	ldr	r2, [pc, #232]	@ (80048c8 <HAL_UART_MspInit+0x218>)
 80047e0:	4293      	cmp	r3, r2
 80047e2:	d179      	bne.n	80048d8 <HAL_UART_MspInit+0x228>
 80047e4:	2300      	movs	r3, #0
 80047e6:	617b      	str	r3, [r7, #20]
 80047e8:	4b32      	ldr	r3, [pc, #200]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047ec:	4a31      	ldr	r2, [pc, #196]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ee:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80047f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80047f4:	4b2f      	ldr	r3, [pc, #188]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047f8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80047fc:	617b      	str	r3, [r7, #20]
 80047fe:	697b      	ldr	r3, [r7, #20]
 8004800:	2300      	movs	r3, #0
 8004802:	613b      	str	r3, [r7, #16]
 8004804:	4b2b      	ldr	r3, [pc, #172]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004806:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004808:	4a2a      	ldr	r2, [pc, #168]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800480a:	f043 0304 	orr.w	r3, r3, #4
 800480e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004810:	4b28      	ldr	r3, [pc, #160]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004812:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004814:	f003 0304 	and.w	r3, r3, #4
 8004818:	613b      	str	r3, [r7, #16]
 800481a:	693b      	ldr	r3, [r7, #16]
 800481c:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004820:	627b      	str	r3, [r7, #36]	@ 0x24
 8004822:	2302      	movs	r3, #2
 8004824:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004826:	2300      	movs	r3, #0
 8004828:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800482a:	2303      	movs	r3, #3
 800482c:	633b      	str	r3, [r7, #48]	@ 0x30
 800482e:	2307      	movs	r3, #7
 8004830:	637b      	str	r3, [r7, #52]	@ 0x34
 8004832:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004836:	4619      	mov	r1, r3
 8004838:	4824      	ldr	r0, [pc, #144]	@ (80048cc <HAL_UART_MspInit+0x21c>)
 800483a:	f008 fab5 	bl	800cda8 <HAL_GPIO_Init>
 800483e:	4b24      	ldr	r3, [pc, #144]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004840:	4a24      	ldr	r2, [pc, #144]	@ (80048d4 <HAL_UART_MspInit+0x224>)
 8004842:	601a      	str	r2, [r3, #0]
 8004844:	4b22      	ldr	r3, [pc, #136]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004846:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800484a:	605a      	str	r2, [r3, #4]
 800484c:	4b20      	ldr	r3, [pc, #128]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800484e:	2200      	movs	r2, #0
 8004850:	609a      	str	r2, [r3, #8]
 8004852:	4b1f      	ldr	r3, [pc, #124]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004854:	2200      	movs	r2, #0
 8004856:	60da      	str	r2, [r3, #12]
 8004858:	4b1d      	ldr	r3, [pc, #116]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800485a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800485e:	611a      	str	r2, [r3, #16]
 8004860:	4b1b      	ldr	r3, [pc, #108]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004862:	2200      	movs	r2, #0
 8004864:	615a      	str	r2, [r3, #20]
 8004866:	4b1a      	ldr	r3, [pc, #104]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004868:	2200      	movs	r2, #0
 800486a:	619a      	str	r2, [r3, #24]
 800486c:	4b18      	ldr	r3, [pc, #96]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800486e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004872:	61da      	str	r2, [r3, #28]
 8004874:	4b16      	ldr	r3, [pc, #88]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004876:	2200      	movs	r2, #0
 8004878:	621a      	str	r2, [r3, #32]
 800487a:	4b15      	ldr	r3, [pc, #84]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800487c:	2200      	movs	r2, #0
 800487e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004880:	4813      	ldr	r0, [pc, #76]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004882:	f007 fe83 	bl	800c58c <HAL_DMA_Init>
 8004886:	4603      	mov	r3, r0
 8004888:	2b00      	cmp	r3, #0
 800488a:	d001      	beq.n	8004890 <HAL_UART_MspInit+0x1e0>
 800488c:	f7fe ffb4 	bl	80037f8 <Error_Handler>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	4a0f      	ldr	r2, [pc, #60]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004894:	639a      	str	r2, [r3, #56]	@ 0x38
 8004896:	4a0e      	ldr	r2, [pc, #56]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	6393      	str	r3, [r2, #56]	@ 0x38
 800489c:	2200      	movs	r2, #0
 800489e:	2105      	movs	r1, #5
 80048a0:	2027      	movs	r0, #39	@ 0x27
 80048a2:	f007 fe3b 	bl	800c51c <HAL_NVIC_SetPriority>
 80048a6:	2027      	movs	r0, #39	@ 0x27
 80048a8:	f007 fe54 	bl	800c554 <HAL_NVIC_EnableIRQ>
 80048ac:	e0ac      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80048ae:	bf00      	nop
 80048b0:	40011000 	.word	0x40011000
 80048b4:	40023800 	.word	0x40023800
 80048b8:	40020400 	.word	0x40020400
 80048bc:	40020000 	.word	0x40020000
 80048c0:	20001cb4 	.word	0x20001cb4
 80048c4:	40026488 	.word	0x40026488
 80048c8:	40004800 	.word	0x40004800
 80048cc:	40020800 	.word	0x40020800
 80048d0:	20001d14 	.word	0x20001d14
 80048d4:	40026028 	.word	0x40026028
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	4a4c      	ldr	r2, [pc, #304]	@ (8004a10 <HAL_UART_MspInit+0x360>)
 80048de:	4293      	cmp	r3, r2
 80048e0:	f040 8092 	bne.w	8004a08 <HAL_UART_MspInit+0x358>
 80048e4:	2300      	movs	r3, #0
 80048e6:	60fb      	str	r3, [r7, #12]
 80048e8:	4b4a      	ldr	r3, [pc, #296]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048ec:	4a49      	ldr	r2, [pc, #292]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ee:	f043 0320 	orr.w	r3, r3, #32
 80048f2:	6453      	str	r3, [r2, #68]	@ 0x44
 80048f4:	4b47      	ldr	r3, [pc, #284]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048f8:	f003 0320 	and.w	r3, r3, #32
 80048fc:	60fb      	str	r3, [r7, #12]
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	2300      	movs	r3, #0
 8004902:	60bb      	str	r3, [r7, #8]
 8004904:	4b43      	ldr	r3, [pc, #268]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004906:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004908:	4a42      	ldr	r2, [pc, #264]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 800490a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800490e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004910:	4b40      	ldr	r3, [pc, #256]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004912:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004914:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004918:	60bb      	str	r3, [r7, #8]
 800491a:	68bb      	ldr	r3, [r7, #8]
 800491c:	f44f 4384 	mov.w	r3, #16896	@ 0x4200
 8004920:	627b      	str	r3, [r7, #36]	@ 0x24
 8004922:	2302      	movs	r3, #2
 8004924:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004926:	2300      	movs	r3, #0
 8004928:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800492a:	2303      	movs	r3, #3
 800492c:	633b      	str	r3, [r7, #48]	@ 0x30
 800492e:	2308      	movs	r3, #8
 8004930:	637b      	str	r3, [r7, #52]	@ 0x34
 8004932:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004936:	4619      	mov	r1, r3
 8004938:	4837      	ldr	r0, [pc, #220]	@ (8004a18 <HAL_UART_MspInit+0x368>)
 800493a:	f008 fa35 	bl	800cda8 <HAL_GPIO_Init>
 800493e:	4b37      	ldr	r3, [pc, #220]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004940:	4a37      	ldr	r2, [pc, #220]	@ (8004a20 <HAL_UART_MspInit+0x370>)
 8004942:	601a      	str	r2, [r3, #0]
 8004944:	4b35      	ldr	r3, [pc, #212]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004946:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 800494a:	605a      	str	r2, [r3, #4]
 800494c:	4b33      	ldr	r3, [pc, #204]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800494e:	2200      	movs	r2, #0
 8004950:	609a      	str	r2, [r3, #8]
 8004952:	4b32      	ldr	r3, [pc, #200]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004954:	2200      	movs	r2, #0
 8004956:	60da      	str	r2, [r3, #12]
 8004958:	4b30      	ldr	r3, [pc, #192]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800495a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800495e:	611a      	str	r2, [r3, #16]
 8004960:	4b2e      	ldr	r3, [pc, #184]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004962:	2200      	movs	r2, #0
 8004964:	615a      	str	r2, [r3, #20]
 8004966:	4b2d      	ldr	r3, [pc, #180]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004968:	2200      	movs	r2, #0
 800496a:	619a      	str	r2, [r3, #24]
 800496c:	4b2b      	ldr	r3, [pc, #172]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800496e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004972:	61da      	str	r2, [r3, #28]
 8004974:	4b29      	ldr	r3, [pc, #164]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004976:	2200      	movs	r2, #0
 8004978:	621a      	str	r2, [r3, #32]
 800497a:	4b28      	ldr	r3, [pc, #160]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800497c:	2200      	movs	r2, #0
 800497e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004980:	4826      	ldr	r0, [pc, #152]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004982:	f007 fe03 	bl	800c58c <HAL_DMA_Init>
 8004986:	4603      	mov	r3, r0
 8004988:	2b00      	cmp	r3, #0
 800498a:	d001      	beq.n	8004990 <HAL_UART_MspInit+0x2e0>
 800498c:	f7fe ff34 	bl	80037f8 <Error_Handler>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	4a22      	ldr	r2, [pc, #136]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004994:	639a      	str	r2, [r3, #56]	@ 0x38
 8004996:	4a21      	ldr	r2, [pc, #132]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6393      	str	r3, [r2, #56]	@ 0x38
 800499c:	4b21      	ldr	r3, [pc, #132]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 800499e:	4a22      	ldr	r2, [pc, #136]	@ (8004a28 <HAL_UART_MspInit+0x378>)
 80049a0:	601a      	str	r2, [r3, #0]
 80049a2:	4b20      	ldr	r3, [pc, #128]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049a4:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 80049a8:	605a      	str	r2, [r3, #4]
 80049aa:	4b1e      	ldr	r3, [pc, #120]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049ac:	2240      	movs	r2, #64	@ 0x40
 80049ae:	609a      	str	r2, [r3, #8]
 80049b0:	4b1c      	ldr	r3, [pc, #112]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b2:	2200      	movs	r2, #0
 80049b4:	60da      	str	r2, [r3, #12]
 80049b6:	4b1b      	ldr	r3, [pc, #108]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80049bc:	611a      	str	r2, [r3, #16]
 80049be:	4b19      	ldr	r3, [pc, #100]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c0:	2200      	movs	r2, #0
 80049c2:	615a      	str	r2, [r3, #20]
 80049c4:	4b17      	ldr	r3, [pc, #92]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c6:	2200      	movs	r2, #0
 80049c8:	619a      	str	r2, [r3, #24]
 80049ca:	4b16      	ldr	r3, [pc, #88]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049cc:	2200      	movs	r2, #0
 80049ce:	61da      	str	r2, [r3, #28]
 80049d0:	4b14      	ldr	r3, [pc, #80]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d2:	2200      	movs	r2, #0
 80049d4:	621a      	str	r2, [r3, #32]
 80049d6:	4b13      	ldr	r3, [pc, #76]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d8:	2200      	movs	r2, #0
 80049da:	625a      	str	r2, [r3, #36]	@ 0x24
 80049dc:	4811      	ldr	r0, [pc, #68]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049de:	f007 fdd5 	bl	800c58c <HAL_DMA_Init>
 80049e2:	4603      	mov	r3, r0
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d001      	beq.n	80049ec <HAL_UART_MspInit+0x33c>
 80049e8:	f7fe ff06 	bl	80037f8 <Error_Handler>
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	4a0d      	ldr	r2, [pc, #52]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80049f2:	4a0c      	ldr	r2, [pc, #48]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	6393      	str	r3, [r2, #56]	@ 0x38
 80049f8:	2200      	movs	r2, #0
 80049fa:	2105      	movs	r1, #5
 80049fc:	2047      	movs	r0, #71	@ 0x47
 80049fe:	f007 fd8d 	bl	800c51c <HAL_NVIC_SetPriority>
 8004a02:	2047      	movs	r0, #71	@ 0x47
 8004a04:	f007 fda6 	bl	800c554 <HAL_NVIC_EnableIRQ>
 8004a08:	bf00      	nop
 8004a0a:	3738      	adds	r7, #56	@ 0x38
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}
 8004a10:	40011400 	.word	0x40011400
 8004a14:	40023800 	.word	0x40023800
 8004a18:	40021800 	.word	0x40021800
 8004a1c:	20001d74 	.word	0x20001d74
 8004a20:	40026428 	.word	0x40026428
 8004a24:	20001dd4 	.word	0x20001dd4
 8004a28:	400264a0 	.word	0x400264a0

08004a2c <Reset_Handler>:
 8004a2c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8004a64 <LoopFillZerobss+0x14>
 8004a30:	2100      	movs	r1, #0
 8004a32:	e003      	b.n	8004a3c <LoopCopyDataInit>

08004a34 <CopyDataInit>:
 8004a34:	4b0c      	ldr	r3, [pc, #48]	@ (8004a68 <LoopFillZerobss+0x18>)
 8004a36:	585b      	ldr	r3, [r3, r1]
 8004a38:	5043      	str	r3, [r0, r1]
 8004a3a:	3104      	adds	r1, #4

08004a3c <LoopCopyDataInit>:
 8004a3c:	480b      	ldr	r0, [pc, #44]	@ (8004a6c <LoopFillZerobss+0x1c>)
 8004a3e:	4b0c      	ldr	r3, [pc, #48]	@ (8004a70 <LoopFillZerobss+0x20>)
 8004a40:	1842      	adds	r2, r0, r1
 8004a42:	429a      	cmp	r2, r3
 8004a44:	d3f6      	bcc.n	8004a34 <CopyDataInit>
 8004a46:	4a0b      	ldr	r2, [pc, #44]	@ (8004a74 <LoopFillZerobss+0x24>)
 8004a48:	e002      	b.n	8004a50 <LoopFillZerobss>

08004a4a <FillZerobss>:
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	f842 3b04 	str.w	r3, [r2], #4

08004a50 <LoopFillZerobss>:
 8004a50:	4b09      	ldr	r3, [pc, #36]	@ (8004a78 <LoopFillZerobss+0x28>)
 8004a52:	429a      	cmp	r2, r3
 8004a54:	d3f9      	bcc.n	8004a4a <FillZerobss>
 8004a56:	f7ff fa77 	bl	8003f48 <SystemInit>
 8004a5a:	f016 fb03 	bl	801b064 <__libc_init_array>
 8004a5e:	f7fe fe1f 	bl	80036a0 <main>
 8004a62:	4770      	bx	lr
 8004a64:	20020000 	.word	0x20020000
 8004a68:	08021d0c 	.word	0x08021d0c
 8004a6c:	20000000 	.word	0x20000000
 8004a70:	200007d8 	.word	0x200007d8
 8004a74:	200007d8 	.word	0x200007d8
 8004a78:	2000d294 	.word	0x2000d294

08004a7c <ADC_IRQHandler>:
 8004a7c:	e7fe      	b.n	8004a7c <ADC_IRQHandler>

08004a7e <PID_Init>:
#include "typedefs.h"




void PID_Init(PID *pid, double kp, double ki, double kd, double min_output, double max_output) {
 8004a7e:	b480      	push	{r7}
 8004a80:	b08d      	sub	sp, #52	@ 0x34
 8004a82:	af00      	add	r7, sp, #0
 8004a84:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004a86:	ed87 0b08 	vstr	d0, [r7, #32]
 8004a8a:	ed87 1b06 	vstr	d1, [r7, #24]
 8004a8e:	ed87 2b04 	vstr	d2, [r7, #16]
 8004a92:	ed87 3b02 	vstr	d3, [r7, #8]
 8004a96:	ed87 4b00 	vstr	d4, [r7]
    pid->kp = kp;
 8004a9a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004a9c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004aa0:	e9c1 2300 	strd	r2, r3, [r1]
    pid->ki = ki;
 8004aa4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aa6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004aaa:	e9c1 2302 	strd	r2, r3, [r1, #8]
    pid->kd = kd;
 8004aae:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ab0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004ab4:	e9c1 2304 	strd	r2, r3, [r1, #16]
    pid->prev_error = 0;
 8004ab8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aba:	f04f 0200 	mov.w	r2, #0
 8004abe:	f04f 0300 	mov.w	r3, #0
 8004ac2:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->integral = 0;
 8004ac6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ac8:	f04f 0200 	mov.w	r2, #0
 8004acc:	f04f 0300 	mov.w	r3, #0
 8004ad0:	e9c1 2308 	strd	r2, r3, [r1, #32]
    pid->max_output = max_output;
 8004ad4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ad6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004ada:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    pid->min_output = min_output;
 8004ade:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ae0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004ae4:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
}
 8004ae8:	bf00      	nop
 8004aea:	3734      	adds	r7, #52	@ 0x34
 8004aec:	46bd      	mov	sp, r7
 8004aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af2:	4770      	bx	lr

08004af4 <PID_Compute>:

double PID_Compute(PID *pid, double setpoint, double measured_value, double dt, double deadzone) {
 8004af4:	b5b0      	push	{r4, r5, r7, lr}
 8004af6:	b090      	sub	sp, #64	@ 0x40
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	6278      	str	r0, [r7, #36]	@ 0x24
 8004afc:	ed87 0b06 	vstr	d0, [r7, #24]
 8004b00:	ed87 1b04 	vstr	d1, [r7, #16]
 8004b04:	ed87 2b02 	vstr	d2, [r7, #8]
 8004b08:	ed87 3b00 	vstr	d3, [r7]
    double error = setpoint - measured_value;
 8004b0c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004b10:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004b14:	f7fb fbb8 	bl	8000288 <__aeabi_dsub>
 8004b18:	4602      	mov	r2, r0
 8004b1a:	460b      	mov	r3, r1
 8004b1c:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    if (error < deadzone && error > -deadzone ){
 8004b20:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004b24:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b28:	f7fb ffd8 	bl	8000adc <__aeabi_dcmplt>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d012      	beq.n	8004b58 <PID_Compute+0x64>
 8004b32:	683c      	ldr	r4, [r7, #0]
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 8004b3a:	4622      	mov	r2, r4
 8004b3c:	462b      	mov	r3, r5
 8004b3e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b42:	f7fb ffe9 	bl	8000b18 <__aeabi_dcmpgt>
 8004b46:	4603      	mov	r3, r0
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	d005      	beq.n	8004b58 <PID_Compute+0x64>
    	error = 0.0;
 8004b4c:	f04f 0200 	mov.w	r2, #0
 8004b50:	f04f 0300 	mov.w	r3, #0
 8004b54:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    }
    pid->integral += error * dt;
 8004b58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b5a:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 8004b5e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b62:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b66:	f7fb fd47 	bl	80005f8 <__aeabi_dmul>
 8004b6a:	4602      	mov	r2, r0
 8004b6c:	460b      	mov	r3, r1
 8004b6e:	4620      	mov	r0, r4
 8004b70:	4629      	mov	r1, r5
 8004b72:	f7fb fb8b 	bl	800028c <__adddf3>
 8004b76:	4602      	mov	r2, r0
 8004b78:	460b      	mov	r3, r1
 8004b7a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004b7c:	e9c1 2308 	strd	r2, r3, [r1, #32]
    double derivative = (error - pid->prev_error) / dt;
 8004b80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b82:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004b86:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b8a:	f7fb fb7d 	bl	8000288 <__aeabi_dsub>
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	4610      	mov	r0, r2
 8004b94:	4619      	mov	r1, r3
 8004b96:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b9a:	f7fb fe57 	bl	800084c <__aeabi_ddiv>
 8004b9e:	4602      	mov	r2, r0
 8004ba0:	460b      	mov	r3, r1
 8004ba2:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
    double output = pid->kp * error + pid->ki * pid->integral + pid->kd * derivative;
 8004ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ba8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004bac:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004bb0:	f7fb fd22 	bl	80005f8 <__aeabi_dmul>
 8004bb4:	4602      	mov	r2, r0
 8004bb6:	460b      	mov	r3, r1
 8004bb8:	4614      	mov	r4, r2
 8004bba:	461d      	mov	r5, r3
 8004bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bbe:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8004bc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bc4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004bc8:	f7fb fd16 	bl	80005f8 <__aeabi_dmul>
 8004bcc:	4602      	mov	r2, r0
 8004bce:	460b      	mov	r3, r1
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	4629      	mov	r1, r5
 8004bd4:	f7fb fb5a 	bl	800028c <__adddf3>
 8004bd8:	4602      	mov	r2, r0
 8004bda:	460b      	mov	r3, r1
 8004bdc:	4614      	mov	r4, r2
 8004bde:	461d      	mov	r5, r3
 8004be0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004be2:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004be6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004bea:	f7fb fd05 	bl	80005f8 <__aeabi_dmul>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	4629      	mov	r1, r5
 8004bf6:	f7fb fb49 	bl	800028c <__adddf3>
 8004bfa:	4602      	mov	r2, r0
 8004bfc:	460b      	mov	r3, r1
 8004bfe:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30

    // Clamp the output to the specified max and min limits
    if (output > pid->max_output) {
 8004c02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c04:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c08:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c0c:	f7fb ff84 	bl	8000b18 <__aeabi_dcmpgt>
 8004c10:	4603      	mov	r3, r0
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d005      	beq.n	8004c22 <PID_Compute+0x12e>
        output = pid->max_output;
 8004c16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c18:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c1c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8004c20:	e00e      	b.n	8004c40 <PID_Compute+0x14c>
    } else if (output < pid->min_output) {
 8004c22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c24:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c28:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c2c:	f7fb ff56 	bl	8000adc <__aeabi_dcmplt>
 8004c30:	4603      	mov	r3, r0
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d004      	beq.n	8004c40 <PID_Compute+0x14c>
        output = pid->min_output;
 8004c36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c38:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c3c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
    }

    pid->prev_error = error;
 8004c40:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c42:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004c46:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->output =  output;
 8004c4a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c4c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004c50:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
    return output;
 8004c54:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004c58:	ec43 2b17 	vmov	d7, r2, r3
}
 8004c5c:	eeb0 0a47 	vmov.f32	s0, s14
 8004c60:	eef0 0a67 	vmov.f32	s1, s15
 8004c64:	3740      	adds	r7, #64	@ 0x40
 8004c66:	46bd      	mov	sp, r7
 8004c68:	bdb0      	pop	{r4, r5, r7, pc}
 8004c6a:	0000      	movs	r0, r0
 8004c6c:	0000      	movs	r0, r0
	...

08004c70 <buzzing_task>:
 8004c70:	b580      	push	{r7, lr}
 8004c72:	b086      	sub	sp, #24
 8004c74:	af00      	add	r7, sp, #0
 8004c76:	6078      	str	r0, [r7, #4]
 8004c78:	4bb5      	ldr	r3, [pc, #724]	@ (8004f50 <buzzing_task+0x2e0>)
 8004c7a:	613b      	str	r3, [r7, #16]
 8004c7c:	4bb5      	ldr	r3, [pc, #724]	@ (8004f54 <buzzing_task+0x2e4>)
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	f107 010d 	add.w	r1, r7, #13
 8004c84:	f04f 32ff 	mov.w	r2, #4294967295
 8004c88:	4618      	mov	r0, r3
 8004c8a:	f012 ff65 	bl	8017b58 <xQueueReceive>
 8004c8e:	7b7b      	ldrb	r3, [r7, #13]
 8004c90:	2b0d      	cmp	r3, #13
 8004c92:	f200 814c 	bhi.w	8004f2e <buzzing_task+0x2be>
 8004c96:	a201      	add	r2, pc, #4	@ (adr r2, 8004c9c <buzzing_task+0x2c>)
 8004c98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c9c:	08004cd5 	.word	0x08004cd5
 8004ca0:	08004d7b 	.word	0x08004d7b
 8004ca4:	08004dad 	.word	0x08004dad
 8004ca8:	08004e31 	.word	0x08004e31
 8004cac:	08004dff 	.word	0x08004dff
 8004cb0:	08004e69 	.word	0x08004e69
 8004cb4:	08004ec3 	.word	0x08004ec3
 8004cb8:	08004ed3 	.word	0x08004ed3
 8004cbc:	08004e95 	.word	0x08004e95
 8004cc0:	08004ea5 	.word	0x08004ea5
 8004cc4:	08004eb5 	.word	0x08004eb5
 8004cc8:	08004ee3 	.word	0x08004ee3
 8004ccc:	08004f0f 	.word	0x08004f0f
 8004cd0:	08004f1f 	.word	0x08004f1f
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	82fb      	strh	r3, [r7, #22]
 8004cd8:	e04b      	b.n	8004d72 <buzzing_task+0x102>
 8004cda:	f013 fd4b 	bl	8018774 <xTaskGetTickCount>
 8004cde:	4603      	mov	r3, r0
 8004ce0:	60bb      	str	r3, [r7, #8]
 8004ce2:	8afb      	ldrh	r3, [r7, #22]
 8004ce4:	4a9c      	ldr	r2, [pc, #624]	@ (8004f58 <buzzing_task+0x2e8>)
 8004ce6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004cea:	4618      	mov	r0, r3
 8004cec:	f7fc fa3e 	bl	800116c <buzzer>
 8004cf0:	8afb      	ldrh	r3, [r7, #22]
 8004cf2:	4a9a      	ldr	r2, [pc, #616]	@ (8004f5c <buzzing_task+0x2ec>)
 8004cf4:	009b      	lsls	r3, r3, #2
 8004cf6:	4413      	add	r3, r2
 8004cf8:	ed93 7a00 	vldr	s14, [r3]
 8004cfc:	edd7 7a04 	vldr	s15, [r7, #16]
 8004d00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004d04:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d08:	ee17 3a90 	vmov	r3, s15
 8004d0c:	81fb      	strh	r3, [r7, #14]
 8004d0e:	89fb      	ldrh	r3, [r7, #14]
 8004d10:	4618      	mov	r0, r3
 8004d12:	f7fb fc07 	bl	8000524 <__aeabi_i2d>
 8004d16:	a38a      	add	r3, pc, #552	@ (adr r3, 8004f40 <buzzing_task+0x2d0>)
 8004d18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d1c:	f7fb fc6c 	bl	80005f8 <__aeabi_dmul>
 8004d20:	4602      	mov	r2, r0
 8004d22:	460b      	mov	r3, r1
 8004d24:	4610      	mov	r0, r2
 8004d26:	4619      	mov	r1, r3
 8004d28:	f7fb ff3e 	bl	8000ba8 <__aeabi_d2uiz>
 8004d2c:	4602      	mov	r2, r0
 8004d2e:	f107 0308 	add.w	r3, r7, #8
 8004d32:	4611      	mov	r1, r2
 8004d34:	4618      	mov	r0, r3
 8004d36:	f013 fb49 	bl	80183cc <vTaskDelayUntil>
 8004d3a:	2000      	movs	r0, #0
 8004d3c:	f7fc fa16 	bl	800116c <buzzer>
 8004d40:	89fb      	ldrh	r3, [r7, #14]
 8004d42:	4618      	mov	r0, r3
 8004d44:	f7fb fbee 	bl	8000524 <__aeabi_i2d>
 8004d48:	a37f      	add	r3, pc, #508	@ (adr r3, 8004f48 <buzzing_task+0x2d8>)
 8004d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d4e:	f7fb fc53 	bl	80005f8 <__aeabi_dmul>
 8004d52:	4602      	mov	r2, r0
 8004d54:	460b      	mov	r3, r1
 8004d56:	4610      	mov	r0, r2
 8004d58:	4619      	mov	r1, r3
 8004d5a:	f7fb ff25 	bl	8000ba8 <__aeabi_d2uiz>
 8004d5e:	4602      	mov	r2, r0
 8004d60:	f107 0308 	add.w	r3, r7, #8
 8004d64:	4611      	mov	r1, r2
 8004d66:	4618      	mov	r0, r3
 8004d68:	f013 fb30 	bl	80183cc <vTaskDelayUntil>
 8004d6c:	8afb      	ldrh	r3, [r7, #22]
 8004d6e:	3301      	adds	r3, #1
 8004d70:	82fb      	strh	r3, [r7, #22]
 8004d72:	8afb      	ldrh	r3, [r7, #22]
 8004d74:	2b7c      	cmp	r3, #124	@ 0x7c
 8004d76:	d9b0      	bls.n	8004cda <buzzing_task+0x6a>
 8004d78:	e0da      	b.n	8004f30 <buzzing_task+0x2c0>
 8004d7a:	f013 fcfb 	bl	8018774 <xTaskGetTickCount>
 8004d7e:	4603      	mov	r3, r0
 8004d80:	60bb      	str	r3, [r7, #8]
 8004d82:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004d86:	f7fc f9f1 	bl	800116c <buzzer>
 8004d8a:	2064      	movs	r0, #100	@ 0x64
 8004d8c:	f013 fb9e 	bl	80184cc <vTaskDelay>
 8004d90:	2000      	movs	r0, #0
 8004d92:	f7fc f9eb 	bl	800116c <buzzer>
 8004d96:	2032      	movs	r0, #50	@ 0x32
 8004d98:	f013 fb98 	bl	80184cc <vTaskDelay>
 8004d9c:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004da0:	f7fc f9e4 	bl	800116c <buzzer>
 8004da4:	2064      	movs	r0, #100	@ 0x64
 8004da6:	f013 fb91 	bl	80184cc <vTaskDelay>
 8004daa:	e0c1      	b.n	8004f30 <buzzing_task+0x2c0>
 8004dac:	f013 fce2 	bl	8018774 <xTaskGetTickCount>
 8004db0:	4603      	mov	r3, r0
 8004db2:	60bb      	str	r3, [r7, #8]
 8004db4:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004db8:	f7fc f9d8 	bl	800116c <buzzer>
 8004dbc:	2064      	movs	r0, #100	@ 0x64
 8004dbe:	f013 fb85 	bl	80184cc <vTaskDelay>
 8004dc2:	2000      	movs	r0, #0
 8004dc4:	f7fc f9d2 	bl	800116c <buzzer>
 8004dc8:	2032      	movs	r0, #50	@ 0x32
 8004dca:	f013 fb7f 	bl	80184cc <vTaskDelay>
 8004dce:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004dd2:	f7fc f9cb 	bl	800116c <buzzer>
 8004dd6:	2064      	movs	r0, #100	@ 0x64
 8004dd8:	f013 fb78 	bl	80184cc <vTaskDelay>
 8004ddc:	2000      	movs	r0, #0
 8004dde:	f7fc f9c5 	bl	800116c <buzzer>
 8004de2:	2032      	movs	r0, #50	@ 0x32
 8004de4:	f013 fb72 	bl	80184cc <vTaskDelay>
 8004de8:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004dec:	f7fc f9be 	bl	800116c <buzzer>
 8004df0:	2064      	movs	r0, #100	@ 0x64
 8004df2:	f013 fb6b 	bl	80184cc <vTaskDelay>
 8004df6:	2000      	movs	r0, #0
 8004df8:	f7fc f9b8 	bl	800116c <buzzer>
 8004dfc:	e098      	b.n	8004f30 <buzzing_task+0x2c0>
 8004dfe:	f013 fcb9 	bl	8018774 <xTaskGetTickCount>
 8004e02:	4603      	mov	r3, r0
 8004e04:	60bb      	str	r3, [r7, #8]
 8004e06:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e0a:	f7fc f9af 	bl	800116c <buzzer>
 8004e0e:	2064      	movs	r0, #100	@ 0x64
 8004e10:	f013 fb5c 	bl	80184cc <vTaskDelay>
 8004e14:	2000      	movs	r0, #0
 8004e16:	f7fc f9a9 	bl	800116c <buzzer>
 8004e1a:	2032      	movs	r0, #50	@ 0x32
 8004e1c:	f013 fb56 	bl	80184cc <vTaskDelay>
 8004e20:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e24:	f7fc f9a2 	bl	800116c <buzzer>
 8004e28:	2064      	movs	r0, #100	@ 0x64
 8004e2a:	f013 fb4f 	bl	80184cc <vTaskDelay>
 8004e2e:	e07f      	b.n	8004f30 <buzzing_task+0x2c0>
 8004e30:	f013 fca0 	bl	8018774 <xTaskGetTickCount>
 8004e34:	4603      	mov	r3, r0
 8004e36:	60bb      	str	r3, [r7, #8]
 8004e38:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e3c:	f7fc f996 	bl	800116c <buzzer>
 8004e40:	2064      	movs	r0, #100	@ 0x64
 8004e42:	f013 fb43 	bl	80184cc <vTaskDelay>
 8004e46:	2000      	movs	r0, #0
 8004e48:	f7fc f990 	bl	800116c <buzzer>
 8004e4c:	2032      	movs	r0, #50	@ 0x32
 8004e4e:	f013 fb3d 	bl	80184cc <vTaskDelay>
 8004e52:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e56:	f7fc f989 	bl	800116c <buzzer>
 8004e5a:	2064      	movs	r0, #100	@ 0x64
 8004e5c:	f013 fb36 	bl	80184cc <vTaskDelay>
 8004e60:	2064      	movs	r0, #100	@ 0x64
 8004e62:	f7fc f983 	bl	800116c <buzzer>
 8004e66:	e063      	b.n	8004f30 <buzzing_task+0x2c0>
 8004e68:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e6c:	f7fc f97e 	bl	800116c <buzzer>
 8004e70:	2064      	movs	r0, #100	@ 0x64
 8004e72:	f013 fb2b 	bl	80184cc <vTaskDelay>
 8004e76:	f44f 7025 	mov.w	r0, #660	@ 0x294
 8004e7a:	f7fc f977 	bl	800116c <buzzer>
 8004e7e:	2064      	movs	r0, #100	@ 0x64
 8004e80:	f013 fb24 	bl	80184cc <vTaskDelay>
 8004e84:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e88:	f7fc f970 	bl	800116c <buzzer>
 8004e8c:	2064      	movs	r0, #100	@ 0x64
 8004e8e:	f013 fb1d 	bl	80184cc <vTaskDelay>
 8004e92:	e04d      	b.n	8004f30 <buzzing_task+0x2c0>
 8004e94:	f44f 70b9 	mov.w	r0, #370	@ 0x172
 8004e98:	f7fc f968 	bl	800116c <buzzer>
 8004e9c:	2064      	movs	r0, #100	@ 0x64
 8004e9e:	f013 fb15 	bl	80184cc <vTaskDelay>
 8004ea2:	e045      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ea4:	f640 1082 	movw	r0, #2434	@ 0x982
 8004ea8:	f7fc f960 	bl	800116c <buzzer>
 8004eac:	2064      	movs	r0, #100	@ 0x64
 8004eae:	f013 fb0d 	bl	80184cc <vTaskDelay>
 8004eb2:	e03d      	b.n	8004f30 <buzzing_task+0x2c0>
 8004eb4:	2000      	movs	r0, #0
 8004eb6:	f7fc f959 	bl	800116c <buzzer>
 8004eba:	2032      	movs	r0, #50	@ 0x32
 8004ebc:	f013 fb06 	bl	80184cc <vTaskDelay>
 8004ec0:	e036      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ec2:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004ec6:	f7fc f951 	bl	800116c <buzzer>
 8004eca:	2064      	movs	r0, #100	@ 0x64
 8004ecc:	f013 fafe 	bl	80184cc <vTaskDelay>
 8004ed0:	e02e      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ed2:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004ed6:	f7fc f949 	bl	800116c <buzzer>
 8004eda:	2064      	movs	r0, #100	@ 0x64
 8004edc:	f013 faf6 	bl	80184cc <vTaskDelay>
 8004ee0:	e026      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ee2:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 8004ee6:	f7fc f941 	bl	800116c <buzzer>
 8004eea:	2032      	movs	r0, #50	@ 0x32
 8004eec:	f013 faee 	bl	80184cc <vTaskDelay>
 8004ef0:	f240 4017 	movw	r0, #1047	@ 0x417
 8004ef4:	f7fc f93a 	bl	800116c <buzzer>
 8004ef8:	2032      	movs	r0, #50	@ 0x32
 8004efa:	f013 fae7 	bl	80184cc <vTaskDelay>
 8004efe:	f240 4055 	movw	r0, #1109	@ 0x455
 8004f02:	f7fc f933 	bl	800116c <buzzer>
 8004f06:	2032      	movs	r0, #50	@ 0x32
 8004f08:	f013 fae0 	bl	80184cc <vTaskDelay>
 8004f0c:	e010      	b.n	8004f30 <buzzing_task+0x2c0>
 8004f0e:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 8004f12:	f7fc f92b 	bl	800116c <buzzer>
 8004f16:	2064      	movs	r0, #100	@ 0x64
 8004f18:	f013 fad8 	bl	80184cc <vTaskDelay>
 8004f1c:	e008      	b.n	8004f30 <buzzing_task+0x2c0>
 8004f1e:	f240 4055 	movw	r0, #1109	@ 0x455
 8004f22:	f7fc f923 	bl	800116c <buzzer>
 8004f26:	2064      	movs	r0, #100	@ 0x64
 8004f28:	f013 fad0 	bl	80184cc <vTaskDelay>
 8004f2c:	e000      	b.n	8004f30 <buzzing_task+0x2c0>
 8004f2e:	bf00      	nop
 8004f30:	2000      	movs	r0, #0
 8004f32:	f7fc f91b 	bl	800116c <buzzer>
 8004f36:	2032      	movs	r0, #50	@ 0x32
 8004f38:	f013 fac8 	bl	80184cc <vTaskDelay>
 8004f3c:	e69e      	b.n	8004c7c <buzzing_task+0xc>
 8004f3e:	bf00      	nop
 8004f40:	66666666 	.word	0x66666666
 8004f44:	3fee6666 	.word	0x3fee6666
 8004f48:	9999999a 	.word	0x9999999a
 8004f4c:	3fa99999 	.word	0x3fa99999
 8004f50:	42fa0000 	.word	0x42fa0000
 8004f54:	200037d4 	.word	0x200037d4
 8004f58:	0802142c 	.word	0x0802142c
 8004f5c:	08021528 	.word	0x08021528

08004f60 <can_ISR>:

/**
 * CAN ISR function, triggered upon RX_FIFO0_MSG_PENDING
 * converts the raw can data to the motor_data struct form as well
 */
void can_ISR(CAN_HandleTypeDef *hcan) {
 8004f60:	b580      	push	{r7, lr}
 8004f62:	b08c      	sub	sp, #48	@ 0x30
 8004f64:	af00      	add	r7, sp, #0
 8004f66:	6078      	str	r0, [r7, #4]

	CAN_RxHeaderTypeDef rx_msg_header;
	uint8_t rx_buffer[CAN_BUFFER_SIZE];
	//check which CAN bus received it
	//required because the 2 canbuses use seperate FIFOs for receive
	if (hcan->Instance == CAN1) {
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	4a1f      	ldr	r2, [pc, #124]	@ (8004fec <can_ISR+0x8c>)
 8004f6e:	4293      	cmp	r3, r2
 8004f70:	d118      	bne.n	8004fa4 <can_ISR+0x44>
		HAL_CAN_DeactivateNotification(hcan,
 8004f72:	210e      	movs	r1, #14
 8004f74:	6878      	ldr	r0, [r7, #4]
 8004f76:	f006 ffa8 	bl	800beca <HAL_CAN_DeactivateNotification>
				CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL
						| CAN_IT_RX_FIFO0_OVERRUN);
		can1_get_msg(&hcan1, &rx_msg_header, rx_buffer);
 8004f7a:	f107 020c 	add.w	r2, r7, #12
 8004f7e:	f107 0314 	add.w	r3, r7, #20
 8004f82:	4619      	mov	r1, r3
 8004f84:	481a      	ldr	r0, [pc, #104]	@ (8004ff0 <can_ISR+0x90>)
 8004f86:	f7fc f937 	bl	80011f8 <can1_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId, rx_buffer);
 8004f8a:	697b      	ldr	r3, [r7, #20]
 8004f8c:	b29b      	uxth	r3, r3
 8004f8e:	f107 020c 	add.w	r2, r7, #12
 8004f92:	4619      	mov	r1, r3
 8004f94:	4817      	ldr	r0, [pc, #92]	@ (8004ff4 <can_ISR+0x94>)
 8004f96:	f000 f833 	bl	8005000 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8004f9a:	210e      	movs	r1, #14
 8004f9c:	6878      	ldr	r0, [r7, #4]
 8004f9e:	f006 ff6e 	bl	800be7e <HAL_CAN_ActivateNotification>
		can_get_msg(&hcan2, &rx_msg_header, rx_buffer);
		process_chassis_can_msg(rx_msg_header.StdId, rx_buffer);
		HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL	| CAN_IT_RX_FIFO0_OVERRUN);
	}
#endif
}
 8004fa2:	e01e      	b.n	8004fe2 <can_ISR+0x82>
	else if (hcan->Instance == CAN2) {
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4a13      	ldr	r2, [pc, #76]	@ (8004ff8 <can_ISR+0x98>)
 8004faa:	4293      	cmp	r3, r2
 8004fac:	d119      	bne.n	8004fe2 <can_ISR+0x82>
		HAL_CAN_DeactivateNotification(hcan,
 8004fae:	2170      	movs	r1, #112	@ 0x70
 8004fb0:	6878      	ldr	r0, [r7, #4]
 8004fb2:	f006 ff8a 	bl	800beca <HAL_CAN_DeactivateNotification>
		can2_get_msg(&hcan2, &rx_msg_header, rx_buffer);
 8004fb6:	f107 020c 	add.w	r2, r7, #12
 8004fba:	f107 0314 	add.w	r3, r7, #20
 8004fbe:	4619      	mov	r1, r3
 8004fc0:	480e      	ldr	r0, [pc, #56]	@ (8004ffc <can_ISR+0x9c>)
 8004fc2:	f7fc f92a 	bl	800121a <can2_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId + 12, rx_buffer);
 8004fc6:	697b      	ldr	r3, [r7, #20]
 8004fc8:	b29b      	uxth	r3, r3
 8004fca:	330c      	adds	r3, #12
 8004fcc:	b29b      	uxth	r3, r3
 8004fce:	f107 020c 	add.w	r2, r7, #12
 8004fd2:	4619      	mov	r1, r3
 8004fd4:	4807      	ldr	r0, [pc, #28]	@ (8004ff4 <can_ISR+0x94>)
 8004fd6:	f000 f813 	bl	8005000 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8004fda:	2170      	movs	r1, #112	@ 0x70
 8004fdc:	6878      	ldr	r0, [r7, #4]
 8004fde:	f006 ff4e 	bl	800be7e <HAL_CAN_ActivateNotification>
}
 8004fe2:	bf00      	nop
 8004fe4:	3730      	adds	r7, #48	@ 0x30
 8004fe6:	46bd      	mov	sp, r7
 8004fe8:	bd80      	pop	{r7, pc}
 8004fea:	bf00      	nop
 8004fec:	40006400 	.word	0x40006400
 8004ff0:	200008e4 	.word	0x200008e4
 8004ff4:	20001e48 	.word	0x20001e48
 8004ff8:	40006800 	.word	0x40006800
 8004ffc:	2000090c 	.word	0x2000090c

08005000 <convert_raw_can_data>:
 *
 * For GM6020 motors, it recenters the motor angle data and converts it to radians.
 */

void convert_raw_can_data(motor_data_t *can_motor_data, uint16_t motor_id,
		uint8_t *rx_buffer) {
 8005000:	b5b0      	push	{r4, r5, r7, lr}
 8005002:	b08c      	sub	sp, #48	@ 0x30
 8005004:	af00      	add	r7, sp, #0
 8005006:	60f8      	str	r0, [r7, #12]
 8005008:	460b      	mov	r3, r1
 800500a:	607a      	str	r2, [r7, #4]
 800500c:	817b      	strh	r3, [r7, #10]
	uint16_t idnum = motor_id - 0x201;
 800500e:	897b      	ldrh	r3, [r7, #10]
 8005010:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 8005014:	857b      	strh	r3, [r7, #42]	@ 0x2a

	//if idnum > 24, it's not a DJI motor. Add in a seperate processing function if other CAN devices are added
	if (idnum > 24) {
 8005016:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8005018:	2b18      	cmp	r3, #24
 800501a:	f200 81a5 	bhi.w	8005368 <convert_raw_can_data+0x368>
		return;
	}
	motor_data_t *curr_motor = &can_motor_data[idnum];
 800501e:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 8005020:	4613      	mov	r3, r2
 8005022:	011b      	lsls	r3, r3, #4
 8005024:	1a9b      	subs	r3, r3, r2
 8005026:	011b      	lsls	r3, r3, #4
 8005028:	461a      	mov	r2, r3
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	4413      	add	r3, r2
 800502e:	627b      	str	r3, [r7, #36]	@ 0x24
	//motor must be initialised in motor_config.c first
	if (curr_motor->motor_type > 0) {
 8005030:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005032:	789b      	ldrb	r3, [r3, #2]
 8005034:	2b00      	cmp	r3, #0
 8005036:	f000 8198 	beq.w	800536a <convert_raw_can_data+0x36a>
		//convert the raw data back into the respective values
		curr_motor->id = motor_id;
 800503a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800503c:	897a      	ldrh	r2, [r7, #10]
 800503e:	801a      	strh	r2, [r3, #0]
		curr_motor->raw_data.angle[1] = curr_motor->raw_data.angle[0];
 8005040:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005042:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8005046:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005048:	80da      	strh	r2, [r3, #6]
		curr_motor->raw_data.angle[0] = (rx_buffer[0] << 8) | rx_buffer[1];
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	781b      	ldrb	r3, [r3, #0]
 800504e:	021b      	lsls	r3, r3, #8
 8005050:	b21a      	sxth	r2, r3
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	3301      	adds	r3, #1
 8005056:	781b      	ldrb	r3, [r3, #0]
 8005058:	b21b      	sxth	r3, r3
 800505a:	4313      	orrs	r3, r2
 800505c:	b21a      	sxth	r2, r3
 800505e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005060:	809a      	strh	r2, [r3, #4]
		int16_t temp_rpm = (rx_buffer[2] << 8) | rx_buffer[3];
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	3302      	adds	r3, #2
 8005066:	781b      	ldrb	r3, [r3, #0]
 8005068:	021b      	lsls	r3, r3, #8
 800506a:	b21a      	sxth	r2, r3
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	3303      	adds	r3, #3
 8005070:	781b      	ldrb	r3, [r3, #0]
 8005072:	b21b      	sxth	r3, r3
 8005074:	4313      	orrs	r3, r2
 8005076:	847b      	strh	r3, [r7, #34]	@ 0x22
		curr_motor->raw_data.rpm = curr_motor->raw_data.rpm * SPEED_LPF
 8005078:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800507a:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 800507c:	811a      	strh	r2, [r3, #8]
				+ temp_rpm * (1 - SPEED_LPF);
		curr_motor->raw_data.torque =(rx_buffer[4] << 8) | rx_buffer[5];
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	3304      	adds	r3, #4
 8005082:	781b      	ldrb	r3, [r3, #0]
 8005084:	021b      	lsls	r3, r3, #8
 8005086:	b21a      	sxth	r2, r3
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	3305      	adds	r3, #5
 800508c:	781b      	ldrb	r3, [r3, #0]
 800508e:	b21b      	sxth	r3, r3
 8005090:	4313      	orrs	r3, r2
 8005092:	b21a      	sxth	r2, r3
 8005094:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005096:	815a      	strh	r2, [r3, #10]
		curr_motor->torque_data = ((double)curr_motor->raw_data.torque / 13000.0f)*1.5f;
 8005098:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800509a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800509e:	4618      	mov	r0, r3
 80050a0:	f7fb fa40 	bl	8000524 <__aeabi_i2d>
 80050a4:	a3bd      	add	r3, pc, #756	@ (adr r3, 800539c <convert_raw_can_data+0x39c>)
 80050a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80050aa:	f7fb fbcf 	bl	800084c <__aeabi_ddiv>
 80050ae:	4602      	mov	r2, r0
 80050b0:	460b      	mov	r3, r1
 80050b2:	4610      	mov	r0, r2
 80050b4:	4619      	mov	r1, r3
 80050b6:	f04f 0200 	mov.w	r2, #0
 80050ba:	4bb1      	ldr	r3, [pc, #708]	@ (8005380 <convert_raw_can_data+0x380>)
 80050bc:	f7fb fa9c 	bl	80005f8 <__aeabi_dmul>
 80050c0:	4602      	mov	r2, r0
 80050c2:	460b      	mov	r3, r1
 80050c4:	4610      	mov	r0, r2
 80050c6:	4619      	mov	r1, r3
 80050c8:	f7fb fd8e 	bl	8000be8 <__aeabi_d2f>
 80050cc:	4602      	mov	r2, r0
 80050ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050d0:	62da      	str	r2, [r3, #44]	@ 0x2c
		curr_motor->raw_data.temp = (rx_buffer[6]);
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	799a      	ldrb	r2, [r3, #6]
 80050d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050d8:	731a      	strb	r2, [r3, #12]
		curr_motor->last_time[1] = curr_motor->last_time[0];
 80050da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050dc:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
 80050e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050e2:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
		curr_motor->last_time[0] = get_microseconds();
 80050e6:	f7fd f86b 	bl	80021c0 <get_microseconds>
 80050ea:	4602      	mov	r2, r0
 80050ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050ee:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4

		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 80050f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050f4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80050f8:	461a      	mov	r2, r3
				- curr_motor->raw_data.angle[1]) / 8192;
 80050fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050fc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8005100:	1ad3      	subs	r3, r2, r3
		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 8005102:	ee07 3a90 	vmov	s15, r3
 8005106:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800510a:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8005384 <convert_raw_can_data+0x384>
 800510e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005112:	edc7 7a07 	vstr	s15, [r7, #28]
		float time_diff = (float) (curr_motor->last_time[0]
 8005116:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005118:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
				- curr_motor->last_time[1]) / (float) (TIMER_FREQ * 60);
 800511c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800511e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005122:	1ad3      	subs	r3, r2, r3
		float time_diff = (float) (curr_motor->last_time[0]
 8005124:	ee07 3a90 	vmov	s15, r3
 8005128:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800512c:	eddf 6a96 	vldr	s13, [pc, #600]	@ 8005388 <convert_raw_can_data+0x388>
 8005130:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005134:	edc7 7a06 	vstr	s15, [r7, #24]
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 8005138:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800513a:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800513e:	4618      	mov	r0, r3
 8005140:	f7fb fa02 	bl	8000548 <__aeabi_f2d>
				* 0.95 + (rds_passed * time_diff * 0.05);
 8005144:	a38a      	add	r3, pc, #552	@ (adr r3, 8005370 <convert_raw_can_data+0x370>)
 8005146:	e9d3 2300 	ldrd	r2, r3, [r3]
 800514a:	f7fb fa55 	bl	80005f8 <__aeabi_dmul>
 800514e:	4602      	mov	r2, r0
 8005150:	460b      	mov	r3, r1
 8005152:	4614      	mov	r4, r2
 8005154:	461d      	mov	r5, r3
 8005156:	ed97 7a07 	vldr	s14, [r7, #28]
 800515a:	edd7 7a06 	vldr	s15, [r7, #24]
 800515e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005162:	ee17 0a90 	vmov	r0, s15
 8005166:	f7fb f9ef 	bl	8000548 <__aeabi_f2d>
 800516a:	a383      	add	r3, pc, #524	@ (adr r3, 8005378 <convert_raw_can_data+0x378>)
 800516c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005170:	f7fb fa42 	bl	80005f8 <__aeabi_dmul>
 8005174:	4602      	mov	r2, r0
 8005176:	460b      	mov	r3, r1
 8005178:	4620      	mov	r0, r4
 800517a:	4629      	mov	r1, r5
 800517c:	f7fb f886 	bl	800028c <__adddf3>
 8005180:	4602      	mov	r2, r0
 8005182:	460b      	mov	r3, r1
 8005184:	4610      	mov	r0, r2
 8005186:	4619      	mov	r1, r3
 8005188:	f7fb fd2e 	bl	8000be8 <__aeabi_d2f>
 800518c:	4602      	mov	r2, r0
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 800518e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005190:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
		//process the angle data differently depending on the motor type to get radians in the
		//adj_angle value
		switch (curr_motor->motor_type) {
 8005194:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005196:	789b      	ldrb	r3, [r3, #2]
 8005198:	3b01      	subs	r3, #1
 800519a:	2b08      	cmp	r3, #8
 800519c:	d84d      	bhi.n	800523a <convert_raw_can_data+0x23a>
 800519e:	a201      	add	r2, pc, #4	@ (adr r2, 80051a4 <convert_raw_can_data+0x1a4>)
 80051a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80051a4:	080051c9 	.word	0x080051c9
 80051a8:	080051ef 	.word	0x080051ef
 80051ac:	080051ef 	.word	0x080051ef
 80051b0:	0800523b 	.word	0x0800523b
 80051b4:	0800523b 	.word	0x0800523b
 80051b8:	0800523b 	.word	0x0800523b
 80051bc:	08005215 	.word	0x08005215
 80051c0:	08005215 	.word	0x08005215
 80051c4:	08005215 	.word	0x08005215
		case TYPE_GM6020:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051ca:	1d18      	adds	r0, r3, #4
 80051cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051ce:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 80051d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051d4:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051d6:	461a      	mov	r2, r3
 80051d8:	f000 f922 	bl	8005420 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 80051dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051de:	1d1a      	adds	r2, r3, #4
 80051e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051e2:	3398      	adds	r3, #152	@ 0x98
 80051e4:	4619      	mov	r1, r3
 80051e6:	4610      	mov	r0, r2
 80051e8:	f000 f8dc 	bl	80053a4 <angle_offset>
			break;
 80051ec:	e026      	b.n	800523c <convert_raw_can_data+0x23c>
		case TYPE_M2006:
		case TYPE_M3508:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051f0:	1d18      	adds	r0, r3, #4
 80051f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051f4:	f103 0198 	add.w	r1, r3, #152	@ 0x98
								curr_motor->last_time);
 80051f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051fa:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051fc:	461a      	mov	r2, r3
 80051fe:	f000 f90f 	bl	8005420 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005202:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005204:	1d1a      	adds	r2, r3, #4
 8005206:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005208:	3398      	adds	r3, #152	@ 0x98
 800520a:	4619      	mov	r1, r3
 800520c:	4610      	mov	r0, r2
 800520e:	f000 f8c9 	bl	80053a4 <angle_offset>
			break;
 8005212:	e013      	b.n	800523c <convert_raw_can_data+0x23c>
//					curr_motor->last_time);
			break;
		case TYPE_M2006_ANGLE:
		case TYPE_M3508_ANGLE:
		case TYPE_GM6020_720:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005214:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005216:	1d18      	adds	r0, r3, #4
 8005218:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800521a:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 800521e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005220:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005222:	461a      	mov	r2, r3
 8005224:	f000 f8fc 	bl	8005420 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005228:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800522a:	1d1a      	adds	r2, r3, #4
 800522c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800522e:	3398      	adds	r3, #152	@ 0x98
 8005230:	4619      	mov	r1, r3
 8005232:	4610      	mov	r0, r2
 8005234:	f000 f8b6 	bl	80053a4 <angle_offset>
			break;
 8005238:	e000      	b.n	800523c <convert_raw_can_data+0x23c>
		default:
			break;
 800523a:	bf00      	nop

		}

		//initialise task switching variables
		BaseType_t xHigherPriorityTaskWoken, xResult;
		xHigherPriorityTaskWoken = pdFALSE;
 800523c:	2300      	movs	r3, #0
 800523e:	617b      	str	r3, [r7, #20]

		//set event group bits so that the tasks and PIDs only trigger upon updated data
		//also checks if the respective tasks are set to ready
		switch (idnum + 1) {
 8005240:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8005242:	3301      	adds	r3, #1
 8005244:	3b05      	subs	r3, #5
 8005246:	2b0f      	cmp	r3, #15
 8005248:	d87c      	bhi.n	8005344 <convert_raw_can_data+0x344>
 800524a:	a201      	add	r2, pc, #4	@ (adr r2, 8005250 <convert_raw_can_data+0x250>)
 800524c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005250:	08005291 	.word	0x08005291
 8005254:	080052a5 	.word	0x080052a5
 8005258:	080052b9 	.word	0x080052b9
 800525c:	080052cd 	.word	0x080052cd
 8005260:	08005345 	.word	0x08005345
 8005264:	08005345 	.word	0x08005345
 8005268:	08005345 	.word	0x08005345
 800526c:	08005345 	.word	0x08005345
 8005270:	08005345 	.word	0x08005345
 8005274:	08005345 	.word	0x08005345
 8005278:	080052f5 	.word	0x080052f5
 800527c:	080052e1 	.word	0x080052e1
 8005280:	08005309 	.word	0x08005309
 8005284:	0800531d 	.word	0x0800531d
 8005288:	08005345 	.word	0x08005345
 800528c:	08005331 	.word	0x08005331
#ifndef CHASSIS_MCU
		case FR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b1000,
 8005290:	4b3e      	ldr	r3, [pc, #248]	@ (800538c <convert_raw_can_data+0x38c>)
 8005292:	681b      	ldr	r3, [r3, #0]
 8005294:	f107 0214 	add.w	r2, r7, #20
 8005298:	2108      	movs	r1, #8
 800529a:	4618      	mov	r0, r3
 800529c:	f012 f81e 	bl	80172dc <xEventGroupSetBitsFromISR>
 80052a0:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052a2:	e052      	b.n	800534a <convert_raw_can_data+0x34a>
		case FL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0100,
 80052a4:	4b39      	ldr	r3, [pc, #228]	@ (800538c <convert_raw_can_data+0x38c>)
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	f107 0214 	add.w	r2, r7, #20
 80052ac:	2104      	movs	r1, #4
 80052ae:	4618      	mov	r0, r3
 80052b0:	f012 f814 	bl	80172dc <xEventGroupSetBitsFromISR>
 80052b4:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052b6:	e048      	b.n	800534a <convert_raw_can_data+0x34a>
		case BL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0010,
 80052b8:	4b34      	ldr	r3, [pc, #208]	@ (800538c <convert_raw_can_data+0x38c>)
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	f107 0214 	add.w	r2, r7, #20
 80052c0:	2102      	movs	r1, #2
 80052c2:	4618      	mov	r0, r3
 80052c4:	f012 f80a 	bl	80172dc <xEventGroupSetBitsFromISR>
 80052c8:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052ca:	e03e      	b.n	800534a <convert_raw_can_data+0x34a>
		case BR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0001,
 80052cc:	4b2f      	ldr	r3, [pc, #188]	@ (800538c <convert_raw_can_data+0x38c>)
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	f107 0214 	add.w	r2, r7, #20
 80052d4:	2101      	movs	r1, #1
 80052d6:	4618      	mov	r0, r3
 80052d8:	f012 f800 	bl	80172dc <xEventGroupSetBitsFromISR>
 80052dc:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052de:	e034      	b.n	800534a <convert_raw_can_data+0x34a>
#endif
		case LFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b010,
 80052e0:	4b2b      	ldr	r3, [pc, #172]	@ (8005390 <convert_raw_can_data+0x390>)
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f107 0214 	add.w	r2, r7, #20
 80052e8:	2102      	movs	r1, #2
 80052ea:	4618      	mov	r0, r3
 80052ec:	f011 fff6 	bl	80172dc <xEventGroupSetBitsFromISR>
 80052f0:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052f2:	e02a      	b.n	800534a <convert_raw_can_data+0x34a>
		case RFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b001,
 80052f4:	4b26      	ldr	r3, [pc, #152]	@ (8005390 <convert_raw_can_data+0x390>)
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	f107 0214 	add.w	r2, r7, #20
 80052fc:	2101      	movs	r1, #1
 80052fe:	4618      	mov	r0, r3
 8005300:	f011 ffec 	bl	80172dc <xEventGroupSetBitsFromISR>
 8005304:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8005306:	e020      	b.n	800534a <convert_raw_can_data+0x34a>
		case FEEDER_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b100,
 8005308:	4b21      	ldr	r3, [pc, #132]	@ (8005390 <convert_raw_can_data+0x390>)
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	f107 0214 	add.w	r2, r7, #20
 8005310:	2104      	movs	r1, #4
 8005312:	4618      	mov	r0, r3
 8005314:	f011 ffe2 	bl	80172dc <xEventGroupSetBitsFromISR>
 8005318:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 800531a:	e016      	b.n	800534a <convert_raw_can_data+0x34a>
		case PITCH_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b01,
 800531c:	4b1d      	ldr	r3, [pc, #116]	@ (8005394 <convert_raw_can_data+0x394>)
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	f107 0214 	add.w	r2, r7, #20
 8005324:	2101      	movs	r1, #1
 8005326:	4618      	mov	r0, r3
 8005328:	f011 ffd8 	bl	80172dc <xEventGroupSetBitsFromISR>
 800532c:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 800532e:	e00c      	b.n	800534a <convert_raw_can_data+0x34a>
		case YAW_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b10,
 8005330:	4b18      	ldr	r3, [pc, #96]	@ (8005394 <convert_raw_can_data+0x394>)
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	f107 0214 	add.w	r2, r7, #20
 8005338:	2102      	movs	r1, #2
 800533a:	4618      	mov	r0, r3
 800533c:	f011 ffce 	bl	80172dc <xEventGroupSetBitsFromISR>
 8005340:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8005342:	e002      	b.n	800534a <convert_raw_can_data+0x34a>
		default:
			xResult = pdFAIL;
 8005344:	2300      	movs	r3, #0
 8005346:	62fb      	str	r3, [r7, #44]	@ 0x2c
			idnum = idnum;
			//error handler
			break;
 8005348:	bf00      	nop
		}

		//switches tasks if a higher priority task is ready.
		//required because the function is in an ISR
		if (xResult != pdFAIL) {
 800534a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800534c:	2b00      	cmp	r3, #0
 800534e:	d00c      	beq.n	800536a <convert_raw_can_data+0x36a>
			portYIELD_FROM_ISR(xHigherPriorityTaskWoken); //forces current task to yield if higher priority task is called
 8005350:	697b      	ldr	r3, [r7, #20]
 8005352:	2b00      	cmp	r3, #0
 8005354:	d009      	beq.n	800536a <convert_raw_can_data+0x36a>
 8005356:	4b10      	ldr	r3, [pc, #64]	@ (8005398 <convert_raw_can_data+0x398>)
 8005358:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800535c:	601a      	str	r2, [r3, #0]
 800535e:	f3bf 8f4f 	dsb	sy
 8005362:	f3bf 8f6f 	isb	sy
 8005366:	e000      	b.n	800536a <convert_raw_can_data+0x36a>
		return;
 8005368:	bf00      	nop
		}
	} else {
		//this is a useless statement so that it is possible to set a breakpoint here lol
		//error handler
	}
}
 800536a:	3730      	adds	r7, #48	@ 0x30
 800536c:	46bd      	mov	sp, r7
 800536e:	bdb0      	pop	{r4, r5, r7, pc}
 8005370:	66666666 	.word	0x66666666
 8005374:	3fee6666 	.word	0x3fee6666
 8005378:	9999999a 	.word	0x9999999a
 800537c:	3fa99999 	.word	0x3fa99999
 8005380:	3ff80000 	.word	0x3ff80000
 8005384:	46000000 	.word	0x46000000
 8005388:	4ab71b00 	.word	0x4ab71b00
 800538c:	200037bc 	.word	0x200037bc
 8005390:	200037c0 	.word	0x200037c0
 8005394:	200037b8 	.word	0x200037b8
 8005398:	e000ed04 	.word	0xe000ed04
 800539c:	00000000 	.word	0x00000000
 80053a0:	40c96400 	.word	0x40c96400

080053a4 <angle_offset>:
}

/**
 * Centers the raw motor angle to between -Pi to +Pi
 */
void angle_offset(raw_data_t *motor_data, angle_data_t *angle_data) {
 80053a4:	b480      	push	{r7}
 80053a6:	b085      	sub	sp, #20
 80053a8:	af00      	add	r7, sp, #0
 80053aa:	6078      	str	r0, [r7, #4]
 80053ac:	6039      	str	r1, [r7, #0]
	int32_t temp_ang = 0;
 80053ae:	2300      	movs	r3, #0
 80053b0:	60fb      	str	r3, [r7, #12]
//	}
//	while (angle_data->ticks < angle_data->min_ticks) {
//		angle_data->ticks += angle_data->tick_range;
//	}

	temp_ang = angle_data->ticks - angle_data->center_ang;
 80053b2:	683b      	ldr	r3, [r7, #0]
 80053b4:	681a      	ldr	r2, [r3, #0]
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	685b      	ldr	r3, [r3, #4]
 80053ba:	1ad3      	subs	r3, r2, r3
 80053bc:	60fb      	str	r3, [r7, #12]
	if (temp_ang > angle_data->max_ticks) {
 80053be:	683b      	ldr	r3, [r7, #0]
 80053c0:	68db      	ldr	r3, [r3, #12]
 80053c2:	68fa      	ldr	r2, [r7, #12]
 80053c4:	429a      	cmp	r2, r3
 80053c6:	dd05      	ble.n	80053d4 <angle_offset+0x30>
		temp_ang -= angle_data->tick_range;
 80053c8:	683b      	ldr	r3, [r7, #0]
 80053ca:	691b      	ldr	r3, [r3, #16]
 80053cc:	68fa      	ldr	r2, [r7, #12]
 80053ce:	1ad3      	subs	r3, r2, r3
 80053d0:	60fb      	str	r3, [r7, #12]
 80053d2:	e009      	b.n	80053e8 <angle_offset+0x44>
	} else if (temp_ang < angle_data->min_ticks) {
 80053d4:	683b      	ldr	r3, [r7, #0]
 80053d6:	689b      	ldr	r3, [r3, #8]
 80053d8:	68fa      	ldr	r2, [r7, #12]
 80053da:	429a      	cmp	r2, r3
 80053dc:	da04      	bge.n	80053e8 <angle_offset+0x44>
		temp_ang += angle_data->tick_range;
 80053de:	683b      	ldr	r3, [r7, #0]
 80053e0:	691b      	ldr	r3, [r3, #16]
 80053e2:	68fa      	ldr	r2, [r7, #12]
 80053e4:	4413      	add	r3, r2
 80053e6:	60fb      	str	r3, [r7, #12]
	}
//	angle_data->ticks = temp_ang;
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 80053e8:	68fb      	ldr	r3, [r7, #12]
 80053ea:	ee07 3a90 	vmov	s15, r3
 80053ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80053f2:	683b      	ldr	r3, [r7, #0]
 80053f4:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80053f8:	ee67 6a27 	vmul.f32	s13, s14, s15
			/ angle_data->tick_range;
 80053fc:	683b      	ldr	r3, [r7, #0]
 80053fe:	691b      	ldr	r3, [r3, #16]
 8005400:	ee07 3a90 	vmov	s15, r3
 8005404:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005408:	eec6 7a87 	vdiv.f32	s15, s13, s14
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 800540c:	683b      	ldr	r3, [r7, #0]
 800540e:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34
}
 8005412:	bf00      	nop
 8005414:	3714      	adds	r7, #20
 8005416:	46bd      	mov	sp, r7
 8005418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800541c:	4770      	bx	lr
	...

08005420 <motor_calc_odometry>:

void motor_calc_odometry(raw_data_t *motor_data, angle_data_t *angle_data,
		uint32_t feedback_times[]) {
 8005420:	b480      	push	{r7}
 8005422:	b087      	sub	sp, #28
 8005424:	af00      	add	r7, sp, #0
 8005426:	60f8      	str	r0, [r7, #12]
 8005428:	60b9      	str	r1, [r7, #8]
 800542a:	607a      	str	r2, [r7, #4]
	int16_t abs_angle_diff;
	abs_angle_diff = motor_data->angle[0] - motor_data->angle[1];
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005432:	b29a      	uxth	r2, r3
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800543a:	b29b      	uxth	r3, r3
 800543c:	1ad3      	subs	r3, r2, r3
 800543e:	b29b      	uxth	r3, r3
 8005440:	82fb      	strh	r3, [r7, #22]
	if (angle_data->init == 0){
 8005442:	68bb      	ldr	r3, [r7, #8]
 8005444:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005448:	2b00      	cmp	r3, #0
 800544a:	d129      	bne.n	80054a0 <motor_calc_odometry+0x80>
		angle_data->ticks = motor_data->angle[0];
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005452:	461a      	mov	r2, r3
 8005454:	68bb      	ldr	r3, [r7, #8]
 8005456:	601a      	str	r2, [r3, #0]
		if (angle_data->ticks > angle_data->max_ticks) {
 8005458:	68bb      	ldr	r3, [r7, #8]
 800545a:	681a      	ldr	r2, [r3, #0]
 800545c:	68bb      	ldr	r3, [r7, #8]
 800545e:	68db      	ldr	r3, [r3, #12]
 8005460:	429a      	cmp	r2, r3
 8005462:	dd06      	ble.n	8005472 <motor_calc_odometry+0x52>
			angle_data->ticks -= angle_data->tick_range;
 8005464:	68bb      	ldr	r3, [r7, #8]
 8005466:	681a      	ldr	r2, [r3, #0]
 8005468:	68bb      	ldr	r3, [r7, #8]
 800546a:	691b      	ldr	r3, [r3, #16]
 800546c:	1ad2      	subs	r2, r2, r3
 800546e:	68bb      	ldr	r3, [r7, #8]
 8005470:	601a      	str	r2, [r3, #0]
		}
		if (angle_data->ticks < angle_data->min_ticks) {
 8005472:	68bb      	ldr	r3, [r7, #8]
 8005474:	681a      	ldr	r2, [r3, #0]
 8005476:	68bb      	ldr	r3, [r7, #8]
 8005478:	689b      	ldr	r3, [r3, #8]
 800547a:	429a      	cmp	r2, r3
 800547c:	da06      	bge.n	800548c <motor_calc_odometry+0x6c>
			angle_data->ticks += angle_data->tick_range;
 800547e:	68bb      	ldr	r3, [r7, #8]
 8005480:	681a      	ldr	r2, [r3, #0]
 8005482:	68bb      	ldr	r3, [r7, #8]
 8005484:	691b      	ldr	r3, [r3, #16]
 8005486:	441a      	add	r2, r3
 8005488:	68bb      	ldr	r3, [r7, #8]
 800548a:	601a      	str	r2, [r3, #0]
		}
		motor_data->angle[1] = motor_data->angle[0];
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	805a      	strh	r2, [r3, #2]
		angle_data->init = 1;
 8005496:	68bb      	ldr	r3, [r7, #8]
 8005498:	2201      	movs	r2, #1
 800549a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
		return;
 800549e:	e06b      	b.n	8005578 <motor_calc_odometry+0x158>
	}
	angle_data->abs_ang_diff = abs_angle_diff;
 80054a0:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80054a4:	68bb      	ldr	r3, [r7, #8]
 80054a6:	615a      	str	r2, [r3, #20]

	//generally the motor won't exceed half a turn between each feedback
	if (abs_angle_diff > 4096) {
 80054a8:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054ac:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80054b0:	dd0a      	ble.n	80054c8 <motor_calc_odometry+0xa8>
		++angle_data->rev;
 80054b2:	68bb      	ldr	r3, [r7, #8]
 80054b4:	699b      	ldr	r3, [r3, #24]
 80054b6:	1c5a      	adds	r2, r3, #1
 80054b8:	68bb      	ldr	r3, [r7, #8]
 80054ba:	619a      	str	r2, [r3, #24]
		abs_angle_diff -= 8192;
 80054bc:	8afb      	ldrh	r3, [r7, #22]
 80054be:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 80054c2:	b29b      	uxth	r3, r3
 80054c4:	82fb      	strh	r3, [r7, #22]
 80054c6:	e00e      	b.n	80054e6 <motor_calc_odometry+0xc6>
	} else if (abs_angle_diff < -4096) {
 80054c8:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054cc:	f513 5f80 	cmn.w	r3, #4096	@ 0x1000
 80054d0:	da09      	bge.n	80054e6 <motor_calc_odometry+0xc6>
		--angle_data->rev;
 80054d2:	68bb      	ldr	r3, [r7, #8]
 80054d4:	699b      	ldr	r3, [r3, #24]
 80054d6:	1e5a      	subs	r2, r3, #1
 80054d8:	68bb      	ldr	r3, [r7, #8]
 80054da:	619a      	str	r2, [r3, #24]
		abs_angle_diff += 8192;
 80054dc:	8afb      	ldrh	r3, [r7, #22]
 80054de:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80054e2:	b29b      	uxth	r3, r3
 80054e4:	82fb      	strh	r3, [r7, #22]
	}

	uint16_t gear_ticks = 8192 * angle_data->gearbox_ratio;
 80054e6:	68bb      	ldr	r3, [r7, #8]
 80054e8:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 80054ec:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 8005584 <motor_calc_odometry+0x164>
 80054f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80054f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80054f8:	ee17 3a90 	vmov	r3, s15
 80054fc:	82bb      	strh	r3, [r7, #20]
	angle_data->ticks += abs_angle_diff;
 80054fe:	68bb      	ldr	r3, [r7, #8]
 8005500:	681a      	ldr	r2, [r3, #0]
 8005502:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8005506:	441a      	add	r2, r3
 8005508:	68bb      	ldr	r3, [r7, #8]
 800550a:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 800550c:	e006      	b.n	800551c <motor_calc_odometry+0xfc>
		angle_data->ticks -= angle_data->tick_range;
 800550e:	68bb      	ldr	r3, [r7, #8]
 8005510:	681a      	ldr	r2, [r3, #0]
 8005512:	68bb      	ldr	r3, [r7, #8]
 8005514:	691b      	ldr	r3, [r3, #16]
 8005516:	1ad2      	subs	r2, r2, r3
 8005518:	68bb      	ldr	r3, [r7, #8]
 800551a:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 800551c:	68bb      	ldr	r3, [r7, #8]
 800551e:	681a      	ldr	r2, [r3, #0]
 8005520:	68bb      	ldr	r3, [r7, #8]
 8005522:	68db      	ldr	r3, [r3, #12]
 8005524:	429a      	cmp	r2, r3
 8005526:	dcf2      	bgt.n	800550e <motor_calc_odometry+0xee>
	}
	while (angle_data->ticks < angle_data->min_ticks) {
 8005528:	e006      	b.n	8005538 <motor_calc_odometry+0x118>
		angle_data->ticks += angle_data->tick_range;
 800552a:	68bb      	ldr	r3, [r7, #8]
 800552c:	681a      	ldr	r2, [r3, #0]
 800552e:	68bb      	ldr	r3, [r7, #8]
 8005530:	691b      	ldr	r3, [r3, #16]
 8005532:	441a      	add	r2, r3
 8005534:	68bb      	ldr	r3, [r7, #8]
 8005536:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks < angle_data->min_ticks) {
 8005538:	68bb      	ldr	r3, [r7, #8]
 800553a:	681a      	ldr	r2, [r3, #0]
 800553c:	68bb      	ldr	r3, [r7, #8]
 800553e:	689b      	ldr	r3, [r3, #8]
 8005540:	429a      	cmp	r2, r3
 8005542:	dbf2      	blt.n	800552a <motor_calc_odometry+0x10a>
	}

	angle_data->dist = angle_data->ticks * angle_data->wheel_circ / gear_ticks;
 8005544:	68bb      	ldr	r3, [r7, #8]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	ee07 3a90 	vmov	s15, r3
 800554c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005550:	68bb      	ldr	r3, [r7, #8]
 8005552:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 8005556:	ee67 6a27 	vmul.f32	s13, s14, s15
 800555a:	8abb      	ldrh	r3, [r7, #20]
 800555c:	ee07 3a90 	vmov	s15, r3
 8005560:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005564:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005568:	68bb      	ldr	r3, [r7, #8]
 800556a:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
	motor_data->angle[1] = motor_data->angle[0];
 800556e:	68fb      	ldr	r3, [r7, #12]
 8005570:	f9b3 2000 	ldrsh.w	r2, [r3]
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	805a      	strh	r2, [r3, #2]
}
 8005578:	371c      	adds	r7, #28
 800557a:	46bd      	mov	sp, r7
 800557c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005580:	4770      	bx	lr
 8005582:	bf00      	nop
 8005584:	46000000 	.word	0x46000000

08005588 <control_input_task>:
uint8_t g_safety_toggle = ARM_SWITCH;
uint8_t launcher_safety_toggle = ARM_SWITCH;



void control_input_task(void *argument) {
 8005588:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800558c:	b088      	sub	sp, #32
 800558e:	af00      	add	r7, sp, #0
 8005590:	60f8      	str	r0, [r7, #12]
	TickType_t start_time;
	control_reset();
 8005592:	f000 f959 	bl	8005848 <control_reset>
	chassis_yaw_pid_init();
 8005596:	f000 fb47 	bl	8005c28 <chassis_yaw_pid_init>
	gimbal_ctrl_data.imu_mode = GIMBAL_MODE;
 800559a:	4b80      	ldr	r3, [pc, #512]	@ (800579c <control_input_task+0x214>)
 800559c:	2201      	movs	r2, #1
 800559e:	731a      	strb	r2, [r3, #12]
	aimbot_pid_init();
 80055a0:	f000 fee0 	bl	8006364 <aimbot_pid_init>
	dbus_remote_start();
 80055a4:	f7fb ffa0 	bl	80014e8 <dbus_remote_start>
	gear_speed.curr_gear = GEAR_DEFAULT;
 80055a8:	4b7d      	ldr	r3, [pc, #500]	@ (80057a0 <control_input_task+0x218>)
 80055aa:	2203      	movs	r2, #3
 80055ac:	701a      	strb	r2, [r3, #0]
	set_gear();
 80055ae:	f000 fabf 	bl	8005b30 <set_gear>
	g_safety_toggle = 1;
 80055b2:	4b7c      	ldr	r3, [pc, #496]	@ (80057a4 <control_input_task+0x21c>)
 80055b4:	2201      	movs	r2, #1
 80055b6:	701a      	strb	r2, [r3, #0]
	vTaskDelay(100);
 80055b8:	2064      	movs	r0, #100	@ 0x64
 80055ba:	f012 ff87 	bl	80184cc <vTaskDelay>
	uint8_t rc_check;
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 80055be:	e01a      	b.n	80055f6 <control_input_task+0x6e>
		uint8_t temp_msg;
		temp_msg = not_ok;
 80055c0:	2302      	movs	r3, #2
 80055c2:	74fb      	strb	r3, [r7, #19]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80055c4:	4b78      	ldr	r3, [pc, #480]	@ (80057a8 <control_input_task+0x220>)
 80055c6:	6818      	ldr	r0, [r3, #0]
 80055c8:	f107 0113 	add.w	r1, r7, #19
 80055cc:	2300      	movs	r3, #0
 80055ce:	2200      	movs	r2, #0
 80055d0:	f012 f892 	bl	80176f8 <xQueueGenericSend>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80055d4:	21c8      	movs	r1, #200	@ 0xc8
 80055d6:	2001      	movs	r0, #1
 80055d8:	f013 fd48 	bl	801906c <ulTaskNotifyTake>
 80055dc:	4603      	mov	r3, r0
 80055de:	76fb      	strb	r3, [r7, #27]
		HAL_UART_DMAStop(&DBUS_UART);
 80055e0:	4872      	ldr	r0, [pc, #456]	@ (80057ac <control_input_task+0x224>)
 80055e2:	f00d f889 	bl	80126f8 <HAL_UART_DMAStop>
		dbus_remote_start();
 80055e6:	f7fb ff7f 	bl	80014e8 <dbus_remote_start>
		if (rc_check){
 80055ea:	7efb      	ldrb	r3, [r7, #27]
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d002      	beq.n	80055f6 <control_input_task+0x6e>
			vTaskDelay(200);
 80055f0:	20c8      	movs	r0, #200	@ 0xc8
 80055f2:	f012 ff6b 	bl	80184cc <vTaskDelay>
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 80055f6:	4b6e      	ldr	r3, [pc, #440]	@ (80057b0 <control_input_task+0x228>)
 80055f8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80055fc:	4618      	mov	r0, r3
 80055fe:	f7fa ff91 	bl	8000524 <__aeabi_i2d>
 8005602:	4602      	mov	r2, r0
 8005604:	460b      	mov	r3, r1
 8005606:	4690      	mov	r8, r2
 8005608:	f023 4900 	bic.w	r9, r3, #2147483648	@ 0x80000000
 800560c:	f04f 0200 	mov.w	r2, #0
 8005610:	4b68      	ldr	r3, [pc, #416]	@ (80057b4 <control_input_task+0x22c>)
 8005612:	4640      	mov	r0, r8
 8005614:	4649      	mov	r1, r9
 8005616:	f7fb fa7f 	bl	8000b18 <__aeabi_dcmpgt>
 800561a:	4603      	mov	r3, r0
 800561c:	2b00      	cmp	r3, #0
 800561e:	d1cf      	bne.n	80055c0 <control_input_task+0x38>
 8005620:	4b63      	ldr	r3, [pc, #396]	@ (80057b0 <control_input_task+0x228>)
 8005622:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005626:	4618      	mov	r0, r3
 8005628:	f7fa ff7c 	bl	8000524 <__aeabi_i2d>
 800562c:	4602      	mov	r2, r0
 800562e:	460b      	mov	r3, r1
 8005630:	4692      	mov	sl, r2
 8005632:	f023 4b00 	bic.w	fp, r3, #2147483648	@ 0x80000000
 8005636:	f04f 0200 	mov.w	r2, #0
 800563a:	4b5e      	ldr	r3, [pc, #376]	@ (80057b4 <control_input_task+0x22c>)
 800563c:	4650      	mov	r0, sl
 800563e:	4659      	mov	r1, fp
 8005640:	f7fb fa6a 	bl	8000b18 <__aeabi_dcmpgt>
 8005644:	4603      	mov	r3, r0
 8005646:	2b00      	cmp	r3, #0
 8005648:	d1ba      	bne.n	80055c0 <control_input_task+0x38>
 800564a:	4b59      	ldr	r3, [pc, #356]	@ (80057b0 <control_input_task+0x228>)
 800564c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8005650:	4618      	mov	r0, r3
 8005652:	f7fa ff67 	bl	8000524 <__aeabi_i2d>
 8005656:	4602      	mov	r2, r0
 8005658:	460b      	mov	r3, r1
 800565a:	603a      	str	r2, [r7, #0]
 800565c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005660:	607b      	str	r3, [r7, #4]
 8005662:	f04f 0200 	mov.w	r2, #0
 8005666:	4b53      	ldr	r3, [pc, #332]	@ (80057b4 <control_input_task+0x22c>)
 8005668:	e9d7 0100 	ldrd	r0, r1, [r7]
 800566c:	f7fb fa54 	bl	8000b18 <__aeabi_dcmpgt>
 8005670:	4603      	mov	r3, r0
 8005672:	2b00      	cmp	r3, #0
 8005674:	d1a4      	bne.n	80055c0 <control_input_task+0x38>
 8005676:	4b4e      	ldr	r3, [pc, #312]	@ (80057b0 <control_input_task+0x228>)
 8005678:	f9b3 3000 	ldrsh.w	r3, [r3]
 800567c:	4618      	mov	r0, r3
 800567e:	f7fa ff51 	bl	8000524 <__aeabi_i2d>
 8005682:	4602      	mov	r2, r0
 8005684:	460b      	mov	r3, r1
 8005686:	4614      	mov	r4, r2
 8005688:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800568c:	f04f 0200 	mov.w	r2, #0
 8005690:	4b48      	ldr	r3, [pc, #288]	@ (80057b4 <control_input_task+0x22c>)
 8005692:	4620      	mov	r0, r4
 8005694:	4629      	mov	r1, r5
 8005696:	f7fb fa3f 	bl	8000b18 <__aeabi_dcmpgt>
 800569a:	4603      	mov	r3, r0
 800569c:	2b00      	cmp	r3, #0
 800569e:	d18f      	bne.n	80055c0 <control_input_task+0x38>
		}
	}
	g_safety_toggle = ARM_SWITCH;
 80056a0:	4b40      	ldr	r3, [pc, #256]	@ (80057a4 <control_input_task+0x21c>)
 80056a2:	2201      	movs	r2, #1
 80056a4:	701a      	strb	r2, [r3, #0]

	uint32_t last_song = 0;
 80056a6:	2300      	movs	r3, #0
 80056a8:	61fb      	str	r3, [r7, #28]
	while (1) {
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80056aa:	21c8      	movs	r1, #200	@ 0xc8
 80056ac:	2001      	movs	r0, #1
 80056ae:	f013 fcdd 	bl	801906c <ulTaskNotifyTake>
 80056b2:	4603      	mov	r3, r0
 80056b4:	76fb      	strb	r3, [r7, #27]
		if (rc_check) {
 80056b6:	7efb      	ldrb	r3, [r7, #27]
 80056b8:	2b00      	cmp	r3, #0
 80056ba:	d04c      	beq.n	8005756 <control_input_task+0x1ce>
			status_led(1, on_led);
 80056bc:	2100      	movs	r1, #0
 80056be:	2001      	movs	r0, #1
 80056c0:	f7fc fc7a 	bl	8001fb8 <status_led>
			start_time = xTaskGetTickCount();
 80056c4:	f013 f856 	bl	8018774 <xTaskGetTickCount>
 80056c8:	4603      	mov	r3, r0
 80056ca:	617b      	str	r3, [r7, #20]
			if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 80056cc:	4b38      	ldr	r3, [pc, #224]	@ (80057b0 <control_input_task+0x228>)
 80056ce:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80056d2:	2b01      	cmp	r3, #1
 80056d4:	d123      	bne.n	800571e <control_input_task+0x196>

				if ((g_remote_cmd.left_switch == ge_LSW_UNSAFE) && (HAL_GetTick() - last_song > 5000)){
 80056d6:	4b36      	ldr	r3, [pc, #216]	@ (80057b0 <control_input_task+0x228>)
 80056d8:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80056dc:	2b01      	cmp	r3, #1
 80056de:	d10d      	bne.n	80056fc <control_input_task+0x174>
 80056e0:	f005 fd2e 	bl	800b140 <HAL_GetTick>
 80056e4:	4602      	mov	r2, r0
 80056e6:	69fb      	ldr	r3, [r7, #28]
 80056e8:	1ad3      	subs	r3, r2, r3
 80056ea:	f241 3288 	movw	r2, #5000	@ 0x1388
 80056ee:	4293      	cmp	r3, r2
 80056f0:	d904      	bls.n	80056fc <control_input_task+0x174>
					uint8_t temp_msg;
					last_song = HAL_GetTick();
 80056f2:	f005 fd25 	bl	800b140 <HAL_GetTick>
 80056f6:	61f8      	str	r0, [r7, #28]
					temp_msg = song;
 80056f8:	2300      	movs	r3, #0
 80056fa:	76bb      	strb	r3, [r7, #26]
//					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
				}
				laser_on();
 80056fc:	f7fb ff98 	bl	8001630 <laser_on>
				control_mode_change(g_remote_cmd.side_dial);
 8005700:	4b2b      	ldr	r3, [pc, #172]	@ (80057b0 <control_input_task+0x228>)
 8005702:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8005706:	4618      	mov	r0, r3
 8005708:	f000 f8d4 	bl	80058b4 <control_mode_change>
				g_safety_toggle = 0;
 800570c:	4b25      	ldr	r3, [pc, #148]	@ (80057a4 <control_input_task+0x21c>)
 800570e:	2200      	movs	r2, #0
 8005710:	701a      	strb	r2, [r3, #0]
				launcher_safety_toggle = 0;
 8005712:	4b29      	ldr	r3, [pc, #164]	@ (80057b8 <control_input_task+0x230>)
 8005714:	2200      	movs	r2, #0
 8005716:	701a      	strb	r2, [r3, #0]
				control_reset();
 8005718:	f000 f896 	bl	8005848 <control_reset>
 800571c:	e037      	b.n	800578e <control_input_task+0x206>
			} else {

				switch (control_mode) {
 800571e:	4b27      	ldr	r3, [pc, #156]	@ (80057bc <control_input_task+0x234>)
 8005720:	781b      	ldrb	r3, [r3, #0]
 8005722:	2b01      	cmp	r3, #1
 8005724:	d002      	beq.n	800572c <control_input_task+0x1a4>
 8005726:	2b02      	cmp	r3, #2
 8005728:	d008      	beq.n	800573c <control_input_task+0x1b4>
					break;
					;
#endif

				default:
					break;
 800572a:	e00f      	b.n	800574c <control_input_task+0x1c4>
					keyboard_gear_shifter(&gear_speed);
 800572c:	481c      	ldr	r0, [pc, #112]	@ (80057a0 <control_input_task+0x218>)
 800572e:	f000 fa9f 	bl	8005c70 <keyboard_gear_shifter>
					set_gear();
 8005732:	f000 f9fd 	bl	8005b30 <set_gear>
					keyboard_control_input();
 8005736:	f000 fa91 	bl	8005c5c <keyboard_control_input>
					break;
 800573a:	e007      	b.n	800574c <control_input_task+0x1c4>
					remote_gear_shifter(&gear_speed);
 800573c:	4818      	ldr	r0, [pc, #96]	@ (80057a0 <control_input_task+0x218>)
 800573e:	f000 fc75 	bl	800602c <remote_gear_shifter>
					set_gear();
 8005742:	f000 f9f5 	bl	8005b30 <set_gear>
					remote_control_input();
 8005746:	f000 fc67 	bl	8006018 <remote_control_input>
					break;
 800574a:	bf00      	nop

				}
				status_led(1, off_led);
 800574c:	2101      	movs	r1, #1
 800574e:	2001      	movs	r0, #1
 8005750:	f7fc fc32 	bl	8001fb8 <status_led>
 8005754:	e01b      	b.n	800578e <control_input_task+0x206>
			}
		} else {
			//restart remote uart
			if (HAL_GetTick() - g_remote_cmd.last_time > 100) {
 8005756:	f005 fcf3 	bl	800b140 <HAL_GetTick>
 800575a:	4602      	mov	r2, r0
 800575c:	4b14      	ldr	r3, [pc, #80]	@ (80057b0 <control_input_task+0x228>)
 800575e:	6a1b      	ldr	r3, [r3, #32]
 8005760:	1ad3      	subs	r3, r2, r3
 8005762:	2b64      	cmp	r3, #100	@ 0x64
 8005764:	d909      	bls.n	800577a <control_input_task+0x1f2>
				HAL_UART_DMAStop(&DBUS_UART);
 8005766:	4811      	ldr	r0, [pc, #68]	@ (80057ac <control_input_task+0x224>)
 8005768:	f00c ffc6 	bl	80126f8 <HAL_UART_DMAStop>
				dbus_remote_start();
 800576c:	f7fb febc 	bl	80014e8 <dbus_remote_start>
				g_remote_cmd.last_time = HAL_GetTick();
 8005770:	f005 fce6 	bl	800b140 <HAL_GetTick>
 8005774:	4603      	mov	r3, r0
 8005776:	4a0e      	ldr	r2, [pc, #56]	@ (80057b0 <control_input_task+0x228>)
 8005778:	6213      	str	r3, [r2, #32]
			}
			kill_can();
 800577a:	f004 fbb7 	bl	8009eec <kill_can>
			control_reset();
 800577e:	f000 f863 	bl	8005848 <control_reset>
			launcher_safety_toggle = LAUNCHER_SAFETY;
 8005782:	4b0d      	ldr	r3, [pc, #52]	@ (80057b8 <control_input_task+0x230>)
 8005784:	2200      	movs	r2, #0
 8005786:	701a      	strb	r2, [r3, #0]
			g_safety_toggle = 1;
 8005788:	4b06      	ldr	r3, [pc, #24]	@ (80057a4 <control_input_task+0x21c>)
 800578a:	2201      	movs	r2, #1
 800578c:	701a      	strb	r2, [r3, #0]

		}
		vTaskDelayUntil(&start_time, CONTROL_DELAY);
 800578e:	f107 0314 	add.w	r3, r7, #20
 8005792:	2102      	movs	r1, #2
 8005794:	4618      	mov	r0, r3
 8005796:	f012 fe19 	bl	80183cc <vTaskDelayUntil>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 800579a:	e786      	b.n	80056aa <control_input_task+0x122>
 800579c:	200034e8 	.word	0x200034e8
 80057a0:	2000352c 	.word	0x2000352c
 80057a4:	20000009 	.word	0x20000009
 80057a8:	200037d4 	.word	0x200037d4
 80057ac:	20001c2c 	.word	0x20001c2c
 80057b0:	20000808 	.word	0x20000808
 80057b4:	40490000 	.word	0x40490000
 80057b8:	2000000a 	.word	0x2000000a
 80057bc:	20000008 	.word	0x20000008

080057c0 <chassis_center_yaw>:
	}
	osThreadTerminate(NULL);
}

float chassis_center_yaw() {
 80057c0:	b480      	push	{r7}
 80057c2:	af00      	add	r7, sp, #0

}
 80057c4:	bf00      	nop
 80057c6:	eeb0 0a67 	vmov.f32	s0, s15
 80057ca:	46bd      	mov	sp, r7
 80057cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d0:	4770      	bx	lr
	...

080057d4 <chassis_set_ctrl>:

void chassis_set_ctrl(float forward, float horizontal, float yaw){
 80057d4:	b480      	push	{r7}
 80057d6:	b085      	sub	sp, #20
 80057d8:	af00      	add	r7, sp, #0
 80057da:	ed87 0a03 	vstr	s0, [r7, #12]
 80057de:	edc7 0a02 	vstr	s1, [r7, #8]
 80057e2:	ed87 1a01 	vstr	s2, [r7, #4]
	chassis_ctrl_data.enabled = 1;
 80057e6:	4b0b      	ldr	r3, [pc, #44]	@ (8005814 <chassis_set_ctrl+0x40>)
 80057e8:	2201      	movs	r2, #1
 80057ea:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.horizontal = horizontal;
 80057ec:	4a09      	ldr	r2, [pc, #36]	@ (8005814 <chassis_set_ctrl+0x40>)
 80057ee:	68bb      	ldr	r3, [r7, #8]
 80057f0:	6053      	str	r3, [r2, #4]
	chassis_ctrl_data.forward = forward;
 80057f2:	4a08      	ldr	r2, [pc, #32]	@ (8005814 <chassis_set_ctrl+0x40>)
 80057f4:	68fb      	ldr	r3, [r7, #12]
 80057f6:	6013      	str	r3, [r2, #0]
	chassis_ctrl_data.yaw = -yaw;
 80057f8:	edd7 7a01 	vldr	s15, [r7, #4]
 80057fc:	eef1 7a67 	vneg.f32	s15, s15
 8005800:	4b04      	ldr	r3, [pc, #16]	@ (8005814 <chassis_set_ctrl+0x40>)
 8005802:	edc3 7a02 	vstr	s15, [r3, #8]
}
 8005806:	bf00      	nop
 8005808:	3714      	adds	r7, #20
 800580a:	46bd      	mov	sp, r7
 800580c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005810:	4770      	bx	lr
 8005812:	bf00      	nop
 8005814:	200034c8 	.word	0x200034c8

08005818 <chassis_kill_ctrl>:

void chassis_kill_ctrl(){
 8005818:	b480      	push	{r7}
 800581a:	af00      	add	r7, sp, #0
	chassis_ctrl_data.enabled = 0;
 800581c:	4b09      	ldr	r3, [pc, #36]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 800581e:	2200      	movs	r2, #0
 8005820:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.forward = 0;
 8005822:	4b08      	ldr	r3, [pc, #32]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 8005824:	f04f 0200 	mov.w	r2, #0
 8005828:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 800582a:	4b06      	ldr	r3, [pc, #24]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 800582c:	f04f 0200 	mov.w	r2, #0
 8005830:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005832:	4b04      	ldr	r3, [pc, #16]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 8005834:	f04f 0200 	mov.w	r2, #0
 8005838:	609a      	str	r2, [r3, #8]
}
 800583a:	bf00      	nop
 800583c:	46bd      	mov	sp, r7
 800583e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005842:	4770      	bx	lr
 8005844:	200034c8 	.word	0x200034c8

08005848 <control_reset>:
		}
	}
	return 0;
}

void control_reset() {
 8005848:	b580      	push	{r7, lr}
 800584a:	af00      	add	r7, sp, #0
	chassis_ctrl_data.forward = 0;
 800584c:	4b14      	ldr	r3, [pc, #80]	@ (80058a0 <control_reset+0x58>)
 800584e:	f04f 0200 	mov.w	r2, #0
 8005852:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005854:	4b12      	ldr	r3, [pc, #72]	@ (80058a0 <control_reset+0x58>)
 8005856:	f04f 0200 	mov.w	r2, #0
 800585a:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 800585c:	4b10      	ldr	r3, [pc, #64]	@ (80058a0 <control_reset+0x58>)
 800585e:	f04f 0200 	mov.w	r2, #0
 8005862:	609a      	str	r2, [r3, #8]
	chassis_ctrl_data.enabled = 0;
 8005864:	4b0e      	ldr	r3, [pc, #56]	@ (80058a0 <control_reset+0x58>)
 8005866:	2200      	movs	r2, #0
 8005868:	751a      	strb	r2, [r3, #20]
	gimbal_ctrl_data.pitch = 0;
 800586a:	4b0e      	ldr	r3, [pc, #56]	@ (80058a4 <control_reset+0x5c>)
 800586c:	f04f 0200 	mov.w	r2, #0
 8005870:	601a      	str	r2, [r3, #0]
	gimbal_ctrl_data.yaw = imu_heading.yaw;
 8005872:	4b0d      	ldr	r3, [pc, #52]	@ (80058a8 <control_reset+0x60>)
 8005874:	689b      	ldr	r3, [r3, #8]
 8005876:	4a0b      	ldr	r2, [pc, #44]	@ (80058a4 <control_reset+0x5c>)
 8005878:	6053      	str	r3, [r2, #4]
	gimbal_ctrl_data.enabled = 0;
 800587a:	4b0a      	ldr	r3, [pc, #40]	@ (80058a4 <control_reset+0x5c>)
 800587c:	2200      	movs	r2, #0
 800587e:	735a      	strb	r2, [r3, #13]
	launcher_ctrl_data.firing = 0;
 8005880:	4b0a      	ldr	r3, [pc, #40]	@ (80058ac <control_reset+0x64>)
 8005882:	2200      	movs	r2, #0
 8005884:	805a      	strh	r2, [r3, #2]
	launcher_ctrl_data.projectile_speed = 0;
 8005886:	4b09      	ldr	r3, [pc, #36]	@ (80058ac <control_reset+0x64>)
 8005888:	2200      	movs	r2, #0
 800588a:	801a      	strh	r2, [r3, #0]
	launcher_ctrl_data.enabled = 0;
 800588c:	4b07      	ldr	r3, [pc, #28]	@ (80058ac <control_reset+0x64>)
 800588e:	2200      	movs	r2, #0
 8005890:	715a      	strb	r2, [r3, #5]
	g_spinspin_mode = 0;
 8005892:	4b07      	ldr	r3, [pc, #28]	@ (80058b0 <control_reset+0x68>)
 8005894:	2200      	movs	r2, #0
 8005896:	601a      	str	r2, [r3, #0]
	laser_off();
 8005898:	f7fb fed6 	bl	8001648 <laser_off>
}
 800589c:	bf00      	nop
 800589e:	bd80      	pop	{r7, pc}
 80058a0:	200034c8 	.word	0x200034c8
 80058a4:	200034e8 	.word	0x200034e8
 80058a8:	20003700 	.word	0x20003700
 80058ac:	200034e0 	.word	0x200034e0
 80058b0:	2000353c 	.word	0x2000353c

080058b4 <control_mode_change>:

void control_mode_change(int16_t left_dial_input) {
 80058b4:	b580      	push	{r7, lr}
 80058b6:	b084      	sub	sp, #16
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	4603      	mov	r3, r0
 80058bc:	80fb      	strh	r3, [r7, #6]
//assume already in shutdown mode here
	static uint32_t last_trig_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 80058be:	4b6f      	ldr	r3, [pc, #444]	@ (8005a7c <control_mode_change+0x1c8>)
 80058c0:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80058c4:	2b03      	cmp	r3, #3
 80058c6:	d133      	bne.n	8005930 <control_mode_change+0x7c>
		if (left_dial_input > 330 || left_dial_input < -330) {
 80058c8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80058cc:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 80058d0:	dc04      	bgt.n	80058dc <control_mode_change+0x28>
 80058d2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80058d6:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80058da:	da23      	bge.n	8005924 <control_mode_change+0x70>
			if (HAL_GetTick() - last_trig_time > 1000) {
 80058dc:	f005 fc30 	bl	800b140 <HAL_GetTick>
 80058e0:	4602      	mov	r2, r0
 80058e2:	4b67      	ldr	r3, [pc, #412]	@ (8005a80 <control_mode_change+0x1cc>)
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	1ad3      	subs	r3, r2, r3
 80058e8:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80058ec:	f240 80c2 	bls.w	8005a74 <control_mode_change+0x1c0>
				switch (control_mode) {
 80058f0:	4b64      	ldr	r3, [pc, #400]	@ (8005a84 <control_mode_change+0x1d0>)
 80058f2:	781b      	ldrb	r3, [r3, #0]
 80058f4:	3b01      	subs	r3, #1
 80058f6:	2b01      	cmp	r3, #1
 80058f8:	d80d      	bhi.n	8005916 <control_mode_change+0x62>
				case KEYBOARD_CTRL_MODE:
				case REMOTE_CTRL_MODE:
					control_mode = SBC_CTRL_MODE;
 80058fa:	4b62      	ldr	r3, [pc, #392]	@ (8005a84 <control_mode_change+0x1d0>)
 80058fc:	2203      	movs	r2, #3
 80058fe:	701a      	strb	r2, [r3, #0]
					temp_msg = control_sbc;
 8005900:	2305      	movs	r3, #5
 8005902:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005904:	4b60      	ldr	r3, [pc, #384]	@ (8005a88 <control_mode_change+0x1d4>)
 8005906:	6818      	ldr	r0, [r3, #0]
 8005908:	f107 010f 	add.w	r1, r7, #15
 800590c:	2300      	movs	r3, #0
 800590e:	2200      	movs	r2, #0
 8005910:	f011 fef2 	bl	80176f8 <xQueueGenericSend>
					break;
 8005914:	e005      	b.n	8005922 <control_mode_change+0x6e>
				default:
					last_trig_time = HAL_GetTick();
 8005916:	f005 fc13 	bl	800b140 <HAL_GetTick>
 800591a:	4603      	mov	r3, r0
 800591c:	4a58      	ldr	r2, [pc, #352]	@ (8005a80 <control_mode_change+0x1cc>)
 800591e:	6013      	str	r3, [r2, #0]
					break;
 8005920:	bf00      	nop
			if (HAL_GetTick() - last_trig_time > 1000) {
 8005922:	e0a7      	b.n	8005a74 <control_mode_change+0x1c0>
				}
			}
		} else {
			last_trig_time = HAL_GetTick();
 8005924:	f005 fc0c 	bl	800b140 <HAL_GetTick>
 8005928:	4603      	mov	r3, r0
 800592a:	4a55      	ldr	r2, [pc, #340]	@ (8005a80 <control_mode_change+0x1cc>)
 800592c:	6013      	str	r3, [r2, #0]
			break;
		default:
			break;
		}
	}
}
 800592e:	e0a1      	b.n	8005a74 <control_mode_change+0x1c0>
		switch (control_mode) {
 8005930:	4b54      	ldr	r3, [pc, #336]	@ (8005a84 <control_mode_change+0x1d0>)
 8005932:	781b      	ldrb	r3, [r3, #0]
 8005934:	2b03      	cmp	r3, #3
 8005936:	d052      	beq.n	80059de <control_mode_change+0x12a>
 8005938:	2b03      	cmp	r3, #3
 800593a:	f300 8094 	bgt.w	8005a66 <control_mode_change+0x1b2>
 800593e:	2b01      	cmp	r3, #1
 8005940:	d002      	beq.n	8005948 <control_mode_change+0x94>
 8005942:	2b02      	cmp	r3, #2
 8005944:	d026      	beq.n	8005994 <control_mode_change+0xe0>
			break;
 8005946:	e08e      	b.n	8005a66 <control_mode_change+0x1b2>
			if (left_dial_input < -330) {
 8005948:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800594c:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 8005950:	da1a      	bge.n	8005988 <control_mode_change+0xd4>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005952:	f005 fbf5 	bl	800b140 <HAL_GetTick>
 8005956:	4602      	mov	r2, r0
 8005958:	4b49      	ldr	r3, [pc, #292]	@ (8005a80 <control_mode_change+0x1cc>)
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	1ad3      	subs	r3, r2, r3
 800595e:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005962:	f240 8082 	bls.w	8005a6a <control_mode_change+0x1b6>
					control_mode = REMOTE_CTRL_MODE;
 8005966:	4b47      	ldr	r3, [pc, #284]	@ (8005a84 <control_mode_change+0x1d0>)
 8005968:	2202      	movs	r2, #2
 800596a:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 800596c:	2304      	movs	r3, #4
 800596e:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005970:	4b45      	ldr	r3, [pc, #276]	@ (8005a88 <control_mode_change+0x1d4>)
 8005972:	6818      	ldr	r0, [r3, #0]
 8005974:	f107 010f 	add.w	r1, r7, #15
 8005978:	2300      	movs	r3, #0
 800597a:	2200      	movs	r2, #0
 800597c:	f011 febc 	bl	80176f8 <xQueueGenericSend>
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005980:	4b42      	ldr	r3, [pc, #264]	@ (8005a8c <control_mode_change+0x1d8>)
 8005982:	2200      	movs	r2, #0
 8005984:	701a      	strb	r2, [r3, #0]
			break;
 8005986:	e070      	b.n	8005a6a <control_mode_change+0x1b6>
				last_trig_time = HAL_GetTick();
 8005988:	f005 fbda 	bl	800b140 <HAL_GetTick>
 800598c:	4603      	mov	r3, r0
 800598e:	4a3c      	ldr	r2, [pc, #240]	@ (8005a80 <control_mode_change+0x1cc>)
 8005990:	6013      	str	r3, [r2, #0]
			break;
 8005992:	e06a      	b.n	8005a6a <control_mode_change+0x1b6>
			if (left_dial_input > 330) {
 8005994:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005998:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 800599c:	dd19      	ble.n	80059d2 <control_mode_change+0x11e>
				if (HAL_GetTick() - last_trig_time > 1000) {
 800599e:	f005 fbcf 	bl	800b140 <HAL_GetTick>
 80059a2:	4602      	mov	r2, r0
 80059a4:	4b36      	ldr	r3, [pc, #216]	@ (8005a80 <control_mode_change+0x1cc>)
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	1ad3      	subs	r3, r2, r3
 80059aa:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80059ae:	d95e      	bls.n	8005a6e <control_mode_change+0x1ba>
					control_mode = KEYBOARD_CTRL_MODE;
 80059b0:	4b34      	ldr	r3, [pc, #208]	@ (8005a84 <control_mode_change+0x1d0>)
 80059b2:	2201      	movs	r2, #1
 80059b4:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 80059b6:	2303      	movs	r3, #3
 80059b8:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 80059ba:	4b34      	ldr	r3, [pc, #208]	@ (8005a8c <control_mode_change+0x1d8>)
 80059bc:	2200      	movs	r2, #0
 80059be:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80059c0:	4b31      	ldr	r3, [pc, #196]	@ (8005a88 <control_mode_change+0x1d4>)
 80059c2:	6818      	ldr	r0, [r3, #0]
 80059c4:	f107 010f 	add.w	r1, r7, #15
 80059c8:	2300      	movs	r3, #0
 80059ca:	2200      	movs	r2, #0
 80059cc:	f011 fe94 	bl	80176f8 <xQueueGenericSend>
			break;
 80059d0:	e04d      	b.n	8005a6e <control_mode_change+0x1ba>
				last_trig_time = HAL_GetTick();
 80059d2:	f005 fbb5 	bl	800b140 <HAL_GetTick>
 80059d6:	4603      	mov	r3, r0
 80059d8:	4a29      	ldr	r2, [pc, #164]	@ (8005a80 <control_mode_change+0x1cc>)
 80059da:	6013      	str	r3, [r2, #0]
			break;
 80059dc:	e047      	b.n	8005a6e <control_mode_change+0x1ba>
			if (left_dial_input < -330) {
 80059de:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80059e2:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80059e6:	da19      	bge.n	8005a1c <control_mode_change+0x168>
				if (HAL_GetTick() - last_trig_time > 1000) {
 80059e8:	f005 fbaa 	bl	800b140 <HAL_GetTick>
 80059ec:	4602      	mov	r2, r0
 80059ee:	4b24      	ldr	r3, [pc, #144]	@ (8005a80 <control_mode_change+0x1cc>)
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	1ad3      	subs	r3, r2, r3
 80059f4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80059f8:	d93b      	bls.n	8005a72 <control_mode_change+0x1be>
					control_mode = REMOTE_CTRL_MODE;
 80059fa:	4b22      	ldr	r3, [pc, #136]	@ (8005a84 <control_mode_change+0x1d0>)
 80059fc:	2202      	movs	r2, #2
 80059fe:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005a00:	2304      	movs	r3, #4
 8005a02:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005a04:	4b21      	ldr	r3, [pc, #132]	@ (8005a8c <control_mode_change+0x1d8>)
 8005a06:	2200      	movs	r2, #0
 8005a08:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005a0a:	4b1f      	ldr	r3, [pc, #124]	@ (8005a88 <control_mode_change+0x1d4>)
 8005a0c:	6818      	ldr	r0, [r3, #0]
 8005a0e:	f107 010f 	add.w	r1, r7, #15
 8005a12:	2300      	movs	r3, #0
 8005a14:	2200      	movs	r2, #0
 8005a16:	f011 fe6f 	bl	80176f8 <xQueueGenericSend>
			break;
 8005a1a:	e02a      	b.n	8005a72 <control_mode_change+0x1be>
			} else if (left_dial_input > 330) {
 8005a1c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005a20:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8005a24:	dd19      	ble.n	8005a5a <control_mode_change+0x1a6>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005a26:	f005 fb8b 	bl	800b140 <HAL_GetTick>
 8005a2a:	4602      	mov	r2, r0
 8005a2c:	4b14      	ldr	r3, [pc, #80]	@ (8005a80 <control_mode_change+0x1cc>)
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	1ad3      	subs	r3, r2, r3
 8005a32:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005a36:	d91c      	bls.n	8005a72 <control_mode_change+0x1be>
					control_mode = KEYBOARD_CTRL_MODE;
 8005a38:	4b12      	ldr	r3, [pc, #72]	@ (8005a84 <control_mode_change+0x1d0>)
 8005a3a:	2201      	movs	r2, #1
 8005a3c:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005a3e:	2303      	movs	r3, #3
 8005a40:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005a42:	4b12      	ldr	r3, [pc, #72]	@ (8005a8c <control_mode_change+0x1d8>)
 8005a44:	2200      	movs	r2, #0
 8005a46:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005a48:	4b0f      	ldr	r3, [pc, #60]	@ (8005a88 <control_mode_change+0x1d4>)
 8005a4a:	6818      	ldr	r0, [r3, #0]
 8005a4c:	f107 010f 	add.w	r1, r7, #15
 8005a50:	2300      	movs	r3, #0
 8005a52:	2200      	movs	r2, #0
 8005a54:	f011 fe50 	bl	80176f8 <xQueueGenericSend>
			break;
 8005a58:	e00b      	b.n	8005a72 <control_mode_change+0x1be>
				last_trig_time = HAL_GetTick();
 8005a5a:	f005 fb71 	bl	800b140 <HAL_GetTick>
 8005a5e:	4603      	mov	r3, r0
 8005a60:	4a07      	ldr	r2, [pc, #28]	@ (8005a80 <control_mode_change+0x1cc>)
 8005a62:	6013      	str	r3, [r2, #0]
			break;
 8005a64:	e005      	b.n	8005a72 <control_mode_change+0x1be>
			break;
 8005a66:	bf00      	nop
 8005a68:	e004      	b.n	8005a74 <control_mode_change+0x1c0>
			break;
 8005a6a:	bf00      	nop
 8005a6c:	e002      	b.n	8005a74 <control_mode_change+0x1c0>
			break;
 8005a6e:	bf00      	nop
 8005a70:	e000      	b.n	8005a74 <control_mode_change+0x1c0>
			break;
 8005a72:	bf00      	nop
}
 8005a74:	bf00      	nop
 8005a76:	3710      	adds	r7, #16
 8005a78:	46bd      	mov	sp, r7
 8005a7a:	bd80      	pop	{r7, pc}
 8005a7c:	20000808 	.word	0x20000808
 8005a80:	20003540 	.word	0x20003540
 8005a84:	20000008 	.word	0x20000008
 8005a88:	200037d4 	.word	0x200037d4
 8005a8c:	2000000a 	.word	0x2000000a

08005a90 <gimbal_turn_ang>:

//ADDs angle to gimbal ctrl
void gimbal_turn_ang(float pit_radians, float yaw_radians) {
 8005a90:	b480      	push	{r7}
 8005a92:	b085      	sub	sp, #20
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	ed87 0a01 	vstr	s0, [r7, #4]
 8005a9a:	edc7 0a00 	vstr	s1, [r7]
//		yaw_radians -= 2 * PI;
//	}
//	while (yaw_radians < -PI) {
//		yaw_radians += 2 * PI;
//	}
	float temp_yaw = gimbal_ctrl_data.yaw + yaw_radians;
 8005a9e:	4b20      	ldr	r3, [pc, #128]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005aa0:	edd3 7a01 	vldr	s15, [r3, #4]
 8005aa4:	ed97 7a00 	vldr	s14, [r7]
 8005aa8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005aac:	edc7 7a03 	vstr	s15, [r7, #12]
	temp_yaw = (temp_yaw > PI) ? (temp_yaw - 2 * PI) : (temp_yaw < -PI) ? (temp_yaw + 2* PI) : temp_yaw;
 8005ab0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ab4:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8005b24 <gimbal_turn_ang+0x94>
 8005ab8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ac0:	dd06      	ble.n	8005ad0 <gimbal_turn_ang+0x40>
 8005ac2:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ac6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8005b28 <gimbal_turn_ang+0x98>
 8005aca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005ace:	e011      	b.n	8005af4 <gimbal_turn_ang+0x64>
 8005ad0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ad4:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 8005b2c <gimbal_turn_ang+0x9c>
 8005ad8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005adc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ae0:	d506      	bpl.n	8005af0 <gimbal_turn_ang+0x60>
 8005ae2:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ae6:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8005b28 <gimbal_turn_ang+0x98>
 8005aea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005aee:	e001      	b.n	8005af4 <gimbal_turn_ang+0x64>
 8005af0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005af4:	edc7 7a03 	vstr	s15, [r7, #12]
	gimbal_ctrl_data.pitch += pit_radians;
 8005af8:	4b09      	ldr	r3, [pc, #36]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005afa:	ed93 7a00 	vldr	s14, [r3]
 8005afe:	edd7 7a01 	vldr	s15, [r7, #4]
 8005b02:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005b06:	4b06      	ldr	r3, [pc, #24]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005b08:	edc3 7a00 	vstr	s15, [r3]
	gimbal_ctrl_data.yaw = temp_yaw;
 8005b0c:	4a04      	ldr	r2, [pc, #16]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	6053      	str	r3, [r2, #4]
}
 8005b12:	bf00      	nop
 8005b14:	3714      	adds	r7, #20
 8005b16:	46bd      	mov	sp, r7
 8005b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b1c:	4770      	bx	lr
 8005b1e:	bf00      	nop
 8005b20:	200034e8 	.word	0x200034e8
 8005b24:	40490fdb 	.word	0x40490fdb
 8005b28:	40c90fdb 	.word	0x40c90fdb
 8005b2c:	c0490fdb 	.word	0xc0490fdb

08005b30 <set_gear>:
	}
	gimbal_ctrl_data.pitch = pit_radians;
	gimbal_ctrl_data.yaw = yaw_radians;
}

void set_gear() {
 8005b30:	b480      	push	{r7}
 8005b32:	af00      	add	r7, sp, #0
	switch (gear_speed.curr_gear) {
 8005b34:	4b34      	ldr	r3, [pc, #208]	@ (8005c08 <set_gear+0xd8>)
 8005b36:	781b      	ldrb	r3, [r3, #0]
 8005b38:	3b01      	subs	r3, #1
 8005b3a:	2b05      	cmp	r3, #5
 8005b3c:	d852      	bhi.n	8005be4 <set_gear+0xb4>
 8005b3e:	a201      	add	r2, pc, #4	@ (adr r2, 8005b44 <set_gear+0x14>)
 8005b40:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b44:	08005b5d 	.word	0x08005b5d
 8005b48:	08005b73 	.word	0x08005b73
 8005b4c:	08005b89 	.word	0x08005b89
 8005b50:	08005ba3 	.word	0x08005ba3
 8005b54:	08005bb7 	.word	0x08005bb7
 8005b58:	08005bd1 	.word	0x08005bd1
	case 1:
		gear_speed.spin_mult = GEAR1_YAW_MULT;
 8005b5c:	4b2a      	ldr	r3, [pc, #168]	@ (8005c08 <set_gear+0xd8>)
 8005b5e:	4a2b      	ldr	r2, [pc, #172]	@ (8005c0c <set_gear+0xdc>)
 8005b60:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR1_SPEED_MULT;
 8005b62:	4b29      	ldr	r3, [pc, #164]	@ (8005c08 <set_gear+0xd8>)
 8005b64:	4a29      	ldr	r2, [pc, #164]	@ (8005c0c <set_gear+0xdc>)
 8005b66:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR1_ACCEL_MULT;
 8005b68:	4b27      	ldr	r3, [pc, #156]	@ (8005c08 <set_gear+0xd8>)
 8005b6a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b6e:	60da      	str	r2, [r3, #12]
		break;
 8005b70:	e045      	b.n	8005bfe <set_gear+0xce>
	case 2:
		gear_speed.spin_mult = GEAR2_YAW_MULT;
 8005b72:	4b25      	ldr	r3, [pc, #148]	@ (8005c08 <set_gear+0xd8>)
 8005b74:	4a26      	ldr	r2, [pc, #152]	@ (8005c10 <set_gear+0xe0>)
 8005b76:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR2_SPEED_MULT;
 8005b78:	4b23      	ldr	r3, [pc, #140]	@ (8005c08 <set_gear+0xd8>)
 8005b7a:	4a25      	ldr	r2, [pc, #148]	@ (8005c10 <set_gear+0xe0>)
 8005b7c:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR2_ACCEL_MULT;
 8005b7e:	4b22      	ldr	r3, [pc, #136]	@ (8005c08 <set_gear+0xd8>)
 8005b80:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b84:	60da      	str	r2, [r3, #12]
		break;
 8005b86:	e03a      	b.n	8005bfe <set_gear+0xce>
	case 3:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005b88:	4b1f      	ldr	r3, [pc, #124]	@ (8005c08 <set_gear+0xd8>)
 8005b8a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b8e:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005b90:	4b1d      	ldr	r3, [pc, #116]	@ (8005c08 <set_gear+0xd8>)
 8005b92:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b96:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005b98:	4b1b      	ldr	r3, [pc, #108]	@ (8005c08 <set_gear+0xd8>)
 8005b9a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b9e:	60da      	str	r2, [r3, #12]
		break;
 8005ba0:	e02d      	b.n	8005bfe <set_gear+0xce>
	case 4:
		gear_speed.spin_mult = GEAR4_YAW_MULT;
 8005ba2:	4b19      	ldr	r3, [pc, #100]	@ (8005c08 <set_gear+0xd8>)
 8005ba4:	4a1b      	ldr	r2, [pc, #108]	@ (8005c14 <set_gear+0xe4>)
 8005ba6:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR4_SPEED_MULT;
 8005ba8:	4b17      	ldr	r3, [pc, #92]	@ (8005c08 <set_gear+0xd8>)
 8005baa:	4a1b      	ldr	r2, [pc, #108]	@ (8005c18 <set_gear+0xe8>)
 8005bac:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR4_ACCEL_MULT;
 8005bae:	4b16      	ldr	r3, [pc, #88]	@ (8005c08 <set_gear+0xd8>)
 8005bb0:	4a18      	ldr	r2, [pc, #96]	@ (8005c14 <set_gear+0xe4>)
 8005bb2:	60da      	str	r2, [r3, #12]
		break;
 8005bb4:	e023      	b.n	8005bfe <set_gear+0xce>
	case 5:
		gear_speed.spin_mult = GEAR5_YAW_MULT;
 8005bb6:	4b14      	ldr	r3, [pc, #80]	@ (8005c08 <set_gear+0xd8>)
 8005bb8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8005bbc:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR5_SPEED_MULT;
 8005bbe:	4b12      	ldr	r3, [pc, #72]	@ (8005c08 <set_gear+0xd8>)
 8005bc0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8005bc4:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR5_ACCEL_MULT;
 8005bc6:	4b10      	ldr	r3, [pc, #64]	@ (8005c08 <set_gear+0xd8>)
 8005bc8:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8005bcc:	60da      	str	r2, [r3, #12]
		break;
 8005bce:	e016      	b.n	8005bfe <set_gear+0xce>
	case 6:
		gear_speed.spin_mult = GEAR6_YAW_MULT;
 8005bd0:	4b0d      	ldr	r3, [pc, #52]	@ (8005c08 <set_gear+0xd8>)
 8005bd2:	4a12      	ldr	r2, [pc, #72]	@ (8005c1c <set_gear+0xec>)
 8005bd4:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR6_SPEED_MULT;
 8005bd6:	4b0c      	ldr	r3, [pc, #48]	@ (8005c08 <set_gear+0xd8>)
 8005bd8:	4a11      	ldr	r2, [pc, #68]	@ (8005c20 <set_gear+0xf0>)
 8005bda:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR6_ACCEL_MULT;
 8005bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8005c08 <set_gear+0xd8>)
 8005bde:	4a11      	ldr	r2, [pc, #68]	@ (8005c24 <set_gear+0xf4>)
 8005be0:	60da      	str	r2, [r3, #12]
		break;
 8005be2:	e00c      	b.n	8005bfe <set_gear+0xce>
	default:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005be4:	4b08      	ldr	r3, [pc, #32]	@ (8005c08 <set_gear+0xd8>)
 8005be6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bea:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005bec:	4b06      	ldr	r3, [pc, #24]	@ (8005c08 <set_gear+0xd8>)
 8005bee:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bf2:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005bf4:	4b04      	ldr	r3, [pc, #16]	@ (8005c08 <set_gear+0xd8>)
 8005bf6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bfa:	60da      	str	r2, [r3, #12]
		break;
 8005bfc:	bf00      	nop
	}

}
 8005bfe:	bf00      	nop
 8005c00:	46bd      	mov	sp, r7
 8005c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c06:	4770      	bx	lr
 8005c08:	2000352c 	.word	0x2000352c
 8005c0c:	3e99999a 	.word	0x3e99999a
 8005c10:	3f19999a 	.word	0x3f19999a
 8005c14:	3f99999a 	.word	0x3f99999a
 8005c18:	3fb33333 	.word	0x3fb33333
 8005c1c:	40400000 	.word	0x40400000
 8005c20:	40a00000 	.word	0x40a00000
 8005c24:	41200000 	.word	0x41200000

08005c28 <chassis_yaw_pid_init>:

void chassis_yaw_pid_init() {
 8005c28:	b480      	push	{r7}
 8005c2a:	af00      	add	r7, sp, #0
	yaw_pid_data.kp = CHASSIS_YAW_KP;
 8005c2c:	4b09      	ldr	r3, [pc, #36]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c2e:	4a0a      	ldr	r2, [pc, #40]	@ (8005c58 <chassis_yaw_pid_init+0x30>)
 8005c30:	601a      	str	r2, [r3, #0]
	yaw_pid_data.ki = CHASSIS_YAW_KI;
 8005c32:	4b08      	ldr	r3, [pc, #32]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c34:	f04f 0200 	mov.w	r2, #0
 8005c38:	605a      	str	r2, [r3, #4]
	yaw_pid_data.kd = CHASSIS_YAW_KD;
 8005c3a:	4b06      	ldr	r3, [pc, #24]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c3c:	f04f 0200 	mov.w	r2, #0
 8005c40:	609a      	str	r2, [r3, #8]
	yaw_pid_data.max_out = CHASSIS_YAW_MAX_RPM;
 8005c42:	4b04      	ldr	r3, [pc, #16]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c44:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 8005c48:	61da      	str	r2, [r3, #28]
}
 8005c4a:	bf00      	nop
 8005c4c:	46bd      	mov	sp, r7
 8005c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c52:	4770      	bx	lr
 8005c54:	200034fc 	.word	0x200034fc
 8005c58:	3f19999a 	.word	0x3f19999a

08005c5c <keyboard_control_input>:
extern int g_spinspin_mode;
static float curr_spinspin = 0;



void keyboard_control_input() {
 8005c5c:	b580      	push	{r7, lr}
 8005c5e:	af00      	add	r7, sp, #0
	mouse_gimbal_input();
 8005c60:	f000 f908 	bl	8005e74 <mouse_gimbal_input>
	keyboard_chassis_input();
 8005c64:	f000 f868 	bl	8005d38 <keyboard_chassis_input>
	mouse_launcher_control_input();
 8005c68:	f000 f97a 	bl	8005f60 <mouse_launcher_control_input>
}
 8005c6c:	bf00      	nop
 8005c6e:	bd80      	pop	{r7, pc}

08005c70 <keyboard_gear_shifter>:

void keyboard_gear_shifter(speed_shift_t *gear_speed) {
 8005c70:	b580      	push	{r7, lr}
 8005c72:	b082      	sub	sp, #8
 8005c74:	af00      	add	r7, sp, #0
 8005c76:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	if ((g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT)
 8005c78:	4b2c      	ldr	r3, [pc, #176]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005c7a:	8b5b      	ldrh	r3, [r3, #26]
 8005c7c:	f003 0310 	and.w	r3, r3, #16
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	d013      	beq.n	8005cac <keyboard_gear_shifter+0x3c>
			&& (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL)) {
 8005c84:	4b29      	ldr	r3, [pc, #164]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005c86:	8b5b      	ldrh	r3, [r3, #26]
 8005c88:	f003 0320 	and.w	r3, r3, #32
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d00d      	beq.n	8005cac <keyboard_gear_shifter+0x3c>
		gear_speed->curr_gear = 3;
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	2203      	movs	r2, #3
 8005c94:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005c96:	f005 fa53 	bl	800b140 <HAL_GetTick>
 8005c9a:	4603      	mov	r3, r0
 8005c9c:	4a24      	ldr	r2, [pc, #144]	@ (8005d30 <keyboard_gear_shifter+0xc0>)
 8005c9e:	6013      	str	r3, [r2, #0]
		ctrl_press_time = HAL_GetTick();
 8005ca0:	f005 fa4e 	bl	800b140 <HAL_GetTick>
 8005ca4:	4603      	mov	r3, r0
 8005ca6:	4a23      	ldr	r2, [pc, #140]	@ (8005d34 <keyboard_gear_shifter+0xc4>)
 8005ca8:	6013      	str	r3, [r2, #0]
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
		}
		ctrl_press_time = HAL_GetTick();
	}

}
 8005caa:	e03a      	b.n	8005d22 <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT) {
 8005cac:	4b1f      	ldr	r3, [pc, #124]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005cae:	8b5b      	ldrh	r3, [r3, #26]
 8005cb0:	f003 0310 	and.w	r3, r3, #16
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d017      	beq.n	8005ce8 <keyboard_gear_shifter+0x78>
		if (HAL_GetTick() - shift_press_time > 100) {
 8005cb8:	f005 fa42 	bl	800b140 <HAL_GetTick>
 8005cbc:	4602      	mov	r2, r0
 8005cbe:	4b1c      	ldr	r3, [pc, #112]	@ (8005d30 <keyboard_gear_shifter+0xc0>)
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	1ad3      	subs	r3, r2, r3
 8005cc4:	2b64      	cmp	r3, #100	@ 0x64
 8005cc6:	d909      	bls.n	8005cdc <keyboard_gear_shifter+0x6c>
					(gear_speed->curr_gear < 5) ? gear_speed->curr_gear + 1 : 5;
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005ccc:	2b04      	cmp	r3, #4
 8005cce:	bf28      	it	cs
 8005cd0:	2304      	movcs	r3, #4
 8005cd2:	b2db      	uxtb	r3, r3
 8005cd4:	3301      	adds	r3, #1
 8005cd6:	b2da      	uxtb	r2, r3
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005cdc:	f005 fa30 	bl	800b140 <HAL_GetTick>
 8005ce0:	4603      	mov	r3, r0
 8005ce2:	4a13      	ldr	r2, [pc, #76]	@ (8005d30 <keyboard_gear_shifter+0xc0>)
 8005ce4:	6013      	str	r3, [r2, #0]
}
 8005ce6:	e01c      	b.n	8005d22 <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL) {
 8005ce8:	4b10      	ldr	r3, [pc, #64]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005cea:	8b5b      	ldrh	r3, [r3, #26]
 8005cec:	f003 0320 	and.w	r3, r3, #32
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	d016      	beq.n	8005d22 <keyboard_gear_shifter+0xb2>
		if (HAL_GetTick() - ctrl_press_time > 100) {
 8005cf4:	f005 fa24 	bl	800b140 <HAL_GetTick>
 8005cf8:	4602      	mov	r2, r0
 8005cfa:	4b0e      	ldr	r3, [pc, #56]	@ (8005d34 <keyboard_gear_shifter+0xc4>)
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	1ad3      	subs	r3, r2, r3
 8005d00:	2b64      	cmp	r3, #100	@ 0x64
 8005d02:	d909      	bls.n	8005d18 <keyboard_gear_shifter+0xa8>
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005d08:	2b02      	cmp	r3, #2
 8005d0a:	bf38      	it	cc
 8005d0c:	2302      	movcc	r3, #2
 8005d0e:	b2db      	uxtb	r3, r3
 8005d10:	3b01      	subs	r3, #1
 8005d12:	b2da      	uxtb	r2, r3
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	701a      	strb	r2, [r3, #0]
		ctrl_press_time = HAL_GetTick();
 8005d18:	f005 fa12 	bl	800b140 <HAL_GetTick>
 8005d1c:	4603      	mov	r3, r0
 8005d1e:	4a05      	ldr	r2, [pc, #20]	@ (8005d34 <keyboard_gear_shifter+0xc4>)
 8005d20:	6013      	str	r3, [r2, #0]
}
 8005d22:	bf00      	nop
 8005d24:	3708      	adds	r7, #8
 8005d26:	46bd      	mov	sp, r7
 8005d28:	bd80      	pop	{r7, pc}
 8005d2a:	bf00      	nop
 8005d2c:	20000808 	.word	0x20000808
 8005d30:	20003544 	.word	0x20003544
 8005d34:	20003548 	.word	0x20003548

08005d38 <keyboard_chassis_input>:

void keyboard_chassis_input() {
 8005d38:	b580      	push	{r7, lr}
 8005d3a:	b084      	sub	sp, #16
 8005d3c:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8005d3e:	4b49      	ldr	r3, [pc, #292]	@ (8005e64 <keyboard_chassis_input+0x12c>)
 8005d40:	781b      	ldrb	r3, [r3, #0]
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d104      	bne.n	8005d50 <keyboard_chassis_input+0x18>
 8005d46:	4b48      	ldr	r3, [pc, #288]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005d48:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005d4c:	2b02      	cmp	r3, #2
 8005d4e:	d00f      	beq.n	8005d70 <keyboard_chassis_input+0x38>
		chassis_ctrl_data.enabled = 0;
 8005d50:	4b46      	ldr	r3, [pc, #280]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d52:	2200      	movs	r2, #0
 8005d54:	751a      	strb	r2, [r3, #20]
		chassis_ctrl_data.horizontal = 0;
 8005d56:	4b45      	ldr	r3, [pc, #276]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d58:	f04f 0200 	mov.w	r2, #0
 8005d5c:	605a      	str	r2, [r3, #4]
		chassis_ctrl_data.forward = 0;
 8005d5e:	4b43      	ldr	r3, [pc, #268]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d60:	f04f 0200 	mov.w	r2, #0
 8005d64:	601a      	str	r2, [r3, #0]
		chassis_ctrl_data.yaw = 0;
 8005d66:	4b41      	ldr	r3, [pc, #260]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d68:	f04f 0200 	mov.w	r2, #0
 8005d6c:	609a      	str	r2, [r3, #8]
			chassis_ctrl_data.horizontal = horizontal_input;
			chassis_ctrl_data.forward = forward_input;
			chassis_ctrl_data.yaw = yaw_input;
		}
	}
}
 8005d6e:	e075      	b.n	8005e5c <keyboard_chassis_input+0x124>
		if (g_remote_cmd.right_switch == ge_RSW_ALL_ON) {
 8005d70:	4b3d      	ldr	r3, [pc, #244]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005d72:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005d76:	2b02      	cmp	r3, #2
 8005d78:	d170      	bne.n	8005e5c <keyboard_chassis_input+0x124>
			chassis_ctrl_data.enabled = 1;
 8005d7a:	4b3c      	ldr	r3, [pc, #240]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8005d80:	f04f 0300 	mov.w	r3, #0
 8005d84:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 8005d86:	f04f 0300 	mov.w	r3, #0
 8005d8a:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 8005d8c:	f04f 0300 	mov.w	r3, #0
 8005d90:	607b      	str	r3, [r7, #4]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_Q) {
 8005d92:	4b35      	ldr	r3, [pc, #212]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005d94:	8b5b      	ldrh	r3, [r3, #26]
 8005d96:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d003      	beq.n	8005da6 <keyboard_chassis_input+0x6e>
				g_spinspin_mode = 1;
 8005d9e:	4b34      	ldr	r3, [pc, #208]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005da0:	2201      	movs	r2, #1
 8005da2:	601a      	str	r2, [r3, #0]
 8005da4:	e008      	b.n	8005db8 <keyboard_chassis_input+0x80>
			} else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_E) {
 8005da6:	4b30      	ldr	r3, [pc, #192]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005da8:	8b5b      	ldrh	r3, [r3, #26]
 8005daa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	d002      	beq.n	8005db8 <keyboard_chassis_input+0x80>
				g_spinspin_mode = 0;
 8005db2:	4b2f      	ldr	r3, [pc, #188]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005db4:	2200      	movs	r2, #0
 8005db6:	601a      	str	r2, [r3, #0]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_W) {
 8005db8:	4b2b      	ldr	r3, [pc, #172]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005dba:	8b5b      	ldrh	r3, [r3, #26]
 8005dbc:	f003 0301 	and.w	r3, r3, #1
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d007      	beq.n	8005dd4 <keyboard_chassis_input+0x9c>
				forward_input += KEYBD_MAX_SPD;
 8005dc4:	edd7 7a02 	vldr	s15, [r7, #8]
 8005dc8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005dcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005dd0:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_S) {
 8005dd4:	4b24      	ldr	r3, [pc, #144]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005dd6:	8b5b      	ldrh	r3, [r3, #26]
 8005dd8:	f003 0302 	and.w	r3, r3, #2
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d007      	beq.n	8005df0 <keyboard_chassis_input+0xb8>
				forward_input -= KEYBD_MAX_SPD;
 8005de0:	edd7 7a02 	vldr	s15, [r7, #8]
 8005de4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005de8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005dec:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_A) {
 8005df0:	4b1d      	ldr	r3, [pc, #116]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005df2:	8b5b      	ldrh	r3, [r3, #26]
 8005df4:	f003 0304 	and.w	r3, r3, #4
 8005df8:	2b00      	cmp	r3, #0
 8005dfa:	d007      	beq.n	8005e0c <keyboard_chassis_input+0xd4>
				horizontal_input -= KEYBD_MAX_SPD;
 8005dfc:	edd7 7a03 	vldr	s15, [r7, #12]
 8005e00:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005e04:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005e08:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_D) {
 8005e0c:	4b16      	ldr	r3, [pc, #88]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005e0e:	8b5b      	ldrh	r3, [r3, #26]
 8005e10:	f003 0308 	and.w	r3, r3, #8
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	d007      	beq.n	8005e28 <keyboard_chassis_input+0xf0>
				horizontal_input += KEYBD_MAX_SPD;
 8005e18:	edd7 7a03 	vldr	s15, [r7, #12]
 8005e1c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005e20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e24:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_spinspin_mode) {
 8005e28:	4b11      	ldr	r3, [pc, #68]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d008      	beq.n	8005e42 <keyboard_chassis_input+0x10a>
				yaw_input = g_spinspin_mode * CHASSIS_SPINSPIN_MAX;
 8005e30:	4b0f      	ldr	r3, [pc, #60]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	ee07 3a90 	vmov	s15, r3
 8005e38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e3c:	edc7 7a01 	vstr	s15, [r7, #4]
 8005e40:	e003      	b.n	8005e4a <keyboard_chassis_input+0x112>
				yaw_input = chassis_center_yaw();
 8005e42:	f7ff fcbd 	bl	80057c0 <chassis_center_yaw>
 8005e46:	ed87 0a01 	vstr	s0, [r7, #4]
			chassis_ctrl_data.horizontal = horizontal_input;
 8005e4a:	4a08      	ldr	r2, [pc, #32]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005e4c:	68fb      	ldr	r3, [r7, #12]
 8005e4e:	6053      	str	r3, [r2, #4]
			chassis_ctrl_data.forward = forward_input;
 8005e50:	4a06      	ldr	r2, [pc, #24]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005e52:	68bb      	ldr	r3, [r7, #8]
 8005e54:	6013      	str	r3, [r2, #0]
			chassis_ctrl_data.yaw = yaw_input;
 8005e56:	4a05      	ldr	r2, [pc, #20]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	6093      	str	r3, [r2, #8]
}
 8005e5c:	bf00      	nop
 8005e5e:	3710      	adds	r7, #16
 8005e60:	46bd      	mov	sp, r7
 8005e62:	bd80      	pop	{r7, pc}
 8005e64:	20000009 	.word	0x20000009
 8005e68:	20000808 	.word	0x20000808
 8005e6c:	200034c8 	.word	0x200034c8
 8005e70:	2000353c 	.word	0x2000353c

08005e74 <mouse_gimbal_input>:

void mouse_gimbal_input() {
 8005e74:	b580      	push	{r7, lr}
 8005e76:	b082      	sub	sp, #8
 8005e78:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005e7a:	4b33      	ldr	r3, [pc, #204]	@ (8005f48 <mouse_gimbal_input+0xd4>)
 8005e7c:	781b      	ldrb	r3, [r3, #0]
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	d104      	bne.n	8005e8c <mouse_gimbal_input+0x18>
 8005e82:	4b32      	ldr	r3, [pc, #200]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005e84:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005e88:	2b01      	cmp	r3, #1
 8005e8a:	d103      	bne.n	8005e94 <mouse_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8005e8c:	4b30      	ldr	r3, [pc, #192]	@ (8005f50 <mouse_gimbal_input+0xdc>)
 8005e8e:	2200      	movs	r2, #0
 8005e90:	735a      	strb	r2, [r3, #13]
 8005e92:	e055      	b.n	8005f40 <mouse_gimbal_input+0xcc>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8005e94:	4b2e      	ldr	r3, [pc, #184]	@ (8005f50 <mouse_gimbal_input+0xdc>)
 8005e96:	2201      	movs	r2, #1
 8005e98:	735a      	strb	r2, [r3, #13]
//		float pitch_mouse = (float) g_remote_cmd.mouse_y * MOUSE_Y_INVERT
//				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
//		float yaw_mouse = (float) g_remote_cmd.mouse_x * MOUSE_X_INVERT
//				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;

		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8005e9a:	4b2c      	ldr	r3, [pc, #176]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005e9c:	695b      	ldr	r3, [r3, #20]
 8005e9e:	ee07 3a90 	vmov	s15, r3
 8005ea2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
 8005ea6:	eef1 7a67 	vneg.f32	s15, s15
 8005eaa:	ee17 3a90 	vmov	r3, s15
 8005eae:	4618      	mov	r0, r3
 8005eb0:	f7fa fb4a 	bl	8000548 <__aeabi_f2d>
 8005eb4:	f04f 0200 	mov.w	r2, #0
 8005eb8:	4b26      	ldr	r3, [pc, #152]	@ (8005f54 <mouse_gimbal_input+0xe0>)
 8005eba:	f7fa fb9d 	bl	80005f8 <__aeabi_dmul>
 8005ebe:	4602      	mov	r2, r0
 8005ec0:	460b      	mov	r3, r1
 8005ec2:	4610      	mov	r0, r2
 8005ec4:	4619      	mov	r1, r3
 8005ec6:	f04f 0200 	mov.w	r2, #0
 8005eca:	4b23      	ldr	r3, [pc, #140]	@ (8005f58 <mouse_gimbal_input+0xe4>)
 8005ecc:	f7fa fcbe 	bl	800084c <__aeabi_ddiv>
 8005ed0:	4602      	mov	r2, r0
 8005ed2:	460b      	mov	r3, r1
		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8005ed4:	4610      	mov	r0, r2
 8005ed6:	4619      	mov	r1, r3
 8005ed8:	f7fa fe86 	bl	8000be8 <__aeabi_d2f>
 8005edc:	4603      	mov	r3, r0
 8005ede:	607b      	str	r3, [r7, #4]
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8005ee0:	4b1a      	ldr	r3, [pc, #104]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005ee2:	691b      	ldr	r3, [r3, #16]
 8005ee4:	ee07 3a90 	vmov	s15, r3
 8005ee8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;
 8005eec:	eef1 7a67 	vneg.f32	s15, s15
 8005ef0:	ee17 3a90 	vmov	r3, s15
 8005ef4:	4618      	mov	r0, r3
 8005ef6:	f7fa fb27 	bl	8000548 <__aeabi_f2d>
 8005efa:	f04f 0200 	mov.w	r2, #0
 8005efe:	4b17      	ldr	r3, [pc, #92]	@ (8005f5c <mouse_gimbal_input+0xe8>)
 8005f00:	f7fa fb7a 	bl	80005f8 <__aeabi_dmul>
 8005f04:	4602      	mov	r2, r0
 8005f06:	460b      	mov	r3, r1
 8005f08:	4610      	mov	r0, r2
 8005f0a:	4619      	mov	r1, r3
 8005f0c:	f04f 0200 	mov.w	r2, #0
 8005f10:	4b11      	ldr	r3, [pc, #68]	@ (8005f58 <mouse_gimbal_input+0xe4>)
 8005f12:	f7fa fc9b 	bl	800084c <__aeabi_ddiv>
 8005f16:	4602      	mov	r2, r0
 8005f18:	460b      	mov	r3, r1
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8005f1a:	4610      	mov	r0, r2
 8005f1c:	4619      	mov	r1, r3
 8005f1e:	f7fa fe63 	bl	8000be8 <__aeabi_d2f>
 8005f22:	4603      	mov	r3, r0
 8005f24:	603b      	str	r3, [r7, #0]
		g_remote_cmd.mouse_vert = 0;
 8005f26:	4b09      	ldr	r3, [pc, #36]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005f28:	2200      	movs	r2, #0
 8005f2a:	615a      	str	r2, [r3, #20]
		g_remote_cmd.mouse_hori = 0;
 8005f2c:	4b07      	ldr	r3, [pc, #28]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005f2e:	2200      	movs	r2, #0
 8005f30:	611a      	str	r2, [r3, #16]
		gimbal_turn_ang(pitch_mouse, yaw_mouse);
 8005f32:	edd7 0a00 	vldr	s1, [r7]
 8005f36:	ed97 0a01 	vldr	s0, [r7, #4]
 8005f3a:	f7ff fda9 	bl	8005a90 <gimbal_turn_ang>

	}
}
 8005f3e:	bf00      	nop
 8005f40:	bf00      	nop
 8005f42:	3708      	adds	r7, #8
 8005f44:	46bd      	mov	sp, r7
 8005f46:	bd80      	pop	{r7, pc}
 8005f48:	20000009 	.word	0x20000009
 8005f4c:	20000808 	.word	0x20000808
 8005f50:	200034e8 	.word	0x200034e8
 8005f54:	c0240000 	.word	0xc0240000
 8005f58:	40e00000 	.word	0x40e00000
 8005f5c:	40240000 	.word	0x40240000

08005f60 <mouse_launcher_control_input>:

void mouse_launcher_control_input() {
 8005f60:	b480      	push	{r7}
 8005f62:	af00      	add	r7, sp, #0
	if (g_safety_toggle || launcher_safety_toggle
 8005f64:	4b28      	ldr	r3, [pc, #160]	@ (8006008 <mouse_launcher_control_input+0xa8>)
 8005f66:	781b      	ldrb	r3, [r3, #0]
 8005f68:	2b00      	cmp	r3, #0
 8005f6a:	d10d      	bne.n	8005f88 <mouse_launcher_control_input+0x28>
 8005f6c:	4b27      	ldr	r3, [pc, #156]	@ (800600c <mouse_launcher_control_input+0xac>)
 8005f6e:	781b      	ldrb	r3, [r3, #0]
 8005f70:	2b00      	cmp	r3, #0
 8005f72:	d109      	bne.n	8005f88 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8005f74:	4b26      	ldr	r3, [pc, #152]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005f76:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005f7a:	2b01      	cmp	r3, #1
 8005f7c:	d004      	beq.n	8005f88 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005f7e:	4b24      	ldr	r3, [pc, #144]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005f80:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005f84:	2b01      	cmp	r3, #1
 8005f86:	d016      	beq.n	8005fb6 <mouse_launcher_control_input+0x56>
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005f88:	4b21      	ldr	r3, [pc, #132]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005f8a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005f8e:	2b01      	cmp	r3, #1
 8005f90:	d102      	bne.n	8005f98 <mouse_launcher_control_input+0x38>
			launcher_ctrl_data.enabled = 0;
 8005f92:	4b20      	ldr	r3, [pc, #128]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005f94:	2200      	movs	r2, #0
 8005f96:	715a      	strb	r2, [r3, #5]
		}
		launcher_ctrl_data.firing = 0;
 8005f98:	4b1e      	ldr	r3, [pc, #120]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8005f9e:	4b1d      	ldr	r3, [pc, #116]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fa0:	2200      	movs	r2, #0
 8005fa2:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005fa4:	4b1a      	ldr	r3, [pc, #104]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fa6:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005faa:	2b01      	cmp	r3, #1
 8005fac:	d027      	beq.n	8005ffe <mouse_launcher_control_input+0x9e>
			launcher_safety_toggle = 0;
 8005fae:	4b17      	ldr	r3, [pc, #92]	@ (800600c <mouse_launcher_control_input+0xac>)
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	701a      	strb	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005fb4:	e023      	b.n	8005ffe <mouse_launcher_control_input+0x9e>
		}
	} else {
		launcher_ctrl_data.enabled = 1;
 8005fb6:	4b17      	ldr	r3, [pc, #92]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fb8:	2201      	movs	r2, #1
 8005fba:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 8005fbc:	4b15      	ldr	r3, [pc, #84]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fbe:	2201      	movs	r2, #1
 8005fc0:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8005fc2:	4b13      	ldr	r3, [pc, #76]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fc4:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005fc8:	2b01      	cmp	r3, #1
 8005fca:	d10b      	bne.n	8005fe4 <mouse_launcher_control_input+0x84>
			if (g_remote_cmd.mouse_right) {
 8005fcc:	4b10      	ldr	r3, [pc, #64]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fce:	f993 3019 	ldrsb.w	r3, [r3, #25]
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d003      	beq.n	8005fde <mouse_launcher_control_input+0x7e>
				launcher_ctrl_data.override = 1;
 8005fd6:	4b0f      	ldr	r3, [pc, #60]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fd8:	2201      	movs	r2, #1
 8005fda:	711a      	strb	r2, [r3, #4]
 8005fdc:	e002      	b.n	8005fe4 <mouse_launcher_control_input+0x84>
			} else {
				launcher_ctrl_data.override = 0;
 8005fde:	4b0d      	ldr	r3, [pc, #52]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fe0:	2200      	movs	r2, #0
 8005fe2:	711a      	strb	r2, [r3, #4]
			}
		}
		if (g_remote_cmd.mouse_left) {
 8005fe4:	4b0a      	ldr	r3, [pc, #40]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fe6:	f993 3018 	ldrsb.w	r3, [r3, #24]
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d003      	beq.n	8005ff6 <mouse_launcher_control_input+0x96>
			launcher_ctrl_data.firing =1;
 8005fee:	4b09      	ldr	r3, [pc, #36]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005ff0:	2201      	movs	r2, #1
 8005ff2:	805a      	strh	r2, [r3, #2]

		} else {
			launcher_ctrl_data.firing = 0;
		}
	}
}
 8005ff4:	e003      	b.n	8005ffe <mouse_launcher_control_input+0x9e>
			launcher_ctrl_data.firing = 0;
 8005ff6:	4b07      	ldr	r3, [pc, #28]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005ff8:	2200      	movs	r2, #0
 8005ffa:	805a      	strh	r2, [r3, #2]
}
 8005ffc:	e7ff      	b.n	8005ffe <mouse_launcher_control_input+0x9e>
 8005ffe:	bf00      	nop
 8006000:	46bd      	mov	sp, r7
 8006002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006006:	4770      	bx	lr
 8006008:	20000009 	.word	0x20000009
 800600c:	2000000a 	.word	0x2000000a
 8006010:	20000808 	.word	0x20000808
 8006014:	200034e0 	.word	0x200034e0

08006018 <remote_control_input>:
extern gimbal_control_t gimbal_ctrl_data;
extern uint8_t g_safety_toggle;
extern uint8_t launcher_safety_toggle;


void remote_control_input() {
 8006018:	b580      	push	{r7, lr}
 800601a:	af00      	add	r7, sp, #0
	remote_gimbal_input();
 800601c:	f000 f8f0 	bl	8006200 <remote_gimbal_input>
	remote_chassis_input();
 8006020:	f000 f87e 	bl	8006120 <remote_chassis_input>
	remote_launcher_control_input();
 8006024:	f000 f958 	bl	80062d8 <remote_launcher_control_input>
}
 8006028:	bf00      	nop
 800602a:	bd80      	pop	{r7, pc}

0800602c <remote_gear_shifter>:
void remote_gear_shifter(speed_shift_t* gear_speed){
 800602c:	b580      	push	{r7, lr}
 800602e:	b084      	sub	sp, #16
 8006030:	af00      	add	r7, sp, #0
 8006032:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 8006034:	4b36      	ldr	r3, [pc, #216]	@ (8006110 <remote_gear_shifter+0xe4>)
 8006036:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800603a:	2b03      	cmp	r3, #3
 800603c:	d164      	bne.n	8006108 <remote_gear_shifter+0xdc>
		if (g_remote_cmd.side_dial > 330) {
 800603e:	4b34      	ldr	r3, [pc, #208]	@ (8006110 <remote_gear_shifter+0xe4>)
 8006040:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8006044:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8006048:	dd2c      	ble.n	80060a4 <remote_gear_shifter+0x78>
			if (HAL_GetTick() - shift_press_time > 100) {
 800604a:	f005 f879 	bl	800b140 <HAL_GetTick>
 800604e:	4602      	mov	r2, r0
 8006050:	4b30      	ldr	r3, [pc, #192]	@ (8006114 <remote_gear_shifter+0xe8>)
 8006052:	681b      	ldr	r3, [r3, #0]
 8006054:	1ad3      	subs	r3, r2, r3
 8006056:	2b64      	cmp	r3, #100	@ 0x64
 8006058:	d91e      	bls.n	8006098 <remote_gear_shifter+0x6c>
				gear_speed->curr_gear =
						(gear_speed->curr_gear < 6) ?
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 800605e:	2b05      	cmp	r3, #5
 8006060:	bf28      	it	cs
 8006062:	2305      	movcs	r3, #5
 8006064:	b2db      	uxtb	r3, r3
 8006066:	3301      	adds	r3, #1
 8006068:	b2da      	uxtb	r2, r3
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	701a      	strb	r2, [r3, #0]
								gear_speed->curr_gear + 1 : 6;
				temp_msg = bz_high;
 800606e:	2306      	movs	r3, #6
 8006070:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006072:	2300      	movs	r3, #0
 8006074:	73fb      	strb	r3, [r7, #15]
 8006076:	e00a      	b.n	800608e <remote_gear_shifter+0x62>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8006078:	4b27      	ldr	r3, [pc, #156]	@ (8006118 <remote_gear_shifter+0xec>)
 800607a:	6818      	ldr	r0, [r3, #0]
 800607c:	f107 010d 	add.w	r1, r7, #13
 8006080:	2300      	movs	r3, #0
 8006082:	2200      	movs	r2, #0
 8006084:	f011 fb38 	bl	80176f8 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006088:	7bfb      	ldrb	r3, [r7, #15]
 800608a:	3301      	adds	r3, #1
 800608c:	73fb      	strb	r3, [r7, #15]
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	781b      	ldrb	r3, [r3, #0]
 8006092:	7bfa      	ldrb	r2, [r7, #15]
 8006094:	429a      	cmp	r2, r3
 8006096:	d3ef      	bcc.n	8006078 <remote_gear_shifter+0x4c>
				}
			}
			shift_press_time = HAL_GetTick();
 8006098:	f005 f852 	bl	800b140 <HAL_GetTick>
 800609c:	4603      	mov	r3, r0
 800609e:	4a1d      	ldr	r2, [pc, #116]	@ (8006114 <remote_gear_shifter+0xe8>)
 80060a0:	6013      	str	r3, [r2, #0]
				}
			}
			ctrl_press_time = HAL_GetTick();
		}
	}
}
 80060a2:	e031      	b.n	8006108 <remote_gear_shifter+0xdc>
		else if (g_remote_cmd.side_dial < -330) {
 80060a4:	4b1a      	ldr	r3, [pc, #104]	@ (8006110 <remote_gear_shifter+0xe4>)
 80060a6:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80060aa:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80060ae:	da2b      	bge.n	8006108 <remote_gear_shifter+0xdc>
			if (HAL_GetTick() - ctrl_press_time > 100) {
 80060b0:	f005 f846 	bl	800b140 <HAL_GetTick>
 80060b4:	4602      	mov	r2, r0
 80060b6:	4b19      	ldr	r3, [pc, #100]	@ (800611c <remote_gear_shifter+0xf0>)
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	1ad3      	subs	r3, r2, r3
 80060bc:	2b64      	cmp	r3, #100	@ 0x64
 80060be:	d91e      	bls.n	80060fe <remote_gear_shifter+0xd2>
						(gear_speed->curr_gear > 1) ?
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 80060c4:	2b02      	cmp	r3, #2
 80060c6:	bf38      	it	cc
 80060c8:	2302      	movcc	r3, #2
 80060ca:	b2db      	uxtb	r3, r3
 80060cc:	3b01      	subs	r3, #1
 80060ce:	b2da      	uxtb	r2, r3
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	701a      	strb	r2, [r3, #0]
				temp_msg = bz_low;
 80060d4:	2307      	movs	r3, #7
 80060d6:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80060d8:	2300      	movs	r3, #0
 80060da:	73bb      	strb	r3, [r7, #14]
 80060dc:	e00a      	b.n	80060f4 <remote_gear_shifter+0xc8>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80060de:	4b0e      	ldr	r3, [pc, #56]	@ (8006118 <remote_gear_shifter+0xec>)
 80060e0:	6818      	ldr	r0, [r3, #0]
 80060e2:	f107 010d 	add.w	r1, r7, #13
 80060e6:	2300      	movs	r3, #0
 80060e8:	2200      	movs	r2, #0
 80060ea:	f011 fb05 	bl	80176f8 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80060ee:	7bbb      	ldrb	r3, [r7, #14]
 80060f0:	3301      	adds	r3, #1
 80060f2:	73bb      	strb	r3, [r7, #14]
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	781b      	ldrb	r3, [r3, #0]
 80060f8:	7bba      	ldrb	r2, [r7, #14]
 80060fa:	429a      	cmp	r2, r3
 80060fc:	d3ef      	bcc.n	80060de <remote_gear_shifter+0xb2>
			ctrl_press_time = HAL_GetTick();
 80060fe:	f005 f81f 	bl	800b140 <HAL_GetTick>
 8006102:	4603      	mov	r3, r0
 8006104:	4a05      	ldr	r2, [pc, #20]	@ (800611c <remote_gear_shifter+0xf0>)
 8006106:	6013      	str	r3, [r2, #0]
}
 8006108:	bf00      	nop
 800610a:	3710      	adds	r7, #16
 800610c:	46bd      	mov	sp, r7
 800610e:	bd80      	pop	{r7, pc}
 8006110:	20000808 	.word	0x20000808
 8006114:	2000354c 	.word	0x2000354c
 8006118:	200037d4 	.word	0x200037d4
 800611c:	20003550 	.word	0x20003550

08006120 <remote_chassis_input>:

void remote_chassis_input() {
 8006120:	b580      	push	{r7, lr}
 8006122:	b084      	sub	sp, #16
 8006124:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8006126:	4b32      	ldr	r3, [pc, #200]	@ (80061f0 <remote_chassis_input+0xd0>)
 8006128:	781b      	ldrb	r3, [r3, #0]
 800612a:	2b00      	cmp	r3, #0
 800612c:	d104      	bne.n	8006138 <remote_chassis_input+0x18>
 800612e:	4b31      	ldr	r3, [pc, #196]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006130:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006134:	2b02      	cmp	r3, #2
 8006136:	d002      	beq.n	800613e <remote_chassis_input+0x1e>
//		chassis_ctrl_data.enabled = 0;
		chassis_kill_ctrl();
 8006138:	f7ff fb6e 	bl	8005818 <chassis_kill_ctrl>
 800613c:	e053      	b.n	80061e6 <remote_chassis_input+0xc6>
	} else {
			chassis_ctrl_data.enabled = 1;
 800613e:	4b2e      	ldr	r3, [pc, #184]	@ (80061f8 <remote_chassis_input+0xd8>)
 8006140:	2201      	movs	r2, #1
 8006142:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8006144:	f04f 0300 	mov.w	r3, #0
 8006148:	60bb      	str	r3, [r7, #8]
			float forward_input = 0.0;
 800614a:	f04f 0300 	mov.w	r3, #0
 800614e:	607b      	str	r3, [r7, #4]
			float yaw_input = 0.0;
 8006150:	f04f 0300 	mov.w	r3, #0
 8006154:	60fb      	str	r3, [r7, #12]

			forward_input = (float) g_remote_cmd.left_y / RC_LIMITS;
 8006156:	4b27      	ldr	r3, [pc, #156]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006158:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800615c:	ee07 3a90 	vmov	s15, r3
 8006160:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006164:	eddf 6a25 	vldr	s13, [pc, #148]	@ 80061fc <remote_chassis_input+0xdc>
 8006168:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800616c:	edc7 7a01 	vstr	s15, [r7, #4]
			horizontal_input = (float) g_remote_cmd.left_x / RC_LIMITS;
 8006170:	4b20      	ldr	r3, [pc, #128]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006172:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006176:	ee07 3a90 	vmov	s15, r3
 800617a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800617e:	eddf 6a1f 	vldr	s13, [pc, #124]	@ 80061fc <remote_chassis_input+0xdc>
 8006182:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006186:	edc7 7a02 	vstr	s15, [r7, #8]

//			yaw_input = (float)g_remote_cmd.right_x * CHASSIS_SPINSPIN_MAX/660;
//			yaw_input = 0;
			if (g_remote_cmd.left_switch == ge_LSW_STANDBY){
 800618a:	4b1a      	ldr	r3, [pc, #104]	@ (80061f4 <remote_chassis_input+0xd4>)
 800618c:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006190:	2b02      	cmp	r3, #2
 8006192:	d11b      	bne.n	80061cc <remote_chassis_input+0xac>
				if (abs(g_remote_cmd.side_dial) > 50 ){
 8006194:	4b17      	ldr	r3, [pc, #92]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006196:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800619a:	2b00      	cmp	r3, #0
 800619c:	bfb8      	it	lt
 800619e:	425b      	neglt	r3, r3
 80061a0:	b29b      	uxth	r3, r3
 80061a2:	2b32      	cmp	r3, #50	@ 0x32
 80061a4:	d90d      	bls.n	80061c2 <remote_chassis_input+0xa2>
					yaw_input = (float) g_remote_cmd.side_dial / RC_LIMITS;
 80061a6:	4b13      	ldr	r3, [pc, #76]	@ (80061f4 <remote_chassis_input+0xd4>)
 80061a8:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80061ac:	ee07 3a90 	vmov	s15, r3
 80061b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80061b4:	eddf 6a11 	vldr	s13, [pc, #68]	@ 80061fc <remote_chassis_input+0xdc>
 80061b8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80061bc:	edc7 7a03 	vstr	s15, [r7, #12]
 80061c0:	e008      	b.n	80061d4 <remote_chassis_input+0xb4>
				}
				else {
				yaw_input = chassis_center_yaw();
 80061c2:	f7ff fafd 	bl	80057c0 <chassis_center_yaw>
 80061c6:	ed87 0a03 	vstr	s0, [r7, #12]
 80061ca:	e003      	b.n	80061d4 <remote_chassis_input+0xb4>
				}
			}
			else {
			yaw_input = chassis_center_yaw();
 80061cc:	f7ff faf8 	bl	80057c0 <chassis_center_yaw>
 80061d0:	ed87 0a03 	vstr	s0, [r7, #12]
			}
			//min value

//yaw_input = (float) remote_cmd.right_x * CHASSIS_YAW_MAX_RPM /RC_LIMITS;
			chassis_set_ctrl(forward_input, horizontal_input, yaw_input);
 80061d4:	ed97 1a03 	vldr	s2, [r7, #12]
 80061d8:	edd7 0a02 	vldr	s1, [r7, #8]
 80061dc:	ed97 0a01 	vldr	s0, [r7, #4]
 80061e0:	f7ff faf8 	bl	80057d4 <chassis_set_ctrl>
	}
}
 80061e4:	bf00      	nop
 80061e6:	bf00      	nop
 80061e8:	3710      	adds	r7, #16
 80061ea:	46bd      	mov	sp, r7
 80061ec:	bd80      	pop	{r7, pc}
 80061ee:	bf00      	nop
 80061f0:	20000009 	.word	0x20000009
 80061f4:	20000808 	.word	0x20000808
 80061f8:	200034c8 	.word	0x200034c8
 80061fc:	44250000 	.word	0x44250000

08006200 <remote_gimbal_input>:

void remote_gimbal_input() {
 8006200:	b580      	push	{r7, lr}
 8006202:	b082      	sub	sp, #8
 8006204:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006206:	4b30      	ldr	r3, [pc, #192]	@ (80062c8 <remote_gimbal_input+0xc8>)
 8006208:	781b      	ldrb	r3, [r3, #0]
 800620a:	2b00      	cmp	r3, #0
 800620c:	d104      	bne.n	8006218 <remote_gimbal_input+0x18>
 800620e:	4b2f      	ldr	r3, [pc, #188]	@ (80062cc <remote_gimbal_input+0xcc>)
 8006210:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006214:	2b01      	cmp	r3, #1
 8006216:	d103      	bne.n	8006220 <remote_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006218:	4b2d      	ldr	r3, [pc, #180]	@ (80062d0 <remote_gimbal_input+0xd0>)
 800621a:	2200      	movs	r2, #0
 800621c:	735a      	strb	r2, [r3, #13]
 800621e:	e044      	b.n	80062aa <remote_gimbal_input+0xaa>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8006220:	4b2b      	ldr	r3, [pc, #172]	@ (80062d0 <remote_gimbal_input+0xd0>)
 8006222:	2201      	movs	r2, #1
 8006224:	735a      	strb	r2, [r3, #13]
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 8006226:	4b29      	ldr	r3, [pc, #164]	@ (80062cc <remote_gimbal_input+0xcc>)
 8006228:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800622c:	ee07 3a90 	vmov	s15, r3
 8006230:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006234:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 80062d4 <remote_gimbal_input+0xd4>
 8006238:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800623c:	ee16 0a90 	vmov	r0, s13
 8006240:	f7fa f982 	bl	8000548 <__aeabi_f2d>
				* REMOTE_PITCH_SPEED;
 8006244:	a31c      	add	r3, pc, #112	@ (adr r3, 80062b8 <remote_gimbal_input+0xb8>)
 8006246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800624a:	f7fa f9d5 	bl	80005f8 <__aeabi_dmul>
 800624e:	4602      	mov	r2, r0
 8006250:	460b      	mov	r3, r1
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 8006252:	4610      	mov	r0, r2
 8006254:	4619      	mov	r1, r3
 8006256:	f7fa fcc7 	bl	8000be8 <__aeabi_d2f>
 800625a:	4603      	mov	r3, r0
 800625c:	607b      	str	r3, [r7, #4]
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 800625e:	4b1b      	ldr	r3, [pc, #108]	@ (80062cc <remote_gimbal_input+0xcc>)
 8006260:	f9b3 3000 	ldrsh.w	r3, [r3]
 8006264:	ee07 3a90 	vmov	s15, r3
 8006268:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800626c:	eddf 6a19 	vldr	s13, [pc, #100]	@ 80062d4 <remote_gimbal_input+0xd4>
 8006270:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006274:	eef1 7a67 	vneg.f32	s15, s15
 8006278:	ee17 3a90 	vmov	r3, s15
 800627c:	4618      	mov	r0, r3
 800627e:	f7fa f963 	bl	8000548 <__aeabi_f2d>
				* REMOTE_YAW_SPEED;
 8006282:	a30f      	add	r3, pc, #60	@ (adr r3, 80062c0 <remote_gimbal_input+0xc0>)
 8006284:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006288:	f7fa f9b6 	bl	80005f8 <__aeabi_dmul>
 800628c:	4602      	mov	r2, r0
 800628e:	460b      	mov	r3, r1
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 8006290:	4610      	mov	r0, r2
 8006292:	4619      	mov	r1, r3
 8006294:	f7fa fca8 	bl	8000be8 <__aeabi_d2f>
 8006298:	4603      	mov	r3, r0
 800629a:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_remote, yaw_remote);
 800629c:	edd7 0a00 	vldr	s1, [r7]
 80062a0:	ed97 0a01 	vldr	s0, [r7, #4]
 80062a4:	f7ff fbf4 	bl	8005a90 <gimbal_turn_ang>
	}
}
 80062a8:	bf00      	nop
 80062aa:	bf00      	nop
 80062ac:	3708      	adds	r7, #8
 80062ae:	46bd      	mov	sp, r7
 80062b0:	bd80      	pop	{r7, pc}
 80062b2:	bf00      	nop
 80062b4:	f3af 8000 	nop.w
 80062b8:	9999999a 	.word	0x9999999a
 80062bc:	bfb99999 	.word	0xbfb99999
 80062c0:	9999999a 	.word	0x9999999a
 80062c4:	3fb99999 	.word	0x3fb99999
 80062c8:	20000009 	.word	0x20000009
 80062cc:	20000808 	.word	0x20000808
 80062d0:	200034e8 	.word	0x200034e8
 80062d4:	44250000 	.word	0x44250000

080062d8 <remote_launcher_control_input>:


void remote_launcher_control_input() {
 80062d8:	b480      	push	{r7}
 80062da:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 80062dc:	4b1d      	ldr	r3, [pc, #116]	@ (8006354 <remote_launcher_control_input+0x7c>)
 80062de:	781b      	ldrb	r3, [r3, #0]
 80062e0:	2b00      	cmp	r3, #0
 80062e2:	d109      	bne.n	80062f8 <remote_launcher_control_input+0x20>
 80062e4:	4b1c      	ldr	r3, [pc, #112]	@ (8006358 <remote_launcher_control_input+0x80>)
 80062e6:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80062ea:	2b01      	cmp	r3, #1
 80062ec:	d004      	beq.n	80062f8 <remote_launcher_control_input+0x20>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 80062ee:	4b1a      	ldr	r3, [pc, #104]	@ (8006358 <remote_launcher_control_input+0x80>)
 80062f0:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062f4:	2b01      	cmp	r3, #1
 80062f6:	d016      	beq.n	8006326 <remote_launcher_control_input+0x4e>
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 80062f8:	4b17      	ldr	r3, [pc, #92]	@ (8006358 <remote_launcher_control_input+0x80>)
 80062fa:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062fe:	2b01      	cmp	r3, #1
 8006300:	d002      	beq.n	8006308 <remote_launcher_control_input+0x30>
			launcher_safety_toggle = 0;
 8006302:	4b16      	ldr	r3, [pc, #88]	@ (800635c <remote_launcher_control_input+0x84>)
 8006304:	2200      	movs	r2, #0
 8006306:	701a      	strb	r2, [r3, #0]
		}
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8006308:	4b13      	ldr	r3, [pc, #76]	@ (8006358 <remote_launcher_control_input+0x80>)
 800630a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800630e:	2b01      	cmp	r3, #1
 8006310:	d102      	bne.n	8006318 <remote_launcher_control_input+0x40>
							launcher_ctrl_data.enabled = 0;
 8006312:	4b13      	ldr	r3, [pc, #76]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006314:	2200      	movs	r2, #0
 8006316:	715a      	strb	r2, [r3, #5]
				}
//		launcher_ctrl_data.enabled = 0;
		launcher_ctrl_data.firing = 0;
 8006318:	4b11      	ldr	r3, [pc, #68]	@ (8006360 <remote_launcher_control_input+0x88>)
 800631a:	2200      	movs	r2, #0
 800631c:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 800631e:	4b10      	ldr	r3, [pc, #64]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006320:	2200      	movs	r2, #0
 8006322:	801a      	strh	r2, [r3, #0]
		} else {
			launcher_ctrl_data.firing = 0;
		}
	}

}
 8006324:	e011      	b.n	800634a <remote_launcher_control_input+0x72>
		launcher_ctrl_data.enabled = 1;
 8006326:	4b0e      	ldr	r3, [pc, #56]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006328:	2201      	movs	r2, #1
 800632a:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 800632c:	4b0c      	ldr	r3, [pc, #48]	@ (8006360 <remote_launcher_control_input+0x88>)
 800632e:	2201      	movs	r2, #1
 8006330:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8006332:	4b09      	ldr	r3, [pc, #36]	@ (8006358 <remote_launcher_control_input+0x80>)
 8006334:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006338:	2b01      	cmp	r3, #1
 800633a:	d103      	bne.n	8006344 <remote_launcher_control_input+0x6c>
			launcher_ctrl_data.firing = 1;
 800633c:	4b08      	ldr	r3, [pc, #32]	@ (8006360 <remote_launcher_control_input+0x88>)
 800633e:	2201      	movs	r2, #1
 8006340:	805a      	strh	r2, [r3, #2]
}
 8006342:	e002      	b.n	800634a <remote_launcher_control_input+0x72>
			launcher_ctrl_data.firing = 0;
 8006344:	4b06      	ldr	r3, [pc, #24]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006346:	2200      	movs	r2, #0
 8006348:	805a      	strh	r2, [r3, #2]
}
 800634a:	bf00      	nop
 800634c:	46bd      	mov	sp, r7
 800634e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006352:	4770      	bx	lr
 8006354:	20000009 	.word	0x20000009
 8006358:	20000808 	.word	0x20000808
 800635c:	2000000a 	.word	0x2000000a
 8006360:	200034e0 	.word	0x200034e0

08006364 <aimbot_pid_init>:
		sbc_new_data = 0;
		control_reset();
	}
}

void aimbot_pid_init() {
 8006364:	b480      	push	{r7}
 8006366:	af00      	add	r7, sp, #0
	aimbot_offset.y_offset = 0;
 8006368:	4b1a      	ldr	r3, [pc, #104]	@ (80063d4 <aimbot_pid_init+0x70>)
 800636a:	f04f 0200 	mov.w	r2, #0
 800636e:	605a      	str	r2, [r3, #4]
	aimbot_offset.x_offset = 0;
 8006370:	4b18      	ldr	r3, [pc, #96]	@ (80063d4 <aimbot_pid_init+0x70>)
 8006372:	f04f 0200 	mov.w	r2, #0
 8006376:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.kp = AIMBOT_X_KP;
 8006378:	4b17      	ldr	r3, [pc, #92]	@ (80063d8 <aimbot_pid_init+0x74>)
 800637a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800637e:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.ki = AIMBOT_X_KI;
 8006380:	4b15      	ldr	r3, [pc, #84]	@ (80063d8 <aimbot_pid_init+0x74>)
 8006382:	f04f 0200 	mov.w	r2, #0
 8006386:	605a      	str	r2, [r3, #4]
	aimbot_x_pid.kd = AIMBOT_X_KD;
 8006388:	4b13      	ldr	r3, [pc, #76]	@ (80063d8 <aimbot_pid_init+0x74>)
 800638a:	f04f 0200 	mov.w	r2, #0
 800638e:	609a      	str	r2, [r3, #8]
	aimbot_x_pid.max_out = 1.5;
 8006390:	4b11      	ldr	r3, [pc, #68]	@ (80063d8 <aimbot_pid_init+0x74>)
 8006392:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8006396:	61da      	str	r2, [r3, #28]
	aimbot_x_pid.int_max = AIMBOT_KI_MAX;
 8006398:	4b0f      	ldr	r3, [pc, #60]	@ (80063d8 <aimbot_pid_init+0x74>)
 800639a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800639e:	619a      	str	r2, [r3, #24]

	aimbot_y_pid.kp = AIMBOT_Y_KP;
 80063a0:	4b0e      	ldr	r3, [pc, #56]	@ (80063dc <aimbot_pid_init+0x78>)
 80063a2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80063a6:	601a      	str	r2, [r3, #0]
	aimbot_y_pid.ki = AIMBOT_Y_KI;
 80063a8:	4b0c      	ldr	r3, [pc, #48]	@ (80063dc <aimbot_pid_init+0x78>)
 80063aa:	f04f 0200 	mov.w	r2, #0
 80063ae:	605a      	str	r2, [r3, #4]
	aimbot_y_pid.kd = AIMBOT_Y_KD;
 80063b0:	4b0a      	ldr	r3, [pc, #40]	@ (80063dc <aimbot_pid_init+0x78>)
 80063b2:	f04f 0200 	mov.w	r2, #0
 80063b6:	609a      	str	r2, [r3, #8]
	aimbot_y_pid.max_out = 1.5;
 80063b8:	4b08      	ldr	r3, [pc, #32]	@ (80063dc <aimbot_pid_init+0x78>)
 80063ba:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 80063be:	61da      	str	r2, [r3, #28]
	aimbot_y_pid.int_max = AIMBOT_KI_MAX;
 80063c0:	4b06      	ldr	r3, [pc, #24]	@ (80063dc <aimbot_pid_init+0x78>)
 80063c2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80063c6:	619a      	str	r2, [r3, #24]
}
 80063c8:	bf00      	nop
 80063ca:	46bd      	mov	sp, r7
 80063cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d0:	4770      	bx	lr
 80063d2:	bf00      	nop
 80063d4:	200035b4 	.word	0x200035b4
 80063d8:	20003584 	.word	0x20003584
 80063dc:	20003554 	.word	0x20003554

080063e0 <hud_task>:
ref_inter_robot_data_t graphic_header;
graphic_data_struct_t graphic_data;
ref_frame_header_t send_header;
uint8_t char_buffer[30];

void hud_task(void *argument) {
 80063e0:	b580      	push	{r7, lr}
 80063e2:	b084      	sub	sp, #16
 80063e4:	af00      	add	r7, sp, #0
 80063e6:	6078      	str	r0, [r7, #4]

	enum drawings {
		spinspin, gearing, robot_state, motor_fault, refresh

	};
	while (ref_robot_data.robot_id == 0) {
 80063e8:	e002      	b.n	80063f0 <hud_task+0x10>
		vTaskDelay(10);
 80063ea:	200a      	movs	r0, #10
 80063ec:	f012 f86e 	bl	80184cc <vTaskDelay>
	while (ref_robot_data.robot_id == 0) {
 80063f0:	4b69      	ldr	r3, [pc, #420]	@ (8006598 <hud_task+0x1b8>)
 80063f2:	781b      	ldrb	r3, [r3, #0]
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d0f8      	beq.n	80063ea <hud_task+0xa>
	}
	uint32_t refresh_timer = HAL_GetTick();
 80063f8:	f004 fea2 	bl	800b140 <HAL_GetTick>
 80063fc:	60f8      	str	r0, [r7, #12]

	uint8_t draw_state = spinspin;
 80063fe:	2300      	movs	r3, #0
 8006400:	72fb      	strb	r3, [r7, #11]
	//draw all images
	vTaskDelay(1000);
 8006402:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8006406:	f012 f861 	bl	80184cc <vTaskDelay>
	clear_hud();
 800640a:	f000 fb29 	bl	8006a60 <clear_hud>
	vTaskDelay(150);
 800640e:	2096      	movs	r0, #150	@ 0x96
 8006410:	f012 f85c 	bl	80184cc <vTaskDelay>
	draw_spinspin(0);
 8006414:	2000      	movs	r0, #0
 8006416:	f000 f8c3 	bl	80065a0 <draw_spinspin>
	vTaskDelay(150);
 800641a:	2096      	movs	r0, #150	@ 0x96
 800641c:	f012 f856 	bl	80184cc <vTaskDelay>
	draw_gearing(0);
 8006420:	2000      	movs	r0, #0
 8006422:	f000 f9f5 	bl	8006810 <draw_gearing>
	vTaskDelay(150);
 8006426:	2096      	movs	r0, #150	@ 0x96
 8006428:	f012 f850 	bl	80184cc <vTaskDelay>
	while (1) {
		if (HAL_GetTick() - refresh_timer > 5000){
 800642c:	f004 fe88 	bl	800b140 <HAL_GetTick>
 8006430:	4602      	mov	r2, r0
 8006432:	68fb      	ldr	r3, [r7, #12]
 8006434:	1ad3      	subs	r3, r2, r3
 8006436:	f241 3288 	movw	r2, #5000	@ 0x1388
 800643a:	4293      	cmp	r3, r2
 800643c:	d904      	bls.n	8006448 <hud_task+0x68>
			draw_state = refresh;
 800643e:	2304      	movs	r3, #4
 8006440:	72fb      	strb	r3, [r7, #11]
			refresh_timer = HAL_GetTick();
 8006442:	f004 fe7d 	bl	800b140 <HAL_GetTick>
 8006446:	60f8      	str	r0, [r7, #12]
		}
		switch (ref_robot_data.robot_id) {
 8006448:	4b53      	ldr	r3, [pc, #332]	@ (8006598 <hud_task+0x1b8>)
 800644a:	781b      	ldrb	r3, [r3, #0]
 800644c:	2b06      	cmp	r3, #6
 800644e:	dc27      	bgt.n	80064a0 <hud_task+0xc0>
 8006450:	2b00      	cmp	r3, #0
 8006452:	dc13      	bgt.n	800647c <hud_task+0x9c>
 8006454:	e065      	b.n	8006522 <hud_task+0x142>
 8006456:	3b65      	subs	r3, #101	@ 0x65
 8006458:	2b05      	cmp	r3, #5
 800645a:	d862      	bhi.n	8006522 <hud_task+0x142>
 800645c:	a201      	add	r2, pc, #4	@ (adr r2, 8006464 <hud_task+0x84>)
 800645e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006462:	bf00      	nop
 8006464:	080064e7 	.word	0x080064e7
 8006468:	080064f1 	.word	0x080064f1
 800646c:	080064fb 	.word	0x080064fb
 8006470:	08006505 	.word	0x08006505
 8006474:	0800650f 	.word	0x0800650f
 8006478:	08006519 	.word	0x08006519
 800647c:	3b01      	subs	r3, #1
 800647e:	2b05      	cmp	r3, #5
 8006480:	d84f      	bhi.n	8006522 <hud_task+0x142>
 8006482:	a201      	add	r2, pc, #4	@ (adr r2, 8006488 <hud_task+0xa8>)
 8006484:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006488:	080064ab 	.word	0x080064ab
 800648c:	080064b5 	.word	0x080064b5
 8006490:	080064bf 	.word	0x080064bf
 8006494:	080064c9 	.word	0x080064c9
 8006498:	080064d3 	.word	0x080064d3
 800649c:	080064dd 	.word	0x080064dd
 80064a0:	2b6a      	cmp	r3, #106	@ 0x6a
 80064a2:	dc3e      	bgt.n	8006522 <hud_task+0x142>
 80064a4:	2b65      	cmp	r3, #101	@ 0x65
 80064a6:	dad6      	bge.n	8006456 <hud_task+0x76>
 80064a8:	e03b      	b.n	8006522 <hud_task+0x142>
		case 1:
			g_client_id = 0x101;
 80064aa:	4b3c      	ldr	r3, [pc, #240]	@ (800659c <hud_task+0x1bc>)
 80064ac:	f240 1201 	movw	r2, #257	@ 0x101
 80064b0:	801a      	strh	r2, [r3, #0]
			break;
 80064b2:	e03a      	b.n	800652a <hud_task+0x14a>
		case 2:
			g_client_id = 0x102;
 80064b4:	4b39      	ldr	r3, [pc, #228]	@ (800659c <hud_task+0x1bc>)
 80064b6:	f44f 7281 	mov.w	r2, #258	@ 0x102
 80064ba:	801a      	strh	r2, [r3, #0]
			break;
 80064bc:	e035      	b.n	800652a <hud_task+0x14a>
		case 3:
			g_client_id = 0x103;
 80064be:	4b37      	ldr	r3, [pc, #220]	@ (800659c <hud_task+0x1bc>)
 80064c0:	f240 1203 	movw	r2, #259	@ 0x103
 80064c4:	801a      	strh	r2, [r3, #0]
			break;
 80064c6:	e030      	b.n	800652a <hud_task+0x14a>
		case 4:
			g_client_id = 0x104;
 80064c8:	4b34      	ldr	r3, [pc, #208]	@ (800659c <hud_task+0x1bc>)
 80064ca:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80064ce:	801a      	strh	r2, [r3, #0]
			break;
 80064d0:	e02b      	b.n	800652a <hud_task+0x14a>
		case 5:
			g_client_id = 0x105;
 80064d2:	4b32      	ldr	r3, [pc, #200]	@ (800659c <hud_task+0x1bc>)
 80064d4:	f240 1205 	movw	r2, #261	@ 0x105
 80064d8:	801a      	strh	r2, [r3, #0]
			break;
 80064da:	e026      	b.n	800652a <hud_task+0x14a>
		case 6:
			g_client_id = 0x106;
 80064dc:	4b2f      	ldr	r3, [pc, #188]	@ (800659c <hud_task+0x1bc>)
 80064de:	f44f 7283 	mov.w	r2, #262	@ 0x106
 80064e2:	801a      	strh	r2, [r3, #0]
			break;
 80064e4:	e021      	b.n	800652a <hud_task+0x14a>

		case 101:
			g_client_id = 0x165;
 80064e6:	4b2d      	ldr	r3, [pc, #180]	@ (800659c <hud_task+0x1bc>)
 80064e8:	f240 1265 	movw	r2, #357	@ 0x165
 80064ec:	801a      	strh	r2, [r3, #0]
			break;
 80064ee:	e01c      	b.n	800652a <hud_task+0x14a>
		case 102:
			g_client_id = 0x166;
 80064f0:	4b2a      	ldr	r3, [pc, #168]	@ (800659c <hud_task+0x1bc>)
 80064f2:	f44f 72b3 	mov.w	r2, #358	@ 0x166
 80064f6:	801a      	strh	r2, [r3, #0]
			break;
 80064f8:	e017      	b.n	800652a <hud_task+0x14a>
		case 103:
			g_client_id = 0x167;
 80064fa:	4b28      	ldr	r3, [pc, #160]	@ (800659c <hud_task+0x1bc>)
 80064fc:	f240 1267 	movw	r2, #359	@ 0x167
 8006500:	801a      	strh	r2, [r3, #0]
			break;
 8006502:	e012      	b.n	800652a <hud_task+0x14a>
		case 104:
			g_client_id = 0x168;
 8006504:	4b25      	ldr	r3, [pc, #148]	@ (800659c <hud_task+0x1bc>)
 8006506:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 800650a:	801a      	strh	r2, [r3, #0]
			break;
 800650c:	e00d      	b.n	800652a <hud_task+0x14a>
		case 105:
			g_client_id = 0x169;
 800650e:	4b23      	ldr	r3, [pc, #140]	@ (800659c <hud_task+0x1bc>)
 8006510:	f240 1269 	movw	r2, #361	@ 0x169
 8006514:	801a      	strh	r2, [r3, #0]
			break;
 8006516:	e008      	b.n	800652a <hud_task+0x14a>
		case 106:
			g_client_id = 0x16A;
 8006518:	4b20      	ldr	r3, [pc, #128]	@ (800659c <hud_task+0x1bc>)
 800651a:	f44f 72b5 	mov.w	r2, #362	@ 0x16a
 800651e:	801a      	strh	r2, [r3, #0]
			break;
 8006520:	e003      	b.n	800652a <hud_task+0x14a>
		default:
			g_client_id = 0;
 8006522:	4b1e      	ldr	r3, [pc, #120]	@ (800659c <hud_task+0x1bc>)
 8006524:	2200      	movs	r2, #0
 8006526:	801a      	strh	r2, [r3, #0]
			break;
 8006528:	bf00      	nop

		}



		switch (draw_state) {
 800652a:	7afb      	ldrb	r3, [r7, #11]
 800652c:	2b04      	cmp	r3, #4
 800652e:	d82d      	bhi.n	800658c <hud_task+0x1ac>
 8006530:	a201      	add	r2, pc, #4	@ (adr r2, 8006538 <hud_task+0x158>)
 8006532:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006536:	bf00      	nop
 8006538:	0800654d 	.word	0x0800654d
 800653c:	08006559 	.word	0x08006559
 8006540:	0800658d 	.word	0x0800658d
 8006544:	0800658d 	.word	0x0800658d
 8006548:	08006565 	.word	0x08006565
		case spinspin:
			draw_spinspin(1);
 800654c:	2001      	movs	r0, #1
 800654e:	f000 f827 	bl	80065a0 <draw_spinspin>
			draw_state = gearing;
 8006552:	2301      	movs	r3, #1
 8006554:	72fb      	strb	r3, [r7, #11]
			break;
 8006556:	e01a      	b.n	800658e <hud_task+0x1ae>
		case gearing:
			draw_gearing(1);
 8006558:	2001      	movs	r0, #1
 800655a:	f000 f959 	bl	8006810 <draw_gearing>
			draw_state = spinspin;
 800655e:	2300      	movs	r3, #0
 8006560:	72fb      	strb	r3, [r7, #11]
			break;
 8006562:	e014      	b.n	800658e <hud_task+0x1ae>
		case robot_state:
			break;
		case motor_fault:
			break;
		case refresh:
			clear_hud();
 8006564:	f000 fa7c 	bl	8006a60 <clear_hud>
			vTaskDelay(150);
 8006568:	2096      	movs	r0, #150	@ 0x96
 800656a:	f011 ffaf 	bl	80184cc <vTaskDelay>
			draw_spinspin(0);
 800656e:	2000      	movs	r0, #0
 8006570:	f000 f816 	bl	80065a0 <draw_spinspin>
			vTaskDelay(150);
 8006574:	2096      	movs	r0, #150	@ 0x96
 8006576:	f011 ffa9 	bl	80184cc <vTaskDelay>
			draw_gearing(0);
 800657a:	2000      	movs	r0, #0
 800657c:	f000 f948 	bl	8006810 <draw_gearing>
			vTaskDelay(150);
 8006580:	2096      	movs	r0, #150	@ 0x96
 8006582:	f011 ffa3 	bl	80184cc <vTaskDelay>
			draw_state = spinspin;
 8006586:	2300      	movs	r3, #0
 8006588:	72fb      	strb	r3, [r7, #11]
			break;
 800658a:	e000      	b.n	800658e <hud_task+0x1ae>
		default:
			break;
 800658c:	bf00      	nop
		}
		vTaskDelay(150);
 800658e:	2096      	movs	r0, #150	@ 0x96
 8006590:	f011 ff9c 	bl	80184cc <vTaskDelay>
		if (HAL_GetTick() - refresh_timer > 5000){
 8006594:	e74a      	b.n	800642c <hud_task+0x4c>
 8006596:	bf00      	nop
 8006598:	20003860 	.word	0x20003860
 800659c:	200035bc 	.word	0x200035bc

080065a0 <draw_spinspin>:
//	else if (&buffer_size > HUD_BUFFER_SIZE){
//		return num_obj;
//	}
}

void draw_spinspin(uint8_t modify) {
 80065a0:	b590      	push	{r4, r7, lr}
 80065a2:	b085      	sub	sp, #20
 80065a4:	af00      	add	r7, sp, #0
 80065a6:	4603      	mov	r3, r0
 80065a8:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 80065aa:	2300      	movs	r3, #0
 80065ac:	60bb      	str	r3, [r7, #8]
	uint8_t char_len = 0;
 80065ae:	2300      	movs	r3, #0
 80065b0:	73fb      	strb	r3, [r7, #15]
	curr_pos = 0;
 80065b2:	2300      	movs	r3, #0
 80065b4:	60bb      	str	r3, [r7, #8]
	if (g_spinspin_mode == 0) {
 80065b6:	4b8a      	ldr	r3, [pc, #552]	@ (80067e0 <draw_spinspin+0x240>)
 80065b8:	681b      	ldr	r3, [r3, #0]
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d10d      	bne.n	80065da <draw_spinspin+0x3a>
		graphic_data.color = 4; //orange
 80065be:	4a89      	ldr	r2, [pc, #548]	@ (80067e4 <draw_spinspin+0x244>)
 80065c0:	7913      	ldrb	r3, [r2, #4]
 80065c2:	2104      	movs	r1, #4
 80065c4:	f361 0385 	bfi	r3, r1, #2, #4
 80065c8:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN OFF");
 80065ca:	4a87      	ldr	r2, [pc, #540]	@ (80067e8 <draw_spinspin+0x248>)
 80065cc:	211e      	movs	r1, #30
 80065ce:	4887      	ldr	r0, [pc, #540]	@ (80067ec <draw_spinspin+0x24c>)
 80065d0:	f014 fc50 	bl	801ae74 <snprintf>
 80065d4:	4603      	mov	r3, r0
 80065d6:	73fb      	strb	r3, [r7, #15]
 80065d8:	e00c      	b.n	80065f4 <draw_spinspin+0x54>
	} else {
		graphic_data.color = 3; //orange
 80065da:	4a82      	ldr	r2, [pc, #520]	@ (80067e4 <draw_spinspin+0x244>)
 80065dc:	7913      	ldrb	r3, [r2, #4]
 80065de:	2103      	movs	r1, #3
 80065e0:	f361 0385 	bfi	r3, r1, #2, #4
 80065e4:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN ON");
 80065e6:	4a82      	ldr	r2, [pc, #520]	@ (80067f0 <draw_spinspin+0x250>)
 80065e8:	211e      	movs	r1, #30
 80065ea:	4880      	ldr	r0, [pc, #512]	@ (80067ec <draw_spinspin+0x24c>)
 80065ec:	f014 fc42 	bl	801ae74 <snprintf>
 80065f0:	4603      	mov	r3, r0
 80065f2:	73fb      	strb	r3, [r7, #15]
	}
	send_header.start_frame = 0xA5;
 80065f4:	4b7f      	ldr	r3, [pc, #508]	@ (80067f4 <draw_spinspin+0x254>)
 80065f6:	22a5      	movs	r2, #165	@ 0xa5
 80065f8:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 80065fa:	4b7e      	ldr	r3, [pc, #504]	@ (80067f4 <draw_spinspin+0x254>)
 80065fc:	2200      	movs	r2, #0
 80065fe:	f042 0201 	orr.w	r2, r2, #1
 8006602:	715a      	strb	r2, [r3, #5]
 8006604:	2200      	movs	r2, #0
 8006606:	f042 0203 	orr.w	r2, r2, #3
 800660a:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 800660c:	4b7a      	ldr	r3, [pc, #488]	@ (80067f8 <draw_spinspin+0x258>)
 800660e:	781b      	ldrb	r3, [r3, #0]
 8006610:	1c5a      	adds	r2, r3, #1
 8006612:	b2d1      	uxtb	r1, r2
 8006614:	4a78      	ldr	r2, [pc, #480]	@ (80067f8 <draw_spinspin+0x258>)
 8006616:	7011      	strb	r1, [r2, #0]
 8006618:	4a76      	ldr	r2, [pc, #472]	@ (80067f4 <draw_spinspin+0x254>)
 800661a:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 800661c:	7bfb      	ldrb	r3, [r7, #15]
 800661e:	b29b      	uxth	r3, r3
 8006620:	3315      	adds	r3, #21
 8006622:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8006624:	4b73      	ldr	r3, [pc, #460]	@ (80067f4 <draw_spinspin+0x254>)
 8006626:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 800662a:	4b73      	ldr	r3, [pc, #460]	@ (80067f8 <draw_spinspin+0x258>)
 800662c:	781b      	ldrb	r3, [r3, #0]
 800662e:	1c5a      	adds	r2, r3, #1
 8006630:	b2d1      	uxtb	r1, r2
 8006632:	4a71      	ldr	r2, [pc, #452]	@ (80067f8 <draw_spinspin+0x258>)
 8006634:	7011      	strb	r1, [r2, #0]
 8006636:	4a6f      	ldr	r2, [pc, #444]	@ (80067f4 <draw_spinspin+0x254>)
 8006638:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 800663a:	68bb      	ldr	r3, [r7, #8]
 800663c:	4a6f      	ldr	r2, [pc, #444]	@ (80067fc <draw_spinspin+0x25c>)
 800663e:	4413      	add	r3, r2
 8006640:	4a6c      	ldr	r2, [pc, #432]	@ (80067f4 <draw_spinspin+0x254>)
 8006642:	6810      	ldr	r0, [r2, #0]
 8006644:	6018      	str	r0, [r3, #0]
 8006646:	8891      	ldrh	r1, [r2, #4]
 8006648:	7992      	ldrb	r2, [r2, #6]
 800664a:	8099      	strh	r1, [r3, #4]
 800664c:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 800664e:	68bb      	ldr	r3, [r7, #8]
 8006650:	3307      	adds	r3, #7
 8006652:	60bb      	str	r3, [r7, #8]
	append_CRC8_check_sum(tx_buffer, 5);
 8006654:	2105      	movs	r1, #5
 8006656:	4869      	ldr	r0, [pc, #420]	@ (80067fc <draw_spinspin+0x25c>)
 8006658:	f7fa fcd7 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 800665c:	4b68      	ldr	r3, [pc, #416]	@ (8006800 <draw_spinspin+0x260>)
 800665e:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006662:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 8006664:	4b67      	ldr	r3, [pc, #412]	@ (8006804 <draw_spinspin+0x264>)
 8006666:	781b      	ldrb	r3, [r3, #0]
 8006668:	461a      	mov	r2, r3
 800666a:	4b65      	ldr	r3, [pc, #404]	@ (8006800 <draw_spinspin+0x260>)
 800666c:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 800666e:	4b66      	ldr	r3, [pc, #408]	@ (8006808 <draw_spinspin+0x268>)
 8006670:	881a      	ldrh	r2, [r3, #0]
 8006672:	4b63      	ldr	r3, [pc, #396]	@ (8006800 <draw_spinspin+0x260>)
 8006674:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 8006676:	68bb      	ldr	r3, [r7, #8]
 8006678:	4a60      	ldr	r2, [pc, #384]	@ (80067fc <draw_spinspin+0x25c>)
 800667a:	4413      	add	r3, r2
 800667c:	4a60      	ldr	r2, [pc, #384]	@ (8006800 <draw_spinspin+0x260>)
 800667e:	6810      	ldr	r0, [r2, #0]
 8006680:	6018      	str	r0, [r3, #0]
 8006682:	8892      	ldrh	r2, [r2, #4]
 8006684:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 8006686:	68bb      	ldr	r3, [r7, #8]
 8006688:	3306      	adds	r3, #6
 800668a:	60bb      	str	r3, [r7, #8]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 800668c:	4b55      	ldr	r3, [pc, #340]	@ (80067e4 <draw_spinspin+0x244>)
 800668e:	2200      	movs	r2, #0
 8006690:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 8006692:	4b54      	ldr	r3, [pc, #336]	@ (80067e4 <draw_spinspin+0x244>)
 8006694:	2200      	movs	r2, #0
 8006696:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 1;
 8006698:	4b52      	ldr	r3, [pc, #328]	@ (80067e4 <draw_spinspin+0x244>)
 800669a:	2201      	movs	r2, #1
 800669c:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 800669e:	4b51      	ldr	r3, [pc, #324]	@ (80067e4 <draw_spinspin+0x244>)
 80066a0:	78da      	ldrb	r2, [r3, #3]
 80066a2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80066a6:	70da      	strb	r2, [r3, #3]
 80066a8:	791a      	ldrb	r2, [r3, #4]
 80066aa:	f022 0203 	bic.w	r2, r2, #3
 80066ae:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 80066b0:	79fb      	ldrb	r3, [r7, #7]
 80066b2:	2b01      	cmp	r3, #1
 80066b4:	d106      	bne.n	80066c4 <draw_spinspin+0x124>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80066b6:	4a4b      	ldr	r2, [pc, #300]	@ (80067e4 <draw_spinspin+0x244>)
 80066b8:	78d3      	ldrb	r3, [r2, #3]
 80066ba:	2102      	movs	r1, #2
 80066bc:	f361 0302 	bfi	r3, r1, #0, #3
 80066c0:	70d3      	strb	r3, [r2, #3]
 80066c2:	e005      	b.n	80066d0 <draw_spinspin+0x130>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80066c4:	4a47      	ldr	r2, [pc, #284]	@ (80067e4 <draw_spinspin+0x244>)
 80066c6:	78d3      	ldrb	r3, [r2, #3]
 80066c8:	2101      	movs	r1, #1
 80066ca:	f361 0302 	bfi	r3, r1, #0, #3
 80066ce:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 80066d0:	4a44      	ldr	r2, [pc, #272]	@ (80067e4 <draw_spinspin+0x244>)
 80066d2:	78d3      	ldrb	r3, [r2, #3]
 80066d4:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80066d8:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 80066da:	4b42      	ldr	r3, [pc, #264]	@ (80067e4 <draw_spinspin+0x244>)
 80066dc:	791a      	ldrb	r2, [r3, #4]
 80066de:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80066e2:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 80066e6:	711a      	strb	r2, [r3, #4]
 80066e8:	795a      	ldrb	r2, [r3, #5]
 80066ea:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80066ee:	f042 0207 	orr.w	r2, r2, #7
 80066f2:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 80066f4:	7bfb      	ldrb	r3, [r7, #15]
 80066f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80066fa:	b29a      	uxth	r2, r3
 80066fc:	4b39      	ldr	r3, [pc, #228]	@ (80067e4 <draw_spinspin+0x244>)
 80066fe:	f002 0101 	and.w	r1, r2, #1
 8006702:	01cc      	lsls	r4, r1, #7
 8006704:	7959      	ldrb	r1, [r3, #5]
 8006706:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800670a:	4608      	mov	r0, r1
 800670c:	4621      	mov	r1, r4
 800670e:	4301      	orrs	r1, r0
 8006710:	7159      	strb	r1, [r3, #5]
 8006712:	0852      	lsrs	r2, r2, #1
 8006714:	b292      	uxth	r2, r2
 8006716:	b2d2      	uxtb	r2, r2
 8006718:	2100      	movs	r1, #0
 800671a:	430a      	orrs	r2, r1
 800671c:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 800671e:	4b31      	ldr	r3, [pc, #196]	@ (80067e4 <draw_spinspin+0x244>)
 8006720:	2200      	movs	r2, #0
 8006722:	f042 0207 	orr.w	r2, r2, #7
 8006726:	71da      	strb	r2, [r3, #7]
 8006728:	7a1a      	ldrb	r2, [r3, #8]
 800672a:	f022 0203 	bic.w	r2, r2, #3
 800672e:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8006730:	4b2c      	ldr	r3, [pc, #176]	@ (80067e4 <draw_spinspin+0x244>)
 8006732:	78da      	ldrb	r2, [r3, #3]
 8006734:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006738:	70da      	strb	r2, [r3, #3]
 800673a:	791a      	ldrb	r2, [r3, #4]
 800673c:	f022 0203 	bic.w	r2, r2, #3
 8006740:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8006742:	4b28      	ldr	r3, [pc, #160]	@ (80067e4 <draw_spinspin+0x244>)
 8006744:	7a1a      	ldrb	r2, [r3, #8]
 8006746:	f002 0203 	and.w	r2, r2, #3
 800674a:	f062 0237 	orn	r2, r2, #55	@ 0x37
 800674e:	721a      	strb	r2, [r3, #8]
 8006750:	7a5a      	ldrb	r2, [r3, #9]
 8006752:	f022 021f 	bic.w	r2, r2, #31
 8006756:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 600;
 8006758:	4b22      	ldr	r3, [pc, #136]	@ (80067e4 <draw_spinspin+0x244>)
 800675a:	7a5a      	ldrb	r2, [r3, #9]
 800675c:	f002 021f 	and.w	r2, r2, #31
 8006760:	725a      	strb	r2, [r3, #9]
 8006762:	2200      	movs	r2, #0
 8006764:	f042 024b 	orr.w	r2, r2, #75	@ 0x4b
 8006768:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 800676a:	68bb      	ldr	r3, [r7, #8]
 800676c:	4a23      	ldr	r2, [pc, #140]	@ (80067fc <draw_spinspin+0x25c>)
 800676e:	4413      	add	r3, r2
 8006770:	4a1c      	ldr	r2, [pc, #112]	@ (80067e4 <draw_spinspin+0x244>)
 8006772:	461c      	mov	r4, r3
 8006774:	4613      	mov	r3, r2
 8006776:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006778:	6020      	str	r0, [r4, #0]
 800677a:	6061      	str	r1, [r4, #4]
 800677c:	60a2      	str	r2, [r4, #8]
 800677e:	881a      	ldrh	r2, [r3, #0]
 8006780:	789b      	ldrb	r3, [r3, #2]
 8006782:	81a2      	strh	r2, [r4, #12]
 8006784:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8006786:	68bb      	ldr	r3, [r7, #8]
 8006788:	330f      	adds	r3, #15
 800678a:	60bb      	str	r3, [r7, #8]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 800678c:	68bb      	ldr	r3, [r7, #8]
 800678e:	4a1b      	ldr	r2, [pc, #108]	@ (80067fc <draw_spinspin+0x25c>)
 8006790:	4413      	add	r3, r2
 8006792:	7bfa      	ldrb	r2, [r7, #15]
 8006794:	4915      	ldr	r1, [pc, #84]	@ (80067ec <draw_spinspin+0x24c>)
 8006796:	4618      	mov	r0, r3
 8006798:	f014 fc8c 	bl	801b0b4 <memcpy>
	curr_pos += char_len;
 800679c:	7bfb      	ldrb	r3, [r7, #15]
 800679e:	68ba      	ldr	r2, [r7, #8]
 80067a0:	4413      	add	r3, r2
 80067a2:	60bb      	str	r3, [r7, #8]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 80067a4:	68bb      	ldr	r3, [r7, #8]
 80067a6:	3302      	adds	r3, #2
 80067a8:	4619      	mov	r1, r3
 80067aa:	4814      	ldr	r0, [pc, #80]	@ (80067fc <draw_spinspin+0x25c>)
 80067ac:	f7fa fcb0 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80067b0:	e002      	b.n	80067b8 <draw_spinspin+0x218>
		vTaskDelay(1);
 80067b2:	2001      	movs	r0, #1
 80067b4:	f011 fe8a 	bl	80184cc <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80067b8:	4b14      	ldr	r3, [pc, #80]	@ (800680c <draw_spinspin+0x26c>)
 80067ba:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80067be:	b2db      	uxtb	r3, r3
 80067c0:	2b20      	cmp	r3, #32
 80067c2:	d1f6      	bne.n	80067b2 <draw_spinspin+0x212>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 80067c4:	68bb      	ldr	r3, [r7, #8]
 80067c6:	b29b      	uxth	r3, r3
 80067c8:	3302      	adds	r3, #2
 80067ca:	b29b      	uxth	r3, r3
 80067cc:	461a      	mov	r2, r3
 80067ce:	490b      	ldr	r1, [pc, #44]	@ (80067fc <draw_spinspin+0x25c>)
 80067d0:	480e      	ldr	r0, [pc, #56]	@ (800680c <draw_spinspin+0x26c>)
 80067d2:	f00b ff13 	bl	80125fc <HAL_UART_Transmit_DMA>
}
 80067d6:	bf00      	nop
 80067d8:	3714      	adds	r7, #20
 80067da:	46bd      	mov	sp, r7
 80067dc:	bd90      	pop	{r4, r7, pc}
 80067de:	bf00      	nop
 80067e0:	2000353c 	.word	0x2000353c
 80067e4:	200036c8 	.word	0x200036c8
 80067e8:	08020fe4 	.word	0x08020fe4
 80067ec:	200036e0 	.word	0x200036e0
 80067f0:	08020ff0 	.word	0x08020ff0
 80067f4:	200036d8 	.word	0x200036d8
 80067f8:	200038c4 	.word	0x200038c4
 80067fc:	200035c0 	.word	0x200035c0
 8006800:	200036c0 	.word	0x200036c0
 8006804:	20003860 	.word	0x20003860
 8006808:	200035bc 	.word	0x200035bc
 800680c:	20001c70 	.word	0x20001c70

08006810 <draw_gearing>:

void draw_gearing(uint8_t modify) {
 8006810:	b590      	push	{r4, r7, lr}
 8006812:	b085      	sub	sp, #20
 8006814:	af00      	add	r7, sp, #0
 8006816:	4603      	mov	r3, r0
 8006818:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 800681a:	2300      	movs	r3, #0
 800681c:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 800681e:	2300      	movs	r3, #0
 8006820:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 8006822:	2300      	movs	r3, #0
 8006824:	60fb      	str	r3, [r7, #12]
	graphic_data.color = 6; //CYAN
 8006826:	4a83      	ldr	r2, [pc, #524]	@ (8006a34 <draw_gearing+0x224>)
 8006828:	7913      	ldrb	r3, [r2, #4]
 800682a:	2106      	movs	r1, #6
 800682c:	f361 0385 	bfi	r3, r1, #2, #4
 8006830:	7113      	strb	r3, [r2, #4]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 8006832:	4b81      	ldr	r3, [pc, #516]	@ (8006a38 <draw_gearing+0x228>)
 8006834:	781b      	ldrb	r3, [r3, #0]
 8006836:	4a81      	ldr	r2, [pc, #516]	@ (8006a3c <draw_gearing+0x22c>)
 8006838:	211e      	movs	r1, #30
 800683a:	4881      	ldr	r0, [pc, #516]	@ (8006a40 <draw_gearing+0x230>)
 800683c:	f014 fb1a 	bl	801ae74 <snprintf>
 8006840:	4603      	mov	r3, r0
 8006842:	72fb      	strb	r3, [r7, #11]
	send_header.start_frame = 0xA5;
 8006844:	4b7f      	ldr	r3, [pc, #508]	@ (8006a44 <draw_gearing+0x234>)
 8006846:	22a5      	movs	r2, #165	@ 0xa5
 8006848:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 800684a:	4b7e      	ldr	r3, [pc, #504]	@ (8006a44 <draw_gearing+0x234>)
 800684c:	2200      	movs	r2, #0
 800684e:	f042 0201 	orr.w	r2, r2, #1
 8006852:	715a      	strb	r2, [r3, #5]
 8006854:	2200      	movs	r2, #0
 8006856:	f042 0203 	orr.w	r2, r2, #3
 800685a:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 800685c:	4b7a      	ldr	r3, [pc, #488]	@ (8006a48 <draw_gearing+0x238>)
 800685e:	781b      	ldrb	r3, [r3, #0]
 8006860:	1c5a      	adds	r2, r3, #1
 8006862:	b2d1      	uxtb	r1, r2
 8006864:	4a78      	ldr	r2, [pc, #480]	@ (8006a48 <draw_gearing+0x238>)
 8006866:	7011      	strb	r1, [r2, #0]
 8006868:	4a76      	ldr	r2, [pc, #472]	@ (8006a44 <draw_gearing+0x234>)
 800686a:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 800686c:	7afb      	ldrb	r3, [r7, #11]
 800686e:	b29b      	uxth	r3, r3
 8006870:	3315      	adds	r3, #21
 8006872:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8006874:	4b73      	ldr	r3, [pc, #460]	@ (8006a44 <draw_gearing+0x234>)
 8006876:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 800687a:	4b73      	ldr	r3, [pc, #460]	@ (8006a48 <draw_gearing+0x238>)
 800687c:	781b      	ldrb	r3, [r3, #0]
 800687e:	1c5a      	adds	r2, r3, #1
 8006880:	b2d1      	uxtb	r1, r2
 8006882:	4a71      	ldr	r2, [pc, #452]	@ (8006a48 <draw_gearing+0x238>)
 8006884:	7011      	strb	r1, [r2, #0]
 8006886:	4a6f      	ldr	r2, [pc, #444]	@ (8006a44 <draw_gearing+0x234>)
 8006888:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	4a6f      	ldr	r2, [pc, #444]	@ (8006a4c <draw_gearing+0x23c>)
 800688e:	4413      	add	r3, r2
 8006890:	4a6c      	ldr	r2, [pc, #432]	@ (8006a44 <draw_gearing+0x234>)
 8006892:	6810      	ldr	r0, [r2, #0]
 8006894:	6018      	str	r0, [r3, #0]
 8006896:	8891      	ldrh	r1, [r2, #4]
 8006898:	7992      	ldrb	r2, [r2, #6]
 800689a:	8099      	strh	r1, [r3, #4]
 800689c:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 800689e:	68fb      	ldr	r3, [r7, #12]
 80068a0:	3307      	adds	r3, #7
 80068a2:	60fb      	str	r3, [r7, #12]
	append_CRC8_check_sum(tx_buffer, 5);
 80068a4:	2105      	movs	r1, #5
 80068a6:	4869      	ldr	r0, [pc, #420]	@ (8006a4c <draw_gearing+0x23c>)
 80068a8:	f7fa fbaf 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 80068ac:	4b68      	ldr	r3, [pc, #416]	@ (8006a50 <draw_gearing+0x240>)
 80068ae:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80068b2:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 80068b4:	4b67      	ldr	r3, [pc, #412]	@ (8006a54 <draw_gearing+0x244>)
 80068b6:	781b      	ldrb	r3, [r3, #0]
 80068b8:	461a      	mov	r2, r3
 80068ba:	4b65      	ldr	r3, [pc, #404]	@ (8006a50 <draw_gearing+0x240>)
 80068bc:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 80068be:	4b66      	ldr	r3, [pc, #408]	@ (8006a58 <draw_gearing+0x248>)
 80068c0:	881a      	ldrh	r2, [r3, #0]
 80068c2:	4b63      	ldr	r3, [pc, #396]	@ (8006a50 <draw_gearing+0x240>)
 80068c4:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 80068c6:	68fb      	ldr	r3, [r7, #12]
 80068c8:	4a60      	ldr	r2, [pc, #384]	@ (8006a4c <draw_gearing+0x23c>)
 80068ca:	4413      	add	r3, r2
 80068cc:	4a60      	ldr	r2, [pc, #384]	@ (8006a50 <draw_gearing+0x240>)
 80068ce:	6810      	ldr	r0, [r2, #0]
 80068d0:	6018      	str	r0, [r3, #0]
 80068d2:	8892      	ldrh	r2, [r2, #4]
 80068d4:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 80068d6:	68fb      	ldr	r3, [r7, #12]
 80068d8:	3306      	adds	r3, #6
 80068da:	60fb      	str	r3, [r7, #12]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 80068dc:	4b55      	ldr	r3, [pc, #340]	@ (8006a34 <draw_gearing+0x224>)
 80068de:	2200      	movs	r2, #0
 80068e0:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 80068e2:	4b54      	ldr	r3, [pc, #336]	@ (8006a34 <draw_gearing+0x224>)
 80068e4:	2200      	movs	r2, #0
 80068e6:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 2;
 80068e8:	4b52      	ldr	r3, [pc, #328]	@ (8006a34 <draw_gearing+0x224>)
 80068ea:	2202      	movs	r2, #2
 80068ec:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 80068ee:	4b51      	ldr	r3, [pc, #324]	@ (8006a34 <draw_gearing+0x224>)
 80068f0:	78da      	ldrb	r2, [r3, #3]
 80068f2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80068f6:	70da      	strb	r2, [r3, #3]
 80068f8:	791a      	ldrb	r2, [r3, #4]
 80068fa:	f022 0203 	bic.w	r2, r2, #3
 80068fe:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8006900:	79fb      	ldrb	r3, [r7, #7]
 8006902:	2b01      	cmp	r3, #1
 8006904:	d106      	bne.n	8006914 <draw_gearing+0x104>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8006906:	4a4b      	ldr	r2, [pc, #300]	@ (8006a34 <draw_gearing+0x224>)
 8006908:	78d3      	ldrb	r3, [r2, #3]
 800690a:	2102      	movs	r1, #2
 800690c:	f361 0302 	bfi	r3, r1, #0, #3
 8006910:	70d3      	strb	r3, [r2, #3]
 8006912:	e005      	b.n	8006920 <draw_gearing+0x110>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8006914:	4a47      	ldr	r2, [pc, #284]	@ (8006a34 <draw_gearing+0x224>)
 8006916:	78d3      	ldrb	r3, [r2, #3]
 8006918:	2101      	movs	r1, #1
 800691a:	f361 0302 	bfi	r3, r1, #0, #3
 800691e:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8006920:	4a44      	ldr	r2, [pc, #272]	@ (8006a34 <draw_gearing+0x224>)
 8006922:	78d3      	ldrb	r3, [r2, #3]
 8006924:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8006928:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 800692a:	4b42      	ldr	r3, [pc, #264]	@ (8006a34 <draw_gearing+0x224>)
 800692c:	791a      	ldrb	r2, [r3, #4]
 800692e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006932:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 8006936:	711a      	strb	r2, [r3, #4]
 8006938:	795a      	ldrb	r2, [r3, #5]
 800693a:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800693e:	f042 0207 	orr.w	r2, r2, #7
 8006942:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 8006944:	7afb      	ldrb	r3, [r7, #11]
 8006946:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800694a:	b29a      	uxth	r2, r3
 800694c:	4b39      	ldr	r3, [pc, #228]	@ (8006a34 <draw_gearing+0x224>)
 800694e:	f002 0101 	and.w	r1, r2, #1
 8006952:	01cc      	lsls	r4, r1, #7
 8006954:	7959      	ldrb	r1, [r3, #5]
 8006956:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800695a:	4608      	mov	r0, r1
 800695c:	4621      	mov	r1, r4
 800695e:	4301      	orrs	r1, r0
 8006960:	7159      	strb	r1, [r3, #5]
 8006962:	0852      	lsrs	r2, r2, #1
 8006964:	b292      	uxth	r2, r2
 8006966:	b2d2      	uxtb	r2, r2
 8006968:	2100      	movs	r1, #0
 800696a:	430a      	orrs	r2, r1
 800696c:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 800696e:	4b31      	ldr	r3, [pc, #196]	@ (8006a34 <draw_gearing+0x224>)
 8006970:	2200      	movs	r2, #0
 8006972:	f042 0207 	orr.w	r2, r2, #7
 8006976:	71da      	strb	r2, [r3, #7]
 8006978:	7a1a      	ldrb	r2, [r3, #8]
 800697a:	f022 0203 	bic.w	r2, r2, #3
 800697e:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8006980:	4b2c      	ldr	r3, [pc, #176]	@ (8006a34 <draw_gearing+0x224>)
 8006982:	78da      	ldrb	r2, [r3, #3]
 8006984:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006988:	70da      	strb	r2, [r3, #3]
 800698a:	791a      	ldrb	r2, [r3, #4]
 800698c:	f022 0203 	bic.w	r2, r2, #3
 8006990:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8006992:	4b28      	ldr	r3, [pc, #160]	@ (8006a34 <draw_gearing+0x224>)
 8006994:	7a1a      	ldrb	r2, [r3, #8]
 8006996:	f002 0203 	and.w	r2, r2, #3
 800699a:	f062 0237 	orn	r2, r2, #55	@ 0x37
 800699e:	721a      	strb	r2, [r3, #8]
 80069a0:	7a5a      	ldrb	r2, [r3, #9]
 80069a2:	f022 021f 	bic.w	r2, r2, #31
 80069a6:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 650;
 80069a8:	4b22      	ldr	r3, [pc, #136]	@ (8006a34 <draw_gearing+0x224>)
 80069aa:	7a5a      	ldrb	r2, [r3, #9]
 80069ac:	f002 021f 	and.w	r2, r2, #31
 80069b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069b4:	725a      	strb	r2, [r3, #9]
 80069b6:	2200      	movs	r2, #0
 80069b8:	f042 0251 	orr.w	r2, r2, #81	@ 0x51
 80069bc:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	4a22      	ldr	r2, [pc, #136]	@ (8006a4c <draw_gearing+0x23c>)
 80069c2:	4413      	add	r3, r2
 80069c4:	4a1b      	ldr	r2, [pc, #108]	@ (8006a34 <draw_gearing+0x224>)
 80069c6:	461c      	mov	r4, r3
 80069c8:	4613      	mov	r3, r2
 80069ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 80069cc:	6020      	str	r0, [r4, #0]
 80069ce:	6061      	str	r1, [r4, #4]
 80069d0:	60a2      	str	r2, [r4, #8]
 80069d2:	881a      	ldrh	r2, [r3, #0]
 80069d4:	789b      	ldrb	r3, [r3, #2]
 80069d6:	81a2      	strh	r2, [r4, #12]
 80069d8:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	330f      	adds	r3, #15
 80069de:	60fb      	str	r3, [r7, #12]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	4a1a      	ldr	r2, [pc, #104]	@ (8006a4c <draw_gearing+0x23c>)
 80069e4:	4413      	add	r3, r2
 80069e6:	7afa      	ldrb	r2, [r7, #11]
 80069e8:	4915      	ldr	r1, [pc, #84]	@ (8006a40 <draw_gearing+0x230>)
 80069ea:	4618      	mov	r0, r3
 80069ec:	f014 fb62 	bl	801b0b4 <memcpy>
	curr_pos += char_len;
 80069f0:	7afb      	ldrb	r3, [r7, #11]
 80069f2:	68fa      	ldr	r2, [r7, #12]
 80069f4:	4413      	add	r3, r2
 80069f6:	60fb      	str	r3, [r7, #12]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	3302      	adds	r3, #2
 80069fc:	4619      	mov	r1, r3
 80069fe:	4813      	ldr	r0, [pc, #76]	@ (8006a4c <draw_gearing+0x23c>)
 8006a00:	f7fa fb86 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006a04:	e002      	b.n	8006a0c <draw_gearing+0x1fc>
		vTaskDelay(1);
 8006a06:	2001      	movs	r0, #1
 8006a08:	f011 fd60 	bl	80184cc <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006a0c:	4b13      	ldr	r3, [pc, #76]	@ (8006a5c <draw_gearing+0x24c>)
 8006a0e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006a12:	b2db      	uxtb	r3, r3
 8006a14:	2b20      	cmp	r3, #32
 8006a16:	d1f6      	bne.n	8006a06 <draw_gearing+0x1f6>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8006a18:	68fb      	ldr	r3, [r7, #12]
 8006a1a:	b29b      	uxth	r3, r3
 8006a1c:	3302      	adds	r3, #2
 8006a1e:	b29b      	uxth	r3, r3
 8006a20:	461a      	mov	r2, r3
 8006a22:	490a      	ldr	r1, [pc, #40]	@ (8006a4c <draw_gearing+0x23c>)
 8006a24:	480d      	ldr	r0, [pc, #52]	@ (8006a5c <draw_gearing+0x24c>)
 8006a26:	f00b fde9 	bl	80125fc <HAL_UART_Transmit_DMA>
}
 8006a2a:	bf00      	nop
 8006a2c:	3714      	adds	r7, #20
 8006a2e:	46bd      	mov	sp, r7
 8006a30:	bd90      	pop	{r4, r7, pc}
 8006a32:	bf00      	nop
 8006a34:	200036c8 	.word	0x200036c8
 8006a38:	2000352c 	.word	0x2000352c
 8006a3c:	08020ff8 	.word	0x08020ff8
 8006a40:	200036e0 	.word	0x200036e0
 8006a44:	200036d8 	.word	0x200036d8
 8006a48:	200038c4 	.word	0x200038c4
 8006a4c:	200035c0 	.word	0x200035c0
 8006a50:	200036c0 	.word	0x200036c0
 8006a54:	20003860 	.word	0x20003860
 8006a58:	200035bc 	.word	0x200035bc
 8006a5c:	20001c70 	.word	0x20001c70

08006a60 <clear_hud>:


void clear_hud(){
 8006a60:	b580      	push	{r7, lr}
 8006a62:	b084      	sub	sp, #16
 8006a64:	af00      	add	r7, sp, #0
	uint32_t curr_pos = 0;
 8006a66:	2300      	movs	r3, #0
 8006a68:	60fb      	str	r3, [r7, #12]
//	uint8_t char_len = 0;
//	curr_pos = 0;
//	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);

	send_header.start_frame = 0xA5;
 8006a6a:	4b2f      	ldr	r3, [pc, #188]	@ (8006b28 <clear_hud+0xc8>)
 8006a6c:	22a5      	movs	r2, #165	@ 0xa5
 8006a6e:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8006a70:	4b2d      	ldr	r3, [pc, #180]	@ (8006b28 <clear_hud+0xc8>)
 8006a72:	2200      	movs	r2, #0
 8006a74:	f042 0201 	orr.w	r2, r2, #1
 8006a78:	715a      	strb	r2, [r3, #5]
 8006a7a:	2200      	movs	r2, #0
 8006a7c:	f042 0203 	orr.w	r2, r2, #3
 8006a80:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8006a82:	4b2a      	ldr	r3, [pc, #168]	@ (8006b2c <clear_hud+0xcc>)
 8006a84:	781b      	ldrb	r3, [r3, #0]
 8006a86:	1c5a      	adds	r2, r3, #1
 8006a88:	b2d1      	uxtb	r1, r2
 8006a8a:	4a28      	ldr	r2, [pc, #160]	@ (8006b2c <clear_hud+0xcc>)
 8006a8c:	7011      	strb	r1, [r2, #0]
 8006a8e:	4a26      	ldr	r2, [pc, #152]	@ (8006b28 <clear_hud+0xc8>)
 8006a90:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_delete_graphic_t);
 8006a92:	4b25      	ldr	r3, [pc, #148]	@ (8006b28 <clear_hud+0xc8>)
 8006a94:	2200      	movs	r2, #0
 8006a96:	f042 0208 	orr.w	r2, r2, #8
 8006a9a:	705a      	strb	r2, [r3, #1]
 8006a9c:	2200      	movs	r2, #0
 8006a9e:	709a      	strb	r2, [r3, #2]
	send_header.seq = g_ref_tx_seq++;
 8006aa0:	4b22      	ldr	r3, [pc, #136]	@ (8006b2c <clear_hud+0xcc>)
 8006aa2:	781b      	ldrb	r3, [r3, #0]
 8006aa4:	1c5a      	adds	r2, r3, #1
 8006aa6:	b2d1      	uxtb	r1, r2
 8006aa8:	4a20      	ldr	r2, [pc, #128]	@ (8006b2c <clear_hud+0xcc>)
 8006aaa:	7011      	strb	r1, [r2, #0]
 8006aac:	4a1e      	ldr	r2, [pc, #120]	@ (8006b28 <clear_hud+0xc8>)
 8006aae:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8006ab0:	68fb      	ldr	r3, [r7, #12]
 8006ab2:	4a1f      	ldr	r2, [pc, #124]	@ (8006b30 <clear_hud+0xd0>)
 8006ab4:	4413      	add	r3, r2
 8006ab6:	4a1c      	ldr	r2, [pc, #112]	@ (8006b28 <clear_hud+0xc8>)
 8006ab8:	6810      	ldr	r0, [r2, #0]
 8006aba:	6018      	str	r0, [r3, #0]
 8006abc:	8891      	ldrh	r1, [r2, #4]
 8006abe:	7992      	ldrb	r2, [r2, #6]
 8006ac0:	8099      	strh	r1, [r3, #4]
 8006ac2:	719a      	strb	r2, [r3, #6]
	ref_delete_graphic_t ref_delete;
	ref_delete.cmd_ID = 0x100;
 8006ac4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006ac8:	80bb      	strh	r3, [r7, #4]
	ref_delete.graphic_layer = 9;
 8006aca:	2309      	movs	r3, #9
 8006acc:	72fb      	strb	r3, [r7, #11]
	ref_delete.graphic_operation = 2;
 8006ace:	2302      	movs	r3, #2
 8006ad0:	72bb      	strb	r3, [r7, #10]
	ref_delete.receiver_ID = g_client_id;
 8006ad2:	4b18      	ldr	r3, [pc, #96]	@ (8006b34 <clear_hud+0xd4>)
 8006ad4:	881b      	ldrh	r3, [r3, #0]
 8006ad6:	813b      	strh	r3, [r7, #8]
	ref_delete.send_ID = ref_robot_data.robot_id;
 8006ad8:	4b17      	ldr	r3, [pc, #92]	@ (8006b38 <clear_hud+0xd8>)
 8006ada:	781b      	ldrb	r3, [r3, #0]
 8006adc:	80fb      	strh	r3, [r7, #6]
	memcpy(tx_buffer + curr_pos, &ref_delete, sizeof(ref_delete_graphic_t));
 8006ade:	68fb      	ldr	r3, [r7, #12]
 8006ae0:	4a13      	ldr	r2, [pc, #76]	@ (8006b30 <clear_hud+0xd0>)
 8006ae2:	4413      	add	r3, r2
 8006ae4:	461a      	mov	r2, r3
 8006ae6:	1d3b      	adds	r3, r7, #4
 8006ae8:	cb03      	ldmia	r3!, {r0, r1}
 8006aea:	6010      	str	r0, [r2, #0]
 8006aec:	6051      	str	r1, [r2, #4]
	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8006aee:	68fb      	ldr	r3, [r7, #12]
 8006af0:	3302      	adds	r3, #2
 8006af2:	4619      	mov	r1, r3
 8006af4:	480e      	ldr	r0, [pc, #56]	@ (8006b30 <clear_hud+0xd0>)
 8006af6:	f7fa fb0b 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006afa:	e002      	b.n	8006b02 <clear_hud+0xa2>
		vTaskDelay(1);
 8006afc:	2001      	movs	r0, #1
 8006afe:	f011 fce5 	bl	80184cc <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006b02:	4b0e      	ldr	r3, [pc, #56]	@ (8006b3c <clear_hud+0xdc>)
 8006b04:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006b08:	b2db      	uxtb	r3, r3
 8006b0a:	2b20      	cmp	r3, #32
 8006b0c:	d1f6      	bne.n	8006afc <clear_hud+0x9c>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8006b0e:	68fb      	ldr	r3, [r7, #12]
 8006b10:	b29b      	uxth	r3, r3
 8006b12:	3302      	adds	r3, #2
 8006b14:	b29b      	uxth	r3, r3
 8006b16:	461a      	mov	r2, r3
 8006b18:	4905      	ldr	r1, [pc, #20]	@ (8006b30 <clear_hud+0xd0>)
 8006b1a:	4808      	ldr	r0, [pc, #32]	@ (8006b3c <clear_hud+0xdc>)
 8006b1c:	f00b fd6e 	bl	80125fc <HAL_UART_Transmit_DMA>

}
 8006b20:	bf00      	nop
 8006b22:	3710      	adds	r7, #16
 8006b24:	46bd      	mov	sp, r7
 8006b26:	bd80      	pop	{r7, pc}
 8006b28:	200036d8 	.word	0x200036d8
 8006b2c:	200038c4 	.word	0x200038c4
 8006b30:	200035c0 	.word	0x200035c0
 8006b34:	200035bc 	.word	0x200035bc
 8006b38:	20003860 	.word	0x20003860
 8006b3c:	20001c70 	.word	0x20001c70

08006b40 <fusion>:
double time_dif;
#define ALPHA 0.98
#define DT 0.01
#define LPF_ALPHA 0.5  // Low-pass filter coefficient

int fusion() {
 8006b40:	b580      	push	{r7, lr}
 8006b42:	b0ae      	sub	sp, #184	@ 0xb8
 8006b44:	af00      	add	r7, sp, #0
    double accel_data[3];
    double gyro_data[3];
    double dt = DT;
 8006b46:	a377      	add	r3, pc, #476	@ (adr r3, 8006d24 <fusion+0x1e4>)
 8006b48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b4c:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
    IMUSensorFusion imu;

    initIMUSensorFusion(&imu);
 8006b50:	463b      	mov	r3, r7
 8006b52:	4618      	mov	r0, r3
 8006b54:	f000 f92a 	bl	8006dac <initIMUSensorFusion>

    double T_end = 0.1;
 8006b58:	a374      	add	r3, pc, #464	@ (adr r3, 8006d2c <fusion+0x1ec>)
 8006b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b5e:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
    double time_dif;


    float T_start = get_microseconds();
 8006b62:	f7fb fb2d 	bl	80021c0 <get_microseconds>
 8006b66:	ee07 0a90 	vmov	s15, r0
 8006b6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006b6e:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

    // Simulate data (replace with actual sensor reading in a real application)
    while (1) {
        // Replace these functions with actual sensor data reading
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8006b72:	4b69      	ldr	r3, [pc, #420]	@ (8006d18 <fusion+0x1d8>)
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	4618      	mov	r0, r3
 8006b78:	f7f9 fce6 	bl	8000548 <__aeabi_f2d>
 8006b7c:	4602      	mov	r2, r0
 8006b7e:	460b      	mov	r3, r1
 8006b80:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
        accel_data[1] = accel_proc_data.ay;  // y-axis acceleration
 8006b84:	4b64      	ldr	r3, [pc, #400]	@ (8006d18 <fusion+0x1d8>)
 8006b86:	685b      	ldr	r3, [r3, #4]
 8006b88:	4618      	mov	r0, r3
 8006b8a:	f7f9 fcdd 	bl	8000548 <__aeabi_f2d>
 8006b8e:	4602      	mov	r2, r0
 8006b90:	460b      	mov	r3, r1
 8006b92:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
        accel_data[2] = accel_proc_data.az;  // z-axis acceleration
 8006b96:	4b60      	ldr	r3, [pc, #384]	@ (8006d18 <fusion+0x1d8>)
 8006b98:	689b      	ldr	r3, [r3, #8]
 8006b9a:	4618      	mov	r0, r3
 8006b9c:	f7f9 fcd4 	bl	8000548 <__aeabi_f2d>
 8006ba0:	4602      	mov	r2, r0
 8006ba2:	460b      	mov	r3, r1
 8006ba4:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90

        gyro_data[0] = gyro_proc_data.gx;  // roll rate
 8006ba8:	4b5c      	ldr	r3, [pc, #368]	@ (8006d1c <fusion+0x1dc>)
 8006baa:	681b      	ldr	r3, [r3, #0]
 8006bac:	4618      	mov	r0, r3
 8006bae:	f7f9 fccb 	bl	8000548 <__aeabi_f2d>
 8006bb2:	4602      	mov	r2, r0
 8006bb4:	460b      	mov	r3, r1
 8006bb6:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
        gyro_data[1] = gyro_proc_data.gy;  // pitch rate
 8006bba:	4b58      	ldr	r3, [pc, #352]	@ (8006d1c <fusion+0x1dc>)
 8006bbc:	685b      	ldr	r3, [r3, #4]
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	f7f9 fcc2 	bl	8000548 <__aeabi_f2d>
 8006bc4:	4602      	mov	r2, r0
 8006bc6:	460b      	mov	r3, r1
 8006bc8:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
        gyro_data[2] = gyro_proc_data.gz;  // yaw rate
 8006bcc:	4b53      	ldr	r3, [pc, #332]	@ (8006d1c <fusion+0x1dc>)
 8006bce:	689b      	ldr	r3, [r3, #8]
 8006bd0:	4618      	mov	r0, r3
 8006bd2:	f7f9 fcb9 	bl	8000548 <__aeabi_f2d>
 8006bd6:	4602      	mov	r2, r0
 8006bd8:	460b      	mov	r3, r1
 8006bda:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78

        T_end = get_microseconds();
 8006bde:	f7fb faef 	bl	80021c0 <get_microseconds>
 8006be2:	4603      	mov	r3, r0
 8006be4:	4618      	mov	r0, r3
 8006be6:	f7f9 fc8d 	bl	8000504 <__aeabi_ui2d>
 8006bea:	4602      	mov	r2, r0
 8006bec:	460b      	mov	r3, r1
 8006bee:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
        time_dif = (T_end - T_start) * 0.000001;
 8006bf2:	f8d7 00b4 	ldr.w	r0, [r7, #180]	@ 0xb4
 8006bf6:	f7f9 fca7 	bl	8000548 <__aeabi_f2d>
 8006bfa:	4602      	mov	r2, r0
 8006bfc:	460b      	mov	r3, r1
 8006bfe:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8006c02:	f7f9 fb41 	bl	8000288 <__aeabi_dsub>
 8006c06:	4602      	mov	r2, r0
 8006c08:	460b      	mov	r3, r1
 8006c0a:	4610      	mov	r0, r2
 8006c0c:	4619      	mov	r1, r3
 8006c0e:	a340      	add	r3, pc, #256	@ (adr r3, 8006d10 <fusion+0x1d0>)
 8006c10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c14:	f7f9 fcf0 	bl	80005f8 <__aeabi_dmul>
 8006c18:	4602      	mov	r2, r0
 8006c1a:	460b      	mov	r3, r1
 8006c1c:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
        dt = time_dif;
 8006c20:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8006c24:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
        imu_sensor_fusion(accel_data, gyro_data, dt, &imu);
 8006c28:	463a      	mov	r2, r7
 8006c2a:	f107 0168 	add.w	r1, r7, #104	@ 0x68
 8006c2e:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 8006c32:	ed97 0b2a 	vldr	d0, [r7, #168]	@ 0xa8
 8006c36:	4618      	mov	r0, r3
 8006c38:	f000 f91e 	bl	8006e78 <imu_sensor_fusion>
        T_start = get_microseconds();
 8006c3c:	f7fb fac0 	bl	80021c0 <get_microseconds>
 8006c40:	ee07 0a90 	vmov	s15, r0
 8006c44:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006c48:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

        // Store the results in the imu_heading structure
        imu_heading.pit = imu.pitch;
 8006c4c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006c50:	4610      	mov	r0, r2
 8006c52:	4619      	mov	r1, r3
 8006c54:	f7f9 ffc8 	bl	8000be8 <__aeabi_d2f>
 8006c58:	4603      	mov	r3, r0
 8006c5a:	4a31      	ldr	r2, [pc, #196]	@ (8006d20 <fusion+0x1e0>)
 8006c5c:	6013      	str	r3, [r2, #0]
        imu_heading.dpit = imu.pitch_speed;
 8006c5e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006c62:	4610      	mov	r0, r2
 8006c64:	4619      	mov	r1, r3
 8006c66:	f7f9 ffbf 	bl	8000be8 <__aeabi_d2f>
 8006c6a:	4603      	mov	r3, r0
 8006c6c:	4a2c      	ldr	r2, [pc, #176]	@ (8006d20 <fusion+0x1e0>)
 8006c6e:	60d3      	str	r3, [r2, #12]
        imu_heading.ddpit = imu.pitch_accel;
 8006c70:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8006c74:	4610      	mov	r0, r2
 8006c76:	4619      	mov	r1, r3
 8006c78:	f7f9 ffb6 	bl	8000be8 <__aeabi_d2f>
 8006c7c:	4603      	mov	r3, r0
 8006c7e:	4a28      	ldr	r2, [pc, #160]	@ (8006d20 <fusion+0x1e0>)
 8006c80:	6193      	str	r3, [r2, #24]
        imu_heading.rol = imu.roll;
 8006c82:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006c86:	4610      	mov	r0, r2
 8006c88:	4619      	mov	r1, r3
 8006c8a:	f7f9 ffad 	bl	8000be8 <__aeabi_d2f>
 8006c8e:	4603      	mov	r3, r0
 8006c90:	4a23      	ldr	r2, [pc, #140]	@ (8006d20 <fusion+0x1e0>)
 8006c92:	6053      	str	r3, [r2, #4]
        imu_heading.drol = imu.roll_speed;
 8006c94:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006c98:	4610      	mov	r0, r2
 8006c9a:	4619      	mov	r1, r3
 8006c9c:	f7f9 ffa4 	bl	8000be8 <__aeabi_d2f>
 8006ca0:	4603      	mov	r3, r0
 8006ca2:	4a1f      	ldr	r2, [pc, #124]	@ (8006d20 <fusion+0x1e0>)
 8006ca4:	6113      	str	r3, [r2, #16]
        imu_heading.ddrol = imu.roll_accel;
 8006ca6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006caa:	4610      	mov	r0, r2
 8006cac:	4619      	mov	r1, r3
 8006cae:	f7f9 ff9b 	bl	8000be8 <__aeabi_d2f>
 8006cb2:	4603      	mov	r3, r0
 8006cb4:	4a1a      	ldr	r2, [pc, #104]	@ (8006d20 <fusion+0x1e0>)
 8006cb6:	61d3      	str	r3, [r2, #28]
        imu_heading.yaw = imu.yaw;
 8006cb8:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8006cbc:	4610      	mov	r0, r2
 8006cbe:	4619      	mov	r1, r3
 8006cc0:	f7f9 ff92 	bl	8000be8 <__aeabi_d2f>
 8006cc4:	4603      	mov	r3, r0
 8006cc6:	4a16      	ldr	r2, [pc, #88]	@ (8006d20 <fusion+0x1e0>)
 8006cc8:	6093      	str	r3, [r2, #8]
        imu_heading.dyaw = imu.yaw_speed;
 8006cca:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006cce:	4610      	mov	r0, r2
 8006cd0:	4619      	mov	r1, r3
 8006cd2:	f7f9 ff89 	bl	8000be8 <__aeabi_d2f>
 8006cd6:	4603      	mov	r3, r0
 8006cd8:	4a11      	ldr	r2, [pc, #68]	@ (8006d20 <fusion+0x1e0>)
 8006cda:	6153      	str	r3, [r2, #20]
        imu_heading.ddyaw = imu.yaw_accel;
 8006cdc:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006ce0:	4610      	mov	r0, r2
 8006ce2:	4619      	mov	r1, r3
 8006ce4:	f7f9 ff80 	bl	8000be8 <__aeabi_d2f>
 8006ce8:	4603      	mov	r3, r0
 8006cea:	4a0d      	ldr	r2, [pc, #52]	@ (8006d20 <fusion+0x1e0>)
 8006cec:	6213      	str	r3, [r2, #32]
        imu_heading.ddz = imu.vertical_accel;
 8006cee:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006cf2:	4610      	mov	r0, r2
 8006cf4:	4619      	mov	r1, r3
 8006cf6:	f7f9 ff77 	bl	8000be8 <__aeabi_d2f>
 8006cfa:	4603      	mov	r3, r0
 8006cfc:	4a08      	ldr	r2, [pc, #32]	@ (8006d20 <fusion+0x1e0>)
 8006cfe:	6253      	str	r3, [r2, #36]	@ 0x24
        ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8006d00:	f04f 31ff 	mov.w	r1, #4294967295
 8006d04:	2001      	movs	r0, #1
 8006d06:	f012 f9b1 	bl	801906c <ulTaskNotifyTake>
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8006d0a:	bf00      	nop
 8006d0c:	e731      	b.n	8006b72 <fusion+0x32>
 8006d0e:	bf00      	nop
 8006d10:	a0b5ed8d 	.word	0xa0b5ed8d
 8006d14:	3eb0c6f7 	.word	0x3eb0c6f7
 8006d18:	20003728 	.word	0x20003728
 8006d1c:	20003738 	.word	0x20003738
 8006d20:	20003700 	.word	0x20003700
 8006d24:	47ae147b 	.word	0x47ae147b
 8006d28:	3f847ae1 	.word	0x3f847ae1
 8006d2c:	9999999a 	.word	0x9999999a
 8006d30:	3fb99999 	.word	0x3fb99999

08006d34 <low_pass_filter>:

    return 0;
}

// Low-pass filter function
double low_pass_filter(double input, double *prev_output, double alpha) {
 8006d34:	b5b0      	push	{r4, r5, r7, lr}
 8006d36:	b086      	sub	sp, #24
 8006d38:	af00      	add	r7, sp, #0
 8006d3a:	ed87 0b04 	vstr	d0, [r7, #16]
 8006d3e:	60f8      	str	r0, [r7, #12]
 8006d40:	ed87 1b00 	vstr	d1, [r7]
    *prev_output = alpha * input + (1 - alpha) * (*prev_output);
 8006d44:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8006d48:	e9d7 0100 	ldrd	r0, r1, [r7]
 8006d4c:	f7f9 fc54 	bl	80005f8 <__aeabi_dmul>
 8006d50:	4602      	mov	r2, r0
 8006d52:	460b      	mov	r3, r1
 8006d54:	4614      	mov	r4, r2
 8006d56:	461d      	mov	r5, r3
 8006d58:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006d5c:	f04f 0000 	mov.w	r0, #0
 8006d60:	4911      	ldr	r1, [pc, #68]	@ (8006da8 <low_pass_filter+0x74>)
 8006d62:	f7f9 fa91 	bl	8000288 <__aeabi_dsub>
 8006d66:	4602      	mov	r2, r0
 8006d68:	460b      	mov	r3, r1
 8006d6a:	4610      	mov	r0, r2
 8006d6c:	4619      	mov	r1, r3
 8006d6e:	68fb      	ldr	r3, [r7, #12]
 8006d70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d74:	f7f9 fc40 	bl	80005f8 <__aeabi_dmul>
 8006d78:	4602      	mov	r2, r0
 8006d7a:	460b      	mov	r3, r1
 8006d7c:	4620      	mov	r0, r4
 8006d7e:	4629      	mov	r1, r5
 8006d80:	f7f9 fa84 	bl	800028c <__adddf3>
 8006d84:	4602      	mov	r2, r0
 8006d86:	460b      	mov	r3, r1
 8006d88:	68f9      	ldr	r1, [r7, #12]
 8006d8a:	e9c1 2300 	strd	r2, r3, [r1]
    return *prev_output;
 8006d8e:	68fb      	ldr	r3, [r7, #12]
 8006d90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d94:	ec43 2b17 	vmov	d7, r2, r3
}
 8006d98:	eeb0 0a47 	vmov.f32	s0, s14
 8006d9c:	eef0 0a67 	vmov.f32	s1, s15
 8006da0:	3718      	adds	r7, #24
 8006da2:	46bd      	mov	sp, r7
 8006da4:	bdb0      	pop	{r4, r5, r7, pc}
 8006da6:	bf00      	nop
 8006da8:	3ff00000 	.word	0x3ff00000

08006dac <initIMUSensorFusion>:


void initIMUSensorFusion(IMUSensorFusion *imu) {
 8006dac:	b480      	push	{r7}
 8006dae:	b083      	sub	sp, #12
 8006db0:	af00      	add	r7, sp, #0
 8006db2:	6078      	str	r0, [r7, #4]
    imu->pitch = 0.0;
 8006db4:	6879      	ldr	r1, [r7, #4]
 8006db6:	f04f 0200 	mov.w	r2, #0
 8006dba:	f04f 0300 	mov.w	r3, #0
 8006dbe:	e9c1 2300 	strd	r2, r3, [r1]
    imu->pitch_speed = 0.0;
 8006dc2:	6879      	ldr	r1, [r7, #4]
 8006dc4:	f04f 0200 	mov.w	r2, #0
 8006dc8:	f04f 0300 	mov.w	r3, #0
 8006dcc:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->pitch_accel = 0.0;
 8006dd0:	6879      	ldr	r1, [r7, #4]
 8006dd2:	f04f 0200 	mov.w	r2, #0
 8006dd6:	f04f 0300 	mov.w	r3, #0
 8006dda:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll = 0.0;
 8006dde:	6879      	ldr	r1, [r7, #4]
 8006de0:	f04f 0200 	mov.w	r2, #0
 8006de4:	f04f 0300 	mov.w	r3, #0
 8006de8:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->roll_speed = 0.0;
 8006dec:	6879      	ldr	r1, [r7, #4]
 8006dee:	f04f 0200 	mov.w	r2, #0
 8006df2:	f04f 0300 	mov.w	r3, #0
 8006df6:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->roll_accel = 0.0;
 8006dfa:	6879      	ldr	r1, [r7, #4]
 8006dfc:	f04f 0200 	mov.w	r2, #0
 8006e00:	f04f 0300 	mov.w	r3, #0
 8006e04:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw = 0.0;
 8006e08:	6879      	ldr	r1, [r7, #4]
 8006e0a:	f04f 0200 	mov.w	r2, #0
 8006e0e:	f04f 0300 	mov.w	r3, #0
 8006e12:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
    imu->yaw_speed = 0.0;
 8006e16:	6879      	ldr	r1, [r7, #4]
 8006e18:	f04f 0200 	mov.w	r2, #0
 8006e1c:	f04f 0300 	mov.w	r3, #0
 8006e20:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
    imu->yaw_accel = 0.0;
 8006e24:	6879      	ldr	r1, [r7, #4]
 8006e26:	f04f 0200 	mov.w	r2, #0
 8006e2a:	f04f 0300 	mov.w	r3, #0
 8006e2e:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40
    imu->vertical_accel = 0.0;
 8006e32:	6879      	ldr	r1, [r7, #4]
 8006e34:	f04f 0200 	mov.w	r2, #0
 8006e38:	f04f 0300 	mov.w	r3, #0
 8006e3c:	e9c1 2312 	strd	r2, r3, [r1, #72]	@ 0x48
    imu->acc_x_lpf = 0.0;
 8006e40:	6879      	ldr	r1, [r7, #4]
 8006e42:	f04f 0200 	mov.w	r2, #0
 8006e46:	f04f 0300 	mov.w	r3, #0
 8006e4a:	e9c1 2314 	strd	r2, r3, [r1, #80]	@ 0x50
    imu->acc_y_lpf = 0.0;
 8006e4e:	6879      	ldr	r1, [r7, #4]
 8006e50:	f04f 0200 	mov.w	r2, #0
 8006e54:	f04f 0300 	mov.w	r3, #0
 8006e58:	e9c1 2316 	strd	r2, r3, [r1, #88]	@ 0x58
    imu->acc_z_lpf = 0.0;
 8006e5c:	6879      	ldr	r1, [r7, #4]
 8006e5e:	f04f 0200 	mov.w	r2, #0
 8006e62:	f04f 0300 	mov.w	r3, #0
 8006e66:	e9c1 2318 	strd	r2, r3, [r1, #96]	@ 0x60
}
 8006e6a:	bf00      	nop
 8006e6c:	370c      	adds	r7, #12
 8006e6e:	46bd      	mov	sp, r7
 8006e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e74:	4770      	bx	lr
	...

08006e78 <imu_sensor_fusion>:
void imu_sensor_fusion(double accel_data[3], double gyro_data[3], double dt,
                       IMUSensorFusion *imu) {
 8006e78:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8006e7c:	b08a      	sub	sp, #40	@ 0x28
 8006e7e:	af00      	add	r7, sp, #0
 8006e80:	6178      	str	r0, [r7, #20]
 8006e82:	6139      	str	r1, [r7, #16]
 8006e84:	ed87 0b02 	vstr	d0, [r7, #8]
 8006e88:	607a      	str	r2, [r7, #4]
    // Low-pass filter accelerometer data
    accel_data[0] = low_pass_filter(accel_data[0], &(imu->acc_x_lpf), LPF_ALPHA);
 8006e8a:	697b      	ldr	r3, [r7, #20]
 8006e8c:	ed93 7b00 	vldr	d7, [r3]
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	3350      	adds	r3, #80	@ 0x50
 8006e94:	ed9f 1bb8 	vldr	d1, [pc, #736]	@ 8007178 <imu_sensor_fusion+0x300>
 8006e98:	4618      	mov	r0, r3
 8006e9a:	eeb0 0a47 	vmov.f32	s0, s14
 8006e9e:	eef0 0a67 	vmov.f32	s1, s15
 8006ea2:	f7ff ff47 	bl	8006d34 <low_pass_filter>
 8006ea6:	eeb0 7a40 	vmov.f32	s14, s0
 8006eaa:	eef0 7a60 	vmov.f32	s15, s1
 8006eae:	697b      	ldr	r3, [r7, #20]
 8006eb0:	ed83 7b00 	vstr	d7, [r3]
    accel_data[1] = low_pass_filter(accel_data[1], &(imu->acc_y_lpf), LPF_ALPHA);
 8006eb4:	697b      	ldr	r3, [r7, #20]
 8006eb6:	3308      	adds	r3, #8
 8006eb8:	ed93 7b00 	vldr	d7, [r3]
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	f103 0258 	add.w	r2, r3, #88	@ 0x58
 8006ec2:	697b      	ldr	r3, [r7, #20]
 8006ec4:	f103 0408 	add.w	r4, r3, #8
 8006ec8:	ed9f 1bab 	vldr	d1, [pc, #684]	@ 8007178 <imu_sensor_fusion+0x300>
 8006ecc:	4610      	mov	r0, r2
 8006ece:	eeb0 0a47 	vmov.f32	s0, s14
 8006ed2:	eef0 0a67 	vmov.f32	s1, s15
 8006ed6:	f7ff ff2d 	bl	8006d34 <low_pass_filter>
 8006eda:	eeb0 7a40 	vmov.f32	s14, s0
 8006ede:	eef0 7a60 	vmov.f32	s15, s1
 8006ee2:	ed84 7b00 	vstr	d7, [r4]
    accel_data[2] = low_pass_filter(accel_data[2], &(imu->acc_z_lpf), LPF_ALPHA);
 8006ee6:	697b      	ldr	r3, [r7, #20]
 8006ee8:	3310      	adds	r3, #16
 8006eea:	ed93 7b00 	vldr	d7, [r3]
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 8006ef4:	697b      	ldr	r3, [r7, #20]
 8006ef6:	f103 0410 	add.w	r4, r3, #16
 8006efa:	ed9f 1b9f 	vldr	d1, [pc, #636]	@ 8007178 <imu_sensor_fusion+0x300>
 8006efe:	4610      	mov	r0, r2
 8006f00:	eeb0 0a47 	vmov.f32	s0, s14
 8006f04:	eef0 0a67 	vmov.f32	s1, s15
 8006f08:	f7ff ff14 	bl	8006d34 <low_pass_filter>
 8006f0c:	eeb0 7a40 	vmov.f32	s14, s0
 8006f10:	eef0 7a60 	vmov.f32	s15, s1
 8006f14:	ed84 7b00 	vstr	d7, [r4]

    // Calculate pitch and roll from accelerometer data
    double pitch_accel_meas = atan2(-accel_data[0], sqrt(accel_data[1] * accel_data[1] + accel_data[2] * accel_data[2]));
 8006f18:	697b      	ldr	r3, [r7, #20]
 8006f1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f1e:	4690      	mov	r8, r2
 8006f20:	f083 4900 	eor.w	r9, r3, #2147483648	@ 0x80000000
 8006f24:	697b      	ldr	r3, [r7, #20]
 8006f26:	3308      	adds	r3, #8
 8006f28:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006f2c:	697b      	ldr	r3, [r7, #20]
 8006f2e:	3308      	adds	r3, #8
 8006f30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f34:	f7f9 fb60 	bl	80005f8 <__aeabi_dmul>
 8006f38:	4602      	mov	r2, r0
 8006f3a:	460b      	mov	r3, r1
 8006f3c:	4614      	mov	r4, r2
 8006f3e:	461d      	mov	r5, r3
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	3310      	adds	r3, #16
 8006f44:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006f48:	697b      	ldr	r3, [r7, #20]
 8006f4a:	3310      	adds	r3, #16
 8006f4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f50:	f7f9 fb52 	bl	80005f8 <__aeabi_dmul>
 8006f54:	4602      	mov	r2, r0
 8006f56:	460b      	mov	r3, r1
 8006f58:	4620      	mov	r0, r4
 8006f5a:	4629      	mov	r1, r5
 8006f5c:	f7f9 f996 	bl	800028c <__adddf3>
 8006f60:	4602      	mov	r2, r0
 8006f62:	460b      	mov	r3, r1
 8006f64:	ec43 2b17 	vmov	d7, r2, r3
 8006f68:	eeb0 0a47 	vmov.f32	s0, s14
 8006f6c:	eef0 0a67 	vmov.f32	s1, s15
 8006f70:	f018 fc24 	bl	801f7bc <sqrt>
 8006f74:	eeb0 7a40 	vmov.f32	s14, s0
 8006f78:	eef0 7a60 	vmov.f32	s15, s1
 8006f7c:	eeb0 1a47 	vmov.f32	s2, s14
 8006f80:	eef0 1a67 	vmov.f32	s3, s15
 8006f84:	ec49 8b10 	vmov	d0, r8, r9
 8006f88:	f018 fc16 	bl	801f7b8 <atan2>
 8006f8c:	ed87 0b08 	vstr	d0, [r7, #32]
    double roll_accel_meas = atan2(accel_data[1], accel_data[2]);
 8006f90:	697b      	ldr	r3, [r7, #20]
 8006f92:	3308      	adds	r3, #8
 8006f94:	ed93 7b00 	vldr	d7, [r3]
 8006f98:	697b      	ldr	r3, [r7, #20]
 8006f9a:	3310      	adds	r3, #16
 8006f9c:	ed93 6b00 	vldr	d6, [r3]
 8006fa0:	eeb0 1a46 	vmov.f32	s2, s12
 8006fa4:	eef0 1a66 	vmov.f32	s3, s13
 8006fa8:	eeb0 0a47 	vmov.f32	s0, s14
 8006fac:	eef0 0a67 	vmov.f32	s1, s15
 8006fb0:	f018 fc02 	bl	801f7b8 <atan2>
 8006fb4:	ed87 0b06 	vstr	d0, [r7, #24]

    // Apply complementary filter
    imu->pitch = ALPHA * (imu->pitch + gyro_data[1] * dt) + (1 - ALPHA) * pitch_accel_meas;
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	e9d3 4500 	ldrd	r4, r5, [r3]
 8006fbe:	693b      	ldr	r3, [r7, #16]
 8006fc0:	3308      	adds	r3, #8
 8006fc2:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006fc6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006fca:	f7f9 fb15 	bl	80005f8 <__aeabi_dmul>
 8006fce:	4602      	mov	r2, r0
 8006fd0:	460b      	mov	r3, r1
 8006fd2:	4620      	mov	r0, r4
 8006fd4:	4629      	mov	r1, r5
 8006fd6:	f7f9 f959 	bl	800028c <__adddf3>
 8006fda:	4602      	mov	r2, r0
 8006fdc:	460b      	mov	r3, r1
 8006fde:	4610      	mov	r0, r2
 8006fe0:	4619      	mov	r1, r3
 8006fe2:	a36a      	add	r3, pc, #424	@ (adr r3, 800718c <imu_sensor_fusion+0x314>)
 8006fe4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fe8:	f7f9 fb06 	bl	80005f8 <__aeabi_dmul>
 8006fec:	4602      	mov	r2, r0
 8006fee:	460b      	mov	r3, r1
 8006ff0:	4614      	mov	r4, r2
 8006ff2:	461d      	mov	r5, r3
 8006ff4:	a367      	add	r3, pc, #412	@ (adr r3, 8007194 <imu_sensor_fusion+0x31c>)
 8006ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ffa:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8006ffe:	f7f9 fafb 	bl	80005f8 <__aeabi_dmul>
 8007002:	4602      	mov	r2, r0
 8007004:	460b      	mov	r3, r1
 8007006:	4620      	mov	r0, r4
 8007008:	4629      	mov	r1, r5
 800700a:	f7f9 f93f 	bl	800028c <__adddf3>
 800700e:	4602      	mov	r2, r0
 8007010:	460b      	mov	r3, r1
 8007012:	6879      	ldr	r1, [r7, #4]
 8007014:	e9c1 2300 	strd	r2, r3, [r1]
    imu->roll = ALPHA * (imu->roll + gyro_data[0] * dt) + (1 - ALPHA) * roll_accel_meas;
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 800701e:	693b      	ldr	r3, [r7, #16]
 8007020:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007024:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007028:	f7f9 fae6 	bl	80005f8 <__aeabi_dmul>
 800702c:	4602      	mov	r2, r0
 800702e:	460b      	mov	r3, r1
 8007030:	4620      	mov	r0, r4
 8007032:	4629      	mov	r1, r5
 8007034:	f7f9 f92a 	bl	800028c <__adddf3>
 8007038:	4602      	mov	r2, r0
 800703a:	460b      	mov	r3, r1
 800703c:	4610      	mov	r0, r2
 800703e:	4619      	mov	r1, r3
 8007040:	a352      	add	r3, pc, #328	@ (adr r3, 800718c <imu_sensor_fusion+0x314>)
 8007042:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007046:	f7f9 fad7 	bl	80005f8 <__aeabi_dmul>
 800704a:	4602      	mov	r2, r0
 800704c:	460b      	mov	r3, r1
 800704e:	4614      	mov	r4, r2
 8007050:	461d      	mov	r5, r3
 8007052:	a350      	add	r3, pc, #320	@ (adr r3, 8007194 <imu_sensor_fusion+0x31c>)
 8007054:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007058:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800705c:	f7f9 facc 	bl	80005f8 <__aeabi_dmul>
 8007060:	4602      	mov	r2, r0
 8007062:	460b      	mov	r3, r1
 8007064:	4620      	mov	r0, r4
 8007066:	4629      	mov	r1, r5
 8007068:	f7f9 f910 	bl	800028c <__adddf3>
 800706c:	4602      	mov	r2, r0
 800706e:	460b      	mov	r3, r1
 8007070:	6879      	ldr	r1, [r7, #4]
 8007072:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->yaw += gyro_data[2] * dt;
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	@ 0x30
 800707c:	693b      	ldr	r3, [r7, #16]
 800707e:	3310      	adds	r3, #16
 8007080:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007084:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007088:	f7f9 fab6 	bl	80005f8 <__aeabi_dmul>
 800708c:	4602      	mov	r2, r0
 800708e:	460b      	mov	r3, r1
 8007090:	4620      	mov	r0, r4
 8007092:	4629      	mov	r1, r5
 8007094:	f7f9 f8fa 	bl	800028c <__adddf3>
 8007098:	4602      	mov	r2, r0
 800709a:	460b      	mov	r3, r1
 800709c:	6879      	ldr	r1, [r7, #4]
 800709e:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30

    // Calculate speed (rate of change of angles) directly from gyroscope data
    imu->pitch_speed = gyro_data[1];
 80070a2:	693b      	ldr	r3, [r7, #16]
 80070a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80070a8:	6879      	ldr	r1, [r7, #4]
 80070aa:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->roll_speed = gyro_data[0];
 80070ae:	693b      	ldr	r3, [r7, #16]
 80070b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070b4:	6879      	ldr	r1, [r7, #4]
 80070b6:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->yaw_speed = gyro_data[2];
 80070ba:	693b      	ldr	r3, [r7, #16]
 80070bc:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80070c0:	6879      	ldr	r1, [r7, #4]
 80070c2:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38

    // Calculate acceleration (rate of change of speeds)
    static double last_pitch_speed = 0, last_roll_speed = 0, last_yaw_speed = 0;
    imu->pitch_accel = (imu->pitch_speed - last_pitch_speed) / dt;
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 80070cc:	4b2c      	ldr	r3, [pc, #176]	@ (8007180 <imu_sensor_fusion+0x308>)
 80070ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070d2:	f7f9 f8d9 	bl	8000288 <__aeabi_dsub>
 80070d6:	4602      	mov	r2, r0
 80070d8:	460b      	mov	r3, r1
 80070da:	4610      	mov	r0, r2
 80070dc:	4619      	mov	r1, r3
 80070de:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80070e2:	f7f9 fbb3 	bl	800084c <__aeabi_ddiv>
 80070e6:	4602      	mov	r2, r0
 80070e8:	460b      	mov	r3, r1
 80070ea:	6879      	ldr	r1, [r7, #4]
 80070ec:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll_accel = (imu->roll_speed - last_roll_speed) / dt;
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 80070f6:	4b23      	ldr	r3, [pc, #140]	@ (8007184 <imu_sensor_fusion+0x30c>)
 80070f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070fc:	f7f9 f8c4 	bl	8000288 <__aeabi_dsub>
 8007100:	4602      	mov	r2, r0
 8007102:	460b      	mov	r3, r1
 8007104:	4610      	mov	r0, r2
 8007106:	4619      	mov	r1, r3
 8007108:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800710c:	f7f9 fb9e 	bl	800084c <__aeabi_ddiv>
 8007110:	4602      	mov	r2, r0
 8007112:	460b      	mov	r3, r1
 8007114:	6879      	ldr	r1, [r7, #4]
 8007116:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw_accel = (imu->yaw_speed - last_yaw_speed) / dt;
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	@ 0x38
 8007120:	4b19      	ldr	r3, [pc, #100]	@ (8007188 <imu_sensor_fusion+0x310>)
 8007122:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007126:	f7f9 f8af 	bl	8000288 <__aeabi_dsub>
 800712a:	4602      	mov	r2, r0
 800712c:	460b      	mov	r3, r1
 800712e:	4610      	mov	r0, r2
 8007130:	4619      	mov	r1, r3
 8007132:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007136:	f7f9 fb89 	bl	800084c <__aeabi_ddiv>
 800713a:	4602      	mov	r2, r0
 800713c:	460b      	mov	r3, r1
 800713e:	6879      	ldr	r1, [r7, #4]
 8007140:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40

    // Update last speeds
    last_pitch_speed = imu->pitch_speed;
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800714a:	490d      	ldr	r1, [pc, #52]	@ (8007180 <imu_sensor_fusion+0x308>)
 800714c:	e9c1 2300 	strd	r2, r3, [r1]
    last_roll_speed = imu->roll_speed;
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8007156:	490b      	ldr	r1, [pc, #44]	@ (8007184 <imu_sensor_fusion+0x30c>)
 8007158:	e9c1 2300 	strd	r2, r3, [r1]
    last_yaw_speed = imu->yaw_speed;
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8007162:	4909      	ldr	r1, [pc, #36]	@ (8007188 <imu_sensor_fusion+0x310>)
 8007164:	e9c1 2300 	strd	r2, r3, [r1]

    // Calculate vertical acceleration (z-axis acceleration)
    imu->vertical_accel = sqrt((accel_data[0]*accel_data[0]) + (accel_data[1]*accel_data[1]) + (accel_data[2]*accel_data[2]));
 8007168:	697b      	ldr	r3, [r7, #20]
 800716a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800716e:	697b      	ldr	r3, [r7, #20]
 8007170:	e014      	b.n	800719c <imu_sensor_fusion+0x324>
 8007172:	bf00      	nop
 8007174:	f3af 8000 	nop.w
 8007178:	00000000 	.word	0x00000000
 800717c:	3fe00000 	.word	0x3fe00000
 8007180:	20003758 	.word	0x20003758
 8007184:	20003760 	.word	0x20003760
 8007188:	20003768 	.word	0x20003768
 800718c:	f5c28f5c 	.word	0xf5c28f5c
 8007190:	3fef5c28 	.word	0x3fef5c28
 8007194:	47ae1480 	.word	0x47ae1480
 8007198:	3f947ae1 	.word	0x3f947ae1
 800719c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071a0:	f7f9 fa2a 	bl	80005f8 <__aeabi_dmul>
 80071a4:	4602      	mov	r2, r0
 80071a6:	460b      	mov	r3, r1
 80071a8:	4614      	mov	r4, r2
 80071aa:	461d      	mov	r5, r3
 80071ac:	697b      	ldr	r3, [r7, #20]
 80071ae:	3308      	adds	r3, #8
 80071b0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80071b4:	697b      	ldr	r3, [r7, #20]
 80071b6:	3308      	adds	r3, #8
 80071b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071bc:	f7f9 fa1c 	bl	80005f8 <__aeabi_dmul>
 80071c0:	4602      	mov	r2, r0
 80071c2:	460b      	mov	r3, r1
 80071c4:	4620      	mov	r0, r4
 80071c6:	4629      	mov	r1, r5
 80071c8:	f7f9 f860 	bl	800028c <__adddf3>
 80071cc:	4602      	mov	r2, r0
 80071ce:	460b      	mov	r3, r1
 80071d0:	4614      	mov	r4, r2
 80071d2:	461d      	mov	r5, r3
 80071d4:	697b      	ldr	r3, [r7, #20]
 80071d6:	3310      	adds	r3, #16
 80071d8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80071dc:	697b      	ldr	r3, [r7, #20]
 80071de:	3310      	adds	r3, #16
 80071e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071e4:	f7f9 fa08 	bl	80005f8 <__aeabi_dmul>
 80071e8:	4602      	mov	r2, r0
 80071ea:	460b      	mov	r3, r1
 80071ec:	4620      	mov	r0, r4
 80071ee:	4629      	mov	r1, r5
 80071f0:	f7f9 f84c 	bl	800028c <__adddf3>
 80071f4:	4602      	mov	r2, r0
 80071f6:	460b      	mov	r3, r1
 80071f8:	ec43 2b17 	vmov	d7, r2, r3
 80071fc:	eeb0 0a47 	vmov.f32	s0, s14
 8007200:	eef0 0a67 	vmov.f32	s1, s15
 8007204:	f018 fada 	bl	801f7bc <sqrt>
 8007208:	eeb0 7a40 	vmov.f32	s14, s0
 800720c:	eef0 7a60 	vmov.f32	s15, s1
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	ed83 7b12 	vstr	d7, [r3, #72]	@ 0x48
}
 8007216:	bf00      	nop
 8007218:	3728      	adds	r7, #40	@ 0x28
 800721a:	46bd      	mov	sp, r7
 800721c:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}

08007220 <imu_proc_task_notif>:

void imu_proc_task_notif() {
 8007220:	b580      	push	{r7, lr}
 8007222:	b082      	sub	sp, #8
 8007224:	af00      	add	r7, sp, #0
	//resets the flags
	update_flag = 0b000;
 8007226:	4b0d      	ldr	r3, [pc, #52]	@ (800725c <imu_proc_task_notif+0x3c>)
 8007228:	2200      	movs	r2, #0
 800722a:	701a      	strb	r2, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 800722c:	2300      	movs	r3, #0
 800722e:	607b      	str	r3, [r7, #4]
	vTaskNotifyGiveFromISR(imu_processing_task_handle, &xHigherPriorityTaskWoken);
 8007230:	4b0b      	ldr	r3, [pc, #44]	@ (8007260 <imu_proc_task_notif+0x40>)
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	1d3a      	adds	r2, r7, #4
 8007236:	4611      	mov	r1, r2
 8007238:	4618      	mov	r0, r3
 800723a:	f011 ff63 	bl	8019104 <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken)
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	2b00      	cmp	r3, #0
 8007242:	d007      	beq.n	8007254 <imu_proc_task_notif+0x34>
 8007244:	4b07      	ldr	r3, [pc, #28]	@ (8007264 <imu_proc_task_notif+0x44>)
 8007246:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800724a:	601a      	str	r2, [r3, #0]
 800724c:	f3bf 8f4f 	dsb	sy
 8007250:	f3bf 8f6f 	isb	sy
}
 8007254:	bf00      	nop
 8007256:	3708      	adds	r7, #8
 8007258:	46bd      	mov	sp, r7
 800725a:	bd80      	pop	{r7, pc}
 800725c:	20003754 	.word	0x20003754
 8007260:	200037a4 	.word	0x200037a4
 8007264:	e000ed04 	.word	0xe000ed04

08007268 <gyro_data_ready>:

void gyro_data_ready(gyro_data_t gyro_data) {
 8007268:	b590      	push	{r4, r7, lr}
 800726a:	b085      	sub	sp, #20
 800726c:	af00      	add	r7, sp, #0
 800726e:	463c      	mov	r4, r7
 8007270:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		gyro_proc_data.gx = gyro_data.gz;
		gyro_proc_data.gy = gyro_data.gy;
		gyro_proc_data.gz = -gyro_data.gx;
	} else {

		gyro_proc_data.gx = gyro_data.gx;
 8007274:	683b      	ldr	r3, [r7, #0]
 8007276:	4a22      	ldr	r2, [pc, #136]	@ (8007300 <gyro_data_ready+0x98>)
 8007278:	6013      	str	r3, [r2, #0]
		gyro_proc_data.gy = gyro_data.gy;
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	4a20      	ldr	r2, [pc, #128]	@ (8007300 <gyro_data_ready+0x98>)
 800727e:	6053      	str	r3, [r2, #4]
		if (gyro_data.gz > 0.02 || gyro_data.gz < -0.02){
 8007280:	68bb      	ldr	r3, [r7, #8]
 8007282:	4618      	mov	r0, r3
 8007284:	f7f9 f960 	bl	8000548 <__aeabi_f2d>
 8007288:	a319      	add	r3, pc, #100	@ (adr r3, 80072f0 <gyro_data_ready+0x88>)
 800728a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800728e:	f7f9 fc43 	bl	8000b18 <__aeabi_dcmpgt>
 8007292:	4603      	mov	r3, r0
 8007294:	2b00      	cmp	r3, #0
 8007296:	d10b      	bne.n	80072b0 <gyro_data_ready+0x48>
 8007298:	68bb      	ldr	r3, [r7, #8]
 800729a:	4618      	mov	r0, r3
 800729c:	f7f9 f954 	bl	8000548 <__aeabi_f2d>
 80072a0:	a315      	add	r3, pc, #84	@ (adr r3, 80072f8 <gyro_data_ready+0x90>)
 80072a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80072a6:	f7f9 fc19 	bl	8000adc <__aeabi_dcmplt>
 80072aa:	4603      	mov	r3, r0
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d003      	beq.n	80072b8 <gyro_data_ready+0x50>
			gyro_proc_data.gz = gyro_data.gz;
 80072b0:	68bb      	ldr	r3, [r7, #8]
 80072b2:	4a13      	ldr	r2, [pc, #76]	@ (8007300 <gyro_data_ready+0x98>)
 80072b4:	6093      	str	r3, [r2, #8]
 80072b6:	e003      	b.n	80072c0 <gyro_data_ready+0x58>
		} else {
			gyro_proc_data.gz = 0;
 80072b8:	4b11      	ldr	r3, [pc, #68]	@ (8007300 <gyro_data_ready+0x98>)
 80072ba:	f04f 0200 	mov.w	r2, #0
 80072be:	609a      	str	r2, [r3, #8]
		}

	}
	gyro_proc_data.last_gyro_update = gyro_data.last_gyro_update;
 80072c0:	68fb      	ldr	r3, [r7, #12]
 80072c2:	4a0f      	ldr	r2, [pc, #60]	@ (8007300 <gyro_data_ready+0x98>)
 80072c4:	60d3      	str	r3, [r2, #12]

	update_flag |= 1; //sets bit 0 to true
 80072c6:	4b0f      	ldr	r3, [pc, #60]	@ (8007304 <gyro_data_ready+0x9c>)
 80072c8:	781b      	ldrb	r3, [r3, #0]
 80072ca:	f043 0301 	orr.w	r3, r3, #1
 80072ce:	b2da      	uxtb	r2, r3
 80072d0:	4b0c      	ldr	r3, [pc, #48]	@ (8007304 <gyro_data_ready+0x9c>)
 80072d2:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when all the data is new
	if (update_flag == 0b111|| update_flag == 0b011) {
 80072d4:	4b0b      	ldr	r3, [pc, #44]	@ (8007304 <gyro_data_ready+0x9c>)
 80072d6:	781b      	ldrb	r3, [r3, #0]
 80072d8:	2b07      	cmp	r3, #7
 80072da:	d003      	beq.n	80072e4 <gyro_data_ready+0x7c>
 80072dc:	4b09      	ldr	r3, [pc, #36]	@ (8007304 <gyro_data_ready+0x9c>)
 80072de:	781b      	ldrb	r3, [r3, #0]
 80072e0:	2b03      	cmp	r3, #3
 80072e2:	d101      	bne.n	80072e8 <gyro_data_ready+0x80>
		imu_proc_task_notif();
 80072e4:	f7ff ff9c 	bl	8007220 <imu_proc_task_notif>
	}
}
 80072e8:	bf00      	nop
 80072ea:	3714      	adds	r7, #20
 80072ec:	46bd      	mov	sp, r7
 80072ee:	bd90      	pop	{r4, r7, pc}
 80072f0:	47ae147b 	.word	0x47ae147b
 80072f4:	3f947ae1 	.word	0x3f947ae1
 80072f8:	47ae147b 	.word	0x47ae147b
 80072fc:	bf947ae1 	.word	0xbf947ae1
 8007300:	20003738 	.word	0x20003738
 8007304:	20003754 	.word	0x20003754

08007308 <accel_data_ready>:

void accel_data_ready(accel_data_t accel_data) {
 8007308:	b590      	push	{r4, r7, lr}
 800730a:	b085      	sub	sp, #20
 800730c:	af00      	add	r7, sp, #0
 800730e:	463c      	mov	r4, r7
 8007310:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		accel_proc_data.ax = accel_data.az;
		accel_proc_data.ay = accel_data.ay;
		accel_proc_data.az = -accel_data.ax;
	} else {

		accel_proc_data.ax = accel_data.ax;
 8007314:	683b      	ldr	r3, [r7, #0]
 8007316:	4a10      	ldr	r2, [pc, #64]	@ (8007358 <accel_data_ready+0x50>)
 8007318:	6013      	str	r3, [r2, #0]
		accel_proc_data.ay = accel_data.ay;
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	4a0e      	ldr	r2, [pc, #56]	@ (8007358 <accel_data_ready+0x50>)
 800731e:	6053      	str	r3, [r2, #4]
		accel_proc_data.az = accel_data.az;
 8007320:	68bb      	ldr	r3, [r7, #8]
 8007322:	4a0d      	ldr	r2, [pc, #52]	@ (8007358 <accel_data_ready+0x50>)
 8007324:	6093      	str	r3, [r2, #8]
	}

	accel_proc_data.last_accel_update = accel_data.last_accel_update;
 8007326:	68fb      	ldr	r3, [r7, #12]
 8007328:	4a0b      	ldr	r2, [pc, #44]	@ (8007358 <accel_data_ready+0x50>)
 800732a:	60d3      	str	r3, [r2, #12]

	update_flag |= 1 << 1; //sets bit 1 to true
 800732c:	4b0b      	ldr	r3, [pc, #44]	@ (800735c <accel_data_ready+0x54>)
 800732e:	781b      	ldrb	r3, [r3, #0]
 8007330:	f043 0302 	orr.w	r3, r3, #2
 8007334:	b2da      	uxtb	r2, r3
 8007336:	4b09      	ldr	r3, [pc, #36]	@ (800735c <accel_data_ready+0x54>)
 8007338:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when accel and gyro data are new
	if (update_flag == 0b111 || update_flag == 0b011) {
 800733a:	4b08      	ldr	r3, [pc, #32]	@ (800735c <accel_data_ready+0x54>)
 800733c:	781b      	ldrb	r3, [r3, #0]
 800733e:	2b07      	cmp	r3, #7
 8007340:	d003      	beq.n	800734a <accel_data_ready+0x42>
 8007342:	4b06      	ldr	r3, [pc, #24]	@ (800735c <accel_data_ready+0x54>)
 8007344:	781b      	ldrb	r3, [r3, #0]
 8007346:	2b03      	cmp	r3, #3
 8007348:	d101      	bne.n	800734e <accel_data_ready+0x46>
		imu_proc_task_notif();
 800734a:	f7ff ff69 	bl	8007220 <imu_proc_task_notif>
	}
}
 800734e:	bf00      	nop
 8007350:	3714      	adds	r7, #20
 8007352:	46bd      	mov	sp, r7
 8007354:	bd90      	pop	{r4, r7, pc}
 8007356:	bf00      	nop
 8007358:	20003728 	.word	0x20003728
 800735c:	20003754 	.word	0x20003754

08007360 <mag_data_ready>:

void mag_data_ready(mag_data_t mag_data) {
 8007360:	b480      	push	{r7}
 8007362:	b085      	sub	sp, #20
 8007364:	af00      	add	r7, sp, #0
 8007366:	1d3b      	adds	r3, r7, #4
 8007368:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	mag_proc_data.mx = mag_data.mx;
 800736c:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8007370:	4b0c      	ldr	r3, [pc, #48]	@ (80073a4 <mag_data_ready+0x44>)
 8007372:	801a      	strh	r2, [r3, #0]
	mag_proc_data.my = mag_data.my;
 8007374:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007378:	4b0a      	ldr	r3, [pc, #40]	@ (80073a4 <mag_data_ready+0x44>)
 800737a:	805a      	strh	r2, [r3, #2]
	mag_proc_data.mz = mag_data.mz;
 800737c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8007380:	4b08      	ldr	r3, [pc, #32]	@ (80073a4 <mag_data_ready+0x44>)
 8007382:	809a      	strh	r2, [r3, #4]
	mag_proc_data.last_mag_update = mag_data.last_mag_update;
 8007384:	68fb      	ldr	r3, [r7, #12]
 8007386:	4a07      	ldr	r2, [pc, #28]	@ (80073a4 <mag_data_ready+0x44>)
 8007388:	6093      	str	r3, [r2, #8]

	update_flag |= 1 << 2;
 800738a:	4b07      	ldr	r3, [pc, #28]	@ (80073a8 <mag_data_ready+0x48>)
 800738c:	781b      	ldrb	r3, [r3, #0]
 800738e:	f043 0304 	orr.w	r3, r3, #4
 8007392:	b2da      	uxtb	r2, r3
 8007394:	4b04      	ldr	r3, [pc, #16]	@ (80073a8 <mag_data_ready+0x48>)
 8007396:	701a      	strb	r2, [r3, #0]
	if (update_flag == 0b111) {
		//disabled as magnetometer data is not used
		//imu_proc_task_notif();
	}
}
 8007398:	bf00      	nop
 800739a:	3714      	adds	r7, #20
 800739c:	46bd      	mov	sp, r7
 800739e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a2:	4770      	bx	lr
 80073a4:	20003748 	.word	0x20003748
 80073a8:	20003754 	.word	0x20003754

080073ac <imu_processing_task>:

void imu_processing_task(void *argument) {
 80073ac:	b580      	push	{r7, lr}
 80073ae:	b082      	sub	sp, #8
 80073b0:	af00      	add	r7, sp, #0
 80073b2:	6078      	str	r0, [r7, #4]
	imu_start_ints();
 80073b4:	f7fa fc0a 	bl	8001bcc <imu_start_ints>
	ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80073b8:	f04f 31ff 	mov.w	r1, #4294967295
 80073bc:	2001      	movs	r0, #1
 80073be:	f011 fe55 	bl	801906c <ulTaskNotifyTake>
	imu_attitude_update();
 80073c2:	f000 f815 	bl	80073f0 <imu_attitude_update>
//	quat_startup();
	while (1) {
		fusion();
 80073c6:	f7ff fbbb 	bl	8006b40 <fusion>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80073ca:	f04f 31ff 	mov.w	r1, #4294967295
 80073ce:	2001      	movs	r0, #1
 80073d0:	f011 fe4c 	bl	801906c <ulTaskNotifyTake>
		imu_attitude_update();
 80073d4:	f000 f80c 	bl	80073f0 <imu_attitude_update>
		portYIELD();
 80073d8:	4b04      	ldr	r3, [pc, #16]	@ (80073ec <imu_processing_task+0x40>)
 80073da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80073de:	601a      	str	r2, [r3, #0]
 80073e0:	f3bf 8f4f 	dsb	sy
 80073e4:	f3bf 8f6f 	isb	sy
		fusion();
 80073e8:	bf00      	nop
 80073ea:	e7ec      	b.n	80073c6 <imu_processing_task+0x1a>
 80073ec:	e000ed04 	.word	0xe000ed04

080073f0 <imu_attitude_update>:
	}
}


void imu_attitude_update(void) {
 80073f0:	b480      	push	{r7}
 80073f2:	af00      	add	r7, sp, #0

}
 80073f4:	bf00      	nop
 80073f6:	46bd      	mov	sp, r7
 80073f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073fc:	4770      	bx	lr

080073fe <clamp_angle>:
double left_Tp_control;
double right_F_control;
double right_Tp_control;
extern Target target;

float clamp_angle(float angle, float min_angle, float max_angle) {
 80073fe:	b480      	push	{r7}
 8007400:	b085      	sub	sp, #20
 8007402:	af00      	add	r7, sp, #0
 8007404:	ed87 0a03 	vstr	s0, [r7, #12]
 8007408:	edc7 0a02 	vstr	s1, [r7, #8]
 800740c:	ed87 1a01 	vstr	s2, [r7, #4]
    if (angle < min_angle) {
 8007410:	ed97 7a03 	vldr	s14, [r7, #12]
 8007414:	edd7 7a02 	vldr	s15, [r7, #8]
 8007418:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800741c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007420:	d501      	bpl.n	8007426 <clamp_angle+0x28>
        return min_angle;
 8007422:	68bb      	ldr	r3, [r7, #8]
 8007424:	e00b      	b.n	800743e <clamp_angle+0x40>
    } else if (angle > max_angle) {
 8007426:	ed97 7a03 	vldr	s14, [r7, #12]
 800742a:	edd7 7a01 	vldr	s15, [r7, #4]
 800742e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8007432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007436:	dd01      	ble.n	800743c <clamp_angle+0x3e>
        return max_angle;
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	e000      	b.n	800743e <clamp_angle+0x40>
    } else {
        return angle;
 800743c:	68fb      	ldr	r3, [r7, #12]
    }
}
 800743e:	ee07 3a90 	vmov	s15, r3
 8007442:	eeb0 0a67 	vmov.f32	s0, s15
 8007446:	3714      	adds	r7, #20
 8007448:	46bd      	mov	sp, r7
 800744a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800744e:	4770      	bx	lr

08007450 <leg_kinematic_task>:

void leg_kinematic_task(void *argument) {
 8007450:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8007454:	ed2d 8b04 	vpush	{d8-d9}
 8007458:	b0da      	sub	sp, #360	@ 0x168
 800745a:	af00      	add	r7, sp, #0
 800745c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8007460:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 8007464:	6018      	str	r0, [r3, #0]
	double leftTorque[2];
	double rightTorque[2];
	double starttime = 0;
 8007466:	f04f 0200 	mov.w	r2, #0
 800746a:	f04f 0300 	mov.w	r3, #0
 800746e:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
	double endtime = 0;
 8007472:	f04f 0200 	mov.w	r2, #0
 8007476:	f04f 0300 	mov.w	r3, #0
 800747a:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
	PID left_Tp;
	PID right_F;
	PID right_Tp;
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800747e:	f7fa fe9f 	bl	80021c0 <get_microseconds>
 8007482:	4603      	mov	r3, r0
 8007484:	4618      	mov	r0, r3
 8007486:	f7f9 f83d 	bl	8000504 <__aeabi_ui2d>
 800748a:	4602      	mov	r2, r0
 800748c:	460b      	mov	r3, r1
 800748e:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
        dt = endtime - starttime;
 8007492:	e9d7 2358 	ldrd	r2, r3, [r7, #352]	@ 0x160
 8007496:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	@ 0x158
 800749a:	f7f8 fef5 	bl	8000288 <__aeabi_dsub>
 800749e:	4602      	mov	r2, r0
 80074a0:	460b      	mov	r3, r1
 80074a2:	e9c7 2354 	strd	r2, r3, [r7, #336]	@ 0x150
        start_time = xTaskGetTickCount();
 80074a6:	f011 f965 	bl	8018774 <xTaskGetTickCount>
 80074aa:	4602      	mov	r2, r0
 80074ac:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 80074b0:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 80074b4:	601a      	str	r2, [r3, #0]
        starttime = get_microseconds();
 80074b6:	f7fa fe83 	bl	80021c0 <get_microseconds>
 80074ba:	4603      	mov	r3, r0
 80074bc:	4618      	mov	r0, r3
 80074be:	f7f9 f821 	bl	8000504 <__aeabi_ui2d>
 80074c2:	4602      	mov	r2, r0
 80074c4:	460b      	mov	r3, r1
 80074c6:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
        g_can_motors[6].angle_rad= clamp_angle(g_can_motors[6].angle_rad,g_can_motors[6].angle_data.min_ang,g_can_motors[6].angle_data.max_ang);
 80074ca:	4b9f      	ldr	r3, [pc, #636]	@ (8007748 <leg_kinematic_task+0x2f8>)
 80074cc:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 80074d0:	edd3 7a00 	vldr	s15, [r3]
 80074d4:	4b9c      	ldr	r3, [pc, #624]	@ (8007748 <leg_kinematic_task+0x2f8>)
 80074d6:	f203 6354 	addw	r3, r3, #1620	@ 0x654
 80074da:	ed93 7a00 	vldr	s14, [r3]
 80074de:	4b9a      	ldr	r3, [pc, #616]	@ (8007748 <leg_kinematic_task+0x2f8>)
 80074e0:	f503 63cb 	add.w	r3, r3, #1624	@ 0x658
 80074e4:	edd3 6a00 	vldr	s13, [r3]
 80074e8:	eeb0 1a66 	vmov.f32	s2, s13
 80074ec:	eef0 0a47 	vmov.f32	s1, s14
 80074f0:	eeb0 0a67 	vmov.f32	s0, s15
 80074f4:	f7ff ff83 	bl	80073fe <clamp_angle>
 80074f8:	eef0 7a40 	vmov.f32	s15, s0
 80074fc:	4b92      	ldr	r3, [pc, #584]	@ (8007748 <leg_kinematic_task+0x2f8>)
 80074fe:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 8007502:	edc3 7a00 	vstr	s15, [r3]
        g_can_motors[7].angle_rad= clamp_angle(g_can_motors[7].angle_rad,g_can_motors[7].angle_data.min_ang,g_can_motors[7].angle_data.max_ang);
 8007506:	4b90      	ldr	r3, [pc, #576]	@ (8007748 <leg_kinematic_task+0x2f8>)
 8007508:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 800750c:	edd3 7a00 	vldr	s15, [r3]
 8007510:	4b8d      	ldr	r3, [pc, #564]	@ (8007748 <leg_kinematic_task+0x2f8>)
 8007512:	f203 7344 	addw	r3, r3, #1860	@ 0x744
 8007516:	ed93 7a00 	vldr	s14, [r3]
 800751a:	4b8b      	ldr	r3, [pc, #556]	@ (8007748 <leg_kinematic_task+0x2f8>)
 800751c:	f503 63e9 	add.w	r3, r3, #1864	@ 0x748
 8007520:	edd3 6a00 	vldr	s13, [r3]
 8007524:	eeb0 1a66 	vmov.f32	s2, s13
 8007528:	eef0 0a47 	vmov.f32	s1, s14
 800752c:	eeb0 0a67 	vmov.f32	s0, s15
 8007530:	f7ff ff65 	bl	80073fe <clamp_angle>
 8007534:	eef0 7a40 	vmov.f32	s15, s0
 8007538:	4b83      	ldr	r3, [pc, #524]	@ (8007748 <leg_kinematic_task+0x2f8>)
 800753a:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 800753e:	edc3 7a00 	vstr	s15, [r3]

        /////////
       leg_pos(g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,left_leg_pos); //8->4 9->5
 8007542:	4b81      	ldr	r3, [pc, #516]	@ (8007748 <leg_kinematic_task+0x2f8>)
 8007544:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 8007548:	681b      	ldr	r3, [r3, #0]
 800754a:	4618      	mov	r0, r3
 800754c:	f7f8 fffc 	bl	8000548 <__aeabi_f2d>
 8007550:	4604      	mov	r4, r0
 8007552:	460d      	mov	r5, r1
 8007554:	4b7c      	ldr	r3, [pc, #496]	@ (8007748 <leg_kinematic_task+0x2f8>)
 8007556:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	4618      	mov	r0, r3
 800755e:	f7f8 fff3 	bl	8000548 <__aeabi_f2d>
 8007562:	4680      	mov	r8, r0
 8007564:	4689      	mov	r9, r1
 8007566:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 800756a:	4618      	mov	r0, r3
 800756c:	ec49 8b11 	vmov	d1, r8, r9
 8007570:	ec45 4b10 	vmov	d0, r4, r5
 8007574:	f000 f9ac 	bl	80078d0 <leg_pos>
       leftLegPos.length = left_leg_pos[0];
 8007578:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	@ 0x120
 800757c:	4610      	mov	r0, r2
 800757e:	4619      	mov	r1, r3
 8007580:	f7f9 fb32 	bl	8000be8 <__aeabi_d2f>
 8007584:	4603      	mov	r3, r0
 8007586:	4a71      	ldr	r2, [pc, #452]	@ (800774c <leg_kinematic_task+0x2fc>)
 8007588:	6053      	str	r3, [r2, #4]
       leftLegPos.angle = left_leg_pos[1];
 800758a:	e9d7 234a 	ldrd	r2, r3, [r7, #296]	@ 0x128
 800758e:	4610      	mov	r0, r2
 8007590:	4619      	mov	r1, r3
 8007592:	f7f9 fb29 	bl	8000be8 <__aeabi_d2f>
 8007596:	4603      	mov	r3, r0
 8007598:	4a6c      	ldr	r2, [pc, #432]	@ (800774c <leg_kinematic_task+0x2fc>)
 800759a:	6013      	str	r3, [r2, #0]
       leftLegPos.angle = leftLegPos.angle - PI/2;
 800759c:	4b6b      	ldr	r3, [pc, #428]	@ (800774c <leg_kinematic_task+0x2fc>)
 800759e:	edd3 7a00 	vldr	s15, [r3]
 80075a2:	ed9f 7a6b 	vldr	s14, [pc, #428]	@ 8007750 <leg_kinematic_task+0x300>
 80075a6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80075aa:	4b68      	ldr	r3, [pc, #416]	@ (800774c <leg_kinematic_task+0x2fc>)
 80075ac:	edc3 7a00 	vstr	s15, [r3]
    //    leg_pos(g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,right_leg_pos);//17->6 16->7
    //    rightLegPos.length = right_leg_pos[0];
    //    rightLegPos.angle = right_leg_pos[1];
       PID_Init(&left_F, 5, 0, 0.01, -1000, 1000); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
 80075b0:	f107 03d0 	add.w	r3, r7, #208	@ 0xd0
 80075b4:	ed9f 4b52 	vldr	d4, [pc, #328]	@ 8007700 <leg_kinematic_task+0x2b0>
 80075b8:	ed9f 3b53 	vldr	d3, [pc, #332]	@ 8007708 <leg_kinematic_task+0x2b8>
 80075bc:	ed9f 2b54 	vldr	d2, [pc, #336]	@ 8007710 <leg_kinematic_task+0x2c0>
 80075c0:	ed9f 1b55 	vldr	d1, [pc, #340]	@ 8007718 <leg_kinematic_task+0x2c8>
 80075c4:	ed9f 0b56 	vldr	d0, [pc, #344]	@ 8007720 <leg_kinematic_task+0x2d0>
 80075c8:	4618      	mov	r0, r3
 80075ca:	f7fd fa58 	bl	8004a7e <PID_Init>
       PID_Init(&left_Tp, 0.01, 0.01, 0.01, -10, 10); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
 80075ce:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 80075d2:	ed9f 4b55 	vldr	d4, [pc, #340]	@ 8007728 <leg_kinematic_task+0x2d8>
 80075d6:	ed9f 3b56 	vldr	d3, [pc, #344]	@ 8007730 <leg_kinematic_task+0x2e0>
 80075da:	ed9f 2b4d 	vldr	d2, [pc, #308]	@ 8007710 <leg_kinematic_task+0x2c0>
 80075de:	ed9f 1b4c 	vldr	d1, [pc, #304]	@ 8007710 <leg_kinematic_task+0x2c0>
 80075e2:	ed9f 0b4b 	vldr	d0, [pc, #300]	@ 8007710 <leg_kinematic_task+0x2c0>
 80075e6:	4618      	mov	r0, r3
 80075e8:	f7fd fa49 	bl	8004a7e <PID_Init>
    //    PID_Init(&right_F, 5000, 0, 0.01, -1000, 1000); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
    //    PID_Init(&right_Tp, 0.01, 0.01, 0.01, -10, 10);
       left_F_control = PID_Compute(&left_F, 0.18, leftLegPos.length, dt,0.001);
 80075ec:	4b57      	ldr	r3, [pc, #348]	@ (800774c <leg_kinematic_task+0x2fc>)
 80075ee:	685b      	ldr	r3, [r3, #4]
 80075f0:	4618      	mov	r0, r3
 80075f2:	f7f8 ffa9 	bl	8000548 <__aeabi_f2d>
 80075f6:	f107 03d0 	add.w	r3, r7, #208	@ 0xd0
 80075fa:	ed9f 3b4f 	vldr	d3, [pc, #316]	@ 8007738 <leg_kinematic_task+0x2e8>
 80075fe:	ed97 2b54 	vldr	d2, [r7, #336]	@ 0x150
 8007602:	ec41 0b11 	vmov	d1, r0, r1
 8007606:	ed9f 0b4e 	vldr	d0, [pc, #312]	@ 8007740 <leg_kinematic_task+0x2f0>
 800760a:	4618      	mov	r0, r3
 800760c:	f7fd fa72 	bl	8004af4 <PID_Compute>
 8007610:	eeb0 7a40 	vmov.f32	s14, s0
 8007614:	eef0 7a60 	vmov.f32	s15, s1
 8007618:	4b4e      	ldr	r3, [pc, #312]	@ (8007754 <leg_kinematic_task+0x304>)
 800761a:	ed83 7b00 	vstr	d7, [r3]
      //  left_Tp_control = PID_Compute(&left_Tp, PI/2, leftLegPos.angle, dt,0.001);
    //    right_F_control = PID_Compute(&right_F, 0.13, rightLegPos.length, dt,0.001);
    //    right_Tp_control = -PID_Compute(&right_Tp, 0, rightLegPos.angle, dt,0.001);
       leg_conv(left_F_control,left_Tp_control,g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,leftTorque);
 800761e:	4b4d      	ldr	r3, [pc, #308]	@ (8007754 <leg_kinematic_task+0x304>)
 8007620:	ed93 8b00 	vldr	d8, [r3]
 8007624:	4b4c      	ldr	r3, [pc, #304]	@ (8007758 <leg_kinematic_task+0x308>)
 8007626:	ed93 9b00 	vldr	d9, [r3]
 800762a:	4b47      	ldr	r3, [pc, #284]	@ (8007748 <leg_kinematic_task+0x2f8>)
 800762c:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 8007630:	681b      	ldr	r3, [r3, #0]
 8007632:	4618      	mov	r0, r3
 8007634:	f7f8 ff88 	bl	8000548 <__aeabi_f2d>
 8007638:	4604      	mov	r4, r0
 800763a:	460d      	mov	r5, r1
 800763c:	4b42      	ldr	r3, [pc, #264]	@ (8007748 <leg_kinematic_task+0x2f8>)
 800763e:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	4618      	mov	r0, r3
 8007646:	f7f8 ff7f 	bl	8000548 <__aeabi_f2d>
 800764a:	4680      	mov	r8, r0
 800764c:	4689      	mov	r9, r1
 800764e:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 8007652:	4618      	mov	r0, r3
 8007654:	ec49 8b13 	vmov	d3, r8, r9
 8007658:	ec45 4b12 	vmov	d2, r4, r5
 800765c:	eeb0 1a49 	vmov.f32	s2, s18
 8007660:	eef0 1a69 	vmov.f32	s3, s19
 8007664:	eeb0 0a48 	vmov.f32	s0, s16
 8007668:	eef0 0a68 	vmov.f32	s1, s17
 800766c:	f000 faec 	bl	8007c48 <leg_conv>
       leg_conv(right_F_control,right_Tp_control,g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,rightTorque);
 8007670:	4b3a      	ldr	r3, [pc, #232]	@ (800775c <leg_kinematic_task+0x30c>)
 8007672:	ed93 8b00 	vldr	d8, [r3]
 8007676:	4b3a      	ldr	r3, [pc, #232]	@ (8007760 <leg_kinematic_task+0x310>)
 8007678:	ed93 9b00 	vldr	d9, [r3]
 800767c:	4b32      	ldr	r3, [pc, #200]	@ (8007748 <leg_kinematic_task+0x2f8>)
 800767e:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 8007682:	681b      	ldr	r3, [r3, #0]
 8007684:	4618      	mov	r0, r3
 8007686:	f7f8 ff5f 	bl	8000548 <__aeabi_f2d>
 800768a:	4604      	mov	r4, r0
 800768c:	460d      	mov	r5, r1
 800768e:	4b2e      	ldr	r3, [pc, #184]	@ (8007748 <leg_kinematic_task+0x2f8>)
 8007690:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 8007694:	681b      	ldr	r3, [r3, #0]
 8007696:	4618      	mov	r0, r3
 8007698:	f7f8 ff56 	bl	8000548 <__aeabi_f2d>
 800769c:	4680      	mov	r8, r0
 800769e:	4689      	mov	r9, r1
 80076a0:	f507 7398 	add.w	r3, r7, #304	@ 0x130
 80076a4:	4618      	mov	r0, r3
 80076a6:	ec49 8b13 	vmov	d3, r8, r9
 80076aa:	ec45 4b12 	vmov	d2, r4, r5
 80076ae:	eeb0 1a49 	vmov.f32	s2, s18
 80076b2:	eef0 1a69 	vmov.f32	s3, s19
 80076b6:	eeb0 0a48 	vmov.f32	s0, s16
 80076ba:	eef0 0a68 	vmov.f32	s1, s17
 80076be:	f000 fac3 	bl	8007c48 <leg_conv>
       g_can_motors[6].torque = leftTorque[0];
 80076c2:	e9d7 2350 	ldrd	r2, r3, [r7, #320]	@ 0x140
 80076c6:	4610      	mov	r0, r2
 80076c8:	4619      	mov	r1, r3
 80076ca:	f7f9 fa8d 	bl	8000be8 <__aeabi_d2f>
 80076ce:	4602      	mov	r2, r0
 80076d0:	4b1d      	ldr	r3, [pc, #116]	@ (8007748 <leg_kinematic_task+0x2f8>)
 80076d2:	f503 63b9 	add.w	r3, r3, #1480	@ 0x5c8
 80076d6:	601a      	str	r2, [r3, #0]
       g_can_motors[7].torque = leftTorque[1];
 80076d8:	e9d7 2352 	ldrd	r2, r3, [r7, #328]	@ 0x148
 80076dc:	4610      	mov	r0, r2
 80076de:	4619      	mov	r1, r3
 80076e0:	f7f9 fa82 	bl	8000be8 <__aeabi_d2f>
 80076e4:	4602      	mov	r2, r0
 80076e6:	4b18      	ldr	r3, [pc, #96]	@ (8007748 <leg_kinematic_task+0x2f8>)
 80076e8:	f503 63d7 	add.w	r3, r3, #1720	@ 0x6b8
 80076ec:	601a      	str	r2, [r3, #0]
    //    g_can_motors[4].torque = rightTorque[0];
    //    g_can_motors[5].torque = rightTorque[1];
        ///////////////////
        vTaskDelayUntil(&start_time, 5);
 80076ee:	f107 030c 	add.w	r3, r7, #12
 80076f2:	2105      	movs	r1, #5
 80076f4:	4618      	mov	r0, r3
 80076f6:	f010 fe69 	bl	80183cc <vTaskDelayUntil>
        endtime = get_microseconds();
 80076fa:	bf00      	nop
 80076fc:	e6bf      	b.n	800747e <leg_kinematic_task+0x2e>
 80076fe:	bf00      	nop
 8007700:	00000000 	.word	0x00000000
 8007704:	408f4000 	.word	0x408f4000
 8007708:	00000000 	.word	0x00000000
 800770c:	c08f4000 	.word	0xc08f4000
 8007710:	47ae147b 	.word	0x47ae147b
 8007714:	3f847ae1 	.word	0x3f847ae1
	...
 8007724:	40140000 	.word	0x40140000
 8007728:	00000000 	.word	0x00000000
 800772c:	40240000 	.word	0x40240000
 8007730:	00000000 	.word	0x00000000
 8007734:	c0240000 	.word	0xc0240000
 8007738:	d2f1a9fc 	.word	0xd2f1a9fc
 800773c:	3f50624d 	.word	0x3f50624d
 8007740:	70a3d70a 	.word	0x70a3d70a
 8007744:	3fc70a3d 	.word	0x3fc70a3d
 8007748:	20001e48 	.word	0x20001e48
 800774c:	20001e34 	.word	0x20001e34
 8007750:	3fc90fdb 	.word	0x3fc90fdb
 8007754:	20003770 	.word	0x20003770
 8007758:	20003778 	.word	0x20003778
 800775c:	20003780 	.word	0x20003780
 8007760:	20003788 	.word	0x20003788
 8007764:	00000000 	.word	0x00000000

08007768 <rt_atan2d_snf>:
 8007768:	b5b0      	push	{r4, r5, r7, lr}
 800776a:	b088      	sub	sp, #32
 800776c:	af00      	add	r7, sp, #0
 800776e:	ed87 0b02 	vstr	d0, [r7, #8]
 8007772:	ed87 1b00 	vstr	d1, [r7]
 8007776:	ed97 0b02 	vldr	d0, [r7, #8]
 800777a:	f003 fc17 	bl	800afac <rtIsNaN>
 800777e:	4603      	mov	r3, r0
 8007780:	2b00      	cmp	r3, #0
 8007782:	d106      	bne.n	8007792 <rt_atan2d_snf+0x2a>
 8007784:	ed97 0b00 	vldr	d0, [r7]
 8007788:	f003 fc10 	bl	800afac <rtIsNaN>
 800778c:	4603      	mov	r3, r0
 800778e:	2b00      	cmp	r3, #0
 8007790:	d005      	beq.n	800779e <rt_atan2d_snf+0x36>
 8007792:	4b4d      	ldr	r3, [pc, #308]	@ (80078c8 <rt_atan2d_snf+0x160>)
 8007794:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007798:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800779c:	e07e      	b.n	800789c <rt_atan2d_snf+0x134>
 800779e:	ed97 0b02 	vldr	d0, [r7, #8]
 80077a2:	f003 fbd5 	bl	800af50 <rtIsInf>
 80077a6:	4603      	mov	r3, r0
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d03b      	beq.n	8007824 <rt_atan2d_snf+0xbc>
 80077ac:	ed97 0b00 	vldr	d0, [r7]
 80077b0:	f003 fbce 	bl	800af50 <rtIsInf>
 80077b4:	4603      	mov	r3, r0
 80077b6:	2b00      	cmp	r3, #0
 80077b8:	d034      	beq.n	8007824 <rt_atan2d_snf+0xbc>
 80077ba:	f04f 0200 	mov.w	r2, #0
 80077be:	f04f 0300 	mov.w	r3, #0
 80077c2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80077c6:	f7f9 f9a7 	bl	8000b18 <__aeabi_dcmpgt>
 80077ca:	4603      	mov	r3, r0
 80077cc:	2b00      	cmp	r3, #0
 80077ce:	d002      	beq.n	80077d6 <rt_atan2d_snf+0x6e>
 80077d0:	2301      	movs	r3, #1
 80077d2:	617b      	str	r3, [r7, #20]
 80077d4:	e002      	b.n	80077dc <rt_atan2d_snf+0x74>
 80077d6:	f04f 33ff 	mov.w	r3, #4294967295
 80077da:	617b      	str	r3, [r7, #20]
 80077dc:	f04f 0200 	mov.w	r2, #0
 80077e0:	f04f 0300 	mov.w	r3, #0
 80077e4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80077e8:	f7f9 f996 	bl	8000b18 <__aeabi_dcmpgt>
 80077ec:	4603      	mov	r3, r0
 80077ee:	2b00      	cmp	r3, #0
 80077f0:	d002      	beq.n	80077f8 <rt_atan2d_snf+0x90>
 80077f2:	2301      	movs	r3, #1
 80077f4:	613b      	str	r3, [r7, #16]
 80077f6:	e002      	b.n	80077fe <rt_atan2d_snf+0x96>
 80077f8:	f04f 33ff 	mov.w	r3, #4294967295
 80077fc:	613b      	str	r3, [r7, #16]
 80077fe:	6978      	ldr	r0, [r7, #20]
 8007800:	f7f8 fe90 	bl	8000524 <__aeabi_i2d>
 8007804:	4604      	mov	r4, r0
 8007806:	460d      	mov	r5, r1
 8007808:	6938      	ldr	r0, [r7, #16]
 800780a:	f7f8 fe8b 	bl	8000524 <__aeabi_i2d>
 800780e:	4602      	mov	r2, r0
 8007810:	460b      	mov	r3, r1
 8007812:	ec43 2b11 	vmov	d1, r2, r3
 8007816:	ec45 4b10 	vmov	d0, r4, r5
 800781a:	f017 ffcd 	bl	801f7b8 <atan2>
 800781e:	ed87 0b06 	vstr	d0, [r7, #24]
 8007822:	e03b      	b.n	800789c <rt_atan2d_snf+0x134>
 8007824:	f04f 0200 	mov.w	r2, #0
 8007828:	f04f 0300 	mov.w	r3, #0
 800782c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8007830:	f7f9 f94a 	bl	8000ac8 <__aeabi_dcmpeq>
 8007834:	4603      	mov	r3, r0
 8007836:	2b00      	cmp	r3, #0
 8007838:	d028      	beq.n	800788c <rt_atan2d_snf+0x124>
 800783a:	f04f 0200 	mov.w	r2, #0
 800783e:	f04f 0300 	mov.w	r3, #0
 8007842:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8007846:	f7f9 f967 	bl	8000b18 <__aeabi_dcmpgt>
 800784a:	4603      	mov	r3, r0
 800784c:	2b00      	cmp	r3, #0
 800784e:	d005      	beq.n	800785c <rt_atan2d_snf+0xf4>
 8007850:	a319      	add	r3, pc, #100	@ (adr r3, 80078b8 <rt_atan2d_snf+0x150>)
 8007852:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007856:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800785a:	e01f      	b.n	800789c <rt_atan2d_snf+0x134>
 800785c:	f04f 0200 	mov.w	r2, #0
 8007860:	f04f 0300 	mov.w	r3, #0
 8007864:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8007868:	f7f9 f938 	bl	8000adc <__aeabi_dcmplt>
 800786c:	4603      	mov	r3, r0
 800786e:	2b00      	cmp	r3, #0
 8007870:	d005      	beq.n	800787e <rt_atan2d_snf+0x116>
 8007872:	a313      	add	r3, pc, #76	@ (adr r3, 80078c0 <rt_atan2d_snf+0x158>)
 8007874:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007878:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800787c:	e00e      	b.n	800789c <rt_atan2d_snf+0x134>
 800787e:	f04f 0200 	mov.w	r2, #0
 8007882:	f04f 0300 	mov.w	r3, #0
 8007886:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800788a:	e007      	b.n	800789c <rt_atan2d_snf+0x134>
 800788c:	ed97 1b00 	vldr	d1, [r7]
 8007890:	ed97 0b02 	vldr	d0, [r7, #8]
 8007894:	f017 ff90 	bl	801f7b8 <atan2>
 8007898:	ed87 0b06 	vstr	d0, [r7, #24]
 800789c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80078a0:	ec43 2b17 	vmov	d7, r2, r3
 80078a4:	eeb0 0a47 	vmov.f32	s0, s14
 80078a8:	eef0 0a67 	vmov.f32	s1, s15
 80078ac:	3720      	adds	r7, #32
 80078ae:	46bd      	mov	sp, r7
 80078b0:	bdb0      	pop	{r4, r5, r7, pc}
 80078b2:	bf00      	nop
 80078b4:	f3af 8000 	nop.w
 80078b8:	54442d18 	.word	0x54442d18
 80078bc:	3ff921fb 	.word	0x3ff921fb
 80078c0:	54442d18 	.word	0x54442d18
 80078c4:	bff921fb 	.word	0xbff921fb
 80078c8:	20000010 	.word	0x20000010
 80078cc:	00000000 	.word	0x00000000

080078d0 <leg_pos>:
 80078d0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80078d4:	b09a      	sub	sp, #104	@ 0x68
 80078d6:	af00      	add	r7, sp, #0
 80078d8:	ed87 0b04 	vstr	d0, [r7, #16]
 80078dc:	ed87 1b02 	vstr	d1, [r7, #8]
 80078e0:	6078      	str	r0, [r7, #4]
 80078e2:	ed97 0b04 	vldr	d0, [r7, #16]
 80078e6:	f018 f92f 	bl	801fb48 <cos>
 80078ea:	ed87 0b18 	vstr	d0, [r7, #96]	@ 0x60
 80078ee:	ed97 0b02 	vldr	d0, [r7, #8]
 80078f2:	f018 f929 	bl	801fb48 <cos>
 80078f6:	ed87 0b16 	vstr	d0, [r7, #88]	@ 0x58
 80078fa:	ed97 0b04 	vldr	d0, [r7, #16]
 80078fe:	f018 f97f 	bl	801fc00 <sin>
 8007902:	ed87 0b14 	vstr	d0, [r7, #80]	@ 0x50
 8007906:	ed97 0b02 	vldr	d0, [r7, #8]
 800790a:	f018 f979 	bl	801fc00 <sin>
 800790e:	ed87 0b12 	vstr	d0, [r7, #72]	@ 0x48
 8007912:	a3c4      	add	r3, pc, #784	@ (adr r3, 8007c24 <leg_pos+0x354>)
 8007914:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007918:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800791c:	f7f8 fe6c 	bl	80005f8 <__aeabi_dmul>
 8007920:	4602      	mov	r2, r0
 8007922:	460b      	mov	r3, r1
 8007924:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8007928:	a3be      	add	r3, pc, #760	@ (adr r3, 8007c24 <leg_pos+0x354>)
 800792a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800792e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007932:	f7f8 fe61 	bl	80005f8 <__aeabi_dmul>
 8007936:	4602      	mov	r2, r0
 8007938:	460b      	mov	r3, r1
 800793a:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
 800793e:	a3bb      	add	r3, pc, #748	@ (adr r3, 8007c2c <leg_pos+0x35c>)
 8007940:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007944:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007948:	f7f8 fe56 	bl	80005f8 <__aeabi_dmul>
 800794c:	4602      	mov	r2, r0
 800794e:	460b      	mov	r3, r1
 8007950:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8007954:	a3b5      	add	r3, pc, #724	@ (adr r3, 8007c2c <leg_pos+0x35c>)
 8007956:	e9d3 2300 	ldrd	r2, r3, [r3]
 800795a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800795e:	f7f8 fe4b 	bl	80005f8 <__aeabi_dmul>
 8007962:	4602      	mov	r2, r0
 8007964:	460b      	mov	r3, r1
 8007966:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800796a:	a3ae      	add	r3, pc, #696	@ (adr r3, 8007c24 <leg_pos+0x354>)
 800796c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007970:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007974:	f7f8 fe40 	bl	80005f8 <__aeabi_dmul>
 8007978:	4602      	mov	r2, r0
 800797a:	460b      	mov	r3, r1
 800797c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8007980:	f7f8 fc82 	bl	8000288 <__aeabi_dsub>
 8007984:	4602      	mov	r2, r0
 8007986:	460b      	mov	r3, r1
 8007988:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 800798c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8007990:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8007994:	f7f8 fc78 	bl	8000288 <__aeabi_dsub>
 8007998:	4602      	mov	r2, r0
 800799a:	460b      	mov	r3, r1
 800799c:	e9c7 2308 	strd	r2, r3, [r7, #32]
 80079a0:	a3a0      	add	r3, pc, #640	@ (adr r3, 8007c24 <leg_pos+0x354>)
 80079a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079a6:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 80079aa:	f7f8 fe25 	bl	80005f8 <__aeabi_dmul>
 80079ae:	4602      	mov	r2, r0
 80079b0:	460b      	mov	r3, r1
 80079b2:	4610      	mov	r0, r2
 80079b4:	4619      	mov	r1, r3
 80079b6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80079ba:	f7f8 fc65 	bl	8000288 <__aeabi_dsub>
 80079be:	4602      	mov	r2, r0
 80079c0:	460b      	mov	r3, r1
 80079c2:	4610      	mov	r0, r2
 80079c4:	4619      	mov	r1, r3
 80079c6:	a39b      	add	r3, pc, #620	@ (adr r3, 8007c34 <leg_pos+0x364>)
 80079c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079cc:	f7f8 fc5e 	bl	800028c <__adddf3>
 80079d0:	4602      	mov	r2, r0
 80079d2:	460b      	mov	r3, r1
 80079d4:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80079d8:	a394      	add	r3, pc, #592	@ (adr r3, 8007c2c <leg_pos+0x35c>)
 80079da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079de:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 80079e2:	f7f8 fe09 	bl	80005f8 <__aeabi_dmul>
 80079e6:	4602      	mov	r2, r0
 80079e8:	460b      	mov	r3, r1
 80079ea:	4614      	mov	r4, r2
 80079ec:	461d      	mov	r5, r3
 80079ee:	a38f      	add	r3, pc, #572	@ (adr r3, 8007c2c <leg_pos+0x35c>)
 80079f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079f4:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 80079f8:	f7f8 fdfe 	bl	80005f8 <__aeabi_dmul>
 80079fc:	4602      	mov	r2, r0
 80079fe:	460b      	mov	r3, r1
 8007a00:	4620      	mov	r0, r4
 8007a02:	4629      	mov	r1, r5
 8007a04:	f7f8 fc40 	bl	8000288 <__aeabi_dsub>
 8007a08:	4602      	mov	r2, r0
 8007a0a:	460b      	mov	r3, r1
 8007a0c:	4610      	mov	r0, r2
 8007a0e:	4619      	mov	r1, r3
 8007a10:	a38a      	add	r3, pc, #552	@ (adr r3, 8007c3c <leg_pos+0x36c>)
 8007a12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a16:	f7f8 fc39 	bl	800028c <__adddf3>
 8007a1a:	4602      	mov	r2, r0
 8007a1c:	460b      	mov	r3, r1
 8007a1e:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007a22:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007a26:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007a2a:	f7f8 fde5 	bl	80005f8 <__aeabi_dmul>
 8007a2e:	4602      	mov	r2, r0
 8007a30:	460b      	mov	r3, r1
 8007a32:	4614      	mov	r4, r2
 8007a34:	461d      	mov	r5, r3
 8007a36:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8007a3a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8007a3e:	f7f8 fddb 	bl	80005f8 <__aeabi_dmul>
 8007a42:	4602      	mov	r2, r0
 8007a44:	460b      	mov	r3, r1
 8007a46:	4620      	mov	r0, r4
 8007a48:	4629      	mov	r1, r5
 8007a4a:	f7f8 fc1f 	bl	800028c <__adddf3>
 8007a4e:	4602      	mov	r2, r0
 8007a50:	460b      	mov	r3, r1
 8007a52:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007a56:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007a5a:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007a5e:	f7f8 fc15 	bl	800028c <__adddf3>
 8007a62:	4602      	mov	r2, r0
 8007a64:	460b      	mov	r3, r1
 8007a66:	f04f 0000 	mov.w	r0, #0
 8007a6a:	496d      	ldr	r1, [pc, #436]	@ (8007c20 <leg_pos+0x350>)
 8007a6c:	f7f8 feee 	bl	800084c <__aeabi_ddiv>
 8007a70:	4602      	mov	r2, r0
 8007a72:	460b      	mov	r3, r1
 8007a74:	4614      	mov	r4, r2
 8007a76:	461d      	mov	r5, r3
 8007a78:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8007a7c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8007a80:	f7f8 fc02 	bl	8000288 <__aeabi_dsub>
 8007a84:	4602      	mov	r2, r0
 8007a86:	460b      	mov	r3, r1
 8007a88:	4690      	mov	r8, r2
 8007a8a:	4699      	mov	r9, r3
 8007a8c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8007a90:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8007a94:	f7f8 fdb0 	bl	80005f8 <__aeabi_dmul>
 8007a98:	4602      	mov	r2, r0
 8007a9a:	460b      	mov	r3, r1
 8007a9c:	4692      	mov	sl, r2
 8007a9e:	469b      	mov	fp, r3
 8007aa0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007aa4:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007aa8:	f7f8 fda6 	bl	80005f8 <__aeabi_dmul>
 8007aac:	4602      	mov	r2, r0
 8007aae:	460b      	mov	r3, r1
 8007ab0:	4650      	mov	r0, sl
 8007ab2:	4659      	mov	r1, fp
 8007ab4:	f7f8 fbea 	bl	800028c <__adddf3>
 8007ab8:	4602      	mov	r2, r0
 8007aba:	460b      	mov	r3, r1
 8007abc:	4692      	mov	sl, r2
 8007abe:	469b      	mov	fp, r3
 8007ac0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007ac4:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007ac8:	f7f8 fd96 	bl	80005f8 <__aeabi_dmul>
 8007acc:	4602      	mov	r2, r0
 8007ace:	460b      	mov	r3, r1
 8007ad0:	4650      	mov	r0, sl
 8007ad2:	4659      	mov	r1, fp
 8007ad4:	f7f8 fbd8 	bl	8000288 <__aeabi_dsub>
 8007ad8:	4602      	mov	r2, r0
 8007ada:	460b      	mov	r3, r1
 8007adc:	ec43 2b17 	vmov	d7, r2, r3
 8007ae0:	eeb0 0a47 	vmov.f32	s0, s14
 8007ae4:	eef0 0a67 	vmov.f32	s1, s15
 8007ae8:	f017 fe68 	bl	801f7bc <sqrt>
 8007aec:	ec53 2b10 	vmov	r2, r3, d0
 8007af0:	4640      	mov	r0, r8
 8007af2:	4649      	mov	r1, r9
 8007af4:	f7f8 fbca 	bl	800028c <__adddf3>
 8007af8:	4602      	mov	r2, r0
 8007afa:	460b      	mov	r3, r1
 8007afc:	4620      	mov	r0, r4
 8007afe:	4629      	mov	r1, r5
 8007b00:	f7f8 fd7a 	bl	80005f8 <__aeabi_dmul>
 8007b04:	4602      	mov	r2, r0
 8007b06:	460b      	mov	r3, r1
 8007b08:	ec43 2b17 	vmov	d7, r2, r3
 8007b0c:	eeb0 0a47 	vmov.f32	s0, s14
 8007b10:	eef0 0a67 	vmov.f32	s1, s15
 8007b14:	f017 fe80 	bl	801f818 <atan>
 8007b18:	ec51 0b10 	vmov	r0, r1, d0
 8007b1c:	4602      	mov	r2, r0
 8007b1e:	460b      	mov	r3, r1
 8007b20:	f7f8 fbb4 	bl	800028c <__adddf3>
 8007b24:	4602      	mov	r2, r0
 8007b26:	460b      	mov	r3, r1
 8007b28:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007b2c:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 8007b30:	f018 f866 	bl	801fc00 <sin>
 8007b34:	ec51 0b10 	vmov	r0, r1, d0
 8007b38:	a335      	add	r3, pc, #212	@ (adr r3, 8007c10 <leg_pos+0x340>)
 8007b3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b3e:	f7f8 fd5b 	bl	80005f8 <__aeabi_dmul>
 8007b42:	4602      	mov	r2, r0
 8007b44:	460b      	mov	r3, r1
 8007b46:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8007b4a:	f7f8 fb9f 	bl	800028c <__adddf3>
 8007b4e:	4602      	mov	r2, r0
 8007b50:	460b      	mov	r3, r1
 8007b52:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007b56:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 8007b5a:	f017 fff5 	bl	801fb48 <cos>
 8007b5e:	ec51 0b10 	vmov	r0, r1, d0
 8007b62:	a32b      	add	r3, pc, #172	@ (adr r3, 8007c10 <leg_pos+0x340>)
 8007b64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b68:	f7f8 fd46 	bl	80005f8 <__aeabi_dmul>
 8007b6c:	4602      	mov	r2, r0
 8007b6e:	460b      	mov	r3, r1
 8007b70:	4610      	mov	r0, r2
 8007b72:	4619      	mov	r1, r3
 8007b74:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007b78:	f7f8 fb88 	bl	800028c <__adddf3>
 8007b7c:	4602      	mov	r2, r0
 8007b7e:	460b      	mov	r3, r1
 8007b80:	4610      	mov	r0, r2
 8007b82:	4619      	mov	r1, r3
 8007b84:	a324      	add	r3, pc, #144	@ (adr r3, 8007c18 <leg_pos+0x348>)
 8007b86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007b8a:	f7f8 fb7d 	bl	8000288 <__aeabi_dsub>
 8007b8e:	4602      	mov	r2, r0
 8007b90:	460b      	mov	r3, r1
 8007b92:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007b96:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007b9a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007b9e:	f7f8 fd2b 	bl	80005f8 <__aeabi_dmul>
 8007ba2:	4602      	mov	r2, r0
 8007ba4:	460b      	mov	r3, r1
 8007ba6:	4614      	mov	r4, r2
 8007ba8:	461d      	mov	r5, r3
 8007baa:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007bae:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007bb2:	f7f8 fd21 	bl	80005f8 <__aeabi_dmul>
 8007bb6:	4602      	mov	r2, r0
 8007bb8:	460b      	mov	r3, r1
 8007bba:	4620      	mov	r0, r4
 8007bbc:	4629      	mov	r1, r5
 8007bbe:	f7f8 fb65 	bl	800028c <__adddf3>
 8007bc2:	4602      	mov	r2, r0
 8007bc4:	460b      	mov	r3, r1
 8007bc6:	ec43 2b17 	vmov	d7, r2, r3
 8007bca:	eeb0 0a47 	vmov.f32	s0, s14
 8007bce:	eef0 0a67 	vmov.f32	s1, s15
 8007bd2:	f017 fdf3 	bl	801f7bc <sqrt>
 8007bd6:	eeb0 7a40 	vmov.f32	s14, s0
 8007bda:	eef0 7a60 	vmov.f32	s15, s1
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	ed83 7b00 	vstr	d7, [r3]
 8007be4:	687b      	ldr	r3, [r7, #4]
 8007be6:	f103 0408 	add.w	r4, r3, #8
 8007bea:	ed97 1b14 	vldr	d1, [r7, #80]	@ 0x50
 8007bee:	ed97 0b12 	vldr	d0, [r7, #72]	@ 0x48
 8007bf2:	f7ff fdb9 	bl	8007768 <rt_atan2d_snf>
 8007bf6:	eeb0 7a40 	vmov.f32	s14, s0
 8007bfa:	eef0 7a60 	vmov.f32	s15, s1
 8007bfe:	ed84 7b00 	vstr	d7, [r4]
 8007c02:	bf00      	nop
 8007c04:	3768      	adds	r7, #104	@ 0x68
 8007c06:	46bd      	mov	sp, r7
 8007c08:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007c0c:	f3af 8000 	nop.w
 8007c10:	33333333 	.word	0x33333333
 8007c14:	3fc33333 	.word	0x3fc33333
 8007c18:	5532617c 	.word	0x5532617c
 8007c1c:	3fa92a30 	.word	0x3fa92a30
 8007c20:	3ff00000 	.word	0x3ff00000
 8007c24:	47ae147b 	.word	0x47ae147b
 8007c28:	3fb47ae1 	.word	0x3fb47ae1
 8007c2c:	bc6a7efa 	.word	0xbc6a7efa
 8007c30:	3f989374 	.word	0x3f989374
 8007c34:	5532617c 	.word	0x5532617c
 8007c38:	3fb92a30 	.word	0x3fb92a30
 8007c3c:	663c74fb 	.word	0x663c74fb
 8007c40:	3f9e32a0 	.word	0x3f9e32a0
 8007c44:	00000000 	.word	0x00000000

08007c48 <leg_conv>:
 8007c48:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007c4c:	b0ba      	sub	sp, #232	@ 0xe8
 8007c4e:	af00      	add	r7, sp, #0
 8007c50:	ed87 0b08 	vstr	d0, [r7, #32]
 8007c54:	ed87 1b06 	vstr	d1, [r7, #24]
 8007c58:	ed87 2b04 	vstr	d2, [r7, #16]
 8007c5c:	ed87 3b02 	vstr	d3, [r7, #8]
 8007c60:	6078      	str	r0, [r7, #4]
 8007c62:	ed97 0b04 	vldr	d0, [r7, #16]
 8007c66:	f017 ff6f 	bl	801fb48 <cos>
 8007c6a:	ed87 0b38 	vstr	d0, [r7, #224]	@ 0xe0
 8007c6e:	ed97 0b02 	vldr	d0, [r7, #8]
 8007c72:	f017 ff69 	bl	801fb48 <cos>
 8007c76:	ed87 0b36 	vstr	d0, [r7, #216]	@ 0xd8
 8007c7a:	ed97 0b04 	vldr	d0, [r7, #16]
 8007c7e:	f017 ffbf 	bl	801fc00 <sin>
 8007c82:	ed87 0b34 	vstr	d0, [r7, #208]	@ 0xd0
 8007c86:	ed97 0b02 	vldr	d0, [r7, #8]
 8007c8a:	f017 ffb9 	bl	801fc00 <sin>
 8007c8e:	ed87 0b32 	vstr	d0, [r7, #200]	@ 0xc8
 8007c92:	f20f 5350 	addw	r3, pc, #1360	@ 0x550
 8007c96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c9a:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007c9e:	f7f8 fcab 	bl	80005f8 <__aeabi_dmul>
 8007ca2:	4602      	mov	r2, r0
 8007ca4:	460b      	mov	r3, r1
 8007ca6:	e9c7 2330 	strd	r2, r3, [r7, #192]	@ 0xc0
 8007caa:	f20f 5338 	addw	r3, pc, #1336	@ 0x538
 8007cae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cb2:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007cb6:	f7f8 fc9f 	bl	80005f8 <__aeabi_dmul>
 8007cba:	4602      	mov	r2, r0
 8007cbc:	460b      	mov	r3, r1
 8007cbe:	e9c7 232e 	strd	r2, r3, [r7, #184]	@ 0xb8
 8007cc2:	f20f 5328 	addw	r3, pc, #1320	@ 0x528
 8007cc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cca:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007cce:	f7f8 fc93 	bl	80005f8 <__aeabi_dmul>
 8007cd2:	4602      	mov	r2, r0
 8007cd4:	460b      	mov	r3, r1
 8007cd6:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 8007cda:	f20f 5310 	addw	r3, pc, #1296	@ 0x510
 8007cde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ce2:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007ce6:	f7f8 fc87 	bl	80005f8 <__aeabi_dmul>
 8007cea:	4602      	mov	r2, r0
 8007cec:	460b      	mov	r3, r1
 8007cee:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
 8007cf2:	f20f 43f8 	addw	r3, pc, #1272	@ 0x4f8
 8007cf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cfa:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007cfe:	f7f8 fc7b 	bl	80005f8 <__aeabi_dmul>
 8007d02:	4602      	mov	r2, r0
 8007d04:	460b      	mov	r3, r1
 8007d06:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 8007d0a:	f20f 43e0 	addw	r3, pc, #1248	@ 0x4e0
 8007d0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d12:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007d16:	f7f8 fc6f 	bl	80005f8 <__aeabi_dmul>
 8007d1a:	4602      	mov	r2, r0
 8007d1c:	460b      	mov	r3, r1
 8007d1e:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
 8007d22:	f20f 43c0 	addw	r3, pc, #1216	@ 0x4c0
 8007d26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d2a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007d2e:	f7f8 fc63 	bl	80005f8 <__aeabi_dmul>
 8007d32:	4602      	mov	r2, r0
 8007d34:	460b      	mov	r3, r1
 8007d36:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8007d3a:	f7f8 faa5 	bl	8000288 <__aeabi_dsub>
 8007d3e:	4602      	mov	r2, r0
 8007d40:	460b      	mov	r3, r1
 8007d42:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8007d46:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8007d4a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8007d4e:	f7f8 fa9b 	bl	8000288 <__aeabi_dsub>
 8007d52:	4602      	mov	r2, r0
 8007d54:	460b      	mov	r3, r1
 8007d56:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
 8007d5a:	f20f 4388 	addw	r3, pc, #1160	@ 0x488
 8007d5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d62:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007d66:	f7f8 fc47 	bl	80005f8 <__aeabi_dmul>
 8007d6a:	4602      	mov	r2, r0
 8007d6c:	460b      	mov	r3, r1
 8007d6e:	4610      	mov	r0, r2
 8007d70:	4619      	mov	r1, r3
 8007d72:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8007d76:	f7f8 fa87 	bl	8000288 <__aeabi_dsub>
 8007d7a:	4602      	mov	r2, r0
 8007d7c:	460b      	mov	r3, r1
 8007d7e:	4610      	mov	r0, r2
 8007d80:	4619      	mov	r1, r3
 8007d82:	f20f 4370 	addw	r3, pc, #1136	@ 0x470
 8007d86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d8a:	f7f8 fa7f 	bl	800028c <__adddf3>
 8007d8e:	4602      	mov	r2, r0
 8007d90:	460b      	mov	r3, r1
 8007d92:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8007d96:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8007d9a:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8007d9e:	f7f8 fa73 	bl	8000288 <__aeabi_dsub>
 8007da2:	4602      	mov	r2, r0
 8007da4:	460b      	mov	r3, r1
 8007da6:	4610      	mov	r0, r2
 8007da8:	4619      	mov	r1, r3
 8007daa:	f20f 4350 	addw	r3, pc, #1104	@ 0x450
 8007dae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007db2:	f7f8 fa6b 	bl	800028c <__adddf3>
 8007db6:	4602      	mov	r2, r0
 8007db8:	460b      	mov	r3, r1
 8007dba:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
 8007dbe:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007dc2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8007dc6:	f7f8 fc17 	bl	80005f8 <__aeabi_dmul>
 8007dca:	4602      	mov	r2, r0
 8007dcc:	460b      	mov	r3, r1
 8007dce:	4690      	mov	r8, r2
 8007dd0:	4699      	mov	r9, r3
 8007dd2:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007dd6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007dda:	f7f8 fc0d 	bl	80005f8 <__aeabi_dmul>
 8007dde:	4602      	mov	r2, r0
 8007de0:	460b      	mov	r3, r1
 8007de2:	4640      	mov	r0, r8
 8007de4:	4649      	mov	r1, r9
 8007de6:	f7f8 fa51 	bl	800028c <__adddf3>
 8007dea:	4602      	mov	r2, r0
 8007dec:	460b      	mov	r3, r1
 8007dee:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
 8007df2:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007df6:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007dfa:	f7f8 fbfd 	bl	80005f8 <__aeabi_dmul>
 8007dfe:	4602      	mov	r2, r0
 8007e00:	460b      	mov	r3, r1
 8007e02:	4610      	mov	r0, r2
 8007e04:	4619      	mov	r1, r3
 8007e06:	a3ff      	add	r3, pc, #1020	@ (adr r3, 8008204 <leg_conv+0x5bc>)
 8007e08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e0c:	f7f8 fbf4 	bl	80005f8 <__aeabi_dmul>
 8007e10:	4602      	mov	r2, r0
 8007e12:	460b      	mov	r3, r1
 8007e14:	4690      	mov	r8, r2
 8007e16:	4699      	mov	r9, r3
 8007e18:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007e1c:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007e20:	f7f8 fbea 	bl	80005f8 <__aeabi_dmul>
 8007e24:	4602      	mov	r2, r0
 8007e26:	460b      	mov	r3, r1
 8007e28:	4610      	mov	r0, r2
 8007e2a:	4619      	mov	r1, r3
 8007e2c:	a3f5      	add	r3, pc, #980	@ (adr r3, 8008204 <leg_conv+0x5bc>)
 8007e2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e32:	f7f8 fbe1 	bl	80005f8 <__aeabi_dmul>
 8007e36:	4602      	mov	r2, r0
 8007e38:	460b      	mov	r3, r1
 8007e3a:	4640      	mov	r0, r8
 8007e3c:	4649      	mov	r1, r9
 8007e3e:	f7f8 fa25 	bl	800028c <__adddf3>
 8007e42:	4602      	mov	r2, r0
 8007e44:	460b      	mov	r3, r1
 8007e46:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 8007e4a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007e4e:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007e52:	f7f8 fbd1 	bl	80005f8 <__aeabi_dmul>
 8007e56:	4602      	mov	r2, r0
 8007e58:	460b      	mov	r3, r1
 8007e5a:	4610      	mov	r0, r2
 8007e5c:	4619      	mov	r1, r3
 8007e5e:	a3e9      	add	r3, pc, #932	@ (adr r3, 8008204 <leg_conv+0x5bc>)
 8007e60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e64:	f7f8 fbc8 	bl	80005f8 <__aeabi_dmul>
 8007e68:	4602      	mov	r2, r0
 8007e6a:	460b      	mov	r3, r1
 8007e6c:	4690      	mov	r8, r2
 8007e6e:	4699      	mov	r9, r3
 8007e70:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007e74:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007e78:	f7f8 fbbe 	bl	80005f8 <__aeabi_dmul>
 8007e7c:	4602      	mov	r2, r0
 8007e7e:	460b      	mov	r3, r1
 8007e80:	4610      	mov	r0, r2
 8007e82:	4619      	mov	r1, r3
 8007e84:	a3df      	add	r3, pc, #892	@ (adr r3, 8008204 <leg_conv+0x5bc>)
 8007e86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007e8a:	f7f8 fbb5 	bl	80005f8 <__aeabi_dmul>
 8007e8e:	4602      	mov	r2, r0
 8007e90:	460b      	mov	r3, r1
 8007e92:	4640      	mov	r0, r8
 8007e94:	4649      	mov	r1, r9
 8007e96:	f7f8 f9f9 	bl	800028c <__adddf3>
 8007e9a:	4602      	mov	r2, r0
 8007e9c:	460b      	mov	r3, r1
 8007e9e:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 8007ea2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8007ea6:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8007eaa:	f7f8 f9ef 	bl	800028c <__adddf3>
 8007eae:	4602      	mov	r2, r0
 8007eb0:	460b      	mov	r3, r1
 8007eb2:	f04f 0000 	mov.w	r0, #0
 8007eb6:	49ca      	ldr	r1, [pc, #808]	@ (80081e0 <leg_conv+0x598>)
 8007eb8:	f7f8 fcc8 	bl	800084c <__aeabi_ddiv>
 8007ebc:	4602      	mov	r2, r0
 8007ebe:	460b      	mov	r3, r1
 8007ec0:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8007ec4:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007ec8:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007ecc:	f7f8 fb94 	bl	80005f8 <__aeabi_dmul>
 8007ed0:	4602      	mov	r2, r0
 8007ed2:	460b      	mov	r3, r1
 8007ed4:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 8007ed8:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8007edc:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8007ee0:	f7f8 fb8a 	bl	80005f8 <__aeabi_dmul>
 8007ee4:	4602      	mov	r2, r0
 8007ee6:	460b      	mov	r3, r1
 8007ee8:	4690      	mov	r8, r2
 8007eea:	4699      	mov	r9, r3
 8007eec:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8007ef0:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8007ef4:	f7f8 fb80 	bl	80005f8 <__aeabi_dmul>
 8007ef8:	4602      	mov	r2, r0
 8007efa:	460b      	mov	r3, r1
 8007efc:	4640      	mov	r0, r8
 8007efe:	4649      	mov	r1, r9
 8007f00:	f7f8 f9c4 	bl	800028c <__adddf3>
 8007f04:	4602      	mov	r2, r0
 8007f06:	460b      	mov	r3, r1
 8007f08:	4690      	mov	r8, r2
 8007f0a:	4699      	mov	r9, r3
 8007f0c:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8007f10:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8007f14:	f7f8 fb70 	bl	80005f8 <__aeabi_dmul>
 8007f18:	4602      	mov	r2, r0
 8007f1a:	460b      	mov	r3, r1
 8007f1c:	4640      	mov	r0, r8
 8007f1e:	4649      	mov	r1, r9
 8007f20:	f7f8 f9b2 	bl	8000288 <__aeabi_dsub>
 8007f24:	4602      	mov	r2, r0
 8007f26:	460b      	mov	r3, r1
 8007f28:	ec43 2b17 	vmov	d7, r2, r3
 8007f2c:	eeb0 0a47 	vmov.f32	s0, s14
 8007f30:	eef0 0a67 	vmov.f32	s1, s15
 8007f34:	f017 fc42 	bl	801f7bc <sqrt>
 8007f38:	ed87 0b24 	vstr	d0, [r7, #144]	@ 0x90
 8007f3c:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007f40:	f04f 0000 	mov.w	r0, #0
 8007f44:	49a6      	ldr	r1, [pc, #664]	@ (80081e0 <leg_conv+0x598>)
 8007f46:	f7f8 fc81 	bl	800084c <__aeabi_ddiv>
 8007f4a:	4602      	mov	r2, r0
 8007f4c:	460b      	mov	r3, r1
 8007f4e:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007f52:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8007f56:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8007f5a:	f7f8 f995 	bl	8000288 <__aeabi_dsub>
 8007f5e:	4602      	mov	r2, r0
 8007f60:	460b      	mov	r3, r1
 8007f62:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8007f66:	f7f8 f991 	bl	800028c <__adddf3>
 8007f6a:	4602      	mov	r2, r0
 8007f6c:	460b      	mov	r3, r1
 8007f6e:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007f72:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007f76:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007f7a:	f7f8 fb3d 	bl	80005f8 <__aeabi_dmul>
 8007f7e:	4602      	mov	r2, r0
 8007f80:	460b      	mov	r3, r1
 8007f82:	ec43 2b17 	vmov	d7, r2, r3
 8007f86:	eeb0 0a47 	vmov.f32	s0, s14
 8007f8a:	eef0 0a67 	vmov.f32	s1, s15
 8007f8e:	f017 fc43 	bl	801f818 <atan>
 8007f92:	ec51 0b10 	vmov	r0, r1, d0
 8007f96:	4602      	mov	r2, r0
 8007f98:	460b      	mov	r3, r1
 8007f9a:	f7f8 f977 	bl	800028c <__adddf3>
 8007f9e:	4602      	mov	r2, r0
 8007fa0:	460b      	mov	r3, r1
 8007fa2:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8007fa6:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 8007faa:	f017 fdcd 	bl	801fb48 <cos>
 8007fae:	ed87 0b0e 	vstr	d0, [r7, #56]	@ 0x38
 8007fb2:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 8007fb6:	f017 fe23 	bl	801fc00 <sin>
 8007fba:	ed87 0b0c 	vstr	d0, [r7, #48]	@ 0x30
 8007fbe:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007fc2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007fc6:	f7f8 fb17 	bl	80005f8 <__aeabi_dmul>
 8007fca:	4602      	mov	r2, r0
 8007fcc:	460b      	mov	r3, r1
 8007fce:	4610      	mov	r0, r2
 8007fd0:	4619      	mov	r1, r3
 8007fd2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007fd6:	f7f8 fb0f 	bl	80005f8 <__aeabi_dmul>
 8007fda:	4602      	mov	r2, r0
 8007fdc:	460b      	mov	r3, r1
 8007fde:	4610      	mov	r0, r2
 8007fe0:	4619      	mov	r1, r3
 8007fe2:	f04f 0200 	mov.w	r2, #0
 8007fe6:	4b7e      	ldr	r3, [pc, #504]	@ (80081e0 <leg_conv+0x598>)
 8007fe8:	f7f8 f950 	bl	800028c <__adddf3>
 8007fec:	4602      	mov	r2, r0
 8007fee:	460b      	mov	r3, r1
 8007ff0:	f04f 0000 	mov.w	r0, #0
 8007ff4:	497a      	ldr	r1, [pc, #488]	@ (80081e0 <leg_conv+0x598>)
 8007ff6:	f7f8 fc29 	bl	800084c <__aeabi_ddiv>
 8007ffa:	4602      	mov	r2, r0
 8007ffc:	460b      	mov	r3, r1
 8007ffe:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8008002:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8008006:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800800a:	f7f8 f93f 	bl	800028c <__adddf3>
 800800e:	4602      	mov	r2, r0
 8008010:	460b      	mov	r3, r1
 8008012:	4610      	mov	r0, r2
 8008014:	4619      	mov	r1, r3
 8008016:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800801a:	f7f8 faed 	bl	80005f8 <__aeabi_dmul>
 800801e:	4602      	mov	r2, r0
 8008020:	460b      	mov	r3, r1
 8008022:	4610      	mov	r0, r2
 8008024:	4619      	mov	r1, r3
 8008026:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800802a:	f7f8 fae5 	bl	80005f8 <__aeabi_dmul>
 800802e:	4602      	mov	r2, r0
 8008030:	460b      	mov	r3, r1
 8008032:	4690      	mov	r8, r2
 8008034:	4699      	mov	r9, r3
 8008036:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800803a:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800803e:	f7f8 fadb 	bl	80005f8 <__aeabi_dmul>
 8008042:	4602      	mov	r2, r0
 8008044:	460b      	mov	r3, r1
 8008046:	4610      	mov	r0, r2
 8008048:	4619      	mov	r1, r3
 800804a:	a363      	add	r3, pc, #396	@ (adr r3, 80081d8 <leg_conv+0x590>)
 800804c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008050:	f7f8 fad2 	bl	80005f8 <__aeabi_dmul>
 8008054:	4602      	mov	r2, r0
 8008056:	460b      	mov	r3, r1
 8008058:	4692      	mov	sl, r2
 800805a:	469b      	mov	fp, r3
 800805c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8008060:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8008064:	f7f8 fac8 	bl	80005f8 <__aeabi_dmul>
 8008068:	4602      	mov	r2, r0
 800806a:	460b      	mov	r3, r1
 800806c:	4610      	mov	r0, r2
 800806e:	4619      	mov	r1, r3
 8008070:	a359      	add	r3, pc, #356	@ (adr r3, 80081d8 <leg_conv+0x590>)
 8008072:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008076:	f7f8 fabf 	bl	80005f8 <__aeabi_dmul>
 800807a:	4602      	mov	r2, r0
 800807c:	460b      	mov	r3, r1
 800807e:	4650      	mov	r0, sl
 8008080:	4659      	mov	r1, fp
 8008082:	f7f8 f903 	bl	800028c <__adddf3>
 8008086:	4602      	mov	r2, r0
 8008088:	460b      	mov	r3, r1
 800808a:	4692      	mov	sl, r2
 800808c:	469b      	mov	fp, r3
 800808e:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8008092:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8008096:	f7f8 faaf 	bl	80005f8 <__aeabi_dmul>
 800809a:	4602      	mov	r2, r0
 800809c:	460b      	mov	r3, r1
 800809e:	4610      	mov	r0, r2
 80080a0:	4619      	mov	r1, r3
 80080a2:	4602      	mov	r2, r0
 80080a4:	460b      	mov	r3, r1
 80080a6:	f7f8 f8f1 	bl	800028c <__adddf3>
 80080aa:	4602      	mov	r2, r0
 80080ac:	460b      	mov	r3, r1
 80080ae:	4650      	mov	r0, sl
 80080b0:	4659      	mov	r1, fp
 80080b2:	f7f8 f8e9 	bl	8000288 <__aeabi_dsub>
 80080b6:	4602      	mov	r2, r0
 80080b8:	460b      	mov	r3, r1
 80080ba:	4610      	mov	r0, r2
 80080bc:	4619      	mov	r1, r3
 80080be:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80080c2:	f7f8 fa99 	bl	80005f8 <__aeabi_dmul>
 80080c6:	4602      	mov	r2, r0
 80080c8:	460b      	mov	r3, r1
 80080ca:	4610      	mov	r0, r2
 80080cc:	4619      	mov	r1, r3
 80080ce:	f04f 0200 	mov.w	r2, #0
 80080d2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80080d6:	f7f8 fbb9 	bl	800084c <__aeabi_ddiv>
 80080da:	4602      	mov	r2, r0
 80080dc:	460b      	mov	r3, r1
 80080de:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80080e2:	f7f8 f8d1 	bl	8000288 <__aeabi_dsub>
 80080e6:	4602      	mov	r2, r0
 80080e8:	460b      	mov	r3, r1
 80080ea:	4610      	mov	r0, r2
 80080ec:	4619      	mov	r1, r3
 80080ee:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 80080f2:	f7f8 fa81 	bl	80005f8 <__aeabi_dmul>
 80080f6:	4602      	mov	r2, r0
 80080f8:	460b      	mov	r3, r1
 80080fa:	4640      	mov	r0, r8
 80080fc:	4649      	mov	r1, r9
 80080fe:	f7f8 f8c5 	bl	800028c <__adddf3>
 8008102:	4602      	mov	r2, r0
 8008104:	460b      	mov	r3, r1
 8008106:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 800810a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800810e:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8008112:	f7f8 f8bb 	bl	800028c <__adddf3>
 8008116:	4602      	mov	r2, r0
 8008118:	460b      	mov	r3, r1
 800811a:	4610      	mov	r0, r2
 800811c:	4619      	mov	r1, r3
 800811e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8008122:	f7f8 fa69 	bl	80005f8 <__aeabi_dmul>
 8008126:	4602      	mov	r2, r0
 8008128:	460b      	mov	r3, r1
 800812a:	4610      	mov	r0, r2
 800812c:	4619      	mov	r1, r3
 800812e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008132:	f7f8 fa61 	bl	80005f8 <__aeabi_dmul>
 8008136:	4602      	mov	r2, r0
 8008138:	460b      	mov	r3, r1
 800813a:	4690      	mov	r8, r2
 800813c:	4699      	mov	r9, r3
 800813e:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8008142:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8008146:	f7f8 fa57 	bl	80005f8 <__aeabi_dmul>
 800814a:	4602      	mov	r2, r0
 800814c:	460b      	mov	r3, r1
 800814e:	4610      	mov	r0, r2
 8008150:	4619      	mov	r1, r3
 8008152:	a321      	add	r3, pc, #132	@ (adr r3, 80081d8 <leg_conv+0x590>)
 8008154:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008158:	f7f8 fa4e 	bl	80005f8 <__aeabi_dmul>
 800815c:	4602      	mov	r2, r0
 800815e:	460b      	mov	r3, r1
 8008160:	4692      	mov	sl, r2
 8008162:	469b      	mov	fp, r3
 8008164:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8008168:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800816c:	f7f8 fa44 	bl	80005f8 <__aeabi_dmul>
 8008170:	4602      	mov	r2, r0
 8008172:	460b      	mov	r3, r1
 8008174:	4610      	mov	r0, r2
 8008176:	4619      	mov	r1, r3
 8008178:	a317      	add	r3, pc, #92	@ (adr r3, 80081d8 <leg_conv+0x590>)
 800817a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800817e:	f7f8 fa3b 	bl	80005f8 <__aeabi_dmul>
 8008182:	4602      	mov	r2, r0
 8008184:	460b      	mov	r3, r1
 8008186:	4650      	mov	r0, sl
 8008188:	4659      	mov	r1, fp
 800818a:	f7f8 f87f 	bl	800028c <__adddf3>
 800818e:	4602      	mov	r2, r0
 8008190:	460b      	mov	r3, r1
 8008192:	4692      	mov	sl, r2
 8008194:	469b      	mov	fp, r3
 8008196:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800819a:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 800819e:	f7f8 fa2b 	bl	80005f8 <__aeabi_dmul>
 80081a2:	4602      	mov	r2, r0
 80081a4:	460b      	mov	r3, r1
 80081a6:	4610      	mov	r0, r2
 80081a8:	4619      	mov	r1, r3
 80081aa:	4602      	mov	r2, r0
 80081ac:	460b      	mov	r3, r1
 80081ae:	f7f8 f86d 	bl	800028c <__adddf3>
 80081b2:	4602      	mov	r2, r0
 80081b4:	460b      	mov	r3, r1
 80081b6:	4650      	mov	r0, sl
 80081b8:	4659      	mov	r1, fp
 80081ba:	f7f8 f865 	bl	8000288 <__aeabi_dsub>
 80081be:	4602      	mov	r2, r0
 80081c0:	460b      	mov	r3, r1
 80081c2:	4610      	mov	r0, r2
 80081c4:	4619      	mov	r1, r3
 80081c6:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80081ca:	f7f8 fa15 	bl	80005f8 <__aeabi_dmul>
 80081ce:	4602      	mov	r2, r0
 80081d0:	460b      	mov	r3, r1
 80081d2:	e01b      	b.n	800820c <leg_conv+0x5c4>
 80081d4:	f3af 8000 	nop.w
 80081d8:	bc6a7efa 	.word	0xbc6a7efa
 80081dc:	3fa89374 	.word	0x3fa89374
 80081e0:	3ff00000 	.word	0x3ff00000
 80081e4:	47ae147b 	.word	0x47ae147b
 80081e8:	3fb47ae1 	.word	0x3fb47ae1
 80081ec:	bc6a7efa 	.word	0xbc6a7efa
 80081f0:	3f989374 	.word	0x3f989374
 80081f4:	5532617c 	.word	0x5532617c
 80081f8:	3fb92a30 	.word	0x3fb92a30
 80081fc:	663c74fb 	.word	0x663c74fb
 8008200:	3f9e32a0 	.word	0x3f9e32a0
 8008204:	47ae147b 	.word	0x47ae147b
 8008208:	3fc47ae1 	.word	0x3fc47ae1
 800820c:	4610      	mov	r0, r2
 800820e:	4619      	mov	r1, r3
 8008210:	f04f 0200 	mov.w	r2, #0
 8008214:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8008218:	f7f8 fb18 	bl	800084c <__aeabi_ddiv>
 800821c:	4602      	mov	r2, r0
 800821e:	460b      	mov	r3, r1
 8008220:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8008224:	f7f8 f830 	bl	8000288 <__aeabi_dsub>
 8008228:	4602      	mov	r2, r0
 800822a:	460b      	mov	r3, r1
 800822c:	4610      	mov	r0, r2
 800822e:	4619      	mov	r1, r3
 8008230:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008234:	f7f8 f9e0 	bl	80005f8 <__aeabi_dmul>
 8008238:	4602      	mov	r2, r0
 800823a:	460b      	mov	r3, r1
 800823c:	4640      	mov	r0, r8
 800823e:	4649      	mov	r1, r9
 8008240:	f7f8 f824 	bl	800028c <__adddf3>
 8008244:	4602      	mov	r2, r0
 8008246:	460b      	mov	r3, r1
 8008248:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 800824c:	a3f3      	add	r3, pc, #972	@ (adr r3, 800861c <leg_conv+0x9d4>)
 800824e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008252:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8008256:	f7f8 f9cf 	bl	80005f8 <__aeabi_dmul>
 800825a:	4602      	mov	r2, r0
 800825c:	460b      	mov	r3, r1
 800825e:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8008262:	f7f8 f813 	bl	800028c <__adddf3>
 8008266:	4602      	mov	r2, r0
 8008268:	460b      	mov	r3, r1
 800826a:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800826e:	a3eb      	add	r3, pc, #940	@ (adr r3, 800861c <leg_conv+0x9d4>)
 8008270:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008274:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8008278:	f7f8 f9be 	bl	80005f8 <__aeabi_dmul>
 800827c:	4602      	mov	r2, r0
 800827e:	460b      	mov	r3, r1
 8008280:	4610      	mov	r0, r2
 8008282:	4619      	mov	r1, r3
 8008284:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8008288:	f7f8 f800 	bl	800028c <__adddf3>
 800828c:	4602      	mov	r2, r0
 800828e:	460b      	mov	r3, r1
 8008290:	4610      	mov	r0, r2
 8008292:	4619      	mov	r1, r3
 8008294:	a3e3      	add	r3, pc, #908	@ (adr r3, 8008624 <leg_conv+0x9dc>)
 8008296:	e9d3 2300 	ldrd	r2, r3, [r3]
 800829a:	f7f7 fff5 	bl	8000288 <__aeabi_dsub>
 800829e:	4602      	mov	r2, r0
 80082a0:	460b      	mov	r3, r1
 80082a2:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 80082a6:	f8d7 40c0 	ldr.w	r4, [r7, #192]	@ 0xc0
 80082aa:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80082ae:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 80082b2:	a3da      	add	r3, pc, #872	@ (adr r3, 800861c <leg_conv+0x9d4>)
 80082b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082b8:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 80082bc:	f7f8 f99c 	bl	80005f8 <__aeabi_dmul>
 80082c0:	4602      	mov	r2, r0
 80082c2:	460b      	mov	r3, r1
 80082c4:	4620      	mov	r0, r4
 80082c6:	4629      	mov	r1, r5
 80082c8:	f7f7 ffde 	bl	8000288 <__aeabi_dsub>
 80082cc:	4602      	mov	r2, r0
 80082ce:	460b      	mov	r3, r1
 80082d0:	4610      	mov	r0, r2
 80082d2:	4619      	mov	r1, r3
 80082d4:	a3d3      	add	r3, pc, #844	@ (adr r3, 8008624 <leg_conv+0x9dc>)
 80082d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082da:	f7f7 ffd7 	bl	800028c <__adddf3>
 80082de:	4602      	mov	r2, r0
 80082e0:	460b      	mov	r3, r1
 80082e2:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 80082e6:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80082ea:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80082ee:	f7f8 f983 	bl	80005f8 <__aeabi_dmul>
 80082f2:	4602      	mov	r2, r0
 80082f4:	460b      	mov	r3, r1
 80082f6:	e9c7 2338 	strd	r2, r3, [r7, #224]	@ 0xe0
 80082fa:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80082fe:	f04f 0000 	mov.w	r0, #0
 8008302:	49c5      	ldr	r1, [pc, #788]	@ (8008618 <leg_conv+0x9d0>)
 8008304:	f7f8 faa2 	bl	800084c <__aeabi_ddiv>
 8008308:	4602      	mov	r2, r0
 800830a:	460b      	mov	r3, r1
 800830c:	e9c7 2334 	strd	r2, r3, [r7, #208]	@ 0xd0
 8008310:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8008314:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8008318:	f7f8 f96e 	bl	80005f8 <__aeabi_dmul>
 800831c:	4602      	mov	r2, r0
 800831e:	460b      	mov	r3, r1
 8008320:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8008324:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008328:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 800832c:	f7f8 f964 	bl	80005f8 <__aeabi_dmul>
 8008330:	4602      	mov	r2, r0
 8008332:	460b      	mov	r3, r1
 8008334:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8008338:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800833c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008340:	f7f8 f95a 	bl	80005f8 <__aeabi_dmul>
 8008344:	4602      	mov	r2, r0
 8008346:	460b      	mov	r3, r1
 8008348:	4610      	mov	r0, r2
 800834a:	4619      	mov	r1, r3
 800834c:	a3ae      	add	r3, pc, #696	@ (adr r3, 8008608 <leg_conv+0x9c0>)
 800834e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008352:	f7f8 f951 	bl	80005f8 <__aeabi_dmul>
 8008356:	4602      	mov	r2, r0
 8008358:	460b      	mov	r3, r1
 800835a:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800835e:	f7f7 ff93 	bl	8000288 <__aeabi_dsub>
 8008362:	4602      	mov	r2, r0
 8008364:	460b      	mov	r3, r1
 8008366:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 800836a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800836e:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8008372:	f7f8 f941 	bl	80005f8 <__aeabi_dmul>
 8008376:	4602      	mov	r2, r0
 8008378:	460b      	mov	r3, r1
 800837a:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 800837e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008382:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8008386:	f7f8 f937 	bl	80005f8 <__aeabi_dmul>
 800838a:	4602      	mov	r2, r0
 800838c:	460b      	mov	r3, r1
 800838e:	4610      	mov	r0, r2
 8008390:	4619      	mov	r1, r3
 8008392:	a39d      	add	r3, pc, #628	@ (adr r3, 8008608 <leg_conv+0x9c0>)
 8008394:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008398:	f7f8 f92e 	bl	80005f8 <__aeabi_dmul>
 800839c:	4602      	mov	r2, r0
 800839e:	460b      	mov	r3, r1
 80083a0:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 80083a4:	f7f7 ff70 	bl	8000288 <__aeabi_dsub>
 80083a8:	4602      	mov	r2, r0
 80083aa:	460b      	mov	r3, r1
 80083ac:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 80083b0:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 80083b4:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80083b8:	f7f8 f91e 	bl	80005f8 <__aeabi_dmul>
 80083bc:	4602      	mov	r2, r0
 80083be:	460b      	mov	r3, r1
 80083c0:	4610      	mov	r0, r2
 80083c2:	4619      	mov	r1, r3
 80083c4:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80083c8:	f7f7 ff60 	bl	800028c <__adddf3>
 80083cc:	4602      	mov	r2, r0
 80083ce:	460b      	mov	r3, r1
 80083d0:	ec43 2b17 	vmov	d7, r2, r3
 80083d4:	eeb0 0a47 	vmov.f32	s0, s14
 80083d8:	eef0 0a67 	vmov.f32	s1, s15
 80083dc:	f017 f9ee 	bl	801f7bc <sqrt>
 80083e0:	ec53 2b10 	vmov	r2, r3, d0
 80083e4:	f04f 0000 	mov.w	r0, #0
 80083e8:	498b      	ldr	r1, [pc, #556]	@ (8008618 <leg_conv+0x9d0>)
 80083ea:	f7f8 fa2f 	bl	800084c <__aeabi_ddiv>
 80083ee:	4602      	mov	r2, r0
 80083f0:	460b      	mov	r3, r1
 80083f2:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80083f6:	f7f8 f8ff 	bl	80005f8 <__aeabi_dmul>
 80083fa:	4602      	mov	r2, r0
 80083fc:	460b      	mov	r3, r1
 80083fe:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8008402:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8008406:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800840a:	f7f8 f8f5 	bl	80005f8 <__aeabi_dmul>
 800840e:	4602      	mov	r2, r0
 8008410:	460b      	mov	r3, r1
 8008412:	4614      	mov	r4, r2
 8008414:	461d      	mov	r5, r3
 8008416:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 800841a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 800841e:	f7f7 ff35 	bl	800028c <__adddf3>
 8008422:	4602      	mov	r2, r0
 8008424:	460b      	mov	r3, r1
 8008426:	f04f 0000 	mov.w	r0, #0
 800842a:	497b      	ldr	r1, [pc, #492]	@ (8008618 <leg_conv+0x9d0>)
 800842c:	f7f8 fa0e 	bl	800084c <__aeabi_ddiv>
 8008430:	4602      	mov	r2, r0
 8008432:	460b      	mov	r3, r1
 8008434:	4620      	mov	r0, r4
 8008436:	4629      	mov	r1, r5
 8008438:	f7f8 f8de 	bl	80005f8 <__aeabi_dmul>
 800843c:	4602      	mov	r2, r0
 800843e:	460b      	mov	r3, r1
 8008440:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8008444:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8008448:	f04f 0000 	mov.w	r0, #0
 800844c:	4972      	ldr	r1, [pc, #456]	@ (8008618 <leg_conv+0x9d0>)
 800844e:	f7f8 f9fd 	bl	800084c <__aeabi_ddiv>
 8008452:	4602      	mov	r2, r0
 8008454:	460b      	mov	r3, r1
 8008456:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800845a:	f7f8 f8cd 	bl	80005f8 <__aeabi_dmul>
 800845e:	4602      	mov	r2, r0
 8008460:	460b      	mov	r3, r1
 8008462:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8008466:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800846a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800846e:	f7f8 f8c3 	bl	80005f8 <__aeabi_dmul>
 8008472:	4602      	mov	r2, r0
 8008474:	460b      	mov	r3, r1
 8008476:	4610      	mov	r0, r2
 8008478:	4619      	mov	r1, r3
 800847a:	4602      	mov	r2, r0
 800847c:	460b      	mov	r3, r1
 800847e:	f7f7 ff05 	bl	800028c <__adddf3>
 8008482:	4602      	mov	r2, r0
 8008484:	460b      	mov	r3, r1
 8008486:	4614      	mov	r4, r2
 8008488:	461d      	mov	r5, r3
 800848a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800848e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8008492:	f7f8 f8b1 	bl	80005f8 <__aeabi_dmul>
 8008496:	4602      	mov	r2, r0
 8008498:	460b      	mov	r3, r1
 800849a:	4610      	mov	r0, r2
 800849c:	4619      	mov	r1, r3
 800849e:	4602      	mov	r2, r0
 80084a0:	460b      	mov	r3, r1
 80084a2:	f7f7 fef3 	bl	800028c <__adddf3>
 80084a6:	4602      	mov	r2, r0
 80084a8:	460b      	mov	r3, r1
 80084aa:	4620      	mov	r0, r4
 80084ac:	4629      	mov	r1, r5
 80084ae:	f7f7 feeb 	bl	8000288 <__aeabi_dsub>
 80084b2:	4602      	mov	r2, r0
 80084b4:	460b      	mov	r3, r1
 80084b6:	4610      	mov	r0, r2
 80084b8:	4619      	mov	r1, r3
 80084ba:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80084be:	f7f8 f89b 	bl	80005f8 <__aeabi_dmul>
 80084c2:	4602      	mov	r2, r0
 80084c4:	460b      	mov	r3, r1
 80084c6:	4610      	mov	r0, r2
 80084c8:	4619      	mov	r1, r3
 80084ca:	f04f 0200 	mov.w	r2, #0
 80084ce:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80084d2:	f7f8 f9bb 	bl	800084c <__aeabi_ddiv>
 80084d6:	4602      	mov	r2, r0
 80084d8:	460b      	mov	r3, r1
 80084da:	4614      	mov	r4, r2
 80084dc:	461d      	mov	r5, r3
 80084de:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80084e2:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 80084e6:	f7f8 f887 	bl	80005f8 <__aeabi_dmul>
 80084ea:	4602      	mov	r2, r0
 80084ec:	460b      	mov	r3, r1
 80084ee:	4690      	mov	r8, r2
 80084f0:	4699      	mov	r9, r3
 80084f2:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80084f6:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80084fa:	f7f8 f87d 	bl	80005f8 <__aeabi_dmul>
 80084fe:	4602      	mov	r2, r0
 8008500:	460b      	mov	r3, r1
 8008502:	4640      	mov	r0, r8
 8008504:	4649      	mov	r1, r9
 8008506:	f7f7 febf 	bl	8000288 <__aeabi_dsub>
 800850a:	4602      	mov	r2, r0
 800850c:	460b      	mov	r3, r1
 800850e:	4610      	mov	r0, r2
 8008510:	4619      	mov	r1, r3
 8008512:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008516:	f7f8 f86f 	bl	80005f8 <__aeabi_dmul>
 800851a:	4602      	mov	r2, r0
 800851c:	460b      	mov	r3, r1
 800851e:	4620      	mov	r0, r4
 8008520:	4629      	mov	r1, r5
 8008522:	f7f7 feb1 	bl	8000288 <__aeabi_dsub>
 8008526:	4602      	mov	r2, r0
 8008528:	460b      	mov	r3, r1
 800852a:	6879      	ldr	r1, [r7, #4]
 800852c:	e9c1 2300 	strd	r2, r3, [r1]
 8008530:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8008534:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008538:	f7f8 f85e 	bl	80005f8 <__aeabi_dmul>
 800853c:	4602      	mov	r2, r0
 800853e:	460b      	mov	r3, r1
 8008540:	4610      	mov	r0, r2
 8008542:	4619      	mov	r1, r3
 8008544:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008548:	f7f8 f856 	bl	80005f8 <__aeabi_dmul>
 800854c:	4602      	mov	r2, r0
 800854e:	460b      	mov	r3, r1
 8008550:	4610      	mov	r0, r2
 8008552:	4619      	mov	r1, r3
 8008554:	a32e      	add	r3, pc, #184	@ (adr r3, 8008610 <leg_conv+0x9c8>)
 8008556:	e9d3 2300 	ldrd	r2, r3, [r3]
 800855a:	f7f8 f84d 	bl	80005f8 <__aeabi_dmul>
 800855e:	4602      	mov	r2, r0
 8008560:	460b      	mov	r3, r1
 8008562:	4614      	mov	r4, r2
 8008564:	461d      	mov	r5, r3
 8008566:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 800856a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800856e:	f7f8 f843 	bl	80005f8 <__aeabi_dmul>
 8008572:	4602      	mov	r2, r0
 8008574:	460b      	mov	r3, r1
 8008576:	4610      	mov	r0, r2
 8008578:	4619      	mov	r1, r3
 800857a:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 800857e:	f7f8 f83b 	bl	80005f8 <__aeabi_dmul>
 8008582:	4602      	mov	r2, r0
 8008584:	460b      	mov	r3, r1
 8008586:	4610      	mov	r0, r2
 8008588:	4619      	mov	r1, r3
 800858a:	a321      	add	r3, pc, #132	@ (adr r3, 8008610 <leg_conv+0x9c8>)
 800858c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008590:	f7f8 f832 	bl	80005f8 <__aeabi_dmul>
 8008594:	4602      	mov	r2, r0
 8008596:	460b      	mov	r3, r1
 8008598:	4620      	mov	r0, r4
 800859a:	4629      	mov	r1, r5
 800859c:	f7f7 fe74 	bl	8000288 <__aeabi_dsub>
 80085a0:	4602      	mov	r2, r0
 80085a2:	460b      	mov	r3, r1
 80085a4:	4610      	mov	r0, r2
 80085a6:	4619      	mov	r1, r3
 80085a8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80085ac:	f7f8 f824 	bl	80005f8 <__aeabi_dmul>
 80085b0:	4602      	mov	r2, r0
 80085b2:	460b      	mov	r3, r1
 80085b4:	4610      	mov	r0, r2
 80085b6:	4619      	mov	r1, r3
 80085b8:	f04f 0200 	mov.w	r2, #0
 80085bc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80085c0:	f7f8 f944 	bl	800084c <__aeabi_ddiv>
 80085c4:	4602      	mov	r2, r0
 80085c6:	460b      	mov	r3, r1
 80085c8:	4690      	mov	r8, r2
 80085ca:	4699      	mov	r9, r3
 80085cc:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 80085d0:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 80085d4:	f7f8 f810 	bl	80005f8 <__aeabi_dmul>
 80085d8:	4602      	mov	r2, r0
 80085da:	460b      	mov	r3, r1
 80085dc:	4610      	mov	r0, r2
 80085de:	4619      	mov	r1, r3
 80085e0:	a309      	add	r3, pc, #36	@ (adr r3, 8008608 <leg_conv+0x9c0>)
 80085e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80085e6:	f7f8 f807 	bl	80005f8 <__aeabi_dmul>
 80085ea:	4602      	mov	r2, r0
 80085ec:	460b      	mov	r3, r1
 80085ee:	f04f 0000 	mov.w	r0, #0
 80085f2:	f04f 0100 	mov.w	r1, #0
 80085f6:	f7f7 fe47 	bl	8000288 <__aeabi_dsub>
 80085fa:	4602      	mov	r2, r0
 80085fc:	460b      	mov	r3, r1
 80085fe:	4610      	mov	r0, r2
 8008600:	4619      	mov	r1, r3
 8008602:	e013      	b.n	800862c <leg_conv+0x9e4>
 8008604:	f3af 8000 	nop.w
 8008608:	33333333 	.word	0x33333333
 800860c:	3fd33333 	.word	0x3fd33333
 8008610:	33333333 	.word	0x33333333
 8008614:	3fe33333 	.word	0x3fe33333
 8008618:	3ff00000 	.word	0x3ff00000
 800861c:	33333333 	.word	0x33333333
 8008620:	3fc33333 	.word	0x3fc33333
 8008624:	5532617c 	.word	0x5532617c
 8008628:	3fa92a30 	.word	0x3fa92a30
 800862c:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 8008630:	f7f7 ffe2 	bl	80005f8 <__aeabi_dmul>
 8008634:	4602      	mov	r2, r0
 8008636:	460b      	mov	r3, r1
 8008638:	4614      	mov	r4, r2
 800863a:	461d      	mov	r5, r3
 800863c:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008640:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8008644:	f7f7 ffd8 	bl	80005f8 <__aeabi_dmul>
 8008648:	4602      	mov	r2, r0
 800864a:	460b      	mov	r3, r1
 800864c:	4610      	mov	r0, r2
 800864e:	4619      	mov	r1, r3
 8008650:	a319      	add	r3, pc, #100	@ (adr r3, 80086b8 <leg_conv+0xa70>)
 8008652:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008656:	f7f7 ffcf 	bl	80005f8 <__aeabi_dmul>
 800865a:	4602      	mov	r2, r0
 800865c:	460b      	mov	r3, r1
 800865e:	4610      	mov	r0, r2
 8008660:	4619      	mov	r1, r3
 8008662:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8008666:	f7f7 ffc7 	bl	80005f8 <__aeabi_dmul>
 800866a:	4602      	mov	r2, r0
 800866c:	460b      	mov	r3, r1
 800866e:	4620      	mov	r0, r4
 8008670:	4629      	mov	r1, r5
 8008672:	f7f7 fe0b 	bl	800028c <__adddf3>
 8008676:	4602      	mov	r2, r0
 8008678:	460b      	mov	r3, r1
 800867a:	4610      	mov	r0, r2
 800867c:	4619      	mov	r1, r3
 800867e:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008682:	f7f7 ffb9 	bl	80005f8 <__aeabi_dmul>
 8008686:	4602      	mov	r2, r0
 8008688:	460b      	mov	r3, r1
 800868a:	4610      	mov	r0, r2
 800868c:	4619      	mov	r1, r3
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	f103 0408 	add.w	r4, r3, #8
 8008694:	4602      	mov	r2, r0
 8008696:	460b      	mov	r3, r1
 8008698:	4640      	mov	r0, r8
 800869a:	4649      	mov	r1, r9
 800869c:	f7f7 fdf6 	bl	800028c <__adddf3>
 80086a0:	4602      	mov	r2, r0
 80086a2:	460b      	mov	r3, r1
 80086a4:	e9c4 2300 	strd	r2, r3, [r4]
 80086a8:	bf00      	nop
 80086aa:	37e8      	adds	r7, #232	@ 0xe8
 80086ac:	46bd      	mov	sp, r7
 80086ae:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80086b2:	bf00      	nop
 80086b4:	f3af 8000 	nop.w
 80086b8:	33333333 	.word	0x33333333
 80086bc:	3fd33333 	.word	0x3fd33333

080086c0 <master_task>:
QueueHandle_t uart_data_queue;

extern gimbal_control_t gimbal_ctrl_data;


void master_task(void* argument){
 80086c0:	b580      	push	{r7, lr}
 80086c2:	b084      	sub	sp, #16
 80086c4:	af02      	add	r7, sp, #8
 80086c6:	6078      	str	r0, [r7, #4]
//	imu_init();
//	led_green_off();
//	start_micros_timer();
//	led_toggle();

	gimbal_event_group = xEventGroupCreate();
 80086c8:	f00e fd55 	bl	8017176 <xEventGroupCreate>
 80086cc:	4603      	mov	r3, r0
 80086ce:	4a5d      	ldr	r2, [pc, #372]	@ (8008844 <master_task+0x184>)
 80086d0:	6013      	str	r3, [r2, #0]
	chassis_event_group = xEventGroupCreate();
 80086d2:	f00e fd50 	bl	8017176 <xEventGroupCreate>
 80086d6:	4603      	mov	r3, r0
 80086d8:	4a5b      	ldr	r2, [pc, #364]	@ (8008848 <master_task+0x188>)
 80086da:	6013      	str	r3, [r2, #0]
	launcher_event_group = xEventGroupCreate();
 80086dc:	f00e fd4b 	bl	8017176 <xEventGroupCreate>
 80086e0:	4603      	mov	r3, r0
 80086e2:	4a5a      	ldr	r2, [pc, #360]	@ (800884c <master_task+0x18c>)
 80086e4:	6013      	str	r3, [r2, #0]

	usb_continue_semaphore = xSemaphoreCreateBinary();
 80086e6:	2203      	movs	r2, #3
 80086e8:	2100      	movs	r1, #0
 80086ea:	2001      	movs	r0, #1
 80086ec:	f00e ffa5 	bl	801763a <xQueueGenericCreate>
 80086f0:	4603      	mov	r3, r0
 80086f2:	4a57      	ldr	r2, [pc, #348]	@ (8008850 <master_task+0x190>)
 80086f4:	6013      	str	r3, [r2, #0]


	gyro_data_queue = xQueueCreate(5, sizeof(gyro_data_t));
 80086f6:	2200      	movs	r2, #0
 80086f8:	2110      	movs	r1, #16
 80086fa:	2005      	movs	r0, #5
 80086fc:	f00e ff9d 	bl	801763a <xQueueGenericCreate>
 8008700:	4603      	mov	r3, r0
 8008702:	4a54      	ldr	r2, [pc, #336]	@ (8008854 <master_task+0x194>)
 8008704:	6013      	str	r3, [r2, #0]
	accel_data_queue = xQueueCreate(5, sizeof(accel_data_t));
 8008706:	2200      	movs	r2, #0
 8008708:	2110      	movs	r1, #16
 800870a:	2005      	movs	r0, #5
 800870c:	f00e ff95 	bl	801763a <xQueueGenericCreate>
 8008710:	4603      	mov	r3, r0
 8008712:	4a51      	ldr	r2, [pc, #324]	@ (8008858 <master_task+0x198>)
 8008714:	6013      	str	r3, [r2, #0]
	mag_data_queue = xQueueCreate(5, sizeof(mag_data_t));
 8008716:	2200      	movs	r2, #0
 8008718:	210c      	movs	r1, #12
 800871a:	2005      	movs	r0, #5
 800871c:	f00e ff8d 	bl	801763a <xQueueGenericCreate>
 8008720:	4603      	mov	r3, r0
 8008722:	4a4e      	ldr	r2, [pc, #312]	@ (800885c <master_task+0x19c>)
 8008724:	6013      	str	r3, [r2, #0]
	//telem_data_queue = xQueueCreate(10, sizeof(telem_data_struct_t));
	g_buzzing_task_msg = xQueueCreate(48, sizeof(uint8_t));
 8008726:	2200      	movs	r2, #0
 8008728:	2101      	movs	r1, #1
 800872a:	2030      	movs	r0, #48	@ 0x30
 800872c:	f00e ff85 	bl	801763a <xQueueGenericCreate>
 8008730:	4603      	mov	r3, r0
 8008732:	4a4b      	ldr	r2, [pc, #300]	@ (8008860 <master_task+0x1a0>)
 8008734:	6013      	str	r3, [r2, #0]

	// xTaskCreate(Ctrl_TargetUpdateTask, "Ctrl_TargetUpdateTask",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&Ctrl_TargetUpdateTask_handle);

	xTaskCreate(motors_process_task, "motor_process",
 8008736:	4b4b      	ldr	r3, [pc, #300]	@ (8008864 <master_task+0x1a4>)
 8008738:	9301      	str	r3, [sp, #4]
 800873a:	2304      	movs	r3, #4
 800873c:	9300      	str	r3, [sp, #0]
 800873e:	2301      	movs	r3, #1
 8008740:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008744:	4948      	ldr	r1, [pc, #288]	@ (8008868 <master_task+0x1a8>)
 8008746:	4849      	ldr	r0, [pc, #292]	@ (800886c <master_task+0x1ac>)
 8008748:	f00f fcb8 	bl	80180bc <xTaskCreate>

	// xTaskCreate(balancing_task, "balancing_task",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&balancing_task_handle);

	xTaskCreate(leg_kinematic_task, "leg_kinematic",
 800874c:	4b48      	ldr	r3, [pc, #288]	@ (8008870 <master_task+0x1b0>)
 800874e:	9301      	str	r3, [sp, #4]
 8008750:	2304      	movs	r3, #4
 8008752:	9300      	str	r3, [sp, #0]
 8008754:	2301      	movs	r3, #1
 8008756:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800875a:	4946      	ldr	r1, [pc, #280]	@ (8008874 <master_task+0x1b4>)
 800875c:	4846      	ldr	r0, [pc, #280]	@ (8008878 <master_task+0x1b8>)
 800875e:	f00f fcad 	bl	80180bc <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
					&motors_process_handle);

	xTaskCreate(imu_processing_task, "IMU_task",
 8008762:	4b46      	ldr	r3, [pc, #280]	@ (800887c <master_task+0x1bc>)
 8008764:	9301      	str	r3, [sp, #4]
 8008766:	230f      	movs	r3, #15
 8008768:	9300      	str	r3, [sp, #0]
 800876a:	2301      	movs	r3, #1
 800876c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008770:	4943      	ldr	r1, [pc, #268]	@ (8008880 <master_task+0x1c0>)
 8008772:	4844      	ldr	r0, [pc, #272]	@ (8008884 <master_task+0x1c4>)
 8008774:	f00f fca2 	bl	80180bc <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 15,
			&imu_processing_task_handle);

	xTaskCreate(motor_calib_task, "motor_calib_task",
 8008778:	4b43      	ldr	r3, [pc, #268]	@ (8008888 <master_task+0x1c8>)
 800877a:	9301      	str	r3, [sp, #4]
 800877c:	2309      	movs	r3, #9
 800877e:	9300      	str	r3, [sp, #0]
 8008780:	2301      	movs	r3, #1
 8008782:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008786:	4941      	ldr	r1, [pc, #260]	@ (800888c <master_task+0x1cc>)
 8008788:	4841      	ldr	r0, [pc, #260]	@ (8008890 <master_task+0x1d0>)
 800878a:	f00f fc97 	bl	80180bc <xTaskCreate>
	} else {
//		xTaskCreate(launcher_control_task, "launcher_task",
//		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
//				&launcher_control_task_handle);
	}
	gimbal_ctrl_data.yaw_semaphore = xSemaphoreCreateBinary();
 800878e:	2203      	movs	r2, #3
 8008790:	2100      	movs	r1, #0
 8008792:	2001      	movs	r0, #1
 8008794:	f00e ff51 	bl	801763a <xQueueGenericCreate>
 8008798:	4603      	mov	r3, r0
 800879a:	4a3e      	ldr	r2, [pc, #248]	@ (8008894 <master_task+0x1d4>)
 800879c:	6113      	str	r3, [r2, #16]
	xSemaphoreGive(gimbal_ctrl_data.yaw_semaphore);
 800879e:	4b3d      	ldr	r3, [pc, #244]	@ (8008894 <master_task+0x1d4>)
 80087a0:	6918      	ldr	r0, [r3, #16]
 80087a2:	2300      	movs	r3, #0
 80087a4:	2200      	movs	r2, #0
 80087a6:	2100      	movs	r1, #0
 80087a8:	f00e ffa6 	bl	80176f8 <xQueueGenericSend>
	xTaskCreate(control_input_task, "RC_task",
 80087ac:	4b3a      	ldr	r3, [pc, #232]	@ (8008898 <master_task+0x1d8>)
 80087ae:	9301      	str	r3, [sp, #4]
 80087b0:	2304      	movs	r3, #4
 80087b2:	9300      	str	r3, [sp, #0]
 80087b4:	2301      	movs	r3, #1
 80087b6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80087ba:	4938      	ldr	r1, [pc, #224]	@ (800889c <master_task+0x1dc>)
 80087bc:	4838      	ldr	r0, [pc, #224]	@ (80088a0 <master_task+0x1e0>)
 80087be:	f00f fc7d 	bl	80180bc <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
			&control_input_task_handle);
	xTaskCreate(referee_processing_task, "referee_task", 512, (void*) 1,
 80087c2:	4b38      	ldr	r3, [pc, #224]	@ (80088a4 <master_task+0x1e4>)
 80087c4:	9301      	str	r3, [sp, #4]
 80087c6:	2302      	movs	r3, #2
 80087c8:	9300      	str	r3, [sp, #0]
 80087ca:	2301      	movs	r3, #1
 80087cc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80087d0:	4935      	ldr	r1, [pc, #212]	@ (80088a8 <master_task+0x1e8>)
 80087d2:	4836      	ldr	r0, [pc, #216]	@ (80088ac <master_task+0x1ec>)
 80087d4:	f00f fc72 	bl	80180bc <xTaskCreate>
			(UBaseType_t) 2, &referee_processing_task_handle);

	// xTaskCreate(motor_control_task, "motor_control_task", 512, (void*) 3,
	// 		(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(motor_control_task, "motor_control", 512, (void*) 3,
 80087d8:	4b35      	ldr	r3, [pc, #212]	@ (80088b0 <master_task+0x1f0>)
 80087da:	9301      	str	r3, [sp, #4]
 80087dc:	2308      	movs	r3, #8
 80087de:	9300      	str	r3, [sp, #0]
 80087e0:	2303      	movs	r3, #3
 80087e2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80087e6:	4933      	ldr	r1, [pc, #204]	@ (80088b4 <master_task+0x1f4>)
 80087e8:	4833      	ldr	r0, [pc, #204]	@ (80088b8 <master_task+0x1f8>)
 80087ea:	f00f fc67 	bl	80180bc <xTaskCreate>
			(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(buzzing_task, "buzzer_task",
 80087ee:	4b33      	ldr	r3, [pc, #204]	@ (80088bc <master_task+0x1fc>)
 80087f0:	9301      	str	r3, [sp, #4]
 80087f2:	2301      	movs	r3, #1
 80087f4:	9300      	str	r3, [sp, #0]
 80087f6:	2301      	movs	r3, #1
 80087f8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80087fc:	4930      	ldr	r1, [pc, #192]	@ (80088c0 <master_task+0x200>)
 80087fe:	4831      	ldr	r0, [pc, #196]	@ (80088c4 <master_task+0x204>)
 8008800:	f00f fc5c 	bl	80180bc <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &buzzing_task_handle);
	if (usb_continue_semaphore == NULL) {
 8008804:	4b12      	ldr	r3, [pc, #72]	@ (8008850 <master_task+0x190>)
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	2b00      	cmp	r3, #0
 800880a:	d00a      	beq.n	8008822 <master_task+0x162>
		//error handler
	} else {
		xTaskCreate(usb_task, "usb_task",
 800880c:	4b2e      	ldr	r3, [pc, #184]	@ (80088c8 <master_task+0x208>)
 800880e:	9301      	str	r3, [sp, #4]
 8008810:	2301      	movs	r3, #1
 8008812:	9300      	str	r3, [sp, #0]
 8008814:	2301      	movs	r3, #1
 8008816:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800881a:	492c      	ldr	r1, [pc, #176]	@ (80088cc <master_task+0x20c>)
 800881c:	482c      	ldr	r0, [pc, #176]	@ (80088d0 <master_task+0x210>)
 800881e:	f00f fc4d 	bl	80180bc <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &usb_task_handle);
	}

//	xTaskCreate(telemetry_task, "telemetry_task", 700, (void*) 1,
//			(UBaseType_t) 5, &telemetry_task_handle);
	xTaskCreate(hud_task, "hud_task", 512, (void*) 3,
 8008822:	4b2c      	ldr	r3, [pc, #176]	@ (80088d4 <master_task+0x214>)
 8008824:	9301      	str	r3, [sp, #4]
 8008826:	2305      	movs	r3, #5
 8008828:	9300      	str	r3, [sp, #0]
 800882a:	2303      	movs	r3, #3
 800882c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8008830:	4929      	ldr	r1, [pc, #164]	@ (80088d8 <master_task+0x218>)
 8008832:	482a      	ldr	r0, [pc, #168]	@ (80088dc <master_task+0x21c>)
 8008834:	f00f fc42 	bl	80180bc <xTaskCreate>
			(UBaseType_t) 5, &hud_task_handle);


//	vTaskDelete(master_task_handle);
	while(1){
		vTaskDelay(1000);
 8008838:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800883c:	f00f fe46 	bl	80184cc <vTaskDelay>
 8008840:	e7fa      	b.n	8008838 <master_task+0x178>
 8008842:	bf00      	nop
 8008844:	200037b8 	.word	0x200037b8
 8008848:	200037bc 	.word	0x200037bc
 800884c:	200037c0 	.word	0x200037c0
 8008850:	200037c4 	.word	0x200037c4
 8008854:	200037c8 	.word	0x200037c8
 8008858:	200037cc 	.word	0x200037cc
 800885c:	200037d0 	.word	0x200037d0
 8008860:	200037d4 	.word	0x200037d4
 8008864:	200037b4 	.word	0x200037b4
 8008868:	08021000 	.word	0x08021000
 800886c:	0800a461 	.word	0x0800a461
 8008870:	200037b0 	.word	0x200037b0
 8008874:	08021010 	.word	0x08021010
 8008878:	08007451 	.word	0x08007451
 800887c:	200037a4 	.word	0x200037a4
 8008880:	08021020 	.word	0x08021020
 8008884:	080073ad 	.word	0x080073ad
 8008888:	2000379c 	.word	0x2000379c
 800888c:	0802102c 	.word	0x0802102c
 8008890:	08009c89 	.word	0x08009c89
 8008894:	200034e8 	.word	0x200034e8
 8008898:	20003794 	.word	0x20003794
 800889c:	08021040 	.word	0x08021040
 80088a0:	08005589 	.word	0x08005589
 80088a4:	20003790 	.word	0x20003790
 80088a8:	08021048 	.word	0x08021048
 80088ac:	0800ab39 	.word	0x0800ab39
 80088b0:	200037a8 	.word	0x200037a8
 80088b4:	08021058 	.word	0x08021058
 80088b8:	08009f5d 	.word	0x08009f5d
 80088bc:	20003798 	.word	0x20003798
 80088c0:	08021068 	.word	0x08021068
 80088c4:	08004c71 	.word	0x08004c71
 80088c8:	200037a0 	.word	0x200037a0
 80088cc:	08021074 	.word	0x08021074
 80088d0:	0800b0c5 	.word	0x0800b0c5
 80088d4:	200037ac 	.word	0x200037ac
 80088d8:	08021080 	.word	0x08021080
 80088dc:	080063e1 	.word	0x080063e1

080088e0 <set_motor_config>:
#include "motor_config.h"

extern QueueHandle_t g_buzzing_task_msg;
uint16_t g_motor_fault;

void set_motor_config(motor_data_t *motor) {
 80088e0:	b480      	push	{r7}
 80088e2:	b083      	sub	sp, #12
 80088e4:	af00      	add	r7, sp, #0
 80088e6:	6078      	str	r0, [r7, #4]
	//general config:
	switch (motor->motor_type) {
 80088e8:	687b      	ldr	r3, [r7, #4]
 80088ea:	789b      	ldrb	r3, [r3, #2]
 80088ec:	3b01      	subs	r3, #1
 80088ee:	2b08      	cmp	r3, #8
 80088f0:	f200 8115 	bhi.w	8008b1e <set_motor_config+0x23e>
 80088f4:	a201      	add	r2, pc, #4	@ (adr r2, 80088fc <set_motor_config+0x1c>)
 80088f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80088fa:	bf00      	nop
 80088fc:	080089ed 	.word	0x080089ed
 8008900:	08008ab9 	.word	0x08008ab9
 8008904:	08008921 	.word	0x08008921
 8008908:	08008985 	.word	0x08008985
 800890c:	08008921 	.word	0x08008921
 8008910:	08008ab9 	.word	0x08008ab9
 8008914:	08008ab9 	.word	0x08008ab9
 8008918:	08008921 	.word	0x08008921
 800891c:	08008a53 	.word	0x08008a53
	case TYPE_M3508_ANGLE:
	case TYPE_M3508_STEPS:
	case TYPE_M3508:
		motor->angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	4a84      	ldr	r2, [pc, #528]	@ (8008b34 <set_motor_config+0x254>)
 8008924:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	4a83      	ldr	r2, [pc, #524]	@ (8008b38 <set_motor_config+0x258>)
 800892c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8008936:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M3508_GEARBOX_RATIO;
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	4a80      	ldr	r2, [pc, #512]	@ (8008b3c <set_motor_config+0x25c>)
 800893c:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M3508_GEARBOX_RATIO;
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	4a7f      	ldr	r2, [pc, #508]	@ (8008b40 <set_motor_config+0x260>)
 8008944:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008954:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008956:	687b      	ldr	r3, [r7, #4]
 8008958:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	4a79      	ldr	r2, [pc, #484]	@ (8008b44 <set_motor_config+0x264>)
 8008960:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	4a78      	ldr	r2, [pc, #480]	@ (8008b48 <set_motor_config+0x268>)
 8008968:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang - motor->angle_data.min_ang;
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008978:	ee77 7a67 	vsub.f32	s15, s14, s15
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008982:	e0cd      	b.n	8008b20 <set_motor_config+0x240>
	case TYPE_M3508_NGEARBOX:
		motor->angle_data.gearbox_ratio = 1;
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800898a:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 800898e:	687b      	ldr	r3, [r7, #4]
 8008990:	4a69      	ldr	r2, [pc, #420]	@ (8008b38 <set_motor_config+0x258>)
 8008992:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800899c:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	4a6a      	ldr	r2, [pc, #424]	@ (8008b4c <set_motor_config+0x26c>)
 80089a2:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80089ac:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 80089b6:	687b      	ldr	r3, [r7, #4]
 80089b8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80089bc:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	4a5f      	ldr	r2, [pc, #380]	@ (8008b44 <set_motor_config+0x264>)
 80089c8:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	4a5e      	ldr	r2, [pc, #376]	@ (8008b48 <set_motor_config+0x268>)
 80089d0:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 80089e0:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80089e4:	687b      	ldr	r3, [r7, #4]
 80089e6:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 80089ea:	e099      	b.n	8008b20 <set_motor_config+0x240>

	case TYPE_GM6020:
		motor->angle_data.gearbox_ratio = 1;
 80089ec:	687b      	ldr	r3, [r7, #4]
 80089ee:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80089f2:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	4a55      	ldr	r2, [pc, #340]	@ (8008b50 <set_motor_config+0x270>)
 80089fa:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	4a54      	ldr	r2, [pc, #336]	@ (8008b54 <set_motor_config+0x274>)
 8008a02:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 8008a04:	687b      	ldr	r3, [r7, #4]
 8008a06:	4a51      	ldr	r2, [pc, #324]	@ (8008b4c <set_motor_config+0x26c>)
 8008a08:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 8008a0c:	687b      	ldr	r3, [r7, #4]
 8008a0e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8008a12:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008a16:	687b      	ldr	r3, [r7, #4]
 8008a18:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008a22:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.max_ang = PI;
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	4a46      	ldr	r2, [pc, #280]	@ (8008b48 <set_motor_config+0x268>)
 8008a2e:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.min_ang = -PI;
 8008a32:	687b      	ldr	r3, [r7, #4]
 8008a34:	4a43      	ldr	r2, [pc, #268]	@ (8008b44 <set_motor_config+0x264>)
 8008a36:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 8008a40:	687b      	ldr	r3, [r7, #4]
 8008a42:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008a46:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008a4a:	687b      	ldr	r3, [r7, #4]
 8008a4c:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008a50:	e066      	b.n	8008b20 <set_motor_config+0x240>

	case TYPE_GM6020_720:
		motor->angle_data.gearbox_ratio = 0;
 8008a52:	687b      	ldr	r3, [r7, #4]
 8008a54:	f04f 0200 	mov.w	r2, #0
 8008a58:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	4a3c      	ldr	r2, [pc, #240]	@ (8008b50 <set_motor_config+0x270>)
 8008a60:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	4a3b      	ldr	r2, [pc, #236]	@ (8008b54 <set_motor_config+0x274>)
 8008a68:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -8192;	//-4096*2
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	4a3a      	ldr	r2, [pc, #232]	@ (8008b58 <set_motor_config+0x278>)
 8008a6e:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 8192;	//4096*2
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8008a78:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 8008a82:	687b      	ldr	r3, [r7, #4]
 8008a84:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008a88:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -2 * PI;
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	4a32      	ldr	r2, [pc, #200]	@ (8008b5c <set_motor_config+0x27c>)
 8008a94:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = 2 * PI;
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	4a31      	ldr	r2, [pc, #196]	@ (8008b60 <set_motor_config+0x280>)
 8008a9c:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008aac:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008ab6:	e033      	b.n	8008b20 <set_motor_config+0x240>
	case TYPE_M2006:
	case TYPE_M2006_STEPS:
	case TYPE_M2006_ANGLE:
		motor->angle_data.gearbox_ratio = M2006_GEARBOX_RATIO;
 8008ab8:	687b      	ldr	r3, [r7, #4]
 8008aba:	4a2a      	ldr	r2, [pc, #168]	@ (8008b64 <set_motor_config+0x284>)
 8008abc:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M2006_MAX_RPM;
 8008ac0:	687b      	ldr	r3, [r7, #4]
 8008ac2:	4a29      	ldr	r2, [pc, #164]	@ (8008b68 <set_motor_config+0x288>)
 8008ac4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M2006_MAX_OUTPUT;
 8008ac8:	687b      	ldr	r3, [r7, #4]
 8008aca:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8008ace:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M2006_GEARBOX_RATIO;
 8008ad0:	687b      	ldr	r3, [r7, #4]
 8008ad2:	4a26      	ldr	r2, [pc, #152]	@ (8008b6c <set_motor_config+0x28c>)
 8008ad4:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M2006_GEARBOX_RATIO;
 8008ad8:	687b      	ldr	r3, [r7, #4]
 8008ada:	f44f 3210 	mov.w	r2, #147456	@ 0x24000
 8008ade:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008ae2:	687b      	ldr	r3, [r7, #4]
 8008ae4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008aee:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	4a12      	ldr	r2, [pc, #72]	@ (8008b44 <set_motor_config+0x264>)
 8008afa:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 8008afe:	687b      	ldr	r3, [r7, #4]
 8008b00:	4a11      	ldr	r2, [pc, #68]	@ (8008b48 <set_motor_config+0x268>)
 8008b02:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008b12:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008b1c:	e000      	b.n	8008b20 <set_motor_config+0x240>
	default:
		break;
 8008b1e:	bf00      	nop
	}

	motor->angle_data.init = 0;
 8008b20:	687b      	ldr	r3, [r7, #4]
 8008b22:	2200      	movs	r2, #0
 8008b24:	f883 20dc 	strb.w	r2, [r3, #220]	@ 0xdc

}
 8008b28:	bf00      	nop
 8008b2a:	370c      	adds	r7, #12
 8008b2c:	46bd      	mov	sp, r7
 8008b2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b32:	4770      	bx	lr
 8008b34:	4199999a 	.word	0x4199999a
 8008b38:	460fc000 	.word	0x460fc000
 8008b3c:	fffecccd 	.word	0xfffecccd
 8008b40:	00013333 	.word	0x00013333
 8008b44:	c0490fdb 	.word	0xc0490fdb
 8008b48:	40490fdb 	.word	0x40490fdb
 8008b4c:	fffff000 	.word	0xfffff000
 8008b50:	43c80000 	.word	0x43c80000
 8008b54:	469c4000 	.word	0x469c4000
 8008b58:	ffffe000 	.word	0xffffe000
 8008b5c:	c0c90fdb 	.word	0xc0c90fdb
 8008b60:	40c90fdb 	.word	0x40c90fdb
 8008b64:	42100000 	.word	0x42100000
 8008b68:	466a6000 	.word	0x466a6000
 8008b6c:	fffdc000 	.word	0xfffdc000

08008b70 <config_motors>:

extern motor_data_t g_can_motors[24];
void config_motors() {
 8008b70:	b580      	push	{r7, lr}
 8008b72:	b082      	sub	sp, #8
 8008b74:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i < 24; i++) {
 8008b76:	2300      	movs	r3, #0
 8008b78:	71fb      	strb	r3, [r7, #7]
 8008b7a:	e042      	b.n	8008c02 <config_motors+0x92>
		//reset all the values to 0
		g_can_motors[i].motor_type = 0;
 8008b7c:	79fa      	ldrb	r2, [r7, #7]
 8008b7e:	49c4      	ldr	r1, [pc, #784]	@ (8008e90 <config_motors+0x320>)
 8008b80:	4613      	mov	r3, r2
 8008b82:	011b      	lsls	r3, r3, #4
 8008b84:	1a9b      	subs	r3, r3, r2
 8008b86:	011b      	lsls	r3, r3, #4
 8008b88:	440b      	add	r3, r1
 8008b8a:	3302      	adds	r3, #2
 8008b8c:	2200      	movs	r2, #0
 8008b8e:	701a      	strb	r2, [r3, #0]
		g_can_motors[i].rpm_pid.output = 0;
 8008b90:	79fa      	ldrb	r2, [r7, #7]
 8008b92:	49bf      	ldr	r1, [pc, #764]	@ (8008e90 <config_motors+0x320>)
 8008b94:	4613      	mov	r3, r2
 8008b96:	011b      	lsls	r3, r3, #4
 8008b98:	1a9b      	subs	r3, r3, r2
 8008b9a:	011b      	lsls	r3, r3, #4
 8008b9c:	440b      	add	r3, r1
 8008b9e:	3358      	adds	r3, #88	@ 0x58
 8008ba0:	f04f 0200 	mov.w	r2, #0
 8008ba4:	601a      	str	r2, [r3, #0]
		g_can_motors[i].rpm_pid.integral = 0;
 8008ba6:	79fa      	ldrb	r2, [r7, #7]
 8008ba8:	49b9      	ldr	r1, [pc, #740]	@ (8008e90 <config_motors+0x320>)
 8008baa:	4613      	mov	r3, r2
 8008bac:	011b      	lsls	r3, r3, #4
 8008bae:	1a9b      	subs	r3, r3, r2
 8008bb0:	011b      	lsls	r3, r3, #4
 8008bb2:	440b      	add	r3, r1
 8008bb4:	334c      	adds	r3, #76	@ 0x4c
 8008bb6:	f04f 0200 	mov.w	r2, #0
 8008bba:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.output = 0;
 8008bbc:	79fa      	ldrb	r2, [r7, #7]
 8008bbe:	49b4      	ldr	r1, [pc, #720]	@ (8008e90 <config_motors+0x320>)
 8008bc0:	4613      	mov	r3, r2
 8008bc2:	011b      	lsls	r3, r3, #4
 8008bc4:	1a9b      	subs	r3, r3, r2
 8008bc6:	011b      	lsls	r3, r3, #4
 8008bc8:	440b      	add	r3, r1
 8008bca:	3388      	adds	r3, #136	@ 0x88
 8008bcc:	f04f 0200 	mov.w	r2, #0
 8008bd0:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.integral = 0;
 8008bd2:	79fa      	ldrb	r2, [r7, #7]
 8008bd4:	49ae      	ldr	r1, [pc, #696]	@ (8008e90 <config_motors+0x320>)
 8008bd6:	4613      	mov	r3, r2
 8008bd8:	011b      	lsls	r3, r3, #4
 8008bda:	1a9b      	subs	r3, r3, r2
 8008bdc:	011b      	lsls	r3, r3, #4
 8008bde:	440b      	add	r3, r1
 8008be0:	337c      	adds	r3, #124	@ 0x7c
 8008be2:	f04f 0200 	mov.w	r2, #0
 8008be6:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_data.ticks = 0;
 8008be8:	79fa      	ldrb	r2, [r7, #7]
 8008bea:	49a9      	ldr	r1, [pc, #676]	@ (8008e90 <config_motors+0x320>)
 8008bec:	4613      	mov	r3, r2
 8008bee:	011b      	lsls	r3, r3, #4
 8008bf0:	1a9b      	subs	r3, r3, r2
 8008bf2:	011b      	lsls	r3, r3, #4
 8008bf4:	440b      	add	r3, r1
 8008bf6:	3398      	adds	r3, #152	@ 0x98
 8008bf8:	2200      	movs	r2, #0
 8008bfa:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < 24; i++) {
 8008bfc:	79fb      	ldrb	r3, [r7, #7]
 8008bfe:	3301      	adds	r3, #1
 8008c00:	71fb      	strb	r3, [r7, #7]
 8008c02:	79fb      	ldrb	r3, [r7, #7]
 8008c04:	2b17      	cmp	r3, #23
 8008c06:	d9b9      	bls.n	8008b7c <config_motors+0xc>
	}

	//initialise motor data
#ifdef LEFT_MOTOR_ID
	uint8_t motor_id = LEFT_MOTOR_ID - 1;
 8008c08:	2300      	movs	r3, #0
 8008c0a:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 8008c0c:	79ba      	ldrb	r2, [r7, #6]
 8008c0e:	49a0      	ldr	r1, [pc, #640]	@ (8008e90 <config_motors+0x320>)
 8008c10:	4613      	mov	r3, r2
 8008c12:	011b      	lsls	r3, r3, #4
 8008c14:	1a9b      	subs	r3, r3, r2
 8008c16:	011b      	lsls	r3, r3, #4
 8008c18:	440b      	add	r3, r1
 8008c1a:	3302      	adds	r3, #2
 8008c1c:	2203      	movs	r2, #3
 8008c1e:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008c20:	79ba      	ldrb	r2, [r7, #6]
 8008c22:	4613      	mov	r3, r2
 8008c24:	011b      	lsls	r3, r3, #4
 8008c26:	1a9b      	subs	r3, r3, r2
 8008c28:	011b      	lsls	r3, r3, #4
 8008c2a:	4a99      	ldr	r2, [pc, #612]	@ (8008e90 <config_motors+0x320>)
 8008c2c:	4413      	add	r3, r2
 8008c2e:	4618      	mov	r0, r3
 8008c30:	f7ff fe56 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008c34:	79ba      	ldrb	r2, [r7, #6]
 8008c36:	4996      	ldr	r1, [pc, #600]	@ (8008e90 <config_motors+0x320>)
 8008c38:	4613      	mov	r3, r2
 8008c3a:	011b      	lsls	r3, r3, #4
 8008c3c:	1a9b      	subs	r3, r3, r2
 8008c3e:	011b      	lsls	r3, r3, #4
 8008c40:	440b      	add	r3, r1
 8008c42:	339c      	adds	r3, #156	@ 0x9c
 8008c44:	2200      	movs	r2, #0
 8008c46:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008c48:	79ba      	ldrb	r2, [r7, #6]
 8008c4a:	4991      	ldr	r1, [pc, #580]	@ (8008e90 <config_motors+0x320>)
 8008c4c:	4613      	mov	r3, r2
 8008c4e:	011b      	lsls	r3, r3, #4
 8008c50:	1a9b      	subs	r3, r3, r2
 8008c52:	011b      	lsls	r3, r3, #4
 8008c54:	440b      	add	r3, r1
 8008c56:	33c4      	adds	r3, #196	@ 0xc4
 8008c58:	4a8e      	ldr	r2, [pc, #568]	@ (8008e94 <config_motors+0x324>)
 8008c5a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008c5c:	79ba      	ldrb	r2, [r7, #6]
 8008c5e:	498c      	ldr	r1, [pc, #560]	@ (8008e90 <config_motors+0x320>)
 8008c60:	4613      	mov	r3, r2
 8008c62:	011b      	lsls	r3, r3, #4
 8008c64:	1a9b      	subs	r3, r3, r2
 8008c66:	011b      	lsls	r3, r3, #4
 8008c68:	440b      	add	r3, r1
 8008c6a:	33c0      	adds	r3, #192	@ 0xc0
 8008c6c:	4a8a      	ldr	r2, [pc, #552]	@ (8008e98 <config_motors+0x328>)
 8008c6e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008c70:	79ba      	ldrb	r2, [r7, #6]
 8008c72:	4987      	ldr	r1, [pc, #540]	@ (8008e90 <config_motors+0x320>)
 8008c74:	4613      	mov	r3, r2
 8008c76:	011b      	lsls	r3, r3, #4
 8008c78:	1a9b      	subs	r3, r3, r2
 8008c7a:	011b      	lsls	r3, r3, #4
 8008c7c:	440b      	add	r3, r1
 8008c7e:	3338      	adds	r3, #56	@ 0x38
 8008c80:	f04f 0200 	mov.w	r2, #0
 8008c84:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008c86:	79ba      	ldrb	r2, [r7, #6]
 8008c88:	4981      	ldr	r1, [pc, #516]	@ (8008e90 <config_motors+0x320>)
 8008c8a:	4613      	mov	r3, r2
 8008c8c:	011b      	lsls	r3, r3, #4
 8008c8e:	1a9b      	subs	r3, r3, r2
 8008c90:	011b      	lsls	r3, r3, #4
 8008c92:	440b      	add	r3, r1
 8008c94:	333c      	adds	r3, #60	@ 0x3c
 8008c96:	f04f 0200 	mov.w	r2, #0
 8008c9a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008c9c:	79ba      	ldrb	r2, [r7, #6]
 8008c9e:	497c      	ldr	r1, [pc, #496]	@ (8008e90 <config_motors+0x320>)
 8008ca0:	4613      	mov	r3, r2
 8008ca2:	011b      	lsls	r3, r3, #4
 8008ca4:	1a9b      	subs	r3, r3, r2
 8008ca6:	011b      	lsls	r3, r3, #4
 8008ca8:	440b      	add	r3, r1
 8008caa:	3340      	adds	r3, #64	@ 0x40
 8008cac:	f04f 0200 	mov.w	r2, #0
 8008cb0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008cb2:	79ba      	ldrb	r2, [r7, #6]
 8008cb4:	4976      	ldr	r1, [pc, #472]	@ (8008e90 <config_motors+0x320>)
 8008cb6:	4613      	mov	r3, r2
 8008cb8:	011b      	lsls	r3, r3, #4
 8008cba:	1a9b      	subs	r3, r3, r2
 8008cbc:	011b      	lsls	r3, r3, #4
 8008cbe:	440b      	add	r3, r1
 8008cc0:	33d4      	adds	r3, #212	@ 0xd4
 8008cc2:	4a76      	ldr	r2, [pc, #472]	@ (8008e9c <config_motors+0x32c>)
 8008cc4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008cc6:	79ba      	ldrb	r2, [r7, #6]
 8008cc8:	4971      	ldr	r1, [pc, #452]	@ (8008e90 <config_motors+0x320>)
 8008cca:	4613      	mov	r3, r2
 8008ccc:	011b      	lsls	r3, r3, #4
 8008cce:	1a9b      	subs	r3, r3, r2
 8008cd0:	011b      	lsls	r3, r3, #4
 8008cd2:	440b      	add	r3, r1
 8008cd4:	3350      	adds	r3, #80	@ 0x50
 8008cd6:	f04f 0200 	mov.w	r2, #0
 8008cda:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008cdc:	79ba      	ldrb	r2, [r7, #6]
 8008cde:	496c      	ldr	r1, [pc, #432]	@ (8008e90 <config_motors+0x320>)
 8008ce0:	4613      	mov	r3, r2
 8008ce2:	011b      	lsls	r3, r3, #4
 8008ce4:	1a9b      	subs	r3, r3, r2
 8008ce6:	011b      	lsls	r3, r3, #4
 8008ce8:	440b      	add	r3, r1
 8008cea:	3354      	adds	r3, #84	@ 0x54
 8008cec:	f04f 0200 	mov.w	r2, #0
 8008cf0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 8008cf2:	79ba      	ldrb	r2, [r7, #6]
 8008cf4:	4966      	ldr	r1, [pc, #408]	@ (8008e90 <config_motors+0x320>)
 8008cf6:	4613      	mov	r3, r2
 8008cf8:	011b      	lsls	r3, r3, #4
 8008cfa:	1a9b      	subs	r3, r3, r2
 8008cfc:	011b      	lsls	r3, r3, #4
 8008cfe:	440b      	add	r3, r1
 8008d00:	3330      	adds	r3, #48	@ 0x30
 8008d02:	4a67      	ldr	r2, [pc, #412]	@ (8008ea0 <config_motors+0x330>)
 8008d04:	601a      	str	r2, [r3, #0]
#endif

#ifdef RIGHT_MOTOR_ID
	motor_id = RIGHT_MOTOR_ID - 1;
 8008d06:	2301      	movs	r3, #1
 8008d08:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 8008d0a:	79ba      	ldrb	r2, [r7, #6]
 8008d0c:	4960      	ldr	r1, [pc, #384]	@ (8008e90 <config_motors+0x320>)
 8008d0e:	4613      	mov	r3, r2
 8008d10:	011b      	lsls	r3, r3, #4
 8008d12:	1a9b      	subs	r3, r3, r2
 8008d14:	011b      	lsls	r3, r3, #4
 8008d16:	440b      	add	r3, r1
 8008d18:	3302      	adds	r3, #2
 8008d1a:	2203      	movs	r2, #3
 8008d1c:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008d1e:	79ba      	ldrb	r2, [r7, #6]
 8008d20:	4613      	mov	r3, r2
 8008d22:	011b      	lsls	r3, r3, #4
 8008d24:	1a9b      	subs	r3, r3, r2
 8008d26:	011b      	lsls	r3, r3, #4
 8008d28:	4a59      	ldr	r2, [pc, #356]	@ (8008e90 <config_motors+0x320>)
 8008d2a:	4413      	add	r3, r2
 8008d2c:	4618      	mov	r0, r3
 8008d2e:	f7ff fdd7 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008d32:	79ba      	ldrb	r2, [r7, #6]
 8008d34:	4956      	ldr	r1, [pc, #344]	@ (8008e90 <config_motors+0x320>)
 8008d36:	4613      	mov	r3, r2
 8008d38:	011b      	lsls	r3, r3, #4
 8008d3a:	1a9b      	subs	r3, r3, r2
 8008d3c:	011b      	lsls	r3, r3, #4
 8008d3e:	440b      	add	r3, r1
 8008d40:	339c      	adds	r3, #156	@ 0x9c
 8008d42:	2200      	movs	r2, #0
 8008d44:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008d46:	79ba      	ldrb	r2, [r7, #6]
 8008d48:	4951      	ldr	r1, [pc, #324]	@ (8008e90 <config_motors+0x320>)
 8008d4a:	4613      	mov	r3, r2
 8008d4c:	011b      	lsls	r3, r3, #4
 8008d4e:	1a9b      	subs	r3, r3, r2
 8008d50:	011b      	lsls	r3, r3, #4
 8008d52:	440b      	add	r3, r1
 8008d54:	33c4      	adds	r3, #196	@ 0xc4
 8008d56:	4a4f      	ldr	r2, [pc, #316]	@ (8008e94 <config_motors+0x324>)
 8008d58:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008d5a:	79ba      	ldrb	r2, [r7, #6]
 8008d5c:	494c      	ldr	r1, [pc, #304]	@ (8008e90 <config_motors+0x320>)
 8008d5e:	4613      	mov	r3, r2
 8008d60:	011b      	lsls	r3, r3, #4
 8008d62:	1a9b      	subs	r3, r3, r2
 8008d64:	011b      	lsls	r3, r3, #4
 8008d66:	440b      	add	r3, r1
 8008d68:	33c0      	adds	r3, #192	@ 0xc0
 8008d6a:	4a4b      	ldr	r2, [pc, #300]	@ (8008e98 <config_motors+0x328>)
 8008d6c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008d6e:	79ba      	ldrb	r2, [r7, #6]
 8008d70:	4947      	ldr	r1, [pc, #284]	@ (8008e90 <config_motors+0x320>)
 8008d72:	4613      	mov	r3, r2
 8008d74:	011b      	lsls	r3, r3, #4
 8008d76:	1a9b      	subs	r3, r3, r2
 8008d78:	011b      	lsls	r3, r3, #4
 8008d7a:	440b      	add	r3, r1
 8008d7c:	33d4      	adds	r3, #212	@ 0xd4
 8008d7e:	4a47      	ldr	r2, [pc, #284]	@ (8008e9c <config_motors+0x32c>)
 8008d80:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008d82:	79ba      	ldrb	r2, [r7, #6]
 8008d84:	4942      	ldr	r1, [pc, #264]	@ (8008e90 <config_motors+0x320>)
 8008d86:	4613      	mov	r3, r2
 8008d88:	011b      	lsls	r3, r3, #4
 8008d8a:	1a9b      	subs	r3, r3, r2
 8008d8c:	011b      	lsls	r3, r3, #4
 8008d8e:	440b      	add	r3, r1
 8008d90:	3338      	adds	r3, #56	@ 0x38
 8008d92:	f04f 0200 	mov.w	r2, #0
 8008d96:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008d98:	79ba      	ldrb	r2, [r7, #6]
 8008d9a:	493d      	ldr	r1, [pc, #244]	@ (8008e90 <config_motors+0x320>)
 8008d9c:	4613      	mov	r3, r2
 8008d9e:	011b      	lsls	r3, r3, #4
 8008da0:	1a9b      	subs	r3, r3, r2
 8008da2:	011b      	lsls	r3, r3, #4
 8008da4:	440b      	add	r3, r1
 8008da6:	333c      	adds	r3, #60	@ 0x3c
 8008da8:	f04f 0200 	mov.w	r2, #0
 8008dac:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008dae:	79ba      	ldrb	r2, [r7, #6]
 8008db0:	4937      	ldr	r1, [pc, #220]	@ (8008e90 <config_motors+0x320>)
 8008db2:	4613      	mov	r3, r2
 8008db4:	011b      	lsls	r3, r3, #4
 8008db6:	1a9b      	subs	r3, r3, r2
 8008db8:	011b      	lsls	r3, r3, #4
 8008dba:	440b      	add	r3, r1
 8008dbc:	3340      	adds	r3, #64	@ 0x40
 8008dbe:	f04f 0200 	mov.w	r2, #0
 8008dc2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008dc4:	79ba      	ldrb	r2, [r7, #6]
 8008dc6:	4932      	ldr	r1, [pc, #200]	@ (8008e90 <config_motors+0x320>)
 8008dc8:	4613      	mov	r3, r2
 8008dca:	011b      	lsls	r3, r3, #4
 8008dcc:	1a9b      	subs	r3, r3, r2
 8008dce:	011b      	lsls	r3, r3, #4
 8008dd0:	440b      	add	r3, r1
 8008dd2:	3350      	adds	r3, #80	@ 0x50
 8008dd4:	f04f 0200 	mov.w	r2, #0
 8008dd8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008dda:	79ba      	ldrb	r2, [r7, #6]
 8008ddc:	492c      	ldr	r1, [pc, #176]	@ (8008e90 <config_motors+0x320>)
 8008dde:	4613      	mov	r3, r2
 8008de0:	011b      	lsls	r3, r3, #4
 8008de2:	1a9b      	subs	r3, r3, r2
 8008de4:	011b      	lsls	r3, r3, #4
 8008de6:	440b      	add	r3, r1
 8008de8:	3354      	adds	r3, #84	@ 0x54
 8008dea:	f04f 0200 	mov.w	r2, #0
 8008dee:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 8008df0:	79ba      	ldrb	r2, [r7, #6]
 8008df2:	4927      	ldr	r1, [pc, #156]	@ (8008e90 <config_motors+0x320>)
 8008df4:	4613      	mov	r3, r2
 8008df6:	011b      	lsls	r3, r3, #4
 8008df8:	1a9b      	subs	r3, r3, r2
 8008dfa:	011b      	lsls	r3, r3, #4
 8008dfc:	440b      	add	r3, r1
 8008dfe:	3330      	adds	r3, #48	@ 0x30
 8008e00:	4a27      	ldr	r2, [pc, #156]	@ (8008ea0 <config_motors+0x330>)
 8008e02:	601a      	str	r2, [r3, #0]
#endif
#ifdef FR_MOTOR_ID
	motor_id = FR_MOTOR_ID - 1;
 8008e04:	2304      	movs	r3, #4
 8008e06:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008e08:	79ba      	ldrb	r2, [r7, #6]
 8008e0a:	4921      	ldr	r1, [pc, #132]	@ (8008e90 <config_motors+0x320>)
 8008e0c:	4613      	mov	r3, r2
 8008e0e:	011b      	lsls	r3, r3, #4
 8008e10:	1a9b      	subs	r3, r3, r2
 8008e12:	011b      	lsls	r3, r3, #4
 8008e14:	440b      	add	r3, r1
 8008e16:	3302      	adds	r3, #2
 8008e18:	2201      	movs	r2, #1
 8008e1a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008e1c:	79ba      	ldrb	r2, [r7, #6]
 8008e1e:	4613      	mov	r3, r2
 8008e20:	011b      	lsls	r3, r3, #4
 8008e22:	1a9b      	subs	r3, r3, r2
 8008e24:	011b      	lsls	r3, r3, #4
 8008e26:	4a1a      	ldr	r2, [pc, #104]	@ (8008e90 <config_motors+0x320>)
 8008e28:	4413      	add	r3, r2
 8008e2a:	4618      	mov	r0, r3
 8008e2c:	f7ff fd58 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008e30:	79ba      	ldrb	r2, [r7, #6]
 8008e32:	4917      	ldr	r1, [pc, #92]	@ (8008e90 <config_motors+0x320>)
 8008e34:	4613      	mov	r3, r2
 8008e36:	011b      	lsls	r3, r3, #4
 8008e38:	1a9b      	subs	r3, r3, r2
 8008e3a:	011b      	lsls	r3, r3, #4
 8008e3c:	440b      	add	r3, r1
 8008e3e:	339c      	adds	r3, #156	@ 0x9c
 8008e40:	2200      	movs	r2, #0
 8008e42:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008e44:	79ba      	ldrb	r2, [r7, #6]
 8008e46:	4912      	ldr	r1, [pc, #72]	@ (8008e90 <config_motors+0x320>)
 8008e48:	4613      	mov	r3, r2
 8008e4a:	011b      	lsls	r3, r3, #4
 8008e4c:	1a9b      	subs	r3, r3, r2
 8008e4e:	011b      	lsls	r3, r3, #4
 8008e50:	440b      	add	r3, r1
 8008e52:	33c4      	adds	r3, #196	@ 0xc4
 8008e54:	4a0f      	ldr	r2, [pc, #60]	@ (8008e94 <config_motors+0x324>)
 8008e56:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008e58:	79ba      	ldrb	r2, [r7, #6]
 8008e5a:	490d      	ldr	r1, [pc, #52]	@ (8008e90 <config_motors+0x320>)
 8008e5c:	4613      	mov	r3, r2
 8008e5e:	011b      	lsls	r3, r3, #4
 8008e60:	1a9b      	subs	r3, r3, r2
 8008e62:	011b      	lsls	r3, r3, #4
 8008e64:	440b      	add	r3, r1
 8008e66:	33c0      	adds	r3, #192	@ 0xc0
 8008e68:	4a0b      	ldr	r2, [pc, #44]	@ (8008e98 <config_motors+0x328>)
 8008e6a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008e6c:	79ba      	ldrb	r2, [r7, #6]
 8008e6e:	4908      	ldr	r1, [pc, #32]	@ (8008e90 <config_motors+0x320>)
 8008e70:	4613      	mov	r3, r2
 8008e72:	011b      	lsls	r3, r3, #4
 8008e74:	1a9b      	subs	r3, r3, r2
 8008e76:	011b      	lsls	r3, r3, #4
 8008e78:	440b      	add	r3, r1
 8008e7a:	3338      	adds	r3, #56	@ 0x38
 8008e7c:	f04f 0200 	mov.w	r2, #0
 8008e80:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008e82:	79ba      	ldrb	r2, [r7, #6]
 8008e84:	4902      	ldr	r1, [pc, #8]	@ (8008e90 <config_motors+0x320>)
 8008e86:	4613      	mov	r3, r2
 8008e88:	011b      	lsls	r3, r3, #4
 8008e8a:	1a9b      	subs	r3, r3, r2
 8008e8c:	011b      	lsls	r3, r3, #4
 8008e8e:	e009      	b.n	8008ea4 <config_motors+0x334>
 8008e90:	20001e48 	.word	0x20001e48
 8008e94:	40c90fdb 	.word	0x40c90fdb
 8008e98:	c0c90fdb 	.word	0xc0c90fdb
 8008e9c:	43eec2d1 	.word	0x43eec2d1
 8008ea0:	41200000 	.word	0x41200000
 8008ea4:	440b      	add	r3, r1
 8008ea6:	333c      	adds	r3, #60	@ 0x3c
 8008ea8:	f04f 0200 	mov.w	r2, #0
 8008eac:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008eae:	79ba      	ldrb	r2, [r7, #6]
 8008eb0:	49c3      	ldr	r1, [pc, #780]	@ (80091c0 <config_motors+0x650>)
 8008eb2:	4613      	mov	r3, r2
 8008eb4:	011b      	lsls	r3, r3, #4
 8008eb6:	1a9b      	subs	r3, r3, r2
 8008eb8:	011b      	lsls	r3, r3, #4
 8008eba:	440b      	add	r3, r1
 8008ebc:	3340      	adds	r3, #64	@ 0x40
 8008ebe:	f04f 0200 	mov.w	r2, #0
 8008ec2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008ec4:	79ba      	ldrb	r2, [r7, #6]
 8008ec6:	49be      	ldr	r1, [pc, #760]	@ (80091c0 <config_motors+0x650>)
 8008ec8:	4613      	mov	r3, r2
 8008eca:	011b      	lsls	r3, r3, #4
 8008ecc:	1a9b      	subs	r3, r3, r2
 8008ece:	011b      	lsls	r3, r3, #4
 8008ed0:	440b      	add	r3, r1
 8008ed2:	33d4      	adds	r3, #212	@ 0xd4
 8008ed4:	4abb      	ldr	r2, [pc, #748]	@ (80091c4 <config_motors+0x654>)
 8008ed6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008ed8:	79ba      	ldrb	r2, [r7, #6]
 8008eda:	49b9      	ldr	r1, [pc, #740]	@ (80091c0 <config_motors+0x650>)
 8008edc:	4613      	mov	r3, r2
 8008ede:	011b      	lsls	r3, r3, #4
 8008ee0:	1a9b      	subs	r3, r3, r2
 8008ee2:	011b      	lsls	r3, r3, #4
 8008ee4:	440b      	add	r3, r1
 8008ee6:	3350      	adds	r3, #80	@ 0x50
 8008ee8:	f04f 0200 	mov.w	r2, #0
 8008eec:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008eee:	79ba      	ldrb	r2, [r7, #6]
 8008ef0:	49b3      	ldr	r1, [pc, #716]	@ (80091c0 <config_motors+0x650>)
 8008ef2:	4613      	mov	r3, r2
 8008ef4:	011b      	lsls	r3, r3, #4
 8008ef6:	1a9b      	subs	r3, r3, r2
 8008ef8:	011b      	lsls	r3, r3, #4
 8008efa:	440b      	add	r3, r1
 8008efc:	3354      	adds	r3, #84	@ 0x54
 8008efe:	f04f 0200 	mov.w	r2, #0
 8008f02:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8008f04:	79ba      	ldrb	r2, [r7, #6]
 8008f06:	49ae      	ldr	r1, [pc, #696]	@ (80091c0 <config_motors+0x650>)
 8008f08:	4613      	mov	r3, r2
 8008f0a:	011b      	lsls	r3, r3, #4
 8008f0c:	1a9b      	subs	r3, r3, r2
 8008f0e:	011b      	lsls	r3, r3, #4
 8008f10:	440b      	add	r3, r1
 8008f12:	3330      	adds	r3, #48	@ 0x30
 8008f14:	4aac      	ldr	r2, [pc, #688]	@ (80091c8 <config_motors+0x658>)
 8008f16:	601a      	str	r2, [r3, #0]
#endif

#ifdef FL_MOTOR_ID
	motor_id = FL_MOTOR_ID - 1;
 8008f18:	2305      	movs	r3, #5
 8008f1a:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008f1c:	79ba      	ldrb	r2, [r7, #6]
 8008f1e:	49a8      	ldr	r1, [pc, #672]	@ (80091c0 <config_motors+0x650>)
 8008f20:	4613      	mov	r3, r2
 8008f22:	011b      	lsls	r3, r3, #4
 8008f24:	1a9b      	subs	r3, r3, r2
 8008f26:	011b      	lsls	r3, r3, #4
 8008f28:	440b      	add	r3, r1
 8008f2a:	3302      	adds	r3, #2
 8008f2c:	2201      	movs	r2, #1
 8008f2e:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008f30:	79ba      	ldrb	r2, [r7, #6]
 8008f32:	4613      	mov	r3, r2
 8008f34:	011b      	lsls	r3, r3, #4
 8008f36:	1a9b      	subs	r3, r3, r2
 8008f38:	011b      	lsls	r3, r3, #4
 8008f3a:	4aa1      	ldr	r2, [pc, #644]	@ (80091c0 <config_motors+0x650>)
 8008f3c:	4413      	add	r3, r2
 8008f3e:	4618      	mov	r0, r3
 8008f40:	f7ff fcce 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008f44:	79ba      	ldrb	r2, [r7, #6]
 8008f46:	499e      	ldr	r1, [pc, #632]	@ (80091c0 <config_motors+0x650>)
 8008f48:	4613      	mov	r3, r2
 8008f4a:	011b      	lsls	r3, r3, #4
 8008f4c:	1a9b      	subs	r3, r3, r2
 8008f4e:	011b      	lsls	r3, r3, #4
 8008f50:	440b      	add	r3, r1
 8008f52:	339c      	adds	r3, #156	@ 0x9c
 8008f54:	2200      	movs	r2, #0
 8008f56:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008f58:	79ba      	ldrb	r2, [r7, #6]
 8008f5a:	4999      	ldr	r1, [pc, #612]	@ (80091c0 <config_motors+0x650>)
 8008f5c:	4613      	mov	r3, r2
 8008f5e:	011b      	lsls	r3, r3, #4
 8008f60:	1a9b      	subs	r3, r3, r2
 8008f62:	011b      	lsls	r3, r3, #4
 8008f64:	440b      	add	r3, r1
 8008f66:	33c4      	adds	r3, #196	@ 0xc4
 8008f68:	4a98      	ldr	r2, [pc, #608]	@ (80091cc <config_motors+0x65c>)
 8008f6a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008f6c:	79ba      	ldrb	r2, [r7, #6]
 8008f6e:	4994      	ldr	r1, [pc, #592]	@ (80091c0 <config_motors+0x650>)
 8008f70:	4613      	mov	r3, r2
 8008f72:	011b      	lsls	r3, r3, #4
 8008f74:	1a9b      	subs	r3, r3, r2
 8008f76:	011b      	lsls	r3, r3, #4
 8008f78:	440b      	add	r3, r1
 8008f7a:	33c0      	adds	r3, #192	@ 0xc0
 8008f7c:	4a94      	ldr	r2, [pc, #592]	@ (80091d0 <config_motors+0x660>)
 8008f7e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008f80:	79ba      	ldrb	r2, [r7, #6]
 8008f82:	498f      	ldr	r1, [pc, #572]	@ (80091c0 <config_motors+0x650>)
 8008f84:	4613      	mov	r3, r2
 8008f86:	011b      	lsls	r3, r3, #4
 8008f88:	1a9b      	subs	r3, r3, r2
 8008f8a:	011b      	lsls	r3, r3, #4
 8008f8c:	440b      	add	r3, r1
 8008f8e:	33d4      	adds	r3, #212	@ 0xd4
 8008f90:	4a8c      	ldr	r2, [pc, #560]	@ (80091c4 <config_motors+0x654>)
 8008f92:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008f94:	79ba      	ldrb	r2, [r7, #6]
 8008f96:	498a      	ldr	r1, [pc, #552]	@ (80091c0 <config_motors+0x650>)
 8008f98:	4613      	mov	r3, r2
 8008f9a:	011b      	lsls	r3, r3, #4
 8008f9c:	1a9b      	subs	r3, r3, r2
 8008f9e:	011b      	lsls	r3, r3, #4
 8008fa0:	440b      	add	r3, r1
 8008fa2:	3338      	adds	r3, #56	@ 0x38
 8008fa4:	f04f 0200 	mov.w	r2, #0
 8008fa8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008faa:	79ba      	ldrb	r2, [r7, #6]
 8008fac:	4984      	ldr	r1, [pc, #528]	@ (80091c0 <config_motors+0x650>)
 8008fae:	4613      	mov	r3, r2
 8008fb0:	011b      	lsls	r3, r3, #4
 8008fb2:	1a9b      	subs	r3, r3, r2
 8008fb4:	011b      	lsls	r3, r3, #4
 8008fb6:	440b      	add	r3, r1
 8008fb8:	333c      	adds	r3, #60	@ 0x3c
 8008fba:	f04f 0200 	mov.w	r2, #0
 8008fbe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008fc0:	79ba      	ldrb	r2, [r7, #6]
 8008fc2:	497f      	ldr	r1, [pc, #508]	@ (80091c0 <config_motors+0x650>)
 8008fc4:	4613      	mov	r3, r2
 8008fc6:	011b      	lsls	r3, r3, #4
 8008fc8:	1a9b      	subs	r3, r3, r2
 8008fca:	011b      	lsls	r3, r3, #4
 8008fcc:	440b      	add	r3, r1
 8008fce:	3340      	adds	r3, #64	@ 0x40
 8008fd0:	f04f 0200 	mov.w	r2, #0
 8008fd4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008fd6:	79ba      	ldrb	r2, [r7, #6]
 8008fd8:	4979      	ldr	r1, [pc, #484]	@ (80091c0 <config_motors+0x650>)
 8008fda:	4613      	mov	r3, r2
 8008fdc:	011b      	lsls	r3, r3, #4
 8008fde:	1a9b      	subs	r3, r3, r2
 8008fe0:	011b      	lsls	r3, r3, #4
 8008fe2:	440b      	add	r3, r1
 8008fe4:	3350      	adds	r3, #80	@ 0x50
 8008fe6:	f04f 0200 	mov.w	r2, #0
 8008fea:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008fec:	79ba      	ldrb	r2, [r7, #6]
 8008fee:	4974      	ldr	r1, [pc, #464]	@ (80091c0 <config_motors+0x650>)
 8008ff0:	4613      	mov	r3, r2
 8008ff2:	011b      	lsls	r3, r3, #4
 8008ff4:	1a9b      	subs	r3, r3, r2
 8008ff6:	011b      	lsls	r3, r3, #4
 8008ff8:	440b      	add	r3, r1
 8008ffa:	3354      	adds	r3, #84	@ 0x54
 8008ffc:	f04f 0200 	mov.w	r2, #0
 8009000:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8009002:	79ba      	ldrb	r2, [r7, #6]
 8009004:	496e      	ldr	r1, [pc, #440]	@ (80091c0 <config_motors+0x650>)
 8009006:	4613      	mov	r3, r2
 8009008:	011b      	lsls	r3, r3, #4
 800900a:	1a9b      	subs	r3, r3, r2
 800900c:	011b      	lsls	r3, r3, #4
 800900e:	440b      	add	r3, r1
 8009010:	3330      	adds	r3, #48	@ 0x30
 8009012:	4a6d      	ldr	r2, [pc, #436]	@ (80091c8 <config_motors+0x658>)
 8009014:	601a      	str	r2, [r3, #0]
#endif

#ifdef BL_MOTOR_ID
	motor_id = BL_MOTOR_ID - 1;
 8009016:	2306      	movs	r3, #6
 8009018:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800901a:	79ba      	ldrb	r2, [r7, #6]
 800901c:	4968      	ldr	r1, [pc, #416]	@ (80091c0 <config_motors+0x650>)
 800901e:	4613      	mov	r3, r2
 8009020:	011b      	lsls	r3, r3, #4
 8009022:	1a9b      	subs	r3, r3, r2
 8009024:	011b      	lsls	r3, r3, #4
 8009026:	440b      	add	r3, r1
 8009028:	3302      	adds	r3, #2
 800902a:	2201      	movs	r2, #1
 800902c:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800902e:	79ba      	ldrb	r2, [r7, #6]
 8009030:	4613      	mov	r3, r2
 8009032:	011b      	lsls	r3, r3, #4
 8009034:	1a9b      	subs	r3, r3, r2
 8009036:	011b      	lsls	r3, r3, #4
 8009038:	4a61      	ldr	r2, [pc, #388]	@ (80091c0 <config_motors+0x650>)
 800903a:	4413      	add	r3, r2
 800903c:	4618      	mov	r0, r3
 800903e:	f7ff fc4f 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8009042:	79ba      	ldrb	r2, [r7, #6]
 8009044:	495e      	ldr	r1, [pc, #376]	@ (80091c0 <config_motors+0x650>)
 8009046:	4613      	mov	r3, r2
 8009048:	011b      	lsls	r3, r3, #4
 800904a:	1a9b      	subs	r3, r3, r2
 800904c:	011b      	lsls	r3, r3, #4
 800904e:	440b      	add	r3, r1
 8009050:	339c      	adds	r3, #156	@ 0x9c
 8009052:	2200      	movs	r2, #0
 8009054:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 2.967;//170
 8009056:	79ba      	ldrb	r2, [r7, #6]
 8009058:	4959      	ldr	r1, [pc, #356]	@ (80091c0 <config_motors+0x650>)
 800905a:	4613      	mov	r3, r2
 800905c:	011b      	lsls	r3, r3, #4
 800905e:	1a9b      	subs	r3, r3, r2
 8009060:	011b      	lsls	r3, r3, #4
 8009062:	440b      	add	r3, r1
 8009064:	33b8      	adds	r3, #184	@ 0xb8
 8009066:	4a5b      	ldr	r2, [pc, #364]	@ (80091d4 <config_motors+0x664>)
 8009068:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = PI/2;
 800906a:	79ba      	ldrb	r2, [r7, #6]
 800906c:	4954      	ldr	r1, [pc, #336]	@ (80091c0 <config_motors+0x650>)
 800906e:	4613      	mov	r3, r2
 8009070:	011b      	lsls	r3, r3, #4
 8009072:	1a9b      	subs	r3, r3, r2
 8009074:	011b      	lsls	r3, r3, #4
 8009076:	440b      	add	r3, r1
 8009078:	33b4      	adds	r3, #180	@ 0xb4
 800907a:	4a57      	ldr	r2, [pc, #348]	@ (80091d8 <config_motors+0x668>)
 800907c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800907e:	79ba      	ldrb	r2, [r7, #6]
 8009080:	494f      	ldr	r1, [pc, #316]	@ (80091c0 <config_motors+0x650>)
 8009082:	4613      	mov	r3, r2
 8009084:	011b      	lsls	r3, r3, #4
 8009086:	1a9b      	subs	r3, r3, r2
 8009088:	011b      	lsls	r3, r3, #4
 800908a:	440b      	add	r3, r1
 800908c:	33c4      	adds	r3, #196	@ 0xc4
 800908e:	4a4f      	ldr	r2, [pc, #316]	@ (80091cc <config_motors+0x65c>)
 8009090:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8009092:	79ba      	ldrb	r2, [r7, #6]
 8009094:	494a      	ldr	r1, [pc, #296]	@ (80091c0 <config_motors+0x650>)
 8009096:	4613      	mov	r3, r2
 8009098:	011b      	lsls	r3, r3, #4
 800909a:	1a9b      	subs	r3, r3, r2
 800909c:	011b      	lsls	r3, r3, #4
 800909e:	440b      	add	r3, r1
 80090a0:	33c0      	adds	r3, #192	@ 0xc0
 80090a2:	4a4b      	ldr	r2, [pc, #300]	@ (80091d0 <config_motors+0x660>)
 80090a4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 80090a6:	79ba      	ldrb	r2, [r7, #6]
 80090a8:	4945      	ldr	r1, [pc, #276]	@ (80091c0 <config_motors+0x650>)
 80090aa:	4613      	mov	r3, r2
 80090ac:	011b      	lsls	r3, r3, #4
 80090ae:	1a9b      	subs	r3, r3, r2
 80090b0:	011b      	lsls	r3, r3, #4
 80090b2:	440b      	add	r3, r1
 80090b4:	33d4      	adds	r3, #212	@ 0xd4
 80090b6:	4a43      	ldr	r2, [pc, #268]	@ (80091c4 <config_motors+0x654>)
 80090b8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 80090ba:	79ba      	ldrb	r2, [r7, #6]
 80090bc:	4940      	ldr	r1, [pc, #256]	@ (80091c0 <config_motors+0x650>)
 80090be:	4613      	mov	r3, r2
 80090c0:	011b      	lsls	r3, r3, #4
 80090c2:	1a9b      	subs	r3, r3, r2
 80090c4:	011b      	lsls	r3, r3, #4
 80090c6:	440b      	add	r3, r1
 80090c8:	3368      	adds	r3, #104	@ 0x68
 80090ca:	f04f 0200 	mov.w	r2, #0
 80090ce:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 80090d0:	79ba      	ldrb	r2, [r7, #6]
 80090d2:	493b      	ldr	r1, [pc, #236]	@ (80091c0 <config_motors+0x650>)
 80090d4:	4613      	mov	r3, r2
 80090d6:	011b      	lsls	r3, r3, #4
 80090d8:	1a9b      	subs	r3, r3, r2
 80090da:	011b      	lsls	r3, r3, #4
 80090dc:	440b      	add	r3, r1
 80090de:	336c      	adds	r3, #108	@ 0x6c
 80090e0:	f04f 0200 	mov.w	r2, #0
 80090e4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 80090e6:	79ba      	ldrb	r2, [r7, #6]
 80090e8:	4935      	ldr	r1, [pc, #212]	@ (80091c0 <config_motors+0x650>)
 80090ea:	4613      	mov	r3, r2
 80090ec:	011b      	lsls	r3, r3, #4
 80090ee:	1a9b      	subs	r3, r3, r2
 80090f0:	011b      	lsls	r3, r3, #4
 80090f2:	440b      	add	r3, r1
 80090f4:	3370      	adds	r3, #112	@ 0x70
 80090f6:	f04f 0200 	mov.w	r2, #0
 80090fa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 80090fc:	79ba      	ldrb	r2, [r7, #6]
 80090fe:	4930      	ldr	r1, [pc, #192]	@ (80091c0 <config_motors+0x650>)
 8009100:	4613      	mov	r3, r2
 8009102:	011b      	lsls	r3, r3, #4
 8009104:	1a9b      	subs	r3, r3, r2
 8009106:	011b      	lsls	r3, r3, #4
 8009108:	440b      	add	r3, r1
 800910a:	3380      	adds	r3, #128	@ 0x80
 800910c:	f04f 0200 	mov.w	r2, #0
 8009110:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 8009112:	79ba      	ldrb	r2, [r7, #6]
 8009114:	492a      	ldr	r1, [pc, #168]	@ (80091c0 <config_motors+0x650>)
 8009116:	4613      	mov	r3, r2
 8009118:	011b      	lsls	r3, r3, #4
 800911a:	1a9b      	subs	r3, r3, r2
 800911c:	011b      	lsls	r3, r3, #4
 800911e:	440b      	add	r3, r1
 8009120:	3384      	adds	r3, #132	@ 0x84
 8009122:	f04f 0200 	mov.w	r2, #0
 8009126:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8009128:	79ba      	ldrb	r2, [r7, #6]
 800912a:	4925      	ldr	r1, [pc, #148]	@ (80091c0 <config_motors+0x650>)
 800912c:	4613      	mov	r3, r2
 800912e:	011b      	lsls	r3, r3, #4
 8009130:	1a9b      	subs	r3, r3, r2
 8009132:	011b      	lsls	r3, r3, #4
 8009134:	440b      	add	r3, r1
 8009136:	3338      	adds	r3, #56	@ 0x38
 8009138:	f04f 0200 	mov.w	r2, #0
 800913c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800913e:	79ba      	ldrb	r2, [r7, #6]
 8009140:	491f      	ldr	r1, [pc, #124]	@ (80091c0 <config_motors+0x650>)
 8009142:	4613      	mov	r3, r2
 8009144:	011b      	lsls	r3, r3, #4
 8009146:	1a9b      	subs	r3, r3, r2
 8009148:	011b      	lsls	r3, r3, #4
 800914a:	440b      	add	r3, r1
 800914c:	333c      	adds	r3, #60	@ 0x3c
 800914e:	f04f 0200 	mov.w	r2, #0
 8009152:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8009154:	79ba      	ldrb	r2, [r7, #6]
 8009156:	491a      	ldr	r1, [pc, #104]	@ (80091c0 <config_motors+0x650>)
 8009158:	4613      	mov	r3, r2
 800915a:	011b      	lsls	r3, r3, #4
 800915c:	1a9b      	subs	r3, r3, r2
 800915e:	011b      	lsls	r3, r3, #4
 8009160:	440b      	add	r3, r1
 8009162:	3340      	adds	r3, #64	@ 0x40
 8009164:	f04f 0200 	mov.w	r2, #0
 8009168:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800916a:	79ba      	ldrb	r2, [r7, #6]
 800916c:	4914      	ldr	r1, [pc, #80]	@ (80091c0 <config_motors+0x650>)
 800916e:	4613      	mov	r3, r2
 8009170:	011b      	lsls	r3, r3, #4
 8009172:	1a9b      	subs	r3, r3, r2
 8009174:	011b      	lsls	r3, r3, #4
 8009176:	440b      	add	r3, r1
 8009178:	3350      	adds	r3, #80	@ 0x50
 800917a:	f04f 0200 	mov.w	r2, #0
 800917e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8009180:	79ba      	ldrb	r2, [r7, #6]
 8009182:	490f      	ldr	r1, [pc, #60]	@ (80091c0 <config_motors+0x650>)
 8009184:	4613      	mov	r3, r2
 8009186:	011b      	lsls	r3, r3, #4
 8009188:	1a9b      	subs	r3, r3, r2
 800918a:	011b      	lsls	r3, r3, #4
 800918c:	440b      	add	r3, r1
 800918e:	3354      	adds	r3, #84	@ 0x54
 8009190:	f04f 0200 	mov.w	r2, #0
 8009194:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8009196:	79ba      	ldrb	r2, [r7, #6]
 8009198:	4909      	ldr	r1, [pc, #36]	@ (80091c0 <config_motors+0x650>)
 800919a:	4613      	mov	r3, r2
 800919c:	011b      	lsls	r3, r3, #4
 800919e:	1a9b      	subs	r3, r3, r2
 80091a0:	011b      	lsls	r3, r3, #4
 80091a2:	440b      	add	r3, r1
 80091a4:	3330      	adds	r3, #48	@ 0x30
 80091a6:	4a08      	ldr	r2, [pc, #32]	@ (80091c8 <config_motors+0x658>)
 80091a8:	601a      	str	r2, [r3, #0]
#endif

#ifdef BR_MOTOR_ID

	motor_id = BR_MOTOR_ID - 1;
 80091aa:	2307      	movs	r3, #7
 80091ac:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 80091ae:	79ba      	ldrb	r2, [r7, #6]
 80091b0:	4903      	ldr	r1, [pc, #12]	@ (80091c0 <config_motors+0x650>)
 80091b2:	4613      	mov	r3, r2
 80091b4:	011b      	lsls	r3, r3, #4
 80091b6:	1a9b      	subs	r3, r3, r2
 80091b8:	011b      	lsls	r3, r3, #4
 80091ba:	440b      	add	r3, r1
 80091bc:	3302      	adds	r3, #2
 80091be:	e00d      	b.n	80091dc <config_motors+0x66c>
 80091c0:	20001e48 	.word	0x20001e48
 80091c4:	43eec2d1 	.word	0x43eec2d1
 80091c8:	447a0000 	.word	0x447a0000
 80091cc:	40c90fdb 	.word	0x40c90fdb
 80091d0:	c0c90fdb 	.word	0xc0c90fdb
 80091d4:	403de354 	.word	0x403de354
 80091d8:	3fc90fdb 	.word	0x3fc90fdb
 80091dc:	2201      	movs	r2, #1
 80091de:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 80091e0:	79ba      	ldrb	r2, [r7, #6]
 80091e2:	4613      	mov	r3, r2
 80091e4:	011b      	lsls	r3, r3, #4
 80091e6:	1a9b      	subs	r3, r3, r2
 80091e8:	011b      	lsls	r3, r3, #4
 80091ea:	4ac2      	ldr	r2, [pc, #776]	@ (80094f4 <config_motors+0x984>)
 80091ec:	4413      	add	r3, r2
 80091ee:	4618      	mov	r0, r3
 80091f0:	f7ff fb76 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 80091f4:	79ba      	ldrb	r2, [r7, #6]
 80091f6:	49bf      	ldr	r1, [pc, #764]	@ (80094f4 <config_motors+0x984>)
 80091f8:	4613      	mov	r3, r2
 80091fa:	011b      	lsls	r3, r3, #4
 80091fc:	1a9b      	subs	r3, r3, r2
 80091fe:	011b      	lsls	r3, r3, #4
 8009200:	440b      	add	r3, r1
 8009202:	339c      	adds	r3, #156	@ 0x9c
 8009204:	2200      	movs	r2, #0
 8009206:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 1.396;//80deg
 8009208:	79ba      	ldrb	r2, [r7, #6]
 800920a:	49ba      	ldr	r1, [pc, #744]	@ (80094f4 <config_motors+0x984>)
 800920c:	4613      	mov	r3, r2
 800920e:	011b      	lsls	r3, r3, #4
 8009210:	1a9b      	subs	r3, r3, r2
 8009212:	011b      	lsls	r3, r3, #4
 8009214:	440b      	add	r3, r1
 8009216:	33b8      	adds	r3, #184	@ 0xb8
 8009218:	4ab7      	ldr	r2, [pc, #732]	@ (80094f8 <config_motors+0x988>)
 800921a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = 0;
 800921c:	79ba      	ldrb	r2, [r7, #6]
 800921e:	49b5      	ldr	r1, [pc, #724]	@ (80094f4 <config_motors+0x984>)
 8009220:	4613      	mov	r3, r2
 8009222:	011b      	lsls	r3, r3, #4
 8009224:	1a9b      	subs	r3, r3, r2
 8009226:	011b      	lsls	r3, r3, #4
 8009228:	440b      	add	r3, r1
 800922a:	33b4      	adds	r3, #180	@ 0xb4
 800922c:	f04f 0200 	mov.w	r2, #0
 8009230:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8009232:	79ba      	ldrb	r2, [r7, #6]
 8009234:	49af      	ldr	r1, [pc, #700]	@ (80094f4 <config_motors+0x984>)
 8009236:	4613      	mov	r3, r2
 8009238:	011b      	lsls	r3, r3, #4
 800923a:	1a9b      	subs	r3, r3, r2
 800923c:	011b      	lsls	r3, r3, #4
 800923e:	440b      	add	r3, r1
 8009240:	33c4      	adds	r3, #196	@ 0xc4
 8009242:	4aae      	ldr	r2, [pc, #696]	@ (80094fc <config_motors+0x98c>)
 8009244:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8009246:	79ba      	ldrb	r2, [r7, #6]
 8009248:	49aa      	ldr	r1, [pc, #680]	@ (80094f4 <config_motors+0x984>)
 800924a:	4613      	mov	r3, r2
 800924c:	011b      	lsls	r3, r3, #4
 800924e:	1a9b      	subs	r3, r3, r2
 8009250:	011b      	lsls	r3, r3, #4
 8009252:	440b      	add	r3, r1
 8009254:	33c0      	adds	r3, #192	@ 0xc0
 8009256:	4aaa      	ldr	r2, [pc, #680]	@ (8009500 <config_motors+0x990>)
 8009258:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800925a:	79ba      	ldrb	r2, [r7, #6]
 800925c:	49a5      	ldr	r1, [pc, #660]	@ (80094f4 <config_motors+0x984>)
 800925e:	4613      	mov	r3, r2
 8009260:	011b      	lsls	r3, r3, #4
 8009262:	1a9b      	subs	r3, r3, r2
 8009264:	011b      	lsls	r3, r3, #4
 8009266:	440b      	add	r3, r1
 8009268:	33d4      	adds	r3, #212	@ 0xd4
 800926a:	4aa6      	ldr	r2, [pc, #664]	@ (8009504 <config_motors+0x994>)
 800926c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 800926e:	79ba      	ldrb	r2, [r7, #6]
 8009270:	49a0      	ldr	r1, [pc, #640]	@ (80094f4 <config_motors+0x984>)
 8009272:	4613      	mov	r3, r2
 8009274:	011b      	lsls	r3, r3, #4
 8009276:	1a9b      	subs	r3, r3, r2
 8009278:	011b      	lsls	r3, r3, #4
 800927a:	440b      	add	r3, r1
 800927c:	3368      	adds	r3, #104	@ 0x68
 800927e:	f04f 0200 	mov.w	r2, #0
 8009282:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 8009284:	79ba      	ldrb	r2, [r7, #6]
 8009286:	499b      	ldr	r1, [pc, #620]	@ (80094f4 <config_motors+0x984>)
 8009288:	4613      	mov	r3, r2
 800928a:	011b      	lsls	r3, r3, #4
 800928c:	1a9b      	subs	r3, r3, r2
 800928e:	011b      	lsls	r3, r3, #4
 8009290:	440b      	add	r3, r1
 8009292:	336c      	adds	r3, #108	@ 0x6c
 8009294:	f04f 0200 	mov.w	r2, #0
 8009298:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 800929a:	79ba      	ldrb	r2, [r7, #6]
 800929c:	4995      	ldr	r1, [pc, #596]	@ (80094f4 <config_motors+0x984>)
 800929e:	4613      	mov	r3, r2
 80092a0:	011b      	lsls	r3, r3, #4
 80092a2:	1a9b      	subs	r3, r3, r2
 80092a4:	011b      	lsls	r3, r3, #4
 80092a6:	440b      	add	r3, r1
 80092a8:	3370      	adds	r3, #112	@ 0x70
 80092aa:	f04f 0200 	mov.w	r2, #0
 80092ae:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 80092b0:	79ba      	ldrb	r2, [r7, #6]
 80092b2:	4990      	ldr	r1, [pc, #576]	@ (80094f4 <config_motors+0x984>)
 80092b4:	4613      	mov	r3, r2
 80092b6:	011b      	lsls	r3, r3, #4
 80092b8:	1a9b      	subs	r3, r3, r2
 80092ba:	011b      	lsls	r3, r3, #4
 80092bc:	440b      	add	r3, r1
 80092be:	3380      	adds	r3, #128	@ 0x80
 80092c0:	f04f 0200 	mov.w	r2, #0
 80092c4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 80092c6:	79ba      	ldrb	r2, [r7, #6]
 80092c8:	498a      	ldr	r1, [pc, #552]	@ (80094f4 <config_motors+0x984>)
 80092ca:	4613      	mov	r3, r2
 80092cc:	011b      	lsls	r3, r3, #4
 80092ce:	1a9b      	subs	r3, r3, r2
 80092d0:	011b      	lsls	r3, r3, #4
 80092d2:	440b      	add	r3, r1
 80092d4:	3384      	adds	r3, #132	@ 0x84
 80092d6:	f04f 0200 	mov.w	r2, #0
 80092da:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 80092dc:	79ba      	ldrb	r2, [r7, #6]
 80092de:	4985      	ldr	r1, [pc, #532]	@ (80094f4 <config_motors+0x984>)
 80092e0:	4613      	mov	r3, r2
 80092e2:	011b      	lsls	r3, r3, #4
 80092e4:	1a9b      	subs	r3, r3, r2
 80092e6:	011b      	lsls	r3, r3, #4
 80092e8:	440b      	add	r3, r1
 80092ea:	3338      	adds	r3, #56	@ 0x38
 80092ec:	f04f 0200 	mov.w	r2, #0
 80092f0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 80092f2:	79ba      	ldrb	r2, [r7, #6]
 80092f4:	497f      	ldr	r1, [pc, #508]	@ (80094f4 <config_motors+0x984>)
 80092f6:	4613      	mov	r3, r2
 80092f8:	011b      	lsls	r3, r3, #4
 80092fa:	1a9b      	subs	r3, r3, r2
 80092fc:	011b      	lsls	r3, r3, #4
 80092fe:	440b      	add	r3, r1
 8009300:	333c      	adds	r3, #60	@ 0x3c
 8009302:	f04f 0200 	mov.w	r2, #0
 8009306:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8009308:	79ba      	ldrb	r2, [r7, #6]
 800930a:	497a      	ldr	r1, [pc, #488]	@ (80094f4 <config_motors+0x984>)
 800930c:	4613      	mov	r3, r2
 800930e:	011b      	lsls	r3, r3, #4
 8009310:	1a9b      	subs	r3, r3, r2
 8009312:	011b      	lsls	r3, r3, #4
 8009314:	440b      	add	r3, r1
 8009316:	3340      	adds	r3, #64	@ 0x40
 8009318:	f04f 0200 	mov.w	r2, #0
 800931c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800931e:	79ba      	ldrb	r2, [r7, #6]
 8009320:	4974      	ldr	r1, [pc, #464]	@ (80094f4 <config_motors+0x984>)
 8009322:	4613      	mov	r3, r2
 8009324:	011b      	lsls	r3, r3, #4
 8009326:	1a9b      	subs	r3, r3, r2
 8009328:	011b      	lsls	r3, r3, #4
 800932a:	440b      	add	r3, r1
 800932c:	3350      	adds	r3, #80	@ 0x50
 800932e:	f04f 0200 	mov.w	r2, #0
 8009332:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8009334:	79ba      	ldrb	r2, [r7, #6]
 8009336:	496f      	ldr	r1, [pc, #444]	@ (80094f4 <config_motors+0x984>)
 8009338:	4613      	mov	r3, r2
 800933a:	011b      	lsls	r3, r3, #4
 800933c:	1a9b      	subs	r3, r3, r2
 800933e:	011b      	lsls	r3, r3, #4
 8009340:	440b      	add	r3, r1
 8009342:	3354      	adds	r3, #84	@ 0x54
 8009344:	f04f 0200 	mov.w	r2, #0
 8009348:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 800934a:	79ba      	ldrb	r2, [r7, #6]
 800934c:	4969      	ldr	r1, [pc, #420]	@ (80094f4 <config_motors+0x984>)
 800934e:	4613      	mov	r3, r2
 8009350:	011b      	lsls	r3, r3, #4
 8009352:	1a9b      	subs	r3, r3, r2
 8009354:	011b      	lsls	r3, r3, #4
 8009356:	440b      	add	r3, r1
 8009358:	3330      	adds	r3, #48	@ 0x30
 800935a:	4a6b      	ldr	r2, [pc, #428]	@ (8009508 <config_motors+0x998>)
 800935c:	601a      	str	r2, [r3, #0]
#endif

#ifdef LFRICTION_MOTOR_ID
	motor_id = LFRICTION_MOTOR_ID - 1;
 800935e:	230f      	movs	r3, #15
 8009360:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 8009362:	79ba      	ldrb	r2, [r7, #6]
 8009364:	4963      	ldr	r1, [pc, #396]	@ (80094f4 <config_motors+0x984>)
 8009366:	4613      	mov	r3, r2
 8009368:	011b      	lsls	r3, r3, #4
 800936a:	1a9b      	subs	r3, r3, r2
 800936c:	011b      	lsls	r3, r3, #4
 800936e:	440b      	add	r3, r1
 8009370:	3302      	adds	r3, #2
 8009372:	2204      	movs	r2, #4
 8009374:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8009376:	79ba      	ldrb	r2, [r7, #6]
 8009378:	4613      	mov	r3, r2
 800937a:	011b      	lsls	r3, r3, #4
 800937c:	1a9b      	subs	r3, r3, r2
 800937e:	011b      	lsls	r3, r3, #4
 8009380:	4a5c      	ldr	r2, [pc, #368]	@ (80094f4 <config_motors+0x984>)
 8009382:	4413      	add	r3, r2
 8009384:	4618      	mov	r0, r3
 8009386:	f7ff faab 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800938a:	79ba      	ldrb	r2, [r7, #6]
 800938c:	4959      	ldr	r1, [pc, #356]	@ (80094f4 <config_motors+0x984>)
 800938e:	4613      	mov	r3, r2
 8009390:	011b      	lsls	r3, r3, #4
 8009392:	1a9b      	subs	r3, r3, r2
 8009394:	011b      	lsls	r3, r3, #4
 8009396:	440b      	add	r3, r1
 8009398:	33c8      	adds	r3, #200	@ 0xc8
 800939a:	4a5c      	ldr	r2, [pc, #368]	@ (800950c <config_motors+0x99c>)
 800939c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800939e:	79ba      	ldrb	r2, [r7, #6]
 80093a0:	4954      	ldr	r1, [pc, #336]	@ (80094f4 <config_motors+0x984>)
 80093a2:	4613      	mov	r3, r2
 80093a4:	011b      	lsls	r3, r3, #4
 80093a6:	1a9b      	subs	r3, r3, r2
 80093a8:	011b      	lsls	r3, r3, #4
 80093aa:	440b      	add	r3, r1
 80093ac:	338c      	adds	r3, #140	@ 0x8c
 80093ae:	4a58      	ldr	r2, [pc, #352]	@ (8009510 <config_motors+0x9a0>)
 80093b0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 80093b2:	79ba      	ldrb	r2, [r7, #6]
 80093b4:	494f      	ldr	r1, [pc, #316]	@ (80094f4 <config_motors+0x984>)
 80093b6:	4613      	mov	r3, r2
 80093b8:	011b      	lsls	r3, r3, #4
 80093ba:	1a9b      	subs	r3, r3, r2
 80093bc:	011b      	lsls	r3, r3, #4
 80093be:	440b      	add	r3, r1
 80093c0:	3338      	adds	r3, #56	@ 0x38
 80093c2:	4a54      	ldr	r2, [pc, #336]	@ (8009514 <config_motors+0x9a4>)
 80093c4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 80093c6:	79ba      	ldrb	r2, [r7, #6]
 80093c8:	494a      	ldr	r1, [pc, #296]	@ (80094f4 <config_motors+0x984>)
 80093ca:	4613      	mov	r3, r2
 80093cc:	011b      	lsls	r3, r3, #4
 80093ce:	1a9b      	subs	r3, r3, r2
 80093d0:	011b      	lsls	r3, r3, #4
 80093d2:	440b      	add	r3, r1
 80093d4:	333c      	adds	r3, #60	@ 0x3c
 80093d6:	4a50      	ldr	r2, [pc, #320]	@ (8009518 <config_motors+0x9a8>)
 80093d8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 80093da:	79ba      	ldrb	r2, [r7, #6]
 80093dc:	4945      	ldr	r1, [pc, #276]	@ (80094f4 <config_motors+0x984>)
 80093de:	4613      	mov	r3, r2
 80093e0:	011b      	lsls	r3, r3, #4
 80093e2:	1a9b      	subs	r3, r3, r2
 80093e4:	011b      	lsls	r3, r3, #4
 80093e6:	440b      	add	r3, r1
 80093e8:	3340      	adds	r3, #64	@ 0x40
 80093ea:	f04f 0200 	mov.w	r2, #0
 80093ee:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 80093f0:	79ba      	ldrb	r2, [r7, #6]
 80093f2:	4940      	ldr	r1, [pc, #256]	@ (80094f4 <config_motors+0x984>)
 80093f4:	4613      	mov	r3, r2
 80093f6:	011b      	lsls	r3, r3, #4
 80093f8:	1a9b      	subs	r3, r3, r2
 80093fa:	011b      	lsls	r3, r3, #4
 80093fc:	440b      	add	r3, r1
 80093fe:	3350      	adds	r3, #80	@ 0x50
 8009400:	4a46      	ldr	r2, [pc, #280]	@ (800951c <config_motors+0x9ac>)
 8009402:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 8009404:	79ba      	ldrb	r2, [r7, #6]
 8009406:	493b      	ldr	r1, [pc, #236]	@ (80094f4 <config_motors+0x984>)
 8009408:	4613      	mov	r3, r2
 800940a:	011b      	lsls	r3, r3, #4
 800940c:	1a9b      	subs	r3, r3, r2
 800940e:	011b      	lsls	r3, r3, #4
 8009410:	440b      	add	r3, r1
 8009412:	3354      	adds	r3, #84	@ 0x54
 8009414:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8009418:	601a      	str	r2, [r3, #0]
#endif

#ifdef RFRICTION_MOTOR_ID
	motor_id = RFRICTION_MOTOR_ID - 1;
 800941a:	230e      	movs	r3, #14
 800941c:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800941e:	79ba      	ldrb	r2, [r7, #6]
 8009420:	4934      	ldr	r1, [pc, #208]	@ (80094f4 <config_motors+0x984>)
 8009422:	4613      	mov	r3, r2
 8009424:	011b      	lsls	r3, r3, #4
 8009426:	1a9b      	subs	r3, r3, r2
 8009428:	011b      	lsls	r3, r3, #4
 800942a:	440b      	add	r3, r1
 800942c:	3302      	adds	r3, #2
 800942e:	2204      	movs	r2, #4
 8009430:	701a      	strb	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 8009432:	79ba      	ldrb	r2, [r7, #6]
 8009434:	492f      	ldr	r1, [pc, #188]	@ (80094f4 <config_motors+0x984>)
 8009436:	4613      	mov	r3, r2
 8009438:	011b      	lsls	r3, r3, #4
 800943a:	1a9b      	subs	r3, r3, r2
 800943c:	011b      	lsls	r3, r3, #4
 800943e:	440b      	add	r3, r1
 8009440:	338c      	adds	r3, #140	@ 0x8c
 8009442:	4a33      	ldr	r2, [pc, #204]	@ (8009510 <config_motors+0x9a0>)
 8009444:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 8009446:	79ba      	ldrb	r2, [r7, #6]
 8009448:	492a      	ldr	r1, [pc, #168]	@ (80094f4 <config_motors+0x984>)
 800944a:	4613      	mov	r3, r2
 800944c:	011b      	lsls	r3, r3, #4
 800944e:	1a9b      	subs	r3, r3, r2
 8009450:	011b      	lsls	r3, r3, #4
 8009452:	440b      	add	r3, r1
 8009454:	3338      	adds	r3, #56	@ 0x38
 8009456:	4a2f      	ldr	r2, [pc, #188]	@ (8009514 <config_motors+0x9a4>)
 8009458:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800945a:	79ba      	ldrb	r2, [r7, #6]
 800945c:	4925      	ldr	r1, [pc, #148]	@ (80094f4 <config_motors+0x984>)
 800945e:	4613      	mov	r3, r2
 8009460:	011b      	lsls	r3, r3, #4
 8009462:	1a9b      	subs	r3, r3, r2
 8009464:	011b      	lsls	r3, r3, #4
 8009466:	440b      	add	r3, r1
 8009468:	333c      	adds	r3, #60	@ 0x3c
 800946a:	4a2b      	ldr	r2, [pc, #172]	@ (8009518 <config_motors+0x9a8>)
 800946c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800946e:	79ba      	ldrb	r2, [r7, #6]
 8009470:	4920      	ldr	r1, [pc, #128]	@ (80094f4 <config_motors+0x984>)
 8009472:	4613      	mov	r3, r2
 8009474:	011b      	lsls	r3, r3, #4
 8009476:	1a9b      	subs	r3, r3, r2
 8009478:	011b      	lsls	r3, r3, #4
 800947a:	440b      	add	r3, r1
 800947c:	3340      	adds	r3, #64	@ 0x40
 800947e:	f04f 0200 	mov.w	r2, #0
 8009482:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 8009484:	79ba      	ldrb	r2, [r7, #6]
 8009486:	491b      	ldr	r1, [pc, #108]	@ (80094f4 <config_motors+0x984>)
 8009488:	4613      	mov	r3, r2
 800948a:	011b      	lsls	r3, r3, #4
 800948c:	1a9b      	subs	r3, r3, r2
 800948e:	011b      	lsls	r3, r3, #4
 8009490:	440b      	add	r3, r1
 8009492:	3350      	adds	r3, #80	@ 0x50
 8009494:	4a21      	ldr	r2, [pc, #132]	@ (800951c <config_motors+0x9ac>)
 8009496:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 8009498:	79ba      	ldrb	r2, [r7, #6]
 800949a:	4916      	ldr	r1, [pc, #88]	@ (80094f4 <config_motors+0x984>)
 800949c:	4613      	mov	r3, r2
 800949e:	011b      	lsls	r3, r3, #4
 80094a0:	1a9b      	subs	r3, r3, r2
 80094a2:	011b      	lsls	r3, r3, #4
 80094a4:	440b      	add	r3, r1
 80094a6:	3354      	adds	r3, #84	@ 0x54
 80094a8:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80094ac:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.physical_max = M3508_MAX_OUTPUT;
 80094ae:	79ba      	ldrb	r2, [r7, #6]
 80094b0:	4910      	ldr	r1, [pc, #64]	@ (80094f4 <config_motors+0x984>)
 80094b2:	4613      	mov	r3, r2
 80094b4:	011b      	lsls	r3, r3, #4
 80094b6:	1a9b      	subs	r3, r3, r2
 80094b8:	011b      	lsls	r3, r3, #4
 80094ba:	440b      	add	r3, r1
 80094bc:	335c      	adds	r3, #92	@ 0x5c
 80094be:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80094c2:	601a      	str	r2, [r3, #0]
#endif

#ifdef FEEDER_MOTOR_ID
	motor_id = FEEDER_MOTOR_ID - 1;
 80094c4:	2310      	movs	r3, #16
 80094c6:	71bb      	strb	r3, [r7, #6]
#ifdef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M3508_ANGLE;
#endif
#ifndef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M2006;
 80094c8:	79ba      	ldrb	r2, [r7, #6]
 80094ca:	490a      	ldr	r1, [pc, #40]	@ (80094f4 <config_motors+0x984>)
 80094cc:	4613      	mov	r3, r2
 80094ce:	011b      	lsls	r3, r3, #4
 80094d0:	1a9b      	subs	r3, r3, r2
 80094d2:	011b      	lsls	r3, r3, #4
 80094d4:	440b      	add	r3, r1
 80094d6:	3302      	adds	r3, #2
 80094d8:	2202      	movs	r2, #2
 80094da:	701a      	strb	r2, [r3, #0]
#endif
	set_motor_config(&g_can_motors[motor_id]);
 80094dc:	79ba      	ldrb	r2, [r7, #6]
 80094de:	4613      	mov	r3, r2
 80094e0:	011b      	lsls	r3, r3, #4
 80094e2:	1a9b      	subs	r3, r3, r2
 80094e4:	011b      	lsls	r3, r3, #4
 80094e6:	4a03      	ldr	r2, [pc, #12]	@ (80094f4 <config_motors+0x984>)
 80094e8:	4413      	add	r3, r2
 80094ea:	4618      	mov	r0, r3
 80094ec:	f7ff f9f8 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.phy_max_ang = PI;
 80094f0:	79ba      	ldrb	r2, [r7, #6]
 80094f2:	e015      	b.n	8009520 <config_motors+0x9b0>
 80094f4:	20001e48 	.word	0x20001e48
 80094f8:	3fb2b021 	.word	0x3fb2b021
 80094fc:	40c90fdb 	.word	0x40c90fdb
 8009500:	c0c90fdb 	.word	0xc0c90fdb
 8009504:	43eec2d1 	.word	0x43eec2d1
 8009508:	447a0000 	.word	0x447a0000
 800950c:	4199999a 	.word	0x4199999a
 8009510:	460fc000 	.word	0x460fc000
 8009514:	40a00000 	.word	0x40a00000
 8009518:	3b03126f 	.word	0x3b03126f
 800951c:	461c4000 	.word	0x461c4000
 8009520:	49c0      	ldr	r1, [pc, #768]	@ (8009824 <config_motors+0xcb4>)
 8009522:	4613      	mov	r3, r2
 8009524:	011b      	lsls	r3, r3, #4
 8009526:	1a9b      	subs	r3, r3, r2
 8009528:	011b      	lsls	r3, r3, #4
 800952a:	440b      	add	r3, r1
 800952c:	33c4      	adds	r3, #196	@ 0xc4
 800952e:	4abe      	ldr	r2, [pc, #760]	@ (8009828 <config_motors+0xcb8>)
 8009530:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -PI;
 8009532:	79ba      	ldrb	r2, [r7, #6]
 8009534:	49bb      	ldr	r1, [pc, #748]	@ (8009824 <config_motors+0xcb4>)
 8009536:	4613      	mov	r3, r2
 8009538:	011b      	lsls	r3, r3, #4
 800953a:	1a9b      	subs	r3, r3, r2
 800953c:	011b      	lsls	r3, r3, #4
 800953e:	440b      	add	r3, r1
 8009540:	33c0      	adds	r3, #192	@ 0xc0
 8009542:	4aba      	ldr	r2, [pc, #744]	@ (800982c <config_motors+0xcbc>)
 8009544:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 8009546:	79ba      	ldrb	r2, [r7, #6]
 8009548:	49b6      	ldr	r1, [pc, #728]	@ (8009824 <config_motors+0xcb4>)
 800954a:	4613      	mov	r3, r2
 800954c:	011b      	lsls	r3, r3, #4
 800954e:	1a9b      	subs	r3, r3, r2
 8009550:	011b      	lsls	r3, r3, #4
 8009552:	440b      	add	r3, r1
 8009554:	33d4      	adds	r3, #212	@ 0xd4
 8009556:	f04f 0200 	mov.w	r2, #0
 800955a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = FEEDER_ANGLE_KP;
 800955c:	79ba      	ldrb	r2, [r7, #6]
 800955e:	49b1      	ldr	r1, [pc, #708]	@ (8009824 <config_motors+0xcb4>)
 8009560:	4613      	mov	r3, r2
 8009562:	011b      	lsls	r3, r3, #4
 8009564:	1a9b      	subs	r3, r3, r2
 8009566:	011b      	lsls	r3, r3, #4
 8009568:	440b      	add	r3, r1
 800956a:	3368      	adds	r3, #104	@ 0x68
 800956c:	4ab0      	ldr	r2, [pc, #704]	@ (8009830 <config_motors+0xcc0>)
 800956e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = FEEDER_ANGLE_KI;
 8009570:	79ba      	ldrb	r2, [r7, #6]
 8009572:	49ac      	ldr	r1, [pc, #688]	@ (8009824 <config_motors+0xcb4>)
 8009574:	4613      	mov	r3, r2
 8009576:	011b      	lsls	r3, r3, #4
 8009578:	1a9b      	subs	r3, r3, r2
 800957a:	011b      	lsls	r3, r3, #4
 800957c:	440b      	add	r3, r1
 800957e:	336c      	adds	r3, #108	@ 0x6c
 8009580:	f04f 0200 	mov.w	r2, #0
 8009584:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = FEEDER_ANGLE_KD;
 8009586:	79ba      	ldrb	r2, [r7, #6]
 8009588:	49a6      	ldr	r1, [pc, #664]	@ (8009824 <config_motors+0xcb4>)
 800958a:	4613      	mov	r3, r2
 800958c:	011b      	lsls	r3, r3, #4
 800958e:	1a9b      	subs	r3, r3, r2
 8009590:	011b      	lsls	r3, r3, #4
 8009592:	440b      	add	r3, r1
 8009594:	3370      	adds	r3, #112	@ 0x70
 8009596:	f04f 0200 	mov.w	r2, #0
 800959a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = FEEDER_ANGLE_INT_MAX;
 800959c:	79ba      	ldrb	r2, [r7, #6]
 800959e:	49a1      	ldr	r1, [pc, #644]	@ (8009824 <config_motors+0xcb4>)
 80095a0:	4613      	mov	r3, r2
 80095a2:	011b      	lsls	r3, r3, #4
 80095a4:	1a9b      	subs	r3, r3, r2
 80095a6:	011b      	lsls	r3, r3, #4
 80095a8:	440b      	add	r3, r1
 80095aa:	3380      	adds	r3, #128	@ 0x80
 80095ac:	f04f 0200 	mov.w	r2, #0
 80095b0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = FEEDER_MAX_RPM;
 80095b2:	79ba      	ldrb	r2, [r7, #6]
 80095b4:	499b      	ldr	r1, [pc, #620]	@ (8009824 <config_motors+0xcb4>)
 80095b6:	4613      	mov	r3, r2
 80095b8:	011b      	lsls	r3, r3, #4
 80095ba:	1a9b      	subs	r3, r3, r2
 80095bc:	011b      	lsls	r3, r3, #4
 80095be:	440b      	add	r3, r1
 80095c0:	3384      	adds	r3, #132	@ 0x84
 80095c2:	4a9c      	ldr	r2, [pc, #624]	@ (8009834 <config_motors+0xcc4>)
 80095c4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FEEDER_KP;
 80095c6:	79ba      	ldrb	r2, [r7, #6]
 80095c8:	4996      	ldr	r1, [pc, #600]	@ (8009824 <config_motors+0xcb4>)
 80095ca:	4613      	mov	r3, r2
 80095cc:	011b      	lsls	r3, r3, #4
 80095ce:	1a9b      	subs	r3, r3, r2
 80095d0:	011b      	lsls	r3, r3, #4
 80095d2:	440b      	add	r3, r1
 80095d4:	3338      	adds	r3, #56	@ 0x38
 80095d6:	4a98      	ldr	r2, [pc, #608]	@ (8009838 <config_motors+0xcc8>)
 80095d8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FEEDER_KI;
 80095da:	79ba      	ldrb	r2, [r7, #6]
 80095dc:	4991      	ldr	r1, [pc, #580]	@ (8009824 <config_motors+0xcb4>)
 80095de:	4613      	mov	r3, r2
 80095e0:	011b      	lsls	r3, r3, #4
 80095e2:	1a9b      	subs	r3, r3, r2
 80095e4:	011b      	lsls	r3, r3, #4
 80095e6:	440b      	add	r3, r1
 80095e8:	333c      	adds	r3, #60	@ 0x3c
 80095ea:	4a94      	ldr	r2, [pc, #592]	@ (800983c <config_motors+0xccc>)
 80095ec:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FEEDER_KD;
 80095ee:	79ba      	ldrb	r2, [r7, #6]
 80095f0:	498c      	ldr	r1, [pc, #560]	@ (8009824 <config_motors+0xcb4>)
 80095f2:	4613      	mov	r3, r2
 80095f4:	011b      	lsls	r3, r3, #4
 80095f6:	1a9b      	subs	r3, r3, r2
 80095f8:	011b      	lsls	r3, r3, #4
 80095fa:	440b      	add	r3, r1
 80095fc:	3340      	adds	r3, #64	@ 0x40
 80095fe:	4a90      	ldr	r2, [pc, #576]	@ (8009840 <config_motors+0xcd0>)
 8009600:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FEEDER_MAX_INT;
 8009602:	79ba      	ldrb	r2, [r7, #6]
 8009604:	4987      	ldr	r1, [pc, #540]	@ (8009824 <config_motors+0xcb4>)
 8009606:	4613      	mov	r3, r2
 8009608:	011b      	lsls	r3, r3, #4
 800960a:	1a9b      	subs	r3, r3, r2
 800960c:	011b      	lsls	r3, r3, #4
 800960e:	440b      	add	r3, r1
 8009610:	3350      	adds	r3, #80	@ 0x50
 8009612:	4a8c      	ldr	r2, [pc, #560]	@ (8009844 <config_motors+0xcd4>)
 8009614:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FEEDER_MAX_CURRENT;
 8009616:	79ba      	ldrb	r2, [r7, #6]
 8009618:	4982      	ldr	r1, [pc, #520]	@ (8009824 <config_motors+0xcb4>)
 800961a:	4613      	mov	r3, r2
 800961c:	011b      	lsls	r3, r3, #4
 800961e:	1a9b      	subs	r3, r3, r2
 8009620:	011b      	lsls	r3, r3, #4
 8009622:	440b      	add	r3, r1
 8009624:	3354      	adds	r3, #84	@ 0x54
 8009626:	4a87      	ldr	r2, [pc, #540]	@ (8009844 <config_motors+0xcd4>)
 8009628:	601a      	str	r2, [r3, #0]
#endif

#ifdef PITCH_MOTOR_ID
	motor_id = PITCH_MOTOR_ID - 1;
 800962a:	2311      	movs	r3, #17
 800962c:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800962e:	79ba      	ldrb	r2, [r7, #6]
 8009630:	497c      	ldr	r1, [pc, #496]	@ (8009824 <config_motors+0xcb4>)
 8009632:	4613      	mov	r3, r2
 8009634:	011b      	lsls	r3, r3, #4
 8009636:	1a9b      	subs	r3, r3, r2
 8009638:	011b      	lsls	r3, r3, #4
 800963a:	440b      	add	r3, r1
 800963c:	3302      	adds	r3, #2
 800963e:	2201      	movs	r2, #1
 8009640:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8009642:	79ba      	ldrb	r2, [r7, #6]
 8009644:	4613      	mov	r3, r2
 8009646:	011b      	lsls	r3, r3, #4
 8009648:	1a9b      	subs	r3, r3, r2
 800964a:	011b      	lsls	r3, r3, #4
 800964c:	4a75      	ldr	r2, [pc, #468]	@ (8009824 <config_motors+0xcb4>)
 800964e:	4413      	add	r3, r2
 8009650:	4618      	mov	r0, r3
 8009652:	f7ff f945 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = PITCH_CENTER;
 8009656:	79ba      	ldrb	r2, [r7, #6]
 8009658:	4972      	ldr	r1, [pc, #456]	@ (8009824 <config_motors+0xcb4>)
 800965a:	4613      	mov	r3, r2
 800965c:	011b      	lsls	r3, r3, #4
 800965e:	1a9b      	subs	r3, r3, r2
 8009660:	011b      	lsls	r3, r3, #4
 8009662:	440b      	add	r3, r1
 8009664:	339c      	adds	r3, #156	@ 0x9c
 8009666:	f44f 628c 	mov.w	r2, #1120	@ 0x460
 800966a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = PITCH_MAX_ANG;
 800966c:	79ba      	ldrb	r2, [r7, #6]
 800966e:	496d      	ldr	r1, [pc, #436]	@ (8009824 <config_motors+0xcb4>)
 8009670:	4613      	mov	r3, r2
 8009672:	011b      	lsls	r3, r3, #4
 8009674:	1a9b      	subs	r3, r3, r2
 8009676:	011b      	lsls	r3, r3, #4
 8009678:	440b      	add	r3, r1
 800967a:	33c4      	adds	r3, #196	@ 0xc4
 800967c:	4a72      	ldr	r2, [pc, #456]	@ (8009848 <config_motors+0xcd8>)
 800967e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = PITCH_MIN_ANG;
 8009680:	79ba      	ldrb	r2, [r7, #6]
 8009682:	4968      	ldr	r1, [pc, #416]	@ (8009824 <config_motors+0xcb4>)
 8009684:	4613      	mov	r3, r2
 8009686:	011b      	lsls	r3, r3, #4
 8009688:	1a9b      	subs	r3, r3, r2
 800968a:	011b      	lsls	r3, r3, #4
 800968c:	440b      	add	r3, r1
 800968e:	33c0      	adds	r3, #192	@ 0xc0
 8009690:	4a6e      	ldr	r2, [pc, #440]	@ (800984c <config_motors+0xcdc>)
 8009692:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 8009694:	79ba      	ldrb	r2, [r7, #6]
 8009696:	4963      	ldr	r1, [pc, #396]	@ (8009824 <config_motors+0xcb4>)
 8009698:	4613      	mov	r3, r2
 800969a:	011b      	lsls	r3, r3, #4
 800969c:	1a9b      	subs	r3, r3, r2
 800969e:	011b      	lsls	r3, r3, #4
 80096a0:	440b      	add	r3, r1
 80096a2:	33d4      	adds	r3, #212	@ 0xd4
 80096a4:	f04f 0200 	mov.w	r2, #0
 80096a8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 80096aa:	79ba      	ldrb	r2, [r7, #6]
 80096ac:	495d      	ldr	r1, [pc, #372]	@ (8009824 <config_motors+0xcb4>)
 80096ae:	4613      	mov	r3, r2
 80096b0:	011b      	lsls	r3, r3, #4
 80096b2:	1a9b      	subs	r3, r3, r2
 80096b4:	011b      	lsls	r3, r3, #4
 80096b6:	440b      	add	r3, r1
 80096b8:	3368      	adds	r3, #104	@ 0x68
 80096ba:	f04f 0200 	mov.w	r2, #0
 80096be:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 80096c0:	79ba      	ldrb	r2, [r7, #6]
 80096c2:	4958      	ldr	r1, [pc, #352]	@ (8009824 <config_motors+0xcb4>)
 80096c4:	4613      	mov	r3, r2
 80096c6:	011b      	lsls	r3, r3, #4
 80096c8:	1a9b      	subs	r3, r3, r2
 80096ca:	011b      	lsls	r3, r3, #4
 80096cc:	440b      	add	r3, r1
 80096ce:	336c      	adds	r3, #108	@ 0x6c
 80096d0:	f04f 0200 	mov.w	r2, #0
 80096d4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 80096d6:	79ba      	ldrb	r2, [r7, #6]
 80096d8:	4952      	ldr	r1, [pc, #328]	@ (8009824 <config_motors+0xcb4>)
 80096da:	4613      	mov	r3, r2
 80096dc:	011b      	lsls	r3, r3, #4
 80096de:	1a9b      	subs	r3, r3, r2
 80096e0:	011b      	lsls	r3, r3, #4
 80096e2:	440b      	add	r3, r1
 80096e4:	3370      	adds	r3, #112	@ 0x70
 80096e6:	f04f 0200 	mov.w	r2, #0
 80096ea:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 80096ec:	79ba      	ldrb	r2, [r7, #6]
 80096ee:	494d      	ldr	r1, [pc, #308]	@ (8009824 <config_motors+0xcb4>)
 80096f0:	4613      	mov	r3, r2
 80096f2:	011b      	lsls	r3, r3, #4
 80096f4:	1a9b      	subs	r3, r3, r2
 80096f6:	011b      	lsls	r3, r3, #4
 80096f8:	440b      	add	r3, r1
 80096fa:	3380      	adds	r3, #128	@ 0x80
 80096fc:	4a54      	ldr	r2, [pc, #336]	@ (8009850 <config_motors+0xce0>)
 80096fe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 8009700:	79ba      	ldrb	r2, [r7, #6]
 8009702:	4948      	ldr	r1, [pc, #288]	@ (8009824 <config_motors+0xcb4>)
 8009704:	4613      	mov	r3, r2
 8009706:	011b      	lsls	r3, r3, #4
 8009708:	1a9b      	subs	r3, r3, r2
 800970a:	011b      	lsls	r3, r3, #4
 800970c:	440b      	add	r3, r1
 800970e:	3384      	adds	r3, #132	@ 0x84
 8009710:	f04f 4282 	mov.w	r2, #1090519040	@ 0x41000000
 8009714:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 8009716:	79ba      	ldrb	r2, [r7, #6]
 8009718:	4942      	ldr	r1, [pc, #264]	@ (8009824 <config_motors+0xcb4>)
 800971a:	4613      	mov	r3, r2
 800971c:	011b      	lsls	r3, r3, #4
 800971e:	1a9b      	subs	r3, r3, r2
 8009720:	011b      	lsls	r3, r3, #4
 8009722:	440b      	add	r3, r1
 8009724:	3338      	adds	r3, #56	@ 0x38
 8009726:	4a4b      	ldr	r2, [pc, #300]	@ (8009854 <config_motors+0xce4>)
 8009728:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800972a:	79ba      	ldrb	r2, [r7, #6]
 800972c:	493d      	ldr	r1, [pc, #244]	@ (8009824 <config_motors+0xcb4>)
 800972e:	4613      	mov	r3, r2
 8009730:	011b      	lsls	r3, r3, #4
 8009732:	1a9b      	subs	r3, r3, r2
 8009734:	011b      	lsls	r3, r3, #4
 8009736:	440b      	add	r3, r1
 8009738:	333c      	adds	r3, #60	@ 0x3c
 800973a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800973e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 8009740:	79ba      	ldrb	r2, [r7, #6]
 8009742:	4938      	ldr	r1, [pc, #224]	@ (8009824 <config_motors+0xcb4>)
 8009744:	4613      	mov	r3, r2
 8009746:	011b      	lsls	r3, r3, #4
 8009748:	1a9b      	subs	r3, r3, r2
 800974a:	011b      	lsls	r3, r3, #4
 800974c:	440b      	add	r3, r1
 800974e:	3340      	adds	r3, #64	@ 0x40
 8009750:	f04f 0200 	mov.w	r2, #0
 8009754:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 8009756:	79ba      	ldrb	r2, [r7, #6]
 8009758:	4932      	ldr	r1, [pc, #200]	@ (8009824 <config_motors+0xcb4>)
 800975a:	4613      	mov	r3, r2
 800975c:	011b      	lsls	r3, r3, #4
 800975e:	1a9b      	subs	r3, r3, r2
 8009760:	011b      	lsls	r3, r3, #4
 8009762:	440b      	add	r3, r1
 8009764:	3350      	adds	r3, #80	@ 0x50
 8009766:	4a3c      	ldr	r2, [pc, #240]	@ (8009858 <config_motors+0xce8>)
 8009768:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800976a:	79ba      	ldrb	r2, [r7, #6]
 800976c:	492d      	ldr	r1, [pc, #180]	@ (8009824 <config_motors+0xcb4>)
 800976e:	4613      	mov	r3, r2
 8009770:	011b      	lsls	r3, r3, #4
 8009772:	1a9b      	subs	r3, r3, r2
 8009774:	011b      	lsls	r3, r3, #4
 8009776:	440b      	add	r3, r1
 8009778:	3354      	adds	r3, #84	@ 0x54
 800977a:	4a38      	ldr	r2, [pc, #224]	@ (800985c <config_motors+0xcec>)
 800977c:	601a      	str	r2, [r3, #0]
#endif

#ifdef YAW_MOTOR_ID
#ifndef YAW_M3508
	motor_id = YAW_MOTOR_ID - 1;
 800977e:	2313      	movs	r3, #19
 8009780:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8009782:	79ba      	ldrb	r2, [r7, #6]
 8009784:	4927      	ldr	r1, [pc, #156]	@ (8009824 <config_motors+0xcb4>)
 8009786:	4613      	mov	r3, r2
 8009788:	011b      	lsls	r3, r3, #4
 800978a:	1a9b      	subs	r3, r3, r2
 800978c:	011b      	lsls	r3, r3, #4
 800978e:	440b      	add	r3, r1
 8009790:	3302      	adds	r3, #2
 8009792:	2201      	movs	r2, #1
 8009794:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8009796:	79ba      	ldrb	r2, [r7, #6]
 8009798:	4613      	mov	r3, r2
 800979a:	011b      	lsls	r3, r3, #4
 800979c:	1a9b      	subs	r3, r3, r2
 800979e:	011b      	lsls	r3, r3, #4
 80097a0:	4a20      	ldr	r2, [pc, #128]	@ (8009824 <config_motors+0xcb4>)
 80097a2:	4413      	add	r3, r2
 80097a4:	4618      	mov	r0, r3
 80097a6:	f7ff f89b 	bl	80088e0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = YAW_CENTER;
 80097aa:	79ba      	ldrb	r2, [r7, #6]
 80097ac:	491d      	ldr	r1, [pc, #116]	@ (8009824 <config_motors+0xcb4>)
 80097ae:	4613      	mov	r3, r2
 80097b0:	011b      	lsls	r3, r3, #4
 80097b2:	1a9b      	subs	r3, r3, r2
 80097b4:	011b      	lsls	r3, r3, #4
 80097b6:	440b      	add	r3, r1
 80097b8:	339c      	adds	r3, #156	@ 0x9c
 80097ba:	f640 62d8 	movw	r2, #3800	@ 0xed8
 80097be:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = YAW_MAX_ANG;
 80097c0:	79ba      	ldrb	r2, [r7, #6]
 80097c2:	4918      	ldr	r1, [pc, #96]	@ (8009824 <config_motors+0xcb4>)
 80097c4:	4613      	mov	r3, r2
 80097c6:	011b      	lsls	r3, r3, #4
 80097c8:	1a9b      	subs	r3, r3, r2
 80097ca:	011b      	lsls	r3, r3, #4
 80097cc:	440b      	add	r3, r1
 80097ce:	33c4      	adds	r3, #196	@ 0xc4
 80097d0:	4a23      	ldr	r2, [pc, #140]	@ (8009860 <config_motors+0xcf0>)
 80097d2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = YAW_MIN_ANG; //angle before it overflows
 80097d4:	79ba      	ldrb	r2, [r7, #6]
 80097d6:	4913      	ldr	r1, [pc, #76]	@ (8009824 <config_motors+0xcb4>)
 80097d8:	4613      	mov	r3, r2
 80097da:	011b      	lsls	r3, r3, #4
 80097dc:	1a9b      	subs	r3, r3, r2
 80097de:	011b      	lsls	r3, r3, #4
 80097e0:	440b      	add	r3, r1
 80097e2:	33c0      	adds	r3, #192	@ 0xc0
 80097e4:	4a1f      	ldr	r2, [pc, #124]	@ (8009864 <config_motors+0xcf4>)
 80097e6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 80097e8:	79ba      	ldrb	r2, [r7, #6]
 80097ea:	490e      	ldr	r1, [pc, #56]	@ (8009824 <config_motors+0xcb4>)
 80097ec:	4613      	mov	r3, r2
 80097ee:	011b      	lsls	r3, r3, #4
 80097f0:	1a9b      	subs	r3, r3, r2
 80097f2:	011b      	lsls	r3, r3, #4
 80097f4:	440b      	add	r3, r1
 80097f6:	33d4      	adds	r3, #212	@ 0xd4
 80097f8:	f04f 0200 	mov.w	r2, #0
 80097fc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = YAW_ANGLE_KP;
 80097fe:	79ba      	ldrb	r2, [r7, #6]
 8009800:	4908      	ldr	r1, [pc, #32]	@ (8009824 <config_motors+0xcb4>)
 8009802:	4613      	mov	r3, r2
 8009804:	011b      	lsls	r3, r3, #4
 8009806:	1a9b      	subs	r3, r3, r2
 8009808:	011b      	lsls	r3, r3, #4
 800980a:	440b      	add	r3, r1
 800980c:	3368      	adds	r3, #104	@ 0x68
 800980e:	4a16      	ldr	r2, [pc, #88]	@ (8009868 <config_motors+0xcf8>)
 8009810:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = YAW_ANGLE_KI;
 8009812:	79ba      	ldrb	r2, [r7, #6]
 8009814:	4903      	ldr	r1, [pc, #12]	@ (8009824 <config_motors+0xcb4>)
 8009816:	4613      	mov	r3, r2
 8009818:	011b      	lsls	r3, r3, #4
 800981a:	1a9b      	subs	r3, r3, r2
 800981c:	011b      	lsls	r3, r3, #4
 800981e:	440b      	add	r3, r1
 8009820:	336c      	adds	r3, #108	@ 0x6c
 8009822:	e023      	b.n	800986c <config_motors+0xcfc>
 8009824:	20001e48 	.word	0x20001e48
 8009828:	40490fdb 	.word	0x40490fdb
 800982c:	c0490fdb 	.word	0xc0490fdb
 8009830:	447a0000 	.word	0x447a0000
 8009834:	42c80000 	.word	0x42c80000
 8009838:	40a00000 	.word	0x40a00000
 800983c:	3ca3d70a 	.word	0x3ca3d70a
 8009840:	40400000 	.word	0x40400000
 8009844:	461c4000 	.word	0x461c4000
 8009848:	3f19999a 	.word	0x3f19999a
 800984c:	be800000 	.word	0xbe800000
 8009850:	3dcccccd 	.word	0x3dcccccd
 8009854:	45bb8000 	.word	0x45bb8000
 8009858:	457a0000 	.word	0x457a0000
 800985c:	469c4000 	.word	0x469c4000
 8009860:	417b53d2 	.word	0x417b53d2
 8009864:	c17b53d2 	.word	0xc17b53d2
 8009868:	41700000 	.word	0x41700000
 800986c:	f04f 0200 	mov.w	r2, #0
 8009870:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = YAW_ANGLE_KD;
 8009872:	79ba      	ldrb	r2, [r7, #6]
 8009874:	4929      	ldr	r1, [pc, #164]	@ (800991c <config_motors+0xdac>)
 8009876:	4613      	mov	r3, r2
 8009878:	011b      	lsls	r3, r3, #4
 800987a:	1a9b      	subs	r3, r3, r2
 800987c:	011b      	lsls	r3, r3, #4
 800987e:	440b      	add	r3, r1
 8009880:	3370      	adds	r3, #112	@ 0x70
 8009882:	4a27      	ldr	r2, [pc, #156]	@ (8009920 <config_motors+0xdb0>)
 8009884:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = YAW_ANGLE_INT_MAX;
 8009886:	79ba      	ldrb	r2, [r7, #6]
 8009888:	4924      	ldr	r1, [pc, #144]	@ (800991c <config_motors+0xdac>)
 800988a:	4613      	mov	r3, r2
 800988c:	011b      	lsls	r3, r3, #4
 800988e:	1a9b      	subs	r3, r3, r2
 8009890:	011b      	lsls	r3, r3, #4
 8009892:	440b      	add	r3, r1
 8009894:	3380      	adds	r3, #128	@ 0x80
 8009896:	4a23      	ldr	r2, [pc, #140]	@ (8009924 <config_motors+0xdb4>)
 8009898:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = YAW_MAX_RPM;
 800989a:	79ba      	ldrb	r2, [r7, #6]
 800989c:	491f      	ldr	r1, [pc, #124]	@ (800991c <config_motors+0xdac>)
 800989e:	4613      	mov	r3, r2
 80098a0:	011b      	lsls	r3, r3, #4
 80098a2:	1a9b      	subs	r3, r3, r2
 80098a4:	011b      	lsls	r3, r3, #4
 80098a6:	440b      	add	r3, r1
 80098a8:	3384      	adds	r3, #132	@ 0x84
 80098aa:	4a1d      	ldr	r2, [pc, #116]	@ (8009920 <config_motors+0xdb0>)
 80098ac:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = YAWRPM_KP;
 80098ae:	79ba      	ldrb	r2, [r7, #6]
 80098b0:	491a      	ldr	r1, [pc, #104]	@ (800991c <config_motors+0xdac>)
 80098b2:	4613      	mov	r3, r2
 80098b4:	011b      	lsls	r3, r3, #4
 80098b6:	1a9b      	subs	r3, r3, r2
 80098b8:	011b      	lsls	r3, r3, #4
 80098ba:	440b      	add	r3, r1
 80098bc:	3338      	adds	r3, #56	@ 0x38
 80098be:	4a1a      	ldr	r2, [pc, #104]	@ (8009928 <config_motors+0xdb8>)
 80098c0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = YAWRPM_KI;
 80098c2:	79ba      	ldrb	r2, [r7, #6]
 80098c4:	4915      	ldr	r1, [pc, #84]	@ (800991c <config_motors+0xdac>)
 80098c6:	4613      	mov	r3, r2
 80098c8:	011b      	lsls	r3, r3, #4
 80098ca:	1a9b      	subs	r3, r3, r2
 80098cc:	011b      	lsls	r3, r3, #4
 80098ce:	440b      	add	r3, r1
 80098d0:	333c      	adds	r3, #60	@ 0x3c
 80098d2:	4a13      	ldr	r2, [pc, #76]	@ (8009920 <config_motors+0xdb0>)
 80098d4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = YAWRPM_KD;
 80098d6:	79ba      	ldrb	r2, [r7, #6]
 80098d8:	4910      	ldr	r1, [pc, #64]	@ (800991c <config_motors+0xdac>)
 80098da:	4613      	mov	r3, r2
 80098dc:	011b      	lsls	r3, r3, #4
 80098de:	1a9b      	subs	r3, r3, r2
 80098e0:	011b      	lsls	r3, r3, #4
 80098e2:	440b      	add	r3, r1
 80098e4:	3340      	adds	r3, #64	@ 0x40
 80098e6:	4a11      	ldr	r2, [pc, #68]	@ (800992c <config_motors+0xdbc>)
 80098e8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = YAWRPM_INT_MAX;
 80098ea:	79ba      	ldrb	r2, [r7, #6]
 80098ec:	490b      	ldr	r1, [pc, #44]	@ (800991c <config_motors+0xdac>)
 80098ee:	4613      	mov	r3, r2
 80098f0:	011b      	lsls	r3, r3, #4
 80098f2:	1a9b      	subs	r3, r3, r2
 80098f4:	011b      	lsls	r3, r3, #4
 80098f6:	440b      	add	r3, r1
 80098f8:	3350      	adds	r3, #80	@ 0x50
 80098fa:	4a0d      	ldr	r2, [pc, #52]	@ (8009930 <config_motors+0xdc0>)
 80098fc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = YAW_MAX_CURRENT;
 80098fe:	79ba      	ldrb	r2, [r7, #6]
 8009900:	4906      	ldr	r1, [pc, #24]	@ (800991c <config_motors+0xdac>)
 8009902:	4613      	mov	r3, r2
 8009904:	011b      	lsls	r3, r3, #4
 8009906:	1a9b      	subs	r3, r3, r2
 8009908:	011b      	lsls	r3, r3, #4
 800990a:	440b      	add	r3, r1
 800990c:	3354      	adds	r3, #84	@ 0x54
 800990e:	4a09      	ldr	r2, [pc, #36]	@ (8009934 <config_motors+0xdc4>)
 8009910:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ticks = 4096 * g_can_motors[motor_id].angle_data.gearbox_ratio;
	g_can_motors[motor_id].angle_data.tick_range = g_can_motors[motor_id].angle_data.max_ticks
			- g_can_motors[motor_id].angle_data.min_ticks;
#endif
#endif
}
 8009912:	bf00      	nop
 8009914:	3708      	adds	r7, #8
 8009916:	46bd      	mov	sp, r7
 8009918:	bd80      	pop	{r7, pc}
 800991a:	bf00      	nop
 800991c:	20001e48 	.word	0x20001e48
 8009920:	41200000 	.word	0x41200000
 8009924:	3d4ccccd 	.word	0x3d4ccccd
 8009928:	466a6000 	.word	0x466a6000
 800992c:	447a0000 	.word	0x447a0000
 8009930:	459c4000 	.word	0x459c4000
 8009934:	469c4000 	.word	0x469c4000

08009938 <bz_buzzer>:

void bz_buzzer(uint8_t high, uint8_t low) {
 8009938:	b580      	push	{r7, lr}
 800993a:	b084      	sub	sp, #16
 800993c:	af00      	add	r7, sp, #0
 800993e:	4603      	mov	r3, r0
 8009940:	460a      	mov	r2, r1
 8009942:	71fb      	strb	r3, [r7, #7]
 8009944:	4613      	mov	r3, r2
 8009946:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_high;
 8009948:	2309      	movs	r3, #9
 800994a:	737b      	strb	r3, [r7, #13]
	for (uint8_t i = 0; i < high; i++) {
 800994c:	2300      	movs	r3, #0
 800994e:	73fb      	strb	r3, [r7, #15]
 8009950:	e00a      	b.n	8009968 <bz_buzzer+0x30>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009952:	4b1a      	ldr	r3, [pc, #104]	@ (80099bc <bz_buzzer+0x84>)
 8009954:	6818      	ldr	r0, [r3, #0]
 8009956:	f107 010d 	add.w	r1, r7, #13
 800995a:	2300      	movs	r3, #0
 800995c:	2200      	movs	r2, #0
 800995e:	f00d fecb 	bl	80176f8 <xQueueGenericSend>
	for (uint8_t i = 0; i < high; i++) {
 8009962:	7bfb      	ldrb	r3, [r7, #15]
 8009964:	3301      	adds	r3, #1
 8009966:	73fb      	strb	r3, [r7, #15]
 8009968:	7bfa      	ldrb	r2, [r7, #15]
 800996a:	79fb      	ldrb	r3, [r7, #7]
 800996c:	429a      	cmp	r2, r3
 800996e:	d3f0      	bcc.n	8009952 <bz_buzzer+0x1a>
	}
	temp_msg = bz_debug_low;
 8009970:	2308      	movs	r3, #8
 8009972:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < low; i++) {
 8009974:	2300      	movs	r3, #0
 8009976:	73bb      	strb	r3, [r7, #14]
 8009978:	e00d      	b.n	8009996 <bz_buzzer+0x5e>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800997a:	4b10      	ldr	r3, [pc, #64]	@ (80099bc <bz_buzzer+0x84>)
 800997c:	6818      	ldr	r0, [r3, #0]
 800997e:	f107 010d 	add.w	r1, r7, #13
 8009982:	2300      	movs	r3, #0
 8009984:	2200      	movs	r2, #0
 8009986:	f00d feb7 	bl	80176f8 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800998a:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800998e:	b2db      	uxtb	r3, r3
 8009990:	3301      	adds	r3, #1
 8009992:	b2db      	uxtb	r3, r3
 8009994:	73bb      	strb	r3, [r7, #14]
 8009996:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800999a:	79bb      	ldrb	r3, [r7, #6]
 800999c:	429a      	cmp	r2, r3
 800999e:	dbec      	blt.n	800997a <bz_buzzer+0x42>
	}
	temp_msg = bz_debug_rest;
 80099a0:	230a      	movs	r3, #10
 80099a2:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80099a4:	4b05      	ldr	r3, [pc, #20]	@ (80099bc <bz_buzzer+0x84>)
 80099a6:	6818      	ldr	r0, [r3, #0]
 80099a8:	f107 010d 	add.w	r1, r7, #13
 80099ac:	2300      	movs	r3, #0
 80099ae:	2200      	movs	r2, #0
 80099b0:	f00d fea2 	bl	80176f8 <xQueueGenericSend>
}
 80099b4:	bf00      	nop
 80099b6:	3710      	adds	r7, #16
 80099b8:	46bd      	mov	sp, r7
 80099ba:	bd80      	pop	{r7, pc}
 80099bc:	200037d4 	.word	0x200037d4

080099c0 <motor_temp_bz>:

void motor_temp_bz(uint8_t hi, uint8_t low) {
 80099c0:	b580      	push	{r7, lr}
 80099c2:	b084      	sub	sp, #16
 80099c4:	af00      	add	r7, sp, #0
 80099c6:	4603      	mov	r3, r0
 80099c8:	460a      	mov	r2, r1
 80099ca:	71fb      	strb	r3, [r7, #7]
 80099cc:	4613      	mov	r3, r2
 80099ce:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_hi_temp;
 80099d0:	230b      	movs	r3, #11
 80099d2:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80099d4:	4b27      	ldr	r3, [pc, #156]	@ (8009a74 <motor_temp_bz+0xb4>)
 80099d6:	6818      	ldr	r0, [r3, #0]
 80099d8:	f107 010d 	add.w	r1, r7, #13
 80099dc:	2300      	movs	r3, #0
 80099de:	2200      	movs	r2, #0
 80099e0:	f00d fe8a 	bl	80176f8 <xQueueGenericSend>
	temp_msg = bz_debug_rest;
 80099e4:	230a      	movs	r3, #10
 80099e6:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80099e8:	4b22      	ldr	r3, [pc, #136]	@ (8009a74 <motor_temp_bz+0xb4>)
 80099ea:	6818      	ldr	r0, [r3, #0]
 80099ec:	f107 010d 	add.w	r1, r7, #13
 80099f0:	2300      	movs	r3, #0
 80099f2:	2200      	movs	r2, #0
 80099f4:	f00d fe80 	bl	80176f8 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 80099f8:	2300      	movs	r3, #0
 80099fa:	73fb      	strb	r3, [r7, #15]
 80099fc:	e00f      	b.n	8009a1e <motor_temp_bz+0x5e>
		temp_msg = bz_temp_hi;
 80099fe:	230c      	movs	r3, #12
 8009a00:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009a02:	4b1c      	ldr	r3, [pc, #112]	@ (8009a74 <motor_temp_bz+0xb4>)
 8009a04:	6818      	ldr	r0, [r3, #0]
 8009a06:	f107 010d 	add.w	r1, r7, #13
 8009a0a:	2300      	movs	r3, #0
 8009a0c:	2200      	movs	r2, #0
 8009a0e:	f00d fe73 	bl	80176f8 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 8009a12:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8009a16:	b2db      	uxtb	r3, r3
 8009a18:	3301      	adds	r3, #1
 8009a1a:	b2db      	uxtb	r3, r3
 8009a1c:	73fb      	strb	r3, [r7, #15]
 8009a1e:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8009a22:	79fb      	ldrb	r3, [r7, #7]
 8009a24:	429a      	cmp	r2, r3
 8009a26:	dbea      	blt.n	80099fe <motor_temp_bz+0x3e>
	}
	for (int8_t i = 0; i < low; i++) {
 8009a28:	2300      	movs	r3, #0
 8009a2a:	73bb      	strb	r3, [r7, #14]
 8009a2c:	e00f      	b.n	8009a4e <motor_temp_bz+0x8e>
		temp_msg = bz_temp_low;
 8009a2e:	230d      	movs	r3, #13
 8009a30:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009a32:	4b10      	ldr	r3, [pc, #64]	@ (8009a74 <motor_temp_bz+0xb4>)
 8009a34:	6818      	ldr	r0, [r3, #0]
 8009a36:	f107 010d 	add.w	r1, r7, #13
 8009a3a:	2300      	movs	r3, #0
 8009a3c:	2200      	movs	r2, #0
 8009a3e:	f00d fe5b 	bl	80176f8 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 8009a42:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8009a46:	b2db      	uxtb	r3, r3
 8009a48:	3301      	adds	r3, #1
 8009a4a:	b2db      	uxtb	r3, r3
 8009a4c:	73bb      	strb	r3, [r7, #14]
 8009a4e:	f997 200e 	ldrsb.w	r2, [r7, #14]
 8009a52:	79bb      	ldrb	r3, [r7, #6]
 8009a54:	429a      	cmp	r2, r3
 8009a56:	dbea      	blt.n	8009a2e <motor_temp_bz+0x6e>
	}
	temp_msg = bz_debug_rest;
 8009a58:	230a      	movs	r3, #10
 8009a5a:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009a5c:	4b05      	ldr	r3, [pc, #20]	@ (8009a74 <motor_temp_bz+0xb4>)
 8009a5e:	6818      	ldr	r0, [r3, #0]
 8009a60:	f107 010d 	add.w	r1, r7, #13
 8009a64:	2300      	movs	r3, #0
 8009a66:	2200      	movs	r2, #0
 8009a68:	f00d fe46 	bl	80176f8 <xQueueGenericSend>

}
 8009a6c:	bf00      	nop
 8009a6e:	3710      	adds	r7, #16
 8009a70:	46bd      	mov	sp, r7
 8009a72:	bd80      	pop	{r7, pc}
 8009a74:	200037d4 	.word	0x200037d4

08009a78 <check_motors>:

uint16_t check_motors() {
 8009a78:	b580      	push	{r7, lr}
 8009a7a:	b082      	sub	sp, #8
 8009a7c:	af00      	add	r7, sp, #0
	uint16_t error = 0;
 8009a7e:	2300      	movs	r3, #0
 8009a80:	80fb      	strh	r3, [r7, #6]
	uint32_t curr_time = get_microseconds();
 8009a82:	f7f8 fb9d 	bl	80021c0 <get_microseconds>
 8009a86:	6038      	str	r0, [r7, #0]
	if (curr_time
				- g_can_motors[LEFT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a88:	4b7d      	ldr	r3, [pc, #500]	@ (8009c80 <check_motors+0x208>)
 8009a8a:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8009a8e:	683a      	ldr	r2, [r7, #0]
 8009a90:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a92:	4a7c      	ldr	r2, [pc, #496]	@ (8009c84 <check_motors+0x20c>)
 8009a94:	4293      	cmp	r3, r2
 8009a96:	d904      	bls.n	8009aa2 <check_motors+0x2a>
			error |= 1 << (0);
 8009a98:	88fb      	ldrh	r3, [r7, #6]
 8009a9a:	f043 0301 	orr.w	r3, r3, #1
 8009a9e:	80fb      	strh	r3, [r7, #6]
 8009aa0:	e007      	b.n	8009ab2 <check_motors+0x3a>

		} else {
			if (g_can_motors[LEFT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009aa2:	4b77      	ldr	r3, [pc, #476]	@ (8009c80 <check_motors+0x208>)
 8009aa4:	7b1b      	ldrb	r3, [r3, #12]
 8009aa6:	2b46      	cmp	r3, #70	@ 0x46
 8009aa8:	d903      	bls.n	8009ab2 <check_motors+0x3a>
				motor_temp_bz(1, 1);
 8009aaa:	2101      	movs	r1, #1
 8009aac:	2001      	movs	r0, #1
 8009aae:	f7ff ff87 	bl	80099c0 <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
				- g_can_motors[RIGHT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009ab2:	4b73      	ldr	r3, [pc, #460]	@ (8009c80 <check_motors+0x208>)
 8009ab4:	f8d3 31d4 	ldr.w	r3, [r3, #468]	@ 0x1d4
 8009ab8:	683a      	ldr	r2, [r7, #0]
 8009aba:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009abc:	4a71      	ldr	r2, [pc, #452]	@ (8009c84 <check_motors+0x20c>)
 8009abe:	4293      	cmp	r3, r2
 8009ac0:	d904      	bls.n	8009acc <check_motors+0x54>
			error |= 1 << (0);
 8009ac2:	88fb      	ldrh	r3, [r7, #6]
 8009ac4:	f043 0301 	orr.w	r3, r3, #1
 8009ac8:	80fb      	strh	r3, [r7, #6]
 8009aca:	e008      	b.n	8009ade <check_motors+0x66>

		} else {
			if (g_can_motors[RIGHT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009acc:	4b6c      	ldr	r3, [pc, #432]	@ (8009c80 <check_motors+0x208>)
 8009ace:	f893 30fc 	ldrb.w	r3, [r3, #252]	@ 0xfc
 8009ad2:	2b46      	cmp	r3, #70	@ 0x46
 8009ad4:	d903      	bls.n	8009ade <check_motors+0x66>
				motor_temp_bz(1, 1);
 8009ad6:	2101      	movs	r1, #1
 8009ad8:	2001      	movs	r0, #1
 8009ada:	f7ff ff71 	bl	80099c0 <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
			- g_can_motors[FR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009ade:	4b68      	ldr	r3, [pc, #416]	@ (8009c80 <check_motors+0x208>)
 8009ae0:	f8d3 34a4 	ldr.w	r3, [r3, #1188]	@ 0x4a4
 8009ae4:	683a      	ldr	r2, [r7, #0]
 8009ae6:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009ae8:	4a66      	ldr	r2, [pc, #408]	@ (8009c84 <check_motors+0x20c>)
 8009aea:	4293      	cmp	r3, r2
 8009aec:	d904      	bls.n	8009af8 <check_motors+0x80>
		error |= 1 << (0);
 8009aee:	88fb      	ldrh	r3, [r7, #6]
 8009af0:	f043 0301 	orr.w	r3, r3, #1
 8009af4:	80fb      	strh	r3, [r7, #6]
 8009af6:	e008      	b.n	8009b0a <check_motors+0x92>

	} else {
		if (g_can_motors[FR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009af8:	4b61      	ldr	r3, [pc, #388]	@ (8009c80 <check_motors+0x208>)
 8009afa:	f893 33cc 	ldrb.w	r3, [r3, #972]	@ 0x3cc
 8009afe:	2b46      	cmp	r3, #70	@ 0x46
 8009b00:	d903      	bls.n	8009b0a <check_motors+0x92>
			motor_temp_bz(1, 1);
 8009b02:	2101      	movs	r1, #1
 8009b04:	2001      	movs	r0, #1
 8009b06:	f7ff ff5b 	bl	80099c0 <motor_temp_bz>

		}
	}

	if (curr_time
			- g_can_motors[FL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b0a:	4b5d      	ldr	r3, [pc, #372]	@ (8009c80 <check_motors+0x208>)
 8009b0c:	f8d3 3594 	ldr.w	r3, [r3, #1428]	@ 0x594
 8009b10:	683a      	ldr	r2, [r7, #0]
 8009b12:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b14:	4a5b      	ldr	r2, [pc, #364]	@ (8009c84 <check_motors+0x20c>)
 8009b16:	4293      	cmp	r3, r2
 8009b18:	d904      	bls.n	8009b24 <check_motors+0xac>
		error |= 1 << (1);
 8009b1a:	88fb      	ldrh	r3, [r7, #6]
 8009b1c:	f043 0302 	orr.w	r3, r3, #2
 8009b20:	80fb      	strh	r3, [r7, #6]
 8009b22:	e008      	b.n	8009b36 <check_motors+0xbe>

	} else {
		if (g_can_motors[FL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b24:	4b56      	ldr	r3, [pc, #344]	@ (8009c80 <check_motors+0x208>)
 8009b26:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 8009b2a:	2b46      	cmp	r3, #70	@ 0x46
 8009b2c:	d903      	bls.n	8009b36 <check_motors+0xbe>
			motor_temp_bz(1, 2);
 8009b2e:	2102      	movs	r1, #2
 8009b30:	2001      	movs	r0, #1
 8009b32:	f7ff ff45 	bl	80099c0 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[BL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b36:	4b52      	ldr	r3, [pc, #328]	@ (8009c80 <check_motors+0x208>)
 8009b38:	f8d3 3684 	ldr.w	r3, [r3, #1668]	@ 0x684
 8009b3c:	683a      	ldr	r2, [r7, #0]
 8009b3e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b40:	4a50      	ldr	r2, [pc, #320]	@ (8009c84 <check_motors+0x20c>)
 8009b42:	4293      	cmp	r3, r2
 8009b44:	d904      	bls.n	8009b50 <check_motors+0xd8>
		error |= 1 << (2);
 8009b46:	88fb      	ldrh	r3, [r7, #6]
 8009b48:	f043 0304 	orr.w	r3, r3, #4
 8009b4c:	80fb      	strh	r3, [r7, #6]
 8009b4e:	e008      	b.n	8009b62 <check_motors+0xea>
	} else {
		if (g_can_motors[BL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b50:	4b4b      	ldr	r3, [pc, #300]	@ (8009c80 <check_motors+0x208>)
 8009b52:	f893 35ac 	ldrb.w	r3, [r3, #1452]	@ 0x5ac
 8009b56:	2b46      	cmp	r3, #70	@ 0x46
 8009b58:	d903      	bls.n	8009b62 <check_motors+0xea>
			motor_temp_bz(1, 3);
 8009b5a:	2103      	movs	r1, #3
 8009b5c:	2001      	movs	r0, #1
 8009b5e:	f7ff ff2f 	bl	80099c0 <motor_temp_bz>
		}
	}
	if (curr_time
			- g_can_motors[BR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b62:	4b47      	ldr	r3, [pc, #284]	@ (8009c80 <check_motors+0x208>)
 8009b64:	f8d3 3774 	ldr.w	r3, [r3, #1908]	@ 0x774
 8009b68:	683a      	ldr	r2, [r7, #0]
 8009b6a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b6c:	4a45      	ldr	r2, [pc, #276]	@ (8009c84 <check_motors+0x20c>)
 8009b6e:	4293      	cmp	r3, r2
 8009b70:	d904      	bls.n	8009b7c <check_motors+0x104>
		error |= 1 << (3);
 8009b72:	88fb      	ldrh	r3, [r7, #6]
 8009b74:	f043 0308 	orr.w	r3, r3, #8
 8009b78:	80fb      	strh	r3, [r7, #6]
 8009b7a:	e008      	b.n	8009b8e <check_motors+0x116>
	} else {
		if (g_can_motors[BR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b7c:	4b40      	ldr	r3, [pc, #256]	@ (8009c80 <check_motors+0x208>)
 8009b7e:	f893 369c 	ldrb.w	r3, [r3, #1692]	@ 0x69c
 8009b82:	2b46      	cmp	r3, #70	@ 0x46
 8009b84:	d903      	bls.n	8009b8e <check_motors+0x116>
			motor_temp_bz(1, 4);
 8009b86:	2104      	movs	r1, #4
 8009b88:	2001      	movs	r0, #1
 8009b8a:	f7ff ff19 	bl	80099c0 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[LFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b8e:	4b3c      	ldr	r3, [pc, #240]	@ (8009c80 <check_motors+0x208>)
 8009b90:	f8d3 3ef4 	ldr.w	r3, [r3, #3828]	@ 0xef4
 8009b94:	683a      	ldr	r2, [r7, #0]
 8009b96:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b98:	4a3a      	ldr	r2, [pc, #232]	@ (8009c84 <check_motors+0x20c>)
 8009b9a:	4293      	cmp	r3, r2
 8009b9c:	d904      	bls.n	8009ba8 <check_motors+0x130>
		error |= 1 << (4);
 8009b9e:	88fb      	ldrh	r3, [r7, #6]
 8009ba0:	f043 0310 	orr.w	r3, r3, #16
 8009ba4:	80fb      	strh	r3, [r7, #6]
 8009ba6:	e008      	b.n	8009bba <check_motors+0x142>

	} else {
		if (g_can_motors[LFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009ba8:	4b35      	ldr	r3, [pc, #212]	@ (8009c80 <check_motors+0x208>)
 8009baa:	f893 3e1c 	ldrb.w	r3, [r3, #3612]	@ 0xe1c
 8009bae:	2b46      	cmp	r3, #70	@ 0x46
 8009bb0:	d903      	bls.n	8009bba <check_motors+0x142>
			motor_temp_bz(2, 1);
 8009bb2:	2101      	movs	r1, #1
 8009bb4:	2002      	movs	r0, #2
 8009bb6:	f7ff ff03 	bl	80099c0 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[RFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009bba:	4b31      	ldr	r3, [pc, #196]	@ (8009c80 <check_motors+0x208>)
 8009bbc:	f8d3 3e04 	ldr.w	r3, [r3, #3588]	@ 0xe04
 8009bc0:	683a      	ldr	r2, [r7, #0]
 8009bc2:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009bc4:	4a2f      	ldr	r2, [pc, #188]	@ (8009c84 <check_motors+0x20c>)
 8009bc6:	4293      	cmp	r3, r2
 8009bc8:	d904      	bls.n	8009bd4 <check_motors+0x15c>
		error |= 1 << (5);
 8009bca:	88fb      	ldrh	r3, [r7, #6]
 8009bcc:	f043 0320 	orr.w	r3, r3, #32
 8009bd0:	80fb      	strh	r3, [r7, #6]
 8009bd2:	e008      	b.n	8009be6 <check_motors+0x16e>

	} else {
		if (g_can_motors[RFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009bd4:	4b2a      	ldr	r3, [pc, #168]	@ (8009c80 <check_motors+0x208>)
 8009bd6:	f893 3d2c 	ldrb.w	r3, [r3, #3372]	@ 0xd2c
 8009bda:	2b46      	cmp	r3, #70	@ 0x46
 8009bdc:	d903      	bls.n	8009be6 <check_motors+0x16e>
			motor_temp_bz(2, 2);
 8009bde:	2102      	movs	r1, #2
 8009be0:	2002      	movs	r0, #2
 8009be2:	f7ff feed 	bl	80099c0 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[FEEDER_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009be6:	4b26      	ldr	r3, [pc, #152]	@ (8009c80 <check_motors+0x208>)
 8009be8:	f8d3 3fe4 	ldr.w	r3, [r3, #4068]	@ 0xfe4
 8009bec:	683a      	ldr	r2, [r7, #0]
 8009bee:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009bf0:	4a24      	ldr	r2, [pc, #144]	@ (8009c84 <check_motors+0x20c>)
 8009bf2:	4293      	cmp	r3, r2
 8009bf4:	d904      	bls.n	8009c00 <check_motors+0x188>
		error |= 1 << 6;
 8009bf6:	88fb      	ldrh	r3, [r7, #6]
 8009bf8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009bfc:	80fb      	strh	r3, [r7, #6]
 8009bfe:	e008      	b.n	8009c12 <check_motors+0x19a>

	} else {
		if (g_can_motors[FEEDER_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009c00:	4b1f      	ldr	r3, [pc, #124]	@ (8009c80 <check_motors+0x208>)
 8009c02:	f893 3f0c 	ldrb.w	r3, [r3, #3852]	@ 0xf0c
 8009c06:	2b46      	cmp	r3, #70	@ 0x46
 8009c08:	d903      	bls.n	8009c12 <check_motors+0x19a>
			motor_temp_bz(2, 3);
 8009c0a:	2103      	movs	r1, #3
 8009c0c:	2002      	movs	r0, #2
 8009c0e:	f7ff fed7 	bl	80099c0 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[PITCH_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009c12:	4b1b      	ldr	r3, [pc, #108]	@ (8009c80 <check_motors+0x208>)
 8009c14:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009c18:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8009c1c:	683a      	ldr	r2, [r7, #0]
 8009c1e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009c20:	4a18      	ldr	r2, [pc, #96]	@ (8009c84 <check_motors+0x20c>)
 8009c22:	4293      	cmp	r3, r2
 8009c24:	d904      	bls.n	8009c30 <check_motors+0x1b8>
		error |= 1 << 7;
 8009c26:	88fb      	ldrh	r3, [r7, #6]
 8009c28:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009c2c:	80fb      	strh	r3, [r7, #6]
 8009c2e:	e008      	b.n	8009c42 <check_motors+0x1ca>

	} else {
		if (g_can_motors[PITCH_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009c30:	4b13      	ldr	r3, [pc, #76]	@ (8009c80 <check_motors+0x208>)
 8009c32:	f893 3ffc 	ldrb.w	r3, [r3, #4092]	@ 0xffc
 8009c36:	2b46      	cmp	r3, #70	@ 0x46
 8009c38:	d903      	bls.n	8009c42 <check_motors+0x1ca>
			motor_temp_bz(3, 1);
 8009c3a:	2101      	movs	r1, #1
 8009c3c:	2003      	movs	r0, #3
 8009c3e:	f7ff febf 	bl	80099c0 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[YAW_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009c42:	4b0f      	ldr	r3, [pc, #60]	@ (8009c80 <check_motors+0x208>)
 8009c44:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009c48:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8009c4c:	683a      	ldr	r2, [r7, #0]
 8009c4e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009c50:	4a0c      	ldr	r2, [pc, #48]	@ (8009c84 <check_motors+0x20c>)
 8009c52:	4293      	cmp	r3, r2
 8009c54:	d904      	bls.n	8009c60 <check_motors+0x1e8>
		error |= 1 << 8;
 8009c56:	88fb      	ldrh	r3, [r7, #6]
 8009c58:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009c5c:	80fb      	strh	r3, [r7, #6]
 8009c5e:	e00a      	b.n	8009c76 <check_motors+0x1fe>

	} else {
		if (g_can_motors[YAW_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009c60:	4b07      	ldr	r3, [pc, #28]	@ (8009c80 <check_motors+0x208>)
 8009c62:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009c66:	f893 31dc 	ldrb.w	r3, [r3, #476]	@ 0x1dc
 8009c6a:	2b46      	cmp	r3, #70	@ 0x46
 8009c6c:	d903      	bls.n	8009c76 <check_motors+0x1fe>
			motor_temp_bz(3, 2);
 8009c6e:	2102      	movs	r1, #2
 8009c70:	2003      	movs	r0, #3
 8009c72:	f7ff fea5 	bl	80099c0 <motor_temp_bz>
		}
	}
	return error;
 8009c76:	88fb      	ldrh	r3, [r7, #6]

}
 8009c78:	4618      	mov	r0, r3
 8009c7a:	3708      	adds	r7, #8
 8009c7c:	46bd      	mov	sp, r7
 8009c7e:	bd80      	pop	{r7, pc}
 8009c80:	20001e48 	.word	0x20001e48
 8009c84:	000f4240 	.word	0x000f4240

08009c88 <motor_calib_task>:

void motor_calib_task(void *argument) {
 8009c88:	b580      	push	{r7, lr}
 8009c8a:	b088      	sub	sp, #32
 8009c8c:	af00      	add	r7, sp, #0
 8009c8e:	6078      	str	r0, [r7, #4]
	can_start(&hcan1, 0x00000000, 0x00000000);
 8009c90:	2200      	movs	r2, #0
 8009c92:	2100      	movs	r1, #0
 8009c94:	4842      	ldr	r0, [pc, #264]	@ (8009da0 <motor_calib_task+0x118>)
 8009c96:	f7f7 fad1 	bl	800123c <can_start>
	can_start(&hcan2, 0x00000000, 0x00000000);
 8009c9a:	2200      	movs	r2, #0
 8009c9c:	2100      	movs	r1, #0
 8009c9e:	4841      	ldr	r0, [pc, #260]	@ (8009da4 <motor_calib_task+0x11c>)
 8009ca0:	f7f7 facc 	bl	800123c <can_start>
	config_motors();
 8009ca4:	f7fe ff64 	bl	8008b70 <config_motors>
	//insert can tester?
	uint16_t error = 0b111111111;
 8009ca8:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8009cac:	82fb      	strh	r3, [r7, #22]
	vTaskDelay(50);
 8009cae:	2032      	movs	r0, #50	@ 0x32
 8009cb0:	f00e fc0c 	bl	80184cc <vTaskDelay>
			vTaskDelay(500);
		}
	}

	uint8_t temp_msg;
	if (error == 0) {
 8009cb4:	8afb      	ldrh	r3, [r7, #22]
 8009cb6:	2b00      	cmp	r3, #0
 8009cb8:	d102      	bne.n	8009cc0 <motor_calib_task+0x38>
		temp_msg = ok;
 8009cba:	2301      	movs	r3, #1
 8009cbc:	73fb      	strb	r3, [r7, #15]
 8009cbe:	e001      	b.n	8009cc4 <motor_calib_task+0x3c>
	} else {
		temp_msg = not_ok;
 8009cc0:	2302      	movs	r3, #2
 8009cc2:	73fb      	strb	r3, [r7, #15]
	}
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009cc4:	4b38      	ldr	r3, [pc, #224]	@ (8009da8 <motor_calib_task+0x120>)
 8009cc6:	6818      	ldr	r0, [r3, #0]
 8009cc8:	f107 010f 	add.w	r1, r7, #15
 8009ccc:	2300      	movs	r3, #0
 8009cce:	2200      	movs	r2, #0
 8009cd0:	f00d fd12 	bl	80176f8 <xQueueGenericSend>
	uint32_t last_check = HAL_GetTick();
 8009cd4:	f001 fa34 	bl	800b140 <HAL_GetTick>
 8009cd8:	6138      	str	r0, [r7, #16]
	while (1) {
		error = 0;
 8009cda:	2300      	movs	r3, #0
 8009cdc:	82fb      	strh	r3, [r7, #22]

		error = check_motors();
 8009cde:	f7ff fecb 	bl	8009a78 <check_motors>
 8009ce2:	4603      	mov	r3, r0
 8009ce4:	82fb      	strh	r3, [r7, #22]
		g_motor_fault = error;
 8009ce6:	4a31      	ldr	r2, [pc, #196]	@ (8009dac <motor_calib_task+0x124>)
 8009ce8:	8afb      	ldrh	r3, [r7, #22]
 8009cea:	8013      	strh	r3, [r2, #0]
		uint32_t delay = 0;
 8009cec:	2300      	movs	r3, #0
 8009cee:	61bb      	str	r3, [r7, #24]
		if (HAL_GetTick() - last_check > 30000) {
 8009cf0:	f001 fa26 	bl	800b140 <HAL_GetTick>
 8009cf4:	4602      	mov	r2, r0
 8009cf6:	693b      	ldr	r3, [r7, #16]
 8009cf8:	1ad3      	subs	r3, r2, r3
 8009cfa:	f247 5230 	movw	r2, #30000	@ 0x7530
 8009cfe:	4293      	cmp	r3, r2
 8009d00:	d949      	bls.n	8009d96 <motor_calib_task+0x10e>
					bz_buzzer(0, 2);
					vTaskDelay(5000);
					continue;
				}
			} else {
				error = 0;
 8009d02:	2300      	movs	r3, #0
 8009d04:	82fb      	strh	r3, [r7, #22]
			}
			for (uint8_t i = 0; i < 4; i++) {
 8009d06:	2300      	movs	r3, #0
 8009d08:	777b      	strb	r3, [r7, #29]
 8009d0a:	e011      	b.n	8009d30 <motor_calib_task+0xa8>
				if (error & (1 << (i))) {
 8009d0c:	8afa      	ldrh	r2, [r7, #22]
 8009d0e:	7f7b      	ldrb	r3, [r7, #29]
 8009d10:	fa42 f303 	asr.w	r3, r2, r3
 8009d14:	f003 0301 	and.w	r3, r3, #1
 8009d18:	2b00      	cmp	r3, #0
 8009d1a:	d006      	beq.n	8009d2a <motor_calib_task+0xa2>
					bz_buzzer(1, i + 1);
 8009d1c:	7f7b      	ldrb	r3, [r7, #29]
 8009d1e:	3301      	adds	r3, #1
 8009d20:	b2db      	uxtb	r3, r3
 8009d22:	4619      	mov	r1, r3
 8009d24:	2001      	movs	r0, #1
 8009d26:	f7ff fe07 	bl	8009938 <bz_buzzer>
			for (uint8_t i = 0; i < 4; i++) {
 8009d2a:	7f7b      	ldrb	r3, [r7, #29]
 8009d2c:	3301      	adds	r3, #1
 8009d2e:	777b      	strb	r3, [r7, #29]
 8009d30:	7f7b      	ldrb	r3, [r7, #29]
 8009d32:	2b03      	cmp	r3, #3
 8009d34:	d9ea      	bls.n	8009d0c <motor_calib_task+0x84>
				} else {

				}
			}
			for (uint8_t i = 4; i < 7; i++) {
 8009d36:	2304      	movs	r3, #4
 8009d38:	77bb      	strb	r3, [r7, #30]
 8009d3a:	e011      	b.n	8009d60 <motor_calib_task+0xd8>
				if (error & (1 << (i))) {
 8009d3c:	8afa      	ldrh	r2, [r7, #22]
 8009d3e:	7fbb      	ldrb	r3, [r7, #30]
 8009d40:	fa42 f303 	asr.w	r3, r2, r3
 8009d44:	f003 0301 	and.w	r3, r3, #1
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	d006      	beq.n	8009d5a <motor_calib_task+0xd2>
					bz_buzzer(2, (i - 3));
 8009d4c:	7fbb      	ldrb	r3, [r7, #30]
 8009d4e:	3b03      	subs	r3, #3
 8009d50:	b2db      	uxtb	r3, r3
 8009d52:	4619      	mov	r1, r3
 8009d54:	2002      	movs	r0, #2
 8009d56:	f7ff fdef 	bl	8009938 <bz_buzzer>
			for (uint8_t i = 4; i < 7; i++) {
 8009d5a:	7fbb      	ldrb	r3, [r7, #30]
 8009d5c:	3301      	adds	r3, #1
 8009d5e:	77bb      	strb	r3, [r7, #30]
 8009d60:	7fbb      	ldrb	r3, [r7, #30]
 8009d62:	2b06      	cmp	r3, #6
 8009d64:	d9ea      	bls.n	8009d3c <motor_calib_task+0xb4>
				}
			}
			for (uint8_t i = 7; i < 9; i++) {
 8009d66:	2307      	movs	r3, #7
 8009d68:	77fb      	strb	r3, [r7, #31]
 8009d6a:	e011      	b.n	8009d90 <motor_calib_task+0x108>
				if (error & (1 << (i))) {
 8009d6c:	8afa      	ldrh	r2, [r7, #22]
 8009d6e:	7ffb      	ldrb	r3, [r7, #31]
 8009d70:	fa42 f303 	asr.w	r3, r2, r3
 8009d74:	f003 0301 	and.w	r3, r3, #1
 8009d78:	2b00      	cmp	r3, #0
 8009d7a:	d006      	beq.n	8009d8a <motor_calib_task+0x102>
					bz_buzzer(3, (i - 6));
 8009d7c:	7ffb      	ldrb	r3, [r7, #31]
 8009d7e:	3b06      	subs	r3, #6
 8009d80:	b2db      	uxtb	r3, r3
 8009d82:	4619      	mov	r1, r3
 8009d84:	2003      	movs	r0, #3
 8009d86:	f7ff fdd7 	bl	8009938 <bz_buzzer>
			for (uint8_t i = 7; i < 9; i++) {
 8009d8a:	7ffb      	ldrb	r3, [r7, #31]
 8009d8c:	3301      	adds	r3, #1
 8009d8e:	77fb      	strb	r3, [r7, #31]
 8009d90:	7ffb      	ldrb	r3, [r7, #31]
 8009d92:	2b08      	cmp	r3, #8
 8009d94:	d9ea      	bls.n	8009d6c <motor_calib_task+0xe4>
				}
			}
		}

		vTaskDelay(1000);
 8009d96:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8009d9a:	f00e fb97 	bl	80184cc <vTaskDelay>
	while (1) {
 8009d9e:	e79c      	b.n	8009cda <motor_calib_task+0x52>
 8009da0:	200008e4 	.word	0x200008e4
 8009da4:	2000090c 	.word	0x2000090c
 8009da8:	200037d4 	.word	0x200037d4
 8009dac:	200037d8 	.word	0x200037d8

08009db0 <speed_pid>:
 *
 * @param setpoint target RPM
 * @param motor's current RPM
 * @param *pid pointer to the rpm_pid struct within the motor's data struct
 */
void speed_pid(double setpoint, double curr_pt, pid_data_t *pid) {
 8009db0:	b580      	push	{r7, lr}
 8009db2:	b08a      	sub	sp, #40	@ 0x28
 8009db4:	af00      	add	r7, sp, #0
 8009db6:	ed87 0b04 	vstr	d0, [r7, #16]
 8009dba:	ed87 1b02 	vstr	d1, [r7, #8]
 8009dbe:	6078      	str	r0, [r7, #4]
	pid->last_time[1] = pid->last_time[0];
 8009dc0:	687b      	ldr	r3, [r7, #4]
 8009dc2:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009dc4:	687b      	ldr	r3, [r7, #4]
 8009dc6:	62da      	str	r2, [r3, #44]	@ 0x2c
	pid->last_time[0] = get_microseconds();
 8009dc8:	f7f8 f9fa 	bl	80021c0 <get_microseconds>
 8009dcc:	4602      	mov	r2, r0
 8009dce:	687b      	ldr	r3, [r7, #4]
 8009dd0:	629a      	str	r2, [r3, #40]	@ 0x28
	/*
	if (pid->last_time[1]>= pid->last_time[0]) {
		return;
	} */
	uint32_t time_mult = 1;//TIMER_FREQ / (float) (pid->last_time[0] - pid->last_time[1]);
 8009dd2:	2301      	movs	r3, #1
 8009dd4:	627b      	str	r3, [r7, #36]	@ 0x24
	float Pout = 0;
 8009dd6:	f04f 0300 	mov.w	r3, #0
 8009dda:	623b      	str	r3, [r7, #32]
	float Iout = 0;
 8009ddc:	f04f 0300 	mov.w	r3, #0
 8009de0:	61fb      	str	r3, [r7, #28]
	float Dout = 0;
 8009de2:	f04f 0300 	mov.w	r3, #0
 8009de6:	61bb      	str	r3, [r7, #24]

	pid->error[1] = pid->error[0];
 8009de8:	687b      	ldr	r3, [r7, #4]
 8009dea:	68da      	ldr	r2, [r3, #12]
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	611a      	str	r2, [r3, #16]
	pid->error[0] = setpoint - curr_pt;
 8009df0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8009df4:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8009df8:	f7f6 fa46 	bl	8000288 <__aeabi_dsub>
 8009dfc:	4602      	mov	r2, r0
 8009dfe:	460b      	mov	r3, r1
 8009e00:	4610      	mov	r0, r2
 8009e02:	4619      	mov	r1, r3
 8009e04:	f7f6 fef0 	bl	8000be8 <__aeabi_d2f>
 8009e08:	4602      	mov	r2, r0
 8009e0a:	687b      	ldr	r3, [r7, #4]
 8009e0c:	60da      	str	r2, [r3, #12]
	Pout = pid->error[0] * pid->kp * time_mult;
 8009e0e:	687b      	ldr	r3, [r7, #4]
 8009e10:	ed93 7a03 	vldr	s14, [r3, #12]
 8009e14:	687b      	ldr	r3, [r7, #4]
 8009e16:	edd3 7a00 	vldr	s15, [r3]
 8009e1a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8009e1e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009e20:	ee07 3a90 	vmov	s15, r3
 8009e24:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e28:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009e2c:	edc7 7a08 	vstr	s15, [r7, #32]
	Dout = (float)(pid->error[0] - pid->error[1]) * pid->kd * time_mult;
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	ed93 7a03 	vldr	s14, [r3, #12]
 8009e36:	687b      	ldr	r3, [r7, #4]
 8009e38:	edd3 7a04 	vldr	s15, [r3, #16]
 8009e3c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	edd3 7a02 	vldr	s15, [r3, #8]
 8009e46:	ee27 7a27 	vmul.f32	s14, s14, s15
 8009e4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009e4c:	ee07 3a90 	vmov	s15, r3
 8009e50:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e54:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009e58:	edc7 7a06 	vstr	s15, [r7, #24]
	pid->integral += pid->error[0] * pid->ki * time_mult;
 8009e5c:	687b      	ldr	r3, [r7, #4]
 8009e5e:	ed93 7a05 	vldr	s14, [r3, #20]
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	edd3 6a03 	vldr	s13, [r3, #12]
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	edd3 7a01 	vldr	s15, [r3, #4]
 8009e6e:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8009e72:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009e74:	ee07 3a90 	vmov	s15, r3
 8009e78:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e7c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8009e80:	ee77 7a27 	vadd.f32	s15, s14, s15
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	edc3 7a05 	vstr	s15, [r3, #20]
	float_minmax(&pid->integral, pid->int_max, 0);
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	f103 0214 	add.w	r2, r3, #20
 8009e90:	687b      	ldr	r3, [r7, #4]
 8009e92:	edd3 7a06 	vldr	s15, [r3, #24]
 8009e96:	eddf 0a14 	vldr	s1, [pc, #80]	@ 8009ee8 <speed_pid+0x138>
 8009e9a:	eeb0 0a67 	vmov.f32	s0, s15
 8009e9e:	4610      	mov	r0, r2
 8009ea0:	f000 f82b 	bl	8009efa <float_minmax>
	Iout = pid->integral;
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	695b      	ldr	r3, [r3, #20]
 8009ea8:	61fb      	str	r3, [r7, #28]
	pid->output = Pout + Iout + Dout;
 8009eaa:	ed97 7a08 	vldr	s14, [r7, #32]
 8009eae:	edd7 7a07 	vldr	s15, [r7, #28]
 8009eb2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8009eb6:	edd7 7a06 	vldr	s15, [r7, #24]
 8009eba:	ee77 7a27 	vadd.f32	s15, s14, s15
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	edc3 7a08 	vstr	s15, [r3, #32]
	float_minmax(&pid->output, pid->max_out, 0);
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	f103 0220 	add.w	r2, r3, #32
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	edd3 7a07 	vldr	s15, [r3, #28]
 8009ed0:	eddf 0a05 	vldr	s1, [pc, #20]	@ 8009ee8 <speed_pid+0x138>
 8009ed4:	eeb0 0a67 	vmov.f32	s0, s15
 8009ed8:	4610      	mov	r0, r2
 8009eda:	f000 f80e 	bl	8009efa <float_minmax>
}
 8009ede:	bf00      	nop
 8009ee0:	3728      	adds	r7, #40	@ 0x28
 8009ee2:	46bd      	mov	sp, r7
 8009ee4:	bd80      	pop	{r7, pc}
 8009ee6:	bf00      	nop
 8009ee8:	00000000 	.word	0x00000000

08009eec <kill_can>:
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
	}
#endif
}

void kill_can() {
 8009eec:	b480      	push	{r7}
 8009eee:	af00      	add	r7, sp, #0

}
 8009ef0:	bf00      	nop
 8009ef2:	46bd      	mov	sp, r7
 8009ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ef8:	4770      	bx	lr

08009efa <float_minmax>:
 * Limits the input float variable
 * @params motor_in: the pointer to the variable to be limited
 * @params motor_max: the positive maximum value for the variable
 */

void float_minmax(float *motor_in, float motor_max, float motor_min) {
 8009efa:	b480      	push	{r7}
 8009efc:	b085      	sub	sp, #20
 8009efe:	af00      	add	r7, sp, #0
 8009f00:	60f8      	str	r0, [r7, #12]
 8009f02:	ed87 0a02 	vstr	s0, [r7, #8]
 8009f06:	edc7 0a01 	vstr	s1, [r7, #4]
	if (*motor_in > motor_max) {
 8009f0a:	68fb      	ldr	r3, [r7, #12]
 8009f0c:	edd3 7a00 	vldr	s15, [r3]
 8009f10:	ed97 7a02 	vldr	s14, [r7, #8]
 8009f14:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009f18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f1c:	d503      	bpl.n	8009f26 <float_minmax+0x2c>
		*motor_in = motor_max;
 8009f1e:	68fb      	ldr	r3, [r7, #12]
 8009f20:	68ba      	ldr	r2, [r7, #8]
 8009f22:	601a      	str	r2, [r3, #0]

//	if (fabs(*motor_in) < motor_min) {
//		*motor_in = 0;
//	}

}
 8009f24:	e013      	b.n	8009f4e <float_minmax+0x54>
	} else if (*motor_in < -motor_max) {
 8009f26:	68fb      	ldr	r3, [r7, #12]
 8009f28:	ed93 7a00 	vldr	s14, [r3]
 8009f2c:	edd7 7a02 	vldr	s15, [r7, #8]
 8009f30:	eef1 7a67 	vneg.f32	s15, s15
 8009f34:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f3c:	d400      	bmi.n	8009f40 <float_minmax+0x46>
}
 8009f3e:	e006      	b.n	8009f4e <float_minmax+0x54>
		*motor_in = -motor_max;
 8009f40:	edd7 7a02 	vldr	s15, [r7, #8]
 8009f44:	eef1 7a67 	vneg.f32	s15, s15
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	edc3 7a00 	vstr	s15, [r3]
}
 8009f4e:	bf00      	nop
 8009f50:	3714      	adds	r7, #20
 8009f52:	46bd      	mov	sp, r7
 8009f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f58:	4770      	bx	lr
	...

08009f5c <motor_control_task>:
extern QueueHandle_t g_buzzing_task_msg;
extern remote_cmd_t g_remote_cmd;

extern uint8_t g_safety_toggle;
volatile uint32_t g_motor_control_time;
void motor_control_task(void *argument) {
 8009f5c:	b580      	push	{r7, lr}
 8009f5e:	b090      	sub	sp, #64	@ 0x40
 8009f60:	af00      	add	r7, sp, #0
 8009f62:	6078      	str	r0, [r7, #4]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 8009f64:	2300      	movs	r3, #0
 8009f66:	627b      	str	r3, [r7, #36]	@ 0x24
	CAN_tx_message.RTR = CAN_RTR_DATA;
 8009f68:	2300      	movs	r3, #0
 8009f6a:	62bb      	str	r3, [r7, #40]	@ 0x28
	CAN_tx_message.DLC = 0x08;
 8009f6c:	2308      	movs	r3, #8
 8009f6e:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t enabled_motors = 0;
 8009f70:	2300      	movs	r3, #0
 8009f72:	63bb      	str	r3, [r7, #56]	@ 0x38
	//initialise motor data
#ifdef LEFT_MOTOR_ID
	if (LEFT_MOTOR_ID < 25 && LEFT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LEFT_MOTOR_ID - 1);
 8009f74:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f76:	f043 0301 	orr.w	r3, r3, #1
 8009f7a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RIGHT_MOTOR_ID
	if (RIGHT_MOTOR_ID < 25 && RIGHT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RIGHT_MOTOR_ID - 1);
 8009f7c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f7e:	f043 0302 	orr.w	r3, r3, #2
 8009f82:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
#ifdef FR_MOTOR_ID
	if (FR_MOTOR_ID < 25 && FR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FR_MOTOR_ID - 1);
 8009f84:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f86:	f043 0310 	orr.w	r3, r3, #16
 8009f8a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FL_MOTOR_ID
	if (FL_MOTOR_ID < 25 && FL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FL_MOTOR_ID - 1);
 8009f8c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f8e:	f043 0320 	orr.w	r3, r3, #32
 8009f92:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BL_MOTOR_ID
	if (BL_MOTOR_ID < 25 && BL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BL_MOTOR_ID - 1);
 8009f94:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f96:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009f9a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BR_MOTOR_ID
	if (BR_MOTOR_ID < 25 && BR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BR_MOTOR_ID - 1);
 8009f9c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f9e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009fa2:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef LFRICTION_MOTOR_ID
	if (LFRICTION_MOTOR_ID < 25 && LFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LFRICTION_MOTOR_ID - 1);
 8009fa4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009fa6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009faa:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RFRICTION_MOTOR_ID
	if (RFRICTION_MOTOR_ID < 25 && RFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RFRICTION_MOTOR_ID - 1);
 8009fac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009fae:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8009fb2:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FEEDER_MOTOR_ID
	if (FEEDER_MOTOR_ID < 25 && FEEDER_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FEEDER_MOTOR_ID - 1);
 8009fb4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009fb6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8009fba:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef PITCH_MOTOR_ID
	if (PITCH_MOTOR_ID < 25 && PITCH_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (PITCH_MOTOR_ID - 1);
 8009fbc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009fbe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8009fc2:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef YAW_MOTOR_ID
	if (YAW_MOTOR_ID < 25 && YAW_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (YAW_MOTOR_ID - 1);
 8009fc4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009fc6:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8009fca:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
	TickType_t start_time;
//	uint32_t last_time;
	while (1) {
		start_time = xTaskGetTickCount();
 8009fcc:	f00e fbd2 	bl	8018774 <xTaskGetTickCount>
 8009fd0:	4603      	mov	r3, r0
 8009fd2:	60fb      	str	r3, [r7, #12]
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8009fd4:	4b30      	ldr	r3, [pc, #192]	@ (800a098 <motor_control_task+0x13c>)
 8009fd6:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8009fda:	2b01      	cmp	r3, #1
 8009fdc:	d162      	bne.n	800a0a4 <motor_control_task+0x148>
			CAN_send_data[0] = 0;
 8009fde:	2300      	movs	r3, #0
 8009fe0:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = 0;
 8009fe2:	2300      	movs	r3, #0
 8009fe4:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = 0;
 8009fe6:	2300      	movs	r3, #0
 8009fe8:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = 0;
 8009fea:	2300      	movs	r3, #0
 8009fec:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = 0;
 8009fee:	2300      	movs	r3, #0
 8009ff0:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = 0;
 8009ff2:	2300      	movs	r3, #0
 8009ff4:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = 0;
 8009ff6:	2300      	movs	r3, #0
 8009ff8:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = 0;
 8009ffa:	2300      	movs	r3, #0
 8009ffc:	76fb      	strb	r3, [r7, #27]
			CAN_tx_message.StdId = 0x200;
 8009ffe:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800a002:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a004:	f107 0310 	add.w	r3, r7, #16
 800a008:	f107 0214 	add.w	r2, r7, #20
 800a00c:	f107 011c 	add.w	r1, r7, #28
 800a010:	4822      	ldr	r0, [pc, #136]	@ (800a09c <motor_control_task+0x140>)
 800a012:	f001 fd47 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a016:	f107 0310 	add.w	r3, r7, #16
 800a01a:	f107 0214 	add.w	r2, r7, #20
 800a01e:	f107 011c 	add.w	r1, r7, #28
 800a022:	481f      	ldr	r0, [pc, #124]	@ (800a0a0 <motor_control_task+0x144>)
 800a024:	f001 fd3e 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);
 800a028:	2001      	movs	r0, #1
 800a02a:	f00e fa4f 	bl	80184cc <vTaskDelay>
			CAN_tx_message.StdId = 0x1FF;
 800a02e:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a032:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a034:	f107 0310 	add.w	r3, r7, #16
 800a038:	f107 0214 	add.w	r2, r7, #20
 800a03c:	f107 011c 	add.w	r1, r7, #28
 800a040:	4816      	ldr	r0, [pc, #88]	@ (800a09c <motor_control_task+0x140>)
 800a042:	f001 fd2f 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a046:	f107 0310 	add.w	r3, r7, #16
 800a04a:	f107 0214 	add.w	r2, r7, #20
 800a04e:	f107 011c 	add.w	r1, r7, #28
 800a052:	4813      	ldr	r0, [pc, #76]	@ (800a0a0 <motor_control_task+0x144>)
 800a054:	f001 fd26 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);;
 800a058:	2001      	movs	r0, #1
 800a05a:	f00e fa37 	bl	80184cc <vTaskDelay>
			CAN_tx_message.StdId = 0x2FF;
 800a05e:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a062:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a064:	f107 0310 	add.w	r3, r7, #16
 800a068:	f107 0214 	add.w	r2, r7, #20
 800a06c:	f107 011c 	add.w	r1, r7, #28
 800a070:	480a      	ldr	r0, [pc, #40]	@ (800a09c <motor_control_task+0x140>)
 800a072:	f001 fd17 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a076:	f107 0310 	add.w	r3, r7, #16
 800a07a:	f107 0214 	add.w	r2, r7, #20
 800a07e:	f107 011c 	add.w	r1, r7, #28
 800a082:	4807      	ldr	r0, [pc, #28]	@ (800a0a0 <motor_control_task+0x144>)
 800a084:	f001 fd0e 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelayUntil(&start_time, 5);
 800a088:	f107 030c 	add.w	r3, r7, #12
 800a08c:	2105      	movs	r1, #5
 800a08e:	4618      	mov	r0, r3
 800a090:	f00e f99c 	bl	80183cc <vTaskDelayUntil>
			continue;
 800a094:	e1dd      	b.n	800a452 <motor_control_task+0x4f6>
 800a096:	bf00      	nop
 800a098:	20000808 	.word	0x20000808
 800a09c:	200008e4 	.word	0x200008e4
 800a0a0:	2000090c 	.word	0x2000090c
		}
		TickType_t delay = 0;
 800a0a4:	2300      	movs	r3, #0
 800a0a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
		if (enabled_motors & 0x00000F) {
 800a0a8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a0aa:	f003 030f 	and.w	r3, r3, #15
 800a0ae:	2b00      	cmp	r3, #0
 800a0b0:	d042      	beq.n	800a138 <motor_control_task+0x1dc>
			CAN_tx_message.StdId = 0x200;
 800a0b2:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800a0b6:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x0].output;
 800a0b8:	4bb3      	ldr	r3, [pc, #716]	@ (800a388 <motor_control_task+0x42c>)
 800a0ba:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	@ 0xe0
 800a0be:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a0c0:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0c4:	121b      	asrs	r3, r3, #8
 800a0c6:	b21b      	sxth	r3, r3
 800a0c8:	b2db      	uxtb	r3, r3
 800a0ca:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a0cc:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a0ce:	b2db      	uxtb	r3, r3
 800a0d0:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x1].output;
 800a0d2:	4bad      	ldr	r3, [pc, #692]	@ (800a388 <motor_control_task+0x42c>)
 800a0d4:	f8b3 31d0 	ldrh.w	r3, [r3, #464]	@ 0x1d0
 800a0d8:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a0da:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0de:	121b      	asrs	r3, r3, #8
 800a0e0:	b21b      	sxth	r3, r3
 800a0e2:	b2db      	uxtb	r3, r3
 800a0e4:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a0e6:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a0e8:	b2db      	uxtb	r3, r3
 800a0ea:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x2].output;
 800a0ec:	4ba6      	ldr	r3, [pc, #664]	@ (800a388 <motor_control_task+0x42c>)
 800a0ee:	f8b3 32c0 	ldrh.w	r3, [r3, #704]	@ 0x2c0
 800a0f2:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a0f4:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0f8:	121b      	asrs	r3, r3, #8
 800a0fa:	b21b      	sxth	r3, r3
 800a0fc:	b2db      	uxtb	r3, r3
 800a0fe:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a100:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a102:	b2db      	uxtb	r3, r3
 800a104:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x3].output;
 800a106:	4ba0      	ldr	r3, [pc, #640]	@ (800a388 <motor_control_task+0x42c>)
 800a108:	f8b3 33b0 	ldrh.w	r3, [r3, #944]	@ 0x3b0
 800a10c:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a10e:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a112:	121b      	asrs	r3, r3, #8
 800a114:	b21b      	sxth	r3, r3
 800a116:	b2db      	uxtb	r3, r3
 800a118:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a11a:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a11c:	b2db      	uxtb	r3, r3
 800a11e:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a120:	f107 0310 	add.w	r3, r7, #16
 800a124:	f107 0214 	add.w	r2, r7, #20
 800a128:	f107 011c 	add.w	r1, r7, #28
 800a12c:	4897      	ldr	r0, [pc, #604]	@ (800a38c <motor_control_task+0x430>)
 800a12e:	f001 fcb9 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a132:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a134:	3301      	adds	r3, #1
 800a136:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		if (enabled_motors & 0x00F000) {
 800a138:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a13a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800a13e:	2b00      	cmp	r3, #0
 800a140:	d03e      	beq.n	800a1c0 <motor_control_task+0x264>
			CAN_tx_message.StdId = 0x200;
 800a142:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800a146:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x0 + 12].output >> 8;
 800a148:	4b8f      	ldr	r3, [pc, #572]	@ (800a388 <motor_control_task+0x42c>)
 800a14a:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800a14e:	121b      	asrs	r3, r3, #8
 800a150:	b21b      	sxth	r3, r3
 800a152:	b2db      	uxtb	r3, r3
 800a154:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x0 + 12].output;
 800a156:	4b8c      	ldr	r3, [pc, #560]	@ (800a388 <motor_control_task+0x42c>)
 800a158:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800a15c:	b2db      	uxtb	r3, r3
 800a15e:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x1 + 12].output >> 8;
 800a160:	4b89      	ldr	r3, [pc, #548]	@ (800a388 <motor_control_task+0x42c>)
 800a162:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800a166:	121b      	asrs	r3, r3, #8
 800a168:	b21b      	sxth	r3, r3
 800a16a:	b2db      	uxtb	r3, r3
 800a16c:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x1 + 12].output;
 800a16e:	4b86      	ldr	r3, [pc, #536]	@ (800a388 <motor_control_task+0x42c>)
 800a170:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800a174:	b2db      	uxtb	r3, r3
 800a176:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x2 + 12].output >> 8;
 800a178:	4b83      	ldr	r3, [pc, #524]	@ (800a388 <motor_control_task+0x42c>)
 800a17a:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800a17e:	121b      	asrs	r3, r3, #8
 800a180:	b21b      	sxth	r3, r3
 800a182:	b2db      	uxtb	r3, r3
 800a184:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x2 + 12].output;
 800a186:	4b80      	ldr	r3, [pc, #512]	@ (800a388 <motor_control_task+0x42c>)
 800a188:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800a18c:	b2db      	uxtb	r3, r3
 800a18e:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x3 + 12].output >> 8;
 800a190:	4b7d      	ldr	r3, [pc, #500]	@ (800a388 <motor_control_task+0x42c>)
 800a192:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800a196:	121b      	asrs	r3, r3, #8
 800a198:	b21b      	sxth	r3, r3
 800a19a:	b2db      	uxtb	r3, r3
 800a19c:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x3 + 12].output;
 800a19e:	4b7a      	ldr	r3, [pc, #488]	@ (800a388 <motor_control_task+0x42c>)
 800a1a0:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800a1a4:	b2db      	uxtb	r3, r3
 800a1a6:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a1a8:	f107 0310 	add.w	r3, r7, #16
 800a1ac:	f107 0214 	add.w	r2, r7, #20
 800a1b0:	f107 011c 	add.w	r1, r7, #28
 800a1b4:	4876      	ldr	r0, [pc, #472]	@ (800a390 <motor_control_task+0x434>)
 800a1b6:	f001 fc75 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a1ba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a1bc:	3301      	adds	r3, #1
 800a1be:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}

		vTaskDelay(1);
 800a1c0:	2001      	movs	r0, #1
 800a1c2:	f00e f983 	bl	80184cc <vTaskDelay>

		if (enabled_motors & 0x0000F0) {
 800a1c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a1c8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800a1cc:	2b00      	cmp	r3, #0
 800a1ce:	d042      	beq.n	800a256 <motor_control_task+0x2fa>
			CAN_tx_message.StdId = 0x1FF;
 800a1d0:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a1d4:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x4].output;
 800a1d6:	4b6c      	ldr	r3, [pc, #432]	@ (800a388 <motor_control_task+0x42c>)
 800a1d8:	f8b3 34a0 	ldrh.w	r3, [r3, #1184]	@ 0x4a0
 800a1dc:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a1de:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a1e2:	121b      	asrs	r3, r3, #8
 800a1e4:	b21b      	sxth	r3, r3
 800a1e6:	b2db      	uxtb	r3, r3
 800a1e8:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a1ea:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a1ec:	b2db      	uxtb	r3, r3
 800a1ee:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x5].output;
 800a1f0:	4b65      	ldr	r3, [pc, #404]	@ (800a388 <motor_control_task+0x42c>)
 800a1f2:	f8b3 3590 	ldrh.w	r3, [r3, #1424]	@ 0x590
 800a1f6:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a1f8:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a1fc:	121b      	asrs	r3, r3, #8
 800a1fe:	b21b      	sxth	r3, r3
 800a200:	b2db      	uxtb	r3, r3
 800a202:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a204:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a206:	b2db      	uxtb	r3, r3
 800a208:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x6].output;
 800a20a:	4b5f      	ldr	r3, [pc, #380]	@ (800a388 <motor_control_task+0x42c>)
 800a20c:	f8b3 3680 	ldrh.w	r3, [r3, #1664]	@ 0x680
 800a210:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a212:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a216:	121b      	asrs	r3, r3, #8
 800a218:	b21b      	sxth	r3, r3
 800a21a:	b2db      	uxtb	r3, r3
 800a21c:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a21e:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a220:	b2db      	uxtb	r3, r3
 800a222:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x7].output;
 800a224:	4b58      	ldr	r3, [pc, #352]	@ (800a388 <motor_control_task+0x42c>)
 800a226:	f8b3 3770 	ldrh.w	r3, [r3, #1904]	@ 0x770
 800a22a:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a22c:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a230:	121b      	asrs	r3, r3, #8
 800a232:	b21b      	sxth	r3, r3
 800a234:	b2db      	uxtb	r3, r3
 800a236:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a238:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a23a:	b2db      	uxtb	r3, r3
 800a23c:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a23e:	f107 0310 	add.w	r3, r7, #16
 800a242:	f107 0214 	add.w	r2, r7, #20
 800a246:	f107 011c 	add.w	r1, r7, #28
 800a24a:	4850      	ldr	r0, [pc, #320]	@ (800a38c <motor_control_task+0x430>)
 800a24c:	f001 fc2a 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a250:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a252:	3301      	adds	r3, #1
 800a254:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x0F0000) {
 800a256:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a258:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 800a25c:	2b00      	cmp	r3, #0
 800a25e:	d04a      	beq.n	800a2f6 <motor_control_task+0x39a>
			CAN_tx_message.StdId = 0x1FF;
 800a260:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a264:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x4 + 12].output >> 8;
 800a266:	4b48      	ldr	r3, [pc, #288]	@ (800a388 <motor_control_task+0x42c>)
 800a268:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800a26c:	121b      	asrs	r3, r3, #8
 800a26e:	b21b      	sxth	r3, r3
 800a270:	b2db      	uxtb	r3, r3
 800a272:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x4 + 12].output;
 800a274:	4b44      	ldr	r3, [pc, #272]	@ (800a388 <motor_control_task+0x42c>)
 800a276:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800a27a:	b2db      	uxtb	r3, r3
 800a27c:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x5 + 12].output >> 8;
 800a27e:	4b42      	ldr	r3, [pc, #264]	@ (800a388 <motor_control_task+0x42c>)
 800a280:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a284:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800a288:	121b      	asrs	r3, r3, #8
 800a28a:	b21b      	sxth	r3, r3
 800a28c:	b2db      	uxtb	r3, r3
 800a28e:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x5 + 12].output;
 800a290:	4b3d      	ldr	r3, [pc, #244]	@ (800a388 <motor_control_task+0x42c>)
 800a292:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a296:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800a29a:	b2db      	uxtb	r3, r3
 800a29c:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x6 + 12].output >> 8;
 800a29e:	4b3a      	ldr	r3, [pc, #232]	@ (800a388 <motor_control_task+0x42c>)
 800a2a0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2a4:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800a2a8:	121b      	asrs	r3, r3, #8
 800a2aa:	b21b      	sxth	r3, r3
 800a2ac:	b2db      	uxtb	r3, r3
 800a2ae:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x6 + 12].output;
 800a2b0:	4b35      	ldr	r3, [pc, #212]	@ (800a388 <motor_control_task+0x42c>)
 800a2b2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2b6:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800a2ba:	b2db      	uxtb	r3, r3
 800a2bc:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x7 + 12].output >> 8;
 800a2be:	4b32      	ldr	r3, [pc, #200]	@ (800a388 <motor_control_task+0x42c>)
 800a2c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2c4:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800a2c8:	121b      	asrs	r3, r3, #8
 800a2ca:	b21b      	sxth	r3, r3
 800a2cc:	b2db      	uxtb	r3, r3
 800a2ce:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x7 + 12].output;
 800a2d0:	4b2d      	ldr	r3, [pc, #180]	@ (800a388 <motor_control_task+0x42c>)
 800a2d2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2d6:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800a2da:	b2db      	uxtb	r3, r3
 800a2dc:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a2de:	f107 0310 	add.w	r3, r7, #16
 800a2e2:	f107 0214 	add.w	r2, r7, #20
 800a2e6:	f107 011c 	add.w	r1, r7, #28
 800a2ea:	4829      	ldr	r0, [pc, #164]	@ (800a390 <motor_control_task+0x434>)
 800a2ec:	f001 fbda 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a2f0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a2f2:	3301      	adds	r3, #1
 800a2f4:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x000F00) {
 800a2f6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a2f8:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800a2fc:	2b00      	cmp	r3, #0
 800a2fe:	d049      	beq.n	800a394 <motor_control_task+0x438>
			CAN_tx_message.StdId = 0x2FF;
 800a300:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a304:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x8].output;
 800a306:	4b20      	ldr	r3, [pc, #128]	@ (800a388 <motor_control_task+0x42c>)
 800a308:	f8b3 3860 	ldrh.w	r3, [r3, #2144]	@ 0x860
 800a30c:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a30e:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a312:	121b      	asrs	r3, r3, #8
 800a314:	b21b      	sxth	r3, r3
 800a316:	b2db      	uxtb	r3, r3
 800a318:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a31a:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a31c:	b2db      	uxtb	r3, r3
 800a31e:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x9].output;
 800a320:	4b19      	ldr	r3, [pc, #100]	@ (800a388 <motor_control_task+0x42c>)
 800a322:	f8b3 3950 	ldrh.w	r3, [r3, #2384]	@ 0x950
 800a326:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a328:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a32c:	121b      	asrs	r3, r3, #8
 800a32e:	b21b      	sxth	r3, r3
 800a330:	b2db      	uxtb	r3, r3
 800a332:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a334:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a336:	b2db      	uxtb	r3, r3
 800a338:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0xA].output;
 800a33a:	4b13      	ldr	r3, [pc, #76]	@ (800a388 <motor_control_task+0x42c>)
 800a33c:	f8b3 3a40 	ldrh.w	r3, [r3, #2624]	@ 0xa40
 800a340:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a342:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a346:	121b      	asrs	r3, r3, #8
 800a348:	b21b      	sxth	r3, r3
 800a34a:	b2db      	uxtb	r3, r3
 800a34c:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a34e:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a350:	b2db      	uxtb	r3, r3
 800a352:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0xB].output;
 800a354:	4b0c      	ldr	r3, [pc, #48]	@ (800a388 <motor_control_task+0x42c>)
 800a356:	f8b3 3b30 	ldrh.w	r3, [r3, #2864]	@ 0xb30
 800a35a:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a35c:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a360:	121b      	asrs	r3, r3, #8
 800a362:	b21b      	sxth	r3, r3
 800a364:	b2db      	uxtb	r3, r3
 800a366:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a368:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a36a:	b2db      	uxtb	r3, r3
 800a36c:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a36e:	f107 0310 	add.w	r3, r7, #16
 800a372:	f107 0214 	add.w	r2, r7, #20
 800a376:	f107 011c 	add.w	r1, r7, #28
 800a37a:	4804      	ldr	r0, [pc, #16]	@ (800a38c <motor_control_task+0x430>)
 800a37c:	f001 fb92 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a380:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a382:	3301      	adds	r3, #1
 800a384:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a386:	e005      	b.n	800a394 <motor_control_task+0x438>
 800a388:	20001e48 	.word	0x20001e48
 800a38c:	200008e4 	.word	0x200008e4
 800a390:	2000090c 	.word	0x2000090c
		}

		if (enabled_motors & 0xF00000) {
 800a394:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a396:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 800a39a:	2b00      	cmp	r3, #0
 800a39c:	d04e      	beq.n	800a43c <motor_control_task+0x4e0>
			CAN_tx_message.StdId = 0x2FF;
 800a39e:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a3a2:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x8 + 12].output >> 8;
 800a3a4:	4b2b      	ldr	r3, [pc, #172]	@ (800a454 <motor_control_task+0x4f8>)
 800a3a6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a3aa:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800a3ae:	121b      	asrs	r3, r3, #8
 800a3b0:	b21b      	sxth	r3, r3
 800a3b2:	b2db      	uxtb	r3, r3
 800a3b4:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x8 + 12].output;
 800a3b6:	4b27      	ldr	r3, [pc, #156]	@ (800a454 <motor_control_task+0x4f8>)
 800a3b8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a3bc:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800a3c0:	b2db      	uxtb	r3, r3
 800a3c2:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] =  g_can_motors[0x9 + 12].output >> 8;
 800a3c4:	4b23      	ldr	r3, [pc, #140]	@ (800a454 <motor_control_task+0x4f8>)
 800a3c6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a3ca:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800a3ce:	121b      	asrs	r3, r3, #8
 800a3d0:	b21b      	sxth	r3, r3
 800a3d2:	b2db      	uxtb	r3, r3
 800a3d4:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] =  g_can_motors[0x9 + 12].output;
 800a3d6:	4b1f      	ldr	r3, [pc, #124]	@ (800a454 <motor_control_task+0x4f8>)
 800a3d8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a3dc:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800a3e0:	b2db      	uxtb	r3, r3
 800a3e2:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0xA + 12].output >> 8;
 800a3e4:	4b1b      	ldr	r3, [pc, #108]	@ (800a454 <motor_control_task+0x4f8>)
 800a3e6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a3ea:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800a3ee:	121b      	asrs	r3, r3, #8
 800a3f0:	b21b      	sxth	r3, r3
 800a3f2:	b2db      	uxtb	r3, r3
 800a3f4:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0xA + 12].output;
 800a3f6:	4b17      	ldr	r3, [pc, #92]	@ (800a454 <motor_control_task+0x4f8>)
 800a3f8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a3fc:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800a400:	b2db      	uxtb	r3, r3
 800a402:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0xB + 12].output >> 8;
 800a404:	4b13      	ldr	r3, [pc, #76]	@ (800a454 <motor_control_task+0x4f8>)
 800a406:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a40a:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800a40e:	121b      	asrs	r3, r3, #8
 800a410:	b21b      	sxth	r3, r3
 800a412:	b2db      	uxtb	r3, r3
 800a414:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0xB + 12].output;
 800a416:	4b0f      	ldr	r3, [pc, #60]	@ (800a454 <motor_control_task+0x4f8>)
 800a418:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a41c:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800a420:	b2db      	uxtb	r3, r3
 800a422:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a424:	f107 0310 	add.w	r3, r7, #16
 800a428:	f107 0214 	add.w	r2, r7, #20
 800a42c:	f107 011c 	add.w	r1, r7, #28
 800a430:	4809      	ldr	r0, [pc, #36]	@ (800a458 <motor_control_task+0x4fc>)
 800a432:	f001 fb37 	bl	800baa4 <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a436:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a438:	3301      	adds	r3, #1
 800a43a:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		delay = (delay > 5) ? delay : 5;
 800a43c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a43e:	2b05      	cmp	r3, #5
 800a440:	bf38      	it	cc
 800a442:	2305      	movcc	r3, #5
 800a444:	63fb      	str	r3, [r7, #60]	@ 0x3c
//		last_time = get_microseconds();
		vTaskDelayUntil(&start_time, 2);
 800a446:	f107 030c 	add.w	r3, r7, #12
 800a44a:	2102      	movs	r1, #2
 800a44c:	4618      	mov	r0, r3
 800a44e:	f00d ffbd 	bl	80183cc <vTaskDelayUntil>
	while (1) {
 800a452:	e5bb      	b.n	8009fcc <motor_control_task+0x70>
 800a454:	20001e48 	.word	0x20001e48
 800a458:	2000090c 	.word	0x2000090c
 800a45c:	00000000 	.word	0x00000000

0800a460 <motors_process_task>:
double rev[24] = {0};
extern float motorOutRatio;



void motors_process_task(void *argument) {
 800a460:	b5b0      	push	{r4, r5, r7, lr}
 800a462:	b08e      	sub	sp, #56	@ 0x38
 800a464:	af00      	add	r7, sp, #0
 800a466:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800a468:	f04f 0200 	mov.w	r2, #0
 800a46c:	f04f 0300 	mov.w	r3, #0
 800a470:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
	double endtime = 0;
 800a474:	f04f 0200 	mov.w	r2, #0
 800a478:	f04f 0300 	mov.w	r3, #0
 800a47c:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
	double dt;
	vTaskDelay(5);
 800a480:	2005      	movs	r0, #5
 800a482:	f00e f823 	bl	80184cc <vTaskDelay>
	double leftWheel_offset = (double)g_can_motors[1].raw_data.angle[0];
 800a486:	4b7c      	ldr	r3, [pc, #496]	@ (800a678 <motors_process_task+0x218>)
 800a488:	f9b3 30f4 	ldrsh.w	r3, [r3, #244]	@ 0xf4
 800a48c:	4618      	mov	r0, r3
 800a48e:	f7f6 f849 	bl	8000524 <__aeabi_i2d>
 800a492:	4602      	mov	r2, r0
 800a494:	460b      	mov	r3, r1
 800a496:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double rightWheel_offset = (double)g_can_motors[0].raw_data.angle[0];
 800a49a:	4b77      	ldr	r3, [pc, #476]	@ (800a678 <motors_process_task+0x218>)
 800a49c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800a4a0:	4618      	mov	r0, r3
 800a4a2:	f7f6 f83f 	bl	8000524 <__aeabi_i2d>
 800a4a6:	4602      	mov	r2, r0
 800a4a8:	460b      	mov	r3, r1
 800a4aa:	e9c7 2306 	strd	r2, r3, [r7, #24]
	g_can_motors[1].rpm_pid.kp = 5000;
 800a4ae:	4b72      	ldr	r3, [pc, #456]	@ (800a678 <motors_process_task+0x218>)
 800a4b0:	4a72      	ldr	r2, [pc, #456]	@ (800a67c <motors_process_task+0x21c>)
 800a4b2:	f8c3 2128 	str.w	r2, [r3, #296]	@ 0x128
	g_can_motors[0].rpm_pid.kp = 5000;
 800a4b6:	4b70      	ldr	r3, [pc, #448]	@ (800a678 <motors_process_task+0x218>)
 800a4b8:	4a70      	ldr	r2, [pc, #448]	@ (800a67c <motors_process_task+0x21c>)
 800a4ba:	639a      	str	r2, [r3, #56]	@ 0x38
	g_can_motors[1].rpm_pid.ki = 0;
 800a4bc:	4b6e      	ldr	r3, [pc, #440]	@ (800a678 <motors_process_task+0x218>)
 800a4be:	f04f 0200 	mov.w	r2, #0
 800a4c2:	f8c3 212c 	str.w	r2, [r3, #300]	@ 0x12c
	g_can_motors[0].rpm_pid.ki = 0;
 800a4c6:	4b6c      	ldr	r3, [pc, #432]	@ (800a678 <motors_process_task+0x218>)
 800a4c8:	f04f 0200 	mov.w	r2, #0
 800a4cc:	63da      	str	r2, [r3, #60]	@ 0x3c
	g_can_motors[1].rpm_pid.kd = 0;
 800a4ce:	4b6a      	ldr	r3, [pc, #424]	@ (800a678 <motors_process_task+0x218>)
 800a4d0:	f04f 0200 	mov.w	r2, #0
 800a4d4:	f8c3 2130 	str.w	r2, [r3, #304]	@ 0x130
	g_can_motors[0].rpm_pid.kd = 0;
 800a4d8:	4b67      	ldr	r3, [pc, #412]	@ (800a678 <motors_process_task+0x218>)
 800a4da:	f04f 0200 	mov.w	r2, #0
 800a4de:	641a      	str	r2, [r3, #64]	@ 0x40
	g_can_motors[1].rpm_pid.max_out = 10000;
 800a4e0:	4b65      	ldr	r3, [pc, #404]	@ (800a678 <motors_process_task+0x218>)
 800a4e2:	4a67      	ldr	r2, [pc, #412]	@ (800a680 <motors_process_task+0x220>)
 800a4e4:	f8c3 2144 	str.w	r2, [r3, #324]	@ 0x144
	g_can_motors[0].rpm_pid.max_out = 10000;
 800a4e8:	4b63      	ldr	r3, [pc, #396]	@ (800a678 <motors_process_task+0x218>)
 800a4ea:	4a65      	ldr	r2, [pc, #404]	@ (800a680 <motors_process_task+0x220>)
 800a4ec:	655a      	str	r2, [r3, #84]	@ 0x54
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800a4ee:	f7f7 fe67 	bl	80021c0 <get_microseconds>
 800a4f2:	4603      	mov	r3, r0
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	f7f6 f805 	bl	8000504 <__aeabi_ui2d>
 800a4fa:	4602      	mov	r2, r0
 800a4fc:	460b      	mov	r3, r1
 800a4fe:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
        dt = endtime - starttime;
 800a502:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800a506:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800a50a:	f7f5 febd 	bl	8000288 <__aeabi_dsub>
 800a50e:	4602      	mov	r2, r0
 800a510:	460b      	mov	r3, r1
 800a512:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800a516:	f00e f92d 	bl	8018774 <xTaskGetTickCount>
 800a51a:	4603      	mov	r3, r0
 800a51c:	60fb      	str	r3, [r7, #12]
        raw_angle_to_rad(g_can_motors); // Pass the array directly
 800a51e:	4856      	ldr	r0, [pc, #344]	@ (800a678 <motors_process_task+0x218>)
 800a520:	f000 f8ca 	bl	800a6b8 <raw_angle_to_rad>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[4], +1.57, 1);//3.62+PI+ // left joint[1]
 800a524:	2101      	movs	r1, #1
 800a526:	ed9f 0a57 	vldr	s0, [pc, #348]	@ 800a684 <motors_process_task+0x224>
 800a52a:	4857      	ldr	r0, [pc, #348]	@ (800a688 <motors_process_task+0x228>)
 800a52c:	f000 f94c 	bl	800a7c8 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[5], +0.48, 1); // leftjoint[0]
 800a530:	2101      	movs	r1, #1
 800a532:	ed9f 0a56 	vldr	s0, [pc, #344]	@ 800a68c <motors_process_task+0x22c>
 800a536:	4856      	ldr	r0, [pc, #344]	@ (800a690 <motors_process_task+0x230>)
 800a538:	f000 f946 	bl	800a7c8 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[6], 0-1.62, 1);
 800a53c:	2101      	movs	r1, #1
 800a53e:	ed9f 0a55 	vldr	s0, [pc, #340]	@ 800a694 <motors_process_task+0x234>
 800a542:	4855      	ldr	r0, [pc, #340]	@ (800a698 <motors_process_task+0x238>)
 800a544:	f000 f940 	bl	800a7c8 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[7], -5.76, 1);
 800a548:	2101      	movs	r1, #1
 800a54a:	ed9f 0a54 	vldr	s0, [pc, #336]	@ 800a69c <motors_process_task+0x23c>
 800a54e:	4854      	ldr	r0, [pc, #336]	@ (800a6a0 <motors_process_task+0x240>)
 800a550:	f000 f93a 	bl	800a7c8 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[1], 0, -1);
 800a554:	f04f 31ff 	mov.w	r1, #4294967295
 800a558:	ed9f 0a52 	vldr	s0, [pc, #328]	@ 800a6a4 <motors_process_task+0x244>
 800a55c:	4852      	ldr	r0, [pc, #328]	@ (800a6a8 <motors_process_task+0x248>)
 800a55e:	f000 f933 	bl	800a7c8 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[0], 0, 1);
 800a562:	2101      	movs	r1, #1
 800a564:	ed9f 0a4f 	vldr	s0, [pc, #316]	@ 800a6a4 <motors_process_task+0x244>
 800a568:	4843      	ldr	r0, [pc, #268]	@ (800a678 <motors_process_task+0x218>)
 800a56a:	f000 f92d 	bl	800a7c8 <motors_raw_angle_to_desired_angle_dir>
        motors_torque_to_current_6020(&g_can_motors[4],0,1.0);
 800a56e:	ed9f 1b3e 	vldr	d1, [pc, #248]	@ 800a668 <motors_process_task+0x208>
 800a572:	ed9f 0a4c 	vldr	s0, [pc, #304]	@ 800a6a4 <motors_process_task+0x244>
 800a576:	4844      	ldr	r0, [pc, #272]	@ (800a688 <motors_process_task+0x228>)
 800a578:	f000 f986 	bl	800a888 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[5],0,1.0);
 800a57c:	ed9f 1b3a 	vldr	d1, [pc, #232]	@ 800a668 <motors_process_task+0x208>
 800a580:	ed9f 0a48 	vldr	s0, [pc, #288]	@ 800a6a4 <motors_process_task+0x244>
 800a584:	4842      	ldr	r0, [pc, #264]	@ (800a690 <motors_process_task+0x230>)
 800a586:	f000 f97f 	bl	800a888 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[6],0,1.0);
 800a58a:	ed9f 1b37 	vldr	d1, [pc, #220]	@ 800a668 <motors_process_task+0x208>
 800a58e:	ed9f 0a45 	vldr	s0, [pc, #276]	@ 800a6a4 <motors_process_task+0x244>
 800a592:	4841      	ldr	r0, [pc, #260]	@ (800a698 <motors_process_task+0x238>)
 800a594:	f000 f978 	bl	800a888 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[7],0,1.0);
 800a598:	ed9f 1b33 	vldr	d1, [pc, #204]	@ 800a668 <motors_process_task+0x208>
 800a59c:	ed9f 0a41 	vldr	s0, [pc, #260]	@ 800a6a4 <motors_process_task+0x244>
 800a5a0:	483f      	ldr	r0, [pc, #252]	@ (800a6a0 <motors_process_task+0x240>)
 800a5a2:	f000 f971 	bl	800a888 <motors_torque_to_current_6020>
        motors_torque_to_current_3508_gearbox(&g_can_motors[0],15,1.0);
 800a5a6:	ed9f 1b30 	vldr	d1, [pc, #192]	@ 800a668 <motors_process_task+0x208>
 800a5aa:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800a5ae:	4832      	ldr	r0, [pc, #200]	@ (800a678 <motors_process_task+0x218>)
 800a5b0:	f000 f9f6 	bl	800a9a0 <motors_torque_to_current_3508_gearbox>
        motors_torque_to_current_3508_gearbox(&g_can_motors[1],15,-1.0);
 800a5b4:	ed9f 1b2e 	vldr	d1, [pc, #184]	@ 800a670 <motors_process_task+0x210>
 800a5b8:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800a5bc:	483a      	ldr	r0, [pc, #232]	@ (800a6a8 <motors_process_task+0x248>)
 800a5be:	f000 f9ef 	bl	800a9a0 <motors_torque_to_current_3508_gearbox>


        speed_pid((double)g_can_motors[1].torque ,(double)g_can_motors[1].raw_data.rpm/1000, &g_can_motors[1].rpm_pid);
 800a5c2:	4b2d      	ldr	r3, [pc, #180]	@ (800a678 <motors_process_task+0x218>)
 800a5c4:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800a5c8:	4618      	mov	r0, r3
 800a5ca:	f7f5 ffbd 	bl	8000548 <__aeabi_f2d>
 800a5ce:	4604      	mov	r4, r0
 800a5d0:	460d      	mov	r5, r1
 800a5d2:	4b29      	ldr	r3, [pc, #164]	@ (800a678 <motors_process_task+0x218>)
 800a5d4:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	@ 0xf8
 800a5d8:	4618      	mov	r0, r3
 800a5da:	f7f5 ffa3 	bl	8000524 <__aeabi_i2d>
 800a5de:	f04f 0200 	mov.w	r2, #0
 800a5e2:	4b32      	ldr	r3, [pc, #200]	@ (800a6ac <motors_process_task+0x24c>)
 800a5e4:	f7f6 f932 	bl	800084c <__aeabi_ddiv>
 800a5e8:	4602      	mov	r2, r0
 800a5ea:	460b      	mov	r3, r1
 800a5ec:	ec43 2b17 	vmov	d7, r2, r3
 800a5f0:	482f      	ldr	r0, [pc, #188]	@ (800a6b0 <motors_process_task+0x250>)
 800a5f2:	eeb0 1a47 	vmov.f32	s2, s14
 800a5f6:	eef0 1a67 	vmov.f32	s3, s15
 800a5fa:	ec45 4b10 	vmov	d0, r4, r5
 800a5fe:	f7ff fbd7 	bl	8009db0 <speed_pid>
        speed_pid((double)g_can_motors[0].torque ,(double)g_can_motors[0].raw_data.rpm/1000, &g_can_motors[0].rpm_pid);
 800a602:	4b1d      	ldr	r3, [pc, #116]	@ (800a678 <motors_process_task+0x218>)
 800a604:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a606:	4618      	mov	r0, r3
 800a608:	f7f5 ff9e 	bl	8000548 <__aeabi_f2d>
 800a60c:	4604      	mov	r4, r0
 800a60e:	460d      	mov	r5, r1
 800a610:	4b19      	ldr	r3, [pc, #100]	@ (800a678 <motors_process_task+0x218>)
 800a612:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a616:	4618      	mov	r0, r3
 800a618:	f7f5 ff84 	bl	8000524 <__aeabi_i2d>
 800a61c:	f04f 0200 	mov.w	r2, #0
 800a620:	4b22      	ldr	r3, [pc, #136]	@ (800a6ac <motors_process_task+0x24c>)
 800a622:	f7f6 f913 	bl	800084c <__aeabi_ddiv>
 800a626:	4602      	mov	r2, r0
 800a628:	460b      	mov	r3, r1
 800a62a:	ec43 2b17 	vmov	d7, r2, r3
 800a62e:	4821      	ldr	r0, [pc, #132]	@ (800a6b4 <motors_process_task+0x254>)
 800a630:	eeb0 1a47 	vmov.f32	s2, s14
 800a634:	eef0 1a67 	vmov.f32	s3, s15
 800a638:	ec45 4b10 	vmov	d0, r4, r5
 800a63c:	f7ff fbb8 	bl	8009db0 <speed_pid>
//        g_can_motors[1].output = g_can_motors[1].rpm_pid.output;
//        g_can_motors[0].output = g_can_motors[0].rpm_pid.output;
        starttime = get_microseconds();
 800a640:	f7f7 fdbe 	bl	80021c0 <get_microseconds>
 800a644:	4603      	mov	r3, r0
 800a646:	4618      	mov	r0, r3
 800a648:	f7f5 ff5c 	bl	8000504 <__aeabi_ui2d>
 800a64c:	4602      	mov	r2, r0
 800a64e:	460b      	mov	r3, r1
 800a650:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30




        vTaskDelayUntil(&start_time, 5);
 800a654:	f107 030c 	add.w	r3, r7, #12
 800a658:	2105      	movs	r1, #5
 800a65a:	4618      	mov	r0, r3
 800a65c:	f00d feb6 	bl	80183cc <vTaskDelayUntil>
        endtime = get_microseconds();
 800a660:	bf00      	nop
 800a662:	e744      	b.n	800a4ee <motors_process_task+0x8e>
 800a664:	f3af 8000 	nop.w
 800a668:	00000000 	.word	0x00000000
 800a66c:	3ff00000 	.word	0x3ff00000
 800a670:	00000000 	.word	0x00000000
 800a674:	bff00000 	.word	0xbff00000
 800a678:	20001e48 	.word	0x20001e48
 800a67c:	459c4000 	.word	0x459c4000
 800a680:	461c4000 	.word	0x461c4000
 800a684:	3fc8f5c3 	.word	0x3fc8f5c3
 800a688:	20002208 	.word	0x20002208
 800a68c:	3ef5c28f 	.word	0x3ef5c28f
 800a690:	200022f8 	.word	0x200022f8
 800a694:	bfcf5c29 	.word	0xbfcf5c29
 800a698:	200023e8 	.word	0x200023e8
 800a69c:	c0b851ec 	.word	0xc0b851ec
 800a6a0:	200024d8 	.word	0x200024d8
 800a6a4:	00000000 	.word	0x00000000
 800a6a8:	20001f38 	.word	0x20001f38
 800a6ac:	408f4000 	.word	0x408f4000
 800a6b0:	20001f70 	.word	0x20001f70
 800a6b4:	20001e80 	.word	0x20001e80

0800a6b8 <raw_angle_to_rad>:
    }
}

void raw_angle_to_rad(motor_data_t motor[]) { // Change the parameter to accept an array
 800a6b8:	b590      	push	{r4, r7, lr}
 800a6ba:	b087      	sub	sp, #28
 800a6bc:	af00      	add	r7, sp, #0
 800a6be:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 24; i++) {
 800a6c0:	2300      	movs	r3, #0
 800a6c2:	617b      	str	r3, [r7, #20]
 800a6c4:	e06b      	b.n	800a79e <raw_angle_to_rad+0xe6>
        // Update moving average history
        double continuous_angle = motor[i].raw_data.angle[0] + (-motor[i].angle_data.rev*8192);
 800a6c6:	697a      	ldr	r2, [r7, #20]
 800a6c8:	4613      	mov	r3, r2
 800a6ca:	011b      	lsls	r3, r3, #4
 800a6cc:	1a9b      	subs	r3, r3, r2
 800a6ce:	011b      	lsls	r3, r3, #4
 800a6d0:	461a      	mov	r2, r3
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	4413      	add	r3, r2
 800a6d6:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800a6da:	4619      	mov	r1, r3
 800a6dc:	697a      	ldr	r2, [r7, #20]
 800a6de:	4613      	mov	r3, r2
 800a6e0:	011b      	lsls	r3, r3, #4
 800a6e2:	1a9b      	subs	r3, r3, r2
 800a6e4:	011b      	lsls	r3, r3, #4
 800a6e6:	461a      	mov	r2, r3
 800a6e8:	687b      	ldr	r3, [r7, #4]
 800a6ea:	4413      	add	r3, r2
 800a6ec:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800a6f0:	4613      	mov	r3, r2
 800a6f2:	04db      	lsls	r3, r3, #19
 800a6f4:	1a9b      	subs	r3, r3, r2
 800a6f6:	035b      	lsls	r3, r3, #13
 800a6f8:	440b      	add	r3, r1
 800a6fa:	4618      	mov	r0, r3
 800a6fc:	f7f5 ff12 	bl	8000524 <__aeabi_i2d>
 800a700:	4602      	mov	r2, r0
 800a702:	460b      	mov	r3, r1
 800a704:	e9c7 2302 	strd	r2, r3, [r7, #8]
        motor[i].raw_angle_rad = (continuous_angle / 8191.0) * 2 * PI;
 800a708:	a32a      	add	r3, pc, #168	@ (adr r3, 800a7b4 <raw_angle_to_rad+0xfc>)
 800a70a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a70e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a712:	f7f6 f89b 	bl	800084c <__aeabi_ddiv>
 800a716:	4602      	mov	r2, r0
 800a718:	460b      	mov	r3, r1
 800a71a:	4610      	mov	r0, r2
 800a71c:	4619      	mov	r1, r3
 800a71e:	4602      	mov	r2, r0
 800a720:	460b      	mov	r3, r1
 800a722:	f7f5 fdb3 	bl	800028c <__adddf3>
 800a726:	4602      	mov	r2, r0
 800a728:	460b      	mov	r3, r1
 800a72a:	4610      	mov	r0, r2
 800a72c:	4619      	mov	r1, r3
 800a72e:	a323      	add	r3, pc, #140	@ (adr r3, 800a7bc <raw_angle_to_rad+0x104>)
 800a730:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a734:	f7f5 ff60 	bl	80005f8 <__aeabi_dmul>
 800a738:	4602      	mov	r2, r0
 800a73a:	460b      	mov	r3, r1
 800a73c:	4610      	mov	r0, r2
 800a73e:	4619      	mov	r1, r3
 800a740:	697a      	ldr	r2, [r7, #20]
 800a742:	4613      	mov	r3, r2
 800a744:	011b      	lsls	r3, r3, #4
 800a746:	1a9b      	subs	r3, r3, r2
 800a748:	011b      	lsls	r3, r3, #4
 800a74a:	461a      	mov	r2, r3
 800a74c:	687b      	ldr	r3, [r7, #4]
 800a74e:	189c      	adds	r4, r3, r2
 800a750:	f7f6 fa4a 	bl	8000be8 <__aeabi_d2f>
 800a754:	4603      	mov	r3, r0
 800a756:	6123      	str	r3, [r4, #16]
        motor[i].raw_angle_deg = (continuous_angle / 8191.0) * 360;
 800a758:	a316      	add	r3, pc, #88	@ (adr r3, 800a7b4 <raw_angle_to_rad+0xfc>)
 800a75a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a75e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a762:	f7f6 f873 	bl	800084c <__aeabi_ddiv>
 800a766:	4602      	mov	r2, r0
 800a768:	460b      	mov	r3, r1
 800a76a:	4610      	mov	r0, r2
 800a76c:	4619      	mov	r1, r3
 800a76e:	f04f 0200 	mov.w	r2, #0
 800a772:	4b0f      	ldr	r3, [pc, #60]	@ (800a7b0 <raw_angle_to_rad+0xf8>)
 800a774:	f7f5 ff40 	bl	80005f8 <__aeabi_dmul>
 800a778:	4602      	mov	r2, r0
 800a77a:	460b      	mov	r3, r1
 800a77c:	4610      	mov	r0, r2
 800a77e:	4619      	mov	r1, r3
 800a780:	697a      	ldr	r2, [r7, #20]
 800a782:	4613      	mov	r3, r2
 800a784:	011b      	lsls	r3, r3, #4
 800a786:	1a9b      	subs	r3, r3, r2
 800a788:	011b      	lsls	r3, r3, #4
 800a78a:	461a      	mov	r2, r3
 800a78c:	687b      	ldr	r3, [r7, #4]
 800a78e:	189c      	adds	r4, r3, r2
 800a790:	f7f6 fa2a 	bl	8000be8 <__aeabi_d2f>
 800a794:	4603      	mov	r3, r0
 800a796:	6163      	str	r3, [r4, #20]
    for (int i = 0; i < 24; i++) {
 800a798:	697b      	ldr	r3, [r7, #20]
 800a79a:	3301      	adds	r3, #1
 800a79c:	617b      	str	r3, [r7, #20]
 800a79e:	697b      	ldr	r3, [r7, #20]
 800a7a0:	2b17      	cmp	r3, #23
 800a7a2:	dd90      	ble.n	800a6c6 <raw_angle_to_rad+0xe>
    }
}
 800a7a4:	bf00      	nop
 800a7a6:	bf00      	nop
 800a7a8:	371c      	adds	r7, #28
 800a7aa:	46bd      	mov	sp, r7
 800a7ac:	bd90      	pop	{r4, r7, pc}
 800a7ae:	bf00      	nop
 800a7b0:	40768000 	.word	0x40768000
 800a7b4:	00000000 	.word	0x00000000
 800a7b8:	40bfff00 	.word	0x40bfff00
 800a7bc:	60000000 	.word	0x60000000
 800a7c0:	400921fb 	.word	0x400921fb
 800a7c4:	00000000 	.word	0x00000000

0800a7c8 <motors_raw_angle_to_desired_angle_dir>:

void motors_raw_angle_to_desired_angle_dir(motor_data_t *motor, float offset, int dir) {
 800a7c8:	b580      	push	{r7, lr}
 800a7ca:	b084      	sub	sp, #16
 800a7cc:	af00      	add	r7, sp, #0
 800a7ce:	60f8      	str	r0, [r7, #12]
 800a7d0:	ed87 0a02 	vstr	s0, [r7, #8]
 800a7d4:	6079      	str	r1, [r7, #4]
    if (dir == -1) {
 800a7d6:	687b      	ldr	r3, [r7, #4]
 800a7d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a7dc:	d11b      	bne.n	800a816 <motors_raw_angle_to_desired_angle_dir+0x4e>
        motor->angle_rad = -motor->raw_angle_rad + offset;
 800a7de:	68fb      	ldr	r3, [r7, #12]
 800a7e0:	edd3 7a04 	vldr	s15, [r3, #16]
 800a7e4:	ed97 7a02 	vldr	s14, [r7, #8]
 800a7e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 800a7ec:	68fb      	ldr	r3, [r7, #12]
 800a7ee:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = -motor->raw_data.rpm * 0.10472;
 800a7f2:	68fb      	ldr	r3, [r7, #12]
 800a7f4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a7f8:	425b      	negs	r3, r3
 800a7fa:	4618      	mov	r0, r3
 800a7fc:	f7f5 fe92 	bl	8000524 <__aeabi_i2d>
 800a800:	a31d      	add	r3, pc, #116	@ (adr r3, 800a878 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800a802:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a806:	f7f5 fef7 	bl	80005f8 <__aeabi_dmul>
 800a80a:	4602      	mov	r2, r0
 800a80c:	460b      	mov	r3, r1
 800a80e:	68f9      	ldr	r1, [r7, #12]
 800a810:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800a814:	e019      	b.n	800a84a <motors_raw_angle_to_desired_angle_dir+0x82>
    } else {
        motor->angle_rad = motor->raw_angle_rad + offset;
 800a816:	68fb      	ldr	r3, [r7, #12]
 800a818:	ed93 7a04 	vldr	s14, [r3, #16]
 800a81c:	edd7 7a02 	vldr	s15, [r7, #8]
 800a820:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a824:	68fb      	ldr	r3, [r7, #12]
 800a826:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = motor->raw_data.rpm * 0.10472;
 800a82a:	68fb      	ldr	r3, [r7, #12]
 800a82c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a830:	4618      	mov	r0, r3
 800a832:	f7f5 fe77 	bl	8000524 <__aeabi_i2d>
 800a836:	a310      	add	r3, pc, #64	@ (adr r3, 800a878 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800a838:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a83c:	f7f5 fedc 	bl	80005f8 <__aeabi_dmul>
 800a840:	4602      	mov	r2, r0
 800a842:	460b      	mov	r3, r1
 800a844:	68f9      	ldr	r1, [r7, #12]
 800a846:	e9c1 2308 	strd	r2, r3, [r1, #32]
    }
    motor->angle_deg = motor->angle_rad * (180.0 / PI); // Update the degree value as well
 800a84a:	68fb      	ldr	r3, [r7, #12]
 800a84c:	699b      	ldr	r3, [r3, #24]
 800a84e:	4618      	mov	r0, r3
 800a850:	f7f5 fe7a 	bl	8000548 <__aeabi_f2d>
 800a854:	a30a      	add	r3, pc, #40	@ (adr r3, 800a880 <motors_raw_angle_to_desired_angle_dir+0xb8>)
 800a856:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a85a:	f7f5 fecd 	bl	80005f8 <__aeabi_dmul>
 800a85e:	4602      	mov	r2, r0
 800a860:	460b      	mov	r3, r1
 800a862:	4610      	mov	r0, r2
 800a864:	4619      	mov	r1, r3
 800a866:	f7f6 f9bf 	bl	8000be8 <__aeabi_d2f>
 800a86a:	4602      	mov	r2, r0
 800a86c:	68fb      	ldr	r3, [r7, #12]
 800a86e:	61da      	str	r2, [r3, #28]

}
 800a870:	bf00      	nop
 800a872:	3710      	adds	r7, #16
 800a874:	46bd      	mov	sp, r7
 800a876:	bd80      	pop	{r7, pc}
 800a878:	0f3cb3e5 	.word	0x0f3cb3e5
 800a87c:	3fbaceee 	.word	0x3fbaceee
 800a880:	0d03cf26 	.word	0x0d03cf26
 800a884:	404ca5dc 	.word	0x404ca5dc

0800a888 <motors_torque_to_current_6020>:

void motors_torque_to_current_6020(motor_data_t *motor, float deadzone,double dir) {
 800a888:	b580      	push	{r7, lr}
 800a88a:	b086      	sub	sp, #24
 800a88c:	af00      	add	r7, sp, #0
 800a88e:	60f8      	str	r0, [r7, #12]
 800a890:	ed87 0a02 	vstr	s0, [r7, #8]
 800a894:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800a898:	f04f 0200 	mov.w	r2, #0
 800a89c:	f04f 0300 	mov.w	r3, #0
 800a8a0:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800a8a4:	68fb      	ldr	r3, [r7, #12]
 800a8a6:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a8aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a8ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8b2:	dd17      	ble.n	800a8e4 <motors_torque_to_current_6020+0x5c>
		current = 1.8 * motor->torque + 0.2;
 800a8b4:	68fb      	ldr	r3, [r7, #12]
 800a8b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a8b8:	4618      	mov	r0, r3
 800a8ba:	f7f5 fe45 	bl	8000548 <__aeabi_f2d>
 800a8be:	a333      	add	r3, pc, #204	@ (adr r3, 800a98c <motors_torque_to_current_6020+0x104>)
 800a8c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a8c4:	f7f5 fe98 	bl	80005f8 <__aeabi_dmul>
 800a8c8:	4602      	mov	r2, r0
 800a8ca:	460b      	mov	r3, r1
 800a8cc:	4610      	mov	r0, r2
 800a8ce:	4619      	mov	r1, r3
 800a8d0:	a330      	add	r3, pc, #192	@ (adr r3, 800a994 <motors_torque_to_current_6020+0x10c>)
 800a8d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a8d6:	f7f5 fcd9 	bl	800028c <__adddf3>
 800a8da:	4602      	mov	r2, r0
 800a8dc:	460b      	mov	r3, r1
 800a8de:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a8e2:	e025      	b.n	800a930 <motors_torque_to_current_6020+0xa8>
	} else if(motor->torque < 0){
 800a8e4:	68fb      	ldr	r3, [r7, #12]
 800a8e6:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a8ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a8ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8f2:	d517      	bpl.n	800a924 <motors_torque_to_current_6020+0x9c>
		current = 1.8 * motor->torque - 0.2;
 800a8f4:	68fb      	ldr	r3, [r7, #12]
 800a8f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	f7f5 fe25 	bl	8000548 <__aeabi_f2d>
 800a8fe:	a323      	add	r3, pc, #140	@ (adr r3, 800a98c <motors_torque_to_current_6020+0x104>)
 800a900:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a904:	f7f5 fe78 	bl	80005f8 <__aeabi_dmul>
 800a908:	4602      	mov	r2, r0
 800a90a:	460b      	mov	r3, r1
 800a90c:	4610      	mov	r0, r2
 800a90e:	4619      	mov	r1, r3
 800a910:	a320      	add	r3, pc, #128	@ (adr r3, 800a994 <motors_torque_to_current_6020+0x10c>)
 800a912:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a916:	f7f5 fcb7 	bl	8000288 <__aeabi_dsub>
 800a91a:	4602      	mov	r2, r0
 800a91c:	460b      	mov	r3, r1
 800a91e:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a922:	e005      	b.n	800a930 <motors_torque_to_current_6020+0xa8>
	} else{
		current = 0;
 800a924:	f04f 0200 	mov.w	r2, #0
 800a928:	f04f 0300 	mov.w	r3, #0
 800a92c:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/3.0)*16385.0;
 800a930:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a934:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a938:	f7f5 fe5e 	bl	80005f8 <__aeabi_dmul>
 800a93c:	4602      	mov	r2, r0
 800a93e:	460b      	mov	r3, r1
 800a940:	4610      	mov	r0, r2
 800a942:	4619      	mov	r1, r3
 800a944:	f04f 0200 	mov.w	r2, #0
 800a948:	4b0f      	ldr	r3, [pc, #60]	@ (800a988 <motors_torque_to_current_6020+0x100>)
 800a94a:	f7f5 ff7f 	bl	800084c <__aeabi_ddiv>
 800a94e:	4602      	mov	r2, r0
 800a950:	460b      	mov	r3, r1
 800a952:	4610      	mov	r0, r2
 800a954:	4619      	mov	r1, r3
 800a956:	a30a      	add	r3, pc, #40	@ (adr r3, 800a980 <motors_torque_to_current_6020+0xf8>)
 800a958:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a95c:	f7f5 fe4c 	bl	80005f8 <__aeabi_dmul>
 800a960:	4602      	mov	r2, r0
 800a962:	460b      	mov	r3, r1
 800a964:	4610      	mov	r0, r2
 800a966:	4619      	mov	r1, r3
 800a968:	f7f6 f8f6 	bl	8000b58 <__aeabi_d2iz>
 800a96c:	4603      	mov	r3, r0
 800a96e:	b21a      	sxth	r2, r3
 800a970:	68fb      	ldr	r3, [r7, #12]
 800a972:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800a976:	bf00      	nop
 800a978:	3718      	adds	r7, #24
 800a97a:	46bd      	mov	sp, r7
 800a97c:	bd80      	pop	{r7, pc}
 800a97e:	bf00      	nop
 800a980:	00000000 	.word	0x00000000
 800a984:	40d00040 	.word	0x40d00040
 800a988:	40080000 	.word	0x40080000
 800a98c:	cccccccd 	.word	0xcccccccd
 800a990:	3ffccccc 	.word	0x3ffccccc
 800a994:	9999999a 	.word	0x9999999a
 800a998:	3fc99999 	.word	0x3fc99999
 800a99c:	00000000 	.word	0x00000000

0800a9a0 <motors_torque_to_current_3508_gearbox>:
void motors_torque_to_current_3508_gearbox(motor_data_t *motor, float maxCurrent,double dir) {
 800a9a0:	b580      	push	{r7, lr}
 800a9a2:	b086      	sub	sp, #24
 800a9a4:	af00      	add	r7, sp, #0
 800a9a6:	60f8      	str	r0, [r7, #12]
 800a9a8:	ed87 0a02 	vstr	s0, [r7, #8]
 800a9ac:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800a9b0:	f04f 0200 	mov.w	r2, #0
 800a9b4:	f04f 0300 	mov.w	r3, #0
 800a9b8:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800a9bc:	68fb      	ldr	r3, [r7, #12]
 800a9be:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a9c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a9c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a9ca:	dd20      	ble.n	800aa0e <motors_torque_to_current_3508_gearbox+0x6e>
		current = (motor->torque / 4.5) * 20 + 0.08;
 800a9cc:	68fb      	ldr	r3, [r7, #12]
 800a9ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a9d0:	4618      	mov	r0, r3
 800a9d2:	f7f5 fdb9 	bl	8000548 <__aeabi_f2d>
 800a9d6:	f04f 0200 	mov.w	r2, #0
 800a9da:	4b55      	ldr	r3, [pc, #340]	@ (800ab30 <motors_torque_to_current_3508_gearbox+0x190>)
 800a9dc:	f7f5 ff36 	bl	800084c <__aeabi_ddiv>
 800a9e0:	4602      	mov	r2, r0
 800a9e2:	460b      	mov	r3, r1
 800a9e4:	4610      	mov	r0, r2
 800a9e6:	4619      	mov	r1, r3
 800a9e8:	f04f 0200 	mov.w	r2, #0
 800a9ec:	4b51      	ldr	r3, [pc, #324]	@ (800ab34 <motors_torque_to_current_3508_gearbox+0x194>)
 800a9ee:	f7f5 fe03 	bl	80005f8 <__aeabi_dmul>
 800a9f2:	4602      	mov	r2, r0
 800a9f4:	460b      	mov	r3, r1
 800a9f6:	4610      	mov	r0, r2
 800a9f8:	4619      	mov	r1, r3
 800a9fa:	a349      	add	r3, pc, #292	@ (adr r3, 800ab20 <motors_torque_to_current_3508_gearbox+0x180>)
 800a9fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa00:	f7f5 fc44 	bl	800028c <__adddf3>
 800aa04:	4602      	mov	r2, r0
 800aa06:	460b      	mov	r3, r1
 800aa08:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800aa0c:	e02e      	b.n	800aa6c <motors_torque_to_current_3508_gearbox+0xcc>
	} else if(motor->torque < 0){
 800aa0e:	68fb      	ldr	r3, [r7, #12]
 800aa10:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800aa14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aa18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa1c:	d520      	bpl.n	800aa60 <motors_torque_to_current_3508_gearbox+0xc0>
		current = (motor->torque / 4.5) * 20 - 0.08;
 800aa1e:	68fb      	ldr	r3, [r7, #12]
 800aa20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aa22:	4618      	mov	r0, r3
 800aa24:	f7f5 fd90 	bl	8000548 <__aeabi_f2d>
 800aa28:	f04f 0200 	mov.w	r2, #0
 800aa2c:	4b40      	ldr	r3, [pc, #256]	@ (800ab30 <motors_torque_to_current_3508_gearbox+0x190>)
 800aa2e:	f7f5 ff0d 	bl	800084c <__aeabi_ddiv>
 800aa32:	4602      	mov	r2, r0
 800aa34:	460b      	mov	r3, r1
 800aa36:	4610      	mov	r0, r2
 800aa38:	4619      	mov	r1, r3
 800aa3a:	f04f 0200 	mov.w	r2, #0
 800aa3e:	4b3d      	ldr	r3, [pc, #244]	@ (800ab34 <motors_torque_to_current_3508_gearbox+0x194>)
 800aa40:	f7f5 fdda 	bl	80005f8 <__aeabi_dmul>
 800aa44:	4602      	mov	r2, r0
 800aa46:	460b      	mov	r3, r1
 800aa48:	4610      	mov	r0, r2
 800aa4a:	4619      	mov	r1, r3
 800aa4c:	a334      	add	r3, pc, #208	@ (adr r3, 800ab20 <motors_torque_to_current_3508_gearbox+0x180>)
 800aa4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa52:	f7f5 fc19 	bl	8000288 <__aeabi_dsub>
 800aa56:	4602      	mov	r2, r0
 800aa58:	460b      	mov	r3, r1
 800aa5a:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800aa5e:	e005      	b.n	800aa6c <motors_torque_to_current_3508_gearbox+0xcc>
	} else{
		current = 0;
 800aa60:	f04f 0200 	mov.w	r2, #0
 800aa64:	f04f 0300 	mov.w	r3, #0
 800aa68:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	if (current > maxCurrent){
 800aa6c:	68b8      	ldr	r0, [r7, #8]
 800aa6e:	f7f5 fd6b 	bl	8000548 <__aeabi_f2d>
 800aa72:	4602      	mov	r2, r0
 800aa74:	460b      	mov	r3, r1
 800aa76:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800aa7a:	f7f6 f84d 	bl	8000b18 <__aeabi_dcmpgt>
 800aa7e:	4603      	mov	r3, r0
 800aa80:	2b00      	cmp	r3, #0
 800aa82:	d007      	beq.n	800aa94 <motors_torque_to_current_3508_gearbox+0xf4>
		current = maxCurrent;
 800aa84:	68b8      	ldr	r0, [r7, #8]
 800aa86:	f7f5 fd5f 	bl	8000548 <__aeabi_f2d>
 800aa8a:	4602      	mov	r2, r0
 800aa8c:	460b      	mov	r3, r1
 800aa8e:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800aa92:	e01e      	b.n	800aad2 <motors_torque_to_current_3508_gearbox+0x132>
	} else if(current < -maxCurrent){
 800aa94:	edd7 7a02 	vldr	s15, [r7, #8]
 800aa98:	eef1 7a67 	vneg.f32	s15, s15
 800aa9c:	ee17 3a90 	vmov	r3, s15
 800aaa0:	4618      	mov	r0, r3
 800aaa2:	f7f5 fd51 	bl	8000548 <__aeabi_f2d>
 800aaa6:	4602      	mov	r2, r0
 800aaa8:	460b      	mov	r3, r1
 800aaaa:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800aaae:	f7f6 f815 	bl	8000adc <__aeabi_dcmplt>
 800aab2:	4603      	mov	r3, r0
 800aab4:	2b00      	cmp	r3, #0
 800aab6:	d00c      	beq.n	800aad2 <motors_torque_to_current_3508_gearbox+0x132>
		current = -maxCurrent;
 800aab8:	edd7 7a02 	vldr	s15, [r7, #8]
 800aabc:	eef1 7a67 	vneg.f32	s15, s15
 800aac0:	ee17 3a90 	vmov	r3, s15
 800aac4:	4618      	mov	r0, r3
 800aac6:	f7f5 fd3f 	bl	8000548 <__aeabi_f2d>
 800aaca:	4602      	mov	r2, r0
 800aacc:	460b      	mov	r3, r1
 800aace:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/20.0)*16385.0;
 800aad2:	e9d7 2300 	ldrd	r2, r3, [r7]
 800aad6:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800aada:	f7f5 fd8d 	bl	80005f8 <__aeabi_dmul>
 800aade:	4602      	mov	r2, r0
 800aae0:	460b      	mov	r3, r1
 800aae2:	4610      	mov	r0, r2
 800aae4:	4619      	mov	r1, r3
 800aae6:	f04f 0200 	mov.w	r2, #0
 800aaea:	4b12      	ldr	r3, [pc, #72]	@ (800ab34 <motors_torque_to_current_3508_gearbox+0x194>)
 800aaec:	f7f5 feae 	bl	800084c <__aeabi_ddiv>
 800aaf0:	4602      	mov	r2, r0
 800aaf2:	460b      	mov	r3, r1
 800aaf4:	4610      	mov	r0, r2
 800aaf6:	4619      	mov	r1, r3
 800aaf8:	a30b      	add	r3, pc, #44	@ (adr r3, 800ab28 <motors_torque_to_current_3508_gearbox+0x188>)
 800aafa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aafe:	f7f5 fd7b 	bl	80005f8 <__aeabi_dmul>
 800ab02:	4602      	mov	r2, r0
 800ab04:	460b      	mov	r3, r1
 800ab06:	4610      	mov	r0, r2
 800ab08:	4619      	mov	r1, r3
 800ab0a:	f7f6 f825 	bl	8000b58 <__aeabi_d2iz>
 800ab0e:	4603      	mov	r3, r0
 800ab10:	b21a      	sxth	r2, r3
 800ab12:	68fb      	ldr	r3, [r7, #12]
 800ab14:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800ab18:	bf00      	nop
 800ab1a:	3718      	adds	r7, #24
 800ab1c:	46bd      	mov	sp, r7
 800ab1e:	bd80      	pop	{r7, pc}
 800ab20:	47ae147b 	.word	0x47ae147b
 800ab24:	3fb47ae1 	.word	0x3fb47ae1
 800ab28:	00000000 	.word	0x00000000
 800ab2c:	40d00040 	.word	0x40d00040
 800ab30:	40120000 	.word	0x40120000
 800ab34:	40340000 	.word	0x40340000

0800ab38 <referee_processing_task>:
uint32_t ref_mag_data_txno = 0;
uint8_t g_ref_tx_seq = 0;

queue_t referee_uart_q;

void referee_processing_task(void *argument) {
 800ab38:	b5b0      	push	{r4, r5, r7, lr}
 800ab3a:	b088      	sub	sp, #32
 800ab3c:	af00      	add	r7, sp, #0
 800ab3e:	6078      	str	r0, [r7, #4]
	g_referee_limiters.robot_level = 0;
 800ab40:	4ba3      	ldr	r3, [pc, #652]	@ (800add0 <referee_processing_task+0x298>)
 800ab42:	2200      	movs	r2, #0
 800ab44:	731a      	strb	r2, [r3, #12]
	uint8_t ref_buffer[2];
	ref_processing_status_t proc_status;
	g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ab46:	4ba2      	ldr	r3, [pc, #648]	@ (800add0 <referee_processing_task+0x298>)
 800ab48:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ab4c:	801a      	strh	r2, [r3, #0]
	g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800ab4e:	4ba0      	ldr	r3, [pc, #640]	@ (800add0 <referee_processing_task+0x298>)
 800ab50:	2213      	movs	r2, #19
 800ab52:	805a      	strh	r2, [r3, #2]
//	g_referee_limiters.wheel_power_limit = LV1_POWER;
	g_referee_limiters.robot_level = 1;
 800ab54:	4b9e      	ldr	r3, [pc, #632]	@ (800add0 <referee_processing_task+0x298>)
 800ab56:	2201      	movs	r2, #1
 800ab58:	731a      	strb	r2, [r3, #12]
	status_led(7, on_led);
 800ab5a:	2100      	movs	r1, #0
 800ab5c:	2007      	movs	r0, #7
 800ab5e:	f7f7 fa2b 	bl	8001fb8 <status_led>
	status_led(8, off_led);
 800ab62:	2101      	movs	r1, #1
 800ab64:	2008      	movs	r0, #8
 800ab66:	f7f7 fa27 	bl	8001fb8 <status_led>
	ref_robot_data.robot_id = 0;
 800ab6a:	4b9a      	ldr	r3, [pc, #616]	@ (800add4 <referee_processing_task+0x29c>)
 800ab6c:	2200      	movs	r2, #0
 800ab6e:	701a      	strb	r2, [r3, #0]
	ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800ab70:	f107 0108 	add.w	r1, r7, #8
 800ab74:	4b98      	ldr	r3, [pc, #608]	@ (800add8 <referee_processing_task+0x2a0>)
 800ab76:	2202      	movs	r2, #2
 800ab78:	4898      	ldr	r0, [pc, #608]	@ (800addc <referee_processing_task+0x2a4>)
 800ab7a:	f7f7 ffdb 	bl	8002b34 <ref_usart_start>
	while (1) {

		uint8_t has_data = ulTaskNotifyTake(pdTRUE, 1000);
 800ab7e:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800ab82:	2001      	movs	r0, #1
 800ab84:	f00e fa72 	bl	801906c <ulTaskNotifyTake>
 800ab88:	4603      	mov	r3, r0
 800ab8a:	75fb      	strb	r3, [r7, #23]
		status_led(5, on_led);
 800ab8c:	2100      	movs	r1, #0
 800ab8e:	2005      	movs	r0, #5
 800ab90:	f7f7 fa12 	bl	8001fb8 <status_led>
		if (queue_get_size(&referee_uart_q) > 7) {
 800ab94:	4890      	ldr	r0, [pc, #576]	@ (800add8 <referee_processing_task+0x2a0>)
 800ab96:	f7f7 fb70 	bl	800227a <queue_get_size>
 800ab9a:	4603      	mov	r3, r0
 800ab9c:	2b07      	cmp	r3, #7
 800ab9e:	f240 80b8 	bls.w	800ad12 <referee_processing_task+0x1da>
			while (queue_get_size(&referee_uart_q) > 7) {
 800aba2:	e0ad      	b.n	800ad00 <referee_processing_task+0x1c8>
				proc_status = ref_process_data(&referee_uart_q, &g_ref_msg_buffer);
 800aba4:	498e      	ldr	r1, [pc, #568]	@ (800ade0 <referee_processing_task+0x2a8>)
 800aba6:	488c      	ldr	r0, [pc, #560]	@ (800add8 <referee_processing_task+0x2a0>)
 800aba8:	f7f7 fcd4 	bl	8002554 <ref_process_data>
 800abac:	4603      	mov	r3, r0
 800abae:	75bb      	strb	r3, [r7, #22]
				if (proc_status == PROCESS_SUCCESS) {
 800abb0:	7dbb      	ldrb	r3, [r7, #22]
 800abb2:	2b00      	cmp	r3, #0
 800abb4:	f040 809f 	bne.w	800acf6 <referee_processing_task+0x1be>
					switch (g_ref_msg_buffer.cmd_id) {
 800abb8:	4b89      	ldr	r3, [pc, #548]	@ (800ade0 <referee_processing_task+0x2a8>)
 800abba:	881b      	ldrh	r3, [r3, #0]
 800abbc:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800abc0:	f300 809d 	bgt.w	800acfe <referee_processing_task+0x1c6>
 800abc4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800abc8:	dc04      	bgt.n	800abd4 <referee_processing_task+0x9c>
 800abca:	2b01      	cmp	r3, #1
 800abcc:	d029      	beq.n	800ac22 <referee_processing_task+0xea>
 800abce:	2b03      	cmp	r3, #3
 800abd0:	d071      	beq.n	800acb6 <referee_processing_task+0x17e>
								sizeof(ref_magazine_data_t));
						ref_mag_data_txno++;
						//add in the memcpys here
						break;
					default:
						break;
 800abd2:	e094      	b.n	800acfe <referee_processing_task+0x1c6>
					switch (g_ref_msg_buffer.cmd_id) {
 800abd4:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 800abd8:	2b07      	cmp	r3, #7
 800abda:	f200 8090 	bhi.w	800acfe <referee_processing_task+0x1c6>
 800abde:	a201      	add	r2, pc, #4	@ (adr r2, 800abe4 <referee_processing_task+0xac>)
 800abe0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800abe4:	0800ac3d 	.word	0x0800ac3d
 800abe8:	0800ac85 	.word	0x0800ac85
 800abec:	0800ac6b 	.word	0x0800ac6b
 800abf0:	0800acff 	.word	0x0800acff
 800abf4:	0800acff 	.word	0x0800acff
 800abf8:	0800aca3 	.word	0x0800aca3
 800abfc:	0800ac05 	.word	0x0800ac05
 800ac00:	0800acdd 	.word	0x0800acdd
						memcpy(&ref_shoot_data, &g_ref_msg_buffer.data,
 800ac04:	4a77      	ldr	r2, [pc, #476]	@ (800ade4 <referee_processing_task+0x2ac>)
 800ac06:	4b76      	ldr	r3, [pc, #472]	@ (800ade0 <referee_processing_task+0x2a8>)
 800ac08:	3302      	adds	r3, #2
 800ac0a:	6818      	ldr	r0, [r3, #0]
 800ac0c:	6010      	str	r0, [r2, #0]
 800ac0e:	8899      	ldrh	r1, [r3, #4]
 800ac10:	799b      	ldrb	r3, [r3, #6]
 800ac12:	8091      	strh	r1, [r2, #4]
 800ac14:	7193      	strb	r3, [r2, #6]
						ref_shoot_data_txno++;
 800ac16:	4b74      	ldr	r3, [pc, #464]	@ (800ade8 <referee_processing_task+0x2b0>)
 800ac18:	681b      	ldr	r3, [r3, #0]
 800ac1a:	3301      	adds	r3, #1
 800ac1c:	4a72      	ldr	r2, [pc, #456]	@ (800ade8 <referee_processing_task+0x2b0>)
 800ac1e:	6013      	str	r3, [r2, #0]
						break;
 800ac20:	e06e      	b.n	800ad00 <referee_processing_task+0x1c8>
							memcpy(&ref_game_state, &g_ref_msg_buffer.data,
 800ac22:	4a72      	ldr	r2, [pc, #456]	@ (800adec <referee_processing_task+0x2b4>)
 800ac24:	4b6e      	ldr	r3, [pc, #440]	@ (800ade0 <referee_processing_task+0x2a8>)
 800ac26:	3302      	adds	r3, #2
 800ac28:	8819      	ldrh	r1, [r3, #0]
 800ac2a:	789b      	ldrb	r3, [r3, #2]
 800ac2c:	8011      	strh	r1, [r2, #0]
 800ac2e:	7093      	strb	r3, [r2, #2]
							ref_game_state_txno++;
 800ac30:	4b6f      	ldr	r3, [pc, #444]	@ (800adf0 <referee_processing_task+0x2b8>)
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	3301      	adds	r3, #1
 800ac36:	4a6e      	ldr	r2, [pc, #440]	@ (800adf0 <referee_processing_task+0x2b8>)
 800ac38:	6013      	str	r3, [r2, #0]
							break;
 800ac3a:	e061      	b.n	800ad00 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_data, &g_ref_msg_buffer.data,
 800ac3c:	4a65      	ldr	r2, [pc, #404]	@ (800add4 <referee_processing_task+0x29c>)
 800ac3e:	4b68      	ldr	r3, [pc, #416]	@ (800ade0 <referee_processing_task+0x2a8>)
 800ac40:	4614      	mov	r4, r2
 800ac42:	1c9d      	adds	r5, r3, #2
 800ac44:	6828      	ldr	r0, [r5, #0]
 800ac46:	6869      	ldr	r1, [r5, #4]
 800ac48:	68aa      	ldr	r2, [r5, #8]
 800ac4a:	68eb      	ldr	r3, [r5, #12]
 800ac4c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac4e:	6928      	ldr	r0, [r5, #16]
 800ac50:	6969      	ldr	r1, [r5, #20]
 800ac52:	c403      	stmia	r4!, {r0, r1}
 800ac54:	8b2b      	ldrh	r3, [r5, #24]
 800ac56:	7eaa      	ldrb	r2, [r5, #26]
 800ac58:	8023      	strh	r3, [r4, #0]
 800ac5a:	4613      	mov	r3, r2
 800ac5c:	70a3      	strb	r3, [r4, #2]
						ref_robot_data_txno++;
 800ac5e:	4b65      	ldr	r3, [pc, #404]	@ (800adf4 <referee_processing_task+0x2bc>)
 800ac60:	681b      	ldr	r3, [r3, #0]
 800ac62:	3301      	adds	r3, #1
 800ac64:	4a63      	ldr	r2, [pc, #396]	@ (800adf4 <referee_processing_task+0x2bc>)
 800ac66:	6013      	str	r3, [r2, #0]
						break;
 800ac68:	e04a      	b.n	800ad00 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_pos, &g_ref_msg_buffer.data,
 800ac6a:	4b63      	ldr	r3, [pc, #396]	@ (800adf8 <referee_processing_task+0x2c0>)
 800ac6c:	4a5c      	ldr	r2, [pc, #368]	@ (800ade0 <referee_processing_task+0x2a8>)
 800ac6e:	3202      	adds	r2, #2
 800ac70:	6810      	ldr	r0, [r2, #0]
 800ac72:	6851      	ldr	r1, [r2, #4]
 800ac74:	6892      	ldr	r2, [r2, #8]
 800ac76:	c307      	stmia	r3!, {r0, r1, r2}
						ref_robot_pos_txno++;
 800ac78:	4b60      	ldr	r3, [pc, #384]	@ (800adfc <referee_processing_task+0x2c4>)
 800ac7a:	681b      	ldr	r3, [r3, #0]
 800ac7c:	3301      	adds	r3, #1
 800ac7e:	4a5f      	ldr	r2, [pc, #380]	@ (800adfc <referee_processing_task+0x2c4>)
 800ac80:	6013      	str	r3, [r2, #0]
						break;
 800ac82:	e03d      	b.n	800ad00 <referee_processing_task+0x1c8>
						memcpy(&ref_power_data, &g_ref_msg_buffer.data,
 800ac84:	4a5e      	ldr	r2, [pc, #376]	@ (800ae00 <referee_processing_task+0x2c8>)
 800ac86:	4b56      	ldr	r3, [pc, #344]	@ (800ade0 <referee_processing_task+0x2a8>)
 800ac88:	4614      	mov	r4, r2
 800ac8a:	3302      	adds	r3, #2
 800ac8c:	6818      	ldr	r0, [r3, #0]
 800ac8e:	6859      	ldr	r1, [r3, #4]
 800ac90:	689a      	ldr	r2, [r3, #8]
 800ac92:	68db      	ldr	r3, [r3, #12]
 800ac94:	c40f      	stmia	r4!, {r0, r1, r2, r3}
						ref_power_data_txno++;
 800ac96:	4b5b      	ldr	r3, [pc, #364]	@ (800ae04 <referee_processing_task+0x2cc>)
 800ac98:	681b      	ldr	r3, [r3, #0]
 800ac9a:	3301      	adds	r3, #1
 800ac9c:	4a59      	ldr	r2, [pc, #356]	@ (800ae04 <referee_processing_task+0x2cc>)
 800ac9e:	6013      	str	r3, [r2, #0]
						break;
 800aca0:	e02e      	b.n	800ad00 <referee_processing_task+0x1c8>
						memcpy(&ref_dmg_data, &g_ref_msg_buffer.data,
 800aca2:	4b4f      	ldr	r3, [pc, #316]	@ (800ade0 <referee_processing_task+0x2a8>)
 800aca4:	789a      	ldrb	r2, [r3, #2]
 800aca6:	4b58      	ldr	r3, [pc, #352]	@ (800ae08 <referee_processing_task+0x2d0>)
 800aca8:	701a      	strb	r2, [r3, #0]
						ref_dmg_data_txno++;
 800acaa:	4b58      	ldr	r3, [pc, #352]	@ (800ae0c <referee_processing_task+0x2d4>)
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	3301      	adds	r3, #1
 800acb0:	4a56      	ldr	r2, [pc, #344]	@ (800ae0c <referee_processing_task+0x2d4>)
 800acb2:	6013      	str	r3, [r2, #0]
						break;
 800acb4:	e024      	b.n	800ad00 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_hp, &g_ref_msg_buffer.data,
 800acb6:	4a56      	ldr	r2, [pc, #344]	@ (800ae10 <referee_processing_task+0x2d8>)
 800acb8:	4b49      	ldr	r3, [pc, #292]	@ (800ade0 <referee_processing_task+0x2a8>)
 800acba:	4614      	mov	r4, r2
 800acbc:	1c9d      	adds	r5, r3, #2
 800acbe:	6828      	ldr	r0, [r5, #0]
 800acc0:	6869      	ldr	r1, [r5, #4]
 800acc2:	68aa      	ldr	r2, [r5, #8]
 800acc4:	68eb      	ldr	r3, [r5, #12]
 800acc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800acc8:	6928      	ldr	r0, [r5, #16]
 800acca:	6969      	ldr	r1, [r5, #20]
 800accc:	69aa      	ldr	r2, [r5, #24]
 800acce:	c407      	stmia	r4!, {r0, r1, r2}
						ref_robot_hp_txno++;
 800acd0:	4b50      	ldr	r3, [pc, #320]	@ (800ae14 <referee_processing_task+0x2dc>)
 800acd2:	681b      	ldr	r3, [r3, #0]
 800acd4:	3301      	adds	r3, #1
 800acd6:	4a4f      	ldr	r2, [pc, #316]	@ (800ae14 <referee_processing_task+0x2dc>)
 800acd8:	6013      	str	r3, [r2, #0]
						break;
 800acda:	e011      	b.n	800ad00 <referee_processing_task+0x1c8>
						memcpy(&ref_mag_data, &g_ref_msg_buffer.data,
 800acdc:	4a4e      	ldr	r2, [pc, #312]	@ (800ae18 <referee_processing_task+0x2e0>)
 800acde:	4b40      	ldr	r3, [pc, #256]	@ (800ade0 <referee_processing_task+0x2a8>)
 800ace0:	3302      	adds	r3, #2
 800ace2:	6818      	ldr	r0, [r3, #0]
 800ace4:	6010      	str	r0, [r2, #0]
 800ace6:	889b      	ldrh	r3, [r3, #4]
 800ace8:	8093      	strh	r3, [r2, #4]
						ref_mag_data_txno++;
 800acea:	4b4c      	ldr	r3, [pc, #304]	@ (800ae1c <referee_processing_task+0x2e4>)
 800acec:	681b      	ldr	r3, [r3, #0]
 800acee:	3301      	adds	r3, #1
 800acf0:	4a4a      	ldr	r2, [pc, #296]	@ (800ae1c <referee_processing_task+0x2e4>)
 800acf2:	6013      	str	r3, [r2, #0]
						break;
 800acf4:	e004      	b.n	800ad00 <referee_processing_task+0x1c8>
					}
//						if (msg_buffer.cmd_id == REF_ROBOT_SHOOT_DATA_CMD_ID){
//							xQueueSend(uart_data_queue, &msg_buffer, 0);
//						}
				} else if (proc_status == INSUFFICIENT_DATA) {
 800acf6:	7dbb      	ldrb	r3, [r7, #22]
 800acf8:	2b02      	cmp	r3, #2
 800acfa:	d009      	beq.n	800ad10 <referee_processing_task+0x1d8>
 800acfc:	e000      	b.n	800ad00 <referee_processing_task+0x1c8>
						break;
 800acfe:	bf00      	nop
			while (queue_get_size(&referee_uart_q) > 7) {
 800ad00:	4835      	ldr	r0, [pc, #212]	@ (800add8 <referee_processing_task+0x2a0>)
 800ad02:	f7f7 faba 	bl	800227a <queue_get_size>
 800ad06:	4603      	mov	r3, r0
 800ad08:	2b07      	cmp	r3, #7
 800ad0a:	f63f af4b 	bhi.w	800aba4 <referee_processing_task+0x6c>
 800ad0e:	e000      	b.n	800ad12 <referee_processing_task+0x1da>
					break;
 800ad10:	bf00      	nop
				}
			}
		}
		if (!has_data){
 800ad12:	7dfb      	ldrb	r3, [r7, #23]
 800ad14:	2b00      	cmp	r3, #0
 800ad16:	d10e      	bne.n	800ad36 <referee_processing_task+0x1fe>
		    __HAL_DMA_ENABLE(&hdma_usart6_rx);
 800ad18:	4b41      	ldr	r3, [pc, #260]	@ (800ae20 <referee_processing_task+0x2e8>)
 800ad1a:	681b      	ldr	r3, [r3, #0]
 800ad1c:	681a      	ldr	r2, [r3, #0]
 800ad1e:	4b40      	ldr	r3, [pc, #256]	@ (800ae20 <referee_processing_task+0x2e8>)
 800ad20:	681b      	ldr	r3, [r3, #0]
 800ad22:	f042 0201 	orr.w	r2, r2, #1
 800ad26:	601a      	str	r2, [r3, #0]
			ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800ad28:	f107 0108 	add.w	r1, r7, #8
 800ad2c:	4b2a      	ldr	r3, [pc, #168]	@ (800add8 <referee_processing_task+0x2a0>)
 800ad2e:	2202      	movs	r2, #2
 800ad30:	482a      	ldr	r0, [pc, #168]	@ (800addc <referee_processing_task+0x2a4>)
 800ad32:	f7f7 feff 	bl	8002b34 <ref_usart_start>

		}

		status_led(5, off_led);
 800ad36:	2101      	movs	r1, #1
 800ad38:	2005      	movs	r0, #5
 800ad3a:	f7f7 f93d 	bl	8001fb8 <status_led>


		status_led(5, on_led);
 800ad3e:	2100      	movs	r1, #0
 800ad40:	2005      	movs	r0, #5
 800ad42:	f7f7 f939 	bl	8001fb8 <status_led>
		if (ref_robot_data.robot_level == 1) {
 800ad46:	4b23      	ldr	r3, [pc, #140]	@ (800add4 <referee_processing_task+0x29c>)
 800ad48:	785b      	ldrb	r3, [r3, #1]
 800ad4a:	2b01      	cmp	r3, #1
 800ad4c:	d112      	bne.n	800ad74 <referee_processing_task+0x23c>
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ad4e:	4b20      	ldr	r3, [pc, #128]	@ (800add0 <referee_processing_task+0x298>)
 800ad50:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ad54:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800ad56:	4b1e      	ldr	r3, [pc, #120]	@ (800add0 <referee_processing_task+0x298>)
 800ad58:	2213      	movs	r2, #19
 800ad5a:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 1;
 800ad5c:	4b1c      	ldr	r3, [pc, #112]	@ (800add0 <referee_processing_task+0x298>)
 800ad5e:	2201      	movs	r2, #1
 800ad60:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800ad62:	2100      	movs	r1, #0
 800ad64:	2007      	movs	r0, #7
 800ad66:	f7f7 f927 	bl	8001fb8 <status_led>
			status_led(8, off_led);
 800ad6a:	2101      	movs	r1, #1
 800ad6c:	2008      	movs	r0, #8
 800ad6e:	f7f7 f923 	bl	8001fb8 <status_led>
 800ad72:	e05e      	b.n	800ae32 <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 2) {
 800ad74:	4b17      	ldr	r3, [pc, #92]	@ (800add4 <referee_processing_task+0x29c>)
 800ad76:	785b      	ldrb	r3, [r3, #1]
 800ad78:	2b02      	cmp	r3, #2
 800ad7a:	d112      	bne.n	800ada2 <referee_processing_task+0x26a>
			g_referee_limiters.feeding_speed = LV2_FEEDER;
 800ad7c:	4b14      	ldr	r3, [pc, #80]	@ (800add0 <referee_processing_task+0x298>)
 800ad7e:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ad82:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV2_PROJECTILE;
 800ad84:	4b12      	ldr	r3, [pc, #72]	@ (800add0 <referee_processing_task+0x298>)
 800ad86:	2213      	movs	r2, #19
 800ad88:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 2;
 800ad8a:	4b11      	ldr	r3, [pc, #68]	@ (800add0 <referee_processing_task+0x298>)
 800ad8c:	2202      	movs	r2, #2
 800ad8e:	731a      	strb	r2, [r3, #12]
			status_led(7, off_led);
 800ad90:	2101      	movs	r1, #1
 800ad92:	2007      	movs	r0, #7
 800ad94:	f7f7 f910 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800ad98:	2100      	movs	r1, #0
 800ad9a:	2008      	movs	r0, #8
 800ad9c:	f7f7 f90c 	bl	8001fb8 <status_led>
 800ada0:	e047      	b.n	800ae32 <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 3) {
 800ada2:	4b0c      	ldr	r3, [pc, #48]	@ (800add4 <referee_processing_task+0x29c>)
 800ada4:	785b      	ldrb	r3, [r3, #1]
 800ada6:	2b03      	cmp	r3, #3
 800ada8:	d13c      	bne.n	800ae24 <referee_processing_task+0x2ec>
			g_referee_limiters.feeding_speed = LV3_FEEDER;
 800adaa:	4b09      	ldr	r3, [pc, #36]	@ (800add0 <referee_processing_task+0x298>)
 800adac:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800adb0:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV3_PROJECTILE;
 800adb2:	4b07      	ldr	r3, [pc, #28]	@ (800add0 <referee_processing_task+0x298>)
 800adb4:	2213      	movs	r2, #19
 800adb6:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 3;
 800adb8:	4b05      	ldr	r3, [pc, #20]	@ (800add0 <referee_processing_task+0x298>)
 800adba:	2203      	movs	r2, #3
 800adbc:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800adbe:	2100      	movs	r1, #0
 800adc0:	2007      	movs	r0, #7
 800adc2:	f7f7 f8f9 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800adc6:	2100      	movs	r1, #0
 800adc8:	2008      	movs	r0, #8
 800adca:	f7f7 f8f5 	bl	8001fb8 <status_led>
 800adce:	e030      	b.n	800ae32 <referee_processing_task+0x2fa>
 800add0:	200037dc 	.word	0x200037dc
 800add4:	20003860 	.word	0x20003860
 800add8:	200038c8 	.word	0x200038c8
 800addc:	20001c70 	.word	0x20001c70
 800ade0:	200037f4 	.word	0x200037f4
 800ade4:	200038ac 	.word	0x200038ac
 800ade8:	200038b4 	.word	0x200038b4
 800adec:	20003838 	.word	0x20003838
 800adf0:	2000383c 	.word	0x2000383c
 800adf4:	2000387c 	.word	0x2000387c
 800adf8:	20003894 	.word	0x20003894
 800adfc:	200038a0 	.word	0x200038a0
 800ae00:	20003880 	.word	0x20003880
 800ae04:	20003890 	.word	0x20003890
 800ae08:	200038a4 	.word	0x200038a4
 800ae0c:	200038a8 	.word	0x200038a8
 800ae10:	20003840 	.word	0x20003840
 800ae14:	2000385c 	.word	0x2000385c
 800ae18:	200038b8 	.word	0x200038b8
 800ae1c:	200038c0 	.word	0x200038c0
 800ae20:	20001d74 	.word	0x20001d74
		} else {
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ae24:	4b43      	ldr	r3, [pc, #268]	@ (800af34 <referee_processing_task+0x3fc>)
 800ae26:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ae2a:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800ae2c:	4b41      	ldr	r3, [pc, #260]	@ (800af34 <referee_processing_task+0x3fc>)
 800ae2e:	2213      	movs	r2, #19
 800ae30:	805a      	strh	r2, [r3, #2]
		}
		if (ref_robot_data.robot_level != 0) {
 800ae32:	4b41      	ldr	r3, [pc, #260]	@ (800af38 <referee_processing_task+0x400>)
 800ae34:	785b      	ldrb	r3, [r3, #1]
 800ae36:	2b00      	cmp	r3, #0
 800ae38:	d070      	beq.n	800af1c <referee_processing_task+0x3e4>
			float temp_buffer = 1;
 800ae3a:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ae3e:	61fb      	str	r3, [r7, #28]
			if (ref_power_data.buffer_energy < 50){
 800ae40:	4b3e      	ldr	r3, [pc, #248]	@ (800af3c <referee_processing_task+0x404>)
 800ae42:	891b      	ldrh	r3, [r3, #8]
 800ae44:	2b31      	cmp	r3, #49	@ 0x31
 800ae46:	d819      	bhi.n	800ae7c <referee_processing_task+0x344>
			temp_buffer = (float)ref_power_data.buffer_energy/50;
 800ae48:	4b3c      	ldr	r3, [pc, #240]	@ (800af3c <referee_processing_task+0x404>)
 800ae4a:	891b      	ldrh	r3, [r3, #8]
 800ae4c:	ee07 3a90 	vmov	s15, r3
 800ae50:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800ae54:	eddf 6a3a 	vldr	s13, [pc, #232]	@ 800af40 <referee_processing_task+0x408>
 800ae58:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ae5c:	edc7 7a07 	vstr	s15, [r7, #28]
			temp_buffer = (temp_buffer > 1) ? 1 : temp_buffer;
 800ae60:	edd7 7a07 	vldr	s15, [r7, #28]
 800ae64:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ae68:	eef4 7ac7 	vcmpe.f32	s15, s14
 800ae6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae70:	dd02      	ble.n	800ae78 <referee_processing_task+0x340>
 800ae72:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ae76:	e000      	b.n	800ae7a <referee_processing_task+0x342>
 800ae78:	69fb      	ldr	r3, [r7, #28]
 800ae7a:	61fb      	str	r3, [r7, #28]
			}
#ifdef CHASSIS_POWER_BUFFER_LIMITER
			g_referee_limiters.wheel_buffer_limit = temp_buffer * temp_buffer;
 800ae7c:	edd7 7a07 	vldr	s15, [r7, #28]
 800ae80:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800ae84:	4b2b      	ldr	r3, [pc, #172]	@ (800af34 <referee_processing_task+0x3fc>)
 800ae86:	edc3 7a02 	vstr	s15, [r3, #8]
#else
			g_referee_limiters.wheel_buffer_limit = 1;
#endif

			static float prev_chassis_power;
			float max_power = CHASSIS_MAX_POWER;
 800ae8a:	4b2e      	ldr	r3, [pc, #184]	@ (800af44 <referee_processing_task+0x40c>)
 800ae8c:	61bb      	str	r3, [r7, #24]
			float curr_chassis_power = prev_chassis_power * 0.5 + ref_power_data.chassis_power * 0.5;
 800ae8e:	4b2e      	ldr	r3, [pc, #184]	@ (800af48 <referee_processing_task+0x410>)
 800ae90:	681b      	ldr	r3, [r3, #0]
 800ae92:	4618      	mov	r0, r3
 800ae94:	f7f5 fb58 	bl	8000548 <__aeabi_f2d>
 800ae98:	f04f 0200 	mov.w	r2, #0
 800ae9c:	4b2b      	ldr	r3, [pc, #172]	@ (800af4c <referee_processing_task+0x414>)
 800ae9e:	f7f5 fbab 	bl	80005f8 <__aeabi_dmul>
 800aea2:	4602      	mov	r2, r0
 800aea4:	460b      	mov	r3, r1
 800aea6:	4614      	mov	r4, r2
 800aea8:	461d      	mov	r5, r3
 800aeaa:	4b24      	ldr	r3, [pc, #144]	@ (800af3c <referee_processing_task+0x404>)
 800aeac:	685b      	ldr	r3, [r3, #4]
 800aeae:	4618      	mov	r0, r3
 800aeb0:	f7f5 fb4a 	bl	8000548 <__aeabi_f2d>
 800aeb4:	f04f 0200 	mov.w	r2, #0
 800aeb8:	4b24      	ldr	r3, [pc, #144]	@ (800af4c <referee_processing_task+0x414>)
 800aeba:	f7f5 fb9d 	bl	80005f8 <__aeabi_dmul>
 800aebe:	4602      	mov	r2, r0
 800aec0:	460b      	mov	r3, r1
 800aec2:	4620      	mov	r0, r4
 800aec4:	4629      	mov	r1, r5
 800aec6:	f7f5 f9e1 	bl	800028c <__adddf3>
 800aeca:	4602      	mov	r2, r0
 800aecc:	460b      	mov	r3, r1
 800aece:	4610      	mov	r0, r2
 800aed0:	4619      	mov	r1, r3
 800aed2:	f7f5 fe89 	bl	8000be8 <__aeabi_d2f>
 800aed6:	4603      	mov	r3, r0
 800aed8:	613b      	str	r3, [r7, #16]
			prev_chassis_power = ref_power_data.chassis_power;
 800aeda:	4b18      	ldr	r3, [pc, #96]	@ (800af3c <referee_processing_task+0x404>)
 800aedc:	685b      	ldr	r3, [r3, #4]
 800aede:	4a1a      	ldr	r2, [pc, #104]	@ (800af48 <referee_processing_task+0x410>)
 800aee0:	6013      	str	r3, [r2, #0]
			if (ref_robot_data.chassis_power_limit < CHASSIS_MAX_POWER){
 800aee2:	4b15      	ldr	r3, [pc, #84]	@ (800af38 <referee_processing_task+0x400>)
 800aee4:	8b1b      	ldrh	r3, [r3, #24]
 800aee6:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800aeea:	d207      	bcs.n	800aefc <referee_processing_task+0x3c4>
				max_power = ref_robot_data.chassis_power_limit;
 800aeec:	4b12      	ldr	r3, [pc, #72]	@ (800af38 <referee_processing_task+0x400>)
 800aeee:	8b1b      	ldrh	r3, [r3, #24]
 800aef0:	ee07 3a90 	vmov	s15, r3
 800aef4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800aef8:	edc7 7a06 	vstr	s15, [r7, #24]
			}
			float temp_power = (float) ((curr_chassis_power)/(max_power - CHASSIS_POWER_MARGIN));
 800aefc:	edd7 7a06 	vldr	s15, [r7, #24]
 800af00:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800af04:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800af08:	edd7 6a04 	vldr	s13, [r7, #16]
 800af0c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800af10:	edc7 7a03 	vstr	s15, [r7, #12]
//			temp_power = (temp_power > 1) ? 1 : temp_power;
			g_referee_limiters.wheel_power_limit = temp_power;
 800af14:	4a07      	ldr	r2, [pc, #28]	@ (800af34 <referee_processing_task+0x3fc>)
 800af16:	68fb      	ldr	r3, [r7, #12]
 800af18:	6053      	str	r3, [r2, #4]
 800af1a:	e007      	b.n	800af2c <referee_processing_task+0x3f4>
//			arm_sqrt_f32(temp_power, &referee_limiters.wheel_power_limit);
		} else {
			g_referee_limiters.wheel_buffer_limit = 1;
 800af1c:	4b05      	ldr	r3, [pc, #20]	@ (800af34 <referee_processing_task+0x3fc>)
 800af1e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800af22:	609a      	str	r2, [r3, #8]
			g_referee_limiters.wheel_power_limit = 1;
 800af24:	4b03      	ldr	r3, [pc, #12]	@ (800af34 <referee_processing_task+0x3fc>)
 800af26:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800af2a:	605a      	str	r2, [r3, #4]

		}
		vTaskDelay(2);
 800af2c:	2002      	movs	r0, #2
 800af2e:	f00d facd 	bl	80184cc <vTaskDelay>
	while (1) {
 800af32:	e624      	b.n	800ab7e <referee_processing_task+0x46>
 800af34:	200037dc 	.word	0x200037dc
 800af38:	20003860 	.word	0x20003860
 800af3c:	20003880 	.word	0x20003880
 800af40:	42480000 	.word	0x42480000
 800af44:	43c80000 	.word	0x43c80000
 800af48:	200039d0 	.word	0x200039d0
 800af4c:	3fe00000 	.word	0x3fe00000

0800af50 <rtIsInf>:
 800af50:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af52:	b083      	sub	sp, #12
 800af54:	af00      	add	r7, sp, #0
 800af56:	ed87 0b00 	vstr	d0, [r7]
 800af5a:	683c      	ldr	r4, [r7, #0]
 800af5c:	687b      	ldr	r3, [r7, #4]
 800af5e:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800af62:	2301      	movs	r3, #1
 800af64:	461e      	mov	r6, r3
 800af66:	f04f 32ff 	mov.w	r2, #4294967295
 800af6a:	4b0f      	ldr	r3, [pc, #60]	@ (800afa8 <rtIsInf+0x58>)
 800af6c:	4620      	mov	r0, r4
 800af6e:	4629      	mov	r1, r5
 800af70:	f7f5 fddc 	bl	8000b2c <__aeabi_dcmpun>
 800af74:	4603      	mov	r3, r0
 800af76:	2b00      	cmp	r3, #0
 800af78:	d10b      	bne.n	800af92 <rtIsInf+0x42>
 800af7a:	f04f 32ff 	mov.w	r2, #4294967295
 800af7e:	4b0a      	ldr	r3, [pc, #40]	@ (800afa8 <rtIsInf+0x58>)
 800af80:	4620      	mov	r0, r4
 800af82:	4629      	mov	r1, r5
 800af84:	f7f5 fdb4 	bl	8000af0 <__aeabi_dcmple>
 800af88:	4603      	mov	r3, r0
 800af8a:	2b00      	cmp	r3, #0
 800af8c:	d101      	bne.n	800af92 <rtIsInf+0x42>
 800af8e:	2300      	movs	r3, #0
 800af90:	461e      	mov	r6, r3
 800af92:	b2f3      	uxtb	r3, r6
 800af94:	f083 0301 	eor.w	r3, r3, #1
 800af98:	b2db      	uxtb	r3, r3
 800af9a:	f003 0301 	and.w	r3, r3, #1
 800af9e:	b2db      	uxtb	r3, r3
 800afa0:	4618      	mov	r0, r3
 800afa2:	370c      	adds	r7, #12
 800afa4:	46bd      	mov	sp, r7
 800afa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800afa8:	7fefffff 	.word	0x7fefffff

0800afac <rtIsNaN>:
 800afac:	b580      	push	{r7, lr}
 800afae:	b082      	sub	sp, #8
 800afb0:	af00      	add	r7, sp, #0
 800afb2:	ed87 0b00 	vstr	d0, [r7]
 800afb6:	e9d7 2300 	ldrd	r2, r3, [r7]
 800afba:	e9d7 0100 	ldrd	r0, r1, [r7]
 800afbe:	f7f5 fdb5 	bl	8000b2c <__aeabi_dcmpun>
 800afc2:	4603      	mov	r3, r0
 800afc4:	2b00      	cmp	r3, #0
 800afc6:	d001      	beq.n	800afcc <rtIsNaN+0x20>
 800afc8:	2301      	movs	r3, #1
 800afca:	e000      	b.n	800afce <rtIsNaN+0x22>
 800afcc:	2300      	movs	r3, #0
 800afce:	4618      	mov	r0, r3
 800afd0:	3708      	adds	r7, #8
 800afd2:	46bd      	mov	sp, r7
 800afd4:	bd80      	pop	{r7, pc}

0800afd6 <startup_task>:
#include "startup_task.h"
#include "gimbal_control_task.h"
#include "buzzing_task.h"
#include <can_msg_processor.h>

void startup_task() {
 800afd6:	b580      	push	{r7, lr}
 800afd8:	af00      	add	r7, sp, #0
	//todo: shift all to an actual task, reimplement motor not connected errors
	led_on();
 800afda:	f7f6 ffc7 	bl	8001f6c <led_on>
	buzzer_init();
 800afde:	f7f6 f8e7 	bl	80011b0 <buzzer_init>
	imu_init();
 800afe2:	f7f6 fdcd 	bl	8001b80 <imu_init>
	led_green_off();
 800afe6:	f7f6 ffb3 	bl	8001f50 <led_green_off>
	start_micros_timer();
 800afea:	f7f7 f8c5 	bl	8002178 <start_micros_timer>
	led_toggle();
 800afee:	f7f6 ffdb 	bl	8001fa8 <led_toggle>

}
 800aff2:	bf00      	nop
 800aff4:	bd80      	pop	{r7, pc}
	...

0800aff8 <usb_vcp_processing>:
uint8_t usb_waiting = 0;

//#define DATA_OUTPUT_MODE
#define USB_CONFIG_MODE

void usb_vcp_processing(uint8_t *buffer, uint32_t *len) {
 800aff8:	b580      	push	{r7, lr}
 800affa:	b0c4      	sub	sp, #272	@ 0x110
 800affc:	af00      	add	r7, sp, #0
 800affe:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b002:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800b006:	6018      	str	r0, [r3, #0]
 800b008:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b00c:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800b010:	6019      	str	r1, [r3, #0]
	uint8_t blank_buffer[MAX_CHAR_SIZE] = { 0 };
 800b012:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b016:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800b01a:	2200      	movs	r2, #0
 800b01c:	601a      	str	r2, [r3, #0]
 800b01e:	3304      	adds	r3, #4
 800b020:	22fc      	movs	r2, #252	@ 0xfc
 800b022:	2100      	movs	r1, #0
 800b024:	4618      	mov	r0, r3
 800b026:	f00f ff9c 	bl	801af62 <memset>
	memcpy(blank_buffer, buffer, *len);
 800b02a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b02e:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800b032:	681b      	ldr	r3, [r3, #0]
 800b034:	681a      	ldr	r2, [r3, #0]
 800b036:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b03a:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800b03e:	f107 0010 	add.w	r0, r7, #16
 800b042:	6819      	ldr	r1, [r3, #0]
 800b044:	f010 f836 	bl	801b0b4 <memcpy>
	memcpy(usb_input_buffer, blank_buffer, MAX_CHAR_SIZE);
 800b048:	4a1a      	ldr	r2, [pc, #104]	@ (800b0b4 <usb_vcp_processing+0xbc>)
 800b04a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b04e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800b052:	4610      	mov	r0, r2
 800b054:	4619      	mov	r1, r3
 800b056:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800b05a:	461a      	mov	r2, r3
 800b05c:	f010 f82a 	bl	801b0b4 <memcpy>
	usb_input_len = *len;
 800b060:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b064:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800b068:	681b      	ldr	r3, [r3, #0]
 800b06a:	681b      	ldr	r3, [r3, #0]
 800b06c:	4a12      	ldr	r2, [pc, #72]	@ (800b0b8 <usb_vcp_processing+0xc0>)
 800b06e:	6013      	str	r3, [r2, #0]

	//Check if the currently running task needs to yield
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 800b070:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b074:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b078:	2200      	movs	r2, #0
 800b07a:	601a      	str	r2, [r3, #0]
	xSemaphoreGiveFromISR(usb_continue_semaphore, &xHigherPriorityTaskWoken);
 800b07c:	4b0f      	ldr	r3, [pc, #60]	@ (800b0bc <usb_vcp_processing+0xc4>)
 800b07e:	681b      	ldr	r3, [r3, #0]
 800b080:	f107 020c 	add.w	r2, r7, #12
 800b084:	4611      	mov	r1, r2
 800b086:	4618      	mov	r0, r3
 800b088:	f00c fcd6 	bl	8017a38 <xQueueGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 800b08c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b090:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800b094:	681b      	ldr	r3, [r3, #0]
 800b096:	2b00      	cmp	r3, #0
 800b098:	d007      	beq.n	800b0aa <usb_vcp_processing+0xb2>
 800b09a:	4b09      	ldr	r3, [pc, #36]	@ (800b0c0 <usb_vcp_processing+0xc8>)
 800b09c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800b0a0:	601a      	str	r2, [r3, #0]
 800b0a2:	f3bf 8f4f 	dsb	sy
 800b0a6:	f3bf 8f6f 	isb	sy
}
 800b0aa:	bf00      	nop
 800b0ac:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800b0b0:	46bd      	mov	sp, r7
 800b0b2:	bd80      	pop	{r7, pc}
 800b0b4:	200039d4 	.word	0x200039d4
 800b0b8:	20003ad4 	.word	0x20003ad4
 800b0bc:	200037c4 	.word	0x200037c4
 800b0c0:	e000ed04 	.word	0xe000ed04

0800b0c4 <usb_task>:
	return 0;

}


void usb_task(void *argument) {
 800b0c4:	b580      	push	{r7, lr}
 800b0c6:	b082      	sub	sp, #8
 800b0c8:	af00      	add	r7, sp, #0
 800b0ca:	6078      	str	r0, [r7, #4]
//						CDC_Transmit_FS(usb_input_buffer, len);
//					}
//				}
//			}
//		}
		vTaskDelay(100);
 800b0cc:	2064      	movs	r0, #100	@ 0x64
 800b0ce:	f00d f9fd 	bl	80184cc <vTaskDelay>
 800b0d2:	e7fb      	b.n	800b0cc <usb_task+0x8>

0800b0d4 <HAL_Init>:
 800b0d4:	b580      	push	{r7, lr}
 800b0d6:	af00      	add	r7, sp, #0
 800b0d8:	4b0e      	ldr	r3, [pc, #56]	@ (800b114 <HAL_Init+0x40>)
 800b0da:	681b      	ldr	r3, [r3, #0]
 800b0dc:	4a0d      	ldr	r2, [pc, #52]	@ (800b114 <HAL_Init+0x40>)
 800b0de:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800b0e2:	6013      	str	r3, [r2, #0]
 800b0e4:	4b0b      	ldr	r3, [pc, #44]	@ (800b114 <HAL_Init+0x40>)
 800b0e6:	681b      	ldr	r3, [r3, #0]
 800b0e8:	4a0a      	ldr	r2, [pc, #40]	@ (800b114 <HAL_Init+0x40>)
 800b0ea:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800b0ee:	6013      	str	r3, [r2, #0]
 800b0f0:	4b08      	ldr	r3, [pc, #32]	@ (800b114 <HAL_Init+0x40>)
 800b0f2:	681b      	ldr	r3, [r3, #0]
 800b0f4:	4a07      	ldr	r2, [pc, #28]	@ (800b114 <HAL_Init+0x40>)
 800b0f6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b0fa:	6013      	str	r3, [r2, #0]
 800b0fc:	2003      	movs	r0, #3
 800b0fe:	f001 fa02 	bl	800c506 <HAL_NVIC_SetPriorityGrouping>
 800b102:	200f      	movs	r0, #15
 800b104:	f7f8 fce2 	bl	8003acc <HAL_InitTick>
 800b108:	f7f8 fcb4 	bl	8003a74 <HAL_MspInit>
 800b10c:	2300      	movs	r3, #0
 800b10e:	4618      	mov	r0, r3
 800b110:	bd80      	pop	{r7, pc}
 800b112:	bf00      	nop
 800b114:	40023c00 	.word	0x40023c00

0800b118 <HAL_IncTick>:
 800b118:	b480      	push	{r7}
 800b11a:	af00      	add	r7, sp, #0
 800b11c:	4b06      	ldr	r3, [pc, #24]	@ (800b138 <HAL_IncTick+0x20>)
 800b11e:	781b      	ldrb	r3, [r3, #0]
 800b120:	461a      	mov	r2, r3
 800b122:	4b06      	ldr	r3, [pc, #24]	@ (800b13c <HAL_IncTick+0x24>)
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	4413      	add	r3, r2
 800b128:	4a04      	ldr	r2, [pc, #16]	@ (800b13c <HAL_IncTick+0x24>)
 800b12a:	6013      	str	r3, [r2, #0]
 800b12c:	bf00      	nop
 800b12e:	46bd      	mov	sp, r7
 800b130:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b134:	4770      	bx	lr
 800b136:	bf00      	nop
 800b138:	2000001c 	.word	0x2000001c
 800b13c:	20003ad8 	.word	0x20003ad8

0800b140 <HAL_GetTick>:
 800b140:	b480      	push	{r7}
 800b142:	af00      	add	r7, sp, #0
 800b144:	4b03      	ldr	r3, [pc, #12]	@ (800b154 <HAL_GetTick+0x14>)
 800b146:	681b      	ldr	r3, [r3, #0]
 800b148:	4618      	mov	r0, r3
 800b14a:	46bd      	mov	sp, r7
 800b14c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b150:	4770      	bx	lr
 800b152:	bf00      	nop
 800b154:	20003ad8 	.word	0x20003ad8

0800b158 <HAL_Delay>:
 800b158:	b580      	push	{r7, lr}
 800b15a:	b084      	sub	sp, #16
 800b15c:	af00      	add	r7, sp, #0
 800b15e:	6078      	str	r0, [r7, #4]
 800b160:	f7ff ffee 	bl	800b140 <HAL_GetTick>
 800b164:	60b8      	str	r0, [r7, #8]
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	60fb      	str	r3, [r7, #12]
 800b16a:	68fb      	ldr	r3, [r7, #12]
 800b16c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b170:	d005      	beq.n	800b17e <HAL_Delay+0x26>
 800b172:	4b0a      	ldr	r3, [pc, #40]	@ (800b19c <HAL_Delay+0x44>)
 800b174:	781b      	ldrb	r3, [r3, #0]
 800b176:	461a      	mov	r2, r3
 800b178:	68fb      	ldr	r3, [r7, #12]
 800b17a:	4413      	add	r3, r2
 800b17c:	60fb      	str	r3, [r7, #12]
 800b17e:	bf00      	nop
 800b180:	f7ff ffde 	bl	800b140 <HAL_GetTick>
 800b184:	4602      	mov	r2, r0
 800b186:	68bb      	ldr	r3, [r7, #8]
 800b188:	1ad3      	subs	r3, r2, r3
 800b18a:	68fa      	ldr	r2, [r7, #12]
 800b18c:	429a      	cmp	r2, r3
 800b18e:	d8f7      	bhi.n	800b180 <HAL_Delay+0x28>
 800b190:	bf00      	nop
 800b192:	bf00      	nop
 800b194:	3710      	adds	r7, #16
 800b196:	46bd      	mov	sp, r7
 800b198:	bd80      	pop	{r7, pc}
 800b19a:	bf00      	nop
 800b19c:	2000001c 	.word	0x2000001c

0800b1a0 <HAL_ADC_Init>:
 800b1a0:	b580      	push	{r7, lr}
 800b1a2:	b084      	sub	sp, #16
 800b1a4:	af00      	add	r7, sp, #0
 800b1a6:	6078      	str	r0, [r7, #4]
 800b1a8:	2300      	movs	r3, #0
 800b1aa:	73fb      	strb	r3, [r7, #15]
 800b1ac:	687b      	ldr	r3, [r7, #4]
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d101      	bne.n	800b1b6 <HAL_ADC_Init+0x16>
 800b1b2:	2301      	movs	r3, #1
 800b1b4:	e033      	b.n	800b21e <HAL_ADC_Init+0x7e>
 800b1b6:	687b      	ldr	r3, [r7, #4]
 800b1b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b1ba:	2b00      	cmp	r3, #0
 800b1bc:	d109      	bne.n	800b1d2 <HAL_ADC_Init+0x32>
 800b1be:	6878      	ldr	r0, [r7, #4]
 800b1c0:	f7f7 fdea 	bl	8002d98 <HAL_ADC_MspInit>
 800b1c4:	687b      	ldr	r3, [r7, #4]
 800b1c6:	2200      	movs	r2, #0
 800b1c8:	645a      	str	r2, [r3, #68]	@ 0x44
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	2200      	movs	r2, #0
 800b1ce:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b1d6:	f003 0310 	and.w	r3, r3, #16
 800b1da:	2b00      	cmp	r3, #0
 800b1dc:	d118      	bne.n	800b210 <HAL_ADC_Init+0x70>
 800b1de:	687b      	ldr	r3, [r7, #4]
 800b1e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b1e2:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800b1e6:	f023 0302 	bic.w	r3, r3, #2
 800b1ea:	f043 0202 	orr.w	r2, r3, #2
 800b1ee:	687b      	ldr	r3, [r7, #4]
 800b1f0:	641a      	str	r2, [r3, #64]	@ 0x40
 800b1f2:	6878      	ldr	r0, [r7, #4]
 800b1f4:	f000 f93a 	bl	800b46c <ADC_Init>
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	2200      	movs	r2, #0
 800b1fc:	645a      	str	r2, [r3, #68]	@ 0x44
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b202:	f023 0303 	bic.w	r3, r3, #3
 800b206:	f043 0201 	orr.w	r2, r3, #1
 800b20a:	687b      	ldr	r3, [r7, #4]
 800b20c:	641a      	str	r2, [r3, #64]	@ 0x40
 800b20e:	e001      	b.n	800b214 <HAL_ADC_Init+0x74>
 800b210:	2301      	movs	r3, #1
 800b212:	73fb      	strb	r3, [r7, #15]
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	2200      	movs	r2, #0
 800b218:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b21c:	7bfb      	ldrb	r3, [r7, #15]
 800b21e:	4618      	mov	r0, r3
 800b220:	3710      	adds	r7, #16
 800b222:	46bd      	mov	sp, r7
 800b224:	bd80      	pop	{r7, pc}
	...

0800b228 <HAL_ADC_ConfigChannel>:
 800b228:	b480      	push	{r7}
 800b22a:	b085      	sub	sp, #20
 800b22c:	af00      	add	r7, sp, #0
 800b22e:	6078      	str	r0, [r7, #4]
 800b230:	6039      	str	r1, [r7, #0]
 800b232:	2300      	movs	r3, #0
 800b234:	60bb      	str	r3, [r7, #8]
 800b236:	687b      	ldr	r3, [r7, #4]
 800b238:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800b23c:	2b01      	cmp	r3, #1
 800b23e:	d101      	bne.n	800b244 <HAL_ADC_ConfigChannel+0x1c>
 800b240:	2302      	movs	r3, #2
 800b242:	e105      	b.n	800b450 <HAL_ADC_ConfigChannel+0x228>
 800b244:	687b      	ldr	r3, [r7, #4]
 800b246:	2201      	movs	r2, #1
 800b248:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b24c:	683b      	ldr	r3, [r7, #0]
 800b24e:	681b      	ldr	r3, [r3, #0]
 800b250:	2b09      	cmp	r3, #9
 800b252:	d925      	bls.n	800b2a0 <HAL_ADC_ConfigChannel+0x78>
 800b254:	687b      	ldr	r3, [r7, #4]
 800b256:	681b      	ldr	r3, [r3, #0]
 800b258:	68d9      	ldr	r1, [r3, #12]
 800b25a:	683b      	ldr	r3, [r7, #0]
 800b25c:	681b      	ldr	r3, [r3, #0]
 800b25e:	b29b      	uxth	r3, r3
 800b260:	461a      	mov	r2, r3
 800b262:	4613      	mov	r3, r2
 800b264:	005b      	lsls	r3, r3, #1
 800b266:	4413      	add	r3, r2
 800b268:	3b1e      	subs	r3, #30
 800b26a:	2207      	movs	r2, #7
 800b26c:	fa02 f303 	lsl.w	r3, r2, r3
 800b270:	43da      	mvns	r2, r3
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	400a      	ands	r2, r1
 800b278:	60da      	str	r2, [r3, #12]
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	681b      	ldr	r3, [r3, #0]
 800b27e:	68d9      	ldr	r1, [r3, #12]
 800b280:	683b      	ldr	r3, [r7, #0]
 800b282:	689a      	ldr	r2, [r3, #8]
 800b284:	683b      	ldr	r3, [r7, #0]
 800b286:	681b      	ldr	r3, [r3, #0]
 800b288:	b29b      	uxth	r3, r3
 800b28a:	4618      	mov	r0, r3
 800b28c:	4603      	mov	r3, r0
 800b28e:	005b      	lsls	r3, r3, #1
 800b290:	4403      	add	r3, r0
 800b292:	3b1e      	subs	r3, #30
 800b294:	409a      	lsls	r2, r3
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	681b      	ldr	r3, [r3, #0]
 800b29a:	430a      	orrs	r2, r1
 800b29c:	60da      	str	r2, [r3, #12]
 800b29e:	e022      	b.n	800b2e6 <HAL_ADC_ConfigChannel+0xbe>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	681b      	ldr	r3, [r3, #0]
 800b2a4:	6919      	ldr	r1, [r3, #16]
 800b2a6:	683b      	ldr	r3, [r7, #0]
 800b2a8:	681b      	ldr	r3, [r3, #0]
 800b2aa:	b29b      	uxth	r3, r3
 800b2ac:	461a      	mov	r2, r3
 800b2ae:	4613      	mov	r3, r2
 800b2b0:	005b      	lsls	r3, r3, #1
 800b2b2:	4413      	add	r3, r2
 800b2b4:	2207      	movs	r2, #7
 800b2b6:	fa02 f303 	lsl.w	r3, r2, r3
 800b2ba:	43da      	mvns	r2, r3
 800b2bc:	687b      	ldr	r3, [r7, #4]
 800b2be:	681b      	ldr	r3, [r3, #0]
 800b2c0:	400a      	ands	r2, r1
 800b2c2:	611a      	str	r2, [r3, #16]
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	681b      	ldr	r3, [r3, #0]
 800b2c8:	6919      	ldr	r1, [r3, #16]
 800b2ca:	683b      	ldr	r3, [r7, #0]
 800b2cc:	689a      	ldr	r2, [r3, #8]
 800b2ce:	683b      	ldr	r3, [r7, #0]
 800b2d0:	681b      	ldr	r3, [r3, #0]
 800b2d2:	b29b      	uxth	r3, r3
 800b2d4:	4618      	mov	r0, r3
 800b2d6:	4603      	mov	r3, r0
 800b2d8:	005b      	lsls	r3, r3, #1
 800b2da:	4403      	add	r3, r0
 800b2dc:	409a      	lsls	r2, r3
 800b2de:	687b      	ldr	r3, [r7, #4]
 800b2e0:	681b      	ldr	r3, [r3, #0]
 800b2e2:	430a      	orrs	r2, r1
 800b2e4:	611a      	str	r2, [r3, #16]
 800b2e6:	683b      	ldr	r3, [r7, #0]
 800b2e8:	685b      	ldr	r3, [r3, #4]
 800b2ea:	2b06      	cmp	r3, #6
 800b2ec:	d824      	bhi.n	800b338 <HAL_ADC_ConfigChannel+0x110>
 800b2ee:	687b      	ldr	r3, [r7, #4]
 800b2f0:	681b      	ldr	r3, [r3, #0]
 800b2f2:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b2f4:	683b      	ldr	r3, [r7, #0]
 800b2f6:	685a      	ldr	r2, [r3, #4]
 800b2f8:	4613      	mov	r3, r2
 800b2fa:	009b      	lsls	r3, r3, #2
 800b2fc:	4413      	add	r3, r2
 800b2fe:	3b05      	subs	r3, #5
 800b300:	221f      	movs	r2, #31
 800b302:	fa02 f303 	lsl.w	r3, r2, r3
 800b306:	43da      	mvns	r2, r3
 800b308:	687b      	ldr	r3, [r7, #4]
 800b30a:	681b      	ldr	r3, [r3, #0]
 800b30c:	400a      	ands	r2, r1
 800b30e:	635a      	str	r2, [r3, #52]	@ 0x34
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	681b      	ldr	r3, [r3, #0]
 800b314:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b316:	683b      	ldr	r3, [r7, #0]
 800b318:	681b      	ldr	r3, [r3, #0]
 800b31a:	b29b      	uxth	r3, r3
 800b31c:	4618      	mov	r0, r3
 800b31e:	683b      	ldr	r3, [r7, #0]
 800b320:	685a      	ldr	r2, [r3, #4]
 800b322:	4613      	mov	r3, r2
 800b324:	009b      	lsls	r3, r3, #2
 800b326:	4413      	add	r3, r2
 800b328:	3b05      	subs	r3, #5
 800b32a:	fa00 f203 	lsl.w	r2, r0, r3
 800b32e:	687b      	ldr	r3, [r7, #4]
 800b330:	681b      	ldr	r3, [r3, #0]
 800b332:	430a      	orrs	r2, r1
 800b334:	635a      	str	r2, [r3, #52]	@ 0x34
 800b336:	e04c      	b.n	800b3d2 <HAL_ADC_ConfigChannel+0x1aa>
 800b338:	683b      	ldr	r3, [r7, #0]
 800b33a:	685b      	ldr	r3, [r3, #4]
 800b33c:	2b0c      	cmp	r3, #12
 800b33e:	d824      	bhi.n	800b38a <HAL_ADC_ConfigChannel+0x162>
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	681b      	ldr	r3, [r3, #0]
 800b344:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b346:	683b      	ldr	r3, [r7, #0]
 800b348:	685a      	ldr	r2, [r3, #4]
 800b34a:	4613      	mov	r3, r2
 800b34c:	009b      	lsls	r3, r3, #2
 800b34e:	4413      	add	r3, r2
 800b350:	3b23      	subs	r3, #35	@ 0x23
 800b352:	221f      	movs	r2, #31
 800b354:	fa02 f303 	lsl.w	r3, r2, r3
 800b358:	43da      	mvns	r2, r3
 800b35a:	687b      	ldr	r3, [r7, #4]
 800b35c:	681b      	ldr	r3, [r3, #0]
 800b35e:	400a      	ands	r2, r1
 800b360:	631a      	str	r2, [r3, #48]	@ 0x30
 800b362:	687b      	ldr	r3, [r7, #4]
 800b364:	681b      	ldr	r3, [r3, #0]
 800b366:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b368:	683b      	ldr	r3, [r7, #0]
 800b36a:	681b      	ldr	r3, [r3, #0]
 800b36c:	b29b      	uxth	r3, r3
 800b36e:	4618      	mov	r0, r3
 800b370:	683b      	ldr	r3, [r7, #0]
 800b372:	685a      	ldr	r2, [r3, #4]
 800b374:	4613      	mov	r3, r2
 800b376:	009b      	lsls	r3, r3, #2
 800b378:	4413      	add	r3, r2
 800b37a:	3b23      	subs	r3, #35	@ 0x23
 800b37c:	fa00 f203 	lsl.w	r2, r0, r3
 800b380:	687b      	ldr	r3, [r7, #4]
 800b382:	681b      	ldr	r3, [r3, #0]
 800b384:	430a      	orrs	r2, r1
 800b386:	631a      	str	r2, [r3, #48]	@ 0x30
 800b388:	e023      	b.n	800b3d2 <HAL_ADC_ConfigChannel+0x1aa>
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b390:	683b      	ldr	r3, [r7, #0]
 800b392:	685a      	ldr	r2, [r3, #4]
 800b394:	4613      	mov	r3, r2
 800b396:	009b      	lsls	r3, r3, #2
 800b398:	4413      	add	r3, r2
 800b39a:	3b41      	subs	r3, #65	@ 0x41
 800b39c:	221f      	movs	r2, #31
 800b39e:	fa02 f303 	lsl.w	r3, r2, r3
 800b3a2:	43da      	mvns	r2, r3
 800b3a4:	687b      	ldr	r3, [r7, #4]
 800b3a6:	681b      	ldr	r3, [r3, #0]
 800b3a8:	400a      	ands	r2, r1
 800b3aa:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	681b      	ldr	r3, [r3, #0]
 800b3b0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b3b2:	683b      	ldr	r3, [r7, #0]
 800b3b4:	681b      	ldr	r3, [r3, #0]
 800b3b6:	b29b      	uxth	r3, r3
 800b3b8:	4618      	mov	r0, r3
 800b3ba:	683b      	ldr	r3, [r7, #0]
 800b3bc:	685a      	ldr	r2, [r3, #4]
 800b3be:	4613      	mov	r3, r2
 800b3c0:	009b      	lsls	r3, r3, #2
 800b3c2:	4413      	add	r3, r2
 800b3c4:	3b41      	subs	r3, #65	@ 0x41
 800b3c6:	fa00 f203 	lsl.w	r2, r0, r3
 800b3ca:	687b      	ldr	r3, [r7, #4]
 800b3cc:	681b      	ldr	r3, [r3, #0]
 800b3ce:	430a      	orrs	r2, r1
 800b3d0:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b3d2:	4b22      	ldr	r3, [pc, #136]	@ (800b45c <HAL_ADC_ConfigChannel+0x234>)
 800b3d4:	60fb      	str	r3, [r7, #12]
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	681b      	ldr	r3, [r3, #0]
 800b3da:	4a21      	ldr	r2, [pc, #132]	@ (800b460 <HAL_ADC_ConfigChannel+0x238>)
 800b3dc:	4293      	cmp	r3, r2
 800b3de:	d109      	bne.n	800b3f4 <HAL_ADC_ConfigChannel+0x1cc>
 800b3e0:	683b      	ldr	r3, [r7, #0]
 800b3e2:	681b      	ldr	r3, [r3, #0]
 800b3e4:	2b12      	cmp	r3, #18
 800b3e6:	d105      	bne.n	800b3f4 <HAL_ADC_ConfigChannel+0x1cc>
 800b3e8:	68fb      	ldr	r3, [r7, #12]
 800b3ea:	685b      	ldr	r3, [r3, #4]
 800b3ec:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 800b3f0:	68fb      	ldr	r3, [r7, #12]
 800b3f2:	605a      	str	r2, [r3, #4]
 800b3f4:	687b      	ldr	r3, [r7, #4]
 800b3f6:	681b      	ldr	r3, [r3, #0]
 800b3f8:	4a19      	ldr	r2, [pc, #100]	@ (800b460 <HAL_ADC_ConfigChannel+0x238>)
 800b3fa:	4293      	cmp	r3, r2
 800b3fc:	d123      	bne.n	800b446 <HAL_ADC_ConfigChannel+0x21e>
 800b3fe:	683b      	ldr	r3, [r7, #0]
 800b400:	681b      	ldr	r3, [r3, #0]
 800b402:	2b10      	cmp	r3, #16
 800b404:	d003      	beq.n	800b40e <HAL_ADC_ConfigChannel+0x1e6>
 800b406:	683b      	ldr	r3, [r7, #0]
 800b408:	681b      	ldr	r3, [r3, #0]
 800b40a:	2b11      	cmp	r3, #17
 800b40c:	d11b      	bne.n	800b446 <HAL_ADC_ConfigChannel+0x21e>
 800b40e:	68fb      	ldr	r3, [r7, #12]
 800b410:	685b      	ldr	r3, [r3, #4]
 800b412:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800b416:	68fb      	ldr	r3, [r7, #12]
 800b418:	605a      	str	r2, [r3, #4]
 800b41a:	683b      	ldr	r3, [r7, #0]
 800b41c:	681b      	ldr	r3, [r3, #0]
 800b41e:	2b10      	cmp	r3, #16
 800b420:	d111      	bne.n	800b446 <HAL_ADC_ConfigChannel+0x21e>
 800b422:	4b10      	ldr	r3, [pc, #64]	@ (800b464 <HAL_ADC_ConfigChannel+0x23c>)
 800b424:	681b      	ldr	r3, [r3, #0]
 800b426:	4a10      	ldr	r2, [pc, #64]	@ (800b468 <HAL_ADC_ConfigChannel+0x240>)
 800b428:	fba2 2303 	umull	r2, r3, r2, r3
 800b42c:	0c9a      	lsrs	r2, r3, #18
 800b42e:	4613      	mov	r3, r2
 800b430:	009b      	lsls	r3, r3, #2
 800b432:	4413      	add	r3, r2
 800b434:	005b      	lsls	r3, r3, #1
 800b436:	60bb      	str	r3, [r7, #8]
 800b438:	e002      	b.n	800b440 <HAL_ADC_ConfigChannel+0x218>
 800b43a:	68bb      	ldr	r3, [r7, #8]
 800b43c:	3b01      	subs	r3, #1
 800b43e:	60bb      	str	r3, [r7, #8]
 800b440:	68bb      	ldr	r3, [r7, #8]
 800b442:	2b00      	cmp	r3, #0
 800b444:	d1f9      	bne.n	800b43a <HAL_ADC_ConfigChannel+0x212>
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	2200      	movs	r2, #0
 800b44a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b44e:	2300      	movs	r3, #0
 800b450:	4618      	mov	r0, r3
 800b452:	3714      	adds	r7, #20
 800b454:	46bd      	mov	sp, r7
 800b456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b45a:	4770      	bx	lr
 800b45c:	40012300 	.word	0x40012300
 800b460:	40012000 	.word	0x40012000
 800b464:	20000004 	.word	0x20000004
 800b468:	431bde83 	.word	0x431bde83

0800b46c <ADC_Init>:
 800b46c:	b480      	push	{r7}
 800b46e:	b085      	sub	sp, #20
 800b470:	af00      	add	r7, sp, #0
 800b472:	6078      	str	r0, [r7, #4]
 800b474:	4b79      	ldr	r3, [pc, #484]	@ (800b65c <ADC_Init+0x1f0>)
 800b476:	60fb      	str	r3, [r7, #12]
 800b478:	68fb      	ldr	r3, [r7, #12]
 800b47a:	685b      	ldr	r3, [r3, #4]
 800b47c:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800b480:	68fb      	ldr	r3, [r7, #12]
 800b482:	605a      	str	r2, [r3, #4]
 800b484:	68fb      	ldr	r3, [r7, #12]
 800b486:	685a      	ldr	r2, [r3, #4]
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	685b      	ldr	r3, [r3, #4]
 800b48c:	431a      	orrs	r2, r3
 800b48e:	68fb      	ldr	r3, [r7, #12]
 800b490:	605a      	str	r2, [r3, #4]
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	681b      	ldr	r3, [r3, #0]
 800b496:	685a      	ldr	r2, [r3, #4]
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	681b      	ldr	r3, [r3, #0]
 800b49c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b4a0:	605a      	str	r2, [r3, #4]
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	681b      	ldr	r3, [r3, #0]
 800b4a6:	6859      	ldr	r1, [r3, #4]
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	691b      	ldr	r3, [r3, #16]
 800b4ac:	021a      	lsls	r2, r3, #8
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	681b      	ldr	r3, [r3, #0]
 800b4b2:	430a      	orrs	r2, r1
 800b4b4:	605a      	str	r2, [r3, #4]
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	681b      	ldr	r3, [r3, #0]
 800b4ba:	685a      	ldr	r2, [r3, #4]
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	681b      	ldr	r3, [r3, #0]
 800b4c0:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800b4c4:	605a      	str	r2, [r3, #4]
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	681b      	ldr	r3, [r3, #0]
 800b4ca:	6859      	ldr	r1, [r3, #4]
 800b4cc:	687b      	ldr	r3, [r7, #4]
 800b4ce:	689a      	ldr	r2, [r3, #8]
 800b4d0:	687b      	ldr	r3, [r7, #4]
 800b4d2:	681b      	ldr	r3, [r3, #0]
 800b4d4:	430a      	orrs	r2, r1
 800b4d6:	605a      	str	r2, [r3, #4]
 800b4d8:	687b      	ldr	r3, [r7, #4]
 800b4da:	681b      	ldr	r3, [r3, #0]
 800b4dc:	689a      	ldr	r2, [r3, #8]
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b4e6:	609a      	str	r2, [r3, #8]
 800b4e8:	687b      	ldr	r3, [r7, #4]
 800b4ea:	681b      	ldr	r3, [r3, #0]
 800b4ec:	6899      	ldr	r1, [r3, #8]
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	68da      	ldr	r2, [r3, #12]
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	681b      	ldr	r3, [r3, #0]
 800b4f6:	430a      	orrs	r2, r1
 800b4f8:	609a      	str	r2, [r3, #8]
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b4fe:	4a58      	ldr	r2, [pc, #352]	@ (800b660 <ADC_Init+0x1f4>)
 800b500:	4293      	cmp	r3, r2
 800b502:	d022      	beq.n	800b54a <ADC_Init+0xde>
 800b504:	687b      	ldr	r3, [r7, #4]
 800b506:	681b      	ldr	r3, [r3, #0]
 800b508:	689a      	ldr	r2, [r3, #8]
 800b50a:	687b      	ldr	r3, [r7, #4]
 800b50c:	681b      	ldr	r3, [r3, #0]
 800b50e:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b512:	609a      	str	r2, [r3, #8]
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	6899      	ldr	r1, [r3, #8]
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	681b      	ldr	r3, [r3, #0]
 800b522:	430a      	orrs	r2, r1
 800b524:	609a      	str	r2, [r3, #8]
 800b526:	687b      	ldr	r3, [r7, #4]
 800b528:	681b      	ldr	r3, [r3, #0]
 800b52a:	689a      	ldr	r2, [r3, #8]
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	681b      	ldr	r3, [r3, #0]
 800b530:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b534:	609a      	str	r2, [r3, #8]
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	681b      	ldr	r3, [r3, #0]
 800b53a:	6899      	ldr	r1, [r3, #8]
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b540:	687b      	ldr	r3, [r7, #4]
 800b542:	681b      	ldr	r3, [r3, #0]
 800b544:	430a      	orrs	r2, r1
 800b546:	609a      	str	r2, [r3, #8]
 800b548:	e00f      	b.n	800b56a <ADC_Init+0xfe>
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	681b      	ldr	r3, [r3, #0]
 800b54e:	689a      	ldr	r2, [r3, #8]
 800b550:	687b      	ldr	r3, [r7, #4]
 800b552:	681b      	ldr	r3, [r3, #0]
 800b554:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b558:	609a      	str	r2, [r3, #8]
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	681b      	ldr	r3, [r3, #0]
 800b55e:	689a      	ldr	r2, [r3, #8]
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	681b      	ldr	r3, [r3, #0]
 800b564:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b568:	609a      	str	r2, [r3, #8]
 800b56a:	687b      	ldr	r3, [r7, #4]
 800b56c:	681b      	ldr	r3, [r3, #0]
 800b56e:	689a      	ldr	r2, [r3, #8]
 800b570:	687b      	ldr	r3, [r7, #4]
 800b572:	681b      	ldr	r3, [r3, #0]
 800b574:	f022 0202 	bic.w	r2, r2, #2
 800b578:	609a      	str	r2, [r3, #8]
 800b57a:	687b      	ldr	r3, [r7, #4]
 800b57c:	681b      	ldr	r3, [r3, #0]
 800b57e:	6899      	ldr	r1, [r3, #8]
 800b580:	687b      	ldr	r3, [r7, #4]
 800b582:	7e1b      	ldrb	r3, [r3, #24]
 800b584:	005a      	lsls	r2, r3, #1
 800b586:	687b      	ldr	r3, [r7, #4]
 800b588:	681b      	ldr	r3, [r3, #0]
 800b58a:	430a      	orrs	r2, r1
 800b58c:	609a      	str	r2, [r3, #8]
 800b58e:	687b      	ldr	r3, [r7, #4]
 800b590:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b594:	2b00      	cmp	r3, #0
 800b596:	d01b      	beq.n	800b5d0 <ADC_Init+0x164>
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	681b      	ldr	r3, [r3, #0]
 800b59c:	685a      	ldr	r2, [r3, #4]
 800b59e:	687b      	ldr	r3, [r7, #4]
 800b5a0:	681b      	ldr	r3, [r3, #0]
 800b5a2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800b5a6:	605a      	str	r2, [r3, #4]
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	685a      	ldr	r2, [r3, #4]
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	681b      	ldr	r3, [r3, #0]
 800b5b2:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800b5b6:	605a      	str	r2, [r3, #4]
 800b5b8:	687b      	ldr	r3, [r7, #4]
 800b5ba:	681b      	ldr	r3, [r3, #0]
 800b5bc:	6859      	ldr	r1, [r3, #4]
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5c2:	3b01      	subs	r3, #1
 800b5c4:	035a      	lsls	r2, r3, #13
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	681b      	ldr	r3, [r3, #0]
 800b5ca:	430a      	orrs	r2, r1
 800b5cc:	605a      	str	r2, [r3, #4]
 800b5ce:	e007      	b.n	800b5e0 <ADC_Init+0x174>
 800b5d0:	687b      	ldr	r3, [r7, #4]
 800b5d2:	681b      	ldr	r3, [r3, #0]
 800b5d4:	685a      	ldr	r2, [r3, #4]
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	681b      	ldr	r3, [r3, #0]
 800b5da:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b5de:	605a      	str	r2, [r3, #4]
 800b5e0:	687b      	ldr	r3, [r7, #4]
 800b5e2:	681b      	ldr	r3, [r3, #0]
 800b5e4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b5e6:	687b      	ldr	r3, [r7, #4]
 800b5e8:	681b      	ldr	r3, [r3, #0]
 800b5ea:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800b5ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b5f0:	687b      	ldr	r3, [r7, #4]
 800b5f2:	681b      	ldr	r3, [r3, #0]
 800b5f4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	69db      	ldr	r3, [r3, #28]
 800b5fa:	3b01      	subs	r3, #1
 800b5fc:	051a      	lsls	r2, r3, #20
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	681b      	ldr	r3, [r3, #0]
 800b602:	430a      	orrs	r2, r1
 800b604:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	681b      	ldr	r3, [r3, #0]
 800b60a:	689a      	ldr	r2, [r3, #8]
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	681b      	ldr	r3, [r3, #0]
 800b610:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800b614:	609a      	str	r2, [r3, #8]
 800b616:	687b      	ldr	r3, [r7, #4]
 800b618:	681b      	ldr	r3, [r3, #0]
 800b61a:	6899      	ldr	r1, [r3, #8]
 800b61c:	687b      	ldr	r3, [r7, #4]
 800b61e:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800b622:	025a      	lsls	r2, r3, #9
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	681b      	ldr	r3, [r3, #0]
 800b628:	430a      	orrs	r2, r1
 800b62a:	609a      	str	r2, [r3, #8]
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	681b      	ldr	r3, [r3, #0]
 800b630:	689a      	ldr	r2, [r3, #8]
 800b632:	687b      	ldr	r3, [r7, #4]
 800b634:	681b      	ldr	r3, [r3, #0]
 800b636:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b63a:	609a      	str	r2, [r3, #8]
 800b63c:	687b      	ldr	r3, [r7, #4]
 800b63e:	681b      	ldr	r3, [r3, #0]
 800b640:	6899      	ldr	r1, [r3, #8]
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	695b      	ldr	r3, [r3, #20]
 800b646:	029a      	lsls	r2, r3, #10
 800b648:	687b      	ldr	r3, [r7, #4]
 800b64a:	681b      	ldr	r3, [r3, #0]
 800b64c:	430a      	orrs	r2, r1
 800b64e:	609a      	str	r2, [r3, #8]
 800b650:	bf00      	nop
 800b652:	3714      	adds	r7, #20
 800b654:	46bd      	mov	sp, r7
 800b656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b65a:	4770      	bx	lr
 800b65c:	40012300 	.word	0x40012300
 800b660:	0f000001 	.word	0x0f000001

0800b664 <HAL_CAN_Init>:
 800b664:	b580      	push	{r7, lr}
 800b666:	b084      	sub	sp, #16
 800b668:	af00      	add	r7, sp, #0
 800b66a:	6078      	str	r0, [r7, #4]
 800b66c:	687b      	ldr	r3, [r7, #4]
 800b66e:	2b00      	cmp	r3, #0
 800b670:	d101      	bne.n	800b676 <HAL_CAN_Init+0x12>
 800b672:	2301      	movs	r3, #1
 800b674:	e0ed      	b.n	800b852 <HAL_CAN_Init+0x1ee>
 800b676:	687b      	ldr	r3, [r7, #4]
 800b678:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b67c:	b2db      	uxtb	r3, r3
 800b67e:	2b00      	cmp	r3, #0
 800b680:	d102      	bne.n	800b688 <HAL_CAN_Init+0x24>
 800b682:	6878      	ldr	r0, [r7, #4]
 800b684:	f7f7 fc38 	bl	8002ef8 <HAL_CAN_MspInit>
 800b688:	687b      	ldr	r3, [r7, #4]
 800b68a:	681b      	ldr	r3, [r3, #0]
 800b68c:	681a      	ldr	r2, [r3, #0]
 800b68e:	687b      	ldr	r3, [r7, #4]
 800b690:	681b      	ldr	r3, [r3, #0]
 800b692:	f042 0201 	orr.w	r2, r2, #1
 800b696:	601a      	str	r2, [r3, #0]
 800b698:	f7ff fd52 	bl	800b140 <HAL_GetTick>
 800b69c:	60f8      	str	r0, [r7, #12]
 800b69e:	e012      	b.n	800b6c6 <HAL_CAN_Init+0x62>
 800b6a0:	f7ff fd4e 	bl	800b140 <HAL_GetTick>
 800b6a4:	4602      	mov	r2, r0
 800b6a6:	68fb      	ldr	r3, [r7, #12]
 800b6a8:	1ad3      	subs	r3, r2, r3
 800b6aa:	2b0a      	cmp	r3, #10
 800b6ac:	d90b      	bls.n	800b6c6 <HAL_CAN_Init+0x62>
 800b6ae:	687b      	ldr	r3, [r7, #4]
 800b6b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b6b2:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	625a      	str	r2, [r3, #36]	@ 0x24
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	2205      	movs	r2, #5
 800b6be:	f883 2020 	strb.w	r2, [r3, #32]
 800b6c2:	2301      	movs	r3, #1
 800b6c4:	e0c5      	b.n	800b852 <HAL_CAN_Init+0x1ee>
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	681b      	ldr	r3, [r3, #0]
 800b6ca:	685b      	ldr	r3, [r3, #4]
 800b6cc:	f003 0301 	and.w	r3, r3, #1
 800b6d0:	2b00      	cmp	r3, #0
 800b6d2:	d0e5      	beq.n	800b6a0 <HAL_CAN_Init+0x3c>
 800b6d4:	687b      	ldr	r3, [r7, #4]
 800b6d6:	681b      	ldr	r3, [r3, #0]
 800b6d8:	681a      	ldr	r2, [r3, #0]
 800b6da:	687b      	ldr	r3, [r7, #4]
 800b6dc:	681b      	ldr	r3, [r3, #0]
 800b6de:	f022 0202 	bic.w	r2, r2, #2
 800b6e2:	601a      	str	r2, [r3, #0]
 800b6e4:	f7ff fd2c 	bl	800b140 <HAL_GetTick>
 800b6e8:	60f8      	str	r0, [r7, #12]
 800b6ea:	e012      	b.n	800b712 <HAL_CAN_Init+0xae>
 800b6ec:	f7ff fd28 	bl	800b140 <HAL_GetTick>
 800b6f0:	4602      	mov	r2, r0
 800b6f2:	68fb      	ldr	r3, [r7, #12]
 800b6f4:	1ad3      	subs	r3, r2, r3
 800b6f6:	2b0a      	cmp	r3, #10
 800b6f8:	d90b      	bls.n	800b712 <HAL_CAN_Init+0xae>
 800b6fa:	687b      	ldr	r3, [r7, #4]
 800b6fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b6fe:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	625a      	str	r2, [r3, #36]	@ 0x24
 800b706:	687b      	ldr	r3, [r7, #4]
 800b708:	2205      	movs	r2, #5
 800b70a:	f883 2020 	strb.w	r2, [r3, #32]
 800b70e:	2301      	movs	r3, #1
 800b710:	e09f      	b.n	800b852 <HAL_CAN_Init+0x1ee>
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	681b      	ldr	r3, [r3, #0]
 800b716:	685b      	ldr	r3, [r3, #4]
 800b718:	f003 0302 	and.w	r3, r3, #2
 800b71c:	2b00      	cmp	r3, #0
 800b71e:	d1e5      	bne.n	800b6ec <HAL_CAN_Init+0x88>
 800b720:	687b      	ldr	r3, [r7, #4]
 800b722:	7e1b      	ldrb	r3, [r3, #24]
 800b724:	2b01      	cmp	r3, #1
 800b726:	d108      	bne.n	800b73a <HAL_CAN_Init+0xd6>
 800b728:	687b      	ldr	r3, [r7, #4]
 800b72a:	681b      	ldr	r3, [r3, #0]
 800b72c:	681a      	ldr	r2, [r3, #0]
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	681b      	ldr	r3, [r3, #0]
 800b732:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800b736:	601a      	str	r2, [r3, #0]
 800b738:	e007      	b.n	800b74a <HAL_CAN_Init+0xe6>
 800b73a:	687b      	ldr	r3, [r7, #4]
 800b73c:	681b      	ldr	r3, [r3, #0]
 800b73e:	681a      	ldr	r2, [r3, #0]
 800b740:	687b      	ldr	r3, [r7, #4]
 800b742:	681b      	ldr	r3, [r3, #0]
 800b744:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800b748:	601a      	str	r2, [r3, #0]
 800b74a:	687b      	ldr	r3, [r7, #4]
 800b74c:	7e5b      	ldrb	r3, [r3, #25]
 800b74e:	2b01      	cmp	r3, #1
 800b750:	d108      	bne.n	800b764 <HAL_CAN_Init+0x100>
 800b752:	687b      	ldr	r3, [r7, #4]
 800b754:	681b      	ldr	r3, [r3, #0]
 800b756:	681a      	ldr	r2, [r3, #0]
 800b758:	687b      	ldr	r3, [r7, #4]
 800b75a:	681b      	ldr	r3, [r3, #0]
 800b75c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800b760:	601a      	str	r2, [r3, #0]
 800b762:	e007      	b.n	800b774 <HAL_CAN_Init+0x110>
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	681b      	ldr	r3, [r3, #0]
 800b768:	681a      	ldr	r2, [r3, #0]
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	681b      	ldr	r3, [r3, #0]
 800b76e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b772:	601a      	str	r2, [r3, #0]
 800b774:	687b      	ldr	r3, [r7, #4]
 800b776:	7e9b      	ldrb	r3, [r3, #26]
 800b778:	2b01      	cmp	r3, #1
 800b77a:	d108      	bne.n	800b78e <HAL_CAN_Init+0x12a>
 800b77c:	687b      	ldr	r3, [r7, #4]
 800b77e:	681b      	ldr	r3, [r3, #0]
 800b780:	681a      	ldr	r2, [r3, #0]
 800b782:	687b      	ldr	r3, [r7, #4]
 800b784:	681b      	ldr	r3, [r3, #0]
 800b786:	f042 0220 	orr.w	r2, r2, #32
 800b78a:	601a      	str	r2, [r3, #0]
 800b78c:	e007      	b.n	800b79e <HAL_CAN_Init+0x13a>
 800b78e:	687b      	ldr	r3, [r7, #4]
 800b790:	681b      	ldr	r3, [r3, #0]
 800b792:	681a      	ldr	r2, [r3, #0]
 800b794:	687b      	ldr	r3, [r7, #4]
 800b796:	681b      	ldr	r3, [r3, #0]
 800b798:	f022 0220 	bic.w	r2, r2, #32
 800b79c:	601a      	str	r2, [r3, #0]
 800b79e:	687b      	ldr	r3, [r7, #4]
 800b7a0:	7edb      	ldrb	r3, [r3, #27]
 800b7a2:	2b01      	cmp	r3, #1
 800b7a4:	d108      	bne.n	800b7b8 <HAL_CAN_Init+0x154>
 800b7a6:	687b      	ldr	r3, [r7, #4]
 800b7a8:	681b      	ldr	r3, [r3, #0]
 800b7aa:	681a      	ldr	r2, [r3, #0]
 800b7ac:	687b      	ldr	r3, [r7, #4]
 800b7ae:	681b      	ldr	r3, [r3, #0]
 800b7b0:	f022 0210 	bic.w	r2, r2, #16
 800b7b4:	601a      	str	r2, [r3, #0]
 800b7b6:	e007      	b.n	800b7c8 <HAL_CAN_Init+0x164>
 800b7b8:	687b      	ldr	r3, [r7, #4]
 800b7ba:	681b      	ldr	r3, [r3, #0]
 800b7bc:	681a      	ldr	r2, [r3, #0]
 800b7be:	687b      	ldr	r3, [r7, #4]
 800b7c0:	681b      	ldr	r3, [r3, #0]
 800b7c2:	f042 0210 	orr.w	r2, r2, #16
 800b7c6:	601a      	str	r2, [r3, #0]
 800b7c8:	687b      	ldr	r3, [r7, #4]
 800b7ca:	7f1b      	ldrb	r3, [r3, #28]
 800b7cc:	2b01      	cmp	r3, #1
 800b7ce:	d108      	bne.n	800b7e2 <HAL_CAN_Init+0x17e>
 800b7d0:	687b      	ldr	r3, [r7, #4]
 800b7d2:	681b      	ldr	r3, [r3, #0]
 800b7d4:	681a      	ldr	r2, [r3, #0]
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	681b      	ldr	r3, [r3, #0]
 800b7da:	f042 0208 	orr.w	r2, r2, #8
 800b7de:	601a      	str	r2, [r3, #0]
 800b7e0:	e007      	b.n	800b7f2 <HAL_CAN_Init+0x18e>
 800b7e2:	687b      	ldr	r3, [r7, #4]
 800b7e4:	681b      	ldr	r3, [r3, #0]
 800b7e6:	681a      	ldr	r2, [r3, #0]
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	681b      	ldr	r3, [r3, #0]
 800b7ec:	f022 0208 	bic.w	r2, r2, #8
 800b7f0:	601a      	str	r2, [r3, #0]
 800b7f2:	687b      	ldr	r3, [r7, #4]
 800b7f4:	7f5b      	ldrb	r3, [r3, #29]
 800b7f6:	2b01      	cmp	r3, #1
 800b7f8:	d108      	bne.n	800b80c <HAL_CAN_Init+0x1a8>
 800b7fa:	687b      	ldr	r3, [r7, #4]
 800b7fc:	681b      	ldr	r3, [r3, #0]
 800b7fe:	681a      	ldr	r2, [r3, #0]
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	681b      	ldr	r3, [r3, #0]
 800b804:	f042 0204 	orr.w	r2, r2, #4
 800b808:	601a      	str	r2, [r3, #0]
 800b80a:	e007      	b.n	800b81c <HAL_CAN_Init+0x1b8>
 800b80c:	687b      	ldr	r3, [r7, #4]
 800b80e:	681b      	ldr	r3, [r3, #0]
 800b810:	681a      	ldr	r2, [r3, #0]
 800b812:	687b      	ldr	r3, [r7, #4]
 800b814:	681b      	ldr	r3, [r3, #0]
 800b816:	f022 0204 	bic.w	r2, r2, #4
 800b81a:	601a      	str	r2, [r3, #0]
 800b81c:	687b      	ldr	r3, [r7, #4]
 800b81e:	689a      	ldr	r2, [r3, #8]
 800b820:	687b      	ldr	r3, [r7, #4]
 800b822:	68db      	ldr	r3, [r3, #12]
 800b824:	431a      	orrs	r2, r3
 800b826:	687b      	ldr	r3, [r7, #4]
 800b828:	691b      	ldr	r3, [r3, #16]
 800b82a:	431a      	orrs	r2, r3
 800b82c:	687b      	ldr	r3, [r7, #4]
 800b82e:	695b      	ldr	r3, [r3, #20]
 800b830:	ea42 0103 	orr.w	r1, r2, r3
 800b834:	687b      	ldr	r3, [r7, #4]
 800b836:	685b      	ldr	r3, [r3, #4]
 800b838:	1e5a      	subs	r2, r3, #1
 800b83a:	687b      	ldr	r3, [r7, #4]
 800b83c:	681b      	ldr	r3, [r3, #0]
 800b83e:	430a      	orrs	r2, r1
 800b840:	61da      	str	r2, [r3, #28]
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	2200      	movs	r2, #0
 800b846:	625a      	str	r2, [r3, #36]	@ 0x24
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	2201      	movs	r2, #1
 800b84c:	f883 2020 	strb.w	r2, [r3, #32]
 800b850:	2300      	movs	r3, #0
 800b852:	4618      	mov	r0, r3
 800b854:	3710      	adds	r7, #16
 800b856:	46bd      	mov	sp, r7
 800b858:	bd80      	pop	{r7, pc}
	...

0800b85c <HAL_CAN_ConfigFilter>:
 800b85c:	b480      	push	{r7}
 800b85e:	b087      	sub	sp, #28
 800b860:	af00      	add	r7, sp, #0
 800b862:	6078      	str	r0, [r7, #4]
 800b864:	6039      	str	r1, [r7, #0]
 800b866:	687b      	ldr	r3, [r7, #4]
 800b868:	681b      	ldr	r3, [r3, #0]
 800b86a:	617b      	str	r3, [r7, #20]
 800b86c:	687b      	ldr	r3, [r7, #4]
 800b86e:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b872:	74fb      	strb	r3, [r7, #19]
 800b874:	7cfb      	ldrb	r3, [r7, #19]
 800b876:	2b01      	cmp	r3, #1
 800b878:	d003      	beq.n	800b882 <HAL_CAN_ConfigFilter+0x26>
 800b87a:	7cfb      	ldrb	r3, [r7, #19]
 800b87c:	2b02      	cmp	r3, #2
 800b87e:	f040 80be 	bne.w	800b9fe <HAL_CAN_ConfigFilter+0x1a2>
 800b882:	4b65      	ldr	r3, [pc, #404]	@ (800ba18 <HAL_CAN_ConfigFilter+0x1bc>)
 800b884:	617b      	str	r3, [r7, #20]
 800b886:	697b      	ldr	r3, [r7, #20]
 800b888:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b88c:	f043 0201 	orr.w	r2, r3, #1
 800b890:	697b      	ldr	r3, [r7, #20]
 800b892:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b896:	697b      	ldr	r3, [r7, #20]
 800b898:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b89c:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 800b8a0:	697b      	ldr	r3, [r7, #20]
 800b8a2:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b8a6:	697b      	ldr	r3, [r7, #20]
 800b8a8:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800b8ac:	683b      	ldr	r3, [r7, #0]
 800b8ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b8b0:	021b      	lsls	r3, r3, #8
 800b8b2:	431a      	orrs	r2, r3
 800b8b4:	697b      	ldr	r3, [r7, #20]
 800b8b6:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b8ba:	683b      	ldr	r3, [r7, #0]
 800b8bc:	695b      	ldr	r3, [r3, #20]
 800b8be:	f003 031f 	and.w	r3, r3, #31
 800b8c2:	2201      	movs	r2, #1
 800b8c4:	fa02 f303 	lsl.w	r3, r2, r3
 800b8c8:	60fb      	str	r3, [r7, #12]
 800b8ca:	697b      	ldr	r3, [r7, #20]
 800b8cc:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800b8d0:	68fb      	ldr	r3, [r7, #12]
 800b8d2:	43db      	mvns	r3, r3
 800b8d4:	401a      	ands	r2, r3
 800b8d6:	697b      	ldr	r3, [r7, #20]
 800b8d8:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800b8dc:	683b      	ldr	r3, [r7, #0]
 800b8de:	69db      	ldr	r3, [r3, #28]
 800b8e0:	2b00      	cmp	r3, #0
 800b8e2:	d123      	bne.n	800b92c <HAL_CAN_ConfigFilter+0xd0>
 800b8e4:	697b      	ldr	r3, [r7, #20]
 800b8e6:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800b8ea:	68fb      	ldr	r3, [r7, #12]
 800b8ec:	43db      	mvns	r3, r3
 800b8ee:	401a      	ands	r2, r3
 800b8f0:	697b      	ldr	r3, [r7, #20]
 800b8f2:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800b8f6:	683b      	ldr	r3, [r7, #0]
 800b8f8:	68db      	ldr	r3, [r3, #12]
 800b8fa:	0419      	lsls	r1, r3, #16
 800b8fc:	683b      	ldr	r3, [r7, #0]
 800b8fe:	685b      	ldr	r3, [r3, #4]
 800b900:	b29b      	uxth	r3, r3
 800b902:	683a      	ldr	r2, [r7, #0]
 800b904:	6952      	ldr	r2, [r2, #20]
 800b906:	4319      	orrs	r1, r3
 800b908:	697b      	ldr	r3, [r7, #20]
 800b90a:	3248      	adds	r2, #72	@ 0x48
 800b90c:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800b910:	683b      	ldr	r3, [r7, #0]
 800b912:	689b      	ldr	r3, [r3, #8]
 800b914:	0419      	lsls	r1, r3, #16
 800b916:	683b      	ldr	r3, [r7, #0]
 800b918:	681b      	ldr	r3, [r3, #0]
 800b91a:	b29a      	uxth	r2, r3
 800b91c:	683b      	ldr	r3, [r7, #0]
 800b91e:	695b      	ldr	r3, [r3, #20]
 800b920:	430a      	orrs	r2, r1
 800b922:	6979      	ldr	r1, [r7, #20]
 800b924:	3348      	adds	r3, #72	@ 0x48
 800b926:	00db      	lsls	r3, r3, #3
 800b928:	440b      	add	r3, r1
 800b92a:	605a      	str	r2, [r3, #4]
 800b92c:	683b      	ldr	r3, [r7, #0]
 800b92e:	69db      	ldr	r3, [r3, #28]
 800b930:	2b01      	cmp	r3, #1
 800b932:	d122      	bne.n	800b97a <HAL_CAN_ConfigFilter+0x11e>
 800b934:	697b      	ldr	r3, [r7, #20]
 800b936:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800b93a:	68fb      	ldr	r3, [r7, #12]
 800b93c:	431a      	orrs	r2, r3
 800b93e:	697b      	ldr	r3, [r7, #20]
 800b940:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800b944:	683b      	ldr	r3, [r7, #0]
 800b946:	681b      	ldr	r3, [r3, #0]
 800b948:	0419      	lsls	r1, r3, #16
 800b94a:	683b      	ldr	r3, [r7, #0]
 800b94c:	685b      	ldr	r3, [r3, #4]
 800b94e:	b29b      	uxth	r3, r3
 800b950:	683a      	ldr	r2, [r7, #0]
 800b952:	6952      	ldr	r2, [r2, #20]
 800b954:	4319      	orrs	r1, r3
 800b956:	697b      	ldr	r3, [r7, #20]
 800b958:	3248      	adds	r2, #72	@ 0x48
 800b95a:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800b95e:	683b      	ldr	r3, [r7, #0]
 800b960:	689b      	ldr	r3, [r3, #8]
 800b962:	0419      	lsls	r1, r3, #16
 800b964:	683b      	ldr	r3, [r7, #0]
 800b966:	68db      	ldr	r3, [r3, #12]
 800b968:	b29a      	uxth	r2, r3
 800b96a:	683b      	ldr	r3, [r7, #0]
 800b96c:	695b      	ldr	r3, [r3, #20]
 800b96e:	430a      	orrs	r2, r1
 800b970:	6979      	ldr	r1, [r7, #20]
 800b972:	3348      	adds	r3, #72	@ 0x48
 800b974:	00db      	lsls	r3, r3, #3
 800b976:	440b      	add	r3, r1
 800b978:	605a      	str	r2, [r3, #4]
 800b97a:	683b      	ldr	r3, [r7, #0]
 800b97c:	699b      	ldr	r3, [r3, #24]
 800b97e:	2b00      	cmp	r3, #0
 800b980:	d109      	bne.n	800b996 <HAL_CAN_ConfigFilter+0x13a>
 800b982:	697b      	ldr	r3, [r7, #20]
 800b984:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800b988:	68fb      	ldr	r3, [r7, #12]
 800b98a:	43db      	mvns	r3, r3
 800b98c:	401a      	ands	r2, r3
 800b98e:	697b      	ldr	r3, [r7, #20]
 800b990:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800b994:	e007      	b.n	800b9a6 <HAL_CAN_ConfigFilter+0x14a>
 800b996:	697b      	ldr	r3, [r7, #20]
 800b998:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800b99c:	68fb      	ldr	r3, [r7, #12]
 800b99e:	431a      	orrs	r2, r3
 800b9a0:	697b      	ldr	r3, [r7, #20]
 800b9a2:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800b9a6:	683b      	ldr	r3, [r7, #0]
 800b9a8:	691b      	ldr	r3, [r3, #16]
 800b9aa:	2b00      	cmp	r3, #0
 800b9ac:	d109      	bne.n	800b9c2 <HAL_CAN_ConfigFilter+0x166>
 800b9ae:	697b      	ldr	r3, [r7, #20]
 800b9b0:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800b9b4:	68fb      	ldr	r3, [r7, #12]
 800b9b6:	43db      	mvns	r3, r3
 800b9b8:	401a      	ands	r2, r3
 800b9ba:	697b      	ldr	r3, [r7, #20]
 800b9bc:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800b9c0:	e007      	b.n	800b9d2 <HAL_CAN_ConfigFilter+0x176>
 800b9c2:	697b      	ldr	r3, [r7, #20]
 800b9c4:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800b9c8:	68fb      	ldr	r3, [r7, #12]
 800b9ca:	431a      	orrs	r2, r3
 800b9cc:	697b      	ldr	r3, [r7, #20]
 800b9ce:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800b9d2:	683b      	ldr	r3, [r7, #0]
 800b9d4:	6a1b      	ldr	r3, [r3, #32]
 800b9d6:	2b01      	cmp	r3, #1
 800b9d8:	d107      	bne.n	800b9ea <HAL_CAN_ConfigFilter+0x18e>
 800b9da:	697b      	ldr	r3, [r7, #20]
 800b9dc:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800b9e0:	68fb      	ldr	r3, [r7, #12]
 800b9e2:	431a      	orrs	r2, r3
 800b9e4:	697b      	ldr	r3, [r7, #20]
 800b9e6:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800b9ea:	697b      	ldr	r3, [r7, #20]
 800b9ec:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b9f0:	f023 0201 	bic.w	r2, r3, #1
 800b9f4:	697b      	ldr	r3, [r7, #20]
 800b9f6:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b9fa:	2300      	movs	r3, #0
 800b9fc:	e006      	b.n	800ba0c <HAL_CAN_ConfigFilter+0x1b0>
 800b9fe:	687b      	ldr	r3, [r7, #4]
 800ba00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ba02:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800ba06:	687b      	ldr	r3, [r7, #4]
 800ba08:	625a      	str	r2, [r3, #36]	@ 0x24
 800ba0a:	2301      	movs	r3, #1
 800ba0c:	4618      	mov	r0, r3
 800ba0e:	371c      	adds	r7, #28
 800ba10:	46bd      	mov	sp, r7
 800ba12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba16:	4770      	bx	lr
 800ba18:	40006400 	.word	0x40006400

0800ba1c <HAL_CAN_Start>:
 800ba1c:	b580      	push	{r7, lr}
 800ba1e:	b084      	sub	sp, #16
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
 800ba24:	687b      	ldr	r3, [r7, #4]
 800ba26:	f893 3020 	ldrb.w	r3, [r3, #32]
 800ba2a:	b2db      	uxtb	r3, r3
 800ba2c:	2b01      	cmp	r3, #1
 800ba2e:	d12e      	bne.n	800ba8e <HAL_CAN_Start+0x72>
 800ba30:	687b      	ldr	r3, [r7, #4]
 800ba32:	2202      	movs	r2, #2
 800ba34:	f883 2020 	strb.w	r2, [r3, #32]
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	681b      	ldr	r3, [r3, #0]
 800ba3c:	681a      	ldr	r2, [r3, #0]
 800ba3e:	687b      	ldr	r3, [r7, #4]
 800ba40:	681b      	ldr	r3, [r3, #0]
 800ba42:	f022 0201 	bic.w	r2, r2, #1
 800ba46:	601a      	str	r2, [r3, #0]
 800ba48:	f7ff fb7a 	bl	800b140 <HAL_GetTick>
 800ba4c:	60f8      	str	r0, [r7, #12]
 800ba4e:	e012      	b.n	800ba76 <HAL_CAN_Start+0x5a>
 800ba50:	f7ff fb76 	bl	800b140 <HAL_GetTick>
 800ba54:	4602      	mov	r2, r0
 800ba56:	68fb      	ldr	r3, [r7, #12]
 800ba58:	1ad3      	subs	r3, r2, r3
 800ba5a:	2b0a      	cmp	r3, #10
 800ba5c:	d90b      	bls.n	800ba76 <HAL_CAN_Start+0x5a>
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ba62:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800ba66:	687b      	ldr	r3, [r7, #4]
 800ba68:	625a      	str	r2, [r3, #36]	@ 0x24
 800ba6a:	687b      	ldr	r3, [r7, #4]
 800ba6c:	2205      	movs	r2, #5
 800ba6e:	f883 2020 	strb.w	r2, [r3, #32]
 800ba72:	2301      	movs	r3, #1
 800ba74:	e012      	b.n	800ba9c <HAL_CAN_Start+0x80>
 800ba76:	687b      	ldr	r3, [r7, #4]
 800ba78:	681b      	ldr	r3, [r3, #0]
 800ba7a:	685b      	ldr	r3, [r3, #4]
 800ba7c:	f003 0301 	and.w	r3, r3, #1
 800ba80:	2b00      	cmp	r3, #0
 800ba82:	d1e5      	bne.n	800ba50 <HAL_CAN_Start+0x34>
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	2200      	movs	r2, #0
 800ba88:	625a      	str	r2, [r3, #36]	@ 0x24
 800ba8a:	2300      	movs	r3, #0
 800ba8c:	e006      	b.n	800ba9c <HAL_CAN_Start+0x80>
 800ba8e:	687b      	ldr	r3, [r7, #4]
 800ba90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ba92:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800ba96:	687b      	ldr	r3, [r7, #4]
 800ba98:	625a      	str	r2, [r3, #36]	@ 0x24
 800ba9a:	2301      	movs	r3, #1
 800ba9c:	4618      	mov	r0, r3
 800ba9e:	3710      	adds	r7, #16
 800baa0:	46bd      	mov	sp, r7
 800baa2:	bd80      	pop	{r7, pc}

0800baa4 <HAL_CAN_AddTxMessage>:
 800baa4:	b480      	push	{r7}
 800baa6:	b089      	sub	sp, #36	@ 0x24
 800baa8:	af00      	add	r7, sp, #0
 800baaa:	60f8      	str	r0, [r7, #12]
 800baac:	60b9      	str	r1, [r7, #8]
 800baae:	607a      	str	r2, [r7, #4]
 800bab0:	603b      	str	r3, [r7, #0]
 800bab2:	68fb      	ldr	r3, [r7, #12]
 800bab4:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bab8:	77fb      	strb	r3, [r7, #31]
 800baba:	68fb      	ldr	r3, [r7, #12]
 800babc:	681b      	ldr	r3, [r3, #0]
 800babe:	689b      	ldr	r3, [r3, #8]
 800bac0:	61bb      	str	r3, [r7, #24]
 800bac2:	7ffb      	ldrb	r3, [r7, #31]
 800bac4:	2b01      	cmp	r3, #1
 800bac6:	d003      	beq.n	800bad0 <HAL_CAN_AddTxMessage+0x2c>
 800bac8:	7ffb      	ldrb	r3, [r7, #31]
 800baca:	2b02      	cmp	r3, #2
 800bacc:	f040 80b8 	bne.w	800bc40 <HAL_CAN_AddTxMessage+0x19c>
 800bad0:	69bb      	ldr	r3, [r7, #24]
 800bad2:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800bad6:	2b00      	cmp	r3, #0
 800bad8:	d10a      	bne.n	800baf0 <HAL_CAN_AddTxMessage+0x4c>
 800bada:	69bb      	ldr	r3, [r7, #24]
 800badc:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800bae0:	2b00      	cmp	r3, #0
 800bae2:	d105      	bne.n	800baf0 <HAL_CAN_AddTxMessage+0x4c>
 800bae4:	69bb      	ldr	r3, [r7, #24]
 800bae6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800baea:	2b00      	cmp	r3, #0
 800baec:	f000 80a0 	beq.w	800bc30 <HAL_CAN_AddTxMessage+0x18c>
 800baf0:	69bb      	ldr	r3, [r7, #24]
 800baf2:	0e1b      	lsrs	r3, r3, #24
 800baf4:	f003 0303 	and.w	r3, r3, #3
 800baf8:	617b      	str	r3, [r7, #20]
 800bafa:	697b      	ldr	r3, [r7, #20]
 800bafc:	2b02      	cmp	r3, #2
 800bafe:	d907      	bls.n	800bb10 <HAL_CAN_AddTxMessage+0x6c>
 800bb00:	68fb      	ldr	r3, [r7, #12]
 800bb02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb04:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800bb08:	68fb      	ldr	r3, [r7, #12]
 800bb0a:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb0c:	2301      	movs	r3, #1
 800bb0e:	e09e      	b.n	800bc4e <HAL_CAN_AddTxMessage+0x1aa>
 800bb10:	2201      	movs	r2, #1
 800bb12:	697b      	ldr	r3, [r7, #20]
 800bb14:	409a      	lsls	r2, r3
 800bb16:	683b      	ldr	r3, [r7, #0]
 800bb18:	601a      	str	r2, [r3, #0]
 800bb1a:	68bb      	ldr	r3, [r7, #8]
 800bb1c:	689b      	ldr	r3, [r3, #8]
 800bb1e:	2b00      	cmp	r3, #0
 800bb20:	d10d      	bne.n	800bb3e <HAL_CAN_AddTxMessage+0x9a>
 800bb22:	68bb      	ldr	r3, [r7, #8]
 800bb24:	681b      	ldr	r3, [r3, #0]
 800bb26:	055a      	lsls	r2, r3, #21
 800bb28:	68bb      	ldr	r3, [r7, #8]
 800bb2a:	68db      	ldr	r3, [r3, #12]
 800bb2c:	68f9      	ldr	r1, [r7, #12]
 800bb2e:	6809      	ldr	r1, [r1, #0]
 800bb30:	431a      	orrs	r2, r3
 800bb32:	697b      	ldr	r3, [r7, #20]
 800bb34:	3318      	adds	r3, #24
 800bb36:	011b      	lsls	r3, r3, #4
 800bb38:	440b      	add	r3, r1
 800bb3a:	601a      	str	r2, [r3, #0]
 800bb3c:	e00f      	b.n	800bb5e <HAL_CAN_AddTxMessage+0xba>
 800bb3e:	68bb      	ldr	r3, [r7, #8]
 800bb40:	685b      	ldr	r3, [r3, #4]
 800bb42:	00da      	lsls	r2, r3, #3
 800bb44:	68bb      	ldr	r3, [r7, #8]
 800bb46:	689b      	ldr	r3, [r3, #8]
 800bb48:	431a      	orrs	r2, r3
 800bb4a:	68bb      	ldr	r3, [r7, #8]
 800bb4c:	68db      	ldr	r3, [r3, #12]
 800bb4e:	68f9      	ldr	r1, [r7, #12]
 800bb50:	6809      	ldr	r1, [r1, #0]
 800bb52:	431a      	orrs	r2, r3
 800bb54:	697b      	ldr	r3, [r7, #20]
 800bb56:	3318      	adds	r3, #24
 800bb58:	011b      	lsls	r3, r3, #4
 800bb5a:	440b      	add	r3, r1
 800bb5c:	601a      	str	r2, [r3, #0]
 800bb5e:	68fb      	ldr	r3, [r7, #12]
 800bb60:	6819      	ldr	r1, [r3, #0]
 800bb62:	68bb      	ldr	r3, [r7, #8]
 800bb64:	691a      	ldr	r2, [r3, #16]
 800bb66:	697b      	ldr	r3, [r7, #20]
 800bb68:	3318      	adds	r3, #24
 800bb6a:	011b      	lsls	r3, r3, #4
 800bb6c:	440b      	add	r3, r1
 800bb6e:	3304      	adds	r3, #4
 800bb70:	601a      	str	r2, [r3, #0]
 800bb72:	68bb      	ldr	r3, [r7, #8]
 800bb74:	7d1b      	ldrb	r3, [r3, #20]
 800bb76:	2b01      	cmp	r3, #1
 800bb78:	d111      	bne.n	800bb9e <HAL_CAN_AddTxMessage+0xfa>
 800bb7a:	68fb      	ldr	r3, [r7, #12]
 800bb7c:	681a      	ldr	r2, [r3, #0]
 800bb7e:	697b      	ldr	r3, [r7, #20]
 800bb80:	3318      	adds	r3, #24
 800bb82:	011b      	lsls	r3, r3, #4
 800bb84:	4413      	add	r3, r2
 800bb86:	3304      	adds	r3, #4
 800bb88:	681b      	ldr	r3, [r3, #0]
 800bb8a:	68fa      	ldr	r2, [r7, #12]
 800bb8c:	6811      	ldr	r1, [r2, #0]
 800bb8e:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800bb92:	697b      	ldr	r3, [r7, #20]
 800bb94:	3318      	adds	r3, #24
 800bb96:	011b      	lsls	r3, r3, #4
 800bb98:	440b      	add	r3, r1
 800bb9a:	3304      	adds	r3, #4
 800bb9c:	601a      	str	r2, [r3, #0]
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	3307      	adds	r3, #7
 800bba2:	781b      	ldrb	r3, [r3, #0]
 800bba4:	061a      	lsls	r2, r3, #24
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	3306      	adds	r3, #6
 800bbaa:	781b      	ldrb	r3, [r3, #0]
 800bbac:	041b      	lsls	r3, r3, #16
 800bbae:	431a      	orrs	r2, r3
 800bbb0:	687b      	ldr	r3, [r7, #4]
 800bbb2:	3305      	adds	r3, #5
 800bbb4:	781b      	ldrb	r3, [r3, #0]
 800bbb6:	021b      	lsls	r3, r3, #8
 800bbb8:	4313      	orrs	r3, r2
 800bbba:	687a      	ldr	r2, [r7, #4]
 800bbbc:	3204      	adds	r2, #4
 800bbbe:	7812      	ldrb	r2, [r2, #0]
 800bbc0:	4610      	mov	r0, r2
 800bbc2:	68fa      	ldr	r2, [r7, #12]
 800bbc4:	6811      	ldr	r1, [r2, #0]
 800bbc6:	ea43 0200 	orr.w	r2, r3, r0
 800bbca:	697b      	ldr	r3, [r7, #20]
 800bbcc:	011b      	lsls	r3, r3, #4
 800bbce:	440b      	add	r3, r1
 800bbd0:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800bbd4:	601a      	str	r2, [r3, #0]
 800bbd6:	687b      	ldr	r3, [r7, #4]
 800bbd8:	3303      	adds	r3, #3
 800bbda:	781b      	ldrb	r3, [r3, #0]
 800bbdc:	061a      	lsls	r2, r3, #24
 800bbde:	687b      	ldr	r3, [r7, #4]
 800bbe0:	3302      	adds	r3, #2
 800bbe2:	781b      	ldrb	r3, [r3, #0]
 800bbe4:	041b      	lsls	r3, r3, #16
 800bbe6:	431a      	orrs	r2, r3
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	3301      	adds	r3, #1
 800bbec:	781b      	ldrb	r3, [r3, #0]
 800bbee:	021b      	lsls	r3, r3, #8
 800bbf0:	4313      	orrs	r3, r2
 800bbf2:	687a      	ldr	r2, [r7, #4]
 800bbf4:	7812      	ldrb	r2, [r2, #0]
 800bbf6:	4610      	mov	r0, r2
 800bbf8:	68fa      	ldr	r2, [r7, #12]
 800bbfa:	6811      	ldr	r1, [r2, #0]
 800bbfc:	ea43 0200 	orr.w	r2, r3, r0
 800bc00:	697b      	ldr	r3, [r7, #20]
 800bc02:	011b      	lsls	r3, r3, #4
 800bc04:	440b      	add	r3, r1
 800bc06:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800bc0a:	601a      	str	r2, [r3, #0]
 800bc0c:	68fb      	ldr	r3, [r7, #12]
 800bc0e:	681a      	ldr	r2, [r3, #0]
 800bc10:	697b      	ldr	r3, [r7, #20]
 800bc12:	3318      	adds	r3, #24
 800bc14:	011b      	lsls	r3, r3, #4
 800bc16:	4413      	add	r3, r2
 800bc18:	681b      	ldr	r3, [r3, #0]
 800bc1a:	68fa      	ldr	r2, [r7, #12]
 800bc1c:	6811      	ldr	r1, [r2, #0]
 800bc1e:	f043 0201 	orr.w	r2, r3, #1
 800bc22:	697b      	ldr	r3, [r7, #20]
 800bc24:	3318      	adds	r3, #24
 800bc26:	011b      	lsls	r3, r3, #4
 800bc28:	440b      	add	r3, r1
 800bc2a:	601a      	str	r2, [r3, #0]
 800bc2c:	2300      	movs	r3, #0
 800bc2e:	e00e      	b.n	800bc4e <HAL_CAN_AddTxMessage+0x1aa>
 800bc30:	68fb      	ldr	r3, [r7, #12]
 800bc32:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bc34:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bc38:	68fb      	ldr	r3, [r7, #12]
 800bc3a:	625a      	str	r2, [r3, #36]	@ 0x24
 800bc3c:	2301      	movs	r3, #1
 800bc3e:	e006      	b.n	800bc4e <HAL_CAN_AddTxMessage+0x1aa>
 800bc40:	68fb      	ldr	r3, [r7, #12]
 800bc42:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bc44:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bc48:	68fb      	ldr	r3, [r7, #12]
 800bc4a:	625a      	str	r2, [r3, #36]	@ 0x24
 800bc4c:	2301      	movs	r3, #1
 800bc4e:	4618      	mov	r0, r3
 800bc50:	3724      	adds	r7, #36	@ 0x24
 800bc52:	46bd      	mov	sp, r7
 800bc54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc58:	4770      	bx	lr

0800bc5a <HAL_CAN_GetRxMessage>:
 800bc5a:	b480      	push	{r7}
 800bc5c:	b087      	sub	sp, #28
 800bc5e:	af00      	add	r7, sp, #0
 800bc60:	60f8      	str	r0, [r7, #12]
 800bc62:	60b9      	str	r1, [r7, #8]
 800bc64:	607a      	str	r2, [r7, #4]
 800bc66:	603b      	str	r3, [r7, #0]
 800bc68:	68fb      	ldr	r3, [r7, #12]
 800bc6a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bc6e:	75fb      	strb	r3, [r7, #23]
 800bc70:	7dfb      	ldrb	r3, [r7, #23]
 800bc72:	2b01      	cmp	r3, #1
 800bc74:	d003      	beq.n	800bc7e <HAL_CAN_GetRxMessage+0x24>
 800bc76:	7dfb      	ldrb	r3, [r7, #23]
 800bc78:	2b02      	cmp	r3, #2
 800bc7a:	f040 80f3 	bne.w	800be64 <HAL_CAN_GetRxMessage+0x20a>
 800bc7e:	68bb      	ldr	r3, [r7, #8]
 800bc80:	2b00      	cmp	r3, #0
 800bc82:	d10e      	bne.n	800bca2 <HAL_CAN_GetRxMessage+0x48>
 800bc84:	68fb      	ldr	r3, [r7, #12]
 800bc86:	681b      	ldr	r3, [r3, #0]
 800bc88:	68db      	ldr	r3, [r3, #12]
 800bc8a:	f003 0303 	and.w	r3, r3, #3
 800bc8e:	2b00      	cmp	r3, #0
 800bc90:	d116      	bne.n	800bcc0 <HAL_CAN_GetRxMessage+0x66>
 800bc92:	68fb      	ldr	r3, [r7, #12]
 800bc94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bc96:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bc9a:	68fb      	ldr	r3, [r7, #12]
 800bc9c:	625a      	str	r2, [r3, #36]	@ 0x24
 800bc9e:	2301      	movs	r3, #1
 800bca0:	e0e7      	b.n	800be72 <HAL_CAN_GetRxMessage+0x218>
 800bca2:	68fb      	ldr	r3, [r7, #12]
 800bca4:	681b      	ldr	r3, [r3, #0]
 800bca6:	691b      	ldr	r3, [r3, #16]
 800bca8:	f003 0303 	and.w	r3, r3, #3
 800bcac:	2b00      	cmp	r3, #0
 800bcae:	d107      	bne.n	800bcc0 <HAL_CAN_GetRxMessage+0x66>
 800bcb0:	68fb      	ldr	r3, [r7, #12]
 800bcb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bcb4:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bcb8:	68fb      	ldr	r3, [r7, #12]
 800bcba:	625a      	str	r2, [r3, #36]	@ 0x24
 800bcbc:	2301      	movs	r3, #1
 800bcbe:	e0d8      	b.n	800be72 <HAL_CAN_GetRxMessage+0x218>
 800bcc0:	68fb      	ldr	r3, [r7, #12]
 800bcc2:	681a      	ldr	r2, [r3, #0]
 800bcc4:	68bb      	ldr	r3, [r7, #8]
 800bcc6:	331b      	adds	r3, #27
 800bcc8:	011b      	lsls	r3, r3, #4
 800bcca:	4413      	add	r3, r2
 800bccc:	681b      	ldr	r3, [r3, #0]
 800bcce:	f003 0204 	and.w	r2, r3, #4
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	609a      	str	r2, [r3, #8]
 800bcd6:	687b      	ldr	r3, [r7, #4]
 800bcd8:	689b      	ldr	r3, [r3, #8]
 800bcda:	2b00      	cmp	r3, #0
 800bcdc:	d10c      	bne.n	800bcf8 <HAL_CAN_GetRxMessage+0x9e>
 800bcde:	68fb      	ldr	r3, [r7, #12]
 800bce0:	681a      	ldr	r2, [r3, #0]
 800bce2:	68bb      	ldr	r3, [r7, #8]
 800bce4:	331b      	adds	r3, #27
 800bce6:	011b      	lsls	r3, r3, #4
 800bce8:	4413      	add	r3, r2
 800bcea:	681b      	ldr	r3, [r3, #0]
 800bcec:	0d5b      	lsrs	r3, r3, #21
 800bcee:	f3c3 020a 	ubfx	r2, r3, #0, #11
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	601a      	str	r2, [r3, #0]
 800bcf6:	e00b      	b.n	800bd10 <HAL_CAN_GetRxMessage+0xb6>
 800bcf8:	68fb      	ldr	r3, [r7, #12]
 800bcfa:	681a      	ldr	r2, [r3, #0]
 800bcfc:	68bb      	ldr	r3, [r7, #8]
 800bcfe:	331b      	adds	r3, #27
 800bd00:	011b      	lsls	r3, r3, #4
 800bd02:	4413      	add	r3, r2
 800bd04:	681b      	ldr	r3, [r3, #0]
 800bd06:	08db      	lsrs	r3, r3, #3
 800bd08:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 800bd0c:	687b      	ldr	r3, [r7, #4]
 800bd0e:	605a      	str	r2, [r3, #4]
 800bd10:	68fb      	ldr	r3, [r7, #12]
 800bd12:	681a      	ldr	r2, [r3, #0]
 800bd14:	68bb      	ldr	r3, [r7, #8]
 800bd16:	331b      	adds	r3, #27
 800bd18:	011b      	lsls	r3, r3, #4
 800bd1a:	4413      	add	r3, r2
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	f003 0202 	and.w	r2, r3, #2
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	60da      	str	r2, [r3, #12]
 800bd26:	68fb      	ldr	r3, [r7, #12]
 800bd28:	681a      	ldr	r2, [r3, #0]
 800bd2a:	68bb      	ldr	r3, [r7, #8]
 800bd2c:	331b      	adds	r3, #27
 800bd2e:	011b      	lsls	r3, r3, #4
 800bd30:	4413      	add	r3, r2
 800bd32:	3304      	adds	r3, #4
 800bd34:	681b      	ldr	r3, [r3, #0]
 800bd36:	f003 020f 	and.w	r2, r3, #15
 800bd3a:	687b      	ldr	r3, [r7, #4]
 800bd3c:	611a      	str	r2, [r3, #16]
 800bd3e:	68fb      	ldr	r3, [r7, #12]
 800bd40:	681a      	ldr	r2, [r3, #0]
 800bd42:	68bb      	ldr	r3, [r7, #8]
 800bd44:	331b      	adds	r3, #27
 800bd46:	011b      	lsls	r3, r3, #4
 800bd48:	4413      	add	r3, r2
 800bd4a:	3304      	adds	r3, #4
 800bd4c:	681b      	ldr	r3, [r3, #0]
 800bd4e:	0a1b      	lsrs	r3, r3, #8
 800bd50:	b2da      	uxtb	r2, r3
 800bd52:	687b      	ldr	r3, [r7, #4]
 800bd54:	619a      	str	r2, [r3, #24]
 800bd56:	68fb      	ldr	r3, [r7, #12]
 800bd58:	681a      	ldr	r2, [r3, #0]
 800bd5a:	68bb      	ldr	r3, [r7, #8]
 800bd5c:	331b      	adds	r3, #27
 800bd5e:	011b      	lsls	r3, r3, #4
 800bd60:	4413      	add	r3, r2
 800bd62:	3304      	adds	r3, #4
 800bd64:	681b      	ldr	r3, [r3, #0]
 800bd66:	0c1b      	lsrs	r3, r3, #16
 800bd68:	b29a      	uxth	r2, r3
 800bd6a:	687b      	ldr	r3, [r7, #4]
 800bd6c:	615a      	str	r2, [r3, #20]
 800bd6e:	68fb      	ldr	r3, [r7, #12]
 800bd70:	681a      	ldr	r2, [r3, #0]
 800bd72:	68bb      	ldr	r3, [r7, #8]
 800bd74:	011b      	lsls	r3, r3, #4
 800bd76:	4413      	add	r3, r2
 800bd78:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bd7c:	681b      	ldr	r3, [r3, #0]
 800bd7e:	b2da      	uxtb	r2, r3
 800bd80:	683b      	ldr	r3, [r7, #0]
 800bd82:	701a      	strb	r2, [r3, #0]
 800bd84:	68fb      	ldr	r3, [r7, #12]
 800bd86:	681a      	ldr	r2, [r3, #0]
 800bd88:	68bb      	ldr	r3, [r7, #8]
 800bd8a:	011b      	lsls	r3, r3, #4
 800bd8c:	4413      	add	r3, r2
 800bd8e:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bd92:	681b      	ldr	r3, [r3, #0]
 800bd94:	0a1a      	lsrs	r2, r3, #8
 800bd96:	683b      	ldr	r3, [r7, #0]
 800bd98:	3301      	adds	r3, #1
 800bd9a:	b2d2      	uxtb	r2, r2
 800bd9c:	701a      	strb	r2, [r3, #0]
 800bd9e:	68fb      	ldr	r3, [r7, #12]
 800bda0:	681a      	ldr	r2, [r3, #0]
 800bda2:	68bb      	ldr	r3, [r7, #8]
 800bda4:	011b      	lsls	r3, r3, #4
 800bda6:	4413      	add	r3, r2
 800bda8:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bdac:	681b      	ldr	r3, [r3, #0]
 800bdae:	0c1a      	lsrs	r2, r3, #16
 800bdb0:	683b      	ldr	r3, [r7, #0]
 800bdb2:	3302      	adds	r3, #2
 800bdb4:	b2d2      	uxtb	r2, r2
 800bdb6:	701a      	strb	r2, [r3, #0]
 800bdb8:	68fb      	ldr	r3, [r7, #12]
 800bdba:	681a      	ldr	r2, [r3, #0]
 800bdbc:	68bb      	ldr	r3, [r7, #8]
 800bdbe:	011b      	lsls	r3, r3, #4
 800bdc0:	4413      	add	r3, r2
 800bdc2:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bdc6:	681b      	ldr	r3, [r3, #0]
 800bdc8:	0e1a      	lsrs	r2, r3, #24
 800bdca:	683b      	ldr	r3, [r7, #0]
 800bdcc:	3303      	adds	r3, #3
 800bdce:	b2d2      	uxtb	r2, r2
 800bdd0:	701a      	strb	r2, [r3, #0]
 800bdd2:	68fb      	ldr	r3, [r7, #12]
 800bdd4:	681a      	ldr	r2, [r3, #0]
 800bdd6:	68bb      	ldr	r3, [r7, #8]
 800bdd8:	011b      	lsls	r3, r3, #4
 800bdda:	4413      	add	r3, r2
 800bddc:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bde0:	681a      	ldr	r2, [r3, #0]
 800bde2:	683b      	ldr	r3, [r7, #0]
 800bde4:	3304      	adds	r3, #4
 800bde6:	b2d2      	uxtb	r2, r2
 800bde8:	701a      	strb	r2, [r3, #0]
 800bdea:	68fb      	ldr	r3, [r7, #12]
 800bdec:	681a      	ldr	r2, [r3, #0]
 800bdee:	68bb      	ldr	r3, [r7, #8]
 800bdf0:	011b      	lsls	r3, r3, #4
 800bdf2:	4413      	add	r3, r2
 800bdf4:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	0a1a      	lsrs	r2, r3, #8
 800bdfc:	683b      	ldr	r3, [r7, #0]
 800bdfe:	3305      	adds	r3, #5
 800be00:	b2d2      	uxtb	r2, r2
 800be02:	701a      	strb	r2, [r3, #0]
 800be04:	68fb      	ldr	r3, [r7, #12]
 800be06:	681a      	ldr	r2, [r3, #0]
 800be08:	68bb      	ldr	r3, [r7, #8]
 800be0a:	011b      	lsls	r3, r3, #4
 800be0c:	4413      	add	r3, r2
 800be0e:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800be12:	681b      	ldr	r3, [r3, #0]
 800be14:	0c1a      	lsrs	r2, r3, #16
 800be16:	683b      	ldr	r3, [r7, #0]
 800be18:	3306      	adds	r3, #6
 800be1a:	b2d2      	uxtb	r2, r2
 800be1c:	701a      	strb	r2, [r3, #0]
 800be1e:	68fb      	ldr	r3, [r7, #12]
 800be20:	681a      	ldr	r2, [r3, #0]
 800be22:	68bb      	ldr	r3, [r7, #8]
 800be24:	011b      	lsls	r3, r3, #4
 800be26:	4413      	add	r3, r2
 800be28:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800be2c:	681b      	ldr	r3, [r3, #0]
 800be2e:	0e1a      	lsrs	r2, r3, #24
 800be30:	683b      	ldr	r3, [r7, #0]
 800be32:	3307      	adds	r3, #7
 800be34:	b2d2      	uxtb	r2, r2
 800be36:	701a      	strb	r2, [r3, #0]
 800be38:	68bb      	ldr	r3, [r7, #8]
 800be3a:	2b00      	cmp	r3, #0
 800be3c:	d108      	bne.n	800be50 <HAL_CAN_GetRxMessage+0x1f6>
 800be3e:	68fb      	ldr	r3, [r7, #12]
 800be40:	681b      	ldr	r3, [r3, #0]
 800be42:	68da      	ldr	r2, [r3, #12]
 800be44:	68fb      	ldr	r3, [r7, #12]
 800be46:	681b      	ldr	r3, [r3, #0]
 800be48:	f042 0220 	orr.w	r2, r2, #32
 800be4c:	60da      	str	r2, [r3, #12]
 800be4e:	e007      	b.n	800be60 <HAL_CAN_GetRxMessage+0x206>
 800be50:	68fb      	ldr	r3, [r7, #12]
 800be52:	681b      	ldr	r3, [r3, #0]
 800be54:	691a      	ldr	r2, [r3, #16]
 800be56:	68fb      	ldr	r3, [r7, #12]
 800be58:	681b      	ldr	r3, [r3, #0]
 800be5a:	f042 0220 	orr.w	r2, r2, #32
 800be5e:	611a      	str	r2, [r3, #16]
 800be60:	2300      	movs	r3, #0
 800be62:	e006      	b.n	800be72 <HAL_CAN_GetRxMessage+0x218>
 800be64:	68fb      	ldr	r3, [r7, #12]
 800be66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800be68:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800be6c:	68fb      	ldr	r3, [r7, #12]
 800be6e:	625a      	str	r2, [r3, #36]	@ 0x24
 800be70:	2301      	movs	r3, #1
 800be72:	4618      	mov	r0, r3
 800be74:	371c      	adds	r7, #28
 800be76:	46bd      	mov	sp, r7
 800be78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be7c:	4770      	bx	lr

0800be7e <HAL_CAN_ActivateNotification>:
 800be7e:	b480      	push	{r7}
 800be80:	b085      	sub	sp, #20
 800be82:	af00      	add	r7, sp, #0
 800be84:	6078      	str	r0, [r7, #4]
 800be86:	6039      	str	r1, [r7, #0]
 800be88:	687b      	ldr	r3, [r7, #4]
 800be8a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800be8e:	73fb      	strb	r3, [r7, #15]
 800be90:	7bfb      	ldrb	r3, [r7, #15]
 800be92:	2b01      	cmp	r3, #1
 800be94:	d002      	beq.n	800be9c <HAL_CAN_ActivateNotification+0x1e>
 800be96:	7bfb      	ldrb	r3, [r7, #15]
 800be98:	2b02      	cmp	r3, #2
 800be9a:	d109      	bne.n	800beb0 <HAL_CAN_ActivateNotification+0x32>
 800be9c:	687b      	ldr	r3, [r7, #4]
 800be9e:	681b      	ldr	r3, [r3, #0]
 800bea0:	6959      	ldr	r1, [r3, #20]
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	681b      	ldr	r3, [r3, #0]
 800bea6:	683a      	ldr	r2, [r7, #0]
 800bea8:	430a      	orrs	r2, r1
 800beaa:	615a      	str	r2, [r3, #20]
 800beac:	2300      	movs	r3, #0
 800beae:	e006      	b.n	800bebe <HAL_CAN_ActivateNotification+0x40>
 800beb0:	687b      	ldr	r3, [r7, #4]
 800beb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800beb4:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800beb8:	687b      	ldr	r3, [r7, #4]
 800beba:	625a      	str	r2, [r3, #36]	@ 0x24
 800bebc:	2301      	movs	r3, #1
 800bebe:	4618      	mov	r0, r3
 800bec0:	3714      	adds	r7, #20
 800bec2:	46bd      	mov	sp, r7
 800bec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bec8:	4770      	bx	lr

0800beca <HAL_CAN_DeactivateNotification>:
 800beca:	b480      	push	{r7}
 800becc:	b085      	sub	sp, #20
 800bece:	af00      	add	r7, sp, #0
 800bed0:	6078      	str	r0, [r7, #4]
 800bed2:	6039      	str	r1, [r7, #0]
 800bed4:	687b      	ldr	r3, [r7, #4]
 800bed6:	f893 3020 	ldrb.w	r3, [r3, #32]
 800beda:	73fb      	strb	r3, [r7, #15]
 800bedc:	7bfb      	ldrb	r3, [r7, #15]
 800bede:	2b01      	cmp	r3, #1
 800bee0:	d002      	beq.n	800bee8 <HAL_CAN_DeactivateNotification+0x1e>
 800bee2:	7bfb      	ldrb	r3, [r7, #15]
 800bee4:	2b02      	cmp	r3, #2
 800bee6:	d10a      	bne.n	800befe <HAL_CAN_DeactivateNotification+0x34>
 800bee8:	687b      	ldr	r3, [r7, #4]
 800beea:	681b      	ldr	r3, [r3, #0]
 800beec:	6959      	ldr	r1, [r3, #20]
 800beee:	683b      	ldr	r3, [r7, #0]
 800bef0:	43da      	mvns	r2, r3
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	681b      	ldr	r3, [r3, #0]
 800bef6:	400a      	ands	r2, r1
 800bef8:	615a      	str	r2, [r3, #20]
 800befa:	2300      	movs	r3, #0
 800befc:	e006      	b.n	800bf0c <HAL_CAN_DeactivateNotification+0x42>
 800befe:	687b      	ldr	r3, [r7, #4]
 800bf00:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bf02:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bf06:	687b      	ldr	r3, [r7, #4]
 800bf08:	625a      	str	r2, [r3, #36]	@ 0x24
 800bf0a:	2301      	movs	r3, #1
 800bf0c:	4618      	mov	r0, r3
 800bf0e:	3714      	adds	r7, #20
 800bf10:	46bd      	mov	sp, r7
 800bf12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf16:	4770      	bx	lr

0800bf18 <HAL_CAN_IRQHandler>:
 800bf18:	b580      	push	{r7, lr}
 800bf1a:	b08a      	sub	sp, #40	@ 0x28
 800bf1c:	af00      	add	r7, sp, #0
 800bf1e:	6078      	str	r0, [r7, #4]
 800bf20:	2300      	movs	r3, #0
 800bf22:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf24:	687b      	ldr	r3, [r7, #4]
 800bf26:	681b      	ldr	r3, [r3, #0]
 800bf28:	695b      	ldr	r3, [r3, #20]
 800bf2a:	623b      	str	r3, [r7, #32]
 800bf2c:	687b      	ldr	r3, [r7, #4]
 800bf2e:	681b      	ldr	r3, [r3, #0]
 800bf30:	685b      	ldr	r3, [r3, #4]
 800bf32:	61fb      	str	r3, [r7, #28]
 800bf34:	687b      	ldr	r3, [r7, #4]
 800bf36:	681b      	ldr	r3, [r3, #0]
 800bf38:	689b      	ldr	r3, [r3, #8]
 800bf3a:	61bb      	str	r3, [r7, #24]
 800bf3c:	687b      	ldr	r3, [r7, #4]
 800bf3e:	681b      	ldr	r3, [r3, #0]
 800bf40:	68db      	ldr	r3, [r3, #12]
 800bf42:	617b      	str	r3, [r7, #20]
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	681b      	ldr	r3, [r3, #0]
 800bf48:	691b      	ldr	r3, [r3, #16]
 800bf4a:	613b      	str	r3, [r7, #16]
 800bf4c:	687b      	ldr	r3, [r7, #4]
 800bf4e:	681b      	ldr	r3, [r3, #0]
 800bf50:	699b      	ldr	r3, [r3, #24]
 800bf52:	60fb      	str	r3, [r7, #12]
 800bf54:	6a3b      	ldr	r3, [r7, #32]
 800bf56:	f003 0301 	and.w	r3, r3, #1
 800bf5a:	2b00      	cmp	r3, #0
 800bf5c:	d07c      	beq.n	800c058 <HAL_CAN_IRQHandler+0x140>
 800bf5e:	69bb      	ldr	r3, [r7, #24]
 800bf60:	f003 0301 	and.w	r3, r3, #1
 800bf64:	2b00      	cmp	r3, #0
 800bf66:	d023      	beq.n	800bfb0 <HAL_CAN_IRQHandler+0x98>
 800bf68:	687b      	ldr	r3, [r7, #4]
 800bf6a:	681b      	ldr	r3, [r3, #0]
 800bf6c:	2201      	movs	r2, #1
 800bf6e:	609a      	str	r2, [r3, #8]
 800bf70:	69bb      	ldr	r3, [r7, #24]
 800bf72:	f003 0302 	and.w	r3, r3, #2
 800bf76:	2b00      	cmp	r3, #0
 800bf78:	d003      	beq.n	800bf82 <HAL_CAN_IRQHandler+0x6a>
 800bf7a:	6878      	ldr	r0, [r7, #4]
 800bf7c:	f000 f983 	bl	800c286 <HAL_CAN_TxMailbox0CompleteCallback>
 800bf80:	e016      	b.n	800bfb0 <HAL_CAN_IRQHandler+0x98>
 800bf82:	69bb      	ldr	r3, [r7, #24]
 800bf84:	f003 0304 	and.w	r3, r3, #4
 800bf88:	2b00      	cmp	r3, #0
 800bf8a:	d004      	beq.n	800bf96 <HAL_CAN_IRQHandler+0x7e>
 800bf8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf8e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800bf92:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf94:	e00c      	b.n	800bfb0 <HAL_CAN_IRQHandler+0x98>
 800bf96:	69bb      	ldr	r3, [r7, #24]
 800bf98:	f003 0308 	and.w	r3, r3, #8
 800bf9c:	2b00      	cmp	r3, #0
 800bf9e:	d004      	beq.n	800bfaa <HAL_CAN_IRQHandler+0x92>
 800bfa0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bfa2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800bfa6:	627b      	str	r3, [r7, #36]	@ 0x24
 800bfa8:	e002      	b.n	800bfb0 <HAL_CAN_IRQHandler+0x98>
 800bfaa:	6878      	ldr	r0, [r7, #4]
 800bfac:	f000 f989 	bl	800c2c2 <HAL_CAN_TxMailbox0AbortCallback>
 800bfb0:	69bb      	ldr	r3, [r7, #24]
 800bfb2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800bfb6:	2b00      	cmp	r3, #0
 800bfb8:	d024      	beq.n	800c004 <HAL_CAN_IRQHandler+0xec>
 800bfba:	687b      	ldr	r3, [r7, #4]
 800bfbc:	681b      	ldr	r3, [r3, #0]
 800bfbe:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800bfc2:	609a      	str	r2, [r3, #8]
 800bfc4:	69bb      	ldr	r3, [r7, #24]
 800bfc6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	d003      	beq.n	800bfd6 <HAL_CAN_IRQHandler+0xbe>
 800bfce:	6878      	ldr	r0, [r7, #4]
 800bfd0:	f000 f963 	bl	800c29a <HAL_CAN_TxMailbox1CompleteCallback>
 800bfd4:	e016      	b.n	800c004 <HAL_CAN_IRQHandler+0xec>
 800bfd6:	69bb      	ldr	r3, [r7, #24]
 800bfd8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800bfdc:	2b00      	cmp	r3, #0
 800bfde:	d004      	beq.n	800bfea <HAL_CAN_IRQHandler+0xd2>
 800bfe0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bfe2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800bfe6:	627b      	str	r3, [r7, #36]	@ 0x24
 800bfe8:	e00c      	b.n	800c004 <HAL_CAN_IRQHandler+0xec>
 800bfea:	69bb      	ldr	r3, [r7, #24]
 800bfec:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800bff0:	2b00      	cmp	r3, #0
 800bff2:	d004      	beq.n	800bffe <HAL_CAN_IRQHandler+0xe6>
 800bff4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bff6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800bffa:	627b      	str	r3, [r7, #36]	@ 0x24
 800bffc:	e002      	b.n	800c004 <HAL_CAN_IRQHandler+0xec>
 800bffe:	6878      	ldr	r0, [r7, #4]
 800c000:	f000 f969 	bl	800c2d6 <HAL_CAN_TxMailbox1AbortCallback>
 800c004:	69bb      	ldr	r3, [r7, #24]
 800c006:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800c00a:	2b00      	cmp	r3, #0
 800c00c:	d024      	beq.n	800c058 <HAL_CAN_IRQHandler+0x140>
 800c00e:	687b      	ldr	r3, [r7, #4]
 800c010:	681b      	ldr	r3, [r3, #0]
 800c012:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800c016:	609a      	str	r2, [r3, #8]
 800c018:	69bb      	ldr	r3, [r7, #24]
 800c01a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800c01e:	2b00      	cmp	r3, #0
 800c020:	d003      	beq.n	800c02a <HAL_CAN_IRQHandler+0x112>
 800c022:	6878      	ldr	r0, [r7, #4]
 800c024:	f000 f943 	bl	800c2ae <HAL_CAN_TxMailbox2CompleteCallback>
 800c028:	e016      	b.n	800c058 <HAL_CAN_IRQHandler+0x140>
 800c02a:	69bb      	ldr	r3, [r7, #24]
 800c02c:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800c030:	2b00      	cmp	r3, #0
 800c032:	d004      	beq.n	800c03e <HAL_CAN_IRQHandler+0x126>
 800c034:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c036:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800c03a:	627b      	str	r3, [r7, #36]	@ 0x24
 800c03c:	e00c      	b.n	800c058 <HAL_CAN_IRQHandler+0x140>
 800c03e:	69bb      	ldr	r3, [r7, #24]
 800c040:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800c044:	2b00      	cmp	r3, #0
 800c046:	d004      	beq.n	800c052 <HAL_CAN_IRQHandler+0x13a>
 800c048:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c04a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800c04e:	627b      	str	r3, [r7, #36]	@ 0x24
 800c050:	e002      	b.n	800c058 <HAL_CAN_IRQHandler+0x140>
 800c052:	6878      	ldr	r0, [r7, #4]
 800c054:	f000 f949 	bl	800c2ea <HAL_CAN_TxMailbox2AbortCallback>
 800c058:	6a3b      	ldr	r3, [r7, #32]
 800c05a:	f003 0308 	and.w	r3, r3, #8
 800c05e:	2b00      	cmp	r3, #0
 800c060:	d00c      	beq.n	800c07c <HAL_CAN_IRQHandler+0x164>
 800c062:	697b      	ldr	r3, [r7, #20]
 800c064:	f003 0310 	and.w	r3, r3, #16
 800c068:	2b00      	cmp	r3, #0
 800c06a:	d007      	beq.n	800c07c <HAL_CAN_IRQHandler+0x164>
 800c06c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c06e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800c072:	627b      	str	r3, [r7, #36]	@ 0x24
 800c074:	687b      	ldr	r3, [r7, #4]
 800c076:	681b      	ldr	r3, [r3, #0]
 800c078:	2210      	movs	r2, #16
 800c07a:	60da      	str	r2, [r3, #12]
 800c07c:	6a3b      	ldr	r3, [r7, #32]
 800c07e:	f003 0304 	and.w	r3, r3, #4
 800c082:	2b00      	cmp	r3, #0
 800c084:	d00b      	beq.n	800c09e <HAL_CAN_IRQHandler+0x186>
 800c086:	697b      	ldr	r3, [r7, #20]
 800c088:	f003 0308 	and.w	r3, r3, #8
 800c08c:	2b00      	cmp	r3, #0
 800c08e:	d006      	beq.n	800c09e <HAL_CAN_IRQHandler+0x186>
 800c090:	687b      	ldr	r3, [r7, #4]
 800c092:	681b      	ldr	r3, [r3, #0]
 800c094:	2208      	movs	r2, #8
 800c096:	60da      	str	r2, [r3, #12]
 800c098:	6878      	ldr	r0, [r7, #4]
 800c09a:	f000 f930 	bl	800c2fe <HAL_CAN_RxFifo0FullCallback>
 800c09e:	6a3b      	ldr	r3, [r7, #32]
 800c0a0:	f003 0302 	and.w	r3, r3, #2
 800c0a4:	2b00      	cmp	r3, #0
 800c0a6:	d009      	beq.n	800c0bc <HAL_CAN_IRQHandler+0x1a4>
 800c0a8:	687b      	ldr	r3, [r7, #4]
 800c0aa:	681b      	ldr	r3, [r3, #0]
 800c0ac:	68db      	ldr	r3, [r3, #12]
 800c0ae:	f003 0303 	and.w	r3, r3, #3
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d002      	beq.n	800c0bc <HAL_CAN_IRQHandler+0x1a4>
 800c0b6:	6878      	ldr	r0, [r7, #4]
 800c0b8:	f7f5 f888 	bl	80011cc <HAL_CAN_RxFifo0MsgPendingCallback>
 800c0bc:	6a3b      	ldr	r3, [r7, #32]
 800c0be:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800c0c2:	2b00      	cmp	r3, #0
 800c0c4:	d00c      	beq.n	800c0e0 <HAL_CAN_IRQHandler+0x1c8>
 800c0c6:	693b      	ldr	r3, [r7, #16]
 800c0c8:	f003 0310 	and.w	r3, r3, #16
 800c0cc:	2b00      	cmp	r3, #0
 800c0ce:	d007      	beq.n	800c0e0 <HAL_CAN_IRQHandler+0x1c8>
 800c0d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0d2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800c0d6:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0d8:	687b      	ldr	r3, [r7, #4]
 800c0da:	681b      	ldr	r3, [r3, #0]
 800c0dc:	2210      	movs	r2, #16
 800c0de:	611a      	str	r2, [r3, #16]
 800c0e0:	6a3b      	ldr	r3, [r7, #32]
 800c0e2:	f003 0320 	and.w	r3, r3, #32
 800c0e6:	2b00      	cmp	r3, #0
 800c0e8:	d00b      	beq.n	800c102 <HAL_CAN_IRQHandler+0x1ea>
 800c0ea:	693b      	ldr	r3, [r7, #16]
 800c0ec:	f003 0308 	and.w	r3, r3, #8
 800c0f0:	2b00      	cmp	r3, #0
 800c0f2:	d006      	beq.n	800c102 <HAL_CAN_IRQHandler+0x1ea>
 800c0f4:	687b      	ldr	r3, [r7, #4]
 800c0f6:	681b      	ldr	r3, [r3, #0]
 800c0f8:	2208      	movs	r2, #8
 800c0fa:	611a      	str	r2, [r3, #16]
 800c0fc:	6878      	ldr	r0, [r7, #4]
 800c0fe:	f000 f908 	bl	800c312 <HAL_CAN_RxFifo1FullCallback>
 800c102:	6a3b      	ldr	r3, [r7, #32]
 800c104:	f003 0310 	and.w	r3, r3, #16
 800c108:	2b00      	cmp	r3, #0
 800c10a:	d009      	beq.n	800c120 <HAL_CAN_IRQHandler+0x208>
 800c10c:	687b      	ldr	r3, [r7, #4]
 800c10e:	681b      	ldr	r3, [r3, #0]
 800c110:	691b      	ldr	r3, [r3, #16]
 800c112:	f003 0303 	and.w	r3, r3, #3
 800c116:	2b00      	cmp	r3, #0
 800c118:	d002      	beq.n	800c120 <HAL_CAN_IRQHandler+0x208>
 800c11a:	6878      	ldr	r0, [r7, #4]
 800c11c:	f7f5 f861 	bl	80011e2 <HAL_CAN_RxFifo1MsgPendingCallback>
 800c120:	6a3b      	ldr	r3, [r7, #32]
 800c122:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800c126:	2b00      	cmp	r3, #0
 800c128:	d00b      	beq.n	800c142 <HAL_CAN_IRQHandler+0x22a>
 800c12a:	69fb      	ldr	r3, [r7, #28]
 800c12c:	f003 0310 	and.w	r3, r3, #16
 800c130:	2b00      	cmp	r3, #0
 800c132:	d006      	beq.n	800c142 <HAL_CAN_IRQHandler+0x22a>
 800c134:	687b      	ldr	r3, [r7, #4]
 800c136:	681b      	ldr	r3, [r3, #0]
 800c138:	2210      	movs	r2, #16
 800c13a:	605a      	str	r2, [r3, #4]
 800c13c:	6878      	ldr	r0, [r7, #4]
 800c13e:	f000 f8f2 	bl	800c326 <HAL_CAN_SleepCallback>
 800c142:	6a3b      	ldr	r3, [r7, #32]
 800c144:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800c148:	2b00      	cmp	r3, #0
 800c14a:	d00b      	beq.n	800c164 <HAL_CAN_IRQHandler+0x24c>
 800c14c:	69fb      	ldr	r3, [r7, #28]
 800c14e:	f003 0308 	and.w	r3, r3, #8
 800c152:	2b00      	cmp	r3, #0
 800c154:	d006      	beq.n	800c164 <HAL_CAN_IRQHandler+0x24c>
 800c156:	687b      	ldr	r3, [r7, #4]
 800c158:	681b      	ldr	r3, [r3, #0]
 800c15a:	2208      	movs	r2, #8
 800c15c:	605a      	str	r2, [r3, #4]
 800c15e:	6878      	ldr	r0, [r7, #4]
 800c160:	f000 f8eb 	bl	800c33a <HAL_CAN_WakeUpFromRxMsgCallback>
 800c164:	6a3b      	ldr	r3, [r7, #32]
 800c166:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800c16a:	2b00      	cmp	r3, #0
 800c16c:	d07b      	beq.n	800c266 <HAL_CAN_IRQHandler+0x34e>
 800c16e:	69fb      	ldr	r3, [r7, #28]
 800c170:	f003 0304 	and.w	r3, r3, #4
 800c174:	2b00      	cmp	r3, #0
 800c176:	d072      	beq.n	800c25e <HAL_CAN_IRQHandler+0x346>
 800c178:	6a3b      	ldr	r3, [r7, #32]
 800c17a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c17e:	2b00      	cmp	r3, #0
 800c180:	d008      	beq.n	800c194 <HAL_CAN_IRQHandler+0x27c>
 800c182:	68fb      	ldr	r3, [r7, #12]
 800c184:	f003 0301 	and.w	r3, r3, #1
 800c188:	2b00      	cmp	r3, #0
 800c18a:	d003      	beq.n	800c194 <HAL_CAN_IRQHandler+0x27c>
 800c18c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c18e:	f043 0301 	orr.w	r3, r3, #1
 800c192:	627b      	str	r3, [r7, #36]	@ 0x24
 800c194:	6a3b      	ldr	r3, [r7, #32]
 800c196:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800c19a:	2b00      	cmp	r3, #0
 800c19c:	d008      	beq.n	800c1b0 <HAL_CAN_IRQHandler+0x298>
 800c19e:	68fb      	ldr	r3, [r7, #12]
 800c1a0:	f003 0302 	and.w	r3, r3, #2
 800c1a4:	2b00      	cmp	r3, #0
 800c1a6:	d003      	beq.n	800c1b0 <HAL_CAN_IRQHandler+0x298>
 800c1a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c1aa:	f043 0302 	orr.w	r3, r3, #2
 800c1ae:	627b      	str	r3, [r7, #36]	@ 0x24
 800c1b0:	6a3b      	ldr	r3, [r7, #32]
 800c1b2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800c1b6:	2b00      	cmp	r3, #0
 800c1b8:	d008      	beq.n	800c1cc <HAL_CAN_IRQHandler+0x2b4>
 800c1ba:	68fb      	ldr	r3, [r7, #12]
 800c1bc:	f003 0304 	and.w	r3, r3, #4
 800c1c0:	2b00      	cmp	r3, #0
 800c1c2:	d003      	beq.n	800c1cc <HAL_CAN_IRQHandler+0x2b4>
 800c1c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c1c6:	f043 0304 	orr.w	r3, r3, #4
 800c1ca:	627b      	str	r3, [r7, #36]	@ 0x24
 800c1cc:	6a3b      	ldr	r3, [r7, #32]
 800c1ce:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800c1d2:	2b00      	cmp	r3, #0
 800c1d4:	d043      	beq.n	800c25e <HAL_CAN_IRQHandler+0x346>
 800c1d6:	68fb      	ldr	r3, [r7, #12]
 800c1d8:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800c1dc:	2b00      	cmp	r3, #0
 800c1de:	d03e      	beq.n	800c25e <HAL_CAN_IRQHandler+0x346>
 800c1e0:	68fb      	ldr	r3, [r7, #12]
 800c1e2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800c1e6:	2b60      	cmp	r3, #96	@ 0x60
 800c1e8:	d02b      	beq.n	800c242 <HAL_CAN_IRQHandler+0x32a>
 800c1ea:	2b60      	cmp	r3, #96	@ 0x60
 800c1ec:	d82e      	bhi.n	800c24c <HAL_CAN_IRQHandler+0x334>
 800c1ee:	2b50      	cmp	r3, #80	@ 0x50
 800c1f0:	d022      	beq.n	800c238 <HAL_CAN_IRQHandler+0x320>
 800c1f2:	2b50      	cmp	r3, #80	@ 0x50
 800c1f4:	d82a      	bhi.n	800c24c <HAL_CAN_IRQHandler+0x334>
 800c1f6:	2b40      	cmp	r3, #64	@ 0x40
 800c1f8:	d019      	beq.n	800c22e <HAL_CAN_IRQHandler+0x316>
 800c1fa:	2b40      	cmp	r3, #64	@ 0x40
 800c1fc:	d826      	bhi.n	800c24c <HAL_CAN_IRQHandler+0x334>
 800c1fe:	2b30      	cmp	r3, #48	@ 0x30
 800c200:	d010      	beq.n	800c224 <HAL_CAN_IRQHandler+0x30c>
 800c202:	2b30      	cmp	r3, #48	@ 0x30
 800c204:	d822      	bhi.n	800c24c <HAL_CAN_IRQHandler+0x334>
 800c206:	2b10      	cmp	r3, #16
 800c208:	d002      	beq.n	800c210 <HAL_CAN_IRQHandler+0x2f8>
 800c20a:	2b20      	cmp	r3, #32
 800c20c:	d005      	beq.n	800c21a <HAL_CAN_IRQHandler+0x302>
 800c20e:	e01d      	b.n	800c24c <HAL_CAN_IRQHandler+0x334>
 800c210:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c212:	f043 0308 	orr.w	r3, r3, #8
 800c216:	627b      	str	r3, [r7, #36]	@ 0x24
 800c218:	e019      	b.n	800c24e <HAL_CAN_IRQHandler+0x336>
 800c21a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c21c:	f043 0310 	orr.w	r3, r3, #16
 800c220:	627b      	str	r3, [r7, #36]	@ 0x24
 800c222:	e014      	b.n	800c24e <HAL_CAN_IRQHandler+0x336>
 800c224:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c226:	f043 0320 	orr.w	r3, r3, #32
 800c22a:	627b      	str	r3, [r7, #36]	@ 0x24
 800c22c:	e00f      	b.n	800c24e <HAL_CAN_IRQHandler+0x336>
 800c22e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c230:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c234:	627b      	str	r3, [r7, #36]	@ 0x24
 800c236:	e00a      	b.n	800c24e <HAL_CAN_IRQHandler+0x336>
 800c238:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c23a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c23e:	627b      	str	r3, [r7, #36]	@ 0x24
 800c240:	e005      	b.n	800c24e <HAL_CAN_IRQHandler+0x336>
 800c242:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c244:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c248:	627b      	str	r3, [r7, #36]	@ 0x24
 800c24a:	e000      	b.n	800c24e <HAL_CAN_IRQHandler+0x336>
 800c24c:	bf00      	nop
 800c24e:	687b      	ldr	r3, [r7, #4]
 800c250:	681b      	ldr	r3, [r3, #0]
 800c252:	699a      	ldr	r2, [r3, #24]
 800c254:	687b      	ldr	r3, [r7, #4]
 800c256:	681b      	ldr	r3, [r3, #0]
 800c258:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c25c:	619a      	str	r2, [r3, #24]
 800c25e:	687b      	ldr	r3, [r7, #4]
 800c260:	681b      	ldr	r3, [r3, #0]
 800c262:	2204      	movs	r2, #4
 800c264:	605a      	str	r2, [r3, #4]
 800c266:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c268:	2b00      	cmp	r3, #0
 800c26a:	d008      	beq.n	800c27e <HAL_CAN_IRQHandler+0x366>
 800c26c:	687b      	ldr	r3, [r7, #4]
 800c26e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c270:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c272:	431a      	orrs	r2, r3
 800c274:	687b      	ldr	r3, [r7, #4]
 800c276:	625a      	str	r2, [r3, #36]	@ 0x24
 800c278:	6878      	ldr	r0, [r7, #4]
 800c27a:	f000 f868 	bl	800c34e <HAL_CAN_ErrorCallback>
 800c27e:	bf00      	nop
 800c280:	3728      	adds	r7, #40	@ 0x28
 800c282:	46bd      	mov	sp, r7
 800c284:	bd80      	pop	{r7, pc}

0800c286 <HAL_CAN_TxMailbox0CompleteCallback>:
 800c286:	b480      	push	{r7}
 800c288:	b083      	sub	sp, #12
 800c28a:	af00      	add	r7, sp, #0
 800c28c:	6078      	str	r0, [r7, #4]
 800c28e:	bf00      	nop
 800c290:	370c      	adds	r7, #12
 800c292:	46bd      	mov	sp, r7
 800c294:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c298:	4770      	bx	lr

0800c29a <HAL_CAN_TxMailbox1CompleteCallback>:
 800c29a:	b480      	push	{r7}
 800c29c:	b083      	sub	sp, #12
 800c29e:	af00      	add	r7, sp, #0
 800c2a0:	6078      	str	r0, [r7, #4]
 800c2a2:	bf00      	nop
 800c2a4:	370c      	adds	r7, #12
 800c2a6:	46bd      	mov	sp, r7
 800c2a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2ac:	4770      	bx	lr

0800c2ae <HAL_CAN_TxMailbox2CompleteCallback>:
 800c2ae:	b480      	push	{r7}
 800c2b0:	b083      	sub	sp, #12
 800c2b2:	af00      	add	r7, sp, #0
 800c2b4:	6078      	str	r0, [r7, #4]
 800c2b6:	bf00      	nop
 800c2b8:	370c      	adds	r7, #12
 800c2ba:	46bd      	mov	sp, r7
 800c2bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2c0:	4770      	bx	lr

0800c2c2 <HAL_CAN_TxMailbox0AbortCallback>:
 800c2c2:	b480      	push	{r7}
 800c2c4:	b083      	sub	sp, #12
 800c2c6:	af00      	add	r7, sp, #0
 800c2c8:	6078      	str	r0, [r7, #4]
 800c2ca:	bf00      	nop
 800c2cc:	370c      	adds	r7, #12
 800c2ce:	46bd      	mov	sp, r7
 800c2d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2d4:	4770      	bx	lr

0800c2d6 <HAL_CAN_TxMailbox1AbortCallback>:
 800c2d6:	b480      	push	{r7}
 800c2d8:	b083      	sub	sp, #12
 800c2da:	af00      	add	r7, sp, #0
 800c2dc:	6078      	str	r0, [r7, #4]
 800c2de:	bf00      	nop
 800c2e0:	370c      	adds	r7, #12
 800c2e2:	46bd      	mov	sp, r7
 800c2e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2e8:	4770      	bx	lr

0800c2ea <HAL_CAN_TxMailbox2AbortCallback>:
 800c2ea:	b480      	push	{r7}
 800c2ec:	b083      	sub	sp, #12
 800c2ee:	af00      	add	r7, sp, #0
 800c2f0:	6078      	str	r0, [r7, #4]
 800c2f2:	bf00      	nop
 800c2f4:	370c      	adds	r7, #12
 800c2f6:	46bd      	mov	sp, r7
 800c2f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2fc:	4770      	bx	lr

0800c2fe <HAL_CAN_RxFifo0FullCallback>:
 800c2fe:	b480      	push	{r7}
 800c300:	b083      	sub	sp, #12
 800c302:	af00      	add	r7, sp, #0
 800c304:	6078      	str	r0, [r7, #4]
 800c306:	bf00      	nop
 800c308:	370c      	adds	r7, #12
 800c30a:	46bd      	mov	sp, r7
 800c30c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c310:	4770      	bx	lr

0800c312 <HAL_CAN_RxFifo1FullCallback>:
 800c312:	b480      	push	{r7}
 800c314:	b083      	sub	sp, #12
 800c316:	af00      	add	r7, sp, #0
 800c318:	6078      	str	r0, [r7, #4]
 800c31a:	bf00      	nop
 800c31c:	370c      	adds	r7, #12
 800c31e:	46bd      	mov	sp, r7
 800c320:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c324:	4770      	bx	lr

0800c326 <HAL_CAN_SleepCallback>:
 800c326:	b480      	push	{r7}
 800c328:	b083      	sub	sp, #12
 800c32a:	af00      	add	r7, sp, #0
 800c32c:	6078      	str	r0, [r7, #4]
 800c32e:	bf00      	nop
 800c330:	370c      	adds	r7, #12
 800c332:	46bd      	mov	sp, r7
 800c334:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c338:	4770      	bx	lr

0800c33a <HAL_CAN_WakeUpFromRxMsgCallback>:
 800c33a:	b480      	push	{r7}
 800c33c:	b083      	sub	sp, #12
 800c33e:	af00      	add	r7, sp, #0
 800c340:	6078      	str	r0, [r7, #4]
 800c342:	bf00      	nop
 800c344:	370c      	adds	r7, #12
 800c346:	46bd      	mov	sp, r7
 800c348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c34c:	4770      	bx	lr

0800c34e <HAL_CAN_ErrorCallback>:
 800c34e:	b480      	push	{r7}
 800c350:	b083      	sub	sp, #12
 800c352:	af00      	add	r7, sp, #0
 800c354:	6078      	str	r0, [r7, #4]
 800c356:	bf00      	nop
 800c358:	370c      	adds	r7, #12
 800c35a:	46bd      	mov	sp, r7
 800c35c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c360:	4770      	bx	lr
	...

0800c364 <__NVIC_SetPriorityGrouping>:
 800c364:	b480      	push	{r7}
 800c366:	b085      	sub	sp, #20
 800c368:	af00      	add	r7, sp, #0
 800c36a:	6078      	str	r0, [r7, #4]
 800c36c:	687b      	ldr	r3, [r7, #4]
 800c36e:	f003 0307 	and.w	r3, r3, #7
 800c372:	60fb      	str	r3, [r7, #12]
 800c374:	4b0c      	ldr	r3, [pc, #48]	@ (800c3a8 <__NVIC_SetPriorityGrouping+0x44>)
 800c376:	68db      	ldr	r3, [r3, #12]
 800c378:	60bb      	str	r3, [r7, #8]
 800c37a:	68ba      	ldr	r2, [r7, #8]
 800c37c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800c380:	4013      	ands	r3, r2
 800c382:	60bb      	str	r3, [r7, #8]
 800c384:	68fb      	ldr	r3, [r7, #12]
 800c386:	021a      	lsls	r2, r3, #8
 800c388:	68bb      	ldr	r3, [r7, #8]
 800c38a:	4313      	orrs	r3, r2
 800c38c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800c390:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c394:	60bb      	str	r3, [r7, #8]
 800c396:	4a04      	ldr	r2, [pc, #16]	@ (800c3a8 <__NVIC_SetPriorityGrouping+0x44>)
 800c398:	68bb      	ldr	r3, [r7, #8]
 800c39a:	60d3      	str	r3, [r2, #12]
 800c39c:	bf00      	nop
 800c39e:	3714      	adds	r7, #20
 800c3a0:	46bd      	mov	sp, r7
 800c3a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3a6:	4770      	bx	lr
 800c3a8:	e000ed00 	.word	0xe000ed00

0800c3ac <__NVIC_GetPriorityGrouping>:
 800c3ac:	b480      	push	{r7}
 800c3ae:	af00      	add	r7, sp, #0
 800c3b0:	4b04      	ldr	r3, [pc, #16]	@ (800c3c4 <__NVIC_GetPriorityGrouping+0x18>)
 800c3b2:	68db      	ldr	r3, [r3, #12]
 800c3b4:	0a1b      	lsrs	r3, r3, #8
 800c3b6:	f003 0307 	and.w	r3, r3, #7
 800c3ba:	4618      	mov	r0, r3
 800c3bc:	46bd      	mov	sp, r7
 800c3be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3c2:	4770      	bx	lr
 800c3c4:	e000ed00 	.word	0xe000ed00

0800c3c8 <__NVIC_EnableIRQ>:
 800c3c8:	b480      	push	{r7}
 800c3ca:	b083      	sub	sp, #12
 800c3cc:	af00      	add	r7, sp, #0
 800c3ce:	4603      	mov	r3, r0
 800c3d0:	71fb      	strb	r3, [r7, #7]
 800c3d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	db0b      	blt.n	800c3f2 <__NVIC_EnableIRQ+0x2a>
 800c3da:	79fb      	ldrb	r3, [r7, #7]
 800c3dc:	f003 021f 	and.w	r2, r3, #31
 800c3e0:	4907      	ldr	r1, [pc, #28]	@ (800c400 <__NVIC_EnableIRQ+0x38>)
 800c3e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c3e6:	095b      	lsrs	r3, r3, #5
 800c3e8:	2001      	movs	r0, #1
 800c3ea:	fa00 f202 	lsl.w	r2, r0, r2
 800c3ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800c3f2:	bf00      	nop
 800c3f4:	370c      	adds	r7, #12
 800c3f6:	46bd      	mov	sp, r7
 800c3f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3fc:	4770      	bx	lr
 800c3fe:	bf00      	nop
 800c400:	e000e100 	.word	0xe000e100

0800c404 <__NVIC_DisableIRQ>:
 800c404:	b480      	push	{r7}
 800c406:	b083      	sub	sp, #12
 800c408:	af00      	add	r7, sp, #0
 800c40a:	4603      	mov	r3, r0
 800c40c:	71fb      	strb	r3, [r7, #7]
 800c40e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c412:	2b00      	cmp	r3, #0
 800c414:	db12      	blt.n	800c43c <__NVIC_DisableIRQ+0x38>
 800c416:	79fb      	ldrb	r3, [r7, #7]
 800c418:	f003 021f 	and.w	r2, r3, #31
 800c41c:	490a      	ldr	r1, [pc, #40]	@ (800c448 <__NVIC_DisableIRQ+0x44>)
 800c41e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c422:	095b      	lsrs	r3, r3, #5
 800c424:	2001      	movs	r0, #1
 800c426:	fa00 f202 	lsl.w	r2, r0, r2
 800c42a:	3320      	adds	r3, #32
 800c42c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800c430:	f3bf 8f4f 	dsb	sy
 800c434:	bf00      	nop
 800c436:	f3bf 8f6f 	isb	sy
 800c43a:	bf00      	nop
 800c43c:	bf00      	nop
 800c43e:	370c      	adds	r7, #12
 800c440:	46bd      	mov	sp, r7
 800c442:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c446:	4770      	bx	lr
 800c448:	e000e100 	.word	0xe000e100

0800c44c <__NVIC_SetPriority>:
 800c44c:	b480      	push	{r7}
 800c44e:	b083      	sub	sp, #12
 800c450:	af00      	add	r7, sp, #0
 800c452:	4603      	mov	r3, r0
 800c454:	6039      	str	r1, [r7, #0]
 800c456:	71fb      	strb	r3, [r7, #7]
 800c458:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c45c:	2b00      	cmp	r3, #0
 800c45e:	db0a      	blt.n	800c476 <__NVIC_SetPriority+0x2a>
 800c460:	683b      	ldr	r3, [r7, #0]
 800c462:	b2da      	uxtb	r2, r3
 800c464:	490c      	ldr	r1, [pc, #48]	@ (800c498 <__NVIC_SetPriority+0x4c>)
 800c466:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c46a:	0112      	lsls	r2, r2, #4
 800c46c:	b2d2      	uxtb	r2, r2
 800c46e:	440b      	add	r3, r1
 800c470:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800c474:	e00a      	b.n	800c48c <__NVIC_SetPriority+0x40>
 800c476:	683b      	ldr	r3, [r7, #0]
 800c478:	b2da      	uxtb	r2, r3
 800c47a:	4908      	ldr	r1, [pc, #32]	@ (800c49c <__NVIC_SetPriority+0x50>)
 800c47c:	79fb      	ldrb	r3, [r7, #7]
 800c47e:	f003 030f 	and.w	r3, r3, #15
 800c482:	3b04      	subs	r3, #4
 800c484:	0112      	lsls	r2, r2, #4
 800c486:	b2d2      	uxtb	r2, r2
 800c488:	440b      	add	r3, r1
 800c48a:	761a      	strb	r2, [r3, #24]
 800c48c:	bf00      	nop
 800c48e:	370c      	adds	r7, #12
 800c490:	46bd      	mov	sp, r7
 800c492:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c496:	4770      	bx	lr
 800c498:	e000e100 	.word	0xe000e100
 800c49c:	e000ed00 	.word	0xe000ed00

0800c4a0 <NVIC_EncodePriority>:
 800c4a0:	b480      	push	{r7}
 800c4a2:	b089      	sub	sp, #36	@ 0x24
 800c4a4:	af00      	add	r7, sp, #0
 800c4a6:	60f8      	str	r0, [r7, #12]
 800c4a8:	60b9      	str	r1, [r7, #8]
 800c4aa:	607a      	str	r2, [r7, #4]
 800c4ac:	68fb      	ldr	r3, [r7, #12]
 800c4ae:	f003 0307 	and.w	r3, r3, #7
 800c4b2:	61fb      	str	r3, [r7, #28]
 800c4b4:	69fb      	ldr	r3, [r7, #28]
 800c4b6:	f1c3 0307 	rsb	r3, r3, #7
 800c4ba:	2b04      	cmp	r3, #4
 800c4bc:	bf28      	it	cs
 800c4be:	2304      	movcs	r3, #4
 800c4c0:	61bb      	str	r3, [r7, #24]
 800c4c2:	69fb      	ldr	r3, [r7, #28]
 800c4c4:	3304      	adds	r3, #4
 800c4c6:	2b06      	cmp	r3, #6
 800c4c8:	d902      	bls.n	800c4d0 <NVIC_EncodePriority+0x30>
 800c4ca:	69fb      	ldr	r3, [r7, #28]
 800c4cc:	3b03      	subs	r3, #3
 800c4ce:	e000      	b.n	800c4d2 <NVIC_EncodePriority+0x32>
 800c4d0:	2300      	movs	r3, #0
 800c4d2:	617b      	str	r3, [r7, #20]
 800c4d4:	f04f 32ff 	mov.w	r2, #4294967295
 800c4d8:	69bb      	ldr	r3, [r7, #24]
 800c4da:	fa02 f303 	lsl.w	r3, r2, r3
 800c4de:	43da      	mvns	r2, r3
 800c4e0:	68bb      	ldr	r3, [r7, #8]
 800c4e2:	401a      	ands	r2, r3
 800c4e4:	697b      	ldr	r3, [r7, #20]
 800c4e6:	409a      	lsls	r2, r3
 800c4e8:	f04f 31ff 	mov.w	r1, #4294967295
 800c4ec:	697b      	ldr	r3, [r7, #20]
 800c4ee:	fa01 f303 	lsl.w	r3, r1, r3
 800c4f2:	43d9      	mvns	r1, r3
 800c4f4:	687b      	ldr	r3, [r7, #4]
 800c4f6:	400b      	ands	r3, r1
 800c4f8:	4313      	orrs	r3, r2
 800c4fa:	4618      	mov	r0, r3
 800c4fc:	3724      	adds	r7, #36	@ 0x24
 800c4fe:	46bd      	mov	sp, r7
 800c500:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c504:	4770      	bx	lr

0800c506 <HAL_NVIC_SetPriorityGrouping>:
 800c506:	b580      	push	{r7, lr}
 800c508:	b082      	sub	sp, #8
 800c50a:	af00      	add	r7, sp, #0
 800c50c:	6078      	str	r0, [r7, #4]
 800c50e:	6878      	ldr	r0, [r7, #4]
 800c510:	f7ff ff28 	bl	800c364 <__NVIC_SetPriorityGrouping>
 800c514:	bf00      	nop
 800c516:	3708      	adds	r7, #8
 800c518:	46bd      	mov	sp, r7
 800c51a:	bd80      	pop	{r7, pc}

0800c51c <HAL_NVIC_SetPriority>:
 800c51c:	b580      	push	{r7, lr}
 800c51e:	b086      	sub	sp, #24
 800c520:	af00      	add	r7, sp, #0
 800c522:	4603      	mov	r3, r0
 800c524:	60b9      	str	r1, [r7, #8]
 800c526:	607a      	str	r2, [r7, #4]
 800c528:	73fb      	strb	r3, [r7, #15]
 800c52a:	2300      	movs	r3, #0
 800c52c:	617b      	str	r3, [r7, #20]
 800c52e:	f7ff ff3d 	bl	800c3ac <__NVIC_GetPriorityGrouping>
 800c532:	6178      	str	r0, [r7, #20]
 800c534:	687a      	ldr	r2, [r7, #4]
 800c536:	68b9      	ldr	r1, [r7, #8]
 800c538:	6978      	ldr	r0, [r7, #20]
 800c53a:	f7ff ffb1 	bl	800c4a0 <NVIC_EncodePriority>
 800c53e:	4602      	mov	r2, r0
 800c540:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800c544:	4611      	mov	r1, r2
 800c546:	4618      	mov	r0, r3
 800c548:	f7ff ff80 	bl	800c44c <__NVIC_SetPriority>
 800c54c:	bf00      	nop
 800c54e:	3718      	adds	r7, #24
 800c550:	46bd      	mov	sp, r7
 800c552:	bd80      	pop	{r7, pc}

0800c554 <HAL_NVIC_EnableIRQ>:
 800c554:	b580      	push	{r7, lr}
 800c556:	b082      	sub	sp, #8
 800c558:	af00      	add	r7, sp, #0
 800c55a:	4603      	mov	r3, r0
 800c55c:	71fb      	strb	r3, [r7, #7]
 800c55e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c562:	4618      	mov	r0, r3
 800c564:	f7ff ff30 	bl	800c3c8 <__NVIC_EnableIRQ>
 800c568:	bf00      	nop
 800c56a:	3708      	adds	r7, #8
 800c56c:	46bd      	mov	sp, r7
 800c56e:	bd80      	pop	{r7, pc}

0800c570 <HAL_NVIC_DisableIRQ>:
 800c570:	b580      	push	{r7, lr}
 800c572:	b082      	sub	sp, #8
 800c574:	af00      	add	r7, sp, #0
 800c576:	4603      	mov	r3, r0
 800c578:	71fb      	strb	r3, [r7, #7]
 800c57a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c57e:	4618      	mov	r0, r3
 800c580:	f7ff ff40 	bl	800c404 <__NVIC_DisableIRQ>
 800c584:	bf00      	nop
 800c586:	3708      	adds	r7, #8
 800c588:	46bd      	mov	sp, r7
 800c58a:	bd80      	pop	{r7, pc}

0800c58c <HAL_DMA_Init>:
 800c58c:	b580      	push	{r7, lr}
 800c58e:	b086      	sub	sp, #24
 800c590:	af00      	add	r7, sp, #0
 800c592:	6078      	str	r0, [r7, #4]
 800c594:	2300      	movs	r3, #0
 800c596:	617b      	str	r3, [r7, #20]
 800c598:	f7fe fdd2 	bl	800b140 <HAL_GetTick>
 800c59c:	6138      	str	r0, [r7, #16]
 800c59e:	687b      	ldr	r3, [r7, #4]
 800c5a0:	2b00      	cmp	r3, #0
 800c5a2:	d101      	bne.n	800c5a8 <HAL_DMA_Init+0x1c>
 800c5a4:	2301      	movs	r3, #1
 800c5a6:	e099      	b.n	800c6dc <HAL_DMA_Init+0x150>
 800c5a8:	687b      	ldr	r3, [r7, #4]
 800c5aa:	2202      	movs	r2, #2
 800c5ac:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c5b0:	687b      	ldr	r3, [r7, #4]
 800c5b2:	2200      	movs	r2, #0
 800c5b4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c5b8:	687b      	ldr	r3, [r7, #4]
 800c5ba:	681b      	ldr	r3, [r3, #0]
 800c5bc:	681a      	ldr	r2, [r3, #0]
 800c5be:	687b      	ldr	r3, [r7, #4]
 800c5c0:	681b      	ldr	r3, [r3, #0]
 800c5c2:	f022 0201 	bic.w	r2, r2, #1
 800c5c6:	601a      	str	r2, [r3, #0]
 800c5c8:	e00f      	b.n	800c5ea <HAL_DMA_Init+0x5e>
 800c5ca:	f7fe fdb9 	bl	800b140 <HAL_GetTick>
 800c5ce:	4602      	mov	r2, r0
 800c5d0:	693b      	ldr	r3, [r7, #16]
 800c5d2:	1ad3      	subs	r3, r2, r3
 800c5d4:	2b05      	cmp	r3, #5
 800c5d6:	d908      	bls.n	800c5ea <HAL_DMA_Init+0x5e>
 800c5d8:	687b      	ldr	r3, [r7, #4]
 800c5da:	2220      	movs	r2, #32
 800c5dc:	655a      	str	r2, [r3, #84]	@ 0x54
 800c5de:	687b      	ldr	r3, [r7, #4]
 800c5e0:	2203      	movs	r2, #3
 800c5e2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c5e6:	2303      	movs	r3, #3
 800c5e8:	e078      	b.n	800c6dc <HAL_DMA_Init+0x150>
 800c5ea:	687b      	ldr	r3, [r7, #4]
 800c5ec:	681b      	ldr	r3, [r3, #0]
 800c5ee:	681b      	ldr	r3, [r3, #0]
 800c5f0:	f003 0301 	and.w	r3, r3, #1
 800c5f4:	2b00      	cmp	r3, #0
 800c5f6:	d1e8      	bne.n	800c5ca <HAL_DMA_Init+0x3e>
 800c5f8:	687b      	ldr	r3, [r7, #4]
 800c5fa:	681b      	ldr	r3, [r3, #0]
 800c5fc:	681b      	ldr	r3, [r3, #0]
 800c5fe:	617b      	str	r3, [r7, #20]
 800c600:	697a      	ldr	r2, [r7, #20]
 800c602:	4b38      	ldr	r3, [pc, #224]	@ (800c6e4 <HAL_DMA_Init+0x158>)
 800c604:	4013      	ands	r3, r2
 800c606:	617b      	str	r3, [r7, #20]
 800c608:	687b      	ldr	r3, [r7, #4]
 800c60a:	685a      	ldr	r2, [r3, #4]
 800c60c:	687b      	ldr	r3, [r7, #4]
 800c60e:	689b      	ldr	r3, [r3, #8]
 800c610:	431a      	orrs	r2, r3
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	68db      	ldr	r3, [r3, #12]
 800c616:	431a      	orrs	r2, r3
 800c618:	687b      	ldr	r3, [r7, #4]
 800c61a:	691b      	ldr	r3, [r3, #16]
 800c61c:	431a      	orrs	r2, r3
 800c61e:	687b      	ldr	r3, [r7, #4]
 800c620:	695b      	ldr	r3, [r3, #20]
 800c622:	431a      	orrs	r2, r3
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	699b      	ldr	r3, [r3, #24]
 800c628:	431a      	orrs	r2, r3
 800c62a:	687b      	ldr	r3, [r7, #4]
 800c62c:	69db      	ldr	r3, [r3, #28]
 800c62e:	431a      	orrs	r2, r3
 800c630:	687b      	ldr	r3, [r7, #4]
 800c632:	6a1b      	ldr	r3, [r3, #32]
 800c634:	4313      	orrs	r3, r2
 800c636:	697a      	ldr	r2, [r7, #20]
 800c638:	4313      	orrs	r3, r2
 800c63a:	617b      	str	r3, [r7, #20]
 800c63c:	687b      	ldr	r3, [r7, #4]
 800c63e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c640:	2b04      	cmp	r3, #4
 800c642:	d107      	bne.n	800c654 <HAL_DMA_Init+0xc8>
 800c644:	687b      	ldr	r3, [r7, #4]
 800c646:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800c648:	687b      	ldr	r3, [r7, #4]
 800c64a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c64c:	4313      	orrs	r3, r2
 800c64e:	697a      	ldr	r2, [r7, #20]
 800c650:	4313      	orrs	r3, r2
 800c652:	617b      	str	r3, [r7, #20]
 800c654:	687b      	ldr	r3, [r7, #4]
 800c656:	681b      	ldr	r3, [r3, #0]
 800c658:	697a      	ldr	r2, [r7, #20]
 800c65a:	601a      	str	r2, [r3, #0]
 800c65c:	687b      	ldr	r3, [r7, #4]
 800c65e:	681b      	ldr	r3, [r3, #0]
 800c660:	695b      	ldr	r3, [r3, #20]
 800c662:	617b      	str	r3, [r7, #20]
 800c664:	697b      	ldr	r3, [r7, #20]
 800c666:	f023 0307 	bic.w	r3, r3, #7
 800c66a:	617b      	str	r3, [r7, #20]
 800c66c:	687b      	ldr	r3, [r7, #4]
 800c66e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c670:	697a      	ldr	r2, [r7, #20]
 800c672:	4313      	orrs	r3, r2
 800c674:	617b      	str	r3, [r7, #20]
 800c676:	687b      	ldr	r3, [r7, #4]
 800c678:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c67a:	2b04      	cmp	r3, #4
 800c67c:	d117      	bne.n	800c6ae <HAL_DMA_Init+0x122>
 800c67e:	687b      	ldr	r3, [r7, #4]
 800c680:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c682:	697a      	ldr	r2, [r7, #20]
 800c684:	4313      	orrs	r3, r2
 800c686:	617b      	str	r3, [r7, #20]
 800c688:	687b      	ldr	r3, [r7, #4]
 800c68a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c68c:	2b00      	cmp	r3, #0
 800c68e:	d00e      	beq.n	800c6ae <HAL_DMA_Init+0x122>
 800c690:	6878      	ldr	r0, [r7, #4]
 800c692:	f000 fb0d 	bl	800ccb0 <DMA_CheckFifoParam>
 800c696:	4603      	mov	r3, r0
 800c698:	2b00      	cmp	r3, #0
 800c69a:	d008      	beq.n	800c6ae <HAL_DMA_Init+0x122>
 800c69c:	687b      	ldr	r3, [r7, #4]
 800c69e:	2240      	movs	r2, #64	@ 0x40
 800c6a0:	655a      	str	r2, [r3, #84]	@ 0x54
 800c6a2:	687b      	ldr	r3, [r7, #4]
 800c6a4:	2201      	movs	r2, #1
 800c6a6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c6aa:	2301      	movs	r3, #1
 800c6ac:	e016      	b.n	800c6dc <HAL_DMA_Init+0x150>
 800c6ae:	687b      	ldr	r3, [r7, #4]
 800c6b0:	681b      	ldr	r3, [r3, #0]
 800c6b2:	697a      	ldr	r2, [r7, #20]
 800c6b4:	615a      	str	r2, [r3, #20]
 800c6b6:	6878      	ldr	r0, [r7, #4]
 800c6b8:	f000 fac4 	bl	800cc44 <DMA_CalcBaseAndBitshift>
 800c6bc:	4603      	mov	r3, r0
 800c6be:	60fb      	str	r3, [r7, #12]
 800c6c0:	687b      	ldr	r3, [r7, #4]
 800c6c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c6c4:	223f      	movs	r2, #63	@ 0x3f
 800c6c6:	409a      	lsls	r2, r3
 800c6c8:	68fb      	ldr	r3, [r7, #12]
 800c6ca:	609a      	str	r2, [r3, #8]
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	2200      	movs	r2, #0
 800c6d0:	655a      	str	r2, [r3, #84]	@ 0x54
 800c6d2:	687b      	ldr	r3, [r7, #4]
 800c6d4:	2201      	movs	r2, #1
 800c6d6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c6da:	2300      	movs	r3, #0
 800c6dc:	4618      	mov	r0, r3
 800c6de:	3718      	adds	r7, #24
 800c6e0:	46bd      	mov	sp, r7
 800c6e2:	bd80      	pop	{r7, pc}
 800c6e4:	f010803f 	.word	0xf010803f

0800c6e8 <HAL_DMA_Start_IT>:
 800c6e8:	b580      	push	{r7, lr}
 800c6ea:	b086      	sub	sp, #24
 800c6ec:	af00      	add	r7, sp, #0
 800c6ee:	60f8      	str	r0, [r7, #12]
 800c6f0:	60b9      	str	r1, [r7, #8]
 800c6f2:	607a      	str	r2, [r7, #4]
 800c6f4:	603b      	str	r3, [r7, #0]
 800c6f6:	2300      	movs	r3, #0
 800c6f8:	75fb      	strb	r3, [r7, #23]
 800c6fa:	68fb      	ldr	r3, [r7, #12]
 800c6fc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c6fe:	613b      	str	r3, [r7, #16]
 800c700:	68fb      	ldr	r3, [r7, #12]
 800c702:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800c706:	2b01      	cmp	r3, #1
 800c708:	d101      	bne.n	800c70e <HAL_DMA_Start_IT+0x26>
 800c70a:	2302      	movs	r3, #2
 800c70c:	e040      	b.n	800c790 <HAL_DMA_Start_IT+0xa8>
 800c70e:	68fb      	ldr	r3, [r7, #12]
 800c710:	2201      	movs	r2, #1
 800c712:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c716:	68fb      	ldr	r3, [r7, #12]
 800c718:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c71c:	b2db      	uxtb	r3, r3
 800c71e:	2b01      	cmp	r3, #1
 800c720:	d12f      	bne.n	800c782 <HAL_DMA_Start_IT+0x9a>
 800c722:	68fb      	ldr	r3, [r7, #12]
 800c724:	2202      	movs	r2, #2
 800c726:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c72a:	68fb      	ldr	r3, [r7, #12]
 800c72c:	2200      	movs	r2, #0
 800c72e:	655a      	str	r2, [r3, #84]	@ 0x54
 800c730:	683b      	ldr	r3, [r7, #0]
 800c732:	687a      	ldr	r2, [r7, #4]
 800c734:	68b9      	ldr	r1, [r7, #8]
 800c736:	68f8      	ldr	r0, [r7, #12]
 800c738:	f000 fa56 	bl	800cbe8 <DMA_SetConfig>
 800c73c:	68fb      	ldr	r3, [r7, #12]
 800c73e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c740:	223f      	movs	r2, #63	@ 0x3f
 800c742:	409a      	lsls	r2, r3
 800c744:	693b      	ldr	r3, [r7, #16]
 800c746:	609a      	str	r2, [r3, #8]
 800c748:	68fb      	ldr	r3, [r7, #12]
 800c74a:	681b      	ldr	r3, [r3, #0]
 800c74c:	681a      	ldr	r2, [r3, #0]
 800c74e:	68fb      	ldr	r3, [r7, #12]
 800c750:	681b      	ldr	r3, [r3, #0]
 800c752:	f042 0216 	orr.w	r2, r2, #22
 800c756:	601a      	str	r2, [r3, #0]
 800c758:	68fb      	ldr	r3, [r7, #12]
 800c75a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c75c:	2b00      	cmp	r3, #0
 800c75e:	d007      	beq.n	800c770 <HAL_DMA_Start_IT+0x88>
 800c760:	68fb      	ldr	r3, [r7, #12]
 800c762:	681b      	ldr	r3, [r3, #0]
 800c764:	681a      	ldr	r2, [r3, #0]
 800c766:	68fb      	ldr	r3, [r7, #12]
 800c768:	681b      	ldr	r3, [r3, #0]
 800c76a:	f042 0208 	orr.w	r2, r2, #8
 800c76e:	601a      	str	r2, [r3, #0]
 800c770:	68fb      	ldr	r3, [r7, #12]
 800c772:	681b      	ldr	r3, [r3, #0]
 800c774:	681a      	ldr	r2, [r3, #0]
 800c776:	68fb      	ldr	r3, [r7, #12]
 800c778:	681b      	ldr	r3, [r3, #0]
 800c77a:	f042 0201 	orr.w	r2, r2, #1
 800c77e:	601a      	str	r2, [r3, #0]
 800c780:	e005      	b.n	800c78e <HAL_DMA_Start_IT+0xa6>
 800c782:	68fb      	ldr	r3, [r7, #12]
 800c784:	2200      	movs	r2, #0
 800c786:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c78a:	2302      	movs	r3, #2
 800c78c:	75fb      	strb	r3, [r7, #23]
 800c78e:	7dfb      	ldrb	r3, [r7, #23]
 800c790:	4618      	mov	r0, r3
 800c792:	3718      	adds	r7, #24
 800c794:	46bd      	mov	sp, r7
 800c796:	bd80      	pop	{r7, pc}

0800c798 <HAL_DMA_Abort>:
 800c798:	b580      	push	{r7, lr}
 800c79a:	b084      	sub	sp, #16
 800c79c:	af00      	add	r7, sp, #0
 800c79e:	6078      	str	r0, [r7, #4]
 800c7a0:	687b      	ldr	r3, [r7, #4]
 800c7a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c7a4:	60fb      	str	r3, [r7, #12]
 800c7a6:	f7fe fccb 	bl	800b140 <HAL_GetTick>
 800c7aa:	60b8      	str	r0, [r7, #8]
 800c7ac:	687b      	ldr	r3, [r7, #4]
 800c7ae:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c7b2:	b2db      	uxtb	r3, r3
 800c7b4:	2b02      	cmp	r3, #2
 800c7b6:	d008      	beq.n	800c7ca <HAL_DMA_Abort+0x32>
 800c7b8:	687b      	ldr	r3, [r7, #4]
 800c7ba:	2280      	movs	r2, #128	@ 0x80
 800c7bc:	655a      	str	r2, [r3, #84]	@ 0x54
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	2200      	movs	r2, #0
 800c7c2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c7c6:	2301      	movs	r3, #1
 800c7c8:	e052      	b.n	800c870 <HAL_DMA_Abort+0xd8>
 800c7ca:	687b      	ldr	r3, [r7, #4]
 800c7cc:	681b      	ldr	r3, [r3, #0]
 800c7ce:	681a      	ldr	r2, [r3, #0]
 800c7d0:	687b      	ldr	r3, [r7, #4]
 800c7d2:	681b      	ldr	r3, [r3, #0]
 800c7d4:	f022 0216 	bic.w	r2, r2, #22
 800c7d8:	601a      	str	r2, [r3, #0]
 800c7da:	687b      	ldr	r3, [r7, #4]
 800c7dc:	681b      	ldr	r3, [r3, #0]
 800c7de:	695a      	ldr	r2, [r3, #20]
 800c7e0:	687b      	ldr	r3, [r7, #4]
 800c7e2:	681b      	ldr	r3, [r3, #0]
 800c7e4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800c7e8:	615a      	str	r2, [r3, #20]
 800c7ea:	687b      	ldr	r3, [r7, #4]
 800c7ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c7ee:	2b00      	cmp	r3, #0
 800c7f0:	d103      	bne.n	800c7fa <HAL_DMA_Abort+0x62>
 800c7f2:	687b      	ldr	r3, [r7, #4]
 800c7f4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c7f6:	2b00      	cmp	r3, #0
 800c7f8:	d007      	beq.n	800c80a <HAL_DMA_Abort+0x72>
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	681b      	ldr	r3, [r3, #0]
 800c7fe:	681a      	ldr	r2, [r3, #0]
 800c800:	687b      	ldr	r3, [r7, #4]
 800c802:	681b      	ldr	r3, [r3, #0]
 800c804:	f022 0208 	bic.w	r2, r2, #8
 800c808:	601a      	str	r2, [r3, #0]
 800c80a:	687b      	ldr	r3, [r7, #4]
 800c80c:	681b      	ldr	r3, [r3, #0]
 800c80e:	681a      	ldr	r2, [r3, #0]
 800c810:	687b      	ldr	r3, [r7, #4]
 800c812:	681b      	ldr	r3, [r3, #0]
 800c814:	f022 0201 	bic.w	r2, r2, #1
 800c818:	601a      	str	r2, [r3, #0]
 800c81a:	e013      	b.n	800c844 <HAL_DMA_Abort+0xac>
 800c81c:	f7fe fc90 	bl	800b140 <HAL_GetTick>
 800c820:	4602      	mov	r2, r0
 800c822:	68bb      	ldr	r3, [r7, #8]
 800c824:	1ad3      	subs	r3, r2, r3
 800c826:	2b05      	cmp	r3, #5
 800c828:	d90c      	bls.n	800c844 <HAL_DMA_Abort+0xac>
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	2220      	movs	r2, #32
 800c82e:	655a      	str	r2, [r3, #84]	@ 0x54
 800c830:	687b      	ldr	r3, [r7, #4]
 800c832:	2203      	movs	r2, #3
 800c834:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c838:	687b      	ldr	r3, [r7, #4]
 800c83a:	2200      	movs	r2, #0
 800c83c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c840:	2303      	movs	r3, #3
 800c842:	e015      	b.n	800c870 <HAL_DMA_Abort+0xd8>
 800c844:	687b      	ldr	r3, [r7, #4]
 800c846:	681b      	ldr	r3, [r3, #0]
 800c848:	681b      	ldr	r3, [r3, #0]
 800c84a:	f003 0301 	and.w	r3, r3, #1
 800c84e:	2b00      	cmp	r3, #0
 800c850:	d1e4      	bne.n	800c81c <HAL_DMA_Abort+0x84>
 800c852:	687b      	ldr	r3, [r7, #4]
 800c854:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c856:	223f      	movs	r2, #63	@ 0x3f
 800c858:	409a      	lsls	r2, r3
 800c85a:	68fb      	ldr	r3, [r7, #12]
 800c85c:	609a      	str	r2, [r3, #8]
 800c85e:	687b      	ldr	r3, [r7, #4]
 800c860:	2201      	movs	r2, #1
 800c862:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c866:	687b      	ldr	r3, [r7, #4]
 800c868:	2200      	movs	r2, #0
 800c86a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c86e:	2300      	movs	r3, #0
 800c870:	4618      	mov	r0, r3
 800c872:	3710      	adds	r7, #16
 800c874:	46bd      	mov	sp, r7
 800c876:	bd80      	pop	{r7, pc}

0800c878 <HAL_DMA_Abort_IT>:
 800c878:	b480      	push	{r7}
 800c87a:	b083      	sub	sp, #12
 800c87c:	af00      	add	r7, sp, #0
 800c87e:	6078      	str	r0, [r7, #4]
 800c880:	687b      	ldr	r3, [r7, #4]
 800c882:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c886:	b2db      	uxtb	r3, r3
 800c888:	2b02      	cmp	r3, #2
 800c88a:	d004      	beq.n	800c896 <HAL_DMA_Abort_IT+0x1e>
 800c88c:	687b      	ldr	r3, [r7, #4]
 800c88e:	2280      	movs	r2, #128	@ 0x80
 800c890:	655a      	str	r2, [r3, #84]	@ 0x54
 800c892:	2301      	movs	r3, #1
 800c894:	e00c      	b.n	800c8b0 <HAL_DMA_Abort_IT+0x38>
 800c896:	687b      	ldr	r3, [r7, #4]
 800c898:	2205      	movs	r2, #5
 800c89a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	681b      	ldr	r3, [r3, #0]
 800c8a2:	681a      	ldr	r2, [r3, #0]
 800c8a4:	687b      	ldr	r3, [r7, #4]
 800c8a6:	681b      	ldr	r3, [r3, #0]
 800c8a8:	f022 0201 	bic.w	r2, r2, #1
 800c8ac:	601a      	str	r2, [r3, #0]
 800c8ae:	2300      	movs	r3, #0
 800c8b0:	4618      	mov	r0, r3
 800c8b2:	370c      	adds	r7, #12
 800c8b4:	46bd      	mov	sp, r7
 800c8b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8ba:	4770      	bx	lr

0800c8bc <HAL_DMA_IRQHandler>:
 800c8bc:	b580      	push	{r7, lr}
 800c8be:	b086      	sub	sp, #24
 800c8c0:	af00      	add	r7, sp, #0
 800c8c2:	6078      	str	r0, [r7, #4]
 800c8c4:	2300      	movs	r3, #0
 800c8c6:	60bb      	str	r3, [r7, #8]
 800c8c8:	4b8e      	ldr	r3, [pc, #568]	@ (800cb04 <HAL_DMA_IRQHandler+0x248>)
 800c8ca:	681b      	ldr	r3, [r3, #0]
 800c8cc:	4a8e      	ldr	r2, [pc, #568]	@ (800cb08 <HAL_DMA_IRQHandler+0x24c>)
 800c8ce:	fba2 2303 	umull	r2, r3, r2, r3
 800c8d2:	0a9b      	lsrs	r3, r3, #10
 800c8d4:	617b      	str	r3, [r7, #20]
 800c8d6:	687b      	ldr	r3, [r7, #4]
 800c8d8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c8da:	613b      	str	r3, [r7, #16]
 800c8dc:	693b      	ldr	r3, [r7, #16]
 800c8de:	681b      	ldr	r3, [r3, #0]
 800c8e0:	60fb      	str	r3, [r7, #12]
 800c8e2:	687b      	ldr	r3, [r7, #4]
 800c8e4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c8e6:	2208      	movs	r2, #8
 800c8e8:	409a      	lsls	r2, r3
 800c8ea:	68fb      	ldr	r3, [r7, #12]
 800c8ec:	4013      	ands	r3, r2
 800c8ee:	2b00      	cmp	r3, #0
 800c8f0:	d01a      	beq.n	800c928 <HAL_DMA_IRQHandler+0x6c>
 800c8f2:	687b      	ldr	r3, [r7, #4]
 800c8f4:	681b      	ldr	r3, [r3, #0]
 800c8f6:	681b      	ldr	r3, [r3, #0]
 800c8f8:	f003 0304 	and.w	r3, r3, #4
 800c8fc:	2b00      	cmp	r3, #0
 800c8fe:	d013      	beq.n	800c928 <HAL_DMA_IRQHandler+0x6c>
 800c900:	687b      	ldr	r3, [r7, #4]
 800c902:	681b      	ldr	r3, [r3, #0]
 800c904:	681a      	ldr	r2, [r3, #0]
 800c906:	687b      	ldr	r3, [r7, #4]
 800c908:	681b      	ldr	r3, [r3, #0]
 800c90a:	f022 0204 	bic.w	r2, r2, #4
 800c90e:	601a      	str	r2, [r3, #0]
 800c910:	687b      	ldr	r3, [r7, #4]
 800c912:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c914:	2208      	movs	r2, #8
 800c916:	409a      	lsls	r2, r3
 800c918:	693b      	ldr	r3, [r7, #16]
 800c91a:	609a      	str	r2, [r3, #8]
 800c91c:	687b      	ldr	r3, [r7, #4]
 800c91e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c920:	f043 0201 	orr.w	r2, r3, #1
 800c924:	687b      	ldr	r3, [r7, #4]
 800c926:	655a      	str	r2, [r3, #84]	@ 0x54
 800c928:	687b      	ldr	r3, [r7, #4]
 800c92a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c92c:	2201      	movs	r2, #1
 800c92e:	409a      	lsls	r2, r3
 800c930:	68fb      	ldr	r3, [r7, #12]
 800c932:	4013      	ands	r3, r2
 800c934:	2b00      	cmp	r3, #0
 800c936:	d012      	beq.n	800c95e <HAL_DMA_IRQHandler+0xa2>
 800c938:	687b      	ldr	r3, [r7, #4]
 800c93a:	681b      	ldr	r3, [r3, #0]
 800c93c:	695b      	ldr	r3, [r3, #20]
 800c93e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800c942:	2b00      	cmp	r3, #0
 800c944:	d00b      	beq.n	800c95e <HAL_DMA_IRQHandler+0xa2>
 800c946:	687b      	ldr	r3, [r7, #4]
 800c948:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c94a:	2201      	movs	r2, #1
 800c94c:	409a      	lsls	r2, r3
 800c94e:	693b      	ldr	r3, [r7, #16]
 800c950:	609a      	str	r2, [r3, #8]
 800c952:	687b      	ldr	r3, [r7, #4]
 800c954:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c956:	f043 0202 	orr.w	r2, r3, #2
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	655a      	str	r2, [r3, #84]	@ 0x54
 800c95e:	687b      	ldr	r3, [r7, #4]
 800c960:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c962:	2204      	movs	r2, #4
 800c964:	409a      	lsls	r2, r3
 800c966:	68fb      	ldr	r3, [r7, #12]
 800c968:	4013      	ands	r3, r2
 800c96a:	2b00      	cmp	r3, #0
 800c96c:	d012      	beq.n	800c994 <HAL_DMA_IRQHandler+0xd8>
 800c96e:	687b      	ldr	r3, [r7, #4]
 800c970:	681b      	ldr	r3, [r3, #0]
 800c972:	681b      	ldr	r3, [r3, #0]
 800c974:	f003 0302 	and.w	r3, r3, #2
 800c978:	2b00      	cmp	r3, #0
 800c97a:	d00b      	beq.n	800c994 <HAL_DMA_IRQHandler+0xd8>
 800c97c:	687b      	ldr	r3, [r7, #4]
 800c97e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c980:	2204      	movs	r2, #4
 800c982:	409a      	lsls	r2, r3
 800c984:	693b      	ldr	r3, [r7, #16]
 800c986:	609a      	str	r2, [r3, #8]
 800c988:	687b      	ldr	r3, [r7, #4]
 800c98a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c98c:	f043 0204 	orr.w	r2, r3, #4
 800c990:	687b      	ldr	r3, [r7, #4]
 800c992:	655a      	str	r2, [r3, #84]	@ 0x54
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c998:	2210      	movs	r2, #16
 800c99a:	409a      	lsls	r2, r3
 800c99c:	68fb      	ldr	r3, [r7, #12]
 800c99e:	4013      	ands	r3, r2
 800c9a0:	2b00      	cmp	r3, #0
 800c9a2:	d043      	beq.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800c9a4:	687b      	ldr	r3, [r7, #4]
 800c9a6:	681b      	ldr	r3, [r3, #0]
 800c9a8:	681b      	ldr	r3, [r3, #0]
 800c9aa:	f003 0308 	and.w	r3, r3, #8
 800c9ae:	2b00      	cmp	r3, #0
 800c9b0:	d03c      	beq.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800c9b2:	687b      	ldr	r3, [r7, #4]
 800c9b4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c9b6:	2210      	movs	r2, #16
 800c9b8:	409a      	lsls	r2, r3
 800c9ba:	693b      	ldr	r3, [r7, #16]
 800c9bc:	609a      	str	r2, [r3, #8]
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	681b      	ldr	r3, [r3, #0]
 800c9c2:	681b      	ldr	r3, [r3, #0]
 800c9c4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800c9c8:	2b00      	cmp	r3, #0
 800c9ca:	d018      	beq.n	800c9fe <HAL_DMA_IRQHandler+0x142>
 800c9cc:	687b      	ldr	r3, [r7, #4]
 800c9ce:	681b      	ldr	r3, [r3, #0]
 800c9d0:	681b      	ldr	r3, [r3, #0]
 800c9d2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800c9d6:	2b00      	cmp	r3, #0
 800c9d8:	d108      	bne.n	800c9ec <HAL_DMA_IRQHandler+0x130>
 800c9da:	687b      	ldr	r3, [r7, #4]
 800c9dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c9de:	2b00      	cmp	r3, #0
 800c9e0:	d024      	beq.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c9e6:	6878      	ldr	r0, [r7, #4]
 800c9e8:	4798      	blx	r3
 800c9ea:	e01f      	b.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800c9ec:	687b      	ldr	r3, [r7, #4]
 800c9ee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c9f0:	2b00      	cmp	r3, #0
 800c9f2:	d01b      	beq.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800c9f4:	687b      	ldr	r3, [r7, #4]
 800c9f6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c9f8:	6878      	ldr	r0, [r7, #4]
 800c9fa:	4798      	blx	r3
 800c9fc:	e016      	b.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800c9fe:	687b      	ldr	r3, [r7, #4]
 800ca00:	681b      	ldr	r3, [r3, #0]
 800ca02:	681b      	ldr	r3, [r3, #0]
 800ca04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ca08:	2b00      	cmp	r3, #0
 800ca0a:	d107      	bne.n	800ca1c <HAL_DMA_IRQHandler+0x160>
 800ca0c:	687b      	ldr	r3, [r7, #4]
 800ca0e:	681b      	ldr	r3, [r3, #0]
 800ca10:	681a      	ldr	r2, [r3, #0]
 800ca12:	687b      	ldr	r3, [r7, #4]
 800ca14:	681b      	ldr	r3, [r3, #0]
 800ca16:	f022 0208 	bic.w	r2, r2, #8
 800ca1a:	601a      	str	r2, [r3, #0]
 800ca1c:	687b      	ldr	r3, [r7, #4]
 800ca1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ca20:	2b00      	cmp	r3, #0
 800ca22:	d003      	beq.n	800ca2c <HAL_DMA_IRQHandler+0x170>
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ca28:	6878      	ldr	r0, [r7, #4]
 800ca2a:	4798      	blx	r3
 800ca2c:	687b      	ldr	r3, [r7, #4]
 800ca2e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ca30:	2220      	movs	r2, #32
 800ca32:	409a      	lsls	r2, r3
 800ca34:	68fb      	ldr	r3, [r7, #12]
 800ca36:	4013      	ands	r3, r2
 800ca38:	2b00      	cmp	r3, #0
 800ca3a:	f000 808f 	beq.w	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800ca3e:	687b      	ldr	r3, [r7, #4]
 800ca40:	681b      	ldr	r3, [r3, #0]
 800ca42:	681b      	ldr	r3, [r3, #0]
 800ca44:	f003 0310 	and.w	r3, r3, #16
 800ca48:	2b00      	cmp	r3, #0
 800ca4a:	f000 8087 	beq.w	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800ca4e:	687b      	ldr	r3, [r7, #4]
 800ca50:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ca52:	2220      	movs	r2, #32
 800ca54:	409a      	lsls	r2, r3
 800ca56:	693b      	ldr	r3, [r7, #16]
 800ca58:	609a      	str	r2, [r3, #8]
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800ca60:	b2db      	uxtb	r3, r3
 800ca62:	2b05      	cmp	r3, #5
 800ca64:	d136      	bne.n	800cad4 <HAL_DMA_IRQHandler+0x218>
 800ca66:	687b      	ldr	r3, [r7, #4]
 800ca68:	681b      	ldr	r3, [r3, #0]
 800ca6a:	681a      	ldr	r2, [r3, #0]
 800ca6c:	687b      	ldr	r3, [r7, #4]
 800ca6e:	681b      	ldr	r3, [r3, #0]
 800ca70:	f022 0216 	bic.w	r2, r2, #22
 800ca74:	601a      	str	r2, [r3, #0]
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	681b      	ldr	r3, [r3, #0]
 800ca7a:	695a      	ldr	r2, [r3, #20]
 800ca7c:	687b      	ldr	r3, [r7, #4]
 800ca7e:	681b      	ldr	r3, [r3, #0]
 800ca80:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800ca84:	615a      	str	r2, [r3, #20]
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ca8a:	2b00      	cmp	r3, #0
 800ca8c:	d103      	bne.n	800ca96 <HAL_DMA_IRQHandler+0x1da>
 800ca8e:	687b      	ldr	r3, [r7, #4]
 800ca90:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800ca92:	2b00      	cmp	r3, #0
 800ca94:	d007      	beq.n	800caa6 <HAL_DMA_IRQHandler+0x1ea>
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	681a      	ldr	r2, [r3, #0]
 800ca9c:	687b      	ldr	r3, [r7, #4]
 800ca9e:	681b      	ldr	r3, [r3, #0]
 800caa0:	f022 0208 	bic.w	r2, r2, #8
 800caa4:	601a      	str	r2, [r3, #0]
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800caaa:	223f      	movs	r2, #63	@ 0x3f
 800caac:	409a      	lsls	r2, r3
 800caae:	693b      	ldr	r3, [r7, #16]
 800cab0:	609a      	str	r2, [r3, #8]
 800cab2:	687b      	ldr	r3, [r7, #4]
 800cab4:	2201      	movs	r2, #1
 800cab6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	2200      	movs	r2, #0
 800cabe:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800cac2:	687b      	ldr	r3, [r7, #4]
 800cac4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cac6:	2b00      	cmp	r3, #0
 800cac8:	d07e      	beq.n	800cbc8 <HAL_DMA_IRQHandler+0x30c>
 800caca:	687b      	ldr	r3, [r7, #4]
 800cacc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800cace:	6878      	ldr	r0, [r7, #4]
 800cad0:	4798      	blx	r3
 800cad2:	e079      	b.n	800cbc8 <HAL_DMA_IRQHandler+0x30c>
 800cad4:	687b      	ldr	r3, [r7, #4]
 800cad6:	681b      	ldr	r3, [r3, #0]
 800cad8:	681b      	ldr	r3, [r3, #0]
 800cada:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800cade:	2b00      	cmp	r3, #0
 800cae0:	d01d      	beq.n	800cb1e <HAL_DMA_IRQHandler+0x262>
 800cae2:	687b      	ldr	r3, [r7, #4]
 800cae4:	681b      	ldr	r3, [r3, #0]
 800cae6:	681b      	ldr	r3, [r3, #0]
 800cae8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800caec:	2b00      	cmp	r3, #0
 800caee:	d10d      	bne.n	800cb0c <HAL_DMA_IRQHandler+0x250>
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800caf4:	2b00      	cmp	r3, #0
 800caf6:	d031      	beq.n	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cafc:	6878      	ldr	r0, [r7, #4]
 800cafe:	4798      	blx	r3
 800cb00:	e02c      	b.n	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800cb02:	bf00      	nop
 800cb04:	20000004 	.word	0x20000004
 800cb08:	1b4e81b5 	.word	0x1b4e81b5
 800cb0c:	687b      	ldr	r3, [r7, #4]
 800cb0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cb10:	2b00      	cmp	r3, #0
 800cb12:	d023      	beq.n	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800cb14:	687b      	ldr	r3, [r7, #4]
 800cb16:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cb18:	6878      	ldr	r0, [r7, #4]
 800cb1a:	4798      	blx	r3
 800cb1c:	e01e      	b.n	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	681b      	ldr	r3, [r3, #0]
 800cb22:	681b      	ldr	r3, [r3, #0]
 800cb24:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800cb28:	2b00      	cmp	r3, #0
 800cb2a:	d10f      	bne.n	800cb4c <HAL_DMA_IRQHandler+0x290>
 800cb2c:	687b      	ldr	r3, [r7, #4]
 800cb2e:	681b      	ldr	r3, [r3, #0]
 800cb30:	681a      	ldr	r2, [r3, #0]
 800cb32:	687b      	ldr	r3, [r7, #4]
 800cb34:	681b      	ldr	r3, [r3, #0]
 800cb36:	f022 0210 	bic.w	r2, r2, #16
 800cb3a:	601a      	str	r2, [r3, #0]
 800cb3c:	687b      	ldr	r3, [r7, #4]
 800cb3e:	2201      	movs	r2, #1
 800cb40:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800cb44:	687b      	ldr	r3, [r7, #4]
 800cb46:	2200      	movs	r2, #0
 800cb48:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800cb4c:	687b      	ldr	r3, [r7, #4]
 800cb4e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cb50:	2b00      	cmp	r3, #0
 800cb52:	d003      	beq.n	800cb5c <HAL_DMA_IRQHandler+0x2a0>
 800cb54:	687b      	ldr	r3, [r7, #4]
 800cb56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800cb58:	6878      	ldr	r0, [r7, #4]
 800cb5a:	4798      	blx	r3
 800cb5c:	687b      	ldr	r3, [r7, #4]
 800cb5e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cb60:	2b00      	cmp	r3, #0
 800cb62:	d032      	beq.n	800cbca <HAL_DMA_IRQHandler+0x30e>
 800cb64:	687b      	ldr	r3, [r7, #4]
 800cb66:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cb68:	f003 0301 	and.w	r3, r3, #1
 800cb6c:	2b00      	cmp	r3, #0
 800cb6e:	d022      	beq.n	800cbb6 <HAL_DMA_IRQHandler+0x2fa>
 800cb70:	687b      	ldr	r3, [r7, #4]
 800cb72:	2205      	movs	r2, #5
 800cb74:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800cb78:	687b      	ldr	r3, [r7, #4]
 800cb7a:	681b      	ldr	r3, [r3, #0]
 800cb7c:	681a      	ldr	r2, [r3, #0]
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	f022 0201 	bic.w	r2, r2, #1
 800cb86:	601a      	str	r2, [r3, #0]
 800cb88:	68bb      	ldr	r3, [r7, #8]
 800cb8a:	3301      	adds	r3, #1
 800cb8c:	60bb      	str	r3, [r7, #8]
 800cb8e:	697a      	ldr	r2, [r7, #20]
 800cb90:	429a      	cmp	r2, r3
 800cb92:	d307      	bcc.n	800cba4 <HAL_DMA_IRQHandler+0x2e8>
 800cb94:	687b      	ldr	r3, [r7, #4]
 800cb96:	681b      	ldr	r3, [r3, #0]
 800cb98:	681b      	ldr	r3, [r3, #0]
 800cb9a:	f003 0301 	and.w	r3, r3, #1
 800cb9e:	2b00      	cmp	r3, #0
 800cba0:	d1f2      	bne.n	800cb88 <HAL_DMA_IRQHandler+0x2cc>
 800cba2:	e000      	b.n	800cba6 <HAL_DMA_IRQHandler+0x2ea>
 800cba4:	bf00      	nop
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	2201      	movs	r2, #1
 800cbaa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800cbae:	687b      	ldr	r3, [r7, #4]
 800cbb0:	2200      	movs	r2, #0
 800cbb2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800cbb6:	687b      	ldr	r3, [r7, #4]
 800cbb8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cbba:	2b00      	cmp	r3, #0
 800cbbc:	d005      	beq.n	800cbca <HAL_DMA_IRQHandler+0x30e>
 800cbbe:	687b      	ldr	r3, [r7, #4]
 800cbc0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cbc2:	6878      	ldr	r0, [r7, #4]
 800cbc4:	4798      	blx	r3
 800cbc6:	e000      	b.n	800cbca <HAL_DMA_IRQHandler+0x30e>
 800cbc8:	bf00      	nop
 800cbca:	3718      	adds	r7, #24
 800cbcc:	46bd      	mov	sp, r7
 800cbce:	bd80      	pop	{r7, pc}

0800cbd0 <HAL_DMA_GetError>:
 800cbd0:	b480      	push	{r7}
 800cbd2:	b083      	sub	sp, #12
 800cbd4:	af00      	add	r7, sp, #0
 800cbd6:	6078      	str	r0, [r7, #4]
 800cbd8:	687b      	ldr	r3, [r7, #4]
 800cbda:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cbdc:	4618      	mov	r0, r3
 800cbde:	370c      	adds	r7, #12
 800cbe0:	46bd      	mov	sp, r7
 800cbe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbe6:	4770      	bx	lr

0800cbe8 <DMA_SetConfig>:
 800cbe8:	b480      	push	{r7}
 800cbea:	b085      	sub	sp, #20
 800cbec:	af00      	add	r7, sp, #0
 800cbee:	60f8      	str	r0, [r7, #12]
 800cbf0:	60b9      	str	r1, [r7, #8]
 800cbf2:	607a      	str	r2, [r7, #4]
 800cbf4:	603b      	str	r3, [r7, #0]
 800cbf6:	68fb      	ldr	r3, [r7, #12]
 800cbf8:	681b      	ldr	r3, [r3, #0]
 800cbfa:	681a      	ldr	r2, [r3, #0]
 800cbfc:	68fb      	ldr	r3, [r7, #12]
 800cbfe:	681b      	ldr	r3, [r3, #0]
 800cc00:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800cc04:	601a      	str	r2, [r3, #0]
 800cc06:	68fb      	ldr	r3, [r7, #12]
 800cc08:	681b      	ldr	r3, [r3, #0]
 800cc0a:	683a      	ldr	r2, [r7, #0]
 800cc0c:	605a      	str	r2, [r3, #4]
 800cc0e:	68fb      	ldr	r3, [r7, #12]
 800cc10:	689b      	ldr	r3, [r3, #8]
 800cc12:	2b40      	cmp	r3, #64	@ 0x40
 800cc14:	d108      	bne.n	800cc28 <DMA_SetConfig+0x40>
 800cc16:	68fb      	ldr	r3, [r7, #12]
 800cc18:	681b      	ldr	r3, [r3, #0]
 800cc1a:	687a      	ldr	r2, [r7, #4]
 800cc1c:	609a      	str	r2, [r3, #8]
 800cc1e:	68fb      	ldr	r3, [r7, #12]
 800cc20:	681b      	ldr	r3, [r3, #0]
 800cc22:	68ba      	ldr	r2, [r7, #8]
 800cc24:	60da      	str	r2, [r3, #12]
 800cc26:	e007      	b.n	800cc38 <DMA_SetConfig+0x50>
 800cc28:	68fb      	ldr	r3, [r7, #12]
 800cc2a:	681b      	ldr	r3, [r3, #0]
 800cc2c:	68ba      	ldr	r2, [r7, #8]
 800cc2e:	609a      	str	r2, [r3, #8]
 800cc30:	68fb      	ldr	r3, [r7, #12]
 800cc32:	681b      	ldr	r3, [r3, #0]
 800cc34:	687a      	ldr	r2, [r7, #4]
 800cc36:	60da      	str	r2, [r3, #12]
 800cc38:	bf00      	nop
 800cc3a:	3714      	adds	r7, #20
 800cc3c:	46bd      	mov	sp, r7
 800cc3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc42:	4770      	bx	lr

0800cc44 <DMA_CalcBaseAndBitshift>:
 800cc44:	b480      	push	{r7}
 800cc46:	b085      	sub	sp, #20
 800cc48:	af00      	add	r7, sp, #0
 800cc4a:	6078      	str	r0, [r7, #4]
 800cc4c:	687b      	ldr	r3, [r7, #4]
 800cc4e:	681b      	ldr	r3, [r3, #0]
 800cc50:	b2db      	uxtb	r3, r3
 800cc52:	3b10      	subs	r3, #16
 800cc54:	4a14      	ldr	r2, [pc, #80]	@ (800cca8 <DMA_CalcBaseAndBitshift+0x64>)
 800cc56:	fba2 2303 	umull	r2, r3, r2, r3
 800cc5a:	091b      	lsrs	r3, r3, #4
 800cc5c:	60fb      	str	r3, [r7, #12]
 800cc5e:	4a13      	ldr	r2, [pc, #76]	@ (800ccac <DMA_CalcBaseAndBitshift+0x68>)
 800cc60:	68fb      	ldr	r3, [r7, #12]
 800cc62:	4413      	add	r3, r2
 800cc64:	781b      	ldrb	r3, [r3, #0]
 800cc66:	461a      	mov	r2, r3
 800cc68:	687b      	ldr	r3, [r7, #4]
 800cc6a:	65da      	str	r2, [r3, #92]	@ 0x5c
 800cc6c:	68fb      	ldr	r3, [r7, #12]
 800cc6e:	2b03      	cmp	r3, #3
 800cc70:	d909      	bls.n	800cc86 <DMA_CalcBaseAndBitshift+0x42>
 800cc72:	687b      	ldr	r3, [r7, #4]
 800cc74:	681b      	ldr	r3, [r3, #0]
 800cc76:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800cc7a:	f023 0303 	bic.w	r3, r3, #3
 800cc7e:	1d1a      	adds	r2, r3, #4
 800cc80:	687b      	ldr	r3, [r7, #4]
 800cc82:	659a      	str	r2, [r3, #88]	@ 0x58
 800cc84:	e007      	b.n	800cc96 <DMA_CalcBaseAndBitshift+0x52>
 800cc86:	687b      	ldr	r3, [r7, #4]
 800cc88:	681b      	ldr	r3, [r3, #0]
 800cc8a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800cc8e:	f023 0303 	bic.w	r3, r3, #3
 800cc92:	687a      	ldr	r2, [r7, #4]
 800cc94:	6593      	str	r3, [r2, #88]	@ 0x58
 800cc96:	687b      	ldr	r3, [r7, #4]
 800cc98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cc9a:	4618      	mov	r0, r3
 800cc9c:	3714      	adds	r7, #20
 800cc9e:	46bd      	mov	sp, r7
 800cca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cca4:	4770      	bx	lr
 800cca6:	bf00      	nop
 800cca8:	aaaaaaab 	.word	0xaaaaaaab
 800ccac:	0802171c 	.word	0x0802171c

0800ccb0 <DMA_CheckFifoParam>:
 800ccb0:	b480      	push	{r7}
 800ccb2:	b085      	sub	sp, #20
 800ccb4:	af00      	add	r7, sp, #0
 800ccb6:	6078      	str	r0, [r7, #4]
 800ccb8:	2300      	movs	r3, #0
 800ccba:	73fb      	strb	r3, [r7, #15]
 800ccbc:	687b      	ldr	r3, [r7, #4]
 800ccbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ccc0:	60bb      	str	r3, [r7, #8]
 800ccc2:	687b      	ldr	r3, [r7, #4]
 800ccc4:	699b      	ldr	r3, [r3, #24]
 800ccc6:	2b00      	cmp	r3, #0
 800ccc8:	d11f      	bne.n	800cd0a <DMA_CheckFifoParam+0x5a>
 800ccca:	68bb      	ldr	r3, [r7, #8]
 800cccc:	2b03      	cmp	r3, #3
 800ccce:	d856      	bhi.n	800cd7e <DMA_CheckFifoParam+0xce>
 800ccd0:	a201      	add	r2, pc, #4	@ (adr r2, 800ccd8 <DMA_CheckFifoParam+0x28>)
 800ccd2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ccd6:	bf00      	nop
 800ccd8:	0800cce9 	.word	0x0800cce9
 800ccdc:	0800ccfb 	.word	0x0800ccfb
 800cce0:	0800cce9 	.word	0x0800cce9
 800cce4:	0800cd7f 	.word	0x0800cd7f
 800cce8:	687b      	ldr	r3, [r7, #4]
 800ccea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ccec:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800ccf0:	2b00      	cmp	r3, #0
 800ccf2:	d046      	beq.n	800cd82 <DMA_CheckFifoParam+0xd2>
 800ccf4:	2301      	movs	r3, #1
 800ccf6:	73fb      	strb	r3, [r7, #15]
 800ccf8:	e043      	b.n	800cd82 <DMA_CheckFifoParam+0xd2>
 800ccfa:	687b      	ldr	r3, [r7, #4]
 800ccfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ccfe:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800cd02:	d140      	bne.n	800cd86 <DMA_CheckFifoParam+0xd6>
 800cd04:	2301      	movs	r3, #1
 800cd06:	73fb      	strb	r3, [r7, #15]
 800cd08:	e03d      	b.n	800cd86 <DMA_CheckFifoParam+0xd6>
 800cd0a:	687b      	ldr	r3, [r7, #4]
 800cd0c:	699b      	ldr	r3, [r3, #24]
 800cd0e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800cd12:	d121      	bne.n	800cd58 <DMA_CheckFifoParam+0xa8>
 800cd14:	68bb      	ldr	r3, [r7, #8]
 800cd16:	2b03      	cmp	r3, #3
 800cd18:	d837      	bhi.n	800cd8a <DMA_CheckFifoParam+0xda>
 800cd1a:	a201      	add	r2, pc, #4	@ (adr r2, 800cd20 <DMA_CheckFifoParam+0x70>)
 800cd1c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cd20:	0800cd31 	.word	0x0800cd31
 800cd24:	0800cd37 	.word	0x0800cd37
 800cd28:	0800cd31 	.word	0x0800cd31
 800cd2c:	0800cd49 	.word	0x0800cd49
 800cd30:	2301      	movs	r3, #1
 800cd32:	73fb      	strb	r3, [r7, #15]
 800cd34:	e030      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd36:	687b      	ldr	r3, [r7, #4]
 800cd38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd3a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cd3e:	2b00      	cmp	r3, #0
 800cd40:	d025      	beq.n	800cd8e <DMA_CheckFifoParam+0xde>
 800cd42:	2301      	movs	r3, #1
 800cd44:	73fb      	strb	r3, [r7, #15]
 800cd46:	e022      	b.n	800cd8e <DMA_CheckFifoParam+0xde>
 800cd48:	687b      	ldr	r3, [r7, #4]
 800cd4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd4c:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800cd50:	d11f      	bne.n	800cd92 <DMA_CheckFifoParam+0xe2>
 800cd52:	2301      	movs	r3, #1
 800cd54:	73fb      	strb	r3, [r7, #15]
 800cd56:	e01c      	b.n	800cd92 <DMA_CheckFifoParam+0xe2>
 800cd58:	68bb      	ldr	r3, [r7, #8]
 800cd5a:	2b02      	cmp	r3, #2
 800cd5c:	d903      	bls.n	800cd66 <DMA_CheckFifoParam+0xb6>
 800cd5e:	68bb      	ldr	r3, [r7, #8]
 800cd60:	2b03      	cmp	r3, #3
 800cd62:	d003      	beq.n	800cd6c <DMA_CheckFifoParam+0xbc>
 800cd64:	e018      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd66:	2301      	movs	r3, #1
 800cd68:	73fb      	strb	r3, [r7, #15]
 800cd6a:	e015      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd6c:	687b      	ldr	r3, [r7, #4]
 800cd6e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cd70:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cd74:	2b00      	cmp	r3, #0
 800cd76:	d00e      	beq.n	800cd96 <DMA_CheckFifoParam+0xe6>
 800cd78:	2301      	movs	r3, #1
 800cd7a:	73fb      	strb	r3, [r7, #15]
 800cd7c:	e00b      	b.n	800cd96 <DMA_CheckFifoParam+0xe6>
 800cd7e:	bf00      	nop
 800cd80:	e00a      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd82:	bf00      	nop
 800cd84:	e008      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd86:	bf00      	nop
 800cd88:	e006      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd8a:	bf00      	nop
 800cd8c:	e004      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd8e:	bf00      	nop
 800cd90:	e002      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd92:	bf00      	nop
 800cd94:	e000      	b.n	800cd98 <DMA_CheckFifoParam+0xe8>
 800cd96:	bf00      	nop
 800cd98:	7bfb      	ldrb	r3, [r7, #15]
 800cd9a:	4618      	mov	r0, r3
 800cd9c:	3714      	adds	r7, #20
 800cd9e:	46bd      	mov	sp, r7
 800cda0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cda4:	4770      	bx	lr
 800cda6:	bf00      	nop

0800cda8 <HAL_GPIO_Init>:
 800cda8:	b480      	push	{r7}
 800cdaa:	b089      	sub	sp, #36	@ 0x24
 800cdac:	af00      	add	r7, sp, #0
 800cdae:	6078      	str	r0, [r7, #4]
 800cdb0:	6039      	str	r1, [r7, #0]
 800cdb2:	2300      	movs	r3, #0
 800cdb4:	617b      	str	r3, [r7, #20]
 800cdb6:	2300      	movs	r3, #0
 800cdb8:	613b      	str	r3, [r7, #16]
 800cdba:	2300      	movs	r3, #0
 800cdbc:	61bb      	str	r3, [r7, #24]
 800cdbe:	2300      	movs	r3, #0
 800cdc0:	61fb      	str	r3, [r7, #28]
 800cdc2:	e16b      	b.n	800d09c <HAL_GPIO_Init+0x2f4>
 800cdc4:	2201      	movs	r2, #1
 800cdc6:	69fb      	ldr	r3, [r7, #28]
 800cdc8:	fa02 f303 	lsl.w	r3, r2, r3
 800cdcc:	617b      	str	r3, [r7, #20]
 800cdce:	683b      	ldr	r3, [r7, #0]
 800cdd0:	681b      	ldr	r3, [r3, #0]
 800cdd2:	697a      	ldr	r2, [r7, #20]
 800cdd4:	4013      	ands	r3, r2
 800cdd6:	613b      	str	r3, [r7, #16]
 800cdd8:	693a      	ldr	r2, [r7, #16]
 800cdda:	697b      	ldr	r3, [r7, #20]
 800cddc:	429a      	cmp	r2, r3
 800cdde:	f040 815a 	bne.w	800d096 <HAL_GPIO_Init+0x2ee>
 800cde2:	683b      	ldr	r3, [r7, #0]
 800cde4:	685b      	ldr	r3, [r3, #4]
 800cde6:	f003 0303 	and.w	r3, r3, #3
 800cdea:	2b01      	cmp	r3, #1
 800cdec:	d005      	beq.n	800cdfa <HAL_GPIO_Init+0x52>
 800cdee:	683b      	ldr	r3, [r7, #0]
 800cdf0:	685b      	ldr	r3, [r3, #4]
 800cdf2:	f003 0303 	and.w	r3, r3, #3
 800cdf6:	2b02      	cmp	r3, #2
 800cdf8:	d130      	bne.n	800ce5c <HAL_GPIO_Init+0xb4>
 800cdfa:	687b      	ldr	r3, [r7, #4]
 800cdfc:	689b      	ldr	r3, [r3, #8]
 800cdfe:	61bb      	str	r3, [r7, #24]
 800ce00:	69fb      	ldr	r3, [r7, #28]
 800ce02:	005b      	lsls	r3, r3, #1
 800ce04:	2203      	movs	r2, #3
 800ce06:	fa02 f303 	lsl.w	r3, r2, r3
 800ce0a:	43db      	mvns	r3, r3
 800ce0c:	69ba      	ldr	r2, [r7, #24]
 800ce0e:	4013      	ands	r3, r2
 800ce10:	61bb      	str	r3, [r7, #24]
 800ce12:	683b      	ldr	r3, [r7, #0]
 800ce14:	68da      	ldr	r2, [r3, #12]
 800ce16:	69fb      	ldr	r3, [r7, #28]
 800ce18:	005b      	lsls	r3, r3, #1
 800ce1a:	fa02 f303 	lsl.w	r3, r2, r3
 800ce1e:	69ba      	ldr	r2, [r7, #24]
 800ce20:	4313      	orrs	r3, r2
 800ce22:	61bb      	str	r3, [r7, #24]
 800ce24:	687b      	ldr	r3, [r7, #4]
 800ce26:	69ba      	ldr	r2, [r7, #24]
 800ce28:	609a      	str	r2, [r3, #8]
 800ce2a:	687b      	ldr	r3, [r7, #4]
 800ce2c:	685b      	ldr	r3, [r3, #4]
 800ce2e:	61bb      	str	r3, [r7, #24]
 800ce30:	2201      	movs	r2, #1
 800ce32:	69fb      	ldr	r3, [r7, #28]
 800ce34:	fa02 f303 	lsl.w	r3, r2, r3
 800ce38:	43db      	mvns	r3, r3
 800ce3a:	69ba      	ldr	r2, [r7, #24]
 800ce3c:	4013      	ands	r3, r2
 800ce3e:	61bb      	str	r3, [r7, #24]
 800ce40:	683b      	ldr	r3, [r7, #0]
 800ce42:	685b      	ldr	r3, [r3, #4]
 800ce44:	091b      	lsrs	r3, r3, #4
 800ce46:	f003 0201 	and.w	r2, r3, #1
 800ce4a:	69fb      	ldr	r3, [r7, #28]
 800ce4c:	fa02 f303 	lsl.w	r3, r2, r3
 800ce50:	69ba      	ldr	r2, [r7, #24]
 800ce52:	4313      	orrs	r3, r2
 800ce54:	61bb      	str	r3, [r7, #24]
 800ce56:	687b      	ldr	r3, [r7, #4]
 800ce58:	69ba      	ldr	r2, [r7, #24]
 800ce5a:	605a      	str	r2, [r3, #4]
 800ce5c:	683b      	ldr	r3, [r7, #0]
 800ce5e:	685b      	ldr	r3, [r3, #4]
 800ce60:	f003 0303 	and.w	r3, r3, #3
 800ce64:	2b03      	cmp	r3, #3
 800ce66:	d017      	beq.n	800ce98 <HAL_GPIO_Init+0xf0>
 800ce68:	687b      	ldr	r3, [r7, #4]
 800ce6a:	68db      	ldr	r3, [r3, #12]
 800ce6c:	61bb      	str	r3, [r7, #24]
 800ce6e:	69fb      	ldr	r3, [r7, #28]
 800ce70:	005b      	lsls	r3, r3, #1
 800ce72:	2203      	movs	r2, #3
 800ce74:	fa02 f303 	lsl.w	r3, r2, r3
 800ce78:	43db      	mvns	r3, r3
 800ce7a:	69ba      	ldr	r2, [r7, #24]
 800ce7c:	4013      	ands	r3, r2
 800ce7e:	61bb      	str	r3, [r7, #24]
 800ce80:	683b      	ldr	r3, [r7, #0]
 800ce82:	689a      	ldr	r2, [r3, #8]
 800ce84:	69fb      	ldr	r3, [r7, #28]
 800ce86:	005b      	lsls	r3, r3, #1
 800ce88:	fa02 f303 	lsl.w	r3, r2, r3
 800ce8c:	69ba      	ldr	r2, [r7, #24]
 800ce8e:	4313      	orrs	r3, r2
 800ce90:	61bb      	str	r3, [r7, #24]
 800ce92:	687b      	ldr	r3, [r7, #4]
 800ce94:	69ba      	ldr	r2, [r7, #24]
 800ce96:	60da      	str	r2, [r3, #12]
 800ce98:	683b      	ldr	r3, [r7, #0]
 800ce9a:	685b      	ldr	r3, [r3, #4]
 800ce9c:	f003 0303 	and.w	r3, r3, #3
 800cea0:	2b02      	cmp	r3, #2
 800cea2:	d123      	bne.n	800ceec <HAL_GPIO_Init+0x144>
 800cea4:	69fb      	ldr	r3, [r7, #28]
 800cea6:	08da      	lsrs	r2, r3, #3
 800cea8:	687b      	ldr	r3, [r7, #4]
 800ceaa:	3208      	adds	r2, #8
 800ceac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800ceb0:	61bb      	str	r3, [r7, #24]
 800ceb2:	69fb      	ldr	r3, [r7, #28]
 800ceb4:	f003 0307 	and.w	r3, r3, #7
 800ceb8:	009b      	lsls	r3, r3, #2
 800ceba:	220f      	movs	r2, #15
 800cebc:	fa02 f303 	lsl.w	r3, r2, r3
 800cec0:	43db      	mvns	r3, r3
 800cec2:	69ba      	ldr	r2, [r7, #24]
 800cec4:	4013      	ands	r3, r2
 800cec6:	61bb      	str	r3, [r7, #24]
 800cec8:	683b      	ldr	r3, [r7, #0]
 800ceca:	691a      	ldr	r2, [r3, #16]
 800cecc:	69fb      	ldr	r3, [r7, #28]
 800cece:	f003 0307 	and.w	r3, r3, #7
 800ced2:	009b      	lsls	r3, r3, #2
 800ced4:	fa02 f303 	lsl.w	r3, r2, r3
 800ced8:	69ba      	ldr	r2, [r7, #24]
 800ceda:	4313      	orrs	r3, r2
 800cedc:	61bb      	str	r3, [r7, #24]
 800cede:	69fb      	ldr	r3, [r7, #28]
 800cee0:	08da      	lsrs	r2, r3, #3
 800cee2:	687b      	ldr	r3, [r7, #4]
 800cee4:	3208      	adds	r2, #8
 800cee6:	69b9      	ldr	r1, [r7, #24]
 800cee8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800ceec:	687b      	ldr	r3, [r7, #4]
 800ceee:	681b      	ldr	r3, [r3, #0]
 800cef0:	61bb      	str	r3, [r7, #24]
 800cef2:	69fb      	ldr	r3, [r7, #28]
 800cef4:	005b      	lsls	r3, r3, #1
 800cef6:	2203      	movs	r2, #3
 800cef8:	fa02 f303 	lsl.w	r3, r2, r3
 800cefc:	43db      	mvns	r3, r3
 800cefe:	69ba      	ldr	r2, [r7, #24]
 800cf00:	4013      	ands	r3, r2
 800cf02:	61bb      	str	r3, [r7, #24]
 800cf04:	683b      	ldr	r3, [r7, #0]
 800cf06:	685b      	ldr	r3, [r3, #4]
 800cf08:	f003 0203 	and.w	r2, r3, #3
 800cf0c:	69fb      	ldr	r3, [r7, #28]
 800cf0e:	005b      	lsls	r3, r3, #1
 800cf10:	fa02 f303 	lsl.w	r3, r2, r3
 800cf14:	69ba      	ldr	r2, [r7, #24]
 800cf16:	4313      	orrs	r3, r2
 800cf18:	61bb      	str	r3, [r7, #24]
 800cf1a:	687b      	ldr	r3, [r7, #4]
 800cf1c:	69ba      	ldr	r2, [r7, #24]
 800cf1e:	601a      	str	r2, [r3, #0]
 800cf20:	683b      	ldr	r3, [r7, #0]
 800cf22:	685b      	ldr	r3, [r3, #4]
 800cf24:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800cf28:	2b00      	cmp	r3, #0
 800cf2a:	f000 80b4 	beq.w	800d096 <HAL_GPIO_Init+0x2ee>
 800cf2e:	2300      	movs	r3, #0
 800cf30:	60fb      	str	r3, [r7, #12]
 800cf32:	4b60      	ldr	r3, [pc, #384]	@ (800d0b4 <HAL_GPIO_Init+0x30c>)
 800cf34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cf36:	4a5f      	ldr	r2, [pc, #380]	@ (800d0b4 <HAL_GPIO_Init+0x30c>)
 800cf38:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800cf3c:	6453      	str	r3, [r2, #68]	@ 0x44
 800cf3e:	4b5d      	ldr	r3, [pc, #372]	@ (800d0b4 <HAL_GPIO_Init+0x30c>)
 800cf40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800cf42:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800cf46:	60fb      	str	r3, [r7, #12]
 800cf48:	68fb      	ldr	r3, [r7, #12]
 800cf4a:	4a5b      	ldr	r2, [pc, #364]	@ (800d0b8 <HAL_GPIO_Init+0x310>)
 800cf4c:	69fb      	ldr	r3, [r7, #28]
 800cf4e:	089b      	lsrs	r3, r3, #2
 800cf50:	3302      	adds	r3, #2
 800cf52:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cf56:	61bb      	str	r3, [r7, #24]
 800cf58:	69fb      	ldr	r3, [r7, #28]
 800cf5a:	f003 0303 	and.w	r3, r3, #3
 800cf5e:	009b      	lsls	r3, r3, #2
 800cf60:	220f      	movs	r2, #15
 800cf62:	fa02 f303 	lsl.w	r3, r2, r3
 800cf66:	43db      	mvns	r3, r3
 800cf68:	69ba      	ldr	r2, [r7, #24]
 800cf6a:	4013      	ands	r3, r2
 800cf6c:	61bb      	str	r3, [r7, #24]
 800cf6e:	687b      	ldr	r3, [r7, #4]
 800cf70:	4a52      	ldr	r2, [pc, #328]	@ (800d0bc <HAL_GPIO_Init+0x314>)
 800cf72:	4293      	cmp	r3, r2
 800cf74:	d02b      	beq.n	800cfce <HAL_GPIO_Init+0x226>
 800cf76:	687b      	ldr	r3, [r7, #4]
 800cf78:	4a51      	ldr	r2, [pc, #324]	@ (800d0c0 <HAL_GPIO_Init+0x318>)
 800cf7a:	4293      	cmp	r3, r2
 800cf7c:	d025      	beq.n	800cfca <HAL_GPIO_Init+0x222>
 800cf7e:	687b      	ldr	r3, [r7, #4]
 800cf80:	4a50      	ldr	r2, [pc, #320]	@ (800d0c4 <HAL_GPIO_Init+0x31c>)
 800cf82:	4293      	cmp	r3, r2
 800cf84:	d01f      	beq.n	800cfc6 <HAL_GPIO_Init+0x21e>
 800cf86:	687b      	ldr	r3, [r7, #4]
 800cf88:	4a4f      	ldr	r2, [pc, #316]	@ (800d0c8 <HAL_GPIO_Init+0x320>)
 800cf8a:	4293      	cmp	r3, r2
 800cf8c:	d019      	beq.n	800cfc2 <HAL_GPIO_Init+0x21a>
 800cf8e:	687b      	ldr	r3, [r7, #4]
 800cf90:	4a4e      	ldr	r2, [pc, #312]	@ (800d0cc <HAL_GPIO_Init+0x324>)
 800cf92:	4293      	cmp	r3, r2
 800cf94:	d013      	beq.n	800cfbe <HAL_GPIO_Init+0x216>
 800cf96:	687b      	ldr	r3, [r7, #4]
 800cf98:	4a4d      	ldr	r2, [pc, #308]	@ (800d0d0 <HAL_GPIO_Init+0x328>)
 800cf9a:	4293      	cmp	r3, r2
 800cf9c:	d00d      	beq.n	800cfba <HAL_GPIO_Init+0x212>
 800cf9e:	687b      	ldr	r3, [r7, #4]
 800cfa0:	4a4c      	ldr	r2, [pc, #304]	@ (800d0d4 <HAL_GPIO_Init+0x32c>)
 800cfa2:	4293      	cmp	r3, r2
 800cfa4:	d007      	beq.n	800cfb6 <HAL_GPIO_Init+0x20e>
 800cfa6:	687b      	ldr	r3, [r7, #4]
 800cfa8:	4a4b      	ldr	r2, [pc, #300]	@ (800d0d8 <HAL_GPIO_Init+0x330>)
 800cfaa:	4293      	cmp	r3, r2
 800cfac:	d101      	bne.n	800cfb2 <HAL_GPIO_Init+0x20a>
 800cfae:	2307      	movs	r3, #7
 800cfb0:	e00e      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfb2:	2308      	movs	r3, #8
 800cfb4:	e00c      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfb6:	2306      	movs	r3, #6
 800cfb8:	e00a      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfba:	2305      	movs	r3, #5
 800cfbc:	e008      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfbe:	2304      	movs	r3, #4
 800cfc0:	e006      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfc2:	2303      	movs	r3, #3
 800cfc4:	e004      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfc6:	2302      	movs	r3, #2
 800cfc8:	e002      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfca:	2301      	movs	r3, #1
 800cfcc:	e000      	b.n	800cfd0 <HAL_GPIO_Init+0x228>
 800cfce:	2300      	movs	r3, #0
 800cfd0:	69fa      	ldr	r2, [r7, #28]
 800cfd2:	f002 0203 	and.w	r2, r2, #3
 800cfd6:	0092      	lsls	r2, r2, #2
 800cfd8:	4093      	lsls	r3, r2
 800cfda:	69ba      	ldr	r2, [r7, #24]
 800cfdc:	4313      	orrs	r3, r2
 800cfde:	61bb      	str	r3, [r7, #24]
 800cfe0:	4935      	ldr	r1, [pc, #212]	@ (800d0b8 <HAL_GPIO_Init+0x310>)
 800cfe2:	69fb      	ldr	r3, [r7, #28]
 800cfe4:	089b      	lsrs	r3, r3, #2
 800cfe6:	3302      	adds	r3, #2
 800cfe8:	69ba      	ldr	r2, [r7, #24]
 800cfea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800cfee:	4b3b      	ldr	r3, [pc, #236]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800cff0:	689b      	ldr	r3, [r3, #8]
 800cff2:	61bb      	str	r3, [r7, #24]
 800cff4:	693b      	ldr	r3, [r7, #16]
 800cff6:	43db      	mvns	r3, r3
 800cff8:	69ba      	ldr	r2, [r7, #24]
 800cffa:	4013      	ands	r3, r2
 800cffc:	61bb      	str	r3, [r7, #24]
 800cffe:	683b      	ldr	r3, [r7, #0]
 800d000:	685b      	ldr	r3, [r3, #4]
 800d002:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800d006:	2b00      	cmp	r3, #0
 800d008:	d003      	beq.n	800d012 <HAL_GPIO_Init+0x26a>
 800d00a:	69ba      	ldr	r2, [r7, #24]
 800d00c:	693b      	ldr	r3, [r7, #16]
 800d00e:	4313      	orrs	r3, r2
 800d010:	61bb      	str	r3, [r7, #24]
 800d012:	4a32      	ldr	r2, [pc, #200]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d014:	69bb      	ldr	r3, [r7, #24]
 800d016:	6093      	str	r3, [r2, #8]
 800d018:	4b30      	ldr	r3, [pc, #192]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d01a:	68db      	ldr	r3, [r3, #12]
 800d01c:	61bb      	str	r3, [r7, #24]
 800d01e:	693b      	ldr	r3, [r7, #16]
 800d020:	43db      	mvns	r3, r3
 800d022:	69ba      	ldr	r2, [r7, #24]
 800d024:	4013      	ands	r3, r2
 800d026:	61bb      	str	r3, [r7, #24]
 800d028:	683b      	ldr	r3, [r7, #0]
 800d02a:	685b      	ldr	r3, [r3, #4]
 800d02c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800d030:	2b00      	cmp	r3, #0
 800d032:	d003      	beq.n	800d03c <HAL_GPIO_Init+0x294>
 800d034:	69ba      	ldr	r2, [r7, #24]
 800d036:	693b      	ldr	r3, [r7, #16]
 800d038:	4313      	orrs	r3, r2
 800d03a:	61bb      	str	r3, [r7, #24]
 800d03c:	4a27      	ldr	r2, [pc, #156]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d03e:	69bb      	ldr	r3, [r7, #24]
 800d040:	60d3      	str	r3, [r2, #12]
 800d042:	4b26      	ldr	r3, [pc, #152]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d044:	685b      	ldr	r3, [r3, #4]
 800d046:	61bb      	str	r3, [r7, #24]
 800d048:	693b      	ldr	r3, [r7, #16]
 800d04a:	43db      	mvns	r3, r3
 800d04c:	69ba      	ldr	r2, [r7, #24]
 800d04e:	4013      	ands	r3, r2
 800d050:	61bb      	str	r3, [r7, #24]
 800d052:	683b      	ldr	r3, [r7, #0]
 800d054:	685b      	ldr	r3, [r3, #4]
 800d056:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800d05a:	2b00      	cmp	r3, #0
 800d05c:	d003      	beq.n	800d066 <HAL_GPIO_Init+0x2be>
 800d05e:	69ba      	ldr	r2, [r7, #24]
 800d060:	693b      	ldr	r3, [r7, #16]
 800d062:	4313      	orrs	r3, r2
 800d064:	61bb      	str	r3, [r7, #24]
 800d066:	4a1d      	ldr	r2, [pc, #116]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d068:	69bb      	ldr	r3, [r7, #24]
 800d06a:	6053      	str	r3, [r2, #4]
 800d06c:	4b1b      	ldr	r3, [pc, #108]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d06e:	681b      	ldr	r3, [r3, #0]
 800d070:	61bb      	str	r3, [r7, #24]
 800d072:	693b      	ldr	r3, [r7, #16]
 800d074:	43db      	mvns	r3, r3
 800d076:	69ba      	ldr	r2, [r7, #24]
 800d078:	4013      	ands	r3, r2
 800d07a:	61bb      	str	r3, [r7, #24]
 800d07c:	683b      	ldr	r3, [r7, #0]
 800d07e:	685b      	ldr	r3, [r3, #4]
 800d080:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800d084:	2b00      	cmp	r3, #0
 800d086:	d003      	beq.n	800d090 <HAL_GPIO_Init+0x2e8>
 800d088:	69ba      	ldr	r2, [r7, #24]
 800d08a:	693b      	ldr	r3, [r7, #16]
 800d08c:	4313      	orrs	r3, r2
 800d08e:	61bb      	str	r3, [r7, #24]
 800d090:	4a12      	ldr	r2, [pc, #72]	@ (800d0dc <HAL_GPIO_Init+0x334>)
 800d092:	69bb      	ldr	r3, [r7, #24]
 800d094:	6013      	str	r3, [r2, #0]
 800d096:	69fb      	ldr	r3, [r7, #28]
 800d098:	3301      	adds	r3, #1
 800d09a:	61fb      	str	r3, [r7, #28]
 800d09c:	69fb      	ldr	r3, [r7, #28]
 800d09e:	2b0f      	cmp	r3, #15
 800d0a0:	f67f ae90 	bls.w	800cdc4 <HAL_GPIO_Init+0x1c>
 800d0a4:	bf00      	nop
 800d0a6:	bf00      	nop
 800d0a8:	3724      	adds	r7, #36	@ 0x24
 800d0aa:	46bd      	mov	sp, r7
 800d0ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0b0:	4770      	bx	lr
 800d0b2:	bf00      	nop
 800d0b4:	40023800 	.word	0x40023800
 800d0b8:	40013800 	.word	0x40013800
 800d0bc:	40020000 	.word	0x40020000
 800d0c0:	40020400 	.word	0x40020400
 800d0c4:	40020800 	.word	0x40020800
 800d0c8:	40020c00 	.word	0x40020c00
 800d0cc:	40021000 	.word	0x40021000
 800d0d0:	40021400 	.word	0x40021400
 800d0d4:	40021800 	.word	0x40021800
 800d0d8:	40021c00 	.word	0x40021c00
 800d0dc:	40013c00 	.word	0x40013c00

0800d0e0 <HAL_GPIO_WritePin>:
 800d0e0:	b480      	push	{r7}
 800d0e2:	b083      	sub	sp, #12
 800d0e4:	af00      	add	r7, sp, #0
 800d0e6:	6078      	str	r0, [r7, #4]
 800d0e8:	460b      	mov	r3, r1
 800d0ea:	807b      	strh	r3, [r7, #2]
 800d0ec:	4613      	mov	r3, r2
 800d0ee:	707b      	strb	r3, [r7, #1]
 800d0f0:	787b      	ldrb	r3, [r7, #1]
 800d0f2:	2b00      	cmp	r3, #0
 800d0f4:	d003      	beq.n	800d0fe <HAL_GPIO_WritePin+0x1e>
 800d0f6:	887a      	ldrh	r2, [r7, #2]
 800d0f8:	687b      	ldr	r3, [r7, #4]
 800d0fa:	619a      	str	r2, [r3, #24]
 800d0fc:	e003      	b.n	800d106 <HAL_GPIO_WritePin+0x26>
 800d0fe:	887b      	ldrh	r3, [r7, #2]
 800d100:	041a      	lsls	r2, r3, #16
 800d102:	687b      	ldr	r3, [r7, #4]
 800d104:	619a      	str	r2, [r3, #24]
 800d106:	bf00      	nop
 800d108:	370c      	adds	r7, #12
 800d10a:	46bd      	mov	sp, r7
 800d10c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d110:	4770      	bx	lr
	...

0800d114 <HAL_GPIO_EXTI_IRQHandler>:
 800d114:	b580      	push	{r7, lr}
 800d116:	b082      	sub	sp, #8
 800d118:	af00      	add	r7, sp, #0
 800d11a:	4603      	mov	r3, r0
 800d11c:	80fb      	strh	r3, [r7, #6]
 800d11e:	4b08      	ldr	r3, [pc, #32]	@ (800d140 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800d120:	695a      	ldr	r2, [r3, #20]
 800d122:	88fb      	ldrh	r3, [r7, #6]
 800d124:	4013      	ands	r3, r2
 800d126:	2b00      	cmp	r3, #0
 800d128:	d006      	beq.n	800d138 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800d12a:	4a05      	ldr	r2, [pc, #20]	@ (800d140 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800d12c:	88fb      	ldrh	r3, [r7, #6]
 800d12e:	6153      	str	r3, [r2, #20]
 800d130:	88fb      	ldrh	r3, [r7, #6]
 800d132:	4618      	mov	r0, r3
 800d134:	f7f4 fe9e 	bl	8001e74 <HAL_GPIO_EXTI_Callback>
 800d138:	bf00      	nop
 800d13a:	3708      	adds	r7, #8
 800d13c:	46bd      	mov	sp, r7
 800d13e:	bd80      	pop	{r7, pc}
 800d140:	40013c00 	.word	0x40013c00

0800d144 <HAL_I2C_Init>:
 800d144:	b580      	push	{r7, lr}
 800d146:	b084      	sub	sp, #16
 800d148:	af00      	add	r7, sp, #0
 800d14a:	6078      	str	r0, [r7, #4]
 800d14c:	687b      	ldr	r3, [r7, #4]
 800d14e:	2b00      	cmp	r3, #0
 800d150:	d101      	bne.n	800d156 <HAL_I2C_Init+0x12>
 800d152:	2301      	movs	r3, #1
 800d154:	e12b      	b.n	800d3ae <HAL_I2C_Init+0x26a>
 800d156:	687b      	ldr	r3, [r7, #4]
 800d158:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d15c:	b2db      	uxtb	r3, r3
 800d15e:	2b00      	cmp	r3, #0
 800d160:	d106      	bne.n	800d170 <HAL_I2C_Init+0x2c>
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	2200      	movs	r2, #0
 800d166:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d16a:	6878      	ldr	r0, [r7, #4]
 800d16c:	f7f6 f9c2 	bl	80034f4 <HAL_I2C_MspInit>
 800d170:	687b      	ldr	r3, [r7, #4]
 800d172:	2224      	movs	r2, #36	@ 0x24
 800d174:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d178:	687b      	ldr	r3, [r7, #4]
 800d17a:	681b      	ldr	r3, [r3, #0]
 800d17c:	681a      	ldr	r2, [r3, #0]
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	681b      	ldr	r3, [r3, #0]
 800d182:	f022 0201 	bic.w	r2, r2, #1
 800d186:	601a      	str	r2, [r3, #0]
 800d188:	687b      	ldr	r3, [r7, #4]
 800d18a:	681b      	ldr	r3, [r3, #0]
 800d18c:	681a      	ldr	r2, [r3, #0]
 800d18e:	687b      	ldr	r3, [r7, #4]
 800d190:	681b      	ldr	r3, [r3, #0]
 800d192:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800d196:	601a      	str	r2, [r3, #0]
 800d198:	687b      	ldr	r3, [r7, #4]
 800d19a:	681b      	ldr	r3, [r3, #0]
 800d19c:	681a      	ldr	r2, [r3, #0]
 800d19e:	687b      	ldr	r3, [r7, #4]
 800d1a0:	681b      	ldr	r3, [r3, #0]
 800d1a2:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800d1a6:	601a      	str	r2, [r3, #0]
 800d1a8:	f003 fc04 	bl	80109b4 <HAL_RCC_GetPCLK1Freq>
 800d1ac:	60f8      	str	r0, [r7, #12]
 800d1ae:	687b      	ldr	r3, [r7, #4]
 800d1b0:	685b      	ldr	r3, [r3, #4]
 800d1b2:	4a81      	ldr	r2, [pc, #516]	@ (800d3b8 <HAL_I2C_Init+0x274>)
 800d1b4:	4293      	cmp	r3, r2
 800d1b6:	d807      	bhi.n	800d1c8 <HAL_I2C_Init+0x84>
 800d1b8:	68fb      	ldr	r3, [r7, #12]
 800d1ba:	4a80      	ldr	r2, [pc, #512]	@ (800d3bc <HAL_I2C_Init+0x278>)
 800d1bc:	4293      	cmp	r3, r2
 800d1be:	bf94      	ite	ls
 800d1c0:	2301      	movls	r3, #1
 800d1c2:	2300      	movhi	r3, #0
 800d1c4:	b2db      	uxtb	r3, r3
 800d1c6:	e006      	b.n	800d1d6 <HAL_I2C_Init+0x92>
 800d1c8:	68fb      	ldr	r3, [r7, #12]
 800d1ca:	4a7d      	ldr	r2, [pc, #500]	@ (800d3c0 <HAL_I2C_Init+0x27c>)
 800d1cc:	4293      	cmp	r3, r2
 800d1ce:	bf94      	ite	ls
 800d1d0:	2301      	movls	r3, #1
 800d1d2:	2300      	movhi	r3, #0
 800d1d4:	b2db      	uxtb	r3, r3
 800d1d6:	2b00      	cmp	r3, #0
 800d1d8:	d001      	beq.n	800d1de <HAL_I2C_Init+0x9a>
 800d1da:	2301      	movs	r3, #1
 800d1dc:	e0e7      	b.n	800d3ae <HAL_I2C_Init+0x26a>
 800d1de:	68fb      	ldr	r3, [r7, #12]
 800d1e0:	4a78      	ldr	r2, [pc, #480]	@ (800d3c4 <HAL_I2C_Init+0x280>)
 800d1e2:	fba2 2303 	umull	r2, r3, r2, r3
 800d1e6:	0c9b      	lsrs	r3, r3, #18
 800d1e8:	60bb      	str	r3, [r7, #8]
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	681b      	ldr	r3, [r3, #0]
 800d1ee:	685b      	ldr	r3, [r3, #4]
 800d1f0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800d1f4:	687b      	ldr	r3, [r7, #4]
 800d1f6:	681b      	ldr	r3, [r3, #0]
 800d1f8:	68ba      	ldr	r2, [r7, #8]
 800d1fa:	430a      	orrs	r2, r1
 800d1fc:	605a      	str	r2, [r3, #4]
 800d1fe:	687b      	ldr	r3, [r7, #4]
 800d200:	681b      	ldr	r3, [r3, #0]
 800d202:	6a1b      	ldr	r3, [r3, #32]
 800d204:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800d208:	687b      	ldr	r3, [r7, #4]
 800d20a:	685b      	ldr	r3, [r3, #4]
 800d20c:	4a6a      	ldr	r2, [pc, #424]	@ (800d3b8 <HAL_I2C_Init+0x274>)
 800d20e:	4293      	cmp	r3, r2
 800d210:	d802      	bhi.n	800d218 <HAL_I2C_Init+0xd4>
 800d212:	68bb      	ldr	r3, [r7, #8]
 800d214:	3301      	adds	r3, #1
 800d216:	e009      	b.n	800d22c <HAL_I2C_Init+0xe8>
 800d218:	68bb      	ldr	r3, [r7, #8]
 800d21a:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800d21e:	fb02 f303 	mul.w	r3, r2, r3
 800d222:	4a69      	ldr	r2, [pc, #420]	@ (800d3c8 <HAL_I2C_Init+0x284>)
 800d224:	fba2 2303 	umull	r2, r3, r2, r3
 800d228:	099b      	lsrs	r3, r3, #6
 800d22a:	3301      	adds	r3, #1
 800d22c:	687a      	ldr	r2, [r7, #4]
 800d22e:	6812      	ldr	r2, [r2, #0]
 800d230:	430b      	orrs	r3, r1
 800d232:	6213      	str	r3, [r2, #32]
 800d234:	687b      	ldr	r3, [r7, #4]
 800d236:	681b      	ldr	r3, [r3, #0]
 800d238:	69db      	ldr	r3, [r3, #28]
 800d23a:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800d23e:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	685b      	ldr	r3, [r3, #4]
 800d246:	495c      	ldr	r1, [pc, #368]	@ (800d3b8 <HAL_I2C_Init+0x274>)
 800d248:	428b      	cmp	r3, r1
 800d24a:	d819      	bhi.n	800d280 <HAL_I2C_Init+0x13c>
 800d24c:	68fb      	ldr	r3, [r7, #12]
 800d24e:	1e59      	subs	r1, r3, #1
 800d250:	687b      	ldr	r3, [r7, #4]
 800d252:	685b      	ldr	r3, [r3, #4]
 800d254:	005b      	lsls	r3, r3, #1
 800d256:	fbb1 f3f3 	udiv	r3, r1, r3
 800d25a:	1c59      	adds	r1, r3, #1
 800d25c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800d260:	400b      	ands	r3, r1
 800d262:	2b00      	cmp	r3, #0
 800d264:	d00a      	beq.n	800d27c <HAL_I2C_Init+0x138>
 800d266:	68fb      	ldr	r3, [r7, #12]
 800d268:	1e59      	subs	r1, r3, #1
 800d26a:	687b      	ldr	r3, [r7, #4]
 800d26c:	685b      	ldr	r3, [r3, #4]
 800d26e:	005b      	lsls	r3, r3, #1
 800d270:	fbb1 f3f3 	udiv	r3, r1, r3
 800d274:	3301      	adds	r3, #1
 800d276:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d27a:	e051      	b.n	800d320 <HAL_I2C_Init+0x1dc>
 800d27c:	2304      	movs	r3, #4
 800d27e:	e04f      	b.n	800d320 <HAL_I2C_Init+0x1dc>
 800d280:	687b      	ldr	r3, [r7, #4]
 800d282:	689b      	ldr	r3, [r3, #8]
 800d284:	2b00      	cmp	r3, #0
 800d286:	d111      	bne.n	800d2ac <HAL_I2C_Init+0x168>
 800d288:	68fb      	ldr	r3, [r7, #12]
 800d28a:	1e58      	subs	r0, r3, #1
 800d28c:	687b      	ldr	r3, [r7, #4]
 800d28e:	6859      	ldr	r1, [r3, #4]
 800d290:	460b      	mov	r3, r1
 800d292:	005b      	lsls	r3, r3, #1
 800d294:	440b      	add	r3, r1
 800d296:	fbb0 f3f3 	udiv	r3, r0, r3
 800d29a:	3301      	adds	r3, #1
 800d29c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	bf0c      	ite	eq
 800d2a4:	2301      	moveq	r3, #1
 800d2a6:	2300      	movne	r3, #0
 800d2a8:	b2db      	uxtb	r3, r3
 800d2aa:	e012      	b.n	800d2d2 <HAL_I2C_Init+0x18e>
 800d2ac:	68fb      	ldr	r3, [r7, #12]
 800d2ae:	1e58      	subs	r0, r3, #1
 800d2b0:	687b      	ldr	r3, [r7, #4]
 800d2b2:	6859      	ldr	r1, [r3, #4]
 800d2b4:	460b      	mov	r3, r1
 800d2b6:	009b      	lsls	r3, r3, #2
 800d2b8:	440b      	add	r3, r1
 800d2ba:	0099      	lsls	r1, r3, #2
 800d2bc:	440b      	add	r3, r1
 800d2be:	fbb0 f3f3 	udiv	r3, r0, r3
 800d2c2:	3301      	adds	r3, #1
 800d2c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d2c8:	2b00      	cmp	r3, #0
 800d2ca:	bf0c      	ite	eq
 800d2cc:	2301      	moveq	r3, #1
 800d2ce:	2300      	movne	r3, #0
 800d2d0:	b2db      	uxtb	r3, r3
 800d2d2:	2b00      	cmp	r3, #0
 800d2d4:	d001      	beq.n	800d2da <HAL_I2C_Init+0x196>
 800d2d6:	2301      	movs	r3, #1
 800d2d8:	e022      	b.n	800d320 <HAL_I2C_Init+0x1dc>
 800d2da:	687b      	ldr	r3, [r7, #4]
 800d2dc:	689b      	ldr	r3, [r3, #8]
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	d10e      	bne.n	800d300 <HAL_I2C_Init+0x1bc>
 800d2e2:	68fb      	ldr	r3, [r7, #12]
 800d2e4:	1e58      	subs	r0, r3, #1
 800d2e6:	687b      	ldr	r3, [r7, #4]
 800d2e8:	6859      	ldr	r1, [r3, #4]
 800d2ea:	460b      	mov	r3, r1
 800d2ec:	005b      	lsls	r3, r3, #1
 800d2ee:	440b      	add	r3, r1
 800d2f0:	fbb0 f3f3 	udiv	r3, r0, r3
 800d2f4:	3301      	adds	r3, #1
 800d2f6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d2fa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800d2fe:	e00f      	b.n	800d320 <HAL_I2C_Init+0x1dc>
 800d300:	68fb      	ldr	r3, [r7, #12]
 800d302:	1e58      	subs	r0, r3, #1
 800d304:	687b      	ldr	r3, [r7, #4]
 800d306:	6859      	ldr	r1, [r3, #4]
 800d308:	460b      	mov	r3, r1
 800d30a:	009b      	lsls	r3, r3, #2
 800d30c:	440b      	add	r3, r1
 800d30e:	0099      	lsls	r1, r3, #2
 800d310:	440b      	add	r3, r1
 800d312:	fbb0 f3f3 	udiv	r3, r0, r3
 800d316:	3301      	adds	r3, #1
 800d318:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d31c:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800d320:	6879      	ldr	r1, [r7, #4]
 800d322:	6809      	ldr	r1, [r1, #0]
 800d324:	4313      	orrs	r3, r2
 800d326:	61cb      	str	r3, [r1, #28]
 800d328:	687b      	ldr	r3, [r7, #4]
 800d32a:	681b      	ldr	r3, [r3, #0]
 800d32c:	681b      	ldr	r3, [r3, #0]
 800d32e:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800d332:	687b      	ldr	r3, [r7, #4]
 800d334:	69da      	ldr	r2, [r3, #28]
 800d336:	687b      	ldr	r3, [r7, #4]
 800d338:	6a1b      	ldr	r3, [r3, #32]
 800d33a:	431a      	orrs	r2, r3
 800d33c:	687b      	ldr	r3, [r7, #4]
 800d33e:	681b      	ldr	r3, [r3, #0]
 800d340:	430a      	orrs	r2, r1
 800d342:	601a      	str	r2, [r3, #0]
 800d344:	687b      	ldr	r3, [r7, #4]
 800d346:	681b      	ldr	r3, [r3, #0]
 800d348:	689b      	ldr	r3, [r3, #8]
 800d34a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800d34e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800d352:	687a      	ldr	r2, [r7, #4]
 800d354:	6911      	ldr	r1, [r2, #16]
 800d356:	687a      	ldr	r2, [r7, #4]
 800d358:	68d2      	ldr	r2, [r2, #12]
 800d35a:	4311      	orrs	r1, r2
 800d35c:	687a      	ldr	r2, [r7, #4]
 800d35e:	6812      	ldr	r2, [r2, #0]
 800d360:	430b      	orrs	r3, r1
 800d362:	6093      	str	r3, [r2, #8]
 800d364:	687b      	ldr	r3, [r7, #4]
 800d366:	681b      	ldr	r3, [r3, #0]
 800d368:	68db      	ldr	r3, [r3, #12]
 800d36a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800d36e:	687b      	ldr	r3, [r7, #4]
 800d370:	695a      	ldr	r2, [r3, #20]
 800d372:	687b      	ldr	r3, [r7, #4]
 800d374:	699b      	ldr	r3, [r3, #24]
 800d376:	431a      	orrs	r2, r3
 800d378:	687b      	ldr	r3, [r7, #4]
 800d37a:	681b      	ldr	r3, [r3, #0]
 800d37c:	430a      	orrs	r2, r1
 800d37e:	60da      	str	r2, [r3, #12]
 800d380:	687b      	ldr	r3, [r7, #4]
 800d382:	681b      	ldr	r3, [r3, #0]
 800d384:	681a      	ldr	r2, [r3, #0]
 800d386:	687b      	ldr	r3, [r7, #4]
 800d388:	681b      	ldr	r3, [r3, #0]
 800d38a:	f042 0201 	orr.w	r2, r2, #1
 800d38e:	601a      	str	r2, [r3, #0]
 800d390:	687b      	ldr	r3, [r7, #4]
 800d392:	2200      	movs	r2, #0
 800d394:	641a      	str	r2, [r3, #64]	@ 0x40
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	2220      	movs	r2, #32
 800d39a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d39e:	687b      	ldr	r3, [r7, #4]
 800d3a0:	2200      	movs	r2, #0
 800d3a2:	631a      	str	r2, [r3, #48]	@ 0x30
 800d3a4:	687b      	ldr	r3, [r7, #4]
 800d3a6:	2200      	movs	r2, #0
 800d3a8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d3ac:	2300      	movs	r3, #0
 800d3ae:	4618      	mov	r0, r3
 800d3b0:	3710      	adds	r7, #16
 800d3b2:	46bd      	mov	sp, r7
 800d3b4:	bd80      	pop	{r7, pc}
 800d3b6:	bf00      	nop
 800d3b8:	000186a0 	.word	0x000186a0
 800d3bc:	001e847f 	.word	0x001e847f
 800d3c0:	003d08ff 	.word	0x003d08ff
 800d3c4:	431bde83 	.word	0x431bde83
 800d3c8:	10624dd3 	.word	0x10624dd3

0800d3cc <HAL_I2C_Mem_Write>:
 800d3cc:	b580      	push	{r7, lr}
 800d3ce:	b088      	sub	sp, #32
 800d3d0:	af02      	add	r7, sp, #8
 800d3d2:	60f8      	str	r0, [r7, #12]
 800d3d4:	4608      	mov	r0, r1
 800d3d6:	4611      	mov	r1, r2
 800d3d8:	461a      	mov	r2, r3
 800d3da:	4603      	mov	r3, r0
 800d3dc:	817b      	strh	r3, [r7, #10]
 800d3de:	460b      	mov	r3, r1
 800d3e0:	813b      	strh	r3, [r7, #8]
 800d3e2:	4613      	mov	r3, r2
 800d3e4:	80fb      	strh	r3, [r7, #6]
 800d3e6:	f7fd feab 	bl	800b140 <HAL_GetTick>
 800d3ea:	6178      	str	r0, [r7, #20]
 800d3ec:	68fb      	ldr	r3, [r7, #12]
 800d3ee:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d3f2:	b2db      	uxtb	r3, r3
 800d3f4:	2b20      	cmp	r3, #32
 800d3f6:	f040 80d9 	bne.w	800d5ac <HAL_I2C_Mem_Write+0x1e0>
 800d3fa:	697b      	ldr	r3, [r7, #20]
 800d3fc:	9300      	str	r3, [sp, #0]
 800d3fe:	2319      	movs	r3, #25
 800d400:	2201      	movs	r2, #1
 800d402:	496d      	ldr	r1, [pc, #436]	@ (800d5b8 <HAL_I2C_Mem_Write+0x1ec>)
 800d404:	68f8      	ldr	r0, [r7, #12]
 800d406:	f001 fa4b 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800d40a:	4603      	mov	r3, r0
 800d40c:	2b00      	cmp	r3, #0
 800d40e:	d001      	beq.n	800d414 <HAL_I2C_Mem_Write+0x48>
 800d410:	2302      	movs	r3, #2
 800d412:	e0cc      	b.n	800d5ae <HAL_I2C_Mem_Write+0x1e2>
 800d414:	68fb      	ldr	r3, [r7, #12]
 800d416:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d41a:	2b01      	cmp	r3, #1
 800d41c:	d101      	bne.n	800d422 <HAL_I2C_Mem_Write+0x56>
 800d41e:	2302      	movs	r3, #2
 800d420:	e0c5      	b.n	800d5ae <HAL_I2C_Mem_Write+0x1e2>
 800d422:	68fb      	ldr	r3, [r7, #12]
 800d424:	2201      	movs	r2, #1
 800d426:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d42a:	68fb      	ldr	r3, [r7, #12]
 800d42c:	681b      	ldr	r3, [r3, #0]
 800d42e:	681b      	ldr	r3, [r3, #0]
 800d430:	f003 0301 	and.w	r3, r3, #1
 800d434:	2b01      	cmp	r3, #1
 800d436:	d007      	beq.n	800d448 <HAL_I2C_Mem_Write+0x7c>
 800d438:	68fb      	ldr	r3, [r7, #12]
 800d43a:	681b      	ldr	r3, [r3, #0]
 800d43c:	681a      	ldr	r2, [r3, #0]
 800d43e:	68fb      	ldr	r3, [r7, #12]
 800d440:	681b      	ldr	r3, [r3, #0]
 800d442:	f042 0201 	orr.w	r2, r2, #1
 800d446:	601a      	str	r2, [r3, #0]
 800d448:	68fb      	ldr	r3, [r7, #12]
 800d44a:	681b      	ldr	r3, [r3, #0]
 800d44c:	681a      	ldr	r2, [r3, #0]
 800d44e:	68fb      	ldr	r3, [r7, #12]
 800d450:	681b      	ldr	r3, [r3, #0]
 800d452:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d456:	601a      	str	r2, [r3, #0]
 800d458:	68fb      	ldr	r3, [r7, #12]
 800d45a:	2221      	movs	r2, #33	@ 0x21
 800d45c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d460:	68fb      	ldr	r3, [r7, #12]
 800d462:	2240      	movs	r2, #64	@ 0x40
 800d464:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d468:	68fb      	ldr	r3, [r7, #12]
 800d46a:	2200      	movs	r2, #0
 800d46c:	641a      	str	r2, [r3, #64]	@ 0x40
 800d46e:	68fb      	ldr	r3, [r7, #12]
 800d470:	6a3a      	ldr	r2, [r7, #32]
 800d472:	625a      	str	r2, [r3, #36]	@ 0x24
 800d474:	68fb      	ldr	r3, [r7, #12]
 800d476:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800d478:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d47a:	68fb      	ldr	r3, [r7, #12]
 800d47c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d47e:	b29a      	uxth	r2, r3
 800d480:	68fb      	ldr	r3, [r7, #12]
 800d482:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d484:	68fb      	ldr	r3, [r7, #12]
 800d486:	4a4d      	ldr	r2, [pc, #308]	@ (800d5bc <HAL_I2C_Mem_Write+0x1f0>)
 800d488:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d48a:	88f8      	ldrh	r0, [r7, #6]
 800d48c:	893a      	ldrh	r2, [r7, #8]
 800d48e:	8979      	ldrh	r1, [r7, #10]
 800d490:	697b      	ldr	r3, [r7, #20]
 800d492:	9301      	str	r3, [sp, #4]
 800d494:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d496:	9300      	str	r3, [sp, #0]
 800d498:	4603      	mov	r3, r0
 800d49a:	68f8      	ldr	r0, [r7, #12]
 800d49c:	f000 fec8 	bl	800e230 <I2C_RequestMemoryWrite>
 800d4a0:	4603      	mov	r3, r0
 800d4a2:	2b00      	cmp	r3, #0
 800d4a4:	d052      	beq.n	800d54c <HAL_I2C_Mem_Write+0x180>
 800d4a6:	2301      	movs	r3, #1
 800d4a8:	e081      	b.n	800d5ae <HAL_I2C_Mem_Write+0x1e2>
 800d4aa:	697a      	ldr	r2, [r7, #20]
 800d4ac:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800d4ae:	68f8      	ldr	r0, [r7, #12]
 800d4b0:	f001 facc 	bl	800ea4c <I2C_WaitOnTXEFlagUntilTimeout>
 800d4b4:	4603      	mov	r3, r0
 800d4b6:	2b00      	cmp	r3, #0
 800d4b8:	d00d      	beq.n	800d4d6 <HAL_I2C_Mem_Write+0x10a>
 800d4ba:	68fb      	ldr	r3, [r7, #12]
 800d4bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d4be:	2b04      	cmp	r3, #4
 800d4c0:	d107      	bne.n	800d4d2 <HAL_I2C_Mem_Write+0x106>
 800d4c2:	68fb      	ldr	r3, [r7, #12]
 800d4c4:	681b      	ldr	r3, [r3, #0]
 800d4c6:	681a      	ldr	r2, [r3, #0]
 800d4c8:	68fb      	ldr	r3, [r7, #12]
 800d4ca:	681b      	ldr	r3, [r3, #0]
 800d4cc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d4d0:	601a      	str	r2, [r3, #0]
 800d4d2:	2301      	movs	r3, #1
 800d4d4:	e06b      	b.n	800d5ae <HAL_I2C_Mem_Write+0x1e2>
 800d4d6:	68fb      	ldr	r3, [r7, #12]
 800d4d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d4da:	781a      	ldrb	r2, [r3, #0]
 800d4dc:	68fb      	ldr	r3, [r7, #12]
 800d4de:	681b      	ldr	r3, [r3, #0]
 800d4e0:	611a      	str	r2, [r3, #16]
 800d4e2:	68fb      	ldr	r3, [r7, #12]
 800d4e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d4e6:	1c5a      	adds	r2, r3, #1
 800d4e8:	68fb      	ldr	r3, [r7, #12]
 800d4ea:	625a      	str	r2, [r3, #36]	@ 0x24
 800d4ec:	68fb      	ldr	r3, [r7, #12]
 800d4ee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d4f0:	3b01      	subs	r3, #1
 800d4f2:	b29a      	uxth	r2, r3
 800d4f4:	68fb      	ldr	r3, [r7, #12]
 800d4f6:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d4f8:	68fb      	ldr	r3, [r7, #12]
 800d4fa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d4fc:	b29b      	uxth	r3, r3
 800d4fe:	3b01      	subs	r3, #1
 800d500:	b29a      	uxth	r2, r3
 800d502:	68fb      	ldr	r3, [r7, #12]
 800d504:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d506:	68fb      	ldr	r3, [r7, #12]
 800d508:	681b      	ldr	r3, [r3, #0]
 800d50a:	695b      	ldr	r3, [r3, #20]
 800d50c:	f003 0304 	and.w	r3, r3, #4
 800d510:	2b04      	cmp	r3, #4
 800d512:	d11b      	bne.n	800d54c <HAL_I2C_Mem_Write+0x180>
 800d514:	68fb      	ldr	r3, [r7, #12]
 800d516:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d518:	2b00      	cmp	r3, #0
 800d51a:	d017      	beq.n	800d54c <HAL_I2C_Mem_Write+0x180>
 800d51c:	68fb      	ldr	r3, [r7, #12]
 800d51e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d520:	781a      	ldrb	r2, [r3, #0]
 800d522:	68fb      	ldr	r3, [r7, #12]
 800d524:	681b      	ldr	r3, [r3, #0]
 800d526:	611a      	str	r2, [r3, #16]
 800d528:	68fb      	ldr	r3, [r7, #12]
 800d52a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d52c:	1c5a      	adds	r2, r3, #1
 800d52e:	68fb      	ldr	r3, [r7, #12]
 800d530:	625a      	str	r2, [r3, #36]	@ 0x24
 800d532:	68fb      	ldr	r3, [r7, #12]
 800d534:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d536:	3b01      	subs	r3, #1
 800d538:	b29a      	uxth	r2, r3
 800d53a:	68fb      	ldr	r3, [r7, #12]
 800d53c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d53e:	68fb      	ldr	r3, [r7, #12]
 800d540:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d542:	b29b      	uxth	r3, r3
 800d544:	3b01      	subs	r3, #1
 800d546:	b29a      	uxth	r2, r3
 800d548:	68fb      	ldr	r3, [r7, #12]
 800d54a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d54c:	68fb      	ldr	r3, [r7, #12]
 800d54e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d550:	2b00      	cmp	r3, #0
 800d552:	d1aa      	bne.n	800d4aa <HAL_I2C_Mem_Write+0xde>
 800d554:	697a      	ldr	r2, [r7, #20]
 800d556:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800d558:	68f8      	ldr	r0, [r7, #12]
 800d55a:	f001 fab8 	bl	800eace <I2C_WaitOnBTFFlagUntilTimeout>
 800d55e:	4603      	mov	r3, r0
 800d560:	2b00      	cmp	r3, #0
 800d562:	d00d      	beq.n	800d580 <HAL_I2C_Mem_Write+0x1b4>
 800d564:	68fb      	ldr	r3, [r7, #12]
 800d566:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d568:	2b04      	cmp	r3, #4
 800d56a:	d107      	bne.n	800d57c <HAL_I2C_Mem_Write+0x1b0>
 800d56c:	68fb      	ldr	r3, [r7, #12]
 800d56e:	681b      	ldr	r3, [r3, #0]
 800d570:	681a      	ldr	r2, [r3, #0]
 800d572:	68fb      	ldr	r3, [r7, #12]
 800d574:	681b      	ldr	r3, [r3, #0]
 800d576:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d57a:	601a      	str	r2, [r3, #0]
 800d57c:	2301      	movs	r3, #1
 800d57e:	e016      	b.n	800d5ae <HAL_I2C_Mem_Write+0x1e2>
 800d580:	68fb      	ldr	r3, [r7, #12]
 800d582:	681b      	ldr	r3, [r3, #0]
 800d584:	681a      	ldr	r2, [r3, #0]
 800d586:	68fb      	ldr	r3, [r7, #12]
 800d588:	681b      	ldr	r3, [r3, #0]
 800d58a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d58e:	601a      	str	r2, [r3, #0]
 800d590:	68fb      	ldr	r3, [r7, #12]
 800d592:	2220      	movs	r2, #32
 800d594:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d598:	68fb      	ldr	r3, [r7, #12]
 800d59a:	2200      	movs	r2, #0
 800d59c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d5a0:	68fb      	ldr	r3, [r7, #12]
 800d5a2:	2200      	movs	r2, #0
 800d5a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d5a8:	2300      	movs	r3, #0
 800d5aa:	e000      	b.n	800d5ae <HAL_I2C_Mem_Write+0x1e2>
 800d5ac:	2302      	movs	r3, #2
 800d5ae:	4618      	mov	r0, r3
 800d5b0:	3718      	adds	r7, #24
 800d5b2:	46bd      	mov	sp, r7
 800d5b4:	bd80      	pop	{r7, pc}
 800d5b6:	bf00      	nop
 800d5b8:	00100002 	.word	0x00100002
 800d5bc:	ffff0000 	.word	0xffff0000

0800d5c0 <HAL_I2C_Mem_Read>:
 800d5c0:	b580      	push	{r7, lr}
 800d5c2:	b08c      	sub	sp, #48	@ 0x30
 800d5c4:	af02      	add	r7, sp, #8
 800d5c6:	60f8      	str	r0, [r7, #12]
 800d5c8:	4608      	mov	r0, r1
 800d5ca:	4611      	mov	r1, r2
 800d5cc:	461a      	mov	r2, r3
 800d5ce:	4603      	mov	r3, r0
 800d5d0:	817b      	strh	r3, [r7, #10]
 800d5d2:	460b      	mov	r3, r1
 800d5d4:	813b      	strh	r3, [r7, #8]
 800d5d6:	4613      	mov	r3, r2
 800d5d8:	80fb      	strh	r3, [r7, #6]
 800d5da:	f7fd fdb1 	bl	800b140 <HAL_GetTick>
 800d5de:	6278      	str	r0, [r7, #36]	@ 0x24
 800d5e0:	68fb      	ldr	r3, [r7, #12]
 800d5e2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d5e6:	b2db      	uxtb	r3, r3
 800d5e8:	2b20      	cmp	r3, #32
 800d5ea:	f040 8208 	bne.w	800d9fe <HAL_I2C_Mem_Read+0x43e>
 800d5ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d5f0:	9300      	str	r3, [sp, #0]
 800d5f2:	2319      	movs	r3, #25
 800d5f4:	2201      	movs	r2, #1
 800d5f6:	497b      	ldr	r1, [pc, #492]	@ (800d7e4 <HAL_I2C_Mem_Read+0x224>)
 800d5f8:	68f8      	ldr	r0, [r7, #12]
 800d5fa:	f001 f951 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800d5fe:	4603      	mov	r3, r0
 800d600:	2b00      	cmp	r3, #0
 800d602:	d001      	beq.n	800d608 <HAL_I2C_Mem_Read+0x48>
 800d604:	2302      	movs	r3, #2
 800d606:	e1fb      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d608:	68fb      	ldr	r3, [r7, #12]
 800d60a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d60e:	2b01      	cmp	r3, #1
 800d610:	d101      	bne.n	800d616 <HAL_I2C_Mem_Read+0x56>
 800d612:	2302      	movs	r3, #2
 800d614:	e1f4      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d616:	68fb      	ldr	r3, [r7, #12]
 800d618:	2201      	movs	r2, #1
 800d61a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d61e:	68fb      	ldr	r3, [r7, #12]
 800d620:	681b      	ldr	r3, [r3, #0]
 800d622:	681b      	ldr	r3, [r3, #0]
 800d624:	f003 0301 	and.w	r3, r3, #1
 800d628:	2b01      	cmp	r3, #1
 800d62a:	d007      	beq.n	800d63c <HAL_I2C_Mem_Read+0x7c>
 800d62c:	68fb      	ldr	r3, [r7, #12]
 800d62e:	681b      	ldr	r3, [r3, #0]
 800d630:	681a      	ldr	r2, [r3, #0]
 800d632:	68fb      	ldr	r3, [r7, #12]
 800d634:	681b      	ldr	r3, [r3, #0]
 800d636:	f042 0201 	orr.w	r2, r2, #1
 800d63a:	601a      	str	r2, [r3, #0]
 800d63c:	68fb      	ldr	r3, [r7, #12]
 800d63e:	681b      	ldr	r3, [r3, #0]
 800d640:	681a      	ldr	r2, [r3, #0]
 800d642:	68fb      	ldr	r3, [r7, #12]
 800d644:	681b      	ldr	r3, [r3, #0]
 800d646:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d64a:	601a      	str	r2, [r3, #0]
 800d64c:	68fb      	ldr	r3, [r7, #12]
 800d64e:	2222      	movs	r2, #34	@ 0x22
 800d650:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d654:	68fb      	ldr	r3, [r7, #12]
 800d656:	2240      	movs	r2, #64	@ 0x40
 800d658:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d65c:	68fb      	ldr	r3, [r7, #12]
 800d65e:	2200      	movs	r2, #0
 800d660:	641a      	str	r2, [r3, #64]	@ 0x40
 800d662:	68fb      	ldr	r3, [r7, #12]
 800d664:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800d666:	625a      	str	r2, [r3, #36]	@ 0x24
 800d668:	68fb      	ldr	r3, [r7, #12]
 800d66a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800d66c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d66e:	68fb      	ldr	r3, [r7, #12]
 800d670:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d672:	b29a      	uxth	r2, r3
 800d674:	68fb      	ldr	r3, [r7, #12]
 800d676:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d678:	68fb      	ldr	r3, [r7, #12]
 800d67a:	4a5b      	ldr	r2, [pc, #364]	@ (800d7e8 <HAL_I2C_Mem_Read+0x228>)
 800d67c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d67e:	88f8      	ldrh	r0, [r7, #6]
 800d680:	893a      	ldrh	r2, [r7, #8]
 800d682:	8979      	ldrh	r1, [r7, #10]
 800d684:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d686:	9301      	str	r3, [sp, #4]
 800d688:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d68a:	9300      	str	r3, [sp, #0]
 800d68c:	4603      	mov	r3, r0
 800d68e:	68f8      	ldr	r0, [r7, #12]
 800d690:	f000 fe64 	bl	800e35c <I2C_RequestMemoryRead>
 800d694:	4603      	mov	r3, r0
 800d696:	2b00      	cmp	r3, #0
 800d698:	d001      	beq.n	800d69e <HAL_I2C_Mem_Read+0xde>
 800d69a:	2301      	movs	r3, #1
 800d69c:	e1b0      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d69e:	68fb      	ldr	r3, [r7, #12]
 800d6a0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d6a2:	2b00      	cmp	r3, #0
 800d6a4:	d113      	bne.n	800d6ce <HAL_I2C_Mem_Read+0x10e>
 800d6a6:	2300      	movs	r3, #0
 800d6a8:	623b      	str	r3, [r7, #32]
 800d6aa:	68fb      	ldr	r3, [r7, #12]
 800d6ac:	681b      	ldr	r3, [r3, #0]
 800d6ae:	695b      	ldr	r3, [r3, #20]
 800d6b0:	623b      	str	r3, [r7, #32]
 800d6b2:	68fb      	ldr	r3, [r7, #12]
 800d6b4:	681b      	ldr	r3, [r3, #0]
 800d6b6:	699b      	ldr	r3, [r3, #24]
 800d6b8:	623b      	str	r3, [r7, #32]
 800d6ba:	6a3b      	ldr	r3, [r7, #32]
 800d6bc:	68fb      	ldr	r3, [r7, #12]
 800d6be:	681b      	ldr	r3, [r3, #0]
 800d6c0:	681a      	ldr	r2, [r3, #0]
 800d6c2:	68fb      	ldr	r3, [r7, #12]
 800d6c4:	681b      	ldr	r3, [r3, #0]
 800d6c6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d6ca:	601a      	str	r2, [r3, #0]
 800d6cc:	e184      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d6ce:	68fb      	ldr	r3, [r7, #12]
 800d6d0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d6d2:	2b01      	cmp	r3, #1
 800d6d4:	d11b      	bne.n	800d70e <HAL_I2C_Mem_Read+0x14e>
 800d6d6:	68fb      	ldr	r3, [r7, #12]
 800d6d8:	681b      	ldr	r3, [r3, #0]
 800d6da:	681a      	ldr	r2, [r3, #0]
 800d6dc:	68fb      	ldr	r3, [r7, #12]
 800d6de:	681b      	ldr	r3, [r3, #0]
 800d6e0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d6e4:	601a      	str	r2, [r3, #0]
 800d6e6:	2300      	movs	r3, #0
 800d6e8:	61fb      	str	r3, [r7, #28]
 800d6ea:	68fb      	ldr	r3, [r7, #12]
 800d6ec:	681b      	ldr	r3, [r3, #0]
 800d6ee:	695b      	ldr	r3, [r3, #20]
 800d6f0:	61fb      	str	r3, [r7, #28]
 800d6f2:	68fb      	ldr	r3, [r7, #12]
 800d6f4:	681b      	ldr	r3, [r3, #0]
 800d6f6:	699b      	ldr	r3, [r3, #24]
 800d6f8:	61fb      	str	r3, [r7, #28]
 800d6fa:	69fb      	ldr	r3, [r7, #28]
 800d6fc:	68fb      	ldr	r3, [r7, #12]
 800d6fe:	681b      	ldr	r3, [r3, #0]
 800d700:	681a      	ldr	r2, [r3, #0]
 800d702:	68fb      	ldr	r3, [r7, #12]
 800d704:	681b      	ldr	r3, [r3, #0]
 800d706:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d70a:	601a      	str	r2, [r3, #0]
 800d70c:	e164      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d70e:	68fb      	ldr	r3, [r7, #12]
 800d710:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d712:	2b02      	cmp	r3, #2
 800d714:	d11b      	bne.n	800d74e <HAL_I2C_Mem_Read+0x18e>
 800d716:	68fb      	ldr	r3, [r7, #12]
 800d718:	681b      	ldr	r3, [r3, #0]
 800d71a:	681a      	ldr	r2, [r3, #0]
 800d71c:	68fb      	ldr	r3, [r7, #12]
 800d71e:	681b      	ldr	r3, [r3, #0]
 800d720:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d724:	601a      	str	r2, [r3, #0]
 800d726:	68fb      	ldr	r3, [r7, #12]
 800d728:	681b      	ldr	r3, [r3, #0]
 800d72a:	681a      	ldr	r2, [r3, #0]
 800d72c:	68fb      	ldr	r3, [r7, #12]
 800d72e:	681b      	ldr	r3, [r3, #0]
 800d730:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800d734:	601a      	str	r2, [r3, #0]
 800d736:	2300      	movs	r3, #0
 800d738:	61bb      	str	r3, [r7, #24]
 800d73a:	68fb      	ldr	r3, [r7, #12]
 800d73c:	681b      	ldr	r3, [r3, #0]
 800d73e:	695b      	ldr	r3, [r3, #20]
 800d740:	61bb      	str	r3, [r7, #24]
 800d742:	68fb      	ldr	r3, [r7, #12]
 800d744:	681b      	ldr	r3, [r3, #0]
 800d746:	699b      	ldr	r3, [r3, #24]
 800d748:	61bb      	str	r3, [r7, #24]
 800d74a:	69bb      	ldr	r3, [r7, #24]
 800d74c:	e144      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d74e:	2300      	movs	r3, #0
 800d750:	617b      	str	r3, [r7, #20]
 800d752:	68fb      	ldr	r3, [r7, #12]
 800d754:	681b      	ldr	r3, [r3, #0]
 800d756:	695b      	ldr	r3, [r3, #20]
 800d758:	617b      	str	r3, [r7, #20]
 800d75a:	68fb      	ldr	r3, [r7, #12]
 800d75c:	681b      	ldr	r3, [r3, #0]
 800d75e:	699b      	ldr	r3, [r3, #24]
 800d760:	617b      	str	r3, [r7, #20]
 800d762:	697b      	ldr	r3, [r7, #20]
 800d764:	e138      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d766:	68fb      	ldr	r3, [r7, #12]
 800d768:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d76a:	2b03      	cmp	r3, #3
 800d76c:	f200 80f1 	bhi.w	800d952 <HAL_I2C_Mem_Read+0x392>
 800d770:	68fb      	ldr	r3, [r7, #12]
 800d772:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d774:	2b01      	cmp	r3, #1
 800d776:	d123      	bne.n	800d7c0 <HAL_I2C_Mem_Read+0x200>
 800d778:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d77a:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d77c:	68f8      	ldr	r0, [r7, #12]
 800d77e:	f001 f9e7 	bl	800eb50 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d782:	4603      	mov	r3, r0
 800d784:	2b00      	cmp	r3, #0
 800d786:	d001      	beq.n	800d78c <HAL_I2C_Mem_Read+0x1cc>
 800d788:	2301      	movs	r3, #1
 800d78a:	e139      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d78c:	68fb      	ldr	r3, [r7, #12]
 800d78e:	681b      	ldr	r3, [r3, #0]
 800d790:	691a      	ldr	r2, [r3, #16]
 800d792:	68fb      	ldr	r3, [r7, #12]
 800d794:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d796:	b2d2      	uxtb	r2, r2
 800d798:	701a      	strb	r2, [r3, #0]
 800d79a:	68fb      	ldr	r3, [r7, #12]
 800d79c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d79e:	1c5a      	adds	r2, r3, #1
 800d7a0:	68fb      	ldr	r3, [r7, #12]
 800d7a2:	625a      	str	r2, [r3, #36]	@ 0x24
 800d7a4:	68fb      	ldr	r3, [r7, #12]
 800d7a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d7a8:	3b01      	subs	r3, #1
 800d7aa:	b29a      	uxth	r2, r3
 800d7ac:	68fb      	ldr	r3, [r7, #12]
 800d7ae:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d7b0:	68fb      	ldr	r3, [r7, #12]
 800d7b2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d7b4:	b29b      	uxth	r3, r3
 800d7b6:	3b01      	subs	r3, #1
 800d7b8:	b29a      	uxth	r2, r3
 800d7ba:	68fb      	ldr	r3, [r7, #12]
 800d7bc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d7be:	e10b      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d7c0:	68fb      	ldr	r3, [r7, #12]
 800d7c2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d7c4:	2b02      	cmp	r3, #2
 800d7c6:	d14e      	bne.n	800d866 <HAL_I2C_Mem_Read+0x2a6>
 800d7c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d7ca:	9300      	str	r3, [sp, #0]
 800d7cc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7ce:	2200      	movs	r2, #0
 800d7d0:	4906      	ldr	r1, [pc, #24]	@ (800d7ec <HAL_I2C_Mem_Read+0x22c>)
 800d7d2:	68f8      	ldr	r0, [r7, #12]
 800d7d4:	f001 f864 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800d7d8:	4603      	mov	r3, r0
 800d7da:	2b00      	cmp	r3, #0
 800d7dc:	d008      	beq.n	800d7f0 <HAL_I2C_Mem_Read+0x230>
 800d7de:	2301      	movs	r3, #1
 800d7e0:	e10e      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d7e2:	bf00      	nop
 800d7e4:	00100002 	.word	0x00100002
 800d7e8:	ffff0000 	.word	0xffff0000
 800d7ec:	00010004 	.word	0x00010004
 800d7f0:	68fb      	ldr	r3, [r7, #12]
 800d7f2:	681b      	ldr	r3, [r3, #0]
 800d7f4:	681a      	ldr	r2, [r3, #0]
 800d7f6:	68fb      	ldr	r3, [r7, #12]
 800d7f8:	681b      	ldr	r3, [r3, #0]
 800d7fa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d7fe:	601a      	str	r2, [r3, #0]
 800d800:	68fb      	ldr	r3, [r7, #12]
 800d802:	681b      	ldr	r3, [r3, #0]
 800d804:	691a      	ldr	r2, [r3, #16]
 800d806:	68fb      	ldr	r3, [r7, #12]
 800d808:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d80a:	b2d2      	uxtb	r2, r2
 800d80c:	701a      	strb	r2, [r3, #0]
 800d80e:	68fb      	ldr	r3, [r7, #12]
 800d810:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d812:	1c5a      	adds	r2, r3, #1
 800d814:	68fb      	ldr	r3, [r7, #12]
 800d816:	625a      	str	r2, [r3, #36]	@ 0x24
 800d818:	68fb      	ldr	r3, [r7, #12]
 800d81a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d81c:	3b01      	subs	r3, #1
 800d81e:	b29a      	uxth	r2, r3
 800d820:	68fb      	ldr	r3, [r7, #12]
 800d822:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d824:	68fb      	ldr	r3, [r7, #12]
 800d826:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d828:	b29b      	uxth	r3, r3
 800d82a:	3b01      	subs	r3, #1
 800d82c:	b29a      	uxth	r2, r3
 800d82e:	68fb      	ldr	r3, [r7, #12]
 800d830:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d832:	68fb      	ldr	r3, [r7, #12]
 800d834:	681b      	ldr	r3, [r3, #0]
 800d836:	691a      	ldr	r2, [r3, #16]
 800d838:	68fb      	ldr	r3, [r7, #12]
 800d83a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d83c:	b2d2      	uxtb	r2, r2
 800d83e:	701a      	strb	r2, [r3, #0]
 800d840:	68fb      	ldr	r3, [r7, #12]
 800d842:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d844:	1c5a      	adds	r2, r3, #1
 800d846:	68fb      	ldr	r3, [r7, #12]
 800d848:	625a      	str	r2, [r3, #36]	@ 0x24
 800d84a:	68fb      	ldr	r3, [r7, #12]
 800d84c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d84e:	3b01      	subs	r3, #1
 800d850:	b29a      	uxth	r2, r3
 800d852:	68fb      	ldr	r3, [r7, #12]
 800d854:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d856:	68fb      	ldr	r3, [r7, #12]
 800d858:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d85a:	b29b      	uxth	r3, r3
 800d85c:	3b01      	subs	r3, #1
 800d85e:	b29a      	uxth	r2, r3
 800d860:	68fb      	ldr	r3, [r7, #12]
 800d862:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d864:	e0b8      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d866:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d868:	9300      	str	r3, [sp, #0]
 800d86a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d86c:	2200      	movs	r2, #0
 800d86e:	4966      	ldr	r1, [pc, #408]	@ (800da08 <HAL_I2C_Mem_Read+0x448>)
 800d870:	68f8      	ldr	r0, [r7, #12]
 800d872:	f001 f815 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800d876:	4603      	mov	r3, r0
 800d878:	2b00      	cmp	r3, #0
 800d87a:	d001      	beq.n	800d880 <HAL_I2C_Mem_Read+0x2c0>
 800d87c:	2301      	movs	r3, #1
 800d87e:	e0bf      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d880:	68fb      	ldr	r3, [r7, #12]
 800d882:	681b      	ldr	r3, [r3, #0]
 800d884:	681a      	ldr	r2, [r3, #0]
 800d886:	68fb      	ldr	r3, [r7, #12]
 800d888:	681b      	ldr	r3, [r3, #0]
 800d88a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d88e:	601a      	str	r2, [r3, #0]
 800d890:	68fb      	ldr	r3, [r7, #12]
 800d892:	681b      	ldr	r3, [r3, #0]
 800d894:	691a      	ldr	r2, [r3, #16]
 800d896:	68fb      	ldr	r3, [r7, #12]
 800d898:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d89a:	b2d2      	uxtb	r2, r2
 800d89c:	701a      	strb	r2, [r3, #0]
 800d89e:	68fb      	ldr	r3, [r7, #12]
 800d8a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d8a2:	1c5a      	adds	r2, r3, #1
 800d8a4:	68fb      	ldr	r3, [r7, #12]
 800d8a6:	625a      	str	r2, [r3, #36]	@ 0x24
 800d8a8:	68fb      	ldr	r3, [r7, #12]
 800d8aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d8ac:	3b01      	subs	r3, #1
 800d8ae:	b29a      	uxth	r2, r3
 800d8b0:	68fb      	ldr	r3, [r7, #12]
 800d8b2:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d8b4:	68fb      	ldr	r3, [r7, #12]
 800d8b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d8b8:	b29b      	uxth	r3, r3
 800d8ba:	3b01      	subs	r3, #1
 800d8bc:	b29a      	uxth	r2, r3
 800d8be:	68fb      	ldr	r3, [r7, #12]
 800d8c0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d8c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d8c4:	9300      	str	r3, [sp, #0]
 800d8c6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d8c8:	2200      	movs	r2, #0
 800d8ca:	494f      	ldr	r1, [pc, #316]	@ (800da08 <HAL_I2C_Mem_Read+0x448>)
 800d8cc:	68f8      	ldr	r0, [r7, #12]
 800d8ce:	f000 ffe7 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800d8d2:	4603      	mov	r3, r0
 800d8d4:	2b00      	cmp	r3, #0
 800d8d6:	d001      	beq.n	800d8dc <HAL_I2C_Mem_Read+0x31c>
 800d8d8:	2301      	movs	r3, #1
 800d8da:	e091      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d8dc:	68fb      	ldr	r3, [r7, #12]
 800d8de:	681b      	ldr	r3, [r3, #0]
 800d8e0:	681a      	ldr	r2, [r3, #0]
 800d8e2:	68fb      	ldr	r3, [r7, #12]
 800d8e4:	681b      	ldr	r3, [r3, #0]
 800d8e6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d8ea:	601a      	str	r2, [r3, #0]
 800d8ec:	68fb      	ldr	r3, [r7, #12]
 800d8ee:	681b      	ldr	r3, [r3, #0]
 800d8f0:	691a      	ldr	r2, [r3, #16]
 800d8f2:	68fb      	ldr	r3, [r7, #12]
 800d8f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d8f6:	b2d2      	uxtb	r2, r2
 800d8f8:	701a      	strb	r2, [r3, #0]
 800d8fa:	68fb      	ldr	r3, [r7, #12]
 800d8fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d8fe:	1c5a      	adds	r2, r3, #1
 800d900:	68fb      	ldr	r3, [r7, #12]
 800d902:	625a      	str	r2, [r3, #36]	@ 0x24
 800d904:	68fb      	ldr	r3, [r7, #12]
 800d906:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d908:	3b01      	subs	r3, #1
 800d90a:	b29a      	uxth	r2, r3
 800d90c:	68fb      	ldr	r3, [r7, #12]
 800d90e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d910:	68fb      	ldr	r3, [r7, #12]
 800d912:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d914:	b29b      	uxth	r3, r3
 800d916:	3b01      	subs	r3, #1
 800d918:	b29a      	uxth	r2, r3
 800d91a:	68fb      	ldr	r3, [r7, #12]
 800d91c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d91e:	68fb      	ldr	r3, [r7, #12]
 800d920:	681b      	ldr	r3, [r3, #0]
 800d922:	691a      	ldr	r2, [r3, #16]
 800d924:	68fb      	ldr	r3, [r7, #12]
 800d926:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d928:	b2d2      	uxtb	r2, r2
 800d92a:	701a      	strb	r2, [r3, #0]
 800d92c:	68fb      	ldr	r3, [r7, #12]
 800d92e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d930:	1c5a      	adds	r2, r3, #1
 800d932:	68fb      	ldr	r3, [r7, #12]
 800d934:	625a      	str	r2, [r3, #36]	@ 0x24
 800d936:	68fb      	ldr	r3, [r7, #12]
 800d938:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d93a:	3b01      	subs	r3, #1
 800d93c:	b29a      	uxth	r2, r3
 800d93e:	68fb      	ldr	r3, [r7, #12]
 800d940:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d942:	68fb      	ldr	r3, [r7, #12]
 800d944:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d946:	b29b      	uxth	r3, r3
 800d948:	3b01      	subs	r3, #1
 800d94a:	b29a      	uxth	r2, r3
 800d94c:	68fb      	ldr	r3, [r7, #12]
 800d94e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d950:	e042      	b.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d952:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d954:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d956:	68f8      	ldr	r0, [r7, #12]
 800d958:	f001 f8fa 	bl	800eb50 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d95c:	4603      	mov	r3, r0
 800d95e:	2b00      	cmp	r3, #0
 800d960:	d001      	beq.n	800d966 <HAL_I2C_Mem_Read+0x3a6>
 800d962:	2301      	movs	r3, #1
 800d964:	e04c      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d966:	68fb      	ldr	r3, [r7, #12]
 800d968:	681b      	ldr	r3, [r3, #0]
 800d96a:	691a      	ldr	r2, [r3, #16]
 800d96c:	68fb      	ldr	r3, [r7, #12]
 800d96e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d970:	b2d2      	uxtb	r2, r2
 800d972:	701a      	strb	r2, [r3, #0]
 800d974:	68fb      	ldr	r3, [r7, #12]
 800d976:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d978:	1c5a      	adds	r2, r3, #1
 800d97a:	68fb      	ldr	r3, [r7, #12]
 800d97c:	625a      	str	r2, [r3, #36]	@ 0x24
 800d97e:	68fb      	ldr	r3, [r7, #12]
 800d980:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d982:	3b01      	subs	r3, #1
 800d984:	b29a      	uxth	r2, r3
 800d986:	68fb      	ldr	r3, [r7, #12]
 800d988:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d98a:	68fb      	ldr	r3, [r7, #12]
 800d98c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d98e:	b29b      	uxth	r3, r3
 800d990:	3b01      	subs	r3, #1
 800d992:	b29a      	uxth	r2, r3
 800d994:	68fb      	ldr	r3, [r7, #12]
 800d996:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d998:	68fb      	ldr	r3, [r7, #12]
 800d99a:	681b      	ldr	r3, [r3, #0]
 800d99c:	695b      	ldr	r3, [r3, #20]
 800d99e:	f003 0304 	and.w	r3, r3, #4
 800d9a2:	2b04      	cmp	r3, #4
 800d9a4:	d118      	bne.n	800d9d8 <HAL_I2C_Mem_Read+0x418>
 800d9a6:	68fb      	ldr	r3, [r7, #12]
 800d9a8:	681b      	ldr	r3, [r3, #0]
 800d9aa:	691a      	ldr	r2, [r3, #16]
 800d9ac:	68fb      	ldr	r3, [r7, #12]
 800d9ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d9b0:	b2d2      	uxtb	r2, r2
 800d9b2:	701a      	strb	r2, [r3, #0]
 800d9b4:	68fb      	ldr	r3, [r7, #12]
 800d9b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d9b8:	1c5a      	adds	r2, r3, #1
 800d9ba:	68fb      	ldr	r3, [r7, #12]
 800d9bc:	625a      	str	r2, [r3, #36]	@ 0x24
 800d9be:	68fb      	ldr	r3, [r7, #12]
 800d9c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d9c2:	3b01      	subs	r3, #1
 800d9c4:	b29a      	uxth	r2, r3
 800d9c6:	68fb      	ldr	r3, [r7, #12]
 800d9c8:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d9ca:	68fb      	ldr	r3, [r7, #12]
 800d9cc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d9ce:	b29b      	uxth	r3, r3
 800d9d0:	3b01      	subs	r3, #1
 800d9d2:	b29a      	uxth	r2, r3
 800d9d4:	68fb      	ldr	r3, [r7, #12]
 800d9d6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d9d8:	68fb      	ldr	r3, [r7, #12]
 800d9da:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d9dc:	2b00      	cmp	r3, #0
 800d9de:	f47f aec2 	bne.w	800d766 <HAL_I2C_Mem_Read+0x1a6>
 800d9e2:	68fb      	ldr	r3, [r7, #12]
 800d9e4:	2220      	movs	r2, #32
 800d9e6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d9ea:	68fb      	ldr	r3, [r7, #12]
 800d9ec:	2200      	movs	r2, #0
 800d9ee:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d9f2:	68fb      	ldr	r3, [r7, #12]
 800d9f4:	2200      	movs	r2, #0
 800d9f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d9fa:	2300      	movs	r3, #0
 800d9fc:	e000      	b.n	800da00 <HAL_I2C_Mem_Read+0x440>
 800d9fe:	2302      	movs	r3, #2
 800da00:	4618      	mov	r0, r3
 800da02:	3728      	adds	r7, #40	@ 0x28
 800da04:	46bd      	mov	sp, r7
 800da06:	bd80      	pop	{r7, pc}
 800da08:	00010004 	.word	0x00010004

0800da0c <HAL_I2C_Mem_Read_DMA>:
 800da0c:	b580      	push	{r7, lr}
 800da0e:	b08c      	sub	sp, #48	@ 0x30
 800da10:	af02      	add	r7, sp, #8
 800da12:	60f8      	str	r0, [r7, #12]
 800da14:	4608      	mov	r0, r1
 800da16:	4611      	mov	r1, r2
 800da18:	461a      	mov	r2, r3
 800da1a:	4603      	mov	r3, r0
 800da1c:	817b      	strh	r3, [r7, #10]
 800da1e:	460b      	mov	r3, r1
 800da20:	813b      	strh	r3, [r7, #8]
 800da22:	4613      	mov	r3, r2
 800da24:	80fb      	strh	r3, [r7, #6]
 800da26:	f7fd fb8b 	bl	800b140 <HAL_GetTick>
 800da2a:	6278      	str	r0, [r7, #36]	@ 0x24
 800da2c:	2300      	movs	r3, #0
 800da2e:	61fb      	str	r3, [r7, #28]
 800da30:	68fb      	ldr	r3, [r7, #12]
 800da32:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800da36:	b2db      	uxtb	r3, r3
 800da38:	2b20      	cmp	r3, #32
 800da3a:	f040 8176 	bne.w	800dd2a <HAL_I2C_Mem_Read_DMA+0x31e>
 800da3e:	4b95      	ldr	r3, [pc, #596]	@ (800dc94 <HAL_I2C_Mem_Read_DMA+0x288>)
 800da40:	681b      	ldr	r3, [r3, #0]
 800da42:	08db      	lsrs	r3, r3, #3
 800da44:	4a94      	ldr	r2, [pc, #592]	@ (800dc98 <HAL_I2C_Mem_Read_DMA+0x28c>)
 800da46:	fba2 2303 	umull	r2, r3, r2, r3
 800da4a:	0a1a      	lsrs	r2, r3, #8
 800da4c:	4613      	mov	r3, r2
 800da4e:	009b      	lsls	r3, r3, #2
 800da50:	4413      	add	r3, r2
 800da52:	009a      	lsls	r2, r3, #2
 800da54:	4413      	add	r3, r2
 800da56:	61fb      	str	r3, [r7, #28]
 800da58:	69fb      	ldr	r3, [r7, #28]
 800da5a:	3b01      	subs	r3, #1
 800da5c:	61fb      	str	r3, [r7, #28]
 800da5e:	69fb      	ldr	r3, [r7, #28]
 800da60:	2b00      	cmp	r3, #0
 800da62:	d116      	bne.n	800da92 <HAL_I2C_Mem_Read_DMA+0x86>
 800da64:	68fb      	ldr	r3, [r7, #12]
 800da66:	2200      	movs	r2, #0
 800da68:	631a      	str	r2, [r3, #48]	@ 0x30
 800da6a:	68fb      	ldr	r3, [r7, #12]
 800da6c:	2220      	movs	r2, #32
 800da6e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800da72:	68fb      	ldr	r3, [r7, #12]
 800da74:	2200      	movs	r2, #0
 800da76:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800da7a:	68fb      	ldr	r3, [r7, #12]
 800da7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800da7e:	f043 0220 	orr.w	r2, r3, #32
 800da82:	68fb      	ldr	r3, [r7, #12]
 800da84:	641a      	str	r2, [r3, #64]	@ 0x40
 800da86:	68fb      	ldr	r3, [r7, #12]
 800da88:	2200      	movs	r2, #0
 800da8a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800da8e:	2301      	movs	r3, #1
 800da90:	e14c      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800da92:	68fb      	ldr	r3, [r7, #12]
 800da94:	681b      	ldr	r3, [r3, #0]
 800da96:	699b      	ldr	r3, [r3, #24]
 800da98:	f003 0302 	and.w	r3, r3, #2
 800da9c:	2b02      	cmp	r3, #2
 800da9e:	d0db      	beq.n	800da58 <HAL_I2C_Mem_Read_DMA+0x4c>
 800daa0:	68fb      	ldr	r3, [r7, #12]
 800daa2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800daa6:	2b01      	cmp	r3, #1
 800daa8:	d101      	bne.n	800daae <HAL_I2C_Mem_Read_DMA+0xa2>
 800daaa:	2302      	movs	r3, #2
 800daac:	e13e      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800daae:	68fb      	ldr	r3, [r7, #12]
 800dab0:	2201      	movs	r2, #1
 800dab2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dab6:	68fb      	ldr	r3, [r7, #12]
 800dab8:	681b      	ldr	r3, [r3, #0]
 800daba:	681b      	ldr	r3, [r3, #0]
 800dabc:	f003 0301 	and.w	r3, r3, #1
 800dac0:	2b01      	cmp	r3, #1
 800dac2:	d007      	beq.n	800dad4 <HAL_I2C_Mem_Read_DMA+0xc8>
 800dac4:	68fb      	ldr	r3, [r7, #12]
 800dac6:	681b      	ldr	r3, [r3, #0]
 800dac8:	681a      	ldr	r2, [r3, #0]
 800daca:	68fb      	ldr	r3, [r7, #12]
 800dacc:	681b      	ldr	r3, [r3, #0]
 800dace:	f042 0201 	orr.w	r2, r2, #1
 800dad2:	601a      	str	r2, [r3, #0]
 800dad4:	68fb      	ldr	r3, [r7, #12]
 800dad6:	681b      	ldr	r3, [r3, #0]
 800dad8:	681a      	ldr	r2, [r3, #0]
 800dada:	68fb      	ldr	r3, [r7, #12]
 800dadc:	681b      	ldr	r3, [r3, #0]
 800dade:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800dae2:	601a      	str	r2, [r3, #0]
 800dae4:	68fb      	ldr	r3, [r7, #12]
 800dae6:	2222      	movs	r2, #34	@ 0x22
 800dae8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800daec:	68fb      	ldr	r3, [r7, #12]
 800daee:	2240      	movs	r2, #64	@ 0x40
 800daf0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800daf4:	68fb      	ldr	r3, [r7, #12]
 800daf6:	2200      	movs	r2, #0
 800daf8:	641a      	str	r2, [r3, #64]	@ 0x40
 800dafa:	68fb      	ldr	r3, [r7, #12]
 800dafc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800dafe:	625a      	str	r2, [r3, #36]	@ 0x24
 800db00:	68fb      	ldr	r3, [r7, #12]
 800db02:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800db04:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800db06:	68fb      	ldr	r3, [r7, #12]
 800db08:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800db0a:	b29a      	uxth	r2, r3
 800db0c:	68fb      	ldr	r3, [r7, #12]
 800db0e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800db10:	68fb      	ldr	r3, [r7, #12]
 800db12:	4a62      	ldr	r2, [pc, #392]	@ (800dc9c <HAL_I2C_Mem_Read_DMA+0x290>)
 800db14:	62da      	str	r2, [r3, #44]	@ 0x2c
 800db16:	897a      	ldrh	r2, [r7, #10]
 800db18:	68fb      	ldr	r3, [r7, #12]
 800db1a:	645a      	str	r2, [r3, #68]	@ 0x44
 800db1c:	893a      	ldrh	r2, [r7, #8]
 800db1e:	68fb      	ldr	r3, [r7, #12]
 800db20:	649a      	str	r2, [r3, #72]	@ 0x48
 800db22:	88fa      	ldrh	r2, [r7, #6]
 800db24:	68fb      	ldr	r3, [r7, #12]
 800db26:	64da      	str	r2, [r3, #76]	@ 0x4c
 800db28:	68fb      	ldr	r3, [r7, #12]
 800db2a:	2200      	movs	r2, #0
 800db2c:	651a      	str	r2, [r3, #80]	@ 0x50
 800db2e:	68fb      	ldr	r3, [r7, #12]
 800db30:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800db32:	2b00      	cmp	r3, #0
 800db34:	f000 80cc 	beq.w	800dcd0 <HAL_I2C_Mem_Read_DMA+0x2c4>
 800db38:	68fb      	ldr	r3, [r7, #12]
 800db3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db3c:	2b00      	cmp	r3, #0
 800db3e:	d02d      	beq.n	800db9c <HAL_I2C_Mem_Read_DMA+0x190>
 800db40:	68fb      	ldr	r3, [r7, #12]
 800db42:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db44:	4a56      	ldr	r2, [pc, #344]	@ (800dca0 <HAL_I2C_Mem_Read_DMA+0x294>)
 800db46:	63da      	str	r2, [r3, #60]	@ 0x3c
 800db48:	68fb      	ldr	r3, [r7, #12]
 800db4a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db4c:	4a55      	ldr	r2, [pc, #340]	@ (800dca4 <HAL_I2C_Mem_Read_DMA+0x298>)
 800db4e:	64da      	str	r2, [r3, #76]	@ 0x4c
 800db50:	68fb      	ldr	r3, [r7, #12]
 800db52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db54:	2200      	movs	r2, #0
 800db56:	641a      	str	r2, [r3, #64]	@ 0x40
 800db58:	68fb      	ldr	r3, [r7, #12]
 800db5a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db5c:	2200      	movs	r2, #0
 800db5e:	645a      	str	r2, [r3, #68]	@ 0x44
 800db60:	68fb      	ldr	r3, [r7, #12]
 800db62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db64:	2200      	movs	r2, #0
 800db66:	649a      	str	r2, [r3, #72]	@ 0x48
 800db68:	68fb      	ldr	r3, [r7, #12]
 800db6a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db6c:	2200      	movs	r2, #0
 800db6e:	651a      	str	r2, [r3, #80]	@ 0x50
 800db70:	68fb      	ldr	r3, [r7, #12]
 800db72:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800db74:	68fb      	ldr	r3, [r7, #12]
 800db76:	681b      	ldr	r3, [r3, #0]
 800db78:	3310      	adds	r3, #16
 800db7a:	4619      	mov	r1, r3
 800db7c:	68fb      	ldr	r3, [r7, #12]
 800db7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800db80:	461a      	mov	r2, r3
 800db82:	68fb      	ldr	r3, [r7, #12]
 800db84:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800db86:	f7fe fdaf 	bl	800c6e8 <HAL_DMA_Start_IT>
 800db8a:	4603      	mov	r3, r0
 800db8c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800db90:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800db94:	2b00      	cmp	r3, #0
 800db96:	f040 8087 	bne.w	800dca8 <HAL_I2C_Mem_Read_DMA+0x29c>
 800db9a:	e013      	b.n	800dbc4 <HAL_I2C_Mem_Read_DMA+0x1b8>
 800db9c:	68fb      	ldr	r3, [r7, #12]
 800db9e:	2220      	movs	r2, #32
 800dba0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dba4:	68fb      	ldr	r3, [r7, #12]
 800dba6:	2200      	movs	r2, #0
 800dba8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800dbac:	68fb      	ldr	r3, [r7, #12]
 800dbae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dbb0:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800dbb4:	68fb      	ldr	r3, [r7, #12]
 800dbb6:	641a      	str	r2, [r3, #64]	@ 0x40
 800dbb8:	68fb      	ldr	r3, [r7, #12]
 800dbba:	2200      	movs	r2, #0
 800dbbc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dbc0:	2301      	movs	r3, #1
 800dbc2:	e0b3      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800dbc4:	88f8      	ldrh	r0, [r7, #6]
 800dbc6:	893a      	ldrh	r2, [r7, #8]
 800dbc8:	8979      	ldrh	r1, [r7, #10]
 800dbca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dbcc:	9301      	str	r3, [sp, #4]
 800dbce:	2323      	movs	r3, #35	@ 0x23
 800dbd0:	9300      	str	r3, [sp, #0]
 800dbd2:	4603      	mov	r3, r0
 800dbd4:	68f8      	ldr	r0, [r7, #12]
 800dbd6:	f000 fbc1 	bl	800e35c <I2C_RequestMemoryRead>
 800dbda:	4603      	mov	r3, r0
 800dbdc:	2b00      	cmp	r3, #0
 800dbde:	d023      	beq.n	800dc28 <HAL_I2C_Mem_Read_DMA+0x21c>
 800dbe0:	68fb      	ldr	r3, [r7, #12]
 800dbe2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dbe4:	4618      	mov	r0, r3
 800dbe6:	f7fe fe47 	bl	800c878 <HAL_DMA_Abort_IT>
 800dbea:	4603      	mov	r3, r0
 800dbec:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800dbf0:	68fb      	ldr	r3, [r7, #12]
 800dbf2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dbf4:	2200      	movs	r2, #0
 800dbf6:	63da      	str	r2, [r3, #60]	@ 0x3c
 800dbf8:	68fb      	ldr	r3, [r7, #12]
 800dbfa:	681b      	ldr	r3, [r3, #0]
 800dbfc:	681a      	ldr	r2, [r3, #0]
 800dbfe:	68fb      	ldr	r3, [r7, #12]
 800dc00:	681b      	ldr	r3, [r3, #0]
 800dc02:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800dc06:	601a      	str	r2, [r3, #0]
 800dc08:	68fb      	ldr	r3, [r7, #12]
 800dc0a:	2200      	movs	r2, #0
 800dc0c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800dc0e:	68fb      	ldr	r3, [r7, #12]
 800dc10:	2200      	movs	r2, #0
 800dc12:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800dc14:	68fb      	ldr	r3, [r7, #12]
 800dc16:	681b      	ldr	r3, [r3, #0]
 800dc18:	681a      	ldr	r2, [r3, #0]
 800dc1a:	68fb      	ldr	r3, [r7, #12]
 800dc1c:	681b      	ldr	r3, [r3, #0]
 800dc1e:	f022 0201 	bic.w	r2, r2, #1
 800dc22:	601a      	str	r2, [r3, #0]
 800dc24:	2301      	movs	r3, #1
 800dc26:	e081      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800dc28:	68fb      	ldr	r3, [r7, #12]
 800dc2a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800dc2c:	2b01      	cmp	r3, #1
 800dc2e:	d108      	bne.n	800dc42 <HAL_I2C_Mem_Read_DMA+0x236>
 800dc30:	68fb      	ldr	r3, [r7, #12]
 800dc32:	681b      	ldr	r3, [r3, #0]
 800dc34:	681a      	ldr	r2, [r3, #0]
 800dc36:	68fb      	ldr	r3, [r7, #12]
 800dc38:	681b      	ldr	r3, [r3, #0]
 800dc3a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800dc3e:	601a      	str	r2, [r3, #0]
 800dc40:	e007      	b.n	800dc52 <HAL_I2C_Mem_Read_DMA+0x246>
 800dc42:	68fb      	ldr	r3, [r7, #12]
 800dc44:	681b      	ldr	r3, [r3, #0]
 800dc46:	685a      	ldr	r2, [r3, #4]
 800dc48:	68fb      	ldr	r3, [r7, #12]
 800dc4a:	681b      	ldr	r3, [r3, #0]
 800dc4c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800dc50:	605a      	str	r2, [r3, #4]
 800dc52:	2300      	movs	r3, #0
 800dc54:	61bb      	str	r3, [r7, #24]
 800dc56:	68fb      	ldr	r3, [r7, #12]
 800dc58:	681b      	ldr	r3, [r3, #0]
 800dc5a:	695b      	ldr	r3, [r3, #20]
 800dc5c:	61bb      	str	r3, [r7, #24]
 800dc5e:	68fb      	ldr	r3, [r7, #12]
 800dc60:	681b      	ldr	r3, [r3, #0]
 800dc62:	699b      	ldr	r3, [r3, #24]
 800dc64:	61bb      	str	r3, [r7, #24]
 800dc66:	69bb      	ldr	r3, [r7, #24]
 800dc68:	68fb      	ldr	r3, [r7, #12]
 800dc6a:	2200      	movs	r2, #0
 800dc6c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dc70:	68fb      	ldr	r3, [r7, #12]
 800dc72:	681b      	ldr	r3, [r3, #0]
 800dc74:	685a      	ldr	r2, [r3, #4]
 800dc76:	68fb      	ldr	r3, [r7, #12]
 800dc78:	681b      	ldr	r3, [r3, #0]
 800dc7a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800dc7e:	605a      	str	r2, [r3, #4]
 800dc80:	68fb      	ldr	r3, [r7, #12]
 800dc82:	681b      	ldr	r3, [r3, #0]
 800dc84:	685a      	ldr	r2, [r3, #4]
 800dc86:	68fb      	ldr	r3, [r7, #12]
 800dc88:	681b      	ldr	r3, [r3, #0]
 800dc8a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800dc8e:	605a      	str	r2, [r3, #4]
 800dc90:	e049      	b.n	800dd26 <HAL_I2C_Mem_Read_DMA+0x31a>
 800dc92:	bf00      	nop
 800dc94:	20000004 	.word	0x20000004
 800dc98:	14f8b589 	.word	0x14f8b589
 800dc9c:	ffff0000 	.word	0xffff0000
 800dca0:	0800e52d 	.word	0x0800e52d
 800dca4:	0800e6d7 	.word	0x0800e6d7
 800dca8:	68fb      	ldr	r3, [r7, #12]
 800dcaa:	2220      	movs	r2, #32
 800dcac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dcb0:	68fb      	ldr	r3, [r7, #12]
 800dcb2:	2200      	movs	r2, #0
 800dcb4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800dcb8:	68fb      	ldr	r3, [r7, #12]
 800dcba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dcbc:	f043 0210 	orr.w	r2, r3, #16
 800dcc0:	68fb      	ldr	r3, [r7, #12]
 800dcc2:	641a      	str	r2, [r3, #64]	@ 0x40
 800dcc4:	68fb      	ldr	r3, [r7, #12]
 800dcc6:	2200      	movs	r2, #0
 800dcc8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dccc:	2301      	movs	r3, #1
 800dcce:	e02d      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800dcd0:	88f8      	ldrh	r0, [r7, #6]
 800dcd2:	893a      	ldrh	r2, [r7, #8]
 800dcd4:	8979      	ldrh	r1, [r7, #10]
 800dcd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dcd8:	9301      	str	r3, [sp, #4]
 800dcda:	2323      	movs	r3, #35	@ 0x23
 800dcdc:	9300      	str	r3, [sp, #0]
 800dcde:	4603      	mov	r3, r0
 800dce0:	68f8      	ldr	r0, [r7, #12]
 800dce2:	f000 fb3b 	bl	800e35c <I2C_RequestMemoryRead>
 800dce6:	4603      	mov	r3, r0
 800dce8:	2b00      	cmp	r3, #0
 800dcea:	d001      	beq.n	800dcf0 <HAL_I2C_Mem_Read_DMA+0x2e4>
 800dcec:	2301      	movs	r3, #1
 800dcee:	e01d      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800dcf0:	2300      	movs	r3, #0
 800dcf2:	617b      	str	r3, [r7, #20]
 800dcf4:	68fb      	ldr	r3, [r7, #12]
 800dcf6:	681b      	ldr	r3, [r3, #0]
 800dcf8:	695b      	ldr	r3, [r3, #20]
 800dcfa:	617b      	str	r3, [r7, #20]
 800dcfc:	68fb      	ldr	r3, [r7, #12]
 800dcfe:	681b      	ldr	r3, [r3, #0]
 800dd00:	699b      	ldr	r3, [r3, #24]
 800dd02:	617b      	str	r3, [r7, #20]
 800dd04:	697b      	ldr	r3, [r7, #20]
 800dd06:	68fb      	ldr	r3, [r7, #12]
 800dd08:	681b      	ldr	r3, [r3, #0]
 800dd0a:	681a      	ldr	r2, [r3, #0]
 800dd0c:	68fb      	ldr	r3, [r7, #12]
 800dd0e:	681b      	ldr	r3, [r3, #0]
 800dd10:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800dd14:	601a      	str	r2, [r3, #0]
 800dd16:	68fb      	ldr	r3, [r7, #12]
 800dd18:	2220      	movs	r2, #32
 800dd1a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dd1e:	68fb      	ldr	r3, [r7, #12]
 800dd20:	2200      	movs	r2, #0
 800dd22:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dd26:	2300      	movs	r3, #0
 800dd28:	e000      	b.n	800dd2c <HAL_I2C_Mem_Read_DMA+0x320>
 800dd2a:	2302      	movs	r3, #2
 800dd2c:	4618      	mov	r0, r3
 800dd2e:	3728      	adds	r7, #40	@ 0x28
 800dd30:	46bd      	mov	sp, r7
 800dd32:	bd80      	pop	{r7, pc}

0800dd34 <HAL_I2C_ER_IRQHandler>:
 800dd34:	b580      	push	{r7, lr}
 800dd36:	b08a      	sub	sp, #40	@ 0x28
 800dd38:	af00      	add	r7, sp, #0
 800dd3a:	6078      	str	r0, [r7, #4]
 800dd3c:	687b      	ldr	r3, [r7, #4]
 800dd3e:	681b      	ldr	r3, [r3, #0]
 800dd40:	695b      	ldr	r3, [r3, #20]
 800dd42:	623b      	str	r3, [r7, #32]
 800dd44:	687b      	ldr	r3, [r7, #4]
 800dd46:	681b      	ldr	r3, [r3, #0]
 800dd48:	685b      	ldr	r3, [r3, #4]
 800dd4a:	61fb      	str	r3, [r7, #28]
 800dd4c:	2300      	movs	r3, #0
 800dd4e:	627b      	str	r3, [r7, #36]	@ 0x24
 800dd50:	687b      	ldr	r3, [r7, #4]
 800dd52:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800dd56:	76fb      	strb	r3, [r7, #27]
 800dd58:	6a3b      	ldr	r3, [r7, #32]
 800dd5a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dd5e:	2b00      	cmp	r3, #0
 800dd60:	d00d      	beq.n	800dd7e <HAL_I2C_ER_IRQHandler+0x4a>
 800dd62:	69fb      	ldr	r3, [r7, #28]
 800dd64:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dd68:	2b00      	cmp	r3, #0
 800dd6a:	d008      	beq.n	800dd7e <HAL_I2C_ER_IRQHandler+0x4a>
 800dd6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd6e:	f043 0301 	orr.w	r3, r3, #1
 800dd72:	627b      	str	r3, [r7, #36]	@ 0x24
 800dd74:	687b      	ldr	r3, [r7, #4]
 800dd76:	681b      	ldr	r3, [r3, #0]
 800dd78:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800dd7c:	615a      	str	r2, [r3, #20]
 800dd7e:	6a3b      	ldr	r3, [r7, #32]
 800dd80:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800dd84:	2b00      	cmp	r3, #0
 800dd86:	d00d      	beq.n	800dda4 <HAL_I2C_ER_IRQHandler+0x70>
 800dd88:	69fb      	ldr	r3, [r7, #28]
 800dd8a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dd8e:	2b00      	cmp	r3, #0
 800dd90:	d008      	beq.n	800dda4 <HAL_I2C_ER_IRQHandler+0x70>
 800dd92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd94:	f043 0302 	orr.w	r3, r3, #2
 800dd98:	627b      	str	r3, [r7, #36]	@ 0x24
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	681b      	ldr	r3, [r3, #0]
 800dd9e:	f46f 7200 	mvn.w	r2, #512	@ 0x200
 800dda2:	615a      	str	r2, [r3, #20]
 800dda4:	6a3b      	ldr	r3, [r7, #32]
 800dda6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800ddaa:	2b00      	cmp	r3, #0
 800ddac:	d03e      	beq.n	800de2c <HAL_I2C_ER_IRQHandler+0xf8>
 800ddae:	69fb      	ldr	r3, [r7, #28]
 800ddb0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ddb4:	2b00      	cmp	r3, #0
 800ddb6:	d039      	beq.n	800de2c <HAL_I2C_ER_IRQHandler+0xf8>
 800ddb8:	7efb      	ldrb	r3, [r7, #27]
 800ddba:	76bb      	strb	r3, [r7, #26]
 800ddbc:	687b      	ldr	r3, [r7, #4]
 800ddbe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ddc0:	b29b      	uxth	r3, r3
 800ddc2:	617b      	str	r3, [r7, #20]
 800ddc4:	687b      	ldr	r3, [r7, #4]
 800ddc6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800ddca:	74fb      	strb	r3, [r7, #19]
 800ddcc:	687b      	ldr	r3, [r7, #4]
 800ddce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ddd0:	60fb      	str	r3, [r7, #12]
 800ddd2:	7ebb      	ldrb	r3, [r7, #26]
 800ddd4:	2b20      	cmp	r3, #32
 800ddd6:	d112      	bne.n	800ddfe <HAL_I2C_ER_IRQHandler+0xca>
 800ddd8:	697b      	ldr	r3, [r7, #20]
 800ddda:	2b00      	cmp	r3, #0
 800dddc:	d10f      	bne.n	800ddfe <HAL_I2C_ER_IRQHandler+0xca>
 800ddde:	7cfb      	ldrb	r3, [r7, #19]
 800dde0:	2b21      	cmp	r3, #33	@ 0x21
 800dde2:	d008      	beq.n	800ddf6 <HAL_I2C_ER_IRQHandler+0xc2>
 800dde4:	7cfb      	ldrb	r3, [r7, #19]
 800dde6:	2b29      	cmp	r3, #41	@ 0x29
 800dde8:	d005      	beq.n	800ddf6 <HAL_I2C_ER_IRQHandler+0xc2>
 800ddea:	7cfb      	ldrb	r3, [r7, #19]
 800ddec:	2b28      	cmp	r3, #40	@ 0x28
 800ddee:	d106      	bne.n	800ddfe <HAL_I2C_ER_IRQHandler+0xca>
 800ddf0:	68fb      	ldr	r3, [r7, #12]
 800ddf2:	2b21      	cmp	r3, #33	@ 0x21
 800ddf4:	d103      	bne.n	800ddfe <HAL_I2C_ER_IRQHandler+0xca>
 800ddf6:	6878      	ldr	r0, [r7, #4]
 800ddf8:	f000 f878 	bl	800deec <I2C_Slave_AF>
 800ddfc:	e016      	b.n	800de2c <HAL_I2C_ER_IRQHandler+0xf8>
 800ddfe:	687b      	ldr	r3, [r7, #4]
 800de00:	681b      	ldr	r3, [r3, #0]
 800de02:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800de06:	615a      	str	r2, [r3, #20]
 800de08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de0a:	f043 0304 	orr.w	r3, r3, #4
 800de0e:	627b      	str	r3, [r7, #36]	@ 0x24
 800de10:	7efb      	ldrb	r3, [r7, #27]
 800de12:	2b10      	cmp	r3, #16
 800de14:	d002      	beq.n	800de1c <HAL_I2C_ER_IRQHandler+0xe8>
 800de16:	7efb      	ldrb	r3, [r7, #27]
 800de18:	2b40      	cmp	r3, #64	@ 0x40
 800de1a:	d107      	bne.n	800de2c <HAL_I2C_ER_IRQHandler+0xf8>
 800de1c:	687b      	ldr	r3, [r7, #4]
 800de1e:	681b      	ldr	r3, [r3, #0]
 800de20:	681a      	ldr	r2, [r3, #0]
 800de22:	687b      	ldr	r3, [r7, #4]
 800de24:	681b      	ldr	r3, [r3, #0]
 800de26:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800de2a:	601a      	str	r2, [r3, #0]
 800de2c:	6a3b      	ldr	r3, [r7, #32]
 800de2e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800de32:	2b00      	cmp	r3, #0
 800de34:	d00d      	beq.n	800de52 <HAL_I2C_ER_IRQHandler+0x11e>
 800de36:	69fb      	ldr	r3, [r7, #28]
 800de38:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800de3c:	2b00      	cmp	r3, #0
 800de3e:	d008      	beq.n	800de52 <HAL_I2C_ER_IRQHandler+0x11e>
 800de40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de42:	f043 0308 	orr.w	r3, r3, #8
 800de46:	627b      	str	r3, [r7, #36]	@ 0x24
 800de48:	687b      	ldr	r3, [r7, #4]
 800de4a:	681b      	ldr	r3, [r3, #0]
 800de4c:	f46f 6200 	mvn.w	r2, #2048	@ 0x800
 800de50:	615a      	str	r2, [r3, #20]
 800de52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de54:	2b00      	cmp	r3, #0
 800de56:	d008      	beq.n	800de6a <HAL_I2C_ER_IRQHandler+0x136>
 800de58:	687b      	ldr	r3, [r7, #4]
 800de5a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800de5c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800de5e:	431a      	orrs	r2, r3
 800de60:	687b      	ldr	r3, [r7, #4]
 800de62:	641a      	str	r2, [r3, #64]	@ 0x40
 800de64:	6878      	ldr	r0, [r7, #4]
 800de66:	f000 f8b1 	bl	800dfcc <I2C_ITError>
 800de6a:	bf00      	nop
 800de6c:	3728      	adds	r7, #40	@ 0x28
 800de6e:	46bd      	mov	sp, r7
 800de70:	bd80      	pop	{r7, pc}

0800de72 <HAL_I2C_MasterRxCpltCallback>:
 800de72:	b480      	push	{r7}
 800de74:	b083      	sub	sp, #12
 800de76:	af00      	add	r7, sp, #0
 800de78:	6078      	str	r0, [r7, #4]
 800de7a:	bf00      	nop
 800de7c:	370c      	adds	r7, #12
 800de7e:	46bd      	mov	sp, r7
 800de80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de84:	4770      	bx	lr

0800de86 <HAL_I2C_SlaveTxCpltCallback>:
 800de86:	b480      	push	{r7}
 800de88:	b083      	sub	sp, #12
 800de8a:	af00      	add	r7, sp, #0
 800de8c:	6078      	str	r0, [r7, #4]
 800de8e:	bf00      	nop
 800de90:	370c      	adds	r7, #12
 800de92:	46bd      	mov	sp, r7
 800de94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de98:	4770      	bx	lr

0800de9a <HAL_I2C_SlaveRxCpltCallback>:
 800de9a:	b480      	push	{r7}
 800de9c:	b083      	sub	sp, #12
 800de9e:	af00      	add	r7, sp, #0
 800dea0:	6078      	str	r0, [r7, #4]
 800dea2:	bf00      	nop
 800dea4:	370c      	adds	r7, #12
 800dea6:	46bd      	mov	sp, r7
 800dea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deac:	4770      	bx	lr

0800deae <HAL_I2C_ListenCpltCallback>:
 800deae:	b480      	push	{r7}
 800deb0:	b083      	sub	sp, #12
 800deb2:	af00      	add	r7, sp, #0
 800deb4:	6078      	str	r0, [r7, #4]
 800deb6:	bf00      	nop
 800deb8:	370c      	adds	r7, #12
 800deba:	46bd      	mov	sp, r7
 800debc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dec0:	4770      	bx	lr

0800dec2 <HAL_I2C_ErrorCallback>:
 800dec2:	b480      	push	{r7}
 800dec4:	b083      	sub	sp, #12
 800dec6:	af00      	add	r7, sp, #0
 800dec8:	6078      	str	r0, [r7, #4]
 800deca:	bf00      	nop
 800decc:	370c      	adds	r7, #12
 800dece:	46bd      	mov	sp, r7
 800ded0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ded4:	4770      	bx	lr

0800ded6 <HAL_I2C_AbortCpltCallback>:
 800ded6:	b480      	push	{r7}
 800ded8:	b083      	sub	sp, #12
 800deda:	af00      	add	r7, sp, #0
 800dedc:	6078      	str	r0, [r7, #4]
 800dede:	bf00      	nop
 800dee0:	370c      	adds	r7, #12
 800dee2:	46bd      	mov	sp, r7
 800dee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dee8:	4770      	bx	lr
	...

0800deec <I2C_Slave_AF>:
 800deec:	b580      	push	{r7, lr}
 800deee:	b084      	sub	sp, #16
 800def0:	af00      	add	r7, sp, #0
 800def2:	6078      	str	r0, [r7, #4]
 800def4:	687b      	ldr	r3, [r7, #4]
 800def6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800defa:	73fb      	strb	r3, [r7, #15]
 800defc:	687b      	ldr	r3, [r7, #4]
 800defe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800df00:	60bb      	str	r3, [r7, #8]
 800df02:	68bb      	ldr	r3, [r7, #8]
 800df04:	2b08      	cmp	r3, #8
 800df06:	d002      	beq.n	800df0e <I2C_Slave_AF+0x22>
 800df08:	68bb      	ldr	r3, [r7, #8]
 800df0a:	2b20      	cmp	r3, #32
 800df0c:	d129      	bne.n	800df62 <I2C_Slave_AF+0x76>
 800df0e:	7bfb      	ldrb	r3, [r7, #15]
 800df10:	2b28      	cmp	r3, #40	@ 0x28
 800df12:	d126      	bne.n	800df62 <I2C_Slave_AF+0x76>
 800df14:	687b      	ldr	r3, [r7, #4]
 800df16:	4a2c      	ldr	r2, [pc, #176]	@ (800dfc8 <I2C_Slave_AF+0xdc>)
 800df18:	62da      	str	r2, [r3, #44]	@ 0x2c
 800df1a:	687b      	ldr	r3, [r7, #4]
 800df1c:	681b      	ldr	r3, [r3, #0]
 800df1e:	685a      	ldr	r2, [r3, #4]
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	681b      	ldr	r3, [r3, #0]
 800df24:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800df28:	605a      	str	r2, [r3, #4]
 800df2a:	687b      	ldr	r3, [r7, #4]
 800df2c:	681b      	ldr	r3, [r3, #0]
 800df2e:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800df32:	615a      	str	r2, [r3, #20]
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	681b      	ldr	r3, [r3, #0]
 800df38:	681a      	ldr	r2, [r3, #0]
 800df3a:	687b      	ldr	r3, [r7, #4]
 800df3c:	681b      	ldr	r3, [r3, #0]
 800df3e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800df42:	601a      	str	r2, [r3, #0]
 800df44:	687b      	ldr	r3, [r7, #4]
 800df46:	2200      	movs	r2, #0
 800df48:	631a      	str	r2, [r3, #48]	@ 0x30
 800df4a:	687b      	ldr	r3, [r7, #4]
 800df4c:	2220      	movs	r2, #32
 800df4e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800df52:	687b      	ldr	r3, [r7, #4]
 800df54:	2200      	movs	r2, #0
 800df56:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800df5a:	6878      	ldr	r0, [r7, #4]
 800df5c:	f7ff ffa7 	bl	800deae <HAL_I2C_ListenCpltCallback>
 800df60:	e02e      	b.n	800dfc0 <I2C_Slave_AF+0xd4>
 800df62:	7bfb      	ldrb	r3, [r7, #15]
 800df64:	2b21      	cmp	r3, #33	@ 0x21
 800df66:	d126      	bne.n	800dfb6 <I2C_Slave_AF+0xca>
 800df68:	687b      	ldr	r3, [r7, #4]
 800df6a:	4a17      	ldr	r2, [pc, #92]	@ (800dfc8 <I2C_Slave_AF+0xdc>)
 800df6c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800df6e:	687b      	ldr	r3, [r7, #4]
 800df70:	2221      	movs	r2, #33	@ 0x21
 800df72:	631a      	str	r2, [r3, #48]	@ 0x30
 800df74:	687b      	ldr	r3, [r7, #4]
 800df76:	2220      	movs	r2, #32
 800df78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800df7c:	687b      	ldr	r3, [r7, #4]
 800df7e:	2200      	movs	r2, #0
 800df80:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800df84:	687b      	ldr	r3, [r7, #4]
 800df86:	681b      	ldr	r3, [r3, #0]
 800df88:	685a      	ldr	r2, [r3, #4]
 800df8a:	687b      	ldr	r3, [r7, #4]
 800df8c:	681b      	ldr	r3, [r3, #0]
 800df8e:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800df92:	605a      	str	r2, [r3, #4]
 800df94:	687b      	ldr	r3, [r7, #4]
 800df96:	681b      	ldr	r3, [r3, #0]
 800df98:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800df9c:	615a      	str	r2, [r3, #20]
 800df9e:	687b      	ldr	r3, [r7, #4]
 800dfa0:	681b      	ldr	r3, [r3, #0]
 800dfa2:	681a      	ldr	r2, [r3, #0]
 800dfa4:	687b      	ldr	r3, [r7, #4]
 800dfa6:	681b      	ldr	r3, [r3, #0]
 800dfa8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800dfac:	601a      	str	r2, [r3, #0]
 800dfae:	6878      	ldr	r0, [r7, #4]
 800dfb0:	f7ff ff69 	bl	800de86 <HAL_I2C_SlaveTxCpltCallback>
 800dfb4:	e004      	b.n	800dfc0 <I2C_Slave_AF+0xd4>
 800dfb6:	687b      	ldr	r3, [r7, #4]
 800dfb8:	681b      	ldr	r3, [r3, #0]
 800dfba:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800dfbe:	615a      	str	r2, [r3, #20]
 800dfc0:	bf00      	nop
 800dfc2:	3710      	adds	r7, #16
 800dfc4:	46bd      	mov	sp, r7
 800dfc6:	bd80      	pop	{r7, pc}
 800dfc8:	ffff0000 	.word	0xffff0000

0800dfcc <I2C_ITError>:
 800dfcc:	b580      	push	{r7, lr}
 800dfce:	b084      	sub	sp, #16
 800dfd0:	af00      	add	r7, sp, #0
 800dfd2:	6078      	str	r0, [r7, #4]
 800dfd4:	687b      	ldr	r3, [r7, #4]
 800dfd6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800dfda:	73fb      	strb	r3, [r7, #15]
 800dfdc:	687b      	ldr	r3, [r7, #4]
 800dfde:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800dfe2:	73bb      	strb	r3, [r7, #14]
 800dfe4:	7bbb      	ldrb	r3, [r7, #14]
 800dfe6:	2b10      	cmp	r3, #16
 800dfe8:	d002      	beq.n	800dff0 <I2C_ITError+0x24>
 800dfea:	7bbb      	ldrb	r3, [r7, #14]
 800dfec:	2b40      	cmp	r3, #64	@ 0x40
 800dfee:	d10a      	bne.n	800e006 <I2C_ITError+0x3a>
 800dff0:	7bfb      	ldrb	r3, [r7, #15]
 800dff2:	2b22      	cmp	r3, #34	@ 0x22
 800dff4:	d107      	bne.n	800e006 <I2C_ITError+0x3a>
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	681b      	ldr	r3, [r3, #0]
 800dffa:	681a      	ldr	r2, [r3, #0]
 800dffc:	687b      	ldr	r3, [r7, #4]
 800dffe:	681b      	ldr	r3, [r3, #0]
 800e000:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e004:	601a      	str	r2, [r3, #0]
 800e006:	7bfb      	ldrb	r3, [r7, #15]
 800e008:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800e00c:	2b28      	cmp	r3, #40	@ 0x28
 800e00e:	d107      	bne.n	800e020 <I2C_ITError+0x54>
 800e010:	687b      	ldr	r3, [r7, #4]
 800e012:	2200      	movs	r2, #0
 800e014:	631a      	str	r2, [r3, #48]	@ 0x30
 800e016:	687b      	ldr	r3, [r7, #4]
 800e018:	2228      	movs	r2, #40	@ 0x28
 800e01a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e01e:	e015      	b.n	800e04c <I2C_ITError+0x80>
 800e020:	687b      	ldr	r3, [r7, #4]
 800e022:	681b      	ldr	r3, [r3, #0]
 800e024:	685b      	ldr	r3, [r3, #4]
 800e026:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800e02a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800e02e:	d00a      	beq.n	800e046 <I2C_ITError+0x7a>
 800e030:	7bfb      	ldrb	r3, [r7, #15]
 800e032:	2b60      	cmp	r3, #96	@ 0x60
 800e034:	d007      	beq.n	800e046 <I2C_ITError+0x7a>
 800e036:	687b      	ldr	r3, [r7, #4]
 800e038:	2220      	movs	r2, #32
 800e03a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e03e:	687b      	ldr	r3, [r7, #4]
 800e040:	2200      	movs	r2, #0
 800e042:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e046:	687b      	ldr	r3, [r7, #4]
 800e048:	2200      	movs	r2, #0
 800e04a:	631a      	str	r2, [r3, #48]	@ 0x30
 800e04c:	687b      	ldr	r3, [r7, #4]
 800e04e:	681b      	ldr	r3, [r3, #0]
 800e050:	685b      	ldr	r3, [r3, #4]
 800e052:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800e056:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800e05a:	d162      	bne.n	800e122 <I2C_ITError+0x156>
 800e05c:	687b      	ldr	r3, [r7, #4]
 800e05e:	681b      	ldr	r3, [r3, #0]
 800e060:	685a      	ldr	r2, [r3, #4]
 800e062:	687b      	ldr	r3, [r7, #4]
 800e064:	681b      	ldr	r3, [r3, #0]
 800e066:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e06a:	605a      	str	r2, [r3, #4]
 800e06c:	687b      	ldr	r3, [r7, #4]
 800e06e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e070:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800e074:	b2db      	uxtb	r3, r3
 800e076:	2b01      	cmp	r3, #1
 800e078:	d020      	beq.n	800e0bc <I2C_ITError+0xf0>
 800e07a:	687b      	ldr	r3, [r7, #4]
 800e07c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e07e:	4a6a      	ldr	r2, [pc, #424]	@ (800e228 <I2C_ITError+0x25c>)
 800e080:	651a      	str	r2, [r3, #80]	@ 0x50
 800e082:	687b      	ldr	r3, [r7, #4]
 800e084:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e086:	4618      	mov	r0, r3
 800e088:	f7fe fbf6 	bl	800c878 <HAL_DMA_Abort_IT>
 800e08c:	4603      	mov	r3, r0
 800e08e:	2b00      	cmp	r3, #0
 800e090:	f000 8089 	beq.w	800e1a6 <I2C_ITError+0x1da>
 800e094:	687b      	ldr	r3, [r7, #4]
 800e096:	681b      	ldr	r3, [r3, #0]
 800e098:	681a      	ldr	r2, [r3, #0]
 800e09a:	687b      	ldr	r3, [r7, #4]
 800e09c:	681b      	ldr	r3, [r3, #0]
 800e09e:	f022 0201 	bic.w	r2, r2, #1
 800e0a2:	601a      	str	r2, [r3, #0]
 800e0a4:	687b      	ldr	r3, [r7, #4]
 800e0a6:	2220      	movs	r2, #32
 800e0a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e0b0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e0b2:	687a      	ldr	r2, [r7, #4]
 800e0b4:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800e0b6:	4610      	mov	r0, r2
 800e0b8:	4798      	blx	r3
 800e0ba:	e074      	b.n	800e1a6 <I2C_ITError+0x1da>
 800e0bc:	687b      	ldr	r3, [r7, #4]
 800e0be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e0c0:	4a59      	ldr	r2, [pc, #356]	@ (800e228 <I2C_ITError+0x25c>)
 800e0c2:	651a      	str	r2, [r3, #80]	@ 0x50
 800e0c4:	687b      	ldr	r3, [r7, #4]
 800e0c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e0c8:	4618      	mov	r0, r3
 800e0ca:	f7fe fbd5 	bl	800c878 <HAL_DMA_Abort_IT>
 800e0ce:	4603      	mov	r3, r0
 800e0d0:	2b00      	cmp	r3, #0
 800e0d2:	d068      	beq.n	800e1a6 <I2C_ITError+0x1da>
 800e0d4:	687b      	ldr	r3, [r7, #4]
 800e0d6:	681b      	ldr	r3, [r3, #0]
 800e0d8:	695b      	ldr	r3, [r3, #20]
 800e0da:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e0de:	2b40      	cmp	r3, #64	@ 0x40
 800e0e0:	d10b      	bne.n	800e0fa <I2C_ITError+0x12e>
 800e0e2:	687b      	ldr	r3, [r7, #4]
 800e0e4:	681b      	ldr	r3, [r3, #0]
 800e0e6:	691a      	ldr	r2, [r3, #16]
 800e0e8:	687b      	ldr	r3, [r7, #4]
 800e0ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e0ec:	b2d2      	uxtb	r2, r2
 800e0ee:	701a      	strb	r2, [r3, #0]
 800e0f0:	687b      	ldr	r3, [r7, #4]
 800e0f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e0f4:	1c5a      	adds	r2, r3, #1
 800e0f6:	687b      	ldr	r3, [r7, #4]
 800e0f8:	625a      	str	r2, [r3, #36]	@ 0x24
 800e0fa:	687b      	ldr	r3, [r7, #4]
 800e0fc:	681b      	ldr	r3, [r3, #0]
 800e0fe:	681a      	ldr	r2, [r3, #0]
 800e100:	687b      	ldr	r3, [r7, #4]
 800e102:	681b      	ldr	r3, [r3, #0]
 800e104:	f022 0201 	bic.w	r2, r2, #1
 800e108:	601a      	str	r2, [r3, #0]
 800e10a:	687b      	ldr	r3, [r7, #4]
 800e10c:	2220      	movs	r2, #32
 800e10e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e112:	687b      	ldr	r3, [r7, #4]
 800e114:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e116:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e118:	687a      	ldr	r2, [r7, #4]
 800e11a:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800e11c:	4610      	mov	r0, r2
 800e11e:	4798      	blx	r3
 800e120:	e041      	b.n	800e1a6 <I2C_ITError+0x1da>
 800e122:	687b      	ldr	r3, [r7, #4]
 800e124:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e128:	b2db      	uxtb	r3, r3
 800e12a:	2b60      	cmp	r3, #96	@ 0x60
 800e12c:	d125      	bne.n	800e17a <I2C_ITError+0x1ae>
 800e12e:	687b      	ldr	r3, [r7, #4]
 800e130:	2220      	movs	r2, #32
 800e132:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e136:	687b      	ldr	r3, [r7, #4]
 800e138:	2200      	movs	r2, #0
 800e13a:	641a      	str	r2, [r3, #64]	@ 0x40
 800e13c:	687b      	ldr	r3, [r7, #4]
 800e13e:	681b      	ldr	r3, [r3, #0]
 800e140:	695b      	ldr	r3, [r3, #20]
 800e142:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e146:	2b40      	cmp	r3, #64	@ 0x40
 800e148:	d10b      	bne.n	800e162 <I2C_ITError+0x196>
 800e14a:	687b      	ldr	r3, [r7, #4]
 800e14c:	681b      	ldr	r3, [r3, #0]
 800e14e:	691a      	ldr	r2, [r3, #16]
 800e150:	687b      	ldr	r3, [r7, #4]
 800e152:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e154:	b2d2      	uxtb	r2, r2
 800e156:	701a      	strb	r2, [r3, #0]
 800e158:	687b      	ldr	r3, [r7, #4]
 800e15a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e15c:	1c5a      	adds	r2, r3, #1
 800e15e:	687b      	ldr	r3, [r7, #4]
 800e160:	625a      	str	r2, [r3, #36]	@ 0x24
 800e162:	687b      	ldr	r3, [r7, #4]
 800e164:	681b      	ldr	r3, [r3, #0]
 800e166:	681a      	ldr	r2, [r3, #0]
 800e168:	687b      	ldr	r3, [r7, #4]
 800e16a:	681b      	ldr	r3, [r3, #0]
 800e16c:	f022 0201 	bic.w	r2, r2, #1
 800e170:	601a      	str	r2, [r3, #0]
 800e172:	6878      	ldr	r0, [r7, #4]
 800e174:	f7ff feaf 	bl	800ded6 <HAL_I2C_AbortCpltCallback>
 800e178:	e015      	b.n	800e1a6 <I2C_ITError+0x1da>
 800e17a:	687b      	ldr	r3, [r7, #4]
 800e17c:	681b      	ldr	r3, [r3, #0]
 800e17e:	695b      	ldr	r3, [r3, #20]
 800e180:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e184:	2b40      	cmp	r3, #64	@ 0x40
 800e186:	d10b      	bne.n	800e1a0 <I2C_ITError+0x1d4>
 800e188:	687b      	ldr	r3, [r7, #4]
 800e18a:	681b      	ldr	r3, [r3, #0]
 800e18c:	691a      	ldr	r2, [r3, #16]
 800e18e:	687b      	ldr	r3, [r7, #4]
 800e190:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e192:	b2d2      	uxtb	r2, r2
 800e194:	701a      	strb	r2, [r3, #0]
 800e196:	687b      	ldr	r3, [r7, #4]
 800e198:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e19a:	1c5a      	adds	r2, r3, #1
 800e19c:	687b      	ldr	r3, [r7, #4]
 800e19e:	625a      	str	r2, [r3, #36]	@ 0x24
 800e1a0:	6878      	ldr	r0, [r7, #4]
 800e1a2:	f7ff fe8e 	bl	800dec2 <HAL_I2C_ErrorCallback>
 800e1a6:	687b      	ldr	r3, [r7, #4]
 800e1a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e1aa:	60bb      	str	r3, [r7, #8]
 800e1ac:	68bb      	ldr	r3, [r7, #8]
 800e1ae:	f003 0301 	and.w	r3, r3, #1
 800e1b2:	2b00      	cmp	r3, #0
 800e1b4:	d10e      	bne.n	800e1d4 <I2C_ITError+0x208>
 800e1b6:	68bb      	ldr	r3, [r7, #8]
 800e1b8:	f003 0302 	and.w	r3, r3, #2
 800e1bc:	2b00      	cmp	r3, #0
 800e1be:	d109      	bne.n	800e1d4 <I2C_ITError+0x208>
 800e1c0:	68bb      	ldr	r3, [r7, #8]
 800e1c2:	f003 0304 	and.w	r3, r3, #4
 800e1c6:	2b00      	cmp	r3, #0
 800e1c8:	d104      	bne.n	800e1d4 <I2C_ITError+0x208>
 800e1ca:	68bb      	ldr	r3, [r7, #8]
 800e1cc:	f003 0308 	and.w	r3, r3, #8
 800e1d0:	2b00      	cmp	r3, #0
 800e1d2:	d007      	beq.n	800e1e4 <I2C_ITError+0x218>
 800e1d4:	687b      	ldr	r3, [r7, #4]
 800e1d6:	681b      	ldr	r3, [r3, #0]
 800e1d8:	685a      	ldr	r2, [r3, #4]
 800e1da:	687b      	ldr	r3, [r7, #4]
 800e1dc:	681b      	ldr	r3, [r3, #0]
 800e1de:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800e1e2:	605a      	str	r2, [r3, #4]
 800e1e4:	687b      	ldr	r3, [r7, #4]
 800e1e6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e1ea:	73fb      	strb	r3, [r7, #15]
 800e1ec:	687b      	ldr	r3, [r7, #4]
 800e1ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e1f0:	f003 0304 	and.w	r3, r3, #4
 800e1f4:	2b04      	cmp	r3, #4
 800e1f6:	d113      	bne.n	800e220 <I2C_ITError+0x254>
 800e1f8:	7bfb      	ldrb	r3, [r7, #15]
 800e1fa:	2b28      	cmp	r3, #40	@ 0x28
 800e1fc:	d110      	bne.n	800e220 <I2C_ITError+0x254>
 800e1fe:	687b      	ldr	r3, [r7, #4]
 800e200:	4a0a      	ldr	r2, [pc, #40]	@ (800e22c <I2C_ITError+0x260>)
 800e202:	62da      	str	r2, [r3, #44]	@ 0x2c
 800e204:	687b      	ldr	r3, [r7, #4]
 800e206:	2200      	movs	r2, #0
 800e208:	631a      	str	r2, [r3, #48]	@ 0x30
 800e20a:	687b      	ldr	r3, [r7, #4]
 800e20c:	2220      	movs	r2, #32
 800e20e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e212:	687b      	ldr	r3, [r7, #4]
 800e214:	2200      	movs	r2, #0
 800e216:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e21a:	6878      	ldr	r0, [r7, #4]
 800e21c:	f7ff fe47 	bl	800deae <HAL_I2C_ListenCpltCallback>
 800e220:	bf00      	nop
 800e222:	3710      	adds	r7, #16
 800e224:	46bd      	mov	sp, r7
 800e226:	bd80      	pop	{r7, pc}
 800e228:	0800e751 	.word	0x0800e751
 800e22c:	ffff0000 	.word	0xffff0000

0800e230 <I2C_RequestMemoryWrite>:
 800e230:	b580      	push	{r7, lr}
 800e232:	b088      	sub	sp, #32
 800e234:	af02      	add	r7, sp, #8
 800e236:	60f8      	str	r0, [r7, #12]
 800e238:	4608      	mov	r0, r1
 800e23a:	4611      	mov	r1, r2
 800e23c:	461a      	mov	r2, r3
 800e23e:	4603      	mov	r3, r0
 800e240:	817b      	strh	r3, [r7, #10]
 800e242:	460b      	mov	r3, r1
 800e244:	813b      	strh	r3, [r7, #8]
 800e246:	4613      	mov	r3, r2
 800e248:	80fb      	strh	r3, [r7, #6]
 800e24a:	68fb      	ldr	r3, [r7, #12]
 800e24c:	681b      	ldr	r3, [r3, #0]
 800e24e:	681a      	ldr	r2, [r3, #0]
 800e250:	68fb      	ldr	r3, [r7, #12]
 800e252:	681b      	ldr	r3, [r3, #0]
 800e254:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e258:	601a      	str	r2, [r3, #0]
 800e25a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e25c:	9300      	str	r3, [sp, #0]
 800e25e:	6a3b      	ldr	r3, [r7, #32]
 800e260:	2200      	movs	r2, #0
 800e262:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e266:	68f8      	ldr	r0, [r7, #12]
 800e268:	f000 fb1a 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800e26c:	4603      	mov	r3, r0
 800e26e:	2b00      	cmp	r3, #0
 800e270:	d00d      	beq.n	800e28e <I2C_RequestMemoryWrite+0x5e>
 800e272:	68fb      	ldr	r3, [r7, #12]
 800e274:	681b      	ldr	r3, [r3, #0]
 800e276:	681b      	ldr	r3, [r3, #0]
 800e278:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e27c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e280:	d103      	bne.n	800e28a <I2C_RequestMemoryWrite+0x5a>
 800e282:	68fb      	ldr	r3, [r7, #12]
 800e284:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e288:	641a      	str	r2, [r3, #64]	@ 0x40
 800e28a:	2303      	movs	r3, #3
 800e28c:	e05f      	b.n	800e34e <I2C_RequestMemoryWrite+0x11e>
 800e28e:	897b      	ldrh	r3, [r7, #10]
 800e290:	b2db      	uxtb	r3, r3
 800e292:	461a      	mov	r2, r3
 800e294:	68fb      	ldr	r3, [r7, #12]
 800e296:	681b      	ldr	r3, [r3, #0]
 800e298:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800e29c:	611a      	str	r2, [r3, #16]
 800e29e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e2a0:	6a3a      	ldr	r2, [r7, #32]
 800e2a2:	492d      	ldr	r1, [pc, #180]	@ (800e358 <I2C_RequestMemoryWrite+0x128>)
 800e2a4:	68f8      	ldr	r0, [r7, #12]
 800e2a6:	f000 fb52 	bl	800e94e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e2aa:	4603      	mov	r3, r0
 800e2ac:	2b00      	cmp	r3, #0
 800e2ae:	d001      	beq.n	800e2b4 <I2C_RequestMemoryWrite+0x84>
 800e2b0:	2301      	movs	r3, #1
 800e2b2:	e04c      	b.n	800e34e <I2C_RequestMemoryWrite+0x11e>
 800e2b4:	2300      	movs	r3, #0
 800e2b6:	617b      	str	r3, [r7, #20]
 800e2b8:	68fb      	ldr	r3, [r7, #12]
 800e2ba:	681b      	ldr	r3, [r3, #0]
 800e2bc:	695b      	ldr	r3, [r3, #20]
 800e2be:	617b      	str	r3, [r7, #20]
 800e2c0:	68fb      	ldr	r3, [r7, #12]
 800e2c2:	681b      	ldr	r3, [r3, #0]
 800e2c4:	699b      	ldr	r3, [r3, #24]
 800e2c6:	617b      	str	r3, [r7, #20]
 800e2c8:	697b      	ldr	r3, [r7, #20]
 800e2ca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e2cc:	6a39      	ldr	r1, [r7, #32]
 800e2ce:	68f8      	ldr	r0, [r7, #12]
 800e2d0:	f000 fbbc 	bl	800ea4c <I2C_WaitOnTXEFlagUntilTimeout>
 800e2d4:	4603      	mov	r3, r0
 800e2d6:	2b00      	cmp	r3, #0
 800e2d8:	d00d      	beq.n	800e2f6 <I2C_RequestMemoryWrite+0xc6>
 800e2da:	68fb      	ldr	r3, [r7, #12]
 800e2dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e2de:	2b04      	cmp	r3, #4
 800e2e0:	d107      	bne.n	800e2f2 <I2C_RequestMemoryWrite+0xc2>
 800e2e2:	68fb      	ldr	r3, [r7, #12]
 800e2e4:	681b      	ldr	r3, [r3, #0]
 800e2e6:	681a      	ldr	r2, [r3, #0]
 800e2e8:	68fb      	ldr	r3, [r7, #12]
 800e2ea:	681b      	ldr	r3, [r3, #0]
 800e2ec:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e2f0:	601a      	str	r2, [r3, #0]
 800e2f2:	2301      	movs	r3, #1
 800e2f4:	e02b      	b.n	800e34e <I2C_RequestMemoryWrite+0x11e>
 800e2f6:	88fb      	ldrh	r3, [r7, #6]
 800e2f8:	2b01      	cmp	r3, #1
 800e2fa:	d105      	bne.n	800e308 <I2C_RequestMemoryWrite+0xd8>
 800e2fc:	893b      	ldrh	r3, [r7, #8]
 800e2fe:	b2da      	uxtb	r2, r3
 800e300:	68fb      	ldr	r3, [r7, #12]
 800e302:	681b      	ldr	r3, [r3, #0]
 800e304:	611a      	str	r2, [r3, #16]
 800e306:	e021      	b.n	800e34c <I2C_RequestMemoryWrite+0x11c>
 800e308:	893b      	ldrh	r3, [r7, #8]
 800e30a:	0a1b      	lsrs	r3, r3, #8
 800e30c:	b29b      	uxth	r3, r3
 800e30e:	b2da      	uxtb	r2, r3
 800e310:	68fb      	ldr	r3, [r7, #12]
 800e312:	681b      	ldr	r3, [r3, #0]
 800e314:	611a      	str	r2, [r3, #16]
 800e316:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e318:	6a39      	ldr	r1, [r7, #32]
 800e31a:	68f8      	ldr	r0, [r7, #12]
 800e31c:	f000 fb96 	bl	800ea4c <I2C_WaitOnTXEFlagUntilTimeout>
 800e320:	4603      	mov	r3, r0
 800e322:	2b00      	cmp	r3, #0
 800e324:	d00d      	beq.n	800e342 <I2C_RequestMemoryWrite+0x112>
 800e326:	68fb      	ldr	r3, [r7, #12]
 800e328:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e32a:	2b04      	cmp	r3, #4
 800e32c:	d107      	bne.n	800e33e <I2C_RequestMemoryWrite+0x10e>
 800e32e:	68fb      	ldr	r3, [r7, #12]
 800e330:	681b      	ldr	r3, [r3, #0]
 800e332:	681a      	ldr	r2, [r3, #0]
 800e334:	68fb      	ldr	r3, [r7, #12]
 800e336:	681b      	ldr	r3, [r3, #0]
 800e338:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e33c:	601a      	str	r2, [r3, #0]
 800e33e:	2301      	movs	r3, #1
 800e340:	e005      	b.n	800e34e <I2C_RequestMemoryWrite+0x11e>
 800e342:	893b      	ldrh	r3, [r7, #8]
 800e344:	b2da      	uxtb	r2, r3
 800e346:	68fb      	ldr	r3, [r7, #12]
 800e348:	681b      	ldr	r3, [r3, #0]
 800e34a:	611a      	str	r2, [r3, #16]
 800e34c:	2300      	movs	r3, #0
 800e34e:	4618      	mov	r0, r3
 800e350:	3718      	adds	r7, #24
 800e352:	46bd      	mov	sp, r7
 800e354:	bd80      	pop	{r7, pc}
 800e356:	bf00      	nop
 800e358:	00010002 	.word	0x00010002

0800e35c <I2C_RequestMemoryRead>:
 800e35c:	b580      	push	{r7, lr}
 800e35e:	b088      	sub	sp, #32
 800e360:	af02      	add	r7, sp, #8
 800e362:	60f8      	str	r0, [r7, #12]
 800e364:	4608      	mov	r0, r1
 800e366:	4611      	mov	r1, r2
 800e368:	461a      	mov	r2, r3
 800e36a:	4603      	mov	r3, r0
 800e36c:	817b      	strh	r3, [r7, #10]
 800e36e:	460b      	mov	r3, r1
 800e370:	813b      	strh	r3, [r7, #8]
 800e372:	4613      	mov	r3, r2
 800e374:	80fb      	strh	r3, [r7, #6]
 800e376:	68fb      	ldr	r3, [r7, #12]
 800e378:	681b      	ldr	r3, [r3, #0]
 800e37a:	681a      	ldr	r2, [r3, #0]
 800e37c:	68fb      	ldr	r3, [r7, #12]
 800e37e:	681b      	ldr	r3, [r3, #0]
 800e380:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e384:	601a      	str	r2, [r3, #0]
 800e386:	68fb      	ldr	r3, [r7, #12]
 800e388:	681b      	ldr	r3, [r3, #0]
 800e38a:	681a      	ldr	r2, [r3, #0]
 800e38c:	68fb      	ldr	r3, [r7, #12]
 800e38e:	681b      	ldr	r3, [r3, #0]
 800e390:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e394:	601a      	str	r2, [r3, #0]
 800e396:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e398:	9300      	str	r3, [sp, #0]
 800e39a:	6a3b      	ldr	r3, [r7, #32]
 800e39c:	2200      	movs	r2, #0
 800e39e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e3a2:	68f8      	ldr	r0, [r7, #12]
 800e3a4:	f000 fa7c 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800e3a8:	4603      	mov	r3, r0
 800e3aa:	2b00      	cmp	r3, #0
 800e3ac:	d00d      	beq.n	800e3ca <I2C_RequestMemoryRead+0x6e>
 800e3ae:	68fb      	ldr	r3, [r7, #12]
 800e3b0:	681b      	ldr	r3, [r3, #0]
 800e3b2:	681b      	ldr	r3, [r3, #0]
 800e3b4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e3b8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e3bc:	d103      	bne.n	800e3c6 <I2C_RequestMemoryRead+0x6a>
 800e3be:	68fb      	ldr	r3, [r7, #12]
 800e3c0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e3c4:	641a      	str	r2, [r3, #64]	@ 0x40
 800e3c6:	2303      	movs	r3, #3
 800e3c8:	e0aa      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e3ca:	897b      	ldrh	r3, [r7, #10]
 800e3cc:	b2db      	uxtb	r3, r3
 800e3ce:	461a      	mov	r2, r3
 800e3d0:	68fb      	ldr	r3, [r7, #12]
 800e3d2:	681b      	ldr	r3, [r3, #0]
 800e3d4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800e3d8:	611a      	str	r2, [r3, #16]
 800e3da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e3dc:	6a3a      	ldr	r2, [r7, #32]
 800e3de:	4952      	ldr	r1, [pc, #328]	@ (800e528 <I2C_RequestMemoryRead+0x1cc>)
 800e3e0:	68f8      	ldr	r0, [r7, #12]
 800e3e2:	f000 fab4 	bl	800e94e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e3e6:	4603      	mov	r3, r0
 800e3e8:	2b00      	cmp	r3, #0
 800e3ea:	d001      	beq.n	800e3f0 <I2C_RequestMemoryRead+0x94>
 800e3ec:	2301      	movs	r3, #1
 800e3ee:	e097      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e3f0:	2300      	movs	r3, #0
 800e3f2:	617b      	str	r3, [r7, #20]
 800e3f4:	68fb      	ldr	r3, [r7, #12]
 800e3f6:	681b      	ldr	r3, [r3, #0]
 800e3f8:	695b      	ldr	r3, [r3, #20]
 800e3fa:	617b      	str	r3, [r7, #20]
 800e3fc:	68fb      	ldr	r3, [r7, #12]
 800e3fe:	681b      	ldr	r3, [r3, #0]
 800e400:	699b      	ldr	r3, [r3, #24]
 800e402:	617b      	str	r3, [r7, #20]
 800e404:	697b      	ldr	r3, [r7, #20]
 800e406:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e408:	6a39      	ldr	r1, [r7, #32]
 800e40a:	68f8      	ldr	r0, [r7, #12]
 800e40c:	f000 fb1e 	bl	800ea4c <I2C_WaitOnTXEFlagUntilTimeout>
 800e410:	4603      	mov	r3, r0
 800e412:	2b00      	cmp	r3, #0
 800e414:	d00d      	beq.n	800e432 <I2C_RequestMemoryRead+0xd6>
 800e416:	68fb      	ldr	r3, [r7, #12]
 800e418:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e41a:	2b04      	cmp	r3, #4
 800e41c:	d107      	bne.n	800e42e <I2C_RequestMemoryRead+0xd2>
 800e41e:	68fb      	ldr	r3, [r7, #12]
 800e420:	681b      	ldr	r3, [r3, #0]
 800e422:	681a      	ldr	r2, [r3, #0]
 800e424:	68fb      	ldr	r3, [r7, #12]
 800e426:	681b      	ldr	r3, [r3, #0]
 800e428:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e42c:	601a      	str	r2, [r3, #0]
 800e42e:	2301      	movs	r3, #1
 800e430:	e076      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e432:	88fb      	ldrh	r3, [r7, #6]
 800e434:	2b01      	cmp	r3, #1
 800e436:	d105      	bne.n	800e444 <I2C_RequestMemoryRead+0xe8>
 800e438:	893b      	ldrh	r3, [r7, #8]
 800e43a:	b2da      	uxtb	r2, r3
 800e43c:	68fb      	ldr	r3, [r7, #12]
 800e43e:	681b      	ldr	r3, [r3, #0]
 800e440:	611a      	str	r2, [r3, #16]
 800e442:	e021      	b.n	800e488 <I2C_RequestMemoryRead+0x12c>
 800e444:	893b      	ldrh	r3, [r7, #8]
 800e446:	0a1b      	lsrs	r3, r3, #8
 800e448:	b29b      	uxth	r3, r3
 800e44a:	b2da      	uxtb	r2, r3
 800e44c:	68fb      	ldr	r3, [r7, #12]
 800e44e:	681b      	ldr	r3, [r3, #0]
 800e450:	611a      	str	r2, [r3, #16]
 800e452:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e454:	6a39      	ldr	r1, [r7, #32]
 800e456:	68f8      	ldr	r0, [r7, #12]
 800e458:	f000 faf8 	bl	800ea4c <I2C_WaitOnTXEFlagUntilTimeout>
 800e45c:	4603      	mov	r3, r0
 800e45e:	2b00      	cmp	r3, #0
 800e460:	d00d      	beq.n	800e47e <I2C_RequestMemoryRead+0x122>
 800e462:	68fb      	ldr	r3, [r7, #12]
 800e464:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e466:	2b04      	cmp	r3, #4
 800e468:	d107      	bne.n	800e47a <I2C_RequestMemoryRead+0x11e>
 800e46a:	68fb      	ldr	r3, [r7, #12]
 800e46c:	681b      	ldr	r3, [r3, #0]
 800e46e:	681a      	ldr	r2, [r3, #0]
 800e470:	68fb      	ldr	r3, [r7, #12]
 800e472:	681b      	ldr	r3, [r3, #0]
 800e474:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e478:	601a      	str	r2, [r3, #0]
 800e47a:	2301      	movs	r3, #1
 800e47c:	e050      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e47e:	893b      	ldrh	r3, [r7, #8]
 800e480:	b2da      	uxtb	r2, r3
 800e482:	68fb      	ldr	r3, [r7, #12]
 800e484:	681b      	ldr	r3, [r3, #0]
 800e486:	611a      	str	r2, [r3, #16]
 800e488:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e48a:	6a39      	ldr	r1, [r7, #32]
 800e48c:	68f8      	ldr	r0, [r7, #12]
 800e48e:	f000 fadd 	bl	800ea4c <I2C_WaitOnTXEFlagUntilTimeout>
 800e492:	4603      	mov	r3, r0
 800e494:	2b00      	cmp	r3, #0
 800e496:	d00d      	beq.n	800e4b4 <I2C_RequestMemoryRead+0x158>
 800e498:	68fb      	ldr	r3, [r7, #12]
 800e49a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e49c:	2b04      	cmp	r3, #4
 800e49e:	d107      	bne.n	800e4b0 <I2C_RequestMemoryRead+0x154>
 800e4a0:	68fb      	ldr	r3, [r7, #12]
 800e4a2:	681b      	ldr	r3, [r3, #0]
 800e4a4:	681a      	ldr	r2, [r3, #0]
 800e4a6:	68fb      	ldr	r3, [r7, #12]
 800e4a8:	681b      	ldr	r3, [r3, #0]
 800e4aa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e4ae:	601a      	str	r2, [r3, #0]
 800e4b0:	2301      	movs	r3, #1
 800e4b2:	e035      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e4b4:	68fb      	ldr	r3, [r7, #12]
 800e4b6:	681b      	ldr	r3, [r3, #0]
 800e4b8:	681a      	ldr	r2, [r3, #0]
 800e4ba:	68fb      	ldr	r3, [r7, #12]
 800e4bc:	681b      	ldr	r3, [r3, #0]
 800e4be:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e4c2:	601a      	str	r2, [r3, #0]
 800e4c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e4c6:	9300      	str	r3, [sp, #0]
 800e4c8:	6a3b      	ldr	r3, [r7, #32]
 800e4ca:	2200      	movs	r2, #0
 800e4cc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e4d0:	68f8      	ldr	r0, [r7, #12]
 800e4d2:	f000 f9e5 	bl	800e8a0 <I2C_WaitOnFlagUntilTimeout>
 800e4d6:	4603      	mov	r3, r0
 800e4d8:	2b00      	cmp	r3, #0
 800e4da:	d00d      	beq.n	800e4f8 <I2C_RequestMemoryRead+0x19c>
 800e4dc:	68fb      	ldr	r3, [r7, #12]
 800e4de:	681b      	ldr	r3, [r3, #0]
 800e4e0:	681b      	ldr	r3, [r3, #0]
 800e4e2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e4e6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e4ea:	d103      	bne.n	800e4f4 <I2C_RequestMemoryRead+0x198>
 800e4ec:	68fb      	ldr	r3, [r7, #12]
 800e4ee:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e4f2:	641a      	str	r2, [r3, #64]	@ 0x40
 800e4f4:	2303      	movs	r3, #3
 800e4f6:	e013      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e4f8:	897b      	ldrh	r3, [r7, #10]
 800e4fa:	b2db      	uxtb	r3, r3
 800e4fc:	f043 0301 	orr.w	r3, r3, #1
 800e500:	b2da      	uxtb	r2, r3
 800e502:	68fb      	ldr	r3, [r7, #12]
 800e504:	681b      	ldr	r3, [r3, #0]
 800e506:	611a      	str	r2, [r3, #16]
 800e508:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e50a:	6a3a      	ldr	r2, [r7, #32]
 800e50c:	4906      	ldr	r1, [pc, #24]	@ (800e528 <I2C_RequestMemoryRead+0x1cc>)
 800e50e:	68f8      	ldr	r0, [r7, #12]
 800e510:	f000 fa1d 	bl	800e94e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e514:	4603      	mov	r3, r0
 800e516:	2b00      	cmp	r3, #0
 800e518:	d001      	beq.n	800e51e <I2C_RequestMemoryRead+0x1c2>
 800e51a:	2301      	movs	r3, #1
 800e51c:	e000      	b.n	800e520 <I2C_RequestMemoryRead+0x1c4>
 800e51e:	2300      	movs	r3, #0
 800e520:	4618      	mov	r0, r3
 800e522:	3718      	adds	r7, #24
 800e524:	46bd      	mov	sp, r7
 800e526:	bd80      	pop	{r7, pc}
 800e528:	00010002 	.word	0x00010002

0800e52c <I2C_DMAXferCplt>:
 800e52c:	b580      	push	{r7, lr}
 800e52e:	b086      	sub	sp, #24
 800e530:	af00      	add	r7, sp, #0
 800e532:	6078      	str	r0, [r7, #4]
 800e534:	687b      	ldr	r3, [r7, #4]
 800e536:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e538:	617b      	str	r3, [r7, #20]
 800e53a:	697b      	ldr	r3, [r7, #20]
 800e53c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e540:	74fb      	strb	r3, [r7, #19]
 800e542:	697b      	ldr	r3, [r7, #20]
 800e544:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e548:	74bb      	strb	r3, [r7, #18]
 800e54a:	697b      	ldr	r3, [r7, #20]
 800e54c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e54e:	60fb      	str	r3, [r7, #12]
 800e550:	697b      	ldr	r3, [r7, #20]
 800e552:	681b      	ldr	r3, [r3, #0]
 800e554:	685a      	ldr	r2, [r3, #4]
 800e556:	697b      	ldr	r3, [r7, #20]
 800e558:	681b      	ldr	r3, [r3, #0]
 800e55a:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800e55e:	605a      	str	r2, [r3, #4]
 800e560:	697b      	ldr	r3, [r7, #20]
 800e562:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e564:	2b00      	cmp	r3, #0
 800e566:	d003      	beq.n	800e570 <I2C_DMAXferCplt+0x44>
 800e568:	697b      	ldr	r3, [r7, #20]
 800e56a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e56c:	2200      	movs	r2, #0
 800e56e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e570:	697b      	ldr	r3, [r7, #20]
 800e572:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e574:	2b00      	cmp	r3, #0
 800e576:	d003      	beq.n	800e580 <I2C_DMAXferCplt+0x54>
 800e578:	697b      	ldr	r3, [r7, #20]
 800e57a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e57c:	2200      	movs	r2, #0
 800e57e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e580:	7cfb      	ldrb	r3, [r7, #19]
 800e582:	f003 0321 	and.w	r3, r3, #33	@ 0x21
 800e586:	2b21      	cmp	r3, #33	@ 0x21
 800e588:	d007      	beq.n	800e59a <I2C_DMAXferCplt+0x6e>
 800e58a:	7cfb      	ldrb	r3, [r7, #19]
 800e58c:	f003 0322 	and.w	r3, r3, #34	@ 0x22
 800e590:	2b22      	cmp	r3, #34	@ 0x22
 800e592:	d131      	bne.n	800e5f8 <I2C_DMAXferCplt+0xcc>
 800e594:	7cbb      	ldrb	r3, [r7, #18]
 800e596:	2b20      	cmp	r3, #32
 800e598:	d12e      	bne.n	800e5f8 <I2C_DMAXferCplt+0xcc>
 800e59a:	697b      	ldr	r3, [r7, #20]
 800e59c:	681b      	ldr	r3, [r3, #0]
 800e59e:	685a      	ldr	r2, [r3, #4]
 800e5a0:	697b      	ldr	r3, [r7, #20]
 800e5a2:	681b      	ldr	r3, [r3, #0]
 800e5a4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e5a8:	605a      	str	r2, [r3, #4]
 800e5aa:	697b      	ldr	r3, [r7, #20]
 800e5ac:	2200      	movs	r2, #0
 800e5ae:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e5b0:	7cfb      	ldrb	r3, [r7, #19]
 800e5b2:	2b29      	cmp	r3, #41	@ 0x29
 800e5b4:	d10a      	bne.n	800e5cc <I2C_DMAXferCplt+0xa0>
 800e5b6:	697b      	ldr	r3, [r7, #20]
 800e5b8:	2221      	movs	r2, #33	@ 0x21
 800e5ba:	631a      	str	r2, [r3, #48]	@ 0x30
 800e5bc:	697b      	ldr	r3, [r7, #20]
 800e5be:	2228      	movs	r2, #40	@ 0x28
 800e5c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e5c4:	6978      	ldr	r0, [r7, #20]
 800e5c6:	f7ff fc5e 	bl	800de86 <HAL_I2C_SlaveTxCpltCallback>
 800e5ca:	e00c      	b.n	800e5e6 <I2C_DMAXferCplt+0xba>
 800e5cc:	7cfb      	ldrb	r3, [r7, #19]
 800e5ce:	2b2a      	cmp	r3, #42	@ 0x2a
 800e5d0:	d109      	bne.n	800e5e6 <I2C_DMAXferCplt+0xba>
 800e5d2:	697b      	ldr	r3, [r7, #20]
 800e5d4:	2222      	movs	r2, #34	@ 0x22
 800e5d6:	631a      	str	r2, [r3, #48]	@ 0x30
 800e5d8:	697b      	ldr	r3, [r7, #20]
 800e5da:	2228      	movs	r2, #40	@ 0x28
 800e5dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e5e0:	6978      	ldr	r0, [r7, #20]
 800e5e2:	f7ff fc5a 	bl	800de9a <HAL_I2C_SlaveRxCpltCallback>
 800e5e6:	697b      	ldr	r3, [r7, #20]
 800e5e8:	681b      	ldr	r3, [r3, #0]
 800e5ea:	685a      	ldr	r2, [r3, #4]
 800e5ec:	697b      	ldr	r3, [r7, #20]
 800e5ee:	681b      	ldr	r3, [r3, #0]
 800e5f0:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 800e5f4:	605a      	str	r2, [r3, #4]
 800e5f6:	e06a      	b.n	800e6ce <I2C_DMAXferCplt+0x1a2>
 800e5f8:	697b      	ldr	r3, [r7, #20]
 800e5fa:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e5fe:	b2db      	uxtb	r3, r3
 800e600:	2b00      	cmp	r3, #0
 800e602:	d064      	beq.n	800e6ce <I2C_DMAXferCplt+0x1a2>
 800e604:	697b      	ldr	r3, [r7, #20]
 800e606:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800e608:	b29b      	uxth	r3, r3
 800e60a:	2b01      	cmp	r3, #1
 800e60c:	d107      	bne.n	800e61e <I2C_DMAXferCplt+0xf2>
 800e60e:	697b      	ldr	r3, [r7, #20]
 800e610:	681b      	ldr	r3, [r3, #0]
 800e612:	681a      	ldr	r2, [r3, #0]
 800e614:	697b      	ldr	r3, [r7, #20]
 800e616:	681b      	ldr	r3, [r3, #0]
 800e618:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e61c:	601a      	str	r2, [r3, #0]
 800e61e:	697b      	ldr	r3, [r7, #20]
 800e620:	681b      	ldr	r3, [r3, #0]
 800e622:	685a      	ldr	r2, [r3, #4]
 800e624:	697b      	ldr	r3, [r7, #20]
 800e626:	681b      	ldr	r3, [r3, #0]
 800e628:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800e62c:	605a      	str	r2, [r3, #4]
 800e62e:	68fb      	ldr	r3, [r7, #12]
 800e630:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800e634:	d009      	beq.n	800e64a <I2C_DMAXferCplt+0x11e>
 800e636:	68fb      	ldr	r3, [r7, #12]
 800e638:	2b08      	cmp	r3, #8
 800e63a:	d006      	beq.n	800e64a <I2C_DMAXferCplt+0x11e>
 800e63c:	68fb      	ldr	r3, [r7, #12]
 800e63e:	f1b3 4f2a 	cmp.w	r3, #2852126720	@ 0xaa000000
 800e642:	d002      	beq.n	800e64a <I2C_DMAXferCplt+0x11e>
 800e644:	68fb      	ldr	r3, [r7, #12]
 800e646:	2b20      	cmp	r3, #32
 800e648:	d107      	bne.n	800e65a <I2C_DMAXferCplt+0x12e>
 800e64a:	697b      	ldr	r3, [r7, #20]
 800e64c:	681b      	ldr	r3, [r3, #0]
 800e64e:	681a      	ldr	r2, [r3, #0]
 800e650:	697b      	ldr	r3, [r7, #20]
 800e652:	681b      	ldr	r3, [r3, #0]
 800e654:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e658:	601a      	str	r2, [r3, #0]
 800e65a:	697b      	ldr	r3, [r7, #20]
 800e65c:	681b      	ldr	r3, [r3, #0]
 800e65e:	685a      	ldr	r2, [r3, #4]
 800e660:	697b      	ldr	r3, [r7, #20]
 800e662:	681b      	ldr	r3, [r3, #0]
 800e664:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800e668:	605a      	str	r2, [r3, #4]
 800e66a:	697b      	ldr	r3, [r7, #20]
 800e66c:	681b      	ldr	r3, [r3, #0]
 800e66e:	685a      	ldr	r2, [r3, #4]
 800e670:	697b      	ldr	r3, [r7, #20]
 800e672:	681b      	ldr	r3, [r3, #0]
 800e674:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e678:	605a      	str	r2, [r3, #4]
 800e67a:	697b      	ldr	r3, [r7, #20]
 800e67c:	2200      	movs	r2, #0
 800e67e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e680:	697b      	ldr	r3, [r7, #20]
 800e682:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e684:	2b00      	cmp	r3, #0
 800e686:	d003      	beq.n	800e690 <I2C_DMAXferCplt+0x164>
 800e688:	6978      	ldr	r0, [r7, #20]
 800e68a:	f7ff fc1a 	bl	800dec2 <HAL_I2C_ErrorCallback>
 800e68e:	e01e      	b.n	800e6ce <I2C_DMAXferCplt+0x1a2>
 800e690:	697b      	ldr	r3, [r7, #20]
 800e692:	2220      	movs	r2, #32
 800e694:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e698:	697b      	ldr	r3, [r7, #20]
 800e69a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e69e:	b2db      	uxtb	r3, r3
 800e6a0:	2b40      	cmp	r3, #64	@ 0x40
 800e6a2:	d10a      	bne.n	800e6ba <I2C_DMAXferCplt+0x18e>
 800e6a4:	697b      	ldr	r3, [r7, #20]
 800e6a6:	2200      	movs	r2, #0
 800e6a8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e6ac:	697b      	ldr	r3, [r7, #20]
 800e6ae:	2200      	movs	r2, #0
 800e6b0:	631a      	str	r2, [r3, #48]	@ 0x30
 800e6b2:	6978      	ldr	r0, [r7, #20]
 800e6b4:	f7f3 fc10 	bl	8001ed8 <HAL_I2C_MemRxCpltCallback>
 800e6b8:	e009      	b.n	800e6ce <I2C_DMAXferCplt+0x1a2>
 800e6ba:	697b      	ldr	r3, [r7, #20]
 800e6bc:	2200      	movs	r2, #0
 800e6be:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e6c2:	697b      	ldr	r3, [r7, #20]
 800e6c4:	2212      	movs	r2, #18
 800e6c6:	631a      	str	r2, [r3, #48]	@ 0x30
 800e6c8:	6978      	ldr	r0, [r7, #20]
 800e6ca:	f7ff fbd2 	bl	800de72 <HAL_I2C_MasterRxCpltCallback>
 800e6ce:	bf00      	nop
 800e6d0:	3718      	adds	r7, #24
 800e6d2:	46bd      	mov	sp, r7
 800e6d4:	bd80      	pop	{r7, pc}

0800e6d6 <I2C_DMAError>:
 800e6d6:	b580      	push	{r7, lr}
 800e6d8:	b084      	sub	sp, #16
 800e6da:	af00      	add	r7, sp, #0
 800e6dc:	6078      	str	r0, [r7, #4]
 800e6de:	687b      	ldr	r3, [r7, #4]
 800e6e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e6e2:	60fb      	str	r3, [r7, #12]
 800e6e4:	68fb      	ldr	r3, [r7, #12]
 800e6e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e6e8:	2b00      	cmp	r3, #0
 800e6ea:	d003      	beq.n	800e6f4 <I2C_DMAError+0x1e>
 800e6ec:	68fb      	ldr	r3, [r7, #12]
 800e6ee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e6f0:	2200      	movs	r2, #0
 800e6f2:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e6f4:	68fb      	ldr	r3, [r7, #12]
 800e6f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e6f8:	2b00      	cmp	r3, #0
 800e6fa:	d003      	beq.n	800e704 <I2C_DMAError+0x2e>
 800e6fc:	68fb      	ldr	r3, [r7, #12]
 800e6fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e700:	2200      	movs	r2, #0
 800e702:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e704:	6878      	ldr	r0, [r7, #4]
 800e706:	f7fe fa63 	bl	800cbd0 <HAL_DMA_GetError>
 800e70a:	4603      	mov	r3, r0
 800e70c:	2b02      	cmp	r3, #2
 800e70e:	d01b      	beq.n	800e748 <I2C_DMAError+0x72>
 800e710:	68fb      	ldr	r3, [r7, #12]
 800e712:	681b      	ldr	r3, [r3, #0]
 800e714:	681a      	ldr	r2, [r3, #0]
 800e716:	68fb      	ldr	r3, [r7, #12]
 800e718:	681b      	ldr	r3, [r3, #0]
 800e71a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e71e:	601a      	str	r2, [r3, #0]
 800e720:	68fb      	ldr	r3, [r7, #12]
 800e722:	2200      	movs	r2, #0
 800e724:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e726:	68fb      	ldr	r3, [r7, #12]
 800e728:	2220      	movs	r2, #32
 800e72a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e72e:	68fb      	ldr	r3, [r7, #12]
 800e730:	2200      	movs	r2, #0
 800e732:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e736:	68fb      	ldr	r3, [r7, #12]
 800e738:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e73a:	f043 0210 	orr.w	r2, r3, #16
 800e73e:	68fb      	ldr	r3, [r7, #12]
 800e740:	641a      	str	r2, [r3, #64]	@ 0x40
 800e742:	68f8      	ldr	r0, [r7, #12]
 800e744:	f7ff fbbd 	bl	800dec2 <HAL_I2C_ErrorCallback>
 800e748:	bf00      	nop
 800e74a:	3710      	adds	r7, #16
 800e74c:	46bd      	mov	sp, r7
 800e74e:	bd80      	pop	{r7, pc}

0800e750 <I2C_DMAAbort>:
 800e750:	b580      	push	{r7, lr}
 800e752:	b086      	sub	sp, #24
 800e754:	af00      	add	r7, sp, #0
 800e756:	6078      	str	r0, [r7, #4]
 800e758:	2300      	movs	r3, #0
 800e75a:	60fb      	str	r3, [r7, #12]
 800e75c:	687b      	ldr	r3, [r7, #4]
 800e75e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e760:	617b      	str	r3, [r7, #20]
 800e762:	697b      	ldr	r3, [r7, #20]
 800e764:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e768:	74fb      	strb	r3, [r7, #19]
 800e76a:	4b4b      	ldr	r3, [pc, #300]	@ (800e898 <I2C_DMAAbort+0x148>)
 800e76c:	681b      	ldr	r3, [r3, #0]
 800e76e:	08db      	lsrs	r3, r3, #3
 800e770:	4a4a      	ldr	r2, [pc, #296]	@ (800e89c <I2C_DMAAbort+0x14c>)
 800e772:	fba2 2303 	umull	r2, r3, r2, r3
 800e776:	0a1a      	lsrs	r2, r3, #8
 800e778:	4613      	mov	r3, r2
 800e77a:	009b      	lsls	r3, r3, #2
 800e77c:	4413      	add	r3, r2
 800e77e:	00da      	lsls	r2, r3, #3
 800e780:	1ad3      	subs	r3, r2, r3
 800e782:	60fb      	str	r3, [r7, #12]
 800e784:	68fb      	ldr	r3, [r7, #12]
 800e786:	2b00      	cmp	r3, #0
 800e788:	d106      	bne.n	800e798 <I2C_DMAAbort+0x48>
 800e78a:	697b      	ldr	r3, [r7, #20]
 800e78c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e78e:	f043 0220 	orr.w	r2, r3, #32
 800e792:	697b      	ldr	r3, [r7, #20]
 800e794:	641a      	str	r2, [r3, #64]	@ 0x40
 800e796:	e00a      	b.n	800e7ae <I2C_DMAAbort+0x5e>
 800e798:	68fb      	ldr	r3, [r7, #12]
 800e79a:	3b01      	subs	r3, #1
 800e79c:	60fb      	str	r3, [r7, #12]
 800e79e:	697b      	ldr	r3, [r7, #20]
 800e7a0:	681b      	ldr	r3, [r3, #0]
 800e7a2:	681b      	ldr	r3, [r3, #0]
 800e7a4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800e7a8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e7ac:	d0ea      	beq.n	800e784 <I2C_DMAAbort+0x34>
 800e7ae:	697b      	ldr	r3, [r7, #20]
 800e7b0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	d003      	beq.n	800e7be <I2C_DMAAbort+0x6e>
 800e7b6:	697b      	ldr	r3, [r7, #20]
 800e7b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e7ba:	2200      	movs	r2, #0
 800e7bc:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e7be:	697b      	ldr	r3, [r7, #20]
 800e7c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7c2:	2b00      	cmp	r3, #0
 800e7c4:	d003      	beq.n	800e7ce <I2C_DMAAbort+0x7e>
 800e7c6:	697b      	ldr	r3, [r7, #20]
 800e7c8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7ca:	2200      	movs	r2, #0
 800e7cc:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e7ce:	697b      	ldr	r3, [r7, #20]
 800e7d0:	681b      	ldr	r3, [r3, #0]
 800e7d2:	681a      	ldr	r2, [r3, #0]
 800e7d4:	697b      	ldr	r3, [r7, #20]
 800e7d6:	681b      	ldr	r3, [r3, #0]
 800e7d8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e7dc:	601a      	str	r2, [r3, #0]
 800e7de:	697b      	ldr	r3, [r7, #20]
 800e7e0:	2200      	movs	r2, #0
 800e7e2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e7e4:	697b      	ldr	r3, [r7, #20]
 800e7e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e7e8:	2b00      	cmp	r3, #0
 800e7ea:	d003      	beq.n	800e7f4 <I2C_DMAAbort+0xa4>
 800e7ec:	697b      	ldr	r3, [r7, #20]
 800e7ee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e7f0:	2200      	movs	r2, #0
 800e7f2:	651a      	str	r2, [r3, #80]	@ 0x50
 800e7f4:	697b      	ldr	r3, [r7, #20]
 800e7f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e7f8:	2b00      	cmp	r3, #0
 800e7fa:	d003      	beq.n	800e804 <I2C_DMAAbort+0xb4>
 800e7fc:	697b      	ldr	r3, [r7, #20]
 800e7fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e800:	2200      	movs	r2, #0
 800e802:	651a      	str	r2, [r3, #80]	@ 0x50
 800e804:	697b      	ldr	r3, [r7, #20]
 800e806:	681b      	ldr	r3, [r3, #0]
 800e808:	681a      	ldr	r2, [r3, #0]
 800e80a:	697b      	ldr	r3, [r7, #20]
 800e80c:	681b      	ldr	r3, [r3, #0]
 800e80e:	f022 0201 	bic.w	r2, r2, #1
 800e812:	601a      	str	r2, [r3, #0]
 800e814:	697b      	ldr	r3, [r7, #20]
 800e816:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e81a:	b2db      	uxtb	r3, r3
 800e81c:	2b60      	cmp	r3, #96	@ 0x60
 800e81e:	d10e      	bne.n	800e83e <I2C_DMAAbort+0xee>
 800e820:	697b      	ldr	r3, [r7, #20]
 800e822:	2220      	movs	r2, #32
 800e824:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e828:	697b      	ldr	r3, [r7, #20]
 800e82a:	2200      	movs	r2, #0
 800e82c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e830:	697b      	ldr	r3, [r7, #20]
 800e832:	2200      	movs	r2, #0
 800e834:	641a      	str	r2, [r3, #64]	@ 0x40
 800e836:	6978      	ldr	r0, [r7, #20]
 800e838:	f7ff fb4d 	bl	800ded6 <HAL_I2C_AbortCpltCallback>
 800e83c:	e027      	b.n	800e88e <I2C_DMAAbort+0x13e>
 800e83e:	7cfb      	ldrb	r3, [r7, #19]
 800e840:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800e844:	2b28      	cmp	r3, #40	@ 0x28
 800e846:	d117      	bne.n	800e878 <I2C_DMAAbort+0x128>
 800e848:	697b      	ldr	r3, [r7, #20]
 800e84a:	681b      	ldr	r3, [r3, #0]
 800e84c:	681a      	ldr	r2, [r3, #0]
 800e84e:	697b      	ldr	r3, [r7, #20]
 800e850:	681b      	ldr	r3, [r3, #0]
 800e852:	f042 0201 	orr.w	r2, r2, #1
 800e856:	601a      	str	r2, [r3, #0]
 800e858:	697b      	ldr	r3, [r7, #20]
 800e85a:	681b      	ldr	r3, [r3, #0]
 800e85c:	681a      	ldr	r2, [r3, #0]
 800e85e:	697b      	ldr	r3, [r7, #20]
 800e860:	681b      	ldr	r3, [r3, #0]
 800e862:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e866:	601a      	str	r2, [r3, #0]
 800e868:	697b      	ldr	r3, [r7, #20]
 800e86a:	2200      	movs	r2, #0
 800e86c:	631a      	str	r2, [r3, #48]	@ 0x30
 800e86e:	697b      	ldr	r3, [r7, #20]
 800e870:	2228      	movs	r2, #40	@ 0x28
 800e872:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e876:	e007      	b.n	800e888 <I2C_DMAAbort+0x138>
 800e878:	697b      	ldr	r3, [r7, #20]
 800e87a:	2220      	movs	r2, #32
 800e87c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e880:	697b      	ldr	r3, [r7, #20]
 800e882:	2200      	movs	r2, #0
 800e884:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e888:	6978      	ldr	r0, [r7, #20]
 800e88a:	f7ff fb1a 	bl	800dec2 <HAL_I2C_ErrorCallback>
 800e88e:	bf00      	nop
 800e890:	3718      	adds	r7, #24
 800e892:	46bd      	mov	sp, r7
 800e894:	bd80      	pop	{r7, pc}
 800e896:	bf00      	nop
 800e898:	20000004 	.word	0x20000004
 800e89c:	14f8b589 	.word	0x14f8b589

0800e8a0 <I2C_WaitOnFlagUntilTimeout>:
 800e8a0:	b580      	push	{r7, lr}
 800e8a2:	b084      	sub	sp, #16
 800e8a4:	af00      	add	r7, sp, #0
 800e8a6:	60f8      	str	r0, [r7, #12]
 800e8a8:	60b9      	str	r1, [r7, #8]
 800e8aa:	603b      	str	r3, [r7, #0]
 800e8ac:	4613      	mov	r3, r2
 800e8ae:	71fb      	strb	r3, [r7, #7]
 800e8b0:	e025      	b.n	800e8fe <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e8b2:	683b      	ldr	r3, [r7, #0]
 800e8b4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e8b8:	d021      	beq.n	800e8fe <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e8ba:	f7fc fc41 	bl	800b140 <HAL_GetTick>
 800e8be:	4602      	mov	r2, r0
 800e8c0:	69bb      	ldr	r3, [r7, #24]
 800e8c2:	1ad3      	subs	r3, r2, r3
 800e8c4:	683a      	ldr	r2, [r7, #0]
 800e8c6:	429a      	cmp	r2, r3
 800e8c8:	d302      	bcc.n	800e8d0 <I2C_WaitOnFlagUntilTimeout+0x30>
 800e8ca:	683b      	ldr	r3, [r7, #0]
 800e8cc:	2b00      	cmp	r3, #0
 800e8ce:	d116      	bne.n	800e8fe <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e8d0:	68fb      	ldr	r3, [r7, #12]
 800e8d2:	2200      	movs	r2, #0
 800e8d4:	631a      	str	r2, [r3, #48]	@ 0x30
 800e8d6:	68fb      	ldr	r3, [r7, #12]
 800e8d8:	2220      	movs	r2, #32
 800e8da:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e8de:	68fb      	ldr	r3, [r7, #12]
 800e8e0:	2200      	movs	r2, #0
 800e8e2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e8e6:	68fb      	ldr	r3, [r7, #12]
 800e8e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e8ea:	f043 0220 	orr.w	r2, r3, #32
 800e8ee:	68fb      	ldr	r3, [r7, #12]
 800e8f0:	641a      	str	r2, [r3, #64]	@ 0x40
 800e8f2:	68fb      	ldr	r3, [r7, #12]
 800e8f4:	2200      	movs	r2, #0
 800e8f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e8fa:	2301      	movs	r3, #1
 800e8fc:	e023      	b.n	800e946 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800e8fe:	68bb      	ldr	r3, [r7, #8]
 800e900:	0c1b      	lsrs	r3, r3, #16
 800e902:	b2db      	uxtb	r3, r3
 800e904:	2b01      	cmp	r3, #1
 800e906:	d10d      	bne.n	800e924 <I2C_WaitOnFlagUntilTimeout+0x84>
 800e908:	68fb      	ldr	r3, [r7, #12]
 800e90a:	681b      	ldr	r3, [r3, #0]
 800e90c:	695b      	ldr	r3, [r3, #20]
 800e90e:	43da      	mvns	r2, r3
 800e910:	68bb      	ldr	r3, [r7, #8]
 800e912:	4013      	ands	r3, r2
 800e914:	b29b      	uxth	r3, r3
 800e916:	2b00      	cmp	r3, #0
 800e918:	bf0c      	ite	eq
 800e91a:	2301      	moveq	r3, #1
 800e91c:	2300      	movne	r3, #0
 800e91e:	b2db      	uxtb	r3, r3
 800e920:	461a      	mov	r2, r3
 800e922:	e00c      	b.n	800e93e <I2C_WaitOnFlagUntilTimeout+0x9e>
 800e924:	68fb      	ldr	r3, [r7, #12]
 800e926:	681b      	ldr	r3, [r3, #0]
 800e928:	699b      	ldr	r3, [r3, #24]
 800e92a:	43da      	mvns	r2, r3
 800e92c:	68bb      	ldr	r3, [r7, #8]
 800e92e:	4013      	ands	r3, r2
 800e930:	b29b      	uxth	r3, r3
 800e932:	2b00      	cmp	r3, #0
 800e934:	bf0c      	ite	eq
 800e936:	2301      	moveq	r3, #1
 800e938:	2300      	movne	r3, #0
 800e93a:	b2db      	uxtb	r3, r3
 800e93c:	461a      	mov	r2, r3
 800e93e:	79fb      	ldrb	r3, [r7, #7]
 800e940:	429a      	cmp	r2, r3
 800e942:	d0b6      	beq.n	800e8b2 <I2C_WaitOnFlagUntilTimeout+0x12>
 800e944:	2300      	movs	r3, #0
 800e946:	4618      	mov	r0, r3
 800e948:	3710      	adds	r7, #16
 800e94a:	46bd      	mov	sp, r7
 800e94c:	bd80      	pop	{r7, pc}

0800e94e <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800e94e:	b580      	push	{r7, lr}
 800e950:	b084      	sub	sp, #16
 800e952:	af00      	add	r7, sp, #0
 800e954:	60f8      	str	r0, [r7, #12]
 800e956:	60b9      	str	r1, [r7, #8]
 800e958:	607a      	str	r2, [r7, #4]
 800e95a:	603b      	str	r3, [r7, #0]
 800e95c:	e051      	b.n	800ea02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e95e:	68fb      	ldr	r3, [r7, #12]
 800e960:	681b      	ldr	r3, [r3, #0]
 800e962:	695b      	ldr	r3, [r3, #20]
 800e964:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800e968:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800e96c:	d123      	bne.n	800e9b6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800e96e:	68fb      	ldr	r3, [r7, #12]
 800e970:	681b      	ldr	r3, [r3, #0]
 800e972:	681a      	ldr	r2, [r3, #0]
 800e974:	68fb      	ldr	r3, [r7, #12]
 800e976:	681b      	ldr	r3, [r3, #0]
 800e978:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e97c:	601a      	str	r2, [r3, #0]
 800e97e:	68fb      	ldr	r3, [r7, #12]
 800e980:	681b      	ldr	r3, [r3, #0]
 800e982:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800e986:	615a      	str	r2, [r3, #20]
 800e988:	68fb      	ldr	r3, [r7, #12]
 800e98a:	2200      	movs	r2, #0
 800e98c:	631a      	str	r2, [r3, #48]	@ 0x30
 800e98e:	68fb      	ldr	r3, [r7, #12]
 800e990:	2220      	movs	r2, #32
 800e992:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e996:	68fb      	ldr	r3, [r7, #12]
 800e998:	2200      	movs	r2, #0
 800e99a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e99e:	68fb      	ldr	r3, [r7, #12]
 800e9a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e9a2:	f043 0204 	orr.w	r2, r3, #4
 800e9a6:	68fb      	ldr	r3, [r7, #12]
 800e9a8:	641a      	str	r2, [r3, #64]	@ 0x40
 800e9aa:	68fb      	ldr	r3, [r7, #12]
 800e9ac:	2200      	movs	r2, #0
 800e9ae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e9b2:	2301      	movs	r3, #1
 800e9b4:	e046      	b.n	800ea44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800e9b6:	687b      	ldr	r3, [r7, #4]
 800e9b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e9bc:	d021      	beq.n	800ea02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e9be:	f7fc fbbf 	bl	800b140 <HAL_GetTick>
 800e9c2:	4602      	mov	r2, r0
 800e9c4:	683b      	ldr	r3, [r7, #0]
 800e9c6:	1ad3      	subs	r3, r2, r3
 800e9c8:	687a      	ldr	r2, [r7, #4]
 800e9ca:	429a      	cmp	r2, r3
 800e9cc:	d302      	bcc.n	800e9d4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	2b00      	cmp	r3, #0
 800e9d2:	d116      	bne.n	800ea02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e9d4:	68fb      	ldr	r3, [r7, #12]
 800e9d6:	2200      	movs	r2, #0
 800e9d8:	631a      	str	r2, [r3, #48]	@ 0x30
 800e9da:	68fb      	ldr	r3, [r7, #12]
 800e9dc:	2220      	movs	r2, #32
 800e9de:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e9e2:	68fb      	ldr	r3, [r7, #12]
 800e9e4:	2200      	movs	r2, #0
 800e9e6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e9ea:	68fb      	ldr	r3, [r7, #12]
 800e9ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e9ee:	f043 0220 	orr.w	r2, r3, #32
 800e9f2:	68fb      	ldr	r3, [r7, #12]
 800e9f4:	641a      	str	r2, [r3, #64]	@ 0x40
 800e9f6:	68fb      	ldr	r3, [r7, #12]
 800e9f8:	2200      	movs	r2, #0
 800e9fa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e9fe:	2301      	movs	r3, #1
 800ea00:	e020      	b.n	800ea44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800ea02:	68bb      	ldr	r3, [r7, #8]
 800ea04:	0c1b      	lsrs	r3, r3, #16
 800ea06:	b2db      	uxtb	r3, r3
 800ea08:	2b01      	cmp	r3, #1
 800ea0a:	d10c      	bne.n	800ea26 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 800ea0c:	68fb      	ldr	r3, [r7, #12]
 800ea0e:	681b      	ldr	r3, [r3, #0]
 800ea10:	695b      	ldr	r3, [r3, #20]
 800ea12:	43da      	mvns	r2, r3
 800ea14:	68bb      	ldr	r3, [r7, #8]
 800ea16:	4013      	ands	r3, r2
 800ea18:	b29b      	uxth	r3, r3
 800ea1a:	2b00      	cmp	r3, #0
 800ea1c:	bf14      	ite	ne
 800ea1e:	2301      	movne	r3, #1
 800ea20:	2300      	moveq	r3, #0
 800ea22:	b2db      	uxtb	r3, r3
 800ea24:	e00b      	b.n	800ea3e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800ea26:	68fb      	ldr	r3, [r7, #12]
 800ea28:	681b      	ldr	r3, [r3, #0]
 800ea2a:	699b      	ldr	r3, [r3, #24]
 800ea2c:	43da      	mvns	r2, r3
 800ea2e:	68bb      	ldr	r3, [r7, #8]
 800ea30:	4013      	ands	r3, r2
 800ea32:	b29b      	uxth	r3, r3
 800ea34:	2b00      	cmp	r3, #0
 800ea36:	bf14      	ite	ne
 800ea38:	2301      	movne	r3, #1
 800ea3a:	2300      	moveq	r3, #0
 800ea3c:	b2db      	uxtb	r3, r3
 800ea3e:	2b00      	cmp	r3, #0
 800ea40:	d18d      	bne.n	800e95e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800ea42:	2300      	movs	r3, #0
 800ea44:	4618      	mov	r0, r3
 800ea46:	3710      	adds	r7, #16
 800ea48:	46bd      	mov	sp, r7
 800ea4a:	bd80      	pop	{r7, pc}

0800ea4c <I2C_WaitOnTXEFlagUntilTimeout>:
 800ea4c:	b580      	push	{r7, lr}
 800ea4e:	b084      	sub	sp, #16
 800ea50:	af00      	add	r7, sp, #0
 800ea52:	60f8      	str	r0, [r7, #12]
 800ea54:	60b9      	str	r1, [r7, #8]
 800ea56:	607a      	str	r2, [r7, #4]
 800ea58:	e02d      	b.n	800eab6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800ea5a:	68f8      	ldr	r0, [r7, #12]
 800ea5c:	f000 f8ce 	bl	800ebfc <I2C_IsAcknowledgeFailed>
 800ea60:	4603      	mov	r3, r0
 800ea62:	2b00      	cmp	r3, #0
 800ea64:	d001      	beq.n	800ea6a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800ea66:	2301      	movs	r3, #1
 800ea68:	e02d      	b.n	800eac6 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800ea6a:	68bb      	ldr	r3, [r7, #8]
 800ea6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ea70:	d021      	beq.n	800eab6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800ea72:	f7fc fb65 	bl	800b140 <HAL_GetTick>
 800ea76:	4602      	mov	r2, r0
 800ea78:	687b      	ldr	r3, [r7, #4]
 800ea7a:	1ad3      	subs	r3, r2, r3
 800ea7c:	68ba      	ldr	r2, [r7, #8]
 800ea7e:	429a      	cmp	r2, r3
 800ea80:	d302      	bcc.n	800ea88 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800ea82:	68bb      	ldr	r3, [r7, #8]
 800ea84:	2b00      	cmp	r3, #0
 800ea86:	d116      	bne.n	800eab6 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800ea88:	68fb      	ldr	r3, [r7, #12]
 800ea8a:	2200      	movs	r2, #0
 800ea8c:	631a      	str	r2, [r3, #48]	@ 0x30
 800ea8e:	68fb      	ldr	r3, [r7, #12]
 800ea90:	2220      	movs	r2, #32
 800ea92:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea96:	68fb      	ldr	r3, [r7, #12]
 800ea98:	2200      	movs	r2, #0
 800ea9a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ea9e:	68fb      	ldr	r3, [r7, #12]
 800eaa0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800eaa2:	f043 0220 	orr.w	r2, r3, #32
 800eaa6:	68fb      	ldr	r3, [r7, #12]
 800eaa8:	641a      	str	r2, [r3, #64]	@ 0x40
 800eaaa:	68fb      	ldr	r3, [r7, #12]
 800eaac:	2200      	movs	r2, #0
 800eaae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eab2:	2301      	movs	r3, #1
 800eab4:	e007      	b.n	800eac6 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800eab6:	68fb      	ldr	r3, [r7, #12]
 800eab8:	681b      	ldr	r3, [r3, #0]
 800eaba:	695b      	ldr	r3, [r3, #20]
 800eabc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800eac0:	2b80      	cmp	r3, #128	@ 0x80
 800eac2:	d1ca      	bne.n	800ea5a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800eac4:	2300      	movs	r3, #0
 800eac6:	4618      	mov	r0, r3
 800eac8:	3710      	adds	r7, #16
 800eaca:	46bd      	mov	sp, r7
 800eacc:	bd80      	pop	{r7, pc}

0800eace <I2C_WaitOnBTFFlagUntilTimeout>:
 800eace:	b580      	push	{r7, lr}
 800ead0:	b084      	sub	sp, #16
 800ead2:	af00      	add	r7, sp, #0
 800ead4:	60f8      	str	r0, [r7, #12]
 800ead6:	60b9      	str	r1, [r7, #8]
 800ead8:	607a      	str	r2, [r7, #4]
 800eada:	e02d      	b.n	800eb38 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800eadc:	68f8      	ldr	r0, [r7, #12]
 800eade:	f000 f88d 	bl	800ebfc <I2C_IsAcknowledgeFailed>
 800eae2:	4603      	mov	r3, r0
 800eae4:	2b00      	cmp	r3, #0
 800eae6:	d001      	beq.n	800eaec <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800eae8:	2301      	movs	r3, #1
 800eaea:	e02d      	b.n	800eb48 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800eaec:	68bb      	ldr	r3, [r7, #8]
 800eaee:	f1b3 3fff 	cmp.w	r3, #4294967295
 800eaf2:	d021      	beq.n	800eb38 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800eaf4:	f7fc fb24 	bl	800b140 <HAL_GetTick>
 800eaf8:	4602      	mov	r2, r0
 800eafa:	687b      	ldr	r3, [r7, #4]
 800eafc:	1ad3      	subs	r3, r2, r3
 800eafe:	68ba      	ldr	r2, [r7, #8]
 800eb00:	429a      	cmp	r2, r3
 800eb02:	d302      	bcc.n	800eb0a <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800eb04:	68bb      	ldr	r3, [r7, #8]
 800eb06:	2b00      	cmp	r3, #0
 800eb08:	d116      	bne.n	800eb38 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800eb0a:	68fb      	ldr	r3, [r7, #12]
 800eb0c:	2200      	movs	r2, #0
 800eb0e:	631a      	str	r2, [r3, #48]	@ 0x30
 800eb10:	68fb      	ldr	r3, [r7, #12]
 800eb12:	2220      	movs	r2, #32
 800eb14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eb18:	68fb      	ldr	r3, [r7, #12]
 800eb1a:	2200      	movs	r2, #0
 800eb1c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800eb20:	68fb      	ldr	r3, [r7, #12]
 800eb22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800eb24:	f043 0220 	orr.w	r2, r3, #32
 800eb28:	68fb      	ldr	r3, [r7, #12]
 800eb2a:	641a      	str	r2, [r3, #64]	@ 0x40
 800eb2c:	68fb      	ldr	r3, [r7, #12]
 800eb2e:	2200      	movs	r2, #0
 800eb30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eb34:	2301      	movs	r3, #1
 800eb36:	e007      	b.n	800eb48 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800eb38:	68fb      	ldr	r3, [r7, #12]
 800eb3a:	681b      	ldr	r3, [r3, #0]
 800eb3c:	695b      	ldr	r3, [r3, #20]
 800eb3e:	f003 0304 	and.w	r3, r3, #4
 800eb42:	2b04      	cmp	r3, #4
 800eb44:	d1ca      	bne.n	800eadc <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800eb46:	2300      	movs	r3, #0
 800eb48:	4618      	mov	r0, r3
 800eb4a:	3710      	adds	r7, #16
 800eb4c:	46bd      	mov	sp, r7
 800eb4e:	bd80      	pop	{r7, pc}

0800eb50 <I2C_WaitOnRXNEFlagUntilTimeout>:
 800eb50:	b580      	push	{r7, lr}
 800eb52:	b084      	sub	sp, #16
 800eb54:	af00      	add	r7, sp, #0
 800eb56:	60f8      	str	r0, [r7, #12]
 800eb58:	60b9      	str	r1, [r7, #8]
 800eb5a:	607a      	str	r2, [r7, #4]
 800eb5c:	e042      	b.n	800ebe4 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800eb5e:	68fb      	ldr	r3, [r7, #12]
 800eb60:	681b      	ldr	r3, [r3, #0]
 800eb62:	695b      	ldr	r3, [r3, #20]
 800eb64:	f003 0310 	and.w	r3, r3, #16
 800eb68:	2b10      	cmp	r3, #16
 800eb6a:	d119      	bne.n	800eba0 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 800eb6c:	68fb      	ldr	r3, [r7, #12]
 800eb6e:	681b      	ldr	r3, [r3, #0]
 800eb70:	f06f 0210 	mvn.w	r2, #16
 800eb74:	615a      	str	r2, [r3, #20]
 800eb76:	68fb      	ldr	r3, [r7, #12]
 800eb78:	2200      	movs	r2, #0
 800eb7a:	631a      	str	r2, [r3, #48]	@ 0x30
 800eb7c:	68fb      	ldr	r3, [r7, #12]
 800eb7e:	2220      	movs	r2, #32
 800eb80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eb84:	68fb      	ldr	r3, [r7, #12]
 800eb86:	2200      	movs	r2, #0
 800eb88:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800eb8c:	68fb      	ldr	r3, [r7, #12]
 800eb8e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800eb90:	68fb      	ldr	r3, [r7, #12]
 800eb92:	641a      	str	r2, [r3, #64]	@ 0x40
 800eb94:	68fb      	ldr	r3, [r7, #12]
 800eb96:	2200      	movs	r2, #0
 800eb98:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eb9c:	2301      	movs	r3, #1
 800eb9e:	e029      	b.n	800ebf4 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800eba0:	f7fc face 	bl	800b140 <HAL_GetTick>
 800eba4:	4602      	mov	r2, r0
 800eba6:	687b      	ldr	r3, [r7, #4]
 800eba8:	1ad3      	subs	r3, r2, r3
 800ebaa:	68ba      	ldr	r2, [r7, #8]
 800ebac:	429a      	cmp	r2, r3
 800ebae:	d302      	bcc.n	800ebb6 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800ebb0:	68bb      	ldr	r3, [r7, #8]
 800ebb2:	2b00      	cmp	r3, #0
 800ebb4:	d116      	bne.n	800ebe4 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800ebb6:	68fb      	ldr	r3, [r7, #12]
 800ebb8:	2200      	movs	r2, #0
 800ebba:	631a      	str	r2, [r3, #48]	@ 0x30
 800ebbc:	68fb      	ldr	r3, [r7, #12]
 800ebbe:	2220      	movs	r2, #32
 800ebc0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ebc4:	68fb      	ldr	r3, [r7, #12]
 800ebc6:	2200      	movs	r2, #0
 800ebc8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ebcc:	68fb      	ldr	r3, [r7, #12]
 800ebce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ebd0:	f043 0220 	orr.w	r2, r3, #32
 800ebd4:	68fb      	ldr	r3, [r7, #12]
 800ebd6:	641a      	str	r2, [r3, #64]	@ 0x40
 800ebd8:	68fb      	ldr	r3, [r7, #12]
 800ebda:	2200      	movs	r2, #0
 800ebdc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ebe0:	2301      	movs	r3, #1
 800ebe2:	e007      	b.n	800ebf4 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800ebe4:	68fb      	ldr	r3, [r7, #12]
 800ebe6:	681b      	ldr	r3, [r3, #0]
 800ebe8:	695b      	ldr	r3, [r3, #20]
 800ebea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ebee:	2b40      	cmp	r3, #64	@ 0x40
 800ebf0:	d1b5      	bne.n	800eb5e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800ebf2:	2300      	movs	r3, #0
 800ebf4:	4618      	mov	r0, r3
 800ebf6:	3710      	adds	r7, #16
 800ebf8:	46bd      	mov	sp, r7
 800ebfa:	bd80      	pop	{r7, pc}

0800ebfc <I2C_IsAcknowledgeFailed>:
 800ebfc:	b480      	push	{r7}
 800ebfe:	b083      	sub	sp, #12
 800ec00:	af00      	add	r7, sp, #0
 800ec02:	6078      	str	r0, [r7, #4]
 800ec04:	687b      	ldr	r3, [r7, #4]
 800ec06:	681b      	ldr	r3, [r3, #0]
 800ec08:	695b      	ldr	r3, [r3, #20]
 800ec0a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800ec0e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800ec12:	d11b      	bne.n	800ec4c <I2C_IsAcknowledgeFailed+0x50>
 800ec14:	687b      	ldr	r3, [r7, #4]
 800ec16:	681b      	ldr	r3, [r3, #0]
 800ec18:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800ec1c:	615a      	str	r2, [r3, #20]
 800ec1e:	687b      	ldr	r3, [r7, #4]
 800ec20:	2200      	movs	r2, #0
 800ec22:	631a      	str	r2, [r3, #48]	@ 0x30
 800ec24:	687b      	ldr	r3, [r7, #4]
 800ec26:	2220      	movs	r2, #32
 800ec28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ec2c:	687b      	ldr	r3, [r7, #4]
 800ec2e:	2200      	movs	r2, #0
 800ec30:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ec34:	687b      	ldr	r3, [r7, #4]
 800ec36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ec38:	f043 0204 	orr.w	r2, r3, #4
 800ec3c:	687b      	ldr	r3, [r7, #4]
 800ec3e:	641a      	str	r2, [r3, #64]	@ 0x40
 800ec40:	687b      	ldr	r3, [r7, #4]
 800ec42:	2200      	movs	r2, #0
 800ec44:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ec48:	2301      	movs	r3, #1
 800ec4a:	e000      	b.n	800ec4e <I2C_IsAcknowledgeFailed+0x52>
 800ec4c:	2300      	movs	r3, #0
 800ec4e:	4618      	mov	r0, r3
 800ec50:	370c      	adds	r7, #12
 800ec52:	46bd      	mov	sp, r7
 800ec54:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec58:	4770      	bx	lr

0800ec5a <HAL_PCD_Init>:
 800ec5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec5c:	b08f      	sub	sp, #60	@ 0x3c
 800ec5e:	af0a      	add	r7, sp, #40	@ 0x28
 800ec60:	6078      	str	r0, [r7, #4]
 800ec62:	687b      	ldr	r3, [r7, #4]
 800ec64:	2b00      	cmp	r3, #0
 800ec66:	d101      	bne.n	800ec6c <HAL_PCD_Init+0x12>
 800ec68:	2301      	movs	r3, #1
 800ec6a:	e10f      	b.n	800ee8c <HAL_PCD_Init+0x232>
 800ec6c:	687b      	ldr	r3, [r7, #4]
 800ec6e:	681b      	ldr	r3, [r3, #0]
 800ec70:	60bb      	str	r3, [r7, #8]
 800ec72:	687b      	ldr	r3, [r7, #4]
 800ec74:	f893 34bd 	ldrb.w	r3, [r3, #1213]	@ 0x4bd
 800ec78:	b2db      	uxtb	r3, r3
 800ec7a:	2b00      	cmp	r3, #0
 800ec7c:	d106      	bne.n	800ec8c <HAL_PCD_Init+0x32>
 800ec7e:	687b      	ldr	r3, [r7, #4]
 800ec80:	2200      	movs	r2, #0
 800ec82:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800ec86:	6878      	ldr	r0, [r7, #4]
 800ec88:	f00b fd1e 	bl	801a6c8 <HAL_PCD_MspInit>
 800ec8c:	687b      	ldr	r3, [r7, #4]
 800ec8e:	2203      	movs	r2, #3
 800ec90:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ec94:	68bb      	ldr	r3, [r7, #8]
 800ec96:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ec98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ec9c:	2b00      	cmp	r3, #0
 800ec9e:	d102      	bne.n	800eca6 <HAL_PCD_Init+0x4c>
 800eca0:	687b      	ldr	r3, [r7, #4]
 800eca2:	2200      	movs	r2, #0
 800eca4:	611a      	str	r2, [r3, #16]
 800eca6:	687b      	ldr	r3, [r7, #4]
 800eca8:	681b      	ldr	r3, [r3, #0]
 800ecaa:	4618      	mov	r0, r3
 800ecac:	f004 ff2b 	bl	8013b06 <USB_DisableGlobalInt>
 800ecb0:	687b      	ldr	r3, [r7, #4]
 800ecb2:	681b      	ldr	r3, [r3, #0]
 800ecb4:	603b      	str	r3, [r7, #0]
 800ecb6:	687e      	ldr	r6, [r7, #4]
 800ecb8:	466d      	mov	r5, sp
 800ecba:	f106 0410 	add.w	r4, r6, #16
 800ecbe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ecc0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ecc2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ecc4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ecc6:	e894 0003 	ldmia.w	r4, {r0, r1}
 800ecca:	e885 0003 	stmia.w	r5, {r0, r1}
 800ecce:	1d33      	adds	r3, r6, #4
 800ecd0:	cb0e      	ldmia	r3, {r1, r2, r3}
 800ecd2:	6838      	ldr	r0, [r7, #0]
 800ecd4:	f004 fe02 	bl	80138dc <USB_CoreInit>
 800ecd8:	4603      	mov	r3, r0
 800ecda:	2b00      	cmp	r3, #0
 800ecdc:	d005      	beq.n	800ecea <HAL_PCD_Init+0x90>
 800ecde:	687b      	ldr	r3, [r7, #4]
 800ece0:	2202      	movs	r2, #2
 800ece2:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ece6:	2301      	movs	r3, #1
 800ece8:	e0d0      	b.n	800ee8c <HAL_PCD_Init+0x232>
 800ecea:	687b      	ldr	r3, [r7, #4]
 800ecec:	681b      	ldr	r3, [r3, #0]
 800ecee:	2100      	movs	r1, #0
 800ecf0:	4618      	mov	r0, r3
 800ecf2:	f004 ff19 	bl	8013b28 <USB_SetCurrentMode>
 800ecf6:	2300      	movs	r3, #0
 800ecf8:	73fb      	strb	r3, [r7, #15]
 800ecfa:	e04a      	b.n	800ed92 <HAL_PCD_Init+0x138>
 800ecfc:	7bfa      	ldrb	r2, [r7, #15]
 800ecfe:	6879      	ldr	r1, [r7, #4]
 800ed00:	4613      	mov	r3, r2
 800ed02:	00db      	lsls	r3, r3, #3
 800ed04:	4413      	add	r3, r2
 800ed06:	009b      	lsls	r3, r3, #2
 800ed08:	440b      	add	r3, r1
 800ed0a:	333d      	adds	r3, #61	@ 0x3d
 800ed0c:	2201      	movs	r2, #1
 800ed0e:	701a      	strb	r2, [r3, #0]
 800ed10:	7bfa      	ldrb	r2, [r7, #15]
 800ed12:	6879      	ldr	r1, [r7, #4]
 800ed14:	4613      	mov	r3, r2
 800ed16:	00db      	lsls	r3, r3, #3
 800ed18:	4413      	add	r3, r2
 800ed1a:	009b      	lsls	r3, r3, #2
 800ed1c:	440b      	add	r3, r1
 800ed1e:	333c      	adds	r3, #60	@ 0x3c
 800ed20:	7bfa      	ldrb	r2, [r7, #15]
 800ed22:	701a      	strb	r2, [r3, #0]
 800ed24:	7bfa      	ldrb	r2, [r7, #15]
 800ed26:	7bfb      	ldrb	r3, [r7, #15]
 800ed28:	b298      	uxth	r0, r3
 800ed2a:	6879      	ldr	r1, [r7, #4]
 800ed2c:	4613      	mov	r3, r2
 800ed2e:	00db      	lsls	r3, r3, #3
 800ed30:	4413      	add	r3, r2
 800ed32:	009b      	lsls	r3, r3, #2
 800ed34:	440b      	add	r3, r1
 800ed36:	3344      	adds	r3, #68	@ 0x44
 800ed38:	4602      	mov	r2, r0
 800ed3a:	801a      	strh	r2, [r3, #0]
 800ed3c:	7bfa      	ldrb	r2, [r7, #15]
 800ed3e:	6879      	ldr	r1, [r7, #4]
 800ed40:	4613      	mov	r3, r2
 800ed42:	00db      	lsls	r3, r3, #3
 800ed44:	4413      	add	r3, r2
 800ed46:	009b      	lsls	r3, r3, #2
 800ed48:	440b      	add	r3, r1
 800ed4a:	3340      	adds	r3, #64	@ 0x40
 800ed4c:	2200      	movs	r2, #0
 800ed4e:	701a      	strb	r2, [r3, #0]
 800ed50:	7bfa      	ldrb	r2, [r7, #15]
 800ed52:	6879      	ldr	r1, [r7, #4]
 800ed54:	4613      	mov	r3, r2
 800ed56:	00db      	lsls	r3, r3, #3
 800ed58:	4413      	add	r3, r2
 800ed5a:	009b      	lsls	r3, r3, #2
 800ed5c:	440b      	add	r3, r1
 800ed5e:	3348      	adds	r3, #72	@ 0x48
 800ed60:	2200      	movs	r2, #0
 800ed62:	601a      	str	r2, [r3, #0]
 800ed64:	7bfa      	ldrb	r2, [r7, #15]
 800ed66:	6879      	ldr	r1, [r7, #4]
 800ed68:	4613      	mov	r3, r2
 800ed6a:	00db      	lsls	r3, r3, #3
 800ed6c:	4413      	add	r3, r2
 800ed6e:	009b      	lsls	r3, r3, #2
 800ed70:	440b      	add	r3, r1
 800ed72:	334c      	adds	r3, #76	@ 0x4c
 800ed74:	2200      	movs	r2, #0
 800ed76:	601a      	str	r2, [r3, #0]
 800ed78:	7bfa      	ldrb	r2, [r7, #15]
 800ed7a:	6879      	ldr	r1, [r7, #4]
 800ed7c:	4613      	mov	r3, r2
 800ed7e:	00db      	lsls	r3, r3, #3
 800ed80:	4413      	add	r3, r2
 800ed82:	009b      	lsls	r3, r3, #2
 800ed84:	440b      	add	r3, r1
 800ed86:	3354      	adds	r3, #84	@ 0x54
 800ed88:	2200      	movs	r2, #0
 800ed8a:	601a      	str	r2, [r3, #0]
 800ed8c:	7bfb      	ldrb	r3, [r7, #15]
 800ed8e:	3301      	adds	r3, #1
 800ed90:	73fb      	strb	r3, [r7, #15]
 800ed92:	7bfa      	ldrb	r2, [r7, #15]
 800ed94:	687b      	ldr	r3, [r7, #4]
 800ed96:	685b      	ldr	r3, [r3, #4]
 800ed98:	429a      	cmp	r2, r3
 800ed9a:	d3af      	bcc.n	800ecfc <HAL_PCD_Init+0xa2>
 800ed9c:	2300      	movs	r3, #0
 800ed9e:	73fb      	strb	r3, [r7, #15]
 800eda0:	e044      	b.n	800ee2c <HAL_PCD_Init+0x1d2>
 800eda2:	7bfa      	ldrb	r2, [r7, #15]
 800eda4:	6879      	ldr	r1, [r7, #4]
 800eda6:	4613      	mov	r3, r2
 800eda8:	00db      	lsls	r3, r3, #3
 800edaa:	4413      	add	r3, r2
 800edac:	009b      	lsls	r3, r3, #2
 800edae:	440b      	add	r3, r1
 800edb0:	f203 237d 	addw	r3, r3, #637	@ 0x27d
 800edb4:	2200      	movs	r2, #0
 800edb6:	701a      	strb	r2, [r3, #0]
 800edb8:	7bfa      	ldrb	r2, [r7, #15]
 800edba:	6879      	ldr	r1, [r7, #4]
 800edbc:	4613      	mov	r3, r2
 800edbe:	00db      	lsls	r3, r3, #3
 800edc0:	4413      	add	r3, r2
 800edc2:	009b      	lsls	r3, r3, #2
 800edc4:	440b      	add	r3, r1
 800edc6:	f503 731f 	add.w	r3, r3, #636	@ 0x27c
 800edca:	7bfa      	ldrb	r2, [r7, #15]
 800edcc:	701a      	strb	r2, [r3, #0]
 800edce:	7bfa      	ldrb	r2, [r7, #15]
 800edd0:	6879      	ldr	r1, [r7, #4]
 800edd2:	4613      	mov	r3, r2
 800edd4:	00db      	lsls	r3, r3, #3
 800edd6:	4413      	add	r3, r2
 800edd8:	009b      	lsls	r3, r3, #2
 800edda:	440b      	add	r3, r1
 800eddc:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 800ede0:	2200      	movs	r2, #0
 800ede2:	701a      	strb	r2, [r3, #0]
 800ede4:	7bfa      	ldrb	r2, [r7, #15]
 800ede6:	6879      	ldr	r1, [r7, #4]
 800ede8:	4613      	mov	r3, r2
 800edea:	00db      	lsls	r3, r3, #3
 800edec:	4413      	add	r3, r2
 800edee:	009b      	lsls	r3, r3, #2
 800edf0:	440b      	add	r3, r1
 800edf2:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800edf6:	2200      	movs	r2, #0
 800edf8:	601a      	str	r2, [r3, #0]
 800edfa:	7bfa      	ldrb	r2, [r7, #15]
 800edfc:	6879      	ldr	r1, [r7, #4]
 800edfe:	4613      	mov	r3, r2
 800ee00:	00db      	lsls	r3, r3, #3
 800ee02:	4413      	add	r3, r2
 800ee04:	009b      	lsls	r3, r3, #2
 800ee06:	440b      	add	r3, r1
 800ee08:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 800ee0c:	2200      	movs	r2, #0
 800ee0e:	601a      	str	r2, [r3, #0]
 800ee10:	7bfa      	ldrb	r2, [r7, #15]
 800ee12:	6879      	ldr	r1, [r7, #4]
 800ee14:	4613      	mov	r3, r2
 800ee16:	00db      	lsls	r3, r3, #3
 800ee18:	4413      	add	r3, r2
 800ee1a:	009b      	lsls	r3, r3, #2
 800ee1c:	440b      	add	r3, r1
 800ee1e:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 800ee22:	2200      	movs	r2, #0
 800ee24:	601a      	str	r2, [r3, #0]
 800ee26:	7bfb      	ldrb	r3, [r7, #15]
 800ee28:	3301      	adds	r3, #1
 800ee2a:	73fb      	strb	r3, [r7, #15]
 800ee2c:	7bfa      	ldrb	r2, [r7, #15]
 800ee2e:	687b      	ldr	r3, [r7, #4]
 800ee30:	685b      	ldr	r3, [r3, #4]
 800ee32:	429a      	cmp	r2, r3
 800ee34:	d3b5      	bcc.n	800eda2 <HAL_PCD_Init+0x148>
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	681b      	ldr	r3, [r3, #0]
 800ee3a:	603b      	str	r3, [r7, #0]
 800ee3c:	687e      	ldr	r6, [r7, #4]
 800ee3e:	466d      	mov	r5, sp
 800ee40:	f106 0410 	add.w	r4, r6, #16
 800ee44:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee46:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ee48:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee4a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ee4c:	e894 0003 	ldmia.w	r4, {r0, r1}
 800ee50:	e885 0003 	stmia.w	r5, {r0, r1}
 800ee54:	1d33      	adds	r3, r6, #4
 800ee56:	cb0e      	ldmia	r3, {r1, r2, r3}
 800ee58:	6838      	ldr	r0, [r7, #0]
 800ee5a:	f004 feb1 	bl	8013bc0 <USB_DevInit>
 800ee5e:	4603      	mov	r3, r0
 800ee60:	2b00      	cmp	r3, #0
 800ee62:	d005      	beq.n	800ee70 <HAL_PCD_Init+0x216>
 800ee64:	687b      	ldr	r3, [r7, #4]
 800ee66:	2202      	movs	r2, #2
 800ee68:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ee6c:	2301      	movs	r3, #1
 800ee6e:	e00d      	b.n	800ee8c <HAL_PCD_Init+0x232>
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	2200      	movs	r2, #0
 800ee74:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800ee78:	687b      	ldr	r3, [r7, #4]
 800ee7a:	2201      	movs	r2, #1
 800ee7c:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ee80:	687b      	ldr	r3, [r7, #4]
 800ee82:	681b      	ldr	r3, [r3, #0]
 800ee84:	4618      	mov	r0, r3
 800ee86:	f006 f800 	bl	8014e8a <USB_DevDisconnect>
 800ee8a:	2300      	movs	r3, #0
 800ee8c:	4618      	mov	r0, r3
 800ee8e:	3714      	adds	r7, #20
 800ee90:	46bd      	mov	sp, r7
 800ee92:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ee94 <HAL_PCD_Start>:
 800ee94:	b580      	push	{r7, lr}
 800ee96:	b084      	sub	sp, #16
 800ee98:	af00      	add	r7, sp, #0
 800ee9a:	6078      	str	r0, [r7, #4]
 800ee9c:	687b      	ldr	r3, [r7, #4]
 800ee9e:	681b      	ldr	r3, [r3, #0]
 800eea0:	60fb      	str	r3, [r7, #12]
 800eea2:	687b      	ldr	r3, [r7, #4]
 800eea4:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800eea8:	2b01      	cmp	r3, #1
 800eeaa:	d101      	bne.n	800eeb0 <HAL_PCD_Start+0x1c>
 800eeac:	2302      	movs	r3, #2
 800eeae:	e020      	b.n	800eef2 <HAL_PCD_Start+0x5e>
 800eeb0:	687b      	ldr	r3, [r7, #4]
 800eeb2:	2201      	movs	r2, #1
 800eeb4:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800eeb8:	687b      	ldr	r3, [r7, #4]
 800eeba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800eebc:	2b01      	cmp	r3, #1
 800eebe:	d109      	bne.n	800eed4 <HAL_PCD_Start+0x40>
 800eec0:	687b      	ldr	r3, [r7, #4]
 800eec2:	699b      	ldr	r3, [r3, #24]
 800eec4:	2b01      	cmp	r3, #1
 800eec6:	d005      	beq.n	800eed4 <HAL_PCD_Start+0x40>
 800eec8:	68fb      	ldr	r3, [r7, #12]
 800eeca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800eecc:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 800eed0:	68fb      	ldr	r3, [r7, #12]
 800eed2:	639a      	str	r2, [r3, #56]	@ 0x38
 800eed4:	687b      	ldr	r3, [r7, #4]
 800eed6:	681b      	ldr	r3, [r3, #0]
 800eed8:	4618      	mov	r0, r3
 800eeda:	f004 fe03 	bl	8013ae4 <USB_EnableGlobalInt>
 800eede:	687b      	ldr	r3, [r7, #4]
 800eee0:	681b      	ldr	r3, [r3, #0]
 800eee2:	4618      	mov	r0, r3
 800eee4:	f005 ffb0 	bl	8014e48 <USB_DevConnect>
 800eee8:	687b      	ldr	r3, [r7, #4]
 800eeea:	2200      	movs	r2, #0
 800eeec:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800eef0:	2300      	movs	r3, #0
 800eef2:	4618      	mov	r0, r3
 800eef4:	3710      	adds	r7, #16
 800eef6:	46bd      	mov	sp, r7
 800eef8:	bd80      	pop	{r7, pc}

0800eefa <HAL_PCD_IRQHandler>:
 800eefa:	b590      	push	{r4, r7, lr}
 800eefc:	b08d      	sub	sp, #52	@ 0x34
 800eefe:	af00      	add	r7, sp, #0
 800ef00:	6078      	str	r0, [r7, #4]
 800ef02:	687b      	ldr	r3, [r7, #4]
 800ef04:	681b      	ldr	r3, [r3, #0]
 800ef06:	623b      	str	r3, [r7, #32]
 800ef08:	6a3b      	ldr	r3, [r7, #32]
 800ef0a:	61fb      	str	r3, [r7, #28]
 800ef0c:	687b      	ldr	r3, [r7, #4]
 800ef0e:	681b      	ldr	r3, [r3, #0]
 800ef10:	4618      	mov	r0, r3
 800ef12:	f006 f86e 	bl	8014ff2 <USB_GetMode>
 800ef16:	4603      	mov	r3, r0
 800ef18:	2b00      	cmp	r3, #0
 800ef1a:	f040 848a 	bne.w	800f832 <HAL_PCD_IRQHandler+0x938>
 800ef1e:	687b      	ldr	r3, [r7, #4]
 800ef20:	681b      	ldr	r3, [r3, #0]
 800ef22:	4618      	mov	r0, r3
 800ef24:	f005 ffd2 	bl	8014ecc <USB_ReadInterrupts>
 800ef28:	4603      	mov	r3, r0
 800ef2a:	2b00      	cmp	r3, #0
 800ef2c:	f000 8480 	beq.w	800f830 <HAL_PCD_IRQHandler+0x936>
 800ef30:	69fb      	ldr	r3, [r7, #28]
 800ef32:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ef36:	689b      	ldr	r3, [r3, #8]
 800ef38:	0a1b      	lsrs	r3, r3, #8
 800ef3a:	f3c3 020d 	ubfx	r2, r3, #0, #14
 800ef3e:	687b      	ldr	r3, [r7, #4]
 800ef40:	f8c3 24fc 	str.w	r2, [r3, #1276]	@ 0x4fc
 800ef44:	687b      	ldr	r3, [r7, #4]
 800ef46:	681b      	ldr	r3, [r3, #0]
 800ef48:	4618      	mov	r0, r3
 800ef4a:	f005 ffbf 	bl	8014ecc <USB_ReadInterrupts>
 800ef4e:	4603      	mov	r3, r0
 800ef50:	f003 0302 	and.w	r3, r3, #2
 800ef54:	2b02      	cmp	r3, #2
 800ef56:	d107      	bne.n	800ef68 <HAL_PCD_IRQHandler+0x6e>
 800ef58:	687b      	ldr	r3, [r7, #4]
 800ef5a:	681b      	ldr	r3, [r3, #0]
 800ef5c:	695a      	ldr	r2, [r3, #20]
 800ef5e:	687b      	ldr	r3, [r7, #4]
 800ef60:	681b      	ldr	r3, [r3, #0]
 800ef62:	f002 0202 	and.w	r2, r2, #2
 800ef66:	615a      	str	r2, [r3, #20]
 800ef68:	687b      	ldr	r3, [r7, #4]
 800ef6a:	681b      	ldr	r3, [r3, #0]
 800ef6c:	4618      	mov	r0, r3
 800ef6e:	f005 ffad 	bl	8014ecc <USB_ReadInterrupts>
 800ef72:	4603      	mov	r3, r0
 800ef74:	f003 0310 	and.w	r3, r3, #16
 800ef78:	2b10      	cmp	r3, #16
 800ef7a:	d161      	bne.n	800f040 <HAL_PCD_IRQHandler+0x146>
 800ef7c:	687b      	ldr	r3, [r7, #4]
 800ef7e:	681b      	ldr	r3, [r3, #0]
 800ef80:	699a      	ldr	r2, [r3, #24]
 800ef82:	687b      	ldr	r3, [r7, #4]
 800ef84:	681b      	ldr	r3, [r3, #0]
 800ef86:	f022 0210 	bic.w	r2, r2, #16
 800ef8a:	619a      	str	r2, [r3, #24]
 800ef8c:	6a3b      	ldr	r3, [r7, #32]
 800ef8e:	6a1b      	ldr	r3, [r3, #32]
 800ef90:	61bb      	str	r3, [r7, #24]
 800ef92:	69bb      	ldr	r3, [r7, #24]
 800ef94:	f003 020f 	and.w	r2, r3, #15
 800ef98:	4613      	mov	r3, r2
 800ef9a:	00db      	lsls	r3, r3, #3
 800ef9c:	4413      	add	r3, r2
 800ef9e:	009b      	lsls	r3, r3, #2
 800efa0:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800efa4:	687a      	ldr	r2, [r7, #4]
 800efa6:	4413      	add	r3, r2
 800efa8:	3304      	adds	r3, #4
 800efaa:	617b      	str	r3, [r7, #20]
 800efac:	69bb      	ldr	r3, [r7, #24]
 800efae:	0c5b      	lsrs	r3, r3, #17
 800efb0:	f003 030f 	and.w	r3, r3, #15
 800efb4:	2b02      	cmp	r3, #2
 800efb6:	d124      	bne.n	800f002 <HAL_PCD_IRQHandler+0x108>
 800efb8:	69ba      	ldr	r2, [r7, #24]
 800efba:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 800efbe:	4013      	ands	r3, r2
 800efc0:	2b00      	cmp	r3, #0
 800efc2:	d035      	beq.n	800f030 <HAL_PCD_IRQHandler+0x136>
 800efc4:	697b      	ldr	r3, [r7, #20]
 800efc6:	6919      	ldr	r1, [r3, #16]
 800efc8:	69bb      	ldr	r3, [r7, #24]
 800efca:	091b      	lsrs	r3, r3, #4
 800efcc:	b29b      	uxth	r3, r3
 800efce:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800efd2:	b29b      	uxth	r3, r3
 800efd4:	461a      	mov	r2, r3
 800efd6:	6a38      	ldr	r0, [r7, #32]
 800efd8:	f005 fde4 	bl	8014ba4 <USB_ReadPacket>
 800efdc:	697b      	ldr	r3, [r7, #20]
 800efde:	691a      	ldr	r2, [r3, #16]
 800efe0:	69bb      	ldr	r3, [r7, #24]
 800efe2:	091b      	lsrs	r3, r3, #4
 800efe4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800efe8:	441a      	add	r2, r3
 800efea:	697b      	ldr	r3, [r7, #20]
 800efec:	611a      	str	r2, [r3, #16]
 800efee:	697b      	ldr	r3, [r7, #20]
 800eff0:	6a1a      	ldr	r2, [r3, #32]
 800eff2:	69bb      	ldr	r3, [r7, #24]
 800eff4:	091b      	lsrs	r3, r3, #4
 800eff6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800effa:	441a      	add	r2, r3
 800effc:	697b      	ldr	r3, [r7, #20]
 800effe:	621a      	str	r2, [r3, #32]
 800f000:	e016      	b.n	800f030 <HAL_PCD_IRQHandler+0x136>
 800f002:	69bb      	ldr	r3, [r7, #24]
 800f004:	0c5b      	lsrs	r3, r3, #17
 800f006:	f003 030f 	and.w	r3, r3, #15
 800f00a:	2b06      	cmp	r3, #6
 800f00c:	d110      	bne.n	800f030 <HAL_PCD_IRQHandler+0x136>
 800f00e:	687b      	ldr	r3, [r7, #4]
 800f010:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f014:	2208      	movs	r2, #8
 800f016:	4619      	mov	r1, r3
 800f018:	6a38      	ldr	r0, [r7, #32]
 800f01a:	f005 fdc3 	bl	8014ba4 <USB_ReadPacket>
 800f01e:	697b      	ldr	r3, [r7, #20]
 800f020:	6a1a      	ldr	r2, [r3, #32]
 800f022:	69bb      	ldr	r3, [r7, #24]
 800f024:	091b      	lsrs	r3, r3, #4
 800f026:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800f02a:	441a      	add	r2, r3
 800f02c:	697b      	ldr	r3, [r7, #20]
 800f02e:	621a      	str	r2, [r3, #32]
 800f030:	687b      	ldr	r3, [r7, #4]
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	699a      	ldr	r2, [r3, #24]
 800f036:	687b      	ldr	r3, [r7, #4]
 800f038:	681b      	ldr	r3, [r3, #0]
 800f03a:	f042 0210 	orr.w	r2, r2, #16
 800f03e:	619a      	str	r2, [r3, #24]
 800f040:	687b      	ldr	r3, [r7, #4]
 800f042:	681b      	ldr	r3, [r3, #0]
 800f044:	4618      	mov	r0, r3
 800f046:	f005 ff41 	bl	8014ecc <USB_ReadInterrupts>
 800f04a:	4603      	mov	r3, r0
 800f04c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800f050:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 800f054:	f040 80a7 	bne.w	800f1a6 <HAL_PCD_IRQHandler+0x2ac>
 800f058:	2300      	movs	r3, #0
 800f05a:	627b      	str	r3, [r7, #36]	@ 0x24
 800f05c:	687b      	ldr	r3, [r7, #4]
 800f05e:	681b      	ldr	r3, [r3, #0]
 800f060:	4618      	mov	r0, r3
 800f062:	f005 ff46 	bl	8014ef2 <USB_ReadDevAllOutEpInterrupt>
 800f066:	62b8      	str	r0, [r7, #40]	@ 0x28
 800f068:	e099      	b.n	800f19e <HAL_PCD_IRQHandler+0x2a4>
 800f06a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f06c:	f003 0301 	and.w	r3, r3, #1
 800f070:	2b00      	cmp	r3, #0
 800f072:	f000 808e 	beq.w	800f192 <HAL_PCD_IRQHandler+0x298>
 800f076:	687b      	ldr	r3, [r7, #4]
 800f078:	681b      	ldr	r3, [r3, #0]
 800f07a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f07c:	b2d2      	uxtb	r2, r2
 800f07e:	4611      	mov	r1, r2
 800f080:	4618      	mov	r0, r3
 800f082:	f005 ff6a 	bl	8014f5a <USB_ReadDevOutEPInterrupt>
 800f086:	6138      	str	r0, [r7, #16]
 800f088:	693b      	ldr	r3, [r7, #16]
 800f08a:	f003 0301 	and.w	r3, r3, #1
 800f08e:	2b00      	cmp	r3, #0
 800f090:	d00c      	beq.n	800f0ac <HAL_PCD_IRQHandler+0x1b2>
 800f092:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f094:	015a      	lsls	r2, r3, #5
 800f096:	69fb      	ldr	r3, [r7, #28]
 800f098:	4413      	add	r3, r2
 800f09a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f09e:	461a      	mov	r2, r3
 800f0a0:	2301      	movs	r3, #1
 800f0a2:	6093      	str	r3, [r2, #8]
 800f0a4:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f0a6:	6878      	ldr	r0, [r7, #4]
 800f0a8:	f000 fec2 	bl	800fe30 <PCD_EP_OutXfrComplete_int>
 800f0ac:	693b      	ldr	r3, [r7, #16]
 800f0ae:	f003 0308 	and.w	r3, r3, #8
 800f0b2:	2b00      	cmp	r3, #0
 800f0b4:	d00c      	beq.n	800f0d0 <HAL_PCD_IRQHandler+0x1d6>
 800f0b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f0b8:	015a      	lsls	r2, r3, #5
 800f0ba:	69fb      	ldr	r3, [r7, #28]
 800f0bc:	4413      	add	r3, r2
 800f0be:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f0c2:	461a      	mov	r2, r3
 800f0c4:	2308      	movs	r3, #8
 800f0c6:	6093      	str	r3, [r2, #8]
 800f0c8:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f0ca:	6878      	ldr	r0, [r7, #4]
 800f0cc:	f000 ff98 	bl	8010000 <PCD_EP_OutSetupPacket_int>
 800f0d0:	693b      	ldr	r3, [r7, #16]
 800f0d2:	f003 0310 	and.w	r3, r3, #16
 800f0d6:	2b00      	cmp	r3, #0
 800f0d8:	d008      	beq.n	800f0ec <HAL_PCD_IRQHandler+0x1f2>
 800f0da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f0dc:	015a      	lsls	r2, r3, #5
 800f0de:	69fb      	ldr	r3, [r7, #28]
 800f0e0:	4413      	add	r3, r2
 800f0e2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f0e6:	461a      	mov	r2, r3
 800f0e8:	2310      	movs	r3, #16
 800f0ea:	6093      	str	r3, [r2, #8]
 800f0ec:	693b      	ldr	r3, [r7, #16]
 800f0ee:	f003 0302 	and.w	r3, r3, #2
 800f0f2:	2b00      	cmp	r3, #0
 800f0f4:	d030      	beq.n	800f158 <HAL_PCD_IRQHandler+0x25e>
 800f0f6:	6a3b      	ldr	r3, [r7, #32]
 800f0f8:	695b      	ldr	r3, [r3, #20]
 800f0fa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f0fe:	2b80      	cmp	r3, #128	@ 0x80
 800f100:	d109      	bne.n	800f116 <HAL_PCD_IRQHandler+0x21c>
 800f102:	69fb      	ldr	r3, [r7, #28]
 800f104:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f108:	685b      	ldr	r3, [r3, #4]
 800f10a:	69fa      	ldr	r2, [r7, #28]
 800f10c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f110:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800f114:	6053      	str	r3, [r2, #4]
 800f116:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f118:	4613      	mov	r3, r2
 800f11a:	00db      	lsls	r3, r3, #3
 800f11c:	4413      	add	r3, r2
 800f11e:	009b      	lsls	r3, r3, #2
 800f120:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f124:	687a      	ldr	r2, [r7, #4]
 800f126:	4413      	add	r3, r2
 800f128:	3304      	adds	r3, #4
 800f12a:	617b      	str	r3, [r7, #20]
 800f12c:	697b      	ldr	r3, [r7, #20]
 800f12e:	78db      	ldrb	r3, [r3, #3]
 800f130:	2b01      	cmp	r3, #1
 800f132:	d108      	bne.n	800f146 <HAL_PCD_IRQHandler+0x24c>
 800f134:	697b      	ldr	r3, [r7, #20]
 800f136:	2200      	movs	r2, #0
 800f138:	70da      	strb	r2, [r3, #3]
 800f13a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f13c:	b2db      	uxtb	r3, r3
 800f13e:	4619      	mov	r1, r3
 800f140:	6878      	ldr	r0, [r7, #4]
 800f142:	f00b fbc7 	bl	801a8d4 <HAL_PCD_ISOOUTIncompleteCallback>
 800f146:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f148:	015a      	lsls	r2, r3, #5
 800f14a:	69fb      	ldr	r3, [r7, #28]
 800f14c:	4413      	add	r3, r2
 800f14e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f152:	461a      	mov	r2, r3
 800f154:	2302      	movs	r3, #2
 800f156:	6093      	str	r3, [r2, #8]
 800f158:	693b      	ldr	r3, [r7, #16]
 800f15a:	f003 0320 	and.w	r3, r3, #32
 800f15e:	2b00      	cmp	r3, #0
 800f160:	d008      	beq.n	800f174 <HAL_PCD_IRQHandler+0x27a>
 800f162:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f164:	015a      	lsls	r2, r3, #5
 800f166:	69fb      	ldr	r3, [r7, #28]
 800f168:	4413      	add	r3, r2
 800f16a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f16e:	461a      	mov	r2, r3
 800f170:	2320      	movs	r3, #32
 800f172:	6093      	str	r3, [r2, #8]
 800f174:	693b      	ldr	r3, [r7, #16]
 800f176:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f17a:	2b00      	cmp	r3, #0
 800f17c:	d009      	beq.n	800f192 <HAL_PCD_IRQHandler+0x298>
 800f17e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f180:	015a      	lsls	r2, r3, #5
 800f182:	69fb      	ldr	r3, [r7, #28]
 800f184:	4413      	add	r3, r2
 800f186:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f18a:	461a      	mov	r2, r3
 800f18c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800f190:	6093      	str	r3, [r2, #8]
 800f192:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f194:	3301      	adds	r3, #1
 800f196:	627b      	str	r3, [r7, #36]	@ 0x24
 800f198:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f19a:	085b      	lsrs	r3, r3, #1
 800f19c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800f19e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f1a0:	2b00      	cmp	r3, #0
 800f1a2:	f47f af62 	bne.w	800f06a <HAL_PCD_IRQHandler+0x170>
 800f1a6:	687b      	ldr	r3, [r7, #4]
 800f1a8:	681b      	ldr	r3, [r3, #0]
 800f1aa:	4618      	mov	r0, r3
 800f1ac:	f005 fe8e 	bl	8014ecc <USB_ReadInterrupts>
 800f1b0:	4603      	mov	r3, r0
 800f1b2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800f1b6:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800f1ba:	f040 80db 	bne.w	800f374 <HAL_PCD_IRQHandler+0x47a>
 800f1be:	687b      	ldr	r3, [r7, #4]
 800f1c0:	681b      	ldr	r3, [r3, #0]
 800f1c2:	4618      	mov	r0, r3
 800f1c4:	f005 feaf 	bl	8014f26 <USB_ReadDevAllInEpInterrupt>
 800f1c8:	62b8      	str	r0, [r7, #40]	@ 0x28
 800f1ca:	2300      	movs	r3, #0
 800f1cc:	627b      	str	r3, [r7, #36]	@ 0x24
 800f1ce:	e0cd      	b.n	800f36c <HAL_PCD_IRQHandler+0x472>
 800f1d0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f1d2:	f003 0301 	and.w	r3, r3, #1
 800f1d6:	2b00      	cmp	r3, #0
 800f1d8:	f000 80c2 	beq.w	800f360 <HAL_PCD_IRQHandler+0x466>
 800f1dc:	687b      	ldr	r3, [r7, #4]
 800f1de:	681b      	ldr	r3, [r3, #0]
 800f1e0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f1e2:	b2d2      	uxtb	r2, r2
 800f1e4:	4611      	mov	r1, r2
 800f1e6:	4618      	mov	r0, r3
 800f1e8:	f005 fed5 	bl	8014f96 <USB_ReadDevInEPInterrupt>
 800f1ec:	6138      	str	r0, [r7, #16]
 800f1ee:	693b      	ldr	r3, [r7, #16]
 800f1f0:	f003 0301 	and.w	r3, r3, #1
 800f1f4:	2b00      	cmp	r3, #0
 800f1f6:	d057      	beq.n	800f2a8 <HAL_PCD_IRQHandler+0x3ae>
 800f1f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1fa:	f003 030f 	and.w	r3, r3, #15
 800f1fe:	2201      	movs	r2, #1
 800f200:	fa02 f303 	lsl.w	r3, r2, r3
 800f204:	60fb      	str	r3, [r7, #12]
 800f206:	69fb      	ldr	r3, [r7, #28]
 800f208:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f20c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f20e:	68fb      	ldr	r3, [r7, #12]
 800f210:	43db      	mvns	r3, r3
 800f212:	69f9      	ldr	r1, [r7, #28]
 800f214:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800f218:	4013      	ands	r3, r2
 800f21a:	634b      	str	r3, [r1, #52]	@ 0x34
 800f21c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f21e:	015a      	lsls	r2, r3, #5
 800f220:	69fb      	ldr	r3, [r7, #28]
 800f222:	4413      	add	r3, r2
 800f224:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f228:	461a      	mov	r2, r3
 800f22a:	2301      	movs	r3, #1
 800f22c:	6093      	str	r3, [r2, #8]
 800f22e:	687b      	ldr	r3, [r7, #4]
 800f230:	691b      	ldr	r3, [r3, #16]
 800f232:	2b01      	cmp	r3, #1
 800f234:	d132      	bne.n	800f29c <HAL_PCD_IRQHandler+0x3a2>
 800f236:	6879      	ldr	r1, [r7, #4]
 800f238:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f23a:	4613      	mov	r3, r2
 800f23c:	00db      	lsls	r3, r3, #3
 800f23e:	4413      	add	r3, r2
 800f240:	009b      	lsls	r3, r3, #2
 800f242:	440b      	add	r3, r1
 800f244:	334c      	adds	r3, #76	@ 0x4c
 800f246:	6819      	ldr	r1, [r3, #0]
 800f248:	6878      	ldr	r0, [r7, #4]
 800f24a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f24c:	4613      	mov	r3, r2
 800f24e:	00db      	lsls	r3, r3, #3
 800f250:	4413      	add	r3, r2
 800f252:	009b      	lsls	r3, r3, #2
 800f254:	4403      	add	r3, r0
 800f256:	3348      	adds	r3, #72	@ 0x48
 800f258:	681b      	ldr	r3, [r3, #0]
 800f25a:	4419      	add	r1, r3
 800f25c:	6878      	ldr	r0, [r7, #4]
 800f25e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f260:	4613      	mov	r3, r2
 800f262:	00db      	lsls	r3, r3, #3
 800f264:	4413      	add	r3, r2
 800f266:	009b      	lsls	r3, r3, #2
 800f268:	4403      	add	r3, r0
 800f26a:	334c      	adds	r3, #76	@ 0x4c
 800f26c:	6019      	str	r1, [r3, #0]
 800f26e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f270:	2b00      	cmp	r3, #0
 800f272:	d113      	bne.n	800f29c <HAL_PCD_IRQHandler+0x3a2>
 800f274:	6879      	ldr	r1, [r7, #4]
 800f276:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f278:	4613      	mov	r3, r2
 800f27a:	00db      	lsls	r3, r3, #3
 800f27c:	4413      	add	r3, r2
 800f27e:	009b      	lsls	r3, r3, #2
 800f280:	440b      	add	r3, r1
 800f282:	3354      	adds	r3, #84	@ 0x54
 800f284:	681b      	ldr	r3, [r3, #0]
 800f286:	2b00      	cmp	r3, #0
 800f288:	d108      	bne.n	800f29c <HAL_PCD_IRQHandler+0x3a2>
 800f28a:	687b      	ldr	r3, [r7, #4]
 800f28c:	6818      	ldr	r0, [r3, #0]
 800f28e:	687b      	ldr	r3, [r7, #4]
 800f290:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f294:	461a      	mov	r2, r3
 800f296:	2101      	movs	r1, #1
 800f298:	f005 fedc 	bl	8015054 <USB_EP0_OutStart>
 800f29c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f29e:	b2db      	uxtb	r3, r3
 800f2a0:	4619      	mov	r1, r3
 800f2a2:	6878      	ldr	r0, [r7, #4]
 800f2a4:	f00b fa91 	bl	801a7ca <HAL_PCD_DataInStageCallback>
 800f2a8:	693b      	ldr	r3, [r7, #16]
 800f2aa:	f003 0308 	and.w	r3, r3, #8
 800f2ae:	2b00      	cmp	r3, #0
 800f2b0:	d008      	beq.n	800f2c4 <HAL_PCD_IRQHandler+0x3ca>
 800f2b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f2b4:	015a      	lsls	r2, r3, #5
 800f2b6:	69fb      	ldr	r3, [r7, #28]
 800f2b8:	4413      	add	r3, r2
 800f2ba:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f2be:	461a      	mov	r2, r3
 800f2c0:	2308      	movs	r3, #8
 800f2c2:	6093      	str	r3, [r2, #8]
 800f2c4:	693b      	ldr	r3, [r7, #16]
 800f2c6:	f003 0310 	and.w	r3, r3, #16
 800f2ca:	2b00      	cmp	r3, #0
 800f2cc:	d008      	beq.n	800f2e0 <HAL_PCD_IRQHandler+0x3e6>
 800f2ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f2d0:	015a      	lsls	r2, r3, #5
 800f2d2:	69fb      	ldr	r3, [r7, #28]
 800f2d4:	4413      	add	r3, r2
 800f2d6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f2da:	461a      	mov	r2, r3
 800f2dc:	2310      	movs	r3, #16
 800f2de:	6093      	str	r3, [r2, #8]
 800f2e0:	693b      	ldr	r3, [r7, #16]
 800f2e2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f2e6:	2b00      	cmp	r3, #0
 800f2e8:	d008      	beq.n	800f2fc <HAL_PCD_IRQHandler+0x402>
 800f2ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f2ec:	015a      	lsls	r2, r3, #5
 800f2ee:	69fb      	ldr	r3, [r7, #28]
 800f2f0:	4413      	add	r3, r2
 800f2f2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f2f6:	461a      	mov	r2, r3
 800f2f8:	2340      	movs	r3, #64	@ 0x40
 800f2fa:	6093      	str	r3, [r2, #8]
 800f2fc:	693b      	ldr	r3, [r7, #16]
 800f2fe:	f003 0302 	and.w	r3, r3, #2
 800f302:	2b00      	cmp	r3, #0
 800f304:	d023      	beq.n	800f34e <HAL_PCD_IRQHandler+0x454>
 800f306:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f308:	6a38      	ldr	r0, [r7, #32]
 800f30a:	f004 fdbd 	bl	8013e88 <USB_FlushTxFifo>
 800f30e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f310:	4613      	mov	r3, r2
 800f312:	00db      	lsls	r3, r3, #3
 800f314:	4413      	add	r3, r2
 800f316:	009b      	lsls	r3, r3, #2
 800f318:	3338      	adds	r3, #56	@ 0x38
 800f31a:	687a      	ldr	r2, [r7, #4]
 800f31c:	4413      	add	r3, r2
 800f31e:	3304      	adds	r3, #4
 800f320:	617b      	str	r3, [r7, #20]
 800f322:	697b      	ldr	r3, [r7, #20]
 800f324:	78db      	ldrb	r3, [r3, #3]
 800f326:	2b01      	cmp	r3, #1
 800f328:	d108      	bne.n	800f33c <HAL_PCD_IRQHandler+0x442>
 800f32a:	697b      	ldr	r3, [r7, #20]
 800f32c:	2200      	movs	r2, #0
 800f32e:	70da      	strb	r2, [r3, #3]
 800f330:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f332:	b2db      	uxtb	r3, r3
 800f334:	4619      	mov	r1, r3
 800f336:	6878      	ldr	r0, [r7, #4]
 800f338:	f00b fade 	bl	801a8f8 <HAL_PCD_ISOINIncompleteCallback>
 800f33c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f33e:	015a      	lsls	r2, r3, #5
 800f340:	69fb      	ldr	r3, [r7, #28]
 800f342:	4413      	add	r3, r2
 800f344:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f348:	461a      	mov	r2, r3
 800f34a:	2302      	movs	r3, #2
 800f34c:	6093      	str	r3, [r2, #8]
 800f34e:	693b      	ldr	r3, [r7, #16]
 800f350:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f354:	2b00      	cmp	r3, #0
 800f356:	d003      	beq.n	800f360 <HAL_PCD_IRQHandler+0x466>
 800f358:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f35a:	6878      	ldr	r0, [r7, #4]
 800f35c:	f000 fcdb 	bl	800fd16 <PCD_WriteEmptyTxFifo>
 800f360:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f362:	3301      	adds	r3, #1
 800f364:	627b      	str	r3, [r7, #36]	@ 0x24
 800f366:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f368:	085b      	lsrs	r3, r3, #1
 800f36a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800f36c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f36e:	2b00      	cmp	r3, #0
 800f370:	f47f af2e 	bne.w	800f1d0 <HAL_PCD_IRQHandler+0x2d6>
 800f374:	687b      	ldr	r3, [r7, #4]
 800f376:	681b      	ldr	r3, [r3, #0]
 800f378:	4618      	mov	r0, r3
 800f37a:	f005 fda7 	bl	8014ecc <USB_ReadInterrupts>
 800f37e:	4603      	mov	r3, r0
 800f380:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800f384:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800f388:	d122      	bne.n	800f3d0 <HAL_PCD_IRQHandler+0x4d6>
 800f38a:	69fb      	ldr	r3, [r7, #28]
 800f38c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f390:	685b      	ldr	r3, [r3, #4]
 800f392:	69fa      	ldr	r2, [r7, #28]
 800f394:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f398:	f023 0301 	bic.w	r3, r3, #1
 800f39c:	6053      	str	r3, [r2, #4]
 800f39e:	687b      	ldr	r3, [r7, #4]
 800f3a0:	f893 34f4 	ldrb.w	r3, [r3, #1268]	@ 0x4f4
 800f3a4:	2b01      	cmp	r3, #1
 800f3a6:	d108      	bne.n	800f3ba <HAL_PCD_IRQHandler+0x4c0>
 800f3a8:	687b      	ldr	r3, [r7, #4]
 800f3aa:	2200      	movs	r2, #0
 800f3ac:	f883 24f4 	strb.w	r2, [r3, #1268]	@ 0x4f4
 800f3b0:	2100      	movs	r1, #0
 800f3b2:	6878      	ldr	r0, [r7, #4]
 800f3b4:	f000 fec2 	bl	801013c <HAL_PCDEx_LPM_Callback>
 800f3b8:	e002      	b.n	800f3c0 <HAL_PCD_IRQHandler+0x4c6>
 800f3ba:	6878      	ldr	r0, [r7, #4]
 800f3bc:	f00b fa7c 	bl	801a8b8 <HAL_PCD_ResumeCallback>
 800f3c0:	687b      	ldr	r3, [r7, #4]
 800f3c2:	681b      	ldr	r3, [r3, #0]
 800f3c4:	695a      	ldr	r2, [r3, #20]
 800f3c6:	687b      	ldr	r3, [r7, #4]
 800f3c8:	681b      	ldr	r3, [r3, #0]
 800f3ca:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 800f3ce:	615a      	str	r2, [r3, #20]
 800f3d0:	687b      	ldr	r3, [r7, #4]
 800f3d2:	681b      	ldr	r3, [r3, #0]
 800f3d4:	4618      	mov	r0, r3
 800f3d6:	f005 fd79 	bl	8014ecc <USB_ReadInterrupts>
 800f3da:	4603      	mov	r3, r0
 800f3dc:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800f3e0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800f3e4:	d112      	bne.n	800f40c <HAL_PCD_IRQHandler+0x512>
 800f3e6:	69fb      	ldr	r3, [r7, #28]
 800f3e8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f3ec:	689b      	ldr	r3, [r3, #8]
 800f3ee:	f003 0301 	and.w	r3, r3, #1
 800f3f2:	2b01      	cmp	r3, #1
 800f3f4:	d102      	bne.n	800f3fc <HAL_PCD_IRQHandler+0x502>
 800f3f6:	6878      	ldr	r0, [r7, #4]
 800f3f8:	f00b fa38 	bl	801a86c <HAL_PCD_SuspendCallback>
 800f3fc:	687b      	ldr	r3, [r7, #4]
 800f3fe:	681b      	ldr	r3, [r3, #0]
 800f400:	695a      	ldr	r2, [r3, #20]
 800f402:	687b      	ldr	r3, [r7, #4]
 800f404:	681b      	ldr	r3, [r3, #0]
 800f406:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 800f40a:	615a      	str	r2, [r3, #20]
 800f40c:	687b      	ldr	r3, [r7, #4]
 800f40e:	681b      	ldr	r3, [r3, #0]
 800f410:	4618      	mov	r0, r3
 800f412:	f005 fd5b 	bl	8014ecc <USB_ReadInterrupts>
 800f416:	4603      	mov	r3, r0
 800f418:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800f41c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f420:	f040 80b7 	bne.w	800f592 <HAL_PCD_IRQHandler+0x698>
 800f424:	69fb      	ldr	r3, [r7, #28]
 800f426:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f42a:	685b      	ldr	r3, [r3, #4]
 800f42c:	69fa      	ldr	r2, [r7, #28]
 800f42e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f432:	f023 0301 	bic.w	r3, r3, #1
 800f436:	6053      	str	r3, [r2, #4]
 800f438:	687b      	ldr	r3, [r7, #4]
 800f43a:	681b      	ldr	r3, [r3, #0]
 800f43c:	2110      	movs	r1, #16
 800f43e:	4618      	mov	r0, r3
 800f440:	f004 fd22 	bl	8013e88 <USB_FlushTxFifo>
 800f444:	2300      	movs	r3, #0
 800f446:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800f448:	e046      	b.n	800f4d8 <HAL_PCD_IRQHandler+0x5de>
 800f44a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f44c:	015a      	lsls	r2, r3, #5
 800f44e:	69fb      	ldr	r3, [r7, #28]
 800f450:	4413      	add	r3, r2
 800f452:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f456:	461a      	mov	r2, r3
 800f458:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800f45c:	6093      	str	r3, [r2, #8]
 800f45e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f460:	015a      	lsls	r2, r3, #5
 800f462:	69fb      	ldr	r3, [r7, #28]
 800f464:	4413      	add	r3, r2
 800f466:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f46a:	681b      	ldr	r3, [r3, #0]
 800f46c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f46e:	0151      	lsls	r1, r2, #5
 800f470:	69fa      	ldr	r2, [r7, #28]
 800f472:	440a      	add	r2, r1
 800f474:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800f478:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800f47c:	6013      	str	r3, [r2, #0]
 800f47e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f480:	015a      	lsls	r2, r3, #5
 800f482:	69fb      	ldr	r3, [r7, #28]
 800f484:	4413      	add	r3, r2
 800f486:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f48a:	461a      	mov	r2, r3
 800f48c:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800f490:	6093      	str	r3, [r2, #8]
 800f492:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f494:	015a      	lsls	r2, r3, #5
 800f496:	69fb      	ldr	r3, [r7, #28]
 800f498:	4413      	add	r3, r2
 800f49a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f49e:	681b      	ldr	r3, [r3, #0]
 800f4a0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f4a2:	0151      	lsls	r1, r2, #5
 800f4a4:	69fa      	ldr	r2, [r7, #28]
 800f4a6:	440a      	add	r2, r1
 800f4a8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800f4ac:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800f4b0:	6013      	str	r3, [r2, #0]
 800f4b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f4b4:	015a      	lsls	r2, r3, #5
 800f4b6:	69fb      	ldr	r3, [r7, #28]
 800f4b8:	4413      	add	r3, r2
 800f4ba:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f4be:	681b      	ldr	r3, [r3, #0]
 800f4c0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f4c2:	0151      	lsls	r1, r2, #5
 800f4c4:	69fa      	ldr	r2, [r7, #28]
 800f4c6:	440a      	add	r2, r1
 800f4c8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800f4cc:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800f4d0:	6013      	str	r3, [r2, #0]
 800f4d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f4d4:	3301      	adds	r3, #1
 800f4d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800f4d8:	687b      	ldr	r3, [r7, #4]
 800f4da:	685b      	ldr	r3, [r3, #4]
 800f4dc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f4de:	429a      	cmp	r2, r3
 800f4e0:	d3b3      	bcc.n	800f44a <HAL_PCD_IRQHandler+0x550>
 800f4e2:	69fb      	ldr	r3, [r7, #28]
 800f4e4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f4e8:	69db      	ldr	r3, [r3, #28]
 800f4ea:	69fa      	ldr	r2, [r7, #28]
 800f4ec:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f4f0:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800f4f4:	61d3      	str	r3, [r2, #28]
 800f4f6:	687b      	ldr	r3, [r7, #4]
 800f4f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f4fa:	2b00      	cmp	r3, #0
 800f4fc:	d016      	beq.n	800f52c <HAL_PCD_IRQHandler+0x632>
 800f4fe:	69fb      	ldr	r3, [r7, #28]
 800f500:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f504:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800f508:	69fa      	ldr	r2, [r7, #28]
 800f50a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f50e:	f043 030b 	orr.w	r3, r3, #11
 800f512:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 800f516:	69fb      	ldr	r3, [r7, #28]
 800f518:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f51c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f51e:	69fa      	ldr	r2, [r7, #28]
 800f520:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f524:	f043 030b 	orr.w	r3, r3, #11
 800f528:	6453      	str	r3, [r2, #68]	@ 0x44
 800f52a:	e015      	b.n	800f558 <HAL_PCD_IRQHandler+0x65e>
 800f52c:	69fb      	ldr	r3, [r7, #28]
 800f52e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f532:	695b      	ldr	r3, [r3, #20]
 800f534:	69fa      	ldr	r2, [r7, #28]
 800f536:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f53a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800f53e:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 800f542:	6153      	str	r3, [r2, #20]
 800f544:	69fb      	ldr	r3, [r7, #28]
 800f546:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f54a:	691b      	ldr	r3, [r3, #16]
 800f54c:	69fa      	ldr	r2, [r7, #28]
 800f54e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f552:	f043 030b 	orr.w	r3, r3, #11
 800f556:	6113      	str	r3, [r2, #16]
 800f558:	69fb      	ldr	r3, [r7, #28]
 800f55a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f55e:	681b      	ldr	r3, [r3, #0]
 800f560:	69fa      	ldr	r2, [r7, #28]
 800f562:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f566:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800f56a:	6013      	str	r3, [r2, #0]
 800f56c:	687b      	ldr	r3, [r7, #4]
 800f56e:	6818      	ldr	r0, [r3, #0]
 800f570:	687b      	ldr	r3, [r7, #4]
 800f572:	691b      	ldr	r3, [r3, #16]
 800f574:	b2d9      	uxtb	r1, r3
 800f576:	687b      	ldr	r3, [r7, #4]
 800f578:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f57c:	461a      	mov	r2, r3
 800f57e:	f005 fd69 	bl	8015054 <USB_EP0_OutStart>
 800f582:	687b      	ldr	r3, [r7, #4]
 800f584:	681b      	ldr	r3, [r3, #0]
 800f586:	695a      	ldr	r2, [r3, #20]
 800f588:	687b      	ldr	r3, [r7, #4]
 800f58a:	681b      	ldr	r3, [r3, #0]
 800f58c:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 800f590:	615a      	str	r2, [r3, #20]
 800f592:	687b      	ldr	r3, [r7, #4]
 800f594:	681b      	ldr	r3, [r3, #0]
 800f596:	4618      	mov	r0, r3
 800f598:	f005 fc98 	bl	8014ecc <USB_ReadInterrupts>
 800f59c:	4603      	mov	r3, r0
 800f59e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f5a2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f5a6:	d124      	bne.n	800f5f2 <HAL_PCD_IRQHandler+0x6f8>
 800f5a8:	687b      	ldr	r3, [r7, #4]
 800f5aa:	681b      	ldr	r3, [r3, #0]
 800f5ac:	4618      	mov	r0, r3
 800f5ae:	f005 fd2e 	bl	801500e <USB_ActivateSetup>
 800f5b2:	687b      	ldr	r3, [r7, #4]
 800f5b4:	681b      	ldr	r3, [r3, #0]
 800f5b6:	4618      	mov	r0, r3
 800f5b8:	f004 fce3 	bl	8013f82 <USB_GetDevSpeed>
 800f5bc:	4603      	mov	r3, r0
 800f5be:	461a      	mov	r2, r3
 800f5c0:	687b      	ldr	r3, [r7, #4]
 800f5c2:	60da      	str	r2, [r3, #12]
 800f5c4:	687b      	ldr	r3, [r7, #4]
 800f5c6:	681c      	ldr	r4, [r3, #0]
 800f5c8:	f001 f9e8 	bl	801099c <HAL_RCC_GetHCLKFreq>
 800f5cc:	4601      	mov	r1, r0
 800f5ce:	687b      	ldr	r3, [r7, #4]
 800f5d0:	68db      	ldr	r3, [r3, #12]
 800f5d2:	b2db      	uxtb	r3, r3
 800f5d4:	461a      	mov	r2, r3
 800f5d6:	4620      	mov	r0, r4
 800f5d8:	f004 f9e2 	bl	80139a0 <USB_SetTurnaroundTime>
 800f5dc:	6878      	ldr	r0, [r7, #4]
 800f5de:	f00b f91c 	bl	801a81a <HAL_PCD_ResetCallback>
 800f5e2:	687b      	ldr	r3, [r7, #4]
 800f5e4:	681b      	ldr	r3, [r3, #0]
 800f5e6:	695a      	ldr	r2, [r3, #20]
 800f5e8:	687b      	ldr	r3, [r7, #4]
 800f5ea:	681b      	ldr	r3, [r3, #0]
 800f5ec:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 800f5f0:	615a      	str	r2, [r3, #20]
 800f5f2:	687b      	ldr	r3, [r7, #4]
 800f5f4:	681b      	ldr	r3, [r3, #0]
 800f5f6:	4618      	mov	r0, r3
 800f5f8:	f005 fc68 	bl	8014ecc <USB_ReadInterrupts>
 800f5fc:	4603      	mov	r3, r0
 800f5fe:	f003 0308 	and.w	r3, r3, #8
 800f602:	2b08      	cmp	r3, #8
 800f604:	d10a      	bne.n	800f61c <HAL_PCD_IRQHandler+0x722>
 800f606:	6878      	ldr	r0, [r7, #4]
 800f608:	f00b f8f9 	bl	801a7fe <HAL_PCD_SOFCallback>
 800f60c:	687b      	ldr	r3, [r7, #4]
 800f60e:	681b      	ldr	r3, [r3, #0]
 800f610:	695a      	ldr	r2, [r3, #20]
 800f612:	687b      	ldr	r3, [r7, #4]
 800f614:	681b      	ldr	r3, [r3, #0]
 800f616:	f002 0208 	and.w	r2, r2, #8
 800f61a:	615a      	str	r2, [r3, #20]
 800f61c:	687b      	ldr	r3, [r7, #4]
 800f61e:	681b      	ldr	r3, [r3, #0]
 800f620:	4618      	mov	r0, r3
 800f622:	f005 fc53 	bl	8014ecc <USB_ReadInterrupts>
 800f626:	4603      	mov	r3, r0
 800f628:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f62c:	2b80      	cmp	r3, #128	@ 0x80
 800f62e:	d122      	bne.n	800f676 <HAL_PCD_IRQHandler+0x77c>
 800f630:	6a3b      	ldr	r3, [r7, #32]
 800f632:	699b      	ldr	r3, [r3, #24]
 800f634:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800f638:	6a3b      	ldr	r3, [r7, #32]
 800f63a:	619a      	str	r2, [r3, #24]
 800f63c:	2301      	movs	r3, #1
 800f63e:	627b      	str	r3, [r7, #36]	@ 0x24
 800f640:	e014      	b.n	800f66c <HAL_PCD_IRQHandler+0x772>
 800f642:	6879      	ldr	r1, [r7, #4]
 800f644:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f646:	4613      	mov	r3, r2
 800f648:	00db      	lsls	r3, r3, #3
 800f64a:	4413      	add	r3, r2
 800f64c:	009b      	lsls	r3, r3, #2
 800f64e:	440b      	add	r3, r1
 800f650:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 800f654:	781b      	ldrb	r3, [r3, #0]
 800f656:	2b01      	cmp	r3, #1
 800f658:	d105      	bne.n	800f666 <HAL_PCD_IRQHandler+0x76c>
 800f65a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f65c:	b2db      	uxtb	r3, r3
 800f65e:	4619      	mov	r1, r3
 800f660:	6878      	ldr	r0, [r7, #4]
 800f662:	f000 fb27 	bl	800fcb4 <HAL_PCD_EP_Abort>
 800f666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f668:	3301      	adds	r3, #1
 800f66a:	627b      	str	r3, [r7, #36]	@ 0x24
 800f66c:	687b      	ldr	r3, [r7, #4]
 800f66e:	685b      	ldr	r3, [r3, #4]
 800f670:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f672:	429a      	cmp	r2, r3
 800f674:	d3e5      	bcc.n	800f642 <HAL_PCD_IRQHandler+0x748>
 800f676:	687b      	ldr	r3, [r7, #4]
 800f678:	681b      	ldr	r3, [r3, #0]
 800f67a:	4618      	mov	r0, r3
 800f67c:	f005 fc26 	bl	8014ecc <USB_ReadInterrupts>
 800f680:	4603      	mov	r3, r0
 800f682:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800f686:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f68a:	d13b      	bne.n	800f704 <HAL_PCD_IRQHandler+0x80a>
 800f68c:	2301      	movs	r3, #1
 800f68e:	627b      	str	r3, [r7, #36]	@ 0x24
 800f690:	e02b      	b.n	800f6ea <HAL_PCD_IRQHandler+0x7f0>
 800f692:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f694:	015a      	lsls	r2, r3, #5
 800f696:	69fb      	ldr	r3, [r7, #28]
 800f698:	4413      	add	r3, r2
 800f69a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f69e:	681b      	ldr	r3, [r3, #0]
 800f6a0:	61bb      	str	r3, [r7, #24]
 800f6a2:	6879      	ldr	r1, [r7, #4]
 800f6a4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f6a6:	4613      	mov	r3, r2
 800f6a8:	00db      	lsls	r3, r3, #3
 800f6aa:	4413      	add	r3, r2
 800f6ac:	009b      	lsls	r3, r3, #2
 800f6ae:	440b      	add	r3, r1
 800f6b0:	3340      	adds	r3, #64	@ 0x40
 800f6b2:	781b      	ldrb	r3, [r3, #0]
 800f6b4:	2b01      	cmp	r3, #1
 800f6b6:	d115      	bne.n	800f6e4 <HAL_PCD_IRQHandler+0x7ea>
 800f6b8:	69bb      	ldr	r3, [r7, #24]
 800f6ba:	2b00      	cmp	r3, #0
 800f6bc:	da12      	bge.n	800f6e4 <HAL_PCD_IRQHandler+0x7ea>
 800f6be:	6879      	ldr	r1, [r7, #4]
 800f6c0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f6c2:	4613      	mov	r3, r2
 800f6c4:	00db      	lsls	r3, r3, #3
 800f6c6:	4413      	add	r3, r2
 800f6c8:	009b      	lsls	r3, r3, #2
 800f6ca:	440b      	add	r3, r1
 800f6cc:	333f      	adds	r3, #63	@ 0x3f
 800f6ce:	2201      	movs	r2, #1
 800f6d0:	701a      	strb	r2, [r3, #0]
 800f6d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f6d4:	b2db      	uxtb	r3, r3
 800f6d6:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800f6da:	b2db      	uxtb	r3, r3
 800f6dc:	4619      	mov	r1, r3
 800f6de:	6878      	ldr	r0, [r7, #4]
 800f6e0:	f000 fae8 	bl	800fcb4 <HAL_PCD_EP_Abort>
 800f6e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f6e6:	3301      	adds	r3, #1
 800f6e8:	627b      	str	r3, [r7, #36]	@ 0x24
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	685b      	ldr	r3, [r3, #4]
 800f6ee:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f6f0:	429a      	cmp	r2, r3
 800f6f2:	d3ce      	bcc.n	800f692 <HAL_PCD_IRQHandler+0x798>
 800f6f4:	687b      	ldr	r3, [r7, #4]
 800f6f6:	681b      	ldr	r3, [r3, #0]
 800f6f8:	695a      	ldr	r2, [r3, #20]
 800f6fa:	687b      	ldr	r3, [r7, #4]
 800f6fc:	681b      	ldr	r3, [r3, #0]
 800f6fe:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800f702:	615a      	str	r2, [r3, #20]
 800f704:	687b      	ldr	r3, [r7, #4]
 800f706:	681b      	ldr	r3, [r3, #0]
 800f708:	4618      	mov	r0, r3
 800f70a:	f005 fbdf 	bl	8014ecc <USB_ReadInterrupts>
 800f70e:	4603      	mov	r3, r0
 800f710:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800f714:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800f718:	d155      	bne.n	800f7c6 <HAL_PCD_IRQHandler+0x8cc>
 800f71a:	2301      	movs	r3, #1
 800f71c:	627b      	str	r3, [r7, #36]	@ 0x24
 800f71e:	e045      	b.n	800f7ac <HAL_PCD_IRQHandler+0x8b2>
 800f720:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f722:	015a      	lsls	r2, r3, #5
 800f724:	69fb      	ldr	r3, [r7, #28]
 800f726:	4413      	add	r3, r2
 800f728:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f72c:	681b      	ldr	r3, [r3, #0]
 800f72e:	61bb      	str	r3, [r7, #24]
 800f730:	6879      	ldr	r1, [r7, #4]
 800f732:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f734:	4613      	mov	r3, r2
 800f736:	00db      	lsls	r3, r3, #3
 800f738:	4413      	add	r3, r2
 800f73a:	009b      	lsls	r3, r3, #2
 800f73c:	440b      	add	r3, r1
 800f73e:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 800f742:	781b      	ldrb	r3, [r3, #0]
 800f744:	2b01      	cmp	r3, #1
 800f746:	d12e      	bne.n	800f7a6 <HAL_PCD_IRQHandler+0x8ac>
 800f748:	69bb      	ldr	r3, [r7, #24]
 800f74a:	2b00      	cmp	r3, #0
 800f74c:	da2b      	bge.n	800f7a6 <HAL_PCD_IRQHandler+0x8ac>
 800f74e:	69bb      	ldr	r3, [r7, #24]
 800f750:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800f754:	687b      	ldr	r3, [r7, #4]
 800f756:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	@ 0x4fc
 800f75a:	f003 0301 	and.w	r3, r3, #1
 800f75e:	429a      	cmp	r2, r3
 800f760:	d121      	bne.n	800f7a6 <HAL_PCD_IRQHandler+0x8ac>
 800f762:	6879      	ldr	r1, [r7, #4]
 800f764:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f766:	4613      	mov	r3, r2
 800f768:	00db      	lsls	r3, r3, #3
 800f76a:	4413      	add	r3, r2
 800f76c:	009b      	lsls	r3, r3, #2
 800f76e:	440b      	add	r3, r1
 800f770:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 800f774:	2201      	movs	r2, #1
 800f776:	701a      	strb	r2, [r3, #0]
 800f778:	6a3b      	ldr	r3, [r7, #32]
 800f77a:	699b      	ldr	r3, [r3, #24]
 800f77c:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800f780:	6a3b      	ldr	r3, [r7, #32]
 800f782:	619a      	str	r2, [r3, #24]
 800f784:	6a3b      	ldr	r3, [r7, #32]
 800f786:	695b      	ldr	r3, [r3, #20]
 800f788:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f78c:	2b00      	cmp	r3, #0
 800f78e:	d10a      	bne.n	800f7a6 <HAL_PCD_IRQHandler+0x8ac>
 800f790:	69fb      	ldr	r3, [r7, #28]
 800f792:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f796:	685b      	ldr	r3, [r3, #4]
 800f798:	69fa      	ldr	r2, [r7, #28]
 800f79a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f79e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800f7a2:	6053      	str	r3, [r2, #4]
 800f7a4:	e007      	b.n	800f7b6 <HAL_PCD_IRQHandler+0x8bc>
 800f7a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f7a8:	3301      	adds	r3, #1
 800f7aa:	627b      	str	r3, [r7, #36]	@ 0x24
 800f7ac:	687b      	ldr	r3, [r7, #4]
 800f7ae:	685b      	ldr	r3, [r3, #4]
 800f7b0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f7b2:	429a      	cmp	r2, r3
 800f7b4:	d3b4      	bcc.n	800f720 <HAL_PCD_IRQHandler+0x826>
 800f7b6:	687b      	ldr	r3, [r7, #4]
 800f7b8:	681b      	ldr	r3, [r3, #0]
 800f7ba:	695a      	ldr	r2, [r3, #20]
 800f7bc:	687b      	ldr	r3, [r7, #4]
 800f7be:	681b      	ldr	r3, [r3, #0]
 800f7c0:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800f7c4:	615a      	str	r2, [r3, #20]
 800f7c6:	687b      	ldr	r3, [r7, #4]
 800f7c8:	681b      	ldr	r3, [r3, #0]
 800f7ca:	4618      	mov	r0, r3
 800f7cc:	f005 fb7e 	bl	8014ecc <USB_ReadInterrupts>
 800f7d0:	4603      	mov	r3, r0
 800f7d2:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800f7d6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800f7da:	d10a      	bne.n	800f7f2 <HAL_PCD_IRQHandler+0x8f8>
 800f7dc:	6878      	ldr	r0, [r7, #4]
 800f7de:	f00b f89d 	bl	801a91c <HAL_PCD_ConnectCallback>
 800f7e2:	687b      	ldr	r3, [r7, #4]
 800f7e4:	681b      	ldr	r3, [r3, #0]
 800f7e6:	695a      	ldr	r2, [r3, #20]
 800f7e8:	687b      	ldr	r3, [r7, #4]
 800f7ea:	681b      	ldr	r3, [r3, #0]
 800f7ec:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800f7f0:	615a      	str	r2, [r3, #20]
 800f7f2:	687b      	ldr	r3, [r7, #4]
 800f7f4:	681b      	ldr	r3, [r3, #0]
 800f7f6:	4618      	mov	r0, r3
 800f7f8:	f005 fb68 	bl	8014ecc <USB_ReadInterrupts>
 800f7fc:	4603      	mov	r3, r0
 800f7fe:	f003 0304 	and.w	r3, r3, #4
 800f802:	2b04      	cmp	r3, #4
 800f804:	d115      	bne.n	800f832 <HAL_PCD_IRQHandler+0x938>
 800f806:	687b      	ldr	r3, [r7, #4]
 800f808:	681b      	ldr	r3, [r3, #0]
 800f80a:	685b      	ldr	r3, [r3, #4]
 800f80c:	61bb      	str	r3, [r7, #24]
 800f80e:	69bb      	ldr	r3, [r7, #24]
 800f810:	f003 0304 	and.w	r3, r3, #4
 800f814:	2b00      	cmp	r3, #0
 800f816:	d002      	beq.n	800f81e <HAL_PCD_IRQHandler+0x924>
 800f818:	6878      	ldr	r0, [r7, #4]
 800f81a:	f00b f88d 	bl	801a938 <HAL_PCD_DisconnectCallback>
 800f81e:	687b      	ldr	r3, [r7, #4]
 800f820:	681b      	ldr	r3, [r3, #0]
 800f822:	6859      	ldr	r1, [r3, #4]
 800f824:	687b      	ldr	r3, [r7, #4]
 800f826:	681b      	ldr	r3, [r3, #0]
 800f828:	69ba      	ldr	r2, [r7, #24]
 800f82a:	430a      	orrs	r2, r1
 800f82c:	605a      	str	r2, [r3, #4]
 800f82e:	e000      	b.n	800f832 <HAL_PCD_IRQHandler+0x938>
 800f830:	bf00      	nop
 800f832:	3734      	adds	r7, #52	@ 0x34
 800f834:	46bd      	mov	sp, r7
 800f836:	bd90      	pop	{r4, r7, pc}

0800f838 <HAL_PCD_SetAddress>:
 800f838:	b580      	push	{r7, lr}
 800f83a:	b082      	sub	sp, #8
 800f83c:	af00      	add	r7, sp, #0
 800f83e:	6078      	str	r0, [r7, #4]
 800f840:	460b      	mov	r3, r1
 800f842:	70fb      	strb	r3, [r7, #3]
 800f844:	687b      	ldr	r3, [r7, #4]
 800f846:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f84a:	2b01      	cmp	r3, #1
 800f84c:	d101      	bne.n	800f852 <HAL_PCD_SetAddress+0x1a>
 800f84e:	2302      	movs	r3, #2
 800f850:	e013      	b.n	800f87a <HAL_PCD_SetAddress+0x42>
 800f852:	687b      	ldr	r3, [r7, #4]
 800f854:	2201      	movs	r2, #1
 800f856:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f85a:	687b      	ldr	r3, [r7, #4]
 800f85c:	78fa      	ldrb	r2, [r7, #3]
 800f85e:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800f862:	687b      	ldr	r3, [r7, #4]
 800f864:	681b      	ldr	r3, [r3, #0]
 800f866:	78fa      	ldrb	r2, [r7, #3]
 800f868:	4611      	mov	r1, r2
 800f86a:	4618      	mov	r0, r3
 800f86c:	f005 fac6 	bl	8014dfc <USB_SetDevAddress>
 800f870:	687b      	ldr	r3, [r7, #4]
 800f872:	2200      	movs	r2, #0
 800f874:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f878:	2300      	movs	r3, #0
 800f87a:	4618      	mov	r0, r3
 800f87c:	3708      	adds	r7, #8
 800f87e:	46bd      	mov	sp, r7
 800f880:	bd80      	pop	{r7, pc}

0800f882 <HAL_PCD_EP_Open>:
 800f882:	b580      	push	{r7, lr}
 800f884:	b084      	sub	sp, #16
 800f886:	af00      	add	r7, sp, #0
 800f888:	6078      	str	r0, [r7, #4]
 800f88a:	4608      	mov	r0, r1
 800f88c:	4611      	mov	r1, r2
 800f88e:	461a      	mov	r2, r3
 800f890:	4603      	mov	r3, r0
 800f892:	70fb      	strb	r3, [r7, #3]
 800f894:	460b      	mov	r3, r1
 800f896:	803b      	strh	r3, [r7, #0]
 800f898:	4613      	mov	r3, r2
 800f89a:	70bb      	strb	r3, [r7, #2]
 800f89c:	2300      	movs	r3, #0
 800f89e:	72fb      	strb	r3, [r7, #11]
 800f8a0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f8a4:	2b00      	cmp	r3, #0
 800f8a6:	da0f      	bge.n	800f8c8 <HAL_PCD_EP_Open+0x46>
 800f8a8:	78fb      	ldrb	r3, [r7, #3]
 800f8aa:	f003 020f 	and.w	r2, r3, #15
 800f8ae:	4613      	mov	r3, r2
 800f8b0:	00db      	lsls	r3, r3, #3
 800f8b2:	4413      	add	r3, r2
 800f8b4:	009b      	lsls	r3, r3, #2
 800f8b6:	3338      	adds	r3, #56	@ 0x38
 800f8b8:	687a      	ldr	r2, [r7, #4]
 800f8ba:	4413      	add	r3, r2
 800f8bc:	3304      	adds	r3, #4
 800f8be:	60fb      	str	r3, [r7, #12]
 800f8c0:	68fb      	ldr	r3, [r7, #12]
 800f8c2:	2201      	movs	r2, #1
 800f8c4:	705a      	strb	r2, [r3, #1]
 800f8c6:	e00f      	b.n	800f8e8 <HAL_PCD_EP_Open+0x66>
 800f8c8:	78fb      	ldrb	r3, [r7, #3]
 800f8ca:	f003 020f 	and.w	r2, r3, #15
 800f8ce:	4613      	mov	r3, r2
 800f8d0:	00db      	lsls	r3, r3, #3
 800f8d2:	4413      	add	r3, r2
 800f8d4:	009b      	lsls	r3, r3, #2
 800f8d6:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f8da:	687a      	ldr	r2, [r7, #4]
 800f8dc:	4413      	add	r3, r2
 800f8de:	3304      	adds	r3, #4
 800f8e0:	60fb      	str	r3, [r7, #12]
 800f8e2:	68fb      	ldr	r3, [r7, #12]
 800f8e4:	2200      	movs	r2, #0
 800f8e6:	705a      	strb	r2, [r3, #1]
 800f8e8:	78fb      	ldrb	r3, [r7, #3]
 800f8ea:	f003 030f 	and.w	r3, r3, #15
 800f8ee:	b2da      	uxtb	r2, r3
 800f8f0:	68fb      	ldr	r3, [r7, #12]
 800f8f2:	701a      	strb	r2, [r3, #0]
 800f8f4:	883a      	ldrh	r2, [r7, #0]
 800f8f6:	68fb      	ldr	r3, [r7, #12]
 800f8f8:	60da      	str	r2, [r3, #12]
 800f8fa:	68fb      	ldr	r3, [r7, #12]
 800f8fc:	78ba      	ldrb	r2, [r7, #2]
 800f8fe:	711a      	strb	r2, [r3, #4]
 800f900:	68fb      	ldr	r3, [r7, #12]
 800f902:	785b      	ldrb	r3, [r3, #1]
 800f904:	2b00      	cmp	r3, #0
 800f906:	d004      	beq.n	800f912 <HAL_PCD_EP_Open+0x90>
 800f908:	68fb      	ldr	r3, [r7, #12]
 800f90a:	781b      	ldrb	r3, [r3, #0]
 800f90c:	461a      	mov	r2, r3
 800f90e:	68fb      	ldr	r3, [r7, #12]
 800f910:	811a      	strh	r2, [r3, #8]
 800f912:	78bb      	ldrb	r3, [r7, #2]
 800f914:	2b02      	cmp	r3, #2
 800f916:	d102      	bne.n	800f91e <HAL_PCD_EP_Open+0x9c>
 800f918:	68fb      	ldr	r3, [r7, #12]
 800f91a:	2200      	movs	r2, #0
 800f91c:	715a      	strb	r2, [r3, #5]
 800f91e:	687b      	ldr	r3, [r7, #4]
 800f920:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f924:	2b01      	cmp	r3, #1
 800f926:	d101      	bne.n	800f92c <HAL_PCD_EP_Open+0xaa>
 800f928:	2302      	movs	r3, #2
 800f92a:	e00e      	b.n	800f94a <HAL_PCD_EP_Open+0xc8>
 800f92c:	687b      	ldr	r3, [r7, #4]
 800f92e:	2201      	movs	r2, #1
 800f930:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f934:	687b      	ldr	r3, [r7, #4]
 800f936:	681b      	ldr	r3, [r3, #0]
 800f938:	68f9      	ldr	r1, [r7, #12]
 800f93a:	4618      	mov	r0, r3
 800f93c:	f004 fb46 	bl	8013fcc <USB_ActivateEndpoint>
 800f940:	687b      	ldr	r3, [r7, #4]
 800f942:	2200      	movs	r2, #0
 800f944:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f948:	7afb      	ldrb	r3, [r7, #11]
 800f94a:	4618      	mov	r0, r3
 800f94c:	3710      	adds	r7, #16
 800f94e:	46bd      	mov	sp, r7
 800f950:	bd80      	pop	{r7, pc}

0800f952 <HAL_PCD_EP_Close>:
 800f952:	b580      	push	{r7, lr}
 800f954:	b084      	sub	sp, #16
 800f956:	af00      	add	r7, sp, #0
 800f958:	6078      	str	r0, [r7, #4]
 800f95a:	460b      	mov	r3, r1
 800f95c:	70fb      	strb	r3, [r7, #3]
 800f95e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f962:	2b00      	cmp	r3, #0
 800f964:	da0f      	bge.n	800f986 <HAL_PCD_EP_Close+0x34>
 800f966:	78fb      	ldrb	r3, [r7, #3]
 800f968:	f003 020f 	and.w	r2, r3, #15
 800f96c:	4613      	mov	r3, r2
 800f96e:	00db      	lsls	r3, r3, #3
 800f970:	4413      	add	r3, r2
 800f972:	009b      	lsls	r3, r3, #2
 800f974:	3338      	adds	r3, #56	@ 0x38
 800f976:	687a      	ldr	r2, [r7, #4]
 800f978:	4413      	add	r3, r2
 800f97a:	3304      	adds	r3, #4
 800f97c:	60fb      	str	r3, [r7, #12]
 800f97e:	68fb      	ldr	r3, [r7, #12]
 800f980:	2201      	movs	r2, #1
 800f982:	705a      	strb	r2, [r3, #1]
 800f984:	e00f      	b.n	800f9a6 <HAL_PCD_EP_Close+0x54>
 800f986:	78fb      	ldrb	r3, [r7, #3]
 800f988:	f003 020f 	and.w	r2, r3, #15
 800f98c:	4613      	mov	r3, r2
 800f98e:	00db      	lsls	r3, r3, #3
 800f990:	4413      	add	r3, r2
 800f992:	009b      	lsls	r3, r3, #2
 800f994:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f998:	687a      	ldr	r2, [r7, #4]
 800f99a:	4413      	add	r3, r2
 800f99c:	3304      	adds	r3, #4
 800f99e:	60fb      	str	r3, [r7, #12]
 800f9a0:	68fb      	ldr	r3, [r7, #12]
 800f9a2:	2200      	movs	r2, #0
 800f9a4:	705a      	strb	r2, [r3, #1]
 800f9a6:	78fb      	ldrb	r3, [r7, #3]
 800f9a8:	f003 030f 	and.w	r3, r3, #15
 800f9ac:	b2da      	uxtb	r2, r3
 800f9ae:	68fb      	ldr	r3, [r7, #12]
 800f9b0:	701a      	strb	r2, [r3, #0]
 800f9b2:	687b      	ldr	r3, [r7, #4]
 800f9b4:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f9b8:	2b01      	cmp	r3, #1
 800f9ba:	d101      	bne.n	800f9c0 <HAL_PCD_EP_Close+0x6e>
 800f9bc:	2302      	movs	r3, #2
 800f9be:	e00e      	b.n	800f9de <HAL_PCD_EP_Close+0x8c>
 800f9c0:	687b      	ldr	r3, [r7, #4]
 800f9c2:	2201      	movs	r2, #1
 800f9c4:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f9c8:	687b      	ldr	r3, [r7, #4]
 800f9ca:	681b      	ldr	r3, [r3, #0]
 800f9cc:	68f9      	ldr	r1, [r7, #12]
 800f9ce:	4618      	mov	r0, r3
 800f9d0:	f004 fb84 	bl	80140dc <USB_DeactivateEndpoint>
 800f9d4:	687b      	ldr	r3, [r7, #4]
 800f9d6:	2200      	movs	r2, #0
 800f9d8:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f9dc:	2300      	movs	r3, #0
 800f9de:	4618      	mov	r0, r3
 800f9e0:	3710      	adds	r7, #16
 800f9e2:	46bd      	mov	sp, r7
 800f9e4:	bd80      	pop	{r7, pc}

0800f9e6 <HAL_PCD_EP_Receive>:
 800f9e6:	b580      	push	{r7, lr}
 800f9e8:	b086      	sub	sp, #24
 800f9ea:	af00      	add	r7, sp, #0
 800f9ec:	60f8      	str	r0, [r7, #12]
 800f9ee:	607a      	str	r2, [r7, #4]
 800f9f0:	603b      	str	r3, [r7, #0]
 800f9f2:	460b      	mov	r3, r1
 800f9f4:	72fb      	strb	r3, [r7, #11]
 800f9f6:	7afb      	ldrb	r3, [r7, #11]
 800f9f8:	f003 020f 	and.w	r2, r3, #15
 800f9fc:	4613      	mov	r3, r2
 800f9fe:	00db      	lsls	r3, r3, #3
 800fa00:	4413      	add	r3, r2
 800fa02:	009b      	lsls	r3, r3, #2
 800fa04:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fa08:	68fa      	ldr	r2, [r7, #12]
 800fa0a:	4413      	add	r3, r2
 800fa0c:	3304      	adds	r3, #4
 800fa0e:	617b      	str	r3, [r7, #20]
 800fa10:	697b      	ldr	r3, [r7, #20]
 800fa12:	687a      	ldr	r2, [r7, #4]
 800fa14:	611a      	str	r2, [r3, #16]
 800fa16:	697b      	ldr	r3, [r7, #20]
 800fa18:	683a      	ldr	r2, [r7, #0]
 800fa1a:	619a      	str	r2, [r3, #24]
 800fa1c:	697b      	ldr	r3, [r7, #20]
 800fa1e:	2200      	movs	r2, #0
 800fa20:	621a      	str	r2, [r3, #32]
 800fa22:	697b      	ldr	r3, [r7, #20]
 800fa24:	2200      	movs	r2, #0
 800fa26:	705a      	strb	r2, [r3, #1]
 800fa28:	7afb      	ldrb	r3, [r7, #11]
 800fa2a:	f003 030f 	and.w	r3, r3, #15
 800fa2e:	b2da      	uxtb	r2, r3
 800fa30:	697b      	ldr	r3, [r7, #20]
 800fa32:	701a      	strb	r2, [r3, #0]
 800fa34:	68fb      	ldr	r3, [r7, #12]
 800fa36:	691b      	ldr	r3, [r3, #16]
 800fa38:	2b01      	cmp	r3, #1
 800fa3a:	d102      	bne.n	800fa42 <HAL_PCD_EP_Receive+0x5c>
 800fa3c:	687a      	ldr	r2, [r7, #4]
 800fa3e:	697b      	ldr	r3, [r7, #20]
 800fa40:	615a      	str	r2, [r3, #20]
 800fa42:	7afb      	ldrb	r3, [r7, #11]
 800fa44:	f003 030f 	and.w	r3, r3, #15
 800fa48:	2b00      	cmp	r3, #0
 800fa4a:	d109      	bne.n	800fa60 <HAL_PCD_EP_Receive+0x7a>
 800fa4c:	68fb      	ldr	r3, [r7, #12]
 800fa4e:	6818      	ldr	r0, [r3, #0]
 800fa50:	68fb      	ldr	r3, [r7, #12]
 800fa52:	691b      	ldr	r3, [r3, #16]
 800fa54:	b2db      	uxtb	r3, r3
 800fa56:	461a      	mov	r2, r3
 800fa58:	6979      	ldr	r1, [r7, #20]
 800fa5a:	f004 fe63 	bl	8014724 <USB_EP0StartXfer>
 800fa5e:	e008      	b.n	800fa72 <HAL_PCD_EP_Receive+0x8c>
 800fa60:	68fb      	ldr	r3, [r7, #12]
 800fa62:	6818      	ldr	r0, [r3, #0]
 800fa64:	68fb      	ldr	r3, [r7, #12]
 800fa66:	691b      	ldr	r3, [r3, #16]
 800fa68:	b2db      	uxtb	r3, r3
 800fa6a:	461a      	mov	r2, r3
 800fa6c:	6979      	ldr	r1, [r7, #20]
 800fa6e:	f004 fc11 	bl	8014294 <USB_EPStartXfer>
 800fa72:	2300      	movs	r3, #0
 800fa74:	4618      	mov	r0, r3
 800fa76:	3718      	adds	r7, #24
 800fa78:	46bd      	mov	sp, r7
 800fa7a:	bd80      	pop	{r7, pc}

0800fa7c <HAL_PCD_EP_GetRxCount>:
 800fa7c:	b480      	push	{r7}
 800fa7e:	b083      	sub	sp, #12
 800fa80:	af00      	add	r7, sp, #0
 800fa82:	6078      	str	r0, [r7, #4]
 800fa84:	460b      	mov	r3, r1
 800fa86:	70fb      	strb	r3, [r7, #3]
 800fa88:	78fb      	ldrb	r3, [r7, #3]
 800fa8a:	f003 020f 	and.w	r2, r3, #15
 800fa8e:	6879      	ldr	r1, [r7, #4]
 800fa90:	4613      	mov	r3, r2
 800fa92:	00db      	lsls	r3, r3, #3
 800fa94:	4413      	add	r3, r2
 800fa96:	009b      	lsls	r3, r3, #2
 800fa98:	440b      	add	r3, r1
 800fa9a:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800fa9e:	681b      	ldr	r3, [r3, #0]
 800faa0:	4618      	mov	r0, r3
 800faa2:	370c      	adds	r7, #12
 800faa4:	46bd      	mov	sp, r7
 800faa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faaa:	4770      	bx	lr

0800faac <HAL_PCD_EP_Transmit>:
 800faac:	b580      	push	{r7, lr}
 800faae:	b086      	sub	sp, #24
 800fab0:	af00      	add	r7, sp, #0
 800fab2:	60f8      	str	r0, [r7, #12]
 800fab4:	607a      	str	r2, [r7, #4]
 800fab6:	603b      	str	r3, [r7, #0]
 800fab8:	460b      	mov	r3, r1
 800faba:	72fb      	strb	r3, [r7, #11]
 800fabc:	7afb      	ldrb	r3, [r7, #11]
 800fabe:	f003 020f 	and.w	r2, r3, #15
 800fac2:	4613      	mov	r3, r2
 800fac4:	00db      	lsls	r3, r3, #3
 800fac6:	4413      	add	r3, r2
 800fac8:	009b      	lsls	r3, r3, #2
 800faca:	3338      	adds	r3, #56	@ 0x38
 800facc:	68fa      	ldr	r2, [r7, #12]
 800face:	4413      	add	r3, r2
 800fad0:	3304      	adds	r3, #4
 800fad2:	617b      	str	r3, [r7, #20]
 800fad4:	697b      	ldr	r3, [r7, #20]
 800fad6:	687a      	ldr	r2, [r7, #4]
 800fad8:	611a      	str	r2, [r3, #16]
 800fada:	697b      	ldr	r3, [r7, #20]
 800fadc:	683a      	ldr	r2, [r7, #0]
 800fade:	619a      	str	r2, [r3, #24]
 800fae0:	697b      	ldr	r3, [r7, #20]
 800fae2:	2200      	movs	r2, #0
 800fae4:	621a      	str	r2, [r3, #32]
 800fae6:	697b      	ldr	r3, [r7, #20]
 800fae8:	2201      	movs	r2, #1
 800faea:	705a      	strb	r2, [r3, #1]
 800faec:	7afb      	ldrb	r3, [r7, #11]
 800faee:	f003 030f 	and.w	r3, r3, #15
 800faf2:	b2da      	uxtb	r2, r3
 800faf4:	697b      	ldr	r3, [r7, #20]
 800faf6:	701a      	strb	r2, [r3, #0]
 800faf8:	68fb      	ldr	r3, [r7, #12]
 800fafa:	691b      	ldr	r3, [r3, #16]
 800fafc:	2b01      	cmp	r3, #1
 800fafe:	d102      	bne.n	800fb06 <HAL_PCD_EP_Transmit+0x5a>
 800fb00:	687a      	ldr	r2, [r7, #4]
 800fb02:	697b      	ldr	r3, [r7, #20]
 800fb04:	615a      	str	r2, [r3, #20]
 800fb06:	7afb      	ldrb	r3, [r7, #11]
 800fb08:	f003 030f 	and.w	r3, r3, #15
 800fb0c:	2b00      	cmp	r3, #0
 800fb0e:	d109      	bne.n	800fb24 <HAL_PCD_EP_Transmit+0x78>
 800fb10:	68fb      	ldr	r3, [r7, #12]
 800fb12:	6818      	ldr	r0, [r3, #0]
 800fb14:	68fb      	ldr	r3, [r7, #12]
 800fb16:	691b      	ldr	r3, [r3, #16]
 800fb18:	b2db      	uxtb	r3, r3
 800fb1a:	461a      	mov	r2, r3
 800fb1c:	6979      	ldr	r1, [r7, #20]
 800fb1e:	f004 fe01 	bl	8014724 <USB_EP0StartXfer>
 800fb22:	e008      	b.n	800fb36 <HAL_PCD_EP_Transmit+0x8a>
 800fb24:	68fb      	ldr	r3, [r7, #12]
 800fb26:	6818      	ldr	r0, [r3, #0]
 800fb28:	68fb      	ldr	r3, [r7, #12]
 800fb2a:	691b      	ldr	r3, [r3, #16]
 800fb2c:	b2db      	uxtb	r3, r3
 800fb2e:	461a      	mov	r2, r3
 800fb30:	6979      	ldr	r1, [r7, #20]
 800fb32:	f004 fbaf 	bl	8014294 <USB_EPStartXfer>
 800fb36:	2300      	movs	r3, #0
 800fb38:	4618      	mov	r0, r3
 800fb3a:	3718      	adds	r7, #24
 800fb3c:	46bd      	mov	sp, r7
 800fb3e:	bd80      	pop	{r7, pc}

0800fb40 <HAL_PCD_EP_SetStall>:
 800fb40:	b580      	push	{r7, lr}
 800fb42:	b084      	sub	sp, #16
 800fb44:	af00      	add	r7, sp, #0
 800fb46:	6078      	str	r0, [r7, #4]
 800fb48:	460b      	mov	r3, r1
 800fb4a:	70fb      	strb	r3, [r7, #3]
 800fb4c:	78fb      	ldrb	r3, [r7, #3]
 800fb4e:	f003 020f 	and.w	r2, r3, #15
 800fb52:	687b      	ldr	r3, [r7, #4]
 800fb54:	685b      	ldr	r3, [r3, #4]
 800fb56:	429a      	cmp	r2, r3
 800fb58:	d901      	bls.n	800fb5e <HAL_PCD_EP_SetStall+0x1e>
 800fb5a:	2301      	movs	r3, #1
 800fb5c:	e050      	b.n	800fc00 <HAL_PCD_EP_SetStall+0xc0>
 800fb5e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fb62:	2b00      	cmp	r3, #0
 800fb64:	da0f      	bge.n	800fb86 <HAL_PCD_EP_SetStall+0x46>
 800fb66:	78fb      	ldrb	r3, [r7, #3]
 800fb68:	f003 020f 	and.w	r2, r3, #15
 800fb6c:	4613      	mov	r3, r2
 800fb6e:	00db      	lsls	r3, r3, #3
 800fb70:	4413      	add	r3, r2
 800fb72:	009b      	lsls	r3, r3, #2
 800fb74:	3338      	adds	r3, #56	@ 0x38
 800fb76:	687a      	ldr	r2, [r7, #4]
 800fb78:	4413      	add	r3, r2
 800fb7a:	3304      	adds	r3, #4
 800fb7c:	60fb      	str	r3, [r7, #12]
 800fb7e:	68fb      	ldr	r3, [r7, #12]
 800fb80:	2201      	movs	r2, #1
 800fb82:	705a      	strb	r2, [r3, #1]
 800fb84:	e00d      	b.n	800fba2 <HAL_PCD_EP_SetStall+0x62>
 800fb86:	78fa      	ldrb	r2, [r7, #3]
 800fb88:	4613      	mov	r3, r2
 800fb8a:	00db      	lsls	r3, r3, #3
 800fb8c:	4413      	add	r3, r2
 800fb8e:	009b      	lsls	r3, r3, #2
 800fb90:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fb94:	687a      	ldr	r2, [r7, #4]
 800fb96:	4413      	add	r3, r2
 800fb98:	3304      	adds	r3, #4
 800fb9a:	60fb      	str	r3, [r7, #12]
 800fb9c:	68fb      	ldr	r3, [r7, #12]
 800fb9e:	2200      	movs	r2, #0
 800fba0:	705a      	strb	r2, [r3, #1]
 800fba2:	68fb      	ldr	r3, [r7, #12]
 800fba4:	2201      	movs	r2, #1
 800fba6:	709a      	strb	r2, [r3, #2]
 800fba8:	78fb      	ldrb	r3, [r7, #3]
 800fbaa:	f003 030f 	and.w	r3, r3, #15
 800fbae:	b2da      	uxtb	r2, r3
 800fbb0:	68fb      	ldr	r3, [r7, #12]
 800fbb2:	701a      	strb	r2, [r3, #0]
 800fbb4:	687b      	ldr	r3, [r7, #4]
 800fbb6:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800fbba:	2b01      	cmp	r3, #1
 800fbbc:	d101      	bne.n	800fbc2 <HAL_PCD_EP_SetStall+0x82>
 800fbbe:	2302      	movs	r3, #2
 800fbc0:	e01e      	b.n	800fc00 <HAL_PCD_EP_SetStall+0xc0>
 800fbc2:	687b      	ldr	r3, [r7, #4]
 800fbc4:	2201      	movs	r2, #1
 800fbc6:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fbca:	687b      	ldr	r3, [r7, #4]
 800fbcc:	681b      	ldr	r3, [r3, #0]
 800fbce:	68f9      	ldr	r1, [r7, #12]
 800fbd0:	4618      	mov	r0, r3
 800fbd2:	f005 f83f 	bl	8014c54 <USB_EPSetStall>
 800fbd6:	78fb      	ldrb	r3, [r7, #3]
 800fbd8:	f003 030f 	and.w	r3, r3, #15
 800fbdc:	2b00      	cmp	r3, #0
 800fbde:	d10a      	bne.n	800fbf6 <HAL_PCD_EP_SetStall+0xb6>
 800fbe0:	687b      	ldr	r3, [r7, #4]
 800fbe2:	6818      	ldr	r0, [r3, #0]
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	691b      	ldr	r3, [r3, #16]
 800fbe8:	b2d9      	uxtb	r1, r3
 800fbea:	687b      	ldr	r3, [r7, #4]
 800fbec:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fbf0:	461a      	mov	r2, r3
 800fbf2:	f005 fa2f 	bl	8015054 <USB_EP0_OutStart>
 800fbf6:	687b      	ldr	r3, [r7, #4]
 800fbf8:	2200      	movs	r2, #0
 800fbfa:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fbfe:	2300      	movs	r3, #0
 800fc00:	4618      	mov	r0, r3
 800fc02:	3710      	adds	r7, #16
 800fc04:	46bd      	mov	sp, r7
 800fc06:	bd80      	pop	{r7, pc}

0800fc08 <HAL_PCD_EP_ClrStall>:
 800fc08:	b580      	push	{r7, lr}
 800fc0a:	b084      	sub	sp, #16
 800fc0c:	af00      	add	r7, sp, #0
 800fc0e:	6078      	str	r0, [r7, #4]
 800fc10:	460b      	mov	r3, r1
 800fc12:	70fb      	strb	r3, [r7, #3]
 800fc14:	78fb      	ldrb	r3, [r7, #3]
 800fc16:	f003 020f 	and.w	r2, r3, #15
 800fc1a:	687b      	ldr	r3, [r7, #4]
 800fc1c:	685b      	ldr	r3, [r3, #4]
 800fc1e:	429a      	cmp	r2, r3
 800fc20:	d901      	bls.n	800fc26 <HAL_PCD_EP_ClrStall+0x1e>
 800fc22:	2301      	movs	r3, #1
 800fc24:	e042      	b.n	800fcac <HAL_PCD_EP_ClrStall+0xa4>
 800fc26:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fc2a:	2b00      	cmp	r3, #0
 800fc2c:	da0f      	bge.n	800fc4e <HAL_PCD_EP_ClrStall+0x46>
 800fc2e:	78fb      	ldrb	r3, [r7, #3]
 800fc30:	f003 020f 	and.w	r2, r3, #15
 800fc34:	4613      	mov	r3, r2
 800fc36:	00db      	lsls	r3, r3, #3
 800fc38:	4413      	add	r3, r2
 800fc3a:	009b      	lsls	r3, r3, #2
 800fc3c:	3338      	adds	r3, #56	@ 0x38
 800fc3e:	687a      	ldr	r2, [r7, #4]
 800fc40:	4413      	add	r3, r2
 800fc42:	3304      	adds	r3, #4
 800fc44:	60fb      	str	r3, [r7, #12]
 800fc46:	68fb      	ldr	r3, [r7, #12]
 800fc48:	2201      	movs	r2, #1
 800fc4a:	705a      	strb	r2, [r3, #1]
 800fc4c:	e00f      	b.n	800fc6e <HAL_PCD_EP_ClrStall+0x66>
 800fc4e:	78fb      	ldrb	r3, [r7, #3]
 800fc50:	f003 020f 	and.w	r2, r3, #15
 800fc54:	4613      	mov	r3, r2
 800fc56:	00db      	lsls	r3, r3, #3
 800fc58:	4413      	add	r3, r2
 800fc5a:	009b      	lsls	r3, r3, #2
 800fc5c:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fc60:	687a      	ldr	r2, [r7, #4]
 800fc62:	4413      	add	r3, r2
 800fc64:	3304      	adds	r3, #4
 800fc66:	60fb      	str	r3, [r7, #12]
 800fc68:	68fb      	ldr	r3, [r7, #12]
 800fc6a:	2200      	movs	r2, #0
 800fc6c:	705a      	strb	r2, [r3, #1]
 800fc6e:	68fb      	ldr	r3, [r7, #12]
 800fc70:	2200      	movs	r2, #0
 800fc72:	709a      	strb	r2, [r3, #2]
 800fc74:	78fb      	ldrb	r3, [r7, #3]
 800fc76:	f003 030f 	and.w	r3, r3, #15
 800fc7a:	b2da      	uxtb	r2, r3
 800fc7c:	68fb      	ldr	r3, [r7, #12]
 800fc7e:	701a      	strb	r2, [r3, #0]
 800fc80:	687b      	ldr	r3, [r7, #4]
 800fc82:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800fc86:	2b01      	cmp	r3, #1
 800fc88:	d101      	bne.n	800fc8e <HAL_PCD_EP_ClrStall+0x86>
 800fc8a:	2302      	movs	r3, #2
 800fc8c:	e00e      	b.n	800fcac <HAL_PCD_EP_ClrStall+0xa4>
 800fc8e:	687b      	ldr	r3, [r7, #4]
 800fc90:	2201      	movs	r2, #1
 800fc92:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fc96:	687b      	ldr	r3, [r7, #4]
 800fc98:	681b      	ldr	r3, [r3, #0]
 800fc9a:	68f9      	ldr	r1, [r7, #12]
 800fc9c:	4618      	mov	r0, r3
 800fc9e:	f005 f847 	bl	8014d30 <USB_EPClearStall>
 800fca2:	687b      	ldr	r3, [r7, #4]
 800fca4:	2200      	movs	r2, #0
 800fca6:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fcaa:	2300      	movs	r3, #0
 800fcac:	4618      	mov	r0, r3
 800fcae:	3710      	adds	r7, #16
 800fcb0:	46bd      	mov	sp, r7
 800fcb2:	bd80      	pop	{r7, pc}

0800fcb4 <HAL_PCD_EP_Abort>:
 800fcb4:	b580      	push	{r7, lr}
 800fcb6:	b084      	sub	sp, #16
 800fcb8:	af00      	add	r7, sp, #0
 800fcba:	6078      	str	r0, [r7, #4]
 800fcbc:	460b      	mov	r3, r1
 800fcbe:	70fb      	strb	r3, [r7, #3]
 800fcc0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fcc4:	2b00      	cmp	r3, #0
 800fcc6:	da0c      	bge.n	800fce2 <HAL_PCD_EP_Abort+0x2e>
 800fcc8:	78fb      	ldrb	r3, [r7, #3]
 800fcca:	f003 020f 	and.w	r2, r3, #15
 800fcce:	4613      	mov	r3, r2
 800fcd0:	00db      	lsls	r3, r3, #3
 800fcd2:	4413      	add	r3, r2
 800fcd4:	009b      	lsls	r3, r3, #2
 800fcd6:	3338      	adds	r3, #56	@ 0x38
 800fcd8:	687a      	ldr	r2, [r7, #4]
 800fcda:	4413      	add	r3, r2
 800fcdc:	3304      	adds	r3, #4
 800fcde:	60fb      	str	r3, [r7, #12]
 800fce0:	e00c      	b.n	800fcfc <HAL_PCD_EP_Abort+0x48>
 800fce2:	78fb      	ldrb	r3, [r7, #3]
 800fce4:	f003 020f 	and.w	r2, r3, #15
 800fce8:	4613      	mov	r3, r2
 800fcea:	00db      	lsls	r3, r3, #3
 800fcec:	4413      	add	r3, r2
 800fcee:	009b      	lsls	r3, r3, #2
 800fcf0:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fcf4:	687a      	ldr	r2, [r7, #4]
 800fcf6:	4413      	add	r3, r2
 800fcf8:	3304      	adds	r3, #4
 800fcfa:	60fb      	str	r3, [r7, #12]
 800fcfc:	687b      	ldr	r3, [r7, #4]
 800fcfe:	681b      	ldr	r3, [r3, #0]
 800fd00:	68f9      	ldr	r1, [r7, #12]
 800fd02:	4618      	mov	r0, r3
 800fd04:	f004 fe66 	bl	80149d4 <USB_EPStopXfer>
 800fd08:	4603      	mov	r3, r0
 800fd0a:	72fb      	strb	r3, [r7, #11]
 800fd0c:	7afb      	ldrb	r3, [r7, #11]
 800fd0e:	4618      	mov	r0, r3
 800fd10:	3710      	adds	r7, #16
 800fd12:	46bd      	mov	sp, r7
 800fd14:	bd80      	pop	{r7, pc}

0800fd16 <PCD_WriteEmptyTxFifo>:
 800fd16:	b580      	push	{r7, lr}
 800fd18:	b08a      	sub	sp, #40	@ 0x28
 800fd1a:	af02      	add	r7, sp, #8
 800fd1c:	6078      	str	r0, [r7, #4]
 800fd1e:	6039      	str	r1, [r7, #0]
 800fd20:	687b      	ldr	r3, [r7, #4]
 800fd22:	681b      	ldr	r3, [r3, #0]
 800fd24:	617b      	str	r3, [r7, #20]
 800fd26:	697b      	ldr	r3, [r7, #20]
 800fd28:	613b      	str	r3, [r7, #16]
 800fd2a:	683a      	ldr	r2, [r7, #0]
 800fd2c:	4613      	mov	r3, r2
 800fd2e:	00db      	lsls	r3, r3, #3
 800fd30:	4413      	add	r3, r2
 800fd32:	009b      	lsls	r3, r3, #2
 800fd34:	3338      	adds	r3, #56	@ 0x38
 800fd36:	687a      	ldr	r2, [r7, #4]
 800fd38:	4413      	add	r3, r2
 800fd3a:	3304      	adds	r3, #4
 800fd3c:	60fb      	str	r3, [r7, #12]
 800fd3e:	68fb      	ldr	r3, [r7, #12]
 800fd40:	6a1a      	ldr	r2, [r3, #32]
 800fd42:	68fb      	ldr	r3, [r7, #12]
 800fd44:	699b      	ldr	r3, [r3, #24]
 800fd46:	429a      	cmp	r2, r3
 800fd48:	d901      	bls.n	800fd4e <PCD_WriteEmptyTxFifo+0x38>
 800fd4a:	2301      	movs	r3, #1
 800fd4c:	e06c      	b.n	800fe28 <PCD_WriteEmptyTxFifo+0x112>
 800fd4e:	68fb      	ldr	r3, [r7, #12]
 800fd50:	699a      	ldr	r2, [r3, #24]
 800fd52:	68fb      	ldr	r3, [r7, #12]
 800fd54:	6a1b      	ldr	r3, [r3, #32]
 800fd56:	1ad3      	subs	r3, r2, r3
 800fd58:	61fb      	str	r3, [r7, #28]
 800fd5a:	68fb      	ldr	r3, [r7, #12]
 800fd5c:	68db      	ldr	r3, [r3, #12]
 800fd5e:	69fa      	ldr	r2, [r7, #28]
 800fd60:	429a      	cmp	r2, r3
 800fd62:	d902      	bls.n	800fd6a <PCD_WriteEmptyTxFifo+0x54>
 800fd64:	68fb      	ldr	r3, [r7, #12]
 800fd66:	68db      	ldr	r3, [r3, #12]
 800fd68:	61fb      	str	r3, [r7, #28]
 800fd6a:	69fb      	ldr	r3, [r7, #28]
 800fd6c:	3303      	adds	r3, #3
 800fd6e:	089b      	lsrs	r3, r3, #2
 800fd70:	61bb      	str	r3, [r7, #24]
 800fd72:	e02b      	b.n	800fdcc <PCD_WriteEmptyTxFifo+0xb6>
 800fd74:	68fb      	ldr	r3, [r7, #12]
 800fd76:	699a      	ldr	r2, [r3, #24]
 800fd78:	68fb      	ldr	r3, [r7, #12]
 800fd7a:	6a1b      	ldr	r3, [r3, #32]
 800fd7c:	1ad3      	subs	r3, r2, r3
 800fd7e:	61fb      	str	r3, [r7, #28]
 800fd80:	68fb      	ldr	r3, [r7, #12]
 800fd82:	68db      	ldr	r3, [r3, #12]
 800fd84:	69fa      	ldr	r2, [r7, #28]
 800fd86:	429a      	cmp	r2, r3
 800fd88:	d902      	bls.n	800fd90 <PCD_WriteEmptyTxFifo+0x7a>
 800fd8a:	68fb      	ldr	r3, [r7, #12]
 800fd8c:	68db      	ldr	r3, [r3, #12]
 800fd8e:	61fb      	str	r3, [r7, #28]
 800fd90:	69fb      	ldr	r3, [r7, #28]
 800fd92:	3303      	adds	r3, #3
 800fd94:	089b      	lsrs	r3, r3, #2
 800fd96:	61bb      	str	r3, [r7, #24]
 800fd98:	68fb      	ldr	r3, [r7, #12]
 800fd9a:	6919      	ldr	r1, [r3, #16]
 800fd9c:	683b      	ldr	r3, [r7, #0]
 800fd9e:	b2da      	uxtb	r2, r3
 800fda0:	69fb      	ldr	r3, [r7, #28]
 800fda2:	b298      	uxth	r0, r3
 800fda4:	687b      	ldr	r3, [r7, #4]
 800fda6:	691b      	ldr	r3, [r3, #16]
 800fda8:	b2db      	uxtb	r3, r3
 800fdaa:	9300      	str	r3, [sp, #0]
 800fdac:	4603      	mov	r3, r0
 800fdae:	6978      	ldr	r0, [r7, #20]
 800fdb0:	f004 feba 	bl	8014b28 <USB_WritePacket>
 800fdb4:	68fb      	ldr	r3, [r7, #12]
 800fdb6:	691a      	ldr	r2, [r3, #16]
 800fdb8:	69fb      	ldr	r3, [r7, #28]
 800fdba:	441a      	add	r2, r3
 800fdbc:	68fb      	ldr	r3, [r7, #12]
 800fdbe:	611a      	str	r2, [r3, #16]
 800fdc0:	68fb      	ldr	r3, [r7, #12]
 800fdc2:	6a1a      	ldr	r2, [r3, #32]
 800fdc4:	69fb      	ldr	r3, [r7, #28]
 800fdc6:	441a      	add	r2, r3
 800fdc8:	68fb      	ldr	r3, [r7, #12]
 800fdca:	621a      	str	r2, [r3, #32]
 800fdcc:	683b      	ldr	r3, [r7, #0]
 800fdce:	015a      	lsls	r2, r3, #5
 800fdd0:	693b      	ldr	r3, [r7, #16]
 800fdd2:	4413      	add	r3, r2
 800fdd4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800fdd8:	699b      	ldr	r3, [r3, #24]
 800fdda:	b29b      	uxth	r3, r3
 800fddc:	69ba      	ldr	r2, [r7, #24]
 800fdde:	429a      	cmp	r2, r3
 800fde0:	d809      	bhi.n	800fdf6 <PCD_WriteEmptyTxFifo+0xe0>
 800fde2:	68fb      	ldr	r3, [r7, #12]
 800fde4:	6a1a      	ldr	r2, [r3, #32]
 800fde6:	68fb      	ldr	r3, [r7, #12]
 800fde8:	699b      	ldr	r3, [r3, #24]
 800fdea:	429a      	cmp	r2, r3
 800fdec:	d203      	bcs.n	800fdf6 <PCD_WriteEmptyTxFifo+0xe0>
 800fdee:	68fb      	ldr	r3, [r7, #12]
 800fdf0:	699b      	ldr	r3, [r3, #24]
 800fdf2:	2b00      	cmp	r3, #0
 800fdf4:	d1be      	bne.n	800fd74 <PCD_WriteEmptyTxFifo+0x5e>
 800fdf6:	68fb      	ldr	r3, [r7, #12]
 800fdf8:	699a      	ldr	r2, [r3, #24]
 800fdfa:	68fb      	ldr	r3, [r7, #12]
 800fdfc:	6a1b      	ldr	r3, [r3, #32]
 800fdfe:	429a      	cmp	r2, r3
 800fe00:	d811      	bhi.n	800fe26 <PCD_WriteEmptyTxFifo+0x110>
 800fe02:	683b      	ldr	r3, [r7, #0]
 800fe04:	f003 030f 	and.w	r3, r3, #15
 800fe08:	2201      	movs	r2, #1
 800fe0a:	fa02 f303 	lsl.w	r3, r2, r3
 800fe0e:	60bb      	str	r3, [r7, #8]
 800fe10:	693b      	ldr	r3, [r7, #16]
 800fe12:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800fe16:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800fe18:	68bb      	ldr	r3, [r7, #8]
 800fe1a:	43db      	mvns	r3, r3
 800fe1c:	6939      	ldr	r1, [r7, #16]
 800fe1e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800fe22:	4013      	ands	r3, r2
 800fe24:	634b      	str	r3, [r1, #52]	@ 0x34
 800fe26:	2300      	movs	r3, #0
 800fe28:	4618      	mov	r0, r3
 800fe2a:	3720      	adds	r7, #32
 800fe2c:	46bd      	mov	sp, r7
 800fe2e:	bd80      	pop	{r7, pc}

0800fe30 <PCD_EP_OutXfrComplete_int>:
 800fe30:	b580      	push	{r7, lr}
 800fe32:	b088      	sub	sp, #32
 800fe34:	af00      	add	r7, sp, #0
 800fe36:	6078      	str	r0, [r7, #4]
 800fe38:	6039      	str	r1, [r7, #0]
 800fe3a:	687b      	ldr	r3, [r7, #4]
 800fe3c:	681b      	ldr	r3, [r3, #0]
 800fe3e:	61fb      	str	r3, [r7, #28]
 800fe40:	69fb      	ldr	r3, [r7, #28]
 800fe42:	61bb      	str	r3, [r7, #24]
 800fe44:	69fb      	ldr	r3, [r7, #28]
 800fe46:	333c      	adds	r3, #60	@ 0x3c
 800fe48:	3304      	adds	r3, #4
 800fe4a:	681b      	ldr	r3, [r3, #0]
 800fe4c:	617b      	str	r3, [r7, #20]
 800fe4e:	683b      	ldr	r3, [r7, #0]
 800fe50:	015a      	lsls	r2, r3, #5
 800fe52:	69bb      	ldr	r3, [r7, #24]
 800fe54:	4413      	add	r3, r2
 800fe56:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fe5a:	689b      	ldr	r3, [r3, #8]
 800fe5c:	613b      	str	r3, [r7, #16]
 800fe5e:	687b      	ldr	r3, [r7, #4]
 800fe60:	691b      	ldr	r3, [r3, #16]
 800fe62:	2b01      	cmp	r3, #1
 800fe64:	d17b      	bne.n	800ff5e <PCD_EP_OutXfrComplete_int+0x12e>
 800fe66:	693b      	ldr	r3, [r7, #16]
 800fe68:	f003 0308 	and.w	r3, r3, #8
 800fe6c:	2b00      	cmp	r3, #0
 800fe6e:	d015      	beq.n	800fe9c <PCD_EP_OutXfrComplete_int+0x6c>
 800fe70:	697b      	ldr	r3, [r7, #20]
 800fe72:	4a61      	ldr	r2, [pc, #388]	@ (800fff8 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800fe74:	4293      	cmp	r3, r2
 800fe76:	f240 80b9 	bls.w	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe7a:	693b      	ldr	r3, [r7, #16]
 800fe7c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fe80:	2b00      	cmp	r3, #0
 800fe82:	f000 80b3 	beq.w	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe86:	683b      	ldr	r3, [r7, #0]
 800fe88:	015a      	lsls	r2, r3, #5
 800fe8a:	69bb      	ldr	r3, [r7, #24]
 800fe8c:	4413      	add	r3, r2
 800fe8e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fe92:	461a      	mov	r2, r3
 800fe94:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fe98:	6093      	str	r3, [r2, #8]
 800fe9a:	e0a7      	b.n	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe9c:	693b      	ldr	r3, [r7, #16]
 800fe9e:	f003 0320 	and.w	r3, r3, #32
 800fea2:	2b00      	cmp	r3, #0
 800fea4:	d009      	beq.n	800feba <PCD_EP_OutXfrComplete_int+0x8a>
 800fea6:	683b      	ldr	r3, [r7, #0]
 800fea8:	015a      	lsls	r2, r3, #5
 800feaa:	69bb      	ldr	r3, [r7, #24]
 800feac:	4413      	add	r3, r2
 800feae:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800feb2:	461a      	mov	r2, r3
 800feb4:	2320      	movs	r3, #32
 800feb6:	6093      	str	r3, [r2, #8]
 800feb8:	e098      	b.n	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800feba:	693b      	ldr	r3, [r7, #16]
 800febc:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800fec0:	2b00      	cmp	r3, #0
 800fec2:	f040 8093 	bne.w	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800fec6:	697b      	ldr	r3, [r7, #20]
 800fec8:	4a4b      	ldr	r2, [pc, #300]	@ (800fff8 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800feca:	4293      	cmp	r3, r2
 800fecc:	d90f      	bls.n	800feee <PCD_EP_OutXfrComplete_int+0xbe>
 800fece:	693b      	ldr	r3, [r7, #16]
 800fed0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fed4:	2b00      	cmp	r3, #0
 800fed6:	d00a      	beq.n	800feee <PCD_EP_OutXfrComplete_int+0xbe>
 800fed8:	683b      	ldr	r3, [r7, #0]
 800feda:	015a      	lsls	r2, r3, #5
 800fedc:	69bb      	ldr	r3, [r7, #24]
 800fede:	4413      	add	r3, r2
 800fee0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fee4:	461a      	mov	r2, r3
 800fee6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800feea:	6093      	str	r3, [r2, #8]
 800feec:	e07e      	b.n	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800feee:	683a      	ldr	r2, [r7, #0]
 800fef0:	4613      	mov	r3, r2
 800fef2:	00db      	lsls	r3, r3, #3
 800fef4:	4413      	add	r3, r2
 800fef6:	009b      	lsls	r3, r3, #2
 800fef8:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fefc:	687a      	ldr	r2, [r7, #4]
 800fefe:	4413      	add	r3, r2
 800ff00:	3304      	adds	r3, #4
 800ff02:	60fb      	str	r3, [r7, #12]
 800ff04:	68fb      	ldr	r3, [r7, #12]
 800ff06:	69da      	ldr	r2, [r3, #28]
 800ff08:	683b      	ldr	r3, [r7, #0]
 800ff0a:	0159      	lsls	r1, r3, #5
 800ff0c:	69bb      	ldr	r3, [r7, #24]
 800ff0e:	440b      	add	r3, r1
 800ff10:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ff14:	691b      	ldr	r3, [r3, #16]
 800ff16:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800ff1a:	1ad2      	subs	r2, r2, r3
 800ff1c:	68fb      	ldr	r3, [r7, #12]
 800ff1e:	621a      	str	r2, [r3, #32]
 800ff20:	683b      	ldr	r3, [r7, #0]
 800ff22:	2b00      	cmp	r3, #0
 800ff24:	d114      	bne.n	800ff50 <PCD_EP_OutXfrComplete_int+0x120>
 800ff26:	68fb      	ldr	r3, [r7, #12]
 800ff28:	699b      	ldr	r3, [r3, #24]
 800ff2a:	2b00      	cmp	r3, #0
 800ff2c:	d109      	bne.n	800ff42 <PCD_EP_OutXfrComplete_int+0x112>
 800ff2e:	687b      	ldr	r3, [r7, #4]
 800ff30:	6818      	ldr	r0, [r3, #0]
 800ff32:	687b      	ldr	r3, [r7, #4]
 800ff34:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800ff38:	461a      	mov	r2, r3
 800ff3a:	2101      	movs	r1, #1
 800ff3c:	f005 f88a 	bl	8015054 <USB_EP0_OutStart>
 800ff40:	e006      	b.n	800ff50 <PCD_EP_OutXfrComplete_int+0x120>
 800ff42:	68fb      	ldr	r3, [r7, #12]
 800ff44:	691a      	ldr	r2, [r3, #16]
 800ff46:	68fb      	ldr	r3, [r7, #12]
 800ff48:	6a1b      	ldr	r3, [r3, #32]
 800ff4a:	441a      	add	r2, r3
 800ff4c:	68fb      	ldr	r3, [r7, #12]
 800ff4e:	611a      	str	r2, [r3, #16]
 800ff50:	683b      	ldr	r3, [r7, #0]
 800ff52:	b2db      	uxtb	r3, r3
 800ff54:	4619      	mov	r1, r3
 800ff56:	6878      	ldr	r0, [r7, #4]
 800ff58:	f00a fc1c 	bl	801a794 <HAL_PCD_DataOutStageCallback>
 800ff5c:	e046      	b.n	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800ff5e:	697b      	ldr	r3, [r7, #20]
 800ff60:	4a26      	ldr	r2, [pc, #152]	@ (800fffc <PCD_EP_OutXfrComplete_int+0x1cc>)
 800ff62:	4293      	cmp	r3, r2
 800ff64:	d124      	bne.n	800ffb0 <PCD_EP_OutXfrComplete_int+0x180>
 800ff66:	693b      	ldr	r3, [r7, #16]
 800ff68:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ff6c:	2b00      	cmp	r3, #0
 800ff6e:	d00a      	beq.n	800ff86 <PCD_EP_OutXfrComplete_int+0x156>
 800ff70:	683b      	ldr	r3, [r7, #0]
 800ff72:	015a      	lsls	r2, r3, #5
 800ff74:	69bb      	ldr	r3, [r7, #24]
 800ff76:	4413      	add	r3, r2
 800ff78:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ff7c:	461a      	mov	r2, r3
 800ff7e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ff82:	6093      	str	r3, [r2, #8]
 800ff84:	e032      	b.n	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800ff86:	693b      	ldr	r3, [r7, #16]
 800ff88:	f003 0320 	and.w	r3, r3, #32
 800ff8c:	2b00      	cmp	r3, #0
 800ff8e:	d008      	beq.n	800ffa2 <PCD_EP_OutXfrComplete_int+0x172>
 800ff90:	683b      	ldr	r3, [r7, #0]
 800ff92:	015a      	lsls	r2, r3, #5
 800ff94:	69bb      	ldr	r3, [r7, #24]
 800ff96:	4413      	add	r3, r2
 800ff98:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ff9c:	461a      	mov	r2, r3
 800ff9e:	2320      	movs	r3, #32
 800ffa0:	6093      	str	r3, [r2, #8]
 800ffa2:	683b      	ldr	r3, [r7, #0]
 800ffa4:	b2db      	uxtb	r3, r3
 800ffa6:	4619      	mov	r1, r3
 800ffa8:	6878      	ldr	r0, [r7, #4]
 800ffaa:	f00a fbf3 	bl	801a794 <HAL_PCD_DataOutStageCallback>
 800ffae:	e01d      	b.n	800ffec <PCD_EP_OutXfrComplete_int+0x1bc>
 800ffb0:	683b      	ldr	r3, [r7, #0]
 800ffb2:	2b00      	cmp	r3, #0
 800ffb4:	d114      	bne.n	800ffe0 <PCD_EP_OutXfrComplete_int+0x1b0>
 800ffb6:	6879      	ldr	r1, [r7, #4]
 800ffb8:	683a      	ldr	r2, [r7, #0]
 800ffba:	4613      	mov	r3, r2
 800ffbc:	00db      	lsls	r3, r3, #3
 800ffbe:	4413      	add	r3, r2
 800ffc0:	009b      	lsls	r3, r3, #2
 800ffc2:	440b      	add	r3, r1
 800ffc4:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 800ffc8:	681b      	ldr	r3, [r3, #0]
 800ffca:	2b00      	cmp	r3, #0
 800ffcc:	d108      	bne.n	800ffe0 <PCD_EP_OutXfrComplete_int+0x1b0>
 800ffce:	687b      	ldr	r3, [r7, #4]
 800ffd0:	6818      	ldr	r0, [r3, #0]
 800ffd2:	687b      	ldr	r3, [r7, #4]
 800ffd4:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800ffd8:	461a      	mov	r2, r3
 800ffda:	2100      	movs	r1, #0
 800ffdc:	f005 f83a 	bl	8015054 <USB_EP0_OutStart>
 800ffe0:	683b      	ldr	r3, [r7, #0]
 800ffe2:	b2db      	uxtb	r3, r3
 800ffe4:	4619      	mov	r1, r3
 800ffe6:	6878      	ldr	r0, [r7, #4]
 800ffe8:	f00a fbd4 	bl	801a794 <HAL_PCD_DataOutStageCallback>
 800ffec:	2300      	movs	r3, #0
 800ffee:	4618      	mov	r0, r3
 800fff0:	3720      	adds	r7, #32
 800fff2:	46bd      	mov	sp, r7
 800fff4:	bd80      	pop	{r7, pc}
 800fff6:	bf00      	nop
 800fff8:	4f54300a 	.word	0x4f54300a
 800fffc:	4f54310a 	.word	0x4f54310a

08010000 <PCD_EP_OutSetupPacket_int>:
 8010000:	b580      	push	{r7, lr}
 8010002:	b086      	sub	sp, #24
 8010004:	af00      	add	r7, sp, #0
 8010006:	6078      	str	r0, [r7, #4]
 8010008:	6039      	str	r1, [r7, #0]
 801000a:	687b      	ldr	r3, [r7, #4]
 801000c:	681b      	ldr	r3, [r3, #0]
 801000e:	617b      	str	r3, [r7, #20]
 8010010:	697b      	ldr	r3, [r7, #20]
 8010012:	613b      	str	r3, [r7, #16]
 8010014:	697b      	ldr	r3, [r7, #20]
 8010016:	333c      	adds	r3, #60	@ 0x3c
 8010018:	3304      	adds	r3, #4
 801001a:	681b      	ldr	r3, [r3, #0]
 801001c:	60fb      	str	r3, [r7, #12]
 801001e:	683b      	ldr	r3, [r7, #0]
 8010020:	015a      	lsls	r2, r3, #5
 8010022:	693b      	ldr	r3, [r7, #16]
 8010024:	4413      	add	r3, r2
 8010026:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801002a:	689b      	ldr	r3, [r3, #8]
 801002c:	60bb      	str	r3, [r7, #8]
 801002e:	68fb      	ldr	r3, [r7, #12]
 8010030:	4a15      	ldr	r2, [pc, #84]	@ (8010088 <PCD_EP_OutSetupPacket_int+0x88>)
 8010032:	4293      	cmp	r3, r2
 8010034:	d90e      	bls.n	8010054 <PCD_EP_OutSetupPacket_int+0x54>
 8010036:	68bb      	ldr	r3, [r7, #8]
 8010038:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 801003c:	2b00      	cmp	r3, #0
 801003e:	d009      	beq.n	8010054 <PCD_EP_OutSetupPacket_int+0x54>
 8010040:	683b      	ldr	r3, [r7, #0]
 8010042:	015a      	lsls	r2, r3, #5
 8010044:	693b      	ldr	r3, [r7, #16]
 8010046:	4413      	add	r3, r2
 8010048:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801004c:	461a      	mov	r2, r3
 801004e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010052:	6093      	str	r3, [r2, #8]
 8010054:	6878      	ldr	r0, [r7, #4]
 8010056:	f00a fb8b 	bl	801a770 <HAL_PCD_SetupStageCallback>
 801005a:	68fb      	ldr	r3, [r7, #12]
 801005c:	4a0a      	ldr	r2, [pc, #40]	@ (8010088 <PCD_EP_OutSetupPacket_int+0x88>)
 801005e:	4293      	cmp	r3, r2
 8010060:	d90c      	bls.n	801007c <PCD_EP_OutSetupPacket_int+0x7c>
 8010062:	687b      	ldr	r3, [r7, #4]
 8010064:	691b      	ldr	r3, [r3, #16]
 8010066:	2b01      	cmp	r3, #1
 8010068:	d108      	bne.n	801007c <PCD_EP_OutSetupPacket_int+0x7c>
 801006a:	687b      	ldr	r3, [r7, #4]
 801006c:	6818      	ldr	r0, [r3, #0]
 801006e:	687b      	ldr	r3, [r7, #4]
 8010070:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8010074:	461a      	mov	r2, r3
 8010076:	2101      	movs	r1, #1
 8010078:	f004 ffec 	bl	8015054 <USB_EP0_OutStart>
 801007c:	2300      	movs	r3, #0
 801007e:	4618      	mov	r0, r3
 8010080:	3718      	adds	r7, #24
 8010082:	46bd      	mov	sp, r7
 8010084:	bd80      	pop	{r7, pc}
 8010086:	bf00      	nop
 8010088:	4f54300a 	.word	0x4f54300a

0801008c <HAL_PCDEx_SetTxFiFo>:
 801008c:	b480      	push	{r7}
 801008e:	b085      	sub	sp, #20
 8010090:	af00      	add	r7, sp, #0
 8010092:	6078      	str	r0, [r7, #4]
 8010094:	460b      	mov	r3, r1
 8010096:	70fb      	strb	r3, [r7, #3]
 8010098:	4613      	mov	r3, r2
 801009a:	803b      	strh	r3, [r7, #0]
 801009c:	687b      	ldr	r3, [r7, #4]
 801009e:	681b      	ldr	r3, [r3, #0]
 80100a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80100a2:	60bb      	str	r3, [r7, #8]
 80100a4:	78fb      	ldrb	r3, [r7, #3]
 80100a6:	2b00      	cmp	r3, #0
 80100a8:	d107      	bne.n	80100ba <HAL_PCDEx_SetTxFiFo+0x2e>
 80100aa:	883b      	ldrh	r3, [r7, #0]
 80100ac:	0419      	lsls	r1, r3, #16
 80100ae:	687b      	ldr	r3, [r7, #4]
 80100b0:	681b      	ldr	r3, [r3, #0]
 80100b2:	68ba      	ldr	r2, [r7, #8]
 80100b4:	430a      	orrs	r2, r1
 80100b6:	629a      	str	r2, [r3, #40]	@ 0x28
 80100b8:	e028      	b.n	801010c <HAL_PCDEx_SetTxFiFo+0x80>
 80100ba:	687b      	ldr	r3, [r7, #4]
 80100bc:	681b      	ldr	r3, [r3, #0]
 80100be:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80100c0:	0c1b      	lsrs	r3, r3, #16
 80100c2:	68ba      	ldr	r2, [r7, #8]
 80100c4:	4413      	add	r3, r2
 80100c6:	60bb      	str	r3, [r7, #8]
 80100c8:	2300      	movs	r3, #0
 80100ca:	73fb      	strb	r3, [r7, #15]
 80100cc:	e00d      	b.n	80100ea <HAL_PCDEx_SetTxFiFo+0x5e>
 80100ce:	687b      	ldr	r3, [r7, #4]
 80100d0:	681a      	ldr	r2, [r3, #0]
 80100d2:	7bfb      	ldrb	r3, [r7, #15]
 80100d4:	3340      	adds	r3, #64	@ 0x40
 80100d6:	009b      	lsls	r3, r3, #2
 80100d8:	4413      	add	r3, r2
 80100da:	685b      	ldr	r3, [r3, #4]
 80100dc:	0c1b      	lsrs	r3, r3, #16
 80100de:	68ba      	ldr	r2, [r7, #8]
 80100e0:	4413      	add	r3, r2
 80100e2:	60bb      	str	r3, [r7, #8]
 80100e4:	7bfb      	ldrb	r3, [r7, #15]
 80100e6:	3301      	adds	r3, #1
 80100e8:	73fb      	strb	r3, [r7, #15]
 80100ea:	7bfa      	ldrb	r2, [r7, #15]
 80100ec:	78fb      	ldrb	r3, [r7, #3]
 80100ee:	3b01      	subs	r3, #1
 80100f0:	429a      	cmp	r2, r3
 80100f2:	d3ec      	bcc.n	80100ce <HAL_PCDEx_SetTxFiFo+0x42>
 80100f4:	883b      	ldrh	r3, [r7, #0]
 80100f6:	0418      	lsls	r0, r3, #16
 80100f8:	687b      	ldr	r3, [r7, #4]
 80100fa:	6819      	ldr	r1, [r3, #0]
 80100fc:	78fb      	ldrb	r3, [r7, #3]
 80100fe:	3b01      	subs	r3, #1
 8010100:	68ba      	ldr	r2, [r7, #8]
 8010102:	4302      	orrs	r2, r0
 8010104:	3340      	adds	r3, #64	@ 0x40
 8010106:	009b      	lsls	r3, r3, #2
 8010108:	440b      	add	r3, r1
 801010a:	605a      	str	r2, [r3, #4]
 801010c:	2300      	movs	r3, #0
 801010e:	4618      	mov	r0, r3
 8010110:	3714      	adds	r7, #20
 8010112:	46bd      	mov	sp, r7
 8010114:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010118:	4770      	bx	lr

0801011a <HAL_PCDEx_SetRxFiFo>:
 801011a:	b480      	push	{r7}
 801011c:	b083      	sub	sp, #12
 801011e:	af00      	add	r7, sp, #0
 8010120:	6078      	str	r0, [r7, #4]
 8010122:	460b      	mov	r3, r1
 8010124:	807b      	strh	r3, [r7, #2]
 8010126:	687b      	ldr	r3, [r7, #4]
 8010128:	681b      	ldr	r3, [r3, #0]
 801012a:	887a      	ldrh	r2, [r7, #2]
 801012c:	625a      	str	r2, [r3, #36]	@ 0x24
 801012e:	2300      	movs	r3, #0
 8010130:	4618      	mov	r0, r3
 8010132:	370c      	adds	r7, #12
 8010134:	46bd      	mov	sp, r7
 8010136:	f85d 7b04 	ldr.w	r7, [sp], #4
 801013a:	4770      	bx	lr

0801013c <HAL_PCDEx_LPM_Callback>:
 801013c:	b480      	push	{r7}
 801013e:	b083      	sub	sp, #12
 8010140:	af00      	add	r7, sp, #0
 8010142:	6078      	str	r0, [r7, #4]
 8010144:	460b      	mov	r3, r1
 8010146:	70fb      	strb	r3, [r7, #3]
 8010148:	bf00      	nop
 801014a:	370c      	adds	r7, #12
 801014c:	46bd      	mov	sp, r7
 801014e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010152:	4770      	bx	lr

08010154 <HAL_RCC_OscConfig>:
 8010154:	b580      	push	{r7, lr}
 8010156:	b086      	sub	sp, #24
 8010158:	af00      	add	r7, sp, #0
 801015a:	6078      	str	r0, [r7, #4]
 801015c:	687b      	ldr	r3, [r7, #4]
 801015e:	2b00      	cmp	r3, #0
 8010160:	d101      	bne.n	8010166 <HAL_RCC_OscConfig+0x12>
 8010162:	2301      	movs	r3, #1
 8010164:	e267      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010166:	687b      	ldr	r3, [r7, #4]
 8010168:	681b      	ldr	r3, [r3, #0]
 801016a:	f003 0301 	and.w	r3, r3, #1
 801016e:	2b00      	cmp	r3, #0
 8010170:	d075      	beq.n	801025e <HAL_RCC_OscConfig+0x10a>
 8010172:	4b88      	ldr	r3, [pc, #544]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010174:	689b      	ldr	r3, [r3, #8]
 8010176:	f003 030c 	and.w	r3, r3, #12
 801017a:	2b04      	cmp	r3, #4
 801017c:	d00c      	beq.n	8010198 <HAL_RCC_OscConfig+0x44>
 801017e:	4b85      	ldr	r3, [pc, #532]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010180:	689b      	ldr	r3, [r3, #8]
 8010182:	f003 030c 	and.w	r3, r3, #12
 8010186:	2b08      	cmp	r3, #8
 8010188:	d112      	bne.n	80101b0 <HAL_RCC_OscConfig+0x5c>
 801018a:	4b82      	ldr	r3, [pc, #520]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 801018c:	685b      	ldr	r3, [r3, #4]
 801018e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8010192:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8010196:	d10b      	bne.n	80101b0 <HAL_RCC_OscConfig+0x5c>
 8010198:	4b7e      	ldr	r3, [pc, #504]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 801019a:	681b      	ldr	r3, [r3, #0]
 801019c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80101a0:	2b00      	cmp	r3, #0
 80101a2:	d05b      	beq.n	801025c <HAL_RCC_OscConfig+0x108>
 80101a4:	687b      	ldr	r3, [r7, #4]
 80101a6:	685b      	ldr	r3, [r3, #4]
 80101a8:	2b00      	cmp	r3, #0
 80101aa:	d157      	bne.n	801025c <HAL_RCC_OscConfig+0x108>
 80101ac:	2301      	movs	r3, #1
 80101ae:	e242      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 80101b0:	687b      	ldr	r3, [r7, #4]
 80101b2:	685b      	ldr	r3, [r3, #4]
 80101b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80101b8:	d106      	bne.n	80101c8 <HAL_RCC_OscConfig+0x74>
 80101ba:	4b76      	ldr	r3, [pc, #472]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101bc:	681b      	ldr	r3, [r3, #0]
 80101be:	4a75      	ldr	r2, [pc, #468]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101c0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80101c4:	6013      	str	r3, [r2, #0]
 80101c6:	e01d      	b.n	8010204 <HAL_RCC_OscConfig+0xb0>
 80101c8:	687b      	ldr	r3, [r7, #4]
 80101ca:	685b      	ldr	r3, [r3, #4]
 80101cc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80101d0:	d10c      	bne.n	80101ec <HAL_RCC_OscConfig+0x98>
 80101d2:	4b70      	ldr	r3, [pc, #448]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101d4:	681b      	ldr	r3, [r3, #0]
 80101d6:	4a6f      	ldr	r2, [pc, #444]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101d8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80101dc:	6013      	str	r3, [r2, #0]
 80101de:	4b6d      	ldr	r3, [pc, #436]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101e0:	681b      	ldr	r3, [r3, #0]
 80101e2:	4a6c      	ldr	r2, [pc, #432]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101e4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80101e8:	6013      	str	r3, [r2, #0]
 80101ea:	e00b      	b.n	8010204 <HAL_RCC_OscConfig+0xb0>
 80101ec:	4b69      	ldr	r3, [pc, #420]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101ee:	681b      	ldr	r3, [r3, #0]
 80101f0:	4a68      	ldr	r2, [pc, #416]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101f2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80101f6:	6013      	str	r3, [r2, #0]
 80101f8:	4b66      	ldr	r3, [pc, #408]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101fa:	681b      	ldr	r3, [r3, #0]
 80101fc:	4a65      	ldr	r2, [pc, #404]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80101fe:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8010202:	6013      	str	r3, [r2, #0]
 8010204:	687b      	ldr	r3, [r7, #4]
 8010206:	685b      	ldr	r3, [r3, #4]
 8010208:	2b00      	cmp	r3, #0
 801020a:	d013      	beq.n	8010234 <HAL_RCC_OscConfig+0xe0>
 801020c:	f7fa ff98 	bl	800b140 <HAL_GetTick>
 8010210:	6138      	str	r0, [r7, #16]
 8010212:	e008      	b.n	8010226 <HAL_RCC_OscConfig+0xd2>
 8010214:	f7fa ff94 	bl	800b140 <HAL_GetTick>
 8010218:	4602      	mov	r2, r0
 801021a:	693b      	ldr	r3, [r7, #16]
 801021c:	1ad3      	subs	r3, r2, r3
 801021e:	2b64      	cmp	r3, #100	@ 0x64
 8010220:	d901      	bls.n	8010226 <HAL_RCC_OscConfig+0xd2>
 8010222:	2303      	movs	r3, #3
 8010224:	e207      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010226:	4b5b      	ldr	r3, [pc, #364]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010228:	681b      	ldr	r3, [r3, #0]
 801022a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 801022e:	2b00      	cmp	r3, #0
 8010230:	d0f0      	beq.n	8010214 <HAL_RCC_OscConfig+0xc0>
 8010232:	e014      	b.n	801025e <HAL_RCC_OscConfig+0x10a>
 8010234:	f7fa ff84 	bl	800b140 <HAL_GetTick>
 8010238:	6138      	str	r0, [r7, #16]
 801023a:	e008      	b.n	801024e <HAL_RCC_OscConfig+0xfa>
 801023c:	f7fa ff80 	bl	800b140 <HAL_GetTick>
 8010240:	4602      	mov	r2, r0
 8010242:	693b      	ldr	r3, [r7, #16]
 8010244:	1ad3      	subs	r3, r2, r3
 8010246:	2b64      	cmp	r3, #100	@ 0x64
 8010248:	d901      	bls.n	801024e <HAL_RCC_OscConfig+0xfa>
 801024a:	2303      	movs	r3, #3
 801024c:	e1f3      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 801024e:	4b51      	ldr	r3, [pc, #324]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010250:	681b      	ldr	r3, [r3, #0]
 8010252:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8010256:	2b00      	cmp	r3, #0
 8010258:	d1f0      	bne.n	801023c <HAL_RCC_OscConfig+0xe8>
 801025a:	e000      	b.n	801025e <HAL_RCC_OscConfig+0x10a>
 801025c:	bf00      	nop
 801025e:	687b      	ldr	r3, [r7, #4]
 8010260:	681b      	ldr	r3, [r3, #0]
 8010262:	f003 0302 	and.w	r3, r3, #2
 8010266:	2b00      	cmp	r3, #0
 8010268:	d063      	beq.n	8010332 <HAL_RCC_OscConfig+0x1de>
 801026a:	4b4a      	ldr	r3, [pc, #296]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 801026c:	689b      	ldr	r3, [r3, #8]
 801026e:	f003 030c 	and.w	r3, r3, #12
 8010272:	2b00      	cmp	r3, #0
 8010274:	d00b      	beq.n	801028e <HAL_RCC_OscConfig+0x13a>
 8010276:	4b47      	ldr	r3, [pc, #284]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010278:	689b      	ldr	r3, [r3, #8]
 801027a:	f003 030c 	and.w	r3, r3, #12
 801027e:	2b08      	cmp	r3, #8
 8010280:	d11c      	bne.n	80102bc <HAL_RCC_OscConfig+0x168>
 8010282:	4b44      	ldr	r3, [pc, #272]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010284:	685b      	ldr	r3, [r3, #4]
 8010286:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 801028a:	2b00      	cmp	r3, #0
 801028c:	d116      	bne.n	80102bc <HAL_RCC_OscConfig+0x168>
 801028e:	4b41      	ldr	r3, [pc, #260]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010290:	681b      	ldr	r3, [r3, #0]
 8010292:	f003 0302 	and.w	r3, r3, #2
 8010296:	2b00      	cmp	r3, #0
 8010298:	d005      	beq.n	80102a6 <HAL_RCC_OscConfig+0x152>
 801029a:	687b      	ldr	r3, [r7, #4]
 801029c:	68db      	ldr	r3, [r3, #12]
 801029e:	2b01      	cmp	r3, #1
 80102a0:	d001      	beq.n	80102a6 <HAL_RCC_OscConfig+0x152>
 80102a2:	2301      	movs	r3, #1
 80102a4:	e1c7      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 80102a6:	4b3b      	ldr	r3, [pc, #236]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80102a8:	681b      	ldr	r3, [r3, #0]
 80102aa:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80102ae:	687b      	ldr	r3, [r7, #4]
 80102b0:	691b      	ldr	r3, [r3, #16]
 80102b2:	00db      	lsls	r3, r3, #3
 80102b4:	4937      	ldr	r1, [pc, #220]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80102b6:	4313      	orrs	r3, r2
 80102b8:	600b      	str	r3, [r1, #0]
 80102ba:	e03a      	b.n	8010332 <HAL_RCC_OscConfig+0x1de>
 80102bc:	687b      	ldr	r3, [r7, #4]
 80102be:	68db      	ldr	r3, [r3, #12]
 80102c0:	2b00      	cmp	r3, #0
 80102c2:	d020      	beq.n	8010306 <HAL_RCC_OscConfig+0x1b2>
 80102c4:	4b34      	ldr	r3, [pc, #208]	@ (8010398 <HAL_RCC_OscConfig+0x244>)
 80102c6:	2201      	movs	r2, #1
 80102c8:	601a      	str	r2, [r3, #0]
 80102ca:	f7fa ff39 	bl	800b140 <HAL_GetTick>
 80102ce:	6138      	str	r0, [r7, #16]
 80102d0:	e008      	b.n	80102e4 <HAL_RCC_OscConfig+0x190>
 80102d2:	f7fa ff35 	bl	800b140 <HAL_GetTick>
 80102d6:	4602      	mov	r2, r0
 80102d8:	693b      	ldr	r3, [r7, #16]
 80102da:	1ad3      	subs	r3, r2, r3
 80102dc:	2b02      	cmp	r3, #2
 80102de:	d901      	bls.n	80102e4 <HAL_RCC_OscConfig+0x190>
 80102e0:	2303      	movs	r3, #3
 80102e2:	e1a8      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 80102e4:	4b2b      	ldr	r3, [pc, #172]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80102e6:	681b      	ldr	r3, [r3, #0]
 80102e8:	f003 0302 	and.w	r3, r3, #2
 80102ec:	2b00      	cmp	r3, #0
 80102ee:	d0f0      	beq.n	80102d2 <HAL_RCC_OscConfig+0x17e>
 80102f0:	4b28      	ldr	r3, [pc, #160]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 80102f2:	681b      	ldr	r3, [r3, #0]
 80102f4:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80102f8:	687b      	ldr	r3, [r7, #4]
 80102fa:	691b      	ldr	r3, [r3, #16]
 80102fc:	00db      	lsls	r3, r3, #3
 80102fe:	4925      	ldr	r1, [pc, #148]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010300:	4313      	orrs	r3, r2
 8010302:	600b      	str	r3, [r1, #0]
 8010304:	e015      	b.n	8010332 <HAL_RCC_OscConfig+0x1de>
 8010306:	4b24      	ldr	r3, [pc, #144]	@ (8010398 <HAL_RCC_OscConfig+0x244>)
 8010308:	2200      	movs	r2, #0
 801030a:	601a      	str	r2, [r3, #0]
 801030c:	f7fa ff18 	bl	800b140 <HAL_GetTick>
 8010310:	6138      	str	r0, [r7, #16]
 8010312:	e008      	b.n	8010326 <HAL_RCC_OscConfig+0x1d2>
 8010314:	f7fa ff14 	bl	800b140 <HAL_GetTick>
 8010318:	4602      	mov	r2, r0
 801031a:	693b      	ldr	r3, [r7, #16]
 801031c:	1ad3      	subs	r3, r2, r3
 801031e:	2b02      	cmp	r3, #2
 8010320:	d901      	bls.n	8010326 <HAL_RCC_OscConfig+0x1d2>
 8010322:	2303      	movs	r3, #3
 8010324:	e187      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010326:	4b1b      	ldr	r3, [pc, #108]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010328:	681b      	ldr	r3, [r3, #0]
 801032a:	f003 0302 	and.w	r3, r3, #2
 801032e:	2b00      	cmp	r3, #0
 8010330:	d1f0      	bne.n	8010314 <HAL_RCC_OscConfig+0x1c0>
 8010332:	687b      	ldr	r3, [r7, #4]
 8010334:	681b      	ldr	r3, [r3, #0]
 8010336:	f003 0308 	and.w	r3, r3, #8
 801033a:	2b00      	cmp	r3, #0
 801033c:	d036      	beq.n	80103ac <HAL_RCC_OscConfig+0x258>
 801033e:	687b      	ldr	r3, [r7, #4]
 8010340:	695b      	ldr	r3, [r3, #20]
 8010342:	2b00      	cmp	r3, #0
 8010344:	d016      	beq.n	8010374 <HAL_RCC_OscConfig+0x220>
 8010346:	4b15      	ldr	r3, [pc, #84]	@ (801039c <HAL_RCC_OscConfig+0x248>)
 8010348:	2201      	movs	r2, #1
 801034a:	601a      	str	r2, [r3, #0]
 801034c:	f7fa fef8 	bl	800b140 <HAL_GetTick>
 8010350:	6138      	str	r0, [r7, #16]
 8010352:	e008      	b.n	8010366 <HAL_RCC_OscConfig+0x212>
 8010354:	f7fa fef4 	bl	800b140 <HAL_GetTick>
 8010358:	4602      	mov	r2, r0
 801035a:	693b      	ldr	r3, [r7, #16]
 801035c:	1ad3      	subs	r3, r2, r3
 801035e:	2b02      	cmp	r3, #2
 8010360:	d901      	bls.n	8010366 <HAL_RCC_OscConfig+0x212>
 8010362:	2303      	movs	r3, #3
 8010364:	e167      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010366:	4b0b      	ldr	r3, [pc, #44]	@ (8010394 <HAL_RCC_OscConfig+0x240>)
 8010368:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 801036a:	f003 0302 	and.w	r3, r3, #2
 801036e:	2b00      	cmp	r3, #0
 8010370:	d0f0      	beq.n	8010354 <HAL_RCC_OscConfig+0x200>
 8010372:	e01b      	b.n	80103ac <HAL_RCC_OscConfig+0x258>
 8010374:	4b09      	ldr	r3, [pc, #36]	@ (801039c <HAL_RCC_OscConfig+0x248>)
 8010376:	2200      	movs	r2, #0
 8010378:	601a      	str	r2, [r3, #0]
 801037a:	f7fa fee1 	bl	800b140 <HAL_GetTick>
 801037e:	6138      	str	r0, [r7, #16]
 8010380:	e00e      	b.n	80103a0 <HAL_RCC_OscConfig+0x24c>
 8010382:	f7fa fedd 	bl	800b140 <HAL_GetTick>
 8010386:	4602      	mov	r2, r0
 8010388:	693b      	ldr	r3, [r7, #16]
 801038a:	1ad3      	subs	r3, r2, r3
 801038c:	2b02      	cmp	r3, #2
 801038e:	d907      	bls.n	80103a0 <HAL_RCC_OscConfig+0x24c>
 8010390:	2303      	movs	r3, #3
 8010392:	e150      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010394:	40023800 	.word	0x40023800
 8010398:	42470000 	.word	0x42470000
 801039c:	42470e80 	.word	0x42470e80
 80103a0:	4b88      	ldr	r3, [pc, #544]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80103a2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80103a4:	f003 0302 	and.w	r3, r3, #2
 80103a8:	2b00      	cmp	r3, #0
 80103aa:	d1ea      	bne.n	8010382 <HAL_RCC_OscConfig+0x22e>
 80103ac:	687b      	ldr	r3, [r7, #4]
 80103ae:	681b      	ldr	r3, [r3, #0]
 80103b0:	f003 0304 	and.w	r3, r3, #4
 80103b4:	2b00      	cmp	r3, #0
 80103b6:	f000 8097 	beq.w	80104e8 <HAL_RCC_OscConfig+0x394>
 80103ba:	2300      	movs	r3, #0
 80103bc:	75fb      	strb	r3, [r7, #23]
 80103be:	4b81      	ldr	r3, [pc, #516]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80103c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80103c2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80103c6:	2b00      	cmp	r3, #0
 80103c8:	d10f      	bne.n	80103ea <HAL_RCC_OscConfig+0x296>
 80103ca:	2300      	movs	r3, #0
 80103cc:	60bb      	str	r3, [r7, #8]
 80103ce:	4b7d      	ldr	r3, [pc, #500]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80103d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80103d2:	4a7c      	ldr	r2, [pc, #496]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80103d4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80103d8:	6413      	str	r3, [r2, #64]	@ 0x40
 80103da:	4b7a      	ldr	r3, [pc, #488]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80103dc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80103de:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80103e2:	60bb      	str	r3, [r7, #8]
 80103e4:	68bb      	ldr	r3, [r7, #8]
 80103e6:	2301      	movs	r3, #1
 80103e8:	75fb      	strb	r3, [r7, #23]
 80103ea:	4b77      	ldr	r3, [pc, #476]	@ (80105c8 <HAL_RCC_OscConfig+0x474>)
 80103ec:	681b      	ldr	r3, [r3, #0]
 80103ee:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80103f2:	2b00      	cmp	r3, #0
 80103f4:	d118      	bne.n	8010428 <HAL_RCC_OscConfig+0x2d4>
 80103f6:	4b74      	ldr	r3, [pc, #464]	@ (80105c8 <HAL_RCC_OscConfig+0x474>)
 80103f8:	681b      	ldr	r3, [r3, #0]
 80103fa:	4a73      	ldr	r2, [pc, #460]	@ (80105c8 <HAL_RCC_OscConfig+0x474>)
 80103fc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8010400:	6013      	str	r3, [r2, #0]
 8010402:	f7fa fe9d 	bl	800b140 <HAL_GetTick>
 8010406:	6138      	str	r0, [r7, #16]
 8010408:	e008      	b.n	801041c <HAL_RCC_OscConfig+0x2c8>
 801040a:	f7fa fe99 	bl	800b140 <HAL_GetTick>
 801040e:	4602      	mov	r2, r0
 8010410:	693b      	ldr	r3, [r7, #16]
 8010412:	1ad3      	subs	r3, r2, r3
 8010414:	2b02      	cmp	r3, #2
 8010416:	d901      	bls.n	801041c <HAL_RCC_OscConfig+0x2c8>
 8010418:	2303      	movs	r3, #3
 801041a:	e10c      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 801041c:	4b6a      	ldr	r3, [pc, #424]	@ (80105c8 <HAL_RCC_OscConfig+0x474>)
 801041e:	681b      	ldr	r3, [r3, #0]
 8010420:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010424:	2b00      	cmp	r3, #0
 8010426:	d0f0      	beq.n	801040a <HAL_RCC_OscConfig+0x2b6>
 8010428:	687b      	ldr	r3, [r7, #4]
 801042a:	689b      	ldr	r3, [r3, #8]
 801042c:	2b01      	cmp	r3, #1
 801042e:	d106      	bne.n	801043e <HAL_RCC_OscConfig+0x2ea>
 8010430:	4b64      	ldr	r3, [pc, #400]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010432:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010434:	4a63      	ldr	r2, [pc, #396]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010436:	f043 0301 	orr.w	r3, r3, #1
 801043a:	6713      	str	r3, [r2, #112]	@ 0x70
 801043c:	e01c      	b.n	8010478 <HAL_RCC_OscConfig+0x324>
 801043e:	687b      	ldr	r3, [r7, #4]
 8010440:	689b      	ldr	r3, [r3, #8]
 8010442:	2b05      	cmp	r3, #5
 8010444:	d10c      	bne.n	8010460 <HAL_RCC_OscConfig+0x30c>
 8010446:	4b5f      	ldr	r3, [pc, #380]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010448:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801044a:	4a5e      	ldr	r2, [pc, #376]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 801044c:	f043 0304 	orr.w	r3, r3, #4
 8010450:	6713      	str	r3, [r2, #112]	@ 0x70
 8010452:	4b5c      	ldr	r3, [pc, #368]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010454:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010456:	4a5b      	ldr	r2, [pc, #364]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010458:	f043 0301 	orr.w	r3, r3, #1
 801045c:	6713      	str	r3, [r2, #112]	@ 0x70
 801045e:	e00b      	b.n	8010478 <HAL_RCC_OscConfig+0x324>
 8010460:	4b58      	ldr	r3, [pc, #352]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010462:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010464:	4a57      	ldr	r2, [pc, #348]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010466:	f023 0301 	bic.w	r3, r3, #1
 801046a:	6713      	str	r3, [r2, #112]	@ 0x70
 801046c:	4b55      	ldr	r3, [pc, #340]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 801046e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010470:	4a54      	ldr	r2, [pc, #336]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010472:	f023 0304 	bic.w	r3, r3, #4
 8010476:	6713      	str	r3, [r2, #112]	@ 0x70
 8010478:	687b      	ldr	r3, [r7, #4]
 801047a:	689b      	ldr	r3, [r3, #8]
 801047c:	2b00      	cmp	r3, #0
 801047e:	d015      	beq.n	80104ac <HAL_RCC_OscConfig+0x358>
 8010480:	f7fa fe5e 	bl	800b140 <HAL_GetTick>
 8010484:	6138      	str	r0, [r7, #16]
 8010486:	e00a      	b.n	801049e <HAL_RCC_OscConfig+0x34a>
 8010488:	f7fa fe5a 	bl	800b140 <HAL_GetTick>
 801048c:	4602      	mov	r2, r0
 801048e:	693b      	ldr	r3, [r7, #16]
 8010490:	1ad3      	subs	r3, r2, r3
 8010492:	f241 3288 	movw	r2, #5000	@ 0x1388
 8010496:	4293      	cmp	r3, r2
 8010498:	d901      	bls.n	801049e <HAL_RCC_OscConfig+0x34a>
 801049a:	2303      	movs	r3, #3
 801049c:	e0cb      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 801049e:	4b49      	ldr	r3, [pc, #292]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80104a0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80104a2:	f003 0302 	and.w	r3, r3, #2
 80104a6:	2b00      	cmp	r3, #0
 80104a8:	d0ee      	beq.n	8010488 <HAL_RCC_OscConfig+0x334>
 80104aa:	e014      	b.n	80104d6 <HAL_RCC_OscConfig+0x382>
 80104ac:	f7fa fe48 	bl	800b140 <HAL_GetTick>
 80104b0:	6138      	str	r0, [r7, #16]
 80104b2:	e00a      	b.n	80104ca <HAL_RCC_OscConfig+0x376>
 80104b4:	f7fa fe44 	bl	800b140 <HAL_GetTick>
 80104b8:	4602      	mov	r2, r0
 80104ba:	693b      	ldr	r3, [r7, #16]
 80104bc:	1ad3      	subs	r3, r2, r3
 80104be:	f241 3288 	movw	r2, #5000	@ 0x1388
 80104c2:	4293      	cmp	r3, r2
 80104c4:	d901      	bls.n	80104ca <HAL_RCC_OscConfig+0x376>
 80104c6:	2303      	movs	r3, #3
 80104c8:	e0b5      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 80104ca:	4b3e      	ldr	r3, [pc, #248]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80104cc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80104ce:	f003 0302 	and.w	r3, r3, #2
 80104d2:	2b00      	cmp	r3, #0
 80104d4:	d1ee      	bne.n	80104b4 <HAL_RCC_OscConfig+0x360>
 80104d6:	7dfb      	ldrb	r3, [r7, #23]
 80104d8:	2b01      	cmp	r3, #1
 80104da:	d105      	bne.n	80104e8 <HAL_RCC_OscConfig+0x394>
 80104dc:	4b39      	ldr	r3, [pc, #228]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80104de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80104e0:	4a38      	ldr	r2, [pc, #224]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80104e2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80104e6:	6413      	str	r3, [r2, #64]	@ 0x40
 80104e8:	687b      	ldr	r3, [r7, #4]
 80104ea:	699b      	ldr	r3, [r3, #24]
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	f000 80a1 	beq.w	8010634 <HAL_RCC_OscConfig+0x4e0>
 80104f2:	4b34      	ldr	r3, [pc, #208]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80104f4:	689b      	ldr	r3, [r3, #8]
 80104f6:	f003 030c 	and.w	r3, r3, #12
 80104fa:	2b08      	cmp	r3, #8
 80104fc:	d05c      	beq.n	80105b8 <HAL_RCC_OscConfig+0x464>
 80104fe:	687b      	ldr	r3, [r7, #4]
 8010500:	699b      	ldr	r3, [r3, #24]
 8010502:	2b02      	cmp	r3, #2
 8010504:	d141      	bne.n	801058a <HAL_RCC_OscConfig+0x436>
 8010506:	4b31      	ldr	r3, [pc, #196]	@ (80105cc <HAL_RCC_OscConfig+0x478>)
 8010508:	2200      	movs	r2, #0
 801050a:	601a      	str	r2, [r3, #0]
 801050c:	f7fa fe18 	bl	800b140 <HAL_GetTick>
 8010510:	6138      	str	r0, [r7, #16]
 8010512:	e008      	b.n	8010526 <HAL_RCC_OscConfig+0x3d2>
 8010514:	f7fa fe14 	bl	800b140 <HAL_GetTick>
 8010518:	4602      	mov	r2, r0
 801051a:	693b      	ldr	r3, [r7, #16]
 801051c:	1ad3      	subs	r3, r2, r3
 801051e:	2b02      	cmp	r3, #2
 8010520:	d901      	bls.n	8010526 <HAL_RCC_OscConfig+0x3d2>
 8010522:	2303      	movs	r3, #3
 8010524:	e087      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010526:	4b27      	ldr	r3, [pc, #156]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010528:	681b      	ldr	r3, [r3, #0]
 801052a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 801052e:	2b00      	cmp	r3, #0
 8010530:	d1f0      	bne.n	8010514 <HAL_RCC_OscConfig+0x3c0>
 8010532:	687b      	ldr	r3, [r7, #4]
 8010534:	69da      	ldr	r2, [r3, #28]
 8010536:	687b      	ldr	r3, [r7, #4]
 8010538:	6a1b      	ldr	r3, [r3, #32]
 801053a:	431a      	orrs	r2, r3
 801053c:	687b      	ldr	r3, [r7, #4]
 801053e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010540:	019b      	lsls	r3, r3, #6
 8010542:	431a      	orrs	r2, r3
 8010544:	687b      	ldr	r3, [r7, #4]
 8010546:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010548:	085b      	lsrs	r3, r3, #1
 801054a:	3b01      	subs	r3, #1
 801054c:	041b      	lsls	r3, r3, #16
 801054e:	431a      	orrs	r2, r3
 8010550:	687b      	ldr	r3, [r7, #4]
 8010552:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010554:	061b      	lsls	r3, r3, #24
 8010556:	491b      	ldr	r1, [pc, #108]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 8010558:	4313      	orrs	r3, r2
 801055a:	604b      	str	r3, [r1, #4]
 801055c:	4b1b      	ldr	r3, [pc, #108]	@ (80105cc <HAL_RCC_OscConfig+0x478>)
 801055e:	2201      	movs	r2, #1
 8010560:	601a      	str	r2, [r3, #0]
 8010562:	f7fa fded 	bl	800b140 <HAL_GetTick>
 8010566:	6138      	str	r0, [r7, #16]
 8010568:	e008      	b.n	801057c <HAL_RCC_OscConfig+0x428>
 801056a:	f7fa fde9 	bl	800b140 <HAL_GetTick>
 801056e:	4602      	mov	r2, r0
 8010570:	693b      	ldr	r3, [r7, #16]
 8010572:	1ad3      	subs	r3, r2, r3
 8010574:	2b02      	cmp	r3, #2
 8010576:	d901      	bls.n	801057c <HAL_RCC_OscConfig+0x428>
 8010578:	2303      	movs	r3, #3
 801057a:	e05c      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 801057c:	4b11      	ldr	r3, [pc, #68]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 801057e:	681b      	ldr	r3, [r3, #0]
 8010580:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8010584:	2b00      	cmp	r3, #0
 8010586:	d0f0      	beq.n	801056a <HAL_RCC_OscConfig+0x416>
 8010588:	e054      	b.n	8010634 <HAL_RCC_OscConfig+0x4e0>
 801058a:	4b10      	ldr	r3, [pc, #64]	@ (80105cc <HAL_RCC_OscConfig+0x478>)
 801058c:	2200      	movs	r2, #0
 801058e:	601a      	str	r2, [r3, #0]
 8010590:	f7fa fdd6 	bl	800b140 <HAL_GetTick>
 8010594:	6138      	str	r0, [r7, #16]
 8010596:	e008      	b.n	80105aa <HAL_RCC_OscConfig+0x456>
 8010598:	f7fa fdd2 	bl	800b140 <HAL_GetTick>
 801059c:	4602      	mov	r2, r0
 801059e:	693b      	ldr	r3, [r7, #16]
 80105a0:	1ad3      	subs	r3, r2, r3
 80105a2:	2b02      	cmp	r3, #2
 80105a4:	d901      	bls.n	80105aa <HAL_RCC_OscConfig+0x456>
 80105a6:	2303      	movs	r3, #3
 80105a8:	e045      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 80105aa:	4b06      	ldr	r3, [pc, #24]	@ (80105c4 <HAL_RCC_OscConfig+0x470>)
 80105ac:	681b      	ldr	r3, [r3, #0]
 80105ae:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80105b2:	2b00      	cmp	r3, #0
 80105b4:	d1f0      	bne.n	8010598 <HAL_RCC_OscConfig+0x444>
 80105b6:	e03d      	b.n	8010634 <HAL_RCC_OscConfig+0x4e0>
 80105b8:	687b      	ldr	r3, [r7, #4]
 80105ba:	699b      	ldr	r3, [r3, #24]
 80105bc:	2b01      	cmp	r3, #1
 80105be:	d107      	bne.n	80105d0 <HAL_RCC_OscConfig+0x47c>
 80105c0:	2301      	movs	r3, #1
 80105c2:	e038      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 80105c4:	40023800 	.word	0x40023800
 80105c8:	40007000 	.word	0x40007000
 80105cc:	42470060 	.word	0x42470060
 80105d0:	4b1b      	ldr	r3, [pc, #108]	@ (8010640 <HAL_RCC_OscConfig+0x4ec>)
 80105d2:	685b      	ldr	r3, [r3, #4]
 80105d4:	60fb      	str	r3, [r7, #12]
 80105d6:	687b      	ldr	r3, [r7, #4]
 80105d8:	699b      	ldr	r3, [r3, #24]
 80105da:	2b01      	cmp	r3, #1
 80105dc:	d028      	beq.n	8010630 <HAL_RCC_OscConfig+0x4dc>
 80105de:	68fb      	ldr	r3, [r7, #12]
 80105e0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80105e4:	687b      	ldr	r3, [r7, #4]
 80105e6:	69db      	ldr	r3, [r3, #28]
 80105e8:	429a      	cmp	r2, r3
 80105ea:	d121      	bne.n	8010630 <HAL_RCC_OscConfig+0x4dc>
 80105ec:	68fb      	ldr	r3, [r7, #12]
 80105ee:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80105f2:	687b      	ldr	r3, [r7, #4]
 80105f4:	6a1b      	ldr	r3, [r3, #32]
 80105f6:	429a      	cmp	r2, r3
 80105f8:	d11a      	bne.n	8010630 <HAL_RCC_OscConfig+0x4dc>
 80105fa:	68fa      	ldr	r2, [r7, #12]
 80105fc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8010600:	4013      	ands	r3, r2
 8010602:	687a      	ldr	r2, [r7, #4]
 8010604:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8010606:	0192      	lsls	r2, r2, #6
 8010608:	4293      	cmp	r3, r2
 801060a:	d111      	bne.n	8010630 <HAL_RCC_OscConfig+0x4dc>
 801060c:	68fb      	ldr	r3, [r7, #12]
 801060e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8010612:	687b      	ldr	r3, [r7, #4]
 8010614:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010616:	085b      	lsrs	r3, r3, #1
 8010618:	3b01      	subs	r3, #1
 801061a:	041b      	lsls	r3, r3, #16
 801061c:	429a      	cmp	r2, r3
 801061e:	d107      	bne.n	8010630 <HAL_RCC_OscConfig+0x4dc>
 8010620:	68fb      	ldr	r3, [r7, #12]
 8010622:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8010626:	687b      	ldr	r3, [r7, #4]
 8010628:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801062a:	061b      	lsls	r3, r3, #24
 801062c:	429a      	cmp	r2, r3
 801062e:	d001      	beq.n	8010634 <HAL_RCC_OscConfig+0x4e0>
 8010630:	2301      	movs	r3, #1
 8010632:	e000      	b.n	8010636 <HAL_RCC_OscConfig+0x4e2>
 8010634:	2300      	movs	r3, #0
 8010636:	4618      	mov	r0, r3
 8010638:	3718      	adds	r7, #24
 801063a:	46bd      	mov	sp, r7
 801063c:	bd80      	pop	{r7, pc}
 801063e:	bf00      	nop
 8010640:	40023800 	.word	0x40023800

08010644 <HAL_RCC_ClockConfig>:
 8010644:	b580      	push	{r7, lr}
 8010646:	b084      	sub	sp, #16
 8010648:	af00      	add	r7, sp, #0
 801064a:	6078      	str	r0, [r7, #4]
 801064c:	6039      	str	r1, [r7, #0]
 801064e:	687b      	ldr	r3, [r7, #4]
 8010650:	2b00      	cmp	r3, #0
 8010652:	d101      	bne.n	8010658 <HAL_RCC_ClockConfig+0x14>
 8010654:	2301      	movs	r3, #1
 8010656:	e0cc      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 8010658:	4b68      	ldr	r3, [pc, #416]	@ (80107fc <HAL_RCC_ClockConfig+0x1b8>)
 801065a:	681b      	ldr	r3, [r3, #0]
 801065c:	f003 0307 	and.w	r3, r3, #7
 8010660:	683a      	ldr	r2, [r7, #0]
 8010662:	429a      	cmp	r2, r3
 8010664:	d90c      	bls.n	8010680 <HAL_RCC_ClockConfig+0x3c>
 8010666:	4b65      	ldr	r3, [pc, #404]	@ (80107fc <HAL_RCC_ClockConfig+0x1b8>)
 8010668:	683a      	ldr	r2, [r7, #0]
 801066a:	b2d2      	uxtb	r2, r2
 801066c:	701a      	strb	r2, [r3, #0]
 801066e:	4b63      	ldr	r3, [pc, #396]	@ (80107fc <HAL_RCC_ClockConfig+0x1b8>)
 8010670:	681b      	ldr	r3, [r3, #0]
 8010672:	f003 0307 	and.w	r3, r3, #7
 8010676:	683a      	ldr	r2, [r7, #0]
 8010678:	429a      	cmp	r2, r3
 801067a:	d001      	beq.n	8010680 <HAL_RCC_ClockConfig+0x3c>
 801067c:	2301      	movs	r3, #1
 801067e:	e0b8      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 8010680:	687b      	ldr	r3, [r7, #4]
 8010682:	681b      	ldr	r3, [r3, #0]
 8010684:	f003 0302 	and.w	r3, r3, #2
 8010688:	2b00      	cmp	r3, #0
 801068a:	d020      	beq.n	80106ce <HAL_RCC_ClockConfig+0x8a>
 801068c:	687b      	ldr	r3, [r7, #4]
 801068e:	681b      	ldr	r3, [r3, #0]
 8010690:	f003 0304 	and.w	r3, r3, #4
 8010694:	2b00      	cmp	r3, #0
 8010696:	d005      	beq.n	80106a4 <HAL_RCC_ClockConfig+0x60>
 8010698:	4b59      	ldr	r3, [pc, #356]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 801069a:	689b      	ldr	r3, [r3, #8]
 801069c:	4a58      	ldr	r2, [pc, #352]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 801069e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80106a2:	6093      	str	r3, [r2, #8]
 80106a4:	687b      	ldr	r3, [r7, #4]
 80106a6:	681b      	ldr	r3, [r3, #0]
 80106a8:	f003 0308 	and.w	r3, r3, #8
 80106ac:	2b00      	cmp	r3, #0
 80106ae:	d005      	beq.n	80106bc <HAL_RCC_ClockConfig+0x78>
 80106b0:	4b53      	ldr	r3, [pc, #332]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80106b2:	689b      	ldr	r3, [r3, #8]
 80106b4:	4a52      	ldr	r2, [pc, #328]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80106b6:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80106ba:	6093      	str	r3, [r2, #8]
 80106bc:	4b50      	ldr	r3, [pc, #320]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80106be:	689b      	ldr	r3, [r3, #8]
 80106c0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80106c4:	687b      	ldr	r3, [r7, #4]
 80106c6:	689b      	ldr	r3, [r3, #8]
 80106c8:	494d      	ldr	r1, [pc, #308]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80106ca:	4313      	orrs	r3, r2
 80106cc:	608b      	str	r3, [r1, #8]
 80106ce:	687b      	ldr	r3, [r7, #4]
 80106d0:	681b      	ldr	r3, [r3, #0]
 80106d2:	f003 0301 	and.w	r3, r3, #1
 80106d6:	2b00      	cmp	r3, #0
 80106d8:	d044      	beq.n	8010764 <HAL_RCC_ClockConfig+0x120>
 80106da:	687b      	ldr	r3, [r7, #4]
 80106dc:	685b      	ldr	r3, [r3, #4]
 80106de:	2b01      	cmp	r3, #1
 80106e0:	d107      	bne.n	80106f2 <HAL_RCC_ClockConfig+0xae>
 80106e2:	4b47      	ldr	r3, [pc, #284]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80106e4:	681b      	ldr	r3, [r3, #0]
 80106e6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80106ea:	2b00      	cmp	r3, #0
 80106ec:	d119      	bne.n	8010722 <HAL_RCC_ClockConfig+0xde>
 80106ee:	2301      	movs	r3, #1
 80106f0:	e07f      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 80106f2:	687b      	ldr	r3, [r7, #4]
 80106f4:	685b      	ldr	r3, [r3, #4]
 80106f6:	2b02      	cmp	r3, #2
 80106f8:	d003      	beq.n	8010702 <HAL_RCC_ClockConfig+0xbe>
 80106fa:	687b      	ldr	r3, [r7, #4]
 80106fc:	685b      	ldr	r3, [r3, #4]
 80106fe:	2b03      	cmp	r3, #3
 8010700:	d107      	bne.n	8010712 <HAL_RCC_ClockConfig+0xce>
 8010702:	4b3f      	ldr	r3, [pc, #252]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 8010704:	681b      	ldr	r3, [r3, #0]
 8010706:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 801070a:	2b00      	cmp	r3, #0
 801070c:	d109      	bne.n	8010722 <HAL_RCC_ClockConfig+0xde>
 801070e:	2301      	movs	r3, #1
 8010710:	e06f      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 8010712:	4b3b      	ldr	r3, [pc, #236]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 8010714:	681b      	ldr	r3, [r3, #0]
 8010716:	f003 0302 	and.w	r3, r3, #2
 801071a:	2b00      	cmp	r3, #0
 801071c:	d101      	bne.n	8010722 <HAL_RCC_ClockConfig+0xde>
 801071e:	2301      	movs	r3, #1
 8010720:	e067      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 8010722:	4b37      	ldr	r3, [pc, #220]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 8010724:	689b      	ldr	r3, [r3, #8]
 8010726:	f023 0203 	bic.w	r2, r3, #3
 801072a:	687b      	ldr	r3, [r7, #4]
 801072c:	685b      	ldr	r3, [r3, #4]
 801072e:	4934      	ldr	r1, [pc, #208]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 8010730:	4313      	orrs	r3, r2
 8010732:	608b      	str	r3, [r1, #8]
 8010734:	f7fa fd04 	bl	800b140 <HAL_GetTick>
 8010738:	60f8      	str	r0, [r7, #12]
 801073a:	e00a      	b.n	8010752 <HAL_RCC_ClockConfig+0x10e>
 801073c:	f7fa fd00 	bl	800b140 <HAL_GetTick>
 8010740:	4602      	mov	r2, r0
 8010742:	68fb      	ldr	r3, [r7, #12]
 8010744:	1ad3      	subs	r3, r2, r3
 8010746:	f241 3288 	movw	r2, #5000	@ 0x1388
 801074a:	4293      	cmp	r3, r2
 801074c:	d901      	bls.n	8010752 <HAL_RCC_ClockConfig+0x10e>
 801074e:	2303      	movs	r3, #3
 8010750:	e04f      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 8010752:	4b2b      	ldr	r3, [pc, #172]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 8010754:	689b      	ldr	r3, [r3, #8]
 8010756:	f003 020c 	and.w	r2, r3, #12
 801075a:	687b      	ldr	r3, [r7, #4]
 801075c:	685b      	ldr	r3, [r3, #4]
 801075e:	009b      	lsls	r3, r3, #2
 8010760:	429a      	cmp	r2, r3
 8010762:	d1eb      	bne.n	801073c <HAL_RCC_ClockConfig+0xf8>
 8010764:	4b25      	ldr	r3, [pc, #148]	@ (80107fc <HAL_RCC_ClockConfig+0x1b8>)
 8010766:	681b      	ldr	r3, [r3, #0]
 8010768:	f003 0307 	and.w	r3, r3, #7
 801076c:	683a      	ldr	r2, [r7, #0]
 801076e:	429a      	cmp	r2, r3
 8010770:	d20c      	bcs.n	801078c <HAL_RCC_ClockConfig+0x148>
 8010772:	4b22      	ldr	r3, [pc, #136]	@ (80107fc <HAL_RCC_ClockConfig+0x1b8>)
 8010774:	683a      	ldr	r2, [r7, #0]
 8010776:	b2d2      	uxtb	r2, r2
 8010778:	701a      	strb	r2, [r3, #0]
 801077a:	4b20      	ldr	r3, [pc, #128]	@ (80107fc <HAL_RCC_ClockConfig+0x1b8>)
 801077c:	681b      	ldr	r3, [r3, #0]
 801077e:	f003 0307 	and.w	r3, r3, #7
 8010782:	683a      	ldr	r2, [r7, #0]
 8010784:	429a      	cmp	r2, r3
 8010786:	d001      	beq.n	801078c <HAL_RCC_ClockConfig+0x148>
 8010788:	2301      	movs	r3, #1
 801078a:	e032      	b.n	80107f2 <HAL_RCC_ClockConfig+0x1ae>
 801078c:	687b      	ldr	r3, [r7, #4]
 801078e:	681b      	ldr	r3, [r3, #0]
 8010790:	f003 0304 	and.w	r3, r3, #4
 8010794:	2b00      	cmp	r3, #0
 8010796:	d008      	beq.n	80107aa <HAL_RCC_ClockConfig+0x166>
 8010798:	4b19      	ldr	r3, [pc, #100]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 801079a:	689b      	ldr	r3, [r3, #8]
 801079c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80107a0:	687b      	ldr	r3, [r7, #4]
 80107a2:	68db      	ldr	r3, [r3, #12]
 80107a4:	4916      	ldr	r1, [pc, #88]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80107a6:	4313      	orrs	r3, r2
 80107a8:	608b      	str	r3, [r1, #8]
 80107aa:	687b      	ldr	r3, [r7, #4]
 80107ac:	681b      	ldr	r3, [r3, #0]
 80107ae:	f003 0308 	and.w	r3, r3, #8
 80107b2:	2b00      	cmp	r3, #0
 80107b4:	d009      	beq.n	80107ca <HAL_RCC_ClockConfig+0x186>
 80107b6:	4b12      	ldr	r3, [pc, #72]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80107b8:	689b      	ldr	r3, [r3, #8]
 80107ba:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80107be:	687b      	ldr	r3, [r7, #4]
 80107c0:	691b      	ldr	r3, [r3, #16]
 80107c2:	00db      	lsls	r3, r3, #3
 80107c4:	490e      	ldr	r1, [pc, #56]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80107c6:	4313      	orrs	r3, r2
 80107c8:	608b      	str	r3, [r1, #8]
 80107ca:	f000 f821 	bl	8010810 <HAL_RCC_GetSysClockFreq>
 80107ce:	4602      	mov	r2, r0
 80107d0:	4b0b      	ldr	r3, [pc, #44]	@ (8010800 <HAL_RCC_ClockConfig+0x1bc>)
 80107d2:	689b      	ldr	r3, [r3, #8]
 80107d4:	091b      	lsrs	r3, r3, #4
 80107d6:	f003 030f 	and.w	r3, r3, #15
 80107da:	490a      	ldr	r1, [pc, #40]	@ (8010804 <HAL_RCC_ClockConfig+0x1c0>)
 80107dc:	5ccb      	ldrb	r3, [r1, r3]
 80107de:	fa22 f303 	lsr.w	r3, r2, r3
 80107e2:	4a09      	ldr	r2, [pc, #36]	@ (8010808 <HAL_RCC_ClockConfig+0x1c4>)
 80107e4:	6013      	str	r3, [r2, #0]
 80107e6:	4b09      	ldr	r3, [pc, #36]	@ (801080c <HAL_RCC_ClockConfig+0x1c8>)
 80107e8:	681b      	ldr	r3, [r3, #0]
 80107ea:	4618      	mov	r0, r3
 80107ec:	f7f3 f96e 	bl	8003acc <HAL_InitTick>
 80107f0:	2300      	movs	r3, #0
 80107f2:	4618      	mov	r0, r3
 80107f4:	3710      	adds	r7, #16
 80107f6:	46bd      	mov	sp, r7
 80107f8:	bd80      	pop	{r7, pc}
 80107fa:	bf00      	nop
 80107fc:	40023c00 	.word	0x40023c00
 8010800:	40023800 	.word	0x40023800
 8010804:	08021414 	.word	0x08021414
 8010808:	20000004 	.word	0x20000004
 801080c:	20000018 	.word	0x20000018

08010810 <HAL_RCC_GetSysClockFreq>:
 8010810:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8010814:	b090      	sub	sp, #64	@ 0x40
 8010816:	af00      	add	r7, sp, #0
 8010818:	2300      	movs	r3, #0
 801081a:	637b      	str	r3, [r7, #52]	@ 0x34
 801081c:	2300      	movs	r3, #0
 801081e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010820:	2300      	movs	r3, #0
 8010822:	633b      	str	r3, [r7, #48]	@ 0x30
 8010824:	2300      	movs	r3, #0
 8010826:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010828:	4b59      	ldr	r3, [pc, #356]	@ (8010990 <HAL_RCC_GetSysClockFreq+0x180>)
 801082a:	689b      	ldr	r3, [r3, #8]
 801082c:	f003 030c 	and.w	r3, r3, #12
 8010830:	2b08      	cmp	r3, #8
 8010832:	d00d      	beq.n	8010850 <HAL_RCC_GetSysClockFreq+0x40>
 8010834:	2b08      	cmp	r3, #8
 8010836:	f200 80a1 	bhi.w	801097c <HAL_RCC_GetSysClockFreq+0x16c>
 801083a:	2b00      	cmp	r3, #0
 801083c:	d002      	beq.n	8010844 <HAL_RCC_GetSysClockFreq+0x34>
 801083e:	2b04      	cmp	r3, #4
 8010840:	d003      	beq.n	801084a <HAL_RCC_GetSysClockFreq+0x3a>
 8010842:	e09b      	b.n	801097c <HAL_RCC_GetSysClockFreq+0x16c>
 8010844:	4b53      	ldr	r3, [pc, #332]	@ (8010994 <HAL_RCC_GetSysClockFreq+0x184>)
 8010846:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010848:	e09b      	b.n	8010982 <HAL_RCC_GetSysClockFreq+0x172>
 801084a:	4b53      	ldr	r3, [pc, #332]	@ (8010998 <HAL_RCC_GetSysClockFreq+0x188>)
 801084c:	63bb      	str	r3, [r7, #56]	@ 0x38
 801084e:	e098      	b.n	8010982 <HAL_RCC_GetSysClockFreq+0x172>
 8010850:	4b4f      	ldr	r3, [pc, #316]	@ (8010990 <HAL_RCC_GetSysClockFreq+0x180>)
 8010852:	685b      	ldr	r3, [r3, #4]
 8010854:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8010858:	637b      	str	r3, [r7, #52]	@ 0x34
 801085a:	4b4d      	ldr	r3, [pc, #308]	@ (8010990 <HAL_RCC_GetSysClockFreq+0x180>)
 801085c:	685b      	ldr	r3, [r3, #4]
 801085e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8010862:	2b00      	cmp	r3, #0
 8010864:	d028      	beq.n	80108b8 <HAL_RCC_GetSysClockFreq+0xa8>
 8010866:	4b4a      	ldr	r3, [pc, #296]	@ (8010990 <HAL_RCC_GetSysClockFreq+0x180>)
 8010868:	685b      	ldr	r3, [r3, #4]
 801086a:	099b      	lsrs	r3, r3, #6
 801086c:	2200      	movs	r2, #0
 801086e:	623b      	str	r3, [r7, #32]
 8010870:	627a      	str	r2, [r7, #36]	@ 0x24
 8010872:	6a3b      	ldr	r3, [r7, #32]
 8010874:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8010878:	2100      	movs	r1, #0
 801087a:	4b47      	ldr	r3, [pc, #284]	@ (8010998 <HAL_RCC_GetSysClockFreq+0x188>)
 801087c:	fb03 f201 	mul.w	r2, r3, r1
 8010880:	2300      	movs	r3, #0
 8010882:	fb00 f303 	mul.w	r3, r0, r3
 8010886:	4413      	add	r3, r2
 8010888:	4a43      	ldr	r2, [pc, #268]	@ (8010998 <HAL_RCC_GetSysClockFreq+0x188>)
 801088a:	fba0 1202 	umull	r1, r2, r0, r2
 801088e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8010890:	460a      	mov	r2, r1
 8010892:	62ba      	str	r2, [r7, #40]	@ 0x28
 8010894:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8010896:	4413      	add	r3, r2
 8010898:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801089a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801089c:	2200      	movs	r2, #0
 801089e:	61bb      	str	r3, [r7, #24]
 80108a0:	61fa      	str	r2, [r7, #28]
 80108a2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80108a6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80108aa:	f7f0 f9ed 	bl	8000c88 <__aeabi_uldivmod>
 80108ae:	4602      	mov	r2, r0
 80108b0:	460b      	mov	r3, r1
 80108b2:	4613      	mov	r3, r2
 80108b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80108b6:	e053      	b.n	8010960 <HAL_RCC_GetSysClockFreq+0x150>
 80108b8:	4b35      	ldr	r3, [pc, #212]	@ (8010990 <HAL_RCC_GetSysClockFreq+0x180>)
 80108ba:	685b      	ldr	r3, [r3, #4]
 80108bc:	099b      	lsrs	r3, r3, #6
 80108be:	2200      	movs	r2, #0
 80108c0:	613b      	str	r3, [r7, #16]
 80108c2:	617a      	str	r2, [r7, #20]
 80108c4:	693b      	ldr	r3, [r7, #16]
 80108c6:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80108ca:	f04f 0b00 	mov.w	fp, #0
 80108ce:	4652      	mov	r2, sl
 80108d0:	465b      	mov	r3, fp
 80108d2:	f04f 0000 	mov.w	r0, #0
 80108d6:	f04f 0100 	mov.w	r1, #0
 80108da:	0159      	lsls	r1, r3, #5
 80108dc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80108e0:	0150      	lsls	r0, r2, #5
 80108e2:	4602      	mov	r2, r0
 80108e4:	460b      	mov	r3, r1
 80108e6:	ebb2 080a 	subs.w	r8, r2, sl
 80108ea:	eb63 090b 	sbc.w	r9, r3, fp
 80108ee:	f04f 0200 	mov.w	r2, #0
 80108f2:	f04f 0300 	mov.w	r3, #0
 80108f6:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80108fa:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80108fe:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8010902:	ebb2 0408 	subs.w	r4, r2, r8
 8010906:	eb63 0509 	sbc.w	r5, r3, r9
 801090a:	f04f 0200 	mov.w	r2, #0
 801090e:	f04f 0300 	mov.w	r3, #0
 8010912:	00eb      	lsls	r3, r5, #3
 8010914:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8010918:	00e2      	lsls	r2, r4, #3
 801091a:	4614      	mov	r4, r2
 801091c:	461d      	mov	r5, r3
 801091e:	eb14 030a 	adds.w	r3, r4, sl
 8010922:	603b      	str	r3, [r7, #0]
 8010924:	eb45 030b 	adc.w	r3, r5, fp
 8010928:	607b      	str	r3, [r7, #4]
 801092a:	f04f 0200 	mov.w	r2, #0
 801092e:	f04f 0300 	mov.w	r3, #0
 8010932:	e9d7 4500 	ldrd	r4, r5, [r7]
 8010936:	4629      	mov	r1, r5
 8010938:	028b      	lsls	r3, r1, #10
 801093a:	4621      	mov	r1, r4
 801093c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8010940:	4621      	mov	r1, r4
 8010942:	028a      	lsls	r2, r1, #10
 8010944:	4610      	mov	r0, r2
 8010946:	4619      	mov	r1, r3
 8010948:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801094a:	2200      	movs	r2, #0
 801094c:	60bb      	str	r3, [r7, #8]
 801094e:	60fa      	str	r2, [r7, #12]
 8010950:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8010954:	f7f0 f998 	bl	8000c88 <__aeabi_uldivmod>
 8010958:	4602      	mov	r2, r0
 801095a:	460b      	mov	r3, r1
 801095c:	4613      	mov	r3, r2
 801095e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010960:	4b0b      	ldr	r3, [pc, #44]	@ (8010990 <HAL_RCC_GetSysClockFreq+0x180>)
 8010962:	685b      	ldr	r3, [r3, #4]
 8010964:	0c1b      	lsrs	r3, r3, #16
 8010966:	f003 0303 	and.w	r3, r3, #3
 801096a:	3301      	adds	r3, #1
 801096c:	005b      	lsls	r3, r3, #1
 801096e:	633b      	str	r3, [r7, #48]	@ 0x30
 8010970:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8010972:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8010974:	fbb2 f3f3 	udiv	r3, r2, r3
 8010978:	63bb      	str	r3, [r7, #56]	@ 0x38
 801097a:	e002      	b.n	8010982 <HAL_RCC_GetSysClockFreq+0x172>
 801097c:	4b05      	ldr	r3, [pc, #20]	@ (8010994 <HAL_RCC_GetSysClockFreq+0x184>)
 801097e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010980:	bf00      	nop
 8010982:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010984:	4618      	mov	r0, r3
 8010986:	3740      	adds	r7, #64	@ 0x40
 8010988:	46bd      	mov	sp, r7
 801098a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 801098e:	bf00      	nop
 8010990:	40023800 	.word	0x40023800
 8010994:	00f42400 	.word	0x00f42400
 8010998:	00b71b00 	.word	0x00b71b00

0801099c <HAL_RCC_GetHCLKFreq>:
 801099c:	b480      	push	{r7}
 801099e:	af00      	add	r7, sp, #0
 80109a0:	4b03      	ldr	r3, [pc, #12]	@ (80109b0 <HAL_RCC_GetHCLKFreq+0x14>)
 80109a2:	681b      	ldr	r3, [r3, #0]
 80109a4:	4618      	mov	r0, r3
 80109a6:	46bd      	mov	sp, r7
 80109a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80109ac:	4770      	bx	lr
 80109ae:	bf00      	nop
 80109b0:	20000004 	.word	0x20000004

080109b4 <HAL_RCC_GetPCLK1Freq>:
 80109b4:	b580      	push	{r7, lr}
 80109b6:	af00      	add	r7, sp, #0
 80109b8:	f7ff fff0 	bl	801099c <HAL_RCC_GetHCLKFreq>
 80109bc:	4602      	mov	r2, r0
 80109be:	4b05      	ldr	r3, [pc, #20]	@ (80109d4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80109c0:	689b      	ldr	r3, [r3, #8]
 80109c2:	0a9b      	lsrs	r3, r3, #10
 80109c4:	f003 0307 	and.w	r3, r3, #7
 80109c8:	4903      	ldr	r1, [pc, #12]	@ (80109d8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80109ca:	5ccb      	ldrb	r3, [r1, r3]
 80109cc:	fa22 f303 	lsr.w	r3, r2, r3
 80109d0:	4618      	mov	r0, r3
 80109d2:	bd80      	pop	{r7, pc}
 80109d4:	40023800 	.word	0x40023800
 80109d8:	08021424 	.word	0x08021424

080109dc <HAL_RCC_GetPCLK2Freq>:
 80109dc:	b580      	push	{r7, lr}
 80109de:	af00      	add	r7, sp, #0
 80109e0:	f7ff ffdc 	bl	801099c <HAL_RCC_GetHCLKFreq>
 80109e4:	4602      	mov	r2, r0
 80109e6:	4b05      	ldr	r3, [pc, #20]	@ (80109fc <HAL_RCC_GetPCLK2Freq+0x20>)
 80109e8:	689b      	ldr	r3, [r3, #8]
 80109ea:	0b5b      	lsrs	r3, r3, #13
 80109ec:	f003 0307 	and.w	r3, r3, #7
 80109f0:	4903      	ldr	r1, [pc, #12]	@ (8010a00 <HAL_RCC_GetPCLK2Freq+0x24>)
 80109f2:	5ccb      	ldrb	r3, [r1, r3]
 80109f4:	fa22 f303 	lsr.w	r3, r2, r3
 80109f8:	4618      	mov	r0, r3
 80109fa:	bd80      	pop	{r7, pc}
 80109fc:	40023800 	.word	0x40023800
 8010a00:	08021424 	.word	0x08021424

08010a04 <HAL_RCC_GetClockConfig>:
 8010a04:	b480      	push	{r7}
 8010a06:	b083      	sub	sp, #12
 8010a08:	af00      	add	r7, sp, #0
 8010a0a:	6078      	str	r0, [r7, #4]
 8010a0c:	6039      	str	r1, [r7, #0]
 8010a0e:	687b      	ldr	r3, [r7, #4]
 8010a10:	220f      	movs	r2, #15
 8010a12:	601a      	str	r2, [r3, #0]
 8010a14:	4b12      	ldr	r3, [pc, #72]	@ (8010a60 <HAL_RCC_GetClockConfig+0x5c>)
 8010a16:	689b      	ldr	r3, [r3, #8]
 8010a18:	f003 0203 	and.w	r2, r3, #3
 8010a1c:	687b      	ldr	r3, [r7, #4]
 8010a1e:	605a      	str	r2, [r3, #4]
 8010a20:	4b0f      	ldr	r3, [pc, #60]	@ (8010a60 <HAL_RCC_GetClockConfig+0x5c>)
 8010a22:	689b      	ldr	r3, [r3, #8]
 8010a24:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8010a28:	687b      	ldr	r3, [r7, #4]
 8010a2a:	609a      	str	r2, [r3, #8]
 8010a2c:	4b0c      	ldr	r3, [pc, #48]	@ (8010a60 <HAL_RCC_GetClockConfig+0x5c>)
 8010a2e:	689b      	ldr	r3, [r3, #8]
 8010a30:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8010a34:	687b      	ldr	r3, [r7, #4]
 8010a36:	60da      	str	r2, [r3, #12]
 8010a38:	4b09      	ldr	r3, [pc, #36]	@ (8010a60 <HAL_RCC_GetClockConfig+0x5c>)
 8010a3a:	689b      	ldr	r3, [r3, #8]
 8010a3c:	08db      	lsrs	r3, r3, #3
 8010a3e:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 8010a42:	687b      	ldr	r3, [r7, #4]
 8010a44:	611a      	str	r2, [r3, #16]
 8010a46:	4b07      	ldr	r3, [pc, #28]	@ (8010a64 <HAL_RCC_GetClockConfig+0x60>)
 8010a48:	681b      	ldr	r3, [r3, #0]
 8010a4a:	f003 0207 	and.w	r2, r3, #7
 8010a4e:	683b      	ldr	r3, [r7, #0]
 8010a50:	601a      	str	r2, [r3, #0]
 8010a52:	bf00      	nop
 8010a54:	370c      	adds	r7, #12
 8010a56:	46bd      	mov	sp, r7
 8010a58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a5c:	4770      	bx	lr
 8010a5e:	bf00      	nop
 8010a60:	40023800 	.word	0x40023800
 8010a64:	40023c00 	.word	0x40023c00

08010a68 <HAL_RNG_Init>:
 8010a68:	b580      	push	{r7, lr}
 8010a6a:	b082      	sub	sp, #8
 8010a6c:	af00      	add	r7, sp, #0
 8010a6e:	6078      	str	r0, [r7, #4]
 8010a70:	687b      	ldr	r3, [r7, #4]
 8010a72:	2b00      	cmp	r3, #0
 8010a74:	d101      	bne.n	8010a7a <HAL_RNG_Init+0x12>
 8010a76:	2301      	movs	r3, #1
 8010a78:	e01c      	b.n	8010ab4 <HAL_RNG_Init+0x4c>
 8010a7a:	687b      	ldr	r3, [r7, #4]
 8010a7c:	795b      	ldrb	r3, [r3, #5]
 8010a7e:	b2db      	uxtb	r3, r3
 8010a80:	2b00      	cmp	r3, #0
 8010a82:	d105      	bne.n	8010a90 <HAL_RNG_Init+0x28>
 8010a84:	687b      	ldr	r3, [r7, #4]
 8010a86:	2200      	movs	r2, #0
 8010a88:	711a      	strb	r2, [r3, #4]
 8010a8a:	6878      	ldr	r0, [r7, #4]
 8010a8c:	f7f2 fece 	bl	800382c <HAL_RNG_MspInit>
 8010a90:	687b      	ldr	r3, [r7, #4]
 8010a92:	2202      	movs	r2, #2
 8010a94:	715a      	strb	r2, [r3, #5]
 8010a96:	687b      	ldr	r3, [r7, #4]
 8010a98:	681b      	ldr	r3, [r3, #0]
 8010a9a:	681a      	ldr	r2, [r3, #0]
 8010a9c:	687b      	ldr	r3, [r7, #4]
 8010a9e:	681b      	ldr	r3, [r3, #0]
 8010aa0:	f042 0204 	orr.w	r2, r2, #4
 8010aa4:	601a      	str	r2, [r3, #0]
 8010aa6:	687b      	ldr	r3, [r7, #4]
 8010aa8:	2201      	movs	r2, #1
 8010aaa:	715a      	strb	r2, [r3, #5]
 8010aac:	687b      	ldr	r3, [r7, #4]
 8010aae:	2200      	movs	r2, #0
 8010ab0:	609a      	str	r2, [r3, #8]
 8010ab2:	2300      	movs	r3, #0
 8010ab4:	4618      	mov	r0, r3
 8010ab6:	3708      	adds	r7, #8
 8010ab8:	46bd      	mov	sp, r7
 8010aba:	bd80      	pop	{r7, pc}

08010abc <HAL_SPI_Init>:
 8010abc:	b580      	push	{r7, lr}
 8010abe:	b082      	sub	sp, #8
 8010ac0:	af00      	add	r7, sp, #0
 8010ac2:	6078      	str	r0, [r7, #4]
 8010ac4:	687b      	ldr	r3, [r7, #4]
 8010ac6:	2b00      	cmp	r3, #0
 8010ac8:	d101      	bne.n	8010ace <HAL_SPI_Init+0x12>
 8010aca:	2301      	movs	r3, #1
 8010acc:	e07b      	b.n	8010bc6 <HAL_SPI_Init+0x10a>
 8010ace:	687b      	ldr	r3, [r7, #4]
 8010ad0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010ad2:	2b00      	cmp	r3, #0
 8010ad4:	d108      	bne.n	8010ae8 <HAL_SPI_Init+0x2c>
 8010ad6:	687b      	ldr	r3, [r7, #4]
 8010ad8:	685b      	ldr	r3, [r3, #4]
 8010ada:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010ade:	d009      	beq.n	8010af4 <HAL_SPI_Init+0x38>
 8010ae0:	687b      	ldr	r3, [r7, #4]
 8010ae2:	2200      	movs	r2, #0
 8010ae4:	61da      	str	r2, [r3, #28]
 8010ae6:	e005      	b.n	8010af4 <HAL_SPI_Init+0x38>
 8010ae8:	687b      	ldr	r3, [r7, #4]
 8010aea:	2200      	movs	r2, #0
 8010aec:	611a      	str	r2, [r3, #16]
 8010aee:	687b      	ldr	r3, [r7, #4]
 8010af0:	2200      	movs	r2, #0
 8010af2:	615a      	str	r2, [r3, #20]
 8010af4:	687b      	ldr	r3, [r7, #4]
 8010af6:	2200      	movs	r2, #0
 8010af8:	629a      	str	r2, [r3, #40]	@ 0x28
 8010afa:	687b      	ldr	r3, [r7, #4]
 8010afc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010b00:	b2db      	uxtb	r3, r3
 8010b02:	2b00      	cmp	r3, #0
 8010b04:	d106      	bne.n	8010b14 <HAL_SPI_Init+0x58>
 8010b06:	687b      	ldr	r3, [r7, #4]
 8010b08:	2200      	movs	r2, #0
 8010b0a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010b0e:	6878      	ldr	r0, [r7, #4]
 8010b10:	f7f2 fee4 	bl	80038dc <HAL_SPI_MspInit>
 8010b14:	687b      	ldr	r3, [r7, #4]
 8010b16:	2202      	movs	r2, #2
 8010b18:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010b1c:	687b      	ldr	r3, [r7, #4]
 8010b1e:	681b      	ldr	r3, [r3, #0]
 8010b20:	681a      	ldr	r2, [r3, #0]
 8010b22:	687b      	ldr	r3, [r7, #4]
 8010b24:	681b      	ldr	r3, [r3, #0]
 8010b26:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8010b2a:	601a      	str	r2, [r3, #0]
 8010b2c:	687b      	ldr	r3, [r7, #4]
 8010b2e:	685b      	ldr	r3, [r3, #4]
 8010b30:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8010b34:	687b      	ldr	r3, [r7, #4]
 8010b36:	689b      	ldr	r3, [r3, #8]
 8010b38:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8010b3c:	431a      	orrs	r2, r3
 8010b3e:	687b      	ldr	r3, [r7, #4]
 8010b40:	68db      	ldr	r3, [r3, #12]
 8010b42:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8010b46:	431a      	orrs	r2, r3
 8010b48:	687b      	ldr	r3, [r7, #4]
 8010b4a:	691b      	ldr	r3, [r3, #16]
 8010b4c:	f003 0302 	and.w	r3, r3, #2
 8010b50:	431a      	orrs	r2, r3
 8010b52:	687b      	ldr	r3, [r7, #4]
 8010b54:	695b      	ldr	r3, [r3, #20]
 8010b56:	f003 0301 	and.w	r3, r3, #1
 8010b5a:	431a      	orrs	r2, r3
 8010b5c:	687b      	ldr	r3, [r7, #4]
 8010b5e:	699b      	ldr	r3, [r3, #24]
 8010b60:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8010b64:	431a      	orrs	r2, r3
 8010b66:	687b      	ldr	r3, [r7, #4]
 8010b68:	69db      	ldr	r3, [r3, #28]
 8010b6a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010b6e:	431a      	orrs	r2, r3
 8010b70:	687b      	ldr	r3, [r7, #4]
 8010b72:	6a1b      	ldr	r3, [r3, #32]
 8010b74:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8010b78:	ea42 0103 	orr.w	r1, r2, r3
 8010b7c:	687b      	ldr	r3, [r7, #4]
 8010b7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010b80:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8010b84:	687b      	ldr	r3, [r7, #4]
 8010b86:	681b      	ldr	r3, [r3, #0]
 8010b88:	430a      	orrs	r2, r1
 8010b8a:	601a      	str	r2, [r3, #0]
 8010b8c:	687b      	ldr	r3, [r7, #4]
 8010b8e:	699b      	ldr	r3, [r3, #24]
 8010b90:	0c1b      	lsrs	r3, r3, #16
 8010b92:	f003 0104 	and.w	r1, r3, #4
 8010b96:	687b      	ldr	r3, [r7, #4]
 8010b98:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010b9a:	f003 0210 	and.w	r2, r3, #16
 8010b9e:	687b      	ldr	r3, [r7, #4]
 8010ba0:	681b      	ldr	r3, [r3, #0]
 8010ba2:	430a      	orrs	r2, r1
 8010ba4:	605a      	str	r2, [r3, #4]
 8010ba6:	687b      	ldr	r3, [r7, #4]
 8010ba8:	681b      	ldr	r3, [r3, #0]
 8010baa:	69da      	ldr	r2, [r3, #28]
 8010bac:	687b      	ldr	r3, [r7, #4]
 8010bae:	681b      	ldr	r3, [r3, #0]
 8010bb0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010bb4:	61da      	str	r2, [r3, #28]
 8010bb6:	687b      	ldr	r3, [r7, #4]
 8010bb8:	2200      	movs	r2, #0
 8010bba:	655a      	str	r2, [r3, #84]	@ 0x54
 8010bbc:	687b      	ldr	r3, [r7, #4]
 8010bbe:	2201      	movs	r2, #1
 8010bc0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010bc4:	2300      	movs	r3, #0
 8010bc6:	4618      	mov	r0, r3
 8010bc8:	3708      	adds	r7, #8
 8010bca:	46bd      	mov	sp, r7
 8010bcc:	bd80      	pop	{r7, pc}

08010bce <HAL_SPI_Receive>:
 8010bce:	b580      	push	{r7, lr}
 8010bd0:	b088      	sub	sp, #32
 8010bd2:	af02      	add	r7, sp, #8
 8010bd4:	60f8      	str	r0, [r7, #12]
 8010bd6:	60b9      	str	r1, [r7, #8]
 8010bd8:	603b      	str	r3, [r7, #0]
 8010bda:	4613      	mov	r3, r2
 8010bdc:	80fb      	strh	r3, [r7, #6]
 8010bde:	2300      	movs	r3, #0
 8010be0:	75fb      	strb	r3, [r7, #23]
 8010be2:	68fb      	ldr	r3, [r7, #12]
 8010be4:	685b      	ldr	r3, [r3, #4]
 8010be6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010bea:	d112      	bne.n	8010c12 <HAL_SPI_Receive+0x44>
 8010bec:	68fb      	ldr	r3, [r7, #12]
 8010bee:	689b      	ldr	r3, [r3, #8]
 8010bf0:	2b00      	cmp	r3, #0
 8010bf2:	d10e      	bne.n	8010c12 <HAL_SPI_Receive+0x44>
 8010bf4:	68fb      	ldr	r3, [r7, #12]
 8010bf6:	2204      	movs	r2, #4
 8010bf8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010bfc:	88fa      	ldrh	r2, [r7, #6]
 8010bfe:	683b      	ldr	r3, [r7, #0]
 8010c00:	9300      	str	r3, [sp, #0]
 8010c02:	4613      	mov	r3, r2
 8010c04:	68ba      	ldr	r2, [r7, #8]
 8010c06:	68b9      	ldr	r1, [r7, #8]
 8010c08:	68f8      	ldr	r0, [r7, #12]
 8010c0a:	f000 f8f1 	bl	8010df0 <HAL_SPI_TransmitReceive>
 8010c0e:	4603      	mov	r3, r0
 8010c10:	e0ea      	b.n	8010de8 <HAL_SPI_Receive+0x21a>
 8010c12:	68fb      	ldr	r3, [r7, #12]
 8010c14:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8010c18:	2b01      	cmp	r3, #1
 8010c1a:	d101      	bne.n	8010c20 <HAL_SPI_Receive+0x52>
 8010c1c:	2302      	movs	r3, #2
 8010c1e:	e0e3      	b.n	8010de8 <HAL_SPI_Receive+0x21a>
 8010c20:	68fb      	ldr	r3, [r7, #12]
 8010c22:	2201      	movs	r2, #1
 8010c24:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010c28:	f7fa fa8a 	bl	800b140 <HAL_GetTick>
 8010c2c:	6138      	str	r0, [r7, #16]
 8010c2e:	68fb      	ldr	r3, [r7, #12]
 8010c30:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010c34:	b2db      	uxtb	r3, r3
 8010c36:	2b01      	cmp	r3, #1
 8010c38:	d002      	beq.n	8010c40 <HAL_SPI_Receive+0x72>
 8010c3a:	2302      	movs	r3, #2
 8010c3c:	75fb      	strb	r3, [r7, #23]
 8010c3e:	e0ca      	b.n	8010dd6 <HAL_SPI_Receive+0x208>
 8010c40:	68bb      	ldr	r3, [r7, #8]
 8010c42:	2b00      	cmp	r3, #0
 8010c44:	d002      	beq.n	8010c4c <HAL_SPI_Receive+0x7e>
 8010c46:	88fb      	ldrh	r3, [r7, #6]
 8010c48:	2b00      	cmp	r3, #0
 8010c4a:	d102      	bne.n	8010c52 <HAL_SPI_Receive+0x84>
 8010c4c:	2301      	movs	r3, #1
 8010c4e:	75fb      	strb	r3, [r7, #23]
 8010c50:	e0c1      	b.n	8010dd6 <HAL_SPI_Receive+0x208>
 8010c52:	68fb      	ldr	r3, [r7, #12]
 8010c54:	2204      	movs	r2, #4
 8010c56:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010c5a:	68fb      	ldr	r3, [r7, #12]
 8010c5c:	2200      	movs	r2, #0
 8010c5e:	655a      	str	r2, [r3, #84]	@ 0x54
 8010c60:	68fb      	ldr	r3, [r7, #12]
 8010c62:	68ba      	ldr	r2, [r7, #8]
 8010c64:	639a      	str	r2, [r3, #56]	@ 0x38
 8010c66:	68fb      	ldr	r3, [r7, #12]
 8010c68:	88fa      	ldrh	r2, [r7, #6]
 8010c6a:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8010c6c:	68fb      	ldr	r3, [r7, #12]
 8010c6e:	88fa      	ldrh	r2, [r7, #6]
 8010c70:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010c72:	68fb      	ldr	r3, [r7, #12]
 8010c74:	2200      	movs	r2, #0
 8010c76:	631a      	str	r2, [r3, #48]	@ 0x30
 8010c78:	68fb      	ldr	r3, [r7, #12]
 8010c7a:	2200      	movs	r2, #0
 8010c7c:	869a      	strh	r2, [r3, #52]	@ 0x34
 8010c7e:	68fb      	ldr	r3, [r7, #12]
 8010c80:	2200      	movs	r2, #0
 8010c82:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010c84:	68fb      	ldr	r3, [r7, #12]
 8010c86:	2200      	movs	r2, #0
 8010c88:	641a      	str	r2, [r3, #64]	@ 0x40
 8010c8a:	68fb      	ldr	r3, [r7, #12]
 8010c8c:	2200      	movs	r2, #0
 8010c8e:	645a      	str	r2, [r3, #68]	@ 0x44
 8010c90:	68fb      	ldr	r3, [r7, #12]
 8010c92:	689b      	ldr	r3, [r3, #8]
 8010c94:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8010c98:	d10f      	bne.n	8010cba <HAL_SPI_Receive+0xec>
 8010c9a:	68fb      	ldr	r3, [r7, #12]
 8010c9c:	681b      	ldr	r3, [r3, #0]
 8010c9e:	681a      	ldr	r2, [r3, #0]
 8010ca0:	68fb      	ldr	r3, [r7, #12]
 8010ca2:	681b      	ldr	r3, [r3, #0]
 8010ca4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8010ca8:	601a      	str	r2, [r3, #0]
 8010caa:	68fb      	ldr	r3, [r7, #12]
 8010cac:	681b      	ldr	r3, [r3, #0]
 8010cae:	681a      	ldr	r2, [r3, #0]
 8010cb0:	68fb      	ldr	r3, [r7, #12]
 8010cb2:	681b      	ldr	r3, [r3, #0]
 8010cb4:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8010cb8:	601a      	str	r2, [r3, #0]
 8010cba:	68fb      	ldr	r3, [r7, #12]
 8010cbc:	681b      	ldr	r3, [r3, #0]
 8010cbe:	681b      	ldr	r3, [r3, #0]
 8010cc0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010cc4:	2b40      	cmp	r3, #64	@ 0x40
 8010cc6:	d007      	beq.n	8010cd8 <HAL_SPI_Receive+0x10a>
 8010cc8:	68fb      	ldr	r3, [r7, #12]
 8010cca:	681b      	ldr	r3, [r3, #0]
 8010ccc:	681a      	ldr	r2, [r3, #0]
 8010cce:	68fb      	ldr	r3, [r7, #12]
 8010cd0:	681b      	ldr	r3, [r3, #0]
 8010cd2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8010cd6:	601a      	str	r2, [r3, #0]
 8010cd8:	68fb      	ldr	r3, [r7, #12]
 8010cda:	68db      	ldr	r3, [r3, #12]
 8010cdc:	2b00      	cmp	r3, #0
 8010cde:	d162      	bne.n	8010da6 <HAL_SPI_Receive+0x1d8>
 8010ce0:	e02e      	b.n	8010d40 <HAL_SPI_Receive+0x172>
 8010ce2:	68fb      	ldr	r3, [r7, #12]
 8010ce4:	681b      	ldr	r3, [r3, #0]
 8010ce6:	689b      	ldr	r3, [r3, #8]
 8010ce8:	f003 0301 	and.w	r3, r3, #1
 8010cec:	2b01      	cmp	r3, #1
 8010cee:	d115      	bne.n	8010d1c <HAL_SPI_Receive+0x14e>
 8010cf0:	68fb      	ldr	r3, [r7, #12]
 8010cf2:	681b      	ldr	r3, [r3, #0]
 8010cf4:	f103 020c 	add.w	r2, r3, #12
 8010cf8:	68fb      	ldr	r3, [r7, #12]
 8010cfa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010cfc:	7812      	ldrb	r2, [r2, #0]
 8010cfe:	b2d2      	uxtb	r2, r2
 8010d00:	701a      	strb	r2, [r3, #0]
 8010d02:	68fb      	ldr	r3, [r7, #12]
 8010d04:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010d06:	1c5a      	adds	r2, r3, #1
 8010d08:	68fb      	ldr	r3, [r7, #12]
 8010d0a:	639a      	str	r2, [r3, #56]	@ 0x38
 8010d0c:	68fb      	ldr	r3, [r7, #12]
 8010d0e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010d10:	b29b      	uxth	r3, r3
 8010d12:	3b01      	subs	r3, #1
 8010d14:	b29a      	uxth	r2, r3
 8010d16:	68fb      	ldr	r3, [r7, #12]
 8010d18:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010d1a:	e011      	b.n	8010d40 <HAL_SPI_Receive+0x172>
 8010d1c:	f7fa fa10 	bl	800b140 <HAL_GetTick>
 8010d20:	4602      	mov	r2, r0
 8010d22:	693b      	ldr	r3, [r7, #16]
 8010d24:	1ad3      	subs	r3, r2, r3
 8010d26:	683a      	ldr	r2, [r7, #0]
 8010d28:	429a      	cmp	r2, r3
 8010d2a:	d803      	bhi.n	8010d34 <HAL_SPI_Receive+0x166>
 8010d2c:	683b      	ldr	r3, [r7, #0]
 8010d2e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010d32:	d102      	bne.n	8010d3a <HAL_SPI_Receive+0x16c>
 8010d34:	683b      	ldr	r3, [r7, #0]
 8010d36:	2b00      	cmp	r3, #0
 8010d38:	d102      	bne.n	8010d40 <HAL_SPI_Receive+0x172>
 8010d3a:	2303      	movs	r3, #3
 8010d3c:	75fb      	strb	r3, [r7, #23]
 8010d3e:	e04a      	b.n	8010dd6 <HAL_SPI_Receive+0x208>
 8010d40:	68fb      	ldr	r3, [r7, #12]
 8010d42:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010d44:	b29b      	uxth	r3, r3
 8010d46:	2b00      	cmp	r3, #0
 8010d48:	d1cb      	bne.n	8010ce2 <HAL_SPI_Receive+0x114>
 8010d4a:	e031      	b.n	8010db0 <HAL_SPI_Receive+0x1e2>
 8010d4c:	68fb      	ldr	r3, [r7, #12]
 8010d4e:	681b      	ldr	r3, [r3, #0]
 8010d50:	689b      	ldr	r3, [r3, #8]
 8010d52:	f003 0301 	and.w	r3, r3, #1
 8010d56:	2b01      	cmp	r3, #1
 8010d58:	d113      	bne.n	8010d82 <HAL_SPI_Receive+0x1b4>
 8010d5a:	68fb      	ldr	r3, [r7, #12]
 8010d5c:	681b      	ldr	r3, [r3, #0]
 8010d5e:	68da      	ldr	r2, [r3, #12]
 8010d60:	68fb      	ldr	r3, [r7, #12]
 8010d62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010d64:	b292      	uxth	r2, r2
 8010d66:	801a      	strh	r2, [r3, #0]
 8010d68:	68fb      	ldr	r3, [r7, #12]
 8010d6a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010d6c:	1c9a      	adds	r2, r3, #2
 8010d6e:	68fb      	ldr	r3, [r7, #12]
 8010d70:	639a      	str	r2, [r3, #56]	@ 0x38
 8010d72:	68fb      	ldr	r3, [r7, #12]
 8010d74:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010d76:	b29b      	uxth	r3, r3
 8010d78:	3b01      	subs	r3, #1
 8010d7a:	b29a      	uxth	r2, r3
 8010d7c:	68fb      	ldr	r3, [r7, #12]
 8010d7e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010d80:	e011      	b.n	8010da6 <HAL_SPI_Receive+0x1d8>
 8010d82:	f7fa f9dd 	bl	800b140 <HAL_GetTick>
 8010d86:	4602      	mov	r2, r0
 8010d88:	693b      	ldr	r3, [r7, #16]
 8010d8a:	1ad3      	subs	r3, r2, r3
 8010d8c:	683a      	ldr	r2, [r7, #0]
 8010d8e:	429a      	cmp	r2, r3
 8010d90:	d803      	bhi.n	8010d9a <HAL_SPI_Receive+0x1cc>
 8010d92:	683b      	ldr	r3, [r7, #0]
 8010d94:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010d98:	d102      	bne.n	8010da0 <HAL_SPI_Receive+0x1d2>
 8010d9a:	683b      	ldr	r3, [r7, #0]
 8010d9c:	2b00      	cmp	r3, #0
 8010d9e:	d102      	bne.n	8010da6 <HAL_SPI_Receive+0x1d8>
 8010da0:	2303      	movs	r3, #3
 8010da2:	75fb      	strb	r3, [r7, #23]
 8010da4:	e017      	b.n	8010dd6 <HAL_SPI_Receive+0x208>
 8010da6:	68fb      	ldr	r3, [r7, #12]
 8010da8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010daa:	b29b      	uxth	r3, r3
 8010dac:	2b00      	cmp	r3, #0
 8010dae:	d1cd      	bne.n	8010d4c <HAL_SPI_Receive+0x17e>
 8010db0:	693a      	ldr	r2, [r7, #16]
 8010db2:	6839      	ldr	r1, [r7, #0]
 8010db4:	68f8      	ldr	r0, [r7, #12]
 8010db6:	f000 fa45 	bl	8011244 <SPI_EndRxTransaction>
 8010dba:	4603      	mov	r3, r0
 8010dbc:	2b00      	cmp	r3, #0
 8010dbe:	d002      	beq.n	8010dc6 <HAL_SPI_Receive+0x1f8>
 8010dc0:	68fb      	ldr	r3, [r7, #12]
 8010dc2:	2220      	movs	r2, #32
 8010dc4:	655a      	str	r2, [r3, #84]	@ 0x54
 8010dc6:	68fb      	ldr	r3, [r7, #12]
 8010dc8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010dca:	2b00      	cmp	r3, #0
 8010dcc:	d002      	beq.n	8010dd4 <HAL_SPI_Receive+0x206>
 8010dce:	2301      	movs	r3, #1
 8010dd0:	75fb      	strb	r3, [r7, #23]
 8010dd2:	e000      	b.n	8010dd6 <HAL_SPI_Receive+0x208>
 8010dd4:	bf00      	nop
 8010dd6:	68fb      	ldr	r3, [r7, #12]
 8010dd8:	2201      	movs	r2, #1
 8010dda:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010dde:	68fb      	ldr	r3, [r7, #12]
 8010de0:	2200      	movs	r2, #0
 8010de2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010de6:	7dfb      	ldrb	r3, [r7, #23]
 8010de8:	4618      	mov	r0, r3
 8010dea:	3718      	adds	r7, #24
 8010dec:	46bd      	mov	sp, r7
 8010dee:	bd80      	pop	{r7, pc}

08010df0 <HAL_SPI_TransmitReceive>:
 8010df0:	b580      	push	{r7, lr}
 8010df2:	b08c      	sub	sp, #48	@ 0x30
 8010df4:	af00      	add	r7, sp, #0
 8010df6:	60f8      	str	r0, [r7, #12]
 8010df8:	60b9      	str	r1, [r7, #8]
 8010dfa:	607a      	str	r2, [r7, #4]
 8010dfc:	807b      	strh	r3, [r7, #2]
 8010dfe:	2301      	movs	r3, #1
 8010e00:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010e02:	2300      	movs	r3, #0
 8010e04:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010e08:	68fb      	ldr	r3, [r7, #12]
 8010e0a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8010e0e:	2b01      	cmp	r3, #1
 8010e10:	d101      	bne.n	8010e16 <HAL_SPI_TransmitReceive+0x26>
 8010e12:	2302      	movs	r3, #2
 8010e14:	e18a      	b.n	801112c <HAL_SPI_TransmitReceive+0x33c>
 8010e16:	68fb      	ldr	r3, [r7, #12]
 8010e18:	2201      	movs	r2, #1
 8010e1a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010e1e:	f7fa f98f 	bl	800b140 <HAL_GetTick>
 8010e22:	6278      	str	r0, [r7, #36]	@ 0x24
 8010e24:	68fb      	ldr	r3, [r7, #12]
 8010e26:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010e2a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8010e2e:	68fb      	ldr	r3, [r7, #12]
 8010e30:	685b      	ldr	r3, [r3, #4]
 8010e32:	61fb      	str	r3, [r7, #28]
 8010e34:	887b      	ldrh	r3, [r7, #2]
 8010e36:	837b      	strh	r3, [r7, #26]
 8010e38:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8010e3c:	2b01      	cmp	r3, #1
 8010e3e:	d00f      	beq.n	8010e60 <HAL_SPI_TransmitReceive+0x70>
 8010e40:	69fb      	ldr	r3, [r7, #28]
 8010e42:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010e46:	d107      	bne.n	8010e58 <HAL_SPI_TransmitReceive+0x68>
 8010e48:	68fb      	ldr	r3, [r7, #12]
 8010e4a:	689b      	ldr	r3, [r3, #8]
 8010e4c:	2b00      	cmp	r3, #0
 8010e4e:	d103      	bne.n	8010e58 <HAL_SPI_TransmitReceive+0x68>
 8010e50:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8010e54:	2b04      	cmp	r3, #4
 8010e56:	d003      	beq.n	8010e60 <HAL_SPI_TransmitReceive+0x70>
 8010e58:	2302      	movs	r3, #2
 8010e5a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010e5e:	e15b      	b.n	8011118 <HAL_SPI_TransmitReceive+0x328>
 8010e60:	68bb      	ldr	r3, [r7, #8]
 8010e62:	2b00      	cmp	r3, #0
 8010e64:	d005      	beq.n	8010e72 <HAL_SPI_TransmitReceive+0x82>
 8010e66:	687b      	ldr	r3, [r7, #4]
 8010e68:	2b00      	cmp	r3, #0
 8010e6a:	d002      	beq.n	8010e72 <HAL_SPI_TransmitReceive+0x82>
 8010e6c:	887b      	ldrh	r3, [r7, #2]
 8010e6e:	2b00      	cmp	r3, #0
 8010e70:	d103      	bne.n	8010e7a <HAL_SPI_TransmitReceive+0x8a>
 8010e72:	2301      	movs	r3, #1
 8010e74:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010e78:	e14e      	b.n	8011118 <HAL_SPI_TransmitReceive+0x328>
 8010e7a:	68fb      	ldr	r3, [r7, #12]
 8010e7c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010e80:	b2db      	uxtb	r3, r3
 8010e82:	2b04      	cmp	r3, #4
 8010e84:	d003      	beq.n	8010e8e <HAL_SPI_TransmitReceive+0x9e>
 8010e86:	68fb      	ldr	r3, [r7, #12]
 8010e88:	2205      	movs	r2, #5
 8010e8a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010e8e:	68fb      	ldr	r3, [r7, #12]
 8010e90:	2200      	movs	r2, #0
 8010e92:	655a      	str	r2, [r3, #84]	@ 0x54
 8010e94:	68fb      	ldr	r3, [r7, #12]
 8010e96:	687a      	ldr	r2, [r7, #4]
 8010e98:	639a      	str	r2, [r3, #56]	@ 0x38
 8010e9a:	68fb      	ldr	r3, [r7, #12]
 8010e9c:	887a      	ldrh	r2, [r7, #2]
 8010e9e:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010ea0:	68fb      	ldr	r3, [r7, #12]
 8010ea2:	887a      	ldrh	r2, [r7, #2]
 8010ea4:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8010ea6:	68fb      	ldr	r3, [r7, #12]
 8010ea8:	68ba      	ldr	r2, [r7, #8]
 8010eaa:	631a      	str	r2, [r3, #48]	@ 0x30
 8010eac:	68fb      	ldr	r3, [r7, #12]
 8010eae:	887a      	ldrh	r2, [r7, #2]
 8010eb0:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010eb2:	68fb      	ldr	r3, [r7, #12]
 8010eb4:	887a      	ldrh	r2, [r7, #2]
 8010eb6:	869a      	strh	r2, [r3, #52]	@ 0x34
 8010eb8:	68fb      	ldr	r3, [r7, #12]
 8010eba:	2200      	movs	r2, #0
 8010ebc:	641a      	str	r2, [r3, #64]	@ 0x40
 8010ebe:	68fb      	ldr	r3, [r7, #12]
 8010ec0:	2200      	movs	r2, #0
 8010ec2:	645a      	str	r2, [r3, #68]	@ 0x44
 8010ec4:	68fb      	ldr	r3, [r7, #12]
 8010ec6:	681b      	ldr	r3, [r3, #0]
 8010ec8:	681b      	ldr	r3, [r3, #0]
 8010eca:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010ece:	2b40      	cmp	r3, #64	@ 0x40
 8010ed0:	d007      	beq.n	8010ee2 <HAL_SPI_TransmitReceive+0xf2>
 8010ed2:	68fb      	ldr	r3, [r7, #12]
 8010ed4:	681b      	ldr	r3, [r3, #0]
 8010ed6:	681a      	ldr	r2, [r3, #0]
 8010ed8:	68fb      	ldr	r3, [r7, #12]
 8010eda:	681b      	ldr	r3, [r3, #0]
 8010edc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8010ee0:	601a      	str	r2, [r3, #0]
 8010ee2:	68fb      	ldr	r3, [r7, #12]
 8010ee4:	68db      	ldr	r3, [r3, #12]
 8010ee6:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8010eea:	d178      	bne.n	8010fde <HAL_SPI_TransmitReceive+0x1ee>
 8010eec:	68fb      	ldr	r3, [r7, #12]
 8010eee:	685b      	ldr	r3, [r3, #4]
 8010ef0:	2b00      	cmp	r3, #0
 8010ef2:	d002      	beq.n	8010efa <HAL_SPI_TransmitReceive+0x10a>
 8010ef4:	8b7b      	ldrh	r3, [r7, #26]
 8010ef6:	2b01      	cmp	r3, #1
 8010ef8:	d166      	bne.n	8010fc8 <HAL_SPI_TransmitReceive+0x1d8>
 8010efa:	68fb      	ldr	r3, [r7, #12]
 8010efc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010efe:	881a      	ldrh	r2, [r3, #0]
 8010f00:	68fb      	ldr	r3, [r7, #12]
 8010f02:	681b      	ldr	r3, [r3, #0]
 8010f04:	60da      	str	r2, [r3, #12]
 8010f06:	68fb      	ldr	r3, [r7, #12]
 8010f08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010f0a:	1c9a      	adds	r2, r3, #2
 8010f0c:	68fb      	ldr	r3, [r7, #12]
 8010f0e:	631a      	str	r2, [r3, #48]	@ 0x30
 8010f10:	68fb      	ldr	r3, [r7, #12]
 8010f12:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f14:	b29b      	uxth	r3, r3
 8010f16:	3b01      	subs	r3, #1
 8010f18:	b29a      	uxth	r2, r3
 8010f1a:	68fb      	ldr	r3, [r7, #12]
 8010f1c:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010f1e:	e053      	b.n	8010fc8 <HAL_SPI_TransmitReceive+0x1d8>
 8010f20:	68fb      	ldr	r3, [r7, #12]
 8010f22:	681b      	ldr	r3, [r3, #0]
 8010f24:	689b      	ldr	r3, [r3, #8]
 8010f26:	f003 0302 	and.w	r3, r3, #2
 8010f2a:	2b02      	cmp	r3, #2
 8010f2c:	d11b      	bne.n	8010f66 <HAL_SPI_TransmitReceive+0x176>
 8010f2e:	68fb      	ldr	r3, [r7, #12]
 8010f30:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f32:	b29b      	uxth	r3, r3
 8010f34:	2b00      	cmp	r3, #0
 8010f36:	d016      	beq.n	8010f66 <HAL_SPI_TransmitReceive+0x176>
 8010f38:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8010f3a:	2b01      	cmp	r3, #1
 8010f3c:	d113      	bne.n	8010f66 <HAL_SPI_TransmitReceive+0x176>
 8010f3e:	68fb      	ldr	r3, [r7, #12]
 8010f40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010f42:	881a      	ldrh	r2, [r3, #0]
 8010f44:	68fb      	ldr	r3, [r7, #12]
 8010f46:	681b      	ldr	r3, [r3, #0]
 8010f48:	60da      	str	r2, [r3, #12]
 8010f4a:	68fb      	ldr	r3, [r7, #12]
 8010f4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010f4e:	1c9a      	adds	r2, r3, #2
 8010f50:	68fb      	ldr	r3, [r7, #12]
 8010f52:	631a      	str	r2, [r3, #48]	@ 0x30
 8010f54:	68fb      	ldr	r3, [r7, #12]
 8010f56:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f58:	b29b      	uxth	r3, r3
 8010f5a:	3b01      	subs	r3, #1
 8010f5c:	b29a      	uxth	r2, r3
 8010f5e:	68fb      	ldr	r3, [r7, #12]
 8010f60:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010f62:	2300      	movs	r3, #0
 8010f64:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010f66:	68fb      	ldr	r3, [r7, #12]
 8010f68:	681b      	ldr	r3, [r3, #0]
 8010f6a:	689b      	ldr	r3, [r3, #8]
 8010f6c:	f003 0301 	and.w	r3, r3, #1
 8010f70:	2b01      	cmp	r3, #1
 8010f72:	d119      	bne.n	8010fa8 <HAL_SPI_TransmitReceive+0x1b8>
 8010f74:	68fb      	ldr	r3, [r7, #12]
 8010f76:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010f78:	b29b      	uxth	r3, r3
 8010f7a:	2b00      	cmp	r3, #0
 8010f7c:	d014      	beq.n	8010fa8 <HAL_SPI_TransmitReceive+0x1b8>
 8010f7e:	68fb      	ldr	r3, [r7, #12]
 8010f80:	681b      	ldr	r3, [r3, #0]
 8010f82:	68da      	ldr	r2, [r3, #12]
 8010f84:	68fb      	ldr	r3, [r7, #12]
 8010f86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f88:	b292      	uxth	r2, r2
 8010f8a:	801a      	strh	r2, [r3, #0]
 8010f8c:	68fb      	ldr	r3, [r7, #12]
 8010f8e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f90:	1c9a      	adds	r2, r3, #2
 8010f92:	68fb      	ldr	r3, [r7, #12]
 8010f94:	639a      	str	r2, [r3, #56]	@ 0x38
 8010f96:	68fb      	ldr	r3, [r7, #12]
 8010f98:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010f9a:	b29b      	uxth	r3, r3
 8010f9c:	3b01      	subs	r3, #1
 8010f9e:	b29a      	uxth	r2, r3
 8010fa0:	68fb      	ldr	r3, [r7, #12]
 8010fa2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010fa4:	2301      	movs	r3, #1
 8010fa6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010fa8:	f7fa f8ca 	bl	800b140 <HAL_GetTick>
 8010fac:	4602      	mov	r2, r0
 8010fae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010fb0:	1ad3      	subs	r3, r2, r3
 8010fb2:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8010fb4:	429a      	cmp	r2, r3
 8010fb6:	d807      	bhi.n	8010fc8 <HAL_SPI_TransmitReceive+0x1d8>
 8010fb8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010fba:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010fbe:	d003      	beq.n	8010fc8 <HAL_SPI_TransmitReceive+0x1d8>
 8010fc0:	2303      	movs	r3, #3
 8010fc2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010fc6:	e0a7      	b.n	8011118 <HAL_SPI_TransmitReceive+0x328>
 8010fc8:	68fb      	ldr	r3, [r7, #12]
 8010fca:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010fcc:	b29b      	uxth	r3, r3
 8010fce:	2b00      	cmp	r3, #0
 8010fd0:	d1a6      	bne.n	8010f20 <HAL_SPI_TransmitReceive+0x130>
 8010fd2:	68fb      	ldr	r3, [r7, #12]
 8010fd4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010fd6:	b29b      	uxth	r3, r3
 8010fd8:	2b00      	cmp	r3, #0
 8010fda:	d1a1      	bne.n	8010f20 <HAL_SPI_TransmitReceive+0x130>
 8010fdc:	e07c      	b.n	80110d8 <HAL_SPI_TransmitReceive+0x2e8>
 8010fde:	68fb      	ldr	r3, [r7, #12]
 8010fe0:	685b      	ldr	r3, [r3, #4]
 8010fe2:	2b00      	cmp	r3, #0
 8010fe4:	d002      	beq.n	8010fec <HAL_SPI_TransmitReceive+0x1fc>
 8010fe6:	8b7b      	ldrh	r3, [r7, #26]
 8010fe8:	2b01      	cmp	r3, #1
 8010fea:	d16b      	bne.n	80110c4 <HAL_SPI_TransmitReceive+0x2d4>
 8010fec:	68fb      	ldr	r3, [r7, #12]
 8010fee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8010ff0:	68fb      	ldr	r3, [r7, #12]
 8010ff2:	681b      	ldr	r3, [r3, #0]
 8010ff4:	330c      	adds	r3, #12
 8010ff6:	7812      	ldrb	r2, [r2, #0]
 8010ff8:	701a      	strb	r2, [r3, #0]
 8010ffa:	68fb      	ldr	r3, [r7, #12]
 8010ffc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010ffe:	1c5a      	adds	r2, r3, #1
 8011000:	68fb      	ldr	r3, [r7, #12]
 8011002:	631a      	str	r2, [r3, #48]	@ 0x30
 8011004:	68fb      	ldr	r3, [r7, #12]
 8011006:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8011008:	b29b      	uxth	r3, r3
 801100a:	3b01      	subs	r3, #1
 801100c:	b29a      	uxth	r2, r3
 801100e:	68fb      	ldr	r3, [r7, #12]
 8011010:	86da      	strh	r2, [r3, #54]	@ 0x36
 8011012:	e057      	b.n	80110c4 <HAL_SPI_TransmitReceive+0x2d4>
 8011014:	68fb      	ldr	r3, [r7, #12]
 8011016:	681b      	ldr	r3, [r3, #0]
 8011018:	689b      	ldr	r3, [r3, #8]
 801101a:	f003 0302 	and.w	r3, r3, #2
 801101e:	2b02      	cmp	r3, #2
 8011020:	d11c      	bne.n	801105c <HAL_SPI_TransmitReceive+0x26c>
 8011022:	68fb      	ldr	r3, [r7, #12]
 8011024:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8011026:	b29b      	uxth	r3, r3
 8011028:	2b00      	cmp	r3, #0
 801102a:	d017      	beq.n	801105c <HAL_SPI_TransmitReceive+0x26c>
 801102c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801102e:	2b01      	cmp	r3, #1
 8011030:	d114      	bne.n	801105c <HAL_SPI_TransmitReceive+0x26c>
 8011032:	68fb      	ldr	r3, [r7, #12]
 8011034:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8011036:	68fb      	ldr	r3, [r7, #12]
 8011038:	681b      	ldr	r3, [r3, #0]
 801103a:	330c      	adds	r3, #12
 801103c:	7812      	ldrb	r2, [r2, #0]
 801103e:	701a      	strb	r2, [r3, #0]
 8011040:	68fb      	ldr	r3, [r7, #12]
 8011042:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011044:	1c5a      	adds	r2, r3, #1
 8011046:	68fb      	ldr	r3, [r7, #12]
 8011048:	631a      	str	r2, [r3, #48]	@ 0x30
 801104a:	68fb      	ldr	r3, [r7, #12]
 801104c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 801104e:	b29b      	uxth	r3, r3
 8011050:	3b01      	subs	r3, #1
 8011052:	b29a      	uxth	r2, r3
 8011054:	68fb      	ldr	r3, [r7, #12]
 8011056:	86da      	strh	r2, [r3, #54]	@ 0x36
 8011058:	2300      	movs	r3, #0
 801105a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801105c:	68fb      	ldr	r3, [r7, #12]
 801105e:	681b      	ldr	r3, [r3, #0]
 8011060:	689b      	ldr	r3, [r3, #8]
 8011062:	f003 0301 	and.w	r3, r3, #1
 8011066:	2b01      	cmp	r3, #1
 8011068:	d119      	bne.n	801109e <HAL_SPI_TransmitReceive+0x2ae>
 801106a:	68fb      	ldr	r3, [r7, #12]
 801106c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 801106e:	b29b      	uxth	r3, r3
 8011070:	2b00      	cmp	r3, #0
 8011072:	d014      	beq.n	801109e <HAL_SPI_TransmitReceive+0x2ae>
 8011074:	68fb      	ldr	r3, [r7, #12]
 8011076:	681b      	ldr	r3, [r3, #0]
 8011078:	68da      	ldr	r2, [r3, #12]
 801107a:	68fb      	ldr	r3, [r7, #12]
 801107c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801107e:	b2d2      	uxtb	r2, r2
 8011080:	701a      	strb	r2, [r3, #0]
 8011082:	68fb      	ldr	r3, [r7, #12]
 8011084:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011086:	1c5a      	adds	r2, r3, #1
 8011088:	68fb      	ldr	r3, [r7, #12]
 801108a:	639a      	str	r2, [r3, #56]	@ 0x38
 801108c:	68fb      	ldr	r3, [r7, #12]
 801108e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8011090:	b29b      	uxth	r3, r3
 8011092:	3b01      	subs	r3, #1
 8011094:	b29a      	uxth	r2, r3
 8011096:	68fb      	ldr	r3, [r7, #12]
 8011098:	87da      	strh	r2, [r3, #62]	@ 0x3e
 801109a:	2301      	movs	r3, #1
 801109c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801109e:	f7fa f84f 	bl	800b140 <HAL_GetTick>
 80110a2:	4602      	mov	r2, r0
 80110a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80110a6:	1ad3      	subs	r3, r2, r3
 80110a8:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80110aa:	429a      	cmp	r2, r3
 80110ac:	d803      	bhi.n	80110b6 <HAL_SPI_TransmitReceive+0x2c6>
 80110ae:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80110b0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80110b4:	d102      	bne.n	80110bc <HAL_SPI_TransmitReceive+0x2cc>
 80110b6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80110b8:	2b00      	cmp	r3, #0
 80110ba:	d103      	bne.n	80110c4 <HAL_SPI_TransmitReceive+0x2d4>
 80110bc:	2303      	movs	r3, #3
 80110be:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80110c2:	e029      	b.n	8011118 <HAL_SPI_TransmitReceive+0x328>
 80110c4:	68fb      	ldr	r3, [r7, #12]
 80110c6:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80110c8:	b29b      	uxth	r3, r3
 80110ca:	2b00      	cmp	r3, #0
 80110cc:	d1a2      	bne.n	8011014 <HAL_SPI_TransmitReceive+0x224>
 80110ce:	68fb      	ldr	r3, [r7, #12]
 80110d0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80110d2:	b29b      	uxth	r3, r3
 80110d4:	2b00      	cmp	r3, #0
 80110d6:	d19d      	bne.n	8011014 <HAL_SPI_TransmitReceive+0x224>
 80110d8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80110da:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 80110dc:	68f8      	ldr	r0, [r7, #12]
 80110de:	f000 f917 	bl	8011310 <SPI_EndRxTxTransaction>
 80110e2:	4603      	mov	r3, r0
 80110e4:	2b00      	cmp	r3, #0
 80110e6:	d006      	beq.n	80110f6 <HAL_SPI_TransmitReceive+0x306>
 80110e8:	2301      	movs	r3, #1
 80110ea:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80110ee:	68fb      	ldr	r3, [r7, #12]
 80110f0:	2220      	movs	r2, #32
 80110f2:	655a      	str	r2, [r3, #84]	@ 0x54
 80110f4:	e010      	b.n	8011118 <HAL_SPI_TransmitReceive+0x328>
 80110f6:	68fb      	ldr	r3, [r7, #12]
 80110f8:	689b      	ldr	r3, [r3, #8]
 80110fa:	2b00      	cmp	r3, #0
 80110fc:	d10b      	bne.n	8011116 <HAL_SPI_TransmitReceive+0x326>
 80110fe:	2300      	movs	r3, #0
 8011100:	617b      	str	r3, [r7, #20]
 8011102:	68fb      	ldr	r3, [r7, #12]
 8011104:	681b      	ldr	r3, [r3, #0]
 8011106:	68db      	ldr	r3, [r3, #12]
 8011108:	617b      	str	r3, [r7, #20]
 801110a:	68fb      	ldr	r3, [r7, #12]
 801110c:	681b      	ldr	r3, [r3, #0]
 801110e:	689b      	ldr	r3, [r3, #8]
 8011110:	617b      	str	r3, [r7, #20]
 8011112:	697b      	ldr	r3, [r7, #20]
 8011114:	e000      	b.n	8011118 <HAL_SPI_TransmitReceive+0x328>
 8011116:	bf00      	nop
 8011118:	68fb      	ldr	r3, [r7, #12]
 801111a:	2201      	movs	r2, #1
 801111c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8011120:	68fb      	ldr	r3, [r7, #12]
 8011122:	2200      	movs	r2, #0
 8011124:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8011128:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 801112c:	4618      	mov	r0, r3
 801112e:	3730      	adds	r7, #48	@ 0x30
 8011130:	46bd      	mov	sp, r7
 8011132:	bd80      	pop	{r7, pc}

08011134 <SPI_WaitFlagStateUntilTimeout>:
 8011134:	b580      	push	{r7, lr}
 8011136:	b088      	sub	sp, #32
 8011138:	af00      	add	r7, sp, #0
 801113a:	60f8      	str	r0, [r7, #12]
 801113c:	60b9      	str	r1, [r7, #8]
 801113e:	603b      	str	r3, [r7, #0]
 8011140:	4613      	mov	r3, r2
 8011142:	71fb      	strb	r3, [r7, #7]
 8011144:	f7f9 fffc 	bl	800b140 <HAL_GetTick>
 8011148:	4602      	mov	r2, r0
 801114a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801114c:	1a9b      	subs	r3, r3, r2
 801114e:	683a      	ldr	r2, [r7, #0]
 8011150:	4413      	add	r3, r2
 8011152:	61fb      	str	r3, [r7, #28]
 8011154:	f7f9 fff4 	bl	800b140 <HAL_GetTick>
 8011158:	61b8      	str	r0, [r7, #24]
 801115a:	4b39      	ldr	r3, [pc, #228]	@ (8011240 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 801115c:	681b      	ldr	r3, [r3, #0]
 801115e:	015b      	lsls	r3, r3, #5
 8011160:	0d1b      	lsrs	r3, r3, #20
 8011162:	69fa      	ldr	r2, [r7, #28]
 8011164:	fb02 f303 	mul.w	r3, r2, r3
 8011168:	617b      	str	r3, [r7, #20]
 801116a:	e054      	b.n	8011216 <SPI_WaitFlagStateUntilTimeout+0xe2>
 801116c:	683b      	ldr	r3, [r7, #0]
 801116e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8011172:	d050      	beq.n	8011216 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8011174:	f7f9 ffe4 	bl	800b140 <HAL_GetTick>
 8011178:	4602      	mov	r2, r0
 801117a:	69bb      	ldr	r3, [r7, #24]
 801117c:	1ad3      	subs	r3, r2, r3
 801117e:	69fa      	ldr	r2, [r7, #28]
 8011180:	429a      	cmp	r2, r3
 8011182:	d902      	bls.n	801118a <SPI_WaitFlagStateUntilTimeout+0x56>
 8011184:	69fb      	ldr	r3, [r7, #28]
 8011186:	2b00      	cmp	r3, #0
 8011188:	d13d      	bne.n	8011206 <SPI_WaitFlagStateUntilTimeout+0xd2>
 801118a:	68fb      	ldr	r3, [r7, #12]
 801118c:	681b      	ldr	r3, [r3, #0]
 801118e:	685a      	ldr	r2, [r3, #4]
 8011190:	68fb      	ldr	r3, [r7, #12]
 8011192:	681b      	ldr	r3, [r3, #0]
 8011194:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8011198:	605a      	str	r2, [r3, #4]
 801119a:	68fb      	ldr	r3, [r7, #12]
 801119c:	685b      	ldr	r3, [r3, #4]
 801119e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80111a2:	d111      	bne.n	80111c8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80111a4:	68fb      	ldr	r3, [r7, #12]
 80111a6:	689b      	ldr	r3, [r3, #8]
 80111a8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80111ac:	d004      	beq.n	80111b8 <SPI_WaitFlagStateUntilTimeout+0x84>
 80111ae:	68fb      	ldr	r3, [r7, #12]
 80111b0:	689b      	ldr	r3, [r3, #8]
 80111b2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80111b6:	d107      	bne.n	80111c8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80111b8:	68fb      	ldr	r3, [r7, #12]
 80111ba:	681b      	ldr	r3, [r3, #0]
 80111bc:	681a      	ldr	r2, [r3, #0]
 80111be:	68fb      	ldr	r3, [r7, #12]
 80111c0:	681b      	ldr	r3, [r3, #0]
 80111c2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80111c6:	601a      	str	r2, [r3, #0]
 80111c8:	68fb      	ldr	r3, [r7, #12]
 80111ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80111cc:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80111d0:	d10f      	bne.n	80111f2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80111d2:	68fb      	ldr	r3, [r7, #12]
 80111d4:	681b      	ldr	r3, [r3, #0]
 80111d6:	681a      	ldr	r2, [r3, #0]
 80111d8:	68fb      	ldr	r3, [r7, #12]
 80111da:	681b      	ldr	r3, [r3, #0]
 80111dc:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80111e0:	601a      	str	r2, [r3, #0]
 80111e2:	68fb      	ldr	r3, [r7, #12]
 80111e4:	681b      	ldr	r3, [r3, #0]
 80111e6:	681a      	ldr	r2, [r3, #0]
 80111e8:	68fb      	ldr	r3, [r7, #12]
 80111ea:	681b      	ldr	r3, [r3, #0]
 80111ec:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80111f0:	601a      	str	r2, [r3, #0]
 80111f2:	68fb      	ldr	r3, [r7, #12]
 80111f4:	2201      	movs	r2, #1
 80111f6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80111fa:	68fb      	ldr	r3, [r7, #12]
 80111fc:	2200      	movs	r2, #0
 80111fe:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8011202:	2303      	movs	r3, #3
 8011204:	e017      	b.n	8011236 <SPI_WaitFlagStateUntilTimeout+0x102>
 8011206:	697b      	ldr	r3, [r7, #20]
 8011208:	2b00      	cmp	r3, #0
 801120a:	d101      	bne.n	8011210 <SPI_WaitFlagStateUntilTimeout+0xdc>
 801120c:	2300      	movs	r3, #0
 801120e:	61fb      	str	r3, [r7, #28]
 8011210:	697b      	ldr	r3, [r7, #20]
 8011212:	3b01      	subs	r3, #1
 8011214:	617b      	str	r3, [r7, #20]
 8011216:	68fb      	ldr	r3, [r7, #12]
 8011218:	681b      	ldr	r3, [r3, #0]
 801121a:	689a      	ldr	r2, [r3, #8]
 801121c:	68bb      	ldr	r3, [r7, #8]
 801121e:	4013      	ands	r3, r2
 8011220:	68ba      	ldr	r2, [r7, #8]
 8011222:	429a      	cmp	r2, r3
 8011224:	bf0c      	ite	eq
 8011226:	2301      	moveq	r3, #1
 8011228:	2300      	movne	r3, #0
 801122a:	b2db      	uxtb	r3, r3
 801122c:	461a      	mov	r2, r3
 801122e:	79fb      	ldrb	r3, [r7, #7]
 8011230:	429a      	cmp	r2, r3
 8011232:	d19b      	bne.n	801116c <SPI_WaitFlagStateUntilTimeout+0x38>
 8011234:	2300      	movs	r3, #0
 8011236:	4618      	mov	r0, r3
 8011238:	3720      	adds	r7, #32
 801123a:	46bd      	mov	sp, r7
 801123c:	bd80      	pop	{r7, pc}
 801123e:	bf00      	nop
 8011240:	20000004 	.word	0x20000004

08011244 <SPI_EndRxTransaction>:
 8011244:	b580      	push	{r7, lr}
 8011246:	b086      	sub	sp, #24
 8011248:	af02      	add	r7, sp, #8
 801124a:	60f8      	str	r0, [r7, #12]
 801124c:	60b9      	str	r1, [r7, #8]
 801124e:	607a      	str	r2, [r7, #4]
 8011250:	68fb      	ldr	r3, [r7, #12]
 8011252:	685b      	ldr	r3, [r3, #4]
 8011254:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011258:	d111      	bne.n	801127e <SPI_EndRxTransaction+0x3a>
 801125a:	68fb      	ldr	r3, [r7, #12]
 801125c:	689b      	ldr	r3, [r3, #8]
 801125e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8011262:	d004      	beq.n	801126e <SPI_EndRxTransaction+0x2a>
 8011264:	68fb      	ldr	r3, [r7, #12]
 8011266:	689b      	ldr	r3, [r3, #8]
 8011268:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801126c:	d107      	bne.n	801127e <SPI_EndRxTransaction+0x3a>
 801126e:	68fb      	ldr	r3, [r7, #12]
 8011270:	681b      	ldr	r3, [r3, #0]
 8011272:	681a      	ldr	r2, [r3, #0]
 8011274:	68fb      	ldr	r3, [r7, #12]
 8011276:	681b      	ldr	r3, [r3, #0]
 8011278:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 801127c:	601a      	str	r2, [r3, #0]
 801127e:	68fb      	ldr	r3, [r7, #12]
 8011280:	685b      	ldr	r3, [r3, #4]
 8011282:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011286:	d12a      	bne.n	80112de <SPI_EndRxTransaction+0x9a>
 8011288:	68fb      	ldr	r3, [r7, #12]
 801128a:	689b      	ldr	r3, [r3, #8]
 801128c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011290:	d012      	beq.n	80112b8 <SPI_EndRxTransaction+0x74>
 8011292:	687b      	ldr	r3, [r7, #4]
 8011294:	9300      	str	r3, [sp, #0]
 8011296:	68bb      	ldr	r3, [r7, #8]
 8011298:	2200      	movs	r2, #0
 801129a:	2180      	movs	r1, #128	@ 0x80
 801129c:	68f8      	ldr	r0, [r7, #12]
 801129e:	f7ff ff49 	bl	8011134 <SPI_WaitFlagStateUntilTimeout>
 80112a2:	4603      	mov	r3, r0
 80112a4:	2b00      	cmp	r3, #0
 80112a6:	d02d      	beq.n	8011304 <SPI_EndRxTransaction+0xc0>
 80112a8:	68fb      	ldr	r3, [r7, #12]
 80112aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80112ac:	f043 0220 	orr.w	r2, r3, #32
 80112b0:	68fb      	ldr	r3, [r7, #12]
 80112b2:	655a      	str	r2, [r3, #84]	@ 0x54
 80112b4:	2303      	movs	r3, #3
 80112b6:	e026      	b.n	8011306 <SPI_EndRxTransaction+0xc2>
 80112b8:	687b      	ldr	r3, [r7, #4]
 80112ba:	9300      	str	r3, [sp, #0]
 80112bc:	68bb      	ldr	r3, [r7, #8]
 80112be:	2200      	movs	r2, #0
 80112c0:	2101      	movs	r1, #1
 80112c2:	68f8      	ldr	r0, [r7, #12]
 80112c4:	f7ff ff36 	bl	8011134 <SPI_WaitFlagStateUntilTimeout>
 80112c8:	4603      	mov	r3, r0
 80112ca:	2b00      	cmp	r3, #0
 80112cc:	d01a      	beq.n	8011304 <SPI_EndRxTransaction+0xc0>
 80112ce:	68fb      	ldr	r3, [r7, #12]
 80112d0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80112d2:	f043 0220 	orr.w	r2, r3, #32
 80112d6:	68fb      	ldr	r3, [r7, #12]
 80112d8:	655a      	str	r2, [r3, #84]	@ 0x54
 80112da:	2303      	movs	r3, #3
 80112dc:	e013      	b.n	8011306 <SPI_EndRxTransaction+0xc2>
 80112de:	687b      	ldr	r3, [r7, #4]
 80112e0:	9300      	str	r3, [sp, #0]
 80112e2:	68bb      	ldr	r3, [r7, #8]
 80112e4:	2200      	movs	r2, #0
 80112e6:	2101      	movs	r1, #1
 80112e8:	68f8      	ldr	r0, [r7, #12]
 80112ea:	f7ff ff23 	bl	8011134 <SPI_WaitFlagStateUntilTimeout>
 80112ee:	4603      	mov	r3, r0
 80112f0:	2b00      	cmp	r3, #0
 80112f2:	d007      	beq.n	8011304 <SPI_EndRxTransaction+0xc0>
 80112f4:	68fb      	ldr	r3, [r7, #12]
 80112f6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80112f8:	f043 0220 	orr.w	r2, r3, #32
 80112fc:	68fb      	ldr	r3, [r7, #12]
 80112fe:	655a      	str	r2, [r3, #84]	@ 0x54
 8011300:	2303      	movs	r3, #3
 8011302:	e000      	b.n	8011306 <SPI_EndRxTransaction+0xc2>
 8011304:	2300      	movs	r3, #0
 8011306:	4618      	mov	r0, r3
 8011308:	3710      	adds	r7, #16
 801130a:	46bd      	mov	sp, r7
 801130c:	bd80      	pop	{r7, pc}
	...

08011310 <SPI_EndRxTxTransaction>:
 8011310:	b580      	push	{r7, lr}
 8011312:	b088      	sub	sp, #32
 8011314:	af02      	add	r7, sp, #8
 8011316:	60f8      	str	r0, [r7, #12]
 8011318:	60b9      	str	r1, [r7, #8]
 801131a:	607a      	str	r2, [r7, #4]
 801131c:	4b1b      	ldr	r3, [pc, #108]	@ (801138c <SPI_EndRxTxTransaction+0x7c>)
 801131e:	681b      	ldr	r3, [r3, #0]
 8011320:	4a1b      	ldr	r2, [pc, #108]	@ (8011390 <SPI_EndRxTxTransaction+0x80>)
 8011322:	fba2 2303 	umull	r2, r3, r2, r3
 8011326:	0d5b      	lsrs	r3, r3, #21
 8011328:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 801132c:	fb02 f303 	mul.w	r3, r2, r3
 8011330:	617b      	str	r3, [r7, #20]
 8011332:	68fb      	ldr	r3, [r7, #12]
 8011334:	685b      	ldr	r3, [r3, #4]
 8011336:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 801133a:	d112      	bne.n	8011362 <SPI_EndRxTxTransaction+0x52>
 801133c:	687b      	ldr	r3, [r7, #4]
 801133e:	9300      	str	r3, [sp, #0]
 8011340:	68bb      	ldr	r3, [r7, #8]
 8011342:	2200      	movs	r2, #0
 8011344:	2180      	movs	r1, #128	@ 0x80
 8011346:	68f8      	ldr	r0, [r7, #12]
 8011348:	f7ff fef4 	bl	8011134 <SPI_WaitFlagStateUntilTimeout>
 801134c:	4603      	mov	r3, r0
 801134e:	2b00      	cmp	r3, #0
 8011350:	d016      	beq.n	8011380 <SPI_EndRxTxTransaction+0x70>
 8011352:	68fb      	ldr	r3, [r7, #12]
 8011354:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011356:	f043 0220 	orr.w	r2, r3, #32
 801135a:	68fb      	ldr	r3, [r7, #12]
 801135c:	655a      	str	r2, [r3, #84]	@ 0x54
 801135e:	2303      	movs	r3, #3
 8011360:	e00f      	b.n	8011382 <SPI_EndRxTxTransaction+0x72>
 8011362:	697b      	ldr	r3, [r7, #20]
 8011364:	2b00      	cmp	r3, #0
 8011366:	d00a      	beq.n	801137e <SPI_EndRxTxTransaction+0x6e>
 8011368:	697b      	ldr	r3, [r7, #20]
 801136a:	3b01      	subs	r3, #1
 801136c:	617b      	str	r3, [r7, #20]
 801136e:	68fb      	ldr	r3, [r7, #12]
 8011370:	681b      	ldr	r3, [r3, #0]
 8011372:	689b      	ldr	r3, [r3, #8]
 8011374:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011378:	2b80      	cmp	r3, #128	@ 0x80
 801137a:	d0f2      	beq.n	8011362 <SPI_EndRxTxTransaction+0x52>
 801137c:	e000      	b.n	8011380 <SPI_EndRxTxTransaction+0x70>
 801137e:	bf00      	nop
 8011380:	2300      	movs	r3, #0
 8011382:	4618      	mov	r0, r3
 8011384:	3718      	adds	r7, #24
 8011386:	46bd      	mov	sp, r7
 8011388:	bd80      	pop	{r7, pc}
 801138a:	bf00      	nop
 801138c:	20000004 	.word	0x20000004
 8011390:	165e9f81 	.word	0x165e9f81

08011394 <HAL_TIM_Base_Init>:
 8011394:	b580      	push	{r7, lr}
 8011396:	b082      	sub	sp, #8
 8011398:	af00      	add	r7, sp, #0
 801139a:	6078      	str	r0, [r7, #4]
 801139c:	687b      	ldr	r3, [r7, #4]
 801139e:	2b00      	cmp	r3, #0
 80113a0:	d101      	bne.n	80113a6 <HAL_TIM_Base_Init+0x12>
 80113a2:	2301      	movs	r3, #1
 80113a4:	e041      	b.n	801142a <HAL_TIM_Base_Init+0x96>
 80113a6:	687b      	ldr	r3, [r7, #4]
 80113a8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80113ac:	b2db      	uxtb	r3, r3
 80113ae:	2b00      	cmp	r3, #0
 80113b0:	d106      	bne.n	80113c0 <HAL_TIM_Base_Init+0x2c>
 80113b2:	687b      	ldr	r3, [r7, #4]
 80113b4:	2200      	movs	r2, #0
 80113b6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80113ba:	6878      	ldr	r0, [r7, #4]
 80113bc:	f7f2 fff6 	bl	80043ac <HAL_TIM_Base_MspInit>
 80113c0:	687b      	ldr	r3, [r7, #4]
 80113c2:	2202      	movs	r2, #2
 80113c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80113c8:	687b      	ldr	r3, [r7, #4]
 80113ca:	681a      	ldr	r2, [r3, #0]
 80113cc:	687b      	ldr	r3, [r7, #4]
 80113ce:	3304      	adds	r3, #4
 80113d0:	4619      	mov	r1, r3
 80113d2:	4610      	mov	r0, r2
 80113d4:	f000 fd24 	bl	8011e20 <TIM_Base_SetConfig>
 80113d8:	687b      	ldr	r3, [r7, #4]
 80113da:	2201      	movs	r2, #1
 80113dc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80113e0:	687b      	ldr	r3, [r7, #4]
 80113e2:	2201      	movs	r2, #1
 80113e4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80113e8:	687b      	ldr	r3, [r7, #4]
 80113ea:	2201      	movs	r2, #1
 80113ec:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80113f0:	687b      	ldr	r3, [r7, #4]
 80113f2:	2201      	movs	r2, #1
 80113f4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80113f8:	687b      	ldr	r3, [r7, #4]
 80113fa:	2201      	movs	r2, #1
 80113fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011400:	687b      	ldr	r3, [r7, #4]
 8011402:	2201      	movs	r2, #1
 8011404:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8011408:	687b      	ldr	r3, [r7, #4]
 801140a:	2201      	movs	r2, #1
 801140c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8011410:	687b      	ldr	r3, [r7, #4]
 8011412:	2201      	movs	r2, #1
 8011414:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8011418:	687b      	ldr	r3, [r7, #4]
 801141a:	2201      	movs	r2, #1
 801141c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8011420:	687b      	ldr	r3, [r7, #4]
 8011422:	2201      	movs	r2, #1
 8011424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011428:	2300      	movs	r3, #0
 801142a:	4618      	mov	r0, r3
 801142c:	3708      	adds	r7, #8
 801142e:	46bd      	mov	sp, r7
 8011430:	bd80      	pop	{r7, pc}
	...

08011434 <HAL_TIM_Base_Start_IT>:
 8011434:	b480      	push	{r7}
 8011436:	b085      	sub	sp, #20
 8011438:	af00      	add	r7, sp, #0
 801143a:	6078      	str	r0, [r7, #4]
 801143c:	687b      	ldr	r3, [r7, #4]
 801143e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8011442:	b2db      	uxtb	r3, r3
 8011444:	2b01      	cmp	r3, #1
 8011446:	d001      	beq.n	801144c <HAL_TIM_Base_Start_IT+0x18>
 8011448:	2301      	movs	r3, #1
 801144a:	e04e      	b.n	80114ea <HAL_TIM_Base_Start_IT+0xb6>
 801144c:	687b      	ldr	r3, [r7, #4]
 801144e:	2202      	movs	r2, #2
 8011450:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011454:	687b      	ldr	r3, [r7, #4]
 8011456:	681b      	ldr	r3, [r3, #0]
 8011458:	68da      	ldr	r2, [r3, #12]
 801145a:	687b      	ldr	r3, [r7, #4]
 801145c:	681b      	ldr	r3, [r3, #0]
 801145e:	f042 0201 	orr.w	r2, r2, #1
 8011462:	60da      	str	r2, [r3, #12]
 8011464:	687b      	ldr	r3, [r7, #4]
 8011466:	681b      	ldr	r3, [r3, #0]
 8011468:	4a23      	ldr	r2, [pc, #140]	@ (80114f8 <HAL_TIM_Base_Start_IT+0xc4>)
 801146a:	4293      	cmp	r3, r2
 801146c:	d022      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 801146e:	687b      	ldr	r3, [r7, #4]
 8011470:	681b      	ldr	r3, [r3, #0]
 8011472:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011476:	d01d      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 8011478:	687b      	ldr	r3, [r7, #4]
 801147a:	681b      	ldr	r3, [r3, #0]
 801147c:	4a1f      	ldr	r2, [pc, #124]	@ (80114fc <HAL_TIM_Base_Start_IT+0xc8>)
 801147e:	4293      	cmp	r3, r2
 8011480:	d018      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 8011482:	687b      	ldr	r3, [r7, #4]
 8011484:	681b      	ldr	r3, [r3, #0]
 8011486:	4a1e      	ldr	r2, [pc, #120]	@ (8011500 <HAL_TIM_Base_Start_IT+0xcc>)
 8011488:	4293      	cmp	r3, r2
 801148a:	d013      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 801148c:	687b      	ldr	r3, [r7, #4]
 801148e:	681b      	ldr	r3, [r3, #0]
 8011490:	4a1c      	ldr	r2, [pc, #112]	@ (8011504 <HAL_TIM_Base_Start_IT+0xd0>)
 8011492:	4293      	cmp	r3, r2
 8011494:	d00e      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 8011496:	687b      	ldr	r3, [r7, #4]
 8011498:	681b      	ldr	r3, [r3, #0]
 801149a:	4a1b      	ldr	r2, [pc, #108]	@ (8011508 <HAL_TIM_Base_Start_IT+0xd4>)
 801149c:	4293      	cmp	r3, r2
 801149e:	d009      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 80114a0:	687b      	ldr	r3, [r7, #4]
 80114a2:	681b      	ldr	r3, [r3, #0]
 80114a4:	4a19      	ldr	r2, [pc, #100]	@ (801150c <HAL_TIM_Base_Start_IT+0xd8>)
 80114a6:	4293      	cmp	r3, r2
 80114a8:	d004      	beq.n	80114b4 <HAL_TIM_Base_Start_IT+0x80>
 80114aa:	687b      	ldr	r3, [r7, #4]
 80114ac:	681b      	ldr	r3, [r3, #0]
 80114ae:	4a18      	ldr	r2, [pc, #96]	@ (8011510 <HAL_TIM_Base_Start_IT+0xdc>)
 80114b0:	4293      	cmp	r3, r2
 80114b2:	d111      	bne.n	80114d8 <HAL_TIM_Base_Start_IT+0xa4>
 80114b4:	687b      	ldr	r3, [r7, #4]
 80114b6:	681b      	ldr	r3, [r3, #0]
 80114b8:	689b      	ldr	r3, [r3, #8]
 80114ba:	f003 0307 	and.w	r3, r3, #7
 80114be:	60fb      	str	r3, [r7, #12]
 80114c0:	68fb      	ldr	r3, [r7, #12]
 80114c2:	2b06      	cmp	r3, #6
 80114c4:	d010      	beq.n	80114e8 <HAL_TIM_Base_Start_IT+0xb4>
 80114c6:	687b      	ldr	r3, [r7, #4]
 80114c8:	681b      	ldr	r3, [r3, #0]
 80114ca:	681a      	ldr	r2, [r3, #0]
 80114cc:	687b      	ldr	r3, [r7, #4]
 80114ce:	681b      	ldr	r3, [r3, #0]
 80114d0:	f042 0201 	orr.w	r2, r2, #1
 80114d4:	601a      	str	r2, [r3, #0]
 80114d6:	e007      	b.n	80114e8 <HAL_TIM_Base_Start_IT+0xb4>
 80114d8:	687b      	ldr	r3, [r7, #4]
 80114da:	681b      	ldr	r3, [r3, #0]
 80114dc:	681a      	ldr	r2, [r3, #0]
 80114de:	687b      	ldr	r3, [r7, #4]
 80114e0:	681b      	ldr	r3, [r3, #0]
 80114e2:	f042 0201 	orr.w	r2, r2, #1
 80114e6:	601a      	str	r2, [r3, #0]
 80114e8:	2300      	movs	r3, #0
 80114ea:	4618      	mov	r0, r3
 80114ec:	3714      	adds	r7, #20
 80114ee:	46bd      	mov	sp, r7
 80114f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114f4:	4770      	bx	lr
 80114f6:	bf00      	nop
 80114f8:	40010000 	.word	0x40010000
 80114fc:	40000400 	.word	0x40000400
 8011500:	40000800 	.word	0x40000800
 8011504:	40000c00 	.word	0x40000c00
 8011508:	40010400 	.word	0x40010400
 801150c:	40014000 	.word	0x40014000
 8011510:	40001800 	.word	0x40001800

08011514 <HAL_TIM_OC_Init>:
 8011514:	b580      	push	{r7, lr}
 8011516:	b082      	sub	sp, #8
 8011518:	af00      	add	r7, sp, #0
 801151a:	6078      	str	r0, [r7, #4]
 801151c:	687b      	ldr	r3, [r7, #4]
 801151e:	2b00      	cmp	r3, #0
 8011520:	d101      	bne.n	8011526 <HAL_TIM_OC_Init+0x12>
 8011522:	2301      	movs	r3, #1
 8011524:	e041      	b.n	80115aa <HAL_TIM_OC_Init+0x96>
 8011526:	687b      	ldr	r3, [r7, #4]
 8011528:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 801152c:	b2db      	uxtb	r3, r3
 801152e:	2b00      	cmp	r3, #0
 8011530:	d106      	bne.n	8011540 <HAL_TIM_OC_Init+0x2c>
 8011532:	687b      	ldr	r3, [r7, #4]
 8011534:	2200      	movs	r2, #0
 8011536:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801153a:	6878      	ldr	r0, [r7, #4]
 801153c:	f000 f839 	bl	80115b2 <HAL_TIM_OC_MspInit>
 8011540:	687b      	ldr	r3, [r7, #4]
 8011542:	2202      	movs	r2, #2
 8011544:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011548:	687b      	ldr	r3, [r7, #4]
 801154a:	681a      	ldr	r2, [r3, #0]
 801154c:	687b      	ldr	r3, [r7, #4]
 801154e:	3304      	adds	r3, #4
 8011550:	4619      	mov	r1, r3
 8011552:	4610      	mov	r0, r2
 8011554:	f000 fc64 	bl	8011e20 <TIM_Base_SetConfig>
 8011558:	687b      	ldr	r3, [r7, #4]
 801155a:	2201      	movs	r2, #1
 801155c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8011560:	687b      	ldr	r3, [r7, #4]
 8011562:	2201      	movs	r2, #1
 8011564:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011568:	687b      	ldr	r3, [r7, #4]
 801156a:	2201      	movs	r2, #1
 801156c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8011570:	687b      	ldr	r3, [r7, #4]
 8011572:	2201      	movs	r2, #1
 8011574:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8011578:	687b      	ldr	r3, [r7, #4]
 801157a:	2201      	movs	r2, #1
 801157c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011580:	687b      	ldr	r3, [r7, #4]
 8011582:	2201      	movs	r2, #1
 8011584:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8011588:	687b      	ldr	r3, [r7, #4]
 801158a:	2201      	movs	r2, #1
 801158c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8011590:	687b      	ldr	r3, [r7, #4]
 8011592:	2201      	movs	r2, #1
 8011594:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8011598:	687b      	ldr	r3, [r7, #4]
 801159a:	2201      	movs	r2, #1
 801159c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80115a0:	687b      	ldr	r3, [r7, #4]
 80115a2:	2201      	movs	r2, #1
 80115a4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80115a8:	2300      	movs	r3, #0
 80115aa:	4618      	mov	r0, r3
 80115ac:	3708      	adds	r7, #8
 80115ae:	46bd      	mov	sp, r7
 80115b0:	bd80      	pop	{r7, pc}

080115b2 <HAL_TIM_OC_MspInit>:
 80115b2:	b480      	push	{r7}
 80115b4:	b083      	sub	sp, #12
 80115b6:	af00      	add	r7, sp, #0
 80115b8:	6078      	str	r0, [r7, #4]
 80115ba:	bf00      	nop
 80115bc:	370c      	adds	r7, #12
 80115be:	46bd      	mov	sp, r7
 80115c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115c4:	4770      	bx	lr

080115c6 <HAL_TIM_PWM_Init>:
 80115c6:	b580      	push	{r7, lr}
 80115c8:	b082      	sub	sp, #8
 80115ca:	af00      	add	r7, sp, #0
 80115cc:	6078      	str	r0, [r7, #4]
 80115ce:	687b      	ldr	r3, [r7, #4]
 80115d0:	2b00      	cmp	r3, #0
 80115d2:	d101      	bne.n	80115d8 <HAL_TIM_PWM_Init+0x12>
 80115d4:	2301      	movs	r3, #1
 80115d6:	e041      	b.n	801165c <HAL_TIM_PWM_Init+0x96>
 80115d8:	687b      	ldr	r3, [r7, #4]
 80115da:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80115de:	b2db      	uxtb	r3, r3
 80115e0:	2b00      	cmp	r3, #0
 80115e2:	d106      	bne.n	80115f2 <HAL_TIM_PWM_Init+0x2c>
 80115e4:	687b      	ldr	r3, [r7, #4]
 80115e6:	2200      	movs	r2, #0
 80115e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80115ec:	6878      	ldr	r0, [r7, #4]
 80115ee:	f7f2 ff1b 	bl	8004428 <HAL_TIM_PWM_MspInit>
 80115f2:	687b      	ldr	r3, [r7, #4]
 80115f4:	2202      	movs	r2, #2
 80115f6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80115fa:	687b      	ldr	r3, [r7, #4]
 80115fc:	681a      	ldr	r2, [r3, #0]
 80115fe:	687b      	ldr	r3, [r7, #4]
 8011600:	3304      	adds	r3, #4
 8011602:	4619      	mov	r1, r3
 8011604:	4610      	mov	r0, r2
 8011606:	f000 fc0b 	bl	8011e20 <TIM_Base_SetConfig>
 801160a:	687b      	ldr	r3, [r7, #4]
 801160c:	2201      	movs	r2, #1
 801160e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8011612:	687b      	ldr	r3, [r7, #4]
 8011614:	2201      	movs	r2, #1
 8011616:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801161a:	687b      	ldr	r3, [r7, #4]
 801161c:	2201      	movs	r2, #1
 801161e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8011622:	687b      	ldr	r3, [r7, #4]
 8011624:	2201      	movs	r2, #1
 8011626:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 801162a:	687b      	ldr	r3, [r7, #4]
 801162c:	2201      	movs	r2, #1
 801162e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011632:	687b      	ldr	r3, [r7, #4]
 8011634:	2201      	movs	r2, #1
 8011636:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 801163a:	687b      	ldr	r3, [r7, #4]
 801163c:	2201      	movs	r2, #1
 801163e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8011642:	687b      	ldr	r3, [r7, #4]
 8011644:	2201      	movs	r2, #1
 8011646:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801164a:	687b      	ldr	r3, [r7, #4]
 801164c:	2201      	movs	r2, #1
 801164e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8011652:	687b      	ldr	r3, [r7, #4]
 8011654:	2201      	movs	r2, #1
 8011656:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801165a:	2300      	movs	r3, #0
 801165c:	4618      	mov	r0, r3
 801165e:	3708      	adds	r7, #8
 8011660:	46bd      	mov	sp, r7
 8011662:	bd80      	pop	{r7, pc}

08011664 <HAL_TIM_PWM_Start>:
 8011664:	b580      	push	{r7, lr}
 8011666:	b084      	sub	sp, #16
 8011668:	af00      	add	r7, sp, #0
 801166a:	6078      	str	r0, [r7, #4]
 801166c:	6039      	str	r1, [r7, #0]
 801166e:	683b      	ldr	r3, [r7, #0]
 8011670:	2b00      	cmp	r3, #0
 8011672:	d109      	bne.n	8011688 <HAL_TIM_PWM_Start+0x24>
 8011674:	687b      	ldr	r3, [r7, #4]
 8011676:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 801167a:	b2db      	uxtb	r3, r3
 801167c:	2b01      	cmp	r3, #1
 801167e:	bf14      	ite	ne
 8011680:	2301      	movne	r3, #1
 8011682:	2300      	moveq	r3, #0
 8011684:	b2db      	uxtb	r3, r3
 8011686:	e022      	b.n	80116ce <HAL_TIM_PWM_Start+0x6a>
 8011688:	683b      	ldr	r3, [r7, #0]
 801168a:	2b04      	cmp	r3, #4
 801168c:	d109      	bne.n	80116a2 <HAL_TIM_PWM_Start+0x3e>
 801168e:	687b      	ldr	r3, [r7, #4]
 8011690:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8011694:	b2db      	uxtb	r3, r3
 8011696:	2b01      	cmp	r3, #1
 8011698:	bf14      	ite	ne
 801169a:	2301      	movne	r3, #1
 801169c:	2300      	moveq	r3, #0
 801169e:	b2db      	uxtb	r3, r3
 80116a0:	e015      	b.n	80116ce <HAL_TIM_PWM_Start+0x6a>
 80116a2:	683b      	ldr	r3, [r7, #0]
 80116a4:	2b08      	cmp	r3, #8
 80116a6:	d109      	bne.n	80116bc <HAL_TIM_PWM_Start+0x58>
 80116a8:	687b      	ldr	r3, [r7, #4]
 80116aa:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80116ae:	b2db      	uxtb	r3, r3
 80116b0:	2b01      	cmp	r3, #1
 80116b2:	bf14      	ite	ne
 80116b4:	2301      	movne	r3, #1
 80116b6:	2300      	moveq	r3, #0
 80116b8:	b2db      	uxtb	r3, r3
 80116ba:	e008      	b.n	80116ce <HAL_TIM_PWM_Start+0x6a>
 80116bc:	687b      	ldr	r3, [r7, #4]
 80116be:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80116c2:	b2db      	uxtb	r3, r3
 80116c4:	2b01      	cmp	r3, #1
 80116c6:	bf14      	ite	ne
 80116c8:	2301      	movne	r3, #1
 80116ca:	2300      	moveq	r3, #0
 80116cc:	b2db      	uxtb	r3, r3
 80116ce:	2b00      	cmp	r3, #0
 80116d0:	d001      	beq.n	80116d6 <HAL_TIM_PWM_Start+0x72>
 80116d2:	2301      	movs	r3, #1
 80116d4:	e07c      	b.n	80117d0 <HAL_TIM_PWM_Start+0x16c>
 80116d6:	683b      	ldr	r3, [r7, #0]
 80116d8:	2b00      	cmp	r3, #0
 80116da:	d104      	bne.n	80116e6 <HAL_TIM_PWM_Start+0x82>
 80116dc:	687b      	ldr	r3, [r7, #4]
 80116de:	2202      	movs	r2, #2
 80116e0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80116e4:	e013      	b.n	801170e <HAL_TIM_PWM_Start+0xaa>
 80116e6:	683b      	ldr	r3, [r7, #0]
 80116e8:	2b04      	cmp	r3, #4
 80116ea:	d104      	bne.n	80116f6 <HAL_TIM_PWM_Start+0x92>
 80116ec:	687b      	ldr	r3, [r7, #4]
 80116ee:	2202      	movs	r2, #2
 80116f0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80116f4:	e00b      	b.n	801170e <HAL_TIM_PWM_Start+0xaa>
 80116f6:	683b      	ldr	r3, [r7, #0]
 80116f8:	2b08      	cmp	r3, #8
 80116fa:	d104      	bne.n	8011706 <HAL_TIM_PWM_Start+0xa2>
 80116fc:	687b      	ldr	r3, [r7, #4]
 80116fe:	2202      	movs	r2, #2
 8011700:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8011704:	e003      	b.n	801170e <HAL_TIM_PWM_Start+0xaa>
 8011706:	687b      	ldr	r3, [r7, #4]
 8011708:	2202      	movs	r2, #2
 801170a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 801170e:	687b      	ldr	r3, [r7, #4]
 8011710:	681b      	ldr	r3, [r3, #0]
 8011712:	2201      	movs	r2, #1
 8011714:	6839      	ldr	r1, [r7, #0]
 8011716:	4618      	mov	r0, r3
 8011718:	f000 fe6c 	bl	80123f4 <TIM_CCxChannelCmd>
 801171c:	687b      	ldr	r3, [r7, #4]
 801171e:	681b      	ldr	r3, [r3, #0]
 8011720:	4a2d      	ldr	r2, [pc, #180]	@ (80117d8 <HAL_TIM_PWM_Start+0x174>)
 8011722:	4293      	cmp	r3, r2
 8011724:	d004      	beq.n	8011730 <HAL_TIM_PWM_Start+0xcc>
 8011726:	687b      	ldr	r3, [r7, #4]
 8011728:	681b      	ldr	r3, [r3, #0]
 801172a:	4a2c      	ldr	r2, [pc, #176]	@ (80117dc <HAL_TIM_PWM_Start+0x178>)
 801172c:	4293      	cmp	r3, r2
 801172e:	d101      	bne.n	8011734 <HAL_TIM_PWM_Start+0xd0>
 8011730:	2301      	movs	r3, #1
 8011732:	e000      	b.n	8011736 <HAL_TIM_PWM_Start+0xd2>
 8011734:	2300      	movs	r3, #0
 8011736:	2b00      	cmp	r3, #0
 8011738:	d007      	beq.n	801174a <HAL_TIM_PWM_Start+0xe6>
 801173a:	687b      	ldr	r3, [r7, #4]
 801173c:	681b      	ldr	r3, [r3, #0]
 801173e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8011740:	687b      	ldr	r3, [r7, #4]
 8011742:	681b      	ldr	r3, [r3, #0]
 8011744:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8011748:	645a      	str	r2, [r3, #68]	@ 0x44
 801174a:	687b      	ldr	r3, [r7, #4]
 801174c:	681b      	ldr	r3, [r3, #0]
 801174e:	4a22      	ldr	r2, [pc, #136]	@ (80117d8 <HAL_TIM_PWM_Start+0x174>)
 8011750:	4293      	cmp	r3, r2
 8011752:	d022      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 8011754:	687b      	ldr	r3, [r7, #4]
 8011756:	681b      	ldr	r3, [r3, #0]
 8011758:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801175c:	d01d      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 801175e:	687b      	ldr	r3, [r7, #4]
 8011760:	681b      	ldr	r3, [r3, #0]
 8011762:	4a1f      	ldr	r2, [pc, #124]	@ (80117e0 <HAL_TIM_PWM_Start+0x17c>)
 8011764:	4293      	cmp	r3, r2
 8011766:	d018      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 8011768:	687b      	ldr	r3, [r7, #4]
 801176a:	681b      	ldr	r3, [r3, #0]
 801176c:	4a1d      	ldr	r2, [pc, #116]	@ (80117e4 <HAL_TIM_PWM_Start+0x180>)
 801176e:	4293      	cmp	r3, r2
 8011770:	d013      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 8011772:	687b      	ldr	r3, [r7, #4]
 8011774:	681b      	ldr	r3, [r3, #0]
 8011776:	4a1c      	ldr	r2, [pc, #112]	@ (80117e8 <HAL_TIM_PWM_Start+0x184>)
 8011778:	4293      	cmp	r3, r2
 801177a:	d00e      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 801177c:	687b      	ldr	r3, [r7, #4]
 801177e:	681b      	ldr	r3, [r3, #0]
 8011780:	4a16      	ldr	r2, [pc, #88]	@ (80117dc <HAL_TIM_PWM_Start+0x178>)
 8011782:	4293      	cmp	r3, r2
 8011784:	d009      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 8011786:	687b      	ldr	r3, [r7, #4]
 8011788:	681b      	ldr	r3, [r3, #0]
 801178a:	4a18      	ldr	r2, [pc, #96]	@ (80117ec <HAL_TIM_PWM_Start+0x188>)
 801178c:	4293      	cmp	r3, r2
 801178e:	d004      	beq.n	801179a <HAL_TIM_PWM_Start+0x136>
 8011790:	687b      	ldr	r3, [r7, #4]
 8011792:	681b      	ldr	r3, [r3, #0]
 8011794:	4a16      	ldr	r2, [pc, #88]	@ (80117f0 <HAL_TIM_PWM_Start+0x18c>)
 8011796:	4293      	cmp	r3, r2
 8011798:	d111      	bne.n	80117be <HAL_TIM_PWM_Start+0x15a>
 801179a:	687b      	ldr	r3, [r7, #4]
 801179c:	681b      	ldr	r3, [r3, #0]
 801179e:	689b      	ldr	r3, [r3, #8]
 80117a0:	f003 0307 	and.w	r3, r3, #7
 80117a4:	60fb      	str	r3, [r7, #12]
 80117a6:	68fb      	ldr	r3, [r7, #12]
 80117a8:	2b06      	cmp	r3, #6
 80117aa:	d010      	beq.n	80117ce <HAL_TIM_PWM_Start+0x16a>
 80117ac:	687b      	ldr	r3, [r7, #4]
 80117ae:	681b      	ldr	r3, [r3, #0]
 80117b0:	681a      	ldr	r2, [r3, #0]
 80117b2:	687b      	ldr	r3, [r7, #4]
 80117b4:	681b      	ldr	r3, [r3, #0]
 80117b6:	f042 0201 	orr.w	r2, r2, #1
 80117ba:	601a      	str	r2, [r3, #0]
 80117bc:	e007      	b.n	80117ce <HAL_TIM_PWM_Start+0x16a>
 80117be:	687b      	ldr	r3, [r7, #4]
 80117c0:	681b      	ldr	r3, [r3, #0]
 80117c2:	681a      	ldr	r2, [r3, #0]
 80117c4:	687b      	ldr	r3, [r7, #4]
 80117c6:	681b      	ldr	r3, [r3, #0]
 80117c8:	f042 0201 	orr.w	r2, r2, #1
 80117cc:	601a      	str	r2, [r3, #0]
 80117ce:	2300      	movs	r3, #0
 80117d0:	4618      	mov	r0, r3
 80117d2:	3710      	adds	r7, #16
 80117d4:	46bd      	mov	sp, r7
 80117d6:	bd80      	pop	{r7, pc}
 80117d8:	40010000 	.word	0x40010000
 80117dc:	40010400 	.word	0x40010400
 80117e0:	40000400 	.word	0x40000400
 80117e4:	40000800 	.word	0x40000800
 80117e8:	40000c00 	.word	0x40000c00
 80117ec:	40014000 	.word	0x40014000
 80117f0:	40001800 	.word	0x40001800

080117f4 <HAL_TIM_IRQHandler>:
 80117f4:	b580      	push	{r7, lr}
 80117f6:	b082      	sub	sp, #8
 80117f8:	af00      	add	r7, sp, #0
 80117fa:	6078      	str	r0, [r7, #4]
 80117fc:	687b      	ldr	r3, [r7, #4]
 80117fe:	681b      	ldr	r3, [r3, #0]
 8011800:	691b      	ldr	r3, [r3, #16]
 8011802:	f003 0302 	and.w	r3, r3, #2
 8011806:	2b02      	cmp	r3, #2
 8011808:	d122      	bne.n	8011850 <HAL_TIM_IRQHandler+0x5c>
 801180a:	687b      	ldr	r3, [r7, #4]
 801180c:	681b      	ldr	r3, [r3, #0]
 801180e:	68db      	ldr	r3, [r3, #12]
 8011810:	f003 0302 	and.w	r3, r3, #2
 8011814:	2b02      	cmp	r3, #2
 8011816:	d11b      	bne.n	8011850 <HAL_TIM_IRQHandler+0x5c>
 8011818:	687b      	ldr	r3, [r7, #4]
 801181a:	681b      	ldr	r3, [r3, #0]
 801181c:	f06f 0202 	mvn.w	r2, #2
 8011820:	611a      	str	r2, [r3, #16]
 8011822:	687b      	ldr	r3, [r7, #4]
 8011824:	2201      	movs	r2, #1
 8011826:	771a      	strb	r2, [r3, #28]
 8011828:	687b      	ldr	r3, [r7, #4]
 801182a:	681b      	ldr	r3, [r3, #0]
 801182c:	699b      	ldr	r3, [r3, #24]
 801182e:	f003 0303 	and.w	r3, r3, #3
 8011832:	2b00      	cmp	r3, #0
 8011834:	d003      	beq.n	801183e <HAL_TIM_IRQHandler+0x4a>
 8011836:	6878      	ldr	r0, [r7, #4]
 8011838:	f000 fad3 	bl	8011de2 <HAL_TIM_IC_CaptureCallback>
 801183c:	e005      	b.n	801184a <HAL_TIM_IRQHandler+0x56>
 801183e:	6878      	ldr	r0, [r7, #4]
 8011840:	f000 fac5 	bl	8011dce <HAL_TIM_OC_DelayElapsedCallback>
 8011844:	6878      	ldr	r0, [r7, #4]
 8011846:	f000 fad6 	bl	8011df6 <HAL_TIM_PWM_PulseFinishedCallback>
 801184a:	687b      	ldr	r3, [r7, #4]
 801184c:	2200      	movs	r2, #0
 801184e:	771a      	strb	r2, [r3, #28]
 8011850:	687b      	ldr	r3, [r7, #4]
 8011852:	681b      	ldr	r3, [r3, #0]
 8011854:	691b      	ldr	r3, [r3, #16]
 8011856:	f003 0304 	and.w	r3, r3, #4
 801185a:	2b04      	cmp	r3, #4
 801185c:	d122      	bne.n	80118a4 <HAL_TIM_IRQHandler+0xb0>
 801185e:	687b      	ldr	r3, [r7, #4]
 8011860:	681b      	ldr	r3, [r3, #0]
 8011862:	68db      	ldr	r3, [r3, #12]
 8011864:	f003 0304 	and.w	r3, r3, #4
 8011868:	2b04      	cmp	r3, #4
 801186a:	d11b      	bne.n	80118a4 <HAL_TIM_IRQHandler+0xb0>
 801186c:	687b      	ldr	r3, [r7, #4]
 801186e:	681b      	ldr	r3, [r3, #0]
 8011870:	f06f 0204 	mvn.w	r2, #4
 8011874:	611a      	str	r2, [r3, #16]
 8011876:	687b      	ldr	r3, [r7, #4]
 8011878:	2202      	movs	r2, #2
 801187a:	771a      	strb	r2, [r3, #28]
 801187c:	687b      	ldr	r3, [r7, #4]
 801187e:	681b      	ldr	r3, [r3, #0]
 8011880:	699b      	ldr	r3, [r3, #24]
 8011882:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8011886:	2b00      	cmp	r3, #0
 8011888:	d003      	beq.n	8011892 <HAL_TIM_IRQHandler+0x9e>
 801188a:	6878      	ldr	r0, [r7, #4]
 801188c:	f000 faa9 	bl	8011de2 <HAL_TIM_IC_CaptureCallback>
 8011890:	e005      	b.n	801189e <HAL_TIM_IRQHandler+0xaa>
 8011892:	6878      	ldr	r0, [r7, #4]
 8011894:	f000 fa9b 	bl	8011dce <HAL_TIM_OC_DelayElapsedCallback>
 8011898:	6878      	ldr	r0, [r7, #4]
 801189a:	f000 faac 	bl	8011df6 <HAL_TIM_PWM_PulseFinishedCallback>
 801189e:	687b      	ldr	r3, [r7, #4]
 80118a0:	2200      	movs	r2, #0
 80118a2:	771a      	strb	r2, [r3, #28]
 80118a4:	687b      	ldr	r3, [r7, #4]
 80118a6:	681b      	ldr	r3, [r3, #0]
 80118a8:	691b      	ldr	r3, [r3, #16]
 80118aa:	f003 0308 	and.w	r3, r3, #8
 80118ae:	2b08      	cmp	r3, #8
 80118b0:	d122      	bne.n	80118f8 <HAL_TIM_IRQHandler+0x104>
 80118b2:	687b      	ldr	r3, [r7, #4]
 80118b4:	681b      	ldr	r3, [r3, #0]
 80118b6:	68db      	ldr	r3, [r3, #12]
 80118b8:	f003 0308 	and.w	r3, r3, #8
 80118bc:	2b08      	cmp	r3, #8
 80118be:	d11b      	bne.n	80118f8 <HAL_TIM_IRQHandler+0x104>
 80118c0:	687b      	ldr	r3, [r7, #4]
 80118c2:	681b      	ldr	r3, [r3, #0]
 80118c4:	f06f 0208 	mvn.w	r2, #8
 80118c8:	611a      	str	r2, [r3, #16]
 80118ca:	687b      	ldr	r3, [r7, #4]
 80118cc:	2204      	movs	r2, #4
 80118ce:	771a      	strb	r2, [r3, #28]
 80118d0:	687b      	ldr	r3, [r7, #4]
 80118d2:	681b      	ldr	r3, [r3, #0]
 80118d4:	69db      	ldr	r3, [r3, #28]
 80118d6:	f003 0303 	and.w	r3, r3, #3
 80118da:	2b00      	cmp	r3, #0
 80118dc:	d003      	beq.n	80118e6 <HAL_TIM_IRQHandler+0xf2>
 80118de:	6878      	ldr	r0, [r7, #4]
 80118e0:	f000 fa7f 	bl	8011de2 <HAL_TIM_IC_CaptureCallback>
 80118e4:	e005      	b.n	80118f2 <HAL_TIM_IRQHandler+0xfe>
 80118e6:	6878      	ldr	r0, [r7, #4]
 80118e8:	f000 fa71 	bl	8011dce <HAL_TIM_OC_DelayElapsedCallback>
 80118ec:	6878      	ldr	r0, [r7, #4]
 80118ee:	f000 fa82 	bl	8011df6 <HAL_TIM_PWM_PulseFinishedCallback>
 80118f2:	687b      	ldr	r3, [r7, #4]
 80118f4:	2200      	movs	r2, #0
 80118f6:	771a      	strb	r2, [r3, #28]
 80118f8:	687b      	ldr	r3, [r7, #4]
 80118fa:	681b      	ldr	r3, [r3, #0]
 80118fc:	691b      	ldr	r3, [r3, #16]
 80118fe:	f003 0310 	and.w	r3, r3, #16
 8011902:	2b10      	cmp	r3, #16
 8011904:	d122      	bne.n	801194c <HAL_TIM_IRQHandler+0x158>
 8011906:	687b      	ldr	r3, [r7, #4]
 8011908:	681b      	ldr	r3, [r3, #0]
 801190a:	68db      	ldr	r3, [r3, #12]
 801190c:	f003 0310 	and.w	r3, r3, #16
 8011910:	2b10      	cmp	r3, #16
 8011912:	d11b      	bne.n	801194c <HAL_TIM_IRQHandler+0x158>
 8011914:	687b      	ldr	r3, [r7, #4]
 8011916:	681b      	ldr	r3, [r3, #0]
 8011918:	f06f 0210 	mvn.w	r2, #16
 801191c:	611a      	str	r2, [r3, #16]
 801191e:	687b      	ldr	r3, [r7, #4]
 8011920:	2208      	movs	r2, #8
 8011922:	771a      	strb	r2, [r3, #28]
 8011924:	687b      	ldr	r3, [r7, #4]
 8011926:	681b      	ldr	r3, [r3, #0]
 8011928:	69db      	ldr	r3, [r3, #28]
 801192a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 801192e:	2b00      	cmp	r3, #0
 8011930:	d003      	beq.n	801193a <HAL_TIM_IRQHandler+0x146>
 8011932:	6878      	ldr	r0, [r7, #4]
 8011934:	f000 fa55 	bl	8011de2 <HAL_TIM_IC_CaptureCallback>
 8011938:	e005      	b.n	8011946 <HAL_TIM_IRQHandler+0x152>
 801193a:	6878      	ldr	r0, [r7, #4]
 801193c:	f000 fa47 	bl	8011dce <HAL_TIM_OC_DelayElapsedCallback>
 8011940:	6878      	ldr	r0, [r7, #4]
 8011942:	f000 fa58 	bl	8011df6 <HAL_TIM_PWM_PulseFinishedCallback>
 8011946:	687b      	ldr	r3, [r7, #4]
 8011948:	2200      	movs	r2, #0
 801194a:	771a      	strb	r2, [r3, #28]
 801194c:	687b      	ldr	r3, [r7, #4]
 801194e:	681b      	ldr	r3, [r3, #0]
 8011950:	691b      	ldr	r3, [r3, #16]
 8011952:	f003 0301 	and.w	r3, r3, #1
 8011956:	2b01      	cmp	r3, #1
 8011958:	d10e      	bne.n	8011978 <HAL_TIM_IRQHandler+0x184>
 801195a:	687b      	ldr	r3, [r7, #4]
 801195c:	681b      	ldr	r3, [r3, #0]
 801195e:	68db      	ldr	r3, [r3, #12]
 8011960:	f003 0301 	and.w	r3, r3, #1
 8011964:	2b01      	cmp	r3, #1
 8011966:	d107      	bne.n	8011978 <HAL_TIM_IRQHandler+0x184>
 8011968:	687b      	ldr	r3, [r7, #4]
 801196a:	681b      	ldr	r3, [r3, #0]
 801196c:	f06f 0201 	mvn.w	r2, #1
 8011970:	611a      	str	r2, [r3, #16]
 8011972:	6878      	ldr	r0, [r7, #4]
 8011974:	f7f1 ff2e 	bl	80037d4 <HAL_TIM_PeriodElapsedCallback>
 8011978:	687b      	ldr	r3, [r7, #4]
 801197a:	681b      	ldr	r3, [r3, #0]
 801197c:	691b      	ldr	r3, [r3, #16]
 801197e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011982:	2b80      	cmp	r3, #128	@ 0x80
 8011984:	d10e      	bne.n	80119a4 <HAL_TIM_IRQHandler+0x1b0>
 8011986:	687b      	ldr	r3, [r7, #4]
 8011988:	681b      	ldr	r3, [r3, #0]
 801198a:	68db      	ldr	r3, [r3, #12]
 801198c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011990:	2b80      	cmp	r3, #128	@ 0x80
 8011992:	d107      	bne.n	80119a4 <HAL_TIM_IRQHandler+0x1b0>
 8011994:	687b      	ldr	r3, [r7, #4]
 8011996:	681b      	ldr	r3, [r3, #0]
 8011998:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 801199c:	611a      	str	r2, [r3, #16]
 801199e:	6878      	ldr	r0, [r7, #4]
 80119a0:	f000 fdd4 	bl	801254c <HAL_TIMEx_BreakCallback>
 80119a4:	687b      	ldr	r3, [r7, #4]
 80119a6:	681b      	ldr	r3, [r3, #0]
 80119a8:	691b      	ldr	r3, [r3, #16]
 80119aa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80119ae:	2b40      	cmp	r3, #64	@ 0x40
 80119b0:	d10e      	bne.n	80119d0 <HAL_TIM_IRQHandler+0x1dc>
 80119b2:	687b      	ldr	r3, [r7, #4]
 80119b4:	681b      	ldr	r3, [r3, #0]
 80119b6:	68db      	ldr	r3, [r3, #12]
 80119b8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80119bc:	2b40      	cmp	r3, #64	@ 0x40
 80119be:	d107      	bne.n	80119d0 <HAL_TIM_IRQHandler+0x1dc>
 80119c0:	687b      	ldr	r3, [r7, #4]
 80119c2:	681b      	ldr	r3, [r3, #0]
 80119c4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80119c8:	611a      	str	r2, [r3, #16]
 80119ca:	6878      	ldr	r0, [r7, #4]
 80119cc:	f000 fa1d 	bl	8011e0a <HAL_TIM_TriggerCallback>
 80119d0:	687b      	ldr	r3, [r7, #4]
 80119d2:	681b      	ldr	r3, [r3, #0]
 80119d4:	691b      	ldr	r3, [r3, #16]
 80119d6:	f003 0320 	and.w	r3, r3, #32
 80119da:	2b20      	cmp	r3, #32
 80119dc:	d10e      	bne.n	80119fc <HAL_TIM_IRQHandler+0x208>
 80119de:	687b      	ldr	r3, [r7, #4]
 80119e0:	681b      	ldr	r3, [r3, #0]
 80119e2:	68db      	ldr	r3, [r3, #12]
 80119e4:	f003 0320 	and.w	r3, r3, #32
 80119e8:	2b20      	cmp	r3, #32
 80119ea:	d107      	bne.n	80119fc <HAL_TIM_IRQHandler+0x208>
 80119ec:	687b      	ldr	r3, [r7, #4]
 80119ee:	681b      	ldr	r3, [r3, #0]
 80119f0:	f06f 0220 	mvn.w	r2, #32
 80119f4:	611a      	str	r2, [r3, #16]
 80119f6:	6878      	ldr	r0, [r7, #4]
 80119f8:	f000 fd9e 	bl	8012538 <HAL_TIMEx_CommutCallback>
 80119fc:	bf00      	nop
 80119fe:	3708      	adds	r7, #8
 8011a00:	46bd      	mov	sp, r7
 8011a02:	bd80      	pop	{r7, pc}

08011a04 <HAL_TIM_OC_ConfigChannel>:
 8011a04:	b580      	push	{r7, lr}
 8011a06:	b086      	sub	sp, #24
 8011a08:	af00      	add	r7, sp, #0
 8011a0a:	60f8      	str	r0, [r7, #12]
 8011a0c:	60b9      	str	r1, [r7, #8]
 8011a0e:	607a      	str	r2, [r7, #4]
 8011a10:	2300      	movs	r3, #0
 8011a12:	75fb      	strb	r3, [r7, #23]
 8011a14:	68fb      	ldr	r3, [r7, #12]
 8011a16:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011a1a:	2b01      	cmp	r3, #1
 8011a1c:	d101      	bne.n	8011a22 <HAL_TIM_OC_ConfigChannel+0x1e>
 8011a1e:	2302      	movs	r3, #2
 8011a20:	e048      	b.n	8011ab4 <HAL_TIM_OC_ConfigChannel+0xb0>
 8011a22:	68fb      	ldr	r3, [r7, #12]
 8011a24:	2201      	movs	r2, #1
 8011a26:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011a2a:	687b      	ldr	r3, [r7, #4]
 8011a2c:	2b0c      	cmp	r3, #12
 8011a2e:	d839      	bhi.n	8011aa4 <HAL_TIM_OC_ConfigChannel+0xa0>
 8011a30:	a201      	add	r2, pc, #4	@ (adr r2, 8011a38 <HAL_TIM_OC_ConfigChannel+0x34>)
 8011a32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011a36:	bf00      	nop
 8011a38:	08011a6d 	.word	0x08011a6d
 8011a3c:	08011aa5 	.word	0x08011aa5
 8011a40:	08011aa5 	.word	0x08011aa5
 8011a44:	08011aa5 	.word	0x08011aa5
 8011a48:	08011a7b 	.word	0x08011a7b
 8011a4c:	08011aa5 	.word	0x08011aa5
 8011a50:	08011aa5 	.word	0x08011aa5
 8011a54:	08011aa5 	.word	0x08011aa5
 8011a58:	08011a89 	.word	0x08011a89
 8011a5c:	08011aa5 	.word	0x08011aa5
 8011a60:	08011aa5 	.word	0x08011aa5
 8011a64:	08011aa5 	.word	0x08011aa5
 8011a68:	08011a97 	.word	0x08011a97
 8011a6c:	68fb      	ldr	r3, [r7, #12]
 8011a6e:	681b      	ldr	r3, [r3, #0]
 8011a70:	68b9      	ldr	r1, [r7, #8]
 8011a72:	4618      	mov	r0, r3
 8011a74:	f000 fa74 	bl	8011f60 <TIM_OC1_SetConfig>
 8011a78:	e017      	b.n	8011aaa <HAL_TIM_OC_ConfigChannel+0xa6>
 8011a7a:	68fb      	ldr	r3, [r7, #12]
 8011a7c:	681b      	ldr	r3, [r3, #0]
 8011a7e:	68b9      	ldr	r1, [r7, #8]
 8011a80:	4618      	mov	r0, r3
 8011a82:	f000 fadd 	bl	8012040 <TIM_OC2_SetConfig>
 8011a86:	e010      	b.n	8011aaa <HAL_TIM_OC_ConfigChannel+0xa6>
 8011a88:	68fb      	ldr	r3, [r7, #12]
 8011a8a:	681b      	ldr	r3, [r3, #0]
 8011a8c:	68b9      	ldr	r1, [r7, #8]
 8011a8e:	4618      	mov	r0, r3
 8011a90:	f000 fb4c 	bl	801212c <TIM_OC3_SetConfig>
 8011a94:	e009      	b.n	8011aaa <HAL_TIM_OC_ConfigChannel+0xa6>
 8011a96:	68fb      	ldr	r3, [r7, #12]
 8011a98:	681b      	ldr	r3, [r3, #0]
 8011a9a:	68b9      	ldr	r1, [r7, #8]
 8011a9c:	4618      	mov	r0, r3
 8011a9e:	f000 fbb9 	bl	8012214 <TIM_OC4_SetConfig>
 8011aa2:	e002      	b.n	8011aaa <HAL_TIM_OC_ConfigChannel+0xa6>
 8011aa4:	2301      	movs	r3, #1
 8011aa6:	75fb      	strb	r3, [r7, #23]
 8011aa8:	bf00      	nop
 8011aaa:	68fb      	ldr	r3, [r7, #12]
 8011aac:	2200      	movs	r2, #0
 8011aae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011ab2:	7dfb      	ldrb	r3, [r7, #23]
 8011ab4:	4618      	mov	r0, r3
 8011ab6:	3718      	adds	r7, #24
 8011ab8:	46bd      	mov	sp, r7
 8011aba:	bd80      	pop	{r7, pc}

08011abc <HAL_TIM_PWM_ConfigChannel>:
 8011abc:	b580      	push	{r7, lr}
 8011abe:	b086      	sub	sp, #24
 8011ac0:	af00      	add	r7, sp, #0
 8011ac2:	60f8      	str	r0, [r7, #12]
 8011ac4:	60b9      	str	r1, [r7, #8]
 8011ac6:	607a      	str	r2, [r7, #4]
 8011ac8:	2300      	movs	r3, #0
 8011aca:	75fb      	strb	r3, [r7, #23]
 8011acc:	68fb      	ldr	r3, [r7, #12]
 8011ace:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011ad2:	2b01      	cmp	r3, #1
 8011ad4:	d101      	bne.n	8011ada <HAL_TIM_PWM_ConfigChannel+0x1e>
 8011ad6:	2302      	movs	r3, #2
 8011ad8:	e0ae      	b.n	8011c38 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8011ada:	68fb      	ldr	r3, [r7, #12]
 8011adc:	2201      	movs	r2, #1
 8011ade:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011ae2:	687b      	ldr	r3, [r7, #4]
 8011ae4:	2b0c      	cmp	r3, #12
 8011ae6:	f200 809f 	bhi.w	8011c28 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8011aea:	a201      	add	r2, pc, #4	@ (adr r2, 8011af0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8011aec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011af0:	08011b25 	.word	0x08011b25
 8011af4:	08011c29 	.word	0x08011c29
 8011af8:	08011c29 	.word	0x08011c29
 8011afc:	08011c29 	.word	0x08011c29
 8011b00:	08011b65 	.word	0x08011b65
 8011b04:	08011c29 	.word	0x08011c29
 8011b08:	08011c29 	.word	0x08011c29
 8011b0c:	08011c29 	.word	0x08011c29
 8011b10:	08011ba7 	.word	0x08011ba7
 8011b14:	08011c29 	.word	0x08011c29
 8011b18:	08011c29 	.word	0x08011c29
 8011b1c:	08011c29 	.word	0x08011c29
 8011b20:	08011be7 	.word	0x08011be7
 8011b24:	68fb      	ldr	r3, [r7, #12]
 8011b26:	681b      	ldr	r3, [r3, #0]
 8011b28:	68b9      	ldr	r1, [r7, #8]
 8011b2a:	4618      	mov	r0, r3
 8011b2c:	f000 fa18 	bl	8011f60 <TIM_OC1_SetConfig>
 8011b30:	68fb      	ldr	r3, [r7, #12]
 8011b32:	681b      	ldr	r3, [r3, #0]
 8011b34:	699a      	ldr	r2, [r3, #24]
 8011b36:	68fb      	ldr	r3, [r7, #12]
 8011b38:	681b      	ldr	r3, [r3, #0]
 8011b3a:	f042 0208 	orr.w	r2, r2, #8
 8011b3e:	619a      	str	r2, [r3, #24]
 8011b40:	68fb      	ldr	r3, [r7, #12]
 8011b42:	681b      	ldr	r3, [r3, #0]
 8011b44:	699a      	ldr	r2, [r3, #24]
 8011b46:	68fb      	ldr	r3, [r7, #12]
 8011b48:	681b      	ldr	r3, [r3, #0]
 8011b4a:	f022 0204 	bic.w	r2, r2, #4
 8011b4e:	619a      	str	r2, [r3, #24]
 8011b50:	68fb      	ldr	r3, [r7, #12]
 8011b52:	681b      	ldr	r3, [r3, #0]
 8011b54:	6999      	ldr	r1, [r3, #24]
 8011b56:	68bb      	ldr	r3, [r7, #8]
 8011b58:	691a      	ldr	r2, [r3, #16]
 8011b5a:	68fb      	ldr	r3, [r7, #12]
 8011b5c:	681b      	ldr	r3, [r3, #0]
 8011b5e:	430a      	orrs	r2, r1
 8011b60:	619a      	str	r2, [r3, #24]
 8011b62:	e064      	b.n	8011c2e <HAL_TIM_PWM_ConfigChannel+0x172>
 8011b64:	68fb      	ldr	r3, [r7, #12]
 8011b66:	681b      	ldr	r3, [r3, #0]
 8011b68:	68b9      	ldr	r1, [r7, #8]
 8011b6a:	4618      	mov	r0, r3
 8011b6c:	f000 fa68 	bl	8012040 <TIM_OC2_SetConfig>
 8011b70:	68fb      	ldr	r3, [r7, #12]
 8011b72:	681b      	ldr	r3, [r3, #0]
 8011b74:	699a      	ldr	r2, [r3, #24]
 8011b76:	68fb      	ldr	r3, [r7, #12]
 8011b78:	681b      	ldr	r3, [r3, #0]
 8011b7a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8011b7e:	619a      	str	r2, [r3, #24]
 8011b80:	68fb      	ldr	r3, [r7, #12]
 8011b82:	681b      	ldr	r3, [r3, #0]
 8011b84:	699a      	ldr	r2, [r3, #24]
 8011b86:	68fb      	ldr	r3, [r7, #12]
 8011b88:	681b      	ldr	r3, [r3, #0]
 8011b8a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011b8e:	619a      	str	r2, [r3, #24]
 8011b90:	68fb      	ldr	r3, [r7, #12]
 8011b92:	681b      	ldr	r3, [r3, #0]
 8011b94:	6999      	ldr	r1, [r3, #24]
 8011b96:	68bb      	ldr	r3, [r7, #8]
 8011b98:	691b      	ldr	r3, [r3, #16]
 8011b9a:	021a      	lsls	r2, r3, #8
 8011b9c:	68fb      	ldr	r3, [r7, #12]
 8011b9e:	681b      	ldr	r3, [r3, #0]
 8011ba0:	430a      	orrs	r2, r1
 8011ba2:	619a      	str	r2, [r3, #24]
 8011ba4:	e043      	b.n	8011c2e <HAL_TIM_PWM_ConfigChannel+0x172>
 8011ba6:	68fb      	ldr	r3, [r7, #12]
 8011ba8:	681b      	ldr	r3, [r3, #0]
 8011baa:	68b9      	ldr	r1, [r7, #8]
 8011bac:	4618      	mov	r0, r3
 8011bae:	f000 fabd 	bl	801212c <TIM_OC3_SetConfig>
 8011bb2:	68fb      	ldr	r3, [r7, #12]
 8011bb4:	681b      	ldr	r3, [r3, #0]
 8011bb6:	69da      	ldr	r2, [r3, #28]
 8011bb8:	68fb      	ldr	r3, [r7, #12]
 8011bba:	681b      	ldr	r3, [r3, #0]
 8011bbc:	f042 0208 	orr.w	r2, r2, #8
 8011bc0:	61da      	str	r2, [r3, #28]
 8011bc2:	68fb      	ldr	r3, [r7, #12]
 8011bc4:	681b      	ldr	r3, [r3, #0]
 8011bc6:	69da      	ldr	r2, [r3, #28]
 8011bc8:	68fb      	ldr	r3, [r7, #12]
 8011bca:	681b      	ldr	r3, [r3, #0]
 8011bcc:	f022 0204 	bic.w	r2, r2, #4
 8011bd0:	61da      	str	r2, [r3, #28]
 8011bd2:	68fb      	ldr	r3, [r7, #12]
 8011bd4:	681b      	ldr	r3, [r3, #0]
 8011bd6:	69d9      	ldr	r1, [r3, #28]
 8011bd8:	68bb      	ldr	r3, [r7, #8]
 8011bda:	691a      	ldr	r2, [r3, #16]
 8011bdc:	68fb      	ldr	r3, [r7, #12]
 8011bde:	681b      	ldr	r3, [r3, #0]
 8011be0:	430a      	orrs	r2, r1
 8011be2:	61da      	str	r2, [r3, #28]
 8011be4:	e023      	b.n	8011c2e <HAL_TIM_PWM_ConfigChannel+0x172>
 8011be6:	68fb      	ldr	r3, [r7, #12]
 8011be8:	681b      	ldr	r3, [r3, #0]
 8011bea:	68b9      	ldr	r1, [r7, #8]
 8011bec:	4618      	mov	r0, r3
 8011bee:	f000 fb11 	bl	8012214 <TIM_OC4_SetConfig>
 8011bf2:	68fb      	ldr	r3, [r7, #12]
 8011bf4:	681b      	ldr	r3, [r3, #0]
 8011bf6:	69da      	ldr	r2, [r3, #28]
 8011bf8:	68fb      	ldr	r3, [r7, #12]
 8011bfa:	681b      	ldr	r3, [r3, #0]
 8011bfc:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8011c00:	61da      	str	r2, [r3, #28]
 8011c02:	68fb      	ldr	r3, [r7, #12]
 8011c04:	681b      	ldr	r3, [r3, #0]
 8011c06:	69da      	ldr	r2, [r3, #28]
 8011c08:	68fb      	ldr	r3, [r7, #12]
 8011c0a:	681b      	ldr	r3, [r3, #0]
 8011c0c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011c10:	61da      	str	r2, [r3, #28]
 8011c12:	68fb      	ldr	r3, [r7, #12]
 8011c14:	681b      	ldr	r3, [r3, #0]
 8011c16:	69d9      	ldr	r1, [r3, #28]
 8011c18:	68bb      	ldr	r3, [r7, #8]
 8011c1a:	691b      	ldr	r3, [r3, #16]
 8011c1c:	021a      	lsls	r2, r3, #8
 8011c1e:	68fb      	ldr	r3, [r7, #12]
 8011c20:	681b      	ldr	r3, [r3, #0]
 8011c22:	430a      	orrs	r2, r1
 8011c24:	61da      	str	r2, [r3, #28]
 8011c26:	e002      	b.n	8011c2e <HAL_TIM_PWM_ConfigChannel+0x172>
 8011c28:	2301      	movs	r3, #1
 8011c2a:	75fb      	strb	r3, [r7, #23]
 8011c2c:	bf00      	nop
 8011c2e:	68fb      	ldr	r3, [r7, #12]
 8011c30:	2200      	movs	r2, #0
 8011c32:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011c36:	7dfb      	ldrb	r3, [r7, #23]
 8011c38:	4618      	mov	r0, r3
 8011c3a:	3718      	adds	r7, #24
 8011c3c:	46bd      	mov	sp, r7
 8011c3e:	bd80      	pop	{r7, pc}

08011c40 <HAL_TIM_ConfigClockSource>:
 8011c40:	b580      	push	{r7, lr}
 8011c42:	b084      	sub	sp, #16
 8011c44:	af00      	add	r7, sp, #0
 8011c46:	6078      	str	r0, [r7, #4]
 8011c48:	6039      	str	r1, [r7, #0]
 8011c4a:	2300      	movs	r3, #0
 8011c4c:	73fb      	strb	r3, [r7, #15]
 8011c4e:	687b      	ldr	r3, [r7, #4]
 8011c50:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011c54:	2b01      	cmp	r3, #1
 8011c56:	d101      	bne.n	8011c5c <HAL_TIM_ConfigClockSource+0x1c>
 8011c58:	2302      	movs	r3, #2
 8011c5a:	e0b4      	b.n	8011dc6 <HAL_TIM_ConfigClockSource+0x186>
 8011c5c:	687b      	ldr	r3, [r7, #4]
 8011c5e:	2201      	movs	r2, #1
 8011c60:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011c64:	687b      	ldr	r3, [r7, #4]
 8011c66:	2202      	movs	r2, #2
 8011c68:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011c6c:	687b      	ldr	r3, [r7, #4]
 8011c6e:	681b      	ldr	r3, [r3, #0]
 8011c70:	689b      	ldr	r3, [r3, #8]
 8011c72:	60bb      	str	r3, [r7, #8]
 8011c74:	68bb      	ldr	r3, [r7, #8]
 8011c76:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8011c7a:	60bb      	str	r3, [r7, #8]
 8011c7c:	68bb      	ldr	r3, [r7, #8]
 8011c7e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8011c82:	60bb      	str	r3, [r7, #8]
 8011c84:	687b      	ldr	r3, [r7, #4]
 8011c86:	681b      	ldr	r3, [r3, #0]
 8011c88:	68ba      	ldr	r2, [r7, #8]
 8011c8a:	609a      	str	r2, [r3, #8]
 8011c8c:	683b      	ldr	r3, [r7, #0]
 8011c8e:	681b      	ldr	r3, [r3, #0]
 8011c90:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011c94:	d03e      	beq.n	8011d14 <HAL_TIM_ConfigClockSource+0xd4>
 8011c96:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011c9a:	f200 8087 	bhi.w	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011c9e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011ca2:	f000 8086 	beq.w	8011db2 <HAL_TIM_ConfigClockSource+0x172>
 8011ca6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011caa:	d87f      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011cac:	2b70      	cmp	r3, #112	@ 0x70
 8011cae:	d01a      	beq.n	8011ce6 <HAL_TIM_ConfigClockSource+0xa6>
 8011cb0:	2b70      	cmp	r3, #112	@ 0x70
 8011cb2:	d87b      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011cb4:	2b60      	cmp	r3, #96	@ 0x60
 8011cb6:	d050      	beq.n	8011d5a <HAL_TIM_ConfigClockSource+0x11a>
 8011cb8:	2b60      	cmp	r3, #96	@ 0x60
 8011cba:	d877      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011cbc:	2b50      	cmp	r3, #80	@ 0x50
 8011cbe:	d03c      	beq.n	8011d3a <HAL_TIM_ConfigClockSource+0xfa>
 8011cc0:	2b50      	cmp	r3, #80	@ 0x50
 8011cc2:	d873      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011cc4:	2b40      	cmp	r3, #64	@ 0x40
 8011cc6:	d058      	beq.n	8011d7a <HAL_TIM_ConfigClockSource+0x13a>
 8011cc8:	2b40      	cmp	r3, #64	@ 0x40
 8011cca:	d86f      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011ccc:	2b30      	cmp	r3, #48	@ 0x30
 8011cce:	d064      	beq.n	8011d9a <HAL_TIM_ConfigClockSource+0x15a>
 8011cd0:	2b30      	cmp	r3, #48	@ 0x30
 8011cd2:	d86b      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011cd4:	2b20      	cmp	r3, #32
 8011cd6:	d060      	beq.n	8011d9a <HAL_TIM_ConfigClockSource+0x15a>
 8011cd8:	2b20      	cmp	r3, #32
 8011cda:	d867      	bhi.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011cdc:	2b00      	cmp	r3, #0
 8011cde:	d05c      	beq.n	8011d9a <HAL_TIM_ConfigClockSource+0x15a>
 8011ce0:	2b10      	cmp	r3, #16
 8011ce2:	d05a      	beq.n	8011d9a <HAL_TIM_ConfigClockSource+0x15a>
 8011ce4:	e062      	b.n	8011dac <HAL_TIM_ConfigClockSource+0x16c>
 8011ce6:	687b      	ldr	r3, [r7, #4]
 8011ce8:	6818      	ldr	r0, [r3, #0]
 8011cea:	683b      	ldr	r3, [r7, #0]
 8011cec:	6899      	ldr	r1, [r3, #8]
 8011cee:	683b      	ldr	r3, [r7, #0]
 8011cf0:	685a      	ldr	r2, [r3, #4]
 8011cf2:	683b      	ldr	r3, [r7, #0]
 8011cf4:	68db      	ldr	r3, [r3, #12]
 8011cf6:	f000 fb5d 	bl	80123b4 <TIM_ETR_SetConfig>
 8011cfa:	687b      	ldr	r3, [r7, #4]
 8011cfc:	681b      	ldr	r3, [r3, #0]
 8011cfe:	689b      	ldr	r3, [r3, #8]
 8011d00:	60bb      	str	r3, [r7, #8]
 8011d02:	68bb      	ldr	r3, [r7, #8]
 8011d04:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8011d08:	60bb      	str	r3, [r7, #8]
 8011d0a:	687b      	ldr	r3, [r7, #4]
 8011d0c:	681b      	ldr	r3, [r3, #0]
 8011d0e:	68ba      	ldr	r2, [r7, #8]
 8011d10:	609a      	str	r2, [r3, #8]
 8011d12:	e04f      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011d14:	687b      	ldr	r3, [r7, #4]
 8011d16:	6818      	ldr	r0, [r3, #0]
 8011d18:	683b      	ldr	r3, [r7, #0]
 8011d1a:	6899      	ldr	r1, [r3, #8]
 8011d1c:	683b      	ldr	r3, [r7, #0]
 8011d1e:	685a      	ldr	r2, [r3, #4]
 8011d20:	683b      	ldr	r3, [r7, #0]
 8011d22:	68db      	ldr	r3, [r3, #12]
 8011d24:	f000 fb46 	bl	80123b4 <TIM_ETR_SetConfig>
 8011d28:	687b      	ldr	r3, [r7, #4]
 8011d2a:	681b      	ldr	r3, [r3, #0]
 8011d2c:	689a      	ldr	r2, [r3, #8]
 8011d2e:	687b      	ldr	r3, [r7, #4]
 8011d30:	681b      	ldr	r3, [r3, #0]
 8011d32:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8011d36:	609a      	str	r2, [r3, #8]
 8011d38:	e03c      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011d3a:	687b      	ldr	r3, [r7, #4]
 8011d3c:	6818      	ldr	r0, [r3, #0]
 8011d3e:	683b      	ldr	r3, [r7, #0]
 8011d40:	6859      	ldr	r1, [r3, #4]
 8011d42:	683b      	ldr	r3, [r7, #0]
 8011d44:	68db      	ldr	r3, [r3, #12]
 8011d46:	461a      	mov	r2, r3
 8011d48:	f000 faba 	bl	80122c0 <TIM_TI1_ConfigInputStage>
 8011d4c:	687b      	ldr	r3, [r7, #4]
 8011d4e:	681b      	ldr	r3, [r3, #0]
 8011d50:	2150      	movs	r1, #80	@ 0x50
 8011d52:	4618      	mov	r0, r3
 8011d54:	f000 fb13 	bl	801237e <TIM_ITRx_SetConfig>
 8011d58:	e02c      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011d5a:	687b      	ldr	r3, [r7, #4]
 8011d5c:	6818      	ldr	r0, [r3, #0]
 8011d5e:	683b      	ldr	r3, [r7, #0]
 8011d60:	6859      	ldr	r1, [r3, #4]
 8011d62:	683b      	ldr	r3, [r7, #0]
 8011d64:	68db      	ldr	r3, [r3, #12]
 8011d66:	461a      	mov	r2, r3
 8011d68:	f000 fad9 	bl	801231e <TIM_TI2_ConfigInputStage>
 8011d6c:	687b      	ldr	r3, [r7, #4]
 8011d6e:	681b      	ldr	r3, [r3, #0]
 8011d70:	2160      	movs	r1, #96	@ 0x60
 8011d72:	4618      	mov	r0, r3
 8011d74:	f000 fb03 	bl	801237e <TIM_ITRx_SetConfig>
 8011d78:	e01c      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011d7a:	687b      	ldr	r3, [r7, #4]
 8011d7c:	6818      	ldr	r0, [r3, #0]
 8011d7e:	683b      	ldr	r3, [r7, #0]
 8011d80:	6859      	ldr	r1, [r3, #4]
 8011d82:	683b      	ldr	r3, [r7, #0]
 8011d84:	68db      	ldr	r3, [r3, #12]
 8011d86:	461a      	mov	r2, r3
 8011d88:	f000 fa9a 	bl	80122c0 <TIM_TI1_ConfigInputStage>
 8011d8c:	687b      	ldr	r3, [r7, #4]
 8011d8e:	681b      	ldr	r3, [r3, #0]
 8011d90:	2140      	movs	r1, #64	@ 0x40
 8011d92:	4618      	mov	r0, r3
 8011d94:	f000 faf3 	bl	801237e <TIM_ITRx_SetConfig>
 8011d98:	e00c      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011d9a:	687b      	ldr	r3, [r7, #4]
 8011d9c:	681a      	ldr	r2, [r3, #0]
 8011d9e:	683b      	ldr	r3, [r7, #0]
 8011da0:	681b      	ldr	r3, [r3, #0]
 8011da2:	4619      	mov	r1, r3
 8011da4:	4610      	mov	r0, r2
 8011da6:	f000 faea 	bl	801237e <TIM_ITRx_SetConfig>
 8011daa:	e003      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011dac:	2301      	movs	r3, #1
 8011dae:	73fb      	strb	r3, [r7, #15]
 8011db0:	e000      	b.n	8011db4 <HAL_TIM_ConfigClockSource+0x174>
 8011db2:	bf00      	nop
 8011db4:	687b      	ldr	r3, [r7, #4]
 8011db6:	2201      	movs	r2, #1
 8011db8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011dbc:	687b      	ldr	r3, [r7, #4]
 8011dbe:	2200      	movs	r2, #0
 8011dc0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011dc4:	7bfb      	ldrb	r3, [r7, #15]
 8011dc6:	4618      	mov	r0, r3
 8011dc8:	3710      	adds	r7, #16
 8011dca:	46bd      	mov	sp, r7
 8011dcc:	bd80      	pop	{r7, pc}

08011dce <HAL_TIM_OC_DelayElapsedCallback>:
 8011dce:	b480      	push	{r7}
 8011dd0:	b083      	sub	sp, #12
 8011dd2:	af00      	add	r7, sp, #0
 8011dd4:	6078      	str	r0, [r7, #4]
 8011dd6:	bf00      	nop
 8011dd8:	370c      	adds	r7, #12
 8011dda:	46bd      	mov	sp, r7
 8011ddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011de0:	4770      	bx	lr

08011de2 <HAL_TIM_IC_CaptureCallback>:
 8011de2:	b480      	push	{r7}
 8011de4:	b083      	sub	sp, #12
 8011de6:	af00      	add	r7, sp, #0
 8011de8:	6078      	str	r0, [r7, #4]
 8011dea:	bf00      	nop
 8011dec:	370c      	adds	r7, #12
 8011dee:	46bd      	mov	sp, r7
 8011df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011df4:	4770      	bx	lr

08011df6 <HAL_TIM_PWM_PulseFinishedCallback>:
 8011df6:	b480      	push	{r7}
 8011df8:	b083      	sub	sp, #12
 8011dfa:	af00      	add	r7, sp, #0
 8011dfc:	6078      	str	r0, [r7, #4]
 8011dfe:	bf00      	nop
 8011e00:	370c      	adds	r7, #12
 8011e02:	46bd      	mov	sp, r7
 8011e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e08:	4770      	bx	lr

08011e0a <HAL_TIM_TriggerCallback>:
 8011e0a:	b480      	push	{r7}
 8011e0c:	b083      	sub	sp, #12
 8011e0e:	af00      	add	r7, sp, #0
 8011e10:	6078      	str	r0, [r7, #4]
 8011e12:	bf00      	nop
 8011e14:	370c      	adds	r7, #12
 8011e16:	46bd      	mov	sp, r7
 8011e18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e1c:	4770      	bx	lr
	...

08011e20 <TIM_Base_SetConfig>:
 8011e20:	b480      	push	{r7}
 8011e22:	b085      	sub	sp, #20
 8011e24:	af00      	add	r7, sp, #0
 8011e26:	6078      	str	r0, [r7, #4]
 8011e28:	6039      	str	r1, [r7, #0]
 8011e2a:	687b      	ldr	r3, [r7, #4]
 8011e2c:	681b      	ldr	r3, [r3, #0]
 8011e2e:	60fb      	str	r3, [r7, #12]
 8011e30:	687b      	ldr	r3, [r7, #4]
 8011e32:	4a40      	ldr	r2, [pc, #256]	@ (8011f34 <TIM_Base_SetConfig+0x114>)
 8011e34:	4293      	cmp	r3, r2
 8011e36:	d013      	beq.n	8011e60 <TIM_Base_SetConfig+0x40>
 8011e38:	687b      	ldr	r3, [r7, #4]
 8011e3a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011e3e:	d00f      	beq.n	8011e60 <TIM_Base_SetConfig+0x40>
 8011e40:	687b      	ldr	r3, [r7, #4]
 8011e42:	4a3d      	ldr	r2, [pc, #244]	@ (8011f38 <TIM_Base_SetConfig+0x118>)
 8011e44:	4293      	cmp	r3, r2
 8011e46:	d00b      	beq.n	8011e60 <TIM_Base_SetConfig+0x40>
 8011e48:	687b      	ldr	r3, [r7, #4]
 8011e4a:	4a3c      	ldr	r2, [pc, #240]	@ (8011f3c <TIM_Base_SetConfig+0x11c>)
 8011e4c:	4293      	cmp	r3, r2
 8011e4e:	d007      	beq.n	8011e60 <TIM_Base_SetConfig+0x40>
 8011e50:	687b      	ldr	r3, [r7, #4]
 8011e52:	4a3b      	ldr	r2, [pc, #236]	@ (8011f40 <TIM_Base_SetConfig+0x120>)
 8011e54:	4293      	cmp	r3, r2
 8011e56:	d003      	beq.n	8011e60 <TIM_Base_SetConfig+0x40>
 8011e58:	687b      	ldr	r3, [r7, #4]
 8011e5a:	4a3a      	ldr	r2, [pc, #232]	@ (8011f44 <TIM_Base_SetConfig+0x124>)
 8011e5c:	4293      	cmp	r3, r2
 8011e5e:	d108      	bne.n	8011e72 <TIM_Base_SetConfig+0x52>
 8011e60:	68fb      	ldr	r3, [r7, #12]
 8011e62:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8011e66:	60fb      	str	r3, [r7, #12]
 8011e68:	683b      	ldr	r3, [r7, #0]
 8011e6a:	685b      	ldr	r3, [r3, #4]
 8011e6c:	68fa      	ldr	r2, [r7, #12]
 8011e6e:	4313      	orrs	r3, r2
 8011e70:	60fb      	str	r3, [r7, #12]
 8011e72:	687b      	ldr	r3, [r7, #4]
 8011e74:	4a2f      	ldr	r2, [pc, #188]	@ (8011f34 <TIM_Base_SetConfig+0x114>)
 8011e76:	4293      	cmp	r3, r2
 8011e78:	d02b      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011e7a:	687b      	ldr	r3, [r7, #4]
 8011e7c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011e80:	d027      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011e82:	687b      	ldr	r3, [r7, #4]
 8011e84:	4a2c      	ldr	r2, [pc, #176]	@ (8011f38 <TIM_Base_SetConfig+0x118>)
 8011e86:	4293      	cmp	r3, r2
 8011e88:	d023      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011e8a:	687b      	ldr	r3, [r7, #4]
 8011e8c:	4a2b      	ldr	r2, [pc, #172]	@ (8011f3c <TIM_Base_SetConfig+0x11c>)
 8011e8e:	4293      	cmp	r3, r2
 8011e90:	d01f      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011e92:	687b      	ldr	r3, [r7, #4]
 8011e94:	4a2a      	ldr	r2, [pc, #168]	@ (8011f40 <TIM_Base_SetConfig+0x120>)
 8011e96:	4293      	cmp	r3, r2
 8011e98:	d01b      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011e9a:	687b      	ldr	r3, [r7, #4]
 8011e9c:	4a29      	ldr	r2, [pc, #164]	@ (8011f44 <TIM_Base_SetConfig+0x124>)
 8011e9e:	4293      	cmp	r3, r2
 8011ea0:	d017      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011ea2:	687b      	ldr	r3, [r7, #4]
 8011ea4:	4a28      	ldr	r2, [pc, #160]	@ (8011f48 <TIM_Base_SetConfig+0x128>)
 8011ea6:	4293      	cmp	r3, r2
 8011ea8:	d013      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011eaa:	687b      	ldr	r3, [r7, #4]
 8011eac:	4a27      	ldr	r2, [pc, #156]	@ (8011f4c <TIM_Base_SetConfig+0x12c>)
 8011eae:	4293      	cmp	r3, r2
 8011eb0:	d00f      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011eb2:	687b      	ldr	r3, [r7, #4]
 8011eb4:	4a26      	ldr	r2, [pc, #152]	@ (8011f50 <TIM_Base_SetConfig+0x130>)
 8011eb6:	4293      	cmp	r3, r2
 8011eb8:	d00b      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011eba:	687b      	ldr	r3, [r7, #4]
 8011ebc:	4a25      	ldr	r2, [pc, #148]	@ (8011f54 <TIM_Base_SetConfig+0x134>)
 8011ebe:	4293      	cmp	r3, r2
 8011ec0:	d007      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011ec2:	687b      	ldr	r3, [r7, #4]
 8011ec4:	4a24      	ldr	r2, [pc, #144]	@ (8011f58 <TIM_Base_SetConfig+0x138>)
 8011ec6:	4293      	cmp	r3, r2
 8011ec8:	d003      	beq.n	8011ed2 <TIM_Base_SetConfig+0xb2>
 8011eca:	687b      	ldr	r3, [r7, #4]
 8011ecc:	4a23      	ldr	r2, [pc, #140]	@ (8011f5c <TIM_Base_SetConfig+0x13c>)
 8011ece:	4293      	cmp	r3, r2
 8011ed0:	d108      	bne.n	8011ee4 <TIM_Base_SetConfig+0xc4>
 8011ed2:	68fb      	ldr	r3, [r7, #12]
 8011ed4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011ed8:	60fb      	str	r3, [r7, #12]
 8011eda:	683b      	ldr	r3, [r7, #0]
 8011edc:	68db      	ldr	r3, [r3, #12]
 8011ede:	68fa      	ldr	r2, [r7, #12]
 8011ee0:	4313      	orrs	r3, r2
 8011ee2:	60fb      	str	r3, [r7, #12]
 8011ee4:	68fb      	ldr	r3, [r7, #12]
 8011ee6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8011eea:	683b      	ldr	r3, [r7, #0]
 8011eec:	695b      	ldr	r3, [r3, #20]
 8011eee:	4313      	orrs	r3, r2
 8011ef0:	60fb      	str	r3, [r7, #12]
 8011ef2:	687b      	ldr	r3, [r7, #4]
 8011ef4:	68fa      	ldr	r2, [r7, #12]
 8011ef6:	601a      	str	r2, [r3, #0]
 8011ef8:	683b      	ldr	r3, [r7, #0]
 8011efa:	689a      	ldr	r2, [r3, #8]
 8011efc:	687b      	ldr	r3, [r7, #4]
 8011efe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8011f00:	683b      	ldr	r3, [r7, #0]
 8011f02:	681a      	ldr	r2, [r3, #0]
 8011f04:	687b      	ldr	r3, [r7, #4]
 8011f06:	629a      	str	r2, [r3, #40]	@ 0x28
 8011f08:	687b      	ldr	r3, [r7, #4]
 8011f0a:	4a0a      	ldr	r2, [pc, #40]	@ (8011f34 <TIM_Base_SetConfig+0x114>)
 8011f0c:	4293      	cmp	r3, r2
 8011f0e:	d003      	beq.n	8011f18 <TIM_Base_SetConfig+0xf8>
 8011f10:	687b      	ldr	r3, [r7, #4]
 8011f12:	4a0c      	ldr	r2, [pc, #48]	@ (8011f44 <TIM_Base_SetConfig+0x124>)
 8011f14:	4293      	cmp	r3, r2
 8011f16:	d103      	bne.n	8011f20 <TIM_Base_SetConfig+0x100>
 8011f18:	683b      	ldr	r3, [r7, #0]
 8011f1a:	691a      	ldr	r2, [r3, #16]
 8011f1c:	687b      	ldr	r3, [r7, #4]
 8011f1e:	631a      	str	r2, [r3, #48]	@ 0x30
 8011f20:	687b      	ldr	r3, [r7, #4]
 8011f22:	2201      	movs	r2, #1
 8011f24:	615a      	str	r2, [r3, #20]
 8011f26:	bf00      	nop
 8011f28:	3714      	adds	r7, #20
 8011f2a:	46bd      	mov	sp, r7
 8011f2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f30:	4770      	bx	lr
 8011f32:	bf00      	nop
 8011f34:	40010000 	.word	0x40010000
 8011f38:	40000400 	.word	0x40000400
 8011f3c:	40000800 	.word	0x40000800
 8011f40:	40000c00 	.word	0x40000c00
 8011f44:	40010400 	.word	0x40010400
 8011f48:	40014000 	.word	0x40014000
 8011f4c:	40014400 	.word	0x40014400
 8011f50:	40014800 	.word	0x40014800
 8011f54:	40001800 	.word	0x40001800
 8011f58:	40001c00 	.word	0x40001c00
 8011f5c:	40002000 	.word	0x40002000

08011f60 <TIM_OC1_SetConfig>:
 8011f60:	b480      	push	{r7}
 8011f62:	b087      	sub	sp, #28
 8011f64:	af00      	add	r7, sp, #0
 8011f66:	6078      	str	r0, [r7, #4]
 8011f68:	6039      	str	r1, [r7, #0]
 8011f6a:	687b      	ldr	r3, [r7, #4]
 8011f6c:	6a1b      	ldr	r3, [r3, #32]
 8011f6e:	f023 0201 	bic.w	r2, r3, #1
 8011f72:	687b      	ldr	r3, [r7, #4]
 8011f74:	621a      	str	r2, [r3, #32]
 8011f76:	687b      	ldr	r3, [r7, #4]
 8011f78:	6a1b      	ldr	r3, [r3, #32]
 8011f7a:	617b      	str	r3, [r7, #20]
 8011f7c:	687b      	ldr	r3, [r7, #4]
 8011f7e:	685b      	ldr	r3, [r3, #4]
 8011f80:	613b      	str	r3, [r7, #16]
 8011f82:	687b      	ldr	r3, [r7, #4]
 8011f84:	699b      	ldr	r3, [r3, #24]
 8011f86:	60fb      	str	r3, [r7, #12]
 8011f88:	68fb      	ldr	r3, [r7, #12]
 8011f8a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8011f8e:	60fb      	str	r3, [r7, #12]
 8011f90:	68fb      	ldr	r3, [r7, #12]
 8011f92:	f023 0303 	bic.w	r3, r3, #3
 8011f96:	60fb      	str	r3, [r7, #12]
 8011f98:	683b      	ldr	r3, [r7, #0]
 8011f9a:	681b      	ldr	r3, [r3, #0]
 8011f9c:	68fa      	ldr	r2, [r7, #12]
 8011f9e:	4313      	orrs	r3, r2
 8011fa0:	60fb      	str	r3, [r7, #12]
 8011fa2:	697b      	ldr	r3, [r7, #20]
 8011fa4:	f023 0302 	bic.w	r3, r3, #2
 8011fa8:	617b      	str	r3, [r7, #20]
 8011faa:	683b      	ldr	r3, [r7, #0]
 8011fac:	689b      	ldr	r3, [r3, #8]
 8011fae:	697a      	ldr	r2, [r7, #20]
 8011fb0:	4313      	orrs	r3, r2
 8011fb2:	617b      	str	r3, [r7, #20]
 8011fb4:	687b      	ldr	r3, [r7, #4]
 8011fb6:	4a20      	ldr	r2, [pc, #128]	@ (8012038 <TIM_OC1_SetConfig+0xd8>)
 8011fb8:	4293      	cmp	r3, r2
 8011fba:	d003      	beq.n	8011fc4 <TIM_OC1_SetConfig+0x64>
 8011fbc:	687b      	ldr	r3, [r7, #4]
 8011fbe:	4a1f      	ldr	r2, [pc, #124]	@ (801203c <TIM_OC1_SetConfig+0xdc>)
 8011fc0:	4293      	cmp	r3, r2
 8011fc2:	d10c      	bne.n	8011fde <TIM_OC1_SetConfig+0x7e>
 8011fc4:	697b      	ldr	r3, [r7, #20]
 8011fc6:	f023 0308 	bic.w	r3, r3, #8
 8011fca:	617b      	str	r3, [r7, #20]
 8011fcc:	683b      	ldr	r3, [r7, #0]
 8011fce:	68db      	ldr	r3, [r3, #12]
 8011fd0:	697a      	ldr	r2, [r7, #20]
 8011fd2:	4313      	orrs	r3, r2
 8011fd4:	617b      	str	r3, [r7, #20]
 8011fd6:	697b      	ldr	r3, [r7, #20]
 8011fd8:	f023 0304 	bic.w	r3, r3, #4
 8011fdc:	617b      	str	r3, [r7, #20]
 8011fde:	687b      	ldr	r3, [r7, #4]
 8011fe0:	4a15      	ldr	r2, [pc, #84]	@ (8012038 <TIM_OC1_SetConfig+0xd8>)
 8011fe2:	4293      	cmp	r3, r2
 8011fe4:	d003      	beq.n	8011fee <TIM_OC1_SetConfig+0x8e>
 8011fe6:	687b      	ldr	r3, [r7, #4]
 8011fe8:	4a14      	ldr	r2, [pc, #80]	@ (801203c <TIM_OC1_SetConfig+0xdc>)
 8011fea:	4293      	cmp	r3, r2
 8011fec:	d111      	bne.n	8012012 <TIM_OC1_SetConfig+0xb2>
 8011fee:	693b      	ldr	r3, [r7, #16]
 8011ff0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8011ff4:	613b      	str	r3, [r7, #16]
 8011ff6:	693b      	ldr	r3, [r7, #16]
 8011ff8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8011ffc:	613b      	str	r3, [r7, #16]
 8011ffe:	683b      	ldr	r3, [r7, #0]
 8012000:	695b      	ldr	r3, [r3, #20]
 8012002:	693a      	ldr	r2, [r7, #16]
 8012004:	4313      	orrs	r3, r2
 8012006:	613b      	str	r3, [r7, #16]
 8012008:	683b      	ldr	r3, [r7, #0]
 801200a:	699b      	ldr	r3, [r3, #24]
 801200c:	693a      	ldr	r2, [r7, #16]
 801200e:	4313      	orrs	r3, r2
 8012010:	613b      	str	r3, [r7, #16]
 8012012:	687b      	ldr	r3, [r7, #4]
 8012014:	693a      	ldr	r2, [r7, #16]
 8012016:	605a      	str	r2, [r3, #4]
 8012018:	687b      	ldr	r3, [r7, #4]
 801201a:	68fa      	ldr	r2, [r7, #12]
 801201c:	619a      	str	r2, [r3, #24]
 801201e:	683b      	ldr	r3, [r7, #0]
 8012020:	685a      	ldr	r2, [r3, #4]
 8012022:	687b      	ldr	r3, [r7, #4]
 8012024:	635a      	str	r2, [r3, #52]	@ 0x34
 8012026:	687b      	ldr	r3, [r7, #4]
 8012028:	697a      	ldr	r2, [r7, #20]
 801202a:	621a      	str	r2, [r3, #32]
 801202c:	bf00      	nop
 801202e:	371c      	adds	r7, #28
 8012030:	46bd      	mov	sp, r7
 8012032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012036:	4770      	bx	lr
 8012038:	40010000 	.word	0x40010000
 801203c:	40010400 	.word	0x40010400

08012040 <TIM_OC2_SetConfig>:
 8012040:	b480      	push	{r7}
 8012042:	b087      	sub	sp, #28
 8012044:	af00      	add	r7, sp, #0
 8012046:	6078      	str	r0, [r7, #4]
 8012048:	6039      	str	r1, [r7, #0]
 801204a:	687b      	ldr	r3, [r7, #4]
 801204c:	6a1b      	ldr	r3, [r3, #32]
 801204e:	f023 0210 	bic.w	r2, r3, #16
 8012052:	687b      	ldr	r3, [r7, #4]
 8012054:	621a      	str	r2, [r3, #32]
 8012056:	687b      	ldr	r3, [r7, #4]
 8012058:	6a1b      	ldr	r3, [r3, #32]
 801205a:	617b      	str	r3, [r7, #20]
 801205c:	687b      	ldr	r3, [r7, #4]
 801205e:	685b      	ldr	r3, [r3, #4]
 8012060:	613b      	str	r3, [r7, #16]
 8012062:	687b      	ldr	r3, [r7, #4]
 8012064:	699b      	ldr	r3, [r3, #24]
 8012066:	60fb      	str	r3, [r7, #12]
 8012068:	68fb      	ldr	r3, [r7, #12]
 801206a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 801206e:	60fb      	str	r3, [r7, #12]
 8012070:	68fb      	ldr	r3, [r7, #12]
 8012072:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8012076:	60fb      	str	r3, [r7, #12]
 8012078:	683b      	ldr	r3, [r7, #0]
 801207a:	681b      	ldr	r3, [r3, #0]
 801207c:	021b      	lsls	r3, r3, #8
 801207e:	68fa      	ldr	r2, [r7, #12]
 8012080:	4313      	orrs	r3, r2
 8012082:	60fb      	str	r3, [r7, #12]
 8012084:	697b      	ldr	r3, [r7, #20]
 8012086:	f023 0320 	bic.w	r3, r3, #32
 801208a:	617b      	str	r3, [r7, #20]
 801208c:	683b      	ldr	r3, [r7, #0]
 801208e:	689b      	ldr	r3, [r3, #8]
 8012090:	011b      	lsls	r3, r3, #4
 8012092:	697a      	ldr	r2, [r7, #20]
 8012094:	4313      	orrs	r3, r2
 8012096:	617b      	str	r3, [r7, #20]
 8012098:	687b      	ldr	r3, [r7, #4]
 801209a:	4a22      	ldr	r2, [pc, #136]	@ (8012124 <TIM_OC2_SetConfig+0xe4>)
 801209c:	4293      	cmp	r3, r2
 801209e:	d003      	beq.n	80120a8 <TIM_OC2_SetConfig+0x68>
 80120a0:	687b      	ldr	r3, [r7, #4]
 80120a2:	4a21      	ldr	r2, [pc, #132]	@ (8012128 <TIM_OC2_SetConfig+0xe8>)
 80120a4:	4293      	cmp	r3, r2
 80120a6:	d10d      	bne.n	80120c4 <TIM_OC2_SetConfig+0x84>
 80120a8:	697b      	ldr	r3, [r7, #20]
 80120aa:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80120ae:	617b      	str	r3, [r7, #20]
 80120b0:	683b      	ldr	r3, [r7, #0]
 80120b2:	68db      	ldr	r3, [r3, #12]
 80120b4:	011b      	lsls	r3, r3, #4
 80120b6:	697a      	ldr	r2, [r7, #20]
 80120b8:	4313      	orrs	r3, r2
 80120ba:	617b      	str	r3, [r7, #20]
 80120bc:	697b      	ldr	r3, [r7, #20]
 80120be:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80120c2:	617b      	str	r3, [r7, #20]
 80120c4:	687b      	ldr	r3, [r7, #4]
 80120c6:	4a17      	ldr	r2, [pc, #92]	@ (8012124 <TIM_OC2_SetConfig+0xe4>)
 80120c8:	4293      	cmp	r3, r2
 80120ca:	d003      	beq.n	80120d4 <TIM_OC2_SetConfig+0x94>
 80120cc:	687b      	ldr	r3, [r7, #4]
 80120ce:	4a16      	ldr	r2, [pc, #88]	@ (8012128 <TIM_OC2_SetConfig+0xe8>)
 80120d0:	4293      	cmp	r3, r2
 80120d2:	d113      	bne.n	80120fc <TIM_OC2_SetConfig+0xbc>
 80120d4:	693b      	ldr	r3, [r7, #16]
 80120d6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80120da:	613b      	str	r3, [r7, #16]
 80120dc:	693b      	ldr	r3, [r7, #16]
 80120de:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80120e2:	613b      	str	r3, [r7, #16]
 80120e4:	683b      	ldr	r3, [r7, #0]
 80120e6:	695b      	ldr	r3, [r3, #20]
 80120e8:	009b      	lsls	r3, r3, #2
 80120ea:	693a      	ldr	r2, [r7, #16]
 80120ec:	4313      	orrs	r3, r2
 80120ee:	613b      	str	r3, [r7, #16]
 80120f0:	683b      	ldr	r3, [r7, #0]
 80120f2:	699b      	ldr	r3, [r3, #24]
 80120f4:	009b      	lsls	r3, r3, #2
 80120f6:	693a      	ldr	r2, [r7, #16]
 80120f8:	4313      	orrs	r3, r2
 80120fa:	613b      	str	r3, [r7, #16]
 80120fc:	687b      	ldr	r3, [r7, #4]
 80120fe:	693a      	ldr	r2, [r7, #16]
 8012100:	605a      	str	r2, [r3, #4]
 8012102:	687b      	ldr	r3, [r7, #4]
 8012104:	68fa      	ldr	r2, [r7, #12]
 8012106:	619a      	str	r2, [r3, #24]
 8012108:	683b      	ldr	r3, [r7, #0]
 801210a:	685a      	ldr	r2, [r3, #4]
 801210c:	687b      	ldr	r3, [r7, #4]
 801210e:	639a      	str	r2, [r3, #56]	@ 0x38
 8012110:	687b      	ldr	r3, [r7, #4]
 8012112:	697a      	ldr	r2, [r7, #20]
 8012114:	621a      	str	r2, [r3, #32]
 8012116:	bf00      	nop
 8012118:	371c      	adds	r7, #28
 801211a:	46bd      	mov	sp, r7
 801211c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012120:	4770      	bx	lr
 8012122:	bf00      	nop
 8012124:	40010000 	.word	0x40010000
 8012128:	40010400 	.word	0x40010400

0801212c <TIM_OC3_SetConfig>:
 801212c:	b480      	push	{r7}
 801212e:	b087      	sub	sp, #28
 8012130:	af00      	add	r7, sp, #0
 8012132:	6078      	str	r0, [r7, #4]
 8012134:	6039      	str	r1, [r7, #0]
 8012136:	687b      	ldr	r3, [r7, #4]
 8012138:	6a1b      	ldr	r3, [r3, #32]
 801213a:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 801213e:	687b      	ldr	r3, [r7, #4]
 8012140:	621a      	str	r2, [r3, #32]
 8012142:	687b      	ldr	r3, [r7, #4]
 8012144:	6a1b      	ldr	r3, [r3, #32]
 8012146:	617b      	str	r3, [r7, #20]
 8012148:	687b      	ldr	r3, [r7, #4]
 801214a:	685b      	ldr	r3, [r3, #4]
 801214c:	613b      	str	r3, [r7, #16]
 801214e:	687b      	ldr	r3, [r7, #4]
 8012150:	69db      	ldr	r3, [r3, #28]
 8012152:	60fb      	str	r3, [r7, #12]
 8012154:	68fb      	ldr	r3, [r7, #12]
 8012156:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801215a:	60fb      	str	r3, [r7, #12]
 801215c:	68fb      	ldr	r3, [r7, #12]
 801215e:	f023 0303 	bic.w	r3, r3, #3
 8012162:	60fb      	str	r3, [r7, #12]
 8012164:	683b      	ldr	r3, [r7, #0]
 8012166:	681b      	ldr	r3, [r3, #0]
 8012168:	68fa      	ldr	r2, [r7, #12]
 801216a:	4313      	orrs	r3, r2
 801216c:	60fb      	str	r3, [r7, #12]
 801216e:	697b      	ldr	r3, [r7, #20]
 8012170:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8012174:	617b      	str	r3, [r7, #20]
 8012176:	683b      	ldr	r3, [r7, #0]
 8012178:	689b      	ldr	r3, [r3, #8]
 801217a:	021b      	lsls	r3, r3, #8
 801217c:	697a      	ldr	r2, [r7, #20]
 801217e:	4313      	orrs	r3, r2
 8012180:	617b      	str	r3, [r7, #20]
 8012182:	687b      	ldr	r3, [r7, #4]
 8012184:	4a21      	ldr	r2, [pc, #132]	@ (801220c <TIM_OC3_SetConfig+0xe0>)
 8012186:	4293      	cmp	r3, r2
 8012188:	d003      	beq.n	8012192 <TIM_OC3_SetConfig+0x66>
 801218a:	687b      	ldr	r3, [r7, #4]
 801218c:	4a20      	ldr	r2, [pc, #128]	@ (8012210 <TIM_OC3_SetConfig+0xe4>)
 801218e:	4293      	cmp	r3, r2
 8012190:	d10d      	bne.n	80121ae <TIM_OC3_SetConfig+0x82>
 8012192:	697b      	ldr	r3, [r7, #20]
 8012194:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8012198:	617b      	str	r3, [r7, #20]
 801219a:	683b      	ldr	r3, [r7, #0]
 801219c:	68db      	ldr	r3, [r3, #12]
 801219e:	021b      	lsls	r3, r3, #8
 80121a0:	697a      	ldr	r2, [r7, #20]
 80121a2:	4313      	orrs	r3, r2
 80121a4:	617b      	str	r3, [r7, #20]
 80121a6:	697b      	ldr	r3, [r7, #20]
 80121a8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80121ac:	617b      	str	r3, [r7, #20]
 80121ae:	687b      	ldr	r3, [r7, #4]
 80121b0:	4a16      	ldr	r2, [pc, #88]	@ (801220c <TIM_OC3_SetConfig+0xe0>)
 80121b2:	4293      	cmp	r3, r2
 80121b4:	d003      	beq.n	80121be <TIM_OC3_SetConfig+0x92>
 80121b6:	687b      	ldr	r3, [r7, #4]
 80121b8:	4a15      	ldr	r2, [pc, #84]	@ (8012210 <TIM_OC3_SetConfig+0xe4>)
 80121ba:	4293      	cmp	r3, r2
 80121bc:	d113      	bne.n	80121e6 <TIM_OC3_SetConfig+0xba>
 80121be:	693b      	ldr	r3, [r7, #16]
 80121c0:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80121c4:	613b      	str	r3, [r7, #16]
 80121c6:	693b      	ldr	r3, [r7, #16]
 80121c8:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80121cc:	613b      	str	r3, [r7, #16]
 80121ce:	683b      	ldr	r3, [r7, #0]
 80121d0:	695b      	ldr	r3, [r3, #20]
 80121d2:	011b      	lsls	r3, r3, #4
 80121d4:	693a      	ldr	r2, [r7, #16]
 80121d6:	4313      	orrs	r3, r2
 80121d8:	613b      	str	r3, [r7, #16]
 80121da:	683b      	ldr	r3, [r7, #0]
 80121dc:	699b      	ldr	r3, [r3, #24]
 80121de:	011b      	lsls	r3, r3, #4
 80121e0:	693a      	ldr	r2, [r7, #16]
 80121e2:	4313      	orrs	r3, r2
 80121e4:	613b      	str	r3, [r7, #16]
 80121e6:	687b      	ldr	r3, [r7, #4]
 80121e8:	693a      	ldr	r2, [r7, #16]
 80121ea:	605a      	str	r2, [r3, #4]
 80121ec:	687b      	ldr	r3, [r7, #4]
 80121ee:	68fa      	ldr	r2, [r7, #12]
 80121f0:	61da      	str	r2, [r3, #28]
 80121f2:	683b      	ldr	r3, [r7, #0]
 80121f4:	685a      	ldr	r2, [r3, #4]
 80121f6:	687b      	ldr	r3, [r7, #4]
 80121f8:	63da      	str	r2, [r3, #60]	@ 0x3c
 80121fa:	687b      	ldr	r3, [r7, #4]
 80121fc:	697a      	ldr	r2, [r7, #20]
 80121fe:	621a      	str	r2, [r3, #32]
 8012200:	bf00      	nop
 8012202:	371c      	adds	r7, #28
 8012204:	46bd      	mov	sp, r7
 8012206:	f85d 7b04 	ldr.w	r7, [sp], #4
 801220a:	4770      	bx	lr
 801220c:	40010000 	.word	0x40010000
 8012210:	40010400 	.word	0x40010400

08012214 <TIM_OC4_SetConfig>:
 8012214:	b480      	push	{r7}
 8012216:	b087      	sub	sp, #28
 8012218:	af00      	add	r7, sp, #0
 801221a:	6078      	str	r0, [r7, #4]
 801221c:	6039      	str	r1, [r7, #0]
 801221e:	687b      	ldr	r3, [r7, #4]
 8012220:	6a1b      	ldr	r3, [r3, #32]
 8012222:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8012226:	687b      	ldr	r3, [r7, #4]
 8012228:	621a      	str	r2, [r3, #32]
 801222a:	687b      	ldr	r3, [r7, #4]
 801222c:	6a1b      	ldr	r3, [r3, #32]
 801222e:	613b      	str	r3, [r7, #16]
 8012230:	687b      	ldr	r3, [r7, #4]
 8012232:	685b      	ldr	r3, [r3, #4]
 8012234:	617b      	str	r3, [r7, #20]
 8012236:	687b      	ldr	r3, [r7, #4]
 8012238:	69db      	ldr	r3, [r3, #28]
 801223a:	60fb      	str	r3, [r7, #12]
 801223c:	68fb      	ldr	r3, [r7, #12]
 801223e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8012242:	60fb      	str	r3, [r7, #12]
 8012244:	68fb      	ldr	r3, [r7, #12]
 8012246:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 801224a:	60fb      	str	r3, [r7, #12]
 801224c:	683b      	ldr	r3, [r7, #0]
 801224e:	681b      	ldr	r3, [r3, #0]
 8012250:	021b      	lsls	r3, r3, #8
 8012252:	68fa      	ldr	r2, [r7, #12]
 8012254:	4313      	orrs	r3, r2
 8012256:	60fb      	str	r3, [r7, #12]
 8012258:	693b      	ldr	r3, [r7, #16]
 801225a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801225e:	613b      	str	r3, [r7, #16]
 8012260:	683b      	ldr	r3, [r7, #0]
 8012262:	689b      	ldr	r3, [r3, #8]
 8012264:	031b      	lsls	r3, r3, #12
 8012266:	693a      	ldr	r2, [r7, #16]
 8012268:	4313      	orrs	r3, r2
 801226a:	613b      	str	r3, [r7, #16]
 801226c:	687b      	ldr	r3, [r7, #4]
 801226e:	4a12      	ldr	r2, [pc, #72]	@ (80122b8 <TIM_OC4_SetConfig+0xa4>)
 8012270:	4293      	cmp	r3, r2
 8012272:	d003      	beq.n	801227c <TIM_OC4_SetConfig+0x68>
 8012274:	687b      	ldr	r3, [r7, #4]
 8012276:	4a11      	ldr	r2, [pc, #68]	@ (80122bc <TIM_OC4_SetConfig+0xa8>)
 8012278:	4293      	cmp	r3, r2
 801227a:	d109      	bne.n	8012290 <TIM_OC4_SetConfig+0x7c>
 801227c:	697b      	ldr	r3, [r7, #20]
 801227e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8012282:	617b      	str	r3, [r7, #20]
 8012284:	683b      	ldr	r3, [r7, #0]
 8012286:	695b      	ldr	r3, [r3, #20]
 8012288:	019b      	lsls	r3, r3, #6
 801228a:	697a      	ldr	r2, [r7, #20]
 801228c:	4313      	orrs	r3, r2
 801228e:	617b      	str	r3, [r7, #20]
 8012290:	687b      	ldr	r3, [r7, #4]
 8012292:	697a      	ldr	r2, [r7, #20]
 8012294:	605a      	str	r2, [r3, #4]
 8012296:	687b      	ldr	r3, [r7, #4]
 8012298:	68fa      	ldr	r2, [r7, #12]
 801229a:	61da      	str	r2, [r3, #28]
 801229c:	683b      	ldr	r3, [r7, #0]
 801229e:	685a      	ldr	r2, [r3, #4]
 80122a0:	687b      	ldr	r3, [r7, #4]
 80122a2:	641a      	str	r2, [r3, #64]	@ 0x40
 80122a4:	687b      	ldr	r3, [r7, #4]
 80122a6:	693a      	ldr	r2, [r7, #16]
 80122a8:	621a      	str	r2, [r3, #32]
 80122aa:	bf00      	nop
 80122ac:	371c      	adds	r7, #28
 80122ae:	46bd      	mov	sp, r7
 80122b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122b4:	4770      	bx	lr
 80122b6:	bf00      	nop
 80122b8:	40010000 	.word	0x40010000
 80122bc:	40010400 	.word	0x40010400

080122c0 <TIM_TI1_ConfigInputStage>:
 80122c0:	b480      	push	{r7}
 80122c2:	b087      	sub	sp, #28
 80122c4:	af00      	add	r7, sp, #0
 80122c6:	60f8      	str	r0, [r7, #12]
 80122c8:	60b9      	str	r1, [r7, #8]
 80122ca:	607a      	str	r2, [r7, #4]
 80122cc:	68fb      	ldr	r3, [r7, #12]
 80122ce:	6a1b      	ldr	r3, [r3, #32]
 80122d0:	617b      	str	r3, [r7, #20]
 80122d2:	68fb      	ldr	r3, [r7, #12]
 80122d4:	6a1b      	ldr	r3, [r3, #32]
 80122d6:	f023 0201 	bic.w	r2, r3, #1
 80122da:	68fb      	ldr	r3, [r7, #12]
 80122dc:	621a      	str	r2, [r3, #32]
 80122de:	68fb      	ldr	r3, [r7, #12]
 80122e0:	699b      	ldr	r3, [r3, #24]
 80122e2:	613b      	str	r3, [r7, #16]
 80122e4:	693b      	ldr	r3, [r7, #16]
 80122e6:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80122ea:	613b      	str	r3, [r7, #16]
 80122ec:	687b      	ldr	r3, [r7, #4]
 80122ee:	011b      	lsls	r3, r3, #4
 80122f0:	693a      	ldr	r2, [r7, #16]
 80122f2:	4313      	orrs	r3, r2
 80122f4:	613b      	str	r3, [r7, #16]
 80122f6:	697b      	ldr	r3, [r7, #20]
 80122f8:	f023 030a 	bic.w	r3, r3, #10
 80122fc:	617b      	str	r3, [r7, #20]
 80122fe:	697a      	ldr	r2, [r7, #20]
 8012300:	68bb      	ldr	r3, [r7, #8]
 8012302:	4313      	orrs	r3, r2
 8012304:	617b      	str	r3, [r7, #20]
 8012306:	68fb      	ldr	r3, [r7, #12]
 8012308:	693a      	ldr	r2, [r7, #16]
 801230a:	619a      	str	r2, [r3, #24]
 801230c:	68fb      	ldr	r3, [r7, #12]
 801230e:	697a      	ldr	r2, [r7, #20]
 8012310:	621a      	str	r2, [r3, #32]
 8012312:	bf00      	nop
 8012314:	371c      	adds	r7, #28
 8012316:	46bd      	mov	sp, r7
 8012318:	f85d 7b04 	ldr.w	r7, [sp], #4
 801231c:	4770      	bx	lr

0801231e <TIM_TI2_ConfigInputStage>:
 801231e:	b480      	push	{r7}
 8012320:	b087      	sub	sp, #28
 8012322:	af00      	add	r7, sp, #0
 8012324:	60f8      	str	r0, [r7, #12]
 8012326:	60b9      	str	r1, [r7, #8]
 8012328:	607a      	str	r2, [r7, #4]
 801232a:	68fb      	ldr	r3, [r7, #12]
 801232c:	6a1b      	ldr	r3, [r3, #32]
 801232e:	f023 0210 	bic.w	r2, r3, #16
 8012332:	68fb      	ldr	r3, [r7, #12]
 8012334:	621a      	str	r2, [r3, #32]
 8012336:	68fb      	ldr	r3, [r7, #12]
 8012338:	699b      	ldr	r3, [r3, #24]
 801233a:	617b      	str	r3, [r7, #20]
 801233c:	68fb      	ldr	r3, [r7, #12]
 801233e:	6a1b      	ldr	r3, [r3, #32]
 8012340:	613b      	str	r3, [r7, #16]
 8012342:	697b      	ldr	r3, [r7, #20]
 8012344:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8012348:	617b      	str	r3, [r7, #20]
 801234a:	687b      	ldr	r3, [r7, #4]
 801234c:	031b      	lsls	r3, r3, #12
 801234e:	697a      	ldr	r2, [r7, #20]
 8012350:	4313      	orrs	r3, r2
 8012352:	617b      	str	r3, [r7, #20]
 8012354:	693b      	ldr	r3, [r7, #16]
 8012356:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 801235a:	613b      	str	r3, [r7, #16]
 801235c:	68bb      	ldr	r3, [r7, #8]
 801235e:	011b      	lsls	r3, r3, #4
 8012360:	693a      	ldr	r2, [r7, #16]
 8012362:	4313      	orrs	r3, r2
 8012364:	613b      	str	r3, [r7, #16]
 8012366:	68fb      	ldr	r3, [r7, #12]
 8012368:	697a      	ldr	r2, [r7, #20]
 801236a:	619a      	str	r2, [r3, #24]
 801236c:	68fb      	ldr	r3, [r7, #12]
 801236e:	693a      	ldr	r2, [r7, #16]
 8012370:	621a      	str	r2, [r3, #32]
 8012372:	bf00      	nop
 8012374:	371c      	adds	r7, #28
 8012376:	46bd      	mov	sp, r7
 8012378:	f85d 7b04 	ldr.w	r7, [sp], #4
 801237c:	4770      	bx	lr

0801237e <TIM_ITRx_SetConfig>:
 801237e:	b480      	push	{r7}
 8012380:	b085      	sub	sp, #20
 8012382:	af00      	add	r7, sp, #0
 8012384:	6078      	str	r0, [r7, #4]
 8012386:	6039      	str	r1, [r7, #0]
 8012388:	687b      	ldr	r3, [r7, #4]
 801238a:	689b      	ldr	r3, [r3, #8]
 801238c:	60fb      	str	r3, [r7, #12]
 801238e:	68fb      	ldr	r3, [r7, #12]
 8012390:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8012394:	60fb      	str	r3, [r7, #12]
 8012396:	683a      	ldr	r2, [r7, #0]
 8012398:	68fb      	ldr	r3, [r7, #12]
 801239a:	4313      	orrs	r3, r2
 801239c:	f043 0307 	orr.w	r3, r3, #7
 80123a0:	60fb      	str	r3, [r7, #12]
 80123a2:	687b      	ldr	r3, [r7, #4]
 80123a4:	68fa      	ldr	r2, [r7, #12]
 80123a6:	609a      	str	r2, [r3, #8]
 80123a8:	bf00      	nop
 80123aa:	3714      	adds	r7, #20
 80123ac:	46bd      	mov	sp, r7
 80123ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123b2:	4770      	bx	lr

080123b4 <TIM_ETR_SetConfig>:
 80123b4:	b480      	push	{r7}
 80123b6:	b087      	sub	sp, #28
 80123b8:	af00      	add	r7, sp, #0
 80123ba:	60f8      	str	r0, [r7, #12]
 80123bc:	60b9      	str	r1, [r7, #8]
 80123be:	607a      	str	r2, [r7, #4]
 80123c0:	603b      	str	r3, [r7, #0]
 80123c2:	68fb      	ldr	r3, [r7, #12]
 80123c4:	689b      	ldr	r3, [r3, #8]
 80123c6:	617b      	str	r3, [r7, #20]
 80123c8:	697b      	ldr	r3, [r7, #20]
 80123ca:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80123ce:	617b      	str	r3, [r7, #20]
 80123d0:	683b      	ldr	r3, [r7, #0]
 80123d2:	021a      	lsls	r2, r3, #8
 80123d4:	687b      	ldr	r3, [r7, #4]
 80123d6:	431a      	orrs	r2, r3
 80123d8:	68bb      	ldr	r3, [r7, #8]
 80123da:	4313      	orrs	r3, r2
 80123dc:	697a      	ldr	r2, [r7, #20]
 80123de:	4313      	orrs	r3, r2
 80123e0:	617b      	str	r3, [r7, #20]
 80123e2:	68fb      	ldr	r3, [r7, #12]
 80123e4:	697a      	ldr	r2, [r7, #20]
 80123e6:	609a      	str	r2, [r3, #8]
 80123e8:	bf00      	nop
 80123ea:	371c      	adds	r7, #28
 80123ec:	46bd      	mov	sp, r7
 80123ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80123f2:	4770      	bx	lr

080123f4 <TIM_CCxChannelCmd>:
 80123f4:	b480      	push	{r7}
 80123f6:	b087      	sub	sp, #28
 80123f8:	af00      	add	r7, sp, #0
 80123fa:	60f8      	str	r0, [r7, #12]
 80123fc:	60b9      	str	r1, [r7, #8]
 80123fe:	607a      	str	r2, [r7, #4]
 8012400:	68bb      	ldr	r3, [r7, #8]
 8012402:	f003 031f 	and.w	r3, r3, #31
 8012406:	2201      	movs	r2, #1
 8012408:	fa02 f303 	lsl.w	r3, r2, r3
 801240c:	617b      	str	r3, [r7, #20]
 801240e:	68fb      	ldr	r3, [r7, #12]
 8012410:	6a1a      	ldr	r2, [r3, #32]
 8012412:	697b      	ldr	r3, [r7, #20]
 8012414:	43db      	mvns	r3, r3
 8012416:	401a      	ands	r2, r3
 8012418:	68fb      	ldr	r3, [r7, #12]
 801241a:	621a      	str	r2, [r3, #32]
 801241c:	68fb      	ldr	r3, [r7, #12]
 801241e:	6a1a      	ldr	r2, [r3, #32]
 8012420:	68bb      	ldr	r3, [r7, #8]
 8012422:	f003 031f 	and.w	r3, r3, #31
 8012426:	6879      	ldr	r1, [r7, #4]
 8012428:	fa01 f303 	lsl.w	r3, r1, r3
 801242c:	431a      	orrs	r2, r3
 801242e:	68fb      	ldr	r3, [r7, #12]
 8012430:	621a      	str	r2, [r3, #32]
 8012432:	bf00      	nop
 8012434:	371c      	adds	r7, #28
 8012436:	46bd      	mov	sp, r7
 8012438:	f85d 7b04 	ldr.w	r7, [sp], #4
 801243c:	4770      	bx	lr
	...

08012440 <HAL_TIMEx_MasterConfigSynchronization>:
 8012440:	b480      	push	{r7}
 8012442:	b085      	sub	sp, #20
 8012444:	af00      	add	r7, sp, #0
 8012446:	6078      	str	r0, [r7, #4]
 8012448:	6039      	str	r1, [r7, #0]
 801244a:	687b      	ldr	r3, [r7, #4]
 801244c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8012450:	2b01      	cmp	r3, #1
 8012452:	d101      	bne.n	8012458 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8012454:	2302      	movs	r3, #2
 8012456:	e05a      	b.n	801250e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8012458:	687b      	ldr	r3, [r7, #4]
 801245a:	2201      	movs	r2, #1
 801245c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012460:	687b      	ldr	r3, [r7, #4]
 8012462:	2202      	movs	r2, #2
 8012464:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012468:	687b      	ldr	r3, [r7, #4]
 801246a:	681b      	ldr	r3, [r3, #0]
 801246c:	685b      	ldr	r3, [r3, #4]
 801246e:	60fb      	str	r3, [r7, #12]
 8012470:	687b      	ldr	r3, [r7, #4]
 8012472:	681b      	ldr	r3, [r3, #0]
 8012474:	689b      	ldr	r3, [r3, #8]
 8012476:	60bb      	str	r3, [r7, #8]
 8012478:	68fb      	ldr	r3, [r7, #12]
 801247a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 801247e:	60fb      	str	r3, [r7, #12]
 8012480:	683b      	ldr	r3, [r7, #0]
 8012482:	681b      	ldr	r3, [r3, #0]
 8012484:	68fa      	ldr	r2, [r7, #12]
 8012486:	4313      	orrs	r3, r2
 8012488:	60fb      	str	r3, [r7, #12]
 801248a:	687b      	ldr	r3, [r7, #4]
 801248c:	681b      	ldr	r3, [r3, #0]
 801248e:	68fa      	ldr	r2, [r7, #12]
 8012490:	605a      	str	r2, [r3, #4]
 8012492:	687b      	ldr	r3, [r7, #4]
 8012494:	681b      	ldr	r3, [r3, #0]
 8012496:	4a21      	ldr	r2, [pc, #132]	@ (801251c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8012498:	4293      	cmp	r3, r2
 801249a:	d022      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 801249c:	687b      	ldr	r3, [r7, #4]
 801249e:	681b      	ldr	r3, [r3, #0]
 80124a0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80124a4:	d01d      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80124a6:	687b      	ldr	r3, [r7, #4]
 80124a8:	681b      	ldr	r3, [r3, #0]
 80124aa:	4a1d      	ldr	r2, [pc, #116]	@ (8012520 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80124ac:	4293      	cmp	r3, r2
 80124ae:	d018      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80124b0:	687b      	ldr	r3, [r7, #4]
 80124b2:	681b      	ldr	r3, [r3, #0]
 80124b4:	4a1b      	ldr	r2, [pc, #108]	@ (8012524 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80124b6:	4293      	cmp	r3, r2
 80124b8:	d013      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80124ba:	687b      	ldr	r3, [r7, #4]
 80124bc:	681b      	ldr	r3, [r3, #0]
 80124be:	4a1a      	ldr	r2, [pc, #104]	@ (8012528 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80124c0:	4293      	cmp	r3, r2
 80124c2:	d00e      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80124c4:	687b      	ldr	r3, [r7, #4]
 80124c6:	681b      	ldr	r3, [r3, #0]
 80124c8:	4a18      	ldr	r2, [pc, #96]	@ (801252c <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80124ca:	4293      	cmp	r3, r2
 80124cc:	d009      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80124ce:	687b      	ldr	r3, [r7, #4]
 80124d0:	681b      	ldr	r3, [r3, #0]
 80124d2:	4a17      	ldr	r2, [pc, #92]	@ (8012530 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80124d4:	4293      	cmp	r3, r2
 80124d6:	d004      	beq.n	80124e2 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80124d8:	687b      	ldr	r3, [r7, #4]
 80124da:	681b      	ldr	r3, [r3, #0]
 80124dc:	4a15      	ldr	r2, [pc, #84]	@ (8012534 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80124de:	4293      	cmp	r3, r2
 80124e0:	d10c      	bne.n	80124fc <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80124e2:	68bb      	ldr	r3, [r7, #8]
 80124e4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80124e8:	60bb      	str	r3, [r7, #8]
 80124ea:	683b      	ldr	r3, [r7, #0]
 80124ec:	685b      	ldr	r3, [r3, #4]
 80124ee:	68ba      	ldr	r2, [r7, #8]
 80124f0:	4313      	orrs	r3, r2
 80124f2:	60bb      	str	r3, [r7, #8]
 80124f4:	687b      	ldr	r3, [r7, #4]
 80124f6:	681b      	ldr	r3, [r3, #0]
 80124f8:	68ba      	ldr	r2, [r7, #8]
 80124fa:	609a      	str	r2, [r3, #8]
 80124fc:	687b      	ldr	r3, [r7, #4]
 80124fe:	2201      	movs	r2, #1
 8012500:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012504:	687b      	ldr	r3, [r7, #4]
 8012506:	2200      	movs	r2, #0
 8012508:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801250c:	2300      	movs	r3, #0
 801250e:	4618      	mov	r0, r3
 8012510:	3714      	adds	r7, #20
 8012512:	46bd      	mov	sp, r7
 8012514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012518:	4770      	bx	lr
 801251a:	bf00      	nop
 801251c:	40010000 	.word	0x40010000
 8012520:	40000400 	.word	0x40000400
 8012524:	40000800 	.word	0x40000800
 8012528:	40000c00 	.word	0x40000c00
 801252c:	40010400 	.word	0x40010400
 8012530:	40014000 	.word	0x40014000
 8012534:	40001800 	.word	0x40001800

08012538 <HAL_TIMEx_CommutCallback>:
 8012538:	b480      	push	{r7}
 801253a:	b083      	sub	sp, #12
 801253c:	af00      	add	r7, sp, #0
 801253e:	6078      	str	r0, [r7, #4]
 8012540:	bf00      	nop
 8012542:	370c      	adds	r7, #12
 8012544:	46bd      	mov	sp, r7
 8012546:	f85d 7b04 	ldr.w	r7, [sp], #4
 801254a:	4770      	bx	lr

0801254c <HAL_TIMEx_BreakCallback>:
 801254c:	b480      	push	{r7}
 801254e:	b083      	sub	sp, #12
 8012550:	af00      	add	r7, sp, #0
 8012552:	6078      	str	r0, [r7, #4]
 8012554:	bf00      	nop
 8012556:	370c      	adds	r7, #12
 8012558:	46bd      	mov	sp, r7
 801255a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801255e:	4770      	bx	lr

08012560 <HAL_UART_Init>:
 8012560:	b580      	push	{r7, lr}
 8012562:	b082      	sub	sp, #8
 8012564:	af00      	add	r7, sp, #0
 8012566:	6078      	str	r0, [r7, #4]
 8012568:	687b      	ldr	r3, [r7, #4]
 801256a:	2b00      	cmp	r3, #0
 801256c:	d101      	bne.n	8012572 <HAL_UART_Init+0x12>
 801256e:	2301      	movs	r3, #1
 8012570:	e03f      	b.n	80125f2 <HAL_UART_Init+0x92>
 8012572:	687b      	ldr	r3, [r7, #4]
 8012574:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012578:	b2db      	uxtb	r3, r3
 801257a:	2b00      	cmp	r3, #0
 801257c:	d106      	bne.n	801258c <HAL_UART_Init+0x2c>
 801257e:	687b      	ldr	r3, [r7, #4]
 8012580:	2200      	movs	r2, #0
 8012582:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012586:	6878      	ldr	r0, [r7, #4]
 8012588:	f7f2 f892 	bl	80046b0 <HAL_UART_MspInit>
 801258c:	687b      	ldr	r3, [r7, #4]
 801258e:	2224      	movs	r2, #36	@ 0x24
 8012590:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012594:	687b      	ldr	r3, [r7, #4]
 8012596:	681b      	ldr	r3, [r3, #0]
 8012598:	68da      	ldr	r2, [r3, #12]
 801259a:	687b      	ldr	r3, [r7, #4]
 801259c:	681b      	ldr	r3, [r3, #0]
 801259e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80125a2:	60da      	str	r2, [r3, #12]
 80125a4:	6878      	ldr	r0, [r7, #4]
 80125a6:	f000 fe51 	bl	801324c <UART_SetConfig>
 80125aa:	687b      	ldr	r3, [r7, #4]
 80125ac:	681b      	ldr	r3, [r3, #0]
 80125ae:	691a      	ldr	r2, [r3, #16]
 80125b0:	687b      	ldr	r3, [r7, #4]
 80125b2:	681b      	ldr	r3, [r3, #0]
 80125b4:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80125b8:	611a      	str	r2, [r3, #16]
 80125ba:	687b      	ldr	r3, [r7, #4]
 80125bc:	681b      	ldr	r3, [r3, #0]
 80125be:	695a      	ldr	r2, [r3, #20]
 80125c0:	687b      	ldr	r3, [r7, #4]
 80125c2:	681b      	ldr	r3, [r3, #0]
 80125c4:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80125c8:	615a      	str	r2, [r3, #20]
 80125ca:	687b      	ldr	r3, [r7, #4]
 80125cc:	681b      	ldr	r3, [r3, #0]
 80125ce:	68da      	ldr	r2, [r3, #12]
 80125d0:	687b      	ldr	r3, [r7, #4]
 80125d2:	681b      	ldr	r3, [r3, #0]
 80125d4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80125d8:	60da      	str	r2, [r3, #12]
 80125da:	687b      	ldr	r3, [r7, #4]
 80125dc:	2200      	movs	r2, #0
 80125de:	641a      	str	r2, [r3, #64]	@ 0x40
 80125e0:	687b      	ldr	r3, [r7, #4]
 80125e2:	2220      	movs	r2, #32
 80125e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80125e8:	687b      	ldr	r3, [r7, #4]
 80125ea:	2220      	movs	r2, #32
 80125ec:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80125f0:	2300      	movs	r3, #0
 80125f2:	4618      	mov	r0, r3
 80125f4:	3708      	adds	r7, #8
 80125f6:	46bd      	mov	sp, r7
 80125f8:	bd80      	pop	{r7, pc}
	...

080125fc <HAL_UART_Transmit_DMA>:
 80125fc:	b580      	push	{r7, lr}
 80125fe:	b08c      	sub	sp, #48	@ 0x30
 8012600:	af00      	add	r7, sp, #0
 8012602:	60f8      	str	r0, [r7, #12]
 8012604:	60b9      	str	r1, [r7, #8]
 8012606:	4613      	mov	r3, r2
 8012608:	80fb      	strh	r3, [r7, #6]
 801260a:	68fb      	ldr	r3, [r7, #12]
 801260c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012610:	b2db      	uxtb	r3, r3
 8012612:	2b20      	cmp	r3, #32
 8012614:	d165      	bne.n	80126e2 <HAL_UART_Transmit_DMA+0xe6>
 8012616:	68bb      	ldr	r3, [r7, #8]
 8012618:	2b00      	cmp	r3, #0
 801261a:	d002      	beq.n	8012622 <HAL_UART_Transmit_DMA+0x26>
 801261c:	88fb      	ldrh	r3, [r7, #6]
 801261e:	2b00      	cmp	r3, #0
 8012620:	d101      	bne.n	8012626 <HAL_UART_Transmit_DMA+0x2a>
 8012622:	2301      	movs	r3, #1
 8012624:	e05e      	b.n	80126e4 <HAL_UART_Transmit_DMA+0xe8>
 8012626:	68fb      	ldr	r3, [r7, #12]
 8012628:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 801262c:	2b01      	cmp	r3, #1
 801262e:	d101      	bne.n	8012634 <HAL_UART_Transmit_DMA+0x38>
 8012630:	2302      	movs	r3, #2
 8012632:	e057      	b.n	80126e4 <HAL_UART_Transmit_DMA+0xe8>
 8012634:	68fb      	ldr	r3, [r7, #12]
 8012636:	2201      	movs	r2, #1
 8012638:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801263c:	68ba      	ldr	r2, [r7, #8]
 801263e:	68fb      	ldr	r3, [r7, #12]
 8012640:	621a      	str	r2, [r3, #32]
 8012642:	68fb      	ldr	r3, [r7, #12]
 8012644:	88fa      	ldrh	r2, [r7, #6]
 8012646:	849a      	strh	r2, [r3, #36]	@ 0x24
 8012648:	68fb      	ldr	r3, [r7, #12]
 801264a:	88fa      	ldrh	r2, [r7, #6]
 801264c:	84da      	strh	r2, [r3, #38]	@ 0x26
 801264e:	68fb      	ldr	r3, [r7, #12]
 8012650:	2200      	movs	r2, #0
 8012652:	641a      	str	r2, [r3, #64]	@ 0x40
 8012654:	68fb      	ldr	r3, [r7, #12]
 8012656:	2221      	movs	r2, #33	@ 0x21
 8012658:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801265c:	68fb      	ldr	r3, [r7, #12]
 801265e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012660:	4a22      	ldr	r2, [pc, #136]	@ (80126ec <HAL_UART_Transmit_DMA+0xf0>)
 8012662:	63da      	str	r2, [r3, #60]	@ 0x3c
 8012664:	68fb      	ldr	r3, [r7, #12]
 8012666:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012668:	4a21      	ldr	r2, [pc, #132]	@ (80126f0 <HAL_UART_Transmit_DMA+0xf4>)
 801266a:	641a      	str	r2, [r3, #64]	@ 0x40
 801266c:	68fb      	ldr	r3, [r7, #12]
 801266e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012670:	4a20      	ldr	r2, [pc, #128]	@ (80126f4 <HAL_UART_Transmit_DMA+0xf8>)
 8012672:	64da      	str	r2, [r3, #76]	@ 0x4c
 8012674:	68fb      	ldr	r3, [r7, #12]
 8012676:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012678:	2200      	movs	r2, #0
 801267a:	651a      	str	r2, [r3, #80]	@ 0x50
 801267c:	f107 0308 	add.w	r3, r7, #8
 8012680:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012682:	68fb      	ldr	r3, [r7, #12]
 8012684:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 8012686:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8012688:	6819      	ldr	r1, [r3, #0]
 801268a:	68fb      	ldr	r3, [r7, #12]
 801268c:	681b      	ldr	r3, [r3, #0]
 801268e:	3304      	adds	r3, #4
 8012690:	461a      	mov	r2, r3
 8012692:	88fb      	ldrh	r3, [r7, #6]
 8012694:	f7fa f828 	bl	800c6e8 <HAL_DMA_Start_IT>
 8012698:	68fb      	ldr	r3, [r7, #12]
 801269a:	681b      	ldr	r3, [r3, #0]
 801269c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80126a0:	601a      	str	r2, [r3, #0]
 80126a2:	68fb      	ldr	r3, [r7, #12]
 80126a4:	2200      	movs	r2, #0
 80126a6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80126aa:	68fb      	ldr	r3, [r7, #12]
 80126ac:	681b      	ldr	r3, [r3, #0]
 80126ae:	3314      	adds	r3, #20
 80126b0:	61bb      	str	r3, [r7, #24]
 80126b2:	69bb      	ldr	r3, [r7, #24]
 80126b4:	e853 3f00 	ldrex	r3, [r3]
 80126b8:	617b      	str	r3, [r7, #20]
 80126ba:	697b      	ldr	r3, [r7, #20]
 80126bc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80126c0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80126c2:	68fb      	ldr	r3, [r7, #12]
 80126c4:	681b      	ldr	r3, [r3, #0]
 80126c6:	3314      	adds	r3, #20
 80126c8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80126ca:	627a      	str	r2, [r7, #36]	@ 0x24
 80126cc:	623b      	str	r3, [r7, #32]
 80126ce:	6a39      	ldr	r1, [r7, #32]
 80126d0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80126d2:	e841 2300 	strex	r3, r2, [r1]
 80126d6:	61fb      	str	r3, [r7, #28]
 80126d8:	69fb      	ldr	r3, [r7, #28]
 80126da:	2b00      	cmp	r3, #0
 80126dc:	d1e5      	bne.n	80126aa <HAL_UART_Transmit_DMA+0xae>
 80126de:	2300      	movs	r3, #0
 80126e0:	e000      	b.n	80126e4 <HAL_UART_Transmit_DMA+0xe8>
 80126e2:	2302      	movs	r3, #2
 80126e4:	4618      	mov	r0, r3
 80126e6:	3730      	adds	r7, #48	@ 0x30
 80126e8:	46bd      	mov	sp, r7
 80126ea:	bd80      	pop	{r7, pc}
 80126ec:	08012d7d 	.word	0x08012d7d
 80126f0:	08012e17 	.word	0x08012e17
 80126f4:	08012e33 	.word	0x08012e33

080126f8 <HAL_UART_DMAStop>:
 80126f8:	b580      	push	{r7, lr}
 80126fa:	b090      	sub	sp, #64	@ 0x40
 80126fc:	af00      	add	r7, sp, #0
 80126fe:	6078      	str	r0, [r7, #4]
 8012700:	2300      	movs	r3, #0
 8012702:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012704:	687b      	ldr	r3, [r7, #4]
 8012706:	681b      	ldr	r3, [r3, #0]
 8012708:	695b      	ldr	r3, [r3, #20]
 801270a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 801270e:	2b80      	cmp	r3, #128	@ 0x80
 8012710:	bf0c      	ite	eq
 8012712:	2301      	moveq	r3, #1
 8012714:	2300      	movne	r3, #0
 8012716:	b2db      	uxtb	r3, r3
 8012718:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801271a:	687b      	ldr	r3, [r7, #4]
 801271c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012720:	b2db      	uxtb	r3, r3
 8012722:	2b21      	cmp	r3, #33	@ 0x21
 8012724:	d128      	bne.n	8012778 <HAL_UART_DMAStop+0x80>
 8012726:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012728:	2b00      	cmp	r3, #0
 801272a:	d025      	beq.n	8012778 <HAL_UART_DMAStop+0x80>
 801272c:	687b      	ldr	r3, [r7, #4]
 801272e:	681b      	ldr	r3, [r3, #0]
 8012730:	3314      	adds	r3, #20
 8012732:	627b      	str	r3, [r7, #36]	@ 0x24
 8012734:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012736:	e853 3f00 	ldrex	r3, [r3]
 801273a:	623b      	str	r3, [r7, #32]
 801273c:	6a3b      	ldr	r3, [r7, #32]
 801273e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012742:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012744:	687b      	ldr	r3, [r7, #4]
 8012746:	681b      	ldr	r3, [r3, #0]
 8012748:	3314      	adds	r3, #20
 801274a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 801274c:	633a      	str	r2, [r7, #48]	@ 0x30
 801274e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012750:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012752:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012754:	e841 2300 	strex	r3, r2, [r1]
 8012758:	62bb      	str	r3, [r7, #40]	@ 0x28
 801275a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801275c:	2b00      	cmp	r3, #0
 801275e:	d1e5      	bne.n	801272c <HAL_UART_DMAStop+0x34>
 8012760:	687b      	ldr	r3, [r7, #4]
 8012762:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012764:	2b00      	cmp	r3, #0
 8012766:	d004      	beq.n	8012772 <HAL_UART_DMAStop+0x7a>
 8012768:	687b      	ldr	r3, [r7, #4]
 801276a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801276c:	4618      	mov	r0, r3
 801276e:	f7fa f813 	bl	800c798 <HAL_DMA_Abort>
 8012772:	6878      	ldr	r0, [r7, #4]
 8012774:	f000 fba7 	bl	8012ec6 <UART_EndTxTransfer>
 8012778:	687b      	ldr	r3, [r7, #4]
 801277a:	681b      	ldr	r3, [r3, #0]
 801277c:	695b      	ldr	r3, [r3, #20]
 801277e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012782:	2b40      	cmp	r3, #64	@ 0x40
 8012784:	bf0c      	ite	eq
 8012786:	2301      	moveq	r3, #1
 8012788:	2300      	movne	r3, #0
 801278a:	b2db      	uxtb	r3, r3
 801278c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801278e:	687b      	ldr	r3, [r7, #4]
 8012790:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012794:	b2db      	uxtb	r3, r3
 8012796:	2b22      	cmp	r3, #34	@ 0x22
 8012798:	d128      	bne.n	80127ec <HAL_UART_DMAStop+0xf4>
 801279a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801279c:	2b00      	cmp	r3, #0
 801279e:	d025      	beq.n	80127ec <HAL_UART_DMAStop+0xf4>
 80127a0:	687b      	ldr	r3, [r7, #4]
 80127a2:	681b      	ldr	r3, [r3, #0]
 80127a4:	3314      	adds	r3, #20
 80127a6:	613b      	str	r3, [r7, #16]
 80127a8:	693b      	ldr	r3, [r7, #16]
 80127aa:	e853 3f00 	ldrex	r3, [r3]
 80127ae:	60fb      	str	r3, [r7, #12]
 80127b0:	68fb      	ldr	r3, [r7, #12]
 80127b2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80127b6:	637b      	str	r3, [r7, #52]	@ 0x34
 80127b8:	687b      	ldr	r3, [r7, #4]
 80127ba:	681b      	ldr	r3, [r3, #0]
 80127bc:	3314      	adds	r3, #20
 80127be:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80127c0:	61fa      	str	r2, [r7, #28]
 80127c2:	61bb      	str	r3, [r7, #24]
 80127c4:	69b9      	ldr	r1, [r7, #24]
 80127c6:	69fa      	ldr	r2, [r7, #28]
 80127c8:	e841 2300 	strex	r3, r2, [r1]
 80127cc:	617b      	str	r3, [r7, #20]
 80127ce:	697b      	ldr	r3, [r7, #20]
 80127d0:	2b00      	cmp	r3, #0
 80127d2:	d1e5      	bne.n	80127a0 <HAL_UART_DMAStop+0xa8>
 80127d4:	687b      	ldr	r3, [r7, #4]
 80127d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80127d8:	2b00      	cmp	r3, #0
 80127da:	d004      	beq.n	80127e6 <HAL_UART_DMAStop+0xee>
 80127dc:	687b      	ldr	r3, [r7, #4]
 80127de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80127e0:	4618      	mov	r0, r3
 80127e2:	f7f9 ffd9 	bl	800c798 <HAL_DMA_Abort>
 80127e6:	6878      	ldr	r0, [r7, #4]
 80127e8:	f000 fb95 	bl	8012f16 <UART_EndRxTransfer>
 80127ec:	2300      	movs	r3, #0
 80127ee:	4618      	mov	r0, r3
 80127f0:	3740      	adds	r7, #64	@ 0x40
 80127f2:	46bd      	mov	sp, r7
 80127f4:	bd80      	pop	{r7, pc}
	...

080127f8 <HAL_UART_IRQHandler>:
 80127f8:	b580      	push	{r7, lr}
 80127fa:	b0ba      	sub	sp, #232	@ 0xe8
 80127fc:	af00      	add	r7, sp, #0
 80127fe:	6078      	str	r0, [r7, #4]
 8012800:	687b      	ldr	r3, [r7, #4]
 8012802:	681b      	ldr	r3, [r3, #0]
 8012804:	681b      	ldr	r3, [r3, #0]
 8012806:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 801280a:	687b      	ldr	r3, [r7, #4]
 801280c:	681b      	ldr	r3, [r3, #0]
 801280e:	68db      	ldr	r3, [r3, #12]
 8012810:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8012814:	687b      	ldr	r3, [r7, #4]
 8012816:	681b      	ldr	r3, [r3, #0]
 8012818:	695b      	ldr	r3, [r3, #20]
 801281a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 801281e:	2300      	movs	r3, #0
 8012820:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8012824:	2300      	movs	r3, #0
 8012826:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 801282a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801282e:	f003 030f 	and.w	r3, r3, #15
 8012832:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8012836:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 801283a:	2b00      	cmp	r3, #0
 801283c:	d10f      	bne.n	801285e <HAL_UART_IRQHandler+0x66>
 801283e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012842:	f003 0320 	and.w	r3, r3, #32
 8012846:	2b00      	cmp	r3, #0
 8012848:	d009      	beq.n	801285e <HAL_UART_IRQHandler+0x66>
 801284a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 801284e:	f003 0320 	and.w	r3, r3, #32
 8012852:	2b00      	cmp	r3, #0
 8012854:	d003      	beq.n	801285e <HAL_UART_IRQHandler+0x66>
 8012856:	6878      	ldr	r0, [r7, #4]
 8012858:	f000 fc3c 	bl	80130d4 <UART_Receive_IT>
 801285c:	e256      	b.n	8012d0c <HAL_UART_IRQHandler+0x514>
 801285e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8012862:	2b00      	cmp	r3, #0
 8012864:	f000 80de 	beq.w	8012a24 <HAL_UART_IRQHandler+0x22c>
 8012868:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 801286c:	f003 0301 	and.w	r3, r3, #1
 8012870:	2b00      	cmp	r3, #0
 8012872:	d106      	bne.n	8012882 <HAL_UART_IRQHandler+0x8a>
 8012874:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012878:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 801287c:	2b00      	cmp	r3, #0
 801287e:	f000 80d1 	beq.w	8012a24 <HAL_UART_IRQHandler+0x22c>
 8012882:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012886:	f003 0301 	and.w	r3, r3, #1
 801288a:	2b00      	cmp	r3, #0
 801288c:	d00b      	beq.n	80128a6 <HAL_UART_IRQHandler+0xae>
 801288e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012892:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012896:	2b00      	cmp	r3, #0
 8012898:	d005      	beq.n	80128a6 <HAL_UART_IRQHandler+0xae>
 801289a:	687b      	ldr	r3, [r7, #4]
 801289c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801289e:	f043 0201 	orr.w	r2, r3, #1
 80128a2:	687b      	ldr	r3, [r7, #4]
 80128a4:	641a      	str	r2, [r3, #64]	@ 0x40
 80128a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80128aa:	f003 0304 	and.w	r3, r3, #4
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	d00b      	beq.n	80128ca <HAL_UART_IRQHandler+0xd2>
 80128b2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80128b6:	f003 0301 	and.w	r3, r3, #1
 80128ba:	2b00      	cmp	r3, #0
 80128bc:	d005      	beq.n	80128ca <HAL_UART_IRQHandler+0xd2>
 80128be:	687b      	ldr	r3, [r7, #4]
 80128c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80128c2:	f043 0202 	orr.w	r2, r3, #2
 80128c6:	687b      	ldr	r3, [r7, #4]
 80128c8:	641a      	str	r2, [r3, #64]	@ 0x40
 80128ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80128ce:	f003 0302 	and.w	r3, r3, #2
 80128d2:	2b00      	cmp	r3, #0
 80128d4:	d00b      	beq.n	80128ee <HAL_UART_IRQHandler+0xf6>
 80128d6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80128da:	f003 0301 	and.w	r3, r3, #1
 80128de:	2b00      	cmp	r3, #0
 80128e0:	d005      	beq.n	80128ee <HAL_UART_IRQHandler+0xf6>
 80128e2:	687b      	ldr	r3, [r7, #4]
 80128e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80128e6:	f043 0204 	orr.w	r2, r3, #4
 80128ea:	687b      	ldr	r3, [r7, #4]
 80128ec:	641a      	str	r2, [r3, #64]	@ 0x40
 80128ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80128f2:	f003 0308 	and.w	r3, r3, #8
 80128f6:	2b00      	cmp	r3, #0
 80128f8:	d011      	beq.n	801291e <HAL_UART_IRQHandler+0x126>
 80128fa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80128fe:	f003 0320 	and.w	r3, r3, #32
 8012902:	2b00      	cmp	r3, #0
 8012904:	d105      	bne.n	8012912 <HAL_UART_IRQHandler+0x11a>
 8012906:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 801290a:	f003 0301 	and.w	r3, r3, #1
 801290e:	2b00      	cmp	r3, #0
 8012910:	d005      	beq.n	801291e <HAL_UART_IRQHandler+0x126>
 8012912:	687b      	ldr	r3, [r7, #4]
 8012914:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012916:	f043 0208 	orr.w	r2, r3, #8
 801291a:	687b      	ldr	r3, [r7, #4]
 801291c:	641a      	str	r2, [r3, #64]	@ 0x40
 801291e:	687b      	ldr	r3, [r7, #4]
 8012920:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012922:	2b00      	cmp	r3, #0
 8012924:	f000 81ed 	beq.w	8012d02 <HAL_UART_IRQHandler+0x50a>
 8012928:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801292c:	f003 0320 	and.w	r3, r3, #32
 8012930:	2b00      	cmp	r3, #0
 8012932:	d008      	beq.n	8012946 <HAL_UART_IRQHandler+0x14e>
 8012934:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012938:	f003 0320 	and.w	r3, r3, #32
 801293c:	2b00      	cmp	r3, #0
 801293e:	d002      	beq.n	8012946 <HAL_UART_IRQHandler+0x14e>
 8012940:	6878      	ldr	r0, [r7, #4]
 8012942:	f000 fbc7 	bl	80130d4 <UART_Receive_IT>
 8012946:	687b      	ldr	r3, [r7, #4]
 8012948:	681b      	ldr	r3, [r3, #0]
 801294a:	695b      	ldr	r3, [r3, #20]
 801294c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012950:	2b40      	cmp	r3, #64	@ 0x40
 8012952:	bf0c      	ite	eq
 8012954:	2301      	moveq	r3, #1
 8012956:	2300      	movne	r3, #0
 8012958:	b2db      	uxtb	r3, r3
 801295a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 801295e:	687b      	ldr	r3, [r7, #4]
 8012960:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012962:	f003 0308 	and.w	r3, r3, #8
 8012966:	2b00      	cmp	r3, #0
 8012968:	d103      	bne.n	8012972 <HAL_UART_IRQHandler+0x17a>
 801296a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 801296e:	2b00      	cmp	r3, #0
 8012970:	d04f      	beq.n	8012a12 <HAL_UART_IRQHandler+0x21a>
 8012972:	6878      	ldr	r0, [r7, #4]
 8012974:	f000 facf 	bl	8012f16 <UART_EndRxTransfer>
 8012978:	687b      	ldr	r3, [r7, #4]
 801297a:	681b      	ldr	r3, [r3, #0]
 801297c:	695b      	ldr	r3, [r3, #20]
 801297e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012982:	2b40      	cmp	r3, #64	@ 0x40
 8012984:	d141      	bne.n	8012a0a <HAL_UART_IRQHandler+0x212>
 8012986:	687b      	ldr	r3, [r7, #4]
 8012988:	681b      	ldr	r3, [r3, #0]
 801298a:	3314      	adds	r3, #20
 801298c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8012990:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8012994:	e853 3f00 	ldrex	r3, [r3]
 8012998:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 801299c:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80129a0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80129a4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80129a8:	687b      	ldr	r3, [r7, #4]
 80129aa:	681b      	ldr	r3, [r3, #0]
 80129ac:	3314      	adds	r3, #20
 80129ae:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80129b2:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80129b6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80129ba:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80129be:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80129c2:	e841 2300 	strex	r3, r2, [r1]
 80129c6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80129ca:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80129ce:	2b00      	cmp	r3, #0
 80129d0:	d1d9      	bne.n	8012986 <HAL_UART_IRQHandler+0x18e>
 80129d2:	687b      	ldr	r3, [r7, #4]
 80129d4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80129d6:	2b00      	cmp	r3, #0
 80129d8:	d013      	beq.n	8012a02 <HAL_UART_IRQHandler+0x20a>
 80129da:	687b      	ldr	r3, [r7, #4]
 80129dc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80129de:	4a7d      	ldr	r2, [pc, #500]	@ (8012bd4 <HAL_UART_IRQHandler+0x3dc>)
 80129e0:	651a      	str	r2, [r3, #80]	@ 0x50
 80129e2:	687b      	ldr	r3, [r7, #4]
 80129e4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80129e6:	4618      	mov	r0, r3
 80129e8:	f7f9 ff46 	bl	800c878 <HAL_DMA_Abort_IT>
 80129ec:	4603      	mov	r3, r0
 80129ee:	2b00      	cmp	r3, #0
 80129f0:	d016      	beq.n	8012a20 <HAL_UART_IRQHandler+0x228>
 80129f2:	687b      	ldr	r3, [r7, #4]
 80129f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80129f6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80129f8:	687a      	ldr	r2, [r7, #4]
 80129fa:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80129fc:	4610      	mov	r0, r2
 80129fe:	4798      	blx	r3
 8012a00:	e00e      	b.n	8012a20 <HAL_UART_IRQHandler+0x228>
 8012a02:	6878      	ldr	r0, [r7, #4]
 8012a04:	f000 f9a4 	bl	8012d50 <HAL_UART_ErrorCallback>
 8012a08:	e00a      	b.n	8012a20 <HAL_UART_IRQHandler+0x228>
 8012a0a:	6878      	ldr	r0, [r7, #4]
 8012a0c:	f000 f9a0 	bl	8012d50 <HAL_UART_ErrorCallback>
 8012a10:	e006      	b.n	8012a20 <HAL_UART_IRQHandler+0x228>
 8012a12:	6878      	ldr	r0, [r7, #4]
 8012a14:	f000 f99c 	bl	8012d50 <HAL_UART_ErrorCallback>
 8012a18:	687b      	ldr	r3, [r7, #4]
 8012a1a:	2200      	movs	r2, #0
 8012a1c:	641a      	str	r2, [r3, #64]	@ 0x40
 8012a1e:	e170      	b.n	8012d02 <HAL_UART_IRQHandler+0x50a>
 8012a20:	bf00      	nop
 8012a22:	e16e      	b.n	8012d02 <HAL_UART_IRQHandler+0x50a>
 8012a24:	687b      	ldr	r3, [r7, #4]
 8012a26:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012a28:	2b01      	cmp	r3, #1
 8012a2a:	f040 814a 	bne.w	8012cc2 <HAL_UART_IRQHandler+0x4ca>
 8012a2e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012a32:	f003 0310 	and.w	r3, r3, #16
 8012a36:	2b00      	cmp	r3, #0
 8012a38:	f000 8143 	beq.w	8012cc2 <HAL_UART_IRQHandler+0x4ca>
 8012a3c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012a40:	f003 0310 	and.w	r3, r3, #16
 8012a44:	2b00      	cmp	r3, #0
 8012a46:	f000 813c 	beq.w	8012cc2 <HAL_UART_IRQHandler+0x4ca>
 8012a4a:	2300      	movs	r3, #0
 8012a4c:	60bb      	str	r3, [r7, #8]
 8012a4e:	687b      	ldr	r3, [r7, #4]
 8012a50:	681b      	ldr	r3, [r3, #0]
 8012a52:	681b      	ldr	r3, [r3, #0]
 8012a54:	60bb      	str	r3, [r7, #8]
 8012a56:	687b      	ldr	r3, [r7, #4]
 8012a58:	681b      	ldr	r3, [r3, #0]
 8012a5a:	685b      	ldr	r3, [r3, #4]
 8012a5c:	60bb      	str	r3, [r7, #8]
 8012a5e:	68bb      	ldr	r3, [r7, #8]
 8012a60:	687b      	ldr	r3, [r7, #4]
 8012a62:	681b      	ldr	r3, [r3, #0]
 8012a64:	695b      	ldr	r3, [r3, #20]
 8012a66:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012a6a:	2b40      	cmp	r3, #64	@ 0x40
 8012a6c:	f040 80b4 	bne.w	8012bd8 <HAL_UART_IRQHandler+0x3e0>
 8012a70:	687b      	ldr	r3, [r7, #4]
 8012a72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012a74:	681b      	ldr	r3, [r3, #0]
 8012a76:	685b      	ldr	r3, [r3, #4]
 8012a78:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8012a7c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8012a80:	2b00      	cmp	r3, #0
 8012a82:	f000 8140 	beq.w	8012d06 <HAL_UART_IRQHandler+0x50e>
 8012a86:	687b      	ldr	r3, [r7, #4]
 8012a88:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8012a8a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8012a8e:	429a      	cmp	r2, r3
 8012a90:	f080 8139 	bcs.w	8012d06 <HAL_UART_IRQHandler+0x50e>
 8012a94:	687b      	ldr	r3, [r7, #4]
 8012a96:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8012a9a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012a9c:	687b      	ldr	r3, [r7, #4]
 8012a9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012aa0:	69db      	ldr	r3, [r3, #28]
 8012aa2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8012aa6:	f000 8088 	beq.w	8012bba <HAL_UART_IRQHandler+0x3c2>
 8012aaa:	687b      	ldr	r3, [r7, #4]
 8012aac:	681b      	ldr	r3, [r3, #0]
 8012aae:	330c      	adds	r3, #12
 8012ab0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8012ab4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8012ab8:	e853 3f00 	ldrex	r3, [r3]
 8012abc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8012ac0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8012ac4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8012ac8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8012acc:	687b      	ldr	r3, [r7, #4]
 8012ace:	681b      	ldr	r3, [r3, #0]
 8012ad0:	330c      	adds	r3, #12
 8012ad2:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8012ad6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8012ada:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8012ade:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8012ae2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8012ae6:	e841 2300 	strex	r3, r2, [r1]
 8012aea:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8012aee:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8012af2:	2b00      	cmp	r3, #0
 8012af4:	d1d9      	bne.n	8012aaa <HAL_UART_IRQHandler+0x2b2>
 8012af6:	687b      	ldr	r3, [r7, #4]
 8012af8:	681b      	ldr	r3, [r3, #0]
 8012afa:	3314      	adds	r3, #20
 8012afc:	677b      	str	r3, [r7, #116]	@ 0x74
 8012afe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8012b00:	e853 3f00 	ldrex	r3, [r3]
 8012b04:	673b      	str	r3, [r7, #112]	@ 0x70
 8012b06:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8012b08:	f023 0301 	bic.w	r3, r3, #1
 8012b0c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8012b10:	687b      	ldr	r3, [r7, #4]
 8012b12:	681b      	ldr	r3, [r3, #0]
 8012b14:	3314      	adds	r3, #20
 8012b16:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8012b1a:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8012b1e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8012b20:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8012b22:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8012b26:	e841 2300 	strex	r3, r2, [r1]
 8012b2a:	67bb      	str	r3, [r7, #120]	@ 0x78
 8012b2c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8012b2e:	2b00      	cmp	r3, #0
 8012b30:	d1e1      	bne.n	8012af6 <HAL_UART_IRQHandler+0x2fe>
 8012b32:	687b      	ldr	r3, [r7, #4]
 8012b34:	681b      	ldr	r3, [r3, #0]
 8012b36:	3314      	adds	r3, #20
 8012b38:	663b      	str	r3, [r7, #96]	@ 0x60
 8012b3a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8012b3c:	e853 3f00 	ldrex	r3, [r3]
 8012b40:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8012b42:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8012b44:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012b48:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8012b4c:	687b      	ldr	r3, [r7, #4]
 8012b4e:	681b      	ldr	r3, [r3, #0]
 8012b50:	3314      	adds	r3, #20
 8012b52:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8012b56:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8012b58:	66bb      	str	r3, [r7, #104]	@ 0x68
 8012b5a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8012b5c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8012b5e:	e841 2300 	strex	r3, r2, [r1]
 8012b62:	667b      	str	r3, [r7, #100]	@ 0x64
 8012b64:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8012b66:	2b00      	cmp	r3, #0
 8012b68:	d1e3      	bne.n	8012b32 <HAL_UART_IRQHandler+0x33a>
 8012b6a:	687b      	ldr	r3, [r7, #4]
 8012b6c:	2220      	movs	r2, #32
 8012b6e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012b72:	687b      	ldr	r3, [r7, #4]
 8012b74:	2200      	movs	r2, #0
 8012b76:	631a      	str	r2, [r3, #48]	@ 0x30
 8012b78:	687b      	ldr	r3, [r7, #4]
 8012b7a:	681b      	ldr	r3, [r3, #0]
 8012b7c:	330c      	adds	r3, #12
 8012b7e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8012b80:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8012b82:	e853 3f00 	ldrex	r3, [r3]
 8012b86:	64bb      	str	r3, [r7, #72]	@ 0x48
 8012b88:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8012b8a:	f023 0310 	bic.w	r3, r3, #16
 8012b8e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8012b92:	687b      	ldr	r3, [r7, #4]
 8012b94:	681b      	ldr	r3, [r3, #0]
 8012b96:	330c      	adds	r3, #12
 8012b98:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8012b9c:	65ba      	str	r2, [r7, #88]	@ 0x58
 8012b9e:	657b      	str	r3, [r7, #84]	@ 0x54
 8012ba0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8012ba2:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8012ba4:	e841 2300 	strex	r3, r2, [r1]
 8012ba8:	653b      	str	r3, [r7, #80]	@ 0x50
 8012baa:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8012bac:	2b00      	cmp	r3, #0
 8012bae:	d1e3      	bne.n	8012b78 <HAL_UART_IRQHandler+0x380>
 8012bb0:	687b      	ldr	r3, [r7, #4]
 8012bb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012bb4:	4618      	mov	r0, r3
 8012bb6:	f7f9 fdef 	bl	800c798 <HAL_DMA_Abort>
 8012bba:	687b      	ldr	r3, [r7, #4]
 8012bbc:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8012bbe:	687b      	ldr	r3, [r7, #4]
 8012bc0:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012bc2:	b29b      	uxth	r3, r3
 8012bc4:	1ad3      	subs	r3, r2, r3
 8012bc6:	b29b      	uxth	r3, r3
 8012bc8:	4619      	mov	r1, r3
 8012bca:	6878      	ldr	r0, [r7, #4]
 8012bcc:	f000 f8ca 	bl	8012d64 <HAL_UARTEx_RxEventCallback>
 8012bd0:	e099      	b.n	8012d06 <HAL_UART_IRQHandler+0x50e>
 8012bd2:	bf00      	nop
 8012bd4:	08012fdd 	.word	0x08012fdd
 8012bd8:	687b      	ldr	r3, [r7, #4]
 8012bda:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8012bdc:	687b      	ldr	r3, [r7, #4]
 8012bde:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012be0:	b29b      	uxth	r3, r3
 8012be2:	1ad3      	subs	r3, r2, r3
 8012be4:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8012be8:	687b      	ldr	r3, [r7, #4]
 8012bea:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012bec:	b29b      	uxth	r3, r3
 8012bee:	2b00      	cmp	r3, #0
 8012bf0:	f000 808b 	beq.w	8012d0a <HAL_UART_IRQHandler+0x512>
 8012bf4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8012bf8:	2b00      	cmp	r3, #0
 8012bfa:	f000 8086 	beq.w	8012d0a <HAL_UART_IRQHandler+0x512>
 8012bfe:	687b      	ldr	r3, [r7, #4]
 8012c00:	681b      	ldr	r3, [r3, #0]
 8012c02:	330c      	adds	r3, #12
 8012c04:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012c06:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8012c08:	e853 3f00 	ldrex	r3, [r3]
 8012c0c:	637b      	str	r3, [r7, #52]	@ 0x34
 8012c0e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8012c10:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8012c14:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8012c18:	687b      	ldr	r3, [r7, #4]
 8012c1a:	681b      	ldr	r3, [r3, #0]
 8012c1c:	330c      	adds	r3, #12
 8012c1e:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8012c22:	647a      	str	r2, [r7, #68]	@ 0x44
 8012c24:	643b      	str	r3, [r7, #64]	@ 0x40
 8012c26:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8012c28:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012c2a:	e841 2300 	strex	r3, r2, [r1]
 8012c2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012c30:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012c32:	2b00      	cmp	r3, #0
 8012c34:	d1e3      	bne.n	8012bfe <HAL_UART_IRQHandler+0x406>
 8012c36:	687b      	ldr	r3, [r7, #4]
 8012c38:	681b      	ldr	r3, [r3, #0]
 8012c3a:	3314      	adds	r3, #20
 8012c3c:	627b      	str	r3, [r7, #36]	@ 0x24
 8012c3e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012c40:	e853 3f00 	ldrex	r3, [r3]
 8012c44:	623b      	str	r3, [r7, #32]
 8012c46:	6a3b      	ldr	r3, [r7, #32]
 8012c48:	f023 0301 	bic.w	r3, r3, #1
 8012c4c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8012c50:	687b      	ldr	r3, [r7, #4]
 8012c52:	681b      	ldr	r3, [r3, #0]
 8012c54:	3314      	adds	r3, #20
 8012c56:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8012c5a:	633a      	str	r2, [r7, #48]	@ 0x30
 8012c5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012c5e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012c60:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012c62:	e841 2300 	strex	r3, r2, [r1]
 8012c66:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012c68:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012c6a:	2b00      	cmp	r3, #0
 8012c6c:	d1e3      	bne.n	8012c36 <HAL_UART_IRQHandler+0x43e>
 8012c6e:	687b      	ldr	r3, [r7, #4]
 8012c70:	2220      	movs	r2, #32
 8012c72:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012c76:	687b      	ldr	r3, [r7, #4]
 8012c78:	2200      	movs	r2, #0
 8012c7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8012c7c:	687b      	ldr	r3, [r7, #4]
 8012c7e:	681b      	ldr	r3, [r3, #0]
 8012c80:	330c      	adds	r3, #12
 8012c82:	613b      	str	r3, [r7, #16]
 8012c84:	693b      	ldr	r3, [r7, #16]
 8012c86:	e853 3f00 	ldrex	r3, [r3]
 8012c8a:	60fb      	str	r3, [r7, #12]
 8012c8c:	68fb      	ldr	r3, [r7, #12]
 8012c8e:	f023 0310 	bic.w	r3, r3, #16
 8012c92:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8012c96:	687b      	ldr	r3, [r7, #4]
 8012c98:	681b      	ldr	r3, [r3, #0]
 8012c9a:	330c      	adds	r3, #12
 8012c9c:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8012ca0:	61fa      	str	r2, [r7, #28]
 8012ca2:	61bb      	str	r3, [r7, #24]
 8012ca4:	69b9      	ldr	r1, [r7, #24]
 8012ca6:	69fa      	ldr	r2, [r7, #28]
 8012ca8:	e841 2300 	strex	r3, r2, [r1]
 8012cac:	617b      	str	r3, [r7, #20]
 8012cae:	697b      	ldr	r3, [r7, #20]
 8012cb0:	2b00      	cmp	r3, #0
 8012cb2:	d1e3      	bne.n	8012c7c <HAL_UART_IRQHandler+0x484>
 8012cb4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8012cb8:	4619      	mov	r1, r3
 8012cba:	6878      	ldr	r0, [r7, #4]
 8012cbc:	f000 f852 	bl	8012d64 <HAL_UARTEx_RxEventCallback>
 8012cc0:	e023      	b.n	8012d0a <HAL_UART_IRQHandler+0x512>
 8012cc2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012cc6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012cca:	2b00      	cmp	r3, #0
 8012ccc:	d009      	beq.n	8012ce2 <HAL_UART_IRQHandler+0x4ea>
 8012cce:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012cd2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012cd6:	2b00      	cmp	r3, #0
 8012cd8:	d003      	beq.n	8012ce2 <HAL_UART_IRQHandler+0x4ea>
 8012cda:	6878      	ldr	r0, [r7, #4]
 8012cdc:	f000 f992 	bl	8013004 <UART_Transmit_IT>
 8012ce0:	e014      	b.n	8012d0c <HAL_UART_IRQHandler+0x514>
 8012ce2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012ce6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012cea:	2b00      	cmp	r3, #0
 8012cec:	d00e      	beq.n	8012d0c <HAL_UART_IRQHandler+0x514>
 8012cee:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012cf2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012cf6:	2b00      	cmp	r3, #0
 8012cf8:	d008      	beq.n	8012d0c <HAL_UART_IRQHandler+0x514>
 8012cfa:	6878      	ldr	r0, [r7, #4]
 8012cfc:	f000 f9d2 	bl	80130a4 <UART_EndTransmit_IT>
 8012d00:	e004      	b.n	8012d0c <HAL_UART_IRQHandler+0x514>
 8012d02:	bf00      	nop
 8012d04:	e002      	b.n	8012d0c <HAL_UART_IRQHandler+0x514>
 8012d06:	bf00      	nop
 8012d08:	e000      	b.n	8012d0c <HAL_UART_IRQHandler+0x514>
 8012d0a:	bf00      	nop
 8012d0c:	37e8      	adds	r7, #232	@ 0xe8
 8012d0e:	46bd      	mov	sp, r7
 8012d10:	bd80      	pop	{r7, pc}
 8012d12:	bf00      	nop

08012d14 <HAL_UART_TxCpltCallback>:
 8012d14:	b480      	push	{r7}
 8012d16:	b083      	sub	sp, #12
 8012d18:	af00      	add	r7, sp, #0
 8012d1a:	6078      	str	r0, [r7, #4]
 8012d1c:	bf00      	nop
 8012d1e:	370c      	adds	r7, #12
 8012d20:	46bd      	mov	sp, r7
 8012d22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d26:	4770      	bx	lr

08012d28 <HAL_UART_TxHalfCpltCallback>:
 8012d28:	b480      	push	{r7}
 8012d2a:	b083      	sub	sp, #12
 8012d2c:	af00      	add	r7, sp, #0
 8012d2e:	6078      	str	r0, [r7, #4]
 8012d30:	bf00      	nop
 8012d32:	370c      	adds	r7, #12
 8012d34:	46bd      	mov	sp, r7
 8012d36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d3a:	4770      	bx	lr

08012d3c <HAL_UART_RxCpltCallback>:
 8012d3c:	b480      	push	{r7}
 8012d3e:	b083      	sub	sp, #12
 8012d40:	af00      	add	r7, sp, #0
 8012d42:	6078      	str	r0, [r7, #4]
 8012d44:	bf00      	nop
 8012d46:	370c      	adds	r7, #12
 8012d48:	46bd      	mov	sp, r7
 8012d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d4e:	4770      	bx	lr

08012d50 <HAL_UART_ErrorCallback>:
 8012d50:	b480      	push	{r7}
 8012d52:	b083      	sub	sp, #12
 8012d54:	af00      	add	r7, sp, #0
 8012d56:	6078      	str	r0, [r7, #4]
 8012d58:	bf00      	nop
 8012d5a:	370c      	adds	r7, #12
 8012d5c:	46bd      	mov	sp, r7
 8012d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d62:	4770      	bx	lr

08012d64 <HAL_UARTEx_RxEventCallback>:
 8012d64:	b480      	push	{r7}
 8012d66:	b083      	sub	sp, #12
 8012d68:	af00      	add	r7, sp, #0
 8012d6a:	6078      	str	r0, [r7, #4]
 8012d6c:	460b      	mov	r3, r1
 8012d6e:	807b      	strh	r3, [r7, #2]
 8012d70:	bf00      	nop
 8012d72:	370c      	adds	r7, #12
 8012d74:	46bd      	mov	sp, r7
 8012d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012d7a:	4770      	bx	lr

08012d7c <UART_DMATransmitCplt>:
 8012d7c:	b580      	push	{r7, lr}
 8012d7e:	b090      	sub	sp, #64	@ 0x40
 8012d80:	af00      	add	r7, sp, #0
 8012d82:	6078      	str	r0, [r7, #4]
 8012d84:	687b      	ldr	r3, [r7, #4]
 8012d86:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012d88:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012d8a:	687b      	ldr	r3, [r7, #4]
 8012d8c:	681b      	ldr	r3, [r3, #0]
 8012d8e:	681b      	ldr	r3, [r3, #0]
 8012d90:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012d94:	2b00      	cmp	r3, #0
 8012d96:	d137      	bne.n	8012e08 <UART_DMATransmitCplt+0x8c>
 8012d98:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012d9a:	2200      	movs	r2, #0
 8012d9c:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012d9e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012da0:	681b      	ldr	r3, [r3, #0]
 8012da2:	3314      	adds	r3, #20
 8012da4:	627b      	str	r3, [r7, #36]	@ 0x24
 8012da6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012da8:	e853 3f00 	ldrex	r3, [r3]
 8012dac:	623b      	str	r3, [r7, #32]
 8012dae:	6a3b      	ldr	r3, [r7, #32]
 8012db0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012db4:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012db6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012db8:	681b      	ldr	r3, [r3, #0]
 8012dba:	3314      	adds	r3, #20
 8012dbc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8012dbe:	633a      	str	r2, [r7, #48]	@ 0x30
 8012dc0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012dc2:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012dc4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012dc6:	e841 2300 	strex	r3, r2, [r1]
 8012dca:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012dcc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012dce:	2b00      	cmp	r3, #0
 8012dd0:	d1e5      	bne.n	8012d9e <UART_DMATransmitCplt+0x22>
 8012dd2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012dd4:	681b      	ldr	r3, [r3, #0]
 8012dd6:	330c      	adds	r3, #12
 8012dd8:	613b      	str	r3, [r7, #16]
 8012dda:	693b      	ldr	r3, [r7, #16]
 8012ddc:	e853 3f00 	ldrex	r3, [r3]
 8012de0:	60fb      	str	r3, [r7, #12]
 8012de2:	68fb      	ldr	r3, [r7, #12]
 8012de4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012de8:	637b      	str	r3, [r7, #52]	@ 0x34
 8012dea:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012dec:	681b      	ldr	r3, [r3, #0]
 8012dee:	330c      	adds	r3, #12
 8012df0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8012df2:	61fa      	str	r2, [r7, #28]
 8012df4:	61bb      	str	r3, [r7, #24]
 8012df6:	69b9      	ldr	r1, [r7, #24]
 8012df8:	69fa      	ldr	r2, [r7, #28]
 8012dfa:	e841 2300 	strex	r3, r2, [r1]
 8012dfe:	617b      	str	r3, [r7, #20]
 8012e00:	697b      	ldr	r3, [r7, #20]
 8012e02:	2b00      	cmp	r3, #0
 8012e04:	d1e5      	bne.n	8012dd2 <UART_DMATransmitCplt+0x56>
 8012e06:	e002      	b.n	8012e0e <UART_DMATransmitCplt+0x92>
 8012e08:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8012e0a:	f7ff ff83 	bl	8012d14 <HAL_UART_TxCpltCallback>
 8012e0e:	bf00      	nop
 8012e10:	3740      	adds	r7, #64	@ 0x40
 8012e12:	46bd      	mov	sp, r7
 8012e14:	bd80      	pop	{r7, pc}

08012e16 <UART_DMATxHalfCplt>:
 8012e16:	b580      	push	{r7, lr}
 8012e18:	b084      	sub	sp, #16
 8012e1a:	af00      	add	r7, sp, #0
 8012e1c:	6078      	str	r0, [r7, #4]
 8012e1e:	687b      	ldr	r3, [r7, #4]
 8012e20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012e22:	60fb      	str	r3, [r7, #12]
 8012e24:	68f8      	ldr	r0, [r7, #12]
 8012e26:	f7ff ff7f 	bl	8012d28 <HAL_UART_TxHalfCpltCallback>
 8012e2a:	bf00      	nop
 8012e2c:	3710      	adds	r7, #16
 8012e2e:	46bd      	mov	sp, r7
 8012e30:	bd80      	pop	{r7, pc}

08012e32 <UART_DMAError>:
 8012e32:	b580      	push	{r7, lr}
 8012e34:	b084      	sub	sp, #16
 8012e36:	af00      	add	r7, sp, #0
 8012e38:	6078      	str	r0, [r7, #4]
 8012e3a:	2300      	movs	r3, #0
 8012e3c:	60fb      	str	r3, [r7, #12]
 8012e3e:	687b      	ldr	r3, [r7, #4]
 8012e40:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012e42:	60bb      	str	r3, [r7, #8]
 8012e44:	68bb      	ldr	r3, [r7, #8]
 8012e46:	681b      	ldr	r3, [r3, #0]
 8012e48:	695b      	ldr	r3, [r3, #20]
 8012e4a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012e4e:	2b80      	cmp	r3, #128	@ 0x80
 8012e50:	bf0c      	ite	eq
 8012e52:	2301      	moveq	r3, #1
 8012e54:	2300      	movne	r3, #0
 8012e56:	b2db      	uxtb	r3, r3
 8012e58:	60fb      	str	r3, [r7, #12]
 8012e5a:	68bb      	ldr	r3, [r7, #8]
 8012e5c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012e60:	b2db      	uxtb	r3, r3
 8012e62:	2b21      	cmp	r3, #33	@ 0x21
 8012e64:	d108      	bne.n	8012e78 <UART_DMAError+0x46>
 8012e66:	68fb      	ldr	r3, [r7, #12]
 8012e68:	2b00      	cmp	r3, #0
 8012e6a:	d005      	beq.n	8012e78 <UART_DMAError+0x46>
 8012e6c:	68bb      	ldr	r3, [r7, #8]
 8012e6e:	2200      	movs	r2, #0
 8012e70:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012e72:	68b8      	ldr	r0, [r7, #8]
 8012e74:	f000 f827 	bl	8012ec6 <UART_EndTxTransfer>
 8012e78:	68bb      	ldr	r3, [r7, #8]
 8012e7a:	681b      	ldr	r3, [r3, #0]
 8012e7c:	695b      	ldr	r3, [r3, #20]
 8012e7e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012e82:	2b40      	cmp	r3, #64	@ 0x40
 8012e84:	bf0c      	ite	eq
 8012e86:	2301      	moveq	r3, #1
 8012e88:	2300      	movne	r3, #0
 8012e8a:	b2db      	uxtb	r3, r3
 8012e8c:	60fb      	str	r3, [r7, #12]
 8012e8e:	68bb      	ldr	r3, [r7, #8]
 8012e90:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012e94:	b2db      	uxtb	r3, r3
 8012e96:	2b22      	cmp	r3, #34	@ 0x22
 8012e98:	d108      	bne.n	8012eac <UART_DMAError+0x7a>
 8012e9a:	68fb      	ldr	r3, [r7, #12]
 8012e9c:	2b00      	cmp	r3, #0
 8012e9e:	d005      	beq.n	8012eac <UART_DMAError+0x7a>
 8012ea0:	68bb      	ldr	r3, [r7, #8]
 8012ea2:	2200      	movs	r2, #0
 8012ea4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012ea6:	68b8      	ldr	r0, [r7, #8]
 8012ea8:	f000 f835 	bl	8012f16 <UART_EndRxTransfer>
 8012eac:	68bb      	ldr	r3, [r7, #8]
 8012eae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012eb0:	f043 0210 	orr.w	r2, r3, #16
 8012eb4:	68bb      	ldr	r3, [r7, #8]
 8012eb6:	641a      	str	r2, [r3, #64]	@ 0x40
 8012eb8:	68b8      	ldr	r0, [r7, #8]
 8012eba:	f7ff ff49 	bl	8012d50 <HAL_UART_ErrorCallback>
 8012ebe:	bf00      	nop
 8012ec0:	3710      	adds	r7, #16
 8012ec2:	46bd      	mov	sp, r7
 8012ec4:	bd80      	pop	{r7, pc}

08012ec6 <UART_EndTxTransfer>:
 8012ec6:	b480      	push	{r7}
 8012ec8:	b089      	sub	sp, #36	@ 0x24
 8012eca:	af00      	add	r7, sp, #0
 8012ecc:	6078      	str	r0, [r7, #4]
 8012ece:	687b      	ldr	r3, [r7, #4]
 8012ed0:	681b      	ldr	r3, [r3, #0]
 8012ed2:	330c      	adds	r3, #12
 8012ed4:	60fb      	str	r3, [r7, #12]
 8012ed6:	68fb      	ldr	r3, [r7, #12]
 8012ed8:	e853 3f00 	ldrex	r3, [r3]
 8012edc:	60bb      	str	r3, [r7, #8]
 8012ede:	68bb      	ldr	r3, [r7, #8]
 8012ee0:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8012ee4:	61fb      	str	r3, [r7, #28]
 8012ee6:	687b      	ldr	r3, [r7, #4]
 8012ee8:	681b      	ldr	r3, [r3, #0]
 8012eea:	330c      	adds	r3, #12
 8012eec:	69fa      	ldr	r2, [r7, #28]
 8012eee:	61ba      	str	r2, [r7, #24]
 8012ef0:	617b      	str	r3, [r7, #20]
 8012ef2:	6979      	ldr	r1, [r7, #20]
 8012ef4:	69ba      	ldr	r2, [r7, #24]
 8012ef6:	e841 2300 	strex	r3, r2, [r1]
 8012efa:	613b      	str	r3, [r7, #16]
 8012efc:	693b      	ldr	r3, [r7, #16]
 8012efe:	2b00      	cmp	r3, #0
 8012f00:	d1e5      	bne.n	8012ece <UART_EndTxTransfer+0x8>
 8012f02:	687b      	ldr	r3, [r7, #4]
 8012f04:	2220      	movs	r2, #32
 8012f06:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012f0a:	bf00      	nop
 8012f0c:	3724      	adds	r7, #36	@ 0x24
 8012f0e:	46bd      	mov	sp, r7
 8012f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012f14:	4770      	bx	lr

08012f16 <UART_EndRxTransfer>:
 8012f16:	b480      	push	{r7}
 8012f18:	b095      	sub	sp, #84	@ 0x54
 8012f1a:	af00      	add	r7, sp, #0
 8012f1c:	6078      	str	r0, [r7, #4]
 8012f1e:	687b      	ldr	r3, [r7, #4]
 8012f20:	681b      	ldr	r3, [r3, #0]
 8012f22:	330c      	adds	r3, #12
 8012f24:	637b      	str	r3, [r7, #52]	@ 0x34
 8012f26:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8012f28:	e853 3f00 	ldrex	r3, [r3]
 8012f2c:	633b      	str	r3, [r7, #48]	@ 0x30
 8012f2e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8012f30:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8012f34:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8012f36:	687b      	ldr	r3, [r7, #4]
 8012f38:	681b      	ldr	r3, [r3, #0]
 8012f3a:	330c      	adds	r3, #12
 8012f3c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8012f3e:	643a      	str	r2, [r7, #64]	@ 0x40
 8012f40:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012f42:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8012f44:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8012f46:	e841 2300 	strex	r3, r2, [r1]
 8012f4a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012f4c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8012f4e:	2b00      	cmp	r3, #0
 8012f50:	d1e5      	bne.n	8012f1e <UART_EndRxTransfer+0x8>
 8012f52:	687b      	ldr	r3, [r7, #4]
 8012f54:	681b      	ldr	r3, [r3, #0]
 8012f56:	3314      	adds	r3, #20
 8012f58:	623b      	str	r3, [r7, #32]
 8012f5a:	6a3b      	ldr	r3, [r7, #32]
 8012f5c:	e853 3f00 	ldrex	r3, [r3]
 8012f60:	61fb      	str	r3, [r7, #28]
 8012f62:	69fb      	ldr	r3, [r7, #28]
 8012f64:	f023 0301 	bic.w	r3, r3, #1
 8012f68:	64bb      	str	r3, [r7, #72]	@ 0x48
 8012f6a:	687b      	ldr	r3, [r7, #4]
 8012f6c:	681b      	ldr	r3, [r3, #0]
 8012f6e:	3314      	adds	r3, #20
 8012f70:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8012f72:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8012f74:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012f76:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8012f78:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8012f7a:	e841 2300 	strex	r3, r2, [r1]
 8012f7e:	627b      	str	r3, [r7, #36]	@ 0x24
 8012f80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012f82:	2b00      	cmp	r3, #0
 8012f84:	d1e5      	bne.n	8012f52 <UART_EndRxTransfer+0x3c>
 8012f86:	687b      	ldr	r3, [r7, #4]
 8012f88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012f8a:	2b01      	cmp	r3, #1
 8012f8c:	d119      	bne.n	8012fc2 <UART_EndRxTransfer+0xac>
 8012f8e:	687b      	ldr	r3, [r7, #4]
 8012f90:	681b      	ldr	r3, [r3, #0]
 8012f92:	330c      	adds	r3, #12
 8012f94:	60fb      	str	r3, [r7, #12]
 8012f96:	68fb      	ldr	r3, [r7, #12]
 8012f98:	e853 3f00 	ldrex	r3, [r3]
 8012f9c:	60bb      	str	r3, [r7, #8]
 8012f9e:	68bb      	ldr	r3, [r7, #8]
 8012fa0:	f023 0310 	bic.w	r3, r3, #16
 8012fa4:	647b      	str	r3, [r7, #68]	@ 0x44
 8012fa6:	687b      	ldr	r3, [r7, #4]
 8012fa8:	681b      	ldr	r3, [r3, #0]
 8012faa:	330c      	adds	r3, #12
 8012fac:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012fae:	61ba      	str	r2, [r7, #24]
 8012fb0:	617b      	str	r3, [r7, #20]
 8012fb2:	6979      	ldr	r1, [r7, #20]
 8012fb4:	69ba      	ldr	r2, [r7, #24]
 8012fb6:	e841 2300 	strex	r3, r2, [r1]
 8012fba:	613b      	str	r3, [r7, #16]
 8012fbc:	693b      	ldr	r3, [r7, #16]
 8012fbe:	2b00      	cmp	r3, #0
 8012fc0:	d1e5      	bne.n	8012f8e <UART_EndRxTransfer+0x78>
 8012fc2:	687b      	ldr	r3, [r7, #4]
 8012fc4:	2220      	movs	r2, #32
 8012fc6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012fca:	687b      	ldr	r3, [r7, #4]
 8012fcc:	2200      	movs	r2, #0
 8012fce:	631a      	str	r2, [r3, #48]	@ 0x30
 8012fd0:	bf00      	nop
 8012fd2:	3754      	adds	r7, #84	@ 0x54
 8012fd4:	46bd      	mov	sp, r7
 8012fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012fda:	4770      	bx	lr

08012fdc <UART_DMAAbortOnError>:
 8012fdc:	b580      	push	{r7, lr}
 8012fde:	b084      	sub	sp, #16
 8012fe0:	af00      	add	r7, sp, #0
 8012fe2:	6078      	str	r0, [r7, #4]
 8012fe4:	687b      	ldr	r3, [r7, #4]
 8012fe6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012fe8:	60fb      	str	r3, [r7, #12]
 8012fea:	68fb      	ldr	r3, [r7, #12]
 8012fec:	2200      	movs	r2, #0
 8012fee:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012ff0:	68fb      	ldr	r3, [r7, #12]
 8012ff2:	2200      	movs	r2, #0
 8012ff4:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012ff6:	68f8      	ldr	r0, [r7, #12]
 8012ff8:	f7ff feaa 	bl	8012d50 <HAL_UART_ErrorCallback>
 8012ffc:	bf00      	nop
 8012ffe:	3710      	adds	r7, #16
 8013000:	46bd      	mov	sp, r7
 8013002:	bd80      	pop	{r7, pc}

08013004 <UART_Transmit_IT>:
 8013004:	b480      	push	{r7}
 8013006:	b085      	sub	sp, #20
 8013008:	af00      	add	r7, sp, #0
 801300a:	6078      	str	r0, [r7, #4]
 801300c:	687b      	ldr	r3, [r7, #4]
 801300e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8013012:	b2db      	uxtb	r3, r3
 8013014:	2b21      	cmp	r3, #33	@ 0x21
 8013016:	d13e      	bne.n	8013096 <UART_Transmit_IT+0x92>
 8013018:	687b      	ldr	r3, [r7, #4]
 801301a:	689b      	ldr	r3, [r3, #8]
 801301c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8013020:	d114      	bne.n	801304c <UART_Transmit_IT+0x48>
 8013022:	687b      	ldr	r3, [r7, #4]
 8013024:	691b      	ldr	r3, [r3, #16]
 8013026:	2b00      	cmp	r3, #0
 8013028:	d110      	bne.n	801304c <UART_Transmit_IT+0x48>
 801302a:	687b      	ldr	r3, [r7, #4]
 801302c:	6a1b      	ldr	r3, [r3, #32]
 801302e:	60fb      	str	r3, [r7, #12]
 8013030:	68fb      	ldr	r3, [r7, #12]
 8013032:	881b      	ldrh	r3, [r3, #0]
 8013034:	461a      	mov	r2, r3
 8013036:	687b      	ldr	r3, [r7, #4]
 8013038:	681b      	ldr	r3, [r3, #0]
 801303a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 801303e:	605a      	str	r2, [r3, #4]
 8013040:	687b      	ldr	r3, [r7, #4]
 8013042:	6a1b      	ldr	r3, [r3, #32]
 8013044:	1c9a      	adds	r2, r3, #2
 8013046:	687b      	ldr	r3, [r7, #4]
 8013048:	621a      	str	r2, [r3, #32]
 801304a:	e008      	b.n	801305e <UART_Transmit_IT+0x5a>
 801304c:	687b      	ldr	r3, [r7, #4]
 801304e:	6a1b      	ldr	r3, [r3, #32]
 8013050:	1c59      	adds	r1, r3, #1
 8013052:	687a      	ldr	r2, [r7, #4]
 8013054:	6211      	str	r1, [r2, #32]
 8013056:	781a      	ldrb	r2, [r3, #0]
 8013058:	687b      	ldr	r3, [r7, #4]
 801305a:	681b      	ldr	r3, [r3, #0]
 801305c:	605a      	str	r2, [r3, #4]
 801305e:	687b      	ldr	r3, [r7, #4]
 8013060:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8013062:	b29b      	uxth	r3, r3
 8013064:	3b01      	subs	r3, #1
 8013066:	b29b      	uxth	r3, r3
 8013068:	687a      	ldr	r2, [r7, #4]
 801306a:	4619      	mov	r1, r3
 801306c:	84d1      	strh	r1, [r2, #38]	@ 0x26
 801306e:	2b00      	cmp	r3, #0
 8013070:	d10f      	bne.n	8013092 <UART_Transmit_IT+0x8e>
 8013072:	687b      	ldr	r3, [r7, #4]
 8013074:	681b      	ldr	r3, [r3, #0]
 8013076:	68da      	ldr	r2, [r3, #12]
 8013078:	687b      	ldr	r3, [r7, #4]
 801307a:	681b      	ldr	r3, [r3, #0]
 801307c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8013080:	60da      	str	r2, [r3, #12]
 8013082:	687b      	ldr	r3, [r7, #4]
 8013084:	681b      	ldr	r3, [r3, #0]
 8013086:	68da      	ldr	r2, [r3, #12]
 8013088:	687b      	ldr	r3, [r7, #4]
 801308a:	681b      	ldr	r3, [r3, #0]
 801308c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013090:	60da      	str	r2, [r3, #12]
 8013092:	2300      	movs	r3, #0
 8013094:	e000      	b.n	8013098 <UART_Transmit_IT+0x94>
 8013096:	2302      	movs	r3, #2
 8013098:	4618      	mov	r0, r3
 801309a:	3714      	adds	r7, #20
 801309c:	46bd      	mov	sp, r7
 801309e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80130a2:	4770      	bx	lr

080130a4 <UART_EndTransmit_IT>:
 80130a4:	b580      	push	{r7, lr}
 80130a6:	b082      	sub	sp, #8
 80130a8:	af00      	add	r7, sp, #0
 80130aa:	6078      	str	r0, [r7, #4]
 80130ac:	687b      	ldr	r3, [r7, #4]
 80130ae:	681b      	ldr	r3, [r3, #0]
 80130b0:	68da      	ldr	r2, [r3, #12]
 80130b2:	687b      	ldr	r3, [r7, #4]
 80130b4:	681b      	ldr	r3, [r3, #0]
 80130b6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80130ba:	60da      	str	r2, [r3, #12]
 80130bc:	687b      	ldr	r3, [r7, #4]
 80130be:	2220      	movs	r2, #32
 80130c0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80130c4:	6878      	ldr	r0, [r7, #4]
 80130c6:	f7ff fe25 	bl	8012d14 <HAL_UART_TxCpltCallback>
 80130ca:	2300      	movs	r3, #0
 80130cc:	4618      	mov	r0, r3
 80130ce:	3708      	adds	r7, #8
 80130d0:	46bd      	mov	sp, r7
 80130d2:	bd80      	pop	{r7, pc}

080130d4 <UART_Receive_IT>:
 80130d4:	b580      	push	{r7, lr}
 80130d6:	b08c      	sub	sp, #48	@ 0x30
 80130d8:	af00      	add	r7, sp, #0
 80130da:	6078      	str	r0, [r7, #4]
 80130dc:	687b      	ldr	r3, [r7, #4]
 80130de:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80130e2:	b2db      	uxtb	r3, r3
 80130e4:	2b22      	cmp	r3, #34	@ 0x22
 80130e6:	f040 80ab 	bne.w	8013240 <UART_Receive_IT+0x16c>
 80130ea:	687b      	ldr	r3, [r7, #4]
 80130ec:	689b      	ldr	r3, [r3, #8]
 80130ee:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80130f2:	d117      	bne.n	8013124 <UART_Receive_IT+0x50>
 80130f4:	687b      	ldr	r3, [r7, #4]
 80130f6:	691b      	ldr	r3, [r3, #16]
 80130f8:	2b00      	cmp	r3, #0
 80130fa:	d113      	bne.n	8013124 <UART_Receive_IT+0x50>
 80130fc:	2300      	movs	r3, #0
 80130fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013100:	687b      	ldr	r3, [r7, #4]
 8013102:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013104:	62bb      	str	r3, [r7, #40]	@ 0x28
 8013106:	687b      	ldr	r3, [r7, #4]
 8013108:	681b      	ldr	r3, [r3, #0]
 801310a:	685b      	ldr	r3, [r3, #4]
 801310c:	b29b      	uxth	r3, r3
 801310e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8013112:	b29a      	uxth	r2, r3
 8013114:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8013116:	801a      	strh	r2, [r3, #0]
 8013118:	687b      	ldr	r3, [r7, #4]
 801311a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801311c:	1c9a      	adds	r2, r3, #2
 801311e:	687b      	ldr	r3, [r7, #4]
 8013120:	629a      	str	r2, [r3, #40]	@ 0x28
 8013122:	e026      	b.n	8013172 <UART_Receive_IT+0x9e>
 8013124:	687b      	ldr	r3, [r7, #4]
 8013126:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013128:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801312a:	2300      	movs	r3, #0
 801312c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801312e:	687b      	ldr	r3, [r7, #4]
 8013130:	689b      	ldr	r3, [r3, #8]
 8013132:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8013136:	d007      	beq.n	8013148 <UART_Receive_IT+0x74>
 8013138:	687b      	ldr	r3, [r7, #4]
 801313a:	689b      	ldr	r3, [r3, #8]
 801313c:	2b00      	cmp	r3, #0
 801313e:	d10a      	bne.n	8013156 <UART_Receive_IT+0x82>
 8013140:	687b      	ldr	r3, [r7, #4]
 8013142:	691b      	ldr	r3, [r3, #16]
 8013144:	2b00      	cmp	r3, #0
 8013146:	d106      	bne.n	8013156 <UART_Receive_IT+0x82>
 8013148:	687b      	ldr	r3, [r7, #4]
 801314a:	681b      	ldr	r3, [r3, #0]
 801314c:	685b      	ldr	r3, [r3, #4]
 801314e:	b2da      	uxtb	r2, r3
 8013150:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013152:	701a      	strb	r2, [r3, #0]
 8013154:	e008      	b.n	8013168 <UART_Receive_IT+0x94>
 8013156:	687b      	ldr	r3, [r7, #4]
 8013158:	681b      	ldr	r3, [r3, #0]
 801315a:	685b      	ldr	r3, [r3, #4]
 801315c:	b2db      	uxtb	r3, r3
 801315e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8013162:	b2da      	uxtb	r2, r3
 8013164:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013166:	701a      	strb	r2, [r3, #0]
 8013168:	687b      	ldr	r3, [r7, #4]
 801316a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801316c:	1c5a      	adds	r2, r3, #1
 801316e:	687b      	ldr	r3, [r7, #4]
 8013170:	629a      	str	r2, [r3, #40]	@ 0x28
 8013172:	687b      	ldr	r3, [r7, #4]
 8013174:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8013176:	b29b      	uxth	r3, r3
 8013178:	3b01      	subs	r3, #1
 801317a:	b29b      	uxth	r3, r3
 801317c:	687a      	ldr	r2, [r7, #4]
 801317e:	4619      	mov	r1, r3
 8013180:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8013182:	2b00      	cmp	r3, #0
 8013184:	d15a      	bne.n	801323c <UART_Receive_IT+0x168>
 8013186:	687b      	ldr	r3, [r7, #4]
 8013188:	681b      	ldr	r3, [r3, #0]
 801318a:	68da      	ldr	r2, [r3, #12]
 801318c:	687b      	ldr	r3, [r7, #4]
 801318e:	681b      	ldr	r3, [r3, #0]
 8013190:	f022 0220 	bic.w	r2, r2, #32
 8013194:	60da      	str	r2, [r3, #12]
 8013196:	687b      	ldr	r3, [r7, #4]
 8013198:	681b      	ldr	r3, [r3, #0]
 801319a:	68da      	ldr	r2, [r3, #12]
 801319c:	687b      	ldr	r3, [r7, #4]
 801319e:	681b      	ldr	r3, [r3, #0]
 80131a0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80131a4:	60da      	str	r2, [r3, #12]
 80131a6:	687b      	ldr	r3, [r7, #4]
 80131a8:	681b      	ldr	r3, [r3, #0]
 80131aa:	695a      	ldr	r2, [r3, #20]
 80131ac:	687b      	ldr	r3, [r7, #4]
 80131ae:	681b      	ldr	r3, [r3, #0]
 80131b0:	f022 0201 	bic.w	r2, r2, #1
 80131b4:	615a      	str	r2, [r3, #20]
 80131b6:	687b      	ldr	r3, [r7, #4]
 80131b8:	2220      	movs	r2, #32
 80131ba:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80131be:	687b      	ldr	r3, [r7, #4]
 80131c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80131c2:	2b01      	cmp	r3, #1
 80131c4:	d135      	bne.n	8013232 <UART_Receive_IT+0x15e>
 80131c6:	687b      	ldr	r3, [r7, #4]
 80131c8:	2200      	movs	r2, #0
 80131ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80131cc:	687b      	ldr	r3, [r7, #4]
 80131ce:	681b      	ldr	r3, [r3, #0]
 80131d0:	330c      	adds	r3, #12
 80131d2:	617b      	str	r3, [r7, #20]
 80131d4:	697b      	ldr	r3, [r7, #20]
 80131d6:	e853 3f00 	ldrex	r3, [r3]
 80131da:	613b      	str	r3, [r7, #16]
 80131dc:	693b      	ldr	r3, [r7, #16]
 80131de:	f023 0310 	bic.w	r3, r3, #16
 80131e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80131e4:	687b      	ldr	r3, [r7, #4]
 80131e6:	681b      	ldr	r3, [r3, #0]
 80131e8:	330c      	adds	r3, #12
 80131ea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80131ec:	623a      	str	r2, [r7, #32]
 80131ee:	61fb      	str	r3, [r7, #28]
 80131f0:	69f9      	ldr	r1, [r7, #28]
 80131f2:	6a3a      	ldr	r2, [r7, #32]
 80131f4:	e841 2300 	strex	r3, r2, [r1]
 80131f8:	61bb      	str	r3, [r7, #24]
 80131fa:	69bb      	ldr	r3, [r7, #24]
 80131fc:	2b00      	cmp	r3, #0
 80131fe:	d1e5      	bne.n	80131cc <UART_Receive_IT+0xf8>
 8013200:	687b      	ldr	r3, [r7, #4]
 8013202:	681b      	ldr	r3, [r3, #0]
 8013204:	681b      	ldr	r3, [r3, #0]
 8013206:	f003 0310 	and.w	r3, r3, #16
 801320a:	2b10      	cmp	r3, #16
 801320c:	d10a      	bne.n	8013224 <UART_Receive_IT+0x150>
 801320e:	2300      	movs	r3, #0
 8013210:	60fb      	str	r3, [r7, #12]
 8013212:	687b      	ldr	r3, [r7, #4]
 8013214:	681b      	ldr	r3, [r3, #0]
 8013216:	681b      	ldr	r3, [r3, #0]
 8013218:	60fb      	str	r3, [r7, #12]
 801321a:	687b      	ldr	r3, [r7, #4]
 801321c:	681b      	ldr	r3, [r3, #0]
 801321e:	685b      	ldr	r3, [r3, #4]
 8013220:	60fb      	str	r3, [r7, #12]
 8013222:	68fb      	ldr	r3, [r7, #12]
 8013224:	687b      	ldr	r3, [r7, #4]
 8013226:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8013228:	4619      	mov	r1, r3
 801322a:	6878      	ldr	r0, [r7, #4]
 801322c:	f7ff fd9a 	bl	8012d64 <HAL_UARTEx_RxEventCallback>
 8013230:	e002      	b.n	8013238 <UART_Receive_IT+0x164>
 8013232:	6878      	ldr	r0, [r7, #4]
 8013234:	f7ff fd82 	bl	8012d3c <HAL_UART_RxCpltCallback>
 8013238:	2300      	movs	r3, #0
 801323a:	e002      	b.n	8013242 <UART_Receive_IT+0x16e>
 801323c:	2300      	movs	r3, #0
 801323e:	e000      	b.n	8013242 <UART_Receive_IT+0x16e>
 8013240:	2302      	movs	r3, #2
 8013242:	4618      	mov	r0, r3
 8013244:	3730      	adds	r7, #48	@ 0x30
 8013246:	46bd      	mov	sp, r7
 8013248:	bd80      	pop	{r7, pc}
	...

0801324c <UART_SetConfig>:
 801324c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8013250:	b0c0      	sub	sp, #256	@ 0x100
 8013252:	af00      	add	r7, sp, #0
 8013254:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8013258:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801325c:	681b      	ldr	r3, [r3, #0]
 801325e:	691b      	ldr	r3, [r3, #16]
 8013260:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8013264:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013268:	68d9      	ldr	r1, [r3, #12]
 801326a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801326e:	681a      	ldr	r2, [r3, #0]
 8013270:	ea40 0301 	orr.w	r3, r0, r1
 8013274:	6113      	str	r3, [r2, #16]
 8013276:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801327a:	689a      	ldr	r2, [r3, #8]
 801327c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013280:	691b      	ldr	r3, [r3, #16]
 8013282:	431a      	orrs	r2, r3
 8013284:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013288:	695b      	ldr	r3, [r3, #20]
 801328a:	431a      	orrs	r2, r3
 801328c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013290:	69db      	ldr	r3, [r3, #28]
 8013292:	4313      	orrs	r3, r2
 8013294:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8013298:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801329c:	681b      	ldr	r3, [r3, #0]
 801329e:	68db      	ldr	r3, [r3, #12]
 80132a0:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80132a4:	f021 010c 	bic.w	r1, r1, #12
 80132a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132ac:	681a      	ldr	r2, [r3, #0]
 80132ae:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80132b2:	430b      	orrs	r3, r1
 80132b4:	60d3      	str	r3, [r2, #12]
 80132b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132ba:	681b      	ldr	r3, [r3, #0]
 80132bc:	695b      	ldr	r3, [r3, #20]
 80132be:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80132c2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132c6:	6999      	ldr	r1, [r3, #24]
 80132c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132cc:	681a      	ldr	r2, [r3, #0]
 80132ce:	ea40 0301 	orr.w	r3, r0, r1
 80132d2:	6153      	str	r3, [r2, #20]
 80132d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132d8:	681a      	ldr	r2, [r3, #0]
 80132da:	4b8f      	ldr	r3, [pc, #572]	@ (8013518 <UART_SetConfig+0x2cc>)
 80132dc:	429a      	cmp	r2, r3
 80132de:	d005      	beq.n	80132ec <UART_SetConfig+0xa0>
 80132e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80132e4:	681a      	ldr	r2, [r3, #0]
 80132e6:	4b8d      	ldr	r3, [pc, #564]	@ (801351c <UART_SetConfig+0x2d0>)
 80132e8:	429a      	cmp	r2, r3
 80132ea:	d104      	bne.n	80132f6 <UART_SetConfig+0xaa>
 80132ec:	f7fd fb76 	bl	80109dc <HAL_RCC_GetPCLK2Freq>
 80132f0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80132f4:	e003      	b.n	80132fe <UART_SetConfig+0xb2>
 80132f6:	f7fd fb5d 	bl	80109b4 <HAL_RCC_GetPCLK1Freq>
 80132fa:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80132fe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013302:	69db      	ldr	r3, [r3, #28]
 8013304:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8013308:	f040 810c 	bne.w	8013524 <UART_SetConfig+0x2d8>
 801330c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013310:	2200      	movs	r2, #0
 8013312:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8013316:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 801331a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 801331e:	4622      	mov	r2, r4
 8013320:	462b      	mov	r3, r5
 8013322:	1891      	adds	r1, r2, r2
 8013324:	65b9      	str	r1, [r7, #88]	@ 0x58
 8013326:	415b      	adcs	r3, r3
 8013328:	65fb      	str	r3, [r7, #92]	@ 0x5c
 801332a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 801332e:	4621      	mov	r1, r4
 8013330:	eb12 0801 	adds.w	r8, r2, r1
 8013334:	4629      	mov	r1, r5
 8013336:	eb43 0901 	adc.w	r9, r3, r1
 801333a:	f04f 0200 	mov.w	r2, #0
 801333e:	f04f 0300 	mov.w	r3, #0
 8013342:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8013346:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 801334a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 801334e:	4690      	mov	r8, r2
 8013350:	4699      	mov	r9, r3
 8013352:	4623      	mov	r3, r4
 8013354:	eb18 0303 	adds.w	r3, r8, r3
 8013358:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 801335c:	462b      	mov	r3, r5
 801335e:	eb49 0303 	adc.w	r3, r9, r3
 8013362:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8013366:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801336a:	685b      	ldr	r3, [r3, #4]
 801336c:	2200      	movs	r2, #0
 801336e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8013372:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8013376:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 801337a:	460b      	mov	r3, r1
 801337c:	18db      	adds	r3, r3, r3
 801337e:	653b      	str	r3, [r7, #80]	@ 0x50
 8013380:	4613      	mov	r3, r2
 8013382:	eb42 0303 	adc.w	r3, r2, r3
 8013386:	657b      	str	r3, [r7, #84]	@ 0x54
 8013388:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 801338c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8013390:	f7ed fc7a 	bl	8000c88 <__aeabi_uldivmod>
 8013394:	4602      	mov	r2, r0
 8013396:	460b      	mov	r3, r1
 8013398:	4b61      	ldr	r3, [pc, #388]	@ (8013520 <UART_SetConfig+0x2d4>)
 801339a:	fba3 2302 	umull	r2, r3, r3, r2
 801339e:	095b      	lsrs	r3, r3, #5
 80133a0:	011c      	lsls	r4, r3, #4
 80133a2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80133a6:	2200      	movs	r2, #0
 80133a8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80133ac:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80133b0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80133b4:	4642      	mov	r2, r8
 80133b6:	464b      	mov	r3, r9
 80133b8:	1891      	adds	r1, r2, r2
 80133ba:	64b9      	str	r1, [r7, #72]	@ 0x48
 80133bc:	415b      	adcs	r3, r3
 80133be:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80133c0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80133c4:	4641      	mov	r1, r8
 80133c6:	eb12 0a01 	adds.w	sl, r2, r1
 80133ca:	4649      	mov	r1, r9
 80133cc:	eb43 0b01 	adc.w	fp, r3, r1
 80133d0:	f04f 0200 	mov.w	r2, #0
 80133d4:	f04f 0300 	mov.w	r3, #0
 80133d8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80133dc:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80133e0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80133e4:	4692      	mov	sl, r2
 80133e6:	469b      	mov	fp, r3
 80133e8:	4643      	mov	r3, r8
 80133ea:	eb1a 0303 	adds.w	r3, sl, r3
 80133ee:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80133f2:	464b      	mov	r3, r9
 80133f4:	eb4b 0303 	adc.w	r3, fp, r3
 80133f8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80133fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013400:	685b      	ldr	r3, [r3, #4]
 8013402:	2200      	movs	r2, #0
 8013404:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8013408:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 801340c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8013410:	460b      	mov	r3, r1
 8013412:	18db      	adds	r3, r3, r3
 8013414:	643b      	str	r3, [r7, #64]	@ 0x40
 8013416:	4613      	mov	r3, r2
 8013418:	eb42 0303 	adc.w	r3, r2, r3
 801341c:	647b      	str	r3, [r7, #68]	@ 0x44
 801341e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8013422:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8013426:	f7ed fc2f 	bl	8000c88 <__aeabi_uldivmod>
 801342a:	4602      	mov	r2, r0
 801342c:	460b      	mov	r3, r1
 801342e:	4611      	mov	r1, r2
 8013430:	4b3b      	ldr	r3, [pc, #236]	@ (8013520 <UART_SetConfig+0x2d4>)
 8013432:	fba3 2301 	umull	r2, r3, r3, r1
 8013436:	095b      	lsrs	r3, r3, #5
 8013438:	2264      	movs	r2, #100	@ 0x64
 801343a:	fb02 f303 	mul.w	r3, r2, r3
 801343e:	1acb      	subs	r3, r1, r3
 8013440:	00db      	lsls	r3, r3, #3
 8013442:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8013446:	4b36      	ldr	r3, [pc, #216]	@ (8013520 <UART_SetConfig+0x2d4>)
 8013448:	fba3 2302 	umull	r2, r3, r3, r2
 801344c:	095b      	lsrs	r3, r3, #5
 801344e:	005b      	lsls	r3, r3, #1
 8013450:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8013454:	441c      	add	r4, r3
 8013456:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 801345a:	2200      	movs	r2, #0
 801345c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8013460:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8013464:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8013468:	4642      	mov	r2, r8
 801346a:	464b      	mov	r3, r9
 801346c:	1891      	adds	r1, r2, r2
 801346e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8013470:	415b      	adcs	r3, r3
 8013472:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013474:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8013478:	4641      	mov	r1, r8
 801347a:	1851      	adds	r1, r2, r1
 801347c:	6339      	str	r1, [r7, #48]	@ 0x30
 801347e:	4649      	mov	r1, r9
 8013480:	414b      	adcs	r3, r1
 8013482:	637b      	str	r3, [r7, #52]	@ 0x34
 8013484:	f04f 0200 	mov.w	r2, #0
 8013488:	f04f 0300 	mov.w	r3, #0
 801348c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8013490:	4659      	mov	r1, fp
 8013492:	00cb      	lsls	r3, r1, #3
 8013494:	4651      	mov	r1, sl
 8013496:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 801349a:	4651      	mov	r1, sl
 801349c:	00ca      	lsls	r2, r1, #3
 801349e:	4610      	mov	r0, r2
 80134a0:	4619      	mov	r1, r3
 80134a2:	4603      	mov	r3, r0
 80134a4:	4642      	mov	r2, r8
 80134a6:	189b      	adds	r3, r3, r2
 80134a8:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80134ac:	464b      	mov	r3, r9
 80134ae:	460a      	mov	r2, r1
 80134b0:	eb42 0303 	adc.w	r3, r2, r3
 80134b4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80134b8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80134bc:	685b      	ldr	r3, [r3, #4]
 80134be:	2200      	movs	r2, #0
 80134c0:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80134c4:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80134c8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80134cc:	460b      	mov	r3, r1
 80134ce:	18db      	adds	r3, r3, r3
 80134d0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80134d2:	4613      	mov	r3, r2
 80134d4:	eb42 0303 	adc.w	r3, r2, r3
 80134d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80134da:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80134de:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80134e2:	f7ed fbd1 	bl	8000c88 <__aeabi_uldivmod>
 80134e6:	4602      	mov	r2, r0
 80134e8:	460b      	mov	r3, r1
 80134ea:	4b0d      	ldr	r3, [pc, #52]	@ (8013520 <UART_SetConfig+0x2d4>)
 80134ec:	fba3 1302 	umull	r1, r3, r3, r2
 80134f0:	095b      	lsrs	r3, r3, #5
 80134f2:	2164      	movs	r1, #100	@ 0x64
 80134f4:	fb01 f303 	mul.w	r3, r1, r3
 80134f8:	1ad3      	subs	r3, r2, r3
 80134fa:	00db      	lsls	r3, r3, #3
 80134fc:	3332      	adds	r3, #50	@ 0x32
 80134fe:	4a08      	ldr	r2, [pc, #32]	@ (8013520 <UART_SetConfig+0x2d4>)
 8013500:	fba2 2303 	umull	r2, r3, r2, r3
 8013504:	095b      	lsrs	r3, r3, #5
 8013506:	f003 0207 	and.w	r2, r3, #7
 801350a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801350e:	681b      	ldr	r3, [r3, #0]
 8013510:	4422      	add	r2, r4
 8013512:	609a      	str	r2, [r3, #8]
 8013514:	e106      	b.n	8013724 <UART_SetConfig+0x4d8>
 8013516:	bf00      	nop
 8013518:	40011000 	.word	0x40011000
 801351c:	40011400 	.word	0x40011400
 8013520:	51eb851f 	.word	0x51eb851f
 8013524:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013528:	2200      	movs	r2, #0
 801352a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 801352e:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8013532:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8013536:	4642      	mov	r2, r8
 8013538:	464b      	mov	r3, r9
 801353a:	1891      	adds	r1, r2, r2
 801353c:	6239      	str	r1, [r7, #32]
 801353e:	415b      	adcs	r3, r3
 8013540:	627b      	str	r3, [r7, #36]	@ 0x24
 8013542:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8013546:	4641      	mov	r1, r8
 8013548:	1854      	adds	r4, r2, r1
 801354a:	4649      	mov	r1, r9
 801354c:	eb43 0501 	adc.w	r5, r3, r1
 8013550:	f04f 0200 	mov.w	r2, #0
 8013554:	f04f 0300 	mov.w	r3, #0
 8013558:	00eb      	lsls	r3, r5, #3
 801355a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 801355e:	00e2      	lsls	r2, r4, #3
 8013560:	4614      	mov	r4, r2
 8013562:	461d      	mov	r5, r3
 8013564:	4643      	mov	r3, r8
 8013566:	18e3      	adds	r3, r4, r3
 8013568:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 801356c:	464b      	mov	r3, r9
 801356e:	eb45 0303 	adc.w	r3, r5, r3
 8013572:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8013576:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801357a:	685b      	ldr	r3, [r3, #4]
 801357c:	2200      	movs	r2, #0
 801357e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8013582:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8013586:	f04f 0200 	mov.w	r2, #0
 801358a:	f04f 0300 	mov.w	r3, #0
 801358e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8013592:	4629      	mov	r1, r5
 8013594:	008b      	lsls	r3, r1, #2
 8013596:	4621      	mov	r1, r4
 8013598:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 801359c:	4621      	mov	r1, r4
 801359e:	008a      	lsls	r2, r1, #2
 80135a0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80135a4:	f7ed fb70 	bl	8000c88 <__aeabi_uldivmod>
 80135a8:	4602      	mov	r2, r0
 80135aa:	460b      	mov	r3, r1
 80135ac:	4b60      	ldr	r3, [pc, #384]	@ (8013730 <UART_SetConfig+0x4e4>)
 80135ae:	fba3 2302 	umull	r2, r3, r3, r2
 80135b2:	095b      	lsrs	r3, r3, #5
 80135b4:	011c      	lsls	r4, r3, #4
 80135b6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80135ba:	2200      	movs	r2, #0
 80135bc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80135c0:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80135c4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80135c8:	4642      	mov	r2, r8
 80135ca:	464b      	mov	r3, r9
 80135cc:	1891      	adds	r1, r2, r2
 80135ce:	61b9      	str	r1, [r7, #24]
 80135d0:	415b      	adcs	r3, r3
 80135d2:	61fb      	str	r3, [r7, #28]
 80135d4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80135d8:	4641      	mov	r1, r8
 80135da:	1851      	adds	r1, r2, r1
 80135dc:	6139      	str	r1, [r7, #16]
 80135de:	4649      	mov	r1, r9
 80135e0:	414b      	adcs	r3, r1
 80135e2:	617b      	str	r3, [r7, #20]
 80135e4:	f04f 0200 	mov.w	r2, #0
 80135e8:	f04f 0300 	mov.w	r3, #0
 80135ec:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80135f0:	4659      	mov	r1, fp
 80135f2:	00cb      	lsls	r3, r1, #3
 80135f4:	4651      	mov	r1, sl
 80135f6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80135fa:	4651      	mov	r1, sl
 80135fc:	00ca      	lsls	r2, r1, #3
 80135fe:	4610      	mov	r0, r2
 8013600:	4619      	mov	r1, r3
 8013602:	4603      	mov	r3, r0
 8013604:	4642      	mov	r2, r8
 8013606:	189b      	adds	r3, r3, r2
 8013608:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 801360c:	464b      	mov	r3, r9
 801360e:	460a      	mov	r2, r1
 8013610:	eb42 0303 	adc.w	r3, r2, r3
 8013614:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8013618:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801361c:	685b      	ldr	r3, [r3, #4]
 801361e:	2200      	movs	r2, #0
 8013620:	67bb      	str	r3, [r7, #120]	@ 0x78
 8013622:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8013624:	f04f 0200 	mov.w	r2, #0
 8013628:	f04f 0300 	mov.w	r3, #0
 801362c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8013630:	4649      	mov	r1, r9
 8013632:	008b      	lsls	r3, r1, #2
 8013634:	4641      	mov	r1, r8
 8013636:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 801363a:	4641      	mov	r1, r8
 801363c:	008a      	lsls	r2, r1, #2
 801363e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8013642:	f7ed fb21 	bl	8000c88 <__aeabi_uldivmod>
 8013646:	4602      	mov	r2, r0
 8013648:	460b      	mov	r3, r1
 801364a:	4611      	mov	r1, r2
 801364c:	4b38      	ldr	r3, [pc, #224]	@ (8013730 <UART_SetConfig+0x4e4>)
 801364e:	fba3 2301 	umull	r2, r3, r3, r1
 8013652:	095b      	lsrs	r3, r3, #5
 8013654:	2264      	movs	r2, #100	@ 0x64
 8013656:	fb02 f303 	mul.w	r3, r2, r3
 801365a:	1acb      	subs	r3, r1, r3
 801365c:	011b      	lsls	r3, r3, #4
 801365e:	3332      	adds	r3, #50	@ 0x32
 8013660:	4a33      	ldr	r2, [pc, #204]	@ (8013730 <UART_SetConfig+0x4e4>)
 8013662:	fba2 2303 	umull	r2, r3, r2, r3
 8013666:	095b      	lsrs	r3, r3, #5
 8013668:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 801366c:	441c      	add	r4, r3
 801366e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013672:	2200      	movs	r2, #0
 8013674:	673b      	str	r3, [r7, #112]	@ 0x70
 8013676:	677a      	str	r2, [r7, #116]	@ 0x74
 8013678:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 801367c:	4642      	mov	r2, r8
 801367e:	464b      	mov	r3, r9
 8013680:	1891      	adds	r1, r2, r2
 8013682:	60b9      	str	r1, [r7, #8]
 8013684:	415b      	adcs	r3, r3
 8013686:	60fb      	str	r3, [r7, #12]
 8013688:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 801368c:	4641      	mov	r1, r8
 801368e:	1851      	adds	r1, r2, r1
 8013690:	6039      	str	r1, [r7, #0]
 8013692:	4649      	mov	r1, r9
 8013694:	414b      	adcs	r3, r1
 8013696:	607b      	str	r3, [r7, #4]
 8013698:	f04f 0200 	mov.w	r2, #0
 801369c:	f04f 0300 	mov.w	r3, #0
 80136a0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80136a4:	4659      	mov	r1, fp
 80136a6:	00cb      	lsls	r3, r1, #3
 80136a8:	4651      	mov	r1, sl
 80136aa:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80136ae:	4651      	mov	r1, sl
 80136b0:	00ca      	lsls	r2, r1, #3
 80136b2:	4610      	mov	r0, r2
 80136b4:	4619      	mov	r1, r3
 80136b6:	4603      	mov	r3, r0
 80136b8:	4642      	mov	r2, r8
 80136ba:	189b      	adds	r3, r3, r2
 80136bc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80136be:	464b      	mov	r3, r9
 80136c0:	460a      	mov	r2, r1
 80136c2:	eb42 0303 	adc.w	r3, r2, r3
 80136c6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80136c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80136cc:	685b      	ldr	r3, [r3, #4]
 80136ce:	2200      	movs	r2, #0
 80136d0:	663b      	str	r3, [r7, #96]	@ 0x60
 80136d2:	667a      	str	r2, [r7, #100]	@ 0x64
 80136d4:	f04f 0200 	mov.w	r2, #0
 80136d8:	f04f 0300 	mov.w	r3, #0
 80136dc:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80136e0:	4649      	mov	r1, r9
 80136e2:	008b      	lsls	r3, r1, #2
 80136e4:	4641      	mov	r1, r8
 80136e6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80136ea:	4641      	mov	r1, r8
 80136ec:	008a      	lsls	r2, r1, #2
 80136ee:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80136f2:	f7ed fac9 	bl	8000c88 <__aeabi_uldivmod>
 80136f6:	4602      	mov	r2, r0
 80136f8:	460b      	mov	r3, r1
 80136fa:	4b0d      	ldr	r3, [pc, #52]	@ (8013730 <UART_SetConfig+0x4e4>)
 80136fc:	fba3 1302 	umull	r1, r3, r3, r2
 8013700:	095b      	lsrs	r3, r3, #5
 8013702:	2164      	movs	r1, #100	@ 0x64
 8013704:	fb01 f303 	mul.w	r3, r1, r3
 8013708:	1ad3      	subs	r3, r2, r3
 801370a:	011b      	lsls	r3, r3, #4
 801370c:	3332      	adds	r3, #50	@ 0x32
 801370e:	4a08      	ldr	r2, [pc, #32]	@ (8013730 <UART_SetConfig+0x4e4>)
 8013710:	fba2 2303 	umull	r2, r3, r2, r3
 8013714:	095b      	lsrs	r3, r3, #5
 8013716:	f003 020f 	and.w	r2, r3, #15
 801371a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801371e:	681b      	ldr	r3, [r3, #0]
 8013720:	4422      	add	r2, r4
 8013722:	609a      	str	r2, [r3, #8]
 8013724:	bf00      	nop
 8013726:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 801372a:	46bd      	mov	sp, r7
 801372c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8013730:	51eb851f 	.word	0x51eb851f

08013734 <LL_TIM_SetPrescaler>:
 8013734:	b480      	push	{r7}
 8013736:	b083      	sub	sp, #12
 8013738:	af00      	add	r7, sp, #0
 801373a:	6078      	str	r0, [r7, #4]
 801373c:	6039      	str	r1, [r7, #0]
 801373e:	687b      	ldr	r3, [r7, #4]
 8013740:	683a      	ldr	r2, [r7, #0]
 8013742:	629a      	str	r2, [r3, #40]	@ 0x28
 8013744:	bf00      	nop
 8013746:	370c      	adds	r7, #12
 8013748:	46bd      	mov	sp, r7
 801374a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801374e:	4770      	bx	lr

08013750 <LL_TIM_SetAutoReload>:
 8013750:	b480      	push	{r7}
 8013752:	b083      	sub	sp, #12
 8013754:	af00      	add	r7, sp, #0
 8013756:	6078      	str	r0, [r7, #4]
 8013758:	6039      	str	r1, [r7, #0]
 801375a:	687b      	ldr	r3, [r7, #4]
 801375c:	683a      	ldr	r2, [r7, #0]
 801375e:	62da      	str	r2, [r3, #44]	@ 0x2c
 8013760:	bf00      	nop
 8013762:	370c      	adds	r7, #12
 8013764:	46bd      	mov	sp, r7
 8013766:	f85d 7b04 	ldr.w	r7, [sp], #4
 801376a:	4770      	bx	lr

0801376c <LL_TIM_SetRepetitionCounter>:
 801376c:	b480      	push	{r7}
 801376e:	b083      	sub	sp, #12
 8013770:	af00      	add	r7, sp, #0
 8013772:	6078      	str	r0, [r7, #4]
 8013774:	6039      	str	r1, [r7, #0]
 8013776:	687b      	ldr	r3, [r7, #4]
 8013778:	683a      	ldr	r2, [r7, #0]
 801377a:	631a      	str	r2, [r3, #48]	@ 0x30
 801377c:	bf00      	nop
 801377e:	370c      	adds	r7, #12
 8013780:	46bd      	mov	sp, r7
 8013782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013786:	4770      	bx	lr

08013788 <LL_TIM_GenerateEvent_UPDATE>:
 8013788:	b480      	push	{r7}
 801378a:	b083      	sub	sp, #12
 801378c:	af00      	add	r7, sp, #0
 801378e:	6078      	str	r0, [r7, #4]
 8013790:	687b      	ldr	r3, [r7, #4]
 8013792:	695b      	ldr	r3, [r3, #20]
 8013794:	f043 0201 	orr.w	r2, r3, #1
 8013798:	687b      	ldr	r3, [r7, #4]
 801379a:	615a      	str	r2, [r3, #20]
 801379c:	bf00      	nop
 801379e:	370c      	adds	r7, #12
 80137a0:	46bd      	mov	sp, r7
 80137a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80137a6:	4770      	bx	lr

080137a8 <LL_TIM_Init>:
 80137a8:	b580      	push	{r7, lr}
 80137aa:	b084      	sub	sp, #16
 80137ac:	af00      	add	r7, sp, #0
 80137ae:	6078      	str	r0, [r7, #4]
 80137b0:	6039      	str	r1, [r7, #0]
 80137b2:	687b      	ldr	r3, [r7, #4]
 80137b4:	681b      	ldr	r3, [r3, #0]
 80137b6:	60fb      	str	r3, [r7, #12]
 80137b8:	687b      	ldr	r3, [r7, #4]
 80137ba:	4a3d      	ldr	r2, [pc, #244]	@ (80138b0 <LL_TIM_Init+0x108>)
 80137bc:	4293      	cmp	r3, r2
 80137be:	d013      	beq.n	80137e8 <LL_TIM_Init+0x40>
 80137c0:	687b      	ldr	r3, [r7, #4]
 80137c2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80137c6:	d00f      	beq.n	80137e8 <LL_TIM_Init+0x40>
 80137c8:	687b      	ldr	r3, [r7, #4]
 80137ca:	4a3a      	ldr	r2, [pc, #232]	@ (80138b4 <LL_TIM_Init+0x10c>)
 80137cc:	4293      	cmp	r3, r2
 80137ce:	d00b      	beq.n	80137e8 <LL_TIM_Init+0x40>
 80137d0:	687b      	ldr	r3, [r7, #4]
 80137d2:	4a39      	ldr	r2, [pc, #228]	@ (80138b8 <LL_TIM_Init+0x110>)
 80137d4:	4293      	cmp	r3, r2
 80137d6:	d007      	beq.n	80137e8 <LL_TIM_Init+0x40>
 80137d8:	687b      	ldr	r3, [r7, #4]
 80137da:	4a38      	ldr	r2, [pc, #224]	@ (80138bc <LL_TIM_Init+0x114>)
 80137dc:	4293      	cmp	r3, r2
 80137de:	d003      	beq.n	80137e8 <LL_TIM_Init+0x40>
 80137e0:	687b      	ldr	r3, [r7, #4]
 80137e2:	4a37      	ldr	r2, [pc, #220]	@ (80138c0 <LL_TIM_Init+0x118>)
 80137e4:	4293      	cmp	r3, r2
 80137e6:	d106      	bne.n	80137f6 <LL_TIM_Init+0x4e>
 80137e8:	68fb      	ldr	r3, [r7, #12]
 80137ea:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80137ee:	683b      	ldr	r3, [r7, #0]
 80137f0:	685b      	ldr	r3, [r3, #4]
 80137f2:	4313      	orrs	r3, r2
 80137f4:	60fb      	str	r3, [r7, #12]
 80137f6:	687b      	ldr	r3, [r7, #4]
 80137f8:	4a2d      	ldr	r2, [pc, #180]	@ (80138b0 <LL_TIM_Init+0x108>)
 80137fa:	4293      	cmp	r3, r2
 80137fc:	d02b      	beq.n	8013856 <LL_TIM_Init+0xae>
 80137fe:	687b      	ldr	r3, [r7, #4]
 8013800:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8013804:	d027      	beq.n	8013856 <LL_TIM_Init+0xae>
 8013806:	687b      	ldr	r3, [r7, #4]
 8013808:	4a2a      	ldr	r2, [pc, #168]	@ (80138b4 <LL_TIM_Init+0x10c>)
 801380a:	4293      	cmp	r3, r2
 801380c:	d023      	beq.n	8013856 <LL_TIM_Init+0xae>
 801380e:	687b      	ldr	r3, [r7, #4]
 8013810:	4a29      	ldr	r2, [pc, #164]	@ (80138b8 <LL_TIM_Init+0x110>)
 8013812:	4293      	cmp	r3, r2
 8013814:	d01f      	beq.n	8013856 <LL_TIM_Init+0xae>
 8013816:	687b      	ldr	r3, [r7, #4]
 8013818:	4a28      	ldr	r2, [pc, #160]	@ (80138bc <LL_TIM_Init+0x114>)
 801381a:	4293      	cmp	r3, r2
 801381c:	d01b      	beq.n	8013856 <LL_TIM_Init+0xae>
 801381e:	687b      	ldr	r3, [r7, #4]
 8013820:	4a27      	ldr	r2, [pc, #156]	@ (80138c0 <LL_TIM_Init+0x118>)
 8013822:	4293      	cmp	r3, r2
 8013824:	d017      	beq.n	8013856 <LL_TIM_Init+0xae>
 8013826:	687b      	ldr	r3, [r7, #4]
 8013828:	4a26      	ldr	r2, [pc, #152]	@ (80138c4 <LL_TIM_Init+0x11c>)
 801382a:	4293      	cmp	r3, r2
 801382c:	d013      	beq.n	8013856 <LL_TIM_Init+0xae>
 801382e:	687b      	ldr	r3, [r7, #4]
 8013830:	4a25      	ldr	r2, [pc, #148]	@ (80138c8 <LL_TIM_Init+0x120>)
 8013832:	4293      	cmp	r3, r2
 8013834:	d00f      	beq.n	8013856 <LL_TIM_Init+0xae>
 8013836:	687b      	ldr	r3, [r7, #4]
 8013838:	4a24      	ldr	r2, [pc, #144]	@ (80138cc <LL_TIM_Init+0x124>)
 801383a:	4293      	cmp	r3, r2
 801383c:	d00b      	beq.n	8013856 <LL_TIM_Init+0xae>
 801383e:	687b      	ldr	r3, [r7, #4]
 8013840:	4a23      	ldr	r2, [pc, #140]	@ (80138d0 <LL_TIM_Init+0x128>)
 8013842:	4293      	cmp	r3, r2
 8013844:	d007      	beq.n	8013856 <LL_TIM_Init+0xae>
 8013846:	687b      	ldr	r3, [r7, #4]
 8013848:	4a22      	ldr	r2, [pc, #136]	@ (80138d4 <LL_TIM_Init+0x12c>)
 801384a:	4293      	cmp	r3, r2
 801384c:	d003      	beq.n	8013856 <LL_TIM_Init+0xae>
 801384e:	687b      	ldr	r3, [r7, #4]
 8013850:	4a21      	ldr	r2, [pc, #132]	@ (80138d8 <LL_TIM_Init+0x130>)
 8013852:	4293      	cmp	r3, r2
 8013854:	d106      	bne.n	8013864 <LL_TIM_Init+0xbc>
 8013856:	68fb      	ldr	r3, [r7, #12]
 8013858:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 801385c:	683b      	ldr	r3, [r7, #0]
 801385e:	68db      	ldr	r3, [r3, #12]
 8013860:	4313      	orrs	r3, r2
 8013862:	60fb      	str	r3, [r7, #12]
 8013864:	687b      	ldr	r3, [r7, #4]
 8013866:	68fa      	ldr	r2, [r7, #12]
 8013868:	601a      	str	r2, [r3, #0]
 801386a:	683b      	ldr	r3, [r7, #0]
 801386c:	689b      	ldr	r3, [r3, #8]
 801386e:	4619      	mov	r1, r3
 8013870:	6878      	ldr	r0, [r7, #4]
 8013872:	f7ff ff6d 	bl	8013750 <LL_TIM_SetAutoReload>
 8013876:	683b      	ldr	r3, [r7, #0]
 8013878:	881b      	ldrh	r3, [r3, #0]
 801387a:	4619      	mov	r1, r3
 801387c:	6878      	ldr	r0, [r7, #4]
 801387e:	f7ff ff59 	bl	8013734 <LL_TIM_SetPrescaler>
 8013882:	687b      	ldr	r3, [r7, #4]
 8013884:	4a0a      	ldr	r2, [pc, #40]	@ (80138b0 <LL_TIM_Init+0x108>)
 8013886:	4293      	cmp	r3, r2
 8013888:	d003      	beq.n	8013892 <LL_TIM_Init+0xea>
 801388a:	687b      	ldr	r3, [r7, #4]
 801388c:	4a0c      	ldr	r2, [pc, #48]	@ (80138c0 <LL_TIM_Init+0x118>)
 801388e:	4293      	cmp	r3, r2
 8013890:	d105      	bne.n	801389e <LL_TIM_Init+0xf6>
 8013892:	683b      	ldr	r3, [r7, #0]
 8013894:	691b      	ldr	r3, [r3, #16]
 8013896:	4619      	mov	r1, r3
 8013898:	6878      	ldr	r0, [r7, #4]
 801389a:	f7ff ff67 	bl	801376c <LL_TIM_SetRepetitionCounter>
 801389e:	6878      	ldr	r0, [r7, #4]
 80138a0:	f7ff ff72 	bl	8013788 <LL_TIM_GenerateEvent_UPDATE>
 80138a4:	2300      	movs	r3, #0
 80138a6:	4618      	mov	r0, r3
 80138a8:	3710      	adds	r7, #16
 80138aa:	46bd      	mov	sp, r7
 80138ac:	bd80      	pop	{r7, pc}
 80138ae:	bf00      	nop
 80138b0:	40010000 	.word	0x40010000
 80138b4:	40000400 	.word	0x40000400
 80138b8:	40000800 	.word	0x40000800
 80138bc:	40000c00 	.word	0x40000c00
 80138c0:	40010400 	.word	0x40010400
 80138c4:	40014000 	.word	0x40014000
 80138c8:	40014400 	.word	0x40014400
 80138cc:	40014800 	.word	0x40014800
 80138d0:	40001800 	.word	0x40001800
 80138d4:	40001c00 	.word	0x40001c00
 80138d8:	40002000 	.word	0x40002000

080138dc <USB_CoreInit>:
 80138dc:	b084      	sub	sp, #16
 80138de:	b580      	push	{r7, lr}
 80138e0:	b084      	sub	sp, #16
 80138e2:	af00      	add	r7, sp, #0
 80138e4:	6078      	str	r0, [r7, #4]
 80138e6:	f107 001c 	add.w	r0, r7, #28
 80138ea:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 80138ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80138f0:	2b01      	cmp	r3, #1
 80138f2:	d122      	bne.n	801393a <USB_CoreInit+0x5e>
 80138f4:	687b      	ldr	r3, [r7, #4]
 80138f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80138f8:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80138fc:	687b      	ldr	r3, [r7, #4]
 80138fe:	639a      	str	r2, [r3, #56]	@ 0x38
 8013900:	687b      	ldr	r3, [r7, #4]
 8013902:	68db      	ldr	r3, [r3, #12]
 8013904:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8013908:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 801390c:	687a      	ldr	r2, [r7, #4]
 801390e:	60d3      	str	r3, [r2, #12]
 8013910:	687b      	ldr	r3, [r7, #4]
 8013912:	68db      	ldr	r3, [r3, #12]
 8013914:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8013918:	687b      	ldr	r3, [r7, #4]
 801391a:	60da      	str	r2, [r3, #12]
 801391c:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 801391e:	2b01      	cmp	r3, #1
 8013920:	d105      	bne.n	801392e <USB_CoreInit+0x52>
 8013922:	687b      	ldr	r3, [r7, #4]
 8013924:	68db      	ldr	r3, [r3, #12]
 8013926:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 801392a:	687b      	ldr	r3, [r7, #4]
 801392c:	60da      	str	r2, [r3, #12]
 801392e:	6878      	ldr	r0, [r7, #4]
 8013930:	f001 fbee 	bl	8015110 <USB_CoreReset>
 8013934:	4603      	mov	r3, r0
 8013936:	73fb      	strb	r3, [r7, #15]
 8013938:	e01a      	b.n	8013970 <USB_CoreInit+0x94>
 801393a:	687b      	ldr	r3, [r7, #4]
 801393c:	68db      	ldr	r3, [r3, #12]
 801393e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8013942:	687b      	ldr	r3, [r7, #4]
 8013944:	60da      	str	r2, [r3, #12]
 8013946:	6878      	ldr	r0, [r7, #4]
 8013948:	f001 fbe2 	bl	8015110 <USB_CoreReset>
 801394c:	4603      	mov	r3, r0
 801394e:	73fb      	strb	r3, [r7, #15]
 8013950:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8013952:	2b00      	cmp	r3, #0
 8013954:	d106      	bne.n	8013964 <USB_CoreInit+0x88>
 8013956:	687b      	ldr	r3, [r7, #4]
 8013958:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801395a:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 801395e:	687b      	ldr	r3, [r7, #4]
 8013960:	639a      	str	r2, [r3, #56]	@ 0x38
 8013962:	e005      	b.n	8013970 <USB_CoreInit+0x94>
 8013964:	687b      	ldr	r3, [r7, #4]
 8013966:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013968:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 801396c:	687b      	ldr	r3, [r7, #4]
 801396e:	639a      	str	r2, [r3, #56]	@ 0x38
 8013970:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8013972:	2b01      	cmp	r3, #1
 8013974:	d10b      	bne.n	801398e <USB_CoreInit+0xb2>
 8013976:	687b      	ldr	r3, [r7, #4]
 8013978:	689b      	ldr	r3, [r3, #8]
 801397a:	f043 0206 	orr.w	r2, r3, #6
 801397e:	687b      	ldr	r3, [r7, #4]
 8013980:	609a      	str	r2, [r3, #8]
 8013982:	687b      	ldr	r3, [r7, #4]
 8013984:	689b      	ldr	r3, [r3, #8]
 8013986:	f043 0220 	orr.w	r2, r3, #32
 801398a:	687b      	ldr	r3, [r7, #4]
 801398c:	609a      	str	r2, [r3, #8]
 801398e:	7bfb      	ldrb	r3, [r7, #15]
 8013990:	4618      	mov	r0, r3
 8013992:	3710      	adds	r7, #16
 8013994:	46bd      	mov	sp, r7
 8013996:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 801399a:	b004      	add	sp, #16
 801399c:	4770      	bx	lr
	...

080139a0 <USB_SetTurnaroundTime>:
 80139a0:	b480      	push	{r7}
 80139a2:	b087      	sub	sp, #28
 80139a4:	af00      	add	r7, sp, #0
 80139a6:	60f8      	str	r0, [r7, #12]
 80139a8:	60b9      	str	r1, [r7, #8]
 80139aa:	4613      	mov	r3, r2
 80139ac:	71fb      	strb	r3, [r7, #7]
 80139ae:	79fb      	ldrb	r3, [r7, #7]
 80139b0:	2b02      	cmp	r3, #2
 80139b2:	d165      	bne.n	8013a80 <USB_SetTurnaroundTime+0xe0>
 80139b4:	68bb      	ldr	r3, [r7, #8]
 80139b6:	4a41      	ldr	r2, [pc, #260]	@ (8013abc <USB_SetTurnaroundTime+0x11c>)
 80139b8:	4293      	cmp	r3, r2
 80139ba:	d906      	bls.n	80139ca <USB_SetTurnaroundTime+0x2a>
 80139bc:	68bb      	ldr	r3, [r7, #8]
 80139be:	4a40      	ldr	r2, [pc, #256]	@ (8013ac0 <USB_SetTurnaroundTime+0x120>)
 80139c0:	4293      	cmp	r3, r2
 80139c2:	d202      	bcs.n	80139ca <USB_SetTurnaroundTime+0x2a>
 80139c4:	230f      	movs	r3, #15
 80139c6:	617b      	str	r3, [r7, #20]
 80139c8:	e062      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 80139ca:	68bb      	ldr	r3, [r7, #8]
 80139cc:	4a3c      	ldr	r2, [pc, #240]	@ (8013ac0 <USB_SetTurnaroundTime+0x120>)
 80139ce:	4293      	cmp	r3, r2
 80139d0:	d306      	bcc.n	80139e0 <USB_SetTurnaroundTime+0x40>
 80139d2:	68bb      	ldr	r3, [r7, #8]
 80139d4:	4a3b      	ldr	r2, [pc, #236]	@ (8013ac4 <USB_SetTurnaroundTime+0x124>)
 80139d6:	4293      	cmp	r3, r2
 80139d8:	d202      	bcs.n	80139e0 <USB_SetTurnaroundTime+0x40>
 80139da:	230e      	movs	r3, #14
 80139dc:	617b      	str	r3, [r7, #20]
 80139de:	e057      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 80139e0:	68bb      	ldr	r3, [r7, #8]
 80139e2:	4a38      	ldr	r2, [pc, #224]	@ (8013ac4 <USB_SetTurnaroundTime+0x124>)
 80139e4:	4293      	cmp	r3, r2
 80139e6:	d306      	bcc.n	80139f6 <USB_SetTurnaroundTime+0x56>
 80139e8:	68bb      	ldr	r3, [r7, #8]
 80139ea:	4a37      	ldr	r2, [pc, #220]	@ (8013ac8 <USB_SetTurnaroundTime+0x128>)
 80139ec:	4293      	cmp	r3, r2
 80139ee:	d202      	bcs.n	80139f6 <USB_SetTurnaroundTime+0x56>
 80139f0:	230d      	movs	r3, #13
 80139f2:	617b      	str	r3, [r7, #20]
 80139f4:	e04c      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 80139f6:	68bb      	ldr	r3, [r7, #8]
 80139f8:	4a33      	ldr	r2, [pc, #204]	@ (8013ac8 <USB_SetTurnaroundTime+0x128>)
 80139fa:	4293      	cmp	r3, r2
 80139fc:	d306      	bcc.n	8013a0c <USB_SetTurnaroundTime+0x6c>
 80139fe:	68bb      	ldr	r3, [r7, #8]
 8013a00:	4a32      	ldr	r2, [pc, #200]	@ (8013acc <USB_SetTurnaroundTime+0x12c>)
 8013a02:	4293      	cmp	r3, r2
 8013a04:	d802      	bhi.n	8013a0c <USB_SetTurnaroundTime+0x6c>
 8013a06:	230c      	movs	r3, #12
 8013a08:	617b      	str	r3, [r7, #20]
 8013a0a:	e041      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a0c:	68bb      	ldr	r3, [r7, #8]
 8013a0e:	4a2f      	ldr	r2, [pc, #188]	@ (8013acc <USB_SetTurnaroundTime+0x12c>)
 8013a10:	4293      	cmp	r3, r2
 8013a12:	d906      	bls.n	8013a22 <USB_SetTurnaroundTime+0x82>
 8013a14:	68bb      	ldr	r3, [r7, #8]
 8013a16:	4a2e      	ldr	r2, [pc, #184]	@ (8013ad0 <USB_SetTurnaroundTime+0x130>)
 8013a18:	4293      	cmp	r3, r2
 8013a1a:	d802      	bhi.n	8013a22 <USB_SetTurnaroundTime+0x82>
 8013a1c:	230b      	movs	r3, #11
 8013a1e:	617b      	str	r3, [r7, #20]
 8013a20:	e036      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a22:	68bb      	ldr	r3, [r7, #8]
 8013a24:	4a2a      	ldr	r2, [pc, #168]	@ (8013ad0 <USB_SetTurnaroundTime+0x130>)
 8013a26:	4293      	cmp	r3, r2
 8013a28:	d906      	bls.n	8013a38 <USB_SetTurnaroundTime+0x98>
 8013a2a:	68bb      	ldr	r3, [r7, #8]
 8013a2c:	4a29      	ldr	r2, [pc, #164]	@ (8013ad4 <USB_SetTurnaroundTime+0x134>)
 8013a2e:	4293      	cmp	r3, r2
 8013a30:	d802      	bhi.n	8013a38 <USB_SetTurnaroundTime+0x98>
 8013a32:	230a      	movs	r3, #10
 8013a34:	617b      	str	r3, [r7, #20]
 8013a36:	e02b      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a38:	68bb      	ldr	r3, [r7, #8]
 8013a3a:	4a26      	ldr	r2, [pc, #152]	@ (8013ad4 <USB_SetTurnaroundTime+0x134>)
 8013a3c:	4293      	cmp	r3, r2
 8013a3e:	d906      	bls.n	8013a4e <USB_SetTurnaroundTime+0xae>
 8013a40:	68bb      	ldr	r3, [r7, #8]
 8013a42:	4a25      	ldr	r2, [pc, #148]	@ (8013ad8 <USB_SetTurnaroundTime+0x138>)
 8013a44:	4293      	cmp	r3, r2
 8013a46:	d202      	bcs.n	8013a4e <USB_SetTurnaroundTime+0xae>
 8013a48:	2309      	movs	r3, #9
 8013a4a:	617b      	str	r3, [r7, #20]
 8013a4c:	e020      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a4e:	68bb      	ldr	r3, [r7, #8]
 8013a50:	4a21      	ldr	r2, [pc, #132]	@ (8013ad8 <USB_SetTurnaroundTime+0x138>)
 8013a52:	4293      	cmp	r3, r2
 8013a54:	d306      	bcc.n	8013a64 <USB_SetTurnaroundTime+0xc4>
 8013a56:	68bb      	ldr	r3, [r7, #8]
 8013a58:	4a20      	ldr	r2, [pc, #128]	@ (8013adc <USB_SetTurnaroundTime+0x13c>)
 8013a5a:	4293      	cmp	r3, r2
 8013a5c:	d802      	bhi.n	8013a64 <USB_SetTurnaroundTime+0xc4>
 8013a5e:	2308      	movs	r3, #8
 8013a60:	617b      	str	r3, [r7, #20]
 8013a62:	e015      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a64:	68bb      	ldr	r3, [r7, #8]
 8013a66:	4a1d      	ldr	r2, [pc, #116]	@ (8013adc <USB_SetTurnaroundTime+0x13c>)
 8013a68:	4293      	cmp	r3, r2
 8013a6a:	d906      	bls.n	8013a7a <USB_SetTurnaroundTime+0xda>
 8013a6c:	68bb      	ldr	r3, [r7, #8]
 8013a6e:	4a1c      	ldr	r2, [pc, #112]	@ (8013ae0 <USB_SetTurnaroundTime+0x140>)
 8013a70:	4293      	cmp	r3, r2
 8013a72:	d202      	bcs.n	8013a7a <USB_SetTurnaroundTime+0xda>
 8013a74:	2307      	movs	r3, #7
 8013a76:	617b      	str	r3, [r7, #20]
 8013a78:	e00a      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a7a:	2306      	movs	r3, #6
 8013a7c:	617b      	str	r3, [r7, #20]
 8013a7e:	e007      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a80:	79fb      	ldrb	r3, [r7, #7]
 8013a82:	2b00      	cmp	r3, #0
 8013a84:	d102      	bne.n	8013a8c <USB_SetTurnaroundTime+0xec>
 8013a86:	2309      	movs	r3, #9
 8013a88:	617b      	str	r3, [r7, #20]
 8013a8a:	e001      	b.n	8013a90 <USB_SetTurnaroundTime+0xf0>
 8013a8c:	2309      	movs	r3, #9
 8013a8e:	617b      	str	r3, [r7, #20]
 8013a90:	68fb      	ldr	r3, [r7, #12]
 8013a92:	68db      	ldr	r3, [r3, #12]
 8013a94:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 8013a98:	68fb      	ldr	r3, [r7, #12]
 8013a9a:	60da      	str	r2, [r3, #12]
 8013a9c:	68fb      	ldr	r3, [r7, #12]
 8013a9e:	68da      	ldr	r2, [r3, #12]
 8013aa0:	697b      	ldr	r3, [r7, #20]
 8013aa2:	029b      	lsls	r3, r3, #10
 8013aa4:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 8013aa8:	431a      	orrs	r2, r3
 8013aaa:	68fb      	ldr	r3, [r7, #12]
 8013aac:	60da      	str	r2, [r3, #12]
 8013aae:	2300      	movs	r3, #0
 8013ab0:	4618      	mov	r0, r3
 8013ab2:	371c      	adds	r7, #28
 8013ab4:	46bd      	mov	sp, r7
 8013ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013aba:	4770      	bx	lr
 8013abc:	00d8acbf 	.word	0x00d8acbf
 8013ac0:	00e4e1c0 	.word	0x00e4e1c0
 8013ac4:	00f42400 	.word	0x00f42400
 8013ac8:	01067380 	.word	0x01067380
 8013acc:	011a499f 	.word	0x011a499f
 8013ad0:	01312cff 	.word	0x01312cff
 8013ad4:	014ca43f 	.word	0x014ca43f
 8013ad8:	016e3600 	.word	0x016e3600
 8013adc:	01a6ab1f 	.word	0x01a6ab1f
 8013ae0:	01e84800 	.word	0x01e84800

08013ae4 <USB_EnableGlobalInt>:
 8013ae4:	b480      	push	{r7}
 8013ae6:	b083      	sub	sp, #12
 8013ae8:	af00      	add	r7, sp, #0
 8013aea:	6078      	str	r0, [r7, #4]
 8013aec:	687b      	ldr	r3, [r7, #4]
 8013aee:	689b      	ldr	r3, [r3, #8]
 8013af0:	f043 0201 	orr.w	r2, r3, #1
 8013af4:	687b      	ldr	r3, [r7, #4]
 8013af6:	609a      	str	r2, [r3, #8]
 8013af8:	2300      	movs	r3, #0
 8013afa:	4618      	mov	r0, r3
 8013afc:	370c      	adds	r7, #12
 8013afe:	46bd      	mov	sp, r7
 8013b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013b04:	4770      	bx	lr

08013b06 <USB_DisableGlobalInt>:
 8013b06:	b480      	push	{r7}
 8013b08:	b083      	sub	sp, #12
 8013b0a:	af00      	add	r7, sp, #0
 8013b0c:	6078      	str	r0, [r7, #4]
 8013b0e:	687b      	ldr	r3, [r7, #4]
 8013b10:	689b      	ldr	r3, [r3, #8]
 8013b12:	f023 0201 	bic.w	r2, r3, #1
 8013b16:	687b      	ldr	r3, [r7, #4]
 8013b18:	609a      	str	r2, [r3, #8]
 8013b1a:	2300      	movs	r3, #0
 8013b1c:	4618      	mov	r0, r3
 8013b1e:	370c      	adds	r7, #12
 8013b20:	46bd      	mov	sp, r7
 8013b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013b26:	4770      	bx	lr

08013b28 <USB_SetCurrentMode>:
 8013b28:	b580      	push	{r7, lr}
 8013b2a:	b084      	sub	sp, #16
 8013b2c:	af00      	add	r7, sp, #0
 8013b2e:	6078      	str	r0, [r7, #4]
 8013b30:	460b      	mov	r3, r1
 8013b32:	70fb      	strb	r3, [r7, #3]
 8013b34:	2300      	movs	r3, #0
 8013b36:	60fb      	str	r3, [r7, #12]
 8013b38:	687b      	ldr	r3, [r7, #4]
 8013b3a:	68db      	ldr	r3, [r3, #12]
 8013b3c:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 8013b40:	687b      	ldr	r3, [r7, #4]
 8013b42:	60da      	str	r2, [r3, #12]
 8013b44:	78fb      	ldrb	r3, [r7, #3]
 8013b46:	2b01      	cmp	r3, #1
 8013b48:	d115      	bne.n	8013b76 <USB_SetCurrentMode+0x4e>
 8013b4a:	687b      	ldr	r3, [r7, #4]
 8013b4c:	68db      	ldr	r3, [r3, #12]
 8013b4e:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 8013b52:	687b      	ldr	r3, [r7, #4]
 8013b54:	60da      	str	r2, [r3, #12]
 8013b56:	2001      	movs	r0, #1
 8013b58:	f7f7 fafe 	bl	800b158 <HAL_Delay>
 8013b5c:	68fb      	ldr	r3, [r7, #12]
 8013b5e:	3301      	adds	r3, #1
 8013b60:	60fb      	str	r3, [r7, #12]
 8013b62:	6878      	ldr	r0, [r7, #4]
 8013b64:	f001 fa45 	bl	8014ff2 <USB_GetMode>
 8013b68:	4603      	mov	r3, r0
 8013b6a:	2b01      	cmp	r3, #1
 8013b6c:	d01e      	beq.n	8013bac <USB_SetCurrentMode+0x84>
 8013b6e:	68fb      	ldr	r3, [r7, #12]
 8013b70:	2b31      	cmp	r3, #49	@ 0x31
 8013b72:	d9f0      	bls.n	8013b56 <USB_SetCurrentMode+0x2e>
 8013b74:	e01a      	b.n	8013bac <USB_SetCurrentMode+0x84>
 8013b76:	78fb      	ldrb	r3, [r7, #3]
 8013b78:	2b00      	cmp	r3, #0
 8013b7a:	d115      	bne.n	8013ba8 <USB_SetCurrentMode+0x80>
 8013b7c:	687b      	ldr	r3, [r7, #4]
 8013b7e:	68db      	ldr	r3, [r3, #12]
 8013b80:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8013b84:	687b      	ldr	r3, [r7, #4]
 8013b86:	60da      	str	r2, [r3, #12]
 8013b88:	2001      	movs	r0, #1
 8013b8a:	f7f7 fae5 	bl	800b158 <HAL_Delay>
 8013b8e:	68fb      	ldr	r3, [r7, #12]
 8013b90:	3301      	adds	r3, #1
 8013b92:	60fb      	str	r3, [r7, #12]
 8013b94:	6878      	ldr	r0, [r7, #4]
 8013b96:	f001 fa2c 	bl	8014ff2 <USB_GetMode>
 8013b9a:	4603      	mov	r3, r0
 8013b9c:	2b00      	cmp	r3, #0
 8013b9e:	d005      	beq.n	8013bac <USB_SetCurrentMode+0x84>
 8013ba0:	68fb      	ldr	r3, [r7, #12]
 8013ba2:	2b31      	cmp	r3, #49	@ 0x31
 8013ba4:	d9f0      	bls.n	8013b88 <USB_SetCurrentMode+0x60>
 8013ba6:	e001      	b.n	8013bac <USB_SetCurrentMode+0x84>
 8013ba8:	2301      	movs	r3, #1
 8013baa:	e005      	b.n	8013bb8 <USB_SetCurrentMode+0x90>
 8013bac:	68fb      	ldr	r3, [r7, #12]
 8013bae:	2b32      	cmp	r3, #50	@ 0x32
 8013bb0:	d101      	bne.n	8013bb6 <USB_SetCurrentMode+0x8e>
 8013bb2:	2301      	movs	r3, #1
 8013bb4:	e000      	b.n	8013bb8 <USB_SetCurrentMode+0x90>
 8013bb6:	2300      	movs	r3, #0
 8013bb8:	4618      	mov	r0, r3
 8013bba:	3710      	adds	r7, #16
 8013bbc:	46bd      	mov	sp, r7
 8013bbe:	bd80      	pop	{r7, pc}

08013bc0 <USB_DevInit>:
 8013bc0:	b084      	sub	sp, #16
 8013bc2:	b580      	push	{r7, lr}
 8013bc4:	b086      	sub	sp, #24
 8013bc6:	af00      	add	r7, sp, #0
 8013bc8:	6078      	str	r0, [r7, #4]
 8013bca:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8013bce:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8013bd2:	2300      	movs	r3, #0
 8013bd4:	75fb      	strb	r3, [r7, #23]
 8013bd6:	687b      	ldr	r3, [r7, #4]
 8013bd8:	60fb      	str	r3, [r7, #12]
 8013bda:	2300      	movs	r3, #0
 8013bdc:	613b      	str	r3, [r7, #16]
 8013bde:	e009      	b.n	8013bf4 <USB_DevInit+0x34>
 8013be0:	687a      	ldr	r2, [r7, #4]
 8013be2:	693b      	ldr	r3, [r7, #16]
 8013be4:	3340      	adds	r3, #64	@ 0x40
 8013be6:	009b      	lsls	r3, r3, #2
 8013be8:	4413      	add	r3, r2
 8013bea:	2200      	movs	r2, #0
 8013bec:	605a      	str	r2, [r3, #4]
 8013bee:	693b      	ldr	r3, [r7, #16]
 8013bf0:	3301      	adds	r3, #1
 8013bf2:	613b      	str	r3, [r7, #16]
 8013bf4:	693b      	ldr	r3, [r7, #16]
 8013bf6:	2b0e      	cmp	r3, #14
 8013bf8:	d9f2      	bls.n	8013be0 <USB_DevInit+0x20>
 8013bfa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013bfc:	2b00      	cmp	r3, #0
 8013bfe:	d11c      	bne.n	8013c3a <USB_DevInit+0x7a>
 8013c00:	68fb      	ldr	r3, [r7, #12]
 8013c02:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013c06:	685b      	ldr	r3, [r3, #4]
 8013c08:	68fa      	ldr	r2, [r7, #12]
 8013c0a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013c0e:	f043 0302 	orr.w	r3, r3, #2
 8013c12:	6053      	str	r3, [r2, #4]
 8013c14:	687b      	ldr	r3, [r7, #4]
 8013c16:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c18:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8013c1c:	687b      	ldr	r3, [r7, #4]
 8013c1e:	639a      	str	r2, [r3, #56]	@ 0x38
 8013c20:	687b      	ldr	r3, [r7, #4]
 8013c22:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c24:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 8013c28:	687b      	ldr	r3, [r7, #4]
 8013c2a:	639a      	str	r2, [r3, #56]	@ 0x38
 8013c2c:	687b      	ldr	r3, [r7, #4]
 8013c2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c30:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 8013c34:	687b      	ldr	r3, [r7, #4]
 8013c36:	639a      	str	r2, [r3, #56]	@ 0x38
 8013c38:	e00b      	b.n	8013c52 <USB_DevInit+0x92>
 8013c3a:	687b      	ldr	r3, [r7, #4]
 8013c3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c3e:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8013c42:	687b      	ldr	r3, [r7, #4]
 8013c44:	639a      	str	r2, [r3, #56]	@ 0x38
 8013c46:	687b      	ldr	r3, [r7, #4]
 8013c48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013c4a:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8013c4e:	687b      	ldr	r3, [r7, #4]
 8013c50:	639a      	str	r2, [r3, #56]	@ 0x38
 8013c52:	68fb      	ldr	r3, [r7, #12]
 8013c54:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8013c58:	461a      	mov	r2, r3
 8013c5a:	2300      	movs	r3, #0
 8013c5c:	6013      	str	r3, [r2, #0]
 8013c5e:	68fb      	ldr	r3, [r7, #12]
 8013c60:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013c64:	4619      	mov	r1, r3
 8013c66:	68fb      	ldr	r3, [r7, #12]
 8013c68:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013c6c:	461a      	mov	r2, r3
 8013c6e:	680b      	ldr	r3, [r1, #0]
 8013c70:	6013      	str	r3, [r2, #0]
 8013c72:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013c74:	2b01      	cmp	r3, #1
 8013c76:	d10c      	bne.n	8013c92 <USB_DevInit+0xd2>
 8013c78:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013c7a:	2b00      	cmp	r3, #0
 8013c7c:	d104      	bne.n	8013c88 <USB_DevInit+0xc8>
 8013c7e:	2100      	movs	r1, #0
 8013c80:	6878      	ldr	r0, [r7, #4]
 8013c82:	f000 f965 	bl	8013f50 <USB_SetDevSpeed>
 8013c86:	e008      	b.n	8013c9a <USB_DevInit+0xda>
 8013c88:	2101      	movs	r1, #1
 8013c8a:	6878      	ldr	r0, [r7, #4]
 8013c8c:	f000 f960 	bl	8013f50 <USB_SetDevSpeed>
 8013c90:	e003      	b.n	8013c9a <USB_DevInit+0xda>
 8013c92:	2103      	movs	r1, #3
 8013c94:	6878      	ldr	r0, [r7, #4]
 8013c96:	f000 f95b 	bl	8013f50 <USB_SetDevSpeed>
 8013c9a:	2110      	movs	r1, #16
 8013c9c:	6878      	ldr	r0, [r7, #4]
 8013c9e:	f000 f8f3 	bl	8013e88 <USB_FlushTxFifo>
 8013ca2:	4603      	mov	r3, r0
 8013ca4:	2b00      	cmp	r3, #0
 8013ca6:	d001      	beq.n	8013cac <USB_DevInit+0xec>
 8013ca8:	2301      	movs	r3, #1
 8013caa:	75fb      	strb	r3, [r7, #23]
 8013cac:	6878      	ldr	r0, [r7, #4]
 8013cae:	f000 f91f 	bl	8013ef0 <USB_FlushRxFifo>
 8013cb2:	4603      	mov	r3, r0
 8013cb4:	2b00      	cmp	r3, #0
 8013cb6:	d001      	beq.n	8013cbc <USB_DevInit+0xfc>
 8013cb8:	2301      	movs	r3, #1
 8013cba:	75fb      	strb	r3, [r7, #23]
 8013cbc:	68fb      	ldr	r3, [r7, #12]
 8013cbe:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013cc2:	461a      	mov	r2, r3
 8013cc4:	2300      	movs	r3, #0
 8013cc6:	6113      	str	r3, [r2, #16]
 8013cc8:	68fb      	ldr	r3, [r7, #12]
 8013cca:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013cce:	461a      	mov	r2, r3
 8013cd0:	2300      	movs	r3, #0
 8013cd2:	6153      	str	r3, [r2, #20]
 8013cd4:	68fb      	ldr	r3, [r7, #12]
 8013cd6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013cda:	461a      	mov	r2, r3
 8013cdc:	2300      	movs	r3, #0
 8013cde:	61d3      	str	r3, [r2, #28]
 8013ce0:	2300      	movs	r3, #0
 8013ce2:	613b      	str	r3, [r7, #16]
 8013ce4:	e043      	b.n	8013d6e <USB_DevInit+0x1ae>
 8013ce6:	693b      	ldr	r3, [r7, #16]
 8013ce8:	015a      	lsls	r2, r3, #5
 8013cea:	68fb      	ldr	r3, [r7, #12]
 8013cec:	4413      	add	r3, r2
 8013cee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013cf2:	681b      	ldr	r3, [r3, #0]
 8013cf4:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013cf8:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013cfc:	d118      	bne.n	8013d30 <USB_DevInit+0x170>
 8013cfe:	693b      	ldr	r3, [r7, #16]
 8013d00:	2b00      	cmp	r3, #0
 8013d02:	d10a      	bne.n	8013d1a <USB_DevInit+0x15a>
 8013d04:	693b      	ldr	r3, [r7, #16]
 8013d06:	015a      	lsls	r2, r3, #5
 8013d08:	68fb      	ldr	r3, [r7, #12]
 8013d0a:	4413      	add	r3, r2
 8013d0c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013d10:	461a      	mov	r2, r3
 8013d12:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8013d16:	6013      	str	r3, [r2, #0]
 8013d18:	e013      	b.n	8013d42 <USB_DevInit+0x182>
 8013d1a:	693b      	ldr	r3, [r7, #16]
 8013d1c:	015a      	lsls	r2, r3, #5
 8013d1e:	68fb      	ldr	r3, [r7, #12]
 8013d20:	4413      	add	r3, r2
 8013d22:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013d26:	461a      	mov	r2, r3
 8013d28:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8013d2c:	6013      	str	r3, [r2, #0]
 8013d2e:	e008      	b.n	8013d42 <USB_DevInit+0x182>
 8013d30:	693b      	ldr	r3, [r7, #16]
 8013d32:	015a      	lsls	r2, r3, #5
 8013d34:	68fb      	ldr	r3, [r7, #12]
 8013d36:	4413      	add	r3, r2
 8013d38:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013d3c:	461a      	mov	r2, r3
 8013d3e:	2300      	movs	r3, #0
 8013d40:	6013      	str	r3, [r2, #0]
 8013d42:	693b      	ldr	r3, [r7, #16]
 8013d44:	015a      	lsls	r2, r3, #5
 8013d46:	68fb      	ldr	r3, [r7, #12]
 8013d48:	4413      	add	r3, r2
 8013d4a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013d4e:	461a      	mov	r2, r3
 8013d50:	2300      	movs	r3, #0
 8013d52:	6113      	str	r3, [r2, #16]
 8013d54:	693b      	ldr	r3, [r7, #16]
 8013d56:	015a      	lsls	r2, r3, #5
 8013d58:	68fb      	ldr	r3, [r7, #12]
 8013d5a:	4413      	add	r3, r2
 8013d5c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013d60:	461a      	mov	r2, r3
 8013d62:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8013d66:	6093      	str	r3, [r2, #8]
 8013d68:	693b      	ldr	r3, [r7, #16]
 8013d6a:	3301      	adds	r3, #1
 8013d6c:	613b      	str	r3, [r7, #16]
 8013d6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013d70:	693a      	ldr	r2, [r7, #16]
 8013d72:	429a      	cmp	r2, r3
 8013d74:	d3b7      	bcc.n	8013ce6 <USB_DevInit+0x126>
 8013d76:	2300      	movs	r3, #0
 8013d78:	613b      	str	r3, [r7, #16]
 8013d7a:	e043      	b.n	8013e04 <USB_DevInit+0x244>
 8013d7c:	693b      	ldr	r3, [r7, #16]
 8013d7e:	015a      	lsls	r2, r3, #5
 8013d80:	68fb      	ldr	r3, [r7, #12]
 8013d82:	4413      	add	r3, r2
 8013d84:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013d88:	681b      	ldr	r3, [r3, #0]
 8013d8a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013d8e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013d92:	d118      	bne.n	8013dc6 <USB_DevInit+0x206>
 8013d94:	693b      	ldr	r3, [r7, #16]
 8013d96:	2b00      	cmp	r3, #0
 8013d98:	d10a      	bne.n	8013db0 <USB_DevInit+0x1f0>
 8013d9a:	693b      	ldr	r3, [r7, #16]
 8013d9c:	015a      	lsls	r2, r3, #5
 8013d9e:	68fb      	ldr	r3, [r7, #12]
 8013da0:	4413      	add	r3, r2
 8013da2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013da6:	461a      	mov	r2, r3
 8013da8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8013dac:	6013      	str	r3, [r2, #0]
 8013dae:	e013      	b.n	8013dd8 <USB_DevInit+0x218>
 8013db0:	693b      	ldr	r3, [r7, #16]
 8013db2:	015a      	lsls	r2, r3, #5
 8013db4:	68fb      	ldr	r3, [r7, #12]
 8013db6:	4413      	add	r3, r2
 8013db8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013dbc:	461a      	mov	r2, r3
 8013dbe:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8013dc2:	6013      	str	r3, [r2, #0]
 8013dc4:	e008      	b.n	8013dd8 <USB_DevInit+0x218>
 8013dc6:	693b      	ldr	r3, [r7, #16]
 8013dc8:	015a      	lsls	r2, r3, #5
 8013dca:	68fb      	ldr	r3, [r7, #12]
 8013dcc:	4413      	add	r3, r2
 8013dce:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013dd2:	461a      	mov	r2, r3
 8013dd4:	2300      	movs	r3, #0
 8013dd6:	6013      	str	r3, [r2, #0]
 8013dd8:	693b      	ldr	r3, [r7, #16]
 8013dda:	015a      	lsls	r2, r3, #5
 8013ddc:	68fb      	ldr	r3, [r7, #12]
 8013dde:	4413      	add	r3, r2
 8013de0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013de4:	461a      	mov	r2, r3
 8013de6:	2300      	movs	r3, #0
 8013de8:	6113      	str	r3, [r2, #16]
 8013dea:	693b      	ldr	r3, [r7, #16]
 8013dec:	015a      	lsls	r2, r3, #5
 8013dee:	68fb      	ldr	r3, [r7, #12]
 8013df0:	4413      	add	r3, r2
 8013df2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013df6:	461a      	mov	r2, r3
 8013df8:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8013dfc:	6093      	str	r3, [r2, #8]
 8013dfe:	693b      	ldr	r3, [r7, #16]
 8013e00:	3301      	adds	r3, #1
 8013e02:	613b      	str	r3, [r7, #16]
 8013e04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013e06:	693a      	ldr	r2, [r7, #16]
 8013e08:	429a      	cmp	r2, r3
 8013e0a:	d3b7      	bcc.n	8013d7c <USB_DevInit+0x1bc>
 8013e0c:	68fb      	ldr	r3, [r7, #12]
 8013e0e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013e12:	691b      	ldr	r3, [r3, #16]
 8013e14:	68fa      	ldr	r2, [r7, #12]
 8013e16:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013e1a:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8013e1e:	6113      	str	r3, [r2, #16]
 8013e20:	687b      	ldr	r3, [r7, #4]
 8013e22:	2200      	movs	r2, #0
 8013e24:	619a      	str	r2, [r3, #24]
 8013e26:	687b      	ldr	r3, [r7, #4]
 8013e28:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 8013e2c:	615a      	str	r2, [r3, #20]
 8013e2e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8013e30:	2b00      	cmp	r3, #0
 8013e32:	d105      	bne.n	8013e40 <USB_DevInit+0x280>
 8013e34:	687b      	ldr	r3, [r7, #4]
 8013e36:	699b      	ldr	r3, [r3, #24]
 8013e38:	f043 0210 	orr.w	r2, r3, #16
 8013e3c:	687b      	ldr	r3, [r7, #4]
 8013e3e:	619a      	str	r2, [r3, #24]
 8013e40:	687b      	ldr	r3, [r7, #4]
 8013e42:	699a      	ldr	r2, [r3, #24]
 8013e44:	4b0f      	ldr	r3, [pc, #60]	@ (8013e84 <USB_DevInit+0x2c4>)
 8013e46:	4313      	orrs	r3, r2
 8013e48:	687a      	ldr	r2, [r7, #4]
 8013e4a:	6193      	str	r3, [r2, #24]
 8013e4c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013e4e:	2b00      	cmp	r3, #0
 8013e50:	d005      	beq.n	8013e5e <USB_DevInit+0x29e>
 8013e52:	687b      	ldr	r3, [r7, #4]
 8013e54:	699b      	ldr	r3, [r3, #24]
 8013e56:	f043 0208 	orr.w	r2, r3, #8
 8013e5a:	687b      	ldr	r3, [r7, #4]
 8013e5c:	619a      	str	r2, [r3, #24]
 8013e5e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013e60:	2b01      	cmp	r3, #1
 8013e62:	d107      	bne.n	8013e74 <USB_DevInit+0x2b4>
 8013e64:	687b      	ldr	r3, [r7, #4]
 8013e66:	699b      	ldr	r3, [r3, #24]
 8013e68:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8013e6c:	f043 0304 	orr.w	r3, r3, #4
 8013e70:	687a      	ldr	r2, [r7, #4]
 8013e72:	6193      	str	r3, [r2, #24]
 8013e74:	7dfb      	ldrb	r3, [r7, #23]
 8013e76:	4618      	mov	r0, r3
 8013e78:	3718      	adds	r7, #24
 8013e7a:	46bd      	mov	sp, r7
 8013e7c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8013e80:	b004      	add	sp, #16
 8013e82:	4770      	bx	lr
 8013e84:	803c3800 	.word	0x803c3800

08013e88 <USB_FlushTxFifo>:
 8013e88:	b480      	push	{r7}
 8013e8a:	b085      	sub	sp, #20
 8013e8c:	af00      	add	r7, sp, #0
 8013e8e:	6078      	str	r0, [r7, #4]
 8013e90:	6039      	str	r1, [r7, #0]
 8013e92:	2300      	movs	r3, #0
 8013e94:	60fb      	str	r3, [r7, #12]
 8013e96:	68fb      	ldr	r3, [r7, #12]
 8013e98:	3301      	adds	r3, #1
 8013e9a:	60fb      	str	r3, [r7, #12]
 8013e9c:	68fb      	ldr	r3, [r7, #12]
 8013e9e:	4a13      	ldr	r2, [pc, #76]	@ (8013eec <USB_FlushTxFifo+0x64>)
 8013ea0:	4293      	cmp	r3, r2
 8013ea2:	d901      	bls.n	8013ea8 <USB_FlushTxFifo+0x20>
 8013ea4:	2303      	movs	r3, #3
 8013ea6:	e01b      	b.n	8013ee0 <USB_FlushTxFifo+0x58>
 8013ea8:	687b      	ldr	r3, [r7, #4]
 8013eaa:	691b      	ldr	r3, [r3, #16]
 8013eac:	2b00      	cmp	r3, #0
 8013eae:	daf2      	bge.n	8013e96 <USB_FlushTxFifo+0xe>
 8013eb0:	2300      	movs	r3, #0
 8013eb2:	60fb      	str	r3, [r7, #12]
 8013eb4:	683b      	ldr	r3, [r7, #0]
 8013eb6:	019b      	lsls	r3, r3, #6
 8013eb8:	f043 0220 	orr.w	r2, r3, #32
 8013ebc:	687b      	ldr	r3, [r7, #4]
 8013ebe:	611a      	str	r2, [r3, #16]
 8013ec0:	68fb      	ldr	r3, [r7, #12]
 8013ec2:	3301      	adds	r3, #1
 8013ec4:	60fb      	str	r3, [r7, #12]
 8013ec6:	68fb      	ldr	r3, [r7, #12]
 8013ec8:	4a08      	ldr	r2, [pc, #32]	@ (8013eec <USB_FlushTxFifo+0x64>)
 8013eca:	4293      	cmp	r3, r2
 8013ecc:	d901      	bls.n	8013ed2 <USB_FlushTxFifo+0x4a>
 8013ece:	2303      	movs	r3, #3
 8013ed0:	e006      	b.n	8013ee0 <USB_FlushTxFifo+0x58>
 8013ed2:	687b      	ldr	r3, [r7, #4]
 8013ed4:	691b      	ldr	r3, [r3, #16]
 8013ed6:	f003 0320 	and.w	r3, r3, #32
 8013eda:	2b20      	cmp	r3, #32
 8013edc:	d0f0      	beq.n	8013ec0 <USB_FlushTxFifo+0x38>
 8013ede:	2300      	movs	r3, #0
 8013ee0:	4618      	mov	r0, r3
 8013ee2:	3714      	adds	r7, #20
 8013ee4:	46bd      	mov	sp, r7
 8013ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013eea:	4770      	bx	lr
 8013eec:	00030d40 	.word	0x00030d40

08013ef0 <USB_FlushRxFifo>:
 8013ef0:	b480      	push	{r7}
 8013ef2:	b085      	sub	sp, #20
 8013ef4:	af00      	add	r7, sp, #0
 8013ef6:	6078      	str	r0, [r7, #4]
 8013ef8:	2300      	movs	r3, #0
 8013efa:	60fb      	str	r3, [r7, #12]
 8013efc:	68fb      	ldr	r3, [r7, #12]
 8013efe:	3301      	adds	r3, #1
 8013f00:	60fb      	str	r3, [r7, #12]
 8013f02:	68fb      	ldr	r3, [r7, #12]
 8013f04:	4a11      	ldr	r2, [pc, #68]	@ (8013f4c <USB_FlushRxFifo+0x5c>)
 8013f06:	4293      	cmp	r3, r2
 8013f08:	d901      	bls.n	8013f0e <USB_FlushRxFifo+0x1e>
 8013f0a:	2303      	movs	r3, #3
 8013f0c:	e018      	b.n	8013f40 <USB_FlushRxFifo+0x50>
 8013f0e:	687b      	ldr	r3, [r7, #4]
 8013f10:	691b      	ldr	r3, [r3, #16]
 8013f12:	2b00      	cmp	r3, #0
 8013f14:	daf2      	bge.n	8013efc <USB_FlushRxFifo+0xc>
 8013f16:	2300      	movs	r3, #0
 8013f18:	60fb      	str	r3, [r7, #12]
 8013f1a:	687b      	ldr	r3, [r7, #4]
 8013f1c:	2210      	movs	r2, #16
 8013f1e:	611a      	str	r2, [r3, #16]
 8013f20:	68fb      	ldr	r3, [r7, #12]
 8013f22:	3301      	adds	r3, #1
 8013f24:	60fb      	str	r3, [r7, #12]
 8013f26:	68fb      	ldr	r3, [r7, #12]
 8013f28:	4a08      	ldr	r2, [pc, #32]	@ (8013f4c <USB_FlushRxFifo+0x5c>)
 8013f2a:	4293      	cmp	r3, r2
 8013f2c:	d901      	bls.n	8013f32 <USB_FlushRxFifo+0x42>
 8013f2e:	2303      	movs	r3, #3
 8013f30:	e006      	b.n	8013f40 <USB_FlushRxFifo+0x50>
 8013f32:	687b      	ldr	r3, [r7, #4]
 8013f34:	691b      	ldr	r3, [r3, #16]
 8013f36:	f003 0310 	and.w	r3, r3, #16
 8013f3a:	2b10      	cmp	r3, #16
 8013f3c:	d0f0      	beq.n	8013f20 <USB_FlushRxFifo+0x30>
 8013f3e:	2300      	movs	r3, #0
 8013f40:	4618      	mov	r0, r3
 8013f42:	3714      	adds	r7, #20
 8013f44:	46bd      	mov	sp, r7
 8013f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f4a:	4770      	bx	lr
 8013f4c:	00030d40 	.word	0x00030d40

08013f50 <USB_SetDevSpeed>:
 8013f50:	b480      	push	{r7}
 8013f52:	b085      	sub	sp, #20
 8013f54:	af00      	add	r7, sp, #0
 8013f56:	6078      	str	r0, [r7, #4]
 8013f58:	460b      	mov	r3, r1
 8013f5a:	70fb      	strb	r3, [r7, #3]
 8013f5c:	687b      	ldr	r3, [r7, #4]
 8013f5e:	60fb      	str	r3, [r7, #12]
 8013f60:	68fb      	ldr	r3, [r7, #12]
 8013f62:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013f66:	681a      	ldr	r2, [r3, #0]
 8013f68:	78fb      	ldrb	r3, [r7, #3]
 8013f6a:	68f9      	ldr	r1, [r7, #12]
 8013f6c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013f70:	4313      	orrs	r3, r2
 8013f72:	600b      	str	r3, [r1, #0]
 8013f74:	2300      	movs	r3, #0
 8013f76:	4618      	mov	r0, r3
 8013f78:	3714      	adds	r7, #20
 8013f7a:	46bd      	mov	sp, r7
 8013f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f80:	4770      	bx	lr

08013f82 <USB_GetDevSpeed>:
 8013f82:	b480      	push	{r7}
 8013f84:	b087      	sub	sp, #28
 8013f86:	af00      	add	r7, sp, #0
 8013f88:	6078      	str	r0, [r7, #4]
 8013f8a:	687b      	ldr	r3, [r7, #4]
 8013f8c:	613b      	str	r3, [r7, #16]
 8013f8e:	693b      	ldr	r3, [r7, #16]
 8013f90:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013f94:	689b      	ldr	r3, [r3, #8]
 8013f96:	f003 0306 	and.w	r3, r3, #6
 8013f9a:	60fb      	str	r3, [r7, #12]
 8013f9c:	68fb      	ldr	r3, [r7, #12]
 8013f9e:	2b00      	cmp	r3, #0
 8013fa0:	d102      	bne.n	8013fa8 <USB_GetDevSpeed+0x26>
 8013fa2:	2300      	movs	r3, #0
 8013fa4:	75fb      	strb	r3, [r7, #23]
 8013fa6:	e00a      	b.n	8013fbe <USB_GetDevSpeed+0x3c>
 8013fa8:	68fb      	ldr	r3, [r7, #12]
 8013faa:	2b02      	cmp	r3, #2
 8013fac:	d002      	beq.n	8013fb4 <USB_GetDevSpeed+0x32>
 8013fae:	68fb      	ldr	r3, [r7, #12]
 8013fb0:	2b06      	cmp	r3, #6
 8013fb2:	d102      	bne.n	8013fba <USB_GetDevSpeed+0x38>
 8013fb4:	2302      	movs	r3, #2
 8013fb6:	75fb      	strb	r3, [r7, #23]
 8013fb8:	e001      	b.n	8013fbe <USB_GetDevSpeed+0x3c>
 8013fba:	230f      	movs	r3, #15
 8013fbc:	75fb      	strb	r3, [r7, #23]
 8013fbe:	7dfb      	ldrb	r3, [r7, #23]
 8013fc0:	4618      	mov	r0, r3
 8013fc2:	371c      	adds	r7, #28
 8013fc4:	46bd      	mov	sp, r7
 8013fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013fca:	4770      	bx	lr

08013fcc <USB_ActivateEndpoint>:
 8013fcc:	b480      	push	{r7}
 8013fce:	b085      	sub	sp, #20
 8013fd0:	af00      	add	r7, sp, #0
 8013fd2:	6078      	str	r0, [r7, #4]
 8013fd4:	6039      	str	r1, [r7, #0]
 8013fd6:	687b      	ldr	r3, [r7, #4]
 8013fd8:	60fb      	str	r3, [r7, #12]
 8013fda:	683b      	ldr	r3, [r7, #0]
 8013fdc:	781b      	ldrb	r3, [r3, #0]
 8013fde:	60bb      	str	r3, [r7, #8]
 8013fe0:	683b      	ldr	r3, [r7, #0]
 8013fe2:	785b      	ldrb	r3, [r3, #1]
 8013fe4:	2b01      	cmp	r3, #1
 8013fe6:	d13a      	bne.n	801405e <USB_ActivateEndpoint+0x92>
 8013fe8:	68fb      	ldr	r3, [r7, #12]
 8013fea:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013fee:	69da      	ldr	r2, [r3, #28]
 8013ff0:	683b      	ldr	r3, [r7, #0]
 8013ff2:	781b      	ldrb	r3, [r3, #0]
 8013ff4:	f003 030f 	and.w	r3, r3, #15
 8013ff8:	2101      	movs	r1, #1
 8013ffa:	fa01 f303 	lsl.w	r3, r1, r3
 8013ffe:	b29b      	uxth	r3, r3
 8014000:	68f9      	ldr	r1, [r7, #12]
 8014002:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014006:	4313      	orrs	r3, r2
 8014008:	61cb      	str	r3, [r1, #28]
 801400a:	68bb      	ldr	r3, [r7, #8]
 801400c:	015a      	lsls	r2, r3, #5
 801400e:	68fb      	ldr	r3, [r7, #12]
 8014010:	4413      	add	r3, r2
 8014012:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014016:	681b      	ldr	r3, [r3, #0]
 8014018:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 801401c:	2b00      	cmp	r3, #0
 801401e:	d155      	bne.n	80140cc <USB_ActivateEndpoint+0x100>
 8014020:	68bb      	ldr	r3, [r7, #8]
 8014022:	015a      	lsls	r2, r3, #5
 8014024:	68fb      	ldr	r3, [r7, #12]
 8014026:	4413      	add	r3, r2
 8014028:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801402c:	681a      	ldr	r2, [r3, #0]
 801402e:	683b      	ldr	r3, [r7, #0]
 8014030:	68db      	ldr	r3, [r3, #12]
 8014032:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8014036:	683b      	ldr	r3, [r7, #0]
 8014038:	791b      	ldrb	r3, [r3, #4]
 801403a:	049b      	lsls	r3, r3, #18
 801403c:	4319      	orrs	r1, r3
 801403e:	68bb      	ldr	r3, [r7, #8]
 8014040:	059b      	lsls	r3, r3, #22
 8014042:	430b      	orrs	r3, r1
 8014044:	4313      	orrs	r3, r2
 8014046:	68ba      	ldr	r2, [r7, #8]
 8014048:	0151      	lsls	r1, r2, #5
 801404a:	68fa      	ldr	r2, [r7, #12]
 801404c:	440a      	add	r2, r1
 801404e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014052:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014056:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 801405a:	6013      	str	r3, [r2, #0]
 801405c:	e036      	b.n	80140cc <USB_ActivateEndpoint+0x100>
 801405e:	68fb      	ldr	r3, [r7, #12]
 8014060:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014064:	69da      	ldr	r2, [r3, #28]
 8014066:	683b      	ldr	r3, [r7, #0]
 8014068:	781b      	ldrb	r3, [r3, #0]
 801406a:	f003 030f 	and.w	r3, r3, #15
 801406e:	2101      	movs	r1, #1
 8014070:	fa01 f303 	lsl.w	r3, r1, r3
 8014074:	041b      	lsls	r3, r3, #16
 8014076:	68f9      	ldr	r1, [r7, #12]
 8014078:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801407c:	4313      	orrs	r3, r2
 801407e:	61cb      	str	r3, [r1, #28]
 8014080:	68bb      	ldr	r3, [r7, #8]
 8014082:	015a      	lsls	r2, r3, #5
 8014084:	68fb      	ldr	r3, [r7, #12]
 8014086:	4413      	add	r3, r2
 8014088:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801408c:	681b      	ldr	r3, [r3, #0]
 801408e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8014092:	2b00      	cmp	r3, #0
 8014094:	d11a      	bne.n	80140cc <USB_ActivateEndpoint+0x100>
 8014096:	68bb      	ldr	r3, [r7, #8]
 8014098:	015a      	lsls	r2, r3, #5
 801409a:	68fb      	ldr	r3, [r7, #12]
 801409c:	4413      	add	r3, r2
 801409e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80140a2:	681a      	ldr	r2, [r3, #0]
 80140a4:	683b      	ldr	r3, [r7, #0]
 80140a6:	68db      	ldr	r3, [r3, #12]
 80140a8:	f3c3 010a 	ubfx	r1, r3, #0, #11
 80140ac:	683b      	ldr	r3, [r7, #0]
 80140ae:	791b      	ldrb	r3, [r3, #4]
 80140b0:	049b      	lsls	r3, r3, #18
 80140b2:	430b      	orrs	r3, r1
 80140b4:	4313      	orrs	r3, r2
 80140b6:	68ba      	ldr	r2, [r7, #8]
 80140b8:	0151      	lsls	r1, r2, #5
 80140ba:	68fa      	ldr	r2, [r7, #12]
 80140bc:	440a      	add	r2, r1
 80140be:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80140c2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80140c6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80140ca:	6013      	str	r3, [r2, #0]
 80140cc:	2300      	movs	r3, #0
 80140ce:	4618      	mov	r0, r3
 80140d0:	3714      	adds	r7, #20
 80140d2:	46bd      	mov	sp, r7
 80140d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80140d8:	4770      	bx	lr
	...

080140dc <USB_DeactivateEndpoint>:
 80140dc:	b480      	push	{r7}
 80140de:	b085      	sub	sp, #20
 80140e0:	af00      	add	r7, sp, #0
 80140e2:	6078      	str	r0, [r7, #4]
 80140e4:	6039      	str	r1, [r7, #0]
 80140e6:	687b      	ldr	r3, [r7, #4]
 80140e8:	60fb      	str	r3, [r7, #12]
 80140ea:	683b      	ldr	r3, [r7, #0]
 80140ec:	781b      	ldrb	r3, [r3, #0]
 80140ee:	60bb      	str	r3, [r7, #8]
 80140f0:	683b      	ldr	r3, [r7, #0]
 80140f2:	785b      	ldrb	r3, [r3, #1]
 80140f4:	2b01      	cmp	r3, #1
 80140f6:	d161      	bne.n	80141bc <USB_DeactivateEndpoint+0xe0>
 80140f8:	68bb      	ldr	r3, [r7, #8]
 80140fa:	015a      	lsls	r2, r3, #5
 80140fc:	68fb      	ldr	r3, [r7, #12]
 80140fe:	4413      	add	r3, r2
 8014100:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014104:	681b      	ldr	r3, [r3, #0]
 8014106:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 801410a:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 801410e:	d11f      	bne.n	8014150 <USB_DeactivateEndpoint+0x74>
 8014110:	68bb      	ldr	r3, [r7, #8]
 8014112:	015a      	lsls	r2, r3, #5
 8014114:	68fb      	ldr	r3, [r7, #12]
 8014116:	4413      	add	r3, r2
 8014118:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801411c:	681b      	ldr	r3, [r3, #0]
 801411e:	68ba      	ldr	r2, [r7, #8]
 8014120:	0151      	lsls	r1, r2, #5
 8014122:	68fa      	ldr	r2, [r7, #12]
 8014124:	440a      	add	r2, r1
 8014126:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801412a:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 801412e:	6013      	str	r3, [r2, #0]
 8014130:	68bb      	ldr	r3, [r7, #8]
 8014132:	015a      	lsls	r2, r3, #5
 8014134:	68fb      	ldr	r3, [r7, #12]
 8014136:	4413      	add	r3, r2
 8014138:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801413c:	681b      	ldr	r3, [r3, #0]
 801413e:	68ba      	ldr	r2, [r7, #8]
 8014140:	0151      	lsls	r1, r2, #5
 8014142:	68fa      	ldr	r2, [r7, #12]
 8014144:	440a      	add	r2, r1
 8014146:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801414a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 801414e:	6013      	str	r3, [r2, #0]
 8014150:	68fb      	ldr	r3, [r7, #12]
 8014152:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014156:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8014158:	683b      	ldr	r3, [r7, #0]
 801415a:	781b      	ldrb	r3, [r3, #0]
 801415c:	f003 030f 	and.w	r3, r3, #15
 8014160:	2101      	movs	r1, #1
 8014162:	fa01 f303 	lsl.w	r3, r1, r3
 8014166:	b29b      	uxth	r3, r3
 8014168:	43db      	mvns	r3, r3
 801416a:	68f9      	ldr	r1, [r7, #12]
 801416c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014170:	4013      	ands	r3, r2
 8014172:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8014174:	68fb      	ldr	r3, [r7, #12]
 8014176:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801417a:	69da      	ldr	r2, [r3, #28]
 801417c:	683b      	ldr	r3, [r7, #0]
 801417e:	781b      	ldrb	r3, [r3, #0]
 8014180:	f003 030f 	and.w	r3, r3, #15
 8014184:	2101      	movs	r1, #1
 8014186:	fa01 f303 	lsl.w	r3, r1, r3
 801418a:	b29b      	uxth	r3, r3
 801418c:	43db      	mvns	r3, r3
 801418e:	68f9      	ldr	r1, [r7, #12]
 8014190:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014194:	4013      	ands	r3, r2
 8014196:	61cb      	str	r3, [r1, #28]
 8014198:	68bb      	ldr	r3, [r7, #8]
 801419a:	015a      	lsls	r2, r3, #5
 801419c:	68fb      	ldr	r3, [r7, #12]
 801419e:	4413      	add	r3, r2
 80141a0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80141a4:	681a      	ldr	r2, [r3, #0]
 80141a6:	68bb      	ldr	r3, [r7, #8]
 80141a8:	0159      	lsls	r1, r3, #5
 80141aa:	68fb      	ldr	r3, [r7, #12]
 80141ac:	440b      	add	r3, r1
 80141ae:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80141b2:	4619      	mov	r1, r3
 80141b4:	4b35      	ldr	r3, [pc, #212]	@ (801428c <USB_DeactivateEndpoint+0x1b0>)
 80141b6:	4013      	ands	r3, r2
 80141b8:	600b      	str	r3, [r1, #0]
 80141ba:	e060      	b.n	801427e <USB_DeactivateEndpoint+0x1a2>
 80141bc:	68bb      	ldr	r3, [r7, #8]
 80141be:	015a      	lsls	r2, r3, #5
 80141c0:	68fb      	ldr	r3, [r7, #12]
 80141c2:	4413      	add	r3, r2
 80141c4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80141c8:	681b      	ldr	r3, [r3, #0]
 80141ca:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80141ce:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80141d2:	d11f      	bne.n	8014214 <USB_DeactivateEndpoint+0x138>
 80141d4:	68bb      	ldr	r3, [r7, #8]
 80141d6:	015a      	lsls	r2, r3, #5
 80141d8:	68fb      	ldr	r3, [r7, #12]
 80141da:	4413      	add	r3, r2
 80141dc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80141e0:	681b      	ldr	r3, [r3, #0]
 80141e2:	68ba      	ldr	r2, [r7, #8]
 80141e4:	0151      	lsls	r1, r2, #5
 80141e6:	68fa      	ldr	r2, [r7, #12]
 80141e8:	440a      	add	r2, r1
 80141ea:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80141ee:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80141f2:	6013      	str	r3, [r2, #0]
 80141f4:	68bb      	ldr	r3, [r7, #8]
 80141f6:	015a      	lsls	r2, r3, #5
 80141f8:	68fb      	ldr	r3, [r7, #12]
 80141fa:	4413      	add	r3, r2
 80141fc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014200:	681b      	ldr	r3, [r3, #0]
 8014202:	68ba      	ldr	r2, [r7, #8]
 8014204:	0151      	lsls	r1, r2, #5
 8014206:	68fa      	ldr	r2, [r7, #12]
 8014208:	440a      	add	r2, r1
 801420a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801420e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8014212:	6013      	str	r3, [r2, #0]
 8014214:	68fb      	ldr	r3, [r7, #12]
 8014216:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801421a:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 801421c:	683b      	ldr	r3, [r7, #0]
 801421e:	781b      	ldrb	r3, [r3, #0]
 8014220:	f003 030f 	and.w	r3, r3, #15
 8014224:	2101      	movs	r1, #1
 8014226:	fa01 f303 	lsl.w	r3, r1, r3
 801422a:	041b      	lsls	r3, r3, #16
 801422c:	43db      	mvns	r3, r3
 801422e:	68f9      	ldr	r1, [r7, #12]
 8014230:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014234:	4013      	ands	r3, r2
 8014236:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8014238:	68fb      	ldr	r3, [r7, #12]
 801423a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801423e:	69da      	ldr	r2, [r3, #28]
 8014240:	683b      	ldr	r3, [r7, #0]
 8014242:	781b      	ldrb	r3, [r3, #0]
 8014244:	f003 030f 	and.w	r3, r3, #15
 8014248:	2101      	movs	r1, #1
 801424a:	fa01 f303 	lsl.w	r3, r1, r3
 801424e:	041b      	lsls	r3, r3, #16
 8014250:	43db      	mvns	r3, r3
 8014252:	68f9      	ldr	r1, [r7, #12]
 8014254:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014258:	4013      	ands	r3, r2
 801425a:	61cb      	str	r3, [r1, #28]
 801425c:	68bb      	ldr	r3, [r7, #8]
 801425e:	015a      	lsls	r2, r3, #5
 8014260:	68fb      	ldr	r3, [r7, #12]
 8014262:	4413      	add	r3, r2
 8014264:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014268:	681a      	ldr	r2, [r3, #0]
 801426a:	68bb      	ldr	r3, [r7, #8]
 801426c:	0159      	lsls	r1, r3, #5
 801426e:	68fb      	ldr	r3, [r7, #12]
 8014270:	440b      	add	r3, r1
 8014272:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014276:	4619      	mov	r1, r3
 8014278:	4b05      	ldr	r3, [pc, #20]	@ (8014290 <USB_DeactivateEndpoint+0x1b4>)
 801427a:	4013      	ands	r3, r2
 801427c:	600b      	str	r3, [r1, #0]
 801427e:	2300      	movs	r3, #0
 8014280:	4618      	mov	r0, r3
 8014282:	3714      	adds	r7, #20
 8014284:	46bd      	mov	sp, r7
 8014286:	f85d 7b04 	ldr.w	r7, [sp], #4
 801428a:	4770      	bx	lr
 801428c:	ec337800 	.word	0xec337800
 8014290:	eff37800 	.word	0xeff37800

08014294 <USB_EPStartXfer>:
 8014294:	b580      	push	{r7, lr}
 8014296:	b08a      	sub	sp, #40	@ 0x28
 8014298:	af02      	add	r7, sp, #8
 801429a:	60f8      	str	r0, [r7, #12]
 801429c:	60b9      	str	r1, [r7, #8]
 801429e:	4613      	mov	r3, r2
 80142a0:	71fb      	strb	r3, [r7, #7]
 80142a2:	68fb      	ldr	r3, [r7, #12]
 80142a4:	61fb      	str	r3, [r7, #28]
 80142a6:	68bb      	ldr	r3, [r7, #8]
 80142a8:	781b      	ldrb	r3, [r3, #0]
 80142aa:	61bb      	str	r3, [r7, #24]
 80142ac:	68bb      	ldr	r3, [r7, #8]
 80142ae:	785b      	ldrb	r3, [r3, #1]
 80142b0:	2b01      	cmp	r3, #1
 80142b2:	f040 815c 	bne.w	801456e <USB_EPStartXfer+0x2da>
 80142b6:	68bb      	ldr	r3, [r7, #8]
 80142b8:	699b      	ldr	r3, [r3, #24]
 80142ba:	2b00      	cmp	r3, #0
 80142bc:	d132      	bne.n	8014324 <USB_EPStartXfer+0x90>
 80142be:	69bb      	ldr	r3, [r7, #24]
 80142c0:	015a      	lsls	r2, r3, #5
 80142c2:	69fb      	ldr	r3, [r7, #28]
 80142c4:	4413      	add	r3, r2
 80142c6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80142ca:	691b      	ldr	r3, [r3, #16]
 80142cc:	69ba      	ldr	r2, [r7, #24]
 80142ce:	0151      	lsls	r1, r2, #5
 80142d0:	69fa      	ldr	r2, [r7, #28]
 80142d2:	440a      	add	r2, r1
 80142d4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80142d8:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80142dc:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80142e0:	6113      	str	r3, [r2, #16]
 80142e2:	69bb      	ldr	r3, [r7, #24]
 80142e4:	015a      	lsls	r2, r3, #5
 80142e6:	69fb      	ldr	r3, [r7, #28]
 80142e8:	4413      	add	r3, r2
 80142ea:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80142ee:	691b      	ldr	r3, [r3, #16]
 80142f0:	69ba      	ldr	r2, [r7, #24]
 80142f2:	0151      	lsls	r1, r2, #5
 80142f4:	69fa      	ldr	r2, [r7, #28]
 80142f6:	440a      	add	r2, r1
 80142f8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80142fc:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014300:	6113      	str	r3, [r2, #16]
 8014302:	69bb      	ldr	r3, [r7, #24]
 8014304:	015a      	lsls	r2, r3, #5
 8014306:	69fb      	ldr	r3, [r7, #28]
 8014308:	4413      	add	r3, r2
 801430a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801430e:	691b      	ldr	r3, [r3, #16]
 8014310:	69ba      	ldr	r2, [r7, #24]
 8014312:	0151      	lsls	r1, r2, #5
 8014314:	69fa      	ldr	r2, [r7, #28]
 8014316:	440a      	add	r2, r1
 8014318:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801431c:	0cdb      	lsrs	r3, r3, #19
 801431e:	04db      	lsls	r3, r3, #19
 8014320:	6113      	str	r3, [r2, #16]
 8014322:	e074      	b.n	801440e <USB_EPStartXfer+0x17a>
 8014324:	69bb      	ldr	r3, [r7, #24]
 8014326:	015a      	lsls	r2, r3, #5
 8014328:	69fb      	ldr	r3, [r7, #28]
 801432a:	4413      	add	r3, r2
 801432c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014330:	691b      	ldr	r3, [r3, #16]
 8014332:	69ba      	ldr	r2, [r7, #24]
 8014334:	0151      	lsls	r1, r2, #5
 8014336:	69fa      	ldr	r2, [r7, #28]
 8014338:	440a      	add	r2, r1
 801433a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801433e:	0cdb      	lsrs	r3, r3, #19
 8014340:	04db      	lsls	r3, r3, #19
 8014342:	6113      	str	r3, [r2, #16]
 8014344:	69bb      	ldr	r3, [r7, #24]
 8014346:	015a      	lsls	r2, r3, #5
 8014348:	69fb      	ldr	r3, [r7, #28]
 801434a:	4413      	add	r3, r2
 801434c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014350:	691b      	ldr	r3, [r3, #16]
 8014352:	69ba      	ldr	r2, [r7, #24]
 8014354:	0151      	lsls	r1, r2, #5
 8014356:	69fa      	ldr	r2, [r7, #28]
 8014358:	440a      	add	r2, r1
 801435a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801435e:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8014362:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014366:	6113      	str	r3, [r2, #16]
 8014368:	69bb      	ldr	r3, [r7, #24]
 801436a:	015a      	lsls	r2, r3, #5
 801436c:	69fb      	ldr	r3, [r7, #28]
 801436e:	4413      	add	r3, r2
 8014370:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014374:	691a      	ldr	r2, [r3, #16]
 8014376:	68bb      	ldr	r3, [r7, #8]
 8014378:	6999      	ldr	r1, [r3, #24]
 801437a:	68bb      	ldr	r3, [r7, #8]
 801437c:	68db      	ldr	r3, [r3, #12]
 801437e:	440b      	add	r3, r1
 8014380:	1e59      	subs	r1, r3, #1
 8014382:	68bb      	ldr	r3, [r7, #8]
 8014384:	68db      	ldr	r3, [r3, #12]
 8014386:	fbb1 f3f3 	udiv	r3, r1, r3
 801438a:	04d9      	lsls	r1, r3, #19
 801438c:	4b9d      	ldr	r3, [pc, #628]	@ (8014604 <USB_EPStartXfer+0x370>)
 801438e:	400b      	ands	r3, r1
 8014390:	69b9      	ldr	r1, [r7, #24]
 8014392:	0148      	lsls	r0, r1, #5
 8014394:	69f9      	ldr	r1, [r7, #28]
 8014396:	4401      	add	r1, r0
 8014398:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 801439c:	4313      	orrs	r3, r2
 801439e:	610b      	str	r3, [r1, #16]
 80143a0:	69bb      	ldr	r3, [r7, #24]
 80143a2:	015a      	lsls	r2, r3, #5
 80143a4:	69fb      	ldr	r3, [r7, #28]
 80143a6:	4413      	add	r3, r2
 80143a8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143ac:	691a      	ldr	r2, [r3, #16]
 80143ae:	68bb      	ldr	r3, [r7, #8]
 80143b0:	699b      	ldr	r3, [r3, #24]
 80143b2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80143b6:	69b9      	ldr	r1, [r7, #24]
 80143b8:	0148      	lsls	r0, r1, #5
 80143ba:	69f9      	ldr	r1, [r7, #28]
 80143bc:	4401      	add	r1, r0
 80143be:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80143c2:	4313      	orrs	r3, r2
 80143c4:	610b      	str	r3, [r1, #16]
 80143c6:	68bb      	ldr	r3, [r7, #8]
 80143c8:	791b      	ldrb	r3, [r3, #4]
 80143ca:	2b01      	cmp	r3, #1
 80143cc:	d11f      	bne.n	801440e <USB_EPStartXfer+0x17a>
 80143ce:	69bb      	ldr	r3, [r7, #24]
 80143d0:	015a      	lsls	r2, r3, #5
 80143d2:	69fb      	ldr	r3, [r7, #28]
 80143d4:	4413      	add	r3, r2
 80143d6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143da:	691b      	ldr	r3, [r3, #16]
 80143dc:	69ba      	ldr	r2, [r7, #24]
 80143de:	0151      	lsls	r1, r2, #5
 80143e0:	69fa      	ldr	r2, [r7, #28]
 80143e2:	440a      	add	r2, r1
 80143e4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80143e8:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 80143ec:	6113      	str	r3, [r2, #16]
 80143ee:	69bb      	ldr	r3, [r7, #24]
 80143f0:	015a      	lsls	r2, r3, #5
 80143f2:	69fb      	ldr	r3, [r7, #28]
 80143f4:	4413      	add	r3, r2
 80143f6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143fa:	691b      	ldr	r3, [r3, #16]
 80143fc:	69ba      	ldr	r2, [r7, #24]
 80143fe:	0151      	lsls	r1, r2, #5
 8014400:	69fa      	ldr	r2, [r7, #28]
 8014402:	440a      	add	r2, r1
 8014404:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014408:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 801440c:	6113      	str	r3, [r2, #16]
 801440e:	79fb      	ldrb	r3, [r7, #7]
 8014410:	2b01      	cmp	r3, #1
 8014412:	d14b      	bne.n	80144ac <USB_EPStartXfer+0x218>
 8014414:	68bb      	ldr	r3, [r7, #8]
 8014416:	695b      	ldr	r3, [r3, #20]
 8014418:	2b00      	cmp	r3, #0
 801441a:	d009      	beq.n	8014430 <USB_EPStartXfer+0x19c>
 801441c:	69bb      	ldr	r3, [r7, #24]
 801441e:	015a      	lsls	r2, r3, #5
 8014420:	69fb      	ldr	r3, [r7, #28]
 8014422:	4413      	add	r3, r2
 8014424:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014428:	461a      	mov	r2, r3
 801442a:	68bb      	ldr	r3, [r7, #8]
 801442c:	695b      	ldr	r3, [r3, #20]
 801442e:	6153      	str	r3, [r2, #20]
 8014430:	68bb      	ldr	r3, [r7, #8]
 8014432:	791b      	ldrb	r3, [r3, #4]
 8014434:	2b01      	cmp	r3, #1
 8014436:	d128      	bne.n	801448a <USB_EPStartXfer+0x1f6>
 8014438:	69fb      	ldr	r3, [r7, #28]
 801443a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801443e:	689b      	ldr	r3, [r3, #8]
 8014440:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014444:	2b00      	cmp	r3, #0
 8014446:	d110      	bne.n	801446a <USB_EPStartXfer+0x1d6>
 8014448:	69bb      	ldr	r3, [r7, #24]
 801444a:	015a      	lsls	r2, r3, #5
 801444c:	69fb      	ldr	r3, [r7, #28]
 801444e:	4413      	add	r3, r2
 8014450:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014454:	681b      	ldr	r3, [r3, #0]
 8014456:	69ba      	ldr	r2, [r7, #24]
 8014458:	0151      	lsls	r1, r2, #5
 801445a:	69fa      	ldr	r2, [r7, #28]
 801445c:	440a      	add	r2, r1
 801445e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014462:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8014466:	6013      	str	r3, [r2, #0]
 8014468:	e00f      	b.n	801448a <USB_EPStartXfer+0x1f6>
 801446a:	69bb      	ldr	r3, [r7, #24]
 801446c:	015a      	lsls	r2, r3, #5
 801446e:	69fb      	ldr	r3, [r7, #28]
 8014470:	4413      	add	r3, r2
 8014472:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014476:	681b      	ldr	r3, [r3, #0]
 8014478:	69ba      	ldr	r2, [r7, #24]
 801447a:	0151      	lsls	r1, r2, #5
 801447c:	69fa      	ldr	r2, [r7, #28]
 801447e:	440a      	add	r2, r1
 8014480:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014484:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014488:	6013      	str	r3, [r2, #0]
 801448a:	69bb      	ldr	r3, [r7, #24]
 801448c:	015a      	lsls	r2, r3, #5
 801448e:	69fb      	ldr	r3, [r7, #28]
 8014490:	4413      	add	r3, r2
 8014492:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014496:	681b      	ldr	r3, [r3, #0]
 8014498:	69ba      	ldr	r2, [r7, #24]
 801449a:	0151      	lsls	r1, r2, #5
 801449c:	69fa      	ldr	r2, [r7, #28]
 801449e:	440a      	add	r2, r1
 80144a0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80144a4:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80144a8:	6013      	str	r3, [r2, #0]
 80144aa:	e133      	b.n	8014714 <USB_EPStartXfer+0x480>
 80144ac:	69bb      	ldr	r3, [r7, #24]
 80144ae:	015a      	lsls	r2, r3, #5
 80144b0:	69fb      	ldr	r3, [r7, #28]
 80144b2:	4413      	add	r3, r2
 80144b4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80144b8:	681b      	ldr	r3, [r3, #0]
 80144ba:	69ba      	ldr	r2, [r7, #24]
 80144bc:	0151      	lsls	r1, r2, #5
 80144be:	69fa      	ldr	r2, [r7, #28]
 80144c0:	440a      	add	r2, r1
 80144c2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80144c6:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80144ca:	6013      	str	r3, [r2, #0]
 80144cc:	68bb      	ldr	r3, [r7, #8]
 80144ce:	791b      	ldrb	r3, [r3, #4]
 80144d0:	2b01      	cmp	r3, #1
 80144d2:	d015      	beq.n	8014500 <USB_EPStartXfer+0x26c>
 80144d4:	68bb      	ldr	r3, [r7, #8]
 80144d6:	699b      	ldr	r3, [r3, #24]
 80144d8:	2b00      	cmp	r3, #0
 80144da:	f000 811b 	beq.w	8014714 <USB_EPStartXfer+0x480>
 80144de:	69fb      	ldr	r3, [r7, #28]
 80144e0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80144e4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80144e6:	68bb      	ldr	r3, [r7, #8]
 80144e8:	781b      	ldrb	r3, [r3, #0]
 80144ea:	f003 030f 	and.w	r3, r3, #15
 80144ee:	2101      	movs	r1, #1
 80144f0:	fa01 f303 	lsl.w	r3, r1, r3
 80144f4:	69f9      	ldr	r1, [r7, #28]
 80144f6:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80144fa:	4313      	orrs	r3, r2
 80144fc:	634b      	str	r3, [r1, #52]	@ 0x34
 80144fe:	e109      	b.n	8014714 <USB_EPStartXfer+0x480>
 8014500:	69fb      	ldr	r3, [r7, #28]
 8014502:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014506:	689b      	ldr	r3, [r3, #8]
 8014508:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801450c:	2b00      	cmp	r3, #0
 801450e:	d110      	bne.n	8014532 <USB_EPStartXfer+0x29e>
 8014510:	69bb      	ldr	r3, [r7, #24]
 8014512:	015a      	lsls	r2, r3, #5
 8014514:	69fb      	ldr	r3, [r7, #28]
 8014516:	4413      	add	r3, r2
 8014518:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801451c:	681b      	ldr	r3, [r3, #0]
 801451e:	69ba      	ldr	r2, [r7, #24]
 8014520:	0151      	lsls	r1, r2, #5
 8014522:	69fa      	ldr	r2, [r7, #28]
 8014524:	440a      	add	r2, r1
 8014526:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801452a:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 801452e:	6013      	str	r3, [r2, #0]
 8014530:	e00f      	b.n	8014552 <USB_EPStartXfer+0x2be>
 8014532:	69bb      	ldr	r3, [r7, #24]
 8014534:	015a      	lsls	r2, r3, #5
 8014536:	69fb      	ldr	r3, [r7, #28]
 8014538:	4413      	add	r3, r2
 801453a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801453e:	681b      	ldr	r3, [r3, #0]
 8014540:	69ba      	ldr	r2, [r7, #24]
 8014542:	0151      	lsls	r1, r2, #5
 8014544:	69fa      	ldr	r2, [r7, #28]
 8014546:	440a      	add	r2, r1
 8014548:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801454c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014550:	6013      	str	r3, [r2, #0]
 8014552:	68bb      	ldr	r3, [r7, #8]
 8014554:	6919      	ldr	r1, [r3, #16]
 8014556:	68bb      	ldr	r3, [r7, #8]
 8014558:	781a      	ldrb	r2, [r3, #0]
 801455a:	68bb      	ldr	r3, [r7, #8]
 801455c:	699b      	ldr	r3, [r3, #24]
 801455e:	b298      	uxth	r0, r3
 8014560:	79fb      	ldrb	r3, [r7, #7]
 8014562:	9300      	str	r3, [sp, #0]
 8014564:	4603      	mov	r3, r0
 8014566:	68f8      	ldr	r0, [r7, #12]
 8014568:	f000 fade 	bl	8014b28 <USB_WritePacket>
 801456c:	e0d2      	b.n	8014714 <USB_EPStartXfer+0x480>
 801456e:	69bb      	ldr	r3, [r7, #24]
 8014570:	015a      	lsls	r2, r3, #5
 8014572:	69fb      	ldr	r3, [r7, #28]
 8014574:	4413      	add	r3, r2
 8014576:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801457a:	691b      	ldr	r3, [r3, #16]
 801457c:	69ba      	ldr	r2, [r7, #24]
 801457e:	0151      	lsls	r1, r2, #5
 8014580:	69fa      	ldr	r2, [r7, #28]
 8014582:	440a      	add	r2, r1
 8014584:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014588:	0cdb      	lsrs	r3, r3, #19
 801458a:	04db      	lsls	r3, r3, #19
 801458c:	6113      	str	r3, [r2, #16]
 801458e:	69bb      	ldr	r3, [r7, #24]
 8014590:	015a      	lsls	r2, r3, #5
 8014592:	69fb      	ldr	r3, [r7, #28]
 8014594:	4413      	add	r3, r2
 8014596:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801459a:	691b      	ldr	r3, [r3, #16]
 801459c:	69ba      	ldr	r2, [r7, #24]
 801459e:	0151      	lsls	r1, r2, #5
 80145a0:	69fa      	ldr	r2, [r7, #28]
 80145a2:	440a      	add	r2, r1
 80145a4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80145a8:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80145ac:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80145b0:	6113      	str	r3, [r2, #16]
 80145b2:	68bb      	ldr	r3, [r7, #8]
 80145b4:	699b      	ldr	r3, [r3, #24]
 80145b6:	2b00      	cmp	r3, #0
 80145b8:	d126      	bne.n	8014608 <USB_EPStartXfer+0x374>
 80145ba:	69bb      	ldr	r3, [r7, #24]
 80145bc:	015a      	lsls	r2, r3, #5
 80145be:	69fb      	ldr	r3, [r7, #28]
 80145c0:	4413      	add	r3, r2
 80145c2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145c6:	691a      	ldr	r2, [r3, #16]
 80145c8:	68bb      	ldr	r3, [r7, #8]
 80145ca:	68db      	ldr	r3, [r3, #12]
 80145cc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80145d0:	69b9      	ldr	r1, [r7, #24]
 80145d2:	0148      	lsls	r0, r1, #5
 80145d4:	69f9      	ldr	r1, [r7, #28]
 80145d6:	4401      	add	r1, r0
 80145d8:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80145dc:	4313      	orrs	r3, r2
 80145de:	610b      	str	r3, [r1, #16]
 80145e0:	69bb      	ldr	r3, [r7, #24]
 80145e2:	015a      	lsls	r2, r3, #5
 80145e4:	69fb      	ldr	r3, [r7, #28]
 80145e6:	4413      	add	r3, r2
 80145e8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145ec:	691b      	ldr	r3, [r3, #16]
 80145ee:	69ba      	ldr	r2, [r7, #24]
 80145f0:	0151      	lsls	r1, r2, #5
 80145f2:	69fa      	ldr	r2, [r7, #28]
 80145f4:	440a      	add	r2, r1
 80145f6:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80145fa:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80145fe:	6113      	str	r3, [r2, #16]
 8014600:	e03a      	b.n	8014678 <USB_EPStartXfer+0x3e4>
 8014602:	bf00      	nop
 8014604:	1ff80000 	.word	0x1ff80000
 8014608:	68bb      	ldr	r3, [r7, #8]
 801460a:	699a      	ldr	r2, [r3, #24]
 801460c:	68bb      	ldr	r3, [r7, #8]
 801460e:	68db      	ldr	r3, [r3, #12]
 8014610:	4413      	add	r3, r2
 8014612:	1e5a      	subs	r2, r3, #1
 8014614:	68bb      	ldr	r3, [r7, #8]
 8014616:	68db      	ldr	r3, [r3, #12]
 8014618:	fbb2 f3f3 	udiv	r3, r2, r3
 801461c:	82fb      	strh	r3, [r7, #22]
 801461e:	68bb      	ldr	r3, [r7, #8]
 8014620:	68db      	ldr	r3, [r3, #12]
 8014622:	8afa      	ldrh	r2, [r7, #22]
 8014624:	fb03 f202 	mul.w	r2, r3, r2
 8014628:	68bb      	ldr	r3, [r7, #8]
 801462a:	61da      	str	r2, [r3, #28]
 801462c:	69bb      	ldr	r3, [r7, #24]
 801462e:	015a      	lsls	r2, r3, #5
 8014630:	69fb      	ldr	r3, [r7, #28]
 8014632:	4413      	add	r3, r2
 8014634:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014638:	691a      	ldr	r2, [r3, #16]
 801463a:	8afb      	ldrh	r3, [r7, #22]
 801463c:	04d9      	lsls	r1, r3, #19
 801463e:	4b38      	ldr	r3, [pc, #224]	@ (8014720 <USB_EPStartXfer+0x48c>)
 8014640:	400b      	ands	r3, r1
 8014642:	69b9      	ldr	r1, [r7, #24]
 8014644:	0148      	lsls	r0, r1, #5
 8014646:	69f9      	ldr	r1, [r7, #28]
 8014648:	4401      	add	r1, r0
 801464a:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 801464e:	4313      	orrs	r3, r2
 8014650:	610b      	str	r3, [r1, #16]
 8014652:	69bb      	ldr	r3, [r7, #24]
 8014654:	015a      	lsls	r2, r3, #5
 8014656:	69fb      	ldr	r3, [r7, #28]
 8014658:	4413      	add	r3, r2
 801465a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801465e:	691a      	ldr	r2, [r3, #16]
 8014660:	68bb      	ldr	r3, [r7, #8]
 8014662:	69db      	ldr	r3, [r3, #28]
 8014664:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014668:	69b9      	ldr	r1, [r7, #24]
 801466a:	0148      	lsls	r0, r1, #5
 801466c:	69f9      	ldr	r1, [r7, #28]
 801466e:	4401      	add	r1, r0
 8014670:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8014674:	4313      	orrs	r3, r2
 8014676:	610b      	str	r3, [r1, #16]
 8014678:	79fb      	ldrb	r3, [r7, #7]
 801467a:	2b01      	cmp	r3, #1
 801467c:	d10d      	bne.n	801469a <USB_EPStartXfer+0x406>
 801467e:	68bb      	ldr	r3, [r7, #8]
 8014680:	691b      	ldr	r3, [r3, #16]
 8014682:	2b00      	cmp	r3, #0
 8014684:	d009      	beq.n	801469a <USB_EPStartXfer+0x406>
 8014686:	68bb      	ldr	r3, [r7, #8]
 8014688:	6919      	ldr	r1, [r3, #16]
 801468a:	69bb      	ldr	r3, [r7, #24]
 801468c:	015a      	lsls	r2, r3, #5
 801468e:	69fb      	ldr	r3, [r7, #28]
 8014690:	4413      	add	r3, r2
 8014692:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014696:	460a      	mov	r2, r1
 8014698:	615a      	str	r2, [r3, #20]
 801469a:	68bb      	ldr	r3, [r7, #8]
 801469c:	791b      	ldrb	r3, [r3, #4]
 801469e:	2b01      	cmp	r3, #1
 80146a0:	d128      	bne.n	80146f4 <USB_EPStartXfer+0x460>
 80146a2:	69fb      	ldr	r3, [r7, #28]
 80146a4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80146a8:	689b      	ldr	r3, [r3, #8]
 80146aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80146ae:	2b00      	cmp	r3, #0
 80146b0:	d110      	bne.n	80146d4 <USB_EPStartXfer+0x440>
 80146b2:	69bb      	ldr	r3, [r7, #24]
 80146b4:	015a      	lsls	r2, r3, #5
 80146b6:	69fb      	ldr	r3, [r7, #28]
 80146b8:	4413      	add	r3, r2
 80146ba:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80146be:	681b      	ldr	r3, [r3, #0]
 80146c0:	69ba      	ldr	r2, [r7, #24]
 80146c2:	0151      	lsls	r1, r2, #5
 80146c4:	69fa      	ldr	r2, [r7, #28]
 80146c6:	440a      	add	r2, r1
 80146c8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80146cc:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80146d0:	6013      	str	r3, [r2, #0]
 80146d2:	e00f      	b.n	80146f4 <USB_EPStartXfer+0x460>
 80146d4:	69bb      	ldr	r3, [r7, #24]
 80146d6:	015a      	lsls	r2, r3, #5
 80146d8:	69fb      	ldr	r3, [r7, #28]
 80146da:	4413      	add	r3, r2
 80146dc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80146e0:	681b      	ldr	r3, [r3, #0]
 80146e2:	69ba      	ldr	r2, [r7, #24]
 80146e4:	0151      	lsls	r1, r2, #5
 80146e6:	69fa      	ldr	r2, [r7, #28]
 80146e8:	440a      	add	r2, r1
 80146ea:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80146ee:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80146f2:	6013      	str	r3, [r2, #0]
 80146f4:	69bb      	ldr	r3, [r7, #24]
 80146f6:	015a      	lsls	r2, r3, #5
 80146f8:	69fb      	ldr	r3, [r7, #28]
 80146fa:	4413      	add	r3, r2
 80146fc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014700:	681b      	ldr	r3, [r3, #0]
 8014702:	69ba      	ldr	r2, [r7, #24]
 8014704:	0151      	lsls	r1, r2, #5
 8014706:	69fa      	ldr	r2, [r7, #28]
 8014708:	440a      	add	r2, r1
 801470a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801470e:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8014712:	6013      	str	r3, [r2, #0]
 8014714:	2300      	movs	r3, #0
 8014716:	4618      	mov	r0, r3
 8014718:	3720      	adds	r7, #32
 801471a:	46bd      	mov	sp, r7
 801471c:	bd80      	pop	{r7, pc}
 801471e:	bf00      	nop
 8014720:	1ff80000 	.word	0x1ff80000

08014724 <USB_EP0StartXfer>:
 8014724:	b480      	push	{r7}
 8014726:	b087      	sub	sp, #28
 8014728:	af00      	add	r7, sp, #0
 801472a:	60f8      	str	r0, [r7, #12]
 801472c:	60b9      	str	r1, [r7, #8]
 801472e:	4613      	mov	r3, r2
 8014730:	71fb      	strb	r3, [r7, #7]
 8014732:	68fb      	ldr	r3, [r7, #12]
 8014734:	617b      	str	r3, [r7, #20]
 8014736:	68bb      	ldr	r3, [r7, #8]
 8014738:	781b      	ldrb	r3, [r3, #0]
 801473a:	613b      	str	r3, [r7, #16]
 801473c:	68bb      	ldr	r3, [r7, #8]
 801473e:	785b      	ldrb	r3, [r3, #1]
 8014740:	2b01      	cmp	r3, #1
 8014742:	f040 80ce 	bne.w	80148e2 <USB_EP0StartXfer+0x1be>
 8014746:	68bb      	ldr	r3, [r7, #8]
 8014748:	699b      	ldr	r3, [r3, #24]
 801474a:	2b00      	cmp	r3, #0
 801474c:	d132      	bne.n	80147b4 <USB_EP0StartXfer+0x90>
 801474e:	693b      	ldr	r3, [r7, #16]
 8014750:	015a      	lsls	r2, r3, #5
 8014752:	697b      	ldr	r3, [r7, #20]
 8014754:	4413      	add	r3, r2
 8014756:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801475a:	691b      	ldr	r3, [r3, #16]
 801475c:	693a      	ldr	r2, [r7, #16]
 801475e:	0151      	lsls	r1, r2, #5
 8014760:	697a      	ldr	r2, [r7, #20]
 8014762:	440a      	add	r2, r1
 8014764:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014768:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801476c:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014770:	6113      	str	r3, [r2, #16]
 8014772:	693b      	ldr	r3, [r7, #16]
 8014774:	015a      	lsls	r2, r3, #5
 8014776:	697b      	ldr	r3, [r7, #20]
 8014778:	4413      	add	r3, r2
 801477a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801477e:	691b      	ldr	r3, [r3, #16]
 8014780:	693a      	ldr	r2, [r7, #16]
 8014782:	0151      	lsls	r1, r2, #5
 8014784:	697a      	ldr	r2, [r7, #20]
 8014786:	440a      	add	r2, r1
 8014788:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801478c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014790:	6113      	str	r3, [r2, #16]
 8014792:	693b      	ldr	r3, [r7, #16]
 8014794:	015a      	lsls	r2, r3, #5
 8014796:	697b      	ldr	r3, [r7, #20]
 8014798:	4413      	add	r3, r2
 801479a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801479e:	691b      	ldr	r3, [r3, #16]
 80147a0:	693a      	ldr	r2, [r7, #16]
 80147a2:	0151      	lsls	r1, r2, #5
 80147a4:	697a      	ldr	r2, [r7, #20]
 80147a6:	440a      	add	r2, r1
 80147a8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80147ac:	0cdb      	lsrs	r3, r3, #19
 80147ae:	04db      	lsls	r3, r3, #19
 80147b0:	6113      	str	r3, [r2, #16]
 80147b2:	e04e      	b.n	8014852 <USB_EP0StartXfer+0x12e>
 80147b4:	693b      	ldr	r3, [r7, #16]
 80147b6:	015a      	lsls	r2, r3, #5
 80147b8:	697b      	ldr	r3, [r7, #20]
 80147ba:	4413      	add	r3, r2
 80147bc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80147c0:	691b      	ldr	r3, [r3, #16]
 80147c2:	693a      	ldr	r2, [r7, #16]
 80147c4:	0151      	lsls	r1, r2, #5
 80147c6:	697a      	ldr	r2, [r7, #20]
 80147c8:	440a      	add	r2, r1
 80147ca:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80147ce:	0cdb      	lsrs	r3, r3, #19
 80147d0:	04db      	lsls	r3, r3, #19
 80147d2:	6113      	str	r3, [r2, #16]
 80147d4:	693b      	ldr	r3, [r7, #16]
 80147d6:	015a      	lsls	r2, r3, #5
 80147d8:	697b      	ldr	r3, [r7, #20]
 80147da:	4413      	add	r3, r2
 80147dc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80147e0:	691b      	ldr	r3, [r3, #16]
 80147e2:	693a      	ldr	r2, [r7, #16]
 80147e4:	0151      	lsls	r1, r2, #5
 80147e6:	697a      	ldr	r2, [r7, #20]
 80147e8:	440a      	add	r2, r1
 80147ea:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80147ee:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80147f2:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80147f6:	6113      	str	r3, [r2, #16]
 80147f8:	68bb      	ldr	r3, [r7, #8]
 80147fa:	699a      	ldr	r2, [r3, #24]
 80147fc:	68bb      	ldr	r3, [r7, #8]
 80147fe:	68db      	ldr	r3, [r3, #12]
 8014800:	429a      	cmp	r2, r3
 8014802:	d903      	bls.n	801480c <USB_EP0StartXfer+0xe8>
 8014804:	68bb      	ldr	r3, [r7, #8]
 8014806:	68da      	ldr	r2, [r3, #12]
 8014808:	68bb      	ldr	r3, [r7, #8]
 801480a:	619a      	str	r2, [r3, #24]
 801480c:	693b      	ldr	r3, [r7, #16]
 801480e:	015a      	lsls	r2, r3, #5
 8014810:	697b      	ldr	r3, [r7, #20]
 8014812:	4413      	add	r3, r2
 8014814:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014818:	691b      	ldr	r3, [r3, #16]
 801481a:	693a      	ldr	r2, [r7, #16]
 801481c:	0151      	lsls	r1, r2, #5
 801481e:	697a      	ldr	r2, [r7, #20]
 8014820:	440a      	add	r2, r1
 8014822:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014826:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 801482a:	6113      	str	r3, [r2, #16]
 801482c:	693b      	ldr	r3, [r7, #16]
 801482e:	015a      	lsls	r2, r3, #5
 8014830:	697b      	ldr	r3, [r7, #20]
 8014832:	4413      	add	r3, r2
 8014834:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014838:	691a      	ldr	r2, [r3, #16]
 801483a:	68bb      	ldr	r3, [r7, #8]
 801483c:	699b      	ldr	r3, [r3, #24]
 801483e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014842:	6939      	ldr	r1, [r7, #16]
 8014844:	0148      	lsls	r0, r1, #5
 8014846:	6979      	ldr	r1, [r7, #20]
 8014848:	4401      	add	r1, r0
 801484a:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 801484e:	4313      	orrs	r3, r2
 8014850:	610b      	str	r3, [r1, #16]
 8014852:	79fb      	ldrb	r3, [r7, #7]
 8014854:	2b01      	cmp	r3, #1
 8014856:	d11e      	bne.n	8014896 <USB_EP0StartXfer+0x172>
 8014858:	68bb      	ldr	r3, [r7, #8]
 801485a:	695b      	ldr	r3, [r3, #20]
 801485c:	2b00      	cmp	r3, #0
 801485e:	d009      	beq.n	8014874 <USB_EP0StartXfer+0x150>
 8014860:	693b      	ldr	r3, [r7, #16]
 8014862:	015a      	lsls	r2, r3, #5
 8014864:	697b      	ldr	r3, [r7, #20]
 8014866:	4413      	add	r3, r2
 8014868:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801486c:	461a      	mov	r2, r3
 801486e:	68bb      	ldr	r3, [r7, #8]
 8014870:	695b      	ldr	r3, [r3, #20]
 8014872:	6153      	str	r3, [r2, #20]
 8014874:	693b      	ldr	r3, [r7, #16]
 8014876:	015a      	lsls	r2, r3, #5
 8014878:	697b      	ldr	r3, [r7, #20]
 801487a:	4413      	add	r3, r2
 801487c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014880:	681b      	ldr	r3, [r3, #0]
 8014882:	693a      	ldr	r2, [r7, #16]
 8014884:	0151      	lsls	r1, r2, #5
 8014886:	697a      	ldr	r2, [r7, #20]
 8014888:	440a      	add	r2, r1
 801488a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801488e:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8014892:	6013      	str	r3, [r2, #0]
 8014894:	e097      	b.n	80149c6 <USB_EP0StartXfer+0x2a2>
 8014896:	693b      	ldr	r3, [r7, #16]
 8014898:	015a      	lsls	r2, r3, #5
 801489a:	697b      	ldr	r3, [r7, #20]
 801489c:	4413      	add	r3, r2
 801489e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80148a2:	681b      	ldr	r3, [r3, #0]
 80148a4:	693a      	ldr	r2, [r7, #16]
 80148a6:	0151      	lsls	r1, r2, #5
 80148a8:	697a      	ldr	r2, [r7, #20]
 80148aa:	440a      	add	r2, r1
 80148ac:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80148b0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80148b4:	6013      	str	r3, [r2, #0]
 80148b6:	68bb      	ldr	r3, [r7, #8]
 80148b8:	699b      	ldr	r3, [r3, #24]
 80148ba:	2b00      	cmp	r3, #0
 80148bc:	f000 8083 	beq.w	80149c6 <USB_EP0StartXfer+0x2a2>
 80148c0:	697b      	ldr	r3, [r7, #20]
 80148c2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80148c6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80148c8:	68bb      	ldr	r3, [r7, #8]
 80148ca:	781b      	ldrb	r3, [r3, #0]
 80148cc:	f003 030f 	and.w	r3, r3, #15
 80148d0:	2101      	movs	r1, #1
 80148d2:	fa01 f303 	lsl.w	r3, r1, r3
 80148d6:	6979      	ldr	r1, [r7, #20]
 80148d8:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80148dc:	4313      	orrs	r3, r2
 80148de:	634b      	str	r3, [r1, #52]	@ 0x34
 80148e0:	e071      	b.n	80149c6 <USB_EP0StartXfer+0x2a2>
 80148e2:	693b      	ldr	r3, [r7, #16]
 80148e4:	015a      	lsls	r2, r3, #5
 80148e6:	697b      	ldr	r3, [r7, #20]
 80148e8:	4413      	add	r3, r2
 80148ea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80148ee:	691b      	ldr	r3, [r3, #16]
 80148f0:	693a      	ldr	r2, [r7, #16]
 80148f2:	0151      	lsls	r1, r2, #5
 80148f4:	697a      	ldr	r2, [r7, #20]
 80148f6:	440a      	add	r2, r1
 80148f8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80148fc:	0cdb      	lsrs	r3, r3, #19
 80148fe:	04db      	lsls	r3, r3, #19
 8014900:	6113      	str	r3, [r2, #16]
 8014902:	693b      	ldr	r3, [r7, #16]
 8014904:	015a      	lsls	r2, r3, #5
 8014906:	697b      	ldr	r3, [r7, #20]
 8014908:	4413      	add	r3, r2
 801490a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801490e:	691b      	ldr	r3, [r3, #16]
 8014910:	693a      	ldr	r2, [r7, #16]
 8014912:	0151      	lsls	r1, r2, #5
 8014914:	697a      	ldr	r2, [r7, #20]
 8014916:	440a      	add	r2, r1
 8014918:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801491c:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8014920:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014924:	6113      	str	r3, [r2, #16]
 8014926:	68bb      	ldr	r3, [r7, #8]
 8014928:	699b      	ldr	r3, [r3, #24]
 801492a:	2b00      	cmp	r3, #0
 801492c:	d003      	beq.n	8014936 <USB_EP0StartXfer+0x212>
 801492e:	68bb      	ldr	r3, [r7, #8]
 8014930:	68da      	ldr	r2, [r3, #12]
 8014932:	68bb      	ldr	r3, [r7, #8]
 8014934:	619a      	str	r2, [r3, #24]
 8014936:	68bb      	ldr	r3, [r7, #8]
 8014938:	68da      	ldr	r2, [r3, #12]
 801493a:	68bb      	ldr	r3, [r7, #8]
 801493c:	61da      	str	r2, [r3, #28]
 801493e:	693b      	ldr	r3, [r7, #16]
 8014940:	015a      	lsls	r2, r3, #5
 8014942:	697b      	ldr	r3, [r7, #20]
 8014944:	4413      	add	r3, r2
 8014946:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801494a:	691b      	ldr	r3, [r3, #16]
 801494c:	693a      	ldr	r2, [r7, #16]
 801494e:	0151      	lsls	r1, r2, #5
 8014950:	697a      	ldr	r2, [r7, #20]
 8014952:	440a      	add	r2, r1
 8014954:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014958:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 801495c:	6113      	str	r3, [r2, #16]
 801495e:	693b      	ldr	r3, [r7, #16]
 8014960:	015a      	lsls	r2, r3, #5
 8014962:	697b      	ldr	r3, [r7, #20]
 8014964:	4413      	add	r3, r2
 8014966:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801496a:	691a      	ldr	r2, [r3, #16]
 801496c:	68bb      	ldr	r3, [r7, #8]
 801496e:	69db      	ldr	r3, [r3, #28]
 8014970:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014974:	6939      	ldr	r1, [r7, #16]
 8014976:	0148      	lsls	r0, r1, #5
 8014978:	6979      	ldr	r1, [r7, #20]
 801497a:	4401      	add	r1, r0
 801497c:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8014980:	4313      	orrs	r3, r2
 8014982:	610b      	str	r3, [r1, #16]
 8014984:	79fb      	ldrb	r3, [r7, #7]
 8014986:	2b01      	cmp	r3, #1
 8014988:	d10d      	bne.n	80149a6 <USB_EP0StartXfer+0x282>
 801498a:	68bb      	ldr	r3, [r7, #8]
 801498c:	691b      	ldr	r3, [r3, #16]
 801498e:	2b00      	cmp	r3, #0
 8014990:	d009      	beq.n	80149a6 <USB_EP0StartXfer+0x282>
 8014992:	68bb      	ldr	r3, [r7, #8]
 8014994:	6919      	ldr	r1, [r3, #16]
 8014996:	693b      	ldr	r3, [r7, #16]
 8014998:	015a      	lsls	r2, r3, #5
 801499a:	697b      	ldr	r3, [r7, #20]
 801499c:	4413      	add	r3, r2
 801499e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80149a2:	460a      	mov	r2, r1
 80149a4:	615a      	str	r2, [r3, #20]
 80149a6:	693b      	ldr	r3, [r7, #16]
 80149a8:	015a      	lsls	r2, r3, #5
 80149aa:	697b      	ldr	r3, [r7, #20]
 80149ac:	4413      	add	r3, r2
 80149ae:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80149b2:	681b      	ldr	r3, [r3, #0]
 80149b4:	693a      	ldr	r2, [r7, #16]
 80149b6:	0151      	lsls	r1, r2, #5
 80149b8:	697a      	ldr	r2, [r7, #20]
 80149ba:	440a      	add	r2, r1
 80149bc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80149c0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80149c4:	6013      	str	r3, [r2, #0]
 80149c6:	2300      	movs	r3, #0
 80149c8:	4618      	mov	r0, r3
 80149ca:	371c      	adds	r7, #28
 80149cc:	46bd      	mov	sp, r7
 80149ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149d2:	4770      	bx	lr

080149d4 <USB_EPStopXfer>:
 80149d4:	b480      	push	{r7}
 80149d6:	b087      	sub	sp, #28
 80149d8:	af00      	add	r7, sp, #0
 80149da:	6078      	str	r0, [r7, #4]
 80149dc:	6039      	str	r1, [r7, #0]
 80149de:	2300      	movs	r3, #0
 80149e0:	60fb      	str	r3, [r7, #12]
 80149e2:	2300      	movs	r3, #0
 80149e4:	75fb      	strb	r3, [r7, #23]
 80149e6:	687b      	ldr	r3, [r7, #4]
 80149e8:	613b      	str	r3, [r7, #16]
 80149ea:	683b      	ldr	r3, [r7, #0]
 80149ec:	785b      	ldrb	r3, [r3, #1]
 80149ee:	2b01      	cmp	r3, #1
 80149f0:	d14a      	bne.n	8014a88 <USB_EPStopXfer+0xb4>
 80149f2:	683b      	ldr	r3, [r7, #0]
 80149f4:	781b      	ldrb	r3, [r3, #0]
 80149f6:	015a      	lsls	r2, r3, #5
 80149f8:	693b      	ldr	r3, [r7, #16]
 80149fa:	4413      	add	r3, r2
 80149fc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014a00:	681b      	ldr	r3, [r3, #0]
 8014a02:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014a06:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014a0a:	f040 8086 	bne.w	8014b1a <USB_EPStopXfer+0x146>
 8014a0e:	683b      	ldr	r3, [r7, #0]
 8014a10:	781b      	ldrb	r3, [r3, #0]
 8014a12:	015a      	lsls	r2, r3, #5
 8014a14:	693b      	ldr	r3, [r7, #16]
 8014a16:	4413      	add	r3, r2
 8014a18:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014a1c:	681b      	ldr	r3, [r3, #0]
 8014a1e:	683a      	ldr	r2, [r7, #0]
 8014a20:	7812      	ldrb	r2, [r2, #0]
 8014a22:	0151      	lsls	r1, r2, #5
 8014a24:	693a      	ldr	r2, [r7, #16]
 8014a26:	440a      	add	r2, r1
 8014a28:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014a2c:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8014a30:	6013      	str	r3, [r2, #0]
 8014a32:	683b      	ldr	r3, [r7, #0]
 8014a34:	781b      	ldrb	r3, [r3, #0]
 8014a36:	015a      	lsls	r2, r3, #5
 8014a38:	693b      	ldr	r3, [r7, #16]
 8014a3a:	4413      	add	r3, r2
 8014a3c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014a40:	681b      	ldr	r3, [r3, #0]
 8014a42:	683a      	ldr	r2, [r7, #0]
 8014a44:	7812      	ldrb	r2, [r2, #0]
 8014a46:	0151      	lsls	r1, r2, #5
 8014a48:	693a      	ldr	r2, [r7, #16]
 8014a4a:	440a      	add	r2, r1
 8014a4c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014a50:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8014a54:	6013      	str	r3, [r2, #0]
 8014a56:	68fb      	ldr	r3, [r7, #12]
 8014a58:	3301      	adds	r3, #1
 8014a5a:	60fb      	str	r3, [r7, #12]
 8014a5c:	68fb      	ldr	r3, [r7, #12]
 8014a5e:	f242 7210 	movw	r2, #10000	@ 0x2710
 8014a62:	4293      	cmp	r3, r2
 8014a64:	d902      	bls.n	8014a6c <USB_EPStopXfer+0x98>
 8014a66:	2301      	movs	r3, #1
 8014a68:	75fb      	strb	r3, [r7, #23]
 8014a6a:	e056      	b.n	8014b1a <USB_EPStopXfer+0x146>
 8014a6c:	683b      	ldr	r3, [r7, #0]
 8014a6e:	781b      	ldrb	r3, [r3, #0]
 8014a70:	015a      	lsls	r2, r3, #5
 8014a72:	693b      	ldr	r3, [r7, #16]
 8014a74:	4413      	add	r3, r2
 8014a76:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014a7a:	681b      	ldr	r3, [r3, #0]
 8014a7c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014a80:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014a84:	d0e7      	beq.n	8014a56 <USB_EPStopXfer+0x82>
 8014a86:	e048      	b.n	8014b1a <USB_EPStopXfer+0x146>
 8014a88:	683b      	ldr	r3, [r7, #0]
 8014a8a:	781b      	ldrb	r3, [r3, #0]
 8014a8c:	015a      	lsls	r2, r3, #5
 8014a8e:	693b      	ldr	r3, [r7, #16]
 8014a90:	4413      	add	r3, r2
 8014a92:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014a96:	681b      	ldr	r3, [r3, #0]
 8014a98:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014a9c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014aa0:	d13b      	bne.n	8014b1a <USB_EPStopXfer+0x146>
 8014aa2:	683b      	ldr	r3, [r7, #0]
 8014aa4:	781b      	ldrb	r3, [r3, #0]
 8014aa6:	015a      	lsls	r2, r3, #5
 8014aa8:	693b      	ldr	r3, [r7, #16]
 8014aaa:	4413      	add	r3, r2
 8014aac:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014ab0:	681b      	ldr	r3, [r3, #0]
 8014ab2:	683a      	ldr	r2, [r7, #0]
 8014ab4:	7812      	ldrb	r2, [r2, #0]
 8014ab6:	0151      	lsls	r1, r2, #5
 8014ab8:	693a      	ldr	r2, [r7, #16]
 8014aba:	440a      	add	r2, r1
 8014abc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014ac0:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8014ac4:	6013      	str	r3, [r2, #0]
 8014ac6:	683b      	ldr	r3, [r7, #0]
 8014ac8:	781b      	ldrb	r3, [r3, #0]
 8014aca:	015a      	lsls	r2, r3, #5
 8014acc:	693b      	ldr	r3, [r7, #16]
 8014ace:	4413      	add	r3, r2
 8014ad0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014ad4:	681b      	ldr	r3, [r3, #0]
 8014ad6:	683a      	ldr	r2, [r7, #0]
 8014ad8:	7812      	ldrb	r2, [r2, #0]
 8014ada:	0151      	lsls	r1, r2, #5
 8014adc:	693a      	ldr	r2, [r7, #16]
 8014ade:	440a      	add	r2, r1
 8014ae0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014ae4:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8014ae8:	6013      	str	r3, [r2, #0]
 8014aea:	68fb      	ldr	r3, [r7, #12]
 8014aec:	3301      	adds	r3, #1
 8014aee:	60fb      	str	r3, [r7, #12]
 8014af0:	68fb      	ldr	r3, [r7, #12]
 8014af2:	f242 7210 	movw	r2, #10000	@ 0x2710
 8014af6:	4293      	cmp	r3, r2
 8014af8:	d902      	bls.n	8014b00 <USB_EPStopXfer+0x12c>
 8014afa:	2301      	movs	r3, #1
 8014afc:	75fb      	strb	r3, [r7, #23]
 8014afe:	e00c      	b.n	8014b1a <USB_EPStopXfer+0x146>
 8014b00:	683b      	ldr	r3, [r7, #0]
 8014b02:	781b      	ldrb	r3, [r3, #0]
 8014b04:	015a      	lsls	r2, r3, #5
 8014b06:	693b      	ldr	r3, [r7, #16]
 8014b08:	4413      	add	r3, r2
 8014b0a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014b0e:	681b      	ldr	r3, [r3, #0]
 8014b10:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014b14:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014b18:	d0e7      	beq.n	8014aea <USB_EPStopXfer+0x116>
 8014b1a:	7dfb      	ldrb	r3, [r7, #23]
 8014b1c:	4618      	mov	r0, r3
 8014b1e:	371c      	adds	r7, #28
 8014b20:	46bd      	mov	sp, r7
 8014b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b26:	4770      	bx	lr

08014b28 <USB_WritePacket>:
 8014b28:	b480      	push	{r7}
 8014b2a:	b089      	sub	sp, #36	@ 0x24
 8014b2c:	af00      	add	r7, sp, #0
 8014b2e:	60f8      	str	r0, [r7, #12]
 8014b30:	60b9      	str	r1, [r7, #8]
 8014b32:	4611      	mov	r1, r2
 8014b34:	461a      	mov	r2, r3
 8014b36:	460b      	mov	r3, r1
 8014b38:	71fb      	strb	r3, [r7, #7]
 8014b3a:	4613      	mov	r3, r2
 8014b3c:	80bb      	strh	r3, [r7, #4]
 8014b3e:	68fb      	ldr	r3, [r7, #12]
 8014b40:	617b      	str	r3, [r7, #20]
 8014b42:	68bb      	ldr	r3, [r7, #8]
 8014b44:	61fb      	str	r3, [r7, #28]
 8014b46:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8014b4a:	2b00      	cmp	r3, #0
 8014b4c:	d123      	bne.n	8014b96 <USB_WritePacket+0x6e>
 8014b4e:	88bb      	ldrh	r3, [r7, #4]
 8014b50:	3303      	adds	r3, #3
 8014b52:	089b      	lsrs	r3, r3, #2
 8014b54:	613b      	str	r3, [r7, #16]
 8014b56:	2300      	movs	r3, #0
 8014b58:	61bb      	str	r3, [r7, #24]
 8014b5a:	e018      	b.n	8014b8e <USB_WritePacket+0x66>
 8014b5c:	79fb      	ldrb	r3, [r7, #7]
 8014b5e:	031a      	lsls	r2, r3, #12
 8014b60:	697b      	ldr	r3, [r7, #20]
 8014b62:	4413      	add	r3, r2
 8014b64:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014b68:	461a      	mov	r2, r3
 8014b6a:	69fb      	ldr	r3, [r7, #28]
 8014b6c:	681b      	ldr	r3, [r3, #0]
 8014b6e:	6013      	str	r3, [r2, #0]
 8014b70:	69fb      	ldr	r3, [r7, #28]
 8014b72:	3301      	adds	r3, #1
 8014b74:	61fb      	str	r3, [r7, #28]
 8014b76:	69fb      	ldr	r3, [r7, #28]
 8014b78:	3301      	adds	r3, #1
 8014b7a:	61fb      	str	r3, [r7, #28]
 8014b7c:	69fb      	ldr	r3, [r7, #28]
 8014b7e:	3301      	adds	r3, #1
 8014b80:	61fb      	str	r3, [r7, #28]
 8014b82:	69fb      	ldr	r3, [r7, #28]
 8014b84:	3301      	adds	r3, #1
 8014b86:	61fb      	str	r3, [r7, #28]
 8014b88:	69bb      	ldr	r3, [r7, #24]
 8014b8a:	3301      	adds	r3, #1
 8014b8c:	61bb      	str	r3, [r7, #24]
 8014b8e:	69ba      	ldr	r2, [r7, #24]
 8014b90:	693b      	ldr	r3, [r7, #16]
 8014b92:	429a      	cmp	r2, r3
 8014b94:	d3e2      	bcc.n	8014b5c <USB_WritePacket+0x34>
 8014b96:	2300      	movs	r3, #0
 8014b98:	4618      	mov	r0, r3
 8014b9a:	3724      	adds	r7, #36	@ 0x24
 8014b9c:	46bd      	mov	sp, r7
 8014b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ba2:	4770      	bx	lr

08014ba4 <USB_ReadPacket>:
 8014ba4:	b480      	push	{r7}
 8014ba6:	b08b      	sub	sp, #44	@ 0x2c
 8014ba8:	af00      	add	r7, sp, #0
 8014baa:	60f8      	str	r0, [r7, #12]
 8014bac:	60b9      	str	r1, [r7, #8]
 8014bae:	4613      	mov	r3, r2
 8014bb0:	80fb      	strh	r3, [r7, #6]
 8014bb2:	68fb      	ldr	r3, [r7, #12]
 8014bb4:	61bb      	str	r3, [r7, #24]
 8014bb6:	68bb      	ldr	r3, [r7, #8]
 8014bb8:	627b      	str	r3, [r7, #36]	@ 0x24
 8014bba:	88fb      	ldrh	r3, [r7, #6]
 8014bbc:	089b      	lsrs	r3, r3, #2
 8014bbe:	b29b      	uxth	r3, r3
 8014bc0:	617b      	str	r3, [r7, #20]
 8014bc2:	88fb      	ldrh	r3, [r7, #6]
 8014bc4:	f003 0303 	and.w	r3, r3, #3
 8014bc8:	83fb      	strh	r3, [r7, #30]
 8014bca:	2300      	movs	r3, #0
 8014bcc:	623b      	str	r3, [r7, #32]
 8014bce:	e014      	b.n	8014bfa <USB_ReadPacket+0x56>
 8014bd0:	69bb      	ldr	r3, [r7, #24]
 8014bd2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014bd6:	681a      	ldr	r2, [r3, #0]
 8014bd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014bda:	601a      	str	r2, [r3, #0]
 8014bdc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014bde:	3301      	adds	r3, #1
 8014be0:	627b      	str	r3, [r7, #36]	@ 0x24
 8014be2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014be4:	3301      	adds	r3, #1
 8014be6:	627b      	str	r3, [r7, #36]	@ 0x24
 8014be8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014bea:	3301      	adds	r3, #1
 8014bec:	627b      	str	r3, [r7, #36]	@ 0x24
 8014bee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014bf0:	3301      	adds	r3, #1
 8014bf2:	627b      	str	r3, [r7, #36]	@ 0x24
 8014bf4:	6a3b      	ldr	r3, [r7, #32]
 8014bf6:	3301      	adds	r3, #1
 8014bf8:	623b      	str	r3, [r7, #32]
 8014bfa:	6a3a      	ldr	r2, [r7, #32]
 8014bfc:	697b      	ldr	r3, [r7, #20]
 8014bfe:	429a      	cmp	r2, r3
 8014c00:	d3e6      	bcc.n	8014bd0 <USB_ReadPacket+0x2c>
 8014c02:	8bfb      	ldrh	r3, [r7, #30]
 8014c04:	2b00      	cmp	r3, #0
 8014c06:	d01e      	beq.n	8014c46 <USB_ReadPacket+0xa2>
 8014c08:	2300      	movs	r3, #0
 8014c0a:	623b      	str	r3, [r7, #32]
 8014c0c:	69bb      	ldr	r3, [r7, #24]
 8014c0e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014c12:	461a      	mov	r2, r3
 8014c14:	f107 0310 	add.w	r3, r7, #16
 8014c18:	6812      	ldr	r2, [r2, #0]
 8014c1a:	601a      	str	r2, [r3, #0]
 8014c1c:	693a      	ldr	r2, [r7, #16]
 8014c1e:	6a3b      	ldr	r3, [r7, #32]
 8014c20:	b2db      	uxtb	r3, r3
 8014c22:	00db      	lsls	r3, r3, #3
 8014c24:	fa22 f303 	lsr.w	r3, r2, r3
 8014c28:	b2da      	uxtb	r2, r3
 8014c2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014c2c:	701a      	strb	r2, [r3, #0]
 8014c2e:	6a3b      	ldr	r3, [r7, #32]
 8014c30:	3301      	adds	r3, #1
 8014c32:	623b      	str	r3, [r7, #32]
 8014c34:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014c36:	3301      	adds	r3, #1
 8014c38:	627b      	str	r3, [r7, #36]	@ 0x24
 8014c3a:	8bfb      	ldrh	r3, [r7, #30]
 8014c3c:	3b01      	subs	r3, #1
 8014c3e:	83fb      	strh	r3, [r7, #30]
 8014c40:	8bfb      	ldrh	r3, [r7, #30]
 8014c42:	2b00      	cmp	r3, #0
 8014c44:	d1ea      	bne.n	8014c1c <USB_ReadPacket+0x78>
 8014c46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014c48:	4618      	mov	r0, r3
 8014c4a:	372c      	adds	r7, #44	@ 0x2c
 8014c4c:	46bd      	mov	sp, r7
 8014c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c52:	4770      	bx	lr

08014c54 <USB_EPSetStall>:
 8014c54:	b480      	push	{r7}
 8014c56:	b085      	sub	sp, #20
 8014c58:	af00      	add	r7, sp, #0
 8014c5a:	6078      	str	r0, [r7, #4]
 8014c5c:	6039      	str	r1, [r7, #0]
 8014c5e:	687b      	ldr	r3, [r7, #4]
 8014c60:	60fb      	str	r3, [r7, #12]
 8014c62:	683b      	ldr	r3, [r7, #0]
 8014c64:	781b      	ldrb	r3, [r3, #0]
 8014c66:	60bb      	str	r3, [r7, #8]
 8014c68:	683b      	ldr	r3, [r7, #0]
 8014c6a:	785b      	ldrb	r3, [r3, #1]
 8014c6c:	2b01      	cmp	r3, #1
 8014c6e:	d12c      	bne.n	8014cca <USB_EPSetStall+0x76>
 8014c70:	68bb      	ldr	r3, [r7, #8]
 8014c72:	015a      	lsls	r2, r3, #5
 8014c74:	68fb      	ldr	r3, [r7, #12]
 8014c76:	4413      	add	r3, r2
 8014c78:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014c7c:	681b      	ldr	r3, [r3, #0]
 8014c7e:	2b00      	cmp	r3, #0
 8014c80:	db12      	blt.n	8014ca8 <USB_EPSetStall+0x54>
 8014c82:	68bb      	ldr	r3, [r7, #8]
 8014c84:	2b00      	cmp	r3, #0
 8014c86:	d00f      	beq.n	8014ca8 <USB_EPSetStall+0x54>
 8014c88:	68bb      	ldr	r3, [r7, #8]
 8014c8a:	015a      	lsls	r2, r3, #5
 8014c8c:	68fb      	ldr	r3, [r7, #12]
 8014c8e:	4413      	add	r3, r2
 8014c90:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014c94:	681b      	ldr	r3, [r3, #0]
 8014c96:	68ba      	ldr	r2, [r7, #8]
 8014c98:	0151      	lsls	r1, r2, #5
 8014c9a:	68fa      	ldr	r2, [r7, #12]
 8014c9c:	440a      	add	r2, r1
 8014c9e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014ca2:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8014ca6:	6013      	str	r3, [r2, #0]
 8014ca8:	68bb      	ldr	r3, [r7, #8]
 8014caa:	015a      	lsls	r2, r3, #5
 8014cac:	68fb      	ldr	r3, [r7, #12]
 8014cae:	4413      	add	r3, r2
 8014cb0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014cb4:	681b      	ldr	r3, [r3, #0]
 8014cb6:	68ba      	ldr	r2, [r7, #8]
 8014cb8:	0151      	lsls	r1, r2, #5
 8014cba:	68fa      	ldr	r2, [r7, #12]
 8014cbc:	440a      	add	r2, r1
 8014cbe:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014cc2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8014cc6:	6013      	str	r3, [r2, #0]
 8014cc8:	e02b      	b.n	8014d22 <USB_EPSetStall+0xce>
 8014cca:	68bb      	ldr	r3, [r7, #8]
 8014ccc:	015a      	lsls	r2, r3, #5
 8014cce:	68fb      	ldr	r3, [r7, #12]
 8014cd0:	4413      	add	r3, r2
 8014cd2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014cd6:	681b      	ldr	r3, [r3, #0]
 8014cd8:	2b00      	cmp	r3, #0
 8014cda:	db12      	blt.n	8014d02 <USB_EPSetStall+0xae>
 8014cdc:	68bb      	ldr	r3, [r7, #8]
 8014cde:	2b00      	cmp	r3, #0
 8014ce0:	d00f      	beq.n	8014d02 <USB_EPSetStall+0xae>
 8014ce2:	68bb      	ldr	r3, [r7, #8]
 8014ce4:	015a      	lsls	r2, r3, #5
 8014ce6:	68fb      	ldr	r3, [r7, #12]
 8014ce8:	4413      	add	r3, r2
 8014cea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014cee:	681b      	ldr	r3, [r3, #0]
 8014cf0:	68ba      	ldr	r2, [r7, #8]
 8014cf2:	0151      	lsls	r1, r2, #5
 8014cf4:	68fa      	ldr	r2, [r7, #12]
 8014cf6:	440a      	add	r2, r1
 8014cf8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014cfc:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8014d00:	6013      	str	r3, [r2, #0]
 8014d02:	68bb      	ldr	r3, [r7, #8]
 8014d04:	015a      	lsls	r2, r3, #5
 8014d06:	68fb      	ldr	r3, [r7, #12]
 8014d08:	4413      	add	r3, r2
 8014d0a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014d0e:	681b      	ldr	r3, [r3, #0]
 8014d10:	68ba      	ldr	r2, [r7, #8]
 8014d12:	0151      	lsls	r1, r2, #5
 8014d14:	68fa      	ldr	r2, [r7, #12]
 8014d16:	440a      	add	r2, r1
 8014d18:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014d1c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8014d20:	6013      	str	r3, [r2, #0]
 8014d22:	2300      	movs	r3, #0
 8014d24:	4618      	mov	r0, r3
 8014d26:	3714      	adds	r7, #20
 8014d28:	46bd      	mov	sp, r7
 8014d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d2e:	4770      	bx	lr

08014d30 <USB_EPClearStall>:
 8014d30:	b480      	push	{r7}
 8014d32:	b085      	sub	sp, #20
 8014d34:	af00      	add	r7, sp, #0
 8014d36:	6078      	str	r0, [r7, #4]
 8014d38:	6039      	str	r1, [r7, #0]
 8014d3a:	687b      	ldr	r3, [r7, #4]
 8014d3c:	60fb      	str	r3, [r7, #12]
 8014d3e:	683b      	ldr	r3, [r7, #0]
 8014d40:	781b      	ldrb	r3, [r3, #0]
 8014d42:	60bb      	str	r3, [r7, #8]
 8014d44:	683b      	ldr	r3, [r7, #0]
 8014d46:	785b      	ldrb	r3, [r3, #1]
 8014d48:	2b01      	cmp	r3, #1
 8014d4a:	d128      	bne.n	8014d9e <USB_EPClearStall+0x6e>
 8014d4c:	68bb      	ldr	r3, [r7, #8]
 8014d4e:	015a      	lsls	r2, r3, #5
 8014d50:	68fb      	ldr	r3, [r7, #12]
 8014d52:	4413      	add	r3, r2
 8014d54:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014d58:	681b      	ldr	r3, [r3, #0]
 8014d5a:	68ba      	ldr	r2, [r7, #8]
 8014d5c:	0151      	lsls	r1, r2, #5
 8014d5e:	68fa      	ldr	r2, [r7, #12]
 8014d60:	440a      	add	r2, r1
 8014d62:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014d66:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8014d6a:	6013      	str	r3, [r2, #0]
 8014d6c:	683b      	ldr	r3, [r7, #0]
 8014d6e:	791b      	ldrb	r3, [r3, #4]
 8014d70:	2b03      	cmp	r3, #3
 8014d72:	d003      	beq.n	8014d7c <USB_EPClearStall+0x4c>
 8014d74:	683b      	ldr	r3, [r7, #0]
 8014d76:	791b      	ldrb	r3, [r3, #4]
 8014d78:	2b02      	cmp	r3, #2
 8014d7a:	d138      	bne.n	8014dee <USB_EPClearStall+0xbe>
 8014d7c:	68bb      	ldr	r3, [r7, #8]
 8014d7e:	015a      	lsls	r2, r3, #5
 8014d80:	68fb      	ldr	r3, [r7, #12]
 8014d82:	4413      	add	r3, r2
 8014d84:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014d88:	681b      	ldr	r3, [r3, #0]
 8014d8a:	68ba      	ldr	r2, [r7, #8]
 8014d8c:	0151      	lsls	r1, r2, #5
 8014d8e:	68fa      	ldr	r2, [r7, #12]
 8014d90:	440a      	add	r2, r1
 8014d92:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014d96:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014d9a:	6013      	str	r3, [r2, #0]
 8014d9c:	e027      	b.n	8014dee <USB_EPClearStall+0xbe>
 8014d9e:	68bb      	ldr	r3, [r7, #8]
 8014da0:	015a      	lsls	r2, r3, #5
 8014da2:	68fb      	ldr	r3, [r7, #12]
 8014da4:	4413      	add	r3, r2
 8014da6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014daa:	681b      	ldr	r3, [r3, #0]
 8014dac:	68ba      	ldr	r2, [r7, #8]
 8014dae:	0151      	lsls	r1, r2, #5
 8014db0:	68fa      	ldr	r2, [r7, #12]
 8014db2:	440a      	add	r2, r1
 8014db4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014db8:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8014dbc:	6013      	str	r3, [r2, #0]
 8014dbe:	683b      	ldr	r3, [r7, #0]
 8014dc0:	791b      	ldrb	r3, [r3, #4]
 8014dc2:	2b03      	cmp	r3, #3
 8014dc4:	d003      	beq.n	8014dce <USB_EPClearStall+0x9e>
 8014dc6:	683b      	ldr	r3, [r7, #0]
 8014dc8:	791b      	ldrb	r3, [r3, #4]
 8014dca:	2b02      	cmp	r3, #2
 8014dcc:	d10f      	bne.n	8014dee <USB_EPClearStall+0xbe>
 8014dce:	68bb      	ldr	r3, [r7, #8]
 8014dd0:	015a      	lsls	r2, r3, #5
 8014dd2:	68fb      	ldr	r3, [r7, #12]
 8014dd4:	4413      	add	r3, r2
 8014dd6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014dda:	681b      	ldr	r3, [r3, #0]
 8014ddc:	68ba      	ldr	r2, [r7, #8]
 8014dde:	0151      	lsls	r1, r2, #5
 8014de0:	68fa      	ldr	r2, [r7, #12]
 8014de2:	440a      	add	r2, r1
 8014de4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014de8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014dec:	6013      	str	r3, [r2, #0]
 8014dee:	2300      	movs	r3, #0
 8014df0:	4618      	mov	r0, r3
 8014df2:	3714      	adds	r7, #20
 8014df4:	46bd      	mov	sp, r7
 8014df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014dfa:	4770      	bx	lr

08014dfc <USB_SetDevAddress>:
 8014dfc:	b480      	push	{r7}
 8014dfe:	b085      	sub	sp, #20
 8014e00:	af00      	add	r7, sp, #0
 8014e02:	6078      	str	r0, [r7, #4]
 8014e04:	460b      	mov	r3, r1
 8014e06:	70fb      	strb	r3, [r7, #3]
 8014e08:	687b      	ldr	r3, [r7, #4]
 8014e0a:	60fb      	str	r3, [r7, #12]
 8014e0c:	68fb      	ldr	r3, [r7, #12]
 8014e0e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e12:	681b      	ldr	r3, [r3, #0]
 8014e14:	68fa      	ldr	r2, [r7, #12]
 8014e16:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014e1a:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8014e1e:	6013      	str	r3, [r2, #0]
 8014e20:	68fb      	ldr	r3, [r7, #12]
 8014e22:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e26:	681a      	ldr	r2, [r3, #0]
 8014e28:	78fb      	ldrb	r3, [r7, #3]
 8014e2a:	011b      	lsls	r3, r3, #4
 8014e2c:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 8014e30:	68f9      	ldr	r1, [r7, #12]
 8014e32:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014e36:	4313      	orrs	r3, r2
 8014e38:	600b      	str	r3, [r1, #0]
 8014e3a:	2300      	movs	r3, #0
 8014e3c:	4618      	mov	r0, r3
 8014e3e:	3714      	adds	r7, #20
 8014e40:	46bd      	mov	sp, r7
 8014e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e46:	4770      	bx	lr

08014e48 <USB_DevConnect>:
 8014e48:	b480      	push	{r7}
 8014e4a:	b085      	sub	sp, #20
 8014e4c:	af00      	add	r7, sp, #0
 8014e4e:	6078      	str	r0, [r7, #4]
 8014e50:	687b      	ldr	r3, [r7, #4]
 8014e52:	60fb      	str	r3, [r7, #12]
 8014e54:	68fb      	ldr	r3, [r7, #12]
 8014e56:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8014e5a:	681b      	ldr	r3, [r3, #0]
 8014e5c:	68fa      	ldr	r2, [r7, #12]
 8014e5e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8014e62:	f023 0303 	bic.w	r3, r3, #3
 8014e66:	6013      	str	r3, [r2, #0]
 8014e68:	68fb      	ldr	r3, [r7, #12]
 8014e6a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e6e:	685b      	ldr	r3, [r3, #4]
 8014e70:	68fa      	ldr	r2, [r7, #12]
 8014e72:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014e76:	f023 0302 	bic.w	r3, r3, #2
 8014e7a:	6053      	str	r3, [r2, #4]
 8014e7c:	2300      	movs	r3, #0
 8014e7e:	4618      	mov	r0, r3
 8014e80:	3714      	adds	r7, #20
 8014e82:	46bd      	mov	sp, r7
 8014e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e88:	4770      	bx	lr

08014e8a <USB_DevDisconnect>:
 8014e8a:	b480      	push	{r7}
 8014e8c:	b085      	sub	sp, #20
 8014e8e:	af00      	add	r7, sp, #0
 8014e90:	6078      	str	r0, [r7, #4]
 8014e92:	687b      	ldr	r3, [r7, #4]
 8014e94:	60fb      	str	r3, [r7, #12]
 8014e96:	68fb      	ldr	r3, [r7, #12]
 8014e98:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8014e9c:	681b      	ldr	r3, [r3, #0]
 8014e9e:	68fa      	ldr	r2, [r7, #12]
 8014ea0:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8014ea4:	f023 0303 	bic.w	r3, r3, #3
 8014ea8:	6013      	str	r3, [r2, #0]
 8014eaa:	68fb      	ldr	r3, [r7, #12]
 8014eac:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014eb0:	685b      	ldr	r3, [r3, #4]
 8014eb2:	68fa      	ldr	r2, [r7, #12]
 8014eb4:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014eb8:	f043 0302 	orr.w	r3, r3, #2
 8014ebc:	6053      	str	r3, [r2, #4]
 8014ebe:	2300      	movs	r3, #0
 8014ec0:	4618      	mov	r0, r3
 8014ec2:	3714      	adds	r7, #20
 8014ec4:	46bd      	mov	sp, r7
 8014ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014eca:	4770      	bx	lr

08014ecc <USB_ReadInterrupts>:
 8014ecc:	b480      	push	{r7}
 8014ece:	b085      	sub	sp, #20
 8014ed0:	af00      	add	r7, sp, #0
 8014ed2:	6078      	str	r0, [r7, #4]
 8014ed4:	687b      	ldr	r3, [r7, #4]
 8014ed6:	695b      	ldr	r3, [r3, #20]
 8014ed8:	60fb      	str	r3, [r7, #12]
 8014eda:	687b      	ldr	r3, [r7, #4]
 8014edc:	699b      	ldr	r3, [r3, #24]
 8014ede:	68fa      	ldr	r2, [r7, #12]
 8014ee0:	4013      	ands	r3, r2
 8014ee2:	60fb      	str	r3, [r7, #12]
 8014ee4:	68fb      	ldr	r3, [r7, #12]
 8014ee6:	4618      	mov	r0, r3
 8014ee8:	3714      	adds	r7, #20
 8014eea:	46bd      	mov	sp, r7
 8014eec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ef0:	4770      	bx	lr

08014ef2 <USB_ReadDevAllOutEpInterrupt>:
 8014ef2:	b480      	push	{r7}
 8014ef4:	b085      	sub	sp, #20
 8014ef6:	af00      	add	r7, sp, #0
 8014ef8:	6078      	str	r0, [r7, #4]
 8014efa:	687b      	ldr	r3, [r7, #4]
 8014efc:	60fb      	str	r3, [r7, #12]
 8014efe:	68fb      	ldr	r3, [r7, #12]
 8014f00:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014f04:	699b      	ldr	r3, [r3, #24]
 8014f06:	60bb      	str	r3, [r7, #8]
 8014f08:	68fb      	ldr	r3, [r7, #12]
 8014f0a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014f0e:	69db      	ldr	r3, [r3, #28]
 8014f10:	68ba      	ldr	r2, [r7, #8]
 8014f12:	4013      	ands	r3, r2
 8014f14:	60bb      	str	r3, [r7, #8]
 8014f16:	68bb      	ldr	r3, [r7, #8]
 8014f18:	0c1b      	lsrs	r3, r3, #16
 8014f1a:	4618      	mov	r0, r3
 8014f1c:	3714      	adds	r7, #20
 8014f1e:	46bd      	mov	sp, r7
 8014f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f24:	4770      	bx	lr

08014f26 <USB_ReadDevAllInEpInterrupt>:
 8014f26:	b480      	push	{r7}
 8014f28:	b085      	sub	sp, #20
 8014f2a:	af00      	add	r7, sp, #0
 8014f2c:	6078      	str	r0, [r7, #4]
 8014f2e:	687b      	ldr	r3, [r7, #4]
 8014f30:	60fb      	str	r3, [r7, #12]
 8014f32:	68fb      	ldr	r3, [r7, #12]
 8014f34:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014f38:	699b      	ldr	r3, [r3, #24]
 8014f3a:	60bb      	str	r3, [r7, #8]
 8014f3c:	68fb      	ldr	r3, [r7, #12]
 8014f3e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014f42:	69db      	ldr	r3, [r3, #28]
 8014f44:	68ba      	ldr	r2, [r7, #8]
 8014f46:	4013      	ands	r3, r2
 8014f48:	60bb      	str	r3, [r7, #8]
 8014f4a:	68bb      	ldr	r3, [r7, #8]
 8014f4c:	b29b      	uxth	r3, r3
 8014f4e:	4618      	mov	r0, r3
 8014f50:	3714      	adds	r7, #20
 8014f52:	46bd      	mov	sp, r7
 8014f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f58:	4770      	bx	lr

08014f5a <USB_ReadDevOutEPInterrupt>:
 8014f5a:	b480      	push	{r7}
 8014f5c:	b085      	sub	sp, #20
 8014f5e:	af00      	add	r7, sp, #0
 8014f60:	6078      	str	r0, [r7, #4]
 8014f62:	460b      	mov	r3, r1
 8014f64:	70fb      	strb	r3, [r7, #3]
 8014f66:	687b      	ldr	r3, [r7, #4]
 8014f68:	60fb      	str	r3, [r7, #12]
 8014f6a:	78fb      	ldrb	r3, [r7, #3]
 8014f6c:	015a      	lsls	r2, r3, #5
 8014f6e:	68fb      	ldr	r3, [r7, #12]
 8014f70:	4413      	add	r3, r2
 8014f72:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f76:	689b      	ldr	r3, [r3, #8]
 8014f78:	60bb      	str	r3, [r7, #8]
 8014f7a:	68fb      	ldr	r3, [r7, #12]
 8014f7c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014f80:	695b      	ldr	r3, [r3, #20]
 8014f82:	68ba      	ldr	r2, [r7, #8]
 8014f84:	4013      	ands	r3, r2
 8014f86:	60bb      	str	r3, [r7, #8]
 8014f88:	68bb      	ldr	r3, [r7, #8]
 8014f8a:	4618      	mov	r0, r3
 8014f8c:	3714      	adds	r7, #20
 8014f8e:	46bd      	mov	sp, r7
 8014f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f94:	4770      	bx	lr

08014f96 <USB_ReadDevInEPInterrupt>:
 8014f96:	b480      	push	{r7}
 8014f98:	b087      	sub	sp, #28
 8014f9a:	af00      	add	r7, sp, #0
 8014f9c:	6078      	str	r0, [r7, #4]
 8014f9e:	460b      	mov	r3, r1
 8014fa0:	70fb      	strb	r3, [r7, #3]
 8014fa2:	687b      	ldr	r3, [r7, #4]
 8014fa4:	617b      	str	r3, [r7, #20]
 8014fa6:	697b      	ldr	r3, [r7, #20]
 8014fa8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014fac:	691b      	ldr	r3, [r3, #16]
 8014fae:	613b      	str	r3, [r7, #16]
 8014fb0:	697b      	ldr	r3, [r7, #20]
 8014fb2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014fb6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014fb8:	60fb      	str	r3, [r7, #12]
 8014fba:	78fb      	ldrb	r3, [r7, #3]
 8014fbc:	f003 030f 	and.w	r3, r3, #15
 8014fc0:	68fa      	ldr	r2, [r7, #12]
 8014fc2:	fa22 f303 	lsr.w	r3, r2, r3
 8014fc6:	01db      	lsls	r3, r3, #7
 8014fc8:	b2db      	uxtb	r3, r3
 8014fca:	693a      	ldr	r2, [r7, #16]
 8014fcc:	4313      	orrs	r3, r2
 8014fce:	613b      	str	r3, [r7, #16]
 8014fd0:	78fb      	ldrb	r3, [r7, #3]
 8014fd2:	015a      	lsls	r2, r3, #5
 8014fd4:	697b      	ldr	r3, [r7, #20]
 8014fd6:	4413      	add	r3, r2
 8014fd8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014fdc:	689b      	ldr	r3, [r3, #8]
 8014fde:	693a      	ldr	r2, [r7, #16]
 8014fe0:	4013      	ands	r3, r2
 8014fe2:	60bb      	str	r3, [r7, #8]
 8014fe4:	68bb      	ldr	r3, [r7, #8]
 8014fe6:	4618      	mov	r0, r3
 8014fe8:	371c      	adds	r7, #28
 8014fea:	46bd      	mov	sp, r7
 8014fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014ff0:	4770      	bx	lr

08014ff2 <USB_GetMode>:
 8014ff2:	b480      	push	{r7}
 8014ff4:	b083      	sub	sp, #12
 8014ff6:	af00      	add	r7, sp, #0
 8014ff8:	6078      	str	r0, [r7, #4]
 8014ffa:	687b      	ldr	r3, [r7, #4]
 8014ffc:	695b      	ldr	r3, [r3, #20]
 8014ffe:	f003 0301 	and.w	r3, r3, #1
 8015002:	4618      	mov	r0, r3
 8015004:	370c      	adds	r7, #12
 8015006:	46bd      	mov	sp, r7
 8015008:	f85d 7b04 	ldr.w	r7, [sp], #4
 801500c:	4770      	bx	lr

0801500e <USB_ActivateSetup>:
 801500e:	b480      	push	{r7}
 8015010:	b085      	sub	sp, #20
 8015012:	af00      	add	r7, sp, #0
 8015014:	6078      	str	r0, [r7, #4]
 8015016:	687b      	ldr	r3, [r7, #4]
 8015018:	60fb      	str	r3, [r7, #12]
 801501a:	68fb      	ldr	r3, [r7, #12]
 801501c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8015020:	681b      	ldr	r3, [r3, #0]
 8015022:	68fa      	ldr	r2, [r7, #12]
 8015024:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8015028:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801502c:	f023 0307 	bic.w	r3, r3, #7
 8015030:	6013      	str	r3, [r2, #0]
 8015032:	68fb      	ldr	r3, [r7, #12]
 8015034:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8015038:	685b      	ldr	r3, [r3, #4]
 801503a:	68fa      	ldr	r2, [r7, #12]
 801503c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8015040:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8015044:	6053      	str	r3, [r2, #4]
 8015046:	2300      	movs	r3, #0
 8015048:	4618      	mov	r0, r3
 801504a:	3714      	adds	r7, #20
 801504c:	46bd      	mov	sp, r7
 801504e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015052:	4770      	bx	lr

08015054 <USB_EP0_OutStart>:
 8015054:	b480      	push	{r7}
 8015056:	b087      	sub	sp, #28
 8015058:	af00      	add	r7, sp, #0
 801505a:	60f8      	str	r0, [r7, #12]
 801505c:	460b      	mov	r3, r1
 801505e:	607a      	str	r2, [r7, #4]
 8015060:	72fb      	strb	r3, [r7, #11]
 8015062:	68fb      	ldr	r3, [r7, #12]
 8015064:	617b      	str	r3, [r7, #20]
 8015066:	68fb      	ldr	r3, [r7, #12]
 8015068:	333c      	adds	r3, #60	@ 0x3c
 801506a:	3304      	adds	r3, #4
 801506c:	681b      	ldr	r3, [r3, #0]
 801506e:	613b      	str	r3, [r7, #16]
 8015070:	693b      	ldr	r3, [r7, #16]
 8015072:	4a26      	ldr	r2, [pc, #152]	@ (801510c <USB_EP0_OutStart+0xb8>)
 8015074:	4293      	cmp	r3, r2
 8015076:	d90a      	bls.n	801508e <USB_EP0_OutStart+0x3a>
 8015078:	697b      	ldr	r3, [r7, #20]
 801507a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801507e:	681b      	ldr	r3, [r3, #0]
 8015080:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8015084:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8015088:	d101      	bne.n	801508e <USB_EP0_OutStart+0x3a>
 801508a:	2300      	movs	r3, #0
 801508c:	e037      	b.n	80150fe <USB_EP0_OutStart+0xaa>
 801508e:	697b      	ldr	r3, [r7, #20]
 8015090:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8015094:	461a      	mov	r2, r3
 8015096:	2300      	movs	r3, #0
 8015098:	6113      	str	r3, [r2, #16]
 801509a:	697b      	ldr	r3, [r7, #20]
 801509c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80150a0:	691b      	ldr	r3, [r3, #16]
 80150a2:	697a      	ldr	r2, [r7, #20]
 80150a4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80150a8:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80150ac:	6113      	str	r3, [r2, #16]
 80150ae:	697b      	ldr	r3, [r7, #20]
 80150b0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80150b4:	691b      	ldr	r3, [r3, #16]
 80150b6:	697a      	ldr	r2, [r7, #20]
 80150b8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80150bc:	f043 0318 	orr.w	r3, r3, #24
 80150c0:	6113      	str	r3, [r2, #16]
 80150c2:	697b      	ldr	r3, [r7, #20]
 80150c4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80150c8:	691b      	ldr	r3, [r3, #16]
 80150ca:	697a      	ldr	r2, [r7, #20]
 80150cc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80150d0:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 80150d4:	6113      	str	r3, [r2, #16]
 80150d6:	7afb      	ldrb	r3, [r7, #11]
 80150d8:	2b01      	cmp	r3, #1
 80150da:	d10f      	bne.n	80150fc <USB_EP0_OutStart+0xa8>
 80150dc:	697b      	ldr	r3, [r7, #20]
 80150de:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80150e2:	461a      	mov	r2, r3
 80150e4:	687b      	ldr	r3, [r7, #4]
 80150e6:	6153      	str	r3, [r2, #20]
 80150e8:	697b      	ldr	r3, [r7, #20]
 80150ea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80150ee:	681b      	ldr	r3, [r3, #0]
 80150f0:	697a      	ldr	r2, [r7, #20]
 80150f2:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80150f6:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 80150fa:	6013      	str	r3, [r2, #0]
 80150fc:	2300      	movs	r3, #0
 80150fe:	4618      	mov	r0, r3
 8015100:	371c      	adds	r7, #28
 8015102:	46bd      	mov	sp, r7
 8015104:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015108:	4770      	bx	lr
 801510a:	bf00      	nop
 801510c:	4f54300a 	.word	0x4f54300a

08015110 <USB_CoreReset>:
 8015110:	b480      	push	{r7}
 8015112:	b085      	sub	sp, #20
 8015114:	af00      	add	r7, sp, #0
 8015116:	6078      	str	r0, [r7, #4]
 8015118:	2300      	movs	r3, #0
 801511a:	60fb      	str	r3, [r7, #12]
 801511c:	68fb      	ldr	r3, [r7, #12]
 801511e:	3301      	adds	r3, #1
 8015120:	60fb      	str	r3, [r7, #12]
 8015122:	68fb      	ldr	r3, [r7, #12]
 8015124:	4a13      	ldr	r2, [pc, #76]	@ (8015174 <USB_CoreReset+0x64>)
 8015126:	4293      	cmp	r3, r2
 8015128:	d901      	bls.n	801512e <USB_CoreReset+0x1e>
 801512a:	2303      	movs	r3, #3
 801512c:	e01b      	b.n	8015166 <USB_CoreReset+0x56>
 801512e:	687b      	ldr	r3, [r7, #4]
 8015130:	691b      	ldr	r3, [r3, #16]
 8015132:	2b00      	cmp	r3, #0
 8015134:	daf2      	bge.n	801511c <USB_CoreReset+0xc>
 8015136:	2300      	movs	r3, #0
 8015138:	60fb      	str	r3, [r7, #12]
 801513a:	687b      	ldr	r3, [r7, #4]
 801513c:	691b      	ldr	r3, [r3, #16]
 801513e:	f043 0201 	orr.w	r2, r3, #1
 8015142:	687b      	ldr	r3, [r7, #4]
 8015144:	611a      	str	r2, [r3, #16]
 8015146:	68fb      	ldr	r3, [r7, #12]
 8015148:	3301      	adds	r3, #1
 801514a:	60fb      	str	r3, [r7, #12]
 801514c:	68fb      	ldr	r3, [r7, #12]
 801514e:	4a09      	ldr	r2, [pc, #36]	@ (8015174 <USB_CoreReset+0x64>)
 8015150:	4293      	cmp	r3, r2
 8015152:	d901      	bls.n	8015158 <USB_CoreReset+0x48>
 8015154:	2303      	movs	r3, #3
 8015156:	e006      	b.n	8015166 <USB_CoreReset+0x56>
 8015158:	687b      	ldr	r3, [r7, #4]
 801515a:	691b      	ldr	r3, [r3, #16]
 801515c:	f003 0301 	and.w	r3, r3, #1
 8015160:	2b01      	cmp	r3, #1
 8015162:	d0f0      	beq.n	8015146 <USB_CoreReset+0x36>
 8015164:	2300      	movs	r3, #0
 8015166:	4618      	mov	r0, r3
 8015168:	3714      	adds	r7, #20
 801516a:	46bd      	mov	sp, r7
 801516c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015170:	4770      	bx	lr
 8015172:	bf00      	nop
 8015174:	00030d40 	.word	0x00030d40

08015178 <USBD_CDC_Init>:
 8015178:	b580      	push	{r7, lr}
 801517a:	b084      	sub	sp, #16
 801517c:	af00      	add	r7, sp, #0
 801517e:	6078      	str	r0, [r7, #4]
 8015180:	460b      	mov	r3, r1
 8015182:	70fb      	strb	r3, [r7, #3]
 8015184:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 8015188:	f005 fd6e 	bl	801ac68 <USBD_static_malloc>
 801518c:	60f8      	str	r0, [r7, #12]
 801518e:	68fb      	ldr	r3, [r7, #12]
 8015190:	2b00      	cmp	r3, #0
 8015192:	d109      	bne.n	80151a8 <USBD_CDC_Init+0x30>
 8015194:	687b      	ldr	r3, [r7, #4]
 8015196:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801519a:	687b      	ldr	r3, [r7, #4]
 801519c:	32b0      	adds	r2, #176	@ 0xb0
 801519e:	2100      	movs	r1, #0
 80151a0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80151a4:	2302      	movs	r3, #2
 80151a6:	e0d4      	b.n	8015352 <USBD_CDC_Init+0x1da>
 80151a8:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 80151ac:	2100      	movs	r1, #0
 80151ae:	68f8      	ldr	r0, [r7, #12]
 80151b0:	f005 fed7 	bl	801af62 <memset>
 80151b4:	687b      	ldr	r3, [r7, #4]
 80151b6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80151ba:	687b      	ldr	r3, [r7, #4]
 80151bc:	32b0      	adds	r2, #176	@ 0xb0
 80151be:	68f9      	ldr	r1, [r7, #12]
 80151c0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80151c4:	687b      	ldr	r3, [r7, #4]
 80151c6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80151ca:	687b      	ldr	r3, [r7, #4]
 80151cc:	32b0      	adds	r2, #176	@ 0xb0
 80151ce:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80151d2:	687b      	ldr	r3, [r7, #4]
 80151d4:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 80151d8:	687b      	ldr	r3, [r7, #4]
 80151da:	7c1b      	ldrb	r3, [r3, #16]
 80151dc:	2b00      	cmp	r3, #0
 80151de:	d138      	bne.n	8015252 <USBD_CDC_Init+0xda>
 80151e0:	4b5e      	ldr	r3, [pc, #376]	@ (801535c <USBD_CDC_Init+0x1e4>)
 80151e2:	7819      	ldrb	r1, [r3, #0]
 80151e4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80151e8:	2202      	movs	r2, #2
 80151ea:	6878      	ldr	r0, [r7, #4]
 80151ec:	f005 fc19 	bl	801aa22 <USBD_LL_OpenEP>
 80151f0:	4b5a      	ldr	r3, [pc, #360]	@ (801535c <USBD_CDC_Init+0x1e4>)
 80151f2:	781b      	ldrb	r3, [r3, #0]
 80151f4:	f003 020f 	and.w	r2, r3, #15
 80151f8:	6879      	ldr	r1, [r7, #4]
 80151fa:	4613      	mov	r3, r2
 80151fc:	009b      	lsls	r3, r3, #2
 80151fe:	4413      	add	r3, r2
 8015200:	009b      	lsls	r3, r3, #2
 8015202:	440b      	add	r3, r1
 8015204:	3324      	adds	r3, #36	@ 0x24
 8015206:	2201      	movs	r2, #1
 8015208:	801a      	strh	r2, [r3, #0]
 801520a:	4b55      	ldr	r3, [pc, #340]	@ (8015360 <USBD_CDC_Init+0x1e8>)
 801520c:	7819      	ldrb	r1, [r3, #0]
 801520e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015212:	2202      	movs	r2, #2
 8015214:	6878      	ldr	r0, [r7, #4]
 8015216:	f005 fc04 	bl	801aa22 <USBD_LL_OpenEP>
 801521a:	4b51      	ldr	r3, [pc, #324]	@ (8015360 <USBD_CDC_Init+0x1e8>)
 801521c:	781b      	ldrb	r3, [r3, #0]
 801521e:	f003 020f 	and.w	r2, r3, #15
 8015222:	6879      	ldr	r1, [r7, #4]
 8015224:	4613      	mov	r3, r2
 8015226:	009b      	lsls	r3, r3, #2
 8015228:	4413      	add	r3, r2
 801522a:	009b      	lsls	r3, r3, #2
 801522c:	440b      	add	r3, r1
 801522e:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8015232:	2201      	movs	r2, #1
 8015234:	801a      	strh	r2, [r3, #0]
 8015236:	4b4b      	ldr	r3, [pc, #300]	@ (8015364 <USBD_CDC_Init+0x1ec>)
 8015238:	781b      	ldrb	r3, [r3, #0]
 801523a:	f003 020f 	and.w	r2, r3, #15
 801523e:	6879      	ldr	r1, [r7, #4]
 8015240:	4613      	mov	r3, r2
 8015242:	009b      	lsls	r3, r3, #2
 8015244:	4413      	add	r3, r2
 8015246:	009b      	lsls	r3, r3, #2
 8015248:	440b      	add	r3, r1
 801524a:	3326      	adds	r3, #38	@ 0x26
 801524c:	2210      	movs	r2, #16
 801524e:	801a      	strh	r2, [r3, #0]
 8015250:	e035      	b.n	80152be <USBD_CDC_Init+0x146>
 8015252:	4b42      	ldr	r3, [pc, #264]	@ (801535c <USBD_CDC_Init+0x1e4>)
 8015254:	7819      	ldrb	r1, [r3, #0]
 8015256:	2340      	movs	r3, #64	@ 0x40
 8015258:	2202      	movs	r2, #2
 801525a:	6878      	ldr	r0, [r7, #4]
 801525c:	f005 fbe1 	bl	801aa22 <USBD_LL_OpenEP>
 8015260:	4b3e      	ldr	r3, [pc, #248]	@ (801535c <USBD_CDC_Init+0x1e4>)
 8015262:	781b      	ldrb	r3, [r3, #0]
 8015264:	f003 020f 	and.w	r2, r3, #15
 8015268:	6879      	ldr	r1, [r7, #4]
 801526a:	4613      	mov	r3, r2
 801526c:	009b      	lsls	r3, r3, #2
 801526e:	4413      	add	r3, r2
 8015270:	009b      	lsls	r3, r3, #2
 8015272:	440b      	add	r3, r1
 8015274:	3324      	adds	r3, #36	@ 0x24
 8015276:	2201      	movs	r2, #1
 8015278:	801a      	strh	r2, [r3, #0]
 801527a:	4b39      	ldr	r3, [pc, #228]	@ (8015360 <USBD_CDC_Init+0x1e8>)
 801527c:	7819      	ldrb	r1, [r3, #0]
 801527e:	2340      	movs	r3, #64	@ 0x40
 8015280:	2202      	movs	r2, #2
 8015282:	6878      	ldr	r0, [r7, #4]
 8015284:	f005 fbcd 	bl	801aa22 <USBD_LL_OpenEP>
 8015288:	4b35      	ldr	r3, [pc, #212]	@ (8015360 <USBD_CDC_Init+0x1e8>)
 801528a:	781b      	ldrb	r3, [r3, #0]
 801528c:	f003 020f 	and.w	r2, r3, #15
 8015290:	6879      	ldr	r1, [r7, #4]
 8015292:	4613      	mov	r3, r2
 8015294:	009b      	lsls	r3, r3, #2
 8015296:	4413      	add	r3, r2
 8015298:	009b      	lsls	r3, r3, #2
 801529a:	440b      	add	r3, r1
 801529c:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80152a0:	2201      	movs	r2, #1
 80152a2:	801a      	strh	r2, [r3, #0]
 80152a4:	4b2f      	ldr	r3, [pc, #188]	@ (8015364 <USBD_CDC_Init+0x1ec>)
 80152a6:	781b      	ldrb	r3, [r3, #0]
 80152a8:	f003 020f 	and.w	r2, r3, #15
 80152ac:	6879      	ldr	r1, [r7, #4]
 80152ae:	4613      	mov	r3, r2
 80152b0:	009b      	lsls	r3, r3, #2
 80152b2:	4413      	add	r3, r2
 80152b4:	009b      	lsls	r3, r3, #2
 80152b6:	440b      	add	r3, r1
 80152b8:	3326      	adds	r3, #38	@ 0x26
 80152ba:	2210      	movs	r2, #16
 80152bc:	801a      	strh	r2, [r3, #0]
 80152be:	4b29      	ldr	r3, [pc, #164]	@ (8015364 <USBD_CDC_Init+0x1ec>)
 80152c0:	7819      	ldrb	r1, [r3, #0]
 80152c2:	2308      	movs	r3, #8
 80152c4:	2203      	movs	r2, #3
 80152c6:	6878      	ldr	r0, [r7, #4]
 80152c8:	f005 fbab 	bl	801aa22 <USBD_LL_OpenEP>
 80152cc:	4b25      	ldr	r3, [pc, #148]	@ (8015364 <USBD_CDC_Init+0x1ec>)
 80152ce:	781b      	ldrb	r3, [r3, #0]
 80152d0:	f003 020f 	and.w	r2, r3, #15
 80152d4:	6879      	ldr	r1, [r7, #4]
 80152d6:	4613      	mov	r3, r2
 80152d8:	009b      	lsls	r3, r3, #2
 80152da:	4413      	add	r3, r2
 80152dc:	009b      	lsls	r3, r3, #2
 80152de:	440b      	add	r3, r1
 80152e0:	3324      	adds	r3, #36	@ 0x24
 80152e2:	2201      	movs	r2, #1
 80152e4:	801a      	strh	r2, [r3, #0]
 80152e6:	68fb      	ldr	r3, [r7, #12]
 80152e8:	2200      	movs	r2, #0
 80152ea:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 80152ee:	687b      	ldr	r3, [r7, #4]
 80152f0:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80152f4:	687a      	ldr	r2, [r7, #4]
 80152f6:	33b0      	adds	r3, #176	@ 0xb0
 80152f8:	009b      	lsls	r3, r3, #2
 80152fa:	4413      	add	r3, r2
 80152fc:	685b      	ldr	r3, [r3, #4]
 80152fe:	681b      	ldr	r3, [r3, #0]
 8015300:	4798      	blx	r3
 8015302:	68fb      	ldr	r3, [r7, #12]
 8015304:	2200      	movs	r2, #0
 8015306:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 801530a:	68fb      	ldr	r3, [r7, #12]
 801530c:	2200      	movs	r2, #0
 801530e:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 8015312:	68fb      	ldr	r3, [r7, #12]
 8015314:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 8015318:	2b00      	cmp	r3, #0
 801531a:	d101      	bne.n	8015320 <USBD_CDC_Init+0x1a8>
 801531c:	2302      	movs	r3, #2
 801531e:	e018      	b.n	8015352 <USBD_CDC_Init+0x1da>
 8015320:	687b      	ldr	r3, [r7, #4]
 8015322:	7c1b      	ldrb	r3, [r3, #16]
 8015324:	2b00      	cmp	r3, #0
 8015326:	d10a      	bne.n	801533e <USBD_CDC_Init+0x1c6>
 8015328:	4b0d      	ldr	r3, [pc, #52]	@ (8015360 <USBD_CDC_Init+0x1e8>)
 801532a:	7819      	ldrb	r1, [r3, #0]
 801532c:	68fb      	ldr	r3, [r7, #12]
 801532e:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015332:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015336:	6878      	ldr	r0, [r7, #4]
 8015338:	f005 fc62 	bl	801ac00 <USBD_LL_PrepareReceive>
 801533c:	e008      	b.n	8015350 <USBD_CDC_Init+0x1d8>
 801533e:	4b08      	ldr	r3, [pc, #32]	@ (8015360 <USBD_CDC_Init+0x1e8>)
 8015340:	7819      	ldrb	r1, [r3, #0]
 8015342:	68fb      	ldr	r3, [r7, #12]
 8015344:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015348:	2340      	movs	r3, #64	@ 0x40
 801534a:	6878      	ldr	r0, [r7, #4]
 801534c:	f005 fc58 	bl	801ac00 <USBD_LL_PrepareReceive>
 8015350:	2300      	movs	r3, #0
 8015352:	4618      	mov	r0, r3
 8015354:	3710      	adds	r7, #16
 8015356:	46bd      	mov	sp, r7
 8015358:	bd80      	pop	{r7, pc}
 801535a:	bf00      	nop
 801535c:	200000a7 	.word	0x200000a7
 8015360:	200000a8 	.word	0x200000a8
 8015364:	200000a9 	.word	0x200000a9

08015368 <USBD_CDC_DeInit>:
 8015368:	b580      	push	{r7, lr}
 801536a:	b082      	sub	sp, #8
 801536c:	af00      	add	r7, sp, #0
 801536e:	6078      	str	r0, [r7, #4]
 8015370:	460b      	mov	r3, r1
 8015372:	70fb      	strb	r3, [r7, #3]
 8015374:	4b3a      	ldr	r3, [pc, #232]	@ (8015460 <USBD_CDC_DeInit+0xf8>)
 8015376:	781b      	ldrb	r3, [r3, #0]
 8015378:	4619      	mov	r1, r3
 801537a:	6878      	ldr	r0, [r7, #4]
 801537c:	f005 fb77 	bl	801aa6e <USBD_LL_CloseEP>
 8015380:	4b37      	ldr	r3, [pc, #220]	@ (8015460 <USBD_CDC_DeInit+0xf8>)
 8015382:	781b      	ldrb	r3, [r3, #0]
 8015384:	f003 020f 	and.w	r2, r3, #15
 8015388:	6879      	ldr	r1, [r7, #4]
 801538a:	4613      	mov	r3, r2
 801538c:	009b      	lsls	r3, r3, #2
 801538e:	4413      	add	r3, r2
 8015390:	009b      	lsls	r3, r3, #2
 8015392:	440b      	add	r3, r1
 8015394:	3324      	adds	r3, #36	@ 0x24
 8015396:	2200      	movs	r2, #0
 8015398:	801a      	strh	r2, [r3, #0]
 801539a:	4b32      	ldr	r3, [pc, #200]	@ (8015464 <USBD_CDC_DeInit+0xfc>)
 801539c:	781b      	ldrb	r3, [r3, #0]
 801539e:	4619      	mov	r1, r3
 80153a0:	6878      	ldr	r0, [r7, #4]
 80153a2:	f005 fb64 	bl	801aa6e <USBD_LL_CloseEP>
 80153a6:	4b2f      	ldr	r3, [pc, #188]	@ (8015464 <USBD_CDC_DeInit+0xfc>)
 80153a8:	781b      	ldrb	r3, [r3, #0]
 80153aa:	f003 020f 	and.w	r2, r3, #15
 80153ae:	6879      	ldr	r1, [r7, #4]
 80153b0:	4613      	mov	r3, r2
 80153b2:	009b      	lsls	r3, r3, #2
 80153b4:	4413      	add	r3, r2
 80153b6:	009b      	lsls	r3, r3, #2
 80153b8:	440b      	add	r3, r1
 80153ba:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80153be:	2200      	movs	r2, #0
 80153c0:	801a      	strh	r2, [r3, #0]
 80153c2:	4b29      	ldr	r3, [pc, #164]	@ (8015468 <USBD_CDC_DeInit+0x100>)
 80153c4:	781b      	ldrb	r3, [r3, #0]
 80153c6:	4619      	mov	r1, r3
 80153c8:	6878      	ldr	r0, [r7, #4]
 80153ca:	f005 fb50 	bl	801aa6e <USBD_LL_CloseEP>
 80153ce:	4b26      	ldr	r3, [pc, #152]	@ (8015468 <USBD_CDC_DeInit+0x100>)
 80153d0:	781b      	ldrb	r3, [r3, #0]
 80153d2:	f003 020f 	and.w	r2, r3, #15
 80153d6:	6879      	ldr	r1, [r7, #4]
 80153d8:	4613      	mov	r3, r2
 80153da:	009b      	lsls	r3, r3, #2
 80153dc:	4413      	add	r3, r2
 80153de:	009b      	lsls	r3, r3, #2
 80153e0:	440b      	add	r3, r1
 80153e2:	3324      	adds	r3, #36	@ 0x24
 80153e4:	2200      	movs	r2, #0
 80153e6:	801a      	strh	r2, [r3, #0]
 80153e8:	4b1f      	ldr	r3, [pc, #124]	@ (8015468 <USBD_CDC_DeInit+0x100>)
 80153ea:	781b      	ldrb	r3, [r3, #0]
 80153ec:	f003 020f 	and.w	r2, r3, #15
 80153f0:	6879      	ldr	r1, [r7, #4]
 80153f2:	4613      	mov	r3, r2
 80153f4:	009b      	lsls	r3, r3, #2
 80153f6:	4413      	add	r3, r2
 80153f8:	009b      	lsls	r3, r3, #2
 80153fa:	440b      	add	r3, r1
 80153fc:	3326      	adds	r3, #38	@ 0x26
 80153fe:	2200      	movs	r2, #0
 8015400:	801a      	strh	r2, [r3, #0]
 8015402:	687b      	ldr	r3, [r7, #4]
 8015404:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015408:	687b      	ldr	r3, [r7, #4]
 801540a:	32b0      	adds	r2, #176	@ 0xb0
 801540c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015410:	2b00      	cmp	r3, #0
 8015412:	d01f      	beq.n	8015454 <USBD_CDC_DeInit+0xec>
 8015414:	687b      	ldr	r3, [r7, #4]
 8015416:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801541a:	687a      	ldr	r2, [r7, #4]
 801541c:	33b0      	adds	r3, #176	@ 0xb0
 801541e:	009b      	lsls	r3, r3, #2
 8015420:	4413      	add	r3, r2
 8015422:	685b      	ldr	r3, [r3, #4]
 8015424:	685b      	ldr	r3, [r3, #4]
 8015426:	4798      	blx	r3
 8015428:	687b      	ldr	r3, [r7, #4]
 801542a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801542e:	687b      	ldr	r3, [r7, #4]
 8015430:	32b0      	adds	r2, #176	@ 0xb0
 8015432:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015436:	4618      	mov	r0, r3
 8015438:	f005 fc24 	bl	801ac84 <USBD_static_free>
 801543c:	687b      	ldr	r3, [r7, #4]
 801543e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015442:	687b      	ldr	r3, [r7, #4]
 8015444:	32b0      	adds	r2, #176	@ 0xb0
 8015446:	2100      	movs	r1, #0
 8015448:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801544c:	687b      	ldr	r3, [r7, #4]
 801544e:	2200      	movs	r2, #0
 8015450:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 8015454:	2300      	movs	r3, #0
 8015456:	4618      	mov	r0, r3
 8015458:	3708      	adds	r7, #8
 801545a:	46bd      	mov	sp, r7
 801545c:	bd80      	pop	{r7, pc}
 801545e:	bf00      	nop
 8015460:	200000a7 	.word	0x200000a7
 8015464:	200000a8 	.word	0x200000a8
 8015468:	200000a9 	.word	0x200000a9

0801546c <USBD_CDC_Setup>:
 801546c:	b580      	push	{r7, lr}
 801546e:	b086      	sub	sp, #24
 8015470:	af00      	add	r7, sp, #0
 8015472:	6078      	str	r0, [r7, #4]
 8015474:	6039      	str	r1, [r7, #0]
 8015476:	687b      	ldr	r3, [r7, #4]
 8015478:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801547c:	687b      	ldr	r3, [r7, #4]
 801547e:	32b0      	adds	r2, #176	@ 0xb0
 8015480:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015484:	613b      	str	r3, [r7, #16]
 8015486:	2300      	movs	r3, #0
 8015488:	737b      	strb	r3, [r7, #13]
 801548a:	2300      	movs	r3, #0
 801548c:	817b      	strh	r3, [r7, #10]
 801548e:	2300      	movs	r3, #0
 8015490:	75fb      	strb	r3, [r7, #23]
 8015492:	693b      	ldr	r3, [r7, #16]
 8015494:	2b00      	cmp	r3, #0
 8015496:	d101      	bne.n	801549c <USBD_CDC_Setup+0x30>
 8015498:	2303      	movs	r3, #3
 801549a:	e0bf      	b.n	801561c <USBD_CDC_Setup+0x1b0>
 801549c:	683b      	ldr	r3, [r7, #0]
 801549e:	781b      	ldrb	r3, [r3, #0]
 80154a0:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80154a4:	2b00      	cmp	r3, #0
 80154a6:	d050      	beq.n	801554a <USBD_CDC_Setup+0xde>
 80154a8:	2b20      	cmp	r3, #32
 80154aa:	f040 80af 	bne.w	801560c <USBD_CDC_Setup+0x1a0>
 80154ae:	683b      	ldr	r3, [r7, #0]
 80154b0:	88db      	ldrh	r3, [r3, #6]
 80154b2:	2b00      	cmp	r3, #0
 80154b4:	d03a      	beq.n	801552c <USBD_CDC_Setup+0xc0>
 80154b6:	683b      	ldr	r3, [r7, #0]
 80154b8:	781b      	ldrb	r3, [r3, #0]
 80154ba:	b25b      	sxtb	r3, r3
 80154bc:	2b00      	cmp	r3, #0
 80154be:	da1b      	bge.n	80154f8 <USBD_CDC_Setup+0x8c>
 80154c0:	687b      	ldr	r3, [r7, #4]
 80154c2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80154c6:	687a      	ldr	r2, [r7, #4]
 80154c8:	33b0      	adds	r3, #176	@ 0xb0
 80154ca:	009b      	lsls	r3, r3, #2
 80154cc:	4413      	add	r3, r2
 80154ce:	685b      	ldr	r3, [r3, #4]
 80154d0:	689b      	ldr	r3, [r3, #8]
 80154d2:	683a      	ldr	r2, [r7, #0]
 80154d4:	7850      	ldrb	r0, [r2, #1]
 80154d6:	6939      	ldr	r1, [r7, #16]
 80154d8:	683a      	ldr	r2, [r7, #0]
 80154da:	88d2      	ldrh	r2, [r2, #6]
 80154dc:	4798      	blx	r3
 80154de:	683b      	ldr	r3, [r7, #0]
 80154e0:	88db      	ldrh	r3, [r3, #6]
 80154e2:	2b07      	cmp	r3, #7
 80154e4:	bf28      	it	cs
 80154e6:	2307      	movcs	r3, #7
 80154e8:	81fb      	strh	r3, [r7, #14]
 80154ea:	693b      	ldr	r3, [r7, #16]
 80154ec:	89fa      	ldrh	r2, [r7, #14]
 80154ee:	4619      	mov	r1, r3
 80154f0:	6878      	ldr	r0, [r7, #4]
 80154f2:	f001 fd41 	bl	8016f78 <USBD_CtlSendData>
 80154f6:	e090      	b.n	801561a <USBD_CDC_Setup+0x1ae>
 80154f8:	683b      	ldr	r3, [r7, #0]
 80154fa:	785a      	ldrb	r2, [r3, #1]
 80154fc:	693b      	ldr	r3, [r7, #16]
 80154fe:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 8015502:	683b      	ldr	r3, [r7, #0]
 8015504:	88db      	ldrh	r3, [r3, #6]
 8015506:	2b3f      	cmp	r3, #63	@ 0x3f
 8015508:	d803      	bhi.n	8015512 <USBD_CDC_Setup+0xa6>
 801550a:	683b      	ldr	r3, [r7, #0]
 801550c:	88db      	ldrh	r3, [r3, #6]
 801550e:	b2da      	uxtb	r2, r3
 8015510:	e000      	b.n	8015514 <USBD_CDC_Setup+0xa8>
 8015512:	2240      	movs	r2, #64	@ 0x40
 8015514:	693b      	ldr	r3, [r7, #16]
 8015516:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 801551a:	6939      	ldr	r1, [r7, #16]
 801551c:	693b      	ldr	r3, [r7, #16]
 801551e:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8015522:	461a      	mov	r2, r3
 8015524:	6878      	ldr	r0, [r7, #4]
 8015526:	f001 fd53 	bl	8016fd0 <USBD_CtlPrepareRx>
 801552a:	e076      	b.n	801561a <USBD_CDC_Setup+0x1ae>
 801552c:	687b      	ldr	r3, [r7, #4]
 801552e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015532:	687a      	ldr	r2, [r7, #4]
 8015534:	33b0      	adds	r3, #176	@ 0xb0
 8015536:	009b      	lsls	r3, r3, #2
 8015538:	4413      	add	r3, r2
 801553a:	685b      	ldr	r3, [r3, #4]
 801553c:	689b      	ldr	r3, [r3, #8]
 801553e:	683a      	ldr	r2, [r7, #0]
 8015540:	7850      	ldrb	r0, [r2, #1]
 8015542:	2200      	movs	r2, #0
 8015544:	6839      	ldr	r1, [r7, #0]
 8015546:	4798      	blx	r3
 8015548:	e067      	b.n	801561a <USBD_CDC_Setup+0x1ae>
 801554a:	683b      	ldr	r3, [r7, #0]
 801554c:	785b      	ldrb	r3, [r3, #1]
 801554e:	2b0b      	cmp	r3, #11
 8015550:	d851      	bhi.n	80155f6 <USBD_CDC_Setup+0x18a>
 8015552:	a201      	add	r2, pc, #4	@ (adr r2, 8015558 <USBD_CDC_Setup+0xec>)
 8015554:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015558:	08015589 	.word	0x08015589
 801555c:	08015605 	.word	0x08015605
 8015560:	080155f7 	.word	0x080155f7
 8015564:	080155f7 	.word	0x080155f7
 8015568:	080155f7 	.word	0x080155f7
 801556c:	080155f7 	.word	0x080155f7
 8015570:	080155f7 	.word	0x080155f7
 8015574:	080155f7 	.word	0x080155f7
 8015578:	080155f7 	.word	0x080155f7
 801557c:	080155f7 	.word	0x080155f7
 8015580:	080155b3 	.word	0x080155b3
 8015584:	080155dd 	.word	0x080155dd
 8015588:	687b      	ldr	r3, [r7, #4]
 801558a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801558e:	b2db      	uxtb	r3, r3
 8015590:	2b03      	cmp	r3, #3
 8015592:	d107      	bne.n	80155a4 <USBD_CDC_Setup+0x138>
 8015594:	f107 030a 	add.w	r3, r7, #10
 8015598:	2202      	movs	r2, #2
 801559a:	4619      	mov	r1, r3
 801559c:	6878      	ldr	r0, [r7, #4]
 801559e:	f001 fceb 	bl	8016f78 <USBD_CtlSendData>
 80155a2:	e032      	b.n	801560a <USBD_CDC_Setup+0x19e>
 80155a4:	6839      	ldr	r1, [r7, #0]
 80155a6:	6878      	ldr	r0, [r7, #4]
 80155a8:	f001 fc75 	bl	8016e96 <USBD_CtlError>
 80155ac:	2303      	movs	r3, #3
 80155ae:	75fb      	strb	r3, [r7, #23]
 80155b0:	e02b      	b.n	801560a <USBD_CDC_Setup+0x19e>
 80155b2:	687b      	ldr	r3, [r7, #4]
 80155b4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80155b8:	b2db      	uxtb	r3, r3
 80155ba:	2b03      	cmp	r3, #3
 80155bc:	d107      	bne.n	80155ce <USBD_CDC_Setup+0x162>
 80155be:	f107 030d 	add.w	r3, r7, #13
 80155c2:	2201      	movs	r2, #1
 80155c4:	4619      	mov	r1, r3
 80155c6:	6878      	ldr	r0, [r7, #4]
 80155c8:	f001 fcd6 	bl	8016f78 <USBD_CtlSendData>
 80155cc:	e01d      	b.n	801560a <USBD_CDC_Setup+0x19e>
 80155ce:	6839      	ldr	r1, [r7, #0]
 80155d0:	6878      	ldr	r0, [r7, #4]
 80155d2:	f001 fc60 	bl	8016e96 <USBD_CtlError>
 80155d6:	2303      	movs	r3, #3
 80155d8:	75fb      	strb	r3, [r7, #23]
 80155da:	e016      	b.n	801560a <USBD_CDC_Setup+0x19e>
 80155dc:	687b      	ldr	r3, [r7, #4]
 80155de:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80155e2:	b2db      	uxtb	r3, r3
 80155e4:	2b03      	cmp	r3, #3
 80155e6:	d00f      	beq.n	8015608 <USBD_CDC_Setup+0x19c>
 80155e8:	6839      	ldr	r1, [r7, #0]
 80155ea:	6878      	ldr	r0, [r7, #4]
 80155ec:	f001 fc53 	bl	8016e96 <USBD_CtlError>
 80155f0:	2303      	movs	r3, #3
 80155f2:	75fb      	strb	r3, [r7, #23]
 80155f4:	e008      	b.n	8015608 <USBD_CDC_Setup+0x19c>
 80155f6:	6839      	ldr	r1, [r7, #0]
 80155f8:	6878      	ldr	r0, [r7, #4]
 80155fa:	f001 fc4c 	bl	8016e96 <USBD_CtlError>
 80155fe:	2303      	movs	r3, #3
 8015600:	75fb      	strb	r3, [r7, #23]
 8015602:	e002      	b.n	801560a <USBD_CDC_Setup+0x19e>
 8015604:	bf00      	nop
 8015606:	e008      	b.n	801561a <USBD_CDC_Setup+0x1ae>
 8015608:	bf00      	nop
 801560a:	e006      	b.n	801561a <USBD_CDC_Setup+0x1ae>
 801560c:	6839      	ldr	r1, [r7, #0]
 801560e:	6878      	ldr	r0, [r7, #4]
 8015610:	f001 fc41 	bl	8016e96 <USBD_CtlError>
 8015614:	2303      	movs	r3, #3
 8015616:	75fb      	strb	r3, [r7, #23]
 8015618:	bf00      	nop
 801561a:	7dfb      	ldrb	r3, [r7, #23]
 801561c:	4618      	mov	r0, r3
 801561e:	3718      	adds	r7, #24
 8015620:	46bd      	mov	sp, r7
 8015622:	bd80      	pop	{r7, pc}

08015624 <USBD_CDC_DataIn>:
 8015624:	b580      	push	{r7, lr}
 8015626:	b084      	sub	sp, #16
 8015628:	af00      	add	r7, sp, #0
 801562a:	6078      	str	r0, [r7, #4]
 801562c:	460b      	mov	r3, r1
 801562e:	70fb      	strb	r3, [r7, #3]
 8015630:	687b      	ldr	r3, [r7, #4]
 8015632:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 8015636:	60fb      	str	r3, [r7, #12]
 8015638:	687b      	ldr	r3, [r7, #4]
 801563a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801563e:	687b      	ldr	r3, [r7, #4]
 8015640:	32b0      	adds	r2, #176	@ 0xb0
 8015642:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015646:	2b00      	cmp	r3, #0
 8015648:	d101      	bne.n	801564e <USBD_CDC_DataIn+0x2a>
 801564a:	2303      	movs	r3, #3
 801564c:	e065      	b.n	801571a <USBD_CDC_DataIn+0xf6>
 801564e:	687b      	ldr	r3, [r7, #4]
 8015650:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015654:	687b      	ldr	r3, [r7, #4]
 8015656:	32b0      	adds	r2, #176	@ 0xb0
 8015658:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801565c:	60bb      	str	r3, [r7, #8]
 801565e:	78fb      	ldrb	r3, [r7, #3]
 8015660:	f003 020f 	and.w	r2, r3, #15
 8015664:	6879      	ldr	r1, [r7, #4]
 8015666:	4613      	mov	r3, r2
 8015668:	009b      	lsls	r3, r3, #2
 801566a:	4413      	add	r3, r2
 801566c:	009b      	lsls	r3, r3, #2
 801566e:	440b      	add	r3, r1
 8015670:	3318      	adds	r3, #24
 8015672:	681b      	ldr	r3, [r3, #0]
 8015674:	2b00      	cmp	r3, #0
 8015676:	d02f      	beq.n	80156d8 <USBD_CDC_DataIn+0xb4>
 8015678:	78fb      	ldrb	r3, [r7, #3]
 801567a:	f003 020f 	and.w	r2, r3, #15
 801567e:	6879      	ldr	r1, [r7, #4]
 8015680:	4613      	mov	r3, r2
 8015682:	009b      	lsls	r3, r3, #2
 8015684:	4413      	add	r3, r2
 8015686:	009b      	lsls	r3, r3, #2
 8015688:	440b      	add	r3, r1
 801568a:	3318      	adds	r3, #24
 801568c:	681a      	ldr	r2, [r3, #0]
 801568e:	78fb      	ldrb	r3, [r7, #3]
 8015690:	f003 010f 	and.w	r1, r3, #15
 8015694:	68f8      	ldr	r0, [r7, #12]
 8015696:	460b      	mov	r3, r1
 8015698:	00db      	lsls	r3, r3, #3
 801569a:	440b      	add	r3, r1
 801569c:	009b      	lsls	r3, r3, #2
 801569e:	4403      	add	r3, r0
 80156a0:	3348      	adds	r3, #72	@ 0x48
 80156a2:	681b      	ldr	r3, [r3, #0]
 80156a4:	fbb2 f1f3 	udiv	r1, r2, r3
 80156a8:	fb01 f303 	mul.w	r3, r1, r3
 80156ac:	1ad3      	subs	r3, r2, r3
 80156ae:	2b00      	cmp	r3, #0
 80156b0:	d112      	bne.n	80156d8 <USBD_CDC_DataIn+0xb4>
 80156b2:	78fb      	ldrb	r3, [r7, #3]
 80156b4:	f003 020f 	and.w	r2, r3, #15
 80156b8:	6879      	ldr	r1, [r7, #4]
 80156ba:	4613      	mov	r3, r2
 80156bc:	009b      	lsls	r3, r3, #2
 80156be:	4413      	add	r3, r2
 80156c0:	009b      	lsls	r3, r3, #2
 80156c2:	440b      	add	r3, r1
 80156c4:	3318      	adds	r3, #24
 80156c6:	2200      	movs	r2, #0
 80156c8:	601a      	str	r2, [r3, #0]
 80156ca:	78f9      	ldrb	r1, [r7, #3]
 80156cc:	2300      	movs	r3, #0
 80156ce:	2200      	movs	r2, #0
 80156d0:	6878      	ldr	r0, [r7, #4]
 80156d2:	f005 fa74 	bl	801abbe <USBD_LL_Transmit>
 80156d6:	e01f      	b.n	8015718 <USBD_CDC_DataIn+0xf4>
 80156d8:	68bb      	ldr	r3, [r7, #8]
 80156da:	2200      	movs	r2, #0
 80156dc:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80156e0:	687b      	ldr	r3, [r7, #4]
 80156e2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80156e6:	687a      	ldr	r2, [r7, #4]
 80156e8:	33b0      	adds	r3, #176	@ 0xb0
 80156ea:	009b      	lsls	r3, r3, #2
 80156ec:	4413      	add	r3, r2
 80156ee:	685b      	ldr	r3, [r3, #4]
 80156f0:	691b      	ldr	r3, [r3, #16]
 80156f2:	2b00      	cmp	r3, #0
 80156f4:	d010      	beq.n	8015718 <USBD_CDC_DataIn+0xf4>
 80156f6:	687b      	ldr	r3, [r7, #4]
 80156f8:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80156fc:	687a      	ldr	r2, [r7, #4]
 80156fe:	33b0      	adds	r3, #176	@ 0xb0
 8015700:	009b      	lsls	r3, r3, #2
 8015702:	4413      	add	r3, r2
 8015704:	685b      	ldr	r3, [r3, #4]
 8015706:	691b      	ldr	r3, [r3, #16]
 8015708:	68ba      	ldr	r2, [r7, #8]
 801570a:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 801570e:	68ba      	ldr	r2, [r7, #8]
 8015710:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 8015714:	78fa      	ldrb	r2, [r7, #3]
 8015716:	4798      	blx	r3
 8015718:	2300      	movs	r3, #0
 801571a:	4618      	mov	r0, r3
 801571c:	3710      	adds	r7, #16
 801571e:	46bd      	mov	sp, r7
 8015720:	bd80      	pop	{r7, pc}

08015722 <USBD_CDC_DataOut>:
 8015722:	b580      	push	{r7, lr}
 8015724:	b084      	sub	sp, #16
 8015726:	af00      	add	r7, sp, #0
 8015728:	6078      	str	r0, [r7, #4]
 801572a:	460b      	mov	r3, r1
 801572c:	70fb      	strb	r3, [r7, #3]
 801572e:	687b      	ldr	r3, [r7, #4]
 8015730:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015734:	687b      	ldr	r3, [r7, #4]
 8015736:	32b0      	adds	r2, #176	@ 0xb0
 8015738:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801573c:	60fb      	str	r3, [r7, #12]
 801573e:	687b      	ldr	r3, [r7, #4]
 8015740:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015744:	687b      	ldr	r3, [r7, #4]
 8015746:	32b0      	adds	r2, #176	@ 0xb0
 8015748:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801574c:	2b00      	cmp	r3, #0
 801574e:	d101      	bne.n	8015754 <USBD_CDC_DataOut+0x32>
 8015750:	2303      	movs	r3, #3
 8015752:	e01a      	b.n	801578a <USBD_CDC_DataOut+0x68>
 8015754:	78fb      	ldrb	r3, [r7, #3]
 8015756:	4619      	mov	r1, r3
 8015758:	6878      	ldr	r0, [r7, #4]
 801575a:	f005 fa72 	bl	801ac42 <USBD_LL_GetRxDataSize>
 801575e:	4602      	mov	r2, r0
 8015760:	68fb      	ldr	r3, [r7, #12]
 8015762:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8015766:	687b      	ldr	r3, [r7, #4]
 8015768:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801576c:	687a      	ldr	r2, [r7, #4]
 801576e:	33b0      	adds	r3, #176	@ 0xb0
 8015770:	009b      	lsls	r3, r3, #2
 8015772:	4413      	add	r3, r2
 8015774:	685b      	ldr	r3, [r3, #4]
 8015776:	68db      	ldr	r3, [r3, #12]
 8015778:	68fa      	ldr	r2, [r7, #12]
 801577a:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 801577e:	68fa      	ldr	r2, [r7, #12]
 8015780:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 8015784:	4611      	mov	r1, r2
 8015786:	4798      	blx	r3
 8015788:	2300      	movs	r3, #0
 801578a:	4618      	mov	r0, r3
 801578c:	3710      	adds	r7, #16
 801578e:	46bd      	mov	sp, r7
 8015790:	bd80      	pop	{r7, pc}

08015792 <USBD_CDC_EP0_RxReady>:
 8015792:	b580      	push	{r7, lr}
 8015794:	b084      	sub	sp, #16
 8015796:	af00      	add	r7, sp, #0
 8015798:	6078      	str	r0, [r7, #4]
 801579a:	687b      	ldr	r3, [r7, #4]
 801579c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80157a0:	687b      	ldr	r3, [r7, #4]
 80157a2:	32b0      	adds	r2, #176	@ 0xb0
 80157a4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80157a8:	60fb      	str	r3, [r7, #12]
 80157aa:	68fb      	ldr	r3, [r7, #12]
 80157ac:	2b00      	cmp	r3, #0
 80157ae:	d101      	bne.n	80157b4 <USBD_CDC_EP0_RxReady+0x22>
 80157b0:	2303      	movs	r3, #3
 80157b2:	e024      	b.n	80157fe <USBD_CDC_EP0_RxReady+0x6c>
 80157b4:	687b      	ldr	r3, [r7, #4]
 80157b6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80157ba:	687a      	ldr	r2, [r7, #4]
 80157bc:	33b0      	adds	r3, #176	@ 0xb0
 80157be:	009b      	lsls	r3, r3, #2
 80157c0:	4413      	add	r3, r2
 80157c2:	685b      	ldr	r3, [r3, #4]
 80157c4:	2b00      	cmp	r3, #0
 80157c6:	d019      	beq.n	80157fc <USBD_CDC_EP0_RxReady+0x6a>
 80157c8:	68fb      	ldr	r3, [r7, #12]
 80157ca:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 80157ce:	2bff      	cmp	r3, #255	@ 0xff
 80157d0:	d014      	beq.n	80157fc <USBD_CDC_EP0_RxReady+0x6a>
 80157d2:	687b      	ldr	r3, [r7, #4]
 80157d4:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80157d8:	687a      	ldr	r2, [r7, #4]
 80157da:	33b0      	adds	r3, #176	@ 0xb0
 80157dc:	009b      	lsls	r3, r3, #2
 80157de:	4413      	add	r3, r2
 80157e0:	685b      	ldr	r3, [r3, #4]
 80157e2:	689b      	ldr	r3, [r3, #8]
 80157e4:	68fa      	ldr	r2, [r7, #12]
 80157e6:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 80157ea:	68f9      	ldr	r1, [r7, #12]
 80157ec:	68fa      	ldr	r2, [r7, #12]
 80157ee:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 80157f2:	4798      	blx	r3
 80157f4:	68fb      	ldr	r3, [r7, #12]
 80157f6:	22ff      	movs	r2, #255	@ 0xff
 80157f8:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 80157fc:	2300      	movs	r3, #0
 80157fe:	4618      	mov	r0, r3
 8015800:	3710      	adds	r7, #16
 8015802:	46bd      	mov	sp, r7
 8015804:	bd80      	pop	{r7, pc}
	...

08015808 <USBD_CDC_GetFSCfgDesc>:
 8015808:	b580      	push	{r7, lr}
 801580a:	b086      	sub	sp, #24
 801580c:	af00      	add	r7, sp, #0
 801580e:	6078      	str	r0, [r7, #4]
 8015810:	2182      	movs	r1, #130	@ 0x82
 8015812:	4818      	ldr	r0, [pc, #96]	@ (8015874 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8015814:	f000 fd09 	bl	801622a <USBD_GetEpDesc>
 8015818:	6178      	str	r0, [r7, #20]
 801581a:	2101      	movs	r1, #1
 801581c:	4815      	ldr	r0, [pc, #84]	@ (8015874 <USBD_CDC_GetFSCfgDesc+0x6c>)
 801581e:	f000 fd04 	bl	801622a <USBD_GetEpDesc>
 8015822:	6138      	str	r0, [r7, #16]
 8015824:	2181      	movs	r1, #129	@ 0x81
 8015826:	4813      	ldr	r0, [pc, #76]	@ (8015874 <USBD_CDC_GetFSCfgDesc+0x6c>)
 8015828:	f000 fcff 	bl	801622a <USBD_GetEpDesc>
 801582c:	60f8      	str	r0, [r7, #12]
 801582e:	697b      	ldr	r3, [r7, #20]
 8015830:	2b00      	cmp	r3, #0
 8015832:	d002      	beq.n	801583a <USBD_CDC_GetFSCfgDesc+0x32>
 8015834:	697b      	ldr	r3, [r7, #20]
 8015836:	2210      	movs	r2, #16
 8015838:	719a      	strb	r2, [r3, #6]
 801583a:	693b      	ldr	r3, [r7, #16]
 801583c:	2b00      	cmp	r3, #0
 801583e:	d006      	beq.n	801584e <USBD_CDC_GetFSCfgDesc+0x46>
 8015840:	693b      	ldr	r3, [r7, #16]
 8015842:	2200      	movs	r2, #0
 8015844:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015848:	711a      	strb	r2, [r3, #4]
 801584a:	2200      	movs	r2, #0
 801584c:	715a      	strb	r2, [r3, #5]
 801584e:	68fb      	ldr	r3, [r7, #12]
 8015850:	2b00      	cmp	r3, #0
 8015852:	d006      	beq.n	8015862 <USBD_CDC_GetFSCfgDesc+0x5a>
 8015854:	68fb      	ldr	r3, [r7, #12]
 8015856:	2200      	movs	r2, #0
 8015858:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 801585c:	711a      	strb	r2, [r3, #4]
 801585e:	2200      	movs	r2, #0
 8015860:	715a      	strb	r2, [r3, #5]
 8015862:	687b      	ldr	r3, [r7, #4]
 8015864:	2243      	movs	r2, #67	@ 0x43
 8015866:	801a      	strh	r2, [r3, #0]
 8015868:	4b02      	ldr	r3, [pc, #8]	@ (8015874 <USBD_CDC_GetFSCfgDesc+0x6c>)
 801586a:	4618      	mov	r0, r3
 801586c:	3718      	adds	r7, #24
 801586e:	46bd      	mov	sp, r7
 8015870:	bd80      	pop	{r7, pc}
 8015872:	bf00      	nop
 8015874:	20000064 	.word	0x20000064

08015878 <USBD_CDC_GetHSCfgDesc>:
 8015878:	b580      	push	{r7, lr}
 801587a:	b086      	sub	sp, #24
 801587c:	af00      	add	r7, sp, #0
 801587e:	6078      	str	r0, [r7, #4]
 8015880:	2182      	movs	r1, #130	@ 0x82
 8015882:	4818      	ldr	r0, [pc, #96]	@ (80158e4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8015884:	f000 fcd1 	bl	801622a <USBD_GetEpDesc>
 8015888:	6178      	str	r0, [r7, #20]
 801588a:	2101      	movs	r1, #1
 801588c:	4815      	ldr	r0, [pc, #84]	@ (80158e4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 801588e:	f000 fccc 	bl	801622a <USBD_GetEpDesc>
 8015892:	6138      	str	r0, [r7, #16]
 8015894:	2181      	movs	r1, #129	@ 0x81
 8015896:	4813      	ldr	r0, [pc, #76]	@ (80158e4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 8015898:	f000 fcc7 	bl	801622a <USBD_GetEpDesc>
 801589c:	60f8      	str	r0, [r7, #12]
 801589e:	697b      	ldr	r3, [r7, #20]
 80158a0:	2b00      	cmp	r3, #0
 80158a2:	d002      	beq.n	80158aa <USBD_CDC_GetHSCfgDesc+0x32>
 80158a4:	697b      	ldr	r3, [r7, #20]
 80158a6:	2210      	movs	r2, #16
 80158a8:	719a      	strb	r2, [r3, #6]
 80158aa:	693b      	ldr	r3, [r7, #16]
 80158ac:	2b00      	cmp	r3, #0
 80158ae:	d006      	beq.n	80158be <USBD_CDC_GetHSCfgDesc+0x46>
 80158b0:	693b      	ldr	r3, [r7, #16]
 80158b2:	2200      	movs	r2, #0
 80158b4:	711a      	strb	r2, [r3, #4]
 80158b6:	2200      	movs	r2, #0
 80158b8:	f042 0202 	orr.w	r2, r2, #2
 80158bc:	715a      	strb	r2, [r3, #5]
 80158be:	68fb      	ldr	r3, [r7, #12]
 80158c0:	2b00      	cmp	r3, #0
 80158c2:	d006      	beq.n	80158d2 <USBD_CDC_GetHSCfgDesc+0x5a>
 80158c4:	68fb      	ldr	r3, [r7, #12]
 80158c6:	2200      	movs	r2, #0
 80158c8:	711a      	strb	r2, [r3, #4]
 80158ca:	2200      	movs	r2, #0
 80158cc:	f042 0202 	orr.w	r2, r2, #2
 80158d0:	715a      	strb	r2, [r3, #5]
 80158d2:	687b      	ldr	r3, [r7, #4]
 80158d4:	2243      	movs	r2, #67	@ 0x43
 80158d6:	801a      	strh	r2, [r3, #0]
 80158d8:	4b02      	ldr	r3, [pc, #8]	@ (80158e4 <USBD_CDC_GetHSCfgDesc+0x6c>)
 80158da:	4618      	mov	r0, r3
 80158dc:	3718      	adds	r7, #24
 80158de:	46bd      	mov	sp, r7
 80158e0:	bd80      	pop	{r7, pc}
 80158e2:	bf00      	nop
 80158e4:	20000064 	.word	0x20000064

080158e8 <USBD_CDC_GetOtherSpeedCfgDesc>:
 80158e8:	b580      	push	{r7, lr}
 80158ea:	b086      	sub	sp, #24
 80158ec:	af00      	add	r7, sp, #0
 80158ee:	6078      	str	r0, [r7, #4]
 80158f0:	2182      	movs	r1, #130	@ 0x82
 80158f2:	4818      	ldr	r0, [pc, #96]	@ (8015954 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80158f4:	f000 fc99 	bl	801622a <USBD_GetEpDesc>
 80158f8:	6178      	str	r0, [r7, #20]
 80158fa:	2101      	movs	r1, #1
 80158fc:	4815      	ldr	r0, [pc, #84]	@ (8015954 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80158fe:	f000 fc94 	bl	801622a <USBD_GetEpDesc>
 8015902:	6138      	str	r0, [r7, #16]
 8015904:	2181      	movs	r1, #129	@ 0x81
 8015906:	4813      	ldr	r0, [pc, #76]	@ (8015954 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8015908:	f000 fc8f 	bl	801622a <USBD_GetEpDesc>
 801590c:	60f8      	str	r0, [r7, #12]
 801590e:	697b      	ldr	r3, [r7, #20]
 8015910:	2b00      	cmp	r3, #0
 8015912:	d002      	beq.n	801591a <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 8015914:	697b      	ldr	r3, [r7, #20]
 8015916:	2210      	movs	r2, #16
 8015918:	719a      	strb	r2, [r3, #6]
 801591a:	693b      	ldr	r3, [r7, #16]
 801591c:	2b00      	cmp	r3, #0
 801591e:	d006      	beq.n	801592e <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8015920:	693b      	ldr	r3, [r7, #16]
 8015922:	2200      	movs	r2, #0
 8015924:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015928:	711a      	strb	r2, [r3, #4]
 801592a:	2200      	movs	r2, #0
 801592c:	715a      	strb	r2, [r3, #5]
 801592e:	68fb      	ldr	r3, [r7, #12]
 8015930:	2b00      	cmp	r3, #0
 8015932:	d006      	beq.n	8015942 <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 8015934:	68fb      	ldr	r3, [r7, #12]
 8015936:	2200      	movs	r2, #0
 8015938:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 801593c:	711a      	strb	r2, [r3, #4]
 801593e:	2200      	movs	r2, #0
 8015940:	715a      	strb	r2, [r3, #5]
 8015942:	687b      	ldr	r3, [r7, #4]
 8015944:	2243      	movs	r2, #67	@ 0x43
 8015946:	801a      	strh	r2, [r3, #0]
 8015948:	4b02      	ldr	r3, [pc, #8]	@ (8015954 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 801594a:	4618      	mov	r0, r3
 801594c:	3718      	adds	r7, #24
 801594e:	46bd      	mov	sp, r7
 8015950:	bd80      	pop	{r7, pc}
 8015952:	bf00      	nop
 8015954:	20000064 	.word	0x20000064

08015958 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8015958:	b480      	push	{r7}
 801595a:	b083      	sub	sp, #12
 801595c:	af00      	add	r7, sp, #0
 801595e:	6078      	str	r0, [r7, #4]
 8015960:	687b      	ldr	r3, [r7, #4]
 8015962:	220a      	movs	r2, #10
 8015964:	801a      	strh	r2, [r3, #0]
 8015966:	4b03      	ldr	r3, [pc, #12]	@ (8015974 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8015968:	4618      	mov	r0, r3
 801596a:	370c      	adds	r7, #12
 801596c:	46bd      	mov	sp, r7
 801596e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015972:	4770      	bx	lr
 8015974:	20000020 	.word	0x20000020

08015978 <USBD_CDC_RegisterInterface>:
 8015978:	b480      	push	{r7}
 801597a:	b083      	sub	sp, #12
 801597c:	af00      	add	r7, sp, #0
 801597e:	6078      	str	r0, [r7, #4]
 8015980:	6039      	str	r1, [r7, #0]
 8015982:	683b      	ldr	r3, [r7, #0]
 8015984:	2b00      	cmp	r3, #0
 8015986:	d101      	bne.n	801598c <USBD_CDC_RegisterInterface+0x14>
 8015988:	2303      	movs	r3, #3
 801598a:	e009      	b.n	80159a0 <USBD_CDC_RegisterInterface+0x28>
 801598c:	687b      	ldr	r3, [r7, #4]
 801598e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015992:	687a      	ldr	r2, [r7, #4]
 8015994:	33b0      	adds	r3, #176	@ 0xb0
 8015996:	009b      	lsls	r3, r3, #2
 8015998:	4413      	add	r3, r2
 801599a:	683a      	ldr	r2, [r7, #0]
 801599c:	605a      	str	r2, [r3, #4]
 801599e:	2300      	movs	r3, #0
 80159a0:	4618      	mov	r0, r3
 80159a2:	370c      	adds	r7, #12
 80159a4:	46bd      	mov	sp, r7
 80159a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80159aa:	4770      	bx	lr

080159ac <USBD_CDC_SetTxBuffer>:
 80159ac:	b480      	push	{r7}
 80159ae:	b087      	sub	sp, #28
 80159b0:	af00      	add	r7, sp, #0
 80159b2:	60f8      	str	r0, [r7, #12]
 80159b4:	60b9      	str	r1, [r7, #8]
 80159b6:	607a      	str	r2, [r7, #4]
 80159b8:	68fb      	ldr	r3, [r7, #12]
 80159ba:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80159be:	68fb      	ldr	r3, [r7, #12]
 80159c0:	32b0      	adds	r2, #176	@ 0xb0
 80159c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80159c6:	617b      	str	r3, [r7, #20]
 80159c8:	697b      	ldr	r3, [r7, #20]
 80159ca:	2b00      	cmp	r3, #0
 80159cc:	d101      	bne.n	80159d2 <USBD_CDC_SetTxBuffer+0x26>
 80159ce:	2303      	movs	r3, #3
 80159d0:	e008      	b.n	80159e4 <USBD_CDC_SetTxBuffer+0x38>
 80159d2:	697b      	ldr	r3, [r7, #20]
 80159d4:	68ba      	ldr	r2, [r7, #8]
 80159d6:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 80159da:	697b      	ldr	r3, [r7, #20]
 80159dc:	687a      	ldr	r2, [r7, #4]
 80159de:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 80159e2:	2300      	movs	r3, #0
 80159e4:	4618      	mov	r0, r3
 80159e6:	371c      	adds	r7, #28
 80159e8:	46bd      	mov	sp, r7
 80159ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80159ee:	4770      	bx	lr

080159f0 <USBD_CDC_SetRxBuffer>:
 80159f0:	b480      	push	{r7}
 80159f2:	b085      	sub	sp, #20
 80159f4:	af00      	add	r7, sp, #0
 80159f6:	6078      	str	r0, [r7, #4]
 80159f8:	6039      	str	r1, [r7, #0]
 80159fa:	687b      	ldr	r3, [r7, #4]
 80159fc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015a00:	687b      	ldr	r3, [r7, #4]
 8015a02:	32b0      	adds	r2, #176	@ 0xb0
 8015a04:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015a08:	60fb      	str	r3, [r7, #12]
 8015a0a:	68fb      	ldr	r3, [r7, #12]
 8015a0c:	2b00      	cmp	r3, #0
 8015a0e:	d101      	bne.n	8015a14 <USBD_CDC_SetRxBuffer+0x24>
 8015a10:	2303      	movs	r3, #3
 8015a12:	e004      	b.n	8015a1e <USBD_CDC_SetRxBuffer+0x2e>
 8015a14:	68fb      	ldr	r3, [r7, #12]
 8015a16:	683a      	ldr	r2, [r7, #0]
 8015a18:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8015a1c:	2300      	movs	r3, #0
 8015a1e:	4618      	mov	r0, r3
 8015a20:	3714      	adds	r7, #20
 8015a22:	46bd      	mov	sp, r7
 8015a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a28:	4770      	bx	lr
	...

08015a2c <USBD_CDC_ReceivePacket>:
 8015a2c:	b580      	push	{r7, lr}
 8015a2e:	b084      	sub	sp, #16
 8015a30:	af00      	add	r7, sp, #0
 8015a32:	6078      	str	r0, [r7, #4]
 8015a34:	687b      	ldr	r3, [r7, #4]
 8015a36:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015a3a:	687b      	ldr	r3, [r7, #4]
 8015a3c:	32b0      	adds	r2, #176	@ 0xb0
 8015a3e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015a42:	60fb      	str	r3, [r7, #12]
 8015a44:	687b      	ldr	r3, [r7, #4]
 8015a46:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015a4a:	687b      	ldr	r3, [r7, #4]
 8015a4c:	32b0      	adds	r2, #176	@ 0xb0
 8015a4e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015a52:	2b00      	cmp	r3, #0
 8015a54:	d101      	bne.n	8015a5a <USBD_CDC_ReceivePacket+0x2e>
 8015a56:	2303      	movs	r3, #3
 8015a58:	e018      	b.n	8015a8c <USBD_CDC_ReceivePacket+0x60>
 8015a5a:	687b      	ldr	r3, [r7, #4]
 8015a5c:	7c1b      	ldrb	r3, [r3, #16]
 8015a5e:	2b00      	cmp	r3, #0
 8015a60:	d10a      	bne.n	8015a78 <USBD_CDC_ReceivePacket+0x4c>
 8015a62:	4b0c      	ldr	r3, [pc, #48]	@ (8015a94 <USBD_CDC_ReceivePacket+0x68>)
 8015a64:	7819      	ldrb	r1, [r3, #0]
 8015a66:	68fb      	ldr	r3, [r7, #12]
 8015a68:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015a6c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015a70:	6878      	ldr	r0, [r7, #4]
 8015a72:	f005 f8c5 	bl	801ac00 <USBD_LL_PrepareReceive>
 8015a76:	e008      	b.n	8015a8a <USBD_CDC_ReceivePacket+0x5e>
 8015a78:	4b06      	ldr	r3, [pc, #24]	@ (8015a94 <USBD_CDC_ReceivePacket+0x68>)
 8015a7a:	7819      	ldrb	r1, [r3, #0]
 8015a7c:	68fb      	ldr	r3, [r7, #12]
 8015a7e:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015a82:	2340      	movs	r3, #64	@ 0x40
 8015a84:	6878      	ldr	r0, [r7, #4]
 8015a86:	f005 f8bb 	bl	801ac00 <USBD_LL_PrepareReceive>
 8015a8a:	2300      	movs	r3, #0
 8015a8c:	4618      	mov	r0, r3
 8015a8e:	3710      	adds	r7, #16
 8015a90:	46bd      	mov	sp, r7
 8015a92:	bd80      	pop	{r7, pc}
 8015a94:	200000a8 	.word	0x200000a8

08015a98 <USBD_Init>:
 8015a98:	b580      	push	{r7, lr}
 8015a9a:	b086      	sub	sp, #24
 8015a9c:	af00      	add	r7, sp, #0
 8015a9e:	60f8      	str	r0, [r7, #12]
 8015aa0:	60b9      	str	r1, [r7, #8]
 8015aa2:	4613      	mov	r3, r2
 8015aa4:	71fb      	strb	r3, [r7, #7]
 8015aa6:	68fb      	ldr	r3, [r7, #12]
 8015aa8:	2b00      	cmp	r3, #0
 8015aaa:	d101      	bne.n	8015ab0 <USBD_Init+0x18>
 8015aac:	2303      	movs	r3, #3
 8015aae:	e01f      	b.n	8015af0 <USBD_Init+0x58>
 8015ab0:	68fb      	ldr	r3, [r7, #12]
 8015ab2:	2200      	movs	r2, #0
 8015ab4:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8015ab8:	68fb      	ldr	r3, [r7, #12]
 8015aba:	2200      	movs	r2, #0
 8015abc:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 8015ac0:	68fb      	ldr	r3, [r7, #12]
 8015ac2:	2200      	movs	r2, #0
 8015ac4:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8015ac8:	68bb      	ldr	r3, [r7, #8]
 8015aca:	2b00      	cmp	r3, #0
 8015acc:	d003      	beq.n	8015ad6 <USBD_Init+0x3e>
 8015ace:	68fb      	ldr	r3, [r7, #12]
 8015ad0:	68ba      	ldr	r2, [r7, #8]
 8015ad2:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 8015ad6:	68fb      	ldr	r3, [r7, #12]
 8015ad8:	2201      	movs	r2, #1
 8015ada:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015ade:	68fb      	ldr	r3, [r7, #12]
 8015ae0:	79fa      	ldrb	r2, [r7, #7]
 8015ae2:	701a      	strb	r2, [r3, #0]
 8015ae4:	68f8      	ldr	r0, [r7, #12]
 8015ae6:	f004 ff35 	bl	801a954 <USBD_LL_Init>
 8015aea:	4603      	mov	r3, r0
 8015aec:	75fb      	strb	r3, [r7, #23]
 8015aee:	7dfb      	ldrb	r3, [r7, #23]
 8015af0:	4618      	mov	r0, r3
 8015af2:	3718      	adds	r7, #24
 8015af4:	46bd      	mov	sp, r7
 8015af6:	bd80      	pop	{r7, pc}

08015af8 <USBD_RegisterClass>:
 8015af8:	b580      	push	{r7, lr}
 8015afa:	b084      	sub	sp, #16
 8015afc:	af00      	add	r7, sp, #0
 8015afe:	6078      	str	r0, [r7, #4]
 8015b00:	6039      	str	r1, [r7, #0]
 8015b02:	2300      	movs	r3, #0
 8015b04:	81fb      	strh	r3, [r7, #14]
 8015b06:	683b      	ldr	r3, [r7, #0]
 8015b08:	2b00      	cmp	r3, #0
 8015b0a:	d101      	bne.n	8015b10 <USBD_RegisterClass+0x18>
 8015b0c:	2303      	movs	r3, #3
 8015b0e:	e025      	b.n	8015b5c <USBD_RegisterClass+0x64>
 8015b10:	687b      	ldr	r3, [r7, #4]
 8015b12:	683a      	ldr	r2, [r7, #0]
 8015b14:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8015b18:	687b      	ldr	r3, [r7, #4]
 8015b1a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015b1e:	687b      	ldr	r3, [r7, #4]
 8015b20:	32ae      	adds	r2, #174	@ 0xae
 8015b22:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015b26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b28:	2b00      	cmp	r3, #0
 8015b2a:	d00f      	beq.n	8015b4c <USBD_RegisterClass+0x54>
 8015b2c:	687b      	ldr	r3, [r7, #4]
 8015b2e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015b32:	687b      	ldr	r3, [r7, #4]
 8015b34:	32ae      	adds	r2, #174	@ 0xae
 8015b36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015b3a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015b3c:	f107 020e 	add.w	r2, r7, #14
 8015b40:	4610      	mov	r0, r2
 8015b42:	4798      	blx	r3
 8015b44:	4602      	mov	r2, r0
 8015b46:	687b      	ldr	r3, [r7, #4]
 8015b48:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8015b4c:	687b      	ldr	r3, [r7, #4]
 8015b4e:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 8015b52:	1c5a      	adds	r2, r3, #1
 8015b54:	687b      	ldr	r3, [r7, #4]
 8015b56:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 8015b5a:	2300      	movs	r3, #0
 8015b5c:	4618      	mov	r0, r3
 8015b5e:	3710      	adds	r7, #16
 8015b60:	46bd      	mov	sp, r7
 8015b62:	bd80      	pop	{r7, pc}

08015b64 <USBD_Start>:
 8015b64:	b580      	push	{r7, lr}
 8015b66:	b082      	sub	sp, #8
 8015b68:	af00      	add	r7, sp, #0
 8015b6a:	6078      	str	r0, [r7, #4]
 8015b6c:	6878      	ldr	r0, [r7, #4]
 8015b6e:	f004 ff3d 	bl	801a9ec <USBD_LL_Start>
 8015b72:	4603      	mov	r3, r0
 8015b74:	4618      	mov	r0, r3
 8015b76:	3708      	adds	r7, #8
 8015b78:	46bd      	mov	sp, r7
 8015b7a:	bd80      	pop	{r7, pc}

08015b7c <USBD_RunTestMode>:
 8015b7c:	b480      	push	{r7}
 8015b7e:	b083      	sub	sp, #12
 8015b80:	af00      	add	r7, sp, #0
 8015b82:	6078      	str	r0, [r7, #4]
 8015b84:	2300      	movs	r3, #0
 8015b86:	4618      	mov	r0, r3
 8015b88:	370c      	adds	r7, #12
 8015b8a:	46bd      	mov	sp, r7
 8015b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b90:	4770      	bx	lr

08015b92 <USBD_SetClassConfig>:
 8015b92:	b580      	push	{r7, lr}
 8015b94:	b084      	sub	sp, #16
 8015b96:	af00      	add	r7, sp, #0
 8015b98:	6078      	str	r0, [r7, #4]
 8015b9a:	460b      	mov	r3, r1
 8015b9c:	70fb      	strb	r3, [r7, #3]
 8015b9e:	2300      	movs	r3, #0
 8015ba0:	73fb      	strb	r3, [r7, #15]
 8015ba2:	687b      	ldr	r3, [r7, #4]
 8015ba4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ba8:	2b00      	cmp	r3, #0
 8015baa:	d009      	beq.n	8015bc0 <USBD_SetClassConfig+0x2e>
 8015bac:	687b      	ldr	r3, [r7, #4]
 8015bae:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015bb2:	681b      	ldr	r3, [r3, #0]
 8015bb4:	78fa      	ldrb	r2, [r7, #3]
 8015bb6:	4611      	mov	r1, r2
 8015bb8:	6878      	ldr	r0, [r7, #4]
 8015bba:	4798      	blx	r3
 8015bbc:	4603      	mov	r3, r0
 8015bbe:	73fb      	strb	r3, [r7, #15]
 8015bc0:	7bfb      	ldrb	r3, [r7, #15]
 8015bc2:	4618      	mov	r0, r3
 8015bc4:	3710      	adds	r7, #16
 8015bc6:	46bd      	mov	sp, r7
 8015bc8:	bd80      	pop	{r7, pc}

08015bca <USBD_ClrClassConfig>:
 8015bca:	b580      	push	{r7, lr}
 8015bcc:	b084      	sub	sp, #16
 8015bce:	af00      	add	r7, sp, #0
 8015bd0:	6078      	str	r0, [r7, #4]
 8015bd2:	460b      	mov	r3, r1
 8015bd4:	70fb      	strb	r3, [r7, #3]
 8015bd6:	2300      	movs	r3, #0
 8015bd8:	73fb      	strb	r3, [r7, #15]
 8015bda:	687b      	ldr	r3, [r7, #4]
 8015bdc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015be0:	685b      	ldr	r3, [r3, #4]
 8015be2:	78fa      	ldrb	r2, [r7, #3]
 8015be4:	4611      	mov	r1, r2
 8015be6:	6878      	ldr	r0, [r7, #4]
 8015be8:	4798      	blx	r3
 8015bea:	4603      	mov	r3, r0
 8015bec:	2b00      	cmp	r3, #0
 8015bee:	d001      	beq.n	8015bf4 <USBD_ClrClassConfig+0x2a>
 8015bf0:	2303      	movs	r3, #3
 8015bf2:	73fb      	strb	r3, [r7, #15]
 8015bf4:	7bfb      	ldrb	r3, [r7, #15]
 8015bf6:	4618      	mov	r0, r3
 8015bf8:	3710      	adds	r7, #16
 8015bfa:	46bd      	mov	sp, r7
 8015bfc:	bd80      	pop	{r7, pc}

08015bfe <USBD_LL_SetupStage>:
 8015bfe:	b580      	push	{r7, lr}
 8015c00:	b084      	sub	sp, #16
 8015c02:	af00      	add	r7, sp, #0
 8015c04:	6078      	str	r0, [r7, #4]
 8015c06:	6039      	str	r1, [r7, #0]
 8015c08:	687b      	ldr	r3, [r7, #4]
 8015c0a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015c0e:	6839      	ldr	r1, [r7, #0]
 8015c10:	4618      	mov	r0, r3
 8015c12:	f001 f906 	bl	8016e22 <USBD_ParseSetupRequest>
 8015c16:	687b      	ldr	r3, [r7, #4]
 8015c18:	2201      	movs	r2, #1
 8015c1a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015c1e:	687b      	ldr	r3, [r7, #4]
 8015c20:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 8015c24:	461a      	mov	r2, r3
 8015c26:	687b      	ldr	r3, [r7, #4]
 8015c28:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8015c2c:	687b      	ldr	r3, [r7, #4]
 8015c2e:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015c32:	f003 031f 	and.w	r3, r3, #31
 8015c36:	2b02      	cmp	r3, #2
 8015c38:	d01a      	beq.n	8015c70 <USBD_LL_SetupStage+0x72>
 8015c3a:	2b02      	cmp	r3, #2
 8015c3c:	d822      	bhi.n	8015c84 <USBD_LL_SetupStage+0x86>
 8015c3e:	2b00      	cmp	r3, #0
 8015c40:	d002      	beq.n	8015c48 <USBD_LL_SetupStage+0x4a>
 8015c42:	2b01      	cmp	r3, #1
 8015c44:	d00a      	beq.n	8015c5c <USBD_LL_SetupStage+0x5e>
 8015c46:	e01d      	b.n	8015c84 <USBD_LL_SetupStage+0x86>
 8015c48:	687b      	ldr	r3, [r7, #4]
 8015c4a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015c4e:	4619      	mov	r1, r3
 8015c50:	6878      	ldr	r0, [r7, #4]
 8015c52:	f000 fb5d 	bl	8016310 <USBD_StdDevReq>
 8015c56:	4603      	mov	r3, r0
 8015c58:	73fb      	strb	r3, [r7, #15]
 8015c5a:	e020      	b.n	8015c9e <USBD_LL_SetupStage+0xa0>
 8015c5c:	687b      	ldr	r3, [r7, #4]
 8015c5e:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015c62:	4619      	mov	r1, r3
 8015c64:	6878      	ldr	r0, [r7, #4]
 8015c66:	f000 fbc5 	bl	80163f4 <USBD_StdItfReq>
 8015c6a:	4603      	mov	r3, r0
 8015c6c:	73fb      	strb	r3, [r7, #15]
 8015c6e:	e016      	b.n	8015c9e <USBD_LL_SetupStage+0xa0>
 8015c70:	687b      	ldr	r3, [r7, #4]
 8015c72:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015c76:	4619      	mov	r1, r3
 8015c78:	6878      	ldr	r0, [r7, #4]
 8015c7a:	f000 fc27 	bl	80164cc <USBD_StdEPReq>
 8015c7e:	4603      	mov	r3, r0
 8015c80:	73fb      	strb	r3, [r7, #15]
 8015c82:	e00c      	b.n	8015c9e <USBD_LL_SetupStage+0xa0>
 8015c84:	687b      	ldr	r3, [r7, #4]
 8015c86:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015c8a:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8015c8e:	b2db      	uxtb	r3, r3
 8015c90:	4619      	mov	r1, r3
 8015c92:	6878      	ldr	r0, [r7, #4]
 8015c94:	f004 ff0a 	bl	801aaac <USBD_LL_StallEP>
 8015c98:	4603      	mov	r3, r0
 8015c9a:	73fb      	strb	r3, [r7, #15]
 8015c9c:	bf00      	nop
 8015c9e:	7bfb      	ldrb	r3, [r7, #15]
 8015ca0:	4618      	mov	r0, r3
 8015ca2:	3710      	adds	r7, #16
 8015ca4:	46bd      	mov	sp, r7
 8015ca6:	bd80      	pop	{r7, pc}

08015ca8 <USBD_LL_DataOutStage>:
 8015ca8:	b580      	push	{r7, lr}
 8015caa:	b086      	sub	sp, #24
 8015cac:	af00      	add	r7, sp, #0
 8015cae:	60f8      	str	r0, [r7, #12]
 8015cb0:	460b      	mov	r3, r1
 8015cb2:	607a      	str	r2, [r7, #4]
 8015cb4:	72fb      	strb	r3, [r7, #11]
 8015cb6:	2300      	movs	r3, #0
 8015cb8:	75fb      	strb	r3, [r7, #23]
 8015cba:	7afb      	ldrb	r3, [r7, #11]
 8015cbc:	2b00      	cmp	r3, #0
 8015cbe:	d16e      	bne.n	8015d9e <USBD_LL_DataOutStage+0xf6>
 8015cc0:	68fb      	ldr	r3, [r7, #12]
 8015cc2:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 8015cc6:	613b      	str	r3, [r7, #16]
 8015cc8:	68fb      	ldr	r3, [r7, #12]
 8015cca:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8015cce:	2b03      	cmp	r3, #3
 8015cd0:	f040 8098 	bne.w	8015e04 <USBD_LL_DataOutStage+0x15c>
 8015cd4:	693b      	ldr	r3, [r7, #16]
 8015cd6:	689a      	ldr	r2, [r3, #8]
 8015cd8:	693b      	ldr	r3, [r7, #16]
 8015cda:	68db      	ldr	r3, [r3, #12]
 8015cdc:	429a      	cmp	r2, r3
 8015cde:	d913      	bls.n	8015d08 <USBD_LL_DataOutStage+0x60>
 8015ce0:	693b      	ldr	r3, [r7, #16]
 8015ce2:	689a      	ldr	r2, [r3, #8]
 8015ce4:	693b      	ldr	r3, [r7, #16]
 8015ce6:	68db      	ldr	r3, [r3, #12]
 8015ce8:	1ad2      	subs	r2, r2, r3
 8015cea:	693b      	ldr	r3, [r7, #16]
 8015cec:	609a      	str	r2, [r3, #8]
 8015cee:	693b      	ldr	r3, [r7, #16]
 8015cf0:	68da      	ldr	r2, [r3, #12]
 8015cf2:	693b      	ldr	r3, [r7, #16]
 8015cf4:	689b      	ldr	r3, [r3, #8]
 8015cf6:	4293      	cmp	r3, r2
 8015cf8:	bf28      	it	cs
 8015cfa:	4613      	movcs	r3, r2
 8015cfc:	461a      	mov	r2, r3
 8015cfe:	6879      	ldr	r1, [r7, #4]
 8015d00:	68f8      	ldr	r0, [r7, #12]
 8015d02:	f001 f982 	bl	801700a <USBD_CtlContinueRx>
 8015d06:	e07d      	b.n	8015e04 <USBD_LL_DataOutStage+0x15c>
 8015d08:	68fb      	ldr	r3, [r7, #12]
 8015d0a:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015d0e:	f003 031f 	and.w	r3, r3, #31
 8015d12:	2b02      	cmp	r3, #2
 8015d14:	d014      	beq.n	8015d40 <USBD_LL_DataOutStage+0x98>
 8015d16:	2b02      	cmp	r3, #2
 8015d18:	d81d      	bhi.n	8015d56 <USBD_LL_DataOutStage+0xae>
 8015d1a:	2b00      	cmp	r3, #0
 8015d1c:	d002      	beq.n	8015d24 <USBD_LL_DataOutStage+0x7c>
 8015d1e:	2b01      	cmp	r3, #1
 8015d20:	d003      	beq.n	8015d2a <USBD_LL_DataOutStage+0x82>
 8015d22:	e018      	b.n	8015d56 <USBD_LL_DataOutStage+0xae>
 8015d24:	2300      	movs	r3, #0
 8015d26:	75bb      	strb	r3, [r7, #22]
 8015d28:	e018      	b.n	8015d5c <USBD_LL_DataOutStage+0xb4>
 8015d2a:	68fb      	ldr	r3, [r7, #12]
 8015d2c:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8015d30:	b2db      	uxtb	r3, r3
 8015d32:	4619      	mov	r1, r3
 8015d34:	68f8      	ldr	r0, [r7, #12]
 8015d36:	f000 fa5e 	bl	80161f6 <USBD_CoreFindIF>
 8015d3a:	4603      	mov	r3, r0
 8015d3c:	75bb      	strb	r3, [r7, #22]
 8015d3e:	e00d      	b.n	8015d5c <USBD_LL_DataOutStage+0xb4>
 8015d40:	68fb      	ldr	r3, [r7, #12]
 8015d42:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8015d46:	b2db      	uxtb	r3, r3
 8015d48:	4619      	mov	r1, r3
 8015d4a:	68f8      	ldr	r0, [r7, #12]
 8015d4c:	f000 fa60 	bl	8016210 <USBD_CoreFindEP>
 8015d50:	4603      	mov	r3, r0
 8015d52:	75bb      	strb	r3, [r7, #22]
 8015d54:	e002      	b.n	8015d5c <USBD_LL_DataOutStage+0xb4>
 8015d56:	2300      	movs	r3, #0
 8015d58:	75bb      	strb	r3, [r7, #22]
 8015d5a:	bf00      	nop
 8015d5c:	7dbb      	ldrb	r3, [r7, #22]
 8015d5e:	2b00      	cmp	r3, #0
 8015d60:	d119      	bne.n	8015d96 <USBD_LL_DataOutStage+0xee>
 8015d62:	68fb      	ldr	r3, [r7, #12]
 8015d64:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015d68:	b2db      	uxtb	r3, r3
 8015d6a:	2b03      	cmp	r3, #3
 8015d6c:	d113      	bne.n	8015d96 <USBD_LL_DataOutStage+0xee>
 8015d6e:	7dba      	ldrb	r2, [r7, #22]
 8015d70:	68fb      	ldr	r3, [r7, #12]
 8015d72:	32ae      	adds	r2, #174	@ 0xae
 8015d74:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015d78:	691b      	ldr	r3, [r3, #16]
 8015d7a:	2b00      	cmp	r3, #0
 8015d7c:	d00b      	beq.n	8015d96 <USBD_LL_DataOutStage+0xee>
 8015d7e:	7dba      	ldrb	r2, [r7, #22]
 8015d80:	68fb      	ldr	r3, [r7, #12]
 8015d82:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015d86:	7dba      	ldrb	r2, [r7, #22]
 8015d88:	68fb      	ldr	r3, [r7, #12]
 8015d8a:	32ae      	adds	r2, #174	@ 0xae
 8015d8c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015d90:	691b      	ldr	r3, [r3, #16]
 8015d92:	68f8      	ldr	r0, [r7, #12]
 8015d94:	4798      	blx	r3
 8015d96:	68f8      	ldr	r0, [r7, #12]
 8015d98:	f001 f948 	bl	801702c <USBD_CtlSendStatus>
 8015d9c:	e032      	b.n	8015e04 <USBD_LL_DataOutStage+0x15c>
 8015d9e:	7afb      	ldrb	r3, [r7, #11]
 8015da0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8015da4:	b2db      	uxtb	r3, r3
 8015da6:	4619      	mov	r1, r3
 8015da8:	68f8      	ldr	r0, [r7, #12]
 8015daa:	f000 fa31 	bl	8016210 <USBD_CoreFindEP>
 8015dae:	4603      	mov	r3, r0
 8015db0:	75bb      	strb	r3, [r7, #22]
 8015db2:	7dbb      	ldrb	r3, [r7, #22]
 8015db4:	2bff      	cmp	r3, #255	@ 0xff
 8015db6:	d025      	beq.n	8015e04 <USBD_LL_DataOutStage+0x15c>
 8015db8:	7dbb      	ldrb	r3, [r7, #22]
 8015dba:	2b00      	cmp	r3, #0
 8015dbc:	d122      	bne.n	8015e04 <USBD_LL_DataOutStage+0x15c>
 8015dbe:	68fb      	ldr	r3, [r7, #12]
 8015dc0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015dc4:	b2db      	uxtb	r3, r3
 8015dc6:	2b03      	cmp	r3, #3
 8015dc8:	d117      	bne.n	8015dfa <USBD_LL_DataOutStage+0x152>
 8015dca:	7dba      	ldrb	r2, [r7, #22]
 8015dcc:	68fb      	ldr	r3, [r7, #12]
 8015dce:	32ae      	adds	r2, #174	@ 0xae
 8015dd0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015dd4:	699b      	ldr	r3, [r3, #24]
 8015dd6:	2b00      	cmp	r3, #0
 8015dd8:	d00f      	beq.n	8015dfa <USBD_LL_DataOutStage+0x152>
 8015dda:	7dba      	ldrb	r2, [r7, #22]
 8015ddc:	68fb      	ldr	r3, [r7, #12]
 8015dde:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015de2:	7dba      	ldrb	r2, [r7, #22]
 8015de4:	68fb      	ldr	r3, [r7, #12]
 8015de6:	32ae      	adds	r2, #174	@ 0xae
 8015de8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015dec:	699b      	ldr	r3, [r3, #24]
 8015dee:	7afa      	ldrb	r2, [r7, #11]
 8015df0:	4611      	mov	r1, r2
 8015df2:	68f8      	ldr	r0, [r7, #12]
 8015df4:	4798      	blx	r3
 8015df6:	4603      	mov	r3, r0
 8015df8:	75fb      	strb	r3, [r7, #23]
 8015dfa:	7dfb      	ldrb	r3, [r7, #23]
 8015dfc:	2b00      	cmp	r3, #0
 8015dfe:	d001      	beq.n	8015e04 <USBD_LL_DataOutStage+0x15c>
 8015e00:	7dfb      	ldrb	r3, [r7, #23]
 8015e02:	e000      	b.n	8015e06 <USBD_LL_DataOutStage+0x15e>
 8015e04:	2300      	movs	r3, #0
 8015e06:	4618      	mov	r0, r3
 8015e08:	3718      	adds	r7, #24
 8015e0a:	46bd      	mov	sp, r7
 8015e0c:	bd80      	pop	{r7, pc}

08015e0e <USBD_LL_DataInStage>:
 8015e0e:	b580      	push	{r7, lr}
 8015e10:	b086      	sub	sp, #24
 8015e12:	af00      	add	r7, sp, #0
 8015e14:	60f8      	str	r0, [r7, #12]
 8015e16:	460b      	mov	r3, r1
 8015e18:	607a      	str	r2, [r7, #4]
 8015e1a:	72fb      	strb	r3, [r7, #11]
 8015e1c:	7afb      	ldrb	r3, [r7, #11]
 8015e1e:	2b00      	cmp	r3, #0
 8015e20:	d16f      	bne.n	8015f02 <USBD_LL_DataInStage+0xf4>
 8015e22:	68fb      	ldr	r3, [r7, #12]
 8015e24:	3314      	adds	r3, #20
 8015e26:	613b      	str	r3, [r7, #16]
 8015e28:	68fb      	ldr	r3, [r7, #12]
 8015e2a:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8015e2e:	2b02      	cmp	r3, #2
 8015e30:	d15a      	bne.n	8015ee8 <USBD_LL_DataInStage+0xda>
 8015e32:	693b      	ldr	r3, [r7, #16]
 8015e34:	689a      	ldr	r2, [r3, #8]
 8015e36:	693b      	ldr	r3, [r7, #16]
 8015e38:	68db      	ldr	r3, [r3, #12]
 8015e3a:	429a      	cmp	r2, r3
 8015e3c:	d914      	bls.n	8015e68 <USBD_LL_DataInStage+0x5a>
 8015e3e:	693b      	ldr	r3, [r7, #16]
 8015e40:	689a      	ldr	r2, [r3, #8]
 8015e42:	693b      	ldr	r3, [r7, #16]
 8015e44:	68db      	ldr	r3, [r3, #12]
 8015e46:	1ad2      	subs	r2, r2, r3
 8015e48:	693b      	ldr	r3, [r7, #16]
 8015e4a:	609a      	str	r2, [r3, #8]
 8015e4c:	693b      	ldr	r3, [r7, #16]
 8015e4e:	689b      	ldr	r3, [r3, #8]
 8015e50:	461a      	mov	r2, r3
 8015e52:	6879      	ldr	r1, [r7, #4]
 8015e54:	68f8      	ldr	r0, [r7, #12]
 8015e56:	f001 f8aa 	bl	8016fae <USBD_CtlContinueSendData>
 8015e5a:	2300      	movs	r3, #0
 8015e5c:	2200      	movs	r2, #0
 8015e5e:	2100      	movs	r1, #0
 8015e60:	68f8      	ldr	r0, [r7, #12]
 8015e62:	f004 fecd 	bl	801ac00 <USBD_LL_PrepareReceive>
 8015e66:	e03f      	b.n	8015ee8 <USBD_LL_DataInStage+0xda>
 8015e68:	693b      	ldr	r3, [r7, #16]
 8015e6a:	68da      	ldr	r2, [r3, #12]
 8015e6c:	693b      	ldr	r3, [r7, #16]
 8015e6e:	689b      	ldr	r3, [r3, #8]
 8015e70:	429a      	cmp	r2, r3
 8015e72:	d11c      	bne.n	8015eae <USBD_LL_DataInStage+0xa0>
 8015e74:	693b      	ldr	r3, [r7, #16]
 8015e76:	685a      	ldr	r2, [r3, #4]
 8015e78:	693b      	ldr	r3, [r7, #16]
 8015e7a:	68db      	ldr	r3, [r3, #12]
 8015e7c:	429a      	cmp	r2, r3
 8015e7e:	d316      	bcc.n	8015eae <USBD_LL_DataInStage+0xa0>
 8015e80:	693b      	ldr	r3, [r7, #16]
 8015e82:	685a      	ldr	r2, [r3, #4]
 8015e84:	68fb      	ldr	r3, [r7, #12]
 8015e86:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 8015e8a:	429a      	cmp	r2, r3
 8015e8c:	d20f      	bcs.n	8015eae <USBD_LL_DataInStage+0xa0>
 8015e8e:	2200      	movs	r2, #0
 8015e90:	2100      	movs	r1, #0
 8015e92:	68f8      	ldr	r0, [r7, #12]
 8015e94:	f001 f88b 	bl	8016fae <USBD_CtlContinueSendData>
 8015e98:	68fb      	ldr	r3, [r7, #12]
 8015e9a:	2200      	movs	r2, #0
 8015e9c:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8015ea0:	2300      	movs	r3, #0
 8015ea2:	2200      	movs	r2, #0
 8015ea4:	2100      	movs	r1, #0
 8015ea6:	68f8      	ldr	r0, [r7, #12]
 8015ea8:	f004 feaa 	bl	801ac00 <USBD_LL_PrepareReceive>
 8015eac:	e01c      	b.n	8015ee8 <USBD_LL_DataInStage+0xda>
 8015eae:	68fb      	ldr	r3, [r7, #12]
 8015eb0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015eb4:	b2db      	uxtb	r3, r3
 8015eb6:	2b03      	cmp	r3, #3
 8015eb8:	d10f      	bne.n	8015eda <USBD_LL_DataInStage+0xcc>
 8015eba:	68fb      	ldr	r3, [r7, #12]
 8015ebc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ec0:	68db      	ldr	r3, [r3, #12]
 8015ec2:	2b00      	cmp	r3, #0
 8015ec4:	d009      	beq.n	8015eda <USBD_LL_DataInStage+0xcc>
 8015ec6:	68fb      	ldr	r3, [r7, #12]
 8015ec8:	2200      	movs	r2, #0
 8015eca:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015ece:	68fb      	ldr	r3, [r7, #12]
 8015ed0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ed4:	68db      	ldr	r3, [r3, #12]
 8015ed6:	68f8      	ldr	r0, [r7, #12]
 8015ed8:	4798      	blx	r3
 8015eda:	2180      	movs	r1, #128	@ 0x80
 8015edc:	68f8      	ldr	r0, [r7, #12]
 8015ede:	f004 fde5 	bl	801aaac <USBD_LL_StallEP>
 8015ee2:	68f8      	ldr	r0, [r7, #12]
 8015ee4:	f001 f8b5 	bl	8017052 <USBD_CtlReceiveStatus>
 8015ee8:	68fb      	ldr	r3, [r7, #12]
 8015eea:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8015eee:	2b00      	cmp	r3, #0
 8015ef0:	d03a      	beq.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015ef2:	68f8      	ldr	r0, [r7, #12]
 8015ef4:	f7ff fe42 	bl	8015b7c <USBD_RunTestMode>
 8015ef8:	68fb      	ldr	r3, [r7, #12]
 8015efa:	2200      	movs	r2, #0
 8015efc:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8015f00:	e032      	b.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015f02:	7afb      	ldrb	r3, [r7, #11]
 8015f04:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8015f08:	b2db      	uxtb	r3, r3
 8015f0a:	4619      	mov	r1, r3
 8015f0c:	68f8      	ldr	r0, [r7, #12]
 8015f0e:	f000 f97f 	bl	8016210 <USBD_CoreFindEP>
 8015f12:	4603      	mov	r3, r0
 8015f14:	75fb      	strb	r3, [r7, #23]
 8015f16:	7dfb      	ldrb	r3, [r7, #23]
 8015f18:	2bff      	cmp	r3, #255	@ 0xff
 8015f1a:	d025      	beq.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015f1c:	7dfb      	ldrb	r3, [r7, #23]
 8015f1e:	2b00      	cmp	r3, #0
 8015f20:	d122      	bne.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015f22:	68fb      	ldr	r3, [r7, #12]
 8015f24:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015f28:	b2db      	uxtb	r3, r3
 8015f2a:	2b03      	cmp	r3, #3
 8015f2c:	d11c      	bne.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015f2e:	7dfa      	ldrb	r2, [r7, #23]
 8015f30:	68fb      	ldr	r3, [r7, #12]
 8015f32:	32ae      	adds	r2, #174	@ 0xae
 8015f34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015f38:	695b      	ldr	r3, [r3, #20]
 8015f3a:	2b00      	cmp	r3, #0
 8015f3c:	d014      	beq.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015f3e:	7dfa      	ldrb	r2, [r7, #23]
 8015f40:	68fb      	ldr	r3, [r7, #12]
 8015f42:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015f46:	7dfa      	ldrb	r2, [r7, #23]
 8015f48:	68fb      	ldr	r3, [r7, #12]
 8015f4a:	32ae      	adds	r2, #174	@ 0xae
 8015f4c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015f50:	695b      	ldr	r3, [r3, #20]
 8015f52:	7afa      	ldrb	r2, [r7, #11]
 8015f54:	4611      	mov	r1, r2
 8015f56:	68f8      	ldr	r0, [r7, #12]
 8015f58:	4798      	blx	r3
 8015f5a:	4603      	mov	r3, r0
 8015f5c:	75bb      	strb	r3, [r7, #22]
 8015f5e:	7dbb      	ldrb	r3, [r7, #22]
 8015f60:	2b00      	cmp	r3, #0
 8015f62:	d001      	beq.n	8015f68 <USBD_LL_DataInStage+0x15a>
 8015f64:	7dbb      	ldrb	r3, [r7, #22]
 8015f66:	e000      	b.n	8015f6a <USBD_LL_DataInStage+0x15c>
 8015f68:	2300      	movs	r3, #0
 8015f6a:	4618      	mov	r0, r3
 8015f6c:	3718      	adds	r7, #24
 8015f6e:	46bd      	mov	sp, r7
 8015f70:	bd80      	pop	{r7, pc}

08015f72 <USBD_LL_Reset>:
 8015f72:	b580      	push	{r7, lr}
 8015f74:	b084      	sub	sp, #16
 8015f76:	af00      	add	r7, sp, #0
 8015f78:	6078      	str	r0, [r7, #4]
 8015f7a:	2300      	movs	r3, #0
 8015f7c:	73fb      	strb	r3, [r7, #15]
 8015f7e:	687b      	ldr	r3, [r7, #4]
 8015f80:	2201      	movs	r2, #1
 8015f82:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015f86:	687b      	ldr	r3, [r7, #4]
 8015f88:	2200      	movs	r2, #0
 8015f8a:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015f8e:	687b      	ldr	r3, [r7, #4]
 8015f90:	2200      	movs	r2, #0
 8015f92:	605a      	str	r2, [r3, #4]
 8015f94:	687b      	ldr	r3, [r7, #4]
 8015f96:	2200      	movs	r2, #0
 8015f98:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8015f9c:	687b      	ldr	r3, [r7, #4]
 8015f9e:	2200      	movs	r2, #0
 8015fa0:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8015fa4:	687b      	ldr	r3, [r7, #4]
 8015fa6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015faa:	2b00      	cmp	r3, #0
 8015fac:	d014      	beq.n	8015fd8 <USBD_LL_Reset+0x66>
 8015fae:	687b      	ldr	r3, [r7, #4]
 8015fb0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015fb4:	685b      	ldr	r3, [r3, #4]
 8015fb6:	2b00      	cmp	r3, #0
 8015fb8:	d00e      	beq.n	8015fd8 <USBD_LL_Reset+0x66>
 8015fba:	687b      	ldr	r3, [r7, #4]
 8015fbc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015fc0:	685b      	ldr	r3, [r3, #4]
 8015fc2:	687a      	ldr	r2, [r7, #4]
 8015fc4:	6852      	ldr	r2, [r2, #4]
 8015fc6:	b2d2      	uxtb	r2, r2
 8015fc8:	4611      	mov	r1, r2
 8015fca:	6878      	ldr	r0, [r7, #4]
 8015fcc:	4798      	blx	r3
 8015fce:	4603      	mov	r3, r0
 8015fd0:	2b00      	cmp	r3, #0
 8015fd2:	d001      	beq.n	8015fd8 <USBD_LL_Reset+0x66>
 8015fd4:	2303      	movs	r3, #3
 8015fd6:	73fb      	strb	r3, [r7, #15]
 8015fd8:	2340      	movs	r3, #64	@ 0x40
 8015fda:	2200      	movs	r2, #0
 8015fdc:	2100      	movs	r1, #0
 8015fde:	6878      	ldr	r0, [r7, #4]
 8015fe0:	f004 fd1f 	bl	801aa22 <USBD_LL_OpenEP>
 8015fe4:	687b      	ldr	r3, [r7, #4]
 8015fe6:	2201      	movs	r2, #1
 8015fe8:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 8015fec:	687b      	ldr	r3, [r7, #4]
 8015fee:	2240      	movs	r2, #64	@ 0x40
 8015ff0:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 8015ff4:	2340      	movs	r3, #64	@ 0x40
 8015ff6:	2200      	movs	r2, #0
 8015ff8:	2180      	movs	r1, #128	@ 0x80
 8015ffa:	6878      	ldr	r0, [r7, #4]
 8015ffc:	f004 fd11 	bl	801aa22 <USBD_LL_OpenEP>
 8016000:	687b      	ldr	r3, [r7, #4]
 8016002:	2201      	movs	r2, #1
 8016004:	849a      	strh	r2, [r3, #36]	@ 0x24
 8016006:	687b      	ldr	r3, [r7, #4]
 8016008:	2240      	movs	r2, #64	@ 0x40
 801600a:	621a      	str	r2, [r3, #32]
 801600c:	7bfb      	ldrb	r3, [r7, #15]
 801600e:	4618      	mov	r0, r3
 8016010:	3710      	adds	r7, #16
 8016012:	46bd      	mov	sp, r7
 8016014:	bd80      	pop	{r7, pc}

08016016 <USBD_LL_SetSpeed>:
 8016016:	b480      	push	{r7}
 8016018:	b083      	sub	sp, #12
 801601a:	af00      	add	r7, sp, #0
 801601c:	6078      	str	r0, [r7, #4]
 801601e:	460b      	mov	r3, r1
 8016020:	70fb      	strb	r3, [r7, #3]
 8016022:	687b      	ldr	r3, [r7, #4]
 8016024:	78fa      	ldrb	r2, [r7, #3]
 8016026:	741a      	strb	r2, [r3, #16]
 8016028:	2300      	movs	r3, #0
 801602a:	4618      	mov	r0, r3
 801602c:	370c      	adds	r7, #12
 801602e:	46bd      	mov	sp, r7
 8016030:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016034:	4770      	bx	lr

08016036 <USBD_LL_Suspend>:
 8016036:	b480      	push	{r7}
 8016038:	b083      	sub	sp, #12
 801603a:	af00      	add	r7, sp, #0
 801603c:	6078      	str	r0, [r7, #4]
 801603e:	687b      	ldr	r3, [r7, #4]
 8016040:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016044:	b2da      	uxtb	r2, r3
 8016046:	687b      	ldr	r3, [r7, #4]
 8016048:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 801604c:	687b      	ldr	r3, [r7, #4]
 801604e:	2204      	movs	r2, #4
 8016050:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016054:	2300      	movs	r3, #0
 8016056:	4618      	mov	r0, r3
 8016058:	370c      	adds	r7, #12
 801605a:	46bd      	mov	sp, r7
 801605c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016060:	4770      	bx	lr

08016062 <USBD_LL_Resume>:
 8016062:	b480      	push	{r7}
 8016064:	b083      	sub	sp, #12
 8016066:	af00      	add	r7, sp, #0
 8016068:	6078      	str	r0, [r7, #4]
 801606a:	687b      	ldr	r3, [r7, #4]
 801606c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016070:	b2db      	uxtb	r3, r3
 8016072:	2b04      	cmp	r3, #4
 8016074:	d106      	bne.n	8016084 <USBD_LL_Resume+0x22>
 8016076:	687b      	ldr	r3, [r7, #4]
 8016078:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 801607c:	b2da      	uxtb	r2, r3
 801607e:	687b      	ldr	r3, [r7, #4]
 8016080:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016084:	2300      	movs	r3, #0
 8016086:	4618      	mov	r0, r3
 8016088:	370c      	adds	r7, #12
 801608a:	46bd      	mov	sp, r7
 801608c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016090:	4770      	bx	lr

08016092 <USBD_LL_SOF>:
 8016092:	b580      	push	{r7, lr}
 8016094:	b082      	sub	sp, #8
 8016096:	af00      	add	r7, sp, #0
 8016098:	6078      	str	r0, [r7, #4]
 801609a:	687b      	ldr	r3, [r7, #4]
 801609c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80160a0:	b2db      	uxtb	r3, r3
 80160a2:	2b03      	cmp	r3, #3
 80160a4:	d110      	bne.n	80160c8 <USBD_LL_SOF+0x36>
 80160a6:	687b      	ldr	r3, [r7, #4]
 80160a8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80160ac:	2b00      	cmp	r3, #0
 80160ae:	d00b      	beq.n	80160c8 <USBD_LL_SOF+0x36>
 80160b0:	687b      	ldr	r3, [r7, #4]
 80160b2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80160b6:	69db      	ldr	r3, [r3, #28]
 80160b8:	2b00      	cmp	r3, #0
 80160ba:	d005      	beq.n	80160c8 <USBD_LL_SOF+0x36>
 80160bc:	687b      	ldr	r3, [r7, #4]
 80160be:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80160c2:	69db      	ldr	r3, [r3, #28]
 80160c4:	6878      	ldr	r0, [r7, #4]
 80160c6:	4798      	blx	r3
 80160c8:	2300      	movs	r3, #0
 80160ca:	4618      	mov	r0, r3
 80160cc:	3708      	adds	r7, #8
 80160ce:	46bd      	mov	sp, r7
 80160d0:	bd80      	pop	{r7, pc}

080160d2 <USBD_LL_IsoINIncomplete>:
 80160d2:	b580      	push	{r7, lr}
 80160d4:	b082      	sub	sp, #8
 80160d6:	af00      	add	r7, sp, #0
 80160d8:	6078      	str	r0, [r7, #4]
 80160da:	460b      	mov	r3, r1
 80160dc:	70fb      	strb	r3, [r7, #3]
 80160de:	687b      	ldr	r3, [r7, #4]
 80160e0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80160e4:	687b      	ldr	r3, [r7, #4]
 80160e6:	32ae      	adds	r2, #174	@ 0xae
 80160e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80160ec:	2b00      	cmp	r3, #0
 80160ee:	d101      	bne.n	80160f4 <USBD_LL_IsoINIncomplete+0x22>
 80160f0:	2303      	movs	r3, #3
 80160f2:	e01c      	b.n	801612e <USBD_LL_IsoINIncomplete+0x5c>
 80160f4:	687b      	ldr	r3, [r7, #4]
 80160f6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80160fa:	b2db      	uxtb	r3, r3
 80160fc:	2b03      	cmp	r3, #3
 80160fe:	d115      	bne.n	801612c <USBD_LL_IsoINIncomplete+0x5a>
 8016100:	687b      	ldr	r3, [r7, #4]
 8016102:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016106:	687b      	ldr	r3, [r7, #4]
 8016108:	32ae      	adds	r2, #174	@ 0xae
 801610a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801610e:	6a1b      	ldr	r3, [r3, #32]
 8016110:	2b00      	cmp	r3, #0
 8016112:	d00b      	beq.n	801612c <USBD_LL_IsoINIncomplete+0x5a>
 8016114:	687b      	ldr	r3, [r7, #4]
 8016116:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801611a:	687b      	ldr	r3, [r7, #4]
 801611c:	32ae      	adds	r2, #174	@ 0xae
 801611e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016122:	6a1b      	ldr	r3, [r3, #32]
 8016124:	78fa      	ldrb	r2, [r7, #3]
 8016126:	4611      	mov	r1, r2
 8016128:	6878      	ldr	r0, [r7, #4]
 801612a:	4798      	blx	r3
 801612c:	2300      	movs	r3, #0
 801612e:	4618      	mov	r0, r3
 8016130:	3708      	adds	r7, #8
 8016132:	46bd      	mov	sp, r7
 8016134:	bd80      	pop	{r7, pc}

08016136 <USBD_LL_IsoOUTIncomplete>:
 8016136:	b580      	push	{r7, lr}
 8016138:	b082      	sub	sp, #8
 801613a:	af00      	add	r7, sp, #0
 801613c:	6078      	str	r0, [r7, #4]
 801613e:	460b      	mov	r3, r1
 8016140:	70fb      	strb	r3, [r7, #3]
 8016142:	687b      	ldr	r3, [r7, #4]
 8016144:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016148:	687b      	ldr	r3, [r7, #4]
 801614a:	32ae      	adds	r2, #174	@ 0xae
 801614c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016150:	2b00      	cmp	r3, #0
 8016152:	d101      	bne.n	8016158 <USBD_LL_IsoOUTIncomplete+0x22>
 8016154:	2303      	movs	r3, #3
 8016156:	e01c      	b.n	8016192 <USBD_LL_IsoOUTIncomplete+0x5c>
 8016158:	687b      	ldr	r3, [r7, #4]
 801615a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801615e:	b2db      	uxtb	r3, r3
 8016160:	2b03      	cmp	r3, #3
 8016162:	d115      	bne.n	8016190 <USBD_LL_IsoOUTIncomplete+0x5a>
 8016164:	687b      	ldr	r3, [r7, #4]
 8016166:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801616a:	687b      	ldr	r3, [r7, #4]
 801616c:	32ae      	adds	r2, #174	@ 0xae
 801616e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016172:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016174:	2b00      	cmp	r3, #0
 8016176:	d00b      	beq.n	8016190 <USBD_LL_IsoOUTIncomplete+0x5a>
 8016178:	687b      	ldr	r3, [r7, #4]
 801617a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801617e:	687b      	ldr	r3, [r7, #4]
 8016180:	32ae      	adds	r2, #174	@ 0xae
 8016182:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016186:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016188:	78fa      	ldrb	r2, [r7, #3]
 801618a:	4611      	mov	r1, r2
 801618c:	6878      	ldr	r0, [r7, #4]
 801618e:	4798      	blx	r3
 8016190:	2300      	movs	r3, #0
 8016192:	4618      	mov	r0, r3
 8016194:	3708      	adds	r7, #8
 8016196:	46bd      	mov	sp, r7
 8016198:	bd80      	pop	{r7, pc}

0801619a <USBD_LL_DevConnected>:
 801619a:	b480      	push	{r7}
 801619c:	b083      	sub	sp, #12
 801619e:	af00      	add	r7, sp, #0
 80161a0:	6078      	str	r0, [r7, #4]
 80161a2:	2300      	movs	r3, #0
 80161a4:	4618      	mov	r0, r3
 80161a6:	370c      	adds	r7, #12
 80161a8:	46bd      	mov	sp, r7
 80161aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161ae:	4770      	bx	lr

080161b0 <USBD_LL_DevDisconnected>:
 80161b0:	b580      	push	{r7, lr}
 80161b2:	b084      	sub	sp, #16
 80161b4:	af00      	add	r7, sp, #0
 80161b6:	6078      	str	r0, [r7, #4]
 80161b8:	2300      	movs	r3, #0
 80161ba:	73fb      	strb	r3, [r7, #15]
 80161bc:	687b      	ldr	r3, [r7, #4]
 80161be:	2201      	movs	r2, #1
 80161c0:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80161c4:	687b      	ldr	r3, [r7, #4]
 80161c6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80161ca:	2b00      	cmp	r3, #0
 80161cc:	d00e      	beq.n	80161ec <USBD_LL_DevDisconnected+0x3c>
 80161ce:	687b      	ldr	r3, [r7, #4]
 80161d0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80161d4:	685b      	ldr	r3, [r3, #4]
 80161d6:	687a      	ldr	r2, [r7, #4]
 80161d8:	6852      	ldr	r2, [r2, #4]
 80161da:	b2d2      	uxtb	r2, r2
 80161dc:	4611      	mov	r1, r2
 80161de:	6878      	ldr	r0, [r7, #4]
 80161e0:	4798      	blx	r3
 80161e2:	4603      	mov	r3, r0
 80161e4:	2b00      	cmp	r3, #0
 80161e6:	d001      	beq.n	80161ec <USBD_LL_DevDisconnected+0x3c>
 80161e8:	2303      	movs	r3, #3
 80161ea:	73fb      	strb	r3, [r7, #15]
 80161ec:	7bfb      	ldrb	r3, [r7, #15]
 80161ee:	4618      	mov	r0, r3
 80161f0:	3710      	adds	r7, #16
 80161f2:	46bd      	mov	sp, r7
 80161f4:	bd80      	pop	{r7, pc}

080161f6 <USBD_CoreFindIF>:
 80161f6:	b480      	push	{r7}
 80161f8:	b083      	sub	sp, #12
 80161fa:	af00      	add	r7, sp, #0
 80161fc:	6078      	str	r0, [r7, #4]
 80161fe:	460b      	mov	r3, r1
 8016200:	70fb      	strb	r3, [r7, #3]
 8016202:	2300      	movs	r3, #0
 8016204:	4618      	mov	r0, r3
 8016206:	370c      	adds	r7, #12
 8016208:	46bd      	mov	sp, r7
 801620a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801620e:	4770      	bx	lr

08016210 <USBD_CoreFindEP>:
 8016210:	b480      	push	{r7}
 8016212:	b083      	sub	sp, #12
 8016214:	af00      	add	r7, sp, #0
 8016216:	6078      	str	r0, [r7, #4]
 8016218:	460b      	mov	r3, r1
 801621a:	70fb      	strb	r3, [r7, #3]
 801621c:	2300      	movs	r3, #0
 801621e:	4618      	mov	r0, r3
 8016220:	370c      	adds	r7, #12
 8016222:	46bd      	mov	sp, r7
 8016224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016228:	4770      	bx	lr

0801622a <USBD_GetEpDesc>:
 801622a:	b580      	push	{r7, lr}
 801622c:	b086      	sub	sp, #24
 801622e:	af00      	add	r7, sp, #0
 8016230:	6078      	str	r0, [r7, #4]
 8016232:	460b      	mov	r3, r1
 8016234:	70fb      	strb	r3, [r7, #3]
 8016236:	687b      	ldr	r3, [r7, #4]
 8016238:	617b      	str	r3, [r7, #20]
 801623a:	687b      	ldr	r3, [r7, #4]
 801623c:	60fb      	str	r3, [r7, #12]
 801623e:	2300      	movs	r3, #0
 8016240:	613b      	str	r3, [r7, #16]
 8016242:	68fb      	ldr	r3, [r7, #12]
 8016244:	885b      	ldrh	r3, [r3, #2]
 8016246:	b29b      	uxth	r3, r3
 8016248:	68fa      	ldr	r2, [r7, #12]
 801624a:	7812      	ldrb	r2, [r2, #0]
 801624c:	4293      	cmp	r3, r2
 801624e:	d91f      	bls.n	8016290 <USBD_GetEpDesc+0x66>
 8016250:	68fb      	ldr	r3, [r7, #12]
 8016252:	781b      	ldrb	r3, [r3, #0]
 8016254:	817b      	strh	r3, [r7, #10]
 8016256:	e013      	b.n	8016280 <USBD_GetEpDesc+0x56>
 8016258:	f107 030a 	add.w	r3, r7, #10
 801625c:	4619      	mov	r1, r3
 801625e:	6978      	ldr	r0, [r7, #20]
 8016260:	f000 f81b 	bl	801629a <USBD_GetNextDesc>
 8016264:	6178      	str	r0, [r7, #20]
 8016266:	697b      	ldr	r3, [r7, #20]
 8016268:	785b      	ldrb	r3, [r3, #1]
 801626a:	2b05      	cmp	r3, #5
 801626c:	d108      	bne.n	8016280 <USBD_GetEpDesc+0x56>
 801626e:	697b      	ldr	r3, [r7, #20]
 8016270:	613b      	str	r3, [r7, #16]
 8016272:	693b      	ldr	r3, [r7, #16]
 8016274:	789b      	ldrb	r3, [r3, #2]
 8016276:	78fa      	ldrb	r2, [r7, #3]
 8016278:	429a      	cmp	r2, r3
 801627a:	d008      	beq.n	801628e <USBD_GetEpDesc+0x64>
 801627c:	2300      	movs	r3, #0
 801627e:	613b      	str	r3, [r7, #16]
 8016280:	68fb      	ldr	r3, [r7, #12]
 8016282:	885b      	ldrh	r3, [r3, #2]
 8016284:	b29a      	uxth	r2, r3
 8016286:	897b      	ldrh	r3, [r7, #10]
 8016288:	429a      	cmp	r2, r3
 801628a:	d8e5      	bhi.n	8016258 <USBD_GetEpDesc+0x2e>
 801628c:	e000      	b.n	8016290 <USBD_GetEpDesc+0x66>
 801628e:	bf00      	nop
 8016290:	693b      	ldr	r3, [r7, #16]
 8016292:	4618      	mov	r0, r3
 8016294:	3718      	adds	r7, #24
 8016296:	46bd      	mov	sp, r7
 8016298:	bd80      	pop	{r7, pc}

0801629a <USBD_GetNextDesc>:
 801629a:	b480      	push	{r7}
 801629c:	b085      	sub	sp, #20
 801629e:	af00      	add	r7, sp, #0
 80162a0:	6078      	str	r0, [r7, #4]
 80162a2:	6039      	str	r1, [r7, #0]
 80162a4:	687b      	ldr	r3, [r7, #4]
 80162a6:	60fb      	str	r3, [r7, #12]
 80162a8:	683b      	ldr	r3, [r7, #0]
 80162aa:	881b      	ldrh	r3, [r3, #0]
 80162ac:	68fa      	ldr	r2, [r7, #12]
 80162ae:	7812      	ldrb	r2, [r2, #0]
 80162b0:	4413      	add	r3, r2
 80162b2:	b29a      	uxth	r2, r3
 80162b4:	683b      	ldr	r3, [r7, #0]
 80162b6:	801a      	strh	r2, [r3, #0]
 80162b8:	68fb      	ldr	r3, [r7, #12]
 80162ba:	781b      	ldrb	r3, [r3, #0]
 80162bc:	461a      	mov	r2, r3
 80162be:	687b      	ldr	r3, [r7, #4]
 80162c0:	4413      	add	r3, r2
 80162c2:	60fb      	str	r3, [r7, #12]
 80162c4:	68fb      	ldr	r3, [r7, #12]
 80162c6:	4618      	mov	r0, r3
 80162c8:	3714      	adds	r7, #20
 80162ca:	46bd      	mov	sp, r7
 80162cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80162d0:	4770      	bx	lr

080162d2 <SWAPBYTE>:
 80162d2:	b480      	push	{r7}
 80162d4:	b087      	sub	sp, #28
 80162d6:	af00      	add	r7, sp, #0
 80162d8:	6078      	str	r0, [r7, #4]
 80162da:	687b      	ldr	r3, [r7, #4]
 80162dc:	617b      	str	r3, [r7, #20]
 80162de:	697b      	ldr	r3, [r7, #20]
 80162e0:	781b      	ldrb	r3, [r3, #0]
 80162e2:	827b      	strh	r3, [r7, #18]
 80162e4:	697b      	ldr	r3, [r7, #20]
 80162e6:	3301      	adds	r3, #1
 80162e8:	617b      	str	r3, [r7, #20]
 80162ea:	697b      	ldr	r3, [r7, #20]
 80162ec:	781b      	ldrb	r3, [r3, #0]
 80162ee:	823b      	strh	r3, [r7, #16]
 80162f0:	8a3b      	ldrh	r3, [r7, #16]
 80162f2:	021b      	lsls	r3, r3, #8
 80162f4:	b21a      	sxth	r2, r3
 80162f6:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80162fa:	4313      	orrs	r3, r2
 80162fc:	b21b      	sxth	r3, r3
 80162fe:	81fb      	strh	r3, [r7, #14]
 8016300:	89fb      	ldrh	r3, [r7, #14]
 8016302:	4618      	mov	r0, r3
 8016304:	371c      	adds	r7, #28
 8016306:	46bd      	mov	sp, r7
 8016308:	f85d 7b04 	ldr.w	r7, [sp], #4
 801630c:	4770      	bx	lr
	...

08016310 <USBD_StdDevReq>:
 8016310:	b580      	push	{r7, lr}
 8016312:	b084      	sub	sp, #16
 8016314:	af00      	add	r7, sp, #0
 8016316:	6078      	str	r0, [r7, #4]
 8016318:	6039      	str	r1, [r7, #0]
 801631a:	2300      	movs	r3, #0
 801631c:	73fb      	strb	r3, [r7, #15]
 801631e:	683b      	ldr	r3, [r7, #0]
 8016320:	781b      	ldrb	r3, [r3, #0]
 8016322:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016326:	2b40      	cmp	r3, #64	@ 0x40
 8016328:	d005      	beq.n	8016336 <USBD_StdDevReq+0x26>
 801632a:	2b40      	cmp	r3, #64	@ 0x40
 801632c:	d857      	bhi.n	80163de <USBD_StdDevReq+0xce>
 801632e:	2b00      	cmp	r3, #0
 8016330:	d00f      	beq.n	8016352 <USBD_StdDevReq+0x42>
 8016332:	2b20      	cmp	r3, #32
 8016334:	d153      	bne.n	80163de <USBD_StdDevReq+0xce>
 8016336:	687b      	ldr	r3, [r7, #4]
 8016338:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801633c:	687b      	ldr	r3, [r7, #4]
 801633e:	32ae      	adds	r2, #174	@ 0xae
 8016340:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016344:	689b      	ldr	r3, [r3, #8]
 8016346:	6839      	ldr	r1, [r7, #0]
 8016348:	6878      	ldr	r0, [r7, #4]
 801634a:	4798      	blx	r3
 801634c:	4603      	mov	r3, r0
 801634e:	73fb      	strb	r3, [r7, #15]
 8016350:	e04a      	b.n	80163e8 <USBD_StdDevReq+0xd8>
 8016352:	683b      	ldr	r3, [r7, #0]
 8016354:	785b      	ldrb	r3, [r3, #1]
 8016356:	2b09      	cmp	r3, #9
 8016358:	d83b      	bhi.n	80163d2 <USBD_StdDevReq+0xc2>
 801635a:	a201      	add	r2, pc, #4	@ (adr r2, 8016360 <USBD_StdDevReq+0x50>)
 801635c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016360:	080163b5 	.word	0x080163b5
 8016364:	080163c9 	.word	0x080163c9
 8016368:	080163d3 	.word	0x080163d3
 801636c:	080163bf 	.word	0x080163bf
 8016370:	080163d3 	.word	0x080163d3
 8016374:	08016393 	.word	0x08016393
 8016378:	08016389 	.word	0x08016389
 801637c:	080163d3 	.word	0x080163d3
 8016380:	080163ab 	.word	0x080163ab
 8016384:	0801639d 	.word	0x0801639d
 8016388:	6839      	ldr	r1, [r7, #0]
 801638a:	6878      	ldr	r0, [r7, #4]
 801638c:	f000 fa3c 	bl	8016808 <USBD_GetDescriptor>
 8016390:	e024      	b.n	80163dc <USBD_StdDevReq+0xcc>
 8016392:	6839      	ldr	r1, [r7, #0]
 8016394:	6878      	ldr	r0, [r7, #4]
 8016396:	f000 fba1 	bl	8016adc <USBD_SetAddress>
 801639a:	e01f      	b.n	80163dc <USBD_StdDevReq+0xcc>
 801639c:	6839      	ldr	r1, [r7, #0]
 801639e:	6878      	ldr	r0, [r7, #4]
 80163a0:	f000 fbe0 	bl	8016b64 <USBD_SetConfig>
 80163a4:	4603      	mov	r3, r0
 80163a6:	73fb      	strb	r3, [r7, #15]
 80163a8:	e018      	b.n	80163dc <USBD_StdDevReq+0xcc>
 80163aa:	6839      	ldr	r1, [r7, #0]
 80163ac:	6878      	ldr	r0, [r7, #4]
 80163ae:	f000 fc83 	bl	8016cb8 <USBD_GetConfig>
 80163b2:	e013      	b.n	80163dc <USBD_StdDevReq+0xcc>
 80163b4:	6839      	ldr	r1, [r7, #0]
 80163b6:	6878      	ldr	r0, [r7, #4]
 80163b8:	f000 fcb4 	bl	8016d24 <USBD_GetStatus>
 80163bc:	e00e      	b.n	80163dc <USBD_StdDevReq+0xcc>
 80163be:	6839      	ldr	r1, [r7, #0]
 80163c0:	6878      	ldr	r0, [r7, #4]
 80163c2:	f000 fce3 	bl	8016d8c <USBD_SetFeature>
 80163c6:	e009      	b.n	80163dc <USBD_StdDevReq+0xcc>
 80163c8:	6839      	ldr	r1, [r7, #0]
 80163ca:	6878      	ldr	r0, [r7, #4]
 80163cc:	f000 fd07 	bl	8016dde <USBD_ClrFeature>
 80163d0:	e004      	b.n	80163dc <USBD_StdDevReq+0xcc>
 80163d2:	6839      	ldr	r1, [r7, #0]
 80163d4:	6878      	ldr	r0, [r7, #4]
 80163d6:	f000 fd5e 	bl	8016e96 <USBD_CtlError>
 80163da:	bf00      	nop
 80163dc:	e004      	b.n	80163e8 <USBD_StdDevReq+0xd8>
 80163de:	6839      	ldr	r1, [r7, #0]
 80163e0:	6878      	ldr	r0, [r7, #4]
 80163e2:	f000 fd58 	bl	8016e96 <USBD_CtlError>
 80163e6:	bf00      	nop
 80163e8:	7bfb      	ldrb	r3, [r7, #15]
 80163ea:	4618      	mov	r0, r3
 80163ec:	3710      	adds	r7, #16
 80163ee:	46bd      	mov	sp, r7
 80163f0:	bd80      	pop	{r7, pc}
 80163f2:	bf00      	nop

080163f4 <USBD_StdItfReq>:
 80163f4:	b580      	push	{r7, lr}
 80163f6:	b084      	sub	sp, #16
 80163f8:	af00      	add	r7, sp, #0
 80163fa:	6078      	str	r0, [r7, #4]
 80163fc:	6039      	str	r1, [r7, #0]
 80163fe:	2300      	movs	r3, #0
 8016400:	73fb      	strb	r3, [r7, #15]
 8016402:	683b      	ldr	r3, [r7, #0]
 8016404:	781b      	ldrb	r3, [r3, #0]
 8016406:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801640a:	2b40      	cmp	r3, #64	@ 0x40
 801640c:	d005      	beq.n	801641a <USBD_StdItfReq+0x26>
 801640e:	2b40      	cmp	r3, #64	@ 0x40
 8016410:	d852      	bhi.n	80164b8 <USBD_StdItfReq+0xc4>
 8016412:	2b00      	cmp	r3, #0
 8016414:	d001      	beq.n	801641a <USBD_StdItfReq+0x26>
 8016416:	2b20      	cmp	r3, #32
 8016418:	d14e      	bne.n	80164b8 <USBD_StdItfReq+0xc4>
 801641a:	687b      	ldr	r3, [r7, #4]
 801641c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016420:	b2db      	uxtb	r3, r3
 8016422:	3b01      	subs	r3, #1
 8016424:	2b02      	cmp	r3, #2
 8016426:	d840      	bhi.n	80164aa <USBD_StdItfReq+0xb6>
 8016428:	683b      	ldr	r3, [r7, #0]
 801642a:	889b      	ldrh	r3, [r3, #4]
 801642c:	b2db      	uxtb	r3, r3
 801642e:	2b01      	cmp	r3, #1
 8016430:	d836      	bhi.n	80164a0 <USBD_StdItfReq+0xac>
 8016432:	683b      	ldr	r3, [r7, #0]
 8016434:	889b      	ldrh	r3, [r3, #4]
 8016436:	b2db      	uxtb	r3, r3
 8016438:	4619      	mov	r1, r3
 801643a:	6878      	ldr	r0, [r7, #4]
 801643c:	f7ff fedb 	bl	80161f6 <USBD_CoreFindIF>
 8016440:	4603      	mov	r3, r0
 8016442:	73bb      	strb	r3, [r7, #14]
 8016444:	7bbb      	ldrb	r3, [r7, #14]
 8016446:	2bff      	cmp	r3, #255	@ 0xff
 8016448:	d01d      	beq.n	8016486 <USBD_StdItfReq+0x92>
 801644a:	7bbb      	ldrb	r3, [r7, #14]
 801644c:	2b00      	cmp	r3, #0
 801644e:	d11a      	bne.n	8016486 <USBD_StdItfReq+0x92>
 8016450:	7bba      	ldrb	r2, [r7, #14]
 8016452:	687b      	ldr	r3, [r7, #4]
 8016454:	32ae      	adds	r2, #174	@ 0xae
 8016456:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801645a:	689b      	ldr	r3, [r3, #8]
 801645c:	2b00      	cmp	r3, #0
 801645e:	d00f      	beq.n	8016480 <USBD_StdItfReq+0x8c>
 8016460:	7bba      	ldrb	r2, [r7, #14]
 8016462:	687b      	ldr	r3, [r7, #4]
 8016464:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016468:	7bba      	ldrb	r2, [r7, #14]
 801646a:	687b      	ldr	r3, [r7, #4]
 801646c:	32ae      	adds	r2, #174	@ 0xae
 801646e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016472:	689b      	ldr	r3, [r3, #8]
 8016474:	6839      	ldr	r1, [r7, #0]
 8016476:	6878      	ldr	r0, [r7, #4]
 8016478:	4798      	blx	r3
 801647a:	4603      	mov	r3, r0
 801647c:	73fb      	strb	r3, [r7, #15]
 801647e:	e004      	b.n	801648a <USBD_StdItfReq+0x96>
 8016480:	2303      	movs	r3, #3
 8016482:	73fb      	strb	r3, [r7, #15]
 8016484:	e001      	b.n	801648a <USBD_StdItfReq+0x96>
 8016486:	2303      	movs	r3, #3
 8016488:	73fb      	strb	r3, [r7, #15]
 801648a:	683b      	ldr	r3, [r7, #0]
 801648c:	88db      	ldrh	r3, [r3, #6]
 801648e:	2b00      	cmp	r3, #0
 8016490:	d110      	bne.n	80164b4 <USBD_StdItfReq+0xc0>
 8016492:	7bfb      	ldrb	r3, [r7, #15]
 8016494:	2b00      	cmp	r3, #0
 8016496:	d10d      	bne.n	80164b4 <USBD_StdItfReq+0xc0>
 8016498:	6878      	ldr	r0, [r7, #4]
 801649a:	f000 fdc7 	bl	801702c <USBD_CtlSendStatus>
 801649e:	e009      	b.n	80164b4 <USBD_StdItfReq+0xc0>
 80164a0:	6839      	ldr	r1, [r7, #0]
 80164a2:	6878      	ldr	r0, [r7, #4]
 80164a4:	f000 fcf7 	bl	8016e96 <USBD_CtlError>
 80164a8:	e004      	b.n	80164b4 <USBD_StdItfReq+0xc0>
 80164aa:	6839      	ldr	r1, [r7, #0]
 80164ac:	6878      	ldr	r0, [r7, #4]
 80164ae:	f000 fcf2 	bl	8016e96 <USBD_CtlError>
 80164b2:	e000      	b.n	80164b6 <USBD_StdItfReq+0xc2>
 80164b4:	bf00      	nop
 80164b6:	e004      	b.n	80164c2 <USBD_StdItfReq+0xce>
 80164b8:	6839      	ldr	r1, [r7, #0]
 80164ba:	6878      	ldr	r0, [r7, #4]
 80164bc:	f000 fceb 	bl	8016e96 <USBD_CtlError>
 80164c0:	bf00      	nop
 80164c2:	7bfb      	ldrb	r3, [r7, #15]
 80164c4:	4618      	mov	r0, r3
 80164c6:	3710      	adds	r7, #16
 80164c8:	46bd      	mov	sp, r7
 80164ca:	bd80      	pop	{r7, pc}

080164cc <USBD_StdEPReq>:
 80164cc:	b580      	push	{r7, lr}
 80164ce:	b084      	sub	sp, #16
 80164d0:	af00      	add	r7, sp, #0
 80164d2:	6078      	str	r0, [r7, #4]
 80164d4:	6039      	str	r1, [r7, #0]
 80164d6:	2300      	movs	r3, #0
 80164d8:	73fb      	strb	r3, [r7, #15]
 80164da:	683b      	ldr	r3, [r7, #0]
 80164dc:	889b      	ldrh	r3, [r3, #4]
 80164de:	73bb      	strb	r3, [r7, #14]
 80164e0:	683b      	ldr	r3, [r7, #0]
 80164e2:	781b      	ldrb	r3, [r3, #0]
 80164e4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80164e8:	2b40      	cmp	r3, #64	@ 0x40
 80164ea:	d007      	beq.n	80164fc <USBD_StdEPReq+0x30>
 80164ec:	2b40      	cmp	r3, #64	@ 0x40
 80164ee:	f200 817f 	bhi.w	80167f0 <USBD_StdEPReq+0x324>
 80164f2:	2b00      	cmp	r3, #0
 80164f4:	d02a      	beq.n	801654c <USBD_StdEPReq+0x80>
 80164f6:	2b20      	cmp	r3, #32
 80164f8:	f040 817a 	bne.w	80167f0 <USBD_StdEPReq+0x324>
 80164fc:	7bbb      	ldrb	r3, [r7, #14]
 80164fe:	4619      	mov	r1, r3
 8016500:	6878      	ldr	r0, [r7, #4]
 8016502:	f7ff fe85 	bl	8016210 <USBD_CoreFindEP>
 8016506:	4603      	mov	r3, r0
 8016508:	737b      	strb	r3, [r7, #13]
 801650a:	7b7b      	ldrb	r3, [r7, #13]
 801650c:	2bff      	cmp	r3, #255	@ 0xff
 801650e:	f000 8174 	beq.w	80167fa <USBD_StdEPReq+0x32e>
 8016512:	7b7b      	ldrb	r3, [r7, #13]
 8016514:	2b00      	cmp	r3, #0
 8016516:	f040 8170 	bne.w	80167fa <USBD_StdEPReq+0x32e>
 801651a:	7b7a      	ldrb	r2, [r7, #13]
 801651c:	687b      	ldr	r3, [r7, #4]
 801651e:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016522:	7b7a      	ldrb	r2, [r7, #13]
 8016524:	687b      	ldr	r3, [r7, #4]
 8016526:	32ae      	adds	r2, #174	@ 0xae
 8016528:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801652c:	689b      	ldr	r3, [r3, #8]
 801652e:	2b00      	cmp	r3, #0
 8016530:	f000 8163 	beq.w	80167fa <USBD_StdEPReq+0x32e>
 8016534:	7b7a      	ldrb	r2, [r7, #13]
 8016536:	687b      	ldr	r3, [r7, #4]
 8016538:	32ae      	adds	r2, #174	@ 0xae
 801653a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801653e:	689b      	ldr	r3, [r3, #8]
 8016540:	6839      	ldr	r1, [r7, #0]
 8016542:	6878      	ldr	r0, [r7, #4]
 8016544:	4798      	blx	r3
 8016546:	4603      	mov	r3, r0
 8016548:	73fb      	strb	r3, [r7, #15]
 801654a:	e156      	b.n	80167fa <USBD_StdEPReq+0x32e>
 801654c:	683b      	ldr	r3, [r7, #0]
 801654e:	785b      	ldrb	r3, [r3, #1]
 8016550:	2b03      	cmp	r3, #3
 8016552:	d008      	beq.n	8016566 <USBD_StdEPReq+0x9a>
 8016554:	2b03      	cmp	r3, #3
 8016556:	f300 8145 	bgt.w	80167e4 <USBD_StdEPReq+0x318>
 801655a:	2b00      	cmp	r3, #0
 801655c:	f000 809b 	beq.w	8016696 <USBD_StdEPReq+0x1ca>
 8016560:	2b01      	cmp	r3, #1
 8016562:	d03c      	beq.n	80165de <USBD_StdEPReq+0x112>
 8016564:	e13e      	b.n	80167e4 <USBD_StdEPReq+0x318>
 8016566:	687b      	ldr	r3, [r7, #4]
 8016568:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801656c:	b2db      	uxtb	r3, r3
 801656e:	2b02      	cmp	r3, #2
 8016570:	d002      	beq.n	8016578 <USBD_StdEPReq+0xac>
 8016572:	2b03      	cmp	r3, #3
 8016574:	d016      	beq.n	80165a4 <USBD_StdEPReq+0xd8>
 8016576:	e02c      	b.n	80165d2 <USBD_StdEPReq+0x106>
 8016578:	7bbb      	ldrb	r3, [r7, #14]
 801657a:	2b00      	cmp	r3, #0
 801657c:	d00d      	beq.n	801659a <USBD_StdEPReq+0xce>
 801657e:	7bbb      	ldrb	r3, [r7, #14]
 8016580:	2b80      	cmp	r3, #128	@ 0x80
 8016582:	d00a      	beq.n	801659a <USBD_StdEPReq+0xce>
 8016584:	7bbb      	ldrb	r3, [r7, #14]
 8016586:	4619      	mov	r1, r3
 8016588:	6878      	ldr	r0, [r7, #4]
 801658a:	f004 fa8f 	bl	801aaac <USBD_LL_StallEP>
 801658e:	2180      	movs	r1, #128	@ 0x80
 8016590:	6878      	ldr	r0, [r7, #4]
 8016592:	f004 fa8b 	bl	801aaac <USBD_LL_StallEP>
 8016596:	bf00      	nop
 8016598:	e020      	b.n	80165dc <USBD_StdEPReq+0x110>
 801659a:	6839      	ldr	r1, [r7, #0]
 801659c:	6878      	ldr	r0, [r7, #4]
 801659e:	f000 fc7a 	bl	8016e96 <USBD_CtlError>
 80165a2:	e01b      	b.n	80165dc <USBD_StdEPReq+0x110>
 80165a4:	683b      	ldr	r3, [r7, #0]
 80165a6:	885b      	ldrh	r3, [r3, #2]
 80165a8:	2b00      	cmp	r3, #0
 80165aa:	d10e      	bne.n	80165ca <USBD_StdEPReq+0xfe>
 80165ac:	7bbb      	ldrb	r3, [r7, #14]
 80165ae:	2b00      	cmp	r3, #0
 80165b0:	d00b      	beq.n	80165ca <USBD_StdEPReq+0xfe>
 80165b2:	7bbb      	ldrb	r3, [r7, #14]
 80165b4:	2b80      	cmp	r3, #128	@ 0x80
 80165b6:	d008      	beq.n	80165ca <USBD_StdEPReq+0xfe>
 80165b8:	683b      	ldr	r3, [r7, #0]
 80165ba:	88db      	ldrh	r3, [r3, #6]
 80165bc:	2b00      	cmp	r3, #0
 80165be:	d104      	bne.n	80165ca <USBD_StdEPReq+0xfe>
 80165c0:	7bbb      	ldrb	r3, [r7, #14]
 80165c2:	4619      	mov	r1, r3
 80165c4:	6878      	ldr	r0, [r7, #4]
 80165c6:	f004 fa71 	bl	801aaac <USBD_LL_StallEP>
 80165ca:	6878      	ldr	r0, [r7, #4]
 80165cc:	f000 fd2e 	bl	801702c <USBD_CtlSendStatus>
 80165d0:	e004      	b.n	80165dc <USBD_StdEPReq+0x110>
 80165d2:	6839      	ldr	r1, [r7, #0]
 80165d4:	6878      	ldr	r0, [r7, #4]
 80165d6:	f000 fc5e 	bl	8016e96 <USBD_CtlError>
 80165da:	bf00      	nop
 80165dc:	e107      	b.n	80167ee <USBD_StdEPReq+0x322>
 80165de:	687b      	ldr	r3, [r7, #4]
 80165e0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80165e4:	b2db      	uxtb	r3, r3
 80165e6:	2b02      	cmp	r3, #2
 80165e8:	d002      	beq.n	80165f0 <USBD_StdEPReq+0x124>
 80165ea:	2b03      	cmp	r3, #3
 80165ec:	d016      	beq.n	801661c <USBD_StdEPReq+0x150>
 80165ee:	e04b      	b.n	8016688 <USBD_StdEPReq+0x1bc>
 80165f0:	7bbb      	ldrb	r3, [r7, #14]
 80165f2:	2b00      	cmp	r3, #0
 80165f4:	d00d      	beq.n	8016612 <USBD_StdEPReq+0x146>
 80165f6:	7bbb      	ldrb	r3, [r7, #14]
 80165f8:	2b80      	cmp	r3, #128	@ 0x80
 80165fa:	d00a      	beq.n	8016612 <USBD_StdEPReq+0x146>
 80165fc:	7bbb      	ldrb	r3, [r7, #14]
 80165fe:	4619      	mov	r1, r3
 8016600:	6878      	ldr	r0, [r7, #4]
 8016602:	f004 fa53 	bl	801aaac <USBD_LL_StallEP>
 8016606:	2180      	movs	r1, #128	@ 0x80
 8016608:	6878      	ldr	r0, [r7, #4]
 801660a:	f004 fa4f 	bl	801aaac <USBD_LL_StallEP>
 801660e:	bf00      	nop
 8016610:	e040      	b.n	8016694 <USBD_StdEPReq+0x1c8>
 8016612:	6839      	ldr	r1, [r7, #0]
 8016614:	6878      	ldr	r0, [r7, #4]
 8016616:	f000 fc3e 	bl	8016e96 <USBD_CtlError>
 801661a:	e03b      	b.n	8016694 <USBD_StdEPReq+0x1c8>
 801661c:	683b      	ldr	r3, [r7, #0]
 801661e:	885b      	ldrh	r3, [r3, #2]
 8016620:	2b00      	cmp	r3, #0
 8016622:	d136      	bne.n	8016692 <USBD_StdEPReq+0x1c6>
 8016624:	7bbb      	ldrb	r3, [r7, #14]
 8016626:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 801662a:	2b00      	cmp	r3, #0
 801662c:	d004      	beq.n	8016638 <USBD_StdEPReq+0x16c>
 801662e:	7bbb      	ldrb	r3, [r7, #14]
 8016630:	4619      	mov	r1, r3
 8016632:	6878      	ldr	r0, [r7, #4]
 8016634:	f004 fa59 	bl	801aaea <USBD_LL_ClearStallEP>
 8016638:	6878      	ldr	r0, [r7, #4]
 801663a:	f000 fcf7 	bl	801702c <USBD_CtlSendStatus>
 801663e:	7bbb      	ldrb	r3, [r7, #14]
 8016640:	4619      	mov	r1, r3
 8016642:	6878      	ldr	r0, [r7, #4]
 8016644:	f7ff fde4 	bl	8016210 <USBD_CoreFindEP>
 8016648:	4603      	mov	r3, r0
 801664a:	737b      	strb	r3, [r7, #13]
 801664c:	7b7b      	ldrb	r3, [r7, #13]
 801664e:	2bff      	cmp	r3, #255	@ 0xff
 8016650:	d01f      	beq.n	8016692 <USBD_StdEPReq+0x1c6>
 8016652:	7b7b      	ldrb	r3, [r7, #13]
 8016654:	2b00      	cmp	r3, #0
 8016656:	d11c      	bne.n	8016692 <USBD_StdEPReq+0x1c6>
 8016658:	7b7a      	ldrb	r2, [r7, #13]
 801665a:	687b      	ldr	r3, [r7, #4]
 801665c:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016660:	7b7a      	ldrb	r2, [r7, #13]
 8016662:	687b      	ldr	r3, [r7, #4]
 8016664:	32ae      	adds	r2, #174	@ 0xae
 8016666:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801666a:	689b      	ldr	r3, [r3, #8]
 801666c:	2b00      	cmp	r3, #0
 801666e:	d010      	beq.n	8016692 <USBD_StdEPReq+0x1c6>
 8016670:	7b7a      	ldrb	r2, [r7, #13]
 8016672:	687b      	ldr	r3, [r7, #4]
 8016674:	32ae      	adds	r2, #174	@ 0xae
 8016676:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801667a:	689b      	ldr	r3, [r3, #8]
 801667c:	6839      	ldr	r1, [r7, #0]
 801667e:	6878      	ldr	r0, [r7, #4]
 8016680:	4798      	blx	r3
 8016682:	4603      	mov	r3, r0
 8016684:	73fb      	strb	r3, [r7, #15]
 8016686:	e004      	b.n	8016692 <USBD_StdEPReq+0x1c6>
 8016688:	6839      	ldr	r1, [r7, #0]
 801668a:	6878      	ldr	r0, [r7, #4]
 801668c:	f000 fc03 	bl	8016e96 <USBD_CtlError>
 8016690:	e000      	b.n	8016694 <USBD_StdEPReq+0x1c8>
 8016692:	bf00      	nop
 8016694:	e0ab      	b.n	80167ee <USBD_StdEPReq+0x322>
 8016696:	687b      	ldr	r3, [r7, #4]
 8016698:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801669c:	b2db      	uxtb	r3, r3
 801669e:	2b02      	cmp	r3, #2
 80166a0:	d002      	beq.n	80166a8 <USBD_StdEPReq+0x1dc>
 80166a2:	2b03      	cmp	r3, #3
 80166a4:	d032      	beq.n	801670c <USBD_StdEPReq+0x240>
 80166a6:	e097      	b.n	80167d8 <USBD_StdEPReq+0x30c>
 80166a8:	7bbb      	ldrb	r3, [r7, #14]
 80166aa:	2b00      	cmp	r3, #0
 80166ac:	d007      	beq.n	80166be <USBD_StdEPReq+0x1f2>
 80166ae:	7bbb      	ldrb	r3, [r7, #14]
 80166b0:	2b80      	cmp	r3, #128	@ 0x80
 80166b2:	d004      	beq.n	80166be <USBD_StdEPReq+0x1f2>
 80166b4:	6839      	ldr	r1, [r7, #0]
 80166b6:	6878      	ldr	r0, [r7, #4]
 80166b8:	f000 fbed 	bl	8016e96 <USBD_CtlError>
 80166bc:	e091      	b.n	80167e2 <USBD_StdEPReq+0x316>
 80166be:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80166c2:	2b00      	cmp	r3, #0
 80166c4:	da0b      	bge.n	80166de <USBD_StdEPReq+0x212>
 80166c6:	7bbb      	ldrb	r3, [r7, #14]
 80166c8:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80166cc:	4613      	mov	r3, r2
 80166ce:	009b      	lsls	r3, r3, #2
 80166d0:	4413      	add	r3, r2
 80166d2:	009b      	lsls	r3, r3, #2
 80166d4:	3310      	adds	r3, #16
 80166d6:	687a      	ldr	r2, [r7, #4]
 80166d8:	4413      	add	r3, r2
 80166da:	3304      	adds	r3, #4
 80166dc:	e00b      	b.n	80166f6 <USBD_StdEPReq+0x22a>
 80166de:	7bbb      	ldrb	r3, [r7, #14]
 80166e0:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80166e4:	4613      	mov	r3, r2
 80166e6:	009b      	lsls	r3, r3, #2
 80166e8:	4413      	add	r3, r2
 80166ea:	009b      	lsls	r3, r3, #2
 80166ec:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80166f0:	687a      	ldr	r2, [r7, #4]
 80166f2:	4413      	add	r3, r2
 80166f4:	3304      	adds	r3, #4
 80166f6:	60bb      	str	r3, [r7, #8]
 80166f8:	68bb      	ldr	r3, [r7, #8]
 80166fa:	2200      	movs	r2, #0
 80166fc:	601a      	str	r2, [r3, #0]
 80166fe:	68bb      	ldr	r3, [r7, #8]
 8016700:	2202      	movs	r2, #2
 8016702:	4619      	mov	r1, r3
 8016704:	6878      	ldr	r0, [r7, #4]
 8016706:	f000 fc37 	bl	8016f78 <USBD_CtlSendData>
 801670a:	e06a      	b.n	80167e2 <USBD_StdEPReq+0x316>
 801670c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8016710:	2b00      	cmp	r3, #0
 8016712:	da11      	bge.n	8016738 <USBD_StdEPReq+0x26c>
 8016714:	7bbb      	ldrb	r3, [r7, #14]
 8016716:	f003 020f 	and.w	r2, r3, #15
 801671a:	6879      	ldr	r1, [r7, #4]
 801671c:	4613      	mov	r3, r2
 801671e:	009b      	lsls	r3, r3, #2
 8016720:	4413      	add	r3, r2
 8016722:	009b      	lsls	r3, r3, #2
 8016724:	440b      	add	r3, r1
 8016726:	3324      	adds	r3, #36	@ 0x24
 8016728:	881b      	ldrh	r3, [r3, #0]
 801672a:	2b00      	cmp	r3, #0
 801672c:	d117      	bne.n	801675e <USBD_StdEPReq+0x292>
 801672e:	6839      	ldr	r1, [r7, #0]
 8016730:	6878      	ldr	r0, [r7, #4]
 8016732:	f000 fbb0 	bl	8016e96 <USBD_CtlError>
 8016736:	e054      	b.n	80167e2 <USBD_StdEPReq+0x316>
 8016738:	7bbb      	ldrb	r3, [r7, #14]
 801673a:	f003 020f 	and.w	r2, r3, #15
 801673e:	6879      	ldr	r1, [r7, #4]
 8016740:	4613      	mov	r3, r2
 8016742:	009b      	lsls	r3, r3, #2
 8016744:	4413      	add	r3, r2
 8016746:	009b      	lsls	r3, r3, #2
 8016748:	440b      	add	r3, r1
 801674a:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 801674e:	881b      	ldrh	r3, [r3, #0]
 8016750:	2b00      	cmp	r3, #0
 8016752:	d104      	bne.n	801675e <USBD_StdEPReq+0x292>
 8016754:	6839      	ldr	r1, [r7, #0]
 8016756:	6878      	ldr	r0, [r7, #4]
 8016758:	f000 fb9d 	bl	8016e96 <USBD_CtlError>
 801675c:	e041      	b.n	80167e2 <USBD_StdEPReq+0x316>
 801675e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8016762:	2b00      	cmp	r3, #0
 8016764:	da0b      	bge.n	801677e <USBD_StdEPReq+0x2b2>
 8016766:	7bbb      	ldrb	r3, [r7, #14]
 8016768:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801676c:	4613      	mov	r3, r2
 801676e:	009b      	lsls	r3, r3, #2
 8016770:	4413      	add	r3, r2
 8016772:	009b      	lsls	r3, r3, #2
 8016774:	3310      	adds	r3, #16
 8016776:	687a      	ldr	r2, [r7, #4]
 8016778:	4413      	add	r3, r2
 801677a:	3304      	adds	r3, #4
 801677c:	e00b      	b.n	8016796 <USBD_StdEPReq+0x2ca>
 801677e:	7bbb      	ldrb	r3, [r7, #14]
 8016780:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8016784:	4613      	mov	r3, r2
 8016786:	009b      	lsls	r3, r3, #2
 8016788:	4413      	add	r3, r2
 801678a:	009b      	lsls	r3, r3, #2
 801678c:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8016790:	687a      	ldr	r2, [r7, #4]
 8016792:	4413      	add	r3, r2
 8016794:	3304      	adds	r3, #4
 8016796:	60bb      	str	r3, [r7, #8]
 8016798:	7bbb      	ldrb	r3, [r7, #14]
 801679a:	2b00      	cmp	r3, #0
 801679c:	d002      	beq.n	80167a4 <USBD_StdEPReq+0x2d8>
 801679e:	7bbb      	ldrb	r3, [r7, #14]
 80167a0:	2b80      	cmp	r3, #128	@ 0x80
 80167a2:	d103      	bne.n	80167ac <USBD_StdEPReq+0x2e0>
 80167a4:	68bb      	ldr	r3, [r7, #8]
 80167a6:	2200      	movs	r2, #0
 80167a8:	601a      	str	r2, [r3, #0]
 80167aa:	e00e      	b.n	80167ca <USBD_StdEPReq+0x2fe>
 80167ac:	7bbb      	ldrb	r3, [r7, #14]
 80167ae:	4619      	mov	r1, r3
 80167b0:	6878      	ldr	r0, [r7, #4]
 80167b2:	f004 f9b9 	bl	801ab28 <USBD_LL_IsStallEP>
 80167b6:	4603      	mov	r3, r0
 80167b8:	2b00      	cmp	r3, #0
 80167ba:	d003      	beq.n	80167c4 <USBD_StdEPReq+0x2f8>
 80167bc:	68bb      	ldr	r3, [r7, #8]
 80167be:	2201      	movs	r2, #1
 80167c0:	601a      	str	r2, [r3, #0]
 80167c2:	e002      	b.n	80167ca <USBD_StdEPReq+0x2fe>
 80167c4:	68bb      	ldr	r3, [r7, #8]
 80167c6:	2200      	movs	r2, #0
 80167c8:	601a      	str	r2, [r3, #0]
 80167ca:	68bb      	ldr	r3, [r7, #8]
 80167cc:	2202      	movs	r2, #2
 80167ce:	4619      	mov	r1, r3
 80167d0:	6878      	ldr	r0, [r7, #4]
 80167d2:	f000 fbd1 	bl	8016f78 <USBD_CtlSendData>
 80167d6:	e004      	b.n	80167e2 <USBD_StdEPReq+0x316>
 80167d8:	6839      	ldr	r1, [r7, #0]
 80167da:	6878      	ldr	r0, [r7, #4]
 80167dc:	f000 fb5b 	bl	8016e96 <USBD_CtlError>
 80167e0:	bf00      	nop
 80167e2:	e004      	b.n	80167ee <USBD_StdEPReq+0x322>
 80167e4:	6839      	ldr	r1, [r7, #0]
 80167e6:	6878      	ldr	r0, [r7, #4]
 80167e8:	f000 fb55 	bl	8016e96 <USBD_CtlError>
 80167ec:	bf00      	nop
 80167ee:	e005      	b.n	80167fc <USBD_StdEPReq+0x330>
 80167f0:	6839      	ldr	r1, [r7, #0]
 80167f2:	6878      	ldr	r0, [r7, #4]
 80167f4:	f000 fb4f 	bl	8016e96 <USBD_CtlError>
 80167f8:	e000      	b.n	80167fc <USBD_StdEPReq+0x330>
 80167fa:	bf00      	nop
 80167fc:	7bfb      	ldrb	r3, [r7, #15]
 80167fe:	4618      	mov	r0, r3
 8016800:	3710      	adds	r7, #16
 8016802:	46bd      	mov	sp, r7
 8016804:	bd80      	pop	{r7, pc}
	...

08016808 <USBD_GetDescriptor>:
 8016808:	b580      	push	{r7, lr}
 801680a:	b084      	sub	sp, #16
 801680c:	af00      	add	r7, sp, #0
 801680e:	6078      	str	r0, [r7, #4]
 8016810:	6039      	str	r1, [r7, #0]
 8016812:	2300      	movs	r3, #0
 8016814:	813b      	strh	r3, [r7, #8]
 8016816:	2300      	movs	r3, #0
 8016818:	60fb      	str	r3, [r7, #12]
 801681a:	2300      	movs	r3, #0
 801681c:	72fb      	strb	r3, [r7, #11]
 801681e:	683b      	ldr	r3, [r7, #0]
 8016820:	885b      	ldrh	r3, [r3, #2]
 8016822:	0a1b      	lsrs	r3, r3, #8
 8016824:	b29b      	uxth	r3, r3
 8016826:	3b01      	subs	r3, #1
 8016828:	2b06      	cmp	r3, #6
 801682a:	f200 8128 	bhi.w	8016a7e <USBD_GetDescriptor+0x276>
 801682e:	a201      	add	r2, pc, #4	@ (adr r2, 8016834 <USBD_GetDescriptor+0x2c>)
 8016830:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016834:	08016851 	.word	0x08016851
 8016838:	08016869 	.word	0x08016869
 801683c:	080168a9 	.word	0x080168a9
 8016840:	08016a7f 	.word	0x08016a7f
 8016844:	08016a7f 	.word	0x08016a7f
 8016848:	08016a1f 	.word	0x08016a1f
 801684c:	08016a4b 	.word	0x08016a4b
 8016850:	687b      	ldr	r3, [r7, #4]
 8016852:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016856:	681b      	ldr	r3, [r3, #0]
 8016858:	687a      	ldr	r2, [r7, #4]
 801685a:	7c12      	ldrb	r2, [r2, #16]
 801685c:	f107 0108 	add.w	r1, r7, #8
 8016860:	4610      	mov	r0, r2
 8016862:	4798      	blx	r3
 8016864:	60f8      	str	r0, [r7, #12]
 8016866:	e112      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 8016868:	687b      	ldr	r3, [r7, #4]
 801686a:	7c1b      	ldrb	r3, [r3, #16]
 801686c:	2b00      	cmp	r3, #0
 801686e:	d10d      	bne.n	801688c <USBD_GetDescriptor+0x84>
 8016870:	687b      	ldr	r3, [r7, #4]
 8016872:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016878:	f107 0208 	add.w	r2, r7, #8
 801687c:	4610      	mov	r0, r2
 801687e:	4798      	blx	r3
 8016880:	60f8      	str	r0, [r7, #12]
 8016882:	68fb      	ldr	r3, [r7, #12]
 8016884:	3301      	adds	r3, #1
 8016886:	2202      	movs	r2, #2
 8016888:	701a      	strb	r2, [r3, #0]
 801688a:	e100      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 801688c:	687b      	ldr	r3, [r7, #4]
 801688e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016892:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016894:	f107 0208 	add.w	r2, r7, #8
 8016898:	4610      	mov	r0, r2
 801689a:	4798      	blx	r3
 801689c:	60f8      	str	r0, [r7, #12]
 801689e:	68fb      	ldr	r3, [r7, #12]
 80168a0:	3301      	adds	r3, #1
 80168a2:	2202      	movs	r2, #2
 80168a4:	701a      	strb	r2, [r3, #0]
 80168a6:	e0f2      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 80168a8:	683b      	ldr	r3, [r7, #0]
 80168aa:	885b      	ldrh	r3, [r3, #2]
 80168ac:	b2db      	uxtb	r3, r3
 80168ae:	2b05      	cmp	r3, #5
 80168b0:	f200 80ac 	bhi.w	8016a0c <USBD_GetDescriptor+0x204>
 80168b4:	a201      	add	r2, pc, #4	@ (adr r2, 80168bc <USBD_GetDescriptor+0xb4>)
 80168b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80168ba:	bf00      	nop
 80168bc:	080168d5 	.word	0x080168d5
 80168c0:	08016909 	.word	0x08016909
 80168c4:	0801693d 	.word	0x0801693d
 80168c8:	08016971 	.word	0x08016971
 80168cc:	080169a5 	.word	0x080169a5
 80168d0:	080169d9 	.word	0x080169d9
 80168d4:	687b      	ldr	r3, [r7, #4]
 80168d6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80168da:	685b      	ldr	r3, [r3, #4]
 80168dc:	2b00      	cmp	r3, #0
 80168de:	d00b      	beq.n	80168f8 <USBD_GetDescriptor+0xf0>
 80168e0:	687b      	ldr	r3, [r7, #4]
 80168e2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80168e6:	685b      	ldr	r3, [r3, #4]
 80168e8:	687a      	ldr	r2, [r7, #4]
 80168ea:	7c12      	ldrb	r2, [r2, #16]
 80168ec:	f107 0108 	add.w	r1, r7, #8
 80168f0:	4610      	mov	r0, r2
 80168f2:	4798      	blx	r3
 80168f4:	60f8      	str	r0, [r7, #12]
 80168f6:	e091      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 80168f8:	6839      	ldr	r1, [r7, #0]
 80168fa:	6878      	ldr	r0, [r7, #4]
 80168fc:	f000 facb 	bl	8016e96 <USBD_CtlError>
 8016900:	7afb      	ldrb	r3, [r7, #11]
 8016902:	3301      	adds	r3, #1
 8016904:	72fb      	strb	r3, [r7, #11]
 8016906:	e089      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 8016908:	687b      	ldr	r3, [r7, #4]
 801690a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801690e:	689b      	ldr	r3, [r3, #8]
 8016910:	2b00      	cmp	r3, #0
 8016912:	d00b      	beq.n	801692c <USBD_GetDescriptor+0x124>
 8016914:	687b      	ldr	r3, [r7, #4]
 8016916:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801691a:	689b      	ldr	r3, [r3, #8]
 801691c:	687a      	ldr	r2, [r7, #4]
 801691e:	7c12      	ldrb	r2, [r2, #16]
 8016920:	f107 0108 	add.w	r1, r7, #8
 8016924:	4610      	mov	r0, r2
 8016926:	4798      	blx	r3
 8016928:	60f8      	str	r0, [r7, #12]
 801692a:	e077      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 801692c:	6839      	ldr	r1, [r7, #0]
 801692e:	6878      	ldr	r0, [r7, #4]
 8016930:	f000 fab1 	bl	8016e96 <USBD_CtlError>
 8016934:	7afb      	ldrb	r3, [r7, #11]
 8016936:	3301      	adds	r3, #1
 8016938:	72fb      	strb	r3, [r7, #11]
 801693a:	e06f      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 801693c:	687b      	ldr	r3, [r7, #4]
 801693e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016942:	68db      	ldr	r3, [r3, #12]
 8016944:	2b00      	cmp	r3, #0
 8016946:	d00b      	beq.n	8016960 <USBD_GetDescriptor+0x158>
 8016948:	687b      	ldr	r3, [r7, #4]
 801694a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801694e:	68db      	ldr	r3, [r3, #12]
 8016950:	687a      	ldr	r2, [r7, #4]
 8016952:	7c12      	ldrb	r2, [r2, #16]
 8016954:	f107 0108 	add.w	r1, r7, #8
 8016958:	4610      	mov	r0, r2
 801695a:	4798      	blx	r3
 801695c:	60f8      	str	r0, [r7, #12]
 801695e:	e05d      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 8016960:	6839      	ldr	r1, [r7, #0]
 8016962:	6878      	ldr	r0, [r7, #4]
 8016964:	f000 fa97 	bl	8016e96 <USBD_CtlError>
 8016968:	7afb      	ldrb	r3, [r7, #11]
 801696a:	3301      	adds	r3, #1
 801696c:	72fb      	strb	r3, [r7, #11]
 801696e:	e055      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 8016970:	687b      	ldr	r3, [r7, #4]
 8016972:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016976:	691b      	ldr	r3, [r3, #16]
 8016978:	2b00      	cmp	r3, #0
 801697a:	d00b      	beq.n	8016994 <USBD_GetDescriptor+0x18c>
 801697c:	687b      	ldr	r3, [r7, #4]
 801697e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016982:	691b      	ldr	r3, [r3, #16]
 8016984:	687a      	ldr	r2, [r7, #4]
 8016986:	7c12      	ldrb	r2, [r2, #16]
 8016988:	f107 0108 	add.w	r1, r7, #8
 801698c:	4610      	mov	r0, r2
 801698e:	4798      	blx	r3
 8016990:	60f8      	str	r0, [r7, #12]
 8016992:	e043      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 8016994:	6839      	ldr	r1, [r7, #0]
 8016996:	6878      	ldr	r0, [r7, #4]
 8016998:	f000 fa7d 	bl	8016e96 <USBD_CtlError>
 801699c:	7afb      	ldrb	r3, [r7, #11]
 801699e:	3301      	adds	r3, #1
 80169a0:	72fb      	strb	r3, [r7, #11]
 80169a2:	e03b      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 80169a4:	687b      	ldr	r3, [r7, #4]
 80169a6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80169aa:	695b      	ldr	r3, [r3, #20]
 80169ac:	2b00      	cmp	r3, #0
 80169ae:	d00b      	beq.n	80169c8 <USBD_GetDescriptor+0x1c0>
 80169b0:	687b      	ldr	r3, [r7, #4]
 80169b2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80169b6:	695b      	ldr	r3, [r3, #20]
 80169b8:	687a      	ldr	r2, [r7, #4]
 80169ba:	7c12      	ldrb	r2, [r2, #16]
 80169bc:	f107 0108 	add.w	r1, r7, #8
 80169c0:	4610      	mov	r0, r2
 80169c2:	4798      	blx	r3
 80169c4:	60f8      	str	r0, [r7, #12]
 80169c6:	e029      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 80169c8:	6839      	ldr	r1, [r7, #0]
 80169ca:	6878      	ldr	r0, [r7, #4]
 80169cc:	f000 fa63 	bl	8016e96 <USBD_CtlError>
 80169d0:	7afb      	ldrb	r3, [r7, #11]
 80169d2:	3301      	adds	r3, #1
 80169d4:	72fb      	strb	r3, [r7, #11]
 80169d6:	e021      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 80169d8:	687b      	ldr	r3, [r7, #4]
 80169da:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80169de:	699b      	ldr	r3, [r3, #24]
 80169e0:	2b00      	cmp	r3, #0
 80169e2:	d00b      	beq.n	80169fc <USBD_GetDescriptor+0x1f4>
 80169e4:	687b      	ldr	r3, [r7, #4]
 80169e6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80169ea:	699b      	ldr	r3, [r3, #24]
 80169ec:	687a      	ldr	r2, [r7, #4]
 80169ee:	7c12      	ldrb	r2, [r2, #16]
 80169f0:	f107 0108 	add.w	r1, r7, #8
 80169f4:	4610      	mov	r0, r2
 80169f6:	4798      	blx	r3
 80169f8:	60f8      	str	r0, [r7, #12]
 80169fa:	e00f      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 80169fc:	6839      	ldr	r1, [r7, #0]
 80169fe:	6878      	ldr	r0, [r7, #4]
 8016a00:	f000 fa49 	bl	8016e96 <USBD_CtlError>
 8016a04:	7afb      	ldrb	r3, [r7, #11]
 8016a06:	3301      	adds	r3, #1
 8016a08:	72fb      	strb	r3, [r7, #11]
 8016a0a:	e007      	b.n	8016a1c <USBD_GetDescriptor+0x214>
 8016a0c:	6839      	ldr	r1, [r7, #0]
 8016a0e:	6878      	ldr	r0, [r7, #4]
 8016a10:	f000 fa41 	bl	8016e96 <USBD_CtlError>
 8016a14:	7afb      	ldrb	r3, [r7, #11]
 8016a16:	3301      	adds	r3, #1
 8016a18:	72fb      	strb	r3, [r7, #11]
 8016a1a:	bf00      	nop
 8016a1c:	e037      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 8016a1e:	687b      	ldr	r3, [r7, #4]
 8016a20:	7c1b      	ldrb	r3, [r3, #16]
 8016a22:	2b00      	cmp	r3, #0
 8016a24:	d109      	bne.n	8016a3a <USBD_GetDescriptor+0x232>
 8016a26:	687b      	ldr	r3, [r7, #4]
 8016a28:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016a2c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8016a2e:	f107 0208 	add.w	r2, r7, #8
 8016a32:	4610      	mov	r0, r2
 8016a34:	4798      	blx	r3
 8016a36:	60f8      	str	r0, [r7, #12]
 8016a38:	e029      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 8016a3a:	6839      	ldr	r1, [r7, #0]
 8016a3c:	6878      	ldr	r0, [r7, #4]
 8016a3e:	f000 fa2a 	bl	8016e96 <USBD_CtlError>
 8016a42:	7afb      	ldrb	r3, [r7, #11]
 8016a44:	3301      	adds	r3, #1
 8016a46:	72fb      	strb	r3, [r7, #11]
 8016a48:	e021      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 8016a4a:	687b      	ldr	r3, [r7, #4]
 8016a4c:	7c1b      	ldrb	r3, [r3, #16]
 8016a4e:	2b00      	cmp	r3, #0
 8016a50:	d10d      	bne.n	8016a6e <USBD_GetDescriptor+0x266>
 8016a52:	687b      	ldr	r3, [r7, #4]
 8016a54:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016a58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016a5a:	f107 0208 	add.w	r2, r7, #8
 8016a5e:	4610      	mov	r0, r2
 8016a60:	4798      	blx	r3
 8016a62:	60f8      	str	r0, [r7, #12]
 8016a64:	68fb      	ldr	r3, [r7, #12]
 8016a66:	3301      	adds	r3, #1
 8016a68:	2207      	movs	r2, #7
 8016a6a:	701a      	strb	r2, [r3, #0]
 8016a6c:	e00f      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 8016a6e:	6839      	ldr	r1, [r7, #0]
 8016a70:	6878      	ldr	r0, [r7, #4]
 8016a72:	f000 fa10 	bl	8016e96 <USBD_CtlError>
 8016a76:	7afb      	ldrb	r3, [r7, #11]
 8016a78:	3301      	adds	r3, #1
 8016a7a:	72fb      	strb	r3, [r7, #11]
 8016a7c:	e007      	b.n	8016a8e <USBD_GetDescriptor+0x286>
 8016a7e:	6839      	ldr	r1, [r7, #0]
 8016a80:	6878      	ldr	r0, [r7, #4]
 8016a82:	f000 fa08 	bl	8016e96 <USBD_CtlError>
 8016a86:	7afb      	ldrb	r3, [r7, #11]
 8016a88:	3301      	adds	r3, #1
 8016a8a:	72fb      	strb	r3, [r7, #11]
 8016a8c:	bf00      	nop
 8016a8e:	7afb      	ldrb	r3, [r7, #11]
 8016a90:	2b00      	cmp	r3, #0
 8016a92:	d11e      	bne.n	8016ad2 <USBD_GetDescriptor+0x2ca>
 8016a94:	683b      	ldr	r3, [r7, #0]
 8016a96:	88db      	ldrh	r3, [r3, #6]
 8016a98:	2b00      	cmp	r3, #0
 8016a9a:	d016      	beq.n	8016aca <USBD_GetDescriptor+0x2c2>
 8016a9c:	893b      	ldrh	r3, [r7, #8]
 8016a9e:	2b00      	cmp	r3, #0
 8016aa0:	d00e      	beq.n	8016ac0 <USBD_GetDescriptor+0x2b8>
 8016aa2:	683b      	ldr	r3, [r7, #0]
 8016aa4:	88da      	ldrh	r2, [r3, #6]
 8016aa6:	893b      	ldrh	r3, [r7, #8]
 8016aa8:	4293      	cmp	r3, r2
 8016aaa:	bf28      	it	cs
 8016aac:	4613      	movcs	r3, r2
 8016aae:	b29b      	uxth	r3, r3
 8016ab0:	813b      	strh	r3, [r7, #8]
 8016ab2:	893b      	ldrh	r3, [r7, #8]
 8016ab4:	461a      	mov	r2, r3
 8016ab6:	68f9      	ldr	r1, [r7, #12]
 8016ab8:	6878      	ldr	r0, [r7, #4]
 8016aba:	f000 fa5d 	bl	8016f78 <USBD_CtlSendData>
 8016abe:	e009      	b.n	8016ad4 <USBD_GetDescriptor+0x2cc>
 8016ac0:	6839      	ldr	r1, [r7, #0]
 8016ac2:	6878      	ldr	r0, [r7, #4]
 8016ac4:	f000 f9e7 	bl	8016e96 <USBD_CtlError>
 8016ac8:	e004      	b.n	8016ad4 <USBD_GetDescriptor+0x2cc>
 8016aca:	6878      	ldr	r0, [r7, #4]
 8016acc:	f000 faae 	bl	801702c <USBD_CtlSendStatus>
 8016ad0:	e000      	b.n	8016ad4 <USBD_GetDescriptor+0x2cc>
 8016ad2:	bf00      	nop
 8016ad4:	3710      	adds	r7, #16
 8016ad6:	46bd      	mov	sp, r7
 8016ad8:	bd80      	pop	{r7, pc}
 8016ada:	bf00      	nop

08016adc <USBD_SetAddress>:
 8016adc:	b580      	push	{r7, lr}
 8016ade:	b084      	sub	sp, #16
 8016ae0:	af00      	add	r7, sp, #0
 8016ae2:	6078      	str	r0, [r7, #4]
 8016ae4:	6039      	str	r1, [r7, #0]
 8016ae6:	683b      	ldr	r3, [r7, #0]
 8016ae8:	889b      	ldrh	r3, [r3, #4]
 8016aea:	2b00      	cmp	r3, #0
 8016aec:	d131      	bne.n	8016b52 <USBD_SetAddress+0x76>
 8016aee:	683b      	ldr	r3, [r7, #0]
 8016af0:	88db      	ldrh	r3, [r3, #6]
 8016af2:	2b00      	cmp	r3, #0
 8016af4:	d12d      	bne.n	8016b52 <USBD_SetAddress+0x76>
 8016af6:	683b      	ldr	r3, [r7, #0]
 8016af8:	885b      	ldrh	r3, [r3, #2]
 8016afa:	2b7f      	cmp	r3, #127	@ 0x7f
 8016afc:	d829      	bhi.n	8016b52 <USBD_SetAddress+0x76>
 8016afe:	683b      	ldr	r3, [r7, #0]
 8016b00:	885b      	ldrh	r3, [r3, #2]
 8016b02:	b2db      	uxtb	r3, r3
 8016b04:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8016b08:	73fb      	strb	r3, [r7, #15]
 8016b0a:	687b      	ldr	r3, [r7, #4]
 8016b0c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016b10:	b2db      	uxtb	r3, r3
 8016b12:	2b03      	cmp	r3, #3
 8016b14:	d104      	bne.n	8016b20 <USBD_SetAddress+0x44>
 8016b16:	6839      	ldr	r1, [r7, #0]
 8016b18:	6878      	ldr	r0, [r7, #4]
 8016b1a:	f000 f9bc 	bl	8016e96 <USBD_CtlError>
 8016b1e:	e01d      	b.n	8016b5c <USBD_SetAddress+0x80>
 8016b20:	687b      	ldr	r3, [r7, #4]
 8016b22:	7bfa      	ldrb	r2, [r7, #15]
 8016b24:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 8016b28:	7bfb      	ldrb	r3, [r7, #15]
 8016b2a:	4619      	mov	r1, r3
 8016b2c:	6878      	ldr	r0, [r7, #4]
 8016b2e:	f004 f827 	bl	801ab80 <USBD_LL_SetUSBAddress>
 8016b32:	6878      	ldr	r0, [r7, #4]
 8016b34:	f000 fa7a 	bl	801702c <USBD_CtlSendStatus>
 8016b38:	7bfb      	ldrb	r3, [r7, #15]
 8016b3a:	2b00      	cmp	r3, #0
 8016b3c:	d004      	beq.n	8016b48 <USBD_SetAddress+0x6c>
 8016b3e:	687b      	ldr	r3, [r7, #4]
 8016b40:	2202      	movs	r2, #2
 8016b42:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016b46:	e009      	b.n	8016b5c <USBD_SetAddress+0x80>
 8016b48:	687b      	ldr	r3, [r7, #4]
 8016b4a:	2201      	movs	r2, #1
 8016b4c:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016b50:	e004      	b.n	8016b5c <USBD_SetAddress+0x80>
 8016b52:	6839      	ldr	r1, [r7, #0]
 8016b54:	6878      	ldr	r0, [r7, #4]
 8016b56:	f000 f99e 	bl	8016e96 <USBD_CtlError>
 8016b5a:	bf00      	nop
 8016b5c:	bf00      	nop
 8016b5e:	3710      	adds	r7, #16
 8016b60:	46bd      	mov	sp, r7
 8016b62:	bd80      	pop	{r7, pc}

08016b64 <USBD_SetConfig>:
 8016b64:	b580      	push	{r7, lr}
 8016b66:	b084      	sub	sp, #16
 8016b68:	af00      	add	r7, sp, #0
 8016b6a:	6078      	str	r0, [r7, #4]
 8016b6c:	6039      	str	r1, [r7, #0]
 8016b6e:	2300      	movs	r3, #0
 8016b70:	73fb      	strb	r3, [r7, #15]
 8016b72:	683b      	ldr	r3, [r7, #0]
 8016b74:	885b      	ldrh	r3, [r3, #2]
 8016b76:	b2da      	uxtb	r2, r3
 8016b78:	4b4e      	ldr	r3, [pc, #312]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016b7a:	701a      	strb	r2, [r3, #0]
 8016b7c:	4b4d      	ldr	r3, [pc, #308]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016b7e:	781b      	ldrb	r3, [r3, #0]
 8016b80:	2b01      	cmp	r3, #1
 8016b82:	d905      	bls.n	8016b90 <USBD_SetConfig+0x2c>
 8016b84:	6839      	ldr	r1, [r7, #0]
 8016b86:	6878      	ldr	r0, [r7, #4]
 8016b88:	f000 f985 	bl	8016e96 <USBD_CtlError>
 8016b8c:	2303      	movs	r3, #3
 8016b8e:	e08c      	b.n	8016caa <USBD_SetConfig+0x146>
 8016b90:	687b      	ldr	r3, [r7, #4]
 8016b92:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016b96:	b2db      	uxtb	r3, r3
 8016b98:	2b02      	cmp	r3, #2
 8016b9a:	d002      	beq.n	8016ba2 <USBD_SetConfig+0x3e>
 8016b9c:	2b03      	cmp	r3, #3
 8016b9e:	d029      	beq.n	8016bf4 <USBD_SetConfig+0x90>
 8016ba0:	e075      	b.n	8016c8e <USBD_SetConfig+0x12a>
 8016ba2:	4b44      	ldr	r3, [pc, #272]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016ba4:	781b      	ldrb	r3, [r3, #0]
 8016ba6:	2b00      	cmp	r3, #0
 8016ba8:	d020      	beq.n	8016bec <USBD_SetConfig+0x88>
 8016baa:	4b42      	ldr	r3, [pc, #264]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016bac:	781b      	ldrb	r3, [r3, #0]
 8016bae:	461a      	mov	r2, r3
 8016bb0:	687b      	ldr	r3, [r7, #4]
 8016bb2:	605a      	str	r2, [r3, #4]
 8016bb4:	4b3f      	ldr	r3, [pc, #252]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016bb6:	781b      	ldrb	r3, [r3, #0]
 8016bb8:	4619      	mov	r1, r3
 8016bba:	6878      	ldr	r0, [r7, #4]
 8016bbc:	f7fe ffe9 	bl	8015b92 <USBD_SetClassConfig>
 8016bc0:	4603      	mov	r3, r0
 8016bc2:	73fb      	strb	r3, [r7, #15]
 8016bc4:	7bfb      	ldrb	r3, [r7, #15]
 8016bc6:	2b00      	cmp	r3, #0
 8016bc8:	d008      	beq.n	8016bdc <USBD_SetConfig+0x78>
 8016bca:	6839      	ldr	r1, [r7, #0]
 8016bcc:	6878      	ldr	r0, [r7, #4]
 8016bce:	f000 f962 	bl	8016e96 <USBD_CtlError>
 8016bd2:	687b      	ldr	r3, [r7, #4]
 8016bd4:	2202      	movs	r2, #2
 8016bd6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016bda:	e065      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016bdc:	6878      	ldr	r0, [r7, #4]
 8016bde:	f000 fa25 	bl	801702c <USBD_CtlSendStatus>
 8016be2:	687b      	ldr	r3, [r7, #4]
 8016be4:	2203      	movs	r2, #3
 8016be6:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016bea:	e05d      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016bec:	6878      	ldr	r0, [r7, #4]
 8016bee:	f000 fa1d 	bl	801702c <USBD_CtlSendStatus>
 8016bf2:	e059      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016bf4:	4b2f      	ldr	r3, [pc, #188]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016bf6:	781b      	ldrb	r3, [r3, #0]
 8016bf8:	2b00      	cmp	r3, #0
 8016bfa:	d112      	bne.n	8016c22 <USBD_SetConfig+0xbe>
 8016bfc:	687b      	ldr	r3, [r7, #4]
 8016bfe:	2202      	movs	r2, #2
 8016c00:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016c04:	4b2b      	ldr	r3, [pc, #172]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016c06:	781b      	ldrb	r3, [r3, #0]
 8016c08:	461a      	mov	r2, r3
 8016c0a:	687b      	ldr	r3, [r7, #4]
 8016c0c:	605a      	str	r2, [r3, #4]
 8016c0e:	4b29      	ldr	r3, [pc, #164]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016c10:	781b      	ldrb	r3, [r3, #0]
 8016c12:	4619      	mov	r1, r3
 8016c14:	6878      	ldr	r0, [r7, #4]
 8016c16:	f7fe ffd8 	bl	8015bca <USBD_ClrClassConfig>
 8016c1a:	6878      	ldr	r0, [r7, #4]
 8016c1c:	f000 fa06 	bl	801702c <USBD_CtlSendStatus>
 8016c20:	e042      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016c22:	4b24      	ldr	r3, [pc, #144]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016c24:	781b      	ldrb	r3, [r3, #0]
 8016c26:	461a      	mov	r2, r3
 8016c28:	687b      	ldr	r3, [r7, #4]
 8016c2a:	685b      	ldr	r3, [r3, #4]
 8016c2c:	429a      	cmp	r2, r3
 8016c2e:	d02a      	beq.n	8016c86 <USBD_SetConfig+0x122>
 8016c30:	687b      	ldr	r3, [r7, #4]
 8016c32:	685b      	ldr	r3, [r3, #4]
 8016c34:	b2db      	uxtb	r3, r3
 8016c36:	4619      	mov	r1, r3
 8016c38:	6878      	ldr	r0, [r7, #4]
 8016c3a:	f7fe ffc6 	bl	8015bca <USBD_ClrClassConfig>
 8016c3e:	4b1d      	ldr	r3, [pc, #116]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016c40:	781b      	ldrb	r3, [r3, #0]
 8016c42:	461a      	mov	r2, r3
 8016c44:	687b      	ldr	r3, [r7, #4]
 8016c46:	605a      	str	r2, [r3, #4]
 8016c48:	4b1a      	ldr	r3, [pc, #104]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016c4a:	781b      	ldrb	r3, [r3, #0]
 8016c4c:	4619      	mov	r1, r3
 8016c4e:	6878      	ldr	r0, [r7, #4]
 8016c50:	f7fe ff9f 	bl	8015b92 <USBD_SetClassConfig>
 8016c54:	4603      	mov	r3, r0
 8016c56:	73fb      	strb	r3, [r7, #15]
 8016c58:	7bfb      	ldrb	r3, [r7, #15]
 8016c5a:	2b00      	cmp	r3, #0
 8016c5c:	d00f      	beq.n	8016c7e <USBD_SetConfig+0x11a>
 8016c5e:	6839      	ldr	r1, [r7, #0]
 8016c60:	6878      	ldr	r0, [r7, #4]
 8016c62:	f000 f918 	bl	8016e96 <USBD_CtlError>
 8016c66:	687b      	ldr	r3, [r7, #4]
 8016c68:	685b      	ldr	r3, [r3, #4]
 8016c6a:	b2db      	uxtb	r3, r3
 8016c6c:	4619      	mov	r1, r3
 8016c6e:	6878      	ldr	r0, [r7, #4]
 8016c70:	f7fe ffab 	bl	8015bca <USBD_ClrClassConfig>
 8016c74:	687b      	ldr	r3, [r7, #4]
 8016c76:	2202      	movs	r2, #2
 8016c78:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016c7c:	e014      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016c7e:	6878      	ldr	r0, [r7, #4]
 8016c80:	f000 f9d4 	bl	801702c <USBD_CtlSendStatus>
 8016c84:	e010      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016c86:	6878      	ldr	r0, [r7, #4]
 8016c88:	f000 f9d0 	bl	801702c <USBD_CtlSendStatus>
 8016c8c:	e00c      	b.n	8016ca8 <USBD_SetConfig+0x144>
 8016c8e:	6839      	ldr	r1, [r7, #0]
 8016c90:	6878      	ldr	r0, [r7, #4]
 8016c92:	f000 f900 	bl	8016e96 <USBD_CtlError>
 8016c96:	4b07      	ldr	r3, [pc, #28]	@ (8016cb4 <USBD_SetConfig+0x150>)
 8016c98:	781b      	ldrb	r3, [r3, #0]
 8016c9a:	4619      	mov	r1, r3
 8016c9c:	6878      	ldr	r0, [r7, #4]
 8016c9e:	f7fe ff94 	bl	8015bca <USBD_ClrClassConfig>
 8016ca2:	2303      	movs	r3, #3
 8016ca4:	73fb      	strb	r3, [r7, #15]
 8016ca6:	bf00      	nop
 8016ca8:	7bfb      	ldrb	r3, [r7, #15]
 8016caa:	4618      	mov	r0, r3
 8016cac:	3710      	adds	r7, #16
 8016cae:	46bd      	mov	sp, r7
 8016cb0:	bd80      	pop	{r7, pc}
 8016cb2:	bf00      	nop
 8016cb4:	20003adc 	.word	0x20003adc

08016cb8 <USBD_GetConfig>:
 8016cb8:	b580      	push	{r7, lr}
 8016cba:	b082      	sub	sp, #8
 8016cbc:	af00      	add	r7, sp, #0
 8016cbe:	6078      	str	r0, [r7, #4]
 8016cc0:	6039      	str	r1, [r7, #0]
 8016cc2:	683b      	ldr	r3, [r7, #0]
 8016cc4:	88db      	ldrh	r3, [r3, #6]
 8016cc6:	2b01      	cmp	r3, #1
 8016cc8:	d004      	beq.n	8016cd4 <USBD_GetConfig+0x1c>
 8016cca:	6839      	ldr	r1, [r7, #0]
 8016ccc:	6878      	ldr	r0, [r7, #4]
 8016cce:	f000 f8e2 	bl	8016e96 <USBD_CtlError>
 8016cd2:	e023      	b.n	8016d1c <USBD_GetConfig+0x64>
 8016cd4:	687b      	ldr	r3, [r7, #4]
 8016cd6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016cda:	b2db      	uxtb	r3, r3
 8016cdc:	2b02      	cmp	r3, #2
 8016cde:	dc02      	bgt.n	8016ce6 <USBD_GetConfig+0x2e>
 8016ce0:	2b00      	cmp	r3, #0
 8016ce2:	dc03      	bgt.n	8016cec <USBD_GetConfig+0x34>
 8016ce4:	e015      	b.n	8016d12 <USBD_GetConfig+0x5a>
 8016ce6:	2b03      	cmp	r3, #3
 8016ce8:	d00b      	beq.n	8016d02 <USBD_GetConfig+0x4a>
 8016cea:	e012      	b.n	8016d12 <USBD_GetConfig+0x5a>
 8016cec:	687b      	ldr	r3, [r7, #4]
 8016cee:	2200      	movs	r2, #0
 8016cf0:	609a      	str	r2, [r3, #8]
 8016cf2:	687b      	ldr	r3, [r7, #4]
 8016cf4:	3308      	adds	r3, #8
 8016cf6:	2201      	movs	r2, #1
 8016cf8:	4619      	mov	r1, r3
 8016cfa:	6878      	ldr	r0, [r7, #4]
 8016cfc:	f000 f93c 	bl	8016f78 <USBD_CtlSendData>
 8016d00:	e00c      	b.n	8016d1c <USBD_GetConfig+0x64>
 8016d02:	687b      	ldr	r3, [r7, #4]
 8016d04:	3304      	adds	r3, #4
 8016d06:	2201      	movs	r2, #1
 8016d08:	4619      	mov	r1, r3
 8016d0a:	6878      	ldr	r0, [r7, #4]
 8016d0c:	f000 f934 	bl	8016f78 <USBD_CtlSendData>
 8016d10:	e004      	b.n	8016d1c <USBD_GetConfig+0x64>
 8016d12:	6839      	ldr	r1, [r7, #0]
 8016d14:	6878      	ldr	r0, [r7, #4]
 8016d16:	f000 f8be 	bl	8016e96 <USBD_CtlError>
 8016d1a:	bf00      	nop
 8016d1c:	bf00      	nop
 8016d1e:	3708      	adds	r7, #8
 8016d20:	46bd      	mov	sp, r7
 8016d22:	bd80      	pop	{r7, pc}

08016d24 <USBD_GetStatus>:
 8016d24:	b580      	push	{r7, lr}
 8016d26:	b082      	sub	sp, #8
 8016d28:	af00      	add	r7, sp, #0
 8016d2a:	6078      	str	r0, [r7, #4]
 8016d2c:	6039      	str	r1, [r7, #0]
 8016d2e:	687b      	ldr	r3, [r7, #4]
 8016d30:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016d34:	b2db      	uxtb	r3, r3
 8016d36:	3b01      	subs	r3, #1
 8016d38:	2b02      	cmp	r3, #2
 8016d3a:	d81e      	bhi.n	8016d7a <USBD_GetStatus+0x56>
 8016d3c:	683b      	ldr	r3, [r7, #0]
 8016d3e:	88db      	ldrh	r3, [r3, #6]
 8016d40:	2b02      	cmp	r3, #2
 8016d42:	d004      	beq.n	8016d4e <USBD_GetStatus+0x2a>
 8016d44:	6839      	ldr	r1, [r7, #0]
 8016d46:	6878      	ldr	r0, [r7, #4]
 8016d48:	f000 f8a5 	bl	8016e96 <USBD_CtlError>
 8016d4c:	e01a      	b.n	8016d84 <USBD_GetStatus+0x60>
 8016d4e:	687b      	ldr	r3, [r7, #4]
 8016d50:	2201      	movs	r2, #1
 8016d52:	60da      	str	r2, [r3, #12]
 8016d54:	687b      	ldr	r3, [r7, #4]
 8016d56:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 8016d5a:	2b00      	cmp	r3, #0
 8016d5c:	d005      	beq.n	8016d6a <USBD_GetStatus+0x46>
 8016d5e:	687b      	ldr	r3, [r7, #4]
 8016d60:	68db      	ldr	r3, [r3, #12]
 8016d62:	f043 0202 	orr.w	r2, r3, #2
 8016d66:	687b      	ldr	r3, [r7, #4]
 8016d68:	60da      	str	r2, [r3, #12]
 8016d6a:	687b      	ldr	r3, [r7, #4]
 8016d6c:	330c      	adds	r3, #12
 8016d6e:	2202      	movs	r2, #2
 8016d70:	4619      	mov	r1, r3
 8016d72:	6878      	ldr	r0, [r7, #4]
 8016d74:	f000 f900 	bl	8016f78 <USBD_CtlSendData>
 8016d78:	e004      	b.n	8016d84 <USBD_GetStatus+0x60>
 8016d7a:	6839      	ldr	r1, [r7, #0]
 8016d7c:	6878      	ldr	r0, [r7, #4]
 8016d7e:	f000 f88a 	bl	8016e96 <USBD_CtlError>
 8016d82:	bf00      	nop
 8016d84:	bf00      	nop
 8016d86:	3708      	adds	r7, #8
 8016d88:	46bd      	mov	sp, r7
 8016d8a:	bd80      	pop	{r7, pc}

08016d8c <USBD_SetFeature>:
 8016d8c:	b580      	push	{r7, lr}
 8016d8e:	b082      	sub	sp, #8
 8016d90:	af00      	add	r7, sp, #0
 8016d92:	6078      	str	r0, [r7, #4]
 8016d94:	6039      	str	r1, [r7, #0]
 8016d96:	683b      	ldr	r3, [r7, #0]
 8016d98:	885b      	ldrh	r3, [r3, #2]
 8016d9a:	2b01      	cmp	r3, #1
 8016d9c:	d107      	bne.n	8016dae <USBD_SetFeature+0x22>
 8016d9e:	687b      	ldr	r3, [r7, #4]
 8016da0:	2201      	movs	r2, #1
 8016da2:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8016da6:	6878      	ldr	r0, [r7, #4]
 8016da8:	f000 f940 	bl	801702c <USBD_CtlSendStatus>
 8016dac:	e013      	b.n	8016dd6 <USBD_SetFeature+0x4a>
 8016dae:	683b      	ldr	r3, [r7, #0]
 8016db0:	885b      	ldrh	r3, [r3, #2]
 8016db2:	2b02      	cmp	r3, #2
 8016db4:	d10b      	bne.n	8016dce <USBD_SetFeature+0x42>
 8016db6:	683b      	ldr	r3, [r7, #0]
 8016db8:	889b      	ldrh	r3, [r3, #4]
 8016dba:	0a1b      	lsrs	r3, r3, #8
 8016dbc:	b29b      	uxth	r3, r3
 8016dbe:	b2da      	uxtb	r2, r3
 8016dc0:	687b      	ldr	r3, [r7, #4]
 8016dc2:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8016dc6:	6878      	ldr	r0, [r7, #4]
 8016dc8:	f000 f930 	bl	801702c <USBD_CtlSendStatus>
 8016dcc:	e003      	b.n	8016dd6 <USBD_SetFeature+0x4a>
 8016dce:	6839      	ldr	r1, [r7, #0]
 8016dd0:	6878      	ldr	r0, [r7, #4]
 8016dd2:	f000 f860 	bl	8016e96 <USBD_CtlError>
 8016dd6:	bf00      	nop
 8016dd8:	3708      	adds	r7, #8
 8016dda:	46bd      	mov	sp, r7
 8016ddc:	bd80      	pop	{r7, pc}

08016dde <USBD_ClrFeature>:
 8016dde:	b580      	push	{r7, lr}
 8016de0:	b082      	sub	sp, #8
 8016de2:	af00      	add	r7, sp, #0
 8016de4:	6078      	str	r0, [r7, #4]
 8016de6:	6039      	str	r1, [r7, #0]
 8016de8:	687b      	ldr	r3, [r7, #4]
 8016dea:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016dee:	b2db      	uxtb	r3, r3
 8016df0:	3b01      	subs	r3, #1
 8016df2:	2b02      	cmp	r3, #2
 8016df4:	d80b      	bhi.n	8016e0e <USBD_ClrFeature+0x30>
 8016df6:	683b      	ldr	r3, [r7, #0]
 8016df8:	885b      	ldrh	r3, [r3, #2]
 8016dfa:	2b01      	cmp	r3, #1
 8016dfc:	d10c      	bne.n	8016e18 <USBD_ClrFeature+0x3a>
 8016dfe:	687b      	ldr	r3, [r7, #4]
 8016e00:	2200      	movs	r2, #0
 8016e02:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8016e06:	6878      	ldr	r0, [r7, #4]
 8016e08:	f000 f910 	bl	801702c <USBD_CtlSendStatus>
 8016e0c:	e004      	b.n	8016e18 <USBD_ClrFeature+0x3a>
 8016e0e:	6839      	ldr	r1, [r7, #0]
 8016e10:	6878      	ldr	r0, [r7, #4]
 8016e12:	f000 f840 	bl	8016e96 <USBD_CtlError>
 8016e16:	e000      	b.n	8016e1a <USBD_ClrFeature+0x3c>
 8016e18:	bf00      	nop
 8016e1a:	bf00      	nop
 8016e1c:	3708      	adds	r7, #8
 8016e1e:	46bd      	mov	sp, r7
 8016e20:	bd80      	pop	{r7, pc}

08016e22 <USBD_ParseSetupRequest>:
 8016e22:	b580      	push	{r7, lr}
 8016e24:	b084      	sub	sp, #16
 8016e26:	af00      	add	r7, sp, #0
 8016e28:	6078      	str	r0, [r7, #4]
 8016e2a:	6039      	str	r1, [r7, #0]
 8016e2c:	683b      	ldr	r3, [r7, #0]
 8016e2e:	60fb      	str	r3, [r7, #12]
 8016e30:	68fb      	ldr	r3, [r7, #12]
 8016e32:	781a      	ldrb	r2, [r3, #0]
 8016e34:	687b      	ldr	r3, [r7, #4]
 8016e36:	701a      	strb	r2, [r3, #0]
 8016e38:	68fb      	ldr	r3, [r7, #12]
 8016e3a:	3301      	adds	r3, #1
 8016e3c:	60fb      	str	r3, [r7, #12]
 8016e3e:	68fb      	ldr	r3, [r7, #12]
 8016e40:	781a      	ldrb	r2, [r3, #0]
 8016e42:	687b      	ldr	r3, [r7, #4]
 8016e44:	705a      	strb	r2, [r3, #1]
 8016e46:	68fb      	ldr	r3, [r7, #12]
 8016e48:	3301      	adds	r3, #1
 8016e4a:	60fb      	str	r3, [r7, #12]
 8016e4c:	68f8      	ldr	r0, [r7, #12]
 8016e4e:	f7ff fa40 	bl	80162d2 <SWAPBYTE>
 8016e52:	4603      	mov	r3, r0
 8016e54:	461a      	mov	r2, r3
 8016e56:	687b      	ldr	r3, [r7, #4]
 8016e58:	805a      	strh	r2, [r3, #2]
 8016e5a:	68fb      	ldr	r3, [r7, #12]
 8016e5c:	3301      	adds	r3, #1
 8016e5e:	60fb      	str	r3, [r7, #12]
 8016e60:	68fb      	ldr	r3, [r7, #12]
 8016e62:	3301      	adds	r3, #1
 8016e64:	60fb      	str	r3, [r7, #12]
 8016e66:	68f8      	ldr	r0, [r7, #12]
 8016e68:	f7ff fa33 	bl	80162d2 <SWAPBYTE>
 8016e6c:	4603      	mov	r3, r0
 8016e6e:	461a      	mov	r2, r3
 8016e70:	687b      	ldr	r3, [r7, #4]
 8016e72:	809a      	strh	r2, [r3, #4]
 8016e74:	68fb      	ldr	r3, [r7, #12]
 8016e76:	3301      	adds	r3, #1
 8016e78:	60fb      	str	r3, [r7, #12]
 8016e7a:	68fb      	ldr	r3, [r7, #12]
 8016e7c:	3301      	adds	r3, #1
 8016e7e:	60fb      	str	r3, [r7, #12]
 8016e80:	68f8      	ldr	r0, [r7, #12]
 8016e82:	f7ff fa26 	bl	80162d2 <SWAPBYTE>
 8016e86:	4603      	mov	r3, r0
 8016e88:	461a      	mov	r2, r3
 8016e8a:	687b      	ldr	r3, [r7, #4]
 8016e8c:	80da      	strh	r2, [r3, #6]
 8016e8e:	bf00      	nop
 8016e90:	3710      	adds	r7, #16
 8016e92:	46bd      	mov	sp, r7
 8016e94:	bd80      	pop	{r7, pc}

08016e96 <USBD_CtlError>:
 8016e96:	b580      	push	{r7, lr}
 8016e98:	b082      	sub	sp, #8
 8016e9a:	af00      	add	r7, sp, #0
 8016e9c:	6078      	str	r0, [r7, #4]
 8016e9e:	6039      	str	r1, [r7, #0]
 8016ea0:	2180      	movs	r1, #128	@ 0x80
 8016ea2:	6878      	ldr	r0, [r7, #4]
 8016ea4:	f003 fe02 	bl	801aaac <USBD_LL_StallEP>
 8016ea8:	2100      	movs	r1, #0
 8016eaa:	6878      	ldr	r0, [r7, #4]
 8016eac:	f003 fdfe 	bl	801aaac <USBD_LL_StallEP>
 8016eb0:	bf00      	nop
 8016eb2:	3708      	adds	r7, #8
 8016eb4:	46bd      	mov	sp, r7
 8016eb6:	bd80      	pop	{r7, pc}

08016eb8 <USBD_GetString>:
 8016eb8:	b580      	push	{r7, lr}
 8016eba:	b086      	sub	sp, #24
 8016ebc:	af00      	add	r7, sp, #0
 8016ebe:	60f8      	str	r0, [r7, #12]
 8016ec0:	60b9      	str	r1, [r7, #8]
 8016ec2:	607a      	str	r2, [r7, #4]
 8016ec4:	2300      	movs	r3, #0
 8016ec6:	75fb      	strb	r3, [r7, #23]
 8016ec8:	68fb      	ldr	r3, [r7, #12]
 8016eca:	2b00      	cmp	r3, #0
 8016ecc:	d036      	beq.n	8016f3c <USBD_GetString+0x84>
 8016ece:	68fb      	ldr	r3, [r7, #12]
 8016ed0:	613b      	str	r3, [r7, #16]
 8016ed2:	6938      	ldr	r0, [r7, #16]
 8016ed4:	f000 f836 	bl	8016f44 <USBD_GetLen>
 8016ed8:	4603      	mov	r3, r0
 8016eda:	3301      	adds	r3, #1
 8016edc:	b29b      	uxth	r3, r3
 8016ede:	005b      	lsls	r3, r3, #1
 8016ee0:	b29a      	uxth	r2, r3
 8016ee2:	687b      	ldr	r3, [r7, #4]
 8016ee4:	801a      	strh	r2, [r3, #0]
 8016ee6:	7dfb      	ldrb	r3, [r7, #23]
 8016ee8:	68ba      	ldr	r2, [r7, #8]
 8016eea:	4413      	add	r3, r2
 8016eec:	687a      	ldr	r2, [r7, #4]
 8016eee:	7812      	ldrb	r2, [r2, #0]
 8016ef0:	701a      	strb	r2, [r3, #0]
 8016ef2:	7dfb      	ldrb	r3, [r7, #23]
 8016ef4:	3301      	adds	r3, #1
 8016ef6:	75fb      	strb	r3, [r7, #23]
 8016ef8:	7dfb      	ldrb	r3, [r7, #23]
 8016efa:	68ba      	ldr	r2, [r7, #8]
 8016efc:	4413      	add	r3, r2
 8016efe:	2203      	movs	r2, #3
 8016f00:	701a      	strb	r2, [r3, #0]
 8016f02:	7dfb      	ldrb	r3, [r7, #23]
 8016f04:	3301      	adds	r3, #1
 8016f06:	75fb      	strb	r3, [r7, #23]
 8016f08:	e013      	b.n	8016f32 <USBD_GetString+0x7a>
 8016f0a:	7dfb      	ldrb	r3, [r7, #23]
 8016f0c:	68ba      	ldr	r2, [r7, #8]
 8016f0e:	4413      	add	r3, r2
 8016f10:	693a      	ldr	r2, [r7, #16]
 8016f12:	7812      	ldrb	r2, [r2, #0]
 8016f14:	701a      	strb	r2, [r3, #0]
 8016f16:	693b      	ldr	r3, [r7, #16]
 8016f18:	3301      	adds	r3, #1
 8016f1a:	613b      	str	r3, [r7, #16]
 8016f1c:	7dfb      	ldrb	r3, [r7, #23]
 8016f1e:	3301      	adds	r3, #1
 8016f20:	75fb      	strb	r3, [r7, #23]
 8016f22:	7dfb      	ldrb	r3, [r7, #23]
 8016f24:	68ba      	ldr	r2, [r7, #8]
 8016f26:	4413      	add	r3, r2
 8016f28:	2200      	movs	r2, #0
 8016f2a:	701a      	strb	r2, [r3, #0]
 8016f2c:	7dfb      	ldrb	r3, [r7, #23]
 8016f2e:	3301      	adds	r3, #1
 8016f30:	75fb      	strb	r3, [r7, #23]
 8016f32:	693b      	ldr	r3, [r7, #16]
 8016f34:	781b      	ldrb	r3, [r3, #0]
 8016f36:	2b00      	cmp	r3, #0
 8016f38:	d1e7      	bne.n	8016f0a <USBD_GetString+0x52>
 8016f3a:	e000      	b.n	8016f3e <USBD_GetString+0x86>
 8016f3c:	bf00      	nop
 8016f3e:	3718      	adds	r7, #24
 8016f40:	46bd      	mov	sp, r7
 8016f42:	bd80      	pop	{r7, pc}

08016f44 <USBD_GetLen>:
 8016f44:	b480      	push	{r7}
 8016f46:	b085      	sub	sp, #20
 8016f48:	af00      	add	r7, sp, #0
 8016f4a:	6078      	str	r0, [r7, #4]
 8016f4c:	2300      	movs	r3, #0
 8016f4e:	73fb      	strb	r3, [r7, #15]
 8016f50:	687b      	ldr	r3, [r7, #4]
 8016f52:	60bb      	str	r3, [r7, #8]
 8016f54:	e005      	b.n	8016f62 <USBD_GetLen+0x1e>
 8016f56:	7bfb      	ldrb	r3, [r7, #15]
 8016f58:	3301      	adds	r3, #1
 8016f5a:	73fb      	strb	r3, [r7, #15]
 8016f5c:	68bb      	ldr	r3, [r7, #8]
 8016f5e:	3301      	adds	r3, #1
 8016f60:	60bb      	str	r3, [r7, #8]
 8016f62:	68bb      	ldr	r3, [r7, #8]
 8016f64:	781b      	ldrb	r3, [r3, #0]
 8016f66:	2b00      	cmp	r3, #0
 8016f68:	d1f5      	bne.n	8016f56 <USBD_GetLen+0x12>
 8016f6a:	7bfb      	ldrb	r3, [r7, #15]
 8016f6c:	4618      	mov	r0, r3
 8016f6e:	3714      	adds	r7, #20
 8016f70:	46bd      	mov	sp, r7
 8016f72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016f76:	4770      	bx	lr

08016f78 <USBD_CtlSendData>:
 8016f78:	b580      	push	{r7, lr}
 8016f7a:	b084      	sub	sp, #16
 8016f7c:	af00      	add	r7, sp, #0
 8016f7e:	60f8      	str	r0, [r7, #12]
 8016f80:	60b9      	str	r1, [r7, #8]
 8016f82:	607a      	str	r2, [r7, #4]
 8016f84:	68fb      	ldr	r3, [r7, #12]
 8016f86:	2202      	movs	r2, #2
 8016f88:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016f8c:	68fb      	ldr	r3, [r7, #12]
 8016f8e:	687a      	ldr	r2, [r7, #4]
 8016f90:	619a      	str	r2, [r3, #24]
 8016f92:	68fb      	ldr	r3, [r7, #12]
 8016f94:	687a      	ldr	r2, [r7, #4]
 8016f96:	61da      	str	r2, [r3, #28]
 8016f98:	687b      	ldr	r3, [r7, #4]
 8016f9a:	68ba      	ldr	r2, [r7, #8]
 8016f9c:	2100      	movs	r1, #0
 8016f9e:	68f8      	ldr	r0, [r7, #12]
 8016fa0:	f003 fe0d 	bl	801abbe <USBD_LL_Transmit>
 8016fa4:	2300      	movs	r3, #0
 8016fa6:	4618      	mov	r0, r3
 8016fa8:	3710      	adds	r7, #16
 8016faa:	46bd      	mov	sp, r7
 8016fac:	bd80      	pop	{r7, pc}

08016fae <USBD_CtlContinueSendData>:
 8016fae:	b580      	push	{r7, lr}
 8016fb0:	b084      	sub	sp, #16
 8016fb2:	af00      	add	r7, sp, #0
 8016fb4:	60f8      	str	r0, [r7, #12]
 8016fb6:	60b9      	str	r1, [r7, #8]
 8016fb8:	607a      	str	r2, [r7, #4]
 8016fba:	687b      	ldr	r3, [r7, #4]
 8016fbc:	68ba      	ldr	r2, [r7, #8]
 8016fbe:	2100      	movs	r1, #0
 8016fc0:	68f8      	ldr	r0, [r7, #12]
 8016fc2:	f003 fdfc 	bl	801abbe <USBD_LL_Transmit>
 8016fc6:	2300      	movs	r3, #0
 8016fc8:	4618      	mov	r0, r3
 8016fca:	3710      	adds	r7, #16
 8016fcc:	46bd      	mov	sp, r7
 8016fce:	bd80      	pop	{r7, pc}

08016fd0 <USBD_CtlPrepareRx>:
 8016fd0:	b580      	push	{r7, lr}
 8016fd2:	b084      	sub	sp, #16
 8016fd4:	af00      	add	r7, sp, #0
 8016fd6:	60f8      	str	r0, [r7, #12]
 8016fd8:	60b9      	str	r1, [r7, #8]
 8016fda:	607a      	str	r2, [r7, #4]
 8016fdc:	68fb      	ldr	r3, [r7, #12]
 8016fde:	2203      	movs	r2, #3
 8016fe0:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016fe4:	68fb      	ldr	r3, [r7, #12]
 8016fe6:	687a      	ldr	r2, [r7, #4]
 8016fe8:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 8016fec:	68fb      	ldr	r3, [r7, #12]
 8016fee:	687a      	ldr	r2, [r7, #4]
 8016ff0:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 8016ff4:	687b      	ldr	r3, [r7, #4]
 8016ff6:	68ba      	ldr	r2, [r7, #8]
 8016ff8:	2100      	movs	r1, #0
 8016ffa:	68f8      	ldr	r0, [r7, #12]
 8016ffc:	f003 fe00 	bl	801ac00 <USBD_LL_PrepareReceive>
 8017000:	2300      	movs	r3, #0
 8017002:	4618      	mov	r0, r3
 8017004:	3710      	adds	r7, #16
 8017006:	46bd      	mov	sp, r7
 8017008:	bd80      	pop	{r7, pc}

0801700a <USBD_CtlContinueRx>:
 801700a:	b580      	push	{r7, lr}
 801700c:	b084      	sub	sp, #16
 801700e:	af00      	add	r7, sp, #0
 8017010:	60f8      	str	r0, [r7, #12]
 8017012:	60b9      	str	r1, [r7, #8]
 8017014:	607a      	str	r2, [r7, #4]
 8017016:	687b      	ldr	r3, [r7, #4]
 8017018:	68ba      	ldr	r2, [r7, #8]
 801701a:	2100      	movs	r1, #0
 801701c:	68f8      	ldr	r0, [r7, #12]
 801701e:	f003 fdef 	bl	801ac00 <USBD_LL_PrepareReceive>
 8017022:	2300      	movs	r3, #0
 8017024:	4618      	mov	r0, r3
 8017026:	3710      	adds	r7, #16
 8017028:	46bd      	mov	sp, r7
 801702a:	bd80      	pop	{r7, pc}

0801702c <USBD_CtlSendStatus>:
 801702c:	b580      	push	{r7, lr}
 801702e:	b082      	sub	sp, #8
 8017030:	af00      	add	r7, sp, #0
 8017032:	6078      	str	r0, [r7, #4]
 8017034:	687b      	ldr	r3, [r7, #4]
 8017036:	2204      	movs	r2, #4
 8017038:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 801703c:	2300      	movs	r3, #0
 801703e:	2200      	movs	r2, #0
 8017040:	2100      	movs	r1, #0
 8017042:	6878      	ldr	r0, [r7, #4]
 8017044:	f003 fdbb 	bl	801abbe <USBD_LL_Transmit>
 8017048:	2300      	movs	r3, #0
 801704a:	4618      	mov	r0, r3
 801704c:	3708      	adds	r7, #8
 801704e:	46bd      	mov	sp, r7
 8017050:	bd80      	pop	{r7, pc}

08017052 <USBD_CtlReceiveStatus>:
 8017052:	b580      	push	{r7, lr}
 8017054:	b082      	sub	sp, #8
 8017056:	af00      	add	r7, sp, #0
 8017058:	6078      	str	r0, [r7, #4]
 801705a:	687b      	ldr	r3, [r7, #4]
 801705c:	2205      	movs	r2, #5
 801705e:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8017062:	2300      	movs	r3, #0
 8017064:	2200      	movs	r2, #0
 8017066:	2100      	movs	r1, #0
 8017068:	6878      	ldr	r0, [r7, #4]
 801706a:	f003 fdc9 	bl	801ac00 <USBD_LL_PrepareReceive>
 801706e:	2300      	movs	r3, #0
 8017070:	4618      	mov	r0, r3
 8017072:	3708      	adds	r7, #8
 8017074:	46bd      	mov	sp, r7
 8017076:	bd80      	pop	{r7, pc}

08017078 <makeFreeRtosPriority>:
 8017078:	b480      	push	{r7}
 801707a:	b085      	sub	sp, #20
 801707c:	af00      	add	r7, sp, #0
 801707e:	4603      	mov	r3, r0
 8017080:	80fb      	strh	r3, [r7, #6]
 8017082:	2300      	movs	r3, #0
 8017084:	60fb      	str	r3, [r7, #12]
 8017086:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 801708a:	2b84      	cmp	r3, #132	@ 0x84
 801708c:	d005      	beq.n	801709a <makeFreeRtosPriority+0x22>
 801708e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8017092:	68fb      	ldr	r3, [r7, #12]
 8017094:	4413      	add	r3, r2
 8017096:	3303      	adds	r3, #3
 8017098:	60fb      	str	r3, [r7, #12]
 801709a:	68fb      	ldr	r3, [r7, #12]
 801709c:	4618      	mov	r0, r3
 801709e:	3714      	adds	r7, #20
 80170a0:	46bd      	mov	sp, r7
 80170a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80170a6:	4770      	bx	lr

080170a8 <osKernelStart>:
 80170a8:	b580      	push	{r7, lr}
 80170aa:	af00      	add	r7, sp, #0
 80170ac:	f001 fa44 	bl	8018538 <vTaskStartScheduler>
 80170b0:	2300      	movs	r3, #0
 80170b2:	4618      	mov	r0, r3
 80170b4:	bd80      	pop	{r7, pc}

080170b6 <osThreadCreate>:
 80170b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170b8:	b089      	sub	sp, #36	@ 0x24
 80170ba:	af04      	add	r7, sp, #16
 80170bc:	6078      	str	r0, [r7, #4]
 80170be:	6039      	str	r1, [r7, #0]
 80170c0:	687b      	ldr	r3, [r7, #4]
 80170c2:	695b      	ldr	r3, [r3, #20]
 80170c4:	2b00      	cmp	r3, #0
 80170c6:	d020      	beq.n	801710a <osThreadCreate+0x54>
 80170c8:	687b      	ldr	r3, [r7, #4]
 80170ca:	699b      	ldr	r3, [r3, #24]
 80170cc:	2b00      	cmp	r3, #0
 80170ce:	d01c      	beq.n	801710a <osThreadCreate+0x54>
 80170d0:	687b      	ldr	r3, [r7, #4]
 80170d2:	685c      	ldr	r4, [r3, #4]
 80170d4:	687b      	ldr	r3, [r7, #4]
 80170d6:	681d      	ldr	r5, [r3, #0]
 80170d8:	687b      	ldr	r3, [r7, #4]
 80170da:	691e      	ldr	r6, [r3, #16]
 80170dc:	687b      	ldr	r3, [r7, #4]
 80170de:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80170e2:	4618      	mov	r0, r3
 80170e4:	f7ff ffc8 	bl	8017078 <makeFreeRtosPriority>
 80170e8:	4601      	mov	r1, r0
 80170ea:	687b      	ldr	r3, [r7, #4]
 80170ec:	695b      	ldr	r3, [r3, #20]
 80170ee:	687a      	ldr	r2, [r7, #4]
 80170f0:	6992      	ldr	r2, [r2, #24]
 80170f2:	9202      	str	r2, [sp, #8]
 80170f4:	9301      	str	r3, [sp, #4]
 80170f6:	9100      	str	r1, [sp, #0]
 80170f8:	683b      	ldr	r3, [r7, #0]
 80170fa:	4632      	mov	r2, r6
 80170fc:	4629      	mov	r1, r5
 80170fe:	4620      	mov	r0, r4
 8017100:	f000 ff7a 	bl	8017ff8 <xTaskCreateStatic>
 8017104:	4603      	mov	r3, r0
 8017106:	60fb      	str	r3, [r7, #12]
 8017108:	e01c      	b.n	8017144 <osThreadCreate+0x8e>
 801710a:	687b      	ldr	r3, [r7, #4]
 801710c:	685c      	ldr	r4, [r3, #4]
 801710e:	687b      	ldr	r3, [r7, #4]
 8017110:	681d      	ldr	r5, [r3, #0]
 8017112:	687b      	ldr	r3, [r7, #4]
 8017114:	691b      	ldr	r3, [r3, #16]
 8017116:	b29e      	uxth	r6, r3
 8017118:	687b      	ldr	r3, [r7, #4]
 801711a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801711e:	4618      	mov	r0, r3
 8017120:	f7ff ffaa 	bl	8017078 <makeFreeRtosPriority>
 8017124:	4602      	mov	r2, r0
 8017126:	f107 030c 	add.w	r3, r7, #12
 801712a:	9301      	str	r3, [sp, #4]
 801712c:	9200      	str	r2, [sp, #0]
 801712e:	683b      	ldr	r3, [r7, #0]
 8017130:	4632      	mov	r2, r6
 8017132:	4629      	mov	r1, r5
 8017134:	4620      	mov	r0, r4
 8017136:	f000 ffc1 	bl	80180bc <xTaskCreate>
 801713a:	4603      	mov	r3, r0
 801713c:	2b01      	cmp	r3, #1
 801713e:	d001      	beq.n	8017144 <osThreadCreate+0x8e>
 8017140:	2300      	movs	r3, #0
 8017142:	e000      	b.n	8017146 <osThreadCreate+0x90>
 8017144:	68fb      	ldr	r3, [r7, #12]
 8017146:	4618      	mov	r0, r3
 8017148:	3714      	adds	r7, #20
 801714a:	46bd      	mov	sp, r7
 801714c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801714e <osDelay>:
 801714e:	b580      	push	{r7, lr}
 8017150:	b084      	sub	sp, #16
 8017152:	af00      	add	r7, sp, #0
 8017154:	6078      	str	r0, [r7, #4]
 8017156:	687b      	ldr	r3, [r7, #4]
 8017158:	60fb      	str	r3, [r7, #12]
 801715a:	68fb      	ldr	r3, [r7, #12]
 801715c:	2b00      	cmp	r3, #0
 801715e:	d001      	beq.n	8017164 <osDelay+0x16>
 8017160:	68fb      	ldr	r3, [r7, #12]
 8017162:	e000      	b.n	8017166 <osDelay+0x18>
 8017164:	2301      	movs	r3, #1
 8017166:	4618      	mov	r0, r3
 8017168:	f001 f9b0 	bl	80184cc <vTaskDelay>
 801716c:	2300      	movs	r3, #0
 801716e:	4618      	mov	r0, r3
 8017170:	3710      	adds	r7, #16
 8017172:	46bd      	mov	sp, r7
 8017174:	bd80      	pop	{r7, pc}

08017176 <xEventGroupCreate>:
 8017176:	b580      	push	{r7, lr}
 8017178:	b082      	sub	sp, #8
 801717a:	af00      	add	r7, sp, #0
 801717c:	2020      	movs	r0, #32
 801717e:	f002 fe8d 	bl	8019e9c <pvPortMalloc>
 8017182:	6078      	str	r0, [r7, #4]
 8017184:	687b      	ldr	r3, [r7, #4]
 8017186:	2b00      	cmp	r3, #0
 8017188:	d00a      	beq.n	80171a0 <xEventGroupCreate+0x2a>
 801718a:	687b      	ldr	r3, [r7, #4]
 801718c:	2200      	movs	r2, #0
 801718e:	601a      	str	r2, [r3, #0]
 8017190:	687b      	ldr	r3, [r7, #4]
 8017192:	3304      	adds	r3, #4
 8017194:	4618      	mov	r0, r3
 8017196:	f000 f8b5 	bl	8017304 <vListInitialise>
 801719a:	687b      	ldr	r3, [r7, #4]
 801719c:	2200      	movs	r2, #0
 801719e:	771a      	strb	r2, [r3, #28]
 80171a0:	687b      	ldr	r3, [r7, #4]
 80171a2:	4618      	mov	r0, r3
 80171a4:	3708      	adds	r7, #8
 80171a6:	46bd      	mov	sp, r7
 80171a8:	bd80      	pop	{r7, pc}

080171aa <xEventGroupSetBits>:
 80171aa:	b580      	push	{r7, lr}
 80171ac:	b08e      	sub	sp, #56	@ 0x38
 80171ae:	af00      	add	r7, sp, #0
 80171b0:	6078      	str	r0, [r7, #4]
 80171b2:	6039      	str	r1, [r7, #0]
 80171b4:	2300      	movs	r3, #0
 80171b6:	633b      	str	r3, [r7, #48]	@ 0x30
 80171b8:	687b      	ldr	r3, [r7, #4]
 80171ba:	62bb      	str	r3, [r7, #40]	@ 0x28
 80171bc:	2300      	movs	r3, #0
 80171be:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80171c0:	687b      	ldr	r3, [r7, #4]
 80171c2:	2b00      	cmp	r3, #0
 80171c4:	d10b      	bne.n	80171de <xEventGroupSetBits+0x34>
 80171c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80171ca:	f383 8811 	msr	BASEPRI, r3
 80171ce:	f3bf 8f6f 	isb	sy
 80171d2:	f3bf 8f4f 	dsb	sy
 80171d6:	613b      	str	r3, [r7, #16]
 80171d8:	bf00      	nop
 80171da:	bf00      	nop
 80171dc:	e7fd      	b.n	80171da <xEventGroupSetBits+0x30>
 80171de:	683b      	ldr	r3, [r7, #0]
 80171e0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80171e4:	d30b      	bcc.n	80171fe <xEventGroupSetBits+0x54>
 80171e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80171ea:	f383 8811 	msr	BASEPRI, r3
 80171ee:	f3bf 8f6f 	isb	sy
 80171f2:	f3bf 8f4f 	dsb	sy
 80171f6:	60fb      	str	r3, [r7, #12]
 80171f8:	bf00      	nop
 80171fa:	bf00      	nop
 80171fc:	e7fd      	b.n	80171fa <xEventGroupSetBits+0x50>
 80171fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017200:	3304      	adds	r3, #4
 8017202:	627b      	str	r3, [r7, #36]	@ 0x24
 8017204:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017206:	3308      	adds	r3, #8
 8017208:	623b      	str	r3, [r7, #32]
 801720a:	f001 fa07 	bl	801861c <vTaskSuspendAll>
 801720e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017210:	68db      	ldr	r3, [r3, #12]
 8017212:	637b      	str	r3, [r7, #52]	@ 0x34
 8017214:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017216:	681a      	ldr	r2, [r3, #0]
 8017218:	683b      	ldr	r3, [r7, #0]
 801721a:	431a      	orrs	r2, r3
 801721c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801721e:	601a      	str	r2, [r3, #0]
 8017220:	e03c      	b.n	801729c <xEventGroupSetBits+0xf2>
 8017222:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017224:	685b      	ldr	r3, [r3, #4]
 8017226:	61fb      	str	r3, [r7, #28]
 8017228:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801722a:	681b      	ldr	r3, [r3, #0]
 801722c:	61bb      	str	r3, [r7, #24]
 801722e:	2300      	movs	r3, #0
 8017230:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017232:	69bb      	ldr	r3, [r7, #24]
 8017234:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 8017238:	617b      	str	r3, [r7, #20]
 801723a:	69bb      	ldr	r3, [r7, #24]
 801723c:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8017240:	61bb      	str	r3, [r7, #24]
 8017242:	697b      	ldr	r3, [r7, #20]
 8017244:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8017248:	2b00      	cmp	r3, #0
 801724a:	d108      	bne.n	801725e <xEventGroupSetBits+0xb4>
 801724c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801724e:	681a      	ldr	r2, [r3, #0]
 8017250:	69bb      	ldr	r3, [r7, #24]
 8017252:	4013      	ands	r3, r2
 8017254:	2b00      	cmp	r3, #0
 8017256:	d00b      	beq.n	8017270 <xEventGroupSetBits+0xc6>
 8017258:	2301      	movs	r3, #1
 801725a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801725c:	e008      	b.n	8017270 <xEventGroupSetBits+0xc6>
 801725e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017260:	681a      	ldr	r2, [r3, #0]
 8017262:	69bb      	ldr	r3, [r7, #24]
 8017264:	4013      	ands	r3, r2
 8017266:	69ba      	ldr	r2, [r7, #24]
 8017268:	429a      	cmp	r2, r3
 801726a:	d101      	bne.n	8017270 <xEventGroupSetBits+0xc6>
 801726c:	2301      	movs	r3, #1
 801726e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017270:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017272:	2b00      	cmp	r3, #0
 8017274:	d010      	beq.n	8017298 <xEventGroupSetBits+0xee>
 8017276:	697b      	ldr	r3, [r7, #20]
 8017278:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 801727c:	2b00      	cmp	r3, #0
 801727e:	d003      	beq.n	8017288 <xEventGroupSetBits+0xde>
 8017280:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8017282:	69bb      	ldr	r3, [r7, #24]
 8017284:	4313      	orrs	r3, r2
 8017286:	633b      	str	r3, [r7, #48]	@ 0x30
 8017288:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801728a:	681b      	ldr	r3, [r3, #0]
 801728c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8017290:	4619      	mov	r1, r3
 8017292:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8017294:	f001 fc7e 	bl	8018b94 <vTaskRemoveFromUnorderedEventList>
 8017298:	69fb      	ldr	r3, [r7, #28]
 801729a:	637b      	str	r3, [r7, #52]	@ 0x34
 801729c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 801729e:	6a3b      	ldr	r3, [r7, #32]
 80172a0:	429a      	cmp	r2, r3
 80172a2:	d1be      	bne.n	8017222 <xEventGroupSetBits+0x78>
 80172a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80172a6:	681a      	ldr	r2, [r3, #0]
 80172a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80172aa:	43db      	mvns	r3, r3
 80172ac:	401a      	ands	r2, r3
 80172ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80172b0:	601a      	str	r2, [r3, #0]
 80172b2:	f001 f9c1 	bl	8018638 <xTaskResumeAll>
 80172b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80172b8:	681b      	ldr	r3, [r3, #0]
 80172ba:	4618      	mov	r0, r3
 80172bc:	3738      	adds	r7, #56	@ 0x38
 80172be:	46bd      	mov	sp, r7
 80172c0:	bd80      	pop	{r7, pc}

080172c2 <vEventGroupSetBitsCallback>:
 80172c2:	b580      	push	{r7, lr}
 80172c4:	b082      	sub	sp, #8
 80172c6:	af00      	add	r7, sp, #0
 80172c8:	6078      	str	r0, [r7, #4]
 80172ca:	6039      	str	r1, [r7, #0]
 80172cc:	6839      	ldr	r1, [r7, #0]
 80172ce:	6878      	ldr	r0, [r7, #4]
 80172d0:	f7ff ff6b 	bl	80171aa <xEventGroupSetBits>
 80172d4:	bf00      	nop
 80172d6:	3708      	adds	r7, #8
 80172d8:	46bd      	mov	sp, r7
 80172da:	bd80      	pop	{r7, pc}

080172dc <xEventGroupSetBitsFromISR>:
 80172dc:	b580      	push	{r7, lr}
 80172de:	b086      	sub	sp, #24
 80172e0:	af00      	add	r7, sp, #0
 80172e2:	60f8      	str	r0, [r7, #12]
 80172e4:	60b9      	str	r1, [r7, #8]
 80172e6:	607a      	str	r2, [r7, #4]
 80172e8:	687b      	ldr	r3, [r7, #4]
 80172ea:	68ba      	ldr	r2, [r7, #8]
 80172ec:	68f9      	ldr	r1, [r7, #12]
 80172ee:	4804      	ldr	r0, [pc, #16]	@ (8017300 <xEventGroupSetBitsFromISR+0x24>)
 80172f0:	f002 fb5e 	bl	80199b0 <xTimerPendFunctionCallFromISR>
 80172f4:	6178      	str	r0, [r7, #20]
 80172f6:	697b      	ldr	r3, [r7, #20]
 80172f8:	4618      	mov	r0, r3
 80172fa:	3718      	adds	r7, #24
 80172fc:	46bd      	mov	sp, r7
 80172fe:	bd80      	pop	{r7, pc}
 8017300:	080172c3 	.word	0x080172c3

08017304 <vListInitialise>:
 8017304:	b480      	push	{r7}
 8017306:	b083      	sub	sp, #12
 8017308:	af00      	add	r7, sp, #0
 801730a:	6078      	str	r0, [r7, #4]
 801730c:	687b      	ldr	r3, [r7, #4]
 801730e:	f103 0208 	add.w	r2, r3, #8
 8017312:	687b      	ldr	r3, [r7, #4]
 8017314:	605a      	str	r2, [r3, #4]
 8017316:	687b      	ldr	r3, [r7, #4]
 8017318:	f04f 32ff 	mov.w	r2, #4294967295
 801731c:	609a      	str	r2, [r3, #8]
 801731e:	687b      	ldr	r3, [r7, #4]
 8017320:	f103 0208 	add.w	r2, r3, #8
 8017324:	687b      	ldr	r3, [r7, #4]
 8017326:	60da      	str	r2, [r3, #12]
 8017328:	687b      	ldr	r3, [r7, #4]
 801732a:	f103 0208 	add.w	r2, r3, #8
 801732e:	687b      	ldr	r3, [r7, #4]
 8017330:	611a      	str	r2, [r3, #16]
 8017332:	687b      	ldr	r3, [r7, #4]
 8017334:	2200      	movs	r2, #0
 8017336:	601a      	str	r2, [r3, #0]
 8017338:	bf00      	nop
 801733a:	370c      	adds	r7, #12
 801733c:	46bd      	mov	sp, r7
 801733e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017342:	4770      	bx	lr

08017344 <vListInitialiseItem>:
 8017344:	b480      	push	{r7}
 8017346:	b083      	sub	sp, #12
 8017348:	af00      	add	r7, sp, #0
 801734a:	6078      	str	r0, [r7, #4]
 801734c:	687b      	ldr	r3, [r7, #4]
 801734e:	2200      	movs	r2, #0
 8017350:	611a      	str	r2, [r3, #16]
 8017352:	bf00      	nop
 8017354:	370c      	adds	r7, #12
 8017356:	46bd      	mov	sp, r7
 8017358:	f85d 7b04 	ldr.w	r7, [sp], #4
 801735c:	4770      	bx	lr

0801735e <vListInsertEnd>:
 801735e:	b480      	push	{r7}
 8017360:	b085      	sub	sp, #20
 8017362:	af00      	add	r7, sp, #0
 8017364:	6078      	str	r0, [r7, #4]
 8017366:	6039      	str	r1, [r7, #0]
 8017368:	687b      	ldr	r3, [r7, #4]
 801736a:	685b      	ldr	r3, [r3, #4]
 801736c:	60fb      	str	r3, [r7, #12]
 801736e:	683b      	ldr	r3, [r7, #0]
 8017370:	68fa      	ldr	r2, [r7, #12]
 8017372:	605a      	str	r2, [r3, #4]
 8017374:	68fb      	ldr	r3, [r7, #12]
 8017376:	689a      	ldr	r2, [r3, #8]
 8017378:	683b      	ldr	r3, [r7, #0]
 801737a:	609a      	str	r2, [r3, #8]
 801737c:	68fb      	ldr	r3, [r7, #12]
 801737e:	689b      	ldr	r3, [r3, #8]
 8017380:	683a      	ldr	r2, [r7, #0]
 8017382:	605a      	str	r2, [r3, #4]
 8017384:	68fb      	ldr	r3, [r7, #12]
 8017386:	683a      	ldr	r2, [r7, #0]
 8017388:	609a      	str	r2, [r3, #8]
 801738a:	683b      	ldr	r3, [r7, #0]
 801738c:	687a      	ldr	r2, [r7, #4]
 801738e:	611a      	str	r2, [r3, #16]
 8017390:	687b      	ldr	r3, [r7, #4]
 8017392:	681b      	ldr	r3, [r3, #0]
 8017394:	1c5a      	adds	r2, r3, #1
 8017396:	687b      	ldr	r3, [r7, #4]
 8017398:	601a      	str	r2, [r3, #0]
 801739a:	bf00      	nop
 801739c:	3714      	adds	r7, #20
 801739e:	46bd      	mov	sp, r7
 80173a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80173a4:	4770      	bx	lr

080173a6 <vListInsert>:
 80173a6:	b480      	push	{r7}
 80173a8:	b085      	sub	sp, #20
 80173aa:	af00      	add	r7, sp, #0
 80173ac:	6078      	str	r0, [r7, #4]
 80173ae:	6039      	str	r1, [r7, #0]
 80173b0:	683b      	ldr	r3, [r7, #0]
 80173b2:	681b      	ldr	r3, [r3, #0]
 80173b4:	60bb      	str	r3, [r7, #8]
 80173b6:	68bb      	ldr	r3, [r7, #8]
 80173b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80173bc:	d103      	bne.n	80173c6 <vListInsert+0x20>
 80173be:	687b      	ldr	r3, [r7, #4]
 80173c0:	691b      	ldr	r3, [r3, #16]
 80173c2:	60fb      	str	r3, [r7, #12]
 80173c4:	e00c      	b.n	80173e0 <vListInsert+0x3a>
 80173c6:	687b      	ldr	r3, [r7, #4]
 80173c8:	3308      	adds	r3, #8
 80173ca:	60fb      	str	r3, [r7, #12]
 80173cc:	e002      	b.n	80173d4 <vListInsert+0x2e>
 80173ce:	68fb      	ldr	r3, [r7, #12]
 80173d0:	685b      	ldr	r3, [r3, #4]
 80173d2:	60fb      	str	r3, [r7, #12]
 80173d4:	68fb      	ldr	r3, [r7, #12]
 80173d6:	685b      	ldr	r3, [r3, #4]
 80173d8:	681b      	ldr	r3, [r3, #0]
 80173da:	68ba      	ldr	r2, [r7, #8]
 80173dc:	429a      	cmp	r2, r3
 80173de:	d2f6      	bcs.n	80173ce <vListInsert+0x28>
 80173e0:	68fb      	ldr	r3, [r7, #12]
 80173e2:	685a      	ldr	r2, [r3, #4]
 80173e4:	683b      	ldr	r3, [r7, #0]
 80173e6:	605a      	str	r2, [r3, #4]
 80173e8:	683b      	ldr	r3, [r7, #0]
 80173ea:	685b      	ldr	r3, [r3, #4]
 80173ec:	683a      	ldr	r2, [r7, #0]
 80173ee:	609a      	str	r2, [r3, #8]
 80173f0:	683b      	ldr	r3, [r7, #0]
 80173f2:	68fa      	ldr	r2, [r7, #12]
 80173f4:	609a      	str	r2, [r3, #8]
 80173f6:	68fb      	ldr	r3, [r7, #12]
 80173f8:	683a      	ldr	r2, [r7, #0]
 80173fa:	605a      	str	r2, [r3, #4]
 80173fc:	683b      	ldr	r3, [r7, #0]
 80173fe:	687a      	ldr	r2, [r7, #4]
 8017400:	611a      	str	r2, [r3, #16]
 8017402:	687b      	ldr	r3, [r7, #4]
 8017404:	681b      	ldr	r3, [r3, #0]
 8017406:	1c5a      	adds	r2, r3, #1
 8017408:	687b      	ldr	r3, [r7, #4]
 801740a:	601a      	str	r2, [r3, #0]
 801740c:	bf00      	nop
 801740e:	3714      	adds	r7, #20
 8017410:	46bd      	mov	sp, r7
 8017412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017416:	4770      	bx	lr

08017418 <uxListRemove>:
 8017418:	b480      	push	{r7}
 801741a:	b085      	sub	sp, #20
 801741c:	af00      	add	r7, sp, #0
 801741e:	6078      	str	r0, [r7, #4]
 8017420:	687b      	ldr	r3, [r7, #4]
 8017422:	691b      	ldr	r3, [r3, #16]
 8017424:	60fb      	str	r3, [r7, #12]
 8017426:	687b      	ldr	r3, [r7, #4]
 8017428:	685b      	ldr	r3, [r3, #4]
 801742a:	687a      	ldr	r2, [r7, #4]
 801742c:	6892      	ldr	r2, [r2, #8]
 801742e:	609a      	str	r2, [r3, #8]
 8017430:	687b      	ldr	r3, [r7, #4]
 8017432:	689b      	ldr	r3, [r3, #8]
 8017434:	687a      	ldr	r2, [r7, #4]
 8017436:	6852      	ldr	r2, [r2, #4]
 8017438:	605a      	str	r2, [r3, #4]
 801743a:	68fb      	ldr	r3, [r7, #12]
 801743c:	685b      	ldr	r3, [r3, #4]
 801743e:	687a      	ldr	r2, [r7, #4]
 8017440:	429a      	cmp	r2, r3
 8017442:	d103      	bne.n	801744c <uxListRemove+0x34>
 8017444:	687b      	ldr	r3, [r7, #4]
 8017446:	689a      	ldr	r2, [r3, #8]
 8017448:	68fb      	ldr	r3, [r7, #12]
 801744a:	605a      	str	r2, [r3, #4]
 801744c:	687b      	ldr	r3, [r7, #4]
 801744e:	2200      	movs	r2, #0
 8017450:	611a      	str	r2, [r3, #16]
 8017452:	68fb      	ldr	r3, [r7, #12]
 8017454:	681b      	ldr	r3, [r3, #0]
 8017456:	1e5a      	subs	r2, r3, #1
 8017458:	68fb      	ldr	r3, [r7, #12]
 801745a:	601a      	str	r2, [r3, #0]
 801745c:	68fb      	ldr	r3, [r7, #12]
 801745e:	681b      	ldr	r3, [r3, #0]
 8017460:	4618      	mov	r0, r3
 8017462:	3714      	adds	r7, #20
 8017464:	46bd      	mov	sp, r7
 8017466:	f85d 7b04 	ldr.w	r7, [sp], #4
 801746a:	4770      	bx	lr

0801746c <xQueueGenericReset>:
 801746c:	b580      	push	{r7, lr}
 801746e:	b084      	sub	sp, #16
 8017470:	af00      	add	r7, sp, #0
 8017472:	6078      	str	r0, [r7, #4]
 8017474:	6039      	str	r1, [r7, #0]
 8017476:	687b      	ldr	r3, [r7, #4]
 8017478:	60fb      	str	r3, [r7, #12]
 801747a:	68fb      	ldr	r3, [r7, #12]
 801747c:	2b00      	cmp	r3, #0
 801747e:	d10b      	bne.n	8017498 <xQueueGenericReset+0x2c>
 8017480:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017484:	f383 8811 	msr	BASEPRI, r3
 8017488:	f3bf 8f6f 	isb	sy
 801748c:	f3bf 8f4f 	dsb	sy
 8017490:	60bb      	str	r3, [r7, #8]
 8017492:	bf00      	nop
 8017494:	bf00      	nop
 8017496:	e7fd      	b.n	8017494 <xQueueGenericReset+0x28>
 8017498:	f002 fbde 	bl	8019c58 <vPortEnterCritical>
 801749c:	68fb      	ldr	r3, [r7, #12]
 801749e:	681a      	ldr	r2, [r3, #0]
 80174a0:	68fb      	ldr	r3, [r7, #12]
 80174a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80174a4:	68f9      	ldr	r1, [r7, #12]
 80174a6:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80174a8:	fb01 f303 	mul.w	r3, r1, r3
 80174ac:	441a      	add	r2, r3
 80174ae:	68fb      	ldr	r3, [r7, #12]
 80174b0:	609a      	str	r2, [r3, #8]
 80174b2:	68fb      	ldr	r3, [r7, #12]
 80174b4:	2200      	movs	r2, #0
 80174b6:	639a      	str	r2, [r3, #56]	@ 0x38
 80174b8:	68fb      	ldr	r3, [r7, #12]
 80174ba:	681a      	ldr	r2, [r3, #0]
 80174bc:	68fb      	ldr	r3, [r7, #12]
 80174be:	605a      	str	r2, [r3, #4]
 80174c0:	68fb      	ldr	r3, [r7, #12]
 80174c2:	681a      	ldr	r2, [r3, #0]
 80174c4:	68fb      	ldr	r3, [r7, #12]
 80174c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80174c8:	3b01      	subs	r3, #1
 80174ca:	68f9      	ldr	r1, [r7, #12]
 80174cc:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80174ce:	fb01 f303 	mul.w	r3, r1, r3
 80174d2:	441a      	add	r2, r3
 80174d4:	68fb      	ldr	r3, [r7, #12]
 80174d6:	60da      	str	r2, [r3, #12]
 80174d8:	68fb      	ldr	r3, [r7, #12]
 80174da:	22ff      	movs	r2, #255	@ 0xff
 80174dc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80174e0:	68fb      	ldr	r3, [r7, #12]
 80174e2:	22ff      	movs	r2, #255	@ 0xff
 80174e4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80174e8:	683b      	ldr	r3, [r7, #0]
 80174ea:	2b00      	cmp	r3, #0
 80174ec:	d114      	bne.n	8017518 <xQueueGenericReset+0xac>
 80174ee:	68fb      	ldr	r3, [r7, #12]
 80174f0:	691b      	ldr	r3, [r3, #16]
 80174f2:	2b00      	cmp	r3, #0
 80174f4:	d01a      	beq.n	801752c <xQueueGenericReset+0xc0>
 80174f6:	68fb      	ldr	r3, [r7, #12]
 80174f8:	3310      	adds	r3, #16
 80174fa:	4618      	mov	r0, r3
 80174fc:	f001 fae6 	bl	8018acc <xTaskRemoveFromEventList>
 8017500:	4603      	mov	r3, r0
 8017502:	2b00      	cmp	r3, #0
 8017504:	d012      	beq.n	801752c <xQueueGenericReset+0xc0>
 8017506:	4b0d      	ldr	r3, [pc, #52]	@ (801753c <xQueueGenericReset+0xd0>)
 8017508:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801750c:	601a      	str	r2, [r3, #0]
 801750e:	f3bf 8f4f 	dsb	sy
 8017512:	f3bf 8f6f 	isb	sy
 8017516:	e009      	b.n	801752c <xQueueGenericReset+0xc0>
 8017518:	68fb      	ldr	r3, [r7, #12]
 801751a:	3310      	adds	r3, #16
 801751c:	4618      	mov	r0, r3
 801751e:	f7ff fef1 	bl	8017304 <vListInitialise>
 8017522:	68fb      	ldr	r3, [r7, #12]
 8017524:	3324      	adds	r3, #36	@ 0x24
 8017526:	4618      	mov	r0, r3
 8017528:	f7ff feec 	bl	8017304 <vListInitialise>
 801752c:	f002 fbc6 	bl	8019cbc <vPortExitCritical>
 8017530:	2301      	movs	r3, #1
 8017532:	4618      	mov	r0, r3
 8017534:	3710      	adds	r7, #16
 8017536:	46bd      	mov	sp, r7
 8017538:	bd80      	pop	{r7, pc}
 801753a:	bf00      	nop
 801753c:	e000ed04 	.word	0xe000ed04

08017540 <xQueueGenericCreateStatic>:
 8017540:	b580      	push	{r7, lr}
 8017542:	b08e      	sub	sp, #56	@ 0x38
 8017544:	af02      	add	r7, sp, #8
 8017546:	60f8      	str	r0, [r7, #12]
 8017548:	60b9      	str	r1, [r7, #8]
 801754a:	607a      	str	r2, [r7, #4]
 801754c:	603b      	str	r3, [r7, #0]
 801754e:	68fb      	ldr	r3, [r7, #12]
 8017550:	2b00      	cmp	r3, #0
 8017552:	d10b      	bne.n	801756c <xQueueGenericCreateStatic+0x2c>
 8017554:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017558:	f383 8811 	msr	BASEPRI, r3
 801755c:	f3bf 8f6f 	isb	sy
 8017560:	f3bf 8f4f 	dsb	sy
 8017564:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017566:	bf00      	nop
 8017568:	bf00      	nop
 801756a:	e7fd      	b.n	8017568 <xQueueGenericCreateStatic+0x28>
 801756c:	683b      	ldr	r3, [r7, #0]
 801756e:	2b00      	cmp	r3, #0
 8017570:	d10b      	bne.n	801758a <xQueueGenericCreateStatic+0x4a>
 8017572:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017576:	f383 8811 	msr	BASEPRI, r3
 801757a:	f3bf 8f6f 	isb	sy
 801757e:	f3bf 8f4f 	dsb	sy
 8017582:	627b      	str	r3, [r7, #36]	@ 0x24
 8017584:	bf00      	nop
 8017586:	bf00      	nop
 8017588:	e7fd      	b.n	8017586 <xQueueGenericCreateStatic+0x46>
 801758a:	687b      	ldr	r3, [r7, #4]
 801758c:	2b00      	cmp	r3, #0
 801758e:	d002      	beq.n	8017596 <xQueueGenericCreateStatic+0x56>
 8017590:	68bb      	ldr	r3, [r7, #8]
 8017592:	2b00      	cmp	r3, #0
 8017594:	d001      	beq.n	801759a <xQueueGenericCreateStatic+0x5a>
 8017596:	2301      	movs	r3, #1
 8017598:	e000      	b.n	801759c <xQueueGenericCreateStatic+0x5c>
 801759a:	2300      	movs	r3, #0
 801759c:	2b00      	cmp	r3, #0
 801759e:	d10b      	bne.n	80175b8 <xQueueGenericCreateStatic+0x78>
 80175a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80175a4:	f383 8811 	msr	BASEPRI, r3
 80175a8:	f3bf 8f6f 	isb	sy
 80175ac:	f3bf 8f4f 	dsb	sy
 80175b0:	623b      	str	r3, [r7, #32]
 80175b2:	bf00      	nop
 80175b4:	bf00      	nop
 80175b6:	e7fd      	b.n	80175b4 <xQueueGenericCreateStatic+0x74>
 80175b8:	687b      	ldr	r3, [r7, #4]
 80175ba:	2b00      	cmp	r3, #0
 80175bc:	d102      	bne.n	80175c4 <xQueueGenericCreateStatic+0x84>
 80175be:	68bb      	ldr	r3, [r7, #8]
 80175c0:	2b00      	cmp	r3, #0
 80175c2:	d101      	bne.n	80175c8 <xQueueGenericCreateStatic+0x88>
 80175c4:	2301      	movs	r3, #1
 80175c6:	e000      	b.n	80175ca <xQueueGenericCreateStatic+0x8a>
 80175c8:	2300      	movs	r3, #0
 80175ca:	2b00      	cmp	r3, #0
 80175cc:	d10b      	bne.n	80175e6 <xQueueGenericCreateStatic+0xa6>
 80175ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80175d2:	f383 8811 	msr	BASEPRI, r3
 80175d6:	f3bf 8f6f 	isb	sy
 80175da:	f3bf 8f4f 	dsb	sy
 80175de:	61fb      	str	r3, [r7, #28]
 80175e0:	bf00      	nop
 80175e2:	bf00      	nop
 80175e4:	e7fd      	b.n	80175e2 <xQueueGenericCreateStatic+0xa2>
 80175e6:	2350      	movs	r3, #80	@ 0x50
 80175e8:	617b      	str	r3, [r7, #20]
 80175ea:	697b      	ldr	r3, [r7, #20]
 80175ec:	2b50      	cmp	r3, #80	@ 0x50
 80175ee:	d00b      	beq.n	8017608 <xQueueGenericCreateStatic+0xc8>
 80175f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80175f4:	f383 8811 	msr	BASEPRI, r3
 80175f8:	f3bf 8f6f 	isb	sy
 80175fc:	f3bf 8f4f 	dsb	sy
 8017600:	61bb      	str	r3, [r7, #24]
 8017602:	bf00      	nop
 8017604:	bf00      	nop
 8017606:	e7fd      	b.n	8017604 <xQueueGenericCreateStatic+0xc4>
 8017608:	697b      	ldr	r3, [r7, #20]
 801760a:	683b      	ldr	r3, [r7, #0]
 801760c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801760e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017610:	2b00      	cmp	r3, #0
 8017612:	d00d      	beq.n	8017630 <xQueueGenericCreateStatic+0xf0>
 8017614:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017616:	2201      	movs	r2, #1
 8017618:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 801761c:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8017620:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017622:	9300      	str	r3, [sp, #0]
 8017624:	4613      	mov	r3, r2
 8017626:	687a      	ldr	r2, [r7, #4]
 8017628:	68b9      	ldr	r1, [r7, #8]
 801762a:	68f8      	ldr	r0, [r7, #12]
 801762c:	f000 f840 	bl	80176b0 <prvInitialiseNewQueue>
 8017630:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017632:	4618      	mov	r0, r3
 8017634:	3730      	adds	r7, #48	@ 0x30
 8017636:	46bd      	mov	sp, r7
 8017638:	bd80      	pop	{r7, pc}

0801763a <xQueueGenericCreate>:
 801763a:	b580      	push	{r7, lr}
 801763c:	b08a      	sub	sp, #40	@ 0x28
 801763e:	af02      	add	r7, sp, #8
 8017640:	60f8      	str	r0, [r7, #12]
 8017642:	60b9      	str	r1, [r7, #8]
 8017644:	4613      	mov	r3, r2
 8017646:	71fb      	strb	r3, [r7, #7]
 8017648:	68fb      	ldr	r3, [r7, #12]
 801764a:	2b00      	cmp	r3, #0
 801764c:	d10b      	bne.n	8017666 <xQueueGenericCreate+0x2c>
 801764e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017652:	f383 8811 	msr	BASEPRI, r3
 8017656:	f3bf 8f6f 	isb	sy
 801765a:	f3bf 8f4f 	dsb	sy
 801765e:	613b      	str	r3, [r7, #16]
 8017660:	bf00      	nop
 8017662:	bf00      	nop
 8017664:	e7fd      	b.n	8017662 <xQueueGenericCreate+0x28>
 8017666:	68fb      	ldr	r3, [r7, #12]
 8017668:	68ba      	ldr	r2, [r7, #8]
 801766a:	fb02 f303 	mul.w	r3, r2, r3
 801766e:	61fb      	str	r3, [r7, #28]
 8017670:	69fb      	ldr	r3, [r7, #28]
 8017672:	3350      	adds	r3, #80	@ 0x50
 8017674:	4618      	mov	r0, r3
 8017676:	f002 fc11 	bl	8019e9c <pvPortMalloc>
 801767a:	61b8      	str	r0, [r7, #24]
 801767c:	69bb      	ldr	r3, [r7, #24]
 801767e:	2b00      	cmp	r3, #0
 8017680:	d011      	beq.n	80176a6 <xQueueGenericCreate+0x6c>
 8017682:	69bb      	ldr	r3, [r7, #24]
 8017684:	617b      	str	r3, [r7, #20]
 8017686:	697b      	ldr	r3, [r7, #20]
 8017688:	3350      	adds	r3, #80	@ 0x50
 801768a:	617b      	str	r3, [r7, #20]
 801768c:	69bb      	ldr	r3, [r7, #24]
 801768e:	2200      	movs	r2, #0
 8017690:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8017694:	79fa      	ldrb	r2, [r7, #7]
 8017696:	69bb      	ldr	r3, [r7, #24]
 8017698:	9300      	str	r3, [sp, #0]
 801769a:	4613      	mov	r3, r2
 801769c:	697a      	ldr	r2, [r7, #20]
 801769e:	68b9      	ldr	r1, [r7, #8]
 80176a0:	68f8      	ldr	r0, [r7, #12]
 80176a2:	f000 f805 	bl	80176b0 <prvInitialiseNewQueue>
 80176a6:	69bb      	ldr	r3, [r7, #24]
 80176a8:	4618      	mov	r0, r3
 80176aa:	3720      	adds	r7, #32
 80176ac:	46bd      	mov	sp, r7
 80176ae:	bd80      	pop	{r7, pc}

080176b0 <prvInitialiseNewQueue>:
 80176b0:	b580      	push	{r7, lr}
 80176b2:	b084      	sub	sp, #16
 80176b4:	af00      	add	r7, sp, #0
 80176b6:	60f8      	str	r0, [r7, #12]
 80176b8:	60b9      	str	r1, [r7, #8]
 80176ba:	607a      	str	r2, [r7, #4]
 80176bc:	70fb      	strb	r3, [r7, #3]
 80176be:	68bb      	ldr	r3, [r7, #8]
 80176c0:	2b00      	cmp	r3, #0
 80176c2:	d103      	bne.n	80176cc <prvInitialiseNewQueue+0x1c>
 80176c4:	69bb      	ldr	r3, [r7, #24]
 80176c6:	69ba      	ldr	r2, [r7, #24]
 80176c8:	601a      	str	r2, [r3, #0]
 80176ca:	e002      	b.n	80176d2 <prvInitialiseNewQueue+0x22>
 80176cc:	69bb      	ldr	r3, [r7, #24]
 80176ce:	687a      	ldr	r2, [r7, #4]
 80176d0:	601a      	str	r2, [r3, #0]
 80176d2:	69bb      	ldr	r3, [r7, #24]
 80176d4:	68fa      	ldr	r2, [r7, #12]
 80176d6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80176d8:	69bb      	ldr	r3, [r7, #24]
 80176da:	68ba      	ldr	r2, [r7, #8]
 80176dc:	641a      	str	r2, [r3, #64]	@ 0x40
 80176de:	2101      	movs	r1, #1
 80176e0:	69b8      	ldr	r0, [r7, #24]
 80176e2:	f7ff fec3 	bl	801746c <xQueueGenericReset>
 80176e6:	69bb      	ldr	r3, [r7, #24]
 80176e8:	78fa      	ldrb	r2, [r7, #3]
 80176ea:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 80176ee:	bf00      	nop
 80176f0:	3710      	adds	r7, #16
 80176f2:	46bd      	mov	sp, r7
 80176f4:	bd80      	pop	{r7, pc}
	...

080176f8 <xQueueGenericSend>:
 80176f8:	b580      	push	{r7, lr}
 80176fa:	b08e      	sub	sp, #56	@ 0x38
 80176fc:	af00      	add	r7, sp, #0
 80176fe:	60f8      	str	r0, [r7, #12]
 8017700:	60b9      	str	r1, [r7, #8]
 8017702:	607a      	str	r2, [r7, #4]
 8017704:	603b      	str	r3, [r7, #0]
 8017706:	2300      	movs	r3, #0
 8017708:	637b      	str	r3, [r7, #52]	@ 0x34
 801770a:	68fb      	ldr	r3, [r7, #12]
 801770c:	633b      	str	r3, [r7, #48]	@ 0x30
 801770e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017710:	2b00      	cmp	r3, #0
 8017712:	d10b      	bne.n	801772c <xQueueGenericSend+0x34>
 8017714:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017718:	f383 8811 	msr	BASEPRI, r3
 801771c:	f3bf 8f6f 	isb	sy
 8017720:	f3bf 8f4f 	dsb	sy
 8017724:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017726:	bf00      	nop
 8017728:	bf00      	nop
 801772a:	e7fd      	b.n	8017728 <xQueueGenericSend+0x30>
 801772c:	68bb      	ldr	r3, [r7, #8]
 801772e:	2b00      	cmp	r3, #0
 8017730:	d103      	bne.n	801773a <xQueueGenericSend+0x42>
 8017732:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017734:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017736:	2b00      	cmp	r3, #0
 8017738:	d101      	bne.n	801773e <xQueueGenericSend+0x46>
 801773a:	2301      	movs	r3, #1
 801773c:	e000      	b.n	8017740 <xQueueGenericSend+0x48>
 801773e:	2300      	movs	r3, #0
 8017740:	2b00      	cmp	r3, #0
 8017742:	d10b      	bne.n	801775c <xQueueGenericSend+0x64>
 8017744:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017748:	f383 8811 	msr	BASEPRI, r3
 801774c:	f3bf 8f6f 	isb	sy
 8017750:	f3bf 8f4f 	dsb	sy
 8017754:	627b      	str	r3, [r7, #36]	@ 0x24
 8017756:	bf00      	nop
 8017758:	bf00      	nop
 801775a:	e7fd      	b.n	8017758 <xQueueGenericSend+0x60>
 801775c:	683b      	ldr	r3, [r7, #0]
 801775e:	2b02      	cmp	r3, #2
 8017760:	d103      	bne.n	801776a <xQueueGenericSend+0x72>
 8017762:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017764:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017766:	2b01      	cmp	r3, #1
 8017768:	d101      	bne.n	801776e <xQueueGenericSend+0x76>
 801776a:	2301      	movs	r3, #1
 801776c:	e000      	b.n	8017770 <xQueueGenericSend+0x78>
 801776e:	2300      	movs	r3, #0
 8017770:	2b00      	cmp	r3, #0
 8017772:	d10b      	bne.n	801778c <xQueueGenericSend+0x94>
 8017774:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017778:	f383 8811 	msr	BASEPRI, r3
 801777c:	f3bf 8f6f 	isb	sy
 8017780:	f3bf 8f4f 	dsb	sy
 8017784:	623b      	str	r3, [r7, #32]
 8017786:	bf00      	nop
 8017788:	bf00      	nop
 801778a:	e7fd      	b.n	8017788 <xQueueGenericSend+0x90>
 801778c:	f001 fbc8 	bl	8018f20 <xTaskGetSchedulerState>
 8017790:	4603      	mov	r3, r0
 8017792:	2b00      	cmp	r3, #0
 8017794:	d102      	bne.n	801779c <xQueueGenericSend+0xa4>
 8017796:	687b      	ldr	r3, [r7, #4]
 8017798:	2b00      	cmp	r3, #0
 801779a:	d101      	bne.n	80177a0 <xQueueGenericSend+0xa8>
 801779c:	2301      	movs	r3, #1
 801779e:	e000      	b.n	80177a2 <xQueueGenericSend+0xaa>
 80177a0:	2300      	movs	r3, #0
 80177a2:	2b00      	cmp	r3, #0
 80177a4:	d10b      	bne.n	80177be <xQueueGenericSend+0xc6>
 80177a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80177aa:	f383 8811 	msr	BASEPRI, r3
 80177ae:	f3bf 8f6f 	isb	sy
 80177b2:	f3bf 8f4f 	dsb	sy
 80177b6:	61fb      	str	r3, [r7, #28]
 80177b8:	bf00      	nop
 80177ba:	bf00      	nop
 80177bc:	e7fd      	b.n	80177ba <xQueueGenericSend+0xc2>
 80177be:	f002 fa4b 	bl	8019c58 <vPortEnterCritical>
 80177c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80177c4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80177c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80177c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80177ca:	429a      	cmp	r2, r3
 80177cc:	d302      	bcc.n	80177d4 <xQueueGenericSend+0xdc>
 80177ce:	683b      	ldr	r3, [r7, #0]
 80177d0:	2b02      	cmp	r3, #2
 80177d2:	d129      	bne.n	8017828 <xQueueGenericSend+0x130>
 80177d4:	683a      	ldr	r2, [r7, #0]
 80177d6:	68b9      	ldr	r1, [r7, #8]
 80177d8:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80177da:	f000 fa9f 	bl	8017d1c <prvCopyDataToQueue>
 80177de:	62f8      	str	r0, [r7, #44]	@ 0x2c
 80177e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80177e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80177e4:	2b00      	cmp	r3, #0
 80177e6:	d010      	beq.n	801780a <xQueueGenericSend+0x112>
 80177e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80177ea:	3324      	adds	r3, #36	@ 0x24
 80177ec:	4618      	mov	r0, r3
 80177ee:	f001 f96d 	bl	8018acc <xTaskRemoveFromEventList>
 80177f2:	4603      	mov	r3, r0
 80177f4:	2b00      	cmp	r3, #0
 80177f6:	d013      	beq.n	8017820 <xQueueGenericSend+0x128>
 80177f8:	4b3f      	ldr	r3, [pc, #252]	@ (80178f8 <xQueueGenericSend+0x200>)
 80177fa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80177fe:	601a      	str	r2, [r3, #0]
 8017800:	f3bf 8f4f 	dsb	sy
 8017804:	f3bf 8f6f 	isb	sy
 8017808:	e00a      	b.n	8017820 <xQueueGenericSend+0x128>
 801780a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801780c:	2b00      	cmp	r3, #0
 801780e:	d007      	beq.n	8017820 <xQueueGenericSend+0x128>
 8017810:	4b39      	ldr	r3, [pc, #228]	@ (80178f8 <xQueueGenericSend+0x200>)
 8017812:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017816:	601a      	str	r2, [r3, #0]
 8017818:	f3bf 8f4f 	dsb	sy
 801781c:	f3bf 8f6f 	isb	sy
 8017820:	f002 fa4c 	bl	8019cbc <vPortExitCritical>
 8017824:	2301      	movs	r3, #1
 8017826:	e063      	b.n	80178f0 <xQueueGenericSend+0x1f8>
 8017828:	687b      	ldr	r3, [r7, #4]
 801782a:	2b00      	cmp	r3, #0
 801782c:	d103      	bne.n	8017836 <xQueueGenericSend+0x13e>
 801782e:	f002 fa45 	bl	8019cbc <vPortExitCritical>
 8017832:	2300      	movs	r3, #0
 8017834:	e05c      	b.n	80178f0 <xQueueGenericSend+0x1f8>
 8017836:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017838:	2b00      	cmp	r3, #0
 801783a:	d106      	bne.n	801784a <xQueueGenericSend+0x152>
 801783c:	f107 0314 	add.w	r3, r7, #20
 8017840:	4618      	mov	r0, r3
 8017842:	f001 fa0b 	bl	8018c5c <vTaskInternalSetTimeOutState>
 8017846:	2301      	movs	r3, #1
 8017848:	637b      	str	r3, [r7, #52]	@ 0x34
 801784a:	f002 fa37 	bl	8019cbc <vPortExitCritical>
 801784e:	f000 fee5 	bl	801861c <vTaskSuspendAll>
 8017852:	f002 fa01 	bl	8019c58 <vPortEnterCritical>
 8017856:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017858:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 801785c:	b25b      	sxtb	r3, r3
 801785e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017862:	d103      	bne.n	801786c <xQueueGenericSend+0x174>
 8017864:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017866:	2200      	movs	r2, #0
 8017868:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801786c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801786e:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017872:	b25b      	sxtb	r3, r3
 8017874:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017878:	d103      	bne.n	8017882 <xQueueGenericSend+0x18a>
 801787a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801787c:	2200      	movs	r2, #0
 801787e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017882:	f002 fa1b 	bl	8019cbc <vPortExitCritical>
 8017886:	1d3a      	adds	r2, r7, #4
 8017888:	f107 0314 	add.w	r3, r7, #20
 801788c:	4611      	mov	r1, r2
 801788e:	4618      	mov	r0, r3
 8017890:	f001 f9fa 	bl	8018c88 <xTaskCheckForTimeOut>
 8017894:	4603      	mov	r3, r0
 8017896:	2b00      	cmp	r3, #0
 8017898:	d124      	bne.n	80178e4 <xQueueGenericSend+0x1ec>
 801789a:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801789c:	f000 fb36 	bl	8017f0c <prvIsQueueFull>
 80178a0:	4603      	mov	r3, r0
 80178a2:	2b00      	cmp	r3, #0
 80178a4:	d018      	beq.n	80178d8 <xQueueGenericSend+0x1e0>
 80178a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80178a8:	3310      	adds	r3, #16
 80178aa:	687a      	ldr	r2, [r7, #4]
 80178ac:	4611      	mov	r1, r2
 80178ae:	4618      	mov	r0, r3
 80178b0:	f001 f8ba 	bl	8018a28 <vTaskPlaceOnEventList>
 80178b4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80178b6:	f000 fac1 	bl	8017e3c <prvUnlockQueue>
 80178ba:	f000 febd 	bl	8018638 <xTaskResumeAll>
 80178be:	4603      	mov	r3, r0
 80178c0:	2b00      	cmp	r3, #0
 80178c2:	f47f af7c 	bne.w	80177be <xQueueGenericSend+0xc6>
 80178c6:	4b0c      	ldr	r3, [pc, #48]	@ (80178f8 <xQueueGenericSend+0x200>)
 80178c8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80178cc:	601a      	str	r2, [r3, #0]
 80178ce:	f3bf 8f4f 	dsb	sy
 80178d2:	f3bf 8f6f 	isb	sy
 80178d6:	e772      	b.n	80177be <xQueueGenericSend+0xc6>
 80178d8:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80178da:	f000 faaf 	bl	8017e3c <prvUnlockQueue>
 80178de:	f000 feab 	bl	8018638 <xTaskResumeAll>
 80178e2:	e76c      	b.n	80177be <xQueueGenericSend+0xc6>
 80178e4:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80178e6:	f000 faa9 	bl	8017e3c <prvUnlockQueue>
 80178ea:	f000 fea5 	bl	8018638 <xTaskResumeAll>
 80178ee:	2300      	movs	r3, #0
 80178f0:	4618      	mov	r0, r3
 80178f2:	3738      	adds	r7, #56	@ 0x38
 80178f4:	46bd      	mov	sp, r7
 80178f6:	bd80      	pop	{r7, pc}
 80178f8:	e000ed04 	.word	0xe000ed04

080178fc <xQueueGenericSendFromISR>:
 80178fc:	b580      	push	{r7, lr}
 80178fe:	b090      	sub	sp, #64	@ 0x40
 8017900:	af00      	add	r7, sp, #0
 8017902:	60f8      	str	r0, [r7, #12]
 8017904:	60b9      	str	r1, [r7, #8]
 8017906:	607a      	str	r2, [r7, #4]
 8017908:	603b      	str	r3, [r7, #0]
 801790a:	68fb      	ldr	r3, [r7, #12]
 801790c:	63bb      	str	r3, [r7, #56]	@ 0x38
 801790e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017910:	2b00      	cmp	r3, #0
 8017912:	d10b      	bne.n	801792c <xQueueGenericSendFromISR+0x30>
 8017914:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017918:	f383 8811 	msr	BASEPRI, r3
 801791c:	f3bf 8f6f 	isb	sy
 8017920:	f3bf 8f4f 	dsb	sy
 8017924:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017926:	bf00      	nop
 8017928:	bf00      	nop
 801792a:	e7fd      	b.n	8017928 <xQueueGenericSendFromISR+0x2c>
 801792c:	68bb      	ldr	r3, [r7, #8]
 801792e:	2b00      	cmp	r3, #0
 8017930:	d103      	bne.n	801793a <xQueueGenericSendFromISR+0x3e>
 8017932:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017934:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017936:	2b00      	cmp	r3, #0
 8017938:	d101      	bne.n	801793e <xQueueGenericSendFromISR+0x42>
 801793a:	2301      	movs	r3, #1
 801793c:	e000      	b.n	8017940 <xQueueGenericSendFromISR+0x44>
 801793e:	2300      	movs	r3, #0
 8017940:	2b00      	cmp	r3, #0
 8017942:	d10b      	bne.n	801795c <xQueueGenericSendFromISR+0x60>
 8017944:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017948:	f383 8811 	msr	BASEPRI, r3
 801794c:	f3bf 8f6f 	isb	sy
 8017950:	f3bf 8f4f 	dsb	sy
 8017954:	627b      	str	r3, [r7, #36]	@ 0x24
 8017956:	bf00      	nop
 8017958:	bf00      	nop
 801795a:	e7fd      	b.n	8017958 <xQueueGenericSendFromISR+0x5c>
 801795c:	683b      	ldr	r3, [r7, #0]
 801795e:	2b02      	cmp	r3, #2
 8017960:	d103      	bne.n	801796a <xQueueGenericSendFromISR+0x6e>
 8017962:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017964:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017966:	2b01      	cmp	r3, #1
 8017968:	d101      	bne.n	801796e <xQueueGenericSendFromISR+0x72>
 801796a:	2301      	movs	r3, #1
 801796c:	e000      	b.n	8017970 <xQueueGenericSendFromISR+0x74>
 801796e:	2300      	movs	r3, #0
 8017970:	2b00      	cmp	r3, #0
 8017972:	d10b      	bne.n	801798c <xQueueGenericSendFromISR+0x90>
 8017974:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017978:	f383 8811 	msr	BASEPRI, r3
 801797c:	f3bf 8f6f 	isb	sy
 8017980:	f3bf 8f4f 	dsb	sy
 8017984:	623b      	str	r3, [r7, #32]
 8017986:	bf00      	nop
 8017988:	bf00      	nop
 801798a:	e7fd      	b.n	8017988 <xQueueGenericSendFromISR+0x8c>
 801798c:	f002 fa44 	bl	8019e18 <vPortValidateInterruptPriority>
 8017990:	f3ef 8211 	mrs	r2, BASEPRI
 8017994:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017998:	f383 8811 	msr	BASEPRI, r3
 801799c:	f3bf 8f6f 	isb	sy
 80179a0:	f3bf 8f4f 	dsb	sy
 80179a4:	61fa      	str	r2, [r7, #28]
 80179a6:	61bb      	str	r3, [r7, #24]
 80179a8:	69fb      	ldr	r3, [r7, #28]
 80179aa:	637b      	str	r3, [r7, #52]	@ 0x34
 80179ac:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80179ae:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80179b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80179b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80179b4:	429a      	cmp	r2, r3
 80179b6:	d302      	bcc.n	80179be <xQueueGenericSendFromISR+0xc2>
 80179b8:	683b      	ldr	r3, [r7, #0]
 80179ba:	2b02      	cmp	r3, #2
 80179bc:	d12f      	bne.n	8017a1e <xQueueGenericSendFromISR+0x122>
 80179be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80179c0:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80179c4:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 80179c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80179ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80179cc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80179ce:	683a      	ldr	r2, [r7, #0]
 80179d0:	68b9      	ldr	r1, [r7, #8]
 80179d2:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 80179d4:	f000 f9a2 	bl	8017d1c <prvCopyDataToQueue>
 80179d8:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 80179dc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80179e0:	d112      	bne.n	8017a08 <xQueueGenericSendFromISR+0x10c>
 80179e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80179e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80179e6:	2b00      	cmp	r3, #0
 80179e8:	d016      	beq.n	8017a18 <xQueueGenericSendFromISR+0x11c>
 80179ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80179ec:	3324      	adds	r3, #36	@ 0x24
 80179ee:	4618      	mov	r0, r3
 80179f0:	f001 f86c 	bl	8018acc <xTaskRemoveFromEventList>
 80179f4:	4603      	mov	r3, r0
 80179f6:	2b00      	cmp	r3, #0
 80179f8:	d00e      	beq.n	8017a18 <xQueueGenericSendFromISR+0x11c>
 80179fa:	687b      	ldr	r3, [r7, #4]
 80179fc:	2b00      	cmp	r3, #0
 80179fe:	d00b      	beq.n	8017a18 <xQueueGenericSendFromISR+0x11c>
 8017a00:	687b      	ldr	r3, [r7, #4]
 8017a02:	2201      	movs	r2, #1
 8017a04:	601a      	str	r2, [r3, #0]
 8017a06:	e007      	b.n	8017a18 <xQueueGenericSendFromISR+0x11c>
 8017a08:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8017a0c:	3301      	adds	r3, #1
 8017a0e:	b2db      	uxtb	r3, r3
 8017a10:	b25a      	sxtb	r2, r3
 8017a12:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017a14:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017a18:	2301      	movs	r3, #1
 8017a1a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8017a1c:	e001      	b.n	8017a22 <xQueueGenericSendFromISR+0x126>
 8017a1e:	2300      	movs	r3, #0
 8017a20:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8017a22:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017a24:	617b      	str	r3, [r7, #20]
 8017a26:	697b      	ldr	r3, [r7, #20]
 8017a28:	f383 8811 	msr	BASEPRI, r3
 8017a2c:	bf00      	nop
 8017a2e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8017a30:	4618      	mov	r0, r3
 8017a32:	3740      	adds	r7, #64	@ 0x40
 8017a34:	46bd      	mov	sp, r7
 8017a36:	bd80      	pop	{r7, pc}

08017a38 <xQueueGiveFromISR>:
 8017a38:	b580      	push	{r7, lr}
 8017a3a:	b08e      	sub	sp, #56	@ 0x38
 8017a3c:	af00      	add	r7, sp, #0
 8017a3e:	6078      	str	r0, [r7, #4]
 8017a40:	6039      	str	r1, [r7, #0]
 8017a42:	687b      	ldr	r3, [r7, #4]
 8017a44:	633b      	str	r3, [r7, #48]	@ 0x30
 8017a46:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a48:	2b00      	cmp	r3, #0
 8017a4a:	d10b      	bne.n	8017a64 <xQueueGiveFromISR+0x2c>
 8017a4c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017a50:	f383 8811 	msr	BASEPRI, r3
 8017a54:	f3bf 8f6f 	isb	sy
 8017a58:	f3bf 8f4f 	dsb	sy
 8017a5c:	623b      	str	r3, [r7, #32]
 8017a5e:	bf00      	nop
 8017a60:	bf00      	nop
 8017a62:	e7fd      	b.n	8017a60 <xQueueGiveFromISR+0x28>
 8017a64:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017a68:	2b00      	cmp	r3, #0
 8017a6a:	d00b      	beq.n	8017a84 <xQueueGiveFromISR+0x4c>
 8017a6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017a70:	f383 8811 	msr	BASEPRI, r3
 8017a74:	f3bf 8f6f 	isb	sy
 8017a78:	f3bf 8f4f 	dsb	sy
 8017a7c:	61fb      	str	r3, [r7, #28]
 8017a7e:	bf00      	nop
 8017a80:	bf00      	nop
 8017a82:	e7fd      	b.n	8017a80 <xQueueGiveFromISR+0x48>
 8017a84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a86:	681b      	ldr	r3, [r3, #0]
 8017a88:	2b00      	cmp	r3, #0
 8017a8a:	d103      	bne.n	8017a94 <xQueueGiveFromISR+0x5c>
 8017a8c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a8e:	689b      	ldr	r3, [r3, #8]
 8017a90:	2b00      	cmp	r3, #0
 8017a92:	d101      	bne.n	8017a98 <xQueueGiveFromISR+0x60>
 8017a94:	2301      	movs	r3, #1
 8017a96:	e000      	b.n	8017a9a <xQueueGiveFromISR+0x62>
 8017a98:	2300      	movs	r3, #0
 8017a9a:	2b00      	cmp	r3, #0
 8017a9c:	d10b      	bne.n	8017ab6 <xQueueGiveFromISR+0x7e>
 8017a9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017aa2:	f383 8811 	msr	BASEPRI, r3
 8017aa6:	f3bf 8f6f 	isb	sy
 8017aaa:	f3bf 8f4f 	dsb	sy
 8017aae:	61bb      	str	r3, [r7, #24]
 8017ab0:	bf00      	nop
 8017ab2:	bf00      	nop
 8017ab4:	e7fd      	b.n	8017ab2 <xQueueGiveFromISR+0x7a>
 8017ab6:	f002 f9af 	bl	8019e18 <vPortValidateInterruptPriority>
 8017aba:	f3ef 8211 	mrs	r2, BASEPRI
 8017abe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017ac2:	f383 8811 	msr	BASEPRI, r3
 8017ac6:	f3bf 8f6f 	isb	sy
 8017aca:	f3bf 8f4f 	dsb	sy
 8017ace:	617a      	str	r2, [r7, #20]
 8017ad0:	613b      	str	r3, [r7, #16]
 8017ad2:	697b      	ldr	r3, [r7, #20]
 8017ad4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017ad6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017ad8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017ada:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017adc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017ade:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017ae0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8017ae2:	429a      	cmp	r2, r3
 8017ae4:	d22b      	bcs.n	8017b3e <xQueueGiveFromISR+0x106>
 8017ae6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017ae8:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017aec:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8017af0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017af2:	1c5a      	adds	r2, r3, #1
 8017af4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017af6:	639a      	str	r2, [r3, #56]	@ 0x38
 8017af8:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 8017afc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017b00:	d112      	bne.n	8017b28 <xQueueGiveFromISR+0xf0>
 8017b02:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017b04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017b06:	2b00      	cmp	r3, #0
 8017b08:	d016      	beq.n	8017b38 <xQueueGiveFromISR+0x100>
 8017b0a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017b0c:	3324      	adds	r3, #36	@ 0x24
 8017b0e:	4618      	mov	r0, r3
 8017b10:	f000 ffdc 	bl	8018acc <xTaskRemoveFromEventList>
 8017b14:	4603      	mov	r3, r0
 8017b16:	2b00      	cmp	r3, #0
 8017b18:	d00e      	beq.n	8017b38 <xQueueGiveFromISR+0x100>
 8017b1a:	683b      	ldr	r3, [r7, #0]
 8017b1c:	2b00      	cmp	r3, #0
 8017b1e:	d00b      	beq.n	8017b38 <xQueueGiveFromISR+0x100>
 8017b20:	683b      	ldr	r3, [r7, #0]
 8017b22:	2201      	movs	r2, #1
 8017b24:	601a      	str	r2, [r3, #0]
 8017b26:	e007      	b.n	8017b38 <xQueueGiveFromISR+0x100>
 8017b28:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8017b2c:	3301      	adds	r3, #1
 8017b2e:	b2db      	uxtb	r3, r3
 8017b30:	b25a      	sxtb	r2, r3
 8017b32:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017b34:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017b38:	2301      	movs	r3, #1
 8017b3a:	637b      	str	r3, [r7, #52]	@ 0x34
 8017b3c:	e001      	b.n	8017b42 <xQueueGiveFromISR+0x10a>
 8017b3e:	2300      	movs	r3, #0
 8017b40:	637b      	str	r3, [r7, #52]	@ 0x34
 8017b42:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017b44:	60fb      	str	r3, [r7, #12]
 8017b46:	68fb      	ldr	r3, [r7, #12]
 8017b48:	f383 8811 	msr	BASEPRI, r3
 8017b4c:	bf00      	nop
 8017b4e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017b50:	4618      	mov	r0, r3
 8017b52:	3738      	adds	r7, #56	@ 0x38
 8017b54:	46bd      	mov	sp, r7
 8017b56:	bd80      	pop	{r7, pc}

08017b58 <xQueueReceive>:
 8017b58:	b580      	push	{r7, lr}
 8017b5a:	b08c      	sub	sp, #48	@ 0x30
 8017b5c:	af00      	add	r7, sp, #0
 8017b5e:	60f8      	str	r0, [r7, #12]
 8017b60:	60b9      	str	r1, [r7, #8]
 8017b62:	607a      	str	r2, [r7, #4]
 8017b64:	2300      	movs	r3, #0
 8017b66:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017b68:	68fb      	ldr	r3, [r7, #12]
 8017b6a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017b6c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b6e:	2b00      	cmp	r3, #0
 8017b70:	d10b      	bne.n	8017b8a <xQueueReceive+0x32>
 8017b72:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017b76:	f383 8811 	msr	BASEPRI, r3
 8017b7a:	f3bf 8f6f 	isb	sy
 8017b7e:	f3bf 8f4f 	dsb	sy
 8017b82:	623b      	str	r3, [r7, #32]
 8017b84:	bf00      	nop
 8017b86:	bf00      	nop
 8017b88:	e7fd      	b.n	8017b86 <xQueueReceive+0x2e>
 8017b8a:	68bb      	ldr	r3, [r7, #8]
 8017b8c:	2b00      	cmp	r3, #0
 8017b8e:	d103      	bne.n	8017b98 <xQueueReceive+0x40>
 8017b90:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017b94:	2b00      	cmp	r3, #0
 8017b96:	d101      	bne.n	8017b9c <xQueueReceive+0x44>
 8017b98:	2301      	movs	r3, #1
 8017b9a:	e000      	b.n	8017b9e <xQueueReceive+0x46>
 8017b9c:	2300      	movs	r3, #0
 8017b9e:	2b00      	cmp	r3, #0
 8017ba0:	d10b      	bne.n	8017bba <xQueueReceive+0x62>
 8017ba2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017ba6:	f383 8811 	msr	BASEPRI, r3
 8017baa:	f3bf 8f6f 	isb	sy
 8017bae:	f3bf 8f4f 	dsb	sy
 8017bb2:	61fb      	str	r3, [r7, #28]
 8017bb4:	bf00      	nop
 8017bb6:	bf00      	nop
 8017bb8:	e7fd      	b.n	8017bb6 <xQueueReceive+0x5e>
 8017bba:	f001 f9b1 	bl	8018f20 <xTaskGetSchedulerState>
 8017bbe:	4603      	mov	r3, r0
 8017bc0:	2b00      	cmp	r3, #0
 8017bc2:	d102      	bne.n	8017bca <xQueueReceive+0x72>
 8017bc4:	687b      	ldr	r3, [r7, #4]
 8017bc6:	2b00      	cmp	r3, #0
 8017bc8:	d101      	bne.n	8017bce <xQueueReceive+0x76>
 8017bca:	2301      	movs	r3, #1
 8017bcc:	e000      	b.n	8017bd0 <xQueueReceive+0x78>
 8017bce:	2300      	movs	r3, #0
 8017bd0:	2b00      	cmp	r3, #0
 8017bd2:	d10b      	bne.n	8017bec <xQueueReceive+0x94>
 8017bd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017bd8:	f383 8811 	msr	BASEPRI, r3
 8017bdc:	f3bf 8f6f 	isb	sy
 8017be0:	f3bf 8f4f 	dsb	sy
 8017be4:	61bb      	str	r3, [r7, #24]
 8017be6:	bf00      	nop
 8017be8:	bf00      	nop
 8017bea:	e7fd      	b.n	8017be8 <xQueueReceive+0x90>
 8017bec:	f002 f834 	bl	8019c58 <vPortEnterCritical>
 8017bf0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017bf2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017bf4:	627b      	str	r3, [r7, #36]	@ 0x24
 8017bf6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017bf8:	2b00      	cmp	r3, #0
 8017bfa:	d01f      	beq.n	8017c3c <xQueueReceive+0xe4>
 8017bfc:	68b9      	ldr	r1, [r7, #8]
 8017bfe:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017c00:	f000 f8f6 	bl	8017df0 <prvCopyDataFromQueue>
 8017c04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017c06:	1e5a      	subs	r2, r3, #1
 8017c08:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c0a:	639a      	str	r2, [r3, #56]	@ 0x38
 8017c0c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c0e:	691b      	ldr	r3, [r3, #16]
 8017c10:	2b00      	cmp	r3, #0
 8017c12:	d00f      	beq.n	8017c34 <xQueueReceive+0xdc>
 8017c14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c16:	3310      	adds	r3, #16
 8017c18:	4618      	mov	r0, r3
 8017c1a:	f000 ff57 	bl	8018acc <xTaskRemoveFromEventList>
 8017c1e:	4603      	mov	r3, r0
 8017c20:	2b00      	cmp	r3, #0
 8017c22:	d007      	beq.n	8017c34 <xQueueReceive+0xdc>
 8017c24:	4b3c      	ldr	r3, [pc, #240]	@ (8017d18 <xQueueReceive+0x1c0>)
 8017c26:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017c2a:	601a      	str	r2, [r3, #0]
 8017c2c:	f3bf 8f4f 	dsb	sy
 8017c30:	f3bf 8f6f 	isb	sy
 8017c34:	f002 f842 	bl	8019cbc <vPortExitCritical>
 8017c38:	2301      	movs	r3, #1
 8017c3a:	e069      	b.n	8017d10 <xQueueReceive+0x1b8>
 8017c3c:	687b      	ldr	r3, [r7, #4]
 8017c3e:	2b00      	cmp	r3, #0
 8017c40:	d103      	bne.n	8017c4a <xQueueReceive+0xf2>
 8017c42:	f002 f83b 	bl	8019cbc <vPortExitCritical>
 8017c46:	2300      	movs	r3, #0
 8017c48:	e062      	b.n	8017d10 <xQueueReceive+0x1b8>
 8017c4a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017c4c:	2b00      	cmp	r3, #0
 8017c4e:	d106      	bne.n	8017c5e <xQueueReceive+0x106>
 8017c50:	f107 0310 	add.w	r3, r7, #16
 8017c54:	4618      	mov	r0, r3
 8017c56:	f001 f801 	bl	8018c5c <vTaskInternalSetTimeOutState>
 8017c5a:	2301      	movs	r3, #1
 8017c5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017c5e:	f002 f82d 	bl	8019cbc <vPortExitCritical>
 8017c62:	f000 fcdb 	bl	801861c <vTaskSuspendAll>
 8017c66:	f001 fff7 	bl	8019c58 <vPortEnterCritical>
 8017c6a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c6c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017c70:	b25b      	sxtb	r3, r3
 8017c72:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017c76:	d103      	bne.n	8017c80 <xQueueReceive+0x128>
 8017c78:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c7a:	2200      	movs	r2, #0
 8017c7c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017c80:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c82:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017c86:	b25b      	sxtb	r3, r3
 8017c88:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017c8c:	d103      	bne.n	8017c96 <xQueueReceive+0x13e>
 8017c8e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017c90:	2200      	movs	r2, #0
 8017c92:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017c96:	f002 f811 	bl	8019cbc <vPortExitCritical>
 8017c9a:	1d3a      	adds	r2, r7, #4
 8017c9c:	f107 0310 	add.w	r3, r7, #16
 8017ca0:	4611      	mov	r1, r2
 8017ca2:	4618      	mov	r0, r3
 8017ca4:	f000 fff0 	bl	8018c88 <xTaskCheckForTimeOut>
 8017ca8:	4603      	mov	r3, r0
 8017caa:	2b00      	cmp	r3, #0
 8017cac:	d123      	bne.n	8017cf6 <xQueueReceive+0x19e>
 8017cae:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017cb0:	f000 f916 	bl	8017ee0 <prvIsQueueEmpty>
 8017cb4:	4603      	mov	r3, r0
 8017cb6:	2b00      	cmp	r3, #0
 8017cb8:	d017      	beq.n	8017cea <xQueueReceive+0x192>
 8017cba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017cbc:	3324      	adds	r3, #36	@ 0x24
 8017cbe:	687a      	ldr	r2, [r7, #4]
 8017cc0:	4611      	mov	r1, r2
 8017cc2:	4618      	mov	r0, r3
 8017cc4:	f000 feb0 	bl	8018a28 <vTaskPlaceOnEventList>
 8017cc8:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017cca:	f000 f8b7 	bl	8017e3c <prvUnlockQueue>
 8017cce:	f000 fcb3 	bl	8018638 <xTaskResumeAll>
 8017cd2:	4603      	mov	r3, r0
 8017cd4:	2b00      	cmp	r3, #0
 8017cd6:	d189      	bne.n	8017bec <xQueueReceive+0x94>
 8017cd8:	4b0f      	ldr	r3, [pc, #60]	@ (8017d18 <xQueueReceive+0x1c0>)
 8017cda:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017cde:	601a      	str	r2, [r3, #0]
 8017ce0:	f3bf 8f4f 	dsb	sy
 8017ce4:	f3bf 8f6f 	isb	sy
 8017ce8:	e780      	b.n	8017bec <xQueueReceive+0x94>
 8017cea:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017cec:	f000 f8a6 	bl	8017e3c <prvUnlockQueue>
 8017cf0:	f000 fca2 	bl	8018638 <xTaskResumeAll>
 8017cf4:	e77a      	b.n	8017bec <xQueueReceive+0x94>
 8017cf6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017cf8:	f000 f8a0 	bl	8017e3c <prvUnlockQueue>
 8017cfc:	f000 fc9c 	bl	8018638 <xTaskResumeAll>
 8017d00:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017d02:	f000 f8ed 	bl	8017ee0 <prvIsQueueEmpty>
 8017d06:	4603      	mov	r3, r0
 8017d08:	2b00      	cmp	r3, #0
 8017d0a:	f43f af6f 	beq.w	8017bec <xQueueReceive+0x94>
 8017d0e:	2300      	movs	r3, #0
 8017d10:	4618      	mov	r0, r3
 8017d12:	3730      	adds	r7, #48	@ 0x30
 8017d14:	46bd      	mov	sp, r7
 8017d16:	bd80      	pop	{r7, pc}
 8017d18:	e000ed04 	.word	0xe000ed04

08017d1c <prvCopyDataToQueue>:
 8017d1c:	b580      	push	{r7, lr}
 8017d1e:	b086      	sub	sp, #24
 8017d20:	af00      	add	r7, sp, #0
 8017d22:	60f8      	str	r0, [r7, #12]
 8017d24:	60b9      	str	r1, [r7, #8]
 8017d26:	607a      	str	r2, [r7, #4]
 8017d28:	2300      	movs	r3, #0
 8017d2a:	617b      	str	r3, [r7, #20]
 8017d2c:	68fb      	ldr	r3, [r7, #12]
 8017d2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017d30:	613b      	str	r3, [r7, #16]
 8017d32:	68fb      	ldr	r3, [r7, #12]
 8017d34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d36:	2b00      	cmp	r3, #0
 8017d38:	d10d      	bne.n	8017d56 <prvCopyDataToQueue+0x3a>
 8017d3a:	68fb      	ldr	r3, [r7, #12]
 8017d3c:	681b      	ldr	r3, [r3, #0]
 8017d3e:	2b00      	cmp	r3, #0
 8017d40:	d14d      	bne.n	8017dde <prvCopyDataToQueue+0xc2>
 8017d42:	68fb      	ldr	r3, [r7, #12]
 8017d44:	689b      	ldr	r3, [r3, #8]
 8017d46:	4618      	mov	r0, r3
 8017d48:	f001 f908 	bl	8018f5c <xTaskPriorityDisinherit>
 8017d4c:	6178      	str	r0, [r7, #20]
 8017d4e:	68fb      	ldr	r3, [r7, #12]
 8017d50:	2200      	movs	r2, #0
 8017d52:	609a      	str	r2, [r3, #8]
 8017d54:	e043      	b.n	8017dde <prvCopyDataToQueue+0xc2>
 8017d56:	687b      	ldr	r3, [r7, #4]
 8017d58:	2b00      	cmp	r3, #0
 8017d5a:	d119      	bne.n	8017d90 <prvCopyDataToQueue+0x74>
 8017d5c:	68fb      	ldr	r3, [r7, #12]
 8017d5e:	6858      	ldr	r0, [r3, #4]
 8017d60:	68fb      	ldr	r3, [r7, #12]
 8017d62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d64:	461a      	mov	r2, r3
 8017d66:	68b9      	ldr	r1, [r7, #8]
 8017d68:	f003 f9a4 	bl	801b0b4 <memcpy>
 8017d6c:	68fb      	ldr	r3, [r7, #12]
 8017d6e:	685a      	ldr	r2, [r3, #4]
 8017d70:	68fb      	ldr	r3, [r7, #12]
 8017d72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d74:	441a      	add	r2, r3
 8017d76:	68fb      	ldr	r3, [r7, #12]
 8017d78:	605a      	str	r2, [r3, #4]
 8017d7a:	68fb      	ldr	r3, [r7, #12]
 8017d7c:	685a      	ldr	r2, [r3, #4]
 8017d7e:	68fb      	ldr	r3, [r7, #12]
 8017d80:	689b      	ldr	r3, [r3, #8]
 8017d82:	429a      	cmp	r2, r3
 8017d84:	d32b      	bcc.n	8017dde <prvCopyDataToQueue+0xc2>
 8017d86:	68fb      	ldr	r3, [r7, #12]
 8017d88:	681a      	ldr	r2, [r3, #0]
 8017d8a:	68fb      	ldr	r3, [r7, #12]
 8017d8c:	605a      	str	r2, [r3, #4]
 8017d8e:	e026      	b.n	8017dde <prvCopyDataToQueue+0xc2>
 8017d90:	68fb      	ldr	r3, [r7, #12]
 8017d92:	68d8      	ldr	r0, [r3, #12]
 8017d94:	68fb      	ldr	r3, [r7, #12]
 8017d96:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d98:	461a      	mov	r2, r3
 8017d9a:	68b9      	ldr	r1, [r7, #8]
 8017d9c:	f003 f98a 	bl	801b0b4 <memcpy>
 8017da0:	68fb      	ldr	r3, [r7, #12]
 8017da2:	68da      	ldr	r2, [r3, #12]
 8017da4:	68fb      	ldr	r3, [r7, #12]
 8017da6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017da8:	425b      	negs	r3, r3
 8017daa:	441a      	add	r2, r3
 8017dac:	68fb      	ldr	r3, [r7, #12]
 8017dae:	60da      	str	r2, [r3, #12]
 8017db0:	68fb      	ldr	r3, [r7, #12]
 8017db2:	68da      	ldr	r2, [r3, #12]
 8017db4:	68fb      	ldr	r3, [r7, #12]
 8017db6:	681b      	ldr	r3, [r3, #0]
 8017db8:	429a      	cmp	r2, r3
 8017dba:	d207      	bcs.n	8017dcc <prvCopyDataToQueue+0xb0>
 8017dbc:	68fb      	ldr	r3, [r7, #12]
 8017dbe:	689a      	ldr	r2, [r3, #8]
 8017dc0:	68fb      	ldr	r3, [r7, #12]
 8017dc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017dc4:	425b      	negs	r3, r3
 8017dc6:	441a      	add	r2, r3
 8017dc8:	68fb      	ldr	r3, [r7, #12]
 8017dca:	60da      	str	r2, [r3, #12]
 8017dcc:	687b      	ldr	r3, [r7, #4]
 8017dce:	2b02      	cmp	r3, #2
 8017dd0:	d105      	bne.n	8017dde <prvCopyDataToQueue+0xc2>
 8017dd2:	693b      	ldr	r3, [r7, #16]
 8017dd4:	2b00      	cmp	r3, #0
 8017dd6:	d002      	beq.n	8017dde <prvCopyDataToQueue+0xc2>
 8017dd8:	693b      	ldr	r3, [r7, #16]
 8017dda:	3b01      	subs	r3, #1
 8017ddc:	613b      	str	r3, [r7, #16]
 8017dde:	693b      	ldr	r3, [r7, #16]
 8017de0:	1c5a      	adds	r2, r3, #1
 8017de2:	68fb      	ldr	r3, [r7, #12]
 8017de4:	639a      	str	r2, [r3, #56]	@ 0x38
 8017de6:	697b      	ldr	r3, [r7, #20]
 8017de8:	4618      	mov	r0, r3
 8017dea:	3718      	adds	r7, #24
 8017dec:	46bd      	mov	sp, r7
 8017dee:	bd80      	pop	{r7, pc}

08017df0 <prvCopyDataFromQueue>:
 8017df0:	b580      	push	{r7, lr}
 8017df2:	b082      	sub	sp, #8
 8017df4:	af00      	add	r7, sp, #0
 8017df6:	6078      	str	r0, [r7, #4]
 8017df8:	6039      	str	r1, [r7, #0]
 8017dfa:	687b      	ldr	r3, [r7, #4]
 8017dfc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017dfe:	2b00      	cmp	r3, #0
 8017e00:	d018      	beq.n	8017e34 <prvCopyDataFromQueue+0x44>
 8017e02:	687b      	ldr	r3, [r7, #4]
 8017e04:	68da      	ldr	r2, [r3, #12]
 8017e06:	687b      	ldr	r3, [r7, #4]
 8017e08:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017e0a:	441a      	add	r2, r3
 8017e0c:	687b      	ldr	r3, [r7, #4]
 8017e0e:	60da      	str	r2, [r3, #12]
 8017e10:	687b      	ldr	r3, [r7, #4]
 8017e12:	68da      	ldr	r2, [r3, #12]
 8017e14:	687b      	ldr	r3, [r7, #4]
 8017e16:	689b      	ldr	r3, [r3, #8]
 8017e18:	429a      	cmp	r2, r3
 8017e1a:	d303      	bcc.n	8017e24 <prvCopyDataFromQueue+0x34>
 8017e1c:	687b      	ldr	r3, [r7, #4]
 8017e1e:	681a      	ldr	r2, [r3, #0]
 8017e20:	687b      	ldr	r3, [r7, #4]
 8017e22:	60da      	str	r2, [r3, #12]
 8017e24:	687b      	ldr	r3, [r7, #4]
 8017e26:	68d9      	ldr	r1, [r3, #12]
 8017e28:	687b      	ldr	r3, [r7, #4]
 8017e2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017e2c:	461a      	mov	r2, r3
 8017e2e:	6838      	ldr	r0, [r7, #0]
 8017e30:	f003 f940 	bl	801b0b4 <memcpy>
 8017e34:	bf00      	nop
 8017e36:	3708      	adds	r7, #8
 8017e38:	46bd      	mov	sp, r7
 8017e3a:	bd80      	pop	{r7, pc}

08017e3c <prvUnlockQueue>:
 8017e3c:	b580      	push	{r7, lr}
 8017e3e:	b084      	sub	sp, #16
 8017e40:	af00      	add	r7, sp, #0
 8017e42:	6078      	str	r0, [r7, #4]
 8017e44:	f001 ff08 	bl	8019c58 <vPortEnterCritical>
 8017e48:	687b      	ldr	r3, [r7, #4]
 8017e4a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017e4e:	73fb      	strb	r3, [r7, #15]
 8017e50:	e011      	b.n	8017e76 <prvUnlockQueue+0x3a>
 8017e52:	687b      	ldr	r3, [r7, #4]
 8017e54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017e56:	2b00      	cmp	r3, #0
 8017e58:	d012      	beq.n	8017e80 <prvUnlockQueue+0x44>
 8017e5a:	687b      	ldr	r3, [r7, #4]
 8017e5c:	3324      	adds	r3, #36	@ 0x24
 8017e5e:	4618      	mov	r0, r3
 8017e60:	f000 fe34 	bl	8018acc <xTaskRemoveFromEventList>
 8017e64:	4603      	mov	r3, r0
 8017e66:	2b00      	cmp	r3, #0
 8017e68:	d001      	beq.n	8017e6e <prvUnlockQueue+0x32>
 8017e6a:	f000 ff71 	bl	8018d50 <vTaskMissedYield>
 8017e6e:	7bfb      	ldrb	r3, [r7, #15]
 8017e70:	3b01      	subs	r3, #1
 8017e72:	b2db      	uxtb	r3, r3
 8017e74:	73fb      	strb	r3, [r7, #15]
 8017e76:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8017e7a:	2b00      	cmp	r3, #0
 8017e7c:	dce9      	bgt.n	8017e52 <prvUnlockQueue+0x16>
 8017e7e:	e000      	b.n	8017e82 <prvUnlockQueue+0x46>
 8017e80:	bf00      	nop
 8017e82:	687b      	ldr	r3, [r7, #4]
 8017e84:	22ff      	movs	r2, #255	@ 0xff
 8017e86:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017e8a:	f001 ff17 	bl	8019cbc <vPortExitCritical>
 8017e8e:	f001 fee3 	bl	8019c58 <vPortEnterCritical>
 8017e92:	687b      	ldr	r3, [r7, #4]
 8017e94:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017e98:	73bb      	strb	r3, [r7, #14]
 8017e9a:	e011      	b.n	8017ec0 <prvUnlockQueue+0x84>
 8017e9c:	687b      	ldr	r3, [r7, #4]
 8017e9e:	691b      	ldr	r3, [r3, #16]
 8017ea0:	2b00      	cmp	r3, #0
 8017ea2:	d012      	beq.n	8017eca <prvUnlockQueue+0x8e>
 8017ea4:	687b      	ldr	r3, [r7, #4]
 8017ea6:	3310      	adds	r3, #16
 8017ea8:	4618      	mov	r0, r3
 8017eaa:	f000 fe0f 	bl	8018acc <xTaskRemoveFromEventList>
 8017eae:	4603      	mov	r3, r0
 8017eb0:	2b00      	cmp	r3, #0
 8017eb2:	d001      	beq.n	8017eb8 <prvUnlockQueue+0x7c>
 8017eb4:	f000 ff4c 	bl	8018d50 <vTaskMissedYield>
 8017eb8:	7bbb      	ldrb	r3, [r7, #14]
 8017eba:	3b01      	subs	r3, #1
 8017ebc:	b2db      	uxtb	r3, r3
 8017ebe:	73bb      	strb	r3, [r7, #14]
 8017ec0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8017ec4:	2b00      	cmp	r3, #0
 8017ec6:	dce9      	bgt.n	8017e9c <prvUnlockQueue+0x60>
 8017ec8:	e000      	b.n	8017ecc <prvUnlockQueue+0x90>
 8017eca:	bf00      	nop
 8017ecc:	687b      	ldr	r3, [r7, #4]
 8017ece:	22ff      	movs	r2, #255	@ 0xff
 8017ed0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017ed4:	f001 fef2 	bl	8019cbc <vPortExitCritical>
 8017ed8:	bf00      	nop
 8017eda:	3710      	adds	r7, #16
 8017edc:	46bd      	mov	sp, r7
 8017ede:	bd80      	pop	{r7, pc}

08017ee0 <prvIsQueueEmpty>:
 8017ee0:	b580      	push	{r7, lr}
 8017ee2:	b084      	sub	sp, #16
 8017ee4:	af00      	add	r7, sp, #0
 8017ee6:	6078      	str	r0, [r7, #4]
 8017ee8:	f001 feb6 	bl	8019c58 <vPortEnterCritical>
 8017eec:	687b      	ldr	r3, [r7, #4]
 8017eee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017ef0:	2b00      	cmp	r3, #0
 8017ef2:	d102      	bne.n	8017efa <prvIsQueueEmpty+0x1a>
 8017ef4:	2301      	movs	r3, #1
 8017ef6:	60fb      	str	r3, [r7, #12]
 8017ef8:	e001      	b.n	8017efe <prvIsQueueEmpty+0x1e>
 8017efa:	2300      	movs	r3, #0
 8017efc:	60fb      	str	r3, [r7, #12]
 8017efe:	f001 fedd 	bl	8019cbc <vPortExitCritical>
 8017f02:	68fb      	ldr	r3, [r7, #12]
 8017f04:	4618      	mov	r0, r3
 8017f06:	3710      	adds	r7, #16
 8017f08:	46bd      	mov	sp, r7
 8017f0a:	bd80      	pop	{r7, pc}

08017f0c <prvIsQueueFull>:
 8017f0c:	b580      	push	{r7, lr}
 8017f0e:	b084      	sub	sp, #16
 8017f10:	af00      	add	r7, sp, #0
 8017f12:	6078      	str	r0, [r7, #4]
 8017f14:	f001 fea0 	bl	8019c58 <vPortEnterCritical>
 8017f18:	687b      	ldr	r3, [r7, #4]
 8017f1a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8017f1c:	687b      	ldr	r3, [r7, #4]
 8017f1e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017f20:	429a      	cmp	r2, r3
 8017f22:	d102      	bne.n	8017f2a <prvIsQueueFull+0x1e>
 8017f24:	2301      	movs	r3, #1
 8017f26:	60fb      	str	r3, [r7, #12]
 8017f28:	e001      	b.n	8017f2e <prvIsQueueFull+0x22>
 8017f2a:	2300      	movs	r3, #0
 8017f2c:	60fb      	str	r3, [r7, #12]
 8017f2e:	f001 fec5 	bl	8019cbc <vPortExitCritical>
 8017f32:	68fb      	ldr	r3, [r7, #12]
 8017f34:	4618      	mov	r0, r3
 8017f36:	3710      	adds	r7, #16
 8017f38:	46bd      	mov	sp, r7
 8017f3a:	bd80      	pop	{r7, pc}

08017f3c <vQueueAddToRegistry>:
 8017f3c:	b480      	push	{r7}
 8017f3e:	b085      	sub	sp, #20
 8017f40:	af00      	add	r7, sp, #0
 8017f42:	6078      	str	r0, [r7, #4]
 8017f44:	6039      	str	r1, [r7, #0]
 8017f46:	2300      	movs	r3, #0
 8017f48:	60fb      	str	r3, [r7, #12]
 8017f4a:	e014      	b.n	8017f76 <vQueueAddToRegistry+0x3a>
 8017f4c:	4a0f      	ldr	r2, [pc, #60]	@ (8017f8c <vQueueAddToRegistry+0x50>)
 8017f4e:	68fb      	ldr	r3, [r7, #12]
 8017f50:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8017f54:	2b00      	cmp	r3, #0
 8017f56:	d10b      	bne.n	8017f70 <vQueueAddToRegistry+0x34>
 8017f58:	490c      	ldr	r1, [pc, #48]	@ (8017f8c <vQueueAddToRegistry+0x50>)
 8017f5a:	68fb      	ldr	r3, [r7, #12]
 8017f5c:	683a      	ldr	r2, [r7, #0]
 8017f5e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8017f62:	4a0a      	ldr	r2, [pc, #40]	@ (8017f8c <vQueueAddToRegistry+0x50>)
 8017f64:	68fb      	ldr	r3, [r7, #12]
 8017f66:	00db      	lsls	r3, r3, #3
 8017f68:	4413      	add	r3, r2
 8017f6a:	687a      	ldr	r2, [r7, #4]
 8017f6c:	605a      	str	r2, [r3, #4]
 8017f6e:	e006      	b.n	8017f7e <vQueueAddToRegistry+0x42>
 8017f70:	68fb      	ldr	r3, [r7, #12]
 8017f72:	3301      	adds	r3, #1
 8017f74:	60fb      	str	r3, [r7, #12]
 8017f76:	68fb      	ldr	r3, [r7, #12]
 8017f78:	2b07      	cmp	r3, #7
 8017f7a:	d9e7      	bls.n	8017f4c <vQueueAddToRegistry+0x10>
 8017f7c:	bf00      	nop
 8017f7e:	bf00      	nop
 8017f80:	3714      	adds	r7, #20
 8017f82:	46bd      	mov	sp, r7
 8017f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017f88:	4770      	bx	lr
 8017f8a:	bf00      	nop
 8017f8c:	20003ae0 	.word	0x20003ae0

08017f90 <vQueueWaitForMessageRestricted>:
 8017f90:	b580      	push	{r7, lr}
 8017f92:	b086      	sub	sp, #24
 8017f94:	af00      	add	r7, sp, #0
 8017f96:	60f8      	str	r0, [r7, #12]
 8017f98:	60b9      	str	r1, [r7, #8]
 8017f9a:	607a      	str	r2, [r7, #4]
 8017f9c:	68fb      	ldr	r3, [r7, #12]
 8017f9e:	617b      	str	r3, [r7, #20]
 8017fa0:	f001 fe5a 	bl	8019c58 <vPortEnterCritical>
 8017fa4:	697b      	ldr	r3, [r7, #20]
 8017fa6:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017faa:	b25b      	sxtb	r3, r3
 8017fac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017fb0:	d103      	bne.n	8017fba <vQueueWaitForMessageRestricted+0x2a>
 8017fb2:	697b      	ldr	r3, [r7, #20]
 8017fb4:	2200      	movs	r2, #0
 8017fb6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017fba:	697b      	ldr	r3, [r7, #20]
 8017fbc:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017fc0:	b25b      	sxtb	r3, r3
 8017fc2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017fc6:	d103      	bne.n	8017fd0 <vQueueWaitForMessageRestricted+0x40>
 8017fc8:	697b      	ldr	r3, [r7, #20]
 8017fca:	2200      	movs	r2, #0
 8017fcc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017fd0:	f001 fe74 	bl	8019cbc <vPortExitCritical>
 8017fd4:	697b      	ldr	r3, [r7, #20]
 8017fd6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017fd8:	2b00      	cmp	r3, #0
 8017fda:	d106      	bne.n	8017fea <vQueueWaitForMessageRestricted+0x5a>
 8017fdc:	697b      	ldr	r3, [r7, #20]
 8017fde:	3324      	adds	r3, #36	@ 0x24
 8017fe0:	687a      	ldr	r2, [r7, #4]
 8017fe2:	68b9      	ldr	r1, [r7, #8]
 8017fe4:	4618      	mov	r0, r3
 8017fe6:	f000 fd45 	bl	8018a74 <vTaskPlaceOnEventListRestricted>
 8017fea:	6978      	ldr	r0, [r7, #20]
 8017fec:	f7ff ff26 	bl	8017e3c <prvUnlockQueue>
 8017ff0:	bf00      	nop
 8017ff2:	3718      	adds	r7, #24
 8017ff4:	46bd      	mov	sp, r7
 8017ff6:	bd80      	pop	{r7, pc}

08017ff8 <xTaskCreateStatic>:
 8017ff8:	b580      	push	{r7, lr}
 8017ffa:	b08e      	sub	sp, #56	@ 0x38
 8017ffc:	af04      	add	r7, sp, #16
 8017ffe:	60f8      	str	r0, [r7, #12]
 8018000:	60b9      	str	r1, [r7, #8]
 8018002:	607a      	str	r2, [r7, #4]
 8018004:	603b      	str	r3, [r7, #0]
 8018006:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8018008:	2b00      	cmp	r3, #0
 801800a:	d10b      	bne.n	8018024 <xTaskCreateStatic+0x2c>
 801800c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018010:	f383 8811 	msr	BASEPRI, r3
 8018014:	f3bf 8f6f 	isb	sy
 8018018:	f3bf 8f4f 	dsb	sy
 801801c:	623b      	str	r3, [r7, #32]
 801801e:	bf00      	nop
 8018020:	bf00      	nop
 8018022:	e7fd      	b.n	8018020 <xTaskCreateStatic+0x28>
 8018024:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8018026:	2b00      	cmp	r3, #0
 8018028:	d10b      	bne.n	8018042 <xTaskCreateStatic+0x4a>
 801802a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801802e:	f383 8811 	msr	BASEPRI, r3
 8018032:	f3bf 8f6f 	isb	sy
 8018036:	f3bf 8f4f 	dsb	sy
 801803a:	61fb      	str	r3, [r7, #28]
 801803c:	bf00      	nop
 801803e:	bf00      	nop
 8018040:	e7fd      	b.n	801803e <xTaskCreateStatic+0x46>
 8018042:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8018046:	613b      	str	r3, [r7, #16]
 8018048:	693b      	ldr	r3, [r7, #16]
 801804a:	f5b3 7fc0 	cmp.w	r3, #384	@ 0x180
 801804e:	d00b      	beq.n	8018068 <xTaskCreateStatic+0x70>
 8018050:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018054:	f383 8811 	msr	BASEPRI, r3
 8018058:	f3bf 8f6f 	isb	sy
 801805c:	f3bf 8f4f 	dsb	sy
 8018060:	61bb      	str	r3, [r7, #24]
 8018062:	bf00      	nop
 8018064:	bf00      	nop
 8018066:	e7fd      	b.n	8018064 <xTaskCreateStatic+0x6c>
 8018068:	693b      	ldr	r3, [r7, #16]
 801806a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801806c:	2b00      	cmp	r3, #0
 801806e:	d01e      	beq.n	80180ae <xTaskCreateStatic+0xb6>
 8018070:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8018072:	2b00      	cmp	r3, #0
 8018074:	d01b      	beq.n	80180ae <xTaskCreateStatic+0xb6>
 8018076:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8018078:	627b      	str	r3, [r7, #36]	@ 0x24
 801807a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801807c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 801807e:	631a      	str	r2, [r3, #48]	@ 0x30
 8018080:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8018082:	2202      	movs	r2, #2
 8018084:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 8018088:	2300      	movs	r3, #0
 801808a:	9303      	str	r3, [sp, #12]
 801808c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801808e:	9302      	str	r3, [sp, #8]
 8018090:	f107 0314 	add.w	r3, r7, #20
 8018094:	9301      	str	r3, [sp, #4]
 8018096:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018098:	9300      	str	r3, [sp, #0]
 801809a:	683b      	ldr	r3, [r7, #0]
 801809c:	687a      	ldr	r2, [r7, #4]
 801809e:	68b9      	ldr	r1, [r7, #8]
 80180a0:	68f8      	ldr	r0, [r7, #12]
 80180a2:	f000 f851 	bl	8018148 <prvInitialiseNewTask>
 80180a6:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 80180a8:	f000 f922 	bl	80182f0 <prvAddNewTaskToReadyList>
 80180ac:	e001      	b.n	80180b2 <xTaskCreateStatic+0xba>
 80180ae:	2300      	movs	r3, #0
 80180b0:	617b      	str	r3, [r7, #20]
 80180b2:	697b      	ldr	r3, [r7, #20]
 80180b4:	4618      	mov	r0, r3
 80180b6:	3728      	adds	r7, #40	@ 0x28
 80180b8:	46bd      	mov	sp, r7
 80180ba:	bd80      	pop	{r7, pc}

080180bc <xTaskCreate>:
 80180bc:	b580      	push	{r7, lr}
 80180be:	b08c      	sub	sp, #48	@ 0x30
 80180c0:	af04      	add	r7, sp, #16
 80180c2:	60f8      	str	r0, [r7, #12]
 80180c4:	60b9      	str	r1, [r7, #8]
 80180c6:	603b      	str	r3, [r7, #0]
 80180c8:	4613      	mov	r3, r2
 80180ca:	80fb      	strh	r3, [r7, #6]
 80180cc:	88fb      	ldrh	r3, [r7, #6]
 80180ce:	009b      	lsls	r3, r3, #2
 80180d0:	4618      	mov	r0, r3
 80180d2:	f001 fee3 	bl	8019e9c <pvPortMalloc>
 80180d6:	6178      	str	r0, [r7, #20]
 80180d8:	697b      	ldr	r3, [r7, #20]
 80180da:	2b00      	cmp	r3, #0
 80180dc:	d00f      	beq.n	80180fe <xTaskCreate+0x42>
 80180de:	f44f 70c0 	mov.w	r0, #384	@ 0x180
 80180e2:	f001 fedb 	bl	8019e9c <pvPortMalloc>
 80180e6:	61f8      	str	r0, [r7, #28]
 80180e8:	69fb      	ldr	r3, [r7, #28]
 80180ea:	2b00      	cmp	r3, #0
 80180ec:	d003      	beq.n	80180f6 <xTaskCreate+0x3a>
 80180ee:	69fb      	ldr	r3, [r7, #28]
 80180f0:	697a      	ldr	r2, [r7, #20]
 80180f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80180f4:	e005      	b.n	8018102 <xTaskCreate+0x46>
 80180f6:	6978      	ldr	r0, [r7, #20]
 80180f8:	f001 ff9e 	bl	801a038 <vPortFree>
 80180fc:	e001      	b.n	8018102 <xTaskCreate+0x46>
 80180fe:	2300      	movs	r3, #0
 8018100:	61fb      	str	r3, [r7, #28]
 8018102:	69fb      	ldr	r3, [r7, #28]
 8018104:	2b00      	cmp	r3, #0
 8018106:	d017      	beq.n	8018138 <xTaskCreate+0x7c>
 8018108:	69fb      	ldr	r3, [r7, #28]
 801810a:	2200      	movs	r2, #0
 801810c:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 8018110:	88fa      	ldrh	r2, [r7, #6]
 8018112:	2300      	movs	r3, #0
 8018114:	9303      	str	r3, [sp, #12]
 8018116:	69fb      	ldr	r3, [r7, #28]
 8018118:	9302      	str	r3, [sp, #8]
 801811a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801811c:	9301      	str	r3, [sp, #4]
 801811e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8018120:	9300      	str	r3, [sp, #0]
 8018122:	683b      	ldr	r3, [r7, #0]
 8018124:	68b9      	ldr	r1, [r7, #8]
 8018126:	68f8      	ldr	r0, [r7, #12]
 8018128:	f000 f80e 	bl	8018148 <prvInitialiseNewTask>
 801812c:	69f8      	ldr	r0, [r7, #28]
 801812e:	f000 f8df 	bl	80182f0 <prvAddNewTaskToReadyList>
 8018132:	2301      	movs	r3, #1
 8018134:	61bb      	str	r3, [r7, #24]
 8018136:	e002      	b.n	801813e <xTaskCreate+0x82>
 8018138:	f04f 33ff 	mov.w	r3, #4294967295
 801813c:	61bb      	str	r3, [r7, #24]
 801813e:	69bb      	ldr	r3, [r7, #24]
 8018140:	4618      	mov	r0, r3
 8018142:	3720      	adds	r7, #32
 8018144:	46bd      	mov	sp, r7
 8018146:	bd80      	pop	{r7, pc}

08018148 <prvInitialiseNewTask>:
 8018148:	b580      	push	{r7, lr}
 801814a:	b088      	sub	sp, #32
 801814c:	af00      	add	r7, sp, #0
 801814e:	60f8      	str	r0, [r7, #12]
 8018150:	60b9      	str	r1, [r7, #8]
 8018152:	607a      	str	r2, [r7, #4]
 8018154:	603b      	str	r3, [r7, #0]
 8018156:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018158:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 801815a:	687b      	ldr	r3, [r7, #4]
 801815c:	009b      	lsls	r3, r3, #2
 801815e:	461a      	mov	r2, r3
 8018160:	21a5      	movs	r1, #165	@ 0xa5
 8018162:	f002 fefe 	bl	801af62 <memset>
 8018166:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018168:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 801816a:	687b      	ldr	r3, [r7, #4]
 801816c:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8018170:	3b01      	subs	r3, #1
 8018172:	009b      	lsls	r3, r3, #2
 8018174:	4413      	add	r3, r2
 8018176:	61bb      	str	r3, [r7, #24]
 8018178:	69bb      	ldr	r3, [r7, #24]
 801817a:	f023 0307 	bic.w	r3, r3, #7
 801817e:	61bb      	str	r3, [r7, #24]
 8018180:	69bb      	ldr	r3, [r7, #24]
 8018182:	f003 0307 	and.w	r3, r3, #7
 8018186:	2b00      	cmp	r3, #0
 8018188:	d00b      	beq.n	80181a2 <prvInitialiseNewTask+0x5a>
 801818a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801818e:	f383 8811 	msr	BASEPRI, r3
 8018192:	f3bf 8f6f 	isb	sy
 8018196:	f3bf 8f4f 	dsb	sy
 801819a:	617b      	str	r3, [r7, #20]
 801819c:	bf00      	nop
 801819e:	bf00      	nop
 80181a0:	e7fd      	b.n	801819e <prvInitialiseNewTask+0x56>
 80181a2:	68bb      	ldr	r3, [r7, #8]
 80181a4:	2b00      	cmp	r3, #0
 80181a6:	d01f      	beq.n	80181e8 <prvInitialiseNewTask+0xa0>
 80181a8:	2300      	movs	r3, #0
 80181aa:	61fb      	str	r3, [r7, #28]
 80181ac:	e012      	b.n	80181d4 <prvInitialiseNewTask+0x8c>
 80181ae:	68ba      	ldr	r2, [r7, #8]
 80181b0:	69fb      	ldr	r3, [r7, #28]
 80181b2:	4413      	add	r3, r2
 80181b4:	7819      	ldrb	r1, [r3, #0]
 80181b6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80181b8:	69fb      	ldr	r3, [r7, #28]
 80181ba:	4413      	add	r3, r2
 80181bc:	3334      	adds	r3, #52	@ 0x34
 80181be:	460a      	mov	r2, r1
 80181c0:	701a      	strb	r2, [r3, #0]
 80181c2:	68ba      	ldr	r2, [r7, #8]
 80181c4:	69fb      	ldr	r3, [r7, #28]
 80181c6:	4413      	add	r3, r2
 80181c8:	781b      	ldrb	r3, [r3, #0]
 80181ca:	2b00      	cmp	r3, #0
 80181cc:	d006      	beq.n	80181dc <prvInitialiseNewTask+0x94>
 80181ce:	69fb      	ldr	r3, [r7, #28]
 80181d0:	3301      	adds	r3, #1
 80181d2:	61fb      	str	r3, [r7, #28]
 80181d4:	69fb      	ldr	r3, [r7, #28]
 80181d6:	2b0f      	cmp	r3, #15
 80181d8:	d9e9      	bls.n	80181ae <prvInitialiseNewTask+0x66>
 80181da:	e000      	b.n	80181de <prvInitialiseNewTask+0x96>
 80181dc:	bf00      	nop
 80181de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181e0:	2200      	movs	r2, #0
 80181e2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80181e6:	e003      	b.n	80181f0 <prvInitialiseNewTask+0xa8>
 80181e8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181ea:	2200      	movs	r2, #0
 80181ec:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80181f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80181f2:	2b0e      	cmp	r3, #14
 80181f4:	d901      	bls.n	80181fa <prvInitialiseNewTask+0xb2>
 80181f6:	230e      	movs	r3, #14
 80181f8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80181fa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181fc:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80181fe:	62da      	str	r2, [r3, #44]	@ 0x2c
 8018200:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018202:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8018204:	64da      	str	r2, [r3, #76]	@ 0x4c
 8018206:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018208:	2200      	movs	r2, #0
 801820a:	651a      	str	r2, [r3, #80]	@ 0x50
 801820c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801820e:	3304      	adds	r3, #4
 8018210:	4618      	mov	r0, r3
 8018212:	f7ff f897 	bl	8017344 <vListInitialiseItem>
 8018216:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018218:	3318      	adds	r3, #24
 801821a:	4618      	mov	r0, r3
 801821c:	f7ff f892 	bl	8017344 <vListInitialiseItem>
 8018220:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018222:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8018224:	611a      	str	r2, [r3, #16]
 8018226:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8018228:	f1c3 020f 	rsb	r2, r3, #15
 801822c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801822e:	619a      	str	r2, [r3, #24]
 8018230:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018232:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8018234:	625a      	str	r2, [r3, #36]	@ 0x24
 8018236:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018238:	2200      	movs	r2, #0
 801823a:	655a      	str	r2, [r3, #84]	@ 0x54
 801823c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801823e:	2200      	movs	r2, #0
 8018240:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8018244:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018246:	2200      	movs	r2, #0
 8018248:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 801824c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801824e:	3358      	adds	r3, #88	@ 0x58
 8018250:	f44f 7290 	mov.w	r2, #288	@ 0x120
 8018254:	2100      	movs	r1, #0
 8018256:	4618      	mov	r0, r3
 8018258:	f002 fe83 	bl	801af62 <memset>
 801825c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801825e:	4a21      	ldr	r2, [pc, #132]	@ (80182e4 <prvInitialiseNewTask+0x19c>)
 8018260:	65da      	str	r2, [r3, #92]	@ 0x5c
 8018262:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018264:	4a20      	ldr	r2, [pc, #128]	@ (80182e8 <prvInitialiseNewTask+0x1a0>)
 8018266:	661a      	str	r2, [r3, #96]	@ 0x60
 8018268:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801826a:	4a20      	ldr	r2, [pc, #128]	@ (80182ec <prvInitialiseNewTask+0x1a4>)
 801826c:	665a      	str	r2, [r3, #100]	@ 0x64
 801826e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8018270:	f04f 0201 	mov.w	r2, #1
 8018274:	f04f 0300 	mov.w	r3, #0
 8018278:	e9c1 233c 	strd	r2, r3, [r1, #240]	@ 0xf0
 801827c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801827e:	f243 320e 	movw	r2, #13070	@ 0x330e
 8018282:	f8a3 20f8 	strh.w	r2, [r3, #248]	@ 0xf8
 8018286:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018288:	f64a 32cd 	movw	r2, #43981	@ 0xabcd
 801828c:	f8a3 20fa 	strh.w	r2, [r3, #250]	@ 0xfa
 8018290:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018292:	f241 2234 	movw	r2, #4660	@ 0x1234
 8018296:	f8a3 20fc 	strh.w	r2, [r3, #252]	@ 0xfc
 801829a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801829c:	f24e 626d 	movw	r2, #58989	@ 0xe66d
 80182a0:	f8a3 20fe 	strh.w	r2, [r3, #254]	@ 0xfe
 80182a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80182a6:	f64d 62ec 	movw	r2, #57068	@ 0xdeec
 80182aa:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 80182ae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80182b0:	2205      	movs	r2, #5
 80182b2:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 80182b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80182b8:	220b      	movs	r2, #11
 80182ba:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
 80182be:	683a      	ldr	r2, [r7, #0]
 80182c0:	68f9      	ldr	r1, [r7, #12]
 80182c2:	69b8      	ldr	r0, [r7, #24]
 80182c4:	f001 fb94 	bl	80199f0 <pxPortInitialiseStack>
 80182c8:	4602      	mov	r2, r0
 80182ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80182cc:	601a      	str	r2, [r3, #0]
 80182ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80182d0:	2b00      	cmp	r3, #0
 80182d2:	d002      	beq.n	80182da <prvInitialiseNewTask+0x192>
 80182d4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80182d6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80182d8:	601a      	str	r2, [r3, #0]
 80182da:	bf00      	nop
 80182dc:	3720      	adds	r7, #32
 80182de:	46bd      	mov	sp, r7
 80182e0:	bd80      	pop	{r7, pc}
 80182e2:	bf00      	nop
 80182e4:	2000cf88 	.word	0x2000cf88
 80182e8:	2000cff0 	.word	0x2000cff0
 80182ec:	2000d058 	.word	0x2000d058

080182f0 <prvAddNewTaskToReadyList>:
 80182f0:	b580      	push	{r7, lr}
 80182f2:	b082      	sub	sp, #8
 80182f4:	af00      	add	r7, sp, #0
 80182f6:	6078      	str	r0, [r7, #4]
 80182f8:	f001 fcae 	bl	8019c58 <vPortEnterCritical>
 80182fc:	4b2c      	ldr	r3, [pc, #176]	@ (80183b0 <prvAddNewTaskToReadyList+0xc0>)
 80182fe:	681b      	ldr	r3, [r3, #0]
 8018300:	3301      	adds	r3, #1
 8018302:	4a2b      	ldr	r2, [pc, #172]	@ (80183b0 <prvAddNewTaskToReadyList+0xc0>)
 8018304:	6013      	str	r3, [r2, #0]
 8018306:	4b2b      	ldr	r3, [pc, #172]	@ (80183b4 <prvAddNewTaskToReadyList+0xc4>)
 8018308:	681b      	ldr	r3, [r3, #0]
 801830a:	2b00      	cmp	r3, #0
 801830c:	d109      	bne.n	8018322 <prvAddNewTaskToReadyList+0x32>
 801830e:	4a29      	ldr	r2, [pc, #164]	@ (80183b4 <prvAddNewTaskToReadyList+0xc4>)
 8018310:	687b      	ldr	r3, [r7, #4]
 8018312:	6013      	str	r3, [r2, #0]
 8018314:	4b26      	ldr	r3, [pc, #152]	@ (80183b0 <prvAddNewTaskToReadyList+0xc0>)
 8018316:	681b      	ldr	r3, [r3, #0]
 8018318:	2b01      	cmp	r3, #1
 801831a:	d110      	bne.n	801833e <prvAddNewTaskToReadyList+0x4e>
 801831c:	f000 fd3c 	bl	8018d98 <prvInitialiseTaskLists>
 8018320:	e00d      	b.n	801833e <prvAddNewTaskToReadyList+0x4e>
 8018322:	4b25      	ldr	r3, [pc, #148]	@ (80183b8 <prvAddNewTaskToReadyList+0xc8>)
 8018324:	681b      	ldr	r3, [r3, #0]
 8018326:	2b00      	cmp	r3, #0
 8018328:	d109      	bne.n	801833e <prvAddNewTaskToReadyList+0x4e>
 801832a:	4b22      	ldr	r3, [pc, #136]	@ (80183b4 <prvAddNewTaskToReadyList+0xc4>)
 801832c:	681b      	ldr	r3, [r3, #0]
 801832e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018330:	687b      	ldr	r3, [r7, #4]
 8018332:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018334:	429a      	cmp	r2, r3
 8018336:	d802      	bhi.n	801833e <prvAddNewTaskToReadyList+0x4e>
 8018338:	4a1e      	ldr	r2, [pc, #120]	@ (80183b4 <prvAddNewTaskToReadyList+0xc4>)
 801833a:	687b      	ldr	r3, [r7, #4]
 801833c:	6013      	str	r3, [r2, #0]
 801833e:	4b1f      	ldr	r3, [pc, #124]	@ (80183bc <prvAddNewTaskToReadyList+0xcc>)
 8018340:	681b      	ldr	r3, [r3, #0]
 8018342:	3301      	adds	r3, #1
 8018344:	4a1d      	ldr	r2, [pc, #116]	@ (80183bc <prvAddNewTaskToReadyList+0xcc>)
 8018346:	6013      	str	r3, [r2, #0]
 8018348:	4b1c      	ldr	r3, [pc, #112]	@ (80183bc <prvAddNewTaskToReadyList+0xcc>)
 801834a:	681a      	ldr	r2, [r3, #0]
 801834c:	687b      	ldr	r3, [r7, #4]
 801834e:	645a      	str	r2, [r3, #68]	@ 0x44
 8018350:	687b      	ldr	r3, [r7, #4]
 8018352:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018354:	2201      	movs	r2, #1
 8018356:	409a      	lsls	r2, r3
 8018358:	4b19      	ldr	r3, [pc, #100]	@ (80183c0 <prvAddNewTaskToReadyList+0xd0>)
 801835a:	681b      	ldr	r3, [r3, #0]
 801835c:	4313      	orrs	r3, r2
 801835e:	4a18      	ldr	r2, [pc, #96]	@ (80183c0 <prvAddNewTaskToReadyList+0xd0>)
 8018360:	6013      	str	r3, [r2, #0]
 8018362:	687b      	ldr	r3, [r7, #4]
 8018364:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018366:	4613      	mov	r3, r2
 8018368:	009b      	lsls	r3, r3, #2
 801836a:	4413      	add	r3, r2
 801836c:	009b      	lsls	r3, r3, #2
 801836e:	4a15      	ldr	r2, [pc, #84]	@ (80183c4 <prvAddNewTaskToReadyList+0xd4>)
 8018370:	441a      	add	r2, r3
 8018372:	687b      	ldr	r3, [r7, #4]
 8018374:	3304      	adds	r3, #4
 8018376:	4619      	mov	r1, r3
 8018378:	4610      	mov	r0, r2
 801837a:	f7fe fff0 	bl	801735e <vListInsertEnd>
 801837e:	f001 fc9d 	bl	8019cbc <vPortExitCritical>
 8018382:	4b0d      	ldr	r3, [pc, #52]	@ (80183b8 <prvAddNewTaskToReadyList+0xc8>)
 8018384:	681b      	ldr	r3, [r3, #0]
 8018386:	2b00      	cmp	r3, #0
 8018388:	d00e      	beq.n	80183a8 <prvAddNewTaskToReadyList+0xb8>
 801838a:	4b0a      	ldr	r3, [pc, #40]	@ (80183b4 <prvAddNewTaskToReadyList+0xc4>)
 801838c:	681b      	ldr	r3, [r3, #0]
 801838e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018390:	687b      	ldr	r3, [r7, #4]
 8018392:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018394:	429a      	cmp	r2, r3
 8018396:	d207      	bcs.n	80183a8 <prvAddNewTaskToReadyList+0xb8>
 8018398:	4b0b      	ldr	r3, [pc, #44]	@ (80183c8 <prvAddNewTaskToReadyList+0xd8>)
 801839a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801839e:	601a      	str	r2, [r3, #0]
 80183a0:	f3bf 8f4f 	dsb	sy
 80183a4:	f3bf 8f6f 	isb	sy
 80183a8:	bf00      	nop
 80183aa:	3708      	adds	r7, #8
 80183ac:	46bd      	mov	sp, r7
 80183ae:	bd80      	pop	{r7, pc}
 80183b0:	20003cc0 	.word	0x20003cc0
 80183b4:	20003b20 	.word	0x20003b20
 80183b8:	20003ccc 	.word	0x20003ccc
 80183bc:	20003cdc 	.word	0x20003cdc
 80183c0:	20003cc8 	.word	0x20003cc8
 80183c4:	20003b24 	.word	0x20003b24
 80183c8:	e000ed04 	.word	0xe000ed04

080183cc <vTaskDelayUntil>:
 80183cc:	b580      	push	{r7, lr}
 80183ce:	b08a      	sub	sp, #40	@ 0x28
 80183d0:	af00      	add	r7, sp, #0
 80183d2:	6078      	str	r0, [r7, #4]
 80183d4:	6039      	str	r1, [r7, #0]
 80183d6:	2300      	movs	r3, #0
 80183d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80183da:	687b      	ldr	r3, [r7, #4]
 80183dc:	2b00      	cmp	r3, #0
 80183de:	d10b      	bne.n	80183f8 <vTaskDelayUntil+0x2c>
 80183e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80183e4:	f383 8811 	msr	BASEPRI, r3
 80183e8:	f3bf 8f6f 	isb	sy
 80183ec:	f3bf 8f4f 	dsb	sy
 80183f0:	617b      	str	r3, [r7, #20]
 80183f2:	bf00      	nop
 80183f4:	bf00      	nop
 80183f6:	e7fd      	b.n	80183f4 <vTaskDelayUntil+0x28>
 80183f8:	683b      	ldr	r3, [r7, #0]
 80183fa:	2b00      	cmp	r3, #0
 80183fc:	d10b      	bne.n	8018416 <vTaskDelayUntil+0x4a>
 80183fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018402:	f383 8811 	msr	BASEPRI, r3
 8018406:	f3bf 8f6f 	isb	sy
 801840a:	f3bf 8f4f 	dsb	sy
 801840e:	613b      	str	r3, [r7, #16]
 8018410:	bf00      	nop
 8018412:	bf00      	nop
 8018414:	e7fd      	b.n	8018412 <vTaskDelayUntil+0x46>
 8018416:	4b2a      	ldr	r3, [pc, #168]	@ (80184c0 <vTaskDelayUntil+0xf4>)
 8018418:	681b      	ldr	r3, [r3, #0]
 801841a:	2b00      	cmp	r3, #0
 801841c:	d00b      	beq.n	8018436 <vTaskDelayUntil+0x6a>
 801841e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018422:	f383 8811 	msr	BASEPRI, r3
 8018426:	f3bf 8f6f 	isb	sy
 801842a:	f3bf 8f4f 	dsb	sy
 801842e:	60fb      	str	r3, [r7, #12]
 8018430:	bf00      	nop
 8018432:	bf00      	nop
 8018434:	e7fd      	b.n	8018432 <vTaskDelayUntil+0x66>
 8018436:	f000 f8f1 	bl	801861c <vTaskSuspendAll>
 801843a:	4b22      	ldr	r3, [pc, #136]	@ (80184c4 <vTaskDelayUntil+0xf8>)
 801843c:	681b      	ldr	r3, [r3, #0]
 801843e:	623b      	str	r3, [r7, #32]
 8018440:	687b      	ldr	r3, [r7, #4]
 8018442:	681b      	ldr	r3, [r3, #0]
 8018444:	683a      	ldr	r2, [r7, #0]
 8018446:	4413      	add	r3, r2
 8018448:	61fb      	str	r3, [r7, #28]
 801844a:	687b      	ldr	r3, [r7, #4]
 801844c:	681b      	ldr	r3, [r3, #0]
 801844e:	6a3a      	ldr	r2, [r7, #32]
 8018450:	429a      	cmp	r2, r3
 8018452:	d20b      	bcs.n	801846c <vTaskDelayUntil+0xa0>
 8018454:	687b      	ldr	r3, [r7, #4]
 8018456:	681b      	ldr	r3, [r3, #0]
 8018458:	69fa      	ldr	r2, [r7, #28]
 801845a:	429a      	cmp	r2, r3
 801845c:	d211      	bcs.n	8018482 <vTaskDelayUntil+0xb6>
 801845e:	69fa      	ldr	r2, [r7, #28]
 8018460:	6a3b      	ldr	r3, [r7, #32]
 8018462:	429a      	cmp	r2, r3
 8018464:	d90d      	bls.n	8018482 <vTaskDelayUntil+0xb6>
 8018466:	2301      	movs	r3, #1
 8018468:	627b      	str	r3, [r7, #36]	@ 0x24
 801846a:	e00a      	b.n	8018482 <vTaskDelayUntil+0xb6>
 801846c:	687b      	ldr	r3, [r7, #4]
 801846e:	681b      	ldr	r3, [r3, #0]
 8018470:	69fa      	ldr	r2, [r7, #28]
 8018472:	429a      	cmp	r2, r3
 8018474:	d303      	bcc.n	801847e <vTaskDelayUntil+0xb2>
 8018476:	69fa      	ldr	r2, [r7, #28]
 8018478:	6a3b      	ldr	r3, [r7, #32]
 801847a:	429a      	cmp	r2, r3
 801847c:	d901      	bls.n	8018482 <vTaskDelayUntil+0xb6>
 801847e:	2301      	movs	r3, #1
 8018480:	627b      	str	r3, [r7, #36]	@ 0x24
 8018482:	687b      	ldr	r3, [r7, #4]
 8018484:	69fa      	ldr	r2, [r7, #28]
 8018486:	601a      	str	r2, [r3, #0]
 8018488:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801848a:	2b00      	cmp	r3, #0
 801848c:	d006      	beq.n	801849c <vTaskDelayUntil+0xd0>
 801848e:	69fa      	ldr	r2, [r7, #28]
 8018490:	6a3b      	ldr	r3, [r7, #32]
 8018492:	1ad3      	subs	r3, r2, r3
 8018494:	2100      	movs	r1, #0
 8018496:	4618      	mov	r0, r3
 8018498:	f000 feca 	bl	8019230 <prvAddCurrentTaskToDelayedList>
 801849c:	f000 f8cc 	bl	8018638 <xTaskResumeAll>
 80184a0:	61b8      	str	r0, [r7, #24]
 80184a2:	69bb      	ldr	r3, [r7, #24]
 80184a4:	2b00      	cmp	r3, #0
 80184a6:	d107      	bne.n	80184b8 <vTaskDelayUntil+0xec>
 80184a8:	4b07      	ldr	r3, [pc, #28]	@ (80184c8 <vTaskDelayUntil+0xfc>)
 80184aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80184ae:	601a      	str	r2, [r3, #0]
 80184b0:	f3bf 8f4f 	dsb	sy
 80184b4:	f3bf 8f6f 	isb	sy
 80184b8:	bf00      	nop
 80184ba:	3728      	adds	r7, #40	@ 0x28
 80184bc:	46bd      	mov	sp, r7
 80184be:	bd80      	pop	{r7, pc}
 80184c0:	20003ce8 	.word	0x20003ce8
 80184c4:	20003cc4 	.word	0x20003cc4
 80184c8:	e000ed04 	.word	0xe000ed04

080184cc <vTaskDelay>:
 80184cc:	b580      	push	{r7, lr}
 80184ce:	b084      	sub	sp, #16
 80184d0:	af00      	add	r7, sp, #0
 80184d2:	6078      	str	r0, [r7, #4]
 80184d4:	2300      	movs	r3, #0
 80184d6:	60fb      	str	r3, [r7, #12]
 80184d8:	687b      	ldr	r3, [r7, #4]
 80184da:	2b00      	cmp	r3, #0
 80184dc:	d018      	beq.n	8018510 <vTaskDelay+0x44>
 80184de:	4b14      	ldr	r3, [pc, #80]	@ (8018530 <vTaskDelay+0x64>)
 80184e0:	681b      	ldr	r3, [r3, #0]
 80184e2:	2b00      	cmp	r3, #0
 80184e4:	d00b      	beq.n	80184fe <vTaskDelay+0x32>
 80184e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80184ea:	f383 8811 	msr	BASEPRI, r3
 80184ee:	f3bf 8f6f 	isb	sy
 80184f2:	f3bf 8f4f 	dsb	sy
 80184f6:	60bb      	str	r3, [r7, #8]
 80184f8:	bf00      	nop
 80184fa:	bf00      	nop
 80184fc:	e7fd      	b.n	80184fa <vTaskDelay+0x2e>
 80184fe:	f000 f88d 	bl	801861c <vTaskSuspendAll>
 8018502:	2100      	movs	r1, #0
 8018504:	6878      	ldr	r0, [r7, #4]
 8018506:	f000 fe93 	bl	8019230 <prvAddCurrentTaskToDelayedList>
 801850a:	f000 f895 	bl	8018638 <xTaskResumeAll>
 801850e:	60f8      	str	r0, [r7, #12]
 8018510:	68fb      	ldr	r3, [r7, #12]
 8018512:	2b00      	cmp	r3, #0
 8018514:	d107      	bne.n	8018526 <vTaskDelay+0x5a>
 8018516:	4b07      	ldr	r3, [pc, #28]	@ (8018534 <vTaskDelay+0x68>)
 8018518:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801851c:	601a      	str	r2, [r3, #0]
 801851e:	f3bf 8f4f 	dsb	sy
 8018522:	f3bf 8f6f 	isb	sy
 8018526:	bf00      	nop
 8018528:	3710      	adds	r7, #16
 801852a:	46bd      	mov	sp, r7
 801852c:	bd80      	pop	{r7, pc}
 801852e:	bf00      	nop
 8018530:	20003ce8 	.word	0x20003ce8
 8018534:	e000ed04 	.word	0xe000ed04

08018538 <vTaskStartScheduler>:
 8018538:	b580      	push	{r7, lr}
 801853a:	b08a      	sub	sp, #40	@ 0x28
 801853c:	af04      	add	r7, sp, #16
 801853e:	2300      	movs	r3, #0
 8018540:	60bb      	str	r3, [r7, #8]
 8018542:	2300      	movs	r3, #0
 8018544:	607b      	str	r3, [r7, #4]
 8018546:	463a      	mov	r2, r7
 8018548:	1d39      	adds	r1, r7, #4
 801854a:	f107 0308 	add.w	r3, r7, #8
 801854e:	4618      	mov	r0, r3
 8018550:	f7ea fe12 	bl	8003178 <vApplicationGetIdleTaskMemory>
 8018554:	6839      	ldr	r1, [r7, #0]
 8018556:	687b      	ldr	r3, [r7, #4]
 8018558:	68ba      	ldr	r2, [r7, #8]
 801855a:	9202      	str	r2, [sp, #8]
 801855c:	9301      	str	r3, [sp, #4]
 801855e:	2300      	movs	r3, #0
 8018560:	9300      	str	r3, [sp, #0]
 8018562:	2300      	movs	r3, #0
 8018564:	460a      	mov	r2, r1
 8018566:	4925      	ldr	r1, [pc, #148]	@ (80185fc <vTaskStartScheduler+0xc4>)
 8018568:	4825      	ldr	r0, [pc, #148]	@ (8018600 <vTaskStartScheduler+0xc8>)
 801856a:	f7ff fd45 	bl	8017ff8 <xTaskCreateStatic>
 801856e:	4603      	mov	r3, r0
 8018570:	4a24      	ldr	r2, [pc, #144]	@ (8018604 <vTaskStartScheduler+0xcc>)
 8018572:	6013      	str	r3, [r2, #0]
 8018574:	4b23      	ldr	r3, [pc, #140]	@ (8018604 <vTaskStartScheduler+0xcc>)
 8018576:	681b      	ldr	r3, [r3, #0]
 8018578:	2b00      	cmp	r3, #0
 801857a:	d002      	beq.n	8018582 <vTaskStartScheduler+0x4a>
 801857c:	2301      	movs	r3, #1
 801857e:	617b      	str	r3, [r7, #20]
 8018580:	e001      	b.n	8018586 <vTaskStartScheduler+0x4e>
 8018582:	2300      	movs	r3, #0
 8018584:	617b      	str	r3, [r7, #20]
 8018586:	697b      	ldr	r3, [r7, #20]
 8018588:	2b01      	cmp	r3, #1
 801858a:	d102      	bne.n	8018592 <vTaskStartScheduler+0x5a>
 801858c:	f000 feb6 	bl	80192fc <xTimerCreateTimerTask>
 8018590:	6178      	str	r0, [r7, #20]
 8018592:	697b      	ldr	r3, [r7, #20]
 8018594:	2b01      	cmp	r3, #1
 8018596:	d11d      	bne.n	80185d4 <vTaskStartScheduler+0x9c>
 8018598:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801859c:	f383 8811 	msr	BASEPRI, r3
 80185a0:	f3bf 8f6f 	isb	sy
 80185a4:	f3bf 8f4f 	dsb	sy
 80185a8:	613b      	str	r3, [r7, #16]
 80185aa:	bf00      	nop
 80185ac:	4b16      	ldr	r3, [pc, #88]	@ (8018608 <vTaskStartScheduler+0xd0>)
 80185ae:	681b      	ldr	r3, [r3, #0]
 80185b0:	3358      	adds	r3, #88	@ 0x58
 80185b2:	4a16      	ldr	r2, [pc, #88]	@ (801860c <vTaskStartScheduler+0xd4>)
 80185b4:	6013      	str	r3, [r2, #0]
 80185b6:	4b16      	ldr	r3, [pc, #88]	@ (8018610 <vTaskStartScheduler+0xd8>)
 80185b8:	f04f 32ff 	mov.w	r2, #4294967295
 80185bc:	601a      	str	r2, [r3, #0]
 80185be:	4b15      	ldr	r3, [pc, #84]	@ (8018614 <vTaskStartScheduler+0xdc>)
 80185c0:	2201      	movs	r2, #1
 80185c2:	601a      	str	r2, [r3, #0]
 80185c4:	4b14      	ldr	r3, [pc, #80]	@ (8018618 <vTaskStartScheduler+0xe0>)
 80185c6:	2200      	movs	r2, #0
 80185c8:	601a      	str	r2, [r3, #0]
 80185ca:	f7ea fdbb 	bl	8003144 <configureTimerForRunTimeStats>
 80185ce:	f001 fa9f 	bl	8019b10 <xPortStartScheduler>
 80185d2:	e00f      	b.n	80185f4 <vTaskStartScheduler+0xbc>
 80185d4:	697b      	ldr	r3, [r7, #20]
 80185d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80185da:	d10b      	bne.n	80185f4 <vTaskStartScheduler+0xbc>
 80185dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80185e0:	f383 8811 	msr	BASEPRI, r3
 80185e4:	f3bf 8f6f 	isb	sy
 80185e8:	f3bf 8f4f 	dsb	sy
 80185ec:	60fb      	str	r3, [r7, #12]
 80185ee:	bf00      	nop
 80185f0:	bf00      	nop
 80185f2:	e7fd      	b.n	80185f0 <vTaskStartScheduler+0xb8>
 80185f4:	bf00      	nop
 80185f6:	3718      	adds	r7, #24
 80185f8:	46bd      	mov	sp, r7
 80185fa:	bd80      	pop	{r7, pc}
 80185fc:	0802108c 	.word	0x0802108c
 8018600:	08018d69 	.word	0x08018d69
 8018604:	20003ce4 	.word	0x20003ce4
 8018608:	20003b20 	.word	0x20003b20
 801860c:	20000120 	.word	0x20000120
 8018610:	20003ce0 	.word	0x20003ce0
 8018614:	20003ccc 	.word	0x20003ccc
 8018618:	20003cc4 	.word	0x20003cc4

0801861c <vTaskSuspendAll>:
 801861c:	b480      	push	{r7}
 801861e:	af00      	add	r7, sp, #0
 8018620:	4b04      	ldr	r3, [pc, #16]	@ (8018634 <vTaskSuspendAll+0x18>)
 8018622:	681b      	ldr	r3, [r3, #0]
 8018624:	3301      	adds	r3, #1
 8018626:	4a03      	ldr	r2, [pc, #12]	@ (8018634 <vTaskSuspendAll+0x18>)
 8018628:	6013      	str	r3, [r2, #0]
 801862a:	bf00      	nop
 801862c:	46bd      	mov	sp, r7
 801862e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018632:	4770      	bx	lr
 8018634:	20003ce8 	.word	0x20003ce8

08018638 <xTaskResumeAll>:
 8018638:	b580      	push	{r7, lr}
 801863a:	b084      	sub	sp, #16
 801863c:	af00      	add	r7, sp, #0
 801863e:	2300      	movs	r3, #0
 8018640:	60fb      	str	r3, [r7, #12]
 8018642:	2300      	movs	r3, #0
 8018644:	60bb      	str	r3, [r7, #8]
 8018646:	4b42      	ldr	r3, [pc, #264]	@ (8018750 <xTaskResumeAll+0x118>)
 8018648:	681b      	ldr	r3, [r3, #0]
 801864a:	2b00      	cmp	r3, #0
 801864c:	d10b      	bne.n	8018666 <xTaskResumeAll+0x2e>
 801864e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018652:	f383 8811 	msr	BASEPRI, r3
 8018656:	f3bf 8f6f 	isb	sy
 801865a:	f3bf 8f4f 	dsb	sy
 801865e:	603b      	str	r3, [r7, #0]
 8018660:	bf00      	nop
 8018662:	bf00      	nop
 8018664:	e7fd      	b.n	8018662 <xTaskResumeAll+0x2a>
 8018666:	f001 faf7 	bl	8019c58 <vPortEnterCritical>
 801866a:	4b39      	ldr	r3, [pc, #228]	@ (8018750 <xTaskResumeAll+0x118>)
 801866c:	681b      	ldr	r3, [r3, #0]
 801866e:	3b01      	subs	r3, #1
 8018670:	4a37      	ldr	r2, [pc, #220]	@ (8018750 <xTaskResumeAll+0x118>)
 8018672:	6013      	str	r3, [r2, #0]
 8018674:	4b36      	ldr	r3, [pc, #216]	@ (8018750 <xTaskResumeAll+0x118>)
 8018676:	681b      	ldr	r3, [r3, #0]
 8018678:	2b00      	cmp	r3, #0
 801867a:	d161      	bne.n	8018740 <xTaskResumeAll+0x108>
 801867c:	4b35      	ldr	r3, [pc, #212]	@ (8018754 <xTaskResumeAll+0x11c>)
 801867e:	681b      	ldr	r3, [r3, #0]
 8018680:	2b00      	cmp	r3, #0
 8018682:	d05d      	beq.n	8018740 <xTaskResumeAll+0x108>
 8018684:	e02e      	b.n	80186e4 <xTaskResumeAll+0xac>
 8018686:	4b34      	ldr	r3, [pc, #208]	@ (8018758 <xTaskResumeAll+0x120>)
 8018688:	68db      	ldr	r3, [r3, #12]
 801868a:	68db      	ldr	r3, [r3, #12]
 801868c:	60fb      	str	r3, [r7, #12]
 801868e:	68fb      	ldr	r3, [r7, #12]
 8018690:	3318      	adds	r3, #24
 8018692:	4618      	mov	r0, r3
 8018694:	f7fe fec0 	bl	8017418 <uxListRemove>
 8018698:	68fb      	ldr	r3, [r7, #12]
 801869a:	3304      	adds	r3, #4
 801869c:	4618      	mov	r0, r3
 801869e:	f7fe febb 	bl	8017418 <uxListRemove>
 80186a2:	68fb      	ldr	r3, [r7, #12]
 80186a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80186a6:	2201      	movs	r2, #1
 80186a8:	409a      	lsls	r2, r3
 80186aa:	4b2c      	ldr	r3, [pc, #176]	@ (801875c <xTaskResumeAll+0x124>)
 80186ac:	681b      	ldr	r3, [r3, #0]
 80186ae:	4313      	orrs	r3, r2
 80186b0:	4a2a      	ldr	r2, [pc, #168]	@ (801875c <xTaskResumeAll+0x124>)
 80186b2:	6013      	str	r3, [r2, #0]
 80186b4:	68fb      	ldr	r3, [r7, #12]
 80186b6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80186b8:	4613      	mov	r3, r2
 80186ba:	009b      	lsls	r3, r3, #2
 80186bc:	4413      	add	r3, r2
 80186be:	009b      	lsls	r3, r3, #2
 80186c0:	4a27      	ldr	r2, [pc, #156]	@ (8018760 <xTaskResumeAll+0x128>)
 80186c2:	441a      	add	r2, r3
 80186c4:	68fb      	ldr	r3, [r7, #12]
 80186c6:	3304      	adds	r3, #4
 80186c8:	4619      	mov	r1, r3
 80186ca:	4610      	mov	r0, r2
 80186cc:	f7fe fe47 	bl	801735e <vListInsertEnd>
 80186d0:	68fb      	ldr	r3, [r7, #12]
 80186d2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80186d4:	4b23      	ldr	r3, [pc, #140]	@ (8018764 <xTaskResumeAll+0x12c>)
 80186d6:	681b      	ldr	r3, [r3, #0]
 80186d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80186da:	429a      	cmp	r2, r3
 80186dc:	d302      	bcc.n	80186e4 <xTaskResumeAll+0xac>
 80186de:	4b22      	ldr	r3, [pc, #136]	@ (8018768 <xTaskResumeAll+0x130>)
 80186e0:	2201      	movs	r2, #1
 80186e2:	601a      	str	r2, [r3, #0]
 80186e4:	4b1c      	ldr	r3, [pc, #112]	@ (8018758 <xTaskResumeAll+0x120>)
 80186e6:	681b      	ldr	r3, [r3, #0]
 80186e8:	2b00      	cmp	r3, #0
 80186ea:	d1cc      	bne.n	8018686 <xTaskResumeAll+0x4e>
 80186ec:	68fb      	ldr	r3, [r7, #12]
 80186ee:	2b00      	cmp	r3, #0
 80186f0:	d001      	beq.n	80186f6 <xTaskResumeAll+0xbe>
 80186f2:	f000 fbf5 	bl	8018ee0 <prvResetNextTaskUnblockTime>
 80186f6:	4b1d      	ldr	r3, [pc, #116]	@ (801876c <xTaskResumeAll+0x134>)
 80186f8:	681b      	ldr	r3, [r3, #0]
 80186fa:	607b      	str	r3, [r7, #4]
 80186fc:	687b      	ldr	r3, [r7, #4]
 80186fe:	2b00      	cmp	r3, #0
 8018700:	d010      	beq.n	8018724 <xTaskResumeAll+0xec>
 8018702:	f000 f847 	bl	8018794 <xTaskIncrementTick>
 8018706:	4603      	mov	r3, r0
 8018708:	2b00      	cmp	r3, #0
 801870a:	d002      	beq.n	8018712 <xTaskResumeAll+0xda>
 801870c:	4b16      	ldr	r3, [pc, #88]	@ (8018768 <xTaskResumeAll+0x130>)
 801870e:	2201      	movs	r2, #1
 8018710:	601a      	str	r2, [r3, #0]
 8018712:	687b      	ldr	r3, [r7, #4]
 8018714:	3b01      	subs	r3, #1
 8018716:	607b      	str	r3, [r7, #4]
 8018718:	687b      	ldr	r3, [r7, #4]
 801871a:	2b00      	cmp	r3, #0
 801871c:	d1f1      	bne.n	8018702 <xTaskResumeAll+0xca>
 801871e:	4b13      	ldr	r3, [pc, #76]	@ (801876c <xTaskResumeAll+0x134>)
 8018720:	2200      	movs	r2, #0
 8018722:	601a      	str	r2, [r3, #0]
 8018724:	4b10      	ldr	r3, [pc, #64]	@ (8018768 <xTaskResumeAll+0x130>)
 8018726:	681b      	ldr	r3, [r3, #0]
 8018728:	2b00      	cmp	r3, #0
 801872a:	d009      	beq.n	8018740 <xTaskResumeAll+0x108>
 801872c:	2301      	movs	r3, #1
 801872e:	60bb      	str	r3, [r7, #8]
 8018730:	4b0f      	ldr	r3, [pc, #60]	@ (8018770 <xTaskResumeAll+0x138>)
 8018732:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018736:	601a      	str	r2, [r3, #0]
 8018738:	f3bf 8f4f 	dsb	sy
 801873c:	f3bf 8f6f 	isb	sy
 8018740:	f001 fabc 	bl	8019cbc <vPortExitCritical>
 8018744:	68bb      	ldr	r3, [r7, #8]
 8018746:	4618      	mov	r0, r3
 8018748:	3710      	adds	r7, #16
 801874a:	46bd      	mov	sp, r7
 801874c:	bd80      	pop	{r7, pc}
 801874e:	bf00      	nop
 8018750:	20003ce8 	.word	0x20003ce8
 8018754:	20003cc0 	.word	0x20003cc0
 8018758:	20003c80 	.word	0x20003c80
 801875c:	20003cc8 	.word	0x20003cc8
 8018760:	20003b24 	.word	0x20003b24
 8018764:	20003b20 	.word	0x20003b20
 8018768:	20003cd4 	.word	0x20003cd4
 801876c:	20003cd0 	.word	0x20003cd0
 8018770:	e000ed04 	.word	0xe000ed04

08018774 <xTaskGetTickCount>:
 8018774:	b480      	push	{r7}
 8018776:	b083      	sub	sp, #12
 8018778:	af00      	add	r7, sp, #0
 801877a:	4b05      	ldr	r3, [pc, #20]	@ (8018790 <xTaskGetTickCount+0x1c>)
 801877c:	681b      	ldr	r3, [r3, #0]
 801877e:	607b      	str	r3, [r7, #4]
 8018780:	687b      	ldr	r3, [r7, #4]
 8018782:	4618      	mov	r0, r3
 8018784:	370c      	adds	r7, #12
 8018786:	46bd      	mov	sp, r7
 8018788:	f85d 7b04 	ldr.w	r7, [sp], #4
 801878c:	4770      	bx	lr
 801878e:	bf00      	nop
 8018790:	20003cc4 	.word	0x20003cc4

08018794 <xTaskIncrementTick>:
 8018794:	b580      	push	{r7, lr}
 8018796:	b086      	sub	sp, #24
 8018798:	af00      	add	r7, sp, #0
 801879a:	2300      	movs	r3, #0
 801879c:	617b      	str	r3, [r7, #20]
 801879e:	4b4f      	ldr	r3, [pc, #316]	@ (80188dc <xTaskIncrementTick+0x148>)
 80187a0:	681b      	ldr	r3, [r3, #0]
 80187a2:	2b00      	cmp	r3, #0
 80187a4:	f040 808f 	bne.w	80188c6 <xTaskIncrementTick+0x132>
 80187a8:	4b4d      	ldr	r3, [pc, #308]	@ (80188e0 <xTaskIncrementTick+0x14c>)
 80187aa:	681b      	ldr	r3, [r3, #0]
 80187ac:	3301      	adds	r3, #1
 80187ae:	613b      	str	r3, [r7, #16]
 80187b0:	4a4b      	ldr	r2, [pc, #300]	@ (80188e0 <xTaskIncrementTick+0x14c>)
 80187b2:	693b      	ldr	r3, [r7, #16]
 80187b4:	6013      	str	r3, [r2, #0]
 80187b6:	693b      	ldr	r3, [r7, #16]
 80187b8:	2b00      	cmp	r3, #0
 80187ba:	d121      	bne.n	8018800 <xTaskIncrementTick+0x6c>
 80187bc:	4b49      	ldr	r3, [pc, #292]	@ (80188e4 <xTaskIncrementTick+0x150>)
 80187be:	681b      	ldr	r3, [r3, #0]
 80187c0:	681b      	ldr	r3, [r3, #0]
 80187c2:	2b00      	cmp	r3, #0
 80187c4:	d00b      	beq.n	80187de <xTaskIncrementTick+0x4a>
 80187c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80187ca:	f383 8811 	msr	BASEPRI, r3
 80187ce:	f3bf 8f6f 	isb	sy
 80187d2:	f3bf 8f4f 	dsb	sy
 80187d6:	603b      	str	r3, [r7, #0]
 80187d8:	bf00      	nop
 80187da:	bf00      	nop
 80187dc:	e7fd      	b.n	80187da <xTaskIncrementTick+0x46>
 80187de:	4b41      	ldr	r3, [pc, #260]	@ (80188e4 <xTaskIncrementTick+0x150>)
 80187e0:	681b      	ldr	r3, [r3, #0]
 80187e2:	60fb      	str	r3, [r7, #12]
 80187e4:	4b40      	ldr	r3, [pc, #256]	@ (80188e8 <xTaskIncrementTick+0x154>)
 80187e6:	681b      	ldr	r3, [r3, #0]
 80187e8:	4a3e      	ldr	r2, [pc, #248]	@ (80188e4 <xTaskIncrementTick+0x150>)
 80187ea:	6013      	str	r3, [r2, #0]
 80187ec:	4a3e      	ldr	r2, [pc, #248]	@ (80188e8 <xTaskIncrementTick+0x154>)
 80187ee:	68fb      	ldr	r3, [r7, #12]
 80187f0:	6013      	str	r3, [r2, #0]
 80187f2:	4b3e      	ldr	r3, [pc, #248]	@ (80188ec <xTaskIncrementTick+0x158>)
 80187f4:	681b      	ldr	r3, [r3, #0]
 80187f6:	3301      	adds	r3, #1
 80187f8:	4a3c      	ldr	r2, [pc, #240]	@ (80188ec <xTaskIncrementTick+0x158>)
 80187fa:	6013      	str	r3, [r2, #0]
 80187fc:	f000 fb70 	bl	8018ee0 <prvResetNextTaskUnblockTime>
 8018800:	4b3b      	ldr	r3, [pc, #236]	@ (80188f0 <xTaskIncrementTick+0x15c>)
 8018802:	681b      	ldr	r3, [r3, #0]
 8018804:	693a      	ldr	r2, [r7, #16]
 8018806:	429a      	cmp	r2, r3
 8018808:	d348      	bcc.n	801889c <xTaskIncrementTick+0x108>
 801880a:	4b36      	ldr	r3, [pc, #216]	@ (80188e4 <xTaskIncrementTick+0x150>)
 801880c:	681b      	ldr	r3, [r3, #0]
 801880e:	681b      	ldr	r3, [r3, #0]
 8018810:	2b00      	cmp	r3, #0
 8018812:	d104      	bne.n	801881e <xTaskIncrementTick+0x8a>
 8018814:	4b36      	ldr	r3, [pc, #216]	@ (80188f0 <xTaskIncrementTick+0x15c>)
 8018816:	f04f 32ff 	mov.w	r2, #4294967295
 801881a:	601a      	str	r2, [r3, #0]
 801881c:	e03e      	b.n	801889c <xTaskIncrementTick+0x108>
 801881e:	4b31      	ldr	r3, [pc, #196]	@ (80188e4 <xTaskIncrementTick+0x150>)
 8018820:	681b      	ldr	r3, [r3, #0]
 8018822:	68db      	ldr	r3, [r3, #12]
 8018824:	68db      	ldr	r3, [r3, #12]
 8018826:	60bb      	str	r3, [r7, #8]
 8018828:	68bb      	ldr	r3, [r7, #8]
 801882a:	685b      	ldr	r3, [r3, #4]
 801882c:	607b      	str	r3, [r7, #4]
 801882e:	693a      	ldr	r2, [r7, #16]
 8018830:	687b      	ldr	r3, [r7, #4]
 8018832:	429a      	cmp	r2, r3
 8018834:	d203      	bcs.n	801883e <xTaskIncrementTick+0xaa>
 8018836:	4a2e      	ldr	r2, [pc, #184]	@ (80188f0 <xTaskIncrementTick+0x15c>)
 8018838:	687b      	ldr	r3, [r7, #4]
 801883a:	6013      	str	r3, [r2, #0]
 801883c:	e02e      	b.n	801889c <xTaskIncrementTick+0x108>
 801883e:	68bb      	ldr	r3, [r7, #8]
 8018840:	3304      	adds	r3, #4
 8018842:	4618      	mov	r0, r3
 8018844:	f7fe fde8 	bl	8017418 <uxListRemove>
 8018848:	68bb      	ldr	r3, [r7, #8]
 801884a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801884c:	2b00      	cmp	r3, #0
 801884e:	d004      	beq.n	801885a <xTaskIncrementTick+0xc6>
 8018850:	68bb      	ldr	r3, [r7, #8]
 8018852:	3318      	adds	r3, #24
 8018854:	4618      	mov	r0, r3
 8018856:	f7fe fddf 	bl	8017418 <uxListRemove>
 801885a:	68bb      	ldr	r3, [r7, #8]
 801885c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801885e:	2201      	movs	r2, #1
 8018860:	409a      	lsls	r2, r3
 8018862:	4b24      	ldr	r3, [pc, #144]	@ (80188f4 <xTaskIncrementTick+0x160>)
 8018864:	681b      	ldr	r3, [r3, #0]
 8018866:	4313      	orrs	r3, r2
 8018868:	4a22      	ldr	r2, [pc, #136]	@ (80188f4 <xTaskIncrementTick+0x160>)
 801886a:	6013      	str	r3, [r2, #0]
 801886c:	68bb      	ldr	r3, [r7, #8]
 801886e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018870:	4613      	mov	r3, r2
 8018872:	009b      	lsls	r3, r3, #2
 8018874:	4413      	add	r3, r2
 8018876:	009b      	lsls	r3, r3, #2
 8018878:	4a1f      	ldr	r2, [pc, #124]	@ (80188f8 <xTaskIncrementTick+0x164>)
 801887a:	441a      	add	r2, r3
 801887c:	68bb      	ldr	r3, [r7, #8]
 801887e:	3304      	adds	r3, #4
 8018880:	4619      	mov	r1, r3
 8018882:	4610      	mov	r0, r2
 8018884:	f7fe fd6b 	bl	801735e <vListInsertEnd>
 8018888:	68bb      	ldr	r3, [r7, #8]
 801888a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801888c:	4b1b      	ldr	r3, [pc, #108]	@ (80188fc <xTaskIncrementTick+0x168>)
 801888e:	681b      	ldr	r3, [r3, #0]
 8018890:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018892:	429a      	cmp	r2, r3
 8018894:	d3b9      	bcc.n	801880a <xTaskIncrementTick+0x76>
 8018896:	2301      	movs	r3, #1
 8018898:	617b      	str	r3, [r7, #20]
 801889a:	e7b6      	b.n	801880a <xTaskIncrementTick+0x76>
 801889c:	4b17      	ldr	r3, [pc, #92]	@ (80188fc <xTaskIncrementTick+0x168>)
 801889e:	681b      	ldr	r3, [r3, #0]
 80188a0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80188a2:	4915      	ldr	r1, [pc, #84]	@ (80188f8 <xTaskIncrementTick+0x164>)
 80188a4:	4613      	mov	r3, r2
 80188a6:	009b      	lsls	r3, r3, #2
 80188a8:	4413      	add	r3, r2
 80188aa:	009b      	lsls	r3, r3, #2
 80188ac:	440b      	add	r3, r1
 80188ae:	681b      	ldr	r3, [r3, #0]
 80188b0:	2b01      	cmp	r3, #1
 80188b2:	d901      	bls.n	80188b8 <xTaskIncrementTick+0x124>
 80188b4:	2301      	movs	r3, #1
 80188b6:	617b      	str	r3, [r7, #20]
 80188b8:	4b11      	ldr	r3, [pc, #68]	@ (8018900 <xTaskIncrementTick+0x16c>)
 80188ba:	681b      	ldr	r3, [r3, #0]
 80188bc:	2b00      	cmp	r3, #0
 80188be:	d007      	beq.n	80188d0 <xTaskIncrementTick+0x13c>
 80188c0:	2301      	movs	r3, #1
 80188c2:	617b      	str	r3, [r7, #20]
 80188c4:	e004      	b.n	80188d0 <xTaskIncrementTick+0x13c>
 80188c6:	4b0f      	ldr	r3, [pc, #60]	@ (8018904 <xTaskIncrementTick+0x170>)
 80188c8:	681b      	ldr	r3, [r3, #0]
 80188ca:	3301      	adds	r3, #1
 80188cc:	4a0d      	ldr	r2, [pc, #52]	@ (8018904 <xTaskIncrementTick+0x170>)
 80188ce:	6013      	str	r3, [r2, #0]
 80188d0:	697b      	ldr	r3, [r7, #20]
 80188d2:	4618      	mov	r0, r3
 80188d4:	3718      	adds	r7, #24
 80188d6:	46bd      	mov	sp, r7
 80188d8:	bd80      	pop	{r7, pc}
 80188da:	bf00      	nop
 80188dc:	20003ce8 	.word	0x20003ce8
 80188e0:	20003cc4 	.word	0x20003cc4
 80188e4:	20003c78 	.word	0x20003c78
 80188e8:	20003c7c 	.word	0x20003c7c
 80188ec:	20003cd8 	.word	0x20003cd8
 80188f0:	20003ce0 	.word	0x20003ce0
 80188f4:	20003cc8 	.word	0x20003cc8
 80188f8:	20003b24 	.word	0x20003b24
 80188fc:	20003b20 	.word	0x20003b20
 8018900:	20003cd4 	.word	0x20003cd4
 8018904:	20003cd0 	.word	0x20003cd0

08018908 <vTaskSwitchContext>:
 8018908:	b580      	push	{r7, lr}
 801890a:	b086      	sub	sp, #24
 801890c:	af00      	add	r7, sp, #0
 801890e:	4b3e      	ldr	r3, [pc, #248]	@ (8018a08 <vTaskSwitchContext+0x100>)
 8018910:	681b      	ldr	r3, [r3, #0]
 8018912:	2b00      	cmp	r3, #0
 8018914:	d003      	beq.n	801891e <vTaskSwitchContext+0x16>
 8018916:	4b3d      	ldr	r3, [pc, #244]	@ (8018a0c <vTaskSwitchContext+0x104>)
 8018918:	2201      	movs	r2, #1
 801891a:	601a      	str	r2, [r3, #0]
 801891c:	e06f      	b.n	80189fe <vTaskSwitchContext+0xf6>
 801891e:	4b3b      	ldr	r3, [pc, #236]	@ (8018a0c <vTaskSwitchContext+0x104>)
 8018920:	2200      	movs	r2, #0
 8018922:	601a      	str	r2, [r3, #0]
 8018924:	f7ea fc15 	bl	8003152 <getRunTimeCounterValue>
 8018928:	4603      	mov	r3, r0
 801892a:	4a39      	ldr	r2, [pc, #228]	@ (8018a10 <vTaskSwitchContext+0x108>)
 801892c:	6013      	str	r3, [r2, #0]
 801892e:	4b38      	ldr	r3, [pc, #224]	@ (8018a10 <vTaskSwitchContext+0x108>)
 8018930:	681a      	ldr	r2, [r3, #0]
 8018932:	4b38      	ldr	r3, [pc, #224]	@ (8018a14 <vTaskSwitchContext+0x10c>)
 8018934:	681b      	ldr	r3, [r3, #0]
 8018936:	429a      	cmp	r2, r3
 8018938:	d909      	bls.n	801894e <vTaskSwitchContext+0x46>
 801893a:	4b37      	ldr	r3, [pc, #220]	@ (8018a18 <vTaskSwitchContext+0x110>)
 801893c:	681b      	ldr	r3, [r3, #0]
 801893e:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8018940:	4a33      	ldr	r2, [pc, #204]	@ (8018a10 <vTaskSwitchContext+0x108>)
 8018942:	6810      	ldr	r0, [r2, #0]
 8018944:	4a33      	ldr	r2, [pc, #204]	@ (8018a14 <vTaskSwitchContext+0x10c>)
 8018946:	6812      	ldr	r2, [r2, #0]
 8018948:	1a82      	subs	r2, r0, r2
 801894a:	440a      	add	r2, r1
 801894c:	655a      	str	r2, [r3, #84]	@ 0x54
 801894e:	4b30      	ldr	r3, [pc, #192]	@ (8018a10 <vTaskSwitchContext+0x108>)
 8018950:	681b      	ldr	r3, [r3, #0]
 8018952:	4a30      	ldr	r2, [pc, #192]	@ (8018a14 <vTaskSwitchContext+0x10c>)
 8018954:	6013      	str	r3, [r2, #0]
 8018956:	4b30      	ldr	r3, [pc, #192]	@ (8018a18 <vTaskSwitchContext+0x110>)
 8018958:	681b      	ldr	r3, [r3, #0]
 801895a:	681a      	ldr	r2, [r3, #0]
 801895c:	4b2e      	ldr	r3, [pc, #184]	@ (8018a18 <vTaskSwitchContext+0x110>)
 801895e:	681b      	ldr	r3, [r3, #0]
 8018960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018962:	429a      	cmp	r2, r3
 8018964:	d808      	bhi.n	8018978 <vTaskSwitchContext+0x70>
 8018966:	4b2c      	ldr	r3, [pc, #176]	@ (8018a18 <vTaskSwitchContext+0x110>)
 8018968:	681a      	ldr	r2, [r3, #0]
 801896a:	4b2b      	ldr	r3, [pc, #172]	@ (8018a18 <vTaskSwitchContext+0x110>)
 801896c:	681b      	ldr	r3, [r3, #0]
 801896e:	3334      	adds	r3, #52	@ 0x34
 8018970:	4619      	mov	r1, r3
 8018972:	4610      	mov	r0, r2
 8018974:	f7ea fbf5 	bl	8003162 <vApplicationStackOverflowHook>
 8018978:	4b28      	ldr	r3, [pc, #160]	@ (8018a1c <vTaskSwitchContext+0x114>)
 801897a:	681b      	ldr	r3, [r3, #0]
 801897c:	60fb      	str	r3, [r7, #12]
 801897e:	68fb      	ldr	r3, [r7, #12]
 8018980:	fab3 f383 	clz	r3, r3
 8018984:	72fb      	strb	r3, [r7, #11]
 8018986:	7afb      	ldrb	r3, [r7, #11]
 8018988:	f1c3 031f 	rsb	r3, r3, #31
 801898c:	617b      	str	r3, [r7, #20]
 801898e:	4924      	ldr	r1, [pc, #144]	@ (8018a20 <vTaskSwitchContext+0x118>)
 8018990:	697a      	ldr	r2, [r7, #20]
 8018992:	4613      	mov	r3, r2
 8018994:	009b      	lsls	r3, r3, #2
 8018996:	4413      	add	r3, r2
 8018998:	009b      	lsls	r3, r3, #2
 801899a:	440b      	add	r3, r1
 801899c:	681b      	ldr	r3, [r3, #0]
 801899e:	2b00      	cmp	r3, #0
 80189a0:	d10b      	bne.n	80189ba <vTaskSwitchContext+0xb2>
 80189a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80189a6:	f383 8811 	msr	BASEPRI, r3
 80189aa:	f3bf 8f6f 	isb	sy
 80189ae:	f3bf 8f4f 	dsb	sy
 80189b2:	607b      	str	r3, [r7, #4]
 80189b4:	bf00      	nop
 80189b6:	bf00      	nop
 80189b8:	e7fd      	b.n	80189b6 <vTaskSwitchContext+0xae>
 80189ba:	697a      	ldr	r2, [r7, #20]
 80189bc:	4613      	mov	r3, r2
 80189be:	009b      	lsls	r3, r3, #2
 80189c0:	4413      	add	r3, r2
 80189c2:	009b      	lsls	r3, r3, #2
 80189c4:	4a16      	ldr	r2, [pc, #88]	@ (8018a20 <vTaskSwitchContext+0x118>)
 80189c6:	4413      	add	r3, r2
 80189c8:	613b      	str	r3, [r7, #16]
 80189ca:	693b      	ldr	r3, [r7, #16]
 80189cc:	685b      	ldr	r3, [r3, #4]
 80189ce:	685a      	ldr	r2, [r3, #4]
 80189d0:	693b      	ldr	r3, [r7, #16]
 80189d2:	605a      	str	r2, [r3, #4]
 80189d4:	693b      	ldr	r3, [r7, #16]
 80189d6:	685a      	ldr	r2, [r3, #4]
 80189d8:	693b      	ldr	r3, [r7, #16]
 80189da:	3308      	adds	r3, #8
 80189dc:	429a      	cmp	r2, r3
 80189de:	d104      	bne.n	80189ea <vTaskSwitchContext+0xe2>
 80189e0:	693b      	ldr	r3, [r7, #16]
 80189e2:	685b      	ldr	r3, [r3, #4]
 80189e4:	685a      	ldr	r2, [r3, #4]
 80189e6:	693b      	ldr	r3, [r7, #16]
 80189e8:	605a      	str	r2, [r3, #4]
 80189ea:	693b      	ldr	r3, [r7, #16]
 80189ec:	685b      	ldr	r3, [r3, #4]
 80189ee:	68db      	ldr	r3, [r3, #12]
 80189f0:	4a09      	ldr	r2, [pc, #36]	@ (8018a18 <vTaskSwitchContext+0x110>)
 80189f2:	6013      	str	r3, [r2, #0]
 80189f4:	4b08      	ldr	r3, [pc, #32]	@ (8018a18 <vTaskSwitchContext+0x110>)
 80189f6:	681b      	ldr	r3, [r3, #0]
 80189f8:	3358      	adds	r3, #88	@ 0x58
 80189fa:	4a0a      	ldr	r2, [pc, #40]	@ (8018a24 <vTaskSwitchContext+0x11c>)
 80189fc:	6013      	str	r3, [r2, #0]
 80189fe:	bf00      	nop
 8018a00:	3718      	adds	r7, #24
 8018a02:	46bd      	mov	sp, r7
 8018a04:	bd80      	pop	{r7, pc}
 8018a06:	bf00      	nop
 8018a08:	20003ce8 	.word	0x20003ce8
 8018a0c:	20003cd4 	.word	0x20003cd4
 8018a10:	20003cf0 	.word	0x20003cf0
 8018a14:	20003cec 	.word	0x20003cec
 8018a18:	20003b20 	.word	0x20003b20
 8018a1c:	20003cc8 	.word	0x20003cc8
 8018a20:	20003b24 	.word	0x20003b24
 8018a24:	20000120 	.word	0x20000120

08018a28 <vTaskPlaceOnEventList>:
 8018a28:	b580      	push	{r7, lr}
 8018a2a:	b084      	sub	sp, #16
 8018a2c:	af00      	add	r7, sp, #0
 8018a2e:	6078      	str	r0, [r7, #4]
 8018a30:	6039      	str	r1, [r7, #0]
 8018a32:	687b      	ldr	r3, [r7, #4]
 8018a34:	2b00      	cmp	r3, #0
 8018a36:	d10b      	bne.n	8018a50 <vTaskPlaceOnEventList+0x28>
 8018a38:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018a3c:	f383 8811 	msr	BASEPRI, r3
 8018a40:	f3bf 8f6f 	isb	sy
 8018a44:	f3bf 8f4f 	dsb	sy
 8018a48:	60fb      	str	r3, [r7, #12]
 8018a4a:	bf00      	nop
 8018a4c:	bf00      	nop
 8018a4e:	e7fd      	b.n	8018a4c <vTaskPlaceOnEventList+0x24>
 8018a50:	4b07      	ldr	r3, [pc, #28]	@ (8018a70 <vTaskPlaceOnEventList+0x48>)
 8018a52:	681b      	ldr	r3, [r3, #0]
 8018a54:	3318      	adds	r3, #24
 8018a56:	4619      	mov	r1, r3
 8018a58:	6878      	ldr	r0, [r7, #4]
 8018a5a:	f7fe fca4 	bl	80173a6 <vListInsert>
 8018a5e:	2101      	movs	r1, #1
 8018a60:	6838      	ldr	r0, [r7, #0]
 8018a62:	f000 fbe5 	bl	8019230 <prvAddCurrentTaskToDelayedList>
 8018a66:	bf00      	nop
 8018a68:	3710      	adds	r7, #16
 8018a6a:	46bd      	mov	sp, r7
 8018a6c:	bd80      	pop	{r7, pc}
 8018a6e:	bf00      	nop
 8018a70:	20003b20 	.word	0x20003b20

08018a74 <vTaskPlaceOnEventListRestricted>:
 8018a74:	b580      	push	{r7, lr}
 8018a76:	b086      	sub	sp, #24
 8018a78:	af00      	add	r7, sp, #0
 8018a7a:	60f8      	str	r0, [r7, #12]
 8018a7c:	60b9      	str	r1, [r7, #8]
 8018a7e:	607a      	str	r2, [r7, #4]
 8018a80:	68fb      	ldr	r3, [r7, #12]
 8018a82:	2b00      	cmp	r3, #0
 8018a84:	d10b      	bne.n	8018a9e <vTaskPlaceOnEventListRestricted+0x2a>
 8018a86:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018a8a:	f383 8811 	msr	BASEPRI, r3
 8018a8e:	f3bf 8f6f 	isb	sy
 8018a92:	f3bf 8f4f 	dsb	sy
 8018a96:	617b      	str	r3, [r7, #20]
 8018a98:	bf00      	nop
 8018a9a:	bf00      	nop
 8018a9c:	e7fd      	b.n	8018a9a <vTaskPlaceOnEventListRestricted+0x26>
 8018a9e:	4b0a      	ldr	r3, [pc, #40]	@ (8018ac8 <vTaskPlaceOnEventListRestricted+0x54>)
 8018aa0:	681b      	ldr	r3, [r3, #0]
 8018aa2:	3318      	adds	r3, #24
 8018aa4:	4619      	mov	r1, r3
 8018aa6:	68f8      	ldr	r0, [r7, #12]
 8018aa8:	f7fe fc59 	bl	801735e <vListInsertEnd>
 8018aac:	687b      	ldr	r3, [r7, #4]
 8018aae:	2b00      	cmp	r3, #0
 8018ab0:	d002      	beq.n	8018ab8 <vTaskPlaceOnEventListRestricted+0x44>
 8018ab2:	f04f 33ff 	mov.w	r3, #4294967295
 8018ab6:	60bb      	str	r3, [r7, #8]
 8018ab8:	6879      	ldr	r1, [r7, #4]
 8018aba:	68b8      	ldr	r0, [r7, #8]
 8018abc:	f000 fbb8 	bl	8019230 <prvAddCurrentTaskToDelayedList>
 8018ac0:	bf00      	nop
 8018ac2:	3718      	adds	r7, #24
 8018ac4:	46bd      	mov	sp, r7
 8018ac6:	bd80      	pop	{r7, pc}
 8018ac8:	20003b20 	.word	0x20003b20

08018acc <xTaskRemoveFromEventList>:
 8018acc:	b580      	push	{r7, lr}
 8018ace:	b086      	sub	sp, #24
 8018ad0:	af00      	add	r7, sp, #0
 8018ad2:	6078      	str	r0, [r7, #4]
 8018ad4:	687b      	ldr	r3, [r7, #4]
 8018ad6:	68db      	ldr	r3, [r3, #12]
 8018ad8:	68db      	ldr	r3, [r3, #12]
 8018ada:	613b      	str	r3, [r7, #16]
 8018adc:	693b      	ldr	r3, [r7, #16]
 8018ade:	2b00      	cmp	r3, #0
 8018ae0:	d10b      	bne.n	8018afa <xTaskRemoveFromEventList+0x2e>
 8018ae2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018ae6:	f383 8811 	msr	BASEPRI, r3
 8018aea:	f3bf 8f6f 	isb	sy
 8018aee:	f3bf 8f4f 	dsb	sy
 8018af2:	60fb      	str	r3, [r7, #12]
 8018af4:	bf00      	nop
 8018af6:	bf00      	nop
 8018af8:	e7fd      	b.n	8018af6 <xTaskRemoveFromEventList+0x2a>
 8018afa:	693b      	ldr	r3, [r7, #16]
 8018afc:	3318      	adds	r3, #24
 8018afe:	4618      	mov	r0, r3
 8018b00:	f7fe fc8a 	bl	8017418 <uxListRemove>
 8018b04:	4b1d      	ldr	r3, [pc, #116]	@ (8018b7c <xTaskRemoveFromEventList+0xb0>)
 8018b06:	681b      	ldr	r3, [r3, #0]
 8018b08:	2b00      	cmp	r3, #0
 8018b0a:	d11c      	bne.n	8018b46 <xTaskRemoveFromEventList+0x7a>
 8018b0c:	693b      	ldr	r3, [r7, #16]
 8018b0e:	3304      	adds	r3, #4
 8018b10:	4618      	mov	r0, r3
 8018b12:	f7fe fc81 	bl	8017418 <uxListRemove>
 8018b16:	693b      	ldr	r3, [r7, #16]
 8018b18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b1a:	2201      	movs	r2, #1
 8018b1c:	409a      	lsls	r2, r3
 8018b1e:	4b18      	ldr	r3, [pc, #96]	@ (8018b80 <xTaskRemoveFromEventList+0xb4>)
 8018b20:	681b      	ldr	r3, [r3, #0]
 8018b22:	4313      	orrs	r3, r2
 8018b24:	4a16      	ldr	r2, [pc, #88]	@ (8018b80 <xTaskRemoveFromEventList+0xb4>)
 8018b26:	6013      	str	r3, [r2, #0]
 8018b28:	693b      	ldr	r3, [r7, #16]
 8018b2a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018b2c:	4613      	mov	r3, r2
 8018b2e:	009b      	lsls	r3, r3, #2
 8018b30:	4413      	add	r3, r2
 8018b32:	009b      	lsls	r3, r3, #2
 8018b34:	4a13      	ldr	r2, [pc, #76]	@ (8018b84 <xTaskRemoveFromEventList+0xb8>)
 8018b36:	441a      	add	r2, r3
 8018b38:	693b      	ldr	r3, [r7, #16]
 8018b3a:	3304      	adds	r3, #4
 8018b3c:	4619      	mov	r1, r3
 8018b3e:	4610      	mov	r0, r2
 8018b40:	f7fe fc0d 	bl	801735e <vListInsertEnd>
 8018b44:	e005      	b.n	8018b52 <xTaskRemoveFromEventList+0x86>
 8018b46:	693b      	ldr	r3, [r7, #16]
 8018b48:	3318      	adds	r3, #24
 8018b4a:	4619      	mov	r1, r3
 8018b4c:	480e      	ldr	r0, [pc, #56]	@ (8018b88 <xTaskRemoveFromEventList+0xbc>)
 8018b4e:	f7fe fc06 	bl	801735e <vListInsertEnd>
 8018b52:	693b      	ldr	r3, [r7, #16]
 8018b54:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018b56:	4b0d      	ldr	r3, [pc, #52]	@ (8018b8c <xTaskRemoveFromEventList+0xc0>)
 8018b58:	681b      	ldr	r3, [r3, #0]
 8018b5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b5c:	429a      	cmp	r2, r3
 8018b5e:	d905      	bls.n	8018b6c <xTaskRemoveFromEventList+0xa0>
 8018b60:	2301      	movs	r3, #1
 8018b62:	617b      	str	r3, [r7, #20]
 8018b64:	4b0a      	ldr	r3, [pc, #40]	@ (8018b90 <xTaskRemoveFromEventList+0xc4>)
 8018b66:	2201      	movs	r2, #1
 8018b68:	601a      	str	r2, [r3, #0]
 8018b6a:	e001      	b.n	8018b70 <xTaskRemoveFromEventList+0xa4>
 8018b6c:	2300      	movs	r3, #0
 8018b6e:	617b      	str	r3, [r7, #20]
 8018b70:	697b      	ldr	r3, [r7, #20]
 8018b72:	4618      	mov	r0, r3
 8018b74:	3718      	adds	r7, #24
 8018b76:	46bd      	mov	sp, r7
 8018b78:	bd80      	pop	{r7, pc}
 8018b7a:	bf00      	nop
 8018b7c:	20003ce8 	.word	0x20003ce8
 8018b80:	20003cc8 	.word	0x20003cc8
 8018b84:	20003b24 	.word	0x20003b24
 8018b88:	20003c80 	.word	0x20003c80
 8018b8c:	20003b20 	.word	0x20003b20
 8018b90:	20003cd4 	.word	0x20003cd4

08018b94 <vTaskRemoveFromUnorderedEventList>:
 8018b94:	b580      	push	{r7, lr}
 8018b96:	b086      	sub	sp, #24
 8018b98:	af00      	add	r7, sp, #0
 8018b9a:	6078      	str	r0, [r7, #4]
 8018b9c:	6039      	str	r1, [r7, #0]
 8018b9e:	4b2a      	ldr	r3, [pc, #168]	@ (8018c48 <vTaskRemoveFromUnorderedEventList+0xb4>)
 8018ba0:	681b      	ldr	r3, [r3, #0]
 8018ba2:	2b00      	cmp	r3, #0
 8018ba4:	d10b      	bne.n	8018bbe <vTaskRemoveFromUnorderedEventList+0x2a>
 8018ba6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018baa:	f383 8811 	msr	BASEPRI, r3
 8018bae:	f3bf 8f6f 	isb	sy
 8018bb2:	f3bf 8f4f 	dsb	sy
 8018bb6:	613b      	str	r3, [r7, #16]
 8018bb8:	bf00      	nop
 8018bba:	bf00      	nop
 8018bbc:	e7fd      	b.n	8018bba <vTaskRemoveFromUnorderedEventList+0x26>
 8018bbe:	683b      	ldr	r3, [r7, #0]
 8018bc0:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8018bc4:	687b      	ldr	r3, [r7, #4]
 8018bc6:	601a      	str	r2, [r3, #0]
 8018bc8:	687b      	ldr	r3, [r7, #4]
 8018bca:	68db      	ldr	r3, [r3, #12]
 8018bcc:	617b      	str	r3, [r7, #20]
 8018bce:	697b      	ldr	r3, [r7, #20]
 8018bd0:	2b00      	cmp	r3, #0
 8018bd2:	d10b      	bne.n	8018bec <vTaskRemoveFromUnorderedEventList+0x58>
 8018bd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018bd8:	f383 8811 	msr	BASEPRI, r3
 8018bdc:	f3bf 8f6f 	isb	sy
 8018be0:	f3bf 8f4f 	dsb	sy
 8018be4:	60fb      	str	r3, [r7, #12]
 8018be6:	bf00      	nop
 8018be8:	bf00      	nop
 8018bea:	e7fd      	b.n	8018be8 <vTaskRemoveFromUnorderedEventList+0x54>
 8018bec:	6878      	ldr	r0, [r7, #4]
 8018bee:	f7fe fc13 	bl	8017418 <uxListRemove>
 8018bf2:	697b      	ldr	r3, [r7, #20]
 8018bf4:	3304      	adds	r3, #4
 8018bf6:	4618      	mov	r0, r3
 8018bf8:	f7fe fc0e 	bl	8017418 <uxListRemove>
 8018bfc:	697b      	ldr	r3, [r7, #20]
 8018bfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018c00:	2201      	movs	r2, #1
 8018c02:	409a      	lsls	r2, r3
 8018c04:	4b11      	ldr	r3, [pc, #68]	@ (8018c4c <vTaskRemoveFromUnorderedEventList+0xb8>)
 8018c06:	681b      	ldr	r3, [r3, #0]
 8018c08:	4313      	orrs	r3, r2
 8018c0a:	4a10      	ldr	r2, [pc, #64]	@ (8018c4c <vTaskRemoveFromUnorderedEventList+0xb8>)
 8018c0c:	6013      	str	r3, [r2, #0]
 8018c0e:	697b      	ldr	r3, [r7, #20]
 8018c10:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018c12:	4613      	mov	r3, r2
 8018c14:	009b      	lsls	r3, r3, #2
 8018c16:	4413      	add	r3, r2
 8018c18:	009b      	lsls	r3, r3, #2
 8018c1a:	4a0d      	ldr	r2, [pc, #52]	@ (8018c50 <vTaskRemoveFromUnorderedEventList+0xbc>)
 8018c1c:	441a      	add	r2, r3
 8018c1e:	697b      	ldr	r3, [r7, #20]
 8018c20:	3304      	adds	r3, #4
 8018c22:	4619      	mov	r1, r3
 8018c24:	4610      	mov	r0, r2
 8018c26:	f7fe fb9a 	bl	801735e <vListInsertEnd>
 8018c2a:	697b      	ldr	r3, [r7, #20]
 8018c2c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018c2e:	4b09      	ldr	r3, [pc, #36]	@ (8018c54 <vTaskRemoveFromUnorderedEventList+0xc0>)
 8018c30:	681b      	ldr	r3, [r3, #0]
 8018c32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018c34:	429a      	cmp	r2, r3
 8018c36:	d902      	bls.n	8018c3e <vTaskRemoveFromUnorderedEventList+0xaa>
 8018c38:	4b07      	ldr	r3, [pc, #28]	@ (8018c58 <vTaskRemoveFromUnorderedEventList+0xc4>)
 8018c3a:	2201      	movs	r2, #1
 8018c3c:	601a      	str	r2, [r3, #0]
 8018c3e:	bf00      	nop
 8018c40:	3718      	adds	r7, #24
 8018c42:	46bd      	mov	sp, r7
 8018c44:	bd80      	pop	{r7, pc}
 8018c46:	bf00      	nop
 8018c48:	20003ce8 	.word	0x20003ce8
 8018c4c:	20003cc8 	.word	0x20003cc8
 8018c50:	20003b24 	.word	0x20003b24
 8018c54:	20003b20 	.word	0x20003b20
 8018c58:	20003cd4 	.word	0x20003cd4

08018c5c <vTaskInternalSetTimeOutState>:
 8018c5c:	b480      	push	{r7}
 8018c5e:	b083      	sub	sp, #12
 8018c60:	af00      	add	r7, sp, #0
 8018c62:	6078      	str	r0, [r7, #4]
 8018c64:	4b06      	ldr	r3, [pc, #24]	@ (8018c80 <vTaskInternalSetTimeOutState+0x24>)
 8018c66:	681a      	ldr	r2, [r3, #0]
 8018c68:	687b      	ldr	r3, [r7, #4]
 8018c6a:	601a      	str	r2, [r3, #0]
 8018c6c:	4b05      	ldr	r3, [pc, #20]	@ (8018c84 <vTaskInternalSetTimeOutState+0x28>)
 8018c6e:	681a      	ldr	r2, [r3, #0]
 8018c70:	687b      	ldr	r3, [r7, #4]
 8018c72:	605a      	str	r2, [r3, #4]
 8018c74:	bf00      	nop
 8018c76:	370c      	adds	r7, #12
 8018c78:	46bd      	mov	sp, r7
 8018c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018c7e:	4770      	bx	lr
 8018c80:	20003cd8 	.word	0x20003cd8
 8018c84:	20003cc4 	.word	0x20003cc4

08018c88 <xTaskCheckForTimeOut>:
 8018c88:	b580      	push	{r7, lr}
 8018c8a:	b088      	sub	sp, #32
 8018c8c:	af00      	add	r7, sp, #0
 8018c8e:	6078      	str	r0, [r7, #4]
 8018c90:	6039      	str	r1, [r7, #0]
 8018c92:	687b      	ldr	r3, [r7, #4]
 8018c94:	2b00      	cmp	r3, #0
 8018c96:	d10b      	bne.n	8018cb0 <xTaskCheckForTimeOut+0x28>
 8018c98:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018c9c:	f383 8811 	msr	BASEPRI, r3
 8018ca0:	f3bf 8f6f 	isb	sy
 8018ca4:	f3bf 8f4f 	dsb	sy
 8018ca8:	613b      	str	r3, [r7, #16]
 8018caa:	bf00      	nop
 8018cac:	bf00      	nop
 8018cae:	e7fd      	b.n	8018cac <xTaskCheckForTimeOut+0x24>
 8018cb0:	683b      	ldr	r3, [r7, #0]
 8018cb2:	2b00      	cmp	r3, #0
 8018cb4:	d10b      	bne.n	8018cce <xTaskCheckForTimeOut+0x46>
 8018cb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018cba:	f383 8811 	msr	BASEPRI, r3
 8018cbe:	f3bf 8f6f 	isb	sy
 8018cc2:	f3bf 8f4f 	dsb	sy
 8018cc6:	60fb      	str	r3, [r7, #12]
 8018cc8:	bf00      	nop
 8018cca:	bf00      	nop
 8018ccc:	e7fd      	b.n	8018cca <xTaskCheckForTimeOut+0x42>
 8018cce:	f000 ffc3 	bl	8019c58 <vPortEnterCritical>
 8018cd2:	4b1d      	ldr	r3, [pc, #116]	@ (8018d48 <xTaskCheckForTimeOut+0xc0>)
 8018cd4:	681b      	ldr	r3, [r3, #0]
 8018cd6:	61bb      	str	r3, [r7, #24]
 8018cd8:	687b      	ldr	r3, [r7, #4]
 8018cda:	685b      	ldr	r3, [r3, #4]
 8018cdc:	69ba      	ldr	r2, [r7, #24]
 8018cde:	1ad3      	subs	r3, r2, r3
 8018ce0:	617b      	str	r3, [r7, #20]
 8018ce2:	683b      	ldr	r3, [r7, #0]
 8018ce4:	681b      	ldr	r3, [r3, #0]
 8018ce6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8018cea:	d102      	bne.n	8018cf2 <xTaskCheckForTimeOut+0x6a>
 8018cec:	2300      	movs	r3, #0
 8018cee:	61fb      	str	r3, [r7, #28]
 8018cf0:	e023      	b.n	8018d3a <xTaskCheckForTimeOut+0xb2>
 8018cf2:	687b      	ldr	r3, [r7, #4]
 8018cf4:	681a      	ldr	r2, [r3, #0]
 8018cf6:	4b15      	ldr	r3, [pc, #84]	@ (8018d4c <xTaskCheckForTimeOut+0xc4>)
 8018cf8:	681b      	ldr	r3, [r3, #0]
 8018cfa:	429a      	cmp	r2, r3
 8018cfc:	d007      	beq.n	8018d0e <xTaskCheckForTimeOut+0x86>
 8018cfe:	687b      	ldr	r3, [r7, #4]
 8018d00:	685b      	ldr	r3, [r3, #4]
 8018d02:	69ba      	ldr	r2, [r7, #24]
 8018d04:	429a      	cmp	r2, r3
 8018d06:	d302      	bcc.n	8018d0e <xTaskCheckForTimeOut+0x86>
 8018d08:	2301      	movs	r3, #1
 8018d0a:	61fb      	str	r3, [r7, #28]
 8018d0c:	e015      	b.n	8018d3a <xTaskCheckForTimeOut+0xb2>
 8018d0e:	683b      	ldr	r3, [r7, #0]
 8018d10:	681b      	ldr	r3, [r3, #0]
 8018d12:	697a      	ldr	r2, [r7, #20]
 8018d14:	429a      	cmp	r2, r3
 8018d16:	d20b      	bcs.n	8018d30 <xTaskCheckForTimeOut+0xa8>
 8018d18:	683b      	ldr	r3, [r7, #0]
 8018d1a:	681a      	ldr	r2, [r3, #0]
 8018d1c:	697b      	ldr	r3, [r7, #20]
 8018d1e:	1ad2      	subs	r2, r2, r3
 8018d20:	683b      	ldr	r3, [r7, #0]
 8018d22:	601a      	str	r2, [r3, #0]
 8018d24:	6878      	ldr	r0, [r7, #4]
 8018d26:	f7ff ff99 	bl	8018c5c <vTaskInternalSetTimeOutState>
 8018d2a:	2300      	movs	r3, #0
 8018d2c:	61fb      	str	r3, [r7, #28]
 8018d2e:	e004      	b.n	8018d3a <xTaskCheckForTimeOut+0xb2>
 8018d30:	683b      	ldr	r3, [r7, #0]
 8018d32:	2200      	movs	r2, #0
 8018d34:	601a      	str	r2, [r3, #0]
 8018d36:	2301      	movs	r3, #1
 8018d38:	61fb      	str	r3, [r7, #28]
 8018d3a:	f000 ffbf 	bl	8019cbc <vPortExitCritical>
 8018d3e:	69fb      	ldr	r3, [r7, #28]
 8018d40:	4618      	mov	r0, r3
 8018d42:	3720      	adds	r7, #32
 8018d44:	46bd      	mov	sp, r7
 8018d46:	bd80      	pop	{r7, pc}
 8018d48:	20003cc4 	.word	0x20003cc4
 8018d4c:	20003cd8 	.word	0x20003cd8

08018d50 <vTaskMissedYield>:
 8018d50:	b480      	push	{r7}
 8018d52:	af00      	add	r7, sp, #0
 8018d54:	4b03      	ldr	r3, [pc, #12]	@ (8018d64 <vTaskMissedYield+0x14>)
 8018d56:	2201      	movs	r2, #1
 8018d58:	601a      	str	r2, [r3, #0]
 8018d5a:	bf00      	nop
 8018d5c:	46bd      	mov	sp, r7
 8018d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018d62:	4770      	bx	lr
 8018d64:	20003cd4 	.word	0x20003cd4

08018d68 <prvIdleTask>:
 8018d68:	b580      	push	{r7, lr}
 8018d6a:	b082      	sub	sp, #8
 8018d6c:	af00      	add	r7, sp, #0
 8018d6e:	6078      	str	r0, [r7, #4]
 8018d70:	f000 f852 	bl	8018e18 <prvCheckTasksWaitingTermination>
 8018d74:	4b06      	ldr	r3, [pc, #24]	@ (8018d90 <prvIdleTask+0x28>)
 8018d76:	681b      	ldr	r3, [r3, #0]
 8018d78:	2b01      	cmp	r3, #1
 8018d7a:	d9f9      	bls.n	8018d70 <prvIdleTask+0x8>
 8018d7c:	4b05      	ldr	r3, [pc, #20]	@ (8018d94 <prvIdleTask+0x2c>)
 8018d7e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018d82:	601a      	str	r2, [r3, #0]
 8018d84:	f3bf 8f4f 	dsb	sy
 8018d88:	f3bf 8f6f 	isb	sy
 8018d8c:	e7f0      	b.n	8018d70 <prvIdleTask+0x8>
 8018d8e:	bf00      	nop
 8018d90:	20003b24 	.word	0x20003b24
 8018d94:	e000ed04 	.word	0xe000ed04

08018d98 <prvInitialiseTaskLists>:
 8018d98:	b580      	push	{r7, lr}
 8018d9a:	b082      	sub	sp, #8
 8018d9c:	af00      	add	r7, sp, #0
 8018d9e:	2300      	movs	r3, #0
 8018da0:	607b      	str	r3, [r7, #4]
 8018da2:	e00c      	b.n	8018dbe <prvInitialiseTaskLists+0x26>
 8018da4:	687a      	ldr	r2, [r7, #4]
 8018da6:	4613      	mov	r3, r2
 8018da8:	009b      	lsls	r3, r3, #2
 8018daa:	4413      	add	r3, r2
 8018dac:	009b      	lsls	r3, r3, #2
 8018dae:	4a12      	ldr	r2, [pc, #72]	@ (8018df8 <prvInitialiseTaskLists+0x60>)
 8018db0:	4413      	add	r3, r2
 8018db2:	4618      	mov	r0, r3
 8018db4:	f7fe faa6 	bl	8017304 <vListInitialise>
 8018db8:	687b      	ldr	r3, [r7, #4]
 8018dba:	3301      	adds	r3, #1
 8018dbc:	607b      	str	r3, [r7, #4]
 8018dbe:	687b      	ldr	r3, [r7, #4]
 8018dc0:	2b0e      	cmp	r3, #14
 8018dc2:	d9ef      	bls.n	8018da4 <prvInitialiseTaskLists+0xc>
 8018dc4:	480d      	ldr	r0, [pc, #52]	@ (8018dfc <prvInitialiseTaskLists+0x64>)
 8018dc6:	f7fe fa9d 	bl	8017304 <vListInitialise>
 8018dca:	480d      	ldr	r0, [pc, #52]	@ (8018e00 <prvInitialiseTaskLists+0x68>)
 8018dcc:	f7fe fa9a 	bl	8017304 <vListInitialise>
 8018dd0:	480c      	ldr	r0, [pc, #48]	@ (8018e04 <prvInitialiseTaskLists+0x6c>)
 8018dd2:	f7fe fa97 	bl	8017304 <vListInitialise>
 8018dd6:	480c      	ldr	r0, [pc, #48]	@ (8018e08 <prvInitialiseTaskLists+0x70>)
 8018dd8:	f7fe fa94 	bl	8017304 <vListInitialise>
 8018ddc:	480b      	ldr	r0, [pc, #44]	@ (8018e0c <prvInitialiseTaskLists+0x74>)
 8018dde:	f7fe fa91 	bl	8017304 <vListInitialise>
 8018de2:	4b0b      	ldr	r3, [pc, #44]	@ (8018e10 <prvInitialiseTaskLists+0x78>)
 8018de4:	4a05      	ldr	r2, [pc, #20]	@ (8018dfc <prvInitialiseTaskLists+0x64>)
 8018de6:	601a      	str	r2, [r3, #0]
 8018de8:	4b0a      	ldr	r3, [pc, #40]	@ (8018e14 <prvInitialiseTaskLists+0x7c>)
 8018dea:	4a05      	ldr	r2, [pc, #20]	@ (8018e00 <prvInitialiseTaskLists+0x68>)
 8018dec:	601a      	str	r2, [r3, #0]
 8018dee:	bf00      	nop
 8018df0:	3708      	adds	r7, #8
 8018df2:	46bd      	mov	sp, r7
 8018df4:	bd80      	pop	{r7, pc}
 8018df6:	bf00      	nop
 8018df8:	20003b24 	.word	0x20003b24
 8018dfc:	20003c50 	.word	0x20003c50
 8018e00:	20003c64 	.word	0x20003c64
 8018e04:	20003c80 	.word	0x20003c80
 8018e08:	20003c94 	.word	0x20003c94
 8018e0c:	20003cac 	.word	0x20003cac
 8018e10:	20003c78 	.word	0x20003c78
 8018e14:	20003c7c 	.word	0x20003c7c

08018e18 <prvCheckTasksWaitingTermination>:
 8018e18:	b580      	push	{r7, lr}
 8018e1a:	b082      	sub	sp, #8
 8018e1c:	af00      	add	r7, sp, #0
 8018e1e:	e019      	b.n	8018e54 <prvCheckTasksWaitingTermination+0x3c>
 8018e20:	f000 ff1a 	bl	8019c58 <vPortEnterCritical>
 8018e24:	4b10      	ldr	r3, [pc, #64]	@ (8018e68 <prvCheckTasksWaitingTermination+0x50>)
 8018e26:	68db      	ldr	r3, [r3, #12]
 8018e28:	68db      	ldr	r3, [r3, #12]
 8018e2a:	607b      	str	r3, [r7, #4]
 8018e2c:	687b      	ldr	r3, [r7, #4]
 8018e2e:	3304      	adds	r3, #4
 8018e30:	4618      	mov	r0, r3
 8018e32:	f7fe faf1 	bl	8017418 <uxListRemove>
 8018e36:	4b0d      	ldr	r3, [pc, #52]	@ (8018e6c <prvCheckTasksWaitingTermination+0x54>)
 8018e38:	681b      	ldr	r3, [r3, #0]
 8018e3a:	3b01      	subs	r3, #1
 8018e3c:	4a0b      	ldr	r2, [pc, #44]	@ (8018e6c <prvCheckTasksWaitingTermination+0x54>)
 8018e3e:	6013      	str	r3, [r2, #0]
 8018e40:	4b0b      	ldr	r3, [pc, #44]	@ (8018e70 <prvCheckTasksWaitingTermination+0x58>)
 8018e42:	681b      	ldr	r3, [r3, #0]
 8018e44:	3b01      	subs	r3, #1
 8018e46:	4a0a      	ldr	r2, [pc, #40]	@ (8018e70 <prvCheckTasksWaitingTermination+0x58>)
 8018e48:	6013      	str	r3, [r2, #0]
 8018e4a:	f000 ff37 	bl	8019cbc <vPortExitCritical>
 8018e4e:	6878      	ldr	r0, [r7, #4]
 8018e50:	f000 f810 	bl	8018e74 <prvDeleteTCB>
 8018e54:	4b06      	ldr	r3, [pc, #24]	@ (8018e70 <prvCheckTasksWaitingTermination+0x58>)
 8018e56:	681b      	ldr	r3, [r3, #0]
 8018e58:	2b00      	cmp	r3, #0
 8018e5a:	d1e1      	bne.n	8018e20 <prvCheckTasksWaitingTermination+0x8>
 8018e5c:	bf00      	nop
 8018e5e:	bf00      	nop
 8018e60:	3708      	adds	r7, #8
 8018e62:	46bd      	mov	sp, r7
 8018e64:	bd80      	pop	{r7, pc}
 8018e66:	bf00      	nop
 8018e68:	20003c94 	.word	0x20003c94
 8018e6c:	20003cc0 	.word	0x20003cc0
 8018e70:	20003ca8 	.word	0x20003ca8

08018e74 <prvDeleteTCB>:
 8018e74:	b580      	push	{r7, lr}
 8018e76:	b084      	sub	sp, #16
 8018e78:	af00      	add	r7, sp, #0
 8018e7a:	6078      	str	r0, [r7, #4]
 8018e7c:	687b      	ldr	r3, [r7, #4]
 8018e7e:	3358      	adds	r3, #88	@ 0x58
 8018e80:	4618      	mov	r0, r3
 8018e82:	f002 f887 	bl	801af94 <_reclaim_reent>
 8018e86:	687b      	ldr	r3, [r7, #4]
 8018e88:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018e8c:	2b00      	cmp	r3, #0
 8018e8e:	d108      	bne.n	8018ea2 <prvDeleteTCB+0x2e>
 8018e90:	687b      	ldr	r3, [r7, #4]
 8018e92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018e94:	4618      	mov	r0, r3
 8018e96:	f001 f8cf 	bl	801a038 <vPortFree>
 8018e9a:	6878      	ldr	r0, [r7, #4]
 8018e9c:	f001 f8cc 	bl	801a038 <vPortFree>
 8018ea0:	e019      	b.n	8018ed6 <prvDeleteTCB+0x62>
 8018ea2:	687b      	ldr	r3, [r7, #4]
 8018ea4:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018ea8:	2b01      	cmp	r3, #1
 8018eaa:	d103      	bne.n	8018eb4 <prvDeleteTCB+0x40>
 8018eac:	6878      	ldr	r0, [r7, #4]
 8018eae:	f001 f8c3 	bl	801a038 <vPortFree>
 8018eb2:	e010      	b.n	8018ed6 <prvDeleteTCB+0x62>
 8018eb4:	687b      	ldr	r3, [r7, #4]
 8018eb6:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018eba:	2b02      	cmp	r3, #2
 8018ebc:	d00b      	beq.n	8018ed6 <prvDeleteTCB+0x62>
 8018ebe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018ec2:	f383 8811 	msr	BASEPRI, r3
 8018ec6:	f3bf 8f6f 	isb	sy
 8018eca:	f3bf 8f4f 	dsb	sy
 8018ece:	60fb      	str	r3, [r7, #12]
 8018ed0:	bf00      	nop
 8018ed2:	bf00      	nop
 8018ed4:	e7fd      	b.n	8018ed2 <prvDeleteTCB+0x5e>
 8018ed6:	bf00      	nop
 8018ed8:	3710      	adds	r7, #16
 8018eda:	46bd      	mov	sp, r7
 8018edc:	bd80      	pop	{r7, pc}
	...

08018ee0 <prvResetNextTaskUnblockTime>:
 8018ee0:	b480      	push	{r7}
 8018ee2:	b083      	sub	sp, #12
 8018ee4:	af00      	add	r7, sp, #0
 8018ee6:	4b0c      	ldr	r3, [pc, #48]	@ (8018f18 <prvResetNextTaskUnblockTime+0x38>)
 8018ee8:	681b      	ldr	r3, [r3, #0]
 8018eea:	681b      	ldr	r3, [r3, #0]
 8018eec:	2b00      	cmp	r3, #0
 8018eee:	d104      	bne.n	8018efa <prvResetNextTaskUnblockTime+0x1a>
 8018ef0:	4b0a      	ldr	r3, [pc, #40]	@ (8018f1c <prvResetNextTaskUnblockTime+0x3c>)
 8018ef2:	f04f 32ff 	mov.w	r2, #4294967295
 8018ef6:	601a      	str	r2, [r3, #0]
 8018ef8:	e008      	b.n	8018f0c <prvResetNextTaskUnblockTime+0x2c>
 8018efa:	4b07      	ldr	r3, [pc, #28]	@ (8018f18 <prvResetNextTaskUnblockTime+0x38>)
 8018efc:	681b      	ldr	r3, [r3, #0]
 8018efe:	68db      	ldr	r3, [r3, #12]
 8018f00:	68db      	ldr	r3, [r3, #12]
 8018f02:	607b      	str	r3, [r7, #4]
 8018f04:	687b      	ldr	r3, [r7, #4]
 8018f06:	685b      	ldr	r3, [r3, #4]
 8018f08:	4a04      	ldr	r2, [pc, #16]	@ (8018f1c <prvResetNextTaskUnblockTime+0x3c>)
 8018f0a:	6013      	str	r3, [r2, #0]
 8018f0c:	bf00      	nop
 8018f0e:	370c      	adds	r7, #12
 8018f10:	46bd      	mov	sp, r7
 8018f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f16:	4770      	bx	lr
 8018f18:	20003c78 	.word	0x20003c78
 8018f1c:	20003ce0 	.word	0x20003ce0

08018f20 <xTaskGetSchedulerState>:
 8018f20:	b480      	push	{r7}
 8018f22:	b083      	sub	sp, #12
 8018f24:	af00      	add	r7, sp, #0
 8018f26:	4b0b      	ldr	r3, [pc, #44]	@ (8018f54 <xTaskGetSchedulerState+0x34>)
 8018f28:	681b      	ldr	r3, [r3, #0]
 8018f2a:	2b00      	cmp	r3, #0
 8018f2c:	d102      	bne.n	8018f34 <xTaskGetSchedulerState+0x14>
 8018f2e:	2301      	movs	r3, #1
 8018f30:	607b      	str	r3, [r7, #4]
 8018f32:	e008      	b.n	8018f46 <xTaskGetSchedulerState+0x26>
 8018f34:	4b08      	ldr	r3, [pc, #32]	@ (8018f58 <xTaskGetSchedulerState+0x38>)
 8018f36:	681b      	ldr	r3, [r3, #0]
 8018f38:	2b00      	cmp	r3, #0
 8018f3a:	d102      	bne.n	8018f42 <xTaskGetSchedulerState+0x22>
 8018f3c:	2302      	movs	r3, #2
 8018f3e:	607b      	str	r3, [r7, #4]
 8018f40:	e001      	b.n	8018f46 <xTaskGetSchedulerState+0x26>
 8018f42:	2300      	movs	r3, #0
 8018f44:	607b      	str	r3, [r7, #4]
 8018f46:	687b      	ldr	r3, [r7, #4]
 8018f48:	4618      	mov	r0, r3
 8018f4a:	370c      	adds	r7, #12
 8018f4c:	46bd      	mov	sp, r7
 8018f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018f52:	4770      	bx	lr
 8018f54:	20003ccc 	.word	0x20003ccc
 8018f58:	20003ce8 	.word	0x20003ce8

08018f5c <xTaskPriorityDisinherit>:
 8018f5c:	b580      	push	{r7, lr}
 8018f5e:	b086      	sub	sp, #24
 8018f60:	af00      	add	r7, sp, #0
 8018f62:	6078      	str	r0, [r7, #4]
 8018f64:	687b      	ldr	r3, [r7, #4]
 8018f66:	613b      	str	r3, [r7, #16]
 8018f68:	2300      	movs	r3, #0
 8018f6a:	617b      	str	r3, [r7, #20]
 8018f6c:	687b      	ldr	r3, [r7, #4]
 8018f6e:	2b00      	cmp	r3, #0
 8018f70:	d070      	beq.n	8019054 <xTaskPriorityDisinherit+0xf8>
 8018f72:	4b3b      	ldr	r3, [pc, #236]	@ (8019060 <xTaskPriorityDisinherit+0x104>)
 8018f74:	681b      	ldr	r3, [r3, #0]
 8018f76:	693a      	ldr	r2, [r7, #16]
 8018f78:	429a      	cmp	r2, r3
 8018f7a:	d00b      	beq.n	8018f94 <xTaskPriorityDisinherit+0x38>
 8018f7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018f80:	f383 8811 	msr	BASEPRI, r3
 8018f84:	f3bf 8f6f 	isb	sy
 8018f88:	f3bf 8f4f 	dsb	sy
 8018f8c:	60fb      	str	r3, [r7, #12]
 8018f8e:	bf00      	nop
 8018f90:	bf00      	nop
 8018f92:	e7fd      	b.n	8018f90 <xTaskPriorityDisinherit+0x34>
 8018f94:	693b      	ldr	r3, [r7, #16]
 8018f96:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018f98:	2b00      	cmp	r3, #0
 8018f9a:	d10b      	bne.n	8018fb4 <xTaskPriorityDisinherit+0x58>
 8018f9c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018fa0:	f383 8811 	msr	BASEPRI, r3
 8018fa4:	f3bf 8f6f 	isb	sy
 8018fa8:	f3bf 8f4f 	dsb	sy
 8018fac:	60bb      	str	r3, [r7, #8]
 8018fae:	bf00      	nop
 8018fb0:	bf00      	nop
 8018fb2:	e7fd      	b.n	8018fb0 <xTaskPriorityDisinherit+0x54>
 8018fb4:	693b      	ldr	r3, [r7, #16]
 8018fb6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018fb8:	1e5a      	subs	r2, r3, #1
 8018fba:	693b      	ldr	r3, [r7, #16]
 8018fbc:	651a      	str	r2, [r3, #80]	@ 0x50
 8018fbe:	693b      	ldr	r3, [r7, #16]
 8018fc0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018fc2:	693b      	ldr	r3, [r7, #16]
 8018fc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018fc6:	429a      	cmp	r2, r3
 8018fc8:	d044      	beq.n	8019054 <xTaskPriorityDisinherit+0xf8>
 8018fca:	693b      	ldr	r3, [r7, #16]
 8018fcc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018fce:	2b00      	cmp	r3, #0
 8018fd0:	d140      	bne.n	8019054 <xTaskPriorityDisinherit+0xf8>
 8018fd2:	693b      	ldr	r3, [r7, #16]
 8018fd4:	3304      	adds	r3, #4
 8018fd6:	4618      	mov	r0, r3
 8018fd8:	f7fe fa1e 	bl	8017418 <uxListRemove>
 8018fdc:	4603      	mov	r3, r0
 8018fde:	2b00      	cmp	r3, #0
 8018fe0:	d115      	bne.n	801900e <xTaskPriorityDisinherit+0xb2>
 8018fe2:	693b      	ldr	r3, [r7, #16]
 8018fe4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018fe6:	491f      	ldr	r1, [pc, #124]	@ (8019064 <xTaskPriorityDisinherit+0x108>)
 8018fe8:	4613      	mov	r3, r2
 8018fea:	009b      	lsls	r3, r3, #2
 8018fec:	4413      	add	r3, r2
 8018fee:	009b      	lsls	r3, r3, #2
 8018ff0:	440b      	add	r3, r1
 8018ff2:	681b      	ldr	r3, [r3, #0]
 8018ff4:	2b00      	cmp	r3, #0
 8018ff6:	d10a      	bne.n	801900e <xTaskPriorityDisinherit+0xb2>
 8018ff8:	693b      	ldr	r3, [r7, #16]
 8018ffa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ffc:	2201      	movs	r2, #1
 8018ffe:	fa02 f303 	lsl.w	r3, r2, r3
 8019002:	43da      	mvns	r2, r3
 8019004:	4b18      	ldr	r3, [pc, #96]	@ (8019068 <xTaskPriorityDisinherit+0x10c>)
 8019006:	681b      	ldr	r3, [r3, #0]
 8019008:	4013      	ands	r3, r2
 801900a:	4a17      	ldr	r2, [pc, #92]	@ (8019068 <xTaskPriorityDisinherit+0x10c>)
 801900c:	6013      	str	r3, [r2, #0]
 801900e:	693b      	ldr	r3, [r7, #16]
 8019010:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8019012:	693b      	ldr	r3, [r7, #16]
 8019014:	62da      	str	r2, [r3, #44]	@ 0x2c
 8019016:	693b      	ldr	r3, [r7, #16]
 8019018:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801901a:	f1c3 020f 	rsb	r2, r3, #15
 801901e:	693b      	ldr	r3, [r7, #16]
 8019020:	619a      	str	r2, [r3, #24]
 8019022:	693b      	ldr	r3, [r7, #16]
 8019024:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019026:	2201      	movs	r2, #1
 8019028:	409a      	lsls	r2, r3
 801902a:	4b0f      	ldr	r3, [pc, #60]	@ (8019068 <xTaskPriorityDisinherit+0x10c>)
 801902c:	681b      	ldr	r3, [r3, #0]
 801902e:	4313      	orrs	r3, r2
 8019030:	4a0d      	ldr	r2, [pc, #52]	@ (8019068 <xTaskPriorityDisinherit+0x10c>)
 8019032:	6013      	str	r3, [r2, #0]
 8019034:	693b      	ldr	r3, [r7, #16]
 8019036:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8019038:	4613      	mov	r3, r2
 801903a:	009b      	lsls	r3, r3, #2
 801903c:	4413      	add	r3, r2
 801903e:	009b      	lsls	r3, r3, #2
 8019040:	4a08      	ldr	r2, [pc, #32]	@ (8019064 <xTaskPriorityDisinherit+0x108>)
 8019042:	441a      	add	r2, r3
 8019044:	693b      	ldr	r3, [r7, #16]
 8019046:	3304      	adds	r3, #4
 8019048:	4619      	mov	r1, r3
 801904a:	4610      	mov	r0, r2
 801904c:	f7fe f987 	bl	801735e <vListInsertEnd>
 8019050:	2301      	movs	r3, #1
 8019052:	617b      	str	r3, [r7, #20]
 8019054:	697b      	ldr	r3, [r7, #20]
 8019056:	4618      	mov	r0, r3
 8019058:	3718      	adds	r7, #24
 801905a:	46bd      	mov	sp, r7
 801905c:	bd80      	pop	{r7, pc}
 801905e:	bf00      	nop
 8019060:	20003b20 	.word	0x20003b20
 8019064:	20003b24 	.word	0x20003b24
 8019068:	20003cc8 	.word	0x20003cc8

0801906c <ulTaskNotifyTake>:
 801906c:	b580      	push	{r7, lr}
 801906e:	b084      	sub	sp, #16
 8019070:	af00      	add	r7, sp, #0
 8019072:	6078      	str	r0, [r7, #4]
 8019074:	6039      	str	r1, [r7, #0]
 8019076:	f000 fdef 	bl	8019c58 <vPortEnterCritical>
 801907a:	4b20      	ldr	r3, [pc, #128]	@ (80190fc <ulTaskNotifyTake+0x90>)
 801907c:	681b      	ldr	r3, [r3, #0]
 801907e:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8019082:	2b00      	cmp	r3, #0
 8019084:	d113      	bne.n	80190ae <ulTaskNotifyTake+0x42>
 8019086:	4b1d      	ldr	r3, [pc, #116]	@ (80190fc <ulTaskNotifyTake+0x90>)
 8019088:	681b      	ldr	r3, [r3, #0]
 801908a:	2201      	movs	r2, #1
 801908c:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8019090:	683b      	ldr	r3, [r7, #0]
 8019092:	2b00      	cmp	r3, #0
 8019094:	d00b      	beq.n	80190ae <ulTaskNotifyTake+0x42>
 8019096:	2101      	movs	r1, #1
 8019098:	6838      	ldr	r0, [r7, #0]
 801909a:	f000 f8c9 	bl	8019230 <prvAddCurrentTaskToDelayedList>
 801909e:	4b18      	ldr	r3, [pc, #96]	@ (8019100 <ulTaskNotifyTake+0x94>)
 80190a0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80190a4:	601a      	str	r2, [r3, #0]
 80190a6:	f3bf 8f4f 	dsb	sy
 80190aa:	f3bf 8f6f 	isb	sy
 80190ae:	f000 fe05 	bl	8019cbc <vPortExitCritical>
 80190b2:	f000 fdd1 	bl	8019c58 <vPortEnterCritical>
 80190b6:	4b11      	ldr	r3, [pc, #68]	@ (80190fc <ulTaskNotifyTake+0x90>)
 80190b8:	681b      	ldr	r3, [r3, #0]
 80190ba:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 80190be:	60fb      	str	r3, [r7, #12]
 80190c0:	68fb      	ldr	r3, [r7, #12]
 80190c2:	2b00      	cmp	r3, #0
 80190c4:	d00e      	beq.n	80190e4 <ulTaskNotifyTake+0x78>
 80190c6:	687b      	ldr	r3, [r7, #4]
 80190c8:	2b00      	cmp	r3, #0
 80190ca:	d005      	beq.n	80190d8 <ulTaskNotifyTake+0x6c>
 80190cc:	4b0b      	ldr	r3, [pc, #44]	@ (80190fc <ulTaskNotifyTake+0x90>)
 80190ce:	681b      	ldr	r3, [r3, #0]
 80190d0:	2200      	movs	r2, #0
 80190d2:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 80190d6:	e005      	b.n	80190e4 <ulTaskNotifyTake+0x78>
 80190d8:	4b08      	ldr	r3, [pc, #32]	@ (80190fc <ulTaskNotifyTake+0x90>)
 80190da:	681b      	ldr	r3, [r3, #0]
 80190dc:	68fa      	ldr	r2, [r7, #12]
 80190de:	3a01      	subs	r2, #1
 80190e0:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 80190e4:	4b05      	ldr	r3, [pc, #20]	@ (80190fc <ulTaskNotifyTake+0x90>)
 80190e6:	681b      	ldr	r3, [r3, #0]
 80190e8:	2200      	movs	r2, #0
 80190ea:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 80190ee:	f000 fde5 	bl	8019cbc <vPortExitCritical>
 80190f2:	68fb      	ldr	r3, [r7, #12]
 80190f4:	4618      	mov	r0, r3
 80190f6:	3710      	adds	r7, #16
 80190f8:	46bd      	mov	sp, r7
 80190fa:	bd80      	pop	{r7, pc}
 80190fc:	20003b20 	.word	0x20003b20
 8019100:	e000ed04 	.word	0xe000ed04

08019104 <vTaskNotifyGiveFromISR>:
 8019104:	b580      	push	{r7, lr}
 8019106:	b08a      	sub	sp, #40	@ 0x28
 8019108:	af00      	add	r7, sp, #0
 801910a:	6078      	str	r0, [r7, #4]
 801910c:	6039      	str	r1, [r7, #0]
 801910e:	687b      	ldr	r3, [r7, #4]
 8019110:	2b00      	cmp	r3, #0
 8019112:	d10b      	bne.n	801912c <vTaskNotifyGiveFromISR+0x28>
 8019114:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019118:	f383 8811 	msr	BASEPRI, r3
 801911c:	f3bf 8f6f 	isb	sy
 8019120:	f3bf 8f4f 	dsb	sy
 8019124:	61bb      	str	r3, [r7, #24]
 8019126:	bf00      	nop
 8019128:	bf00      	nop
 801912a:	e7fd      	b.n	8019128 <vTaskNotifyGiveFromISR+0x24>
 801912c:	f000 fe74 	bl	8019e18 <vPortValidateInterruptPriority>
 8019130:	687b      	ldr	r3, [r7, #4]
 8019132:	627b      	str	r3, [r7, #36]	@ 0x24
 8019134:	f3ef 8211 	mrs	r2, BASEPRI
 8019138:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801913c:	f383 8811 	msr	BASEPRI, r3
 8019140:	f3bf 8f6f 	isb	sy
 8019144:	f3bf 8f4f 	dsb	sy
 8019148:	617a      	str	r2, [r7, #20]
 801914a:	613b      	str	r3, [r7, #16]
 801914c:	697b      	ldr	r3, [r7, #20]
 801914e:	623b      	str	r3, [r7, #32]
 8019150:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019152:	f893 317c 	ldrb.w	r3, [r3, #380]	@ 0x17c
 8019156:	77fb      	strb	r3, [r7, #31]
 8019158:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801915a:	2202      	movs	r2, #2
 801915c:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8019160:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019162:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8019166:	1c5a      	adds	r2, r3, #1
 8019168:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801916a:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801916e:	7ffb      	ldrb	r3, [r7, #31]
 8019170:	2b01      	cmp	r3, #1
 8019172:	d146      	bne.n	8019202 <vTaskNotifyGiveFromISR+0xfe>
 8019174:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019176:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019178:	2b00      	cmp	r3, #0
 801917a:	d00b      	beq.n	8019194 <vTaskNotifyGiveFromISR+0x90>
 801917c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019180:	f383 8811 	msr	BASEPRI, r3
 8019184:	f3bf 8f6f 	isb	sy
 8019188:	f3bf 8f4f 	dsb	sy
 801918c:	60fb      	str	r3, [r7, #12]
 801918e:	bf00      	nop
 8019190:	bf00      	nop
 8019192:	e7fd      	b.n	8019190 <vTaskNotifyGiveFromISR+0x8c>
 8019194:	4b20      	ldr	r3, [pc, #128]	@ (8019218 <vTaskNotifyGiveFromISR+0x114>)
 8019196:	681b      	ldr	r3, [r3, #0]
 8019198:	2b00      	cmp	r3, #0
 801919a:	d11c      	bne.n	80191d6 <vTaskNotifyGiveFromISR+0xd2>
 801919c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801919e:	3304      	adds	r3, #4
 80191a0:	4618      	mov	r0, r3
 80191a2:	f7fe f939 	bl	8017418 <uxListRemove>
 80191a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80191a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80191aa:	2201      	movs	r2, #1
 80191ac:	409a      	lsls	r2, r3
 80191ae:	4b1b      	ldr	r3, [pc, #108]	@ (801921c <vTaskNotifyGiveFromISR+0x118>)
 80191b0:	681b      	ldr	r3, [r3, #0]
 80191b2:	4313      	orrs	r3, r2
 80191b4:	4a19      	ldr	r2, [pc, #100]	@ (801921c <vTaskNotifyGiveFromISR+0x118>)
 80191b6:	6013      	str	r3, [r2, #0]
 80191b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80191ba:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80191bc:	4613      	mov	r3, r2
 80191be:	009b      	lsls	r3, r3, #2
 80191c0:	4413      	add	r3, r2
 80191c2:	009b      	lsls	r3, r3, #2
 80191c4:	4a16      	ldr	r2, [pc, #88]	@ (8019220 <vTaskNotifyGiveFromISR+0x11c>)
 80191c6:	441a      	add	r2, r3
 80191c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80191ca:	3304      	adds	r3, #4
 80191cc:	4619      	mov	r1, r3
 80191ce:	4610      	mov	r0, r2
 80191d0:	f7fe f8c5 	bl	801735e <vListInsertEnd>
 80191d4:	e005      	b.n	80191e2 <vTaskNotifyGiveFromISR+0xde>
 80191d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80191d8:	3318      	adds	r3, #24
 80191da:	4619      	mov	r1, r3
 80191dc:	4811      	ldr	r0, [pc, #68]	@ (8019224 <vTaskNotifyGiveFromISR+0x120>)
 80191de:	f7fe f8be 	bl	801735e <vListInsertEnd>
 80191e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80191e4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80191e6:	4b10      	ldr	r3, [pc, #64]	@ (8019228 <vTaskNotifyGiveFromISR+0x124>)
 80191e8:	681b      	ldr	r3, [r3, #0]
 80191ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80191ec:	429a      	cmp	r2, r3
 80191ee:	d908      	bls.n	8019202 <vTaskNotifyGiveFromISR+0xfe>
 80191f0:	683b      	ldr	r3, [r7, #0]
 80191f2:	2b00      	cmp	r3, #0
 80191f4:	d002      	beq.n	80191fc <vTaskNotifyGiveFromISR+0xf8>
 80191f6:	683b      	ldr	r3, [r7, #0]
 80191f8:	2201      	movs	r2, #1
 80191fa:	601a      	str	r2, [r3, #0]
 80191fc:	4b0b      	ldr	r3, [pc, #44]	@ (801922c <vTaskNotifyGiveFromISR+0x128>)
 80191fe:	2201      	movs	r2, #1
 8019200:	601a      	str	r2, [r3, #0]
 8019202:	6a3b      	ldr	r3, [r7, #32]
 8019204:	60bb      	str	r3, [r7, #8]
 8019206:	68bb      	ldr	r3, [r7, #8]
 8019208:	f383 8811 	msr	BASEPRI, r3
 801920c:	bf00      	nop
 801920e:	bf00      	nop
 8019210:	3728      	adds	r7, #40	@ 0x28
 8019212:	46bd      	mov	sp, r7
 8019214:	bd80      	pop	{r7, pc}
 8019216:	bf00      	nop
 8019218:	20003ce8 	.word	0x20003ce8
 801921c:	20003cc8 	.word	0x20003cc8
 8019220:	20003b24 	.word	0x20003b24
 8019224:	20003c80 	.word	0x20003c80
 8019228:	20003b20 	.word	0x20003b20
 801922c:	20003cd4 	.word	0x20003cd4

08019230 <prvAddCurrentTaskToDelayedList>:
 8019230:	b580      	push	{r7, lr}
 8019232:	b084      	sub	sp, #16
 8019234:	af00      	add	r7, sp, #0
 8019236:	6078      	str	r0, [r7, #4]
 8019238:	6039      	str	r1, [r7, #0]
 801923a:	4b29      	ldr	r3, [pc, #164]	@ (80192e0 <prvAddCurrentTaskToDelayedList+0xb0>)
 801923c:	681b      	ldr	r3, [r3, #0]
 801923e:	60fb      	str	r3, [r7, #12]
 8019240:	4b28      	ldr	r3, [pc, #160]	@ (80192e4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019242:	681b      	ldr	r3, [r3, #0]
 8019244:	3304      	adds	r3, #4
 8019246:	4618      	mov	r0, r3
 8019248:	f7fe f8e6 	bl	8017418 <uxListRemove>
 801924c:	4603      	mov	r3, r0
 801924e:	2b00      	cmp	r3, #0
 8019250:	d10b      	bne.n	801926a <prvAddCurrentTaskToDelayedList+0x3a>
 8019252:	4b24      	ldr	r3, [pc, #144]	@ (80192e4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019254:	681b      	ldr	r3, [r3, #0]
 8019256:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019258:	2201      	movs	r2, #1
 801925a:	fa02 f303 	lsl.w	r3, r2, r3
 801925e:	43da      	mvns	r2, r3
 8019260:	4b21      	ldr	r3, [pc, #132]	@ (80192e8 <prvAddCurrentTaskToDelayedList+0xb8>)
 8019262:	681b      	ldr	r3, [r3, #0]
 8019264:	4013      	ands	r3, r2
 8019266:	4a20      	ldr	r2, [pc, #128]	@ (80192e8 <prvAddCurrentTaskToDelayedList+0xb8>)
 8019268:	6013      	str	r3, [r2, #0]
 801926a:	687b      	ldr	r3, [r7, #4]
 801926c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8019270:	d10a      	bne.n	8019288 <prvAddCurrentTaskToDelayedList+0x58>
 8019272:	683b      	ldr	r3, [r7, #0]
 8019274:	2b00      	cmp	r3, #0
 8019276:	d007      	beq.n	8019288 <prvAddCurrentTaskToDelayedList+0x58>
 8019278:	4b1a      	ldr	r3, [pc, #104]	@ (80192e4 <prvAddCurrentTaskToDelayedList+0xb4>)
 801927a:	681b      	ldr	r3, [r3, #0]
 801927c:	3304      	adds	r3, #4
 801927e:	4619      	mov	r1, r3
 8019280:	481a      	ldr	r0, [pc, #104]	@ (80192ec <prvAddCurrentTaskToDelayedList+0xbc>)
 8019282:	f7fe f86c 	bl	801735e <vListInsertEnd>
 8019286:	e026      	b.n	80192d6 <prvAddCurrentTaskToDelayedList+0xa6>
 8019288:	68fa      	ldr	r2, [r7, #12]
 801928a:	687b      	ldr	r3, [r7, #4]
 801928c:	4413      	add	r3, r2
 801928e:	60bb      	str	r3, [r7, #8]
 8019290:	4b14      	ldr	r3, [pc, #80]	@ (80192e4 <prvAddCurrentTaskToDelayedList+0xb4>)
 8019292:	681b      	ldr	r3, [r3, #0]
 8019294:	68ba      	ldr	r2, [r7, #8]
 8019296:	605a      	str	r2, [r3, #4]
 8019298:	68ba      	ldr	r2, [r7, #8]
 801929a:	68fb      	ldr	r3, [r7, #12]
 801929c:	429a      	cmp	r2, r3
 801929e:	d209      	bcs.n	80192b4 <prvAddCurrentTaskToDelayedList+0x84>
 80192a0:	4b13      	ldr	r3, [pc, #76]	@ (80192f0 <prvAddCurrentTaskToDelayedList+0xc0>)
 80192a2:	681a      	ldr	r2, [r3, #0]
 80192a4:	4b0f      	ldr	r3, [pc, #60]	@ (80192e4 <prvAddCurrentTaskToDelayedList+0xb4>)
 80192a6:	681b      	ldr	r3, [r3, #0]
 80192a8:	3304      	adds	r3, #4
 80192aa:	4619      	mov	r1, r3
 80192ac:	4610      	mov	r0, r2
 80192ae:	f7fe f87a 	bl	80173a6 <vListInsert>
 80192b2:	e010      	b.n	80192d6 <prvAddCurrentTaskToDelayedList+0xa6>
 80192b4:	4b0f      	ldr	r3, [pc, #60]	@ (80192f4 <prvAddCurrentTaskToDelayedList+0xc4>)
 80192b6:	681a      	ldr	r2, [r3, #0]
 80192b8:	4b0a      	ldr	r3, [pc, #40]	@ (80192e4 <prvAddCurrentTaskToDelayedList+0xb4>)
 80192ba:	681b      	ldr	r3, [r3, #0]
 80192bc:	3304      	adds	r3, #4
 80192be:	4619      	mov	r1, r3
 80192c0:	4610      	mov	r0, r2
 80192c2:	f7fe f870 	bl	80173a6 <vListInsert>
 80192c6:	4b0c      	ldr	r3, [pc, #48]	@ (80192f8 <prvAddCurrentTaskToDelayedList+0xc8>)
 80192c8:	681b      	ldr	r3, [r3, #0]
 80192ca:	68ba      	ldr	r2, [r7, #8]
 80192cc:	429a      	cmp	r2, r3
 80192ce:	d202      	bcs.n	80192d6 <prvAddCurrentTaskToDelayedList+0xa6>
 80192d0:	4a09      	ldr	r2, [pc, #36]	@ (80192f8 <prvAddCurrentTaskToDelayedList+0xc8>)
 80192d2:	68bb      	ldr	r3, [r7, #8]
 80192d4:	6013      	str	r3, [r2, #0]
 80192d6:	bf00      	nop
 80192d8:	3710      	adds	r7, #16
 80192da:	46bd      	mov	sp, r7
 80192dc:	bd80      	pop	{r7, pc}
 80192de:	bf00      	nop
 80192e0:	20003cc4 	.word	0x20003cc4
 80192e4:	20003b20 	.word	0x20003b20
 80192e8:	20003cc8 	.word	0x20003cc8
 80192ec:	20003cac 	.word	0x20003cac
 80192f0:	20003c7c 	.word	0x20003c7c
 80192f4:	20003c78 	.word	0x20003c78
 80192f8:	20003ce0 	.word	0x20003ce0

080192fc <xTimerCreateTimerTask>:
 80192fc:	b580      	push	{r7, lr}
 80192fe:	b08a      	sub	sp, #40	@ 0x28
 8019300:	af04      	add	r7, sp, #16
 8019302:	2300      	movs	r3, #0
 8019304:	617b      	str	r3, [r7, #20]
 8019306:	f000 fb13 	bl	8019930 <prvCheckForValidListAndQueue>
 801930a:	4b1d      	ldr	r3, [pc, #116]	@ (8019380 <xTimerCreateTimerTask+0x84>)
 801930c:	681b      	ldr	r3, [r3, #0]
 801930e:	2b00      	cmp	r3, #0
 8019310:	d021      	beq.n	8019356 <xTimerCreateTimerTask+0x5a>
 8019312:	2300      	movs	r3, #0
 8019314:	60fb      	str	r3, [r7, #12]
 8019316:	2300      	movs	r3, #0
 8019318:	60bb      	str	r3, [r7, #8]
 801931a:	1d3a      	adds	r2, r7, #4
 801931c:	f107 0108 	add.w	r1, r7, #8
 8019320:	f107 030c 	add.w	r3, r7, #12
 8019324:	4618      	mov	r0, r3
 8019326:	f7e9 ff41 	bl	80031ac <vApplicationGetTimerTaskMemory>
 801932a:	6879      	ldr	r1, [r7, #4]
 801932c:	68bb      	ldr	r3, [r7, #8]
 801932e:	68fa      	ldr	r2, [r7, #12]
 8019330:	9202      	str	r2, [sp, #8]
 8019332:	9301      	str	r3, [sp, #4]
 8019334:	2302      	movs	r3, #2
 8019336:	9300      	str	r3, [sp, #0]
 8019338:	2300      	movs	r3, #0
 801933a:	460a      	mov	r2, r1
 801933c:	4911      	ldr	r1, [pc, #68]	@ (8019384 <xTimerCreateTimerTask+0x88>)
 801933e:	4812      	ldr	r0, [pc, #72]	@ (8019388 <xTimerCreateTimerTask+0x8c>)
 8019340:	f7fe fe5a 	bl	8017ff8 <xTaskCreateStatic>
 8019344:	4603      	mov	r3, r0
 8019346:	4a11      	ldr	r2, [pc, #68]	@ (801938c <xTimerCreateTimerTask+0x90>)
 8019348:	6013      	str	r3, [r2, #0]
 801934a:	4b10      	ldr	r3, [pc, #64]	@ (801938c <xTimerCreateTimerTask+0x90>)
 801934c:	681b      	ldr	r3, [r3, #0]
 801934e:	2b00      	cmp	r3, #0
 8019350:	d001      	beq.n	8019356 <xTimerCreateTimerTask+0x5a>
 8019352:	2301      	movs	r3, #1
 8019354:	617b      	str	r3, [r7, #20]
 8019356:	697b      	ldr	r3, [r7, #20]
 8019358:	2b00      	cmp	r3, #0
 801935a:	d10b      	bne.n	8019374 <xTimerCreateTimerTask+0x78>
 801935c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019360:	f383 8811 	msr	BASEPRI, r3
 8019364:	f3bf 8f6f 	isb	sy
 8019368:	f3bf 8f4f 	dsb	sy
 801936c:	613b      	str	r3, [r7, #16]
 801936e:	bf00      	nop
 8019370:	bf00      	nop
 8019372:	e7fd      	b.n	8019370 <xTimerCreateTimerTask+0x74>
 8019374:	697b      	ldr	r3, [r7, #20]
 8019376:	4618      	mov	r0, r3
 8019378:	3718      	adds	r7, #24
 801937a:	46bd      	mov	sp, r7
 801937c:	bd80      	pop	{r7, pc}
 801937e:	bf00      	nop
 8019380:	20003d24 	.word	0x20003d24
 8019384:	080210bc 	.word	0x080210bc
 8019388:	080194c9 	.word	0x080194c9
 801938c:	20003d28 	.word	0x20003d28

08019390 <xTimerGenericCommand>:
 8019390:	b580      	push	{r7, lr}
 8019392:	b08a      	sub	sp, #40	@ 0x28
 8019394:	af00      	add	r7, sp, #0
 8019396:	60f8      	str	r0, [r7, #12]
 8019398:	60b9      	str	r1, [r7, #8]
 801939a:	607a      	str	r2, [r7, #4]
 801939c:	603b      	str	r3, [r7, #0]
 801939e:	2300      	movs	r3, #0
 80193a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80193a2:	68fb      	ldr	r3, [r7, #12]
 80193a4:	2b00      	cmp	r3, #0
 80193a6:	d10b      	bne.n	80193c0 <xTimerGenericCommand+0x30>
 80193a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80193ac:	f383 8811 	msr	BASEPRI, r3
 80193b0:	f3bf 8f6f 	isb	sy
 80193b4:	f3bf 8f4f 	dsb	sy
 80193b8:	623b      	str	r3, [r7, #32]
 80193ba:	bf00      	nop
 80193bc:	bf00      	nop
 80193be:	e7fd      	b.n	80193bc <xTimerGenericCommand+0x2c>
 80193c0:	4b19      	ldr	r3, [pc, #100]	@ (8019428 <xTimerGenericCommand+0x98>)
 80193c2:	681b      	ldr	r3, [r3, #0]
 80193c4:	2b00      	cmp	r3, #0
 80193c6:	d02a      	beq.n	801941e <xTimerGenericCommand+0x8e>
 80193c8:	68bb      	ldr	r3, [r7, #8]
 80193ca:	613b      	str	r3, [r7, #16]
 80193cc:	687b      	ldr	r3, [r7, #4]
 80193ce:	617b      	str	r3, [r7, #20]
 80193d0:	68fb      	ldr	r3, [r7, #12]
 80193d2:	61bb      	str	r3, [r7, #24]
 80193d4:	68bb      	ldr	r3, [r7, #8]
 80193d6:	2b05      	cmp	r3, #5
 80193d8:	dc18      	bgt.n	801940c <xTimerGenericCommand+0x7c>
 80193da:	f7ff fda1 	bl	8018f20 <xTaskGetSchedulerState>
 80193de:	4603      	mov	r3, r0
 80193e0:	2b02      	cmp	r3, #2
 80193e2:	d109      	bne.n	80193f8 <xTimerGenericCommand+0x68>
 80193e4:	4b10      	ldr	r3, [pc, #64]	@ (8019428 <xTimerGenericCommand+0x98>)
 80193e6:	6818      	ldr	r0, [r3, #0]
 80193e8:	f107 0110 	add.w	r1, r7, #16
 80193ec:	2300      	movs	r3, #0
 80193ee:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80193f0:	f7fe f982 	bl	80176f8 <xQueueGenericSend>
 80193f4:	6278      	str	r0, [r7, #36]	@ 0x24
 80193f6:	e012      	b.n	801941e <xTimerGenericCommand+0x8e>
 80193f8:	4b0b      	ldr	r3, [pc, #44]	@ (8019428 <xTimerGenericCommand+0x98>)
 80193fa:	6818      	ldr	r0, [r3, #0]
 80193fc:	f107 0110 	add.w	r1, r7, #16
 8019400:	2300      	movs	r3, #0
 8019402:	2200      	movs	r2, #0
 8019404:	f7fe f978 	bl	80176f8 <xQueueGenericSend>
 8019408:	6278      	str	r0, [r7, #36]	@ 0x24
 801940a:	e008      	b.n	801941e <xTimerGenericCommand+0x8e>
 801940c:	4b06      	ldr	r3, [pc, #24]	@ (8019428 <xTimerGenericCommand+0x98>)
 801940e:	6818      	ldr	r0, [r3, #0]
 8019410:	f107 0110 	add.w	r1, r7, #16
 8019414:	2300      	movs	r3, #0
 8019416:	683a      	ldr	r2, [r7, #0]
 8019418:	f7fe fa70 	bl	80178fc <xQueueGenericSendFromISR>
 801941c:	6278      	str	r0, [r7, #36]	@ 0x24
 801941e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019420:	4618      	mov	r0, r3
 8019422:	3728      	adds	r7, #40	@ 0x28
 8019424:	46bd      	mov	sp, r7
 8019426:	bd80      	pop	{r7, pc}
 8019428:	20003d24 	.word	0x20003d24

0801942c <prvProcessExpiredTimer>:
 801942c:	b580      	push	{r7, lr}
 801942e:	b088      	sub	sp, #32
 8019430:	af02      	add	r7, sp, #8
 8019432:	6078      	str	r0, [r7, #4]
 8019434:	6039      	str	r1, [r7, #0]
 8019436:	4b23      	ldr	r3, [pc, #140]	@ (80194c4 <prvProcessExpiredTimer+0x98>)
 8019438:	681b      	ldr	r3, [r3, #0]
 801943a:	68db      	ldr	r3, [r3, #12]
 801943c:	68db      	ldr	r3, [r3, #12]
 801943e:	617b      	str	r3, [r7, #20]
 8019440:	697b      	ldr	r3, [r7, #20]
 8019442:	3304      	adds	r3, #4
 8019444:	4618      	mov	r0, r3
 8019446:	f7fd ffe7 	bl	8017418 <uxListRemove>
 801944a:	697b      	ldr	r3, [r7, #20]
 801944c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019450:	f003 0304 	and.w	r3, r3, #4
 8019454:	2b00      	cmp	r3, #0
 8019456:	d023      	beq.n	80194a0 <prvProcessExpiredTimer+0x74>
 8019458:	697b      	ldr	r3, [r7, #20]
 801945a:	699a      	ldr	r2, [r3, #24]
 801945c:	687b      	ldr	r3, [r7, #4]
 801945e:	18d1      	adds	r1, r2, r3
 8019460:	687b      	ldr	r3, [r7, #4]
 8019462:	683a      	ldr	r2, [r7, #0]
 8019464:	6978      	ldr	r0, [r7, #20]
 8019466:	f000 f8d5 	bl	8019614 <prvInsertTimerInActiveList>
 801946a:	4603      	mov	r3, r0
 801946c:	2b00      	cmp	r3, #0
 801946e:	d020      	beq.n	80194b2 <prvProcessExpiredTimer+0x86>
 8019470:	2300      	movs	r3, #0
 8019472:	9300      	str	r3, [sp, #0]
 8019474:	2300      	movs	r3, #0
 8019476:	687a      	ldr	r2, [r7, #4]
 8019478:	2100      	movs	r1, #0
 801947a:	6978      	ldr	r0, [r7, #20]
 801947c:	f7ff ff88 	bl	8019390 <xTimerGenericCommand>
 8019480:	6138      	str	r0, [r7, #16]
 8019482:	693b      	ldr	r3, [r7, #16]
 8019484:	2b00      	cmp	r3, #0
 8019486:	d114      	bne.n	80194b2 <prvProcessExpiredTimer+0x86>
 8019488:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801948c:	f383 8811 	msr	BASEPRI, r3
 8019490:	f3bf 8f6f 	isb	sy
 8019494:	f3bf 8f4f 	dsb	sy
 8019498:	60fb      	str	r3, [r7, #12]
 801949a:	bf00      	nop
 801949c:	bf00      	nop
 801949e:	e7fd      	b.n	801949c <prvProcessExpiredTimer+0x70>
 80194a0:	697b      	ldr	r3, [r7, #20]
 80194a2:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80194a6:	f023 0301 	bic.w	r3, r3, #1
 80194aa:	b2da      	uxtb	r2, r3
 80194ac:	697b      	ldr	r3, [r7, #20]
 80194ae:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80194b2:	697b      	ldr	r3, [r7, #20]
 80194b4:	6a1b      	ldr	r3, [r3, #32]
 80194b6:	6978      	ldr	r0, [r7, #20]
 80194b8:	4798      	blx	r3
 80194ba:	bf00      	nop
 80194bc:	3718      	adds	r7, #24
 80194be:	46bd      	mov	sp, r7
 80194c0:	bd80      	pop	{r7, pc}
 80194c2:	bf00      	nop
 80194c4:	20003d1c 	.word	0x20003d1c

080194c8 <prvTimerTask>:
 80194c8:	b580      	push	{r7, lr}
 80194ca:	b084      	sub	sp, #16
 80194cc:	af00      	add	r7, sp, #0
 80194ce:	6078      	str	r0, [r7, #4]
 80194d0:	f107 0308 	add.w	r3, r7, #8
 80194d4:	4618      	mov	r0, r3
 80194d6:	f000 f859 	bl	801958c <prvGetNextExpireTime>
 80194da:	60f8      	str	r0, [r7, #12]
 80194dc:	68bb      	ldr	r3, [r7, #8]
 80194de:	4619      	mov	r1, r3
 80194e0:	68f8      	ldr	r0, [r7, #12]
 80194e2:	f000 f805 	bl	80194f0 <prvProcessTimerOrBlockTask>
 80194e6:	f000 f8d7 	bl	8019698 <prvProcessReceivedCommands>
 80194ea:	bf00      	nop
 80194ec:	e7f0      	b.n	80194d0 <prvTimerTask+0x8>
	...

080194f0 <prvProcessTimerOrBlockTask>:
 80194f0:	b580      	push	{r7, lr}
 80194f2:	b084      	sub	sp, #16
 80194f4:	af00      	add	r7, sp, #0
 80194f6:	6078      	str	r0, [r7, #4]
 80194f8:	6039      	str	r1, [r7, #0]
 80194fa:	f7ff f88f 	bl	801861c <vTaskSuspendAll>
 80194fe:	f107 0308 	add.w	r3, r7, #8
 8019502:	4618      	mov	r0, r3
 8019504:	f000 f866 	bl	80195d4 <prvSampleTimeNow>
 8019508:	60f8      	str	r0, [r7, #12]
 801950a:	68bb      	ldr	r3, [r7, #8]
 801950c:	2b00      	cmp	r3, #0
 801950e:	d130      	bne.n	8019572 <prvProcessTimerOrBlockTask+0x82>
 8019510:	683b      	ldr	r3, [r7, #0]
 8019512:	2b00      	cmp	r3, #0
 8019514:	d10a      	bne.n	801952c <prvProcessTimerOrBlockTask+0x3c>
 8019516:	687a      	ldr	r2, [r7, #4]
 8019518:	68fb      	ldr	r3, [r7, #12]
 801951a:	429a      	cmp	r2, r3
 801951c:	d806      	bhi.n	801952c <prvProcessTimerOrBlockTask+0x3c>
 801951e:	f7ff f88b 	bl	8018638 <xTaskResumeAll>
 8019522:	68f9      	ldr	r1, [r7, #12]
 8019524:	6878      	ldr	r0, [r7, #4]
 8019526:	f7ff ff81 	bl	801942c <prvProcessExpiredTimer>
 801952a:	e024      	b.n	8019576 <prvProcessTimerOrBlockTask+0x86>
 801952c:	683b      	ldr	r3, [r7, #0]
 801952e:	2b00      	cmp	r3, #0
 8019530:	d008      	beq.n	8019544 <prvProcessTimerOrBlockTask+0x54>
 8019532:	4b13      	ldr	r3, [pc, #76]	@ (8019580 <prvProcessTimerOrBlockTask+0x90>)
 8019534:	681b      	ldr	r3, [r3, #0]
 8019536:	681b      	ldr	r3, [r3, #0]
 8019538:	2b00      	cmp	r3, #0
 801953a:	d101      	bne.n	8019540 <prvProcessTimerOrBlockTask+0x50>
 801953c:	2301      	movs	r3, #1
 801953e:	e000      	b.n	8019542 <prvProcessTimerOrBlockTask+0x52>
 8019540:	2300      	movs	r3, #0
 8019542:	603b      	str	r3, [r7, #0]
 8019544:	4b0f      	ldr	r3, [pc, #60]	@ (8019584 <prvProcessTimerOrBlockTask+0x94>)
 8019546:	6818      	ldr	r0, [r3, #0]
 8019548:	687a      	ldr	r2, [r7, #4]
 801954a:	68fb      	ldr	r3, [r7, #12]
 801954c:	1ad3      	subs	r3, r2, r3
 801954e:	683a      	ldr	r2, [r7, #0]
 8019550:	4619      	mov	r1, r3
 8019552:	f7fe fd1d 	bl	8017f90 <vQueueWaitForMessageRestricted>
 8019556:	f7ff f86f 	bl	8018638 <xTaskResumeAll>
 801955a:	4603      	mov	r3, r0
 801955c:	2b00      	cmp	r3, #0
 801955e:	d10a      	bne.n	8019576 <prvProcessTimerOrBlockTask+0x86>
 8019560:	4b09      	ldr	r3, [pc, #36]	@ (8019588 <prvProcessTimerOrBlockTask+0x98>)
 8019562:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8019566:	601a      	str	r2, [r3, #0]
 8019568:	f3bf 8f4f 	dsb	sy
 801956c:	f3bf 8f6f 	isb	sy
 8019570:	e001      	b.n	8019576 <prvProcessTimerOrBlockTask+0x86>
 8019572:	f7ff f861 	bl	8018638 <xTaskResumeAll>
 8019576:	bf00      	nop
 8019578:	3710      	adds	r7, #16
 801957a:	46bd      	mov	sp, r7
 801957c:	bd80      	pop	{r7, pc}
 801957e:	bf00      	nop
 8019580:	20003d20 	.word	0x20003d20
 8019584:	20003d24 	.word	0x20003d24
 8019588:	e000ed04 	.word	0xe000ed04

0801958c <prvGetNextExpireTime>:
 801958c:	b480      	push	{r7}
 801958e:	b085      	sub	sp, #20
 8019590:	af00      	add	r7, sp, #0
 8019592:	6078      	str	r0, [r7, #4]
 8019594:	4b0e      	ldr	r3, [pc, #56]	@ (80195d0 <prvGetNextExpireTime+0x44>)
 8019596:	681b      	ldr	r3, [r3, #0]
 8019598:	681b      	ldr	r3, [r3, #0]
 801959a:	2b00      	cmp	r3, #0
 801959c:	d101      	bne.n	80195a2 <prvGetNextExpireTime+0x16>
 801959e:	2201      	movs	r2, #1
 80195a0:	e000      	b.n	80195a4 <prvGetNextExpireTime+0x18>
 80195a2:	2200      	movs	r2, #0
 80195a4:	687b      	ldr	r3, [r7, #4]
 80195a6:	601a      	str	r2, [r3, #0]
 80195a8:	687b      	ldr	r3, [r7, #4]
 80195aa:	681b      	ldr	r3, [r3, #0]
 80195ac:	2b00      	cmp	r3, #0
 80195ae:	d105      	bne.n	80195bc <prvGetNextExpireTime+0x30>
 80195b0:	4b07      	ldr	r3, [pc, #28]	@ (80195d0 <prvGetNextExpireTime+0x44>)
 80195b2:	681b      	ldr	r3, [r3, #0]
 80195b4:	68db      	ldr	r3, [r3, #12]
 80195b6:	681b      	ldr	r3, [r3, #0]
 80195b8:	60fb      	str	r3, [r7, #12]
 80195ba:	e001      	b.n	80195c0 <prvGetNextExpireTime+0x34>
 80195bc:	2300      	movs	r3, #0
 80195be:	60fb      	str	r3, [r7, #12]
 80195c0:	68fb      	ldr	r3, [r7, #12]
 80195c2:	4618      	mov	r0, r3
 80195c4:	3714      	adds	r7, #20
 80195c6:	46bd      	mov	sp, r7
 80195c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80195cc:	4770      	bx	lr
 80195ce:	bf00      	nop
 80195d0:	20003d1c 	.word	0x20003d1c

080195d4 <prvSampleTimeNow>:
 80195d4:	b580      	push	{r7, lr}
 80195d6:	b084      	sub	sp, #16
 80195d8:	af00      	add	r7, sp, #0
 80195da:	6078      	str	r0, [r7, #4]
 80195dc:	f7ff f8ca 	bl	8018774 <xTaskGetTickCount>
 80195e0:	60f8      	str	r0, [r7, #12]
 80195e2:	4b0b      	ldr	r3, [pc, #44]	@ (8019610 <prvSampleTimeNow+0x3c>)
 80195e4:	681b      	ldr	r3, [r3, #0]
 80195e6:	68fa      	ldr	r2, [r7, #12]
 80195e8:	429a      	cmp	r2, r3
 80195ea:	d205      	bcs.n	80195f8 <prvSampleTimeNow+0x24>
 80195ec:	f000 f93a 	bl	8019864 <prvSwitchTimerLists>
 80195f0:	687b      	ldr	r3, [r7, #4]
 80195f2:	2201      	movs	r2, #1
 80195f4:	601a      	str	r2, [r3, #0]
 80195f6:	e002      	b.n	80195fe <prvSampleTimeNow+0x2a>
 80195f8:	687b      	ldr	r3, [r7, #4]
 80195fa:	2200      	movs	r2, #0
 80195fc:	601a      	str	r2, [r3, #0]
 80195fe:	4a04      	ldr	r2, [pc, #16]	@ (8019610 <prvSampleTimeNow+0x3c>)
 8019600:	68fb      	ldr	r3, [r7, #12]
 8019602:	6013      	str	r3, [r2, #0]
 8019604:	68fb      	ldr	r3, [r7, #12]
 8019606:	4618      	mov	r0, r3
 8019608:	3710      	adds	r7, #16
 801960a:	46bd      	mov	sp, r7
 801960c:	bd80      	pop	{r7, pc}
 801960e:	bf00      	nop
 8019610:	20003d2c 	.word	0x20003d2c

08019614 <prvInsertTimerInActiveList>:
 8019614:	b580      	push	{r7, lr}
 8019616:	b086      	sub	sp, #24
 8019618:	af00      	add	r7, sp, #0
 801961a:	60f8      	str	r0, [r7, #12]
 801961c:	60b9      	str	r1, [r7, #8]
 801961e:	607a      	str	r2, [r7, #4]
 8019620:	603b      	str	r3, [r7, #0]
 8019622:	2300      	movs	r3, #0
 8019624:	617b      	str	r3, [r7, #20]
 8019626:	68fb      	ldr	r3, [r7, #12]
 8019628:	68ba      	ldr	r2, [r7, #8]
 801962a:	605a      	str	r2, [r3, #4]
 801962c:	68fb      	ldr	r3, [r7, #12]
 801962e:	68fa      	ldr	r2, [r7, #12]
 8019630:	611a      	str	r2, [r3, #16]
 8019632:	68ba      	ldr	r2, [r7, #8]
 8019634:	687b      	ldr	r3, [r7, #4]
 8019636:	429a      	cmp	r2, r3
 8019638:	d812      	bhi.n	8019660 <prvInsertTimerInActiveList+0x4c>
 801963a:	687a      	ldr	r2, [r7, #4]
 801963c:	683b      	ldr	r3, [r7, #0]
 801963e:	1ad2      	subs	r2, r2, r3
 8019640:	68fb      	ldr	r3, [r7, #12]
 8019642:	699b      	ldr	r3, [r3, #24]
 8019644:	429a      	cmp	r2, r3
 8019646:	d302      	bcc.n	801964e <prvInsertTimerInActiveList+0x3a>
 8019648:	2301      	movs	r3, #1
 801964a:	617b      	str	r3, [r7, #20]
 801964c:	e01b      	b.n	8019686 <prvInsertTimerInActiveList+0x72>
 801964e:	4b10      	ldr	r3, [pc, #64]	@ (8019690 <prvInsertTimerInActiveList+0x7c>)
 8019650:	681a      	ldr	r2, [r3, #0]
 8019652:	68fb      	ldr	r3, [r7, #12]
 8019654:	3304      	adds	r3, #4
 8019656:	4619      	mov	r1, r3
 8019658:	4610      	mov	r0, r2
 801965a:	f7fd fea4 	bl	80173a6 <vListInsert>
 801965e:	e012      	b.n	8019686 <prvInsertTimerInActiveList+0x72>
 8019660:	687a      	ldr	r2, [r7, #4]
 8019662:	683b      	ldr	r3, [r7, #0]
 8019664:	429a      	cmp	r2, r3
 8019666:	d206      	bcs.n	8019676 <prvInsertTimerInActiveList+0x62>
 8019668:	68ba      	ldr	r2, [r7, #8]
 801966a:	683b      	ldr	r3, [r7, #0]
 801966c:	429a      	cmp	r2, r3
 801966e:	d302      	bcc.n	8019676 <prvInsertTimerInActiveList+0x62>
 8019670:	2301      	movs	r3, #1
 8019672:	617b      	str	r3, [r7, #20]
 8019674:	e007      	b.n	8019686 <prvInsertTimerInActiveList+0x72>
 8019676:	4b07      	ldr	r3, [pc, #28]	@ (8019694 <prvInsertTimerInActiveList+0x80>)
 8019678:	681a      	ldr	r2, [r3, #0]
 801967a:	68fb      	ldr	r3, [r7, #12]
 801967c:	3304      	adds	r3, #4
 801967e:	4619      	mov	r1, r3
 8019680:	4610      	mov	r0, r2
 8019682:	f7fd fe90 	bl	80173a6 <vListInsert>
 8019686:	697b      	ldr	r3, [r7, #20]
 8019688:	4618      	mov	r0, r3
 801968a:	3718      	adds	r7, #24
 801968c:	46bd      	mov	sp, r7
 801968e:	bd80      	pop	{r7, pc}
 8019690:	20003d20 	.word	0x20003d20
 8019694:	20003d1c 	.word	0x20003d1c

08019698 <prvProcessReceivedCommands>:
 8019698:	b580      	push	{r7, lr}
 801969a:	b08e      	sub	sp, #56	@ 0x38
 801969c:	af02      	add	r7, sp, #8
 801969e:	e0ce      	b.n	801983e <prvProcessReceivedCommands+0x1a6>
 80196a0:	687b      	ldr	r3, [r7, #4]
 80196a2:	2b00      	cmp	r3, #0
 80196a4:	da19      	bge.n	80196da <prvProcessReceivedCommands+0x42>
 80196a6:	1d3b      	adds	r3, r7, #4
 80196a8:	3304      	adds	r3, #4
 80196aa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80196ac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80196ae:	2b00      	cmp	r3, #0
 80196b0:	d10b      	bne.n	80196ca <prvProcessReceivedCommands+0x32>
 80196b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80196b6:	f383 8811 	msr	BASEPRI, r3
 80196ba:	f3bf 8f6f 	isb	sy
 80196be:	f3bf 8f4f 	dsb	sy
 80196c2:	61fb      	str	r3, [r7, #28]
 80196c4:	bf00      	nop
 80196c6:	bf00      	nop
 80196c8:	e7fd      	b.n	80196c6 <prvProcessReceivedCommands+0x2e>
 80196ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80196cc:	681b      	ldr	r3, [r3, #0]
 80196ce:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80196d0:	6850      	ldr	r0, [r2, #4]
 80196d2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80196d4:	6892      	ldr	r2, [r2, #8]
 80196d6:	4611      	mov	r1, r2
 80196d8:	4798      	blx	r3
 80196da:	687b      	ldr	r3, [r7, #4]
 80196dc:	2b00      	cmp	r3, #0
 80196de:	f2c0 80ae 	blt.w	801983e <prvProcessReceivedCommands+0x1a6>
 80196e2:	68fb      	ldr	r3, [r7, #12]
 80196e4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80196e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196e8:	695b      	ldr	r3, [r3, #20]
 80196ea:	2b00      	cmp	r3, #0
 80196ec:	d004      	beq.n	80196f8 <prvProcessReceivedCommands+0x60>
 80196ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196f0:	3304      	adds	r3, #4
 80196f2:	4618      	mov	r0, r3
 80196f4:	f7fd fe90 	bl	8017418 <uxListRemove>
 80196f8:	463b      	mov	r3, r7
 80196fa:	4618      	mov	r0, r3
 80196fc:	f7ff ff6a 	bl	80195d4 <prvSampleTimeNow>
 8019700:	6278      	str	r0, [r7, #36]	@ 0x24
 8019702:	687b      	ldr	r3, [r7, #4]
 8019704:	2b09      	cmp	r3, #9
 8019706:	f200 8097 	bhi.w	8019838 <prvProcessReceivedCommands+0x1a0>
 801970a:	a201      	add	r2, pc, #4	@ (adr r2, 8019710 <prvProcessReceivedCommands+0x78>)
 801970c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019710:	08019739 	.word	0x08019739
 8019714:	08019739 	.word	0x08019739
 8019718:	08019739 	.word	0x08019739
 801971c:	080197af 	.word	0x080197af
 8019720:	080197c3 	.word	0x080197c3
 8019724:	0801980f 	.word	0x0801980f
 8019728:	08019739 	.word	0x08019739
 801972c:	08019739 	.word	0x08019739
 8019730:	080197af 	.word	0x080197af
 8019734:	080197c3 	.word	0x080197c3
 8019738:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801973a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801973e:	f043 0301 	orr.w	r3, r3, #1
 8019742:	b2da      	uxtb	r2, r3
 8019744:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019746:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801974a:	68ba      	ldr	r2, [r7, #8]
 801974c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801974e:	699b      	ldr	r3, [r3, #24]
 8019750:	18d1      	adds	r1, r2, r3
 8019752:	68bb      	ldr	r3, [r7, #8]
 8019754:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019756:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019758:	f7ff ff5c 	bl	8019614 <prvInsertTimerInActiveList>
 801975c:	4603      	mov	r3, r0
 801975e:	2b00      	cmp	r3, #0
 8019760:	d06c      	beq.n	801983c <prvProcessReceivedCommands+0x1a4>
 8019762:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019764:	6a1b      	ldr	r3, [r3, #32]
 8019766:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019768:	4798      	blx	r3
 801976a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801976c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019770:	f003 0304 	and.w	r3, r3, #4
 8019774:	2b00      	cmp	r3, #0
 8019776:	d061      	beq.n	801983c <prvProcessReceivedCommands+0x1a4>
 8019778:	68ba      	ldr	r2, [r7, #8]
 801977a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801977c:	699b      	ldr	r3, [r3, #24]
 801977e:	441a      	add	r2, r3
 8019780:	2300      	movs	r3, #0
 8019782:	9300      	str	r3, [sp, #0]
 8019784:	2300      	movs	r3, #0
 8019786:	2100      	movs	r1, #0
 8019788:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801978a:	f7ff fe01 	bl	8019390 <xTimerGenericCommand>
 801978e:	6238      	str	r0, [r7, #32]
 8019790:	6a3b      	ldr	r3, [r7, #32]
 8019792:	2b00      	cmp	r3, #0
 8019794:	d152      	bne.n	801983c <prvProcessReceivedCommands+0x1a4>
 8019796:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801979a:	f383 8811 	msr	BASEPRI, r3
 801979e:	f3bf 8f6f 	isb	sy
 80197a2:	f3bf 8f4f 	dsb	sy
 80197a6:	61bb      	str	r3, [r7, #24]
 80197a8:	bf00      	nop
 80197aa:	bf00      	nop
 80197ac:	e7fd      	b.n	80197aa <prvProcessReceivedCommands+0x112>
 80197ae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197b0:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80197b4:	f023 0301 	bic.w	r3, r3, #1
 80197b8:	b2da      	uxtb	r2, r3
 80197ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197bc:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80197c0:	e03d      	b.n	801983e <prvProcessReceivedCommands+0x1a6>
 80197c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197c4:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80197c8:	f043 0301 	orr.w	r3, r3, #1
 80197cc:	b2da      	uxtb	r2, r3
 80197ce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197d0:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80197d4:	68ba      	ldr	r2, [r7, #8]
 80197d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197d8:	619a      	str	r2, [r3, #24]
 80197da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197dc:	699b      	ldr	r3, [r3, #24]
 80197de:	2b00      	cmp	r3, #0
 80197e0:	d10b      	bne.n	80197fa <prvProcessReceivedCommands+0x162>
 80197e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80197e6:	f383 8811 	msr	BASEPRI, r3
 80197ea:	f3bf 8f6f 	isb	sy
 80197ee:	f3bf 8f4f 	dsb	sy
 80197f2:	617b      	str	r3, [r7, #20]
 80197f4:	bf00      	nop
 80197f6:	bf00      	nop
 80197f8:	e7fd      	b.n	80197f6 <prvProcessReceivedCommands+0x15e>
 80197fa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80197fc:	699a      	ldr	r2, [r3, #24]
 80197fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019800:	18d1      	adds	r1, r2, r3
 8019802:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019804:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019806:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019808:	f7ff ff04 	bl	8019614 <prvInsertTimerInActiveList>
 801980c:	e017      	b.n	801983e <prvProcessReceivedCommands+0x1a6>
 801980e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019810:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019814:	f003 0302 	and.w	r3, r3, #2
 8019818:	2b00      	cmp	r3, #0
 801981a:	d103      	bne.n	8019824 <prvProcessReceivedCommands+0x18c>
 801981c:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801981e:	f000 fc0b 	bl	801a038 <vPortFree>
 8019822:	e00c      	b.n	801983e <prvProcessReceivedCommands+0x1a6>
 8019824:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019826:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801982a:	f023 0301 	bic.w	r3, r3, #1
 801982e:	b2da      	uxtb	r2, r3
 8019830:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019832:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8019836:	e002      	b.n	801983e <prvProcessReceivedCommands+0x1a6>
 8019838:	bf00      	nop
 801983a:	e000      	b.n	801983e <prvProcessReceivedCommands+0x1a6>
 801983c:	bf00      	nop
 801983e:	4b08      	ldr	r3, [pc, #32]	@ (8019860 <prvProcessReceivedCommands+0x1c8>)
 8019840:	681b      	ldr	r3, [r3, #0]
 8019842:	1d39      	adds	r1, r7, #4
 8019844:	2200      	movs	r2, #0
 8019846:	4618      	mov	r0, r3
 8019848:	f7fe f986 	bl	8017b58 <xQueueReceive>
 801984c:	4603      	mov	r3, r0
 801984e:	2b00      	cmp	r3, #0
 8019850:	f47f af26 	bne.w	80196a0 <prvProcessReceivedCommands+0x8>
 8019854:	bf00      	nop
 8019856:	bf00      	nop
 8019858:	3730      	adds	r7, #48	@ 0x30
 801985a:	46bd      	mov	sp, r7
 801985c:	bd80      	pop	{r7, pc}
 801985e:	bf00      	nop
 8019860:	20003d24 	.word	0x20003d24

08019864 <prvSwitchTimerLists>:
 8019864:	b580      	push	{r7, lr}
 8019866:	b088      	sub	sp, #32
 8019868:	af02      	add	r7, sp, #8
 801986a:	e049      	b.n	8019900 <prvSwitchTimerLists+0x9c>
 801986c:	4b2e      	ldr	r3, [pc, #184]	@ (8019928 <prvSwitchTimerLists+0xc4>)
 801986e:	681b      	ldr	r3, [r3, #0]
 8019870:	68db      	ldr	r3, [r3, #12]
 8019872:	681b      	ldr	r3, [r3, #0]
 8019874:	613b      	str	r3, [r7, #16]
 8019876:	4b2c      	ldr	r3, [pc, #176]	@ (8019928 <prvSwitchTimerLists+0xc4>)
 8019878:	681b      	ldr	r3, [r3, #0]
 801987a:	68db      	ldr	r3, [r3, #12]
 801987c:	68db      	ldr	r3, [r3, #12]
 801987e:	60fb      	str	r3, [r7, #12]
 8019880:	68fb      	ldr	r3, [r7, #12]
 8019882:	3304      	adds	r3, #4
 8019884:	4618      	mov	r0, r3
 8019886:	f7fd fdc7 	bl	8017418 <uxListRemove>
 801988a:	68fb      	ldr	r3, [r7, #12]
 801988c:	6a1b      	ldr	r3, [r3, #32]
 801988e:	68f8      	ldr	r0, [r7, #12]
 8019890:	4798      	blx	r3
 8019892:	68fb      	ldr	r3, [r7, #12]
 8019894:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019898:	f003 0304 	and.w	r3, r3, #4
 801989c:	2b00      	cmp	r3, #0
 801989e:	d02f      	beq.n	8019900 <prvSwitchTimerLists+0x9c>
 80198a0:	68fb      	ldr	r3, [r7, #12]
 80198a2:	699b      	ldr	r3, [r3, #24]
 80198a4:	693a      	ldr	r2, [r7, #16]
 80198a6:	4413      	add	r3, r2
 80198a8:	60bb      	str	r3, [r7, #8]
 80198aa:	68ba      	ldr	r2, [r7, #8]
 80198ac:	693b      	ldr	r3, [r7, #16]
 80198ae:	429a      	cmp	r2, r3
 80198b0:	d90e      	bls.n	80198d0 <prvSwitchTimerLists+0x6c>
 80198b2:	68fb      	ldr	r3, [r7, #12]
 80198b4:	68ba      	ldr	r2, [r7, #8]
 80198b6:	605a      	str	r2, [r3, #4]
 80198b8:	68fb      	ldr	r3, [r7, #12]
 80198ba:	68fa      	ldr	r2, [r7, #12]
 80198bc:	611a      	str	r2, [r3, #16]
 80198be:	4b1a      	ldr	r3, [pc, #104]	@ (8019928 <prvSwitchTimerLists+0xc4>)
 80198c0:	681a      	ldr	r2, [r3, #0]
 80198c2:	68fb      	ldr	r3, [r7, #12]
 80198c4:	3304      	adds	r3, #4
 80198c6:	4619      	mov	r1, r3
 80198c8:	4610      	mov	r0, r2
 80198ca:	f7fd fd6c 	bl	80173a6 <vListInsert>
 80198ce:	e017      	b.n	8019900 <prvSwitchTimerLists+0x9c>
 80198d0:	2300      	movs	r3, #0
 80198d2:	9300      	str	r3, [sp, #0]
 80198d4:	2300      	movs	r3, #0
 80198d6:	693a      	ldr	r2, [r7, #16]
 80198d8:	2100      	movs	r1, #0
 80198da:	68f8      	ldr	r0, [r7, #12]
 80198dc:	f7ff fd58 	bl	8019390 <xTimerGenericCommand>
 80198e0:	6078      	str	r0, [r7, #4]
 80198e2:	687b      	ldr	r3, [r7, #4]
 80198e4:	2b00      	cmp	r3, #0
 80198e6:	d10b      	bne.n	8019900 <prvSwitchTimerLists+0x9c>
 80198e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80198ec:	f383 8811 	msr	BASEPRI, r3
 80198f0:	f3bf 8f6f 	isb	sy
 80198f4:	f3bf 8f4f 	dsb	sy
 80198f8:	603b      	str	r3, [r7, #0]
 80198fa:	bf00      	nop
 80198fc:	bf00      	nop
 80198fe:	e7fd      	b.n	80198fc <prvSwitchTimerLists+0x98>
 8019900:	4b09      	ldr	r3, [pc, #36]	@ (8019928 <prvSwitchTimerLists+0xc4>)
 8019902:	681b      	ldr	r3, [r3, #0]
 8019904:	681b      	ldr	r3, [r3, #0]
 8019906:	2b00      	cmp	r3, #0
 8019908:	d1b0      	bne.n	801986c <prvSwitchTimerLists+0x8>
 801990a:	4b07      	ldr	r3, [pc, #28]	@ (8019928 <prvSwitchTimerLists+0xc4>)
 801990c:	681b      	ldr	r3, [r3, #0]
 801990e:	617b      	str	r3, [r7, #20]
 8019910:	4b06      	ldr	r3, [pc, #24]	@ (801992c <prvSwitchTimerLists+0xc8>)
 8019912:	681b      	ldr	r3, [r3, #0]
 8019914:	4a04      	ldr	r2, [pc, #16]	@ (8019928 <prvSwitchTimerLists+0xc4>)
 8019916:	6013      	str	r3, [r2, #0]
 8019918:	4a04      	ldr	r2, [pc, #16]	@ (801992c <prvSwitchTimerLists+0xc8>)
 801991a:	697b      	ldr	r3, [r7, #20]
 801991c:	6013      	str	r3, [r2, #0]
 801991e:	bf00      	nop
 8019920:	3718      	adds	r7, #24
 8019922:	46bd      	mov	sp, r7
 8019924:	bd80      	pop	{r7, pc}
 8019926:	bf00      	nop
 8019928:	20003d1c 	.word	0x20003d1c
 801992c:	20003d20 	.word	0x20003d20

08019930 <prvCheckForValidListAndQueue>:
 8019930:	b580      	push	{r7, lr}
 8019932:	b082      	sub	sp, #8
 8019934:	af02      	add	r7, sp, #8
 8019936:	f000 f98f 	bl	8019c58 <vPortEnterCritical>
 801993a:	4b15      	ldr	r3, [pc, #84]	@ (8019990 <prvCheckForValidListAndQueue+0x60>)
 801993c:	681b      	ldr	r3, [r3, #0]
 801993e:	2b00      	cmp	r3, #0
 8019940:	d120      	bne.n	8019984 <prvCheckForValidListAndQueue+0x54>
 8019942:	4814      	ldr	r0, [pc, #80]	@ (8019994 <prvCheckForValidListAndQueue+0x64>)
 8019944:	f7fd fcde 	bl	8017304 <vListInitialise>
 8019948:	4813      	ldr	r0, [pc, #76]	@ (8019998 <prvCheckForValidListAndQueue+0x68>)
 801994a:	f7fd fcdb 	bl	8017304 <vListInitialise>
 801994e:	4b13      	ldr	r3, [pc, #76]	@ (801999c <prvCheckForValidListAndQueue+0x6c>)
 8019950:	4a10      	ldr	r2, [pc, #64]	@ (8019994 <prvCheckForValidListAndQueue+0x64>)
 8019952:	601a      	str	r2, [r3, #0]
 8019954:	4b12      	ldr	r3, [pc, #72]	@ (80199a0 <prvCheckForValidListAndQueue+0x70>)
 8019956:	4a10      	ldr	r2, [pc, #64]	@ (8019998 <prvCheckForValidListAndQueue+0x68>)
 8019958:	601a      	str	r2, [r3, #0]
 801995a:	2300      	movs	r3, #0
 801995c:	9300      	str	r3, [sp, #0]
 801995e:	4b11      	ldr	r3, [pc, #68]	@ (80199a4 <prvCheckForValidListAndQueue+0x74>)
 8019960:	4a11      	ldr	r2, [pc, #68]	@ (80199a8 <prvCheckForValidListAndQueue+0x78>)
 8019962:	2110      	movs	r1, #16
 8019964:	200a      	movs	r0, #10
 8019966:	f7fd fdeb 	bl	8017540 <xQueueGenericCreateStatic>
 801996a:	4603      	mov	r3, r0
 801996c:	4a08      	ldr	r2, [pc, #32]	@ (8019990 <prvCheckForValidListAndQueue+0x60>)
 801996e:	6013      	str	r3, [r2, #0]
 8019970:	4b07      	ldr	r3, [pc, #28]	@ (8019990 <prvCheckForValidListAndQueue+0x60>)
 8019972:	681b      	ldr	r3, [r3, #0]
 8019974:	2b00      	cmp	r3, #0
 8019976:	d005      	beq.n	8019984 <prvCheckForValidListAndQueue+0x54>
 8019978:	4b05      	ldr	r3, [pc, #20]	@ (8019990 <prvCheckForValidListAndQueue+0x60>)
 801997a:	681b      	ldr	r3, [r3, #0]
 801997c:	490b      	ldr	r1, [pc, #44]	@ (80199ac <prvCheckForValidListAndQueue+0x7c>)
 801997e:	4618      	mov	r0, r3
 8019980:	f7fe fadc 	bl	8017f3c <vQueueAddToRegistry>
 8019984:	f000 f99a 	bl	8019cbc <vPortExitCritical>
 8019988:	bf00      	nop
 801998a:	46bd      	mov	sp, r7
 801998c:	bd80      	pop	{r7, pc}
 801998e:	bf00      	nop
 8019990:	20003d24 	.word	0x20003d24
 8019994:	20003cf4 	.word	0x20003cf4
 8019998:	20003d08 	.word	0x20003d08
 801999c:	20003d1c 	.word	0x20003d1c
 80199a0:	20003d20 	.word	0x20003d20
 80199a4:	20003dd0 	.word	0x20003dd0
 80199a8:	20003d30 	.word	0x20003d30
 80199ac:	080210c4 	.word	0x080210c4

080199b0 <xTimerPendFunctionCallFromISR>:
 80199b0:	b580      	push	{r7, lr}
 80199b2:	b08a      	sub	sp, #40	@ 0x28
 80199b4:	af00      	add	r7, sp, #0
 80199b6:	60f8      	str	r0, [r7, #12]
 80199b8:	60b9      	str	r1, [r7, #8]
 80199ba:	607a      	str	r2, [r7, #4]
 80199bc:	603b      	str	r3, [r7, #0]
 80199be:	f06f 0301 	mvn.w	r3, #1
 80199c2:	617b      	str	r3, [r7, #20]
 80199c4:	68fb      	ldr	r3, [r7, #12]
 80199c6:	61bb      	str	r3, [r7, #24]
 80199c8:	68bb      	ldr	r3, [r7, #8]
 80199ca:	61fb      	str	r3, [r7, #28]
 80199cc:	687b      	ldr	r3, [r7, #4]
 80199ce:	623b      	str	r3, [r7, #32]
 80199d0:	4b06      	ldr	r3, [pc, #24]	@ (80199ec <xTimerPendFunctionCallFromISR+0x3c>)
 80199d2:	6818      	ldr	r0, [r3, #0]
 80199d4:	f107 0114 	add.w	r1, r7, #20
 80199d8:	2300      	movs	r3, #0
 80199da:	683a      	ldr	r2, [r7, #0]
 80199dc:	f7fd ff8e 	bl	80178fc <xQueueGenericSendFromISR>
 80199e0:	6278      	str	r0, [r7, #36]	@ 0x24
 80199e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80199e4:	4618      	mov	r0, r3
 80199e6:	3728      	adds	r7, #40	@ 0x28
 80199e8:	46bd      	mov	sp, r7
 80199ea:	bd80      	pop	{r7, pc}
 80199ec:	20003d24 	.word	0x20003d24

080199f0 <pxPortInitialiseStack>:
 80199f0:	b480      	push	{r7}
 80199f2:	b085      	sub	sp, #20
 80199f4:	af00      	add	r7, sp, #0
 80199f6:	60f8      	str	r0, [r7, #12]
 80199f8:	60b9      	str	r1, [r7, #8]
 80199fa:	607a      	str	r2, [r7, #4]
 80199fc:	68fb      	ldr	r3, [r7, #12]
 80199fe:	3b04      	subs	r3, #4
 8019a00:	60fb      	str	r3, [r7, #12]
 8019a02:	68fb      	ldr	r3, [r7, #12]
 8019a04:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8019a08:	601a      	str	r2, [r3, #0]
 8019a0a:	68fb      	ldr	r3, [r7, #12]
 8019a0c:	3b04      	subs	r3, #4
 8019a0e:	60fb      	str	r3, [r7, #12]
 8019a10:	68bb      	ldr	r3, [r7, #8]
 8019a12:	f023 0201 	bic.w	r2, r3, #1
 8019a16:	68fb      	ldr	r3, [r7, #12]
 8019a18:	601a      	str	r2, [r3, #0]
 8019a1a:	68fb      	ldr	r3, [r7, #12]
 8019a1c:	3b04      	subs	r3, #4
 8019a1e:	60fb      	str	r3, [r7, #12]
 8019a20:	4a0c      	ldr	r2, [pc, #48]	@ (8019a54 <pxPortInitialiseStack+0x64>)
 8019a22:	68fb      	ldr	r3, [r7, #12]
 8019a24:	601a      	str	r2, [r3, #0]
 8019a26:	68fb      	ldr	r3, [r7, #12]
 8019a28:	3b14      	subs	r3, #20
 8019a2a:	60fb      	str	r3, [r7, #12]
 8019a2c:	687a      	ldr	r2, [r7, #4]
 8019a2e:	68fb      	ldr	r3, [r7, #12]
 8019a30:	601a      	str	r2, [r3, #0]
 8019a32:	68fb      	ldr	r3, [r7, #12]
 8019a34:	3b04      	subs	r3, #4
 8019a36:	60fb      	str	r3, [r7, #12]
 8019a38:	68fb      	ldr	r3, [r7, #12]
 8019a3a:	f06f 0202 	mvn.w	r2, #2
 8019a3e:	601a      	str	r2, [r3, #0]
 8019a40:	68fb      	ldr	r3, [r7, #12]
 8019a42:	3b20      	subs	r3, #32
 8019a44:	60fb      	str	r3, [r7, #12]
 8019a46:	68fb      	ldr	r3, [r7, #12]
 8019a48:	4618      	mov	r0, r3
 8019a4a:	3714      	adds	r7, #20
 8019a4c:	46bd      	mov	sp, r7
 8019a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019a52:	4770      	bx	lr
 8019a54:	08019a59 	.word	0x08019a59

08019a58 <prvTaskExitError>:
 8019a58:	b480      	push	{r7}
 8019a5a:	b085      	sub	sp, #20
 8019a5c:	af00      	add	r7, sp, #0
 8019a5e:	2300      	movs	r3, #0
 8019a60:	607b      	str	r3, [r7, #4]
 8019a62:	4b13      	ldr	r3, [pc, #76]	@ (8019ab0 <prvTaskExitError+0x58>)
 8019a64:	681b      	ldr	r3, [r3, #0]
 8019a66:	f1b3 3fff 	cmp.w	r3, #4294967295
 8019a6a:	d00b      	beq.n	8019a84 <prvTaskExitError+0x2c>
 8019a6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019a70:	f383 8811 	msr	BASEPRI, r3
 8019a74:	f3bf 8f6f 	isb	sy
 8019a78:	f3bf 8f4f 	dsb	sy
 8019a7c:	60fb      	str	r3, [r7, #12]
 8019a7e:	bf00      	nop
 8019a80:	bf00      	nop
 8019a82:	e7fd      	b.n	8019a80 <prvTaskExitError+0x28>
 8019a84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019a88:	f383 8811 	msr	BASEPRI, r3
 8019a8c:	f3bf 8f6f 	isb	sy
 8019a90:	f3bf 8f4f 	dsb	sy
 8019a94:	60bb      	str	r3, [r7, #8]
 8019a96:	bf00      	nop
 8019a98:	bf00      	nop
 8019a9a:	687b      	ldr	r3, [r7, #4]
 8019a9c:	2b00      	cmp	r3, #0
 8019a9e:	d0fc      	beq.n	8019a9a <prvTaskExitError+0x42>
 8019aa0:	bf00      	nop
 8019aa2:	bf00      	nop
 8019aa4:	3714      	adds	r7, #20
 8019aa6:	46bd      	mov	sp, r7
 8019aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019aac:	4770      	bx	lr
 8019aae:	bf00      	nop
 8019ab0:	200000ac 	.word	0x200000ac
	...

08019ac0 <SVC_Handler>:
 8019ac0:	4b07      	ldr	r3, [pc, #28]	@ (8019ae0 <pxCurrentTCBConst2>)
 8019ac2:	6819      	ldr	r1, [r3, #0]
 8019ac4:	6808      	ldr	r0, [r1, #0]
 8019ac6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019aca:	f380 8809 	msr	PSP, r0
 8019ace:	f3bf 8f6f 	isb	sy
 8019ad2:	f04f 0000 	mov.w	r0, #0
 8019ad6:	f380 8811 	msr	BASEPRI, r0
 8019ada:	4770      	bx	lr
 8019adc:	f3af 8000 	nop.w

08019ae0 <pxCurrentTCBConst2>:
 8019ae0:	20003b20 	.word	0x20003b20
 8019ae4:	bf00      	nop
 8019ae6:	bf00      	nop

08019ae8 <prvPortStartFirstTask>:
 8019ae8:	4808      	ldr	r0, [pc, #32]	@ (8019b0c <prvPortStartFirstTask+0x24>)
 8019aea:	6800      	ldr	r0, [r0, #0]
 8019aec:	6800      	ldr	r0, [r0, #0]
 8019aee:	f380 8808 	msr	MSP, r0
 8019af2:	f04f 0000 	mov.w	r0, #0
 8019af6:	f380 8814 	msr	CONTROL, r0
 8019afa:	b662      	cpsie	i
 8019afc:	b661      	cpsie	f
 8019afe:	f3bf 8f4f 	dsb	sy
 8019b02:	f3bf 8f6f 	isb	sy
 8019b06:	df00      	svc	0
 8019b08:	bf00      	nop
 8019b0a:	bf00      	nop
 8019b0c:	e000ed08 	.word	0xe000ed08

08019b10 <xPortStartScheduler>:
 8019b10:	b580      	push	{r7, lr}
 8019b12:	b086      	sub	sp, #24
 8019b14:	af00      	add	r7, sp, #0
 8019b16:	4b47      	ldr	r3, [pc, #284]	@ (8019c34 <xPortStartScheduler+0x124>)
 8019b18:	681b      	ldr	r3, [r3, #0]
 8019b1a:	4a47      	ldr	r2, [pc, #284]	@ (8019c38 <xPortStartScheduler+0x128>)
 8019b1c:	4293      	cmp	r3, r2
 8019b1e:	d10b      	bne.n	8019b38 <xPortStartScheduler+0x28>
 8019b20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019b24:	f383 8811 	msr	BASEPRI, r3
 8019b28:	f3bf 8f6f 	isb	sy
 8019b2c:	f3bf 8f4f 	dsb	sy
 8019b30:	613b      	str	r3, [r7, #16]
 8019b32:	bf00      	nop
 8019b34:	bf00      	nop
 8019b36:	e7fd      	b.n	8019b34 <xPortStartScheduler+0x24>
 8019b38:	4b3e      	ldr	r3, [pc, #248]	@ (8019c34 <xPortStartScheduler+0x124>)
 8019b3a:	681b      	ldr	r3, [r3, #0]
 8019b3c:	4a3f      	ldr	r2, [pc, #252]	@ (8019c3c <xPortStartScheduler+0x12c>)
 8019b3e:	4293      	cmp	r3, r2
 8019b40:	d10b      	bne.n	8019b5a <xPortStartScheduler+0x4a>
 8019b42:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019b46:	f383 8811 	msr	BASEPRI, r3
 8019b4a:	f3bf 8f6f 	isb	sy
 8019b4e:	f3bf 8f4f 	dsb	sy
 8019b52:	60fb      	str	r3, [r7, #12]
 8019b54:	bf00      	nop
 8019b56:	bf00      	nop
 8019b58:	e7fd      	b.n	8019b56 <xPortStartScheduler+0x46>
 8019b5a:	4b39      	ldr	r3, [pc, #228]	@ (8019c40 <xPortStartScheduler+0x130>)
 8019b5c:	617b      	str	r3, [r7, #20]
 8019b5e:	697b      	ldr	r3, [r7, #20]
 8019b60:	781b      	ldrb	r3, [r3, #0]
 8019b62:	b2db      	uxtb	r3, r3
 8019b64:	607b      	str	r3, [r7, #4]
 8019b66:	697b      	ldr	r3, [r7, #20]
 8019b68:	22ff      	movs	r2, #255	@ 0xff
 8019b6a:	701a      	strb	r2, [r3, #0]
 8019b6c:	697b      	ldr	r3, [r7, #20]
 8019b6e:	781b      	ldrb	r3, [r3, #0]
 8019b70:	b2db      	uxtb	r3, r3
 8019b72:	70fb      	strb	r3, [r7, #3]
 8019b74:	78fb      	ldrb	r3, [r7, #3]
 8019b76:	b2db      	uxtb	r3, r3
 8019b78:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8019b7c:	b2da      	uxtb	r2, r3
 8019b7e:	4b31      	ldr	r3, [pc, #196]	@ (8019c44 <xPortStartScheduler+0x134>)
 8019b80:	701a      	strb	r2, [r3, #0]
 8019b82:	4b31      	ldr	r3, [pc, #196]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019b84:	2207      	movs	r2, #7
 8019b86:	601a      	str	r2, [r3, #0]
 8019b88:	e009      	b.n	8019b9e <xPortStartScheduler+0x8e>
 8019b8a:	4b2f      	ldr	r3, [pc, #188]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019b8c:	681b      	ldr	r3, [r3, #0]
 8019b8e:	3b01      	subs	r3, #1
 8019b90:	4a2d      	ldr	r2, [pc, #180]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019b92:	6013      	str	r3, [r2, #0]
 8019b94:	78fb      	ldrb	r3, [r7, #3]
 8019b96:	b2db      	uxtb	r3, r3
 8019b98:	005b      	lsls	r3, r3, #1
 8019b9a:	b2db      	uxtb	r3, r3
 8019b9c:	70fb      	strb	r3, [r7, #3]
 8019b9e:	78fb      	ldrb	r3, [r7, #3]
 8019ba0:	b2db      	uxtb	r3, r3
 8019ba2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8019ba6:	2b80      	cmp	r3, #128	@ 0x80
 8019ba8:	d0ef      	beq.n	8019b8a <xPortStartScheduler+0x7a>
 8019baa:	4b27      	ldr	r3, [pc, #156]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019bac:	681b      	ldr	r3, [r3, #0]
 8019bae:	f1c3 0307 	rsb	r3, r3, #7
 8019bb2:	2b04      	cmp	r3, #4
 8019bb4:	d00b      	beq.n	8019bce <xPortStartScheduler+0xbe>
 8019bb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019bba:	f383 8811 	msr	BASEPRI, r3
 8019bbe:	f3bf 8f6f 	isb	sy
 8019bc2:	f3bf 8f4f 	dsb	sy
 8019bc6:	60bb      	str	r3, [r7, #8]
 8019bc8:	bf00      	nop
 8019bca:	bf00      	nop
 8019bcc:	e7fd      	b.n	8019bca <xPortStartScheduler+0xba>
 8019bce:	4b1e      	ldr	r3, [pc, #120]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019bd0:	681b      	ldr	r3, [r3, #0]
 8019bd2:	021b      	lsls	r3, r3, #8
 8019bd4:	4a1c      	ldr	r2, [pc, #112]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019bd6:	6013      	str	r3, [r2, #0]
 8019bd8:	4b1b      	ldr	r3, [pc, #108]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019bda:	681b      	ldr	r3, [r3, #0]
 8019bdc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8019be0:	4a19      	ldr	r2, [pc, #100]	@ (8019c48 <xPortStartScheduler+0x138>)
 8019be2:	6013      	str	r3, [r2, #0]
 8019be4:	687b      	ldr	r3, [r7, #4]
 8019be6:	b2da      	uxtb	r2, r3
 8019be8:	697b      	ldr	r3, [r7, #20]
 8019bea:	701a      	strb	r2, [r3, #0]
 8019bec:	4b17      	ldr	r3, [pc, #92]	@ (8019c4c <xPortStartScheduler+0x13c>)
 8019bee:	681b      	ldr	r3, [r3, #0]
 8019bf0:	4a16      	ldr	r2, [pc, #88]	@ (8019c4c <xPortStartScheduler+0x13c>)
 8019bf2:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8019bf6:	6013      	str	r3, [r2, #0]
 8019bf8:	4b14      	ldr	r3, [pc, #80]	@ (8019c4c <xPortStartScheduler+0x13c>)
 8019bfa:	681b      	ldr	r3, [r3, #0]
 8019bfc:	4a13      	ldr	r2, [pc, #76]	@ (8019c4c <xPortStartScheduler+0x13c>)
 8019bfe:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8019c02:	6013      	str	r3, [r2, #0]
 8019c04:	f000 f8da 	bl	8019dbc <vPortSetupTimerInterrupt>
 8019c08:	4b11      	ldr	r3, [pc, #68]	@ (8019c50 <xPortStartScheduler+0x140>)
 8019c0a:	2200      	movs	r2, #0
 8019c0c:	601a      	str	r2, [r3, #0]
 8019c0e:	f000 f8f9 	bl	8019e04 <vPortEnableVFP>
 8019c12:	4b10      	ldr	r3, [pc, #64]	@ (8019c54 <xPortStartScheduler+0x144>)
 8019c14:	681b      	ldr	r3, [r3, #0]
 8019c16:	4a0f      	ldr	r2, [pc, #60]	@ (8019c54 <xPortStartScheduler+0x144>)
 8019c18:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8019c1c:	6013      	str	r3, [r2, #0]
 8019c1e:	f7ff ff63 	bl	8019ae8 <prvPortStartFirstTask>
 8019c22:	f7fe fe71 	bl	8018908 <vTaskSwitchContext>
 8019c26:	f7ff ff17 	bl	8019a58 <prvTaskExitError>
 8019c2a:	2300      	movs	r3, #0
 8019c2c:	4618      	mov	r0, r3
 8019c2e:	3718      	adds	r7, #24
 8019c30:	46bd      	mov	sp, r7
 8019c32:	bd80      	pop	{r7, pc}
 8019c34:	e000ed00 	.word	0xe000ed00
 8019c38:	410fc271 	.word	0x410fc271
 8019c3c:	410fc270 	.word	0x410fc270
 8019c40:	e000e400 	.word	0xe000e400
 8019c44:	20003e20 	.word	0x20003e20
 8019c48:	20003e24 	.word	0x20003e24
 8019c4c:	e000ed20 	.word	0xe000ed20
 8019c50:	200000ac 	.word	0x200000ac
 8019c54:	e000ef34 	.word	0xe000ef34

08019c58 <vPortEnterCritical>:
 8019c58:	b480      	push	{r7}
 8019c5a:	b083      	sub	sp, #12
 8019c5c:	af00      	add	r7, sp, #0
 8019c5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019c62:	f383 8811 	msr	BASEPRI, r3
 8019c66:	f3bf 8f6f 	isb	sy
 8019c6a:	f3bf 8f4f 	dsb	sy
 8019c6e:	607b      	str	r3, [r7, #4]
 8019c70:	bf00      	nop
 8019c72:	4b10      	ldr	r3, [pc, #64]	@ (8019cb4 <vPortEnterCritical+0x5c>)
 8019c74:	681b      	ldr	r3, [r3, #0]
 8019c76:	3301      	adds	r3, #1
 8019c78:	4a0e      	ldr	r2, [pc, #56]	@ (8019cb4 <vPortEnterCritical+0x5c>)
 8019c7a:	6013      	str	r3, [r2, #0]
 8019c7c:	4b0d      	ldr	r3, [pc, #52]	@ (8019cb4 <vPortEnterCritical+0x5c>)
 8019c7e:	681b      	ldr	r3, [r3, #0]
 8019c80:	2b01      	cmp	r3, #1
 8019c82:	d110      	bne.n	8019ca6 <vPortEnterCritical+0x4e>
 8019c84:	4b0c      	ldr	r3, [pc, #48]	@ (8019cb8 <vPortEnterCritical+0x60>)
 8019c86:	681b      	ldr	r3, [r3, #0]
 8019c88:	b2db      	uxtb	r3, r3
 8019c8a:	2b00      	cmp	r3, #0
 8019c8c:	d00b      	beq.n	8019ca6 <vPortEnterCritical+0x4e>
 8019c8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019c92:	f383 8811 	msr	BASEPRI, r3
 8019c96:	f3bf 8f6f 	isb	sy
 8019c9a:	f3bf 8f4f 	dsb	sy
 8019c9e:	603b      	str	r3, [r7, #0]
 8019ca0:	bf00      	nop
 8019ca2:	bf00      	nop
 8019ca4:	e7fd      	b.n	8019ca2 <vPortEnterCritical+0x4a>
 8019ca6:	bf00      	nop
 8019ca8:	370c      	adds	r7, #12
 8019caa:	46bd      	mov	sp, r7
 8019cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019cb0:	4770      	bx	lr
 8019cb2:	bf00      	nop
 8019cb4:	200000ac 	.word	0x200000ac
 8019cb8:	e000ed04 	.word	0xe000ed04

08019cbc <vPortExitCritical>:
 8019cbc:	b480      	push	{r7}
 8019cbe:	b083      	sub	sp, #12
 8019cc0:	af00      	add	r7, sp, #0
 8019cc2:	4b12      	ldr	r3, [pc, #72]	@ (8019d0c <vPortExitCritical+0x50>)
 8019cc4:	681b      	ldr	r3, [r3, #0]
 8019cc6:	2b00      	cmp	r3, #0
 8019cc8:	d10b      	bne.n	8019ce2 <vPortExitCritical+0x26>
 8019cca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019cce:	f383 8811 	msr	BASEPRI, r3
 8019cd2:	f3bf 8f6f 	isb	sy
 8019cd6:	f3bf 8f4f 	dsb	sy
 8019cda:	607b      	str	r3, [r7, #4]
 8019cdc:	bf00      	nop
 8019cde:	bf00      	nop
 8019ce0:	e7fd      	b.n	8019cde <vPortExitCritical+0x22>
 8019ce2:	4b0a      	ldr	r3, [pc, #40]	@ (8019d0c <vPortExitCritical+0x50>)
 8019ce4:	681b      	ldr	r3, [r3, #0]
 8019ce6:	3b01      	subs	r3, #1
 8019ce8:	4a08      	ldr	r2, [pc, #32]	@ (8019d0c <vPortExitCritical+0x50>)
 8019cea:	6013      	str	r3, [r2, #0]
 8019cec:	4b07      	ldr	r3, [pc, #28]	@ (8019d0c <vPortExitCritical+0x50>)
 8019cee:	681b      	ldr	r3, [r3, #0]
 8019cf0:	2b00      	cmp	r3, #0
 8019cf2:	d105      	bne.n	8019d00 <vPortExitCritical+0x44>
 8019cf4:	2300      	movs	r3, #0
 8019cf6:	603b      	str	r3, [r7, #0]
 8019cf8:	683b      	ldr	r3, [r7, #0]
 8019cfa:	f383 8811 	msr	BASEPRI, r3
 8019cfe:	bf00      	nop
 8019d00:	bf00      	nop
 8019d02:	370c      	adds	r7, #12
 8019d04:	46bd      	mov	sp, r7
 8019d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d0a:	4770      	bx	lr
 8019d0c:	200000ac 	.word	0x200000ac

08019d10 <PendSV_Handler>:
 8019d10:	f3ef 8009 	mrs	r0, PSP
 8019d14:	f3bf 8f6f 	isb	sy
 8019d18:	4b15      	ldr	r3, [pc, #84]	@ (8019d70 <pxCurrentTCBConst>)
 8019d1a:	681a      	ldr	r2, [r3, #0]
 8019d1c:	f01e 0f10 	tst.w	lr, #16
 8019d20:	bf08      	it	eq
 8019d22:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8019d26:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d2a:	6010      	str	r0, [r2, #0]
 8019d2c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8019d30:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8019d34:	f380 8811 	msr	BASEPRI, r0
 8019d38:	f3bf 8f4f 	dsb	sy
 8019d3c:	f3bf 8f6f 	isb	sy
 8019d40:	f7fe fde2 	bl	8018908 <vTaskSwitchContext>
 8019d44:	f04f 0000 	mov.w	r0, #0
 8019d48:	f380 8811 	msr	BASEPRI, r0
 8019d4c:	bc09      	pop	{r0, r3}
 8019d4e:	6819      	ldr	r1, [r3, #0]
 8019d50:	6808      	ldr	r0, [r1, #0]
 8019d52:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d56:	f01e 0f10 	tst.w	lr, #16
 8019d5a:	bf08      	it	eq
 8019d5c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8019d60:	f380 8809 	msr	PSP, r0
 8019d64:	f3bf 8f6f 	isb	sy
 8019d68:	4770      	bx	lr
 8019d6a:	bf00      	nop
 8019d6c:	f3af 8000 	nop.w

08019d70 <pxCurrentTCBConst>:
 8019d70:	20003b20 	.word	0x20003b20
 8019d74:	bf00      	nop
 8019d76:	bf00      	nop

08019d78 <SysTick_Handler>:
 8019d78:	b580      	push	{r7, lr}
 8019d7a:	b082      	sub	sp, #8
 8019d7c:	af00      	add	r7, sp, #0
 8019d7e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019d82:	f383 8811 	msr	BASEPRI, r3
 8019d86:	f3bf 8f6f 	isb	sy
 8019d8a:	f3bf 8f4f 	dsb	sy
 8019d8e:	607b      	str	r3, [r7, #4]
 8019d90:	bf00      	nop
 8019d92:	f7fe fcff 	bl	8018794 <xTaskIncrementTick>
 8019d96:	4603      	mov	r3, r0
 8019d98:	2b00      	cmp	r3, #0
 8019d9a:	d003      	beq.n	8019da4 <SysTick_Handler+0x2c>
 8019d9c:	4b06      	ldr	r3, [pc, #24]	@ (8019db8 <SysTick_Handler+0x40>)
 8019d9e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8019da2:	601a      	str	r2, [r3, #0]
 8019da4:	2300      	movs	r3, #0
 8019da6:	603b      	str	r3, [r7, #0]
 8019da8:	683b      	ldr	r3, [r7, #0]
 8019daa:	f383 8811 	msr	BASEPRI, r3
 8019dae:	bf00      	nop
 8019db0:	bf00      	nop
 8019db2:	3708      	adds	r7, #8
 8019db4:	46bd      	mov	sp, r7
 8019db6:	bd80      	pop	{r7, pc}
 8019db8:	e000ed04 	.word	0xe000ed04

08019dbc <vPortSetupTimerInterrupt>:
 8019dbc:	b480      	push	{r7}
 8019dbe:	af00      	add	r7, sp, #0
 8019dc0:	4b0b      	ldr	r3, [pc, #44]	@ (8019df0 <vPortSetupTimerInterrupt+0x34>)
 8019dc2:	2200      	movs	r2, #0
 8019dc4:	601a      	str	r2, [r3, #0]
 8019dc6:	4b0b      	ldr	r3, [pc, #44]	@ (8019df4 <vPortSetupTimerInterrupt+0x38>)
 8019dc8:	2200      	movs	r2, #0
 8019dca:	601a      	str	r2, [r3, #0]
 8019dcc:	4b0a      	ldr	r3, [pc, #40]	@ (8019df8 <vPortSetupTimerInterrupt+0x3c>)
 8019dce:	681b      	ldr	r3, [r3, #0]
 8019dd0:	4a0a      	ldr	r2, [pc, #40]	@ (8019dfc <vPortSetupTimerInterrupt+0x40>)
 8019dd2:	fba2 2303 	umull	r2, r3, r2, r3
 8019dd6:	099b      	lsrs	r3, r3, #6
 8019dd8:	4a09      	ldr	r2, [pc, #36]	@ (8019e00 <vPortSetupTimerInterrupt+0x44>)
 8019dda:	3b01      	subs	r3, #1
 8019ddc:	6013      	str	r3, [r2, #0]
 8019dde:	4b04      	ldr	r3, [pc, #16]	@ (8019df0 <vPortSetupTimerInterrupt+0x34>)
 8019de0:	2207      	movs	r2, #7
 8019de2:	601a      	str	r2, [r3, #0]
 8019de4:	bf00      	nop
 8019de6:	46bd      	mov	sp, r7
 8019de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019dec:	4770      	bx	lr
 8019dee:	bf00      	nop
 8019df0:	e000e010 	.word	0xe000e010
 8019df4:	e000e018 	.word	0xe000e018
 8019df8:	20000004 	.word	0x20000004
 8019dfc:	10624dd3 	.word	0x10624dd3
 8019e00:	e000e014 	.word	0xe000e014

08019e04 <vPortEnableVFP>:
 8019e04:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8019e14 <vPortEnableVFP+0x10>
 8019e08:	6801      	ldr	r1, [r0, #0]
 8019e0a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8019e0e:	6001      	str	r1, [r0, #0]
 8019e10:	4770      	bx	lr
 8019e12:	bf00      	nop
 8019e14:	e000ed88 	.word	0xe000ed88

08019e18 <vPortValidateInterruptPriority>:
 8019e18:	b480      	push	{r7}
 8019e1a:	b085      	sub	sp, #20
 8019e1c:	af00      	add	r7, sp, #0
 8019e1e:	f3ef 8305 	mrs	r3, IPSR
 8019e22:	60fb      	str	r3, [r7, #12]
 8019e24:	68fb      	ldr	r3, [r7, #12]
 8019e26:	2b0f      	cmp	r3, #15
 8019e28:	d915      	bls.n	8019e56 <vPortValidateInterruptPriority+0x3e>
 8019e2a:	4a18      	ldr	r2, [pc, #96]	@ (8019e8c <vPortValidateInterruptPriority+0x74>)
 8019e2c:	68fb      	ldr	r3, [r7, #12]
 8019e2e:	4413      	add	r3, r2
 8019e30:	781b      	ldrb	r3, [r3, #0]
 8019e32:	72fb      	strb	r3, [r7, #11]
 8019e34:	4b16      	ldr	r3, [pc, #88]	@ (8019e90 <vPortValidateInterruptPriority+0x78>)
 8019e36:	781b      	ldrb	r3, [r3, #0]
 8019e38:	7afa      	ldrb	r2, [r7, #11]
 8019e3a:	429a      	cmp	r2, r3
 8019e3c:	d20b      	bcs.n	8019e56 <vPortValidateInterruptPriority+0x3e>
 8019e3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019e42:	f383 8811 	msr	BASEPRI, r3
 8019e46:	f3bf 8f6f 	isb	sy
 8019e4a:	f3bf 8f4f 	dsb	sy
 8019e4e:	607b      	str	r3, [r7, #4]
 8019e50:	bf00      	nop
 8019e52:	bf00      	nop
 8019e54:	e7fd      	b.n	8019e52 <vPortValidateInterruptPriority+0x3a>
 8019e56:	4b0f      	ldr	r3, [pc, #60]	@ (8019e94 <vPortValidateInterruptPriority+0x7c>)
 8019e58:	681b      	ldr	r3, [r3, #0]
 8019e5a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8019e5e:	4b0e      	ldr	r3, [pc, #56]	@ (8019e98 <vPortValidateInterruptPriority+0x80>)
 8019e60:	681b      	ldr	r3, [r3, #0]
 8019e62:	429a      	cmp	r2, r3
 8019e64:	d90b      	bls.n	8019e7e <vPortValidateInterruptPriority+0x66>
 8019e66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019e6a:	f383 8811 	msr	BASEPRI, r3
 8019e6e:	f3bf 8f6f 	isb	sy
 8019e72:	f3bf 8f4f 	dsb	sy
 8019e76:	603b      	str	r3, [r7, #0]
 8019e78:	bf00      	nop
 8019e7a:	bf00      	nop
 8019e7c:	e7fd      	b.n	8019e7a <vPortValidateInterruptPriority+0x62>
 8019e7e:	bf00      	nop
 8019e80:	3714      	adds	r7, #20
 8019e82:	46bd      	mov	sp, r7
 8019e84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e88:	4770      	bx	lr
 8019e8a:	bf00      	nop
 8019e8c:	e000e3f0 	.word	0xe000e3f0
 8019e90:	20003e20 	.word	0x20003e20
 8019e94:	e000ed0c 	.word	0xe000ed0c
 8019e98:	20003e24 	.word	0x20003e24

08019e9c <pvPortMalloc>:
 8019e9c:	b580      	push	{r7, lr}
 8019e9e:	b08a      	sub	sp, #40	@ 0x28
 8019ea0:	af00      	add	r7, sp, #0
 8019ea2:	6078      	str	r0, [r7, #4]
 8019ea4:	2300      	movs	r3, #0
 8019ea6:	61fb      	str	r3, [r7, #28]
 8019ea8:	f7fe fbb8 	bl	801861c <vTaskSuspendAll>
 8019eac:	4b5c      	ldr	r3, [pc, #368]	@ (801a020 <pvPortMalloc+0x184>)
 8019eae:	681b      	ldr	r3, [r3, #0]
 8019eb0:	2b00      	cmp	r3, #0
 8019eb2:	d101      	bne.n	8019eb8 <pvPortMalloc+0x1c>
 8019eb4:	f000 f924 	bl	801a100 <prvHeapInit>
 8019eb8:	4b5a      	ldr	r3, [pc, #360]	@ (801a024 <pvPortMalloc+0x188>)
 8019eba:	681a      	ldr	r2, [r3, #0]
 8019ebc:	687b      	ldr	r3, [r7, #4]
 8019ebe:	4013      	ands	r3, r2
 8019ec0:	2b00      	cmp	r3, #0
 8019ec2:	f040 8095 	bne.w	8019ff0 <pvPortMalloc+0x154>
 8019ec6:	687b      	ldr	r3, [r7, #4]
 8019ec8:	2b00      	cmp	r3, #0
 8019eca:	d01e      	beq.n	8019f0a <pvPortMalloc+0x6e>
 8019ecc:	2208      	movs	r2, #8
 8019ece:	687b      	ldr	r3, [r7, #4]
 8019ed0:	4413      	add	r3, r2
 8019ed2:	607b      	str	r3, [r7, #4]
 8019ed4:	687b      	ldr	r3, [r7, #4]
 8019ed6:	f003 0307 	and.w	r3, r3, #7
 8019eda:	2b00      	cmp	r3, #0
 8019edc:	d015      	beq.n	8019f0a <pvPortMalloc+0x6e>
 8019ede:	687b      	ldr	r3, [r7, #4]
 8019ee0:	f023 0307 	bic.w	r3, r3, #7
 8019ee4:	3308      	adds	r3, #8
 8019ee6:	607b      	str	r3, [r7, #4]
 8019ee8:	687b      	ldr	r3, [r7, #4]
 8019eea:	f003 0307 	and.w	r3, r3, #7
 8019eee:	2b00      	cmp	r3, #0
 8019ef0:	d00b      	beq.n	8019f0a <pvPortMalloc+0x6e>
 8019ef2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019ef6:	f383 8811 	msr	BASEPRI, r3
 8019efa:	f3bf 8f6f 	isb	sy
 8019efe:	f3bf 8f4f 	dsb	sy
 8019f02:	617b      	str	r3, [r7, #20]
 8019f04:	bf00      	nop
 8019f06:	bf00      	nop
 8019f08:	e7fd      	b.n	8019f06 <pvPortMalloc+0x6a>
 8019f0a:	687b      	ldr	r3, [r7, #4]
 8019f0c:	2b00      	cmp	r3, #0
 8019f0e:	d06f      	beq.n	8019ff0 <pvPortMalloc+0x154>
 8019f10:	4b45      	ldr	r3, [pc, #276]	@ (801a028 <pvPortMalloc+0x18c>)
 8019f12:	681b      	ldr	r3, [r3, #0]
 8019f14:	687a      	ldr	r2, [r7, #4]
 8019f16:	429a      	cmp	r2, r3
 8019f18:	d86a      	bhi.n	8019ff0 <pvPortMalloc+0x154>
 8019f1a:	4b44      	ldr	r3, [pc, #272]	@ (801a02c <pvPortMalloc+0x190>)
 8019f1c:	623b      	str	r3, [r7, #32]
 8019f1e:	4b43      	ldr	r3, [pc, #268]	@ (801a02c <pvPortMalloc+0x190>)
 8019f20:	681b      	ldr	r3, [r3, #0]
 8019f22:	627b      	str	r3, [r7, #36]	@ 0x24
 8019f24:	e004      	b.n	8019f30 <pvPortMalloc+0x94>
 8019f26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f28:	623b      	str	r3, [r7, #32]
 8019f2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f2c:	681b      	ldr	r3, [r3, #0]
 8019f2e:	627b      	str	r3, [r7, #36]	@ 0x24
 8019f30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f32:	685b      	ldr	r3, [r3, #4]
 8019f34:	687a      	ldr	r2, [r7, #4]
 8019f36:	429a      	cmp	r2, r3
 8019f38:	d903      	bls.n	8019f42 <pvPortMalloc+0xa6>
 8019f3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f3c:	681b      	ldr	r3, [r3, #0]
 8019f3e:	2b00      	cmp	r3, #0
 8019f40:	d1f1      	bne.n	8019f26 <pvPortMalloc+0x8a>
 8019f42:	4b37      	ldr	r3, [pc, #220]	@ (801a020 <pvPortMalloc+0x184>)
 8019f44:	681b      	ldr	r3, [r3, #0]
 8019f46:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019f48:	429a      	cmp	r2, r3
 8019f4a:	d051      	beq.n	8019ff0 <pvPortMalloc+0x154>
 8019f4c:	6a3b      	ldr	r3, [r7, #32]
 8019f4e:	681b      	ldr	r3, [r3, #0]
 8019f50:	2208      	movs	r2, #8
 8019f52:	4413      	add	r3, r2
 8019f54:	61fb      	str	r3, [r7, #28]
 8019f56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f58:	681a      	ldr	r2, [r3, #0]
 8019f5a:	6a3b      	ldr	r3, [r7, #32]
 8019f5c:	601a      	str	r2, [r3, #0]
 8019f5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f60:	685a      	ldr	r2, [r3, #4]
 8019f62:	687b      	ldr	r3, [r7, #4]
 8019f64:	1ad2      	subs	r2, r2, r3
 8019f66:	2308      	movs	r3, #8
 8019f68:	005b      	lsls	r3, r3, #1
 8019f6a:	429a      	cmp	r2, r3
 8019f6c:	d920      	bls.n	8019fb0 <pvPortMalloc+0x114>
 8019f6e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019f70:	687b      	ldr	r3, [r7, #4]
 8019f72:	4413      	add	r3, r2
 8019f74:	61bb      	str	r3, [r7, #24]
 8019f76:	69bb      	ldr	r3, [r7, #24]
 8019f78:	f003 0307 	and.w	r3, r3, #7
 8019f7c:	2b00      	cmp	r3, #0
 8019f7e:	d00b      	beq.n	8019f98 <pvPortMalloc+0xfc>
 8019f80:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019f84:	f383 8811 	msr	BASEPRI, r3
 8019f88:	f3bf 8f6f 	isb	sy
 8019f8c:	f3bf 8f4f 	dsb	sy
 8019f90:	613b      	str	r3, [r7, #16]
 8019f92:	bf00      	nop
 8019f94:	bf00      	nop
 8019f96:	e7fd      	b.n	8019f94 <pvPortMalloc+0xf8>
 8019f98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019f9a:	685a      	ldr	r2, [r3, #4]
 8019f9c:	687b      	ldr	r3, [r7, #4]
 8019f9e:	1ad2      	subs	r2, r2, r3
 8019fa0:	69bb      	ldr	r3, [r7, #24]
 8019fa2:	605a      	str	r2, [r3, #4]
 8019fa4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019fa6:	687a      	ldr	r2, [r7, #4]
 8019fa8:	605a      	str	r2, [r3, #4]
 8019faa:	69b8      	ldr	r0, [r7, #24]
 8019fac:	f000 f90a 	bl	801a1c4 <prvInsertBlockIntoFreeList>
 8019fb0:	4b1d      	ldr	r3, [pc, #116]	@ (801a028 <pvPortMalloc+0x18c>)
 8019fb2:	681a      	ldr	r2, [r3, #0]
 8019fb4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019fb6:	685b      	ldr	r3, [r3, #4]
 8019fb8:	1ad3      	subs	r3, r2, r3
 8019fba:	4a1b      	ldr	r2, [pc, #108]	@ (801a028 <pvPortMalloc+0x18c>)
 8019fbc:	6013      	str	r3, [r2, #0]
 8019fbe:	4b1a      	ldr	r3, [pc, #104]	@ (801a028 <pvPortMalloc+0x18c>)
 8019fc0:	681a      	ldr	r2, [r3, #0]
 8019fc2:	4b1b      	ldr	r3, [pc, #108]	@ (801a030 <pvPortMalloc+0x194>)
 8019fc4:	681b      	ldr	r3, [r3, #0]
 8019fc6:	429a      	cmp	r2, r3
 8019fc8:	d203      	bcs.n	8019fd2 <pvPortMalloc+0x136>
 8019fca:	4b17      	ldr	r3, [pc, #92]	@ (801a028 <pvPortMalloc+0x18c>)
 8019fcc:	681b      	ldr	r3, [r3, #0]
 8019fce:	4a18      	ldr	r2, [pc, #96]	@ (801a030 <pvPortMalloc+0x194>)
 8019fd0:	6013      	str	r3, [r2, #0]
 8019fd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019fd4:	685a      	ldr	r2, [r3, #4]
 8019fd6:	4b13      	ldr	r3, [pc, #76]	@ (801a024 <pvPortMalloc+0x188>)
 8019fd8:	681b      	ldr	r3, [r3, #0]
 8019fda:	431a      	orrs	r2, r3
 8019fdc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019fde:	605a      	str	r2, [r3, #4]
 8019fe0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019fe2:	2200      	movs	r2, #0
 8019fe4:	601a      	str	r2, [r3, #0]
 8019fe6:	4b13      	ldr	r3, [pc, #76]	@ (801a034 <pvPortMalloc+0x198>)
 8019fe8:	681b      	ldr	r3, [r3, #0]
 8019fea:	3301      	adds	r3, #1
 8019fec:	4a11      	ldr	r2, [pc, #68]	@ (801a034 <pvPortMalloc+0x198>)
 8019fee:	6013      	str	r3, [r2, #0]
 8019ff0:	f7fe fb22 	bl	8018638 <xTaskResumeAll>
 8019ff4:	69fb      	ldr	r3, [r7, #28]
 8019ff6:	f003 0307 	and.w	r3, r3, #7
 8019ffa:	2b00      	cmp	r3, #0
 8019ffc:	d00b      	beq.n	801a016 <pvPortMalloc+0x17a>
 8019ffe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a002:	f383 8811 	msr	BASEPRI, r3
 801a006:	f3bf 8f6f 	isb	sy
 801a00a:	f3bf 8f4f 	dsb	sy
 801a00e:	60fb      	str	r3, [r7, #12]
 801a010:	bf00      	nop
 801a012:	bf00      	nop
 801a014:	e7fd      	b.n	801a012 <pvPortMalloc+0x176>
 801a016:	69fb      	ldr	r3, [r7, #28]
 801a018:	4618      	mov	r0, r3
 801a01a:	3728      	adds	r7, #40	@ 0x28
 801a01c:	46bd      	mov	sp, r7
 801a01e:	bd80      	pop	{r7, pc}
 801a020:	2000b360 	.word	0x2000b360
 801a024:	2000b374 	.word	0x2000b374
 801a028:	2000b364 	.word	0x2000b364
 801a02c:	2000b358 	.word	0x2000b358
 801a030:	2000b368 	.word	0x2000b368
 801a034:	2000b36c 	.word	0x2000b36c

0801a038 <vPortFree>:
 801a038:	b580      	push	{r7, lr}
 801a03a:	b086      	sub	sp, #24
 801a03c:	af00      	add	r7, sp, #0
 801a03e:	6078      	str	r0, [r7, #4]
 801a040:	687b      	ldr	r3, [r7, #4]
 801a042:	617b      	str	r3, [r7, #20]
 801a044:	687b      	ldr	r3, [r7, #4]
 801a046:	2b00      	cmp	r3, #0
 801a048:	d04f      	beq.n	801a0ea <vPortFree+0xb2>
 801a04a:	2308      	movs	r3, #8
 801a04c:	425b      	negs	r3, r3
 801a04e:	697a      	ldr	r2, [r7, #20]
 801a050:	4413      	add	r3, r2
 801a052:	617b      	str	r3, [r7, #20]
 801a054:	697b      	ldr	r3, [r7, #20]
 801a056:	613b      	str	r3, [r7, #16]
 801a058:	693b      	ldr	r3, [r7, #16]
 801a05a:	685a      	ldr	r2, [r3, #4]
 801a05c:	4b25      	ldr	r3, [pc, #148]	@ (801a0f4 <vPortFree+0xbc>)
 801a05e:	681b      	ldr	r3, [r3, #0]
 801a060:	4013      	ands	r3, r2
 801a062:	2b00      	cmp	r3, #0
 801a064:	d10b      	bne.n	801a07e <vPortFree+0x46>
 801a066:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a06a:	f383 8811 	msr	BASEPRI, r3
 801a06e:	f3bf 8f6f 	isb	sy
 801a072:	f3bf 8f4f 	dsb	sy
 801a076:	60fb      	str	r3, [r7, #12]
 801a078:	bf00      	nop
 801a07a:	bf00      	nop
 801a07c:	e7fd      	b.n	801a07a <vPortFree+0x42>
 801a07e:	693b      	ldr	r3, [r7, #16]
 801a080:	681b      	ldr	r3, [r3, #0]
 801a082:	2b00      	cmp	r3, #0
 801a084:	d00b      	beq.n	801a09e <vPortFree+0x66>
 801a086:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a08a:	f383 8811 	msr	BASEPRI, r3
 801a08e:	f3bf 8f6f 	isb	sy
 801a092:	f3bf 8f4f 	dsb	sy
 801a096:	60bb      	str	r3, [r7, #8]
 801a098:	bf00      	nop
 801a09a:	bf00      	nop
 801a09c:	e7fd      	b.n	801a09a <vPortFree+0x62>
 801a09e:	693b      	ldr	r3, [r7, #16]
 801a0a0:	685a      	ldr	r2, [r3, #4]
 801a0a2:	4b14      	ldr	r3, [pc, #80]	@ (801a0f4 <vPortFree+0xbc>)
 801a0a4:	681b      	ldr	r3, [r3, #0]
 801a0a6:	4013      	ands	r3, r2
 801a0a8:	2b00      	cmp	r3, #0
 801a0aa:	d01e      	beq.n	801a0ea <vPortFree+0xb2>
 801a0ac:	693b      	ldr	r3, [r7, #16]
 801a0ae:	681b      	ldr	r3, [r3, #0]
 801a0b0:	2b00      	cmp	r3, #0
 801a0b2:	d11a      	bne.n	801a0ea <vPortFree+0xb2>
 801a0b4:	693b      	ldr	r3, [r7, #16]
 801a0b6:	685a      	ldr	r2, [r3, #4]
 801a0b8:	4b0e      	ldr	r3, [pc, #56]	@ (801a0f4 <vPortFree+0xbc>)
 801a0ba:	681b      	ldr	r3, [r3, #0]
 801a0bc:	43db      	mvns	r3, r3
 801a0be:	401a      	ands	r2, r3
 801a0c0:	693b      	ldr	r3, [r7, #16]
 801a0c2:	605a      	str	r2, [r3, #4]
 801a0c4:	f7fe faaa 	bl	801861c <vTaskSuspendAll>
 801a0c8:	693b      	ldr	r3, [r7, #16]
 801a0ca:	685a      	ldr	r2, [r3, #4]
 801a0cc:	4b0a      	ldr	r3, [pc, #40]	@ (801a0f8 <vPortFree+0xc0>)
 801a0ce:	681b      	ldr	r3, [r3, #0]
 801a0d0:	4413      	add	r3, r2
 801a0d2:	4a09      	ldr	r2, [pc, #36]	@ (801a0f8 <vPortFree+0xc0>)
 801a0d4:	6013      	str	r3, [r2, #0]
 801a0d6:	6938      	ldr	r0, [r7, #16]
 801a0d8:	f000 f874 	bl	801a1c4 <prvInsertBlockIntoFreeList>
 801a0dc:	4b07      	ldr	r3, [pc, #28]	@ (801a0fc <vPortFree+0xc4>)
 801a0de:	681b      	ldr	r3, [r3, #0]
 801a0e0:	3301      	adds	r3, #1
 801a0e2:	4a06      	ldr	r2, [pc, #24]	@ (801a0fc <vPortFree+0xc4>)
 801a0e4:	6013      	str	r3, [r2, #0]
 801a0e6:	f7fe faa7 	bl	8018638 <xTaskResumeAll>
 801a0ea:	bf00      	nop
 801a0ec:	3718      	adds	r7, #24
 801a0ee:	46bd      	mov	sp, r7
 801a0f0:	bd80      	pop	{r7, pc}
 801a0f2:	bf00      	nop
 801a0f4:	2000b374 	.word	0x2000b374
 801a0f8:	2000b364 	.word	0x2000b364
 801a0fc:	2000b370 	.word	0x2000b370

0801a100 <prvHeapInit>:
 801a100:	b480      	push	{r7}
 801a102:	b085      	sub	sp, #20
 801a104:	af00      	add	r7, sp, #0
 801a106:	f247 5330 	movw	r3, #30000	@ 0x7530
 801a10a:	60bb      	str	r3, [r7, #8]
 801a10c:	4b27      	ldr	r3, [pc, #156]	@ (801a1ac <prvHeapInit+0xac>)
 801a10e:	60fb      	str	r3, [r7, #12]
 801a110:	68fb      	ldr	r3, [r7, #12]
 801a112:	f003 0307 	and.w	r3, r3, #7
 801a116:	2b00      	cmp	r3, #0
 801a118:	d00c      	beq.n	801a134 <prvHeapInit+0x34>
 801a11a:	68fb      	ldr	r3, [r7, #12]
 801a11c:	3307      	adds	r3, #7
 801a11e:	60fb      	str	r3, [r7, #12]
 801a120:	68fb      	ldr	r3, [r7, #12]
 801a122:	f023 0307 	bic.w	r3, r3, #7
 801a126:	60fb      	str	r3, [r7, #12]
 801a128:	68ba      	ldr	r2, [r7, #8]
 801a12a:	68fb      	ldr	r3, [r7, #12]
 801a12c:	1ad3      	subs	r3, r2, r3
 801a12e:	4a1f      	ldr	r2, [pc, #124]	@ (801a1ac <prvHeapInit+0xac>)
 801a130:	4413      	add	r3, r2
 801a132:	60bb      	str	r3, [r7, #8]
 801a134:	68fb      	ldr	r3, [r7, #12]
 801a136:	607b      	str	r3, [r7, #4]
 801a138:	4a1d      	ldr	r2, [pc, #116]	@ (801a1b0 <prvHeapInit+0xb0>)
 801a13a:	687b      	ldr	r3, [r7, #4]
 801a13c:	6013      	str	r3, [r2, #0]
 801a13e:	4b1c      	ldr	r3, [pc, #112]	@ (801a1b0 <prvHeapInit+0xb0>)
 801a140:	2200      	movs	r2, #0
 801a142:	605a      	str	r2, [r3, #4]
 801a144:	687b      	ldr	r3, [r7, #4]
 801a146:	68ba      	ldr	r2, [r7, #8]
 801a148:	4413      	add	r3, r2
 801a14a:	60fb      	str	r3, [r7, #12]
 801a14c:	2208      	movs	r2, #8
 801a14e:	68fb      	ldr	r3, [r7, #12]
 801a150:	1a9b      	subs	r3, r3, r2
 801a152:	60fb      	str	r3, [r7, #12]
 801a154:	68fb      	ldr	r3, [r7, #12]
 801a156:	f023 0307 	bic.w	r3, r3, #7
 801a15a:	60fb      	str	r3, [r7, #12]
 801a15c:	68fb      	ldr	r3, [r7, #12]
 801a15e:	4a15      	ldr	r2, [pc, #84]	@ (801a1b4 <prvHeapInit+0xb4>)
 801a160:	6013      	str	r3, [r2, #0]
 801a162:	4b14      	ldr	r3, [pc, #80]	@ (801a1b4 <prvHeapInit+0xb4>)
 801a164:	681b      	ldr	r3, [r3, #0]
 801a166:	2200      	movs	r2, #0
 801a168:	605a      	str	r2, [r3, #4]
 801a16a:	4b12      	ldr	r3, [pc, #72]	@ (801a1b4 <prvHeapInit+0xb4>)
 801a16c:	681b      	ldr	r3, [r3, #0]
 801a16e:	2200      	movs	r2, #0
 801a170:	601a      	str	r2, [r3, #0]
 801a172:	687b      	ldr	r3, [r7, #4]
 801a174:	603b      	str	r3, [r7, #0]
 801a176:	683b      	ldr	r3, [r7, #0]
 801a178:	68fa      	ldr	r2, [r7, #12]
 801a17a:	1ad2      	subs	r2, r2, r3
 801a17c:	683b      	ldr	r3, [r7, #0]
 801a17e:	605a      	str	r2, [r3, #4]
 801a180:	4b0c      	ldr	r3, [pc, #48]	@ (801a1b4 <prvHeapInit+0xb4>)
 801a182:	681a      	ldr	r2, [r3, #0]
 801a184:	683b      	ldr	r3, [r7, #0]
 801a186:	601a      	str	r2, [r3, #0]
 801a188:	683b      	ldr	r3, [r7, #0]
 801a18a:	685b      	ldr	r3, [r3, #4]
 801a18c:	4a0a      	ldr	r2, [pc, #40]	@ (801a1b8 <prvHeapInit+0xb8>)
 801a18e:	6013      	str	r3, [r2, #0]
 801a190:	683b      	ldr	r3, [r7, #0]
 801a192:	685b      	ldr	r3, [r3, #4]
 801a194:	4a09      	ldr	r2, [pc, #36]	@ (801a1bc <prvHeapInit+0xbc>)
 801a196:	6013      	str	r3, [r2, #0]
 801a198:	4b09      	ldr	r3, [pc, #36]	@ (801a1c0 <prvHeapInit+0xc0>)
 801a19a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 801a19e:	601a      	str	r2, [r3, #0]
 801a1a0:	bf00      	nop
 801a1a2:	3714      	adds	r7, #20
 801a1a4:	46bd      	mov	sp, r7
 801a1a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a1aa:	4770      	bx	lr
 801a1ac:	20003e28 	.word	0x20003e28
 801a1b0:	2000b358 	.word	0x2000b358
 801a1b4:	2000b360 	.word	0x2000b360
 801a1b8:	2000b368 	.word	0x2000b368
 801a1bc:	2000b364 	.word	0x2000b364
 801a1c0:	2000b374 	.word	0x2000b374

0801a1c4 <prvInsertBlockIntoFreeList>:
 801a1c4:	b480      	push	{r7}
 801a1c6:	b085      	sub	sp, #20
 801a1c8:	af00      	add	r7, sp, #0
 801a1ca:	6078      	str	r0, [r7, #4]
 801a1cc:	4b28      	ldr	r3, [pc, #160]	@ (801a270 <prvInsertBlockIntoFreeList+0xac>)
 801a1ce:	60fb      	str	r3, [r7, #12]
 801a1d0:	e002      	b.n	801a1d8 <prvInsertBlockIntoFreeList+0x14>
 801a1d2:	68fb      	ldr	r3, [r7, #12]
 801a1d4:	681b      	ldr	r3, [r3, #0]
 801a1d6:	60fb      	str	r3, [r7, #12]
 801a1d8:	68fb      	ldr	r3, [r7, #12]
 801a1da:	681b      	ldr	r3, [r3, #0]
 801a1dc:	687a      	ldr	r2, [r7, #4]
 801a1de:	429a      	cmp	r2, r3
 801a1e0:	d8f7      	bhi.n	801a1d2 <prvInsertBlockIntoFreeList+0xe>
 801a1e2:	68fb      	ldr	r3, [r7, #12]
 801a1e4:	60bb      	str	r3, [r7, #8]
 801a1e6:	68fb      	ldr	r3, [r7, #12]
 801a1e8:	685b      	ldr	r3, [r3, #4]
 801a1ea:	68ba      	ldr	r2, [r7, #8]
 801a1ec:	4413      	add	r3, r2
 801a1ee:	687a      	ldr	r2, [r7, #4]
 801a1f0:	429a      	cmp	r2, r3
 801a1f2:	d108      	bne.n	801a206 <prvInsertBlockIntoFreeList+0x42>
 801a1f4:	68fb      	ldr	r3, [r7, #12]
 801a1f6:	685a      	ldr	r2, [r3, #4]
 801a1f8:	687b      	ldr	r3, [r7, #4]
 801a1fa:	685b      	ldr	r3, [r3, #4]
 801a1fc:	441a      	add	r2, r3
 801a1fe:	68fb      	ldr	r3, [r7, #12]
 801a200:	605a      	str	r2, [r3, #4]
 801a202:	68fb      	ldr	r3, [r7, #12]
 801a204:	607b      	str	r3, [r7, #4]
 801a206:	687b      	ldr	r3, [r7, #4]
 801a208:	60bb      	str	r3, [r7, #8]
 801a20a:	687b      	ldr	r3, [r7, #4]
 801a20c:	685b      	ldr	r3, [r3, #4]
 801a20e:	68ba      	ldr	r2, [r7, #8]
 801a210:	441a      	add	r2, r3
 801a212:	68fb      	ldr	r3, [r7, #12]
 801a214:	681b      	ldr	r3, [r3, #0]
 801a216:	429a      	cmp	r2, r3
 801a218:	d118      	bne.n	801a24c <prvInsertBlockIntoFreeList+0x88>
 801a21a:	68fb      	ldr	r3, [r7, #12]
 801a21c:	681a      	ldr	r2, [r3, #0]
 801a21e:	4b15      	ldr	r3, [pc, #84]	@ (801a274 <prvInsertBlockIntoFreeList+0xb0>)
 801a220:	681b      	ldr	r3, [r3, #0]
 801a222:	429a      	cmp	r2, r3
 801a224:	d00d      	beq.n	801a242 <prvInsertBlockIntoFreeList+0x7e>
 801a226:	687b      	ldr	r3, [r7, #4]
 801a228:	685a      	ldr	r2, [r3, #4]
 801a22a:	68fb      	ldr	r3, [r7, #12]
 801a22c:	681b      	ldr	r3, [r3, #0]
 801a22e:	685b      	ldr	r3, [r3, #4]
 801a230:	441a      	add	r2, r3
 801a232:	687b      	ldr	r3, [r7, #4]
 801a234:	605a      	str	r2, [r3, #4]
 801a236:	68fb      	ldr	r3, [r7, #12]
 801a238:	681b      	ldr	r3, [r3, #0]
 801a23a:	681a      	ldr	r2, [r3, #0]
 801a23c:	687b      	ldr	r3, [r7, #4]
 801a23e:	601a      	str	r2, [r3, #0]
 801a240:	e008      	b.n	801a254 <prvInsertBlockIntoFreeList+0x90>
 801a242:	4b0c      	ldr	r3, [pc, #48]	@ (801a274 <prvInsertBlockIntoFreeList+0xb0>)
 801a244:	681a      	ldr	r2, [r3, #0]
 801a246:	687b      	ldr	r3, [r7, #4]
 801a248:	601a      	str	r2, [r3, #0]
 801a24a:	e003      	b.n	801a254 <prvInsertBlockIntoFreeList+0x90>
 801a24c:	68fb      	ldr	r3, [r7, #12]
 801a24e:	681a      	ldr	r2, [r3, #0]
 801a250:	687b      	ldr	r3, [r7, #4]
 801a252:	601a      	str	r2, [r3, #0]
 801a254:	68fa      	ldr	r2, [r7, #12]
 801a256:	687b      	ldr	r3, [r7, #4]
 801a258:	429a      	cmp	r2, r3
 801a25a:	d002      	beq.n	801a262 <prvInsertBlockIntoFreeList+0x9e>
 801a25c:	68fb      	ldr	r3, [r7, #12]
 801a25e:	687a      	ldr	r2, [r7, #4]
 801a260:	601a      	str	r2, [r3, #0]
 801a262:	bf00      	nop
 801a264:	3714      	adds	r7, #20
 801a266:	46bd      	mov	sp, r7
 801a268:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a26c:	4770      	bx	lr
 801a26e:	bf00      	nop
 801a270:	2000b358 	.word	0x2000b358
 801a274:	2000b360 	.word	0x2000b360

0801a278 <MX_USB_DEVICE_Init>:
 801a278:	b580      	push	{r7, lr}
 801a27a:	af00      	add	r7, sp, #0
 801a27c:	2200      	movs	r2, #0
 801a27e:	4912      	ldr	r1, [pc, #72]	@ (801a2c8 <MX_USB_DEVICE_Init+0x50>)
 801a280:	4812      	ldr	r0, [pc, #72]	@ (801a2cc <MX_USB_DEVICE_Init+0x54>)
 801a282:	f7fb fc09 	bl	8015a98 <USBD_Init>
 801a286:	4603      	mov	r3, r0
 801a288:	2b00      	cmp	r3, #0
 801a28a:	d001      	beq.n	801a290 <MX_USB_DEVICE_Init+0x18>
 801a28c:	f7e9 fab4 	bl	80037f8 <Error_Handler>
 801a290:	490f      	ldr	r1, [pc, #60]	@ (801a2d0 <MX_USB_DEVICE_Init+0x58>)
 801a292:	480e      	ldr	r0, [pc, #56]	@ (801a2cc <MX_USB_DEVICE_Init+0x54>)
 801a294:	f7fb fc30 	bl	8015af8 <USBD_RegisterClass>
 801a298:	4603      	mov	r3, r0
 801a29a:	2b00      	cmp	r3, #0
 801a29c:	d001      	beq.n	801a2a2 <MX_USB_DEVICE_Init+0x2a>
 801a29e:	f7e9 faab 	bl	80037f8 <Error_Handler>
 801a2a2:	490c      	ldr	r1, [pc, #48]	@ (801a2d4 <MX_USB_DEVICE_Init+0x5c>)
 801a2a4:	4809      	ldr	r0, [pc, #36]	@ (801a2cc <MX_USB_DEVICE_Init+0x54>)
 801a2a6:	f7fb fb67 	bl	8015978 <USBD_CDC_RegisterInterface>
 801a2aa:	4603      	mov	r3, r0
 801a2ac:	2b00      	cmp	r3, #0
 801a2ae:	d001      	beq.n	801a2b4 <MX_USB_DEVICE_Init+0x3c>
 801a2b0:	f7e9 faa2 	bl	80037f8 <Error_Handler>
 801a2b4:	4805      	ldr	r0, [pc, #20]	@ (801a2cc <MX_USB_DEVICE_Init+0x54>)
 801a2b6:	f7fb fc55 	bl	8015b64 <USBD_Start>
 801a2ba:	4603      	mov	r3, r0
 801a2bc:	2b00      	cmp	r3, #0
 801a2be:	d001      	beq.n	801a2c4 <MX_USB_DEVICE_Init+0x4c>
 801a2c0:	f7e9 fa9a 	bl	80037f8 <Error_Handler>
 801a2c4:	bf00      	nop
 801a2c6:	bd80      	pop	{r7, pc}
 801a2c8:	200000c4 	.word	0x200000c4
 801a2cc:	2000b378 	.word	0x2000b378
 801a2d0:	2000002c 	.word	0x2000002c
 801a2d4:	200000b0 	.word	0x200000b0

0801a2d8 <CDC_Init_FS>:
 801a2d8:	b580      	push	{r7, lr}
 801a2da:	af00      	add	r7, sp, #0
 801a2dc:	2200      	movs	r2, #0
 801a2de:	4905      	ldr	r1, [pc, #20]	@ (801a2f4 <CDC_Init_FS+0x1c>)
 801a2e0:	4805      	ldr	r0, [pc, #20]	@ (801a2f8 <CDC_Init_FS+0x20>)
 801a2e2:	f7fb fb63 	bl	80159ac <USBD_CDC_SetTxBuffer>
 801a2e6:	4905      	ldr	r1, [pc, #20]	@ (801a2fc <CDC_Init_FS+0x24>)
 801a2e8:	4803      	ldr	r0, [pc, #12]	@ (801a2f8 <CDC_Init_FS+0x20>)
 801a2ea:	f7fb fb81 	bl	80159f0 <USBD_CDC_SetRxBuffer>
 801a2ee:	2300      	movs	r3, #0
 801a2f0:	4618      	mov	r0, r3
 801a2f2:	bd80      	pop	{r7, pc}
 801a2f4:	2000be5c 	.word	0x2000be5c
 801a2f8:	2000b378 	.word	0x2000b378
 801a2fc:	2000b65c 	.word	0x2000b65c

0801a300 <CDC_DeInit_FS>:
 801a300:	b480      	push	{r7}
 801a302:	af00      	add	r7, sp, #0
 801a304:	2300      	movs	r3, #0
 801a306:	4618      	mov	r0, r3
 801a308:	46bd      	mov	sp, r7
 801a30a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a30e:	4770      	bx	lr

0801a310 <CDC_Control_FS>:
 801a310:	b480      	push	{r7}
 801a312:	b083      	sub	sp, #12
 801a314:	af00      	add	r7, sp, #0
 801a316:	4603      	mov	r3, r0
 801a318:	6039      	str	r1, [r7, #0]
 801a31a:	71fb      	strb	r3, [r7, #7]
 801a31c:	4613      	mov	r3, r2
 801a31e:	80bb      	strh	r3, [r7, #4]
 801a320:	79fb      	ldrb	r3, [r7, #7]
 801a322:	2b23      	cmp	r3, #35	@ 0x23
 801a324:	f200 808c 	bhi.w	801a440 <CDC_Control_FS+0x130>
 801a328:	a201      	add	r2, pc, #4	@ (adr r2, 801a330 <CDC_Control_FS+0x20>)
 801a32a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a32e:	bf00      	nop
 801a330:	0801a441 	.word	0x0801a441
 801a334:	0801a441 	.word	0x0801a441
 801a338:	0801a441 	.word	0x0801a441
 801a33c:	0801a441 	.word	0x0801a441
 801a340:	0801a441 	.word	0x0801a441
 801a344:	0801a441 	.word	0x0801a441
 801a348:	0801a441 	.word	0x0801a441
 801a34c:	0801a441 	.word	0x0801a441
 801a350:	0801a441 	.word	0x0801a441
 801a354:	0801a441 	.word	0x0801a441
 801a358:	0801a441 	.word	0x0801a441
 801a35c:	0801a441 	.word	0x0801a441
 801a360:	0801a441 	.word	0x0801a441
 801a364:	0801a441 	.word	0x0801a441
 801a368:	0801a441 	.word	0x0801a441
 801a36c:	0801a441 	.word	0x0801a441
 801a370:	0801a441 	.word	0x0801a441
 801a374:	0801a441 	.word	0x0801a441
 801a378:	0801a441 	.word	0x0801a441
 801a37c:	0801a441 	.word	0x0801a441
 801a380:	0801a441 	.word	0x0801a441
 801a384:	0801a441 	.word	0x0801a441
 801a388:	0801a441 	.word	0x0801a441
 801a38c:	0801a441 	.word	0x0801a441
 801a390:	0801a441 	.word	0x0801a441
 801a394:	0801a441 	.word	0x0801a441
 801a398:	0801a441 	.word	0x0801a441
 801a39c:	0801a441 	.word	0x0801a441
 801a3a0:	0801a441 	.word	0x0801a441
 801a3a4:	0801a441 	.word	0x0801a441
 801a3a8:	0801a441 	.word	0x0801a441
 801a3ac:	0801a441 	.word	0x0801a441
 801a3b0:	0801a3c1 	.word	0x0801a3c1
 801a3b4:	0801a3fb 	.word	0x0801a3fb
 801a3b8:	0801a441 	.word	0x0801a441
 801a3bc:	0801a441 	.word	0x0801a441
 801a3c0:	683b      	ldr	r3, [r7, #0]
 801a3c2:	781a      	ldrb	r2, [r3, #0]
 801a3c4:	4b22      	ldr	r3, [pc, #136]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3c6:	701a      	strb	r2, [r3, #0]
 801a3c8:	683b      	ldr	r3, [r7, #0]
 801a3ca:	785a      	ldrb	r2, [r3, #1]
 801a3cc:	4b20      	ldr	r3, [pc, #128]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3ce:	705a      	strb	r2, [r3, #1]
 801a3d0:	683b      	ldr	r3, [r7, #0]
 801a3d2:	789a      	ldrb	r2, [r3, #2]
 801a3d4:	4b1e      	ldr	r3, [pc, #120]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3d6:	709a      	strb	r2, [r3, #2]
 801a3d8:	683b      	ldr	r3, [r7, #0]
 801a3da:	78da      	ldrb	r2, [r3, #3]
 801a3dc:	4b1c      	ldr	r3, [pc, #112]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3de:	70da      	strb	r2, [r3, #3]
 801a3e0:	683b      	ldr	r3, [r7, #0]
 801a3e2:	791a      	ldrb	r2, [r3, #4]
 801a3e4:	4b1a      	ldr	r3, [pc, #104]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3e6:	711a      	strb	r2, [r3, #4]
 801a3e8:	683b      	ldr	r3, [r7, #0]
 801a3ea:	795a      	ldrb	r2, [r3, #5]
 801a3ec:	4b18      	ldr	r3, [pc, #96]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3ee:	715a      	strb	r2, [r3, #5]
 801a3f0:	683b      	ldr	r3, [r7, #0]
 801a3f2:	799a      	ldrb	r2, [r3, #6]
 801a3f4:	4b16      	ldr	r3, [pc, #88]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3f6:	719a      	strb	r2, [r3, #6]
 801a3f8:	e023      	b.n	801a442 <CDC_Control_FS+0x132>
 801a3fa:	4b15      	ldr	r3, [pc, #84]	@ (801a450 <CDC_Control_FS+0x140>)
 801a3fc:	781a      	ldrb	r2, [r3, #0]
 801a3fe:	683b      	ldr	r3, [r7, #0]
 801a400:	701a      	strb	r2, [r3, #0]
 801a402:	683b      	ldr	r3, [r7, #0]
 801a404:	3301      	adds	r3, #1
 801a406:	4a12      	ldr	r2, [pc, #72]	@ (801a450 <CDC_Control_FS+0x140>)
 801a408:	7852      	ldrb	r2, [r2, #1]
 801a40a:	701a      	strb	r2, [r3, #0]
 801a40c:	683b      	ldr	r3, [r7, #0]
 801a40e:	3302      	adds	r3, #2
 801a410:	4a0f      	ldr	r2, [pc, #60]	@ (801a450 <CDC_Control_FS+0x140>)
 801a412:	7892      	ldrb	r2, [r2, #2]
 801a414:	701a      	strb	r2, [r3, #0]
 801a416:	683b      	ldr	r3, [r7, #0]
 801a418:	3303      	adds	r3, #3
 801a41a:	4a0d      	ldr	r2, [pc, #52]	@ (801a450 <CDC_Control_FS+0x140>)
 801a41c:	78d2      	ldrb	r2, [r2, #3]
 801a41e:	701a      	strb	r2, [r3, #0]
 801a420:	683b      	ldr	r3, [r7, #0]
 801a422:	3304      	adds	r3, #4
 801a424:	4a0a      	ldr	r2, [pc, #40]	@ (801a450 <CDC_Control_FS+0x140>)
 801a426:	7912      	ldrb	r2, [r2, #4]
 801a428:	701a      	strb	r2, [r3, #0]
 801a42a:	683b      	ldr	r3, [r7, #0]
 801a42c:	3305      	adds	r3, #5
 801a42e:	4a08      	ldr	r2, [pc, #32]	@ (801a450 <CDC_Control_FS+0x140>)
 801a430:	7952      	ldrb	r2, [r2, #5]
 801a432:	701a      	strb	r2, [r3, #0]
 801a434:	683b      	ldr	r3, [r7, #0]
 801a436:	3306      	adds	r3, #6
 801a438:	4a05      	ldr	r2, [pc, #20]	@ (801a450 <CDC_Control_FS+0x140>)
 801a43a:	7992      	ldrb	r2, [r2, #6]
 801a43c:	701a      	strb	r2, [r3, #0]
 801a43e:	e000      	b.n	801a442 <CDC_Control_FS+0x132>
 801a440:	bf00      	nop
 801a442:	2300      	movs	r3, #0
 801a444:	4618      	mov	r0, r3
 801a446:	370c      	adds	r7, #12
 801a448:	46bd      	mov	sp, r7
 801a44a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a44e:	4770      	bx	lr
 801a450:	2000b654 	.word	0x2000b654

0801a454 <CDC_Receive_FS>:
 801a454:	b580      	push	{r7, lr}
 801a456:	b082      	sub	sp, #8
 801a458:	af00      	add	r7, sp, #0
 801a45a:	6078      	str	r0, [r7, #4]
 801a45c:	6039      	str	r1, [r7, #0]
 801a45e:	6879      	ldr	r1, [r7, #4]
 801a460:	4807      	ldr	r0, [pc, #28]	@ (801a480 <CDC_Receive_FS+0x2c>)
 801a462:	f7fb fac5 	bl	80159f0 <USBD_CDC_SetRxBuffer>
 801a466:	4806      	ldr	r0, [pc, #24]	@ (801a480 <CDC_Receive_FS+0x2c>)
 801a468:	f7fb fae0 	bl	8015a2c <USBD_CDC_ReceivePacket>
 801a46c:	6839      	ldr	r1, [r7, #0]
 801a46e:	6878      	ldr	r0, [r7, #4]
 801a470:	f7f0 fdc2 	bl	800aff8 <usb_vcp_processing>
 801a474:	2300      	movs	r3, #0
 801a476:	4618      	mov	r0, r3
 801a478:	3708      	adds	r7, #8
 801a47a:	46bd      	mov	sp, r7
 801a47c:	bd80      	pop	{r7, pc}
 801a47e:	bf00      	nop
 801a480:	2000b378 	.word	0x2000b378

0801a484 <CDC_TransmitCplt_FS>:
 801a484:	b480      	push	{r7}
 801a486:	b087      	sub	sp, #28
 801a488:	af00      	add	r7, sp, #0
 801a48a:	60f8      	str	r0, [r7, #12]
 801a48c:	60b9      	str	r1, [r7, #8]
 801a48e:	4613      	mov	r3, r2
 801a490:	71fb      	strb	r3, [r7, #7]
 801a492:	2300      	movs	r3, #0
 801a494:	75fb      	strb	r3, [r7, #23]
 801a496:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801a49a:	4618      	mov	r0, r3
 801a49c:	371c      	adds	r7, #28
 801a49e:	46bd      	mov	sp, r7
 801a4a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a4a4:	4770      	bx	lr
	...

0801a4a8 <USBD_FS_DeviceDescriptor>:
 801a4a8:	b480      	push	{r7}
 801a4aa:	b083      	sub	sp, #12
 801a4ac:	af00      	add	r7, sp, #0
 801a4ae:	4603      	mov	r3, r0
 801a4b0:	6039      	str	r1, [r7, #0]
 801a4b2:	71fb      	strb	r3, [r7, #7]
 801a4b4:	683b      	ldr	r3, [r7, #0]
 801a4b6:	2212      	movs	r2, #18
 801a4b8:	801a      	strh	r2, [r3, #0]
 801a4ba:	4b03      	ldr	r3, [pc, #12]	@ (801a4c8 <USBD_FS_DeviceDescriptor+0x20>)
 801a4bc:	4618      	mov	r0, r3
 801a4be:	370c      	adds	r7, #12
 801a4c0:	46bd      	mov	sp, r7
 801a4c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a4c6:	4770      	bx	lr
 801a4c8:	200000e0 	.word	0x200000e0

0801a4cc <USBD_FS_LangIDStrDescriptor>:
 801a4cc:	b480      	push	{r7}
 801a4ce:	b083      	sub	sp, #12
 801a4d0:	af00      	add	r7, sp, #0
 801a4d2:	4603      	mov	r3, r0
 801a4d4:	6039      	str	r1, [r7, #0]
 801a4d6:	71fb      	strb	r3, [r7, #7]
 801a4d8:	683b      	ldr	r3, [r7, #0]
 801a4da:	2204      	movs	r2, #4
 801a4dc:	801a      	strh	r2, [r3, #0]
 801a4de:	4b03      	ldr	r3, [pc, #12]	@ (801a4ec <USBD_FS_LangIDStrDescriptor+0x20>)
 801a4e0:	4618      	mov	r0, r3
 801a4e2:	370c      	adds	r7, #12
 801a4e4:	46bd      	mov	sp, r7
 801a4e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a4ea:	4770      	bx	lr
 801a4ec:	200000f4 	.word	0x200000f4

0801a4f0 <USBD_FS_ProductStrDescriptor>:
 801a4f0:	b580      	push	{r7, lr}
 801a4f2:	b082      	sub	sp, #8
 801a4f4:	af00      	add	r7, sp, #0
 801a4f6:	4603      	mov	r3, r0
 801a4f8:	6039      	str	r1, [r7, #0]
 801a4fa:	71fb      	strb	r3, [r7, #7]
 801a4fc:	79fb      	ldrb	r3, [r7, #7]
 801a4fe:	2b00      	cmp	r3, #0
 801a500:	d105      	bne.n	801a50e <USBD_FS_ProductStrDescriptor+0x1e>
 801a502:	683a      	ldr	r2, [r7, #0]
 801a504:	4907      	ldr	r1, [pc, #28]	@ (801a524 <USBD_FS_ProductStrDescriptor+0x34>)
 801a506:	4808      	ldr	r0, [pc, #32]	@ (801a528 <USBD_FS_ProductStrDescriptor+0x38>)
 801a508:	f7fc fcd6 	bl	8016eb8 <USBD_GetString>
 801a50c:	e004      	b.n	801a518 <USBD_FS_ProductStrDescriptor+0x28>
 801a50e:	683a      	ldr	r2, [r7, #0]
 801a510:	4904      	ldr	r1, [pc, #16]	@ (801a524 <USBD_FS_ProductStrDescriptor+0x34>)
 801a512:	4805      	ldr	r0, [pc, #20]	@ (801a528 <USBD_FS_ProductStrDescriptor+0x38>)
 801a514:	f7fc fcd0 	bl	8016eb8 <USBD_GetString>
 801a518:	4b02      	ldr	r3, [pc, #8]	@ (801a524 <USBD_FS_ProductStrDescriptor+0x34>)
 801a51a:	4618      	mov	r0, r3
 801a51c:	3708      	adds	r7, #8
 801a51e:	46bd      	mov	sp, r7
 801a520:	bd80      	pop	{r7, pc}
 801a522:	bf00      	nop
 801a524:	2000c65c 	.word	0x2000c65c
 801a528:	080210cc 	.word	0x080210cc

0801a52c <USBD_FS_ManufacturerStrDescriptor>:
 801a52c:	b580      	push	{r7, lr}
 801a52e:	b082      	sub	sp, #8
 801a530:	af00      	add	r7, sp, #0
 801a532:	4603      	mov	r3, r0
 801a534:	6039      	str	r1, [r7, #0]
 801a536:	71fb      	strb	r3, [r7, #7]
 801a538:	683a      	ldr	r2, [r7, #0]
 801a53a:	4904      	ldr	r1, [pc, #16]	@ (801a54c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801a53c:	4804      	ldr	r0, [pc, #16]	@ (801a550 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801a53e:	f7fc fcbb 	bl	8016eb8 <USBD_GetString>
 801a542:	4b02      	ldr	r3, [pc, #8]	@ (801a54c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801a544:	4618      	mov	r0, r3
 801a546:	3708      	adds	r7, #8
 801a548:	46bd      	mov	sp, r7
 801a54a:	bd80      	pop	{r7, pc}
 801a54c:	2000c65c 	.word	0x2000c65c
 801a550:	080210e4 	.word	0x080210e4

0801a554 <USBD_FS_SerialStrDescriptor>:
 801a554:	b580      	push	{r7, lr}
 801a556:	b082      	sub	sp, #8
 801a558:	af00      	add	r7, sp, #0
 801a55a:	4603      	mov	r3, r0
 801a55c:	6039      	str	r1, [r7, #0]
 801a55e:	71fb      	strb	r3, [r7, #7]
 801a560:	683b      	ldr	r3, [r7, #0]
 801a562:	221a      	movs	r2, #26
 801a564:	801a      	strh	r2, [r3, #0]
 801a566:	f000 f843 	bl	801a5f0 <Get_SerialNum>
 801a56a:	4b02      	ldr	r3, [pc, #8]	@ (801a574 <USBD_FS_SerialStrDescriptor+0x20>)
 801a56c:	4618      	mov	r0, r3
 801a56e:	3708      	adds	r7, #8
 801a570:	46bd      	mov	sp, r7
 801a572:	bd80      	pop	{r7, pc}
 801a574:	200000f8 	.word	0x200000f8

0801a578 <USBD_FS_ConfigStrDescriptor>:
 801a578:	b580      	push	{r7, lr}
 801a57a:	b082      	sub	sp, #8
 801a57c:	af00      	add	r7, sp, #0
 801a57e:	4603      	mov	r3, r0
 801a580:	6039      	str	r1, [r7, #0]
 801a582:	71fb      	strb	r3, [r7, #7]
 801a584:	79fb      	ldrb	r3, [r7, #7]
 801a586:	2b00      	cmp	r3, #0
 801a588:	d105      	bne.n	801a596 <USBD_FS_ConfigStrDescriptor+0x1e>
 801a58a:	683a      	ldr	r2, [r7, #0]
 801a58c:	4907      	ldr	r1, [pc, #28]	@ (801a5ac <USBD_FS_ConfigStrDescriptor+0x34>)
 801a58e:	4808      	ldr	r0, [pc, #32]	@ (801a5b0 <USBD_FS_ConfigStrDescriptor+0x38>)
 801a590:	f7fc fc92 	bl	8016eb8 <USBD_GetString>
 801a594:	e004      	b.n	801a5a0 <USBD_FS_ConfigStrDescriptor+0x28>
 801a596:	683a      	ldr	r2, [r7, #0]
 801a598:	4904      	ldr	r1, [pc, #16]	@ (801a5ac <USBD_FS_ConfigStrDescriptor+0x34>)
 801a59a:	4805      	ldr	r0, [pc, #20]	@ (801a5b0 <USBD_FS_ConfigStrDescriptor+0x38>)
 801a59c:	f7fc fc8c 	bl	8016eb8 <USBD_GetString>
 801a5a0:	4b02      	ldr	r3, [pc, #8]	@ (801a5ac <USBD_FS_ConfigStrDescriptor+0x34>)
 801a5a2:	4618      	mov	r0, r3
 801a5a4:	3708      	adds	r7, #8
 801a5a6:	46bd      	mov	sp, r7
 801a5a8:	bd80      	pop	{r7, pc}
 801a5aa:	bf00      	nop
 801a5ac:	2000c65c 	.word	0x2000c65c
 801a5b0:	080210f8 	.word	0x080210f8

0801a5b4 <USBD_FS_InterfaceStrDescriptor>:
 801a5b4:	b580      	push	{r7, lr}
 801a5b6:	b082      	sub	sp, #8
 801a5b8:	af00      	add	r7, sp, #0
 801a5ba:	4603      	mov	r3, r0
 801a5bc:	6039      	str	r1, [r7, #0]
 801a5be:	71fb      	strb	r3, [r7, #7]
 801a5c0:	79fb      	ldrb	r3, [r7, #7]
 801a5c2:	2b00      	cmp	r3, #0
 801a5c4:	d105      	bne.n	801a5d2 <USBD_FS_InterfaceStrDescriptor+0x1e>
 801a5c6:	683a      	ldr	r2, [r7, #0]
 801a5c8:	4907      	ldr	r1, [pc, #28]	@ (801a5e8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a5ca:	4808      	ldr	r0, [pc, #32]	@ (801a5ec <USBD_FS_InterfaceStrDescriptor+0x38>)
 801a5cc:	f7fc fc74 	bl	8016eb8 <USBD_GetString>
 801a5d0:	e004      	b.n	801a5dc <USBD_FS_InterfaceStrDescriptor+0x28>
 801a5d2:	683a      	ldr	r2, [r7, #0]
 801a5d4:	4904      	ldr	r1, [pc, #16]	@ (801a5e8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a5d6:	4805      	ldr	r0, [pc, #20]	@ (801a5ec <USBD_FS_InterfaceStrDescriptor+0x38>)
 801a5d8:	f7fc fc6e 	bl	8016eb8 <USBD_GetString>
 801a5dc:	4b02      	ldr	r3, [pc, #8]	@ (801a5e8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a5de:	4618      	mov	r0, r3
 801a5e0:	3708      	adds	r7, #8
 801a5e2:	46bd      	mov	sp, r7
 801a5e4:	bd80      	pop	{r7, pc}
 801a5e6:	bf00      	nop
 801a5e8:	2000c65c 	.word	0x2000c65c
 801a5ec:	08021104 	.word	0x08021104

0801a5f0 <Get_SerialNum>:
 801a5f0:	b580      	push	{r7, lr}
 801a5f2:	b084      	sub	sp, #16
 801a5f4:	af00      	add	r7, sp, #0
 801a5f6:	4b0f      	ldr	r3, [pc, #60]	@ (801a634 <Get_SerialNum+0x44>)
 801a5f8:	681b      	ldr	r3, [r3, #0]
 801a5fa:	60fb      	str	r3, [r7, #12]
 801a5fc:	4b0e      	ldr	r3, [pc, #56]	@ (801a638 <Get_SerialNum+0x48>)
 801a5fe:	681b      	ldr	r3, [r3, #0]
 801a600:	60bb      	str	r3, [r7, #8]
 801a602:	4b0e      	ldr	r3, [pc, #56]	@ (801a63c <Get_SerialNum+0x4c>)
 801a604:	681b      	ldr	r3, [r3, #0]
 801a606:	607b      	str	r3, [r7, #4]
 801a608:	68fa      	ldr	r2, [r7, #12]
 801a60a:	687b      	ldr	r3, [r7, #4]
 801a60c:	4413      	add	r3, r2
 801a60e:	60fb      	str	r3, [r7, #12]
 801a610:	68fb      	ldr	r3, [r7, #12]
 801a612:	2b00      	cmp	r3, #0
 801a614:	d009      	beq.n	801a62a <Get_SerialNum+0x3a>
 801a616:	2208      	movs	r2, #8
 801a618:	4909      	ldr	r1, [pc, #36]	@ (801a640 <Get_SerialNum+0x50>)
 801a61a:	68f8      	ldr	r0, [r7, #12]
 801a61c:	f000 f814 	bl	801a648 <IntToUnicode>
 801a620:	2204      	movs	r2, #4
 801a622:	4908      	ldr	r1, [pc, #32]	@ (801a644 <Get_SerialNum+0x54>)
 801a624:	68b8      	ldr	r0, [r7, #8]
 801a626:	f000 f80f 	bl	801a648 <IntToUnicode>
 801a62a:	bf00      	nop
 801a62c:	3710      	adds	r7, #16
 801a62e:	46bd      	mov	sp, r7
 801a630:	bd80      	pop	{r7, pc}
 801a632:	bf00      	nop
 801a634:	1fff7a10 	.word	0x1fff7a10
 801a638:	1fff7a14 	.word	0x1fff7a14
 801a63c:	1fff7a18 	.word	0x1fff7a18
 801a640:	200000fa 	.word	0x200000fa
 801a644:	2000010a 	.word	0x2000010a

0801a648 <IntToUnicode>:
 801a648:	b480      	push	{r7}
 801a64a:	b087      	sub	sp, #28
 801a64c:	af00      	add	r7, sp, #0
 801a64e:	60f8      	str	r0, [r7, #12]
 801a650:	60b9      	str	r1, [r7, #8]
 801a652:	4613      	mov	r3, r2
 801a654:	71fb      	strb	r3, [r7, #7]
 801a656:	2300      	movs	r3, #0
 801a658:	75fb      	strb	r3, [r7, #23]
 801a65a:	2300      	movs	r3, #0
 801a65c:	75fb      	strb	r3, [r7, #23]
 801a65e:	e027      	b.n	801a6b0 <IntToUnicode+0x68>
 801a660:	68fb      	ldr	r3, [r7, #12]
 801a662:	0f1b      	lsrs	r3, r3, #28
 801a664:	2b09      	cmp	r3, #9
 801a666:	d80b      	bhi.n	801a680 <IntToUnicode+0x38>
 801a668:	68fb      	ldr	r3, [r7, #12]
 801a66a:	0f1b      	lsrs	r3, r3, #28
 801a66c:	b2da      	uxtb	r2, r3
 801a66e:	7dfb      	ldrb	r3, [r7, #23]
 801a670:	005b      	lsls	r3, r3, #1
 801a672:	4619      	mov	r1, r3
 801a674:	68bb      	ldr	r3, [r7, #8]
 801a676:	440b      	add	r3, r1
 801a678:	3230      	adds	r2, #48	@ 0x30
 801a67a:	b2d2      	uxtb	r2, r2
 801a67c:	701a      	strb	r2, [r3, #0]
 801a67e:	e00a      	b.n	801a696 <IntToUnicode+0x4e>
 801a680:	68fb      	ldr	r3, [r7, #12]
 801a682:	0f1b      	lsrs	r3, r3, #28
 801a684:	b2da      	uxtb	r2, r3
 801a686:	7dfb      	ldrb	r3, [r7, #23]
 801a688:	005b      	lsls	r3, r3, #1
 801a68a:	4619      	mov	r1, r3
 801a68c:	68bb      	ldr	r3, [r7, #8]
 801a68e:	440b      	add	r3, r1
 801a690:	3237      	adds	r2, #55	@ 0x37
 801a692:	b2d2      	uxtb	r2, r2
 801a694:	701a      	strb	r2, [r3, #0]
 801a696:	68fb      	ldr	r3, [r7, #12]
 801a698:	011b      	lsls	r3, r3, #4
 801a69a:	60fb      	str	r3, [r7, #12]
 801a69c:	7dfb      	ldrb	r3, [r7, #23]
 801a69e:	005b      	lsls	r3, r3, #1
 801a6a0:	3301      	adds	r3, #1
 801a6a2:	68ba      	ldr	r2, [r7, #8]
 801a6a4:	4413      	add	r3, r2
 801a6a6:	2200      	movs	r2, #0
 801a6a8:	701a      	strb	r2, [r3, #0]
 801a6aa:	7dfb      	ldrb	r3, [r7, #23]
 801a6ac:	3301      	adds	r3, #1
 801a6ae:	75fb      	strb	r3, [r7, #23]
 801a6b0:	7dfa      	ldrb	r2, [r7, #23]
 801a6b2:	79fb      	ldrb	r3, [r7, #7]
 801a6b4:	429a      	cmp	r2, r3
 801a6b6:	d3d3      	bcc.n	801a660 <IntToUnicode+0x18>
 801a6b8:	bf00      	nop
 801a6ba:	bf00      	nop
 801a6bc:	371c      	adds	r7, #28
 801a6be:	46bd      	mov	sp, r7
 801a6c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a6c4:	4770      	bx	lr
	...

0801a6c8 <HAL_PCD_MspInit>:
 801a6c8:	b580      	push	{r7, lr}
 801a6ca:	b08a      	sub	sp, #40	@ 0x28
 801a6cc:	af00      	add	r7, sp, #0
 801a6ce:	6078      	str	r0, [r7, #4]
 801a6d0:	f107 0314 	add.w	r3, r7, #20
 801a6d4:	2200      	movs	r2, #0
 801a6d6:	601a      	str	r2, [r3, #0]
 801a6d8:	605a      	str	r2, [r3, #4]
 801a6da:	609a      	str	r2, [r3, #8]
 801a6dc:	60da      	str	r2, [r3, #12]
 801a6de:	611a      	str	r2, [r3, #16]
 801a6e0:	687b      	ldr	r3, [r7, #4]
 801a6e2:	681b      	ldr	r3, [r3, #0]
 801a6e4:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 801a6e8:	d13a      	bne.n	801a760 <HAL_PCD_MspInit+0x98>
 801a6ea:	2300      	movs	r3, #0
 801a6ec:	613b      	str	r3, [r7, #16]
 801a6ee:	4b1e      	ldr	r3, [pc, #120]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a6f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a6f2:	4a1d      	ldr	r2, [pc, #116]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a6f4:	f043 0301 	orr.w	r3, r3, #1
 801a6f8:	6313      	str	r3, [r2, #48]	@ 0x30
 801a6fa:	4b1b      	ldr	r3, [pc, #108]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a6fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a6fe:	f003 0301 	and.w	r3, r3, #1
 801a702:	613b      	str	r3, [r7, #16]
 801a704:	693b      	ldr	r3, [r7, #16]
 801a706:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 801a70a:	617b      	str	r3, [r7, #20]
 801a70c:	2302      	movs	r3, #2
 801a70e:	61bb      	str	r3, [r7, #24]
 801a710:	2300      	movs	r3, #0
 801a712:	61fb      	str	r3, [r7, #28]
 801a714:	2303      	movs	r3, #3
 801a716:	623b      	str	r3, [r7, #32]
 801a718:	230a      	movs	r3, #10
 801a71a:	627b      	str	r3, [r7, #36]	@ 0x24
 801a71c:	f107 0314 	add.w	r3, r7, #20
 801a720:	4619      	mov	r1, r3
 801a722:	4812      	ldr	r0, [pc, #72]	@ (801a76c <HAL_PCD_MspInit+0xa4>)
 801a724:	f7f2 fb40 	bl	800cda8 <HAL_GPIO_Init>
 801a728:	4b0f      	ldr	r3, [pc, #60]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a72a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801a72c:	4a0e      	ldr	r2, [pc, #56]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a72e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801a732:	6353      	str	r3, [r2, #52]	@ 0x34
 801a734:	2300      	movs	r3, #0
 801a736:	60fb      	str	r3, [r7, #12]
 801a738:	4b0b      	ldr	r3, [pc, #44]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a73a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a73c:	4a0a      	ldr	r2, [pc, #40]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a73e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 801a742:	6453      	str	r3, [r2, #68]	@ 0x44
 801a744:	4b08      	ldr	r3, [pc, #32]	@ (801a768 <HAL_PCD_MspInit+0xa0>)
 801a746:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a748:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 801a74c:	60fb      	str	r3, [r7, #12]
 801a74e:	68fb      	ldr	r3, [r7, #12]
 801a750:	2200      	movs	r2, #0
 801a752:	2105      	movs	r1, #5
 801a754:	2043      	movs	r0, #67	@ 0x43
 801a756:	f7f1 fee1 	bl	800c51c <HAL_NVIC_SetPriority>
 801a75a:	2043      	movs	r0, #67	@ 0x43
 801a75c:	f7f1 fefa 	bl	800c554 <HAL_NVIC_EnableIRQ>
 801a760:	bf00      	nop
 801a762:	3728      	adds	r7, #40	@ 0x28
 801a764:	46bd      	mov	sp, r7
 801a766:	bd80      	pop	{r7, pc}
 801a768:	40023800 	.word	0x40023800
 801a76c:	40020000 	.word	0x40020000

0801a770 <HAL_PCD_SetupStageCallback>:
 801a770:	b580      	push	{r7, lr}
 801a772:	b082      	sub	sp, #8
 801a774:	af00      	add	r7, sp, #0
 801a776:	6078      	str	r0, [r7, #4]
 801a778:	687b      	ldr	r3, [r7, #4]
 801a77a:	f8d3 2508 	ldr.w	r2, [r3, #1288]	@ 0x508
 801a77e:	687b      	ldr	r3, [r7, #4]
 801a780:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 801a784:	4619      	mov	r1, r3
 801a786:	4610      	mov	r0, r2
 801a788:	f7fb fa39 	bl	8015bfe <USBD_LL_SetupStage>
 801a78c:	bf00      	nop
 801a78e:	3708      	adds	r7, #8
 801a790:	46bd      	mov	sp, r7
 801a792:	bd80      	pop	{r7, pc}

0801a794 <HAL_PCD_DataOutStageCallback>:
 801a794:	b580      	push	{r7, lr}
 801a796:	b082      	sub	sp, #8
 801a798:	af00      	add	r7, sp, #0
 801a79a:	6078      	str	r0, [r7, #4]
 801a79c:	460b      	mov	r3, r1
 801a79e:	70fb      	strb	r3, [r7, #3]
 801a7a0:	687b      	ldr	r3, [r7, #4]
 801a7a2:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801a7a6:	78fa      	ldrb	r2, [r7, #3]
 801a7a8:	6879      	ldr	r1, [r7, #4]
 801a7aa:	4613      	mov	r3, r2
 801a7ac:	00db      	lsls	r3, r3, #3
 801a7ae:	4413      	add	r3, r2
 801a7b0:	009b      	lsls	r3, r3, #2
 801a7b2:	440b      	add	r3, r1
 801a7b4:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 801a7b8:	681a      	ldr	r2, [r3, #0]
 801a7ba:	78fb      	ldrb	r3, [r7, #3]
 801a7bc:	4619      	mov	r1, r3
 801a7be:	f7fb fa73 	bl	8015ca8 <USBD_LL_DataOutStage>
 801a7c2:	bf00      	nop
 801a7c4:	3708      	adds	r7, #8
 801a7c6:	46bd      	mov	sp, r7
 801a7c8:	bd80      	pop	{r7, pc}

0801a7ca <HAL_PCD_DataInStageCallback>:
 801a7ca:	b580      	push	{r7, lr}
 801a7cc:	b082      	sub	sp, #8
 801a7ce:	af00      	add	r7, sp, #0
 801a7d0:	6078      	str	r0, [r7, #4]
 801a7d2:	460b      	mov	r3, r1
 801a7d4:	70fb      	strb	r3, [r7, #3]
 801a7d6:	687b      	ldr	r3, [r7, #4]
 801a7d8:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801a7dc:	78fa      	ldrb	r2, [r7, #3]
 801a7de:	6879      	ldr	r1, [r7, #4]
 801a7e0:	4613      	mov	r3, r2
 801a7e2:	00db      	lsls	r3, r3, #3
 801a7e4:	4413      	add	r3, r2
 801a7e6:	009b      	lsls	r3, r3, #2
 801a7e8:	440b      	add	r3, r1
 801a7ea:	334c      	adds	r3, #76	@ 0x4c
 801a7ec:	681a      	ldr	r2, [r3, #0]
 801a7ee:	78fb      	ldrb	r3, [r7, #3]
 801a7f0:	4619      	mov	r1, r3
 801a7f2:	f7fb fb0c 	bl	8015e0e <USBD_LL_DataInStage>
 801a7f6:	bf00      	nop
 801a7f8:	3708      	adds	r7, #8
 801a7fa:	46bd      	mov	sp, r7
 801a7fc:	bd80      	pop	{r7, pc}

0801a7fe <HAL_PCD_SOFCallback>:
 801a7fe:	b580      	push	{r7, lr}
 801a800:	b082      	sub	sp, #8
 801a802:	af00      	add	r7, sp, #0
 801a804:	6078      	str	r0, [r7, #4]
 801a806:	687b      	ldr	r3, [r7, #4]
 801a808:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a80c:	4618      	mov	r0, r3
 801a80e:	f7fb fc40 	bl	8016092 <USBD_LL_SOF>
 801a812:	bf00      	nop
 801a814:	3708      	adds	r7, #8
 801a816:	46bd      	mov	sp, r7
 801a818:	bd80      	pop	{r7, pc}

0801a81a <HAL_PCD_ResetCallback>:
 801a81a:	b580      	push	{r7, lr}
 801a81c:	b084      	sub	sp, #16
 801a81e:	af00      	add	r7, sp, #0
 801a820:	6078      	str	r0, [r7, #4]
 801a822:	2301      	movs	r3, #1
 801a824:	73fb      	strb	r3, [r7, #15]
 801a826:	687b      	ldr	r3, [r7, #4]
 801a828:	68db      	ldr	r3, [r3, #12]
 801a82a:	2b00      	cmp	r3, #0
 801a82c:	d102      	bne.n	801a834 <HAL_PCD_ResetCallback+0x1a>
 801a82e:	2300      	movs	r3, #0
 801a830:	73fb      	strb	r3, [r7, #15]
 801a832:	e008      	b.n	801a846 <HAL_PCD_ResetCallback+0x2c>
 801a834:	687b      	ldr	r3, [r7, #4]
 801a836:	68db      	ldr	r3, [r3, #12]
 801a838:	2b02      	cmp	r3, #2
 801a83a:	d102      	bne.n	801a842 <HAL_PCD_ResetCallback+0x28>
 801a83c:	2301      	movs	r3, #1
 801a83e:	73fb      	strb	r3, [r7, #15]
 801a840:	e001      	b.n	801a846 <HAL_PCD_ResetCallback+0x2c>
 801a842:	f7e8 ffd9 	bl	80037f8 <Error_Handler>
 801a846:	687b      	ldr	r3, [r7, #4]
 801a848:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a84c:	7bfa      	ldrb	r2, [r7, #15]
 801a84e:	4611      	mov	r1, r2
 801a850:	4618      	mov	r0, r3
 801a852:	f7fb fbe0 	bl	8016016 <USBD_LL_SetSpeed>
 801a856:	687b      	ldr	r3, [r7, #4]
 801a858:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a85c:	4618      	mov	r0, r3
 801a85e:	f7fb fb88 	bl	8015f72 <USBD_LL_Reset>
 801a862:	bf00      	nop
 801a864:	3710      	adds	r7, #16
 801a866:	46bd      	mov	sp, r7
 801a868:	bd80      	pop	{r7, pc}
	...

0801a86c <HAL_PCD_SuspendCallback>:
 801a86c:	b580      	push	{r7, lr}
 801a86e:	b082      	sub	sp, #8
 801a870:	af00      	add	r7, sp, #0
 801a872:	6078      	str	r0, [r7, #4]
 801a874:	687b      	ldr	r3, [r7, #4]
 801a876:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a87a:	4618      	mov	r0, r3
 801a87c:	f7fb fbdb 	bl	8016036 <USBD_LL_Suspend>
 801a880:	687b      	ldr	r3, [r7, #4]
 801a882:	681b      	ldr	r3, [r3, #0]
 801a884:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 801a888:	681b      	ldr	r3, [r3, #0]
 801a88a:	687a      	ldr	r2, [r7, #4]
 801a88c:	6812      	ldr	r2, [r2, #0]
 801a88e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 801a892:	f043 0301 	orr.w	r3, r3, #1
 801a896:	6013      	str	r3, [r2, #0]
 801a898:	687b      	ldr	r3, [r7, #4]
 801a89a:	6a1b      	ldr	r3, [r3, #32]
 801a89c:	2b00      	cmp	r3, #0
 801a89e:	d005      	beq.n	801a8ac <HAL_PCD_SuspendCallback+0x40>
 801a8a0:	4b04      	ldr	r3, [pc, #16]	@ (801a8b4 <HAL_PCD_SuspendCallback+0x48>)
 801a8a2:	691b      	ldr	r3, [r3, #16]
 801a8a4:	4a03      	ldr	r2, [pc, #12]	@ (801a8b4 <HAL_PCD_SuspendCallback+0x48>)
 801a8a6:	f043 0306 	orr.w	r3, r3, #6
 801a8aa:	6113      	str	r3, [r2, #16]
 801a8ac:	bf00      	nop
 801a8ae:	3708      	adds	r7, #8
 801a8b0:	46bd      	mov	sp, r7
 801a8b2:	bd80      	pop	{r7, pc}
 801a8b4:	e000ed00 	.word	0xe000ed00

0801a8b8 <HAL_PCD_ResumeCallback>:
 801a8b8:	b580      	push	{r7, lr}
 801a8ba:	b082      	sub	sp, #8
 801a8bc:	af00      	add	r7, sp, #0
 801a8be:	6078      	str	r0, [r7, #4]
 801a8c0:	687b      	ldr	r3, [r7, #4]
 801a8c2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a8c6:	4618      	mov	r0, r3
 801a8c8:	f7fb fbcb 	bl	8016062 <USBD_LL_Resume>
 801a8cc:	bf00      	nop
 801a8ce:	3708      	adds	r7, #8
 801a8d0:	46bd      	mov	sp, r7
 801a8d2:	bd80      	pop	{r7, pc}

0801a8d4 <HAL_PCD_ISOOUTIncompleteCallback>:
 801a8d4:	b580      	push	{r7, lr}
 801a8d6:	b082      	sub	sp, #8
 801a8d8:	af00      	add	r7, sp, #0
 801a8da:	6078      	str	r0, [r7, #4]
 801a8dc:	460b      	mov	r3, r1
 801a8de:	70fb      	strb	r3, [r7, #3]
 801a8e0:	687b      	ldr	r3, [r7, #4]
 801a8e2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a8e6:	78fa      	ldrb	r2, [r7, #3]
 801a8e8:	4611      	mov	r1, r2
 801a8ea:	4618      	mov	r0, r3
 801a8ec:	f7fb fc23 	bl	8016136 <USBD_LL_IsoOUTIncomplete>
 801a8f0:	bf00      	nop
 801a8f2:	3708      	adds	r7, #8
 801a8f4:	46bd      	mov	sp, r7
 801a8f6:	bd80      	pop	{r7, pc}

0801a8f8 <HAL_PCD_ISOINIncompleteCallback>:
 801a8f8:	b580      	push	{r7, lr}
 801a8fa:	b082      	sub	sp, #8
 801a8fc:	af00      	add	r7, sp, #0
 801a8fe:	6078      	str	r0, [r7, #4]
 801a900:	460b      	mov	r3, r1
 801a902:	70fb      	strb	r3, [r7, #3]
 801a904:	687b      	ldr	r3, [r7, #4]
 801a906:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a90a:	78fa      	ldrb	r2, [r7, #3]
 801a90c:	4611      	mov	r1, r2
 801a90e:	4618      	mov	r0, r3
 801a910:	f7fb fbdf 	bl	80160d2 <USBD_LL_IsoINIncomplete>
 801a914:	bf00      	nop
 801a916:	3708      	adds	r7, #8
 801a918:	46bd      	mov	sp, r7
 801a91a:	bd80      	pop	{r7, pc}

0801a91c <HAL_PCD_ConnectCallback>:
 801a91c:	b580      	push	{r7, lr}
 801a91e:	b082      	sub	sp, #8
 801a920:	af00      	add	r7, sp, #0
 801a922:	6078      	str	r0, [r7, #4]
 801a924:	687b      	ldr	r3, [r7, #4]
 801a926:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a92a:	4618      	mov	r0, r3
 801a92c:	f7fb fc35 	bl	801619a <USBD_LL_DevConnected>
 801a930:	bf00      	nop
 801a932:	3708      	adds	r7, #8
 801a934:	46bd      	mov	sp, r7
 801a936:	bd80      	pop	{r7, pc}

0801a938 <HAL_PCD_DisconnectCallback>:
 801a938:	b580      	push	{r7, lr}
 801a93a:	b082      	sub	sp, #8
 801a93c:	af00      	add	r7, sp, #0
 801a93e:	6078      	str	r0, [r7, #4]
 801a940:	687b      	ldr	r3, [r7, #4]
 801a942:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a946:	4618      	mov	r0, r3
 801a948:	f7fb fc32 	bl	80161b0 <USBD_LL_DevDisconnected>
 801a94c:	bf00      	nop
 801a94e:	3708      	adds	r7, #8
 801a950:	46bd      	mov	sp, r7
 801a952:	bd80      	pop	{r7, pc}

0801a954 <USBD_LL_Init>:
 801a954:	b580      	push	{r7, lr}
 801a956:	b082      	sub	sp, #8
 801a958:	af00      	add	r7, sp, #0
 801a95a:	6078      	str	r0, [r7, #4]
 801a95c:	687b      	ldr	r3, [r7, #4]
 801a95e:	781b      	ldrb	r3, [r3, #0]
 801a960:	2b00      	cmp	r3, #0
 801a962:	d13c      	bne.n	801a9de <USBD_LL_Init+0x8a>
 801a964:	4a20      	ldr	r2, [pc, #128]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a966:	687b      	ldr	r3, [r7, #4]
 801a968:	f8c2 3508 	str.w	r3, [r2, #1288]	@ 0x508
 801a96c:	687b      	ldr	r3, [r7, #4]
 801a96e:	4a1e      	ldr	r2, [pc, #120]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a970:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 801a974:	4b1c      	ldr	r3, [pc, #112]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a976:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 801a97a:	601a      	str	r2, [r3, #0]
 801a97c:	4b1a      	ldr	r3, [pc, #104]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a97e:	2204      	movs	r2, #4
 801a980:	605a      	str	r2, [r3, #4]
 801a982:	4b19      	ldr	r3, [pc, #100]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a984:	2202      	movs	r2, #2
 801a986:	60da      	str	r2, [r3, #12]
 801a988:	4b17      	ldr	r3, [pc, #92]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a98a:	2200      	movs	r2, #0
 801a98c:	611a      	str	r2, [r3, #16]
 801a98e:	4b16      	ldr	r3, [pc, #88]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a990:	2202      	movs	r2, #2
 801a992:	619a      	str	r2, [r3, #24]
 801a994:	4b14      	ldr	r3, [pc, #80]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a996:	2200      	movs	r2, #0
 801a998:	61da      	str	r2, [r3, #28]
 801a99a:	4b13      	ldr	r3, [pc, #76]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a99c:	2200      	movs	r2, #0
 801a99e:	621a      	str	r2, [r3, #32]
 801a9a0:	4b11      	ldr	r3, [pc, #68]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9a2:	2200      	movs	r2, #0
 801a9a4:	625a      	str	r2, [r3, #36]	@ 0x24
 801a9a6:	4b10      	ldr	r3, [pc, #64]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9a8:	2200      	movs	r2, #0
 801a9aa:	62da      	str	r2, [r3, #44]	@ 0x2c
 801a9ac:	4b0e      	ldr	r3, [pc, #56]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9ae:	2200      	movs	r2, #0
 801a9b0:	631a      	str	r2, [r3, #48]	@ 0x30
 801a9b2:	480d      	ldr	r0, [pc, #52]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9b4:	f7f4 f951 	bl	800ec5a <HAL_PCD_Init>
 801a9b8:	4603      	mov	r3, r0
 801a9ba:	2b00      	cmp	r3, #0
 801a9bc:	d001      	beq.n	801a9c2 <USBD_LL_Init+0x6e>
 801a9be:	f7e8 ff1b 	bl	80037f8 <Error_Handler>
 801a9c2:	2180      	movs	r1, #128	@ 0x80
 801a9c4:	4808      	ldr	r0, [pc, #32]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9c6:	f7f5 fba8 	bl	801011a <HAL_PCDEx_SetRxFiFo>
 801a9ca:	2240      	movs	r2, #64	@ 0x40
 801a9cc:	2100      	movs	r1, #0
 801a9ce:	4806      	ldr	r0, [pc, #24]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9d0:	f7f5 fb5c 	bl	801008c <HAL_PCDEx_SetTxFiFo>
 801a9d4:	2280      	movs	r2, #128	@ 0x80
 801a9d6:	2101      	movs	r1, #1
 801a9d8:	4803      	ldr	r0, [pc, #12]	@ (801a9e8 <USBD_LL_Init+0x94>)
 801a9da:	f7f5 fb57 	bl	801008c <HAL_PCDEx_SetTxFiFo>
 801a9de:	2300      	movs	r3, #0
 801a9e0:	4618      	mov	r0, r3
 801a9e2:	3708      	adds	r7, #8
 801a9e4:	46bd      	mov	sp, r7
 801a9e6:	bd80      	pop	{r7, pc}
 801a9e8:	2000c85c 	.word	0x2000c85c

0801a9ec <USBD_LL_Start>:
 801a9ec:	b580      	push	{r7, lr}
 801a9ee:	b084      	sub	sp, #16
 801a9f0:	af00      	add	r7, sp, #0
 801a9f2:	6078      	str	r0, [r7, #4]
 801a9f4:	2300      	movs	r3, #0
 801a9f6:	73fb      	strb	r3, [r7, #15]
 801a9f8:	2300      	movs	r3, #0
 801a9fa:	73bb      	strb	r3, [r7, #14]
 801a9fc:	687b      	ldr	r3, [r7, #4]
 801a9fe:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aa02:	4618      	mov	r0, r3
 801aa04:	f7f4 fa46 	bl	800ee94 <HAL_PCD_Start>
 801aa08:	4603      	mov	r3, r0
 801aa0a:	73fb      	strb	r3, [r7, #15]
 801aa0c:	7bfb      	ldrb	r3, [r7, #15]
 801aa0e:	4618      	mov	r0, r3
 801aa10:	f000 f942 	bl	801ac98 <USBD_Get_USB_Status>
 801aa14:	4603      	mov	r3, r0
 801aa16:	73bb      	strb	r3, [r7, #14]
 801aa18:	7bbb      	ldrb	r3, [r7, #14]
 801aa1a:	4618      	mov	r0, r3
 801aa1c:	3710      	adds	r7, #16
 801aa1e:	46bd      	mov	sp, r7
 801aa20:	bd80      	pop	{r7, pc}

0801aa22 <USBD_LL_OpenEP>:
 801aa22:	b580      	push	{r7, lr}
 801aa24:	b084      	sub	sp, #16
 801aa26:	af00      	add	r7, sp, #0
 801aa28:	6078      	str	r0, [r7, #4]
 801aa2a:	4608      	mov	r0, r1
 801aa2c:	4611      	mov	r1, r2
 801aa2e:	461a      	mov	r2, r3
 801aa30:	4603      	mov	r3, r0
 801aa32:	70fb      	strb	r3, [r7, #3]
 801aa34:	460b      	mov	r3, r1
 801aa36:	70bb      	strb	r3, [r7, #2]
 801aa38:	4613      	mov	r3, r2
 801aa3a:	803b      	strh	r3, [r7, #0]
 801aa3c:	2300      	movs	r3, #0
 801aa3e:	73fb      	strb	r3, [r7, #15]
 801aa40:	2300      	movs	r3, #0
 801aa42:	73bb      	strb	r3, [r7, #14]
 801aa44:	687b      	ldr	r3, [r7, #4]
 801aa46:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801aa4a:	78bb      	ldrb	r3, [r7, #2]
 801aa4c:	883a      	ldrh	r2, [r7, #0]
 801aa4e:	78f9      	ldrb	r1, [r7, #3]
 801aa50:	f7f4 ff17 	bl	800f882 <HAL_PCD_EP_Open>
 801aa54:	4603      	mov	r3, r0
 801aa56:	73fb      	strb	r3, [r7, #15]
 801aa58:	7bfb      	ldrb	r3, [r7, #15]
 801aa5a:	4618      	mov	r0, r3
 801aa5c:	f000 f91c 	bl	801ac98 <USBD_Get_USB_Status>
 801aa60:	4603      	mov	r3, r0
 801aa62:	73bb      	strb	r3, [r7, #14]
 801aa64:	7bbb      	ldrb	r3, [r7, #14]
 801aa66:	4618      	mov	r0, r3
 801aa68:	3710      	adds	r7, #16
 801aa6a:	46bd      	mov	sp, r7
 801aa6c:	bd80      	pop	{r7, pc}

0801aa6e <USBD_LL_CloseEP>:
 801aa6e:	b580      	push	{r7, lr}
 801aa70:	b084      	sub	sp, #16
 801aa72:	af00      	add	r7, sp, #0
 801aa74:	6078      	str	r0, [r7, #4]
 801aa76:	460b      	mov	r3, r1
 801aa78:	70fb      	strb	r3, [r7, #3]
 801aa7a:	2300      	movs	r3, #0
 801aa7c:	73fb      	strb	r3, [r7, #15]
 801aa7e:	2300      	movs	r3, #0
 801aa80:	73bb      	strb	r3, [r7, #14]
 801aa82:	687b      	ldr	r3, [r7, #4]
 801aa84:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aa88:	78fa      	ldrb	r2, [r7, #3]
 801aa8a:	4611      	mov	r1, r2
 801aa8c:	4618      	mov	r0, r3
 801aa8e:	f7f4 ff60 	bl	800f952 <HAL_PCD_EP_Close>
 801aa92:	4603      	mov	r3, r0
 801aa94:	73fb      	strb	r3, [r7, #15]
 801aa96:	7bfb      	ldrb	r3, [r7, #15]
 801aa98:	4618      	mov	r0, r3
 801aa9a:	f000 f8fd 	bl	801ac98 <USBD_Get_USB_Status>
 801aa9e:	4603      	mov	r3, r0
 801aaa0:	73bb      	strb	r3, [r7, #14]
 801aaa2:	7bbb      	ldrb	r3, [r7, #14]
 801aaa4:	4618      	mov	r0, r3
 801aaa6:	3710      	adds	r7, #16
 801aaa8:	46bd      	mov	sp, r7
 801aaaa:	bd80      	pop	{r7, pc}

0801aaac <USBD_LL_StallEP>:
 801aaac:	b580      	push	{r7, lr}
 801aaae:	b084      	sub	sp, #16
 801aab0:	af00      	add	r7, sp, #0
 801aab2:	6078      	str	r0, [r7, #4]
 801aab4:	460b      	mov	r3, r1
 801aab6:	70fb      	strb	r3, [r7, #3]
 801aab8:	2300      	movs	r3, #0
 801aaba:	73fb      	strb	r3, [r7, #15]
 801aabc:	2300      	movs	r3, #0
 801aabe:	73bb      	strb	r3, [r7, #14]
 801aac0:	687b      	ldr	r3, [r7, #4]
 801aac2:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aac6:	78fa      	ldrb	r2, [r7, #3]
 801aac8:	4611      	mov	r1, r2
 801aaca:	4618      	mov	r0, r3
 801aacc:	f7f5 f838 	bl	800fb40 <HAL_PCD_EP_SetStall>
 801aad0:	4603      	mov	r3, r0
 801aad2:	73fb      	strb	r3, [r7, #15]
 801aad4:	7bfb      	ldrb	r3, [r7, #15]
 801aad6:	4618      	mov	r0, r3
 801aad8:	f000 f8de 	bl	801ac98 <USBD_Get_USB_Status>
 801aadc:	4603      	mov	r3, r0
 801aade:	73bb      	strb	r3, [r7, #14]
 801aae0:	7bbb      	ldrb	r3, [r7, #14]
 801aae2:	4618      	mov	r0, r3
 801aae4:	3710      	adds	r7, #16
 801aae6:	46bd      	mov	sp, r7
 801aae8:	bd80      	pop	{r7, pc}

0801aaea <USBD_LL_ClearStallEP>:
 801aaea:	b580      	push	{r7, lr}
 801aaec:	b084      	sub	sp, #16
 801aaee:	af00      	add	r7, sp, #0
 801aaf0:	6078      	str	r0, [r7, #4]
 801aaf2:	460b      	mov	r3, r1
 801aaf4:	70fb      	strb	r3, [r7, #3]
 801aaf6:	2300      	movs	r3, #0
 801aaf8:	73fb      	strb	r3, [r7, #15]
 801aafa:	2300      	movs	r3, #0
 801aafc:	73bb      	strb	r3, [r7, #14]
 801aafe:	687b      	ldr	r3, [r7, #4]
 801ab00:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801ab04:	78fa      	ldrb	r2, [r7, #3]
 801ab06:	4611      	mov	r1, r2
 801ab08:	4618      	mov	r0, r3
 801ab0a:	f7f5 f87d 	bl	800fc08 <HAL_PCD_EP_ClrStall>
 801ab0e:	4603      	mov	r3, r0
 801ab10:	73fb      	strb	r3, [r7, #15]
 801ab12:	7bfb      	ldrb	r3, [r7, #15]
 801ab14:	4618      	mov	r0, r3
 801ab16:	f000 f8bf 	bl	801ac98 <USBD_Get_USB_Status>
 801ab1a:	4603      	mov	r3, r0
 801ab1c:	73bb      	strb	r3, [r7, #14]
 801ab1e:	7bbb      	ldrb	r3, [r7, #14]
 801ab20:	4618      	mov	r0, r3
 801ab22:	3710      	adds	r7, #16
 801ab24:	46bd      	mov	sp, r7
 801ab26:	bd80      	pop	{r7, pc}

0801ab28 <USBD_LL_IsStallEP>:
 801ab28:	b480      	push	{r7}
 801ab2a:	b085      	sub	sp, #20
 801ab2c:	af00      	add	r7, sp, #0
 801ab2e:	6078      	str	r0, [r7, #4]
 801ab30:	460b      	mov	r3, r1
 801ab32:	70fb      	strb	r3, [r7, #3]
 801ab34:	687b      	ldr	r3, [r7, #4]
 801ab36:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801ab3a:	60fb      	str	r3, [r7, #12]
 801ab3c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801ab40:	2b00      	cmp	r3, #0
 801ab42:	da0b      	bge.n	801ab5c <USBD_LL_IsStallEP+0x34>
 801ab44:	78fb      	ldrb	r3, [r7, #3]
 801ab46:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801ab4a:	68f9      	ldr	r1, [r7, #12]
 801ab4c:	4613      	mov	r3, r2
 801ab4e:	00db      	lsls	r3, r3, #3
 801ab50:	4413      	add	r3, r2
 801ab52:	009b      	lsls	r3, r3, #2
 801ab54:	440b      	add	r3, r1
 801ab56:	333e      	adds	r3, #62	@ 0x3e
 801ab58:	781b      	ldrb	r3, [r3, #0]
 801ab5a:	e00b      	b.n	801ab74 <USBD_LL_IsStallEP+0x4c>
 801ab5c:	78fb      	ldrb	r3, [r7, #3]
 801ab5e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801ab62:	68f9      	ldr	r1, [r7, #12]
 801ab64:	4613      	mov	r3, r2
 801ab66:	00db      	lsls	r3, r3, #3
 801ab68:	4413      	add	r3, r2
 801ab6a:	009b      	lsls	r3, r3, #2
 801ab6c:	440b      	add	r3, r1
 801ab6e:	f203 237e 	addw	r3, r3, #638	@ 0x27e
 801ab72:	781b      	ldrb	r3, [r3, #0]
 801ab74:	4618      	mov	r0, r3
 801ab76:	3714      	adds	r7, #20
 801ab78:	46bd      	mov	sp, r7
 801ab7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ab7e:	4770      	bx	lr

0801ab80 <USBD_LL_SetUSBAddress>:
 801ab80:	b580      	push	{r7, lr}
 801ab82:	b084      	sub	sp, #16
 801ab84:	af00      	add	r7, sp, #0
 801ab86:	6078      	str	r0, [r7, #4]
 801ab88:	460b      	mov	r3, r1
 801ab8a:	70fb      	strb	r3, [r7, #3]
 801ab8c:	2300      	movs	r3, #0
 801ab8e:	73fb      	strb	r3, [r7, #15]
 801ab90:	2300      	movs	r3, #0
 801ab92:	73bb      	strb	r3, [r7, #14]
 801ab94:	687b      	ldr	r3, [r7, #4]
 801ab96:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801ab9a:	78fa      	ldrb	r2, [r7, #3]
 801ab9c:	4611      	mov	r1, r2
 801ab9e:	4618      	mov	r0, r3
 801aba0:	f7f4 fe4a 	bl	800f838 <HAL_PCD_SetAddress>
 801aba4:	4603      	mov	r3, r0
 801aba6:	73fb      	strb	r3, [r7, #15]
 801aba8:	7bfb      	ldrb	r3, [r7, #15]
 801abaa:	4618      	mov	r0, r3
 801abac:	f000 f874 	bl	801ac98 <USBD_Get_USB_Status>
 801abb0:	4603      	mov	r3, r0
 801abb2:	73bb      	strb	r3, [r7, #14]
 801abb4:	7bbb      	ldrb	r3, [r7, #14]
 801abb6:	4618      	mov	r0, r3
 801abb8:	3710      	adds	r7, #16
 801abba:	46bd      	mov	sp, r7
 801abbc:	bd80      	pop	{r7, pc}

0801abbe <USBD_LL_Transmit>:
 801abbe:	b580      	push	{r7, lr}
 801abc0:	b086      	sub	sp, #24
 801abc2:	af00      	add	r7, sp, #0
 801abc4:	60f8      	str	r0, [r7, #12]
 801abc6:	607a      	str	r2, [r7, #4]
 801abc8:	603b      	str	r3, [r7, #0]
 801abca:	460b      	mov	r3, r1
 801abcc:	72fb      	strb	r3, [r7, #11]
 801abce:	2300      	movs	r3, #0
 801abd0:	75fb      	strb	r3, [r7, #23]
 801abd2:	2300      	movs	r3, #0
 801abd4:	75bb      	strb	r3, [r7, #22]
 801abd6:	68fb      	ldr	r3, [r7, #12]
 801abd8:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801abdc:	7af9      	ldrb	r1, [r7, #11]
 801abde:	683b      	ldr	r3, [r7, #0]
 801abe0:	687a      	ldr	r2, [r7, #4]
 801abe2:	f7f4 ff63 	bl	800faac <HAL_PCD_EP_Transmit>
 801abe6:	4603      	mov	r3, r0
 801abe8:	75fb      	strb	r3, [r7, #23]
 801abea:	7dfb      	ldrb	r3, [r7, #23]
 801abec:	4618      	mov	r0, r3
 801abee:	f000 f853 	bl	801ac98 <USBD_Get_USB_Status>
 801abf2:	4603      	mov	r3, r0
 801abf4:	75bb      	strb	r3, [r7, #22]
 801abf6:	7dbb      	ldrb	r3, [r7, #22]
 801abf8:	4618      	mov	r0, r3
 801abfa:	3718      	adds	r7, #24
 801abfc:	46bd      	mov	sp, r7
 801abfe:	bd80      	pop	{r7, pc}

0801ac00 <USBD_LL_PrepareReceive>:
 801ac00:	b580      	push	{r7, lr}
 801ac02:	b086      	sub	sp, #24
 801ac04:	af00      	add	r7, sp, #0
 801ac06:	60f8      	str	r0, [r7, #12]
 801ac08:	607a      	str	r2, [r7, #4]
 801ac0a:	603b      	str	r3, [r7, #0]
 801ac0c:	460b      	mov	r3, r1
 801ac0e:	72fb      	strb	r3, [r7, #11]
 801ac10:	2300      	movs	r3, #0
 801ac12:	75fb      	strb	r3, [r7, #23]
 801ac14:	2300      	movs	r3, #0
 801ac16:	75bb      	strb	r3, [r7, #22]
 801ac18:	68fb      	ldr	r3, [r7, #12]
 801ac1a:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801ac1e:	7af9      	ldrb	r1, [r7, #11]
 801ac20:	683b      	ldr	r3, [r7, #0]
 801ac22:	687a      	ldr	r2, [r7, #4]
 801ac24:	f7f4 fedf 	bl	800f9e6 <HAL_PCD_EP_Receive>
 801ac28:	4603      	mov	r3, r0
 801ac2a:	75fb      	strb	r3, [r7, #23]
 801ac2c:	7dfb      	ldrb	r3, [r7, #23]
 801ac2e:	4618      	mov	r0, r3
 801ac30:	f000 f832 	bl	801ac98 <USBD_Get_USB_Status>
 801ac34:	4603      	mov	r3, r0
 801ac36:	75bb      	strb	r3, [r7, #22]
 801ac38:	7dbb      	ldrb	r3, [r7, #22]
 801ac3a:	4618      	mov	r0, r3
 801ac3c:	3718      	adds	r7, #24
 801ac3e:	46bd      	mov	sp, r7
 801ac40:	bd80      	pop	{r7, pc}

0801ac42 <USBD_LL_GetRxDataSize>:
 801ac42:	b580      	push	{r7, lr}
 801ac44:	b082      	sub	sp, #8
 801ac46:	af00      	add	r7, sp, #0
 801ac48:	6078      	str	r0, [r7, #4]
 801ac4a:	460b      	mov	r3, r1
 801ac4c:	70fb      	strb	r3, [r7, #3]
 801ac4e:	687b      	ldr	r3, [r7, #4]
 801ac50:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801ac54:	78fa      	ldrb	r2, [r7, #3]
 801ac56:	4611      	mov	r1, r2
 801ac58:	4618      	mov	r0, r3
 801ac5a:	f7f4 ff0f 	bl	800fa7c <HAL_PCD_EP_GetRxCount>
 801ac5e:	4603      	mov	r3, r0
 801ac60:	4618      	mov	r0, r3
 801ac62:	3708      	adds	r7, #8
 801ac64:	46bd      	mov	sp, r7
 801ac66:	bd80      	pop	{r7, pc}

0801ac68 <USBD_static_malloc>:
 801ac68:	b480      	push	{r7}
 801ac6a:	b083      	sub	sp, #12
 801ac6c:	af00      	add	r7, sp, #0
 801ac6e:	6078      	str	r0, [r7, #4]
 801ac70:	4b03      	ldr	r3, [pc, #12]	@ (801ac80 <USBD_static_malloc+0x18>)
 801ac72:	4618      	mov	r0, r3
 801ac74:	370c      	adds	r7, #12
 801ac76:	46bd      	mov	sp, r7
 801ac78:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ac7c:	4770      	bx	lr
 801ac7e:	bf00      	nop
 801ac80:	2000cd68 	.word	0x2000cd68

0801ac84 <USBD_static_free>:
 801ac84:	b480      	push	{r7}
 801ac86:	b083      	sub	sp, #12
 801ac88:	af00      	add	r7, sp, #0
 801ac8a:	6078      	str	r0, [r7, #4]
 801ac8c:	bf00      	nop
 801ac8e:	370c      	adds	r7, #12
 801ac90:	46bd      	mov	sp, r7
 801ac92:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ac96:	4770      	bx	lr

0801ac98 <USBD_Get_USB_Status>:
 801ac98:	b480      	push	{r7}
 801ac9a:	b085      	sub	sp, #20
 801ac9c:	af00      	add	r7, sp, #0
 801ac9e:	4603      	mov	r3, r0
 801aca0:	71fb      	strb	r3, [r7, #7]
 801aca2:	2300      	movs	r3, #0
 801aca4:	73fb      	strb	r3, [r7, #15]
 801aca6:	79fb      	ldrb	r3, [r7, #7]
 801aca8:	2b03      	cmp	r3, #3
 801acaa:	d817      	bhi.n	801acdc <USBD_Get_USB_Status+0x44>
 801acac:	a201      	add	r2, pc, #4	@ (adr r2, 801acb4 <USBD_Get_USB_Status+0x1c>)
 801acae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801acb2:	bf00      	nop
 801acb4:	0801acc5 	.word	0x0801acc5
 801acb8:	0801accb 	.word	0x0801accb
 801acbc:	0801acd1 	.word	0x0801acd1
 801acc0:	0801acd7 	.word	0x0801acd7
 801acc4:	2300      	movs	r3, #0
 801acc6:	73fb      	strb	r3, [r7, #15]
 801acc8:	e00b      	b.n	801ace2 <USBD_Get_USB_Status+0x4a>
 801acca:	2303      	movs	r3, #3
 801accc:	73fb      	strb	r3, [r7, #15]
 801acce:	e008      	b.n	801ace2 <USBD_Get_USB_Status+0x4a>
 801acd0:	2301      	movs	r3, #1
 801acd2:	73fb      	strb	r3, [r7, #15]
 801acd4:	e005      	b.n	801ace2 <USBD_Get_USB_Status+0x4a>
 801acd6:	2303      	movs	r3, #3
 801acd8:	73fb      	strb	r3, [r7, #15]
 801acda:	e002      	b.n	801ace2 <USBD_Get_USB_Status+0x4a>
 801acdc:	2303      	movs	r3, #3
 801acde:	73fb      	strb	r3, [r7, #15]
 801ace0:	bf00      	nop
 801ace2:	7bfb      	ldrb	r3, [r7, #15]
 801ace4:	4618      	mov	r0, r3
 801ace6:	3714      	adds	r7, #20
 801ace8:	46bd      	mov	sp, r7
 801acea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801acee:	4770      	bx	lr

0801acf0 <std>:
 801acf0:	2300      	movs	r3, #0
 801acf2:	b510      	push	{r4, lr}
 801acf4:	4604      	mov	r4, r0
 801acf6:	e9c0 3300 	strd	r3, r3, [r0]
 801acfa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801acfe:	6083      	str	r3, [r0, #8]
 801ad00:	8181      	strh	r1, [r0, #12]
 801ad02:	6643      	str	r3, [r0, #100]	@ 0x64
 801ad04:	81c2      	strh	r2, [r0, #14]
 801ad06:	6183      	str	r3, [r0, #24]
 801ad08:	4619      	mov	r1, r3
 801ad0a:	2208      	movs	r2, #8
 801ad0c:	305c      	adds	r0, #92	@ 0x5c
 801ad0e:	f000 f928 	bl	801af62 <memset>
 801ad12:	4b0d      	ldr	r3, [pc, #52]	@ (801ad48 <std+0x58>)
 801ad14:	6223      	str	r3, [r4, #32]
 801ad16:	4b0d      	ldr	r3, [pc, #52]	@ (801ad4c <std+0x5c>)
 801ad18:	6263      	str	r3, [r4, #36]	@ 0x24
 801ad1a:	4b0d      	ldr	r3, [pc, #52]	@ (801ad50 <std+0x60>)
 801ad1c:	62a3      	str	r3, [r4, #40]	@ 0x28
 801ad1e:	4b0d      	ldr	r3, [pc, #52]	@ (801ad54 <std+0x64>)
 801ad20:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801ad22:	4b0d      	ldr	r3, [pc, #52]	@ (801ad58 <std+0x68>)
 801ad24:	61e4      	str	r4, [r4, #28]
 801ad26:	429c      	cmp	r4, r3
 801ad28:	d006      	beq.n	801ad38 <std+0x48>
 801ad2a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801ad2e:	4294      	cmp	r4, r2
 801ad30:	d002      	beq.n	801ad38 <std+0x48>
 801ad32:	33d0      	adds	r3, #208	@ 0xd0
 801ad34:	429c      	cmp	r4, r3
 801ad36:	d105      	bne.n	801ad44 <std+0x54>
 801ad38:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801ad3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ad40:	f000 b9b4 	b.w	801b0ac <__retarget_lock_init_recursive>
 801ad44:	bd10      	pop	{r4, pc}
 801ad46:	bf00      	nop
 801ad48:	0801aedd 	.word	0x0801aedd
 801ad4c:	0801aeff 	.word	0x0801aeff
 801ad50:	0801af37 	.word	0x0801af37
 801ad54:	0801af5b 	.word	0x0801af5b
 801ad58:	2000cf88 	.word	0x2000cf88

0801ad5c <stdio_exit_handler>:
 801ad5c:	4a02      	ldr	r2, [pc, #8]	@ (801ad68 <stdio_exit_handler+0xc>)
 801ad5e:	4903      	ldr	r1, [pc, #12]	@ (801ad6c <stdio_exit_handler+0x10>)
 801ad60:	4803      	ldr	r0, [pc, #12]	@ (801ad70 <stdio_exit_handler+0x14>)
 801ad62:	f000 b869 	b.w	801ae38 <_fwalk_sglue>
 801ad66:	bf00      	nop
 801ad68:	20000114 	.word	0x20000114
 801ad6c:	0801cb65 	.word	0x0801cb65
 801ad70:	20000128 	.word	0x20000128

0801ad74 <cleanup_stdio>:
 801ad74:	6841      	ldr	r1, [r0, #4]
 801ad76:	4b0c      	ldr	r3, [pc, #48]	@ (801ada8 <cleanup_stdio+0x34>)
 801ad78:	4299      	cmp	r1, r3
 801ad7a:	b510      	push	{r4, lr}
 801ad7c:	4604      	mov	r4, r0
 801ad7e:	d001      	beq.n	801ad84 <cleanup_stdio+0x10>
 801ad80:	f001 fef0 	bl	801cb64 <_fclose_r>
 801ad84:	68a1      	ldr	r1, [r4, #8]
 801ad86:	4b09      	ldr	r3, [pc, #36]	@ (801adac <cleanup_stdio+0x38>)
 801ad88:	4299      	cmp	r1, r3
 801ad8a:	d002      	beq.n	801ad92 <cleanup_stdio+0x1e>
 801ad8c:	4620      	mov	r0, r4
 801ad8e:	f001 fee9 	bl	801cb64 <_fclose_r>
 801ad92:	68e1      	ldr	r1, [r4, #12]
 801ad94:	4b06      	ldr	r3, [pc, #24]	@ (801adb0 <cleanup_stdio+0x3c>)
 801ad96:	4299      	cmp	r1, r3
 801ad98:	d004      	beq.n	801ada4 <cleanup_stdio+0x30>
 801ad9a:	4620      	mov	r0, r4
 801ad9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ada0:	f001 bee0 	b.w	801cb64 <_fclose_r>
 801ada4:	bd10      	pop	{r4, pc}
 801ada6:	bf00      	nop
 801ada8:	2000cf88 	.word	0x2000cf88
 801adac:	2000cff0 	.word	0x2000cff0
 801adb0:	2000d058 	.word	0x2000d058

0801adb4 <global_stdio_init.part.0>:
 801adb4:	b510      	push	{r4, lr}
 801adb6:	4b0b      	ldr	r3, [pc, #44]	@ (801ade4 <global_stdio_init.part.0+0x30>)
 801adb8:	4c0b      	ldr	r4, [pc, #44]	@ (801ade8 <global_stdio_init.part.0+0x34>)
 801adba:	4a0c      	ldr	r2, [pc, #48]	@ (801adec <global_stdio_init.part.0+0x38>)
 801adbc:	601a      	str	r2, [r3, #0]
 801adbe:	4620      	mov	r0, r4
 801adc0:	2200      	movs	r2, #0
 801adc2:	2104      	movs	r1, #4
 801adc4:	f7ff ff94 	bl	801acf0 <std>
 801adc8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801adcc:	2201      	movs	r2, #1
 801adce:	2109      	movs	r1, #9
 801add0:	f7ff ff8e 	bl	801acf0 <std>
 801add4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801add8:	2202      	movs	r2, #2
 801adda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801adde:	2112      	movs	r1, #18
 801ade0:	f7ff bf86 	b.w	801acf0 <std>
 801ade4:	2000d0c0 	.word	0x2000d0c0
 801ade8:	2000cf88 	.word	0x2000cf88
 801adec:	0801ad5d 	.word	0x0801ad5d

0801adf0 <__sfp_lock_acquire>:
 801adf0:	4801      	ldr	r0, [pc, #4]	@ (801adf8 <__sfp_lock_acquire+0x8>)
 801adf2:	f000 b95d 	b.w	801b0b0 <__retarget_lock_acquire_recursive>
 801adf6:	bf00      	nop
 801adf8:	2000d0ca 	.word	0x2000d0ca

0801adfc <__sfp_lock_release>:
 801adfc:	4801      	ldr	r0, [pc, #4]	@ (801ae04 <__sfp_lock_release+0x8>)
 801adfe:	f000 b958 	b.w	801b0b2 <__retarget_lock_release_recursive>
 801ae02:	bf00      	nop
 801ae04:	2000d0ca 	.word	0x2000d0ca

0801ae08 <__sinit>:
 801ae08:	b510      	push	{r4, lr}
 801ae0a:	4604      	mov	r4, r0
 801ae0c:	f7ff fff0 	bl	801adf0 <__sfp_lock_acquire>
 801ae10:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801ae12:	b11b      	cbz	r3, 801ae1c <__sinit+0x14>
 801ae14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ae18:	f7ff bff0 	b.w	801adfc <__sfp_lock_release>
 801ae1c:	4b04      	ldr	r3, [pc, #16]	@ (801ae30 <__sinit+0x28>)
 801ae1e:	6363      	str	r3, [r4, #52]	@ 0x34
 801ae20:	4b04      	ldr	r3, [pc, #16]	@ (801ae34 <__sinit+0x2c>)
 801ae22:	681b      	ldr	r3, [r3, #0]
 801ae24:	2b00      	cmp	r3, #0
 801ae26:	d1f5      	bne.n	801ae14 <__sinit+0xc>
 801ae28:	f7ff ffc4 	bl	801adb4 <global_stdio_init.part.0>
 801ae2c:	e7f2      	b.n	801ae14 <__sinit+0xc>
 801ae2e:	bf00      	nop
 801ae30:	0801ad75 	.word	0x0801ad75
 801ae34:	2000d0c0 	.word	0x2000d0c0

0801ae38 <_fwalk_sglue>:
 801ae38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ae3c:	4607      	mov	r7, r0
 801ae3e:	4688      	mov	r8, r1
 801ae40:	4614      	mov	r4, r2
 801ae42:	2600      	movs	r6, #0
 801ae44:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ae48:	f1b9 0901 	subs.w	r9, r9, #1
 801ae4c:	d505      	bpl.n	801ae5a <_fwalk_sglue+0x22>
 801ae4e:	6824      	ldr	r4, [r4, #0]
 801ae50:	2c00      	cmp	r4, #0
 801ae52:	d1f7      	bne.n	801ae44 <_fwalk_sglue+0xc>
 801ae54:	4630      	mov	r0, r6
 801ae56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ae5a:	89ab      	ldrh	r3, [r5, #12]
 801ae5c:	2b01      	cmp	r3, #1
 801ae5e:	d907      	bls.n	801ae70 <_fwalk_sglue+0x38>
 801ae60:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ae64:	3301      	adds	r3, #1
 801ae66:	d003      	beq.n	801ae70 <_fwalk_sglue+0x38>
 801ae68:	4629      	mov	r1, r5
 801ae6a:	4638      	mov	r0, r7
 801ae6c:	47c0      	blx	r8
 801ae6e:	4306      	orrs	r6, r0
 801ae70:	3568      	adds	r5, #104	@ 0x68
 801ae72:	e7e9      	b.n	801ae48 <_fwalk_sglue+0x10>

0801ae74 <snprintf>:
 801ae74:	b40c      	push	{r2, r3}
 801ae76:	b530      	push	{r4, r5, lr}
 801ae78:	4b17      	ldr	r3, [pc, #92]	@ (801aed8 <snprintf+0x64>)
 801ae7a:	1e0c      	subs	r4, r1, #0
 801ae7c:	681d      	ldr	r5, [r3, #0]
 801ae7e:	b09d      	sub	sp, #116	@ 0x74
 801ae80:	da08      	bge.n	801ae94 <snprintf+0x20>
 801ae82:	238b      	movs	r3, #139	@ 0x8b
 801ae84:	602b      	str	r3, [r5, #0]
 801ae86:	f04f 30ff 	mov.w	r0, #4294967295
 801ae8a:	b01d      	add	sp, #116	@ 0x74
 801ae8c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ae90:	b002      	add	sp, #8
 801ae92:	4770      	bx	lr
 801ae94:	f44f 7302 	mov.w	r3, #520	@ 0x208
 801ae98:	f8ad 3014 	strh.w	r3, [sp, #20]
 801ae9c:	bf14      	ite	ne
 801ae9e:	f104 33ff 	addne.w	r3, r4, #4294967295
 801aea2:	4623      	moveq	r3, r4
 801aea4:	9304      	str	r3, [sp, #16]
 801aea6:	9307      	str	r3, [sp, #28]
 801aea8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801aeac:	9002      	str	r0, [sp, #8]
 801aeae:	9006      	str	r0, [sp, #24]
 801aeb0:	f8ad 3016 	strh.w	r3, [sp, #22]
 801aeb4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aeb6:	ab21      	add	r3, sp, #132	@ 0x84
 801aeb8:	a902      	add	r1, sp, #8
 801aeba:	4628      	mov	r0, r5
 801aebc:	9301      	str	r3, [sp, #4]
 801aebe:	f000 fc73 	bl	801b7a8 <_svfprintf_r>
 801aec2:	1c43      	adds	r3, r0, #1
 801aec4:	bfbc      	itt	lt
 801aec6:	238b      	movlt	r3, #139	@ 0x8b
 801aec8:	602b      	strlt	r3, [r5, #0]
 801aeca:	2c00      	cmp	r4, #0
 801aecc:	d0dd      	beq.n	801ae8a <snprintf+0x16>
 801aece:	9b02      	ldr	r3, [sp, #8]
 801aed0:	2200      	movs	r2, #0
 801aed2:	701a      	strb	r2, [r3, #0]
 801aed4:	e7d9      	b.n	801ae8a <snprintf+0x16>
 801aed6:	bf00      	nop
 801aed8:	20000120 	.word	0x20000120

0801aedc <__sread>:
 801aedc:	b510      	push	{r4, lr}
 801aede:	460c      	mov	r4, r1
 801aee0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801aee4:	f000 f894 	bl	801b010 <_read_r>
 801aee8:	2800      	cmp	r0, #0
 801aeea:	bfab      	itete	ge
 801aeec:	6d23      	ldrge	r3, [r4, #80]	@ 0x50
 801aeee:	89a3      	ldrhlt	r3, [r4, #12]
 801aef0:	181b      	addge	r3, r3, r0
 801aef2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801aef6:	bfac      	ite	ge
 801aef8:	6523      	strge	r3, [r4, #80]	@ 0x50
 801aefa:	81a3      	strhlt	r3, [r4, #12]
 801aefc:	bd10      	pop	{r4, pc}

0801aefe <__swrite>:
 801aefe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801af02:	461f      	mov	r7, r3
 801af04:	898b      	ldrh	r3, [r1, #12]
 801af06:	05db      	lsls	r3, r3, #23
 801af08:	4605      	mov	r5, r0
 801af0a:	460c      	mov	r4, r1
 801af0c:	4616      	mov	r6, r2
 801af0e:	d505      	bpl.n	801af1c <__swrite+0x1e>
 801af10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801af14:	2302      	movs	r3, #2
 801af16:	2200      	movs	r2, #0
 801af18:	f000 f868 	bl	801afec <_lseek_r>
 801af1c:	89a3      	ldrh	r3, [r4, #12]
 801af1e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801af22:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801af26:	81a3      	strh	r3, [r4, #12]
 801af28:	4632      	mov	r2, r6
 801af2a:	463b      	mov	r3, r7
 801af2c:	4628      	mov	r0, r5
 801af2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801af32:	f000 b87f 	b.w	801b034 <_write_r>

0801af36 <__sseek>:
 801af36:	b510      	push	{r4, lr}
 801af38:	460c      	mov	r4, r1
 801af3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801af3e:	f000 f855 	bl	801afec <_lseek_r>
 801af42:	1c43      	adds	r3, r0, #1
 801af44:	89a3      	ldrh	r3, [r4, #12]
 801af46:	bf15      	itete	ne
 801af48:	6520      	strne	r0, [r4, #80]	@ 0x50
 801af4a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801af4e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801af52:	81a3      	strheq	r3, [r4, #12]
 801af54:	bf18      	it	ne
 801af56:	81a3      	strhne	r3, [r4, #12]
 801af58:	bd10      	pop	{r4, pc}

0801af5a <__sclose>:
 801af5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801af5e:	f000 b809 	b.w	801af74 <_close_r>

0801af62 <memset>:
 801af62:	4402      	add	r2, r0
 801af64:	4603      	mov	r3, r0
 801af66:	4293      	cmp	r3, r2
 801af68:	d100      	bne.n	801af6c <memset+0xa>
 801af6a:	4770      	bx	lr
 801af6c:	f803 1b01 	strb.w	r1, [r3], #1
 801af70:	e7f9      	b.n	801af66 <memset+0x4>
	...

0801af74 <_close_r>:
 801af74:	b538      	push	{r3, r4, r5, lr}
 801af76:	4d06      	ldr	r5, [pc, #24]	@ (801af90 <_close_r+0x1c>)
 801af78:	2300      	movs	r3, #0
 801af7a:	4604      	mov	r4, r0
 801af7c:	4608      	mov	r0, r1
 801af7e:	602b      	str	r3, [r5, #0]
 801af80:	f7e8 ff78 	bl	8003e74 <_close>
 801af84:	1c43      	adds	r3, r0, #1
 801af86:	d102      	bne.n	801af8e <_close_r+0x1a>
 801af88:	682b      	ldr	r3, [r5, #0]
 801af8a:	b103      	cbz	r3, 801af8e <_close_r+0x1a>
 801af8c:	6023      	str	r3, [r4, #0]
 801af8e:	bd38      	pop	{r3, r4, r5, pc}
 801af90:	2000d0c4 	.word	0x2000d0c4

0801af94 <_reclaim_reent>:
 801af94:	4b14      	ldr	r3, [pc, #80]	@ (801afe8 <_reclaim_reent+0x54>)
 801af96:	681b      	ldr	r3, [r3, #0]
 801af98:	4283      	cmp	r3, r0
 801af9a:	b570      	push	{r4, r5, r6, lr}
 801af9c:	4604      	mov	r4, r0
 801af9e:	d022      	beq.n	801afe6 <_reclaim_reent+0x52>
 801afa0:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801afa2:	b153      	cbz	r3, 801afba <_reclaim_reent+0x26>
 801afa4:	2500      	movs	r5, #0
 801afa6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801afa8:	5959      	ldr	r1, [r3, r5]
 801afaa:	b9b1      	cbnz	r1, 801afda <_reclaim_reent+0x46>
 801afac:	3504      	adds	r5, #4
 801afae:	2d80      	cmp	r5, #128	@ 0x80
 801afb0:	d1f9      	bne.n	801afa6 <_reclaim_reent+0x12>
 801afb2:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801afb4:	4620      	mov	r0, r4
 801afb6:	f000 f8f1 	bl	801b19c <_free_r>
 801afba:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801afbc:	b111      	cbz	r1, 801afc4 <_reclaim_reent+0x30>
 801afbe:	4620      	mov	r0, r4
 801afc0:	f000 f8ec 	bl	801b19c <_free_r>
 801afc4:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 801afc6:	b111      	cbz	r1, 801afce <_reclaim_reent+0x3a>
 801afc8:	4620      	mov	r0, r4
 801afca:	f000 f8e7 	bl	801b19c <_free_r>
 801afce:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801afd0:	b14b      	cbz	r3, 801afe6 <_reclaim_reent+0x52>
 801afd2:	4620      	mov	r0, r4
 801afd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801afd8:	4718      	bx	r3
 801afda:	680e      	ldr	r6, [r1, #0]
 801afdc:	4620      	mov	r0, r4
 801afde:	f000 f8dd 	bl	801b19c <_free_r>
 801afe2:	4631      	mov	r1, r6
 801afe4:	e7e1      	b.n	801afaa <_reclaim_reent+0x16>
 801afe6:	bd70      	pop	{r4, r5, r6, pc}
 801afe8:	20000120 	.word	0x20000120

0801afec <_lseek_r>:
 801afec:	b538      	push	{r3, r4, r5, lr}
 801afee:	4d07      	ldr	r5, [pc, #28]	@ (801b00c <_lseek_r+0x20>)
 801aff0:	4604      	mov	r4, r0
 801aff2:	4608      	mov	r0, r1
 801aff4:	4611      	mov	r1, r2
 801aff6:	2200      	movs	r2, #0
 801aff8:	602a      	str	r2, [r5, #0]
 801affa:	461a      	mov	r2, r3
 801affc:	f7e8 ff61 	bl	8003ec2 <_lseek>
 801b000:	1c43      	adds	r3, r0, #1
 801b002:	d102      	bne.n	801b00a <_lseek_r+0x1e>
 801b004:	682b      	ldr	r3, [r5, #0]
 801b006:	b103      	cbz	r3, 801b00a <_lseek_r+0x1e>
 801b008:	6023      	str	r3, [r4, #0]
 801b00a:	bd38      	pop	{r3, r4, r5, pc}
 801b00c:	2000d0c4 	.word	0x2000d0c4

0801b010 <_read_r>:
 801b010:	b538      	push	{r3, r4, r5, lr}
 801b012:	4d07      	ldr	r5, [pc, #28]	@ (801b030 <_read_r+0x20>)
 801b014:	4604      	mov	r4, r0
 801b016:	4608      	mov	r0, r1
 801b018:	4611      	mov	r1, r2
 801b01a:	2200      	movs	r2, #0
 801b01c:	602a      	str	r2, [r5, #0]
 801b01e:	461a      	mov	r2, r3
 801b020:	f7e8 feef 	bl	8003e02 <_read>
 801b024:	1c43      	adds	r3, r0, #1
 801b026:	d102      	bne.n	801b02e <_read_r+0x1e>
 801b028:	682b      	ldr	r3, [r5, #0]
 801b02a:	b103      	cbz	r3, 801b02e <_read_r+0x1e>
 801b02c:	6023      	str	r3, [r4, #0]
 801b02e:	bd38      	pop	{r3, r4, r5, pc}
 801b030:	2000d0c4 	.word	0x2000d0c4

0801b034 <_write_r>:
 801b034:	b538      	push	{r3, r4, r5, lr}
 801b036:	4d07      	ldr	r5, [pc, #28]	@ (801b054 <_write_r+0x20>)
 801b038:	4604      	mov	r4, r0
 801b03a:	4608      	mov	r0, r1
 801b03c:	4611      	mov	r1, r2
 801b03e:	2200      	movs	r2, #0
 801b040:	602a      	str	r2, [r5, #0]
 801b042:	461a      	mov	r2, r3
 801b044:	f7e8 fefa 	bl	8003e3c <_write>
 801b048:	1c43      	adds	r3, r0, #1
 801b04a:	d102      	bne.n	801b052 <_write_r+0x1e>
 801b04c:	682b      	ldr	r3, [r5, #0]
 801b04e:	b103      	cbz	r3, 801b052 <_write_r+0x1e>
 801b050:	6023      	str	r3, [r4, #0]
 801b052:	bd38      	pop	{r3, r4, r5, pc}
 801b054:	2000d0c4 	.word	0x2000d0c4

0801b058 <__errno>:
 801b058:	4b01      	ldr	r3, [pc, #4]	@ (801b060 <__errno+0x8>)
 801b05a:	6818      	ldr	r0, [r3, #0]
 801b05c:	4770      	bx	lr
 801b05e:	bf00      	nop
 801b060:	20000120 	.word	0x20000120

0801b064 <__libc_init_array>:
 801b064:	b570      	push	{r4, r5, r6, lr}
 801b066:	4d0d      	ldr	r5, [pc, #52]	@ (801b09c <__libc_init_array+0x38>)
 801b068:	4c0d      	ldr	r4, [pc, #52]	@ (801b0a0 <__libc_init_array+0x3c>)
 801b06a:	1b64      	subs	r4, r4, r5
 801b06c:	10a4      	asrs	r4, r4, #2
 801b06e:	2600      	movs	r6, #0
 801b070:	42a6      	cmp	r6, r4
 801b072:	d109      	bne.n	801b088 <__libc_init_array+0x24>
 801b074:	4d0b      	ldr	r5, [pc, #44]	@ (801b0a4 <__libc_init_array+0x40>)
 801b076:	4c0c      	ldr	r4, [pc, #48]	@ (801b0a8 <__libc_init_array+0x44>)
 801b078:	f005 ff8e 	bl	8020f98 <_init>
 801b07c:	1b64      	subs	r4, r4, r5
 801b07e:	10a4      	asrs	r4, r4, #2
 801b080:	2600      	movs	r6, #0
 801b082:	42a6      	cmp	r6, r4
 801b084:	d105      	bne.n	801b092 <__libc_init_array+0x2e>
 801b086:	bd70      	pop	{r4, r5, r6, pc}
 801b088:	f855 3b04 	ldr.w	r3, [r5], #4
 801b08c:	4798      	blx	r3
 801b08e:	3601      	adds	r6, #1
 801b090:	e7ee      	b.n	801b070 <__libc_init_array+0xc>
 801b092:	f855 3b04 	ldr.w	r3, [r5], #4
 801b096:	4798      	blx	r3
 801b098:	3601      	adds	r6, #1
 801b09a:	e7f2      	b.n	801b082 <__libc_init_array+0x1e>
 801b09c:	08021d00 	.word	0x08021d00
 801b0a0:	08021d00 	.word	0x08021d00
 801b0a4:	08021d00 	.word	0x08021d00
 801b0a8:	08021d08 	.word	0x08021d08

0801b0ac <__retarget_lock_init_recursive>:
 801b0ac:	4770      	bx	lr

0801b0ae <__retarget_lock_close_recursive>:
 801b0ae:	4770      	bx	lr

0801b0b0 <__retarget_lock_acquire_recursive>:
 801b0b0:	4770      	bx	lr

0801b0b2 <__retarget_lock_release_recursive>:
 801b0b2:	4770      	bx	lr

0801b0b4 <memcpy>:
 801b0b4:	440a      	add	r2, r1
 801b0b6:	4291      	cmp	r1, r2
 801b0b8:	f100 33ff 	add.w	r3, r0, #4294967295
 801b0bc:	d100      	bne.n	801b0c0 <memcpy+0xc>
 801b0be:	4770      	bx	lr
 801b0c0:	b510      	push	{r4, lr}
 801b0c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b0c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b0ca:	4291      	cmp	r1, r2
 801b0cc:	d1f9      	bne.n	801b0c2 <memcpy+0xe>
 801b0ce:	bd10      	pop	{r4, pc}

0801b0d0 <register_fini>:
 801b0d0:	4b02      	ldr	r3, [pc, #8]	@ (801b0dc <register_fini+0xc>)
 801b0d2:	b113      	cbz	r3, 801b0da <register_fini+0xa>
 801b0d4:	4802      	ldr	r0, [pc, #8]	@ (801b0e0 <register_fini+0x10>)
 801b0d6:	f000 b805 	b.w	801b0e4 <atexit>
 801b0da:	4770      	bx	lr
 801b0dc:	00000000 	.word	0x00000000
 801b0e0:	0801cdc5 	.word	0x0801cdc5

0801b0e4 <atexit>:
 801b0e4:	2300      	movs	r3, #0
 801b0e6:	4601      	mov	r1, r0
 801b0e8:	461a      	mov	r2, r3
 801b0ea:	4618      	mov	r0, r3
 801b0ec:	f001 bec0 	b.w	801ce70 <__register_exitproc>

0801b0f0 <_malloc_trim_r>:
 801b0f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b0f4:	4606      	mov	r6, r0
 801b0f6:	2008      	movs	r0, #8
 801b0f8:	4689      	mov	r9, r1
 801b0fa:	f001 fe77 	bl	801cdec <sysconf>
 801b0fe:	4f24      	ldr	r7, [pc, #144]	@ (801b190 <_malloc_trim_r+0xa0>)
 801b100:	4680      	mov	r8, r0
 801b102:	4630      	mov	r0, r6
 801b104:	f000 fb44 	bl	801b790 <__malloc_lock>
 801b108:	68bb      	ldr	r3, [r7, #8]
 801b10a:	685d      	ldr	r5, [r3, #4]
 801b10c:	f025 0503 	bic.w	r5, r5, #3
 801b110:	f1a5 0411 	sub.w	r4, r5, #17
 801b114:	eba4 0409 	sub.w	r4, r4, r9
 801b118:	4444      	add	r4, r8
 801b11a:	fbb4 f4f8 	udiv	r4, r4, r8
 801b11e:	3c01      	subs	r4, #1
 801b120:	fb08 f404 	mul.w	r4, r8, r4
 801b124:	45a0      	cmp	r8, r4
 801b126:	dd05      	ble.n	801b134 <_malloc_trim_r+0x44>
 801b128:	4630      	mov	r0, r6
 801b12a:	f000 fb37 	bl	801b79c <__malloc_unlock>
 801b12e:	2000      	movs	r0, #0
 801b130:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b134:	2100      	movs	r1, #0
 801b136:	4630      	mov	r0, r6
 801b138:	f001 fe34 	bl	801cda4 <_sbrk_r>
 801b13c:	68bb      	ldr	r3, [r7, #8]
 801b13e:	442b      	add	r3, r5
 801b140:	4298      	cmp	r0, r3
 801b142:	d1f1      	bne.n	801b128 <_malloc_trim_r+0x38>
 801b144:	4261      	negs	r1, r4
 801b146:	4630      	mov	r0, r6
 801b148:	f001 fe2c 	bl	801cda4 <_sbrk_r>
 801b14c:	3001      	adds	r0, #1
 801b14e:	d110      	bne.n	801b172 <_malloc_trim_r+0x82>
 801b150:	2100      	movs	r1, #0
 801b152:	4630      	mov	r0, r6
 801b154:	f001 fe26 	bl	801cda4 <_sbrk_r>
 801b158:	68ba      	ldr	r2, [r7, #8]
 801b15a:	1a83      	subs	r3, r0, r2
 801b15c:	2b0f      	cmp	r3, #15
 801b15e:	dde3      	ble.n	801b128 <_malloc_trim_r+0x38>
 801b160:	490c      	ldr	r1, [pc, #48]	@ (801b194 <_malloc_trim_r+0xa4>)
 801b162:	6809      	ldr	r1, [r1, #0]
 801b164:	1a40      	subs	r0, r0, r1
 801b166:	490c      	ldr	r1, [pc, #48]	@ (801b198 <_malloc_trim_r+0xa8>)
 801b168:	f043 0301 	orr.w	r3, r3, #1
 801b16c:	6008      	str	r0, [r1, #0]
 801b16e:	6053      	str	r3, [r2, #4]
 801b170:	e7da      	b.n	801b128 <_malloc_trim_r+0x38>
 801b172:	68bb      	ldr	r3, [r7, #8]
 801b174:	4a08      	ldr	r2, [pc, #32]	@ (801b198 <_malloc_trim_r+0xa8>)
 801b176:	1b2d      	subs	r5, r5, r4
 801b178:	f045 0501 	orr.w	r5, r5, #1
 801b17c:	605d      	str	r5, [r3, #4]
 801b17e:	6813      	ldr	r3, [r2, #0]
 801b180:	4630      	mov	r0, r6
 801b182:	1b1b      	subs	r3, r3, r4
 801b184:	6013      	str	r3, [r2, #0]
 801b186:	f000 fb09 	bl	801b79c <__malloc_unlock>
 801b18a:	2001      	movs	r0, #1
 801b18c:	e7d0      	b.n	801b130 <_malloc_trim_r+0x40>
 801b18e:	bf00      	nop
 801b190:	20000254 	.word	0x20000254
 801b194:	2000024c 	.word	0x2000024c
 801b198:	2000d0d0 	.word	0x2000d0d0

0801b19c <_free_r>:
 801b19c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b19e:	4604      	mov	r4, r0
 801b1a0:	460f      	mov	r7, r1
 801b1a2:	2900      	cmp	r1, #0
 801b1a4:	f000 80b1 	beq.w	801b30a <_free_r+0x16e>
 801b1a8:	f000 faf2 	bl	801b790 <__malloc_lock>
 801b1ac:	f857 2c04 	ldr.w	r2, [r7, #-4]
 801b1b0:	4d56      	ldr	r5, [pc, #344]	@ (801b30c <_free_r+0x170>)
 801b1b2:	f022 0001 	bic.w	r0, r2, #1
 801b1b6:	f1a7 0308 	sub.w	r3, r7, #8
 801b1ba:	eb03 0c00 	add.w	ip, r3, r0
 801b1be:	68a9      	ldr	r1, [r5, #8]
 801b1c0:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b1c4:	4561      	cmp	r1, ip
 801b1c6:	f026 0603 	bic.w	r6, r6, #3
 801b1ca:	f002 0201 	and.w	r2, r2, #1
 801b1ce:	d11b      	bne.n	801b208 <_free_r+0x6c>
 801b1d0:	4406      	add	r6, r0
 801b1d2:	b93a      	cbnz	r2, 801b1e4 <_free_r+0x48>
 801b1d4:	f857 2c08 	ldr.w	r2, [r7, #-8]
 801b1d8:	1a9b      	subs	r3, r3, r2
 801b1da:	4416      	add	r6, r2
 801b1dc:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 801b1e0:	60ca      	str	r2, [r1, #12]
 801b1e2:	6091      	str	r1, [r2, #8]
 801b1e4:	f046 0201 	orr.w	r2, r6, #1
 801b1e8:	605a      	str	r2, [r3, #4]
 801b1ea:	60ab      	str	r3, [r5, #8]
 801b1ec:	4b48      	ldr	r3, [pc, #288]	@ (801b310 <_free_r+0x174>)
 801b1ee:	681b      	ldr	r3, [r3, #0]
 801b1f0:	42b3      	cmp	r3, r6
 801b1f2:	d804      	bhi.n	801b1fe <_free_r+0x62>
 801b1f4:	4b47      	ldr	r3, [pc, #284]	@ (801b314 <_free_r+0x178>)
 801b1f6:	4620      	mov	r0, r4
 801b1f8:	6819      	ldr	r1, [r3, #0]
 801b1fa:	f7ff ff79 	bl	801b0f0 <_malloc_trim_r>
 801b1fe:	4620      	mov	r0, r4
 801b200:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801b204:	f000 baca 	b.w	801b79c <__malloc_unlock>
 801b208:	f8cc 6004 	str.w	r6, [ip, #4]
 801b20c:	2a00      	cmp	r2, #0
 801b20e:	d138      	bne.n	801b282 <_free_r+0xe6>
 801b210:	f857 1c08 	ldr.w	r1, [r7, #-8]
 801b214:	1a5b      	subs	r3, r3, r1
 801b216:	4408      	add	r0, r1
 801b218:	6899      	ldr	r1, [r3, #8]
 801b21a:	f105 0708 	add.w	r7, r5, #8
 801b21e:	42b9      	cmp	r1, r7
 801b220:	d031      	beq.n	801b286 <_free_r+0xea>
 801b222:	68df      	ldr	r7, [r3, #12]
 801b224:	60cf      	str	r7, [r1, #12]
 801b226:	60b9      	str	r1, [r7, #8]
 801b228:	eb0c 0106 	add.w	r1, ip, r6
 801b22c:	6849      	ldr	r1, [r1, #4]
 801b22e:	07c9      	lsls	r1, r1, #31
 801b230:	d40b      	bmi.n	801b24a <_free_r+0xae>
 801b232:	f8dc 1008 	ldr.w	r1, [ip, #8]
 801b236:	4430      	add	r0, r6
 801b238:	bb3a      	cbnz	r2, 801b28a <_free_r+0xee>
 801b23a:	4e37      	ldr	r6, [pc, #220]	@ (801b318 <_free_r+0x17c>)
 801b23c:	42b1      	cmp	r1, r6
 801b23e:	d124      	bne.n	801b28a <_free_r+0xee>
 801b240:	e9c5 3304 	strd	r3, r3, [r5, #16]
 801b244:	e9c3 1102 	strd	r1, r1, [r3, #8]
 801b248:	2201      	movs	r2, #1
 801b24a:	f040 0101 	orr.w	r1, r0, #1
 801b24e:	6059      	str	r1, [r3, #4]
 801b250:	5018      	str	r0, [r3, r0]
 801b252:	2a00      	cmp	r2, #0
 801b254:	d1d3      	bne.n	801b1fe <_free_r+0x62>
 801b256:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 801b25a:	d21b      	bcs.n	801b294 <_free_r+0xf8>
 801b25c:	08c2      	lsrs	r2, r0, #3
 801b25e:	2101      	movs	r1, #1
 801b260:	0940      	lsrs	r0, r0, #5
 801b262:	4081      	lsls	r1, r0
 801b264:	6868      	ldr	r0, [r5, #4]
 801b266:	3201      	adds	r2, #1
 801b268:	4301      	orrs	r1, r0
 801b26a:	6069      	str	r1, [r5, #4]
 801b26c:	f855 0032 	ldr.w	r0, [r5, r2, lsl #3]
 801b270:	eb05 01c2 	add.w	r1, r5, r2, lsl #3
 801b274:	3908      	subs	r1, #8
 801b276:	e9c3 0102 	strd	r0, r1, [r3, #8]
 801b27a:	f845 3032 	str.w	r3, [r5, r2, lsl #3]
 801b27e:	60c3      	str	r3, [r0, #12]
 801b280:	e7bd      	b.n	801b1fe <_free_r+0x62>
 801b282:	2200      	movs	r2, #0
 801b284:	e7d0      	b.n	801b228 <_free_r+0x8c>
 801b286:	2201      	movs	r2, #1
 801b288:	e7ce      	b.n	801b228 <_free_r+0x8c>
 801b28a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 801b28e:	60ce      	str	r6, [r1, #12]
 801b290:	60b1      	str	r1, [r6, #8]
 801b292:	e7da      	b.n	801b24a <_free_r+0xae>
 801b294:	f5b0 6f20 	cmp.w	r0, #2560	@ 0xa00
 801b298:	ea4f 2250 	mov.w	r2, r0, lsr #9
 801b29c:	d214      	bcs.n	801b2c8 <_free_r+0x12c>
 801b29e:	0982      	lsrs	r2, r0, #6
 801b2a0:	3238      	adds	r2, #56	@ 0x38
 801b2a2:	1c51      	adds	r1, r2, #1
 801b2a4:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 801b2a8:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 801b2ac:	428e      	cmp	r6, r1
 801b2ae:	d125      	bne.n	801b2fc <_free_r+0x160>
 801b2b0:	2001      	movs	r0, #1
 801b2b2:	1092      	asrs	r2, r2, #2
 801b2b4:	fa00 f202 	lsl.w	r2, r0, r2
 801b2b8:	6868      	ldr	r0, [r5, #4]
 801b2ba:	4302      	orrs	r2, r0
 801b2bc:	606a      	str	r2, [r5, #4]
 801b2be:	e9c3 1602 	strd	r1, r6, [r3, #8]
 801b2c2:	60b3      	str	r3, [r6, #8]
 801b2c4:	60cb      	str	r3, [r1, #12]
 801b2c6:	e79a      	b.n	801b1fe <_free_r+0x62>
 801b2c8:	2a14      	cmp	r2, #20
 801b2ca:	d801      	bhi.n	801b2d0 <_free_r+0x134>
 801b2cc:	325b      	adds	r2, #91	@ 0x5b
 801b2ce:	e7e8      	b.n	801b2a2 <_free_r+0x106>
 801b2d0:	2a54      	cmp	r2, #84	@ 0x54
 801b2d2:	d802      	bhi.n	801b2da <_free_r+0x13e>
 801b2d4:	0b02      	lsrs	r2, r0, #12
 801b2d6:	326e      	adds	r2, #110	@ 0x6e
 801b2d8:	e7e3      	b.n	801b2a2 <_free_r+0x106>
 801b2da:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801b2de:	d802      	bhi.n	801b2e6 <_free_r+0x14a>
 801b2e0:	0bc2      	lsrs	r2, r0, #15
 801b2e2:	3277      	adds	r2, #119	@ 0x77
 801b2e4:	e7dd      	b.n	801b2a2 <_free_r+0x106>
 801b2e6:	f240 5154 	movw	r1, #1364	@ 0x554
 801b2ea:	428a      	cmp	r2, r1
 801b2ec:	bf9a      	itte	ls
 801b2ee:	0c82      	lsrls	r2, r0, #18
 801b2f0:	327c      	addls	r2, #124	@ 0x7c
 801b2f2:	227e      	movhi	r2, #126	@ 0x7e
 801b2f4:	e7d5      	b.n	801b2a2 <_free_r+0x106>
 801b2f6:	6889      	ldr	r1, [r1, #8]
 801b2f8:	428e      	cmp	r6, r1
 801b2fa:	d004      	beq.n	801b306 <_free_r+0x16a>
 801b2fc:	684a      	ldr	r2, [r1, #4]
 801b2fe:	f022 0203 	bic.w	r2, r2, #3
 801b302:	4282      	cmp	r2, r0
 801b304:	d8f7      	bhi.n	801b2f6 <_free_r+0x15a>
 801b306:	68ce      	ldr	r6, [r1, #12]
 801b308:	e7d9      	b.n	801b2be <_free_r+0x122>
 801b30a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b30c:	20000254 	.word	0x20000254
 801b310:	20000250 	.word	0x20000250
 801b314:	2000d100 	.word	0x2000d100
 801b318:	2000025c 	.word	0x2000025c

0801b31c <_malloc_r>:
 801b31c:	f101 030b 	add.w	r3, r1, #11
 801b320:	2b16      	cmp	r3, #22
 801b322:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b326:	4605      	mov	r5, r0
 801b328:	d906      	bls.n	801b338 <_malloc_r+0x1c>
 801b32a:	f033 0707 	bics.w	r7, r3, #7
 801b32e:	d504      	bpl.n	801b33a <_malloc_r+0x1e>
 801b330:	230c      	movs	r3, #12
 801b332:	602b      	str	r3, [r5, #0]
 801b334:	2400      	movs	r4, #0
 801b336:	e1a3      	b.n	801b680 <_malloc_r+0x364>
 801b338:	2710      	movs	r7, #16
 801b33a:	42b9      	cmp	r1, r7
 801b33c:	d8f8      	bhi.n	801b330 <_malloc_r+0x14>
 801b33e:	4628      	mov	r0, r5
 801b340:	f000 fa26 	bl	801b790 <__malloc_lock>
 801b344:	f5b7 7ffc 	cmp.w	r7, #504	@ 0x1f8
 801b348:	4eaf      	ldr	r6, [pc, #700]	@ (801b608 <_malloc_r+0x2ec>)
 801b34a:	d237      	bcs.n	801b3bc <_malloc_r+0xa0>
 801b34c:	f107 0208 	add.w	r2, r7, #8
 801b350:	4432      	add	r2, r6
 801b352:	f1a2 0108 	sub.w	r1, r2, #8
 801b356:	6854      	ldr	r4, [r2, #4]
 801b358:	428c      	cmp	r4, r1
 801b35a:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 801b35e:	d102      	bne.n	801b366 <_malloc_r+0x4a>
 801b360:	68d4      	ldr	r4, [r2, #12]
 801b362:	42a2      	cmp	r2, r4
 801b364:	d010      	beq.n	801b388 <_malloc_r+0x6c>
 801b366:	6863      	ldr	r3, [r4, #4]
 801b368:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801b36c:	f023 0303 	bic.w	r3, r3, #3
 801b370:	60ca      	str	r2, [r1, #12]
 801b372:	4423      	add	r3, r4
 801b374:	6091      	str	r1, [r2, #8]
 801b376:	685a      	ldr	r2, [r3, #4]
 801b378:	f042 0201 	orr.w	r2, r2, #1
 801b37c:	605a      	str	r2, [r3, #4]
 801b37e:	4628      	mov	r0, r5
 801b380:	f000 fa0c 	bl	801b79c <__malloc_unlock>
 801b384:	3408      	adds	r4, #8
 801b386:	e17b      	b.n	801b680 <_malloc_r+0x364>
 801b388:	3302      	adds	r3, #2
 801b38a:	6934      	ldr	r4, [r6, #16]
 801b38c:	499f      	ldr	r1, [pc, #636]	@ (801b60c <_malloc_r+0x2f0>)
 801b38e:	428c      	cmp	r4, r1
 801b390:	d077      	beq.n	801b482 <_malloc_r+0x166>
 801b392:	6862      	ldr	r2, [r4, #4]
 801b394:	f022 0c03 	bic.w	ip, r2, #3
 801b398:	ebac 0007 	sub.w	r0, ip, r7
 801b39c:	280f      	cmp	r0, #15
 801b39e:	dd48      	ble.n	801b432 <_malloc_r+0x116>
 801b3a0:	19e2      	adds	r2, r4, r7
 801b3a2:	f040 0301 	orr.w	r3, r0, #1
 801b3a6:	f047 0701 	orr.w	r7, r7, #1
 801b3aa:	6067      	str	r7, [r4, #4]
 801b3ac:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801b3b0:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801b3b4:	6053      	str	r3, [r2, #4]
 801b3b6:	f844 000c 	str.w	r0, [r4, ip]
 801b3ba:	e7e0      	b.n	801b37e <_malloc_r+0x62>
 801b3bc:	0a7b      	lsrs	r3, r7, #9
 801b3be:	d02a      	beq.n	801b416 <_malloc_r+0xfa>
 801b3c0:	2b04      	cmp	r3, #4
 801b3c2:	d812      	bhi.n	801b3ea <_malloc_r+0xce>
 801b3c4:	09bb      	lsrs	r3, r7, #6
 801b3c6:	3338      	adds	r3, #56	@ 0x38
 801b3c8:	1c5a      	adds	r2, r3, #1
 801b3ca:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 801b3ce:	f1a2 0c08 	sub.w	ip, r2, #8
 801b3d2:	6854      	ldr	r4, [r2, #4]
 801b3d4:	4564      	cmp	r4, ip
 801b3d6:	d006      	beq.n	801b3e6 <_malloc_r+0xca>
 801b3d8:	6862      	ldr	r2, [r4, #4]
 801b3da:	f022 0203 	bic.w	r2, r2, #3
 801b3de:	1bd0      	subs	r0, r2, r7
 801b3e0:	280f      	cmp	r0, #15
 801b3e2:	dd1c      	ble.n	801b41e <_malloc_r+0x102>
 801b3e4:	3b01      	subs	r3, #1
 801b3e6:	3301      	adds	r3, #1
 801b3e8:	e7cf      	b.n	801b38a <_malloc_r+0x6e>
 801b3ea:	2b14      	cmp	r3, #20
 801b3ec:	d801      	bhi.n	801b3f2 <_malloc_r+0xd6>
 801b3ee:	335b      	adds	r3, #91	@ 0x5b
 801b3f0:	e7ea      	b.n	801b3c8 <_malloc_r+0xac>
 801b3f2:	2b54      	cmp	r3, #84	@ 0x54
 801b3f4:	d802      	bhi.n	801b3fc <_malloc_r+0xe0>
 801b3f6:	0b3b      	lsrs	r3, r7, #12
 801b3f8:	336e      	adds	r3, #110	@ 0x6e
 801b3fa:	e7e5      	b.n	801b3c8 <_malloc_r+0xac>
 801b3fc:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 801b400:	d802      	bhi.n	801b408 <_malloc_r+0xec>
 801b402:	0bfb      	lsrs	r3, r7, #15
 801b404:	3377      	adds	r3, #119	@ 0x77
 801b406:	e7df      	b.n	801b3c8 <_malloc_r+0xac>
 801b408:	f240 5254 	movw	r2, #1364	@ 0x554
 801b40c:	4293      	cmp	r3, r2
 801b40e:	d804      	bhi.n	801b41a <_malloc_r+0xfe>
 801b410:	0cbb      	lsrs	r3, r7, #18
 801b412:	337c      	adds	r3, #124	@ 0x7c
 801b414:	e7d8      	b.n	801b3c8 <_malloc_r+0xac>
 801b416:	233f      	movs	r3, #63	@ 0x3f
 801b418:	e7d6      	b.n	801b3c8 <_malloc_r+0xac>
 801b41a:	237e      	movs	r3, #126	@ 0x7e
 801b41c:	e7d4      	b.n	801b3c8 <_malloc_r+0xac>
 801b41e:	2800      	cmp	r0, #0
 801b420:	68e1      	ldr	r1, [r4, #12]
 801b422:	db04      	blt.n	801b42e <_malloc_r+0x112>
 801b424:	68a3      	ldr	r3, [r4, #8]
 801b426:	60d9      	str	r1, [r3, #12]
 801b428:	608b      	str	r3, [r1, #8]
 801b42a:	18a3      	adds	r3, r4, r2
 801b42c:	e7a3      	b.n	801b376 <_malloc_r+0x5a>
 801b42e:	460c      	mov	r4, r1
 801b430:	e7d0      	b.n	801b3d4 <_malloc_r+0xb8>
 801b432:	2800      	cmp	r0, #0
 801b434:	e9c6 1104 	strd	r1, r1, [r6, #16]
 801b438:	db07      	blt.n	801b44a <_malloc_r+0x12e>
 801b43a:	44a4      	add	ip, r4
 801b43c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b440:	f043 0301 	orr.w	r3, r3, #1
 801b444:	f8cc 3004 	str.w	r3, [ip, #4]
 801b448:	e799      	b.n	801b37e <_malloc_r+0x62>
 801b44a:	f5bc 7f00 	cmp.w	ip, #512	@ 0x200
 801b44e:	6870      	ldr	r0, [r6, #4]
 801b450:	f080 8095 	bcs.w	801b57e <_malloc_r+0x262>
 801b454:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 801b458:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 801b45c:	f04f 0c01 	mov.w	ip, #1
 801b460:	3201      	adds	r2, #1
 801b462:	fa0c fc0e 	lsl.w	ip, ip, lr
 801b466:	ea4c 0000 	orr.w	r0, ip, r0
 801b46a:	6070      	str	r0, [r6, #4]
 801b46c:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 801b470:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 801b474:	3808      	subs	r0, #8
 801b476:	e9c4 c002 	strd	ip, r0, [r4, #8]
 801b47a:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 801b47e:	f8cc 400c 	str.w	r4, [ip, #12]
 801b482:	1098      	asrs	r0, r3, #2
 801b484:	2201      	movs	r2, #1
 801b486:	4082      	lsls	r2, r0
 801b488:	6870      	ldr	r0, [r6, #4]
 801b48a:	4290      	cmp	r0, r2
 801b48c:	d326      	bcc.n	801b4dc <_malloc_r+0x1c0>
 801b48e:	4210      	tst	r0, r2
 801b490:	d106      	bne.n	801b4a0 <_malloc_r+0x184>
 801b492:	f023 0303 	bic.w	r3, r3, #3
 801b496:	0052      	lsls	r2, r2, #1
 801b498:	4210      	tst	r0, r2
 801b49a:	f103 0304 	add.w	r3, r3, #4
 801b49e:	d0fa      	beq.n	801b496 <_malloc_r+0x17a>
 801b4a0:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 801b4a4:	46c1      	mov	r9, r8
 801b4a6:	469e      	mov	lr, r3
 801b4a8:	f8d9 400c 	ldr.w	r4, [r9, #12]
 801b4ac:	454c      	cmp	r4, r9
 801b4ae:	f040 80b9 	bne.w	801b624 <_malloc_r+0x308>
 801b4b2:	f10e 0e01 	add.w	lr, lr, #1
 801b4b6:	f01e 0f03 	tst.w	lr, #3
 801b4ba:	f109 0908 	add.w	r9, r9, #8
 801b4be:	d1f3      	bne.n	801b4a8 <_malloc_r+0x18c>
 801b4c0:	0798      	lsls	r0, r3, #30
 801b4c2:	f040 80e3 	bne.w	801b68c <_malloc_r+0x370>
 801b4c6:	6873      	ldr	r3, [r6, #4]
 801b4c8:	ea23 0302 	bic.w	r3, r3, r2
 801b4cc:	6073      	str	r3, [r6, #4]
 801b4ce:	6870      	ldr	r0, [r6, #4]
 801b4d0:	0052      	lsls	r2, r2, #1
 801b4d2:	4290      	cmp	r0, r2
 801b4d4:	d302      	bcc.n	801b4dc <_malloc_r+0x1c0>
 801b4d6:	2a00      	cmp	r2, #0
 801b4d8:	f040 80e5 	bne.w	801b6a6 <_malloc_r+0x38a>
 801b4dc:	f8d6 a008 	ldr.w	sl, [r6, #8]
 801b4e0:	f8da 3004 	ldr.w	r3, [sl, #4]
 801b4e4:	f023 0903 	bic.w	r9, r3, #3
 801b4e8:	45b9      	cmp	r9, r7
 801b4ea:	d304      	bcc.n	801b4f6 <_malloc_r+0x1da>
 801b4ec:	eba9 0207 	sub.w	r2, r9, r7
 801b4f0:	2a0f      	cmp	r2, #15
 801b4f2:	f300 8141 	bgt.w	801b778 <_malloc_r+0x45c>
 801b4f6:	4b46      	ldr	r3, [pc, #280]	@ (801b610 <_malloc_r+0x2f4>)
 801b4f8:	6819      	ldr	r1, [r3, #0]
 801b4fa:	3110      	adds	r1, #16
 801b4fc:	4439      	add	r1, r7
 801b4fe:	2008      	movs	r0, #8
 801b500:	9101      	str	r1, [sp, #4]
 801b502:	f001 fc73 	bl	801cdec <sysconf>
 801b506:	4a43      	ldr	r2, [pc, #268]	@ (801b614 <_malloc_r+0x2f8>)
 801b508:	9901      	ldr	r1, [sp, #4]
 801b50a:	6813      	ldr	r3, [r2, #0]
 801b50c:	3301      	adds	r3, #1
 801b50e:	bf1f      	itttt	ne
 801b510:	f101 31ff 	addne.w	r1, r1, #4294967295
 801b514:	1809      	addne	r1, r1, r0
 801b516:	4243      	negne	r3, r0
 801b518:	4019      	andne	r1, r3
 801b51a:	4680      	mov	r8, r0
 801b51c:	4628      	mov	r0, r5
 801b51e:	9101      	str	r1, [sp, #4]
 801b520:	f001 fc40 	bl	801cda4 <_sbrk_r>
 801b524:	1c42      	adds	r2, r0, #1
 801b526:	eb0a 0b09 	add.w	fp, sl, r9
 801b52a:	4604      	mov	r4, r0
 801b52c:	f000 80f7 	beq.w	801b71e <_malloc_r+0x402>
 801b530:	4583      	cmp	fp, r0
 801b532:	9901      	ldr	r1, [sp, #4]
 801b534:	4a37      	ldr	r2, [pc, #220]	@ (801b614 <_malloc_r+0x2f8>)
 801b536:	d902      	bls.n	801b53e <_malloc_r+0x222>
 801b538:	45b2      	cmp	sl, r6
 801b53a:	f040 80f0 	bne.w	801b71e <_malloc_r+0x402>
 801b53e:	4b36      	ldr	r3, [pc, #216]	@ (801b618 <_malloc_r+0x2fc>)
 801b540:	6818      	ldr	r0, [r3, #0]
 801b542:	45a3      	cmp	fp, r4
 801b544:	eb00 0e01 	add.w	lr, r0, r1
 801b548:	f8c3 e000 	str.w	lr, [r3]
 801b54c:	f108 3cff 	add.w	ip, r8, #4294967295
 801b550:	f040 80ab 	bne.w	801b6aa <_malloc_r+0x38e>
 801b554:	ea1b 0f0c 	tst.w	fp, ip
 801b558:	f040 80a7 	bne.w	801b6aa <_malloc_r+0x38e>
 801b55c:	68b2      	ldr	r2, [r6, #8]
 801b55e:	4449      	add	r1, r9
 801b560:	f041 0101 	orr.w	r1, r1, #1
 801b564:	6051      	str	r1, [r2, #4]
 801b566:	4a2d      	ldr	r2, [pc, #180]	@ (801b61c <_malloc_r+0x300>)
 801b568:	681b      	ldr	r3, [r3, #0]
 801b56a:	6811      	ldr	r1, [r2, #0]
 801b56c:	428b      	cmp	r3, r1
 801b56e:	bf88      	it	hi
 801b570:	6013      	strhi	r3, [r2, #0]
 801b572:	4a2b      	ldr	r2, [pc, #172]	@ (801b620 <_malloc_r+0x304>)
 801b574:	6811      	ldr	r1, [r2, #0]
 801b576:	428b      	cmp	r3, r1
 801b578:	bf88      	it	hi
 801b57a:	6013      	strhi	r3, [r2, #0]
 801b57c:	e0cf      	b.n	801b71e <_malloc_r+0x402>
 801b57e:	f5bc 6f20 	cmp.w	ip, #2560	@ 0xa00
 801b582:	ea4f 225c 	mov.w	r2, ip, lsr #9
 801b586:	d218      	bcs.n	801b5ba <_malloc_r+0x29e>
 801b588:	ea4f 129c 	mov.w	r2, ip, lsr #6
 801b58c:	3238      	adds	r2, #56	@ 0x38
 801b58e:	f102 0e01 	add.w	lr, r2, #1
 801b592:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 801b596:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 801b59a:	45f0      	cmp	r8, lr
 801b59c:	d12b      	bne.n	801b5f6 <_malloc_r+0x2da>
 801b59e:	1092      	asrs	r2, r2, #2
 801b5a0:	f04f 0c01 	mov.w	ip, #1
 801b5a4:	fa0c f202 	lsl.w	r2, ip, r2
 801b5a8:	4302      	orrs	r2, r0
 801b5aa:	6072      	str	r2, [r6, #4]
 801b5ac:	e9c4 e802 	strd	lr, r8, [r4, #8]
 801b5b0:	f8c8 4008 	str.w	r4, [r8, #8]
 801b5b4:	f8ce 400c 	str.w	r4, [lr, #12]
 801b5b8:	e763      	b.n	801b482 <_malloc_r+0x166>
 801b5ba:	2a14      	cmp	r2, #20
 801b5bc:	d801      	bhi.n	801b5c2 <_malloc_r+0x2a6>
 801b5be:	325b      	adds	r2, #91	@ 0x5b
 801b5c0:	e7e5      	b.n	801b58e <_malloc_r+0x272>
 801b5c2:	2a54      	cmp	r2, #84	@ 0x54
 801b5c4:	d803      	bhi.n	801b5ce <_malloc_r+0x2b2>
 801b5c6:	ea4f 321c 	mov.w	r2, ip, lsr #12
 801b5ca:	326e      	adds	r2, #110	@ 0x6e
 801b5cc:	e7df      	b.n	801b58e <_malloc_r+0x272>
 801b5ce:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801b5d2:	d803      	bhi.n	801b5dc <_malloc_r+0x2c0>
 801b5d4:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 801b5d8:	3277      	adds	r2, #119	@ 0x77
 801b5da:	e7d8      	b.n	801b58e <_malloc_r+0x272>
 801b5dc:	f240 5e54 	movw	lr, #1364	@ 0x554
 801b5e0:	4572      	cmp	r2, lr
 801b5e2:	bf9a      	itte	ls
 801b5e4:	ea4f 429c 	movls.w	r2, ip, lsr #18
 801b5e8:	327c      	addls	r2, #124	@ 0x7c
 801b5ea:	227e      	movhi	r2, #126	@ 0x7e
 801b5ec:	e7cf      	b.n	801b58e <_malloc_r+0x272>
 801b5ee:	f8de e008 	ldr.w	lr, [lr, #8]
 801b5f2:	45f0      	cmp	r8, lr
 801b5f4:	d005      	beq.n	801b602 <_malloc_r+0x2e6>
 801b5f6:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b5fa:	f022 0203 	bic.w	r2, r2, #3
 801b5fe:	4562      	cmp	r2, ip
 801b600:	d8f5      	bhi.n	801b5ee <_malloc_r+0x2d2>
 801b602:	f8de 800c 	ldr.w	r8, [lr, #12]
 801b606:	e7d1      	b.n	801b5ac <_malloc_r+0x290>
 801b608:	20000254 	.word	0x20000254
 801b60c:	2000025c 	.word	0x2000025c
 801b610:	2000d100 	.word	0x2000d100
 801b614:	2000024c 	.word	0x2000024c
 801b618:	2000d0d0 	.word	0x2000d0d0
 801b61c:	2000d0fc 	.word	0x2000d0fc
 801b620:	2000d0f8 	.word	0x2000d0f8
 801b624:	6860      	ldr	r0, [r4, #4]
 801b626:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 801b62a:	f020 0003 	bic.w	r0, r0, #3
 801b62e:	eba0 0a07 	sub.w	sl, r0, r7
 801b632:	f1ba 0f0f 	cmp.w	sl, #15
 801b636:	dd12      	ble.n	801b65e <_malloc_r+0x342>
 801b638:	68a3      	ldr	r3, [r4, #8]
 801b63a:	19e2      	adds	r2, r4, r7
 801b63c:	f047 0701 	orr.w	r7, r7, #1
 801b640:	6067      	str	r7, [r4, #4]
 801b642:	f8c3 c00c 	str.w	ip, [r3, #12]
 801b646:	f8cc 3008 	str.w	r3, [ip, #8]
 801b64a:	f04a 0301 	orr.w	r3, sl, #1
 801b64e:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801b652:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801b656:	6053      	str	r3, [r2, #4]
 801b658:	f844 a000 	str.w	sl, [r4, r0]
 801b65c:	e68f      	b.n	801b37e <_malloc_r+0x62>
 801b65e:	f1ba 0f00 	cmp.w	sl, #0
 801b662:	db11      	blt.n	801b688 <_malloc_r+0x36c>
 801b664:	4420      	add	r0, r4
 801b666:	6843      	ldr	r3, [r0, #4]
 801b668:	f043 0301 	orr.w	r3, r3, #1
 801b66c:	6043      	str	r3, [r0, #4]
 801b66e:	f854 3f08 	ldr.w	r3, [r4, #8]!
 801b672:	4628      	mov	r0, r5
 801b674:	f8c3 c00c 	str.w	ip, [r3, #12]
 801b678:	f8cc 3008 	str.w	r3, [ip, #8]
 801b67c:	f000 f88e 	bl	801b79c <__malloc_unlock>
 801b680:	4620      	mov	r0, r4
 801b682:	b003      	add	sp, #12
 801b684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b688:	4664      	mov	r4, ip
 801b68a:	e70f      	b.n	801b4ac <_malloc_r+0x190>
 801b68c:	f858 0908 	ldr.w	r0, [r8], #-8
 801b690:	4540      	cmp	r0, r8
 801b692:	f103 33ff 	add.w	r3, r3, #4294967295
 801b696:	f43f af13 	beq.w	801b4c0 <_malloc_r+0x1a4>
 801b69a:	e718      	b.n	801b4ce <_malloc_r+0x1b2>
 801b69c:	3304      	adds	r3, #4
 801b69e:	0052      	lsls	r2, r2, #1
 801b6a0:	4210      	tst	r0, r2
 801b6a2:	d0fb      	beq.n	801b69c <_malloc_r+0x380>
 801b6a4:	e6fc      	b.n	801b4a0 <_malloc_r+0x184>
 801b6a6:	4673      	mov	r3, lr
 801b6a8:	e7fa      	b.n	801b6a0 <_malloc_r+0x384>
 801b6aa:	6810      	ldr	r0, [r2, #0]
 801b6ac:	3001      	adds	r0, #1
 801b6ae:	bf1b      	ittet	ne
 801b6b0:	eba4 0b0b 	subne.w	fp, r4, fp
 801b6b4:	eb0b 020e 	addne.w	r2, fp, lr
 801b6b8:	6014      	streq	r4, [r2, #0]
 801b6ba:	601a      	strne	r2, [r3, #0]
 801b6bc:	f014 0b07 	ands.w	fp, r4, #7
 801b6c0:	bf1a      	itte	ne
 801b6c2:	f1cb 0008 	rsbne	r0, fp, #8
 801b6c6:	1824      	addne	r4, r4, r0
 801b6c8:	4658      	moveq	r0, fp
 801b6ca:	1862      	adds	r2, r4, r1
 801b6cc:	ea02 010c 	and.w	r1, r2, ip
 801b6d0:	4480      	add	r8, r0
 801b6d2:	eba8 0801 	sub.w	r8, r8, r1
 801b6d6:	ea08 080c 	and.w	r8, r8, ip
 801b6da:	4641      	mov	r1, r8
 801b6dc:	4628      	mov	r0, r5
 801b6de:	9201      	str	r2, [sp, #4]
 801b6e0:	f001 fb60 	bl	801cda4 <_sbrk_r>
 801b6e4:	1c43      	adds	r3, r0, #1
 801b6e6:	9a01      	ldr	r2, [sp, #4]
 801b6e8:	4b28      	ldr	r3, [pc, #160]	@ (801b78c <_malloc_r+0x470>)
 801b6ea:	d107      	bne.n	801b6fc <_malloc_r+0x3e0>
 801b6ec:	f1bb 0f00 	cmp.w	fp, #0
 801b6f0:	d023      	beq.n	801b73a <_malloc_r+0x41e>
 801b6f2:	f1ab 0008 	sub.w	r0, fp, #8
 801b6f6:	4410      	add	r0, r2
 801b6f8:	f04f 0800 	mov.w	r8, #0
 801b6fc:	681a      	ldr	r2, [r3, #0]
 801b6fe:	60b4      	str	r4, [r6, #8]
 801b700:	1b00      	subs	r0, r0, r4
 801b702:	4440      	add	r0, r8
 801b704:	4442      	add	r2, r8
 801b706:	f040 0001 	orr.w	r0, r0, #1
 801b70a:	45b2      	cmp	sl, r6
 801b70c:	601a      	str	r2, [r3, #0]
 801b70e:	6060      	str	r0, [r4, #4]
 801b710:	f43f af29 	beq.w	801b566 <_malloc_r+0x24a>
 801b714:	f1b9 0f0f 	cmp.w	r9, #15
 801b718:	d812      	bhi.n	801b740 <_malloc_r+0x424>
 801b71a:	2301      	movs	r3, #1
 801b71c:	6063      	str	r3, [r4, #4]
 801b71e:	68b3      	ldr	r3, [r6, #8]
 801b720:	685b      	ldr	r3, [r3, #4]
 801b722:	f023 0303 	bic.w	r3, r3, #3
 801b726:	42bb      	cmp	r3, r7
 801b728:	eba3 0207 	sub.w	r2, r3, r7
 801b72c:	d301      	bcc.n	801b732 <_malloc_r+0x416>
 801b72e:	2a0f      	cmp	r2, #15
 801b730:	dc22      	bgt.n	801b778 <_malloc_r+0x45c>
 801b732:	4628      	mov	r0, r5
 801b734:	f000 f832 	bl	801b79c <__malloc_unlock>
 801b738:	e5fc      	b.n	801b334 <_malloc_r+0x18>
 801b73a:	4610      	mov	r0, r2
 801b73c:	46d8      	mov	r8, fp
 801b73e:	e7dd      	b.n	801b6fc <_malloc_r+0x3e0>
 801b740:	f8da 2004 	ldr.w	r2, [sl, #4]
 801b744:	f1a9 090c 	sub.w	r9, r9, #12
 801b748:	f029 0907 	bic.w	r9, r9, #7
 801b74c:	f002 0201 	and.w	r2, r2, #1
 801b750:	ea42 0209 	orr.w	r2, r2, r9
 801b754:	f8ca 2004 	str.w	r2, [sl, #4]
 801b758:	2105      	movs	r1, #5
 801b75a:	eb0a 0209 	add.w	r2, sl, r9
 801b75e:	f1b9 0f0f 	cmp.w	r9, #15
 801b762:	e9c2 1101 	strd	r1, r1, [r2, #4]
 801b766:	f67f aefe 	bls.w	801b566 <_malloc_r+0x24a>
 801b76a:	f10a 0108 	add.w	r1, sl, #8
 801b76e:	4628      	mov	r0, r5
 801b770:	f7ff fd14 	bl	801b19c <_free_r>
 801b774:	4b05      	ldr	r3, [pc, #20]	@ (801b78c <_malloc_r+0x470>)
 801b776:	e6f6      	b.n	801b566 <_malloc_r+0x24a>
 801b778:	68b4      	ldr	r4, [r6, #8]
 801b77a:	f047 0301 	orr.w	r3, r7, #1
 801b77e:	4427      	add	r7, r4
 801b780:	f042 0201 	orr.w	r2, r2, #1
 801b784:	6063      	str	r3, [r4, #4]
 801b786:	60b7      	str	r7, [r6, #8]
 801b788:	607a      	str	r2, [r7, #4]
 801b78a:	e5f8      	b.n	801b37e <_malloc_r+0x62>
 801b78c:	2000d0d0 	.word	0x2000d0d0

0801b790 <__malloc_lock>:
 801b790:	4801      	ldr	r0, [pc, #4]	@ (801b798 <__malloc_lock+0x8>)
 801b792:	f7ff bc8d 	b.w	801b0b0 <__retarget_lock_acquire_recursive>
 801b796:	bf00      	nop
 801b798:	2000d0c8 	.word	0x2000d0c8

0801b79c <__malloc_unlock>:
 801b79c:	4801      	ldr	r0, [pc, #4]	@ (801b7a4 <__malloc_unlock+0x8>)
 801b79e:	f7ff bc88 	b.w	801b0b2 <__retarget_lock_release_recursive>
 801b7a2:	bf00      	nop
 801b7a4:	2000d0c8 	.word	0x2000d0c8

0801b7a8 <_svfprintf_r>:
 801b7a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7ac:	b0d3      	sub	sp, #332	@ 0x14c
 801b7ae:	468b      	mov	fp, r1
 801b7b0:	4691      	mov	r9, r2
 801b7b2:	461e      	mov	r6, r3
 801b7b4:	9003      	str	r0, [sp, #12]
 801b7b6:	f001 faf1 	bl	801cd9c <_localeconv_r>
 801b7ba:	6803      	ldr	r3, [r0, #0]
 801b7bc:	9316      	str	r3, [sp, #88]	@ 0x58
 801b7be:	4618      	mov	r0, r3
 801b7c0:	f7e4 fd06 	bl	80001d0 <strlen>
 801b7c4:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801b7c8:	900d      	str	r0, [sp, #52]	@ 0x34
 801b7ca:	061b      	lsls	r3, r3, #24
 801b7cc:	d515      	bpl.n	801b7fa <_svfprintf_r+0x52>
 801b7ce:	f8db 3010 	ldr.w	r3, [fp, #16]
 801b7d2:	b993      	cbnz	r3, 801b7fa <_svfprintf_r+0x52>
 801b7d4:	9803      	ldr	r0, [sp, #12]
 801b7d6:	2140      	movs	r1, #64	@ 0x40
 801b7d8:	f7ff fda0 	bl	801b31c <_malloc_r>
 801b7dc:	f8cb 0000 	str.w	r0, [fp]
 801b7e0:	f8cb 0010 	str.w	r0, [fp, #16]
 801b7e4:	b930      	cbnz	r0, 801b7f4 <_svfprintf_r+0x4c>
 801b7e6:	9a03      	ldr	r2, [sp, #12]
 801b7e8:	230c      	movs	r3, #12
 801b7ea:	6013      	str	r3, [r2, #0]
 801b7ec:	f04f 33ff 	mov.w	r3, #4294967295
 801b7f0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b7f2:	e1f7      	b.n	801bbe4 <_svfprintf_r+0x43c>
 801b7f4:	2340      	movs	r3, #64	@ 0x40
 801b7f6:	f8cb 3014 	str.w	r3, [fp, #20]
 801b7fa:	ed9f 7b93 	vldr	d7, [pc, #588]	@ 801ba48 <_svfprintf_r+0x2a0>
 801b7fe:	2300      	movs	r3, #0
 801b800:	e9cd 3327 	strd	r3, r3, [sp, #156]	@ 0x9c
 801b804:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801b808:	e9cd 3318 	strd	r3, r3, [sp, #96]	@ 0x60
 801b80c:	ac29      	add	r4, sp, #164	@ 0xa4
 801b80e:	9426      	str	r4, [sp, #152]	@ 0x98
 801b810:	9304      	str	r3, [sp, #16]
 801b812:	9309      	str	r3, [sp, #36]	@ 0x24
 801b814:	9312      	str	r3, [sp, #72]	@ 0x48
 801b816:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b818:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b81a:	464b      	mov	r3, r9
 801b81c:	461d      	mov	r5, r3
 801b81e:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b822:	b10a      	cbz	r2, 801b828 <_svfprintf_r+0x80>
 801b824:	2a25      	cmp	r2, #37	@ 0x25
 801b826:	d1f9      	bne.n	801b81c <_svfprintf_r+0x74>
 801b828:	ebb5 0709 	subs.w	r7, r5, r9
 801b82c:	d00d      	beq.n	801b84a <_svfprintf_r+0xa2>
 801b82e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b830:	443b      	add	r3, r7
 801b832:	9328      	str	r3, [sp, #160]	@ 0xa0
 801b834:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b836:	3301      	adds	r3, #1
 801b838:	2b07      	cmp	r3, #7
 801b83a:	e9c4 9700 	strd	r9, r7, [r4]
 801b83e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801b840:	dc75      	bgt.n	801b92e <_svfprintf_r+0x186>
 801b842:	3408      	adds	r4, #8
 801b844:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b846:	443b      	add	r3, r7
 801b848:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b84a:	782b      	ldrb	r3, [r5, #0]
 801b84c:	2b00      	cmp	r3, #0
 801b84e:	f001 8148 	beq.w	801cae2 <_svfprintf_r+0x133a>
 801b852:	2200      	movs	r2, #0
 801b854:	1c6b      	adds	r3, r5, #1
 801b856:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801b85a:	f04f 38ff 	mov.w	r8, #4294967295
 801b85e:	920e      	str	r2, [sp, #56]	@ 0x38
 801b860:	4615      	mov	r5, r2
 801b862:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b866:	9206      	str	r2, [sp, #24]
 801b868:	930c      	str	r3, [sp, #48]	@ 0x30
 801b86a:	9b06      	ldr	r3, [sp, #24]
 801b86c:	3b20      	subs	r3, #32
 801b86e:	2b5a      	cmp	r3, #90	@ 0x5a
 801b870:	f200 85a4 	bhi.w	801c3bc <_svfprintf_r+0xc14>
 801b874:	e8df f013 	tbh	[pc, r3, lsl #1]
 801b878:	05a2009d 	.word	0x05a2009d
 801b87c:	00a505a2 	.word	0x00a505a2
 801b880:	05a205a2 	.word	0x05a205a2
 801b884:	008505a2 	.word	0x008505a2
 801b888:	05a205a2 	.word	0x05a205a2
 801b88c:	00b200a8 	.word	0x00b200a8
 801b890:	00af05a2 	.word	0x00af05a2
 801b894:	05a200b4 	.word	0x05a200b4
 801b898:	00d100ce 	.word	0x00d100ce
 801b89c:	00d100d1 	.word	0x00d100d1
 801b8a0:	00d100d1 	.word	0x00d100d1
 801b8a4:	00d100d1 	.word	0x00d100d1
 801b8a8:	00d100d1 	.word	0x00d100d1
 801b8ac:	05a205a2 	.word	0x05a205a2
 801b8b0:	05a205a2 	.word	0x05a205a2
 801b8b4:	05a205a2 	.word	0x05a205a2
 801b8b8:	014705a2 	.word	0x014705a2
 801b8bc:	010805a2 	.word	0x010805a2
 801b8c0:	0147011b 	.word	0x0147011b
 801b8c4:	01470147 	.word	0x01470147
 801b8c8:	05a205a2 	.word	0x05a205a2
 801b8cc:	05a205a2 	.word	0x05a205a2
 801b8d0:	05a200e2 	.word	0x05a200e2
 801b8d4:	049d05a2 	.word	0x049d05a2
 801b8d8:	05a205a2 	.word	0x05a205a2
 801b8dc:	04e705a2 	.word	0x04e705a2
 801b8e0:	050805a2 	.word	0x050805a2
 801b8e4:	05a205a2 	.word	0x05a205a2
 801b8e8:	05a2052a 	.word	0x05a2052a
 801b8ec:	05a205a2 	.word	0x05a205a2
 801b8f0:	05a205a2 	.word	0x05a205a2
 801b8f4:	05a205a2 	.word	0x05a205a2
 801b8f8:	014705a2 	.word	0x014705a2
 801b8fc:	010805a2 	.word	0x010805a2
 801b900:	0147011d 	.word	0x0147011d
 801b904:	01470147 	.word	0x01470147
 801b908:	011d00ee 	.word	0x011d00ee
 801b90c:	05a20102 	.word	0x05a20102
 801b910:	05a200fb 	.word	0x05a200fb
 801b914:	049f047e 	.word	0x049f047e
 801b918:	010204d6 	.word	0x010204d6
 801b91c:	04e705a2 	.word	0x04e705a2
 801b920:	050a009b 	.word	0x050a009b
 801b924:	05a205a2 	.word	0x05a205a2
 801b928:	05a20065 	.word	0x05a20065
 801b92c:	009b      	.short	0x009b
 801b92e:	9803      	ldr	r0, [sp, #12]
 801b930:	aa26      	add	r2, sp, #152	@ 0x98
 801b932:	4659      	mov	r1, fp
 801b934:	f002 fe0b 	bl	801e54e <__ssprint_r>
 801b938:	2800      	cmp	r0, #0
 801b93a:	f040 814e 	bne.w	801bbda <_svfprintf_r+0x432>
 801b93e:	ac29      	add	r4, sp, #164	@ 0xa4
 801b940:	e780      	b.n	801b844 <_svfprintf_r+0x9c>
 801b942:	4b43      	ldr	r3, [pc, #268]	@ (801ba50 <_svfprintf_r+0x2a8>)
 801b944:	9319      	str	r3, [sp, #100]	@ 0x64
 801b946:	f015 0320 	ands.w	r3, r5, #32
 801b94a:	f000 84c2 	beq.w	801c2d2 <_svfprintf_r+0xb2a>
 801b94e:	3607      	adds	r6, #7
 801b950:	f026 0307 	bic.w	r3, r6, #7
 801b954:	461a      	mov	r2, r3
 801b956:	685f      	ldr	r7, [r3, #4]
 801b958:	f852 6b08 	ldr.w	r6, [r2], #8
 801b95c:	9207      	str	r2, [sp, #28]
 801b95e:	07eb      	lsls	r3, r5, #31
 801b960:	d50a      	bpl.n	801b978 <_svfprintf_r+0x1d0>
 801b962:	ea56 0307 	orrs.w	r3, r6, r7
 801b966:	d007      	beq.n	801b978 <_svfprintf_r+0x1d0>
 801b968:	2330      	movs	r3, #48	@ 0x30
 801b96a:	f88d 307c 	strb.w	r3, [sp, #124]	@ 0x7c
 801b96e:	9b06      	ldr	r3, [sp, #24]
 801b970:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801b974:	f045 0502 	orr.w	r5, r5, #2
 801b978:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801b97c:	2302      	movs	r3, #2
 801b97e:	f000 bc28 	b.w	801c1d2 <_svfprintf_r+0xa2a>
 801b982:	9803      	ldr	r0, [sp, #12]
 801b984:	f001 fa0a 	bl	801cd9c <_localeconv_r>
 801b988:	6843      	ldr	r3, [r0, #4]
 801b98a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b98c:	4618      	mov	r0, r3
 801b98e:	f7e4 fc1f 	bl	80001d0 <strlen>
 801b992:	9012      	str	r0, [sp, #72]	@ 0x48
 801b994:	9803      	ldr	r0, [sp, #12]
 801b996:	f001 fa01 	bl	801cd9c <_localeconv_r>
 801b99a:	6883      	ldr	r3, [r0, #8]
 801b99c:	9309      	str	r3, [sp, #36]	@ 0x24
 801b99e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b9a0:	b12b      	cbz	r3, 801b9ae <_svfprintf_r+0x206>
 801b9a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9a4:	b11b      	cbz	r3, 801b9ae <_svfprintf_r+0x206>
 801b9a6:	781b      	ldrb	r3, [r3, #0]
 801b9a8:	b10b      	cbz	r3, 801b9ae <_svfprintf_r+0x206>
 801b9aa:	f445 6580 	orr.w	r5, r5, #1024	@ 0x400
 801b9ae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b9b0:	e757      	b.n	801b862 <_svfprintf_r+0xba>
 801b9b2:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801b9b6:	2b00      	cmp	r3, #0
 801b9b8:	d1f9      	bne.n	801b9ae <_svfprintf_r+0x206>
 801b9ba:	2320      	movs	r3, #32
 801b9bc:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b9c0:	e7f5      	b.n	801b9ae <_svfprintf_r+0x206>
 801b9c2:	f045 0501 	orr.w	r5, r5, #1
 801b9c6:	e7f2      	b.n	801b9ae <_svfprintf_r+0x206>
 801b9c8:	f856 3b04 	ldr.w	r3, [r6], #4
 801b9cc:	930e      	str	r3, [sp, #56]	@ 0x38
 801b9ce:	2b00      	cmp	r3, #0
 801b9d0:	daed      	bge.n	801b9ae <_svfprintf_r+0x206>
 801b9d2:	425b      	negs	r3, r3
 801b9d4:	930e      	str	r3, [sp, #56]	@ 0x38
 801b9d6:	f045 0504 	orr.w	r5, r5, #4
 801b9da:	e7e8      	b.n	801b9ae <_svfprintf_r+0x206>
 801b9dc:	232b      	movs	r3, #43	@ 0x2b
 801b9de:	e7ed      	b.n	801b9bc <_svfprintf_r+0x214>
 801b9e0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b9e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b9e6:	9206      	str	r2, [sp, #24]
 801b9e8:	2a2a      	cmp	r2, #42	@ 0x2a
 801b9ea:	d10f      	bne.n	801ba0c <_svfprintf_r+0x264>
 801b9ec:	f856 2b04 	ldr.w	r2, [r6], #4
 801b9f0:	930c      	str	r3, [sp, #48]	@ 0x30
 801b9f2:	ea42 78e2 	orr.w	r8, r2, r2, asr #31
 801b9f6:	e7da      	b.n	801b9ae <_svfprintf_r+0x206>
 801b9f8:	fb01 2808 	mla	r8, r1, r8, r2
 801b9fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ba00:	9206      	str	r2, [sp, #24]
 801ba02:	9a06      	ldr	r2, [sp, #24]
 801ba04:	3a30      	subs	r2, #48	@ 0x30
 801ba06:	2a09      	cmp	r2, #9
 801ba08:	d9f6      	bls.n	801b9f8 <_svfprintf_r+0x250>
 801ba0a:	e72d      	b.n	801b868 <_svfprintf_r+0xc0>
 801ba0c:	f04f 0800 	mov.w	r8, #0
 801ba10:	210a      	movs	r1, #10
 801ba12:	e7f6      	b.n	801ba02 <_svfprintf_r+0x25a>
 801ba14:	f045 0580 	orr.w	r5, r5, #128	@ 0x80
 801ba18:	e7c9      	b.n	801b9ae <_svfprintf_r+0x206>
 801ba1a:	2200      	movs	r2, #0
 801ba1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba1e:	920e      	str	r2, [sp, #56]	@ 0x38
 801ba20:	210a      	movs	r1, #10
 801ba22:	9a06      	ldr	r2, [sp, #24]
 801ba24:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801ba26:	3a30      	subs	r2, #48	@ 0x30
 801ba28:	fb01 2200 	mla	r2, r1, r0, r2
 801ba2c:	920e      	str	r2, [sp, #56]	@ 0x38
 801ba2e:	f813 2b01 	ldrb.w	r2, [r3], #1
 801ba32:	9206      	str	r2, [sp, #24]
 801ba34:	3a30      	subs	r2, #48	@ 0x30
 801ba36:	2a09      	cmp	r2, #9
 801ba38:	d9f3      	bls.n	801ba22 <_svfprintf_r+0x27a>
 801ba3a:	e715      	b.n	801b868 <_svfprintf_r+0xc0>
 801ba3c:	f045 0508 	orr.w	r5, r5, #8
 801ba40:	e7b5      	b.n	801b9ae <_svfprintf_r+0x206>
 801ba42:	bf00      	nop
 801ba44:	f3af 8000 	nop.w
	...
 801ba50:	08021734 	.word	0x08021734
 801ba54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba56:	781b      	ldrb	r3, [r3, #0]
 801ba58:	2b68      	cmp	r3, #104	@ 0x68
 801ba5a:	bf01      	itttt	eq
 801ba5c:	9b0c      	ldreq	r3, [sp, #48]	@ 0x30
 801ba5e:	3301      	addeq	r3, #1
 801ba60:	930c      	streq	r3, [sp, #48]	@ 0x30
 801ba62:	f445 7500 	orreq.w	r5, r5, #512	@ 0x200
 801ba66:	bf18      	it	ne
 801ba68:	f045 0540 	orrne.w	r5, r5, #64	@ 0x40
 801ba6c:	e79f      	b.n	801b9ae <_svfprintf_r+0x206>
 801ba6e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba70:	781b      	ldrb	r3, [r3, #0]
 801ba72:	2b6c      	cmp	r3, #108	@ 0x6c
 801ba74:	d105      	bne.n	801ba82 <_svfprintf_r+0x2da>
 801ba76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ba78:	3301      	adds	r3, #1
 801ba7a:	930c      	str	r3, [sp, #48]	@ 0x30
 801ba7c:	f045 0520 	orr.w	r5, r5, #32
 801ba80:	e795      	b.n	801b9ae <_svfprintf_r+0x206>
 801ba82:	f045 0510 	orr.w	r5, r5, #16
 801ba86:	e792      	b.n	801b9ae <_svfprintf_r+0x206>
 801ba88:	4632      	mov	r2, r6
 801ba8a:	f852 3b04 	ldr.w	r3, [r2], #4
 801ba8e:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801ba92:	2300      	movs	r3, #0
 801ba94:	9207      	str	r2, [sp, #28]
 801ba96:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801ba9a:	469a      	mov	sl, r3
 801ba9c:	f04f 0801 	mov.w	r8, #1
 801baa0:	9310      	str	r3, [sp, #64]	@ 0x40
 801baa2:	461f      	mov	r7, r3
 801baa4:	9308      	str	r3, [sp, #32]
 801baa6:	461e      	mov	r6, r3
 801baa8:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801baac:	e1d2      	b.n	801be54 <_svfprintf_r+0x6ac>
 801baae:	f045 0510 	orr.w	r5, r5, #16
 801bab2:	06af      	lsls	r7, r5, #26
 801bab4:	d512      	bpl.n	801badc <_svfprintf_r+0x334>
 801bab6:	3607      	adds	r6, #7
 801bab8:	f026 0307 	bic.w	r3, r6, #7
 801babc:	461a      	mov	r2, r3
 801babe:	685f      	ldr	r7, [r3, #4]
 801bac0:	f852 6b08 	ldr.w	r6, [r2], #8
 801bac4:	9207      	str	r2, [sp, #28]
 801bac6:	2f00      	cmp	r7, #0
 801bac8:	da06      	bge.n	801bad8 <_svfprintf_r+0x330>
 801baca:	4276      	negs	r6, r6
 801bacc:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801bad0:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 801bad4:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801bad8:	2301      	movs	r3, #1
 801bada:	e37d      	b.n	801c1d8 <_svfprintf_r+0xa30>
 801badc:	4633      	mov	r3, r6
 801bade:	06ee      	lsls	r6, r5, #27
 801bae0:	f853 7b04 	ldr.w	r7, [r3], #4
 801bae4:	9307      	str	r3, [sp, #28]
 801bae6:	d502      	bpl.n	801baee <_svfprintf_r+0x346>
 801bae8:	463e      	mov	r6, r7
 801baea:	17ff      	asrs	r7, r7, #31
 801baec:	e7eb      	b.n	801bac6 <_svfprintf_r+0x31e>
 801baee:	0668      	lsls	r0, r5, #25
 801baf0:	d503      	bpl.n	801bafa <_svfprintf_r+0x352>
 801baf2:	b23e      	sxth	r6, r7
 801baf4:	f347 37c0 	sbfx	r7, r7, #15, #1
 801baf8:	e7e5      	b.n	801bac6 <_svfprintf_r+0x31e>
 801bafa:	05a9      	lsls	r1, r5, #22
 801bafc:	d5f4      	bpl.n	801bae8 <_svfprintf_r+0x340>
 801bafe:	b27e      	sxtb	r6, r7
 801bb00:	f347 17c0 	sbfx	r7, r7, #7, #1
 801bb04:	e7df      	b.n	801bac6 <_svfprintf_r+0x31e>
 801bb06:	3607      	adds	r6, #7
 801bb08:	f026 0307 	bic.w	r3, r6, #7
 801bb0c:	ecb3 7b02 	vldmia	r3!, {d7}
 801bb10:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801bb14:	9307      	str	r3, [sp, #28]
 801bb16:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb18:	931a      	str	r3, [sp, #104]	@ 0x68
 801bb1a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb1c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801bb20:	931b      	str	r3, [sp, #108]	@ 0x6c
 801bb22:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801bb26:	4b81      	ldr	r3, [pc, #516]	@ (801bd2c <_svfprintf_r+0x584>)
 801bb28:	f04f 32ff 	mov.w	r2, #4294967295
 801bb2c:	f7e4 fffe 	bl	8000b2c <__aeabi_dcmpun>
 801bb30:	bb10      	cbnz	r0, 801bb78 <_svfprintf_r+0x3d0>
 801bb32:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801bb36:	4b7d      	ldr	r3, [pc, #500]	@ (801bd2c <_svfprintf_r+0x584>)
 801bb38:	f04f 32ff 	mov.w	r2, #4294967295
 801bb3c:	f7e4 ffd8 	bl	8000af0 <__aeabi_dcmple>
 801bb40:	b9d0      	cbnz	r0, 801bb78 <_svfprintf_r+0x3d0>
 801bb42:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801bb46:	2200      	movs	r2, #0
 801bb48:	2300      	movs	r3, #0
 801bb4a:	f7e4 ffc7 	bl	8000adc <__aeabi_dcmplt>
 801bb4e:	b110      	cbz	r0, 801bb56 <_svfprintf_r+0x3ae>
 801bb50:	232d      	movs	r3, #45	@ 0x2d
 801bb52:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801bb56:	4a76      	ldr	r2, [pc, #472]	@ (801bd30 <_svfprintf_r+0x588>)
 801bb58:	4b76      	ldr	r3, [pc, #472]	@ (801bd34 <_svfprintf_r+0x58c>)
 801bb5a:	9906      	ldr	r1, [sp, #24]
 801bb5c:	f025 0580 	bic.w	r5, r5, #128	@ 0x80
 801bb60:	2947      	cmp	r1, #71	@ 0x47
 801bb62:	bfd4      	ite	le
 801bb64:	4691      	movle	r9, r2
 801bb66:	4699      	movgt	r9, r3
 801bb68:	f04f 0a00 	mov.w	sl, #0
 801bb6c:	f04f 0803 	mov.w	r8, #3
 801bb70:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 801bb74:	f000 bfec 	b.w	801cb50 <_svfprintf_r+0x13a8>
 801bb78:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801bb7c:	4610      	mov	r0, r2
 801bb7e:	4619      	mov	r1, r3
 801bb80:	f7e4 ffd4 	bl	8000b2c <__aeabi_dcmpun>
 801bb84:	4682      	mov	sl, r0
 801bb86:	b140      	cbz	r0, 801bb9a <_svfprintf_r+0x3f2>
 801bb88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb8a:	4a6b      	ldr	r2, [pc, #428]	@ (801bd38 <_svfprintf_r+0x590>)
 801bb8c:	2b00      	cmp	r3, #0
 801bb8e:	bfbc      	itt	lt
 801bb90:	232d      	movlt	r3, #45	@ 0x2d
 801bb92:	f88d 307b 	strblt.w	r3, [sp, #123]	@ 0x7b
 801bb96:	4b69      	ldr	r3, [pc, #420]	@ (801bd3c <_svfprintf_r+0x594>)
 801bb98:	e7df      	b.n	801bb5a <_svfprintf_r+0x3b2>
 801bb9a:	9b06      	ldr	r3, [sp, #24]
 801bb9c:	2b61      	cmp	r3, #97	@ 0x61
 801bb9e:	d025      	beq.n	801bbec <_svfprintf_r+0x444>
 801bba0:	2b41      	cmp	r3, #65	@ 0x41
 801bba2:	d125      	bne.n	801bbf0 <_svfprintf_r+0x448>
 801bba4:	2358      	movs	r3, #88	@ 0x58
 801bba6:	2230      	movs	r2, #48	@ 0x30
 801bba8:	f1b8 0f63 	cmp.w	r8, #99	@ 0x63
 801bbac:	f88d 207c 	strb.w	r2, [sp, #124]	@ 0x7c
 801bbb0:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801bbb4:	f045 0502 	orr.w	r5, r5, #2
 801bbb8:	f340 80a5 	ble.w	801bd06 <_svfprintf_r+0x55e>
 801bbbc:	9803      	ldr	r0, [sp, #12]
 801bbbe:	f108 0101 	add.w	r1, r8, #1
 801bbc2:	f7ff fbab 	bl	801b31c <_malloc_r>
 801bbc6:	4681      	mov	r9, r0
 801bbc8:	2800      	cmp	r0, #0
 801bbca:	f040 80a1 	bne.w	801bd10 <_svfprintf_r+0x568>
 801bbce:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801bbd2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801bbd6:	f8ab 300c 	strh.w	r3, [fp, #12]
 801bbda:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801bbde:	065b      	lsls	r3, r3, #25
 801bbe0:	f53f ae04 	bmi.w	801b7ec <_svfprintf_r+0x44>
 801bbe4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801bbe6:	b053      	add	sp, #332	@ 0x14c
 801bbe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbec:	2378      	movs	r3, #120	@ 0x78
 801bbee:	e7da      	b.n	801bba6 <_svfprintf_r+0x3fe>
 801bbf0:	f1b8 3fff 	cmp.w	r8, #4294967295
 801bbf4:	f000 808e 	beq.w	801bd14 <_svfprintf_r+0x56c>
 801bbf8:	9b06      	ldr	r3, [sp, #24]
 801bbfa:	f023 0320 	bic.w	r3, r3, #32
 801bbfe:	2b47      	cmp	r3, #71	@ 0x47
 801bc00:	d105      	bne.n	801bc0e <_svfprintf_r+0x466>
 801bc02:	f1b8 0f00 	cmp.w	r8, #0
 801bc06:	d102      	bne.n	801bc0e <_svfprintf_r+0x466>
 801bc08:	46c2      	mov	sl, r8
 801bc0a:	f04f 0801 	mov.w	r8, #1
 801bc0e:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801bc12:	9311      	str	r3, [sp, #68]	@ 0x44
 801bc14:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bc16:	2b00      	cmp	r3, #0
 801bc18:	da7f      	bge.n	801bd1a <_svfprintf_r+0x572>
 801bc1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bc1c:	9314      	str	r3, [sp, #80]	@ 0x50
 801bc1e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bc20:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801bc24:	9315      	str	r3, [sp, #84]	@ 0x54
 801bc26:	232d      	movs	r3, #45	@ 0x2d
 801bc28:	931c      	str	r3, [sp, #112]	@ 0x70
 801bc2a:	9b06      	ldr	r3, [sp, #24]
 801bc2c:	f023 0320 	bic.w	r3, r3, #32
 801bc30:	2b41      	cmp	r3, #65	@ 0x41
 801bc32:	9308      	str	r3, [sp, #32]
 801bc34:	f040 81e6 	bne.w	801c004 <_svfprintf_r+0x85c>
 801bc38:	a820      	add	r0, sp, #128	@ 0x80
 801bc3a:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801bc3e:	f001 f8e1 	bl	801ce04 <frexp>
 801bc42:	2200      	movs	r2, #0
 801bc44:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 801bc48:	ec51 0b10 	vmov	r0, r1, d0
 801bc4c:	f7e4 fcd4 	bl	80005f8 <__aeabi_dmul>
 801bc50:	4602      	mov	r2, r0
 801bc52:	460b      	mov	r3, r1
 801bc54:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bc58:	2200      	movs	r2, #0
 801bc5a:	2300      	movs	r3, #0
 801bc5c:	f7e4 ff34 	bl	8000ac8 <__aeabi_dcmpeq>
 801bc60:	b108      	cbz	r0, 801bc66 <_svfprintf_r+0x4be>
 801bc62:	2301      	movs	r3, #1
 801bc64:	9320      	str	r3, [sp, #128]	@ 0x80
 801bc66:	4a36      	ldr	r2, [pc, #216]	@ (801bd40 <_svfprintf_r+0x598>)
 801bc68:	4b36      	ldr	r3, [pc, #216]	@ (801bd44 <_svfprintf_r+0x59c>)
 801bc6a:	9906      	ldr	r1, [sp, #24]
 801bc6c:	2961      	cmp	r1, #97	@ 0x61
 801bc6e:	bf18      	it	ne
 801bc70:	461a      	movne	r2, r3
 801bc72:	9210      	str	r2, [sp, #64]	@ 0x40
 801bc74:	f108 37ff 	add.w	r7, r8, #4294967295
 801bc78:	464e      	mov	r6, r9
 801bc7a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bc7e:	4b32      	ldr	r3, [pc, #200]	@ (801bd48 <_svfprintf_r+0x5a0>)
 801bc80:	2200      	movs	r2, #0
 801bc82:	f7e4 fcb9 	bl	80005f8 <__aeabi_dmul>
 801bc86:	4602      	mov	r2, r0
 801bc88:	460b      	mov	r3, r1
 801bc8a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bc8e:	f7e4 ff63 	bl	8000b58 <__aeabi_d2iz>
 801bc92:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bc94:	f7e4 fc46 	bl	8000524 <__aeabi_i2d>
 801bc98:	4602      	mov	r2, r0
 801bc9a:	460b      	mov	r3, r1
 801bc9c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bca0:	f7e4 faf2 	bl	8000288 <__aeabi_dsub>
 801bca4:	4602      	mov	r2, r0
 801bca6:	460b      	mov	r3, r1
 801bca8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bcac:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bcae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bcb0:	5c9b      	ldrb	r3, [r3, r2]
 801bcb2:	f806 3b01 	strb.w	r3, [r6], #1
 801bcb6:	1c7a      	adds	r2, r7, #1
 801bcb8:	d006      	beq.n	801bcc8 <_svfprintf_r+0x520>
 801bcba:	1e7b      	subs	r3, r7, #1
 801bcbc:	931d      	str	r3, [sp, #116]	@ 0x74
 801bcbe:	2200      	movs	r2, #0
 801bcc0:	2300      	movs	r3, #0
 801bcc2:	f7e4 ff01 	bl	8000ac8 <__aeabi_dcmpeq>
 801bcc6:	b370      	cbz	r0, 801bd26 <_svfprintf_r+0x57e>
 801bcc8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bccc:	4b1f      	ldr	r3, [pc, #124]	@ (801bd4c <_svfprintf_r+0x5a4>)
 801bcce:	2200      	movs	r2, #0
 801bcd0:	f7e4 ff22 	bl	8000b18 <__aeabi_dcmpgt>
 801bcd4:	2800      	cmp	r0, #0
 801bcd6:	d13b      	bne.n	801bd50 <_svfprintf_r+0x5a8>
 801bcd8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bcdc:	4b1b      	ldr	r3, [pc, #108]	@ (801bd4c <_svfprintf_r+0x5a4>)
 801bcde:	2200      	movs	r2, #0
 801bce0:	f7e4 fef2 	bl	8000ac8 <__aeabi_dcmpeq>
 801bce4:	b110      	cbz	r0, 801bcec <_svfprintf_r+0x544>
 801bce6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bce8:	07db      	lsls	r3, r3, #31
 801bcea:	d431      	bmi.n	801bd50 <_svfprintf_r+0x5a8>
 801bcec:	4633      	mov	r3, r6
 801bcee:	19f1      	adds	r1, r6, r7
 801bcf0:	2030      	movs	r0, #48	@ 0x30
 801bcf2:	1aca      	subs	r2, r1, r3
 801bcf4:	2a00      	cmp	r2, #0
 801bcf6:	f280 8182 	bge.w	801bffe <_svfprintf_r+0x856>
 801bcfa:	1c7b      	adds	r3, r7, #1
 801bcfc:	3701      	adds	r7, #1
 801bcfe:	bfb8      	it	lt
 801bd00:	2300      	movlt	r3, #0
 801bd02:	441e      	add	r6, r3
 801bd04:	e038      	b.n	801bd78 <_svfprintf_r+0x5d0>
 801bd06:	f04f 0a00 	mov.w	sl, #0
 801bd0a:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801bd0e:	e77e      	b.n	801bc0e <_svfprintf_r+0x466>
 801bd10:	4682      	mov	sl, r0
 801bd12:	e77c      	b.n	801bc0e <_svfprintf_r+0x466>
 801bd14:	f04f 0806 	mov.w	r8, #6
 801bd18:	e779      	b.n	801bc0e <_svfprintf_r+0x466>
 801bd1a:	ed9d 7b0a 	vldr	d7, [sp, #40]	@ 0x28
 801bd1e:	2300      	movs	r3, #0
 801bd20:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
 801bd24:	e780      	b.n	801bc28 <_svfprintf_r+0x480>
 801bd26:	9f1d      	ldr	r7, [sp, #116]	@ 0x74
 801bd28:	e7a7      	b.n	801bc7a <_svfprintf_r+0x4d2>
 801bd2a:	bf00      	nop
 801bd2c:	7fefffff 	.word	0x7fefffff
 801bd30:	08021724 	.word	0x08021724
 801bd34:	08021728 	.word	0x08021728
 801bd38:	0802172c 	.word	0x0802172c
 801bd3c:	08021730 	.word	0x08021730
 801bd40:	08021734 	.word	0x08021734
 801bd44:	08021745 	.word	0x08021745
 801bd48:	40300000 	.word	0x40300000
 801bd4c:	3fe00000 	.word	0x3fe00000
 801bd50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bd52:	9624      	str	r6, [sp, #144]	@ 0x90
 801bd54:	7bd9      	ldrb	r1, [r3, #15]
 801bd56:	2030      	movs	r0, #48	@ 0x30
 801bd58:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801bd5a:	1e53      	subs	r3, r2, #1
 801bd5c:	9324      	str	r3, [sp, #144]	@ 0x90
 801bd5e:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 801bd62:	428b      	cmp	r3, r1
 801bd64:	f000 8148 	beq.w	801bff8 <_svfprintf_r+0x850>
 801bd68:	2b39      	cmp	r3, #57	@ 0x39
 801bd6a:	bf0b      	itete	eq
 801bd6c:	9b10      	ldreq	r3, [sp, #64]	@ 0x40
 801bd6e:	3301      	addne	r3, #1
 801bd70:	7a9b      	ldrbeq	r3, [r3, #10]
 801bd72:	b2db      	uxtbne	r3, r3
 801bd74:	f802 3c01 	strb.w	r3, [r2, #-1]
 801bd78:	eba6 0309 	sub.w	r3, r6, r9
 801bd7c:	9304      	str	r3, [sp, #16]
 801bd7e:	9b08      	ldr	r3, [sp, #32]
 801bd80:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801bd82:	2b47      	cmp	r3, #71	@ 0x47
 801bd84:	f040 8187 	bne.w	801c096 <_svfprintf_r+0x8ee>
 801bd88:	1cf1      	adds	r1, r6, #3
 801bd8a:	db02      	blt.n	801bd92 <_svfprintf_r+0x5ea>
 801bd8c:	4546      	cmp	r6, r8
 801bd8e:	f340 81a5 	ble.w	801c0dc <_svfprintf_r+0x934>
 801bd92:	9b06      	ldr	r3, [sp, #24]
 801bd94:	3b02      	subs	r3, #2
 801bd96:	9306      	str	r3, [sp, #24]
 801bd98:	9906      	ldr	r1, [sp, #24]
 801bd9a:	f89d 2018 	ldrb.w	r2, [sp, #24]
 801bd9e:	f021 0120 	bic.w	r1, r1, #32
 801bda2:	2941      	cmp	r1, #65	@ 0x41
 801bda4:	bf08      	it	eq
 801bda6:	320f      	addeq	r2, #15
 801bda8:	f106 33ff 	add.w	r3, r6, #4294967295
 801bdac:	bf06      	itte	eq
 801bdae:	b2d2      	uxtbeq	r2, r2
 801bdb0:	2101      	moveq	r1, #1
 801bdb2:	2100      	movne	r1, #0
 801bdb4:	2b00      	cmp	r3, #0
 801bdb6:	9320      	str	r3, [sp, #128]	@ 0x80
 801bdb8:	bfb8      	it	lt
 801bdba:	f1c6 0301 	rsblt	r3, r6, #1
 801bdbe:	f88d 2088 	strb.w	r2, [sp, #136]	@ 0x88
 801bdc2:	bfb4      	ite	lt
 801bdc4:	222d      	movlt	r2, #45	@ 0x2d
 801bdc6:	222b      	movge	r2, #43	@ 0x2b
 801bdc8:	2b09      	cmp	r3, #9
 801bdca:	f88d 2089 	strb.w	r2, [sp, #137]	@ 0x89
 801bdce:	f340 8178 	ble.w	801c0c2 <_svfprintf_r+0x91a>
 801bdd2:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801bdd6:	270a      	movs	r7, #10
 801bdd8:	4602      	mov	r2, r0
 801bdda:	fbb3 f6f7 	udiv	r6, r3, r7
 801bdde:	fb07 3116 	mls	r1, r7, r6, r3
 801bde2:	3130      	adds	r1, #48	@ 0x30
 801bde4:	f802 1c01 	strb.w	r1, [r2, #-1]
 801bde8:	4619      	mov	r1, r3
 801bdea:	2963      	cmp	r1, #99	@ 0x63
 801bdec:	f100 30ff 	add.w	r0, r0, #4294967295
 801bdf0:	4633      	mov	r3, r6
 801bdf2:	dcf1      	bgt.n	801bdd8 <_svfprintf_r+0x630>
 801bdf4:	3330      	adds	r3, #48	@ 0x30
 801bdf6:	1e91      	subs	r1, r2, #2
 801bdf8:	f800 3c01 	strb.w	r3, [r0, #-1]
 801bdfc:	f10d 0689 	add.w	r6, sp, #137	@ 0x89
 801be00:	460b      	mov	r3, r1
 801be02:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801be06:	4283      	cmp	r3, r0
 801be08:	f0c0 8156 	bcc.w	801c0b8 <_svfprintf_r+0x910>
 801be0c:	f10d 0399 	add.w	r3, sp, #153	@ 0x99
 801be10:	1a9b      	subs	r3, r3, r2
 801be12:	4281      	cmp	r1, r0
 801be14:	bf88      	it	hi
 801be16:	2300      	movhi	r3, #0
 801be18:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801be1c:	441a      	add	r2, r3
 801be1e:	ab22      	add	r3, sp, #136	@ 0x88
 801be20:	1ad3      	subs	r3, r2, r3
 801be22:	9a04      	ldr	r2, [sp, #16]
 801be24:	9318      	str	r3, [sp, #96]	@ 0x60
 801be26:	2a01      	cmp	r2, #1
 801be28:	eb03 0802 	add.w	r8, r3, r2
 801be2c:	dc01      	bgt.n	801be32 <_svfprintf_r+0x68a>
 801be2e:	07ea      	lsls	r2, r5, #31
 801be30:	d501      	bpl.n	801be36 <_svfprintf_r+0x68e>
 801be32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801be34:	4498      	add	r8, r3
 801be36:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801be3a:	2700      	movs	r7, #0
 801be3c:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801be40:	9311      	str	r3, [sp, #68]	@ 0x44
 801be42:	9708      	str	r7, [sp, #32]
 801be44:	463e      	mov	r6, r7
 801be46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801be48:	2b00      	cmp	r3, #0
 801be4a:	f040 818f 	bne.w	801c16c <_svfprintf_r+0x9c4>
 801be4e:	2300      	movs	r3, #0
 801be50:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801be52:	9310      	str	r3, [sp, #64]	@ 0x40
 801be54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801be56:	4543      	cmp	r3, r8
 801be58:	bfb8      	it	lt
 801be5a:	4643      	movlt	r3, r8
 801be5c:	9311      	str	r3, [sp, #68]	@ 0x44
 801be5e:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801be62:	b113      	cbz	r3, 801be6a <_svfprintf_r+0x6c2>
 801be64:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801be66:	3301      	adds	r3, #1
 801be68:	9311      	str	r3, [sp, #68]	@ 0x44
 801be6a:	f015 0302 	ands.w	r3, r5, #2
 801be6e:	931c      	str	r3, [sp, #112]	@ 0x70
 801be70:	bf1e      	ittt	ne
 801be72:	9b11      	ldrne	r3, [sp, #68]	@ 0x44
 801be74:	3302      	addne	r3, #2
 801be76:	9311      	strne	r3, [sp, #68]	@ 0x44
 801be78:	f015 0384 	ands.w	r3, r5, #132	@ 0x84
 801be7c:	931d      	str	r3, [sp, #116]	@ 0x74
 801be7e:	d122      	bne.n	801bec6 <_svfprintf_r+0x71e>
 801be80:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801be82:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801be84:	1a9b      	subs	r3, r3, r2
 801be86:	2b00      	cmp	r3, #0
 801be88:	9313      	str	r3, [sp, #76]	@ 0x4c
 801be8a:	dd1c      	ble.n	801bec6 <_svfprintf_r+0x71e>
 801be8c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801be8e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801be92:	2810      	cmp	r0, #16
 801be94:	489e      	ldr	r0, [pc, #632]	@ (801c110 <_svfprintf_r+0x968>)
 801be96:	6020      	str	r0, [r4, #0]
 801be98:	f102 0201 	add.w	r2, r2, #1
 801be9c:	f104 0108 	add.w	r1, r4, #8
 801bea0:	f300 8298 	bgt.w	801c3d4 <_svfprintf_r+0xc2c>
 801bea4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bea6:	6060      	str	r0, [r4, #4]
 801bea8:	4403      	add	r3, r0
 801beaa:	2a07      	cmp	r2, #7
 801beac:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801beb0:	f340 82a5 	ble.w	801c3fe <_svfprintf_r+0xc56>
 801beb4:	9803      	ldr	r0, [sp, #12]
 801beb6:	aa26      	add	r2, sp, #152	@ 0x98
 801beb8:	4659      	mov	r1, fp
 801beba:	f002 fb48 	bl	801e54e <__ssprint_r>
 801bebe:	2800      	cmp	r0, #0
 801bec0:	f040 85ed 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801bec4:	ac29      	add	r4, sp, #164	@ 0xa4
 801bec6:	f89d 207b 	ldrb.w	r2, [sp, #123]	@ 0x7b
 801beca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801becc:	b16a      	cbz	r2, 801beea <_svfprintf_r+0x742>
 801bece:	f10d 027b 	add.w	r2, sp, #123	@ 0x7b
 801bed2:	6022      	str	r2, [r4, #0]
 801bed4:	2201      	movs	r2, #1
 801bed6:	4413      	add	r3, r2
 801bed8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801beda:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bedc:	6062      	str	r2, [r4, #4]
 801bede:	4413      	add	r3, r2
 801bee0:	2b07      	cmp	r3, #7
 801bee2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bee4:	f300 828d 	bgt.w	801c402 <_svfprintf_r+0xc5a>
 801bee8:	3408      	adds	r4, #8
 801beea:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801beec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801beee:	b162      	cbz	r2, 801bf0a <_svfprintf_r+0x762>
 801bef0:	aa1f      	add	r2, sp, #124	@ 0x7c
 801bef2:	6022      	str	r2, [r4, #0]
 801bef4:	2202      	movs	r2, #2
 801bef6:	4413      	add	r3, r2
 801bef8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801befa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801befc:	6062      	str	r2, [r4, #4]
 801befe:	3301      	adds	r3, #1
 801bf00:	2b07      	cmp	r3, #7
 801bf02:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bf04:	f300 8287 	bgt.w	801c416 <_svfprintf_r+0xc6e>
 801bf08:	3408      	adds	r4, #8
 801bf0a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801bf0c:	2b80      	cmp	r3, #128	@ 0x80
 801bf0e:	d122      	bne.n	801bf56 <_svfprintf_r+0x7ae>
 801bf10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bf12:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bf14:	1a9b      	subs	r3, r3, r2
 801bf16:	2b00      	cmp	r3, #0
 801bf18:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bf1a:	dd1c      	ble.n	801bf56 <_svfprintf_r+0x7ae>
 801bf1c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bf1e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801bf22:	2810      	cmp	r0, #16
 801bf24:	487b      	ldr	r0, [pc, #492]	@ (801c114 <_svfprintf_r+0x96c>)
 801bf26:	6020      	str	r0, [r4, #0]
 801bf28:	f102 0201 	add.w	r2, r2, #1
 801bf2c:	f104 0108 	add.w	r1, r4, #8
 801bf30:	f300 827b 	bgt.w	801c42a <_svfprintf_r+0xc82>
 801bf34:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bf36:	6060      	str	r0, [r4, #4]
 801bf38:	4403      	add	r3, r0
 801bf3a:	2a07      	cmp	r2, #7
 801bf3c:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801bf40:	f340 8288 	ble.w	801c454 <_svfprintf_r+0xcac>
 801bf44:	9803      	ldr	r0, [sp, #12]
 801bf46:	aa26      	add	r2, sp, #152	@ 0x98
 801bf48:	4659      	mov	r1, fp
 801bf4a:	f002 fb00 	bl	801e54e <__ssprint_r>
 801bf4e:	2800      	cmp	r0, #0
 801bf50:	f040 85a5 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801bf54:	ac29      	add	r4, sp, #164	@ 0xa4
 801bf56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bf58:	eba3 0308 	sub.w	r3, r3, r8
 801bf5c:	2b00      	cmp	r3, #0
 801bf5e:	9310      	str	r3, [sp, #64]	@ 0x40
 801bf60:	dd1c      	ble.n	801bf9c <_svfprintf_r+0x7f4>
 801bf62:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801bf64:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801bf68:	2810      	cmp	r0, #16
 801bf6a:	486a      	ldr	r0, [pc, #424]	@ (801c114 <_svfprintf_r+0x96c>)
 801bf6c:	6020      	str	r0, [r4, #0]
 801bf6e:	f102 0201 	add.w	r2, r2, #1
 801bf72:	f104 0108 	add.w	r1, r4, #8
 801bf76:	f300 826f 	bgt.w	801c458 <_svfprintf_r+0xcb0>
 801bf7a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801bf7c:	6060      	str	r0, [r4, #4]
 801bf7e:	4403      	add	r3, r0
 801bf80:	2a07      	cmp	r2, #7
 801bf82:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801bf86:	f340 827c 	ble.w	801c482 <_svfprintf_r+0xcda>
 801bf8a:	9803      	ldr	r0, [sp, #12]
 801bf8c:	aa26      	add	r2, sp, #152	@ 0x98
 801bf8e:	4659      	mov	r1, fp
 801bf90:	f002 fadd 	bl	801e54e <__ssprint_r>
 801bf94:	2800      	cmp	r0, #0
 801bf96:	f040 8582 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801bf9a:	ac29      	add	r4, sp, #164	@ 0xa4
 801bf9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bf9e:	9310      	str	r3, [sp, #64]	@ 0x40
 801bfa0:	05ea      	lsls	r2, r5, #23
 801bfa2:	f100 8275 	bmi.w	801c490 <_svfprintf_r+0xce8>
 801bfa6:	4443      	add	r3, r8
 801bfa8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bfaa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bfac:	3301      	adds	r3, #1
 801bfae:	2b07      	cmp	r3, #7
 801bfb0:	e9c4 9800 	strd	r9, r8, [r4]
 801bfb4:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bfb6:	f300 82b1 	bgt.w	801c51c <_svfprintf_r+0xd74>
 801bfba:	3408      	adds	r4, #8
 801bfbc:	076a      	lsls	r2, r5, #29
 801bfbe:	f100 8550 	bmi.w	801ca62 <_svfprintf_r+0x12ba>
 801bfc2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 801bfc6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801bfc8:	428a      	cmp	r2, r1
 801bfca:	bfac      	ite	ge
 801bfcc:	189b      	addge	r3, r3, r2
 801bfce:	185b      	addlt	r3, r3, r1
 801bfd0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bfd2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bfd4:	b13b      	cbz	r3, 801bfe6 <_svfprintf_r+0x83e>
 801bfd6:	9803      	ldr	r0, [sp, #12]
 801bfd8:	aa26      	add	r2, sp, #152	@ 0x98
 801bfda:	4659      	mov	r1, fp
 801bfdc:	f002 fab7 	bl	801e54e <__ssprint_r>
 801bfe0:	2800      	cmp	r0, #0
 801bfe2:	f040 855c 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801bfe6:	2300      	movs	r3, #0
 801bfe8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bfea:	f1ba 0f00 	cmp.w	sl, #0
 801bfee:	f040 8572 	bne.w	801cad6 <_svfprintf_r+0x132e>
 801bff2:	9e07      	ldr	r6, [sp, #28]
 801bff4:	ac29      	add	r4, sp, #164	@ 0xa4
 801bff6:	e0c6      	b.n	801c186 <_svfprintf_r+0x9de>
 801bff8:	f802 0c01 	strb.w	r0, [r2, #-1]
 801bffc:	e6ac      	b.n	801bd58 <_svfprintf_r+0x5b0>
 801bffe:	f803 0b01 	strb.w	r0, [r3], #1
 801c002:	e676      	b.n	801bcf2 <_svfprintf_r+0x54a>
 801c004:	9b08      	ldr	r3, [sp, #32]
 801c006:	2b46      	cmp	r3, #70	@ 0x46
 801c008:	d005      	beq.n	801c016 <_svfprintf_r+0x86e>
 801c00a:	2b45      	cmp	r3, #69	@ 0x45
 801c00c:	d11a      	bne.n	801c044 <_svfprintf_r+0x89c>
 801c00e:	f108 0601 	add.w	r6, r8, #1
 801c012:	2102      	movs	r1, #2
 801c014:	e001      	b.n	801c01a <_svfprintf_r+0x872>
 801c016:	4646      	mov	r6, r8
 801c018:	2103      	movs	r1, #3
 801c01a:	ab24      	add	r3, sp, #144	@ 0x90
 801c01c:	9301      	str	r3, [sp, #4]
 801c01e:	ab21      	add	r3, sp, #132	@ 0x84
 801c020:	9300      	str	r3, [sp, #0]
 801c022:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801c026:	ab20      	add	r3, sp, #128	@ 0x80
 801c028:	9803      	ldr	r0, [sp, #12]
 801c02a:	4632      	mov	r2, r6
 801c02c:	f000 ffe8 	bl	801d000 <_dtoa_r>
 801c030:	9b08      	ldr	r3, [sp, #32]
 801c032:	2b47      	cmp	r3, #71	@ 0x47
 801c034:	4681      	mov	r9, r0
 801c036:	d119      	bne.n	801c06c <_svfprintf_r+0x8c4>
 801c038:	07e8      	lsls	r0, r5, #31
 801c03a:	d405      	bmi.n	801c048 <_svfprintf_r+0x8a0>
 801c03c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c03e:	eba3 0309 	sub.w	r3, r3, r9
 801c042:	e69b      	b.n	801bd7c <_svfprintf_r+0x5d4>
 801c044:	4646      	mov	r6, r8
 801c046:	e7e4      	b.n	801c012 <_svfprintf_r+0x86a>
 801c048:	eb09 0706 	add.w	r7, r9, r6
 801c04c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801c050:	2200      	movs	r2, #0
 801c052:	2300      	movs	r3, #0
 801c054:	f7e4 fd38 	bl	8000ac8 <__aeabi_dcmpeq>
 801c058:	b100      	cbz	r0, 801c05c <_svfprintf_r+0x8b4>
 801c05a:	9724      	str	r7, [sp, #144]	@ 0x90
 801c05c:	2230      	movs	r2, #48	@ 0x30
 801c05e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c060:	429f      	cmp	r7, r3
 801c062:	d9eb      	bls.n	801c03c <_svfprintf_r+0x894>
 801c064:	1c59      	adds	r1, r3, #1
 801c066:	9124      	str	r1, [sp, #144]	@ 0x90
 801c068:	701a      	strb	r2, [r3, #0]
 801c06a:	e7f8      	b.n	801c05e <_svfprintf_r+0x8b6>
 801c06c:	9b08      	ldr	r3, [sp, #32]
 801c06e:	2b46      	cmp	r3, #70	@ 0x46
 801c070:	eb00 0706 	add.w	r7, r0, r6
 801c074:	d1ea      	bne.n	801c04c <_svfprintf_r+0x8a4>
 801c076:	7803      	ldrb	r3, [r0, #0]
 801c078:	2b30      	cmp	r3, #48	@ 0x30
 801c07a:	d109      	bne.n	801c090 <_svfprintf_r+0x8e8>
 801c07c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801c080:	2200      	movs	r2, #0
 801c082:	2300      	movs	r3, #0
 801c084:	f7e4 fd20 	bl	8000ac8 <__aeabi_dcmpeq>
 801c088:	b910      	cbnz	r0, 801c090 <_svfprintf_r+0x8e8>
 801c08a:	f1c6 0601 	rsb	r6, r6, #1
 801c08e:	9620      	str	r6, [sp, #128]	@ 0x80
 801c090:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c092:	441f      	add	r7, r3
 801c094:	e7da      	b.n	801c04c <_svfprintf_r+0x8a4>
 801c096:	9b08      	ldr	r3, [sp, #32]
 801c098:	2b46      	cmp	r3, #70	@ 0x46
 801c09a:	f47f ae7d 	bne.w	801bd98 <_svfprintf_r+0x5f0>
 801c09e:	f005 0301 	and.w	r3, r5, #1
 801c0a2:	2e00      	cmp	r6, #0
 801c0a4:	ea43 0308 	orr.w	r3, r3, r8
 801c0a8:	dd25      	ble.n	801c0f6 <_svfprintf_r+0x94e>
 801c0aa:	b37b      	cbz	r3, 801c10c <_svfprintf_r+0x964>
 801c0ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c0ae:	18f3      	adds	r3, r6, r3
 801c0b0:	4498      	add	r8, r3
 801c0b2:	2366      	movs	r3, #102	@ 0x66
 801c0b4:	9306      	str	r3, [sp, #24]
 801c0b6:	e033      	b.n	801c120 <_svfprintf_r+0x978>
 801c0b8:	f813 7b01 	ldrb.w	r7, [r3], #1
 801c0bc:	f806 7f01 	strb.w	r7, [r6, #1]!
 801c0c0:	e6a1      	b.n	801be06 <_svfprintf_r+0x65e>
 801c0c2:	b941      	cbnz	r1, 801c0d6 <_svfprintf_r+0x92e>
 801c0c4:	2230      	movs	r2, #48	@ 0x30
 801c0c6:	f88d 208a 	strb.w	r2, [sp, #138]	@ 0x8a
 801c0ca:	f10d 028b 	add.w	r2, sp, #139	@ 0x8b
 801c0ce:	3330      	adds	r3, #48	@ 0x30
 801c0d0:	f802 3b01 	strb.w	r3, [r2], #1
 801c0d4:	e6a3      	b.n	801be1e <_svfprintf_r+0x676>
 801c0d6:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801c0da:	e7f8      	b.n	801c0ce <_svfprintf_r+0x926>
 801c0dc:	9b04      	ldr	r3, [sp, #16]
 801c0de:	429e      	cmp	r6, r3
 801c0e0:	da0d      	bge.n	801c0fe <_svfprintf_r+0x956>
 801c0e2:	9b04      	ldr	r3, [sp, #16]
 801c0e4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c0e6:	2e00      	cmp	r6, #0
 801c0e8:	eb03 0802 	add.w	r8, r3, r2
 801c0ec:	dc0c      	bgt.n	801c108 <_svfprintf_r+0x960>
 801c0ee:	f1c6 0301 	rsb	r3, r6, #1
 801c0f2:	4498      	add	r8, r3
 801c0f4:	e008      	b.n	801c108 <_svfprintf_r+0x960>
 801c0f6:	b17b      	cbz	r3, 801c118 <_svfprintf_r+0x970>
 801c0f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c0fa:	3301      	adds	r3, #1
 801c0fc:	e7d8      	b.n	801c0b0 <_svfprintf_r+0x908>
 801c0fe:	07eb      	lsls	r3, r5, #31
 801c100:	d521      	bpl.n	801c146 <_svfprintf_r+0x99e>
 801c102:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c104:	eb06 0803 	add.w	r8, r6, r3
 801c108:	2367      	movs	r3, #103	@ 0x67
 801c10a:	e7d3      	b.n	801c0b4 <_svfprintf_r+0x90c>
 801c10c:	46b0      	mov	r8, r6
 801c10e:	e7d0      	b.n	801c0b2 <_svfprintf_r+0x90a>
 801c110:	08021768 	.word	0x08021768
 801c114:	08021758 	.word	0x08021758
 801c118:	2366      	movs	r3, #102	@ 0x66
 801c11a:	9306      	str	r3, [sp, #24]
 801c11c:	f04f 0801 	mov.w	r8, #1
 801c120:	f415 6380 	ands.w	r3, r5, #1024	@ 0x400
 801c124:	9308      	str	r3, [sp, #32]
 801c126:	d01f      	beq.n	801c168 <_svfprintf_r+0x9c0>
 801c128:	2700      	movs	r7, #0
 801c12a:	2e00      	cmp	r6, #0
 801c12c:	9708      	str	r7, [sp, #32]
 801c12e:	f77f ae8a 	ble.w	801be46 <_svfprintf_r+0x69e>
 801c132:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c134:	781b      	ldrb	r3, [r3, #0]
 801c136:	2bff      	cmp	r3, #255	@ 0xff
 801c138:	d107      	bne.n	801c14a <_svfprintf_r+0x9a2>
 801c13a:	9b08      	ldr	r3, [sp, #32]
 801c13c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c13e:	443b      	add	r3, r7
 801c140:	fb02 8803 	mla	r8, r2, r3, r8
 801c144:	e67f      	b.n	801be46 <_svfprintf_r+0x69e>
 801c146:	46b0      	mov	r8, r6
 801c148:	e7de      	b.n	801c108 <_svfprintf_r+0x960>
 801c14a:	42b3      	cmp	r3, r6
 801c14c:	daf5      	bge.n	801c13a <_svfprintf_r+0x992>
 801c14e:	1af6      	subs	r6, r6, r3
 801c150:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c152:	785b      	ldrb	r3, [r3, #1]
 801c154:	b133      	cbz	r3, 801c164 <_svfprintf_r+0x9bc>
 801c156:	9b08      	ldr	r3, [sp, #32]
 801c158:	3301      	adds	r3, #1
 801c15a:	9308      	str	r3, [sp, #32]
 801c15c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c15e:	3301      	adds	r3, #1
 801c160:	9309      	str	r3, [sp, #36]	@ 0x24
 801c162:	e7e6      	b.n	801c132 <_svfprintf_r+0x98a>
 801c164:	3701      	adds	r7, #1
 801c166:	e7e4      	b.n	801c132 <_svfprintf_r+0x98a>
 801c168:	9f08      	ldr	r7, [sp, #32]
 801c16a:	e66c      	b.n	801be46 <_svfprintf_r+0x69e>
 801c16c:	232d      	movs	r3, #45	@ 0x2d
 801c16e:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801c172:	e66c      	b.n	801be4e <_svfprintf_r+0x6a6>
 801c174:	06af      	lsls	r7, r5, #26
 801c176:	d50a      	bpl.n	801c18e <_svfprintf_r+0x9e6>
 801c178:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c17a:	6833      	ldr	r3, [r6, #0]
 801c17c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c17e:	17d2      	asrs	r2, r2, #31
 801c180:	e9c3 1200 	strd	r1, r2, [r3]
 801c184:	3604      	adds	r6, #4
 801c186:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c18a:	f7ff bb46 	b.w	801b81a <_svfprintf_r+0x72>
 801c18e:	06e8      	lsls	r0, r5, #27
 801c190:	d503      	bpl.n	801c19a <_svfprintf_r+0x9f2>
 801c192:	6833      	ldr	r3, [r6, #0]
 801c194:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c196:	601a      	str	r2, [r3, #0]
 801c198:	e7f4      	b.n	801c184 <_svfprintf_r+0x9dc>
 801c19a:	0669      	lsls	r1, r5, #25
 801c19c:	d503      	bpl.n	801c1a6 <_svfprintf_r+0x9fe>
 801c19e:	6833      	ldr	r3, [r6, #0]
 801c1a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c1a2:	801a      	strh	r2, [r3, #0]
 801c1a4:	e7ee      	b.n	801c184 <_svfprintf_r+0x9dc>
 801c1a6:	05aa      	lsls	r2, r5, #22
 801c1a8:	d5f3      	bpl.n	801c192 <_svfprintf_r+0x9ea>
 801c1aa:	6833      	ldr	r3, [r6, #0]
 801c1ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c1ae:	701a      	strb	r2, [r3, #0]
 801c1b0:	e7e8      	b.n	801c184 <_svfprintf_r+0x9dc>
 801c1b2:	f045 0510 	orr.w	r5, r5, #16
 801c1b6:	f015 0320 	ands.w	r3, r5, #32
 801c1ba:	d020      	beq.n	801c1fe <_svfprintf_r+0xa56>
 801c1bc:	3607      	adds	r6, #7
 801c1be:	f026 0307 	bic.w	r3, r6, #7
 801c1c2:	461a      	mov	r2, r3
 801c1c4:	685f      	ldr	r7, [r3, #4]
 801c1c6:	f852 6b08 	ldr.w	r6, [r2], #8
 801c1ca:	9207      	str	r2, [sp, #28]
 801c1cc:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801c1d0:	2300      	movs	r3, #0
 801c1d2:	2200      	movs	r2, #0
 801c1d4:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801c1d8:	f1b8 3fff 	cmp.w	r8, #4294967295
 801c1dc:	f000 848c 	beq.w	801caf8 <_svfprintf_r+0x1350>
 801c1e0:	f025 0280 	bic.w	r2, r5, #128	@ 0x80
 801c1e4:	9208      	str	r2, [sp, #32]
 801c1e6:	ea56 0207 	orrs.w	r2, r6, r7
 801c1ea:	f040 848a 	bne.w	801cb02 <_svfprintf_r+0x135a>
 801c1ee:	f1b8 0f00 	cmp.w	r8, #0
 801c1f2:	f000 80db 	beq.w	801c3ac <_svfprintf_r+0xc04>
 801c1f6:	2b01      	cmp	r3, #1
 801c1f8:	f040 8486 	bne.w	801cb08 <_svfprintf_r+0x1360>
 801c1fc:	e083      	b.n	801c306 <_svfprintf_r+0xb5e>
 801c1fe:	4632      	mov	r2, r6
 801c200:	f015 0710 	ands.w	r7, r5, #16
 801c204:	f852 6b04 	ldr.w	r6, [r2], #4
 801c208:	9207      	str	r2, [sp, #28]
 801c20a:	d001      	beq.n	801c210 <_svfprintf_r+0xa68>
 801c20c:	461f      	mov	r7, r3
 801c20e:	e7dd      	b.n	801c1cc <_svfprintf_r+0xa24>
 801c210:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c214:	d001      	beq.n	801c21a <_svfprintf_r+0xa72>
 801c216:	b2b6      	uxth	r6, r6
 801c218:	e7d8      	b.n	801c1cc <_svfprintf_r+0xa24>
 801c21a:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c21e:	d0d5      	beq.n	801c1cc <_svfprintf_r+0xa24>
 801c220:	b2f6      	uxtb	r6, r6
 801c222:	e7f3      	b.n	801c20c <_svfprintf_r+0xa64>
 801c224:	4633      	mov	r3, r6
 801c226:	2278      	movs	r2, #120	@ 0x78
 801c228:	f853 6b04 	ldr.w	r6, [r3], #4
 801c22c:	9307      	str	r3, [sp, #28]
 801c22e:	f647 0330 	movw	r3, #30768	@ 0x7830
 801c232:	f8ad 307c 	strh.w	r3, [sp, #124]	@ 0x7c
 801c236:	4b94      	ldr	r3, [pc, #592]	@ (801c488 <_svfprintf_r+0xce0>)
 801c238:	9319      	str	r3, [sp, #100]	@ 0x64
 801c23a:	2700      	movs	r7, #0
 801c23c:	f045 0502 	orr.w	r5, r5, #2
 801c240:	2302      	movs	r3, #2
 801c242:	9206      	str	r2, [sp, #24]
 801c244:	e7c5      	b.n	801c1d2 <_svfprintf_r+0xa2a>
 801c246:	4633      	mov	r3, r6
 801c248:	f1b8 3fff 	cmp.w	r8, #4294967295
 801c24c:	f853 9b04 	ldr.w	r9, [r3], #4
 801c250:	9307      	str	r3, [sp, #28]
 801c252:	f04f 0600 	mov.w	r6, #0
 801c256:	f88d 607b 	strb.w	r6, [sp, #123]	@ 0x7b
 801c25a:	d00f      	beq.n	801c27c <_svfprintf_r+0xad4>
 801c25c:	4642      	mov	r2, r8
 801c25e:	4631      	mov	r1, r6
 801c260:	4648      	mov	r0, r9
 801c262:	f7e3 ffbd 	bl	80001e0 <memchr>
 801c266:	4682      	mov	sl, r0
 801c268:	2800      	cmp	r0, #0
 801c26a:	f43f ac81 	beq.w	801bb70 <_svfprintf_r+0x3c8>
 801c26e:	eba0 0809 	sub.w	r8, r0, r9
 801c272:	46b2      	mov	sl, r6
 801c274:	9610      	str	r6, [sp, #64]	@ 0x40
 801c276:	4637      	mov	r7, r6
 801c278:	9608      	str	r6, [sp, #32]
 801c27a:	e5eb      	b.n	801be54 <_svfprintf_r+0x6ac>
 801c27c:	4648      	mov	r0, r9
 801c27e:	f7e3 ffa7 	bl	80001d0 <strlen>
 801c282:	46b2      	mov	sl, r6
 801c284:	4680      	mov	r8, r0
 801c286:	e473      	b.n	801bb70 <_svfprintf_r+0x3c8>
 801c288:	f045 0510 	orr.w	r5, r5, #16
 801c28c:	f015 0320 	ands.w	r3, r5, #32
 801c290:	d009      	beq.n	801c2a6 <_svfprintf_r+0xafe>
 801c292:	3607      	adds	r6, #7
 801c294:	f026 0307 	bic.w	r3, r6, #7
 801c298:	461a      	mov	r2, r3
 801c29a:	685f      	ldr	r7, [r3, #4]
 801c29c:	f852 6b08 	ldr.w	r6, [r2], #8
 801c2a0:	9207      	str	r2, [sp, #28]
 801c2a2:	2301      	movs	r3, #1
 801c2a4:	e795      	b.n	801c1d2 <_svfprintf_r+0xa2a>
 801c2a6:	4632      	mov	r2, r6
 801c2a8:	f015 0710 	ands.w	r7, r5, #16
 801c2ac:	f852 6b04 	ldr.w	r6, [r2], #4
 801c2b0:	9207      	str	r2, [sp, #28]
 801c2b2:	d001      	beq.n	801c2b8 <_svfprintf_r+0xb10>
 801c2b4:	461f      	mov	r7, r3
 801c2b6:	e7f4      	b.n	801c2a2 <_svfprintf_r+0xafa>
 801c2b8:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c2bc:	d001      	beq.n	801c2c2 <_svfprintf_r+0xb1a>
 801c2be:	b2b6      	uxth	r6, r6
 801c2c0:	e7ef      	b.n	801c2a2 <_svfprintf_r+0xafa>
 801c2c2:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c2c6:	d0ec      	beq.n	801c2a2 <_svfprintf_r+0xafa>
 801c2c8:	b2f6      	uxtb	r6, r6
 801c2ca:	e7f3      	b.n	801c2b4 <_svfprintf_r+0xb0c>
 801c2cc:	4b6f      	ldr	r3, [pc, #444]	@ (801c48c <_svfprintf_r+0xce4>)
 801c2ce:	f7ff bb39 	b.w	801b944 <_svfprintf_r+0x19c>
 801c2d2:	4632      	mov	r2, r6
 801c2d4:	f015 0710 	ands.w	r7, r5, #16
 801c2d8:	f852 6b04 	ldr.w	r6, [r2], #4
 801c2dc:	9207      	str	r2, [sp, #28]
 801c2de:	d002      	beq.n	801c2e6 <_svfprintf_r+0xb3e>
 801c2e0:	461f      	mov	r7, r3
 801c2e2:	f7ff bb3c 	b.w	801b95e <_svfprintf_r+0x1b6>
 801c2e6:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c2ea:	d002      	beq.n	801c2f2 <_svfprintf_r+0xb4a>
 801c2ec:	b2b6      	uxth	r6, r6
 801c2ee:	f7ff bb36 	b.w	801b95e <_svfprintf_r+0x1b6>
 801c2f2:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c2f6:	f43f ab32 	beq.w	801b95e <_svfprintf_r+0x1b6>
 801c2fa:	b2f6      	uxtb	r6, r6
 801c2fc:	e7f0      	b.n	801c2e0 <_svfprintf_r+0xb38>
 801c2fe:	2e0a      	cmp	r6, #10
 801c300:	f177 0300 	sbcs.w	r3, r7, #0
 801c304:	d207      	bcs.n	801c316 <_svfprintf_r+0xb6e>
 801c306:	3630      	adds	r6, #48	@ 0x30
 801c308:	b2f6      	uxtb	r6, r6
 801c30a:	f88d 6147 	strb.w	r6, [sp, #327]	@ 0x147
 801c30e:	f20d 1947 	addw	r9, sp, #327	@ 0x147
 801c312:	f000 bc15 	b.w	801cb40 <_svfprintf_r+0x1398>
 801c316:	2300      	movs	r3, #0
 801c318:	9304      	str	r3, [sp, #16]
 801c31a:	9b08      	ldr	r3, [sp, #32]
 801c31c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801c320:	ad52      	add	r5, sp, #328	@ 0x148
 801c322:	9310      	str	r3, [sp, #64]	@ 0x40
 801c324:	220a      	movs	r2, #10
 801c326:	2300      	movs	r3, #0
 801c328:	4630      	mov	r0, r6
 801c32a:	4639      	mov	r1, r7
 801c32c:	f7e4 fcac 	bl	8000c88 <__aeabi_uldivmod>
 801c330:	9b04      	ldr	r3, [sp, #16]
 801c332:	9011      	str	r0, [sp, #68]	@ 0x44
 801c334:	3301      	adds	r3, #1
 801c336:	9304      	str	r3, [sp, #16]
 801c338:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c33a:	3230      	adds	r2, #48	@ 0x30
 801c33c:	468a      	mov	sl, r1
 801c33e:	f105 39ff 	add.w	r9, r5, #4294967295
 801c342:	f805 2c01 	strb.w	r2, [r5, #-1]
 801c346:	b1d3      	cbz	r3, 801c37e <_svfprintf_r+0xbd6>
 801c348:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c34a:	9a04      	ldr	r2, [sp, #16]
 801c34c:	781b      	ldrb	r3, [r3, #0]
 801c34e:	429a      	cmp	r2, r3
 801c350:	d115      	bne.n	801c37e <_svfprintf_r+0xbd6>
 801c352:	2aff      	cmp	r2, #255	@ 0xff
 801c354:	d013      	beq.n	801c37e <_svfprintf_r+0xbd6>
 801c356:	2e0a      	cmp	r6, #10
 801c358:	f177 0300 	sbcs.w	r3, r7, #0
 801c35c:	d30f      	bcc.n	801c37e <_svfprintf_r+0xbd6>
 801c35e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c360:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c362:	eba9 0903 	sub.w	r9, r9, r3
 801c366:	461a      	mov	r2, r3
 801c368:	4648      	mov	r0, r9
 801c36a:	f000 fcfe 	bl	801cd6a <strncpy>
 801c36e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c370:	785b      	ldrb	r3, [r3, #1]
 801c372:	b11b      	cbz	r3, 801c37c <_svfprintf_r+0xbd4>
 801c374:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c376:	3301      	adds	r3, #1
 801c378:	9309      	str	r3, [sp, #36]	@ 0x24
 801c37a:	2300      	movs	r3, #0
 801c37c:	9304      	str	r3, [sp, #16]
 801c37e:	2e0a      	cmp	r6, #10
 801c380:	f177 0700 	sbcs.w	r7, r7, #0
 801c384:	f0c0 83dc 	bcc.w	801cb40 <_svfprintf_r+0x1398>
 801c388:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801c38a:	4657      	mov	r7, sl
 801c38c:	464d      	mov	r5, r9
 801c38e:	e7c9      	b.n	801c324 <_svfprintf_r+0xb7c>
 801c390:	f006 030f 	and.w	r3, r6, #15
 801c394:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801c396:	0936      	lsrs	r6, r6, #4
 801c398:	5cd3      	ldrb	r3, [r2, r3]
 801c39a:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801c39e:	ea46 7607 	orr.w	r6, r6, r7, lsl #28
 801c3a2:	093f      	lsrs	r7, r7, #4
 801c3a4:	ea56 0307 	orrs.w	r3, r6, r7
 801c3a8:	d1f2      	bne.n	801c390 <_svfprintf_r+0xbe8>
 801c3aa:	e3c9      	b.n	801cb40 <_svfprintf_r+0x1398>
 801c3ac:	b91b      	cbnz	r3, 801c3b6 <_svfprintf_r+0xc0e>
 801c3ae:	07e9      	lsls	r1, r5, #31
 801c3b0:	d501      	bpl.n	801c3b6 <_svfprintf_r+0xc0e>
 801c3b2:	2630      	movs	r6, #48	@ 0x30
 801c3b4:	e7a9      	b.n	801c30a <_svfprintf_r+0xb62>
 801c3b6:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801c3ba:	e3c1      	b.n	801cb40 <_svfprintf_r+0x1398>
 801c3bc:	9b06      	ldr	r3, [sp, #24]
 801c3be:	2b00      	cmp	r3, #0
 801c3c0:	f000 838f 	beq.w	801cae2 <_svfprintf_r+0x133a>
 801c3c4:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801c3c8:	2300      	movs	r3, #0
 801c3ca:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801c3ce:	9607      	str	r6, [sp, #28]
 801c3d0:	f7ff bb63 	b.w	801ba9a <_svfprintf_r+0x2f2>
 801c3d4:	2010      	movs	r0, #16
 801c3d6:	4403      	add	r3, r0
 801c3d8:	2a07      	cmp	r2, #7
 801c3da:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c3de:	6060      	str	r0, [r4, #4]
 801c3e0:	dd08      	ble.n	801c3f4 <_svfprintf_r+0xc4c>
 801c3e2:	9803      	ldr	r0, [sp, #12]
 801c3e4:	aa26      	add	r2, sp, #152	@ 0x98
 801c3e6:	4659      	mov	r1, fp
 801c3e8:	f002 f8b1 	bl	801e54e <__ssprint_r>
 801c3ec:	2800      	cmp	r0, #0
 801c3ee:	f040 8356 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c3f2:	a929      	add	r1, sp, #164	@ 0xa4
 801c3f4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c3f6:	3b10      	subs	r3, #16
 801c3f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c3fa:	460c      	mov	r4, r1
 801c3fc:	e546      	b.n	801be8c <_svfprintf_r+0x6e4>
 801c3fe:	460c      	mov	r4, r1
 801c400:	e561      	b.n	801bec6 <_svfprintf_r+0x71e>
 801c402:	9803      	ldr	r0, [sp, #12]
 801c404:	aa26      	add	r2, sp, #152	@ 0x98
 801c406:	4659      	mov	r1, fp
 801c408:	f002 f8a1 	bl	801e54e <__ssprint_r>
 801c40c:	2800      	cmp	r0, #0
 801c40e:	f040 8346 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c412:	ac29      	add	r4, sp, #164	@ 0xa4
 801c414:	e569      	b.n	801beea <_svfprintf_r+0x742>
 801c416:	9803      	ldr	r0, [sp, #12]
 801c418:	aa26      	add	r2, sp, #152	@ 0x98
 801c41a:	4659      	mov	r1, fp
 801c41c:	f002 f897 	bl	801e54e <__ssprint_r>
 801c420:	2800      	cmp	r0, #0
 801c422:	f040 833c 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c426:	ac29      	add	r4, sp, #164	@ 0xa4
 801c428:	e56f      	b.n	801bf0a <_svfprintf_r+0x762>
 801c42a:	2010      	movs	r0, #16
 801c42c:	4403      	add	r3, r0
 801c42e:	2a07      	cmp	r2, #7
 801c430:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c434:	6060      	str	r0, [r4, #4]
 801c436:	dd08      	ble.n	801c44a <_svfprintf_r+0xca2>
 801c438:	9803      	ldr	r0, [sp, #12]
 801c43a:	aa26      	add	r2, sp, #152	@ 0x98
 801c43c:	4659      	mov	r1, fp
 801c43e:	f002 f886 	bl	801e54e <__ssprint_r>
 801c442:	2800      	cmp	r0, #0
 801c444:	f040 832b 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c448:	a929      	add	r1, sp, #164	@ 0xa4
 801c44a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c44c:	3b10      	subs	r3, #16
 801c44e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c450:	460c      	mov	r4, r1
 801c452:	e563      	b.n	801bf1c <_svfprintf_r+0x774>
 801c454:	460c      	mov	r4, r1
 801c456:	e57e      	b.n	801bf56 <_svfprintf_r+0x7ae>
 801c458:	2010      	movs	r0, #16
 801c45a:	4403      	add	r3, r0
 801c45c:	2a07      	cmp	r2, #7
 801c45e:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c462:	6060      	str	r0, [r4, #4]
 801c464:	dd08      	ble.n	801c478 <_svfprintf_r+0xcd0>
 801c466:	9803      	ldr	r0, [sp, #12]
 801c468:	aa26      	add	r2, sp, #152	@ 0x98
 801c46a:	4659      	mov	r1, fp
 801c46c:	f002 f86f 	bl	801e54e <__ssprint_r>
 801c470:	2800      	cmp	r0, #0
 801c472:	f040 8314 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c476:	a929      	add	r1, sp, #164	@ 0xa4
 801c478:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c47a:	3b10      	subs	r3, #16
 801c47c:	9310      	str	r3, [sp, #64]	@ 0x40
 801c47e:	460c      	mov	r4, r1
 801c480:	e56f      	b.n	801bf62 <_svfprintf_r+0x7ba>
 801c482:	460c      	mov	r4, r1
 801c484:	e58a      	b.n	801bf9c <_svfprintf_r+0x7f4>
 801c486:	bf00      	nop
 801c488:	08021734 	.word	0x08021734
 801c48c:	08021745 	.word	0x08021745
 801c490:	9b06      	ldr	r3, [sp, #24]
 801c492:	2b65      	cmp	r3, #101	@ 0x65
 801c494:	f340 8246 	ble.w	801c924 <_svfprintf_r+0x117c>
 801c498:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801c49c:	2200      	movs	r2, #0
 801c49e:	2300      	movs	r3, #0
 801c4a0:	f7e4 fb12 	bl	8000ac8 <__aeabi_dcmpeq>
 801c4a4:	2800      	cmp	r0, #0
 801c4a6:	d06a      	beq.n	801c57e <_svfprintf_r+0xdd6>
 801c4a8:	4b73      	ldr	r3, [pc, #460]	@ (801c678 <_svfprintf_r+0xed0>)
 801c4aa:	6023      	str	r3, [r4, #0]
 801c4ac:	2301      	movs	r3, #1
 801c4ae:	6063      	str	r3, [r4, #4]
 801c4b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c4b2:	3301      	adds	r3, #1
 801c4b4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c4b6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c4b8:	3301      	adds	r3, #1
 801c4ba:	2b07      	cmp	r3, #7
 801c4bc:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c4be:	dc37      	bgt.n	801c530 <_svfprintf_r+0xd88>
 801c4c0:	3408      	adds	r4, #8
 801c4c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c4c4:	9a04      	ldr	r2, [sp, #16]
 801c4c6:	4293      	cmp	r3, r2
 801c4c8:	db02      	blt.n	801c4d0 <_svfprintf_r+0xd28>
 801c4ca:	07ef      	lsls	r7, r5, #31
 801c4cc:	f57f ad76 	bpl.w	801bfbc <_svfprintf_r+0x814>
 801c4d0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c4d2:	6023      	str	r3, [r4, #0]
 801c4d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c4d6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c4d8:	6063      	str	r3, [r4, #4]
 801c4da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c4dc:	4413      	add	r3, r2
 801c4de:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c4e0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c4e2:	3301      	adds	r3, #1
 801c4e4:	2b07      	cmp	r3, #7
 801c4e6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c4e8:	dc2c      	bgt.n	801c544 <_svfprintf_r+0xd9c>
 801c4ea:	3408      	adds	r4, #8
 801c4ec:	9b04      	ldr	r3, [sp, #16]
 801c4ee:	1e5e      	subs	r6, r3, #1
 801c4f0:	2e00      	cmp	r6, #0
 801c4f2:	f77f ad63 	ble.w	801bfbc <_svfprintf_r+0x814>
 801c4f6:	4f61      	ldr	r7, [pc, #388]	@ (801c67c <_svfprintf_r+0xed4>)
 801c4f8:	f04f 0810 	mov.w	r8, #16
 801c4fc:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c500:	2e10      	cmp	r6, #16
 801c502:	f103 0301 	add.w	r3, r3, #1
 801c506:	f104 0108 	add.w	r1, r4, #8
 801c50a:	6027      	str	r7, [r4, #0]
 801c50c:	dc24      	bgt.n	801c558 <_svfprintf_r+0xdb0>
 801c50e:	6066      	str	r6, [r4, #4]
 801c510:	2b07      	cmp	r3, #7
 801c512:	4416      	add	r6, r2
 801c514:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801c518:	f340 82a0 	ble.w	801ca5c <_svfprintf_r+0x12b4>
 801c51c:	9803      	ldr	r0, [sp, #12]
 801c51e:	aa26      	add	r2, sp, #152	@ 0x98
 801c520:	4659      	mov	r1, fp
 801c522:	f002 f814 	bl	801e54e <__ssprint_r>
 801c526:	2800      	cmp	r0, #0
 801c528:	f040 82b9 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c52c:	ac29      	add	r4, sp, #164	@ 0xa4
 801c52e:	e545      	b.n	801bfbc <_svfprintf_r+0x814>
 801c530:	9803      	ldr	r0, [sp, #12]
 801c532:	aa26      	add	r2, sp, #152	@ 0x98
 801c534:	4659      	mov	r1, fp
 801c536:	f002 f80a 	bl	801e54e <__ssprint_r>
 801c53a:	2800      	cmp	r0, #0
 801c53c:	f040 82af 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c540:	ac29      	add	r4, sp, #164	@ 0xa4
 801c542:	e7be      	b.n	801c4c2 <_svfprintf_r+0xd1a>
 801c544:	9803      	ldr	r0, [sp, #12]
 801c546:	aa26      	add	r2, sp, #152	@ 0x98
 801c548:	4659      	mov	r1, fp
 801c54a:	f002 f800 	bl	801e54e <__ssprint_r>
 801c54e:	2800      	cmp	r0, #0
 801c550:	f040 82a5 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c554:	ac29      	add	r4, sp, #164	@ 0xa4
 801c556:	e7c9      	b.n	801c4ec <_svfprintf_r+0xd44>
 801c558:	3210      	adds	r2, #16
 801c55a:	2b07      	cmp	r3, #7
 801c55c:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c560:	f8c4 8004 	str.w	r8, [r4, #4]
 801c564:	dd08      	ble.n	801c578 <_svfprintf_r+0xdd0>
 801c566:	9803      	ldr	r0, [sp, #12]
 801c568:	aa26      	add	r2, sp, #152	@ 0x98
 801c56a:	4659      	mov	r1, fp
 801c56c:	f001 ffef 	bl	801e54e <__ssprint_r>
 801c570:	2800      	cmp	r0, #0
 801c572:	f040 8294 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c576:	a929      	add	r1, sp, #164	@ 0xa4
 801c578:	3e10      	subs	r6, #16
 801c57a:	460c      	mov	r4, r1
 801c57c:	e7be      	b.n	801c4fc <_svfprintf_r+0xd54>
 801c57e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c580:	2b00      	cmp	r3, #0
 801c582:	dc7d      	bgt.n	801c680 <_svfprintf_r+0xed8>
 801c584:	4b3c      	ldr	r3, [pc, #240]	@ (801c678 <_svfprintf_r+0xed0>)
 801c586:	6023      	str	r3, [r4, #0]
 801c588:	2301      	movs	r3, #1
 801c58a:	6063      	str	r3, [r4, #4]
 801c58c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c58e:	3301      	adds	r3, #1
 801c590:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c592:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c594:	3301      	adds	r3, #1
 801c596:	2b07      	cmp	r3, #7
 801c598:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c59a:	dc46      	bgt.n	801c62a <_svfprintf_r+0xe82>
 801c59c:	3408      	adds	r4, #8
 801c59e:	9904      	ldr	r1, [sp, #16]
 801c5a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c5a2:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801c5a4:	430b      	orrs	r3, r1
 801c5a6:	f005 0101 	and.w	r1, r5, #1
 801c5aa:	430b      	orrs	r3, r1
 801c5ac:	f43f ad06 	beq.w	801bfbc <_svfprintf_r+0x814>
 801c5b0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c5b2:	6023      	str	r3, [r4, #0]
 801c5b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c5b6:	6063      	str	r3, [r4, #4]
 801c5b8:	441a      	add	r2, r3
 801c5ba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c5bc:	9228      	str	r2, [sp, #160]	@ 0xa0
 801c5be:	3301      	adds	r3, #1
 801c5c0:	2b07      	cmp	r3, #7
 801c5c2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c5c4:	dc3b      	bgt.n	801c63e <_svfprintf_r+0xe96>
 801c5c6:	f104 0308 	add.w	r3, r4, #8
 801c5ca:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801c5cc:	2e00      	cmp	r6, #0
 801c5ce:	da1b      	bge.n	801c608 <_svfprintf_r+0xe60>
 801c5d0:	4f2a      	ldr	r7, [pc, #168]	@ (801c67c <_svfprintf_r+0xed4>)
 801c5d2:	4276      	negs	r6, r6
 801c5d4:	461a      	mov	r2, r3
 801c5d6:	2410      	movs	r4, #16
 801c5d8:	e9dd 1027 	ldrd	r1, r0, [sp, #156]	@ 0x9c
 801c5dc:	2e10      	cmp	r6, #16
 801c5de:	f101 0101 	add.w	r1, r1, #1
 801c5e2:	f103 0308 	add.w	r3, r3, #8
 801c5e6:	6017      	str	r7, [r2, #0]
 801c5e8:	dc33      	bgt.n	801c652 <_svfprintf_r+0xeaa>
 801c5ea:	6056      	str	r6, [r2, #4]
 801c5ec:	2907      	cmp	r1, #7
 801c5ee:	4406      	add	r6, r0
 801c5f0:	e9cd 1627 	strd	r1, r6, [sp, #156]	@ 0x9c
 801c5f4:	dd08      	ble.n	801c608 <_svfprintf_r+0xe60>
 801c5f6:	9803      	ldr	r0, [sp, #12]
 801c5f8:	aa26      	add	r2, sp, #152	@ 0x98
 801c5fa:	4659      	mov	r1, fp
 801c5fc:	f001 ffa7 	bl	801e54e <__ssprint_r>
 801c600:	2800      	cmp	r0, #0
 801c602:	f040 824c 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c606:	ab29      	add	r3, sp, #164	@ 0xa4
 801c608:	9a04      	ldr	r2, [sp, #16]
 801c60a:	9904      	ldr	r1, [sp, #16]
 801c60c:	605a      	str	r2, [r3, #4]
 801c60e:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801c610:	f8c3 9000 	str.w	r9, [r3]
 801c614:	440a      	add	r2, r1
 801c616:	9228      	str	r2, [sp, #160]	@ 0xa0
 801c618:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c61a:	3201      	adds	r2, #1
 801c61c:	2a07      	cmp	r2, #7
 801c61e:	9227      	str	r2, [sp, #156]	@ 0x9c
 801c620:	f73f af7c 	bgt.w	801c51c <_svfprintf_r+0xd74>
 801c624:	f103 0408 	add.w	r4, r3, #8
 801c628:	e4c8      	b.n	801bfbc <_svfprintf_r+0x814>
 801c62a:	9803      	ldr	r0, [sp, #12]
 801c62c:	aa26      	add	r2, sp, #152	@ 0x98
 801c62e:	4659      	mov	r1, fp
 801c630:	f001 ff8d 	bl	801e54e <__ssprint_r>
 801c634:	2800      	cmp	r0, #0
 801c636:	f040 8232 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c63a:	ac29      	add	r4, sp, #164	@ 0xa4
 801c63c:	e7af      	b.n	801c59e <_svfprintf_r+0xdf6>
 801c63e:	9803      	ldr	r0, [sp, #12]
 801c640:	aa26      	add	r2, sp, #152	@ 0x98
 801c642:	4659      	mov	r1, fp
 801c644:	f001 ff83 	bl	801e54e <__ssprint_r>
 801c648:	2800      	cmp	r0, #0
 801c64a:	f040 8228 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c64e:	ab29      	add	r3, sp, #164	@ 0xa4
 801c650:	e7bb      	b.n	801c5ca <_svfprintf_r+0xe22>
 801c652:	3010      	adds	r0, #16
 801c654:	2907      	cmp	r1, #7
 801c656:	e9cd 1027 	strd	r1, r0, [sp, #156]	@ 0x9c
 801c65a:	6054      	str	r4, [r2, #4]
 801c65c:	dd08      	ble.n	801c670 <_svfprintf_r+0xec8>
 801c65e:	9803      	ldr	r0, [sp, #12]
 801c660:	aa26      	add	r2, sp, #152	@ 0x98
 801c662:	4659      	mov	r1, fp
 801c664:	f001 ff73 	bl	801e54e <__ssprint_r>
 801c668:	2800      	cmp	r0, #0
 801c66a:	f040 8218 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c66e:	ab29      	add	r3, sp, #164	@ 0xa4
 801c670:	3e10      	subs	r6, #16
 801c672:	461a      	mov	r2, r3
 801c674:	e7b0      	b.n	801c5d8 <_svfprintf_r+0xe30>
 801c676:	bf00      	nop
 801c678:	08021756 	.word	0x08021756
 801c67c:	08021758 	.word	0x08021758
 801c680:	9b04      	ldr	r3, [sp, #16]
 801c682:	444b      	add	r3, r9
 801c684:	9306      	str	r3, [sp, #24]
 801c686:	9b04      	ldr	r3, [sp, #16]
 801c688:	42b3      	cmp	r3, r6
 801c68a:	bfa8      	it	ge
 801c68c:	4633      	movge	r3, r6
 801c68e:	2b00      	cmp	r3, #0
 801c690:	4698      	mov	r8, r3
 801c692:	dd0b      	ble.n	801c6ac <_svfprintf_r+0xf04>
 801c694:	e9c4 9300 	strd	r9, r3, [r4]
 801c698:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c69a:	4443      	add	r3, r8
 801c69c:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c69e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c6a0:	3301      	adds	r3, #1
 801c6a2:	2b07      	cmp	r3, #7
 801c6a4:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c6a6:	f300 8089 	bgt.w	801c7bc <_svfprintf_r+0x1014>
 801c6aa:	3408      	adds	r4, #8
 801c6ac:	4643      	mov	r3, r8
 801c6ae:	2b00      	cmp	r3, #0
 801c6b0:	bfac      	ite	ge
 801c6b2:	eba6 0808 	subge.w	r8, r6, r8
 801c6b6:	46b0      	movlt	r8, r6
 801c6b8:	f1b8 0f00 	cmp.w	r8, #0
 801c6bc:	dd1b      	ble.n	801c6f6 <_svfprintf_r+0xf4e>
 801c6be:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801c6c2:	4897      	ldr	r0, [pc, #604]	@ (801c920 <_svfprintf_r+0x1178>)
 801c6c4:	6020      	str	r0, [r4, #0]
 801c6c6:	f1b8 0f10 	cmp.w	r8, #16
 801c6ca:	f102 0201 	add.w	r2, r2, #1
 801c6ce:	f104 0108 	add.w	r1, r4, #8
 801c6d2:	dc7d      	bgt.n	801c7d0 <_svfprintf_r+0x1028>
 801c6d4:	4443      	add	r3, r8
 801c6d6:	2a07      	cmp	r2, #7
 801c6d8:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c6dc:	f8c4 8004 	str.w	r8, [r4, #4]
 801c6e0:	f340 808a 	ble.w	801c7f8 <_svfprintf_r+0x1050>
 801c6e4:	9803      	ldr	r0, [sp, #12]
 801c6e6:	aa26      	add	r2, sp, #152	@ 0x98
 801c6e8:	4659      	mov	r1, fp
 801c6ea:	f001 ff30 	bl	801e54e <__ssprint_r>
 801c6ee:	2800      	cmp	r0, #0
 801c6f0:	f040 81d5 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c6f4:	ac29      	add	r4, sp, #164	@ 0xa4
 801c6f6:	eb09 0806 	add.w	r8, r9, r6
 801c6fa:	056e      	lsls	r6, r5, #21
 801c6fc:	d508      	bpl.n	801c710 <_svfprintf_r+0xf68>
 801c6fe:	9b08      	ldr	r3, [sp, #32]
 801c700:	2b00      	cmp	r3, #0
 801c702:	d17b      	bne.n	801c7fc <_svfprintf_r+0x1054>
 801c704:	2f00      	cmp	r7, #0
 801c706:	d17b      	bne.n	801c800 <_svfprintf_r+0x1058>
 801c708:	9b06      	ldr	r3, [sp, #24]
 801c70a:	4598      	cmp	r8, r3
 801c70c:	bf28      	it	cs
 801c70e:	4698      	movcs	r8, r3
 801c710:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c712:	9a04      	ldr	r2, [sp, #16]
 801c714:	4293      	cmp	r3, r2
 801c716:	db01      	blt.n	801c71c <_svfprintf_r+0xf74>
 801c718:	07e8      	lsls	r0, r5, #31
 801c71a:	d50e      	bpl.n	801c73a <_svfprintf_r+0xf92>
 801c71c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c71e:	6023      	str	r3, [r4, #0]
 801c720:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c722:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c724:	6063      	str	r3, [r4, #4]
 801c726:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c728:	4413      	add	r3, r2
 801c72a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c72c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c72e:	3301      	adds	r3, #1
 801c730:	2b07      	cmp	r3, #7
 801c732:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c734:	f300 80df 	bgt.w	801c8f6 <_svfprintf_r+0x114e>
 801c738:	3408      	adds	r4, #8
 801c73a:	9b04      	ldr	r3, [sp, #16]
 801c73c:	9f20      	ldr	r7, [sp, #128]	@ 0x80
 801c73e:	1bdf      	subs	r7, r3, r7
 801c740:	9b06      	ldr	r3, [sp, #24]
 801c742:	eba3 0308 	sub.w	r3, r3, r8
 801c746:	429f      	cmp	r7, r3
 801c748:	bfa8      	it	ge
 801c74a:	461f      	movge	r7, r3
 801c74c:	2f00      	cmp	r7, #0
 801c74e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c750:	dd0a      	ble.n	801c768 <_svfprintf_r+0xfc0>
 801c752:	443b      	add	r3, r7
 801c754:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c756:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c758:	3301      	adds	r3, #1
 801c75a:	2b07      	cmp	r3, #7
 801c75c:	e9c4 8700 	strd	r8, r7, [r4]
 801c760:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c762:	f300 80d2 	bgt.w	801c90a <_svfprintf_r+0x1162>
 801c766:	3408      	adds	r4, #8
 801c768:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801c76a:	9b04      	ldr	r3, [sp, #16]
 801c76c:	2f00      	cmp	r7, #0
 801c76e:	eba3 0606 	sub.w	r6, r3, r6
 801c772:	bfa8      	it	ge
 801c774:	1bf6      	subge	r6, r6, r7
 801c776:	2e00      	cmp	r6, #0
 801c778:	f77f ac20 	ble.w	801bfbc <_svfprintf_r+0x814>
 801c77c:	4f68      	ldr	r7, [pc, #416]	@ (801c920 <_svfprintf_r+0x1178>)
 801c77e:	f04f 0810 	mov.w	r8, #16
 801c782:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c786:	2e10      	cmp	r6, #16
 801c788:	f103 0301 	add.w	r3, r3, #1
 801c78c:	f104 0108 	add.w	r1, r4, #8
 801c790:	6027      	str	r7, [r4, #0]
 801c792:	f77f aebc 	ble.w	801c50e <_svfprintf_r+0xd66>
 801c796:	3210      	adds	r2, #16
 801c798:	2b07      	cmp	r3, #7
 801c79a:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c79e:	f8c4 8004 	str.w	r8, [r4, #4]
 801c7a2:	dd08      	ble.n	801c7b6 <_svfprintf_r+0x100e>
 801c7a4:	9803      	ldr	r0, [sp, #12]
 801c7a6:	aa26      	add	r2, sp, #152	@ 0x98
 801c7a8:	4659      	mov	r1, fp
 801c7aa:	f001 fed0 	bl	801e54e <__ssprint_r>
 801c7ae:	2800      	cmp	r0, #0
 801c7b0:	f040 8175 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c7b4:	a929      	add	r1, sp, #164	@ 0xa4
 801c7b6:	3e10      	subs	r6, #16
 801c7b8:	460c      	mov	r4, r1
 801c7ba:	e7e2      	b.n	801c782 <_svfprintf_r+0xfda>
 801c7bc:	9803      	ldr	r0, [sp, #12]
 801c7be:	aa26      	add	r2, sp, #152	@ 0x98
 801c7c0:	4659      	mov	r1, fp
 801c7c2:	f001 fec4 	bl	801e54e <__ssprint_r>
 801c7c6:	2800      	cmp	r0, #0
 801c7c8:	f040 8169 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c7cc:	ac29      	add	r4, sp, #164	@ 0xa4
 801c7ce:	e76d      	b.n	801c6ac <_svfprintf_r+0xf04>
 801c7d0:	2010      	movs	r0, #16
 801c7d2:	4403      	add	r3, r0
 801c7d4:	2a07      	cmp	r2, #7
 801c7d6:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c7da:	6060      	str	r0, [r4, #4]
 801c7dc:	dd08      	ble.n	801c7f0 <_svfprintf_r+0x1048>
 801c7de:	9803      	ldr	r0, [sp, #12]
 801c7e0:	aa26      	add	r2, sp, #152	@ 0x98
 801c7e2:	4659      	mov	r1, fp
 801c7e4:	f001 feb3 	bl	801e54e <__ssprint_r>
 801c7e8:	2800      	cmp	r0, #0
 801c7ea:	f040 8158 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c7ee:	a929      	add	r1, sp, #164	@ 0xa4
 801c7f0:	f1a8 0810 	sub.w	r8, r8, #16
 801c7f4:	460c      	mov	r4, r1
 801c7f6:	e762      	b.n	801c6be <_svfprintf_r+0xf16>
 801c7f8:	460c      	mov	r4, r1
 801c7fa:	e77c      	b.n	801c6f6 <_svfprintf_r+0xf4e>
 801c7fc:	2f00      	cmp	r7, #0
 801c7fe:	d04a      	beq.n	801c896 <_svfprintf_r+0x10ee>
 801c800:	3f01      	subs	r7, #1
 801c802:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c804:	6023      	str	r3, [r4, #0]
 801c806:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c808:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c80a:	6063      	str	r3, [r4, #4]
 801c80c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c80e:	4413      	add	r3, r2
 801c810:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c812:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c814:	3301      	adds	r3, #1
 801c816:	2b07      	cmp	r3, #7
 801c818:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c81a:	dc43      	bgt.n	801c8a4 <_svfprintf_r+0x10fc>
 801c81c:	3408      	adds	r4, #8
 801c81e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c820:	781a      	ldrb	r2, [r3, #0]
 801c822:	9b06      	ldr	r3, [sp, #24]
 801c824:	eba3 0308 	sub.w	r3, r3, r8
 801c828:	429a      	cmp	r2, r3
 801c82a:	bfa8      	it	ge
 801c82c:	461a      	movge	r2, r3
 801c82e:	2a00      	cmp	r2, #0
 801c830:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c832:	4691      	mov	r9, r2
 801c834:	dd09      	ble.n	801c84a <_svfprintf_r+0x10a2>
 801c836:	4413      	add	r3, r2
 801c838:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c83a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c83c:	3301      	adds	r3, #1
 801c83e:	2b07      	cmp	r3, #7
 801c840:	e9c4 8200 	strd	r8, r2, [r4]
 801c844:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c846:	dc37      	bgt.n	801c8b8 <_svfprintf_r+0x1110>
 801c848:	3408      	adds	r4, #8
 801c84a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c84c:	781e      	ldrb	r6, [r3, #0]
 801c84e:	f1b9 0f00 	cmp.w	r9, #0
 801c852:	bfa8      	it	ge
 801c854:	eba6 0609 	subge.w	r6, r6, r9
 801c858:	2e00      	cmp	r6, #0
 801c85a:	dd18      	ble.n	801c88e <_svfprintf_r+0x10e6>
 801c85c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c860:	482f      	ldr	r0, [pc, #188]	@ (801c920 <_svfprintf_r+0x1178>)
 801c862:	6020      	str	r0, [r4, #0]
 801c864:	2e10      	cmp	r6, #16
 801c866:	f103 0301 	add.w	r3, r3, #1
 801c86a:	f104 0108 	add.w	r1, r4, #8
 801c86e:	dc2d      	bgt.n	801c8cc <_svfprintf_r+0x1124>
 801c870:	6066      	str	r6, [r4, #4]
 801c872:	2b07      	cmp	r3, #7
 801c874:	4416      	add	r6, r2
 801c876:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801c87a:	dd3a      	ble.n	801c8f2 <_svfprintf_r+0x114a>
 801c87c:	9803      	ldr	r0, [sp, #12]
 801c87e:	aa26      	add	r2, sp, #152	@ 0x98
 801c880:	4659      	mov	r1, fp
 801c882:	f001 fe64 	bl	801e54e <__ssprint_r>
 801c886:	2800      	cmp	r0, #0
 801c888:	f040 8109 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c88c:	ac29      	add	r4, sp, #164	@ 0xa4
 801c88e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c890:	781b      	ldrb	r3, [r3, #0]
 801c892:	4498      	add	r8, r3
 801c894:	e733      	b.n	801c6fe <_svfprintf_r+0xf56>
 801c896:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c898:	3b01      	subs	r3, #1
 801c89a:	9309      	str	r3, [sp, #36]	@ 0x24
 801c89c:	9b08      	ldr	r3, [sp, #32]
 801c89e:	3b01      	subs	r3, #1
 801c8a0:	9308      	str	r3, [sp, #32]
 801c8a2:	e7ae      	b.n	801c802 <_svfprintf_r+0x105a>
 801c8a4:	9803      	ldr	r0, [sp, #12]
 801c8a6:	aa26      	add	r2, sp, #152	@ 0x98
 801c8a8:	4659      	mov	r1, fp
 801c8aa:	f001 fe50 	bl	801e54e <__ssprint_r>
 801c8ae:	2800      	cmp	r0, #0
 801c8b0:	f040 80f5 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c8b4:	ac29      	add	r4, sp, #164	@ 0xa4
 801c8b6:	e7b2      	b.n	801c81e <_svfprintf_r+0x1076>
 801c8b8:	9803      	ldr	r0, [sp, #12]
 801c8ba:	aa26      	add	r2, sp, #152	@ 0x98
 801c8bc:	4659      	mov	r1, fp
 801c8be:	f001 fe46 	bl	801e54e <__ssprint_r>
 801c8c2:	2800      	cmp	r0, #0
 801c8c4:	f040 80eb 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c8c8:	ac29      	add	r4, sp, #164	@ 0xa4
 801c8ca:	e7be      	b.n	801c84a <_svfprintf_r+0x10a2>
 801c8cc:	2010      	movs	r0, #16
 801c8ce:	4402      	add	r2, r0
 801c8d0:	2b07      	cmp	r3, #7
 801c8d2:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c8d6:	6060      	str	r0, [r4, #4]
 801c8d8:	dd08      	ble.n	801c8ec <_svfprintf_r+0x1144>
 801c8da:	9803      	ldr	r0, [sp, #12]
 801c8dc:	aa26      	add	r2, sp, #152	@ 0x98
 801c8de:	4659      	mov	r1, fp
 801c8e0:	f001 fe35 	bl	801e54e <__ssprint_r>
 801c8e4:	2800      	cmp	r0, #0
 801c8e6:	f040 80da 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c8ea:	a929      	add	r1, sp, #164	@ 0xa4
 801c8ec:	3e10      	subs	r6, #16
 801c8ee:	460c      	mov	r4, r1
 801c8f0:	e7b4      	b.n	801c85c <_svfprintf_r+0x10b4>
 801c8f2:	460c      	mov	r4, r1
 801c8f4:	e7cb      	b.n	801c88e <_svfprintf_r+0x10e6>
 801c8f6:	9803      	ldr	r0, [sp, #12]
 801c8f8:	aa26      	add	r2, sp, #152	@ 0x98
 801c8fa:	4659      	mov	r1, fp
 801c8fc:	f001 fe27 	bl	801e54e <__ssprint_r>
 801c900:	2800      	cmp	r0, #0
 801c902:	f040 80cc 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c906:	ac29      	add	r4, sp, #164	@ 0xa4
 801c908:	e717      	b.n	801c73a <_svfprintf_r+0xf92>
 801c90a:	9803      	ldr	r0, [sp, #12]
 801c90c:	aa26      	add	r2, sp, #152	@ 0x98
 801c90e:	4659      	mov	r1, fp
 801c910:	f001 fe1d 	bl	801e54e <__ssprint_r>
 801c914:	2800      	cmp	r0, #0
 801c916:	f040 80c2 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c91a:	ac29      	add	r4, sp, #164	@ 0xa4
 801c91c:	e724      	b.n	801c768 <_svfprintf_r+0xfc0>
 801c91e:	bf00      	nop
 801c920:	08021758 	.word	0x08021758
 801c924:	9904      	ldr	r1, [sp, #16]
 801c926:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c928:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c92a:	2901      	cmp	r1, #1
 801c92c:	f103 0301 	add.w	r3, r3, #1
 801c930:	f102 0201 	add.w	r2, r2, #1
 801c934:	f104 0608 	add.w	r6, r4, #8
 801c938:	dc02      	bgt.n	801c940 <_svfprintf_r+0x1198>
 801c93a:	07e9      	lsls	r1, r5, #31
 801c93c:	f140 8083 	bpl.w	801ca46 <_svfprintf_r+0x129e>
 801c940:	2101      	movs	r1, #1
 801c942:	2a07      	cmp	r2, #7
 801c944:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c948:	f8c4 9000 	str.w	r9, [r4]
 801c94c:	6061      	str	r1, [r4, #4]
 801c94e:	dd08      	ble.n	801c962 <_svfprintf_r+0x11ba>
 801c950:	9803      	ldr	r0, [sp, #12]
 801c952:	aa26      	add	r2, sp, #152	@ 0x98
 801c954:	4659      	mov	r1, fp
 801c956:	f001 fdfa 	bl	801e54e <__ssprint_r>
 801c95a:	2800      	cmp	r0, #0
 801c95c:	f040 809f 	bne.w	801ca9e <_svfprintf_r+0x12f6>
 801c960:	ae29      	add	r6, sp, #164	@ 0xa4
 801c962:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c964:	6033      	str	r3, [r6, #0]
 801c966:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c968:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c96a:	6073      	str	r3, [r6, #4]
 801c96c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c96e:	4413      	add	r3, r2
 801c970:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c972:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c974:	3301      	adds	r3, #1
 801c976:	2b07      	cmp	r3, #7
 801c978:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c97a:	dc33      	bgt.n	801c9e4 <_svfprintf_r+0x123c>
 801c97c:	3608      	adds	r6, #8
 801c97e:	9b04      	ldr	r3, [sp, #16]
 801c980:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801c984:	1e5c      	subs	r4, r3, #1
 801c986:	2200      	movs	r2, #0
 801c988:	2300      	movs	r3, #0
 801c98a:	e9dd 8727 	ldrd	r8, r7, [sp, #156]	@ 0x9c
 801c98e:	f7e4 f89b 	bl	8000ac8 <__aeabi_dcmpeq>
 801c992:	2800      	cmp	r0, #0
 801c994:	d12f      	bne.n	801c9f6 <_svfprintf_r+0x124e>
 801c996:	f109 0201 	add.w	r2, r9, #1
 801c99a:	e9c6 2400 	strd	r2, r4, [r6]
 801c99e:	9a04      	ldr	r2, [sp, #16]
 801c9a0:	f108 0301 	add.w	r3, r8, #1
 801c9a4:	3f01      	subs	r7, #1
 801c9a6:	4417      	add	r7, r2
 801c9a8:	2b07      	cmp	r3, #7
 801c9aa:	e9cd 3727 	strd	r3, r7, [sp, #156]	@ 0x9c
 801c9ae:	dd53      	ble.n	801ca58 <_svfprintf_r+0x12b0>
 801c9b0:	9803      	ldr	r0, [sp, #12]
 801c9b2:	aa26      	add	r2, sp, #152	@ 0x98
 801c9b4:	4659      	mov	r1, fp
 801c9b6:	f001 fdca 	bl	801e54e <__ssprint_r>
 801c9ba:	2800      	cmp	r0, #0
 801c9bc:	d16f      	bne.n	801ca9e <_svfprintf_r+0x12f6>
 801c9be:	ae29      	add	r6, sp, #164	@ 0xa4
 801c9c0:	ab22      	add	r3, sp, #136	@ 0x88
 801c9c2:	6033      	str	r3, [r6, #0]
 801c9c4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c9c6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c9c8:	6073      	str	r3, [r6, #4]
 801c9ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c9cc:	4413      	add	r3, r2
 801c9ce:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c9d0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c9d2:	3301      	adds	r3, #1
 801c9d4:	2b07      	cmp	r3, #7
 801c9d6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c9d8:	f73f ada0 	bgt.w	801c51c <_svfprintf_r+0xd74>
 801c9dc:	f106 0408 	add.w	r4, r6, #8
 801c9e0:	f7ff baec 	b.w	801bfbc <_svfprintf_r+0x814>
 801c9e4:	9803      	ldr	r0, [sp, #12]
 801c9e6:	aa26      	add	r2, sp, #152	@ 0x98
 801c9e8:	4659      	mov	r1, fp
 801c9ea:	f001 fdb0 	bl	801e54e <__ssprint_r>
 801c9ee:	2800      	cmp	r0, #0
 801c9f0:	d155      	bne.n	801ca9e <_svfprintf_r+0x12f6>
 801c9f2:	ae29      	add	r6, sp, #164	@ 0xa4
 801c9f4:	e7c3      	b.n	801c97e <_svfprintf_r+0x11d6>
 801c9f6:	9b04      	ldr	r3, [sp, #16]
 801c9f8:	2b01      	cmp	r3, #1
 801c9fa:	dde1      	ble.n	801c9c0 <_svfprintf_r+0x1218>
 801c9fc:	4f57      	ldr	r7, [pc, #348]	@ (801cb5c <_svfprintf_r+0x13b4>)
 801c9fe:	f04f 0810 	mov.w	r8, #16
 801ca02:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801ca06:	2c10      	cmp	r4, #16
 801ca08:	f103 0301 	add.w	r3, r3, #1
 801ca0c:	f106 0108 	add.w	r1, r6, #8
 801ca10:	6037      	str	r7, [r6, #0]
 801ca12:	dc07      	bgt.n	801ca24 <_svfprintf_r+0x127c>
 801ca14:	6074      	str	r4, [r6, #4]
 801ca16:	2b07      	cmp	r3, #7
 801ca18:	4414      	add	r4, r2
 801ca1a:	e9cd 3427 	strd	r3, r4, [sp, #156]	@ 0x9c
 801ca1e:	dcc7      	bgt.n	801c9b0 <_svfprintf_r+0x1208>
 801ca20:	460e      	mov	r6, r1
 801ca22:	e7cd      	b.n	801c9c0 <_svfprintf_r+0x1218>
 801ca24:	3210      	adds	r2, #16
 801ca26:	2b07      	cmp	r3, #7
 801ca28:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801ca2c:	f8c6 8004 	str.w	r8, [r6, #4]
 801ca30:	dd06      	ble.n	801ca40 <_svfprintf_r+0x1298>
 801ca32:	9803      	ldr	r0, [sp, #12]
 801ca34:	aa26      	add	r2, sp, #152	@ 0x98
 801ca36:	4659      	mov	r1, fp
 801ca38:	f001 fd89 	bl	801e54e <__ssprint_r>
 801ca3c:	bb78      	cbnz	r0, 801ca9e <_svfprintf_r+0x12f6>
 801ca3e:	a929      	add	r1, sp, #164	@ 0xa4
 801ca40:	3c10      	subs	r4, #16
 801ca42:	460e      	mov	r6, r1
 801ca44:	e7dd      	b.n	801ca02 <_svfprintf_r+0x125a>
 801ca46:	2101      	movs	r1, #1
 801ca48:	2a07      	cmp	r2, #7
 801ca4a:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801ca4e:	f8c4 9000 	str.w	r9, [r4]
 801ca52:	6061      	str	r1, [r4, #4]
 801ca54:	ddb4      	ble.n	801c9c0 <_svfprintf_r+0x1218>
 801ca56:	e7ab      	b.n	801c9b0 <_svfprintf_r+0x1208>
 801ca58:	3608      	adds	r6, #8
 801ca5a:	e7b1      	b.n	801c9c0 <_svfprintf_r+0x1218>
 801ca5c:	460c      	mov	r4, r1
 801ca5e:	f7ff baad 	b.w	801bfbc <_svfprintf_r+0x814>
 801ca62:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ca64:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ca66:	1a9d      	subs	r5, r3, r2
 801ca68:	2d00      	cmp	r5, #0
 801ca6a:	f77f aaaa 	ble.w	801bfc2 <_svfprintf_r+0x81a>
 801ca6e:	4e3c      	ldr	r6, [pc, #240]	@ (801cb60 <_svfprintf_r+0x13b8>)
 801ca70:	2710      	movs	r7, #16
 801ca72:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801ca76:	2d10      	cmp	r5, #16
 801ca78:	f103 0301 	add.w	r3, r3, #1
 801ca7c:	6026      	str	r6, [r4, #0]
 801ca7e:	dc18      	bgt.n	801cab2 <_svfprintf_r+0x130a>
 801ca80:	442a      	add	r2, r5
 801ca82:	2b07      	cmp	r3, #7
 801ca84:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801ca88:	6065      	str	r5, [r4, #4]
 801ca8a:	f77f aa9a 	ble.w	801bfc2 <_svfprintf_r+0x81a>
 801ca8e:	9803      	ldr	r0, [sp, #12]
 801ca90:	aa26      	add	r2, sp, #152	@ 0x98
 801ca92:	4659      	mov	r1, fp
 801ca94:	f001 fd5b 	bl	801e54e <__ssprint_r>
 801ca98:	2800      	cmp	r0, #0
 801ca9a:	f43f aa92 	beq.w	801bfc2 <_svfprintf_r+0x81a>
 801ca9e:	f1ba 0f00 	cmp.w	sl, #0
 801caa2:	f43f a89a 	beq.w	801bbda <_svfprintf_r+0x432>
 801caa6:	9803      	ldr	r0, [sp, #12]
 801caa8:	4651      	mov	r1, sl
 801caaa:	f7fe fb77 	bl	801b19c <_free_r>
 801caae:	f7ff b894 	b.w	801bbda <_svfprintf_r+0x432>
 801cab2:	3210      	adds	r2, #16
 801cab4:	2b07      	cmp	r3, #7
 801cab6:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801caba:	6067      	str	r7, [r4, #4]
 801cabc:	dc02      	bgt.n	801cac4 <_svfprintf_r+0x131c>
 801cabe:	3408      	adds	r4, #8
 801cac0:	3d10      	subs	r5, #16
 801cac2:	e7d6      	b.n	801ca72 <_svfprintf_r+0x12ca>
 801cac4:	9803      	ldr	r0, [sp, #12]
 801cac6:	aa26      	add	r2, sp, #152	@ 0x98
 801cac8:	4659      	mov	r1, fp
 801caca:	f001 fd40 	bl	801e54e <__ssprint_r>
 801cace:	2800      	cmp	r0, #0
 801cad0:	d1e5      	bne.n	801ca9e <_svfprintf_r+0x12f6>
 801cad2:	ac29      	add	r4, sp, #164	@ 0xa4
 801cad4:	e7f4      	b.n	801cac0 <_svfprintf_r+0x1318>
 801cad6:	9803      	ldr	r0, [sp, #12]
 801cad8:	4651      	mov	r1, sl
 801cada:	f7fe fb5f 	bl	801b19c <_free_r>
 801cade:	f7ff ba88 	b.w	801bff2 <_svfprintf_r+0x84a>
 801cae2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801cae4:	2b00      	cmp	r3, #0
 801cae6:	f43f a878 	beq.w	801bbda <_svfprintf_r+0x432>
 801caea:	9803      	ldr	r0, [sp, #12]
 801caec:	aa26      	add	r2, sp, #152	@ 0x98
 801caee:	4659      	mov	r1, fp
 801caf0:	f001 fd2d 	bl	801e54e <__ssprint_r>
 801caf4:	f7ff b871 	b.w	801bbda <_svfprintf_r+0x432>
 801caf8:	ea56 0207 	orrs.w	r2, r6, r7
 801cafc:	9508      	str	r5, [sp, #32]
 801cafe:	f43f ab7a 	beq.w	801c1f6 <_svfprintf_r+0xa4e>
 801cb02:	2b01      	cmp	r3, #1
 801cb04:	f43f abfb 	beq.w	801c2fe <_svfprintf_r+0xb56>
 801cb08:	2b02      	cmp	r3, #2
 801cb0a:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801cb0e:	f43f ac3f 	beq.w	801c390 <_svfprintf_r+0xbe8>
 801cb12:	f006 0307 	and.w	r3, r6, #7
 801cb16:	08f6      	lsrs	r6, r6, #3
 801cb18:	ea46 7647 	orr.w	r6, r6, r7, lsl #29
 801cb1c:	08ff      	lsrs	r7, r7, #3
 801cb1e:	3330      	adds	r3, #48	@ 0x30
 801cb20:	ea56 0107 	orrs.w	r1, r6, r7
 801cb24:	464a      	mov	r2, r9
 801cb26:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801cb2a:	d1f2      	bne.n	801cb12 <_svfprintf_r+0x136a>
 801cb2c:	9908      	ldr	r1, [sp, #32]
 801cb2e:	07c8      	lsls	r0, r1, #31
 801cb30:	d506      	bpl.n	801cb40 <_svfprintf_r+0x1398>
 801cb32:	2b30      	cmp	r3, #48	@ 0x30
 801cb34:	d004      	beq.n	801cb40 <_svfprintf_r+0x1398>
 801cb36:	2330      	movs	r3, #48	@ 0x30
 801cb38:	f809 3c01 	strb.w	r3, [r9, #-1]
 801cb3c:	f1a2 0902 	sub.w	r9, r2, #2
 801cb40:	ab52      	add	r3, sp, #328	@ 0x148
 801cb42:	9d08      	ldr	r5, [sp, #32]
 801cb44:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 801cb48:	f04f 0a00 	mov.w	sl, #0
 801cb4c:	eba3 0809 	sub.w	r8, r3, r9
 801cb50:	4657      	mov	r7, sl
 801cb52:	f8cd a020 	str.w	sl, [sp, #32]
 801cb56:	4656      	mov	r6, sl
 801cb58:	f7ff b97c 	b.w	801be54 <_svfprintf_r+0x6ac>
 801cb5c:	08021758 	.word	0x08021758
 801cb60:	08021768 	.word	0x08021768

0801cb64 <_fclose_r>:
 801cb64:	b570      	push	{r4, r5, r6, lr}
 801cb66:	4605      	mov	r5, r0
 801cb68:	460c      	mov	r4, r1
 801cb6a:	b1b1      	cbz	r1, 801cb9a <_fclose_r+0x36>
 801cb6c:	b118      	cbz	r0, 801cb76 <_fclose_r+0x12>
 801cb6e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801cb70:	b90b      	cbnz	r3, 801cb76 <_fclose_r+0x12>
 801cb72:	f7fe f949 	bl	801ae08 <__sinit>
 801cb76:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cb78:	07de      	lsls	r6, r3, #31
 801cb7a:	d405      	bmi.n	801cb88 <_fclose_r+0x24>
 801cb7c:	89a3      	ldrh	r3, [r4, #12]
 801cb7e:	0598      	lsls	r0, r3, #22
 801cb80:	d402      	bmi.n	801cb88 <_fclose_r+0x24>
 801cb82:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cb84:	f7fe fa94 	bl	801b0b0 <__retarget_lock_acquire_recursive>
 801cb88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cb8c:	b943      	cbnz	r3, 801cba0 <_fclose_r+0x3c>
 801cb8e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cb90:	07d9      	lsls	r1, r3, #31
 801cb92:	d402      	bmi.n	801cb9a <_fclose_r+0x36>
 801cb94:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cb96:	f7fe fa8c 	bl	801b0b2 <__retarget_lock_release_recursive>
 801cb9a:	2600      	movs	r6, #0
 801cb9c:	4630      	mov	r0, r6
 801cb9e:	bd70      	pop	{r4, r5, r6, pc}
 801cba0:	4621      	mov	r1, r4
 801cba2:	4628      	mov	r0, r5
 801cba4:	f000 f834 	bl	801cc10 <__sflush_r>
 801cba8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801cbaa:	4606      	mov	r6, r0
 801cbac:	b133      	cbz	r3, 801cbbc <_fclose_r+0x58>
 801cbae:	69e1      	ldr	r1, [r4, #28]
 801cbb0:	4628      	mov	r0, r5
 801cbb2:	4798      	blx	r3
 801cbb4:	2800      	cmp	r0, #0
 801cbb6:	bfb8      	it	lt
 801cbb8:	f04f 36ff 	movlt.w	r6, #4294967295
 801cbbc:	89a3      	ldrh	r3, [r4, #12]
 801cbbe:	061a      	lsls	r2, r3, #24
 801cbc0:	d503      	bpl.n	801cbca <_fclose_r+0x66>
 801cbc2:	6921      	ldr	r1, [r4, #16]
 801cbc4:	4628      	mov	r0, r5
 801cbc6:	f7fe fae9 	bl	801b19c <_free_r>
 801cbca:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801cbcc:	b141      	cbz	r1, 801cbe0 <_fclose_r+0x7c>
 801cbce:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801cbd2:	4299      	cmp	r1, r3
 801cbd4:	d002      	beq.n	801cbdc <_fclose_r+0x78>
 801cbd6:	4628      	mov	r0, r5
 801cbd8:	f7fe fae0 	bl	801b19c <_free_r>
 801cbdc:	2300      	movs	r3, #0
 801cbde:	6323      	str	r3, [r4, #48]	@ 0x30
 801cbe0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801cbe2:	b121      	cbz	r1, 801cbee <_fclose_r+0x8a>
 801cbe4:	4628      	mov	r0, r5
 801cbe6:	f7fe fad9 	bl	801b19c <_free_r>
 801cbea:	2300      	movs	r3, #0
 801cbec:	6463      	str	r3, [r4, #68]	@ 0x44
 801cbee:	f7fe f8ff 	bl	801adf0 <__sfp_lock_acquire>
 801cbf2:	2300      	movs	r3, #0
 801cbf4:	81a3      	strh	r3, [r4, #12]
 801cbf6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cbf8:	07db      	lsls	r3, r3, #31
 801cbfa:	d402      	bmi.n	801cc02 <_fclose_r+0x9e>
 801cbfc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cbfe:	f7fe fa58 	bl	801b0b2 <__retarget_lock_release_recursive>
 801cc02:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cc04:	f7fe fa53 	bl	801b0ae <__retarget_lock_close_recursive>
 801cc08:	f7fe f8f8 	bl	801adfc <__sfp_lock_release>
 801cc0c:	e7c6      	b.n	801cb9c <_fclose_r+0x38>
	...

0801cc10 <__sflush_r>:
 801cc10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cc14:	4605      	mov	r5, r0
 801cc16:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 801cc1a:	0706      	lsls	r6, r0, #28
 801cc1c:	460c      	mov	r4, r1
 801cc1e:	d457      	bmi.n	801ccd0 <__sflush_r+0xc0>
 801cc20:	f440 6300 	orr.w	r3, r0, #2048	@ 0x800
 801cc24:	818b      	strh	r3, [r1, #12]
 801cc26:	684b      	ldr	r3, [r1, #4]
 801cc28:	2b00      	cmp	r3, #0
 801cc2a:	dc02      	bgt.n	801cc32 <__sflush_r+0x22>
 801cc2c:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 801cc2e:	2b00      	cmp	r3, #0
 801cc30:	dd4c      	ble.n	801cccc <__sflush_r+0xbc>
 801cc32:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801cc34:	2e00      	cmp	r6, #0
 801cc36:	d049      	beq.n	801cccc <__sflush_r+0xbc>
 801cc38:	2300      	movs	r3, #0
 801cc3a:	f410 5280 	ands.w	r2, r0, #4096	@ 0x1000
 801cc3e:	682f      	ldr	r7, [r5, #0]
 801cc40:	69e1      	ldr	r1, [r4, #28]
 801cc42:	602b      	str	r3, [r5, #0]
 801cc44:	d034      	beq.n	801ccb0 <__sflush_r+0xa0>
 801cc46:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801cc48:	89a3      	ldrh	r3, [r4, #12]
 801cc4a:	0759      	lsls	r1, r3, #29
 801cc4c:	d505      	bpl.n	801cc5a <__sflush_r+0x4a>
 801cc4e:	6863      	ldr	r3, [r4, #4]
 801cc50:	1ad2      	subs	r2, r2, r3
 801cc52:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cc54:	b10b      	cbz	r3, 801cc5a <__sflush_r+0x4a>
 801cc56:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801cc58:	1ad2      	subs	r2, r2, r3
 801cc5a:	2300      	movs	r3, #0
 801cc5c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801cc5e:	69e1      	ldr	r1, [r4, #28]
 801cc60:	4628      	mov	r0, r5
 801cc62:	47b0      	blx	r6
 801cc64:	1c43      	adds	r3, r0, #1
 801cc66:	d106      	bne.n	801cc76 <__sflush_r+0x66>
 801cc68:	682a      	ldr	r2, [r5, #0]
 801cc6a:	2a1d      	cmp	r2, #29
 801cc6c:	d848      	bhi.n	801cd00 <__sflush_r+0xf0>
 801cc6e:	4b2b      	ldr	r3, [pc, #172]	@ (801cd1c <__sflush_r+0x10c>)
 801cc70:	4113      	asrs	r3, r2
 801cc72:	07de      	lsls	r6, r3, #31
 801cc74:	d444      	bmi.n	801cd00 <__sflush_r+0xf0>
 801cc76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cc7a:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 801cc7e:	81a2      	strh	r2, [r4, #12]
 801cc80:	2200      	movs	r2, #0
 801cc82:	6062      	str	r2, [r4, #4]
 801cc84:	04d9      	lsls	r1, r3, #19
 801cc86:	6922      	ldr	r2, [r4, #16]
 801cc88:	6022      	str	r2, [r4, #0]
 801cc8a:	d504      	bpl.n	801cc96 <__sflush_r+0x86>
 801cc8c:	1c42      	adds	r2, r0, #1
 801cc8e:	d101      	bne.n	801cc94 <__sflush_r+0x84>
 801cc90:	682b      	ldr	r3, [r5, #0]
 801cc92:	b903      	cbnz	r3, 801cc96 <__sflush_r+0x86>
 801cc94:	6520      	str	r0, [r4, #80]	@ 0x50
 801cc96:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801cc98:	602f      	str	r7, [r5, #0]
 801cc9a:	b1b9      	cbz	r1, 801cccc <__sflush_r+0xbc>
 801cc9c:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801cca0:	4299      	cmp	r1, r3
 801cca2:	d002      	beq.n	801ccaa <__sflush_r+0x9a>
 801cca4:	4628      	mov	r0, r5
 801cca6:	f7fe fa79 	bl	801b19c <_free_r>
 801ccaa:	2300      	movs	r3, #0
 801ccac:	6323      	str	r3, [r4, #48]	@ 0x30
 801ccae:	e00d      	b.n	801cccc <__sflush_r+0xbc>
 801ccb0:	2301      	movs	r3, #1
 801ccb2:	4628      	mov	r0, r5
 801ccb4:	47b0      	blx	r6
 801ccb6:	4602      	mov	r2, r0
 801ccb8:	1c50      	adds	r0, r2, #1
 801ccba:	d1c5      	bne.n	801cc48 <__sflush_r+0x38>
 801ccbc:	682b      	ldr	r3, [r5, #0]
 801ccbe:	2b00      	cmp	r3, #0
 801ccc0:	d0c2      	beq.n	801cc48 <__sflush_r+0x38>
 801ccc2:	2b1d      	cmp	r3, #29
 801ccc4:	d001      	beq.n	801ccca <__sflush_r+0xba>
 801ccc6:	2b16      	cmp	r3, #22
 801ccc8:	d11a      	bne.n	801cd00 <__sflush_r+0xf0>
 801ccca:	602f      	str	r7, [r5, #0]
 801cccc:	2000      	movs	r0, #0
 801ccce:	e01e      	b.n	801cd0e <__sflush_r+0xfe>
 801ccd0:	690f      	ldr	r7, [r1, #16]
 801ccd2:	2f00      	cmp	r7, #0
 801ccd4:	d0fa      	beq.n	801cccc <__sflush_r+0xbc>
 801ccd6:	0783      	lsls	r3, r0, #30
 801ccd8:	680e      	ldr	r6, [r1, #0]
 801ccda:	bf08      	it	eq
 801ccdc:	694b      	ldreq	r3, [r1, #20]
 801ccde:	600f      	str	r7, [r1, #0]
 801cce0:	bf18      	it	ne
 801cce2:	2300      	movne	r3, #0
 801cce4:	eba6 0807 	sub.w	r8, r6, r7
 801cce8:	608b      	str	r3, [r1, #8]
 801ccea:	f1b8 0f00 	cmp.w	r8, #0
 801ccee:	dded      	ble.n	801cccc <__sflush_r+0xbc>
 801ccf0:	69e1      	ldr	r1, [r4, #28]
 801ccf2:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 801ccf4:	4643      	mov	r3, r8
 801ccf6:	463a      	mov	r2, r7
 801ccf8:	4628      	mov	r0, r5
 801ccfa:	47b0      	blx	r6
 801ccfc:	2800      	cmp	r0, #0
 801ccfe:	dc08      	bgt.n	801cd12 <__sflush_r+0x102>
 801cd00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cd04:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801cd08:	81a3      	strh	r3, [r4, #12]
 801cd0a:	f04f 30ff 	mov.w	r0, #4294967295
 801cd0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cd12:	4407      	add	r7, r0
 801cd14:	eba8 0800 	sub.w	r8, r8, r0
 801cd18:	e7e7      	b.n	801ccea <__sflush_r+0xda>
 801cd1a:	bf00      	nop
 801cd1c:	dfbffffe 	.word	0xdfbffffe

0801cd20 <_fflush_r>:
 801cd20:	b538      	push	{r3, r4, r5, lr}
 801cd22:	460c      	mov	r4, r1
 801cd24:	4605      	mov	r5, r0
 801cd26:	b118      	cbz	r0, 801cd30 <_fflush_r+0x10>
 801cd28:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801cd2a:	b90b      	cbnz	r3, 801cd30 <_fflush_r+0x10>
 801cd2c:	f7fe f86c 	bl	801ae08 <__sinit>
 801cd30:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 801cd34:	b1b8      	cbz	r0, 801cd66 <_fflush_r+0x46>
 801cd36:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cd38:	07db      	lsls	r3, r3, #31
 801cd3a:	d404      	bmi.n	801cd46 <_fflush_r+0x26>
 801cd3c:	0581      	lsls	r1, r0, #22
 801cd3e:	d402      	bmi.n	801cd46 <_fflush_r+0x26>
 801cd40:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cd42:	f7fe f9b5 	bl	801b0b0 <__retarget_lock_acquire_recursive>
 801cd46:	4628      	mov	r0, r5
 801cd48:	4621      	mov	r1, r4
 801cd4a:	f7ff ff61 	bl	801cc10 <__sflush_r>
 801cd4e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cd50:	07da      	lsls	r2, r3, #31
 801cd52:	4605      	mov	r5, r0
 801cd54:	d405      	bmi.n	801cd62 <_fflush_r+0x42>
 801cd56:	89a3      	ldrh	r3, [r4, #12]
 801cd58:	059b      	lsls	r3, r3, #22
 801cd5a:	d402      	bmi.n	801cd62 <_fflush_r+0x42>
 801cd5c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cd5e:	f7fe f9a8 	bl	801b0b2 <__retarget_lock_release_recursive>
 801cd62:	4628      	mov	r0, r5
 801cd64:	bd38      	pop	{r3, r4, r5, pc}
 801cd66:	4605      	mov	r5, r0
 801cd68:	e7fb      	b.n	801cd62 <_fflush_r+0x42>

0801cd6a <strncpy>:
 801cd6a:	b510      	push	{r4, lr}
 801cd6c:	3901      	subs	r1, #1
 801cd6e:	4603      	mov	r3, r0
 801cd70:	b132      	cbz	r2, 801cd80 <strncpy+0x16>
 801cd72:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801cd76:	f803 4b01 	strb.w	r4, [r3], #1
 801cd7a:	3a01      	subs	r2, #1
 801cd7c:	2c00      	cmp	r4, #0
 801cd7e:	d1f7      	bne.n	801cd70 <strncpy+0x6>
 801cd80:	441a      	add	r2, r3
 801cd82:	2100      	movs	r1, #0
 801cd84:	4293      	cmp	r3, r2
 801cd86:	d100      	bne.n	801cd8a <strncpy+0x20>
 801cd88:	bd10      	pop	{r4, pc}
 801cd8a:	f803 1b01 	strb.w	r1, [r3], #1
 801cd8e:	e7f9      	b.n	801cd84 <strncpy+0x1a>

0801cd90 <__locale_mb_cur_max>:
 801cd90:	4b01      	ldr	r3, [pc, #4]	@ (801cd98 <__locale_mb_cur_max+0x8>)
 801cd92:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
 801cd96:	4770      	bx	lr
 801cd98:	2000065c 	.word	0x2000065c

0801cd9c <_localeconv_r>:
 801cd9c:	4800      	ldr	r0, [pc, #0]	@ (801cda0 <_localeconv_r+0x4>)
 801cd9e:	4770      	bx	lr
 801cda0:	2000074c 	.word	0x2000074c

0801cda4 <_sbrk_r>:
 801cda4:	b538      	push	{r3, r4, r5, lr}
 801cda6:	4d06      	ldr	r5, [pc, #24]	@ (801cdc0 <_sbrk_r+0x1c>)
 801cda8:	2300      	movs	r3, #0
 801cdaa:	4604      	mov	r4, r0
 801cdac:	4608      	mov	r0, r1
 801cdae:	602b      	str	r3, [r5, #0]
 801cdb0:	f7e7 f894 	bl	8003edc <_sbrk>
 801cdb4:	1c43      	adds	r3, r0, #1
 801cdb6:	d102      	bne.n	801cdbe <_sbrk_r+0x1a>
 801cdb8:	682b      	ldr	r3, [r5, #0]
 801cdba:	b103      	cbz	r3, 801cdbe <_sbrk_r+0x1a>
 801cdbc:	6023      	str	r3, [r4, #0]
 801cdbe:	bd38      	pop	{r3, r4, r5, pc}
 801cdc0:	2000d0c4 	.word	0x2000d0c4

0801cdc4 <__libc_fini_array>:
 801cdc4:	b538      	push	{r3, r4, r5, lr}
 801cdc6:	4d07      	ldr	r5, [pc, #28]	@ (801cde4 <__libc_fini_array+0x20>)
 801cdc8:	4c07      	ldr	r4, [pc, #28]	@ (801cde8 <__libc_fini_array+0x24>)
 801cdca:	1b64      	subs	r4, r4, r5
 801cdcc:	10a4      	asrs	r4, r4, #2
 801cdce:	b91c      	cbnz	r4, 801cdd8 <__libc_fini_array+0x14>
 801cdd0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cdd4:	f004 b8e6 	b.w	8020fa4 <_fini>
 801cdd8:	3c01      	subs	r4, #1
 801cdda:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 801cdde:	4798      	blx	r3
 801cde0:	e7f5      	b.n	801cdce <__libc_fini_array+0xa>
 801cde2:	bf00      	nop
 801cde4:	08021d08 	.word	0x08021d08
 801cde8:	08021d0c 	.word	0x08021d0c

0801cdec <sysconf>:
 801cdec:	2808      	cmp	r0, #8
 801cdee:	b508      	push	{r3, lr}
 801cdf0:	d006      	beq.n	801ce00 <sysconf+0x14>
 801cdf2:	f7fe f931 	bl	801b058 <__errno>
 801cdf6:	2316      	movs	r3, #22
 801cdf8:	6003      	str	r3, [r0, #0]
 801cdfa:	f04f 30ff 	mov.w	r0, #4294967295
 801cdfe:	bd08      	pop	{r3, pc}
 801ce00:	2080      	movs	r0, #128	@ 0x80
 801ce02:	e7fc      	b.n	801cdfe <sysconf+0x12>

0801ce04 <frexp>:
 801ce04:	b570      	push	{r4, r5, r6, lr}
 801ce06:	2100      	movs	r1, #0
 801ce08:	ec55 4b10 	vmov	r4, r5, d0
 801ce0c:	6001      	str	r1, [r0, #0]
 801ce0e:	4915      	ldr	r1, [pc, #84]	@ (801ce64 <frexp+0x60>)
 801ce10:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801ce14:	428a      	cmp	r2, r1
 801ce16:	4606      	mov	r6, r0
 801ce18:	462b      	mov	r3, r5
 801ce1a:	d820      	bhi.n	801ce5e <frexp+0x5a>
 801ce1c:	4621      	mov	r1, r4
 801ce1e:	4311      	orrs	r1, r2
 801ce20:	d01d      	beq.n	801ce5e <frexp+0x5a>
 801ce22:	4911      	ldr	r1, [pc, #68]	@ (801ce68 <frexp+0x64>)
 801ce24:	4029      	ands	r1, r5
 801ce26:	b961      	cbnz	r1, 801ce42 <frexp+0x3e>
 801ce28:	4b10      	ldr	r3, [pc, #64]	@ (801ce6c <frexp+0x68>)
 801ce2a:	2200      	movs	r2, #0
 801ce2c:	4620      	mov	r0, r4
 801ce2e:	4629      	mov	r1, r5
 801ce30:	f7e3 fbe2 	bl	80005f8 <__aeabi_dmul>
 801ce34:	460b      	mov	r3, r1
 801ce36:	f021 4200 	bic.w	r2, r1, #2147483648	@ 0x80000000
 801ce3a:	f06f 0135 	mvn.w	r1, #53	@ 0x35
 801ce3e:	4604      	mov	r4, r0
 801ce40:	6031      	str	r1, [r6, #0]
 801ce42:	6831      	ldr	r1, [r6, #0]
 801ce44:	1512      	asrs	r2, r2, #20
 801ce46:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 801ce4a:	f2a2 32fe 	subw	r2, r2, #1022	@ 0x3fe
 801ce4e:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 801ce52:	4411      	add	r1, r2
 801ce54:	f043 557f 	orr.w	r5, r3, #1069547520	@ 0x3fc00000
 801ce58:	6031      	str	r1, [r6, #0]
 801ce5a:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
 801ce5e:	ec45 4b10 	vmov	d0, r4, r5
 801ce62:	bd70      	pop	{r4, r5, r6, pc}
 801ce64:	7fefffff 	.word	0x7fefffff
 801ce68:	7ff00000 	.word	0x7ff00000
 801ce6c:	43500000 	.word	0x43500000

0801ce70 <__register_exitproc>:
 801ce70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ce74:	f8df a074 	ldr.w	sl, [pc, #116]	@ 801ceec <__register_exitproc+0x7c>
 801ce78:	4606      	mov	r6, r0
 801ce7a:	f8da 0000 	ldr.w	r0, [sl]
 801ce7e:	4698      	mov	r8, r3
 801ce80:	460f      	mov	r7, r1
 801ce82:	4691      	mov	r9, r2
 801ce84:	f7fe f914 	bl	801b0b0 <__retarget_lock_acquire_recursive>
 801ce88:	4b16      	ldr	r3, [pc, #88]	@ (801cee4 <__register_exitproc+0x74>)
 801ce8a:	681c      	ldr	r4, [r3, #0]
 801ce8c:	b90c      	cbnz	r4, 801ce92 <__register_exitproc+0x22>
 801ce8e:	4c16      	ldr	r4, [pc, #88]	@ (801cee8 <__register_exitproc+0x78>)
 801ce90:	601c      	str	r4, [r3, #0]
 801ce92:	6865      	ldr	r5, [r4, #4]
 801ce94:	f8da 0000 	ldr.w	r0, [sl]
 801ce98:	2d1f      	cmp	r5, #31
 801ce9a:	dd05      	ble.n	801cea8 <__register_exitproc+0x38>
 801ce9c:	f7fe f909 	bl	801b0b2 <__retarget_lock_release_recursive>
 801cea0:	f04f 30ff 	mov.w	r0, #4294967295
 801cea4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cea8:	b19e      	cbz	r6, 801ced2 <__register_exitproc+0x62>
 801ceaa:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 801ceae:	2201      	movs	r2, #1
 801ceb0:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
 801ceb4:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
 801ceb8:	40aa      	lsls	r2, r5
 801ceba:	4313      	orrs	r3, r2
 801cebc:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
 801cec0:	2e02      	cmp	r6, #2
 801cec2:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
 801cec6:	bf02      	ittt	eq
 801cec8:	f8d4 318c 	ldreq.w	r3, [r4, #396]	@ 0x18c
 801cecc:	4313      	orreq	r3, r2
 801cece:	f8c4 318c 	streq.w	r3, [r4, #396]	@ 0x18c
 801ced2:	1c6b      	adds	r3, r5, #1
 801ced4:	3502      	adds	r5, #2
 801ced6:	6063      	str	r3, [r4, #4]
 801ced8:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 801cedc:	f7fe f8e9 	bl	801b0b2 <__retarget_lock_release_recursive>
 801cee0:	2000      	movs	r0, #0
 801cee2:	e7df      	b.n	801cea4 <__register_exitproc+0x34>
 801cee4:	2000d0cc 	.word	0x2000d0cc
 801cee8:	2000d104 	.word	0x2000d104
 801ceec:	20000248 	.word	0x20000248

0801cef0 <quorem>:
 801cef0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cef4:	6903      	ldr	r3, [r0, #16]
 801cef6:	690c      	ldr	r4, [r1, #16]
 801cef8:	42a3      	cmp	r3, r4
 801cefa:	4607      	mov	r7, r0
 801cefc:	db7e      	blt.n	801cffc <quorem+0x10c>
 801cefe:	3c01      	subs	r4, #1
 801cf00:	f101 0814 	add.w	r8, r1, #20
 801cf04:	00a3      	lsls	r3, r4, #2
 801cf06:	f100 0514 	add.w	r5, r0, #20
 801cf0a:	9300      	str	r3, [sp, #0]
 801cf0c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cf10:	9301      	str	r3, [sp, #4]
 801cf12:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801cf16:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801cf1a:	3301      	adds	r3, #1
 801cf1c:	429a      	cmp	r2, r3
 801cf1e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801cf22:	fbb2 f6f3 	udiv	r6, r2, r3
 801cf26:	d32e      	bcc.n	801cf86 <quorem+0x96>
 801cf28:	f04f 0a00 	mov.w	sl, #0
 801cf2c:	46c4      	mov	ip, r8
 801cf2e:	46ae      	mov	lr, r5
 801cf30:	46d3      	mov	fp, sl
 801cf32:	f85c 3b04 	ldr.w	r3, [ip], #4
 801cf36:	b298      	uxth	r0, r3
 801cf38:	fb06 a000 	mla	r0, r6, r0, sl
 801cf3c:	0c02      	lsrs	r2, r0, #16
 801cf3e:	0c1b      	lsrs	r3, r3, #16
 801cf40:	fb06 2303 	mla	r3, r6, r3, r2
 801cf44:	f8de 2000 	ldr.w	r2, [lr]
 801cf48:	b280      	uxth	r0, r0
 801cf4a:	b292      	uxth	r2, r2
 801cf4c:	1a12      	subs	r2, r2, r0
 801cf4e:	445a      	add	r2, fp
 801cf50:	f8de 0000 	ldr.w	r0, [lr]
 801cf54:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801cf58:	b29b      	uxth	r3, r3
 801cf5a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 801cf5e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 801cf62:	b292      	uxth	r2, r2
 801cf64:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 801cf68:	45e1      	cmp	r9, ip
 801cf6a:	f84e 2b04 	str.w	r2, [lr], #4
 801cf6e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 801cf72:	d2de      	bcs.n	801cf32 <quorem+0x42>
 801cf74:	9b00      	ldr	r3, [sp, #0]
 801cf76:	58eb      	ldr	r3, [r5, r3]
 801cf78:	b92b      	cbnz	r3, 801cf86 <quorem+0x96>
 801cf7a:	9b01      	ldr	r3, [sp, #4]
 801cf7c:	3b04      	subs	r3, #4
 801cf7e:	429d      	cmp	r5, r3
 801cf80:	461a      	mov	r2, r3
 801cf82:	d32f      	bcc.n	801cfe4 <quorem+0xf4>
 801cf84:	613c      	str	r4, [r7, #16]
 801cf86:	4638      	mov	r0, r7
 801cf88:	f001 f824 	bl	801dfd4 <__mcmp>
 801cf8c:	2800      	cmp	r0, #0
 801cf8e:	db25      	blt.n	801cfdc <quorem+0xec>
 801cf90:	4629      	mov	r1, r5
 801cf92:	2000      	movs	r0, #0
 801cf94:	f858 2b04 	ldr.w	r2, [r8], #4
 801cf98:	f8d1 c000 	ldr.w	ip, [r1]
 801cf9c:	fa1f fe82 	uxth.w	lr, r2
 801cfa0:	fa1f f38c 	uxth.w	r3, ip
 801cfa4:	eba3 030e 	sub.w	r3, r3, lr
 801cfa8:	4403      	add	r3, r0
 801cfaa:	0c12      	lsrs	r2, r2, #16
 801cfac:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 801cfb0:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 801cfb4:	b29b      	uxth	r3, r3
 801cfb6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801cfba:	45c1      	cmp	r9, r8
 801cfbc:	f841 3b04 	str.w	r3, [r1], #4
 801cfc0:	ea4f 4022 	mov.w	r0, r2, asr #16
 801cfc4:	d2e6      	bcs.n	801cf94 <quorem+0xa4>
 801cfc6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801cfca:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cfce:	b922      	cbnz	r2, 801cfda <quorem+0xea>
 801cfd0:	3b04      	subs	r3, #4
 801cfd2:	429d      	cmp	r5, r3
 801cfd4:	461a      	mov	r2, r3
 801cfd6:	d30b      	bcc.n	801cff0 <quorem+0x100>
 801cfd8:	613c      	str	r4, [r7, #16]
 801cfda:	3601      	adds	r6, #1
 801cfdc:	4630      	mov	r0, r6
 801cfde:	b003      	add	sp, #12
 801cfe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfe4:	6812      	ldr	r2, [r2, #0]
 801cfe6:	3b04      	subs	r3, #4
 801cfe8:	2a00      	cmp	r2, #0
 801cfea:	d1cb      	bne.n	801cf84 <quorem+0x94>
 801cfec:	3c01      	subs	r4, #1
 801cfee:	e7c6      	b.n	801cf7e <quorem+0x8e>
 801cff0:	6812      	ldr	r2, [r2, #0]
 801cff2:	3b04      	subs	r3, #4
 801cff4:	2a00      	cmp	r2, #0
 801cff6:	d1ef      	bne.n	801cfd8 <quorem+0xe8>
 801cff8:	3c01      	subs	r4, #1
 801cffa:	e7ea      	b.n	801cfd2 <quorem+0xe2>
 801cffc:	2000      	movs	r0, #0
 801cffe:	e7ee      	b.n	801cfde <quorem+0xee>

0801d000 <_dtoa_r>:
 801d000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d004:	b099      	sub	sp, #100	@ 0x64
 801d006:	ed8d 0b02 	vstr	d0, [sp, #8]
 801d00a:	9109      	str	r1, [sp, #36]	@ 0x24
 801d00c:	6b81      	ldr	r1, [r0, #56]	@ 0x38
 801d00e:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801d010:	920e      	str	r2, [sp, #56]	@ 0x38
 801d012:	ec55 4b10 	vmov	r4, r5, d0
 801d016:	4683      	mov	fp, r0
 801d018:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d01a:	b149      	cbz	r1, 801d030 <_dtoa_r+0x30>
 801d01c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801d01e:	604a      	str	r2, [r1, #4]
 801d020:	2301      	movs	r3, #1
 801d022:	4093      	lsls	r3, r2
 801d024:	608b      	str	r3, [r1, #8]
 801d026:	f000 fdce 	bl	801dbc6 <_Bfree>
 801d02a:	2300      	movs	r3, #0
 801d02c:	f8cb 3038 	str.w	r3, [fp, #56]	@ 0x38
 801d030:	1e2b      	subs	r3, r5, #0
 801d032:	bfb9      	ittee	lt
 801d034:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 801d038:	9303      	strlt	r3, [sp, #12]
 801d03a:	2300      	movge	r3, #0
 801d03c:	6033      	strge	r3, [r6, #0]
 801d03e:	9f03      	ldr	r7, [sp, #12]
 801d040:	4b97      	ldr	r3, [pc, #604]	@ (801d2a0 <_dtoa_r+0x2a0>)
 801d042:	bfbc      	itt	lt
 801d044:	2201      	movlt	r2, #1
 801d046:	6032      	strlt	r2, [r6, #0]
 801d048:	43bb      	bics	r3, r7
 801d04a:	d114      	bne.n	801d076 <_dtoa_r+0x76>
 801d04c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d04e:	f242 730f 	movw	r3, #9999	@ 0x270f
 801d052:	6013      	str	r3, [r2, #0]
 801d054:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801d058:	4323      	orrs	r3, r4
 801d05a:	f000 854c 	beq.w	801daf6 <_dtoa_r+0xaf6>
 801d05e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d060:	f8df a254 	ldr.w	sl, [pc, #596]	@ 801d2b8 <_dtoa_r+0x2b8>
 801d064:	b11b      	cbz	r3, 801d06e <_dtoa_r+0x6e>
 801d066:	f10a 0303 	add.w	r3, sl, #3
 801d06a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d06c:	6013      	str	r3, [r2, #0]
 801d06e:	4650      	mov	r0, sl
 801d070:	b019      	add	sp, #100	@ 0x64
 801d072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d076:	ed9d 7b02 	vldr	d7, [sp, #8]
 801d07a:	2200      	movs	r2, #0
 801d07c:	ec51 0b17 	vmov	r0, r1, d7
 801d080:	2300      	movs	r3, #0
 801d082:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 801d086:	f7e3 fd1f 	bl	8000ac8 <__aeabi_dcmpeq>
 801d08a:	4680      	mov	r8, r0
 801d08c:	b150      	cbz	r0, 801d0a4 <_dtoa_r+0xa4>
 801d08e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d090:	2301      	movs	r3, #1
 801d092:	6013      	str	r3, [r2, #0]
 801d094:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d096:	b113      	cbz	r3, 801d09e <_dtoa_r+0x9e>
 801d098:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d09a:	4b82      	ldr	r3, [pc, #520]	@ (801d2a4 <_dtoa_r+0x2a4>)
 801d09c:	6013      	str	r3, [r2, #0]
 801d09e:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 801d2bc <_dtoa_r+0x2bc>
 801d0a2:	e7e4      	b.n	801d06e <_dtoa_r+0x6e>
 801d0a4:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 801d0a8:	aa16      	add	r2, sp, #88	@ 0x58
 801d0aa:	a917      	add	r1, sp, #92	@ 0x5c
 801d0ac:	4658      	mov	r0, fp
 801d0ae:	f001 f841 	bl	801e134 <__d2b>
 801d0b2:	f3c7 560a 	ubfx	r6, r7, #20, #11
 801d0b6:	4681      	mov	r9, r0
 801d0b8:	2e00      	cmp	r6, #0
 801d0ba:	d077      	beq.n	801d1ac <_dtoa_r+0x1ac>
 801d0bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d0be:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 801d0c2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801d0c6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d0ca:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 801d0ce:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 801d0d2:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 801d0d6:	4619      	mov	r1, r3
 801d0d8:	2200      	movs	r2, #0
 801d0da:	4b73      	ldr	r3, [pc, #460]	@ (801d2a8 <_dtoa_r+0x2a8>)
 801d0dc:	f7e3 f8d4 	bl	8000288 <__aeabi_dsub>
 801d0e0:	a369      	add	r3, pc, #420	@ (adr r3, 801d288 <_dtoa_r+0x288>)
 801d0e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d0e6:	f7e3 fa87 	bl	80005f8 <__aeabi_dmul>
 801d0ea:	a369      	add	r3, pc, #420	@ (adr r3, 801d290 <_dtoa_r+0x290>)
 801d0ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d0f0:	f7e3 f8cc 	bl	800028c <__adddf3>
 801d0f4:	4604      	mov	r4, r0
 801d0f6:	4630      	mov	r0, r6
 801d0f8:	460d      	mov	r5, r1
 801d0fa:	f7e3 fa13 	bl	8000524 <__aeabi_i2d>
 801d0fe:	a366      	add	r3, pc, #408	@ (adr r3, 801d298 <_dtoa_r+0x298>)
 801d100:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d104:	f7e3 fa78 	bl	80005f8 <__aeabi_dmul>
 801d108:	4602      	mov	r2, r0
 801d10a:	460b      	mov	r3, r1
 801d10c:	4620      	mov	r0, r4
 801d10e:	4629      	mov	r1, r5
 801d110:	f7e3 f8bc 	bl	800028c <__adddf3>
 801d114:	4604      	mov	r4, r0
 801d116:	460d      	mov	r5, r1
 801d118:	f7e3 fd1e 	bl	8000b58 <__aeabi_d2iz>
 801d11c:	2200      	movs	r2, #0
 801d11e:	4607      	mov	r7, r0
 801d120:	2300      	movs	r3, #0
 801d122:	4620      	mov	r0, r4
 801d124:	4629      	mov	r1, r5
 801d126:	f7e3 fcd9 	bl	8000adc <__aeabi_dcmplt>
 801d12a:	b140      	cbz	r0, 801d13e <_dtoa_r+0x13e>
 801d12c:	4638      	mov	r0, r7
 801d12e:	f7e3 f9f9 	bl	8000524 <__aeabi_i2d>
 801d132:	4622      	mov	r2, r4
 801d134:	462b      	mov	r3, r5
 801d136:	f7e3 fcc7 	bl	8000ac8 <__aeabi_dcmpeq>
 801d13a:	b900      	cbnz	r0, 801d13e <_dtoa_r+0x13e>
 801d13c:	3f01      	subs	r7, #1
 801d13e:	2f16      	cmp	r7, #22
 801d140:	d851      	bhi.n	801d1e6 <_dtoa_r+0x1e6>
 801d142:	4b5a      	ldr	r3, [pc, #360]	@ (801d2ac <_dtoa_r+0x2ac>)
 801d144:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d148:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d14c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d150:	f7e3 fcc4 	bl	8000adc <__aeabi_dcmplt>
 801d154:	2800      	cmp	r0, #0
 801d156:	d048      	beq.n	801d1ea <_dtoa_r+0x1ea>
 801d158:	3f01      	subs	r7, #1
 801d15a:	2300      	movs	r3, #0
 801d15c:	9312      	str	r3, [sp, #72]	@ 0x48
 801d15e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d160:	1b9b      	subs	r3, r3, r6
 801d162:	1e5a      	subs	r2, r3, #1
 801d164:	bf44      	itt	mi
 801d166:	f1c3 0801 	rsbmi	r8, r3, #1
 801d16a:	2300      	movmi	r3, #0
 801d16c:	9208      	str	r2, [sp, #32]
 801d16e:	bf54      	ite	pl
 801d170:	f04f 0800 	movpl.w	r8, #0
 801d174:	9308      	strmi	r3, [sp, #32]
 801d176:	2f00      	cmp	r7, #0
 801d178:	db39      	blt.n	801d1ee <_dtoa_r+0x1ee>
 801d17a:	9b08      	ldr	r3, [sp, #32]
 801d17c:	970f      	str	r7, [sp, #60]	@ 0x3c
 801d17e:	443b      	add	r3, r7
 801d180:	9308      	str	r3, [sp, #32]
 801d182:	2300      	movs	r3, #0
 801d184:	930a      	str	r3, [sp, #40]	@ 0x28
 801d186:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d188:	2b09      	cmp	r3, #9
 801d18a:	d865      	bhi.n	801d258 <_dtoa_r+0x258>
 801d18c:	2b05      	cmp	r3, #5
 801d18e:	bfc4      	itt	gt
 801d190:	3b04      	subgt	r3, #4
 801d192:	9309      	strgt	r3, [sp, #36]	@ 0x24
 801d194:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d196:	f1a3 0302 	sub.w	r3, r3, #2
 801d19a:	bfcc      	ite	gt
 801d19c:	2400      	movgt	r4, #0
 801d19e:	2401      	movle	r4, #1
 801d1a0:	2b03      	cmp	r3, #3
 801d1a2:	d864      	bhi.n	801d26e <_dtoa_r+0x26e>
 801d1a4:	e8df f003 	tbb	[pc, r3]
 801d1a8:	5635372a 	.word	0x5635372a
 801d1ac:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 801d1b0:	441e      	add	r6, r3
 801d1b2:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 801d1b6:	2b20      	cmp	r3, #32
 801d1b8:	bfc1      	itttt	gt
 801d1ba:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 801d1be:	409f      	lslgt	r7, r3
 801d1c0:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 801d1c4:	fa24 f303 	lsrgt.w	r3, r4, r3
 801d1c8:	bfd6      	itet	le
 801d1ca:	f1c3 0320 	rsble	r3, r3, #32
 801d1ce:	ea47 0003 	orrgt.w	r0, r7, r3
 801d1d2:	fa04 f003 	lslle.w	r0, r4, r3
 801d1d6:	f7e3 f995 	bl	8000504 <__aeabi_ui2d>
 801d1da:	2201      	movs	r2, #1
 801d1dc:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 801d1e0:	3e01      	subs	r6, #1
 801d1e2:	9214      	str	r2, [sp, #80]	@ 0x50
 801d1e4:	e777      	b.n	801d0d6 <_dtoa_r+0xd6>
 801d1e6:	2301      	movs	r3, #1
 801d1e8:	e7b8      	b.n	801d15c <_dtoa_r+0x15c>
 801d1ea:	9012      	str	r0, [sp, #72]	@ 0x48
 801d1ec:	e7b7      	b.n	801d15e <_dtoa_r+0x15e>
 801d1ee:	427b      	negs	r3, r7
 801d1f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d1f2:	2300      	movs	r3, #0
 801d1f4:	eba8 0807 	sub.w	r8, r8, r7
 801d1f8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d1fa:	e7c4      	b.n	801d186 <_dtoa_r+0x186>
 801d1fc:	2300      	movs	r3, #0
 801d1fe:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d200:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d202:	2b00      	cmp	r3, #0
 801d204:	dc36      	bgt.n	801d274 <_dtoa_r+0x274>
 801d206:	2301      	movs	r3, #1
 801d208:	9300      	str	r3, [sp, #0]
 801d20a:	9307      	str	r3, [sp, #28]
 801d20c:	461a      	mov	r2, r3
 801d20e:	920e      	str	r2, [sp, #56]	@ 0x38
 801d210:	e00b      	b.n	801d22a <_dtoa_r+0x22a>
 801d212:	2301      	movs	r3, #1
 801d214:	e7f3      	b.n	801d1fe <_dtoa_r+0x1fe>
 801d216:	2300      	movs	r3, #0
 801d218:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d21a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d21c:	18fb      	adds	r3, r7, r3
 801d21e:	9300      	str	r3, [sp, #0]
 801d220:	3301      	adds	r3, #1
 801d222:	2b01      	cmp	r3, #1
 801d224:	9307      	str	r3, [sp, #28]
 801d226:	bfb8      	it	lt
 801d228:	2301      	movlt	r3, #1
 801d22a:	2100      	movs	r1, #0
 801d22c:	2204      	movs	r2, #4
 801d22e:	f102 0014 	add.w	r0, r2, #20
 801d232:	4298      	cmp	r0, r3
 801d234:	d922      	bls.n	801d27c <_dtoa_r+0x27c>
 801d236:	f8cb 103c 	str.w	r1, [fp, #60]	@ 0x3c
 801d23a:	4658      	mov	r0, fp
 801d23c:	f000 fc9e 	bl	801db7c <_Balloc>
 801d240:	4682      	mov	sl, r0
 801d242:	2800      	cmp	r0, #0
 801d244:	d13c      	bne.n	801d2c0 <_dtoa_r+0x2c0>
 801d246:	4b1a      	ldr	r3, [pc, #104]	@ (801d2b0 <_dtoa_r+0x2b0>)
 801d248:	4602      	mov	r2, r0
 801d24a:	f240 11af 	movw	r1, #431	@ 0x1af
 801d24e:	4819      	ldr	r0, [pc, #100]	@ (801d2b4 <_dtoa_r+0x2b4>)
 801d250:	f001 fa14 	bl	801e67c <__assert_func>
 801d254:	2301      	movs	r3, #1
 801d256:	e7df      	b.n	801d218 <_dtoa_r+0x218>
 801d258:	2401      	movs	r4, #1
 801d25a:	2300      	movs	r3, #0
 801d25c:	9309      	str	r3, [sp, #36]	@ 0x24
 801d25e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d260:	f04f 33ff 	mov.w	r3, #4294967295
 801d264:	9300      	str	r3, [sp, #0]
 801d266:	9307      	str	r3, [sp, #28]
 801d268:	2200      	movs	r2, #0
 801d26a:	2312      	movs	r3, #18
 801d26c:	e7cf      	b.n	801d20e <_dtoa_r+0x20e>
 801d26e:	2301      	movs	r3, #1
 801d270:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d272:	e7f5      	b.n	801d260 <_dtoa_r+0x260>
 801d274:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d276:	9300      	str	r3, [sp, #0]
 801d278:	9307      	str	r3, [sp, #28]
 801d27a:	e7d6      	b.n	801d22a <_dtoa_r+0x22a>
 801d27c:	3101      	adds	r1, #1
 801d27e:	0052      	lsls	r2, r2, #1
 801d280:	e7d5      	b.n	801d22e <_dtoa_r+0x22e>
 801d282:	bf00      	nop
 801d284:	f3af 8000 	nop.w
 801d288:	636f4361 	.word	0x636f4361
 801d28c:	3fd287a7 	.word	0x3fd287a7
 801d290:	8b60c8b3 	.word	0x8b60c8b3
 801d294:	3fc68a28 	.word	0x3fc68a28
 801d298:	509f79fb 	.word	0x509f79fb
 801d29c:	3fd34413 	.word	0x3fd34413
 801d2a0:	7ff00000 	.word	0x7ff00000
 801d2a4:	08021757 	.word	0x08021757
 801d2a8:	3ff80000 	.word	0x3ff80000
 801d2ac:	08021888 	.word	0x08021888
 801d2b0:	0802178f 	.word	0x0802178f
 801d2b4:	080217a0 	.word	0x080217a0
 801d2b8:	0802178b 	.word	0x0802178b
 801d2bc:	08021756 	.word	0x08021756
 801d2c0:	9b07      	ldr	r3, [sp, #28]
 801d2c2:	f8cb 0038 	str.w	r0, [fp, #56]	@ 0x38
 801d2c6:	2b0e      	cmp	r3, #14
 801d2c8:	f200 80a4 	bhi.w	801d414 <_dtoa_r+0x414>
 801d2cc:	2c00      	cmp	r4, #0
 801d2ce:	f000 80a1 	beq.w	801d414 <_dtoa_r+0x414>
 801d2d2:	2f00      	cmp	r7, #0
 801d2d4:	dd33      	ble.n	801d33e <_dtoa_r+0x33e>
 801d2d6:	4bae      	ldr	r3, [pc, #696]	@ (801d590 <_dtoa_r+0x590>)
 801d2d8:	f007 020f 	and.w	r2, r7, #15
 801d2dc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d2e0:	ed93 7b00 	vldr	d7, [r3]
 801d2e4:	05f8      	lsls	r0, r7, #23
 801d2e6:	ed8d 7b04 	vstr	d7, [sp, #16]
 801d2ea:	ea4f 1427 	mov.w	r4, r7, asr #4
 801d2ee:	d516      	bpl.n	801d31e <_dtoa_r+0x31e>
 801d2f0:	4ba8      	ldr	r3, [pc, #672]	@ (801d594 <_dtoa_r+0x594>)
 801d2f2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d2f6:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801d2fa:	f7e3 faa7 	bl	800084c <__aeabi_ddiv>
 801d2fe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d302:	f004 040f 	and.w	r4, r4, #15
 801d306:	2603      	movs	r6, #3
 801d308:	4da2      	ldr	r5, [pc, #648]	@ (801d594 <_dtoa_r+0x594>)
 801d30a:	b954      	cbnz	r4, 801d322 <_dtoa_r+0x322>
 801d30c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801d310:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d314:	f7e3 fa9a 	bl	800084c <__aeabi_ddiv>
 801d318:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d31c:	e028      	b.n	801d370 <_dtoa_r+0x370>
 801d31e:	2602      	movs	r6, #2
 801d320:	e7f2      	b.n	801d308 <_dtoa_r+0x308>
 801d322:	07e1      	lsls	r1, r4, #31
 801d324:	d508      	bpl.n	801d338 <_dtoa_r+0x338>
 801d326:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801d32a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d32e:	f7e3 f963 	bl	80005f8 <__aeabi_dmul>
 801d332:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801d336:	3601      	adds	r6, #1
 801d338:	1064      	asrs	r4, r4, #1
 801d33a:	3508      	adds	r5, #8
 801d33c:	e7e5      	b.n	801d30a <_dtoa_r+0x30a>
 801d33e:	f000 80d2 	beq.w	801d4e6 <_dtoa_r+0x4e6>
 801d342:	427c      	negs	r4, r7
 801d344:	4b92      	ldr	r3, [pc, #584]	@ (801d590 <_dtoa_r+0x590>)
 801d346:	4d93      	ldr	r5, [pc, #588]	@ (801d594 <_dtoa_r+0x594>)
 801d348:	f004 020f 	and.w	r2, r4, #15
 801d34c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d350:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d354:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d358:	f7e3 f94e 	bl	80005f8 <__aeabi_dmul>
 801d35c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d360:	1124      	asrs	r4, r4, #4
 801d362:	2300      	movs	r3, #0
 801d364:	2602      	movs	r6, #2
 801d366:	2c00      	cmp	r4, #0
 801d368:	f040 80b2 	bne.w	801d4d0 <_dtoa_r+0x4d0>
 801d36c:	2b00      	cmp	r3, #0
 801d36e:	d1d3      	bne.n	801d318 <_dtoa_r+0x318>
 801d370:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d372:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801d376:	2b00      	cmp	r3, #0
 801d378:	f000 80b7 	beq.w	801d4ea <_dtoa_r+0x4ea>
 801d37c:	4b86      	ldr	r3, [pc, #536]	@ (801d598 <_dtoa_r+0x598>)
 801d37e:	2200      	movs	r2, #0
 801d380:	4620      	mov	r0, r4
 801d382:	4629      	mov	r1, r5
 801d384:	f7e3 fbaa 	bl	8000adc <__aeabi_dcmplt>
 801d388:	2800      	cmp	r0, #0
 801d38a:	f000 80ae 	beq.w	801d4ea <_dtoa_r+0x4ea>
 801d38e:	9b07      	ldr	r3, [sp, #28]
 801d390:	2b00      	cmp	r3, #0
 801d392:	f000 80aa 	beq.w	801d4ea <_dtoa_r+0x4ea>
 801d396:	9b00      	ldr	r3, [sp, #0]
 801d398:	2b00      	cmp	r3, #0
 801d39a:	dd37      	ble.n	801d40c <_dtoa_r+0x40c>
 801d39c:	1e7b      	subs	r3, r7, #1
 801d39e:	9304      	str	r3, [sp, #16]
 801d3a0:	4620      	mov	r0, r4
 801d3a2:	4b7e      	ldr	r3, [pc, #504]	@ (801d59c <_dtoa_r+0x59c>)
 801d3a4:	2200      	movs	r2, #0
 801d3a6:	4629      	mov	r1, r5
 801d3a8:	f7e3 f926 	bl	80005f8 <__aeabi_dmul>
 801d3ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d3b0:	9c00      	ldr	r4, [sp, #0]
 801d3b2:	3601      	adds	r6, #1
 801d3b4:	4630      	mov	r0, r6
 801d3b6:	f7e3 f8b5 	bl	8000524 <__aeabi_i2d>
 801d3ba:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d3be:	f7e3 f91b 	bl	80005f8 <__aeabi_dmul>
 801d3c2:	4b77      	ldr	r3, [pc, #476]	@ (801d5a0 <_dtoa_r+0x5a0>)
 801d3c4:	2200      	movs	r2, #0
 801d3c6:	f7e2 ff61 	bl	800028c <__adddf3>
 801d3ca:	4605      	mov	r5, r0
 801d3cc:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 801d3d0:	2c00      	cmp	r4, #0
 801d3d2:	f040 808d 	bne.w	801d4f0 <_dtoa_r+0x4f0>
 801d3d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d3da:	4b72      	ldr	r3, [pc, #456]	@ (801d5a4 <_dtoa_r+0x5a4>)
 801d3dc:	2200      	movs	r2, #0
 801d3de:	f7e2 ff53 	bl	8000288 <__aeabi_dsub>
 801d3e2:	4602      	mov	r2, r0
 801d3e4:	460b      	mov	r3, r1
 801d3e6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d3ea:	462a      	mov	r2, r5
 801d3ec:	4633      	mov	r3, r6
 801d3ee:	f7e3 fb93 	bl	8000b18 <__aeabi_dcmpgt>
 801d3f2:	2800      	cmp	r0, #0
 801d3f4:	f040 828c 	bne.w	801d910 <_dtoa_r+0x910>
 801d3f8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d3fc:	462a      	mov	r2, r5
 801d3fe:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 801d402:	f7e3 fb6b 	bl	8000adc <__aeabi_dcmplt>
 801d406:	2800      	cmp	r0, #0
 801d408:	f040 8129 	bne.w	801d65e <_dtoa_r+0x65e>
 801d40c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 801d410:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801d414:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d416:	2b00      	cmp	r3, #0
 801d418:	f2c0 815b 	blt.w	801d6d2 <_dtoa_r+0x6d2>
 801d41c:	2f0e      	cmp	r7, #14
 801d41e:	f300 8158 	bgt.w	801d6d2 <_dtoa_r+0x6d2>
 801d422:	4b5b      	ldr	r3, [pc, #364]	@ (801d590 <_dtoa_r+0x590>)
 801d424:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d428:	ed93 7b00 	vldr	d7, [r3]
 801d42c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d42e:	2b00      	cmp	r3, #0
 801d430:	ed8d 7b00 	vstr	d7, [sp]
 801d434:	da03      	bge.n	801d43e <_dtoa_r+0x43e>
 801d436:	9b07      	ldr	r3, [sp, #28]
 801d438:	2b00      	cmp	r3, #0
 801d43a:	f340 8102 	ble.w	801d642 <_dtoa_r+0x642>
 801d43e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801d442:	4656      	mov	r6, sl
 801d444:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d448:	4620      	mov	r0, r4
 801d44a:	4629      	mov	r1, r5
 801d44c:	f7e3 f9fe 	bl	800084c <__aeabi_ddiv>
 801d450:	f7e3 fb82 	bl	8000b58 <__aeabi_d2iz>
 801d454:	4680      	mov	r8, r0
 801d456:	f7e3 f865 	bl	8000524 <__aeabi_i2d>
 801d45a:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d45e:	f7e3 f8cb 	bl	80005f8 <__aeabi_dmul>
 801d462:	4602      	mov	r2, r0
 801d464:	460b      	mov	r3, r1
 801d466:	4620      	mov	r0, r4
 801d468:	4629      	mov	r1, r5
 801d46a:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 801d46e:	f7e2 ff0b 	bl	8000288 <__aeabi_dsub>
 801d472:	f806 4b01 	strb.w	r4, [r6], #1
 801d476:	9d07      	ldr	r5, [sp, #28]
 801d478:	eba6 040a 	sub.w	r4, r6, sl
 801d47c:	42a5      	cmp	r5, r4
 801d47e:	4602      	mov	r2, r0
 801d480:	460b      	mov	r3, r1
 801d482:	f040 8118 	bne.w	801d6b6 <_dtoa_r+0x6b6>
 801d486:	f7e2 ff01 	bl	800028c <__adddf3>
 801d48a:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d48e:	4604      	mov	r4, r0
 801d490:	460d      	mov	r5, r1
 801d492:	f7e3 fb41 	bl	8000b18 <__aeabi_dcmpgt>
 801d496:	2800      	cmp	r0, #0
 801d498:	f040 80fa 	bne.w	801d690 <_dtoa_r+0x690>
 801d49c:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d4a0:	4620      	mov	r0, r4
 801d4a2:	4629      	mov	r1, r5
 801d4a4:	f7e3 fb10 	bl	8000ac8 <__aeabi_dcmpeq>
 801d4a8:	b118      	cbz	r0, 801d4b2 <_dtoa_r+0x4b2>
 801d4aa:	f018 0f01 	tst.w	r8, #1
 801d4ae:	f040 80ef 	bne.w	801d690 <_dtoa_r+0x690>
 801d4b2:	4649      	mov	r1, r9
 801d4b4:	4658      	mov	r0, fp
 801d4b6:	f000 fb86 	bl	801dbc6 <_Bfree>
 801d4ba:	2300      	movs	r3, #0
 801d4bc:	7033      	strb	r3, [r6, #0]
 801d4be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d4c0:	3701      	adds	r7, #1
 801d4c2:	601f      	str	r7, [r3, #0]
 801d4c4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d4c6:	2b00      	cmp	r3, #0
 801d4c8:	f43f add1 	beq.w	801d06e <_dtoa_r+0x6e>
 801d4cc:	601e      	str	r6, [r3, #0]
 801d4ce:	e5ce      	b.n	801d06e <_dtoa_r+0x6e>
 801d4d0:	07e2      	lsls	r2, r4, #31
 801d4d2:	d505      	bpl.n	801d4e0 <_dtoa_r+0x4e0>
 801d4d4:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d4d8:	f7e3 f88e 	bl	80005f8 <__aeabi_dmul>
 801d4dc:	3601      	adds	r6, #1
 801d4de:	2301      	movs	r3, #1
 801d4e0:	1064      	asrs	r4, r4, #1
 801d4e2:	3508      	adds	r5, #8
 801d4e4:	e73f      	b.n	801d366 <_dtoa_r+0x366>
 801d4e6:	2602      	movs	r6, #2
 801d4e8:	e742      	b.n	801d370 <_dtoa_r+0x370>
 801d4ea:	9c07      	ldr	r4, [sp, #28]
 801d4ec:	9704      	str	r7, [sp, #16]
 801d4ee:	e761      	b.n	801d3b4 <_dtoa_r+0x3b4>
 801d4f0:	4b27      	ldr	r3, [pc, #156]	@ (801d590 <_dtoa_r+0x590>)
 801d4f2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801d4f4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801d4f8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801d4fc:	4454      	add	r4, sl
 801d4fe:	2900      	cmp	r1, #0
 801d500:	d054      	beq.n	801d5ac <_dtoa_r+0x5ac>
 801d502:	4929      	ldr	r1, [pc, #164]	@ (801d5a8 <_dtoa_r+0x5a8>)
 801d504:	2000      	movs	r0, #0
 801d506:	f7e3 f9a1 	bl	800084c <__aeabi_ddiv>
 801d50a:	4633      	mov	r3, r6
 801d50c:	462a      	mov	r2, r5
 801d50e:	f7e2 febb 	bl	8000288 <__aeabi_dsub>
 801d512:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d516:	4656      	mov	r6, sl
 801d518:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d51c:	f7e3 fb1c 	bl	8000b58 <__aeabi_d2iz>
 801d520:	4605      	mov	r5, r0
 801d522:	f7e2 ffff 	bl	8000524 <__aeabi_i2d>
 801d526:	4602      	mov	r2, r0
 801d528:	460b      	mov	r3, r1
 801d52a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d52e:	f7e2 feab 	bl	8000288 <__aeabi_dsub>
 801d532:	3530      	adds	r5, #48	@ 0x30
 801d534:	4602      	mov	r2, r0
 801d536:	460b      	mov	r3, r1
 801d538:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d53c:	f806 5b01 	strb.w	r5, [r6], #1
 801d540:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d544:	f7e3 faca 	bl	8000adc <__aeabi_dcmplt>
 801d548:	2800      	cmp	r0, #0
 801d54a:	d172      	bne.n	801d632 <_dtoa_r+0x632>
 801d54c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d550:	4911      	ldr	r1, [pc, #68]	@ (801d598 <_dtoa_r+0x598>)
 801d552:	2000      	movs	r0, #0
 801d554:	f7e2 fe98 	bl	8000288 <__aeabi_dsub>
 801d558:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d55c:	f7e3 fabe 	bl	8000adc <__aeabi_dcmplt>
 801d560:	2800      	cmp	r0, #0
 801d562:	f040 8096 	bne.w	801d692 <_dtoa_r+0x692>
 801d566:	42a6      	cmp	r6, r4
 801d568:	f43f af50 	beq.w	801d40c <_dtoa_r+0x40c>
 801d56c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801d570:	4b0a      	ldr	r3, [pc, #40]	@ (801d59c <_dtoa_r+0x59c>)
 801d572:	2200      	movs	r2, #0
 801d574:	f7e3 f840 	bl	80005f8 <__aeabi_dmul>
 801d578:	4b08      	ldr	r3, [pc, #32]	@ (801d59c <_dtoa_r+0x59c>)
 801d57a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d57e:	2200      	movs	r2, #0
 801d580:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d584:	f7e3 f838 	bl	80005f8 <__aeabi_dmul>
 801d588:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d58c:	e7c4      	b.n	801d518 <_dtoa_r+0x518>
 801d58e:	bf00      	nop
 801d590:	08021888 	.word	0x08021888
 801d594:	08021860 	.word	0x08021860
 801d598:	3ff00000 	.word	0x3ff00000
 801d59c:	40240000 	.word	0x40240000
 801d5a0:	401c0000 	.word	0x401c0000
 801d5a4:	40140000 	.word	0x40140000
 801d5a8:	3fe00000 	.word	0x3fe00000
 801d5ac:	4631      	mov	r1, r6
 801d5ae:	4628      	mov	r0, r5
 801d5b0:	f7e3 f822 	bl	80005f8 <__aeabi_dmul>
 801d5b4:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d5b8:	9415      	str	r4, [sp, #84]	@ 0x54
 801d5ba:	4656      	mov	r6, sl
 801d5bc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d5c0:	f7e3 faca 	bl	8000b58 <__aeabi_d2iz>
 801d5c4:	4605      	mov	r5, r0
 801d5c6:	f7e2 ffad 	bl	8000524 <__aeabi_i2d>
 801d5ca:	4602      	mov	r2, r0
 801d5cc:	460b      	mov	r3, r1
 801d5ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d5d2:	f7e2 fe59 	bl	8000288 <__aeabi_dsub>
 801d5d6:	3530      	adds	r5, #48	@ 0x30
 801d5d8:	f806 5b01 	strb.w	r5, [r6], #1
 801d5dc:	4602      	mov	r2, r0
 801d5de:	460b      	mov	r3, r1
 801d5e0:	42a6      	cmp	r6, r4
 801d5e2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d5e6:	f04f 0200 	mov.w	r2, #0
 801d5ea:	d124      	bne.n	801d636 <_dtoa_r+0x636>
 801d5ec:	4bac      	ldr	r3, [pc, #688]	@ (801d8a0 <_dtoa_r+0x8a0>)
 801d5ee:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801d5f2:	f7e2 fe4b 	bl	800028c <__adddf3>
 801d5f6:	4602      	mov	r2, r0
 801d5f8:	460b      	mov	r3, r1
 801d5fa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d5fe:	f7e3 fa8b 	bl	8000b18 <__aeabi_dcmpgt>
 801d602:	2800      	cmp	r0, #0
 801d604:	d145      	bne.n	801d692 <_dtoa_r+0x692>
 801d606:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d60a:	49a5      	ldr	r1, [pc, #660]	@ (801d8a0 <_dtoa_r+0x8a0>)
 801d60c:	2000      	movs	r0, #0
 801d60e:	f7e2 fe3b 	bl	8000288 <__aeabi_dsub>
 801d612:	4602      	mov	r2, r0
 801d614:	460b      	mov	r3, r1
 801d616:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d61a:	f7e3 fa5f 	bl	8000adc <__aeabi_dcmplt>
 801d61e:	2800      	cmp	r0, #0
 801d620:	f43f aef4 	beq.w	801d40c <_dtoa_r+0x40c>
 801d624:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801d626:	1e73      	subs	r3, r6, #1
 801d628:	9315      	str	r3, [sp, #84]	@ 0x54
 801d62a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 801d62e:	2b30      	cmp	r3, #48	@ 0x30
 801d630:	d0f8      	beq.n	801d624 <_dtoa_r+0x624>
 801d632:	9f04      	ldr	r7, [sp, #16]
 801d634:	e73d      	b.n	801d4b2 <_dtoa_r+0x4b2>
 801d636:	4b9b      	ldr	r3, [pc, #620]	@ (801d8a4 <_dtoa_r+0x8a4>)
 801d638:	f7e2 ffde 	bl	80005f8 <__aeabi_dmul>
 801d63c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d640:	e7bc      	b.n	801d5bc <_dtoa_r+0x5bc>
 801d642:	d10c      	bne.n	801d65e <_dtoa_r+0x65e>
 801d644:	4b98      	ldr	r3, [pc, #608]	@ (801d8a8 <_dtoa_r+0x8a8>)
 801d646:	2200      	movs	r2, #0
 801d648:	e9dd 0100 	ldrd	r0, r1, [sp]
 801d64c:	f7e2 ffd4 	bl	80005f8 <__aeabi_dmul>
 801d650:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d654:	f7e3 fa56 	bl	8000b04 <__aeabi_dcmpge>
 801d658:	2800      	cmp	r0, #0
 801d65a:	f000 8157 	beq.w	801d90c <_dtoa_r+0x90c>
 801d65e:	2400      	movs	r4, #0
 801d660:	4625      	mov	r5, r4
 801d662:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d664:	43db      	mvns	r3, r3
 801d666:	9304      	str	r3, [sp, #16]
 801d668:	4656      	mov	r6, sl
 801d66a:	2700      	movs	r7, #0
 801d66c:	4621      	mov	r1, r4
 801d66e:	4658      	mov	r0, fp
 801d670:	f000 faa9 	bl	801dbc6 <_Bfree>
 801d674:	2d00      	cmp	r5, #0
 801d676:	d0dc      	beq.n	801d632 <_dtoa_r+0x632>
 801d678:	b12f      	cbz	r7, 801d686 <_dtoa_r+0x686>
 801d67a:	42af      	cmp	r7, r5
 801d67c:	d003      	beq.n	801d686 <_dtoa_r+0x686>
 801d67e:	4639      	mov	r1, r7
 801d680:	4658      	mov	r0, fp
 801d682:	f000 faa0 	bl	801dbc6 <_Bfree>
 801d686:	4629      	mov	r1, r5
 801d688:	4658      	mov	r0, fp
 801d68a:	f000 fa9c 	bl	801dbc6 <_Bfree>
 801d68e:	e7d0      	b.n	801d632 <_dtoa_r+0x632>
 801d690:	9704      	str	r7, [sp, #16]
 801d692:	4633      	mov	r3, r6
 801d694:	461e      	mov	r6, r3
 801d696:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d69a:	2a39      	cmp	r2, #57	@ 0x39
 801d69c:	d107      	bne.n	801d6ae <_dtoa_r+0x6ae>
 801d69e:	459a      	cmp	sl, r3
 801d6a0:	d1f8      	bne.n	801d694 <_dtoa_r+0x694>
 801d6a2:	9a04      	ldr	r2, [sp, #16]
 801d6a4:	3201      	adds	r2, #1
 801d6a6:	9204      	str	r2, [sp, #16]
 801d6a8:	2230      	movs	r2, #48	@ 0x30
 801d6aa:	f88a 2000 	strb.w	r2, [sl]
 801d6ae:	781a      	ldrb	r2, [r3, #0]
 801d6b0:	3201      	adds	r2, #1
 801d6b2:	701a      	strb	r2, [r3, #0]
 801d6b4:	e7bd      	b.n	801d632 <_dtoa_r+0x632>
 801d6b6:	4b7b      	ldr	r3, [pc, #492]	@ (801d8a4 <_dtoa_r+0x8a4>)
 801d6b8:	2200      	movs	r2, #0
 801d6ba:	f7e2 ff9d 	bl	80005f8 <__aeabi_dmul>
 801d6be:	2200      	movs	r2, #0
 801d6c0:	2300      	movs	r3, #0
 801d6c2:	4604      	mov	r4, r0
 801d6c4:	460d      	mov	r5, r1
 801d6c6:	f7e3 f9ff 	bl	8000ac8 <__aeabi_dcmpeq>
 801d6ca:	2800      	cmp	r0, #0
 801d6cc:	f43f aeba 	beq.w	801d444 <_dtoa_r+0x444>
 801d6d0:	e6ef      	b.n	801d4b2 <_dtoa_r+0x4b2>
 801d6d2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d6d4:	2a00      	cmp	r2, #0
 801d6d6:	f000 80db 	beq.w	801d890 <_dtoa_r+0x890>
 801d6da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d6dc:	2a01      	cmp	r2, #1
 801d6de:	f300 80bf 	bgt.w	801d860 <_dtoa_r+0x860>
 801d6e2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d6e4:	2a00      	cmp	r2, #0
 801d6e6:	f000 80b7 	beq.w	801d858 <_dtoa_r+0x858>
 801d6ea:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 801d6ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d6f0:	4646      	mov	r6, r8
 801d6f2:	9a08      	ldr	r2, [sp, #32]
 801d6f4:	2101      	movs	r1, #1
 801d6f6:	441a      	add	r2, r3
 801d6f8:	4658      	mov	r0, fp
 801d6fa:	4498      	add	r8, r3
 801d6fc:	9208      	str	r2, [sp, #32]
 801d6fe:	f000 fafd 	bl	801dcfc <__i2b>
 801d702:	4605      	mov	r5, r0
 801d704:	b15e      	cbz	r6, 801d71e <_dtoa_r+0x71e>
 801d706:	9b08      	ldr	r3, [sp, #32]
 801d708:	2b00      	cmp	r3, #0
 801d70a:	dd08      	ble.n	801d71e <_dtoa_r+0x71e>
 801d70c:	42b3      	cmp	r3, r6
 801d70e:	9a08      	ldr	r2, [sp, #32]
 801d710:	bfa8      	it	ge
 801d712:	4633      	movge	r3, r6
 801d714:	eba8 0803 	sub.w	r8, r8, r3
 801d718:	1af6      	subs	r6, r6, r3
 801d71a:	1ad3      	subs	r3, r2, r3
 801d71c:	9308      	str	r3, [sp, #32]
 801d71e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d720:	b1f3      	cbz	r3, 801d760 <_dtoa_r+0x760>
 801d722:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d724:	2b00      	cmp	r3, #0
 801d726:	f000 80b7 	beq.w	801d898 <_dtoa_r+0x898>
 801d72a:	b18c      	cbz	r4, 801d750 <_dtoa_r+0x750>
 801d72c:	4629      	mov	r1, r5
 801d72e:	4622      	mov	r2, r4
 801d730:	4658      	mov	r0, fp
 801d732:	f000 fba3 	bl	801de7c <__pow5mult>
 801d736:	464a      	mov	r2, r9
 801d738:	4601      	mov	r1, r0
 801d73a:	4605      	mov	r5, r0
 801d73c:	4658      	mov	r0, fp
 801d73e:	f000 faf3 	bl	801dd28 <__multiply>
 801d742:	4649      	mov	r1, r9
 801d744:	9004      	str	r0, [sp, #16]
 801d746:	4658      	mov	r0, fp
 801d748:	f000 fa3d 	bl	801dbc6 <_Bfree>
 801d74c:	9b04      	ldr	r3, [sp, #16]
 801d74e:	4699      	mov	r9, r3
 801d750:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d752:	1b1a      	subs	r2, r3, r4
 801d754:	d004      	beq.n	801d760 <_dtoa_r+0x760>
 801d756:	4649      	mov	r1, r9
 801d758:	4658      	mov	r0, fp
 801d75a:	f000 fb8f 	bl	801de7c <__pow5mult>
 801d75e:	4681      	mov	r9, r0
 801d760:	2101      	movs	r1, #1
 801d762:	4658      	mov	r0, fp
 801d764:	f000 faca 	bl	801dcfc <__i2b>
 801d768:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d76a:	4604      	mov	r4, r0
 801d76c:	2b00      	cmp	r3, #0
 801d76e:	f000 81cc 	beq.w	801db0a <_dtoa_r+0xb0a>
 801d772:	461a      	mov	r2, r3
 801d774:	4601      	mov	r1, r0
 801d776:	4658      	mov	r0, fp
 801d778:	f000 fb80 	bl	801de7c <__pow5mult>
 801d77c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d77e:	2b01      	cmp	r3, #1
 801d780:	4604      	mov	r4, r0
 801d782:	f300 8095 	bgt.w	801d8b0 <_dtoa_r+0x8b0>
 801d786:	9b02      	ldr	r3, [sp, #8]
 801d788:	2b00      	cmp	r3, #0
 801d78a:	f040 8087 	bne.w	801d89c <_dtoa_r+0x89c>
 801d78e:	9b03      	ldr	r3, [sp, #12]
 801d790:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801d794:	2b00      	cmp	r3, #0
 801d796:	f040 8089 	bne.w	801d8ac <_dtoa_r+0x8ac>
 801d79a:	9b03      	ldr	r3, [sp, #12]
 801d79c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801d7a0:	0d1b      	lsrs	r3, r3, #20
 801d7a2:	051b      	lsls	r3, r3, #20
 801d7a4:	b12b      	cbz	r3, 801d7b2 <_dtoa_r+0x7b2>
 801d7a6:	9b08      	ldr	r3, [sp, #32]
 801d7a8:	3301      	adds	r3, #1
 801d7aa:	9308      	str	r3, [sp, #32]
 801d7ac:	f108 0801 	add.w	r8, r8, #1
 801d7b0:	2301      	movs	r3, #1
 801d7b2:	930a      	str	r3, [sp, #40]	@ 0x28
 801d7b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d7b6:	2b00      	cmp	r3, #0
 801d7b8:	f000 81ad 	beq.w	801db16 <_dtoa_r+0xb16>
 801d7bc:	6923      	ldr	r3, [r4, #16]
 801d7be:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801d7c2:	6918      	ldr	r0, [r3, #16]
 801d7c4:	f000 fa4e 	bl	801dc64 <__hi0bits>
 801d7c8:	f1c0 0020 	rsb	r0, r0, #32
 801d7cc:	9b08      	ldr	r3, [sp, #32]
 801d7ce:	4418      	add	r0, r3
 801d7d0:	f010 001f 	ands.w	r0, r0, #31
 801d7d4:	d077      	beq.n	801d8c6 <_dtoa_r+0x8c6>
 801d7d6:	f1c0 0320 	rsb	r3, r0, #32
 801d7da:	2b04      	cmp	r3, #4
 801d7dc:	dd6b      	ble.n	801d8b6 <_dtoa_r+0x8b6>
 801d7de:	9b08      	ldr	r3, [sp, #32]
 801d7e0:	f1c0 001c 	rsb	r0, r0, #28
 801d7e4:	4403      	add	r3, r0
 801d7e6:	4480      	add	r8, r0
 801d7e8:	4406      	add	r6, r0
 801d7ea:	9308      	str	r3, [sp, #32]
 801d7ec:	f1b8 0f00 	cmp.w	r8, #0
 801d7f0:	dd05      	ble.n	801d7fe <_dtoa_r+0x7fe>
 801d7f2:	4649      	mov	r1, r9
 801d7f4:	4642      	mov	r2, r8
 801d7f6:	4658      	mov	r0, fp
 801d7f8:	f000 fb80 	bl	801defc <__lshift>
 801d7fc:	4681      	mov	r9, r0
 801d7fe:	9b08      	ldr	r3, [sp, #32]
 801d800:	2b00      	cmp	r3, #0
 801d802:	dd05      	ble.n	801d810 <_dtoa_r+0x810>
 801d804:	4621      	mov	r1, r4
 801d806:	461a      	mov	r2, r3
 801d808:	4658      	mov	r0, fp
 801d80a:	f000 fb77 	bl	801defc <__lshift>
 801d80e:	4604      	mov	r4, r0
 801d810:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d812:	2b00      	cmp	r3, #0
 801d814:	d059      	beq.n	801d8ca <_dtoa_r+0x8ca>
 801d816:	4621      	mov	r1, r4
 801d818:	4648      	mov	r0, r9
 801d81a:	f000 fbdb 	bl	801dfd4 <__mcmp>
 801d81e:	2800      	cmp	r0, #0
 801d820:	da53      	bge.n	801d8ca <_dtoa_r+0x8ca>
 801d822:	1e7b      	subs	r3, r7, #1
 801d824:	9304      	str	r3, [sp, #16]
 801d826:	4649      	mov	r1, r9
 801d828:	2300      	movs	r3, #0
 801d82a:	220a      	movs	r2, #10
 801d82c:	4658      	mov	r0, fp
 801d82e:	f000 f9d3 	bl	801dbd8 <__multadd>
 801d832:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d834:	4681      	mov	r9, r0
 801d836:	2b00      	cmp	r3, #0
 801d838:	f000 816f 	beq.w	801db1a <_dtoa_r+0xb1a>
 801d83c:	2300      	movs	r3, #0
 801d83e:	4629      	mov	r1, r5
 801d840:	220a      	movs	r2, #10
 801d842:	4658      	mov	r0, fp
 801d844:	f000 f9c8 	bl	801dbd8 <__multadd>
 801d848:	9b00      	ldr	r3, [sp, #0]
 801d84a:	2b00      	cmp	r3, #0
 801d84c:	4605      	mov	r5, r0
 801d84e:	dc67      	bgt.n	801d920 <_dtoa_r+0x920>
 801d850:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d852:	2b02      	cmp	r3, #2
 801d854:	dc41      	bgt.n	801d8da <_dtoa_r+0x8da>
 801d856:	e063      	b.n	801d920 <_dtoa_r+0x920>
 801d858:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d85a:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 801d85e:	e746      	b.n	801d6ee <_dtoa_r+0x6ee>
 801d860:	9b07      	ldr	r3, [sp, #28]
 801d862:	1e5c      	subs	r4, r3, #1
 801d864:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d866:	42a3      	cmp	r3, r4
 801d868:	bfbf      	itttt	lt
 801d86a:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 801d86c:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 801d86e:	940a      	strlt	r4, [sp, #40]	@ 0x28
 801d870:	1ae3      	sublt	r3, r4, r3
 801d872:	bfb4      	ite	lt
 801d874:	18d2      	addlt	r2, r2, r3
 801d876:	1b1c      	subge	r4, r3, r4
 801d878:	9b07      	ldr	r3, [sp, #28]
 801d87a:	bfbc      	itt	lt
 801d87c:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 801d87e:	2400      	movlt	r4, #0
 801d880:	2b00      	cmp	r3, #0
 801d882:	bfb5      	itete	lt
 801d884:	eba8 0603 	sublt.w	r6, r8, r3
 801d888:	9b07      	ldrge	r3, [sp, #28]
 801d88a:	2300      	movlt	r3, #0
 801d88c:	4646      	movge	r6, r8
 801d88e:	e730      	b.n	801d6f2 <_dtoa_r+0x6f2>
 801d890:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d892:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801d894:	4646      	mov	r6, r8
 801d896:	e735      	b.n	801d704 <_dtoa_r+0x704>
 801d898:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d89a:	e75c      	b.n	801d756 <_dtoa_r+0x756>
 801d89c:	2300      	movs	r3, #0
 801d89e:	e788      	b.n	801d7b2 <_dtoa_r+0x7b2>
 801d8a0:	3fe00000 	.word	0x3fe00000
 801d8a4:	40240000 	.word	0x40240000
 801d8a8:	40140000 	.word	0x40140000
 801d8ac:	9b02      	ldr	r3, [sp, #8]
 801d8ae:	e780      	b.n	801d7b2 <_dtoa_r+0x7b2>
 801d8b0:	2300      	movs	r3, #0
 801d8b2:	930a      	str	r3, [sp, #40]	@ 0x28
 801d8b4:	e782      	b.n	801d7bc <_dtoa_r+0x7bc>
 801d8b6:	d099      	beq.n	801d7ec <_dtoa_r+0x7ec>
 801d8b8:	9a08      	ldr	r2, [sp, #32]
 801d8ba:	331c      	adds	r3, #28
 801d8bc:	441a      	add	r2, r3
 801d8be:	4498      	add	r8, r3
 801d8c0:	441e      	add	r6, r3
 801d8c2:	9208      	str	r2, [sp, #32]
 801d8c4:	e792      	b.n	801d7ec <_dtoa_r+0x7ec>
 801d8c6:	4603      	mov	r3, r0
 801d8c8:	e7f6      	b.n	801d8b8 <_dtoa_r+0x8b8>
 801d8ca:	9b07      	ldr	r3, [sp, #28]
 801d8cc:	9704      	str	r7, [sp, #16]
 801d8ce:	2b00      	cmp	r3, #0
 801d8d0:	dc20      	bgt.n	801d914 <_dtoa_r+0x914>
 801d8d2:	9300      	str	r3, [sp, #0]
 801d8d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d8d6:	2b02      	cmp	r3, #2
 801d8d8:	dd1e      	ble.n	801d918 <_dtoa_r+0x918>
 801d8da:	9b00      	ldr	r3, [sp, #0]
 801d8dc:	2b00      	cmp	r3, #0
 801d8de:	f47f aec0 	bne.w	801d662 <_dtoa_r+0x662>
 801d8e2:	4621      	mov	r1, r4
 801d8e4:	2205      	movs	r2, #5
 801d8e6:	4658      	mov	r0, fp
 801d8e8:	f000 f976 	bl	801dbd8 <__multadd>
 801d8ec:	4601      	mov	r1, r0
 801d8ee:	4604      	mov	r4, r0
 801d8f0:	4648      	mov	r0, r9
 801d8f2:	f000 fb6f 	bl	801dfd4 <__mcmp>
 801d8f6:	2800      	cmp	r0, #0
 801d8f8:	f77f aeb3 	ble.w	801d662 <_dtoa_r+0x662>
 801d8fc:	4656      	mov	r6, sl
 801d8fe:	2331      	movs	r3, #49	@ 0x31
 801d900:	f806 3b01 	strb.w	r3, [r6], #1
 801d904:	9b04      	ldr	r3, [sp, #16]
 801d906:	3301      	adds	r3, #1
 801d908:	9304      	str	r3, [sp, #16]
 801d90a:	e6ae      	b.n	801d66a <_dtoa_r+0x66a>
 801d90c:	9c07      	ldr	r4, [sp, #28]
 801d90e:	9704      	str	r7, [sp, #16]
 801d910:	4625      	mov	r5, r4
 801d912:	e7f3      	b.n	801d8fc <_dtoa_r+0x8fc>
 801d914:	9b07      	ldr	r3, [sp, #28]
 801d916:	9300      	str	r3, [sp, #0]
 801d918:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d91a:	2b00      	cmp	r3, #0
 801d91c:	f000 8101 	beq.w	801db22 <_dtoa_r+0xb22>
 801d920:	2e00      	cmp	r6, #0
 801d922:	dd05      	ble.n	801d930 <_dtoa_r+0x930>
 801d924:	4629      	mov	r1, r5
 801d926:	4632      	mov	r2, r6
 801d928:	4658      	mov	r0, fp
 801d92a:	f000 fae7 	bl	801defc <__lshift>
 801d92e:	4605      	mov	r5, r0
 801d930:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d932:	2b00      	cmp	r3, #0
 801d934:	d059      	beq.n	801d9ea <_dtoa_r+0x9ea>
 801d936:	6869      	ldr	r1, [r5, #4]
 801d938:	4658      	mov	r0, fp
 801d93a:	f000 f91f 	bl	801db7c <_Balloc>
 801d93e:	4606      	mov	r6, r0
 801d940:	b920      	cbnz	r0, 801d94c <_dtoa_r+0x94c>
 801d942:	4b83      	ldr	r3, [pc, #524]	@ (801db50 <_dtoa_r+0xb50>)
 801d944:	4602      	mov	r2, r0
 801d946:	f240 21ef 	movw	r1, #751	@ 0x2ef
 801d94a:	e480      	b.n	801d24e <_dtoa_r+0x24e>
 801d94c:	692a      	ldr	r2, [r5, #16]
 801d94e:	3202      	adds	r2, #2
 801d950:	0092      	lsls	r2, r2, #2
 801d952:	f105 010c 	add.w	r1, r5, #12
 801d956:	300c      	adds	r0, #12
 801d958:	f7fd fbac 	bl	801b0b4 <memcpy>
 801d95c:	2201      	movs	r2, #1
 801d95e:	4631      	mov	r1, r6
 801d960:	4658      	mov	r0, fp
 801d962:	f000 facb 	bl	801defc <__lshift>
 801d966:	f10a 0301 	add.w	r3, sl, #1
 801d96a:	9307      	str	r3, [sp, #28]
 801d96c:	9b00      	ldr	r3, [sp, #0]
 801d96e:	4453      	add	r3, sl
 801d970:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d972:	9b02      	ldr	r3, [sp, #8]
 801d974:	f003 0301 	and.w	r3, r3, #1
 801d978:	462f      	mov	r7, r5
 801d97a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d97c:	4605      	mov	r5, r0
 801d97e:	9b07      	ldr	r3, [sp, #28]
 801d980:	4621      	mov	r1, r4
 801d982:	3b01      	subs	r3, #1
 801d984:	4648      	mov	r0, r9
 801d986:	9300      	str	r3, [sp, #0]
 801d988:	f7ff fab2 	bl	801cef0 <quorem>
 801d98c:	4639      	mov	r1, r7
 801d98e:	9002      	str	r0, [sp, #8]
 801d990:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801d994:	4648      	mov	r0, r9
 801d996:	f000 fb1d 	bl	801dfd4 <__mcmp>
 801d99a:	462a      	mov	r2, r5
 801d99c:	9008      	str	r0, [sp, #32]
 801d99e:	4621      	mov	r1, r4
 801d9a0:	4658      	mov	r0, fp
 801d9a2:	f000 fb33 	bl	801e00c <__mdiff>
 801d9a6:	68c2      	ldr	r2, [r0, #12]
 801d9a8:	4606      	mov	r6, r0
 801d9aa:	bb02      	cbnz	r2, 801d9ee <_dtoa_r+0x9ee>
 801d9ac:	4601      	mov	r1, r0
 801d9ae:	4648      	mov	r0, r9
 801d9b0:	f000 fb10 	bl	801dfd4 <__mcmp>
 801d9b4:	4602      	mov	r2, r0
 801d9b6:	4631      	mov	r1, r6
 801d9b8:	4658      	mov	r0, fp
 801d9ba:	920e      	str	r2, [sp, #56]	@ 0x38
 801d9bc:	f000 f903 	bl	801dbc6 <_Bfree>
 801d9c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d9c2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d9c4:	9e07      	ldr	r6, [sp, #28]
 801d9c6:	ea43 0102 	orr.w	r1, r3, r2
 801d9ca:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d9cc:	4319      	orrs	r1, r3
 801d9ce:	d110      	bne.n	801d9f2 <_dtoa_r+0x9f2>
 801d9d0:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d9d4:	d029      	beq.n	801da2a <_dtoa_r+0xa2a>
 801d9d6:	9b08      	ldr	r3, [sp, #32]
 801d9d8:	2b00      	cmp	r3, #0
 801d9da:	dd02      	ble.n	801d9e2 <_dtoa_r+0x9e2>
 801d9dc:	9b02      	ldr	r3, [sp, #8]
 801d9de:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 801d9e2:	9b00      	ldr	r3, [sp, #0]
 801d9e4:	f883 8000 	strb.w	r8, [r3]
 801d9e8:	e640      	b.n	801d66c <_dtoa_r+0x66c>
 801d9ea:	4628      	mov	r0, r5
 801d9ec:	e7bb      	b.n	801d966 <_dtoa_r+0x966>
 801d9ee:	2201      	movs	r2, #1
 801d9f0:	e7e1      	b.n	801d9b6 <_dtoa_r+0x9b6>
 801d9f2:	9b08      	ldr	r3, [sp, #32]
 801d9f4:	2b00      	cmp	r3, #0
 801d9f6:	db04      	blt.n	801da02 <_dtoa_r+0xa02>
 801d9f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d9fa:	430b      	orrs	r3, r1
 801d9fc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d9fe:	430b      	orrs	r3, r1
 801da00:	d120      	bne.n	801da44 <_dtoa_r+0xa44>
 801da02:	2a00      	cmp	r2, #0
 801da04:	dded      	ble.n	801d9e2 <_dtoa_r+0x9e2>
 801da06:	4649      	mov	r1, r9
 801da08:	2201      	movs	r2, #1
 801da0a:	4658      	mov	r0, fp
 801da0c:	f000 fa76 	bl	801defc <__lshift>
 801da10:	4621      	mov	r1, r4
 801da12:	4681      	mov	r9, r0
 801da14:	f000 fade 	bl	801dfd4 <__mcmp>
 801da18:	2800      	cmp	r0, #0
 801da1a:	dc03      	bgt.n	801da24 <_dtoa_r+0xa24>
 801da1c:	d1e1      	bne.n	801d9e2 <_dtoa_r+0x9e2>
 801da1e:	f018 0f01 	tst.w	r8, #1
 801da22:	d0de      	beq.n	801d9e2 <_dtoa_r+0x9e2>
 801da24:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801da28:	d1d8      	bne.n	801d9dc <_dtoa_r+0x9dc>
 801da2a:	9a00      	ldr	r2, [sp, #0]
 801da2c:	2339      	movs	r3, #57	@ 0x39
 801da2e:	7013      	strb	r3, [r2, #0]
 801da30:	4633      	mov	r3, r6
 801da32:	461e      	mov	r6, r3
 801da34:	3b01      	subs	r3, #1
 801da36:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 801da3a:	2a39      	cmp	r2, #57	@ 0x39
 801da3c:	d052      	beq.n	801dae4 <_dtoa_r+0xae4>
 801da3e:	3201      	adds	r2, #1
 801da40:	701a      	strb	r2, [r3, #0]
 801da42:	e613      	b.n	801d66c <_dtoa_r+0x66c>
 801da44:	2a00      	cmp	r2, #0
 801da46:	dd07      	ble.n	801da58 <_dtoa_r+0xa58>
 801da48:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801da4c:	d0ed      	beq.n	801da2a <_dtoa_r+0xa2a>
 801da4e:	9a00      	ldr	r2, [sp, #0]
 801da50:	f108 0301 	add.w	r3, r8, #1
 801da54:	7013      	strb	r3, [r2, #0]
 801da56:	e609      	b.n	801d66c <_dtoa_r+0x66c>
 801da58:	9b07      	ldr	r3, [sp, #28]
 801da5a:	9a07      	ldr	r2, [sp, #28]
 801da5c:	f803 8c01 	strb.w	r8, [r3, #-1]
 801da60:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801da62:	4293      	cmp	r3, r2
 801da64:	d028      	beq.n	801dab8 <_dtoa_r+0xab8>
 801da66:	4649      	mov	r1, r9
 801da68:	2300      	movs	r3, #0
 801da6a:	220a      	movs	r2, #10
 801da6c:	4658      	mov	r0, fp
 801da6e:	f000 f8b3 	bl	801dbd8 <__multadd>
 801da72:	42af      	cmp	r7, r5
 801da74:	4681      	mov	r9, r0
 801da76:	f04f 0300 	mov.w	r3, #0
 801da7a:	f04f 020a 	mov.w	r2, #10
 801da7e:	4639      	mov	r1, r7
 801da80:	4658      	mov	r0, fp
 801da82:	d107      	bne.n	801da94 <_dtoa_r+0xa94>
 801da84:	f000 f8a8 	bl	801dbd8 <__multadd>
 801da88:	4607      	mov	r7, r0
 801da8a:	4605      	mov	r5, r0
 801da8c:	9b07      	ldr	r3, [sp, #28]
 801da8e:	3301      	adds	r3, #1
 801da90:	9307      	str	r3, [sp, #28]
 801da92:	e774      	b.n	801d97e <_dtoa_r+0x97e>
 801da94:	f000 f8a0 	bl	801dbd8 <__multadd>
 801da98:	4629      	mov	r1, r5
 801da9a:	4607      	mov	r7, r0
 801da9c:	2300      	movs	r3, #0
 801da9e:	220a      	movs	r2, #10
 801daa0:	4658      	mov	r0, fp
 801daa2:	f000 f899 	bl	801dbd8 <__multadd>
 801daa6:	4605      	mov	r5, r0
 801daa8:	e7f0      	b.n	801da8c <_dtoa_r+0xa8c>
 801daaa:	9b00      	ldr	r3, [sp, #0]
 801daac:	2b00      	cmp	r3, #0
 801daae:	bfcc      	ite	gt
 801dab0:	461e      	movgt	r6, r3
 801dab2:	2601      	movle	r6, #1
 801dab4:	4456      	add	r6, sl
 801dab6:	2700      	movs	r7, #0
 801dab8:	4649      	mov	r1, r9
 801daba:	2201      	movs	r2, #1
 801dabc:	4658      	mov	r0, fp
 801dabe:	f000 fa1d 	bl	801defc <__lshift>
 801dac2:	4621      	mov	r1, r4
 801dac4:	4681      	mov	r9, r0
 801dac6:	f000 fa85 	bl	801dfd4 <__mcmp>
 801daca:	2800      	cmp	r0, #0
 801dacc:	dcb0      	bgt.n	801da30 <_dtoa_r+0xa30>
 801dace:	d102      	bne.n	801dad6 <_dtoa_r+0xad6>
 801dad0:	f018 0f01 	tst.w	r8, #1
 801dad4:	d1ac      	bne.n	801da30 <_dtoa_r+0xa30>
 801dad6:	4633      	mov	r3, r6
 801dad8:	461e      	mov	r6, r3
 801dada:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801dade:	2a30      	cmp	r2, #48	@ 0x30
 801dae0:	d0fa      	beq.n	801dad8 <_dtoa_r+0xad8>
 801dae2:	e5c3      	b.n	801d66c <_dtoa_r+0x66c>
 801dae4:	459a      	cmp	sl, r3
 801dae6:	d1a4      	bne.n	801da32 <_dtoa_r+0xa32>
 801dae8:	9b04      	ldr	r3, [sp, #16]
 801daea:	3301      	adds	r3, #1
 801daec:	9304      	str	r3, [sp, #16]
 801daee:	2331      	movs	r3, #49	@ 0x31
 801daf0:	f88a 3000 	strb.w	r3, [sl]
 801daf4:	e5ba      	b.n	801d66c <_dtoa_r+0x66c>
 801daf6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801daf8:	f8df a058 	ldr.w	sl, [pc, #88]	@ 801db54 <_dtoa_r+0xb54>
 801dafc:	2b00      	cmp	r3, #0
 801dafe:	f43f aab6 	beq.w	801d06e <_dtoa_r+0x6e>
 801db02:	f10a 0308 	add.w	r3, sl, #8
 801db06:	f7ff bab0 	b.w	801d06a <_dtoa_r+0x6a>
 801db0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801db0c:	2b01      	cmp	r3, #1
 801db0e:	f77f ae3a 	ble.w	801d786 <_dtoa_r+0x786>
 801db12:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801db14:	930a      	str	r3, [sp, #40]	@ 0x28
 801db16:	2001      	movs	r0, #1
 801db18:	e658      	b.n	801d7cc <_dtoa_r+0x7cc>
 801db1a:	9b00      	ldr	r3, [sp, #0]
 801db1c:	2b00      	cmp	r3, #0
 801db1e:	f77f aed9 	ble.w	801d8d4 <_dtoa_r+0x8d4>
 801db22:	4656      	mov	r6, sl
 801db24:	4621      	mov	r1, r4
 801db26:	4648      	mov	r0, r9
 801db28:	f7ff f9e2 	bl	801cef0 <quorem>
 801db2c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801db30:	f806 8b01 	strb.w	r8, [r6], #1
 801db34:	9b00      	ldr	r3, [sp, #0]
 801db36:	eba6 020a 	sub.w	r2, r6, sl
 801db3a:	4293      	cmp	r3, r2
 801db3c:	ddb5      	ble.n	801daaa <_dtoa_r+0xaaa>
 801db3e:	4649      	mov	r1, r9
 801db40:	2300      	movs	r3, #0
 801db42:	220a      	movs	r2, #10
 801db44:	4658      	mov	r0, fp
 801db46:	f000 f847 	bl	801dbd8 <__multadd>
 801db4a:	4681      	mov	r9, r0
 801db4c:	e7ea      	b.n	801db24 <_dtoa_r+0xb24>
 801db4e:	bf00      	nop
 801db50:	0802178f 	.word	0x0802178f
 801db54:	08021782 	.word	0x08021782

0801db58 <__ascii_mbtowc>:
 801db58:	b082      	sub	sp, #8
 801db5a:	b901      	cbnz	r1, 801db5e <__ascii_mbtowc+0x6>
 801db5c:	a901      	add	r1, sp, #4
 801db5e:	b142      	cbz	r2, 801db72 <__ascii_mbtowc+0x1a>
 801db60:	b14b      	cbz	r3, 801db76 <__ascii_mbtowc+0x1e>
 801db62:	7813      	ldrb	r3, [r2, #0]
 801db64:	600b      	str	r3, [r1, #0]
 801db66:	7812      	ldrb	r2, [r2, #0]
 801db68:	1e10      	subs	r0, r2, #0
 801db6a:	bf18      	it	ne
 801db6c:	2001      	movne	r0, #1
 801db6e:	b002      	add	sp, #8
 801db70:	4770      	bx	lr
 801db72:	4610      	mov	r0, r2
 801db74:	e7fb      	b.n	801db6e <__ascii_mbtowc+0x16>
 801db76:	f06f 0001 	mvn.w	r0, #1
 801db7a:	e7f8      	b.n	801db6e <__ascii_mbtowc+0x16>

0801db7c <_Balloc>:
 801db7c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801db7e:	b570      	push	{r4, r5, r6, lr}
 801db80:	4605      	mov	r5, r0
 801db82:	460c      	mov	r4, r1
 801db84:	b17b      	cbz	r3, 801dba6 <_Balloc+0x2a>
 801db86:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 801db88:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801db8c:	b9a0      	cbnz	r0, 801dbb8 <_Balloc+0x3c>
 801db8e:	2101      	movs	r1, #1
 801db90:	fa01 f604 	lsl.w	r6, r1, r4
 801db94:	1d72      	adds	r2, r6, #5
 801db96:	0092      	lsls	r2, r2, #2
 801db98:	4628      	mov	r0, r5
 801db9a:	f000 fd8d 	bl	801e6b8 <_calloc_r>
 801db9e:	b148      	cbz	r0, 801dbb4 <_Balloc+0x38>
 801dba0:	e9c0 4601 	strd	r4, r6, [r0, #4]
 801dba4:	e00b      	b.n	801dbbe <_Balloc+0x42>
 801dba6:	2221      	movs	r2, #33	@ 0x21
 801dba8:	2104      	movs	r1, #4
 801dbaa:	f000 fd85 	bl	801e6b8 <_calloc_r>
 801dbae:	6468      	str	r0, [r5, #68]	@ 0x44
 801dbb0:	2800      	cmp	r0, #0
 801dbb2:	d1e8      	bne.n	801db86 <_Balloc+0xa>
 801dbb4:	2000      	movs	r0, #0
 801dbb6:	bd70      	pop	{r4, r5, r6, pc}
 801dbb8:	6802      	ldr	r2, [r0, #0]
 801dbba:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 801dbbe:	2300      	movs	r3, #0
 801dbc0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801dbc4:	e7f7      	b.n	801dbb6 <_Balloc+0x3a>

0801dbc6 <_Bfree>:
 801dbc6:	b131      	cbz	r1, 801dbd6 <_Bfree+0x10>
 801dbc8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801dbca:	684a      	ldr	r2, [r1, #4]
 801dbcc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801dbd0:	6008      	str	r0, [r1, #0]
 801dbd2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801dbd6:	4770      	bx	lr

0801dbd8 <__multadd>:
 801dbd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801dbdc:	690d      	ldr	r5, [r1, #16]
 801dbde:	4607      	mov	r7, r0
 801dbe0:	460c      	mov	r4, r1
 801dbe2:	461e      	mov	r6, r3
 801dbe4:	f101 0c14 	add.w	ip, r1, #20
 801dbe8:	2000      	movs	r0, #0
 801dbea:	f8dc 3000 	ldr.w	r3, [ip]
 801dbee:	b299      	uxth	r1, r3
 801dbf0:	fb02 6101 	mla	r1, r2, r1, r6
 801dbf4:	0c1e      	lsrs	r6, r3, #16
 801dbf6:	0c0b      	lsrs	r3, r1, #16
 801dbf8:	fb02 3306 	mla	r3, r2, r6, r3
 801dbfc:	b289      	uxth	r1, r1
 801dbfe:	3001      	adds	r0, #1
 801dc00:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801dc04:	4285      	cmp	r5, r0
 801dc06:	f84c 1b04 	str.w	r1, [ip], #4
 801dc0a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801dc0e:	dcec      	bgt.n	801dbea <__multadd+0x12>
 801dc10:	b30e      	cbz	r6, 801dc56 <__multadd+0x7e>
 801dc12:	68a3      	ldr	r3, [r4, #8]
 801dc14:	42ab      	cmp	r3, r5
 801dc16:	dc19      	bgt.n	801dc4c <__multadd+0x74>
 801dc18:	6861      	ldr	r1, [r4, #4]
 801dc1a:	4638      	mov	r0, r7
 801dc1c:	3101      	adds	r1, #1
 801dc1e:	f7ff ffad 	bl	801db7c <_Balloc>
 801dc22:	4680      	mov	r8, r0
 801dc24:	b928      	cbnz	r0, 801dc32 <__multadd+0x5a>
 801dc26:	4602      	mov	r2, r0
 801dc28:	4b0c      	ldr	r3, [pc, #48]	@ (801dc5c <__multadd+0x84>)
 801dc2a:	480d      	ldr	r0, [pc, #52]	@ (801dc60 <__multadd+0x88>)
 801dc2c:	21ba      	movs	r1, #186	@ 0xba
 801dc2e:	f000 fd25 	bl	801e67c <__assert_func>
 801dc32:	6922      	ldr	r2, [r4, #16]
 801dc34:	3202      	adds	r2, #2
 801dc36:	f104 010c 	add.w	r1, r4, #12
 801dc3a:	0092      	lsls	r2, r2, #2
 801dc3c:	300c      	adds	r0, #12
 801dc3e:	f7fd fa39 	bl	801b0b4 <memcpy>
 801dc42:	4621      	mov	r1, r4
 801dc44:	4638      	mov	r0, r7
 801dc46:	f7ff ffbe 	bl	801dbc6 <_Bfree>
 801dc4a:	4644      	mov	r4, r8
 801dc4c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801dc50:	3501      	adds	r5, #1
 801dc52:	615e      	str	r6, [r3, #20]
 801dc54:	6125      	str	r5, [r4, #16]
 801dc56:	4620      	mov	r0, r4
 801dc58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801dc5c:	0802178f 	.word	0x0802178f
 801dc60:	080217f8 	.word	0x080217f8

0801dc64 <__hi0bits>:
 801dc64:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 801dc68:	4603      	mov	r3, r0
 801dc6a:	bf36      	itet	cc
 801dc6c:	0403      	lslcc	r3, r0, #16
 801dc6e:	2000      	movcs	r0, #0
 801dc70:	2010      	movcc	r0, #16
 801dc72:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 801dc76:	bf3c      	itt	cc
 801dc78:	021b      	lslcc	r3, r3, #8
 801dc7a:	3008      	addcc	r0, #8
 801dc7c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 801dc80:	bf3c      	itt	cc
 801dc82:	011b      	lslcc	r3, r3, #4
 801dc84:	3004      	addcc	r0, #4
 801dc86:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801dc8a:	bf3c      	itt	cc
 801dc8c:	009b      	lslcc	r3, r3, #2
 801dc8e:	3002      	addcc	r0, #2
 801dc90:	2b00      	cmp	r3, #0
 801dc92:	db05      	blt.n	801dca0 <__hi0bits+0x3c>
 801dc94:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 801dc98:	f100 0001 	add.w	r0, r0, #1
 801dc9c:	bf08      	it	eq
 801dc9e:	2020      	moveq	r0, #32
 801dca0:	4770      	bx	lr

0801dca2 <__lo0bits>:
 801dca2:	6803      	ldr	r3, [r0, #0]
 801dca4:	4602      	mov	r2, r0
 801dca6:	f013 0007 	ands.w	r0, r3, #7
 801dcaa:	d00b      	beq.n	801dcc4 <__lo0bits+0x22>
 801dcac:	07d9      	lsls	r1, r3, #31
 801dcae:	d421      	bmi.n	801dcf4 <__lo0bits+0x52>
 801dcb0:	0798      	lsls	r0, r3, #30
 801dcb2:	bf49      	itett	mi
 801dcb4:	085b      	lsrmi	r3, r3, #1
 801dcb6:	089b      	lsrpl	r3, r3, #2
 801dcb8:	2001      	movmi	r0, #1
 801dcba:	6013      	strmi	r3, [r2, #0]
 801dcbc:	bf5c      	itt	pl
 801dcbe:	6013      	strpl	r3, [r2, #0]
 801dcc0:	2002      	movpl	r0, #2
 801dcc2:	4770      	bx	lr
 801dcc4:	b299      	uxth	r1, r3
 801dcc6:	b909      	cbnz	r1, 801dccc <__lo0bits+0x2a>
 801dcc8:	0c1b      	lsrs	r3, r3, #16
 801dcca:	2010      	movs	r0, #16
 801dccc:	b2d9      	uxtb	r1, r3
 801dcce:	b909      	cbnz	r1, 801dcd4 <__lo0bits+0x32>
 801dcd0:	3008      	adds	r0, #8
 801dcd2:	0a1b      	lsrs	r3, r3, #8
 801dcd4:	0719      	lsls	r1, r3, #28
 801dcd6:	bf04      	itt	eq
 801dcd8:	091b      	lsreq	r3, r3, #4
 801dcda:	3004      	addeq	r0, #4
 801dcdc:	0799      	lsls	r1, r3, #30
 801dcde:	bf04      	itt	eq
 801dce0:	089b      	lsreq	r3, r3, #2
 801dce2:	3002      	addeq	r0, #2
 801dce4:	07d9      	lsls	r1, r3, #31
 801dce6:	d403      	bmi.n	801dcf0 <__lo0bits+0x4e>
 801dce8:	085b      	lsrs	r3, r3, #1
 801dcea:	f100 0001 	add.w	r0, r0, #1
 801dcee:	d003      	beq.n	801dcf8 <__lo0bits+0x56>
 801dcf0:	6013      	str	r3, [r2, #0]
 801dcf2:	4770      	bx	lr
 801dcf4:	2000      	movs	r0, #0
 801dcf6:	4770      	bx	lr
 801dcf8:	2020      	movs	r0, #32
 801dcfa:	4770      	bx	lr

0801dcfc <__i2b>:
 801dcfc:	b510      	push	{r4, lr}
 801dcfe:	460c      	mov	r4, r1
 801dd00:	2101      	movs	r1, #1
 801dd02:	f7ff ff3b 	bl	801db7c <_Balloc>
 801dd06:	4602      	mov	r2, r0
 801dd08:	b928      	cbnz	r0, 801dd16 <__i2b+0x1a>
 801dd0a:	4b05      	ldr	r3, [pc, #20]	@ (801dd20 <__i2b+0x24>)
 801dd0c:	4805      	ldr	r0, [pc, #20]	@ (801dd24 <__i2b+0x28>)
 801dd0e:	f240 1145 	movw	r1, #325	@ 0x145
 801dd12:	f000 fcb3 	bl	801e67c <__assert_func>
 801dd16:	2301      	movs	r3, #1
 801dd18:	6144      	str	r4, [r0, #20]
 801dd1a:	6103      	str	r3, [r0, #16]
 801dd1c:	bd10      	pop	{r4, pc}
 801dd1e:	bf00      	nop
 801dd20:	0802178f 	.word	0x0802178f
 801dd24:	080217f8 	.word	0x080217f8

0801dd28 <__multiply>:
 801dd28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd2c:	4614      	mov	r4, r2
 801dd2e:	690a      	ldr	r2, [r1, #16]
 801dd30:	6923      	ldr	r3, [r4, #16]
 801dd32:	429a      	cmp	r2, r3
 801dd34:	bfa8      	it	ge
 801dd36:	4623      	movge	r3, r4
 801dd38:	460f      	mov	r7, r1
 801dd3a:	bfa4      	itt	ge
 801dd3c:	460c      	movge	r4, r1
 801dd3e:	461f      	movge	r7, r3
 801dd40:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801dd44:	f8d7 9010 	ldr.w	r9, [r7, #16]
 801dd48:	68a3      	ldr	r3, [r4, #8]
 801dd4a:	6861      	ldr	r1, [r4, #4]
 801dd4c:	eb0a 0609 	add.w	r6, sl, r9
 801dd50:	42b3      	cmp	r3, r6
 801dd52:	b085      	sub	sp, #20
 801dd54:	bfb8      	it	lt
 801dd56:	3101      	addlt	r1, #1
 801dd58:	f7ff ff10 	bl	801db7c <_Balloc>
 801dd5c:	b930      	cbnz	r0, 801dd6c <__multiply+0x44>
 801dd5e:	4602      	mov	r2, r0
 801dd60:	4b44      	ldr	r3, [pc, #272]	@ (801de74 <__multiply+0x14c>)
 801dd62:	4845      	ldr	r0, [pc, #276]	@ (801de78 <__multiply+0x150>)
 801dd64:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 801dd68:	f000 fc88 	bl	801e67c <__assert_func>
 801dd6c:	f100 0514 	add.w	r5, r0, #20
 801dd70:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801dd74:	462b      	mov	r3, r5
 801dd76:	2200      	movs	r2, #0
 801dd78:	4543      	cmp	r3, r8
 801dd7a:	d321      	bcc.n	801ddc0 <__multiply+0x98>
 801dd7c:	f107 0114 	add.w	r1, r7, #20
 801dd80:	f104 0214 	add.w	r2, r4, #20
 801dd84:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 801dd88:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 801dd8c:	9302      	str	r3, [sp, #8]
 801dd8e:	1b13      	subs	r3, r2, r4
 801dd90:	3b15      	subs	r3, #21
 801dd92:	f023 0303 	bic.w	r3, r3, #3
 801dd96:	3304      	adds	r3, #4
 801dd98:	f104 0715 	add.w	r7, r4, #21
 801dd9c:	42ba      	cmp	r2, r7
 801dd9e:	bf38      	it	cc
 801dda0:	2304      	movcc	r3, #4
 801dda2:	9301      	str	r3, [sp, #4]
 801dda4:	9b02      	ldr	r3, [sp, #8]
 801dda6:	9103      	str	r1, [sp, #12]
 801dda8:	428b      	cmp	r3, r1
 801ddaa:	d80c      	bhi.n	801ddc6 <__multiply+0x9e>
 801ddac:	2e00      	cmp	r6, #0
 801ddae:	dd03      	ble.n	801ddb8 <__multiply+0x90>
 801ddb0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801ddb4:	2b00      	cmp	r3, #0
 801ddb6:	d05b      	beq.n	801de70 <__multiply+0x148>
 801ddb8:	6106      	str	r6, [r0, #16]
 801ddba:	b005      	add	sp, #20
 801ddbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddc0:	f843 2b04 	str.w	r2, [r3], #4
 801ddc4:	e7d8      	b.n	801dd78 <__multiply+0x50>
 801ddc6:	f8b1 a000 	ldrh.w	sl, [r1]
 801ddca:	f1ba 0f00 	cmp.w	sl, #0
 801ddce:	d024      	beq.n	801de1a <__multiply+0xf2>
 801ddd0:	f104 0e14 	add.w	lr, r4, #20
 801ddd4:	46a9      	mov	r9, r5
 801ddd6:	f04f 0c00 	mov.w	ip, #0
 801ddda:	f85e 7b04 	ldr.w	r7, [lr], #4
 801ddde:	f8d9 3000 	ldr.w	r3, [r9]
 801dde2:	fa1f fb87 	uxth.w	fp, r7
 801dde6:	b29b      	uxth	r3, r3
 801dde8:	fb0a 330b 	mla	r3, sl, fp, r3
 801ddec:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 801ddf0:	f8d9 7000 	ldr.w	r7, [r9]
 801ddf4:	4463      	add	r3, ip
 801ddf6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801ddfa:	fb0a c70b 	mla	r7, sl, fp, ip
 801ddfe:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 801de02:	b29b      	uxth	r3, r3
 801de04:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 801de08:	4572      	cmp	r2, lr
 801de0a:	f849 3b04 	str.w	r3, [r9], #4
 801de0e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801de12:	d8e2      	bhi.n	801ddda <__multiply+0xb2>
 801de14:	9b01      	ldr	r3, [sp, #4]
 801de16:	f845 c003 	str.w	ip, [r5, r3]
 801de1a:	9b03      	ldr	r3, [sp, #12]
 801de1c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 801de20:	3104      	adds	r1, #4
 801de22:	f1b9 0f00 	cmp.w	r9, #0
 801de26:	d021      	beq.n	801de6c <__multiply+0x144>
 801de28:	682b      	ldr	r3, [r5, #0]
 801de2a:	f104 0c14 	add.w	ip, r4, #20
 801de2e:	46ae      	mov	lr, r5
 801de30:	f04f 0a00 	mov.w	sl, #0
 801de34:	f8bc b000 	ldrh.w	fp, [ip]
 801de38:	f8be 7002 	ldrh.w	r7, [lr, #2]
 801de3c:	fb09 770b 	mla	r7, r9, fp, r7
 801de40:	4457      	add	r7, sl
 801de42:	b29b      	uxth	r3, r3
 801de44:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 801de48:	f84e 3b04 	str.w	r3, [lr], #4
 801de4c:	f85c 3b04 	ldr.w	r3, [ip], #4
 801de50:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801de54:	f8be 3000 	ldrh.w	r3, [lr]
 801de58:	fb09 330a 	mla	r3, r9, sl, r3
 801de5c:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 801de60:	4562      	cmp	r2, ip
 801de62:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801de66:	d8e5      	bhi.n	801de34 <__multiply+0x10c>
 801de68:	9f01      	ldr	r7, [sp, #4]
 801de6a:	51eb      	str	r3, [r5, r7]
 801de6c:	3504      	adds	r5, #4
 801de6e:	e799      	b.n	801dda4 <__multiply+0x7c>
 801de70:	3e01      	subs	r6, #1
 801de72:	e79b      	b.n	801ddac <__multiply+0x84>
 801de74:	0802178f 	.word	0x0802178f
 801de78:	080217f8 	.word	0x080217f8

0801de7c <__pow5mult>:
 801de7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801de80:	4615      	mov	r5, r2
 801de82:	f012 0203 	ands.w	r2, r2, #3
 801de86:	4607      	mov	r7, r0
 801de88:	460e      	mov	r6, r1
 801de8a:	d007      	beq.n	801de9c <__pow5mult+0x20>
 801de8c:	4c1a      	ldr	r4, [pc, #104]	@ (801def8 <__pow5mult+0x7c>)
 801de8e:	3a01      	subs	r2, #1
 801de90:	2300      	movs	r3, #0
 801de92:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801de96:	f7ff fe9f 	bl	801dbd8 <__multadd>
 801de9a:	4606      	mov	r6, r0
 801de9c:	10ad      	asrs	r5, r5, #2
 801de9e:	d027      	beq.n	801def0 <__pow5mult+0x74>
 801dea0:	6c3c      	ldr	r4, [r7, #64]	@ 0x40
 801dea2:	b944      	cbnz	r4, 801deb6 <__pow5mult+0x3a>
 801dea4:	f240 2171 	movw	r1, #625	@ 0x271
 801dea8:	4638      	mov	r0, r7
 801deaa:	f7ff ff27 	bl	801dcfc <__i2b>
 801deae:	2300      	movs	r3, #0
 801deb0:	6438      	str	r0, [r7, #64]	@ 0x40
 801deb2:	4604      	mov	r4, r0
 801deb4:	6003      	str	r3, [r0, #0]
 801deb6:	f04f 0900 	mov.w	r9, #0
 801deba:	07eb      	lsls	r3, r5, #31
 801debc:	d50a      	bpl.n	801ded4 <__pow5mult+0x58>
 801debe:	4631      	mov	r1, r6
 801dec0:	4622      	mov	r2, r4
 801dec2:	4638      	mov	r0, r7
 801dec4:	f7ff ff30 	bl	801dd28 <__multiply>
 801dec8:	4631      	mov	r1, r6
 801deca:	4680      	mov	r8, r0
 801decc:	4638      	mov	r0, r7
 801dece:	f7ff fe7a 	bl	801dbc6 <_Bfree>
 801ded2:	4646      	mov	r6, r8
 801ded4:	106d      	asrs	r5, r5, #1
 801ded6:	d00b      	beq.n	801def0 <__pow5mult+0x74>
 801ded8:	6820      	ldr	r0, [r4, #0]
 801deda:	b938      	cbnz	r0, 801deec <__pow5mult+0x70>
 801dedc:	4622      	mov	r2, r4
 801dede:	4621      	mov	r1, r4
 801dee0:	4638      	mov	r0, r7
 801dee2:	f7ff ff21 	bl	801dd28 <__multiply>
 801dee6:	6020      	str	r0, [r4, #0]
 801dee8:	f8c0 9000 	str.w	r9, [r0]
 801deec:	4604      	mov	r4, r0
 801deee:	e7e4      	b.n	801deba <__pow5mult+0x3e>
 801def0:	4630      	mov	r0, r6
 801def2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801def6:	bf00      	nop
 801def8:	08021854 	.word	0x08021854

0801defc <__lshift>:
 801defc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801df00:	460c      	mov	r4, r1
 801df02:	6849      	ldr	r1, [r1, #4]
 801df04:	6923      	ldr	r3, [r4, #16]
 801df06:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801df0a:	68a3      	ldr	r3, [r4, #8]
 801df0c:	4607      	mov	r7, r0
 801df0e:	4691      	mov	r9, r2
 801df10:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801df14:	f108 0601 	add.w	r6, r8, #1
 801df18:	42b3      	cmp	r3, r6
 801df1a:	db0b      	blt.n	801df34 <__lshift+0x38>
 801df1c:	4638      	mov	r0, r7
 801df1e:	f7ff fe2d 	bl	801db7c <_Balloc>
 801df22:	4605      	mov	r5, r0
 801df24:	b948      	cbnz	r0, 801df3a <__lshift+0x3e>
 801df26:	4602      	mov	r2, r0
 801df28:	4b28      	ldr	r3, [pc, #160]	@ (801dfcc <__lshift+0xd0>)
 801df2a:	4829      	ldr	r0, [pc, #164]	@ (801dfd0 <__lshift+0xd4>)
 801df2c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 801df30:	f000 fba4 	bl	801e67c <__assert_func>
 801df34:	3101      	adds	r1, #1
 801df36:	005b      	lsls	r3, r3, #1
 801df38:	e7ee      	b.n	801df18 <__lshift+0x1c>
 801df3a:	2300      	movs	r3, #0
 801df3c:	f100 0114 	add.w	r1, r0, #20
 801df40:	f100 0210 	add.w	r2, r0, #16
 801df44:	4618      	mov	r0, r3
 801df46:	4553      	cmp	r3, sl
 801df48:	db33      	blt.n	801dfb2 <__lshift+0xb6>
 801df4a:	6920      	ldr	r0, [r4, #16]
 801df4c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801df50:	f104 0314 	add.w	r3, r4, #20
 801df54:	f019 091f 	ands.w	r9, r9, #31
 801df58:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801df5c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 801df60:	d02b      	beq.n	801dfba <__lshift+0xbe>
 801df62:	f1c9 0e20 	rsb	lr, r9, #32
 801df66:	468a      	mov	sl, r1
 801df68:	2200      	movs	r2, #0
 801df6a:	6818      	ldr	r0, [r3, #0]
 801df6c:	fa00 f009 	lsl.w	r0, r0, r9
 801df70:	4310      	orrs	r0, r2
 801df72:	f84a 0b04 	str.w	r0, [sl], #4
 801df76:	f853 2b04 	ldr.w	r2, [r3], #4
 801df7a:	459c      	cmp	ip, r3
 801df7c:	fa22 f20e 	lsr.w	r2, r2, lr
 801df80:	d8f3      	bhi.n	801df6a <__lshift+0x6e>
 801df82:	ebac 0304 	sub.w	r3, ip, r4
 801df86:	3b15      	subs	r3, #21
 801df88:	f023 0303 	bic.w	r3, r3, #3
 801df8c:	3304      	adds	r3, #4
 801df8e:	f104 0015 	add.w	r0, r4, #21
 801df92:	4584      	cmp	ip, r0
 801df94:	bf38      	it	cc
 801df96:	2304      	movcc	r3, #4
 801df98:	50ca      	str	r2, [r1, r3]
 801df9a:	b10a      	cbz	r2, 801dfa0 <__lshift+0xa4>
 801df9c:	f108 0602 	add.w	r6, r8, #2
 801dfa0:	3e01      	subs	r6, #1
 801dfa2:	4638      	mov	r0, r7
 801dfa4:	612e      	str	r6, [r5, #16]
 801dfa6:	4621      	mov	r1, r4
 801dfa8:	f7ff fe0d 	bl	801dbc6 <_Bfree>
 801dfac:	4628      	mov	r0, r5
 801dfae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dfb2:	f842 0f04 	str.w	r0, [r2, #4]!
 801dfb6:	3301      	adds	r3, #1
 801dfb8:	e7c5      	b.n	801df46 <__lshift+0x4a>
 801dfba:	3904      	subs	r1, #4
 801dfbc:	f853 2b04 	ldr.w	r2, [r3], #4
 801dfc0:	f841 2f04 	str.w	r2, [r1, #4]!
 801dfc4:	459c      	cmp	ip, r3
 801dfc6:	d8f9      	bhi.n	801dfbc <__lshift+0xc0>
 801dfc8:	e7ea      	b.n	801dfa0 <__lshift+0xa4>
 801dfca:	bf00      	nop
 801dfcc:	0802178f 	.word	0x0802178f
 801dfd0:	080217f8 	.word	0x080217f8

0801dfd4 <__mcmp>:
 801dfd4:	690a      	ldr	r2, [r1, #16]
 801dfd6:	4603      	mov	r3, r0
 801dfd8:	6900      	ldr	r0, [r0, #16]
 801dfda:	1a80      	subs	r0, r0, r2
 801dfdc:	b530      	push	{r4, r5, lr}
 801dfde:	d10e      	bne.n	801dffe <__mcmp+0x2a>
 801dfe0:	3314      	adds	r3, #20
 801dfe2:	3114      	adds	r1, #20
 801dfe4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 801dfe8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 801dfec:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 801dff0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801dff4:	4295      	cmp	r5, r2
 801dff6:	d003      	beq.n	801e000 <__mcmp+0x2c>
 801dff8:	d205      	bcs.n	801e006 <__mcmp+0x32>
 801dffa:	f04f 30ff 	mov.w	r0, #4294967295
 801dffe:	bd30      	pop	{r4, r5, pc}
 801e000:	42a3      	cmp	r3, r4
 801e002:	d3f3      	bcc.n	801dfec <__mcmp+0x18>
 801e004:	e7fb      	b.n	801dffe <__mcmp+0x2a>
 801e006:	2001      	movs	r0, #1
 801e008:	e7f9      	b.n	801dffe <__mcmp+0x2a>
	...

0801e00c <__mdiff>:
 801e00c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e010:	4689      	mov	r9, r1
 801e012:	4606      	mov	r6, r0
 801e014:	4611      	mov	r1, r2
 801e016:	4648      	mov	r0, r9
 801e018:	4614      	mov	r4, r2
 801e01a:	f7ff ffdb 	bl	801dfd4 <__mcmp>
 801e01e:	1e05      	subs	r5, r0, #0
 801e020:	d112      	bne.n	801e048 <__mdiff+0x3c>
 801e022:	4629      	mov	r1, r5
 801e024:	4630      	mov	r0, r6
 801e026:	f7ff fda9 	bl	801db7c <_Balloc>
 801e02a:	4602      	mov	r2, r0
 801e02c:	b928      	cbnz	r0, 801e03a <__mdiff+0x2e>
 801e02e:	4b3f      	ldr	r3, [pc, #252]	@ (801e12c <__mdiff+0x120>)
 801e030:	f240 2137 	movw	r1, #567	@ 0x237
 801e034:	483e      	ldr	r0, [pc, #248]	@ (801e130 <__mdiff+0x124>)
 801e036:	f000 fb21 	bl	801e67c <__assert_func>
 801e03a:	2301      	movs	r3, #1
 801e03c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801e040:	4610      	mov	r0, r2
 801e042:	b003      	add	sp, #12
 801e044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e048:	bfbc      	itt	lt
 801e04a:	464b      	movlt	r3, r9
 801e04c:	46a1      	movlt	r9, r4
 801e04e:	4630      	mov	r0, r6
 801e050:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801e054:	bfba      	itte	lt
 801e056:	461c      	movlt	r4, r3
 801e058:	2501      	movlt	r5, #1
 801e05a:	2500      	movge	r5, #0
 801e05c:	f7ff fd8e 	bl	801db7c <_Balloc>
 801e060:	4602      	mov	r2, r0
 801e062:	b918      	cbnz	r0, 801e06c <__mdiff+0x60>
 801e064:	4b31      	ldr	r3, [pc, #196]	@ (801e12c <__mdiff+0x120>)
 801e066:	f240 2145 	movw	r1, #581	@ 0x245
 801e06a:	e7e3      	b.n	801e034 <__mdiff+0x28>
 801e06c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 801e070:	6926      	ldr	r6, [r4, #16]
 801e072:	60c5      	str	r5, [r0, #12]
 801e074:	f109 0310 	add.w	r3, r9, #16
 801e078:	f109 0514 	add.w	r5, r9, #20
 801e07c:	f104 0e14 	add.w	lr, r4, #20
 801e080:	f100 0b14 	add.w	fp, r0, #20
 801e084:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 801e088:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 801e08c:	9301      	str	r3, [sp, #4]
 801e08e:	46d9      	mov	r9, fp
 801e090:	f04f 0c00 	mov.w	ip, #0
 801e094:	9b01      	ldr	r3, [sp, #4]
 801e096:	f85e 0b04 	ldr.w	r0, [lr], #4
 801e09a:	f853 af04 	ldr.w	sl, [r3, #4]!
 801e09e:	9301      	str	r3, [sp, #4]
 801e0a0:	fa1f f38a 	uxth.w	r3, sl
 801e0a4:	4619      	mov	r1, r3
 801e0a6:	b283      	uxth	r3, r0
 801e0a8:	1acb      	subs	r3, r1, r3
 801e0aa:	0c00      	lsrs	r0, r0, #16
 801e0ac:	4463      	add	r3, ip
 801e0ae:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 801e0b2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 801e0b6:	b29b      	uxth	r3, r3
 801e0b8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 801e0bc:	4576      	cmp	r6, lr
 801e0be:	f849 3b04 	str.w	r3, [r9], #4
 801e0c2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801e0c6:	d8e5      	bhi.n	801e094 <__mdiff+0x88>
 801e0c8:	1b33      	subs	r3, r6, r4
 801e0ca:	3b15      	subs	r3, #21
 801e0cc:	f023 0303 	bic.w	r3, r3, #3
 801e0d0:	3415      	adds	r4, #21
 801e0d2:	3304      	adds	r3, #4
 801e0d4:	42a6      	cmp	r6, r4
 801e0d6:	bf38      	it	cc
 801e0d8:	2304      	movcc	r3, #4
 801e0da:	441d      	add	r5, r3
 801e0dc:	445b      	add	r3, fp
 801e0de:	461e      	mov	r6, r3
 801e0e0:	462c      	mov	r4, r5
 801e0e2:	4544      	cmp	r4, r8
 801e0e4:	d30e      	bcc.n	801e104 <__mdiff+0xf8>
 801e0e6:	f108 0103 	add.w	r1, r8, #3
 801e0ea:	1b49      	subs	r1, r1, r5
 801e0ec:	f021 0103 	bic.w	r1, r1, #3
 801e0f0:	3d03      	subs	r5, #3
 801e0f2:	45a8      	cmp	r8, r5
 801e0f4:	bf38      	it	cc
 801e0f6:	2100      	movcc	r1, #0
 801e0f8:	440b      	add	r3, r1
 801e0fa:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801e0fe:	b191      	cbz	r1, 801e126 <__mdiff+0x11a>
 801e100:	6117      	str	r7, [r2, #16]
 801e102:	e79d      	b.n	801e040 <__mdiff+0x34>
 801e104:	f854 1b04 	ldr.w	r1, [r4], #4
 801e108:	46e6      	mov	lr, ip
 801e10a:	0c08      	lsrs	r0, r1, #16
 801e10c:	fa1c fc81 	uxtah	ip, ip, r1
 801e110:	4471      	add	r1, lr
 801e112:	eb00 402c 	add.w	r0, r0, ip, asr #16
 801e116:	b289      	uxth	r1, r1
 801e118:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 801e11c:	f846 1b04 	str.w	r1, [r6], #4
 801e120:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801e124:	e7dd      	b.n	801e0e2 <__mdiff+0xd6>
 801e126:	3f01      	subs	r7, #1
 801e128:	e7e7      	b.n	801e0fa <__mdiff+0xee>
 801e12a:	bf00      	nop
 801e12c:	0802178f 	.word	0x0802178f
 801e130:	080217f8 	.word	0x080217f8

0801e134 <__d2b>:
 801e134:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801e138:	460f      	mov	r7, r1
 801e13a:	2101      	movs	r1, #1
 801e13c:	ec59 8b10 	vmov	r8, r9, d0
 801e140:	4616      	mov	r6, r2
 801e142:	f7ff fd1b 	bl	801db7c <_Balloc>
 801e146:	4604      	mov	r4, r0
 801e148:	b930      	cbnz	r0, 801e158 <__d2b+0x24>
 801e14a:	4602      	mov	r2, r0
 801e14c:	4b23      	ldr	r3, [pc, #140]	@ (801e1dc <__d2b+0xa8>)
 801e14e:	4824      	ldr	r0, [pc, #144]	@ (801e1e0 <__d2b+0xac>)
 801e150:	f240 310f 	movw	r1, #783	@ 0x30f
 801e154:	f000 fa92 	bl	801e67c <__assert_func>
 801e158:	f3c9 550a 	ubfx	r5, r9, #20, #11
 801e15c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801e160:	b10d      	cbz	r5, 801e166 <__d2b+0x32>
 801e162:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801e166:	9301      	str	r3, [sp, #4]
 801e168:	f1b8 0300 	subs.w	r3, r8, #0
 801e16c:	d023      	beq.n	801e1b6 <__d2b+0x82>
 801e16e:	4668      	mov	r0, sp
 801e170:	9300      	str	r3, [sp, #0]
 801e172:	f7ff fd96 	bl	801dca2 <__lo0bits>
 801e176:	e9dd 1200 	ldrd	r1, r2, [sp]
 801e17a:	b1d0      	cbz	r0, 801e1b2 <__d2b+0x7e>
 801e17c:	f1c0 0320 	rsb	r3, r0, #32
 801e180:	fa02 f303 	lsl.w	r3, r2, r3
 801e184:	430b      	orrs	r3, r1
 801e186:	40c2      	lsrs	r2, r0
 801e188:	6163      	str	r3, [r4, #20]
 801e18a:	9201      	str	r2, [sp, #4]
 801e18c:	9b01      	ldr	r3, [sp, #4]
 801e18e:	61a3      	str	r3, [r4, #24]
 801e190:	2b00      	cmp	r3, #0
 801e192:	bf0c      	ite	eq
 801e194:	2201      	moveq	r2, #1
 801e196:	2202      	movne	r2, #2
 801e198:	6122      	str	r2, [r4, #16]
 801e19a:	b1a5      	cbz	r5, 801e1c6 <__d2b+0x92>
 801e19c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 801e1a0:	4405      	add	r5, r0
 801e1a2:	603d      	str	r5, [r7, #0]
 801e1a4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 801e1a8:	6030      	str	r0, [r6, #0]
 801e1aa:	4620      	mov	r0, r4
 801e1ac:	b003      	add	sp, #12
 801e1ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e1b2:	6161      	str	r1, [r4, #20]
 801e1b4:	e7ea      	b.n	801e18c <__d2b+0x58>
 801e1b6:	a801      	add	r0, sp, #4
 801e1b8:	f7ff fd73 	bl	801dca2 <__lo0bits>
 801e1bc:	9b01      	ldr	r3, [sp, #4]
 801e1be:	6163      	str	r3, [r4, #20]
 801e1c0:	3020      	adds	r0, #32
 801e1c2:	2201      	movs	r2, #1
 801e1c4:	e7e8      	b.n	801e198 <__d2b+0x64>
 801e1c6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e1ca:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 801e1ce:	6038      	str	r0, [r7, #0]
 801e1d0:	6918      	ldr	r0, [r3, #16]
 801e1d2:	f7ff fd47 	bl	801dc64 <__hi0bits>
 801e1d6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801e1da:	e7e5      	b.n	801e1a8 <__d2b+0x74>
 801e1dc:	0802178f 	.word	0x0802178f
 801e1e0:	080217f8 	.word	0x080217f8

0801e1e4 <_realloc_r>:
 801e1e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1e8:	4682      	mov	sl, r0
 801e1ea:	4693      	mov	fp, r2
 801e1ec:	460c      	mov	r4, r1
 801e1ee:	b929      	cbnz	r1, 801e1fc <_realloc_r+0x18>
 801e1f0:	4611      	mov	r1, r2
 801e1f2:	b003      	add	sp, #12
 801e1f4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1f8:	f7fd b890 	b.w	801b31c <_malloc_r>
 801e1fc:	f7fd fac8 	bl	801b790 <__malloc_lock>
 801e200:	f10b 080b 	add.w	r8, fp, #11
 801e204:	f854 5c04 	ldr.w	r5, [r4, #-4]
 801e208:	f1b8 0f16 	cmp.w	r8, #22
 801e20c:	f1a4 0908 	sub.w	r9, r4, #8
 801e210:	f025 0603 	bic.w	r6, r5, #3
 801e214:	d908      	bls.n	801e228 <_realloc_r+0x44>
 801e216:	f038 0807 	bics.w	r8, r8, #7
 801e21a:	d507      	bpl.n	801e22c <_realloc_r+0x48>
 801e21c:	230c      	movs	r3, #12
 801e21e:	f8ca 3000 	str.w	r3, [sl]
 801e222:	f04f 0b00 	mov.w	fp, #0
 801e226:	e032      	b.n	801e28e <_realloc_r+0xaa>
 801e228:	f04f 0810 	mov.w	r8, #16
 801e22c:	45c3      	cmp	fp, r8
 801e22e:	d8f5      	bhi.n	801e21c <_realloc_r+0x38>
 801e230:	4546      	cmp	r6, r8
 801e232:	f280 8174 	bge.w	801e51e <_realloc_r+0x33a>
 801e236:	4b9e      	ldr	r3, [pc, #632]	@ (801e4b0 <_realloc_r+0x2cc>)
 801e238:	f8d3 c008 	ldr.w	ip, [r3, #8]
 801e23c:	eb09 0106 	add.w	r1, r9, r6
 801e240:	458c      	cmp	ip, r1
 801e242:	6848      	ldr	r0, [r1, #4]
 801e244:	d005      	beq.n	801e252 <_realloc_r+0x6e>
 801e246:	f020 0201 	bic.w	r2, r0, #1
 801e24a:	440a      	add	r2, r1
 801e24c:	6852      	ldr	r2, [r2, #4]
 801e24e:	07d7      	lsls	r7, r2, #31
 801e250:	d449      	bmi.n	801e2e6 <_realloc_r+0x102>
 801e252:	f020 0003 	bic.w	r0, r0, #3
 801e256:	458c      	cmp	ip, r1
 801e258:	eb06 0700 	add.w	r7, r6, r0
 801e25c:	d11b      	bne.n	801e296 <_realloc_r+0xb2>
 801e25e:	f108 0210 	add.w	r2, r8, #16
 801e262:	42ba      	cmp	r2, r7
 801e264:	dc41      	bgt.n	801e2ea <_realloc_r+0x106>
 801e266:	eb09 0208 	add.w	r2, r9, r8
 801e26a:	eba7 0708 	sub.w	r7, r7, r8
 801e26e:	f047 0701 	orr.w	r7, r7, #1
 801e272:	609a      	str	r2, [r3, #8]
 801e274:	6057      	str	r7, [r2, #4]
 801e276:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801e27a:	f003 0301 	and.w	r3, r3, #1
 801e27e:	ea43 0308 	orr.w	r3, r3, r8
 801e282:	f844 3c04 	str.w	r3, [r4, #-4]
 801e286:	4650      	mov	r0, sl
 801e288:	f7fd fa88 	bl	801b79c <__malloc_unlock>
 801e28c:	46a3      	mov	fp, r4
 801e28e:	4658      	mov	r0, fp
 801e290:	b003      	add	sp, #12
 801e292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e296:	45b8      	cmp	r8, r7
 801e298:	dc27      	bgt.n	801e2ea <_realloc_r+0x106>
 801e29a:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 801e29e:	60d3      	str	r3, [r2, #12]
 801e2a0:	609a      	str	r2, [r3, #8]
 801e2a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
 801e2a6:	eba7 0008 	sub.w	r0, r7, r8
 801e2aa:	280f      	cmp	r0, #15
 801e2ac:	f003 0301 	and.w	r3, r3, #1
 801e2b0:	eb09 0207 	add.w	r2, r9, r7
 801e2b4:	f240 8135 	bls.w	801e522 <_realloc_r+0x33e>
 801e2b8:	eb09 0108 	add.w	r1, r9, r8
 801e2bc:	ea48 0303 	orr.w	r3, r8, r3
 801e2c0:	f040 0001 	orr.w	r0, r0, #1
 801e2c4:	f8c9 3004 	str.w	r3, [r9, #4]
 801e2c8:	6048      	str	r0, [r1, #4]
 801e2ca:	6853      	ldr	r3, [r2, #4]
 801e2cc:	f043 0301 	orr.w	r3, r3, #1
 801e2d0:	6053      	str	r3, [r2, #4]
 801e2d2:	3108      	adds	r1, #8
 801e2d4:	4650      	mov	r0, sl
 801e2d6:	f7fc ff61 	bl	801b19c <_free_r>
 801e2da:	4650      	mov	r0, sl
 801e2dc:	f7fd fa5e 	bl	801b79c <__malloc_unlock>
 801e2e0:	f109 0b08 	add.w	fp, r9, #8
 801e2e4:	e7d3      	b.n	801e28e <_realloc_r+0xaa>
 801e2e6:	2000      	movs	r0, #0
 801e2e8:	4601      	mov	r1, r0
 801e2ea:	07ea      	lsls	r2, r5, #31
 801e2ec:	f100 80c7 	bmi.w	801e47e <_realloc_r+0x29a>
 801e2f0:	f854 5c08 	ldr.w	r5, [r4, #-8]
 801e2f4:	eba9 0505 	sub.w	r5, r9, r5
 801e2f8:	686a      	ldr	r2, [r5, #4]
 801e2fa:	f022 0203 	bic.w	r2, r2, #3
 801e2fe:	4432      	add	r2, r6
 801e300:	9201      	str	r2, [sp, #4]
 801e302:	2900      	cmp	r1, #0
 801e304:	f000 8086 	beq.w	801e414 <_realloc_r+0x230>
 801e308:	458c      	cmp	ip, r1
 801e30a:	eb00 0702 	add.w	r7, r0, r2
 801e30e:	d149      	bne.n	801e3a4 <_realloc_r+0x1c0>
 801e310:	f108 0210 	add.w	r2, r8, #16
 801e314:	42ba      	cmp	r2, r7
 801e316:	dc7d      	bgt.n	801e414 <_realloc_r+0x230>
 801e318:	46ab      	mov	fp, r5
 801e31a:	68ea      	ldr	r2, [r5, #12]
 801e31c:	f85b 1f08 	ldr.w	r1, [fp, #8]!
 801e320:	60ca      	str	r2, [r1, #12]
 801e322:	6091      	str	r1, [r2, #8]
 801e324:	1f32      	subs	r2, r6, #4
 801e326:	2a24      	cmp	r2, #36	@ 0x24
 801e328:	d836      	bhi.n	801e398 <_realloc_r+0x1b4>
 801e32a:	2a13      	cmp	r2, #19
 801e32c:	d932      	bls.n	801e394 <_realloc_r+0x1b0>
 801e32e:	6821      	ldr	r1, [r4, #0]
 801e330:	60a9      	str	r1, [r5, #8]
 801e332:	6861      	ldr	r1, [r4, #4]
 801e334:	60e9      	str	r1, [r5, #12]
 801e336:	2a1b      	cmp	r2, #27
 801e338:	d81a      	bhi.n	801e370 <_realloc_r+0x18c>
 801e33a:	3408      	adds	r4, #8
 801e33c:	f105 0210 	add.w	r2, r5, #16
 801e340:	6821      	ldr	r1, [r4, #0]
 801e342:	6011      	str	r1, [r2, #0]
 801e344:	6861      	ldr	r1, [r4, #4]
 801e346:	6051      	str	r1, [r2, #4]
 801e348:	68a1      	ldr	r1, [r4, #8]
 801e34a:	6091      	str	r1, [r2, #8]
 801e34c:	eb05 0208 	add.w	r2, r5, r8
 801e350:	eba7 0708 	sub.w	r7, r7, r8
 801e354:	f047 0701 	orr.w	r7, r7, #1
 801e358:	609a      	str	r2, [r3, #8]
 801e35a:	6057      	str	r7, [r2, #4]
 801e35c:	686b      	ldr	r3, [r5, #4]
 801e35e:	f003 0301 	and.w	r3, r3, #1
 801e362:	ea43 0308 	orr.w	r3, r3, r8
 801e366:	606b      	str	r3, [r5, #4]
 801e368:	4650      	mov	r0, sl
 801e36a:	f7fd fa17 	bl	801b79c <__malloc_unlock>
 801e36e:	e78e      	b.n	801e28e <_realloc_r+0xaa>
 801e370:	68a1      	ldr	r1, [r4, #8]
 801e372:	6129      	str	r1, [r5, #16]
 801e374:	68e1      	ldr	r1, [r4, #12]
 801e376:	6169      	str	r1, [r5, #20]
 801e378:	2a24      	cmp	r2, #36	@ 0x24
 801e37a:	bf01      	itttt	eq
 801e37c:	6922      	ldreq	r2, [r4, #16]
 801e37e:	61aa      	streq	r2, [r5, #24]
 801e380:	6961      	ldreq	r1, [r4, #20]
 801e382:	61e9      	streq	r1, [r5, #28]
 801e384:	bf19      	ittee	ne
 801e386:	3410      	addne	r4, #16
 801e388:	f105 0218 	addne.w	r2, r5, #24
 801e38c:	f105 0220 	addeq.w	r2, r5, #32
 801e390:	3418      	addeq	r4, #24
 801e392:	e7d5      	b.n	801e340 <_realloc_r+0x15c>
 801e394:	465a      	mov	r2, fp
 801e396:	e7d3      	b.n	801e340 <_realloc_r+0x15c>
 801e398:	4621      	mov	r1, r4
 801e39a:	4658      	mov	r0, fp
 801e39c:	f000 f954 	bl	801e648 <memmove>
 801e3a0:	4b43      	ldr	r3, [pc, #268]	@ (801e4b0 <_realloc_r+0x2cc>)
 801e3a2:	e7d3      	b.n	801e34c <_realloc_r+0x168>
 801e3a4:	45b8      	cmp	r8, r7
 801e3a6:	dc35      	bgt.n	801e414 <_realloc_r+0x230>
 801e3a8:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 801e3ac:	4628      	mov	r0, r5
 801e3ae:	60d3      	str	r3, [r2, #12]
 801e3b0:	609a      	str	r2, [r3, #8]
 801e3b2:	f850 2f08 	ldr.w	r2, [r0, #8]!
 801e3b6:	68eb      	ldr	r3, [r5, #12]
 801e3b8:	60d3      	str	r3, [r2, #12]
 801e3ba:	609a      	str	r2, [r3, #8]
 801e3bc:	1f32      	subs	r2, r6, #4
 801e3be:	2a24      	cmp	r2, #36	@ 0x24
 801e3c0:	d824      	bhi.n	801e40c <_realloc_r+0x228>
 801e3c2:	2a13      	cmp	r2, #19
 801e3c4:	d908      	bls.n	801e3d8 <_realloc_r+0x1f4>
 801e3c6:	6823      	ldr	r3, [r4, #0]
 801e3c8:	60ab      	str	r3, [r5, #8]
 801e3ca:	6863      	ldr	r3, [r4, #4]
 801e3cc:	60eb      	str	r3, [r5, #12]
 801e3ce:	2a1b      	cmp	r2, #27
 801e3d0:	d80a      	bhi.n	801e3e8 <_realloc_r+0x204>
 801e3d2:	3408      	adds	r4, #8
 801e3d4:	f105 0010 	add.w	r0, r5, #16
 801e3d8:	6823      	ldr	r3, [r4, #0]
 801e3da:	6003      	str	r3, [r0, #0]
 801e3dc:	6863      	ldr	r3, [r4, #4]
 801e3de:	6043      	str	r3, [r0, #4]
 801e3e0:	68a3      	ldr	r3, [r4, #8]
 801e3e2:	6083      	str	r3, [r0, #8]
 801e3e4:	46a9      	mov	r9, r5
 801e3e6:	e75c      	b.n	801e2a2 <_realloc_r+0xbe>
 801e3e8:	68a3      	ldr	r3, [r4, #8]
 801e3ea:	612b      	str	r3, [r5, #16]
 801e3ec:	68e3      	ldr	r3, [r4, #12]
 801e3ee:	616b      	str	r3, [r5, #20]
 801e3f0:	2a24      	cmp	r2, #36	@ 0x24
 801e3f2:	bf01      	itttt	eq
 801e3f4:	6923      	ldreq	r3, [r4, #16]
 801e3f6:	61ab      	streq	r3, [r5, #24]
 801e3f8:	6963      	ldreq	r3, [r4, #20]
 801e3fa:	61eb      	streq	r3, [r5, #28]
 801e3fc:	bf19      	ittee	ne
 801e3fe:	3410      	addne	r4, #16
 801e400:	f105 0018 	addne.w	r0, r5, #24
 801e404:	f105 0020 	addeq.w	r0, r5, #32
 801e408:	3418      	addeq	r4, #24
 801e40a:	e7e5      	b.n	801e3d8 <_realloc_r+0x1f4>
 801e40c:	4621      	mov	r1, r4
 801e40e:	f000 f91b 	bl	801e648 <memmove>
 801e412:	e7e7      	b.n	801e3e4 <_realloc_r+0x200>
 801e414:	9b01      	ldr	r3, [sp, #4]
 801e416:	4598      	cmp	r8, r3
 801e418:	dc31      	bgt.n	801e47e <_realloc_r+0x29a>
 801e41a:	4628      	mov	r0, r5
 801e41c:	68eb      	ldr	r3, [r5, #12]
 801e41e:	f850 2f08 	ldr.w	r2, [r0, #8]!
 801e422:	60d3      	str	r3, [r2, #12]
 801e424:	609a      	str	r2, [r3, #8]
 801e426:	1f32      	subs	r2, r6, #4
 801e428:	2a24      	cmp	r2, #36	@ 0x24
 801e42a:	d824      	bhi.n	801e476 <_realloc_r+0x292>
 801e42c:	2a13      	cmp	r2, #19
 801e42e:	d908      	bls.n	801e442 <_realloc_r+0x25e>
 801e430:	6823      	ldr	r3, [r4, #0]
 801e432:	60ab      	str	r3, [r5, #8]
 801e434:	6863      	ldr	r3, [r4, #4]
 801e436:	60eb      	str	r3, [r5, #12]
 801e438:	2a1b      	cmp	r2, #27
 801e43a:	d80a      	bhi.n	801e452 <_realloc_r+0x26e>
 801e43c:	3408      	adds	r4, #8
 801e43e:	f105 0010 	add.w	r0, r5, #16
 801e442:	6823      	ldr	r3, [r4, #0]
 801e444:	6003      	str	r3, [r0, #0]
 801e446:	6863      	ldr	r3, [r4, #4]
 801e448:	6043      	str	r3, [r0, #4]
 801e44a:	68a3      	ldr	r3, [r4, #8]
 801e44c:	6083      	str	r3, [r0, #8]
 801e44e:	9f01      	ldr	r7, [sp, #4]
 801e450:	e7c8      	b.n	801e3e4 <_realloc_r+0x200>
 801e452:	68a3      	ldr	r3, [r4, #8]
 801e454:	612b      	str	r3, [r5, #16]
 801e456:	68e3      	ldr	r3, [r4, #12]
 801e458:	616b      	str	r3, [r5, #20]
 801e45a:	2a24      	cmp	r2, #36	@ 0x24
 801e45c:	bf01      	itttt	eq
 801e45e:	6923      	ldreq	r3, [r4, #16]
 801e460:	61ab      	streq	r3, [r5, #24]
 801e462:	6963      	ldreq	r3, [r4, #20]
 801e464:	61eb      	streq	r3, [r5, #28]
 801e466:	bf19      	ittee	ne
 801e468:	3410      	addne	r4, #16
 801e46a:	f105 0018 	addne.w	r0, r5, #24
 801e46e:	f105 0020 	addeq.w	r0, r5, #32
 801e472:	3418      	addeq	r4, #24
 801e474:	e7e5      	b.n	801e442 <_realloc_r+0x25e>
 801e476:	4621      	mov	r1, r4
 801e478:	f000 f8e6 	bl	801e648 <memmove>
 801e47c:	e7e7      	b.n	801e44e <_realloc_r+0x26a>
 801e47e:	4659      	mov	r1, fp
 801e480:	4650      	mov	r0, sl
 801e482:	f7fc ff4b 	bl	801b31c <_malloc_r>
 801e486:	4683      	mov	fp, r0
 801e488:	b918      	cbnz	r0, 801e492 <_realloc_r+0x2ae>
 801e48a:	4650      	mov	r0, sl
 801e48c:	f7fd f986 	bl	801b79c <__malloc_unlock>
 801e490:	e6c7      	b.n	801e222 <_realloc_r+0x3e>
 801e492:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801e496:	f023 0301 	bic.w	r3, r3, #1
 801e49a:	444b      	add	r3, r9
 801e49c:	f1a0 0208 	sub.w	r2, r0, #8
 801e4a0:	4293      	cmp	r3, r2
 801e4a2:	d107      	bne.n	801e4b4 <_realloc_r+0x2d0>
 801e4a4:	f850 7c04 	ldr.w	r7, [r0, #-4]
 801e4a8:	f027 0703 	bic.w	r7, r7, #3
 801e4ac:	4437      	add	r7, r6
 801e4ae:	e6f8      	b.n	801e2a2 <_realloc_r+0xbe>
 801e4b0:	20000254 	.word	0x20000254
 801e4b4:	1f32      	subs	r2, r6, #4
 801e4b6:	2a24      	cmp	r2, #36	@ 0x24
 801e4b8:	d82d      	bhi.n	801e516 <_realloc_r+0x332>
 801e4ba:	2a13      	cmp	r2, #19
 801e4bc:	d928      	bls.n	801e510 <_realloc_r+0x32c>
 801e4be:	6823      	ldr	r3, [r4, #0]
 801e4c0:	6003      	str	r3, [r0, #0]
 801e4c2:	6863      	ldr	r3, [r4, #4]
 801e4c4:	6043      	str	r3, [r0, #4]
 801e4c6:	2a1b      	cmp	r2, #27
 801e4c8:	d80e      	bhi.n	801e4e8 <_realloc_r+0x304>
 801e4ca:	f104 0208 	add.w	r2, r4, #8
 801e4ce:	f100 0308 	add.w	r3, r0, #8
 801e4d2:	6811      	ldr	r1, [r2, #0]
 801e4d4:	6019      	str	r1, [r3, #0]
 801e4d6:	6851      	ldr	r1, [r2, #4]
 801e4d8:	6059      	str	r1, [r3, #4]
 801e4da:	6892      	ldr	r2, [r2, #8]
 801e4dc:	609a      	str	r2, [r3, #8]
 801e4de:	4621      	mov	r1, r4
 801e4e0:	4650      	mov	r0, sl
 801e4e2:	f7fc fe5b 	bl	801b19c <_free_r>
 801e4e6:	e73f      	b.n	801e368 <_realloc_r+0x184>
 801e4e8:	68a3      	ldr	r3, [r4, #8]
 801e4ea:	6083      	str	r3, [r0, #8]
 801e4ec:	68e3      	ldr	r3, [r4, #12]
 801e4ee:	60c3      	str	r3, [r0, #12]
 801e4f0:	2a24      	cmp	r2, #36	@ 0x24
 801e4f2:	bf01      	itttt	eq
 801e4f4:	6923      	ldreq	r3, [r4, #16]
 801e4f6:	6103      	streq	r3, [r0, #16]
 801e4f8:	6961      	ldreq	r1, [r4, #20]
 801e4fa:	6141      	streq	r1, [r0, #20]
 801e4fc:	bf19      	ittee	ne
 801e4fe:	f104 0210 	addne.w	r2, r4, #16
 801e502:	f100 0310 	addne.w	r3, r0, #16
 801e506:	f104 0218 	addeq.w	r2, r4, #24
 801e50a:	f100 0318 	addeq.w	r3, r0, #24
 801e50e:	e7e0      	b.n	801e4d2 <_realloc_r+0x2ee>
 801e510:	4603      	mov	r3, r0
 801e512:	4622      	mov	r2, r4
 801e514:	e7dd      	b.n	801e4d2 <_realloc_r+0x2ee>
 801e516:	4621      	mov	r1, r4
 801e518:	f000 f896 	bl	801e648 <memmove>
 801e51c:	e7df      	b.n	801e4de <_realloc_r+0x2fa>
 801e51e:	4637      	mov	r7, r6
 801e520:	e6bf      	b.n	801e2a2 <_realloc_r+0xbe>
 801e522:	431f      	orrs	r7, r3
 801e524:	f8c9 7004 	str.w	r7, [r9, #4]
 801e528:	6853      	ldr	r3, [r2, #4]
 801e52a:	f043 0301 	orr.w	r3, r3, #1
 801e52e:	6053      	str	r3, [r2, #4]
 801e530:	e6d3      	b.n	801e2da <_realloc_r+0xf6>
 801e532:	bf00      	nop

0801e534 <__ascii_wctomb>:
 801e534:	4603      	mov	r3, r0
 801e536:	4608      	mov	r0, r1
 801e538:	b141      	cbz	r1, 801e54c <__ascii_wctomb+0x18>
 801e53a:	2aff      	cmp	r2, #255	@ 0xff
 801e53c:	d904      	bls.n	801e548 <__ascii_wctomb+0x14>
 801e53e:	228a      	movs	r2, #138	@ 0x8a
 801e540:	601a      	str	r2, [r3, #0]
 801e542:	f04f 30ff 	mov.w	r0, #4294967295
 801e546:	4770      	bx	lr
 801e548:	700a      	strb	r2, [r1, #0]
 801e54a:	2001      	movs	r0, #1
 801e54c:	4770      	bx	lr

0801e54e <__ssprint_r>:
 801e54e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e552:	6893      	ldr	r3, [r2, #8]
 801e554:	f8d2 b000 	ldr.w	fp, [r2]
 801e558:	9001      	str	r0, [sp, #4]
 801e55a:	460c      	mov	r4, r1
 801e55c:	4617      	mov	r7, r2
 801e55e:	2b00      	cmp	r3, #0
 801e560:	d157      	bne.n	801e612 <__ssprint_r+0xc4>
 801e562:	2000      	movs	r0, #0
 801e564:	2300      	movs	r3, #0
 801e566:	607b      	str	r3, [r7, #4]
 801e568:	b003      	add	sp, #12
 801e56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e56e:	e9db a800 	ldrd	sl, r8, [fp]
 801e572:	f10b 0b08 	add.w	fp, fp, #8
 801e576:	68a6      	ldr	r6, [r4, #8]
 801e578:	6820      	ldr	r0, [r4, #0]
 801e57a:	f1b8 0f00 	cmp.w	r8, #0
 801e57e:	d0f6      	beq.n	801e56e <__ssprint_r+0x20>
 801e580:	45b0      	cmp	r8, r6
 801e582:	d32e      	bcc.n	801e5e2 <__ssprint_r+0x94>
 801e584:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e588:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 801e58c:	d029      	beq.n	801e5e2 <__ssprint_r+0x94>
 801e58e:	6921      	ldr	r1, [r4, #16]
 801e590:	6965      	ldr	r5, [r4, #20]
 801e592:	eba0 0901 	sub.w	r9, r0, r1
 801e596:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e59a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801e59e:	f109 0001 	add.w	r0, r9, #1
 801e5a2:	106d      	asrs	r5, r5, #1
 801e5a4:	4440      	add	r0, r8
 801e5a6:	4285      	cmp	r5, r0
 801e5a8:	bf38      	it	cc
 801e5aa:	4605      	movcc	r5, r0
 801e5ac:	0553      	lsls	r3, r2, #21
 801e5ae:	d534      	bpl.n	801e61a <__ssprint_r+0xcc>
 801e5b0:	9801      	ldr	r0, [sp, #4]
 801e5b2:	4629      	mov	r1, r5
 801e5b4:	f7fc feb2 	bl	801b31c <_malloc_r>
 801e5b8:	4606      	mov	r6, r0
 801e5ba:	2800      	cmp	r0, #0
 801e5bc:	d038      	beq.n	801e630 <__ssprint_r+0xe2>
 801e5be:	464a      	mov	r2, r9
 801e5c0:	6921      	ldr	r1, [r4, #16]
 801e5c2:	f7fc fd77 	bl	801b0b4 <memcpy>
 801e5c6:	89a2      	ldrh	r2, [r4, #12]
 801e5c8:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 801e5cc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801e5d0:	81a2      	strh	r2, [r4, #12]
 801e5d2:	6126      	str	r6, [r4, #16]
 801e5d4:	6165      	str	r5, [r4, #20]
 801e5d6:	444e      	add	r6, r9
 801e5d8:	eba5 0509 	sub.w	r5, r5, r9
 801e5dc:	6026      	str	r6, [r4, #0]
 801e5de:	60a5      	str	r5, [r4, #8]
 801e5e0:	4646      	mov	r6, r8
 801e5e2:	4546      	cmp	r6, r8
 801e5e4:	bf28      	it	cs
 801e5e6:	4646      	movcs	r6, r8
 801e5e8:	4632      	mov	r2, r6
 801e5ea:	4651      	mov	r1, sl
 801e5ec:	6820      	ldr	r0, [r4, #0]
 801e5ee:	f000 f82b 	bl	801e648 <memmove>
 801e5f2:	68a2      	ldr	r2, [r4, #8]
 801e5f4:	1b92      	subs	r2, r2, r6
 801e5f6:	60a2      	str	r2, [r4, #8]
 801e5f8:	6822      	ldr	r2, [r4, #0]
 801e5fa:	4432      	add	r2, r6
 801e5fc:	6022      	str	r2, [r4, #0]
 801e5fe:	68ba      	ldr	r2, [r7, #8]
 801e600:	eba2 0308 	sub.w	r3, r2, r8
 801e604:	44c2      	add	sl, r8
 801e606:	60bb      	str	r3, [r7, #8]
 801e608:	2b00      	cmp	r3, #0
 801e60a:	d0aa      	beq.n	801e562 <__ssprint_r+0x14>
 801e60c:	f04f 0800 	mov.w	r8, #0
 801e610:	e7b1      	b.n	801e576 <__ssprint_r+0x28>
 801e612:	f04f 0a00 	mov.w	sl, #0
 801e616:	46d0      	mov	r8, sl
 801e618:	e7ad      	b.n	801e576 <__ssprint_r+0x28>
 801e61a:	9801      	ldr	r0, [sp, #4]
 801e61c:	462a      	mov	r2, r5
 801e61e:	f7ff fde1 	bl	801e1e4 <_realloc_r>
 801e622:	4606      	mov	r6, r0
 801e624:	2800      	cmp	r0, #0
 801e626:	d1d4      	bne.n	801e5d2 <__ssprint_r+0x84>
 801e628:	6921      	ldr	r1, [r4, #16]
 801e62a:	9801      	ldr	r0, [sp, #4]
 801e62c:	f7fc fdb6 	bl	801b19c <_free_r>
 801e630:	9a01      	ldr	r2, [sp, #4]
 801e632:	230c      	movs	r3, #12
 801e634:	6013      	str	r3, [r2, #0]
 801e636:	89a3      	ldrh	r3, [r4, #12]
 801e638:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e63c:	81a3      	strh	r3, [r4, #12]
 801e63e:	2300      	movs	r3, #0
 801e640:	60bb      	str	r3, [r7, #8]
 801e642:	f04f 30ff 	mov.w	r0, #4294967295
 801e646:	e78d      	b.n	801e564 <__ssprint_r+0x16>

0801e648 <memmove>:
 801e648:	4288      	cmp	r0, r1
 801e64a:	b510      	push	{r4, lr}
 801e64c:	eb01 0402 	add.w	r4, r1, r2
 801e650:	d902      	bls.n	801e658 <memmove+0x10>
 801e652:	4284      	cmp	r4, r0
 801e654:	4623      	mov	r3, r4
 801e656:	d807      	bhi.n	801e668 <memmove+0x20>
 801e658:	1e43      	subs	r3, r0, #1
 801e65a:	42a1      	cmp	r1, r4
 801e65c:	d008      	beq.n	801e670 <memmove+0x28>
 801e65e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e662:	f803 2f01 	strb.w	r2, [r3, #1]!
 801e666:	e7f8      	b.n	801e65a <memmove+0x12>
 801e668:	4402      	add	r2, r0
 801e66a:	4601      	mov	r1, r0
 801e66c:	428a      	cmp	r2, r1
 801e66e:	d100      	bne.n	801e672 <memmove+0x2a>
 801e670:	bd10      	pop	{r4, pc}
 801e672:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801e676:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801e67a:	e7f7      	b.n	801e66c <memmove+0x24>

0801e67c <__assert_func>:
 801e67c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801e67e:	4614      	mov	r4, r2
 801e680:	461a      	mov	r2, r3
 801e682:	4b09      	ldr	r3, [pc, #36]	@ (801e6a8 <__assert_func+0x2c>)
 801e684:	681b      	ldr	r3, [r3, #0]
 801e686:	4605      	mov	r5, r0
 801e688:	68d8      	ldr	r0, [r3, #12]
 801e68a:	b954      	cbnz	r4, 801e6a2 <__assert_func+0x26>
 801e68c:	4b07      	ldr	r3, [pc, #28]	@ (801e6ac <__assert_func+0x30>)
 801e68e:	461c      	mov	r4, r3
 801e690:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801e694:	9100      	str	r1, [sp, #0]
 801e696:	462b      	mov	r3, r5
 801e698:	4905      	ldr	r1, [pc, #20]	@ (801e6b0 <__assert_func+0x34>)
 801e69a:	f000 f843 	bl	801e724 <fiprintf>
 801e69e:	f000 ff59 	bl	801f554 <abort>
 801e6a2:	4b04      	ldr	r3, [pc, #16]	@ (801e6b4 <__assert_func+0x38>)
 801e6a4:	e7f4      	b.n	801e690 <__assert_func+0x14>
 801e6a6:	bf00      	nop
 801e6a8:	20000120 	.word	0x20000120
 801e6ac:	08021a8c 	.word	0x08021a8c
 801e6b0:	08021a5e 	.word	0x08021a5e
 801e6b4:	08021a51 	.word	0x08021a51

0801e6b8 <_calloc_r>:
 801e6b8:	b538      	push	{r3, r4, r5, lr}
 801e6ba:	fba1 1502 	umull	r1, r5, r1, r2
 801e6be:	b935      	cbnz	r5, 801e6ce <_calloc_r+0x16>
 801e6c0:	f7fc fe2c 	bl	801b31c <_malloc_r>
 801e6c4:	4604      	mov	r4, r0
 801e6c6:	b938      	cbnz	r0, 801e6d8 <_calloc_r+0x20>
 801e6c8:	2400      	movs	r4, #0
 801e6ca:	4620      	mov	r0, r4
 801e6cc:	bd38      	pop	{r3, r4, r5, pc}
 801e6ce:	f7fc fcc3 	bl	801b058 <__errno>
 801e6d2:	230c      	movs	r3, #12
 801e6d4:	6003      	str	r3, [r0, #0]
 801e6d6:	e7f7      	b.n	801e6c8 <_calloc_r+0x10>
 801e6d8:	f850 2c04 	ldr.w	r2, [r0, #-4]
 801e6dc:	f022 0203 	bic.w	r2, r2, #3
 801e6e0:	3a04      	subs	r2, #4
 801e6e2:	2a24      	cmp	r2, #36	@ 0x24
 801e6e4:	d819      	bhi.n	801e71a <_calloc_r+0x62>
 801e6e6:	2a13      	cmp	r2, #19
 801e6e8:	d915      	bls.n	801e716 <_calloc_r+0x5e>
 801e6ea:	2a1b      	cmp	r2, #27
 801e6ec:	e9c0 5500 	strd	r5, r5, [r0]
 801e6f0:	d806      	bhi.n	801e700 <_calloc_r+0x48>
 801e6f2:	f100 0308 	add.w	r3, r0, #8
 801e6f6:	2200      	movs	r2, #0
 801e6f8:	e9c3 2200 	strd	r2, r2, [r3]
 801e6fc:	609a      	str	r2, [r3, #8]
 801e6fe:	e7e4      	b.n	801e6ca <_calloc_r+0x12>
 801e700:	2a24      	cmp	r2, #36	@ 0x24
 801e702:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801e706:	bf11      	iteee	ne
 801e708:	f100 0310 	addne.w	r3, r0, #16
 801e70c:	6105      	streq	r5, [r0, #16]
 801e70e:	f100 0318 	addeq.w	r3, r0, #24
 801e712:	6145      	streq	r5, [r0, #20]
 801e714:	e7ef      	b.n	801e6f6 <_calloc_r+0x3e>
 801e716:	4603      	mov	r3, r0
 801e718:	e7ed      	b.n	801e6f6 <_calloc_r+0x3e>
 801e71a:	4629      	mov	r1, r5
 801e71c:	f7fc fc21 	bl	801af62 <memset>
 801e720:	e7d3      	b.n	801e6ca <_calloc_r+0x12>
	...

0801e724 <fiprintf>:
 801e724:	b40e      	push	{r1, r2, r3}
 801e726:	b503      	push	{r0, r1, lr}
 801e728:	4601      	mov	r1, r0
 801e72a:	ab03      	add	r3, sp, #12
 801e72c:	4805      	ldr	r0, [pc, #20]	@ (801e744 <fiprintf+0x20>)
 801e72e:	f853 2b04 	ldr.w	r2, [r3], #4
 801e732:	6800      	ldr	r0, [r0, #0]
 801e734:	9301      	str	r3, [sp, #4]
 801e736:	f000 f839 	bl	801e7ac <_vfiprintf_r>
 801e73a:	b002      	add	sp, #8
 801e73c:	f85d eb04 	ldr.w	lr, [sp], #4
 801e740:	b003      	add	sp, #12
 801e742:	4770      	bx	lr
 801e744:	20000120 	.word	0x20000120

0801e748 <__sprint_r>:
 801e748:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e74c:	6893      	ldr	r3, [r2, #8]
 801e74e:	4680      	mov	r8, r0
 801e750:	460e      	mov	r6, r1
 801e752:	4614      	mov	r4, r2
 801e754:	b343      	cbz	r3, 801e7a8 <__sprint_r+0x60>
 801e756:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 801e758:	049d      	lsls	r5, r3, #18
 801e75a:	d522      	bpl.n	801e7a2 <__sprint_r+0x5a>
 801e75c:	6815      	ldr	r5, [r2, #0]
 801e75e:	68a0      	ldr	r0, [r4, #8]
 801e760:	3508      	adds	r5, #8
 801e762:	b928      	cbnz	r0, 801e770 <__sprint_r+0x28>
 801e764:	2300      	movs	r3, #0
 801e766:	60a3      	str	r3, [r4, #8]
 801e768:	2300      	movs	r3, #0
 801e76a:	6063      	str	r3, [r4, #4]
 801e76c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e770:	e955 b702 	ldrd	fp, r7, [r5, #-8]
 801e774:	f04f 0900 	mov.w	r9, #0
 801e778:	ea4f 0a97 	mov.w	sl, r7, lsr #2
 801e77c:	45ca      	cmp	sl, r9
 801e77e:	dc05      	bgt.n	801e78c <__sprint_r+0x44>
 801e780:	68a3      	ldr	r3, [r4, #8]
 801e782:	f027 0703 	bic.w	r7, r7, #3
 801e786:	1bdb      	subs	r3, r3, r7
 801e788:	60a3      	str	r3, [r4, #8]
 801e78a:	e7e8      	b.n	801e75e <__sprint_r+0x16>
 801e78c:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 801e790:	4632      	mov	r2, r6
 801e792:	4640      	mov	r0, r8
 801e794:	f000 feb5 	bl	801f502 <_fputwc_r>
 801e798:	1c43      	adds	r3, r0, #1
 801e79a:	d0e3      	beq.n	801e764 <__sprint_r+0x1c>
 801e79c:	f109 0901 	add.w	r9, r9, #1
 801e7a0:	e7ec      	b.n	801e77c <__sprint_r+0x34>
 801e7a2:	f000 fccb 	bl	801f13c <__sfvwrite_r>
 801e7a6:	e7dd      	b.n	801e764 <__sprint_r+0x1c>
 801e7a8:	4618      	mov	r0, r3
 801e7aa:	e7dd      	b.n	801e768 <__sprint_r+0x20>

0801e7ac <_vfiprintf_r>:
 801e7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7b0:	b0bb      	sub	sp, #236	@ 0xec
 801e7b2:	460f      	mov	r7, r1
 801e7b4:	4693      	mov	fp, r2
 801e7b6:	461c      	mov	r4, r3
 801e7b8:	461d      	mov	r5, r3
 801e7ba:	9000      	str	r0, [sp, #0]
 801e7bc:	b118      	cbz	r0, 801e7c6 <_vfiprintf_r+0x1a>
 801e7be:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801e7c0:	b90b      	cbnz	r3, 801e7c6 <_vfiprintf_r+0x1a>
 801e7c2:	f7fc fb21 	bl	801ae08 <__sinit>
 801e7c6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e7c8:	07db      	lsls	r3, r3, #31
 801e7ca:	d405      	bmi.n	801e7d8 <_vfiprintf_r+0x2c>
 801e7cc:	89bb      	ldrh	r3, [r7, #12]
 801e7ce:	059e      	lsls	r6, r3, #22
 801e7d0:	d402      	bmi.n	801e7d8 <_vfiprintf_r+0x2c>
 801e7d2:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e7d4:	f7fc fc6c 	bl	801b0b0 <__retarget_lock_acquire_recursive>
 801e7d8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801e7dc:	0498      	lsls	r0, r3, #18
 801e7de:	d406      	bmi.n	801e7ee <_vfiprintf_r+0x42>
 801e7e0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801e7e4:	81bb      	strh	r3, [r7, #12]
 801e7e6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e7e8:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801e7ec:	667b      	str	r3, [r7, #100]	@ 0x64
 801e7ee:	89bb      	ldrh	r3, [r7, #12]
 801e7f0:	0719      	lsls	r1, r3, #28
 801e7f2:	d501      	bpl.n	801e7f8 <_vfiprintf_r+0x4c>
 801e7f4:	693b      	ldr	r3, [r7, #16]
 801e7f6:	b9ab      	cbnz	r3, 801e824 <_vfiprintf_r+0x78>
 801e7f8:	9800      	ldr	r0, [sp, #0]
 801e7fa:	4639      	mov	r1, r7
 801e7fc:	f000 fdea 	bl	801f3d4 <__swsetup_r>
 801e800:	b180      	cbz	r0, 801e824 <_vfiprintf_r+0x78>
 801e802:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e804:	07da      	lsls	r2, r3, #31
 801e806:	d506      	bpl.n	801e816 <_vfiprintf_r+0x6a>
 801e808:	f04f 33ff 	mov.w	r3, #4294967295
 801e80c:	9303      	str	r3, [sp, #12]
 801e80e:	9803      	ldr	r0, [sp, #12]
 801e810:	b03b      	add	sp, #236	@ 0xec
 801e812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e816:	89bb      	ldrh	r3, [r7, #12]
 801e818:	059b      	lsls	r3, r3, #22
 801e81a:	d4f5      	bmi.n	801e808 <_vfiprintf_r+0x5c>
 801e81c:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e81e:	f7fc fc48 	bl	801b0b2 <__retarget_lock_release_recursive>
 801e822:	e7f1      	b.n	801e808 <_vfiprintf_r+0x5c>
 801e824:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801e828:	f003 021a 	and.w	r2, r3, #26
 801e82c:	2a0a      	cmp	r2, #10
 801e82e:	d114      	bne.n	801e85a <_vfiprintf_r+0xae>
 801e830:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 801e834:	2a00      	cmp	r2, #0
 801e836:	db10      	blt.n	801e85a <_vfiprintf_r+0xae>
 801e838:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 801e83a:	07d6      	lsls	r6, r2, #31
 801e83c:	d404      	bmi.n	801e848 <_vfiprintf_r+0x9c>
 801e83e:	059d      	lsls	r5, r3, #22
 801e840:	d402      	bmi.n	801e848 <_vfiprintf_r+0x9c>
 801e842:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e844:	f7fc fc35 	bl	801b0b2 <__retarget_lock_release_recursive>
 801e848:	9800      	ldr	r0, [sp, #0]
 801e84a:	4623      	mov	r3, r4
 801e84c:	465a      	mov	r2, fp
 801e84e:	4639      	mov	r1, r7
 801e850:	b03b      	add	sp, #236	@ 0xec
 801e852:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e856:	f000 bc31 	b.w	801f0bc <__sbprintf>
 801e85a:	2300      	movs	r3, #0
 801e85c:	e9cd 330f 	strd	r3, r3, [sp, #60]	@ 0x3c
 801e860:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801e864:	ae11      	add	r6, sp, #68	@ 0x44
 801e866:	960e      	str	r6, [sp, #56]	@ 0x38
 801e868:	9307      	str	r3, [sp, #28]
 801e86a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e86c:	9303      	str	r3, [sp, #12]
 801e86e:	465b      	mov	r3, fp
 801e870:	461c      	mov	r4, r3
 801e872:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e876:	b10a      	cbz	r2, 801e87c <_vfiprintf_r+0xd0>
 801e878:	2a25      	cmp	r2, #37	@ 0x25
 801e87a:	d1f9      	bne.n	801e870 <_vfiprintf_r+0xc4>
 801e87c:	ebb4 080b 	subs.w	r8, r4, fp
 801e880:	d00d      	beq.n	801e89e <_vfiprintf_r+0xf2>
 801e882:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e884:	4443      	add	r3, r8
 801e886:	9310      	str	r3, [sp, #64]	@ 0x40
 801e888:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e88a:	3301      	adds	r3, #1
 801e88c:	2b07      	cmp	r3, #7
 801e88e:	e9c6 b800 	strd	fp, r8, [r6]
 801e892:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e894:	dc75      	bgt.n	801e982 <_vfiprintf_r+0x1d6>
 801e896:	3608      	adds	r6, #8
 801e898:	9b03      	ldr	r3, [sp, #12]
 801e89a:	4443      	add	r3, r8
 801e89c:	9303      	str	r3, [sp, #12]
 801e89e:	7823      	ldrb	r3, [r4, #0]
 801e8a0:	2b00      	cmp	r3, #0
 801e8a2:	f000 83cd 	beq.w	801f040 <_vfiprintf_r+0x894>
 801e8a6:	2300      	movs	r3, #0
 801e8a8:	f04f 32ff 	mov.w	r2, #4294967295
 801e8ac:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801e8b0:	3401      	adds	r4, #1
 801e8b2:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801e8b6:	469a      	mov	sl, r3
 801e8b8:	46a3      	mov	fp, r4
 801e8ba:	f81b 3b01 	ldrb.w	r3, [fp], #1
 801e8be:	f1a3 0220 	sub.w	r2, r3, #32
 801e8c2:	2a5a      	cmp	r2, #90	@ 0x5a
 801e8c4:	f200 8316 	bhi.w	801eef4 <_vfiprintf_r+0x748>
 801e8c8:	e8df f012 	tbh	[pc, r2, lsl #1]
 801e8cc:	0314009a 	.word	0x0314009a
 801e8d0:	00a20314 	.word	0x00a20314
 801e8d4:	03140314 	.word	0x03140314
 801e8d8:	00820314 	.word	0x00820314
 801e8dc:	03140314 	.word	0x03140314
 801e8e0:	00af00a5 	.word	0x00af00a5
 801e8e4:	00ac0314 	.word	0x00ac0314
 801e8e8:	031400b1 	.word	0x031400b1
 801e8ec:	00d000cd 	.word	0x00d000cd
 801e8f0:	00d000d0 	.word	0x00d000d0
 801e8f4:	00d000d0 	.word	0x00d000d0
 801e8f8:	00d000d0 	.word	0x00d000d0
 801e8fc:	00d000d0 	.word	0x00d000d0
 801e900:	03140314 	.word	0x03140314
 801e904:	03140314 	.word	0x03140314
 801e908:	03140314 	.word	0x03140314
 801e90c:	03140314 	.word	0x03140314
 801e910:	00f70314 	.word	0x00f70314
 801e914:	03140104 	.word	0x03140104
 801e918:	03140314 	.word	0x03140314
 801e91c:	03140314 	.word	0x03140314
 801e920:	03140314 	.word	0x03140314
 801e924:	03140314 	.word	0x03140314
 801e928:	01520314 	.word	0x01520314
 801e92c:	03140314 	.word	0x03140314
 801e930:	019a0314 	.word	0x019a0314
 801e934:	027a0314 	.word	0x027a0314
 801e938:	03140314 	.word	0x03140314
 801e93c:	0314029a 	.word	0x0314029a
 801e940:	03140314 	.word	0x03140314
 801e944:	03140314 	.word	0x03140314
 801e948:	03140314 	.word	0x03140314
 801e94c:	03140314 	.word	0x03140314
 801e950:	00f70314 	.word	0x00f70314
 801e954:	03140106 	.word	0x03140106
 801e958:	03140314 	.word	0x03140314
 801e95c:	010600e0 	.word	0x010600e0
 801e960:	031400f1 	.word	0x031400f1
 801e964:	031400eb 	.word	0x031400eb
 801e968:	01540132 	.word	0x01540132
 801e96c:	00f10189 	.word	0x00f10189
 801e970:	019a0314 	.word	0x019a0314
 801e974:	027c0098 	.word	0x027c0098
 801e978:	03140314 	.word	0x03140314
 801e97c:	03140065 	.word	0x03140065
 801e980:	0098      	.short	0x0098
 801e982:	9800      	ldr	r0, [sp, #0]
 801e984:	aa0e      	add	r2, sp, #56	@ 0x38
 801e986:	4639      	mov	r1, r7
 801e988:	f7ff fede 	bl	801e748 <__sprint_r>
 801e98c:	2800      	cmp	r0, #0
 801e98e:	f040 8336 	bne.w	801effe <_vfiprintf_r+0x852>
 801e992:	ae11      	add	r6, sp, #68	@ 0x44
 801e994:	e780      	b.n	801e898 <_vfiprintf_r+0xec>
 801e996:	4a99      	ldr	r2, [pc, #612]	@ (801ebfc <_vfiprintf_r+0x450>)
 801e998:	9205      	str	r2, [sp, #20]
 801e99a:	f01a 0220 	ands.w	r2, sl, #32
 801e99e:	f000 8231 	beq.w	801ee04 <_vfiprintf_r+0x658>
 801e9a2:	3507      	adds	r5, #7
 801e9a4:	f025 0507 	bic.w	r5, r5, #7
 801e9a8:	46a8      	mov	r8, r5
 801e9aa:	686d      	ldr	r5, [r5, #4]
 801e9ac:	f858 4b08 	ldr.w	r4, [r8], #8
 801e9b0:	f01a 0f01 	tst.w	sl, #1
 801e9b4:	d009      	beq.n	801e9ca <_vfiprintf_r+0x21e>
 801e9b6:	ea54 0205 	orrs.w	r2, r4, r5
 801e9ba:	bf1f      	itttt	ne
 801e9bc:	2230      	movne	r2, #48	@ 0x30
 801e9be:	f88d 2034 	strbne.w	r2, [sp, #52]	@ 0x34
 801e9c2:	f88d 3035 	strbne.w	r3, [sp, #53]	@ 0x35
 801e9c6:	f04a 0a02 	orrne.w	sl, sl, #2
 801e9ca:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 801e9ce:	e112      	b.n	801ebf6 <_vfiprintf_r+0x44a>
 801e9d0:	9800      	ldr	r0, [sp, #0]
 801e9d2:	f7fe f9e3 	bl	801cd9c <_localeconv_r>
 801e9d6:	6843      	ldr	r3, [r0, #4]
 801e9d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801e9da:	4618      	mov	r0, r3
 801e9dc:	f7e1 fbf8 	bl	80001d0 <strlen>
 801e9e0:	9007      	str	r0, [sp, #28]
 801e9e2:	9800      	ldr	r0, [sp, #0]
 801e9e4:	f7fe f9da 	bl	801cd9c <_localeconv_r>
 801e9e8:	6883      	ldr	r3, [r0, #8]
 801e9ea:	9306      	str	r3, [sp, #24]
 801e9ec:	9b07      	ldr	r3, [sp, #28]
 801e9ee:	b12b      	cbz	r3, 801e9fc <_vfiprintf_r+0x250>
 801e9f0:	9b06      	ldr	r3, [sp, #24]
 801e9f2:	b11b      	cbz	r3, 801e9fc <_vfiprintf_r+0x250>
 801e9f4:	781b      	ldrb	r3, [r3, #0]
 801e9f6:	b10b      	cbz	r3, 801e9fc <_vfiprintf_r+0x250>
 801e9f8:	f44a 6a80 	orr.w	sl, sl, #1024	@ 0x400
 801e9fc:	465c      	mov	r4, fp
 801e9fe:	e75b      	b.n	801e8b8 <_vfiprintf_r+0x10c>
 801ea00:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 801ea04:	2b00      	cmp	r3, #0
 801ea06:	d1f9      	bne.n	801e9fc <_vfiprintf_r+0x250>
 801ea08:	2320      	movs	r3, #32
 801ea0a:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801ea0e:	e7f5      	b.n	801e9fc <_vfiprintf_r+0x250>
 801ea10:	f04a 0a01 	orr.w	sl, sl, #1
 801ea14:	e7f2      	b.n	801e9fc <_vfiprintf_r+0x250>
 801ea16:	f855 3b04 	ldr.w	r3, [r5], #4
 801ea1a:	9302      	str	r3, [sp, #8]
 801ea1c:	2b00      	cmp	r3, #0
 801ea1e:	daed      	bge.n	801e9fc <_vfiprintf_r+0x250>
 801ea20:	425b      	negs	r3, r3
 801ea22:	9302      	str	r3, [sp, #8]
 801ea24:	f04a 0a04 	orr.w	sl, sl, #4
 801ea28:	e7e8      	b.n	801e9fc <_vfiprintf_r+0x250>
 801ea2a:	232b      	movs	r3, #43	@ 0x2b
 801ea2c:	e7ed      	b.n	801ea0a <_vfiprintf_r+0x25e>
 801ea2e:	465a      	mov	r2, fp
 801ea30:	f812 3b01 	ldrb.w	r3, [r2], #1
 801ea34:	2b2a      	cmp	r3, #42	@ 0x2a
 801ea36:	d112      	bne.n	801ea5e <_vfiprintf_r+0x2b2>
 801ea38:	f855 3b04 	ldr.w	r3, [r5], #4
 801ea3c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801ea40:	9301      	str	r3, [sp, #4]
 801ea42:	4693      	mov	fp, r2
 801ea44:	e7da      	b.n	801e9fc <_vfiprintf_r+0x250>
 801ea46:	9b01      	ldr	r3, [sp, #4]
 801ea48:	fb00 1303 	mla	r3, r0, r3, r1
 801ea4c:	9301      	str	r3, [sp, #4]
 801ea4e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801ea52:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 801ea56:	2909      	cmp	r1, #9
 801ea58:	d9f5      	bls.n	801ea46 <_vfiprintf_r+0x29a>
 801ea5a:	4693      	mov	fp, r2
 801ea5c:	e72f      	b.n	801e8be <_vfiprintf_r+0x112>
 801ea5e:	2100      	movs	r1, #0
 801ea60:	9101      	str	r1, [sp, #4]
 801ea62:	200a      	movs	r0, #10
 801ea64:	e7f5      	b.n	801ea52 <_vfiprintf_r+0x2a6>
 801ea66:	f04a 0a80 	orr.w	sl, sl, #128	@ 0x80
 801ea6a:	e7c7      	b.n	801e9fc <_vfiprintf_r+0x250>
 801ea6c:	2100      	movs	r1, #0
 801ea6e:	465a      	mov	r2, fp
 801ea70:	9102      	str	r1, [sp, #8]
 801ea72:	200a      	movs	r0, #10
 801ea74:	9902      	ldr	r1, [sp, #8]
 801ea76:	3b30      	subs	r3, #48	@ 0x30
 801ea78:	fb00 3301 	mla	r3, r0, r1, r3
 801ea7c:	9302      	str	r3, [sp, #8]
 801ea7e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801ea82:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 801ea86:	2909      	cmp	r1, #9
 801ea88:	d9f4      	bls.n	801ea74 <_vfiprintf_r+0x2c8>
 801ea8a:	e7e6      	b.n	801ea5a <_vfiprintf_r+0x2ae>
 801ea8c:	f89b 3000 	ldrb.w	r3, [fp]
 801ea90:	2b68      	cmp	r3, #104	@ 0x68
 801ea92:	bf06      	itte	eq
 801ea94:	f10b 0b01 	addeq.w	fp, fp, #1
 801ea98:	f44a 7a00 	orreq.w	sl, sl, #512	@ 0x200
 801ea9c:	f04a 0a40 	orrne.w	sl, sl, #64	@ 0x40
 801eaa0:	e7ac      	b.n	801e9fc <_vfiprintf_r+0x250>
 801eaa2:	f89b 3000 	ldrb.w	r3, [fp]
 801eaa6:	2b6c      	cmp	r3, #108	@ 0x6c
 801eaa8:	d104      	bne.n	801eab4 <_vfiprintf_r+0x308>
 801eaaa:	f10b 0b01 	add.w	fp, fp, #1
 801eaae:	f04a 0a20 	orr.w	sl, sl, #32
 801eab2:	e7a3      	b.n	801e9fc <_vfiprintf_r+0x250>
 801eab4:	f04a 0a10 	orr.w	sl, sl, #16
 801eab8:	e7a0      	b.n	801e9fc <_vfiprintf_r+0x250>
 801eaba:	46a8      	mov	r8, r5
 801eabc:	2400      	movs	r4, #0
 801eabe:	f858 3b04 	ldr.w	r3, [r8], #4
 801eac2:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 801eac6:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 801eaca:	2301      	movs	r3, #1
 801eacc:	9301      	str	r3, [sp, #4]
 801eace:	f10d 0984 	add.w	r9, sp, #132	@ 0x84
 801ead2:	e0ab      	b.n	801ec2c <_vfiprintf_r+0x480>
 801ead4:	f04a 0a10 	orr.w	sl, sl, #16
 801ead8:	f01a 0f20 	tst.w	sl, #32
 801eadc:	d011      	beq.n	801eb02 <_vfiprintf_r+0x356>
 801eade:	3507      	adds	r5, #7
 801eae0:	f025 0507 	bic.w	r5, r5, #7
 801eae4:	46a8      	mov	r8, r5
 801eae6:	686d      	ldr	r5, [r5, #4]
 801eae8:	f858 4b08 	ldr.w	r4, [r8], #8
 801eaec:	2d00      	cmp	r5, #0
 801eaee:	da06      	bge.n	801eafe <_vfiprintf_r+0x352>
 801eaf0:	4264      	negs	r4, r4
 801eaf2:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801eaf6:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 801eafa:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801eafe:	2301      	movs	r3, #1
 801eb00:	e048      	b.n	801eb94 <_vfiprintf_r+0x3e8>
 801eb02:	46a8      	mov	r8, r5
 801eb04:	f01a 0f10 	tst.w	sl, #16
 801eb08:	f858 5b04 	ldr.w	r5, [r8], #4
 801eb0c:	d002      	beq.n	801eb14 <_vfiprintf_r+0x368>
 801eb0e:	462c      	mov	r4, r5
 801eb10:	17ed      	asrs	r5, r5, #31
 801eb12:	e7eb      	b.n	801eaec <_vfiprintf_r+0x340>
 801eb14:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 801eb18:	d003      	beq.n	801eb22 <_vfiprintf_r+0x376>
 801eb1a:	b22c      	sxth	r4, r5
 801eb1c:	f345 35c0 	sbfx	r5, r5, #15, #1
 801eb20:	e7e4      	b.n	801eaec <_vfiprintf_r+0x340>
 801eb22:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 801eb26:	d0f2      	beq.n	801eb0e <_vfiprintf_r+0x362>
 801eb28:	b26c      	sxtb	r4, r5
 801eb2a:	f345 15c0 	sbfx	r5, r5, #7, #1
 801eb2e:	e7dd      	b.n	801eaec <_vfiprintf_r+0x340>
 801eb30:	f01a 0f20 	tst.w	sl, #32
 801eb34:	d007      	beq.n	801eb46 <_vfiprintf_r+0x39a>
 801eb36:	9a03      	ldr	r2, [sp, #12]
 801eb38:	682b      	ldr	r3, [r5, #0]
 801eb3a:	9903      	ldr	r1, [sp, #12]
 801eb3c:	17d2      	asrs	r2, r2, #31
 801eb3e:	e9c3 1200 	strd	r1, r2, [r3]
 801eb42:	3504      	adds	r5, #4
 801eb44:	e693      	b.n	801e86e <_vfiprintf_r+0xc2>
 801eb46:	f01a 0f10 	tst.w	sl, #16
 801eb4a:	d003      	beq.n	801eb54 <_vfiprintf_r+0x3a8>
 801eb4c:	682b      	ldr	r3, [r5, #0]
 801eb4e:	9a03      	ldr	r2, [sp, #12]
 801eb50:	601a      	str	r2, [r3, #0]
 801eb52:	e7f6      	b.n	801eb42 <_vfiprintf_r+0x396>
 801eb54:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 801eb58:	d003      	beq.n	801eb62 <_vfiprintf_r+0x3b6>
 801eb5a:	682b      	ldr	r3, [r5, #0]
 801eb5c:	9a03      	ldr	r2, [sp, #12]
 801eb5e:	801a      	strh	r2, [r3, #0]
 801eb60:	e7ef      	b.n	801eb42 <_vfiprintf_r+0x396>
 801eb62:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 801eb66:	d0f1      	beq.n	801eb4c <_vfiprintf_r+0x3a0>
 801eb68:	682b      	ldr	r3, [r5, #0]
 801eb6a:	9a03      	ldr	r2, [sp, #12]
 801eb6c:	701a      	strb	r2, [r3, #0]
 801eb6e:	e7e8      	b.n	801eb42 <_vfiprintf_r+0x396>
 801eb70:	f04a 0a10 	orr.w	sl, sl, #16
 801eb74:	f01a 0320 	ands.w	r3, sl, #32
 801eb78:	d01f      	beq.n	801ebba <_vfiprintf_r+0x40e>
 801eb7a:	3507      	adds	r5, #7
 801eb7c:	f025 0507 	bic.w	r5, r5, #7
 801eb80:	46a8      	mov	r8, r5
 801eb82:	686d      	ldr	r5, [r5, #4]
 801eb84:	f858 4b08 	ldr.w	r4, [r8], #8
 801eb88:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 801eb8c:	2300      	movs	r3, #0
 801eb8e:	2200      	movs	r2, #0
 801eb90:	f88d 2033 	strb.w	r2, [sp, #51]	@ 0x33
 801eb94:	9a01      	ldr	r2, [sp, #4]
 801eb96:	3201      	adds	r2, #1
 801eb98:	f000 825f 	beq.w	801f05a <_vfiprintf_r+0x8ae>
 801eb9c:	f02a 0280 	bic.w	r2, sl, #128	@ 0x80
 801eba0:	9204      	str	r2, [sp, #16]
 801eba2:	ea54 0205 	orrs.w	r2, r4, r5
 801eba6:	f040 825e 	bne.w	801f066 <_vfiprintf_r+0x8ba>
 801ebaa:	9a01      	ldr	r2, [sp, #4]
 801ebac:	2a00      	cmp	r2, #0
 801ebae:	f000 8198 	beq.w	801eee2 <_vfiprintf_r+0x736>
 801ebb2:	2b01      	cmp	r3, #1
 801ebb4:	f040 825a 	bne.w	801f06c <_vfiprintf_r+0x8c0>
 801ebb8:	e13b      	b.n	801ee32 <_vfiprintf_r+0x686>
 801ebba:	46a8      	mov	r8, r5
 801ebbc:	f01a 0510 	ands.w	r5, sl, #16
 801ebc0:	f858 4b04 	ldr.w	r4, [r8], #4
 801ebc4:	d001      	beq.n	801ebca <_vfiprintf_r+0x41e>
 801ebc6:	461d      	mov	r5, r3
 801ebc8:	e7de      	b.n	801eb88 <_vfiprintf_r+0x3dc>
 801ebca:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 801ebce:	d001      	beq.n	801ebd4 <_vfiprintf_r+0x428>
 801ebd0:	b2a4      	uxth	r4, r4
 801ebd2:	e7d9      	b.n	801eb88 <_vfiprintf_r+0x3dc>
 801ebd4:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ebd8:	d0d6      	beq.n	801eb88 <_vfiprintf_r+0x3dc>
 801ebda:	b2e4      	uxtb	r4, r4
 801ebdc:	e7f3      	b.n	801ebc6 <_vfiprintf_r+0x41a>
 801ebde:	46a8      	mov	r8, r5
 801ebe0:	f647 0330 	movw	r3, #30768	@ 0x7830
 801ebe4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801ebe8:	f858 4b04 	ldr.w	r4, [r8], #4
 801ebec:	4b03      	ldr	r3, [pc, #12]	@ (801ebfc <_vfiprintf_r+0x450>)
 801ebee:	9305      	str	r3, [sp, #20]
 801ebf0:	2500      	movs	r5, #0
 801ebf2:	f04a 0a02 	orr.w	sl, sl, #2
 801ebf6:	2302      	movs	r3, #2
 801ebf8:	e7c9      	b.n	801eb8e <_vfiprintf_r+0x3e2>
 801ebfa:	bf00      	nop
 801ebfc:	08021734 	.word	0x08021734
 801ec00:	9b01      	ldr	r3, [sp, #4]
 801ec02:	46a8      	mov	r8, r5
 801ec04:	1c5c      	adds	r4, r3, #1
 801ec06:	f04f 0500 	mov.w	r5, #0
 801ec0a:	f858 9b04 	ldr.w	r9, [r8], #4
 801ec0e:	f88d 5033 	strb.w	r5, [sp, #51]	@ 0x33
 801ec12:	f000 80d0 	beq.w	801edb6 <_vfiprintf_r+0x60a>
 801ec16:	461a      	mov	r2, r3
 801ec18:	4629      	mov	r1, r5
 801ec1a:	4648      	mov	r0, r9
 801ec1c:	f7e1 fae0 	bl	80001e0 <memchr>
 801ec20:	4604      	mov	r4, r0
 801ec22:	b118      	cbz	r0, 801ec2c <_vfiprintf_r+0x480>
 801ec24:	eba0 0309 	sub.w	r3, r0, r9
 801ec28:	9301      	str	r3, [sp, #4]
 801ec2a:	462c      	mov	r4, r5
 801ec2c:	9b01      	ldr	r3, [sp, #4]
 801ec2e:	42a3      	cmp	r3, r4
 801ec30:	bfb8      	it	lt
 801ec32:	4623      	movlt	r3, r4
 801ec34:	9304      	str	r3, [sp, #16]
 801ec36:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 801ec3a:	b113      	cbz	r3, 801ec42 <_vfiprintf_r+0x496>
 801ec3c:	9b04      	ldr	r3, [sp, #16]
 801ec3e:	3301      	adds	r3, #1
 801ec40:	9304      	str	r3, [sp, #16]
 801ec42:	f01a 0302 	ands.w	r3, sl, #2
 801ec46:	9308      	str	r3, [sp, #32]
 801ec48:	bf1e      	ittt	ne
 801ec4a:	9b04      	ldrne	r3, [sp, #16]
 801ec4c:	3302      	addne	r3, #2
 801ec4e:	9304      	strne	r3, [sp, #16]
 801ec50:	f01a 0384 	ands.w	r3, sl, #132	@ 0x84
 801ec54:	930a      	str	r3, [sp, #40]	@ 0x28
 801ec56:	d11f      	bne.n	801ec98 <_vfiprintf_r+0x4ec>
 801ec58:	9b02      	ldr	r3, [sp, #8]
 801ec5a:	9a04      	ldr	r2, [sp, #16]
 801ec5c:	1a9d      	subs	r5, r3, r2
 801ec5e:	2d00      	cmp	r5, #0
 801ec60:	dd1a      	ble.n	801ec98 <_vfiprintf_r+0x4ec>
 801ec62:	4ba9      	ldr	r3, [pc, #676]	@ (801ef08 <_vfiprintf_r+0x75c>)
 801ec64:	6033      	str	r3, [r6, #0]
 801ec66:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 801ec6a:	2d10      	cmp	r5, #16
 801ec6c:	f102 0201 	add.w	r2, r2, #1
 801ec70:	f106 0008 	add.w	r0, r6, #8
 801ec74:	f300 814e 	bgt.w	801ef14 <_vfiprintf_r+0x768>
 801ec78:	6075      	str	r5, [r6, #4]
 801ec7a:	2a07      	cmp	r2, #7
 801ec7c:	4465      	add	r5, ip
 801ec7e:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 801ec82:	f340 815a 	ble.w	801ef3a <_vfiprintf_r+0x78e>
 801ec86:	9800      	ldr	r0, [sp, #0]
 801ec88:	aa0e      	add	r2, sp, #56	@ 0x38
 801ec8a:	4639      	mov	r1, r7
 801ec8c:	f7ff fd5c 	bl	801e748 <__sprint_r>
 801ec90:	2800      	cmp	r0, #0
 801ec92:	f040 81b4 	bne.w	801effe <_vfiprintf_r+0x852>
 801ec96:	ae11      	add	r6, sp, #68	@ 0x44
 801ec98:	f89d 1033 	ldrb.w	r1, [sp, #51]	@ 0x33
 801ec9c:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801eca0:	b161      	cbz	r1, 801ecbc <_vfiprintf_r+0x510>
 801eca2:	f10d 0133 	add.w	r1, sp, #51	@ 0x33
 801eca6:	3301      	adds	r3, #1
 801eca8:	6031      	str	r1, [r6, #0]
 801ecaa:	2101      	movs	r1, #1
 801ecac:	440a      	add	r2, r1
 801ecae:	2b07      	cmp	r3, #7
 801ecb0:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801ecb4:	6071      	str	r1, [r6, #4]
 801ecb6:	f300 8142 	bgt.w	801ef3e <_vfiprintf_r+0x792>
 801ecba:	3608      	adds	r6, #8
 801ecbc:	9908      	ldr	r1, [sp, #32]
 801ecbe:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801ecc2:	b159      	cbz	r1, 801ecdc <_vfiprintf_r+0x530>
 801ecc4:	a90d      	add	r1, sp, #52	@ 0x34
 801ecc6:	3301      	adds	r3, #1
 801ecc8:	6031      	str	r1, [r6, #0]
 801ecca:	2102      	movs	r1, #2
 801eccc:	440a      	add	r2, r1
 801ecce:	2b07      	cmp	r3, #7
 801ecd0:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801ecd4:	6071      	str	r1, [r6, #4]
 801ecd6:	f300 813b 	bgt.w	801ef50 <_vfiprintf_r+0x7a4>
 801ecda:	3608      	adds	r6, #8
 801ecdc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ecde:	2b80      	cmp	r3, #128	@ 0x80
 801ece0:	d11f      	bne.n	801ed22 <_vfiprintf_r+0x576>
 801ece2:	9b02      	ldr	r3, [sp, #8]
 801ece4:	9a04      	ldr	r2, [sp, #16]
 801ece6:	1a9d      	subs	r5, r3, r2
 801ece8:	2d00      	cmp	r5, #0
 801ecea:	dd1a      	ble.n	801ed22 <_vfiprintf_r+0x576>
 801ecec:	4b87      	ldr	r3, [pc, #540]	@ (801ef0c <_vfiprintf_r+0x760>)
 801ecee:	6033      	str	r3, [r6, #0]
 801ecf0:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 801ecf4:	2d10      	cmp	r5, #16
 801ecf6:	f102 0201 	add.w	r2, r2, #1
 801ecfa:	f106 0008 	add.w	r0, r6, #8
 801ecfe:	f300 8130 	bgt.w	801ef62 <_vfiprintf_r+0x7b6>
 801ed02:	6075      	str	r5, [r6, #4]
 801ed04:	2a07      	cmp	r2, #7
 801ed06:	4465      	add	r5, ip
 801ed08:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 801ed0c:	f340 813c 	ble.w	801ef88 <_vfiprintf_r+0x7dc>
 801ed10:	9800      	ldr	r0, [sp, #0]
 801ed12:	aa0e      	add	r2, sp, #56	@ 0x38
 801ed14:	4639      	mov	r1, r7
 801ed16:	f7ff fd17 	bl	801e748 <__sprint_r>
 801ed1a:	2800      	cmp	r0, #0
 801ed1c:	f040 816f 	bne.w	801effe <_vfiprintf_r+0x852>
 801ed20:	ae11      	add	r6, sp, #68	@ 0x44
 801ed22:	9b01      	ldr	r3, [sp, #4]
 801ed24:	1ae4      	subs	r4, r4, r3
 801ed26:	2c00      	cmp	r4, #0
 801ed28:	dd1a      	ble.n	801ed60 <_vfiprintf_r+0x5b4>
 801ed2a:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801ed2e:	4877      	ldr	r0, [pc, #476]	@ (801ef0c <_vfiprintf_r+0x760>)
 801ed30:	6030      	str	r0, [r6, #0]
 801ed32:	2c10      	cmp	r4, #16
 801ed34:	f103 0301 	add.w	r3, r3, #1
 801ed38:	f106 0108 	add.w	r1, r6, #8
 801ed3c:	f300 8126 	bgt.w	801ef8c <_vfiprintf_r+0x7e0>
 801ed40:	6074      	str	r4, [r6, #4]
 801ed42:	2b07      	cmp	r3, #7
 801ed44:	4414      	add	r4, r2
 801ed46:	e9cd 340f 	strd	r3, r4, [sp, #60]	@ 0x3c
 801ed4a:	f340 8130 	ble.w	801efae <_vfiprintf_r+0x802>
 801ed4e:	9800      	ldr	r0, [sp, #0]
 801ed50:	aa0e      	add	r2, sp, #56	@ 0x38
 801ed52:	4639      	mov	r1, r7
 801ed54:	f7ff fcf8 	bl	801e748 <__sprint_r>
 801ed58:	2800      	cmp	r0, #0
 801ed5a:	f040 8150 	bne.w	801effe <_vfiprintf_r+0x852>
 801ed5e:	ae11      	add	r6, sp, #68	@ 0x44
 801ed60:	9b01      	ldr	r3, [sp, #4]
 801ed62:	9a01      	ldr	r2, [sp, #4]
 801ed64:	6073      	str	r3, [r6, #4]
 801ed66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ed68:	f8c6 9000 	str.w	r9, [r6]
 801ed6c:	4413      	add	r3, r2
 801ed6e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ed70:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ed72:	3301      	adds	r3, #1
 801ed74:	2b07      	cmp	r3, #7
 801ed76:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ed78:	f300 811b 	bgt.w	801efb2 <_vfiprintf_r+0x806>
 801ed7c:	f106 0308 	add.w	r3, r6, #8
 801ed80:	f01a 0f04 	tst.w	sl, #4
 801ed84:	f040 811d 	bne.w	801efc2 <_vfiprintf_r+0x816>
 801ed88:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801ed8c:	9904      	ldr	r1, [sp, #16]
 801ed8e:	428a      	cmp	r2, r1
 801ed90:	bfac      	ite	ge
 801ed92:	189b      	addge	r3, r3, r2
 801ed94:	185b      	addlt	r3, r3, r1
 801ed96:	9303      	str	r3, [sp, #12]
 801ed98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ed9a:	b13b      	cbz	r3, 801edac <_vfiprintf_r+0x600>
 801ed9c:	9800      	ldr	r0, [sp, #0]
 801ed9e:	aa0e      	add	r2, sp, #56	@ 0x38
 801eda0:	4639      	mov	r1, r7
 801eda2:	f7ff fcd1 	bl	801e748 <__sprint_r>
 801eda6:	2800      	cmp	r0, #0
 801eda8:	f040 8129 	bne.w	801effe <_vfiprintf_r+0x852>
 801edac:	2300      	movs	r3, #0
 801edae:	930f      	str	r3, [sp, #60]	@ 0x3c
 801edb0:	4645      	mov	r5, r8
 801edb2:	ae11      	add	r6, sp, #68	@ 0x44
 801edb4:	e55b      	b.n	801e86e <_vfiprintf_r+0xc2>
 801edb6:	4648      	mov	r0, r9
 801edb8:	f7e1 fa0a 	bl	80001d0 <strlen>
 801edbc:	9001      	str	r0, [sp, #4]
 801edbe:	e734      	b.n	801ec2a <_vfiprintf_r+0x47e>
 801edc0:	f04a 0a10 	orr.w	sl, sl, #16
 801edc4:	f01a 0320 	ands.w	r3, sl, #32
 801edc8:	d008      	beq.n	801eddc <_vfiprintf_r+0x630>
 801edca:	3507      	adds	r5, #7
 801edcc:	f025 0507 	bic.w	r5, r5, #7
 801edd0:	46a8      	mov	r8, r5
 801edd2:	686d      	ldr	r5, [r5, #4]
 801edd4:	f858 4b08 	ldr.w	r4, [r8], #8
 801edd8:	2301      	movs	r3, #1
 801edda:	e6d8      	b.n	801eb8e <_vfiprintf_r+0x3e2>
 801eddc:	46a8      	mov	r8, r5
 801edde:	f01a 0510 	ands.w	r5, sl, #16
 801ede2:	f858 4b04 	ldr.w	r4, [r8], #4
 801ede6:	d001      	beq.n	801edec <_vfiprintf_r+0x640>
 801ede8:	461d      	mov	r5, r3
 801edea:	e7f5      	b.n	801edd8 <_vfiprintf_r+0x62c>
 801edec:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 801edf0:	d001      	beq.n	801edf6 <_vfiprintf_r+0x64a>
 801edf2:	b2a4      	uxth	r4, r4
 801edf4:	e7f0      	b.n	801edd8 <_vfiprintf_r+0x62c>
 801edf6:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801edfa:	d0ed      	beq.n	801edd8 <_vfiprintf_r+0x62c>
 801edfc:	b2e4      	uxtb	r4, r4
 801edfe:	e7f3      	b.n	801ede8 <_vfiprintf_r+0x63c>
 801ee00:	4a43      	ldr	r2, [pc, #268]	@ (801ef10 <_vfiprintf_r+0x764>)
 801ee02:	e5c9      	b.n	801e998 <_vfiprintf_r+0x1ec>
 801ee04:	46a8      	mov	r8, r5
 801ee06:	f01a 0510 	ands.w	r5, sl, #16
 801ee0a:	f858 4b04 	ldr.w	r4, [r8], #4
 801ee0e:	d001      	beq.n	801ee14 <_vfiprintf_r+0x668>
 801ee10:	4615      	mov	r5, r2
 801ee12:	e5cd      	b.n	801e9b0 <_vfiprintf_r+0x204>
 801ee14:	f01a 0240 	ands.w	r2, sl, #64	@ 0x40
 801ee18:	d001      	beq.n	801ee1e <_vfiprintf_r+0x672>
 801ee1a:	b2a4      	uxth	r4, r4
 801ee1c:	e5c8      	b.n	801e9b0 <_vfiprintf_r+0x204>
 801ee1e:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ee22:	f43f adc5 	beq.w	801e9b0 <_vfiprintf_r+0x204>
 801ee26:	b2e4      	uxtb	r4, r4
 801ee28:	e7f2      	b.n	801ee10 <_vfiprintf_r+0x664>
 801ee2a:	2c0a      	cmp	r4, #10
 801ee2c:	f175 0300 	sbcs.w	r3, r5, #0
 801ee30:	d206      	bcs.n	801ee40 <_vfiprintf_r+0x694>
 801ee32:	3430      	adds	r4, #48	@ 0x30
 801ee34:	b2e4      	uxtb	r4, r4
 801ee36:	f88d 40e7 	strb.w	r4, [sp, #231]	@ 0xe7
 801ee3a:	f10d 09e7 	add.w	r9, sp, #231	@ 0xe7
 801ee3e:	e131      	b.n	801f0a4 <_vfiprintf_r+0x8f8>
 801ee40:	ab3a      	add	r3, sp, #232	@ 0xe8
 801ee42:	9308      	str	r3, [sp, #32]
 801ee44:	9b04      	ldr	r3, [sp, #16]
 801ee46:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801ee4a:	f04f 0a00 	mov.w	sl, #0
 801ee4e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ee50:	220a      	movs	r2, #10
 801ee52:	2300      	movs	r3, #0
 801ee54:	4620      	mov	r0, r4
 801ee56:	4629      	mov	r1, r5
 801ee58:	f7e1 ff16 	bl	8000c88 <__aeabi_uldivmod>
 801ee5c:	460b      	mov	r3, r1
 801ee5e:	9908      	ldr	r1, [sp, #32]
 801ee60:	900b      	str	r0, [sp, #44]	@ 0x2c
 801ee62:	3230      	adds	r2, #48	@ 0x30
 801ee64:	f801 2c01 	strb.w	r2, [r1, #-1]
 801ee68:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ee6a:	f101 39ff 	add.w	r9, r1, #4294967295
 801ee6e:	f10a 0a01 	add.w	sl, sl, #1
 801ee72:	b1e2      	cbz	r2, 801eeae <_vfiprintf_r+0x702>
 801ee74:	9a06      	ldr	r2, [sp, #24]
 801ee76:	7812      	ldrb	r2, [r2, #0]
 801ee78:	4552      	cmp	r2, sl
 801ee7a:	d118      	bne.n	801eeae <_vfiprintf_r+0x702>
 801ee7c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ee80:	d015      	beq.n	801eeae <_vfiprintf_r+0x702>
 801ee82:	2c0a      	cmp	r4, #10
 801ee84:	f175 0200 	sbcs.w	r2, r5, #0
 801ee88:	d311      	bcc.n	801eeae <_vfiprintf_r+0x702>
 801ee8a:	9308      	str	r3, [sp, #32]
 801ee8c:	9b07      	ldr	r3, [sp, #28]
 801ee8e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ee90:	eba9 0903 	sub.w	r9, r9, r3
 801ee94:	461a      	mov	r2, r3
 801ee96:	4648      	mov	r0, r9
 801ee98:	f7fd ff67 	bl	801cd6a <strncpy>
 801ee9c:	9b06      	ldr	r3, [sp, #24]
 801ee9e:	785a      	ldrb	r2, [r3, #1]
 801eea0:	9b08      	ldr	r3, [sp, #32]
 801eea2:	b172      	cbz	r2, 801eec2 <_vfiprintf_r+0x716>
 801eea4:	9a06      	ldr	r2, [sp, #24]
 801eea6:	3201      	adds	r2, #1
 801eea8:	9206      	str	r2, [sp, #24]
 801eeaa:	f04f 0a00 	mov.w	sl, #0
 801eeae:	2c0a      	cmp	r4, #10
 801eeb0:	f175 0500 	sbcs.w	r5, r5, #0
 801eeb4:	f0c0 80f6 	bcc.w	801f0a4 <_vfiprintf_r+0x8f8>
 801eeb8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eeba:	f8cd 9020 	str.w	r9, [sp, #32]
 801eebe:	461d      	mov	r5, r3
 801eec0:	e7c6      	b.n	801ee50 <_vfiprintf_r+0x6a4>
 801eec2:	4692      	mov	sl, r2
 801eec4:	e7f3      	b.n	801eeae <_vfiprintf_r+0x702>
 801eec6:	f004 030f 	and.w	r3, r4, #15
 801eeca:	9a05      	ldr	r2, [sp, #20]
 801eecc:	0924      	lsrs	r4, r4, #4
 801eece:	5cd3      	ldrb	r3, [r2, r3]
 801eed0:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801eed4:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 801eed8:	092d      	lsrs	r5, r5, #4
 801eeda:	ea54 0305 	orrs.w	r3, r4, r5
 801eede:	d1f2      	bne.n	801eec6 <_vfiprintf_r+0x71a>
 801eee0:	e0e0      	b.n	801f0a4 <_vfiprintf_r+0x8f8>
 801eee2:	b923      	cbnz	r3, 801eeee <_vfiprintf_r+0x742>
 801eee4:	f01a 0f01 	tst.w	sl, #1
 801eee8:	d001      	beq.n	801eeee <_vfiprintf_r+0x742>
 801eeea:	2430      	movs	r4, #48	@ 0x30
 801eeec:	e7a3      	b.n	801ee36 <_vfiprintf_r+0x68a>
 801eeee:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 801eef2:	e0d7      	b.n	801f0a4 <_vfiprintf_r+0x8f8>
 801eef4:	2b00      	cmp	r3, #0
 801eef6:	f000 80a3 	beq.w	801f040 <_vfiprintf_r+0x894>
 801eefa:	2400      	movs	r4, #0
 801eefc:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 801ef00:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 801ef04:	46a8      	mov	r8, r5
 801ef06:	e5e0      	b.n	801eaca <_vfiprintf_r+0x31e>
 801ef08:	08021a9d 	.word	0x08021a9d
 801ef0c:	08021a8d 	.word	0x08021a8d
 801ef10:	08021745 	.word	0x08021745
 801ef14:	2110      	movs	r1, #16
 801ef16:	6071      	str	r1, [r6, #4]
 801ef18:	2a07      	cmp	r2, #7
 801ef1a:	4461      	add	r1, ip
 801ef1c:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ef20:	dd08      	ble.n	801ef34 <_vfiprintf_r+0x788>
 801ef22:	9800      	ldr	r0, [sp, #0]
 801ef24:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef26:	4639      	mov	r1, r7
 801ef28:	f7ff fc0e 	bl	801e748 <__sprint_r>
 801ef2c:	2800      	cmp	r0, #0
 801ef2e:	d166      	bne.n	801effe <_vfiprintf_r+0x852>
 801ef30:	4b60      	ldr	r3, [pc, #384]	@ (801f0b4 <_vfiprintf_r+0x908>)
 801ef32:	a811      	add	r0, sp, #68	@ 0x44
 801ef34:	3d10      	subs	r5, #16
 801ef36:	4606      	mov	r6, r0
 801ef38:	e694      	b.n	801ec64 <_vfiprintf_r+0x4b8>
 801ef3a:	4606      	mov	r6, r0
 801ef3c:	e6ac      	b.n	801ec98 <_vfiprintf_r+0x4ec>
 801ef3e:	9800      	ldr	r0, [sp, #0]
 801ef40:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef42:	4639      	mov	r1, r7
 801ef44:	f7ff fc00 	bl	801e748 <__sprint_r>
 801ef48:	2800      	cmp	r0, #0
 801ef4a:	d158      	bne.n	801effe <_vfiprintf_r+0x852>
 801ef4c:	ae11      	add	r6, sp, #68	@ 0x44
 801ef4e:	e6b5      	b.n	801ecbc <_vfiprintf_r+0x510>
 801ef50:	9800      	ldr	r0, [sp, #0]
 801ef52:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef54:	4639      	mov	r1, r7
 801ef56:	f7ff fbf7 	bl	801e748 <__sprint_r>
 801ef5a:	2800      	cmp	r0, #0
 801ef5c:	d14f      	bne.n	801effe <_vfiprintf_r+0x852>
 801ef5e:	ae11      	add	r6, sp, #68	@ 0x44
 801ef60:	e6bc      	b.n	801ecdc <_vfiprintf_r+0x530>
 801ef62:	2110      	movs	r1, #16
 801ef64:	6071      	str	r1, [r6, #4]
 801ef66:	2a07      	cmp	r2, #7
 801ef68:	4461      	add	r1, ip
 801ef6a:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ef6e:	dd08      	ble.n	801ef82 <_vfiprintf_r+0x7d6>
 801ef70:	9800      	ldr	r0, [sp, #0]
 801ef72:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef74:	4639      	mov	r1, r7
 801ef76:	f7ff fbe7 	bl	801e748 <__sprint_r>
 801ef7a:	2800      	cmp	r0, #0
 801ef7c:	d13f      	bne.n	801effe <_vfiprintf_r+0x852>
 801ef7e:	4b4e      	ldr	r3, [pc, #312]	@ (801f0b8 <_vfiprintf_r+0x90c>)
 801ef80:	a811      	add	r0, sp, #68	@ 0x44
 801ef82:	3d10      	subs	r5, #16
 801ef84:	4606      	mov	r6, r0
 801ef86:	e6b2      	b.n	801ecee <_vfiprintf_r+0x542>
 801ef88:	4606      	mov	r6, r0
 801ef8a:	e6ca      	b.n	801ed22 <_vfiprintf_r+0x576>
 801ef8c:	2010      	movs	r0, #16
 801ef8e:	4402      	add	r2, r0
 801ef90:	2b07      	cmp	r3, #7
 801ef92:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801ef96:	6070      	str	r0, [r6, #4]
 801ef98:	dd06      	ble.n	801efa8 <_vfiprintf_r+0x7fc>
 801ef9a:	9800      	ldr	r0, [sp, #0]
 801ef9c:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef9e:	4639      	mov	r1, r7
 801efa0:	f7ff fbd2 	bl	801e748 <__sprint_r>
 801efa4:	bb58      	cbnz	r0, 801effe <_vfiprintf_r+0x852>
 801efa6:	a911      	add	r1, sp, #68	@ 0x44
 801efa8:	3c10      	subs	r4, #16
 801efaa:	460e      	mov	r6, r1
 801efac:	e6bd      	b.n	801ed2a <_vfiprintf_r+0x57e>
 801efae:	460e      	mov	r6, r1
 801efb0:	e6d6      	b.n	801ed60 <_vfiprintf_r+0x5b4>
 801efb2:	9800      	ldr	r0, [sp, #0]
 801efb4:	aa0e      	add	r2, sp, #56	@ 0x38
 801efb6:	4639      	mov	r1, r7
 801efb8:	f7ff fbc6 	bl	801e748 <__sprint_r>
 801efbc:	b9f8      	cbnz	r0, 801effe <_vfiprintf_r+0x852>
 801efbe:	ab11      	add	r3, sp, #68	@ 0x44
 801efc0:	e6de      	b.n	801ed80 <_vfiprintf_r+0x5d4>
 801efc2:	9a02      	ldr	r2, [sp, #8]
 801efc4:	9904      	ldr	r1, [sp, #16]
 801efc6:	1a54      	subs	r4, r2, r1
 801efc8:	2c00      	cmp	r4, #0
 801efca:	f77f aedd 	ble.w	801ed88 <_vfiprintf_r+0x5dc>
 801efce:	4d39      	ldr	r5, [pc, #228]	@ (801f0b4 <_vfiprintf_r+0x908>)
 801efd0:	2610      	movs	r6, #16
 801efd2:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	@ 0x3c
 801efd6:	2c10      	cmp	r4, #16
 801efd8:	f102 0201 	add.w	r2, r2, #1
 801efdc:	601d      	str	r5, [r3, #0]
 801efde:	dc1d      	bgt.n	801f01c <_vfiprintf_r+0x870>
 801efe0:	605c      	str	r4, [r3, #4]
 801efe2:	2a07      	cmp	r2, #7
 801efe4:	440c      	add	r4, r1
 801efe6:	e9cd 240f 	strd	r2, r4, [sp, #60]	@ 0x3c
 801efea:	f77f aecd 	ble.w	801ed88 <_vfiprintf_r+0x5dc>
 801efee:	9800      	ldr	r0, [sp, #0]
 801eff0:	aa0e      	add	r2, sp, #56	@ 0x38
 801eff2:	4639      	mov	r1, r7
 801eff4:	f7ff fba8 	bl	801e748 <__sprint_r>
 801eff8:	2800      	cmp	r0, #0
 801effa:	f43f aec5 	beq.w	801ed88 <_vfiprintf_r+0x5dc>
 801effe:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801f000:	07d9      	lsls	r1, r3, #31
 801f002:	d405      	bmi.n	801f010 <_vfiprintf_r+0x864>
 801f004:	89bb      	ldrh	r3, [r7, #12]
 801f006:	059a      	lsls	r2, r3, #22
 801f008:	d402      	bmi.n	801f010 <_vfiprintf_r+0x864>
 801f00a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801f00c:	f7fc f851 	bl	801b0b2 <__retarget_lock_release_recursive>
 801f010:	89bb      	ldrh	r3, [r7, #12]
 801f012:	065b      	lsls	r3, r3, #25
 801f014:	f57f abfb 	bpl.w	801e80e <_vfiprintf_r+0x62>
 801f018:	f7ff bbf6 	b.w	801e808 <_vfiprintf_r+0x5c>
 801f01c:	3110      	adds	r1, #16
 801f01e:	2a07      	cmp	r2, #7
 801f020:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801f024:	605e      	str	r6, [r3, #4]
 801f026:	dc02      	bgt.n	801f02e <_vfiprintf_r+0x882>
 801f028:	3308      	adds	r3, #8
 801f02a:	3c10      	subs	r4, #16
 801f02c:	e7d1      	b.n	801efd2 <_vfiprintf_r+0x826>
 801f02e:	9800      	ldr	r0, [sp, #0]
 801f030:	aa0e      	add	r2, sp, #56	@ 0x38
 801f032:	4639      	mov	r1, r7
 801f034:	f7ff fb88 	bl	801e748 <__sprint_r>
 801f038:	2800      	cmp	r0, #0
 801f03a:	d1e0      	bne.n	801effe <_vfiprintf_r+0x852>
 801f03c:	ab11      	add	r3, sp, #68	@ 0x44
 801f03e:	e7f4      	b.n	801f02a <_vfiprintf_r+0x87e>
 801f040:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f042:	b913      	cbnz	r3, 801f04a <_vfiprintf_r+0x89e>
 801f044:	2300      	movs	r3, #0
 801f046:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f048:	e7d9      	b.n	801effe <_vfiprintf_r+0x852>
 801f04a:	9800      	ldr	r0, [sp, #0]
 801f04c:	aa0e      	add	r2, sp, #56	@ 0x38
 801f04e:	4639      	mov	r1, r7
 801f050:	f7ff fb7a 	bl	801e748 <__sprint_r>
 801f054:	2800      	cmp	r0, #0
 801f056:	d0f5      	beq.n	801f044 <_vfiprintf_r+0x898>
 801f058:	e7d1      	b.n	801effe <_vfiprintf_r+0x852>
 801f05a:	ea54 0205 	orrs.w	r2, r4, r5
 801f05e:	f8cd a010 	str.w	sl, [sp, #16]
 801f062:	f43f ada6 	beq.w	801ebb2 <_vfiprintf_r+0x406>
 801f066:	2b01      	cmp	r3, #1
 801f068:	f43f aedf 	beq.w	801ee2a <_vfiprintf_r+0x67e>
 801f06c:	2b02      	cmp	r3, #2
 801f06e:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 801f072:	f43f af28 	beq.w	801eec6 <_vfiprintf_r+0x71a>
 801f076:	f004 0307 	and.w	r3, r4, #7
 801f07a:	08e4      	lsrs	r4, r4, #3
 801f07c:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 801f080:	08ed      	lsrs	r5, r5, #3
 801f082:	3330      	adds	r3, #48	@ 0x30
 801f084:	ea54 0105 	orrs.w	r1, r4, r5
 801f088:	464a      	mov	r2, r9
 801f08a:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801f08e:	d1f2      	bne.n	801f076 <_vfiprintf_r+0x8ca>
 801f090:	9904      	ldr	r1, [sp, #16]
 801f092:	07c8      	lsls	r0, r1, #31
 801f094:	d506      	bpl.n	801f0a4 <_vfiprintf_r+0x8f8>
 801f096:	2b30      	cmp	r3, #48	@ 0x30
 801f098:	d004      	beq.n	801f0a4 <_vfiprintf_r+0x8f8>
 801f09a:	2330      	movs	r3, #48	@ 0x30
 801f09c:	f809 3c01 	strb.w	r3, [r9, #-1]
 801f0a0:	f1a2 0902 	sub.w	r9, r2, #2
 801f0a4:	ab3a      	add	r3, sp, #232	@ 0xe8
 801f0a6:	eba3 0309 	sub.w	r3, r3, r9
 801f0aa:	9c01      	ldr	r4, [sp, #4]
 801f0ac:	f8dd a010 	ldr.w	sl, [sp, #16]
 801f0b0:	9301      	str	r3, [sp, #4]
 801f0b2:	e5bb      	b.n	801ec2c <_vfiprintf_r+0x480>
 801f0b4:	08021a9d 	.word	0x08021a9d
 801f0b8:	08021a8d 	.word	0x08021a8d

0801f0bc <__sbprintf>:
 801f0bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f0be:	461f      	mov	r7, r3
 801f0c0:	898b      	ldrh	r3, [r1, #12]
 801f0c2:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
 801f0c6:	f023 0302 	bic.w	r3, r3, #2
 801f0ca:	f8ad 300c 	strh.w	r3, [sp, #12]
 801f0ce:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 801f0d0:	9319      	str	r3, [sp, #100]	@ 0x64
 801f0d2:	89cb      	ldrh	r3, [r1, #14]
 801f0d4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801f0d8:	69cb      	ldr	r3, [r1, #28]
 801f0da:	9307      	str	r3, [sp, #28]
 801f0dc:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 801f0de:	9309      	str	r3, [sp, #36]	@ 0x24
 801f0e0:	ab1a      	add	r3, sp, #104	@ 0x68
 801f0e2:	9300      	str	r3, [sp, #0]
 801f0e4:	9304      	str	r3, [sp, #16]
 801f0e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f0ea:	4615      	mov	r5, r2
 801f0ec:	4606      	mov	r6, r0
 801f0ee:	9302      	str	r3, [sp, #8]
 801f0f0:	9305      	str	r3, [sp, #20]
 801f0f2:	a816      	add	r0, sp, #88	@ 0x58
 801f0f4:	2300      	movs	r3, #0
 801f0f6:	460c      	mov	r4, r1
 801f0f8:	9306      	str	r3, [sp, #24]
 801f0fa:	f7fb ffd7 	bl	801b0ac <__retarget_lock_init_recursive>
 801f0fe:	462a      	mov	r2, r5
 801f100:	463b      	mov	r3, r7
 801f102:	4669      	mov	r1, sp
 801f104:	4630      	mov	r0, r6
 801f106:	f7ff fb51 	bl	801e7ac <_vfiprintf_r>
 801f10a:	1e05      	subs	r5, r0, #0
 801f10c:	db07      	blt.n	801f11e <__sbprintf+0x62>
 801f10e:	4669      	mov	r1, sp
 801f110:	4630      	mov	r0, r6
 801f112:	f7fd fe05 	bl	801cd20 <_fflush_r>
 801f116:	2800      	cmp	r0, #0
 801f118:	bf18      	it	ne
 801f11a:	f04f 35ff 	movne.w	r5, #4294967295
 801f11e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801f122:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801f124:	065b      	lsls	r3, r3, #25
 801f126:	bf42      	ittt	mi
 801f128:	89a3      	ldrhmi	r3, [r4, #12]
 801f12a:	f043 0340 	orrmi.w	r3, r3, #64	@ 0x40
 801f12e:	81a3      	strhmi	r3, [r4, #12]
 801f130:	f7fb ffbd 	bl	801b0ae <__retarget_lock_close_recursive>
 801f134:	4628      	mov	r0, r5
 801f136:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
 801f13a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801f13c <__sfvwrite_r>:
 801f13c:	6893      	ldr	r3, [r2, #8]
 801f13e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f142:	4606      	mov	r6, r0
 801f144:	460c      	mov	r4, r1
 801f146:	4691      	mov	r9, r2
 801f148:	b91b      	cbnz	r3, 801f152 <__sfvwrite_r+0x16>
 801f14a:	2000      	movs	r0, #0
 801f14c:	b003      	add	sp, #12
 801f14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f152:	898b      	ldrh	r3, [r1, #12]
 801f154:	0718      	lsls	r0, r3, #28
 801f156:	d550      	bpl.n	801f1fa <__sfvwrite_r+0xbe>
 801f158:	690b      	ldr	r3, [r1, #16]
 801f15a:	2b00      	cmp	r3, #0
 801f15c:	d04d      	beq.n	801f1fa <__sfvwrite_r+0xbe>
 801f15e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f162:	f8d9 8000 	ldr.w	r8, [r9]
 801f166:	f013 0702 	ands.w	r7, r3, #2
 801f16a:	d16b      	bne.n	801f244 <__sfvwrite_r+0x108>
 801f16c:	f013 0301 	ands.w	r3, r3, #1
 801f170:	f000 809c 	beq.w	801f2ac <__sfvwrite_r+0x170>
 801f174:	4638      	mov	r0, r7
 801f176:	46ba      	mov	sl, r7
 801f178:	46bb      	mov	fp, r7
 801f17a:	f1bb 0f00 	cmp.w	fp, #0
 801f17e:	f000 8103 	beq.w	801f388 <__sfvwrite_r+0x24c>
 801f182:	b950      	cbnz	r0, 801f19a <__sfvwrite_r+0x5e>
 801f184:	465a      	mov	r2, fp
 801f186:	210a      	movs	r1, #10
 801f188:	4650      	mov	r0, sl
 801f18a:	f7e1 f829 	bl	80001e0 <memchr>
 801f18e:	2800      	cmp	r0, #0
 801f190:	f000 8100 	beq.w	801f394 <__sfvwrite_r+0x258>
 801f194:	3001      	adds	r0, #1
 801f196:	eba0 070a 	sub.w	r7, r0, sl
 801f19a:	6820      	ldr	r0, [r4, #0]
 801f19c:	6921      	ldr	r1, [r4, #16]
 801f19e:	68a5      	ldr	r5, [r4, #8]
 801f1a0:	6963      	ldr	r3, [r4, #20]
 801f1a2:	455f      	cmp	r7, fp
 801f1a4:	463a      	mov	r2, r7
 801f1a6:	bf28      	it	cs
 801f1a8:	465a      	movcs	r2, fp
 801f1aa:	4288      	cmp	r0, r1
 801f1ac:	f240 80f5 	bls.w	801f39a <__sfvwrite_r+0x25e>
 801f1b0:	441d      	add	r5, r3
 801f1b2:	42aa      	cmp	r2, r5
 801f1b4:	f340 80f1 	ble.w	801f39a <__sfvwrite_r+0x25e>
 801f1b8:	4651      	mov	r1, sl
 801f1ba:	462a      	mov	r2, r5
 801f1bc:	f7ff fa44 	bl	801e648 <memmove>
 801f1c0:	6823      	ldr	r3, [r4, #0]
 801f1c2:	442b      	add	r3, r5
 801f1c4:	6023      	str	r3, [r4, #0]
 801f1c6:	4621      	mov	r1, r4
 801f1c8:	4630      	mov	r0, r6
 801f1ca:	f7fd fda9 	bl	801cd20 <_fflush_r>
 801f1ce:	2800      	cmp	r0, #0
 801f1d0:	d167      	bne.n	801f2a2 <__sfvwrite_r+0x166>
 801f1d2:	1b7f      	subs	r7, r7, r5
 801f1d4:	f040 80f9 	bne.w	801f3ca <__sfvwrite_r+0x28e>
 801f1d8:	4621      	mov	r1, r4
 801f1da:	4630      	mov	r0, r6
 801f1dc:	f7fd fda0 	bl	801cd20 <_fflush_r>
 801f1e0:	2800      	cmp	r0, #0
 801f1e2:	d15e      	bne.n	801f2a2 <__sfvwrite_r+0x166>
 801f1e4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f1e8:	1b5b      	subs	r3, r3, r5
 801f1ea:	44aa      	add	sl, r5
 801f1ec:	ebab 0b05 	sub.w	fp, fp, r5
 801f1f0:	f8c9 3008 	str.w	r3, [r9, #8]
 801f1f4:	2b00      	cmp	r3, #0
 801f1f6:	d1c0      	bne.n	801f17a <__sfvwrite_r+0x3e>
 801f1f8:	e7a7      	b.n	801f14a <__sfvwrite_r+0xe>
 801f1fa:	4621      	mov	r1, r4
 801f1fc:	4630      	mov	r0, r6
 801f1fe:	f000 f8e9 	bl	801f3d4 <__swsetup_r>
 801f202:	2800      	cmp	r0, #0
 801f204:	d0ab      	beq.n	801f15e <__sfvwrite_r+0x22>
 801f206:	f04f 30ff 	mov.w	r0, #4294967295
 801f20a:	e79f      	b.n	801f14c <__sfvwrite_r+0x10>
 801f20c:	e9d8 a500 	ldrd	sl, r5, [r8]
 801f210:	f108 0808 	add.w	r8, r8, #8
 801f214:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
 801f218:	69e1      	ldr	r1, [r4, #28]
 801f21a:	2d00      	cmp	r5, #0
 801f21c:	d0f6      	beq.n	801f20c <__sfvwrite_r+0xd0>
 801f21e:	42bd      	cmp	r5, r7
 801f220:	462b      	mov	r3, r5
 801f222:	4652      	mov	r2, sl
 801f224:	bf28      	it	cs
 801f226:	463b      	movcs	r3, r7
 801f228:	4630      	mov	r0, r6
 801f22a:	47d8      	blx	fp
 801f22c:	2800      	cmp	r0, #0
 801f22e:	dd38      	ble.n	801f2a2 <__sfvwrite_r+0x166>
 801f230:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f234:	1a1b      	subs	r3, r3, r0
 801f236:	4482      	add	sl, r0
 801f238:	1a2d      	subs	r5, r5, r0
 801f23a:	f8c9 3008 	str.w	r3, [r9, #8]
 801f23e:	2b00      	cmp	r3, #0
 801f240:	d1e8      	bne.n	801f214 <__sfvwrite_r+0xd8>
 801f242:	e782      	b.n	801f14a <__sfvwrite_r+0xe>
 801f244:	f04f 0a00 	mov.w	sl, #0
 801f248:	4f61      	ldr	r7, [pc, #388]	@ (801f3d0 <__sfvwrite_r+0x294>)
 801f24a:	4655      	mov	r5, sl
 801f24c:	e7e2      	b.n	801f214 <__sfvwrite_r+0xd8>
 801f24e:	e9d8 7a00 	ldrd	r7, sl, [r8]
 801f252:	f108 0808 	add.w	r8, r8, #8
 801f256:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f25a:	6820      	ldr	r0, [r4, #0]
 801f25c:	68a2      	ldr	r2, [r4, #8]
 801f25e:	f1ba 0f00 	cmp.w	sl, #0
 801f262:	d0f4      	beq.n	801f24e <__sfvwrite_r+0x112>
 801f264:	0599      	lsls	r1, r3, #22
 801f266:	d563      	bpl.n	801f330 <__sfvwrite_r+0x1f4>
 801f268:	4552      	cmp	r2, sl
 801f26a:	d836      	bhi.n	801f2da <__sfvwrite_r+0x19e>
 801f26c:	f413 6f90 	tst.w	r3, #1152	@ 0x480
 801f270:	d033      	beq.n	801f2da <__sfvwrite_r+0x19e>
 801f272:	6921      	ldr	r1, [r4, #16]
 801f274:	6965      	ldr	r5, [r4, #20]
 801f276:	eba0 0b01 	sub.w	fp, r0, r1
 801f27a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f27e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801f282:	f10b 0201 	add.w	r2, fp, #1
 801f286:	106d      	asrs	r5, r5, #1
 801f288:	4452      	add	r2, sl
 801f28a:	4295      	cmp	r5, r2
 801f28c:	bf38      	it	cc
 801f28e:	4615      	movcc	r5, r2
 801f290:	055b      	lsls	r3, r3, #21
 801f292:	d53d      	bpl.n	801f310 <__sfvwrite_r+0x1d4>
 801f294:	4629      	mov	r1, r5
 801f296:	4630      	mov	r0, r6
 801f298:	f7fc f840 	bl	801b31c <_malloc_r>
 801f29c:	b948      	cbnz	r0, 801f2b2 <__sfvwrite_r+0x176>
 801f29e:	230c      	movs	r3, #12
 801f2a0:	6033      	str	r3, [r6, #0]
 801f2a2:	89a3      	ldrh	r3, [r4, #12]
 801f2a4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f2a8:	81a3      	strh	r3, [r4, #12]
 801f2aa:	e7ac      	b.n	801f206 <__sfvwrite_r+0xca>
 801f2ac:	461f      	mov	r7, r3
 801f2ae:	469a      	mov	sl, r3
 801f2b0:	e7d1      	b.n	801f256 <__sfvwrite_r+0x11a>
 801f2b2:	465a      	mov	r2, fp
 801f2b4:	6921      	ldr	r1, [r4, #16]
 801f2b6:	9001      	str	r0, [sp, #4]
 801f2b8:	f7fb fefc 	bl	801b0b4 <memcpy>
 801f2bc:	89a2      	ldrh	r2, [r4, #12]
 801f2be:	9b01      	ldr	r3, [sp, #4]
 801f2c0:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 801f2c4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801f2c8:	81a2      	strh	r2, [r4, #12]
 801f2ca:	6123      	str	r3, [r4, #16]
 801f2cc:	6165      	str	r5, [r4, #20]
 801f2ce:	445b      	add	r3, fp
 801f2d0:	eba5 050b 	sub.w	r5, r5, fp
 801f2d4:	6023      	str	r3, [r4, #0]
 801f2d6:	4652      	mov	r2, sl
 801f2d8:	60a5      	str	r5, [r4, #8]
 801f2da:	4552      	cmp	r2, sl
 801f2dc:	bf28      	it	cs
 801f2de:	4652      	movcs	r2, sl
 801f2e0:	6820      	ldr	r0, [r4, #0]
 801f2e2:	9201      	str	r2, [sp, #4]
 801f2e4:	4639      	mov	r1, r7
 801f2e6:	f7ff f9af 	bl	801e648 <memmove>
 801f2ea:	68a3      	ldr	r3, [r4, #8]
 801f2ec:	9a01      	ldr	r2, [sp, #4]
 801f2ee:	1a9b      	subs	r3, r3, r2
 801f2f0:	60a3      	str	r3, [r4, #8]
 801f2f2:	6823      	ldr	r3, [r4, #0]
 801f2f4:	4413      	add	r3, r2
 801f2f6:	4655      	mov	r5, sl
 801f2f8:	6023      	str	r3, [r4, #0]
 801f2fa:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f2fe:	1b5b      	subs	r3, r3, r5
 801f300:	442f      	add	r7, r5
 801f302:	ebaa 0a05 	sub.w	sl, sl, r5
 801f306:	f8c9 3008 	str.w	r3, [r9, #8]
 801f30a:	2b00      	cmp	r3, #0
 801f30c:	d1a3      	bne.n	801f256 <__sfvwrite_r+0x11a>
 801f30e:	e71c      	b.n	801f14a <__sfvwrite_r+0xe>
 801f310:	462a      	mov	r2, r5
 801f312:	4630      	mov	r0, r6
 801f314:	f7fe ff66 	bl	801e1e4 <_realloc_r>
 801f318:	4603      	mov	r3, r0
 801f31a:	2800      	cmp	r0, #0
 801f31c:	d1d5      	bne.n	801f2ca <__sfvwrite_r+0x18e>
 801f31e:	6921      	ldr	r1, [r4, #16]
 801f320:	4630      	mov	r0, r6
 801f322:	f7fb ff3b 	bl	801b19c <_free_r>
 801f326:	89a3      	ldrh	r3, [r4, #12]
 801f328:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 801f32c:	81a3      	strh	r3, [r4, #12]
 801f32e:	e7b6      	b.n	801f29e <__sfvwrite_r+0x162>
 801f330:	6923      	ldr	r3, [r4, #16]
 801f332:	4283      	cmp	r3, r0
 801f334:	d302      	bcc.n	801f33c <__sfvwrite_r+0x200>
 801f336:	6961      	ldr	r1, [r4, #20]
 801f338:	4551      	cmp	r1, sl
 801f33a:	d915      	bls.n	801f368 <__sfvwrite_r+0x22c>
 801f33c:	4552      	cmp	r2, sl
 801f33e:	bf28      	it	cs
 801f340:	4652      	movcs	r2, sl
 801f342:	4639      	mov	r1, r7
 801f344:	4615      	mov	r5, r2
 801f346:	f7ff f97f 	bl	801e648 <memmove>
 801f34a:	68a3      	ldr	r3, [r4, #8]
 801f34c:	6822      	ldr	r2, [r4, #0]
 801f34e:	1b5b      	subs	r3, r3, r5
 801f350:	442a      	add	r2, r5
 801f352:	60a3      	str	r3, [r4, #8]
 801f354:	6022      	str	r2, [r4, #0]
 801f356:	2b00      	cmp	r3, #0
 801f358:	d1cf      	bne.n	801f2fa <__sfvwrite_r+0x1be>
 801f35a:	4621      	mov	r1, r4
 801f35c:	4630      	mov	r0, r6
 801f35e:	f7fd fcdf 	bl	801cd20 <_fflush_r>
 801f362:	2800      	cmp	r0, #0
 801f364:	d0c9      	beq.n	801f2fa <__sfvwrite_r+0x1be>
 801f366:	e79c      	b.n	801f2a2 <__sfvwrite_r+0x166>
 801f368:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 801f36c:	4553      	cmp	r3, sl
 801f36e:	bf28      	it	cs
 801f370:	4653      	movcs	r3, sl
 801f372:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f374:	fb93 f3f1 	sdiv	r3, r3, r1
 801f378:	463a      	mov	r2, r7
 801f37a:	434b      	muls	r3, r1
 801f37c:	4630      	mov	r0, r6
 801f37e:	69e1      	ldr	r1, [r4, #28]
 801f380:	47a8      	blx	r5
 801f382:	1e05      	subs	r5, r0, #0
 801f384:	dcb9      	bgt.n	801f2fa <__sfvwrite_r+0x1be>
 801f386:	e78c      	b.n	801f2a2 <__sfvwrite_r+0x166>
 801f388:	e9d8 ab00 	ldrd	sl, fp, [r8]
 801f38c:	2000      	movs	r0, #0
 801f38e:	f108 0808 	add.w	r8, r8, #8
 801f392:	e6f2      	b.n	801f17a <__sfvwrite_r+0x3e>
 801f394:	f10b 0701 	add.w	r7, fp, #1
 801f398:	e6ff      	b.n	801f19a <__sfvwrite_r+0x5e>
 801f39a:	4293      	cmp	r3, r2
 801f39c:	dc08      	bgt.n	801f3b0 <__sfvwrite_r+0x274>
 801f39e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f3a0:	69e1      	ldr	r1, [r4, #28]
 801f3a2:	4652      	mov	r2, sl
 801f3a4:	4630      	mov	r0, r6
 801f3a6:	47a8      	blx	r5
 801f3a8:	1e05      	subs	r5, r0, #0
 801f3aa:	f73f af12 	bgt.w	801f1d2 <__sfvwrite_r+0x96>
 801f3ae:	e778      	b.n	801f2a2 <__sfvwrite_r+0x166>
 801f3b0:	4651      	mov	r1, sl
 801f3b2:	9201      	str	r2, [sp, #4]
 801f3b4:	f7ff f948 	bl	801e648 <memmove>
 801f3b8:	9a01      	ldr	r2, [sp, #4]
 801f3ba:	68a3      	ldr	r3, [r4, #8]
 801f3bc:	1a9b      	subs	r3, r3, r2
 801f3be:	60a3      	str	r3, [r4, #8]
 801f3c0:	6823      	ldr	r3, [r4, #0]
 801f3c2:	4413      	add	r3, r2
 801f3c4:	6023      	str	r3, [r4, #0]
 801f3c6:	4615      	mov	r5, r2
 801f3c8:	e703      	b.n	801f1d2 <__sfvwrite_r+0x96>
 801f3ca:	2001      	movs	r0, #1
 801f3cc:	e70a      	b.n	801f1e4 <__sfvwrite_r+0xa8>
 801f3ce:	bf00      	nop
 801f3d0:	7ffffc00 	.word	0x7ffffc00

0801f3d4 <__swsetup_r>:
 801f3d4:	b538      	push	{r3, r4, r5, lr}
 801f3d6:	4b29      	ldr	r3, [pc, #164]	@ (801f47c <__swsetup_r+0xa8>)
 801f3d8:	4605      	mov	r5, r0
 801f3da:	6818      	ldr	r0, [r3, #0]
 801f3dc:	460c      	mov	r4, r1
 801f3de:	b118      	cbz	r0, 801f3e8 <__swsetup_r+0x14>
 801f3e0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f3e2:	b90b      	cbnz	r3, 801f3e8 <__swsetup_r+0x14>
 801f3e4:	f7fb fd10 	bl	801ae08 <__sinit>
 801f3e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f3ec:	0719      	lsls	r1, r3, #28
 801f3ee:	d422      	bmi.n	801f436 <__swsetup_r+0x62>
 801f3f0:	06da      	lsls	r2, r3, #27
 801f3f2:	d407      	bmi.n	801f404 <__swsetup_r+0x30>
 801f3f4:	2209      	movs	r2, #9
 801f3f6:	602a      	str	r2, [r5, #0]
 801f3f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f3fc:	81a3      	strh	r3, [r4, #12]
 801f3fe:	f04f 30ff 	mov.w	r0, #4294967295
 801f402:	e033      	b.n	801f46c <__swsetup_r+0x98>
 801f404:	0758      	lsls	r0, r3, #29
 801f406:	d512      	bpl.n	801f42e <__swsetup_r+0x5a>
 801f408:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801f40a:	b141      	cbz	r1, 801f41e <__swsetup_r+0x4a>
 801f40c:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801f410:	4299      	cmp	r1, r3
 801f412:	d002      	beq.n	801f41a <__swsetup_r+0x46>
 801f414:	4628      	mov	r0, r5
 801f416:	f7fb fec1 	bl	801b19c <_free_r>
 801f41a:	2300      	movs	r3, #0
 801f41c:	6323      	str	r3, [r4, #48]	@ 0x30
 801f41e:	89a3      	ldrh	r3, [r4, #12]
 801f420:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801f424:	81a3      	strh	r3, [r4, #12]
 801f426:	2300      	movs	r3, #0
 801f428:	6063      	str	r3, [r4, #4]
 801f42a:	6923      	ldr	r3, [r4, #16]
 801f42c:	6023      	str	r3, [r4, #0]
 801f42e:	89a3      	ldrh	r3, [r4, #12]
 801f430:	f043 0308 	orr.w	r3, r3, #8
 801f434:	81a3      	strh	r3, [r4, #12]
 801f436:	6923      	ldr	r3, [r4, #16]
 801f438:	b94b      	cbnz	r3, 801f44e <__swsetup_r+0x7a>
 801f43a:	89a3      	ldrh	r3, [r4, #12]
 801f43c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801f440:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801f444:	d003      	beq.n	801f44e <__swsetup_r+0x7a>
 801f446:	4621      	mov	r1, r4
 801f448:	4628      	mov	r0, r5
 801f44a:	f000 f8c9 	bl	801f5e0 <__smakebuf_r>
 801f44e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f452:	f013 0201 	ands.w	r2, r3, #1
 801f456:	d00a      	beq.n	801f46e <__swsetup_r+0x9a>
 801f458:	2200      	movs	r2, #0
 801f45a:	60a2      	str	r2, [r4, #8]
 801f45c:	6962      	ldr	r2, [r4, #20]
 801f45e:	4252      	negs	r2, r2
 801f460:	61a2      	str	r2, [r4, #24]
 801f462:	6922      	ldr	r2, [r4, #16]
 801f464:	b942      	cbnz	r2, 801f478 <__swsetup_r+0xa4>
 801f466:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801f46a:	d1c5      	bne.n	801f3f8 <__swsetup_r+0x24>
 801f46c:	bd38      	pop	{r3, r4, r5, pc}
 801f46e:	0799      	lsls	r1, r3, #30
 801f470:	bf58      	it	pl
 801f472:	6962      	ldrpl	r2, [r4, #20]
 801f474:	60a2      	str	r2, [r4, #8]
 801f476:	e7f4      	b.n	801f462 <__swsetup_r+0x8e>
 801f478:	2000      	movs	r0, #0
 801f47a:	e7f7      	b.n	801f46c <__swsetup_r+0x98>
 801f47c:	20000120 	.word	0x20000120

0801f480 <__fputwc>:
 801f480:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801f484:	4680      	mov	r8, r0
 801f486:	460f      	mov	r7, r1
 801f488:	4614      	mov	r4, r2
 801f48a:	f7fd fc81 	bl	801cd90 <__locale_mb_cur_max>
 801f48e:	2801      	cmp	r0, #1
 801f490:	4605      	mov	r5, r0
 801f492:	d11b      	bne.n	801f4cc <__fputwc+0x4c>
 801f494:	1e7b      	subs	r3, r7, #1
 801f496:	2bfe      	cmp	r3, #254	@ 0xfe
 801f498:	d818      	bhi.n	801f4cc <__fputwc+0x4c>
 801f49a:	f88d 7004 	strb.w	r7, [sp, #4]
 801f49e:	2600      	movs	r6, #0
 801f4a0:	f10d 0904 	add.w	r9, sp, #4
 801f4a4:	42ae      	cmp	r6, r5
 801f4a6:	d021      	beq.n	801f4ec <__fputwc+0x6c>
 801f4a8:	68a3      	ldr	r3, [r4, #8]
 801f4aa:	f816 1009 	ldrb.w	r1, [r6, r9]
 801f4ae:	3b01      	subs	r3, #1
 801f4b0:	2b00      	cmp	r3, #0
 801f4b2:	60a3      	str	r3, [r4, #8]
 801f4b4:	da04      	bge.n	801f4c0 <__fputwc+0x40>
 801f4b6:	69a2      	ldr	r2, [r4, #24]
 801f4b8:	4293      	cmp	r3, r2
 801f4ba:	db1b      	blt.n	801f4f4 <__fputwc+0x74>
 801f4bc:	290a      	cmp	r1, #10
 801f4be:	d019      	beq.n	801f4f4 <__fputwc+0x74>
 801f4c0:	6823      	ldr	r3, [r4, #0]
 801f4c2:	1c5a      	adds	r2, r3, #1
 801f4c4:	6022      	str	r2, [r4, #0]
 801f4c6:	7019      	strb	r1, [r3, #0]
 801f4c8:	3601      	adds	r6, #1
 801f4ca:	e7eb      	b.n	801f4a4 <__fputwc+0x24>
 801f4cc:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
 801f4d0:	463a      	mov	r2, r7
 801f4d2:	a901      	add	r1, sp, #4
 801f4d4:	4640      	mov	r0, r8
 801f4d6:	f000 f845 	bl	801f564 <_wcrtomb_r>
 801f4da:	1c43      	adds	r3, r0, #1
 801f4dc:	4605      	mov	r5, r0
 801f4de:	d1de      	bne.n	801f49e <__fputwc+0x1e>
 801f4e0:	89a3      	ldrh	r3, [r4, #12]
 801f4e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f4e6:	81a3      	strh	r3, [r4, #12]
 801f4e8:	f04f 37ff 	mov.w	r7, #4294967295
 801f4ec:	4638      	mov	r0, r7
 801f4ee:	b003      	add	sp, #12
 801f4f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f4f4:	4622      	mov	r2, r4
 801f4f6:	4640      	mov	r0, r8
 801f4f8:	f000 f8ae 	bl	801f658 <__swbuf_r>
 801f4fc:	3001      	adds	r0, #1
 801f4fe:	d1e3      	bne.n	801f4c8 <__fputwc+0x48>
 801f500:	e7f2      	b.n	801f4e8 <__fputwc+0x68>

0801f502 <_fputwc_r>:
 801f502:	6e53      	ldr	r3, [r2, #100]	@ 0x64
 801f504:	07db      	lsls	r3, r3, #31
 801f506:	b570      	push	{r4, r5, r6, lr}
 801f508:	4605      	mov	r5, r0
 801f50a:	460e      	mov	r6, r1
 801f50c:	4614      	mov	r4, r2
 801f50e:	d405      	bmi.n	801f51c <_fputwc_r+0x1a>
 801f510:	8993      	ldrh	r3, [r2, #12]
 801f512:	0598      	lsls	r0, r3, #22
 801f514:	d402      	bmi.n	801f51c <_fputwc_r+0x1a>
 801f516:	6d90      	ldr	r0, [r2, #88]	@ 0x58
 801f518:	f7fb fdca 	bl	801b0b0 <__retarget_lock_acquire_recursive>
 801f51c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f520:	0499      	lsls	r1, r3, #18
 801f522:	d406      	bmi.n	801f532 <_fputwc_r+0x30>
 801f524:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f528:	81a3      	strh	r3, [r4, #12]
 801f52a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f52c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f530:	6663      	str	r3, [r4, #100]	@ 0x64
 801f532:	4622      	mov	r2, r4
 801f534:	4628      	mov	r0, r5
 801f536:	4631      	mov	r1, r6
 801f538:	f7ff ffa2 	bl	801f480 <__fputwc>
 801f53c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f53e:	07da      	lsls	r2, r3, #31
 801f540:	4605      	mov	r5, r0
 801f542:	d405      	bmi.n	801f550 <_fputwc_r+0x4e>
 801f544:	89a3      	ldrh	r3, [r4, #12]
 801f546:	059b      	lsls	r3, r3, #22
 801f548:	d402      	bmi.n	801f550 <_fputwc_r+0x4e>
 801f54a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f54c:	f7fb fdb1 	bl	801b0b2 <__retarget_lock_release_recursive>
 801f550:	4628      	mov	r0, r5
 801f552:	bd70      	pop	{r4, r5, r6, pc}

0801f554 <abort>:
 801f554:	b508      	push	{r3, lr}
 801f556:	2006      	movs	r0, #6
 801f558:	f000 f8f0 	bl	801f73c <raise>
 801f55c:	2001      	movs	r0, #1
 801f55e:	f7e4 fc45 	bl	8003dec <_exit>
	...

0801f564 <_wcrtomb_r>:
 801f564:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f566:	4c09      	ldr	r4, [pc, #36]	@ (801f58c <_wcrtomb_r+0x28>)
 801f568:	b085      	sub	sp, #20
 801f56a:	f8d4 70e0 	ldr.w	r7, [r4, #224]	@ 0xe0
 801f56e:	4605      	mov	r5, r0
 801f570:	461e      	mov	r6, r3
 801f572:	b909      	cbnz	r1, 801f578 <_wcrtomb_r+0x14>
 801f574:	460a      	mov	r2, r1
 801f576:	a901      	add	r1, sp, #4
 801f578:	47b8      	blx	r7
 801f57a:	1c43      	adds	r3, r0, #1
 801f57c:	bf01      	itttt	eq
 801f57e:	2300      	moveq	r3, #0
 801f580:	6033      	streq	r3, [r6, #0]
 801f582:	238a      	moveq	r3, #138	@ 0x8a
 801f584:	602b      	streq	r3, [r5, #0]
 801f586:	b005      	add	sp, #20
 801f588:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f58a:	bf00      	nop
 801f58c:	2000065c 	.word	0x2000065c

0801f590 <__swhatbuf_r>:
 801f590:	b570      	push	{r4, r5, r6, lr}
 801f592:	460c      	mov	r4, r1
 801f594:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f598:	2900      	cmp	r1, #0
 801f59a:	b096      	sub	sp, #88	@ 0x58
 801f59c:	4615      	mov	r5, r2
 801f59e:	461e      	mov	r6, r3
 801f5a0:	da07      	bge.n	801f5b2 <__swhatbuf_r+0x22>
 801f5a2:	89a1      	ldrh	r1, [r4, #12]
 801f5a4:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
 801f5a8:	d117      	bne.n	801f5da <__swhatbuf_r+0x4a>
 801f5aa:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f5ae:	4608      	mov	r0, r1
 801f5b0:	e00f      	b.n	801f5d2 <__swhatbuf_r+0x42>
 801f5b2:	466a      	mov	r2, sp
 801f5b4:	f000 f8ca 	bl	801f74c <_fstat_r>
 801f5b8:	2800      	cmp	r0, #0
 801f5ba:	dbf2      	blt.n	801f5a2 <__swhatbuf_r+0x12>
 801f5bc:	9901      	ldr	r1, [sp, #4]
 801f5be:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801f5c2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801f5c6:	4259      	negs	r1, r3
 801f5c8:	4159      	adcs	r1, r3
 801f5ca:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 801f5ce:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f5d2:	6031      	str	r1, [r6, #0]
 801f5d4:	602b      	str	r3, [r5, #0]
 801f5d6:	b016      	add	sp, #88	@ 0x58
 801f5d8:	bd70      	pop	{r4, r5, r6, pc}
 801f5da:	2100      	movs	r1, #0
 801f5dc:	2340      	movs	r3, #64	@ 0x40
 801f5de:	e7e6      	b.n	801f5ae <__swhatbuf_r+0x1e>

0801f5e0 <__smakebuf_r>:
 801f5e0:	898b      	ldrh	r3, [r1, #12]
 801f5e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f5e4:	079d      	lsls	r5, r3, #30
 801f5e6:	4606      	mov	r6, r0
 801f5e8:	460c      	mov	r4, r1
 801f5ea:	d507      	bpl.n	801f5fc <__smakebuf_r+0x1c>
 801f5ec:	f104 0343 	add.w	r3, r4, #67	@ 0x43
 801f5f0:	6023      	str	r3, [r4, #0]
 801f5f2:	6123      	str	r3, [r4, #16]
 801f5f4:	2301      	movs	r3, #1
 801f5f6:	6163      	str	r3, [r4, #20]
 801f5f8:	b003      	add	sp, #12
 801f5fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f5fc:	ab01      	add	r3, sp, #4
 801f5fe:	466a      	mov	r2, sp
 801f600:	f7ff ffc6 	bl	801f590 <__swhatbuf_r>
 801f604:	9f00      	ldr	r7, [sp, #0]
 801f606:	4605      	mov	r5, r0
 801f608:	4639      	mov	r1, r7
 801f60a:	4630      	mov	r0, r6
 801f60c:	f7fb fe86 	bl	801b31c <_malloc_r>
 801f610:	b948      	cbnz	r0, 801f626 <__smakebuf_r+0x46>
 801f612:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f616:	059a      	lsls	r2, r3, #22
 801f618:	d4ee      	bmi.n	801f5f8 <__smakebuf_r+0x18>
 801f61a:	f023 0303 	bic.w	r3, r3, #3
 801f61e:	f043 0302 	orr.w	r3, r3, #2
 801f622:	81a3      	strh	r3, [r4, #12]
 801f624:	e7e2      	b.n	801f5ec <__smakebuf_r+0xc>
 801f626:	89a3      	ldrh	r3, [r4, #12]
 801f628:	6020      	str	r0, [r4, #0]
 801f62a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801f62e:	81a3      	strh	r3, [r4, #12]
 801f630:	9b01      	ldr	r3, [sp, #4]
 801f632:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801f636:	b15b      	cbz	r3, 801f650 <__smakebuf_r+0x70>
 801f638:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f63c:	4630      	mov	r0, r6
 801f63e:	f000 f897 	bl	801f770 <_isatty_r>
 801f642:	b128      	cbz	r0, 801f650 <__smakebuf_r+0x70>
 801f644:	89a3      	ldrh	r3, [r4, #12]
 801f646:	f023 0303 	bic.w	r3, r3, #3
 801f64a:	f043 0301 	orr.w	r3, r3, #1
 801f64e:	81a3      	strh	r3, [r4, #12]
 801f650:	89a3      	ldrh	r3, [r4, #12]
 801f652:	431d      	orrs	r5, r3
 801f654:	81a5      	strh	r5, [r4, #12]
 801f656:	e7cf      	b.n	801f5f8 <__smakebuf_r+0x18>

0801f658 <__swbuf_r>:
 801f658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f65a:	460e      	mov	r6, r1
 801f65c:	4614      	mov	r4, r2
 801f65e:	4605      	mov	r5, r0
 801f660:	b118      	cbz	r0, 801f66a <__swbuf_r+0x12>
 801f662:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f664:	b90b      	cbnz	r3, 801f66a <__swbuf_r+0x12>
 801f666:	f7fb fbcf 	bl	801ae08 <__sinit>
 801f66a:	69a3      	ldr	r3, [r4, #24]
 801f66c:	60a3      	str	r3, [r4, #8]
 801f66e:	89a3      	ldrh	r3, [r4, #12]
 801f670:	0719      	lsls	r1, r3, #28
 801f672:	d501      	bpl.n	801f678 <__swbuf_r+0x20>
 801f674:	6923      	ldr	r3, [r4, #16]
 801f676:	b943      	cbnz	r3, 801f68a <__swbuf_r+0x32>
 801f678:	4621      	mov	r1, r4
 801f67a:	4628      	mov	r0, r5
 801f67c:	f7ff feaa 	bl	801f3d4 <__swsetup_r>
 801f680:	b118      	cbz	r0, 801f68a <__swbuf_r+0x32>
 801f682:	f04f 37ff 	mov.w	r7, #4294967295
 801f686:	4638      	mov	r0, r7
 801f688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f68a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f68e:	b2f6      	uxtb	r6, r6
 801f690:	049a      	lsls	r2, r3, #18
 801f692:	4637      	mov	r7, r6
 801f694:	d406      	bmi.n	801f6a4 <__swbuf_r+0x4c>
 801f696:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f69a:	81a3      	strh	r3, [r4, #12]
 801f69c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f69e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801f6a2:	6663      	str	r3, [r4, #100]	@ 0x64
 801f6a4:	6823      	ldr	r3, [r4, #0]
 801f6a6:	6922      	ldr	r2, [r4, #16]
 801f6a8:	1a98      	subs	r0, r3, r2
 801f6aa:	6963      	ldr	r3, [r4, #20]
 801f6ac:	4283      	cmp	r3, r0
 801f6ae:	dc05      	bgt.n	801f6bc <__swbuf_r+0x64>
 801f6b0:	4621      	mov	r1, r4
 801f6b2:	4628      	mov	r0, r5
 801f6b4:	f7fd fb34 	bl	801cd20 <_fflush_r>
 801f6b8:	2800      	cmp	r0, #0
 801f6ba:	d1e2      	bne.n	801f682 <__swbuf_r+0x2a>
 801f6bc:	68a3      	ldr	r3, [r4, #8]
 801f6be:	3b01      	subs	r3, #1
 801f6c0:	60a3      	str	r3, [r4, #8]
 801f6c2:	6823      	ldr	r3, [r4, #0]
 801f6c4:	1c5a      	adds	r2, r3, #1
 801f6c6:	6022      	str	r2, [r4, #0]
 801f6c8:	701e      	strb	r6, [r3, #0]
 801f6ca:	6962      	ldr	r2, [r4, #20]
 801f6cc:	1c43      	adds	r3, r0, #1
 801f6ce:	429a      	cmp	r2, r3
 801f6d0:	d004      	beq.n	801f6dc <__swbuf_r+0x84>
 801f6d2:	89a3      	ldrh	r3, [r4, #12]
 801f6d4:	07db      	lsls	r3, r3, #31
 801f6d6:	d5d6      	bpl.n	801f686 <__swbuf_r+0x2e>
 801f6d8:	2e0a      	cmp	r6, #10
 801f6da:	d1d4      	bne.n	801f686 <__swbuf_r+0x2e>
 801f6dc:	4621      	mov	r1, r4
 801f6de:	4628      	mov	r0, r5
 801f6e0:	f7fd fb1e 	bl	801cd20 <_fflush_r>
 801f6e4:	2800      	cmp	r0, #0
 801f6e6:	d0ce      	beq.n	801f686 <__swbuf_r+0x2e>
 801f6e8:	e7cb      	b.n	801f682 <__swbuf_r+0x2a>

0801f6ea <_raise_r>:
 801f6ea:	291f      	cmp	r1, #31
 801f6ec:	b538      	push	{r3, r4, r5, lr}
 801f6ee:	4605      	mov	r5, r0
 801f6f0:	460c      	mov	r4, r1
 801f6f2:	d904      	bls.n	801f6fe <_raise_r+0x14>
 801f6f4:	2316      	movs	r3, #22
 801f6f6:	6003      	str	r3, [r0, #0]
 801f6f8:	f04f 30ff 	mov.w	r0, #4294967295
 801f6fc:	bd38      	pop	{r3, r4, r5, pc}
 801f6fe:	f8d0 2118 	ldr.w	r2, [r0, #280]	@ 0x118
 801f702:	b112      	cbz	r2, 801f70a <_raise_r+0x20>
 801f704:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801f708:	b94b      	cbnz	r3, 801f71e <_raise_r+0x34>
 801f70a:	4628      	mov	r0, r5
 801f70c:	f000 f852 	bl	801f7b4 <_getpid_r>
 801f710:	4622      	mov	r2, r4
 801f712:	4601      	mov	r1, r0
 801f714:	4628      	mov	r0, r5
 801f716:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f71a:	f000 b839 	b.w	801f790 <_kill_r>
 801f71e:	2b01      	cmp	r3, #1
 801f720:	d00a      	beq.n	801f738 <_raise_r+0x4e>
 801f722:	1c59      	adds	r1, r3, #1
 801f724:	d103      	bne.n	801f72e <_raise_r+0x44>
 801f726:	2316      	movs	r3, #22
 801f728:	6003      	str	r3, [r0, #0]
 801f72a:	2001      	movs	r0, #1
 801f72c:	e7e6      	b.n	801f6fc <_raise_r+0x12>
 801f72e:	2100      	movs	r1, #0
 801f730:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801f734:	4620      	mov	r0, r4
 801f736:	4798      	blx	r3
 801f738:	2000      	movs	r0, #0
 801f73a:	e7df      	b.n	801f6fc <_raise_r+0x12>

0801f73c <raise>:
 801f73c:	4b02      	ldr	r3, [pc, #8]	@ (801f748 <raise+0xc>)
 801f73e:	4601      	mov	r1, r0
 801f740:	6818      	ldr	r0, [r3, #0]
 801f742:	f7ff bfd2 	b.w	801f6ea <_raise_r>
 801f746:	bf00      	nop
 801f748:	20000120 	.word	0x20000120

0801f74c <_fstat_r>:
 801f74c:	b538      	push	{r3, r4, r5, lr}
 801f74e:	4d07      	ldr	r5, [pc, #28]	@ (801f76c <_fstat_r+0x20>)
 801f750:	2300      	movs	r3, #0
 801f752:	4604      	mov	r4, r0
 801f754:	4608      	mov	r0, r1
 801f756:	4611      	mov	r1, r2
 801f758:	602b      	str	r3, [r5, #0]
 801f75a:	f7e4 fb97 	bl	8003e8c <_fstat>
 801f75e:	1c43      	adds	r3, r0, #1
 801f760:	d102      	bne.n	801f768 <_fstat_r+0x1c>
 801f762:	682b      	ldr	r3, [r5, #0]
 801f764:	b103      	cbz	r3, 801f768 <_fstat_r+0x1c>
 801f766:	6023      	str	r3, [r4, #0]
 801f768:	bd38      	pop	{r3, r4, r5, pc}
 801f76a:	bf00      	nop
 801f76c:	2000d0c4 	.word	0x2000d0c4

0801f770 <_isatty_r>:
 801f770:	b538      	push	{r3, r4, r5, lr}
 801f772:	4d06      	ldr	r5, [pc, #24]	@ (801f78c <_isatty_r+0x1c>)
 801f774:	2300      	movs	r3, #0
 801f776:	4604      	mov	r4, r0
 801f778:	4608      	mov	r0, r1
 801f77a:	602b      	str	r3, [r5, #0]
 801f77c:	f7e4 fb96 	bl	8003eac <_isatty>
 801f780:	1c43      	adds	r3, r0, #1
 801f782:	d102      	bne.n	801f78a <_isatty_r+0x1a>
 801f784:	682b      	ldr	r3, [r5, #0]
 801f786:	b103      	cbz	r3, 801f78a <_isatty_r+0x1a>
 801f788:	6023      	str	r3, [r4, #0]
 801f78a:	bd38      	pop	{r3, r4, r5, pc}
 801f78c:	2000d0c4 	.word	0x2000d0c4

0801f790 <_kill_r>:
 801f790:	b538      	push	{r3, r4, r5, lr}
 801f792:	4d07      	ldr	r5, [pc, #28]	@ (801f7b0 <_kill_r+0x20>)
 801f794:	2300      	movs	r3, #0
 801f796:	4604      	mov	r4, r0
 801f798:	4608      	mov	r0, r1
 801f79a:	4611      	mov	r1, r2
 801f79c:	602b      	str	r3, [r5, #0]
 801f79e:	f7e4 fb15 	bl	8003dcc <_kill>
 801f7a2:	1c43      	adds	r3, r0, #1
 801f7a4:	d102      	bne.n	801f7ac <_kill_r+0x1c>
 801f7a6:	682b      	ldr	r3, [r5, #0]
 801f7a8:	b103      	cbz	r3, 801f7ac <_kill_r+0x1c>
 801f7aa:	6023      	str	r3, [r4, #0]
 801f7ac:	bd38      	pop	{r3, r4, r5, pc}
 801f7ae:	bf00      	nop
 801f7b0:	2000d0c4 	.word	0x2000d0c4

0801f7b4 <_getpid_r>:
 801f7b4:	f7e4 bb02 	b.w	8003dbc <_getpid>

0801f7b8 <atan2>:
 801f7b8:	f000 bd52 	b.w	8020260 <__ieee754_atan2>

0801f7bc <sqrt>:
 801f7bc:	b538      	push	{r3, r4, r5, lr}
 801f7be:	ed2d 8b02 	vpush	{d8}
 801f7c2:	ec55 4b10 	vmov	r4, r5, d0
 801f7c6:	f000 fa6f 	bl	801fca8 <__ieee754_sqrt>
 801f7ca:	4622      	mov	r2, r4
 801f7cc:	462b      	mov	r3, r5
 801f7ce:	4620      	mov	r0, r4
 801f7d0:	4629      	mov	r1, r5
 801f7d2:	eeb0 8a40 	vmov.f32	s16, s0
 801f7d6:	eef0 8a60 	vmov.f32	s17, s1
 801f7da:	f7e1 f9a7 	bl	8000b2c <__aeabi_dcmpun>
 801f7de:	b990      	cbnz	r0, 801f806 <sqrt+0x4a>
 801f7e0:	2200      	movs	r2, #0
 801f7e2:	2300      	movs	r3, #0
 801f7e4:	4620      	mov	r0, r4
 801f7e6:	4629      	mov	r1, r5
 801f7e8:	f7e1 f978 	bl	8000adc <__aeabi_dcmplt>
 801f7ec:	b158      	cbz	r0, 801f806 <sqrt+0x4a>
 801f7ee:	f7fb fc33 	bl	801b058 <__errno>
 801f7f2:	2321      	movs	r3, #33	@ 0x21
 801f7f4:	6003      	str	r3, [r0, #0]
 801f7f6:	2200      	movs	r2, #0
 801f7f8:	2300      	movs	r3, #0
 801f7fa:	4610      	mov	r0, r2
 801f7fc:	4619      	mov	r1, r3
 801f7fe:	f7e1 f825 	bl	800084c <__aeabi_ddiv>
 801f802:	ec41 0b18 	vmov	d8, r0, r1
 801f806:	eeb0 0a48 	vmov.f32	s0, s16
 801f80a:	eef0 0a68 	vmov.f32	s1, s17
 801f80e:	ecbd 8b02 	vpop	{d8}
 801f812:	bd38      	pop	{r3, r4, r5, pc}
 801f814:	0000      	movs	r0, r0
	...

0801f818 <atan>:
 801f818:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f81c:	ec55 4b10 	vmov	r4, r5, d0
 801f820:	4bbf      	ldr	r3, [pc, #764]	@ (801fb20 <atan+0x308>)
 801f822:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 801f826:	429e      	cmp	r6, r3
 801f828:	46ab      	mov	fp, r5
 801f82a:	d918      	bls.n	801f85e <atan+0x46>
 801f82c:	4bbd      	ldr	r3, [pc, #756]	@ (801fb24 <atan+0x30c>)
 801f82e:	429e      	cmp	r6, r3
 801f830:	d801      	bhi.n	801f836 <atan+0x1e>
 801f832:	d109      	bne.n	801f848 <atan+0x30>
 801f834:	b144      	cbz	r4, 801f848 <atan+0x30>
 801f836:	4622      	mov	r2, r4
 801f838:	462b      	mov	r3, r5
 801f83a:	4620      	mov	r0, r4
 801f83c:	4629      	mov	r1, r5
 801f83e:	f7e0 fd25 	bl	800028c <__adddf3>
 801f842:	4604      	mov	r4, r0
 801f844:	460d      	mov	r5, r1
 801f846:	e006      	b.n	801f856 <atan+0x3e>
 801f848:	f1bb 0f00 	cmp.w	fp, #0
 801f84c:	f340 812b 	ble.w	801faa6 <atan+0x28e>
 801f850:	a597      	add	r5, pc, #604	@ (adr r5, 801fab0 <atan+0x298>)
 801f852:	e9d5 4500 	ldrd	r4, r5, [r5]
 801f856:	ec45 4b10 	vmov	d0, r4, r5
 801f85a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f85e:	4bb2      	ldr	r3, [pc, #712]	@ (801fb28 <atan+0x310>)
 801f860:	429e      	cmp	r6, r3
 801f862:	d813      	bhi.n	801f88c <atan+0x74>
 801f864:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 801f868:	429e      	cmp	r6, r3
 801f86a:	d80c      	bhi.n	801f886 <atan+0x6e>
 801f86c:	a392      	add	r3, pc, #584	@ (adr r3, 801fab8 <atan+0x2a0>)
 801f86e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f872:	4620      	mov	r0, r4
 801f874:	4629      	mov	r1, r5
 801f876:	f7e0 fd09 	bl	800028c <__adddf3>
 801f87a:	4bac      	ldr	r3, [pc, #688]	@ (801fb2c <atan+0x314>)
 801f87c:	2200      	movs	r2, #0
 801f87e:	f7e1 f94b 	bl	8000b18 <__aeabi_dcmpgt>
 801f882:	2800      	cmp	r0, #0
 801f884:	d1e7      	bne.n	801f856 <atan+0x3e>
 801f886:	f04f 3aff 	mov.w	sl, #4294967295
 801f88a:	e029      	b.n	801f8e0 <atan+0xc8>
 801f88c:	f000 f9b0 	bl	801fbf0 <fabs>
 801f890:	4ba7      	ldr	r3, [pc, #668]	@ (801fb30 <atan+0x318>)
 801f892:	429e      	cmp	r6, r3
 801f894:	ec55 4b10 	vmov	r4, r5, d0
 801f898:	f200 80bc 	bhi.w	801fa14 <atan+0x1fc>
 801f89c:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 801f8a0:	429e      	cmp	r6, r3
 801f8a2:	f200 809e 	bhi.w	801f9e2 <atan+0x1ca>
 801f8a6:	4622      	mov	r2, r4
 801f8a8:	462b      	mov	r3, r5
 801f8aa:	4620      	mov	r0, r4
 801f8ac:	4629      	mov	r1, r5
 801f8ae:	f7e0 fced 	bl	800028c <__adddf3>
 801f8b2:	4b9e      	ldr	r3, [pc, #632]	@ (801fb2c <atan+0x314>)
 801f8b4:	2200      	movs	r2, #0
 801f8b6:	f7e0 fce7 	bl	8000288 <__aeabi_dsub>
 801f8ba:	2200      	movs	r2, #0
 801f8bc:	4606      	mov	r6, r0
 801f8be:	460f      	mov	r7, r1
 801f8c0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 801f8c4:	4620      	mov	r0, r4
 801f8c6:	4629      	mov	r1, r5
 801f8c8:	f7e0 fce0 	bl	800028c <__adddf3>
 801f8cc:	4602      	mov	r2, r0
 801f8ce:	460b      	mov	r3, r1
 801f8d0:	4630      	mov	r0, r6
 801f8d2:	4639      	mov	r1, r7
 801f8d4:	f7e0 ffba 	bl	800084c <__aeabi_ddiv>
 801f8d8:	f04f 0a00 	mov.w	sl, #0
 801f8dc:	4604      	mov	r4, r0
 801f8de:	460d      	mov	r5, r1
 801f8e0:	4622      	mov	r2, r4
 801f8e2:	462b      	mov	r3, r5
 801f8e4:	4620      	mov	r0, r4
 801f8e6:	4629      	mov	r1, r5
 801f8e8:	f7e0 fe86 	bl	80005f8 <__aeabi_dmul>
 801f8ec:	4602      	mov	r2, r0
 801f8ee:	460b      	mov	r3, r1
 801f8f0:	4680      	mov	r8, r0
 801f8f2:	4689      	mov	r9, r1
 801f8f4:	f7e0 fe80 	bl	80005f8 <__aeabi_dmul>
 801f8f8:	a371      	add	r3, pc, #452	@ (adr r3, 801fac0 <atan+0x2a8>)
 801f8fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f8fe:	4606      	mov	r6, r0
 801f900:	460f      	mov	r7, r1
 801f902:	f7e0 fe79 	bl	80005f8 <__aeabi_dmul>
 801f906:	a370      	add	r3, pc, #448	@ (adr r3, 801fac8 <atan+0x2b0>)
 801f908:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f90c:	f7e0 fcbe 	bl	800028c <__adddf3>
 801f910:	4632      	mov	r2, r6
 801f912:	463b      	mov	r3, r7
 801f914:	f7e0 fe70 	bl	80005f8 <__aeabi_dmul>
 801f918:	a36d      	add	r3, pc, #436	@ (adr r3, 801fad0 <atan+0x2b8>)
 801f91a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f91e:	f7e0 fcb5 	bl	800028c <__adddf3>
 801f922:	4632      	mov	r2, r6
 801f924:	463b      	mov	r3, r7
 801f926:	f7e0 fe67 	bl	80005f8 <__aeabi_dmul>
 801f92a:	a36b      	add	r3, pc, #428	@ (adr r3, 801fad8 <atan+0x2c0>)
 801f92c:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f930:	f7e0 fcac 	bl	800028c <__adddf3>
 801f934:	4632      	mov	r2, r6
 801f936:	463b      	mov	r3, r7
 801f938:	f7e0 fe5e 	bl	80005f8 <__aeabi_dmul>
 801f93c:	a368      	add	r3, pc, #416	@ (adr r3, 801fae0 <atan+0x2c8>)
 801f93e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f942:	f7e0 fca3 	bl	800028c <__adddf3>
 801f946:	4632      	mov	r2, r6
 801f948:	463b      	mov	r3, r7
 801f94a:	f7e0 fe55 	bl	80005f8 <__aeabi_dmul>
 801f94e:	a366      	add	r3, pc, #408	@ (adr r3, 801fae8 <atan+0x2d0>)
 801f950:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f954:	f7e0 fc9a 	bl	800028c <__adddf3>
 801f958:	4642      	mov	r2, r8
 801f95a:	464b      	mov	r3, r9
 801f95c:	f7e0 fe4c 	bl	80005f8 <__aeabi_dmul>
 801f960:	a363      	add	r3, pc, #396	@ (adr r3, 801faf0 <atan+0x2d8>)
 801f962:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f966:	4680      	mov	r8, r0
 801f968:	4689      	mov	r9, r1
 801f96a:	4630      	mov	r0, r6
 801f96c:	4639      	mov	r1, r7
 801f96e:	f7e0 fe43 	bl	80005f8 <__aeabi_dmul>
 801f972:	a361      	add	r3, pc, #388	@ (adr r3, 801faf8 <atan+0x2e0>)
 801f974:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f978:	f7e0 fc86 	bl	8000288 <__aeabi_dsub>
 801f97c:	4632      	mov	r2, r6
 801f97e:	463b      	mov	r3, r7
 801f980:	f7e0 fe3a 	bl	80005f8 <__aeabi_dmul>
 801f984:	a35e      	add	r3, pc, #376	@ (adr r3, 801fb00 <atan+0x2e8>)
 801f986:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f98a:	f7e0 fc7d 	bl	8000288 <__aeabi_dsub>
 801f98e:	4632      	mov	r2, r6
 801f990:	463b      	mov	r3, r7
 801f992:	f7e0 fe31 	bl	80005f8 <__aeabi_dmul>
 801f996:	a35c      	add	r3, pc, #368	@ (adr r3, 801fb08 <atan+0x2f0>)
 801f998:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f99c:	f7e0 fc74 	bl	8000288 <__aeabi_dsub>
 801f9a0:	4632      	mov	r2, r6
 801f9a2:	463b      	mov	r3, r7
 801f9a4:	f7e0 fe28 	bl	80005f8 <__aeabi_dmul>
 801f9a8:	a359      	add	r3, pc, #356	@ (adr r3, 801fb10 <atan+0x2f8>)
 801f9aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f9ae:	f7e0 fc6b 	bl	8000288 <__aeabi_dsub>
 801f9b2:	4632      	mov	r2, r6
 801f9b4:	463b      	mov	r3, r7
 801f9b6:	f7e0 fe1f 	bl	80005f8 <__aeabi_dmul>
 801f9ba:	4602      	mov	r2, r0
 801f9bc:	460b      	mov	r3, r1
 801f9be:	4640      	mov	r0, r8
 801f9c0:	4649      	mov	r1, r9
 801f9c2:	f7e0 fc63 	bl	800028c <__adddf3>
 801f9c6:	4622      	mov	r2, r4
 801f9c8:	462b      	mov	r3, r5
 801f9ca:	f7e0 fe15 	bl	80005f8 <__aeabi_dmul>
 801f9ce:	f1ba 3fff 	cmp.w	sl, #4294967295
 801f9d2:	4602      	mov	r2, r0
 801f9d4:	460b      	mov	r3, r1
 801f9d6:	d148      	bne.n	801fa6a <atan+0x252>
 801f9d8:	4620      	mov	r0, r4
 801f9da:	4629      	mov	r1, r5
 801f9dc:	f7e0 fc54 	bl	8000288 <__aeabi_dsub>
 801f9e0:	e72f      	b.n	801f842 <atan+0x2a>
 801f9e2:	4b52      	ldr	r3, [pc, #328]	@ (801fb2c <atan+0x314>)
 801f9e4:	2200      	movs	r2, #0
 801f9e6:	4620      	mov	r0, r4
 801f9e8:	4629      	mov	r1, r5
 801f9ea:	f7e0 fc4d 	bl	8000288 <__aeabi_dsub>
 801f9ee:	4b4f      	ldr	r3, [pc, #316]	@ (801fb2c <atan+0x314>)
 801f9f0:	4606      	mov	r6, r0
 801f9f2:	460f      	mov	r7, r1
 801f9f4:	2200      	movs	r2, #0
 801f9f6:	4620      	mov	r0, r4
 801f9f8:	4629      	mov	r1, r5
 801f9fa:	f7e0 fc47 	bl	800028c <__adddf3>
 801f9fe:	4602      	mov	r2, r0
 801fa00:	460b      	mov	r3, r1
 801fa02:	4630      	mov	r0, r6
 801fa04:	4639      	mov	r1, r7
 801fa06:	f7e0 ff21 	bl	800084c <__aeabi_ddiv>
 801fa0a:	f04f 0a01 	mov.w	sl, #1
 801fa0e:	4604      	mov	r4, r0
 801fa10:	460d      	mov	r5, r1
 801fa12:	e765      	b.n	801f8e0 <atan+0xc8>
 801fa14:	4b47      	ldr	r3, [pc, #284]	@ (801fb34 <atan+0x31c>)
 801fa16:	429e      	cmp	r6, r3
 801fa18:	d21c      	bcs.n	801fa54 <atan+0x23c>
 801fa1a:	4b47      	ldr	r3, [pc, #284]	@ (801fb38 <atan+0x320>)
 801fa1c:	2200      	movs	r2, #0
 801fa1e:	4620      	mov	r0, r4
 801fa20:	4629      	mov	r1, r5
 801fa22:	f7e0 fc31 	bl	8000288 <__aeabi_dsub>
 801fa26:	4b44      	ldr	r3, [pc, #272]	@ (801fb38 <atan+0x320>)
 801fa28:	4606      	mov	r6, r0
 801fa2a:	460f      	mov	r7, r1
 801fa2c:	2200      	movs	r2, #0
 801fa2e:	4620      	mov	r0, r4
 801fa30:	4629      	mov	r1, r5
 801fa32:	f7e0 fde1 	bl	80005f8 <__aeabi_dmul>
 801fa36:	4b3d      	ldr	r3, [pc, #244]	@ (801fb2c <atan+0x314>)
 801fa38:	2200      	movs	r2, #0
 801fa3a:	f7e0 fc27 	bl	800028c <__adddf3>
 801fa3e:	4602      	mov	r2, r0
 801fa40:	460b      	mov	r3, r1
 801fa42:	4630      	mov	r0, r6
 801fa44:	4639      	mov	r1, r7
 801fa46:	f7e0 ff01 	bl	800084c <__aeabi_ddiv>
 801fa4a:	f04f 0a02 	mov.w	sl, #2
 801fa4e:	4604      	mov	r4, r0
 801fa50:	460d      	mov	r5, r1
 801fa52:	e745      	b.n	801f8e0 <atan+0xc8>
 801fa54:	4622      	mov	r2, r4
 801fa56:	462b      	mov	r3, r5
 801fa58:	4938      	ldr	r1, [pc, #224]	@ (801fb3c <atan+0x324>)
 801fa5a:	2000      	movs	r0, #0
 801fa5c:	f7e0 fef6 	bl	800084c <__aeabi_ddiv>
 801fa60:	f04f 0a03 	mov.w	sl, #3
 801fa64:	4604      	mov	r4, r0
 801fa66:	460d      	mov	r5, r1
 801fa68:	e73a      	b.n	801f8e0 <atan+0xc8>
 801fa6a:	4b35      	ldr	r3, [pc, #212]	@ (801fb40 <atan+0x328>)
 801fa6c:	4e35      	ldr	r6, [pc, #212]	@ (801fb44 <atan+0x32c>)
 801fa6e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 801fa72:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fa76:	f7e0 fc07 	bl	8000288 <__aeabi_dsub>
 801fa7a:	4622      	mov	r2, r4
 801fa7c:	462b      	mov	r3, r5
 801fa7e:	f7e0 fc03 	bl	8000288 <__aeabi_dsub>
 801fa82:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 801fa86:	4602      	mov	r2, r0
 801fa88:	460b      	mov	r3, r1
 801fa8a:	e9d6 0100 	ldrd	r0, r1, [r6]
 801fa8e:	f7e0 fbfb 	bl	8000288 <__aeabi_dsub>
 801fa92:	f1bb 0f00 	cmp.w	fp, #0
 801fa96:	4604      	mov	r4, r0
 801fa98:	460d      	mov	r5, r1
 801fa9a:	f6bf aedc 	bge.w	801f856 <atan+0x3e>
 801fa9e:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 801faa2:	461d      	mov	r5, r3
 801faa4:	e6d7      	b.n	801f856 <atan+0x3e>
 801faa6:	a51c      	add	r5, pc, #112	@ (adr r5, 801fb18 <atan+0x300>)
 801faa8:	e9d5 4500 	ldrd	r4, r5, [r5]
 801faac:	e6d3      	b.n	801f856 <atan+0x3e>
 801faae:	bf00      	nop
 801fab0:	54442d18 	.word	0x54442d18
 801fab4:	3ff921fb 	.word	0x3ff921fb
 801fab8:	8800759c 	.word	0x8800759c
 801fabc:	7e37e43c 	.word	0x7e37e43c
 801fac0:	e322da11 	.word	0xe322da11
 801fac4:	3f90ad3a 	.word	0x3f90ad3a
 801fac8:	24760deb 	.word	0x24760deb
 801facc:	3fa97b4b 	.word	0x3fa97b4b
 801fad0:	a0d03d51 	.word	0xa0d03d51
 801fad4:	3fb10d66 	.word	0x3fb10d66
 801fad8:	c54c206e 	.word	0xc54c206e
 801fadc:	3fb745cd 	.word	0x3fb745cd
 801fae0:	920083ff 	.word	0x920083ff
 801fae4:	3fc24924 	.word	0x3fc24924
 801fae8:	5555550d 	.word	0x5555550d
 801faec:	3fd55555 	.word	0x3fd55555
 801faf0:	2c6a6c2f 	.word	0x2c6a6c2f
 801faf4:	bfa2b444 	.word	0xbfa2b444
 801faf8:	52defd9a 	.word	0x52defd9a
 801fafc:	3fadde2d 	.word	0x3fadde2d
 801fb00:	af749a6d 	.word	0xaf749a6d
 801fb04:	3fb3b0f2 	.word	0x3fb3b0f2
 801fb08:	fe231671 	.word	0xfe231671
 801fb0c:	3fbc71c6 	.word	0x3fbc71c6
 801fb10:	9998ebc4 	.word	0x9998ebc4
 801fb14:	3fc99999 	.word	0x3fc99999
 801fb18:	54442d18 	.word	0x54442d18
 801fb1c:	bff921fb 	.word	0xbff921fb
 801fb20:	440fffff 	.word	0x440fffff
 801fb24:	7ff00000 	.word	0x7ff00000
 801fb28:	3fdbffff 	.word	0x3fdbffff
 801fb2c:	3ff00000 	.word	0x3ff00000
 801fb30:	3ff2ffff 	.word	0x3ff2ffff
 801fb34:	40038000 	.word	0x40038000
 801fb38:	3ff80000 	.word	0x3ff80000
 801fb3c:	bff00000 	.word	0xbff00000
 801fb40:	08021ab0 	.word	0x08021ab0
 801fb44:	08021ad0 	.word	0x08021ad0

0801fb48 <cos>:
 801fb48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fb4a:	ec53 2b10 	vmov	r2, r3, d0
 801fb4e:	4826      	ldr	r0, [pc, #152]	@ (801fbe8 <cos+0xa0>)
 801fb50:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 801fb54:	4281      	cmp	r1, r0
 801fb56:	d806      	bhi.n	801fb66 <cos+0x1e>
 801fb58:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 801fbe0 <cos+0x98>
 801fb5c:	b005      	add	sp, #20
 801fb5e:	f85d eb04 	ldr.w	lr, [sp], #4
 801fb62:	f000 b9f9 	b.w	801ff58 <__kernel_cos>
 801fb66:	4821      	ldr	r0, [pc, #132]	@ (801fbec <cos+0xa4>)
 801fb68:	4281      	cmp	r1, r0
 801fb6a:	d908      	bls.n	801fb7e <cos+0x36>
 801fb6c:	4610      	mov	r0, r2
 801fb6e:	4619      	mov	r1, r3
 801fb70:	f7e0 fb8a 	bl	8000288 <__aeabi_dsub>
 801fb74:	ec41 0b10 	vmov	d0, r0, r1
 801fb78:	b005      	add	sp, #20
 801fb7a:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb7e:	4668      	mov	r0, sp
 801fb80:	f000 fc36 	bl	80203f0 <__ieee754_rem_pio2>
 801fb84:	f000 0003 	and.w	r0, r0, #3
 801fb88:	2801      	cmp	r0, #1
 801fb8a:	d00b      	beq.n	801fba4 <cos+0x5c>
 801fb8c:	2802      	cmp	r0, #2
 801fb8e:	d015      	beq.n	801fbbc <cos+0x74>
 801fb90:	b9d8      	cbnz	r0, 801fbca <cos+0x82>
 801fb92:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb96:	ed9d 0b00 	vldr	d0, [sp]
 801fb9a:	f000 f9dd 	bl	801ff58 <__kernel_cos>
 801fb9e:	ec51 0b10 	vmov	r0, r1, d0
 801fba2:	e7e7      	b.n	801fb74 <cos+0x2c>
 801fba4:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fba8:	ed9d 0b00 	vldr	d0, [sp]
 801fbac:	f000 fa9c 	bl	80200e8 <__kernel_sin>
 801fbb0:	ec53 2b10 	vmov	r2, r3, d0
 801fbb4:	4610      	mov	r0, r2
 801fbb6:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 801fbba:	e7db      	b.n	801fb74 <cos+0x2c>
 801fbbc:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fbc0:	ed9d 0b00 	vldr	d0, [sp]
 801fbc4:	f000 f9c8 	bl	801ff58 <__kernel_cos>
 801fbc8:	e7f2      	b.n	801fbb0 <cos+0x68>
 801fbca:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fbce:	ed9d 0b00 	vldr	d0, [sp]
 801fbd2:	2001      	movs	r0, #1
 801fbd4:	f000 fa88 	bl	80200e8 <__kernel_sin>
 801fbd8:	e7e1      	b.n	801fb9e <cos+0x56>
 801fbda:	bf00      	nop
 801fbdc:	f3af 8000 	nop.w
	...
 801fbe8:	3fe921fb 	.word	0x3fe921fb
 801fbec:	7fefffff 	.word	0x7fefffff

0801fbf0 <fabs>:
 801fbf0:	ec51 0b10 	vmov	r0, r1, d0
 801fbf4:	4602      	mov	r2, r0
 801fbf6:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 801fbfa:	ec43 2b10 	vmov	d0, r2, r3
 801fbfe:	4770      	bx	lr

0801fc00 <sin>:
 801fc00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fc02:	ec53 2b10 	vmov	r2, r3, d0
 801fc06:	4826      	ldr	r0, [pc, #152]	@ (801fca0 <sin+0xa0>)
 801fc08:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 801fc0c:	4281      	cmp	r1, r0
 801fc0e:	d807      	bhi.n	801fc20 <sin+0x20>
 801fc10:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 801fc98 <sin+0x98>
 801fc14:	2000      	movs	r0, #0
 801fc16:	b005      	add	sp, #20
 801fc18:	f85d eb04 	ldr.w	lr, [sp], #4
 801fc1c:	f000 ba64 	b.w	80200e8 <__kernel_sin>
 801fc20:	4820      	ldr	r0, [pc, #128]	@ (801fca4 <sin+0xa4>)
 801fc22:	4281      	cmp	r1, r0
 801fc24:	d908      	bls.n	801fc38 <sin+0x38>
 801fc26:	4610      	mov	r0, r2
 801fc28:	4619      	mov	r1, r3
 801fc2a:	f7e0 fb2d 	bl	8000288 <__aeabi_dsub>
 801fc2e:	ec41 0b10 	vmov	d0, r0, r1
 801fc32:	b005      	add	sp, #20
 801fc34:	f85d fb04 	ldr.w	pc, [sp], #4
 801fc38:	4668      	mov	r0, sp
 801fc3a:	f000 fbd9 	bl	80203f0 <__ieee754_rem_pio2>
 801fc3e:	f000 0003 	and.w	r0, r0, #3
 801fc42:	2801      	cmp	r0, #1
 801fc44:	d00c      	beq.n	801fc60 <sin+0x60>
 801fc46:	2802      	cmp	r0, #2
 801fc48:	d011      	beq.n	801fc6e <sin+0x6e>
 801fc4a:	b9e8      	cbnz	r0, 801fc88 <sin+0x88>
 801fc4c:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fc50:	ed9d 0b00 	vldr	d0, [sp]
 801fc54:	2001      	movs	r0, #1
 801fc56:	f000 fa47 	bl	80200e8 <__kernel_sin>
 801fc5a:	ec51 0b10 	vmov	r0, r1, d0
 801fc5e:	e7e6      	b.n	801fc2e <sin+0x2e>
 801fc60:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fc64:	ed9d 0b00 	vldr	d0, [sp]
 801fc68:	f000 f976 	bl	801ff58 <__kernel_cos>
 801fc6c:	e7f5      	b.n	801fc5a <sin+0x5a>
 801fc6e:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fc72:	ed9d 0b00 	vldr	d0, [sp]
 801fc76:	2001      	movs	r0, #1
 801fc78:	f000 fa36 	bl	80200e8 <__kernel_sin>
 801fc7c:	ec53 2b10 	vmov	r2, r3, d0
 801fc80:	4610      	mov	r0, r2
 801fc82:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 801fc86:	e7d2      	b.n	801fc2e <sin+0x2e>
 801fc88:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fc8c:	ed9d 0b00 	vldr	d0, [sp]
 801fc90:	f000 f962 	bl	801ff58 <__kernel_cos>
 801fc94:	e7f2      	b.n	801fc7c <sin+0x7c>
 801fc96:	bf00      	nop
	...
 801fca0:	3fe921fb 	.word	0x3fe921fb
 801fca4:	7fefffff 	.word	0x7fefffff

0801fca8 <__ieee754_sqrt>:
 801fca8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcac:	4a68      	ldr	r2, [pc, #416]	@ (801fe50 <__ieee754_sqrt+0x1a8>)
 801fcae:	ec55 4b10 	vmov	r4, r5, d0
 801fcb2:	43aa      	bics	r2, r5
 801fcb4:	462b      	mov	r3, r5
 801fcb6:	4621      	mov	r1, r4
 801fcb8:	d110      	bne.n	801fcdc <__ieee754_sqrt+0x34>
 801fcba:	4622      	mov	r2, r4
 801fcbc:	4620      	mov	r0, r4
 801fcbe:	4629      	mov	r1, r5
 801fcc0:	f7e0 fc9a 	bl	80005f8 <__aeabi_dmul>
 801fcc4:	4602      	mov	r2, r0
 801fcc6:	460b      	mov	r3, r1
 801fcc8:	4620      	mov	r0, r4
 801fcca:	4629      	mov	r1, r5
 801fccc:	f7e0 fade 	bl	800028c <__adddf3>
 801fcd0:	4604      	mov	r4, r0
 801fcd2:	460d      	mov	r5, r1
 801fcd4:	ec45 4b10 	vmov	d0, r4, r5
 801fcd8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fcdc:	2d00      	cmp	r5, #0
 801fcde:	dc0e      	bgt.n	801fcfe <__ieee754_sqrt+0x56>
 801fce0:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801fce4:	4322      	orrs	r2, r4
 801fce6:	d0f5      	beq.n	801fcd4 <__ieee754_sqrt+0x2c>
 801fce8:	b19d      	cbz	r5, 801fd12 <__ieee754_sqrt+0x6a>
 801fcea:	4622      	mov	r2, r4
 801fcec:	4620      	mov	r0, r4
 801fcee:	4629      	mov	r1, r5
 801fcf0:	f7e0 faca 	bl	8000288 <__aeabi_dsub>
 801fcf4:	4602      	mov	r2, r0
 801fcf6:	460b      	mov	r3, r1
 801fcf8:	f7e0 fda8 	bl	800084c <__aeabi_ddiv>
 801fcfc:	e7e8      	b.n	801fcd0 <__ieee754_sqrt+0x28>
 801fcfe:	152a      	asrs	r2, r5, #20
 801fd00:	d115      	bne.n	801fd2e <__ieee754_sqrt+0x86>
 801fd02:	2000      	movs	r0, #0
 801fd04:	e009      	b.n	801fd1a <__ieee754_sqrt+0x72>
 801fd06:	0acb      	lsrs	r3, r1, #11
 801fd08:	3a15      	subs	r2, #21
 801fd0a:	0549      	lsls	r1, r1, #21
 801fd0c:	2b00      	cmp	r3, #0
 801fd0e:	d0fa      	beq.n	801fd06 <__ieee754_sqrt+0x5e>
 801fd10:	e7f7      	b.n	801fd02 <__ieee754_sqrt+0x5a>
 801fd12:	462a      	mov	r2, r5
 801fd14:	e7fa      	b.n	801fd0c <__ieee754_sqrt+0x64>
 801fd16:	005b      	lsls	r3, r3, #1
 801fd18:	3001      	adds	r0, #1
 801fd1a:	02dc      	lsls	r4, r3, #11
 801fd1c:	d5fb      	bpl.n	801fd16 <__ieee754_sqrt+0x6e>
 801fd1e:	1e44      	subs	r4, r0, #1
 801fd20:	1b12      	subs	r2, r2, r4
 801fd22:	f1c0 0420 	rsb	r4, r0, #32
 801fd26:	fa21 f404 	lsr.w	r4, r1, r4
 801fd2a:	4323      	orrs	r3, r4
 801fd2c:	4081      	lsls	r1, r0
 801fd2e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801fd32:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 801fd36:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801fd3a:	07d2      	lsls	r2, r2, #31
 801fd3c:	bf5c      	itt	pl
 801fd3e:	005b      	lslpl	r3, r3, #1
 801fd40:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 801fd44:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801fd48:	bf58      	it	pl
 801fd4a:	0049      	lslpl	r1, r1, #1
 801fd4c:	2600      	movs	r6, #0
 801fd4e:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 801fd52:	106d      	asrs	r5, r5, #1
 801fd54:	0049      	lsls	r1, r1, #1
 801fd56:	2016      	movs	r0, #22
 801fd58:	4632      	mov	r2, r6
 801fd5a:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 801fd5e:	1917      	adds	r7, r2, r4
 801fd60:	429f      	cmp	r7, r3
 801fd62:	bfde      	ittt	le
 801fd64:	193a      	addle	r2, r7, r4
 801fd66:	1bdb      	suble	r3, r3, r7
 801fd68:	1936      	addle	r6, r6, r4
 801fd6a:	0fcf      	lsrs	r7, r1, #31
 801fd6c:	3801      	subs	r0, #1
 801fd6e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 801fd72:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801fd76:	ea4f 0454 	mov.w	r4, r4, lsr #1
 801fd7a:	d1f0      	bne.n	801fd5e <__ieee754_sqrt+0xb6>
 801fd7c:	4604      	mov	r4, r0
 801fd7e:	2720      	movs	r7, #32
 801fd80:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 801fd84:	429a      	cmp	r2, r3
 801fd86:	eb00 0e0c 	add.w	lr, r0, ip
 801fd8a:	db02      	blt.n	801fd92 <__ieee754_sqrt+0xea>
 801fd8c:	d113      	bne.n	801fdb6 <__ieee754_sqrt+0x10e>
 801fd8e:	458e      	cmp	lr, r1
 801fd90:	d811      	bhi.n	801fdb6 <__ieee754_sqrt+0x10e>
 801fd92:	f1be 0f00 	cmp.w	lr, #0
 801fd96:	eb0e 000c 	add.w	r0, lr, ip
 801fd9a:	da42      	bge.n	801fe22 <__ieee754_sqrt+0x17a>
 801fd9c:	2800      	cmp	r0, #0
 801fd9e:	db40      	blt.n	801fe22 <__ieee754_sqrt+0x17a>
 801fda0:	f102 0801 	add.w	r8, r2, #1
 801fda4:	1a9b      	subs	r3, r3, r2
 801fda6:	458e      	cmp	lr, r1
 801fda8:	bf88      	it	hi
 801fdaa:	f103 33ff 	addhi.w	r3, r3, #4294967295
 801fdae:	eba1 010e 	sub.w	r1, r1, lr
 801fdb2:	4464      	add	r4, ip
 801fdb4:	4642      	mov	r2, r8
 801fdb6:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 801fdba:	3f01      	subs	r7, #1
 801fdbc:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801fdc0:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801fdc4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801fdc8:	d1dc      	bne.n	801fd84 <__ieee754_sqrt+0xdc>
 801fdca:	4319      	orrs	r1, r3
 801fdcc:	d01b      	beq.n	801fe06 <__ieee754_sqrt+0x15e>
 801fdce:	f8df a084 	ldr.w	sl, [pc, #132]	@ 801fe54 <__ieee754_sqrt+0x1ac>
 801fdd2:	f8df b084 	ldr.w	fp, [pc, #132]	@ 801fe58 <__ieee754_sqrt+0x1b0>
 801fdd6:	e9da 0100 	ldrd	r0, r1, [sl]
 801fdda:	e9db 2300 	ldrd	r2, r3, [fp]
 801fdde:	f7e0 fa53 	bl	8000288 <__aeabi_dsub>
 801fde2:	e9da 8900 	ldrd	r8, r9, [sl]
 801fde6:	4602      	mov	r2, r0
 801fde8:	460b      	mov	r3, r1
 801fdea:	4640      	mov	r0, r8
 801fdec:	4649      	mov	r1, r9
 801fdee:	f7e0 fe7f 	bl	8000af0 <__aeabi_dcmple>
 801fdf2:	b140      	cbz	r0, 801fe06 <__ieee754_sqrt+0x15e>
 801fdf4:	f1b4 3fff 	cmp.w	r4, #4294967295
 801fdf8:	e9da 0100 	ldrd	r0, r1, [sl]
 801fdfc:	e9db 2300 	ldrd	r2, r3, [fp]
 801fe00:	d111      	bne.n	801fe26 <__ieee754_sqrt+0x17e>
 801fe02:	3601      	adds	r6, #1
 801fe04:	463c      	mov	r4, r7
 801fe06:	1072      	asrs	r2, r6, #1
 801fe08:	0863      	lsrs	r3, r4, #1
 801fe0a:	07f1      	lsls	r1, r6, #31
 801fe0c:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 801fe10:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 801fe14:	bf48      	it	mi
 801fe16:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 801fe1a:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 801fe1e:	4618      	mov	r0, r3
 801fe20:	e756      	b.n	801fcd0 <__ieee754_sqrt+0x28>
 801fe22:	4690      	mov	r8, r2
 801fe24:	e7be      	b.n	801fda4 <__ieee754_sqrt+0xfc>
 801fe26:	f7e0 fa31 	bl	800028c <__adddf3>
 801fe2a:	e9da 8900 	ldrd	r8, r9, [sl]
 801fe2e:	4602      	mov	r2, r0
 801fe30:	460b      	mov	r3, r1
 801fe32:	4640      	mov	r0, r8
 801fe34:	4649      	mov	r1, r9
 801fe36:	f7e0 fe51 	bl	8000adc <__aeabi_dcmplt>
 801fe3a:	b120      	cbz	r0, 801fe46 <__ieee754_sqrt+0x19e>
 801fe3c:	1ca0      	adds	r0, r4, #2
 801fe3e:	bf08      	it	eq
 801fe40:	3601      	addeq	r6, #1
 801fe42:	3402      	adds	r4, #2
 801fe44:	e7df      	b.n	801fe06 <__ieee754_sqrt+0x15e>
 801fe46:	1c63      	adds	r3, r4, #1
 801fe48:	f023 0401 	bic.w	r4, r3, #1
 801fe4c:	e7db      	b.n	801fe06 <__ieee754_sqrt+0x15e>
 801fe4e:	bf00      	nop
 801fe50:	7ff00000 	.word	0x7ff00000
 801fe54:	200007d0 	.word	0x200007d0
 801fe58:	200007c8 	.word	0x200007c8
 801fe5c:	00000000 	.word	0x00000000

0801fe60 <floor>:
 801fe60:	ec51 0b10 	vmov	r0, r1, d0
 801fe64:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801fe68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fe6c:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 801fe70:	2e13      	cmp	r6, #19
 801fe72:	460c      	mov	r4, r1
 801fe74:	4605      	mov	r5, r0
 801fe76:	4680      	mov	r8, r0
 801fe78:	dc34      	bgt.n	801fee4 <floor+0x84>
 801fe7a:	2e00      	cmp	r6, #0
 801fe7c:	da17      	bge.n	801feae <floor+0x4e>
 801fe7e:	a332      	add	r3, pc, #200	@ (adr r3, 801ff48 <floor+0xe8>)
 801fe80:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fe84:	f7e0 fa02 	bl	800028c <__adddf3>
 801fe88:	2200      	movs	r2, #0
 801fe8a:	2300      	movs	r3, #0
 801fe8c:	f7e0 fe44 	bl	8000b18 <__aeabi_dcmpgt>
 801fe90:	b150      	cbz	r0, 801fea8 <floor+0x48>
 801fe92:	2c00      	cmp	r4, #0
 801fe94:	da55      	bge.n	801ff42 <floor+0xe2>
 801fe96:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 801fe9a:	432c      	orrs	r4, r5
 801fe9c:	2500      	movs	r5, #0
 801fe9e:	42ac      	cmp	r4, r5
 801fea0:	4c2b      	ldr	r4, [pc, #172]	@ (801ff50 <floor+0xf0>)
 801fea2:	bf08      	it	eq
 801fea4:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 801fea8:	4621      	mov	r1, r4
 801feaa:	4628      	mov	r0, r5
 801feac:	e023      	b.n	801fef6 <floor+0x96>
 801feae:	4f29      	ldr	r7, [pc, #164]	@ (801ff54 <floor+0xf4>)
 801feb0:	4137      	asrs	r7, r6
 801feb2:	ea01 0307 	and.w	r3, r1, r7
 801feb6:	4303      	orrs	r3, r0
 801feb8:	d01d      	beq.n	801fef6 <floor+0x96>
 801feba:	a323      	add	r3, pc, #140	@ (adr r3, 801ff48 <floor+0xe8>)
 801febc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fec0:	f7e0 f9e4 	bl	800028c <__adddf3>
 801fec4:	2200      	movs	r2, #0
 801fec6:	2300      	movs	r3, #0
 801fec8:	f7e0 fe26 	bl	8000b18 <__aeabi_dcmpgt>
 801fecc:	2800      	cmp	r0, #0
 801fece:	d0eb      	beq.n	801fea8 <floor+0x48>
 801fed0:	2c00      	cmp	r4, #0
 801fed2:	bfbe      	ittt	lt
 801fed4:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 801fed8:	4133      	asrlt	r3, r6
 801feda:	18e4      	addlt	r4, r4, r3
 801fedc:	ea24 0407 	bic.w	r4, r4, r7
 801fee0:	2500      	movs	r5, #0
 801fee2:	e7e1      	b.n	801fea8 <floor+0x48>
 801fee4:	2e33      	cmp	r6, #51	@ 0x33
 801fee6:	dd0a      	ble.n	801fefe <floor+0x9e>
 801fee8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801feec:	d103      	bne.n	801fef6 <floor+0x96>
 801feee:	4602      	mov	r2, r0
 801fef0:	460b      	mov	r3, r1
 801fef2:	f7e0 f9cb 	bl	800028c <__adddf3>
 801fef6:	ec41 0b10 	vmov	d0, r0, r1
 801fefa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fefe:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 801ff02:	f04f 37ff 	mov.w	r7, #4294967295
 801ff06:	40df      	lsrs	r7, r3
 801ff08:	4207      	tst	r7, r0
 801ff0a:	d0f4      	beq.n	801fef6 <floor+0x96>
 801ff0c:	a30e      	add	r3, pc, #56	@ (adr r3, 801ff48 <floor+0xe8>)
 801ff0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff12:	f7e0 f9bb 	bl	800028c <__adddf3>
 801ff16:	2200      	movs	r2, #0
 801ff18:	2300      	movs	r3, #0
 801ff1a:	f7e0 fdfd 	bl	8000b18 <__aeabi_dcmpgt>
 801ff1e:	2800      	cmp	r0, #0
 801ff20:	d0c2      	beq.n	801fea8 <floor+0x48>
 801ff22:	2c00      	cmp	r4, #0
 801ff24:	da0a      	bge.n	801ff3c <floor+0xdc>
 801ff26:	2e14      	cmp	r6, #20
 801ff28:	d101      	bne.n	801ff2e <floor+0xce>
 801ff2a:	3401      	adds	r4, #1
 801ff2c:	e006      	b.n	801ff3c <floor+0xdc>
 801ff2e:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 801ff32:	2301      	movs	r3, #1
 801ff34:	40b3      	lsls	r3, r6
 801ff36:	441d      	add	r5, r3
 801ff38:	4545      	cmp	r5, r8
 801ff3a:	d3f6      	bcc.n	801ff2a <floor+0xca>
 801ff3c:	ea25 0507 	bic.w	r5, r5, r7
 801ff40:	e7b2      	b.n	801fea8 <floor+0x48>
 801ff42:	2500      	movs	r5, #0
 801ff44:	462c      	mov	r4, r5
 801ff46:	e7af      	b.n	801fea8 <floor+0x48>
 801ff48:	8800759c 	.word	0x8800759c
 801ff4c:	7e37e43c 	.word	0x7e37e43c
 801ff50:	bff00000 	.word	0xbff00000
 801ff54:	000fffff 	.word	0x000fffff

0801ff58 <__kernel_cos>:
 801ff58:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff5c:	ec57 6b10 	vmov	r6, r7, d0
 801ff60:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 801ff64:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 801ff68:	ed8d 1b00 	vstr	d1, [sp]
 801ff6c:	d206      	bcs.n	801ff7c <__kernel_cos+0x24>
 801ff6e:	4630      	mov	r0, r6
 801ff70:	4639      	mov	r1, r7
 801ff72:	f7e0 fdf1 	bl	8000b58 <__aeabi_d2iz>
 801ff76:	2800      	cmp	r0, #0
 801ff78:	f000 8088 	beq.w	802008c <__kernel_cos+0x134>
 801ff7c:	4632      	mov	r2, r6
 801ff7e:	463b      	mov	r3, r7
 801ff80:	4630      	mov	r0, r6
 801ff82:	4639      	mov	r1, r7
 801ff84:	f7e0 fb38 	bl	80005f8 <__aeabi_dmul>
 801ff88:	4b51      	ldr	r3, [pc, #324]	@ (80200d0 <__kernel_cos+0x178>)
 801ff8a:	2200      	movs	r2, #0
 801ff8c:	4604      	mov	r4, r0
 801ff8e:	460d      	mov	r5, r1
 801ff90:	f7e0 fb32 	bl	80005f8 <__aeabi_dmul>
 801ff94:	a340      	add	r3, pc, #256	@ (adr r3, 8020098 <__kernel_cos+0x140>)
 801ff96:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff9a:	4682      	mov	sl, r0
 801ff9c:	468b      	mov	fp, r1
 801ff9e:	4620      	mov	r0, r4
 801ffa0:	4629      	mov	r1, r5
 801ffa2:	f7e0 fb29 	bl	80005f8 <__aeabi_dmul>
 801ffa6:	a33e      	add	r3, pc, #248	@ (adr r3, 80200a0 <__kernel_cos+0x148>)
 801ffa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ffac:	f7e0 f96e 	bl	800028c <__adddf3>
 801ffb0:	4622      	mov	r2, r4
 801ffb2:	462b      	mov	r3, r5
 801ffb4:	f7e0 fb20 	bl	80005f8 <__aeabi_dmul>
 801ffb8:	a33b      	add	r3, pc, #236	@ (adr r3, 80200a8 <__kernel_cos+0x150>)
 801ffba:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ffbe:	f7e0 f963 	bl	8000288 <__aeabi_dsub>
 801ffc2:	4622      	mov	r2, r4
 801ffc4:	462b      	mov	r3, r5
 801ffc6:	f7e0 fb17 	bl	80005f8 <__aeabi_dmul>
 801ffca:	a339      	add	r3, pc, #228	@ (adr r3, 80200b0 <__kernel_cos+0x158>)
 801ffcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ffd0:	f7e0 f95c 	bl	800028c <__adddf3>
 801ffd4:	4622      	mov	r2, r4
 801ffd6:	462b      	mov	r3, r5
 801ffd8:	f7e0 fb0e 	bl	80005f8 <__aeabi_dmul>
 801ffdc:	a336      	add	r3, pc, #216	@ (adr r3, 80200b8 <__kernel_cos+0x160>)
 801ffde:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ffe2:	f7e0 f951 	bl	8000288 <__aeabi_dsub>
 801ffe6:	4622      	mov	r2, r4
 801ffe8:	462b      	mov	r3, r5
 801ffea:	f7e0 fb05 	bl	80005f8 <__aeabi_dmul>
 801ffee:	a334      	add	r3, pc, #208	@ (adr r3, 80200c0 <__kernel_cos+0x168>)
 801fff0:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fff4:	f7e0 f94a 	bl	800028c <__adddf3>
 801fff8:	4622      	mov	r2, r4
 801fffa:	462b      	mov	r3, r5
 801fffc:	f7e0 fafc 	bl	80005f8 <__aeabi_dmul>
 8020000:	4622      	mov	r2, r4
 8020002:	462b      	mov	r3, r5
 8020004:	f7e0 faf8 	bl	80005f8 <__aeabi_dmul>
 8020008:	e9dd 2300 	ldrd	r2, r3, [sp]
 802000c:	4604      	mov	r4, r0
 802000e:	460d      	mov	r5, r1
 8020010:	4630      	mov	r0, r6
 8020012:	4639      	mov	r1, r7
 8020014:	f7e0 faf0 	bl	80005f8 <__aeabi_dmul>
 8020018:	460b      	mov	r3, r1
 802001a:	4602      	mov	r2, r0
 802001c:	4629      	mov	r1, r5
 802001e:	4620      	mov	r0, r4
 8020020:	f7e0 f932 	bl	8000288 <__aeabi_dsub>
 8020024:	4b2b      	ldr	r3, [pc, #172]	@ (80200d4 <__kernel_cos+0x17c>)
 8020026:	4598      	cmp	r8, r3
 8020028:	4606      	mov	r6, r0
 802002a:	460f      	mov	r7, r1
 802002c:	d810      	bhi.n	8020050 <__kernel_cos+0xf8>
 802002e:	4602      	mov	r2, r0
 8020030:	460b      	mov	r3, r1
 8020032:	4650      	mov	r0, sl
 8020034:	4659      	mov	r1, fp
 8020036:	f7e0 f927 	bl	8000288 <__aeabi_dsub>
 802003a:	460b      	mov	r3, r1
 802003c:	4926      	ldr	r1, [pc, #152]	@ (80200d8 <__kernel_cos+0x180>)
 802003e:	4602      	mov	r2, r0
 8020040:	2000      	movs	r0, #0
 8020042:	f7e0 f921 	bl	8000288 <__aeabi_dsub>
 8020046:	ec41 0b10 	vmov	d0, r0, r1
 802004a:	b003      	add	sp, #12
 802004c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020050:	4b22      	ldr	r3, [pc, #136]	@ (80200dc <__kernel_cos+0x184>)
 8020052:	4921      	ldr	r1, [pc, #132]	@ (80200d8 <__kernel_cos+0x180>)
 8020054:	4598      	cmp	r8, r3
 8020056:	bf8c      	ite	hi
 8020058:	4d21      	ldrhi	r5, [pc, #132]	@ (80200e0 <__kernel_cos+0x188>)
 802005a:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 802005e:	2400      	movs	r4, #0
 8020060:	4622      	mov	r2, r4
 8020062:	462b      	mov	r3, r5
 8020064:	2000      	movs	r0, #0
 8020066:	f7e0 f90f 	bl	8000288 <__aeabi_dsub>
 802006a:	4622      	mov	r2, r4
 802006c:	4680      	mov	r8, r0
 802006e:	4689      	mov	r9, r1
 8020070:	462b      	mov	r3, r5
 8020072:	4650      	mov	r0, sl
 8020074:	4659      	mov	r1, fp
 8020076:	f7e0 f907 	bl	8000288 <__aeabi_dsub>
 802007a:	4632      	mov	r2, r6
 802007c:	463b      	mov	r3, r7
 802007e:	f7e0 f903 	bl	8000288 <__aeabi_dsub>
 8020082:	4602      	mov	r2, r0
 8020084:	460b      	mov	r3, r1
 8020086:	4640      	mov	r0, r8
 8020088:	4649      	mov	r1, r9
 802008a:	e7da      	b.n	8020042 <__kernel_cos+0xea>
 802008c:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 80200c8 <__kernel_cos+0x170>
 8020090:	e7db      	b.n	802004a <__kernel_cos+0xf2>
 8020092:	bf00      	nop
 8020094:	f3af 8000 	nop.w
 8020098:	be8838d4 	.word	0xbe8838d4
 802009c:	bda8fae9 	.word	0xbda8fae9
 80200a0:	bdb4b1c4 	.word	0xbdb4b1c4
 80200a4:	3e21ee9e 	.word	0x3e21ee9e
 80200a8:	809c52ad 	.word	0x809c52ad
 80200ac:	3e927e4f 	.word	0x3e927e4f
 80200b0:	19cb1590 	.word	0x19cb1590
 80200b4:	3efa01a0 	.word	0x3efa01a0
 80200b8:	16c15177 	.word	0x16c15177
 80200bc:	3f56c16c 	.word	0x3f56c16c
 80200c0:	5555554c 	.word	0x5555554c
 80200c4:	3fa55555 	.word	0x3fa55555
 80200c8:	00000000 	.word	0x00000000
 80200cc:	3ff00000 	.word	0x3ff00000
 80200d0:	3fe00000 	.word	0x3fe00000
 80200d4:	3fd33332 	.word	0x3fd33332
 80200d8:	3ff00000 	.word	0x3ff00000
 80200dc:	3fe90000 	.word	0x3fe90000
 80200e0:	3fd20000 	.word	0x3fd20000
 80200e4:	00000000 	.word	0x00000000

080200e8 <__kernel_sin>:
 80200e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200ec:	ec55 4b10 	vmov	r4, r5, d0
 80200f0:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 80200f4:	b085      	sub	sp, #20
 80200f6:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 80200fa:	ed8d 1b02 	vstr	d1, [sp, #8]
 80200fe:	4680      	mov	r8, r0
 8020100:	d205      	bcs.n	802010e <__kernel_sin+0x26>
 8020102:	4620      	mov	r0, r4
 8020104:	4629      	mov	r1, r5
 8020106:	f7e0 fd27 	bl	8000b58 <__aeabi_d2iz>
 802010a:	2800      	cmp	r0, #0
 802010c:	d052      	beq.n	80201b4 <__kernel_sin+0xcc>
 802010e:	4622      	mov	r2, r4
 8020110:	462b      	mov	r3, r5
 8020112:	4620      	mov	r0, r4
 8020114:	4629      	mov	r1, r5
 8020116:	f7e0 fa6f 	bl	80005f8 <__aeabi_dmul>
 802011a:	4682      	mov	sl, r0
 802011c:	468b      	mov	fp, r1
 802011e:	4602      	mov	r2, r0
 8020120:	460b      	mov	r3, r1
 8020122:	4620      	mov	r0, r4
 8020124:	4629      	mov	r1, r5
 8020126:	f7e0 fa67 	bl	80005f8 <__aeabi_dmul>
 802012a:	a342      	add	r3, pc, #264	@ (adr r3, 8020234 <__kernel_sin+0x14c>)
 802012c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020130:	e9cd 0100 	strd	r0, r1, [sp]
 8020134:	4650      	mov	r0, sl
 8020136:	4659      	mov	r1, fp
 8020138:	f7e0 fa5e 	bl	80005f8 <__aeabi_dmul>
 802013c:	a33f      	add	r3, pc, #252	@ (adr r3, 802023c <__kernel_sin+0x154>)
 802013e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020142:	f7e0 f8a1 	bl	8000288 <__aeabi_dsub>
 8020146:	4652      	mov	r2, sl
 8020148:	465b      	mov	r3, fp
 802014a:	f7e0 fa55 	bl	80005f8 <__aeabi_dmul>
 802014e:	a33d      	add	r3, pc, #244	@ (adr r3, 8020244 <__kernel_sin+0x15c>)
 8020150:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020154:	f7e0 f89a 	bl	800028c <__adddf3>
 8020158:	4652      	mov	r2, sl
 802015a:	465b      	mov	r3, fp
 802015c:	f7e0 fa4c 	bl	80005f8 <__aeabi_dmul>
 8020160:	a33a      	add	r3, pc, #232	@ (adr r3, 802024c <__kernel_sin+0x164>)
 8020162:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020166:	f7e0 f88f 	bl	8000288 <__aeabi_dsub>
 802016a:	4652      	mov	r2, sl
 802016c:	465b      	mov	r3, fp
 802016e:	f7e0 fa43 	bl	80005f8 <__aeabi_dmul>
 8020172:	a338      	add	r3, pc, #224	@ (adr r3, 8020254 <__kernel_sin+0x16c>)
 8020174:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020178:	f7e0 f888 	bl	800028c <__adddf3>
 802017c:	4606      	mov	r6, r0
 802017e:	460f      	mov	r7, r1
 8020180:	f1b8 0f00 	cmp.w	r8, #0
 8020184:	d11b      	bne.n	80201be <__kernel_sin+0xd6>
 8020186:	4602      	mov	r2, r0
 8020188:	460b      	mov	r3, r1
 802018a:	4650      	mov	r0, sl
 802018c:	4659      	mov	r1, fp
 802018e:	f7e0 fa33 	bl	80005f8 <__aeabi_dmul>
 8020192:	a325      	add	r3, pc, #148	@ (adr r3, 8020228 <__kernel_sin+0x140>)
 8020194:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020198:	f7e0 f876 	bl	8000288 <__aeabi_dsub>
 802019c:	e9dd 2300 	ldrd	r2, r3, [sp]
 80201a0:	f7e0 fa2a 	bl	80005f8 <__aeabi_dmul>
 80201a4:	4602      	mov	r2, r0
 80201a6:	460b      	mov	r3, r1
 80201a8:	4620      	mov	r0, r4
 80201aa:	4629      	mov	r1, r5
 80201ac:	f7e0 f86e 	bl	800028c <__adddf3>
 80201b0:	4604      	mov	r4, r0
 80201b2:	460d      	mov	r5, r1
 80201b4:	ec45 4b10 	vmov	d0, r4, r5
 80201b8:	b005      	add	sp, #20
 80201ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201be:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80201c2:	4b1b      	ldr	r3, [pc, #108]	@ (8020230 <__kernel_sin+0x148>)
 80201c4:	2200      	movs	r2, #0
 80201c6:	f7e0 fa17 	bl	80005f8 <__aeabi_dmul>
 80201ca:	4632      	mov	r2, r6
 80201cc:	4680      	mov	r8, r0
 80201ce:	4689      	mov	r9, r1
 80201d0:	463b      	mov	r3, r7
 80201d2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80201d6:	f7e0 fa0f 	bl	80005f8 <__aeabi_dmul>
 80201da:	4602      	mov	r2, r0
 80201dc:	460b      	mov	r3, r1
 80201de:	4640      	mov	r0, r8
 80201e0:	4649      	mov	r1, r9
 80201e2:	f7e0 f851 	bl	8000288 <__aeabi_dsub>
 80201e6:	4652      	mov	r2, sl
 80201e8:	465b      	mov	r3, fp
 80201ea:	f7e0 fa05 	bl	80005f8 <__aeabi_dmul>
 80201ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80201f2:	f7e0 f849 	bl	8000288 <__aeabi_dsub>
 80201f6:	a30c      	add	r3, pc, #48	@ (adr r3, 8020228 <__kernel_sin+0x140>)
 80201f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80201fc:	4606      	mov	r6, r0
 80201fe:	460f      	mov	r7, r1
 8020200:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020204:	f7e0 f9f8 	bl	80005f8 <__aeabi_dmul>
 8020208:	4602      	mov	r2, r0
 802020a:	460b      	mov	r3, r1
 802020c:	4630      	mov	r0, r6
 802020e:	4639      	mov	r1, r7
 8020210:	f7e0 f83c 	bl	800028c <__adddf3>
 8020214:	4602      	mov	r2, r0
 8020216:	460b      	mov	r3, r1
 8020218:	4620      	mov	r0, r4
 802021a:	4629      	mov	r1, r5
 802021c:	f7e0 f834 	bl	8000288 <__aeabi_dsub>
 8020220:	e7c6      	b.n	80201b0 <__kernel_sin+0xc8>
 8020222:	bf00      	nop
 8020224:	f3af 8000 	nop.w
 8020228:	55555549 	.word	0x55555549
 802022c:	3fc55555 	.word	0x3fc55555
 8020230:	3fe00000 	.word	0x3fe00000
 8020234:	5acfd57c 	.word	0x5acfd57c
 8020238:	3de5d93a 	.word	0x3de5d93a
 802023c:	8a2b9ceb 	.word	0x8a2b9ceb
 8020240:	3e5ae5e6 	.word	0x3e5ae5e6
 8020244:	57b1fe7d 	.word	0x57b1fe7d
 8020248:	3ec71de3 	.word	0x3ec71de3
 802024c:	19c161d5 	.word	0x19c161d5
 8020250:	3f2a01a0 	.word	0x3f2a01a0
 8020254:	1110f8a6 	.word	0x1110f8a6
 8020258:	3f811111 	.word	0x3f811111
 802025c:	00000000 	.word	0x00000000

08020260 <__ieee754_atan2>:
 8020260:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020264:	ec57 6b11 	vmov	r6, r7, d1
 8020268:	4273      	negs	r3, r6
 802026a:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 80203e8 <__ieee754_atan2+0x188>
 802026e:	f027 4200 	bic.w	r2, r7, #2147483648	@ 0x80000000
 8020272:	4333      	orrs	r3, r6
 8020274:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8020278:	4543      	cmp	r3, r8
 802027a:	ec51 0b10 	vmov	r0, r1, d0
 802027e:	4635      	mov	r5, r6
 8020280:	d809      	bhi.n	8020296 <__ieee754_atan2+0x36>
 8020282:	4244      	negs	r4, r0
 8020284:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8020288:	4304      	orrs	r4, r0
 802028a:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 802028e:	4544      	cmp	r4, r8
 8020290:	468e      	mov	lr, r1
 8020292:	4681      	mov	r9, r0
 8020294:	d907      	bls.n	80202a6 <__ieee754_atan2+0x46>
 8020296:	4632      	mov	r2, r6
 8020298:	463b      	mov	r3, r7
 802029a:	f7df fff7 	bl	800028c <__adddf3>
 802029e:	ec41 0b10 	vmov	d0, r0, r1
 80202a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80202a6:	f107 4440 	add.w	r4, r7, #3221225472	@ 0xc0000000
 80202aa:	f504 1480 	add.w	r4, r4, #1048576	@ 0x100000
 80202ae:	4334      	orrs	r4, r6
 80202b0:	d103      	bne.n	80202ba <__ieee754_atan2+0x5a>
 80202b2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80202b6:	f7ff baaf 	b.w	801f818 <atan>
 80202ba:	17bc      	asrs	r4, r7, #30
 80202bc:	f004 0402 	and.w	r4, r4, #2
 80202c0:	ea53 0909 	orrs.w	r9, r3, r9
 80202c4:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 80202c8:	d107      	bne.n	80202da <__ieee754_atan2+0x7a>
 80202ca:	2c02      	cmp	r4, #2
 80202cc:	d05f      	beq.n	802038e <__ieee754_atan2+0x12e>
 80202ce:	2c03      	cmp	r4, #3
 80202d0:	d1e5      	bne.n	802029e <__ieee754_atan2+0x3e>
 80202d2:	a141      	add	r1, pc, #260	@ (adr r1, 80203d8 <__ieee754_atan2+0x178>)
 80202d4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80202d8:	e7e1      	b.n	802029e <__ieee754_atan2+0x3e>
 80202da:	4315      	orrs	r5, r2
 80202dc:	d106      	bne.n	80202ec <__ieee754_atan2+0x8c>
 80202de:	f1be 0f00 	cmp.w	lr, #0
 80202e2:	da5f      	bge.n	80203a4 <__ieee754_atan2+0x144>
 80202e4:	a13e      	add	r1, pc, #248	@ (adr r1, 80203e0 <__ieee754_atan2+0x180>)
 80202e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80202ea:	e7d8      	b.n	802029e <__ieee754_atan2+0x3e>
 80202ec:	4542      	cmp	r2, r8
 80202ee:	d10f      	bne.n	8020310 <__ieee754_atan2+0xb0>
 80202f0:	4293      	cmp	r3, r2
 80202f2:	f104 34ff 	add.w	r4, r4, #4294967295
 80202f6:	d107      	bne.n	8020308 <__ieee754_atan2+0xa8>
 80202f8:	2c02      	cmp	r4, #2
 80202fa:	d84c      	bhi.n	8020396 <__ieee754_atan2+0x136>
 80202fc:	4b34      	ldr	r3, [pc, #208]	@ (80203d0 <__ieee754_atan2+0x170>)
 80202fe:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020302:	e9d3 0100 	ldrd	r0, r1, [r3]
 8020306:	e7ca      	b.n	802029e <__ieee754_atan2+0x3e>
 8020308:	2c02      	cmp	r4, #2
 802030a:	d848      	bhi.n	802039e <__ieee754_atan2+0x13e>
 802030c:	4b31      	ldr	r3, [pc, #196]	@ (80203d4 <__ieee754_atan2+0x174>)
 802030e:	e7f6      	b.n	80202fe <__ieee754_atan2+0x9e>
 8020310:	4543      	cmp	r3, r8
 8020312:	d0e4      	beq.n	80202de <__ieee754_atan2+0x7e>
 8020314:	1a9b      	subs	r3, r3, r2
 8020316:	f1b3 7f74 	cmp.w	r3, #63963136	@ 0x3d00000
 802031a:	ea4f 5223 	mov.w	r2, r3, asr #20
 802031e:	da1e      	bge.n	802035e <__ieee754_atan2+0xfe>
 8020320:	2f00      	cmp	r7, #0
 8020322:	da01      	bge.n	8020328 <__ieee754_atan2+0xc8>
 8020324:	323c      	adds	r2, #60	@ 0x3c
 8020326:	db1e      	blt.n	8020366 <__ieee754_atan2+0x106>
 8020328:	4632      	mov	r2, r6
 802032a:	463b      	mov	r3, r7
 802032c:	f7e0 fa8e 	bl	800084c <__aeabi_ddiv>
 8020330:	ec41 0b10 	vmov	d0, r0, r1
 8020334:	f7ff fc5c 	bl	801fbf0 <fabs>
 8020338:	f7ff fa6e 	bl	801f818 <atan>
 802033c:	ec51 0b10 	vmov	r0, r1, d0
 8020340:	2c01      	cmp	r4, #1
 8020342:	d013      	beq.n	802036c <__ieee754_atan2+0x10c>
 8020344:	2c02      	cmp	r4, #2
 8020346:	d015      	beq.n	8020374 <__ieee754_atan2+0x114>
 8020348:	2c00      	cmp	r4, #0
 802034a:	d0a8      	beq.n	802029e <__ieee754_atan2+0x3e>
 802034c:	a318      	add	r3, pc, #96	@ (adr r3, 80203b0 <__ieee754_atan2+0x150>)
 802034e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020352:	f7df ff99 	bl	8000288 <__aeabi_dsub>
 8020356:	a318      	add	r3, pc, #96	@ (adr r3, 80203b8 <__ieee754_atan2+0x158>)
 8020358:	e9d3 2300 	ldrd	r2, r3, [r3]
 802035c:	e014      	b.n	8020388 <__ieee754_atan2+0x128>
 802035e:	a118      	add	r1, pc, #96	@ (adr r1, 80203c0 <__ieee754_atan2+0x160>)
 8020360:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020364:	e7ec      	b.n	8020340 <__ieee754_atan2+0xe0>
 8020366:	2000      	movs	r0, #0
 8020368:	2100      	movs	r1, #0
 802036a:	e7e9      	b.n	8020340 <__ieee754_atan2+0xe0>
 802036c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020370:	4619      	mov	r1, r3
 8020372:	e794      	b.n	802029e <__ieee754_atan2+0x3e>
 8020374:	a30e      	add	r3, pc, #56	@ (adr r3, 80203b0 <__ieee754_atan2+0x150>)
 8020376:	e9d3 2300 	ldrd	r2, r3, [r3]
 802037a:	f7df ff85 	bl	8000288 <__aeabi_dsub>
 802037e:	4602      	mov	r2, r0
 8020380:	460b      	mov	r3, r1
 8020382:	a10d      	add	r1, pc, #52	@ (adr r1, 80203b8 <__ieee754_atan2+0x158>)
 8020384:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020388:	f7df ff7e 	bl	8000288 <__aeabi_dsub>
 802038c:	e787      	b.n	802029e <__ieee754_atan2+0x3e>
 802038e:	a10a      	add	r1, pc, #40	@ (adr r1, 80203b8 <__ieee754_atan2+0x158>)
 8020390:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020394:	e783      	b.n	802029e <__ieee754_atan2+0x3e>
 8020396:	a10c      	add	r1, pc, #48	@ (adr r1, 80203c8 <__ieee754_atan2+0x168>)
 8020398:	e9d1 0100 	ldrd	r0, r1, [r1]
 802039c:	e77f      	b.n	802029e <__ieee754_atan2+0x3e>
 802039e:	2000      	movs	r0, #0
 80203a0:	2100      	movs	r1, #0
 80203a2:	e77c      	b.n	802029e <__ieee754_atan2+0x3e>
 80203a4:	a106      	add	r1, pc, #24	@ (adr r1, 80203c0 <__ieee754_atan2+0x160>)
 80203a6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80203aa:	e778      	b.n	802029e <__ieee754_atan2+0x3e>
 80203ac:	f3af 8000 	nop.w
 80203b0:	33145c07 	.word	0x33145c07
 80203b4:	3ca1a626 	.word	0x3ca1a626
 80203b8:	54442d18 	.word	0x54442d18
 80203bc:	400921fb 	.word	0x400921fb
 80203c0:	54442d18 	.word	0x54442d18
 80203c4:	3ff921fb 	.word	0x3ff921fb
 80203c8:	54442d18 	.word	0x54442d18
 80203cc:	3fe921fb 	.word	0x3fe921fb
 80203d0:	08021b08 	.word	0x08021b08
 80203d4:	08021af0 	.word	0x08021af0
 80203d8:	54442d18 	.word	0x54442d18
 80203dc:	c00921fb 	.word	0xc00921fb
 80203e0:	54442d18 	.word	0x54442d18
 80203e4:	bff921fb 	.word	0xbff921fb
 80203e8:	7ff00000 	.word	0x7ff00000
 80203ec:	00000000 	.word	0x00000000

080203f0 <__ieee754_rem_pio2>:
 80203f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80203f4:	ec57 6b10 	vmov	r6, r7, d0
 80203f8:	4bc5      	ldr	r3, [pc, #788]	@ (8020710 <__ieee754_rem_pio2+0x320>)
 80203fa:	b08d      	sub	sp, #52	@ 0x34
 80203fc:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8020400:	4598      	cmp	r8, r3
 8020402:	4604      	mov	r4, r0
 8020404:	9704      	str	r7, [sp, #16]
 8020406:	d807      	bhi.n	8020418 <__ieee754_rem_pio2+0x28>
 8020408:	2200      	movs	r2, #0
 802040a:	2300      	movs	r3, #0
 802040c:	ed80 0b00 	vstr	d0, [r0]
 8020410:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8020414:	2500      	movs	r5, #0
 8020416:	e028      	b.n	802046a <__ieee754_rem_pio2+0x7a>
 8020418:	4bbe      	ldr	r3, [pc, #760]	@ (8020714 <__ieee754_rem_pio2+0x324>)
 802041a:	4598      	cmp	r8, r3
 802041c:	d878      	bhi.n	8020510 <__ieee754_rem_pio2+0x120>
 802041e:	9b04      	ldr	r3, [sp, #16]
 8020420:	4dbd      	ldr	r5, [pc, #756]	@ (8020718 <__ieee754_rem_pio2+0x328>)
 8020422:	2b00      	cmp	r3, #0
 8020424:	4630      	mov	r0, r6
 8020426:	a3ac      	add	r3, pc, #688	@ (adr r3, 80206d8 <__ieee754_rem_pio2+0x2e8>)
 8020428:	e9d3 2300 	ldrd	r2, r3, [r3]
 802042c:	4639      	mov	r1, r7
 802042e:	dd38      	ble.n	80204a2 <__ieee754_rem_pio2+0xb2>
 8020430:	f7df ff2a 	bl	8000288 <__aeabi_dsub>
 8020434:	45a8      	cmp	r8, r5
 8020436:	4606      	mov	r6, r0
 8020438:	460f      	mov	r7, r1
 802043a:	d01a      	beq.n	8020472 <__ieee754_rem_pio2+0x82>
 802043c:	a3a8      	add	r3, pc, #672	@ (adr r3, 80206e0 <__ieee754_rem_pio2+0x2f0>)
 802043e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020442:	f7df ff21 	bl	8000288 <__aeabi_dsub>
 8020446:	4602      	mov	r2, r0
 8020448:	460b      	mov	r3, r1
 802044a:	4680      	mov	r8, r0
 802044c:	4689      	mov	r9, r1
 802044e:	4630      	mov	r0, r6
 8020450:	4639      	mov	r1, r7
 8020452:	f7df ff19 	bl	8000288 <__aeabi_dsub>
 8020456:	a3a2      	add	r3, pc, #648	@ (adr r3, 80206e0 <__ieee754_rem_pio2+0x2f0>)
 8020458:	e9d3 2300 	ldrd	r2, r3, [r3]
 802045c:	f7df ff14 	bl	8000288 <__aeabi_dsub>
 8020460:	e9c4 8900 	strd	r8, r9, [r4]
 8020464:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020468:	2501      	movs	r5, #1
 802046a:	4628      	mov	r0, r5
 802046c:	b00d      	add	sp, #52	@ 0x34
 802046e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020472:	a39d      	add	r3, pc, #628	@ (adr r3, 80206e8 <__ieee754_rem_pio2+0x2f8>)
 8020474:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020478:	f7df ff06 	bl	8000288 <__aeabi_dsub>
 802047c:	a39c      	add	r3, pc, #624	@ (adr r3, 80206f0 <__ieee754_rem_pio2+0x300>)
 802047e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020482:	4606      	mov	r6, r0
 8020484:	460f      	mov	r7, r1
 8020486:	f7df feff 	bl	8000288 <__aeabi_dsub>
 802048a:	4602      	mov	r2, r0
 802048c:	460b      	mov	r3, r1
 802048e:	4680      	mov	r8, r0
 8020490:	4689      	mov	r9, r1
 8020492:	4630      	mov	r0, r6
 8020494:	4639      	mov	r1, r7
 8020496:	f7df fef7 	bl	8000288 <__aeabi_dsub>
 802049a:	a395      	add	r3, pc, #596	@ (adr r3, 80206f0 <__ieee754_rem_pio2+0x300>)
 802049c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204a0:	e7dc      	b.n	802045c <__ieee754_rem_pio2+0x6c>
 80204a2:	f7df fef3 	bl	800028c <__adddf3>
 80204a6:	45a8      	cmp	r8, r5
 80204a8:	4606      	mov	r6, r0
 80204aa:	460f      	mov	r7, r1
 80204ac:	d018      	beq.n	80204e0 <__ieee754_rem_pio2+0xf0>
 80204ae:	a38c      	add	r3, pc, #560	@ (adr r3, 80206e0 <__ieee754_rem_pio2+0x2f0>)
 80204b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204b4:	f7df feea 	bl	800028c <__adddf3>
 80204b8:	4602      	mov	r2, r0
 80204ba:	460b      	mov	r3, r1
 80204bc:	4680      	mov	r8, r0
 80204be:	4689      	mov	r9, r1
 80204c0:	4630      	mov	r0, r6
 80204c2:	4639      	mov	r1, r7
 80204c4:	f7df fee0 	bl	8000288 <__aeabi_dsub>
 80204c8:	a385      	add	r3, pc, #532	@ (adr r3, 80206e0 <__ieee754_rem_pio2+0x2f0>)
 80204ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204ce:	f7df fedd 	bl	800028c <__adddf3>
 80204d2:	f04f 35ff 	mov.w	r5, #4294967295
 80204d6:	e9c4 8900 	strd	r8, r9, [r4]
 80204da:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80204de:	e7c4      	b.n	802046a <__ieee754_rem_pio2+0x7a>
 80204e0:	a381      	add	r3, pc, #516	@ (adr r3, 80206e8 <__ieee754_rem_pio2+0x2f8>)
 80204e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204e6:	f7df fed1 	bl	800028c <__adddf3>
 80204ea:	a381      	add	r3, pc, #516	@ (adr r3, 80206f0 <__ieee754_rem_pio2+0x300>)
 80204ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204f0:	4606      	mov	r6, r0
 80204f2:	460f      	mov	r7, r1
 80204f4:	f7df feca 	bl	800028c <__adddf3>
 80204f8:	4602      	mov	r2, r0
 80204fa:	460b      	mov	r3, r1
 80204fc:	4680      	mov	r8, r0
 80204fe:	4689      	mov	r9, r1
 8020500:	4630      	mov	r0, r6
 8020502:	4639      	mov	r1, r7
 8020504:	f7df fec0 	bl	8000288 <__aeabi_dsub>
 8020508:	a379      	add	r3, pc, #484	@ (adr r3, 80206f0 <__ieee754_rem_pio2+0x300>)
 802050a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802050e:	e7de      	b.n	80204ce <__ieee754_rem_pio2+0xde>
 8020510:	4b82      	ldr	r3, [pc, #520]	@ (802071c <__ieee754_rem_pio2+0x32c>)
 8020512:	4598      	cmp	r8, r3
 8020514:	f200 80d1 	bhi.w	80206ba <__ieee754_rem_pio2+0x2ca>
 8020518:	f7ff fb6a 	bl	801fbf0 <fabs>
 802051c:	ec57 6b10 	vmov	r6, r7, d0
 8020520:	a375      	add	r3, pc, #468	@ (adr r3, 80206f8 <__ieee754_rem_pio2+0x308>)
 8020522:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020526:	4630      	mov	r0, r6
 8020528:	4639      	mov	r1, r7
 802052a:	f7e0 f865 	bl	80005f8 <__aeabi_dmul>
 802052e:	4b7c      	ldr	r3, [pc, #496]	@ (8020720 <__ieee754_rem_pio2+0x330>)
 8020530:	2200      	movs	r2, #0
 8020532:	f7df feab 	bl	800028c <__adddf3>
 8020536:	f7e0 fb0f 	bl	8000b58 <__aeabi_d2iz>
 802053a:	4605      	mov	r5, r0
 802053c:	f7df fff2 	bl	8000524 <__aeabi_i2d>
 8020540:	4602      	mov	r2, r0
 8020542:	460b      	mov	r3, r1
 8020544:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8020548:	a363      	add	r3, pc, #396	@ (adr r3, 80206d8 <__ieee754_rem_pio2+0x2e8>)
 802054a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802054e:	f7e0 f853 	bl	80005f8 <__aeabi_dmul>
 8020552:	4602      	mov	r2, r0
 8020554:	460b      	mov	r3, r1
 8020556:	4630      	mov	r0, r6
 8020558:	4639      	mov	r1, r7
 802055a:	f7df fe95 	bl	8000288 <__aeabi_dsub>
 802055e:	a360      	add	r3, pc, #384	@ (adr r3, 80206e0 <__ieee754_rem_pio2+0x2f0>)
 8020560:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020564:	4682      	mov	sl, r0
 8020566:	468b      	mov	fp, r1
 8020568:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802056c:	f7e0 f844 	bl	80005f8 <__aeabi_dmul>
 8020570:	2d1f      	cmp	r5, #31
 8020572:	4606      	mov	r6, r0
 8020574:	460f      	mov	r7, r1
 8020576:	dc0c      	bgt.n	8020592 <__ieee754_rem_pio2+0x1a2>
 8020578:	4b6a      	ldr	r3, [pc, #424]	@ (8020724 <__ieee754_rem_pio2+0x334>)
 802057a:	1e6a      	subs	r2, r5, #1
 802057c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020580:	4543      	cmp	r3, r8
 8020582:	d006      	beq.n	8020592 <__ieee754_rem_pio2+0x1a2>
 8020584:	4632      	mov	r2, r6
 8020586:	463b      	mov	r3, r7
 8020588:	4650      	mov	r0, sl
 802058a:	4659      	mov	r1, fp
 802058c:	f7df fe7c 	bl	8000288 <__aeabi_dsub>
 8020590:	e00e      	b.n	80205b0 <__ieee754_rem_pio2+0x1c0>
 8020592:	463b      	mov	r3, r7
 8020594:	4632      	mov	r2, r6
 8020596:	4650      	mov	r0, sl
 8020598:	4659      	mov	r1, fp
 802059a:	f7df fe75 	bl	8000288 <__aeabi_dsub>
 802059e:	ea4f 5328 	mov.w	r3, r8, asr #20
 80205a2:	9305      	str	r3, [sp, #20]
 80205a4:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80205a8:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 80205ac:	2b10      	cmp	r3, #16
 80205ae:	dc02      	bgt.n	80205b6 <__ieee754_rem_pio2+0x1c6>
 80205b0:	e9c4 0100 	strd	r0, r1, [r4]
 80205b4:	e039      	b.n	802062a <__ieee754_rem_pio2+0x23a>
 80205b6:	a34c      	add	r3, pc, #304	@ (adr r3, 80206e8 <__ieee754_rem_pio2+0x2f8>)
 80205b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80205bc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80205c0:	f7e0 f81a 	bl	80005f8 <__aeabi_dmul>
 80205c4:	4606      	mov	r6, r0
 80205c6:	460f      	mov	r7, r1
 80205c8:	4602      	mov	r2, r0
 80205ca:	460b      	mov	r3, r1
 80205cc:	4650      	mov	r0, sl
 80205ce:	4659      	mov	r1, fp
 80205d0:	f7df fe5a 	bl	8000288 <__aeabi_dsub>
 80205d4:	4602      	mov	r2, r0
 80205d6:	460b      	mov	r3, r1
 80205d8:	4680      	mov	r8, r0
 80205da:	4689      	mov	r9, r1
 80205dc:	4650      	mov	r0, sl
 80205de:	4659      	mov	r1, fp
 80205e0:	f7df fe52 	bl	8000288 <__aeabi_dsub>
 80205e4:	4632      	mov	r2, r6
 80205e6:	463b      	mov	r3, r7
 80205e8:	f7df fe4e 	bl	8000288 <__aeabi_dsub>
 80205ec:	a340      	add	r3, pc, #256	@ (adr r3, 80206f0 <__ieee754_rem_pio2+0x300>)
 80205ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80205f2:	4606      	mov	r6, r0
 80205f4:	460f      	mov	r7, r1
 80205f6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80205fa:	f7df fffd 	bl	80005f8 <__aeabi_dmul>
 80205fe:	4632      	mov	r2, r6
 8020600:	463b      	mov	r3, r7
 8020602:	f7df fe41 	bl	8000288 <__aeabi_dsub>
 8020606:	4602      	mov	r2, r0
 8020608:	460b      	mov	r3, r1
 802060a:	4606      	mov	r6, r0
 802060c:	460f      	mov	r7, r1
 802060e:	4640      	mov	r0, r8
 8020610:	4649      	mov	r1, r9
 8020612:	f7df fe39 	bl	8000288 <__aeabi_dsub>
 8020616:	9a05      	ldr	r2, [sp, #20]
 8020618:	f3c1 530a 	ubfx	r3, r1, #20, #11
 802061c:	1ad3      	subs	r3, r2, r3
 802061e:	2b31      	cmp	r3, #49	@ 0x31
 8020620:	dc20      	bgt.n	8020664 <__ieee754_rem_pio2+0x274>
 8020622:	e9c4 0100 	strd	r0, r1, [r4]
 8020626:	46c2      	mov	sl, r8
 8020628:	46cb      	mov	fp, r9
 802062a:	e9d4 8900 	ldrd	r8, r9, [r4]
 802062e:	4650      	mov	r0, sl
 8020630:	4642      	mov	r2, r8
 8020632:	464b      	mov	r3, r9
 8020634:	4659      	mov	r1, fp
 8020636:	f7df fe27 	bl	8000288 <__aeabi_dsub>
 802063a:	463b      	mov	r3, r7
 802063c:	4632      	mov	r2, r6
 802063e:	f7df fe23 	bl	8000288 <__aeabi_dsub>
 8020642:	9b04      	ldr	r3, [sp, #16]
 8020644:	2b00      	cmp	r3, #0
 8020646:	e9c4 0102 	strd	r0, r1, [r4, #8]
 802064a:	f6bf af0e 	bge.w	802046a <__ieee754_rem_pio2+0x7a>
 802064e:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 8020652:	6063      	str	r3, [r4, #4]
 8020654:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020658:	f8c4 8000 	str.w	r8, [r4]
 802065c:	60a0      	str	r0, [r4, #8]
 802065e:	60e3      	str	r3, [r4, #12]
 8020660:	426d      	negs	r5, r5
 8020662:	e702      	b.n	802046a <__ieee754_rem_pio2+0x7a>
 8020664:	a326      	add	r3, pc, #152	@ (adr r3, 8020700 <__ieee754_rem_pio2+0x310>)
 8020666:	e9d3 2300 	ldrd	r2, r3, [r3]
 802066a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802066e:	f7df ffc3 	bl	80005f8 <__aeabi_dmul>
 8020672:	4606      	mov	r6, r0
 8020674:	460f      	mov	r7, r1
 8020676:	4602      	mov	r2, r0
 8020678:	460b      	mov	r3, r1
 802067a:	4640      	mov	r0, r8
 802067c:	4649      	mov	r1, r9
 802067e:	f7df fe03 	bl	8000288 <__aeabi_dsub>
 8020682:	4602      	mov	r2, r0
 8020684:	460b      	mov	r3, r1
 8020686:	4682      	mov	sl, r0
 8020688:	468b      	mov	fp, r1
 802068a:	4640      	mov	r0, r8
 802068c:	4649      	mov	r1, r9
 802068e:	f7df fdfb 	bl	8000288 <__aeabi_dsub>
 8020692:	4632      	mov	r2, r6
 8020694:	463b      	mov	r3, r7
 8020696:	f7df fdf7 	bl	8000288 <__aeabi_dsub>
 802069a:	a31b      	add	r3, pc, #108	@ (adr r3, 8020708 <__ieee754_rem_pio2+0x318>)
 802069c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80206a0:	4606      	mov	r6, r0
 80206a2:	460f      	mov	r7, r1
 80206a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80206a8:	f7df ffa6 	bl	80005f8 <__aeabi_dmul>
 80206ac:	4632      	mov	r2, r6
 80206ae:	463b      	mov	r3, r7
 80206b0:	f7df fdea 	bl	8000288 <__aeabi_dsub>
 80206b4:	4606      	mov	r6, r0
 80206b6:	460f      	mov	r7, r1
 80206b8:	e764      	b.n	8020584 <__ieee754_rem_pio2+0x194>
 80206ba:	4b1b      	ldr	r3, [pc, #108]	@ (8020728 <__ieee754_rem_pio2+0x338>)
 80206bc:	4598      	cmp	r8, r3
 80206be:	d935      	bls.n	802072c <__ieee754_rem_pio2+0x33c>
 80206c0:	4632      	mov	r2, r6
 80206c2:	463b      	mov	r3, r7
 80206c4:	4630      	mov	r0, r6
 80206c6:	4639      	mov	r1, r7
 80206c8:	f7df fdde 	bl	8000288 <__aeabi_dsub>
 80206cc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80206d0:	e9c4 0100 	strd	r0, r1, [r4]
 80206d4:	e69e      	b.n	8020414 <__ieee754_rem_pio2+0x24>
 80206d6:	bf00      	nop
 80206d8:	54400000 	.word	0x54400000
 80206dc:	3ff921fb 	.word	0x3ff921fb
 80206e0:	1a626331 	.word	0x1a626331
 80206e4:	3dd0b461 	.word	0x3dd0b461
 80206e8:	1a600000 	.word	0x1a600000
 80206ec:	3dd0b461 	.word	0x3dd0b461
 80206f0:	2e037073 	.word	0x2e037073
 80206f4:	3ba3198a 	.word	0x3ba3198a
 80206f8:	6dc9c883 	.word	0x6dc9c883
 80206fc:	3fe45f30 	.word	0x3fe45f30
 8020700:	2e000000 	.word	0x2e000000
 8020704:	3ba3198a 	.word	0x3ba3198a
 8020708:	252049c1 	.word	0x252049c1
 802070c:	397b839a 	.word	0x397b839a
 8020710:	3fe921fb 	.word	0x3fe921fb
 8020714:	4002d97b 	.word	0x4002d97b
 8020718:	3ff921fb 	.word	0x3ff921fb
 802071c:	413921fb 	.word	0x413921fb
 8020720:	3fe00000 	.word	0x3fe00000
 8020724:	08021b20 	.word	0x08021b20
 8020728:	7fefffff 	.word	0x7fefffff
 802072c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8020730:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 8020734:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8020738:	4630      	mov	r0, r6
 802073a:	460f      	mov	r7, r1
 802073c:	f7e0 fa0c 	bl	8000b58 <__aeabi_d2iz>
 8020740:	f7df fef0 	bl	8000524 <__aeabi_i2d>
 8020744:	4602      	mov	r2, r0
 8020746:	460b      	mov	r3, r1
 8020748:	4630      	mov	r0, r6
 802074a:	4639      	mov	r1, r7
 802074c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8020750:	f7df fd9a 	bl	8000288 <__aeabi_dsub>
 8020754:	4b22      	ldr	r3, [pc, #136]	@ (80207e0 <__ieee754_rem_pio2+0x3f0>)
 8020756:	2200      	movs	r2, #0
 8020758:	f7df ff4e 	bl	80005f8 <__aeabi_dmul>
 802075c:	460f      	mov	r7, r1
 802075e:	4606      	mov	r6, r0
 8020760:	f7e0 f9fa 	bl	8000b58 <__aeabi_d2iz>
 8020764:	f7df fede 	bl	8000524 <__aeabi_i2d>
 8020768:	4602      	mov	r2, r0
 802076a:	460b      	mov	r3, r1
 802076c:	4630      	mov	r0, r6
 802076e:	4639      	mov	r1, r7
 8020770:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8020774:	f7df fd88 	bl	8000288 <__aeabi_dsub>
 8020778:	4b19      	ldr	r3, [pc, #100]	@ (80207e0 <__ieee754_rem_pio2+0x3f0>)
 802077a:	2200      	movs	r2, #0
 802077c:	f7df ff3c 	bl	80005f8 <__aeabi_dmul>
 8020780:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8020784:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8020788:	f04f 0803 	mov.w	r8, #3
 802078c:	2600      	movs	r6, #0
 802078e:	2700      	movs	r7, #0
 8020790:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8020794:	4632      	mov	r2, r6
 8020796:	463b      	mov	r3, r7
 8020798:	46c2      	mov	sl, r8
 802079a:	f108 38ff 	add.w	r8, r8, #4294967295
 802079e:	f7e0 f993 	bl	8000ac8 <__aeabi_dcmpeq>
 80207a2:	2800      	cmp	r0, #0
 80207a4:	d1f4      	bne.n	8020790 <__ieee754_rem_pio2+0x3a0>
 80207a6:	4b0f      	ldr	r3, [pc, #60]	@ (80207e4 <__ieee754_rem_pio2+0x3f4>)
 80207a8:	9301      	str	r3, [sp, #4]
 80207aa:	2302      	movs	r3, #2
 80207ac:	9300      	str	r3, [sp, #0]
 80207ae:	462a      	mov	r2, r5
 80207b0:	4653      	mov	r3, sl
 80207b2:	4621      	mov	r1, r4
 80207b4:	a806      	add	r0, sp, #24
 80207b6:	f000 f897 	bl	80208e8 <__kernel_rem_pio2>
 80207ba:	9b04      	ldr	r3, [sp, #16]
 80207bc:	2b00      	cmp	r3, #0
 80207be:	4605      	mov	r5, r0
 80207c0:	f6bf ae53 	bge.w	802046a <__ieee754_rem_pio2+0x7a>
 80207c4:	e9d4 2100 	ldrd	r2, r1, [r4]
 80207c8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80207cc:	e9c4 2300 	strd	r2, r3, [r4]
 80207d0:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 80207d4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80207d8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80207dc:	e740      	b.n	8020660 <__ieee754_rem_pio2+0x270>
 80207de:	bf00      	nop
 80207e0:	41700000 	.word	0x41700000
 80207e4:	08021ba0 	.word	0x08021ba0

080207e8 <scalbn>:
 80207e8:	b570      	push	{r4, r5, r6, lr}
 80207ea:	ec55 4b10 	vmov	r4, r5, d0
 80207ee:	f3c5 510a 	ubfx	r1, r5, #20, #11
 80207f2:	4606      	mov	r6, r0
 80207f4:	462b      	mov	r3, r5
 80207f6:	b991      	cbnz	r1, 802081e <scalbn+0x36>
 80207f8:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 80207fc:	4323      	orrs	r3, r4
 80207fe:	d03d      	beq.n	802087c <scalbn+0x94>
 8020800:	4b35      	ldr	r3, [pc, #212]	@ (80208d8 <scalbn+0xf0>)
 8020802:	4620      	mov	r0, r4
 8020804:	4629      	mov	r1, r5
 8020806:	2200      	movs	r2, #0
 8020808:	f7df fef6 	bl	80005f8 <__aeabi_dmul>
 802080c:	4b33      	ldr	r3, [pc, #204]	@ (80208dc <scalbn+0xf4>)
 802080e:	429e      	cmp	r6, r3
 8020810:	4604      	mov	r4, r0
 8020812:	460d      	mov	r5, r1
 8020814:	da0f      	bge.n	8020836 <scalbn+0x4e>
 8020816:	a328      	add	r3, pc, #160	@ (adr r3, 80208b8 <scalbn+0xd0>)
 8020818:	e9d3 2300 	ldrd	r2, r3, [r3]
 802081c:	e01e      	b.n	802085c <scalbn+0x74>
 802081e:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8020822:	4291      	cmp	r1, r2
 8020824:	d10b      	bne.n	802083e <scalbn+0x56>
 8020826:	4622      	mov	r2, r4
 8020828:	4620      	mov	r0, r4
 802082a:	4629      	mov	r1, r5
 802082c:	f7df fd2e 	bl	800028c <__adddf3>
 8020830:	4604      	mov	r4, r0
 8020832:	460d      	mov	r5, r1
 8020834:	e022      	b.n	802087c <scalbn+0x94>
 8020836:	460b      	mov	r3, r1
 8020838:	f3c1 510a 	ubfx	r1, r1, #20, #11
 802083c:	3936      	subs	r1, #54	@ 0x36
 802083e:	f24c 3250 	movw	r2, #50000	@ 0xc350
 8020842:	4296      	cmp	r6, r2
 8020844:	dd0d      	ble.n	8020862 <scalbn+0x7a>
 8020846:	2d00      	cmp	r5, #0
 8020848:	a11d      	add	r1, pc, #116	@ (adr r1, 80208c0 <scalbn+0xd8>)
 802084a:	e9d1 0100 	ldrd	r0, r1, [r1]
 802084e:	da02      	bge.n	8020856 <scalbn+0x6e>
 8020850:	a11d      	add	r1, pc, #116	@ (adr r1, 80208c8 <scalbn+0xe0>)
 8020852:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020856:	a31a      	add	r3, pc, #104	@ (adr r3, 80208c0 <scalbn+0xd8>)
 8020858:	e9d3 2300 	ldrd	r2, r3, [r3]
 802085c:	f7df fecc 	bl	80005f8 <__aeabi_dmul>
 8020860:	e7e6      	b.n	8020830 <scalbn+0x48>
 8020862:	1872      	adds	r2, r6, r1
 8020864:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8020868:	428a      	cmp	r2, r1
 802086a:	dcec      	bgt.n	8020846 <scalbn+0x5e>
 802086c:	2a00      	cmp	r2, #0
 802086e:	dd08      	ble.n	8020882 <scalbn+0x9a>
 8020870:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8020874:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8020878:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802087c:	ec45 4b10 	vmov	d0, r4, r5
 8020880:	bd70      	pop	{r4, r5, r6, pc}
 8020882:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8020886:	da08      	bge.n	802089a <scalbn+0xb2>
 8020888:	2d00      	cmp	r5, #0
 802088a:	a10b      	add	r1, pc, #44	@ (adr r1, 80208b8 <scalbn+0xd0>)
 802088c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020890:	dac1      	bge.n	8020816 <scalbn+0x2e>
 8020892:	a10f      	add	r1, pc, #60	@ (adr r1, 80208d0 <scalbn+0xe8>)
 8020894:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020898:	e7bd      	b.n	8020816 <scalbn+0x2e>
 802089a:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802089e:	3236      	adds	r2, #54	@ 0x36
 80208a0:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 80208a4:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80208a8:	4620      	mov	r0, r4
 80208aa:	4b0d      	ldr	r3, [pc, #52]	@ (80208e0 <scalbn+0xf8>)
 80208ac:	4629      	mov	r1, r5
 80208ae:	2200      	movs	r2, #0
 80208b0:	e7d4      	b.n	802085c <scalbn+0x74>
 80208b2:	bf00      	nop
 80208b4:	f3af 8000 	nop.w
 80208b8:	c2f8f359 	.word	0xc2f8f359
 80208bc:	01a56e1f 	.word	0x01a56e1f
 80208c0:	8800759c 	.word	0x8800759c
 80208c4:	7e37e43c 	.word	0x7e37e43c
 80208c8:	8800759c 	.word	0x8800759c
 80208cc:	fe37e43c 	.word	0xfe37e43c
 80208d0:	c2f8f359 	.word	0xc2f8f359
 80208d4:	81a56e1f 	.word	0x81a56e1f
 80208d8:	43500000 	.word	0x43500000
 80208dc:	ffff3cb0 	.word	0xffff3cb0
 80208e0:	3c900000 	.word	0x3c900000
 80208e4:	00000000 	.word	0x00000000

080208e8 <__kernel_rem_pio2>:
 80208e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80208ec:	ed2d 8b02 	vpush	{d8}
 80208f0:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 80208f4:	f112 0f14 	cmn.w	r2, #20
 80208f8:	9306      	str	r3, [sp, #24]
 80208fa:	9104      	str	r1, [sp, #16]
 80208fc:	4bbe      	ldr	r3, [pc, #760]	@ (8020bf8 <__kernel_rem_pio2+0x310>)
 80208fe:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 8020900:	9008      	str	r0, [sp, #32]
 8020902:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8020906:	9300      	str	r3, [sp, #0]
 8020908:	9b06      	ldr	r3, [sp, #24]
 802090a:	f103 33ff 	add.w	r3, r3, #4294967295
 802090e:	bfa8      	it	ge
 8020910:	1ed4      	subge	r4, r2, #3
 8020912:	9305      	str	r3, [sp, #20]
 8020914:	bfb2      	itee	lt
 8020916:	2400      	movlt	r4, #0
 8020918:	2318      	movge	r3, #24
 802091a:	fb94 f4f3 	sdivge	r4, r4, r3
 802091e:	f06f 0317 	mvn.w	r3, #23
 8020922:	fb04 3303 	mla	r3, r4, r3, r3
 8020926:	eb03 0b02 	add.w	fp, r3, r2
 802092a:	9b00      	ldr	r3, [sp, #0]
 802092c:	9a05      	ldr	r2, [sp, #20]
 802092e:	ed9f 8bae 	vldr	d8, [pc, #696]	@ 8020be8 <__kernel_rem_pio2+0x300>
 8020932:	eb03 0802 	add.w	r8, r3, r2
 8020936:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8020938:	1aa7      	subs	r7, r4, r2
 802093a:	ae20      	add	r6, sp, #128	@ 0x80
 802093c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8020940:	2500      	movs	r5, #0
 8020942:	4545      	cmp	r5, r8
 8020944:	dd13      	ble.n	802096e <__kernel_rem_pio2+0x86>
 8020946:	9b06      	ldr	r3, [sp, #24]
 8020948:	aa20      	add	r2, sp, #128	@ 0x80
 802094a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 802094e:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8020952:	f04f 0800 	mov.w	r8, #0
 8020956:	9b00      	ldr	r3, [sp, #0]
 8020958:	4598      	cmp	r8, r3
 802095a:	dc31      	bgt.n	80209c0 <__kernel_rem_pio2+0xd8>
 802095c:	ed9f 7ba2 	vldr	d7, [pc, #648]	@ 8020be8 <__kernel_rem_pio2+0x300>
 8020960:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8020964:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020968:	462f      	mov	r7, r5
 802096a:	2600      	movs	r6, #0
 802096c:	e01b      	b.n	80209a6 <__kernel_rem_pio2+0xbe>
 802096e:	42ef      	cmn	r7, r5
 8020970:	d407      	bmi.n	8020982 <__kernel_rem_pio2+0x9a>
 8020972:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8020976:	f7df fdd5 	bl	8000524 <__aeabi_i2d>
 802097a:	e8e6 0102 	strd	r0, r1, [r6], #8
 802097e:	3501      	adds	r5, #1
 8020980:	e7df      	b.n	8020942 <__kernel_rem_pio2+0x5a>
 8020982:	ec51 0b18 	vmov	r0, r1, d8
 8020986:	e7f8      	b.n	802097a <__kernel_rem_pio2+0x92>
 8020988:	e9d7 2300 	ldrd	r2, r3, [r7]
 802098c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8020990:	f7df fe32 	bl	80005f8 <__aeabi_dmul>
 8020994:	4602      	mov	r2, r0
 8020996:	460b      	mov	r3, r1
 8020998:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802099c:	f7df fc76 	bl	800028c <__adddf3>
 80209a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80209a4:	3601      	adds	r6, #1
 80209a6:	9b05      	ldr	r3, [sp, #20]
 80209a8:	429e      	cmp	r6, r3
 80209aa:	f1a7 0708 	sub.w	r7, r7, #8
 80209ae:	ddeb      	ble.n	8020988 <__kernel_rem_pio2+0xa0>
 80209b0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80209b4:	f108 0801 	add.w	r8, r8, #1
 80209b8:	ecaa 7b02 	vstmia	sl!, {d7}
 80209bc:	3508      	adds	r5, #8
 80209be:	e7ca      	b.n	8020956 <__kernel_rem_pio2+0x6e>
 80209c0:	9b00      	ldr	r3, [sp, #0]
 80209c2:	f8dd 8000 	ldr.w	r8, [sp]
 80209c6:	aa0c      	add	r2, sp, #48	@ 0x30
 80209c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80209cc:	930a      	str	r3, [sp, #40]	@ 0x28
 80209ce:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 80209d0:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80209d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80209d6:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80209da:	930b      	str	r3, [sp, #44]	@ 0x2c
 80209dc:	ab98      	add	r3, sp, #608	@ 0x260
 80209de:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80209e2:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 80209e6:	ed8d 7b02 	vstr	d7, [sp, #8]
 80209ea:	ac0c      	add	r4, sp, #48	@ 0x30
 80209ec:	ab70      	add	r3, sp, #448	@ 0x1c0
 80209ee:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 80209f2:	46a1      	mov	r9, r4
 80209f4:	46c2      	mov	sl, r8
 80209f6:	f1ba 0f00 	cmp.w	sl, #0
 80209fa:	f1a5 0508 	sub.w	r5, r5, #8
 80209fe:	dc77      	bgt.n	8020af0 <__kernel_rem_pio2+0x208>
 8020a00:	4658      	mov	r0, fp
 8020a02:	ed9d 0b02 	vldr	d0, [sp, #8]
 8020a06:	f7ff feef 	bl	80207e8 <scalbn>
 8020a0a:	ec57 6b10 	vmov	r6, r7, d0
 8020a0e:	2200      	movs	r2, #0
 8020a10:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 8020a14:	4630      	mov	r0, r6
 8020a16:	4639      	mov	r1, r7
 8020a18:	f7df fdee 	bl	80005f8 <__aeabi_dmul>
 8020a1c:	ec41 0b10 	vmov	d0, r0, r1
 8020a20:	f7ff fa1e 	bl	801fe60 <floor>
 8020a24:	4b75      	ldr	r3, [pc, #468]	@ (8020bfc <__kernel_rem_pio2+0x314>)
 8020a26:	ec51 0b10 	vmov	r0, r1, d0
 8020a2a:	2200      	movs	r2, #0
 8020a2c:	f7df fde4 	bl	80005f8 <__aeabi_dmul>
 8020a30:	4602      	mov	r2, r0
 8020a32:	460b      	mov	r3, r1
 8020a34:	4630      	mov	r0, r6
 8020a36:	4639      	mov	r1, r7
 8020a38:	f7df fc26 	bl	8000288 <__aeabi_dsub>
 8020a3c:	460f      	mov	r7, r1
 8020a3e:	4606      	mov	r6, r0
 8020a40:	f7e0 f88a 	bl	8000b58 <__aeabi_d2iz>
 8020a44:	9002      	str	r0, [sp, #8]
 8020a46:	f7df fd6d 	bl	8000524 <__aeabi_i2d>
 8020a4a:	4602      	mov	r2, r0
 8020a4c:	460b      	mov	r3, r1
 8020a4e:	4630      	mov	r0, r6
 8020a50:	4639      	mov	r1, r7
 8020a52:	f7df fc19 	bl	8000288 <__aeabi_dsub>
 8020a56:	f1bb 0f00 	cmp.w	fp, #0
 8020a5a:	4606      	mov	r6, r0
 8020a5c:	460f      	mov	r7, r1
 8020a5e:	dd6c      	ble.n	8020b3a <__kernel_rem_pio2+0x252>
 8020a60:	f108 31ff 	add.w	r1, r8, #4294967295
 8020a64:	ab0c      	add	r3, sp, #48	@ 0x30
 8020a66:	9d02      	ldr	r5, [sp, #8]
 8020a68:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8020a6c:	f1cb 0018 	rsb	r0, fp, #24
 8020a70:	fa43 f200 	asr.w	r2, r3, r0
 8020a74:	4415      	add	r5, r2
 8020a76:	4082      	lsls	r2, r0
 8020a78:	1a9b      	subs	r3, r3, r2
 8020a7a:	aa0c      	add	r2, sp, #48	@ 0x30
 8020a7c:	9502      	str	r5, [sp, #8]
 8020a7e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8020a82:	f1cb 0217 	rsb	r2, fp, #23
 8020a86:	fa43 f902 	asr.w	r9, r3, r2
 8020a8a:	f1b9 0f00 	cmp.w	r9, #0
 8020a8e:	dd64      	ble.n	8020b5a <__kernel_rem_pio2+0x272>
 8020a90:	9b02      	ldr	r3, [sp, #8]
 8020a92:	2200      	movs	r2, #0
 8020a94:	3301      	adds	r3, #1
 8020a96:	9302      	str	r3, [sp, #8]
 8020a98:	4615      	mov	r5, r2
 8020a9a:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 8020a9e:	4590      	cmp	r8, r2
 8020aa0:	f300 80b8 	bgt.w	8020c14 <__kernel_rem_pio2+0x32c>
 8020aa4:	f1bb 0f00 	cmp.w	fp, #0
 8020aa8:	dd07      	ble.n	8020aba <__kernel_rem_pio2+0x1d2>
 8020aaa:	f1bb 0f01 	cmp.w	fp, #1
 8020aae:	f000 80bf 	beq.w	8020c30 <__kernel_rem_pio2+0x348>
 8020ab2:	f1bb 0f02 	cmp.w	fp, #2
 8020ab6:	f000 80c6 	beq.w	8020c46 <__kernel_rem_pio2+0x35e>
 8020aba:	f1b9 0f02 	cmp.w	r9, #2
 8020abe:	d14c      	bne.n	8020b5a <__kernel_rem_pio2+0x272>
 8020ac0:	4632      	mov	r2, r6
 8020ac2:	463b      	mov	r3, r7
 8020ac4:	494e      	ldr	r1, [pc, #312]	@ (8020c00 <__kernel_rem_pio2+0x318>)
 8020ac6:	2000      	movs	r0, #0
 8020ac8:	f7df fbde 	bl	8000288 <__aeabi_dsub>
 8020acc:	4606      	mov	r6, r0
 8020ace:	460f      	mov	r7, r1
 8020ad0:	2d00      	cmp	r5, #0
 8020ad2:	d042      	beq.n	8020b5a <__kernel_rem_pio2+0x272>
 8020ad4:	4658      	mov	r0, fp
 8020ad6:	ed9f 0b46 	vldr	d0, [pc, #280]	@ 8020bf0 <__kernel_rem_pio2+0x308>
 8020ada:	f7ff fe85 	bl	80207e8 <scalbn>
 8020ade:	4630      	mov	r0, r6
 8020ae0:	4639      	mov	r1, r7
 8020ae2:	ec53 2b10 	vmov	r2, r3, d0
 8020ae6:	f7df fbcf 	bl	8000288 <__aeabi_dsub>
 8020aea:	4606      	mov	r6, r0
 8020aec:	460f      	mov	r7, r1
 8020aee:	e034      	b.n	8020b5a <__kernel_rem_pio2+0x272>
 8020af0:	4b44      	ldr	r3, [pc, #272]	@ (8020c04 <__kernel_rem_pio2+0x31c>)
 8020af2:	2200      	movs	r2, #0
 8020af4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020af8:	f7df fd7e 	bl	80005f8 <__aeabi_dmul>
 8020afc:	f7e0 f82c 	bl	8000b58 <__aeabi_d2iz>
 8020b00:	f7df fd10 	bl	8000524 <__aeabi_i2d>
 8020b04:	4b40      	ldr	r3, [pc, #256]	@ (8020c08 <__kernel_rem_pio2+0x320>)
 8020b06:	2200      	movs	r2, #0
 8020b08:	4606      	mov	r6, r0
 8020b0a:	460f      	mov	r7, r1
 8020b0c:	f7df fd74 	bl	80005f8 <__aeabi_dmul>
 8020b10:	4602      	mov	r2, r0
 8020b12:	460b      	mov	r3, r1
 8020b14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020b18:	f7df fbb6 	bl	8000288 <__aeabi_dsub>
 8020b1c:	f7e0 f81c 	bl	8000b58 <__aeabi_d2iz>
 8020b20:	e9d5 2300 	ldrd	r2, r3, [r5]
 8020b24:	f849 0b04 	str.w	r0, [r9], #4
 8020b28:	4639      	mov	r1, r7
 8020b2a:	4630      	mov	r0, r6
 8020b2c:	f7df fbae 	bl	800028c <__adddf3>
 8020b30:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020b34:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8020b38:	e75d      	b.n	80209f6 <__kernel_rem_pio2+0x10e>
 8020b3a:	d107      	bne.n	8020b4c <__kernel_rem_pio2+0x264>
 8020b3c:	f108 33ff 	add.w	r3, r8, #4294967295
 8020b40:	aa0c      	add	r2, sp, #48	@ 0x30
 8020b42:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020b46:	ea4f 59e3 	mov.w	r9, r3, asr #23
 8020b4a:	e79e      	b.n	8020a8a <__kernel_rem_pio2+0x1a2>
 8020b4c:	4b2f      	ldr	r3, [pc, #188]	@ (8020c0c <__kernel_rem_pio2+0x324>)
 8020b4e:	2200      	movs	r2, #0
 8020b50:	f7df ffd8 	bl	8000b04 <__aeabi_dcmpge>
 8020b54:	2800      	cmp	r0, #0
 8020b56:	d143      	bne.n	8020be0 <__kernel_rem_pio2+0x2f8>
 8020b58:	4681      	mov	r9, r0
 8020b5a:	2200      	movs	r2, #0
 8020b5c:	2300      	movs	r3, #0
 8020b5e:	4630      	mov	r0, r6
 8020b60:	4639      	mov	r1, r7
 8020b62:	f7df ffb1 	bl	8000ac8 <__aeabi_dcmpeq>
 8020b66:	2800      	cmp	r0, #0
 8020b68:	f000 80bf 	beq.w	8020cea <__kernel_rem_pio2+0x402>
 8020b6c:	f108 33ff 	add.w	r3, r8, #4294967295
 8020b70:	2200      	movs	r2, #0
 8020b72:	9900      	ldr	r1, [sp, #0]
 8020b74:	428b      	cmp	r3, r1
 8020b76:	da6e      	bge.n	8020c56 <__kernel_rem_pio2+0x36e>
 8020b78:	2a00      	cmp	r2, #0
 8020b7a:	f000 8089 	beq.w	8020c90 <__kernel_rem_pio2+0x3a8>
 8020b7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020b82:	ab0c      	add	r3, sp, #48	@ 0x30
 8020b84:	f1ab 0b18 	sub.w	fp, fp, #24
 8020b88:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 8020b8c:	2b00      	cmp	r3, #0
 8020b8e:	d0f6      	beq.n	8020b7e <__kernel_rem_pio2+0x296>
 8020b90:	4658      	mov	r0, fp
 8020b92:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8020bf0 <__kernel_rem_pio2+0x308>
 8020b96:	f7ff fe27 	bl	80207e8 <scalbn>
 8020b9a:	f108 0301 	add.w	r3, r8, #1
 8020b9e:	00da      	lsls	r2, r3, #3
 8020ba0:	9205      	str	r2, [sp, #20]
 8020ba2:	ec55 4b10 	vmov	r4, r5, d0
 8020ba6:	aa70      	add	r2, sp, #448	@ 0x1c0
 8020ba8:	f8df b058 	ldr.w	fp, [pc, #88]	@ 8020c04 <__kernel_rem_pio2+0x31c>
 8020bac:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8020bb0:	4646      	mov	r6, r8
 8020bb2:	f04f 0a00 	mov.w	sl, #0
 8020bb6:	2e00      	cmp	r6, #0
 8020bb8:	f280 80cf 	bge.w	8020d5a <__kernel_rem_pio2+0x472>
 8020bbc:	4644      	mov	r4, r8
 8020bbe:	2c00      	cmp	r4, #0
 8020bc0:	f2c0 80fd 	blt.w	8020dbe <__kernel_rem_pio2+0x4d6>
 8020bc4:	4b12      	ldr	r3, [pc, #72]	@ (8020c10 <__kernel_rem_pio2+0x328>)
 8020bc6:	461f      	mov	r7, r3
 8020bc8:	ab70      	add	r3, sp, #448	@ 0x1c0
 8020bca:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020bce:	9306      	str	r3, [sp, #24]
 8020bd0:	f04f 0a00 	mov.w	sl, #0
 8020bd4:	f04f 0b00 	mov.w	fp, #0
 8020bd8:	2600      	movs	r6, #0
 8020bda:	eba8 0504 	sub.w	r5, r8, r4
 8020bde:	e0e2      	b.n	8020da6 <__kernel_rem_pio2+0x4be>
 8020be0:	f04f 0902 	mov.w	r9, #2
 8020be4:	e754      	b.n	8020a90 <__kernel_rem_pio2+0x1a8>
 8020be6:	bf00      	nop
	...
 8020bf4:	3ff00000 	.word	0x3ff00000
 8020bf8:	08021ce8 	.word	0x08021ce8
 8020bfc:	40200000 	.word	0x40200000
 8020c00:	3ff00000 	.word	0x3ff00000
 8020c04:	3e700000 	.word	0x3e700000
 8020c08:	41700000 	.word	0x41700000
 8020c0c:	3fe00000 	.word	0x3fe00000
 8020c10:	08021ca8 	.word	0x08021ca8
 8020c14:	f854 3b04 	ldr.w	r3, [r4], #4
 8020c18:	b945      	cbnz	r5, 8020c2c <__kernel_rem_pio2+0x344>
 8020c1a:	b123      	cbz	r3, 8020c26 <__kernel_rem_pio2+0x33e>
 8020c1c:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8020c20:	f844 3c04 	str.w	r3, [r4, #-4]
 8020c24:	2301      	movs	r3, #1
 8020c26:	3201      	adds	r2, #1
 8020c28:	461d      	mov	r5, r3
 8020c2a:	e738      	b.n	8020a9e <__kernel_rem_pio2+0x1b6>
 8020c2c:	1acb      	subs	r3, r1, r3
 8020c2e:	e7f7      	b.n	8020c20 <__kernel_rem_pio2+0x338>
 8020c30:	f108 32ff 	add.w	r2, r8, #4294967295
 8020c34:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c36:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020c3a:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8020c3e:	a90c      	add	r1, sp, #48	@ 0x30
 8020c40:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8020c44:	e739      	b.n	8020aba <__kernel_rem_pio2+0x1d2>
 8020c46:	f108 32ff 	add.w	r2, r8, #4294967295
 8020c4a:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c4c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020c50:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8020c54:	e7f3      	b.n	8020c3e <__kernel_rem_pio2+0x356>
 8020c56:	a90c      	add	r1, sp, #48	@ 0x30
 8020c58:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8020c5c:	3b01      	subs	r3, #1
 8020c5e:	430a      	orrs	r2, r1
 8020c60:	e787      	b.n	8020b72 <__kernel_rem_pio2+0x28a>
 8020c62:	3401      	adds	r4, #1
 8020c64:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8020c68:	2a00      	cmp	r2, #0
 8020c6a:	d0fa      	beq.n	8020c62 <__kernel_rem_pio2+0x37a>
 8020c6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020c6e:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8020c72:	eb0d 0503 	add.w	r5, sp, r3
 8020c76:	9b06      	ldr	r3, [sp, #24]
 8020c78:	aa20      	add	r2, sp, #128	@ 0x80
 8020c7a:	4443      	add	r3, r8
 8020c7c:	f108 0701 	add.w	r7, r8, #1
 8020c80:	3d98      	subs	r5, #152	@ 0x98
 8020c82:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 8020c86:	4444      	add	r4, r8
 8020c88:	42bc      	cmp	r4, r7
 8020c8a:	da04      	bge.n	8020c96 <__kernel_rem_pio2+0x3ae>
 8020c8c:	46a0      	mov	r8, r4
 8020c8e:	e6a2      	b.n	80209d6 <__kernel_rem_pio2+0xee>
 8020c90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020c92:	2401      	movs	r4, #1
 8020c94:	e7e6      	b.n	8020c64 <__kernel_rem_pio2+0x37c>
 8020c96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c98:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8020c9c:	f7df fc42 	bl	8000524 <__aeabi_i2d>
 8020ca0:	ed9f 7bb1 	vldr	d7, [pc, #708]	@ 8020f68 <__kernel_rem_pio2+0x680>
 8020ca4:	e8e6 0102 	strd	r0, r1, [r6], #8
 8020ca8:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020cac:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8020cb0:	46b2      	mov	sl, r6
 8020cb2:	f04f 0800 	mov.w	r8, #0
 8020cb6:	9b05      	ldr	r3, [sp, #20]
 8020cb8:	4598      	cmp	r8, r3
 8020cba:	dd05      	ble.n	8020cc8 <__kernel_rem_pio2+0x3e0>
 8020cbc:	ed9d 7b02 	vldr	d7, [sp, #8]
 8020cc0:	3701      	adds	r7, #1
 8020cc2:	eca5 7b02 	vstmia	r5!, {d7}
 8020cc6:	e7df      	b.n	8020c88 <__kernel_rem_pio2+0x3a0>
 8020cc8:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 8020ccc:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8020cd0:	f7df fc92 	bl	80005f8 <__aeabi_dmul>
 8020cd4:	4602      	mov	r2, r0
 8020cd6:	460b      	mov	r3, r1
 8020cd8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020cdc:	f7df fad6 	bl	800028c <__adddf3>
 8020ce0:	f108 0801 	add.w	r8, r8, #1
 8020ce4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8020ce8:	e7e5      	b.n	8020cb6 <__kernel_rem_pio2+0x3ce>
 8020cea:	f1cb 0000 	rsb	r0, fp, #0
 8020cee:	ec47 6b10 	vmov	d0, r6, r7
 8020cf2:	f7ff fd79 	bl	80207e8 <scalbn>
 8020cf6:	ec55 4b10 	vmov	r4, r5, d0
 8020cfa:	4b9d      	ldr	r3, [pc, #628]	@ (8020f70 <__kernel_rem_pio2+0x688>)
 8020cfc:	2200      	movs	r2, #0
 8020cfe:	4620      	mov	r0, r4
 8020d00:	4629      	mov	r1, r5
 8020d02:	f7df feff 	bl	8000b04 <__aeabi_dcmpge>
 8020d06:	b300      	cbz	r0, 8020d4a <__kernel_rem_pio2+0x462>
 8020d08:	4b9a      	ldr	r3, [pc, #616]	@ (8020f74 <__kernel_rem_pio2+0x68c>)
 8020d0a:	2200      	movs	r2, #0
 8020d0c:	4620      	mov	r0, r4
 8020d0e:	4629      	mov	r1, r5
 8020d10:	f7df fc72 	bl	80005f8 <__aeabi_dmul>
 8020d14:	f7df ff20 	bl	8000b58 <__aeabi_d2iz>
 8020d18:	4606      	mov	r6, r0
 8020d1a:	f7df fc03 	bl	8000524 <__aeabi_i2d>
 8020d1e:	4b94      	ldr	r3, [pc, #592]	@ (8020f70 <__kernel_rem_pio2+0x688>)
 8020d20:	2200      	movs	r2, #0
 8020d22:	f7df fc69 	bl	80005f8 <__aeabi_dmul>
 8020d26:	460b      	mov	r3, r1
 8020d28:	4602      	mov	r2, r0
 8020d2a:	4629      	mov	r1, r5
 8020d2c:	4620      	mov	r0, r4
 8020d2e:	f7df faab 	bl	8000288 <__aeabi_dsub>
 8020d32:	f7df ff11 	bl	8000b58 <__aeabi_d2iz>
 8020d36:	ab0c      	add	r3, sp, #48	@ 0x30
 8020d38:	f10b 0b18 	add.w	fp, fp, #24
 8020d3c:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8020d40:	f108 0801 	add.w	r8, r8, #1
 8020d44:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 8020d48:	e722      	b.n	8020b90 <__kernel_rem_pio2+0x2a8>
 8020d4a:	4620      	mov	r0, r4
 8020d4c:	4629      	mov	r1, r5
 8020d4e:	f7df ff03 	bl	8000b58 <__aeabi_d2iz>
 8020d52:	ab0c      	add	r3, sp, #48	@ 0x30
 8020d54:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8020d58:	e71a      	b.n	8020b90 <__kernel_rem_pio2+0x2a8>
 8020d5a:	ab0c      	add	r3, sp, #48	@ 0x30
 8020d5c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8020d60:	f7df fbe0 	bl	8000524 <__aeabi_i2d>
 8020d64:	4622      	mov	r2, r4
 8020d66:	462b      	mov	r3, r5
 8020d68:	f7df fc46 	bl	80005f8 <__aeabi_dmul>
 8020d6c:	4652      	mov	r2, sl
 8020d6e:	e967 0102 	strd	r0, r1, [r7, #-8]!
 8020d72:	465b      	mov	r3, fp
 8020d74:	4620      	mov	r0, r4
 8020d76:	4629      	mov	r1, r5
 8020d78:	f7df fc3e 	bl	80005f8 <__aeabi_dmul>
 8020d7c:	3e01      	subs	r6, #1
 8020d7e:	4604      	mov	r4, r0
 8020d80:	460d      	mov	r5, r1
 8020d82:	e718      	b.n	8020bb6 <__kernel_rem_pio2+0x2ce>
 8020d84:	9906      	ldr	r1, [sp, #24]
 8020d86:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 8020d8a:	9106      	str	r1, [sp, #24]
 8020d8c:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 8020d90:	f7df fc32 	bl	80005f8 <__aeabi_dmul>
 8020d94:	4602      	mov	r2, r0
 8020d96:	460b      	mov	r3, r1
 8020d98:	4650      	mov	r0, sl
 8020d9a:	4659      	mov	r1, fp
 8020d9c:	f7df fa76 	bl	800028c <__adddf3>
 8020da0:	3601      	adds	r6, #1
 8020da2:	4682      	mov	sl, r0
 8020da4:	468b      	mov	fp, r1
 8020da6:	9b00      	ldr	r3, [sp, #0]
 8020da8:	429e      	cmp	r6, r3
 8020daa:	dc01      	bgt.n	8020db0 <__kernel_rem_pio2+0x4c8>
 8020dac:	42b5      	cmp	r5, r6
 8020dae:	dae9      	bge.n	8020d84 <__kernel_rem_pio2+0x49c>
 8020db0:	ab48      	add	r3, sp, #288	@ 0x120
 8020db2:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8020db6:	e9c5 ab00 	strd	sl, fp, [r5]
 8020dba:	3c01      	subs	r4, #1
 8020dbc:	e6ff      	b.n	8020bbe <__kernel_rem_pio2+0x2d6>
 8020dbe:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8020dc0:	2b02      	cmp	r3, #2
 8020dc2:	dc0b      	bgt.n	8020ddc <__kernel_rem_pio2+0x4f4>
 8020dc4:	2b00      	cmp	r3, #0
 8020dc6:	dc39      	bgt.n	8020e3c <__kernel_rem_pio2+0x554>
 8020dc8:	d05d      	beq.n	8020e86 <__kernel_rem_pio2+0x59e>
 8020dca:	9b02      	ldr	r3, [sp, #8]
 8020dcc:	f003 0007 	and.w	r0, r3, #7
 8020dd0:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 8020dd4:	ecbd 8b02 	vpop	{d8}
 8020dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ddc:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8020dde:	2b03      	cmp	r3, #3
 8020de0:	d1f3      	bne.n	8020dca <__kernel_rem_pio2+0x4e2>
 8020de2:	9b05      	ldr	r3, [sp, #20]
 8020de4:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8020de8:	eb0d 0403 	add.w	r4, sp, r3
 8020dec:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8020df0:	4625      	mov	r5, r4
 8020df2:	46c2      	mov	sl, r8
 8020df4:	f1ba 0f00 	cmp.w	sl, #0
 8020df8:	f1a5 0508 	sub.w	r5, r5, #8
 8020dfc:	dc6b      	bgt.n	8020ed6 <__kernel_rem_pio2+0x5ee>
 8020dfe:	4645      	mov	r5, r8
 8020e00:	2d01      	cmp	r5, #1
 8020e02:	f1a4 0408 	sub.w	r4, r4, #8
 8020e06:	f300 8087 	bgt.w	8020f18 <__kernel_rem_pio2+0x630>
 8020e0a:	9c05      	ldr	r4, [sp, #20]
 8020e0c:	ab48      	add	r3, sp, #288	@ 0x120
 8020e0e:	441c      	add	r4, r3
 8020e10:	2000      	movs	r0, #0
 8020e12:	2100      	movs	r1, #0
 8020e14:	f1b8 0f01 	cmp.w	r8, #1
 8020e18:	f300 809c 	bgt.w	8020f54 <__kernel_rem_pio2+0x66c>
 8020e1c:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	@ 0x120
 8020e20:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	@ 0x128
 8020e24:	f1b9 0f00 	cmp.w	r9, #0
 8020e28:	f040 80a6 	bne.w	8020f78 <__kernel_rem_pio2+0x690>
 8020e2c:	9b04      	ldr	r3, [sp, #16]
 8020e2e:	e9c3 7800 	strd	r7, r8, [r3]
 8020e32:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8020e36:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8020e3a:	e7c6      	b.n	8020dca <__kernel_rem_pio2+0x4e2>
 8020e3c:	9d05      	ldr	r5, [sp, #20]
 8020e3e:	ab48      	add	r3, sp, #288	@ 0x120
 8020e40:	441d      	add	r5, r3
 8020e42:	4644      	mov	r4, r8
 8020e44:	2000      	movs	r0, #0
 8020e46:	2100      	movs	r1, #0
 8020e48:	2c00      	cmp	r4, #0
 8020e4a:	da35      	bge.n	8020eb8 <__kernel_rem_pio2+0x5d0>
 8020e4c:	f1b9 0f00 	cmp.w	r9, #0
 8020e50:	d038      	beq.n	8020ec4 <__kernel_rem_pio2+0x5dc>
 8020e52:	4602      	mov	r2, r0
 8020e54:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020e58:	9c04      	ldr	r4, [sp, #16]
 8020e5a:	e9c4 2300 	strd	r2, r3, [r4]
 8020e5e:	4602      	mov	r2, r0
 8020e60:	460b      	mov	r3, r1
 8020e62:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 8020e66:	f7df fa0f 	bl	8000288 <__aeabi_dsub>
 8020e6a:	ad4a      	add	r5, sp, #296	@ 0x128
 8020e6c:	2401      	movs	r4, #1
 8020e6e:	45a0      	cmp	r8, r4
 8020e70:	da2b      	bge.n	8020eca <__kernel_rem_pio2+0x5e2>
 8020e72:	f1b9 0f00 	cmp.w	r9, #0
 8020e76:	d002      	beq.n	8020e7e <__kernel_rem_pio2+0x596>
 8020e78:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020e7c:	4619      	mov	r1, r3
 8020e7e:	9b04      	ldr	r3, [sp, #16]
 8020e80:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8020e84:	e7a1      	b.n	8020dca <__kernel_rem_pio2+0x4e2>
 8020e86:	9c05      	ldr	r4, [sp, #20]
 8020e88:	ab48      	add	r3, sp, #288	@ 0x120
 8020e8a:	441c      	add	r4, r3
 8020e8c:	2000      	movs	r0, #0
 8020e8e:	2100      	movs	r1, #0
 8020e90:	f1b8 0f00 	cmp.w	r8, #0
 8020e94:	da09      	bge.n	8020eaa <__kernel_rem_pio2+0x5c2>
 8020e96:	f1b9 0f00 	cmp.w	r9, #0
 8020e9a:	d002      	beq.n	8020ea2 <__kernel_rem_pio2+0x5ba>
 8020e9c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020ea0:	4619      	mov	r1, r3
 8020ea2:	9b04      	ldr	r3, [sp, #16]
 8020ea4:	e9c3 0100 	strd	r0, r1, [r3]
 8020ea8:	e78f      	b.n	8020dca <__kernel_rem_pio2+0x4e2>
 8020eaa:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8020eae:	f7df f9ed 	bl	800028c <__adddf3>
 8020eb2:	f108 38ff 	add.w	r8, r8, #4294967295
 8020eb6:	e7eb      	b.n	8020e90 <__kernel_rem_pio2+0x5a8>
 8020eb8:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8020ebc:	f7df f9e6 	bl	800028c <__adddf3>
 8020ec0:	3c01      	subs	r4, #1
 8020ec2:	e7c1      	b.n	8020e48 <__kernel_rem_pio2+0x560>
 8020ec4:	4602      	mov	r2, r0
 8020ec6:	460b      	mov	r3, r1
 8020ec8:	e7c6      	b.n	8020e58 <__kernel_rem_pio2+0x570>
 8020eca:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8020ece:	f7df f9dd 	bl	800028c <__adddf3>
 8020ed2:	3401      	adds	r4, #1
 8020ed4:	e7cb      	b.n	8020e6e <__kernel_rem_pio2+0x586>
 8020ed6:	ed95 7b00 	vldr	d7, [r5]
 8020eda:	ed8d 7b00 	vstr	d7, [sp]
 8020ede:	ed95 7b02 	vldr	d7, [r5, #8]
 8020ee2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020ee6:	ec53 2b17 	vmov	r2, r3, d7
 8020eea:	ed8d 7b06 	vstr	d7, [sp, #24]
 8020eee:	f7df f9cd 	bl	800028c <__adddf3>
 8020ef2:	4602      	mov	r2, r0
 8020ef4:	460b      	mov	r3, r1
 8020ef6:	4606      	mov	r6, r0
 8020ef8:	460f      	mov	r7, r1
 8020efa:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020efe:	f7df f9c3 	bl	8000288 <__aeabi_dsub>
 8020f02:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8020f06:	f7df f9c1 	bl	800028c <__adddf3>
 8020f0a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020f0e:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8020f12:	e9c5 6700 	strd	r6, r7, [r5]
 8020f16:	e76d      	b.n	8020df4 <__kernel_rem_pio2+0x50c>
 8020f18:	ed94 7b00 	vldr	d7, [r4]
 8020f1c:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 8020f20:	ec51 0b17 	vmov	r0, r1, d7
 8020f24:	4652      	mov	r2, sl
 8020f26:	465b      	mov	r3, fp
 8020f28:	ed8d 7b00 	vstr	d7, [sp]
 8020f2c:	f7df f9ae 	bl	800028c <__adddf3>
 8020f30:	4602      	mov	r2, r0
 8020f32:	460b      	mov	r3, r1
 8020f34:	4606      	mov	r6, r0
 8020f36:	460f      	mov	r7, r1
 8020f38:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020f3c:	f7df f9a4 	bl	8000288 <__aeabi_dsub>
 8020f40:	4652      	mov	r2, sl
 8020f42:	465b      	mov	r3, fp
 8020f44:	f7df f9a2 	bl	800028c <__adddf3>
 8020f48:	3d01      	subs	r5, #1
 8020f4a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020f4e:	e9c4 6700 	strd	r6, r7, [r4]
 8020f52:	e755      	b.n	8020e00 <__kernel_rem_pio2+0x518>
 8020f54:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8020f58:	f7df f998 	bl	800028c <__adddf3>
 8020f5c:	f108 38ff 	add.w	r8, r8, #4294967295
 8020f60:	e758      	b.n	8020e14 <__kernel_rem_pio2+0x52c>
 8020f62:	bf00      	nop
 8020f64:	f3af 8000 	nop.w
	...
 8020f70:	41700000 	.word	0x41700000
 8020f74:	3e700000 	.word	0x3e700000
 8020f78:	9b04      	ldr	r3, [sp, #16]
 8020f7a:	9a04      	ldr	r2, [sp, #16]
 8020f7c:	601f      	str	r7, [r3, #0]
 8020f7e:	f108 4400 	add.w	r4, r8, #2147483648	@ 0x80000000
 8020f82:	605c      	str	r4, [r3, #4]
 8020f84:	609d      	str	r5, [r3, #8]
 8020f86:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8020f8a:	60d3      	str	r3, [r2, #12]
 8020f8c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020f90:	6110      	str	r0, [r2, #16]
 8020f92:	6153      	str	r3, [r2, #20]
 8020f94:	e719      	b.n	8020dca <__kernel_rem_pio2+0x4e2>
 8020f96:	bf00      	nop

08020f98 <_init>:
 8020f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020f9a:	bf00      	nop
 8020f9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020f9e:	bc08      	pop	{r3}
 8020fa0:	469e      	mov	lr, r3
 8020fa2:	4770      	bx	lr

08020fa4 <_fini>:
 8020fa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020fa6:	bf00      	nop
 8020fa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020faa:	bc08      	pop	{r3}
 8020fac:	469e      	mov	lr, r3
 8020fae:	4770      	bx	lr
