
balancing_bot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00020d30  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000d48  08020ec0  08020ec0  00021ec0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08021c08  08021c08  000237d8  2**0
                  CONTENTS
  4 .ARM          00000008  08021c08  08021c08  00022c08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08021c10  08021c10  000237d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08021c10  08021c10  00022c10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08021c18  08021c18  00022c18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000007d8  20000000  08021c1c  00023000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000caac  200007d8  080223f4  000237d8  2**3
                  ALLOC
 10 ._user_heap_stack 0000d004  2000d284  080223f4  00024284  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000237d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000410e1  00000000  00000000  00023808  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000b4bc  00000000  00000000  000648e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002fc8  00000000  00000000  0006fda8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000244b  00000000  00000000  00072d70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003b570  00000000  00000000  000751bb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00053b04  00000000  00000000  000b072b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00103619  00000000  00000000  0010422f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  00207848  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d4e0  00000000  00000000  002078d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  00214db0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200007d8 	.word	0x200007d8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08020ea8 	.word	0x08020ea8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200007dc 	.word	0x200007dc
 80001cc:	08020ea8 	.word	0x08020ea8

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b96a 	b.w	8000f74 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d14e      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc4:	4694      	mov	ip, r2
 8000cc6:	458c      	cmp	ip, r1
 8000cc8:	4686      	mov	lr, r0
 8000cca:	fab2 f282 	clz	r2, r2
 8000cce:	d962      	bls.n	8000d96 <__udivmoddi4+0xde>
 8000cd0:	b14a      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd2:	f1c2 0320 	rsb	r3, r2, #32
 8000cd6:	4091      	lsls	r1, r2
 8000cd8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ce6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cea:	fa1f f68c 	uxth.w	r6, ip
 8000cee:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cf2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfe:	fb04 f106 	mul.w	r1, r4, r6
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000d0e:	f080 8112 	bcs.w	8000f36 <__udivmoddi4+0x27e>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 810f 	bls.w	8000f36 <__udivmoddi4+0x27e>
 8000d18:	3c02      	subs	r4, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a59      	subs	r1, r3, r1
 8000d1e:	fa1f f38e 	uxth.w	r3, lr
 8000d22:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d26:	fb07 1110 	mls	r1, r7, r0, r1
 8000d2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d2e:	fb00 f606 	mul.w	r6, r0, r6
 8000d32:	429e      	cmp	r6, r3
 8000d34:	d90a      	bls.n	8000d4c <__udivmoddi4+0x94>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d3e:	f080 80fc 	bcs.w	8000f3a <__udivmoddi4+0x282>
 8000d42:	429e      	cmp	r6, r3
 8000d44:	f240 80f9 	bls.w	8000f3a <__udivmoddi4+0x282>
 8000d48:	4463      	add	r3, ip
 8000d4a:	3802      	subs	r0, #2
 8000d4c:	1b9b      	subs	r3, r3, r6
 8000d4e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d52:	2100      	movs	r1, #0
 8000d54:	b11d      	cbz	r5, 8000d5e <__udivmoddi4+0xa6>
 8000d56:	40d3      	lsrs	r3, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d905      	bls.n	8000d72 <__udivmoddi4+0xba>
 8000d66:	b10d      	cbz	r5, 8000d6c <__udivmoddi4+0xb4>
 8000d68:	e9c5 0100 	strd	r0, r1, [r5]
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e7f5      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d72:	fab3 f183 	clz	r1, r3
 8000d76:	2900      	cmp	r1, #0
 8000d78:	d146      	bne.n	8000e08 <__udivmoddi4+0x150>
 8000d7a:	42a3      	cmp	r3, r4
 8000d7c:	d302      	bcc.n	8000d84 <__udivmoddi4+0xcc>
 8000d7e:	4290      	cmp	r0, r2
 8000d80:	f0c0 80f0 	bcc.w	8000f64 <__udivmoddi4+0x2ac>
 8000d84:	1a86      	subs	r6, r0, r2
 8000d86:	eb64 0303 	sbc.w	r3, r4, r3
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	d0e6      	beq.n	8000d5e <__udivmoddi4+0xa6>
 8000d90:	e9c5 6300 	strd	r6, r3, [r5]
 8000d94:	e7e3      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	f040 8090 	bne.w	8000ebc <__udivmoddi4+0x204>
 8000d9c:	eba1 040c 	sub.w	r4, r1, ip
 8000da0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000da4:	fa1f f78c 	uxth.w	r7, ip
 8000da8:	2101      	movs	r1, #1
 8000daa:	fbb4 f6f8 	udiv	r6, r4, r8
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb08 4416 	mls	r4, r8, r6, r4
 8000db6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000dba:	fb07 f006 	mul.w	r0, r7, r6
 8000dbe:	4298      	cmp	r0, r3
 8000dc0:	d908      	bls.n	8000dd4 <__udivmoddi4+0x11c>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f106 34ff 	add.w	r4, r6, #4294967295
 8000dca:	d202      	bcs.n	8000dd2 <__udivmoddi4+0x11a>
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	f200 80cd 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000dd2:	4626      	mov	r6, r4
 8000dd4:	1a1c      	subs	r4, r3, r0
 8000dd6:	fa1f f38e 	uxth.w	r3, lr
 8000dda:	fbb4 f0f8 	udiv	r0, r4, r8
 8000dde:	fb08 4410 	mls	r4, r8, r0, r4
 8000de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000de6:	fb00 f707 	mul.w	r7, r0, r7
 8000dea:	429f      	cmp	r7, r3
 8000dec:	d908      	bls.n	8000e00 <__udivmoddi4+0x148>
 8000dee:	eb1c 0303 	adds.w	r3, ip, r3
 8000df2:	f100 34ff 	add.w	r4, r0, #4294967295
 8000df6:	d202      	bcs.n	8000dfe <__udivmoddi4+0x146>
 8000df8:	429f      	cmp	r7, r3
 8000dfa:	f200 80b0 	bhi.w	8000f5e <__udivmoddi4+0x2a6>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	1bdb      	subs	r3, r3, r7
 8000e02:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e06:	e7a5      	b.n	8000d54 <__udivmoddi4+0x9c>
 8000e08:	f1c1 0620 	rsb	r6, r1, #32
 8000e0c:	408b      	lsls	r3, r1
 8000e0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000e12:	431f      	orrs	r7, r3
 8000e14:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e18:	fa04 f301 	lsl.w	r3, r4, r1
 8000e1c:	ea43 030c 	orr.w	r3, r3, ip
 8000e20:	40f4      	lsrs	r4, r6
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	0c38      	lsrs	r0, r7, #16
 8000e28:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e2c:	fbb4 fef0 	udiv	lr, r4, r0
 8000e30:	fa1f fc87 	uxth.w	ip, r7
 8000e34:	fb00 441e 	mls	r4, r0, lr, r4
 8000e38:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e3c:	fb0e f90c 	mul.w	r9, lr, ip
 8000e40:	45a1      	cmp	r9, r4
 8000e42:	fa02 f201 	lsl.w	r2, r2, r1
 8000e46:	d90a      	bls.n	8000e5e <__udivmoddi4+0x1a6>
 8000e48:	193c      	adds	r4, r7, r4
 8000e4a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e4e:	f080 8084 	bcs.w	8000f5a <__udivmoddi4+0x2a2>
 8000e52:	45a1      	cmp	r9, r4
 8000e54:	f240 8081 	bls.w	8000f5a <__udivmoddi4+0x2a2>
 8000e58:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e5c:	443c      	add	r4, r7
 8000e5e:	eba4 0409 	sub.w	r4, r4, r9
 8000e62:	fa1f f983 	uxth.w	r9, r3
 8000e66:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e6a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e6e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e72:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e76:	45a4      	cmp	ip, r4
 8000e78:	d907      	bls.n	8000e8a <__udivmoddi4+0x1d2>
 8000e7a:	193c      	adds	r4, r7, r4
 8000e7c:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e80:	d267      	bcs.n	8000f52 <__udivmoddi4+0x29a>
 8000e82:	45a4      	cmp	ip, r4
 8000e84:	d965      	bls.n	8000f52 <__udivmoddi4+0x29a>
 8000e86:	3b02      	subs	r3, #2
 8000e88:	443c      	add	r4, r7
 8000e8a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e8e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e92:	eba4 040c 	sub.w	r4, r4, ip
 8000e96:	429c      	cmp	r4, r3
 8000e98:	46ce      	mov	lr, r9
 8000e9a:	469c      	mov	ip, r3
 8000e9c:	d351      	bcc.n	8000f42 <__udivmoddi4+0x28a>
 8000e9e:	d04e      	beq.n	8000f3e <__udivmoddi4+0x286>
 8000ea0:	b155      	cbz	r5, 8000eb8 <__udivmoddi4+0x200>
 8000ea2:	ebb8 030e 	subs.w	r3, r8, lr
 8000ea6:	eb64 040c 	sbc.w	r4, r4, ip
 8000eaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000eae:	40cb      	lsrs	r3, r1
 8000eb0:	431e      	orrs	r6, r3
 8000eb2:	40cc      	lsrs	r4, r1
 8000eb4:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	e750      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000ebc:	f1c2 0320 	rsb	r3, r2, #32
 8000ec0:	fa20 f103 	lsr.w	r1, r0, r3
 8000ec4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ec8:	fa24 f303 	lsr.w	r3, r4, r3
 8000ecc:	4094      	lsls	r4, r2
 8000ece:	430c      	orrs	r4, r1
 8000ed0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ed4:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ed8:	fa1f f78c 	uxth.w	r7, ip
 8000edc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ee0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ee4:	0c23      	lsrs	r3, r4, #16
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f107 	mul.w	r1, r0, r7
 8000eee:	4299      	cmp	r1, r3
 8000ef0:	d908      	bls.n	8000f04 <__udivmoddi4+0x24c>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 36ff 	add.w	r6, r0, #4294967295
 8000efa:	d22c      	bcs.n	8000f56 <__udivmoddi4+0x29e>
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d92a      	bls.n	8000f56 <__udivmoddi4+0x29e>
 8000f00:	3802      	subs	r0, #2
 8000f02:	4463      	add	r3, ip
 8000f04:	1a5b      	subs	r3, r3, r1
 8000f06:	b2a4      	uxth	r4, r4
 8000f08:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f0c:	fb08 3311 	mls	r3, r8, r1, r3
 8000f10:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f14:	fb01 f307 	mul.w	r3, r1, r7
 8000f18:	42a3      	cmp	r3, r4
 8000f1a:	d908      	bls.n	8000f2e <__udivmoddi4+0x276>
 8000f1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000f20:	f101 36ff 	add.w	r6, r1, #4294967295
 8000f24:	d213      	bcs.n	8000f4e <__udivmoddi4+0x296>
 8000f26:	42a3      	cmp	r3, r4
 8000f28:	d911      	bls.n	8000f4e <__udivmoddi4+0x296>
 8000f2a:	3902      	subs	r1, #2
 8000f2c:	4464      	add	r4, ip
 8000f2e:	1ae4      	subs	r4, r4, r3
 8000f30:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000f34:	e739      	b.n	8000daa <__udivmoddi4+0xf2>
 8000f36:	4604      	mov	r4, r0
 8000f38:	e6f0      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e706      	b.n	8000d4c <__udivmoddi4+0x94>
 8000f3e:	45c8      	cmp	r8, r9
 8000f40:	d2ae      	bcs.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f42:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f46:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f4a:	3801      	subs	r0, #1
 8000f4c:	e7a8      	b.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f4e:	4631      	mov	r1, r6
 8000f50:	e7ed      	b.n	8000f2e <__udivmoddi4+0x276>
 8000f52:	4603      	mov	r3, r0
 8000f54:	e799      	b.n	8000e8a <__udivmoddi4+0x1d2>
 8000f56:	4630      	mov	r0, r6
 8000f58:	e7d4      	b.n	8000f04 <__udivmoddi4+0x24c>
 8000f5a:	46d6      	mov	lr, sl
 8000f5c:	e77f      	b.n	8000e5e <__udivmoddi4+0x1a6>
 8000f5e:	4463      	add	r3, ip
 8000f60:	3802      	subs	r0, #2
 8000f62:	e74d      	b.n	8000e00 <__udivmoddi4+0x148>
 8000f64:	4606      	mov	r6, r0
 8000f66:	4623      	mov	r3, r4
 8000f68:	4608      	mov	r0, r1
 8000f6a:	e70f      	b.n	8000d8c <__udivmoddi4+0xd4>
 8000f6c:	3e02      	subs	r6, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	e730      	b.n	8000dd4 <__udivmoddi4+0x11c>
 8000f72:	bf00      	nop

08000f74 <__aeabi_idiv0>:
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop

08000f78 <get_CRC8_check_sum>:
 8000f78:	b480      	push	{r7}
 8000f7a:	b087      	sub	sp, #28
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	60f8      	str	r0, [r7, #12]
 8000f80:	60b9      	str	r1, [r7, #8]
 8000f82:	4613      	mov	r3, r2
 8000f84:	71fb      	strb	r3, [r7, #7]
 8000f86:	e00a      	b.n	8000f9e <get_CRC8_check_sum+0x26>
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	1c5a      	adds	r2, r3, #1
 8000f8c:	60fa      	str	r2, [r7, #12]
 8000f8e:	781a      	ldrb	r2, [r3, #0]
 8000f90:	79fb      	ldrb	r3, [r7, #7]
 8000f92:	4053      	eors	r3, r2
 8000f94:	75fb      	strb	r3, [r7, #23]
 8000f96:	7dfb      	ldrb	r3, [r7, #23]
 8000f98:	4a07      	ldr	r2, [pc, #28]	@ (8000fb8 <get_CRC8_check_sum+0x40>)
 8000f9a:	5cd3      	ldrb	r3, [r2, r3]
 8000f9c:	71fb      	strb	r3, [r7, #7]
 8000f9e:	68bb      	ldr	r3, [r7, #8]
 8000fa0:	1e5a      	subs	r2, r3, #1
 8000fa2:	60ba      	str	r2, [r7, #8]
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d1ef      	bne.n	8000f88 <get_CRC8_check_sum+0x10>
 8000fa8:	79fb      	ldrb	r3, [r7, #7]
 8000faa:	4618      	mov	r0, r3
 8000fac:	371c      	adds	r7, #28
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	08021024 	.word	0x08021024

08000fbc <verify_CRC8_check_sum>:
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b084      	sub	sp, #16
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
 8000fc4:	6039      	str	r1, [r7, #0]
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	73fb      	strb	r3, [r7, #15]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d002      	beq.n	8000fd6 <verify_CRC8_check_sum+0x1a>
 8000fd0:	683b      	ldr	r3, [r7, #0]
 8000fd2:	2b02      	cmp	r3, #2
 8000fd4:	d801      	bhi.n	8000fda <verify_CRC8_check_sum+0x1e>
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	e013      	b.n	8001002 <verify_CRC8_check_sum+0x46>
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	3b01      	subs	r3, #1
 8000fde:	22ff      	movs	r2, #255	@ 0xff
 8000fe0:	4619      	mov	r1, r3
 8000fe2:	6878      	ldr	r0, [r7, #4]
 8000fe4:	f7ff ffc8 	bl	8000f78 <get_CRC8_check_sum>
 8000fe8:	4603      	mov	r3, r0
 8000fea:	73fb      	strb	r3, [r7, #15]
 8000fec:	683b      	ldr	r3, [r7, #0]
 8000fee:	3b01      	subs	r3, #1
 8000ff0:	687a      	ldr	r2, [r7, #4]
 8000ff2:	4413      	add	r3, r2
 8000ff4:	781b      	ldrb	r3, [r3, #0]
 8000ff6:	7bfa      	ldrb	r2, [r7, #15]
 8000ff8:	429a      	cmp	r2, r3
 8000ffa:	bf0c      	ite	eq
 8000ffc:	2301      	moveq	r3, #1
 8000ffe:	2300      	movne	r3, #0
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4618      	mov	r0, r3
 8001004:	3710      	adds	r7, #16
 8001006:	46bd      	mov	sp, r7
 8001008:	bd80      	pop	{r7, pc}

0800100a <append_CRC8_check_sum>:
 800100a:	b580      	push	{r7, lr}
 800100c:	b084      	sub	sp, #16
 800100e:	af00      	add	r7, sp, #0
 8001010:	6078      	str	r0, [r7, #4]
 8001012:	6039      	str	r1, [r7, #0]
 8001014:	2300      	movs	r3, #0
 8001016:	73fb      	strb	r3, [r7, #15]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	2b00      	cmp	r3, #0
 800101c:	d012      	beq.n	8001044 <append_CRC8_check_sum+0x3a>
 800101e:	683b      	ldr	r3, [r7, #0]
 8001020:	2b02      	cmp	r3, #2
 8001022:	d90f      	bls.n	8001044 <append_CRC8_check_sum+0x3a>
 8001024:	683b      	ldr	r3, [r7, #0]
 8001026:	3b01      	subs	r3, #1
 8001028:	22ff      	movs	r2, #255	@ 0xff
 800102a:	4619      	mov	r1, r3
 800102c:	6878      	ldr	r0, [r7, #4]
 800102e:	f7ff ffa3 	bl	8000f78 <get_CRC8_check_sum>
 8001032:	4603      	mov	r3, r0
 8001034:	73fb      	strb	r3, [r7, #15]
 8001036:	683b      	ldr	r3, [r7, #0]
 8001038:	3b01      	subs	r3, #1
 800103a:	687a      	ldr	r2, [r7, #4]
 800103c:	4413      	add	r3, r2
 800103e:	7bfa      	ldrb	r2, [r7, #15]
 8001040:	701a      	strb	r2, [r3, #0]
 8001042:	e000      	b.n	8001046 <append_CRC8_check_sum+0x3c>
 8001044:	bf00      	nop
 8001046:	3710      	adds	r7, #16
 8001048:	46bd      	mov	sp, r7
 800104a:	bd80      	pop	{r7, pc}

0800104c <get_CRC16_check_sum>:
 800104c:	b480      	push	{r7}
 800104e:	b087      	sub	sp, #28
 8001050:	af00      	add	r7, sp, #0
 8001052:	60f8      	str	r0, [r7, #12]
 8001054:	60b9      	str	r1, [r7, #8]
 8001056:	4613      	mov	r3, r2
 8001058:	80fb      	strh	r3, [r7, #6]
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d113      	bne.n	8001088 <get_CRC16_check_sum+0x3c>
 8001060:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001064:	e016      	b.n	8001094 <get_CRC16_check_sum+0x48>
 8001066:	68fb      	ldr	r3, [r7, #12]
 8001068:	1c5a      	adds	r2, r3, #1
 800106a:	60fa      	str	r2, [r7, #12]
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	75fb      	strb	r3, [r7, #23]
 8001070:	88fb      	ldrh	r3, [r7, #6]
 8001072:	0a1b      	lsrs	r3, r3, #8
 8001074:	b29a      	uxth	r2, r3
 8001076:	88f9      	ldrh	r1, [r7, #6]
 8001078:	7dfb      	ldrb	r3, [r7, #23]
 800107a:	404b      	eors	r3, r1
 800107c:	b2db      	uxtb	r3, r3
 800107e:	4908      	ldr	r1, [pc, #32]	@ (80010a0 <get_CRC16_check_sum+0x54>)
 8001080:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001084:	4053      	eors	r3, r2
 8001086:	80fb      	strh	r3, [r7, #6]
 8001088:	68bb      	ldr	r3, [r7, #8]
 800108a:	1e5a      	subs	r2, r3, #1
 800108c:	60ba      	str	r2, [r7, #8]
 800108e:	2b00      	cmp	r3, #0
 8001090:	d1e9      	bne.n	8001066 <get_CRC16_check_sum+0x1a>
 8001092:	88fb      	ldrh	r3, [r7, #6]
 8001094:	4618      	mov	r0, r3
 8001096:	371c      	adds	r7, #28
 8001098:	46bd      	mov	sp, r7
 800109a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109e:	4770      	bx	lr
 80010a0:	08021124 	.word	0x08021124

080010a4 <verify_CRC16_check_sum>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b084      	sub	sp, #16
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	6078      	str	r0, [r7, #4]
 80010ac:	6039      	str	r1, [r7, #0]
 80010ae:	2300      	movs	r3, #0
 80010b0:	81fb      	strh	r3, [r7, #14]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d002      	beq.n	80010be <verify_CRC16_check_sum+0x1a>
 80010b8:	683b      	ldr	r3, [r7, #0]
 80010ba:	2b02      	cmp	r3, #2
 80010bc:	d801      	bhi.n	80010c2 <verify_CRC16_check_sum+0x1e>
 80010be:	2300      	movs	r3, #0
 80010c0:	e020      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 80010c2:	683b      	ldr	r3, [r7, #0]
 80010c4:	3b02      	subs	r3, #2
 80010c6:	4a11      	ldr	r2, [pc, #68]	@ (800110c <verify_CRC16_check_sum+0x68>)
 80010c8:	8812      	ldrh	r2, [r2, #0]
 80010ca:	4619      	mov	r1, r3
 80010cc:	6878      	ldr	r0, [r7, #4]
 80010ce:	f7ff ffbd 	bl	800104c <get_CRC16_check_sum>
 80010d2:	4603      	mov	r3, r0
 80010d4:	81fb      	strh	r3, [r7, #14]
 80010d6:	89fb      	ldrh	r3, [r7, #14]
 80010d8:	b2db      	uxtb	r3, r3
 80010da:	683a      	ldr	r2, [r7, #0]
 80010dc:	3a02      	subs	r2, #2
 80010de:	6879      	ldr	r1, [r7, #4]
 80010e0:	440a      	add	r2, r1
 80010e2:	7812      	ldrb	r2, [r2, #0]
 80010e4:	4293      	cmp	r3, r2
 80010e6:	d10c      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010e8:	89fb      	ldrh	r3, [r7, #14]
 80010ea:	0a1b      	lsrs	r3, r3, #8
 80010ec:	b29b      	uxth	r3, r3
 80010ee:	b2db      	uxtb	r3, r3
 80010f0:	683a      	ldr	r2, [r7, #0]
 80010f2:	3a01      	subs	r2, #1
 80010f4:	6879      	ldr	r1, [r7, #4]
 80010f6:	440a      	add	r2, r1
 80010f8:	7812      	ldrb	r2, [r2, #0]
 80010fa:	4293      	cmp	r3, r2
 80010fc:	d101      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010fe:	2301      	movs	r3, #1
 8001100:	e000      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 8001102:	2300      	movs	r3, #0
 8001104:	4618      	mov	r0, r3
 8001106:	3710      	adds	r7, #16
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}
 800110c:	20000000 	.word	0x20000000

08001110 <append_CRC16_check_sum>:
 8001110:	b580      	push	{r7, lr}
 8001112:	b084      	sub	sp, #16
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	6039      	str	r1, [r7, #0]
 800111a:	2300      	movs	r3, #0
 800111c:	81fb      	strh	r3, [r7, #14]
 800111e:	687b      	ldr	r3, [r7, #4]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d01d      	beq.n	8001160 <append_CRC16_check_sum+0x50>
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	2b02      	cmp	r3, #2
 8001128:	d91a      	bls.n	8001160 <append_CRC16_check_sum+0x50>
 800112a:	683b      	ldr	r3, [r7, #0]
 800112c:	3b02      	subs	r3, #2
 800112e:	4a0e      	ldr	r2, [pc, #56]	@ (8001168 <append_CRC16_check_sum+0x58>)
 8001130:	8812      	ldrh	r2, [r2, #0]
 8001132:	4619      	mov	r1, r3
 8001134:	6878      	ldr	r0, [r7, #4]
 8001136:	f7ff ff89 	bl	800104c <get_CRC16_check_sum>
 800113a:	4603      	mov	r3, r0
 800113c:	81fb      	strh	r3, [r7, #14]
 800113e:	683b      	ldr	r3, [r7, #0]
 8001140:	3b02      	subs	r3, #2
 8001142:	687a      	ldr	r2, [r7, #4]
 8001144:	4413      	add	r3, r2
 8001146:	89fa      	ldrh	r2, [r7, #14]
 8001148:	b2d2      	uxtb	r2, r2
 800114a:	701a      	strb	r2, [r3, #0]
 800114c:	89fb      	ldrh	r3, [r7, #14]
 800114e:	0a1b      	lsrs	r3, r3, #8
 8001150:	b299      	uxth	r1, r3
 8001152:	683b      	ldr	r3, [r7, #0]
 8001154:	3b01      	subs	r3, #1
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	4413      	add	r3, r2
 800115a:	b2ca      	uxtb	r2, r1
 800115c:	701a      	strb	r2, [r3, #0]
 800115e:	e000      	b.n	8001162 <append_CRC16_check_sum+0x52>
 8001160:	bf00      	nop
 8001162:	3710      	adds	r7, #16
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	20000000 	.word	0x20000000

0800116c <buzzer>:
 800116c:	b480      	push	{r7}
 800116e:	b083      	sub	sp, #12
 8001170:	af00      	add	r7, sp, #0
 8001172:	4603      	mov	r3, r0
 8001174:	80fb      	strh	r3, [r7, #6]
 8001176:	88fb      	ldrh	r3, [r7, #6]
 8001178:	2b00      	cmp	r3, #0
 800117a:	d104      	bne.n	8001186 <buzzer+0x1a>
 800117c:	4b0b      	ldr	r3, [pc, #44]	@ (80011ac <buzzer+0x40>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	2200      	movs	r2, #0
 8001182:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001184:	e00c      	b.n	80011a0 <buzzer+0x34>
 8001186:	88fb      	ldrh	r3, [r7, #6]
 8001188:	f24a 4210 	movw	r2, #42000	@ 0xa410
 800118c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001190:	4b06      	ldr	r3, [pc, #24]	@ (80011ac <buzzer+0x40>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	629a      	str	r2, [r3, #40]	@ 0x28
 8001196:	4b05      	ldr	r3, [pc, #20]	@ (80011ac <buzzer+0x40>)
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800119e:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011a0:	bf00      	nop
 80011a2:	370c      	adds	r7, #12
 80011a4:	46bd      	mov	sp, r7
 80011a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011aa:	4770      	bx	lr
 80011ac:	20001b10 	.word	0x20001b10

080011b0 <buzzer_init>:
 80011b0:	b580      	push	{r7, lr}
 80011b2:	af00      	add	r7, sp, #0
 80011b4:	2108      	movs	r1, #8
 80011b6:	4804      	ldr	r0, [pc, #16]	@ (80011c8 <buzzer_init+0x18>)
 80011b8:	f010 f9e0 	bl	801157c <HAL_TIM_PWM_Start>
 80011bc:	4b02      	ldr	r3, [pc, #8]	@ (80011c8 <buzzer_init+0x18>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	2200      	movs	r2, #0
 80011c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011c4:	bf00      	nop
 80011c6:	bd80      	pop	{r7, pc}
 80011c8:	20001b10 	.word	0x20001b10

080011cc <HAL_CAN_RxFifo0MsgPendingCallback>:
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b082      	sub	sp, #8
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f003 fec3 	bl	8004f60 <can_ISR>
 80011da:	bf00      	nop
 80011dc:	3708      	adds	r7, #8
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}

080011e2 <HAL_CAN_RxFifo1MsgPendingCallback>:
 80011e2:	b580      	push	{r7, lr}
 80011e4:	b082      	sub	sp, #8
 80011e6:	af00      	add	r7, sp, #0
 80011e8:	6078      	str	r0, [r7, #4]
 80011ea:	6878      	ldr	r0, [r7, #4]
 80011ec:	f003 feb8 	bl	8004f60 <can_ISR>
 80011f0:	bf00      	nop
 80011f2:	3708      	adds	r7, #8
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}

080011f8 <can1_get_msg>:
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b084      	sub	sp, #16
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	60f8      	str	r0, [r7, #12]
 8001200:	60b9      	str	r1, [r7, #8]
 8001202:	607a      	str	r2, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	68ba      	ldr	r2, [r7, #8]
 8001208:	2100      	movs	r1, #0
 800120a:	68f8      	ldr	r0, [r7, #12]
 800120c:	f00a fcb1 	bl	800bb72 <HAL_CAN_GetRxMessage>
 8001210:	2300      	movs	r3, #0
 8001212:	4618      	mov	r0, r3
 8001214:	3710      	adds	r7, #16
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}

0800121a <can2_get_msg>:
 800121a:	b580      	push	{r7, lr}
 800121c:	b084      	sub	sp, #16
 800121e:	af00      	add	r7, sp, #0
 8001220:	60f8      	str	r0, [r7, #12]
 8001222:	60b9      	str	r1, [r7, #8]
 8001224:	607a      	str	r2, [r7, #4]
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	68ba      	ldr	r2, [r7, #8]
 800122a:	2101      	movs	r1, #1
 800122c:	68f8      	ldr	r0, [r7, #12]
 800122e:	f00a fca0 	bl	800bb72 <HAL_CAN_GetRxMessage>
 8001232:	2300      	movs	r3, #0
 8001234:	4618      	mov	r0, r3
 8001236:	3710      	adds	r7, #16
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}

0800123c <can_start>:
 800123c:	b580      	push	{r7, lr}
 800123e:	b08e      	sub	sp, #56	@ 0x38
 8001240:	af00      	add	r7, sp, #0
 8001242:	60f8      	str	r0, [r7, #12]
 8001244:	60b9      	str	r1, [r7, #8]
 8001246:	607a      	str	r2, [r7, #4]
 8001248:	f107 0310 	add.w	r3, r7, #16
 800124c:	2228      	movs	r2, #40	@ 0x28
 800124e:	2100      	movs	r1, #0
 8001250:	4618      	mov	r0, r3
 8001252:	f019 fe0e 	bl	801ae72 <memset>
 8001256:	2301      	movs	r3, #1
 8001258:	633b      	str	r3, [r7, #48]	@ 0x30
 800125a:	2300      	movs	r3, #0
 800125c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800125e:	2301      	movs	r3, #1
 8001260:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001262:	68bb      	ldr	r3, [r7, #8]
 8001264:	0c1b      	lsrs	r3, r3, #16
 8001266:	613b      	str	r3, [r7, #16]
 8001268:	68bb      	ldr	r3, [r7, #8]
 800126a:	b29b      	uxth	r3, r3
 800126c:	617b      	str	r3, [r7, #20]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	0c1b      	lsrs	r3, r3, #16
 8001272:	61bb      	str	r3, [r7, #24]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	b29b      	uxth	r3, r3
 8001278:	61fb      	str	r3, [r7, #28]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	4a18      	ldr	r2, [pc, #96]	@ (80012e0 <can_start+0xa4>)
 8001280:	4293      	cmp	r3, r2
 8001282:	d111      	bne.n	80012a8 <can_start+0x6c>
 8001284:	2300      	movs	r3, #0
 8001286:	627b      	str	r3, [r7, #36]	@ 0x24
 8001288:	2300      	movs	r3, #0
 800128a:	623b      	str	r3, [r7, #32]
 800128c:	f107 0310 	add.w	r3, r7, #16
 8001290:	4619      	mov	r1, r3
 8001292:	68f8      	ldr	r0, [r7, #12]
 8001294:	f00a fa6e 	bl	800b774 <HAL_CAN_ConfigFilter>
 8001298:	68f8      	ldr	r0, [r7, #12]
 800129a:	f00a fb4b 	bl	800b934 <HAL_CAN_Start>
 800129e:	2102      	movs	r1, #2
 80012a0:	68f8      	ldr	r0, [r7, #12]
 80012a2:	f00a fd78 	bl	800bd96 <HAL_CAN_ActivateNotification>
 80012a6:	e017      	b.n	80012d8 <can_start+0x9c>
 80012a8:	68fb      	ldr	r3, [r7, #12]
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a0d      	ldr	r2, [pc, #52]	@ (80012e4 <can_start+0xa8>)
 80012ae:	4293      	cmp	r3, r2
 80012b0:	d112      	bne.n	80012d8 <can_start+0x9c>
 80012b2:	2301      	movs	r3, #1
 80012b4:	623b      	str	r3, [r7, #32]
 80012b6:	230e      	movs	r3, #14
 80012b8:	637b      	str	r3, [r7, #52]	@ 0x34
 80012ba:	230e      	movs	r3, #14
 80012bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80012be:	f107 0310 	add.w	r3, r7, #16
 80012c2:	4619      	mov	r1, r3
 80012c4:	68f8      	ldr	r0, [r7, #12]
 80012c6:	f00a fa55 	bl	800b774 <HAL_CAN_ConfigFilter>
 80012ca:	68f8      	ldr	r0, [r7, #12]
 80012cc:	f00a fb32 	bl	800b934 <HAL_CAN_Start>
 80012d0:	2110      	movs	r1, #16
 80012d2:	68f8      	ldr	r0, [r7, #12]
 80012d4:	f00a fd5f 	bl	800bd96 <HAL_CAN_ActivateNotification>
 80012d8:	bf00      	nop
 80012da:	3738      	adds	r7, #56	@ 0x38
 80012dc:	46bd      	mov	sp, r7
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	40006400 	.word	0x40006400
 80012e4:	40006800 	.word	0x40006800

080012e8 <dbus_remote_ISR>:

uint8_t remote_raw_data[REMOTE_DATA_SIZE] = {0};
remote_cmd_t g_remote_cmd = { 0 };


void dbus_remote_ISR(DMA_HandleTypeDef *hdma) {
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b084      	sub	sp, #16
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]
	g_remote_cmd.right_x = (remote_raw_data[0] | remote_raw_data[1] << 8) & 0x07FF;
 80012f0:	4b79      	ldr	r3, [pc, #484]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f2:	781b      	ldrb	r3, [r3, #0]
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	4b78      	ldr	r3, [pc, #480]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f8:	785b      	ldrb	r3, [r3, #1]
 80012fa:	021b      	lsls	r3, r3, #8
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	4313      	orrs	r3, r2
 8001300:	b21b      	sxth	r3, r3
 8001302:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001306:	b21a      	sxth	r2, r3
 8001308:	4b74      	ldr	r3, [pc, #464]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130a:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_x -= JOYSTICK_OFFSET;
 800130c:	4b73      	ldr	r3, [pc, #460]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001312:	b29b      	uxth	r3, r3
 8001314:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001318:	b29b      	uxth	r3, r3
 800131a:	b21a      	sxth	r2, r3
 800131c:	4b6f      	ldr	r3, [pc, #444]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800131e:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_y = (remote_raw_data[1] >> 3 | remote_raw_data[2] << 5) & 0x07FF;
 8001320:	4b6d      	ldr	r3, [pc, #436]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001322:	785b      	ldrb	r3, [r3, #1]
 8001324:	08db      	lsrs	r3, r3, #3
 8001326:	b2db      	uxtb	r3, r3
 8001328:	b21a      	sxth	r2, r3
 800132a:	4b6b      	ldr	r3, [pc, #428]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800132c:	789b      	ldrb	r3, [r3, #2]
 800132e:	015b      	lsls	r3, r3, #5
 8001330:	b21b      	sxth	r3, r3
 8001332:	4313      	orrs	r3, r2
 8001334:	b21b      	sxth	r3, r3
 8001336:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800133a:	b21a      	sxth	r2, r3
 800133c:	4b67      	ldr	r3, [pc, #412]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800133e:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.right_y -= JOYSTICK_OFFSET;
 8001340:	4b66      	ldr	r3, [pc, #408]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001342:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001346:	b29b      	uxth	r3, r3
 8001348:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800134c:	b29b      	uxth	r3, r3
 800134e:	b21a      	sxth	r2, r3
 8001350:	4b62      	ldr	r3, [pc, #392]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001352:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 8001354:	4b60      	ldr	r3, [pc, #384]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001356:	789b      	ldrb	r3, [r3, #2]
 8001358:	099b      	lsrs	r3, r3, #6
 800135a:	b2db      	uxtb	r3, r3
 800135c:	b21a      	sxth	r2, r3
 800135e:	4b5e      	ldr	r3, [pc, #376]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001360:	78db      	ldrb	r3, [r3, #3]
 8001362:	009b      	lsls	r3, r3, #2
 8001364:	b21b      	sxth	r3, r3
 8001366:	4313      	orrs	r3, r2
 8001368:	b21a      	sxth	r2, r3
			| remote_raw_data[4] << 10) & 0x07FF;
 800136a:	4b5b      	ldr	r3, [pc, #364]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800136c:	791b      	ldrb	r3, [r3, #4]
 800136e:	029b      	lsls	r3, r3, #10
 8001370:	b21b      	sxth	r3, r3
 8001372:	4313      	orrs	r3, r2
 8001374:	b21b      	sxth	r3, r3
 8001376:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800137a:	b21a      	sxth	r2, r3
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 800137c:	4b57      	ldr	r3, [pc, #348]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800137e:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_x -= JOYSTICK_OFFSET;
 8001380:	4b56      	ldr	r3, [pc, #344]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001382:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001386:	b29b      	uxth	r3, r3
 8001388:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800138c:	b29b      	uxth	r3, r3
 800138e:	b21a      	sxth	r2, r3
 8001390:	4b52      	ldr	r3, [pc, #328]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001392:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_y = (remote_raw_data[4] >> 1 | remote_raw_data[5] << 7) & 0x07FF;
 8001394:	4b50      	ldr	r3, [pc, #320]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001396:	791b      	ldrb	r3, [r3, #4]
 8001398:	085b      	lsrs	r3, r3, #1
 800139a:	b2db      	uxtb	r3, r3
 800139c:	b21a      	sxth	r2, r3
 800139e:	4b4e      	ldr	r3, [pc, #312]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013a0:	795b      	ldrb	r3, [r3, #5]
 80013a2:	01db      	lsls	r3, r3, #7
 80013a4:	b21b      	sxth	r3, r3
 80013a6:	4313      	orrs	r3, r2
 80013a8:	b21b      	sxth	r3, r3
 80013aa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013ae:	b21a      	sxth	r2, r3
 80013b0:	4b4a      	ldr	r3, [pc, #296]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b2:	80da      	strh	r2, [r3, #6]
	g_remote_cmd.left_y -= JOYSTICK_OFFSET;
 80013b4:	4b49      	ldr	r3, [pc, #292]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80013ba:	b29b      	uxth	r3, r3
 80013bc:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 80013c0:	b29b      	uxth	r3, r3
 80013c2:	b21a      	sxth	r2, r3
 80013c4:	4b45      	ldr	r3, [pc, #276]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013c6:	80da      	strh	r2, [r3, #6]
	//Left switch position
	g_remote_cmd.left_switch = ((remote_raw_data[5] >> 4) & 0x000C) >> 2;
 80013c8:	4b43      	ldr	r3, [pc, #268]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013ca:	795b      	ldrb	r3, [r3, #5]
 80013cc:	091b      	lsrs	r3, r3, #4
 80013ce:	b2db      	uxtb	r3, r3
 80013d0:	109b      	asrs	r3, r3, #2
 80013d2:	b25b      	sxtb	r3, r3
 80013d4:	f003 0303 	and.w	r3, r3, #3
 80013d8:	b25a      	sxtb	r2, r3
 80013da:	4b40      	ldr	r3, [pc, #256]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013dc:	721a      	strb	r2, [r3, #8]
	g_remote_cmd.right_switch = (remote_raw_data[5] >> 4) & 0x0003;
 80013de:	4b3e      	ldr	r3, [pc, #248]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013e0:	795b      	ldrb	r3, [r3, #5]
 80013e2:	091b      	lsrs	r3, r3, #4
 80013e4:	b2db      	uxtb	r3, r3
 80013e6:	b25b      	sxtb	r3, r3
 80013e8:	f003 0303 	and.w	r3, r3, #3
 80013ec:	b25a      	sxtb	r2, r3
 80013ee:	4b3b      	ldr	r3, [pc, #236]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013f0:	725a      	strb	r2, [r3, #9]
	g_remote_cmd.mouse_x = ((int16_t) remote_raw_data[6] | ((int16_t) remote_raw_data[7] << 8));
 80013f2:	4b39      	ldr	r3, [pc, #228]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013f4:	799b      	ldrb	r3, [r3, #6]
 80013f6:	b21a      	sxth	r2, r3
 80013f8:	4b37      	ldr	r3, [pc, #220]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013fa:	79db      	ldrb	r3, [r3, #7]
 80013fc:	021b      	lsls	r3, r3, #8
 80013fe:	b21b      	sxth	r3, r3
 8001400:	4313      	orrs	r3, r2
 8001402:	b21a      	sxth	r2, r3
 8001404:	4b35      	ldr	r3, [pc, #212]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001406:	815a      	strh	r2, [r3, #10]
	g_remote_cmd.mouse_y = ((int16_t) remote_raw_data[8] | ((int16_t) remote_raw_data[9] << 8));
 8001408:	4b33      	ldr	r3, [pc, #204]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800140a:	7a1b      	ldrb	r3, [r3, #8]
 800140c:	b21a      	sxth	r2, r3
 800140e:	4b32      	ldr	r3, [pc, #200]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001410:	7a5b      	ldrb	r3, [r3, #9]
 8001412:	021b      	lsls	r3, r3, #8
 8001414:	b21b      	sxth	r3, r3
 8001416:	4313      	orrs	r3, r2
 8001418:	b21a      	sxth	r2, r3
 800141a:	4b30      	ldr	r3, [pc, #192]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800141c:	819a      	strh	r2, [r3, #12]
	g_remote_cmd.mouse_z = ((int16_t) remote_raw_data[10] | ((int16_t) remote_raw_data[11] << 8));
 800141e:	4b2e      	ldr	r3, [pc, #184]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001420:	7a9b      	ldrb	r3, [r3, #10]
 8001422:	b21a      	sxth	r2, r3
 8001424:	4b2c      	ldr	r3, [pc, #176]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001426:	7adb      	ldrb	r3, [r3, #11]
 8001428:	021b      	lsls	r3, r3, #8
 800142a:	b21b      	sxth	r3, r3
 800142c:	4313      	orrs	r3, r2
 800142e:	b21a      	sxth	r2, r3
 8001430:	4b2a      	ldr	r3, [pc, #168]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001432:	81da      	strh	r2, [r3, #14]
	g_remote_cmd.mouse_hori += g_remote_cmd.mouse_x;
 8001434:	4b29      	ldr	r3, [pc, #164]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001436:	691b      	ldr	r3, [r3, #16]
 8001438:	4a28      	ldr	r2, [pc, #160]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800143a:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800143e:	4413      	add	r3, r2
 8001440:	4a26      	ldr	r2, [pc, #152]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001442:	6113      	str	r3, [r2, #16]
	g_remote_cmd.mouse_vert += g_remote_cmd.mouse_y;
 8001444:	4b25      	ldr	r3, [pc, #148]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	4a24      	ldr	r2, [pc, #144]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800144a:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 800144e:	4413      	add	r3, r2
 8001450:	4a22      	ldr	r2, [pc, #136]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001452:	6153      	str	r3, [r2, #20]
	g_remote_cmd.mouse_left = (remote_raw_data[12]);
 8001454:	4b20      	ldr	r3, [pc, #128]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001456:	7b1b      	ldrb	r3, [r3, #12]
 8001458:	b25a      	sxtb	r2, r3
 800145a:	4b20      	ldr	r3, [pc, #128]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800145c:	761a      	strb	r2, [r3, #24]
	g_remote_cmd.mouse_right = (remote_raw_data[13]);
 800145e:	4b1e      	ldr	r3, [pc, #120]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001460:	7b5b      	ldrb	r3, [r3, #13]
 8001462:	b25a      	sxtb	r2, r3
 8001464:	4b1d      	ldr	r3, [pc, #116]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001466:	765a      	strb	r2, [r3, #25]
	g_remote_cmd.keyboard_keys = (remote_raw_data[14]);
 8001468:	4b1b      	ldr	r3, [pc, #108]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800146a:	7b9b      	ldrb	r3, [r3, #14]
 800146c:	461a      	mov	r2, r3
 800146e:	4b1b      	ldr	r3, [pc, #108]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001470:	835a      	strh	r2, [r3, #26]
	g_remote_cmd.side_dial = ((int16_t) remote_raw_data[16]) | ((int16_t) remote_raw_data[17] << 8);
 8001472:	4b19      	ldr	r3, [pc, #100]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001474:	7c1b      	ldrb	r3, [r3, #16]
 8001476:	b21a      	sxth	r2, r3
 8001478:	4b17      	ldr	r3, [pc, #92]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800147a:	7c5b      	ldrb	r3, [r3, #17]
 800147c:	021b      	lsls	r3, r3, #8
 800147e:	b21b      	sxth	r3, r3
 8001480:	4313      	orrs	r3, r2
 8001482:	b21a      	sxth	r2, r3
 8001484:	4b15      	ldr	r3, [pc, #84]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001486:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.side_dial -= JOYSTICK_OFFSET;
 8001488:	4b14      	ldr	r3, [pc, #80]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800148a:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800148e:	b29b      	uxth	r3, r3
 8001490:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001494:	b29b      	uxth	r3, r3
 8001496:	b21a      	sxth	r2, r3
 8001498:	4b10      	ldr	r3, [pc, #64]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800149a:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.last_time = HAL_GetTick();
 800149c:	f009 fddc 	bl	800b058 <HAL_GetTick>
 80014a0:	4603      	mov	r3, r0
 80014a2:	4a0e      	ldr	r2, [pc, #56]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80014a4:	6213      	str	r3, [r2, #32]

	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 80014a6:	2300      	movs	r3, #0
 80014a8:	60fb      	str	r3, [r7, #12]
	vTaskNotifyGiveFromISR(control_input_task_handle, &xHigherPriorityTaskWoken);
 80014aa:	4b0d      	ldr	r3, [pc, #52]	@ (80014e0 <dbus_remote_ISR+0x1f8>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	f107 020c 	add.w	r2, r7, #12
 80014b2:	4611      	mov	r1, r2
 80014b4:	4618      	mov	r0, r3
 80014b6:	f017 fdb1 	bl	801901c <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d007      	beq.n	80014d0 <dbus_remote_ISR+0x1e8>
 80014c0:	4b08      	ldr	r3, [pc, #32]	@ (80014e4 <dbus_remote_ISR+0x1fc>)
 80014c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80014c6:	601a      	str	r2, [r3, #0]
 80014c8:	f3bf 8f4f 	dsb	sy
 80014cc:	f3bf 8f6f 	isb	sy
}
 80014d0:	bf00      	nop
 80014d2:	3710      	adds	r7, #16
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}
 80014d8:	200007f4 	.word	0x200007f4
 80014dc:	20000808 	.word	0x20000808
 80014e0:	20003784 	.word	0x20003784
 80014e4:	e000ed04 	.word	0xe000ed04

080014e8 <dbus_remote_start>:
/**
 * This function starts the circular DMA for receiving on a UART port. It is specifically
 * written for the UART1 port for DBUS interface from the controller.
 */
HAL_StatusTypeDef dbus_remote_start()
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b08c      	sub	sp, #48	@ 0x30
 80014ec:	af00      	add	r7, sp, #0
	uint8_t *pData = remote_raw_data;
 80014ee:	4b4d      	ldr	r3, [pc, #308]	@ (8001624 <dbus_remote_start+0x13c>)
 80014f0:	60fb      	str	r3, [r7, #12]
	UART_HandleTypeDef *huart = &DBUS_UART;
 80014f2:	4b4d      	ldr	r3, [pc, #308]	@ (8001628 <dbus_remote_start+0x140>)
 80014f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t *tmp;

	/* Check that a Rx process is not already ongoing */
	if (huart->RxState == HAL_UART_STATE_READY) {
 80014f6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80014f8:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80014fc:	b2db      	uxtb	r3, r3
 80014fe:	2b20      	cmp	r3, #32
 8001500:	f040 808b 	bne.w	800161a <dbus_remote_start+0x132>
		if ((pData == NULL) || (REMOTE_DATA_SIZE == 0U)) {
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	2b00      	cmp	r3, #0
 8001508:	d101      	bne.n	800150e <dbus_remote_start+0x26>
			return HAL_ERROR;
 800150a:	2301      	movs	r3, #1
 800150c:	e086      	b.n	800161c <dbus_remote_start+0x134>
		}

		/* Process Locked */
		__HAL_LOCK(huart);
 800150e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001510:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001514:	2b01      	cmp	r3, #1
 8001516:	d101      	bne.n	800151c <dbus_remote_start+0x34>
 8001518:	2302      	movs	r3, #2
 800151a:	e07f      	b.n	800161c <dbus_remote_start+0x134>
 800151c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800151e:	2201      	movs	r2, #1
 8001520:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8001524:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001526:	2201      	movs	r2, #1
 8001528:	631a      	str	r2, [r3, #48]	@ 0x30
		huart->pRxBuffPtr = pData;
 800152a:	68fa      	ldr	r2, [r7, #12]
 800152c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800152e:	629a      	str	r2, [r3, #40]	@ 0x28
		huart->RxXferSize = REMOTE_DATA_SIZE;
 8001530:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001532:	2212      	movs	r2, #18
 8001534:	859a      	strh	r2, [r3, #44]	@ 0x2c

		huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001536:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001538:	2200      	movs	r2, #0
 800153a:	641a      	str	r2, [r3, #64]	@ 0x40
		huart->RxState = HAL_UART_STATE_BUSY_RX;
 800153c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800153e:	2222      	movs	r2, #34	@ 0x22
 8001540:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

		/* Set the UART DMA transfer complete callback */
		huart->hdmarx->XferCpltCallback = dbus_remote_ISR;
 8001544:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001546:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001548:	4a38      	ldr	r2, [pc, #224]	@ (800162c <dbus_remote_start+0x144>)
 800154a:	63da      	str	r2, [r3, #60]	@ 0x3c

		/* Set the DMA abort callback */
		huart->hdmarx->XferAbortCallback = NULL;
 800154c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800154e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001550:	2200      	movs	r2, #0
 8001552:	651a      	str	r2, [r3, #80]	@ 0x50

		/* Enable the DMA stream */
		tmp = (uint32_t *)&pData;
 8001554:	f107 030c 	add.w	r3, r7, #12
 8001558:	62bb      	str	r3, [r7, #40]	@ 0x28
		HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, REMOTE_DATA_SIZE);
 800155a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800155c:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800155e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	3304      	adds	r3, #4
 8001564:	4619      	mov	r1, r3
 8001566:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001568:	681a      	ldr	r2, [r3, #0]
 800156a:	2312      	movs	r3, #18
 800156c:	f00b f848 	bl	800c600 <HAL_DMA_Start_IT>

		/* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
		__HAL_UART_CLEAR_OREFLAG(huart);
 8001570:	2300      	movs	r3, #0
 8001572:	60bb      	str	r3, [r7, #8]
 8001574:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	60bb      	str	r3, [r7, #8]
 800157c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	685b      	ldr	r3, [r3, #4]
 8001582:	60bb      	str	r3, [r7, #8]
 8001584:	68bb      	ldr	r3, [r7, #8]

		/* Process Unlocked */
		__HAL_UNLOCK(huart);
 8001586:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001588:	2200      	movs	r2, #0
 800158a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		/* Enable the UART Parity Error Interrupt */
		SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800158e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	68da      	ldr	r2, [r3, #12]
 8001594:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800159c:	60da      	str	r2, [r3, #12]

		/* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
		SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800159e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	695a      	ldr	r2, [r3, #20]
 80015a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	f042 0201 	orr.w	r2, r2, #1
 80015ac:	615a      	str	r2, [r3, #20]

		/* Enable the DMA transfer for the receiver request by setting the DMAR bit
		in the UART CR3 register */
		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80015ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	695a      	ldr	r2, [r3, #20]
 80015b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80015bc:	615a      	str	r2, [r3, #20]

		if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80015be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015c2:	2b01      	cmp	r3, #1
 80015c4:	d125      	bne.n	8001612 <dbus_remote_start+0x12a>
		{
			__HAL_UART_CLEAR_IDLEFLAG(huart);
 80015c6:	2300      	movs	r3, #0
 80015c8:	607b      	str	r3, [r7, #4]
 80015ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	607b      	str	r3, [r7, #4]
 80015d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	685b      	ldr	r3, [r3, #4]
 80015d8:	607b      	str	r3, [r7, #4]
 80015da:	687b      	ldr	r3, [r7, #4]
			ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80015dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	330c      	adds	r3, #12
 80015e2:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80015e4:	697b      	ldr	r3, [r7, #20]
 80015e6:	e853 3f00 	ldrex	r3, [r3]
 80015ea:	613b      	str	r3, [r7, #16]
   return(result);
 80015ec:	693b      	ldr	r3, [r7, #16]
 80015ee:	f043 0310 	orr.w	r3, r3, #16
 80015f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015f4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	330c      	adds	r3, #12
 80015fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015fc:	623a      	str	r2, [r7, #32]
 80015fe:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001600:	69f9      	ldr	r1, [r7, #28]
 8001602:	6a3a      	ldr	r2, [r7, #32]
 8001604:	e841 2300 	strex	r3, r2, [r1]
 8001608:	61bb      	str	r3, [r7, #24]
   return(result);
 800160a:	69bb      	ldr	r3, [r7, #24]
 800160c:	2b00      	cmp	r3, #0
 800160e:	d1e5      	bne.n	80015dc <dbus_remote_start+0xf4>
 8001610:	e001      	b.n	8001616 <dbus_remote_start+0x12e>
		{
			/* In case of errors already pending when reception is started,
			   Interrupts may have already been raised and lead to reception abortion.
			   (Overrun error for instance).
			   In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
			return HAL_ERROR;
 8001612:	2301      	movs	r3, #1
 8001614:	e002      	b.n	800161c <dbus_remote_start+0x134>
		}
		return HAL_OK;
 8001616:	2300      	movs	r3, #0
 8001618:	e000      	b.n	800161c <dbus_remote_start+0x134>
	} else {
		return HAL_BUSY;
 800161a:	2302      	movs	r3, #2
	}
}
 800161c:	4618      	mov	r0, r3
 800161e:	3730      	adds	r7, #48	@ 0x30
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	200007f4 	.word	0x200007f4
 8001628:	20001c2c 	.word	0x20001c2c
 800162c:	080012e9 	.word	0x080012e9

08001630 <laser_on>:
 8001630:	b580      	push	{r7, lr}
 8001632:	af00      	add	r7, sp, #0
 8001634:	2200      	movs	r2, #0
 8001636:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800163a:	4802      	ldr	r0, [pc, #8]	@ (8001644 <laser_on+0x14>)
 800163c:	f00b fcdc 	bl	800cff8 <HAL_GPIO_WritePin>
 8001640:	bf00      	nop
 8001642:	bd80      	pop	{r7, pc}
 8001644:	40020800 	.word	0x40020800

08001648 <laser_off>:
 8001648:	b580      	push	{r7, lr}
 800164a:	af00      	add	r7, sp, #0
 800164c:	2200      	movs	r2, #0
 800164e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001652:	4802      	ldr	r0, [pc, #8]	@ (800165c <laser_off+0x14>)
 8001654:	f00b fcd0 	bl	800cff8 <HAL_GPIO_WritePin>
 8001658:	bf00      	nop
 800165a:	bd80      	pop	{r7, pc}
 800165c:	40020800 	.word	0x40020800

08001660 <hall_disable>:
void hall_enable(){
	hall_state = HALL_ON;
	  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
}

void hall_disable(){
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
	hall_state = HALL_OFF;
 8001664:	4b03      	ldr	r3, [pc, #12]	@ (8001674 <hall_disable+0x14>)
 8001666:	2201      	movs	r2, #1
 8001668:	701a      	strb	r2, [r3, #0]
	HAL_NVIC_DisableIRQ(EXTI15_10_IRQn);
 800166a:	2028      	movs	r0, #40	@ 0x28
 800166c:	f00a ff0c 	bl	800c488 <HAL_NVIC_DisableIRQ>
}
 8001670:	bf00      	nop
 8001672:	bd80      	pop	{r7, pc}
 8001674:	20000003 	.word	0x20000003

08001678 <hall_int>:


void hall_int(){
 8001678:	b580      	push	{r7, lr}
 800167a:	b082      	sub	sp, #8
 800167c:	af00      	add	r7, sp, #0
	static int32_t prev_tick;
	uint8_t curr_state = (GPIOE->IDR & GPIO_PIN_11) ? 1 : 0;
 800167e:	4b21      	ldr	r3, [pc, #132]	@ (8001704 <hall_int+0x8c>)
 8001680:	691b      	ldr	r3, [r3, #16]
 8001682:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001686:	2b00      	cmp	r3, #0
 8001688:	bf14      	ite	ne
 800168a:	2301      	movne	r3, #1
 800168c:	2300      	moveq	r3, #0
 800168e:	b2db      	uxtb	r3, r3
 8001690:	71fb      	strb	r3, [r7, #7]
	if (curr_state & GPIO_PIN_11){
 8001692:	79fb      	ldrb	r3, [r7, #7]
 8001694:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001698:	2b00      	cmp	r3, #0
 800169a:	d12e      	bne.n	80016fa <hall_int+0x82>
		//current state and previous state are the same, do nothing
		return;
	}
	if (hall_state == HALL_ON){
 800169c:	4b1a      	ldr	r3, [pc, #104]	@ (8001708 <hall_int+0x90>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d127      	bne.n	80016f4 <hall_int+0x7c>
	//assume hall sensor has changed state
		switch (curr_state){
 80016a4:	79fb      	ldrb	r3, [r7, #7]
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d009      	beq.n	80016be <hall_int+0x46>
 80016aa:	2b01      	cmp	r3, #1
 80016ac:	d11b      	bne.n	80016e6 <hall_int+0x6e>
		case HALL_OFF:
			//hall went from on to off
			//motor just brushed past
			prev_tick = g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks;
 80016ae:	4b17      	ldr	r3, [pc, #92]	@ (800170c <hall_int+0x94>)
 80016b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016b4:	f8d3 3268 	ldr.w	r3, [r3, #616]	@ 0x268
 80016b8:	4a15      	ldr	r2, [pc, #84]	@ (8001710 <hall_int+0x98>)
 80016ba:	6013      	str	r3, [r2, #0]

			break;
 80016bc:	e016      	b.n	80016ec <hall_int+0x74>
		case HALL_ON:
			//hall went from off to on
			//yaw motor just let goo
			g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks = (g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks-prev_tick)/2 ;
 80016be:	4b13      	ldr	r3, [pc, #76]	@ (800170c <hall_int+0x94>)
 80016c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016c4:	f8d3 2268 	ldr.w	r2, [r3, #616]	@ 0x268
 80016c8:	4b11      	ldr	r3, [pc, #68]	@ (8001710 <hall_int+0x98>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	1ad3      	subs	r3, r2, r3
 80016ce:	0fda      	lsrs	r2, r3, #31
 80016d0:	4413      	add	r3, r2
 80016d2:	105b      	asrs	r3, r3, #1
 80016d4:	461a      	mov	r2, r3
 80016d6:	4b0d      	ldr	r3, [pc, #52]	@ (800170c <hall_int+0x94>)
 80016d8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016dc:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
			//sensor is done, turn it off
			hall_disable();
 80016e0:	f7ff ffbe 	bl	8001660 <hall_disable>
			break;
 80016e4:	e002      	b.n	80016ec <hall_int+0x74>

		default:
			prev_state = 1;
 80016e6:	4b0b      	ldr	r3, [pc, #44]	@ (8001714 <hall_int+0x9c>)
 80016e8:	2201      	movs	r2, #1
 80016ea:	701a      	strb	r2, [r3, #0]
		}
		prev_state = curr_state;
 80016ec:	4a09      	ldr	r2, [pc, #36]	@ (8001714 <hall_int+0x9c>)
 80016ee:	79fb      	ldrb	r3, [r7, #7]
 80016f0:	7013      	strb	r3, [r2, #0]
		return;
 80016f2:	e003      	b.n	80016fc <hall_int+0x84>
	} else{
		hall_disable();
 80016f4:	f7ff ffb4 	bl	8001660 <hall_disable>
		return;
 80016f8:	e000      	b.n	80016fc <hall_int+0x84>
		return;
 80016fa:	bf00      	nop
	}
}
 80016fc:	3708      	adds	r7, #8
 80016fe:	46bd      	mov	sp, r7
 8001700:	bd80      	pop	{r7, pc}
 8001702:	bf00      	nop
 8001704:	40021000 	.word	0x40021000
 8001708:	20000003 	.word	0x20000003
 800170c:	20001e48 	.word	0x20001e48
 8001710:	2000082c 	.word	0x2000082c
 8001714:	20000002 	.word	0x20000002

08001718 <__NVIC_SystemReset>:
 8001718:	b480      	push	{r7}
 800171a:	af00      	add	r7, sp, #0
 800171c:	f3bf 8f4f 	dsb	sy
 8001720:	bf00      	nop
 8001722:	4b06      	ldr	r3, [pc, #24]	@ (800173c <__NVIC_SystemReset+0x24>)
 8001724:	68db      	ldr	r3, [r3, #12]
 8001726:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800172a:	4904      	ldr	r1, [pc, #16]	@ (800173c <__NVIC_SystemReset+0x24>)
 800172c:	4b04      	ldr	r3, [pc, #16]	@ (8001740 <__NVIC_SystemReset+0x28>)
 800172e:	4313      	orrs	r3, r2
 8001730:	60cb      	str	r3, [r1, #12]
 8001732:	f3bf 8f4f 	dsb	sy
 8001736:	bf00      	nop
 8001738:	bf00      	nop
 800173a:	e7fd      	b.n	8001738 <__NVIC_SystemReset+0x20>
 800173c:	e000ed00 	.word	0xe000ed00
 8001740:	05fa0004 	.word	0x05fa0004

08001744 <gyro_write_byte>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b086      	sub	sp, #24
 8001748:	af02      	add	r7, sp, #8
 800174a:	4603      	mov	r3, r0
 800174c:	460a      	mov	r2, r1
 800174e:	71fb      	strb	r3, [r7, #7]
 8001750:	4613      	mov	r3, r2
 8001752:	71bb      	strb	r3, [r7, #6]
 8001754:	2200      	movs	r2, #0
 8001756:	2101      	movs	r1, #1
 8001758:	4811      	ldr	r0, [pc, #68]	@ (80017a0 <gyro_write_byte+0x5c>)
 800175a:	f00b fc4d 	bl	800cff8 <HAL_GPIO_WritePin>
 800175e:	79fb      	ldrb	r3, [r7, #7]
 8001760:	73fb      	strb	r3, [r7, #15]
 8001762:	f107 020e 	add.w	r2, r7, #14
 8001766:	f107 010f 	add.w	r1, r7, #15
 800176a:	2364      	movs	r3, #100	@ 0x64
 800176c:	9300      	str	r3, [sp, #0]
 800176e:	2301      	movs	r3, #1
 8001770:	480c      	ldr	r0, [pc, #48]	@ (80017a4 <gyro_write_byte+0x60>)
 8001772:	f00f fac9 	bl	8010d08 <HAL_SPI_TransmitReceive>
 8001776:	79bb      	ldrb	r3, [r7, #6]
 8001778:	73fb      	strb	r3, [r7, #15]
 800177a:	f107 020e 	add.w	r2, r7, #14
 800177e:	f107 010f 	add.w	r1, r7, #15
 8001782:	2364      	movs	r3, #100	@ 0x64
 8001784:	9300      	str	r3, [sp, #0]
 8001786:	2301      	movs	r3, #1
 8001788:	4806      	ldr	r0, [pc, #24]	@ (80017a4 <gyro_write_byte+0x60>)
 800178a:	f00f fabd 	bl	8010d08 <HAL_SPI_TransmitReceive>
 800178e:	2201      	movs	r2, #1
 8001790:	2101      	movs	r1, #1
 8001792:	4803      	ldr	r0, [pc, #12]	@ (80017a0 <gyro_write_byte+0x5c>)
 8001794:	f00b fc30 	bl	800cff8 <HAL_GPIO_WritePin>
 8001798:	bf00      	nop
 800179a:	3710      	adds	r7, #16
 800179c:	46bd      	mov	sp, r7
 800179e:	bd80      	pop	{r7, pc}
 80017a0:	40020400 	.word	0x40020400
 80017a4:	20001964 	.word	0x20001964

080017a8 <gyro_read_byte>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b086      	sub	sp, #24
 80017ac:	af02      	add	r7, sp, #8
 80017ae:	4603      	mov	r3, r0
 80017b0:	71fb      	strb	r3, [r7, #7]
 80017b2:	2200      	movs	r2, #0
 80017b4:	2101      	movs	r1, #1
 80017b6:	4811      	ldr	r0, [pc, #68]	@ (80017fc <gyro_read_byte+0x54>)
 80017b8:	f00b fc1e 	bl	800cff8 <HAL_GPIO_WritePin>
 80017bc:	79fb      	ldrb	r3, [r7, #7]
 80017be:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80017c2:	b2db      	uxtb	r3, r3
 80017c4:	73bb      	strb	r3, [r7, #14]
 80017c6:	f107 020f 	add.w	r2, r7, #15
 80017ca:	f107 010e 	add.w	r1, r7, #14
 80017ce:	2364      	movs	r3, #100	@ 0x64
 80017d0:	9300      	str	r3, [sp, #0]
 80017d2:	2301      	movs	r3, #1
 80017d4:	480a      	ldr	r0, [pc, #40]	@ (8001800 <gyro_read_byte+0x58>)
 80017d6:	f00f fa97 	bl	8010d08 <HAL_SPI_TransmitReceive>
 80017da:	f107 010f 	add.w	r1, r7, #15
 80017de:	2364      	movs	r3, #100	@ 0x64
 80017e0:	2201      	movs	r2, #1
 80017e2:	4807      	ldr	r0, [pc, #28]	@ (8001800 <gyro_read_byte+0x58>)
 80017e4:	f00f f97f 	bl	8010ae6 <HAL_SPI_Receive>
 80017e8:	2201      	movs	r2, #1
 80017ea:	2101      	movs	r1, #1
 80017ec:	4803      	ldr	r0, [pc, #12]	@ (80017fc <gyro_read_byte+0x54>)
 80017ee:	f00b fc03 	bl	800cff8 <HAL_GPIO_WritePin>
 80017f2:	7bfb      	ldrb	r3, [r7, #15]
 80017f4:	4618      	mov	r0, r3
 80017f6:	3710      	adds	r7, #16
 80017f8:	46bd      	mov	sp, r7
 80017fa:	bd80      	pop	{r7, pc}
 80017fc:	40020400 	.word	0x40020400
 8001800:	20001964 	.word	0x20001964

08001804 <gyro_read_bytes>:
 8001804:	b580      	push	{r7, lr}
 8001806:	b086      	sub	sp, #24
 8001808:	af02      	add	r7, sp, #8
 800180a:	4603      	mov	r3, r0
 800180c:	6039      	str	r1, [r7, #0]
 800180e:	71fb      	strb	r3, [r7, #7]
 8001810:	4613      	mov	r3, r2
 8001812:	71bb      	strb	r3, [r7, #6]
 8001814:	2200      	movs	r2, #0
 8001816:	2101      	movs	r1, #1
 8001818:	4811      	ldr	r0, [pc, #68]	@ (8001860 <gyro_read_bytes+0x5c>)
 800181a:	f00b fbed 	bl	800cff8 <HAL_GPIO_WritePin>
 800181e:	79fb      	ldrb	r3, [r7, #7]
 8001820:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001824:	b2db      	uxtb	r3, r3
 8001826:	73fb      	strb	r3, [r7, #15]
 8001828:	f107 020e 	add.w	r2, r7, #14
 800182c:	f107 010f 	add.w	r1, r7, #15
 8001830:	2364      	movs	r3, #100	@ 0x64
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	2301      	movs	r3, #1
 8001836:	480b      	ldr	r0, [pc, #44]	@ (8001864 <gyro_read_bytes+0x60>)
 8001838:	f00f fa66 	bl	8010d08 <HAL_SPI_TransmitReceive>
 800183c:	79bb      	ldrb	r3, [r7, #6]
 800183e:	b29a      	uxth	r2, r3
 8001840:	2364      	movs	r3, #100	@ 0x64
 8001842:	6839      	ldr	r1, [r7, #0]
 8001844:	4807      	ldr	r0, [pc, #28]	@ (8001864 <gyro_read_bytes+0x60>)
 8001846:	f00f f94e 	bl	8010ae6 <HAL_SPI_Receive>
 800184a:	2201      	movs	r2, #1
 800184c:	2101      	movs	r1, #1
 800184e:	4804      	ldr	r0, [pc, #16]	@ (8001860 <gyro_read_bytes+0x5c>)
 8001850:	f00b fbd2 	bl	800cff8 <HAL_GPIO_WritePin>
 8001854:	2300      	movs	r3, #0
 8001856:	4618      	mov	r0, r3
 8001858:	3710      	adds	r7, #16
 800185a:	46bd      	mov	sp, r7
 800185c:	bd80      	pop	{r7, pc}
 800185e:	bf00      	nop
 8001860:	40020400 	.word	0x40020400
 8001864:	20001964 	.word	0x20001964

08001868 <accel_write_byte>:
 8001868:	b580      	push	{r7, lr}
 800186a:	b086      	sub	sp, #24
 800186c:	af02      	add	r7, sp, #8
 800186e:	4603      	mov	r3, r0
 8001870:	460a      	mov	r2, r1
 8001872:	71fb      	strb	r3, [r7, #7]
 8001874:	4613      	mov	r3, r2
 8001876:	71bb      	strb	r3, [r7, #6]
 8001878:	2200      	movs	r2, #0
 800187a:	2110      	movs	r1, #16
 800187c:	4811      	ldr	r0, [pc, #68]	@ (80018c4 <accel_write_byte+0x5c>)
 800187e:	f00b fbbb 	bl	800cff8 <HAL_GPIO_WritePin>
 8001882:	79fb      	ldrb	r3, [r7, #7]
 8001884:	73fb      	strb	r3, [r7, #15]
 8001886:	f107 020e 	add.w	r2, r7, #14
 800188a:	f107 010f 	add.w	r1, r7, #15
 800188e:	2364      	movs	r3, #100	@ 0x64
 8001890:	9300      	str	r3, [sp, #0]
 8001892:	2301      	movs	r3, #1
 8001894:	480c      	ldr	r0, [pc, #48]	@ (80018c8 <accel_write_byte+0x60>)
 8001896:	f00f fa37 	bl	8010d08 <HAL_SPI_TransmitReceive>
 800189a:	79bb      	ldrb	r3, [r7, #6]
 800189c:	73fb      	strb	r3, [r7, #15]
 800189e:	f107 020e 	add.w	r2, r7, #14
 80018a2:	f107 010f 	add.w	r1, r7, #15
 80018a6:	2364      	movs	r3, #100	@ 0x64
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	2301      	movs	r3, #1
 80018ac:	4806      	ldr	r0, [pc, #24]	@ (80018c8 <accel_write_byte+0x60>)
 80018ae:	f00f fa2b 	bl	8010d08 <HAL_SPI_TransmitReceive>
 80018b2:	2201      	movs	r2, #1
 80018b4:	2110      	movs	r1, #16
 80018b6:	4803      	ldr	r0, [pc, #12]	@ (80018c4 <accel_write_byte+0x5c>)
 80018b8:	f00b fb9e 	bl	800cff8 <HAL_GPIO_WritePin>
 80018bc:	bf00      	nop
 80018be:	3710      	adds	r7, #16
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bd80      	pop	{r7, pc}
 80018c4:	40020000 	.word	0x40020000
 80018c8:	20001964 	.word	0x20001964

080018cc <accel_read_byte>:
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b086      	sub	sp, #24
 80018d0:	af02      	add	r7, sp, #8
 80018d2:	4603      	mov	r3, r0
 80018d4:	71fb      	strb	r3, [r7, #7]
 80018d6:	2200      	movs	r2, #0
 80018d8:	2110      	movs	r1, #16
 80018da:	4816      	ldr	r0, [pc, #88]	@ (8001934 <accel_read_byte+0x68>)
 80018dc:	f00b fb8c 	bl	800cff8 <HAL_GPIO_WritePin>
 80018e0:	79fb      	ldrb	r3, [r7, #7]
 80018e2:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80018e6:	b2db      	uxtb	r3, r3
 80018e8:	73fb      	strb	r3, [r7, #15]
 80018ea:	f107 020e 	add.w	r2, r7, #14
 80018ee:	f107 010f 	add.w	r1, r7, #15
 80018f2:	2364      	movs	r3, #100	@ 0x64
 80018f4:	9300      	str	r3, [sp, #0]
 80018f6:	2301      	movs	r3, #1
 80018f8:	480f      	ldr	r0, [pc, #60]	@ (8001938 <accel_read_byte+0x6c>)
 80018fa:	f00f fa05 	bl	8010d08 <HAL_SPI_TransmitReceive>
 80018fe:	2355      	movs	r3, #85	@ 0x55
 8001900:	73fb      	strb	r3, [r7, #15]
 8001902:	f107 010e 	add.w	r1, r7, #14
 8001906:	2364      	movs	r3, #100	@ 0x64
 8001908:	2201      	movs	r2, #1
 800190a:	480b      	ldr	r0, [pc, #44]	@ (8001938 <accel_read_byte+0x6c>)
 800190c:	f00f f8eb 	bl	8010ae6 <HAL_SPI_Receive>
 8001910:	f107 010e 	add.w	r1, r7, #14
 8001914:	2364      	movs	r3, #100	@ 0x64
 8001916:	2201      	movs	r2, #1
 8001918:	4807      	ldr	r0, [pc, #28]	@ (8001938 <accel_read_byte+0x6c>)
 800191a:	f00f f8e4 	bl	8010ae6 <HAL_SPI_Receive>
 800191e:	2201      	movs	r2, #1
 8001920:	2110      	movs	r1, #16
 8001922:	4804      	ldr	r0, [pc, #16]	@ (8001934 <accel_read_byte+0x68>)
 8001924:	f00b fb68 	bl	800cff8 <HAL_GPIO_WritePin>
 8001928:	7bbb      	ldrb	r3, [r7, #14]
 800192a:	4618      	mov	r0, r3
 800192c:	3710      	adds	r7, #16
 800192e:	46bd      	mov	sp, r7
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	40020000 	.word	0x40020000
 8001938:	20001964 	.word	0x20001964

0800193c <accel_read_bytes>:
 800193c:	b580      	push	{r7, lr}
 800193e:	b086      	sub	sp, #24
 8001940:	af02      	add	r7, sp, #8
 8001942:	4603      	mov	r3, r0
 8001944:	6039      	str	r1, [r7, #0]
 8001946:	71fb      	strb	r3, [r7, #7]
 8001948:	4613      	mov	r3, r2
 800194a:	71bb      	strb	r3, [r7, #6]
 800194c:	2200      	movs	r2, #0
 800194e:	2110      	movs	r1, #16
 8001950:	4814      	ldr	r0, [pc, #80]	@ (80019a4 <accel_read_bytes+0x68>)
 8001952:	f00b fb51 	bl	800cff8 <HAL_GPIO_WritePin>
 8001956:	79fb      	ldrb	r3, [r7, #7]
 8001958:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800195c:	b2db      	uxtb	r3, r3
 800195e:	73fb      	strb	r3, [r7, #15]
 8001960:	f107 020e 	add.w	r2, r7, #14
 8001964:	f107 010f 	add.w	r1, r7, #15
 8001968:	2364      	movs	r3, #100	@ 0x64
 800196a:	9300      	str	r3, [sp, #0]
 800196c:	2301      	movs	r3, #1
 800196e:	480e      	ldr	r0, [pc, #56]	@ (80019a8 <accel_read_bytes+0x6c>)
 8001970:	f00f f9ca 	bl	8010d08 <HAL_SPI_TransmitReceive>
 8001974:	f107 010e 	add.w	r1, r7, #14
 8001978:	2364      	movs	r3, #100	@ 0x64
 800197a:	2201      	movs	r2, #1
 800197c:	480a      	ldr	r0, [pc, #40]	@ (80019a8 <accel_read_bytes+0x6c>)
 800197e:	f00f f8b2 	bl	8010ae6 <HAL_SPI_Receive>
 8001982:	79bb      	ldrb	r3, [r7, #6]
 8001984:	b29a      	uxth	r2, r3
 8001986:	2364      	movs	r3, #100	@ 0x64
 8001988:	6839      	ldr	r1, [r7, #0]
 800198a:	4807      	ldr	r0, [pc, #28]	@ (80019a8 <accel_read_bytes+0x6c>)
 800198c:	f00f f8ab 	bl	8010ae6 <HAL_SPI_Receive>
 8001990:	2201      	movs	r2, #1
 8001992:	2110      	movs	r1, #16
 8001994:	4803      	ldr	r0, [pc, #12]	@ (80019a4 <accel_read_bytes+0x68>)
 8001996:	f00b fb2f 	bl	800cff8 <HAL_GPIO_WritePin>
 800199a:	2300      	movs	r3, #0
 800199c:	4618      	mov	r0, r3
 800199e:	3710      	adds	r7, #16
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bd80      	pop	{r7, pc}
 80019a4:	40020000 	.word	0x40020000
 80019a8:	20001964 	.word	0x20001964

080019ac <gyro_init>:
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b082      	sub	sp, #8
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	21b6      	movs	r1, #182	@ 0xb6
 80019b4:	2014      	movs	r0, #20
 80019b6:	f7ff fec5 	bl	8001744 <gyro_write_byte>
 80019ba:	200a      	movs	r0, #10
 80019bc:	f009 fb58 	bl	800b070 <HAL_Delay>
 80019c0:	2100      	movs	r1, #0
 80019c2:	2011      	movs	r0, #17
 80019c4:	f7ff febe 	bl	8001744 <gyro_write_byte>
 80019c8:	2002      	movs	r0, #2
 80019ca:	f009 fb51 	bl	800b070 <HAL_Delay>
 80019ce:	2000      	movs	r0, #0
 80019d0:	f7ff feea 	bl	80017a8 <gyro_read_byte>
 80019d4:	4603      	mov	r3, r0
 80019d6:	80fb      	strh	r3, [r7, #6]
 80019d8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80019dc:	2b0f      	cmp	r3, #15
 80019de:	d001      	beq.n	80019e4 <gyro_init+0x38>
 80019e0:	f7ff fe9a 	bl	8001718 <__NVIC_SystemReset>
 80019e4:	2002      	movs	r0, #2
 80019e6:	f009 fb43 	bl	800b070 <HAL_Delay>
 80019ea:	2102      	movs	r1, #2
 80019ec:	200f      	movs	r0, #15
 80019ee:	f7ff fea9 	bl	8001744 <gyro_write_byte>
 80019f2:	2002      	movs	r0, #2
 80019f4:	f009 fb3c 	bl	800b070 <HAL_Delay>
 80019f8:	2181      	movs	r1, #129	@ 0x81
 80019fa:	2010      	movs	r0, #16
 80019fc:	f7ff fea2 	bl	8001744 <gyro_write_byte>
 8001a00:	2002      	movs	r0, #2
 8001a02:	f009 fb35 	bl	800b070 <HAL_Delay>
 8001a06:	2101      	movs	r1, #1
 8001a08:	2016      	movs	r0, #22
 8001a0a:	f7ff fe9b 	bl	8001744 <gyro_write_byte>
 8001a0e:	2002      	movs	r0, #2
 8001a10:	f009 fb2e 	bl	800b070 <HAL_Delay>
 8001a14:	2101      	movs	r1, #1
 8001a16:	2018      	movs	r0, #24
 8001a18:	f7ff fe94 	bl	8001744 <gyro_write_byte>
 8001a1c:	2002      	movs	r0, #2
 8001a1e:	f009 fb27 	bl	800b070 <HAL_Delay>
 8001a22:	2300      	movs	r3, #0
 8001a24:	4618      	mov	r0, r3
 8001a26:	3708      	adds	r7, #8
 8001a28:	46bd      	mov	sp, r7
 8001a2a:	bd80      	pop	{r7, pc}

08001a2c <accel_init>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b082      	sub	sp, #8
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	2000      	movs	r0, #0
 8001a34:	f7ff ff4a 	bl	80018cc <accel_read_byte>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	71fb      	strb	r3, [r7, #7]
 8001a3c:	2002      	movs	r0, #2
 8001a3e:	f009 fb17 	bl	800b070 <HAL_Delay>
 8001a42:	2000      	movs	r0, #0
 8001a44:	f7ff ff42 	bl	80018cc <accel_read_byte>
 8001a48:	4603      	mov	r3, r0
 8001a4a:	71fb      	strb	r3, [r7, #7]
 8001a4c:	2002      	movs	r0, #2
 8001a4e:	f009 fb0f 	bl	800b070 <HAL_Delay>
 8001a52:	21b6      	movs	r1, #182	@ 0xb6
 8001a54:	207e      	movs	r0, #126	@ 0x7e
 8001a56:	f7ff ff07 	bl	8001868 <accel_write_byte>
 8001a5a:	200a      	movs	r0, #10
 8001a5c:	f009 fb08 	bl	800b070 <HAL_Delay>
 8001a60:	2000      	movs	r0, #0
 8001a62:	f7ff ff33 	bl	80018cc <accel_read_byte>
 8001a66:	4603      	mov	r3, r0
 8001a68:	71fb      	strb	r3, [r7, #7]
 8001a6a:	2002      	movs	r0, #2
 8001a6c:	f009 fb00 	bl	800b070 <HAL_Delay>
 8001a70:	2000      	movs	r0, #0
 8001a72:	f7ff ff2b 	bl	80018cc <accel_read_byte>
 8001a76:	4603      	mov	r3, r0
 8001a78:	71fb      	strb	r3, [r7, #7]
 8001a7a:	2002      	movs	r0, #2
 8001a7c:	f009 faf8 	bl	800b070 <HAL_Delay>
 8001a80:	79fb      	ldrb	r3, [r7, #7]
 8001a82:	2b1e      	cmp	r3, #30
 8001a84:	d001      	beq.n	8001a8a <accel_init+0x5e>
 8001a86:	2301      	movs	r3, #1
 8001a88:	e023      	b.n	8001ad2 <accel_init+0xa6>
 8001a8a:	2104      	movs	r1, #4
 8001a8c:	207d      	movs	r0, #125	@ 0x7d
 8001a8e:	f7ff feeb 	bl	8001868 <accel_write_byte>
 8001a92:	2002      	movs	r0, #2
 8001a94:	f009 faec 	bl	800b070 <HAL_Delay>
 8001a98:	2100      	movs	r1, #0
 8001a9a:	207c      	movs	r0, #124	@ 0x7c
 8001a9c:	f7ff fee4 	bl	8001868 <accel_write_byte>
 8001aa0:	2002      	movs	r0, #2
 8001aa2:	f009 fae5 	bl	800b070 <HAL_Delay>
 8001aa6:	21a9      	movs	r1, #169	@ 0xa9
 8001aa8:	2040      	movs	r0, #64	@ 0x40
 8001aaa:	f7ff fedd 	bl	8001868 <accel_write_byte>
 8001aae:	2002      	movs	r0, #2
 8001ab0:	f009 fade 	bl	800b070 <HAL_Delay>
 8001ab4:	2101      	movs	r1, #1
 8001ab6:	2041      	movs	r0, #65	@ 0x41
 8001ab8:	f7ff fed6 	bl	8001868 <accel_write_byte>
 8001abc:	2002      	movs	r0, #2
 8001abe:	f009 fad7 	bl	800b070 <HAL_Delay>
 8001ac2:	2108      	movs	r1, #8
 8001ac4:	2053      	movs	r0, #83	@ 0x53
 8001ac6:	f7ff fecf 	bl	8001868 <accel_write_byte>
 8001aca:	2002      	movs	r0, #2
 8001acc:	f009 fad0 	bl	800b070 <HAL_Delay>
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	3708      	adds	r7, #8
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	bd80      	pop	{r7, pc}
	...

08001adc <mag_read_single_reg>:
 8001adc:	b580      	push	{r7, lr}
 8001ade:	b088      	sub	sp, #32
 8001ae0:	af04      	add	r7, sp, #16
 8001ae2:	4603      	mov	r3, r0
 8001ae4:	71fb      	strb	r3, [r7, #7]
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	73fb      	strb	r3, [r7, #15]
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	b29a      	uxth	r2, r3
 8001aee:	2305      	movs	r3, #5
 8001af0:	9302      	str	r3, [sp, #8]
 8001af2:	2301      	movs	r3, #1
 8001af4:	9301      	str	r3, [sp, #4]
 8001af6:	f107 030f 	add.w	r3, r7, #15
 8001afa:	9300      	str	r3, [sp, #0]
 8001afc:	2301      	movs	r3, #1
 8001afe:	211c      	movs	r1, #28
 8001b00:	4803      	ldr	r0, [pc, #12]	@ (8001b10 <mag_read_single_reg+0x34>)
 8001b02:	f00b fce9 	bl	800d4d8 <HAL_I2C_Mem_Read>
 8001b06:	7bfb      	ldrb	r3, [r7, #15]
 8001b08:	4618      	mov	r0, r3
 8001b0a:	3710      	adds	r7, #16
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	bd80      	pop	{r7, pc}
 8001b10:	20001840 	.word	0x20001840

08001b14 <mag_write_single_reg>:
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b086      	sub	sp, #24
 8001b18:	af04      	add	r7, sp, #16
 8001b1a:	4603      	mov	r3, r0
 8001b1c:	460a      	mov	r2, r1
 8001b1e:	71fb      	strb	r3, [r7, #7]
 8001b20:	4613      	mov	r3, r2
 8001b22:	71bb      	strb	r3, [r7, #6]
 8001b24:	79fb      	ldrb	r3, [r7, #7]
 8001b26:	b29a      	uxth	r2, r3
 8001b28:	2305      	movs	r3, #5
 8001b2a:	9302      	str	r3, [sp, #8]
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	9301      	str	r3, [sp, #4]
 8001b30:	1dbb      	adds	r3, r7, #6
 8001b32:	9300      	str	r3, [sp, #0]
 8001b34:	2301      	movs	r3, #1
 8001b36:	211c      	movs	r1, #28
 8001b38:	4803      	ldr	r0, [pc, #12]	@ (8001b48 <mag_write_single_reg+0x34>)
 8001b3a:	f00b fbd3 	bl	800d2e4 <HAL_I2C_Mem_Write>
 8001b3e:	bf00      	nop
 8001b40:	3708      	adds	r7, #8
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	20001840 	.word	0x20001840

08001b4c <mag_read_multi_reg_dma>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b084      	sub	sp, #16
 8001b50:	af02      	add	r7, sp, #8
 8001b52:	4603      	mov	r3, r0
 8001b54:	603a      	str	r2, [r7, #0]
 8001b56:	71fb      	strb	r3, [r7, #7]
 8001b58:	460b      	mov	r3, r1
 8001b5a:	80bb      	strh	r3, [r7, #4]
 8001b5c:	79fb      	ldrb	r3, [r7, #7]
 8001b5e:	b29a      	uxth	r2, r3
 8001b60:	88bb      	ldrh	r3, [r7, #4]
 8001b62:	9301      	str	r3, [sp, #4]
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	9300      	str	r3, [sp, #0]
 8001b68:	2301      	movs	r3, #1
 8001b6a:	211c      	movs	r1, #28
 8001b6c:	4803      	ldr	r0, [pc, #12]	@ (8001b7c <mag_read_multi_reg_dma+0x30>)
 8001b6e:	f00b fed9 	bl	800d924 <HAL_I2C_Mem_Read_DMA>
 8001b72:	bf00      	nop
 8001b74:	3708      	adds	r7, #8
 8001b76:	46bd      	mov	sp, r7
 8001b78:	bd80      	pop	{r7, pc}
 8001b7a:	bf00      	nop
 8001b7c:	20001840 	.word	0x20001840

08001b80 <imu_init>:
 8001b80:	b580      	push	{r7, lr}
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	2200      	movs	r2, #0
 8001b86:	2110      	movs	r1, #16
 8001b88:	480e      	ldr	r0, [pc, #56]	@ (8001bc4 <imu_init+0x44>)
 8001b8a:	f00b fa35 	bl	800cff8 <HAL_GPIO_WritePin>
 8001b8e:	2200      	movs	r2, #0
 8001b90:	2101      	movs	r1, #1
 8001b92:	480d      	ldr	r0, [pc, #52]	@ (8001bc8 <imu_init+0x48>)
 8001b94:	f00b fa30 	bl	800cff8 <HAL_GPIO_WritePin>
 8001b98:	2064      	movs	r0, #100	@ 0x64
 8001b9a:	f009 fa69 	bl	800b070 <HAL_Delay>
 8001b9e:	2201      	movs	r2, #1
 8001ba0:	2110      	movs	r1, #16
 8001ba2:	4808      	ldr	r0, [pc, #32]	@ (8001bc4 <imu_init+0x44>)
 8001ba4:	f00b fa28 	bl	800cff8 <HAL_GPIO_WritePin>
 8001ba8:	2201      	movs	r2, #1
 8001baa:	2101      	movs	r1, #1
 8001bac:	4806      	ldr	r0, [pc, #24]	@ (8001bc8 <imu_init+0x48>)
 8001bae:	f00b fa23 	bl	800cff8 <HAL_GPIO_WritePin>
 8001bb2:	f7ff fefb 	bl	80019ac <gyro_init>
 8001bb6:	f7ff ff39 	bl	8001a2c <accel_init>
 8001bba:	f000 f905 	bl	8001dc8 <ist8310_init>
 8001bbe:	bf00      	nop
 8001bc0:	bd80      	pop	{r7, pc}
 8001bc2:	bf00      	nop
 8001bc4:	40020000 	.word	0x40020000
 8001bc8:	40020400 	.word	0x40020400

08001bcc <imu_start_ints>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	2180      	movs	r1, #128	@ 0x80
 8001bd2:	2015      	movs	r0, #21
 8001bd4:	f7ff fdb6 	bl	8001744 <gyro_write_byte>
 8001bd8:	200a      	movs	r0, #10
 8001bda:	f016 fc03 	bl	80183e4 <vTaskDelay>
 8001bde:	2104      	movs	r1, #4
 8001be0:	2058      	movs	r0, #88	@ 0x58
 8001be2:	f7ff fe41 	bl	8001868 <accel_write_byte>
 8001be6:	200a      	movs	r0, #10
 8001be8:	f016 fbfc 	bl	80183e4 <vTaskDelay>
 8001bec:	2108      	movs	r1, #8
 8001bee:	200b      	movs	r0, #11
 8001bf0:	f7ff ff90 	bl	8001b14 <mag_write_single_reg>
 8001bf4:	4b02      	ldr	r3, [pc, #8]	@ (8001c00 <imu_start_ints+0x34>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	701a      	strb	r2, [r3, #0]
 8001bfa:	bf00      	nop
 8001bfc:	bd80      	pop	{r7, pc}
 8001bfe:	bf00      	nop
 8001c00:	20000880 	.word	0x20000880

08001c04 <accel_get_data>:
 8001c04:	b580      	push	{r7, lr}
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	2206      	movs	r2, #6
 8001c0a:	4903      	ldr	r1, [pc, #12]	@ (8001c18 <accel_get_data+0x14>)
 8001c0c:	2012      	movs	r0, #18
 8001c0e:	f7ff fe95 	bl	800193c <accel_read_bytes>
 8001c12:	bf00      	nop
 8001c14:	bd80      	pop	{r7, pc}
 8001c16:	bf00      	nop
 8001c18:	20000830 	.word	0x20000830

08001c1c <accel_process_data>:
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b082      	sub	sp, #8
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	4b28      	ldr	r3, [pc, #160]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c24:	785b      	ldrb	r3, [r3, #1]
 8001c26:	021b      	lsls	r3, r3, #8
 8001c28:	b21a      	sxth	r2, r3
 8001c2a:	4b26      	ldr	r3, [pc, #152]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c2c:	781b      	ldrb	r3, [r3, #0]
 8001c2e:	b21b      	sxth	r3, r3
 8001c30:	4313      	orrs	r3, r2
 8001c32:	80fb      	strh	r3, [r7, #6]
 8001c34:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c38:	ee07 3a90 	vmov	s15, r3
 8001c3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c40:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8001cc8 <accel_process_data+0xac>
 8001c44:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c48:	4b20      	ldr	r3, [pc, #128]	@ (8001ccc <accel_process_data+0xb0>)
 8001c4a:	edc3 7a04 	vstr	s15, [r3, #16]
 8001c4e:	4b1d      	ldr	r3, [pc, #116]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c50:	78db      	ldrb	r3, [r3, #3]
 8001c52:	021b      	lsls	r3, r3, #8
 8001c54:	b21a      	sxth	r2, r3
 8001c56:	4b1b      	ldr	r3, [pc, #108]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c58:	789b      	ldrb	r3, [r3, #2]
 8001c5a:	b21b      	sxth	r3, r3
 8001c5c:	4313      	orrs	r3, r2
 8001c5e:	80fb      	strh	r3, [r7, #6]
 8001c60:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c64:	ee07 3a90 	vmov	s15, r3
 8001c68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c6c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001cc8 <accel_process_data+0xac>
 8001c70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c74:	4b15      	ldr	r3, [pc, #84]	@ (8001ccc <accel_process_data+0xb0>)
 8001c76:	edc3 7a05 	vstr	s15, [r3, #20]
 8001c7a:	4b12      	ldr	r3, [pc, #72]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c7c:	795b      	ldrb	r3, [r3, #5]
 8001c7e:	021b      	lsls	r3, r3, #8
 8001c80:	b21a      	sxth	r2, r3
 8001c82:	4b10      	ldr	r3, [pc, #64]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c84:	791b      	ldrb	r3, [r3, #4]
 8001c86:	b21b      	sxth	r3, r3
 8001c88:	4313      	orrs	r3, r2
 8001c8a:	80fb      	strh	r3, [r7, #6]
 8001c8c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c90:	ee07 3a90 	vmov	s15, r3
 8001c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c98:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001cc8 <accel_process_data+0xac>
 8001c9c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ca0:	4b0a      	ldr	r3, [pc, #40]	@ (8001ccc <accel_process_data+0xb0>)
 8001ca2:	edc3 7a06 	vstr	s15, [r3, #24]
 8001ca6:	f009 f9d7 	bl	800b058 <HAL_GetTick>
 8001caa:	4603      	mov	r3, r0
 8001cac:	4a07      	ldr	r2, [pc, #28]	@ (8001ccc <accel_process_data+0xb0>)
 8001cae:	61d3      	str	r3, [r2, #28]
 8001cb0:	4b06      	ldr	r3, [pc, #24]	@ (8001ccc <accel_process_data+0xb0>)
 8001cb2:	3310      	adds	r3, #16
 8001cb4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cb6:	f005 fb27 	bl	8007308 <accel_data_ready>
 8001cba:	bf00      	nop
 8001cbc:	3708      	adds	r7, #8
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000830 	.word	0x20000830
 8001cc8:	3aeb3333 	.word	0x3aeb3333
 8001ccc:	20000848 	.word	0x20000848

08001cd0 <gyro_get_data>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	2206      	movs	r2, #6
 8001cd6:	4903      	ldr	r1, [pc, #12]	@ (8001ce4 <gyro_get_data+0x14>)
 8001cd8:	2002      	movs	r0, #2
 8001cda:	f7ff fd93 	bl	8001804 <gyro_read_bytes>
 8001cde:	bf00      	nop
 8001ce0:	bd80      	pop	{r7, pc}
 8001ce2:	bf00      	nop
 8001ce4:	20000838 	.word	0x20000838

08001ce8 <gyro_process_data>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b082      	sub	sp, #8
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	4b33      	ldr	r3, [pc, #204]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf0:	785b      	ldrb	r3, [r3, #1]
 8001cf2:	021b      	lsls	r3, r3, #8
 8001cf4:	b21a      	sxth	r2, r3
 8001cf6:	4b31      	ldr	r3, [pc, #196]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf8:	781b      	ldrb	r3, [r3, #0]
 8001cfa:	b21b      	sxth	r3, r3
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	80fb      	strh	r3, [r7, #6]
 8001d00:	88fa      	ldrh	r2, [r7, #6]
 8001d02:	4b2f      	ldr	r3, [pc, #188]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d04:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	@ 0x32
 8001d08:	b29b      	uxth	r3, r3
 8001d0a:	1ad3      	subs	r3, r2, r3
 8001d0c:	b29b      	uxth	r3, r3
 8001d0e:	80fb      	strh	r3, [r7, #6]
 8001d10:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d14:	ee07 3a90 	vmov	s15, r3
 8001d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d1c:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d24:	4b26      	ldr	r3, [pc, #152]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d26:	edc3 7a00 	vstr	s15, [r3]
 8001d2a:	4b24      	ldr	r3, [pc, #144]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d2c:	78db      	ldrb	r3, [r3, #3]
 8001d2e:	021b      	lsls	r3, r3, #8
 8001d30:	b21a      	sxth	r2, r3
 8001d32:	4b22      	ldr	r3, [pc, #136]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d34:	789b      	ldrb	r3, [r3, #2]
 8001d36:	b21b      	sxth	r3, r3
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	80fb      	strh	r3, [r7, #6]
 8001d3c:	88fa      	ldrh	r2, [r7, #6]
 8001d3e:	4b20      	ldr	r3, [pc, #128]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d40:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	@ 0x34
 8001d44:	b29b      	uxth	r3, r3
 8001d46:	1ad3      	subs	r3, r2, r3
 8001d48:	b29b      	uxth	r3, r3
 8001d4a:	80fb      	strh	r3, [r7, #6]
 8001d4c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d50:	ee07 3a90 	vmov	s15, r3
 8001d54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d58:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d60:	4b17      	ldr	r3, [pc, #92]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d62:	edc3 7a01 	vstr	s15, [r3, #4]
 8001d66:	4b15      	ldr	r3, [pc, #84]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d68:	795b      	ldrb	r3, [r3, #5]
 8001d6a:	021b      	lsls	r3, r3, #8
 8001d6c:	b21a      	sxth	r2, r3
 8001d6e:	4b13      	ldr	r3, [pc, #76]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d70:	791b      	ldrb	r3, [r3, #4]
 8001d72:	b21b      	sxth	r3, r3
 8001d74:	4313      	orrs	r3, r2
 8001d76:	80fb      	strh	r3, [r7, #6]
 8001d78:	88fa      	ldrh	r2, [r7, #6]
 8001d7a:	4b11      	ldr	r3, [pc, #68]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d7c:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	@ 0x36
 8001d80:	b29b      	uxth	r3, r3
 8001d82:	1ad3      	subs	r3, r2, r3
 8001d84:	b29b      	uxth	r3, r3
 8001d86:	80fb      	strh	r3, [r7, #6]
 8001d88:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d8c:	ee07 3a90 	vmov	s15, r3
 8001d90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d94:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d9c:	4b08      	ldr	r3, [pc, #32]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d9e:	edc3 7a02 	vstr	s15, [r3, #8]
 8001da2:	f009 f959 	bl	800b058 <HAL_GetTick>
 8001da6:	4603      	mov	r3, r0
 8001da8:	4a05      	ldr	r2, [pc, #20]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001daa:	60d3      	str	r3, [r2, #12]
 8001dac:	4b04      	ldr	r3, [pc, #16]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001dae:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001db0:	f005 fa5a 	bl	8007268 <gyro_data_ready>
 8001db4:	bf00      	nop
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}
 8001dbc:	20000838 	.word	0x20000838
 8001dc0:	20000848 	.word	0x20000848
 8001dc4:	398ba058 	.word	0x398ba058

08001dc8 <ist8310_init>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b082      	sub	sp, #8
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	2200      	movs	r2, #0
 8001dd0:	2140      	movs	r1, #64	@ 0x40
 8001dd2:	481d      	ldr	r0, [pc, #116]	@ (8001e48 <ist8310_init+0x80>)
 8001dd4:	f00b f910 	bl	800cff8 <HAL_GPIO_WritePin>
 8001dd8:	2002      	movs	r0, #2
 8001dda:	f009 f949 	bl	800b070 <HAL_Delay>
 8001dde:	2201      	movs	r2, #1
 8001de0:	2140      	movs	r1, #64	@ 0x40
 8001de2:	4819      	ldr	r0, [pc, #100]	@ (8001e48 <ist8310_init+0x80>)
 8001de4:	f00b f908 	bl	800cff8 <HAL_GPIO_WritePin>
 8001de8:	2002      	movs	r0, #2
 8001dea:	f009 f941 	bl	800b070 <HAL_Delay>
 8001dee:	2000      	movs	r0, #0
 8001df0:	f7ff fe74 	bl	8001adc <mag_read_single_reg>
 8001df4:	4603      	mov	r3, r0
 8001df6:	71fb      	strb	r3, [r7, #7]
 8001df8:	79fb      	ldrb	r3, [r7, #7]
 8001dfa:	2b10      	cmp	r3, #16
 8001dfc:	d00a      	beq.n	8001e14 <ist8310_init+0x4c>
 8001dfe:	4b13      	ldr	r3, [pc, #76]	@ (8001e4c <ist8310_init+0x84>)
 8001e00:	2200      	movs	r2, #0
 8001e02:	841a      	strh	r2, [r3, #32]
 8001e04:	4b11      	ldr	r3, [pc, #68]	@ (8001e4c <ist8310_init+0x84>)
 8001e06:	2200      	movs	r2, #0
 8001e08:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001e0a:	4b10      	ldr	r3, [pc, #64]	@ (8001e4c <ist8310_init+0x84>)
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001e10:	2300      	movs	r3, #0
 8001e12:	e015      	b.n	8001e40 <ist8310_init+0x78>
 8001e14:	2002      	movs	r0, #2
 8001e16:	f009 f92b 	bl	800b070 <HAL_Delay>
 8001e1a:	2109      	movs	r1, #9
 8001e1c:	2041      	movs	r0, #65	@ 0x41
 8001e1e:	f7ff fe79 	bl	8001b14 <mag_write_single_reg>
 8001e22:	2002      	movs	r0, #2
 8001e24:	f009 f924 	bl	800b070 <HAL_Delay>
 8001e28:	21c0      	movs	r1, #192	@ 0xc0
 8001e2a:	2042      	movs	r0, #66	@ 0x42
 8001e2c:	f7ff fe72 	bl	8001b14 <mag_write_single_reg>
 8001e30:	2002      	movs	r0, #2
 8001e32:	f009 f91d 	bl	800b070 <HAL_Delay>
 8001e36:	210b      	movs	r1, #11
 8001e38:	200a      	movs	r0, #10
 8001e3a:	f7ff fe6b 	bl	8001b14 <mag_write_single_reg>
 8001e3e:	2300      	movs	r3, #0
 8001e40:	4618      	mov	r0, r3
 8001e42:	3708      	adds	r7, #8
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	40021800 	.word	0x40021800
 8001e4c:	20000848 	.word	0x20000848

08001e50 <ist8310_get_data>:
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
 8001e54:	4a05      	ldr	r2, [pc, #20]	@ (8001e6c <ist8310_get_data+0x1c>)
 8001e56:	2105      	movs	r1, #5
 8001e58:	2003      	movs	r0, #3
 8001e5a:	f7ff fe77 	bl	8001b4c <mag_read_multi_reg_dma>
 8001e5e:	f009 f8fb 	bl	800b058 <HAL_GetTick>
 8001e62:	4603      	mov	r3, r0
 8001e64:	4a02      	ldr	r2, [pc, #8]	@ (8001e70 <ist8310_get_data+0x20>)
 8001e66:	6293      	str	r3, [r2, #40]	@ 0x28
 8001e68:	bf00      	nop
 8001e6a:	bd80      	pop	{r7, pc}
 8001e6c:	20000840 	.word	0x20000840
 8001e70:	20000848 	.word	0x20000848

08001e74 <HAL_GPIO_EXTI_Callback>:
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b082      	sub	sp, #8
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	4603      	mov	r3, r0
 8001e7c:	80fb      	strh	r3, [r7, #6]
 8001e7e:	4b13      	ldr	r3, [pc, #76]	@ (8001ecc <HAL_GPIO_EXTI_Callback+0x58>)
 8001e80:	781b      	ldrb	r3, [r3, #0]
 8001e82:	2b01      	cmp	r3, #1
 8001e84:	d11e      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001e86:	4b12      	ldr	r3, [pc, #72]	@ (8001ed0 <HAL_GPIO_EXTI_Callback+0x5c>)
 8001e88:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8001e8c:	b2db      	uxtb	r3, r3
 8001e8e:	2b01      	cmp	r3, #1
 8001e90:	d10d      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001e92:	88fb      	ldrh	r3, [r7, #6]
 8001e94:	2b20      	cmp	r3, #32
 8001e96:	d103      	bne.n	8001ea0 <HAL_GPIO_EXTI_Callback+0x2c>
 8001e98:	f7ff ff1a 	bl	8001cd0 <gyro_get_data>
 8001e9c:	f7ff ff24 	bl	8001ce8 <gyro_process_data>
 8001ea0:	88fb      	ldrh	r3, [r7, #6]
 8001ea2:	2b10      	cmp	r3, #16
 8001ea4:	d103      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001ea6:	f7ff fead 	bl	8001c04 <accel_get_data>
 8001eaa:	f7ff feb7 	bl	8001c1c <accel_process_data>
 8001eae:	88fb      	ldrh	r3, [r7, #6]
 8001eb0:	2b08      	cmp	r3, #8
 8001eb2:	d107      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001eb4:	4b07      	ldr	r3, [pc, #28]	@ (8001ed4 <HAL_GPIO_EXTI_Callback+0x60>)
 8001eb6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001eba:	b2db      	uxtb	r3, r3
 8001ebc:	2b20      	cmp	r3, #32
 8001ebe:	d101      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001ec0:	f7ff ffc6 	bl	8001e50 <ist8310_get_data>
 8001ec4:	bf00      	nop
 8001ec6:	3708      	adds	r7, #8
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bd80      	pop	{r7, pc}
 8001ecc:	20000880 	.word	0x20000880
 8001ed0:	20001964 	.word	0x20001964
 8001ed4:	20001840 	.word	0x20001840

08001ed8 <HAL_I2C_MemRxCpltCallback>:
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	b084      	sub	sp, #16
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	6078      	str	r0, [r7, #4]
 8001ee0:	4b19      	ldr	r3, [pc, #100]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ee2:	785b      	ldrb	r3, [r3, #1]
 8001ee4:	021b      	lsls	r3, r3, #8
 8001ee6:	b21a      	sxth	r2, r3
 8001ee8:	4b17      	ldr	r3, [pc, #92]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001eea:	781b      	ldrb	r3, [r3, #0]
 8001eec:	b21b      	sxth	r3, r3
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	b21b      	sxth	r3, r3
 8001ef2:	813b      	strh	r3, [r7, #8]
 8001ef4:	4b14      	ldr	r3, [pc, #80]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ef6:	78db      	ldrb	r3, [r3, #3]
 8001ef8:	021b      	lsls	r3, r3, #8
 8001efa:	b21a      	sxth	r2, r3
 8001efc:	4b12      	ldr	r3, [pc, #72]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001efe:	789b      	ldrb	r3, [r3, #2]
 8001f00:	b21b      	sxth	r3, r3
 8001f02:	4313      	orrs	r3, r2
 8001f04:	b21b      	sxth	r3, r3
 8001f06:	817b      	strh	r3, [r7, #10]
 8001f08:	4b0f      	ldr	r3, [pc, #60]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f0a:	795b      	ldrb	r3, [r3, #5]
 8001f0c:	021b      	lsls	r3, r3, #8
 8001f0e:	b21a      	sxth	r2, r3
 8001f10:	4b0d      	ldr	r3, [pc, #52]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f12:	791b      	ldrb	r3, [r3, #4]
 8001f14:	b21b      	sxth	r3, r3
 8001f16:	4313      	orrs	r3, r2
 8001f18:	b21b      	sxth	r3, r3
 8001f1a:	81bb      	strh	r3, [r7, #12]
 8001f1c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001f20:	4b0a      	ldr	r3, [pc, #40]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f22:	841a      	strh	r2, [r3, #32]
 8001f24:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8001f28:	4b08      	ldr	r3, [pc, #32]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f2a:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001f2c:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8001f30:	4b06      	ldr	r3, [pc, #24]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f32:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001f34:	4b05      	ldr	r3, [pc, #20]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f36:	3320      	adds	r3, #32
 8001f38:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001f3c:	f005 fa10 	bl	8007360 <mag_data_ready>
 8001f40:	bf00      	nop
 8001f42:	3710      	adds	r7, #16
 8001f44:	46bd      	mov	sp, r7
 8001f46:	bd80      	pop	{r7, pc}
 8001f48:	20000840 	.word	0x20000840
 8001f4c:	20000848 	.word	0x20000848

08001f50 <led_green_off>:
 8001f50:	b480      	push	{r7}
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	4b04      	ldr	r3, [pc, #16]	@ (8001f68 <led_green_off+0x18>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	2200      	movs	r2, #0
 8001f5a:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f5c:	bf00      	nop
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f64:	4770      	bx	lr
 8001f66:	bf00      	nop
 8001f68:	20001b58 	.word	0x20001b58

08001f6c <led_on>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	2100      	movs	r1, #0
 8001f72:	480c      	ldr	r0, [pc, #48]	@ (8001fa4 <led_on+0x38>)
 8001f74:	f00f fb02 	bl	801157c <HAL_TIM_PWM_Start>
 8001f78:	2104      	movs	r1, #4
 8001f7a:	480a      	ldr	r0, [pc, #40]	@ (8001fa4 <led_on+0x38>)
 8001f7c:	f00f fafe 	bl	801157c <HAL_TIM_PWM_Start>
 8001f80:	2108      	movs	r1, #8
 8001f82:	4808      	ldr	r0, [pc, #32]	@ (8001fa4 <led_on+0x38>)
 8001f84:	f00f fafa 	bl	801157c <HAL_TIM_PWM_Start>
 8001f88:	4b06      	ldr	r3, [pc, #24]	@ (8001fa4 <led_on+0x38>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	22ff      	movs	r2, #255	@ 0xff
 8001f8e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001f90:	4b04      	ldr	r3, [pc, #16]	@ (8001fa4 <led_on+0x38>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	22ff      	movs	r2, #255	@ 0xff
 8001f96:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f98:	4b02      	ldr	r3, [pc, #8]	@ (8001fa4 <led_on+0x38>)
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	22ff      	movs	r2, #255	@ 0xff
 8001f9e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fa0:	bf00      	nop
 8001fa2:	bd80      	pop	{r7, pc}
 8001fa4:	20001b58 	.word	0x20001b58

08001fa8 <led_toggle>:
 8001fa8:	b480      	push	{r7}
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	bf00      	nop
 8001fae:	46bd      	mov	sp, r7
 8001fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb4:	4770      	bx	lr
	...

08001fb8 <status_led>:
 8001fb8:	b480      	push	{r7}
 8001fba:	b083      	sub	sp, #12
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	4603      	mov	r3, r0
 8001fc0:	460a      	mov	r2, r1
 8001fc2:	80fb      	strh	r3, [r7, #6]
 8001fc4:	4613      	mov	r3, r2
 8001fc6:	717b      	strb	r3, [r7, #5]
 8001fc8:	797b      	ldrb	r3, [r7, #5]
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	f040 8090 	bne.w	80020f0 <status_led+0x138>
 8001fd0:	88fb      	ldrh	r3, [r7, #6]
 8001fd2:	3b01      	subs	r3, #1
 8001fd4:	2b08      	cmp	r3, #8
 8001fd6:	f200 808a 	bhi.w	80020ee <status_led+0x136>
 8001fda:	a201      	add	r2, pc, #4	@ (adr r2, 8001fe0 <status_led+0x28>)
 8001fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fe0:	08002005 	.word	0x08002005
 8001fe4:	0800201f 	.word	0x0800201f
 8001fe8:	08002039 	.word	0x08002039
 8001fec:	08002053 	.word	0x08002053
 8001ff0:	0800206d 	.word	0x0800206d
 8001ff4:	08002087 	.word	0x08002087
 8001ff8:	080020a1 	.word	0x080020a1
 8001ffc:	080020bb 	.word	0x080020bb
 8002000:	080020d5 	.word	0x080020d5
 8002004:	4b3d      	ldr	r3, [pc, #244]	@ (80020fc <status_led+0x144>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	22ff      	movs	r2, #255	@ 0xff
 800200a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800200c:	4b3b      	ldr	r3, [pc, #236]	@ (80020fc <status_led+0x144>)
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	2200      	movs	r2, #0
 8002012:	639a      	str	r2, [r3, #56]	@ 0x38
 8002014:	4b39      	ldr	r3, [pc, #228]	@ (80020fc <status_led+0x144>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	2200      	movs	r2, #0
 800201a:	635a      	str	r2, [r3, #52]	@ 0x34
 800201c:	e068      	b.n	80020f0 <status_led+0x138>
 800201e:	4b37      	ldr	r3, [pc, #220]	@ (80020fc <status_led+0x144>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	2200      	movs	r2, #0
 8002024:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002026:	4b35      	ldr	r3, [pc, #212]	@ (80020fc <status_led+0x144>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	22ff      	movs	r2, #255	@ 0xff
 800202c:	639a      	str	r2, [r3, #56]	@ 0x38
 800202e:	4b33      	ldr	r3, [pc, #204]	@ (80020fc <status_led+0x144>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	2200      	movs	r2, #0
 8002034:	635a      	str	r2, [r3, #52]	@ 0x34
 8002036:	e05b      	b.n	80020f0 <status_led+0x138>
 8002038:	4b30      	ldr	r3, [pc, #192]	@ (80020fc <status_led+0x144>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	2200      	movs	r2, #0
 800203e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002040:	4b2e      	ldr	r3, [pc, #184]	@ (80020fc <status_led+0x144>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	2200      	movs	r2, #0
 8002046:	639a      	str	r2, [r3, #56]	@ 0x38
 8002048:	4b2c      	ldr	r3, [pc, #176]	@ (80020fc <status_led+0x144>)
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	22ff      	movs	r2, #255	@ 0xff
 800204e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002050:	e04e      	b.n	80020f0 <status_led+0x138>
 8002052:	4b2a      	ldr	r3, [pc, #168]	@ (80020fc <status_led+0x144>)
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	22ff      	movs	r2, #255	@ 0xff
 8002058:	63da      	str	r2, [r3, #60]	@ 0x3c
 800205a:	4b28      	ldr	r3, [pc, #160]	@ (80020fc <status_led+0x144>)
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	2200      	movs	r2, #0
 8002060:	639a      	str	r2, [r3, #56]	@ 0x38
 8002062:	4b26      	ldr	r3, [pc, #152]	@ (80020fc <status_led+0x144>)
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	22ff      	movs	r2, #255	@ 0xff
 8002068:	635a      	str	r2, [r3, #52]	@ 0x34
 800206a:	e041      	b.n	80020f0 <status_led+0x138>
 800206c:	4b23      	ldr	r3, [pc, #140]	@ (80020fc <status_led+0x144>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2200      	movs	r2, #0
 8002072:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002074:	4b21      	ldr	r3, [pc, #132]	@ (80020fc <status_led+0x144>)
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	2200      	movs	r2, #0
 800207a:	639a      	str	r2, [r3, #56]	@ 0x38
 800207c:	4b1f      	ldr	r3, [pc, #124]	@ (80020fc <status_led+0x144>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2200      	movs	r2, #0
 8002082:	635a      	str	r2, [r3, #52]	@ 0x34
 8002084:	e034      	b.n	80020f0 <status_led+0x138>
 8002086:	4b1d      	ldr	r3, [pc, #116]	@ (80020fc <status_led+0x144>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	2200      	movs	r2, #0
 800208c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800208e:	4b1b      	ldr	r3, [pc, #108]	@ (80020fc <status_led+0x144>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	2200      	movs	r2, #0
 8002094:	639a      	str	r2, [r3, #56]	@ 0x38
 8002096:	4b19      	ldr	r3, [pc, #100]	@ (80020fc <status_led+0x144>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	2200      	movs	r2, #0
 800209c:	635a      	str	r2, [r3, #52]	@ 0x34
 800209e:	e027      	b.n	80020f0 <status_led+0x138>
 80020a0:	4b16      	ldr	r3, [pc, #88]	@ (80020fc <status_led+0x144>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	2200      	movs	r2, #0
 80020a6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020a8:	4b14      	ldr	r3, [pc, #80]	@ (80020fc <status_led+0x144>)
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	2200      	movs	r2, #0
 80020ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80020b0:	4b12      	ldr	r3, [pc, #72]	@ (80020fc <status_led+0x144>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	2200      	movs	r2, #0
 80020b6:	635a      	str	r2, [r3, #52]	@ 0x34
 80020b8:	e01a      	b.n	80020f0 <status_led+0x138>
 80020ba:	4b10      	ldr	r3, [pc, #64]	@ (80020fc <status_led+0x144>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	2200      	movs	r2, #0
 80020c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020c2:	4b0e      	ldr	r3, [pc, #56]	@ (80020fc <status_led+0x144>)
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	2200      	movs	r2, #0
 80020c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80020ca:	4b0c      	ldr	r3, [pc, #48]	@ (80020fc <status_led+0x144>)
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	2200      	movs	r2, #0
 80020d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80020d2:	e00d      	b.n	80020f0 <status_led+0x138>
 80020d4:	4b09      	ldr	r3, [pc, #36]	@ (80020fc <status_led+0x144>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	2200      	movs	r2, #0
 80020da:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020dc:	4b07      	ldr	r3, [pc, #28]	@ (80020fc <status_led+0x144>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	2200      	movs	r2, #0
 80020e2:	639a      	str	r2, [r3, #56]	@ 0x38
 80020e4:	4b05      	ldr	r3, [pc, #20]	@ (80020fc <status_led+0x144>)
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	2200      	movs	r2, #0
 80020ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80020ec:	e000      	b.n	80020f0 <status_led+0x138>
 80020ee:	bf00      	nop
 80020f0:	bf00      	nop
 80020f2:	370c      	adds	r7, #12
 80020f4:	46bd      	mov	sp, r7
 80020f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fa:	4770      	bx	lr
 80020fc:	20001b58 	.word	0x20001b58

08002100 <LL_TIM_EnableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_EnableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
{
 8002100:	b480      	push	{r7}
 8002102:	b083      	sub	sp, #12
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f043 0201 	orr.w	r2, r3, #1
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	601a      	str	r2, [r3, #0]
}
 8002114:	bf00      	nop
 8002116:	370c      	adds	r7, #12
 8002118:	46bd      	mov	sp, r7
 800211a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800211e:	4770      	bx	lr

08002120 <LL_TIM_DisableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_DisableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
{
 8002120:	b480      	push	{r7}
 8002122:	b083      	sub	sp, #12
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f023 0201 	bic.w	r2, r3, #1
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	601a      	str	r2, [r3, #0]
}
 8002134:	bf00      	nop
 8002136:	370c      	adds	r7, #12
 8002138:	46bd      	mov	sp, r7
 800213a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213e:	4770      	bx	lr

08002140 <LL_TIM_SetPrescaler>:
  * @param  TIMx Timer instance
  * @param  Prescaler between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
{
 8002140:	b480      	push	{r7}
 8002142:	b083      	sub	sp, #12
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
 8002148:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->PSC, Prescaler);
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	683a      	ldr	r2, [r7, #0]
 800214e:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8002150:	bf00      	nop
 8002152:	370c      	adds	r7, #12
 8002154:	46bd      	mov	sp, r7
 8002156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215a:	4770      	bx	lr

0800215c <micros_tick>:
#include "board_lib.h"
#include "robot_config.h"

static uint32_t gv_overflow_times = 0;

void micros_tick(){
 800215c:	b480      	push	{r7}
 800215e:	af00      	add	r7, sp, #0
	gv_overflow_times ++;
 8002160:	4b04      	ldr	r3, [pc, #16]	@ (8002174 <micros_tick+0x18>)
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	3301      	adds	r3, #1
 8002166:	4a03      	ldr	r2, [pc, #12]	@ (8002174 <micros_tick+0x18>)
 8002168:	6013      	str	r3, [r2, #0]
}
 800216a:	bf00      	nop
 800216c:	46bd      	mov	sp, r7
 800216e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002172:	4770      	bx	lr
 8002174:	20000884 	.word	0x20000884

08002178 <start_micros_timer>:

void start_micros_timer()
{
 8002178:	b580      	push	{r7, lr}
 800217a:	af00      	add	r7, sp, #0
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 800217c:	f240 3147 	movw	r1, #839	@ 0x347
 8002180:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002184:	f7ff ffdc 	bl	8002140 <LL_TIM_SetPrescaler>
	LL_TIM_DisableCounter(TIM2);
 8002188:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800218c:	f7ff ffc8 	bl	8002120 <LL_TIM_DisableCounter>
	TIM2->CNT =0;
 8002190:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002194:	2200      	movs	r2, #0
 8002196:	625a      	str	r2, [r3, #36]	@ 0x24
//	LL_TIM_DisableExternalClock(TIM2);
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 8002198:	f240 3147 	movw	r1, #839	@ 0x347
 800219c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021a0:	f7ff ffce 	bl	8002140 <LL_TIM_SetPrescaler>
//	LL_TIM_EnableUpdateEvent(TIM2);
//	LL_TIM_EnableIT_UPDATE(TIM2);
	TIM2->EGR |= TIM_EGR_UG_Msk;
 80021a4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80021a8:	695b      	ldr	r3, [r3, #20]
 80021aa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80021ae:	f043 0301 	orr.w	r3, r3, #1
 80021b2:	6153      	str	r3, [r2, #20]
	LL_TIM_EnableCounter(TIM2);
 80021b4:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021b8:	f7ff ffa2 	bl	8002100 <LL_TIM_EnableCounter>
}
 80021bc:	bf00      	nop
 80021be:	bd80      	pop	{r7, pc}

080021c0 <get_microseconds>:
static uint32_t current_cnt;
//T_start = get_microseconds();
//diff = T_end - T_start;
//T_end = T_start;
uint32_t get_microseconds()
{
 80021c0:	e92d 0fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp}
 80021c4:	b083      	sub	sp, #12
 80021c6:	af00      	add	r7, sp, #0
	current_cnt = TIM2->CNT;
 80021c8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021cc:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021ce:	4d15      	ldr	r5, [pc, #84]	@ (8002224 <get_microseconds+0x64>)
 80021d0:	602c      	str	r4, [r5, #0]
	uint64_t temp_cnt = TIM2->CNT;
 80021d2:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021d6:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021d8:	2500      	movs	r5, #0
 80021da:	4620      	mov	r0, r4
 80021dc:	4629      	mov	r1, r5
 80021de:	e9c7 0100 	strd	r0, r1, [r7]
	temp_cnt = temp_cnt * (1000000 / TIMER_FREQ);
 80021e2:	e9d7 8900 	ldrd	r8, r9, [r7]
 80021e6:	4640      	mov	r0, r8
 80021e8:	4649      	mov	r1, r9
 80021ea:	f04f 0400 	mov.w	r4, #0
 80021ee:	f04f 0500 	mov.w	r5, #0
 80021f2:	008d      	lsls	r5, r1, #2
 80021f4:	ea45 7590 	orr.w	r5, r5, r0, lsr #30
 80021f8:	0084      	lsls	r4, r0, #2
 80021fa:	4620      	mov	r0, r4
 80021fc:	4629      	mov	r1, r5
 80021fe:	eb10 0208 	adds.w	r2, r0, r8
 8002202:	eb41 0309 	adc.w	r3, r1, r9
 8002206:	eb12 0a02 	adds.w	sl, r2, r2
 800220a:	eb43 0b03 	adc.w	fp, r3, r3
 800220e:	4652      	mov	r2, sl
 8002210:	465b      	mov	r3, fp
 8002212:	e9c7 2300 	strd	r2, r3, [r7]
	return (uint32_t)temp_cnt;
 8002216:	683b      	ldr	r3, [r7, #0]
}
 8002218:	4618      	mov	r0, r3
 800221a:	370c      	adds	r7, #12
 800221c:	46bd      	mov	sp, r7
 800221e:	e8bd 0fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp}
 8002222:	4770      	bx	lr
 8002224:	20000888 	.word	0x20000888

08002228 <queue_init>:
 8002228:	b480      	push	{r7}
 800222a:	b085      	sub	sp, #20
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	2300      	movs	r3, #0
 8002232:	723b      	strb	r3, [r7, #8]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2b00      	cmp	r3, #0
 8002238:	d104      	bne.n	8002244 <queue_init+0x1c>
 800223a:	2304      	movs	r3, #4
 800223c:	723b      	strb	r3, [r7, #8]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	60fb      	str	r3, [r7, #12]
 8002242:	e00d      	b.n	8002260 <queue_init+0x38>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2200      	movs	r2, #0
 8002248:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	2200      	movs	r2, #0
 8002250:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2200      	movs	r2, #0
 8002258:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 800225c:	68bb      	ldr	r3, [r7, #8]
 800225e:	60fb      	str	r3, [r7, #12]
 8002260:	2300      	movs	r3, #0
 8002262:	89ba      	ldrh	r2, [r7, #12]
 8002264:	f362 030f 	bfi	r3, r2, #0, #16
 8002268:	89fa      	ldrh	r2, [r7, #14]
 800226a:	f362 431f 	bfi	r3, r2, #16, #16
 800226e:	4618      	mov	r0, r3
 8002270:	3714      	adds	r7, #20
 8002272:	46bd      	mov	sp, r7
 8002274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002278:	4770      	bx	lr

0800227a <queue_get_size>:
 800227a:	b480      	push	{r7}
 800227c:	b085      	sub	sp, #20
 800227e:	af00      	add	r7, sp, #0
 8002280:	6078      	str	r0, [r7, #4]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	f8b3 2100 	ldrh.w	r2, [r3, #256]	@ 0x100
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800228e:	1ad3      	subs	r3, r2, r3
 8002290:	81fb      	strh	r3, [r7, #14]
 8002292:	89fb      	ldrh	r3, [r7, #14]
 8002294:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002298:	d904      	bls.n	80022a4 <queue_get_size+0x2a>
 800229a:	89fb      	ldrh	r3, [r7, #14]
 800229c:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 80022a0:	b29b      	uxth	r3, r3
 80022a2:	e000      	b.n	80022a6 <queue_get_size+0x2c>
 80022a4:	89fb      	ldrh	r3, [r7, #14]
 80022a6:	81fb      	strh	r3, [r7, #14]
 80022a8:	89fb      	ldrh	r3, [r7, #14]
 80022aa:	4618      	mov	r0, r3
 80022ac:	3714      	adds	r7, #20
 80022ae:	46bd      	mov	sp, r7
 80022b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b4:	4770      	bx	lr

080022b6 <queue_append_byte>:
 80022b6:	b580      	push	{r7, lr}
 80022b8:	b084      	sub	sp, #16
 80022ba:	af00      	add	r7, sp, #0
 80022bc:	6078      	str	r0, [r7, #4]
 80022be:	460b      	mov	r3, r1
 80022c0:	70fb      	strb	r3, [r7, #3]
 80022c2:	2300      	movs	r3, #0
 80022c4:	723b      	strb	r3, [r7, #8]
 80022c6:	f008 fec7 	bl	800b058 <HAL_GetTick>
 80022ca:	4602      	mov	r2, r0
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022d8:	4619      	mov	r1, r3
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	78fa      	ldrb	r2, [r7, #3]
 80022de:	545a      	strb	r2, [r3, r1]
 80022e0:	2301      	movs	r3, #1
 80022e2:	817b      	strh	r3, [r7, #10]
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022ea:	2bfe      	cmp	r3, #254	@ 0xfe
 80022ec:	d805      	bhi.n	80022fa <queue_append_byte+0x44>
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022f4:	3301      	adds	r3, #1
 80022f6:	b29a      	uxth	r2, r3
 80022f8:	e000      	b.n	80022fc <queue_append_byte+0x46>
 80022fa:	2200      	movs	r2, #0
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002302:	6878      	ldr	r0, [r7, #4]
 8002304:	f7ff ffb9 	bl	800227a <queue_get_size>
 8002308:	4603      	mov	r3, r0
 800230a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800230e:	d913      	bls.n	8002338 <queue_append_byte+0x82>
 8002310:	2301      	movs	r3, #1
 8002312:	723b      	strb	r3, [r7, #8]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800231a:	2bff      	cmp	r3, #255	@ 0xff
 800231c:	d005      	beq.n	800232a <queue_append_byte+0x74>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002324:	3301      	adds	r3, #1
 8002326:	b29a      	uxth	r2, r3
 8002328:	e000      	b.n	800232c <queue_append_byte+0x76>
 800232a:	2200      	movs	r2, #0
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002332:	68bb      	ldr	r3, [r7, #8]
 8002334:	60fb      	str	r3, [r7, #12]
 8002336:	e001      	b.n	800233c <queue_append_byte+0x86>
 8002338:	68bb      	ldr	r3, [r7, #8]
 800233a:	60fb      	str	r3, [r7, #12]
 800233c:	2300      	movs	r3, #0
 800233e:	89ba      	ldrh	r2, [r7, #12]
 8002340:	f362 030f 	bfi	r3, r2, #0, #16
 8002344:	89fa      	ldrh	r2, [r7, #14]
 8002346:	f362 431f 	bfi	r3, r2, #16, #16
 800234a:	4618      	mov	r0, r3
 800234c:	3710      	adds	r7, #16
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}

08002352 <queue_pop_element>:
 8002352:	b580      	push	{r7, lr}
 8002354:	b084      	sub	sp, #16
 8002356:	af00      	add	r7, sp, #0
 8002358:	6078      	str	r0, [r7, #4]
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f7ff ff8d 	bl	800227a <queue_get_size>
 8002360:	4603      	mov	r3, r0
 8002362:	2b00      	cmp	r3, #0
 8002364:	d101      	bne.n	800236a <queue_pop_element+0x18>
 8002366:	2300      	movs	r3, #0
 8002368:	e01c      	b.n	80023a4 <queue_pop_element+0x52>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002370:	3301      	adds	r3, #1
 8002372:	b29a      	uxth	r2, r3
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002380:	2bff      	cmp	r3, #255	@ 0xff
 8002382:	d803      	bhi.n	800238c <queue_pop_element+0x3a>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 800238a:	e000      	b.n	800238e <queue_pop_element+0x3c>
 800238c:	2200      	movs	r2, #0
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800239a:	461a      	mov	r2, r3
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	5c9b      	ldrb	r3, [r3, r2]
 80023a0:	73fb      	strb	r3, [r7, #15]
 80023a2:	7bfb      	ldrb	r3, [r7, #15]
 80023a4:	4618      	mov	r0, r3
 80023a6:	3710      	adds	r7, #16
 80023a8:	46bd      	mov	sp, r7
 80023aa:	bd80      	pop	{r7, pc}

080023ac <queue_pop_elements>:
 80023ac:	b580      	push	{r7, lr}
 80023ae:	b088      	sub	sp, #32
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	60f8      	str	r0, [r7, #12]
 80023b4:	60b9      	str	r1, [r7, #8]
 80023b6:	4613      	mov	r3, r2
 80023b8:	80fb      	strh	r3, [r7, #6]
 80023ba:	68f8      	ldr	r0, [r7, #12]
 80023bc:	f7ff ff5d 	bl	800227a <queue_get_size>
 80023c0:	4603      	mov	r3, r0
 80023c2:	83fb      	strh	r3, [r7, #30]
 80023c4:	8bfa      	ldrh	r2, [r7, #30]
 80023c6:	88fb      	ldrh	r3, [r7, #6]
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d203      	bcs.n	80023d4 <queue_pop_elements+0x28>
 80023cc:	2303      	movs	r3, #3
 80023ce:	753b      	strb	r3, [r7, #20]
 80023d0:	8bfb      	ldrh	r3, [r7, #30]
 80023d2:	80fb      	strh	r3, [r7, #6]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023da:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80023de:	83bb      	strh	r3, [r7, #28]
 80023e0:	8bba      	ldrh	r2, [r7, #28]
 80023e2:	88fb      	ldrh	r3, [r7, #6]
 80023e4:	429a      	cmp	r2, r3
 80023e6:	d30b      	bcc.n	8002400 <queue_pop_elements+0x54>
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023ee:	461a      	mov	r2, r3
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	4413      	add	r3, r2
 80023f4:	88fa      	ldrh	r2, [r7, #6]
 80023f6:	4619      	mov	r1, r3
 80023f8:	68b8      	ldr	r0, [r7, #8]
 80023fa:	f018 fde3 	bl	801afc4 <memcpy>
 80023fe:	e014      	b.n	800242a <queue_pop_elements+0x7e>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002406:	461a      	mov	r2, r3
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	4413      	add	r3, r2
 800240c:	8bba      	ldrh	r2, [r7, #28]
 800240e:	4619      	mov	r1, r3
 8002410:	68b8      	ldr	r0, [r7, #8]
 8002412:	f018 fdd7 	bl	801afc4 <memcpy>
 8002416:	8bbb      	ldrh	r3, [r7, #28]
 8002418:	68ba      	ldr	r2, [r7, #8]
 800241a:	18d0      	adds	r0, r2, r3
 800241c:	68f9      	ldr	r1, [r7, #12]
 800241e:	88fa      	ldrh	r2, [r7, #6]
 8002420:	8bbb      	ldrh	r3, [r7, #28]
 8002422:	1ad3      	subs	r3, r2, r3
 8002424:	461a      	mov	r2, r3
 8002426:	f018 fdcd 	bl	801afc4 <memcpy>
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 8002430:	88fb      	ldrh	r3, [r7, #6]
 8002432:	4413      	add	r3, r2
 8002434:	b29a      	uxth	r2, r3
 8002436:	68fb      	ldr	r3, [r7, #12]
 8002438:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002442:	2bff      	cmp	r3, #255	@ 0xff
 8002444:	d906      	bls.n	8002454 <queue_pop_elements+0xa8>
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800244c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8002450:	b29b      	uxth	r3, r3
 8002452:	e002      	b.n	800245a <queue_pop_elements+0xae>
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800245a:	68fa      	ldr	r2, [r7, #12]
 800245c:	f8a2 3102 	strh.w	r3, [r2, #258]	@ 0x102
 8002460:	697b      	ldr	r3, [r7, #20]
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	2300      	movs	r3, #0
 8002466:	8b3a      	ldrh	r2, [r7, #24]
 8002468:	f362 030f 	bfi	r3, r2, #0, #16
 800246c:	8b7a      	ldrh	r2, [r7, #26]
 800246e:	f362 431f 	bfi	r3, r2, #16, #16
 8002472:	4618      	mov	r0, r3
 8002474:	3720      	adds	r7, #32
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}

0800247a <queue_peek>:
 800247a:	b580      	push	{r7, lr}
 800247c:	b082      	sub	sp, #8
 800247e:	af00      	add	r7, sp, #0
 8002480:	6078      	str	r0, [r7, #4]
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f7ff fef9 	bl	800227a <queue_get_size>
 8002488:	4603      	mov	r3, r0
 800248a:	2b00      	cmp	r3, #0
 800248c:	d006      	beq.n	800249c <queue_peek+0x22>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002494:	461a      	mov	r2, r3
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	5c9b      	ldrb	r3, [r3, r2]
 800249a:	e000      	b.n	800249e <queue_peek+0x24>
 800249c:	2300      	movs	r3, #0
 800249e:	4618      	mov	r0, r3
 80024a0:	3708      	adds	r7, #8
 80024a2:	46bd      	mov	sp, r7
 80024a4:	bd80      	pop	{r7, pc}

080024a6 <queue_peek_number>:
 80024a6:	b580      	push	{r7, lr}
 80024a8:	b088      	sub	sp, #32
 80024aa:	af00      	add	r7, sp, #0
 80024ac:	60f8      	str	r0, [r7, #12]
 80024ae:	60b9      	str	r1, [r7, #8]
 80024b0:	4613      	mov	r3, r2
 80024b2:	80fb      	strh	r3, [r7, #6]
 80024b4:	f008 fdd0 	bl	800b058 <HAL_GetTick>
 80024b8:	4602      	mov	r2, r0
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80024c0:	2300      	movs	r3, #0
 80024c2:	753b      	strb	r3, [r7, #20]
 80024c4:	68f8      	ldr	r0, [r7, #12]
 80024c6:	f7ff fed8 	bl	800227a <queue_get_size>
 80024ca:	4603      	mov	r3, r0
 80024cc:	83fb      	strh	r3, [r7, #30]
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024d4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80024d8:	83bb      	strh	r3, [r7, #28]
 80024da:	8bfa      	ldrh	r2, [r7, #30]
 80024dc:	88fb      	ldrh	r3, [r7, #6]
 80024de:	429a      	cmp	r2, r3
 80024e0:	d203      	bcs.n	80024ea <queue_peek_number+0x44>
 80024e2:	2303      	movs	r3, #3
 80024e4:	753b      	strb	r3, [r7, #20]
 80024e6:	8bfb      	ldrh	r3, [r7, #30]
 80024e8:	80fb      	strh	r3, [r7, #6]
 80024ea:	8bba      	ldrh	r2, [r7, #28]
 80024ec:	88fb      	ldrh	r3, [r7, #6]
 80024ee:	429a      	cmp	r2, r3
 80024f0:	d30b      	bcc.n	800250a <queue_peek_number+0x64>
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024f8:	461a      	mov	r2, r3
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	4413      	add	r3, r2
 80024fe:	88fa      	ldrh	r2, [r7, #6]
 8002500:	4619      	mov	r1, r3
 8002502:	68b8      	ldr	r0, [r7, #8]
 8002504:	f018 fd5e 	bl	801afc4 <memcpy>
 8002508:	e014      	b.n	8002534 <queue_peek_number+0x8e>
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002510:	461a      	mov	r2, r3
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	4413      	add	r3, r2
 8002516:	8bba      	ldrh	r2, [r7, #28]
 8002518:	4619      	mov	r1, r3
 800251a:	68b8      	ldr	r0, [r7, #8]
 800251c:	f018 fd52 	bl	801afc4 <memcpy>
 8002520:	8bbb      	ldrh	r3, [r7, #28]
 8002522:	68ba      	ldr	r2, [r7, #8]
 8002524:	18d0      	adds	r0, r2, r3
 8002526:	68f9      	ldr	r1, [r7, #12]
 8002528:	88fa      	ldrh	r2, [r7, #6]
 800252a:	8bbb      	ldrh	r3, [r7, #28]
 800252c:	1ad3      	subs	r3, r2, r3
 800252e:	461a      	mov	r2, r3
 8002530:	f018 fd48 	bl	801afc4 <memcpy>
 8002534:	88fb      	ldrh	r3, [r7, #6]
 8002536:	82fb      	strh	r3, [r7, #22]
 8002538:	697b      	ldr	r3, [r7, #20]
 800253a:	61bb      	str	r3, [r7, #24]
 800253c:	2300      	movs	r3, #0
 800253e:	8b3a      	ldrh	r2, [r7, #24]
 8002540:	f362 030f 	bfi	r3, r2, #0, #16
 8002544:	8b7a      	ldrh	r2, [r7, #26]
 8002546:	f362 431f 	bfi	r3, r2, #16, #16
 800254a:	4618      	mov	r0, r3
 800254c:	3720      	adds	r7, #32
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}
	...

08002554 <ref_process_data>:
 8002554:	b590      	push	{r4, r7, lr}
 8002556:	b097      	sub	sp, #92	@ 0x5c
 8002558:	af00      	add	r7, sp, #0
 800255a:	6578      	str	r0, [r7, #84]	@ 0x54
 800255c:	6539      	str	r1, [r7, #80]	@ 0x50
 800255e:	e066      	b.n	800262e <ref_process_data+0xda>
 8002560:	4b38      	ldr	r3, [pc, #224]	@ (8002644 <ref_process_data+0xf0>)
 8002562:	781b      	ldrb	r3, [r3, #0]
 8002564:	2b00      	cmp	r3, #0
 8002566:	d002      	beq.n	800256e <ref_process_data+0x1a>
 8002568:	2b01      	cmp	r3, #1
 800256a:	d036      	beq.n	80025da <ref_process_data+0x86>
 800256c:	e05f      	b.n	800262e <ref_process_data+0xda>
 800256e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002570:	f7ff fe83 	bl	800227a <queue_get_size>
 8002574:	4603      	mov	r3, r0
 8002576:	2b06      	cmp	r3, #6
 8002578:	d801      	bhi.n	800257e <ref_process_data+0x2a>
 800257a:	2302      	movs	r3, #2
 800257c:	e05e      	b.n	800263c <ref_process_data+0xe8>
 800257e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002580:	f7ff ff7b 	bl	800247a <queue_peek>
 8002584:	4603      	mov	r3, r0
 8002586:	2ba5      	cmp	r3, #165	@ 0xa5
 8002588:	d003      	beq.n	8002592 <ref_process_data+0x3e>
 800258a:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 800258c:	f7ff fee1 	bl	8002352 <queue_pop_element>
 8002590:	e04d      	b.n	800262e <ref_process_data+0xda>
 8002592:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002594:	f7ff fe71 	bl	800227a <queue_get_size>
 8002598:	4603      	mov	r3, r0
 800259a:	2b07      	cmp	r3, #7
 800259c:	d91b      	bls.n	80025d6 <ref_process_data+0x82>
 800259e:	4c2a      	ldr	r4, [pc, #168]	@ (8002648 <ref_process_data+0xf4>)
 80025a0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025a4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80025a6:	4618      	mov	r0, r3
 80025a8:	f000 f850 	bl	800264c <ref_get_header>
 80025ac:	4622      	mov	r2, r4
 80025ae:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025b2:	6818      	ldr	r0, [r3, #0]
 80025b4:	6010      	str	r0, [r2, #0]
 80025b6:	8899      	ldrh	r1, [r3, #4]
 80025b8:	799b      	ldrb	r3, [r3, #6]
 80025ba:	8091      	strh	r1, [r2, #4]
 80025bc:	7193      	strb	r3, [r2, #6]
 80025be:	4b22      	ldr	r3, [pc, #136]	@ (8002648 <ref_process_data+0xf4>)
 80025c0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80025ca:	4293      	cmp	r3, r2
 80025cc:	d02c      	beq.n	8002628 <ref_process_data+0xd4>
 80025ce:	4b1d      	ldr	r3, [pc, #116]	@ (8002644 <ref_process_data+0xf0>)
 80025d0:	2201      	movs	r2, #1
 80025d2:	701a      	strb	r2, [r3, #0]
 80025d4:	e02b      	b.n	800262e <ref_process_data+0xda>
 80025d6:	2302      	movs	r3, #2
 80025d8:	e030      	b.n	800263c <ref_process_data+0xe8>
 80025da:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 80025dc:	f7ff fe4d 	bl	800227a <queue_get_size>
 80025e0:	4603      	mov	r3, r0
 80025e2:	461a      	mov	r2, r3
 80025e4:	4b18      	ldr	r3, [pc, #96]	@ (8002648 <ref_process_data+0xf4>)
 80025e6:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80025ea:	b29b      	uxth	r3, r3
 80025ec:	3309      	adds	r3, #9
 80025ee:	429a      	cmp	r2, r3
 80025f0:	dd18      	ble.n	8002624 <ref_process_data+0xd0>
 80025f2:	4b14      	ldr	r3, [pc, #80]	@ (8002644 <ref_process_data+0xf0>)
 80025f4:	2200      	movs	r2, #0
 80025f6:	701a      	strb	r2, [r3, #0]
 80025f8:	6d3c      	ldr	r4, [r7, #80]	@ 0x50
 80025fa:	4638      	mov	r0, r7
 80025fc:	4a12      	ldr	r2, [pc, #72]	@ (8002648 <ref_process_data+0xf4>)
 80025fe:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002600:	ca06      	ldmia	r2, {r1, r2}
 8002602:	f000 f89b 	bl	800273c <ref_get_msg>
 8002606:	4620      	mov	r0, r4
 8002608:	463b      	mov	r3, r7
 800260a:	2242      	movs	r2, #66	@ 0x42
 800260c:	4619      	mov	r1, r3
 800260e:	f018 fcd9 	bl	801afc4 <memcpy>
 8002612:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002614:	881b      	ldrh	r3, [r3, #0]
 8002616:	b29b      	uxth	r3, r3
 8002618:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800261c:	4293      	cmp	r3, r2
 800261e:	d005      	beq.n	800262c <ref_process_data+0xd8>
 8002620:	2300      	movs	r3, #0
 8002622:	e00b      	b.n	800263c <ref_process_data+0xe8>
 8002624:	2302      	movs	r3, #2
 8002626:	e009      	b.n	800263c <ref_process_data+0xe8>
 8002628:	bf00      	nop
 800262a:	e000      	b.n	800262e <ref_process_data+0xda>
 800262c:	bf00      	nop
 800262e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002630:	f7ff fe23 	bl	800227a <queue_get_size>
 8002634:	4603      	mov	r3, r0
 8002636:	2b07      	cmp	r3, #7
 8002638:	d892      	bhi.n	8002560 <ref_process_data+0xc>
 800263a:	2302      	movs	r3, #2
 800263c:	4618      	mov	r0, r3
 800263e:	375c      	adds	r7, #92	@ 0x5c
 8002640:	46bd      	mov	sp, r7
 8002642:	bd90      	pop	{r4, r7, pc}
 8002644:	2000088c 	.word	0x2000088c
 8002648:	20000890 	.word	0x20000890

0800264c <ref_get_header>:
 800264c:	b580      	push	{r7, lr}
 800264e:	b088      	sub	sp, #32
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	6039      	str	r1, [r7, #0]
 8002656:	f107 030c 	add.w	r3, r7, #12
 800265a:	2207      	movs	r2, #7
 800265c:	4619      	mov	r1, r3
 800265e:	6838      	ldr	r0, [r7, #0]
 8002660:	f7ff ff21 	bl	80024a6 <queue_peek_number>
 8002664:	7b3b      	ldrb	r3, [r7, #12]
 8002666:	753b      	strb	r3, [r7, #20]
 8002668:	7d3b      	ldrb	r3, [r7, #20]
 800266a:	2ba5      	cmp	r3, #165	@ 0xa5
 800266c:	d013      	beq.n	8002696 <ref_get_header+0x4a>
 800266e:	6838      	ldr	r0, [r7, #0]
 8002670:	f7ff fe6f 	bl	8002352 <queue_pop_element>
 8002674:	f04f 33ff 	mov.w	r3, #4294967295
 8002678:	767b      	strb	r3, [r7, #25]
 800267a:	f04f 33ff 	mov.w	r3, #4294967295
 800267e:	76bb      	strb	r3, [r7, #26]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	461a      	mov	r2, r3
 8002684:	f107 0314 	add.w	r3, r7, #20
 8002688:	6818      	ldr	r0, [r3, #0]
 800268a:	6010      	str	r0, [r2, #0]
 800268c:	8899      	ldrh	r1, [r3, #4]
 800268e:	799b      	ldrb	r3, [r3, #6]
 8002690:	8091      	strh	r1, [r2, #4]
 8002692:	7193      	strb	r3, [r2, #6]
 8002694:	e04d      	b.n	8002732 <ref_get_header+0xe6>
 8002696:	7bbb      	ldrb	r3, [r7, #14]
 8002698:	021b      	lsls	r3, r3, #8
 800269a:	b21a      	sxth	r2, r3
 800269c:	7b7b      	ldrb	r3, [r7, #13]
 800269e:	b21b      	sxth	r3, r3
 80026a0:	4313      	orrs	r3, r2
 80026a2:	b21b      	sxth	r3, r3
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	f8a7 3015 	strh.w	r3, [r7, #21]
 80026aa:	7bfb      	ldrb	r3, [r7, #15]
 80026ac:	75fb      	strb	r3, [r7, #23]
 80026ae:	7c3b      	ldrb	r3, [r7, #16]
 80026b0:	763b      	strb	r3, [r7, #24]
 80026b2:	f107 030c 	add.w	r3, r7, #12
 80026b6:	2105      	movs	r1, #5
 80026b8:	4618      	mov	r0, r3
 80026ba:	f7fe fc7f 	bl	8000fbc <verify_CRC8_check_sum>
 80026be:	4603      	mov	r3, r0
 80026c0:	61fb      	str	r3, [r7, #28]
 80026c2:	7cbb      	ldrb	r3, [r7, #18]
 80026c4:	021b      	lsls	r3, r3, #8
 80026c6:	b21a      	sxth	r2, r3
 80026c8:	7c7b      	ldrb	r3, [r7, #17]
 80026ca:	b21b      	sxth	r3, r3
 80026cc:	4313      	orrs	r3, r2
 80026ce:	b21b      	sxth	r3, r3
 80026d0:	b29b      	uxth	r3, r3
 80026d2:	f8a7 3019 	strh.w	r3, [r7, #25]
 80026d6:	69fb      	ldr	r3, [r7, #28]
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d00c      	beq.n	80026f6 <ref_get_header+0xaa>
 80026dc:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 80026e0:	b29b      	uxth	r3, r3
 80026e2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80026e6:	d806      	bhi.n	80026f6 <ref_get_header+0xaa>
 80026e8:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 80026ec:	b29b      	uxth	r3, r3
 80026ee:	f240 3205 	movw	r2, #773	@ 0x305
 80026f2:	4293      	cmp	r3, r2
 80026f4:	d913      	bls.n	800271e <ref_get_header+0xd2>
 80026f6:	f04f 33ff 	mov.w	r3, #4294967295
 80026fa:	767b      	strb	r3, [r7, #25]
 80026fc:	f04f 33ff 	mov.w	r3, #4294967295
 8002700:	76bb      	strb	r3, [r7, #26]
 8002702:	6838      	ldr	r0, [r7, #0]
 8002704:	f7ff fe25 	bl	8002352 <queue_pop_element>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	461a      	mov	r2, r3
 800270c:	f107 0314 	add.w	r3, r7, #20
 8002710:	6818      	ldr	r0, [r3, #0]
 8002712:	6010      	str	r0, [r2, #0]
 8002714:	8899      	ldrh	r1, [r3, #4]
 8002716:	799b      	ldrb	r3, [r3, #6]
 8002718:	8091      	strh	r1, [r2, #4]
 800271a:	7193      	strb	r3, [r2, #6]
 800271c:	e009      	b.n	8002732 <ref_get_header+0xe6>
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	461a      	mov	r2, r3
 8002722:	f107 0314 	add.w	r3, r7, #20
 8002726:	6818      	ldr	r0, [r3, #0]
 8002728:	6010      	str	r0, [r2, #0]
 800272a:	8899      	ldrh	r1, [r3, #4]
 800272c:	799b      	ldrb	r3, [r3, #6]
 800272e:	8091      	strh	r1, [r2, #4]
 8002730:	7193      	strb	r3, [r2, #6]
 8002732:	6878      	ldr	r0, [r7, #4]
 8002734:	3720      	adds	r7, #32
 8002736:	46bd      	mov	sp, r7
 8002738:	bd80      	pop	{r7, pc}
	...

0800273c <ref_get_msg>:
 800273c:	b5b0      	push	{r4, r5, r7, lr}
 800273e:	b0d8      	sub	sp, #352	@ 0x160
 8002740:	af00      	add	r7, sp, #0
 8002742:	f507 74b0 	add.w	r4, r7, #352	@ 0x160
 8002746:	f5a4 74aa 	sub.w	r4, r4, #340	@ 0x154
 800274a:	6020      	str	r0, [r4, #0]
 800274c:	f507 70b0 	add.w	r0, r7, #352	@ 0x160
 8002750:	f5a0 70ae 	sub.w	r0, r0, #348	@ 0x15c
 8002754:	e880 0006 	stmia.w	r0, {r1, r2}
 8002758:	f507 72b0 	add.w	r2, r7, #352	@ 0x160
 800275c:	f5a2 72b0 	sub.w	r2, r2, #352	@ 0x160
 8002760:	6013      	str	r3, [r2, #0]
 8002762:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002766:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800276a:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800276e:	b29b      	uxth	r3, r3
 8002770:	3309      	adds	r3, #9
 8002772:	b29a      	uxth	r2, r3
 8002774:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8002778:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800277c:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8002780:	6818      	ldr	r0, [r3, #0]
 8002782:	f7ff fe13 	bl	80023ac <queue_pop_elements>
 8002786:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800278a:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800278e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002792:	b29b      	uxth	r3, r3
 8002794:	3309      	adds	r3, #9
 8002796:	461a      	mov	r2, r3
 8002798:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800279c:	4611      	mov	r1, r2
 800279e:	4618      	mov	r0, r3
 80027a0:	f7fe fc80 	bl	80010a4 <verify_CRC16_check_sum>
 80027a4:	f8c7 015c 	str.w	r0, [r7, #348]	@ 0x15c
 80027a8:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d116      	bne.n	80027de <ref_get_msg+0xa2>
 80027b0:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027b4:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027b8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027bc:	801a      	strh	r2, [r3, #0]
 80027be:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027c2:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 80027c6:	681a      	ldr	r2, [r3, #0]
 80027c8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027cc:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027d0:	4610      	mov	r0, r2
 80027d2:	4619      	mov	r1, r3
 80027d4:	2342      	movs	r3, #66	@ 0x42
 80027d6:	461a      	mov	r2, r3
 80027d8:	f018 fbf4 	bl	801afc4 <memcpy>
 80027dc:	e1a1      	b.n	8002b22 <ref_get_msg+0x3e6>
 80027de:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 80027e2:	3307      	adds	r3, #7
 80027e4:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 80027e8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027ec:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 80027f0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80027f4:	b29a      	uxth	r2, r3
 80027f6:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027fa:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027fe:	801a      	strh	r2, [r3, #0]
 8002800:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002804:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8002808:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 800280c:	b29b      	uxth	r3, r3
 800280e:	f240 3202 	movw	r2, #770	@ 0x302
 8002812:	4293      	cmp	r3, r2
 8002814:	f000 815e 	beq.w	8002ad4 <ref_get_msg+0x398>
 8002818:	f240 3202 	movw	r2, #770	@ 0x302
 800281c:	4293      	cmp	r3, r2
 800281e:	f300 8169 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002822:	f240 3201 	movw	r2, #769	@ 0x301
 8002826:	4293      	cmp	r3, r2
 8002828:	f000 8148 	beq.w	8002abc <ref_get_msg+0x380>
 800282c:	f240 3201 	movw	r2, #769	@ 0x301
 8002830:	4293      	cmp	r3, r2
 8002832:	f300 815f 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002836:	f240 220a 	movw	r2, #522	@ 0x20a
 800283a:	4293      	cmp	r3, r2
 800283c:	f300 815a 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002840:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002844:	dc04      	bgt.n	8002850 <ref_get_msg+0x114>
 8002846:	2b04      	cmp	r3, #4
 8002848:	dc40      	bgt.n	80028cc <ref_get_msg+0x190>
 800284a:	2b00      	cmp	r3, #0
 800284c:	dc2e      	bgt.n	80028ac <ref_get_msg+0x170>
 800284e:	e151      	b.n	8002af4 <ref_get_msg+0x3b8>
 8002850:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 8002854:	2b09      	cmp	r3, #9
 8002856:	f200 814d 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 800285a:	a201      	add	r2, pc, #4	@ (adr r2, 8002860 <ref_get_msg+0x124>)
 800285c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002860:	080029b5 	.word	0x080029b5
 8002864:	080029e5 	.word	0x080029e5
 8002868:	08002a05 	.word	0x08002a05
 800286c:	08002a21 	.word	0x08002a21
 8002870:	08002a39 	.word	0x08002a39
 8002874:	08002a4d 	.word	0x08002a4d
 8002878:	08002a5f 	.word	0x08002a5f
 800287c:	08002a7b 	.word	0x08002a7b
 8002880:	08002a93 	.word	0x08002a93
 8002884:	08002aa9 	.word	0x08002aa9
 8002888:	f2a3 1301 	subw	r3, r3, #257	@ 0x101
 800288c:	2b04      	cmp	r3, #4
 800288e:	f200 8131 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 8002892:	a201      	add	r2, pc, #4	@ (adr r2, 8002898 <ref_get_msg+0x15c>)
 8002894:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002898:	0800294b 	.word	0x0800294b
 800289c:	08002961 	.word	0x08002961
 80028a0:	08002977 	.word	0x08002977
 80028a4:	0800298f 	.word	0x0800298f
 80028a8:	080029a3 	.word	0x080029a3
 80028ac:	3b01      	subs	r3, #1
 80028ae:	2b03      	cmp	r3, #3
 80028b0:	f200 8120 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 80028b4:	a201      	add	r2, pc, #4	@ (adr r2, 80028bc <ref_get_msg+0x180>)
 80028b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028ba:	bf00      	nop
 80028bc:	080028dd 	.word	0x080028dd
 80028c0:	080028f5 	.word	0x080028f5
 80028c4:	08002907 	.word	0x08002907
 80028c8:	08002933 	.word	0x08002933
 80028cc:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80028d0:	f280 8110 	bge.w	8002af4 <ref_get_msg+0x3b8>
 80028d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80028d8:	dcd6      	bgt.n	8002888 <ref_get_msg+0x14c>
 80028da:	e10b      	b.n	8002af4 <ref_get_msg+0x3b8>
 80028dc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028e0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80028e4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80028e8:	3302      	adds	r3, #2
 80028ea:	8811      	ldrh	r1, [r2, #0]
 80028ec:	7892      	ldrb	r2, [r2, #2]
 80028ee:	8019      	strh	r1, [r3, #0]
 80028f0:	709a      	strb	r2, [r3, #2]
 80028f2:	e107      	b.n	8002b04 <ref_get_msg+0x3c8>
 80028f4:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80028f8:	781a      	ldrb	r2, [r3, #0]
 80028fa:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028fe:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002902:	709a      	strb	r2, [r3, #2]
 8002904:	e0fe      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002906:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800290a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800290e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002912:	3302      	adds	r3, #2
 8002914:	6814      	ldr	r4, [r2, #0]
 8002916:	6850      	ldr	r0, [r2, #4]
 8002918:	6891      	ldr	r1, [r2, #8]
 800291a:	68d5      	ldr	r5, [r2, #12]
 800291c:	601c      	str	r4, [r3, #0]
 800291e:	6058      	str	r0, [r3, #4]
 8002920:	6099      	str	r1, [r3, #8]
 8002922:	60dd      	str	r5, [r3, #12]
 8002924:	6914      	ldr	r4, [r2, #16]
 8002926:	6950      	ldr	r0, [r2, #20]
 8002928:	6991      	ldr	r1, [r2, #24]
 800292a:	611c      	str	r4, [r3, #16]
 800292c:	6158      	str	r0, [r3, #20]
 800292e:	6199      	str	r1, [r3, #24]
 8002930:	e0e8      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002932:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002936:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800293a:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 800293e:	3302      	adds	r3, #2
 8002940:	8811      	ldrh	r1, [r2, #0]
 8002942:	7892      	ldrb	r2, [r2, #2]
 8002944:	8019      	strh	r1, [r3, #0]
 8002946:	709a      	strb	r2, [r3, #2]
 8002948:	e0dc      	b.n	8002b04 <ref_get_msg+0x3c8>
 800294a:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	461a      	mov	r2, r3
 8002952:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002956:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800295a:	f8c3 2002 	str.w	r2, [r3, #2]
 800295e:	e0d1      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002960:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	461a      	mov	r2, r3
 8002968:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800296c:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002970:	f8c3 2002 	str.w	r2, [r3, #2]
 8002974:	e0c6      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002976:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800297a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800297e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002982:	3302      	adds	r3, #2
 8002984:	8811      	ldrh	r1, [r2, #0]
 8002986:	7892      	ldrb	r2, [r2, #2]
 8002988:	8019      	strh	r1, [r3, #0]
 800298a:	709a      	strb	r2, [r3, #2]
 800298c:	e0ba      	b.n	8002b04 <ref_get_msg+0x3c8>
 800298e:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002992:	881b      	ldrh	r3, [r3, #0]
 8002994:	b29a      	uxth	r2, r3
 8002996:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800299a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800299e:	805a      	strh	r2, [r3, #2]
 80029a0:	e0b0      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029a2:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80029a6:	781a      	ldrb	r2, [r3, #0]
 80029a8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029ac:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029b0:	709a      	strb	r2, [r3, #2]
 80029b2:	e0a7      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029b4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029b8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029bc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029c0:	3302      	adds	r3, #2
 80029c2:	6810      	ldr	r0, [r2, #0]
 80029c4:	6851      	ldr	r1, [r2, #4]
 80029c6:	6895      	ldr	r5, [r2, #8]
 80029c8:	68d4      	ldr	r4, [r2, #12]
 80029ca:	6018      	str	r0, [r3, #0]
 80029cc:	6059      	str	r1, [r3, #4]
 80029ce:	609d      	str	r5, [r3, #8]
 80029d0:	60dc      	str	r4, [r3, #12]
 80029d2:	6910      	ldr	r0, [r2, #16]
 80029d4:	6951      	ldr	r1, [r2, #20]
 80029d6:	6118      	str	r0, [r3, #16]
 80029d8:	6159      	str	r1, [r3, #20]
 80029da:	8b11      	ldrh	r1, [r2, #24]
 80029dc:	7e92      	ldrb	r2, [r2, #26]
 80029de:	8319      	strh	r1, [r3, #24]
 80029e0:	769a      	strb	r2, [r3, #26]
 80029e2:	e08f      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029e4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029e8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029ec:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029f0:	3302      	adds	r3, #2
 80029f2:	6814      	ldr	r4, [r2, #0]
 80029f4:	6850      	ldr	r0, [r2, #4]
 80029f6:	6891      	ldr	r1, [r2, #8]
 80029f8:	68d2      	ldr	r2, [r2, #12]
 80029fa:	601c      	str	r4, [r3, #0]
 80029fc:	6058      	str	r0, [r3, #4]
 80029fe:	6099      	str	r1, [r3, #8]
 8002a00:	60da      	str	r2, [r3, #12]
 8002a02:	e07f      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a08:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a0c:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a10:	3302      	adds	r3, #2
 8002a12:	6810      	ldr	r0, [r2, #0]
 8002a14:	6851      	ldr	r1, [r2, #4]
 8002a16:	6892      	ldr	r2, [r2, #8]
 8002a18:	6018      	str	r0, [r3, #0]
 8002a1a:	6059      	str	r1, [r3, #4]
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	e071      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a20:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a24:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a28:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a2c:	3302      	adds	r3, #2
 8002a2e:	6811      	ldr	r1, [r2, #0]
 8002a30:	6019      	str	r1, [r3, #0]
 8002a32:	8892      	ldrh	r2, [r2, #4]
 8002a34:	809a      	strh	r2, [r3, #4]
 8002a36:	e065      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a38:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a3c:	881b      	ldrh	r3, [r3, #0]
 8002a3e:	b29a      	uxth	r2, r3
 8002a40:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a44:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a48:	805a      	strh	r2, [r3, #2]
 8002a4a:	e05b      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a4c:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a50:	781a      	ldrb	r2, [r3, #0]
 8002a52:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a56:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a5a:	709a      	strb	r2, [r3, #2]
 8002a5c:	e052      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a5e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a62:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a66:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a6a:	3302      	adds	r3, #2
 8002a6c:	6811      	ldr	r1, [r2, #0]
 8002a6e:	6019      	str	r1, [r3, #0]
 8002a70:	8891      	ldrh	r1, [r2, #4]
 8002a72:	7992      	ldrb	r2, [r2, #6]
 8002a74:	8099      	strh	r1, [r3, #4]
 8002a76:	719a      	strb	r2, [r3, #6]
 8002a78:	e044      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a7a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a7e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a82:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a86:	3302      	adds	r3, #2
 8002a88:	6811      	ldr	r1, [r2, #0]
 8002a8a:	6019      	str	r1, [r3, #0]
 8002a8c:	8892      	ldrh	r2, [r2, #4]
 8002a8e:	809a      	strh	r2, [r3, #4]
 8002a90:	e038      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a92:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	461a      	mov	r2, r3
 8002a9a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a9e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002aa2:	f8c3 2002 	str.w	r2, [r3, #2]
 8002aa6:	e02d      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002aa8:	f107 0314 	add.w	r3, r7, #20
 8002aac:	3302      	adds	r3, #2
 8002aae:	2203      	movs	r2, #3
 8002ab0:	f8d7 1158 	ldr.w	r1, [r7, #344]	@ 0x158
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	f018 fa85 	bl	801afc4 <memcpy>
 8002aba:	e023      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002abc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ac0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002ac4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ac8:	3302      	adds	r3, #2
 8002aca:	6811      	ldr	r1, [r2, #0]
 8002acc:	6019      	str	r1, [r3, #0]
 8002ace:	8892      	ldrh	r2, [r2, #4]
 8002ad0:	809a      	strh	r2, [r3, #4]
 8002ad2:	e017      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002ad4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ad8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002adc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ae0:	3302      	adds	r3, #2
 8002ae2:	6814      	ldr	r4, [r2, #0]
 8002ae4:	6850      	ldr	r0, [r2, #4]
 8002ae6:	6891      	ldr	r1, [r2, #8]
 8002ae8:	601c      	str	r4, [r3, #0]
 8002aea:	6058      	str	r0, [r3, #4]
 8002aec:	6099      	str	r1, [r3, #8]
 8002aee:	7b12      	ldrb	r2, [r2, #12]
 8002af0:	731a      	strb	r2, [r3, #12]
 8002af2:	e007      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002af4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002af8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002afc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002b00:	801a      	strh	r2, [r3, #0]
 8002b02:	bf00      	nop
 8002b04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b08:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b0c:	681a      	ldr	r2, [r3, #0]
 8002b0e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b12:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002b16:	4610      	mov	r0, r2
 8002b18:	4619      	mov	r1, r3
 8002b1a:	2342      	movs	r3, #66	@ 0x42
 8002b1c:	461a      	mov	r2, r3
 8002b1e:	f018 fa51 	bl	801afc4 <memcpy>
 8002b22:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b26:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b2a:	6818      	ldr	r0, [r3, #0]
 8002b2c:	f507 77b0 	add.w	r7, r7, #352	@ 0x160
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bdb0      	pop	{r4, r5, r7, pc}

08002b34 <ref_usart_start>:
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b086      	sub	sp, #24
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	603b      	str	r3, [r7, #0]
 8002b40:	4613      	mov	r3, r2
 8002b42:	80fb      	strh	r3, [r7, #6]
 8002b44:	4a3a      	ldr	r2, [pc, #232]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	6013      	str	r3, [r2, #0]
 8002b4a:	4b39      	ldr	r3, [pc, #228]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f7ff fb6a 	bl	8002228 <queue_init>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8002b5a:	b2db      	uxtb	r3, r3
 8002b5c:	2b20      	cmp	r3, #32
 8002b5e:	d162      	bne.n	8002c26 <ref_usart_start+0xf2>
 8002b60:	68bb      	ldr	r3, [r7, #8]
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d002      	beq.n	8002b6c <ref_usart_start+0x38>
 8002b66:	88fb      	ldrh	r3, [r7, #6]
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d101      	bne.n	8002b70 <ref_usart_start+0x3c>
 8002b6c:	2301      	movs	r3, #1
 8002b6e:	e05b      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b76:	2b01      	cmp	r3, #1
 8002b78:	d101      	bne.n	8002b7e <ref_usart_start+0x4a>
 8002b7a:	2302      	movs	r3, #2
 8002b7c:	e054      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	2201      	movs	r2, #1
 8002b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b86:	68ba      	ldr	r2, [r7, #8]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	88fa      	ldrh	r2, [r7, #6]
 8002b90:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	2200      	movs	r2, #0
 8002b96:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	2222      	movs	r2, #34	@ 0x22
 8002b9c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ba4:	4a23      	ldr	r2, [pc, #140]	@ (8002c34 <ref_usart_start+0x100>)
 8002ba6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bac:	4a22      	ldr	r2, [pc, #136]	@ (8002c38 <ref_usart_start+0x104>)
 8002bae:	641a      	str	r2, [r3, #64]	@ 0x40
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	651a      	str	r2, [r3, #80]	@ 0x50
 8002bb8:	f107 0308 	add.w	r3, r7, #8
 8002bbc:	617b      	str	r3, [r7, #20]
 8002bbe:	68fb      	ldr	r3, [r7, #12]
 8002bc0:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	3304      	adds	r3, #4
 8002bc8:	4619      	mov	r1, r3
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	681a      	ldr	r2, [r3, #0]
 8002bce:	88fb      	ldrh	r3, [r7, #6]
 8002bd0:	f009 fd16 	bl	800c600 <HAL_DMA_Start_IT>
 8002bd4:	2300      	movs	r3, #0
 8002bd6:	613b      	str	r3, [r7, #16]
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	613b      	str	r3, [r7, #16]
 8002be0:	68fb      	ldr	r3, [r7, #12]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	693b      	ldr	r3, [r7, #16]
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	2200      	movs	r2, #0
 8002bee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	68da      	ldr	r2, [r3, #12]
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002c00:	60da      	str	r2, [r3, #12]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	695a      	ldr	r2, [r3, #20]
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f042 0201 	orr.w	r2, r2, #1
 8002c10:	615a      	str	r2, [r3, #20]
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	695a      	ldr	r2, [r3, #20]
 8002c18:	68fb      	ldr	r3, [r7, #12]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002c20:	615a      	str	r2, [r3, #20]
 8002c22:	2300      	movs	r3, #0
 8002c24:	e000      	b.n	8002c28 <ref_usart_start+0xf4>
 8002c26:	2302      	movs	r3, #2
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3718      	adds	r7, #24
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	bd80      	pop	{r7, pc}
 8002c30:	20000898 	.word	0x20000898
 8002c34:	08002c99 	.word	0x08002c99
 8002c38:	08002c3d 	.word	0x08002c3d

08002c3c <ref_half_cplt_isr>:
 8002c3c:	b580      	push	{r7, lr}
 8002c3e:	b084      	sub	sp, #16
 8002c40:	af00      	add	r7, sp, #0
 8002c42:	6078      	str	r0, [r7, #4]
 8002c44:	4b11      	ldr	r3, [pc, #68]	@ (8002c8c <ref_half_cplt_isr+0x50>)
 8002c46:	681a      	ldr	r2, [r3, #0]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	68db      	ldr	r3, [r3, #12]
 8002c4e:	781b      	ldrb	r3, [r3, #0]
 8002c50:	4619      	mov	r1, r3
 8002c52:	4610      	mov	r0, r2
 8002c54:	f7ff fb2f 	bl	80022b6 <queue_append_byte>
 8002c58:	2300      	movs	r3, #0
 8002c5a:	60fb      	str	r3, [r7, #12]
 8002c5c:	4b0c      	ldr	r3, [pc, #48]	@ (8002c90 <ref_half_cplt_isr+0x54>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f107 020c 	add.w	r2, r7, #12
 8002c64:	4611      	mov	r1, r2
 8002c66:	4618      	mov	r0, r3
 8002c68:	f016 f9d8 	bl	801901c <vTaskNotifyGiveFromISR>
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d007      	beq.n	8002c82 <ref_half_cplt_isr+0x46>
 8002c72:	4b08      	ldr	r3, [pc, #32]	@ (8002c94 <ref_half_cplt_isr+0x58>)
 8002c74:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002c78:	601a      	str	r2, [r3, #0]
 8002c7a:	f3bf 8f4f 	dsb	sy
 8002c7e:	f3bf 8f6f 	isb	sy
 8002c82:	bf00      	nop
 8002c84:	3710      	adds	r7, #16
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	bf00      	nop
 8002c8c:	20000898 	.word	0x20000898
 8002c90:	20003780 	.word	0x20003780
 8002c94:	e000ed04 	.word	0xe000ed04

08002c98 <ref_full_cplt_isr>:
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	6078      	str	r0, [r7, #4]
 8002ca0:	4b11      	ldr	r3, [pc, #68]	@ (8002ce8 <ref_full_cplt_isr+0x50>)
 8002ca2:	681a      	ldr	r2, [r3, #0]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	3301      	adds	r3, #1
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	4619      	mov	r1, r3
 8002cb0:	4610      	mov	r0, r2
 8002cb2:	f7ff fb00 	bl	80022b6 <queue_append_byte>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	60fb      	str	r3, [r7, #12]
 8002cba:	4b0c      	ldr	r3, [pc, #48]	@ (8002cec <ref_full_cplt_isr+0x54>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	f107 020c 	add.w	r2, r7, #12
 8002cc2:	4611      	mov	r1, r2
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	f016 f9a9 	bl	801901c <vTaskNotifyGiveFromISR>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d007      	beq.n	8002ce0 <ref_full_cplt_isr+0x48>
 8002cd0:	4b07      	ldr	r3, [pc, #28]	@ (8002cf0 <ref_full_cplt_isr+0x58>)
 8002cd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002cd6:	601a      	str	r2, [r3, #0]
 8002cd8:	f3bf 8f4f 	dsb	sy
 8002cdc:	f3bf 8f6f 	isb	sy
 8002ce0:	bf00      	nop
 8002ce2:	3710      	adds	r7, #16
 8002ce4:	46bd      	mov	sp, r7
 8002ce6:	bd80      	pop	{r7, pc}
 8002ce8:	20000898 	.word	0x20000898
 8002cec:	20003780 	.word	0x20003780
 8002cf0:	e000ed04 	.word	0xe000ed04

08002cf4 <MX_ADC3_Init>:
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b084      	sub	sp, #16
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	463b      	mov	r3, r7
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	609a      	str	r2, [r3, #8]
 8002d04:	60da      	str	r2, [r3, #12]
 8002d06:	4b21      	ldr	r3, [pc, #132]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d08:	4a21      	ldr	r2, [pc, #132]	@ (8002d90 <MX_ADC3_Init+0x9c>)
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	4b1f      	ldr	r3, [pc, #124]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d0e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002d12:	605a      	str	r2, [r3, #4]
 8002d14:	4b1d      	ldr	r3, [pc, #116]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d16:	2200      	movs	r2, #0
 8002d18:	609a      	str	r2, [r3, #8]
 8002d1a:	4b1c      	ldr	r3, [pc, #112]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	611a      	str	r2, [r3, #16]
 8002d20:	4b1a      	ldr	r3, [pc, #104]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	761a      	strb	r2, [r3, #24]
 8002d26:	4b19      	ldr	r3, [pc, #100]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d28:	2200      	movs	r2, #0
 8002d2a:	f883 2020 	strb.w	r2, [r3, #32]
 8002d2e:	4b17      	ldr	r3, [pc, #92]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d30:	2200      	movs	r2, #0
 8002d32:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d34:	4b15      	ldr	r3, [pc, #84]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d36:	4a17      	ldr	r2, [pc, #92]	@ (8002d94 <MX_ADC3_Init+0xa0>)
 8002d38:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d3a:	4b14      	ldr	r3, [pc, #80]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	60da      	str	r2, [r3, #12]
 8002d40:	4b12      	ldr	r3, [pc, #72]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d42:	2201      	movs	r2, #1
 8002d44:	61da      	str	r2, [r3, #28]
 8002d46:	4b11      	ldr	r3, [pc, #68]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d48:	2200      	movs	r2, #0
 8002d4a:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
 8002d4e:	4b0f      	ldr	r3, [pc, #60]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d50:	2201      	movs	r2, #1
 8002d52:	615a      	str	r2, [r3, #20]
 8002d54:	480d      	ldr	r0, [pc, #52]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d56:	f008 f9af 	bl	800b0b8 <HAL_ADC_Init>
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d001      	beq.n	8002d64 <MX_ADC3_Init+0x70>
 8002d60:	f000 fd4a 	bl	80037f8 <Error_Handler>
 8002d64:	2308      	movs	r3, #8
 8002d66:	603b      	str	r3, [r7, #0]
 8002d68:	2301      	movs	r3, #1
 8002d6a:	607b      	str	r3, [r7, #4]
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	60bb      	str	r3, [r7, #8]
 8002d70:	463b      	mov	r3, r7
 8002d72:	4619      	mov	r1, r3
 8002d74:	4805      	ldr	r0, [pc, #20]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d76:	f008 f9e3 	bl	800b140 <HAL_ADC_ConfigChannel>
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d001      	beq.n	8002d84 <MX_ADC3_Init+0x90>
 8002d80:	f000 fd3a 	bl	80037f8 <Error_Handler>
 8002d84:	bf00      	nop
 8002d86:	3710      	adds	r7, #16
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd80      	pop	{r7, pc}
 8002d8c:	2000089c 	.word	0x2000089c
 8002d90:	40012200 	.word	0x40012200
 8002d94:	0f000001 	.word	0x0f000001

08002d98 <HAL_ADC_MspInit>:
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	b08a      	sub	sp, #40	@ 0x28
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
 8002da0:	f107 0314 	add.w	r3, r7, #20
 8002da4:	2200      	movs	r2, #0
 8002da6:	601a      	str	r2, [r3, #0]
 8002da8:	605a      	str	r2, [r3, #4]
 8002daa:	609a      	str	r2, [r3, #8]
 8002dac:	60da      	str	r2, [r3, #12]
 8002dae:	611a      	str	r2, [r3, #16]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	4a17      	ldr	r2, [pc, #92]	@ (8002e14 <HAL_ADC_MspInit+0x7c>)
 8002db6:	4293      	cmp	r3, r2
 8002db8:	d128      	bne.n	8002e0c <HAL_ADC_MspInit+0x74>
 8002dba:	2300      	movs	r3, #0
 8002dbc:	613b      	str	r3, [r7, #16]
 8002dbe:	4b16      	ldr	r3, [pc, #88]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dc2:	4a15      	ldr	r2, [pc, #84]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002dc8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002dca:	4b13      	ldr	r3, [pc, #76]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dce:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	693b      	ldr	r3, [r7, #16]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	60fb      	str	r3, [r7, #12]
 8002dda:	4b0f      	ldr	r3, [pc, #60]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dde:	4a0e      	ldr	r2, [pc, #56]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de0:	f043 0320 	orr.w	r3, r3, #32
 8002de4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002de6:	4b0c      	ldr	r3, [pc, #48]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dea:	f003 0320 	and.w	r3, r3, #32
 8002dee:	60fb      	str	r3, [r7, #12]
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002df6:	617b      	str	r3, [r7, #20]
 8002df8:	2303      	movs	r3, #3
 8002dfa:	61bb      	str	r3, [r7, #24]
 8002dfc:	2300      	movs	r3, #0
 8002dfe:	61fb      	str	r3, [r7, #28]
 8002e00:	f107 0314 	add.w	r3, r7, #20
 8002e04:	4619      	mov	r1, r3
 8002e06:	4805      	ldr	r0, [pc, #20]	@ (8002e1c <HAL_ADC_MspInit+0x84>)
 8002e08:	f009 ff5a 	bl	800ccc0 <HAL_GPIO_Init>
 8002e0c:	bf00      	nop
 8002e0e:	3728      	adds	r7, #40	@ 0x28
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	40012200 	.word	0x40012200
 8002e18:	40023800 	.word	0x40023800
 8002e1c:	40021400 	.word	0x40021400

08002e20 <MX_CAN1_Init>:
 8002e20:	b580      	push	{r7, lr}
 8002e22:	af00      	add	r7, sp, #0
 8002e24:	4b17      	ldr	r3, [pc, #92]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e26:	4a18      	ldr	r2, [pc, #96]	@ (8002e88 <MX_CAN1_Init+0x68>)
 8002e28:	601a      	str	r2, [r3, #0]
 8002e2a:	4b16      	ldr	r3, [pc, #88]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e2c:	2203      	movs	r2, #3
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	4b14      	ldr	r3, [pc, #80]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	609a      	str	r2, [r3, #8]
 8002e36:	4b13      	ldr	r3, [pc, #76]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e38:	2200      	movs	r2, #0
 8002e3a:	60da      	str	r2, [r3, #12]
 8002e3c:	4b11      	ldr	r3, [pc, #68]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e3e:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8002e42:	611a      	str	r2, [r3, #16]
 8002e44:	4b0f      	ldr	r3, [pc, #60]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e46:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8002e4a:	615a      	str	r2, [r3, #20]
 8002e4c:	4b0d      	ldr	r3, [pc, #52]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e4e:	2200      	movs	r2, #0
 8002e50:	761a      	strb	r2, [r3, #24]
 8002e52:	4b0c      	ldr	r3, [pc, #48]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	765a      	strb	r2, [r3, #25]
 8002e58:	4b0a      	ldr	r3, [pc, #40]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e5a:	2200      	movs	r2, #0
 8002e5c:	769a      	strb	r2, [r3, #26]
 8002e5e:	4b09      	ldr	r3, [pc, #36]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e60:	2200      	movs	r2, #0
 8002e62:	76da      	strb	r2, [r3, #27]
 8002e64:	4b07      	ldr	r3, [pc, #28]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	771a      	strb	r2, [r3, #28]
 8002e6a:	4b06      	ldr	r3, [pc, #24]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	775a      	strb	r2, [r3, #29]
 8002e70:	4804      	ldr	r0, [pc, #16]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e72:	f008 fb83 	bl	800b57c <HAL_CAN_Init>
 8002e76:	4603      	mov	r3, r0
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d001      	beq.n	8002e80 <MX_CAN1_Init+0x60>
 8002e7c:	f000 fcbc 	bl	80037f8 <Error_Handler>
 8002e80:	bf00      	nop
 8002e82:	bd80      	pop	{r7, pc}
 8002e84:	200008e4 	.word	0x200008e4
 8002e88:	40006400 	.word	0x40006400

08002e8c <MX_CAN2_Init>:
 8002e8c:	b580      	push	{r7, lr}
 8002e8e:	af00      	add	r7, sp, #0
 8002e90:	4b17      	ldr	r3, [pc, #92]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e92:	4a18      	ldr	r2, [pc, #96]	@ (8002ef4 <MX_CAN2_Init+0x68>)
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	4b16      	ldr	r3, [pc, #88]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e98:	2203      	movs	r2, #3
 8002e9a:	605a      	str	r2, [r3, #4]
 8002e9c:	4b14      	ldr	r3, [pc, #80]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	609a      	str	r2, [r3, #8]
 8002ea2:	4b13      	ldr	r3, [pc, #76]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	60da      	str	r2, [r3, #12]
 8002ea8:	4b11      	ldr	r3, [pc, #68]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eaa:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8002eae:	611a      	str	r2, [r3, #16]
 8002eb0:	4b0f      	ldr	r3, [pc, #60]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eb2:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8002eb6:	615a      	str	r2, [r3, #20]
 8002eb8:	4b0d      	ldr	r3, [pc, #52]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eba:	2200      	movs	r2, #0
 8002ebc:	761a      	strb	r2, [r3, #24]
 8002ebe:	4b0c      	ldr	r3, [pc, #48]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	765a      	strb	r2, [r3, #25]
 8002ec4:	4b0a      	ldr	r3, [pc, #40]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	769a      	strb	r2, [r3, #26]
 8002eca:	4b09      	ldr	r3, [pc, #36]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	76da      	strb	r2, [r3, #27]
 8002ed0:	4b07      	ldr	r3, [pc, #28]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	771a      	strb	r2, [r3, #28]
 8002ed6:	4b06      	ldr	r3, [pc, #24]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	775a      	strb	r2, [r3, #29]
 8002edc:	4804      	ldr	r0, [pc, #16]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ede:	f008 fb4d 	bl	800b57c <HAL_CAN_Init>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	d001      	beq.n	8002eec <MX_CAN2_Init+0x60>
 8002ee8:	f000 fc86 	bl	80037f8 <Error_Handler>
 8002eec:	bf00      	nop
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	2000090c 	.word	0x2000090c
 8002ef4:	40006800 	.word	0x40006800

08002ef8 <HAL_CAN_MspInit>:
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b08c      	sub	sp, #48	@ 0x30
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	f107 031c 	add.w	r3, r7, #28
 8002f04:	2200      	movs	r2, #0
 8002f06:	601a      	str	r2, [r3, #0]
 8002f08:	605a      	str	r2, [r3, #4]
 8002f0a:	609a      	str	r2, [r3, #8]
 8002f0c:	60da      	str	r2, [r3, #12]
 8002f0e:	611a      	str	r2, [r3, #16]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	4a52      	ldr	r2, [pc, #328]	@ (8003060 <HAL_CAN_MspInit+0x168>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d145      	bne.n	8002fa6 <HAL_CAN_MspInit+0xae>
 8002f1a:	4b52      	ldr	r3, [pc, #328]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	3301      	adds	r3, #1
 8002f20:	4a50      	ldr	r2, [pc, #320]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f22:	6013      	str	r3, [r2, #0]
 8002f24:	4b4f      	ldr	r3, [pc, #316]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	2b01      	cmp	r3, #1
 8002f2a:	d10d      	bne.n	8002f48 <HAL_CAN_MspInit+0x50>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	61bb      	str	r3, [r7, #24]
 8002f30:	4b4d      	ldr	r3, [pc, #308]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f34:	4a4c      	ldr	r2, [pc, #304]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f36:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002f3a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f3c:	4b4a      	ldr	r3, [pc, #296]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f40:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f44:	61bb      	str	r3, [r7, #24]
 8002f46:	69bb      	ldr	r3, [r7, #24]
 8002f48:	2300      	movs	r3, #0
 8002f4a:	617b      	str	r3, [r7, #20]
 8002f4c:	4b46      	ldr	r3, [pc, #280]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f50:	4a45      	ldr	r2, [pc, #276]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f52:	f043 0308 	orr.w	r3, r3, #8
 8002f56:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f58:	4b43      	ldr	r3, [pc, #268]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f5c:	f003 0308 	and.w	r3, r3, #8
 8002f60:	617b      	str	r3, [r7, #20]
 8002f62:	697b      	ldr	r3, [r7, #20]
 8002f64:	2303      	movs	r3, #3
 8002f66:	61fb      	str	r3, [r7, #28]
 8002f68:	2302      	movs	r3, #2
 8002f6a:	623b      	str	r3, [r7, #32]
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f70:	2303      	movs	r3, #3
 8002f72:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002f74:	2309      	movs	r3, #9
 8002f76:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002f78:	f107 031c 	add.w	r3, r7, #28
 8002f7c:	4619      	mov	r1, r3
 8002f7e:	483b      	ldr	r0, [pc, #236]	@ (800306c <HAL_CAN_MspInit+0x174>)
 8002f80:	f009 fe9e 	bl	800ccc0 <HAL_GPIO_Init>
 8002f84:	2200      	movs	r2, #0
 8002f86:	2105      	movs	r1, #5
 8002f88:	2014      	movs	r0, #20
 8002f8a:	f009 fa53 	bl	800c434 <HAL_NVIC_SetPriority>
 8002f8e:	2014      	movs	r0, #20
 8002f90:	f009 fa6c 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8002f94:	2200      	movs	r2, #0
 8002f96:	2105      	movs	r1, #5
 8002f98:	2015      	movs	r0, #21
 8002f9a:	f009 fa4b 	bl	800c434 <HAL_NVIC_SetPriority>
 8002f9e:	2015      	movs	r0, #21
 8002fa0:	f009 fa64 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8002fa4:	e057      	b.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a31      	ldr	r2, [pc, #196]	@ (8003070 <HAL_CAN_MspInit+0x178>)
 8002fac:	4293      	cmp	r3, r2
 8002fae:	d152      	bne.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	613b      	str	r3, [r7, #16]
 8002fb4:	4b2c      	ldr	r3, [pc, #176]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb8:	4a2b      	ldr	r2, [pc, #172]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fba:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002fbe:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fc0:	4b29      	ldr	r3, [pc, #164]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fc4:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002fc8:	613b      	str	r3, [r7, #16]
 8002fca:	693b      	ldr	r3, [r7, #16]
 8002fcc:	4b25      	ldr	r3, [pc, #148]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	3301      	adds	r3, #1
 8002fd2:	4a24      	ldr	r2, [pc, #144]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd4:	6013      	str	r3, [r2, #0]
 8002fd6:	4b23      	ldr	r3, [pc, #140]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	2b01      	cmp	r3, #1
 8002fdc:	d10d      	bne.n	8002ffa <HAL_CAN_MspInit+0x102>
 8002fde:	2300      	movs	r3, #0
 8002fe0:	60fb      	str	r3, [r7, #12]
 8002fe2:	4b21      	ldr	r3, [pc, #132]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fe6:	4a20      	ldr	r2, [pc, #128]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002fec:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fee:	4b1e      	ldr	r3, [pc, #120]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002ff0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ff2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ff6:	60fb      	str	r3, [r7, #12]
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	2300      	movs	r3, #0
 8002ffc:	60bb      	str	r3, [r7, #8]
 8002ffe:	4b1a      	ldr	r3, [pc, #104]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003000:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003002:	4a19      	ldr	r2, [pc, #100]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003004:	f043 0302 	orr.w	r3, r3, #2
 8003008:	6313      	str	r3, [r2, #48]	@ 0x30
 800300a:	4b17      	ldr	r3, [pc, #92]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 800300c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800300e:	f003 0302 	and.w	r3, r3, #2
 8003012:	60bb      	str	r3, [r7, #8]
 8003014:	68bb      	ldr	r3, [r7, #8]
 8003016:	2360      	movs	r3, #96	@ 0x60
 8003018:	61fb      	str	r3, [r7, #28]
 800301a:	2302      	movs	r3, #2
 800301c:	623b      	str	r3, [r7, #32]
 800301e:	2300      	movs	r3, #0
 8003020:	627b      	str	r3, [r7, #36]	@ 0x24
 8003022:	2303      	movs	r3, #3
 8003024:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003026:	2309      	movs	r3, #9
 8003028:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800302a:	f107 031c 	add.w	r3, r7, #28
 800302e:	4619      	mov	r1, r3
 8003030:	4810      	ldr	r0, [pc, #64]	@ (8003074 <HAL_CAN_MspInit+0x17c>)
 8003032:	f009 fe45 	bl	800ccc0 <HAL_GPIO_Init>
 8003036:	2200      	movs	r2, #0
 8003038:	2105      	movs	r1, #5
 800303a:	2040      	movs	r0, #64	@ 0x40
 800303c:	f009 f9fa 	bl	800c434 <HAL_NVIC_SetPriority>
 8003040:	2040      	movs	r0, #64	@ 0x40
 8003042:	f009 fa13 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003046:	2200      	movs	r2, #0
 8003048:	2105      	movs	r1, #5
 800304a:	2041      	movs	r0, #65	@ 0x41
 800304c:	f009 f9f2 	bl	800c434 <HAL_NVIC_SetPriority>
 8003050:	2041      	movs	r0, #65	@ 0x41
 8003052:	f009 fa0b 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003056:	bf00      	nop
 8003058:	3730      	adds	r7, #48	@ 0x30
 800305a:	46bd      	mov	sp, r7
 800305c:	bd80      	pop	{r7, pc}
 800305e:	bf00      	nop
 8003060:	40006400 	.word	0x40006400
 8003064:	20000934 	.word	0x20000934
 8003068:	40023800 	.word	0x40023800
 800306c:	40020c00 	.word	0x40020c00
 8003070:	40006800 	.word	0x40006800
 8003074:	40020400 	.word	0x40020400

08003078 <MX_DMA_Init>:
 8003078:	b580      	push	{r7, lr}
 800307a:	b082      	sub	sp, #8
 800307c:	af00      	add	r7, sp, #0
 800307e:	2300      	movs	r3, #0
 8003080:	607b      	str	r3, [r7, #4]
 8003082:	4b2f      	ldr	r3, [pc, #188]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003086:	4a2e      	ldr	r2, [pc, #184]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003088:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800308c:	6313      	str	r3, [r2, #48]	@ 0x30
 800308e:	4b2c      	ldr	r3, [pc, #176]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003092:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003096:	607b      	str	r3, [r7, #4]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2300      	movs	r3, #0
 800309c:	603b      	str	r3, [r7, #0]
 800309e:	4b28      	ldr	r3, [pc, #160]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030a2:	4a27      	ldr	r2, [pc, #156]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80030a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80030aa:	4b25      	ldr	r3, [pc, #148]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ae:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80030b2:	603b      	str	r3, [r7, #0]
 80030b4:	683b      	ldr	r3, [r7, #0]
 80030b6:	2200      	movs	r2, #0
 80030b8:	2105      	movs	r1, #5
 80030ba:	200c      	movs	r0, #12
 80030bc:	f009 f9ba 	bl	800c434 <HAL_NVIC_SetPriority>
 80030c0:	200c      	movs	r0, #12
 80030c2:	f009 f9d3 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80030c6:	2200      	movs	r2, #0
 80030c8:	2105      	movs	r1, #5
 80030ca:	200d      	movs	r0, #13
 80030cc:	f009 f9b2 	bl	800c434 <HAL_NVIC_SetPriority>
 80030d0:	200d      	movs	r0, #13
 80030d2:	f009 f9cb 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80030d6:	2200      	movs	r2, #0
 80030d8:	2105      	movs	r1, #5
 80030da:	200f      	movs	r0, #15
 80030dc:	f009 f9aa 	bl	800c434 <HAL_NVIC_SetPriority>
 80030e0:	200f      	movs	r0, #15
 80030e2:	f009 f9c3 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80030e6:	2200      	movs	r2, #0
 80030e8:	2105      	movs	r1, #5
 80030ea:	2038      	movs	r0, #56	@ 0x38
 80030ec:	f009 f9a2 	bl	800c434 <HAL_NVIC_SetPriority>
 80030f0:	2038      	movs	r0, #56	@ 0x38
 80030f2:	f009 f9bb 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80030f6:	2200      	movs	r2, #0
 80030f8:	2105      	movs	r1, #5
 80030fa:	2039      	movs	r0, #57	@ 0x39
 80030fc:	f009 f99a 	bl	800c434 <HAL_NVIC_SetPriority>
 8003100:	2039      	movs	r0, #57	@ 0x39
 8003102:	f009 f9b3 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003106:	2200      	movs	r2, #0
 8003108:	2105      	movs	r1, #5
 800310a:	203b      	movs	r0, #59	@ 0x3b
 800310c:	f009 f992 	bl	800c434 <HAL_NVIC_SetPriority>
 8003110:	203b      	movs	r0, #59	@ 0x3b
 8003112:	f009 f9ab 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003116:	2200      	movs	r2, #0
 8003118:	2105      	movs	r1, #5
 800311a:	2044      	movs	r0, #68	@ 0x44
 800311c:	f009 f98a 	bl	800c434 <HAL_NVIC_SetPriority>
 8003120:	2044      	movs	r0, #68	@ 0x44
 8003122:	f009 f9a3 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003126:	2200      	movs	r2, #0
 8003128:	2105      	movs	r1, #5
 800312a:	2045      	movs	r0, #69	@ 0x45
 800312c:	f009 f982 	bl	800c434 <HAL_NVIC_SetPriority>
 8003130:	2045      	movs	r0, #69	@ 0x45
 8003132:	f009 f99b 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003136:	bf00      	nop
 8003138:	3708      	adds	r7, #8
 800313a:	46bd      	mov	sp, r7
 800313c:	bd80      	pop	{r7, pc}
 800313e:	bf00      	nop
 8003140:	40023800 	.word	0x40023800

08003144 <configureTimerForRunTimeStats>:
 8003144:	b480      	push	{r7}
 8003146:	af00      	add	r7, sp, #0
 8003148:	bf00      	nop
 800314a:	46bd      	mov	sp, r7
 800314c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003150:	4770      	bx	lr

08003152 <getRunTimeCounterValue>:
 8003152:	b480      	push	{r7}
 8003154:	af00      	add	r7, sp, #0
 8003156:	2300      	movs	r3, #0
 8003158:	4618      	mov	r0, r3
 800315a:	46bd      	mov	sp, r7
 800315c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003160:	4770      	bx	lr

08003162 <vApplicationStackOverflowHook>:
 8003162:	b480      	push	{r7}
 8003164:	b083      	sub	sp, #12
 8003166:	af00      	add	r7, sp, #0
 8003168:	6078      	str	r0, [r7, #4]
 800316a:	6039      	str	r1, [r7, #0]
 800316c:	bf00      	nop
 800316e:	370c      	adds	r7, #12
 8003170:	46bd      	mov	sp, r7
 8003172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003176:	4770      	bx	lr

08003178 <vApplicationGetIdleTaskMemory>:
 8003178:	b480      	push	{r7}
 800317a:	b085      	sub	sp, #20
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	4a07      	ldr	r2, [pc, #28]	@ (80031a4 <vApplicationGetIdleTaskMemory+0x2c>)
 8003188:	601a      	str	r2, [r3, #0]
 800318a:	68bb      	ldr	r3, [r7, #8]
 800318c:	4a06      	ldr	r2, [pc, #24]	@ (80031a8 <vApplicationGetIdleTaskMemory+0x30>)
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003196:	601a      	str	r2, [r3, #0]
 8003198:	bf00      	nop
 800319a:	3714      	adds	r7, #20
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr
 80031a4:	20000940 	.word	0x20000940
 80031a8:	20000ac0 	.word	0x20000ac0

080031ac <vApplicationGetTimerTaskMemory>:
 80031ac:	b480      	push	{r7}
 80031ae:	b085      	sub	sp, #20
 80031b0:	af00      	add	r7, sp, #0
 80031b2:	60f8      	str	r0, [r7, #12]
 80031b4:	60b9      	str	r1, [r7, #8]
 80031b6:	607a      	str	r2, [r7, #4]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	4a07      	ldr	r2, [pc, #28]	@ (80031d8 <vApplicationGetTimerTaskMemory+0x2c>)
 80031bc:	601a      	str	r2, [r3, #0]
 80031be:	68bb      	ldr	r3, [r7, #8]
 80031c0:	4a06      	ldr	r2, [pc, #24]	@ (80031dc <vApplicationGetTimerTaskMemory+0x30>)
 80031c2:	601a      	str	r2, [r3, #0]
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031ca:	601a      	str	r2, [r3, #0]
 80031cc:	bf00      	nop
 80031ce:	3714      	adds	r7, #20
 80031d0:	46bd      	mov	sp, r7
 80031d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d6:	4770      	bx	lr
 80031d8:	20000ec0 	.word	0x20000ec0
 80031dc:	20001040 	.word	0x20001040

080031e0 <MX_FREERTOS_Init>:
 80031e0:	b5b0      	push	{r4, r5, r7, lr}
 80031e2:	b08a      	sub	sp, #40	@ 0x28
 80031e4:	af02      	add	r7, sp, #8
 80031e6:	4b10      	ldr	r3, [pc, #64]	@ (8003228 <MX_FREERTOS_Init+0x48>)
 80031e8:	1d3c      	adds	r4, r7, #4
 80031ea:	461d      	mov	r5, r3
 80031ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80031ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80031f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80031f4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80031f8:	1d3b      	adds	r3, r7, #4
 80031fa:	2100      	movs	r1, #0
 80031fc:	4618      	mov	r0, r3
 80031fe:	f013 fee6 	bl	8016fce <osThreadCreate>
 8003202:	4603      	mov	r3, r0
 8003204:	4a09      	ldr	r2, [pc, #36]	@ (800322c <MX_FREERTOS_Init+0x4c>)
 8003206:	6013      	str	r3, [r2, #0]
 8003208:	4b09      	ldr	r3, [pc, #36]	@ (8003230 <MX_FREERTOS_Init+0x50>)
 800320a:	9301      	str	r3, [sp, #4]
 800320c:	230c      	movs	r3, #12
 800320e:	9300      	str	r3, [sp, #0]
 8003210:	2301      	movs	r3, #1
 8003212:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003216:	4907      	ldr	r1, [pc, #28]	@ (8003234 <MX_FREERTOS_Init+0x54>)
 8003218:	4807      	ldr	r0, [pc, #28]	@ (8003238 <MX_FREERTOS_Init+0x58>)
 800321a:	f014 fedb 	bl	8017fd4 <xTaskCreate>
 800321e:	bf00      	nop
 8003220:	3720      	adds	r7, #32
 8003222:	46bd      	mov	sp, r7
 8003224:	bdb0      	pop	{r4, r5, r7, pc}
 8003226:	bf00      	nop
 8003228:	08020ed8 	.word	0x08020ed8
 800322c:	2000093c 	.word	0x2000093c
 8003230:	20000938 	.word	0x20000938
 8003234:	08020ec0 	.word	0x08020ec0
 8003238:	080085d1 	.word	0x080085d1

0800323c <StartDefaultTask>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b082      	sub	sp, #8
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	f016 ffa0 	bl	801a188 <MX_USB_DEVICE_Init>
 8003248:	4801      	ldr	r0, [pc, #4]	@ (8003250 <StartDefaultTask+0x14>)
 800324a:	f013 ff0c 	bl	8017066 <osDelay>
 800324e:	e7fb      	b.n	8003248 <StartDefaultTask+0xc>
 8003250:	000186a0 	.word	0x000186a0

08003254 <MX_GPIO_Init>:
 8003254:	b580      	push	{r7, lr}
 8003256:	b08e      	sub	sp, #56	@ 0x38
 8003258:	af00      	add	r7, sp, #0
 800325a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800325e:	2200      	movs	r2, #0
 8003260:	601a      	str	r2, [r3, #0]
 8003262:	605a      	str	r2, [r3, #4]
 8003264:	609a      	str	r2, [r3, #8]
 8003266:	60da      	str	r2, [r3, #12]
 8003268:	611a      	str	r2, [r3, #16]
 800326a:	2300      	movs	r3, #0
 800326c:	623b      	str	r3, [r7, #32]
 800326e:	4b84      	ldr	r3, [pc, #528]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003270:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003272:	4a83      	ldr	r2, [pc, #524]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003274:	f043 0302 	orr.w	r3, r3, #2
 8003278:	6313      	str	r3, [r2, #48]	@ 0x30
 800327a:	4b81      	ldr	r3, [pc, #516]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800327c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800327e:	f003 0302 	and.w	r3, r3, #2
 8003282:	623b      	str	r3, [r7, #32]
 8003284:	6a3b      	ldr	r3, [r7, #32]
 8003286:	2300      	movs	r3, #0
 8003288:	61fb      	str	r3, [r7, #28]
 800328a:	4b7d      	ldr	r3, [pc, #500]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800328c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800328e:	4a7c      	ldr	r2, [pc, #496]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003290:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003294:	6313      	str	r3, [r2, #48]	@ 0x30
 8003296:	4b7a      	ldr	r3, [pc, #488]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003298:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800329a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800329e:	61fb      	str	r3, [r7, #28]
 80032a0:	69fb      	ldr	r3, [r7, #28]
 80032a2:	2300      	movs	r3, #0
 80032a4:	61bb      	str	r3, [r7, #24]
 80032a6:	4b76      	ldr	r3, [pc, #472]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032aa:	4a75      	ldr	r2, [pc, #468]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ac:	f043 0301 	orr.w	r3, r3, #1
 80032b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80032b2:	4b73      	ldr	r3, [pc, #460]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032b6:	f003 0301 	and.w	r3, r3, #1
 80032ba:	61bb      	str	r3, [r7, #24]
 80032bc:	69bb      	ldr	r3, [r7, #24]
 80032be:	2300      	movs	r3, #0
 80032c0:	617b      	str	r3, [r7, #20]
 80032c2:	4b6f      	ldr	r3, [pc, #444]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032c6:	4a6e      	ldr	r2, [pc, #440]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c8:	f043 0308 	orr.w	r3, r3, #8
 80032cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ce:	4b6c      	ldr	r3, [pc, #432]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d2:	f003 0308 	and.w	r3, r3, #8
 80032d6:	617b      	str	r3, [r7, #20]
 80032d8:	697b      	ldr	r3, [r7, #20]
 80032da:	2300      	movs	r3, #0
 80032dc:	613b      	str	r3, [r7, #16]
 80032de:	4b68      	ldr	r3, [pc, #416]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032e2:	4a67      	ldr	r2, [pc, #412]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e4:	f043 0304 	orr.w	r3, r3, #4
 80032e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ea:	4b65      	ldr	r3, [pc, #404]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032ee:	f003 0304 	and.w	r3, r3, #4
 80032f2:	613b      	str	r3, [r7, #16]
 80032f4:	693b      	ldr	r3, [r7, #16]
 80032f6:	2300      	movs	r3, #0
 80032f8:	60fb      	str	r3, [r7, #12]
 80032fa:	4b61      	ldr	r3, [pc, #388]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032fe:	4a60      	ldr	r2, [pc, #384]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003300:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003304:	6313      	str	r3, [r2, #48]	@ 0x30
 8003306:	4b5e      	ldr	r3, [pc, #376]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800330a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800330e:	60fb      	str	r3, [r7, #12]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	2300      	movs	r3, #0
 8003314:	60bb      	str	r3, [r7, #8]
 8003316:	4b5a      	ldr	r3, [pc, #360]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800331a:	4a59      	ldr	r2, [pc, #356]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800331c:	f043 0320 	orr.w	r3, r3, #32
 8003320:	6313      	str	r3, [r2, #48]	@ 0x30
 8003322:	4b57      	ldr	r3, [pc, #348]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003324:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003326:	f003 0320 	and.w	r3, r3, #32
 800332a:	60bb      	str	r3, [r7, #8]
 800332c:	68bb      	ldr	r3, [r7, #8]
 800332e:	2300      	movs	r3, #0
 8003330:	607b      	str	r3, [r7, #4]
 8003332:	4b53      	ldr	r3, [pc, #332]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003336:	4a52      	ldr	r2, [pc, #328]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003338:	f043 0310 	orr.w	r3, r3, #16
 800333c:	6313      	str	r3, [r2, #48]	@ 0x30
 800333e:	4b50      	ldr	r3, [pc, #320]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003342:	f003 0310 	and.w	r3, r3, #16
 8003346:	607b      	str	r3, [r7, #4]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2200      	movs	r2, #0
 800334c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003350:	484c      	ldr	r0, [pc, #304]	@ (8003484 <MX_GPIO_Init+0x230>)
 8003352:	f009 fe51 	bl	800cff8 <HAL_GPIO_WritePin>
 8003356:	2200      	movs	r2, #0
 8003358:	2140      	movs	r1, #64	@ 0x40
 800335a:	484b      	ldr	r0, [pc, #300]	@ (8003488 <MX_GPIO_Init+0x234>)
 800335c:	f009 fe4c 	bl	800cff8 <HAL_GPIO_WritePin>
 8003360:	2201      	movs	r2, #1
 8003362:	2110      	movs	r1, #16
 8003364:	4849      	ldr	r0, [pc, #292]	@ (800348c <MX_GPIO_Init+0x238>)
 8003366:	f009 fe47 	bl	800cff8 <HAL_GPIO_WritePin>
 800336a:	2201      	movs	r2, #1
 800336c:	2101      	movs	r1, #1
 800336e:	4848      	ldr	r0, [pc, #288]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003370:	f009 fe42 	bl	800cff8 <HAL_GPIO_WritePin>
 8003374:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003378:	627b      	str	r3, [r7, #36]	@ 0x24
 800337a:	2301      	movs	r3, #1
 800337c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800337e:	2300      	movs	r3, #0
 8003380:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003382:	2300      	movs	r3, #0
 8003384:	633b      	str	r3, [r7, #48]	@ 0x30
 8003386:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800338a:	4619      	mov	r1, r3
 800338c:	483d      	ldr	r0, [pc, #244]	@ (8003484 <MX_GPIO_Init+0x230>)
 800338e:	f009 fc97 	bl	800ccc0 <HAL_GPIO_Init>
 8003392:	2340      	movs	r3, #64	@ 0x40
 8003394:	627b      	str	r3, [r7, #36]	@ 0x24
 8003396:	2301      	movs	r3, #1
 8003398:	62bb      	str	r3, [r7, #40]	@ 0x28
 800339a:	2300      	movs	r3, #0
 800339c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800339e:	2300      	movs	r3, #0
 80033a0:	633b      	str	r3, [r7, #48]	@ 0x30
 80033a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033a6:	4619      	mov	r1, r3
 80033a8:	4837      	ldr	r0, [pc, #220]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033aa:	f009 fc89 	bl	800ccc0 <HAL_GPIO_Init>
 80033ae:	2308      	movs	r3, #8
 80033b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80033b2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033b8:	2301      	movs	r3, #1
 80033ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033bc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033c0:	4619      	mov	r1, r3
 80033c2:	4831      	ldr	r0, [pc, #196]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033c4:	f009 fc7c 	bl	800ccc0 <HAL_GPIO_Init>
 80033c8:	2310      	movs	r3, #16
 80033ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80033cc:	2301      	movs	r3, #1
 80033ce:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033d0:	2300      	movs	r3, #0
 80033d2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033d4:	2300      	movs	r3, #0
 80033d6:	633b      	str	r3, [r7, #48]	@ 0x30
 80033d8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033dc:	4619      	mov	r1, r3
 80033de:	482b      	ldr	r0, [pc, #172]	@ (800348c <MX_GPIO_Init+0x238>)
 80033e0:	f009 fc6e 	bl	800ccc0 <HAL_GPIO_Init>
 80033e4:	2330      	movs	r3, #48	@ 0x30
 80033e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80033e8:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033ee:	2301      	movs	r3, #1
 80033f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033f2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033f6:	4619      	mov	r1, r3
 80033f8:	4822      	ldr	r0, [pc, #136]	@ (8003484 <MX_GPIO_Init+0x230>)
 80033fa:	f009 fc61 	bl	800ccc0 <HAL_GPIO_Init>
 80033fe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003402:	627b      	str	r3, [r7, #36]	@ 0x24
 8003404:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8003408:	62bb      	str	r3, [r7, #40]	@ 0x28
 800340a:	2300      	movs	r3, #0
 800340c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800340e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003412:	4619      	mov	r1, r3
 8003414:	481f      	ldr	r0, [pc, #124]	@ (8003494 <MX_GPIO_Init+0x240>)
 8003416:	f009 fc53 	bl	800ccc0 <HAL_GPIO_Init>
 800341a:	2301      	movs	r3, #1
 800341c:	627b      	str	r3, [r7, #36]	@ 0x24
 800341e:	2301      	movs	r3, #1
 8003420:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003422:	2300      	movs	r3, #0
 8003424:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003426:	2300      	movs	r3, #0
 8003428:	633b      	str	r3, [r7, #48]	@ 0x30
 800342a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800342e:	4619      	mov	r1, r3
 8003430:	4817      	ldr	r0, [pc, #92]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003432:	f009 fc45 	bl	800ccc0 <HAL_GPIO_Init>
 8003436:	2200      	movs	r2, #0
 8003438:	2105      	movs	r1, #5
 800343a:	2009      	movs	r0, #9
 800343c:	f008 fffa 	bl	800c434 <HAL_NVIC_SetPriority>
 8003440:	2009      	movs	r0, #9
 8003442:	f009 f813 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003446:	2200      	movs	r2, #0
 8003448:	2105      	movs	r1, #5
 800344a:	200a      	movs	r0, #10
 800344c:	f008 fff2 	bl	800c434 <HAL_NVIC_SetPriority>
 8003450:	200a      	movs	r0, #10
 8003452:	f009 f80b 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003456:	2200      	movs	r2, #0
 8003458:	2105      	movs	r1, #5
 800345a:	2017      	movs	r0, #23
 800345c:	f008 ffea 	bl	800c434 <HAL_NVIC_SetPriority>
 8003460:	2017      	movs	r0, #23
 8003462:	f009 f803 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003466:	2200      	movs	r2, #0
 8003468:	2105      	movs	r1, #5
 800346a:	2028      	movs	r0, #40	@ 0x28
 800346c:	f008 ffe2 	bl	800c434 <HAL_NVIC_SetPriority>
 8003470:	2028      	movs	r0, #40	@ 0x28
 8003472:	f008 fffb 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003476:	bf00      	nop
 8003478:	3738      	adds	r7, #56	@ 0x38
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}
 800347e:	bf00      	nop
 8003480:	40023800 	.word	0x40023800
 8003484:	40020800 	.word	0x40020800
 8003488:	40021800 	.word	0x40021800
 800348c:	40020000 	.word	0x40020000
 8003490:	40020400 	.word	0x40020400
 8003494:	40021000 	.word	0x40021000

08003498 <MX_I2C3_Init>:
 8003498:	b580      	push	{r7, lr}
 800349a:	af00      	add	r7, sp, #0
 800349c:	4b12      	ldr	r3, [pc, #72]	@ (80034e8 <MX_I2C3_Init+0x50>)
 800349e:	4a13      	ldr	r2, [pc, #76]	@ (80034ec <MX_I2C3_Init+0x54>)
 80034a0:	601a      	str	r2, [r3, #0]
 80034a2:	4b11      	ldr	r3, [pc, #68]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034a4:	4a12      	ldr	r2, [pc, #72]	@ (80034f0 <MX_I2C3_Init+0x58>)
 80034a6:	605a      	str	r2, [r3, #4]
 80034a8:	4b0f      	ldr	r3, [pc, #60]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034aa:	2200      	movs	r2, #0
 80034ac:	609a      	str	r2, [r3, #8]
 80034ae:	4b0e      	ldr	r3, [pc, #56]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b0:	2200      	movs	r2, #0
 80034b2:	60da      	str	r2, [r3, #12]
 80034b4:	4b0c      	ldr	r3, [pc, #48]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b6:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80034ba:	611a      	str	r2, [r3, #16]
 80034bc:	4b0a      	ldr	r3, [pc, #40]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034be:	2200      	movs	r2, #0
 80034c0:	615a      	str	r2, [r3, #20]
 80034c2:	4b09      	ldr	r3, [pc, #36]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034c4:	2200      	movs	r2, #0
 80034c6:	619a      	str	r2, [r3, #24]
 80034c8:	4b07      	ldr	r3, [pc, #28]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034ca:	2200      	movs	r2, #0
 80034cc:	61da      	str	r2, [r3, #28]
 80034ce:	4b06      	ldr	r3, [pc, #24]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d0:	2200      	movs	r2, #0
 80034d2:	621a      	str	r2, [r3, #32]
 80034d4:	4804      	ldr	r0, [pc, #16]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d6:	f009 fdc1 	bl	800d05c <HAL_I2C_Init>
 80034da:	4603      	mov	r3, r0
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d001      	beq.n	80034e4 <MX_I2C3_Init+0x4c>
 80034e0:	f000 f98a 	bl	80037f8 <Error_Handler>
 80034e4:	bf00      	nop
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	20001840 	.word	0x20001840
 80034ec:	40005c00 	.word	0x40005c00
 80034f0:	00061a80 	.word	0x00061a80

080034f4 <HAL_I2C_MspInit>:
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b08a      	sub	sp, #40	@ 0x28
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	6078      	str	r0, [r7, #4]
 80034fc:	f107 0314 	add.w	r3, r7, #20
 8003500:	2200      	movs	r2, #0
 8003502:	601a      	str	r2, [r3, #0]
 8003504:	605a      	str	r2, [r3, #4]
 8003506:	609a      	str	r2, [r3, #8]
 8003508:	60da      	str	r2, [r3, #12]
 800350a:	611a      	str	r2, [r3, #16]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	4a5b      	ldr	r2, [pc, #364]	@ (8003680 <HAL_I2C_MspInit+0x18c>)
 8003512:	4293      	cmp	r3, r2
 8003514:	f040 80b0 	bne.w	8003678 <HAL_I2C_MspInit+0x184>
 8003518:	2300      	movs	r3, #0
 800351a:	613b      	str	r3, [r7, #16]
 800351c:	4b59      	ldr	r3, [pc, #356]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800351e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003520:	4a58      	ldr	r2, [pc, #352]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003522:	f043 0304 	orr.w	r3, r3, #4
 8003526:	6313      	str	r3, [r2, #48]	@ 0x30
 8003528:	4b56      	ldr	r3, [pc, #344]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800352a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800352c:	f003 0304 	and.w	r3, r3, #4
 8003530:	613b      	str	r3, [r7, #16]
 8003532:	693b      	ldr	r3, [r7, #16]
 8003534:	2300      	movs	r3, #0
 8003536:	60fb      	str	r3, [r7, #12]
 8003538:	4b52      	ldr	r3, [pc, #328]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800353c:	4a51      	ldr	r2, [pc, #324]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353e:	f043 0301 	orr.w	r3, r3, #1
 8003542:	6313      	str	r3, [r2, #48]	@ 0x30
 8003544:	4b4f      	ldr	r3, [pc, #316]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003546:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003548:	f003 0301 	and.w	r3, r3, #1
 800354c:	60fb      	str	r3, [r7, #12]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003554:	617b      	str	r3, [r7, #20]
 8003556:	2312      	movs	r3, #18
 8003558:	61bb      	str	r3, [r7, #24]
 800355a:	2301      	movs	r3, #1
 800355c:	61fb      	str	r3, [r7, #28]
 800355e:	2303      	movs	r3, #3
 8003560:	623b      	str	r3, [r7, #32]
 8003562:	2304      	movs	r3, #4
 8003564:	627b      	str	r3, [r7, #36]	@ 0x24
 8003566:	f107 0314 	add.w	r3, r7, #20
 800356a:	4619      	mov	r1, r3
 800356c:	4846      	ldr	r0, [pc, #280]	@ (8003688 <HAL_I2C_MspInit+0x194>)
 800356e:	f009 fba7 	bl	800ccc0 <HAL_GPIO_Init>
 8003572:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003576:	617b      	str	r3, [r7, #20]
 8003578:	2312      	movs	r3, #18
 800357a:	61bb      	str	r3, [r7, #24]
 800357c:	2301      	movs	r3, #1
 800357e:	61fb      	str	r3, [r7, #28]
 8003580:	2303      	movs	r3, #3
 8003582:	623b      	str	r3, [r7, #32]
 8003584:	2304      	movs	r3, #4
 8003586:	627b      	str	r3, [r7, #36]	@ 0x24
 8003588:	f107 0314 	add.w	r3, r7, #20
 800358c:	4619      	mov	r1, r3
 800358e:	483f      	ldr	r0, [pc, #252]	@ (800368c <HAL_I2C_MspInit+0x198>)
 8003590:	f009 fb96 	bl	800ccc0 <HAL_GPIO_Init>
 8003594:	2300      	movs	r3, #0
 8003596:	60bb      	str	r3, [r7, #8]
 8003598:	4b3a      	ldr	r3, [pc, #232]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800359c:	4a39      	ldr	r2, [pc, #228]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80035a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80035a4:	4b37      	ldr	r3, [pc, #220]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 80035a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035a8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80035ac:	60bb      	str	r3, [r7, #8]
 80035ae:	68bb      	ldr	r3, [r7, #8]
 80035b0:	4b37      	ldr	r3, [pc, #220]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b2:	4a38      	ldr	r2, [pc, #224]	@ (8003694 <HAL_I2C_MspInit+0x1a0>)
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	4b36      	ldr	r3, [pc, #216]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80035bc:	605a      	str	r2, [r3, #4]
 80035be:	4b34      	ldr	r3, [pc, #208]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c0:	2200      	movs	r2, #0
 80035c2:	609a      	str	r2, [r3, #8]
 80035c4:	4b32      	ldr	r3, [pc, #200]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c6:	2200      	movs	r2, #0
 80035c8:	60da      	str	r2, [r3, #12]
 80035ca:	4b31      	ldr	r3, [pc, #196]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035cc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80035d0:	611a      	str	r2, [r3, #16]
 80035d2:	4b2f      	ldr	r3, [pc, #188]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035d4:	2200      	movs	r2, #0
 80035d6:	615a      	str	r2, [r3, #20]
 80035d8:	4b2d      	ldr	r3, [pc, #180]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035da:	2200      	movs	r2, #0
 80035dc:	619a      	str	r2, [r3, #24]
 80035de:	4b2c      	ldr	r3, [pc, #176]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e0:	2200      	movs	r2, #0
 80035e2:	61da      	str	r2, [r3, #28]
 80035e4:	4b2a      	ldr	r3, [pc, #168]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e6:	2200      	movs	r2, #0
 80035e8:	621a      	str	r2, [r3, #32]
 80035ea:	4b29      	ldr	r3, [pc, #164]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035ec:	2200      	movs	r2, #0
 80035ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80035f0:	4827      	ldr	r0, [pc, #156]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035f2:	f008 ff57 	bl	800c4a4 <HAL_DMA_Init>
 80035f6:	4603      	mov	r3, r0
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d001      	beq.n	8003600 <HAL_I2C_MspInit+0x10c>
 80035fc:	f000 f8fc 	bl	80037f8 <Error_Handler>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	4a23      	ldr	r2, [pc, #140]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003604:	639a      	str	r2, [r3, #56]	@ 0x38
 8003606:	4a22      	ldr	r2, [pc, #136]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	6393      	str	r3, [r2, #56]	@ 0x38
 800360c:	4b22      	ldr	r3, [pc, #136]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800360e:	4a23      	ldr	r2, [pc, #140]	@ (800369c <HAL_I2C_MspInit+0x1a8>)
 8003610:	601a      	str	r2, [r3, #0]
 8003612:	4b21      	ldr	r3, [pc, #132]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003614:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 8003618:	605a      	str	r2, [r3, #4]
 800361a:	4b1f      	ldr	r3, [pc, #124]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800361c:	2240      	movs	r2, #64	@ 0x40
 800361e:	609a      	str	r2, [r3, #8]
 8003620:	4b1d      	ldr	r3, [pc, #116]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003622:	2200      	movs	r2, #0
 8003624:	60da      	str	r2, [r3, #12]
 8003626:	4b1c      	ldr	r3, [pc, #112]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003628:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800362c:	611a      	str	r2, [r3, #16]
 800362e:	4b1a      	ldr	r3, [pc, #104]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003630:	2200      	movs	r2, #0
 8003632:	615a      	str	r2, [r3, #20]
 8003634:	4b18      	ldr	r3, [pc, #96]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003636:	2200      	movs	r2, #0
 8003638:	619a      	str	r2, [r3, #24]
 800363a:	4b17      	ldr	r3, [pc, #92]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800363c:	2200      	movs	r2, #0
 800363e:	61da      	str	r2, [r3, #28]
 8003640:	4b15      	ldr	r3, [pc, #84]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003642:	2200      	movs	r2, #0
 8003644:	621a      	str	r2, [r3, #32]
 8003646:	4b14      	ldr	r3, [pc, #80]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003648:	2200      	movs	r2, #0
 800364a:	625a      	str	r2, [r3, #36]	@ 0x24
 800364c:	4812      	ldr	r0, [pc, #72]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800364e:	f008 ff29 	bl	800c4a4 <HAL_DMA_Init>
 8003652:	4603      	mov	r3, r0
 8003654:	2b00      	cmp	r3, #0
 8003656:	d001      	beq.n	800365c <HAL_I2C_MspInit+0x168>
 8003658:	f000 f8ce 	bl	80037f8 <Error_Handler>
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	4a0e      	ldr	r2, [pc, #56]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003660:	635a      	str	r2, [r3, #52]	@ 0x34
 8003662:	4a0d      	ldr	r2, [pc, #52]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6393      	str	r3, [r2, #56]	@ 0x38
 8003668:	2200      	movs	r2, #0
 800366a:	2105      	movs	r1, #5
 800366c:	2049      	movs	r0, #73	@ 0x49
 800366e:	f008 fee1 	bl	800c434 <HAL_NVIC_SetPriority>
 8003672:	2049      	movs	r0, #73	@ 0x49
 8003674:	f008 fefa 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003678:	bf00      	nop
 800367a:	3728      	adds	r7, #40	@ 0x28
 800367c:	46bd      	mov	sp, r7
 800367e:	bd80      	pop	{r7, pc}
 8003680:	40005c00 	.word	0x40005c00
 8003684:	40023800 	.word	0x40023800
 8003688:	40020800 	.word	0x40020800
 800368c:	40020000 	.word	0x40020000
 8003690:	20001894 	.word	0x20001894
 8003694:	40026040 	.word	0x40026040
 8003698:	200018f4 	.word	0x200018f4
 800369c:	40026070 	.word	0x40026070

080036a0 <main>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	af00      	add	r7, sp, #0
 80036a4:	f007 fca2 	bl	800afec <HAL_Init>
 80036a8:	f000 f82a 	bl	8003700 <SystemClock_Config>
 80036ac:	f7ff fdd2 	bl	8003254 <MX_GPIO_Init>
 80036b0:	f7ff fce2 	bl	8003078 <MX_DMA_Init>
 80036b4:	f7ff fbb4 	bl	8002e20 <MX_CAN1_Init>
 80036b8:	f7ff fbe8 	bl	8002e8c <MX_CAN2_Init>
 80036bc:	f000 fdb8 	bl	8004230 <MX_TIM5_Init>
 80036c0:	f000 fe26 	bl	8004310 <MX_TIM10_Init>
 80036c4:	f000 ff74 	bl	80045b0 <MX_USART1_UART_Init>
 80036c8:	f000 ff9c 	bl	8004604 <MX_USART3_UART_Init>
 80036cc:	f000 ffc6 	bl	800465c <MX_USART6_UART_Init>
 80036d0:	f000 f8ce 	bl	8003870 <MX_SPI1_Init>
 80036d4:	f7ff fee0 	bl	8003498 <MX_I2C3_Init>
 80036d8:	f7ff fb0c 	bl	8002cf4 <MX_ADC3_Init>
 80036dc:	f000 fcdc 	bl	8004098 <MX_TIM3_Init>
 80036e0:	f000 fd4c 	bl	800417c <MX_TIM4_Init>
 80036e4:	f000 f88e 	bl	8003804 <MX_RNG_Init>
 80036e8:	f000 fca4 	bl	8004034 <MX_TIM2_Init>
 80036ec:	f007 fbff 	bl	800aeee <startup_task>
 80036f0:	f016 fd4a 	bl	801a188 <MX_USB_DEVICE_Init>
 80036f4:	f7ff fd74 	bl	80031e0 <MX_FREERTOS_Init>
 80036f8:	f013 fc62 	bl	8016fc0 <osKernelStart>
 80036fc:	bf00      	nop
 80036fe:	e7fd      	b.n	80036fc <main+0x5c>

08003700 <SystemClock_Config>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b094      	sub	sp, #80	@ 0x50
 8003704:	af00      	add	r7, sp, #0
 8003706:	f107 0320 	add.w	r3, r7, #32
 800370a:	2230      	movs	r2, #48	@ 0x30
 800370c:	2100      	movs	r1, #0
 800370e:	4618      	mov	r0, r3
 8003710:	f017 fbaf 	bl	801ae72 <memset>
 8003714:	f107 030c 	add.w	r3, r7, #12
 8003718:	2200      	movs	r2, #0
 800371a:	601a      	str	r2, [r3, #0]
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	609a      	str	r2, [r3, #8]
 8003720:	60da      	str	r2, [r3, #12]
 8003722:	611a      	str	r2, [r3, #16]
 8003724:	2300      	movs	r3, #0
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	4b28      	ldr	r3, [pc, #160]	@ (80037cc <SystemClock_Config+0xcc>)
 800372a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800372c:	4a27      	ldr	r2, [pc, #156]	@ (80037cc <SystemClock_Config+0xcc>)
 800372e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003732:	6413      	str	r3, [r2, #64]	@ 0x40
 8003734:	4b25      	ldr	r3, [pc, #148]	@ (80037cc <SystemClock_Config+0xcc>)
 8003736:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003738:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800373c:	60bb      	str	r3, [r7, #8]
 800373e:	68bb      	ldr	r3, [r7, #8]
 8003740:	2300      	movs	r3, #0
 8003742:	607b      	str	r3, [r7, #4]
 8003744:	4b22      	ldr	r3, [pc, #136]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	4a21      	ldr	r2, [pc, #132]	@ (80037d0 <SystemClock_Config+0xd0>)
 800374a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800374e:	6013      	str	r3, [r2, #0]
 8003750:	4b1f      	ldr	r3, [pc, #124]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003758:	607b      	str	r3, [r7, #4]
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	2301      	movs	r3, #1
 800375e:	623b      	str	r3, [r7, #32]
 8003760:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003764:	627b      	str	r3, [r7, #36]	@ 0x24
 8003766:	2302      	movs	r3, #2
 8003768:	63bb      	str	r3, [r7, #56]	@ 0x38
 800376a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800376e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003770:	2306      	movs	r3, #6
 8003772:	643b      	str	r3, [r7, #64]	@ 0x40
 8003774:	23a8      	movs	r3, #168	@ 0xa8
 8003776:	647b      	str	r3, [r7, #68]	@ 0x44
 8003778:	2302      	movs	r3, #2
 800377a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800377c:	2307      	movs	r3, #7
 800377e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003780:	f107 0320 	add.w	r3, r7, #32
 8003784:	4618      	mov	r0, r3
 8003786:	f00c fc71 	bl	801006c <HAL_RCC_OscConfig>
 800378a:	4603      	mov	r3, r0
 800378c:	2b00      	cmp	r3, #0
 800378e:	d001      	beq.n	8003794 <SystemClock_Config+0x94>
 8003790:	f000 f832 	bl	80037f8 <Error_Handler>
 8003794:	230f      	movs	r3, #15
 8003796:	60fb      	str	r3, [r7, #12]
 8003798:	2302      	movs	r3, #2
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	2300      	movs	r3, #0
 800379e:	617b      	str	r3, [r7, #20]
 80037a0:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80037a4:	61bb      	str	r3, [r7, #24]
 80037a6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80037aa:	61fb      	str	r3, [r7, #28]
 80037ac:	f107 030c 	add.w	r3, r7, #12
 80037b0:	2105      	movs	r1, #5
 80037b2:	4618      	mov	r0, r3
 80037b4:	f00c fed2 	bl	801055c <HAL_RCC_ClockConfig>
 80037b8:	4603      	mov	r3, r0
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d001      	beq.n	80037c2 <SystemClock_Config+0xc2>
 80037be:	f000 f81b 	bl	80037f8 <Error_Handler>
 80037c2:	bf00      	nop
 80037c4:	3750      	adds	r7, #80	@ 0x50
 80037c6:	46bd      	mov	sp, r7
 80037c8:	bd80      	pop	{r7, pc}
 80037ca:	bf00      	nop
 80037cc:	40023800 	.word	0x40023800
 80037d0:	40007000 	.word	0x40007000

080037d4 <HAL_TIM_PeriodElapsedCallback>:
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b082      	sub	sp, #8
 80037d8:	af00      	add	r7, sp, #0
 80037da:	6078      	str	r0, [r7, #4]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	4a04      	ldr	r2, [pc, #16]	@ (80037f4 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80037e2:	4293      	cmp	r3, r2
 80037e4:	d101      	bne.n	80037ea <HAL_TIM_PeriodElapsedCallback+0x16>
 80037e6:	f007 fc23 	bl	800b030 <HAL_IncTick>
 80037ea:	bf00      	nop
 80037ec:	3708      	adds	r7, #8
 80037ee:	46bd      	mov	sp, r7
 80037f0:	bd80      	pop	{r7, pc}
 80037f2:	bf00      	nop
 80037f4:	40001000 	.word	0x40001000

080037f8 <Error_Handler>:
 80037f8:	b480      	push	{r7}
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	b672      	cpsid	i
 80037fe:	bf00      	nop
 8003800:	bf00      	nop
 8003802:	e7fd      	b.n	8003800 <Error_Handler+0x8>

08003804 <MX_RNG_Init>:
 8003804:	b580      	push	{r7, lr}
 8003806:	af00      	add	r7, sp, #0
 8003808:	4b06      	ldr	r3, [pc, #24]	@ (8003824 <MX_RNG_Init+0x20>)
 800380a:	4a07      	ldr	r2, [pc, #28]	@ (8003828 <MX_RNG_Init+0x24>)
 800380c:	601a      	str	r2, [r3, #0]
 800380e:	4805      	ldr	r0, [pc, #20]	@ (8003824 <MX_RNG_Init+0x20>)
 8003810:	f00d f8b6 	bl	8010980 <HAL_RNG_Init>
 8003814:	4603      	mov	r3, r0
 8003816:	2b00      	cmp	r3, #0
 8003818:	d001      	beq.n	800381e <MX_RNG_Init+0x1a>
 800381a:	f7ff ffed 	bl	80037f8 <Error_Handler>
 800381e:	bf00      	nop
 8003820:	bd80      	pop	{r7, pc}
 8003822:	bf00      	nop
 8003824:	20001954 	.word	0x20001954
 8003828:	50060800 	.word	0x50060800

0800382c <HAL_RNG_MspInit>:
 800382c:	b480      	push	{r7}
 800382e:	b085      	sub	sp, #20
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	4a0b      	ldr	r2, [pc, #44]	@ (8003868 <HAL_RNG_MspInit+0x3c>)
 800383a:	4293      	cmp	r3, r2
 800383c:	d10d      	bne.n	800385a <HAL_RNG_MspInit+0x2e>
 800383e:	2300      	movs	r3, #0
 8003840:	60fb      	str	r3, [r7, #12]
 8003842:	4b0a      	ldr	r3, [pc, #40]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003844:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003846:	4a09      	ldr	r2, [pc, #36]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003848:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800384c:	6353      	str	r3, [r2, #52]	@ 0x34
 800384e:	4b07      	ldr	r3, [pc, #28]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003850:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003852:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	bf00      	nop
 800385c:	3714      	adds	r7, #20
 800385e:	46bd      	mov	sp, r7
 8003860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	50060800 	.word	0x50060800
 800386c:	40023800 	.word	0x40023800

08003870 <MX_SPI1_Init>:
 8003870:	b580      	push	{r7, lr}
 8003872:	af00      	add	r7, sp, #0
 8003874:	4b17      	ldr	r3, [pc, #92]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003876:	4a18      	ldr	r2, [pc, #96]	@ (80038d8 <MX_SPI1_Init+0x68>)
 8003878:	601a      	str	r2, [r3, #0]
 800387a:	4b16      	ldr	r3, [pc, #88]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800387c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003880:	605a      	str	r2, [r3, #4]
 8003882:	4b14      	ldr	r3, [pc, #80]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003884:	2200      	movs	r2, #0
 8003886:	609a      	str	r2, [r3, #8]
 8003888:	4b12      	ldr	r3, [pc, #72]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800388a:	2200      	movs	r2, #0
 800388c:	60da      	str	r2, [r3, #12]
 800388e:	4b11      	ldr	r3, [pc, #68]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003890:	2200      	movs	r2, #0
 8003892:	611a      	str	r2, [r3, #16]
 8003894:	4b0f      	ldr	r3, [pc, #60]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003896:	2200      	movs	r2, #0
 8003898:	615a      	str	r2, [r3, #20]
 800389a:	4b0e      	ldr	r3, [pc, #56]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800389c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80038a0:	619a      	str	r2, [r3, #24]
 80038a2:	4b0c      	ldr	r3, [pc, #48]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038a4:	2228      	movs	r2, #40	@ 0x28
 80038a6:	61da      	str	r2, [r3, #28]
 80038a8:	4b0a      	ldr	r3, [pc, #40]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038aa:	2200      	movs	r2, #0
 80038ac:	621a      	str	r2, [r3, #32]
 80038ae:	4b09      	ldr	r3, [pc, #36]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b0:	2200      	movs	r2, #0
 80038b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80038b4:	4b07      	ldr	r3, [pc, #28]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b6:	2200      	movs	r2, #0
 80038b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80038ba:	4b06      	ldr	r3, [pc, #24]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038bc:	220a      	movs	r2, #10
 80038be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038c0:	4804      	ldr	r0, [pc, #16]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038c2:	f00d f887 	bl	80109d4 <HAL_SPI_Init>
 80038c6:	4603      	mov	r3, r0
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d001      	beq.n	80038d0 <MX_SPI1_Init+0x60>
 80038cc:	f7ff ff94 	bl	80037f8 <Error_Handler>
 80038d0:	bf00      	nop
 80038d2:	bd80      	pop	{r7, pc}
 80038d4:	20001964 	.word	0x20001964
 80038d8:	40013000 	.word	0x40013000

080038dc <HAL_SPI_MspInit>:
 80038dc:	b580      	push	{r7, lr}
 80038de:	b08a      	sub	sp, #40	@ 0x28
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
 80038e4:	f107 0314 	add.w	r3, r7, #20
 80038e8:	2200      	movs	r2, #0
 80038ea:	601a      	str	r2, [r3, #0]
 80038ec:	605a      	str	r2, [r3, #4]
 80038ee:	609a      	str	r2, [r3, #8]
 80038f0:	60da      	str	r2, [r3, #12]
 80038f2:	611a      	str	r2, [r3, #16]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4a56      	ldr	r2, [pc, #344]	@ (8003a54 <HAL_SPI_MspInit+0x178>)
 80038fa:	4293      	cmp	r3, r2
 80038fc:	f040 80a6 	bne.w	8003a4c <HAL_SPI_MspInit+0x170>
 8003900:	2300      	movs	r3, #0
 8003902:	613b      	str	r3, [r7, #16]
 8003904:	4b54      	ldr	r3, [pc, #336]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003906:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003908:	4a53      	ldr	r2, [pc, #332]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800390a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800390e:	6453      	str	r3, [r2, #68]	@ 0x44
 8003910:	4b51      	ldr	r3, [pc, #324]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003912:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003914:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003918:	613b      	str	r3, [r7, #16]
 800391a:	693b      	ldr	r3, [r7, #16]
 800391c:	2300      	movs	r3, #0
 800391e:	60fb      	str	r3, [r7, #12]
 8003920:	4b4d      	ldr	r3, [pc, #308]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003924:	4a4c      	ldr	r2, [pc, #304]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003926:	f043 0302 	orr.w	r3, r3, #2
 800392a:	6313      	str	r3, [r2, #48]	@ 0x30
 800392c:	4b4a      	ldr	r3, [pc, #296]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800392e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003930:	f003 0302 	and.w	r3, r3, #2
 8003934:	60fb      	str	r3, [r7, #12]
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	2300      	movs	r3, #0
 800393a:	60bb      	str	r3, [r7, #8]
 800393c:	4b46      	ldr	r3, [pc, #280]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800393e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003940:	4a45      	ldr	r2, [pc, #276]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003942:	f043 0301 	orr.w	r3, r3, #1
 8003946:	6313      	str	r3, [r2, #48]	@ 0x30
 8003948:	4b43      	ldr	r3, [pc, #268]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800394a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800394c:	f003 0301 	and.w	r3, r3, #1
 8003950:	60bb      	str	r3, [r7, #8]
 8003952:	68bb      	ldr	r3, [r7, #8]
 8003954:	2318      	movs	r3, #24
 8003956:	617b      	str	r3, [r7, #20]
 8003958:	2302      	movs	r3, #2
 800395a:	61bb      	str	r3, [r7, #24]
 800395c:	2300      	movs	r3, #0
 800395e:	61fb      	str	r3, [r7, #28]
 8003960:	2303      	movs	r3, #3
 8003962:	623b      	str	r3, [r7, #32]
 8003964:	2305      	movs	r3, #5
 8003966:	627b      	str	r3, [r7, #36]	@ 0x24
 8003968:	f107 0314 	add.w	r3, r7, #20
 800396c:	4619      	mov	r1, r3
 800396e:	483b      	ldr	r0, [pc, #236]	@ (8003a5c <HAL_SPI_MspInit+0x180>)
 8003970:	f009 f9a6 	bl	800ccc0 <HAL_GPIO_Init>
 8003974:	2380      	movs	r3, #128	@ 0x80
 8003976:	617b      	str	r3, [r7, #20]
 8003978:	2302      	movs	r3, #2
 800397a:	61bb      	str	r3, [r7, #24]
 800397c:	2300      	movs	r3, #0
 800397e:	61fb      	str	r3, [r7, #28]
 8003980:	2303      	movs	r3, #3
 8003982:	623b      	str	r3, [r7, #32]
 8003984:	2305      	movs	r3, #5
 8003986:	627b      	str	r3, [r7, #36]	@ 0x24
 8003988:	f107 0314 	add.w	r3, r7, #20
 800398c:	4619      	mov	r1, r3
 800398e:	4834      	ldr	r0, [pc, #208]	@ (8003a60 <HAL_SPI_MspInit+0x184>)
 8003990:	f009 f996 	bl	800ccc0 <HAL_GPIO_Init>
 8003994:	4b33      	ldr	r3, [pc, #204]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 8003996:	4a34      	ldr	r2, [pc, #208]	@ (8003a68 <HAL_SPI_MspInit+0x18c>)
 8003998:	601a      	str	r2, [r3, #0]
 800399a:	4b32      	ldr	r3, [pc, #200]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 800399c:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039a0:	605a      	str	r2, [r3, #4]
 80039a2:	4b30      	ldr	r3, [pc, #192]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039a4:	2200      	movs	r2, #0
 80039a6:	609a      	str	r2, [r3, #8]
 80039a8:	4b2e      	ldr	r3, [pc, #184]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039aa:	2200      	movs	r2, #0
 80039ac:	60da      	str	r2, [r3, #12]
 80039ae:	4b2d      	ldr	r3, [pc, #180]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80039b4:	611a      	str	r2, [r3, #16]
 80039b6:	4b2b      	ldr	r3, [pc, #172]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	615a      	str	r2, [r3, #20]
 80039bc:	4b29      	ldr	r3, [pc, #164]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039be:	2200      	movs	r2, #0
 80039c0:	619a      	str	r2, [r3, #24]
 80039c2:	4b28      	ldr	r3, [pc, #160]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039c4:	2200      	movs	r2, #0
 80039c6:	61da      	str	r2, [r3, #28]
 80039c8:	4b26      	ldr	r3, [pc, #152]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ca:	2200      	movs	r2, #0
 80039cc:	621a      	str	r2, [r3, #32]
 80039ce:	4b25      	ldr	r3, [pc, #148]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d0:	2200      	movs	r2, #0
 80039d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80039d4:	4823      	ldr	r0, [pc, #140]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d6:	f008 fd65 	bl	800c4a4 <HAL_DMA_Init>
 80039da:	4603      	mov	r3, r0
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d001      	beq.n	80039e4 <HAL_SPI_MspInit+0x108>
 80039e0:	f7ff ff0a 	bl	80037f8 <Error_Handler>
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	4a1f      	ldr	r2, [pc, #124]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039e8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80039ea:	4a1e      	ldr	r2, [pc, #120]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6393      	str	r3, [r2, #56]	@ 0x38
 80039f0:	4b1e      	ldr	r3, [pc, #120]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f2:	4a1f      	ldr	r2, [pc, #124]	@ (8003a70 <HAL_SPI_MspInit+0x194>)
 80039f4:	601a      	str	r2, [r3, #0]
 80039f6:	4b1d      	ldr	r3, [pc, #116]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039fc:	605a      	str	r2, [r3, #4]
 80039fe:	4b1b      	ldr	r3, [pc, #108]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a00:	2240      	movs	r2, #64	@ 0x40
 8003a02:	609a      	str	r2, [r3, #8]
 8003a04:	4b19      	ldr	r3, [pc, #100]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a06:	2200      	movs	r2, #0
 8003a08:	60da      	str	r2, [r3, #12]
 8003a0a:	4b18      	ldr	r3, [pc, #96]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a0c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003a10:	611a      	str	r2, [r3, #16]
 8003a12:	4b16      	ldr	r3, [pc, #88]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	615a      	str	r2, [r3, #20]
 8003a18:	4b14      	ldr	r3, [pc, #80]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a1a:	2200      	movs	r2, #0
 8003a1c:	619a      	str	r2, [r3, #24]
 8003a1e:	4b13      	ldr	r3, [pc, #76]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a20:	2200      	movs	r2, #0
 8003a22:	61da      	str	r2, [r3, #28]
 8003a24:	4b11      	ldr	r3, [pc, #68]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a26:	2200      	movs	r2, #0
 8003a28:	621a      	str	r2, [r3, #32]
 8003a2a:	4b10      	ldr	r3, [pc, #64]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a30:	480e      	ldr	r0, [pc, #56]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a32:	f008 fd37 	bl	800c4a4 <HAL_DMA_Init>
 8003a36:	4603      	mov	r3, r0
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d001      	beq.n	8003a40 <HAL_SPI_MspInit+0x164>
 8003a3c:	f7ff fedc 	bl	80037f8 <Error_Handler>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	4a0a      	ldr	r2, [pc, #40]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a44:	649a      	str	r2, [r3, #72]	@ 0x48
 8003a46:	4a09      	ldr	r2, [pc, #36]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6393      	str	r3, [r2, #56]	@ 0x38
 8003a4c:	bf00      	nop
 8003a4e:	3728      	adds	r7, #40	@ 0x28
 8003a50:	46bd      	mov	sp, r7
 8003a52:	bd80      	pop	{r7, pc}
 8003a54:	40013000 	.word	0x40013000
 8003a58:	40023800 	.word	0x40023800
 8003a5c:	40020400 	.word	0x40020400
 8003a60:	40020000 	.word	0x40020000
 8003a64:	200019bc 	.word	0x200019bc
 8003a68:	40026410 	.word	0x40026410
 8003a6c:	20001a1c 	.word	0x20001a1c
 8003a70:	40026458 	.word	0x40026458

08003a74 <HAL_MspInit>:
 8003a74:	b580      	push	{r7, lr}
 8003a76:	b082      	sub	sp, #8
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	607b      	str	r3, [r7, #4]
 8003a7e:	4b12      	ldr	r3, [pc, #72]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a82:	4a11      	ldr	r2, [pc, #68]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a84:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003a88:	6453      	str	r3, [r2, #68]	@ 0x44
 8003a8a:	4b0f      	ldr	r3, [pc, #60]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a8e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003a92:	607b      	str	r3, [r7, #4]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2300      	movs	r3, #0
 8003a98:	603b      	str	r3, [r7, #0]
 8003a9a:	4b0b      	ldr	r3, [pc, #44]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a9e:	4a0a      	ldr	r2, [pc, #40]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003aa4:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aa6:	4b08      	ldr	r3, [pc, #32]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003aaa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003aae:	603b      	str	r3, [r7, #0]
 8003ab0:	683b      	ldr	r3, [r7, #0]
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	210f      	movs	r1, #15
 8003ab6:	f06f 0001 	mvn.w	r0, #1
 8003aba:	f008 fcbb 	bl	800c434 <HAL_NVIC_SetPriority>
 8003abe:	bf00      	nop
 8003ac0:	3708      	adds	r7, #8
 8003ac2:	46bd      	mov	sp, r7
 8003ac4:	bd80      	pop	{r7, pc}
 8003ac6:	bf00      	nop
 8003ac8:	40023800 	.word	0x40023800

08003acc <HAL_InitTick>:
 8003acc:	b580      	push	{r7, lr}
 8003ace:	b08e      	sub	sp, #56	@ 0x38
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ad8:	2300      	movs	r3, #0
 8003ada:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003adc:	2300      	movs	r3, #0
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	4b33      	ldr	r3, [pc, #204]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ae4:	4a32      	ldr	r2, [pc, #200]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae6:	f043 0310 	orr.w	r3, r3, #16
 8003aea:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aec:	4b30      	ldr	r3, [pc, #192]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003aee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003af0:	f003 0310 	and.w	r3, r3, #16
 8003af4:	60fb      	str	r3, [r7, #12]
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	f107 0210 	add.w	r2, r7, #16
 8003afc:	f107 0314 	add.w	r3, r7, #20
 8003b00:	4611      	mov	r1, r2
 8003b02:	4618      	mov	r0, r3
 8003b04:	f00c ff0a 	bl	801091c <HAL_RCC_GetClockConfig>
 8003b08:	6a3b      	ldr	r3, [r7, #32]
 8003b0a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003b0c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d103      	bne.n	8003b1a <HAL_InitTick+0x4e>
 8003b12:	f00c fedb 	bl	80108cc <HAL_RCC_GetPCLK1Freq>
 8003b16:	6378      	str	r0, [r7, #52]	@ 0x34
 8003b18:	e004      	b.n	8003b24 <HAL_InitTick+0x58>
 8003b1a:	f00c fed7 	bl	80108cc <HAL_RCC_GetPCLK1Freq>
 8003b1e:	4603      	mov	r3, r0
 8003b20:	005b      	lsls	r3, r3, #1
 8003b22:	637b      	str	r3, [r7, #52]	@ 0x34
 8003b24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003b26:	4a23      	ldr	r2, [pc, #140]	@ (8003bb4 <HAL_InitTick+0xe8>)
 8003b28:	fba2 2303 	umull	r2, r3, r2, r3
 8003b2c:	0c9b      	lsrs	r3, r3, #18
 8003b2e:	3b01      	subs	r3, #1
 8003b30:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b32:	4b21      	ldr	r3, [pc, #132]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b34:	4a21      	ldr	r2, [pc, #132]	@ (8003bbc <HAL_InitTick+0xf0>)
 8003b36:	601a      	str	r2, [r3, #0]
 8003b38:	4b1f      	ldr	r3, [pc, #124]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8003b3e:	60da      	str	r2, [r3, #12]
 8003b40:	4a1d      	ldr	r2, [pc, #116]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b42:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b44:	6053      	str	r3, [r2, #4]
 8003b46:	4b1c      	ldr	r3, [pc, #112]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	611a      	str	r2, [r3, #16]
 8003b4c:	4b1a      	ldr	r3, [pc, #104]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b4e:	2200      	movs	r2, #0
 8003b50:	609a      	str	r2, [r3, #8]
 8003b52:	4b19      	ldr	r3, [pc, #100]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b54:	2200      	movs	r2, #0
 8003b56:	619a      	str	r2, [r3, #24]
 8003b58:	4817      	ldr	r0, [pc, #92]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b5a:	f00d fba7 	bl	80112ac <HAL_TIM_Base_Init>
 8003b5e:	4603      	mov	r3, r0
 8003b60:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b64:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d11b      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b6c:	4812      	ldr	r0, [pc, #72]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b6e:	f00d fbed 	bl	801134c <HAL_TIM_Base_Start_IT>
 8003b72:	4603      	mov	r3, r0
 8003b74:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b78:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d111      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b80:	2036      	movs	r0, #54	@ 0x36
 8003b82:	f008 fc73 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	2b0f      	cmp	r3, #15
 8003b8a:	d808      	bhi.n	8003b9e <HAL_InitTick+0xd2>
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	6879      	ldr	r1, [r7, #4]
 8003b90:	2036      	movs	r0, #54	@ 0x36
 8003b92:	f008 fc4f 	bl	800c434 <HAL_NVIC_SetPriority>
 8003b96:	4a0a      	ldr	r2, [pc, #40]	@ (8003bc0 <HAL_InitTick+0xf4>)
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	6013      	str	r3, [r2, #0]
 8003b9c:	e002      	b.n	8003ba4 <HAL_InitTick+0xd8>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003ba4:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003ba8:	4618      	mov	r0, r3
 8003baa:	3738      	adds	r7, #56	@ 0x38
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bd80      	pop	{r7, pc}
 8003bb0:	40023800 	.word	0x40023800
 8003bb4:	431bde83 	.word	0x431bde83
 8003bb8:	20001a7c 	.word	0x20001a7c
 8003bbc:	40001000 	.word	0x40001000
 8003bc0:	20000018 	.word	0x20000018

08003bc4 <NMI_Handler>:
 8003bc4:	b480      	push	{r7}
 8003bc6:	af00      	add	r7, sp, #0
 8003bc8:	bf00      	nop
 8003bca:	e7fd      	b.n	8003bc8 <NMI_Handler+0x4>

08003bcc <HardFault_Handler>:
 8003bcc:	b480      	push	{r7}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	bf00      	nop
 8003bd2:	e7fd      	b.n	8003bd0 <HardFault_Handler+0x4>

08003bd4 <MemManage_Handler>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	af00      	add	r7, sp, #0
 8003bd8:	bf00      	nop
 8003bda:	e7fd      	b.n	8003bd8 <MemManage_Handler+0x4>

08003bdc <BusFault_Handler>:
 8003bdc:	b480      	push	{r7}
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	bf00      	nop
 8003be2:	e7fd      	b.n	8003be0 <BusFault_Handler+0x4>

08003be4 <UsageFault_Handler>:
 8003be4:	b480      	push	{r7}
 8003be6:	af00      	add	r7, sp, #0
 8003be8:	bf00      	nop
 8003bea:	e7fd      	b.n	8003be8 <UsageFault_Handler+0x4>

08003bec <DebugMon_Handler>:
 8003bec:	b480      	push	{r7}
 8003bee:	af00      	add	r7, sp, #0
 8003bf0:	bf00      	nop
 8003bf2:	46bd      	mov	sp, r7
 8003bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf8:	4770      	bx	lr

08003bfa <EXTI3_IRQHandler>:
 8003bfa:	b580      	push	{r7, lr}
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	2008      	movs	r0, #8
 8003c00:	f009 fa14 	bl	800d02c <HAL_GPIO_EXTI_IRQHandler>
 8003c04:	bf00      	nop
 8003c06:	bd80      	pop	{r7, pc}

08003c08 <EXTI4_IRQHandler>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	2010      	movs	r0, #16
 8003c0e:	f009 fa0d 	bl	800d02c <HAL_GPIO_EXTI_IRQHandler>
 8003c12:	bf00      	nop
 8003c14:	bd80      	pop	{r7, pc}
	...

08003c18 <DMA1_Stream1_IRQHandler>:
 8003c18:	b580      	push	{r7, lr}
 8003c1a:	af00      	add	r7, sp, #0
 8003c1c:	4802      	ldr	r0, [pc, #8]	@ (8003c28 <DMA1_Stream1_IRQHandler+0x10>)
 8003c1e:	f008 fdd9 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003c22:	bf00      	nop
 8003c24:	bd80      	pop	{r7, pc}
 8003c26:	bf00      	nop
 8003c28:	20001d14 	.word	0x20001d14

08003c2c <DMA1_Stream2_IRQHandler>:
 8003c2c:	b580      	push	{r7, lr}
 8003c2e:	af00      	add	r7, sp, #0
 8003c30:	4802      	ldr	r0, [pc, #8]	@ (8003c3c <DMA1_Stream2_IRQHandler+0x10>)
 8003c32:	f008 fdcf 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003c36:	bf00      	nop
 8003c38:	bd80      	pop	{r7, pc}
 8003c3a:	bf00      	nop
 8003c3c:	20001894 	.word	0x20001894

08003c40 <DMA1_Stream4_IRQHandler>:
 8003c40:	b580      	push	{r7, lr}
 8003c42:	af00      	add	r7, sp, #0
 8003c44:	4802      	ldr	r0, [pc, #8]	@ (8003c50 <DMA1_Stream4_IRQHandler+0x10>)
 8003c46:	f008 fdc5 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003c4a:	bf00      	nop
 8003c4c:	bd80      	pop	{r7, pc}
 8003c4e:	bf00      	nop
 8003c50:	200018f4 	.word	0x200018f4

08003c54 <CAN1_RX0_IRQHandler>:
 8003c54:	b580      	push	{r7, lr}
 8003c56:	af00      	add	r7, sp, #0
 8003c58:	4802      	ldr	r0, [pc, #8]	@ (8003c64 <CAN1_RX0_IRQHandler+0x10>)
 8003c5a:	f008 f8e9 	bl	800be30 <HAL_CAN_IRQHandler>
 8003c5e:	bf00      	nop
 8003c60:	bd80      	pop	{r7, pc}
 8003c62:	bf00      	nop
 8003c64:	200008e4 	.word	0x200008e4

08003c68 <CAN1_RX1_IRQHandler>:
 8003c68:	b580      	push	{r7, lr}
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	4802      	ldr	r0, [pc, #8]	@ (8003c78 <CAN1_RX1_IRQHandler+0x10>)
 8003c6e:	f008 f8df 	bl	800be30 <HAL_CAN_IRQHandler>
 8003c72:	bf00      	nop
 8003c74:	bd80      	pop	{r7, pc}
 8003c76:	bf00      	nop
 8003c78:	200008e4 	.word	0x200008e4

08003c7c <EXTI9_5_IRQHandler>:
 8003c7c:	b580      	push	{r7, lr}
 8003c7e:	af00      	add	r7, sp, #0
 8003c80:	2020      	movs	r0, #32
 8003c82:	f009 f9d3 	bl	800d02c <HAL_GPIO_EXTI_IRQHandler>
 8003c86:	bf00      	nop
 8003c88:	bd80      	pop	{r7, pc}
	...

08003c8c <TIM3_IRQHandler>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	af00      	add	r7, sp, #0
 8003c90:	4803      	ldr	r0, [pc, #12]	@ (8003ca0 <TIM3_IRQHandler+0x14>)
 8003c92:	f00d fd3b 	bl	801170c <HAL_TIM_IRQHandler>
 8003c96:	f7fe fa61 	bl	800215c <micros_tick>
 8003c9a:	bf00      	nop
 8003c9c:	bd80      	pop	{r7, pc}
 8003c9e:	bf00      	nop
 8003ca0:	20001ac8 	.word	0x20001ac8

08003ca4 <USART1_IRQHandler>:
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	af00      	add	r7, sp, #0
 8003ca8:	4802      	ldr	r0, [pc, #8]	@ (8003cb4 <USART1_IRQHandler+0x10>)
 8003caa:	f00e fd31 	bl	8012710 <HAL_UART_IRQHandler>
 8003cae:	bf00      	nop
 8003cb0:	bd80      	pop	{r7, pc}
 8003cb2:	bf00      	nop
 8003cb4:	20001be8 	.word	0x20001be8

08003cb8 <USART3_IRQHandler>:
 8003cb8:	b580      	push	{r7, lr}
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	4802      	ldr	r0, [pc, #8]	@ (8003cc8 <USART3_IRQHandler+0x10>)
 8003cbe:	f00e fd27 	bl	8012710 <HAL_UART_IRQHandler>
 8003cc2:	bf00      	nop
 8003cc4:	bd80      	pop	{r7, pc}
 8003cc6:	bf00      	nop
 8003cc8:	20001c2c 	.word	0x20001c2c

08003ccc <EXTI15_10_IRQHandler>:
 8003ccc:	b580      	push	{r7, lr}
 8003cce:	af00      	add	r7, sp, #0
 8003cd0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8003cd4:	f009 f9aa 	bl	800d02c <HAL_GPIO_EXTI_IRQHandler>
 8003cd8:	f7fd fcce 	bl	8001678 <hall_int>
 8003cdc:	bf00      	nop
 8003cde:	bd80      	pop	{r7, pc}

08003ce0 <TIM6_DAC_IRQHandler>:
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	af00      	add	r7, sp, #0
 8003ce4:	4802      	ldr	r0, [pc, #8]	@ (8003cf0 <TIM6_DAC_IRQHandler+0x10>)
 8003ce6:	f00d fd11 	bl	801170c <HAL_TIM_IRQHandler>
 8003cea:	bf00      	nop
 8003cec:	bd80      	pop	{r7, pc}
 8003cee:	bf00      	nop
 8003cf0:	20001a7c 	.word	0x20001a7c

08003cf4 <DMA2_Stream0_IRQHandler>:
 8003cf4:	b580      	push	{r7, lr}
 8003cf6:	af00      	add	r7, sp, #0
 8003cf8:	4802      	ldr	r0, [pc, #8]	@ (8003d04 <DMA2_Stream0_IRQHandler+0x10>)
 8003cfa:	f008 fd6b 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003cfe:	bf00      	nop
 8003d00:	bd80      	pop	{r7, pc}
 8003d02:	bf00      	nop
 8003d04:	200019bc 	.word	0x200019bc

08003d08 <DMA2_Stream1_IRQHandler>:
 8003d08:	b580      	push	{r7, lr}
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	4802      	ldr	r0, [pc, #8]	@ (8003d18 <DMA2_Stream1_IRQHandler+0x10>)
 8003d0e:	f008 fd61 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003d12:	bf00      	nop
 8003d14:	bd80      	pop	{r7, pc}
 8003d16:	bf00      	nop
 8003d18:	20001d74 	.word	0x20001d74

08003d1c <DMA2_Stream3_IRQHandler>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	4802      	ldr	r0, [pc, #8]	@ (8003d2c <DMA2_Stream3_IRQHandler+0x10>)
 8003d22:	f008 fd57 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003d26:	bf00      	nop
 8003d28:	bd80      	pop	{r7, pc}
 8003d2a:	bf00      	nop
 8003d2c:	20001a1c 	.word	0x20001a1c

08003d30 <CAN2_RX0_IRQHandler>:
 8003d30:	b580      	push	{r7, lr}
 8003d32:	af00      	add	r7, sp, #0
 8003d34:	4802      	ldr	r0, [pc, #8]	@ (8003d40 <CAN2_RX0_IRQHandler+0x10>)
 8003d36:	f008 f87b 	bl	800be30 <HAL_CAN_IRQHandler>
 8003d3a:	bf00      	nop
 8003d3c:	bd80      	pop	{r7, pc}
 8003d3e:	bf00      	nop
 8003d40:	2000090c 	.word	0x2000090c

08003d44 <CAN2_RX1_IRQHandler>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	af00      	add	r7, sp, #0
 8003d48:	4802      	ldr	r0, [pc, #8]	@ (8003d54 <CAN2_RX1_IRQHandler+0x10>)
 8003d4a:	f008 f871 	bl	800be30 <HAL_CAN_IRQHandler>
 8003d4e:	bf00      	nop
 8003d50:	bd80      	pop	{r7, pc}
 8003d52:	bf00      	nop
 8003d54:	2000090c 	.word	0x2000090c

08003d58 <OTG_FS_IRQHandler>:
 8003d58:	b580      	push	{r7, lr}
 8003d5a:	af00      	add	r7, sp, #0
 8003d5c:	4802      	ldr	r0, [pc, #8]	@ (8003d68 <OTG_FS_IRQHandler+0x10>)
 8003d5e:	f00b f858 	bl	800ee12 <HAL_PCD_IRQHandler>
 8003d62:	bf00      	nop
 8003d64:	bd80      	pop	{r7, pc}
 8003d66:	bf00      	nop
 8003d68:	2000c84c 	.word	0x2000c84c

08003d6c <DMA2_Stream5_IRQHandler>:
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	4802      	ldr	r0, [pc, #8]	@ (8003d7c <DMA2_Stream5_IRQHandler+0x10>)
 8003d72:	f008 fd2f 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003d76:	bf00      	nop
 8003d78:	bd80      	pop	{r7, pc}
 8003d7a:	bf00      	nop
 8003d7c:	20001cb4 	.word	0x20001cb4

08003d80 <DMA2_Stream6_IRQHandler>:
 8003d80:	b580      	push	{r7, lr}
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	4802      	ldr	r0, [pc, #8]	@ (8003d90 <DMA2_Stream6_IRQHandler+0x10>)
 8003d86:	f008 fd25 	bl	800c7d4 <HAL_DMA_IRQHandler>
 8003d8a:	bf00      	nop
 8003d8c:	bd80      	pop	{r7, pc}
 8003d8e:	bf00      	nop
 8003d90:	20001dd4 	.word	0x20001dd4

08003d94 <USART6_IRQHandler>:
 8003d94:	b580      	push	{r7, lr}
 8003d96:	af00      	add	r7, sp, #0
 8003d98:	4802      	ldr	r0, [pc, #8]	@ (8003da4 <USART6_IRQHandler+0x10>)
 8003d9a:	f00e fcb9 	bl	8012710 <HAL_UART_IRQHandler>
 8003d9e:	bf00      	nop
 8003da0:	bd80      	pop	{r7, pc}
 8003da2:	bf00      	nop
 8003da4:	20001c70 	.word	0x20001c70

08003da8 <I2C3_ER_IRQHandler>:
 8003da8:	b580      	push	{r7, lr}
 8003daa:	af00      	add	r7, sp, #0
 8003dac:	4802      	ldr	r0, [pc, #8]	@ (8003db8 <I2C3_ER_IRQHandler+0x10>)
 8003dae:	f009 ff4d 	bl	800dc4c <HAL_I2C_ER_IRQHandler>
 8003db2:	bf00      	nop
 8003db4:	bd80      	pop	{r7, pc}
 8003db6:	bf00      	nop
 8003db8:	20001840 	.word	0x20001840

08003dbc <_getpid>:
 8003dbc:	b480      	push	{r7}
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	2301      	movs	r3, #1
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	46bd      	mov	sp, r7
 8003dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dca:	4770      	bx	lr

08003dcc <_kill>:
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b082      	sub	sp, #8
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	6039      	str	r1, [r7, #0]
 8003dd6:	f017 f8c7 	bl	801af68 <__errno>
 8003dda:	4603      	mov	r3, r0
 8003ddc:	2216      	movs	r2, #22
 8003dde:	601a      	str	r2, [r3, #0]
 8003de0:	f04f 33ff 	mov.w	r3, #4294967295
 8003de4:	4618      	mov	r0, r3
 8003de6:	3708      	adds	r7, #8
 8003de8:	46bd      	mov	sp, r7
 8003dea:	bd80      	pop	{r7, pc}

08003dec <_exit>:
 8003dec:	b580      	push	{r7, lr}
 8003dee:	b082      	sub	sp, #8
 8003df0:	af00      	add	r7, sp, #0
 8003df2:	6078      	str	r0, [r7, #4]
 8003df4:	f04f 31ff 	mov.w	r1, #4294967295
 8003df8:	6878      	ldr	r0, [r7, #4]
 8003dfa:	f7ff ffe7 	bl	8003dcc <_kill>
 8003dfe:	bf00      	nop
 8003e00:	e7fd      	b.n	8003dfe <_exit+0x12>

08003e02 <_read>:
 8003e02:	b580      	push	{r7, lr}
 8003e04:	b086      	sub	sp, #24
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	60f8      	str	r0, [r7, #12]
 8003e0a:	60b9      	str	r1, [r7, #8]
 8003e0c:	607a      	str	r2, [r7, #4]
 8003e0e:	2300      	movs	r3, #0
 8003e10:	617b      	str	r3, [r7, #20]
 8003e12:	e00a      	b.n	8003e2a <_read+0x28>
 8003e14:	f3af 8000 	nop.w
 8003e18:	4601      	mov	r1, r0
 8003e1a:	68bb      	ldr	r3, [r7, #8]
 8003e1c:	1c5a      	adds	r2, r3, #1
 8003e1e:	60ba      	str	r2, [r7, #8]
 8003e20:	b2ca      	uxtb	r2, r1
 8003e22:	701a      	strb	r2, [r3, #0]
 8003e24:	697b      	ldr	r3, [r7, #20]
 8003e26:	3301      	adds	r3, #1
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	697a      	ldr	r2, [r7, #20]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	429a      	cmp	r2, r3
 8003e30:	dbf0      	blt.n	8003e14 <_read+0x12>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	4618      	mov	r0, r3
 8003e36:	3718      	adds	r7, #24
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	bd80      	pop	{r7, pc}

08003e3c <_write>:
 8003e3c:	b580      	push	{r7, lr}
 8003e3e:	b086      	sub	sp, #24
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	60f8      	str	r0, [r7, #12]
 8003e44:	60b9      	str	r1, [r7, #8]
 8003e46:	607a      	str	r2, [r7, #4]
 8003e48:	2300      	movs	r3, #0
 8003e4a:	617b      	str	r3, [r7, #20]
 8003e4c:	e009      	b.n	8003e62 <_write+0x26>
 8003e4e:	68bb      	ldr	r3, [r7, #8]
 8003e50:	1c5a      	adds	r2, r3, #1
 8003e52:	60ba      	str	r2, [r7, #8]
 8003e54:	781b      	ldrb	r3, [r3, #0]
 8003e56:	4618      	mov	r0, r3
 8003e58:	f3af 8000 	nop.w
 8003e5c:	697b      	ldr	r3, [r7, #20]
 8003e5e:	3301      	adds	r3, #1
 8003e60:	617b      	str	r3, [r7, #20]
 8003e62:	697a      	ldr	r2, [r7, #20]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	429a      	cmp	r2, r3
 8003e68:	dbf1      	blt.n	8003e4e <_write+0x12>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	3718      	adds	r7, #24
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}

08003e74 <_close>:
 8003e74:	b480      	push	{r7}
 8003e76:	b083      	sub	sp, #12
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	f04f 33ff 	mov.w	r3, #4294967295
 8003e80:	4618      	mov	r0, r3
 8003e82:	370c      	adds	r7, #12
 8003e84:	46bd      	mov	sp, r7
 8003e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8a:	4770      	bx	lr

08003e8c <_fstat>:
 8003e8c:	b480      	push	{r7}
 8003e8e:	b083      	sub	sp, #12
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	6039      	str	r1, [r7, #0]
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003e9c:	605a      	str	r2, [r3, #4]
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	370c      	adds	r7, #12
 8003ea4:	46bd      	mov	sp, r7
 8003ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eaa:	4770      	bx	lr

08003eac <_isatty>:
 8003eac:	b480      	push	{r7}
 8003eae:	b083      	sub	sp, #12
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	6078      	str	r0, [r7, #4]
 8003eb4:	2301      	movs	r3, #1
 8003eb6:	4618      	mov	r0, r3
 8003eb8:	370c      	adds	r7, #12
 8003eba:	46bd      	mov	sp, r7
 8003ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec0:	4770      	bx	lr

08003ec2 <_lseek>:
 8003ec2:	b480      	push	{r7}
 8003ec4:	b085      	sub	sp, #20
 8003ec6:	af00      	add	r7, sp, #0
 8003ec8:	60f8      	str	r0, [r7, #12]
 8003eca:	60b9      	str	r1, [r7, #8]
 8003ecc:	607a      	str	r2, [r7, #4]
 8003ece:	2300      	movs	r3, #0
 8003ed0:	4618      	mov	r0, r3
 8003ed2:	3714      	adds	r7, #20
 8003ed4:	46bd      	mov	sp, r7
 8003ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eda:	4770      	bx	lr

08003edc <_sbrk>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b086      	sub	sp, #24
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	6078      	str	r0, [r7, #4]
 8003ee4:	4a14      	ldr	r2, [pc, #80]	@ (8003f38 <_sbrk+0x5c>)
 8003ee6:	4b15      	ldr	r3, [pc, #84]	@ (8003f3c <_sbrk+0x60>)
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	617b      	str	r3, [r7, #20]
 8003eec:	697b      	ldr	r3, [r7, #20]
 8003eee:	613b      	str	r3, [r7, #16]
 8003ef0:	4b13      	ldr	r3, [pc, #76]	@ (8003f40 <_sbrk+0x64>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d102      	bne.n	8003efe <_sbrk+0x22>
 8003ef8:	4b11      	ldr	r3, [pc, #68]	@ (8003f40 <_sbrk+0x64>)
 8003efa:	4a12      	ldr	r2, [pc, #72]	@ (8003f44 <_sbrk+0x68>)
 8003efc:	601a      	str	r2, [r3, #0]
 8003efe:	4b10      	ldr	r3, [pc, #64]	@ (8003f40 <_sbrk+0x64>)
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4413      	add	r3, r2
 8003f06:	693a      	ldr	r2, [r7, #16]
 8003f08:	429a      	cmp	r2, r3
 8003f0a:	d207      	bcs.n	8003f1c <_sbrk+0x40>
 8003f0c:	f017 f82c 	bl	801af68 <__errno>
 8003f10:	4603      	mov	r3, r0
 8003f12:	220c      	movs	r2, #12
 8003f14:	601a      	str	r2, [r3, #0]
 8003f16:	f04f 33ff 	mov.w	r3, #4294967295
 8003f1a:	e009      	b.n	8003f30 <_sbrk+0x54>
 8003f1c:	4b08      	ldr	r3, [pc, #32]	@ (8003f40 <_sbrk+0x64>)
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	60fb      	str	r3, [r7, #12]
 8003f22:	4b07      	ldr	r3, [pc, #28]	@ (8003f40 <_sbrk+0x64>)
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	4413      	add	r3, r2
 8003f2a:	4a05      	ldr	r2, [pc, #20]	@ (8003f40 <_sbrk+0x64>)
 8003f2c:	6013      	str	r3, [r2, #0]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	4618      	mov	r0, r3
 8003f32:	3718      	adds	r7, #24
 8003f34:	46bd      	mov	sp, r7
 8003f36:	bd80      	pop	{r7, pc}
 8003f38:	20020000 	.word	0x20020000
 8003f3c:	00009000 	.word	0x00009000
 8003f40:	20001ac4 	.word	0x20001ac4
 8003f44:	2000d288 	.word	0x2000d288

08003f48 <SystemInit>:
 8003f48:	b480      	push	{r7}
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	4b08      	ldr	r3, [pc, #32]	@ (8003f70 <SystemInit+0x28>)
 8003f4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003f52:	4a07      	ldr	r2, [pc, #28]	@ (8003f70 <SystemInit+0x28>)
 8003f54:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003f58:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003f5c:	4b04      	ldr	r3, [pc, #16]	@ (8003f70 <SystemInit+0x28>)
 8003f5e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003f62:	609a      	str	r2, [r3, #8]
 8003f64:	bf00      	nop
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop
 8003f70:	e000ed00 	.word	0xe000ed00

08003f74 <LL_TIM_DisableARRPreload>:
 8003f74:	b480      	push	{r7}
 8003f76:	b083      	sub	sp, #12
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	6078      	str	r0, [r7, #4]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	601a      	str	r2, [r3, #0]
 8003f88:	bf00      	nop
 8003f8a:	370c      	adds	r7, #12
 8003f8c:	46bd      	mov	sp, r7
 8003f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f92:	4770      	bx	lr

08003f94 <LL_TIM_SetClockSource>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	6039      	str	r1, [r7, #0]
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	689b      	ldr	r3, [r3, #8]
 8003fa2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003fa6:	f023 0307 	bic.w	r3, r3, #7
 8003faa:	683a      	ldr	r2, [r7, #0]
 8003fac:	431a      	orrs	r2, r3
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	609a      	str	r2, [r3, #8]
 8003fb2:	bf00      	nop
 8003fb4:	370c      	adds	r7, #12
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fbc:	4770      	bx	lr

08003fbe <LL_TIM_SetTriggerOutput>:
 8003fbe:	b480      	push	{r7}
 8003fc0:	b083      	sub	sp, #12
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	6078      	str	r0, [r7, #4]
 8003fc6:	6039      	str	r1, [r7, #0]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	685b      	ldr	r3, [r3, #4]
 8003fcc:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8003fd0:	683b      	ldr	r3, [r7, #0]
 8003fd2:	431a      	orrs	r2, r3
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	605a      	str	r2, [r3, #4]
 8003fd8:	bf00      	nop
 8003fda:	370c      	adds	r7, #12
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe2:	4770      	bx	lr

08003fe4 <LL_TIM_DisableMasterSlaveMode>:
 8003fe4:	b480      	push	{r7}
 8003fe6:	b083      	sub	sp, #12
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	689b      	ldr	r3, [r3, #8]
 8003ff0:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	609a      	str	r2, [r3, #8]
 8003ff8:	bf00      	nop
 8003ffa:	370c      	adds	r7, #12
 8003ffc:	46bd      	mov	sp, r7
 8003ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004002:	4770      	bx	lr

08004004 <LL_APB1_GRP1_EnableClock>:
 8004004:	b480      	push	{r7}
 8004006:	b085      	sub	sp, #20
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
 800400c:	4b08      	ldr	r3, [pc, #32]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800400e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004010:	4907      	ldr	r1, [pc, #28]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	4313      	orrs	r3, r2
 8004016:	640b      	str	r3, [r1, #64]	@ 0x40
 8004018:	4b05      	ldr	r3, [pc, #20]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800401a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	4013      	ands	r3, r2
 8004020:	60fb      	str	r3, [r7, #12]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	bf00      	nop
 8004026:	3714      	adds	r7, #20
 8004028:	46bd      	mov	sp, r7
 800402a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402e:	4770      	bx	lr
 8004030:	40023800 	.word	0x40023800

08004034 <MX_TIM2_Init>:
 8004034:	b580      	push	{r7, lr}
 8004036:	b086      	sub	sp, #24
 8004038:	af00      	add	r7, sp, #0
 800403a:	1d3b      	adds	r3, r7, #4
 800403c:	2200      	movs	r2, #0
 800403e:	601a      	str	r2, [r3, #0]
 8004040:	605a      	str	r2, [r3, #4]
 8004042:	609a      	str	r2, [r3, #8]
 8004044:	60da      	str	r2, [r3, #12]
 8004046:	611a      	str	r2, [r3, #16]
 8004048:	2001      	movs	r0, #1
 800404a:	f7ff ffdb 	bl	8004004 <LL_APB1_GRP1_EnableClock>
 800404e:	2300      	movs	r3, #0
 8004050:	80bb      	strh	r3, [r7, #4]
 8004052:	2300      	movs	r3, #0
 8004054:	60bb      	str	r3, [r7, #8]
 8004056:	f04f 33ff 	mov.w	r3, #4294967295
 800405a:	60fb      	str	r3, [r7, #12]
 800405c:	2300      	movs	r3, #0
 800405e:	613b      	str	r3, [r7, #16]
 8004060:	1d3b      	adds	r3, r7, #4
 8004062:	4619      	mov	r1, r3
 8004064:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004068:	f00f fb2a 	bl	80136c0 <LL_TIM_Init>
 800406c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004070:	f7ff ff80 	bl	8003f74 <LL_TIM_DisableARRPreload>
 8004074:	2100      	movs	r1, #0
 8004076:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800407a:	f7ff ff8b 	bl	8003f94 <LL_TIM_SetClockSource>
 800407e:	2100      	movs	r1, #0
 8004080:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004084:	f7ff ff9b 	bl	8003fbe <LL_TIM_SetTriggerOutput>
 8004088:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800408c:	f7ff ffaa 	bl	8003fe4 <LL_TIM_DisableMasterSlaveMode>
 8004090:	bf00      	nop
 8004092:	3718      	adds	r7, #24
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <MX_TIM3_Init>:
 8004098:	b580      	push	{r7, lr}
 800409a:	b08e      	sub	sp, #56	@ 0x38
 800409c:	af00      	add	r7, sp, #0
 800409e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80040a2:	2200      	movs	r2, #0
 80040a4:	601a      	str	r2, [r3, #0]
 80040a6:	605a      	str	r2, [r3, #4]
 80040a8:	609a      	str	r2, [r3, #8]
 80040aa:	60da      	str	r2, [r3, #12]
 80040ac:	f107 0320 	add.w	r3, r7, #32
 80040b0:	2200      	movs	r2, #0
 80040b2:	601a      	str	r2, [r3, #0]
 80040b4:	605a      	str	r2, [r3, #4]
 80040b6:	1d3b      	adds	r3, r7, #4
 80040b8:	2200      	movs	r2, #0
 80040ba:	601a      	str	r2, [r3, #0]
 80040bc:	605a      	str	r2, [r3, #4]
 80040be:	609a      	str	r2, [r3, #8]
 80040c0:	60da      	str	r2, [r3, #12]
 80040c2:	611a      	str	r2, [r3, #16]
 80040c4:	615a      	str	r2, [r3, #20]
 80040c6:	619a      	str	r2, [r3, #24]
 80040c8:	4b2a      	ldr	r3, [pc, #168]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ca:	4a2b      	ldr	r2, [pc, #172]	@ (8004178 <MX_TIM3_Init+0xe0>)
 80040cc:	601a      	str	r2, [r3, #0]
 80040ce:	4b29      	ldr	r3, [pc, #164]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d0:	22a7      	movs	r2, #167	@ 0xa7
 80040d2:	605a      	str	r2, [r3, #4]
 80040d4:	4b27      	ldr	r3, [pc, #156]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d6:	2200      	movs	r2, #0
 80040d8:	609a      	str	r2, [r3, #8]
 80040da:	4b26      	ldr	r3, [pc, #152]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040dc:	2201      	movs	r2, #1
 80040de:	60da      	str	r2, [r3, #12]
 80040e0:	4b24      	ldr	r3, [pc, #144]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e2:	2200      	movs	r2, #0
 80040e4:	611a      	str	r2, [r3, #16]
 80040e6:	4b23      	ldr	r3, [pc, #140]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e8:	2200      	movs	r2, #0
 80040ea:	619a      	str	r2, [r3, #24]
 80040ec:	4821      	ldr	r0, [pc, #132]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ee:	f00d f8dd 	bl	80112ac <HAL_TIM_Base_Init>
 80040f2:	4603      	mov	r3, r0
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d001      	beq.n	80040fc <MX_TIM3_Init+0x64>
 80040f8:	f7ff fb7e 	bl	80037f8 <Error_Handler>
 80040fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004100:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004102:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8004106:	4619      	mov	r1, r3
 8004108:	481a      	ldr	r0, [pc, #104]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800410a:	f00d fd25 	bl	8011b58 <HAL_TIM_ConfigClockSource>
 800410e:	4603      	mov	r3, r0
 8004110:	2b00      	cmp	r3, #0
 8004112:	d001      	beq.n	8004118 <MX_TIM3_Init+0x80>
 8004114:	f7ff fb70 	bl	80037f8 <Error_Handler>
 8004118:	4816      	ldr	r0, [pc, #88]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800411a:	f00d f987 	bl	801142c <HAL_TIM_OC_Init>
 800411e:	4603      	mov	r3, r0
 8004120:	2b00      	cmp	r3, #0
 8004122:	d001      	beq.n	8004128 <MX_TIM3_Init+0x90>
 8004124:	f7ff fb68 	bl	80037f8 <Error_Handler>
 8004128:	2300      	movs	r3, #0
 800412a:	623b      	str	r3, [r7, #32]
 800412c:	2300      	movs	r3, #0
 800412e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004130:	f107 0320 	add.w	r3, r7, #32
 8004134:	4619      	mov	r1, r3
 8004136:	480f      	ldr	r0, [pc, #60]	@ (8004174 <MX_TIM3_Init+0xdc>)
 8004138:	f00e f90e 	bl	8012358 <HAL_TIMEx_MasterConfigSynchronization>
 800413c:	4603      	mov	r3, r0
 800413e:	2b00      	cmp	r3, #0
 8004140:	d001      	beq.n	8004146 <MX_TIM3_Init+0xae>
 8004142:	f7ff fb59 	bl	80037f8 <Error_Handler>
 8004146:	2300      	movs	r3, #0
 8004148:	607b      	str	r3, [r7, #4]
 800414a:	2300      	movs	r3, #0
 800414c:	60bb      	str	r3, [r7, #8]
 800414e:	2300      	movs	r3, #0
 8004150:	60fb      	str	r3, [r7, #12]
 8004152:	2300      	movs	r3, #0
 8004154:	617b      	str	r3, [r7, #20]
 8004156:	1d3b      	adds	r3, r7, #4
 8004158:	2200      	movs	r2, #0
 800415a:	4619      	mov	r1, r3
 800415c:	4805      	ldr	r0, [pc, #20]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800415e:	f00d fbdd 	bl	801191c <HAL_TIM_OC_ConfigChannel>
 8004162:	4603      	mov	r3, r0
 8004164:	2b00      	cmp	r3, #0
 8004166:	d001      	beq.n	800416c <MX_TIM3_Init+0xd4>
 8004168:	f7ff fb46 	bl	80037f8 <Error_Handler>
 800416c:	bf00      	nop
 800416e:	3738      	adds	r7, #56	@ 0x38
 8004170:	46bd      	mov	sp, r7
 8004172:	bd80      	pop	{r7, pc}
 8004174:	20001ac8 	.word	0x20001ac8
 8004178:	40000400 	.word	0x40000400

0800417c <MX_TIM4_Init>:
 800417c:	b580      	push	{r7, lr}
 800417e:	b08a      	sub	sp, #40	@ 0x28
 8004180:	af00      	add	r7, sp, #0
 8004182:	f107 0320 	add.w	r3, r7, #32
 8004186:	2200      	movs	r2, #0
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	605a      	str	r2, [r3, #4]
 800418c:	1d3b      	adds	r3, r7, #4
 800418e:	2200      	movs	r2, #0
 8004190:	601a      	str	r2, [r3, #0]
 8004192:	605a      	str	r2, [r3, #4]
 8004194:	609a      	str	r2, [r3, #8]
 8004196:	60da      	str	r2, [r3, #12]
 8004198:	611a      	str	r2, [r3, #16]
 800419a:	615a      	str	r2, [r3, #20]
 800419c:	619a      	str	r2, [r3, #24]
 800419e:	4b22      	ldr	r3, [pc, #136]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a0:	4a22      	ldr	r2, [pc, #136]	@ (800422c <MX_TIM4_Init+0xb0>)
 80041a2:	601a      	str	r2, [r3, #0]
 80041a4:	4b20      	ldr	r3, [pc, #128]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041aa:	605a      	str	r2, [r3, #4]
 80041ac:	4b1e      	ldr	r3, [pc, #120]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041ae:	2200      	movs	r2, #0
 80041b0:	609a      	str	r2, [r3, #8]
 80041b2:	4b1d      	ldr	r3, [pc, #116]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041b4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041b8:	60da      	str	r2, [r3, #12]
 80041ba:	4b1b      	ldr	r3, [pc, #108]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041bc:	2200      	movs	r2, #0
 80041be:	611a      	str	r2, [r3, #16]
 80041c0:	4b19      	ldr	r3, [pc, #100]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c2:	2200      	movs	r2, #0
 80041c4:	619a      	str	r2, [r3, #24]
 80041c6:	4818      	ldr	r0, [pc, #96]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c8:	f00d f989 	bl	80114de <HAL_TIM_PWM_Init>
 80041cc:	4603      	mov	r3, r0
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	d001      	beq.n	80041d6 <MX_TIM4_Init+0x5a>
 80041d2:	f7ff fb11 	bl	80037f8 <Error_Handler>
 80041d6:	2300      	movs	r3, #0
 80041d8:	623b      	str	r3, [r7, #32]
 80041da:	2300      	movs	r3, #0
 80041dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80041de:	f107 0320 	add.w	r3, r7, #32
 80041e2:	4619      	mov	r1, r3
 80041e4:	4810      	ldr	r0, [pc, #64]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041e6:	f00e f8b7 	bl	8012358 <HAL_TIMEx_MasterConfigSynchronization>
 80041ea:	4603      	mov	r3, r0
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d001      	beq.n	80041f4 <MX_TIM4_Init+0x78>
 80041f0:	f7ff fb02 	bl	80037f8 <Error_Handler>
 80041f4:	2360      	movs	r3, #96	@ 0x60
 80041f6:	607b      	str	r3, [r7, #4]
 80041f8:	2300      	movs	r3, #0
 80041fa:	60bb      	str	r3, [r7, #8]
 80041fc:	2300      	movs	r3, #0
 80041fe:	60fb      	str	r3, [r7, #12]
 8004200:	2300      	movs	r3, #0
 8004202:	617b      	str	r3, [r7, #20]
 8004204:	1d3b      	adds	r3, r7, #4
 8004206:	2208      	movs	r2, #8
 8004208:	4619      	mov	r1, r3
 800420a:	4807      	ldr	r0, [pc, #28]	@ (8004228 <MX_TIM4_Init+0xac>)
 800420c:	f00d fbe2 	bl	80119d4 <HAL_TIM_PWM_ConfigChannel>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d001      	beq.n	800421a <MX_TIM4_Init+0x9e>
 8004216:	f7ff faef 	bl	80037f8 <Error_Handler>
 800421a:	4803      	ldr	r0, [pc, #12]	@ (8004228 <MX_TIM4_Init+0xac>)
 800421c:	f000 f93c 	bl	8004498 <HAL_TIM_MspPostInit>
 8004220:	bf00      	nop
 8004222:	3728      	adds	r7, #40	@ 0x28
 8004224:	46bd      	mov	sp, r7
 8004226:	bd80      	pop	{r7, pc}
 8004228:	20001b10 	.word	0x20001b10
 800422c:	40000800 	.word	0x40000800

08004230 <MX_TIM5_Init>:
 8004230:	b580      	push	{r7, lr}
 8004232:	b08a      	sub	sp, #40	@ 0x28
 8004234:	af00      	add	r7, sp, #0
 8004236:	f107 0320 	add.w	r3, r7, #32
 800423a:	2200      	movs	r2, #0
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	605a      	str	r2, [r3, #4]
 8004240:	1d3b      	adds	r3, r7, #4
 8004242:	2200      	movs	r2, #0
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	605a      	str	r2, [r3, #4]
 8004248:	609a      	str	r2, [r3, #8]
 800424a:	60da      	str	r2, [r3, #12]
 800424c:	611a      	str	r2, [r3, #16]
 800424e:	615a      	str	r2, [r3, #20]
 8004250:	619a      	str	r2, [r3, #24]
 8004252:	4b2d      	ldr	r3, [pc, #180]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004254:	4a2d      	ldr	r2, [pc, #180]	@ (800430c <MX_TIM5_Init+0xdc>)
 8004256:	601a      	str	r2, [r3, #0]
 8004258:	4b2b      	ldr	r3, [pc, #172]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800425a:	f240 5225 	movw	r2, #1317	@ 0x525
 800425e:	605a      	str	r2, [r3, #4]
 8004260:	4b29      	ldr	r3, [pc, #164]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004262:	2200      	movs	r2, #0
 8004264:	609a      	str	r2, [r3, #8]
 8004266:	4b28      	ldr	r3, [pc, #160]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004268:	22ff      	movs	r2, #255	@ 0xff
 800426a:	60da      	str	r2, [r3, #12]
 800426c:	4b26      	ldr	r3, [pc, #152]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800426e:	2200      	movs	r2, #0
 8004270:	611a      	str	r2, [r3, #16]
 8004272:	4b25      	ldr	r3, [pc, #148]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004274:	2280      	movs	r2, #128	@ 0x80
 8004276:	619a      	str	r2, [r3, #24]
 8004278:	4823      	ldr	r0, [pc, #140]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800427a:	f00d f930 	bl	80114de <HAL_TIM_PWM_Init>
 800427e:	4603      	mov	r3, r0
 8004280:	2b00      	cmp	r3, #0
 8004282:	d001      	beq.n	8004288 <MX_TIM5_Init+0x58>
 8004284:	f7ff fab8 	bl	80037f8 <Error_Handler>
 8004288:	2300      	movs	r3, #0
 800428a:	623b      	str	r3, [r7, #32]
 800428c:	2300      	movs	r3, #0
 800428e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004290:	f107 0320 	add.w	r3, r7, #32
 8004294:	4619      	mov	r1, r3
 8004296:	481c      	ldr	r0, [pc, #112]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004298:	f00e f85e 	bl	8012358 <HAL_TIMEx_MasterConfigSynchronization>
 800429c:	4603      	mov	r3, r0
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d001      	beq.n	80042a6 <MX_TIM5_Init+0x76>
 80042a2:	f7ff faa9 	bl	80037f8 <Error_Handler>
 80042a6:	2360      	movs	r3, #96	@ 0x60
 80042a8:	607b      	str	r3, [r7, #4]
 80042aa:	2300      	movs	r3, #0
 80042ac:	60bb      	str	r3, [r7, #8]
 80042ae:	2302      	movs	r3, #2
 80042b0:	60fb      	str	r3, [r7, #12]
 80042b2:	2304      	movs	r3, #4
 80042b4:	617b      	str	r3, [r7, #20]
 80042b6:	1d3b      	adds	r3, r7, #4
 80042b8:	2200      	movs	r2, #0
 80042ba:	4619      	mov	r1, r3
 80042bc:	4812      	ldr	r0, [pc, #72]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042be:	f00d fb89 	bl	80119d4 <HAL_TIM_PWM_ConfigChannel>
 80042c2:	4603      	mov	r3, r0
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d001      	beq.n	80042cc <MX_TIM5_Init+0x9c>
 80042c8:	f7ff fa96 	bl	80037f8 <Error_Handler>
 80042cc:	1d3b      	adds	r3, r7, #4
 80042ce:	2204      	movs	r2, #4
 80042d0:	4619      	mov	r1, r3
 80042d2:	480d      	ldr	r0, [pc, #52]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042d4:	f00d fb7e 	bl	80119d4 <HAL_TIM_PWM_ConfigChannel>
 80042d8:	4603      	mov	r3, r0
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d001      	beq.n	80042e2 <MX_TIM5_Init+0xb2>
 80042de:	f7ff fa8b 	bl	80037f8 <Error_Handler>
 80042e2:	1d3b      	adds	r3, r7, #4
 80042e4:	2208      	movs	r2, #8
 80042e6:	4619      	mov	r1, r3
 80042e8:	4807      	ldr	r0, [pc, #28]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042ea:	f00d fb73 	bl	80119d4 <HAL_TIM_PWM_ConfigChannel>
 80042ee:	4603      	mov	r3, r0
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d001      	beq.n	80042f8 <MX_TIM5_Init+0xc8>
 80042f4:	f7ff fa80 	bl	80037f8 <Error_Handler>
 80042f8:	4803      	ldr	r0, [pc, #12]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042fa:	f000 f8cd 	bl	8004498 <HAL_TIM_MspPostInit>
 80042fe:	bf00      	nop
 8004300:	3728      	adds	r7, #40	@ 0x28
 8004302:	46bd      	mov	sp, r7
 8004304:	bd80      	pop	{r7, pc}
 8004306:	bf00      	nop
 8004308:	20001b58 	.word	0x20001b58
 800430c:	40000c00 	.word	0x40000c00

08004310 <MX_TIM10_Init>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b088      	sub	sp, #32
 8004314:	af00      	add	r7, sp, #0
 8004316:	1d3b      	adds	r3, r7, #4
 8004318:	2200      	movs	r2, #0
 800431a:	601a      	str	r2, [r3, #0]
 800431c:	605a      	str	r2, [r3, #4]
 800431e:	609a      	str	r2, [r3, #8]
 8004320:	60da      	str	r2, [r3, #12]
 8004322:	611a      	str	r2, [r3, #16]
 8004324:	615a      	str	r2, [r3, #20]
 8004326:	619a      	str	r2, [r3, #24]
 8004328:	4b1e      	ldr	r3, [pc, #120]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800432a:	4a1f      	ldr	r2, [pc, #124]	@ (80043a8 <MX_TIM10_Init+0x98>)
 800432c:	601a      	str	r2, [r3, #0]
 800432e:	4b1d      	ldr	r3, [pc, #116]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004330:	2200      	movs	r2, #0
 8004332:	605a      	str	r2, [r3, #4]
 8004334:	4b1b      	ldr	r3, [pc, #108]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004336:	2200      	movs	r2, #0
 8004338:	609a      	str	r2, [r3, #8]
 800433a:	4b1a      	ldr	r3, [pc, #104]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800433c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8004340:	60da      	str	r2, [r3, #12]
 8004342:	4b18      	ldr	r3, [pc, #96]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004344:	2200      	movs	r2, #0
 8004346:	611a      	str	r2, [r3, #16]
 8004348:	4b16      	ldr	r3, [pc, #88]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800434a:	2200      	movs	r2, #0
 800434c:	619a      	str	r2, [r3, #24]
 800434e:	4815      	ldr	r0, [pc, #84]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004350:	f00c ffac 	bl	80112ac <HAL_TIM_Base_Init>
 8004354:	4603      	mov	r3, r0
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <MX_TIM10_Init+0x4e>
 800435a:	f7ff fa4d 	bl	80037f8 <Error_Handler>
 800435e:	4811      	ldr	r0, [pc, #68]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004360:	f00d f8bd 	bl	80114de <HAL_TIM_PWM_Init>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	d001      	beq.n	800436e <MX_TIM10_Init+0x5e>
 800436a:	f7ff fa45 	bl	80037f8 <Error_Handler>
 800436e:	2360      	movs	r3, #96	@ 0x60
 8004370:	607b      	str	r3, [r7, #4]
 8004372:	2300      	movs	r3, #0
 8004374:	60bb      	str	r3, [r7, #8]
 8004376:	2300      	movs	r3, #0
 8004378:	60fb      	str	r3, [r7, #12]
 800437a:	2300      	movs	r3, #0
 800437c:	617b      	str	r3, [r7, #20]
 800437e:	1d3b      	adds	r3, r7, #4
 8004380:	2200      	movs	r2, #0
 8004382:	4619      	mov	r1, r3
 8004384:	4807      	ldr	r0, [pc, #28]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004386:	f00d fb25 	bl	80119d4 <HAL_TIM_PWM_ConfigChannel>
 800438a:	4603      	mov	r3, r0
 800438c:	2b00      	cmp	r3, #0
 800438e:	d001      	beq.n	8004394 <MX_TIM10_Init+0x84>
 8004390:	f7ff fa32 	bl	80037f8 <Error_Handler>
 8004394:	4803      	ldr	r0, [pc, #12]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004396:	f000 f87f 	bl	8004498 <HAL_TIM_MspPostInit>
 800439a:	bf00      	nop
 800439c:	3720      	adds	r7, #32
 800439e:	46bd      	mov	sp, r7
 80043a0:	bd80      	pop	{r7, pc}
 80043a2:	bf00      	nop
 80043a4:	20001ba0 	.word	0x20001ba0
 80043a8:	40014400 	.word	0x40014400

080043ac <HAL_TIM_Base_MspInit>:
 80043ac:	b580      	push	{r7, lr}
 80043ae:	b084      	sub	sp, #16
 80043b0:	af00      	add	r7, sp, #0
 80043b2:	6078      	str	r0, [r7, #4]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a18      	ldr	r2, [pc, #96]	@ (800441c <HAL_TIM_Base_MspInit+0x70>)
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d116      	bne.n	80043ec <HAL_TIM_Base_MspInit+0x40>
 80043be:	2300      	movs	r3, #0
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	4b17      	ldr	r3, [pc, #92]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043c6:	4a16      	ldr	r2, [pc, #88]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c8:	f043 0302 	orr.w	r3, r3, #2
 80043cc:	6413      	str	r3, [r2, #64]	@ 0x40
 80043ce:	4b14      	ldr	r3, [pc, #80]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043d2:	f003 0302 	and.w	r3, r3, #2
 80043d6:	60fb      	str	r3, [r7, #12]
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	2200      	movs	r2, #0
 80043dc:	2105      	movs	r1, #5
 80043de:	201d      	movs	r0, #29
 80043e0:	f008 f828 	bl	800c434 <HAL_NVIC_SetPriority>
 80043e4:	201d      	movs	r0, #29
 80043e6:	f008 f841 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80043ea:	e012      	b.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	4a0c      	ldr	r2, [pc, #48]	@ (8004424 <HAL_TIM_Base_MspInit+0x78>)
 80043f2:	4293      	cmp	r3, r2
 80043f4:	d10d      	bne.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043f6:	2300      	movs	r3, #0
 80043f8:	60bb      	str	r3, [r7, #8]
 80043fa:	4b09      	ldr	r3, [pc, #36]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80043fe:	4a08      	ldr	r2, [pc, #32]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004400:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004404:	6453      	str	r3, [r2, #68]	@ 0x44
 8004406:	4b06      	ldr	r3, [pc, #24]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004408:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800440a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800440e:	60bb      	str	r3, [r7, #8]
 8004410:	68bb      	ldr	r3, [r7, #8]
 8004412:	bf00      	nop
 8004414:	3710      	adds	r7, #16
 8004416:	46bd      	mov	sp, r7
 8004418:	bd80      	pop	{r7, pc}
 800441a:	bf00      	nop
 800441c:	40000400 	.word	0x40000400
 8004420:	40023800 	.word	0x40023800
 8004424:	40014400 	.word	0x40014400

08004428 <HAL_TIM_PWM_MspInit>:
 8004428:	b480      	push	{r7}
 800442a:	b085      	sub	sp, #20
 800442c:	af00      	add	r7, sp, #0
 800442e:	6078      	str	r0, [r7, #4]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a15      	ldr	r2, [pc, #84]	@ (800448c <HAL_TIM_PWM_MspInit+0x64>)
 8004436:	4293      	cmp	r3, r2
 8004438:	d10e      	bne.n	8004458 <HAL_TIM_PWM_MspInit+0x30>
 800443a:	2300      	movs	r3, #0
 800443c:	60fb      	str	r3, [r7, #12]
 800443e:	4b14      	ldr	r3, [pc, #80]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004440:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004442:	4a13      	ldr	r2, [pc, #76]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004444:	f043 0304 	orr.w	r3, r3, #4
 8004448:	6413      	str	r3, [r2, #64]	@ 0x40
 800444a:	4b11      	ldr	r3, [pc, #68]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800444c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800444e:	f003 0304 	and.w	r3, r3, #4
 8004452:	60fb      	str	r3, [r7, #12]
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	e012      	b.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	4a0d      	ldr	r2, [pc, #52]	@ (8004494 <HAL_TIM_PWM_MspInit+0x6c>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d10d      	bne.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004462:	2300      	movs	r3, #0
 8004464:	60bb      	str	r3, [r7, #8]
 8004466:	4b0a      	ldr	r3, [pc, #40]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004468:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800446a:	4a09      	ldr	r2, [pc, #36]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800446c:	f043 0308 	orr.w	r3, r3, #8
 8004470:	6413      	str	r3, [r2, #64]	@ 0x40
 8004472:	4b07      	ldr	r3, [pc, #28]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004476:	f003 0308 	and.w	r3, r3, #8
 800447a:	60bb      	str	r3, [r7, #8]
 800447c:	68bb      	ldr	r3, [r7, #8]
 800447e:	bf00      	nop
 8004480:	3714      	adds	r7, #20
 8004482:	46bd      	mov	sp, r7
 8004484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004488:	4770      	bx	lr
 800448a:	bf00      	nop
 800448c:	40000800 	.word	0x40000800
 8004490:	40023800 	.word	0x40023800
 8004494:	40000c00 	.word	0x40000c00

08004498 <HAL_TIM_MspPostInit>:
 8004498:	b580      	push	{r7, lr}
 800449a:	b08a      	sub	sp, #40	@ 0x28
 800449c:	af00      	add	r7, sp, #0
 800449e:	6078      	str	r0, [r7, #4]
 80044a0:	f107 0314 	add.w	r3, r7, #20
 80044a4:	2200      	movs	r2, #0
 80044a6:	601a      	str	r2, [r3, #0]
 80044a8:	605a      	str	r2, [r3, #4]
 80044aa:	609a      	str	r2, [r3, #8]
 80044ac:	60da      	str	r2, [r3, #12]
 80044ae:	611a      	str	r2, [r3, #16]
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	4a37      	ldr	r2, [pc, #220]	@ (8004594 <HAL_TIM_MspPostInit+0xfc>)
 80044b6:	4293      	cmp	r3, r2
 80044b8:	d11f      	bne.n	80044fa <HAL_TIM_MspPostInit+0x62>
 80044ba:	2300      	movs	r3, #0
 80044bc:	613b      	str	r3, [r7, #16]
 80044be:	4b36      	ldr	r3, [pc, #216]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044c2:	4a35      	ldr	r2, [pc, #212]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c4:	f043 0308 	orr.w	r3, r3, #8
 80044c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80044ca:	4b33      	ldr	r3, [pc, #204]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044ce:	f003 0308 	and.w	r3, r3, #8
 80044d2:	613b      	str	r3, [r7, #16]
 80044d4:	693b      	ldr	r3, [r7, #16]
 80044d6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80044da:	617b      	str	r3, [r7, #20]
 80044dc:	2302      	movs	r3, #2
 80044de:	61bb      	str	r3, [r7, #24]
 80044e0:	2300      	movs	r3, #0
 80044e2:	61fb      	str	r3, [r7, #28]
 80044e4:	2300      	movs	r3, #0
 80044e6:	623b      	str	r3, [r7, #32]
 80044e8:	2302      	movs	r3, #2
 80044ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80044ec:	f107 0314 	add.w	r3, r7, #20
 80044f0:	4619      	mov	r1, r3
 80044f2:	482a      	ldr	r0, [pc, #168]	@ (800459c <HAL_TIM_MspPostInit+0x104>)
 80044f4:	f008 fbe4 	bl	800ccc0 <HAL_GPIO_Init>
 80044f8:	e047      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	681b      	ldr	r3, [r3, #0]
 80044fe:	4a28      	ldr	r2, [pc, #160]	@ (80045a0 <HAL_TIM_MspPostInit+0x108>)
 8004500:	4293      	cmp	r3, r2
 8004502:	d11f      	bne.n	8004544 <HAL_TIM_MspPostInit+0xac>
 8004504:	2300      	movs	r3, #0
 8004506:	60fb      	str	r3, [r7, #12]
 8004508:	4b23      	ldr	r3, [pc, #140]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800450c:	4a22      	ldr	r2, [pc, #136]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004512:	6313      	str	r3, [r2, #48]	@ 0x30
 8004514:	4b20      	ldr	r3, [pc, #128]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004516:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004518:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800451c:	60fb      	str	r3, [r7, #12]
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8004524:	617b      	str	r3, [r7, #20]
 8004526:	2302      	movs	r3, #2
 8004528:	61bb      	str	r3, [r7, #24]
 800452a:	2300      	movs	r3, #0
 800452c:	61fb      	str	r3, [r7, #28]
 800452e:	2300      	movs	r3, #0
 8004530:	623b      	str	r3, [r7, #32]
 8004532:	2302      	movs	r3, #2
 8004534:	627b      	str	r3, [r7, #36]	@ 0x24
 8004536:	f107 0314 	add.w	r3, r7, #20
 800453a:	4619      	mov	r1, r3
 800453c:	4819      	ldr	r0, [pc, #100]	@ (80045a4 <HAL_TIM_MspPostInit+0x10c>)
 800453e:	f008 fbbf 	bl	800ccc0 <HAL_GPIO_Init>
 8004542:	e022      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4a17      	ldr	r2, [pc, #92]	@ (80045a8 <HAL_TIM_MspPostInit+0x110>)
 800454a:	4293      	cmp	r3, r2
 800454c:	d11d      	bne.n	800458a <HAL_TIM_MspPostInit+0xf2>
 800454e:	2300      	movs	r3, #0
 8004550:	60bb      	str	r3, [r7, #8]
 8004552:	4b11      	ldr	r3, [pc, #68]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004556:	4a10      	ldr	r2, [pc, #64]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004558:	f043 0320 	orr.w	r3, r3, #32
 800455c:	6313      	str	r3, [r2, #48]	@ 0x30
 800455e:	4b0e      	ldr	r3, [pc, #56]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004562:	f003 0320 	and.w	r3, r3, #32
 8004566:	60bb      	str	r3, [r7, #8]
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	2340      	movs	r3, #64	@ 0x40
 800456c:	617b      	str	r3, [r7, #20]
 800456e:	2302      	movs	r3, #2
 8004570:	61bb      	str	r3, [r7, #24]
 8004572:	2300      	movs	r3, #0
 8004574:	61fb      	str	r3, [r7, #28]
 8004576:	2300      	movs	r3, #0
 8004578:	623b      	str	r3, [r7, #32]
 800457a:	2303      	movs	r3, #3
 800457c:	627b      	str	r3, [r7, #36]	@ 0x24
 800457e:	f107 0314 	add.w	r3, r7, #20
 8004582:	4619      	mov	r1, r3
 8004584:	4809      	ldr	r0, [pc, #36]	@ (80045ac <HAL_TIM_MspPostInit+0x114>)
 8004586:	f008 fb9b 	bl	800ccc0 <HAL_GPIO_Init>
 800458a:	bf00      	nop
 800458c:	3728      	adds	r7, #40	@ 0x28
 800458e:	46bd      	mov	sp, r7
 8004590:	bd80      	pop	{r7, pc}
 8004592:	bf00      	nop
 8004594:	40000800 	.word	0x40000800
 8004598:	40023800 	.word	0x40023800
 800459c:	40020c00 	.word	0x40020c00
 80045a0:	40000c00 	.word	0x40000c00
 80045a4:	40021c00 	.word	0x40021c00
 80045a8:	40014400 	.word	0x40014400
 80045ac:	40021400 	.word	0x40021400

080045b0 <MX_USART1_UART_Init>:
 80045b0:	b580      	push	{r7, lr}
 80045b2:	af00      	add	r7, sp, #0
 80045b4:	4b11      	ldr	r3, [pc, #68]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045b6:	4a12      	ldr	r2, [pc, #72]	@ (8004600 <MX_USART1_UART_Init+0x50>)
 80045b8:	601a      	str	r2, [r3, #0]
 80045ba:	4b10      	ldr	r3, [pc, #64]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045bc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80045c0:	605a      	str	r2, [r3, #4]
 80045c2:	4b0e      	ldr	r3, [pc, #56]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045c4:	2200      	movs	r2, #0
 80045c6:	609a      	str	r2, [r3, #8]
 80045c8:	4b0c      	ldr	r3, [pc, #48]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045ca:	2200      	movs	r2, #0
 80045cc:	60da      	str	r2, [r3, #12]
 80045ce:	4b0b      	ldr	r3, [pc, #44]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d0:	2200      	movs	r2, #0
 80045d2:	611a      	str	r2, [r3, #16]
 80045d4:	4b09      	ldr	r3, [pc, #36]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d6:	220c      	movs	r2, #12
 80045d8:	615a      	str	r2, [r3, #20]
 80045da:	4b08      	ldr	r3, [pc, #32]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045dc:	2200      	movs	r2, #0
 80045de:	619a      	str	r2, [r3, #24]
 80045e0:	4b06      	ldr	r3, [pc, #24]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e2:	2200      	movs	r2, #0
 80045e4:	61da      	str	r2, [r3, #28]
 80045e6:	4805      	ldr	r0, [pc, #20]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e8:	f00d ff46 	bl	8012478 <HAL_UART_Init>
 80045ec:	4603      	mov	r3, r0
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d001      	beq.n	80045f6 <MX_USART1_UART_Init+0x46>
 80045f2:	f7ff f901 	bl	80037f8 <Error_Handler>
 80045f6:	bf00      	nop
 80045f8:	bd80      	pop	{r7, pc}
 80045fa:	bf00      	nop
 80045fc:	20001be8 	.word	0x20001be8
 8004600:	40011000 	.word	0x40011000

08004604 <MX_USART3_UART_Init>:
 8004604:	b580      	push	{r7, lr}
 8004606:	af00      	add	r7, sp, #0
 8004608:	4b11      	ldr	r3, [pc, #68]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800460a:	4a12      	ldr	r2, [pc, #72]	@ (8004654 <MX_USART3_UART_Init+0x50>)
 800460c:	601a      	str	r2, [r3, #0]
 800460e:	4b10      	ldr	r3, [pc, #64]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004610:	4a11      	ldr	r2, [pc, #68]	@ (8004658 <MX_USART3_UART_Init+0x54>)
 8004612:	605a      	str	r2, [r3, #4]
 8004614:	4b0e      	ldr	r3, [pc, #56]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004616:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800461a:	609a      	str	r2, [r3, #8]
 800461c:	4b0c      	ldr	r3, [pc, #48]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800461e:	2200      	movs	r2, #0
 8004620:	60da      	str	r2, [r3, #12]
 8004622:	4b0b      	ldr	r3, [pc, #44]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004624:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004628:	611a      	str	r2, [r3, #16]
 800462a:	4b09      	ldr	r3, [pc, #36]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800462c:	220c      	movs	r2, #12
 800462e:	615a      	str	r2, [r3, #20]
 8004630:	4b07      	ldr	r3, [pc, #28]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004632:	2200      	movs	r2, #0
 8004634:	619a      	str	r2, [r3, #24]
 8004636:	4b06      	ldr	r3, [pc, #24]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004638:	2200      	movs	r2, #0
 800463a:	61da      	str	r2, [r3, #28]
 800463c:	4804      	ldr	r0, [pc, #16]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800463e:	f00d ff1b 	bl	8012478 <HAL_UART_Init>
 8004642:	4603      	mov	r3, r0
 8004644:	2b00      	cmp	r3, #0
 8004646:	d001      	beq.n	800464c <MX_USART3_UART_Init+0x48>
 8004648:	f7ff f8d6 	bl	80037f8 <Error_Handler>
 800464c:	bf00      	nop
 800464e:	bd80      	pop	{r7, pc}
 8004650:	20001c2c 	.word	0x20001c2c
 8004654:	40004800 	.word	0x40004800
 8004658:	000186a0 	.word	0x000186a0

0800465c <MX_USART6_UART_Init>:
 800465c:	b580      	push	{r7, lr}
 800465e:	af00      	add	r7, sp, #0
 8004660:	4b11      	ldr	r3, [pc, #68]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004662:	4a12      	ldr	r2, [pc, #72]	@ (80046ac <MX_USART6_UART_Init+0x50>)
 8004664:	601a      	str	r2, [r3, #0]
 8004666:	4b10      	ldr	r3, [pc, #64]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004668:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800466c:	605a      	str	r2, [r3, #4]
 800466e:	4b0e      	ldr	r3, [pc, #56]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004670:	2200      	movs	r2, #0
 8004672:	609a      	str	r2, [r3, #8]
 8004674:	4b0c      	ldr	r3, [pc, #48]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004676:	2200      	movs	r2, #0
 8004678:	60da      	str	r2, [r3, #12]
 800467a:	4b0b      	ldr	r3, [pc, #44]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800467c:	2200      	movs	r2, #0
 800467e:	611a      	str	r2, [r3, #16]
 8004680:	4b09      	ldr	r3, [pc, #36]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004682:	220c      	movs	r2, #12
 8004684:	615a      	str	r2, [r3, #20]
 8004686:	4b08      	ldr	r3, [pc, #32]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004688:	2200      	movs	r2, #0
 800468a:	619a      	str	r2, [r3, #24]
 800468c:	4b06      	ldr	r3, [pc, #24]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800468e:	2200      	movs	r2, #0
 8004690:	61da      	str	r2, [r3, #28]
 8004692:	4805      	ldr	r0, [pc, #20]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004694:	f00d fef0 	bl	8012478 <HAL_UART_Init>
 8004698:	4603      	mov	r3, r0
 800469a:	2b00      	cmp	r3, #0
 800469c:	d001      	beq.n	80046a2 <MX_USART6_UART_Init+0x46>
 800469e:	f7ff f8ab 	bl	80037f8 <Error_Handler>
 80046a2:	bf00      	nop
 80046a4:	bd80      	pop	{r7, pc}
 80046a6:	bf00      	nop
 80046a8:	20001c70 	.word	0x20001c70
 80046ac:	40011400 	.word	0x40011400

080046b0 <HAL_UART_MspInit>:
 80046b0:	b580      	push	{r7, lr}
 80046b2:	b08e      	sub	sp, #56	@ 0x38
 80046b4:	af00      	add	r7, sp, #0
 80046b6:	6078      	str	r0, [r7, #4]
 80046b8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80046bc:	2200      	movs	r2, #0
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	605a      	str	r2, [r3, #4]
 80046c2:	609a      	str	r2, [r3, #8]
 80046c4:	60da      	str	r2, [r3, #12]
 80046c6:	611a      	str	r2, [r3, #16]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	4a78      	ldr	r2, [pc, #480]	@ (80048b0 <HAL_UART_MspInit+0x200>)
 80046ce:	4293      	cmp	r3, r2
 80046d0:	f040 8083 	bne.w	80047da <HAL_UART_MspInit+0x12a>
 80046d4:	2300      	movs	r3, #0
 80046d6:	623b      	str	r3, [r7, #32]
 80046d8:	4b76      	ldr	r3, [pc, #472]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046dc:	4a75      	ldr	r2, [pc, #468]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046de:	f043 0310 	orr.w	r3, r3, #16
 80046e2:	6453      	str	r3, [r2, #68]	@ 0x44
 80046e4:	4b73      	ldr	r3, [pc, #460]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046e8:	f003 0310 	and.w	r3, r3, #16
 80046ec:	623b      	str	r3, [r7, #32]
 80046ee:	6a3b      	ldr	r3, [r7, #32]
 80046f0:	2300      	movs	r3, #0
 80046f2:	61fb      	str	r3, [r7, #28]
 80046f4:	4b6f      	ldr	r3, [pc, #444]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046f8:	4a6e      	ldr	r2, [pc, #440]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046fa:	f043 0302 	orr.w	r3, r3, #2
 80046fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8004700:	4b6c      	ldr	r3, [pc, #432]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004702:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004704:	f003 0302 	and.w	r3, r3, #2
 8004708:	61fb      	str	r3, [r7, #28]
 800470a:	69fb      	ldr	r3, [r7, #28]
 800470c:	2300      	movs	r3, #0
 800470e:	61bb      	str	r3, [r7, #24]
 8004710:	4b68      	ldr	r3, [pc, #416]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004714:	4a67      	ldr	r2, [pc, #412]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004716:	f043 0301 	orr.w	r3, r3, #1
 800471a:	6313      	str	r3, [r2, #48]	@ 0x30
 800471c:	4b65      	ldr	r3, [pc, #404]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800471e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004720:	f003 0301 	and.w	r3, r3, #1
 8004724:	61bb      	str	r3, [r7, #24]
 8004726:	69bb      	ldr	r3, [r7, #24]
 8004728:	2380      	movs	r3, #128	@ 0x80
 800472a:	627b      	str	r3, [r7, #36]	@ 0x24
 800472c:	2302      	movs	r3, #2
 800472e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004730:	2300      	movs	r3, #0
 8004732:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004734:	2303      	movs	r3, #3
 8004736:	633b      	str	r3, [r7, #48]	@ 0x30
 8004738:	2307      	movs	r3, #7
 800473a:	637b      	str	r3, [r7, #52]	@ 0x34
 800473c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004740:	4619      	mov	r1, r3
 8004742:	485d      	ldr	r0, [pc, #372]	@ (80048b8 <HAL_UART_MspInit+0x208>)
 8004744:	f008 fabc 	bl	800ccc0 <HAL_GPIO_Init>
 8004748:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800474c:	627b      	str	r3, [r7, #36]	@ 0x24
 800474e:	2302      	movs	r3, #2
 8004750:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004752:	2300      	movs	r3, #0
 8004754:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004756:	2303      	movs	r3, #3
 8004758:	633b      	str	r3, [r7, #48]	@ 0x30
 800475a:	2307      	movs	r3, #7
 800475c:	637b      	str	r3, [r7, #52]	@ 0x34
 800475e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004762:	4619      	mov	r1, r3
 8004764:	4855      	ldr	r0, [pc, #340]	@ (80048bc <HAL_UART_MspInit+0x20c>)
 8004766:	f008 faab 	bl	800ccc0 <HAL_GPIO_Init>
 800476a:	4b55      	ldr	r3, [pc, #340]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800476c:	4a55      	ldr	r2, [pc, #340]	@ (80048c4 <HAL_UART_MspInit+0x214>)
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	4b53      	ldr	r3, [pc, #332]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004772:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	4b51      	ldr	r3, [pc, #324]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800477a:	2200      	movs	r2, #0
 800477c:	609a      	str	r2, [r3, #8]
 800477e:	4b50      	ldr	r3, [pc, #320]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004780:	2200      	movs	r2, #0
 8004782:	60da      	str	r2, [r3, #12]
 8004784:	4b4e      	ldr	r3, [pc, #312]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004786:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800478a:	611a      	str	r2, [r3, #16]
 800478c:	4b4c      	ldr	r3, [pc, #304]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800478e:	2200      	movs	r2, #0
 8004790:	615a      	str	r2, [r3, #20]
 8004792:	4b4b      	ldr	r3, [pc, #300]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004794:	2200      	movs	r2, #0
 8004796:	619a      	str	r2, [r3, #24]
 8004798:	4b49      	ldr	r3, [pc, #292]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800479a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800479e:	61da      	str	r2, [r3, #28]
 80047a0:	4b47      	ldr	r3, [pc, #284]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a2:	2200      	movs	r2, #0
 80047a4:	621a      	str	r2, [r3, #32]
 80047a6:	4b46      	ldr	r3, [pc, #280]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a8:	2200      	movs	r2, #0
 80047aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80047ac:	4844      	ldr	r0, [pc, #272]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047ae:	f007 fe79 	bl	800c4a4 <HAL_DMA_Init>
 80047b2:	4603      	mov	r3, r0
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d001      	beq.n	80047bc <HAL_UART_MspInit+0x10c>
 80047b8:	f7ff f81e 	bl	80037f8 <Error_Handler>
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	4a40      	ldr	r2, [pc, #256]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c0:	639a      	str	r2, [r3, #56]	@ 0x38
 80047c2:	4a3f      	ldr	r2, [pc, #252]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6393      	str	r3, [r2, #56]	@ 0x38
 80047c8:	2200      	movs	r2, #0
 80047ca:	2105      	movs	r1, #5
 80047cc:	2025      	movs	r0, #37	@ 0x25
 80047ce:	f007 fe31 	bl	800c434 <HAL_NVIC_SetPriority>
 80047d2:	2025      	movs	r0, #37	@ 0x25
 80047d4:	f007 fe4a 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80047d8:	e116      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a3a      	ldr	r2, [pc, #232]	@ (80048c8 <HAL_UART_MspInit+0x218>)
 80047e0:	4293      	cmp	r3, r2
 80047e2:	d179      	bne.n	80048d8 <HAL_UART_MspInit+0x228>
 80047e4:	2300      	movs	r3, #0
 80047e6:	617b      	str	r3, [r7, #20]
 80047e8:	4b32      	ldr	r3, [pc, #200]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047ec:	4a31      	ldr	r2, [pc, #196]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ee:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80047f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80047f4:	4b2f      	ldr	r3, [pc, #188]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047f8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80047fc:	617b      	str	r3, [r7, #20]
 80047fe:	697b      	ldr	r3, [r7, #20]
 8004800:	2300      	movs	r3, #0
 8004802:	613b      	str	r3, [r7, #16]
 8004804:	4b2b      	ldr	r3, [pc, #172]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004806:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004808:	4a2a      	ldr	r2, [pc, #168]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800480a:	f043 0304 	orr.w	r3, r3, #4
 800480e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004810:	4b28      	ldr	r3, [pc, #160]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004812:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004814:	f003 0304 	and.w	r3, r3, #4
 8004818:	613b      	str	r3, [r7, #16]
 800481a:	693b      	ldr	r3, [r7, #16]
 800481c:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004820:	627b      	str	r3, [r7, #36]	@ 0x24
 8004822:	2302      	movs	r3, #2
 8004824:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004826:	2300      	movs	r3, #0
 8004828:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800482a:	2303      	movs	r3, #3
 800482c:	633b      	str	r3, [r7, #48]	@ 0x30
 800482e:	2307      	movs	r3, #7
 8004830:	637b      	str	r3, [r7, #52]	@ 0x34
 8004832:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004836:	4619      	mov	r1, r3
 8004838:	4824      	ldr	r0, [pc, #144]	@ (80048cc <HAL_UART_MspInit+0x21c>)
 800483a:	f008 fa41 	bl	800ccc0 <HAL_GPIO_Init>
 800483e:	4b24      	ldr	r3, [pc, #144]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004840:	4a24      	ldr	r2, [pc, #144]	@ (80048d4 <HAL_UART_MspInit+0x224>)
 8004842:	601a      	str	r2, [r3, #0]
 8004844:	4b22      	ldr	r3, [pc, #136]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004846:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800484a:	605a      	str	r2, [r3, #4]
 800484c:	4b20      	ldr	r3, [pc, #128]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800484e:	2200      	movs	r2, #0
 8004850:	609a      	str	r2, [r3, #8]
 8004852:	4b1f      	ldr	r3, [pc, #124]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004854:	2200      	movs	r2, #0
 8004856:	60da      	str	r2, [r3, #12]
 8004858:	4b1d      	ldr	r3, [pc, #116]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800485a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800485e:	611a      	str	r2, [r3, #16]
 8004860:	4b1b      	ldr	r3, [pc, #108]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004862:	2200      	movs	r2, #0
 8004864:	615a      	str	r2, [r3, #20]
 8004866:	4b1a      	ldr	r3, [pc, #104]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004868:	2200      	movs	r2, #0
 800486a:	619a      	str	r2, [r3, #24]
 800486c:	4b18      	ldr	r3, [pc, #96]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800486e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004872:	61da      	str	r2, [r3, #28]
 8004874:	4b16      	ldr	r3, [pc, #88]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004876:	2200      	movs	r2, #0
 8004878:	621a      	str	r2, [r3, #32]
 800487a:	4b15      	ldr	r3, [pc, #84]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800487c:	2200      	movs	r2, #0
 800487e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004880:	4813      	ldr	r0, [pc, #76]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004882:	f007 fe0f 	bl	800c4a4 <HAL_DMA_Init>
 8004886:	4603      	mov	r3, r0
 8004888:	2b00      	cmp	r3, #0
 800488a:	d001      	beq.n	8004890 <HAL_UART_MspInit+0x1e0>
 800488c:	f7fe ffb4 	bl	80037f8 <Error_Handler>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	4a0f      	ldr	r2, [pc, #60]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004894:	639a      	str	r2, [r3, #56]	@ 0x38
 8004896:	4a0e      	ldr	r2, [pc, #56]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	6393      	str	r3, [r2, #56]	@ 0x38
 800489c:	2200      	movs	r2, #0
 800489e:	2105      	movs	r1, #5
 80048a0:	2027      	movs	r0, #39	@ 0x27
 80048a2:	f007 fdc7 	bl	800c434 <HAL_NVIC_SetPriority>
 80048a6:	2027      	movs	r0, #39	@ 0x27
 80048a8:	f007 fde0 	bl	800c46c <HAL_NVIC_EnableIRQ>
 80048ac:	e0ac      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80048ae:	bf00      	nop
 80048b0:	40011000 	.word	0x40011000
 80048b4:	40023800 	.word	0x40023800
 80048b8:	40020400 	.word	0x40020400
 80048bc:	40020000 	.word	0x40020000
 80048c0:	20001cb4 	.word	0x20001cb4
 80048c4:	40026488 	.word	0x40026488
 80048c8:	40004800 	.word	0x40004800
 80048cc:	40020800 	.word	0x40020800
 80048d0:	20001d14 	.word	0x20001d14
 80048d4:	40026028 	.word	0x40026028
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	4a4c      	ldr	r2, [pc, #304]	@ (8004a10 <HAL_UART_MspInit+0x360>)
 80048de:	4293      	cmp	r3, r2
 80048e0:	f040 8092 	bne.w	8004a08 <HAL_UART_MspInit+0x358>
 80048e4:	2300      	movs	r3, #0
 80048e6:	60fb      	str	r3, [r7, #12]
 80048e8:	4b4a      	ldr	r3, [pc, #296]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048ec:	4a49      	ldr	r2, [pc, #292]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ee:	f043 0320 	orr.w	r3, r3, #32
 80048f2:	6453      	str	r3, [r2, #68]	@ 0x44
 80048f4:	4b47      	ldr	r3, [pc, #284]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048f8:	f003 0320 	and.w	r3, r3, #32
 80048fc:	60fb      	str	r3, [r7, #12]
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	2300      	movs	r3, #0
 8004902:	60bb      	str	r3, [r7, #8]
 8004904:	4b43      	ldr	r3, [pc, #268]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004906:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004908:	4a42      	ldr	r2, [pc, #264]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 800490a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800490e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004910:	4b40      	ldr	r3, [pc, #256]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004912:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004914:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004918:	60bb      	str	r3, [r7, #8]
 800491a:	68bb      	ldr	r3, [r7, #8]
 800491c:	f44f 4384 	mov.w	r3, #16896	@ 0x4200
 8004920:	627b      	str	r3, [r7, #36]	@ 0x24
 8004922:	2302      	movs	r3, #2
 8004924:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004926:	2300      	movs	r3, #0
 8004928:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800492a:	2303      	movs	r3, #3
 800492c:	633b      	str	r3, [r7, #48]	@ 0x30
 800492e:	2308      	movs	r3, #8
 8004930:	637b      	str	r3, [r7, #52]	@ 0x34
 8004932:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004936:	4619      	mov	r1, r3
 8004938:	4837      	ldr	r0, [pc, #220]	@ (8004a18 <HAL_UART_MspInit+0x368>)
 800493a:	f008 f9c1 	bl	800ccc0 <HAL_GPIO_Init>
 800493e:	4b37      	ldr	r3, [pc, #220]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004940:	4a37      	ldr	r2, [pc, #220]	@ (8004a20 <HAL_UART_MspInit+0x370>)
 8004942:	601a      	str	r2, [r3, #0]
 8004944:	4b35      	ldr	r3, [pc, #212]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004946:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 800494a:	605a      	str	r2, [r3, #4]
 800494c:	4b33      	ldr	r3, [pc, #204]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800494e:	2200      	movs	r2, #0
 8004950:	609a      	str	r2, [r3, #8]
 8004952:	4b32      	ldr	r3, [pc, #200]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004954:	2200      	movs	r2, #0
 8004956:	60da      	str	r2, [r3, #12]
 8004958:	4b30      	ldr	r3, [pc, #192]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800495a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800495e:	611a      	str	r2, [r3, #16]
 8004960:	4b2e      	ldr	r3, [pc, #184]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004962:	2200      	movs	r2, #0
 8004964:	615a      	str	r2, [r3, #20]
 8004966:	4b2d      	ldr	r3, [pc, #180]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004968:	2200      	movs	r2, #0
 800496a:	619a      	str	r2, [r3, #24]
 800496c:	4b2b      	ldr	r3, [pc, #172]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800496e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004972:	61da      	str	r2, [r3, #28]
 8004974:	4b29      	ldr	r3, [pc, #164]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004976:	2200      	movs	r2, #0
 8004978:	621a      	str	r2, [r3, #32]
 800497a:	4b28      	ldr	r3, [pc, #160]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800497c:	2200      	movs	r2, #0
 800497e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004980:	4826      	ldr	r0, [pc, #152]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004982:	f007 fd8f 	bl	800c4a4 <HAL_DMA_Init>
 8004986:	4603      	mov	r3, r0
 8004988:	2b00      	cmp	r3, #0
 800498a:	d001      	beq.n	8004990 <HAL_UART_MspInit+0x2e0>
 800498c:	f7fe ff34 	bl	80037f8 <Error_Handler>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	4a22      	ldr	r2, [pc, #136]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004994:	639a      	str	r2, [r3, #56]	@ 0x38
 8004996:	4a21      	ldr	r2, [pc, #132]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6393      	str	r3, [r2, #56]	@ 0x38
 800499c:	4b21      	ldr	r3, [pc, #132]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 800499e:	4a22      	ldr	r2, [pc, #136]	@ (8004a28 <HAL_UART_MspInit+0x378>)
 80049a0:	601a      	str	r2, [r3, #0]
 80049a2:	4b20      	ldr	r3, [pc, #128]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049a4:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 80049a8:	605a      	str	r2, [r3, #4]
 80049aa:	4b1e      	ldr	r3, [pc, #120]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049ac:	2240      	movs	r2, #64	@ 0x40
 80049ae:	609a      	str	r2, [r3, #8]
 80049b0:	4b1c      	ldr	r3, [pc, #112]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b2:	2200      	movs	r2, #0
 80049b4:	60da      	str	r2, [r3, #12]
 80049b6:	4b1b      	ldr	r3, [pc, #108]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80049bc:	611a      	str	r2, [r3, #16]
 80049be:	4b19      	ldr	r3, [pc, #100]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c0:	2200      	movs	r2, #0
 80049c2:	615a      	str	r2, [r3, #20]
 80049c4:	4b17      	ldr	r3, [pc, #92]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c6:	2200      	movs	r2, #0
 80049c8:	619a      	str	r2, [r3, #24]
 80049ca:	4b16      	ldr	r3, [pc, #88]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049cc:	2200      	movs	r2, #0
 80049ce:	61da      	str	r2, [r3, #28]
 80049d0:	4b14      	ldr	r3, [pc, #80]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d2:	2200      	movs	r2, #0
 80049d4:	621a      	str	r2, [r3, #32]
 80049d6:	4b13      	ldr	r3, [pc, #76]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d8:	2200      	movs	r2, #0
 80049da:	625a      	str	r2, [r3, #36]	@ 0x24
 80049dc:	4811      	ldr	r0, [pc, #68]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049de:	f007 fd61 	bl	800c4a4 <HAL_DMA_Init>
 80049e2:	4603      	mov	r3, r0
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d001      	beq.n	80049ec <HAL_UART_MspInit+0x33c>
 80049e8:	f7fe ff06 	bl	80037f8 <Error_Handler>
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	4a0d      	ldr	r2, [pc, #52]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80049f2:	4a0c      	ldr	r2, [pc, #48]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	6393      	str	r3, [r2, #56]	@ 0x38
 80049f8:	2200      	movs	r2, #0
 80049fa:	2105      	movs	r1, #5
 80049fc:	2047      	movs	r0, #71	@ 0x47
 80049fe:	f007 fd19 	bl	800c434 <HAL_NVIC_SetPriority>
 8004a02:	2047      	movs	r0, #71	@ 0x47
 8004a04:	f007 fd32 	bl	800c46c <HAL_NVIC_EnableIRQ>
 8004a08:	bf00      	nop
 8004a0a:	3738      	adds	r7, #56	@ 0x38
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}
 8004a10:	40011400 	.word	0x40011400
 8004a14:	40023800 	.word	0x40023800
 8004a18:	40021800 	.word	0x40021800
 8004a1c:	20001d74 	.word	0x20001d74
 8004a20:	40026428 	.word	0x40026428
 8004a24:	20001dd4 	.word	0x20001dd4
 8004a28:	400264a0 	.word	0x400264a0

08004a2c <Reset_Handler>:
 8004a2c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8004a64 <LoopFillZerobss+0x14>
 8004a30:	2100      	movs	r1, #0
 8004a32:	e003      	b.n	8004a3c <LoopCopyDataInit>

08004a34 <CopyDataInit>:
 8004a34:	4b0c      	ldr	r3, [pc, #48]	@ (8004a68 <LoopFillZerobss+0x18>)
 8004a36:	585b      	ldr	r3, [r3, r1]
 8004a38:	5043      	str	r3, [r0, r1]
 8004a3a:	3104      	adds	r1, #4

08004a3c <LoopCopyDataInit>:
 8004a3c:	480b      	ldr	r0, [pc, #44]	@ (8004a6c <LoopFillZerobss+0x1c>)
 8004a3e:	4b0c      	ldr	r3, [pc, #48]	@ (8004a70 <LoopFillZerobss+0x20>)
 8004a40:	1842      	adds	r2, r0, r1
 8004a42:	429a      	cmp	r2, r3
 8004a44:	d3f6      	bcc.n	8004a34 <CopyDataInit>
 8004a46:	4a0b      	ldr	r2, [pc, #44]	@ (8004a74 <LoopFillZerobss+0x24>)
 8004a48:	e002      	b.n	8004a50 <LoopFillZerobss>

08004a4a <FillZerobss>:
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	f842 3b04 	str.w	r3, [r2], #4

08004a50 <LoopFillZerobss>:
 8004a50:	4b09      	ldr	r3, [pc, #36]	@ (8004a78 <LoopFillZerobss+0x28>)
 8004a52:	429a      	cmp	r2, r3
 8004a54:	d3f9      	bcc.n	8004a4a <FillZerobss>
 8004a56:	f7ff fa77 	bl	8003f48 <SystemInit>
 8004a5a:	f016 fa8b 	bl	801af74 <__libc_init_array>
 8004a5e:	f7fe fe1f 	bl	80036a0 <main>
 8004a62:	4770      	bx	lr
 8004a64:	20020000 	.word	0x20020000
 8004a68:	08021c1c 	.word	0x08021c1c
 8004a6c:	20000000 	.word	0x20000000
 8004a70:	200007d8 	.word	0x200007d8
 8004a74:	200007d8 	.word	0x200007d8
 8004a78:	2000d284 	.word	0x2000d284

08004a7c <ADC_IRQHandler>:
 8004a7c:	e7fe      	b.n	8004a7c <ADC_IRQHandler>

08004a7e <PID_Init>:
#include "typedefs.h"




void PID_Init(PID *pid, double kp, double ki, double kd, double min_output, double max_output) {
 8004a7e:	b480      	push	{r7}
 8004a80:	b08d      	sub	sp, #52	@ 0x34
 8004a82:	af00      	add	r7, sp, #0
 8004a84:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004a86:	ed87 0b08 	vstr	d0, [r7, #32]
 8004a8a:	ed87 1b06 	vstr	d1, [r7, #24]
 8004a8e:	ed87 2b04 	vstr	d2, [r7, #16]
 8004a92:	ed87 3b02 	vstr	d3, [r7, #8]
 8004a96:	ed87 4b00 	vstr	d4, [r7]
    pid->kp = kp;
 8004a9a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004a9c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004aa0:	e9c1 2300 	strd	r2, r3, [r1]
    pid->ki = ki;
 8004aa4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aa6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004aaa:	e9c1 2302 	strd	r2, r3, [r1, #8]
    pid->kd = kd;
 8004aae:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ab0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004ab4:	e9c1 2304 	strd	r2, r3, [r1, #16]
    pid->prev_error = 0;
 8004ab8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aba:	f04f 0200 	mov.w	r2, #0
 8004abe:	f04f 0300 	mov.w	r3, #0
 8004ac2:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->integral = 0;
 8004ac6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ac8:	f04f 0200 	mov.w	r2, #0
 8004acc:	f04f 0300 	mov.w	r3, #0
 8004ad0:	e9c1 2308 	strd	r2, r3, [r1, #32]
    pid->max_output = max_output;
 8004ad4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ad6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004ada:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    pid->min_output = min_output;
 8004ade:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ae0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004ae4:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
}
 8004ae8:	bf00      	nop
 8004aea:	3734      	adds	r7, #52	@ 0x34
 8004aec:	46bd      	mov	sp, r7
 8004aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af2:	4770      	bx	lr

08004af4 <PID_Compute>:

double PID_Compute(PID *pid, double setpoint, double measured_value, double dt, double deadzone) {
 8004af4:	b5b0      	push	{r4, r5, r7, lr}
 8004af6:	b090      	sub	sp, #64	@ 0x40
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	6278      	str	r0, [r7, #36]	@ 0x24
 8004afc:	ed87 0b06 	vstr	d0, [r7, #24]
 8004b00:	ed87 1b04 	vstr	d1, [r7, #16]
 8004b04:	ed87 2b02 	vstr	d2, [r7, #8]
 8004b08:	ed87 3b00 	vstr	d3, [r7]
    double error = setpoint - measured_value;
 8004b0c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004b10:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004b14:	f7fb fbb8 	bl	8000288 <__aeabi_dsub>
 8004b18:	4602      	mov	r2, r0
 8004b1a:	460b      	mov	r3, r1
 8004b1c:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    if (error < deadzone && error > -deadzone ){
 8004b20:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004b24:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b28:	f7fb ffd8 	bl	8000adc <__aeabi_dcmplt>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d012      	beq.n	8004b58 <PID_Compute+0x64>
 8004b32:	683c      	ldr	r4, [r7, #0]
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 8004b3a:	4622      	mov	r2, r4
 8004b3c:	462b      	mov	r3, r5
 8004b3e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b42:	f7fb ffe9 	bl	8000b18 <__aeabi_dcmpgt>
 8004b46:	4603      	mov	r3, r0
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	d005      	beq.n	8004b58 <PID_Compute+0x64>
    	error = 0.0;
 8004b4c:	f04f 0200 	mov.w	r2, #0
 8004b50:	f04f 0300 	mov.w	r3, #0
 8004b54:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    }
    pid->integral += error * dt;
 8004b58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b5a:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 8004b5e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b62:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b66:	f7fb fd47 	bl	80005f8 <__aeabi_dmul>
 8004b6a:	4602      	mov	r2, r0
 8004b6c:	460b      	mov	r3, r1
 8004b6e:	4620      	mov	r0, r4
 8004b70:	4629      	mov	r1, r5
 8004b72:	f7fb fb8b 	bl	800028c <__adddf3>
 8004b76:	4602      	mov	r2, r0
 8004b78:	460b      	mov	r3, r1
 8004b7a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004b7c:	e9c1 2308 	strd	r2, r3, [r1, #32]
    double derivative = (error - pid->prev_error) / dt;
 8004b80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b82:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004b86:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b8a:	f7fb fb7d 	bl	8000288 <__aeabi_dsub>
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	4610      	mov	r0, r2
 8004b94:	4619      	mov	r1, r3
 8004b96:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b9a:	f7fb fe57 	bl	800084c <__aeabi_ddiv>
 8004b9e:	4602      	mov	r2, r0
 8004ba0:	460b      	mov	r3, r1
 8004ba2:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
    double output = pid->kp * error + pid->ki * pid->integral + pid->kd * derivative;
 8004ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ba8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004bac:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004bb0:	f7fb fd22 	bl	80005f8 <__aeabi_dmul>
 8004bb4:	4602      	mov	r2, r0
 8004bb6:	460b      	mov	r3, r1
 8004bb8:	4614      	mov	r4, r2
 8004bba:	461d      	mov	r5, r3
 8004bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bbe:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8004bc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bc4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004bc8:	f7fb fd16 	bl	80005f8 <__aeabi_dmul>
 8004bcc:	4602      	mov	r2, r0
 8004bce:	460b      	mov	r3, r1
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	4629      	mov	r1, r5
 8004bd4:	f7fb fb5a 	bl	800028c <__adddf3>
 8004bd8:	4602      	mov	r2, r0
 8004bda:	460b      	mov	r3, r1
 8004bdc:	4614      	mov	r4, r2
 8004bde:	461d      	mov	r5, r3
 8004be0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004be2:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004be6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004bea:	f7fb fd05 	bl	80005f8 <__aeabi_dmul>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	4629      	mov	r1, r5
 8004bf6:	f7fb fb49 	bl	800028c <__adddf3>
 8004bfa:	4602      	mov	r2, r0
 8004bfc:	460b      	mov	r3, r1
 8004bfe:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30

    // Clamp the output to the specified max and min limits
    if (output > pid->max_output) {
 8004c02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c04:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c08:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c0c:	f7fb ff84 	bl	8000b18 <__aeabi_dcmpgt>
 8004c10:	4603      	mov	r3, r0
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d005      	beq.n	8004c22 <PID_Compute+0x12e>
        output = pid->max_output;
 8004c16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c18:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c1c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8004c20:	e00e      	b.n	8004c40 <PID_Compute+0x14c>
    } else if (output < pid->min_output) {
 8004c22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c24:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c28:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c2c:	f7fb ff56 	bl	8000adc <__aeabi_dcmplt>
 8004c30:	4603      	mov	r3, r0
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d004      	beq.n	8004c40 <PID_Compute+0x14c>
        output = pid->min_output;
 8004c36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c38:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c3c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
    }

    pid->prev_error = error;
 8004c40:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c42:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004c46:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->output =  output;
 8004c4a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c4c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004c50:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
    return output;
 8004c54:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004c58:	ec43 2b17 	vmov	d7, r2, r3
}
 8004c5c:	eeb0 0a47 	vmov.f32	s0, s14
 8004c60:	eef0 0a67 	vmov.f32	s1, s15
 8004c64:	3740      	adds	r7, #64	@ 0x40
 8004c66:	46bd      	mov	sp, r7
 8004c68:	bdb0      	pop	{r4, r5, r7, pc}
 8004c6a:	0000      	movs	r0, r0
 8004c6c:	0000      	movs	r0, r0
	...

08004c70 <buzzing_task>:
 8004c70:	b580      	push	{r7, lr}
 8004c72:	b086      	sub	sp, #24
 8004c74:	af00      	add	r7, sp, #0
 8004c76:	6078      	str	r0, [r7, #4]
 8004c78:	4bb5      	ldr	r3, [pc, #724]	@ (8004f50 <buzzing_task+0x2e0>)
 8004c7a:	613b      	str	r3, [r7, #16]
 8004c7c:	4bb5      	ldr	r3, [pc, #724]	@ (8004f54 <buzzing_task+0x2e4>)
 8004c7e:	681b      	ldr	r3, [r3, #0]
 8004c80:	f107 010d 	add.w	r1, r7, #13
 8004c84:	f04f 32ff 	mov.w	r2, #4294967295
 8004c88:	4618      	mov	r0, r3
 8004c8a:	f012 fef1 	bl	8017a70 <xQueueReceive>
 8004c8e:	7b7b      	ldrb	r3, [r7, #13]
 8004c90:	2b0d      	cmp	r3, #13
 8004c92:	f200 814c 	bhi.w	8004f2e <buzzing_task+0x2be>
 8004c96:	a201      	add	r2, pc, #4	@ (adr r2, 8004c9c <buzzing_task+0x2c>)
 8004c98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004c9c:	08004cd5 	.word	0x08004cd5
 8004ca0:	08004d7b 	.word	0x08004d7b
 8004ca4:	08004dad 	.word	0x08004dad
 8004ca8:	08004e31 	.word	0x08004e31
 8004cac:	08004dff 	.word	0x08004dff
 8004cb0:	08004e69 	.word	0x08004e69
 8004cb4:	08004ec3 	.word	0x08004ec3
 8004cb8:	08004ed3 	.word	0x08004ed3
 8004cbc:	08004e95 	.word	0x08004e95
 8004cc0:	08004ea5 	.word	0x08004ea5
 8004cc4:	08004eb5 	.word	0x08004eb5
 8004cc8:	08004ee3 	.word	0x08004ee3
 8004ccc:	08004f0f 	.word	0x08004f0f
 8004cd0:	08004f1f 	.word	0x08004f1f
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	82fb      	strh	r3, [r7, #22]
 8004cd8:	e04b      	b.n	8004d72 <buzzing_task+0x102>
 8004cda:	f013 fcd7 	bl	801868c <xTaskGetTickCount>
 8004cde:	4603      	mov	r3, r0
 8004ce0:	60bb      	str	r3, [r7, #8]
 8004ce2:	8afb      	ldrh	r3, [r7, #22]
 8004ce4:	4a9c      	ldr	r2, [pc, #624]	@ (8004f58 <buzzing_task+0x2e8>)
 8004ce6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8004cea:	4618      	mov	r0, r3
 8004cec:	f7fc fa3e 	bl	800116c <buzzer>
 8004cf0:	8afb      	ldrh	r3, [r7, #22]
 8004cf2:	4a9a      	ldr	r2, [pc, #616]	@ (8004f5c <buzzing_task+0x2ec>)
 8004cf4:	009b      	lsls	r3, r3, #2
 8004cf6:	4413      	add	r3, r2
 8004cf8:	ed93 7a00 	vldr	s14, [r3]
 8004cfc:	edd7 7a04 	vldr	s15, [r7, #16]
 8004d00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004d04:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004d08:	ee17 3a90 	vmov	r3, s15
 8004d0c:	81fb      	strh	r3, [r7, #14]
 8004d0e:	89fb      	ldrh	r3, [r7, #14]
 8004d10:	4618      	mov	r0, r3
 8004d12:	f7fb fc07 	bl	8000524 <__aeabi_i2d>
 8004d16:	a38a      	add	r3, pc, #552	@ (adr r3, 8004f40 <buzzing_task+0x2d0>)
 8004d18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d1c:	f7fb fc6c 	bl	80005f8 <__aeabi_dmul>
 8004d20:	4602      	mov	r2, r0
 8004d22:	460b      	mov	r3, r1
 8004d24:	4610      	mov	r0, r2
 8004d26:	4619      	mov	r1, r3
 8004d28:	f7fb ff3e 	bl	8000ba8 <__aeabi_d2uiz>
 8004d2c:	4602      	mov	r2, r0
 8004d2e:	f107 0308 	add.w	r3, r7, #8
 8004d32:	4611      	mov	r1, r2
 8004d34:	4618      	mov	r0, r3
 8004d36:	f013 fad5 	bl	80182e4 <vTaskDelayUntil>
 8004d3a:	2000      	movs	r0, #0
 8004d3c:	f7fc fa16 	bl	800116c <buzzer>
 8004d40:	89fb      	ldrh	r3, [r7, #14]
 8004d42:	4618      	mov	r0, r3
 8004d44:	f7fb fbee 	bl	8000524 <__aeabi_i2d>
 8004d48:	a37f      	add	r3, pc, #508	@ (adr r3, 8004f48 <buzzing_task+0x2d8>)
 8004d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d4e:	f7fb fc53 	bl	80005f8 <__aeabi_dmul>
 8004d52:	4602      	mov	r2, r0
 8004d54:	460b      	mov	r3, r1
 8004d56:	4610      	mov	r0, r2
 8004d58:	4619      	mov	r1, r3
 8004d5a:	f7fb ff25 	bl	8000ba8 <__aeabi_d2uiz>
 8004d5e:	4602      	mov	r2, r0
 8004d60:	f107 0308 	add.w	r3, r7, #8
 8004d64:	4611      	mov	r1, r2
 8004d66:	4618      	mov	r0, r3
 8004d68:	f013 fabc 	bl	80182e4 <vTaskDelayUntil>
 8004d6c:	8afb      	ldrh	r3, [r7, #22]
 8004d6e:	3301      	adds	r3, #1
 8004d70:	82fb      	strh	r3, [r7, #22]
 8004d72:	8afb      	ldrh	r3, [r7, #22]
 8004d74:	2b7c      	cmp	r3, #124	@ 0x7c
 8004d76:	d9b0      	bls.n	8004cda <buzzing_task+0x6a>
 8004d78:	e0da      	b.n	8004f30 <buzzing_task+0x2c0>
 8004d7a:	f013 fc87 	bl	801868c <xTaskGetTickCount>
 8004d7e:	4603      	mov	r3, r0
 8004d80:	60bb      	str	r3, [r7, #8]
 8004d82:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004d86:	f7fc f9f1 	bl	800116c <buzzer>
 8004d8a:	2064      	movs	r0, #100	@ 0x64
 8004d8c:	f013 fb2a 	bl	80183e4 <vTaskDelay>
 8004d90:	2000      	movs	r0, #0
 8004d92:	f7fc f9eb 	bl	800116c <buzzer>
 8004d96:	2032      	movs	r0, #50	@ 0x32
 8004d98:	f013 fb24 	bl	80183e4 <vTaskDelay>
 8004d9c:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004da0:	f7fc f9e4 	bl	800116c <buzzer>
 8004da4:	2064      	movs	r0, #100	@ 0x64
 8004da6:	f013 fb1d 	bl	80183e4 <vTaskDelay>
 8004daa:	e0c1      	b.n	8004f30 <buzzing_task+0x2c0>
 8004dac:	f013 fc6e 	bl	801868c <xTaskGetTickCount>
 8004db0:	4603      	mov	r3, r0
 8004db2:	60bb      	str	r3, [r7, #8]
 8004db4:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004db8:	f7fc f9d8 	bl	800116c <buzzer>
 8004dbc:	2064      	movs	r0, #100	@ 0x64
 8004dbe:	f013 fb11 	bl	80183e4 <vTaskDelay>
 8004dc2:	2000      	movs	r0, #0
 8004dc4:	f7fc f9d2 	bl	800116c <buzzer>
 8004dc8:	2032      	movs	r0, #50	@ 0x32
 8004dca:	f013 fb0b 	bl	80183e4 <vTaskDelay>
 8004dce:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004dd2:	f7fc f9cb 	bl	800116c <buzzer>
 8004dd6:	2064      	movs	r0, #100	@ 0x64
 8004dd8:	f013 fb04 	bl	80183e4 <vTaskDelay>
 8004ddc:	2000      	movs	r0, #0
 8004dde:	f7fc f9c5 	bl	800116c <buzzer>
 8004de2:	2032      	movs	r0, #50	@ 0x32
 8004de4:	f013 fafe 	bl	80183e4 <vTaskDelay>
 8004de8:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004dec:	f7fc f9be 	bl	800116c <buzzer>
 8004df0:	2064      	movs	r0, #100	@ 0x64
 8004df2:	f013 faf7 	bl	80183e4 <vTaskDelay>
 8004df6:	2000      	movs	r0, #0
 8004df8:	f7fc f9b8 	bl	800116c <buzzer>
 8004dfc:	e098      	b.n	8004f30 <buzzing_task+0x2c0>
 8004dfe:	f013 fc45 	bl	801868c <xTaskGetTickCount>
 8004e02:	4603      	mov	r3, r0
 8004e04:	60bb      	str	r3, [r7, #8]
 8004e06:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e0a:	f7fc f9af 	bl	800116c <buzzer>
 8004e0e:	2064      	movs	r0, #100	@ 0x64
 8004e10:	f013 fae8 	bl	80183e4 <vTaskDelay>
 8004e14:	2000      	movs	r0, #0
 8004e16:	f7fc f9a9 	bl	800116c <buzzer>
 8004e1a:	2032      	movs	r0, #50	@ 0x32
 8004e1c:	f013 fae2 	bl	80183e4 <vTaskDelay>
 8004e20:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e24:	f7fc f9a2 	bl	800116c <buzzer>
 8004e28:	2064      	movs	r0, #100	@ 0x64
 8004e2a:	f013 fadb 	bl	80183e4 <vTaskDelay>
 8004e2e:	e07f      	b.n	8004f30 <buzzing_task+0x2c0>
 8004e30:	f013 fc2c 	bl	801868c <xTaskGetTickCount>
 8004e34:	4603      	mov	r3, r0
 8004e36:	60bb      	str	r3, [r7, #8]
 8004e38:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e3c:	f7fc f996 	bl	800116c <buzzer>
 8004e40:	2064      	movs	r0, #100	@ 0x64
 8004e42:	f013 facf 	bl	80183e4 <vTaskDelay>
 8004e46:	2000      	movs	r0, #0
 8004e48:	f7fc f990 	bl	800116c <buzzer>
 8004e4c:	2032      	movs	r0, #50	@ 0x32
 8004e4e:	f013 fac9 	bl	80183e4 <vTaskDelay>
 8004e52:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e56:	f7fc f989 	bl	800116c <buzzer>
 8004e5a:	2064      	movs	r0, #100	@ 0x64
 8004e5c:	f013 fac2 	bl	80183e4 <vTaskDelay>
 8004e60:	2064      	movs	r0, #100	@ 0x64
 8004e62:	f7fc f983 	bl	800116c <buzzer>
 8004e66:	e063      	b.n	8004f30 <buzzing_task+0x2c0>
 8004e68:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004e6c:	f7fc f97e 	bl	800116c <buzzer>
 8004e70:	2064      	movs	r0, #100	@ 0x64
 8004e72:	f013 fab7 	bl	80183e4 <vTaskDelay>
 8004e76:	f44f 7025 	mov.w	r0, #660	@ 0x294
 8004e7a:	f7fc f977 	bl	800116c <buzzer>
 8004e7e:	2064      	movs	r0, #100	@ 0x64
 8004e80:	f013 fab0 	bl	80183e4 <vTaskDelay>
 8004e84:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004e88:	f7fc f970 	bl	800116c <buzzer>
 8004e8c:	2064      	movs	r0, #100	@ 0x64
 8004e8e:	f013 faa9 	bl	80183e4 <vTaskDelay>
 8004e92:	e04d      	b.n	8004f30 <buzzing_task+0x2c0>
 8004e94:	f44f 70b9 	mov.w	r0, #370	@ 0x172
 8004e98:	f7fc f968 	bl	800116c <buzzer>
 8004e9c:	2064      	movs	r0, #100	@ 0x64
 8004e9e:	f013 faa1 	bl	80183e4 <vTaskDelay>
 8004ea2:	e045      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ea4:	f640 1082 	movw	r0, #2434	@ 0x982
 8004ea8:	f7fc f960 	bl	800116c <buzzer>
 8004eac:	2064      	movs	r0, #100	@ 0x64
 8004eae:	f013 fa99 	bl	80183e4 <vTaskDelay>
 8004eb2:	e03d      	b.n	8004f30 <buzzing_task+0x2c0>
 8004eb4:	2000      	movs	r0, #0
 8004eb6:	f7fc f959 	bl	800116c <buzzer>
 8004eba:	2032      	movs	r0, #50	@ 0x32
 8004ebc:	f013 fa92 	bl	80183e4 <vTaskDelay>
 8004ec0:	e036      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ec2:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8004ec6:	f7fc f951 	bl	800116c <buzzer>
 8004eca:	2064      	movs	r0, #100	@ 0x64
 8004ecc:	f013 fa8a 	bl	80183e4 <vTaskDelay>
 8004ed0:	e02e      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ed2:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8004ed6:	f7fc f949 	bl	800116c <buzzer>
 8004eda:	2064      	movs	r0, #100	@ 0x64
 8004edc:	f013 fa82 	bl	80183e4 <vTaskDelay>
 8004ee0:	e026      	b.n	8004f30 <buzzing_task+0x2c0>
 8004ee2:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 8004ee6:	f7fc f941 	bl	800116c <buzzer>
 8004eea:	2032      	movs	r0, #50	@ 0x32
 8004eec:	f013 fa7a 	bl	80183e4 <vTaskDelay>
 8004ef0:	f240 4017 	movw	r0, #1047	@ 0x417
 8004ef4:	f7fc f93a 	bl	800116c <buzzer>
 8004ef8:	2032      	movs	r0, #50	@ 0x32
 8004efa:	f013 fa73 	bl	80183e4 <vTaskDelay>
 8004efe:	f240 4055 	movw	r0, #1109	@ 0x455
 8004f02:	f7fc f933 	bl	800116c <buzzer>
 8004f06:	2032      	movs	r0, #50	@ 0x32
 8004f08:	f013 fa6c 	bl	80183e4 <vTaskDelay>
 8004f0c:	e010      	b.n	8004f30 <buzzing_task+0x2c0>
 8004f0e:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 8004f12:	f7fc f92b 	bl	800116c <buzzer>
 8004f16:	2064      	movs	r0, #100	@ 0x64
 8004f18:	f013 fa64 	bl	80183e4 <vTaskDelay>
 8004f1c:	e008      	b.n	8004f30 <buzzing_task+0x2c0>
 8004f1e:	f240 4055 	movw	r0, #1109	@ 0x455
 8004f22:	f7fc f923 	bl	800116c <buzzer>
 8004f26:	2064      	movs	r0, #100	@ 0x64
 8004f28:	f013 fa5c 	bl	80183e4 <vTaskDelay>
 8004f2c:	e000      	b.n	8004f30 <buzzing_task+0x2c0>
 8004f2e:	bf00      	nop
 8004f30:	2000      	movs	r0, #0
 8004f32:	f7fc f91b 	bl	800116c <buzzer>
 8004f36:	2032      	movs	r0, #50	@ 0x32
 8004f38:	f013 fa54 	bl	80183e4 <vTaskDelay>
 8004f3c:	e69e      	b.n	8004c7c <buzzing_task+0xc>
 8004f3e:	bf00      	nop
 8004f40:	66666666 	.word	0x66666666
 8004f44:	3fee6666 	.word	0x3fee6666
 8004f48:	9999999a 	.word	0x9999999a
 8004f4c:	3fa99999 	.word	0x3fa99999
 8004f50:	42fa0000 	.word	0x42fa0000
 8004f54:	200037c4 	.word	0x200037c4
 8004f58:	0802133c 	.word	0x0802133c
 8004f5c:	08021438 	.word	0x08021438

08004f60 <can_ISR>:

/**
 * CAN ISR function, triggered upon RX_FIFO0_MSG_PENDING
 * converts the raw can data to the motor_data struct form as well
 */
void can_ISR(CAN_HandleTypeDef *hcan) {
 8004f60:	b580      	push	{r7, lr}
 8004f62:	b08c      	sub	sp, #48	@ 0x30
 8004f64:	af00      	add	r7, sp, #0
 8004f66:	6078      	str	r0, [r7, #4]

	CAN_RxHeaderTypeDef rx_msg_header;
	uint8_t rx_buffer[CAN_BUFFER_SIZE];
	//check which CAN bus received it
	//required because the 2 canbuses use seperate FIFOs for receive
	if (hcan->Instance == CAN1) {
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	4a1f      	ldr	r2, [pc, #124]	@ (8004fec <can_ISR+0x8c>)
 8004f6e:	4293      	cmp	r3, r2
 8004f70:	d118      	bne.n	8004fa4 <can_ISR+0x44>
		HAL_CAN_DeactivateNotification(hcan,
 8004f72:	210e      	movs	r1, #14
 8004f74:	6878      	ldr	r0, [r7, #4]
 8004f76:	f006 ff34 	bl	800bde2 <HAL_CAN_DeactivateNotification>
				CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL
						| CAN_IT_RX_FIFO0_OVERRUN);
		can1_get_msg(&hcan1, &rx_msg_header, rx_buffer);
 8004f7a:	f107 020c 	add.w	r2, r7, #12
 8004f7e:	f107 0314 	add.w	r3, r7, #20
 8004f82:	4619      	mov	r1, r3
 8004f84:	481a      	ldr	r0, [pc, #104]	@ (8004ff0 <can_ISR+0x90>)
 8004f86:	f7fc f937 	bl	80011f8 <can1_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId, rx_buffer);
 8004f8a:	697b      	ldr	r3, [r7, #20]
 8004f8c:	b29b      	uxth	r3, r3
 8004f8e:	f107 020c 	add.w	r2, r7, #12
 8004f92:	4619      	mov	r1, r3
 8004f94:	4817      	ldr	r0, [pc, #92]	@ (8004ff4 <can_ISR+0x94>)
 8004f96:	f000 f833 	bl	8005000 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8004f9a:	210e      	movs	r1, #14
 8004f9c:	6878      	ldr	r0, [r7, #4]
 8004f9e:	f006 fefa 	bl	800bd96 <HAL_CAN_ActivateNotification>
		can_get_msg(&hcan2, &rx_msg_header, rx_buffer);
		process_chassis_can_msg(rx_msg_header.StdId, rx_buffer);
		HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL	| CAN_IT_RX_FIFO0_OVERRUN);
	}
#endif
}
 8004fa2:	e01e      	b.n	8004fe2 <can_ISR+0x82>
	else if (hcan->Instance == CAN2) {
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4a13      	ldr	r2, [pc, #76]	@ (8004ff8 <can_ISR+0x98>)
 8004faa:	4293      	cmp	r3, r2
 8004fac:	d119      	bne.n	8004fe2 <can_ISR+0x82>
		HAL_CAN_DeactivateNotification(hcan,
 8004fae:	2170      	movs	r1, #112	@ 0x70
 8004fb0:	6878      	ldr	r0, [r7, #4]
 8004fb2:	f006 ff16 	bl	800bde2 <HAL_CAN_DeactivateNotification>
		can2_get_msg(&hcan2, &rx_msg_header, rx_buffer);
 8004fb6:	f107 020c 	add.w	r2, r7, #12
 8004fba:	f107 0314 	add.w	r3, r7, #20
 8004fbe:	4619      	mov	r1, r3
 8004fc0:	480e      	ldr	r0, [pc, #56]	@ (8004ffc <can_ISR+0x9c>)
 8004fc2:	f7fc f92a 	bl	800121a <can2_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId + 12, rx_buffer);
 8004fc6:	697b      	ldr	r3, [r7, #20]
 8004fc8:	b29b      	uxth	r3, r3
 8004fca:	330c      	adds	r3, #12
 8004fcc:	b29b      	uxth	r3, r3
 8004fce:	f107 020c 	add.w	r2, r7, #12
 8004fd2:	4619      	mov	r1, r3
 8004fd4:	4807      	ldr	r0, [pc, #28]	@ (8004ff4 <can_ISR+0x94>)
 8004fd6:	f000 f813 	bl	8005000 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8004fda:	2170      	movs	r1, #112	@ 0x70
 8004fdc:	6878      	ldr	r0, [r7, #4]
 8004fde:	f006 feda 	bl	800bd96 <HAL_CAN_ActivateNotification>
}
 8004fe2:	bf00      	nop
 8004fe4:	3730      	adds	r7, #48	@ 0x30
 8004fe6:	46bd      	mov	sp, r7
 8004fe8:	bd80      	pop	{r7, pc}
 8004fea:	bf00      	nop
 8004fec:	40006400 	.word	0x40006400
 8004ff0:	200008e4 	.word	0x200008e4
 8004ff4:	20001e48 	.word	0x20001e48
 8004ff8:	40006800 	.word	0x40006800
 8004ffc:	2000090c 	.word	0x2000090c

08005000 <convert_raw_can_data>:
 *
 * For GM6020 motors, it recenters the motor angle data and converts it to radians.
 */

void convert_raw_can_data(motor_data_t *can_motor_data, uint16_t motor_id,
		uint8_t *rx_buffer) {
 8005000:	b5b0      	push	{r4, r5, r7, lr}
 8005002:	b08c      	sub	sp, #48	@ 0x30
 8005004:	af00      	add	r7, sp, #0
 8005006:	60f8      	str	r0, [r7, #12]
 8005008:	460b      	mov	r3, r1
 800500a:	607a      	str	r2, [r7, #4]
 800500c:	817b      	strh	r3, [r7, #10]
	uint16_t idnum = motor_id - 0x201;
 800500e:	897b      	ldrh	r3, [r7, #10]
 8005010:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 8005014:	857b      	strh	r3, [r7, #42]	@ 0x2a

	//if idnum > 24, it's not a DJI motor. Add in a seperate processing function if other CAN devices are added
	if (idnum > 24) {
 8005016:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8005018:	2b18      	cmp	r3, #24
 800501a:	f200 81a5 	bhi.w	8005368 <convert_raw_can_data+0x368>
		return;
	}
	motor_data_t *curr_motor = &can_motor_data[idnum];
 800501e:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 8005020:	4613      	mov	r3, r2
 8005022:	011b      	lsls	r3, r3, #4
 8005024:	1a9b      	subs	r3, r3, r2
 8005026:	011b      	lsls	r3, r3, #4
 8005028:	461a      	mov	r2, r3
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	4413      	add	r3, r2
 800502e:	627b      	str	r3, [r7, #36]	@ 0x24
	//motor must be initialised in motor_config.c first
	if (curr_motor->motor_type > 0) {
 8005030:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005032:	789b      	ldrb	r3, [r3, #2]
 8005034:	2b00      	cmp	r3, #0
 8005036:	f000 8198 	beq.w	800536a <convert_raw_can_data+0x36a>
		//convert the raw data back into the respective values
		curr_motor->id = motor_id;
 800503a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800503c:	897a      	ldrh	r2, [r7, #10]
 800503e:	801a      	strh	r2, [r3, #0]
		curr_motor->raw_data.angle[1] = curr_motor->raw_data.angle[0];
 8005040:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005042:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 8005046:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005048:	80da      	strh	r2, [r3, #6]
		curr_motor->raw_data.angle[0] = (rx_buffer[0] << 8) | rx_buffer[1];
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	781b      	ldrb	r3, [r3, #0]
 800504e:	021b      	lsls	r3, r3, #8
 8005050:	b21a      	sxth	r2, r3
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	3301      	adds	r3, #1
 8005056:	781b      	ldrb	r3, [r3, #0]
 8005058:	b21b      	sxth	r3, r3
 800505a:	4313      	orrs	r3, r2
 800505c:	b21a      	sxth	r2, r3
 800505e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005060:	809a      	strh	r2, [r3, #4]
		int16_t temp_rpm = (rx_buffer[2] << 8) | rx_buffer[3];
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	3302      	adds	r3, #2
 8005066:	781b      	ldrb	r3, [r3, #0]
 8005068:	021b      	lsls	r3, r3, #8
 800506a:	b21a      	sxth	r2, r3
 800506c:	687b      	ldr	r3, [r7, #4]
 800506e:	3303      	adds	r3, #3
 8005070:	781b      	ldrb	r3, [r3, #0]
 8005072:	b21b      	sxth	r3, r3
 8005074:	4313      	orrs	r3, r2
 8005076:	847b      	strh	r3, [r7, #34]	@ 0x22
		curr_motor->raw_data.rpm = curr_motor->raw_data.rpm * SPEED_LPF
 8005078:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800507a:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 800507c:	811a      	strh	r2, [r3, #8]
				+ temp_rpm * (1 - SPEED_LPF);
		curr_motor->raw_data.torque =(rx_buffer[4] << 8) | rx_buffer[5];
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	3304      	adds	r3, #4
 8005082:	781b      	ldrb	r3, [r3, #0]
 8005084:	021b      	lsls	r3, r3, #8
 8005086:	b21a      	sxth	r2, r3
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	3305      	adds	r3, #5
 800508c:	781b      	ldrb	r3, [r3, #0]
 800508e:	b21b      	sxth	r3, r3
 8005090:	4313      	orrs	r3, r2
 8005092:	b21a      	sxth	r2, r3
 8005094:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005096:	815a      	strh	r2, [r3, #10]
		curr_motor->torque_data = ((double)curr_motor->raw_data.torque / 13000.0f)*1.5f;
 8005098:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800509a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800509e:	4618      	mov	r0, r3
 80050a0:	f7fb fa40 	bl	8000524 <__aeabi_i2d>
 80050a4:	a3bd      	add	r3, pc, #756	@ (adr r3, 800539c <convert_raw_can_data+0x39c>)
 80050a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80050aa:	f7fb fbcf 	bl	800084c <__aeabi_ddiv>
 80050ae:	4602      	mov	r2, r0
 80050b0:	460b      	mov	r3, r1
 80050b2:	4610      	mov	r0, r2
 80050b4:	4619      	mov	r1, r3
 80050b6:	f04f 0200 	mov.w	r2, #0
 80050ba:	4bb1      	ldr	r3, [pc, #708]	@ (8005380 <convert_raw_can_data+0x380>)
 80050bc:	f7fb fa9c 	bl	80005f8 <__aeabi_dmul>
 80050c0:	4602      	mov	r2, r0
 80050c2:	460b      	mov	r3, r1
 80050c4:	4610      	mov	r0, r2
 80050c6:	4619      	mov	r1, r3
 80050c8:	f7fb fd8e 	bl	8000be8 <__aeabi_d2f>
 80050cc:	4602      	mov	r2, r0
 80050ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050d0:	62da      	str	r2, [r3, #44]	@ 0x2c
		curr_motor->raw_data.temp = (rx_buffer[6]);
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	799a      	ldrb	r2, [r3, #6]
 80050d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050d8:	731a      	strb	r2, [r3, #12]
		curr_motor->last_time[1] = curr_motor->last_time[0];
 80050da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050dc:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
 80050e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050e2:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
		curr_motor->last_time[0] = get_microseconds();
 80050e6:	f7fd f86b 	bl	80021c0 <get_microseconds>
 80050ea:	4602      	mov	r2, r0
 80050ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050ee:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4

		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 80050f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050f4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80050f8:	461a      	mov	r2, r3
				- curr_motor->raw_data.angle[1]) / 8192;
 80050fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050fc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8005100:	1ad3      	subs	r3, r2, r3
		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 8005102:	ee07 3a90 	vmov	s15, r3
 8005106:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800510a:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8005384 <convert_raw_can_data+0x384>
 800510e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005112:	edc7 7a07 	vstr	s15, [r7, #28]
		float time_diff = (float) (curr_motor->last_time[0]
 8005116:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005118:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
				- curr_motor->last_time[1]) / (float) (TIMER_FREQ * 60);
 800511c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800511e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8005122:	1ad3      	subs	r3, r2, r3
		float time_diff = (float) (curr_motor->last_time[0]
 8005124:	ee07 3a90 	vmov	s15, r3
 8005128:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800512c:	eddf 6a96 	vldr	s13, [pc, #600]	@ 8005388 <convert_raw_can_data+0x388>
 8005130:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005134:	edc7 7a06 	vstr	s15, [r7, #24]
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 8005138:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800513a:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800513e:	4618      	mov	r0, r3
 8005140:	f7fb fa02 	bl	8000548 <__aeabi_f2d>
				* 0.95 + (rds_passed * time_diff * 0.05);
 8005144:	a38a      	add	r3, pc, #552	@ (adr r3, 8005370 <convert_raw_can_data+0x370>)
 8005146:	e9d3 2300 	ldrd	r2, r3, [r3]
 800514a:	f7fb fa55 	bl	80005f8 <__aeabi_dmul>
 800514e:	4602      	mov	r2, r0
 8005150:	460b      	mov	r3, r1
 8005152:	4614      	mov	r4, r2
 8005154:	461d      	mov	r5, r3
 8005156:	ed97 7a07 	vldr	s14, [r7, #28]
 800515a:	edd7 7a06 	vldr	s15, [r7, #24]
 800515e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005162:	ee17 0a90 	vmov	r0, s15
 8005166:	f7fb f9ef 	bl	8000548 <__aeabi_f2d>
 800516a:	a383      	add	r3, pc, #524	@ (adr r3, 8005378 <convert_raw_can_data+0x378>)
 800516c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005170:	f7fb fa42 	bl	80005f8 <__aeabi_dmul>
 8005174:	4602      	mov	r2, r0
 8005176:	460b      	mov	r3, r1
 8005178:	4620      	mov	r0, r4
 800517a:	4629      	mov	r1, r5
 800517c:	f7fb f886 	bl	800028c <__adddf3>
 8005180:	4602      	mov	r2, r0
 8005182:	460b      	mov	r3, r1
 8005184:	4610      	mov	r0, r2
 8005186:	4619      	mov	r1, r3
 8005188:	f7fb fd2e 	bl	8000be8 <__aeabi_d2f>
 800518c:	4602      	mov	r2, r0
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 800518e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005190:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
		//process the angle data differently depending on the motor type to get radians in the
		//adj_angle value
		switch (curr_motor->motor_type) {
 8005194:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005196:	789b      	ldrb	r3, [r3, #2]
 8005198:	3b01      	subs	r3, #1
 800519a:	2b08      	cmp	r3, #8
 800519c:	d84d      	bhi.n	800523a <convert_raw_can_data+0x23a>
 800519e:	a201      	add	r2, pc, #4	@ (adr r2, 80051a4 <convert_raw_can_data+0x1a4>)
 80051a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80051a4:	080051c9 	.word	0x080051c9
 80051a8:	080051ef 	.word	0x080051ef
 80051ac:	080051ef 	.word	0x080051ef
 80051b0:	0800523b 	.word	0x0800523b
 80051b4:	0800523b 	.word	0x0800523b
 80051b8:	0800523b 	.word	0x0800523b
 80051bc:	08005215 	.word	0x08005215
 80051c0:	08005215 	.word	0x08005215
 80051c4:	08005215 	.word	0x08005215
		case TYPE_GM6020:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051ca:	1d18      	adds	r0, r3, #4
 80051cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051ce:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 80051d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051d4:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051d6:	461a      	mov	r2, r3
 80051d8:	f000 f922 	bl	8005420 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 80051dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051de:	1d1a      	adds	r2, r3, #4
 80051e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051e2:	3398      	adds	r3, #152	@ 0x98
 80051e4:	4619      	mov	r1, r3
 80051e6:	4610      	mov	r0, r2
 80051e8:	f000 f8dc 	bl	80053a4 <angle_offset>
			break;
 80051ec:	e026      	b.n	800523c <convert_raw_can_data+0x23c>
		case TYPE_M2006:
		case TYPE_M3508:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051f0:	1d18      	adds	r0, r3, #4
 80051f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051f4:	f103 0198 	add.w	r1, r3, #152	@ 0x98
								curr_motor->last_time);
 80051f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051fa:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 80051fc:	461a      	mov	r2, r3
 80051fe:	f000 f90f 	bl	8005420 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005202:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005204:	1d1a      	adds	r2, r3, #4
 8005206:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005208:	3398      	adds	r3, #152	@ 0x98
 800520a:	4619      	mov	r1, r3
 800520c:	4610      	mov	r0, r2
 800520e:	f000 f8c9 	bl	80053a4 <angle_offset>
			break;
 8005212:	e013      	b.n	800523c <convert_raw_can_data+0x23c>
//					curr_motor->last_time);
			break;
		case TYPE_M2006_ANGLE:
		case TYPE_M3508_ANGLE:
		case TYPE_GM6020_720:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005214:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005216:	1d18      	adds	r0, r3, #4
 8005218:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800521a:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 800521e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8005220:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8005222:	461a      	mov	r2, r3
 8005224:	f000 f8fc 	bl	8005420 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8005228:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800522a:	1d1a      	adds	r2, r3, #4
 800522c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800522e:	3398      	adds	r3, #152	@ 0x98
 8005230:	4619      	mov	r1, r3
 8005232:	4610      	mov	r0, r2
 8005234:	f000 f8b6 	bl	80053a4 <angle_offset>
			break;
 8005238:	e000      	b.n	800523c <convert_raw_can_data+0x23c>
		default:
			break;
 800523a:	bf00      	nop

		}

		//initialise task switching variables
		BaseType_t xHigherPriorityTaskWoken, xResult;
		xHigherPriorityTaskWoken = pdFALSE;
 800523c:	2300      	movs	r3, #0
 800523e:	617b      	str	r3, [r7, #20]

		//set event group bits so that the tasks and PIDs only trigger upon updated data
		//also checks if the respective tasks are set to ready
		switch (idnum + 1) {
 8005240:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8005242:	3301      	adds	r3, #1
 8005244:	3b05      	subs	r3, #5
 8005246:	2b0f      	cmp	r3, #15
 8005248:	d87c      	bhi.n	8005344 <convert_raw_can_data+0x344>
 800524a:	a201      	add	r2, pc, #4	@ (adr r2, 8005250 <convert_raw_can_data+0x250>)
 800524c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005250:	08005291 	.word	0x08005291
 8005254:	080052a5 	.word	0x080052a5
 8005258:	080052b9 	.word	0x080052b9
 800525c:	080052cd 	.word	0x080052cd
 8005260:	08005345 	.word	0x08005345
 8005264:	08005345 	.word	0x08005345
 8005268:	08005345 	.word	0x08005345
 800526c:	08005345 	.word	0x08005345
 8005270:	08005345 	.word	0x08005345
 8005274:	08005345 	.word	0x08005345
 8005278:	080052f5 	.word	0x080052f5
 800527c:	080052e1 	.word	0x080052e1
 8005280:	08005309 	.word	0x08005309
 8005284:	0800531d 	.word	0x0800531d
 8005288:	08005345 	.word	0x08005345
 800528c:	08005331 	.word	0x08005331
#ifndef CHASSIS_MCU
		case FR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b1000,
 8005290:	4b3e      	ldr	r3, [pc, #248]	@ (800538c <convert_raw_can_data+0x38c>)
 8005292:	681b      	ldr	r3, [r3, #0]
 8005294:	f107 0214 	add.w	r2, r7, #20
 8005298:	2108      	movs	r1, #8
 800529a:	4618      	mov	r0, r3
 800529c:	f011 ffaa 	bl	80171f4 <xEventGroupSetBitsFromISR>
 80052a0:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052a2:	e052      	b.n	800534a <convert_raw_can_data+0x34a>
		case FL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0100,
 80052a4:	4b39      	ldr	r3, [pc, #228]	@ (800538c <convert_raw_can_data+0x38c>)
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	f107 0214 	add.w	r2, r7, #20
 80052ac:	2104      	movs	r1, #4
 80052ae:	4618      	mov	r0, r3
 80052b0:	f011 ffa0 	bl	80171f4 <xEventGroupSetBitsFromISR>
 80052b4:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052b6:	e048      	b.n	800534a <convert_raw_can_data+0x34a>
		case BL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0010,
 80052b8:	4b34      	ldr	r3, [pc, #208]	@ (800538c <convert_raw_can_data+0x38c>)
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	f107 0214 	add.w	r2, r7, #20
 80052c0:	2102      	movs	r1, #2
 80052c2:	4618      	mov	r0, r3
 80052c4:	f011 ff96 	bl	80171f4 <xEventGroupSetBitsFromISR>
 80052c8:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052ca:	e03e      	b.n	800534a <convert_raw_can_data+0x34a>
		case BR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0001,
 80052cc:	4b2f      	ldr	r3, [pc, #188]	@ (800538c <convert_raw_can_data+0x38c>)
 80052ce:	681b      	ldr	r3, [r3, #0]
 80052d0:	f107 0214 	add.w	r2, r7, #20
 80052d4:	2101      	movs	r1, #1
 80052d6:	4618      	mov	r0, r3
 80052d8:	f011 ff8c 	bl	80171f4 <xEventGroupSetBitsFromISR>
 80052dc:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052de:	e034      	b.n	800534a <convert_raw_can_data+0x34a>
#endif
		case LFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b010,
 80052e0:	4b2b      	ldr	r3, [pc, #172]	@ (8005390 <convert_raw_can_data+0x390>)
 80052e2:	681b      	ldr	r3, [r3, #0]
 80052e4:	f107 0214 	add.w	r2, r7, #20
 80052e8:	2102      	movs	r1, #2
 80052ea:	4618      	mov	r0, r3
 80052ec:	f011 ff82 	bl	80171f4 <xEventGroupSetBitsFromISR>
 80052f0:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 80052f2:	e02a      	b.n	800534a <convert_raw_can_data+0x34a>
		case RFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b001,
 80052f4:	4b26      	ldr	r3, [pc, #152]	@ (8005390 <convert_raw_can_data+0x390>)
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	f107 0214 	add.w	r2, r7, #20
 80052fc:	2101      	movs	r1, #1
 80052fe:	4618      	mov	r0, r3
 8005300:	f011 ff78 	bl	80171f4 <xEventGroupSetBitsFromISR>
 8005304:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8005306:	e020      	b.n	800534a <convert_raw_can_data+0x34a>
		case FEEDER_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b100,
 8005308:	4b21      	ldr	r3, [pc, #132]	@ (8005390 <convert_raw_can_data+0x390>)
 800530a:	681b      	ldr	r3, [r3, #0]
 800530c:	f107 0214 	add.w	r2, r7, #20
 8005310:	2104      	movs	r1, #4
 8005312:	4618      	mov	r0, r3
 8005314:	f011 ff6e 	bl	80171f4 <xEventGroupSetBitsFromISR>
 8005318:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 800531a:	e016      	b.n	800534a <convert_raw_can_data+0x34a>
		case PITCH_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b01,
 800531c:	4b1d      	ldr	r3, [pc, #116]	@ (8005394 <convert_raw_can_data+0x394>)
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	f107 0214 	add.w	r2, r7, #20
 8005324:	2101      	movs	r1, #1
 8005326:	4618      	mov	r0, r3
 8005328:	f011 ff64 	bl	80171f4 <xEventGroupSetBitsFromISR>
 800532c:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 800532e:	e00c      	b.n	800534a <convert_raw_can_data+0x34a>
		case YAW_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b10,
 8005330:	4b18      	ldr	r3, [pc, #96]	@ (8005394 <convert_raw_can_data+0x394>)
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	f107 0214 	add.w	r2, r7, #20
 8005338:	2102      	movs	r1, #2
 800533a:	4618      	mov	r0, r3
 800533c:	f011 ff5a 	bl	80171f4 <xEventGroupSetBitsFromISR>
 8005340:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8005342:	e002      	b.n	800534a <convert_raw_can_data+0x34a>
		default:
			xResult = pdFAIL;
 8005344:	2300      	movs	r3, #0
 8005346:	62fb      	str	r3, [r7, #44]	@ 0x2c
			idnum = idnum;
			//error handler
			break;
 8005348:	bf00      	nop
		}

		//switches tasks if a higher priority task is ready.
		//required because the function is in an ISR
		if (xResult != pdFAIL) {
 800534a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800534c:	2b00      	cmp	r3, #0
 800534e:	d00c      	beq.n	800536a <convert_raw_can_data+0x36a>
			portYIELD_FROM_ISR(xHigherPriorityTaskWoken); //forces current task to yield if higher priority task is called
 8005350:	697b      	ldr	r3, [r7, #20]
 8005352:	2b00      	cmp	r3, #0
 8005354:	d009      	beq.n	800536a <convert_raw_can_data+0x36a>
 8005356:	4b10      	ldr	r3, [pc, #64]	@ (8005398 <convert_raw_can_data+0x398>)
 8005358:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800535c:	601a      	str	r2, [r3, #0]
 800535e:	f3bf 8f4f 	dsb	sy
 8005362:	f3bf 8f6f 	isb	sy
 8005366:	e000      	b.n	800536a <convert_raw_can_data+0x36a>
		return;
 8005368:	bf00      	nop
		}
	} else {
		//this is a useless statement so that it is possible to set a breakpoint here lol
		//error handler
	}
}
 800536a:	3730      	adds	r7, #48	@ 0x30
 800536c:	46bd      	mov	sp, r7
 800536e:	bdb0      	pop	{r4, r5, r7, pc}
 8005370:	66666666 	.word	0x66666666
 8005374:	3fee6666 	.word	0x3fee6666
 8005378:	9999999a 	.word	0x9999999a
 800537c:	3fa99999 	.word	0x3fa99999
 8005380:	3ff80000 	.word	0x3ff80000
 8005384:	46000000 	.word	0x46000000
 8005388:	4ab71b00 	.word	0x4ab71b00
 800538c:	200037ac 	.word	0x200037ac
 8005390:	200037b0 	.word	0x200037b0
 8005394:	200037a8 	.word	0x200037a8
 8005398:	e000ed04 	.word	0xe000ed04
 800539c:	00000000 	.word	0x00000000
 80053a0:	40c96400 	.word	0x40c96400

080053a4 <angle_offset>:
}

/**
 * Centers the raw motor angle to between -Pi to +Pi
 */
void angle_offset(raw_data_t *motor_data, angle_data_t *angle_data) {
 80053a4:	b480      	push	{r7}
 80053a6:	b085      	sub	sp, #20
 80053a8:	af00      	add	r7, sp, #0
 80053aa:	6078      	str	r0, [r7, #4]
 80053ac:	6039      	str	r1, [r7, #0]
	int32_t temp_ang = 0;
 80053ae:	2300      	movs	r3, #0
 80053b0:	60fb      	str	r3, [r7, #12]
//	}
//	while (angle_data->ticks < angle_data->min_ticks) {
//		angle_data->ticks += angle_data->tick_range;
//	}

	temp_ang = angle_data->ticks - angle_data->center_ang;
 80053b2:	683b      	ldr	r3, [r7, #0]
 80053b4:	681a      	ldr	r2, [r3, #0]
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	685b      	ldr	r3, [r3, #4]
 80053ba:	1ad3      	subs	r3, r2, r3
 80053bc:	60fb      	str	r3, [r7, #12]
	if (temp_ang > angle_data->max_ticks) {
 80053be:	683b      	ldr	r3, [r7, #0]
 80053c0:	68db      	ldr	r3, [r3, #12]
 80053c2:	68fa      	ldr	r2, [r7, #12]
 80053c4:	429a      	cmp	r2, r3
 80053c6:	dd05      	ble.n	80053d4 <angle_offset+0x30>
		temp_ang -= angle_data->tick_range;
 80053c8:	683b      	ldr	r3, [r7, #0]
 80053ca:	691b      	ldr	r3, [r3, #16]
 80053cc:	68fa      	ldr	r2, [r7, #12]
 80053ce:	1ad3      	subs	r3, r2, r3
 80053d0:	60fb      	str	r3, [r7, #12]
 80053d2:	e009      	b.n	80053e8 <angle_offset+0x44>
	} else if (temp_ang < angle_data->min_ticks) {
 80053d4:	683b      	ldr	r3, [r7, #0]
 80053d6:	689b      	ldr	r3, [r3, #8]
 80053d8:	68fa      	ldr	r2, [r7, #12]
 80053da:	429a      	cmp	r2, r3
 80053dc:	da04      	bge.n	80053e8 <angle_offset+0x44>
		temp_ang += angle_data->tick_range;
 80053de:	683b      	ldr	r3, [r7, #0]
 80053e0:	691b      	ldr	r3, [r3, #16]
 80053e2:	68fa      	ldr	r2, [r7, #12]
 80053e4:	4413      	add	r3, r2
 80053e6:	60fb      	str	r3, [r7, #12]
	}
//	angle_data->ticks = temp_ang;
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 80053e8:	68fb      	ldr	r3, [r7, #12]
 80053ea:	ee07 3a90 	vmov	s15, r3
 80053ee:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80053f2:	683b      	ldr	r3, [r7, #0]
 80053f4:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 80053f8:	ee67 6a27 	vmul.f32	s13, s14, s15
			/ angle_data->tick_range;
 80053fc:	683b      	ldr	r3, [r7, #0]
 80053fe:	691b      	ldr	r3, [r3, #16]
 8005400:	ee07 3a90 	vmov	s15, r3
 8005404:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005408:	eec6 7a87 	vdiv.f32	s15, s13, s14
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 800540c:	683b      	ldr	r3, [r7, #0]
 800540e:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34
}
 8005412:	bf00      	nop
 8005414:	3714      	adds	r7, #20
 8005416:	46bd      	mov	sp, r7
 8005418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800541c:	4770      	bx	lr
	...

08005420 <motor_calc_odometry>:

void motor_calc_odometry(raw_data_t *motor_data, angle_data_t *angle_data,
		uint32_t feedback_times[]) {
 8005420:	b480      	push	{r7}
 8005422:	b087      	sub	sp, #28
 8005424:	af00      	add	r7, sp, #0
 8005426:	60f8      	str	r0, [r7, #12]
 8005428:	60b9      	str	r1, [r7, #8]
 800542a:	607a      	str	r2, [r7, #4]
	int16_t abs_angle_diff;
	abs_angle_diff = motor_data->angle[0] - motor_data->angle[1];
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005432:	b29a      	uxth	r2, r3
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800543a:	b29b      	uxth	r3, r3
 800543c:	1ad3      	subs	r3, r2, r3
 800543e:	b29b      	uxth	r3, r3
 8005440:	82fb      	strh	r3, [r7, #22]
	if (angle_data->init == 0){
 8005442:	68bb      	ldr	r3, [r7, #8]
 8005444:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005448:	2b00      	cmp	r3, #0
 800544a:	d129      	bne.n	80054a0 <motor_calc_odometry+0x80>
		angle_data->ticks = motor_data->angle[0];
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005452:	461a      	mov	r2, r3
 8005454:	68bb      	ldr	r3, [r7, #8]
 8005456:	601a      	str	r2, [r3, #0]
		if (angle_data->ticks > angle_data->max_ticks) {
 8005458:	68bb      	ldr	r3, [r7, #8]
 800545a:	681a      	ldr	r2, [r3, #0]
 800545c:	68bb      	ldr	r3, [r7, #8]
 800545e:	68db      	ldr	r3, [r3, #12]
 8005460:	429a      	cmp	r2, r3
 8005462:	dd06      	ble.n	8005472 <motor_calc_odometry+0x52>
			angle_data->ticks -= angle_data->tick_range;
 8005464:	68bb      	ldr	r3, [r7, #8]
 8005466:	681a      	ldr	r2, [r3, #0]
 8005468:	68bb      	ldr	r3, [r7, #8]
 800546a:	691b      	ldr	r3, [r3, #16]
 800546c:	1ad2      	subs	r2, r2, r3
 800546e:	68bb      	ldr	r3, [r7, #8]
 8005470:	601a      	str	r2, [r3, #0]
		}
		if (angle_data->ticks < angle_data->min_ticks) {
 8005472:	68bb      	ldr	r3, [r7, #8]
 8005474:	681a      	ldr	r2, [r3, #0]
 8005476:	68bb      	ldr	r3, [r7, #8]
 8005478:	689b      	ldr	r3, [r3, #8]
 800547a:	429a      	cmp	r2, r3
 800547c:	da06      	bge.n	800548c <motor_calc_odometry+0x6c>
			angle_data->ticks += angle_data->tick_range;
 800547e:	68bb      	ldr	r3, [r7, #8]
 8005480:	681a      	ldr	r2, [r3, #0]
 8005482:	68bb      	ldr	r3, [r7, #8]
 8005484:	691b      	ldr	r3, [r3, #16]
 8005486:	441a      	add	r2, r3
 8005488:	68bb      	ldr	r3, [r7, #8]
 800548a:	601a      	str	r2, [r3, #0]
		}
		motor_data->angle[1] = motor_data->angle[0];
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8005492:	68fb      	ldr	r3, [r7, #12]
 8005494:	805a      	strh	r2, [r3, #2]
		angle_data->init = 1;
 8005496:	68bb      	ldr	r3, [r7, #8]
 8005498:	2201      	movs	r2, #1
 800549a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
		return;
 800549e:	e06b      	b.n	8005578 <motor_calc_odometry+0x158>
	}
	angle_data->abs_ang_diff = abs_angle_diff;
 80054a0:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80054a4:	68bb      	ldr	r3, [r7, #8]
 80054a6:	615a      	str	r2, [r3, #20]

	//generally the motor won't exceed half a turn between each feedback
	if (abs_angle_diff > 4096) {
 80054a8:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054ac:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80054b0:	dd0a      	ble.n	80054c8 <motor_calc_odometry+0xa8>
		++angle_data->rev;
 80054b2:	68bb      	ldr	r3, [r7, #8]
 80054b4:	699b      	ldr	r3, [r3, #24]
 80054b6:	1c5a      	adds	r2, r3, #1
 80054b8:	68bb      	ldr	r3, [r7, #8]
 80054ba:	619a      	str	r2, [r3, #24]
		abs_angle_diff -= 8192;
 80054bc:	8afb      	ldrh	r3, [r7, #22]
 80054be:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 80054c2:	b29b      	uxth	r3, r3
 80054c4:	82fb      	strh	r3, [r7, #22]
 80054c6:	e00e      	b.n	80054e6 <motor_calc_odometry+0xc6>
	} else if (abs_angle_diff < -4096) {
 80054c8:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80054cc:	f513 5f80 	cmn.w	r3, #4096	@ 0x1000
 80054d0:	da09      	bge.n	80054e6 <motor_calc_odometry+0xc6>
		--angle_data->rev;
 80054d2:	68bb      	ldr	r3, [r7, #8]
 80054d4:	699b      	ldr	r3, [r3, #24]
 80054d6:	1e5a      	subs	r2, r3, #1
 80054d8:	68bb      	ldr	r3, [r7, #8]
 80054da:	619a      	str	r2, [r3, #24]
		abs_angle_diff += 8192;
 80054dc:	8afb      	ldrh	r3, [r7, #22]
 80054de:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80054e2:	b29b      	uxth	r3, r3
 80054e4:	82fb      	strh	r3, [r7, #22]
	}

	uint16_t gear_ticks = 8192 * angle_data->gearbox_ratio;
 80054e6:	68bb      	ldr	r3, [r7, #8]
 80054e8:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 80054ec:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 8005584 <motor_calc_odometry+0x164>
 80054f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80054f4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80054f8:	ee17 3a90 	vmov	r3, s15
 80054fc:	82bb      	strh	r3, [r7, #20]
	angle_data->ticks += abs_angle_diff;
 80054fe:	68bb      	ldr	r3, [r7, #8]
 8005500:	681a      	ldr	r2, [r3, #0]
 8005502:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8005506:	441a      	add	r2, r3
 8005508:	68bb      	ldr	r3, [r7, #8]
 800550a:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 800550c:	e006      	b.n	800551c <motor_calc_odometry+0xfc>
		angle_data->ticks -= angle_data->tick_range;
 800550e:	68bb      	ldr	r3, [r7, #8]
 8005510:	681a      	ldr	r2, [r3, #0]
 8005512:	68bb      	ldr	r3, [r7, #8]
 8005514:	691b      	ldr	r3, [r3, #16]
 8005516:	1ad2      	subs	r2, r2, r3
 8005518:	68bb      	ldr	r3, [r7, #8]
 800551a:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 800551c:	68bb      	ldr	r3, [r7, #8]
 800551e:	681a      	ldr	r2, [r3, #0]
 8005520:	68bb      	ldr	r3, [r7, #8]
 8005522:	68db      	ldr	r3, [r3, #12]
 8005524:	429a      	cmp	r2, r3
 8005526:	dcf2      	bgt.n	800550e <motor_calc_odometry+0xee>
	}
	while (angle_data->ticks < angle_data->min_ticks) {
 8005528:	e006      	b.n	8005538 <motor_calc_odometry+0x118>
		angle_data->ticks += angle_data->tick_range;
 800552a:	68bb      	ldr	r3, [r7, #8]
 800552c:	681a      	ldr	r2, [r3, #0]
 800552e:	68bb      	ldr	r3, [r7, #8]
 8005530:	691b      	ldr	r3, [r3, #16]
 8005532:	441a      	add	r2, r3
 8005534:	68bb      	ldr	r3, [r7, #8]
 8005536:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks < angle_data->min_ticks) {
 8005538:	68bb      	ldr	r3, [r7, #8]
 800553a:	681a      	ldr	r2, [r3, #0]
 800553c:	68bb      	ldr	r3, [r7, #8]
 800553e:	689b      	ldr	r3, [r3, #8]
 8005540:	429a      	cmp	r2, r3
 8005542:	dbf2      	blt.n	800552a <motor_calc_odometry+0x10a>
	}

	angle_data->dist = angle_data->ticks * angle_data->wheel_circ / gear_ticks;
 8005544:	68bb      	ldr	r3, [r7, #8]
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	ee07 3a90 	vmov	s15, r3
 800554c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005550:	68bb      	ldr	r3, [r7, #8]
 8005552:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 8005556:	ee67 6a27 	vmul.f32	s13, s14, s15
 800555a:	8abb      	ldrh	r3, [r7, #20]
 800555c:	ee07 3a90 	vmov	s15, r3
 8005560:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005564:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005568:	68bb      	ldr	r3, [r7, #8]
 800556a:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
	motor_data->angle[1] = motor_data->angle[0];
 800556e:	68fb      	ldr	r3, [r7, #12]
 8005570:	f9b3 2000 	ldrsh.w	r2, [r3]
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	805a      	strh	r2, [r3, #2]
}
 8005578:	371c      	adds	r7, #28
 800557a:	46bd      	mov	sp, r7
 800557c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005580:	4770      	bx	lr
 8005582:	bf00      	nop
 8005584:	46000000 	.word	0x46000000

08005588 <control_input_task>:
uint8_t g_safety_toggle = ARM_SWITCH;
uint8_t launcher_safety_toggle = ARM_SWITCH;



void control_input_task(void *argument) {
 8005588:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800558c:	b088      	sub	sp, #32
 800558e:	af00      	add	r7, sp, #0
 8005590:	60f8      	str	r0, [r7, #12]
	TickType_t start_time;
	control_reset();
 8005592:	f000 f959 	bl	8005848 <control_reset>
	chassis_yaw_pid_init();
 8005596:	f000 fb47 	bl	8005c28 <chassis_yaw_pid_init>
	gimbal_ctrl_data.imu_mode = GIMBAL_MODE;
 800559a:	4b80      	ldr	r3, [pc, #512]	@ (800579c <control_input_task+0x214>)
 800559c:	2201      	movs	r2, #1
 800559e:	731a      	strb	r2, [r3, #12]
	aimbot_pid_init();
 80055a0:	f000 fee0 	bl	8006364 <aimbot_pid_init>
	dbus_remote_start();
 80055a4:	f7fb ffa0 	bl	80014e8 <dbus_remote_start>
	gear_speed.curr_gear = GEAR_DEFAULT;
 80055a8:	4b7d      	ldr	r3, [pc, #500]	@ (80057a0 <control_input_task+0x218>)
 80055aa:	2203      	movs	r2, #3
 80055ac:	701a      	strb	r2, [r3, #0]
	set_gear();
 80055ae:	f000 fabf 	bl	8005b30 <set_gear>
	g_safety_toggle = 1;
 80055b2:	4b7c      	ldr	r3, [pc, #496]	@ (80057a4 <control_input_task+0x21c>)
 80055b4:	2201      	movs	r2, #1
 80055b6:	701a      	strb	r2, [r3, #0]
	vTaskDelay(100);
 80055b8:	2064      	movs	r0, #100	@ 0x64
 80055ba:	f012 ff13 	bl	80183e4 <vTaskDelay>
	uint8_t rc_check;
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 80055be:	e01a      	b.n	80055f6 <control_input_task+0x6e>
		uint8_t temp_msg;
		temp_msg = not_ok;
 80055c0:	2302      	movs	r3, #2
 80055c2:	74fb      	strb	r3, [r7, #19]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80055c4:	4b78      	ldr	r3, [pc, #480]	@ (80057a8 <control_input_task+0x220>)
 80055c6:	6818      	ldr	r0, [r3, #0]
 80055c8:	f107 0113 	add.w	r1, r7, #19
 80055cc:	2300      	movs	r3, #0
 80055ce:	2200      	movs	r2, #0
 80055d0:	f012 f81e 	bl	8017610 <xQueueGenericSend>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80055d4:	21c8      	movs	r1, #200	@ 0xc8
 80055d6:	2001      	movs	r0, #1
 80055d8:	f013 fcd4 	bl	8018f84 <ulTaskNotifyTake>
 80055dc:	4603      	mov	r3, r0
 80055de:	76fb      	strb	r3, [r7, #27]
		HAL_UART_DMAStop(&DBUS_UART);
 80055e0:	4872      	ldr	r0, [pc, #456]	@ (80057ac <control_input_task+0x224>)
 80055e2:	f00d f815 	bl	8012610 <HAL_UART_DMAStop>
		dbus_remote_start();
 80055e6:	f7fb ff7f 	bl	80014e8 <dbus_remote_start>
		if (rc_check){
 80055ea:	7efb      	ldrb	r3, [r7, #27]
 80055ec:	2b00      	cmp	r3, #0
 80055ee:	d002      	beq.n	80055f6 <control_input_task+0x6e>
			vTaskDelay(200);
 80055f0:	20c8      	movs	r0, #200	@ 0xc8
 80055f2:	f012 fef7 	bl	80183e4 <vTaskDelay>
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 80055f6:	4b6e      	ldr	r3, [pc, #440]	@ (80057b0 <control_input_task+0x228>)
 80055f8:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 80055fc:	4618      	mov	r0, r3
 80055fe:	f7fa ff91 	bl	8000524 <__aeabi_i2d>
 8005602:	4602      	mov	r2, r0
 8005604:	460b      	mov	r3, r1
 8005606:	4690      	mov	r8, r2
 8005608:	f023 4900 	bic.w	r9, r3, #2147483648	@ 0x80000000
 800560c:	f04f 0200 	mov.w	r2, #0
 8005610:	4b68      	ldr	r3, [pc, #416]	@ (80057b4 <control_input_task+0x22c>)
 8005612:	4640      	mov	r0, r8
 8005614:	4649      	mov	r1, r9
 8005616:	f7fb fa7f 	bl	8000b18 <__aeabi_dcmpgt>
 800561a:	4603      	mov	r3, r0
 800561c:	2b00      	cmp	r3, #0
 800561e:	d1cf      	bne.n	80055c0 <control_input_task+0x38>
 8005620:	4b63      	ldr	r3, [pc, #396]	@ (80057b0 <control_input_task+0x228>)
 8005622:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005626:	4618      	mov	r0, r3
 8005628:	f7fa ff7c 	bl	8000524 <__aeabi_i2d>
 800562c:	4602      	mov	r2, r0
 800562e:	460b      	mov	r3, r1
 8005630:	4692      	mov	sl, r2
 8005632:	f023 4b00 	bic.w	fp, r3, #2147483648	@ 0x80000000
 8005636:	f04f 0200 	mov.w	r2, #0
 800563a:	4b5e      	ldr	r3, [pc, #376]	@ (80057b4 <control_input_task+0x22c>)
 800563c:	4650      	mov	r0, sl
 800563e:	4659      	mov	r1, fp
 8005640:	f7fb fa6a 	bl	8000b18 <__aeabi_dcmpgt>
 8005644:	4603      	mov	r3, r0
 8005646:	2b00      	cmp	r3, #0
 8005648:	d1ba      	bne.n	80055c0 <control_input_task+0x38>
 800564a:	4b59      	ldr	r3, [pc, #356]	@ (80057b0 <control_input_task+0x228>)
 800564c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8005650:	4618      	mov	r0, r3
 8005652:	f7fa ff67 	bl	8000524 <__aeabi_i2d>
 8005656:	4602      	mov	r2, r0
 8005658:	460b      	mov	r3, r1
 800565a:	603a      	str	r2, [r7, #0]
 800565c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8005660:	607b      	str	r3, [r7, #4]
 8005662:	f04f 0200 	mov.w	r2, #0
 8005666:	4b53      	ldr	r3, [pc, #332]	@ (80057b4 <control_input_task+0x22c>)
 8005668:	e9d7 0100 	ldrd	r0, r1, [r7]
 800566c:	f7fb fa54 	bl	8000b18 <__aeabi_dcmpgt>
 8005670:	4603      	mov	r3, r0
 8005672:	2b00      	cmp	r3, #0
 8005674:	d1a4      	bne.n	80055c0 <control_input_task+0x38>
 8005676:	4b4e      	ldr	r3, [pc, #312]	@ (80057b0 <control_input_task+0x228>)
 8005678:	f9b3 3000 	ldrsh.w	r3, [r3]
 800567c:	4618      	mov	r0, r3
 800567e:	f7fa ff51 	bl	8000524 <__aeabi_i2d>
 8005682:	4602      	mov	r2, r0
 8005684:	460b      	mov	r3, r1
 8005686:	4614      	mov	r4, r2
 8005688:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800568c:	f04f 0200 	mov.w	r2, #0
 8005690:	4b48      	ldr	r3, [pc, #288]	@ (80057b4 <control_input_task+0x22c>)
 8005692:	4620      	mov	r0, r4
 8005694:	4629      	mov	r1, r5
 8005696:	f7fb fa3f 	bl	8000b18 <__aeabi_dcmpgt>
 800569a:	4603      	mov	r3, r0
 800569c:	2b00      	cmp	r3, #0
 800569e:	d18f      	bne.n	80055c0 <control_input_task+0x38>
		}
	}
	g_safety_toggle = ARM_SWITCH;
 80056a0:	4b40      	ldr	r3, [pc, #256]	@ (80057a4 <control_input_task+0x21c>)
 80056a2:	2201      	movs	r2, #1
 80056a4:	701a      	strb	r2, [r3, #0]

	uint32_t last_song = 0;
 80056a6:	2300      	movs	r3, #0
 80056a8:	61fb      	str	r3, [r7, #28]
	while (1) {
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 80056aa:	21c8      	movs	r1, #200	@ 0xc8
 80056ac:	2001      	movs	r0, #1
 80056ae:	f013 fc69 	bl	8018f84 <ulTaskNotifyTake>
 80056b2:	4603      	mov	r3, r0
 80056b4:	76fb      	strb	r3, [r7, #27]
		if (rc_check) {
 80056b6:	7efb      	ldrb	r3, [r7, #27]
 80056b8:	2b00      	cmp	r3, #0
 80056ba:	d04c      	beq.n	8005756 <control_input_task+0x1ce>
			status_led(1, on_led);
 80056bc:	2100      	movs	r1, #0
 80056be:	2001      	movs	r0, #1
 80056c0:	f7fc fc7a 	bl	8001fb8 <status_led>
			start_time = xTaskGetTickCount();
 80056c4:	f012 ffe2 	bl	801868c <xTaskGetTickCount>
 80056c8:	4603      	mov	r3, r0
 80056ca:	617b      	str	r3, [r7, #20]
			if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 80056cc:	4b38      	ldr	r3, [pc, #224]	@ (80057b0 <control_input_task+0x228>)
 80056ce:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80056d2:	2b01      	cmp	r3, #1
 80056d4:	d123      	bne.n	800571e <control_input_task+0x196>

				if ((g_remote_cmd.left_switch == ge_LSW_UNSAFE) && (HAL_GetTick() - last_song > 5000)){
 80056d6:	4b36      	ldr	r3, [pc, #216]	@ (80057b0 <control_input_task+0x228>)
 80056d8:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80056dc:	2b01      	cmp	r3, #1
 80056de:	d10d      	bne.n	80056fc <control_input_task+0x174>
 80056e0:	f005 fcba 	bl	800b058 <HAL_GetTick>
 80056e4:	4602      	mov	r2, r0
 80056e6:	69fb      	ldr	r3, [r7, #28]
 80056e8:	1ad3      	subs	r3, r2, r3
 80056ea:	f241 3288 	movw	r2, #5000	@ 0x1388
 80056ee:	4293      	cmp	r3, r2
 80056f0:	d904      	bls.n	80056fc <control_input_task+0x174>
					uint8_t temp_msg;
					last_song = HAL_GetTick();
 80056f2:	f005 fcb1 	bl	800b058 <HAL_GetTick>
 80056f6:	61f8      	str	r0, [r7, #28]
					temp_msg = song;
 80056f8:	2300      	movs	r3, #0
 80056fa:	76bb      	strb	r3, [r7, #26]
//					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
				}
				laser_on();
 80056fc:	f7fb ff98 	bl	8001630 <laser_on>
				control_mode_change(g_remote_cmd.side_dial);
 8005700:	4b2b      	ldr	r3, [pc, #172]	@ (80057b0 <control_input_task+0x228>)
 8005702:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8005706:	4618      	mov	r0, r3
 8005708:	f000 f8d4 	bl	80058b4 <control_mode_change>
				g_safety_toggle = 0;
 800570c:	4b25      	ldr	r3, [pc, #148]	@ (80057a4 <control_input_task+0x21c>)
 800570e:	2200      	movs	r2, #0
 8005710:	701a      	strb	r2, [r3, #0]
				launcher_safety_toggle = 0;
 8005712:	4b29      	ldr	r3, [pc, #164]	@ (80057b8 <control_input_task+0x230>)
 8005714:	2200      	movs	r2, #0
 8005716:	701a      	strb	r2, [r3, #0]
				control_reset();
 8005718:	f000 f896 	bl	8005848 <control_reset>
 800571c:	e037      	b.n	800578e <control_input_task+0x206>
			} else {

				switch (control_mode) {
 800571e:	4b27      	ldr	r3, [pc, #156]	@ (80057bc <control_input_task+0x234>)
 8005720:	781b      	ldrb	r3, [r3, #0]
 8005722:	2b01      	cmp	r3, #1
 8005724:	d002      	beq.n	800572c <control_input_task+0x1a4>
 8005726:	2b02      	cmp	r3, #2
 8005728:	d008      	beq.n	800573c <control_input_task+0x1b4>
					break;
					;
#endif

				default:
					break;
 800572a:	e00f      	b.n	800574c <control_input_task+0x1c4>
					keyboard_gear_shifter(&gear_speed);
 800572c:	481c      	ldr	r0, [pc, #112]	@ (80057a0 <control_input_task+0x218>)
 800572e:	f000 fa9f 	bl	8005c70 <keyboard_gear_shifter>
					set_gear();
 8005732:	f000 f9fd 	bl	8005b30 <set_gear>
					keyboard_control_input();
 8005736:	f000 fa91 	bl	8005c5c <keyboard_control_input>
					break;
 800573a:	e007      	b.n	800574c <control_input_task+0x1c4>
					remote_gear_shifter(&gear_speed);
 800573c:	4818      	ldr	r0, [pc, #96]	@ (80057a0 <control_input_task+0x218>)
 800573e:	f000 fc75 	bl	800602c <remote_gear_shifter>
					set_gear();
 8005742:	f000 f9f5 	bl	8005b30 <set_gear>
					remote_control_input();
 8005746:	f000 fc67 	bl	8006018 <remote_control_input>
					break;
 800574a:	bf00      	nop

				}
				status_led(1, off_led);
 800574c:	2101      	movs	r1, #1
 800574e:	2001      	movs	r0, #1
 8005750:	f7fc fc32 	bl	8001fb8 <status_led>
 8005754:	e01b      	b.n	800578e <control_input_task+0x206>
			}
		} else {
			//restart remote uart
			if (HAL_GetTick() - g_remote_cmd.last_time > 100) {
 8005756:	f005 fc7f 	bl	800b058 <HAL_GetTick>
 800575a:	4602      	mov	r2, r0
 800575c:	4b14      	ldr	r3, [pc, #80]	@ (80057b0 <control_input_task+0x228>)
 800575e:	6a1b      	ldr	r3, [r3, #32]
 8005760:	1ad3      	subs	r3, r2, r3
 8005762:	2b64      	cmp	r3, #100	@ 0x64
 8005764:	d909      	bls.n	800577a <control_input_task+0x1f2>
				HAL_UART_DMAStop(&DBUS_UART);
 8005766:	4811      	ldr	r0, [pc, #68]	@ (80057ac <control_input_task+0x224>)
 8005768:	f00c ff52 	bl	8012610 <HAL_UART_DMAStop>
				dbus_remote_start();
 800576c:	f7fb febc 	bl	80014e8 <dbus_remote_start>
				g_remote_cmd.last_time = HAL_GetTick();
 8005770:	f005 fc72 	bl	800b058 <HAL_GetTick>
 8005774:	4603      	mov	r3, r0
 8005776:	4a0e      	ldr	r2, [pc, #56]	@ (80057b0 <control_input_task+0x228>)
 8005778:	6213      	str	r3, [r2, #32]
			}
			kill_can();
 800577a:	f004 fb45 	bl	8009e08 <kill_can>
			control_reset();
 800577e:	f000 f863 	bl	8005848 <control_reset>
			launcher_safety_toggle = LAUNCHER_SAFETY;
 8005782:	4b0d      	ldr	r3, [pc, #52]	@ (80057b8 <control_input_task+0x230>)
 8005784:	2200      	movs	r2, #0
 8005786:	701a      	strb	r2, [r3, #0]
			g_safety_toggle = 1;
 8005788:	4b06      	ldr	r3, [pc, #24]	@ (80057a4 <control_input_task+0x21c>)
 800578a:	2201      	movs	r2, #1
 800578c:	701a      	strb	r2, [r3, #0]

		}
		vTaskDelayUntil(&start_time, CONTROL_DELAY);
 800578e:	f107 0314 	add.w	r3, r7, #20
 8005792:	2102      	movs	r1, #2
 8005794:	4618      	mov	r0, r3
 8005796:	f012 fda5 	bl	80182e4 <vTaskDelayUntil>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 800579a:	e786      	b.n	80056aa <control_input_task+0x122>
 800579c:	200034e8 	.word	0x200034e8
 80057a0:	2000352c 	.word	0x2000352c
 80057a4:	20000009 	.word	0x20000009
 80057a8:	200037c4 	.word	0x200037c4
 80057ac:	20001c2c 	.word	0x20001c2c
 80057b0:	20000808 	.word	0x20000808
 80057b4:	40490000 	.word	0x40490000
 80057b8:	2000000a 	.word	0x2000000a
 80057bc:	20000008 	.word	0x20000008

080057c0 <chassis_center_yaw>:
	}
	osThreadTerminate(NULL);
}

float chassis_center_yaw() {
 80057c0:	b480      	push	{r7}
 80057c2:	af00      	add	r7, sp, #0

}
 80057c4:	bf00      	nop
 80057c6:	eeb0 0a67 	vmov.f32	s0, s15
 80057ca:	46bd      	mov	sp, r7
 80057cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d0:	4770      	bx	lr
	...

080057d4 <chassis_set_ctrl>:

void chassis_set_ctrl(float forward, float horizontal, float yaw){
 80057d4:	b480      	push	{r7}
 80057d6:	b085      	sub	sp, #20
 80057d8:	af00      	add	r7, sp, #0
 80057da:	ed87 0a03 	vstr	s0, [r7, #12]
 80057de:	edc7 0a02 	vstr	s1, [r7, #8]
 80057e2:	ed87 1a01 	vstr	s2, [r7, #4]
	chassis_ctrl_data.enabled = 1;
 80057e6:	4b0b      	ldr	r3, [pc, #44]	@ (8005814 <chassis_set_ctrl+0x40>)
 80057e8:	2201      	movs	r2, #1
 80057ea:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.horizontal = horizontal;
 80057ec:	4a09      	ldr	r2, [pc, #36]	@ (8005814 <chassis_set_ctrl+0x40>)
 80057ee:	68bb      	ldr	r3, [r7, #8]
 80057f0:	6053      	str	r3, [r2, #4]
	chassis_ctrl_data.forward = forward;
 80057f2:	4a08      	ldr	r2, [pc, #32]	@ (8005814 <chassis_set_ctrl+0x40>)
 80057f4:	68fb      	ldr	r3, [r7, #12]
 80057f6:	6013      	str	r3, [r2, #0]
	chassis_ctrl_data.yaw = -yaw;
 80057f8:	edd7 7a01 	vldr	s15, [r7, #4]
 80057fc:	eef1 7a67 	vneg.f32	s15, s15
 8005800:	4b04      	ldr	r3, [pc, #16]	@ (8005814 <chassis_set_ctrl+0x40>)
 8005802:	edc3 7a02 	vstr	s15, [r3, #8]
}
 8005806:	bf00      	nop
 8005808:	3714      	adds	r7, #20
 800580a:	46bd      	mov	sp, r7
 800580c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005810:	4770      	bx	lr
 8005812:	bf00      	nop
 8005814:	200034c8 	.word	0x200034c8

08005818 <chassis_kill_ctrl>:

void chassis_kill_ctrl(){
 8005818:	b480      	push	{r7}
 800581a:	af00      	add	r7, sp, #0
	chassis_ctrl_data.enabled = 0;
 800581c:	4b09      	ldr	r3, [pc, #36]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 800581e:	2200      	movs	r2, #0
 8005820:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.forward = 0;
 8005822:	4b08      	ldr	r3, [pc, #32]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 8005824:	f04f 0200 	mov.w	r2, #0
 8005828:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 800582a:	4b06      	ldr	r3, [pc, #24]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 800582c:	f04f 0200 	mov.w	r2, #0
 8005830:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 8005832:	4b04      	ldr	r3, [pc, #16]	@ (8005844 <chassis_kill_ctrl+0x2c>)
 8005834:	f04f 0200 	mov.w	r2, #0
 8005838:	609a      	str	r2, [r3, #8]
}
 800583a:	bf00      	nop
 800583c:	46bd      	mov	sp, r7
 800583e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005842:	4770      	bx	lr
 8005844:	200034c8 	.word	0x200034c8

08005848 <control_reset>:
		}
	}
	return 0;
}

void control_reset() {
 8005848:	b580      	push	{r7, lr}
 800584a:	af00      	add	r7, sp, #0
	chassis_ctrl_data.forward = 0;
 800584c:	4b14      	ldr	r3, [pc, #80]	@ (80058a0 <control_reset+0x58>)
 800584e:	f04f 0200 	mov.w	r2, #0
 8005852:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 8005854:	4b12      	ldr	r3, [pc, #72]	@ (80058a0 <control_reset+0x58>)
 8005856:	f04f 0200 	mov.w	r2, #0
 800585a:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 800585c:	4b10      	ldr	r3, [pc, #64]	@ (80058a0 <control_reset+0x58>)
 800585e:	f04f 0200 	mov.w	r2, #0
 8005862:	609a      	str	r2, [r3, #8]
	chassis_ctrl_data.enabled = 0;
 8005864:	4b0e      	ldr	r3, [pc, #56]	@ (80058a0 <control_reset+0x58>)
 8005866:	2200      	movs	r2, #0
 8005868:	751a      	strb	r2, [r3, #20]
	gimbal_ctrl_data.pitch = 0;
 800586a:	4b0e      	ldr	r3, [pc, #56]	@ (80058a4 <control_reset+0x5c>)
 800586c:	f04f 0200 	mov.w	r2, #0
 8005870:	601a      	str	r2, [r3, #0]
	gimbal_ctrl_data.yaw = imu_heading.yaw;
 8005872:	4b0d      	ldr	r3, [pc, #52]	@ (80058a8 <control_reset+0x60>)
 8005874:	689b      	ldr	r3, [r3, #8]
 8005876:	4a0b      	ldr	r2, [pc, #44]	@ (80058a4 <control_reset+0x5c>)
 8005878:	6053      	str	r3, [r2, #4]
	gimbal_ctrl_data.enabled = 0;
 800587a:	4b0a      	ldr	r3, [pc, #40]	@ (80058a4 <control_reset+0x5c>)
 800587c:	2200      	movs	r2, #0
 800587e:	735a      	strb	r2, [r3, #13]
	launcher_ctrl_data.firing = 0;
 8005880:	4b0a      	ldr	r3, [pc, #40]	@ (80058ac <control_reset+0x64>)
 8005882:	2200      	movs	r2, #0
 8005884:	805a      	strh	r2, [r3, #2]
	launcher_ctrl_data.projectile_speed = 0;
 8005886:	4b09      	ldr	r3, [pc, #36]	@ (80058ac <control_reset+0x64>)
 8005888:	2200      	movs	r2, #0
 800588a:	801a      	strh	r2, [r3, #0]
	launcher_ctrl_data.enabled = 0;
 800588c:	4b07      	ldr	r3, [pc, #28]	@ (80058ac <control_reset+0x64>)
 800588e:	2200      	movs	r2, #0
 8005890:	715a      	strb	r2, [r3, #5]
	g_spinspin_mode = 0;
 8005892:	4b07      	ldr	r3, [pc, #28]	@ (80058b0 <control_reset+0x68>)
 8005894:	2200      	movs	r2, #0
 8005896:	601a      	str	r2, [r3, #0]
	laser_off();
 8005898:	f7fb fed6 	bl	8001648 <laser_off>
}
 800589c:	bf00      	nop
 800589e:	bd80      	pop	{r7, pc}
 80058a0:	200034c8 	.word	0x200034c8
 80058a4:	200034e8 	.word	0x200034e8
 80058a8:	20003700 	.word	0x20003700
 80058ac:	200034e0 	.word	0x200034e0
 80058b0:	2000353c 	.word	0x2000353c

080058b4 <control_mode_change>:

void control_mode_change(int16_t left_dial_input) {
 80058b4:	b580      	push	{r7, lr}
 80058b6:	b084      	sub	sp, #16
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	4603      	mov	r3, r0
 80058bc:	80fb      	strh	r3, [r7, #6]
//assume already in shutdown mode here
	static uint32_t last_trig_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 80058be:	4b6f      	ldr	r3, [pc, #444]	@ (8005a7c <control_mode_change+0x1c8>)
 80058c0:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80058c4:	2b03      	cmp	r3, #3
 80058c6:	d133      	bne.n	8005930 <control_mode_change+0x7c>
		if (left_dial_input > 330 || left_dial_input < -330) {
 80058c8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80058cc:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 80058d0:	dc04      	bgt.n	80058dc <control_mode_change+0x28>
 80058d2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80058d6:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80058da:	da23      	bge.n	8005924 <control_mode_change+0x70>
			if (HAL_GetTick() - last_trig_time > 1000) {
 80058dc:	f005 fbbc 	bl	800b058 <HAL_GetTick>
 80058e0:	4602      	mov	r2, r0
 80058e2:	4b67      	ldr	r3, [pc, #412]	@ (8005a80 <control_mode_change+0x1cc>)
 80058e4:	681b      	ldr	r3, [r3, #0]
 80058e6:	1ad3      	subs	r3, r2, r3
 80058e8:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80058ec:	f240 80c2 	bls.w	8005a74 <control_mode_change+0x1c0>
				switch (control_mode) {
 80058f0:	4b64      	ldr	r3, [pc, #400]	@ (8005a84 <control_mode_change+0x1d0>)
 80058f2:	781b      	ldrb	r3, [r3, #0]
 80058f4:	3b01      	subs	r3, #1
 80058f6:	2b01      	cmp	r3, #1
 80058f8:	d80d      	bhi.n	8005916 <control_mode_change+0x62>
				case KEYBOARD_CTRL_MODE:
				case REMOTE_CTRL_MODE:
					control_mode = SBC_CTRL_MODE;
 80058fa:	4b62      	ldr	r3, [pc, #392]	@ (8005a84 <control_mode_change+0x1d0>)
 80058fc:	2203      	movs	r2, #3
 80058fe:	701a      	strb	r2, [r3, #0]
					temp_msg = control_sbc;
 8005900:	2305      	movs	r3, #5
 8005902:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005904:	4b60      	ldr	r3, [pc, #384]	@ (8005a88 <control_mode_change+0x1d4>)
 8005906:	6818      	ldr	r0, [r3, #0]
 8005908:	f107 010f 	add.w	r1, r7, #15
 800590c:	2300      	movs	r3, #0
 800590e:	2200      	movs	r2, #0
 8005910:	f011 fe7e 	bl	8017610 <xQueueGenericSend>
					break;
 8005914:	e005      	b.n	8005922 <control_mode_change+0x6e>
				default:
					last_trig_time = HAL_GetTick();
 8005916:	f005 fb9f 	bl	800b058 <HAL_GetTick>
 800591a:	4603      	mov	r3, r0
 800591c:	4a58      	ldr	r2, [pc, #352]	@ (8005a80 <control_mode_change+0x1cc>)
 800591e:	6013      	str	r3, [r2, #0]
					break;
 8005920:	bf00      	nop
			if (HAL_GetTick() - last_trig_time > 1000) {
 8005922:	e0a7      	b.n	8005a74 <control_mode_change+0x1c0>
				}
			}
		} else {
			last_trig_time = HAL_GetTick();
 8005924:	f005 fb98 	bl	800b058 <HAL_GetTick>
 8005928:	4603      	mov	r3, r0
 800592a:	4a55      	ldr	r2, [pc, #340]	@ (8005a80 <control_mode_change+0x1cc>)
 800592c:	6013      	str	r3, [r2, #0]
			break;
		default:
			break;
		}
	}
}
 800592e:	e0a1      	b.n	8005a74 <control_mode_change+0x1c0>
		switch (control_mode) {
 8005930:	4b54      	ldr	r3, [pc, #336]	@ (8005a84 <control_mode_change+0x1d0>)
 8005932:	781b      	ldrb	r3, [r3, #0]
 8005934:	2b03      	cmp	r3, #3
 8005936:	d052      	beq.n	80059de <control_mode_change+0x12a>
 8005938:	2b03      	cmp	r3, #3
 800593a:	f300 8094 	bgt.w	8005a66 <control_mode_change+0x1b2>
 800593e:	2b01      	cmp	r3, #1
 8005940:	d002      	beq.n	8005948 <control_mode_change+0x94>
 8005942:	2b02      	cmp	r3, #2
 8005944:	d026      	beq.n	8005994 <control_mode_change+0xe0>
			break;
 8005946:	e08e      	b.n	8005a66 <control_mode_change+0x1b2>
			if (left_dial_input < -330) {
 8005948:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800594c:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 8005950:	da1a      	bge.n	8005988 <control_mode_change+0xd4>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005952:	f005 fb81 	bl	800b058 <HAL_GetTick>
 8005956:	4602      	mov	r2, r0
 8005958:	4b49      	ldr	r3, [pc, #292]	@ (8005a80 <control_mode_change+0x1cc>)
 800595a:	681b      	ldr	r3, [r3, #0]
 800595c:	1ad3      	subs	r3, r2, r3
 800595e:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005962:	f240 8082 	bls.w	8005a6a <control_mode_change+0x1b6>
					control_mode = REMOTE_CTRL_MODE;
 8005966:	4b47      	ldr	r3, [pc, #284]	@ (8005a84 <control_mode_change+0x1d0>)
 8005968:	2202      	movs	r2, #2
 800596a:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 800596c:	2304      	movs	r3, #4
 800596e:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005970:	4b45      	ldr	r3, [pc, #276]	@ (8005a88 <control_mode_change+0x1d4>)
 8005972:	6818      	ldr	r0, [r3, #0]
 8005974:	f107 010f 	add.w	r1, r7, #15
 8005978:	2300      	movs	r3, #0
 800597a:	2200      	movs	r2, #0
 800597c:	f011 fe48 	bl	8017610 <xQueueGenericSend>
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005980:	4b42      	ldr	r3, [pc, #264]	@ (8005a8c <control_mode_change+0x1d8>)
 8005982:	2200      	movs	r2, #0
 8005984:	701a      	strb	r2, [r3, #0]
			break;
 8005986:	e070      	b.n	8005a6a <control_mode_change+0x1b6>
				last_trig_time = HAL_GetTick();
 8005988:	f005 fb66 	bl	800b058 <HAL_GetTick>
 800598c:	4603      	mov	r3, r0
 800598e:	4a3c      	ldr	r2, [pc, #240]	@ (8005a80 <control_mode_change+0x1cc>)
 8005990:	6013      	str	r3, [r2, #0]
			break;
 8005992:	e06a      	b.n	8005a6a <control_mode_change+0x1b6>
			if (left_dial_input > 330) {
 8005994:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005998:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 800599c:	dd19      	ble.n	80059d2 <control_mode_change+0x11e>
				if (HAL_GetTick() - last_trig_time > 1000) {
 800599e:	f005 fb5b 	bl	800b058 <HAL_GetTick>
 80059a2:	4602      	mov	r2, r0
 80059a4:	4b36      	ldr	r3, [pc, #216]	@ (8005a80 <control_mode_change+0x1cc>)
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	1ad3      	subs	r3, r2, r3
 80059aa:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80059ae:	d95e      	bls.n	8005a6e <control_mode_change+0x1ba>
					control_mode = KEYBOARD_CTRL_MODE;
 80059b0:	4b34      	ldr	r3, [pc, #208]	@ (8005a84 <control_mode_change+0x1d0>)
 80059b2:	2201      	movs	r2, #1
 80059b4:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 80059b6:	2303      	movs	r3, #3
 80059b8:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 80059ba:	4b34      	ldr	r3, [pc, #208]	@ (8005a8c <control_mode_change+0x1d8>)
 80059bc:	2200      	movs	r2, #0
 80059be:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80059c0:	4b31      	ldr	r3, [pc, #196]	@ (8005a88 <control_mode_change+0x1d4>)
 80059c2:	6818      	ldr	r0, [r3, #0]
 80059c4:	f107 010f 	add.w	r1, r7, #15
 80059c8:	2300      	movs	r3, #0
 80059ca:	2200      	movs	r2, #0
 80059cc:	f011 fe20 	bl	8017610 <xQueueGenericSend>
			break;
 80059d0:	e04d      	b.n	8005a6e <control_mode_change+0x1ba>
				last_trig_time = HAL_GetTick();
 80059d2:	f005 fb41 	bl	800b058 <HAL_GetTick>
 80059d6:	4603      	mov	r3, r0
 80059d8:	4a29      	ldr	r2, [pc, #164]	@ (8005a80 <control_mode_change+0x1cc>)
 80059da:	6013      	str	r3, [r2, #0]
			break;
 80059dc:	e047      	b.n	8005a6e <control_mode_change+0x1ba>
			if (left_dial_input < -330) {
 80059de:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80059e2:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80059e6:	da19      	bge.n	8005a1c <control_mode_change+0x168>
				if (HAL_GetTick() - last_trig_time > 1000) {
 80059e8:	f005 fb36 	bl	800b058 <HAL_GetTick>
 80059ec:	4602      	mov	r2, r0
 80059ee:	4b24      	ldr	r3, [pc, #144]	@ (8005a80 <control_mode_change+0x1cc>)
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	1ad3      	subs	r3, r2, r3
 80059f4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80059f8:	d93b      	bls.n	8005a72 <control_mode_change+0x1be>
					control_mode = REMOTE_CTRL_MODE;
 80059fa:	4b22      	ldr	r3, [pc, #136]	@ (8005a84 <control_mode_change+0x1d0>)
 80059fc:	2202      	movs	r2, #2
 80059fe:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8005a00:	2304      	movs	r3, #4
 8005a02:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005a04:	4b21      	ldr	r3, [pc, #132]	@ (8005a8c <control_mode_change+0x1d8>)
 8005a06:	2200      	movs	r2, #0
 8005a08:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005a0a:	4b1f      	ldr	r3, [pc, #124]	@ (8005a88 <control_mode_change+0x1d4>)
 8005a0c:	6818      	ldr	r0, [r3, #0]
 8005a0e:	f107 010f 	add.w	r1, r7, #15
 8005a12:	2300      	movs	r3, #0
 8005a14:	2200      	movs	r2, #0
 8005a16:	f011 fdfb 	bl	8017610 <xQueueGenericSend>
			break;
 8005a1a:	e02a      	b.n	8005a72 <control_mode_change+0x1be>
			} else if (left_dial_input > 330) {
 8005a1c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8005a20:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8005a24:	dd19      	ble.n	8005a5a <control_mode_change+0x1a6>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8005a26:	f005 fb17 	bl	800b058 <HAL_GetTick>
 8005a2a:	4602      	mov	r2, r0
 8005a2c:	4b14      	ldr	r3, [pc, #80]	@ (8005a80 <control_mode_change+0x1cc>)
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	1ad3      	subs	r3, r2, r3
 8005a32:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005a36:	d91c      	bls.n	8005a72 <control_mode_change+0x1be>
					control_mode = KEYBOARD_CTRL_MODE;
 8005a38:	4b12      	ldr	r3, [pc, #72]	@ (8005a84 <control_mode_change+0x1d0>)
 8005a3a:	2201      	movs	r2, #1
 8005a3c:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 8005a3e:	2303      	movs	r3, #3
 8005a40:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8005a42:	4b12      	ldr	r3, [pc, #72]	@ (8005a8c <control_mode_change+0x1d8>)
 8005a44:	2200      	movs	r2, #0
 8005a46:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8005a48:	4b0f      	ldr	r3, [pc, #60]	@ (8005a88 <control_mode_change+0x1d4>)
 8005a4a:	6818      	ldr	r0, [r3, #0]
 8005a4c:	f107 010f 	add.w	r1, r7, #15
 8005a50:	2300      	movs	r3, #0
 8005a52:	2200      	movs	r2, #0
 8005a54:	f011 fddc 	bl	8017610 <xQueueGenericSend>
			break;
 8005a58:	e00b      	b.n	8005a72 <control_mode_change+0x1be>
				last_trig_time = HAL_GetTick();
 8005a5a:	f005 fafd 	bl	800b058 <HAL_GetTick>
 8005a5e:	4603      	mov	r3, r0
 8005a60:	4a07      	ldr	r2, [pc, #28]	@ (8005a80 <control_mode_change+0x1cc>)
 8005a62:	6013      	str	r3, [r2, #0]
			break;
 8005a64:	e005      	b.n	8005a72 <control_mode_change+0x1be>
			break;
 8005a66:	bf00      	nop
 8005a68:	e004      	b.n	8005a74 <control_mode_change+0x1c0>
			break;
 8005a6a:	bf00      	nop
 8005a6c:	e002      	b.n	8005a74 <control_mode_change+0x1c0>
			break;
 8005a6e:	bf00      	nop
 8005a70:	e000      	b.n	8005a74 <control_mode_change+0x1c0>
			break;
 8005a72:	bf00      	nop
}
 8005a74:	bf00      	nop
 8005a76:	3710      	adds	r7, #16
 8005a78:	46bd      	mov	sp, r7
 8005a7a:	bd80      	pop	{r7, pc}
 8005a7c:	20000808 	.word	0x20000808
 8005a80:	20003540 	.word	0x20003540
 8005a84:	20000008 	.word	0x20000008
 8005a88:	200037c4 	.word	0x200037c4
 8005a8c:	2000000a 	.word	0x2000000a

08005a90 <gimbal_turn_ang>:

//ADDs angle to gimbal ctrl
void gimbal_turn_ang(float pit_radians, float yaw_radians) {
 8005a90:	b480      	push	{r7}
 8005a92:	b085      	sub	sp, #20
 8005a94:	af00      	add	r7, sp, #0
 8005a96:	ed87 0a01 	vstr	s0, [r7, #4]
 8005a9a:	edc7 0a00 	vstr	s1, [r7]
//		yaw_radians -= 2 * PI;
//	}
//	while (yaw_radians < -PI) {
//		yaw_radians += 2 * PI;
//	}
	float temp_yaw = gimbal_ctrl_data.yaw + yaw_radians;
 8005a9e:	4b20      	ldr	r3, [pc, #128]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005aa0:	edd3 7a01 	vldr	s15, [r3, #4]
 8005aa4:	ed97 7a00 	vldr	s14, [r7]
 8005aa8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005aac:	edc7 7a03 	vstr	s15, [r7, #12]
	temp_yaw = (temp_yaw > PI) ? (temp_yaw - 2 * PI) : (temp_yaw < -PI) ? (temp_yaw + 2* PI) : temp_yaw;
 8005ab0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ab4:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 8005b24 <gimbal_turn_ang+0x94>
 8005ab8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ac0:	dd06      	ble.n	8005ad0 <gimbal_turn_ang+0x40>
 8005ac2:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ac6:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8005b28 <gimbal_turn_ang+0x98>
 8005aca:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005ace:	e011      	b.n	8005af4 <gimbal_turn_ang+0x64>
 8005ad0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ad4:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 8005b2c <gimbal_turn_ang+0x9c>
 8005ad8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005adc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ae0:	d506      	bpl.n	8005af0 <gimbal_turn_ang+0x60>
 8005ae2:	edd7 7a03 	vldr	s15, [r7, #12]
 8005ae6:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 8005b28 <gimbal_turn_ang+0x98>
 8005aea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005aee:	e001      	b.n	8005af4 <gimbal_turn_ang+0x64>
 8005af0:	edd7 7a03 	vldr	s15, [r7, #12]
 8005af4:	edc7 7a03 	vstr	s15, [r7, #12]
	gimbal_ctrl_data.pitch += pit_radians;
 8005af8:	4b09      	ldr	r3, [pc, #36]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005afa:	ed93 7a00 	vldr	s14, [r3]
 8005afe:	edd7 7a01 	vldr	s15, [r7, #4]
 8005b02:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005b06:	4b06      	ldr	r3, [pc, #24]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005b08:	edc3 7a00 	vstr	s15, [r3]
	gimbal_ctrl_data.yaw = temp_yaw;
 8005b0c:	4a04      	ldr	r2, [pc, #16]	@ (8005b20 <gimbal_turn_ang+0x90>)
 8005b0e:	68fb      	ldr	r3, [r7, #12]
 8005b10:	6053      	str	r3, [r2, #4]
}
 8005b12:	bf00      	nop
 8005b14:	3714      	adds	r7, #20
 8005b16:	46bd      	mov	sp, r7
 8005b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b1c:	4770      	bx	lr
 8005b1e:	bf00      	nop
 8005b20:	200034e8 	.word	0x200034e8
 8005b24:	40490fdb 	.word	0x40490fdb
 8005b28:	40c90fdb 	.word	0x40c90fdb
 8005b2c:	c0490fdb 	.word	0xc0490fdb

08005b30 <set_gear>:
	}
	gimbal_ctrl_data.pitch = pit_radians;
	gimbal_ctrl_data.yaw = yaw_radians;
}

void set_gear() {
 8005b30:	b480      	push	{r7}
 8005b32:	af00      	add	r7, sp, #0
	switch (gear_speed.curr_gear) {
 8005b34:	4b34      	ldr	r3, [pc, #208]	@ (8005c08 <set_gear+0xd8>)
 8005b36:	781b      	ldrb	r3, [r3, #0]
 8005b38:	3b01      	subs	r3, #1
 8005b3a:	2b05      	cmp	r3, #5
 8005b3c:	d852      	bhi.n	8005be4 <set_gear+0xb4>
 8005b3e:	a201      	add	r2, pc, #4	@ (adr r2, 8005b44 <set_gear+0x14>)
 8005b40:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b44:	08005b5d 	.word	0x08005b5d
 8005b48:	08005b73 	.word	0x08005b73
 8005b4c:	08005b89 	.word	0x08005b89
 8005b50:	08005ba3 	.word	0x08005ba3
 8005b54:	08005bb7 	.word	0x08005bb7
 8005b58:	08005bd1 	.word	0x08005bd1
	case 1:
		gear_speed.spin_mult = GEAR1_YAW_MULT;
 8005b5c:	4b2a      	ldr	r3, [pc, #168]	@ (8005c08 <set_gear+0xd8>)
 8005b5e:	4a2b      	ldr	r2, [pc, #172]	@ (8005c0c <set_gear+0xdc>)
 8005b60:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR1_SPEED_MULT;
 8005b62:	4b29      	ldr	r3, [pc, #164]	@ (8005c08 <set_gear+0xd8>)
 8005b64:	4a29      	ldr	r2, [pc, #164]	@ (8005c0c <set_gear+0xdc>)
 8005b66:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR1_ACCEL_MULT;
 8005b68:	4b27      	ldr	r3, [pc, #156]	@ (8005c08 <set_gear+0xd8>)
 8005b6a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b6e:	60da      	str	r2, [r3, #12]
		break;
 8005b70:	e045      	b.n	8005bfe <set_gear+0xce>
	case 2:
		gear_speed.spin_mult = GEAR2_YAW_MULT;
 8005b72:	4b25      	ldr	r3, [pc, #148]	@ (8005c08 <set_gear+0xd8>)
 8005b74:	4a26      	ldr	r2, [pc, #152]	@ (8005c10 <set_gear+0xe0>)
 8005b76:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR2_SPEED_MULT;
 8005b78:	4b23      	ldr	r3, [pc, #140]	@ (8005c08 <set_gear+0xd8>)
 8005b7a:	4a25      	ldr	r2, [pc, #148]	@ (8005c10 <set_gear+0xe0>)
 8005b7c:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR2_ACCEL_MULT;
 8005b7e:	4b22      	ldr	r3, [pc, #136]	@ (8005c08 <set_gear+0xd8>)
 8005b80:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b84:	60da      	str	r2, [r3, #12]
		break;
 8005b86:	e03a      	b.n	8005bfe <set_gear+0xce>
	case 3:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005b88:	4b1f      	ldr	r3, [pc, #124]	@ (8005c08 <set_gear+0xd8>)
 8005b8a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b8e:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005b90:	4b1d      	ldr	r3, [pc, #116]	@ (8005c08 <set_gear+0xd8>)
 8005b92:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b96:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005b98:	4b1b      	ldr	r3, [pc, #108]	@ (8005c08 <set_gear+0xd8>)
 8005b9a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005b9e:	60da      	str	r2, [r3, #12]
		break;
 8005ba0:	e02d      	b.n	8005bfe <set_gear+0xce>
	case 4:
		gear_speed.spin_mult = GEAR4_YAW_MULT;
 8005ba2:	4b19      	ldr	r3, [pc, #100]	@ (8005c08 <set_gear+0xd8>)
 8005ba4:	4a1b      	ldr	r2, [pc, #108]	@ (8005c14 <set_gear+0xe4>)
 8005ba6:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR4_SPEED_MULT;
 8005ba8:	4b17      	ldr	r3, [pc, #92]	@ (8005c08 <set_gear+0xd8>)
 8005baa:	4a1b      	ldr	r2, [pc, #108]	@ (8005c18 <set_gear+0xe8>)
 8005bac:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR4_ACCEL_MULT;
 8005bae:	4b16      	ldr	r3, [pc, #88]	@ (8005c08 <set_gear+0xd8>)
 8005bb0:	4a18      	ldr	r2, [pc, #96]	@ (8005c14 <set_gear+0xe4>)
 8005bb2:	60da      	str	r2, [r3, #12]
		break;
 8005bb4:	e023      	b.n	8005bfe <set_gear+0xce>
	case 5:
		gear_speed.spin_mult = GEAR5_YAW_MULT;
 8005bb6:	4b14      	ldr	r3, [pc, #80]	@ (8005c08 <set_gear+0xd8>)
 8005bb8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8005bbc:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR5_SPEED_MULT;
 8005bbe:	4b12      	ldr	r3, [pc, #72]	@ (8005c08 <set_gear+0xd8>)
 8005bc0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8005bc4:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR5_ACCEL_MULT;
 8005bc6:	4b10      	ldr	r3, [pc, #64]	@ (8005c08 <set_gear+0xd8>)
 8005bc8:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8005bcc:	60da      	str	r2, [r3, #12]
		break;
 8005bce:	e016      	b.n	8005bfe <set_gear+0xce>
	case 6:
		gear_speed.spin_mult = GEAR6_YAW_MULT;
 8005bd0:	4b0d      	ldr	r3, [pc, #52]	@ (8005c08 <set_gear+0xd8>)
 8005bd2:	4a12      	ldr	r2, [pc, #72]	@ (8005c1c <set_gear+0xec>)
 8005bd4:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR6_SPEED_MULT;
 8005bd6:	4b0c      	ldr	r3, [pc, #48]	@ (8005c08 <set_gear+0xd8>)
 8005bd8:	4a11      	ldr	r2, [pc, #68]	@ (8005c20 <set_gear+0xf0>)
 8005bda:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR6_ACCEL_MULT;
 8005bdc:	4b0a      	ldr	r3, [pc, #40]	@ (8005c08 <set_gear+0xd8>)
 8005bde:	4a11      	ldr	r2, [pc, #68]	@ (8005c24 <set_gear+0xf4>)
 8005be0:	60da      	str	r2, [r3, #12]
		break;
 8005be2:	e00c      	b.n	8005bfe <set_gear+0xce>
	default:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8005be4:	4b08      	ldr	r3, [pc, #32]	@ (8005c08 <set_gear+0xd8>)
 8005be6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bea:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8005bec:	4b06      	ldr	r3, [pc, #24]	@ (8005c08 <set_gear+0xd8>)
 8005bee:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bf2:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8005bf4:	4b04      	ldr	r3, [pc, #16]	@ (8005c08 <set_gear+0xd8>)
 8005bf6:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8005bfa:	60da      	str	r2, [r3, #12]
		break;
 8005bfc:	bf00      	nop
	}

}
 8005bfe:	bf00      	nop
 8005c00:	46bd      	mov	sp, r7
 8005c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c06:	4770      	bx	lr
 8005c08:	2000352c 	.word	0x2000352c
 8005c0c:	3e99999a 	.word	0x3e99999a
 8005c10:	3f19999a 	.word	0x3f19999a
 8005c14:	3f99999a 	.word	0x3f99999a
 8005c18:	3fb33333 	.word	0x3fb33333
 8005c1c:	40400000 	.word	0x40400000
 8005c20:	40a00000 	.word	0x40a00000
 8005c24:	41200000 	.word	0x41200000

08005c28 <chassis_yaw_pid_init>:

void chassis_yaw_pid_init() {
 8005c28:	b480      	push	{r7}
 8005c2a:	af00      	add	r7, sp, #0
	yaw_pid_data.kp = CHASSIS_YAW_KP;
 8005c2c:	4b09      	ldr	r3, [pc, #36]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c2e:	4a0a      	ldr	r2, [pc, #40]	@ (8005c58 <chassis_yaw_pid_init+0x30>)
 8005c30:	601a      	str	r2, [r3, #0]
	yaw_pid_data.ki = CHASSIS_YAW_KI;
 8005c32:	4b08      	ldr	r3, [pc, #32]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c34:	f04f 0200 	mov.w	r2, #0
 8005c38:	605a      	str	r2, [r3, #4]
	yaw_pid_data.kd = CHASSIS_YAW_KD;
 8005c3a:	4b06      	ldr	r3, [pc, #24]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c3c:	f04f 0200 	mov.w	r2, #0
 8005c40:	609a      	str	r2, [r3, #8]
	yaw_pid_data.max_out = CHASSIS_YAW_MAX_RPM;
 8005c42:	4b04      	ldr	r3, [pc, #16]	@ (8005c54 <chassis_yaw_pid_init+0x2c>)
 8005c44:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 8005c48:	61da      	str	r2, [r3, #28]
}
 8005c4a:	bf00      	nop
 8005c4c:	46bd      	mov	sp, r7
 8005c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c52:	4770      	bx	lr
 8005c54:	200034fc 	.word	0x200034fc
 8005c58:	3f19999a 	.word	0x3f19999a

08005c5c <keyboard_control_input>:
extern int g_spinspin_mode;
static float curr_spinspin = 0;



void keyboard_control_input() {
 8005c5c:	b580      	push	{r7, lr}
 8005c5e:	af00      	add	r7, sp, #0
	mouse_gimbal_input();
 8005c60:	f000 f908 	bl	8005e74 <mouse_gimbal_input>
	keyboard_chassis_input();
 8005c64:	f000 f868 	bl	8005d38 <keyboard_chassis_input>
	mouse_launcher_control_input();
 8005c68:	f000 f97a 	bl	8005f60 <mouse_launcher_control_input>
}
 8005c6c:	bf00      	nop
 8005c6e:	bd80      	pop	{r7, pc}

08005c70 <keyboard_gear_shifter>:

void keyboard_gear_shifter(speed_shift_t *gear_speed) {
 8005c70:	b580      	push	{r7, lr}
 8005c72:	b082      	sub	sp, #8
 8005c74:	af00      	add	r7, sp, #0
 8005c76:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	if ((g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT)
 8005c78:	4b2c      	ldr	r3, [pc, #176]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005c7a:	8b5b      	ldrh	r3, [r3, #26]
 8005c7c:	f003 0310 	and.w	r3, r3, #16
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	d013      	beq.n	8005cac <keyboard_gear_shifter+0x3c>
			&& (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL)) {
 8005c84:	4b29      	ldr	r3, [pc, #164]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005c86:	8b5b      	ldrh	r3, [r3, #26]
 8005c88:	f003 0320 	and.w	r3, r3, #32
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d00d      	beq.n	8005cac <keyboard_gear_shifter+0x3c>
		gear_speed->curr_gear = 3;
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	2203      	movs	r2, #3
 8005c94:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005c96:	f005 f9df 	bl	800b058 <HAL_GetTick>
 8005c9a:	4603      	mov	r3, r0
 8005c9c:	4a24      	ldr	r2, [pc, #144]	@ (8005d30 <keyboard_gear_shifter+0xc0>)
 8005c9e:	6013      	str	r3, [r2, #0]
		ctrl_press_time = HAL_GetTick();
 8005ca0:	f005 f9da 	bl	800b058 <HAL_GetTick>
 8005ca4:	4603      	mov	r3, r0
 8005ca6:	4a23      	ldr	r2, [pc, #140]	@ (8005d34 <keyboard_gear_shifter+0xc4>)
 8005ca8:	6013      	str	r3, [r2, #0]
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
		}
		ctrl_press_time = HAL_GetTick();
	}

}
 8005caa:	e03a      	b.n	8005d22 <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT) {
 8005cac:	4b1f      	ldr	r3, [pc, #124]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005cae:	8b5b      	ldrh	r3, [r3, #26]
 8005cb0:	f003 0310 	and.w	r3, r3, #16
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	d017      	beq.n	8005ce8 <keyboard_gear_shifter+0x78>
		if (HAL_GetTick() - shift_press_time > 100) {
 8005cb8:	f005 f9ce 	bl	800b058 <HAL_GetTick>
 8005cbc:	4602      	mov	r2, r0
 8005cbe:	4b1c      	ldr	r3, [pc, #112]	@ (8005d30 <keyboard_gear_shifter+0xc0>)
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	1ad3      	subs	r3, r2, r3
 8005cc4:	2b64      	cmp	r3, #100	@ 0x64
 8005cc6:	d909      	bls.n	8005cdc <keyboard_gear_shifter+0x6c>
					(gear_speed->curr_gear < 5) ? gear_speed->curr_gear + 1 : 5;
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005ccc:	2b04      	cmp	r3, #4
 8005cce:	bf28      	it	cs
 8005cd0:	2304      	movcs	r3, #4
 8005cd2:	b2db      	uxtb	r3, r3
 8005cd4:	3301      	adds	r3, #1
 8005cd6:	b2da      	uxtb	r2, r3
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8005cdc:	f005 f9bc 	bl	800b058 <HAL_GetTick>
 8005ce0:	4603      	mov	r3, r0
 8005ce2:	4a13      	ldr	r2, [pc, #76]	@ (8005d30 <keyboard_gear_shifter+0xc0>)
 8005ce4:	6013      	str	r3, [r2, #0]
}
 8005ce6:	e01c      	b.n	8005d22 <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL) {
 8005ce8:	4b10      	ldr	r3, [pc, #64]	@ (8005d2c <keyboard_gear_shifter+0xbc>)
 8005cea:	8b5b      	ldrh	r3, [r3, #26]
 8005cec:	f003 0320 	and.w	r3, r3, #32
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	d016      	beq.n	8005d22 <keyboard_gear_shifter+0xb2>
		if (HAL_GetTick() - ctrl_press_time > 100) {
 8005cf4:	f005 f9b0 	bl	800b058 <HAL_GetTick>
 8005cf8:	4602      	mov	r2, r0
 8005cfa:	4b0e      	ldr	r3, [pc, #56]	@ (8005d34 <keyboard_gear_shifter+0xc4>)
 8005cfc:	681b      	ldr	r3, [r3, #0]
 8005cfe:	1ad3      	subs	r3, r2, r3
 8005d00:	2b64      	cmp	r3, #100	@ 0x64
 8005d02:	d909      	bls.n	8005d18 <keyboard_gear_shifter+0xa8>
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8005d08:	2b02      	cmp	r3, #2
 8005d0a:	bf38      	it	cc
 8005d0c:	2302      	movcc	r3, #2
 8005d0e:	b2db      	uxtb	r3, r3
 8005d10:	3b01      	subs	r3, #1
 8005d12:	b2da      	uxtb	r2, r3
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	701a      	strb	r2, [r3, #0]
		ctrl_press_time = HAL_GetTick();
 8005d18:	f005 f99e 	bl	800b058 <HAL_GetTick>
 8005d1c:	4603      	mov	r3, r0
 8005d1e:	4a05      	ldr	r2, [pc, #20]	@ (8005d34 <keyboard_gear_shifter+0xc4>)
 8005d20:	6013      	str	r3, [r2, #0]
}
 8005d22:	bf00      	nop
 8005d24:	3708      	adds	r7, #8
 8005d26:	46bd      	mov	sp, r7
 8005d28:	bd80      	pop	{r7, pc}
 8005d2a:	bf00      	nop
 8005d2c:	20000808 	.word	0x20000808
 8005d30:	20003544 	.word	0x20003544
 8005d34:	20003548 	.word	0x20003548

08005d38 <keyboard_chassis_input>:

void keyboard_chassis_input() {
 8005d38:	b580      	push	{r7, lr}
 8005d3a:	b084      	sub	sp, #16
 8005d3c:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8005d3e:	4b49      	ldr	r3, [pc, #292]	@ (8005e64 <keyboard_chassis_input+0x12c>)
 8005d40:	781b      	ldrb	r3, [r3, #0]
 8005d42:	2b00      	cmp	r3, #0
 8005d44:	d104      	bne.n	8005d50 <keyboard_chassis_input+0x18>
 8005d46:	4b48      	ldr	r3, [pc, #288]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005d48:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005d4c:	2b02      	cmp	r3, #2
 8005d4e:	d00f      	beq.n	8005d70 <keyboard_chassis_input+0x38>
		chassis_ctrl_data.enabled = 0;
 8005d50:	4b46      	ldr	r3, [pc, #280]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d52:	2200      	movs	r2, #0
 8005d54:	751a      	strb	r2, [r3, #20]
		chassis_ctrl_data.horizontal = 0;
 8005d56:	4b45      	ldr	r3, [pc, #276]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d58:	f04f 0200 	mov.w	r2, #0
 8005d5c:	605a      	str	r2, [r3, #4]
		chassis_ctrl_data.forward = 0;
 8005d5e:	4b43      	ldr	r3, [pc, #268]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d60:	f04f 0200 	mov.w	r2, #0
 8005d64:	601a      	str	r2, [r3, #0]
		chassis_ctrl_data.yaw = 0;
 8005d66:	4b41      	ldr	r3, [pc, #260]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d68:	f04f 0200 	mov.w	r2, #0
 8005d6c:	609a      	str	r2, [r3, #8]
			chassis_ctrl_data.horizontal = horizontal_input;
			chassis_ctrl_data.forward = forward_input;
			chassis_ctrl_data.yaw = yaw_input;
		}
	}
}
 8005d6e:	e075      	b.n	8005e5c <keyboard_chassis_input+0x124>
		if (g_remote_cmd.right_switch == ge_RSW_ALL_ON) {
 8005d70:	4b3d      	ldr	r3, [pc, #244]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005d72:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005d76:	2b02      	cmp	r3, #2
 8005d78:	d170      	bne.n	8005e5c <keyboard_chassis_input+0x124>
			chassis_ctrl_data.enabled = 1;
 8005d7a:	4b3c      	ldr	r3, [pc, #240]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8005d80:	f04f 0300 	mov.w	r3, #0
 8005d84:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 8005d86:	f04f 0300 	mov.w	r3, #0
 8005d8a:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 8005d8c:	f04f 0300 	mov.w	r3, #0
 8005d90:	607b      	str	r3, [r7, #4]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_Q) {
 8005d92:	4b35      	ldr	r3, [pc, #212]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005d94:	8b5b      	ldrh	r3, [r3, #26]
 8005d96:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d003      	beq.n	8005da6 <keyboard_chassis_input+0x6e>
				g_spinspin_mode = 1;
 8005d9e:	4b34      	ldr	r3, [pc, #208]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005da0:	2201      	movs	r2, #1
 8005da2:	601a      	str	r2, [r3, #0]
 8005da4:	e008      	b.n	8005db8 <keyboard_chassis_input+0x80>
			} else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_E) {
 8005da6:	4b30      	ldr	r3, [pc, #192]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005da8:	8b5b      	ldrh	r3, [r3, #26]
 8005daa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	d002      	beq.n	8005db8 <keyboard_chassis_input+0x80>
				g_spinspin_mode = 0;
 8005db2:	4b2f      	ldr	r3, [pc, #188]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005db4:	2200      	movs	r2, #0
 8005db6:	601a      	str	r2, [r3, #0]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_W) {
 8005db8:	4b2b      	ldr	r3, [pc, #172]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005dba:	8b5b      	ldrh	r3, [r3, #26]
 8005dbc:	f003 0301 	and.w	r3, r3, #1
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d007      	beq.n	8005dd4 <keyboard_chassis_input+0x9c>
				forward_input += KEYBD_MAX_SPD;
 8005dc4:	edd7 7a02 	vldr	s15, [r7, #8]
 8005dc8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005dcc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005dd0:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_S) {
 8005dd4:	4b24      	ldr	r3, [pc, #144]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005dd6:	8b5b      	ldrh	r3, [r3, #26]
 8005dd8:	f003 0302 	and.w	r3, r3, #2
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d007      	beq.n	8005df0 <keyboard_chassis_input+0xb8>
				forward_input -= KEYBD_MAX_SPD;
 8005de0:	edd7 7a02 	vldr	s15, [r7, #8]
 8005de4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005de8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005dec:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_A) {
 8005df0:	4b1d      	ldr	r3, [pc, #116]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005df2:	8b5b      	ldrh	r3, [r3, #26]
 8005df4:	f003 0304 	and.w	r3, r3, #4
 8005df8:	2b00      	cmp	r3, #0
 8005dfa:	d007      	beq.n	8005e0c <keyboard_chassis_input+0xd4>
				horizontal_input -= KEYBD_MAX_SPD;
 8005dfc:	edd7 7a03 	vldr	s15, [r7, #12]
 8005e00:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005e04:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005e08:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_D) {
 8005e0c:	4b16      	ldr	r3, [pc, #88]	@ (8005e68 <keyboard_chassis_input+0x130>)
 8005e0e:	8b5b      	ldrh	r3, [r3, #26]
 8005e10:	f003 0308 	and.w	r3, r3, #8
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	d007      	beq.n	8005e28 <keyboard_chassis_input+0xf0>
				horizontal_input += KEYBD_MAX_SPD;
 8005e18:	edd7 7a03 	vldr	s15, [r7, #12]
 8005e1c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005e20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e24:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_spinspin_mode) {
 8005e28:	4b11      	ldr	r3, [pc, #68]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d008      	beq.n	8005e42 <keyboard_chassis_input+0x10a>
				yaw_input = g_spinspin_mode * CHASSIS_SPINSPIN_MAX;
 8005e30:	4b0f      	ldr	r3, [pc, #60]	@ (8005e70 <keyboard_chassis_input+0x138>)
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	ee07 3a90 	vmov	s15, r3
 8005e38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e3c:	edc7 7a01 	vstr	s15, [r7, #4]
 8005e40:	e003      	b.n	8005e4a <keyboard_chassis_input+0x112>
				yaw_input = chassis_center_yaw();
 8005e42:	f7ff fcbd 	bl	80057c0 <chassis_center_yaw>
 8005e46:	ed87 0a01 	vstr	s0, [r7, #4]
			chassis_ctrl_data.horizontal = horizontal_input;
 8005e4a:	4a08      	ldr	r2, [pc, #32]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005e4c:	68fb      	ldr	r3, [r7, #12]
 8005e4e:	6053      	str	r3, [r2, #4]
			chassis_ctrl_data.forward = forward_input;
 8005e50:	4a06      	ldr	r2, [pc, #24]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005e52:	68bb      	ldr	r3, [r7, #8]
 8005e54:	6013      	str	r3, [r2, #0]
			chassis_ctrl_data.yaw = yaw_input;
 8005e56:	4a05      	ldr	r2, [pc, #20]	@ (8005e6c <keyboard_chassis_input+0x134>)
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	6093      	str	r3, [r2, #8]
}
 8005e5c:	bf00      	nop
 8005e5e:	3710      	adds	r7, #16
 8005e60:	46bd      	mov	sp, r7
 8005e62:	bd80      	pop	{r7, pc}
 8005e64:	20000009 	.word	0x20000009
 8005e68:	20000808 	.word	0x20000808
 8005e6c:	200034c8 	.word	0x200034c8
 8005e70:	2000353c 	.word	0x2000353c

08005e74 <mouse_gimbal_input>:

void mouse_gimbal_input() {
 8005e74:	b580      	push	{r7, lr}
 8005e76:	b082      	sub	sp, #8
 8005e78:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005e7a:	4b33      	ldr	r3, [pc, #204]	@ (8005f48 <mouse_gimbal_input+0xd4>)
 8005e7c:	781b      	ldrb	r3, [r3, #0]
 8005e7e:	2b00      	cmp	r3, #0
 8005e80:	d104      	bne.n	8005e8c <mouse_gimbal_input+0x18>
 8005e82:	4b32      	ldr	r3, [pc, #200]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005e84:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005e88:	2b01      	cmp	r3, #1
 8005e8a:	d103      	bne.n	8005e94 <mouse_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8005e8c:	4b30      	ldr	r3, [pc, #192]	@ (8005f50 <mouse_gimbal_input+0xdc>)
 8005e8e:	2200      	movs	r2, #0
 8005e90:	735a      	strb	r2, [r3, #13]
 8005e92:	e055      	b.n	8005f40 <mouse_gimbal_input+0xcc>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8005e94:	4b2e      	ldr	r3, [pc, #184]	@ (8005f50 <mouse_gimbal_input+0xdc>)
 8005e96:	2201      	movs	r2, #1
 8005e98:	735a      	strb	r2, [r3, #13]
//		float pitch_mouse = (float) g_remote_cmd.mouse_y * MOUSE_Y_INVERT
//				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
//		float yaw_mouse = (float) g_remote_cmd.mouse_x * MOUSE_X_INVERT
//				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;

		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8005e9a:	4b2c      	ldr	r3, [pc, #176]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005e9c:	695b      	ldr	r3, [r3, #20]
 8005e9e:	ee07 3a90 	vmov	s15, r3
 8005ea2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
 8005ea6:	eef1 7a67 	vneg.f32	s15, s15
 8005eaa:	ee17 3a90 	vmov	r3, s15
 8005eae:	4618      	mov	r0, r3
 8005eb0:	f7fa fb4a 	bl	8000548 <__aeabi_f2d>
 8005eb4:	f04f 0200 	mov.w	r2, #0
 8005eb8:	4b26      	ldr	r3, [pc, #152]	@ (8005f54 <mouse_gimbal_input+0xe0>)
 8005eba:	f7fa fb9d 	bl	80005f8 <__aeabi_dmul>
 8005ebe:	4602      	mov	r2, r0
 8005ec0:	460b      	mov	r3, r1
 8005ec2:	4610      	mov	r0, r2
 8005ec4:	4619      	mov	r1, r3
 8005ec6:	f04f 0200 	mov.w	r2, #0
 8005eca:	4b23      	ldr	r3, [pc, #140]	@ (8005f58 <mouse_gimbal_input+0xe4>)
 8005ecc:	f7fa fcbe 	bl	800084c <__aeabi_ddiv>
 8005ed0:	4602      	mov	r2, r0
 8005ed2:	460b      	mov	r3, r1
		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8005ed4:	4610      	mov	r0, r2
 8005ed6:	4619      	mov	r1, r3
 8005ed8:	f7fa fe86 	bl	8000be8 <__aeabi_d2f>
 8005edc:	4603      	mov	r3, r0
 8005ede:	607b      	str	r3, [r7, #4]
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8005ee0:	4b1a      	ldr	r3, [pc, #104]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005ee2:	691b      	ldr	r3, [r3, #16]
 8005ee4:	ee07 3a90 	vmov	s15, r3
 8005ee8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;
 8005eec:	eef1 7a67 	vneg.f32	s15, s15
 8005ef0:	ee17 3a90 	vmov	r3, s15
 8005ef4:	4618      	mov	r0, r3
 8005ef6:	f7fa fb27 	bl	8000548 <__aeabi_f2d>
 8005efa:	f04f 0200 	mov.w	r2, #0
 8005efe:	4b17      	ldr	r3, [pc, #92]	@ (8005f5c <mouse_gimbal_input+0xe8>)
 8005f00:	f7fa fb7a 	bl	80005f8 <__aeabi_dmul>
 8005f04:	4602      	mov	r2, r0
 8005f06:	460b      	mov	r3, r1
 8005f08:	4610      	mov	r0, r2
 8005f0a:	4619      	mov	r1, r3
 8005f0c:	f04f 0200 	mov.w	r2, #0
 8005f10:	4b11      	ldr	r3, [pc, #68]	@ (8005f58 <mouse_gimbal_input+0xe4>)
 8005f12:	f7fa fc9b 	bl	800084c <__aeabi_ddiv>
 8005f16:	4602      	mov	r2, r0
 8005f18:	460b      	mov	r3, r1
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8005f1a:	4610      	mov	r0, r2
 8005f1c:	4619      	mov	r1, r3
 8005f1e:	f7fa fe63 	bl	8000be8 <__aeabi_d2f>
 8005f22:	4603      	mov	r3, r0
 8005f24:	603b      	str	r3, [r7, #0]
		g_remote_cmd.mouse_vert = 0;
 8005f26:	4b09      	ldr	r3, [pc, #36]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005f28:	2200      	movs	r2, #0
 8005f2a:	615a      	str	r2, [r3, #20]
		g_remote_cmd.mouse_hori = 0;
 8005f2c:	4b07      	ldr	r3, [pc, #28]	@ (8005f4c <mouse_gimbal_input+0xd8>)
 8005f2e:	2200      	movs	r2, #0
 8005f30:	611a      	str	r2, [r3, #16]
		gimbal_turn_ang(pitch_mouse, yaw_mouse);
 8005f32:	edd7 0a00 	vldr	s1, [r7]
 8005f36:	ed97 0a01 	vldr	s0, [r7, #4]
 8005f3a:	f7ff fda9 	bl	8005a90 <gimbal_turn_ang>

	}
}
 8005f3e:	bf00      	nop
 8005f40:	bf00      	nop
 8005f42:	3708      	adds	r7, #8
 8005f44:	46bd      	mov	sp, r7
 8005f46:	bd80      	pop	{r7, pc}
 8005f48:	20000009 	.word	0x20000009
 8005f4c:	20000808 	.word	0x20000808
 8005f50:	200034e8 	.word	0x200034e8
 8005f54:	c0240000 	.word	0xc0240000
 8005f58:	40e00000 	.word	0x40e00000
 8005f5c:	40240000 	.word	0x40240000

08005f60 <mouse_launcher_control_input>:

void mouse_launcher_control_input() {
 8005f60:	b480      	push	{r7}
 8005f62:	af00      	add	r7, sp, #0
	if (g_safety_toggle || launcher_safety_toggle
 8005f64:	4b28      	ldr	r3, [pc, #160]	@ (8006008 <mouse_launcher_control_input+0xa8>)
 8005f66:	781b      	ldrb	r3, [r3, #0]
 8005f68:	2b00      	cmp	r3, #0
 8005f6a:	d10d      	bne.n	8005f88 <mouse_launcher_control_input+0x28>
 8005f6c:	4b27      	ldr	r3, [pc, #156]	@ (800600c <mouse_launcher_control_input+0xac>)
 8005f6e:	781b      	ldrb	r3, [r3, #0]
 8005f70:	2b00      	cmp	r3, #0
 8005f72:	d109      	bne.n	8005f88 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8005f74:	4b26      	ldr	r3, [pc, #152]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005f76:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005f7a:	2b01      	cmp	r3, #1
 8005f7c:	d004      	beq.n	8005f88 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005f7e:	4b24      	ldr	r3, [pc, #144]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005f80:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005f84:	2b01      	cmp	r3, #1
 8005f86:	d016      	beq.n	8005fb6 <mouse_launcher_control_input+0x56>
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8005f88:	4b21      	ldr	r3, [pc, #132]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005f8a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8005f8e:	2b01      	cmp	r3, #1
 8005f90:	d102      	bne.n	8005f98 <mouse_launcher_control_input+0x38>
			launcher_ctrl_data.enabled = 0;
 8005f92:	4b20      	ldr	r3, [pc, #128]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005f94:	2200      	movs	r2, #0
 8005f96:	715a      	strb	r2, [r3, #5]
		}
		launcher_ctrl_data.firing = 0;
 8005f98:	4b1e      	ldr	r3, [pc, #120]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8005f9e:	4b1d      	ldr	r3, [pc, #116]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fa0:	2200      	movs	r2, #0
 8005fa2:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005fa4:	4b1a      	ldr	r3, [pc, #104]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fa6:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005faa:	2b01      	cmp	r3, #1
 8005fac:	d027      	beq.n	8005ffe <mouse_launcher_control_input+0x9e>
			launcher_safety_toggle = 0;
 8005fae:	4b17      	ldr	r3, [pc, #92]	@ (800600c <mouse_launcher_control_input+0xac>)
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	701a      	strb	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8005fb4:	e023      	b.n	8005ffe <mouse_launcher_control_input+0x9e>
		}
	} else {
		launcher_ctrl_data.enabled = 1;
 8005fb6:	4b17      	ldr	r3, [pc, #92]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fb8:	2201      	movs	r2, #1
 8005fba:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 8005fbc:	4b15      	ldr	r3, [pc, #84]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fbe:	2201      	movs	r2, #1
 8005fc0:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8005fc2:	4b13      	ldr	r3, [pc, #76]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fc4:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8005fc8:	2b01      	cmp	r3, #1
 8005fca:	d10b      	bne.n	8005fe4 <mouse_launcher_control_input+0x84>
			if (g_remote_cmd.mouse_right) {
 8005fcc:	4b10      	ldr	r3, [pc, #64]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fce:	f993 3019 	ldrsb.w	r3, [r3, #25]
 8005fd2:	2b00      	cmp	r3, #0
 8005fd4:	d003      	beq.n	8005fde <mouse_launcher_control_input+0x7e>
				launcher_ctrl_data.override = 1;
 8005fd6:	4b0f      	ldr	r3, [pc, #60]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fd8:	2201      	movs	r2, #1
 8005fda:	711a      	strb	r2, [r3, #4]
 8005fdc:	e002      	b.n	8005fe4 <mouse_launcher_control_input+0x84>
			} else {
				launcher_ctrl_data.override = 0;
 8005fde:	4b0d      	ldr	r3, [pc, #52]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005fe0:	2200      	movs	r2, #0
 8005fe2:	711a      	strb	r2, [r3, #4]
			}
		}
		if (g_remote_cmd.mouse_left) {
 8005fe4:	4b0a      	ldr	r3, [pc, #40]	@ (8006010 <mouse_launcher_control_input+0xb0>)
 8005fe6:	f993 3018 	ldrsb.w	r3, [r3, #24]
 8005fea:	2b00      	cmp	r3, #0
 8005fec:	d003      	beq.n	8005ff6 <mouse_launcher_control_input+0x96>
			launcher_ctrl_data.firing =1;
 8005fee:	4b09      	ldr	r3, [pc, #36]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005ff0:	2201      	movs	r2, #1
 8005ff2:	805a      	strh	r2, [r3, #2]

		} else {
			launcher_ctrl_data.firing = 0;
		}
	}
}
 8005ff4:	e003      	b.n	8005ffe <mouse_launcher_control_input+0x9e>
			launcher_ctrl_data.firing = 0;
 8005ff6:	4b07      	ldr	r3, [pc, #28]	@ (8006014 <mouse_launcher_control_input+0xb4>)
 8005ff8:	2200      	movs	r2, #0
 8005ffa:	805a      	strh	r2, [r3, #2]
}
 8005ffc:	e7ff      	b.n	8005ffe <mouse_launcher_control_input+0x9e>
 8005ffe:	bf00      	nop
 8006000:	46bd      	mov	sp, r7
 8006002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006006:	4770      	bx	lr
 8006008:	20000009 	.word	0x20000009
 800600c:	2000000a 	.word	0x2000000a
 8006010:	20000808 	.word	0x20000808
 8006014:	200034e0 	.word	0x200034e0

08006018 <remote_control_input>:
extern gimbal_control_t gimbal_ctrl_data;
extern uint8_t g_safety_toggle;
extern uint8_t launcher_safety_toggle;


void remote_control_input() {
 8006018:	b580      	push	{r7, lr}
 800601a:	af00      	add	r7, sp, #0
	remote_gimbal_input();
 800601c:	f000 f8f0 	bl	8006200 <remote_gimbal_input>
	remote_chassis_input();
 8006020:	f000 f87e 	bl	8006120 <remote_chassis_input>
	remote_launcher_control_input();
 8006024:	f000 f958 	bl	80062d8 <remote_launcher_control_input>
}
 8006028:	bf00      	nop
 800602a:	bd80      	pop	{r7, pc}

0800602c <remote_gear_shifter>:
void remote_gear_shifter(speed_shift_t* gear_speed){
 800602c:	b580      	push	{r7, lr}
 800602e:	b084      	sub	sp, #16
 8006030:	af00      	add	r7, sp, #0
 8006032:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 8006034:	4b36      	ldr	r3, [pc, #216]	@ (8006110 <remote_gear_shifter+0xe4>)
 8006036:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800603a:	2b03      	cmp	r3, #3
 800603c:	d164      	bne.n	8006108 <remote_gear_shifter+0xdc>
		if (g_remote_cmd.side_dial > 330) {
 800603e:	4b34      	ldr	r3, [pc, #208]	@ (8006110 <remote_gear_shifter+0xe4>)
 8006040:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8006044:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8006048:	dd2c      	ble.n	80060a4 <remote_gear_shifter+0x78>
			if (HAL_GetTick() - shift_press_time > 100) {
 800604a:	f005 f805 	bl	800b058 <HAL_GetTick>
 800604e:	4602      	mov	r2, r0
 8006050:	4b30      	ldr	r3, [pc, #192]	@ (8006114 <remote_gear_shifter+0xe8>)
 8006052:	681b      	ldr	r3, [r3, #0]
 8006054:	1ad3      	subs	r3, r2, r3
 8006056:	2b64      	cmp	r3, #100	@ 0x64
 8006058:	d91e      	bls.n	8006098 <remote_gear_shifter+0x6c>
				gear_speed->curr_gear =
						(gear_speed->curr_gear < 6) ?
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 800605e:	2b05      	cmp	r3, #5
 8006060:	bf28      	it	cs
 8006062:	2305      	movcs	r3, #5
 8006064:	b2db      	uxtb	r3, r3
 8006066:	3301      	adds	r3, #1
 8006068:	b2da      	uxtb	r2, r3
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	701a      	strb	r2, [r3, #0]
								gear_speed->curr_gear + 1 : 6;
				temp_msg = bz_high;
 800606e:	2306      	movs	r3, #6
 8006070:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006072:	2300      	movs	r3, #0
 8006074:	73fb      	strb	r3, [r7, #15]
 8006076:	e00a      	b.n	800608e <remote_gear_shifter+0x62>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8006078:	4b27      	ldr	r3, [pc, #156]	@ (8006118 <remote_gear_shifter+0xec>)
 800607a:	6818      	ldr	r0, [r3, #0]
 800607c:	f107 010d 	add.w	r1, r7, #13
 8006080:	2300      	movs	r3, #0
 8006082:	2200      	movs	r2, #0
 8006084:	f011 fac4 	bl	8017610 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8006088:	7bfb      	ldrb	r3, [r7, #15]
 800608a:	3301      	adds	r3, #1
 800608c:	73fb      	strb	r3, [r7, #15]
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	781b      	ldrb	r3, [r3, #0]
 8006092:	7bfa      	ldrb	r2, [r7, #15]
 8006094:	429a      	cmp	r2, r3
 8006096:	d3ef      	bcc.n	8006078 <remote_gear_shifter+0x4c>
				}
			}
			shift_press_time = HAL_GetTick();
 8006098:	f004 ffde 	bl	800b058 <HAL_GetTick>
 800609c:	4603      	mov	r3, r0
 800609e:	4a1d      	ldr	r2, [pc, #116]	@ (8006114 <remote_gear_shifter+0xe8>)
 80060a0:	6013      	str	r3, [r2, #0]
				}
			}
			ctrl_press_time = HAL_GetTick();
		}
	}
}
 80060a2:	e031      	b.n	8006108 <remote_gear_shifter+0xdc>
		else if (g_remote_cmd.side_dial < -330) {
 80060a4:	4b1a      	ldr	r3, [pc, #104]	@ (8006110 <remote_gear_shifter+0xe4>)
 80060a6:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80060aa:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80060ae:	da2b      	bge.n	8006108 <remote_gear_shifter+0xdc>
			if (HAL_GetTick() - ctrl_press_time > 100) {
 80060b0:	f004 ffd2 	bl	800b058 <HAL_GetTick>
 80060b4:	4602      	mov	r2, r0
 80060b6:	4b19      	ldr	r3, [pc, #100]	@ (800611c <remote_gear_shifter+0xf0>)
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	1ad3      	subs	r3, r2, r3
 80060bc:	2b64      	cmp	r3, #100	@ 0x64
 80060be:	d91e      	bls.n	80060fe <remote_gear_shifter+0xd2>
						(gear_speed->curr_gear > 1) ?
 80060c0:	687b      	ldr	r3, [r7, #4]
 80060c2:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 80060c4:	2b02      	cmp	r3, #2
 80060c6:	bf38      	it	cc
 80060c8:	2302      	movcc	r3, #2
 80060ca:	b2db      	uxtb	r3, r3
 80060cc:	3b01      	subs	r3, #1
 80060ce:	b2da      	uxtb	r2, r3
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	701a      	strb	r2, [r3, #0]
				temp_msg = bz_low;
 80060d4:	2307      	movs	r3, #7
 80060d6:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80060d8:	2300      	movs	r3, #0
 80060da:	73bb      	strb	r3, [r7, #14]
 80060dc:	e00a      	b.n	80060f4 <remote_gear_shifter+0xc8>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80060de:	4b0e      	ldr	r3, [pc, #56]	@ (8006118 <remote_gear_shifter+0xec>)
 80060e0:	6818      	ldr	r0, [r3, #0]
 80060e2:	f107 010d 	add.w	r1, r7, #13
 80060e6:	2300      	movs	r3, #0
 80060e8:	2200      	movs	r2, #0
 80060ea:	f011 fa91 	bl	8017610 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80060ee:	7bbb      	ldrb	r3, [r7, #14]
 80060f0:	3301      	adds	r3, #1
 80060f2:	73bb      	strb	r3, [r7, #14]
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	781b      	ldrb	r3, [r3, #0]
 80060f8:	7bba      	ldrb	r2, [r7, #14]
 80060fa:	429a      	cmp	r2, r3
 80060fc:	d3ef      	bcc.n	80060de <remote_gear_shifter+0xb2>
			ctrl_press_time = HAL_GetTick();
 80060fe:	f004 ffab 	bl	800b058 <HAL_GetTick>
 8006102:	4603      	mov	r3, r0
 8006104:	4a05      	ldr	r2, [pc, #20]	@ (800611c <remote_gear_shifter+0xf0>)
 8006106:	6013      	str	r3, [r2, #0]
}
 8006108:	bf00      	nop
 800610a:	3710      	adds	r7, #16
 800610c:	46bd      	mov	sp, r7
 800610e:	bd80      	pop	{r7, pc}
 8006110:	20000808 	.word	0x20000808
 8006114:	2000354c 	.word	0x2000354c
 8006118:	200037c4 	.word	0x200037c4
 800611c:	20003550 	.word	0x20003550

08006120 <remote_chassis_input>:

void remote_chassis_input() {
 8006120:	b580      	push	{r7, lr}
 8006122:	b084      	sub	sp, #16
 8006124:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8006126:	4b32      	ldr	r3, [pc, #200]	@ (80061f0 <remote_chassis_input+0xd0>)
 8006128:	781b      	ldrb	r3, [r3, #0]
 800612a:	2b00      	cmp	r3, #0
 800612c:	d104      	bne.n	8006138 <remote_chassis_input+0x18>
 800612e:	4b31      	ldr	r3, [pc, #196]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006130:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006134:	2b02      	cmp	r3, #2
 8006136:	d002      	beq.n	800613e <remote_chassis_input+0x1e>
//		chassis_ctrl_data.enabled = 0;
		chassis_kill_ctrl();
 8006138:	f7ff fb6e 	bl	8005818 <chassis_kill_ctrl>
 800613c:	e053      	b.n	80061e6 <remote_chassis_input+0xc6>
	} else {
			chassis_ctrl_data.enabled = 1;
 800613e:	4b2e      	ldr	r3, [pc, #184]	@ (80061f8 <remote_chassis_input+0xd8>)
 8006140:	2201      	movs	r2, #1
 8006142:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8006144:	f04f 0300 	mov.w	r3, #0
 8006148:	60bb      	str	r3, [r7, #8]
			float forward_input = 0.0;
 800614a:	f04f 0300 	mov.w	r3, #0
 800614e:	607b      	str	r3, [r7, #4]
			float yaw_input = 0.0;
 8006150:	f04f 0300 	mov.w	r3, #0
 8006154:	60fb      	str	r3, [r7, #12]

			forward_input = (float) g_remote_cmd.left_y / RC_LIMITS;
 8006156:	4b27      	ldr	r3, [pc, #156]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006158:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800615c:	ee07 3a90 	vmov	s15, r3
 8006160:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006164:	eddf 6a25 	vldr	s13, [pc, #148]	@ 80061fc <remote_chassis_input+0xdc>
 8006168:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800616c:	edc7 7a01 	vstr	s15, [r7, #4]
			horizontal_input = (float) g_remote_cmd.left_x / RC_LIMITS;
 8006170:	4b20      	ldr	r3, [pc, #128]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006172:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006176:	ee07 3a90 	vmov	s15, r3
 800617a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800617e:	eddf 6a1f 	vldr	s13, [pc, #124]	@ 80061fc <remote_chassis_input+0xdc>
 8006182:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006186:	edc7 7a02 	vstr	s15, [r7, #8]

//			yaw_input = (float)g_remote_cmd.right_x * CHASSIS_SPINSPIN_MAX/660;
//			yaw_input = 0;
			if (g_remote_cmd.left_switch == ge_LSW_STANDBY){
 800618a:	4b1a      	ldr	r3, [pc, #104]	@ (80061f4 <remote_chassis_input+0xd4>)
 800618c:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006190:	2b02      	cmp	r3, #2
 8006192:	d11b      	bne.n	80061cc <remote_chassis_input+0xac>
				if (abs(g_remote_cmd.side_dial) > 50 ){
 8006194:	4b17      	ldr	r3, [pc, #92]	@ (80061f4 <remote_chassis_input+0xd4>)
 8006196:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800619a:	2b00      	cmp	r3, #0
 800619c:	bfb8      	it	lt
 800619e:	425b      	neglt	r3, r3
 80061a0:	b29b      	uxth	r3, r3
 80061a2:	2b32      	cmp	r3, #50	@ 0x32
 80061a4:	d90d      	bls.n	80061c2 <remote_chassis_input+0xa2>
					yaw_input = (float) g_remote_cmd.side_dial / RC_LIMITS;
 80061a6:	4b13      	ldr	r3, [pc, #76]	@ (80061f4 <remote_chassis_input+0xd4>)
 80061a8:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80061ac:	ee07 3a90 	vmov	s15, r3
 80061b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80061b4:	eddf 6a11 	vldr	s13, [pc, #68]	@ 80061fc <remote_chassis_input+0xdc>
 80061b8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80061bc:	edc7 7a03 	vstr	s15, [r7, #12]
 80061c0:	e008      	b.n	80061d4 <remote_chassis_input+0xb4>
				}
				else {
				yaw_input = chassis_center_yaw();
 80061c2:	f7ff fafd 	bl	80057c0 <chassis_center_yaw>
 80061c6:	ed87 0a03 	vstr	s0, [r7, #12]
 80061ca:	e003      	b.n	80061d4 <remote_chassis_input+0xb4>
				}
			}
			else {
			yaw_input = chassis_center_yaw();
 80061cc:	f7ff faf8 	bl	80057c0 <chassis_center_yaw>
 80061d0:	ed87 0a03 	vstr	s0, [r7, #12]
			}
			//min value

//yaw_input = (float) remote_cmd.right_x * CHASSIS_YAW_MAX_RPM /RC_LIMITS;
			chassis_set_ctrl(forward_input, horizontal_input, yaw_input);
 80061d4:	ed97 1a03 	vldr	s2, [r7, #12]
 80061d8:	edd7 0a02 	vldr	s1, [r7, #8]
 80061dc:	ed97 0a01 	vldr	s0, [r7, #4]
 80061e0:	f7ff faf8 	bl	80057d4 <chassis_set_ctrl>
	}
}
 80061e4:	bf00      	nop
 80061e6:	bf00      	nop
 80061e8:	3710      	adds	r7, #16
 80061ea:	46bd      	mov	sp, r7
 80061ec:	bd80      	pop	{r7, pc}
 80061ee:	bf00      	nop
 80061f0:	20000009 	.word	0x20000009
 80061f4:	20000808 	.word	0x20000808
 80061f8:	200034c8 	.word	0x200034c8
 80061fc:	44250000 	.word	0x44250000

08006200 <remote_gimbal_input>:

void remote_gimbal_input() {
 8006200:	b580      	push	{r7, lr}
 8006202:	b082      	sub	sp, #8
 8006204:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8006206:	4b30      	ldr	r3, [pc, #192]	@ (80062c8 <remote_gimbal_input+0xc8>)
 8006208:	781b      	ldrb	r3, [r3, #0]
 800620a:	2b00      	cmp	r3, #0
 800620c:	d104      	bne.n	8006218 <remote_gimbal_input+0x18>
 800620e:	4b2f      	ldr	r3, [pc, #188]	@ (80062cc <remote_gimbal_input+0xcc>)
 8006210:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8006214:	2b01      	cmp	r3, #1
 8006216:	d103      	bne.n	8006220 <remote_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8006218:	4b2d      	ldr	r3, [pc, #180]	@ (80062d0 <remote_gimbal_input+0xd0>)
 800621a:	2200      	movs	r2, #0
 800621c:	735a      	strb	r2, [r3, #13]
 800621e:	e044      	b.n	80062aa <remote_gimbal_input+0xaa>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8006220:	4b2b      	ldr	r3, [pc, #172]	@ (80062d0 <remote_gimbal_input+0xd0>)
 8006222:	2201      	movs	r2, #1
 8006224:	735a      	strb	r2, [r3, #13]
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 8006226:	4b29      	ldr	r3, [pc, #164]	@ (80062cc <remote_gimbal_input+0xcc>)
 8006228:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800622c:	ee07 3a90 	vmov	s15, r3
 8006230:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006234:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 80062d4 <remote_gimbal_input+0xd4>
 8006238:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800623c:	ee16 0a90 	vmov	r0, s13
 8006240:	f7fa f982 	bl	8000548 <__aeabi_f2d>
				* REMOTE_PITCH_SPEED;
 8006244:	a31c      	add	r3, pc, #112	@ (adr r3, 80062b8 <remote_gimbal_input+0xb8>)
 8006246:	e9d3 2300 	ldrd	r2, r3, [r3]
 800624a:	f7fa f9d5 	bl	80005f8 <__aeabi_dmul>
 800624e:	4602      	mov	r2, r0
 8006250:	460b      	mov	r3, r1
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 8006252:	4610      	mov	r0, r2
 8006254:	4619      	mov	r1, r3
 8006256:	f7fa fcc7 	bl	8000be8 <__aeabi_d2f>
 800625a:	4603      	mov	r3, r0
 800625c:	607b      	str	r3, [r7, #4]
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 800625e:	4b1b      	ldr	r3, [pc, #108]	@ (80062cc <remote_gimbal_input+0xcc>)
 8006260:	f9b3 3000 	ldrsh.w	r3, [r3]
 8006264:	ee07 3a90 	vmov	s15, r3
 8006268:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800626c:	eddf 6a19 	vldr	s13, [pc, #100]	@ 80062d4 <remote_gimbal_input+0xd4>
 8006270:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006274:	eef1 7a67 	vneg.f32	s15, s15
 8006278:	ee17 3a90 	vmov	r3, s15
 800627c:	4618      	mov	r0, r3
 800627e:	f7fa f963 	bl	8000548 <__aeabi_f2d>
				* REMOTE_YAW_SPEED;
 8006282:	a30f      	add	r3, pc, #60	@ (adr r3, 80062c0 <remote_gimbal_input+0xc0>)
 8006284:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006288:	f7fa f9b6 	bl	80005f8 <__aeabi_dmul>
 800628c:	4602      	mov	r2, r0
 800628e:	460b      	mov	r3, r1
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 8006290:	4610      	mov	r0, r2
 8006292:	4619      	mov	r1, r3
 8006294:	f7fa fca8 	bl	8000be8 <__aeabi_d2f>
 8006298:	4603      	mov	r3, r0
 800629a:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_remote, yaw_remote);
 800629c:	edd7 0a00 	vldr	s1, [r7]
 80062a0:	ed97 0a01 	vldr	s0, [r7, #4]
 80062a4:	f7ff fbf4 	bl	8005a90 <gimbal_turn_ang>
	}
}
 80062a8:	bf00      	nop
 80062aa:	bf00      	nop
 80062ac:	3708      	adds	r7, #8
 80062ae:	46bd      	mov	sp, r7
 80062b0:	bd80      	pop	{r7, pc}
 80062b2:	bf00      	nop
 80062b4:	f3af 8000 	nop.w
 80062b8:	9999999a 	.word	0x9999999a
 80062bc:	bfb99999 	.word	0xbfb99999
 80062c0:	9999999a 	.word	0x9999999a
 80062c4:	3fb99999 	.word	0x3fb99999
 80062c8:	20000009 	.word	0x20000009
 80062cc:	20000808 	.word	0x20000808
 80062d0:	200034e8 	.word	0x200034e8
 80062d4:	44250000 	.word	0x44250000

080062d8 <remote_launcher_control_input>:


void remote_launcher_control_input() {
 80062d8:	b480      	push	{r7}
 80062da:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 80062dc:	4b1d      	ldr	r3, [pc, #116]	@ (8006354 <remote_launcher_control_input+0x7c>)
 80062de:	781b      	ldrb	r3, [r3, #0]
 80062e0:	2b00      	cmp	r3, #0
 80062e2:	d109      	bne.n	80062f8 <remote_launcher_control_input+0x20>
 80062e4:	4b1c      	ldr	r3, [pc, #112]	@ (8006358 <remote_launcher_control_input+0x80>)
 80062e6:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80062ea:	2b01      	cmp	r3, #1
 80062ec:	d004      	beq.n	80062f8 <remote_launcher_control_input+0x20>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 80062ee:	4b1a      	ldr	r3, [pc, #104]	@ (8006358 <remote_launcher_control_input+0x80>)
 80062f0:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062f4:	2b01      	cmp	r3, #1
 80062f6:	d016      	beq.n	8006326 <remote_launcher_control_input+0x4e>
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 80062f8:	4b17      	ldr	r3, [pc, #92]	@ (8006358 <remote_launcher_control_input+0x80>)
 80062fa:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80062fe:	2b01      	cmp	r3, #1
 8006300:	d002      	beq.n	8006308 <remote_launcher_control_input+0x30>
			launcher_safety_toggle = 0;
 8006302:	4b16      	ldr	r3, [pc, #88]	@ (800635c <remote_launcher_control_input+0x84>)
 8006304:	2200      	movs	r2, #0
 8006306:	701a      	strb	r2, [r3, #0]
		}
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8006308:	4b13      	ldr	r3, [pc, #76]	@ (8006358 <remote_launcher_control_input+0x80>)
 800630a:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800630e:	2b01      	cmp	r3, #1
 8006310:	d102      	bne.n	8006318 <remote_launcher_control_input+0x40>
							launcher_ctrl_data.enabled = 0;
 8006312:	4b13      	ldr	r3, [pc, #76]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006314:	2200      	movs	r2, #0
 8006316:	715a      	strb	r2, [r3, #5]
				}
//		launcher_ctrl_data.enabled = 0;
		launcher_ctrl_data.firing = 0;
 8006318:	4b11      	ldr	r3, [pc, #68]	@ (8006360 <remote_launcher_control_input+0x88>)
 800631a:	2200      	movs	r2, #0
 800631c:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 800631e:	4b10      	ldr	r3, [pc, #64]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006320:	2200      	movs	r2, #0
 8006322:	801a      	strh	r2, [r3, #0]
		} else {
			launcher_ctrl_data.firing = 0;
		}
	}

}
 8006324:	e011      	b.n	800634a <remote_launcher_control_input+0x72>
		launcher_ctrl_data.enabled = 1;
 8006326:	4b0e      	ldr	r3, [pc, #56]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006328:	2201      	movs	r2, #1
 800632a:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 800632c:	4b0c      	ldr	r3, [pc, #48]	@ (8006360 <remote_launcher_control_input+0x88>)
 800632e:	2201      	movs	r2, #1
 8006330:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8006332:	4b09      	ldr	r3, [pc, #36]	@ (8006358 <remote_launcher_control_input+0x80>)
 8006334:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8006338:	2b01      	cmp	r3, #1
 800633a:	d103      	bne.n	8006344 <remote_launcher_control_input+0x6c>
			launcher_ctrl_data.firing = 1;
 800633c:	4b08      	ldr	r3, [pc, #32]	@ (8006360 <remote_launcher_control_input+0x88>)
 800633e:	2201      	movs	r2, #1
 8006340:	805a      	strh	r2, [r3, #2]
}
 8006342:	e002      	b.n	800634a <remote_launcher_control_input+0x72>
			launcher_ctrl_data.firing = 0;
 8006344:	4b06      	ldr	r3, [pc, #24]	@ (8006360 <remote_launcher_control_input+0x88>)
 8006346:	2200      	movs	r2, #0
 8006348:	805a      	strh	r2, [r3, #2]
}
 800634a:	bf00      	nop
 800634c:	46bd      	mov	sp, r7
 800634e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006352:	4770      	bx	lr
 8006354:	20000009 	.word	0x20000009
 8006358:	20000808 	.word	0x20000808
 800635c:	2000000a 	.word	0x2000000a
 8006360:	200034e0 	.word	0x200034e0

08006364 <aimbot_pid_init>:
		sbc_new_data = 0;
		control_reset();
	}
}

void aimbot_pid_init() {
 8006364:	b480      	push	{r7}
 8006366:	af00      	add	r7, sp, #0
	aimbot_offset.y_offset = 0;
 8006368:	4b1a      	ldr	r3, [pc, #104]	@ (80063d4 <aimbot_pid_init+0x70>)
 800636a:	f04f 0200 	mov.w	r2, #0
 800636e:	605a      	str	r2, [r3, #4]
	aimbot_offset.x_offset = 0;
 8006370:	4b18      	ldr	r3, [pc, #96]	@ (80063d4 <aimbot_pid_init+0x70>)
 8006372:	f04f 0200 	mov.w	r2, #0
 8006376:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.kp = AIMBOT_X_KP;
 8006378:	4b17      	ldr	r3, [pc, #92]	@ (80063d8 <aimbot_pid_init+0x74>)
 800637a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800637e:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.ki = AIMBOT_X_KI;
 8006380:	4b15      	ldr	r3, [pc, #84]	@ (80063d8 <aimbot_pid_init+0x74>)
 8006382:	f04f 0200 	mov.w	r2, #0
 8006386:	605a      	str	r2, [r3, #4]
	aimbot_x_pid.kd = AIMBOT_X_KD;
 8006388:	4b13      	ldr	r3, [pc, #76]	@ (80063d8 <aimbot_pid_init+0x74>)
 800638a:	f04f 0200 	mov.w	r2, #0
 800638e:	609a      	str	r2, [r3, #8]
	aimbot_x_pid.max_out = 1.5;
 8006390:	4b11      	ldr	r3, [pc, #68]	@ (80063d8 <aimbot_pid_init+0x74>)
 8006392:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8006396:	61da      	str	r2, [r3, #28]
	aimbot_x_pid.int_max = AIMBOT_KI_MAX;
 8006398:	4b0f      	ldr	r3, [pc, #60]	@ (80063d8 <aimbot_pid_init+0x74>)
 800639a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800639e:	619a      	str	r2, [r3, #24]

	aimbot_y_pid.kp = AIMBOT_Y_KP;
 80063a0:	4b0e      	ldr	r3, [pc, #56]	@ (80063dc <aimbot_pid_init+0x78>)
 80063a2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80063a6:	601a      	str	r2, [r3, #0]
	aimbot_y_pid.ki = AIMBOT_Y_KI;
 80063a8:	4b0c      	ldr	r3, [pc, #48]	@ (80063dc <aimbot_pid_init+0x78>)
 80063aa:	f04f 0200 	mov.w	r2, #0
 80063ae:	605a      	str	r2, [r3, #4]
	aimbot_y_pid.kd = AIMBOT_Y_KD;
 80063b0:	4b0a      	ldr	r3, [pc, #40]	@ (80063dc <aimbot_pid_init+0x78>)
 80063b2:	f04f 0200 	mov.w	r2, #0
 80063b6:	609a      	str	r2, [r3, #8]
	aimbot_y_pid.max_out = 1.5;
 80063b8:	4b08      	ldr	r3, [pc, #32]	@ (80063dc <aimbot_pid_init+0x78>)
 80063ba:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 80063be:	61da      	str	r2, [r3, #28]
	aimbot_y_pid.int_max = AIMBOT_KI_MAX;
 80063c0:	4b06      	ldr	r3, [pc, #24]	@ (80063dc <aimbot_pid_init+0x78>)
 80063c2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80063c6:	619a      	str	r2, [r3, #24]
}
 80063c8:	bf00      	nop
 80063ca:	46bd      	mov	sp, r7
 80063cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063d0:	4770      	bx	lr
 80063d2:	bf00      	nop
 80063d4:	200035b4 	.word	0x200035b4
 80063d8:	20003584 	.word	0x20003584
 80063dc:	20003554 	.word	0x20003554

080063e0 <hud_task>:
ref_inter_robot_data_t graphic_header;
graphic_data_struct_t graphic_data;
ref_frame_header_t send_header;
uint8_t char_buffer[30];

void hud_task(void *argument) {
 80063e0:	b580      	push	{r7, lr}
 80063e2:	b084      	sub	sp, #16
 80063e4:	af00      	add	r7, sp, #0
 80063e6:	6078      	str	r0, [r7, #4]

	enum drawings {
		spinspin, gearing, robot_state, motor_fault, refresh

	};
	while (ref_robot_data.robot_id == 0) {
 80063e8:	e002      	b.n	80063f0 <hud_task+0x10>
		vTaskDelay(10);
 80063ea:	200a      	movs	r0, #10
 80063ec:	f011 fffa 	bl	80183e4 <vTaskDelay>
	while (ref_robot_data.robot_id == 0) {
 80063f0:	4b69      	ldr	r3, [pc, #420]	@ (8006598 <hud_task+0x1b8>)
 80063f2:	781b      	ldrb	r3, [r3, #0]
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d0f8      	beq.n	80063ea <hud_task+0xa>
	}
	uint32_t refresh_timer = HAL_GetTick();
 80063f8:	f004 fe2e 	bl	800b058 <HAL_GetTick>
 80063fc:	60f8      	str	r0, [r7, #12]

	uint8_t draw_state = spinspin;
 80063fe:	2300      	movs	r3, #0
 8006400:	72fb      	strb	r3, [r7, #11]
	//draw all images
	vTaskDelay(1000);
 8006402:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8006406:	f011 ffed 	bl	80183e4 <vTaskDelay>
	clear_hud();
 800640a:	f000 fb29 	bl	8006a60 <clear_hud>
	vTaskDelay(150);
 800640e:	2096      	movs	r0, #150	@ 0x96
 8006410:	f011 ffe8 	bl	80183e4 <vTaskDelay>
	draw_spinspin(0);
 8006414:	2000      	movs	r0, #0
 8006416:	f000 f8c3 	bl	80065a0 <draw_spinspin>
	vTaskDelay(150);
 800641a:	2096      	movs	r0, #150	@ 0x96
 800641c:	f011 ffe2 	bl	80183e4 <vTaskDelay>
	draw_gearing(0);
 8006420:	2000      	movs	r0, #0
 8006422:	f000 f9f5 	bl	8006810 <draw_gearing>
	vTaskDelay(150);
 8006426:	2096      	movs	r0, #150	@ 0x96
 8006428:	f011 ffdc 	bl	80183e4 <vTaskDelay>
	while (1) {
		if (HAL_GetTick() - refresh_timer > 5000){
 800642c:	f004 fe14 	bl	800b058 <HAL_GetTick>
 8006430:	4602      	mov	r2, r0
 8006432:	68fb      	ldr	r3, [r7, #12]
 8006434:	1ad3      	subs	r3, r2, r3
 8006436:	f241 3288 	movw	r2, #5000	@ 0x1388
 800643a:	4293      	cmp	r3, r2
 800643c:	d904      	bls.n	8006448 <hud_task+0x68>
			draw_state = refresh;
 800643e:	2304      	movs	r3, #4
 8006440:	72fb      	strb	r3, [r7, #11]
			refresh_timer = HAL_GetTick();
 8006442:	f004 fe09 	bl	800b058 <HAL_GetTick>
 8006446:	60f8      	str	r0, [r7, #12]
		}
		switch (ref_robot_data.robot_id) {
 8006448:	4b53      	ldr	r3, [pc, #332]	@ (8006598 <hud_task+0x1b8>)
 800644a:	781b      	ldrb	r3, [r3, #0]
 800644c:	2b06      	cmp	r3, #6
 800644e:	dc27      	bgt.n	80064a0 <hud_task+0xc0>
 8006450:	2b00      	cmp	r3, #0
 8006452:	dc13      	bgt.n	800647c <hud_task+0x9c>
 8006454:	e065      	b.n	8006522 <hud_task+0x142>
 8006456:	3b65      	subs	r3, #101	@ 0x65
 8006458:	2b05      	cmp	r3, #5
 800645a:	d862      	bhi.n	8006522 <hud_task+0x142>
 800645c:	a201      	add	r2, pc, #4	@ (adr r2, 8006464 <hud_task+0x84>)
 800645e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006462:	bf00      	nop
 8006464:	080064e7 	.word	0x080064e7
 8006468:	080064f1 	.word	0x080064f1
 800646c:	080064fb 	.word	0x080064fb
 8006470:	08006505 	.word	0x08006505
 8006474:	0800650f 	.word	0x0800650f
 8006478:	08006519 	.word	0x08006519
 800647c:	3b01      	subs	r3, #1
 800647e:	2b05      	cmp	r3, #5
 8006480:	d84f      	bhi.n	8006522 <hud_task+0x142>
 8006482:	a201      	add	r2, pc, #4	@ (adr r2, 8006488 <hud_task+0xa8>)
 8006484:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006488:	080064ab 	.word	0x080064ab
 800648c:	080064b5 	.word	0x080064b5
 8006490:	080064bf 	.word	0x080064bf
 8006494:	080064c9 	.word	0x080064c9
 8006498:	080064d3 	.word	0x080064d3
 800649c:	080064dd 	.word	0x080064dd
 80064a0:	2b6a      	cmp	r3, #106	@ 0x6a
 80064a2:	dc3e      	bgt.n	8006522 <hud_task+0x142>
 80064a4:	2b65      	cmp	r3, #101	@ 0x65
 80064a6:	dad6      	bge.n	8006456 <hud_task+0x76>
 80064a8:	e03b      	b.n	8006522 <hud_task+0x142>
		case 1:
			g_client_id = 0x101;
 80064aa:	4b3c      	ldr	r3, [pc, #240]	@ (800659c <hud_task+0x1bc>)
 80064ac:	f240 1201 	movw	r2, #257	@ 0x101
 80064b0:	801a      	strh	r2, [r3, #0]
			break;
 80064b2:	e03a      	b.n	800652a <hud_task+0x14a>
		case 2:
			g_client_id = 0x102;
 80064b4:	4b39      	ldr	r3, [pc, #228]	@ (800659c <hud_task+0x1bc>)
 80064b6:	f44f 7281 	mov.w	r2, #258	@ 0x102
 80064ba:	801a      	strh	r2, [r3, #0]
			break;
 80064bc:	e035      	b.n	800652a <hud_task+0x14a>
		case 3:
			g_client_id = 0x103;
 80064be:	4b37      	ldr	r3, [pc, #220]	@ (800659c <hud_task+0x1bc>)
 80064c0:	f240 1203 	movw	r2, #259	@ 0x103
 80064c4:	801a      	strh	r2, [r3, #0]
			break;
 80064c6:	e030      	b.n	800652a <hud_task+0x14a>
		case 4:
			g_client_id = 0x104;
 80064c8:	4b34      	ldr	r3, [pc, #208]	@ (800659c <hud_task+0x1bc>)
 80064ca:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80064ce:	801a      	strh	r2, [r3, #0]
			break;
 80064d0:	e02b      	b.n	800652a <hud_task+0x14a>
		case 5:
			g_client_id = 0x105;
 80064d2:	4b32      	ldr	r3, [pc, #200]	@ (800659c <hud_task+0x1bc>)
 80064d4:	f240 1205 	movw	r2, #261	@ 0x105
 80064d8:	801a      	strh	r2, [r3, #0]
			break;
 80064da:	e026      	b.n	800652a <hud_task+0x14a>
		case 6:
			g_client_id = 0x106;
 80064dc:	4b2f      	ldr	r3, [pc, #188]	@ (800659c <hud_task+0x1bc>)
 80064de:	f44f 7283 	mov.w	r2, #262	@ 0x106
 80064e2:	801a      	strh	r2, [r3, #0]
			break;
 80064e4:	e021      	b.n	800652a <hud_task+0x14a>

		case 101:
			g_client_id = 0x165;
 80064e6:	4b2d      	ldr	r3, [pc, #180]	@ (800659c <hud_task+0x1bc>)
 80064e8:	f240 1265 	movw	r2, #357	@ 0x165
 80064ec:	801a      	strh	r2, [r3, #0]
			break;
 80064ee:	e01c      	b.n	800652a <hud_task+0x14a>
		case 102:
			g_client_id = 0x166;
 80064f0:	4b2a      	ldr	r3, [pc, #168]	@ (800659c <hud_task+0x1bc>)
 80064f2:	f44f 72b3 	mov.w	r2, #358	@ 0x166
 80064f6:	801a      	strh	r2, [r3, #0]
			break;
 80064f8:	e017      	b.n	800652a <hud_task+0x14a>
		case 103:
			g_client_id = 0x167;
 80064fa:	4b28      	ldr	r3, [pc, #160]	@ (800659c <hud_task+0x1bc>)
 80064fc:	f240 1267 	movw	r2, #359	@ 0x167
 8006500:	801a      	strh	r2, [r3, #0]
			break;
 8006502:	e012      	b.n	800652a <hud_task+0x14a>
		case 104:
			g_client_id = 0x168;
 8006504:	4b25      	ldr	r3, [pc, #148]	@ (800659c <hud_task+0x1bc>)
 8006506:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 800650a:	801a      	strh	r2, [r3, #0]
			break;
 800650c:	e00d      	b.n	800652a <hud_task+0x14a>
		case 105:
			g_client_id = 0x169;
 800650e:	4b23      	ldr	r3, [pc, #140]	@ (800659c <hud_task+0x1bc>)
 8006510:	f240 1269 	movw	r2, #361	@ 0x169
 8006514:	801a      	strh	r2, [r3, #0]
			break;
 8006516:	e008      	b.n	800652a <hud_task+0x14a>
		case 106:
			g_client_id = 0x16A;
 8006518:	4b20      	ldr	r3, [pc, #128]	@ (800659c <hud_task+0x1bc>)
 800651a:	f44f 72b5 	mov.w	r2, #362	@ 0x16a
 800651e:	801a      	strh	r2, [r3, #0]
			break;
 8006520:	e003      	b.n	800652a <hud_task+0x14a>
		default:
			g_client_id = 0;
 8006522:	4b1e      	ldr	r3, [pc, #120]	@ (800659c <hud_task+0x1bc>)
 8006524:	2200      	movs	r2, #0
 8006526:	801a      	strh	r2, [r3, #0]
			break;
 8006528:	bf00      	nop

		}



		switch (draw_state) {
 800652a:	7afb      	ldrb	r3, [r7, #11]
 800652c:	2b04      	cmp	r3, #4
 800652e:	d82d      	bhi.n	800658c <hud_task+0x1ac>
 8006530:	a201      	add	r2, pc, #4	@ (adr r2, 8006538 <hud_task+0x158>)
 8006532:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006536:	bf00      	nop
 8006538:	0800654d 	.word	0x0800654d
 800653c:	08006559 	.word	0x08006559
 8006540:	0800658d 	.word	0x0800658d
 8006544:	0800658d 	.word	0x0800658d
 8006548:	08006565 	.word	0x08006565
		case spinspin:
			draw_spinspin(1);
 800654c:	2001      	movs	r0, #1
 800654e:	f000 f827 	bl	80065a0 <draw_spinspin>
			draw_state = gearing;
 8006552:	2301      	movs	r3, #1
 8006554:	72fb      	strb	r3, [r7, #11]
			break;
 8006556:	e01a      	b.n	800658e <hud_task+0x1ae>
		case gearing:
			draw_gearing(1);
 8006558:	2001      	movs	r0, #1
 800655a:	f000 f959 	bl	8006810 <draw_gearing>
			draw_state = spinspin;
 800655e:	2300      	movs	r3, #0
 8006560:	72fb      	strb	r3, [r7, #11]
			break;
 8006562:	e014      	b.n	800658e <hud_task+0x1ae>
		case robot_state:
			break;
		case motor_fault:
			break;
		case refresh:
			clear_hud();
 8006564:	f000 fa7c 	bl	8006a60 <clear_hud>
			vTaskDelay(150);
 8006568:	2096      	movs	r0, #150	@ 0x96
 800656a:	f011 ff3b 	bl	80183e4 <vTaskDelay>
			draw_spinspin(0);
 800656e:	2000      	movs	r0, #0
 8006570:	f000 f816 	bl	80065a0 <draw_spinspin>
			vTaskDelay(150);
 8006574:	2096      	movs	r0, #150	@ 0x96
 8006576:	f011 ff35 	bl	80183e4 <vTaskDelay>
			draw_gearing(0);
 800657a:	2000      	movs	r0, #0
 800657c:	f000 f948 	bl	8006810 <draw_gearing>
			vTaskDelay(150);
 8006580:	2096      	movs	r0, #150	@ 0x96
 8006582:	f011 ff2f 	bl	80183e4 <vTaskDelay>
			draw_state = spinspin;
 8006586:	2300      	movs	r3, #0
 8006588:	72fb      	strb	r3, [r7, #11]
			break;
 800658a:	e000      	b.n	800658e <hud_task+0x1ae>
		default:
			break;
 800658c:	bf00      	nop
		}
		vTaskDelay(150);
 800658e:	2096      	movs	r0, #150	@ 0x96
 8006590:	f011 ff28 	bl	80183e4 <vTaskDelay>
		if (HAL_GetTick() - refresh_timer > 5000){
 8006594:	e74a      	b.n	800642c <hud_task+0x4c>
 8006596:	bf00      	nop
 8006598:	20003850 	.word	0x20003850
 800659c:	200035bc 	.word	0x200035bc

080065a0 <draw_spinspin>:
//	else if (&buffer_size > HUD_BUFFER_SIZE){
//		return num_obj;
//	}
}

void draw_spinspin(uint8_t modify) {
 80065a0:	b590      	push	{r4, r7, lr}
 80065a2:	b085      	sub	sp, #20
 80065a4:	af00      	add	r7, sp, #0
 80065a6:	4603      	mov	r3, r0
 80065a8:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 80065aa:	2300      	movs	r3, #0
 80065ac:	60bb      	str	r3, [r7, #8]
	uint8_t char_len = 0;
 80065ae:	2300      	movs	r3, #0
 80065b0:	73fb      	strb	r3, [r7, #15]
	curr_pos = 0;
 80065b2:	2300      	movs	r3, #0
 80065b4:	60bb      	str	r3, [r7, #8]
	if (g_spinspin_mode == 0) {
 80065b6:	4b8a      	ldr	r3, [pc, #552]	@ (80067e0 <draw_spinspin+0x240>)
 80065b8:	681b      	ldr	r3, [r3, #0]
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d10d      	bne.n	80065da <draw_spinspin+0x3a>
		graphic_data.color = 4; //orange
 80065be:	4a89      	ldr	r2, [pc, #548]	@ (80067e4 <draw_spinspin+0x244>)
 80065c0:	7913      	ldrb	r3, [r2, #4]
 80065c2:	2104      	movs	r1, #4
 80065c4:	f361 0385 	bfi	r3, r1, #2, #4
 80065c8:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN OFF");
 80065ca:	4a87      	ldr	r2, [pc, #540]	@ (80067e8 <draw_spinspin+0x248>)
 80065cc:	211e      	movs	r1, #30
 80065ce:	4887      	ldr	r0, [pc, #540]	@ (80067ec <draw_spinspin+0x24c>)
 80065d0:	f014 fbd8 	bl	801ad84 <snprintf>
 80065d4:	4603      	mov	r3, r0
 80065d6:	73fb      	strb	r3, [r7, #15]
 80065d8:	e00c      	b.n	80065f4 <draw_spinspin+0x54>
	} else {
		graphic_data.color = 3; //orange
 80065da:	4a82      	ldr	r2, [pc, #520]	@ (80067e4 <draw_spinspin+0x244>)
 80065dc:	7913      	ldrb	r3, [r2, #4]
 80065de:	2103      	movs	r1, #3
 80065e0:	f361 0385 	bfi	r3, r1, #2, #4
 80065e4:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN ON");
 80065e6:	4a82      	ldr	r2, [pc, #520]	@ (80067f0 <draw_spinspin+0x250>)
 80065e8:	211e      	movs	r1, #30
 80065ea:	4880      	ldr	r0, [pc, #512]	@ (80067ec <draw_spinspin+0x24c>)
 80065ec:	f014 fbca 	bl	801ad84 <snprintf>
 80065f0:	4603      	mov	r3, r0
 80065f2:	73fb      	strb	r3, [r7, #15]
	}
	send_header.start_frame = 0xA5;
 80065f4:	4b7f      	ldr	r3, [pc, #508]	@ (80067f4 <draw_spinspin+0x254>)
 80065f6:	22a5      	movs	r2, #165	@ 0xa5
 80065f8:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 80065fa:	4b7e      	ldr	r3, [pc, #504]	@ (80067f4 <draw_spinspin+0x254>)
 80065fc:	2200      	movs	r2, #0
 80065fe:	f042 0201 	orr.w	r2, r2, #1
 8006602:	715a      	strb	r2, [r3, #5]
 8006604:	2200      	movs	r2, #0
 8006606:	f042 0203 	orr.w	r2, r2, #3
 800660a:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 800660c:	4b7a      	ldr	r3, [pc, #488]	@ (80067f8 <draw_spinspin+0x258>)
 800660e:	781b      	ldrb	r3, [r3, #0]
 8006610:	1c5a      	adds	r2, r3, #1
 8006612:	b2d1      	uxtb	r1, r2
 8006614:	4a78      	ldr	r2, [pc, #480]	@ (80067f8 <draw_spinspin+0x258>)
 8006616:	7011      	strb	r1, [r2, #0]
 8006618:	4a76      	ldr	r2, [pc, #472]	@ (80067f4 <draw_spinspin+0x254>)
 800661a:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 800661c:	7bfb      	ldrb	r3, [r7, #15]
 800661e:	b29b      	uxth	r3, r3
 8006620:	3315      	adds	r3, #21
 8006622:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8006624:	4b73      	ldr	r3, [pc, #460]	@ (80067f4 <draw_spinspin+0x254>)
 8006626:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 800662a:	4b73      	ldr	r3, [pc, #460]	@ (80067f8 <draw_spinspin+0x258>)
 800662c:	781b      	ldrb	r3, [r3, #0]
 800662e:	1c5a      	adds	r2, r3, #1
 8006630:	b2d1      	uxtb	r1, r2
 8006632:	4a71      	ldr	r2, [pc, #452]	@ (80067f8 <draw_spinspin+0x258>)
 8006634:	7011      	strb	r1, [r2, #0]
 8006636:	4a6f      	ldr	r2, [pc, #444]	@ (80067f4 <draw_spinspin+0x254>)
 8006638:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 800663a:	68bb      	ldr	r3, [r7, #8]
 800663c:	4a6f      	ldr	r2, [pc, #444]	@ (80067fc <draw_spinspin+0x25c>)
 800663e:	4413      	add	r3, r2
 8006640:	4a6c      	ldr	r2, [pc, #432]	@ (80067f4 <draw_spinspin+0x254>)
 8006642:	6810      	ldr	r0, [r2, #0]
 8006644:	6018      	str	r0, [r3, #0]
 8006646:	8891      	ldrh	r1, [r2, #4]
 8006648:	7992      	ldrb	r2, [r2, #6]
 800664a:	8099      	strh	r1, [r3, #4]
 800664c:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 800664e:	68bb      	ldr	r3, [r7, #8]
 8006650:	3307      	adds	r3, #7
 8006652:	60bb      	str	r3, [r7, #8]
	append_CRC8_check_sum(tx_buffer, 5);
 8006654:	2105      	movs	r1, #5
 8006656:	4869      	ldr	r0, [pc, #420]	@ (80067fc <draw_spinspin+0x25c>)
 8006658:	f7fa fcd7 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 800665c:	4b68      	ldr	r3, [pc, #416]	@ (8006800 <draw_spinspin+0x260>)
 800665e:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8006662:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 8006664:	4b67      	ldr	r3, [pc, #412]	@ (8006804 <draw_spinspin+0x264>)
 8006666:	781b      	ldrb	r3, [r3, #0]
 8006668:	461a      	mov	r2, r3
 800666a:	4b65      	ldr	r3, [pc, #404]	@ (8006800 <draw_spinspin+0x260>)
 800666c:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 800666e:	4b66      	ldr	r3, [pc, #408]	@ (8006808 <draw_spinspin+0x268>)
 8006670:	881a      	ldrh	r2, [r3, #0]
 8006672:	4b63      	ldr	r3, [pc, #396]	@ (8006800 <draw_spinspin+0x260>)
 8006674:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 8006676:	68bb      	ldr	r3, [r7, #8]
 8006678:	4a60      	ldr	r2, [pc, #384]	@ (80067fc <draw_spinspin+0x25c>)
 800667a:	4413      	add	r3, r2
 800667c:	4a60      	ldr	r2, [pc, #384]	@ (8006800 <draw_spinspin+0x260>)
 800667e:	6810      	ldr	r0, [r2, #0]
 8006680:	6018      	str	r0, [r3, #0]
 8006682:	8892      	ldrh	r2, [r2, #4]
 8006684:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 8006686:	68bb      	ldr	r3, [r7, #8]
 8006688:	3306      	adds	r3, #6
 800668a:	60bb      	str	r3, [r7, #8]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 800668c:	4b55      	ldr	r3, [pc, #340]	@ (80067e4 <draw_spinspin+0x244>)
 800668e:	2200      	movs	r2, #0
 8006690:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 8006692:	4b54      	ldr	r3, [pc, #336]	@ (80067e4 <draw_spinspin+0x244>)
 8006694:	2200      	movs	r2, #0
 8006696:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 1;
 8006698:	4b52      	ldr	r3, [pc, #328]	@ (80067e4 <draw_spinspin+0x244>)
 800669a:	2201      	movs	r2, #1
 800669c:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 800669e:	4b51      	ldr	r3, [pc, #324]	@ (80067e4 <draw_spinspin+0x244>)
 80066a0:	78da      	ldrb	r2, [r3, #3]
 80066a2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80066a6:	70da      	strb	r2, [r3, #3]
 80066a8:	791a      	ldrb	r2, [r3, #4]
 80066aa:	f022 0203 	bic.w	r2, r2, #3
 80066ae:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 80066b0:	79fb      	ldrb	r3, [r7, #7]
 80066b2:	2b01      	cmp	r3, #1
 80066b4:	d106      	bne.n	80066c4 <draw_spinspin+0x124>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80066b6:	4a4b      	ldr	r2, [pc, #300]	@ (80067e4 <draw_spinspin+0x244>)
 80066b8:	78d3      	ldrb	r3, [r2, #3]
 80066ba:	2102      	movs	r1, #2
 80066bc:	f361 0302 	bfi	r3, r1, #0, #3
 80066c0:	70d3      	strb	r3, [r2, #3]
 80066c2:	e005      	b.n	80066d0 <draw_spinspin+0x130>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 80066c4:	4a47      	ldr	r2, [pc, #284]	@ (80067e4 <draw_spinspin+0x244>)
 80066c6:	78d3      	ldrb	r3, [r2, #3]
 80066c8:	2101      	movs	r1, #1
 80066ca:	f361 0302 	bfi	r3, r1, #0, #3
 80066ce:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 80066d0:	4a44      	ldr	r2, [pc, #272]	@ (80067e4 <draw_spinspin+0x244>)
 80066d2:	78d3      	ldrb	r3, [r2, #3]
 80066d4:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80066d8:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 80066da:	4b42      	ldr	r3, [pc, #264]	@ (80067e4 <draw_spinspin+0x244>)
 80066dc:	791a      	ldrb	r2, [r3, #4]
 80066de:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80066e2:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 80066e6:	711a      	strb	r2, [r3, #4]
 80066e8:	795a      	ldrb	r2, [r3, #5]
 80066ea:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80066ee:	f042 0207 	orr.w	r2, r2, #7
 80066f2:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 80066f4:	7bfb      	ldrb	r3, [r7, #15]
 80066f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80066fa:	b29a      	uxth	r2, r3
 80066fc:	4b39      	ldr	r3, [pc, #228]	@ (80067e4 <draw_spinspin+0x244>)
 80066fe:	f002 0101 	and.w	r1, r2, #1
 8006702:	01cc      	lsls	r4, r1, #7
 8006704:	7959      	ldrb	r1, [r3, #5]
 8006706:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800670a:	4608      	mov	r0, r1
 800670c:	4621      	mov	r1, r4
 800670e:	4301      	orrs	r1, r0
 8006710:	7159      	strb	r1, [r3, #5]
 8006712:	0852      	lsrs	r2, r2, #1
 8006714:	b292      	uxth	r2, r2
 8006716:	b2d2      	uxtb	r2, r2
 8006718:	2100      	movs	r1, #0
 800671a:	430a      	orrs	r2, r1
 800671c:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 800671e:	4b31      	ldr	r3, [pc, #196]	@ (80067e4 <draw_spinspin+0x244>)
 8006720:	2200      	movs	r2, #0
 8006722:	f042 0207 	orr.w	r2, r2, #7
 8006726:	71da      	strb	r2, [r3, #7]
 8006728:	7a1a      	ldrb	r2, [r3, #8]
 800672a:	f022 0203 	bic.w	r2, r2, #3
 800672e:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8006730:	4b2c      	ldr	r3, [pc, #176]	@ (80067e4 <draw_spinspin+0x244>)
 8006732:	78da      	ldrb	r2, [r3, #3]
 8006734:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006738:	70da      	strb	r2, [r3, #3]
 800673a:	791a      	ldrb	r2, [r3, #4]
 800673c:	f022 0203 	bic.w	r2, r2, #3
 8006740:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8006742:	4b28      	ldr	r3, [pc, #160]	@ (80067e4 <draw_spinspin+0x244>)
 8006744:	7a1a      	ldrb	r2, [r3, #8]
 8006746:	f002 0203 	and.w	r2, r2, #3
 800674a:	f062 0237 	orn	r2, r2, #55	@ 0x37
 800674e:	721a      	strb	r2, [r3, #8]
 8006750:	7a5a      	ldrb	r2, [r3, #9]
 8006752:	f022 021f 	bic.w	r2, r2, #31
 8006756:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 600;
 8006758:	4b22      	ldr	r3, [pc, #136]	@ (80067e4 <draw_spinspin+0x244>)
 800675a:	7a5a      	ldrb	r2, [r3, #9]
 800675c:	f002 021f 	and.w	r2, r2, #31
 8006760:	725a      	strb	r2, [r3, #9]
 8006762:	2200      	movs	r2, #0
 8006764:	f042 024b 	orr.w	r2, r2, #75	@ 0x4b
 8006768:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 800676a:	68bb      	ldr	r3, [r7, #8]
 800676c:	4a23      	ldr	r2, [pc, #140]	@ (80067fc <draw_spinspin+0x25c>)
 800676e:	4413      	add	r3, r2
 8006770:	4a1c      	ldr	r2, [pc, #112]	@ (80067e4 <draw_spinspin+0x244>)
 8006772:	461c      	mov	r4, r3
 8006774:	4613      	mov	r3, r2
 8006776:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006778:	6020      	str	r0, [r4, #0]
 800677a:	6061      	str	r1, [r4, #4]
 800677c:	60a2      	str	r2, [r4, #8]
 800677e:	881a      	ldrh	r2, [r3, #0]
 8006780:	789b      	ldrb	r3, [r3, #2]
 8006782:	81a2      	strh	r2, [r4, #12]
 8006784:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8006786:	68bb      	ldr	r3, [r7, #8]
 8006788:	330f      	adds	r3, #15
 800678a:	60bb      	str	r3, [r7, #8]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 800678c:	68bb      	ldr	r3, [r7, #8]
 800678e:	4a1b      	ldr	r2, [pc, #108]	@ (80067fc <draw_spinspin+0x25c>)
 8006790:	4413      	add	r3, r2
 8006792:	7bfa      	ldrb	r2, [r7, #15]
 8006794:	4915      	ldr	r1, [pc, #84]	@ (80067ec <draw_spinspin+0x24c>)
 8006796:	4618      	mov	r0, r3
 8006798:	f014 fc14 	bl	801afc4 <memcpy>
	curr_pos += char_len;
 800679c:	7bfb      	ldrb	r3, [r7, #15]
 800679e:	68ba      	ldr	r2, [r7, #8]
 80067a0:	4413      	add	r3, r2
 80067a2:	60bb      	str	r3, [r7, #8]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 80067a4:	68bb      	ldr	r3, [r7, #8]
 80067a6:	3302      	adds	r3, #2
 80067a8:	4619      	mov	r1, r3
 80067aa:	4814      	ldr	r0, [pc, #80]	@ (80067fc <draw_spinspin+0x25c>)
 80067ac:	f7fa fcb0 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80067b0:	e002      	b.n	80067b8 <draw_spinspin+0x218>
		vTaskDelay(1);
 80067b2:	2001      	movs	r0, #1
 80067b4:	f011 fe16 	bl	80183e4 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 80067b8:	4b14      	ldr	r3, [pc, #80]	@ (800680c <draw_spinspin+0x26c>)
 80067ba:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80067be:	b2db      	uxtb	r3, r3
 80067c0:	2b20      	cmp	r3, #32
 80067c2:	d1f6      	bne.n	80067b2 <draw_spinspin+0x212>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 80067c4:	68bb      	ldr	r3, [r7, #8]
 80067c6:	b29b      	uxth	r3, r3
 80067c8:	3302      	adds	r3, #2
 80067ca:	b29b      	uxth	r3, r3
 80067cc:	461a      	mov	r2, r3
 80067ce:	490b      	ldr	r1, [pc, #44]	@ (80067fc <draw_spinspin+0x25c>)
 80067d0:	480e      	ldr	r0, [pc, #56]	@ (800680c <draw_spinspin+0x26c>)
 80067d2:	f00b fe9f 	bl	8012514 <HAL_UART_Transmit_DMA>
}
 80067d6:	bf00      	nop
 80067d8:	3714      	adds	r7, #20
 80067da:	46bd      	mov	sp, r7
 80067dc:	bd90      	pop	{r4, r7, pc}
 80067de:	bf00      	nop
 80067e0:	2000353c 	.word	0x2000353c
 80067e4:	200036c8 	.word	0x200036c8
 80067e8:	08020ef4 	.word	0x08020ef4
 80067ec:	200036e0 	.word	0x200036e0
 80067f0:	08020f00 	.word	0x08020f00
 80067f4:	200036d8 	.word	0x200036d8
 80067f8:	200038b4 	.word	0x200038b4
 80067fc:	200035c0 	.word	0x200035c0
 8006800:	200036c0 	.word	0x200036c0
 8006804:	20003850 	.word	0x20003850
 8006808:	200035bc 	.word	0x200035bc
 800680c:	20001c70 	.word	0x20001c70

08006810 <draw_gearing>:

void draw_gearing(uint8_t modify) {
 8006810:	b590      	push	{r4, r7, lr}
 8006812:	b085      	sub	sp, #20
 8006814:	af00      	add	r7, sp, #0
 8006816:	4603      	mov	r3, r0
 8006818:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 800681a:	2300      	movs	r3, #0
 800681c:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 800681e:	2300      	movs	r3, #0
 8006820:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 8006822:	2300      	movs	r3, #0
 8006824:	60fb      	str	r3, [r7, #12]
	graphic_data.color = 6; //CYAN
 8006826:	4a83      	ldr	r2, [pc, #524]	@ (8006a34 <draw_gearing+0x224>)
 8006828:	7913      	ldrb	r3, [r2, #4]
 800682a:	2106      	movs	r1, #6
 800682c:	f361 0385 	bfi	r3, r1, #2, #4
 8006830:	7113      	strb	r3, [r2, #4]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 8006832:	4b81      	ldr	r3, [pc, #516]	@ (8006a38 <draw_gearing+0x228>)
 8006834:	781b      	ldrb	r3, [r3, #0]
 8006836:	4a81      	ldr	r2, [pc, #516]	@ (8006a3c <draw_gearing+0x22c>)
 8006838:	211e      	movs	r1, #30
 800683a:	4881      	ldr	r0, [pc, #516]	@ (8006a40 <draw_gearing+0x230>)
 800683c:	f014 faa2 	bl	801ad84 <snprintf>
 8006840:	4603      	mov	r3, r0
 8006842:	72fb      	strb	r3, [r7, #11]
	send_header.start_frame = 0xA5;
 8006844:	4b7f      	ldr	r3, [pc, #508]	@ (8006a44 <draw_gearing+0x234>)
 8006846:	22a5      	movs	r2, #165	@ 0xa5
 8006848:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 800684a:	4b7e      	ldr	r3, [pc, #504]	@ (8006a44 <draw_gearing+0x234>)
 800684c:	2200      	movs	r2, #0
 800684e:	f042 0201 	orr.w	r2, r2, #1
 8006852:	715a      	strb	r2, [r3, #5]
 8006854:	2200      	movs	r2, #0
 8006856:	f042 0203 	orr.w	r2, r2, #3
 800685a:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 800685c:	4b7a      	ldr	r3, [pc, #488]	@ (8006a48 <draw_gearing+0x238>)
 800685e:	781b      	ldrb	r3, [r3, #0]
 8006860:	1c5a      	adds	r2, r3, #1
 8006862:	b2d1      	uxtb	r1, r2
 8006864:	4a78      	ldr	r2, [pc, #480]	@ (8006a48 <draw_gearing+0x238>)
 8006866:	7011      	strb	r1, [r2, #0]
 8006868:	4a76      	ldr	r2, [pc, #472]	@ (8006a44 <draw_gearing+0x234>)
 800686a:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 800686c:	7afb      	ldrb	r3, [r7, #11]
 800686e:	b29b      	uxth	r3, r3
 8006870:	3315      	adds	r3, #21
 8006872:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8006874:	4b73      	ldr	r3, [pc, #460]	@ (8006a44 <draw_gearing+0x234>)
 8006876:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 800687a:	4b73      	ldr	r3, [pc, #460]	@ (8006a48 <draw_gearing+0x238>)
 800687c:	781b      	ldrb	r3, [r3, #0]
 800687e:	1c5a      	adds	r2, r3, #1
 8006880:	b2d1      	uxtb	r1, r2
 8006882:	4a71      	ldr	r2, [pc, #452]	@ (8006a48 <draw_gearing+0x238>)
 8006884:	7011      	strb	r1, [r2, #0]
 8006886:	4a6f      	ldr	r2, [pc, #444]	@ (8006a44 <draw_gearing+0x234>)
 8006888:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	4a6f      	ldr	r2, [pc, #444]	@ (8006a4c <draw_gearing+0x23c>)
 800688e:	4413      	add	r3, r2
 8006890:	4a6c      	ldr	r2, [pc, #432]	@ (8006a44 <draw_gearing+0x234>)
 8006892:	6810      	ldr	r0, [r2, #0]
 8006894:	6018      	str	r0, [r3, #0]
 8006896:	8891      	ldrh	r1, [r2, #4]
 8006898:	7992      	ldrb	r2, [r2, #6]
 800689a:	8099      	strh	r1, [r3, #4]
 800689c:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 800689e:	68fb      	ldr	r3, [r7, #12]
 80068a0:	3307      	adds	r3, #7
 80068a2:	60fb      	str	r3, [r7, #12]
	append_CRC8_check_sum(tx_buffer, 5);
 80068a4:	2105      	movs	r1, #5
 80068a6:	4869      	ldr	r0, [pc, #420]	@ (8006a4c <draw_gearing+0x23c>)
 80068a8:	f7fa fbaf 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 80068ac:	4b68      	ldr	r3, [pc, #416]	@ (8006a50 <draw_gearing+0x240>)
 80068ae:	f44f 7288 	mov.w	r2, #272	@ 0x110
 80068b2:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 80068b4:	4b67      	ldr	r3, [pc, #412]	@ (8006a54 <draw_gearing+0x244>)
 80068b6:	781b      	ldrb	r3, [r3, #0]
 80068b8:	461a      	mov	r2, r3
 80068ba:	4b65      	ldr	r3, [pc, #404]	@ (8006a50 <draw_gearing+0x240>)
 80068bc:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 80068be:	4b66      	ldr	r3, [pc, #408]	@ (8006a58 <draw_gearing+0x248>)
 80068c0:	881a      	ldrh	r2, [r3, #0]
 80068c2:	4b63      	ldr	r3, [pc, #396]	@ (8006a50 <draw_gearing+0x240>)
 80068c4:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 80068c6:	68fb      	ldr	r3, [r7, #12]
 80068c8:	4a60      	ldr	r2, [pc, #384]	@ (8006a4c <draw_gearing+0x23c>)
 80068ca:	4413      	add	r3, r2
 80068cc:	4a60      	ldr	r2, [pc, #384]	@ (8006a50 <draw_gearing+0x240>)
 80068ce:	6810      	ldr	r0, [r2, #0]
 80068d0:	6018      	str	r0, [r3, #0]
 80068d2:	8892      	ldrh	r2, [r2, #4]
 80068d4:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 80068d6:	68fb      	ldr	r3, [r7, #12]
 80068d8:	3306      	adds	r3, #6
 80068da:	60fb      	str	r3, [r7, #12]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 80068dc:	4b55      	ldr	r3, [pc, #340]	@ (8006a34 <draw_gearing+0x224>)
 80068de:	2200      	movs	r2, #0
 80068e0:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 80068e2:	4b54      	ldr	r3, [pc, #336]	@ (8006a34 <draw_gearing+0x224>)
 80068e4:	2200      	movs	r2, #0
 80068e6:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 2;
 80068e8:	4b52      	ldr	r3, [pc, #328]	@ (8006a34 <draw_gearing+0x224>)
 80068ea:	2202      	movs	r2, #2
 80068ec:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 80068ee:	4b51      	ldr	r3, [pc, #324]	@ (8006a34 <draw_gearing+0x224>)
 80068f0:	78da      	ldrb	r2, [r3, #3]
 80068f2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80068f6:	70da      	strb	r2, [r3, #3]
 80068f8:	791a      	ldrb	r2, [r3, #4]
 80068fa:	f022 0203 	bic.w	r2, r2, #3
 80068fe:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8006900:	79fb      	ldrb	r3, [r7, #7]
 8006902:	2b01      	cmp	r3, #1
 8006904:	d106      	bne.n	8006914 <draw_gearing+0x104>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8006906:	4a4b      	ldr	r2, [pc, #300]	@ (8006a34 <draw_gearing+0x224>)
 8006908:	78d3      	ldrb	r3, [r2, #3]
 800690a:	2102      	movs	r1, #2
 800690c:	f361 0302 	bfi	r3, r1, #0, #3
 8006910:	70d3      	strb	r3, [r2, #3]
 8006912:	e005      	b.n	8006920 <draw_gearing+0x110>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 8006914:	4a47      	ldr	r2, [pc, #284]	@ (8006a34 <draw_gearing+0x224>)
 8006916:	78d3      	ldrb	r3, [r2, #3]
 8006918:	2101      	movs	r1, #1
 800691a:	f361 0302 	bfi	r3, r1, #0, #3
 800691e:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8006920:	4a44      	ldr	r2, [pc, #272]	@ (8006a34 <draw_gearing+0x224>)
 8006922:	78d3      	ldrb	r3, [r2, #3]
 8006924:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8006928:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 800692a:	4b42      	ldr	r3, [pc, #264]	@ (8006a34 <draw_gearing+0x224>)
 800692c:	791a      	ldrb	r2, [r3, #4]
 800692e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006932:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 8006936:	711a      	strb	r2, [r3, #4]
 8006938:	795a      	ldrb	r2, [r3, #5]
 800693a:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800693e:	f042 0207 	orr.w	r2, r2, #7
 8006942:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 8006944:	7afb      	ldrb	r3, [r7, #11]
 8006946:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800694a:	b29a      	uxth	r2, r3
 800694c:	4b39      	ldr	r3, [pc, #228]	@ (8006a34 <draw_gearing+0x224>)
 800694e:	f002 0101 	and.w	r1, r2, #1
 8006952:	01cc      	lsls	r4, r1, #7
 8006954:	7959      	ldrb	r1, [r3, #5]
 8006956:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 800695a:	4608      	mov	r0, r1
 800695c:	4621      	mov	r1, r4
 800695e:	4301      	orrs	r1, r0
 8006960:	7159      	strb	r1, [r3, #5]
 8006962:	0852      	lsrs	r2, r2, #1
 8006964:	b292      	uxth	r2, r2
 8006966:	b2d2      	uxtb	r2, r2
 8006968:	2100      	movs	r1, #0
 800696a:	430a      	orrs	r2, r1
 800696c:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 800696e:	4b31      	ldr	r3, [pc, #196]	@ (8006a34 <draw_gearing+0x224>)
 8006970:	2200      	movs	r2, #0
 8006972:	f042 0207 	orr.w	r2, r2, #7
 8006976:	71da      	strb	r2, [r3, #7]
 8006978:	7a1a      	ldrb	r2, [r3, #8]
 800697a:	f022 0203 	bic.w	r2, r2, #3
 800697e:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8006980:	4b2c      	ldr	r3, [pc, #176]	@ (8006a34 <draw_gearing+0x224>)
 8006982:	78da      	ldrb	r2, [r3, #3]
 8006984:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8006988:	70da      	strb	r2, [r3, #3]
 800698a:	791a      	ldrb	r2, [r3, #4]
 800698c:	f022 0203 	bic.w	r2, r2, #3
 8006990:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 8006992:	4b28      	ldr	r3, [pc, #160]	@ (8006a34 <draw_gearing+0x224>)
 8006994:	7a1a      	ldrb	r2, [r3, #8]
 8006996:	f002 0203 	and.w	r2, r2, #3
 800699a:	f062 0237 	orn	r2, r2, #55	@ 0x37
 800699e:	721a      	strb	r2, [r3, #8]
 80069a0:	7a5a      	ldrb	r2, [r3, #9]
 80069a2:	f022 021f 	bic.w	r2, r2, #31
 80069a6:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 650;
 80069a8:	4b22      	ldr	r3, [pc, #136]	@ (8006a34 <draw_gearing+0x224>)
 80069aa:	7a5a      	ldrb	r2, [r3, #9]
 80069ac:	f002 021f 	and.w	r2, r2, #31
 80069b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069b4:	725a      	strb	r2, [r3, #9]
 80069b6:	2200      	movs	r2, #0
 80069b8:	f042 0251 	orr.w	r2, r2, #81	@ 0x51
 80069bc:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	4a22      	ldr	r2, [pc, #136]	@ (8006a4c <draw_gearing+0x23c>)
 80069c2:	4413      	add	r3, r2
 80069c4:	4a1b      	ldr	r2, [pc, #108]	@ (8006a34 <draw_gearing+0x224>)
 80069c6:	461c      	mov	r4, r3
 80069c8:	4613      	mov	r3, r2
 80069ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 80069cc:	6020      	str	r0, [r4, #0]
 80069ce:	6061      	str	r1, [r4, #4]
 80069d0:	60a2      	str	r2, [r4, #8]
 80069d2:	881a      	ldrh	r2, [r3, #0]
 80069d4:	789b      	ldrb	r3, [r3, #2]
 80069d6:	81a2      	strh	r2, [r4, #12]
 80069d8:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	330f      	adds	r3, #15
 80069de:	60fb      	str	r3, [r7, #12]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	4a1a      	ldr	r2, [pc, #104]	@ (8006a4c <draw_gearing+0x23c>)
 80069e4:	4413      	add	r3, r2
 80069e6:	7afa      	ldrb	r2, [r7, #11]
 80069e8:	4915      	ldr	r1, [pc, #84]	@ (8006a40 <draw_gearing+0x230>)
 80069ea:	4618      	mov	r0, r3
 80069ec:	f014 faea 	bl	801afc4 <memcpy>
	curr_pos += char_len;
 80069f0:	7afb      	ldrb	r3, [r7, #11]
 80069f2:	68fa      	ldr	r2, [r7, #12]
 80069f4:	4413      	add	r3, r2
 80069f6:	60fb      	str	r3, [r7, #12]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	3302      	adds	r3, #2
 80069fc:	4619      	mov	r1, r3
 80069fe:	4813      	ldr	r0, [pc, #76]	@ (8006a4c <draw_gearing+0x23c>)
 8006a00:	f7fa fb86 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006a04:	e002      	b.n	8006a0c <draw_gearing+0x1fc>
		vTaskDelay(1);
 8006a06:	2001      	movs	r0, #1
 8006a08:	f011 fcec 	bl	80183e4 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006a0c:	4b13      	ldr	r3, [pc, #76]	@ (8006a5c <draw_gearing+0x24c>)
 8006a0e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006a12:	b2db      	uxtb	r3, r3
 8006a14:	2b20      	cmp	r3, #32
 8006a16:	d1f6      	bne.n	8006a06 <draw_gearing+0x1f6>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8006a18:	68fb      	ldr	r3, [r7, #12]
 8006a1a:	b29b      	uxth	r3, r3
 8006a1c:	3302      	adds	r3, #2
 8006a1e:	b29b      	uxth	r3, r3
 8006a20:	461a      	mov	r2, r3
 8006a22:	490a      	ldr	r1, [pc, #40]	@ (8006a4c <draw_gearing+0x23c>)
 8006a24:	480d      	ldr	r0, [pc, #52]	@ (8006a5c <draw_gearing+0x24c>)
 8006a26:	f00b fd75 	bl	8012514 <HAL_UART_Transmit_DMA>
}
 8006a2a:	bf00      	nop
 8006a2c:	3714      	adds	r7, #20
 8006a2e:	46bd      	mov	sp, r7
 8006a30:	bd90      	pop	{r4, r7, pc}
 8006a32:	bf00      	nop
 8006a34:	200036c8 	.word	0x200036c8
 8006a38:	2000352c 	.word	0x2000352c
 8006a3c:	08020f08 	.word	0x08020f08
 8006a40:	200036e0 	.word	0x200036e0
 8006a44:	200036d8 	.word	0x200036d8
 8006a48:	200038b4 	.word	0x200038b4
 8006a4c:	200035c0 	.word	0x200035c0
 8006a50:	200036c0 	.word	0x200036c0
 8006a54:	20003850 	.word	0x20003850
 8006a58:	200035bc 	.word	0x200035bc
 8006a5c:	20001c70 	.word	0x20001c70

08006a60 <clear_hud>:


void clear_hud(){
 8006a60:	b580      	push	{r7, lr}
 8006a62:	b084      	sub	sp, #16
 8006a64:	af00      	add	r7, sp, #0
	uint32_t curr_pos = 0;
 8006a66:	2300      	movs	r3, #0
 8006a68:	60fb      	str	r3, [r7, #12]
//	uint8_t char_len = 0;
//	curr_pos = 0;
//	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);

	send_header.start_frame = 0xA5;
 8006a6a:	4b2f      	ldr	r3, [pc, #188]	@ (8006b28 <clear_hud+0xc8>)
 8006a6c:	22a5      	movs	r2, #165	@ 0xa5
 8006a6e:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8006a70:	4b2d      	ldr	r3, [pc, #180]	@ (8006b28 <clear_hud+0xc8>)
 8006a72:	2200      	movs	r2, #0
 8006a74:	f042 0201 	orr.w	r2, r2, #1
 8006a78:	715a      	strb	r2, [r3, #5]
 8006a7a:	2200      	movs	r2, #0
 8006a7c:	f042 0203 	orr.w	r2, r2, #3
 8006a80:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8006a82:	4b2a      	ldr	r3, [pc, #168]	@ (8006b2c <clear_hud+0xcc>)
 8006a84:	781b      	ldrb	r3, [r3, #0]
 8006a86:	1c5a      	adds	r2, r3, #1
 8006a88:	b2d1      	uxtb	r1, r2
 8006a8a:	4a28      	ldr	r2, [pc, #160]	@ (8006b2c <clear_hud+0xcc>)
 8006a8c:	7011      	strb	r1, [r2, #0]
 8006a8e:	4a26      	ldr	r2, [pc, #152]	@ (8006b28 <clear_hud+0xc8>)
 8006a90:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_delete_graphic_t);
 8006a92:	4b25      	ldr	r3, [pc, #148]	@ (8006b28 <clear_hud+0xc8>)
 8006a94:	2200      	movs	r2, #0
 8006a96:	f042 0208 	orr.w	r2, r2, #8
 8006a9a:	705a      	strb	r2, [r3, #1]
 8006a9c:	2200      	movs	r2, #0
 8006a9e:	709a      	strb	r2, [r3, #2]
	send_header.seq = g_ref_tx_seq++;
 8006aa0:	4b22      	ldr	r3, [pc, #136]	@ (8006b2c <clear_hud+0xcc>)
 8006aa2:	781b      	ldrb	r3, [r3, #0]
 8006aa4:	1c5a      	adds	r2, r3, #1
 8006aa6:	b2d1      	uxtb	r1, r2
 8006aa8:	4a20      	ldr	r2, [pc, #128]	@ (8006b2c <clear_hud+0xcc>)
 8006aaa:	7011      	strb	r1, [r2, #0]
 8006aac:	4a1e      	ldr	r2, [pc, #120]	@ (8006b28 <clear_hud+0xc8>)
 8006aae:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8006ab0:	68fb      	ldr	r3, [r7, #12]
 8006ab2:	4a1f      	ldr	r2, [pc, #124]	@ (8006b30 <clear_hud+0xd0>)
 8006ab4:	4413      	add	r3, r2
 8006ab6:	4a1c      	ldr	r2, [pc, #112]	@ (8006b28 <clear_hud+0xc8>)
 8006ab8:	6810      	ldr	r0, [r2, #0]
 8006aba:	6018      	str	r0, [r3, #0]
 8006abc:	8891      	ldrh	r1, [r2, #4]
 8006abe:	7992      	ldrb	r2, [r2, #6]
 8006ac0:	8099      	strh	r1, [r3, #4]
 8006ac2:	719a      	strb	r2, [r3, #6]
	ref_delete_graphic_t ref_delete;
	ref_delete.cmd_ID = 0x100;
 8006ac4:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8006ac8:	80bb      	strh	r3, [r7, #4]
	ref_delete.graphic_layer = 9;
 8006aca:	2309      	movs	r3, #9
 8006acc:	72fb      	strb	r3, [r7, #11]
	ref_delete.graphic_operation = 2;
 8006ace:	2302      	movs	r3, #2
 8006ad0:	72bb      	strb	r3, [r7, #10]
	ref_delete.receiver_ID = g_client_id;
 8006ad2:	4b18      	ldr	r3, [pc, #96]	@ (8006b34 <clear_hud+0xd4>)
 8006ad4:	881b      	ldrh	r3, [r3, #0]
 8006ad6:	813b      	strh	r3, [r7, #8]
	ref_delete.send_ID = ref_robot_data.robot_id;
 8006ad8:	4b17      	ldr	r3, [pc, #92]	@ (8006b38 <clear_hud+0xd8>)
 8006ada:	781b      	ldrb	r3, [r3, #0]
 8006adc:	80fb      	strh	r3, [r7, #6]
	memcpy(tx_buffer + curr_pos, &ref_delete, sizeof(ref_delete_graphic_t));
 8006ade:	68fb      	ldr	r3, [r7, #12]
 8006ae0:	4a13      	ldr	r2, [pc, #76]	@ (8006b30 <clear_hud+0xd0>)
 8006ae2:	4413      	add	r3, r2
 8006ae4:	461a      	mov	r2, r3
 8006ae6:	1d3b      	adds	r3, r7, #4
 8006ae8:	cb03      	ldmia	r3!, {r0, r1}
 8006aea:	6010      	str	r0, [r2, #0]
 8006aec:	6051      	str	r1, [r2, #4]
	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8006aee:	68fb      	ldr	r3, [r7, #12]
 8006af0:	3302      	adds	r3, #2
 8006af2:	4619      	mov	r1, r3
 8006af4:	480e      	ldr	r0, [pc, #56]	@ (8006b30 <clear_hud+0xd0>)
 8006af6:	f7fa fb0b 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006afa:	e002      	b.n	8006b02 <clear_hud+0xa2>
		vTaskDelay(1);
 8006afc:	2001      	movs	r0, #1
 8006afe:	f011 fc71 	bl	80183e4 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8006b02:	4b0e      	ldr	r3, [pc, #56]	@ (8006b3c <clear_hud+0xdc>)
 8006b04:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006b08:	b2db      	uxtb	r3, r3
 8006b0a:	2b20      	cmp	r3, #32
 8006b0c:	d1f6      	bne.n	8006afc <clear_hud+0x9c>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8006b0e:	68fb      	ldr	r3, [r7, #12]
 8006b10:	b29b      	uxth	r3, r3
 8006b12:	3302      	adds	r3, #2
 8006b14:	b29b      	uxth	r3, r3
 8006b16:	461a      	mov	r2, r3
 8006b18:	4905      	ldr	r1, [pc, #20]	@ (8006b30 <clear_hud+0xd0>)
 8006b1a:	4808      	ldr	r0, [pc, #32]	@ (8006b3c <clear_hud+0xdc>)
 8006b1c:	f00b fcfa 	bl	8012514 <HAL_UART_Transmit_DMA>

}
 8006b20:	bf00      	nop
 8006b22:	3710      	adds	r7, #16
 8006b24:	46bd      	mov	sp, r7
 8006b26:	bd80      	pop	{r7, pc}
 8006b28:	200036d8 	.word	0x200036d8
 8006b2c:	200038b4 	.word	0x200038b4
 8006b30:	200035c0 	.word	0x200035c0
 8006b34:	200035bc 	.word	0x200035bc
 8006b38:	20003850 	.word	0x20003850
 8006b3c:	20001c70 	.word	0x20001c70

08006b40 <fusion>:
double time_dif;
#define ALPHA 0.98
#define DT 0.01
#define LPF_ALPHA 0.5  // Low-pass filter coefficient

int fusion() {
 8006b40:	b580      	push	{r7, lr}
 8006b42:	b0ae      	sub	sp, #184	@ 0xb8
 8006b44:	af00      	add	r7, sp, #0
    double accel_data[3];
    double gyro_data[3];
    double dt = DT;
 8006b46:	a377      	add	r3, pc, #476	@ (adr r3, 8006d24 <fusion+0x1e4>)
 8006b48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b4c:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
    IMUSensorFusion imu;

    initIMUSensorFusion(&imu);
 8006b50:	463b      	mov	r3, r7
 8006b52:	4618      	mov	r0, r3
 8006b54:	f000 f92a 	bl	8006dac <initIMUSensorFusion>

    double T_end = 0.1;
 8006b58:	a374      	add	r3, pc, #464	@ (adr r3, 8006d2c <fusion+0x1ec>)
 8006b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b5e:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
    double time_dif;


    float T_start = get_microseconds();
 8006b62:	f7fb fb2d 	bl	80021c0 <get_microseconds>
 8006b66:	ee07 0a90 	vmov	s15, r0
 8006b6a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006b6e:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

    // Simulate data (replace with actual sensor reading in a real application)
    while (1) {
        // Replace these functions with actual sensor data reading
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8006b72:	4b69      	ldr	r3, [pc, #420]	@ (8006d18 <fusion+0x1d8>)
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	4618      	mov	r0, r3
 8006b78:	f7f9 fce6 	bl	8000548 <__aeabi_f2d>
 8006b7c:	4602      	mov	r2, r0
 8006b7e:	460b      	mov	r3, r1
 8006b80:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
        accel_data[1] = accel_proc_data.ay;  // y-axis acceleration
 8006b84:	4b64      	ldr	r3, [pc, #400]	@ (8006d18 <fusion+0x1d8>)
 8006b86:	685b      	ldr	r3, [r3, #4]
 8006b88:	4618      	mov	r0, r3
 8006b8a:	f7f9 fcdd 	bl	8000548 <__aeabi_f2d>
 8006b8e:	4602      	mov	r2, r0
 8006b90:	460b      	mov	r3, r1
 8006b92:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
        accel_data[2] = accel_proc_data.az;  // z-axis acceleration
 8006b96:	4b60      	ldr	r3, [pc, #384]	@ (8006d18 <fusion+0x1d8>)
 8006b98:	689b      	ldr	r3, [r3, #8]
 8006b9a:	4618      	mov	r0, r3
 8006b9c:	f7f9 fcd4 	bl	8000548 <__aeabi_f2d>
 8006ba0:	4602      	mov	r2, r0
 8006ba2:	460b      	mov	r3, r1
 8006ba4:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90

        gyro_data[0] = gyro_proc_data.gx;  // roll rate
 8006ba8:	4b5c      	ldr	r3, [pc, #368]	@ (8006d1c <fusion+0x1dc>)
 8006baa:	681b      	ldr	r3, [r3, #0]
 8006bac:	4618      	mov	r0, r3
 8006bae:	f7f9 fccb 	bl	8000548 <__aeabi_f2d>
 8006bb2:	4602      	mov	r2, r0
 8006bb4:	460b      	mov	r3, r1
 8006bb6:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
        gyro_data[1] = gyro_proc_data.gy;  // pitch rate
 8006bba:	4b58      	ldr	r3, [pc, #352]	@ (8006d1c <fusion+0x1dc>)
 8006bbc:	685b      	ldr	r3, [r3, #4]
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	f7f9 fcc2 	bl	8000548 <__aeabi_f2d>
 8006bc4:	4602      	mov	r2, r0
 8006bc6:	460b      	mov	r3, r1
 8006bc8:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
        gyro_data[2] = gyro_proc_data.gz;  // yaw rate
 8006bcc:	4b53      	ldr	r3, [pc, #332]	@ (8006d1c <fusion+0x1dc>)
 8006bce:	689b      	ldr	r3, [r3, #8]
 8006bd0:	4618      	mov	r0, r3
 8006bd2:	f7f9 fcb9 	bl	8000548 <__aeabi_f2d>
 8006bd6:	4602      	mov	r2, r0
 8006bd8:	460b      	mov	r3, r1
 8006bda:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78

        T_end = get_microseconds();
 8006bde:	f7fb faef 	bl	80021c0 <get_microseconds>
 8006be2:	4603      	mov	r3, r0
 8006be4:	4618      	mov	r0, r3
 8006be6:	f7f9 fc8d 	bl	8000504 <__aeabi_ui2d>
 8006bea:	4602      	mov	r2, r0
 8006bec:	460b      	mov	r3, r1
 8006bee:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
        time_dif = (T_end - T_start) * 0.000001;
 8006bf2:	f8d7 00b4 	ldr.w	r0, [r7, #180]	@ 0xb4
 8006bf6:	f7f9 fca7 	bl	8000548 <__aeabi_f2d>
 8006bfa:	4602      	mov	r2, r0
 8006bfc:	460b      	mov	r3, r1
 8006bfe:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8006c02:	f7f9 fb41 	bl	8000288 <__aeabi_dsub>
 8006c06:	4602      	mov	r2, r0
 8006c08:	460b      	mov	r3, r1
 8006c0a:	4610      	mov	r0, r2
 8006c0c:	4619      	mov	r1, r3
 8006c0e:	a340      	add	r3, pc, #256	@ (adr r3, 8006d10 <fusion+0x1d0>)
 8006c10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c14:	f7f9 fcf0 	bl	80005f8 <__aeabi_dmul>
 8006c18:	4602      	mov	r2, r0
 8006c1a:	460b      	mov	r3, r1
 8006c1c:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
        dt = time_dif;
 8006c20:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8006c24:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
        imu_sensor_fusion(accel_data, gyro_data, dt, &imu);
 8006c28:	463a      	mov	r2, r7
 8006c2a:	f107 0168 	add.w	r1, r7, #104	@ 0x68
 8006c2e:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 8006c32:	ed97 0b2a 	vldr	d0, [r7, #168]	@ 0xa8
 8006c36:	4618      	mov	r0, r3
 8006c38:	f000 f91e 	bl	8006e78 <imu_sensor_fusion>
        T_start = get_microseconds();
 8006c3c:	f7fb fac0 	bl	80021c0 <get_microseconds>
 8006c40:	ee07 0a90 	vmov	s15, r0
 8006c44:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006c48:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

        // Store the results in the imu_heading structure
        imu_heading.pit = imu.pitch;
 8006c4c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006c50:	4610      	mov	r0, r2
 8006c52:	4619      	mov	r1, r3
 8006c54:	f7f9 ffc8 	bl	8000be8 <__aeabi_d2f>
 8006c58:	4603      	mov	r3, r0
 8006c5a:	4a31      	ldr	r2, [pc, #196]	@ (8006d20 <fusion+0x1e0>)
 8006c5c:	6013      	str	r3, [r2, #0]
        imu_heading.dpit = imu.pitch_speed;
 8006c5e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006c62:	4610      	mov	r0, r2
 8006c64:	4619      	mov	r1, r3
 8006c66:	f7f9 ffbf 	bl	8000be8 <__aeabi_d2f>
 8006c6a:	4603      	mov	r3, r0
 8006c6c:	4a2c      	ldr	r2, [pc, #176]	@ (8006d20 <fusion+0x1e0>)
 8006c6e:	60d3      	str	r3, [r2, #12]
        imu_heading.ddpit = imu.pitch_accel;
 8006c70:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8006c74:	4610      	mov	r0, r2
 8006c76:	4619      	mov	r1, r3
 8006c78:	f7f9 ffb6 	bl	8000be8 <__aeabi_d2f>
 8006c7c:	4603      	mov	r3, r0
 8006c7e:	4a28      	ldr	r2, [pc, #160]	@ (8006d20 <fusion+0x1e0>)
 8006c80:	6193      	str	r3, [r2, #24]
        imu_heading.rol = imu.roll;
 8006c82:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006c86:	4610      	mov	r0, r2
 8006c88:	4619      	mov	r1, r3
 8006c8a:	f7f9 ffad 	bl	8000be8 <__aeabi_d2f>
 8006c8e:	4603      	mov	r3, r0
 8006c90:	4a23      	ldr	r2, [pc, #140]	@ (8006d20 <fusion+0x1e0>)
 8006c92:	6053      	str	r3, [r2, #4]
        imu_heading.drol = imu.roll_speed;
 8006c94:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8006c98:	4610      	mov	r0, r2
 8006c9a:	4619      	mov	r1, r3
 8006c9c:	f7f9 ffa4 	bl	8000be8 <__aeabi_d2f>
 8006ca0:	4603      	mov	r3, r0
 8006ca2:	4a1f      	ldr	r2, [pc, #124]	@ (8006d20 <fusion+0x1e0>)
 8006ca4:	6113      	str	r3, [r2, #16]
        imu_heading.ddrol = imu.roll_accel;
 8006ca6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006caa:	4610      	mov	r0, r2
 8006cac:	4619      	mov	r1, r3
 8006cae:	f7f9 ff9b 	bl	8000be8 <__aeabi_d2f>
 8006cb2:	4603      	mov	r3, r0
 8006cb4:	4a1a      	ldr	r2, [pc, #104]	@ (8006d20 <fusion+0x1e0>)
 8006cb6:	61d3      	str	r3, [r2, #28]
        imu_heading.yaw = imu.yaw;
 8006cb8:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8006cbc:	4610      	mov	r0, r2
 8006cbe:	4619      	mov	r1, r3
 8006cc0:	f7f9 ff92 	bl	8000be8 <__aeabi_d2f>
 8006cc4:	4603      	mov	r3, r0
 8006cc6:	4a16      	ldr	r2, [pc, #88]	@ (8006d20 <fusion+0x1e0>)
 8006cc8:	6093      	str	r3, [r2, #8]
        imu_heading.dyaw = imu.yaw_speed;
 8006cca:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006cce:	4610      	mov	r0, r2
 8006cd0:	4619      	mov	r1, r3
 8006cd2:	f7f9 ff89 	bl	8000be8 <__aeabi_d2f>
 8006cd6:	4603      	mov	r3, r0
 8006cd8:	4a11      	ldr	r2, [pc, #68]	@ (8006d20 <fusion+0x1e0>)
 8006cda:	6153      	str	r3, [r2, #20]
        imu_heading.ddyaw = imu.yaw_accel;
 8006cdc:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8006ce0:	4610      	mov	r0, r2
 8006ce2:	4619      	mov	r1, r3
 8006ce4:	f7f9 ff80 	bl	8000be8 <__aeabi_d2f>
 8006ce8:	4603      	mov	r3, r0
 8006cea:	4a0d      	ldr	r2, [pc, #52]	@ (8006d20 <fusion+0x1e0>)
 8006cec:	6213      	str	r3, [r2, #32]
        imu_heading.ddz = imu.vertical_accel;
 8006cee:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8006cf2:	4610      	mov	r0, r2
 8006cf4:	4619      	mov	r1, r3
 8006cf6:	f7f9 ff77 	bl	8000be8 <__aeabi_d2f>
 8006cfa:	4603      	mov	r3, r0
 8006cfc:	4a08      	ldr	r2, [pc, #32]	@ (8006d20 <fusion+0x1e0>)
 8006cfe:	6253      	str	r3, [r2, #36]	@ 0x24
        ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8006d00:	f04f 31ff 	mov.w	r1, #4294967295
 8006d04:	2001      	movs	r0, #1
 8006d06:	f012 f93d 	bl	8018f84 <ulTaskNotifyTake>
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8006d0a:	bf00      	nop
 8006d0c:	e731      	b.n	8006b72 <fusion+0x32>
 8006d0e:	bf00      	nop
 8006d10:	a0b5ed8d 	.word	0xa0b5ed8d
 8006d14:	3eb0c6f7 	.word	0x3eb0c6f7
 8006d18:	20003728 	.word	0x20003728
 8006d1c:	20003738 	.word	0x20003738
 8006d20:	20003700 	.word	0x20003700
 8006d24:	47ae147b 	.word	0x47ae147b
 8006d28:	3f847ae1 	.word	0x3f847ae1
 8006d2c:	9999999a 	.word	0x9999999a
 8006d30:	3fb99999 	.word	0x3fb99999

08006d34 <low_pass_filter>:

    return 0;
}

// Low-pass filter function
double low_pass_filter(double input, double *prev_output, double alpha) {
 8006d34:	b5b0      	push	{r4, r5, r7, lr}
 8006d36:	b086      	sub	sp, #24
 8006d38:	af00      	add	r7, sp, #0
 8006d3a:	ed87 0b04 	vstr	d0, [r7, #16]
 8006d3e:	60f8      	str	r0, [r7, #12]
 8006d40:	ed87 1b00 	vstr	d1, [r7]
    *prev_output = alpha * input + (1 - alpha) * (*prev_output);
 8006d44:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8006d48:	e9d7 0100 	ldrd	r0, r1, [r7]
 8006d4c:	f7f9 fc54 	bl	80005f8 <__aeabi_dmul>
 8006d50:	4602      	mov	r2, r0
 8006d52:	460b      	mov	r3, r1
 8006d54:	4614      	mov	r4, r2
 8006d56:	461d      	mov	r5, r3
 8006d58:	e9d7 2300 	ldrd	r2, r3, [r7]
 8006d5c:	f04f 0000 	mov.w	r0, #0
 8006d60:	4911      	ldr	r1, [pc, #68]	@ (8006da8 <low_pass_filter+0x74>)
 8006d62:	f7f9 fa91 	bl	8000288 <__aeabi_dsub>
 8006d66:	4602      	mov	r2, r0
 8006d68:	460b      	mov	r3, r1
 8006d6a:	4610      	mov	r0, r2
 8006d6c:	4619      	mov	r1, r3
 8006d6e:	68fb      	ldr	r3, [r7, #12]
 8006d70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d74:	f7f9 fc40 	bl	80005f8 <__aeabi_dmul>
 8006d78:	4602      	mov	r2, r0
 8006d7a:	460b      	mov	r3, r1
 8006d7c:	4620      	mov	r0, r4
 8006d7e:	4629      	mov	r1, r5
 8006d80:	f7f9 fa84 	bl	800028c <__adddf3>
 8006d84:	4602      	mov	r2, r0
 8006d86:	460b      	mov	r3, r1
 8006d88:	68f9      	ldr	r1, [r7, #12]
 8006d8a:	e9c1 2300 	strd	r2, r3, [r1]
    return *prev_output;
 8006d8e:	68fb      	ldr	r3, [r7, #12]
 8006d90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006d94:	ec43 2b17 	vmov	d7, r2, r3
}
 8006d98:	eeb0 0a47 	vmov.f32	s0, s14
 8006d9c:	eef0 0a67 	vmov.f32	s1, s15
 8006da0:	3718      	adds	r7, #24
 8006da2:	46bd      	mov	sp, r7
 8006da4:	bdb0      	pop	{r4, r5, r7, pc}
 8006da6:	bf00      	nop
 8006da8:	3ff00000 	.word	0x3ff00000

08006dac <initIMUSensorFusion>:


void initIMUSensorFusion(IMUSensorFusion *imu) {
 8006dac:	b480      	push	{r7}
 8006dae:	b083      	sub	sp, #12
 8006db0:	af00      	add	r7, sp, #0
 8006db2:	6078      	str	r0, [r7, #4]
    imu->pitch = 0.0;
 8006db4:	6879      	ldr	r1, [r7, #4]
 8006db6:	f04f 0200 	mov.w	r2, #0
 8006dba:	f04f 0300 	mov.w	r3, #0
 8006dbe:	e9c1 2300 	strd	r2, r3, [r1]
    imu->pitch_speed = 0.0;
 8006dc2:	6879      	ldr	r1, [r7, #4]
 8006dc4:	f04f 0200 	mov.w	r2, #0
 8006dc8:	f04f 0300 	mov.w	r3, #0
 8006dcc:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->pitch_accel = 0.0;
 8006dd0:	6879      	ldr	r1, [r7, #4]
 8006dd2:	f04f 0200 	mov.w	r2, #0
 8006dd6:	f04f 0300 	mov.w	r3, #0
 8006dda:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll = 0.0;
 8006dde:	6879      	ldr	r1, [r7, #4]
 8006de0:	f04f 0200 	mov.w	r2, #0
 8006de4:	f04f 0300 	mov.w	r3, #0
 8006de8:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->roll_speed = 0.0;
 8006dec:	6879      	ldr	r1, [r7, #4]
 8006dee:	f04f 0200 	mov.w	r2, #0
 8006df2:	f04f 0300 	mov.w	r3, #0
 8006df6:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->roll_accel = 0.0;
 8006dfa:	6879      	ldr	r1, [r7, #4]
 8006dfc:	f04f 0200 	mov.w	r2, #0
 8006e00:	f04f 0300 	mov.w	r3, #0
 8006e04:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw = 0.0;
 8006e08:	6879      	ldr	r1, [r7, #4]
 8006e0a:	f04f 0200 	mov.w	r2, #0
 8006e0e:	f04f 0300 	mov.w	r3, #0
 8006e12:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
    imu->yaw_speed = 0.0;
 8006e16:	6879      	ldr	r1, [r7, #4]
 8006e18:	f04f 0200 	mov.w	r2, #0
 8006e1c:	f04f 0300 	mov.w	r3, #0
 8006e20:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
    imu->yaw_accel = 0.0;
 8006e24:	6879      	ldr	r1, [r7, #4]
 8006e26:	f04f 0200 	mov.w	r2, #0
 8006e2a:	f04f 0300 	mov.w	r3, #0
 8006e2e:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40
    imu->vertical_accel = 0.0;
 8006e32:	6879      	ldr	r1, [r7, #4]
 8006e34:	f04f 0200 	mov.w	r2, #0
 8006e38:	f04f 0300 	mov.w	r3, #0
 8006e3c:	e9c1 2312 	strd	r2, r3, [r1, #72]	@ 0x48
    imu->acc_x_lpf = 0.0;
 8006e40:	6879      	ldr	r1, [r7, #4]
 8006e42:	f04f 0200 	mov.w	r2, #0
 8006e46:	f04f 0300 	mov.w	r3, #0
 8006e4a:	e9c1 2314 	strd	r2, r3, [r1, #80]	@ 0x50
    imu->acc_y_lpf = 0.0;
 8006e4e:	6879      	ldr	r1, [r7, #4]
 8006e50:	f04f 0200 	mov.w	r2, #0
 8006e54:	f04f 0300 	mov.w	r3, #0
 8006e58:	e9c1 2316 	strd	r2, r3, [r1, #88]	@ 0x58
    imu->acc_z_lpf = 0.0;
 8006e5c:	6879      	ldr	r1, [r7, #4]
 8006e5e:	f04f 0200 	mov.w	r2, #0
 8006e62:	f04f 0300 	mov.w	r3, #0
 8006e66:	e9c1 2318 	strd	r2, r3, [r1, #96]	@ 0x60
}
 8006e6a:	bf00      	nop
 8006e6c:	370c      	adds	r7, #12
 8006e6e:	46bd      	mov	sp, r7
 8006e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e74:	4770      	bx	lr
	...

08006e78 <imu_sensor_fusion>:
void imu_sensor_fusion(double accel_data[3], double gyro_data[3], double dt,
                       IMUSensorFusion *imu) {
 8006e78:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8006e7c:	b08a      	sub	sp, #40	@ 0x28
 8006e7e:	af00      	add	r7, sp, #0
 8006e80:	6178      	str	r0, [r7, #20]
 8006e82:	6139      	str	r1, [r7, #16]
 8006e84:	ed87 0b02 	vstr	d0, [r7, #8]
 8006e88:	607a      	str	r2, [r7, #4]
    // Low-pass filter accelerometer data
    accel_data[0] = low_pass_filter(accel_data[0], &(imu->acc_x_lpf), LPF_ALPHA);
 8006e8a:	697b      	ldr	r3, [r7, #20]
 8006e8c:	ed93 7b00 	vldr	d7, [r3]
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	3350      	adds	r3, #80	@ 0x50
 8006e94:	ed9f 1bb8 	vldr	d1, [pc, #736]	@ 8007178 <imu_sensor_fusion+0x300>
 8006e98:	4618      	mov	r0, r3
 8006e9a:	eeb0 0a47 	vmov.f32	s0, s14
 8006e9e:	eef0 0a67 	vmov.f32	s1, s15
 8006ea2:	f7ff ff47 	bl	8006d34 <low_pass_filter>
 8006ea6:	eeb0 7a40 	vmov.f32	s14, s0
 8006eaa:	eef0 7a60 	vmov.f32	s15, s1
 8006eae:	697b      	ldr	r3, [r7, #20]
 8006eb0:	ed83 7b00 	vstr	d7, [r3]
    accel_data[1] = low_pass_filter(accel_data[1], &(imu->acc_y_lpf), LPF_ALPHA);
 8006eb4:	697b      	ldr	r3, [r7, #20]
 8006eb6:	3308      	adds	r3, #8
 8006eb8:	ed93 7b00 	vldr	d7, [r3]
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	f103 0258 	add.w	r2, r3, #88	@ 0x58
 8006ec2:	697b      	ldr	r3, [r7, #20]
 8006ec4:	f103 0408 	add.w	r4, r3, #8
 8006ec8:	ed9f 1bab 	vldr	d1, [pc, #684]	@ 8007178 <imu_sensor_fusion+0x300>
 8006ecc:	4610      	mov	r0, r2
 8006ece:	eeb0 0a47 	vmov.f32	s0, s14
 8006ed2:	eef0 0a67 	vmov.f32	s1, s15
 8006ed6:	f7ff ff2d 	bl	8006d34 <low_pass_filter>
 8006eda:	eeb0 7a40 	vmov.f32	s14, s0
 8006ede:	eef0 7a60 	vmov.f32	s15, s1
 8006ee2:	ed84 7b00 	vstr	d7, [r4]
    accel_data[2] = low_pass_filter(accel_data[2], &(imu->acc_z_lpf), LPF_ALPHA);
 8006ee6:	697b      	ldr	r3, [r7, #20]
 8006ee8:	3310      	adds	r3, #16
 8006eea:	ed93 7b00 	vldr	d7, [r3]
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 8006ef4:	697b      	ldr	r3, [r7, #20]
 8006ef6:	f103 0410 	add.w	r4, r3, #16
 8006efa:	ed9f 1b9f 	vldr	d1, [pc, #636]	@ 8007178 <imu_sensor_fusion+0x300>
 8006efe:	4610      	mov	r0, r2
 8006f00:	eeb0 0a47 	vmov.f32	s0, s14
 8006f04:	eef0 0a67 	vmov.f32	s1, s15
 8006f08:	f7ff ff14 	bl	8006d34 <low_pass_filter>
 8006f0c:	eeb0 7a40 	vmov.f32	s14, s0
 8006f10:	eef0 7a60 	vmov.f32	s15, s1
 8006f14:	ed84 7b00 	vstr	d7, [r4]

    // Calculate pitch and roll from accelerometer data
    double pitch_accel_meas = atan2(-accel_data[0], sqrt(accel_data[1] * accel_data[1] + accel_data[2] * accel_data[2]));
 8006f18:	697b      	ldr	r3, [r7, #20]
 8006f1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f1e:	4690      	mov	r8, r2
 8006f20:	f083 4900 	eor.w	r9, r3, #2147483648	@ 0x80000000
 8006f24:	697b      	ldr	r3, [r7, #20]
 8006f26:	3308      	adds	r3, #8
 8006f28:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006f2c:	697b      	ldr	r3, [r7, #20]
 8006f2e:	3308      	adds	r3, #8
 8006f30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f34:	f7f9 fb60 	bl	80005f8 <__aeabi_dmul>
 8006f38:	4602      	mov	r2, r0
 8006f3a:	460b      	mov	r3, r1
 8006f3c:	4614      	mov	r4, r2
 8006f3e:	461d      	mov	r5, r3
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	3310      	adds	r3, #16
 8006f44:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006f48:	697b      	ldr	r3, [r7, #20]
 8006f4a:	3310      	adds	r3, #16
 8006f4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006f50:	f7f9 fb52 	bl	80005f8 <__aeabi_dmul>
 8006f54:	4602      	mov	r2, r0
 8006f56:	460b      	mov	r3, r1
 8006f58:	4620      	mov	r0, r4
 8006f5a:	4629      	mov	r1, r5
 8006f5c:	f7f9 f996 	bl	800028c <__adddf3>
 8006f60:	4602      	mov	r2, r0
 8006f62:	460b      	mov	r3, r1
 8006f64:	ec43 2b17 	vmov	d7, r2, r3
 8006f68:	eeb0 0a47 	vmov.f32	s0, s14
 8006f6c:	eef0 0a67 	vmov.f32	s1, s15
 8006f70:	f018 fbac 	bl	801f6cc <sqrt>
 8006f74:	eeb0 7a40 	vmov.f32	s14, s0
 8006f78:	eef0 7a60 	vmov.f32	s15, s1
 8006f7c:	eeb0 1a47 	vmov.f32	s2, s14
 8006f80:	eef0 1a67 	vmov.f32	s3, s15
 8006f84:	ec49 8b10 	vmov	d0, r8, r9
 8006f88:	f018 fb9e 	bl	801f6c8 <atan2>
 8006f8c:	ed87 0b08 	vstr	d0, [r7, #32]
    double roll_accel_meas = atan2(accel_data[1], accel_data[2]);
 8006f90:	697b      	ldr	r3, [r7, #20]
 8006f92:	3308      	adds	r3, #8
 8006f94:	ed93 7b00 	vldr	d7, [r3]
 8006f98:	697b      	ldr	r3, [r7, #20]
 8006f9a:	3310      	adds	r3, #16
 8006f9c:	ed93 6b00 	vldr	d6, [r3]
 8006fa0:	eeb0 1a46 	vmov.f32	s2, s12
 8006fa4:	eef0 1a66 	vmov.f32	s3, s13
 8006fa8:	eeb0 0a47 	vmov.f32	s0, s14
 8006fac:	eef0 0a67 	vmov.f32	s1, s15
 8006fb0:	f018 fb8a 	bl	801f6c8 <atan2>
 8006fb4:	ed87 0b06 	vstr	d0, [r7, #24]

    // Apply complementary filter
    imu->pitch = ALPHA * (imu->pitch + gyro_data[1] * dt) + (1 - ALPHA) * pitch_accel_meas;
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	e9d3 4500 	ldrd	r4, r5, [r3]
 8006fbe:	693b      	ldr	r3, [r7, #16]
 8006fc0:	3308      	adds	r3, #8
 8006fc2:	e9d3 0100 	ldrd	r0, r1, [r3]
 8006fc6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006fca:	f7f9 fb15 	bl	80005f8 <__aeabi_dmul>
 8006fce:	4602      	mov	r2, r0
 8006fd0:	460b      	mov	r3, r1
 8006fd2:	4620      	mov	r0, r4
 8006fd4:	4629      	mov	r1, r5
 8006fd6:	f7f9 f959 	bl	800028c <__adddf3>
 8006fda:	4602      	mov	r2, r0
 8006fdc:	460b      	mov	r3, r1
 8006fde:	4610      	mov	r0, r2
 8006fe0:	4619      	mov	r1, r3
 8006fe2:	a36a      	add	r3, pc, #424	@ (adr r3, 800718c <imu_sensor_fusion+0x314>)
 8006fe4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006fe8:	f7f9 fb06 	bl	80005f8 <__aeabi_dmul>
 8006fec:	4602      	mov	r2, r0
 8006fee:	460b      	mov	r3, r1
 8006ff0:	4614      	mov	r4, r2
 8006ff2:	461d      	mov	r5, r3
 8006ff4:	a367      	add	r3, pc, #412	@ (adr r3, 8007194 <imu_sensor_fusion+0x31c>)
 8006ff6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ffa:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8006ffe:	f7f9 fafb 	bl	80005f8 <__aeabi_dmul>
 8007002:	4602      	mov	r2, r0
 8007004:	460b      	mov	r3, r1
 8007006:	4620      	mov	r0, r4
 8007008:	4629      	mov	r1, r5
 800700a:	f7f9 f93f 	bl	800028c <__adddf3>
 800700e:	4602      	mov	r2, r0
 8007010:	460b      	mov	r3, r1
 8007012:	6879      	ldr	r1, [r7, #4]
 8007014:	e9c1 2300 	strd	r2, r3, [r1]
    imu->roll = ALPHA * (imu->roll + gyro_data[0] * dt) + (1 - ALPHA) * roll_accel_meas;
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 800701e:	693b      	ldr	r3, [r7, #16]
 8007020:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007024:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007028:	f7f9 fae6 	bl	80005f8 <__aeabi_dmul>
 800702c:	4602      	mov	r2, r0
 800702e:	460b      	mov	r3, r1
 8007030:	4620      	mov	r0, r4
 8007032:	4629      	mov	r1, r5
 8007034:	f7f9 f92a 	bl	800028c <__adddf3>
 8007038:	4602      	mov	r2, r0
 800703a:	460b      	mov	r3, r1
 800703c:	4610      	mov	r0, r2
 800703e:	4619      	mov	r1, r3
 8007040:	a352      	add	r3, pc, #328	@ (adr r3, 800718c <imu_sensor_fusion+0x314>)
 8007042:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007046:	f7f9 fad7 	bl	80005f8 <__aeabi_dmul>
 800704a:	4602      	mov	r2, r0
 800704c:	460b      	mov	r3, r1
 800704e:	4614      	mov	r4, r2
 8007050:	461d      	mov	r5, r3
 8007052:	a350      	add	r3, pc, #320	@ (adr r3, 8007194 <imu_sensor_fusion+0x31c>)
 8007054:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007058:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800705c:	f7f9 facc 	bl	80005f8 <__aeabi_dmul>
 8007060:	4602      	mov	r2, r0
 8007062:	460b      	mov	r3, r1
 8007064:	4620      	mov	r0, r4
 8007066:	4629      	mov	r1, r5
 8007068:	f7f9 f910 	bl	800028c <__adddf3>
 800706c:	4602      	mov	r2, r0
 800706e:	460b      	mov	r3, r1
 8007070:	6879      	ldr	r1, [r7, #4]
 8007072:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->yaw += gyro_data[2] * dt;
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	@ 0x30
 800707c:	693b      	ldr	r3, [r7, #16]
 800707e:	3310      	adds	r3, #16
 8007080:	e9d3 0100 	ldrd	r0, r1, [r3]
 8007084:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007088:	f7f9 fab6 	bl	80005f8 <__aeabi_dmul>
 800708c:	4602      	mov	r2, r0
 800708e:	460b      	mov	r3, r1
 8007090:	4620      	mov	r0, r4
 8007092:	4629      	mov	r1, r5
 8007094:	f7f9 f8fa 	bl	800028c <__adddf3>
 8007098:	4602      	mov	r2, r0
 800709a:	460b      	mov	r3, r1
 800709c:	6879      	ldr	r1, [r7, #4]
 800709e:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30

    // Calculate speed (rate of change of angles) directly from gyroscope data
    imu->pitch_speed = gyro_data[1];
 80070a2:	693b      	ldr	r3, [r7, #16]
 80070a4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80070a8:	6879      	ldr	r1, [r7, #4]
 80070aa:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->roll_speed = gyro_data[0];
 80070ae:	693b      	ldr	r3, [r7, #16]
 80070b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070b4:	6879      	ldr	r1, [r7, #4]
 80070b6:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->yaw_speed = gyro_data[2];
 80070ba:	693b      	ldr	r3, [r7, #16]
 80070bc:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 80070c0:	6879      	ldr	r1, [r7, #4]
 80070c2:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38

    // Calculate acceleration (rate of change of speeds)
    static double last_pitch_speed = 0, last_roll_speed = 0, last_yaw_speed = 0;
    imu->pitch_accel = (imu->pitch_speed - last_pitch_speed) / dt;
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 80070cc:	4b2c      	ldr	r3, [pc, #176]	@ (8007180 <imu_sensor_fusion+0x308>)
 80070ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070d2:	f7f9 f8d9 	bl	8000288 <__aeabi_dsub>
 80070d6:	4602      	mov	r2, r0
 80070d8:	460b      	mov	r3, r1
 80070da:	4610      	mov	r0, r2
 80070dc:	4619      	mov	r1, r3
 80070de:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80070e2:	f7f9 fbb3 	bl	800084c <__aeabi_ddiv>
 80070e6:	4602      	mov	r2, r0
 80070e8:	460b      	mov	r3, r1
 80070ea:	6879      	ldr	r1, [r7, #4]
 80070ec:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll_accel = (imu->roll_speed - last_roll_speed) / dt;
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 80070f6:	4b23      	ldr	r3, [pc, #140]	@ (8007184 <imu_sensor_fusion+0x30c>)
 80070f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80070fc:	f7f9 f8c4 	bl	8000288 <__aeabi_dsub>
 8007100:	4602      	mov	r2, r0
 8007102:	460b      	mov	r3, r1
 8007104:	4610      	mov	r0, r2
 8007106:	4619      	mov	r1, r3
 8007108:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800710c:	f7f9 fb9e 	bl	800084c <__aeabi_ddiv>
 8007110:	4602      	mov	r2, r0
 8007112:	460b      	mov	r3, r1
 8007114:	6879      	ldr	r1, [r7, #4]
 8007116:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw_accel = (imu->yaw_speed - last_yaw_speed) / dt;
 800711a:	687b      	ldr	r3, [r7, #4]
 800711c:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	@ 0x38
 8007120:	4b19      	ldr	r3, [pc, #100]	@ (8007188 <imu_sensor_fusion+0x310>)
 8007122:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007126:	f7f9 f8af 	bl	8000288 <__aeabi_dsub>
 800712a:	4602      	mov	r2, r0
 800712c:	460b      	mov	r3, r1
 800712e:	4610      	mov	r0, r2
 8007130:	4619      	mov	r1, r3
 8007132:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007136:	f7f9 fb89 	bl	800084c <__aeabi_ddiv>
 800713a:	4602      	mov	r2, r0
 800713c:	460b      	mov	r3, r1
 800713e:	6879      	ldr	r1, [r7, #4]
 8007140:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40

    // Update last speeds
    last_pitch_speed = imu->pitch_speed;
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800714a:	490d      	ldr	r1, [pc, #52]	@ (8007180 <imu_sensor_fusion+0x308>)
 800714c:	e9c1 2300 	strd	r2, r3, [r1]
    last_roll_speed = imu->roll_speed;
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8007156:	490b      	ldr	r1, [pc, #44]	@ (8007184 <imu_sensor_fusion+0x30c>)
 8007158:	e9c1 2300 	strd	r2, r3, [r1]
    last_yaw_speed = imu->yaw_speed;
 800715c:	687b      	ldr	r3, [r7, #4]
 800715e:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8007162:	4909      	ldr	r1, [pc, #36]	@ (8007188 <imu_sensor_fusion+0x310>)
 8007164:	e9c1 2300 	strd	r2, r3, [r1]

    // Calculate vertical acceleration (z-axis acceleration)
    imu->vertical_accel = sqrt((accel_data[0]*accel_data[0]) + (accel_data[1]*accel_data[1]) + (accel_data[2]*accel_data[2]));
 8007168:	697b      	ldr	r3, [r7, #20]
 800716a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800716e:	697b      	ldr	r3, [r7, #20]
 8007170:	e014      	b.n	800719c <imu_sensor_fusion+0x324>
 8007172:	bf00      	nop
 8007174:	f3af 8000 	nop.w
 8007178:	00000000 	.word	0x00000000
 800717c:	3fe00000 	.word	0x3fe00000
 8007180:	20003758 	.word	0x20003758
 8007184:	20003760 	.word	0x20003760
 8007188:	20003768 	.word	0x20003768
 800718c:	f5c28f5c 	.word	0xf5c28f5c
 8007190:	3fef5c28 	.word	0x3fef5c28
 8007194:	47ae1480 	.word	0x47ae1480
 8007198:	3f947ae1 	.word	0x3f947ae1
 800719c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071a0:	f7f9 fa2a 	bl	80005f8 <__aeabi_dmul>
 80071a4:	4602      	mov	r2, r0
 80071a6:	460b      	mov	r3, r1
 80071a8:	4614      	mov	r4, r2
 80071aa:	461d      	mov	r5, r3
 80071ac:	697b      	ldr	r3, [r7, #20]
 80071ae:	3308      	adds	r3, #8
 80071b0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80071b4:	697b      	ldr	r3, [r7, #20]
 80071b6:	3308      	adds	r3, #8
 80071b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071bc:	f7f9 fa1c 	bl	80005f8 <__aeabi_dmul>
 80071c0:	4602      	mov	r2, r0
 80071c2:	460b      	mov	r3, r1
 80071c4:	4620      	mov	r0, r4
 80071c6:	4629      	mov	r1, r5
 80071c8:	f7f9 f860 	bl	800028c <__adddf3>
 80071cc:	4602      	mov	r2, r0
 80071ce:	460b      	mov	r3, r1
 80071d0:	4614      	mov	r4, r2
 80071d2:	461d      	mov	r5, r3
 80071d4:	697b      	ldr	r3, [r7, #20]
 80071d6:	3310      	adds	r3, #16
 80071d8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80071dc:	697b      	ldr	r3, [r7, #20]
 80071de:	3310      	adds	r3, #16
 80071e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80071e4:	f7f9 fa08 	bl	80005f8 <__aeabi_dmul>
 80071e8:	4602      	mov	r2, r0
 80071ea:	460b      	mov	r3, r1
 80071ec:	4620      	mov	r0, r4
 80071ee:	4629      	mov	r1, r5
 80071f0:	f7f9 f84c 	bl	800028c <__adddf3>
 80071f4:	4602      	mov	r2, r0
 80071f6:	460b      	mov	r3, r1
 80071f8:	ec43 2b17 	vmov	d7, r2, r3
 80071fc:	eeb0 0a47 	vmov.f32	s0, s14
 8007200:	eef0 0a67 	vmov.f32	s1, s15
 8007204:	f018 fa62 	bl	801f6cc <sqrt>
 8007208:	eeb0 7a40 	vmov.f32	s14, s0
 800720c:	eef0 7a60 	vmov.f32	s15, s1
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	ed83 7b12 	vstr	d7, [r3, #72]	@ 0x48
}
 8007216:	bf00      	nop
 8007218:	3728      	adds	r7, #40	@ 0x28
 800721a:	46bd      	mov	sp, r7
 800721c:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}

08007220 <imu_proc_task_notif>:

void imu_proc_task_notif() {
 8007220:	b580      	push	{r7, lr}
 8007222:	b082      	sub	sp, #8
 8007224:	af00      	add	r7, sp, #0
	//resets the flags
	update_flag = 0b000;
 8007226:	4b0d      	ldr	r3, [pc, #52]	@ (800725c <imu_proc_task_notif+0x3c>)
 8007228:	2200      	movs	r2, #0
 800722a:	701a      	strb	r2, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 800722c:	2300      	movs	r3, #0
 800722e:	607b      	str	r3, [r7, #4]
	vTaskNotifyGiveFromISR(imu_processing_task_handle, &xHigherPriorityTaskWoken);
 8007230:	4b0b      	ldr	r3, [pc, #44]	@ (8007260 <imu_proc_task_notif+0x40>)
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	1d3a      	adds	r2, r7, #4
 8007236:	4611      	mov	r1, r2
 8007238:	4618      	mov	r0, r3
 800723a:	f011 feef 	bl	801901c <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken)
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	2b00      	cmp	r3, #0
 8007242:	d007      	beq.n	8007254 <imu_proc_task_notif+0x34>
 8007244:	4b07      	ldr	r3, [pc, #28]	@ (8007264 <imu_proc_task_notif+0x44>)
 8007246:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800724a:	601a      	str	r2, [r3, #0]
 800724c:	f3bf 8f4f 	dsb	sy
 8007250:	f3bf 8f6f 	isb	sy
}
 8007254:	bf00      	nop
 8007256:	3708      	adds	r7, #8
 8007258:	46bd      	mov	sp, r7
 800725a:	bd80      	pop	{r7, pc}
 800725c:	20003754 	.word	0x20003754
 8007260:	20003794 	.word	0x20003794
 8007264:	e000ed04 	.word	0xe000ed04

08007268 <gyro_data_ready>:

void gyro_data_ready(gyro_data_t gyro_data) {
 8007268:	b590      	push	{r4, r7, lr}
 800726a:	b085      	sub	sp, #20
 800726c:	af00      	add	r7, sp, #0
 800726e:	463c      	mov	r4, r7
 8007270:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		gyro_proc_data.gx = gyro_data.gz;
		gyro_proc_data.gy = gyro_data.gy;
		gyro_proc_data.gz = -gyro_data.gx;
	} else {

		gyro_proc_data.gx = gyro_data.gx;
 8007274:	683b      	ldr	r3, [r7, #0]
 8007276:	4a22      	ldr	r2, [pc, #136]	@ (8007300 <gyro_data_ready+0x98>)
 8007278:	6013      	str	r3, [r2, #0]
		gyro_proc_data.gy = gyro_data.gy;
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	4a20      	ldr	r2, [pc, #128]	@ (8007300 <gyro_data_ready+0x98>)
 800727e:	6053      	str	r3, [r2, #4]
		if (gyro_data.gz > 0.02 || gyro_data.gz < -0.02){
 8007280:	68bb      	ldr	r3, [r7, #8]
 8007282:	4618      	mov	r0, r3
 8007284:	f7f9 f960 	bl	8000548 <__aeabi_f2d>
 8007288:	a319      	add	r3, pc, #100	@ (adr r3, 80072f0 <gyro_data_ready+0x88>)
 800728a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800728e:	f7f9 fc43 	bl	8000b18 <__aeabi_dcmpgt>
 8007292:	4603      	mov	r3, r0
 8007294:	2b00      	cmp	r3, #0
 8007296:	d10b      	bne.n	80072b0 <gyro_data_ready+0x48>
 8007298:	68bb      	ldr	r3, [r7, #8]
 800729a:	4618      	mov	r0, r3
 800729c:	f7f9 f954 	bl	8000548 <__aeabi_f2d>
 80072a0:	a315      	add	r3, pc, #84	@ (adr r3, 80072f8 <gyro_data_ready+0x90>)
 80072a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80072a6:	f7f9 fc19 	bl	8000adc <__aeabi_dcmplt>
 80072aa:	4603      	mov	r3, r0
 80072ac:	2b00      	cmp	r3, #0
 80072ae:	d003      	beq.n	80072b8 <gyro_data_ready+0x50>
			gyro_proc_data.gz = gyro_data.gz;
 80072b0:	68bb      	ldr	r3, [r7, #8]
 80072b2:	4a13      	ldr	r2, [pc, #76]	@ (8007300 <gyro_data_ready+0x98>)
 80072b4:	6093      	str	r3, [r2, #8]
 80072b6:	e003      	b.n	80072c0 <gyro_data_ready+0x58>
		} else {
			gyro_proc_data.gz = 0;
 80072b8:	4b11      	ldr	r3, [pc, #68]	@ (8007300 <gyro_data_ready+0x98>)
 80072ba:	f04f 0200 	mov.w	r2, #0
 80072be:	609a      	str	r2, [r3, #8]
		}

	}
	gyro_proc_data.last_gyro_update = gyro_data.last_gyro_update;
 80072c0:	68fb      	ldr	r3, [r7, #12]
 80072c2:	4a0f      	ldr	r2, [pc, #60]	@ (8007300 <gyro_data_ready+0x98>)
 80072c4:	60d3      	str	r3, [r2, #12]

	update_flag |= 1; //sets bit 0 to true
 80072c6:	4b0f      	ldr	r3, [pc, #60]	@ (8007304 <gyro_data_ready+0x9c>)
 80072c8:	781b      	ldrb	r3, [r3, #0]
 80072ca:	f043 0301 	orr.w	r3, r3, #1
 80072ce:	b2da      	uxtb	r2, r3
 80072d0:	4b0c      	ldr	r3, [pc, #48]	@ (8007304 <gyro_data_ready+0x9c>)
 80072d2:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when all the data is new
	if (update_flag == 0b111|| update_flag == 0b011) {
 80072d4:	4b0b      	ldr	r3, [pc, #44]	@ (8007304 <gyro_data_ready+0x9c>)
 80072d6:	781b      	ldrb	r3, [r3, #0]
 80072d8:	2b07      	cmp	r3, #7
 80072da:	d003      	beq.n	80072e4 <gyro_data_ready+0x7c>
 80072dc:	4b09      	ldr	r3, [pc, #36]	@ (8007304 <gyro_data_ready+0x9c>)
 80072de:	781b      	ldrb	r3, [r3, #0]
 80072e0:	2b03      	cmp	r3, #3
 80072e2:	d101      	bne.n	80072e8 <gyro_data_ready+0x80>
		imu_proc_task_notif();
 80072e4:	f7ff ff9c 	bl	8007220 <imu_proc_task_notif>
	}
}
 80072e8:	bf00      	nop
 80072ea:	3714      	adds	r7, #20
 80072ec:	46bd      	mov	sp, r7
 80072ee:	bd90      	pop	{r4, r7, pc}
 80072f0:	47ae147b 	.word	0x47ae147b
 80072f4:	3f947ae1 	.word	0x3f947ae1
 80072f8:	47ae147b 	.word	0x47ae147b
 80072fc:	bf947ae1 	.word	0xbf947ae1
 8007300:	20003738 	.word	0x20003738
 8007304:	20003754 	.word	0x20003754

08007308 <accel_data_ready>:

void accel_data_ready(accel_data_t accel_data) {
 8007308:	b590      	push	{r4, r7, lr}
 800730a:	b085      	sub	sp, #20
 800730c:	af00      	add	r7, sp, #0
 800730e:	463c      	mov	r4, r7
 8007310:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		accel_proc_data.ax = accel_data.az;
		accel_proc_data.ay = accel_data.ay;
		accel_proc_data.az = -accel_data.ax;
	} else {

		accel_proc_data.ax = accel_data.ax;
 8007314:	683b      	ldr	r3, [r7, #0]
 8007316:	4a10      	ldr	r2, [pc, #64]	@ (8007358 <accel_data_ready+0x50>)
 8007318:	6013      	str	r3, [r2, #0]
		accel_proc_data.ay = accel_data.ay;
 800731a:	687b      	ldr	r3, [r7, #4]
 800731c:	4a0e      	ldr	r2, [pc, #56]	@ (8007358 <accel_data_ready+0x50>)
 800731e:	6053      	str	r3, [r2, #4]
		accel_proc_data.az = accel_data.az;
 8007320:	68bb      	ldr	r3, [r7, #8]
 8007322:	4a0d      	ldr	r2, [pc, #52]	@ (8007358 <accel_data_ready+0x50>)
 8007324:	6093      	str	r3, [r2, #8]
	}

	accel_proc_data.last_accel_update = accel_data.last_accel_update;
 8007326:	68fb      	ldr	r3, [r7, #12]
 8007328:	4a0b      	ldr	r2, [pc, #44]	@ (8007358 <accel_data_ready+0x50>)
 800732a:	60d3      	str	r3, [r2, #12]

	update_flag |= 1 << 1; //sets bit 1 to true
 800732c:	4b0b      	ldr	r3, [pc, #44]	@ (800735c <accel_data_ready+0x54>)
 800732e:	781b      	ldrb	r3, [r3, #0]
 8007330:	f043 0302 	orr.w	r3, r3, #2
 8007334:	b2da      	uxtb	r2, r3
 8007336:	4b09      	ldr	r3, [pc, #36]	@ (800735c <accel_data_ready+0x54>)
 8007338:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when accel and gyro data are new
	if (update_flag == 0b111 || update_flag == 0b011) {
 800733a:	4b08      	ldr	r3, [pc, #32]	@ (800735c <accel_data_ready+0x54>)
 800733c:	781b      	ldrb	r3, [r3, #0]
 800733e:	2b07      	cmp	r3, #7
 8007340:	d003      	beq.n	800734a <accel_data_ready+0x42>
 8007342:	4b06      	ldr	r3, [pc, #24]	@ (800735c <accel_data_ready+0x54>)
 8007344:	781b      	ldrb	r3, [r3, #0]
 8007346:	2b03      	cmp	r3, #3
 8007348:	d101      	bne.n	800734e <accel_data_ready+0x46>
		imu_proc_task_notif();
 800734a:	f7ff ff69 	bl	8007220 <imu_proc_task_notif>
	}
}
 800734e:	bf00      	nop
 8007350:	3714      	adds	r7, #20
 8007352:	46bd      	mov	sp, r7
 8007354:	bd90      	pop	{r4, r7, pc}
 8007356:	bf00      	nop
 8007358:	20003728 	.word	0x20003728
 800735c:	20003754 	.word	0x20003754

08007360 <mag_data_ready>:

void mag_data_ready(mag_data_t mag_data) {
 8007360:	b480      	push	{r7}
 8007362:	b085      	sub	sp, #20
 8007364:	af00      	add	r7, sp, #0
 8007366:	1d3b      	adds	r3, r7, #4
 8007368:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	mag_proc_data.mx = mag_data.mx;
 800736c:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8007370:	4b0c      	ldr	r3, [pc, #48]	@ (80073a4 <mag_data_ready+0x44>)
 8007372:	801a      	strh	r2, [r3, #0]
	mag_proc_data.my = mag_data.my;
 8007374:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007378:	4b0a      	ldr	r3, [pc, #40]	@ (80073a4 <mag_data_ready+0x44>)
 800737a:	805a      	strh	r2, [r3, #2]
	mag_proc_data.mz = mag_data.mz;
 800737c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8007380:	4b08      	ldr	r3, [pc, #32]	@ (80073a4 <mag_data_ready+0x44>)
 8007382:	809a      	strh	r2, [r3, #4]
	mag_proc_data.last_mag_update = mag_data.last_mag_update;
 8007384:	68fb      	ldr	r3, [r7, #12]
 8007386:	4a07      	ldr	r2, [pc, #28]	@ (80073a4 <mag_data_ready+0x44>)
 8007388:	6093      	str	r3, [r2, #8]

	update_flag |= 1 << 2;
 800738a:	4b07      	ldr	r3, [pc, #28]	@ (80073a8 <mag_data_ready+0x48>)
 800738c:	781b      	ldrb	r3, [r3, #0]
 800738e:	f043 0304 	orr.w	r3, r3, #4
 8007392:	b2da      	uxtb	r2, r3
 8007394:	4b04      	ldr	r3, [pc, #16]	@ (80073a8 <mag_data_ready+0x48>)
 8007396:	701a      	strb	r2, [r3, #0]
	if (update_flag == 0b111) {
		//disabled as magnetometer data is not used
		//imu_proc_task_notif();
	}
}
 8007398:	bf00      	nop
 800739a:	3714      	adds	r7, #20
 800739c:	46bd      	mov	sp, r7
 800739e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073a2:	4770      	bx	lr
 80073a4:	20003748 	.word	0x20003748
 80073a8:	20003754 	.word	0x20003754

080073ac <imu_processing_task>:

void imu_processing_task(void *argument) {
 80073ac:	b580      	push	{r7, lr}
 80073ae:	b082      	sub	sp, #8
 80073b0:	af00      	add	r7, sp, #0
 80073b2:	6078      	str	r0, [r7, #4]
	imu_start_ints();
 80073b4:	f7fa fc0a 	bl	8001bcc <imu_start_ints>
	ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80073b8:	f04f 31ff 	mov.w	r1, #4294967295
 80073bc:	2001      	movs	r0, #1
 80073be:	f011 fde1 	bl	8018f84 <ulTaskNotifyTake>
	imu_attitude_update();
 80073c2:	f000 f815 	bl	80073f0 <imu_attitude_update>
//	quat_startup();
	while (1) {
		fusion();
 80073c6:	f7ff fbbb 	bl	8006b40 <fusion>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80073ca:	f04f 31ff 	mov.w	r1, #4294967295
 80073ce:	2001      	movs	r0, #1
 80073d0:	f011 fdd8 	bl	8018f84 <ulTaskNotifyTake>
		imu_attitude_update();
 80073d4:	f000 f80c 	bl	80073f0 <imu_attitude_update>
		portYIELD();
 80073d8:	4b04      	ldr	r3, [pc, #16]	@ (80073ec <imu_processing_task+0x40>)
 80073da:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80073de:	601a      	str	r2, [r3, #0]
 80073e0:	f3bf 8f4f 	dsb	sy
 80073e4:	f3bf 8f6f 	isb	sy
		fusion();
 80073e8:	bf00      	nop
 80073ea:	e7ec      	b.n	80073c6 <imu_processing_task+0x1a>
 80073ec:	e000ed04 	.word	0xe000ed04

080073f0 <imu_attitude_update>:
	}
}


void imu_attitude_update(void) {
 80073f0:	b480      	push	{r7}
 80073f2:	af00      	add	r7, sp, #0

}
 80073f4:	bf00      	nop
 80073f6:	46bd      	mov	sp, r7
 80073f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073fc:	4770      	bx	lr
	...

08007400 <leg_kinematic_task>:
    } else {
        return angle;
    }
}

void leg_kinematic_task(void *argument) {
 8007400:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8007404:	ed2d 8b04 	vpush	{d8-d9}
 8007408:	b0da      	sub	sp, #360	@ 0x168
 800740a:	af00      	add	r7, sp, #0
 800740c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8007410:	f5a3 73b2 	sub.w	r3, r3, #356	@ 0x164
 8007414:	6018      	str	r0, [r3, #0]
	double leftTorque[2];
	double rightTorque[2];
	double starttime = 0;
 8007416:	f04f 0200 	mov.w	r2, #0
 800741a:	f04f 0300 	mov.w	r3, #0
 800741e:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
	double endtime = 0;
 8007422:	f04f 0200 	mov.w	r2, #0
 8007426:	f04f 0300 	mov.w	r3, #0
 800742a:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
	PID left_Tp;
	PID right_F;
	PID right_Tp;
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800742e:	f7fa fec7 	bl	80021c0 <get_microseconds>
 8007432:	4603      	mov	r3, r0
 8007434:	4618      	mov	r0, r3
 8007436:	f7f9 f865 	bl	8000504 <__aeabi_ui2d>
 800743a:	4602      	mov	r2, r0
 800743c:	460b      	mov	r3, r1
 800743e:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
        dt = endtime - starttime;
 8007442:	e9d7 2358 	ldrd	r2, r3, [r7, #352]	@ 0x160
 8007446:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	@ 0x158
 800744a:	f7f8 ff1d 	bl	8000288 <__aeabi_dsub>
 800744e:	4602      	mov	r2, r0
 8007450:	460b      	mov	r3, r1
 8007452:	e9c7 2354 	strd	r2, r3, [r7, #336]	@ 0x150
        start_time = xTaskGetTickCount();
 8007456:	f011 f919 	bl	801868c <xTaskGetTickCount>
 800745a:	4602      	mov	r2, r0
 800745c:	f507 73b4 	add.w	r3, r7, #360	@ 0x168
 8007460:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8007464:	601a      	str	r2, [r3, #0]
        starttime = get_microseconds();
 8007466:	f7fa feab 	bl	80021c0 <get_microseconds>
 800746a:	4603      	mov	r3, r0
 800746c:	4618      	mov	r0, r3
 800746e:	f7f9 f849 	bl	8000504 <__aeabi_ui2d>
 8007472:	4602      	mov	r2, r0
 8007474:	460b      	mov	r3, r1
 8007476:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
      //   g_can_motors[6].angle_data.adj_ang= clamp_angle(g_can_motors[6].angle_data.adj_ang,g_can_motors[6].angle_data.min_ang,g_can_motors[6].angle_data.max_ang);
      //   g_can_motors[7].angle_data.adj_ang= clamp_angle(g_can_motors[7].angle_data.adj_ang,g_can_motors[7].angle_data.min_ang,g_can_motors[7].angle_data.max_ang);

        /////////
       leg_pos(g_can_motors[6].angle_data.adj_ang,g_can_motors[7].angle_data.adj_ang,left_leg_pos); //8->4 9->5
 800747a:	4b7b      	ldr	r3, [pc, #492]	@ (8007668 <leg_kinematic_task+0x268>)
 800747c:	f203 636c 	addw	r3, r3, #1644	@ 0x66c
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	4618      	mov	r0, r3
 8007484:	f7f9 f860 	bl	8000548 <__aeabi_f2d>
 8007488:	4604      	mov	r4, r0
 800748a:	460d      	mov	r5, r1
 800748c:	4b76      	ldr	r3, [pc, #472]	@ (8007668 <leg_kinematic_task+0x268>)
 800748e:	f203 735c 	addw	r3, r3, #1884	@ 0x75c
 8007492:	681b      	ldr	r3, [r3, #0]
 8007494:	4618      	mov	r0, r3
 8007496:	f7f9 f857 	bl	8000548 <__aeabi_f2d>
 800749a:	4680      	mov	r8, r0
 800749c:	4689      	mov	r9, r1
 800749e:	f507 7390 	add.w	r3, r7, #288	@ 0x120
 80074a2:	4618      	mov	r0, r3
 80074a4:	ec49 8b11 	vmov	d1, r8, r9
 80074a8:	ec45 4b10 	vmov	d0, r4, r5
 80074ac:	f000 f998 	bl	80077e0 <leg_pos>
       leftLegPos.length = left_leg_pos[0];
 80074b0:	e9d7 2348 	ldrd	r2, r3, [r7, #288]	@ 0x120
 80074b4:	4610      	mov	r0, r2
 80074b6:	4619      	mov	r1, r3
 80074b8:	f7f9 fb96 	bl	8000be8 <__aeabi_d2f>
 80074bc:	4603      	mov	r3, r0
 80074be:	4a6b      	ldr	r2, [pc, #428]	@ (800766c <leg_kinematic_task+0x26c>)
 80074c0:	6053      	str	r3, [r2, #4]
       leftLegPos.angle = left_leg_pos[1];
 80074c2:	e9d7 234a 	ldrd	r2, r3, [r7, #296]	@ 0x128
 80074c6:	4610      	mov	r0, r2
 80074c8:	4619      	mov	r1, r3
 80074ca:	f7f9 fb8d 	bl	8000be8 <__aeabi_d2f>
 80074ce:	4603      	mov	r3, r0
 80074d0:	4a66      	ldr	r2, [pc, #408]	@ (800766c <leg_kinematic_task+0x26c>)
 80074d2:	6013      	str	r3, [r2, #0]

    //    leg_pos(g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,right_leg_pos);//17->6 16->7
    //    rightLegPos.length = right_leg_pos[0];
    //    rightLegPos.angle = right_leg_pos[1];
       PID_Init(&left_F, 400, 0, 50, -10000, 10000); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
 80074d4:	f107 03d0 	add.w	r3, r7, #208	@ 0xd0
 80074d8:	ed9f 4b4b 	vldr	d4, [pc, #300]	@ 8007608 <leg_kinematic_task+0x208>
 80074dc:	ed9f 3b4c 	vldr	d3, [pc, #304]	@ 8007610 <leg_kinematic_task+0x210>
 80074e0:	ed9f 2b4d 	vldr	d2, [pc, #308]	@ 8007618 <leg_kinematic_task+0x218>
 80074e4:	ed9f 1b4e 	vldr	d1, [pc, #312]	@ 8007620 <leg_kinematic_task+0x220>
 80074e8:	ed9f 0b4f 	vldr	d0, [pc, #316]	@ 8007628 <leg_kinematic_task+0x228>
 80074ec:	4618      	mov	r0, r3
 80074ee:	f7fd fac6 	bl	8004a7e <PID_Init>
       PID_Init(&left_Tp, 1, 0, 0.01, -10, 10); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
 80074f2:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 80074f6:	ed9f 4b4e 	vldr	d4, [pc, #312]	@ 8007630 <leg_kinematic_task+0x230>
 80074fa:	ed9f 3b4f 	vldr	d3, [pc, #316]	@ 8007638 <leg_kinematic_task+0x238>
 80074fe:	ed9f 2b50 	vldr	d2, [pc, #320]	@ 8007640 <leg_kinematic_task+0x240>
 8007502:	ed9f 1b47 	vldr	d1, [pc, #284]	@ 8007620 <leg_kinematic_task+0x220>
 8007506:	ed9f 0b50 	vldr	d0, [pc, #320]	@ 8007648 <leg_kinematic_task+0x248>
 800750a:	4618      	mov	r0, r3
 800750c:	f7fd fab7 	bl	8004a7e <PID_Init>
    //    PID_Init(&right_F, 5000, 0, 0.01, -1000, 1000); // Example gains: kp = 1.0, ki = 0.1, kd = 0.01, min_output = -10, max_output = 10
    //    PID_Init(&right_Tp, 0.01, 0.01, 0.01, -10, 10);
       left_F_control = PID_Compute(&left_F, 0.16, leftLegPos.length, dt,0.001);
 8007510:	4b56      	ldr	r3, [pc, #344]	@ (800766c <leg_kinematic_task+0x26c>)
 8007512:	685b      	ldr	r3, [r3, #4]
 8007514:	4618      	mov	r0, r3
 8007516:	f7f9 f817 	bl	8000548 <__aeabi_f2d>
 800751a:	f107 03d0 	add.w	r3, r7, #208	@ 0xd0
 800751e:	ed9f 3b4c 	vldr	d3, [pc, #304]	@ 8007650 <leg_kinematic_task+0x250>
 8007522:	ed97 2b54 	vldr	d2, [r7, #336]	@ 0x150
 8007526:	ec41 0b11 	vmov	d1, r0, r1
 800752a:	ed9f 0b4b 	vldr	d0, [pc, #300]	@ 8007658 <leg_kinematic_task+0x258>
 800752e:	4618      	mov	r0, r3
 8007530:	f7fd fae0 	bl	8004af4 <PID_Compute>
 8007534:	eeb0 7a40 	vmov.f32	s14, s0
 8007538:	eef0 7a60 	vmov.f32	s15, s1
 800753c:	4b4c      	ldr	r3, [pc, #304]	@ (8007670 <leg_kinematic_task+0x270>)
 800753e:	ed83 7b00 	vstr	d7, [r3]
       left_Tp_control = PID_Compute(&left_Tp, PI/2, leftLegPos.angle, dt,0.001);
 8007542:	4b4a      	ldr	r3, [pc, #296]	@ (800766c <leg_kinematic_task+0x26c>)
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	4618      	mov	r0, r3
 8007548:	f7f8 fffe 	bl	8000548 <__aeabi_f2d>
 800754c:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 8007550:	ed9f 3b3f 	vldr	d3, [pc, #252]	@ 8007650 <leg_kinematic_task+0x250>
 8007554:	ed97 2b54 	vldr	d2, [r7, #336]	@ 0x150
 8007558:	ec41 0b11 	vmov	d1, r0, r1
 800755c:	ed9f 0b40 	vldr	d0, [pc, #256]	@ 8007660 <leg_kinematic_task+0x260>
 8007560:	4618      	mov	r0, r3
 8007562:	f7fd fac7 	bl	8004af4 <PID_Compute>
 8007566:	eeb0 7a40 	vmov.f32	s14, s0
 800756a:	eef0 7a60 	vmov.f32	s15, s1
 800756e:	4b41      	ldr	r3, [pc, #260]	@ (8007674 <leg_kinematic_task+0x274>)
 8007570:	ed83 7b00 	vstr	d7, [r3]
    //    right_F_control = PID_Compute(&right_F, 0.13, rightLegPos.length, dt,0.001);
    //    right_Tp_control = -PID_Compute(&right_Tp, 0, rightLegPos.angle, dt,0.001);
       leg_conv(left_F_control,left_Tp_control,g_can_motors[6].angle_data.adj_ang,g_can_motors[7].angle_data.adj_ang,leftTorque);
 8007574:	4b3e      	ldr	r3, [pc, #248]	@ (8007670 <leg_kinematic_task+0x270>)
 8007576:	ed93 8b00 	vldr	d8, [r3]
 800757a:	4b3e      	ldr	r3, [pc, #248]	@ (8007674 <leg_kinematic_task+0x274>)
 800757c:	ed93 9b00 	vldr	d9, [r3]
 8007580:	4b39      	ldr	r3, [pc, #228]	@ (8007668 <leg_kinematic_task+0x268>)
 8007582:	f203 636c 	addw	r3, r3, #1644	@ 0x66c
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	4618      	mov	r0, r3
 800758a:	f7f8 ffdd 	bl	8000548 <__aeabi_f2d>
 800758e:	4604      	mov	r4, r0
 8007590:	460d      	mov	r5, r1
 8007592:	4b35      	ldr	r3, [pc, #212]	@ (8007668 <leg_kinematic_task+0x268>)
 8007594:	f203 735c 	addw	r3, r3, #1884	@ 0x75c
 8007598:	681b      	ldr	r3, [r3, #0]
 800759a:	4618      	mov	r0, r3
 800759c:	f7f8 ffd4 	bl	8000548 <__aeabi_f2d>
 80075a0:	4680      	mov	r8, r0
 80075a2:	4689      	mov	r9, r1
 80075a4:	f507 73a0 	add.w	r3, r7, #320	@ 0x140
 80075a8:	4618      	mov	r0, r3
 80075aa:	ec49 8b13 	vmov	d3, r8, r9
 80075ae:	ec45 4b12 	vmov	d2, r4, r5
 80075b2:	eeb0 1a49 	vmov.f32	s2, s18
 80075b6:	eef0 1a69 	vmov.f32	s3, s19
 80075ba:	eeb0 0a48 	vmov.f32	s0, s16
 80075be:	eef0 0a68 	vmov.f32	s1, s17
 80075c2:	f000 fac9 	bl	8007b58 <leg_conv>
      //  leg_conv(right_F_control,right_Tp_control,g_can_motors[6].angle_rad,g_can_motors[7].angle_rad,rightTorque);
       g_can_motors[6].torque = leftTorque[0];
 80075c6:	e9d7 2350 	ldrd	r2, r3, [r7, #320]	@ 0x140
 80075ca:	4610      	mov	r0, r2
 80075cc:	4619      	mov	r1, r3
 80075ce:	f7f9 fb0b 	bl	8000be8 <__aeabi_d2f>
 80075d2:	4602      	mov	r2, r0
 80075d4:	4b24      	ldr	r3, [pc, #144]	@ (8007668 <leg_kinematic_task+0x268>)
 80075d6:	f503 63b9 	add.w	r3, r3, #1480	@ 0x5c8
 80075da:	601a      	str	r2, [r3, #0]
       g_can_motors[7].torque = leftTorque[1];
 80075dc:	e9d7 2352 	ldrd	r2, r3, [r7, #328]	@ 0x148
 80075e0:	4610      	mov	r0, r2
 80075e2:	4619      	mov	r1, r3
 80075e4:	f7f9 fb00 	bl	8000be8 <__aeabi_d2f>
 80075e8:	4602      	mov	r2, r0
 80075ea:	4b1f      	ldr	r3, [pc, #124]	@ (8007668 <leg_kinematic_task+0x268>)
 80075ec:	f503 63d7 	add.w	r3, r3, #1720	@ 0x6b8
 80075f0:	601a      	str	r2, [r3, #0]
    //    g_can_motors[4].torque = rightTorque[0];
    //    g_can_motors[5].torque = rightTorque[1];
        ///////////////////
        vTaskDelayUntil(&start_time, 5);
 80075f2:	f107 030c 	add.w	r3, r7, #12
 80075f6:	2105      	movs	r1, #5
 80075f8:	4618      	mov	r0, r3
 80075fa:	f010 fe73 	bl	80182e4 <vTaskDelayUntil>
        endtime = get_microseconds();
 80075fe:	bf00      	nop
 8007600:	e715      	b.n	800742e <leg_kinematic_task+0x2e>
 8007602:	bf00      	nop
 8007604:	f3af 8000 	nop.w
 8007608:	00000000 	.word	0x00000000
 800760c:	40c38800 	.word	0x40c38800
 8007610:	00000000 	.word	0x00000000
 8007614:	c0c38800 	.word	0xc0c38800
 8007618:	00000000 	.word	0x00000000
 800761c:	40490000 	.word	0x40490000
	...
 800762c:	40790000 	.word	0x40790000
 8007630:	00000000 	.word	0x00000000
 8007634:	40240000 	.word	0x40240000
 8007638:	00000000 	.word	0x00000000
 800763c:	c0240000 	.word	0xc0240000
 8007640:	47ae147b 	.word	0x47ae147b
 8007644:	3f847ae1 	.word	0x3f847ae1
 8007648:	00000000 	.word	0x00000000
 800764c:	3ff00000 	.word	0x3ff00000
 8007650:	d2f1a9fc 	.word	0xd2f1a9fc
 8007654:	3f50624d 	.word	0x3f50624d
 8007658:	47ae147b 	.word	0x47ae147b
 800765c:	3fc47ae1 	.word	0x3fc47ae1
 8007660:	60000000 	.word	0x60000000
 8007664:	3ff921fb 	.word	0x3ff921fb
 8007668:	20001e48 	.word	0x20001e48
 800766c:	20001e34 	.word	0x20001e34
 8007670:	20003770 	.word	0x20003770
 8007674:	20003778 	.word	0x20003778

08007678 <rt_atan2d_snf>:
 8007678:	b5b0      	push	{r4, r5, r7, lr}
 800767a:	b088      	sub	sp, #32
 800767c:	af00      	add	r7, sp, #0
 800767e:	ed87 0b02 	vstr	d0, [r7, #8]
 8007682:	ed87 1b00 	vstr	d1, [r7]
 8007686:	ed97 0b02 	vldr	d0, [r7, #8]
 800768a:	f003 fc1b 	bl	800aec4 <rtIsNaN>
 800768e:	4603      	mov	r3, r0
 8007690:	2b00      	cmp	r3, #0
 8007692:	d106      	bne.n	80076a2 <rt_atan2d_snf+0x2a>
 8007694:	ed97 0b00 	vldr	d0, [r7]
 8007698:	f003 fc14 	bl	800aec4 <rtIsNaN>
 800769c:	4603      	mov	r3, r0
 800769e:	2b00      	cmp	r3, #0
 80076a0:	d005      	beq.n	80076ae <rt_atan2d_snf+0x36>
 80076a2:	4b4d      	ldr	r3, [pc, #308]	@ (80077d8 <rt_atan2d_snf+0x160>)
 80076a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80076a8:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80076ac:	e07e      	b.n	80077ac <rt_atan2d_snf+0x134>
 80076ae:	ed97 0b02 	vldr	d0, [r7, #8]
 80076b2:	f003 fbd9 	bl	800ae68 <rtIsInf>
 80076b6:	4603      	mov	r3, r0
 80076b8:	2b00      	cmp	r3, #0
 80076ba:	d03b      	beq.n	8007734 <rt_atan2d_snf+0xbc>
 80076bc:	ed97 0b00 	vldr	d0, [r7]
 80076c0:	f003 fbd2 	bl	800ae68 <rtIsInf>
 80076c4:	4603      	mov	r3, r0
 80076c6:	2b00      	cmp	r3, #0
 80076c8:	d034      	beq.n	8007734 <rt_atan2d_snf+0xbc>
 80076ca:	f04f 0200 	mov.w	r2, #0
 80076ce:	f04f 0300 	mov.w	r3, #0
 80076d2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80076d6:	f7f9 fa1f 	bl	8000b18 <__aeabi_dcmpgt>
 80076da:	4603      	mov	r3, r0
 80076dc:	2b00      	cmp	r3, #0
 80076de:	d002      	beq.n	80076e6 <rt_atan2d_snf+0x6e>
 80076e0:	2301      	movs	r3, #1
 80076e2:	617b      	str	r3, [r7, #20]
 80076e4:	e002      	b.n	80076ec <rt_atan2d_snf+0x74>
 80076e6:	f04f 33ff 	mov.w	r3, #4294967295
 80076ea:	617b      	str	r3, [r7, #20]
 80076ec:	f04f 0200 	mov.w	r2, #0
 80076f0:	f04f 0300 	mov.w	r3, #0
 80076f4:	e9d7 0100 	ldrd	r0, r1, [r7]
 80076f8:	f7f9 fa0e 	bl	8000b18 <__aeabi_dcmpgt>
 80076fc:	4603      	mov	r3, r0
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d002      	beq.n	8007708 <rt_atan2d_snf+0x90>
 8007702:	2301      	movs	r3, #1
 8007704:	613b      	str	r3, [r7, #16]
 8007706:	e002      	b.n	800770e <rt_atan2d_snf+0x96>
 8007708:	f04f 33ff 	mov.w	r3, #4294967295
 800770c:	613b      	str	r3, [r7, #16]
 800770e:	6978      	ldr	r0, [r7, #20]
 8007710:	f7f8 ff08 	bl	8000524 <__aeabi_i2d>
 8007714:	4604      	mov	r4, r0
 8007716:	460d      	mov	r5, r1
 8007718:	6938      	ldr	r0, [r7, #16]
 800771a:	f7f8 ff03 	bl	8000524 <__aeabi_i2d>
 800771e:	4602      	mov	r2, r0
 8007720:	460b      	mov	r3, r1
 8007722:	ec43 2b11 	vmov	d1, r2, r3
 8007726:	ec45 4b10 	vmov	d0, r4, r5
 800772a:	f017 ffcd 	bl	801f6c8 <atan2>
 800772e:	ed87 0b06 	vstr	d0, [r7, #24]
 8007732:	e03b      	b.n	80077ac <rt_atan2d_snf+0x134>
 8007734:	f04f 0200 	mov.w	r2, #0
 8007738:	f04f 0300 	mov.w	r3, #0
 800773c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8007740:	f7f9 f9c2 	bl	8000ac8 <__aeabi_dcmpeq>
 8007744:	4603      	mov	r3, r0
 8007746:	2b00      	cmp	r3, #0
 8007748:	d028      	beq.n	800779c <rt_atan2d_snf+0x124>
 800774a:	f04f 0200 	mov.w	r2, #0
 800774e:	f04f 0300 	mov.w	r3, #0
 8007752:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8007756:	f7f9 f9df 	bl	8000b18 <__aeabi_dcmpgt>
 800775a:	4603      	mov	r3, r0
 800775c:	2b00      	cmp	r3, #0
 800775e:	d005      	beq.n	800776c <rt_atan2d_snf+0xf4>
 8007760:	a319      	add	r3, pc, #100	@ (adr r3, 80077c8 <rt_atan2d_snf+0x150>)
 8007762:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007766:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800776a:	e01f      	b.n	80077ac <rt_atan2d_snf+0x134>
 800776c:	f04f 0200 	mov.w	r2, #0
 8007770:	f04f 0300 	mov.w	r3, #0
 8007774:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8007778:	f7f9 f9b0 	bl	8000adc <__aeabi_dcmplt>
 800777c:	4603      	mov	r3, r0
 800777e:	2b00      	cmp	r3, #0
 8007780:	d005      	beq.n	800778e <rt_atan2d_snf+0x116>
 8007782:	a313      	add	r3, pc, #76	@ (adr r3, 80077d0 <rt_atan2d_snf+0x158>)
 8007784:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007788:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800778c:	e00e      	b.n	80077ac <rt_atan2d_snf+0x134>
 800778e:	f04f 0200 	mov.w	r2, #0
 8007792:	f04f 0300 	mov.w	r3, #0
 8007796:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800779a:	e007      	b.n	80077ac <rt_atan2d_snf+0x134>
 800779c:	ed97 1b00 	vldr	d1, [r7]
 80077a0:	ed97 0b02 	vldr	d0, [r7, #8]
 80077a4:	f017 ff90 	bl	801f6c8 <atan2>
 80077a8:	ed87 0b06 	vstr	d0, [r7, #24]
 80077ac:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80077b0:	ec43 2b17 	vmov	d7, r2, r3
 80077b4:	eeb0 0a47 	vmov.f32	s0, s14
 80077b8:	eef0 0a67 	vmov.f32	s1, s15
 80077bc:	3720      	adds	r7, #32
 80077be:	46bd      	mov	sp, r7
 80077c0:	bdb0      	pop	{r4, r5, r7, pc}
 80077c2:	bf00      	nop
 80077c4:	f3af 8000 	nop.w
 80077c8:	54442d18 	.word	0x54442d18
 80077cc:	3ff921fb 	.word	0x3ff921fb
 80077d0:	54442d18 	.word	0x54442d18
 80077d4:	bff921fb 	.word	0xbff921fb
 80077d8:	20000010 	.word	0x20000010
 80077dc:	00000000 	.word	0x00000000

080077e0 <leg_pos>:
 80077e0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80077e4:	b09a      	sub	sp, #104	@ 0x68
 80077e6:	af00      	add	r7, sp, #0
 80077e8:	ed87 0b04 	vstr	d0, [r7, #16]
 80077ec:	ed87 1b02 	vstr	d1, [r7, #8]
 80077f0:	6078      	str	r0, [r7, #4]
 80077f2:	ed97 0b04 	vldr	d0, [r7, #16]
 80077f6:	f018 f92f 	bl	801fa58 <cos>
 80077fa:	ed87 0b18 	vstr	d0, [r7, #96]	@ 0x60
 80077fe:	ed97 0b02 	vldr	d0, [r7, #8]
 8007802:	f018 f929 	bl	801fa58 <cos>
 8007806:	ed87 0b16 	vstr	d0, [r7, #88]	@ 0x58
 800780a:	ed97 0b04 	vldr	d0, [r7, #16]
 800780e:	f018 f97f 	bl	801fb10 <sin>
 8007812:	ed87 0b14 	vstr	d0, [r7, #80]	@ 0x50
 8007816:	ed97 0b02 	vldr	d0, [r7, #8]
 800781a:	f018 f979 	bl	801fb10 <sin>
 800781e:	ed87 0b12 	vstr	d0, [r7, #72]	@ 0x48
 8007822:	a3c4      	add	r3, pc, #784	@ (adr r3, 8007b34 <leg_pos+0x354>)
 8007824:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007828:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800782c:	f7f8 fee4 	bl	80005f8 <__aeabi_dmul>
 8007830:	4602      	mov	r2, r0
 8007832:	460b      	mov	r3, r1
 8007834:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8007838:	a3be      	add	r3, pc, #760	@ (adr r3, 8007b34 <leg_pos+0x354>)
 800783a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800783e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007842:	f7f8 fed9 	bl	80005f8 <__aeabi_dmul>
 8007846:	4602      	mov	r2, r0
 8007848:	460b      	mov	r3, r1
 800784a:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
 800784e:	a3bb      	add	r3, pc, #748	@ (adr r3, 8007b3c <leg_pos+0x35c>)
 8007850:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007854:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007858:	f7f8 fece 	bl	80005f8 <__aeabi_dmul>
 800785c:	4602      	mov	r2, r0
 800785e:	460b      	mov	r3, r1
 8007860:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8007864:	a3b5      	add	r3, pc, #724	@ (adr r3, 8007b3c <leg_pos+0x35c>)
 8007866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800786a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800786e:	f7f8 fec3 	bl	80005f8 <__aeabi_dmul>
 8007872:	4602      	mov	r2, r0
 8007874:	460b      	mov	r3, r1
 8007876:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800787a:	a3ae      	add	r3, pc, #696	@ (adr r3, 8007b34 <leg_pos+0x354>)
 800787c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007880:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007884:	f7f8 feb8 	bl	80005f8 <__aeabi_dmul>
 8007888:	4602      	mov	r2, r0
 800788a:	460b      	mov	r3, r1
 800788c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8007890:	f7f8 fcfa 	bl	8000288 <__aeabi_dsub>
 8007894:	4602      	mov	r2, r0
 8007896:	460b      	mov	r3, r1
 8007898:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 800789c:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80078a0:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 80078a4:	f7f8 fcf0 	bl	8000288 <__aeabi_dsub>
 80078a8:	4602      	mov	r2, r0
 80078aa:	460b      	mov	r3, r1
 80078ac:	e9c7 2308 	strd	r2, r3, [r7, #32]
 80078b0:	a3a0      	add	r3, pc, #640	@ (adr r3, 8007b34 <leg_pos+0x354>)
 80078b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078b6:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 80078ba:	f7f8 fe9d 	bl	80005f8 <__aeabi_dmul>
 80078be:	4602      	mov	r2, r0
 80078c0:	460b      	mov	r3, r1
 80078c2:	4610      	mov	r0, r2
 80078c4:	4619      	mov	r1, r3
 80078c6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80078ca:	f7f8 fcdd 	bl	8000288 <__aeabi_dsub>
 80078ce:	4602      	mov	r2, r0
 80078d0:	460b      	mov	r3, r1
 80078d2:	4610      	mov	r0, r2
 80078d4:	4619      	mov	r1, r3
 80078d6:	a39b      	add	r3, pc, #620	@ (adr r3, 8007b44 <leg_pos+0x364>)
 80078d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078dc:	f7f8 fcd6 	bl	800028c <__adddf3>
 80078e0:	4602      	mov	r2, r0
 80078e2:	460b      	mov	r3, r1
 80078e4:	e9c7 2306 	strd	r2, r3, [r7, #24]
 80078e8:	a394      	add	r3, pc, #592	@ (adr r3, 8007b3c <leg_pos+0x35c>)
 80078ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80078ee:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 80078f2:	f7f8 fe81 	bl	80005f8 <__aeabi_dmul>
 80078f6:	4602      	mov	r2, r0
 80078f8:	460b      	mov	r3, r1
 80078fa:	4614      	mov	r4, r2
 80078fc:	461d      	mov	r5, r3
 80078fe:	a38f      	add	r3, pc, #572	@ (adr r3, 8007b3c <leg_pos+0x35c>)
 8007900:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007904:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8007908:	f7f8 fe76 	bl	80005f8 <__aeabi_dmul>
 800790c:	4602      	mov	r2, r0
 800790e:	460b      	mov	r3, r1
 8007910:	4620      	mov	r0, r4
 8007912:	4629      	mov	r1, r5
 8007914:	f7f8 fcb8 	bl	8000288 <__aeabi_dsub>
 8007918:	4602      	mov	r2, r0
 800791a:	460b      	mov	r3, r1
 800791c:	4610      	mov	r0, r2
 800791e:	4619      	mov	r1, r3
 8007920:	a38a      	add	r3, pc, #552	@ (adr r3, 8007b4c <leg_pos+0x36c>)
 8007922:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007926:	f7f8 fcb1 	bl	800028c <__adddf3>
 800792a:	4602      	mov	r2, r0
 800792c:	460b      	mov	r3, r1
 800792e:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007932:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007936:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800793a:	f7f8 fe5d 	bl	80005f8 <__aeabi_dmul>
 800793e:	4602      	mov	r2, r0
 8007940:	460b      	mov	r3, r1
 8007942:	4614      	mov	r4, r2
 8007944:	461d      	mov	r5, r3
 8007946:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800794a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800794e:	f7f8 fe53 	bl	80005f8 <__aeabi_dmul>
 8007952:	4602      	mov	r2, r0
 8007954:	460b      	mov	r3, r1
 8007956:	4620      	mov	r0, r4
 8007958:	4629      	mov	r1, r5
 800795a:	f7f8 fc97 	bl	800028c <__adddf3>
 800795e:	4602      	mov	r2, r0
 8007960:	460b      	mov	r3, r1
 8007962:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007966:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800796a:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 800796e:	f7f8 fc8d 	bl	800028c <__adddf3>
 8007972:	4602      	mov	r2, r0
 8007974:	460b      	mov	r3, r1
 8007976:	f04f 0000 	mov.w	r0, #0
 800797a:	496d      	ldr	r1, [pc, #436]	@ (8007b30 <leg_pos+0x350>)
 800797c:	f7f8 ff66 	bl	800084c <__aeabi_ddiv>
 8007980:	4602      	mov	r2, r0
 8007982:	460b      	mov	r3, r1
 8007984:	4614      	mov	r4, r2
 8007986:	461d      	mov	r5, r3
 8007988:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800798c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8007990:	f7f8 fc7a 	bl	8000288 <__aeabi_dsub>
 8007994:	4602      	mov	r2, r0
 8007996:	460b      	mov	r3, r1
 8007998:	4690      	mov	r8, r2
 800799a:	4699      	mov	r9, r3
 800799c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80079a0:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80079a4:	f7f8 fe28 	bl	80005f8 <__aeabi_dmul>
 80079a8:	4602      	mov	r2, r0
 80079aa:	460b      	mov	r3, r1
 80079ac:	4692      	mov	sl, r2
 80079ae:	469b      	mov	fp, r3
 80079b0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80079b4:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 80079b8:	f7f8 fe1e 	bl	80005f8 <__aeabi_dmul>
 80079bc:	4602      	mov	r2, r0
 80079be:	460b      	mov	r3, r1
 80079c0:	4650      	mov	r0, sl
 80079c2:	4659      	mov	r1, fp
 80079c4:	f7f8 fc62 	bl	800028c <__adddf3>
 80079c8:	4602      	mov	r2, r0
 80079ca:	460b      	mov	r3, r1
 80079cc:	4692      	mov	sl, r2
 80079ce:	469b      	mov	fp, r3
 80079d0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80079d4:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 80079d8:	f7f8 fe0e 	bl	80005f8 <__aeabi_dmul>
 80079dc:	4602      	mov	r2, r0
 80079de:	460b      	mov	r3, r1
 80079e0:	4650      	mov	r0, sl
 80079e2:	4659      	mov	r1, fp
 80079e4:	f7f8 fc50 	bl	8000288 <__aeabi_dsub>
 80079e8:	4602      	mov	r2, r0
 80079ea:	460b      	mov	r3, r1
 80079ec:	ec43 2b17 	vmov	d7, r2, r3
 80079f0:	eeb0 0a47 	vmov.f32	s0, s14
 80079f4:	eef0 0a67 	vmov.f32	s1, s15
 80079f8:	f017 fe68 	bl	801f6cc <sqrt>
 80079fc:	ec53 2b10 	vmov	r2, r3, d0
 8007a00:	4640      	mov	r0, r8
 8007a02:	4649      	mov	r1, r9
 8007a04:	f7f8 fc42 	bl	800028c <__adddf3>
 8007a08:	4602      	mov	r2, r0
 8007a0a:	460b      	mov	r3, r1
 8007a0c:	4620      	mov	r0, r4
 8007a0e:	4629      	mov	r1, r5
 8007a10:	f7f8 fdf2 	bl	80005f8 <__aeabi_dmul>
 8007a14:	4602      	mov	r2, r0
 8007a16:	460b      	mov	r3, r1
 8007a18:	ec43 2b17 	vmov	d7, r2, r3
 8007a1c:	eeb0 0a47 	vmov.f32	s0, s14
 8007a20:	eef0 0a67 	vmov.f32	s1, s15
 8007a24:	f017 fe80 	bl	801f728 <atan>
 8007a28:	ec51 0b10 	vmov	r0, r1, d0
 8007a2c:	4602      	mov	r2, r0
 8007a2e:	460b      	mov	r3, r1
 8007a30:	f7f8 fc2c 	bl	800028c <__adddf3>
 8007a34:	4602      	mov	r2, r0
 8007a36:	460b      	mov	r3, r1
 8007a38:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007a3c:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 8007a40:	f018 f866 	bl	801fb10 <sin>
 8007a44:	ec51 0b10 	vmov	r0, r1, d0
 8007a48:	a335      	add	r3, pc, #212	@ (adr r3, 8007b20 <leg_pos+0x340>)
 8007a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a4e:	f7f8 fdd3 	bl	80005f8 <__aeabi_dmul>
 8007a52:	4602      	mov	r2, r0
 8007a54:	460b      	mov	r3, r1
 8007a56:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8007a5a:	f7f8 fc17 	bl	800028c <__adddf3>
 8007a5e:	4602      	mov	r2, r0
 8007a60:	460b      	mov	r3, r1
 8007a62:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007a66:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 8007a6a:	f017 fff5 	bl	801fa58 <cos>
 8007a6e:	ec51 0b10 	vmov	r0, r1, d0
 8007a72:	a32b      	add	r3, pc, #172	@ (adr r3, 8007b20 <leg_pos+0x340>)
 8007a74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a78:	f7f8 fdbe 	bl	80005f8 <__aeabi_dmul>
 8007a7c:	4602      	mov	r2, r0
 8007a7e:	460b      	mov	r3, r1
 8007a80:	4610      	mov	r0, r2
 8007a82:	4619      	mov	r1, r3
 8007a84:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8007a88:	f7f8 fc00 	bl	800028c <__adddf3>
 8007a8c:	4602      	mov	r2, r0
 8007a8e:	460b      	mov	r3, r1
 8007a90:	4610      	mov	r0, r2
 8007a92:	4619      	mov	r1, r3
 8007a94:	a324      	add	r3, pc, #144	@ (adr r3, 8007b28 <leg_pos+0x348>)
 8007a96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a9a:	f7f8 fbf5 	bl	8000288 <__aeabi_dsub>
 8007a9e:	4602      	mov	r2, r0
 8007aa0:	460b      	mov	r3, r1
 8007aa2:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007aa6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007aaa:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007aae:	f7f8 fda3 	bl	80005f8 <__aeabi_dmul>
 8007ab2:	4602      	mov	r2, r0
 8007ab4:	460b      	mov	r3, r1
 8007ab6:	4614      	mov	r4, r2
 8007ab8:	461d      	mov	r5, r3
 8007aba:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007abe:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8007ac2:	f7f8 fd99 	bl	80005f8 <__aeabi_dmul>
 8007ac6:	4602      	mov	r2, r0
 8007ac8:	460b      	mov	r3, r1
 8007aca:	4620      	mov	r0, r4
 8007acc:	4629      	mov	r1, r5
 8007ace:	f7f8 fbdd 	bl	800028c <__adddf3>
 8007ad2:	4602      	mov	r2, r0
 8007ad4:	460b      	mov	r3, r1
 8007ad6:	ec43 2b17 	vmov	d7, r2, r3
 8007ada:	eeb0 0a47 	vmov.f32	s0, s14
 8007ade:	eef0 0a67 	vmov.f32	s1, s15
 8007ae2:	f017 fdf3 	bl	801f6cc <sqrt>
 8007ae6:	eeb0 7a40 	vmov.f32	s14, s0
 8007aea:	eef0 7a60 	vmov.f32	s15, s1
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	ed83 7b00 	vstr	d7, [r3]
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	f103 0408 	add.w	r4, r3, #8
 8007afa:	ed97 1b14 	vldr	d1, [r7, #80]	@ 0x50
 8007afe:	ed97 0b12 	vldr	d0, [r7, #72]	@ 0x48
 8007b02:	f7ff fdb9 	bl	8007678 <rt_atan2d_snf>
 8007b06:	eeb0 7a40 	vmov.f32	s14, s0
 8007b0a:	eef0 7a60 	vmov.f32	s15, s1
 8007b0e:	ed84 7b00 	vstr	d7, [r4]
 8007b12:	bf00      	nop
 8007b14:	3768      	adds	r7, #104	@ 0x68
 8007b16:	46bd      	mov	sp, r7
 8007b18:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007b1c:	f3af 8000 	nop.w
 8007b20:	33333333 	.word	0x33333333
 8007b24:	3fc33333 	.word	0x3fc33333
 8007b28:	5532617c 	.word	0x5532617c
 8007b2c:	3fa92a30 	.word	0x3fa92a30
 8007b30:	3ff00000 	.word	0x3ff00000
 8007b34:	47ae147b 	.word	0x47ae147b
 8007b38:	3fb47ae1 	.word	0x3fb47ae1
 8007b3c:	bc6a7efa 	.word	0xbc6a7efa
 8007b40:	3f989374 	.word	0x3f989374
 8007b44:	5532617c 	.word	0x5532617c
 8007b48:	3fb92a30 	.word	0x3fb92a30
 8007b4c:	663c74fb 	.word	0x663c74fb
 8007b50:	3f9e32a0 	.word	0x3f9e32a0
 8007b54:	00000000 	.word	0x00000000

08007b58 <leg_conv>:
 8007b58:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007b5c:	b0ba      	sub	sp, #232	@ 0xe8
 8007b5e:	af00      	add	r7, sp, #0
 8007b60:	ed87 0b08 	vstr	d0, [r7, #32]
 8007b64:	ed87 1b06 	vstr	d1, [r7, #24]
 8007b68:	ed87 2b04 	vstr	d2, [r7, #16]
 8007b6c:	ed87 3b02 	vstr	d3, [r7, #8]
 8007b70:	6078      	str	r0, [r7, #4]
 8007b72:	ed97 0b04 	vldr	d0, [r7, #16]
 8007b76:	f017 ff6f 	bl	801fa58 <cos>
 8007b7a:	ed87 0b38 	vstr	d0, [r7, #224]	@ 0xe0
 8007b7e:	ed97 0b02 	vldr	d0, [r7, #8]
 8007b82:	f017 ff69 	bl	801fa58 <cos>
 8007b86:	ed87 0b36 	vstr	d0, [r7, #216]	@ 0xd8
 8007b8a:	ed97 0b04 	vldr	d0, [r7, #16]
 8007b8e:	f017 ffbf 	bl	801fb10 <sin>
 8007b92:	ed87 0b34 	vstr	d0, [r7, #208]	@ 0xd0
 8007b96:	ed97 0b02 	vldr	d0, [r7, #8]
 8007b9a:	f017 ffb9 	bl	801fb10 <sin>
 8007b9e:	ed87 0b32 	vstr	d0, [r7, #200]	@ 0xc8
 8007ba2:	f20f 5350 	addw	r3, pc, #1360	@ 0x550
 8007ba6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007baa:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007bae:	f7f8 fd23 	bl	80005f8 <__aeabi_dmul>
 8007bb2:	4602      	mov	r2, r0
 8007bb4:	460b      	mov	r3, r1
 8007bb6:	e9c7 2330 	strd	r2, r3, [r7, #192]	@ 0xc0
 8007bba:	f20f 5338 	addw	r3, pc, #1336	@ 0x538
 8007bbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bc2:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007bc6:	f7f8 fd17 	bl	80005f8 <__aeabi_dmul>
 8007bca:	4602      	mov	r2, r0
 8007bcc:	460b      	mov	r3, r1
 8007bce:	e9c7 232e 	strd	r2, r3, [r7, #184]	@ 0xb8
 8007bd2:	f20f 5328 	addw	r3, pc, #1320	@ 0x528
 8007bd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bda:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007bde:	f7f8 fd0b 	bl	80005f8 <__aeabi_dmul>
 8007be2:	4602      	mov	r2, r0
 8007be4:	460b      	mov	r3, r1
 8007be6:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 8007bea:	f20f 5310 	addw	r3, pc, #1296	@ 0x510
 8007bee:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bf2:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007bf6:	f7f8 fcff 	bl	80005f8 <__aeabi_dmul>
 8007bfa:	4602      	mov	r2, r0
 8007bfc:	460b      	mov	r3, r1
 8007bfe:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
 8007c02:	f20f 43f8 	addw	r3, pc, #1272	@ 0x4f8
 8007c06:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c0a:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007c0e:	f7f8 fcf3 	bl	80005f8 <__aeabi_dmul>
 8007c12:	4602      	mov	r2, r0
 8007c14:	460b      	mov	r3, r1
 8007c16:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 8007c1a:	f20f 43e0 	addw	r3, pc, #1248	@ 0x4e0
 8007c1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c22:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007c26:	f7f8 fce7 	bl	80005f8 <__aeabi_dmul>
 8007c2a:	4602      	mov	r2, r0
 8007c2c:	460b      	mov	r3, r1
 8007c2e:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
 8007c32:	f20f 43c0 	addw	r3, pc, #1216	@ 0x4c0
 8007c36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c3a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007c3e:	f7f8 fcdb 	bl	80005f8 <__aeabi_dmul>
 8007c42:	4602      	mov	r2, r0
 8007c44:	460b      	mov	r3, r1
 8007c46:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8007c4a:	f7f8 fb1d 	bl	8000288 <__aeabi_dsub>
 8007c4e:	4602      	mov	r2, r0
 8007c50:	460b      	mov	r3, r1
 8007c52:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8007c56:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8007c5a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8007c5e:	f7f8 fb13 	bl	8000288 <__aeabi_dsub>
 8007c62:	4602      	mov	r2, r0
 8007c64:	460b      	mov	r3, r1
 8007c66:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
 8007c6a:	f20f 4388 	addw	r3, pc, #1160	@ 0x488
 8007c6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c72:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007c76:	f7f8 fcbf 	bl	80005f8 <__aeabi_dmul>
 8007c7a:	4602      	mov	r2, r0
 8007c7c:	460b      	mov	r3, r1
 8007c7e:	4610      	mov	r0, r2
 8007c80:	4619      	mov	r1, r3
 8007c82:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8007c86:	f7f8 faff 	bl	8000288 <__aeabi_dsub>
 8007c8a:	4602      	mov	r2, r0
 8007c8c:	460b      	mov	r3, r1
 8007c8e:	4610      	mov	r0, r2
 8007c90:	4619      	mov	r1, r3
 8007c92:	f20f 4370 	addw	r3, pc, #1136	@ 0x470
 8007c96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c9a:	f7f8 faf7 	bl	800028c <__adddf3>
 8007c9e:	4602      	mov	r2, r0
 8007ca0:	460b      	mov	r3, r1
 8007ca2:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8007ca6:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8007caa:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8007cae:	f7f8 faeb 	bl	8000288 <__aeabi_dsub>
 8007cb2:	4602      	mov	r2, r0
 8007cb4:	460b      	mov	r3, r1
 8007cb6:	4610      	mov	r0, r2
 8007cb8:	4619      	mov	r1, r3
 8007cba:	f20f 4350 	addw	r3, pc, #1104	@ 0x450
 8007cbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007cc2:	f7f8 fae3 	bl	800028c <__adddf3>
 8007cc6:	4602      	mov	r2, r0
 8007cc8:	460b      	mov	r3, r1
 8007cca:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
 8007cce:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007cd2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8007cd6:	f7f8 fc8f 	bl	80005f8 <__aeabi_dmul>
 8007cda:	4602      	mov	r2, r0
 8007cdc:	460b      	mov	r3, r1
 8007cde:	4690      	mov	r8, r2
 8007ce0:	4699      	mov	r9, r3
 8007ce2:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007ce6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007cea:	f7f8 fc85 	bl	80005f8 <__aeabi_dmul>
 8007cee:	4602      	mov	r2, r0
 8007cf0:	460b      	mov	r3, r1
 8007cf2:	4640      	mov	r0, r8
 8007cf4:	4649      	mov	r1, r9
 8007cf6:	f7f8 fac9 	bl	800028c <__adddf3>
 8007cfa:	4602      	mov	r2, r0
 8007cfc:	460b      	mov	r3, r1
 8007cfe:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
 8007d02:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007d06:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007d0a:	f7f8 fc75 	bl	80005f8 <__aeabi_dmul>
 8007d0e:	4602      	mov	r2, r0
 8007d10:	460b      	mov	r3, r1
 8007d12:	4610      	mov	r0, r2
 8007d14:	4619      	mov	r1, r3
 8007d16:	a3ff      	add	r3, pc, #1020	@ (adr r3, 8008114 <leg_conv+0x5bc>)
 8007d18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d1c:	f7f8 fc6c 	bl	80005f8 <__aeabi_dmul>
 8007d20:	4602      	mov	r2, r0
 8007d22:	460b      	mov	r3, r1
 8007d24:	4690      	mov	r8, r2
 8007d26:	4699      	mov	r9, r3
 8007d28:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007d2c:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007d30:	f7f8 fc62 	bl	80005f8 <__aeabi_dmul>
 8007d34:	4602      	mov	r2, r0
 8007d36:	460b      	mov	r3, r1
 8007d38:	4610      	mov	r0, r2
 8007d3a:	4619      	mov	r1, r3
 8007d3c:	a3f5      	add	r3, pc, #980	@ (adr r3, 8008114 <leg_conv+0x5bc>)
 8007d3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d42:	f7f8 fc59 	bl	80005f8 <__aeabi_dmul>
 8007d46:	4602      	mov	r2, r0
 8007d48:	460b      	mov	r3, r1
 8007d4a:	4640      	mov	r0, r8
 8007d4c:	4649      	mov	r1, r9
 8007d4e:	f7f8 fa9d 	bl	800028c <__adddf3>
 8007d52:	4602      	mov	r2, r0
 8007d54:	460b      	mov	r3, r1
 8007d56:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 8007d5a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007d5e:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8007d62:	f7f8 fc49 	bl	80005f8 <__aeabi_dmul>
 8007d66:	4602      	mov	r2, r0
 8007d68:	460b      	mov	r3, r1
 8007d6a:	4610      	mov	r0, r2
 8007d6c:	4619      	mov	r1, r3
 8007d6e:	a3e9      	add	r3, pc, #932	@ (adr r3, 8008114 <leg_conv+0x5bc>)
 8007d70:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d74:	f7f8 fc40 	bl	80005f8 <__aeabi_dmul>
 8007d78:	4602      	mov	r2, r0
 8007d7a:	460b      	mov	r3, r1
 8007d7c:	4690      	mov	r8, r2
 8007d7e:	4699      	mov	r9, r3
 8007d80:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007d84:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8007d88:	f7f8 fc36 	bl	80005f8 <__aeabi_dmul>
 8007d8c:	4602      	mov	r2, r0
 8007d8e:	460b      	mov	r3, r1
 8007d90:	4610      	mov	r0, r2
 8007d92:	4619      	mov	r1, r3
 8007d94:	a3df      	add	r3, pc, #892	@ (adr r3, 8008114 <leg_conv+0x5bc>)
 8007d96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d9a:	f7f8 fc2d 	bl	80005f8 <__aeabi_dmul>
 8007d9e:	4602      	mov	r2, r0
 8007da0:	460b      	mov	r3, r1
 8007da2:	4640      	mov	r0, r8
 8007da4:	4649      	mov	r1, r9
 8007da6:	f7f8 fa71 	bl	800028c <__adddf3>
 8007daa:	4602      	mov	r2, r0
 8007dac:	460b      	mov	r3, r1
 8007dae:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 8007db2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8007db6:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8007dba:	f7f8 fa67 	bl	800028c <__adddf3>
 8007dbe:	4602      	mov	r2, r0
 8007dc0:	460b      	mov	r3, r1
 8007dc2:	f04f 0000 	mov.w	r0, #0
 8007dc6:	49ca      	ldr	r1, [pc, #808]	@ (80080f0 <leg_conv+0x598>)
 8007dc8:	f7f8 fd40 	bl	800084c <__aeabi_ddiv>
 8007dcc:	4602      	mov	r2, r0
 8007dce:	460b      	mov	r3, r1
 8007dd0:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8007dd4:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8007dd8:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007ddc:	f7f8 fc0c 	bl	80005f8 <__aeabi_dmul>
 8007de0:	4602      	mov	r2, r0
 8007de2:	460b      	mov	r3, r1
 8007de4:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 8007de8:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8007dec:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8007df0:	f7f8 fc02 	bl	80005f8 <__aeabi_dmul>
 8007df4:	4602      	mov	r2, r0
 8007df6:	460b      	mov	r3, r1
 8007df8:	4690      	mov	r8, r2
 8007dfa:	4699      	mov	r9, r3
 8007dfc:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8007e00:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8007e04:	f7f8 fbf8 	bl	80005f8 <__aeabi_dmul>
 8007e08:	4602      	mov	r2, r0
 8007e0a:	460b      	mov	r3, r1
 8007e0c:	4640      	mov	r0, r8
 8007e0e:	4649      	mov	r1, r9
 8007e10:	f7f8 fa3c 	bl	800028c <__adddf3>
 8007e14:	4602      	mov	r2, r0
 8007e16:	460b      	mov	r3, r1
 8007e18:	4690      	mov	r8, r2
 8007e1a:	4699      	mov	r9, r3
 8007e1c:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8007e20:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8007e24:	f7f8 fbe8 	bl	80005f8 <__aeabi_dmul>
 8007e28:	4602      	mov	r2, r0
 8007e2a:	460b      	mov	r3, r1
 8007e2c:	4640      	mov	r0, r8
 8007e2e:	4649      	mov	r1, r9
 8007e30:	f7f8 fa2a 	bl	8000288 <__aeabi_dsub>
 8007e34:	4602      	mov	r2, r0
 8007e36:	460b      	mov	r3, r1
 8007e38:	ec43 2b17 	vmov	d7, r2, r3
 8007e3c:	eeb0 0a47 	vmov.f32	s0, s14
 8007e40:	eef0 0a67 	vmov.f32	s1, s15
 8007e44:	f017 fc42 	bl	801f6cc <sqrt>
 8007e48:	ed87 0b24 	vstr	d0, [r7, #144]	@ 0x90
 8007e4c:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8007e50:	f04f 0000 	mov.w	r0, #0
 8007e54:	49a6      	ldr	r1, [pc, #664]	@ (80080f0 <leg_conv+0x598>)
 8007e56:	f7f8 fcf9 	bl	800084c <__aeabi_ddiv>
 8007e5a:	4602      	mov	r2, r0
 8007e5c:	460b      	mov	r3, r1
 8007e5e:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8007e62:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8007e66:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8007e6a:	f7f8 fa0d 	bl	8000288 <__aeabi_dsub>
 8007e6e:	4602      	mov	r2, r0
 8007e70:	460b      	mov	r3, r1
 8007e72:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8007e76:	f7f8 fa09 	bl	800028c <__adddf3>
 8007e7a:	4602      	mov	r2, r0
 8007e7c:	460b      	mov	r3, r1
 8007e7e:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8007e82:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007e86:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8007e8a:	f7f8 fbb5 	bl	80005f8 <__aeabi_dmul>
 8007e8e:	4602      	mov	r2, r0
 8007e90:	460b      	mov	r3, r1
 8007e92:	ec43 2b17 	vmov	d7, r2, r3
 8007e96:	eeb0 0a47 	vmov.f32	s0, s14
 8007e9a:	eef0 0a67 	vmov.f32	s1, s15
 8007e9e:	f017 fc43 	bl	801f728 <atan>
 8007ea2:	ec51 0b10 	vmov	r0, r1, d0
 8007ea6:	4602      	mov	r2, r0
 8007ea8:	460b      	mov	r3, r1
 8007eaa:	f7f8 f9ef 	bl	800028c <__adddf3>
 8007eae:	4602      	mov	r2, r0
 8007eb0:	460b      	mov	r3, r1
 8007eb2:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8007eb6:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 8007eba:	f017 fdcd 	bl	801fa58 <cos>
 8007ebe:	ed87 0b0e 	vstr	d0, [r7, #56]	@ 0x38
 8007ec2:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 8007ec6:	f017 fe23 	bl	801fb10 <sin>
 8007eca:	ed87 0b0c 	vstr	d0, [r7, #48]	@ 0x30
 8007ece:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007ed2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8007ed6:	f7f8 fb8f 	bl	80005f8 <__aeabi_dmul>
 8007eda:	4602      	mov	r2, r0
 8007edc:	460b      	mov	r3, r1
 8007ede:	4610      	mov	r0, r2
 8007ee0:	4619      	mov	r1, r3
 8007ee2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007ee6:	f7f8 fb87 	bl	80005f8 <__aeabi_dmul>
 8007eea:	4602      	mov	r2, r0
 8007eec:	460b      	mov	r3, r1
 8007eee:	4610      	mov	r0, r2
 8007ef0:	4619      	mov	r1, r3
 8007ef2:	f04f 0200 	mov.w	r2, #0
 8007ef6:	4b7e      	ldr	r3, [pc, #504]	@ (80080f0 <leg_conv+0x598>)
 8007ef8:	f7f8 f9c8 	bl	800028c <__adddf3>
 8007efc:	4602      	mov	r2, r0
 8007efe:	460b      	mov	r3, r1
 8007f00:	f04f 0000 	mov.w	r0, #0
 8007f04:	497a      	ldr	r1, [pc, #488]	@ (80080f0 <leg_conv+0x598>)
 8007f06:	f7f8 fca1 	bl	800084c <__aeabi_ddiv>
 8007f0a:	4602      	mov	r2, r0
 8007f0c:	460b      	mov	r3, r1
 8007f0e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8007f12:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8007f16:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8007f1a:	f7f8 f9b7 	bl	800028c <__adddf3>
 8007f1e:	4602      	mov	r2, r0
 8007f20:	460b      	mov	r3, r1
 8007f22:	4610      	mov	r0, r2
 8007f24:	4619      	mov	r1, r3
 8007f26:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8007f2a:	f7f8 fb65 	bl	80005f8 <__aeabi_dmul>
 8007f2e:	4602      	mov	r2, r0
 8007f30:	460b      	mov	r3, r1
 8007f32:	4610      	mov	r0, r2
 8007f34:	4619      	mov	r1, r3
 8007f36:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8007f3a:	f7f8 fb5d 	bl	80005f8 <__aeabi_dmul>
 8007f3e:	4602      	mov	r2, r0
 8007f40:	460b      	mov	r3, r1
 8007f42:	4690      	mov	r8, r2
 8007f44:	4699      	mov	r9, r3
 8007f46:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8007f4a:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8007f4e:	f7f8 fb53 	bl	80005f8 <__aeabi_dmul>
 8007f52:	4602      	mov	r2, r0
 8007f54:	460b      	mov	r3, r1
 8007f56:	4610      	mov	r0, r2
 8007f58:	4619      	mov	r1, r3
 8007f5a:	a363      	add	r3, pc, #396	@ (adr r3, 80080e8 <leg_conv+0x590>)
 8007f5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f60:	f7f8 fb4a 	bl	80005f8 <__aeabi_dmul>
 8007f64:	4602      	mov	r2, r0
 8007f66:	460b      	mov	r3, r1
 8007f68:	4692      	mov	sl, r2
 8007f6a:	469b      	mov	fp, r3
 8007f6c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8007f70:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8007f74:	f7f8 fb40 	bl	80005f8 <__aeabi_dmul>
 8007f78:	4602      	mov	r2, r0
 8007f7a:	460b      	mov	r3, r1
 8007f7c:	4610      	mov	r0, r2
 8007f7e:	4619      	mov	r1, r3
 8007f80:	a359      	add	r3, pc, #356	@ (adr r3, 80080e8 <leg_conv+0x590>)
 8007f82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f86:	f7f8 fb37 	bl	80005f8 <__aeabi_dmul>
 8007f8a:	4602      	mov	r2, r0
 8007f8c:	460b      	mov	r3, r1
 8007f8e:	4650      	mov	r0, sl
 8007f90:	4659      	mov	r1, fp
 8007f92:	f7f8 f97b 	bl	800028c <__adddf3>
 8007f96:	4602      	mov	r2, r0
 8007f98:	460b      	mov	r3, r1
 8007f9a:	4692      	mov	sl, r2
 8007f9c:	469b      	mov	fp, r3
 8007f9e:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8007fa2:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8007fa6:	f7f8 fb27 	bl	80005f8 <__aeabi_dmul>
 8007faa:	4602      	mov	r2, r0
 8007fac:	460b      	mov	r3, r1
 8007fae:	4610      	mov	r0, r2
 8007fb0:	4619      	mov	r1, r3
 8007fb2:	4602      	mov	r2, r0
 8007fb4:	460b      	mov	r3, r1
 8007fb6:	f7f8 f969 	bl	800028c <__adddf3>
 8007fba:	4602      	mov	r2, r0
 8007fbc:	460b      	mov	r3, r1
 8007fbe:	4650      	mov	r0, sl
 8007fc0:	4659      	mov	r1, fp
 8007fc2:	f7f8 f961 	bl	8000288 <__aeabi_dsub>
 8007fc6:	4602      	mov	r2, r0
 8007fc8:	460b      	mov	r3, r1
 8007fca:	4610      	mov	r0, r2
 8007fcc:	4619      	mov	r1, r3
 8007fce:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8007fd2:	f7f8 fb11 	bl	80005f8 <__aeabi_dmul>
 8007fd6:	4602      	mov	r2, r0
 8007fd8:	460b      	mov	r3, r1
 8007fda:	4610      	mov	r0, r2
 8007fdc:	4619      	mov	r1, r3
 8007fde:	f04f 0200 	mov.w	r2, #0
 8007fe2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8007fe6:	f7f8 fc31 	bl	800084c <__aeabi_ddiv>
 8007fea:	4602      	mov	r2, r0
 8007fec:	460b      	mov	r3, r1
 8007fee:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8007ff2:	f7f8 f949 	bl	8000288 <__aeabi_dsub>
 8007ff6:	4602      	mov	r2, r0
 8007ff8:	460b      	mov	r3, r1
 8007ffa:	4610      	mov	r0, r2
 8007ffc:	4619      	mov	r1, r3
 8007ffe:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008002:	f7f8 faf9 	bl	80005f8 <__aeabi_dmul>
 8008006:	4602      	mov	r2, r0
 8008008:	460b      	mov	r3, r1
 800800a:	4640      	mov	r0, r8
 800800c:	4649      	mov	r1, r9
 800800e:	f7f8 f93d 	bl	800028c <__adddf3>
 8008012:	4602      	mov	r2, r0
 8008014:	460b      	mov	r3, r1
 8008016:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 800801a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800801e:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8008022:	f7f8 f933 	bl	800028c <__adddf3>
 8008026:	4602      	mov	r2, r0
 8008028:	460b      	mov	r3, r1
 800802a:	4610      	mov	r0, r2
 800802c:	4619      	mov	r1, r3
 800802e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8008032:	f7f8 fae1 	bl	80005f8 <__aeabi_dmul>
 8008036:	4602      	mov	r2, r0
 8008038:	460b      	mov	r3, r1
 800803a:	4610      	mov	r0, r2
 800803c:	4619      	mov	r1, r3
 800803e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8008042:	f7f8 fad9 	bl	80005f8 <__aeabi_dmul>
 8008046:	4602      	mov	r2, r0
 8008048:	460b      	mov	r3, r1
 800804a:	4690      	mov	r8, r2
 800804c:	4699      	mov	r9, r3
 800804e:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8008052:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8008056:	f7f8 facf 	bl	80005f8 <__aeabi_dmul>
 800805a:	4602      	mov	r2, r0
 800805c:	460b      	mov	r3, r1
 800805e:	4610      	mov	r0, r2
 8008060:	4619      	mov	r1, r3
 8008062:	a321      	add	r3, pc, #132	@ (adr r3, 80080e8 <leg_conv+0x590>)
 8008064:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008068:	f7f8 fac6 	bl	80005f8 <__aeabi_dmul>
 800806c:	4602      	mov	r2, r0
 800806e:	460b      	mov	r3, r1
 8008070:	4692      	mov	sl, r2
 8008072:	469b      	mov	fp, r3
 8008074:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8008078:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800807c:	f7f8 fabc 	bl	80005f8 <__aeabi_dmul>
 8008080:	4602      	mov	r2, r0
 8008082:	460b      	mov	r3, r1
 8008084:	4610      	mov	r0, r2
 8008086:	4619      	mov	r1, r3
 8008088:	a317      	add	r3, pc, #92	@ (adr r3, 80080e8 <leg_conv+0x590>)
 800808a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800808e:	f7f8 fab3 	bl	80005f8 <__aeabi_dmul>
 8008092:	4602      	mov	r2, r0
 8008094:	460b      	mov	r3, r1
 8008096:	4650      	mov	r0, sl
 8008098:	4659      	mov	r1, fp
 800809a:	f7f8 f8f7 	bl	800028c <__adddf3>
 800809e:	4602      	mov	r2, r0
 80080a0:	460b      	mov	r3, r1
 80080a2:	4692      	mov	sl, r2
 80080a4:	469b      	mov	fp, r3
 80080a6:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 80080aa:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80080ae:	f7f8 faa3 	bl	80005f8 <__aeabi_dmul>
 80080b2:	4602      	mov	r2, r0
 80080b4:	460b      	mov	r3, r1
 80080b6:	4610      	mov	r0, r2
 80080b8:	4619      	mov	r1, r3
 80080ba:	4602      	mov	r2, r0
 80080bc:	460b      	mov	r3, r1
 80080be:	f7f8 f8e5 	bl	800028c <__adddf3>
 80080c2:	4602      	mov	r2, r0
 80080c4:	460b      	mov	r3, r1
 80080c6:	4650      	mov	r0, sl
 80080c8:	4659      	mov	r1, fp
 80080ca:	f7f8 f8dd 	bl	8000288 <__aeabi_dsub>
 80080ce:	4602      	mov	r2, r0
 80080d0:	460b      	mov	r3, r1
 80080d2:	4610      	mov	r0, r2
 80080d4:	4619      	mov	r1, r3
 80080d6:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80080da:	f7f8 fa8d 	bl	80005f8 <__aeabi_dmul>
 80080de:	4602      	mov	r2, r0
 80080e0:	460b      	mov	r3, r1
 80080e2:	e01b      	b.n	800811c <leg_conv+0x5c4>
 80080e4:	f3af 8000 	nop.w
 80080e8:	bc6a7efa 	.word	0xbc6a7efa
 80080ec:	3fa89374 	.word	0x3fa89374
 80080f0:	3ff00000 	.word	0x3ff00000
 80080f4:	47ae147b 	.word	0x47ae147b
 80080f8:	3fb47ae1 	.word	0x3fb47ae1
 80080fc:	bc6a7efa 	.word	0xbc6a7efa
 8008100:	3f989374 	.word	0x3f989374
 8008104:	5532617c 	.word	0x5532617c
 8008108:	3fb92a30 	.word	0x3fb92a30
 800810c:	663c74fb 	.word	0x663c74fb
 8008110:	3f9e32a0 	.word	0x3f9e32a0
 8008114:	47ae147b 	.word	0x47ae147b
 8008118:	3fc47ae1 	.word	0x3fc47ae1
 800811c:	4610      	mov	r0, r2
 800811e:	4619      	mov	r1, r3
 8008120:	f04f 0200 	mov.w	r2, #0
 8008124:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8008128:	f7f8 fb90 	bl	800084c <__aeabi_ddiv>
 800812c:	4602      	mov	r2, r0
 800812e:	460b      	mov	r3, r1
 8008130:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8008134:	f7f8 f8a8 	bl	8000288 <__aeabi_dsub>
 8008138:	4602      	mov	r2, r0
 800813a:	460b      	mov	r3, r1
 800813c:	4610      	mov	r0, r2
 800813e:	4619      	mov	r1, r3
 8008140:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008144:	f7f8 fa58 	bl	80005f8 <__aeabi_dmul>
 8008148:	4602      	mov	r2, r0
 800814a:	460b      	mov	r3, r1
 800814c:	4640      	mov	r0, r8
 800814e:	4649      	mov	r1, r9
 8008150:	f7f8 f89c 	bl	800028c <__adddf3>
 8008154:	4602      	mov	r2, r0
 8008156:	460b      	mov	r3, r1
 8008158:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 800815c:	a3f3      	add	r3, pc, #972	@ (adr r3, 800852c <leg_conv+0x9d4>)
 800815e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008162:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8008166:	f7f8 fa47 	bl	80005f8 <__aeabi_dmul>
 800816a:	4602      	mov	r2, r0
 800816c:	460b      	mov	r3, r1
 800816e:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8008172:	f7f8 f88b 	bl	800028c <__adddf3>
 8008176:	4602      	mov	r2, r0
 8008178:	460b      	mov	r3, r1
 800817a:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800817e:	a3eb      	add	r3, pc, #940	@ (adr r3, 800852c <leg_conv+0x9d4>)
 8008180:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008184:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8008188:	f7f8 fa36 	bl	80005f8 <__aeabi_dmul>
 800818c:	4602      	mov	r2, r0
 800818e:	460b      	mov	r3, r1
 8008190:	4610      	mov	r0, r2
 8008192:	4619      	mov	r1, r3
 8008194:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8008198:	f7f8 f878 	bl	800028c <__adddf3>
 800819c:	4602      	mov	r2, r0
 800819e:	460b      	mov	r3, r1
 80081a0:	4610      	mov	r0, r2
 80081a2:	4619      	mov	r1, r3
 80081a4:	a3e3      	add	r3, pc, #908	@ (adr r3, 8008534 <leg_conv+0x9dc>)
 80081a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081aa:	f7f8 f86d 	bl	8000288 <__aeabi_dsub>
 80081ae:	4602      	mov	r2, r0
 80081b0:	460b      	mov	r3, r1
 80081b2:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 80081b6:	f8d7 40c0 	ldr.w	r4, [r7, #192]	@ 0xc0
 80081ba:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80081be:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 80081c2:	a3da      	add	r3, pc, #872	@ (adr r3, 800852c <leg_conv+0x9d4>)
 80081c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081c8:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 80081cc:	f7f8 fa14 	bl	80005f8 <__aeabi_dmul>
 80081d0:	4602      	mov	r2, r0
 80081d2:	460b      	mov	r3, r1
 80081d4:	4620      	mov	r0, r4
 80081d6:	4629      	mov	r1, r5
 80081d8:	f7f8 f856 	bl	8000288 <__aeabi_dsub>
 80081dc:	4602      	mov	r2, r0
 80081de:	460b      	mov	r3, r1
 80081e0:	4610      	mov	r0, r2
 80081e2:	4619      	mov	r1, r3
 80081e4:	a3d3      	add	r3, pc, #844	@ (adr r3, 8008534 <leg_conv+0x9dc>)
 80081e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80081ea:	f7f8 f84f 	bl	800028c <__adddf3>
 80081ee:	4602      	mov	r2, r0
 80081f0:	460b      	mov	r3, r1
 80081f2:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 80081f6:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80081fa:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80081fe:	f7f8 f9fb 	bl	80005f8 <__aeabi_dmul>
 8008202:	4602      	mov	r2, r0
 8008204:	460b      	mov	r3, r1
 8008206:	e9c7 2338 	strd	r2, r3, [r7, #224]	@ 0xe0
 800820a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800820e:	f04f 0000 	mov.w	r0, #0
 8008212:	49c5      	ldr	r1, [pc, #788]	@ (8008528 <leg_conv+0x9d0>)
 8008214:	f7f8 fb1a 	bl	800084c <__aeabi_ddiv>
 8008218:	4602      	mov	r2, r0
 800821a:	460b      	mov	r3, r1
 800821c:	e9c7 2334 	strd	r2, r3, [r7, #208]	@ 0xd0
 8008220:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8008224:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8008228:	f7f8 f9e6 	bl	80005f8 <__aeabi_dmul>
 800822c:	4602      	mov	r2, r0
 800822e:	460b      	mov	r3, r1
 8008230:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8008234:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008238:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 800823c:	f7f8 f9dc 	bl	80005f8 <__aeabi_dmul>
 8008240:	4602      	mov	r2, r0
 8008242:	460b      	mov	r3, r1
 8008244:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8008248:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800824c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008250:	f7f8 f9d2 	bl	80005f8 <__aeabi_dmul>
 8008254:	4602      	mov	r2, r0
 8008256:	460b      	mov	r3, r1
 8008258:	4610      	mov	r0, r2
 800825a:	4619      	mov	r1, r3
 800825c:	a3ae      	add	r3, pc, #696	@ (adr r3, 8008518 <leg_conv+0x9c0>)
 800825e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008262:	f7f8 f9c9 	bl	80005f8 <__aeabi_dmul>
 8008266:	4602      	mov	r2, r0
 8008268:	460b      	mov	r3, r1
 800826a:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800826e:	f7f8 f80b 	bl	8000288 <__aeabi_dsub>
 8008272:	4602      	mov	r2, r0
 8008274:	460b      	mov	r3, r1
 8008276:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 800827a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800827e:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8008282:	f7f8 f9b9 	bl	80005f8 <__aeabi_dmul>
 8008286:	4602      	mov	r2, r0
 8008288:	460b      	mov	r3, r1
 800828a:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 800828e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008292:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8008296:	f7f8 f9af 	bl	80005f8 <__aeabi_dmul>
 800829a:	4602      	mov	r2, r0
 800829c:	460b      	mov	r3, r1
 800829e:	4610      	mov	r0, r2
 80082a0:	4619      	mov	r1, r3
 80082a2:	a39d      	add	r3, pc, #628	@ (adr r3, 8008518 <leg_conv+0x9c0>)
 80082a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80082a8:	f7f8 f9a6 	bl	80005f8 <__aeabi_dmul>
 80082ac:	4602      	mov	r2, r0
 80082ae:	460b      	mov	r3, r1
 80082b0:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 80082b4:	f7f7 ffe8 	bl	8000288 <__aeabi_dsub>
 80082b8:	4602      	mov	r2, r0
 80082ba:	460b      	mov	r3, r1
 80082bc:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 80082c0:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 80082c4:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80082c8:	f7f8 f996 	bl	80005f8 <__aeabi_dmul>
 80082cc:	4602      	mov	r2, r0
 80082ce:	460b      	mov	r3, r1
 80082d0:	4610      	mov	r0, r2
 80082d2:	4619      	mov	r1, r3
 80082d4:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80082d8:	f7f7 ffd8 	bl	800028c <__adddf3>
 80082dc:	4602      	mov	r2, r0
 80082de:	460b      	mov	r3, r1
 80082e0:	ec43 2b17 	vmov	d7, r2, r3
 80082e4:	eeb0 0a47 	vmov.f32	s0, s14
 80082e8:	eef0 0a67 	vmov.f32	s1, s15
 80082ec:	f017 f9ee 	bl	801f6cc <sqrt>
 80082f0:	ec53 2b10 	vmov	r2, r3, d0
 80082f4:	f04f 0000 	mov.w	r0, #0
 80082f8:	498b      	ldr	r1, [pc, #556]	@ (8008528 <leg_conv+0x9d0>)
 80082fa:	f7f8 faa7 	bl	800084c <__aeabi_ddiv>
 80082fe:	4602      	mov	r2, r0
 8008300:	460b      	mov	r3, r1
 8008302:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8008306:	f7f8 f977 	bl	80005f8 <__aeabi_dmul>
 800830a:	4602      	mov	r2, r0
 800830c:	460b      	mov	r3, r1
 800830e:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8008312:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8008316:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800831a:	f7f8 f96d 	bl	80005f8 <__aeabi_dmul>
 800831e:	4602      	mov	r2, r0
 8008320:	460b      	mov	r3, r1
 8008322:	4614      	mov	r4, r2
 8008324:	461d      	mov	r5, r3
 8008326:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 800832a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 800832e:	f7f7 ffad 	bl	800028c <__adddf3>
 8008332:	4602      	mov	r2, r0
 8008334:	460b      	mov	r3, r1
 8008336:	f04f 0000 	mov.w	r0, #0
 800833a:	497b      	ldr	r1, [pc, #492]	@ (8008528 <leg_conv+0x9d0>)
 800833c:	f7f8 fa86 	bl	800084c <__aeabi_ddiv>
 8008340:	4602      	mov	r2, r0
 8008342:	460b      	mov	r3, r1
 8008344:	4620      	mov	r0, r4
 8008346:	4629      	mov	r1, r5
 8008348:	f7f8 f956 	bl	80005f8 <__aeabi_dmul>
 800834c:	4602      	mov	r2, r0
 800834e:	460b      	mov	r3, r1
 8008350:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8008354:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8008358:	f04f 0000 	mov.w	r0, #0
 800835c:	4972      	ldr	r1, [pc, #456]	@ (8008528 <leg_conv+0x9d0>)
 800835e:	f7f8 fa75 	bl	800084c <__aeabi_ddiv>
 8008362:	4602      	mov	r2, r0
 8008364:	460b      	mov	r3, r1
 8008366:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800836a:	f7f8 f945 	bl	80005f8 <__aeabi_dmul>
 800836e:	4602      	mov	r2, r0
 8008370:	460b      	mov	r3, r1
 8008372:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8008376:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800837a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800837e:	f7f8 f93b 	bl	80005f8 <__aeabi_dmul>
 8008382:	4602      	mov	r2, r0
 8008384:	460b      	mov	r3, r1
 8008386:	4610      	mov	r0, r2
 8008388:	4619      	mov	r1, r3
 800838a:	4602      	mov	r2, r0
 800838c:	460b      	mov	r3, r1
 800838e:	f7f7 ff7d 	bl	800028c <__adddf3>
 8008392:	4602      	mov	r2, r0
 8008394:	460b      	mov	r3, r1
 8008396:	4614      	mov	r4, r2
 8008398:	461d      	mov	r5, r3
 800839a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800839e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80083a2:	f7f8 f929 	bl	80005f8 <__aeabi_dmul>
 80083a6:	4602      	mov	r2, r0
 80083a8:	460b      	mov	r3, r1
 80083aa:	4610      	mov	r0, r2
 80083ac:	4619      	mov	r1, r3
 80083ae:	4602      	mov	r2, r0
 80083b0:	460b      	mov	r3, r1
 80083b2:	f7f7 ff6b 	bl	800028c <__adddf3>
 80083b6:	4602      	mov	r2, r0
 80083b8:	460b      	mov	r3, r1
 80083ba:	4620      	mov	r0, r4
 80083bc:	4629      	mov	r1, r5
 80083be:	f7f7 ff63 	bl	8000288 <__aeabi_dsub>
 80083c2:	4602      	mov	r2, r0
 80083c4:	460b      	mov	r3, r1
 80083c6:	4610      	mov	r0, r2
 80083c8:	4619      	mov	r1, r3
 80083ca:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80083ce:	f7f8 f913 	bl	80005f8 <__aeabi_dmul>
 80083d2:	4602      	mov	r2, r0
 80083d4:	460b      	mov	r3, r1
 80083d6:	4610      	mov	r0, r2
 80083d8:	4619      	mov	r1, r3
 80083da:	f04f 0200 	mov.w	r2, #0
 80083de:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80083e2:	f7f8 fa33 	bl	800084c <__aeabi_ddiv>
 80083e6:	4602      	mov	r2, r0
 80083e8:	460b      	mov	r3, r1
 80083ea:	4614      	mov	r4, r2
 80083ec:	461d      	mov	r5, r3
 80083ee:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80083f2:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 80083f6:	f7f8 f8ff 	bl	80005f8 <__aeabi_dmul>
 80083fa:	4602      	mov	r2, r0
 80083fc:	460b      	mov	r3, r1
 80083fe:	4690      	mov	r8, r2
 8008400:	4699      	mov	r9, r3
 8008402:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008406:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 800840a:	f7f8 f8f5 	bl	80005f8 <__aeabi_dmul>
 800840e:	4602      	mov	r2, r0
 8008410:	460b      	mov	r3, r1
 8008412:	4640      	mov	r0, r8
 8008414:	4649      	mov	r1, r9
 8008416:	f7f7 ff37 	bl	8000288 <__aeabi_dsub>
 800841a:	4602      	mov	r2, r0
 800841c:	460b      	mov	r3, r1
 800841e:	4610      	mov	r0, r2
 8008420:	4619      	mov	r1, r3
 8008422:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008426:	f7f8 f8e7 	bl	80005f8 <__aeabi_dmul>
 800842a:	4602      	mov	r2, r0
 800842c:	460b      	mov	r3, r1
 800842e:	4620      	mov	r0, r4
 8008430:	4629      	mov	r1, r5
 8008432:	f7f7 ff29 	bl	8000288 <__aeabi_dsub>
 8008436:	4602      	mov	r2, r0
 8008438:	460b      	mov	r3, r1
 800843a:	6879      	ldr	r1, [r7, #4]
 800843c:	e9c1 2300 	strd	r2, r3, [r1]
 8008440:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8008444:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008448:	f7f8 f8d6 	bl	80005f8 <__aeabi_dmul>
 800844c:	4602      	mov	r2, r0
 800844e:	460b      	mov	r3, r1
 8008450:	4610      	mov	r0, r2
 8008452:	4619      	mov	r1, r3
 8008454:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008458:	f7f8 f8ce 	bl	80005f8 <__aeabi_dmul>
 800845c:	4602      	mov	r2, r0
 800845e:	460b      	mov	r3, r1
 8008460:	4610      	mov	r0, r2
 8008462:	4619      	mov	r1, r3
 8008464:	a32e      	add	r3, pc, #184	@ (adr r3, 8008520 <leg_conv+0x9c8>)
 8008466:	e9d3 2300 	ldrd	r2, r3, [r3]
 800846a:	f7f8 f8c5 	bl	80005f8 <__aeabi_dmul>
 800846e:	4602      	mov	r2, r0
 8008470:	460b      	mov	r3, r1
 8008472:	4614      	mov	r4, r2
 8008474:	461d      	mov	r5, r3
 8008476:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 800847a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800847e:	f7f8 f8bb 	bl	80005f8 <__aeabi_dmul>
 8008482:	4602      	mov	r2, r0
 8008484:	460b      	mov	r3, r1
 8008486:	4610      	mov	r0, r2
 8008488:	4619      	mov	r1, r3
 800848a:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 800848e:	f7f8 f8b3 	bl	80005f8 <__aeabi_dmul>
 8008492:	4602      	mov	r2, r0
 8008494:	460b      	mov	r3, r1
 8008496:	4610      	mov	r0, r2
 8008498:	4619      	mov	r1, r3
 800849a:	a321      	add	r3, pc, #132	@ (adr r3, 8008520 <leg_conv+0x9c8>)
 800849c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084a0:	f7f8 f8aa 	bl	80005f8 <__aeabi_dmul>
 80084a4:	4602      	mov	r2, r0
 80084a6:	460b      	mov	r3, r1
 80084a8:	4620      	mov	r0, r4
 80084aa:	4629      	mov	r1, r5
 80084ac:	f7f7 feec 	bl	8000288 <__aeabi_dsub>
 80084b0:	4602      	mov	r2, r0
 80084b2:	460b      	mov	r3, r1
 80084b4:	4610      	mov	r0, r2
 80084b6:	4619      	mov	r1, r3
 80084b8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80084bc:	f7f8 f89c 	bl	80005f8 <__aeabi_dmul>
 80084c0:	4602      	mov	r2, r0
 80084c2:	460b      	mov	r3, r1
 80084c4:	4610      	mov	r0, r2
 80084c6:	4619      	mov	r1, r3
 80084c8:	f04f 0200 	mov.w	r2, #0
 80084cc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80084d0:	f7f8 f9bc 	bl	800084c <__aeabi_ddiv>
 80084d4:	4602      	mov	r2, r0
 80084d6:	460b      	mov	r3, r1
 80084d8:	4690      	mov	r8, r2
 80084da:	4699      	mov	r9, r3
 80084dc:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 80084e0:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 80084e4:	f7f8 f888 	bl	80005f8 <__aeabi_dmul>
 80084e8:	4602      	mov	r2, r0
 80084ea:	460b      	mov	r3, r1
 80084ec:	4610      	mov	r0, r2
 80084ee:	4619      	mov	r1, r3
 80084f0:	a309      	add	r3, pc, #36	@ (adr r3, 8008518 <leg_conv+0x9c0>)
 80084f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084f6:	f7f8 f87f 	bl	80005f8 <__aeabi_dmul>
 80084fa:	4602      	mov	r2, r0
 80084fc:	460b      	mov	r3, r1
 80084fe:	f04f 0000 	mov.w	r0, #0
 8008502:	f04f 0100 	mov.w	r1, #0
 8008506:	f7f7 febf 	bl	8000288 <__aeabi_dsub>
 800850a:	4602      	mov	r2, r0
 800850c:	460b      	mov	r3, r1
 800850e:	4610      	mov	r0, r2
 8008510:	4619      	mov	r1, r3
 8008512:	e013      	b.n	800853c <leg_conv+0x9e4>
 8008514:	f3af 8000 	nop.w
 8008518:	33333333 	.word	0x33333333
 800851c:	3fd33333 	.word	0x3fd33333
 8008520:	33333333 	.word	0x33333333
 8008524:	3fe33333 	.word	0x3fe33333
 8008528:	3ff00000 	.word	0x3ff00000
 800852c:	33333333 	.word	0x33333333
 8008530:	3fc33333 	.word	0x3fc33333
 8008534:	5532617c 	.word	0x5532617c
 8008538:	3fa92a30 	.word	0x3fa92a30
 800853c:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 8008540:	f7f8 f85a 	bl	80005f8 <__aeabi_dmul>
 8008544:	4602      	mov	r2, r0
 8008546:	460b      	mov	r3, r1
 8008548:	4614      	mov	r4, r2
 800854a:	461d      	mov	r5, r3
 800854c:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8008550:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8008554:	f7f8 f850 	bl	80005f8 <__aeabi_dmul>
 8008558:	4602      	mov	r2, r0
 800855a:	460b      	mov	r3, r1
 800855c:	4610      	mov	r0, r2
 800855e:	4619      	mov	r1, r3
 8008560:	a319      	add	r3, pc, #100	@ (adr r3, 80085c8 <leg_conv+0xa70>)
 8008562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008566:	f7f8 f847 	bl	80005f8 <__aeabi_dmul>
 800856a:	4602      	mov	r2, r0
 800856c:	460b      	mov	r3, r1
 800856e:	4610      	mov	r0, r2
 8008570:	4619      	mov	r1, r3
 8008572:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8008576:	f7f8 f83f 	bl	80005f8 <__aeabi_dmul>
 800857a:	4602      	mov	r2, r0
 800857c:	460b      	mov	r3, r1
 800857e:	4620      	mov	r0, r4
 8008580:	4629      	mov	r1, r5
 8008582:	f7f7 fe83 	bl	800028c <__adddf3>
 8008586:	4602      	mov	r2, r0
 8008588:	460b      	mov	r3, r1
 800858a:	4610      	mov	r0, r2
 800858c:	4619      	mov	r1, r3
 800858e:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8008592:	f7f8 f831 	bl	80005f8 <__aeabi_dmul>
 8008596:	4602      	mov	r2, r0
 8008598:	460b      	mov	r3, r1
 800859a:	4610      	mov	r0, r2
 800859c:	4619      	mov	r1, r3
 800859e:	687b      	ldr	r3, [r7, #4]
 80085a0:	f103 0408 	add.w	r4, r3, #8
 80085a4:	4602      	mov	r2, r0
 80085a6:	460b      	mov	r3, r1
 80085a8:	4640      	mov	r0, r8
 80085aa:	4649      	mov	r1, r9
 80085ac:	f7f7 fe6e 	bl	800028c <__adddf3>
 80085b0:	4602      	mov	r2, r0
 80085b2:	460b      	mov	r3, r1
 80085b4:	e9c4 2300 	strd	r2, r3, [r4]
 80085b8:	bf00      	nop
 80085ba:	37e8      	adds	r7, #232	@ 0xe8
 80085bc:	46bd      	mov	sp, r7
 80085be:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80085c2:	bf00      	nop
 80085c4:	f3af 8000 	nop.w
 80085c8:	33333333 	.word	0x33333333
 80085cc:	3fd33333 	.word	0x3fd33333

080085d0 <master_task>:
QueueHandle_t uart_data_queue;

extern gimbal_control_t gimbal_ctrl_data;


void master_task(void* argument){
 80085d0:	b580      	push	{r7, lr}
 80085d2:	b084      	sub	sp, #16
 80085d4:	af02      	add	r7, sp, #8
 80085d6:	6078      	str	r0, [r7, #4]
//	imu_init();
//	led_green_off();
//	start_micros_timer();
//	led_toggle();

	gimbal_event_group = xEventGroupCreate();
 80085d8:	f00e fd59 	bl	801708e <xEventGroupCreate>
 80085dc:	4603      	mov	r3, r0
 80085de:	4a5d      	ldr	r2, [pc, #372]	@ (8008754 <master_task+0x184>)
 80085e0:	6013      	str	r3, [r2, #0]
	chassis_event_group = xEventGroupCreate();
 80085e2:	f00e fd54 	bl	801708e <xEventGroupCreate>
 80085e6:	4603      	mov	r3, r0
 80085e8:	4a5b      	ldr	r2, [pc, #364]	@ (8008758 <master_task+0x188>)
 80085ea:	6013      	str	r3, [r2, #0]
	launcher_event_group = xEventGroupCreate();
 80085ec:	f00e fd4f 	bl	801708e <xEventGroupCreate>
 80085f0:	4603      	mov	r3, r0
 80085f2:	4a5a      	ldr	r2, [pc, #360]	@ (800875c <master_task+0x18c>)
 80085f4:	6013      	str	r3, [r2, #0]

	usb_continue_semaphore = xSemaphoreCreateBinary();
 80085f6:	2203      	movs	r2, #3
 80085f8:	2100      	movs	r1, #0
 80085fa:	2001      	movs	r0, #1
 80085fc:	f00e ffa9 	bl	8017552 <xQueueGenericCreate>
 8008600:	4603      	mov	r3, r0
 8008602:	4a57      	ldr	r2, [pc, #348]	@ (8008760 <master_task+0x190>)
 8008604:	6013      	str	r3, [r2, #0]


	gyro_data_queue = xQueueCreate(5, sizeof(gyro_data_t));
 8008606:	2200      	movs	r2, #0
 8008608:	2110      	movs	r1, #16
 800860a:	2005      	movs	r0, #5
 800860c:	f00e ffa1 	bl	8017552 <xQueueGenericCreate>
 8008610:	4603      	mov	r3, r0
 8008612:	4a54      	ldr	r2, [pc, #336]	@ (8008764 <master_task+0x194>)
 8008614:	6013      	str	r3, [r2, #0]
	accel_data_queue = xQueueCreate(5, sizeof(accel_data_t));
 8008616:	2200      	movs	r2, #0
 8008618:	2110      	movs	r1, #16
 800861a:	2005      	movs	r0, #5
 800861c:	f00e ff99 	bl	8017552 <xQueueGenericCreate>
 8008620:	4603      	mov	r3, r0
 8008622:	4a51      	ldr	r2, [pc, #324]	@ (8008768 <master_task+0x198>)
 8008624:	6013      	str	r3, [r2, #0]
	mag_data_queue = xQueueCreate(5, sizeof(mag_data_t));
 8008626:	2200      	movs	r2, #0
 8008628:	210c      	movs	r1, #12
 800862a:	2005      	movs	r0, #5
 800862c:	f00e ff91 	bl	8017552 <xQueueGenericCreate>
 8008630:	4603      	mov	r3, r0
 8008632:	4a4e      	ldr	r2, [pc, #312]	@ (800876c <master_task+0x19c>)
 8008634:	6013      	str	r3, [r2, #0]
	//telem_data_queue = xQueueCreate(10, sizeof(telem_data_struct_t));
	g_buzzing_task_msg = xQueueCreate(48, sizeof(uint8_t));
 8008636:	2200      	movs	r2, #0
 8008638:	2101      	movs	r1, #1
 800863a:	2030      	movs	r0, #48	@ 0x30
 800863c:	f00e ff89 	bl	8017552 <xQueueGenericCreate>
 8008640:	4603      	mov	r3, r0
 8008642:	4a4b      	ldr	r2, [pc, #300]	@ (8008770 <master_task+0x1a0>)
 8008644:	6013      	str	r3, [r2, #0]

	// xTaskCreate(Ctrl_TargetUpdateTask, "Ctrl_TargetUpdateTask",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&Ctrl_TargetUpdateTask_handle);

	xTaskCreate(motors_process_task, "motor_process",
 8008646:	4b4b      	ldr	r3, [pc, #300]	@ (8008774 <master_task+0x1a4>)
 8008648:	9301      	str	r3, [sp, #4]
 800864a:	2304      	movs	r3, #4
 800864c:	9300      	str	r3, [sp, #0]
 800864e:	2301      	movs	r3, #1
 8008650:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008654:	4948      	ldr	r1, [pc, #288]	@ (8008778 <master_task+0x1a8>)
 8008656:	4849      	ldr	r0, [pc, #292]	@ (800877c <master_task+0x1ac>)
 8008658:	f00f fcbc 	bl	8017fd4 <xTaskCreate>

	// xTaskCreate(balancing_task, "balancing_task",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&balancing_task_handle);

	xTaskCreate(leg_kinematic_task, "leg_kinematic",
 800865c:	4b48      	ldr	r3, [pc, #288]	@ (8008780 <master_task+0x1b0>)
 800865e:	9301      	str	r3, [sp, #4]
 8008660:	2304      	movs	r3, #4
 8008662:	9300      	str	r3, [sp, #0]
 8008664:	2301      	movs	r3, #1
 8008666:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800866a:	4946      	ldr	r1, [pc, #280]	@ (8008784 <master_task+0x1b4>)
 800866c:	4846      	ldr	r0, [pc, #280]	@ (8008788 <master_task+0x1b8>)
 800866e:	f00f fcb1 	bl	8017fd4 <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
					&motors_process_handle);

	xTaskCreate(imu_processing_task, "IMU_task",
 8008672:	4b46      	ldr	r3, [pc, #280]	@ (800878c <master_task+0x1bc>)
 8008674:	9301      	str	r3, [sp, #4]
 8008676:	230f      	movs	r3, #15
 8008678:	9300      	str	r3, [sp, #0]
 800867a:	2301      	movs	r3, #1
 800867c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008680:	4943      	ldr	r1, [pc, #268]	@ (8008790 <master_task+0x1c0>)
 8008682:	4844      	ldr	r0, [pc, #272]	@ (8008794 <master_task+0x1c4>)
 8008684:	f00f fca6 	bl	8017fd4 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 15,
			&imu_processing_task_handle);

	xTaskCreate(motor_calib_task, "motor_calib_task",
 8008688:	4b43      	ldr	r3, [pc, #268]	@ (8008798 <master_task+0x1c8>)
 800868a:	9301      	str	r3, [sp, #4]
 800868c:	2309      	movs	r3, #9
 800868e:	9300      	str	r3, [sp, #0]
 8008690:	2301      	movs	r3, #1
 8008692:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8008696:	4941      	ldr	r1, [pc, #260]	@ (800879c <master_task+0x1cc>)
 8008698:	4841      	ldr	r0, [pc, #260]	@ (80087a0 <master_task+0x1d0>)
 800869a:	f00f fc9b 	bl	8017fd4 <xTaskCreate>
	} else {
//		xTaskCreate(launcher_control_task, "launcher_task",
//		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
//				&launcher_control_task_handle);
	}
	gimbal_ctrl_data.yaw_semaphore = xSemaphoreCreateBinary();
 800869e:	2203      	movs	r2, #3
 80086a0:	2100      	movs	r1, #0
 80086a2:	2001      	movs	r0, #1
 80086a4:	f00e ff55 	bl	8017552 <xQueueGenericCreate>
 80086a8:	4603      	mov	r3, r0
 80086aa:	4a3e      	ldr	r2, [pc, #248]	@ (80087a4 <master_task+0x1d4>)
 80086ac:	6113      	str	r3, [r2, #16]
	xSemaphoreGive(gimbal_ctrl_data.yaw_semaphore);
 80086ae:	4b3d      	ldr	r3, [pc, #244]	@ (80087a4 <master_task+0x1d4>)
 80086b0:	6918      	ldr	r0, [r3, #16]
 80086b2:	2300      	movs	r3, #0
 80086b4:	2200      	movs	r2, #0
 80086b6:	2100      	movs	r1, #0
 80086b8:	f00e ffaa 	bl	8017610 <xQueueGenericSend>
	xTaskCreate(control_input_task, "RC_task",
 80086bc:	4b3a      	ldr	r3, [pc, #232]	@ (80087a8 <master_task+0x1d8>)
 80086be:	9301      	str	r3, [sp, #4]
 80086c0:	2304      	movs	r3, #4
 80086c2:	9300      	str	r3, [sp, #0]
 80086c4:	2301      	movs	r3, #1
 80086c6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80086ca:	4938      	ldr	r1, [pc, #224]	@ (80087ac <master_task+0x1dc>)
 80086cc:	4838      	ldr	r0, [pc, #224]	@ (80087b0 <master_task+0x1e0>)
 80086ce:	f00f fc81 	bl	8017fd4 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
			&control_input_task_handle);
	xTaskCreate(referee_processing_task, "referee_task", 512, (void*) 1,
 80086d2:	4b38      	ldr	r3, [pc, #224]	@ (80087b4 <master_task+0x1e4>)
 80086d4:	9301      	str	r3, [sp, #4]
 80086d6:	2302      	movs	r3, #2
 80086d8:	9300      	str	r3, [sp, #0]
 80086da:	2301      	movs	r3, #1
 80086dc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80086e0:	4935      	ldr	r1, [pc, #212]	@ (80087b8 <master_task+0x1e8>)
 80086e2:	4836      	ldr	r0, [pc, #216]	@ (80087bc <master_task+0x1ec>)
 80086e4:	f00f fc76 	bl	8017fd4 <xTaskCreate>
			(UBaseType_t) 2, &referee_processing_task_handle);

	// xTaskCreate(motor_control_task, "motor_control_task", 512, (void*) 3,
	// 		(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(motor_control_task, "motor_control", 512, (void*) 3,
 80086e8:	4b35      	ldr	r3, [pc, #212]	@ (80087c0 <master_task+0x1f0>)
 80086ea:	9301      	str	r3, [sp, #4]
 80086ec:	2308      	movs	r3, #8
 80086ee:	9300      	str	r3, [sp, #0]
 80086f0:	2303      	movs	r3, #3
 80086f2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80086f6:	4933      	ldr	r1, [pc, #204]	@ (80087c4 <master_task+0x1f4>)
 80086f8:	4833      	ldr	r0, [pc, #204]	@ (80087c8 <master_task+0x1f8>)
 80086fa:	f00f fc6b 	bl	8017fd4 <xTaskCreate>
			(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(buzzing_task, "buzzer_task",
 80086fe:	4b33      	ldr	r3, [pc, #204]	@ (80087cc <master_task+0x1fc>)
 8008700:	9301      	str	r3, [sp, #4]
 8008702:	2301      	movs	r3, #1
 8008704:	9300      	str	r3, [sp, #0]
 8008706:	2301      	movs	r3, #1
 8008708:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800870c:	4930      	ldr	r1, [pc, #192]	@ (80087d0 <master_task+0x200>)
 800870e:	4831      	ldr	r0, [pc, #196]	@ (80087d4 <master_task+0x204>)
 8008710:	f00f fc60 	bl	8017fd4 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &buzzing_task_handle);
	if (usb_continue_semaphore == NULL) {
 8008714:	4b12      	ldr	r3, [pc, #72]	@ (8008760 <master_task+0x190>)
 8008716:	681b      	ldr	r3, [r3, #0]
 8008718:	2b00      	cmp	r3, #0
 800871a:	d00a      	beq.n	8008732 <master_task+0x162>
		//error handler
	} else {
		xTaskCreate(usb_task, "usb_task",
 800871c:	4b2e      	ldr	r3, [pc, #184]	@ (80087d8 <master_task+0x208>)
 800871e:	9301      	str	r3, [sp, #4]
 8008720:	2301      	movs	r3, #1
 8008722:	9300      	str	r3, [sp, #0]
 8008724:	2301      	movs	r3, #1
 8008726:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800872a:	492c      	ldr	r1, [pc, #176]	@ (80087dc <master_task+0x20c>)
 800872c:	482c      	ldr	r0, [pc, #176]	@ (80087e0 <master_task+0x210>)
 800872e:	f00f fc51 	bl	8017fd4 <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &usb_task_handle);
	}

//	xTaskCreate(telemetry_task, "telemetry_task", 700, (void*) 1,
//			(UBaseType_t) 5, &telemetry_task_handle);
	xTaskCreate(hud_task, "hud_task", 512, (void*) 3,
 8008732:	4b2c      	ldr	r3, [pc, #176]	@ (80087e4 <master_task+0x214>)
 8008734:	9301      	str	r3, [sp, #4]
 8008736:	2305      	movs	r3, #5
 8008738:	9300      	str	r3, [sp, #0]
 800873a:	2303      	movs	r3, #3
 800873c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8008740:	4929      	ldr	r1, [pc, #164]	@ (80087e8 <master_task+0x218>)
 8008742:	482a      	ldr	r0, [pc, #168]	@ (80087ec <master_task+0x21c>)
 8008744:	f00f fc46 	bl	8017fd4 <xTaskCreate>
			(UBaseType_t) 5, &hud_task_handle);


//	vTaskDelete(master_task_handle);
	while(1){
		vTaskDelay(1000);
 8008748:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800874c:	f00f fe4a 	bl	80183e4 <vTaskDelay>
 8008750:	e7fa      	b.n	8008748 <master_task+0x178>
 8008752:	bf00      	nop
 8008754:	200037a8 	.word	0x200037a8
 8008758:	200037ac 	.word	0x200037ac
 800875c:	200037b0 	.word	0x200037b0
 8008760:	200037b4 	.word	0x200037b4
 8008764:	200037b8 	.word	0x200037b8
 8008768:	200037bc 	.word	0x200037bc
 800876c:	200037c0 	.word	0x200037c0
 8008770:	200037c4 	.word	0x200037c4
 8008774:	200037a4 	.word	0x200037a4
 8008778:	08020f10 	.word	0x08020f10
 800877c:	0800a379 	.word	0x0800a379
 8008780:	200037a0 	.word	0x200037a0
 8008784:	08020f20 	.word	0x08020f20
 8008788:	08007401 	.word	0x08007401
 800878c:	20003794 	.word	0x20003794
 8008790:	08020f30 	.word	0x08020f30
 8008794:	080073ad 	.word	0x080073ad
 8008798:	2000378c 	.word	0x2000378c
 800879c:	08020f3c 	.word	0x08020f3c
 80087a0:	08009ba5 	.word	0x08009ba5
 80087a4:	200034e8 	.word	0x200034e8
 80087a8:	20003784 	.word	0x20003784
 80087ac:	08020f50 	.word	0x08020f50
 80087b0:	08005589 	.word	0x08005589
 80087b4:	20003780 	.word	0x20003780
 80087b8:	08020f58 	.word	0x08020f58
 80087bc:	0800aa51 	.word	0x0800aa51
 80087c0:	20003798 	.word	0x20003798
 80087c4:	08020f68 	.word	0x08020f68
 80087c8:	08009e79 	.word	0x08009e79
 80087cc:	20003788 	.word	0x20003788
 80087d0:	08020f78 	.word	0x08020f78
 80087d4:	08004c71 	.word	0x08004c71
 80087d8:	20003790 	.word	0x20003790
 80087dc:	08020f84 	.word	0x08020f84
 80087e0:	0800afdd 	.word	0x0800afdd
 80087e4:	2000379c 	.word	0x2000379c
 80087e8:	08020f90 	.word	0x08020f90
 80087ec:	080063e1 	.word	0x080063e1

080087f0 <set_motor_config>:
#include "motor_config.h"

extern QueueHandle_t g_buzzing_task_msg;
uint16_t g_motor_fault;

void set_motor_config(motor_data_t *motor) {
 80087f0:	b480      	push	{r7}
 80087f2:	b083      	sub	sp, #12
 80087f4:	af00      	add	r7, sp, #0
 80087f6:	6078      	str	r0, [r7, #4]
	//general config:
	switch (motor->motor_type) {
 80087f8:	687b      	ldr	r3, [r7, #4]
 80087fa:	789b      	ldrb	r3, [r3, #2]
 80087fc:	3b01      	subs	r3, #1
 80087fe:	2b08      	cmp	r3, #8
 8008800:	f200 8115 	bhi.w	8008a2e <set_motor_config+0x23e>
 8008804:	a201      	add	r2, pc, #4	@ (adr r2, 800880c <set_motor_config+0x1c>)
 8008806:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800880a:	bf00      	nop
 800880c:	080088fd 	.word	0x080088fd
 8008810:	080089c9 	.word	0x080089c9
 8008814:	08008831 	.word	0x08008831
 8008818:	08008895 	.word	0x08008895
 800881c:	08008831 	.word	0x08008831
 8008820:	080089c9 	.word	0x080089c9
 8008824:	080089c9 	.word	0x080089c9
 8008828:	08008831 	.word	0x08008831
 800882c:	08008963 	.word	0x08008963
	case TYPE_M3508_ANGLE:
	case TYPE_M3508_STEPS:
	case TYPE_M3508:
		motor->angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	4a84      	ldr	r2, [pc, #528]	@ (8008a44 <set_motor_config+0x254>)
 8008834:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 8008838:	687b      	ldr	r3, [r7, #4]
 800883a:	4a83      	ldr	r2, [pc, #524]	@ (8008a48 <set_motor_config+0x258>)
 800883c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 8008840:	687b      	ldr	r3, [r7, #4]
 8008842:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8008846:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M3508_GEARBOX_RATIO;
 8008848:	687b      	ldr	r3, [r7, #4]
 800884a:	4a80      	ldr	r2, [pc, #512]	@ (8008a4c <set_motor_config+0x25c>)
 800884c:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M3508_GEARBOX_RATIO;
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	4a7f      	ldr	r2, [pc, #508]	@ (8008a50 <set_motor_config+0x260>)
 8008854:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008858:	687b      	ldr	r3, [r7, #4]
 800885a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008864:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 800886c:	687b      	ldr	r3, [r7, #4]
 800886e:	4a79      	ldr	r2, [pc, #484]	@ (8008a54 <set_motor_config+0x264>)
 8008870:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 8008874:	687b      	ldr	r3, [r7, #4]
 8008876:	4a78      	ldr	r2, [pc, #480]	@ (8008a58 <set_motor_config+0x268>)
 8008878:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang - motor->angle_data.min_ang;
 800887c:	687b      	ldr	r3, [r7, #4]
 800887e:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008888:	ee77 7a67 	vsub.f32	s15, s14, s15
 800888c:	687b      	ldr	r3, [r7, #4]
 800888e:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008892:	e0cd      	b.n	8008a30 <set_motor_config+0x240>
	case TYPE_M3508_NGEARBOX:
		motor->angle_data.gearbox_ratio = 1;
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800889a:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 800889e:	687b      	ldr	r3, [r7, #4]
 80088a0:	4a69      	ldr	r2, [pc, #420]	@ (8008a48 <set_motor_config+0x258>)
 80088a2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80088ac:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	4a6a      	ldr	r2, [pc, #424]	@ (8008a5c <set_motor_config+0x26c>)
 80088b2:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80088bc:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80088c0:	687b      	ldr	r3, [r7, #4]
 80088c2:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80088cc:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 80088d4:	687b      	ldr	r3, [r7, #4]
 80088d6:	4a5f      	ldr	r2, [pc, #380]	@ (8008a54 <set_motor_config+0x264>)
 80088d8:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	4a5e      	ldr	r2, [pc, #376]	@ (8008a58 <set_motor_config+0x268>)
 80088e0:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80088e4:	687b      	ldr	r3, [r7, #4]
 80088e6:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 80088f0:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 80088fa:	e099      	b.n	8008a30 <set_motor_config+0x240>

	case TYPE_GM6020:
		motor->angle_data.gearbox_ratio = 1;
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8008902:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 8008906:	687b      	ldr	r3, [r7, #4]
 8008908:	4a55      	ldr	r2, [pc, #340]	@ (8008a60 <set_motor_config+0x270>)
 800890a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	4a54      	ldr	r2, [pc, #336]	@ (8008a64 <set_motor_config+0x274>)
 8008912:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 8008914:	687b      	ldr	r3, [r7, #4]
 8008916:	4a51      	ldr	r2, [pc, #324]	@ (8008a5c <set_motor_config+0x26c>)
 8008918:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 800891c:	687b      	ldr	r3, [r7, #4]
 800891e:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8008922:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008932:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.max_ang = PI;
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	4a46      	ldr	r2, [pc, #280]	@ (8008a58 <set_motor_config+0x268>)
 800893e:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.min_ang = -PI;
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	4a43      	ldr	r2, [pc, #268]	@ (8008a54 <set_motor_config+0x264>)
 8008946:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 8008950:	687b      	ldr	r3, [r7, #4]
 8008952:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008956:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008960:	e066      	b.n	8008a30 <set_motor_config+0x240>

	case TYPE_GM6020_720:
		motor->angle_data.gearbox_ratio = 0;
 8008962:	687b      	ldr	r3, [r7, #4]
 8008964:	f04f 0200 	mov.w	r2, #0
 8008968:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 800896c:	687b      	ldr	r3, [r7, #4]
 800896e:	4a3c      	ldr	r2, [pc, #240]	@ (8008a60 <set_motor_config+0x270>)
 8008970:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 8008974:	687b      	ldr	r3, [r7, #4]
 8008976:	4a3b      	ldr	r2, [pc, #236]	@ (8008a64 <set_motor_config+0x274>)
 8008978:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -8192;	//-4096*2
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	4a3a      	ldr	r2, [pc, #232]	@ (8008a68 <set_motor_config+0x278>)
 800897e:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 8192;	//4096*2
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8008988:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008998:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800899a:	687b      	ldr	r3, [r7, #4]
 800899c:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -2 * PI;
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	4a32      	ldr	r2, [pc, #200]	@ (8008a6c <set_motor_config+0x27c>)
 80089a4:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = 2 * PI;
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	4a31      	ldr	r2, [pc, #196]	@ (8008a70 <set_motor_config+0x280>)
 80089ac:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 80089b6:	687b      	ldr	r3, [r7, #4]
 80089b8:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 80089bc:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 80089c6:	e033      	b.n	8008a30 <set_motor_config+0x240>
	case TYPE_M2006:
	case TYPE_M2006_STEPS:
	case TYPE_M2006_ANGLE:
		motor->angle_data.gearbox_ratio = M2006_GEARBOX_RATIO;
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	4a2a      	ldr	r2, [pc, #168]	@ (8008a74 <set_motor_config+0x284>)
 80089cc:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M2006_MAX_RPM;
 80089d0:	687b      	ldr	r3, [r7, #4]
 80089d2:	4a29      	ldr	r2, [pc, #164]	@ (8008a78 <set_motor_config+0x288>)
 80089d4:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M2006_MAX_OUTPUT;
 80089d8:	687b      	ldr	r3, [r7, #4]
 80089da:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80089de:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M2006_GEARBOX_RATIO;
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	4a26      	ldr	r2, [pc, #152]	@ (8008a7c <set_motor_config+0x28c>)
 80089e4:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M2006_GEARBOX_RATIO;
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	f44f 3210 	mov.w	r2, #147456	@ 0x24000
 80089ee:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80089fe:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 8008a00:	687b      	ldr	r3, [r7, #4]
 8008a02:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 8008a06:	687b      	ldr	r3, [r7, #4]
 8008a08:	4a12      	ldr	r2, [pc, #72]	@ (8008a54 <set_motor_config+0x264>)
 8008a0a:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	4a11      	ldr	r2, [pc, #68]	@ (8008a58 <set_motor_config+0x268>)
 8008a12:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008a16:	687b      	ldr	r3, [r7, #4]
 8008a18:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 8008a22:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 8008a2c:	e000      	b.n	8008a30 <set_motor_config+0x240>
	default:
		break;
 8008a2e:	bf00      	nop
	}

	motor->angle_data.init = 0;
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	2200      	movs	r2, #0
 8008a34:	f883 20dc 	strb.w	r2, [r3, #220]	@ 0xdc

}
 8008a38:	bf00      	nop
 8008a3a:	370c      	adds	r7, #12
 8008a3c:	46bd      	mov	sp, r7
 8008a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a42:	4770      	bx	lr
 8008a44:	4199999a 	.word	0x4199999a
 8008a48:	460fc000 	.word	0x460fc000
 8008a4c:	fffecccd 	.word	0xfffecccd
 8008a50:	00013333 	.word	0x00013333
 8008a54:	c0490fdb 	.word	0xc0490fdb
 8008a58:	40490fdb 	.word	0x40490fdb
 8008a5c:	fffff000 	.word	0xfffff000
 8008a60:	43c80000 	.word	0x43c80000
 8008a64:	469c4000 	.word	0x469c4000
 8008a68:	ffffe000 	.word	0xffffe000
 8008a6c:	c0c90fdb 	.word	0xc0c90fdb
 8008a70:	40c90fdb 	.word	0x40c90fdb
 8008a74:	42100000 	.word	0x42100000
 8008a78:	466a6000 	.word	0x466a6000
 8008a7c:	fffdc000 	.word	0xfffdc000

08008a80 <config_motors>:

extern motor_data_t g_can_motors[24];
void config_motors() {
 8008a80:	b580      	push	{r7, lr}
 8008a82:	b082      	sub	sp, #8
 8008a84:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i < 24; i++) {
 8008a86:	2300      	movs	r3, #0
 8008a88:	71fb      	strb	r3, [r7, #7]
 8008a8a:	e042      	b.n	8008b12 <config_motors+0x92>
		//reset all the values to 0
		g_can_motors[i].motor_type = 0;
 8008a8c:	79fa      	ldrb	r2, [r7, #7]
 8008a8e:	49c4      	ldr	r1, [pc, #784]	@ (8008da0 <config_motors+0x320>)
 8008a90:	4613      	mov	r3, r2
 8008a92:	011b      	lsls	r3, r3, #4
 8008a94:	1a9b      	subs	r3, r3, r2
 8008a96:	011b      	lsls	r3, r3, #4
 8008a98:	440b      	add	r3, r1
 8008a9a:	3302      	adds	r3, #2
 8008a9c:	2200      	movs	r2, #0
 8008a9e:	701a      	strb	r2, [r3, #0]
		g_can_motors[i].rpm_pid.output = 0;
 8008aa0:	79fa      	ldrb	r2, [r7, #7]
 8008aa2:	49bf      	ldr	r1, [pc, #764]	@ (8008da0 <config_motors+0x320>)
 8008aa4:	4613      	mov	r3, r2
 8008aa6:	011b      	lsls	r3, r3, #4
 8008aa8:	1a9b      	subs	r3, r3, r2
 8008aaa:	011b      	lsls	r3, r3, #4
 8008aac:	440b      	add	r3, r1
 8008aae:	3358      	adds	r3, #88	@ 0x58
 8008ab0:	f04f 0200 	mov.w	r2, #0
 8008ab4:	601a      	str	r2, [r3, #0]
		g_can_motors[i].rpm_pid.integral = 0;
 8008ab6:	79fa      	ldrb	r2, [r7, #7]
 8008ab8:	49b9      	ldr	r1, [pc, #740]	@ (8008da0 <config_motors+0x320>)
 8008aba:	4613      	mov	r3, r2
 8008abc:	011b      	lsls	r3, r3, #4
 8008abe:	1a9b      	subs	r3, r3, r2
 8008ac0:	011b      	lsls	r3, r3, #4
 8008ac2:	440b      	add	r3, r1
 8008ac4:	334c      	adds	r3, #76	@ 0x4c
 8008ac6:	f04f 0200 	mov.w	r2, #0
 8008aca:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.output = 0;
 8008acc:	79fa      	ldrb	r2, [r7, #7]
 8008ace:	49b4      	ldr	r1, [pc, #720]	@ (8008da0 <config_motors+0x320>)
 8008ad0:	4613      	mov	r3, r2
 8008ad2:	011b      	lsls	r3, r3, #4
 8008ad4:	1a9b      	subs	r3, r3, r2
 8008ad6:	011b      	lsls	r3, r3, #4
 8008ad8:	440b      	add	r3, r1
 8008ada:	3388      	adds	r3, #136	@ 0x88
 8008adc:	f04f 0200 	mov.w	r2, #0
 8008ae0:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.integral = 0;
 8008ae2:	79fa      	ldrb	r2, [r7, #7]
 8008ae4:	49ae      	ldr	r1, [pc, #696]	@ (8008da0 <config_motors+0x320>)
 8008ae6:	4613      	mov	r3, r2
 8008ae8:	011b      	lsls	r3, r3, #4
 8008aea:	1a9b      	subs	r3, r3, r2
 8008aec:	011b      	lsls	r3, r3, #4
 8008aee:	440b      	add	r3, r1
 8008af0:	337c      	adds	r3, #124	@ 0x7c
 8008af2:	f04f 0200 	mov.w	r2, #0
 8008af6:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_data.ticks = 0;
 8008af8:	79fa      	ldrb	r2, [r7, #7]
 8008afa:	49a9      	ldr	r1, [pc, #676]	@ (8008da0 <config_motors+0x320>)
 8008afc:	4613      	mov	r3, r2
 8008afe:	011b      	lsls	r3, r3, #4
 8008b00:	1a9b      	subs	r3, r3, r2
 8008b02:	011b      	lsls	r3, r3, #4
 8008b04:	440b      	add	r3, r1
 8008b06:	3398      	adds	r3, #152	@ 0x98
 8008b08:	2200      	movs	r2, #0
 8008b0a:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < 24; i++) {
 8008b0c:	79fb      	ldrb	r3, [r7, #7]
 8008b0e:	3301      	adds	r3, #1
 8008b10:	71fb      	strb	r3, [r7, #7]
 8008b12:	79fb      	ldrb	r3, [r7, #7]
 8008b14:	2b17      	cmp	r3, #23
 8008b16:	d9b9      	bls.n	8008a8c <config_motors+0xc>
	}

	//initialise motor data
#ifdef LEFT_MOTOR_ID
	uint8_t motor_id = LEFT_MOTOR_ID - 1;
 8008b18:	2300      	movs	r3, #0
 8008b1a:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 8008b1c:	79ba      	ldrb	r2, [r7, #6]
 8008b1e:	49a0      	ldr	r1, [pc, #640]	@ (8008da0 <config_motors+0x320>)
 8008b20:	4613      	mov	r3, r2
 8008b22:	011b      	lsls	r3, r3, #4
 8008b24:	1a9b      	subs	r3, r3, r2
 8008b26:	011b      	lsls	r3, r3, #4
 8008b28:	440b      	add	r3, r1
 8008b2a:	3302      	adds	r3, #2
 8008b2c:	2203      	movs	r2, #3
 8008b2e:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008b30:	79ba      	ldrb	r2, [r7, #6]
 8008b32:	4613      	mov	r3, r2
 8008b34:	011b      	lsls	r3, r3, #4
 8008b36:	1a9b      	subs	r3, r3, r2
 8008b38:	011b      	lsls	r3, r3, #4
 8008b3a:	4a99      	ldr	r2, [pc, #612]	@ (8008da0 <config_motors+0x320>)
 8008b3c:	4413      	add	r3, r2
 8008b3e:	4618      	mov	r0, r3
 8008b40:	f7ff fe56 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008b44:	79ba      	ldrb	r2, [r7, #6]
 8008b46:	4996      	ldr	r1, [pc, #600]	@ (8008da0 <config_motors+0x320>)
 8008b48:	4613      	mov	r3, r2
 8008b4a:	011b      	lsls	r3, r3, #4
 8008b4c:	1a9b      	subs	r3, r3, r2
 8008b4e:	011b      	lsls	r3, r3, #4
 8008b50:	440b      	add	r3, r1
 8008b52:	339c      	adds	r3, #156	@ 0x9c
 8008b54:	2200      	movs	r2, #0
 8008b56:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008b58:	79ba      	ldrb	r2, [r7, #6]
 8008b5a:	4991      	ldr	r1, [pc, #580]	@ (8008da0 <config_motors+0x320>)
 8008b5c:	4613      	mov	r3, r2
 8008b5e:	011b      	lsls	r3, r3, #4
 8008b60:	1a9b      	subs	r3, r3, r2
 8008b62:	011b      	lsls	r3, r3, #4
 8008b64:	440b      	add	r3, r1
 8008b66:	33c4      	adds	r3, #196	@ 0xc4
 8008b68:	4a8e      	ldr	r2, [pc, #568]	@ (8008da4 <config_motors+0x324>)
 8008b6a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008b6c:	79ba      	ldrb	r2, [r7, #6]
 8008b6e:	498c      	ldr	r1, [pc, #560]	@ (8008da0 <config_motors+0x320>)
 8008b70:	4613      	mov	r3, r2
 8008b72:	011b      	lsls	r3, r3, #4
 8008b74:	1a9b      	subs	r3, r3, r2
 8008b76:	011b      	lsls	r3, r3, #4
 8008b78:	440b      	add	r3, r1
 8008b7a:	33c0      	adds	r3, #192	@ 0xc0
 8008b7c:	4a8a      	ldr	r2, [pc, #552]	@ (8008da8 <config_motors+0x328>)
 8008b7e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008b80:	79ba      	ldrb	r2, [r7, #6]
 8008b82:	4987      	ldr	r1, [pc, #540]	@ (8008da0 <config_motors+0x320>)
 8008b84:	4613      	mov	r3, r2
 8008b86:	011b      	lsls	r3, r3, #4
 8008b88:	1a9b      	subs	r3, r3, r2
 8008b8a:	011b      	lsls	r3, r3, #4
 8008b8c:	440b      	add	r3, r1
 8008b8e:	3338      	adds	r3, #56	@ 0x38
 8008b90:	f04f 0200 	mov.w	r2, #0
 8008b94:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008b96:	79ba      	ldrb	r2, [r7, #6]
 8008b98:	4981      	ldr	r1, [pc, #516]	@ (8008da0 <config_motors+0x320>)
 8008b9a:	4613      	mov	r3, r2
 8008b9c:	011b      	lsls	r3, r3, #4
 8008b9e:	1a9b      	subs	r3, r3, r2
 8008ba0:	011b      	lsls	r3, r3, #4
 8008ba2:	440b      	add	r3, r1
 8008ba4:	333c      	adds	r3, #60	@ 0x3c
 8008ba6:	f04f 0200 	mov.w	r2, #0
 8008baa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008bac:	79ba      	ldrb	r2, [r7, #6]
 8008bae:	497c      	ldr	r1, [pc, #496]	@ (8008da0 <config_motors+0x320>)
 8008bb0:	4613      	mov	r3, r2
 8008bb2:	011b      	lsls	r3, r3, #4
 8008bb4:	1a9b      	subs	r3, r3, r2
 8008bb6:	011b      	lsls	r3, r3, #4
 8008bb8:	440b      	add	r3, r1
 8008bba:	3340      	adds	r3, #64	@ 0x40
 8008bbc:	f04f 0200 	mov.w	r2, #0
 8008bc0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008bc2:	79ba      	ldrb	r2, [r7, #6]
 8008bc4:	4976      	ldr	r1, [pc, #472]	@ (8008da0 <config_motors+0x320>)
 8008bc6:	4613      	mov	r3, r2
 8008bc8:	011b      	lsls	r3, r3, #4
 8008bca:	1a9b      	subs	r3, r3, r2
 8008bcc:	011b      	lsls	r3, r3, #4
 8008bce:	440b      	add	r3, r1
 8008bd0:	33d4      	adds	r3, #212	@ 0xd4
 8008bd2:	4a76      	ldr	r2, [pc, #472]	@ (8008dac <config_motors+0x32c>)
 8008bd4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008bd6:	79ba      	ldrb	r2, [r7, #6]
 8008bd8:	4971      	ldr	r1, [pc, #452]	@ (8008da0 <config_motors+0x320>)
 8008bda:	4613      	mov	r3, r2
 8008bdc:	011b      	lsls	r3, r3, #4
 8008bde:	1a9b      	subs	r3, r3, r2
 8008be0:	011b      	lsls	r3, r3, #4
 8008be2:	440b      	add	r3, r1
 8008be4:	3350      	adds	r3, #80	@ 0x50
 8008be6:	f04f 0200 	mov.w	r2, #0
 8008bea:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008bec:	79ba      	ldrb	r2, [r7, #6]
 8008bee:	496c      	ldr	r1, [pc, #432]	@ (8008da0 <config_motors+0x320>)
 8008bf0:	4613      	mov	r3, r2
 8008bf2:	011b      	lsls	r3, r3, #4
 8008bf4:	1a9b      	subs	r3, r3, r2
 8008bf6:	011b      	lsls	r3, r3, #4
 8008bf8:	440b      	add	r3, r1
 8008bfa:	3354      	adds	r3, #84	@ 0x54
 8008bfc:	f04f 0200 	mov.w	r2, #0
 8008c00:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 8008c02:	79ba      	ldrb	r2, [r7, #6]
 8008c04:	4966      	ldr	r1, [pc, #408]	@ (8008da0 <config_motors+0x320>)
 8008c06:	4613      	mov	r3, r2
 8008c08:	011b      	lsls	r3, r3, #4
 8008c0a:	1a9b      	subs	r3, r3, r2
 8008c0c:	011b      	lsls	r3, r3, #4
 8008c0e:	440b      	add	r3, r1
 8008c10:	3330      	adds	r3, #48	@ 0x30
 8008c12:	4a67      	ldr	r2, [pc, #412]	@ (8008db0 <config_motors+0x330>)
 8008c14:	601a      	str	r2, [r3, #0]
#endif

#ifdef RIGHT_MOTOR_ID
	motor_id = RIGHT_MOTOR_ID - 1;
 8008c16:	2301      	movs	r3, #1
 8008c18:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 8008c1a:	79ba      	ldrb	r2, [r7, #6]
 8008c1c:	4960      	ldr	r1, [pc, #384]	@ (8008da0 <config_motors+0x320>)
 8008c1e:	4613      	mov	r3, r2
 8008c20:	011b      	lsls	r3, r3, #4
 8008c22:	1a9b      	subs	r3, r3, r2
 8008c24:	011b      	lsls	r3, r3, #4
 8008c26:	440b      	add	r3, r1
 8008c28:	3302      	adds	r3, #2
 8008c2a:	2203      	movs	r2, #3
 8008c2c:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008c2e:	79ba      	ldrb	r2, [r7, #6]
 8008c30:	4613      	mov	r3, r2
 8008c32:	011b      	lsls	r3, r3, #4
 8008c34:	1a9b      	subs	r3, r3, r2
 8008c36:	011b      	lsls	r3, r3, #4
 8008c38:	4a59      	ldr	r2, [pc, #356]	@ (8008da0 <config_motors+0x320>)
 8008c3a:	4413      	add	r3, r2
 8008c3c:	4618      	mov	r0, r3
 8008c3e:	f7ff fdd7 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 8008c42:	79ba      	ldrb	r2, [r7, #6]
 8008c44:	4956      	ldr	r1, [pc, #344]	@ (8008da0 <config_motors+0x320>)
 8008c46:	4613      	mov	r3, r2
 8008c48:	011b      	lsls	r3, r3, #4
 8008c4a:	1a9b      	subs	r3, r3, r2
 8008c4c:	011b      	lsls	r3, r3, #4
 8008c4e:	440b      	add	r3, r1
 8008c50:	339c      	adds	r3, #156	@ 0x9c
 8008c52:	2200      	movs	r2, #0
 8008c54:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008c56:	79ba      	ldrb	r2, [r7, #6]
 8008c58:	4951      	ldr	r1, [pc, #324]	@ (8008da0 <config_motors+0x320>)
 8008c5a:	4613      	mov	r3, r2
 8008c5c:	011b      	lsls	r3, r3, #4
 8008c5e:	1a9b      	subs	r3, r3, r2
 8008c60:	011b      	lsls	r3, r3, #4
 8008c62:	440b      	add	r3, r1
 8008c64:	33c4      	adds	r3, #196	@ 0xc4
 8008c66:	4a4f      	ldr	r2, [pc, #316]	@ (8008da4 <config_motors+0x324>)
 8008c68:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008c6a:	79ba      	ldrb	r2, [r7, #6]
 8008c6c:	494c      	ldr	r1, [pc, #304]	@ (8008da0 <config_motors+0x320>)
 8008c6e:	4613      	mov	r3, r2
 8008c70:	011b      	lsls	r3, r3, #4
 8008c72:	1a9b      	subs	r3, r3, r2
 8008c74:	011b      	lsls	r3, r3, #4
 8008c76:	440b      	add	r3, r1
 8008c78:	33c0      	adds	r3, #192	@ 0xc0
 8008c7a:	4a4b      	ldr	r2, [pc, #300]	@ (8008da8 <config_motors+0x328>)
 8008c7c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008c7e:	79ba      	ldrb	r2, [r7, #6]
 8008c80:	4947      	ldr	r1, [pc, #284]	@ (8008da0 <config_motors+0x320>)
 8008c82:	4613      	mov	r3, r2
 8008c84:	011b      	lsls	r3, r3, #4
 8008c86:	1a9b      	subs	r3, r3, r2
 8008c88:	011b      	lsls	r3, r3, #4
 8008c8a:	440b      	add	r3, r1
 8008c8c:	33d4      	adds	r3, #212	@ 0xd4
 8008c8e:	4a47      	ldr	r2, [pc, #284]	@ (8008dac <config_motors+0x32c>)
 8008c90:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008c92:	79ba      	ldrb	r2, [r7, #6]
 8008c94:	4942      	ldr	r1, [pc, #264]	@ (8008da0 <config_motors+0x320>)
 8008c96:	4613      	mov	r3, r2
 8008c98:	011b      	lsls	r3, r3, #4
 8008c9a:	1a9b      	subs	r3, r3, r2
 8008c9c:	011b      	lsls	r3, r3, #4
 8008c9e:	440b      	add	r3, r1
 8008ca0:	3338      	adds	r3, #56	@ 0x38
 8008ca2:	f04f 0200 	mov.w	r2, #0
 8008ca6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008ca8:	79ba      	ldrb	r2, [r7, #6]
 8008caa:	493d      	ldr	r1, [pc, #244]	@ (8008da0 <config_motors+0x320>)
 8008cac:	4613      	mov	r3, r2
 8008cae:	011b      	lsls	r3, r3, #4
 8008cb0:	1a9b      	subs	r3, r3, r2
 8008cb2:	011b      	lsls	r3, r3, #4
 8008cb4:	440b      	add	r3, r1
 8008cb6:	333c      	adds	r3, #60	@ 0x3c
 8008cb8:	f04f 0200 	mov.w	r2, #0
 8008cbc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008cbe:	79ba      	ldrb	r2, [r7, #6]
 8008cc0:	4937      	ldr	r1, [pc, #220]	@ (8008da0 <config_motors+0x320>)
 8008cc2:	4613      	mov	r3, r2
 8008cc4:	011b      	lsls	r3, r3, #4
 8008cc6:	1a9b      	subs	r3, r3, r2
 8008cc8:	011b      	lsls	r3, r3, #4
 8008cca:	440b      	add	r3, r1
 8008ccc:	3340      	adds	r3, #64	@ 0x40
 8008cce:	f04f 0200 	mov.w	r2, #0
 8008cd2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008cd4:	79ba      	ldrb	r2, [r7, #6]
 8008cd6:	4932      	ldr	r1, [pc, #200]	@ (8008da0 <config_motors+0x320>)
 8008cd8:	4613      	mov	r3, r2
 8008cda:	011b      	lsls	r3, r3, #4
 8008cdc:	1a9b      	subs	r3, r3, r2
 8008cde:	011b      	lsls	r3, r3, #4
 8008ce0:	440b      	add	r3, r1
 8008ce2:	3350      	adds	r3, #80	@ 0x50
 8008ce4:	f04f 0200 	mov.w	r2, #0
 8008ce8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008cea:	79ba      	ldrb	r2, [r7, #6]
 8008cec:	492c      	ldr	r1, [pc, #176]	@ (8008da0 <config_motors+0x320>)
 8008cee:	4613      	mov	r3, r2
 8008cf0:	011b      	lsls	r3, r3, #4
 8008cf2:	1a9b      	subs	r3, r3, r2
 8008cf4:	011b      	lsls	r3, r3, #4
 8008cf6:	440b      	add	r3, r1
 8008cf8:	3354      	adds	r3, #84	@ 0x54
 8008cfa:	f04f 0200 	mov.w	r2, #0
 8008cfe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 8008d00:	79ba      	ldrb	r2, [r7, #6]
 8008d02:	4927      	ldr	r1, [pc, #156]	@ (8008da0 <config_motors+0x320>)
 8008d04:	4613      	mov	r3, r2
 8008d06:	011b      	lsls	r3, r3, #4
 8008d08:	1a9b      	subs	r3, r3, r2
 8008d0a:	011b      	lsls	r3, r3, #4
 8008d0c:	440b      	add	r3, r1
 8008d0e:	3330      	adds	r3, #48	@ 0x30
 8008d10:	4a27      	ldr	r2, [pc, #156]	@ (8008db0 <config_motors+0x330>)
 8008d12:	601a      	str	r2, [r3, #0]
#endif
#ifdef FR_MOTOR_ID
	motor_id = FR_MOTOR_ID - 1;
 8008d14:	2304      	movs	r3, #4
 8008d16:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008d18:	79ba      	ldrb	r2, [r7, #6]
 8008d1a:	4921      	ldr	r1, [pc, #132]	@ (8008da0 <config_motors+0x320>)
 8008d1c:	4613      	mov	r3, r2
 8008d1e:	011b      	lsls	r3, r3, #4
 8008d20:	1a9b      	subs	r3, r3, r2
 8008d22:	011b      	lsls	r3, r3, #4
 8008d24:	440b      	add	r3, r1
 8008d26:	3302      	adds	r3, #2
 8008d28:	2201      	movs	r2, #1
 8008d2a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008d2c:	79ba      	ldrb	r2, [r7, #6]
 8008d2e:	4613      	mov	r3, r2
 8008d30:	011b      	lsls	r3, r3, #4
 8008d32:	1a9b      	subs	r3, r3, r2
 8008d34:	011b      	lsls	r3, r3, #4
 8008d36:	4a1a      	ldr	r2, [pc, #104]	@ (8008da0 <config_motors+0x320>)
 8008d38:	4413      	add	r3, r2
 8008d3a:	4618      	mov	r0, r3
 8008d3c:	f7ff fd58 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = FR_MOTOR_CENTER;
 8008d40:	79ba      	ldrb	r2, [r7, #6]
 8008d42:	4917      	ldr	r1, [pc, #92]	@ (8008da0 <config_motors+0x320>)
 8008d44:	4613      	mov	r3, r2
 8008d46:	011b      	lsls	r3, r3, #4
 8008d48:	1a9b      	subs	r3, r3, r2
 8008d4a:	011b      	lsls	r3, r3, #4
 8008d4c:	440b      	add	r3, r1
 8008d4e:	339c      	adds	r3, #156	@ 0x9c
 8008d50:	f640 02ca 	movw	r2, #2250	@ 0x8ca
 8008d54:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008d56:	79ba      	ldrb	r2, [r7, #6]
 8008d58:	4911      	ldr	r1, [pc, #68]	@ (8008da0 <config_motors+0x320>)
 8008d5a:	4613      	mov	r3, r2
 8008d5c:	011b      	lsls	r3, r3, #4
 8008d5e:	1a9b      	subs	r3, r3, r2
 8008d60:	011b      	lsls	r3, r3, #4
 8008d62:	440b      	add	r3, r1
 8008d64:	33c4      	adds	r3, #196	@ 0xc4
 8008d66:	4a0f      	ldr	r2, [pc, #60]	@ (8008da4 <config_motors+0x324>)
 8008d68:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008d6a:	79ba      	ldrb	r2, [r7, #6]
 8008d6c:	490c      	ldr	r1, [pc, #48]	@ (8008da0 <config_motors+0x320>)
 8008d6e:	4613      	mov	r3, r2
 8008d70:	011b      	lsls	r3, r3, #4
 8008d72:	1a9b      	subs	r3, r3, r2
 8008d74:	011b      	lsls	r3, r3, #4
 8008d76:	440b      	add	r3, r1
 8008d78:	33c0      	adds	r3, #192	@ 0xc0
 8008d7a:	4a0b      	ldr	r2, [pc, #44]	@ (8008da8 <config_motors+0x328>)
 8008d7c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008d7e:	79ba      	ldrb	r2, [r7, #6]
 8008d80:	4907      	ldr	r1, [pc, #28]	@ (8008da0 <config_motors+0x320>)
 8008d82:	4613      	mov	r3, r2
 8008d84:	011b      	lsls	r3, r3, #4
 8008d86:	1a9b      	subs	r3, r3, r2
 8008d88:	011b      	lsls	r3, r3, #4
 8008d8a:	440b      	add	r3, r1
 8008d8c:	3338      	adds	r3, #56	@ 0x38
 8008d8e:	f04f 0200 	mov.w	r2, #0
 8008d92:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008d94:	79ba      	ldrb	r2, [r7, #6]
 8008d96:	4902      	ldr	r1, [pc, #8]	@ (8008da0 <config_motors+0x320>)
 8008d98:	4613      	mov	r3, r2
 8008d9a:	011b      	lsls	r3, r3, #4
 8008d9c:	1a9b      	subs	r3, r3, r2
 8008d9e:	e009      	b.n	8008db4 <config_motors+0x334>
 8008da0:	20001e48 	.word	0x20001e48
 8008da4:	40c90fdb 	.word	0x40c90fdb
 8008da8:	c0c90fdb 	.word	0xc0c90fdb
 8008dac:	43eec2d1 	.word	0x43eec2d1
 8008db0:	41200000 	.word	0x41200000
 8008db4:	011b      	lsls	r3, r3, #4
 8008db6:	440b      	add	r3, r1
 8008db8:	333c      	adds	r3, #60	@ 0x3c
 8008dba:	f04f 0200 	mov.w	r2, #0
 8008dbe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008dc0:	79ba      	ldrb	r2, [r7, #6]
 8008dc2:	49c4      	ldr	r1, [pc, #784]	@ (80090d4 <config_motors+0x654>)
 8008dc4:	4613      	mov	r3, r2
 8008dc6:	011b      	lsls	r3, r3, #4
 8008dc8:	1a9b      	subs	r3, r3, r2
 8008dca:	011b      	lsls	r3, r3, #4
 8008dcc:	440b      	add	r3, r1
 8008dce:	3340      	adds	r3, #64	@ 0x40
 8008dd0:	f04f 0200 	mov.w	r2, #0
 8008dd4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008dd6:	79ba      	ldrb	r2, [r7, #6]
 8008dd8:	49be      	ldr	r1, [pc, #760]	@ (80090d4 <config_motors+0x654>)
 8008dda:	4613      	mov	r3, r2
 8008ddc:	011b      	lsls	r3, r3, #4
 8008dde:	1a9b      	subs	r3, r3, r2
 8008de0:	011b      	lsls	r3, r3, #4
 8008de2:	440b      	add	r3, r1
 8008de4:	33d4      	adds	r3, #212	@ 0xd4
 8008de6:	4abc      	ldr	r2, [pc, #752]	@ (80090d8 <config_motors+0x658>)
 8008de8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008dea:	79ba      	ldrb	r2, [r7, #6]
 8008dec:	49b9      	ldr	r1, [pc, #740]	@ (80090d4 <config_motors+0x654>)
 8008dee:	4613      	mov	r3, r2
 8008df0:	011b      	lsls	r3, r3, #4
 8008df2:	1a9b      	subs	r3, r3, r2
 8008df4:	011b      	lsls	r3, r3, #4
 8008df6:	440b      	add	r3, r1
 8008df8:	3350      	adds	r3, #80	@ 0x50
 8008dfa:	f04f 0200 	mov.w	r2, #0
 8008dfe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008e00:	79ba      	ldrb	r2, [r7, #6]
 8008e02:	49b4      	ldr	r1, [pc, #720]	@ (80090d4 <config_motors+0x654>)
 8008e04:	4613      	mov	r3, r2
 8008e06:	011b      	lsls	r3, r3, #4
 8008e08:	1a9b      	subs	r3, r3, r2
 8008e0a:	011b      	lsls	r3, r3, #4
 8008e0c:	440b      	add	r3, r1
 8008e0e:	3354      	adds	r3, #84	@ 0x54
 8008e10:	f04f 0200 	mov.w	r2, #0
 8008e14:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8008e16:	79ba      	ldrb	r2, [r7, #6]
 8008e18:	49ae      	ldr	r1, [pc, #696]	@ (80090d4 <config_motors+0x654>)
 8008e1a:	4613      	mov	r3, r2
 8008e1c:	011b      	lsls	r3, r3, #4
 8008e1e:	1a9b      	subs	r3, r3, r2
 8008e20:	011b      	lsls	r3, r3, #4
 8008e22:	440b      	add	r3, r1
 8008e24:	3330      	adds	r3, #48	@ 0x30
 8008e26:	4aad      	ldr	r2, [pc, #692]	@ (80090dc <config_motors+0x65c>)
 8008e28:	601a      	str	r2, [r3, #0]
#endif

#ifdef FL_MOTOR_ID
	motor_id = FL_MOTOR_ID - 1;
 8008e2a:	2305      	movs	r3, #5
 8008e2c:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008e2e:	79ba      	ldrb	r2, [r7, #6]
 8008e30:	49a8      	ldr	r1, [pc, #672]	@ (80090d4 <config_motors+0x654>)
 8008e32:	4613      	mov	r3, r2
 8008e34:	011b      	lsls	r3, r3, #4
 8008e36:	1a9b      	subs	r3, r3, r2
 8008e38:	011b      	lsls	r3, r3, #4
 8008e3a:	440b      	add	r3, r1
 8008e3c:	3302      	adds	r3, #2
 8008e3e:	2201      	movs	r2, #1
 8008e40:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008e42:	79ba      	ldrb	r2, [r7, #6]
 8008e44:	4613      	mov	r3, r2
 8008e46:	011b      	lsls	r3, r3, #4
 8008e48:	1a9b      	subs	r3, r3, r2
 8008e4a:	011b      	lsls	r3, r3, #4
 8008e4c:	4aa1      	ldr	r2, [pc, #644]	@ (80090d4 <config_motors+0x654>)
 8008e4e:	4413      	add	r3, r2
 8008e50:	4618      	mov	r0, r3
 8008e52:	f7ff fccd 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = FL_MOTOR_CENTER;
 8008e56:	79ba      	ldrb	r2, [r7, #6]
 8008e58:	499e      	ldr	r1, [pc, #632]	@ (80090d4 <config_motors+0x654>)
 8008e5a:	4613      	mov	r3, r2
 8008e5c:	011b      	lsls	r3, r3, #4
 8008e5e:	1a9b      	subs	r3, r3, r2
 8008e60:	011b      	lsls	r3, r3, #4
 8008e62:	440b      	add	r3, r1
 8008e64:	339c      	adds	r3, #156	@ 0x9c
 8008e66:	f640 529e 	movw	r2, #3486	@ 0xd9e
 8008e6a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008e6c:	79ba      	ldrb	r2, [r7, #6]
 8008e6e:	4999      	ldr	r1, [pc, #612]	@ (80090d4 <config_motors+0x654>)
 8008e70:	4613      	mov	r3, r2
 8008e72:	011b      	lsls	r3, r3, #4
 8008e74:	1a9b      	subs	r3, r3, r2
 8008e76:	011b      	lsls	r3, r3, #4
 8008e78:	440b      	add	r3, r1
 8008e7a:	33c4      	adds	r3, #196	@ 0xc4
 8008e7c:	4a98      	ldr	r2, [pc, #608]	@ (80090e0 <config_motors+0x660>)
 8008e7e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008e80:	79ba      	ldrb	r2, [r7, #6]
 8008e82:	4994      	ldr	r1, [pc, #592]	@ (80090d4 <config_motors+0x654>)
 8008e84:	4613      	mov	r3, r2
 8008e86:	011b      	lsls	r3, r3, #4
 8008e88:	1a9b      	subs	r3, r3, r2
 8008e8a:	011b      	lsls	r3, r3, #4
 8008e8c:	440b      	add	r3, r1
 8008e8e:	33c0      	adds	r3, #192	@ 0xc0
 8008e90:	4a94      	ldr	r2, [pc, #592]	@ (80090e4 <config_motors+0x664>)
 8008e92:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008e94:	79ba      	ldrb	r2, [r7, #6]
 8008e96:	498f      	ldr	r1, [pc, #572]	@ (80090d4 <config_motors+0x654>)
 8008e98:	4613      	mov	r3, r2
 8008e9a:	011b      	lsls	r3, r3, #4
 8008e9c:	1a9b      	subs	r3, r3, r2
 8008e9e:	011b      	lsls	r3, r3, #4
 8008ea0:	440b      	add	r3, r1
 8008ea2:	33d4      	adds	r3, #212	@ 0xd4
 8008ea4:	4a8c      	ldr	r2, [pc, #560]	@ (80090d8 <config_motors+0x658>)
 8008ea6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 8008ea8:	79ba      	ldrb	r2, [r7, #6]
 8008eaa:	498a      	ldr	r1, [pc, #552]	@ (80090d4 <config_motors+0x654>)
 8008eac:	4613      	mov	r3, r2
 8008eae:	011b      	lsls	r3, r3, #4
 8008eb0:	1a9b      	subs	r3, r3, r2
 8008eb2:	011b      	lsls	r3, r3, #4
 8008eb4:	440b      	add	r3, r1
 8008eb6:	3338      	adds	r3, #56	@ 0x38
 8008eb8:	f04f 0200 	mov.w	r2, #0
 8008ebc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8008ebe:	79ba      	ldrb	r2, [r7, #6]
 8008ec0:	4984      	ldr	r1, [pc, #528]	@ (80090d4 <config_motors+0x654>)
 8008ec2:	4613      	mov	r3, r2
 8008ec4:	011b      	lsls	r3, r3, #4
 8008ec6:	1a9b      	subs	r3, r3, r2
 8008ec8:	011b      	lsls	r3, r3, #4
 8008eca:	440b      	add	r3, r1
 8008ecc:	333c      	adds	r3, #60	@ 0x3c
 8008ece:	f04f 0200 	mov.w	r2, #0
 8008ed2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8008ed4:	79ba      	ldrb	r2, [r7, #6]
 8008ed6:	497f      	ldr	r1, [pc, #508]	@ (80090d4 <config_motors+0x654>)
 8008ed8:	4613      	mov	r3, r2
 8008eda:	011b      	lsls	r3, r3, #4
 8008edc:	1a9b      	subs	r3, r3, r2
 8008ede:	011b      	lsls	r3, r3, #4
 8008ee0:	440b      	add	r3, r1
 8008ee2:	3340      	adds	r3, #64	@ 0x40
 8008ee4:	f04f 0200 	mov.w	r2, #0
 8008ee8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8008eea:	79ba      	ldrb	r2, [r7, #6]
 8008eec:	4979      	ldr	r1, [pc, #484]	@ (80090d4 <config_motors+0x654>)
 8008eee:	4613      	mov	r3, r2
 8008ef0:	011b      	lsls	r3, r3, #4
 8008ef2:	1a9b      	subs	r3, r3, r2
 8008ef4:	011b      	lsls	r3, r3, #4
 8008ef6:	440b      	add	r3, r1
 8008ef8:	3350      	adds	r3, #80	@ 0x50
 8008efa:	f04f 0200 	mov.w	r2, #0
 8008efe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8008f00:	79ba      	ldrb	r2, [r7, #6]
 8008f02:	4974      	ldr	r1, [pc, #464]	@ (80090d4 <config_motors+0x654>)
 8008f04:	4613      	mov	r3, r2
 8008f06:	011b      	lsls	r3, r3, #4
 8008f08:	1a9b      	subs	r3, r3, r2
 8008f0a:	011b      	lsls	r3, r3, #4
 8008f0c:	440b      	add	r3, r1
 8008f0e:	3354      	adds	r3, #84	@ 0x54
 8008f10:	f04f 0200 	mov.w	r2, #0
 8008f14:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8008f16:	79ba      	ldrb	r2, [r7, #6]
 8008f18:	496e      	ldr	r1, [pc, #440]	@ (80090d4 <config_motors+0x654>)
 8008f1a:	4613      	mov	r3, r2
 8008f1c:	011b      	lsls	r3, r3, #4
 8008f1e:	1a9b      	subs	r3, r3, r2
 8008f20:	011b      	lsls	r3, r3, #4
 8008f22:	440b      	add	r3, r1
 8008f24:	3330      	adds	r3, #48	@ 0x30
 8008f26:	4a6d      	ldr	r2, [pc, #436]	@ (80090dc <config_motors+0x65c>)
 8008f28:	601a      	str	r2, [r3, #0]
#endif

#ifdef BL_MOTOR_ID
	motor_id = BL_MOTOR_ID - 1;
 8008f2a:	2306      	movs	r3, #6
 8008f2c:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 8008f2e:	79ba      	ldrb	r2, [r7, #6]
 8008f30:	4968      	ldr	r1, [pc, #416]	@ (80090d4 <config_motors+0x654>)
 8008f32:	4613      	mov	r3, r2
 8008f34:	011b      	lsls	r3, r3, #4
 8008f36:	1a9b      	subs	r3, r3, r2
 8008f38:	011b      	lsls	r3, r3, #4
 8008f3a:	440b      	add	r3, r1
 8008f3c:	3302      	adds	r3, #2
 8008f3e:	2201      	movs	r2, #1
 8008f40:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8008f42:	79ba      	ldrb	r2, [r7, #6]
 8008f44:	4613      	mov	r3, r2
 8008f46:	011b      	lsls	r3, r3, #4
 8008f48:	1a9b      	subs	r3, r3, r2
 8008f4a:	011b      	lsls	r3, r3, #4
 8008f4c:	4a61      	ldr	r2, [pc, #388]	@ (80090d4 <config_motors+0x654>)
 8008f4e:	4413      	add	r3, r2
 8008f50:	4618      	mov	r0, r3
 8008f52:	f7ff fc4d 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = BL_MOTOR_CENTER;
 8008f56:	79ba      	ldrb	r2, [r7, #6]
 8008f58:	495e      	ldr	r1, [pc, #376]	@ (80090d4 <config_motors+0x654>)
 8008f5a:	4613      	mov	r3, r2
 8008f5c:	011b      	lsls	r3, r3, #4
 8008f5e:	1a9b      	subs	r3, r3, r2
 8008f60:	011b      	lsls	r3, r3, #4
 8008f62:	440b      	add	r3, r1
 8008f64:	339c      	adds	r3, #156	@ 0x9c
 8008f66:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8008f6a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 2.967;//170
 8008f6c:	79ba      	ldrb	r2, [r7, #6]
 8008f6e:	4959      	ldr	r1, [pc, #356]	@ (80090d4 <config_motors+0x654>)
 8008f70:	4613      	mov	r3, r2
 8008f72:	011b      	lsls	r3, r3, #4
 8008f74:	1a9b      	subs	r3, r3, r2
 8008f76:	011b      	lsls	r3, r3, #4
 8008f78:	440b      	add	r3, r1
 8008f7a:	33b8      	adds	r3, #184	@ 0xb8
 8008f7c:	4a5a      	ldr	r2, [pc, #360]	@ (80090e8 <config_motors+0x668>)
 8008f7e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = PI/2;
 8008f80:	79ba      	ldrb	r2, [r7, #6]
 8008f82:	4954      	ldr	r1, [pc, #336]	@ (80090d4 <config_motors+0x654>)
 8008f84:	4613      	mov	r3, r2
 8008f86:	011b      	lsls	r3, r3, #4
 8008f88:	1a9b      	subs	r3, r3, r2
 8008f8a:	011b      	lsls	r3, r3, #4
 8008f8c:	440b      	add	r3, r1
 8008f8e:	33b4      	adds	r3, #180	@ 0xb4
 8008f90:	4a56      	ldr	r2, [pc, #344]	@ (80090ec <config_motors+0x66c>)
 8008f92:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 8008f94:	79ba      	ldrb	r2, [r7, #6]
 8008f96:	494f      	ldr	r1, [pc, #316]	@ (80090d4 <config_motors+0x654>)
 8008f98:	4613      	mov	r3, r2
 8008f9a:	011b      	lsls	r3, r3, #4
 8008f9c:	1a9b      	subs	r3, r3, r2
 8008f9e:	011b      	lsls	r3, r3, #4
 8008fa0:	440b      	add	r3, r1
 8008fa2:	33c4      	adds	r3, #196	@ 0xc4
 8008fa4:	4a4e      	ldr	r2, [pc, #312]	@ (80090e0 <config_motors+0x660>)
 8008fa6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8008fa8:	79ba      	ldrb	r2, [r7, #6]
 8008faa:	494a      	ldr	r1, [pc, #296]	@ (80090d4 <config_motors+0x654>)
 8008fac:	4613      	mov	r3, r2
 8008fae:	011b      	lsls	r3, r3, #4
 8008fb0:	1a9b      	subs	r3, r3, r2
 8008fb2:	011b      	lsls	r3, r3, #4
 8008fb4:	440b      	add	r3, r1
 8008fb6:	33c0      	adds	r3, #192	@ 0xc0
 8008fb8:	4a4a      	ldr	r2, [pc, #296]	@ (80090e4 <config_motors+0x664>)
 8008fba:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8008fbc:	79ba      	ldrb	r2, [r7, #6]
 8008fbe:	4945      	ldr	r1, [pc, #276]	@ (80090d4 <config_motors+0x654>)
 8008fc0:	4613      	mov	r3, r2
 8008fc2:	011b      	lsls	r3, r3, #4
 8008fc4:	1a9b      	subs	r3, r3, r2
 8008fc6:	011b      	lsls	r3, r3, #4
 8008fc8:	440b      	add	r3, r1
 8008fca:	33d4      	adds	r3, #212	@ 0xd4
 8008fcc:	4a42      	ldr	r2, [pc, #264]	@ (80090d8 <config_motors+0x658>)
 8008fce:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 8008fd0:	79ba      	ldrb	r2, [r7, #6]
 8008fd2:	4940      	ldr	r1, [pc, #256]	@ (80090d4 <config_motors+0x654>)
 8008fd4:	4613      	mov	r3, r2
 8008fd6:	011b      	lsls	r3, r3, #4
 8008fd8:	1a9b      	subs	r3, r3, r2
 8008fda:	011b      	lsls	r3, r3, #4
 8008fdc:	440b      	add	r3, r1
 8008fde:	3368      	adds	r3, #104	@ 0x68
 8008fe0:	f04f 0200 	mov.w	r2, #0
 8008fe4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 8008fe6:	79ba      	ldrb	r2, [r7, #6]
 8008fe8:	493a      	ldr	r1, [pc, #232]	@ (80090d4 <config_motors+0x654>)
 8008fea:	4613      	mov	r3, r2
 8008fec:	011b      	lsls	r3, r3, #4
 8008fee:	1a9b      	subs	r3, r3, r2
 8008ff0:	011b      	lsls	r3, r3, #4
 8008ff2:	440b      	add	r3, r1
 8008ff4:	336c      	adds	r3, #108	@ 0x6c
 8008ff6:	f04f 0200 	mov.w	r2, #0
 8008ffa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 8008ffc:	79ba      	ldrb	r2, [r7, #6]
 8008ffe:	4935      	ldr	r1, [pc, #212]	@ (80090d4 <config_motors+0x654>)
 8009000:	4613      	mov	r3, r2
 8009002:	011b      	lsls	r3, r3, #4
 8009004:	1a9b      	subs	r3, r3, r2
 8009006:	011b      	lsls	r3, r3, #4
 8009008:	440b      	add	r3, r1
 800900a:	3370      	adds	r3, #112	@ 0x70
 800900c:	f04f 0200 	mov.w	r2, #0
 8009010:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 8009012:	79ba      	ldrb	r2, [r7, #6]
 8009014:	492f      	ldr	r1, [pc, #188]	@ (80090d4 <config_motors+0x654>)
 8009016:	4613      	mov	r3, r2
 8009018:	011b      	lsls	r3, r3, #4
 800901a:	1a9b      	subs	r3, r3, r2
 800901c:	011b      	lsls	r3, r3, #4
 800901e:	440b      	add	r3, r1
 8009020:	3380      	adds	r3, #128	@ 0x80
 8009022:	f04f 0200 	mov.w	r2, #0
 8009026:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 8009028:	79ba      	ldrb	r2, [r7, #6]
 800902a:	492a      	ldr	r1, [pc, #168]	@ (80090d4 <config_motors+0x654>)
 800902c:	4613      	mov	r3, r2
 800902e:	011b      	lsls	r3, r3, #4
 8009030:	1a9b      	subs	r3, r3, r2
 8009032:	011b      	lsls	r3, r3, #4
 8009034:	440b      	add	r3, r1
 8009036:	3384      	adds	r3, #132	@ 0x84
 8009038:	f04f 0200 	mov.w	r2, #0
 800903c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800903e:	79ba      	ldrb	r2, [r7, #6]
 8009040:	4924      	ldr	r1, [pc, #144]	@ (80090d4 <config_motors+0x654>)
 8009042:	4613      	mov	r3, r2
 8009044:	011b      	lsls	r3, r3, #4
 8009046:	1a9b      	subs	r3, r3, r2
 8009048:	011b      	lsls	r3, r3, #4
 800904a:	440b      	add	r3, r1
 800904c:	3338      	adds	r3, #56	@ 0x38
 800904e:	f04f 0200 	mov.w	r2, #0
 8009052:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 8009054:	79ba      	ldrb	r2, [r7, #6]
 8009056:	491f      	ldr	r1, [pc, #124]	@ (80090d4 <config_motors+0x654>)
 8009058:	4613      	mov	r3, r2
 800905a:	011b      	lsls	r3, r3, #4
 800905c:	1a9b      	subs	r3, r3, r2
 800905e:	011b      	lsls	r3, r3, #4
 8009060:	440b      	add	r3, r1
 8009062:	333c      	adds	r3, #60	@ 0x3c
 8009064:	f04f 0200 	mov.w	r2, #0
 8009068:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800906a:	79ba      	ldrb	r2, [r7, #6]
 800906c:	4919      	ldr	r1, [pc, #100]	@ (80090d4 <config_motors+0x654>)
 800906e:	4613      	mov	r3, r2
 8009070:	011b      	lsls	r3, r3, #4
 8009072:	1a9b      	subs	r3, r3, r2
 8009074:	011b      	lsls	r3, r3, #4
 8009076:	440b      	add	r3, r1
 8009078:	3340      	adds	r3, #64	@ 0x40
 800907a:	f04f 0200 	mov.w	r2, #0
 800907e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8009080:	79ba      	ldrb	r2, [r7, #6]
 8009082:	4914      	ldr	r1, [pc, #80]	@ (80090d4 <config_motors+0x654>)
 8009084:	4613      	mov	r3, r2
 8009086:	011b      	lsls	r3, r3, #4
 8009088:	1a9b      	subs	r3, r3, r2
 800908a:	011b      	lsls	r3, r3, #4
 800908c:	440b      	add	r3, r1
 800908e:	3350      	adds	r3, #80	@ 0x50
 8009090:	f04f 0200 	mov.w	r2, #0
 8009094:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 8009096:	79ba      	ldrb	r2, [r7, #6]
 8009098:	490e      	ldr	r1, [pc, #56]	@ (80090d4 <config_motors+0x654>)
 800909a:	4613      	mov	r3, r2
 800909c:	011b      	lsls	r3, r3, #4
 800909e:	1a9b      	subs	r3, r3, r2
 80090a0:	011b      	lsls	r3, r3, #4
 80090a2:	440b      	add	r3, r1
 80090a4:	3354      	adds	r3, #84	@ 0x54
 80090a6:	f04f 0200 	mov.w	r2, #0
 80090aa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 80090ac:	79ba      	ldrb	r2, [r7, #6]
 80090ae:	4909      	ldr	r1, [pc, #36]	@ (80090d4 <config_motors+0x654>)
 80090b0:	4613      	mov	r3, r2
 80090b2:	011b      	lsls	r3, r3, #4
 80090b4:	1a9b      	subs	r3, r3, r2
 80090b6:	011b      	lsls	r3, r3, #4
 80090b8:	440b      	add	r3, r1
 80090ba:	3330      	adds	r3, #48	@ 0x30
 80090bc:	4a07      	ldr	r2, [pc, #28]	@ (80090dc <config_motors+0x65c>)
 80090be:	601a      	str	r2, [r3, #0]
#endif

#ifdef BR_MOTOR_ID

	motor_id = BR_MOTOR_ID - 1;
 80090c0:	2307      	movs	r3, #7
 80090c2:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 80090c4:	79ba      	ldrb	r2, [r7, #6]
 80090c6:	4903      	ldr	r1, [pc, #12]	@ (80090d4 <config_motors+0x654>)
 80090c8:	4613      	mov	r3, r2
 80090ca:	011b      	lsls	r3, r3, #4
 80090cc:	1a9b      	subs	r3, r3, r2
 80090ce:	011b      	lsls	r3, r3, #4
 80090d0:	e00e      	b.n	80090f0 <config_motors+0x670>
 80090d2:	bf00      	nop
 80090d4:	20001e48 	.word	0x20001e48
 80090d8:	43eec2d1 	.word	0x43eec2d1
 80090dc:	447a0000 	.word	0x447a0000
 80090e0:	40c90fdb 	.word	0x40c90fdb
 80090e4:	c0c90fdb 	.word	0xc0c90fdb
 80090e8:	403de354 	.word	0x403de354
 80090ec:	3fc90fdb 	.word	0x3fc90fdb
 80090f0:	440b      	add	r3, r1
 80090f2:	3302      	adds	r3, #2
 80090f4:	2201      	movs	r2, #1
 80090f6:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 80090f8:	79ba      	ldrb	r2, [r7, #6]
 80090fa:	4613      	mov	r3, r2
 80090fc:	011b      	lsls	r3, r3, #4
 80090fe:	1a9b      	subs	r3, r3, r2
 8009100:	011b      	lsls	r3, r3, #4
 8009102:	4ac3      	ldr	r2, [pc, #780]	@ (8009410 <config_motors+0x990>)
 8009104:	4413      	add	r3, r2
 8009106:	4618      	mov	r0, r3
 8009108:	f7ff fb72 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = BR_MOTOR_CENTER;
 800910c:	79ba      	ldrb	r2, [r7, #6]
 800910e:	49c0      	ldr	r1, [pc, #768]	@ (8009410 <config_motors+0x990>)
 8009110:	4613      	mov	r3, r2
 8009112:	011b      	lsls	r3, r3, #4
 8009114:	1a9b      	subs	r3, r3, r2
 8009116:	011b      	lsls	r3, r3, #4
 8009118:	440b      	add	r3, r1
 800911a:	339c      	adds	r3, #156	@ 0x9c
 800911c:	f641 42de 	movw	r2, #7390	@ 0x1cde
 8009120:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 1.396;//80deg
 8009122:	79ba      	ldrb	r2, [r7, #6]
 8009124:	49ba      	ldr	r1, [pc, #744]	@ (8009410 <config_motors+0x990>)
 8009126:	4613      	mov	r3, r2
 8009128:	011b      	lsls	r3, r3, #4
 800912a:	1a9b      	subs	r3, r3, r2
 800912c:	011b      	lsls	r3, r3, #4
 800912e:	440b      	add	r3, r1
 8009130:	33b8      	adds	r3, #184	@ 0xb8
 8009132:	4ab8      	ldr	r2, [pc, #736]	@ (8009414 <config_motors+0x994>)
 8009134:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = 0;
 8009136:	79ba      	ldrb	r2, [r7, #6]
 8009138:	49b5      	ldr	r1, [pc, #724]	@ (8009410 <config_motors+0x990>)
 800913a:	4613      	mov	r3, r2
 800913c:	011b      	lsls	r3, r3, #4
 800913e:	1a9b      	subs	r3, r3, r2
 8009140:	011b      	lsls	r3, r3, #4
 8009142:	440b      	add	r3, r1
 8009144:	33b4      	adds	r3, #180	@ 0xb4
 8009146:	f04f 0200 	mov.w	r2, #0
 800914a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800914c:	79ba      	ldrb	r2, [r7, #6]
 800914e:	49b0      	ldr	r1, [pc, #704]	@ (8009410 <config_motors+0x990>)
 8009150:	4613      	mov	r3, r2
 8009152:	011b      	lsls	r3, r3, #4
 8009154:	1a9b      	subs	r3, r3, r2
 8009156:	011b      	lsls	r3, r3, #4
 8009158:	440b      	add	r3, r1
 800915a:	33c4      	adds	r3, #196	@ 0xc4
 800915c:	4aae      	ldr	r2, [pc, #696]	@ (8009418 <config_motors+0x998>)
 800915e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 8009160:	79ba      	ldrb	r2, [r7, #6]
 8009162:	49ab      	ldr	r1, [pc, #684]	@ (8009410 <config_motors+0x990>)
 8009164:	4613      	mov	r3, r2
 8009166:	011b      	lsls	r3, r3, #4
 8009168:	1a9b      	subs	r3, r3, r2
 800916a:	011b      	lsls	r3, r3, #4
 800916c:	440b      	add	r3, r1
 800916e:	33c0      	adds	r3, #192	@ 0xc0
 8009170:	4aaa      	ldr	r2, [pc, #680]	@ (800941c <config_motors+0x99c>)
 8009172:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 8009174:	79ba      	ldrb	r2, [r7, #6]
 8009176:	49a6      	ldr	r1, [pc, #664]	@ (8009410 <config_motors+0x990>)
 8009178:	4613      	mov	r3, r2
 800917a:	011b      	lsls	r3, r3, #4
 800917c:	1a9b      	subs	r3, r3, r2
 800917e:	011b      	lsls	r3, r3, #4
 8009180:	440b      	add	r3, r1
 8009182:	33d4      	adds	r3, #212	@ 0xd4
 8009184:	4aa6      	ldr	r2, [pc, #664]	@ (8009420 <config_motors+0x9a0>)
 8009186:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 8009188:	79ba      	ldrb	r2, [r7, #6]
 800918a:	49a1      	ldr	r1, [pc, #644]	@ (8009410 <config_motors+0x990>)
 800918c:	4613      	mov	r3, r2
 800918e:	011b      	lsls	r3, r3, #4
 8009190:	1a9b      	subs	r3, r3, r2
 8009192:	011b      	lsls	r3, r3, #4
 8009194:	440b      	add	r3, r1
 8009196:	3368      	adds	r3, #104	@ 0x68
 8009198:	f04f 0200 	mov.w	r2, #0
 800919c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 800919e:	79ba      	ldrb	r2, [r7, #6]
 80091a0:	499b      	ldr	r1, [pc, #620]	@ (8009410 <config_motors+0x990>)
 80091a2:	4613      	mov	r3, r2
 80091a4:	011b      	lsls	r3, r3, #4
 80091a6:	1a9b      	subs	r3, r3, r2
 80091a8:	011b      	lsls	r3, r3, #4
 80091aa:	440b      	add	r3, r1
 80091ac:	336c      	adds	r3, #108	@ 0x6c
 80091ae:	f04f 0200 	mov.w	r2, #0
 80091b2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 80091b4:	79ba      	ldrb	r2, [r7, #6]
 80091b6:	4996      	ldr	r1, [pc, #600]	@ (8009410 <config_motors+0x990>)
 80091b8:	4613      	mov	r3, r2
 80091ba:	011b      	lsls	r3, r3, #4
 80091bc:	1a9b      	subs	r3, r3, r2
 80091be:	011b      	lsls	r3, r3, #4
 80091c0:	440b      	add	r3, r1
 80091c2:	3370      	adds	r3, #112	@ 0x70
 80091c4:	f04f 0200 	mov.w	r2, #0
 80091c8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 80091ca:	79ba      	ldrb	r2, [r7, #6]
 80091cc:	4990      	ldr	r1, [pc, #576]	@ (8009410 <config_motors+0x990>)
 80091ce:	4613      	mov	r3, r2
 80091d0:	011b      	lsls	r3, r3, #4
 80091d2:	1a9b      	subs	r3, r3, r2
 80091d4:	011b      	lsls	r3, r3, #4
 80091d6:	440b      	add	r3, r1
 80091d8:	3380      	adds	r3, #128	@ 0x80
 80091da:	f04f 0200 	mov.w	r2, #0
 80091de:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 80091e0:	79ba      	ldrb	r2, [r7, #6]
 80091e2:	498b      	ldr	r1, [pc, #556]	@ (8009410 <config_motors+0x990>)
 80091e4:	4613      	mov	r3, r2
 80091e6:	011b      	lsls	r3, r3, #4
 80091e8:	1a9b      	subs	r3, r3, r2
 80091ea:	011b      	lsls	r3, r3, #4
 80091ec:	440b      	add	r3, r1
 80091ee:	3384      	adds	r3, #132	@ 0x84
 80091f0:	f04f 0200 	mov.w	r2, #0
 80091f4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 80091f6:	79ba      	ldrb	r2, [r7, #6]
 80091f8:	4985      	ldr	r1, [pc, #532]	@ (8009410 <config_motors+0x990>)
 80091fa:	4613      	mov	r3, r2
 80091fc:	011b      	lsls	r3, r3, #4
 80091fe:	1a9b      	subs	r3, r3, r2
 8009200:	011b      	lsls	r3, r3, #4
 8009202:	440b      	add	r3, r1
 8009204:	3338      	adds	r3, #56	@ 0x38
 8009206:	f04f 0200 	mov.w	r2, #0
 800920a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800920c:	79ba      	ldrb	r2, [r7, #6]
 800920e:	4980      	ldr	r1, [pc, #512]	@ (8009410 <config_motors+0x990>)
 8009210:	4613      	mov	r3, r2
 8009212:	011b      	lsls	r3, r3, #4
 8009214:	1a9b      	subs	r3, r3, r2
 8009216:	011b      	lsls	r3, r3, #4
 8009218:	440b      	add	r3, r1
 800921a:	333c      	adds	r3, #60	@ 0x3c
 800921c:	f04f 0200 	mov.w	r2, #0
 8009220:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 8009222:	79ba      	ldrb	r2, [r7, #6]
 8009224:	497a      	ldr	r1, [pc, #488]	@ (8009410 <config_motors+0x990>)
 8009226:	4613      	mov	r3, r2
 8009228:	011b      	lsls	r3, r3, #4
 800922a:	1a9b      	subs	r3, r3, r2
 800922c:	011b      	lsls	r3, r3, #4
 800922e:	440b      	add	r3, r1
 8009230:	3340      	adds	r3, #64	@ 0x40
 8009232:	f04f 0200 	mov.w	r2, #0
 8009236:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 8009238:	79ba      	ldrb	r2, [r7, #6]
 800923a:	4975      	ldr	r1, [pc, #468]	@ (8009410 <config_motors+0x990>)
 800923c:	4613      	mov	r3, r2
 800923e:	011b      	lsls	r3, r3, #4
 8009240:	1a9b      	subs	r3, r3, r2
 8009242:	011b      	lsls	r3, r3, #4
 8009244:	440b      	add	r3, r1
 8009246:	3350      	adds	r3, #80	@ 0x50
 8009248:	f04f 0200 	mov.w	r2, #0
 800924c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800924e:	79ba      	ldrb	r2, [r7, #6]
 8009250:	496f      	ldr	r1, [pc, #444]	@ (8009410 <config_motors+0x990>)
 8009252:	4613      	mov	r3, r2
 8009254:	011b      	lsls	r3, r3, #4
 8009256:	1a9b      	subs	r3, r3, r2
 8009258:	011b      	lsls	r3, r3, #4
 800925a:	440b      	add	r3, r1
 800925c:	3354      	adds	r3, #84	@ 0x54
 800925e:	f04f 0200 	mov.w	r2, #0
 8009262:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 8009264:	79ba      	ldrb	r2, [r7, #6]
 8009266:	496a      	ldr	r1, [pc, #424]	@ (8009410 <config_motors+0x990>)
 8009268:	4613      	mov	r3, r2
 800926a:	011b      	lsls	r3, r3, #4
 800926c:	1a9b      	subs	r3, r3, r2
 800926e:	011b      	lsls	r3, r3, #4
 8009270:	440b      	add	r3, r1
 8009272:	3330      	adds	r3, #48	@ 0x30
 8009274:	4a6b      	ldr	r2, [pc, #428]	@ (8009424 <config_motors+0x9a4>)
 8009276:	601a      	str	r2, [r3, #0]
#endif

#ifdef LFRICTION_MOTOR_ID
	motor_id = LFRICTION_MOTOR_ID - 1;
 8009278:	230f      	movs	r3, #15
 800927a:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800927c:	79ba      	ldrb	r2, [r7, #6]
 800927e:	4964      	ldr	r1, [pc, #400]	@ (8009410 <config_motors+0x990>)
 8009280:	4613      	mov	r3, r2
 8009282:	011b      	lsls	r3, r3, #4
 8009284:	1a9b      	subs	r3, r3, r2
 8009286:	011b      	lsls	r3, r3, #4
 8009288:	440b      	add	r3, r1
 800928a:	3302      	adds	r3, #2
 800928c:	2204      	movs	r2, #4
 800928e:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 8009290:	79ba      	ldrb	r2, [r7, #6]
 8009292:	4613      	mov	r3, r2
 8009294:	011b      	lsls	r3, r3, #4
 8009296:	1a9b      	subs	r3, r3, r2
 8009298:	011b      	lsls	r3, r3, #4
 800929a:	4a5d      	ldr	r2, [pc, #372]	@ (8009410 <config_motors+0x990>)
 800929c:	4413      	add	r3, r2
 800929e:	4618      	mov	r0, r3
 80092a0:	f7ff faa6 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 80092a4:	79ba      	ldrb	r2, [r7, #6]
 80092a6:	495a      	ldr	r1, [pc, #360]	@ (8009410 <config_motors+0x990>)
 80092a8:	4613      	mov	r3, r2
 80092aa:	011b      	lsls	r3, r3, #4
 80092ac:	1a9b      	subs	r3, r3, r2
 80092ae:	011b      	lsls	r3, r3, #4
 80092b0:	440b      	add	r3, r1
 80092b2:	33c8      	adds	r3, #200	@ 0xc8
 80092b4:	4a5c      	ldr	r2, [pc, #368]	@ (8009428 <config_motors+0x9a8>)
 80092b6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 80092b8:	79ba      	ldrb	r2, [r7, #6]
 80092ba:	4955      	ldr	r1, [pc, #340]	@ (8009410 <config_motors+0x990>)
 80092bc:	4613      	mov	r3, r2
 80092be:	011b      	lsls	r3, r3, #4
 80092c0:	1a9b      	subs	r3, r3, r2
 80092c2:	011b      	lsls	r3, r3, #4
 80092c4:	440b      	add	r3, r1
 80092c6:	338c      	adds	r3, #140	@ 0x8c
 80092c8:	4a58      	ldr	r2, [pc, #352]	@ (800942c <config_motors+0x9ac>)
 80092ca:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 80092cc:	79ba      	ldrb	r2, [r7, #6]
 80092ce:	4950      	ldr	r1, [pc, #320]	@ (8009410 <config_motors+0x990>)
 80092d0:	4613      	mov	r3, r2
 80092d2:	011b      	lsls	r3, r3, #4
 80092d4:	1a9b      	subs	r3, r3, r2
 80092d6:	011b      	lsls	r3, r3, #4
 80092d8:	440b      	add	r3, r1
 80092da:	3338      	adds	r3, #56	@ 0x38
 80092dc:	4a54      	ldr	r2, [pc, #336]	@ (8009430 <config_motors+0x9b0>)
 80092de:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 80092e0:	79ba      	ldrb	r2, [r7, #6]
 80092e2:	494b      	ldr	r1, [pc, #300]	@ (8009410 <config_motors+0x990>)
 80092e4:	4613      	mov	r3, r2
 80092e6:	011b      	lsls	r3, r3, #4
 80092e8:	1a9b      	subs	r3, r3, r2
 80092ea:	011b      	lsls	r3, r3, #4
 80092ec:	440b      	add	r3, r1
 80092ee:	333c      	adds	r3, #60	@ 0x3c
 80092f0:	4a50      	ldr	r2, [pc, #320]	@ (8009434 <config_motors+0x9b4>)
 80092f2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 80092f4:	79ba      	ldrb	r2, [r7, #6]
 80092f6:	4946      	ldr	r1, [pc, #280]	@ (8009410 <config_motors+0x990>)
 80092f8:	4613      	mov	r3, r2
 80092fa:	011b      	lsls	r3, r3, #4
 80092fc:	1a9b      	subs	r3, r3, r2
 80092fe:	011b      	lsls	r3, r3, #4
 8009300:	440b      	add	r3, r1
 8009302:	3340      	adds	r3, #64	@ 0x40
 8009304:	f04f 0200 	mov.w	r2, #0
 8009308:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800930a:	79ba      	ldrb	r2, [r7, #6]
 800930c:	4940      	ldr	r1, [pc, #256]	@ (8009410 <config_motors+0x990>)
 800930e:	4613      	mov	r3, r2
 8009310:	011b      	lsls	r3, r3, #4
 8009312:	1a9b      	subs	r3, r3, r2
 8009314:	011b      	lsls	r3, r3, #4
 8009316:	440b      	add	r3, r1
 8009318:	3350      	adds	r3, #80	@ 0x50
 800931a:	4a47      	ldr	r2, [pc, #284]	@ (8009438 <config_motors+0x9b8>)
 800931c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800931e:	79ba      	ldrb	r2, [r7, #6]
 8009320:	493b      	ldr	r1, [pc, #236]	@ (8009410 <config_motors+0x990>)
 8009322:	4613      	mov	r3, r2
 8009324:	011b      	lsls	r3, r3, #4
 8009326:	1a9b      	subs	r3, r3, r2
 8009328:	011b      	lsls	r3, r3, #4
 800932a:	440b      	add	r3, r1
 800932c:	3354      	adds	r3, #84	@ 0x54
 800932e:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 8009332:	601a      	str	r2, [r3, #0]
#endif

#ifdef RFRICTION_MOTOR_ID
	motor_id = RFRICTION_MOTOR_ID - 1;
 8009334:	230e      	movs	r3, #14
 8009336:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 8009338:	79ba      	ldrb	r2, [r7, #6]
 800933a:	4935      	ldr	r1, [pc, #212]	@ (8009410 <config_motors+0x990>)
 800933c:	4613      	mov	r3, r2
 800933e:	011b      	lsls	r3, r3, #4
 8009340:	1a9b      	subs	r3, r3, r2
 8009342:	011b      	lsls	r3, r3, #4
 8009344:	440b      	add	r3, r1
 8009346:	3302      	adds	r3, #2
 8009348:	2204      	movs	r2, #4
 800934a:	701a      	strb	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800934c:	79ba      	ldrb	r2, [r7, #6]
 800934e:	4930      	ldr	r1, [pc, #192]	@ (8009410 <config_motors+0x990>)
 8009350:	4613      	mov	r3, r2
 8009352:	011b      	lsls	r3, r3, #4
 8009354:	1a9b      	subs	r3, r3, r2
 8009356:	011b      	lsls	r3, r3, #4
 8009358:	440b      	add	r3, r1
 800935a:	338c      	adds	r3, #140	@ 0x8c
 800935c:	4a33      	ldr	r2, [pc, #204]	@ (800942c <config_motors+0x9ac>)
 800935e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 8009360:	79ba      	ldrb	r2, [r7, #6]
 8009362:	492b      	ldr	r1, [pc, #172]	@ (8009410 <config_motors+0x990>)
 8009364:	4613      	mov	r3, r2
 8009366:	011b      	lsls	r3, r3, #4
 8009368:	1a9b      	subs	r3, r3, r2
 800936a:	011b      	lsls	r3, r3, #4
 800936c:	440b      	add	r3, r1
 800936e:	3338      	adds	r3, #56	@ 0x38
 8009370:	4a2f      	ldr	r2, [pc, #188]	@ (8009430 <config_motors+0x9b0>)
 8009372:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 8009374:	79ba      	ldrb	r2, [r7, #6]
 8009376:	4926      	ldr	r1, [pc, #152]	@ (8009410 <config_motors+0x990>)
 8009378:	4613      	mov	r3, r2
 800937a:	011b      	lsls	r3, r3, #4
 800937c:	1a9b      	subs	r3, r3, r2
 800937e:	011b      	lsls	r3, r3, #4
 8009380:	440b      	add	r3, r1
 8009382:	333c      	adds	r3, #60	@ 0x3c
 8009384:	4a2b      	ldr	r2, [pc, #172]	@ (8009434 <config_motors+0x9b4>)
 8009386:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 8009388:	79ba      	ldrb	r2, [r7, #6]
 800938a:	4921      	ldr	r1, [pc, #132]	@ (8009410 <config_motors+0x990>)
 800938c:	4613      	mov	r3, r2
 800938e:	011b      	lsls	r3, r3, #4
 8009390:	1a9b      	subs	r3, r3, r2
 8009392:	011b      	lsls	r3, r3, #4
 8009394:	440b      	add	r3, r1
 8009396:	3340      	adds	r3, #64	@ 0x40
 8009398:	f04f 0200 	mov.w	r2, #0
 800939c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800939e:	79ba      	ldrb	r2, [r7, #6]
 80093a0:	491b      	ldr	r1, [pc, #108]	@ (8009410 <config_motors+0x990>)
 80093a2:	4613      	mov	r3, r2
 80093a4:	011b      	lsls	r3, r3, #4
 80093a6:	1a9b      	subs	r3, r3, r2
 80093a8:	011b      	lsls	r3, r3, #4
 80093aa:	440b      	add	r3, r1
 80093ac:	3350      	adds	r3, #80	@ 0x50
 80093ae:	4a22      	ldr	r2, [pc, #136]	@ (8009438 <config_motors+0x9b8>)
 80093b0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 80093b2:	79ba      	ldrb	r2, [r7, #6]
 80093b4:	4916      	ldr	r1, [pc, #88]	@ (8009410 <config_motors+0x990>)
 80093b6:	4613      	mov	r3, r2
 80093b8:	011b      	lsls	r3, r3, #4
 80093ba:	1a9b      	subs	r3, r3, r2
 80093bc:	011b      	lsls	r3, r3, #4
 80093be:	440b      	add	r3, r1
 80093c0:	3354      	adds	r3, #84	@ 0x54
 80093c2:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80093c6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.physical_max = M3508_MAX_OUTPUT;
 80093c8:	79ba      	ldrb	r2, [r7, #6]
 80093ca:	4911      	ldr	r1, [pc, #68]	@ (8009410 <config_motors+0x990>)
 80093cc:	4613      	mov	r3, r2
 80093ce:	011b      	lsls	r3, r3, #4
 80093d0:	1a9b      	subs	r3, r3, r2
 80093d2:	011b      	lsls	r3, r3, #4
 80093d4:	440b      	add	r3, r1
 80093d6:	335c      	adds	r3, #92	@ 0x5c
 80093d8:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 80093dc:	601a      	str	r2, [r3, #0]
#endif

#ifdef FEEDER_MOTOR_ID
	motor_id = FEEDER_MOTOR_ID - 1;
 80093de:	2310      	movs	r3, #16
 80093e0:	71bb      	strb	r3, [r7, #6]
#ifdef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M3508_ANGLE;
#endif
#ifndef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M2006;
 80093e2:	79ba      	ldrb	r2, [r7, #6]
 80093e4:	490a      	ldr	r1, [pc, #40]	@ (8009410 <config_motors+0x990>)
 80093e6:	4613      	mov	r3, r2
 80093e8:	011b      	lsls	r3, r3, #4
 80093ea:	1a9b      	subs	r3, r3, r2
 80093ec:	011b      	lsls	r3, r3, #4
 80093ee:	440b      	add	r3, r1
 80093f0:	3302      	adds	r3, #2
 80093f2:	2202      	movs	r2, #2
 80093f4:	701a      	strb	r2, [r3, #0]
#endif
	set_motor_config(&g_can_motors[motor_id]);
 80093f6:	79ba      	ldrb	r2, [r7, #6]
 80093f8:	4613      	mov	r3, r2
 80093fa:	011b      	lsls	r3, r3, #4
 80093fc:	1a9b      	subs	r3, r3, r2
 80093fe:	011b      	lsls	r3, r3, #4
 8009400:	4a03      	ldr	r2, [pc, #12]	@ (8009410 <config_motors+0x990>)
 8009402:	4413      	add	r3, r2
 8009404:	4618      	mov	r0, r3
 8009406:	f7ff f9f3 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.phy_max_ang = PI;
 800940a:	79ba      	ldrb	r2, [r7, #6]
 800940c:	e016      	b.n	800943c <config_motors+0x9bc>
 800940e:	bf00      	nop
 8009410:	20001e48 	.word	0x20001e48
 8009414:	3fb2b021 	.word	0x3fb2b021
 8009418:	40c90fdb 	.word	0x40c90fdb
 800941c:	c0c90fdb 	.word	0xc0c90fdb
 8009420:	43eec2d1 	.word	0x43eec2d1
 8009424:	447a0000 	.word	0x447a0000
 8009428:	4199999a 	.word	0x4199999a
 800942c:	460fc000 	.word	0x460fc000
 8009430:	40a00000 	.word	0x40a00000
 8009434:	3b03126f 	.word	0x3b03126f
 8009438:	461c4000 	.word	0x461c4000
 800943c:	49c0      	ldr	r1, [pc, #768]	@ (8009740 <config_motors+0xcc0>)
 800943e:	4613      	mov	r3, r2
 8009440:	011b      	lsls	r3, r3, #4
 8009442:	1a9b      	subs	r3, r3, r2
 8009444:	011b      	lsls	r3, r3, #4
 8009446:	440b      	add	r3, r1
 8009448:	33c4      	adds	r3, #196	@ 0xc4
 800944a:	4abe      	ldr	r2, [pc, #760]	@ (8009744 <config_motors+0xcc4>)
 800944c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -PI;
 800944e:	79ba      	ldrb	r2, [r7, #6]
 8009450:	49bb      	ldr	r1, [pc, #748]	@ (8009740 <config_motors+0xcc0>)
 8009452:	4613      	mov	r3, r2
 8009454:	011b      	lsls	r3, r3, #4
 8009456:	1a9b      	subs	r3, r3, r2
 8009458:	011b      	lsls	r3, r3, #4
 800945a:	440b      	add	r3, r1
 800945c:	33c0      	adds	r3, #192	@ 0xc0
 800945e:	4aba      	ldr	r2, [pc, #744]	@ (8009748 <config_motors+0xcc8>)
 8009460:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 8009462:	79ba      	ldrb	r2, [r7, #6]
 8009464:	49b6      	ldr	r1, [pc, #728]	@ (8009740 <config_motors+0xcc0>)
 8009466:	4613      	mov	r3, r2
 8009468:	011b      	lsls	r3, r3, #4
 800946a:	1a9b      	subs	r3, r3, r2
 800946c:	011b      	lsls	r3, r3, #4
 800946e:	440b      	add	r3, r1
 8009470:	33d4      	adds	r3, #212	@ 0xd4
 8009472:	f04f 0200 	mov.w	r2, #0
 8009476:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = FEEDER_ANGLE_KP;
 8009478:	79ba      	ldrb	r2, [r7, #6]
 800947a:	49b1      	ldr	r1, [pc, #708]	@ (8009740 <config_motors+0xcc0>)
 800947c:	4613      	mov	r3, r2
 800947e:	011b      	lsls	r3, r3, #4
 8009480:	1a9b      	subs	r3, r3, r2
 8009482:	011b      	lsls	r3, r3, #4
 8009484:	440b      	add	r3, r1
 8009486:	3368      	adds	r3, #104	@ 0x68
 8009488:	4ab0      	ldr	r2, [pc, #704]	@ (800974c <config_motors+0xccc>)
 800948a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = FEEDER_ANGLE_KI;
 800948c:	79ba      	ldrb	r2, [r7, #6]
 800948e:	49ac      	ldr	r1, [pc, #688]	@ (8009740 <config_motors+0xcc0>)
 8009490:	4613      	mov	r3, r2
 8009492:	011b      	lsls	r3, r3, #4
 8009494:	1a9b      	subs	r3, r3, r2
 8009496:	011b      	lsls	r3, r3, #4
 8009498:	440b      	add	r3, r1
 800949a:	336c      	adds	r3, #108	@ 0x6c
 800949c:	f04f 0200 	mov.w	r2, #0
 80094a0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = FEEDER_ANGLE_KD;
 80094a2:	79ba      	ldrb	r2, [r7, #6]
 80094a4:	49a6      	ldr	r1, [pc, #664]	@ (8009740 <config_motors+0xcc0>)
 80094a6:	4613      	mov	r3, r2
 80094a8:	011b      	lsls	r3, r3, #4
 80094aa:	1a9b      	subs	r3, r3, r2
 80094ac:	011b      	lsls	r3, r3, #4
 80094ae:	440b      	add	r3, r1
 80094b0:	3370      	adds	r3, #112	@ 0x70
 80094b2:	f04f 0200 	mov.w	r2, #0
 80094b6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = FEEDER_ANGLE_INT_MAX;
 80094b8:	79ba      	ldrb	r2, [r7, #6]
 80094ba:	49a1      	ldr	r1, [pc, #644]	@ (8009740 <config_motors+0xcc0>)
 80094bc:	4613      	mov	r3, r2
 80094be:	011b      	lsls	r3, r3, #4
 80094c0:	1a9b      	subs	r3, r3, r2
 80094c2:	011b      	lsls	r3, r3, #4
 80094c4:	440b      	add	r3, r1
 80094c6:	3380      	adds	r3, #128	@ 0x80
 80094c8:	f04f 0200 	mov.w	r2, #0
 80094cc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = FEEDER_MAX_RPM;
 80094ce:	79ba      	ldrb	r2, [r7, #6]
 80094d0:	499b      	ldr	r1, [pc, #620]	@ (8009740 <config_motors+0xcc0>)
 80094d2:	4613      	mov	r3, r2
 80094d4:	011b      	lsls	r3, r3, #4
 80094d6:	1a9b      	subs	r3, r3, r2
 80094d8:	011b      	lsls	r3, r3, #4
 80094da:	440b      	add	r3, r1
 80094dc:	3384      	adds	r3, #132	@ 0x84
 80094de:	4a9c      	ldr	r2, [pc, #624]	@ (8009750 <config_motors+0xcd0>)
 80094e0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FEEDER_KP;
 80094e2:	79ba      	ldrb	r2, [r7, #6]
 80094e4:	4996      	ldr	r1, [pc, #600]	@ (8009740 <config_motors+0xcc0>)
 80094e6:	4613      	mov	r3, r2
 80094e8:	011b      	lsls	r3, r3, #4
 80094ea:	1a9b      	subs	r3, r3, r2
 80094ec:	011b      	lsls	r3, r3, #4
 80094ee:	440b      	add	r3, r1
 80094f0:	3338      	adds	r3, #56	@ 0x38
 80094f2:	4a98      	ldr	r2, [pc, #608]	@ (8009754 <config_motors+0xcd4>)
 80094f4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FEEDER_KI;
 80094f6:	79ba      	ldrb	r2, [r7, #6]
 80094f8:	4991      	ldr	r1, [pc, #580]	@ (8009740 <config_motors+0xcc0>)
 80094fa:	4613      	mov	r3, r2
 80094fc:	011b      	lsls	r3, r3, #4
 80094fe:	1a9b      	subs	r3, r3, r2
 8009500:	011b      	lsls	r3, r3, #4
 8009502:	440b      	add	r3, r1
 8009504:	333c      	adds	r3, #60	@ 0x3c
 8009506:	4a94      	ldr	r2, [pc, #592]	@ (8009758 <config_motors+0xcd8>)
 8009508:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FEEDER_KD;
 800950a:	79ba      	ldrb	r2, [r7, #6]
 800950c:	498c      	ldr	r1, [pc, #560]	@ (8009740 <config_motors+0xcc0>)
 800950e:	4613      	mov	r3, r2
 8009510:	011b      	lsls	r3, r3, #4
 8009512:	1a9b      	subs	r3, r3, r2
 8009514:	011b      	lsls	r3, r3, #4
 8009516:	440b      	add	r3, r1
 8009518:	3340      	adds	r3, #64	@ 0x40
 800951a:	4a90      	ldr	r2, [pc, #576]	@ (800975c <config_motors+0xcdc>)
 800951c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FEEDER_MAX_INT;
 800951e:	79ba      	ldrb	r2, [r7, #6]
 8009520:	4987      	ldr	r1, [pc, #540]	@ (8009740 <config_motors+0xcc0>)
 8009522:	4613      	mov	r3, r2
 8009524:	011b      	lsls	r3, r3, #4
 8009526:	1a9b      	subs	r3, r3, r2
 8009528:	011b      	lsls	r3, r3, #4
 800952a:	440b      	add	r3, r1
 800952c:	3350      	adds	r3, #80	@ 0x50
 800952e:	4a8c      	ldr	r2, [pc, #560]	@ (8009760 <config_motors+0xce0>)
 8009530:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FEEDER_MAX_CURRENT;
 8009532:	79ba      	ldrb	r2, [r7, #6]
 8009534:	4982      	ldr	r1, [pc, #520]	@ (8009740 <config_motors+0xcc0>)
 8009536:	4613      	mov	r3, r2
 8009538:	011b      	lsls	r3, r3, #4
 800953a:	1a9b      	subs	r3, r3, r2
 800953c:	011b      	lsls	r3, r3, #4
 800953e:	440b      	add	r3, r1
 8009540:	3354      	adds	r3, #84	@ 0x54
 8009542:	4a87      	ldr	r2, [pc, #540]	@ (8009760 <config_motors+0xce0>)
 8009544:	601a      	str	r2, [r3, #0]
#endif

#ifdef PITCH_MOTOR_ID
	motor_id = PITCH_MOTOR_ID - 1;
 8009546:	2311      	movs	r3, #17
 8009548:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800954a:	79ba      	ldrb	r2, [r7, #6]
 800954c:	497c      	ldr	r1, [pc, #496]	@ (8009740 <config_motors+0xcc0>)
 800954e:	4613      	mov	r3, r2
 8009550:	011b      	lsls	r3, r3, #4
 8009552:	1a9b      	subs	r3, r3, r2
 8009554:	011b      	lsls	r3, r3, #4
 8009556:	440b      	add	r3, r1
 8009558:	3302      	adds	r3, #2
 800955a:	2201      	movs	r2, #1
 800955c:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800955e:	79ba      	ldrb	r2, [r7, #6]
 8009560:	4613      	mov	r3, r2
 8009562:	011b      	lsls	r3, r3, #4
 8009564:	1a9b      	subs	r3, r3, r2
 8009566:	011b      	lsls	r3, r3, #4
 8009568:	4a75      	ldr	r2, [pc, #468]	@ (8009740 <config_motors+0xcc0>)
 800956a:	4413      	add	r3, r2
 800956c:	4618      	mov	r0, r3
 800956e:	f7ff f93f 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = PITCH_CENTER;
 8009572:	79ba      	ldrb	r2, [r7, #6]
 8009574:	4972      	ldr	r1, [pc, #456]	@ (8009740 <config_motors+0xcc0>)
 8009576:	4613      	mov	r3, r2
 8009578:	011b      	lsls	r3, r3, #4
 800957a:	1a9b      	subs	r3, r3, r2
 800957c:	011b      	lsls	r3, r3, #4
 800957e:	440b      	add	r3, r1
 8009580:	339c      	adds	r3, #156	@ 0x9c
 8009582:	f44f 628c 	mov.w	r2, #1120	@ 0x460
 8009586:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = PITCH_MAX_ANG;
 8009588:	79ba      	ldrb	r2, [r7, #6]
 800958a:	496d      	ldr	r1, [pc, #436]	@ (8009740 <config_motors+0xcc0>)
 800958c:	4613      	mov	r3, r2
 800958e:	011b      	lsls	r3, r3, #4
 8009590:	1a9b      	subs	r3, r3, r2
 8009592:	011b      	lsls	r3, r3, #4
 8009594:	440b      	add	r3, r1
 8009596:	33c4      	adds	r3, #196	@ 0xc4
 8009598:	4a72      	ldr	r2, [pc, #456]	@ (8009764 <config_motors+0xce4>)
 800959a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = PITCH_MIN_ANG;
 800959c:	79ba      	ldrb	r2, [r7, #6]
 800959e:	4968      	ldr	r1, [pc, #416]	@ (8009740 <config_motors+0xcc0>)
 80095a0:	4613      	mov	r3, r2
 80095a2:	011b      	lsls	r3, r3, #4
 80095a4:	1a9b      	subs	r3, r3, r2
 80095a6:	011b      	lsls	r3, r3, #4
 80095a8:	440b      	add	r3, r1
 80095aa:	33c0      	adds	r3, #192	@ 0xc0
 80095ac:	4a6e      	ldr	r2, [pc, #440]	@ (8009768 <config_motors+0xce8>)
 80095ae:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 80095b0:	79ba      	ldrb	r2, [r7, #6]
 80095b2:	4963      	ldr	r1, [pc, #396]	@ (8009740 <config_motors+0xcc0>)
 80095b4:	4613      	mov	r3, r2
 80095b6:	011b      	lsls	r3, r3, #4
 80095b8:	1a9b      	subs	r3, r3, r2
 80095ba:	011b      	lsls	r3, r3, #4
 80095bc:	440b      	add	r3, r1
 80095be:	33d4      	adds	r3, #212	@ 0xd4
 80095c0:	f04f 0200 	mov.w	r2, #0
 80095c4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 80095c6:	79ba      	ldrb	r2, [r7, #6]
 80095c8:	495d      	ldr	r1, [pc, #372]	@ (8009740 <config_motors+0xcc0>)
 80095ca:	4613      	mov	r3, r2
 80095cc:	011b      	lsls	r3, r3, #4
 80095ce:	1a9b      	subs	r3, r3, r2
 80095d0:	011b      	lsls	r3, r3, #4
 80095d2:	440b      	add	r3, r1
 80095d4:	3368      	adds	r3, #104	@ 0x68
 80095d6:	f04f 0200 	mov.w	r2, #0
 80095da:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 80095dc:	79ba      	ldrb	r2, [r7, #6]
 80095de:	4958      	ldr	r1, [pc, #352]	@ (8009740 <config_motors+0xcc0>)
 80095e0:	4613      	mov	r3, r2
 80095e2:	011b      	lsls	r3, r3, #4
 80095e4:	1a9b      	subs	r3, r3, r2
 80095e6:	011b      	lsls	r3, r3, #4
 80095e8:	440b      	add	r3, r1
 80095ea:	336c      	adds	r3, #108	@ 0x6c
 80095ec:	f04f 0200 	mov.w	r2, #0
 80095f0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 80095f2:	79ba      	ldrb	r2, [r7, #6]
 80095f4:	4952      	ldr	r1, [pc, #328]	@ (8009740 <config_motors+0xcc0>)
 80095f6:	4613      	mov	r3, r2
 80095f8:	011b      	lsls	r3, r3, #4
 80095fa:	1a9b      	subs	r3, r3, r2
 80095fc:	011b      	lsls	r3, r3, #4
 80095fe:	440b      	add	r3, r1
 8009600:	3370      	adds	r3, #112	@ 0x70
 8009602:	f04f 0200 	mov.w	r2, #0
 8009606:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 8009608:	79ba      	ldrb	r2, [r7, #6]
 800960a:	494d      	ldr	r1, [pc, #308]	@ (8009740 <config_motors+0xcc0>)
 800960c:	4613      	mov	r3, r2
 800960e:	011b      	lsls	r3, r3, #4
 8009610:	1a9b      	subs	r3, r3, r2
 8009612:	011b      	lsls	r3, r3, #4
 8009614:	440b      	add	r3, r1
 8009616:	3380      	adds	r3, #128	@ 0x80
 8009618:	4a54      	ldr	r2, [pc, #336]	@ (800976c <config_motors+0xcec>)
 800961a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800961c:	79ba      	ldrb	r2, [r7, #6]
 800961e:	4948      	ldr	r1, [pc, #288]	@ (8009740 <config_motors+0xcc0>)
 8009620:	4613      	mov	r3, r2
 8009622:	011b      	lsls	r3, r3, #4
 8009624:	1a9b      	subs	r3, r3, r2
 8009626:	011b      	lsls	r3, r3, #4
 8009628:	440b      	add	r3, r1
 800962a:	3384      	adds	r3, #132	@ 0x84
 800962c:	f04f 4282 	mov.w	r2, #1090519040	@ 0x41000000
 8009630:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 8009632:	79ba      	ldrb	r2, [r7, #6]
 8009634:	4942      	ldr	r1, [pc, #264]	@ (8009740 <config_motors+0xcc0>)
 8009636:	4613      	mov	r3, r2
 8009638:	011b      	lsls	r3, r3, #4
 800963a:	1a9b      	subs	r3, r3, r2
 800963c:	011b      	lsls	r3, r3, #4
 800963e:	440b      	add	r3, r1
 8009640:	3338      	adds	r3, #56	@ 0x38
 8009642:	4a4b      	ldr	r2, [pc, #300]	@ (8009770 <config_motors+0xcf0>)
 8009644:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 8009646:	79ba      	ldrb	r2, [r7, #6]
 8009648:	493d      	ldr	r1, [pc, #244]	@ (8009740 <config_motors+0xcc0>)
 800964a:	4613      	mov	r3, r2
 800964c:	011b      	lsls	r3, r3, #4
 800964e:	1a9b      	subs	r3, r3, r2
 8009650:	011b      	lsls	r3, r3, #4
 8009652:	440b      	add	r3, r1
 8009654:	333c      	adds	r3, #60	@ 0x3c
 8009656:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800965a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800965c:	79ba      	ldrb	r2, [r7, #6]
 800965e:	4938      	ldr	r1, [pc, #224]	@ (8009740 <config_motors+0xcc0>)
 8009660:	4613      	mov	r3, r2
 8009662:	011b      	lsls	r3, r3, #4
 8009664:	1a9b      	subs	r3, r3, r2
 8009666:	011b      	lsls	r3, r3, #4
 8009668:	440b      	add	r3, r1
 800966a:	3340      	adds	r3, #64	@ 0x40
 800966c:	f04f 0200 	mov.w	r2, #0
 8009670:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 8009672:	79ba      	ldrb	r2, [r7, #6]
 8009674:	4932      	ldr	r1, [pc, #200]	@ (8009740 <config_motors+0xcc0>)
 8009676:	4613      	mov	r3, r2
 8009678:	011b      	lsls	r3, r3, #4
 800967a:	1a9b      	subs	r3, r3, r2
 800967c:	011b      	lsls	r3, r3, #4
 800967e:	440b      	add	r3, r1
 8009680:	3350      	adds	r3, #80	@ 0x50
 8009682:	4a3c      	ldr	r2, [pc, #240]	@ (8009774 <config_motors+0xcf4>)
 8009684:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 8009686:	79ba      	ldrb	r2, [r7, #6]
 8009688:	492d      	ldr	r1, [pc, #180]	@ (8009740 <config_motors+0xcc0>)
 800968a:	4613      	mov	r3, r2
 800968c:	011b      	lsls	r3, r3, #4
 800968e:	1a9b      	subs	r3, r3, r2
 8009690:	011b      	lsls	r3, r3, #4
 8009692:	440b      	add	r3, r1
 8009694:	3354      	adds	r3, #84	@ 0x54
 8009696:	4a38      	ldr	r2, [pc, #224]	@ (8009778 <config_motors+0xcf8>)
 8009698:	601a      	str	r2, [r3, #0]
#endif

#ifdef YAW_MOTOR_ID
#ifndef YAW_M3508
	motor_id = YAW_MOTOR_ID - 1;
 800969a:	2313      	movs	r3, #19
 800969c:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800969e:	79ba      	ldrb	r2, [r7, #6]
 80096a0:	4927      	ldr	r1, [pc, #156]	@ (8009740 <config_motors+0xcc0>)
 80096a2:	4613      	mov	r3, r2
 80096a4:	011b      	lsls	r3, r3, #4
 80096a6:	1a9b      	subs	r3, r3, r2
 80096a8:	011b      	lsls	r3, r3, #4
 80096aa:	440b      	add	r3, r1
 80096ac:	3302      	adds	r3, #2
 80096ae:	2201      	movs	r2, #1
 80096b0:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 80096b2:	79ba      	ldrb	r2, [r7, #6]
 80096b4:	4613      	mov	r3, r2
 80096b6:	011b      	lsls	r3, r3, #4
 80096b8:	1a9b      	subs	r3, r3, r2
 80096ba:	011b      	lsls	r3, r3, #4
 80096bc:	4a20      	ldr	r2, [pc, #128]	@ (8009740 <config_motors+0xcc0>)
 80096be:	4413      	add	r3, r2
 80096c0:	4618      	mov	r0, r3
 80096c2:	f7ff f895 	bl	80087f0 <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = YAW_CENTER;
 80096c6:	79ba      	ldrb	r2, [r7, #6]
 80096c8:	491d      	ldr	r1, [pc, #116]	@ (8009740 <config_motors+0xcc0>)
 80096ca:	4613      	mov	r3, r2
 80096cc:	011b      	lsls	r3, r3, #4
 80096ce:	1a9b      	subs	r3, r3, r2
 80096d0:	011b      	lsls	r3, r3, #4
 80096d2:	440b      	add	r3, r1
 80096d4:	339c      	adds	r3, #156	@ 0x9c
 80096d6:	f640 62d8 	movw	r2, #3800	@ 0xed8
 80096da:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = YAW_MAX_ANG;
 80096dc:	79ba      	ldrb	r2, [r7, #6]
 80096de:	4918      	ldr	r1, [pc, #96]	@ (8009740 <config_motors+0xcc0>)
 80096e0:	4613      	mov	r3, r2
 80096e2:	011b      	lsls	r3, r3, #4
 80096e4:	1a9b      	subs	r3, r3, r2
 80096e6:	011b      	lsls	r3, r3, #4
 80096e8:	440b      	add	r3, r1
 80096ea:	33c4      	adds	r3, #196	@ 0xc4
 80096ec:	4a23      	ldr	r2, [pc, #140]	@ (800977c <config_motors+0xcfc>)
 80096ee:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = YAW_MIN_ANG; //angle before it overflows
 80096f0:	79ba      	ldrb	r2, [r7, #6]
 80096f2:	4913      	ldr	r1, [pc, #76]	@ (8009740 <config_motors+0xcc0>)
 80096f4:	4613      	mov	r3, r2
 80096f6:	011b      	lsls	r3, r3, #4
 80096f8:	1a9b      	subs	r3, r3, r2
 80096fa:	011b      	lsls	r3, r3, #4
 80096fc:	440b      	add	r3, r1
 80096fe:	33c0      	adds	r3, #192	@ 0xc0
 8009700:	4a1f      	ldr	r2, [pc, #124]	@ (8009780 <config_motors+0xd00>)
 8009702:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 8009704:	79ba      	ldrb	r2, [r7, #6]
 8009706:	490e      	ldr	r1, [pc, #56]	@ (8009740 <config_motors+0xcc0>)
 8009708:	4613      	mov	r3, r2
 800970a:	011b      	lsls	r3, r3, #4
 800970c:	1a9b      	subs	r3, r3, r2
 800970e:	011b      	lsls	r3, r3, #4
 8009710:	440b      	add	r3, r1
 8009712:	33d4      	adds	r3, #212	@ 0xd4
 8009714:	f04f 0200 	mov.w	r2, #0
 8009718:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = YAW_ANGLE_KP;
 800971a:	79ba      	ldrb	r2, [r7, #6]
 800971c:	4908      	ldr	r1, [pc, #32]	@ (8009740 <config_motors+0xcc0>)
 800971e:	4613      	mov	r3, r2
 8009720:	011b      	lsls	r3, r3, #4
 8009722:	1a9b      	subs	r3, r3, r2
 8009724:	011b      	lsls	r3, r3, #4
 8009726:	440b      	add	r3, r1
 8009728:	3368      	adds	r3, #104	@ 0x68
 800972a:	4a16      	ldr	r2, [pc, #88]	@ (8009784 <config_motors+0xd04>)
 800972c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = YAW_ANGLE_KI;
 800972e:	79ba      	ldrb	r2, [r7, #6]
 8009730:	4903      	ldr	r1, [pc, #12]	@ (8009740 <config_motors+0xcc0>)
 8009732:	4613      	mov	r3, r2
 8009734:	011b      	lsls	r3, r3, #4
 8009736:	1a9b      	subs	r3, r3, r2
 8009738:	011b      	lsls	r3, r3, #4
 800973a:	440b      	add	r3, r1
 800973c:	336c      	adds	r3, #108	@ 0x6c
 800973e:	e023      	b.n	8009788 <config_motors+0xd08>
 8009740:	20001e48 	.word	0x20001e48
 8009744:	40490fdb 	.word	0x40490fdb
 8009748:	c0490fdb 	.word	0xc0490fdb
 800974c:	447a0000 	.word	0x447a0000
 8009750:	42c80000 	.word	0x42c80000
 8009754:	40a00000 	.word	0x40a00000
 8009758:	3ca3d70a 	.word	0x3ca3d70a
 800975c:	40400000 	.word	0x40400000
 8009760:	461c4000 	.word	0x461c4000
 8009764:	3f19999a 	.word	0x3f19999a
 8009768:	be800000 	.word	0xbe800000
 800976c:	3dcccccd 	.word	0x3dcccccd
 8009770:	45bb8000 	.word	0x45bb8000
 8009774:	457a0000 	.word	0x457a0000
 8009778:	469c4000 	.word	0x469c4000
 800977c:	417b53d2 	.word	0x417b53d2
 8009780:	c17b53d2 	.word	0xc17b53d2
 8009784:	41700000 	.word	0x41700000
 8009788:	f04f 0200 	mov.w	r2, #0
 800978c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = YAW_ANGLE_KD;
 800978e:	79ba      	ldrb	r2, [r7, #6]
 8009790:	4929      	ldr	r1, [pc, #164]	@ (8009838 <config_motors+0xdb8>)
 8009792:	4613      	mov	r3, r2
 8009794:	011b      	lsls	r3, r3, #4
 8009796:	1a9b      	subs	r3, r3, r2
 8009798:	011b      	lsls	r3, r3, #4
 800979a:	440b      	add	r3, r1
 800979c:	3370      	adds	r3, #112	@ 0x70
 800979e:	4a27      	ldr	r2, [pc, #156]	@ (800983c <config_motors+0xdbc>)
 80097a0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = YAW_ANGLE_INT_MAX;
 80097a2:	79ba      	ldrb	r2, [r7, #6]
 80097a4:	4924      	ldr	r1, [pc, #144]	@ (8009838 <config_motors+0xdb8>)
 80097a6:	4613      	mov	r3, r2
 80097a8:	011b      	lsls	r3, r3, #4
 80097aa:	1a9b      	subs	r3, r3, r2
 80097ac:	011b      	lsls	r3, r3, #4
 80097ae:	440b      	add	r3, r1
 80097b0:	3380      	adds	r3, #128	@ 0x80
 80097b2:	4a23      	ldr	r2, [pc, #140]	@ (8009840 <config_motors+0xdc0>)
 80097b4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = YAW_MAX_RPM;
 80097b6:	79ba      	ldrb	r2, [r7, #6]
 80097b8:	491f      	ldr	r1, [pc, #124]	@ (8009838 <config_motors+0xdb8>)
 80097ba:	4613      	mov	r3, r2
 80097bc:	011b      	lsls	r3, r3, #4
 80097be:	1a9b      	subs	r3, r3, r2
 80097c0:	011b      	lsls	r3, r3, #4
 80097c2:	440b      	add	r3, r1
 80097c4:	3384      	adds	r3, #132	@ 0x84
 80097c6:	4a1d      	ldr	r2, [pc, #116]	@ (800983c <config_motors+0xdbc>)
 80097c8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = YAWRPM_KP;
 80097ca:	79ba      	ldrb	r2, [r7, #6]
 80097cc:	491a      	ldr	r1, [pc, #104]	@ (8009838 <config_motors+0xdb8>)
 80097ce:	4613      	mov	r3, r2
 80097d0:	011b      	lsls	r3, r3, #4
 80097d2:	1a9b      	subs	r3, r3, r2
 80097d4:	011b      	lsls	r3, r3, #4
 80097d6:	440b      	add	r3, r1
 80097d8:	3338      	adds	r3, #56	@ 0x38
 80097da:	4a1a      	ldr	r2, [pc, #104]	@ (8009844 <config_motors+0xdc4>)
 80097dc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = YAWRPM_KI;
 80097de:	79ba      	ldrb	r2, [r7, #6]
 80097e0:	4915      	ldr	r1, [pc, #84]	@ (8009838 <config_motors+0xdb8>)
 80097e2:	4613      	mov	r3, r2
 80097e4:	011b      	lsls	r3, r3, #4
 80097e6:	1a9b      	subs	r3, r3, r2
 80097e8:	011b      	lsls	r3, r3, #4
 80097ea:	440b      	add	r3, r1
 80097ec:	333c      	adds	r3, #60	@ 0x3c
 80097ee:	4a13      	ldr	r2, [pc, #76]	@ (800983c <config_motors+0xdbc>)
 80097f0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = YAWRPM_KD;
 80097f2:	79ba      	ldrb	r2, [r7, #6]
 80097f4:	4910      	ldr	r1, [pc, #64]	@ (8009838 <config_motors+0xdb8>)
 80097f6:	4613      	mov	r3, r2
 80097f8:	011b      	lsls	r3, r3, #4
 80097fa:	1a9b      	subs	r3, r3, r2
 80097fc:	011b      	lsls	r3, r3, #4
 80097fe:	440b      	add	r3, r1
 8009800:	3340      	adds	r3, #64	@ 0x40
 8009802:	4a11      	ldr	r2, [pc, #68]	@ (8009848 <config_motors+0xdc8>)
 8009804:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = YAWRPM_INT_MAX;
 8009806:	79ba      	ldrb	r2, [r7, #6]
 8009808:	490b      	ldr	r1, [pc, #44]	@ (8009838 <config_motors+0xdb8>)
 800980a:	4613      	mov	r3, r2
 800980c:	011b      	lsls	r3, r3, #4
 800980e:	1a9b      	subs	r3, r3, r2
 8009810:	011b      	lsls	r3, r3, #4
 8009812:	440b      	add	r3, r1
 8009814:	3350      	adds	r3, #80	@ 0x50
 8009816:	4a0d      	ldr	r2, [pc, #52]	@ (800984c <config_motors+0xdcc>)
 8009818:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = YAW_MAX_CURRENT;
 800981a:	79ba      	ldrb	r2, [r7, #6]
 800981c:	4906      	ldr	r1, [pc, #24]	@ (8009838 <config_motors+0xdb8>)
 800981e:	4613      	mov	r3, r2
 8009820:	011b      	lsls	r3, r3, #4
 8009822:	1a9b      	subs	r3, r3, r2
 8009824:	011b      	lsls	r3, r3, #4
 8009826:	440b      	add	r3, r1
 8009828:	3354      	adds	r3, #84	@ 0x54
 800982a:	4a09      	ldr	r2, [pc, #36]	@ (8009850 <config_motors+0xdd0>)
 800982c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ticks = 4096 * g_can_motors[motor_id].angle_data.gearbox_ratio;
	g_can_motors[motor_id].angle_data.tick_range = g_can_motors[motor_id].angle_data.max_ticks
			- g_can_motors[motor_id].angle_data.min_ticks;
#endif
#endif
}
 800982e:	bf00      	nop
 8009830:	3708      	adds	r7, #8
 8009832:	46bd      	mov	sp, r7
 8009834:	bd80      	pop	{r7, pc}
 8009836:	bf00      	nop
 8009838:	20001e48 	.word	0x20001e48
 800983c:	41200000 	.word	0x41200000
 8009840:	3d4ccccd 	.word	0x3d4ccccd
 8009844:	466a6000 	.word	0x466a6000
 8009848:	447a0000 	.word	0x447a0000
 800984c:	459c4000 	.word	0x459c4000
 8009850:	469c4000 	.word	0x469c4000

08009854 <bz_buzzer>:

void bz_buzzer(uint8_t high, uint8_t low) {
 8009854:	b580      	push	{r7, lr}
 8009856:	b084      	sub	sp, #16
 8009858:	af00      	add	r7, sp, #0
 800985a:	4603      	mov	r3, r0
 800985c:	460a      	mov	r2, r1
 800985e:	71fb      	strb	r3, [r7, #7]
 8009860:	4613      	mov	r3, r2
 8009862:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_high;
 8009864:	2309      	movs	r3, #9
 8009866:	737b      	strb	r3, [r7, #13]
	for (uint8_t i = 0; i < high; i++) {
 8009868:	2300      	movs	r3, #0
 800986a:	73fb      	strb	r3, [r7, #15]
 800986c:	e00a      	b.n	8009884 <bz_buzzer+0x30>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800986e:	4b1a      	ldr	r3, [pc, #104]	@ (80098d8 <bz_buzzer+0x84>)
 8009870:	6818      	ldr	r0, [r3, #0]
 8009872:	f107 010d 	add.w	r1, r7, #13
 8009876:	2300      	movs	r3, #0
 8009878:	2200      	movs	r2, #0
 800987a:	f00d fec9 	bl	8017610 <xQueueGenericSend>
	for (uint8_t i = 0; i < high; i++) {
 800987e:	7bfb      	ldrb	r3, [r7, #15]
 8009880:	3301      	adds	r3, #1
 8009882:	73fb      	strb	r3, [r7, #15]
 8009884:	7bfa      	ldrb	r2, [r7, #15]
 8009886:	79fb      	ldrb	r3, [r7, #7]
 8009888:	429a      	cmp	r2, r3
 800988a:	d3f0      	bcc.n	800986e <bz_buzzer+0x1a>
	}
	temp_msg = bz_debug_low;
 800988c:	2308      	movs	r3, #8
 800988e:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < low; i++) {
 8009890:	2300      	movs	r3, #0
 8009892:	73bb      	strb	r3, [r7, #14]
 8009894:	e00d      	b.n	80098b2 <bz_buzzer+0x5e>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009896:	4b10      	ldr	r3, [pc, #64]	@ (80098d8 <bz_buzzer+0x84>)
 8009898:	6818      	ldr	r0, [r3, #0]
 800989a:	f107 010d 	add.w	r1, r7, #13
 800989e:	2300      	movs	r3, #0
 80098a0:	2200      	movs	r2, #0
 80098a2:	f00d feb5 	bl	8017610 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 80098a6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80098aa:	b2db      	uxtb	r3, r3
 80098ac:	3301      	adds	r3, #1
 80098ae:	b2db      	uxtb	r3, r3
 80098b0:	73bb      	strb	r3, [r7, #14]
 80098b2:	f997 200e 	ldrsb.w	r2, [r7, #14]
 80098b6:	79bb      	ldrb	r3, [r7, #6]
 80098b8:	429a      	cmp	r2, r3
 80098ba:	dbec      	blt.n	8009896 <bz_buzzer+0x42>
	}
	temp_msg = bz_debug_rest;
 80098bc:	230a      	movs	r3, #10
 80098be:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80098c0:	4b05      	ldr	r3, [pc, #20]	@ (80098d8 <bz_buzzer+0x84>)
 80098c2:	6818      	ldr	r0, [r3, #0]
 80098c4:	f107 010d 	add.w	r1, r7, #13
 80098c8:	2300      	movs	r3, #0
 80098ca:	2200      	movs	r2, #0
 80098cc:	f00d fea0 	bl	8017610 <xQueueGenericSend>
}
 80098d0:	bf00      	nop
 80098d2:	3710      	adds	r7, #16
 80098d4:	46bd      	mov	sp, r7
 80098d6:	bd80      	pop	{r7, pc}
 80098d8:	200037c4 	.word	0x200037c4

080098dc <motor_temp_bz>:

void motor_temp_bz(uint8_t hi, uint8_t low) {
 80098dc:	b580      	push	{r7, lr}
 80098de:	b084      	sub	sp, #16
 80098e0:	af00      	add	r7, sp, #0
 80098e2:	4603      	mov	r3, r0
 80098e4:	460a      	mov	r2, r1
 80098e6:	71fb      	strb	r3, [r7, #7]
 80098e8:	4613      	mov	r3, r2
 80098ea:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_hi_temp;
 80098ec:	230b      	movs	r3, #11
 80098ee:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80098f0:	4b27      	ldr	r3, [pc, #156]	@ (8009990 <motor_temp_bz+0xb4>)
 80098f2:	6818      	ldr	r0, [r3, #0]
 80098f4:	f107 010d 	add.w	r1, r7, #13
 80098f8:	2300      	movs	r3, #0
 80098fa:	2200      	movs	r2, #0
 80098fc:	f00d fe88 	bl	8017610 <xQueueGenericSend>
	temp_msg = bz_debug_rest;
 8009900:	230a      	movs	r3, #10
 8009902:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009904:	4b22      	ldr	r3, [pc, #136]	@ (8009990 <motor_temp_bz+0xb4>)
 8009906:	6818      	ldr	r0, [r3, #0]
 8009908:	f107 010d 	add.w	r1, r7, #13
 800990c:	2300      	movs	r3, #0
 800990e:	2200      	movs	r2, #0
 8009910:	f00d fe7e 	bl	8017610 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 8009914:	2300      	movs	r3, #0
 8009916:	73fb      	strb	r3, [r7, #15]
 8009918:	e00f      	b.n	800993a <motor_temp_bz+0x5e>
		temp_msg = bz_temp_hi;
 800991a:	230c      	movs	r3, #12
 800991c:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800991e:	4b1c      	ldr	r3, [pc, #112]	@ (8009990 <motor_temp_bz+0xb4>)
 8009920:	6818      	ldr	r0, [r3, #0]
 8009922:	f107 010d 	add.w	r1, r7, #13
 8009926:	2300      	movs	r3, #0
 8009928:	2200      	movs	r2, #0
 800992a:	f00d fe71 	bl	8017610 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 800992e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8009932:	b2db      	uxtb	r3, r3
 8009934:	3301      	adds	r3, #1
 8009936:	b2db      	uxtb	r3, r3
 8009938:	73fb      	strb	r3, [r7, #15]
 800993a:	f997 200f 	ldrsb.w	r2, [r7, #15]
 800993e:	79fb      	ldrb	r3, [r7, #7]
 8009940:	429a      	cmp	r2, r3
 8009942:	dbea      	blt.n	800991a <motor_temp_bz+0x3e>
	}
	for (int8_t i = 0; i < low; i++) {
 8009944:	2300      	movs	r3, #0
 8009946:	73bb      	strb	r3, [r7, #14]
 8009948:	e00f      	b.n	800996a <motor_temp_bz+0x8e>
		temp_msg = bz_temp_low;
 800994a:	230d      	movs	r3, #13
 800994c:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800994e:	4b10      	ldr	r3, [pc, #64]	@ (8009990 <motor_temp_bz+0xb4>)
 8009950:	6818      	ldr	r0, [r3, #0]
 8009952:	f107 010d 	add.w	r1, r7, #13
 8009956:	2300      	movs	r3, #0
 8009958:	2200      	movs	r2, #0
 800995a:	f00d fe59 	bl	8017610 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800995e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8009962:	b2db      	uxtb	r3, r3
 8009964:	3301      	adds	r3, #1
 8009966:	b2db      	uxtb	r3, r3
 8009968:	73bb      	strb	r3, [r7, #14]
 800996a:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800996e:	79bb      	ldrb	r3, [r7, #6]
 8009970:	429a      	cmp	r2, r3
 8009972:	dbea      	blt.n	800994a <motor_temp_bz+0x6e>
	}
	temp_msg = bz_debug_rest;
 8009974:	230a      	movs	r3, #10
 8009976:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009978:	4b05      	ldr	r3, [pc, #20]	@ (8009990 <motor_temp_bz+0xb4>)
 800997a:	6818      	ldr	r0, [r3, #0]
 800997c:	f107 010d 	add.w	r1, r7, #13
 8009980:	2300      	movs	r3, #0
 8009982:	2200      	movs	r2, #0
 8009984:	f00d fe44 	bl	8017610 <xQueueGenericSend>

}
 8009988:	bf00      	nop
 800998a:	3710      	adds	r7, #16
 800998c:	46bd      	mov	sp, r7
 800998e:	bd80      	pop	{r7, pc}
 8009990:	200037c4 	.word	0x200037c4

08009994 <check_motors>:

uint16_t check_motors() {
 8009994:	b580      	push	{r7, lr}
 8009996:	b082      	sub	sp, #8
 8009998:	af00      	add	r7, sp, #0
	uint16_t error = 0;
 800999a:	2300      	movs	r3, #0
 800999c:	80fb      	strh	r3, [r7, #6]
	uint32_t curr_time = get_microseconds();
 800999e:	f7f8 fc0f 	bl	80021c0 <get_microseconds>
 80099a2:	6038      	str	r0, [r7, #0]
	if (curr_time
				- g_can_motors[LEFT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 80099a4:	4b7d      	ldr	r3, [pc, #500]	@ (8009b9c <check_motors+0x208>)
 80099a6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 80099aa:	683a      	ldr	r2, [r7, #0]
 80099ac:	1ad3      	subs	r3, r2, r3
	if (curr_time
 80099ae:	4a7c      	ldr	r2, [pc, #496]	@ (8009ba0 <check_motors+0x20c>)
 80099b0:	4293      	cmp	r3, r2
 80099b2:	d904      	bls.n	80099be <check_motors+0x2a>
			error |= 1 << (0);
 80099b4:	88fb      	ldrh	r3, [r7, #6]
 80099b6:	f043 0301 	orr.w	r3, r3, #1
 80099ba:	80fb      	strh	r3, [r7, #6]
 80099bc:	e007      	b.n	80099ce <check_motors+0x3a>

		} else {
			if (g_can_motors[LEFT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 80099be:	4b77      	ldr	r3, [pc, #476]	@ (8009b9c <check_motors+0x208>)
 80099c0:	7b1b      	ldrb	r3, [r3, #12]
 80099c2:	2b46      	cmp	r3, #70	@ 0x46
 80099c4:	d903      	bls.n	80099ce <check_motors+0x3a>
				motor_temp_bz(1, 1);
 80099c6:	2101      	movs	r1, #1
 80099c8:	2001      	movs	r0, #1
 80099ca:	f7ff ff87 	bl	80098dc <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
				- g_can_motors[RIGHT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 80099ce:	4b73      	ldr	r3, [pc, #460]	@ (8009b9c <check_motors+0x208>)
 80099d0:	f8d3 31d4 	ldr.w	r3, [r3, #468]	@ 0x1d4
 80099d4:	683a      	ldr	r2, [r7, #0]
 80099d6:	1ad3      	subs	r3, r2, r3
	if (curr_time
 80099d8:	4a71      	ldr	r2, [pc, #452]	@ (8009ba0 <check_motors+0x20c>)
 80099da:	4293      	cmp	r3, r2
 80099dc:	d904      	bls.n	80099e8 <check_motors+0x54>
			error |= 1 << (0);
 80099de:	88fb      	ldrh	r3, [r7, #6]
 80099e0:	f043 0301 	orr.w	r3, r3, #1
 80099e4:	80fb      	strh	r3, [r7, #6]
 80099e6:	e008      	b.n	80099fa <check_motors+0x66>

		} else {
			if (g_can_motors[RIGHT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 80099e8:	4b6c      	ldr	r3, [pc, #432]	@ (8009b9c <check_motors+0x208>)
 80099ea:	f893 30fc 	ldrb.w	r3, [r3, #252]	@ 0xfc
 80099ee:	2b46      	cmp	r3, #70	@ 0x46
 80099f0:	d903      	bls.n	80099fa <check_motors+0x66>
				motor_temp_bz(1, 1);
 80099f2:	2101      	movs	r1, #1
 80099f4:	2001      	movs	r0, #1
 80099f6:	f7ff ff71 	bl	80098dc <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
			- g_can_motors[FR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 80099fa:	4b68      	ldr	r3, [pc, #416]	@ (8009b9c <check_motors+0x208>)
 80099fc:	f8d3 34a4 	ldr.w	r3, [r3, #1188]	@ 0x4a4
 8009a00:	683a      	ldr	r2, [r7, #0]
 8009a02:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a04:	4a66      	ldr	r2, [pc, #408]	@ (8009ba0 <check_motors+0x20c>)
 8009a06:	4293      	cmp	r3, r2
 8009a08:	d904      	bls.n	8009a14 <check_motors+0x80>
		error |= 1 << (0);
 8009a0a:	88fb      	ldrh	r3, [r7, #6]
 8009a0c:	f043 0301 	orr.w	r3, r3, #1
 8009a10:	80fb      	strh	r3, [r7, #6]
 8009a12:	e008      	b.n	8009a26 <check_motors+0x92>

	} else {
		if (g_can_motors[FR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a14:	4b61      	ldr	r3, [pc, #388]	@ (8009b9c <check_motors+0x208>)
 8009a16:	f893 33cc 	ldrb.w	r3, [r3, #972]	@ 0x3cc
 8009a1a:	2b46      	cmp	r3, #70	@ 0x46
 8009a1c:	d903      	bls.n	8009a26 <check_motors+0x92>
			motor_temp_bz(1, 1);
 8009a1e:	2101      	movs	r1, #1
 8009a20:	2001      	movs	r0, #1
 8009a22:	f7ff ff5b 	bl	80098dc <motor_temp_bz>

		}
	}

	if (curr_time
			- g_can_motors[FL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a26:	4b5d      	ldr	r3, [pc, #372]	@ (8009b9c <check_motors+0x208>)
 8009a28:	f8d3 3594 	ldr.w	r3, [r3, #1428]	@ 0x594
 8009a2c:	683a      	ldr	r2, [r7, #0]
 8009a2e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a30:	4a5b      	ldr	r2, [pc, #364]	@ (8009ba0 <check_motors+0x20c>)
 8009a32:	4293      	cmp	r3, r2
 8009a34:	d904      	bls.n	8009a40 <check_motors+0xac>
		error |= 1 << (1);
 8009a36:	88fb      	ldrh	r3, [r7, #6]
 8009a38:	f043 0302 	orr.w	r3, r3, #2
 8009a3c:	80fb      	strh	r3, [r7, #6]
 8009a3e:	e008      	b.n	8009a52 <check_motors+0xbe>

	} else {
		if (g_can_motors[FL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a40:	4b56      	ldr	r3, [pc, #344]	@ (8009b9c <check_motors+0x208>)
 8009a42:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 8009a46:	2b46      	cmp	r3, #70	@ 0x46
 8009a48:	d903      	bls.n	8009a52 <check_motors+0xbe>
			motor_temp_bz(1, 2);
 8009a4a:	2102      	movs	r1, #2
 8009a4c:	2001      	movs	r0, #1
 8009a4e:	f7ff ff45 	bl	80098dc <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[BL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a52:	4b52      	ldr	r3, [pc, #328]	@ (8009b9c <check_motors+0x208>)
 8009a54:	f8d3 3684 	ldr.w	r3, [r3, #1668]	@ 0x684
 8009a58:	683a      	ldr	r2, [r7, #0]
 8009a5a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a5c:	4a50      	ldr	r2, [pc, #320]	@ (8009ba0 <check_motors+0x20c>)
 8009a5e:	4293      	cmp	r3, r2
 8009a60:	d904      	bls.n	8009a6c <check_motors+0xd8>
		error |= 1 << (2);
 8009a62:	88fb      	ldrh	r3, [r7, #6]
 8009a64:	f043 0304 	orr.w	r3, r3, #4
 8009a68:	80fb      	strh	r3, [r7, #6]
 8009a6a:	e008      	b.n	8009a7e <check_motors+0xea>
	} else {
		if (g_can_motors[BL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a6c:	4b4b      	ldr	r3, [pc, #300]	@ (8009b9c <check_motors+0x208>)
 8009a6e:	f893 35ac 	ldrb.w	r3, [r3, #1452]	@ 0x5ac
 8009a72:	2b46      	cmp	r3, #70	@ 0x46
 8009a74:	d903      	bls.n	8009a7e <check_motors+0xea>
			motor_temp_bz(1, 3);
 8009a76:	2103      	movs	r1, #3
 8009a78:	2001      	movs	r0, #1
 8009a7a:	f7ff ff2f 	bl	80098dc <motor_temp_bz>
		}
	}
	if (curr_time
			- g_can_motors[BR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009a7e:	4b47      	ldr	r3, [pc, #284]	@ (8009b9c <check_motors+0x208>)
 8009a80:	f8d3 3774 	ldr.w	r3, [r3, #1908]	@ 0x774
 8009a84:	683a      	ldr	r2, [r7, #0]
 8009a86:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009a88:	4a45      	ldr	r2, [pc, #276]	@ (8009ba0 <check_motors+0x20c>)
 8009a8a:	4293      	cmp	r3, r2
 8009a8c:	d904      	bls.n	8009a98 <check_motors+0x104>
		error |= 1 << (3);
 8009a8e:	88fb      	ldrh	r3, [r7, #6]
 8009a90:	f043 0308 	orr.w	r3, r3, #8
 8009a94:	80fb      	strh	r3, [r7, #6]
 8009a96:	e008      	b.n	8009aaa <check_motors+0x116>
	} else {
		if (g_can_motors[BR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009a98:	4b40      	ldr	r3, [pc, #256]	@ (8009b9c <check_motors+0x208>)
 8009a9a:	f893 369c 	ldrb.w	r3, [r3, #1692]	@ 0x69c
 8009a9e:	2b46      	cmp	r3, #70	@ 0x46
 8009aa0:	d903      	bls.n	8009aaa <check_motors+0x116>
			motor_temp_bz(1, 4);
 8009aa2:	2104      	movs	r1, #4
 8009aa4:	2001      	movs	r0, #1
 8009aa6:	f7ff ff19 	bl	80098dc <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[LFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009aaa:	4b3c      	ldr	r3, [pc, #240]	@ (8009b9c <check_motors+0x208>)
 8009aac:	f8d3 3ef4 	ldr.w	r3, [r3, #3828]	@ 0xef4
 8009ab0:	683a      	ldr	r2, [r7, #0]
 8009ab2:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009ab4:	4a3a      	ldr	r2, [pc, #232]	@ (8009ba0 <check_motors+0x20c>)
 8009ab6:	4293      	cmp	r3, r2
 8009ab8:	d904      	bls.n	8009ac4 <check_motors+0x130>
		error |= 1 << (4);
 8009aba:	88fb      	ldrh	r3, [r7, #6]
 8009abc:	f043 0310 	orr.w	r3, r3, #16
 8009ac0:	80fb      	strh	r3, [r7, #6]
 8009ac2:	e008      	b.n	8009ad6 <check_motors+0x142>

	} else {
		if (g_can_motors[LFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009ac4:	4b35      	ldr	r3, [pc, #212]	@ (8009b9c <check_motors+0x208>)
 8009ac6:	f893 3e1c 	ldrb.w	r3, [r3, #3612]	@ 0xe1c
 8009aca:	2b46      	cmp	r3, #70	@ 0x46
 8009acc:	d903      	bls.n	8009ad6 <check_motors+0x142>
			motor_temp_bz(2, 1);
 8009ace:	2101      	movs	r1, #1
 8009ad0:	2002      	movs	r0, #2
 8009ad2:	f7ff ff03 	bl	80098dc <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[RFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009ad6:	4b31      	ldr	r3, [pc, #196]	@ (8009b9c <check_motors+0x208>)
 8009ad8:	f8d3 3e04 	ldr.w	r3, [r3, #3588]	@ 0xe04
 8009adc:	683a      	ldr	r2, [r7, #0]
 8009ade:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009ae0:	4a2f      	ldr	r2, [pc, #188]	@ (8009ba0 <check_motors+0x20c>)
 8009ae2:	4293      	cmp	r3, r2
 8009ae4:	d904      	bls.n	8009af0 <check_motors+0x15c>
		error |= 1 << (5);
 8009ae6:	88fb      	ldrh	r3, [r7, #6]
 8009ae8:	f043 0320 	orr.w	r3, r3, #32
 8009aec:	80fb      	strh	r3, [r7, #6]
 8009aee:	e008      	b.n	8009b02 <check_motors+0x16e>

	} else {
		if (g_can_motors[RFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009af0:	4b2a      	ldr	r3, [pc, #168]	@ (8009b9c <check_motors+0x208>)
 8009af2:	f893 3d2c 	ldrb.w	r3, [r3, #3372]	@ 0xd2c
 8009af6:	2b46      	cmp	r3, #70	@ 0x46
 8009af8:	d903      	bls.n	8009b02 <check_motors+0x16e>
			motor_temp_bz(2, 2);
 8009afa:	2102      	movs	r1, #2
 8009afc:	2002      	movs	r0, #2
 8009afe:	f7ff feed 	bl	80098dc <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[FEEDER_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b02:	4b26      	ldr	r3, [pc, #152]	@ (8009b9c <check_motors+0x208>)
 8009b04:	f8d3 3fe4 	ldr.w	r3, [r3, #4068]	@ 0xfe4
 8009b08:	683a      	ldr	r2, [r7, #0]
 8009b0a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b0c:	4a24      	ldr	r2, [pc, #144]	@ (8009ba0 <check_motors+0x20c>)
 8009b0e:	4293      	cmp	r3, r2
 8009b10:	d904      	bls.n	8009b1c <check_motors+0x188>
		error |= 1 << 6;
 8009b12:	88fb      	ldrh	r3, [r7, #6]
 8009b14:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009b18:	80fb      	strh	r3, [r7, #6]
 8009b1a:	e008      	b.n	8009b2e <check_motors+0x19a>

	} else {
		if (g_can_motors[FEEDER_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b1c:	4b1f      	ldr	r3, [pc, #124]	@ (8009b9c <check_motors+0x208>)
 8009b1e:	f893 3f0c 	ldrb.w	r3, [r3, #3852]	@ 0xf0c
 8009b22:	2b46      	cmp	r3, #70	@ 0x46
 8009b24:	d903      	bls.n	8009b2e <check_motors+0x19a>
			motor_temp_bz(2, 3);
 8009b26:	2103      	movs	r1, #3
 8009b28:	2002      	movs	r0, #2
 8009b2a:	f7ff fed7 	bl	80098dc <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[PITCH_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b2e:	4b1b      	ldr	r3, [pc, #108]	@ (8009b9c <check_motors+0x208>)
 8009b30:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009b34:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8009b38:	683a      	ldr	r2, [r7, #0]
 8009b3a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b3c:	4a18      	ldr	r2, [pc, #96]	@ (8009ba0 <check_motors+0x20c>)
 8009b3e:	4293      	cmp	r3, r2
 8009b40:	d904      	bls.n	8009b4c <check_motors+0x1b8>
		error |= 1 << 7;
 8009b42:	88fb      	ldrh	r3, [r7, #6]
 8009b44:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009b48:	80fb      	strh	r3, [r7, #6]
 8009b4a:	e008      	b.n	8009b5e <check_motors+0x1ca>

	} else {
		if (g_can_motors[PITCH_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b4c:	4b13      	ldr	r3, [pc, #76]	@ (8009b9c <check_motors+0x208>)
 8009b4e:	f893 3ffc 	ldrb.w	r3, [r3, #4092]	@ 0xffc
 8009b52:	2b46      	cmp	r3, #70	@ 0x46
 8009b54:	d903      	bls.n	8009b5e <check_motors+0x1ca>
			motor_temp_bz(3, 1);
 8009b56:	2101      	movs	r1, #1
 8009b58:	2003      	movs	r0, #3
 8009b5a:	f7ff febf 	bl	80098dc <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[YAW_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 8009b5e:	4b0f      	ldr	r3, [pc, #60]	@ (8009b9c <check_motors+0x208>)
 8009b60:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009b64:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8009b68:	683a      	ldr	r2, [r7, #0]
 8009b6a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 8009b6c:	4a0c      	ldr	r2, [pc, #48]	@ (8009ba0 <check_motors+0x20c>)
 8009b6e:	4293      	cmp	r3, r2
 8009b70:	d904      	bls.n	8009b7c <check_motors+0x1e8>
		error |= 1 << 8;
 8009b72:	88fb      	ldrh	r3, [r7, #6]
 8009b74:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009b78:	80fb      	strh	r3, [r7, #6]
 8009b7a:	e00a      	b.n	8009b92 <check_motors+0x1fe>

	} else {
		if (g_can_motors[YAW_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 8009b7c:	4b07      	ldr	r3, [pc, #28]	@ (8009b9c <check_motors+0x208>)
 8009b7e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8009b82:	f893 31dc 	ldrb.w	r3, [r3, #476]	@ 0x1dc
 8009b86:	2b46      	cmp	r3, #70	@ 0x46
 8009b88:	d903      	bls.n	8009b92 <check_motors+0x1fe>
			motor_temp_bz(3, 2);
 8009b8a:	2102      	movs	r1, #2
 8009b8c:	2003      	movs	r0, #3
 8009b8e:	f7ff fea5 	bl	80098dc <motor_temp_bz>
		}
	}
	return error;
 8009b92:	88fb      	ldrh	r3, [r7, #6]

}
 8009b94:	4618      	mov	r0, r3
 8009b96:	3708      	adds	r7, #8
 8009b98:	46bd      	mov	sp, r7
 8009b9a:	bd80      	pop	{r7, pc}
 8009b9c:	20001e48 	.word	0x20001e48
 8009ba0:	000f4240 	.word	0x000f4240

08009ba4 <motor_calib_task>:

void motor_calib_task(void *argument) {
 8009ba4:	b580      	push	{r7, lr}
 8009ba6:	b088      	sub	sp, #32
 8009ba8:	af00      	add	r7, sp, #0
 8009baa:	6078      	str	r0, [r7, #4]
	can_start(&hcan1, 0x00000000, 0x00000000);
 8009bac:	2200      	movs	r2, #0
 8009bae:	2100      	movs	r1, #0
 8009bb0:	4842      	ldr	r0, [pc, #264]	@ (8009cbc <motor_calib_task+0x118>)
 8009bb2:	f7f7 fb43 	bl	800123c <can_start>
	can_start(&hcan2, 0x00000000, 0x00000000);
 8009bb6:	2200      	movs	r2, #0
 8009bb8:	2100      	movs	r1, #0
 8009bba:	4841      	ldr	r0, [pc, #260]	@ (8009cc0 <motor_calib_task+0x11c>)
 8009bbc:	f7f7 fb3e 	bl	800123c <can_start>
	config_motors();
 8009bc0:	f7fe ff5e 	bl	8008a80 <config_motors>
	//insert can tester?
	uint16_t error = 0b111111111;
 8009bc4:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8009bc8:	82fb      	strh	r3, [r7, #22]
	vTaskDelay(50);
 8009bca:	2032      	movs	r0, #50	@ 0x32
 8009bcc:	f00e fc0a 	bl	80183e4 <vTaskDelay>
			vTaskDelay(500);
		}
	}

	uint8_t temp_msg;
	if (error == 0) {
 8009bd0:	8afb      	ldrh	r3, [r7, #22]
 8009bd2:	2b00      	cmp	r3, #0
 8009bd4:	d102      	bne.n	8009bdc <motor_calib_task+0x38>
		temp_msg = ok;
 8009bd6:	2301      	movs	r3, #1
 8009bd8:	73fb      	strb	r3, [r7, #15]
 8009bda:	e001      	b.n	8009be0 <motor_calib_task+0x3c>
	} else {
		temp_msg = not_ok;
 8009bdc:	2302      	movs	r3, #2
 8009bde:	73fb      	strb	r3, [r7, #15]
	}
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8009be0:	4b38      	ldr	r3, [pc, #224]	@ (8009cc4 <motor_calib_task+0x120>)
 8009be2:	6818      	ldr	r0, [r3, #0]
 8009be4:	f107 010f 	add.w	r1, r7, #15
 8009be8:	2300      	movs	r3, #0
 8009bea:	2200      	movs	r2, #0
 8009bec:	f00d fd10 	bl	8017610 <xQueueGenericSend>
	uint32_t last_check = HAL_GetTick();
 8009bf0:	f001 fa32 	bl	800b058 <HAL_GetTick>
 8009bf4:	6138      	str	r0, [r7, #16]
	while (1) {
		error = 0;
 8009bf6:	2300      	movs	r3, #0
 8009bf8:	82fb      	strh	r3, [r7, #22]

		error = check_motors();
 8009bfa:	f7ff fecb 	bl	8009994 <check_motors>
 8009bfe:	4603      	mov	r3, r0
 8009c00:	82fb      	strh	r3, [r7, #22]
		g_motor_fault = error;
 8009c02:	4a31      	ldr	r2, [pc, #196]	@ (8009cc8 <motor_calib_task+0x124>)
 8009c04:	8afb      	ldrh	r3, [r7, #22]
 8009c06:	8013      	strh	r3, [r2, #0]
		uint32_t delay = 0;
 8009c08:	2300      	movs	r3, #0
 8009c0a:	61bb      	str	r3, [r7, #24]
		if (HAL_GetTick() - last_check > 30000) {
 8009c0c:	f001 fa24 	bl	800b058 <HAL_GetTick>
 8009c10:	4602      	mov	r2, r0
 8009c12:	693b      	ldr	r3, [r7, #16]
 8009c14:	1ad3      	subs	r3, r2, r3
 8009c16:	f247 5230 	movw	r2, #30000	@ 0x7530
 8009c1a:	4293      	cmp	r3, r2
 8009c1c:	d949      	bls.n	8009cb2 <motor_calib_task+0x10e>
					bz_buzzer(0, 2);
					vTaskDelay(5000);
					continue;
				}
			} else {
				error = 0;
 8009c1e:	2300      	movs	r3, #0
 8009c20:	82fb      	strh	r3, [r7, #22]
			}
			for (uint8_t i = 0; i < 4; i++) {
 8009c22:	2300      	movs	r3, #0
 8009c24:	777b      	strb	r3, [r7, #29]
 8009c26:	e011      	b.n	8009c4c <motor_calib_task+0xa8>
				if (error & (1 << (i))) {
 8009c28:	8afa      	ldrh	r2, [r7, #22]
 8009c2a:	7f7b      	ldrb	r3, [r7, #29]
 8009c2c:	fa42 f303 	asr.w	r3, r2, r3
 8009c30:	f003 0301 	and.w	r3, r3, #1
 8009c34:	2b00      	cmp	r3, #0
 8009c36:	d006      	beq.n	8009c46 <motor_calib_task+0xa2>
					bz_buzzer(1, i + 1);
 8009c38:	7f7b      	ldrb	r3, [r7, #29]
 8009c3a:	3301      	adds	r3, #1
 8009c3c:	b2db      	uxtb	r3, r3
 8009c3e:	4619      	mov	r1, r3
 8009c40:	2001      	movs	r0, #1
 8009c42:	f7ff fe07 	bl	8009854 <bz_buzzer>
			for (uint8_t i = 0; i < 4; i++) {
 8009c46:	7f7b      	ldrb	r3, [r7, #29]
 8009c48:	3301      	adds	r3, #1
 8009c4a:	777b      	strb	r3, [r7, #29]
 8009c4c:	7f7b      	ldrb	r3, [r7, #29]
 8009c4e:	2b03      	cmp	r3, #3
 8009c50:	d9ea      	bls.n	8009c28 <motor_calib_task+0x84>
				} else {

				}
			}
			for (uint8_t i = 4; i < 7; i++) {
 8009c52:	2304      	movs	r3, #4
 8009c54:	77bb      	strb	r3, [r7, #30]
 8009c56:	e011      	b.n	8009c7c <motor_calib_task+0xd8>
				if (error & (1 << (i))) {
 8009c58:	8afa      	ldrh	r2, [r7, #22]
 8009c5a:	7fbb      	ldrb	r3, [r7, #30]
 8009c5c:	fa42 f303 	asr.w	r3, r2, r3
 8009c60:	f003 0301 	and.w	r3, r3, #1
 8009c64:	2b00      	cmp	r3, #0
 8009c66:	d006      	beq.n	8009c76 <motor_calib_task+0xd2>
					bz_buzzer(2, (i - 3));
 8009c68:	7fbb      	ldrb	r3, [r7, #30]
 8009c6a:	3b03      	subs	r3, #3
 8009c6c:	b2db      	uxtb	r3, r3
 8009c6e:	4619      	mov	r1, r3
 8009c70:	2002      	movs	r0, #2
 8009c72:	f7ff fdef 	bl	8009854 <bz_buzzer>
			for (uint8_t i = 4; i < 7; i++) {
 8009c76:	7fbb      	ldrb	r3, [r7, #30]
 8009c78:	3301      	adds	r3, #1
 8009c7a:	77bb      	strb	r3, [r7, #30]
 8009c7c:	7fbb      	ldrb	r3, [r7, #30]
 8009c7e:	2b06      	cmp	r3, #6
 8009c80:	d9ea      	bls.n	8009c58 <motor_calib_task+0xb4>
				}
			}
			for (uint8_t i = 7; i < 9; i++) {
 8009c82:	2307      	movs	r3, #7
 8009c84:	77fb      	strb	r3, [r7, #31]
 8009c86:	e011      	b.n	8009cac <motor_calib_task+0x108>
				if (error & (1 << (i))) {
 8009c88:	8afa      	ldrh	r2, [r7, #22]
 8009c8a:	7ffb      	ldrb	r3, [r7, #31]
 8009c8c:	fa42 f303 	asr.w	r3, r2, r3
 8009c90:	f003 0301 	and.w	r3, r3, #1
 8009c94:	2b00      	cmp	r3, #0
 8009c96:	d006      	beq.n	8009ca6 <motor_calib_task+0x102>
					bz_buzzer(3, (i - 6));
 8009c98:	7ffb      	ldrb	r3, [r7, #31]
 8009c9a:	3b06      	subs	r3, #6
 8009c9c:	b2db      	uxtb	r3, r3
 8009c9e:	4619      	mov	r1, r3
 8009ca0:	2003      	movs	r0, #3
 8009ca2:	f7ff fdd7 	bl	8009854 <bz_buzzer>
			for (uint8_t i = 7; i < 9; i++) {
 8009ca6:	7ffb      	ldrb	r3, [r7, #31]
 8009ca8:	3301      	adds	r3, #1
 8009caa:	77fb      	strb	r3, [r7, #31]
 8009cac:	7ffb      	ldrb	r3, [r7, #31]
 8009cae:	2b08      	cmp	r3, #8
 8009cb0:	d9ea      	bls.n	8009c88 <motor_calib_task+0xe4>
				}
			}
		}

		vTaskDelay(1000);
 8009cb2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8009cb6:	f00e fb95 	bl	80183e4 <vTaskDelay>
	while (1) {
 8009cba:	e79c      	b.n	8009bf6 <motor_calib_task+0x52>
 8009cbc:	200008e4 	.word	0x200008e4
 8009cc0:	2000090c 	.word	0x2000090c
 8009cc4:	200037c4 	.word	0x200037c4
 8009cc8:	200037c8 	.word	0x200037c8

08009ccc <speed_pid>:
 *
 * @param setpoint target RPM
 * @param motor's current RPM
 * @param *pid pointer to the rpm_pid struct within the motor's data struct
 */
void speed_pid(double setpoint, double curr_pt, pid_data_t *pid) {
 8009ccc:	b580      	push	{r7, lr}
 8009cce:	b08a      	sub	sp, #40	@ 0x28
 8009cd0:	af00      	add	r7, sp, #0
 8009cd2:	ed87 0b04 	vstr	d0, [r7, #16]
 8009cd6:	ed87 1b02 	vstr	d1, [r7, #8]
 8009cda:	6078      	str	r0, [r7, #4]
	pid->last_time[1] = pid->last_time[0];
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009ce0:	687b      	ldr	r3, [r7, #4]
 8009ce2:	62da      	str	r2, [r3, #44]	@ 0x2c
	pid->last_time[0] = get_microseconds();
 8009ce4:	f7f8 fa6c 	bl	80021c0 <get_microseconds>
 8009ce8:	4602      	mov	r2, r0
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	629a      	str	r2, [r3, #40]	@ 0x28
	/*
	if (pid->last_time[1]>= pid->last_time[0]) {
		return;
	} */
	uint32_t time_mult = 1;//TIMER_FREQ / (float) (pid->last_time[0] - pid->last_time[1]);
 8009cee:	2301      	movs	r3, #1
 8009cf0:	627b      	str	r3, [r7, #36]	@ 0x24
	float Pout = 0;
 8009cf2:	f04f 0300 	mov.w	r3, #0
 8009cf6:	623b      	str	r3, [r7, #32]
	float Iout = 0;
 8009cf8:	f04f 0300 	mov.w	r3, #0
 8009cfc:	61fb      	str	r3, [r7, #28]
	float Dout = 0;
 8009cfe:	f04f 0300 	mov.w	r3, #0
 8009d02:	61bb      	str	r3, [r7, #24]

	pid->error[1] = pid->error[0];
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	68da      	ldr	r2, [r3, #12]
 8009d08:	687b      	ldr	r3, [r7, #4]
 8009d0a:	611a      	str	r2, [r3, #16]
	pid->error[0] = setpoint - curr_pt;
 8009d0c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8009d10:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8009d14:	f7f6 fab8 	bl	8000288 <__aeabi_dsub>
 8009d18:	4602      	mov	r2, r0
 8009d1a:	460b      	mov	r3, r1
 8009d1c:	4610      	mov	r0, r2
 8009d1e:	4619      	mov	r1, r3
 8009d20:	f7f6 ff62 	bl	8000be8 <__aeabi_d2f>
 8009d24:	4602      	mov	r2, r0
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	60da      	str	r2, [r3, #12]
	Pout = pid->error[0] * pid->kp * time_mult;
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	ed93 7a03 	vldr	s14, [r3, #12]
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	edd3 7a00 	vldr	s15, [r3]
 8009d36:	ee27 7a27 	vmul.f32	s14, s14, s15
 8009d3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d3c:	ee07 3a90 	vmov	s15, r3
 8009d40:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d44:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d48:	edc7 7a08 	vstr	s15, [r7, #32]
	Dout = (float)(pid->error[0] - pid->error[1]) * pid->kd * time_mult;
 8009d4c:	687b      	ldr	r3, [r7, #4]
 8009d4e:	ed93 7a03 	vldr	s14, [r3, #12]
 8009d52:	687b      	ldr	r3, [r7, #4]
 8009d54:	edd3 7a04 	vldr	s15, [r3, #16]
 8009d58:	ee37 7a67 	vsub.f32	s14, s14, s15
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	edd3 7a02 	vldr	s15, [r3, #8]
 8009d62:	ee27 7a27 	vmul.f32	s14, s14, s15
 8009d66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d68:	ee07 3a90 	vmov	s15, r3
 8009d6c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d70:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d74:	edc7 7a06 	vstr	s15, [r7, #24]
	pid->integral += pid->error[0] * pid->ki * time_mult;
 8009d78:	687b      	ldr	r3, [r7, #4]
 8009d7a:	ed93 7a05 	vldr	s14, [r3, #20]
 8009d7e:	687b      	ldr	r3, [r7, #4]
 8009d80:	edd3 6a03 	vldr	s13, [r3, #12]
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	edd3 7a01 	vldr	s15, [r3, #4]
 8009d8a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8009d8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009d90:	ee07 3a90 	vmov	s15, r3
 8009d94:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d98:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8009d9c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8009da0:	687b      	ldr	r3, [r7, #4]
 8009da2:	edc3 7a05 	vstr	s15, [r3, #20]
	float_minmax(&pid->integral, pid->int_max, 0);
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	f103 0214 	add.w	r2, r3, #20
 8009dac:	687b      	ldr	r3, [r7, #4]
 8009dae:	edd3 7a06 	vldr	s15, [r3, #24]
 8009db2:	eddf 0a14 	vldr	s1, [pc, #80]	@ 8009e04 <speed_pid+0x138>
 8009db6:	eeb0 0a67 	vmov.f32	s0, s15
 8009dba:	4610      	mov	r0, r2
 8009dbc:	f000 f82b 	bl	8009e16 <float_minmax>
	Iout = pid->integral;
 8009dc0:	687b      	ldr	r3, [r7, #4]
 8009dc2:	695b      	ldr	r3, [r3, #20]
 8009dc4:	61fb      	str	r3, [r7, #28]
	pid->output = Pout + Iout + Dout;
 8009dc6:	ed97 7a08 	vldr	s14, [r7, #32]
 8009dca:	edd7 7a07 	vldr	s15, [r7, #28]
 8009dce:	ee37 7a27 	vadd.f32	s14, s14, s15
 8009dd2:	edd7 7a06 	vldr	s15, [r7, #24]
 8009dd6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8009dda:	687b      	ldr	r3, [r7, #4]
 8009ddc:	edc3 7a08 	vstr	s15, [r3, #32]
	float_minmax(&pid->output, pid->max_out, 0);
 8009de0:	687b      	ldr	r3, [r7, #4]
 8009de2:	f103 0220 	add.w	r2, r3, #32
 8009de6:	687b      	ldr	r3, [r7, #4]
 8009de8:	edd3 7a07 	vldr	s15, [r3, #28]
 8009dec:	eddf 0a05 	vldr	s1, [pc, #20]	@ 8009e04 <speed_pid+0x138>
 8009df0:	eeb0 0a67 	vmov.f32	s0, s15
 8009df4:	4610      	mov	r0, r2
 8009df6:	f000 f80e 	bl	8009e16 <float_minmax>
}
 8009dfa:	bf00      	nop
 8009dfc:	3728      	adds	r7, #40	@ 0x28
 8009dfe:	46bd      	mov	sp, r7
 8009e00:	bd80      	pop	{r7, pc}
 8009e02:	bf00      	nop
 8009e04:	00000000 	.word	0x00000000

08009e08 <kill_can>:
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
	}
#endif
}

void kill_can() {
 8009e08:	b480      	push	{r7}
 8009e0a:	af00      	add	r7, sp, #0

}
 8009e0c:	bf00      	nop
 8009e0e:	46bd      	mov	sp, r7
 8009e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e14:	4770      	bx	lr

08009e16 <float_minmax>:
 * Limits the input float variable
 * @params motor_in: the pointer to the variable to be limited
 * @params motor_max: the positive maximum value for the variable
 */

void float_minmax(float *motor_in, float motor_max, float motor_min) {
 8009e16:	b480      	push	{r7}
 8009e18:	b085      	sub	sp, #20
 8009e1a:	af00      	add	r7, sp, #0
 8009e1c:	60f8      	str	r0, [r7, #12]
 8009e1e:	ed87 0a02 	vstr	s0, [r7, #8]
 8009e22:	edc7 0a01 	vstr	s1, [r7, #4]
	if (*motor_in > motor_max) {
 8009e26:	68fb      	ldr	r3, [r7, #12]
 8009e28:	edd3 7a00 	vldr	s15, [r3]
 8009e2c:	ed97 7a02 	vldr	s14, [r7, #8]
 8009e30:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e38:	d503      	bpl.n	8009e42 <float_minmax+0x2c>
		*motor_in = motor_max;
 8009e3a:	68fb      	ldr	r3, [r7, #12]
 8009e3c:	68ba      	ldr	r2, [r7, #8]
 8009e3e:	601a      	str	r2, [r3, #0]

//	if (fabs(*motor_in) < motor_min) {
//		*motor_in = 0;
//	}

}
 8009e40:	e013      	b.n	8009e6a <float_minmax+0x54>
	} else if (*motor_in < -motor_max) {
 8009e42:	68fb      	ldr	r3, [r7, #12]
 8009e44:	ed93 7a00 	vldr	s14, [r3]
 8009e48:	edd7 7a02 	vldr	s15, [r7, #8]
 8009e4c:	eef1 7a67 	vneg.f32	s15, s15
 8009e50:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8009e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e58:	d400      	bmi.n	8009e5c <float_minmax+0x46>
}
 8009e5a:	e006      	b.n	8009e6a <float_minmax+0x54>
		*motor_in = -motor_max;
 8009e5c:	edd7 7a02 	vldr	s15, [r7, #8]
 8009e60:	eef1 7a67 	vneg.f32	s15, s15
 8009e64:	68fb      	ldr	r3, [r7, #12]
 8009e66:	edc3 7a00 	vstr	s15, [r3]
}
 8009e6a:	bf00      	nop
 8009e6c:	3714      	adds	r7, #20
 8009e6e:	46bd      	mov	sp, r7
 8009e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e74:	4770      	bx	lr
	...

08009e78 <motor_control_task>:
extern QueueHandle_t g_buzzing_task_msg;
extern remote_cmd_t g_remote_cmd;

extern uint8_t g_safety_toggle;
volatile uint32_t g_motor_control_time;
void motor_control_task(void *argument) {
 8009e78:	b580      	push	{r7, lr}
 8009e7a:	b090      	sub	sp, #64	@ 0x40
 8009e7c:	af00      	add	r7, sp, #0
 8009e7e:	6078      	str	r0, [r7, #4]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 8009e80:	2300      	movs	r3, #0
 8009e82:	627b      	str	r3, [r7, #36]	@ 0x24
	CAN_tx_message.RTR = CAN_RTR_DATA;
 8009e84:	2300      	movs	r3, #0
 8009e86:	62bb      	str	r3, [r7, #40]	@ 0x28
	CAN_tx_message.DLC = 0x08;
 8009e88:	2308      	movs	r3, #8
 8009e8a:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t enabled_motors = 0;
 8009e8c:	2300      	movs	r3, #0
 8009e8e:	63bb      	str	r3, [r7, #56]	@ 0x38
	//initialise motor data
#ifdef LEFT_MOTOR_ID
	if (LEFT_MOTOR_ID < 25 && LEFT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LEFT_MOTOR_ID - 1);
 8009e90:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e92:	f043 0301 	orr.w	r3, r3, #1
 8009e96:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RIGHT_MOTOR_ID
	if (RIGHT_MOTOR_ID < 25 && RIGHT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RIGHT_MOTOR_ID - 1);
 8009e98:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009e9a:	f043 0302 	orr.w	r3, r3, #2
 8009e9e:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
#ifdef FR_MOTOR_ID
	if (FR_MOTOR_ID < 25 && FR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FR_MOTOR_ID - 1);
 8009ea0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009ea2:	f043 0310 	orr.w	r3, r3, #16
 8009ea6:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FL_MOTOR_ID
	if (FL_MOTOR_ID < 25 && FL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FL_MOTOR_ID - 1);
 8009ea8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009eaa:	f043 0320 	orr.w	r3, r3, #32
 8009eae:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BL_MOTOR_ID
	if (BL_MOTOR_ID < 25 && BL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BL_MOTOR_ID - 1);
 8009eb0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009eb2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8009eb6:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BR_MOTOR_ID
	if (BR_MOTOR_ID < 25 && BR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BR_MOTOR_ID - 1);
 8009eb8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009eba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8009ebe:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef LFRICTION_MOTOR_ID
	if (LFRICTION_MOTOR_ID < 25 && LFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LFRICTION_MOTOR_ID - 1);
 8009ec0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009ec2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8009ec6:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RFRICTION_MOTOR_ID
	if (RFRICTION_MOTOR_ID < 25 && RFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RFRICTION_MOTOR_ID - 1);
 8009ec8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009eca:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8009ece:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FEEDER_MOTOR_ID
	if (FEEDER_MOTOR_ID < 25 && FEEDER_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FEEDER_MOTOR_ID - 1);
 8009ed0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009ed2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8009ed6:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef PITCH_MOTOR_ID
	if (PITCH_MOTOR_ID < 25 && PITCH_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (PITCH_MOTOR_ID - 1);
 8009ed8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009eda:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8009ede:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef YAW_MOTOR_ID
	if (YAW_MOTOR_ID < 25 && YAW_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (YAW_MOTOR_ID - 1);
 8009ee0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009ee2:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8009ee6:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
	TickType_t start_time;
//	uint32_t last_time;
	while (1) {
		start_time = xTaskGetTickCount();
 8009ee8:	f00e fbd0 	bl	801868c <xTaskGetTickCount>
 8009eec:	4603      	mov	r3, r0
 8009eee:	60fb      	str	r3, [r7, #12]
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8009ef0:	4b30      	ldr	r3, [pc, #192]	@ (8009fb4 <motor_control_task+0x13c>)
 8009ef2:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8009ef6:	2b01      	cmp	r3, #1
 8009ef8:	d162      	bne.n	8009fc0 <motor_control_task+0x148>
			CAN_send_data[0] = 0;
 8009efa:	2300      	movs	r3, #0
 8009efc:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = 0;
 8009efe:	2300      	movs	r3, #0
 8009f00:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = 0;
 8009f02:	2300      	movs	r3, #0
 8009f04:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = 0;
 8009f06:	2300      	movs	r3, #0
 8009f08:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = 0;
 8009f0a:	2300      	movs	r3, #0
 8009f0c:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = 0;
 8009f0e:	2300      	movs	r3, #0
 8009f10:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = 0;
 8009f12:	2300      	movs	r3, #0
 8009f14:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = 0;
 8009f16:	2300      	movs	r3, #0
 8009f18:	76fb      	strb	r3, [r7, #27]
			CAN_tx_message.StdId = 0x200;
 8009f1a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009f1e:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009f20:	f107 0310 	add.w	r3, r7, #16
 8009f24:	f107 0214 	add.w	r2, r7, #20
 8009f28:	f107 011c 	add.w	r1, r7, #28
 8009f2c:	4822      	ldr	r0, [pc, #136]	@ (8009fb8 <motor_control_task+0x140>)
 8009f2e:	f001 fd45 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 8009f32:	f107 0310 	add.w	r3, r7, #16
 8009f36:	f107 0214 	add.w	r2, r7, #20
 8009f3a:	f107 011c 	add.w	r1, r7, #28
 8009f3e:	481f      	ldr	r0, [pc, #124]	@ (8009fbc <motor_control_task+0x144>)
 8009f40:	f001 fd3c 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);
 8009f44:	2001      	movs	r0, #1
 8009f46:	f00e fa4d 	bl	80183e4 <vTaskDelay>
			CAN_tx_message.StdId = 0x1FF;
 8009f4a:	f240 13ff 	movw	r3, #511	@ 0x1ff
 8009f4e:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009f50:	f107 0310 	add.w	r3, r7, #16
 8009f54:	f107 0214 	add.w	r2, r7, #20
 8009f58:	f107 011c 	add.w	r1, r7, #28
 8009f5c:	4816      	ldr	r0, [pc, #88]	@ (8009fb8 <motor_control_task+0x140>)
 8009f5e:	f001 fd2d 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 8009f62:	f107 0310 	add.w	r3, r7, #16
 8009f66:	f107 0214 	add.w	r2, r7, #20
 8009f6a:	f107 011c 	add.w	r1, r7, #28
 8009f6e:	4813      	ldr	r0, [pc, #76]	@ (8009fbc <motor_control_task+0x144>)
 8009f70:	f001 fd24 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);;
 8009f74:	2001      	movs	r0, #1
 8009f76:	f00e fa35 	bl	80183e4 <vTaskDelay>
			CAN_tx_message.StdId = 0x2FF;
 8009f7a:	f240 23ff 	movw	r3, #767	@ 0x2ff
 8009f7e:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 8009f80:	f107 0310 	add.w	r3, r7, #16
 8009f84:	f107 0214 	add.w	r2, r7, #20
 8009f88:	f107 011c 	add.w	r1, r7, #28
 8009f8c:	480a      	ldr	r0, [pc, #40]	@ (8009fb8 <motor_control_task+0x140>)
 8009f8e:	f001 fd15 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 8009f92:	f107 0310 	add.w	r3, r7, #16
 8009f96:	f107 0214 	add.w	r2, r7, #20
 8009f9a:	f107 011c 	add.w	r1, r7, #28
 8009f9e:	4807      	ldr	r0, [pc, #28]	@ (8009fbc <motor_control_task+0x144>)
 8009fa0:	f001 fd0c 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelayUntil(&start_time, 5);
 8009fa4:	f107 030c 	add.w	r3, r7, #12
 8009fa8:	2105      	movs	r1, #5
 8009faa:	4618      	mov	r0, r3
 8009fac:	f00e f99a 	bl	80182e4 <vTaskDelayUntil>
			continue;
 8009fb0:	e1dd      	b.n	800a36e <motor_control_task+0x4f6>
 8009fb2:	bf00      	nop
 8009fb4:	20000808 	.word	0x20000808
 8009fb8:	200008e4 	.word	0x200008e4
 8009fbc:	2000090c 	.word	0x2000090c
		}
		TickType_t delay = 0;
 8009fc0:	2300      	movs	r3, #0
 8009fc2:	63fb      	str	r3, [r7, #60]	@ 0x3c
		if (enabled_motors & 0x00000F) {
 8009fc4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009fc6:	f003 030f 	and.w	r3, r3, #15
 8009fca:	2b00      	cmp	r3, #0
 8009fcc:	d042      	beq.n	800a054 <motor_control_task+0x1dc>
			CAN_tx_message.StdId = 0x200;
 8009fce:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8009fd2:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x0].output;
 8009fd4:	4bb3      	ldr	r3, [pc, #716]	@ (800a2a4 <motor_control_task+0x42c>)
 8009fd6:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	@ 0xe0
 8009fda:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 8009fdc:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 8009fe0:	121b      	asrs	r3, r3, #8
 8009fe2:	b21b      	sxth	r3, r3
 8009fe4:	b2db      	uxtb	r3, r3
 8009fe6:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 8009fe8:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 8009fea:	b2db      	uxtb	r3, r3
 8009fec:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x1].output;
 8009fee:	4bad      	ldr	r3, [pc, #692]	@ (800a2a4 <motor_control_task+0x42c>)
 8009ff0:	f8b3 31d0 	ldrh.w	r3, [r3, #464]	@ 0x1d0
 8009ff4:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 8009ff6:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 8009ffa:	121b      	asrs	r3, r3, #8
 8009ffc:	b21b      	sxth	r3, r3
 8009ffe:	b2db      	uxtb	r3, r3
 800a000:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a002:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a004:	b2db      	uxtb	r3, r3
 800a006:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x2].output;
 800a008:	4ba6      	ldr	r3, [pc, #664]	@ (800a2a4 <motor_control_task+0x42c>)
 800a00a:	f8b3 32c0 	ldrh.w	r3, [r3, #704]	@ 0x2c0
 800a00e:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a010:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a014:	121b      	asrs	r3, r3, #8
 800a016:	b21b      	sxth	r3, r3
 800a018:	b2db      	uxtb	r3, r3
 800a01a:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a01c:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a01e:	b2db      	uxtb	r3, r3
 800a020:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x3].output;
 800a022:	4ba0      	ldr	r3, [pc, #640]	@ (800a2a4 <motor_control_task+0x42c>)
 800a024:	f8b3 33b0 	ldrh.w	r3, [r3, #944]	@ 0x3b0
 800a028:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a02a:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a02e:	121b      	asrs	r3, r3, #8
 800a030:	b21b      	sxth	r3, r3
 800a032:	b2db      	uxtb	r3, r3
 800a034:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a036:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a038:	b2db      	uxtb	r3, r3
 800a03a:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a03c:	f107 0310 	add.w	r3, r7, #16
 800a040:	f107 0214 	add.w	r2, r7, #20
 800a044:	f107 011c 	add.w	r1, r7, #28
 800a048:	4897      	ldr	r0, [pc, #604]	@ (800a2a8 <motor_control_task+0x430>)
 800a04a:	f001 fcb7 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a04e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a050:	3301      	adds	r3, #1
 800a052:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		if (enabled_motors & 0x00F000) {
 800a054:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a056:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800a05a:	2b00      	cmp	r3, #0
 800a05c:	d03e      	beq.n	800a0dc <motor_control_task+0x264>
			CAN_tx_message.StdId = 0x200;
 800a05e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800a062:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x0 + 12].output >> 8;
 800a064:	4b8f      	ldr	r3, [pc, #572]	@ (800a2a4 <motor_control_task+0x42c>)
 800a066:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800a06a:	121b      	asrs	r3, r3, #8
 800a06c:	b21b      	sxth	r3, r3
 800a06e:	b2db      	uxtb	r3, r3
 800a070:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x0 + 12].output;
 800a072:	4b8c      	ldr	r3, [pc, #560]	@ (800a2a4 <motor_control_task+0x42c>)
 800a074:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800a078:	b2db      	uxtb	r3, r3
 800a07a:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x1 + 12].output >> 8;
 800a07c:	4b89      	ldr	r3, [pc, #548]	@ (800a2a4 <motor_control_task+0x42c>)
 800a07e:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800a082:	121b      	asrs	r3, r3, #8
 800a084:	b21b      	sxth	r3, r3
 800a086:	b2db      	uxtb	r3, r3
 800a088:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x1 + 12].output;
 800a08a:	4b86      	ldr	r3, [pc, #536]	@ (800a2a4 <motor_control_task+0x42c>)
 800a08c:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800a090:	b2db      	uxtb	r3, r3
 800a092:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x2 + 12].output >> 8;
 800a094:	4b83      	ldr	r3, [pc, #524]	@ (800a2a4 <motor_control_task+0x42c>)
 800a096:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800a09a:	121b      	asrs	r3, r3, #8
 800a09c:	b21b      	sxth	r3, r3
 800a09e:	b2db      	uxtb	r3, r3
 800a0a0:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x2 + 12].output;
 800a0a2:	4b80      	ldr	r3, [pc, #512]	@ (800a2a4 <motor_control_task+0x42c>)
 800a0a4:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800a0a8:	b2db      	uxtb	r3, r3
 800a0aa:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x3 + 12].output >> 8;
 800a0ac:	4b7d      	ldr	r3, [pc, #500]	@ (800a2a4 <motor_control_task+0x42c>)
 800a0ae:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800a0b2:	121b      	asrs	r3, r3, #8
 800a0b4:	b21b      	sxth	r3, r3
 800a0b6:	b2db      	uxtb	r3, r3
 800a0b8:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x3 + 12].output;
 800a0ba:	4b7a      	ldr	r3, [pc, #488]	@ (800a2a4 <motor_control_task+0x42c>)
 800a0bc:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800a0c0:	b2db      	uxtb	r3, r3
 800a0c2:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a0c4:	f107 0310 	add.w	r3, r7, #16
 800a0c8:	f107 0214 	add.w	r2, r7, #20
 800a0cc:	f107 011c 	add.w	r1, r7, #28
 800a0d0:	4876      	ldr	r0, [pc, #472]	@ (800a2ac <motor_control_task+0x434>)
 800a0d2:	f001 fc73 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a0d6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a0d8:	3301      	adds	r3, #1
 800a0da:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}

		vTaskDelay(1);
 800a0dc:	2001      	movs	r0, #1
 800a0de:	f00e f981 	bl	80183e4 <vTaskDelay>

		if (enabled_motors & 0x0000F0) {
 800a0e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a0e4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800a0e8:	2b00      	cmp	r3, #0
 800a0ea:	d042      	beq.n	800a172 <motor_control_task+0x2fa>
			CAN_tx_message.StdId = 0x1FF;
 800a0ec:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a0f0:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x4].output;
 800a0f2:	4b6c      	ldr	r3, [pc, #432]	@ (800a2a4 <motor_control_task+0x42c>)
 800a0f4:	f8b3 34a0 	ldrh.w	r3, [r3, #1184]	@ 0x4a0
 800a0f8:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a0fa:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a0fe:	121b      	asrs	r3, r3, #8
 800a100:	b21b      	sxth	r3, r3
 800a102:	b2db      	uxtb	r3, r3
 800a104:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a106:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a108:	b2db      	uxtb	r3, r3
 800a10a:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x5].output;
 800a10c:	4b65      	ldr	r3, [pc, #404]	@ (800a2a4 <motor_control_task+0x42c>)
 800a10e:	f8b3 3590 	ldrh.w	r3, [r3, #1424]	@ 0x590
 800a112:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a114:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a118:	121b      	asrs	r3, r3, #8
 800a11a:	b21b      	sxth	r3, r3
 800a11c:	b2db      	uxtb	r3, r3
 800a11e:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a120:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a122:	b2db      	uxtb	r3, r3
 800a124:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x6].output;
 800a126:	4b5f      	ldr	r3, [pc, #380]	@ (800a2a4 <motor_control_task+0x42c>)
 800a128:	f8b3 3680 	ldrh.w	r3, [r3, #1664]	@ 0x680
 800a12c:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a12e:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a132:	121b      	asrs	r3, r3, #8
 800a134:	b21b      	sxth	r3, r3
 800a136:	b2db      	uxtb	r3, r3
 800a138:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a13a:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a13c:	b2db      	uxtb	r3, r3
 800a13e:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x7].output;
 800a140:	4b58      	ldr	r3, [pc, #352]	@ (800a2a4 <motor_control_task+0x42c>)
 800a142:	f8b3 3770 	ldrh.w	r3, [r3, #1904]	@ 0x770
 800a146:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a148:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a14c:	121b      	asrs	r3, r3, #8
 800a14e:	b21b      	sxth	r3, r3
 800a150:	b2db      	uxtb	r3, r3
 800a152:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a154:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a156:	b2db      	uxtb	r3, r3
 800a158:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a15a:	f107 0310 	add.w	r3, r7, #16
 800a15e:	f107 0214 	add.w	r2, r7, #20
 800a162:	f107 011c 	add.w	r1, r7, #28
 800a166:	4850      	ldr	r0, [pc, #320]	@ (800a2a8 <motor_control_task+0x430>)
 800a168:	f001 fc28 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a16c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a16e:	3301      	adds	r3, #1
 800a170:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x0F0000) {
 800a172:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a174:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 800a178:	2b00      	cmp	r3, #0
 800a17a:	d04a      	beq.n	800a212 <motor_control_task+0x39a>
			CAN_tx_message.StdId = 0x1FF;
 800a17c:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800a180:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x4 + 12].output >> 8;
 800a182:	4b48      	ldr	r3, [pc, #288]	@ (800a2a4 <motor_control_task+0x42c>)
 800a184:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800a188:	121b      	asrs	r3, r3, #8
 800a18a:	b21b      	sxth	r3, r3
 800a18c:	b2db      	uxtb	r3, r3
 800a18e:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x4 + 12].output;
 800a190:	4b44      	ldr	r3, [pc, #272]	@ (800a2a4 <motor_control_task+0x42c>)
 800a192:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800a196:	b2db      	uxtb	r3, r3
 800a198:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x5 + 12].output >> 8;
 800a19a:	4b42      	ldr	r3, [pc, #264]	@ (800a2a4 <motor_control_task+0x42c>)
 800a19c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a1a0:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800a1a4:	121b      	asrs	r3, r3, #8
 800a1a6:	b21b      	sxth	r3, r3
 800a1a8:	b2db      	uxtb	r3, r3
 800a1aa:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x5 + 12].output;
 800a1ac:	4b3d      	ldr	r3, [pc, #244]	@ (800a2a4 <motor_control_task+0x42c>)
 800a1ae:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a1b2:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800a1b6:	b2db      	uxtb	r3, r3
 800a1b8:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x6 + 12].output >> 8;
 800a1ba:	4b3a      	ldr	r3, [pc, #232]	@ (800a2a4 <motor_control_task+0x42c>)
 800a1bc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a1c0:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800a1c4:	121b      	asrs	r3, r3, #8
 800a1c6:	b21b      	sxth	r3, r3
 800a1c8:	b2db      	uxtb	r3, r3
 800a1ca:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x6 + 12].output;
 800a1cc:	4b35      	ldr	r3, [pc, #212]	@ (800a2a4 <motor_control_task+0x42c>)
 800a1ce:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a1d2:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800a1d6:	b2db      	uxtb	r3, r3
 800a1d8:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x7 + 12].output >> 8;
 800a1da:	4b32      	ldr	r3, [pc, #200]	@ (800a2a4 <motor_control_task+0x42c>)
 800a1dc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a1e0:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800a1e4:	121b      	asrs	r3, r3, #8
 800a1e6:	b21b      	sxth	r3, r3
 800a1e8:	b2db      	uxtb	r3, r3
 800a1ea:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x7 + 12].output;
 800a1ec:	4b2d      	ldr	r3, [pc, #180]	@ (800a2a4 <motor_control_task+0x42c>)
 800a1ee:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a1f2:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800a1f6:	b2db      	uxtb	r3, r3
 800a1f8:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a1fa:	f107 0310 	add.w	r3, r7, #16
 800a1fe:	f107 0214 	add.w	r2, r7, #20
 800a202:	f107 011c 	add.w	r1, r7, #28
 800a206:	4829      	ldr	r0, [pc, #164]	@ (800a2ac <motor_control_task+0x434>)
 800a208:	f001 fbd8 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a20c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a20e:	3301      	adds	r3, #1
 800a210:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x000F00) {
 800a212:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a214:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800a218:	2b00      	cmp	r3, #0
 800a21a:	d049      	beq.n	800a2b0 <motor_control_task+0x438>
			CAN_tx_message.StdId = 0x2FF;
 800a21c:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a220:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x8].output;
 800a222:	4b20      	ldr	r3, [pc, #128]	@ (800a2a4 <motor_control_task+0x42c>)
 800a224:	f8b3 3860 	ldrh.w	r3, [r3, #2144]	@ 0x860
 800a228:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800a22a:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a22e:	121b      	asrs	r3, r3, #8
 800a230:	b21b      	sxth	r3, r3
 800a232:	b2db      	uxtb	r3, r3
 800a234:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800a236:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a238:	b2db      	uxtb	r3, r3
 800a23a:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x9].output;
 800a23c:	4b19      	ldr	r3, [pc, #100]	@ (800a2a4 <motor_control_task+0x42c>)
 800a23e:	f8b3 3950 	ldrh.w	r3, [r3, #2384]	@ 0x950
 800a242:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800a244:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a248:	121b      	asrs	r3, r3, #8
 800a24a:	b21b      	sxth	r3, r3
 800a24c:	b2db      	uxtb	r3, r3
 800a24e:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800a250:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a252:	b2db      	uxtb	r3, r3
 800a254:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0xA].output;
 800a256:	4b13      	ldr	r3, [pc, #76]	@ (800a2a4 <motor_control_task+0x42c>)
 800a258:	f8b3 3a40 	ldrh.w	r3, [r3, #2624]	@ 0xa40
 800a25c:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800a25e:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a262:	121b      	asrs	r3, r3, #8
 800a264:	b21b      	sxth	r3, r3
 800a266:	b2db      	uxtb	r3, r3
 800a268:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800a26a:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a26c:	b2db      	uxtb	r3, r3
 800a26e:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0xB].output;
 800a270:	4b0c      	ldr	r3, [pc, #48]	@ (800a2a4 <motor_control_task+0x42c>)
 800a272:	f8b3 3b30 	ldrh.w	r3, [r3, #2864]	@ 0xb30
 800a276:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800a278:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800a27c:	121b      	asrs	r3, r3, #8
 800a27e:	b21b      	sxth	r3, r3
 800a280:	b2db      	uxtb	r3, r3
 800a282:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800a284:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800a286:	b2db      	uxtb	r3, r3
 800a288:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800a28a:	f107 0310 	add.w	r3, r7, #16
 800a28e:	f107 0214 	add.w	r2, r7, #20
 800a292:	f107 011c 	add.w	r1, r7, #28
 800a296:	4804      	ldr	r0, [pc, #16]	@ (800a2a8 <motor_control_task+0x430>)
 800a298:	f001 fb90 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a29c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a29e:	3301      	adds	r3, #1
 800a2a0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a2a2:	e005      	b.n	800a2b0 <motor_control_task+0x438>
 800a2a4:	20001e48 	.word	0x20001e48
 800a2a8:	200008e4 	.word	0x200008e4
 800a2ac:	2000090c 	.word	0x2000090c
		}

		if (enabled_motors & 0xF00000) {
 800a2b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a2b2:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 800a2b6:	2b00      	cmp	r3, #0
 800a2b8:	d04e      	beq.n	800a358 <motor_control_task+0x4e0>
			CAN_tx_message.StdId = 0x2FF;
 800a2ba:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800a2be:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x8 + 12].output >> 8;
 800a2c0:	4b2b      	ldr	r3, [pc, #172]	@ (800a370 <motor_control_task+0x4f8>)
 800a2c2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2c6:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800a2ca:	121b      	asrs	r3, r3, #8
 800a2cc:	b21b      	sxth	r3, r3
 800a2ce:	b2db      	uxtb	r3, r3
 800a2d0:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x8 + 12].output;
 800a2d2:	4b27      	ldr	r3, [pc, #156]	@ (800a370 <motor_control_task+0x4f8>)
 800a2d4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2d8:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800a2dc:	b2db      	uxtb	r3, r3
 800a2de:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] =  g_can_motors[0x9 + 12].output >> 8;
 800a2e0:	4b23      	ldr	r3, [pc, #140]	@ (800a370 <motor_control_task+0x4f8>)
 800a2e2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2e6:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800a2ea:	121b      	asrs	r3, r3, #8
 800a2ec:	b21b      	sxth	r3, r3
 800a2ee:	b2db      	uxtb	r3, r3
 800a2f0:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] =  g_can_motors[0x9 + 12].output;
 800a2f2:	4b1f      	ldr	r3, [pc, #124]	@ (800a370 <motor_control_task+0x4f8>)
 800a2f4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a2f8:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800a2fc:	b2db      	uxtb	r3, r3
 800a2fe:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0xA + 12].output >> 8;
 800a300:	4b1b      	ldr	r3, [pc, #108]	@ (800a370 <motor_control_task+0x4f8>)
 800a302:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a306:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800a30a:	121b      	asrs	r3, r3, #8
 800a30c:	b21b      	sxth	r3, r3
 800a30e:	b2db      	uxtb	r3, r3
 800a310:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0xA + 12].output;
 800a312:	4b17      	ldr	r3, [pc, #92]	@ (800a370 <motor_control_task+0x4f8>)
 800a314:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a318:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800a31c:	b2db      	uxtb	r3, r3
 800a31e:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0xB + 12].output >> 8;
 800a320:	4b13      	ldr	r3, [pc, #76]	@ (800a370 <motor_control_task+0x4f8>)
 800a322:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a326:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800a32a:	121b      	asrs	r3, r3, #8
 800a32c:	b21b      	sxth	r3, r3
 800a32e:	b2db      	uxtb	r3, r3
 800a330:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0xB + 12].output;
 800a332:	4b0f      	ldr	r3, [pc, #60]	@ (800a370 <motor_control_task+0x4f8>)
 800a334:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800a338:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800a33c:	b2db      	uxtb	r3, r3
 800a33e:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800a340:	f107 0310 	add.w	r3, r7, #16
 800a344:	f107 0214 	add.w	r2, r7, #20
 800a348:	f107 011c 	add.w	r1, r7, #28
 800a34c:	4809      	ldr	r0, [pc, #36]	@ (800a374 <motor_control_task+0x4fc>)
 800a34e:	f001 fb35 	bl	800b9bc <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800a352:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a354:	3301      	adds	r3, #1
 800a356:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		delay = (delay > 5) ? delay : 5;
 800a358:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a35a:	2b05      	cmp	r3, #5
 800a35c:	bf38      	it	cc
 800a35e:	2305      	movcc	r3, #5
 800a360:	63fb      	str	r3, [r7, #60]	@ 0x3c
//		last_time = get_microseconds();
		vTaskDelayUntil(&start_time, 2);
 800a362:	f107 030c 	add.w	r3, r7, #12
 800a366:	2102      	movs	r1, #2
 800a368:	4618      	mov	r0, r3
 800a36a:	f00d ffbb 	bl	80182e4 <vTaskDelayUntil>
	while (1) {
 800a36e:	e5bb      	b.n	8009ee8 <motor_control_task+0x70>
 800a370:	20001e48 	.word	0x20001e48
 800a374:	2000090c 	.word	0x2000090c

0800a378 <motors_process_task>:
double rev[24] = {0};
extern float motorOutRatio;



void motors_process_task(void *argument) {
 800a378:	b5b0      	push	{r4, r5, r7, lr}
 800a37a:	b08e      	sub	sp, #56	@ 0x38
 800a37c:	af00      	add	r7, sp, #0
 800a37e:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800a380:	f04f 0200 	mov.w	r2, #0
 800a384:	f04f 0300 	mov.w	r3, #0
 800a388:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
	double endtime = 0;
 800a38c:	f04f 0200 	mov.w	r2, #0
 800a390:	f04f 0300 	mov.w	r3, #0
 800a394:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
	double dt;
	vTaskDelay(5);
 800a398:	2005      	movs	r0, #5
 800a39a:	f00e f823 	bl	80183e4 <vTaskDelay>
	double leftWheel_offset = (double)g_can_motors[1].raw_data.angle[0];
 800a39e:	4b7c      	ldr	r3, [pc, #496]	@ (800a590 <motors_process_task+0x218>)
 800a3a0:	f9b3 30f4 	ldrsh.w	r3, [r3, #244]	@ 0xf4
 800a3a4:	4618      	mov	r0, r3
 800a3a6:	f7f6 f8bd 	bl	8000524 <__aeabi_i2d>
 800a3aa:	4602      	mov	r2, r0
 800a3ac:	460b      	mov	r3, r1
 800a3ae:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double rightWheel_offset = (double)g_can_motors[0].raw_data.angle[0];
 800a3b2:	4b77      	ldr	r3, [pc, #476]	@ (800a590 <motors_process_task+0x218>)
 800a3b4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800a3b8:	4618      	mov	r0, r3
 800a3ba:	f7f6 f8b3 	bl	8000524 <__aeabi_i2d>
 800a3be:	4602      	mov	r2, r0
 800a3c0:	460b      	mov	r3, r1
 800a3c2:	e9c7 2306 	strd	r2, r3, [r7, #24]
	g_can_motors[1].rpm_pid.kp = 5000;
 800a3c6:	4b72      	ldr	r3, [pc, #456]	@ (800a590 <motors_process_task+0x218>)
 800a3c8:	4a72      	ldr	r2, [pc, #456]	@ (800a594 <motors_process_task+0x21c>)
 800a3ca:	f8c3 2128 	str.w	r2, [r3, #296]	@ 0x128
	g_can_motors[0].rpm_pid.kp = 5000;
 800a3ce:	4b70      	ldr	r3, [pc, #448]	@ (800a590 <motors_process_task+0x218>)
 800a3d0:	4a70      	ldr	r2, [pc, #448]	@ (800a594 <motors_process_task+0x21c>)
 800a3d2:	639a      	str	r2, [r3, #56]	@ 0x38
	g_can_motors[1].rpm_pid.ki = 0;
 800a3d4:	4b6e      	ldr	r3, [pc, #440]	@ (800a590 <motors_process_task+0x218>)
 800a3d6:	f04f 0200 	mov.w	r2, #0
 800a3da:	f8c3 212c 	str.w	r2, [r3, #300]	@ 0x12c
	g_can_motors[0].rpm_pid.ki = 0;
 800a3de:	4b6c      	ldr	r3, [pc, #432]	@ (800a590 <motors_process_task+0x218>)
 800a3e0:	f04f 0200 	mov.w	r2, #0
 800a3e4:	63da      	str	r2, [r3, #60]	@ 0x3c
	g_can_motors[1].rpm_pid.kd = 0;
 800a3e6:	4b6a      	ldr	r3, [pc, #424]	@ (800a590 <motors_process_task+0x218>)
 800a3e8:	f04f 0200 	mov.w	r2, #0
 800a3ec:	f8c3 2130 	str.w	r2, [r3, #304]	@ 0x130
	g_can_motors[0].rpm_pid.kd = 0;
 800a3f0:	4b67      	ldr	r3, [pc, #412]	@ (800a590 <motors_process_task+0x218>)
 800a3f2:	f04f 0200 	mov.w	r2, #0
 800a3f6:	641a      	str	r2, [r3, #64]	@ 0x40
	g_can_motors[1].rpm_pid.max_out = 10000;
 800a3f8:	4b65      	ldr	r3, [pc, #404]	@ (800a590 <motors_process_task+0x218>)
 800a3fa:	4a67      	ldr	r2, [pc, #412]	@ (800a598 <motors_process_task+0x220>)
 800a3fc:	f8c3 2144 	str.w	r2, [r3, #324]	@ 0x144
	g_can_motors[0].rpm_pid.max_out = 10000;
 800a400:	4b63      	ldr	r3, [pc, #396]	@ (800a590 <motors_process_task+0x218>)
 800a402:	4a65      	ldr	r2, [pc, #404]	@ (800a598 <motors_process_task+0x220>)
 800a404:	655a      	str	r2, [r3, #84]	@ 0x54
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800a406:	f7f7 fedb 	bl	80021c0 <get_microseconds>
 800a40a:	4603      	mov	r3, r0
 800a40c:	4618      	mov	r0, r3
 800a40e:	f7f6 f879 	bl	8000504 <__aeabi_ui2d>
 800a412:	4602      	mov	r2, r0
 800a414:	460b      	mov	r3, r1
 800a416:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
        dt = endtime - starttime;
 800a41a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800a41e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800a422:	f7f5 ff31 	bl	8000288 <__aeabi_dsub>
 800a426:	4602      	mov	r2, r0
 800a428:	460b      	mov	r3, r1
 800a42a:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800a42e:	f00e f92d 	bl	801868c <xTaskGetTickCount>
 800a432:	4603      	mov	r3, r0
 800a434:	60fb      	str	r3, [r7, #12]
        raw_angle_to_rad(g_can_motors); // Pass the array directly
 800a436:	4856      	ldr	r0, [pc, #344]	@ (800a590 <motors_process_task+0x218>)
 800a438:	f000 f8ca 	bl	800a5d0 <raw_angle_to_rad>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[4], +1.57, 1);//3.62+PI+ // left joint[1]
 800a43c:	2101      	movs	r1, #1
 800a43e:	ed9f 0a57 	vldr	s0, [pc, #348]	@ 800a59c <motors_process_task+0x224>
 800a442:	4857      	ldr	r0, [pc, #348]	@ (800a5a0 <motors_process_task+0x228>)
 800a444:	f000 f94c 	bl	800a6e0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[5], +0.48, 1); // leftjoint[0]
 800a448:	2101      	movs	r1, #1
 800a44a:	ed9f 0a56 	vldr	s0, [pc, #344]	@ 800a5a4 <motors_process_task+0x22c>
 800a44e:	4856      	ldr	r0, [pc, #344]	@ (800a5a8 <motors_process_task+0x230>)
 800a450:	f000 f946 	bl	800a6e0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[6], 0-1.62, 1);
 800a454:	2101      	movs	r1, #1
 800a456:	ed9f 0a55 	vldr	s0, [pc, #340]	@ 800a5ac <motors_process_task+0x234>
 800a45a:	4855      	ldr	r0, [pc, #340]	@ (800a5b0 <motors_process_task+0x238>)
 800a45c:	f000 f940 	bl	800a6e0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[7], -5.76, 1);
 800a460:	2101      	movs	r1, #1
 800a462:	ed9f 0a54 	vldr	s0, [pc, #336]	@ 800a5b4 <motors_process_task+0x23c>
 800a466:	4854      	ldr	r0, [pc, #336]	@ (800a5b8 <motors_process_task+0x240>)
 800a468:	f000 f93a 	bl	800a6e0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[1], 0, -1);
 800a46c:	f04f 31ff 	mov.w	r1, #4294967295
 800a470:	ed9f 0a52 	vldr	s0, [pc, #328]	@ 800a5bc <motors_process_task+0x244>
 800a474:	4852      	ldr	r0, [pc, #328]	@ (800a5c0 <motors_process_task+0x248>)
 800a476:	f000 f933 	bl	800a6e0 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[0], 0, 1);
 800a47a:	2101      	movs	r1, #1
 800a47c:	ed9f 0a4f 	vldr	s0, [pc, #316]	@ 800a5bc <motors_process_task+0x244>
 800a480:	4843      	ldr	r0, [pc, #268]	@ (800a590 <motors_process_task+0x218>)
 800a482:	f000 f92d 	bl	800a6e0 <motors_raw_angle_to_desired_angle_dir>
        motors_torque_to_current_6020(&g_can_motors[4],0,1.0);
 800a486:	ed9f 1b3e 	vldr	d1, [pc, #248]	@ 800a580 <motors_process_task+0x208>
 800a48a:	ed9f 0a4c 	vldr	s0, [pc, #304]	@ 800a5bc <motors_process_task+0x244>
 800a48e:	4844      	ldr	r0, [pc, #272]	@ (800a5a0 <motors_process_task+0x228>)
 800a490:	f000 f986 	bl	800a7a0 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[5],0,1.0);
 800a494:	ed9f 1b3a 	vldr	d1, [pc, #232]	@ 800a580 <motors_process_task+0x208>
 800a498:	ed9f 0a48 	vldr	s0, [pc, #288]	@ 800a5bc <motors_process_task+0x244>
 800a49c:	4842      	ldr	r0, [pc, #264]	@ (800a5a8 <motors_process_task+0x230>)
 800a49e:	f000 f97f 	bl	800a7a0 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[6],0,1.0);
 800a4a2:	ed9f 1b37 	vldr	d1, [pc, #220]	@ 800a580 <motors_process_task+0x208>
 800a4a6:	ed9f 0a45 	vldr	s0, [pc, #276]	@ 800a5bc <motors_process_task+0x244>
 800a4aa:	4841      	ldr	r0, [pc, #260]	@ (800a5b0 <motors_process_task+0x238>)
 800a4ac:	f000 f978 	bl	800a7a0 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[7],0,1.0);
 800a4b0:	ed9f 1b33 	vldr	d1, [pc, #204]	@ 800a580 <motors_process_task+0x208>
 800a4b4:	ed9f 0a41 	vldr	s0, [pc, #260]	@ 800a5bc <motors_process_task+0x244>
 800a4b8:	483f      	ldr	r0, [pc, #252]	@ (800a5b8 <motors_process_task+0x240>)
 800a4ba:	f000 f971 	bl	800a7a0 <motors_torque_to_current_6020>
        motors_torque_to_current_3508_gearbox(&g_can_motors[0],15,1.0);
 800a4be:	ed9f 1b30 	vldr	d1, [pc, #192]	@ 800a580 <motors_process_task+0x208>
 800a4c2:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800a4c6:	4832      	ldr	r0, [pc, #200]	@ (800a590 <motors_process_task+0x218>)
 800a4c8:	f000 f9f6 	bl	800a8b8 <motors_torque_to_current_3508_gearbox>
        motors_torque_to_current_3508_gearbox(&g_can_motors[1],15,-1.0);
 800a4cc:	ed9f 1b2e 	vldr	d1, [pc, #184]	@ 800a588 <motors_process_task+0x210>
 800a4d0:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800a4d4:	483a      	ldr	r0, [pc, #232]	@ (800a5c0 <motors_process_task+0x248>)
 800a4d6:	f000 f9ef 	bl	800a8b8 <motors_torque_to_current_3508_gearbox>


        speed_pid((double)g_can_motors[1].torque ,(double)g_can_motors[1].raw_data.rpm/1000, &g_can_motors[1].rpm_pid);
 800a4da:	4b2d      	ldr	r3, [pc, #180]	@ (800a590 <motors_process_task+0x218>)
 800a4dc:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800a4e0:	4618      	mov	r0, r3
 800a4e2:	f7f6 f831 	bl	8000548 <__aeabi_f2d>
 800a4e6:	4604      	mov	r4, r0
 800a4e8:	460d      	mov	r5, r1
 800a4ea:	4b29      	ldr	r3, [pc, #164]	@ (800a590 <motors_process_task+0x218>)
 800a4ec:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	@ 0xf8
 800a4f0:	4618      	mov	r0, r3
 800a4f2:	f7f6 f817 	bl	8000524 <__aeabi_i2d>
 800a4f6:	f04f 0200 	mov.w	r2, #0
 800a4fa:	4b32      	ldr	r3, [pc, #200]	@ (800a5c4 <motors_process_task+0x24c>)
 800a4fc:	f7f6 f9a6 	bl	800084c <__aeabi_ddiv>
 800a500:	4602      	mov	r2, r0
 800a502:	460b      	mov	r3, r1
 800a504:	ec43 2b17 	vmov	d7, r2, r3
 800a508:	482f      	ldr	r0, [pc, #188]	@ (800a5c8 <motors_process_task+0x250>)
 800a50a:	eeb0 1a47 	vmov.f32	s2, s14
 800a50e:	eef0 1a67 	vmov.f32	s3, s15
 800a512:	ec45 4b10 	vmov	d0, r4, r5
 800a516:	f7ff fbd9 	bl	8009ccc <speed_pid>
        speed_pid((double)g_can_motors[0].torque ,(double)g_can_motors[0].raw_data.rpm/1000, &g_can_motors[0].rpm_pid);
 800a51a:	4b1d      	ldr	r3, [pc, #116]	@ (800a590 <motors_process_task+0x218>)
 800a51c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a51e:	4618      	mov	r0, r3
 800a520:	f7f6 f812 	bl	8000548 <__aeabi_f2d>
 800a524:	4604      	mov	r4, r0
 800a526:	460d      	mov	r5, r1
 800a528:	4b19      	ldr	r3, [pc, #100]	@ (800a590 <motors_process_task+0x218>)
 800a52a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a52e:	4618      	mov	r0, r3
 800a530:	f7f5 fff8 	bl	8000524 <__aeabi_i2d>
 800a534:	f04f 0200 	mov.w	r2, #0
 800a538:	4b22      	ldr	r3, [pc, #136]	@ (800a5c4 <motors_process_task+0x24c>)
 800a53a:	f7f6 f987 	bl	800084c <__aeabi_ddiv>
 800a53e:	4602      	mov	r2, r0
 800a540:	460b      	mov	r3, r1
 800a542:	ec43 2b17 	vmov	d7, r2, r3
 800a546:	4821      	ldr	r0, [pc, #132]	@ (800a5cc <motors_process_task+0x254>)
 800a548:	eeb0 1a47 	vmov.f32	s2, s14
 800a54c:	eef0 1a67 	vmov.f32	s3, s15
 800a550:	ec45 4b10 	vmov	d0, r4, r5
 800a554:	f7ff fbba 	bl	8009ccc <speed_pid>
//        g_can_motors[1].output = g_can_motors[1].rpm_pid.output;
//        g_can_motors[0].output = g_can_motors[0].rpm_pid.output;
        starttime = get_microseconds();
 800a558:	f7f7 fe32 	bl	80021c0 <get_microseconds>
 800a55c:	4603      	mov	r3, r0
 800a55e:	4618      	mov	r0, r3
 800a560:	f7f5 ffd0 	bl	8000504 <__aeabi_ui2d>
 800a564:	4602      	mov	r2, r0
 800a566:	460b      	mov	r3, r1
 800a568:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30




        vTaskDelayUntil(&start_time, 5);
 800a56c:	f107 030c 	add.w	r3, r7, #12
 800a570:	2105      	movs	r1, #5
 800a572:	4618      	mov	r0, r3
 800a574:	f00d feb6 	bl	80182e4 <vTaskDelayUntil>
        endtime = get_microseconds();
 800a578:	bf00      	nop
 800a57a:	e744      	b.n	800a406 <motors_process_task+0x8e>
 800a57c:	f3af 8000 	nop.w
 800a580:	00000000 	.word	0x00000000
 800a584:	3ff00000 	.word	0x3ff00000
 800a588:	00000000 	.word	0x00000000
 800a58c:	bff00000 	.word	0xbff00000
 800a590:	20001e48 	.word	0x20001e48
 800a594:	459c4000 	.word	0x459c4000
 800a598:	461c4000 	.word	0x461c4000
 800a59c:	3fc8f5c3 	.word	0x3fc8f5c3
 800a5a0:	20002208 	.word	0x20002208
 800a5a4:	3ef5c28f 	.word	0x3ef5c28f
 800a5a8:	200022f8 	.word	0x200022f8
 800a5ac:	bfcf5c29 	.word	0xbfcf5c29
 800a5b0:	200023e8 	.word	0x200023e8
 800a5b4:	c0b851ec 	.word	0xc0b851ec
 800a5b8:	200024d8 	.word	0x200024d8
 800a5bc:	00000000 	.word	0x00000000
 800a5c0:	20001f38 	.word	0x20001f38
 800a5c4:	408f4000 	.word	0x408f4000
 800a5c8:	20001f70 	.word	0x20001f70
 800a5cc:	20001e80 	.word	0x20001e80

0800a5d0 <raw_angle_to_rad>:
    }
}

void raw_angle_to_rad(motor_data_t motor[]) { // Change the parameter to accept an array
 800a5d0:	b590      	push	{r4, r7, lr}
 800a5d2:	b087      	sub	sp, #28
 800a5d4:	af00      	add	r7, sp, #0
 800a5d6:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 24; i++) {
 800a5d8:	2300      	movs	r3, #0
 800a5da:	617b      	str	r3, [r7, #20]
 800a5dc:	e06b      	b.n	800a6b6 <raw_angle_to_rad+0xe6>
        // Update moving average history
        double continuous_angle = motor[i].raw_data.angle[0] + (-motor[i].angle_data.rev*8192);
 800a5de:	697a      	ldr	r2, [r7, #20]
 800a5e0:	4613      	mov	r3, r2
 800a5e2:	011b      	lsls	r3, r3, #4
 800a5e4:	1a9b      	subs	r3, r3, r2
 800a5e6:	011b      	lsls	r3, r3, #4
 800a5e8:	461a      	mov	r2, r3
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	4413      	add	r3, r2
 800a5ee:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800a5f2:	4619      	mov	r1, r3
 800a5f4:	697a      	ldr	r2, [r7, #20]
 800a5f6:	4613      	mov	r3, r2
 800a5f8:	011b      	lsls	r3, r3, #4
 800a5fa:	1a9b      	subs	r3, r3, r2
 800a5fc:	011b      	lsls	r3, r3, #4
 800a5fe:	461a      	mov	r2, r3
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	4413      	add	r3, r2
 800a604:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800a608:	4613      	mov	r3, r2
 800a60a:	04db      	lsls	r3, r3, #19
 800a60c:	1a9b      	subs	r3, r3, r2
 800a60e:	035b      	lsls	r3, r3, #13
 800a610:	440b      	add	r3, r1
 800a612:	4618      	mov	r0, r3
 800a614:	f7f5 ff86 	bl	8000524 <__aeabi_i2d>
 800a618:	4602      	mov	r2, r0
 800a61a:	460b      	mov	r3, r1
 800a61c:	e9c7 2302 	strd	r2, r3, [r7, #8]
        motor[i].raw_angle_rad = (continuous_angle / 8191.0) * 2 * PI;
 800a620:	a32a      	add	r3, pc, #168	@ (adr r3, 800a6cc <raw_angle_to_rad+0xfc>)
 800a622:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a626:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a62a:	f7f6 f90f 	bl	800084c <__aeabi_ddiv>
 800a62e:	4602      	mov	r2, r0
 800a630:	460b      	mov	r3, r1
 800a632:	4610      	mov	r0, r2
 800a634:	4619      	mov	r1, r3
 800a636:	4602      	mov	r2, r0
 800a638:	460b      	mov	r3, r1
 800a63a:	f7f5 fe27 	bl	800028c <__adddf3>
 800a63e:	4602      	mov	r2, r0
 800a640:	460b      	mov	r3, r1
 800a642:	4610      	mov	r0, r2
 800a644:	4619      	mov	r1, r3
 800a646:	a323      	add	r3, pc, #140	@ (adr r3, 800a6d4 <raw_angle_to_rad+0x104>)
 800a648:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a64c:	f7f5 ffd4 	bl	80005f8 <__aeabi_dmul>
 800a650:	4602      	mov	r2, r0
 800a652:	460b      	mov	r3, r1
 800a654:	4610      	mov	r0, r2
 800a656:	4619      	mov	r1, r3
 800a658:	697a      	ldr	r2, [r7, #20]
 800a65a:	4613      	mov	r3, r2
 800a65c:	011b      	lsls	r3, r3, #4
 800a65e:	1a9b      	subs	r3, r3, r2
 800a660:	011b      	lsls	r3, r3, #4
 800a662:	461a      	mov	r2, r3
 800a664:	687b      	ldr	r3, [r7, #4]
 800a666:	189c      	adds	r4, r3, r2
 800a668:	f7f6 fabe 	bl	8000be8 <__aeabi_d2f>
 800a66c:	4603      	mov	r3, r0
 800a66e:	6123      	str	r3, [r4, #16]
        motor[i].raw_angle_deg = (continuous_angle / 8191.0) * 360;
 800a670:	a316      	add	r3, pc, #88	@ (adr r3, 800a6cc <raw_angle_to_rad+0xfc>)
 800a672:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a676:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a67a:	f7f6 f8e7 	bl	800084c <__aeabi_ddiv>
 800a67e:	4602      	mov	r2, r0
 800a680:	460b      	mov	r3, r1
 800a682:	4610      	mov	r0, r2
 800a684:	4619      	mov	r1, r3
 800a686:	f04f 0200 	mov.w	r2, #0
 800a68a:	4b0f      	ldr	r3, [pc, #60]	@ (800a6c8 <raw_angle_to_rad+0xf8>)
 800a68c:	f7f5 ffb4 	bl	80005f8 <__aeabi_dmul>
 800a690:	4602      	mov	r2, r0
 800a692:	460b      	mov	r3, r1
 800a694:	4610      	mov	r0, r2
 800a696:	4619      	mov	r1, r3
 800a698:	697a      	ldr	r2, [r7, #20]
 800a69a:	4613      	mov	r3, r2
 800a69c:	011b      	lsls	r3, r3, #4
 800a69e:	1a9b      	subs	r3, r3, r2
 800a6a0:	011b      	lsls	r3, r3, #4
 800a6a2:	461a      	mov	r2, r3
 800a6a4:	687b      	ldr	r3, [r7, #4]
 800a6a6:	189c      	adds	r4, r3, r2
 800a6a8:	f7f6 fa9e 	bl	8000be8 <__aeabi_d2f>
 800a6ac:	4603      	mov	r3, r0
 800a6ae:	6163      	str	r3, [r4, #20]
    for (int i = 0; i < 24; i++) {
 800a6b0:	697b      	ldr	r3, [r7, #20]
 800a6b2:	3301      	adds	r3, #1
 800a6b4:	617b      	str	r3, [r7, #20]
 800a6b6:	697b      	ldr	r3, [r7, #20]
 800a6b8:	2b17      	cmp	r3, #23
 800a6ba:	dd90      	ble.n	800a5de <raw_angle_to_rad+0xe>
    }
}
 800a6bc:	bf00      	nop
 800a6be:	bf00      	nop
 800a6c0:	371c      	adds	r7, #28
 800a6c2:	46bd      	mov	sp, r7
 800a6c4:	bd90      	pop	{r4, r7, pc}
 800a6c6:	bf00      	nop
 800a6c8:	40768000 	.word	0x40768000
 800a6cc:	00000000 	.word	0x00000000
 800a6d0:	40bfff00 	.word	0x40bfff00
 800a6d4:	60000000 	.word	0x60000000
 800a6d8:	400921fb 	.word	0x400921fb
 800a6dc:	00000000 	.word	0x00000000

0800a6e0 <motors_raw_angle_to_desired_angle_dir>:

void motors_raw_angle_to_desired_angle_dir(motor_data_t *motor, float offset, int dir) {
 800a6e0:	b580      	push	{r7, lr}
 800a6e2:	b084      	sub	sp, #16
 800a6e4:	af00      	add	r7, sp, #0
 800a6e6:	60f8      	str	r0, [r7, #12]
 800a6e8:	ed87 0a02 	vstr	s0, [r7, #8]
 800a6ec:	6079      	str	r1, [r7, #4]
    if (dir == -1) {
 800a6ee:	687b      	ldr	r3, [r7, #4]
 800a6f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a6f4:	d11b      	bne.n	800a72e <motors_raw_angle_to_desired_angle_dir+0x4e>
        motor->angle_rad = -motor->raw_angle_rad + offset;
 800a6f6:	68fb      	ldr	r3, [r7, #12]
 800a6f8:	edd3 7a04 	vldr	s15, [r3, #16]
 800a6fc:	ed97 7a02 	vldr	s14, [r7, #8]
 800a700:	ee77 7a67 	vsub.f32	s15, s14, s15
 800a704:	68fb      	ldr	r3, [r7, #12]
 800a706:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = -motor->raw_data.rpm * 0.10472;
 800a70a:	68fb      	ldr	r3, [r7, #12]
 800a70c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a710:	425b      	negs	r3, r3
 800a712:	4618      	mov	r0, r3
 800a714:	f7f5 ff06 	bl	8000524 <__aeabi_i2d>
 800a718:	a31d      	add	r3, pc, #116	@ (adr r3, 800a790 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800a71a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a71e:	f7f5 ff6b 	bl	80005f8 <__aeabi_dmul>
 800a722:	4602      	mov	r2, r0
 800a724:	460b      	mov	r3, r1
 800a726:	68f9      	ldr	r1, [r7, #12]
 800a728:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800a72c:	e019      	b.n	800a762 <motors_raw_angle_to_desired_angle_dir+0x82>
    } else {
        motor->angle_rad = motor->raw_angle_rad + offset;
 800a72e:	68fb      	ldr	r3, [r7, #12]
 800a730:	ed93 7a04 	vldr	s14, [r3, #16]
 800a734:	edd7 7a02 	vldr	s15, [r7, #8]
 800a738:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a73c:	68fb      	ldr	r3, [r7, #12]
 800a73e:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = motor->raw_data.rpm * 0.10472;
 800a742:	68fb      	ldr	r3, [r7, #12]
 800a744:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800a748:	4618      	mov	r0, r3
 800a74a:	f7f5 feeb 	bl	8000524 <__aeabi_i2d>
 800a74e:	a310      	add	r3, pc, #64	@ (adr r3, 800a790 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800a750:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a754:	f7f5 ff50 	bl	80005f8 <__aeabi_dmul>
 800a758:	4602      	mov	r2, r0
 800a75a:	460b      	mov	r3, r1
 800a75c:	68f9      	ldr	r1, [r7, #12]
 800a75e:	e9c1 2308 	strd	r2, r3, [r1, #32]
    }
    motor->angle_deg = motor->angle_rad * (180.0 / PI); // Update the degree value as well
 800a762:	68fb      	ldr	r3, [r7, #12]
 800a764:	699b      	ldr	r3, [r3, #24]
 800a766:	4618      	mov	r0, r3
 800a768:	f7f5 feee 	bl	8000548 <__aeabi_f2d>
 800a76c:	a30a      	add	r3, pc, #40	@ (adr r3, 800a798 <motors_raw_angle_to_desired_angle_dir+0xb8>)
 800a76e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a772:	f7f5 ff41 	bl	80005f8 <__aeabi_dmul>
 800a776:	4602      	mov	r2, r0
 800a778:	460b      	mov	r3, r1
 800a77a:	4610      	mov	r0, r2
 800a77c:	4619      	mov	r1, r3
 800a77e:	f7f6 fa33 	bl	8000be8 <__aeabi_d2f>
 800a782:	4602      	mov	r2, r0
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	61da      	str	r2, [r3, #28]

}
 800a788:	bf00      	nop
 800a78a:	3710      	adds	r7, #16
 800a78c:	46bd      	mov	sp, r7
 800a78e:	bd80      	pop	{r7, pc}
 800a790:	0f3cb3e5 	.word	0x0f3cb3e5
 800a794:	3fbaceee 	.word	0x3fbaceee
 800a798:	0d03cf26 	.word	0x0d03cf26
 800a79c:	404ca5dc 	.word	0x404ca5dc

0800a7a0 <motors_torque_to_current_6020>:

void motors_torque_to_current_6020(motor_data_t *motor, float deadzone,double dir) {
 800a7a0:	b580      	push	{r7, lr}
 800a7a2:	b086      	sub	sp, #24
 800a7a4:	af00      	add	r7, sp, #0
 800a7a6:	60f8      	str	r0, [r7, #12]
 800a7a8:	ed87 0a02 	vstr	s0, [r7, #8]
 800a7ac:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800a7b0:	f04f 0200 	mov.w	r2, #0
 800a7b4:	f04f 0300 	mov.w	r3, #0
 800a7b8:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800a7bc:	68fb      	ldr	r3, [r7, #12]
 800a7be:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a7c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a7c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a7ca:	dd17      	ble.n	800a7fc <motors_torque_to_current_6020+0x5c>
		current = 1.8 * motor->torque + 0.2;
 800a7cc:	68fb      	ldr	r3, [r7, #12]
 800a7ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a7d0:	4618      	mov	r0, r3
 800a7d2:	f7f5 feb9 	bl	8000548 <__aeabi_f2d>
 800a7d6:	a333      	add	r3, pc, #204	@ (adr r3, 800a8a4 <motors_torque_to_current_6020+0x104>)
 800a7d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7dc:	f7f5 ff0c 	bl	80005f8 <__aeabi_dmul>
 800a7e0:	4602      	mov	r2, r0
 800a7e2:	460b      	mov	r3, r1
 800a7e4:	4610      	mov	r0, r2
 800a7e6:	4619      	mov	r1, r3
 800a7e8:	a330      	add	r3, pc, #192	@ (adr r3, 800a8ac <motors_torque_to_current_6020+0x10c>)
 800a7ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7ee:	f7f5 fd4d 	bl	800028c <__adddf3>
 800a7f2:	4602      	mov	r2, r0
 800a7f4:	460b      	mov	r3, r1
 800a7f6:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a7fa:	e025      	b.n	800a848 <motors_torque_to_current_6020+0xa8>
	} else if(motor->torque < 0){
 800a7fc:	68fb      	ldr	r3, [r7, #12]
 800a7fe:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a802:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a80a:	d517      	bpl.n	800a83c <motors_torque_to_current_6020+0x9c>
		current = 1.8 * motor->torque - 0.2;
 800a80c:	68fb      	ldr	r3, [r7, #12]
 800a80e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a810:	4618      	mov	r0, r3
 800a812:	f7f5 fe99 	bl	8000548 <__aeabi_f2d>
 800a816:	a323      	add	r3, pc, #140	@ (adr r3, 800a8a4 <motors_torque_to_current_6020+0x104>)
 800a818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a81c:	f7f5 feec 	bl	80005f8 <__aeabi_dmul>
 800a820:	4602      	mov	r2, r0
 800a822:	460b      	mov	r3, r1
 800a824:	4610      	mov	r0, r2
 800a826:	4619      	mov	r1, r3
 800a828:	a320      	add	r3, pc, #128	@ (adr r3, 800a8ac <motors_torque_to_current_6020+0x10c>)
 800a82a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a82e:	f7f5 fd2b 	bl	8000288 <__aeabi_dsub>
 800a832:	4602      	mov	r2, r0
 800a834:	460b      	mov	r3, r1
 800a836:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a83a:	e005      	b.n	800a848 <motors_torque_to_current_6020+0xa8>
	} else{
		current = 0;
 800a83c:	f04f 0200 	mov.w	r2, #0
 800a840:	f04f 0300 	mov.w	r3, #0
 800a844:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/3.0)*16385.0;
 800a848:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a84c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a850:	f7f5 fed2 	bl	80005f8 <__aeabi_dmul>
 800a854:	4602      	mov	r2, r0
 800a856:	460b      	mov	r3, r1
 800a858:	4610      	mov	r0, r2
 800a85a:	4619      	mov	r1, r3
 800a85c:	f04f 0200 	mov.w	r2, #0
 800a860:	4b0f      	ldr	r3, [pc, #60]	@ (800a8a0 <motors_torque_to_current_6020+0x100>)
 800a862:	f7f5 fff3 	bl	800084c <__aeabi_ddiv>
 800a866:	4602      	mov	r2, r0
 800a868:	460b      	mov	r3, r1
 800a86a:	4610      	mov	r0, r2
 800a86c:	4619      	mov	r1, r3
 800a86e:	a30a      	add	r3, pc, #40	@ (adr r3, 800a898 <motors_torque_to_current_6020+0xf8>)
 800a870:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a874:	f7f5 fec0 	bl	80005f8 <__aeabi_dmul>
 800a878:	4602      	mov	r2, r0
 800a87a:	460b      	mov	r3, r1
 800a87c:	4610      	mov	r0, r2
 800a87e:	4619      	mov	r1, r3
 800a880:	f7f6 f96a 	bl	8000b58 <__aeabi_d2iz>
 800a884:	4603      	mov	r3, r0
 800a886:	b21a      	sxth	r2, r3
 800a888:	68fb      	ldr	r3, [r7, #12]
 800a88a:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800a88e:	bf00      	nop
 800a890:	3718      	adds	r7, #24
 800a892:	46bd      	mov	sp, r7
 800a894:	bd80      	pop	{r7, pc}
 800a896:	bf00      	nop
 800a898:	00000000 	.word	0x00000000
 800a89c:	40d00040 	.word	0x40d00040
 800a8a0:	40080000 	.word	0x40080000
 800a8a4:	cccccccd 	.word	0xcccccccd
 800a8a8:	3ffccccc 	.word	0x3ffccccc
 800a8ac:	9999999a 	.word	0x9999999a
 800a8b0:	3fc99999 	.word	0x3fc99999
 800a8b4:	00000000 	.word	0x00000000

0800a8b8 <motors_torque_to_current_3508_gearbox>:
void motors_torque_to_current_3508_gearbox(motor_data_t *motor, float maxCurrent,double dir) {
 800a8b8:	b580      	push	{r7, lr}
 800a8ba:	b086      	sub	sp, #24
 800a8bc:	af00      	add	r7, sp, #0
 800a8be:	60f8      	str	r0, [r7, #12]
 800a8c0:	ed87 0a02 	vstr	s0, [r7, #8]
 800a8c4:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800a8c8:	f04f 0200 	mov.w	r2, #0
 800a8cc:	f04f 0300 	mov.w	r3, #0
 800a8d0:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800a8d4:	68fb      	ldr	r3, [r7, #12]
 800a8d6:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a8da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a8de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8e2:	dd20      	ble.n	800a926 <motors_torque_to_current_3508_gearbox+0x6e>
		current = (motor->torque / 4.5) * 20 + 0.08;
 800a8e4:	68fb      	ldr	r3, [r7, #12]
 800a8e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a8e8:	4618      	mov	r0, r3
 800a8ea:	f7f5 fe2d 	bl	8000548 <__aeabi_f2d>
 800a8ee:	f04f 0200 	mov.w	r2, #0
 800a8f2:	4b55      	ldr	r3, [pc, #340]	@ (800aa48 <motors_torque_to_current_3508_gearbox+0x190>)
 800a8f4:	f7f5 ffaa 	bl	800084c <__aeabi_ddiv>
 800a8f8:	4602      	mov	r2, r0
 800a8fa:	460b      	mov	r3, r1
 800a8fc:	4610      	mov	r0, r2
 800a8fe:	4619      	mov	r1, r3
 800a900:	f04f 0200 	mov.w	r2, #0
 800a904:	4b51      	ldr	r3, [pc, #324]	@ (800aa4c <motors_torque_to_current_3508_gearbox+0x194>)
 800a906:	f7f5 fe77 	bl	80005f8 <__aeabi_dmul>
 800a90a:	4602      	mov	r2, r0
 800a90c:	460b      	mov	r3, r1
 800a90e:	4610      	mov	r0, r2
 800a910:	4619      	mov	r1, r3
 800a912:	a349      	add	r3, pc, #292	@ (adr r3, 800aa38 <motors_torque_to_current_3508_gearbox+0x180>)
 800a914:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a918:	f7f5 fcb8 	bl	800028c <__adddf3>
 800a91c:	4602      	mov	r2, r0
 800a91e:	460b      	mov	r3, r1
 800a920:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a924:	e02e      	b.n	800a984 <motors_torque_to_current_3508_gearbox+0xcc>
	} else if(motor->torque < 0){
 800a926:	68fb      	ldr	r3, [r7, #12]
 800a928:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800a92c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a930:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a934:	d520      	bpl.n	800a978 <motors_torque_to_current_3508_gearbox+0xc0>
		current = (motor->torque / 4.5) * 20 - 0.08;
 800a936:	68fb      	ldr	r3, [r7, #12]
 800a938:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800a93a:	4618      	mov	r0, r3
 800a93c:	f7f5 fe04 	bl	8000548 <__aeabi_f2d>
 800a940:	f04f 0200 	mov.w	r2, #0
 800a944:	4b40      	ldr	r3, [pc, #256]	@ (800aa48 <motors_torque_to_current_3508_gearbox+0x190>)
 800a946:	f7f5 ff81 	bl	800084c <__aeabi_ddiv>
 800a94a:	4602      	mov	r2, r0
 800a94c:	460b      	mov	r3, r1
 800a94e:	4610      	mov	r0, r2
 800a950:	4619      	mov	r1, r3
 800a952:	f04f 0200 	mov.w	r2, #0
 800a956:	4b3d      	ldr	r3, [pc, #244]	@ (800aa4c <motors_torque_to_current_3508_gearbox+0x194>)
 800a958:	f7f5 fe4e 	bl	80005f8 <__aeabi_dmul>
 800a95c:	4602      	mov	r2, r0
 800a95e:	460b      	mov	r3, r1
 800a960:	4610      	mov	r0, r2
 800a962:	4619      	mov	r1, r3
 800a964:	a334      	add	r3, pc, #208	@ (adr r3, 800aa38 <motors_torque_to_current_3508_gearbox+0x180>)
 800a966:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a96a:	f7f5 fc8d 	bl	8000288 <__aeabi_dsub>
 800a96e:	4602      	mov	r2, r0
 800a970:	460b      	mov	r3, r1
 800a972:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a976:	e005      	b.n	800a984 <motors_torque_to_current_3508_gearbox+0xcc>
	} else{
		current = 0;
 800a978:	f04f 0200 	mov.w	r2, #0
 800a97c:	f04f 0300 	mov.w	r3, #0
 800a980:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	if (current > maxCurrent){
 800a984:	68b8      	ldr	r0, [r7, #8]
 800a986:	f7f5 fddf 	bl	8000548 <__aeabi_f2d>
 800a98a:	4602      	mov	r2, r0
 800a98c:	460b      	mov	r3, r1
 800a98e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a992:	f7f6 f8c1 	bl	8000b18 <__aeabi_dcmpgt>
 800a996:	4603      	mov	r3, r0
 800a998:	2b00      	cmp	r3, #0
 800a99a:	d007      	beq.n	800a9ac <motors_torque_to_current_3508_gearbox+0xf4>
		current = maxCurrent;
 800a99c:	68b8      	ldr	r0, [r7, #8]
 800a99e:	f7f5 fdd3 	bl	8000548 <__aeabi_f2d>
 800a9a2:	4602      	mov	r2, r0
 800a9a4:	460b      	mov	r3, r1
 800a9a6:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800a9aa:	e01e      	b.n	800a9ea <motors_torque_to_current_3508_gearbox+0x132>
	} else if(current < -maxCurrent){
 800a9ac:	edd7 7a02 	vldr	s15, [r7, #8]
 800a9b0:	eef1 7a67 	vneg.f32	s15, s15
 800a9b4:	ee17 3a90 	vmov	r3, s15
 800a9b8:	4618      	mov	r0, r3
 800a9ba:	f7f5 fdc5 	bl	8000548 <__aeabi_f2d>
 800a9be:	4602      	mov	r2, r0
 800a9c0:	460b      	mov	r3, r1
 800a9c2:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a9c6:	f7f6 f889 	bl	8000adc <__aeabi_dcmplt>
 800a9ca:	4603      	mov	r3, r0
 800a9cc:	2b00      	cmp	r3, #0
 800a9ce:	d00c      	beq.n	800a9ea <motors_torque_to_current_3508_gearbox+0x132>
		current = -maxCurrent;
 800a9d0:	edd7 7a02 	vldr	s15, [r7, #8]
 800a9d4:	eef1 7a67 	vneg.f32	s15, s15
 800a9d8:	ee17 3a90 	vmov	r3, s15
 800a9dc:	4618      	mov	r0, r3
 800a9de:	f7f5 fdb3 	bl	8000548 <__aeabi_f2d>
 800a9e2:	4602      	mov	r2, r0
 800a9e4:	460b      	mov	r3, r1
 800a9e6:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/20.0)*16385.0;
 800a9ea:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a9ee:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a9f2:	f7f5 fe01 	bl	80005f8 <__aeabi_dmul>
 800a9f6:	4602      	mov	r2, r0
 800a9f8:	460b      	mov	r3, r1
 800a9fa:	4610      	mov	r0, r2
 800a9fc:	4619      	mov	r1, r3
 800a9fe:	f04f 0200 	mov.w	r2, #0
 800aa02:	4b12      	ldr	r3, [pc, #72]	@ (800aa4c <motors_torque_to_current_3508_gearbox+0x194>)
 800aa04:	f7f5 ff22 	bl	800084c <__aeabi_ddiv>
 800aa08:	4602      	mov	r2, r0
 800aa0a:	460b      	mov	r3, r1
 800aa0c:	4610      	mov	r0, r2
 800aa0e:	4619      	mov	r1, r3
 800aa10:	a30b      	add	r3, pc, #44	@ (adr r3, 800aa40 <motors_torque_to_current_3508_gearbox+0x188>)
 800aa12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa16:	f7f5 fdef 	bl	80005f8 <__aeabi_dmul>
 800aa1a:	4602      	mov	r2, r0
 800aa1c:	460b      	mov	r3, r1
 800aa1e:	4610      	mov	r0, r2
 800aa20:	4619      	mov	r1, r3
 800aa22:	f7f6 f899 	bl	8000b58 <__aeabi_d2iz>
 800aa26:	4603      	mov	r3, r0
 800aa28:	b21a      	sxth	r2, r3
 800aa2a:	68fb      	ldr	r3, [r7, #12]
 800aa2c:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800aa30:	bf00      	nop
 800aa32:	3718      	adds	r7, #24
 800aa34:	46bd      	mov	sp, r7
 800aa36:	bd80      	pop	{r7, pc}
 800aa38:	47ae147b 	.word	0x47ae147b
 800aa3c:	3fb47ae1 	.word	0x3fb47ae1
 800aa40:	00000000 	.word	0x00000000
 800aa44:	40d00040 	.word	0x40d00040
 800aa48:	40120000 	.word	0x40120000
 800aa4c:	40340000 	.word	0x40340000

0800aa50 <referee_processing_task>:
uint32_t ref_mag_data_txno = 0;
uint8_t g_ref_tx_seq = 0;

queue_t referee_uart_q;

void referee_processing_task(void *argument) {
 800aa50:	b5b0      	push	{r4, r5, r7, lr}
 800aa52:	b088      	sub	sp, #32
 800aa54:	af00      	add	r7, sp, #0
 800aa56:	6078      	str	r0, [r7, #4]
	g_referee_limiters.robot_level = 0;
 800aa58:	4ba3      	ldr	r3, [pc, #652]	@ (800ace8 <referee_processing_task+0x298>)
 800aa5a:	2200      	movs	r2, #0
 800aa5c:	731a      	strb	r2, [r3, #12]
	uint8_t ref_buffer[2];
	ref_processing_status_t proc_status;
	g_referee_limiters.feeding_speed = LV1_FEEDER;
 800aa5e:	4ba2      	ldr	r3, [pc, #648]	@ (800ace8 <referee_processing_task+0x298>)
 800aa60:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800aa64:	801a      	strh	r2, [r3, #0]
	g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800aa66:	4ba0      	ldr	r3, [pc, #640]	@ (800ace8 <referee_processing_task+0x298>)
 800aa68:	2213      	movs	r2, #19
 800aa6a:	805a      	strh	r2, [r3, #2]
//	g_referee_limiters.wheel_power_limit = LV1_POWER;
	g_referee_limiters.robot_level = 1;
 800aa6c:	4b9e      	ldr	r3, [pc, #632]	@ (800ace8 <referee_processing_task+0x298>)
 800aa6e:	2201      	movs	r2, #1
 800aa70:	731a      	strb	r2, [r3, #12]
	status_led(7, on_led);
 800aa72:	2100      	movs	r1, #0
 800aa74:	2007      	movs	r0, #7
 800aa76:	f7f7 fa9f 	bl	8001fb8 <status_led>
	status_led(8, off_led);
 800aa7a:	2101      	movs	r1, #1
 800aa7c:	2008      	movs	r0, #8
 800aa7e:	f7f7 fa9b 	bl	8001fb8 <status_led>
	ref_robot_data.robot_id = 0;
 800aa82:	4b9a      	ldr	r3, [pc, #616]	@ (800acec <referee_processing_task+0x29c>)
 800aa84:	2200      	movs	r2, #0
 800aa86:	701a      	strb	r2, [r3, #0]
	ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800aa88:	f107 0108 	add.w	r1, r7, #8
 800aa8c:	4b98      	ldr	r3, [pc, #608]	@ (800acf0 <referee_processing_task+0x2a0>)
 800aa8e:	2202      	movs	r2, #2
 800aa90:	4898      	ldr	r0, [pc, #608]	@ (800acf4 <referee_processing_task+0x2a4>)
 800aa92:	f7f8 f84f 	bl	8002b34 <ref_usart_start>
	while (1) {

		uint8_t has_data = ulTaskNotifyTake(pdTRUE, 1000);
 800aa96:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800aa9a:	2001      	movs	r0, #1
 800aa9c:	f00e fa72 	bl	8018f84 <ulTaskNotifyTake>
 800aaa0:	4603      	mov	r3, r0
 800aaa2:	75fb      	strb	r3, [r7, #23]
		status_led(5, on_led);
 800aaa4:	2100      	movs	r1, #0
 800aaa6:	2005      	movs	r0, #5
 800aaa8:	f7f7 fa86 	bl	8001fb8 <status_led>
		if (queue_get_size(&referee_uart_q) > 7) {
 800aaac:	4890      	ldr	r0, [pc, #576]	@ (800acf0 <referee_processing_task+0x2a0>)
 800aaae:	f7f7 fbe4 	bl	800227a <queue_get_size>
 800aab2:	4603      	mov	r3, r0
 800aab4:	2b07      	cmp	r3, #7
 800aab6:	f240 80b8 	bls.w	800ac2a <referee_processing_task+0x1da>
			while (queue_get_size(&referee_uart_q) > 7) {
 800aaba:	e0ad      	b.n	800ac18 <referee_processing_task+0x1c8>
				proc_status = ref_process_data(&referee_uart_q, &g_ref_msg_buffer);
 800aabc:	498e      	ldr	r1, [pc, #568]	@ (800acf8 <referee_processing_task+0x2a8>)
 800aabe:	488c      	ldr	r0, [pc, #560]	@ (800acf0 <referee_processing_task+0x2a0>)
 800aac0:	f7f7 fd48 	bl	8002554 <ref_process_data>
 800aac4:	4603      	mov	r3, r0
 800aac6:	75bb      	strb	r3, [r7, #22]
				if (proc_status == PROCESS_SUCCESS) {
 800aac8:	7dbb      	ldrb	r3, [r7, #22]
 800aaca:	2b00      	cmp	r3, #0
 800aacc:	f040 809f 	bne.w	800ac0e <referee_processing_task+0x1be>
					switch (g_ref_msg_buffer.cmd_id) {
 800aad0:	4b89      	ldr	r3, [pc, #548]	@ (800acf8 <referee_processing_task+0x2a8>)
 800aad2:	881b      	ldrh	r3, [r3, #0]
 800aad4:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800aad8:	f300 809d 	bgt.w	800ac16 <referee_processing_task+0x1c6>
 800aadc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800aae0:	dc04      	bgt.n	800aaec <referee_processing_task+0x9c>
 800aae2:	2b01      	cmp	r3, #1
 800aae4:	d029      	beq.n	800ab3a <referee_processing_task+0xea>
 800aae6:	2b03      	cmp	r3, #3
 800aae8:	d071      	beq.n	800abce <referee_processing_task+0x17e>
								sizeof(ref_magazine_data_t));
						ref_mag_data_txno++;
						//add in the memcpys here
						break;
					default:
						break;
 800aaea:	e094      	b.n	800ac16 <referee_processing_task+0x1c6>
					switch (g_ref_msg_buffer.cmd_id) {
 800aaec:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 800aaf0:	2b07      	cmp	r3, #7
 800aaf2:	f200 8090 	bhi.w	800ac16 <referee_processing_task+0x1c6>
 800aaf6:	a201      	add	r2, pc, #4	@ (adr r2, 800aafc <referee_processing_task+0xac>)
 800aaf8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aafc:	0800ab55 	.word	0x0800ab55
 800ab00:	0800ab9d 	.word	0x0800ab9d
 800ab04:	0800ab83 	.word	0x0800ab83
 800ab08:	0800ac17 	.word	0x0800ac17
 800ab0c:	0800ac17 	.word	0x0800ac17
 800ab10:	0800abbb 	.word	0x0800abbb
 800ab14:	0800ab1d 	.word	0x0800ab1d
 800ab18:	0800abf5 	.word	0x0800abf5
						memcpy(&ref_shoot_data, &g_ref_msg_buffer.data,
 800ab1c:	4a77      	ldr	r2, [pc, #476]	@ (800acfc <referee_processing_task+0x2ac>)
 800ab1e:	4b76      	ldr	r3, [pc, #472]	@ (800acf8 <referee_processing_task+0x2a8>)
 800ab20:	3302      	adds	r3, #2
 800ab22:	6818      	ldr	r0, [r3, #0]
 800ab24:	6010      	str	r0, [r2, #0]
 800ab26:	8899      	ldrh	r1, [r3, #4]
 800ab28:	799b      	ldrb	r3, [r3, #6]
 800ab2a:	8091      	strh	r1, [r2, #4]
 800ab2c:	7193      	strb	r3, [r2, #6]
						ref_shoot_data_txno++;
 800ab2e:	4b74      	ldr	r3, [pc, #464]	@ (800ad00 <referee_processing_task+0x2b0>)
 800ab30:	681b      	ldr	r3, [r3, #0]
 800ab32:	3301      	adds	r3, #1
 800ab34:	4a72      	ldr	r2, [pc, #456]	@ (800ad00 <referee_processing_task+0x2b0>)
 800ab36:	6013      	str	r3, [r2, #0]
						break;
 800ab38:	e06e      	b.n	800ac18 <referee_processing_task+0x1c8>
							memcpy(&ref_game_state, &g_ref_msg_buffer.data,
 800ab3a:	4a72      	ldr	r2, [pc, #456]	@ (800ad04 <referee_processing_task+0x2b4>)
 800ab3c:	4b6e      	ldr	r3, [pc, #440]	@ (800acf8 <referee_processing_task+0x2a8>)
 800ab3e:	3302      	adds	r3, #2
 800ab40:	8819      	ldrh	r1, [r3, #0]
 800ab42:	789b      	ldrb	r3, [r3, #2]
 800ab44:	8011      	strh	r1, [r2, #0]
 800ab46:	7093      	strb	r3, [r2, #2]
							ref_game_state_txno++;
 800ab48:	4b6f      	ldr	r3, [pc, #444]	@ (800ad08 <referee_processing_task+0x2b8>)
 800ab4a:	681b      	ldr	r3, [r3, #0]
 800ab4c:	3301      	adds	r3, #1
 800ab4e:	4a6e      	ldr	r2, [pc, #440]	@ (800ad08 <referee_processing_task+0x2b8>)
 800ab50:	6013      	str	r3, [r2, #0]
							break;
 800ab52:	e061      	b.n	800ac18 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_data, &g_ref_msg_buffer.data,
 800ab54:	4a65      	ldr	r2, [pc, #404]	@ (800acec <referee_processing_task+0x29c>)
 800ab56:	4b68      	ldr	r3, [pc, #416]	@ (800acf8 <referee_processing_task+0x2a8>)
 800ab58:	4614      	mov	r4, r2
 800ab5a:	1c9d      	adds	r5, r3, #2
 800ab5c:	6828      	ldr	r0, [r5, #0]
 800ab5e:	6869      	ldr	r1, [r5, #4]
 800ab60:	68aa      	ldr	r2, [r5, #8]
 800ab62:	68eb      	ldr	r3, [r5, #12]
 800ab64:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ab66:	6928      	ldr	r0, [r5, #16]
 800ab68:	6969      	ldr	r1, [r5, #20]
 800ab6a:	c403      	stmia	r4!, {r0, r1}
 800ab6c:	8b2b      	ldrh	r3, [r5, #24]
 800ab6e:	7eaa      	ldrb	r2, [r5, #26]
 800ab70:	8023      	strh	r3, [r4, #0]
 800ab72:	4613      	mov	r3, r2
 800ab74:	70a3      	strb	r3, [r4, #2]
						ref_robot_data_txno++;
 800ab76:	4b65      	ldr	r3, [pc, #404]	@ (800ad0c <referee_processing_task+0x2bc>)
 800ab78:	681b      	ldr	r3, [r3, #0]
 800ab7a:	3301      	adds	r3, #1
 800ab7c:	4a63      	ldr	r2, [pc, #396]	@ (800ad0c <referee_processing_task+0x2bc>)
 800ab7e:	6013      	str	r3, [r2, #0]
						break;
 800ab80:	e04a      	b.n	800ac18 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_pos, &g_ref_msg_buffer.data,
 800ab82:	4b63      	ldr	r3, [pc, #396]	@ (800ad10 <referee_processing_task+0x2c0>)
 800ab84:	4a5c      	ldr	r2, [pc, #368]	@ (800acf8 <referee_processing_task+0x2a8>)
 800ab86:	3202      	adds	r2, #2
 800ab88:	6810      	ldr	r0, [r2, #0]
 800ab8a:	6851      	ldr	r1, [r2, #4]
 800ab8c:	6892      	ldr	r2, [r2, #8]
 800ab8e:	c307      	stmia	r3!, {r0, r1, r2}
						ref_robot_pos_txno++;
 800ab90:	4b60      	ldr	r3, [pc, #384]	@ (800ad14 <referee_processing_task+0x2c4>)
 800ab92:	681b      	ldr	r3, [r3, #0]
 800ab94:	3301      	adds	r3, #1
 800ab96:	4a5f      	ldr	r2, [pc, #380]	@ (800ad14 <referee_processing_task+0x2c4>)
 800ab98:	6013      	str	r3, [r2, #0]
						break;
 800ab9a:	e03d      	b.n	800ac18 <referee_processing_task+0x1c8>
						memcpy(&ref_power_data, &g_ref_msg_buffer.data,
 800ab9c:	4a5e      	ldr	r2, [pc, #376]	@ (800ad18 <referee_processing_task+0x2c8>)
 800ab9e:	4b56      	ldr	r3, [pc, #344]	@ (800acf8 <referee_processing_task+0x2a8>)
 800aba0:	4614      	mov	r4, r2
 800aba2:	3302      	adds	r3, #2
 800aba4:	6818      	ldr	r0, [r3, #0]
 800aba6:	6859      	ldr	r1, [r3, #4]
 800aba8:	689a      	ldr	r2, [r3, #8]
 800abaa:	68db      	ldr	r3, [r3, #12]
 800abac:	c40f      	stmia	r4!, {r0, r1, r2, r3}
						ref_power_data_txno++;
 800abae:	4b5b      	ldr	r3, [pc, #364]	@ (800ad1c <referee_processing_task+0x2cc>)
 800abb0:	681b      	ldr	r3, [r3, #0]
 800abb2:	3301      	adds	r3, #1
 800abb4:	4a59      	ldr	r2, [pc, #356]	@ (800ad1c <referee_processing_task+0x2cc>)
 800abb6:	6013      	str	r3, [r2, #0]
						break;
 800abb8:	e02e      	b.n	800ac18 <referee_processing_task+0x1c8>
						memcpy(&ref_dmg_data, &g_ref_msg_buffer.data,
 800abba:	4b4f      	ldr	r3, [pc, #316]	@ (800acf8 <referee_processing_task+0x2a8>)
 800abbc:	789a      	ldrb	r2, [r3, #2]
 800abbe:	4b58      	ldr	r3, [pc, #352]	@ (800ad20 <referee_processing_task+0x2d0>)
 800abc0:	701a      	strb	r2, [r3, #0]
						ref_dmg_data_txno++;
 800abc2:	4b58      	ldr	r3, [pc, #352]	@ (800ad24 <referee_processing_task+0x2d4>)
 800abc4:	681b      	ldr	r3, [r3, #0]
 800abc6:	3301      	adds	r3, #1
 800abc8:	4a56      	ldr	r2, [pc, #344]	@ (800ad24 <referee_processing_task+0x2d4>)
 800abca:	6013      	str	r3, [r2, #0]
						break;
 800abcc:	e024      	b.n	800ac18 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_hp, &g_ref_msg_buffer.data,
 800abce:	4a56      	ldr	r2, [pc, #344]	@ (800ad28 <referee_processing_task+0x2d8>)
 800abd0:	4b49      	ldr	r3, [pc, #292]	@ (800acf8 <referee_processing_task+0x2a8>)
 800abd2:	4614      	mov	r4, r2
 800abd4:	1c9d      	adds	r5, r3, #2
 800abd6:	6828      	ldr	r0, [r5, #0]
 800abd8:	6869      	ldr	r1, [r5, #4]
 800abda:	68aa      	ldr	r2, [r5, #8]
 800abdc:	68eb      	ldr	r3, [r5, #12]
 800abde:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abe0:	6928      	ldr	r0, [r5, #16]
 800abe2:	6969      	ldr	r1, [r5, #20]
 800abe4:	69aa      	ldr	r2, [r5, #24]
 800abe6:	c407      	stmia	r4!, {r0, r1, r2}
						ref_robot_hp_txno++;
 800abe8:	4b50      	ldr	r3, [pc, #320]	@ (800ad2c <referee_processing_task+0x2dc>)
 800abea:	681b      	ldr	r3, [r3, #0]
 800abec:	3301      	adds	r3, #1
 800abee:	4a4f      	ldr	r2, [pc, #316]	@ (800ad2c <referee_processing_task+0x2dc>)
 800abf0:	6013      	str	r3, [r2, #0]
						break;
 800abf2:	e011      	b.n	800ac18 <referee_processing_task+0x1c8>
						memcpy(&ref_mag_data, &g_ref_msg_buffer.data,
 800abf4:	4a4e      	ldr	r2, [pc, #312]	@ (800ad30 <referee_processing_task+0x2e0>)
 800abf6:	4b40      	ldr	r3, [pc, #256]	@ (800acf8 <referee_processing_task+0x2a8>)
 800abf8:	3302      	adds	r3, #2
 800abfa:	6818      	ldr	r0, [r3, #0]
 800abfc:	6010      	str	r0, [r2, #0]
 800abfe:	889b      	ldrh	r3, [r3, #4]
 800ac00:	8093      	strh	r3, [r2, #4]
						ref_mag_data_txno++;
 800ac02:	4b4c      	ldr	r3, [pc, #304]	@ (800ad34 <referee_processing_task+0x2e4>)
 800ac04:	681b      	ldr	r3, [r3, #0]
 800ac06:	3301      	adds	r3, #1
 800ac08:	4a4a      	ldr	r2, [pc, #296]	@ (800ad34 <referee_processing_task+0x2e4>)
 800ac0a:	6013      	str	r3, [r2, #0]
						break;
 800ac0c:	e004      	b.n	800ac18 <referee_processing_task+0x1c8>
					}
//						if (msg_buffer.cmd_id == REF_ROBOT_SHOOT_DATA_CMD_ID){
//							xQueueSend(uart_data_queue, &msg_buffer, 0);
//						}
				} else if (proc_status == INSUFFICIENT_DATA) {
 800ac0e:	7dbb      	ldrb	r3, [r7, #22]
 800ac10:	2b02      	cmp	r3, #2
 800ac12:	d009      	beq.n	800ac28 <referee_processing_task+0x1d8>
 800ac14:	e000      	b.n	800ac18 <referee_processing_task+0x1c8>
						break;
 800ac16:	bf00      	nop
			while (queue_get_size(&referee_uart_q) > 7) {
 800ac18:	4835      	ldr	r0, [pc, #212]	@ (800acf0 <referee_processing_task+0x2a0>)
 800ac1a:	f7f7 fb2e 	bl	800227a <queue_get_size>
 800ac1e:	4603      	mov	r3, r0
 800ac20:	2b07      	cmp	r3, #7
 800ac22:	f63f af4b 	bhi.w	800aabc <referee_processing_task+0x6c>
 800ac26:	e000      	b.n	800ac2a <referee_processing_task+0x1da>
					break;
 800ac28:	bf00      	nop
				}
			}
		}
		if (!has_data){
 800ac2a:	7dfb      	ldrb	r3, [r7, #23]
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	d10e      	bne.n	800ac4e <referee_processing_task+0x1fe>
		    __HAL_DMA_ENABLE(&hdma_usart6_rx);
 800ac30:	4b41      	ldr	r3, [pc, #260]	@ (800ad38 <referee_processing_task+0x2e8>)
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	681a      	ldr	r2, [r3, #0]
 800ac36:	4b40      	ldr	r3, [pc, #256]	@ (800ad38 <referee_processing_task+0x2e8>)
 800ac38:	681b      	ldr	r3, [r3, #0]
 800ac3a:	f042 0201 	orr.w	r2, r2, #1
 800ac3e:	601a      	str	r2, [r3, #0]
			ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800ac40:	f107 0108 	add.w	r1, r7, #8
 800ac44:	4b2a      	ldr	r3, [pc, #168]	@ (800acf0 <referee_processing_task+0x2a0>)
 800ac46:	2202      	movs	r2, #2
 800ac48:	482a      	ldr	r0, [pc, #168]	@ (800acf4 <referee_processing_task+0x2a4>)
 800ac4a:	f7f7 ff73 	bl	8002b34 <ref_usart_start>

		}

		status_led(5, off_led);
 800ac4e:	2101      	movs	r1, #1
 800ac50:	2005      	movs	r0, #5
 800ac52:	f7f7 f9b1 	bl	8001fb8 <status_led>


		status_led(5, on_led);
 800ac56:	2100      	movs	r1, #0
 800ac58:	2005      	movs	r0, #5
 800ac5a:	f7f7 f9ad 	bl	8001fb8 <status_led>
		if (ref_robot_data.robot_level == 1) {
 800ac5e:	4b23      	ldr	r3, [pc, #140]	@ (800acec <referee_processing_task+0x29c>)
 800ac60:	785b      	ldrb	r3, [r3, #1]
 800ac62:	2b01      	cmp	r3, #1
 800ac64:	d112      	bne.n	800ac8c <referee_processing_task+0x23c>
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ac66:	4b20      	ldr	r3, [pc, #128]	@ (800ace8 <referee_processing_task+0x298>)
 800ac68:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ac6c:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800ac6e:	4b1e      	ldr	r3, [pc, #120]	@ (800ace8 <referee_processing_task+0x298>)
 800ac70:	2213      	movs	r2, #19
 800ac72:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 1;
 800ac74:	4b1c      	ldr	r3, [pc, #112]	@ (800ace8 <referee_processing_task+0x298>)
 800ac76:	2201      	movs	r2, #1
 800ac78:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800ac7a:	2100      	movs	r1, #0
 800ac7c:	2007      	movs	r0, #7
 800ac7e:	f7f7 f99b 	bl	8001fb8 <status_led>
			status_led(8, off_led);
 800ac82:	2101      	movs	r1, #1
 800ac84:	2008      	movs	r0, #8
 800ac86:	f7f7 f997 	bl	8001fb8 <status_led>
 800ac8a:	e05e      	b.n	800ad4a <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 2) {
 800ac8c:	4b17      	ldr	r3, [pc, #92]	@ (800acec <referee_processing_task+0x29c>)
 800ac8e:	785b      	ldrb	r3, [r3, #1]
 800ac90:	2b02      	cmp	r3, #2
 800ac92:	d112      	bne.n	800acba <referee_processing_task+0x26a>
			g_referee_limiters.feeding_speed = LV2_FEEDER;
 800ac94:	4b14      	ldr	r3, [pc, #80]	@ (800ace8 <referee_processing_task+0x298>)
 800ac96:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ac9a:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV2_PROJECTILE;
 800ac9c:	4b12      	ldr	r3, [pc, #72]	@ (800ace8 <referee_processing_task+0x298>)
 800ac9e:	2213      	movs	r2, #19
 800aca0:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 2;
 800aca2:	4b11      	ldr	r3, [pc, #68]	@ (800ace8 <referee_processing_task+0x298>)
 800aca4:	2202      	movs	r2, #2
 800aca6:	731a      	strb	r2, [r3, #12]
			status_led(7, off_led);
 800aca8:	2101      	movs	r1, #1
 800acaa:	2007      	movs	r0, #7
 800acac:	f7f7 f984 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800acb0:	2100      	movs	r1, #0
 800acb2:	2008      	movs	r0, #8
 800acb4:	f7f7 f980 	bl	8001fb8 <status_led>
 800acb8:	e047      	b.n	800ad4a <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 3) {
 800acba:	4b0c      	ldr	r3, [pc, #48]	@ (800acec <referee_processing_task+0x29c>)
 800acbc:	785b      	ldrb	r3, [r3, #1]
 800acbe:	2b03      	cmp	r3, #3
 800acc0:	d13c      	bne.n	800ad3c <referee_processing_task+0x2ec>
			g_referee_limiters.feeding_speed = LV3_FEEDER;
 800acc2:	4b09      	ldr	r3, [pc, #36]	@ (800ace8 <referee_processing_task+0x298>)
 800acc4:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800acc8:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV3_PROJECTILE;
 800acca:	4b07      	ldr	r3, [pc, #28]	@ (800ace8 <referee_processing_task+0x298>)
 800accc:	2213      	movs	r2, #19
 800acce:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 3;
 800acd0:	4b05      	ldr	r3, [pc, #20]	@ (800ace8 <referee_processing_task+0x298>)
 800acd2:	2203      	movs	r2, #3
 800acd4:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800acd6:	2100      	movs	r1, #0
 800acd8:	2007      	movs	r0, #7
 800acda:	f7f7 f96d 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800acde:	2100      	movs	r1, #0
 800ace0:	2008      	movs	r0, #8
 800ace2:	f7f7 f969 	bl	8001fb8 <status_led>
 800ace6:	e030      	b.n	800ad4a <referee_processing_task+0x2fa>
 800ace8:	200037cc 	.word	0x200037cc
 800acec:	20003850 	.word	0x20003850
 800acf0:	200038b8 	.word	0x200038b8
 800acf4:	20001c70 	.word	0x20001c70
 800acf8:	200037e4 	.word	0x200037e4
 800acfc:	2000389c 	.word	0x2000389c
 800ad00:	200038a4 	.word	0x200038a4
 800ad04:	20003828 	.word	0x20003828
 800ad08:	2000382c 	.word	0x2000382c
 800ad0c:	2000386c 	.word	0x2000386c
 800ad10:	20003884 	.word	0x20003884
 800ad14:	20003890 	.word	0x20003890
 800ad18:	20003870 	.word	0x20003870
 800ad1c:	20003880 	.word	0x20003880
 800ad20:	20003894 	.word	0x20003894
 800ad24:	20003898 	.word	0x20003898
 800ad28:	20003830 	.word	0x20003830
 800ad2c:	2000384c 	.word	0x2000384c
 800ad30:	200038a8 	.word	0x200038a8
 800ad34:	200038b0 	.word	0x200038b0
 800ad38:	20001d74 	.word	0x20001d74
		} else {
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800ad3c:	4b43      	ldr	r3, [pc, #268]	@ (800ae4c <referee_processing_task+0x3fc>)
 800ad3e:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800ad42:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800ad44:	4b41      	ldr	r3, [pc, #260]	@ (800ae4c <referee_processing_task+0x3fc>)
 800ad46:	2213      	movs	r2, #19
 800ad48:	805a      	strh	r2, [r3, #2]
		}
		if (ref_robot_data.robot_level != 0) {
 800ad4a:	4b41      	ldr	r3, [pc, #260]	@ (800ae50 <referee_processing_task+0x400>)
 800ad4c:	785b      	ldrb	r3, [r3, #1]
 800ad4e:	2b00      	cmp	r3, #0
 800ad50:	d070      	beq.n	800ae34 <referee_processing_task+0x3e4>
			float temp_buffer = 1;
 800ad52:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ad56:	61fb      	str	r3, [r7, #28]
			if (ref_power_data.buffer_energy < 50){
 800ad58:	4b3e      	ldr	r3, [pc, #248]	@ (800ae54 <referee_processing_task+0x404>)
 800ad5a:	891b      	ldrh	r3, [r3, #8]
 800ad5c:	2b31      	cmp	r3, #49	@ 0x31
 800ad5e:	d819      	bhi.n	800ad94 <referee_processing_task+0x344>
			temp_buffer = (float)ref_power_data.buffer_energy/50;
 800ad60:	4b3c      	ldr	r3, [pc, #240]	@ (800ae54 <referee_processing_task+0x404>)
 800ad62:	891b      	ldrh	r3, [r3, #8]
 800ad64:	ee07 3a90 	vmov	s15, r3
 800ad68:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800ad6c:	eddf 6a3a 	vldr	s13, [pc, #232]	@ 800ae58 <referee_processing_task+0x408>
 800ad70:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800ad74:	edc7 7a07 	vstr	s15, [r7, #28]
			temp_buffer = (temp_buffer > 1) ? 1 : temp_buffer;
 800ad78:	edd7 7a07 	vldr	s15, [r7, #28]
 800ad7c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800ad80:	eef4 7ac7 	vcmpe.f32	s15, s14
 800ad84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad88:	dd02      	ble.n	800ad90 <referee_processing_task+0x340>
 800ad8a:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800ad8e:	e000      	b.n	800ad92 <referee_processing_task+0x342>
 800ad90:	69fb      	ldr	r3, [r7, #28]
 800ad92:	61fb      	str	r3, [r7, #28]
			}
#ifdef CHASSIS_POWER_BUFFER_LIMITER
			g_referee_limiters.wheel_buffer_limit = temp_buffer * temp_buffer;
 800ad94:	edd7 7a07 	vldr	s15, [r7, #28]
 800ad98:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800ad9c:	4b2b      	ldr	r3, [pc, #172]	@ (800ae4c <referee_processing_task+0x3fc>)
 800ad9e:	edc3 7a02 	vstr	s15, [r3, #8]
#else
			g_referee_limiters.wheel_buffer_limit = 1;
#endif

			static float prev_chassis_power;
			float max_power = CHASSIS_MAX_POWER;
 800ada2:	4b2e      	ldr	r3, [pc, #184]	@ (800ae5c <referee_processing_task+0x40c>)
 800ada4:	61bb      	str	r3, [r7, #24]
			float curr_chassis_power = prev_chassis_power * 0.5 + ref_power_data.chassis_power * 0.5;
 800ada6:	4b2e      	ldr	r3, [pc, #184]	@ (800ae60 <referee_processing_task+0x410>)
 800ada8:	681b      	ldr	r3, [r3, #0]
 800adaa:	4618      	mov	r0, r3
 800adac:	f7f5 fbcc 	bl	8000548 <__aeabi_f2d>
 800adb0:	f04f 0200 	mov.w	r2, #0
 800adb4:	4b2b      	ldr	r3, [pc, #172]	@ (800ae64 <referee_processing_task+0x414>)
 800adb6:	f7f5 fc1f 	bl	80005f8 <__aeabi_dmul>
 800adba:	4602      	mov	r2, r0
 800adbc:	460b      	mov	r3, r1
 800adbe:	4614      	mov	r4, r2
 800adc0:	461d      	mov	r5, r3
 800adc2:	4b24      	ldr	r3, [pc, #144]	@ (800ae54 <referee_processing_task+0x404>)
 800adc4:	685b      	ldr	r3, [r3, #4]
 800adc6:	4618      	mov	r0, r3
 800adc8:	f7f5 fbbe 	bl	8000548 <__aeabi_f2d>
 800adcc:	f04f 0200 	mov.w	r2, #0
 800add0:	4b24      	ldr	r3, [pc, #144]	@ (800ae64 <referee_processing_task+0x414>)
 800add2:	f7f5 fc11 	bl	80005f8 <__aeabi_dmul>
 800add6:	4602      	mov	r2, r0
 800add8:	460b      	mov	r3, r1
 800adda:	4620      	mov	r0, r4
 800addc:	4629      	mov	r1, r5
 800adde:	f7f5 fa55 	bl	800028c <__adddf3>
 800ade2:	4602      	mov	r2, r0
 800ade4:	460b      	mov	r3, r1
 800ade6:	4610      	mov	r0, r2
 800ade8:	4619      	mov	r1, r3
 800adea:	f7f5 fefd 	bl	8000be8 <__aeabi_d2f>
 800adee:	4603      	mov	r3, r0
 800adf0:	613b      	str	r3, [r7, #16]
			prev_chassis_power = ref_power_data.chassis_power;
 800adf2:	4b18      	ldr	r3, [pc, #96]	@ (800ae54 <referee_processing_task+0x404>)
 800adf4:	685b      	ldr	r3, [r3, #4]
 800adf6:	4a1a      	ldr	r2, [pc, #104]	@ (800ae60 <referee_processing_task+0x410>)
 800adf8:	6013      	str	r3, [r2, #0]
			if (ref_robot_data.chassis_power_limit < CHASSIS_MAX_POWER){
 800adfa:	4b15      	ldr	r3, [pc, #84]	@ (800ae50 <referee_processing_task+0x400>)
 800adfc:	8b1b      	ldrh	r3, [r3, #24]
 800adfe:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800ae02:	d207      	bcs.n	800ae14 <referee_processing_task+0x3c4>
				max_power = ref_robot_data.chassis_power_limit;
 800ae04:	4b12      	ldr	r3, [pc, #72]	@ (800ae50 <referee_processing_task+0x400>)
 800ae06:	8b1b      	ldrh	r3, [r3, #24]
 800ae08:	ee07 3a90 	vmov	s15, r3
 800ae0c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800ae10:	edc7 7a06 	vstr	s15, [r7, #24]
			}
			float temp_power = (float) ((curr_chassis_power)/(max_power - CHASSIS_POWER_MARGIN));
 800ae14:	edd7 7a06 	vldr	s15, [r7, #24]
 800ae18:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800ae1c:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800ae20:	edd7 6a04 	vldr	s13, [r7, #16]
 800ae24:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800ae28:	edc7 7a03 	vstr	s15, [r7, #12]
//			temp_power = (temp_power > 1) ? 1 : temp_power;
			g_referee_limiters.wheel_power_limit = temp_power;
 800ae2c:	4a07      	ldr	r2, [pc, #28]	@ (800ae4c <referee_processing_task+0x3fc>)
 800ae2e:	68fb      	ldr	r3, [r7, #12]
 800ae30:	6053      	str	r3, [r2, #4]
 800ae32:	e007      	b.n	800ae44 <referee_processing_task+0x3f4>
//			arm_sqrt_f32(temp_power, &referee_limiters.wheel_power_limit);
		} else {
			g_referee_limiters.wheel_buffer_limit = 1;
 800ae34:	4b05      	ldr	r3, [pc, #20]	@ (800ae4c <referee_processing_task+0x3fc>)
 800ae36:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800ae3a:	609a      	str	r2, [r3, #8]
			g_referee_limiters.wheel_power_limit = 1;
 800ae3c:	4b03      	ldr	r3, [pc, #12]	@ (800ae4c <referee_processing_task+0x3fc>)
 800ae3e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800ae42:	605a      	str	r2, [r3, #4]

		}
		vTaskDelay(2);
 800ae44:	2002      	movs	r0, #2
 800ae46:	f00d facd 	bl	80183e4 <vTaskDelay>
	while (1) {
 800ae4a:	e624      	b.n	800aa96 <referee_processing_task+0x46>
 800ae4c:	200037cc 	.word	0x200037cc
 800ae50:	20003850 	.word	0x20003850
 800ae54:	20003870 	.word	0x20003870
 800ae58:	42480000 	.word	0x42480000
 800ae5c:	43c80000 	.word	0x43c80000
 800ae60:	200039c0 	.word	0x200039c0
 800ae64:	3fe00000 	.word	0x3fe00000

0800ae68 <rtIsInf>:
 800ae68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ae6a:	b083      	sub	sp, #12
 800ae6c:	af00      	add	r7, sp, #0
 800ae6e:	ed87 0b00 	vstr	d0, [r7]
 800ae72:	683c      	ldr	r4, [r7, #0]
 800ae74:	687b      	ldr	r3, [r7, #4]
 800ae76:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800ae7a:	2301      	movs	r3, #1
 800ae7c:	461e      	mov	r6, r3
 800ae7e:	f04f 32ff 	mov.w	r2, #4294967295
 800ae82:	4b0f      	ldr	r3, [pc, #60]	@ (800aec0 <rtIsInf+0x58>)
 800ae84:	4620      	mov	r0, r4
 800ae86:	4629      	mov	r1, r5
 800ae88:	f7f5 fe50 	bl	8000b2c <__aeabi_dcmpun>
 800ae8c:	4603      	mov	r3, r0
 800ae8e:	2b00      	cmp	r3, #0
 800ae90:	d10b      	bne.n	800aeaa <rtIsInf+0x42>
 800ae92:	f04f 32ff 	mov.w	r2, #4294967295
 800ae96:	4b0a      	ldr	r3, [pc, #40]	@ (800aec0 <rtIsInf+0x58>)
 800ae98:	4620      	mov	r0, r4
 800ae9a:	4629      	mov	r1, r5
 800ae9c:	f7f5 fe28 	bl	8000af0 <__aeabi_dcmple>
 800aea0:	4603      	mov	r3, r0
 800aea2:	2b00      	cmp	r3, #0
 800aea4:	d101      	bne.n	800aeaa <rtIsInf+0x42>
 800aea6:	2300      	movs	r3, #0
 800aea8:	461e      	mov	r6, r3
 800aeaa:	b2f3      	uxtb	r3, r6
 800aeac:	f083 0301 	eor.w	r3, r3, #1
 800aeb0:	b2db      	uxtb	r3, r3
 800aeb2:	f003 0301 	and.w	r3, r3, #1
 800aeb6:	b2db      	uxtb	r3, r3
 800aeb8:	4618      	mov	r0, r3
 800aeba:	370c      	adds	r7, #12
 800aebc:	46bd      	mov	sp, r7
 800aebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aec0:	7fefffff 	.word	0x7fefffff

0800aec4 <rtIsNaN>:
 800aec4:	b580      	push	{r7, lr}
 800aec6:	b082      	sub	sp, #8
 800aec8:	af00      	add	r7, sp, #0
 800aeca:	ed87 0b00 	vstr	d0, [r7]
 800aece:	e9d7 2300 	ldrd	r2, r3, [r7]
 800aed2:	e9d7 0100 	ldrd	r0, r1, [r7]
 800aed6:	f7f5 fe29 	bl	8000b2c <__aeabi_dcmpun>
 800aeda:	4603      	mov	r3, r0
 800aedc:	2b00      	cmp	r3, #0
 800aede:	d001      	beq.n	800aee4 <rtIsNaN+0x20>
 800aee0:	2301      	movs	r3, #1
 800aee2:	e000      	b.n	800aee6 <rtIsNaN+0x22>
 800aee4:	2300      	movs	r3, #0
 800aee6:	4618      	mov	r0, r3
 800aee8:	3708      	adds	r7, #8
 800aeea:	46bd      	mov	sp, r7
 800aeec:	bd80      	pop	{r7, pc}

0800aeee <startup_task>:
#include "startup_task.h"
#include "gimbal_control_task.h"
#include "buzzing_task.h"
#include <can_msg_processor.h>

void startup_task() {
 800aeee:	b580      	push	{r7, lr}
 800aef0:	af00      	add	r7, sp, #0
	//todo: shift all to an actual task, reimplement motor not connected errors
	led_on();
 800aef2:	f7f7 f83b 	bl	8001f6c <led_on>
	buzzer_init();
 800aef6:	f7f6 f95b 	bl	80011b0 <buzzer_init>
	imu_init();
 800aefa:	f7f6 fe41 	bl	8001b80 <imu_init>
	led_green_off();
 800aefe:	f7f7 f827 	bl	8001f50 <led_green_off>
	start_micros_timer();
 800af02:	f7f7 f939 	bl	8002178 <start_micros_timer>
	led_toggle();
 800af06:	f7f7 f84f 	bl	8001fa8 <led_toggle>

}
 800af0a:	bf00      	nop
 800af0c:	bd80      	pop	{r7, pc}
	...

0800af10 <usb_vcp_processing>:
uint8_t usb_waiting = 0;

//#define DATA_OUTPUT_MODE
#define USB_CONFIG_MODE

void usb_vcp_processing(uint8_t *buffer, uint32_t *len) {
 800af10:	b580      	push	{r7, lr}
 800af12:	b0c4      	sub	sp, #272	@ 0x110
 800af14:	af00      	add	r7, sp, #0
 800af16:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af1a:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800af1e:	6018      	str	r0, [r3, #0]
 800af20:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af24:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800af28:	6019      	str	r1, [r3, #0]
	uint8_t blank_buffer[MAX_CHAR_SIZE] = { 0 };
 800af2a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af2e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800af32:	2200      	movs	r2, #0
 800af34:	601a      	str	r2, [r3, #0]
 800af36:	3304      	adds	r3, #4
 800af38:	22fc      	movs	r2, #252	@ 0xfc
 800af3a:	2100      	movs	r1, #0
 800af3c:	4618      	mov	r0, r3
 800af3e:	f00f ff98 	bl	801ae72 <memset>
	memcpy(blank_buffer, buffer, *len);
 800af42:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af46:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800af4a:	681b      	ldr	r3, [r3, #0]
 800af4c:	681a      	ldr	r2, [r3, #0]
 800af4e:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af52:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800af56:	f107 0010 	add.w	r0, r7, #16
 800af5a:	6819      	ldr	r1, [r3, #0]
 800af5c:	f010 f832 	bl	801afc4 <memcpy>
	memcpy(usb_input_buffer, blank_buffer, MAX_CHAR_SIZE);
 800af60:	4a1a      	ldr	r2, [pc, #104]	@ (800afcc <usb_vcp_processing+0xbc>)
 800af62:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af66:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800af6a:	4610      	mov	r0, r2
 800af6c:	4619      	mov	r1, r3
 800af6e:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800af72:	461a      	mov	r2, r3
 800af74:	f010 f826 	bl	801afc4 <memcpy>
	usb_input_len = *len;
 800af78:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af7c:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800af80:	681b      	ldr	r3, [r3, #0]
 800af82:	681b      	ldr	r3, [r3, #0]
 800af84:	4a12      	ldr	r2, [pc, #72]	@ (800afd0 <usb_vcp_processing+0xc0>)
 800af86:	6013      	str	r3, [r2, #0]

	//Check if the currently running task needs to yield
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 800af88:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800af8c:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800af90:	2200      	movs	r2, #0
 800af92:	601a      	str	r2, [r3, #0]
	xSemaphoreGiveFromISR(usb_continue_semaphore, &xHigherPriorityTaskWoken);
 800af94:	4b0f      	ldr	r3, [pc, #60]	@ (800afd4 <usb_vcp_processing+0xc4>)
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	f107 020c 	add.w	r2, r7, #12
 800af9c:	4611      	mov	r1, r2
 800af9e:	4618      	mov	r0, r3
 800afa0:	f00c fcd6 	bl	8017950 <xQueueGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 800afa4:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800afa8:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800afac:	681b      	ldr	r3, [r3, #0]
 800afae:	2b00      	cmp	r3, #0
 800afb0:	d007      	beq.n	800afc2 <usb_vcp_processing+0xb2>
 800afb2:	4b09      	ldr	r3, [pc, #36]	@ (800afd8 <usb_vcp_processing+0xc8>)
 800afb4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800afb8:	601a      	str	r2, [r3, #0]
 800afba:	f3bf 8f4f 	dsb	sy
 800afbe:	f3bf 8f6f 	isb	sy
}
 800afc2:	bf00      	nop
 800afc4:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800afc8:	46bd      	mov	sp, r7
 800afca:	bd80      	pop	{r7, pc}
 800afcc:	200039c4 	.word	0x200039c4
 800afd0:	20003ac4 	.word	0x20003ac4
 800afd4:	200037b4 	.word	0x200037b4
 800afd8:	e000ed04 	.word	0xe000ed04

0800afdc <usb_task>:
	return 0;

}


void usb_task(void *argument) {
 800afdc:	b580      	push	{r7, lr}
 800afde:	b082      	sub	sp, #8
 800afe0:	af00      	add	r7, sp, #0
 800afe2:	6078      	str	r0, [r7, #4]
//						CDC_Transmit_FS(usb_input_buffer, len);
//					}
//				}
//			}
//		}
		vTaskDelay(100);
 800afe4:	2064      	movs	r0, #100	@ 0x64
 800afe6:	f00d f9fd 	bl	80183e4 <vTaskDelay>
 800afea:	e7fb      	b.n	800afe4 <usb_task+0x8>

0800afec <HAL_Init>:
 800afec:	b580      	push	{r7, lr}
 800afee:	af00      	add	r7, sp, #0
 800aff0:	4b0e      	ldr	r3, [pc, #56]	@ (800b02c <HAL_Init+0x40>)
 800aff2:	681b      	ldr	r3, [r3, #0]
 800aff4:	4a0d      	ldr	r2, [pc, #52]	@ (800b02c <HAL_Init+0x40>)
 800aff6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800affa:	6013      	str	r3, [r2, #0]
 800affc:	4b0b      	ldr	r3, [pc, #44]	@ (800b02c <HAL_Init+0x40>)
 800affe:	681b      	ldr	r3, [r3, #0]
 800b000:	4a0a      	ldr	r2, [pc, #40]	@ (800b02c <HAL_Init+0x40>)
 800b002:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800b006:	6013      	str	r3, [r2, #0]
 800b008:	4b08      	ldr	r3, [pc, #32]	@ (800b02c <HAL_Init+0x40>)
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	4a07      	ldr	r2, [pc, #28]	@ (800b02c <HAL_Init+0x40>)
 800b00e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b012:	6013      	str	r3, [r2, #0]
 800b014:	2003      	movs	r0, #3
 800b016:	f001 fa02 	bl	800c41e <HAL_NVIC_SetPriorityGrouping>
 800b01a:	200f      	movs	r0, #15
 800b01c:	f7f8 fd56 	bl	8003acc <HAL_InitTick>
 800b020:	f7f8 fd28 	bl	8003a74 <HAL_MspInit>
 800b024:	2300      	movs	r3, #0
 800b026:	4618      	mov	r0, r3
 800b028:	bd80      	pop	{r7, pc}
 800b02a:	bf00      	nop
 800b02c:	40023c00 	.word	0x40023c00

0800b030 <HAL_IncTick>:
 800b030:	b480      	push	{r7}
 800b032:	af00      	add	r7, sp, #0
 800b034:	4b06      	ldr	r3, [pc, #24]	@ (800b050 <HAL_IncTick+0x20>)
 800b036:	781b      	ldrb	r3, [r3, #0]
 800b038:	461a      	mov	r2, r3
 800b03a:	4b06      	ldr	r3, [pc, #24]	@ (800b054 <HAL_IncTick+0x24>)
 800b03c:	681b      	ldr	r3, [r3, #0]
 800b03e:	4413      	add	r3, r2
 800b040:	4a04      	ldr	r2, [pc, #16]	@ (800b054 <HAL_IncTick+0x24>)
 800b042:	6013      	str	r3, [r2, #0]
 800b044:	bf00      	nop
 800b046:	46bd      	mov	sp, r7
 800b048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b04c:	4770      	bx	lr
 800b04e:	bf00      	nop
 800b050:	2000001c 	.word	0x2000001c
 800b054:	20003ac8 	.word	0x20003ac8

0800b058 <HAL_GetTick>:
 800b058:	b480      	push	{r7}
 800b05a:	af00      	add	r7, sp, #0
 800b05c:	4b03      	ldr	r3, [pc, #12]	@ (800b06c <HAL_GetTick+0x14>)
 800b05e:	681b      	ldr	r3, [r3, #0]
 800b060:	4618      	mov	r0, r3
 800b062:	46bd      	mov	sp, r7
 800b064:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b068:	4770      	bx	lr
 800b06a:	bf00      	nop
 800b06c:	20003ac8 	.word	0x20003ac8

0800b070 <HAL_Delay>:
 800b070:	b580      	push	{r7, lr}
 800b072:	b084      	sub	sp, #16
 800b074:	af00      	add	r7, sp, #0
 800b076:	6078      	str	r0, [r7, #4]
 800b078:	f7ff ffee 	bl	800b058 <HAL_GetTick>
 800b07c:	60b8      	str	r0, [r7, #8]
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	60fb      	str	r3, [r7, #12]
 800b082:	68fb      	ldr	r3, [r7, #12]
 800b084:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b088:	d005      	beq.n	800b096 <HAL_Delay+0x26>
 800b08a:	4b0a      	ldr	r3, [pc, #40]	@ (800b0b4 <HAL_Delay+0x44>)
 800b08c:	781b      	ldrb	r3, [r3, #0]
 800b08e:	461a      	mov	r2, r3
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	4413      	add	r3, r2
 800b094:	60fb      	str	r3, [r7, #12]
 800b096:	bf00      	nop
 800b098:	f7ff ffde 	bl	800b058 <HAL_GetTick>
 800b09c:	4602      	mov	r2, r0
 800b09e:	68bb      	ldr	r3, [r7, #8]
 800b0a0:	1ad3      	subs	r3, r2, r3
 800b0a2:	68fa      	ldr	r2, [r7, #12]
 800b0a4:	429a      	cmp	r2, r3
 800b0a6:	d8f7      	bhi.n	800b098 <HAL_Delay+0x28>
 800b0a8:	bf00      	nop
 800b0aa:	bf00      	nop
 800b0ac:	3710      	adds	r7, #16
 800b0ae:	46bd      	mov	sp, r7
 800b0b0:	bd80      	pop	{r7, pc}
 800b0b2:	bf00      	nop
 800b0b4:	2000001c 	.word	0x2000001c

0800b0b8 <HAL_ADC_Init>:
 800b0b8:	b580      	push	{r7, lr}
 800b0ba:	b084      	sub	sp, #16
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
 800b0c0:	2300      	movs	r3, #0
 800b0c2:	73fb      	strb	r3, [r7, #15]
 800b0c4:	687b      	ldr	r3, [r7, #4]
 800b0c6:	2b00      	cmp	r3, #0
 800b0c8:	d101      	bne.n	800b0ce <HAL_ADC_Init+0x16>
 800b0ca:	2301      	movs	r3, #1
 800b0cc:	e033      	b.n	800b136 <HAL_ADC_Init+0x7e>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b0d2:	2b00      	cmp	r3, #0
 800b0d4:	d109      	bne.n	800b0ea <HAL_ADC_Init+0x32>
 800b0d6:	6878      	ldr	r0, [r7, #4]
 800b0d8:	f7f7 fe5e 	bl	8002d98 <HAL_ADC_MspInit>
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	2200      	movs	r2, #0
 800b0e0:	645a      	str	r2, [r3, #68]	@ 0x44
 800b0e2:	687b      	ldr	r3, [r7, #4]
 800b0e4:	2200      	movs	r2, #0
 800b0e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b0ee:	f003 0310 	and.w	r3, r3, #16
 800b0f2:	2b00      	cmp	r3, #0
 800b0f4:	d118      	bne.n	800b128 <HAL_ADC_Init+0x70>
 800b0f6:	687b      	ldr	r3, [r7, #4]
 800b0f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b0fa:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800b0fe:	f023 0302 	bic.w	r3, r3, #2
 800b102:	f043 0202 	orr.w	r2, r3, #2
 800b106:	687b      	ldr	r3, [r7, #4]
 800b108:	641a      	str	r2, [r3, #64]	@ 0x40
 800b10a:	6878      	ldr	r0, [r7, #4]
 800b10c:	f000 f93a 	bl	800b384 <ADC_Init>
 800b110:	687b      	ldr	r3, [r7, #4]
 800b112:	2200      	movs	r2, #0
 800b114:	645a      	str	r2, [r3, #68]	@ 0x44
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b11a:	f023 0303 	bic.w	r3, r3, #3
 800b11e:	f043 0201 	orr.w	r2, r3, #1
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	641a      	str	r2, [r3, #64]	@ 0x40
 800b126:	e001      	b.n	800b12c <HAL_ADC_Init+0x74>
 800b128:	2301      	movs	r3, #1
 800b12a:	73fb      	strb	r3, [r7, #15]
 800b12c:	687b      	ldr	r3, [r7, #4]
 800b12e:	2200      	movs	r2, #0
 800b130:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b134:	7bfb      	ldrb	r3, [r7, #15]
 800b136:	4618      	mov	r0, r3
 800b138:	3710      	adds	r7, #16
 800b13a:	46bd      	mov	sp, r7
 800b13c:	bd80      	pop	{r7, pc}
	...

0800b140 <HAL_ADC_ConfigChannel>:
 800b140:	b480      	push	{r7}
 800b142:	b085      	sub	sp, #20
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	6039      	str	r1, [r7, #0]
 800b14a:	2300      	movs	r3, #0
 800b14c:	60bb      	str	r3, [r7, #8]
 800b14e:	687b      	ldr	r3, [r7, #4]
 800b150:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800b154:	2b01      	cmp	r3, #1
 800b156:	d101      	bne.n	800b15c <HAL_ADC_ConfigChannel+0x1c>
 800b158:	2302      	movs	r3, #2
 800b15a:	e105      	b.n	800b368 <HAL_ADC_ConfigChannel+0x228>
 800b15c:	687b      	ldr	r3, [r7, #4]
 800b15e:	2201      	movs	r2, #1
 800b160:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b164:	683b      	ldr	r3, [r7, #0]
 800b166:	681b      	ldr	r3, [r3, #0]
 800b168:	2b09      	cmp	r3, #9
 800b16a:	d925      	bls.n	800b1b8 <HAL_ADC_ConfigChannel+0x78>
 800b16c:	687b      	ldr	r3, [r7, #4]
 800b16e:	681b      	ldr	r3, [r3, #0]
 800b170:	68d9      	ldr	r1, [r3, #12]
 800b172:	683b      	ldr	r3, [r7, #0]
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	b29b      	uxth	r3, r3
 800b178:	461a      	mov	r2, r3
 800b17a:	4613      	mov	r3, r2
 800b17c:	005b      	lsls	r3, r3, #1
 800b17e:	4413      	add	r3, r2
 800b180:	3b1e      	subs	r3, #30
 800b182:	2207      	movs	r2, #7
 800b184:	fa02 f303 	lsl.w	r3, r2, r3
 800b188:	43da      	mvns	r2, r3
 800b18a:	687b      	ldr	r3, [r7, #4]
 800b18c:	681b      	ldr	r3, [r3, #0]
 800b18e:	400a      	ands	r2, r1
 800b190:	60da      	str	r2, [r3, #12]
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	681b      	ldr	r3, [r3, #0]
 800b196:	68d9      	ldr	r1, [r3, #12]
 800b198:	683b      	ldr	r3, [r7, #0]
 800b19a:	689a      	ldr	r2, [r3, #8]
 800b19c:	683b      	ldr	r3, [r7, #0]
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	b29b      	uxth	r3, r3
 800b1a2:	4618      	mov	r0, r3
 800b1a4:	4603      	mov	r3, r0
 800b1a6:	005b      	lsls	r3, r3, #1
 800b1a8:	4403      	add	r3, r0
 800b1aa:	3b1e      	subs	r3, #30
 800b1ac:	409a      	lsls	r2, r3
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	681b      	ldr	r3, [r3, #0]
 800b1b2:	430a      	orrs	r2, r1
 800b1b4:	60da      	str	r2, [r3, #12]
 800b1b6:	e022      	b.n	800b1fe <HAL_ADC_ConfigChannel+0xbe>
 800b1b8:	687b      	ldr	r3, [r7, #4]
 800b1ba:	681b      	ldr	r3, [r3, #0]
 800b1bc:	6919      	ldr	r1, [r3, #16]
 800b1be:	683b      	ldr	r3, [r7, #0]
 800b1c0:	681b      	ldr	r3, [r3, #0]
 800b1c2:	b29b      	uxth	r3, r3
 800b1c4:	461a      	mov	r2, r3
 800b1c6:	4613      	mov	r3, r2
 800b1c8:	005b      	lsls	r3, r3, #1
 800b1ca:	4413      	add	r3, r2
 800b1cc:	2207      	movs	r2, #7
 800b1ce:	fa02 f303 	lsl.w	r3, r2, r3
 800b1d2:	43da      	mvns	r2, r3
 800b1d4:	687b      	ldr	r3, [r7, #4]
 800b1d6:	681b      	ldr	r3, [r3, #0]
 800b1d8:	400a      	ands	r2, r1
 800b1da:	611a      	str	r2, [r3, #16]
 800b1dc:	687b      	ldr	r3, [r7, #4]
 800b1de:	681b      	ldr	r3, [r3, #0]
 800b1e0:	6919      	ldr	r1, [r3, #16]
 800b1e2:	683b      	ldr	r3, [r7, #0]
 800b1e4:	689a      	ldr	r2, [r3, #8]
 800b1e6:	683b      	ldr	r3, [r7, #0]
 800b1e8:	681b      	ldr	r3, [r3, #0]
 800b1ea:	b29b      	uxth	r3, r3
 800b1ec:	4618      	mov	r0, r3
 800b1ee:	4603      	mov	r3, r0
 800b1f0:	005b      	lsls	r3, r3, #1
 800b1f2:	4403      	add	r3, r0
 800b1f4:	409a      	lsls	r2, r3
 800b1f6:	687b      	ldr	r3, [r7, #4]
 800b1f8:	681b      	ldr	r3, [r3, #0]
 800b1fa:	430a      	orrs	r2, r1
 800b1fc:	611a      	str	r2, [r3, #16]
 800b1fe:	683b      	ldr	r3, [r7, #0]
 800b200:	685b      	ldr	r3, [r3, #4]
 800b202:	2b06      	cmp	r3, #6
 800b204:	d824      	bhi.n	800b250 <HAL_ADC_ConfigChannel+0x110>
 800b206:	687b      	ldr	r3, [r7, #4]
 800b208:	681b      	ldr	r3, [r3, #0]
 800b20a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b20c:	683b      	ldr	r3, [r7, #0]
 800b20e:	685a      	ldr	r2, [r3, #4]
 800b210:	4613      	mov	r3, r2
 800b212:	009b      	lsls	r3, r3, #2
 800b214:	4413      	add	r3, r2
 800b216:	3b05      	subs	r3, #5
 800b218:	221f      	movs	r2, #31
 800b21a:	fa02 f303 	lsl.w	r3, r2, r3
 800b21e:	43da      	mvns	r2, r3
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	681b      	ldr	r3, [r3, #0]
 800b224:	400a      	ands	r2, r1
 800b226:	635a      	str	r2, [r3, #52]	@ 0x34
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	681b      	ldr	r3, [r3, #0]
 800b22c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800b22e:	683b      	ldr	r3, [r7, #0]
 800b230:	681b      	ldr	r3, [r3, #0]
 800b232:	b29b      	uxth	r3, r3
 800b234:	4618      	mov	r0, r3
 800b236:	683b      	ldr	r3, [r7, #0]
 800b238:	685a      	ldr	r2, [r3, #4]
 800b23a:	4613      	mov	r3, r2
 800b23c:	009b      	lsls	r3, r3, #2
 800b23e:	4413      	add	r3, r2
 800b240:	3b05      	subs	r3, #5
 800b242:	fa00 f203 	lsl.w	r2, r0, r3
 800b246:	687b      	ldr	r3, [r7, #4]
 800b248:	681b      	ldr	r3, [r3, #0]
 800b24a:	430a      	orrs	r2, r1
 800b24c:	635a      	str	r2, [r3, #52]	@ 0x34
 800b24e:	e04c      	b.n	800b2ea <HAL_ADC_ConfigChannel+0x1aa>
 800b250:	683b      	ldr	r3, [r7, #0]
 800b252:	685b      	ldr	r3, [r3, #4]
 800b254:	2b0c      	cmp	r3, #12
 800b256:	d824      	bhi.n	800b2a2 <HAL_ADC_ConfigChannel+0x162>
 800b258:	687b      	ldr	r3, [r7, #4]
 800b25a:	681b      	ldr	r3, [r3, #0]
 800b25c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b25e:	683b      	ldr	r3, [r7, #0]
 800b260:	685a      	ldr	r2, [r3, #4]
 800b262:	4613      	mov	r3, r2
 800b264:	009b      	lsls	r3, r3, #2
 800b266:	4413      	add	r3, r2
 800b268:	3b23      	subs	r3, #35	@ 0x23
 800b26a:	221f      	movs	r2, #31
 800b26c:	fa02 f303 	lsl.w	r3, r2, r3
 800b270:	43da      	mvns	r2, r3
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	400a      	ands	r2, r1
 800b278:	631a      	str	r2, [r3, #48]	@ 0x30
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	681b      	ldr	r3, [r3, #0]
 800b27e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800b280:	683b      	ldr	r3, [r7, #0]
 800b282:	681b      	ldr	r3, [r3, #0]
 800b284:	b29b      	uxth	r3, r3
 800b286:	4618      	mov	r0, r3
 800b288:	683b      	ldr	r3, [r7, #0]
 800b28a:	685a      	ldr	r2, [r3, #4]
 800b28c:	4613      	mov	r3, r2
 800b28e:	009b      	lsls	r3, r3, #2
 800b290:	4413      	add	r3, r2
 800b292:	3b23      	subs	r3, #35	@ 0x23
 800b294:	fa00 f203 	lsl.w	r2, r0, r3
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	430a      	orrs	r2, r1
 800b29e:	631a      	str	r2, [r3, #48]	@ 0x30
 800b2a0:	e023      	b.n	800b2ea <HAL_ADC_ConfigChannel+0x1aa>
 800b2a2:	687b      	ldr	r3, [r7, #4]
 800b2a4:	681b      	ldr	r3, [r3, #0]
 800b2a6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b2a8:	683b      	ldr	r3, [r7, #0]
 800b2aa:	685a      	ldr	r2, [r3, #4]
 800b2ac:	4613      	mov	r3, r2
 800b2ae:	009b      	lsls	r3, r3, #2
 800b2b0:	4413      	add	r3, r2
 800b2b2:	3b41      	subs	r3, #65	@ 0x41
 800b2b4:	221f      	movs	r2, #31
 800b2b6:	fa02 f303 	lsl.w	r3, r2, r3
 800b2ba:	43da      	mvns	r2, r3
 800b2bc:	687b      	ldr	r3, [r7, #4]
 800b2be:	681b      	ldr	r3, [r3, #0]
 800b2c0:	400a      	ands	r2, r1
 800b2c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	681b      	ldr	r3, [r3, #0]
 800b2c8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b2ca:	683b      	ldr	r3, [r7, #0]
 800b2cc:	681b      	ldr	r3, [r3, #0]
 800b2ce:	b29b      	uxth	r3, r3
 800b2d0:	4618      	mov	r0, r3
 800b2d2:	683b      	ldr	r3, [r7, #0]
 800b2d4:	685a      	ldr	r2, [r3, #4]
 800b2d6:	4613      	mov	r3, r2
 800b2d8:	009b      	lsls	r3, r3, #2
 800b2da:	4413      	add	r3, r2
 800b2dc:	3b41      	subs	r3, #65	@ 0x41
 800b2de:	fa00 f203 	lsl.w	r2, r0, r3
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	681b      	ldr	r3, [r3, #0]
 800b2e6:	430a      	orrs	r2, r1
 800b2e8:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b2ea:	4b22      	ldr	r3, [pc, #136]	@ (800b374 <HAL_ADC_ConfigChannel+0x234>)
 800b2ec:	60fb      	str	r3, [r7, #12]
 800b2ee:	687b      	ldr	r3, [r7, #4]
 800b2f0:	681b      	ldr	r3, [r3, #0]
 800b2f2:	4a21      	ldr	r2, [pc, #132]	@ (800b378 <HAL_ADC_ConfigChannel+0x238>)
 800b2f4:	4293      	cmp	r3, r2
 800b2f6:	d109      	bne.n	800b30c <HAL_ADC_ConfigChannel+0x1cc>
 800b2f8:	683b      	ldr	r3, [r7, #0]
 800b2fa:	681b      	ldr	r3, [r3, #0]
 800b2fc:	2b12      	cmp	r3, #18
 800b2fe:	d105      	bne.n	800b30c <HAL_ADC_ConfigChannel+0x1cc>
 800b300:	68fb      	ldr	r3, [r7, #12]
 800b302:	685b      	ldr	r3, [r3, #4]
 800b304:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 800b308:	68fb      	ldr	r3, [r7, #12]
 800b30a:	605a      	str	r2, [r3, #4]
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	681b      	ldr	r3, [r3, #0]
 800b310:	4a19      	ldr	r2, [pc, #100]	@ (800b378 <HAL_ADC_ConfigChannel+0x238>)
 800b312:	4293      	cmp	r3, r2
 800b314:	d123      	bne.n	800b35e <HAL_ADC_ConfigChannel+0x21e>
 800b316:	683b      	ldr	r3, [r7, #0]
 800b318:	681b      	ldr	r3, [r3, #0]
 800b31a:	2b10      	cmp	r3, #16
 800b31c:	d003      	beq.n	800b326 <HAL_ADC_ConfigChannel+0x1e6>
 800b31e:	683b      	ldr	r3, [r7, #0]
 800b320:	681b      	ldr	r3, [r3, #0]
 800b322:	2b11      	cmp	r3, #17
 800b324:	d11b      	bne.n	800b35e <HAL_ADC_ConfigChannel+0x21e>
 800b326:	68fb      	ldr	r3, [r7, #12]
 800b328:	685b      	ldr	r3, [r3, #4]
 800b32a:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800b32e:	68fb      	ldr	r3, [r7, #12]
 800b330:	605a      	str	r2, [r3, #4]
 800b332:	683b      	ldr	r3, [r7, #0]
 800b334:	681b      	ldr	r3, [r3, #0]
 800b336:	2b10      	cmp	r3, #16
 800b338:	d111      	bne.n	800b35e <HAL_ADC_ConfigChannel+0x21e>
 800b33a:	4b10      	ldr	r3, [pc, #64]	@ (800b37c <HAL_ADC_ConfigChannel+0x23c>)
 800b33c:	681b      	ldr	r3, [r3, #0]
 800b33e:	4a10      	ldr	r2, [pc, #64]	@ (800b380 <HAL_ADC_ConfigChannel+0x240>)
 800b340:	fba2 2303 	umull	r2, r3, r2, r3
 800b344:	0c9a      	lsrs	r2, r3, #18
 800b346:	4613      	mov	r3, r2
 800b348:	009b      	lsls	r3, r3, #2
 800b34a:	4413      	add	r3, r2
 800b34c:	005b      	lsls	r3, r3, #1
 800b34e:	60bb      	str	r3, [r7, #8]
 800b350:	e002      	b.n	800b358 <HAL_ADC_ConfigChannel+0x218>
 800b352:	68bb      	ldr	r3, [r7, #8]
 800b354:	3b01      	subs	r3, #1
 800b356:	60bb      	str	r3, [r7, #8]
 800b358:	68bb      	ldr	r3, [r7, #8]
 800b35a:	2b00      	cmp	r3, #0
 800b35c:	d1f9      	bne.n	800b352 <HAL_ADC_ConfigChannel+0x212>
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	2200      	movs	r2, #0
 800b362:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800b366:	2300      	movs	r3, #0
 800b368:	4618      	mov	r0, r3
 800b36a:	3714      	adds	r7, #20
 800b36c:	46bd      	mov	sp, r7
 800b36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b372:	4770      	bx	lr
 800b374:	40012300 	.word	0x40012300
 800b378:	40012000 	.word	0x40012000
 800b37c:	20000004 	.word	0x20000004
 800b380:	431bde83 	.word	0x431bde83

0800b384 <ADC_Init>:
 800b384:	b480      	push	{r7}
 800b386:	b085      	sub	sp, #20
 800b388:	af00      	add	r7, sp, #0
 800b38a:	6078      	str	r0, [r7, #4]
 800b38c:	4b79      	ldr	r3, [pc, #484]	@ (800b574 <ADC_Init+0x1f0>)
 800b38e:	60fb      	str	r3, [r7, #12]
 800b390:	68fb      	ldr	r3, [r7, #12]
 800b392:	685b      	ldr	r3, [r3, #4]
 800b394:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800b398:	68fb      	ldr	r3, [r7, #12]
 800b39a:	605a      	str	r2, [r3, #4]
 800b39c:	68fb      	ldr	r3, [r7, #12]
 800b39e:	685a      	ldr	r2, [r3, #4]
 800b3a0:	687b      	ldr	r3, [r7, #4]
 800b3a2:	685b      	ldr	r3, [r3, #4]
 800b3a4:	431a      	orrs	r2, r3
 800b3a6:	68fb      	ldr	r3, [r7, #12]
 800b3a8:	605a      	str	r2, [r3, #4]
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	681b      	ldr	r3, [r3, #0]
 800b3ae:	685a      	ldr	r2, [r3, #4]
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	681b      	ldr	r3, [r3, #0]
 800b3b4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800b3b8:	605a      	str	r2, [r3, #4]
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	681b      	ldr	r3, [r3, #0]
 800b3be:	6859      	ldr	r1, [r3, #4]
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	691b      	ldr	r3, [r3, #16]
 800b3c4:	021a      	lsls	r2, r3, #8
 800b3c6:	687b      	ldr	r3, [r7, #4]
 800b3c8:	681b      	ldr	r3, [r3, #0]
 800b3ca:	430a      	orrs	r2, r1
 800b3cc:	605a      	str	r2, [r3, #4]
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	681b      	ldr	r3, [r3, #0]
 800b3d2:	685a      	ldr	r2, [r3, #4]
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	681b      	ldr	r3, [r3, #0]
 800b3d8:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800b3dc:	605a      	str	r2, [r3, #4]
 800b3de:	687b      	ldr	r3, [r7, #4]
 800b3e0:	681b      	ldr	r3, [r3, #0]
 800b3e2:	6859      	ldr	r1, [r3, #4]
 800b3e4:	687b      	ldr	r3, [r7, #4]
 800b3e6:	689a      	ldr	r2, [r3, #8]
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	681b      	ldr	r3, [r3, #0]
 800b3ec:	430a      	orrs	r2, r1
 800b3ee:	605a      	str	r2, [r3, #4]
 800b3f0:	687b      	ldr	r3, [r7, #4]
 800b3f2:	681b      	ldr	r3, [r3, #0]
 800b3f4:	689a      	ldr	r2, [r3, #8]
 800b3f6:	687b      	ldr	r3, [r7, #4]
 800b3f8:	681b      	ldr	r3, [r3, #0]
 800b3fa:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b3fe:	609a      	str	r2, [r3, #8]
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	681b      	ldr	r3, [r3, #0]
 800b404:	6899      	ldr	r1, [r3, #8]
 800b406:	687b      	ldr	r3, [r7, #4]
 800b408:	68da      	ldr	r2, [r3, #12]
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	681b      	ldr	r3, [r3, #0]
 800b40e:	430a      	orrs	r2, r1
 800b410:	609a      	str	r2, [r3, #8]
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b416:	4a58      	ldr	r2, [pc, #352]	@ (800b578 <ADC_Init+0x1f4>)
 800b418:	4293      	cmp	r3, r2
 800b41a:	d022      	beq.n	800b462 <ADC_Init+0xde>
 800b41c:	687b      	ldr	r3, [r7, #4]
 800b41e:	681b      	ldr	r3, [r3, #0]
 800b420:	689a      	ldr	r2, [r3, #8]
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	681b      	ldr	r3, [r3, #0]
 800b426:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b42a:	609a      	str	r2, [r3, #8]
 800b42c:	687b      	ldr	r3, [r7, #4]
 800b42e:	681b      	ldr	r3, [r3, #0]
 800b430:	6899      	ldr	r1, [r3, #8]
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	681b      	ldr	r3, [r3, #0]
 800b43a:	430a      	orrs	r2, r1
 800b43c:	609a      	str	r2, [r3, #8]
 800b43e:	687b      	ldr	r3, [r7, #4]
 800b440:	681b      	ldr	r3, [r3, #0]
 800b442:	689a      	ldr	r2, [r3, #8]
 800b444:	687b      	ldr	r3, [r7, #4]
 800b446:	681b      	ldr	r3, [r3, #0]
 800b448:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b44c:	609a      	str	r2, [r3, #8]
 800b44e:	687b      	ldr	r3, [r7, #4]
 800b450:	681b      	ldr	r3, [r3, #0]
 800b452:	6899      	ldr	r1, [r3, #8]
 800b454:	687b      	ldr	r3, [r7, #4]
 800b456:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b458:	687b      	ldr	r3, [r7, #4]
 800b45a:	681b      	ldr	r3, [r3, #0]
 800b45c:	430a      	orrs	r2, r1
 800b45e:	609a      	str	r2, [r3, #8]
 800b460:	e00f      	b.n	800b482 <ADC_Init+0xfe>
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	681b      	ldr	r3, [r3, #0]
 800b466:	689a      	ldr	r2, [r3, #8]
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	681b      	ldr	r3, [r3, #0]
 800b46c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800b470:	609a      	str	r2, [r3, #8]
 800b472:	687b      	ldr	r3, [r7, #4]
 800b474:	681b      	ldr	r3, [r3, #0]
 800b476:	689a      	ldr	r2, [r3, #8]
 800b478:	687b      	ldr	r3, [r7, #4]
 800b47a:	681b      	ldr	r3, [r3, #0]
 800b47c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800b480:	609a      	str	r2, [r3, #8]
 800b482:	687b      	ldr	r3, [r7, #4]
 800b484:	681b      	ldr	r3, [r3, #0]
 800b486:	689a      	ldr	r2, [r3, #8]
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	681b      	ldr	r3, [r3, #0]
 800b48c:	f022 0202 	bic.w	r2, r2, #2
 800b490:	609a      	str	r2, [r3, #8]
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	681b      	ldr	r3, [r3, #0]
 800b496:	6899      	ldr	r1, [r3, #8]
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	7e1b      	ldrb	r3, [r3, #24]
 800b49c:	005a      	lsls	r2, r3, #1
 800b49e:	687b      	ldr	r3, [r7, #4]
 800b4a0:	681b      	ldr	r3, [r3, #0]
 800b4a2:	430a      	orrs	r2, r1
 800b4a4:	609a      	str	r2, [r3, #8]
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b4ac:	2b00      	cmp	r3, #0
 800b4ae:	d01b      	beq.n	800b4e8 <ADC_Init+0x164>
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	681b      	ldr	r3, [r3, #0]
 800b4b4:	685a      	ldr	r2, [r3, #4]
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	681b      	ldr	r3, [r3, #0]
 800b4ba:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800b4be:	605a      	str	r2, [r3, #4]
 800b4c0:	687b      	ldr	r3, [r7, #4]
 800b4c2:	681b      	ldr	r3, [r3, #0]
 800b4c4:	685a      	ldr	r2, [r3, #4]
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	681b      	ldr	r3, [r3, #0]
 800b4ca:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800b4ce:	605a      	str	r2, [r3, #4]
 800b4d0:	687b      	ldr	r3, [r7, #4]
 800b4d2:	681b      	ldr	r3, [r3, #0]
 800b4d4:	6859      	ldr	r1, [r3, #4]
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b4da:	3b01      	subs	r3, #1
 800b4dc:	035a      	lsls	r2, r3, #13
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	430a      	orrs	r2, r1
 800b4e4:	605a      	str	r2, [r3, #4]
 800b4e6:	e007      	b.n	800b4f8 <ADC_Init+0x174>
 800b4e8:	687b      	ldr	r3, [r7, #4]
 800b4ea:	681b      	ldr	r3, [r3, #0]
 800b4ec:	685a      	ldr	r2, [r3, #4]
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	681b      	ldr	r3, [r3, #0]
 800b4f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800b4f6:	605a      	str	r2, [r3, #4]
 800b4f8:	687b      	ldr	r3, [r7, #4]
 800b4fa:	681b      	ldr	r3, [r3, #0]
 800b4fc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800b506:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800b50e:	687b      	ldr	r3, [r7, #4]
 800b510:	69db      	ldr	r3, [r3, #28]
 800b512:	3b01      	subs	r3, #1
 800b514:	051a      	lsls	r2, r3, #20
 800b516:	687b      	ldr	r3, [r7, #4]
 800b518:	681b      	ldr	r3, [r3, #0]
 800b51a:	430a      	orrs	r2, r1
 800b51c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	681b      	ldr	r3, [r3, #0]
 800b522:	689a      	ldr	r2, [r3, #8]
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	681b      	ldr	r3, [r3, #0]
 800b528:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800b52c:	609a      	str	r2, [r3, #8]
 800b52e:	687b      	ldr	r3, [r7, #4]
 800b530:	681b      	ldr	r3, [r3, #0]
 800b532:	6899      	ldr	r1, [r3, #8]
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800b53a:	025a      	lsls	r2, r3, #9
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	681b      	ldr	r3, [r3, #0]
 800b540:	430a      	orrs	r2, r1
 800b542:	609a      	str	r2, [r3, #8]
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	681b      	ldr	r3, [r3, #0]
 800b548:	689a      	ldr	r2, [r3, #8]
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	681b      	ldr	r3, [r3, #0]
 800b54e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800b552:	609a      	str	r2, [r3, #8]
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	681b      	ldr	r3, [r3, #0]
 800b558:	6899      	ldr	r1, [r3, #8]
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	695b      	ldr	r3, [r3, #20]
 800b55e:	029a      	lsls	r2, r3, #10
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	681b      	ldr	r3, [r3, #0]
 800b564:	430a      	orrs	r2, r1
 800b566:	609a      	str	r2, [r3, #8]
 800b568:	bf00      	nop
 800b56a:	3714      	adds	r7, #20
 800b56c:	46bd      	mov	sp, r7
 800b56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b572:	4770      	bx	lr
 800b574:	40012300 	.word	0x40012300
 800b578:	0f000001 	.word	0x0f000001

0800b57c <HAL_CAN_Init>:
 800b57c:	b580      	push	{r7, lr}
 800b57e:	b084      	sub	sp, #16
 800b580:	af00      	add	r7, sp, #0
 800b582:	6078      	str	r0, [r7, #4]
 800b584:	687b      	ldr	r3, [r7, #4]
 800b586:	2b00      	cmp	r3, #0
 800b588:	d101      	bne.n	800b58e <HAL_CAN_Init+0x12>
 800b58a:	2301      	movs	r3, #1
 800b58c:	e0ed      	b.n	800b76a <HAL_CAN_Init+0x1ee>
 800b58e:	687b      	ldr	r3, [r7, #4]
 800b590:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b594:	b2db      	uxtb	r3, r3
 800b596:	2b00      	cmp	r3, #0
 800b598:	d102      	bne.n	800b5a0 <HAL_CAN_Init+0x24>
 800b59a:	6878      	ldr	r0, [r7, #4]
 800b59c:	f7f7 fcac 	bl	8002ef8 <HAL_CAN_MspInit>
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	681b      	ldr	r3, [r3, #0]
 800b5a4:	681a      	ldr	r2, [r3, #0]
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	681b      	ldr	r3, [r3, #0]
 800b5aa:	f042 0201 	orr.w	r2, r2, #1
 800b5ae:	601a      	str	r2, [r3, #0]
 800b5b0:	f7ff fd52 	bl	800b058 <HAL_GetTick>
 800b5b4:	60f8      	str	r0, [r7, #12]
 800b5b6:	e012      	b.n	800b5de <HAL_CAN_Init+0x62>
 800b5b8:	f7ff fd4e 	bl	800b058 <HAL_GetTick>
 800b5bc:	4602      	mov	r2, r0
 800b5be:	68fb      	ldr	r3, [r7, #12]
 800b5c0:	1ad3      	subs	r3, r2, r3
 800b5c2:	2b0a      	cmp	r3, #10
 800b5c4:	d90b      	bls.n	800b5de <HAL_CAN_Init+0x62>
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5ca:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	625a      	str	r2, [r3, #36]	@ 0x24
 800b5d2:	687b      	ldr	r3, [r7, #4]
 800b5d4:	2205      	movs	r2, #5
 800b5d6:	f883 2020 	strb.w	r2, [r3, #32]
 800b5da:	2301      	movs	r3, #1
 800b5dc:	e0c5      	b.n	800b76a <HAL_CAN_Init+0x1ee>
 800b5de:	687b      	ldr	r3, [r7, #4]
 800b5e0:	681b      	ldr	r3, [r3, #0]
 800b5e2:	685b      	ldr	r3, [r3, #4]
 800b5e4:	f003 0301 	and.w	r3, r3, #1
 800b5e8:	2b00      	cmp	r3, #0
 800b5ea:	d0e5      	beq.n	800b5b8 <HAL_CAN_Init+0x3c>
 800b5ec:	687b      	ldr	r3, [r7, #4]
 800b5ee:	681b      	ldr	r3, [r3, #0]
 800b5f0:	681a      	ldr	r2, [r3, #0]
 800b5f2:	687b      	ldr	r3, [r7, #4]
 800b5f4:	681b      	ldr	r3, [r3, #0]
 800b5f6:	f022 0202 	bic.w	r2, r2, #2
 800b5fa:	601a      	str	r2, [r3, #0]
 800b5fc:	f7ff fd2c 	bl	800b058 <HAL_GetTick>
 800b600:	60f8      	str	r0, [r7, #12]
 800b602:	e012      	b.n	800b62a <HAL_CAN_Init+0xae>
 800b604:	f7ff fd28 	bl	800b058 <HAL_GetTick>
 800b608:	4602      	mov	r2, r0
 800b60a:	68fb      	ldr	r3, [r7, #12]
 800b60c:	1ad3      	subs	r3, r2, r3
 800b60e:	2b0a      	cmp	r3, #10
 800b610:	d90b      	bls.n	800b62a <HAL_CAN_Init+0xae>
 800b612:	687b      	ldr	r3, [r7, #4]
 800b614:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b616:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b61a:	687b      	ldr	r3, [r7, #4]
 800b61c:	625a      	str	r2, [r3, #36]	@ 0x24
 800b61e:	687b      	ldr	r3, [r7, #4]
 800b620:	2205      	movs	r2, #5
 800b622:	f883 2020 	strb.w	r2, [r3, #32]
 800b626:	2301      	movs	r3, #1
 800b628:	e09f      	b.n	800b76a <HAL_CAN_Init+0x1ee>
 800b62a:	687b      	ldr	r3, [r7, #4]
 800b62c:	681b      	ldr	r3, [r3, #0]
 800b62e:	685b      	ldr	r3, [r3, #4]
 800b630:	f003 0302 	and.w	r3, r3, #2
 800b634:	2b00      	cmp	r3, #0
 800b636:	d1e5      	bne.n	800b604 <HAL_CAN_Init+0x88>
 800b638:	687b      	ldr	r3, [r7, #4]
 800b63a:	7e1b      	ldrb	r3, [r3, #24]
 800b63c:	2b01      	cmp	r3, #1
 800b63e:	d108      	bne.n	800b652 <HAL_CAN_Init+0xd6>
 800b640:	687b      	ldr	r3, [r7, #4]
 800b642:	681b      	ldr	r3, [r3, #0]
 800b644:	681a      	ldr	r2, [r3, #0]
 800b646:	687b      	ldr	r3, [r7, #4]
 800b648:	681b      	ldr	r3, [r3, #0]
 800b64a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800b64e:	601a      	str	r2, [r3, #0]
 800b650:	e007      	b.n	800b662 <HAL_CAN_Init+0xe6>
 800b652:	687b      	ldr	r3, [r7, #4]
 800b654:	681b      	ldr	r3, [r3, #0]
 800b656:	681a      	ldr	r2, [r3, #0]
 800b658:	687b      	ldr	r3, [r7, #4]
 800b65a:	681b      	ldr	r3, [r3, #0]
 800b65c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800b660:	601a      	str	r2, [r3, #0]
 800b662:	687b      	ldr	r3, [r7, #4]
 800b664:	7e5b      	ldrb	r3, [r3, #25]
 800b666:	2b01      	cmp	r3, #1
 800b668:	d108      	bne.n	800b67c <HAL_CAN_Init+0x100>
 800b66a:	687b      	ldr	r3, [r7, #4]
 800b66c:	681b      	ldr	r3, [r3, #0]
 800b66e:	681a      	ldr	r2, [r3, #0]
 800b670:	687b      	ldr	r3, [r7, #4]
 800b672:	681b      	ldr	r3, [r3, #0]
 800b674:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800b678:	601a      	str	r2, [r3, #0]
 800b67a:	e007      	b.n	800b68c <HAL_CAN_Init+0x110>
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	681b      	ldr	r3, [r3, #0]
 800b680:	681a      	ldr	r2, [r3, #0]
 800b682:	687b      	ldr	r3, [r7, #4]
 800b684:	681b      	ldr	r3, [r3, #0]
 800b686:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800b68a:	601a      	str	r2, [r3, #0]
 800b68c:	687b      	ldr	r3, [r7, #4]
 800b68e:	7e9b      	ldrb	r3, [r3, #26]
 800b690:	2b01      	cmp	r3, #1
 800b692:	d108      	bne.n	800b6a6 <HAL_CAN_Init+0x12a>
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	681b      	ldr	r3, [r3, #0]
 800b698:	681a      	ldr	r2, [r3, #0]
 800b69a:	687b      	ldr	r3, [r7, #4]
 800b69c:	681b      	ldr	r3, [r3, #0]
 800b69e:	f042 0220 	orr.w	r2, r2, #32
 800b6a2:	601a      	str	r2, [r3, #0]
 800b6a4:	e007      	b.n	800b6b6 <HAL_CAN_Init+0x13a>
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	681b      	ldr	r3, [r3, #0]
 800b6aa:	681a      	ldr	r2, [r3, #0]
 800b6ac:	687b      	ldr	r3, [r7, #4]
 800b6ae:	681b      	ldr	r3, [r3, #0]
 800b6b0:	f022 0220 	bic.w	r2, r2, #32
 800b6b4:	601a      	str	r2, [r3, #0]
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	7edb      	ldrb	r3, [r3, #27]
 800b6ba:	2b01      	cmp	r3, #1
 800b6bc:	d108      	bne.n	800b6d0 <HAL_CAN_Init+0x154>
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	681b      	ldr	r3, [r3, #0]
 800b6c2:	681a      	ldr	r2, [r3, #0]
 800b6c4:	687b      	ldr	r3, [r7, #4]
 800b6c6:	681b      	ldr	r3, [r3, #0]
 800b6c8:	f022 0210 	bic.w	r2, r2, #16
 800b6cc:	601a      	str	r2, [r3, #0]
 800b6ce:	e007      	b.n	800b6e0 <HAL_CAN_Init+0x164>
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	681b      	ldr	r3, [r3, #0]
 800b6d4:	681a      	ldr	r2, [r3, #0]
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	681b      	ldr	r3, [r3, #0]
 800b6da:	f042 0210 	orr.w	r2, r2, #16
 800b6de:	601a      	str	r2, [r3, #0]
 800b6e0:	687b      	ldr	r3, [r7, #4]
 800b6e2:	7f1b      	ldrb	r3, [r3, #28]
 800b6e4:	2b01      	cmp	r3, #1
 800b6e6:	d108      	bne.n	800b6fa <HAL_CAN_Init+0x17e>
 800b6e8:	687b      	ldr	r3, [r7, #4]
 800b6ea:	681b      	ldr	r3, [r3, #0]
 800b6ec:	681a      	ldr	r2, [r3, #0]
 800b6ee:	687b      	ldr	r3, [r7, #4]
 800b6f0:	681b      	ldr	r3, [r3, #0]
 800b6f2:	f042 0208 	orr.w	r2, r2, #8
 800b6f6:	601a      	str	r2, [r3, #0]
 800b6f8:	e007      	b.n	800b70a <HAL_CAN_Init+0x18e>
 800b6fa:	687b      	ldr	r3, [r7, #4]
 800b6fc:	681b      	ldr	r3, [r3, #0]
 800b6fe:	681a      	ldr	r2, [r3, #0]
 800b700:	687b      	ldr	r3, [r7, #4]
 800b702:	681b      	ldr	r3, [r3, #0]
 800b704:	f022 0208 	bic.w	r2, r2, #8
 800b708:	601a      	str	r2, [r3, #0]
 800b70a:	687b      	ldr	r3, [r7, #4]
 800b70c:	7f5b      	ldrb	r3, [r3, #29]
 800b70e:	2b01      	cmp	r3, #1
 800b710:	d108      	bne.n	800b724 <HAL_CAN_Init+0x1a8>
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	681b      	ldr	r3, [r3, #0]
 800b716:	681a      	ldr	r2, [r3, #0]
 800b718:	687b      	ldr	r3, [r7, #4]
 800b71a:	681b      	ldr	r3, [r3, #0]
 800b71c:	f042 0204 	orr.w	r2, r2, #4
 800b720:	601a      	str	r2, [r3, #0]
 800b722:	e007      	b.n	800b734 <HAL_CAN_Init+0x1b8>
 800b724:	687b      	ldr	r3, [r7, #4]
 800b726:	681b      	ldr	r3, [r3, #0]
 800b728:	681a      	ldr	r2, [r3, #0]
 800b72a:	687b      	ldr	r3, [r7, #4]
 800b72c:	681b      	ldr	r3, [r3, #0]
 800b72e:	f022 0204 	bic.w	r2, r2, #4
 800b732:	601a      	str	r2, [r3, #0]
 800b734:	687b      	ldr	r3, [r7, #4]
 800b736:	689a      	ldr	r2, [r3, #8]
 800b738:	687b      	ldr	r3, [r7, #4]
 800b73a:	68db      	ldr	r3, [r3, #12]
 800b73c:	431a      	orrs	r2, r3
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	691b      	ldr	r3, [r3, #16]
 800b742:	431a      	orrs	r2, r3
 800b744:	687b      	ldr	r3, [r7, #4]
 800b746:	695b      	ldr	r3, [r3, #20]
 800b748:	ea42 0103 	orr.w	r1, r2, r3
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	685b      	ldr	r3, [r3, #4]
 800b750:	1e5a      	subs	r2, r3, #1
 800b752:	687b      	ldr	r3, [r7, #4]
 800b754:	681b      	ldr	r3, [r3, #0]
 800b756:	430a      	orrs	r2, r1
 800b758:	61da      	str	r2, [r3, #28]
 800b75a:	687b      	ldr	r3, [r7, #4]
 800b75c:	2200      	movs	r2, #0
 800b75e:	625a      	str	r2, [r3, #36]	@ 0x24
 800b760:	687b      	ldr	r3, [r7, #4]
 800b762:	2201      	movs	r2, #1
 800b764:	f883 2020 	strb.w	r2, [r3, #32]
 800b768:	2300      	movs	r3, #0
 800b76a:	4618      	mov	r0, r3
 800b76c:	3710      	adds	r7, #16
 800b76e:	46bd      	mov	sp, r7
 800b770:	bd80      	pop	{r7, pc}
	...

0800b774 <HAL_CAN_ConfigFilter>:
 800b774:	b480      	push	{r7}
 800b776:	b087      	sub	sp, #28
 800b778:	af00      	add	r7, sp, #0
 800b77a:	6078      	str	r0, [r7, #4]
 800b77c:	6039      	str	r1, [r7, #0]
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	681b      	ldr	r3, [r3, #0]
 800b782:	617b      	str	r3, [r7, #20]
 800b784:	687b      	ldr	r3, [r7, #4]
 800b786:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b78a:	74fb      	strb	r3, [r7, #19]
 800b78c:	7cfb      	ldrb	r3, [r7, #19]
 800b78e:	2b01      	cmp	r3, #1
 800b790:	d003      	beq.n	800b79a <HAL_CAN_ConfigFilter+0x26>
 800b792:	7cfb      	ldrb	r3, [r7, #19]
 800b794:	2b02      	cmp	r3, #2
 800b796:	f040 80be 	bne.w	800b916 <HAL_CAN_ConfigFilter+0x1a2>
 800b79a:	4b65      	ldr	r3, [pc, #404]	@ (800b930 <HAL_CAN_ConfigFilter+0x1bc>)
 800b79c:	617b      	str	r3, [r7, #20]
 800b79e:	697b      	ldr	r3, [r7, #20]
 800b7a0:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b7a4:	f043 0201 	orr.w	r2, r3, #1
 800b7a8:	697b      	ldr	r3, [r7, #20]
 800b7aa:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b7ae:	697b      	ldr	r3, [r7, #20]
 800b7b0:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b7b4:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 800b7b8:	697b      	ldr	r3, [r7, #20]
 800b7ba:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b7be:	697b      	ldr	r3, [r7, #20]
 800b7c0:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800b7c4:	683b      	ldr	r3, [r7, #0]
 800b7c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b7c8:	021b      	lsls	r3, r3, #8
 800b7ca:	431a      	orrs	r2, r3
 800b7cc:	697b      	ldr	r3, [r7, #20]
 800b7ce:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b7d2:	683b      	ldr	r3, [r7, #0]
 800b7d4:	695b      	ldr	r3, [r3, #20]
 800b7d6:	f003 031f 	and.w	r3, r3, #31
 800b7da:	2201      	movs	r2, #1
 800b7dc:	fa02 f303 	lsl.w	r3, r2, r3
 800b7e0:	60fb      	str	r3, [r7, #12]
 800b7e2:	697b      	ldr	r3, [r7, #20]
 800b7e4:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800b7e8:	68fb      	ldr	r3, [r7, #12]
 800b7ea:	43db      	mvns	r3, r3
 800b7ec:	401a      	ands	r2, r3
 800b7ee:	697b      	ldr	r3, [r7, #20]
 800b7f0:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800b7f4:	683b      	ldr	r3, [r7, #0]
 800b7f6:	69db      	ldr	r3, [r3, #28]
 800b7f8:	2b00      	cmp	r3, #0
 800b7fa:	d123      	bne.n	800b844 <HAL_CAN_ConfigFilter+0xd0>
 800b7fc:	697b      	ldr	r3, [r7, #20]
 800b7fe:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800b802:	68fb      	ldr	r3, [r7, #12]
 800b804:	43db      	mvns	r3, r3
 800b806:	401a      	ands	r2, r3
 800b808:	697b      	ldr	r3, [r7, #20]
 800b80a:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800b80e:	683b      	ldr	r3, [r7, #0]
 800b810:	68db      	ldr	r3, [r3, #12]
 800b812:	0419      	lsls	r1, r3, #16
 800b814:	683b      	ldr	r3, [r7, #0]
 800b816:	685b      	ldr	r3, [r3, #4]
 800b818:	b29b      	uxth	r3, r3
 800b81a:	683a      	ldr	r2, [r7, #0]
 800b81c:	6952      	ldr	r2, [r2, #20]
 800b81e:	4319      	orrs	r1, r3
 800b820:	697b      	ldr	r3, [r7, #20]
 800b822:	3248      	adds	r2, #72	@ 0x48
 800b824:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800b828:	683b      	ldr	r3, [r7, #0]
 800b82a:	689b      	ldr	r3, [r3, #8]
 800b82c:	0419      	lsls	r1, r3, #16
 800b82e:	683b      	ldr	r3, [r7, #0]
 800b830:	681b      	ldr	r3, [r3, #0]
 800b832:	b29a      	uxth	r2, r3
 800b834:	683b      	ldr	r3, [r7, #0]
 800b836:	695b      	ldr	r3, [r3, #20]
 800b838:	430a      	orrs	r2, r1
 800b83a:	6979      	ldr	r1, [r7, #20]
 800b83c:	3348      	adds	r3, #72	@ 0x48
 800b83e:	00db      	lsls	r3, r3, #3
 800b840:	440b      	add	r3, r1
 800b842:	605a      	str	r2, [r3, #4]
 800b844:	683b      	ldr	r3, [r7, #0]
 800b846:	69db      	ldr	r3, [r3, #28]
 800b848:	2b01      	cmp	r3, #1
 800b84a:	d122      	bne.n	800b892 <HAL_CAN_ConfigFilter+0x11e>
 800b84c:	697b      	ldr	r3, [r7, #20]
 800b84e:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800b852:	68fb      	ldr	r3, [r7, #12]
 800b854:	431a      	orrs	r2, r3
 800b856:	697b      	ldr	r3, [r7, #20]
 800b858:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800b85c:	683b      	ldr	r3, [r7, #0]
 800b85e:	681b      	ldr	r3, [r3, #0]
 800b860:	0419      	lsls	r1, r3, #16
 800b862:	683b      	ldr	r3, [r7, #0]
 800b864:	685b      	ldr	r3, [r3, #4]
 800b866:	b29b      	uxth	r3, r3
 800b868:	683a      	ldr	r2, [r7, #0]
 800b86a:	6952      	ldr	r2, [r2, #20]
 800b86c:	4319      	orrs	r1, r3
 800b86e:	697b      	ldr	r3, [r7, #20]
 800b870:	3248      	adds	r2, #72	@ 0x48
 800b872:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800b876:	683b      	ldr	r3, [r7, #0]
 800b878:	689b      	ldr	r3, [r3, #8]
 800b87a:	0419      	lsls	r1, r3, #16
 800b87c:	683b      	ldr	r3, [r7, #0]
 800b87e:	68db      	ldr	r3, [r3, #12]
 800b880:	b29a      	uxth	r2, r3
 800b882:	683b      	ldr	r3, [r7, #0]
 800b884:	695b      	ldr	r3, [r3, #20]
 800b886:	430a      	orrs	r2, r1
 800b888:	6979      	ldr	r1, [r7, #20]
 800b88a:	3348      	adds	r3, #72	@ 0x48
 800b88c:	00db      	lsls	r3, r3, #3
 800b88e:	440b      	add	r3, r1
 800b890:	605a      	str	r2, [r3, #4]
 800b892:	683b      	ldr	r3, [r7, #0]
 800b894:	699b      	ldr	r3, [r3, #24]
 800b896:	2b00      	cmp	r3, #0
 800b898:	d109      	bne.n	800b8ae <HAL_CAN_ConfigFilter+0x13a>
 800b89a:	697b      	ldr	r3, [r7, #20]
 800b89c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800b8a0:	68fb      	ldr	r3, [r7, #12]
 800b8a2:	43db      	mvns	r3, r3
 800b8a4:	401a      	ands	r2, r3
 800b8a6:	697b      	ldr	r3, [r7, #20]
 800b8a8:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800b8ac:	e007      	b.n	800b8be <HAL_CAN_ConfigFilter+0x14a>
 800b8ae:	697b      	ldr	r3, [r7, #20]
 800b8b0:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800b8b4:	68fb      	ldr	r3, [r7, #12]
 800b8b6:	431a      	orrs	r2, r3
 800b8b8:	697b      	ldr	r3, [r7, #20]
 800b8ba:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800b8be:	683b      	ldr	r3, [r7, #0]
 800b8c0:	691b      	ldr	r3, [r3, #16]
 800b8c2:	2b00      	cmp	r3, #0
 800b8c4:	d109      	bne.n	800b8da <HAL_CAN_ConfigFilter+0x166>
 800b8c6:	697b      	ldr	r3, [r7, #20]
 800b8c8:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800b8cc:	68fb      	ldr	r3, [r7, #12]
 800b8ce:	43db      	mvns	r3, r3
 800b8d0:	401a      	ands	r2, r3
 800b8d2:	697b      	ldr	r3, [r7, #20]
 800b8d4:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800b8d8:	e007      	b.n	800b8ea <HAL_CAN_ConfigFilter+0x176>
 800b8da:	697b      	ldr	r3, [r7, #20]
 800b8dc:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800b8e0:	68fb      	ldr	r3, [r7, #12]
 800b8e2:	431a      	orrs	r2, r3
 800b8e4:	697b      	ldr	r3, [r7, #20]
 800b8e6:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800b8ea:	683b      	ldr	r3, [r7, #0]
 800b8ec:	6a1b      	ldr	r3, [r3, #32]
 800b8ee:	2b01      	cmp	r3, #1
 800b8f0:	d107      	bne.n	800b902 <HAL_CAN_ConfigFilter+0x18e>
 800b8f2:	697b      	ldr	r3, [r7, #20]
 800b8f4:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800b8f8:	68fb      	ldr	r3, [r7, #12]
 800b8fa:	431a      	orrs	r2, r3
 800b8fc:	697b      	ldr	r3, [r7, #20]
 800b8fe:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800b902:	697b      	ldr	r3, [r7, #20]
 800b904:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800b908:	f023 0201 	bic.w	r2, r3, #1
 800b90c:	697b      	ldr	r3, [r7, #20]
 800b90e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800b912:	2300      	movs	r3, #0
 800b914:	e006      	b.n	800b924 <HAL_CAN_ConfigFilter+0x1b0>
 800b916:	687b      	ldr	r3, [r7, #4]
 800b918:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b91a:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	625a      	str	r2, [r3, #36]	@ 0x24
 800b922:	2301      	movs	r3, #1
 800b924:	4618      	mov	r0, r3
 800b926:	371c      	adds	r7, #28
 800b928:	46bd      	mov	sp, r7
 800b92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b92e:	4770      	bx	lr
 800b930:	40006400 	.word	0x40006400

0800b934 <HAL_CAN_Start>:
 800b934:	b580      	push	{r7, lr}
 800b936:	b084      	sub	sp, #16
 800b938:	af00      	add	r7, sp, #0
 800b93a:	6078      	str	r0, [r7, #4]
 800b93c:	687b      	ldr	r3, [r7, #4]
 800b93e:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b942:	b2db      	uxtb	r3, r3
 800b944:	2b01      	cmp	r3, #1
 800b946:	d12e      	bne.n	800b9a6 <HAL_CAN_Start+0x72>
 800b948:	687b      	ldr	r3, [r7, #4]
 800b94a:	2202      	movs	r2, #2
 800b94c:	f883 2020 	strb.w	r2, [r3, #32]
 800b950:	687b      	ldr	r3, [r7, #4]
 800b952:	681b      	ldr	r3, [r3, #0]
 800b954:	681a      	ldr	r2, [r3, #0]
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	681b      	ldr	r3, [r3, #0]
 800b95a:	f022 0201 	bic.w	r2, r2, #1
 800b95e:	601a      	str	r2, [r3, #0]
 800b960:	f7ff fb7a 	bl	800b058 <HAL_GetTick>
 800b964:	60f8      	str	r0, [r7, #12]
 800b966:	e012      	b.n	800b98e <HAL_CAN_Start+0x5a>
 800b968:	f7ff fb76 	bl	800b058 <HAL_GetTick>
 800b96c:	4602      	mov	r2, r0
 800b96e:	68fb      	ldr	r3, [r7, #12]
 800b970:	1ad3      	subs	r3, r2, r3
 800b972:	2b0a      	cmp	r3, #10
 800b974:	d90b      	bls.n	800b98e <HAL_CAN_Start+0x5a>
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b97a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800b97e:	687b      	ldr	r3, [r7, #4]
 800b980:	625a      	str	r2, [r3, #36]	@ 0x24
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	2205      	movs	r2, #5
 800b986:	f883 2020 	strb.w	r2, [r3, #32]
 800b98a:	2301      	movs	r3, #1
 800b98c:	e012      	b.n	800b9b4 <HAL_CAN_Start+0x80>
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	681b      	ldr	r3, [r3, #0]
 800b992:	685b      	ldr	r3, [r3, #4]
 800b994:	f003 0301 	and.w	r3, r3, #1
 800b998:	2b00      	cmp	r3, #0
 800b99a:	d1e5      	bne.n	800b968 <HAL_CAN_Start+0x34>
 800b99c:	687b      	ldr	r3, [r7, #4]
 800b99e:	2200      	movs	r2, #0
 800b9a0:	625a      	str	r2, [r3, #36]	@ 0x24
 800b9a2:	2300      	movs	r3, #0
 800b9a4:	e006      	b.n	800b9b4 <HAL_CAN_Start+0x80>
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9aa:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800b9ae:	687b      	ldr	r3, [r7, #4]
 800b9b0:	625a      	str	r2, [r3, #36]	@ 0x24
 800b9b2:	2301      	movs	r3, #1
 800b9b4:	4618      	mov	r0, r3
 800b9b6:	3710      	adds	r7, #16
 800b9b8:	46bd      	mov	sp, r7
 800b9ba:	bd80      	pop	{r7, pc}

0800b9bc <HAL_CAN_AddTxMessage>:
 800b9bc:	b480      	push	{r7}
 800b9be:	b089      	sub	sp, #36	@ 0x24
 800b9c0:	af00      	add	r7, sp, #0
 800b9c2:	60f8      	str	r0, [r7, #12]
 800b9c4:	60b9      	str	r1, [r7, #8]
 800b9c6:	607a      	str	r2, [r7, #4]
 800b9c8:	603b      	str	r3, [r7, #0]
 800b9ca:	68fb      	ldr	r3, [r7, #12]
 800b9cc:	f893 3020 	ldrb.w	r3, [r3, #32]
 800b9d0:	77fb      	strb	r3, [r7, #31]
 800b9d2:	68fb      	ldr	r3, [r7, #12]
 800b9d4:	681b      	ldr	r3, [r3, #0]
 800b9d6:	689b      	ldr	r3, [r3, #8]
 800b9d8:	61bb      	str	r3, [r7, #24]
 800b9da:	7ffb      	ldrb	r3, [r7, #31]
 800b9dc:	2b01      	cmp	r3, #1
 800b9de:	d003      	beq.n	800b9e8 <HAL_CAN_AddTxMessage+0x2c>
 800b9e0:	7ffb      	ldrb	r3, [r7, #31]
 800b9e2:	2b02      	cmp	r3, #2
 800b9e4:	f040 80b8 	bne.w	800bb58 <HAL_CAN_AddTxMessage+0x19c>
 800b9e8:	69bb      	ldr	r3, [r7, #24]
 800b9ea:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800b9ee:	2b00      	cmp	r3, #0
 800b9f0:	d10a      	bne.n	800ba08 <HAL_CAN_AddTxMessage+0x4c>
 800b9f2:	69bb      	ldr	r3, [r7, #24]
 800b9f4:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800b9f8:	2b00      	cmp	r3, #0
 800b9fa:	d105      	bne.n	800ba08 <HAL_CAN_AddTxMessage+0x4c>
 800b9fc:	69bb      	ldr	r3, [r7, #24]
 800b9fe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800ba02:	2b00      	cmp	r3, #0
 800ba04:	f000 80a0 	beq.w	800bb48 <HAL_CAN_AddTxMessage+0x18c>
 800ba08:	69bb      	ldr	r3, [r7, #24]
 800ba0a:	0e1b      	lsrs	r3, r3, #24
 800ba0c:	f003 0303 	and.w	r3, r3, #3
 800ba10:	617b      	str	r3, [r7, #20]
 800ba12:	697b      	ldr	r3, [r7, #20]
 800ba14:	2b02      	cmp	r3, #2
 800ba16:	d907      	bls.n	800ba28 <HAL_CAN_AddTxMessage+0x6c>
 800ba18:	68fb      	ldr	r3, [r7, #12]
 800ba1a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ba1c:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800ba20:	68fb      	ldr	r3, [r7, #12]
 800ba22:	625a      	str	r2, [r3, #36]	@ 0x24
 800ba24:	2301      	movs	r3, #1
 800ba26:	e09e      	b.n	800bb66 <HAL_CAN_AddTxMessage+0x1aa>
 800ba28:	2201      	movs	r2, #1
 800ba2a:	697b      	ldr	r3, [r7, #20]
 800ba2c:	409a      	lsls	r2, r3
 800ba2e:	683b      	ldr	r3, [r7, #0]
 800ba30:	601a      	str	r2, [r3, #0]
 800ba32:	68bb      	ldr	r3, [r7, #8]
 800ba34:	689b      	ldr	r3, [r3, #8]
 800ba36:	2b00      	cmp	r3, #0
 800ba38:	d10d      	bne.n	800ba56 <HAL_CAN_AddTxMessage+0x9a>
 800ba3a:	68bb      	ldr	r3, [r7, #8]
 800ba3c:	681b      	ldr	r3, [r3, #0]
 800ba3e:	055a      	lsls	r2, r3, #21
 800ba40:	68bb      	ldr	r3, [r7, #8]
 800ba42:	68db      	ldr	r3, [r3, #12]
 800ba44:	68f9      	ldr	r1, [r7, #12]
 800ba46:	6809      	ldr	r1, [r1, #0]
 800ba48:	431a      	orrs	r2, r3
 800ba4a:	697b      	ldr	r3, [r7, #20]
 800ba4c:	3318      	adds	r3, #24
 800ba4e:	011b      	lsls	r3, r3, #4
 800ba50:	440b      	add	r3, r1
 800ba52:	601a      	str	r2, [r3, #0]
 800ba54:	e00f      	b.n	800ba76 <HAL_CAN_AddTxMessage+0xba>
 800ba56:	68bb      	ldr	r3, [r7, #8]
 800ba58:	685b      	ldr	r3, [r3, #4]
 800ba5a:	00da      	lsls	r2, r3, #3
 800ba5c:	68bb      	ldr	r3, [r7, #8]
 800ba5e:	689b      	ldr	r3, [r3, #8]
 800ba60:	431a      	orrs	r2, r3
 800ba62:	68bb      	ldr	r3, [r7, #8]
 800ba64:	68db      	ldr	r3, [r3, #12]
 800ba66:	68f9      	ldr	r1, [r7, #12]
 800ba68:	6809      	ldr	r1, [r1, #0]
 800ba6a:	431a      	orrs	r2, r3
 800ba6c:	697b      	ldr	r3, [r7, #20]
 800ba6e:	3318      	adds	r3, #24
 800ba70:	011b      	lsls	r3, r3, #4
 800ba72:	440b      	add	r3, r1
 800ba74:	601a      	str	r2, [r3, #0]
 800ba76:	68fb      	ldr	r3, [r7, #12]
 800ba78:	6819      	ldr	r1, [r3, #0]
 800ba7a:	68bb      	ldr	r3, [r7, #8]
 800ba7c:	691a      	ldr	r2, [r3, #16]
 800ba7e:	697b      	ldr	r3, [r7, #20]
 800ba80:	3318      	adds	r3, #24
 800ba82:	011b      	lsls	r3, r3, #4
 800ba84:	440b      	add	r3, r1
 800ba86:	3304      	adds	r3, #4
 800ba88:	601a      	str	r2, [r3, #0]
 800ba8a:	68bb      	ldr	r3, [r7, #8]
 800ba8c:	7d1b      	ldrb	r3, [r3, #20]
 800ba8e:	2b01      	cmp	r3, #1
 800ba90:	d111      	bne.n	800bab6 <HAL_CAN_AddTxMessage+0xfa>
 800ba92:	68fb      	ldr	r3, [r7, #12]
 800ba94:	681a      	ldr	r2, [r3, #0]
 800ba96:	697b      	ldr	r3, [r7, #20]
 800ba98:	3318      	adds	r3, #24
 800ba9a:	011b      	lsls	r3, r3, #4
 800ba9c:	4413      	add	r3, r2
 800ba9e:	3304      	adds	r3, #4
 800baa0:	681b      	ldr	r3, [r3, #0]
 800baa2:	68fa      	ldr	r2, [r7, #12]
 800baa4:	6811      	ldr	r1, [r2, #0]
 800baa6:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800baaa:	697b      	ldr	r3, [r7, #20]
 800baac:	3318      	adds	r3, #24
 800baae:	011b      	lsls	r3, r3, #4
 800bab0:	440b      	add	r3, r1
 800bab2:	3304      	adds	r3, #4
 800bab4:	601a      	str	r2, [r3, #0]
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	3307      	adds	r3, #7
 800baba:	781b      	ldrb	r3, [r3, #0]
 800babc:	061a      	lsls	r2, r3, #24
 800babe:	687b      	ldr	r3, [r7, #4]
 800bac0:	3306      	adds	r3, #6
 800bac2:	781b      	ldrb	r3, [r3, #0]
 800bac4:	041b      	lsls	r3, r3, #16
 800bac6:	431a      	orrs	r2, r3
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	3305      	adds	r3, #5
 800bacc:	781b      	ldrb	r3, [r3, #0]
 800bace:	021b      	lsls	r3, r3, #8
 800bad0:	4313      	orrs	r3, r2
 800bad2:	687a      	ldr	r2, [r7, #4]
 800bad4:	3204      	adds	r2, #4
 800bad6:	7812      	ldrb	r2, [r2, #0]
 800bad8:	4610      	mov	r0, r2
 800bada:	68fa      	ldr	r2, [r7, #12]
 800badc:	6811      	ldr	r1, [r2, #0]
 800bade:	ea43 0200 	orr.w	r2, r3, r0
 800bae2:	697b      	ldr	r3, [r7, #20]
 800bae4:	011b      	lsls	r3, r3, #4
 800bae6:	440b      	add	r3, r1
 800bae8:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800baec:	601a      	str	r2, [r3, #0]
 800baee:	687b      	ldr	r3, [r7, #4]
 800baf0:	3303      	adds	r3, #3
 800baf2:	781b      	ldrb	r3, [r3, #0]
 800baf4:	061a      	lsls	r2, r3, #24
 800baf6:	687b      	ldr	r3, [r7, #4]
 800baf8:	3302      	adds	r3, #2
 800bafa:	781b      	ldrb	r3, [r3, #0]
 800bafc:	041b      	lsls	r3, r3, #16
 800bafe:	431a      	orrs	r2, r3
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	3301      	adds	r3, #1
 800bb04:	781b      	ldrb	r3, [r3, #0]
 800bb06:	021b      	lsls	r3, r3, #8
 800bb08:	4313      	orrs	r3, r2
 800bb0a:	687a      	ldr	r2, [r7, #4]
 800bb0c:	7812      	ldrb	r2, [r2, #0]
 800bb0e:	4610      	mov	r0, r2
 800bb10:	68fa      	ldr	r2, [r7, #12]
 800bb12:	6811      	ldr	r1, [r2, #0]
 800bb14:	ea43 0200 	orr.w	r2, r3, r0
 800bb18:	697b      	ldr	r3, [r7, #20]
 800bb1a:	011b      	lsls	r3, r3, #4
 800bb1c:	440b      	add	r3, r1
 800bb1e:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800bb22:	601a      	str	r2, [r3, #0]
 800bb24:	68fb      	ldr	r3, [r7, #12]
 800bb26:	681a      	ldr	r2, [r3, #0]
 800bb28:	697b      	ldr	r3, [r7, #20]
 800bb2a:	3318      	adds	r3, #24
 800bb2c:	011b      	lsls	r3, r3, #4
 800bb2e:	4413      	add	r3, r2
 800bb30:	681b      	ldr	r3, [r3, #0]
 800bb32:	68fa      	ldr	r2, [r7, #12]
 800bb34:	6811      	ldr	r1, [r2, #0]
 800bb36:	f043 0201 	orr.w	r2, r3, #1
 800bb3a:	697b      	ldr	r3, [r7, #20]
 800bb3c:	3318      	adds	r3, #24
 800bb3e:	011b      	lsls	r3, r3, #4
 800bb40:	440b      	add	r3, r1
 800bb42:	601a      	str	r2, [r3, #0]
 800bb44:	2300      	movs	r3, #0
 800bb46:	e00e      	b.n	800bb66 <HAL_CAN_AddTxMessage+0x1aa>
 800bb48:	68fb      	ldr	r3, [r7, #12]
 800bb4a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb4c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bb50:	68fb      	ldr	r3, [r7, #12]
 800bb52:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb54:	2301      	movs	r3, #1
 800bb56:	e006      	b.n	800bb66 <HAL_CAN_AddTxMessage+0x1aa>
 800bb58:	68fb      	ldr	r3, [r7, #12]
 800bb5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bb5c:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bb60:	68fb      	ldr	r3, [r7, #12]
 800bb62:	625a      	str	r2, [r3, #36]	@ 0x24
 800bb64:	2301      	movs	r3, #1
 800bb66:	4618      	mov	r0, r3
 800bb68:	3724      	adds	r7, #36	@ 0x24
 800bb6a:	46bd      	mov	sp, r7
 800bb6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb70:	4770      	bx	lr

0800bb72 <HAL_CAN_GetRxMessage>:
 800bb72:	b480      	push	{r7}
 800bb74:	b087      	sub	sp, #28
 800bb76:	af00      	add	r7, sp, #0
 800bb78:	60f8      	str	r0, [r7, #12]
 800bb7a:	60b9      	str	r1, [r7, #8]
 800bb7c:	607a      	str	r2, [r7, #4]
 800bb7e:	603b      	str	r3, [r7, #0]
 800bb80:	68fb      	ldr	r3, [r7, #12]
 800bb82:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bb86:	75fb      	strb	r3, [r7, #23]
 800bb88:	7dfb      	ldrb	r3, [r7, #23]
 800bb8a:	2b01      	cmp	r3, #1
 800bb8c:	d003      	beq.n	800bb96 <HAL_CAN_GetRxMessage+0x24>
 800bb8e:	7dfb      	ldrb	r3, [r7, #23]
 800bb90:	2b02      	cmp	r3, #2
 800bb92:	f040 80f3 	bne.w	800bd7c <HAL_CAN_GetRxMessage+0x20a>
 800bb96:	68bb      	ldr	r3, [r7, #8]
 800bb98:	2b00      	cmp	r3, #0
 800bb9a:	d10e      	bne.n	800bbba <HAL_CAN_GetRxMessage+0x48>
 800bb9c:	68fb      	ldr	r3, [r7, #12]
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	68db      	ldr	r3, [r3, #12]
 800bba2:	f003 0303 	and.w	r3, r3, #3
 800bba6:	2b00      	cmp	r3, #0
 800bba8:	d116      	bne.n	800bbd8 <HAL_CAN_GetRxMessage+0x66>
 800bbaa:	68fb      	ldr	r3, [r7, #12]
 800bbac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bbae:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bbb2:	68fb      	ldr	r3, [r7, #12]
 800bbb4:	625a      	str	r2, [r3, #36]	@ 0x24
 800bbb6:	2301      	movs	r3, #1
 800bbb8:	e0e7      	b.n	800bd8a <HAL_CAN_GetRxMessage+0x218>
 800bbba:	68fb      	ldr	r3, [r7, #12]
 800bbbc:	681b      	ldr	r3, [r3, #0]
 800bbbe:	691b      	ldr	r3, [r3, #16]
 800bbc0:	f003 0303 	and.w	r3, r3, #3
 800bbc4:	2b00      	cmp	r3, #0
 800bbc6:	d107      	bne.n	800bbd8 <HAL_CAN_GetRxMessage+0x66>
 800bbc8:	68fb      	ldr	r3, [r7, #12]
 800bbca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bbcc:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800bbd0:	68fb      	ldr	r3, [r7, #12]
 800bbd2:	625a      	str	r2, [r3, #36]	@ 0x24
 800bbd4:	2301      	movs	r3, #1
 800bbd6:	e0d8      	b.n	800bd8a <HAL_CAN_GetRxMessage+0x218>
 800bbd8:	68fb      	ldr	r3, [r7, #12]
 800bbda:	681a      	ldr	r2, [r3, #0]
 800bbdc:	68bb      	ldr	r3, [r7, #8]
 800bbde:	331b      	adds	r3, #27
 800bbe0:	011b      	lsls	r3, r3, #4
 800bbe2:	4413      	add	r3, r2
 800bbe4:	681b      	ldr	r3, [r3, #0]
 800bbe6:	f003 0204 	and.w	r2, r3, #4
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	609a      	str	r2, [r3, #8]
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	689b      	ldr	r3, [r3, #8]
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	d10c      	bne.n	800bc10 <HAL_CAN_GetRxMessage+0x9e>
 800bbf6:	68fb      	ldr	r3, [r7, #12]
 800bbf8:	681a      	ldr	r2, [r3, #0]
 800bbfa:	68bb      	ldr	r3, [r7, #8]
 800bbfc:	331b      	adds	r3, #27
 800bbfe:	011b      	lsls	r3, r3, #4
 800bc00:	4413      	add	r3, r2
 800bc02:	681b      	ldr	r3, [r3, #0]
 800bc04:	0d5b      	lsrs	r3, r3, #21
 800bc06:	f3c3 020a 	ubfx	r2, r3, #0, #11
 800bc0a:	687b      	ldr	r3, [r7, #4]
 800bc0c:	601a      	str	r2, [r3, #0]
 800bc0e:	e00b      	b.n	800bc28 <HAL_CAN_GetRxMessage+0xb6>
 800bc10:	68fb      	ldr	r3, [r7, #12]
 800bc12:	681a      	ldr	r2, [r3, #0]
 800bc14:	68bb      	ldr	r3, [r7, #8]
 800bc16:	331b      	adds	r3, #27
 800bc18:	011b      	lsls	r3, r3, #4
 800bc1a:	4413      	add	r3, r2
 800bc1c:	681b      	ldr	r3, [r3, #0]
 800bc1e:	08db      	lsrs	r3, r3, #3
 800bc20:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 800bc24:	687b      	ldr	r3, [r7, #4]
 800bc26:	605a      	str	r2, [r3, #4]
 800bc28:	68fb      	ldr	r3, [r7, #12]
 800bc2a:	681a      	ldr	r2, [r3, #0]
 800bc2c:	68bb      	ldr	r3, [r7, #8]
 800bc2e:	331b      	adds	r3, #27
 800bc30:	011b      	lsls	r3, r3, #4
 800bc32:	4413      	add	r3, r2
 800bc34:	681b      	ldr	r3, [r3, #0]
 800bc36:	f003 0202 	and.w	r2, r3, #2
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	60da      	str	r2, [r3, #12]
 800bc3e:	68fb      	ldr	r3, [r7, #12]
 800bc40:	681a      	ldr	r2, [r3, #0]
 800bc42:	68bb      	ldr	r3, [r7, #8]
 800bc44:	331b      	adds	r3, #27
 800bc46:	011b      	lsls	r3, r3, #4
 800bc48:	4413      	add	r3, r2
 800bc4a:	3304      	adds	r3, #4
 800bc4c:	681b      	ldr	r3, [r3, #0]
 800bc4e:	f003 020f 	and.w	r2, r3, #15
 800bc52:	687b      	ldr	r3, [r7, #4]
 800bc54:	611a      	str	r2, [r3, #16]
 800bc56:	68fb      	ldr	r3, [r7, #12]
 800bc58:	681a      	ldr	r2, [r3, #0]
 800bc5a:	68bb      	ldr	r3, [r7, #8]
 800bc5c:	331b      	adds	r3, #27
 800bc5e:	011b      	lsls	r3, r3, #4
 800bc60:	4413      	add	r3, r2
 800bc62:	3304      	adds	r3, #4
 800bc64:	681b      	ldr	r3, [r3, #0]
 800bc66:	0a1b      	lsrs	r3, r3, #8
 800bc68:	b2da      	uxtb	r2, r3
 800bc6a:	687b      	ldr	r3, [r7, #4]
 800bc6c:	619a      	str	r2, [r3, #24]
 800bc6e:	68fb      	ldr	r3, [r7, #12]
 800bc70:	681a      	ldr	r2, [r3, #0]
 800bc72:	68bb      	ldr	r3, [r7, #8]
 800bc74:	331b      	adds	r3, #27
 800bc76:	011b      	lsls	r3, r3, #4
 800bc78:	4413      	add	r3, r2
 800bc7a:	3304      	adds	r3, #4
 800bc7c:	681b      	ldr	r3, [r3, #0]
 800bc7e:	0c1b      	lsrs	r3, r3, #16
 800bc80:	b29a      	uxth	r2, r3
 800bc82:	687b      	ldr	r3, [r7, #4]
 800bc84:	615a      	str	r2, [r3, #20]
 800bc86:	68fb      	ldr	r3, [r7, #12]
 800bc88:	681a      	ldr	r2, [r3, #0]
 800bc8a:	68bb      	ldr	r3, [r7, #8]
 800bc8c:	011b      	lsls	r3, r3, #4
 800bc8e:	4413      	add	r3, r2
 800bc90:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bc94:	681b      	ldr	r3, [r3, #0]
 800bc96:	b2da      	uxtb	r2, r3
 800bc98:	683b      	ldr	r3, [r7, #0]
 800bc9a:	701a      	strb	r2, [r3, #0]
 800bc9c:	68fb      	ldr	r3, [r7, #12]
 800bc9e:	681a      	ldr	r2, [r3, #0]
 800bca0:	68bb      	ldr	r3, [r7, #8]
 800bca2:	011b      	lsls	r3, r3, #4
 800bca4:	4413      	add	r3, r2
 800bca6:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bcaa:	681b      	ldr	r3, [r3, #0]
 800bcac:	0a1a      	lsrs	r2, r3, #8
 800bcae:	683b      	ldr	r3, [r7, #0]
 800bcb0:	3301      	adds	r3, #1
 800bcb2:	b2d2      	uxtb	r2, r2
 800bcb4:	701a      	strb	r2, [r3, #0]
 800bcb6:	68fb      	ldr	r3, [r7, #12]
 800bcb8:	681a      	ldr	r2, [r3, #0]
 800bcba:	68bb      	ldr	r3, [r7, #8]
 800bcbc:	011b      	lsls	r3, r3, #4
 800bcbe:	4413      	add	r3, r2
 800bcc0:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bcc4:	681b      	ldr	r3, [r3, #0]
 800bcc6:	0c1a      	lsrs	r2, r3, #16
 800bcc8:	683b      	ldr	r3, [r7, #0]
 800bcca:	3302      	adds	r3, #2
 800bccc:	b2d2      	uxtb	r2, r2
 800bcce:	701a      	strb	r2, [r3, #0]
 800bcd0:	68fb      	ldr	r3, [r7, #12]
 800bcd2:	681a      	ldr	r2, [r3, #0]
 800bcd4:	68bb      	ldr	r3, [r7, #8]
 800bcd6:	011b      	lsls	r3, r3, #4
 800bcd8:	4413      	add	r3, r2
 800bcda:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800bcde:	681b      	ldr	r3, [r3, #0]
 800bce0:	0e1a      	lsrs	r2, r3, #24
 800bce2:	683b      	ldr	r3, [r7, #0]
 800bce4:	3303      	adds	r3, #3
 800bce6:	b2d2      	uxtb	r2, r2
 800bce8:	701a      	strb	r2, [r3, #0]
 800bcea:	68fb      	ldr	r3, [r7, #12]
 800bcec:	681a      	ldr	r2, [r3, #0]
 800bcee:	68bb      	ldr	r3, [r7, #8]
 800bcf0:	011b      	lsls	r3, r3, #4
 800bcf2:	4413      	add	r3, r2
 800bcf4:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bcf8:	681a      	ldr	r2, [r3, #0]
 800bcfa:	683b      	ldr	r3, [r7, #0]
 800bcfc:	3304      	adds	r3, #4
 800bcfe:	b2d2      	uxtb	r2, r2
 800bd00:	701a      	strb	r2, [r3, #0]
 800bd02:	68fb      	ldr	r3, [r7, #12]
 800bd04:	681a      	ldr	r2, [r3, #0]
 800bd06:	68bb      	ldr	r3, [r7, #8]
 800bd08:	011b      	lsls	r3, r3, #4
 800bd0a:	4413      	add	r3, r2
 800bd0c:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bd10:	681b      	ldr	r3, [r3, #0]
 800bd12:	0a1a      	lsrs	r2, r3, #8
 800bd14:	683b      	ldr	r3, [r7, #0]
 800bd16:	3305      	adds	r3, #5
 800bd18:	b2d2      	uxtb	r2, r2
 800bd1a:	701a      	strb	r2, [r3, #0]
 800bd1c:	68fb      	ldr	r3, [r7, #12]
 800bd1e:	681a      	ldr	r2, [r3, #0]
 800bd20:	68bb      	ldr	r3, [r7, #8]
 800bd22:	011b      	lsls	r3, r3, #4
 800bd24:	4413      	add	r3, r2
 800bd26:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bd2a:	681b      	ldr	r3, [r3, #0]
 800bd2c:	0c1a      	lsrs	r2, r3, #16
 800bd2e:	683b      	ldr	r3, [r7, #0]
 800bd30:	3306      	adds	r3, #6
 800bd32:	b2d2      	uxtb	r2, r2
 800bd34:	701a      	strb	r2, [r3, #0]
 800bd36:	68fb      	ldr	r3, [r7, #12]
 800bd38:	681a      	ldr	r2, [r3, #0]
 800bd3a:	68bb      	ldr	r3, [r7, #8]
 800bd3c:	011b      	lsls	r3, r3, #4
 800bd3e:	4413      	add	r3, r2
 800bd40:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800bd44:	681b      	ldr	r3, [r3, #0]
 800bd46:	0e1a      	lsrs	r2, r3, #24
 800bd48:	683b      	ldr	r3, [r7, #0]
 800bd4a:	3307      	adds	r3, #7
 800bd4c:	b2d2      	uxtb	r2, r2
 800bd4e:	701a      	strb	r2, [r3, #0]
 800bd50:	68bb      	ldr	r3, [r7, #8]
 800bd52:	2b00      	cmp	r3, #0
 800bd54:	d108      	bne.n	800bd68 <HAL_CAN_GetRxMessage+0x1f6>
 800bd56:	68fb      	ldr	r3, [r7, #12]
 800bd58:	681b      	ldr	r3, [r3, #0]
 800bd5a:	68da      	ldr	r2, [r3, #12]
 800bd5c:	68fb      	ldr	r3, [r7, #12]
 800bd5e:	681b      	ldr	r3, [r3, #0]
 800bd60:	f042 0220 	orr.w	r2, r2, #32
 800bd64:	60da      	str	r2, [r3, #12]
 800bd66:	e007      	b.n	800bd78 <HAL_CAN_GetRxMessage+0x206>
 800bd68:	68fb      	ldr	r3, [r7, #12]
 800bd6a:	681b      	ldr	r3, [r3, #0]
 800bd6c:	691a      	ldr	r2, [r3, #16]
 800bd6e:	68fb      	ldr	r3, [r7, #12]
 800bd70:	681b      	ldr	r3, [r3, #0]
 800bd72:	f042 0220 	orr.w	r2, r2, #32
 800bd76:	611a      	str	r2, [r3, #16]
 800bd78:	2300      	movs	r3, #0
 800bd7a:	e006      	b.n	800bd8a <HAL_CAN_GetRxMessage+0x218>
 800bd7c:	68fb      	ldr	r3, [r7, #12]
 800bd7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bd80:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bd84:	68fb      	ldr	r3, [r7, #12]
 800bd86:	625a      	str	r2, [r3, #36]	@ 0x24
 800bd88:	2301      	movs	r3, #1
 800bd8a:	4618      	mov	r0, r3
 800bd8c:	371c      	adds	r7, #28
 800bd8e:	46bd      	mov	sp, r7
 800bd90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd94:	4770      	bx	lr

0800bd96 <HAL_CAN_ActivateNotification>:
 800bd96:	b480      	push	{r7}
 800bd98:	b085      	sub	sp, #20
 800bd9a:	af00      	add	r7, sp, #0
 800bd9c:	6078      	str	r0, [r7, #4]
 800bd9e:	6039      	str	r1, [r7, #0]
 800bda0:	687b      	ldr	r3, [r7, #4]
 800bda2:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bda6:	73fb      	strb	r3, [r7, #15]
 800bda8:	7bfb      	ldrb	r3, [r7, #15]
 800bdaa:	2b01      	cmp	r3, #1
 800bdac:	d002      	beq.n	800bdb4 <HAL_CAN_ActivateNotification+0x1e>
 800bdae:	7bfb      	ldrb	r3, [r7, #15]
 800bdb0:	2b02      	cmp	r3, #2
 800bdb2:	d109      	bne.n	800bdc8 <HAL_CAN_ActivateNotification+0x32>
 800bdb4:	687b      	ldr	r3, [r7, #4]
 800bdb6:	681b      	ldr	r3, [r3, #0]
 800bdb8:	6959      	ldr	r1, [r3, #20]
 800bdba:	687b      	ldr	r3, [r7, #4]
 800bdbc:	681b      	ldr	r3, [r3, #0]
 800bdbe:	683a      	ldr	r2, [r7, #0]
 800bdc0:	430a      	orrs	r2, r1
 800bdc2:	615a      	str	r2, [r3, #20]
 800bdc4:	2300      	movs	r3, #0
 800bdc6:	e006      	b.n	800bdd6 <HAL_CAN_ActivateNotification+0x40>
 800bdc8:	687b      	ldr	r3, [r7, #4]
 800bdca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800bdcc:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800bdd0:	687b      	ldr	r3, [r7, #4]
 800bdd2:	625a      	str	r2, [r3, #36]	@ 0x24
 800bdd4:	2301      	movs	r3, #1
 800bdd6:	4618      	mov	r0, r3
 800bdd8:	3714      	adds	r7, #20
 800bdda:	46bd      	mov	sp, r7
 800bddc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bde0:	4770      	bx	lr

0800bde2 <HAL_CAN_DeactivateNotification>:
 800bde2:	b480      	push	{r7}
 800bde4:	b085      	sub	sp, #20
 800bde6:	af00      	add	r7, sp, #0
 800bde8:	6078      	str	r0, [r7, #4]
 800bdea:	6039      	str	r1, [r7, #0]
 800bdec:	687b      	ldr	r3, [r7, #4]
 800bdee:	f893 3020 	ldrb.w	r3, [r3, #32]
 800bdf2:	73fb      	strb	r3, [r7, #15]
 800bdf4:	7bfb      	ldrb	r3, [r7, #15]
 800bdf6:	2b01      	cmp	r3, #1
 800bdf8:	d002      	beq.n	800be00 <HAL_CAN_DeactivateNotification+0x1e>
 800bdfa:	7bfb      	ldrb	r3, [r7, #15]
 800bdfc:	2b02      	cmp	r3, #2
 800bdfe:	d10a      	bne.n	800be16 <HAL_CAN_DeactivateNotification+0x34>
 800be00:	687b      	ldr	r3, [r7, #4]
 800be02:	681b      	ldr	r3, [r3, #0]
 800be04:	6959      	ldr	r1, [r3, #20]
 800be06:	683b      	ldr	r3, [r7, #0]
 800be08:	43da      	mvns	r2, r3
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	681b      	ldr	r3, [r3, #0]
 800be0e:	400a      	ands	r2, r1
 800be10:	615a      	str	r2, [r3, #20]
 800be12:	2300      	movs	r3, #0
 800be14:	e006      	b.n	800be24 <HAL_CAN_DeactivateNotification+0x42>
 800be16:	687b      	ldr	r3, [r7, #4]
 800be18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800be1a:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800be1e:	687b      	ldr	r3, [r7, #4]
 800be20:	625a      	str	r2, [r3, #36]	@ 0x24
 800be22:	2301      	movs	r3, #1
 800be24:	4618      	mov	r0, r3
 800be26:	3714      	adds	r7, #20
 800be28:	46bd      	mov	sp, r7
 800be2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be2e:	4770      	bx	lr

0800be30 <HAL_CAN_IRQHandler>:
 800be30:	b580      	push	{r7, lr}
 800be32:	b08a      	sub	sp, #40	@ 0x28
 800be34:	af00      	add	r7, sp, #0
 800be36:	6078      	str	r0, [r7, #4]
 800be38:	2300      	movs	r3, #0
 800be3a:	627b      	str	r3, [r7, #36]	@ 0x24
 800be3c:	687b      	ldr	r3, [r7, #4]
 800be3e:	681b      	ldr	r3, [r3, #0]
 800be40:	695b      	ldr	r3, [r3, #20]
 800be42:	623b      	str	r3, [r7, #32]
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	681b      	ldr	r3, [r3, #0]
 800be48:	685b      	ldr	r3, [r3, #4]
 800be4a:	61fb      	str	r3, [r7, #28]
 800be4c:	687b      	ldr	r3, [r7, #4]
 800be4e:	681b      	ldr	r3, [r3, #0]
 800be50:	689b      	ldr	r3, [r3, #8]
 800be52:	61bb      	str	r3, [r7, #24]
 800be54:	687b      	ldr	r3, [r7, #4]
 800be56:	681b      	ldr	r3, [r3, #0]
 800be58:	68db      	ldr	r3, [r3, #12]
 800be5a:	617b      	str	r3, [r7, #20]
 800be5c:	687b      	ldr	r3, [r7, #4]
 800be5e:	681b      	ldr	r3, [r3, #0]
 800be60:	691b      	ldr	r3, [r3, #16]
 800be62:	613b      	str	r3, [r7, #16]
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	681b      	ldr	r3, [r3, #0]
 800be68:	699b      	ldr	r3, [r3, #24]
 800be6a:	60fb      	str	r3, [r7, #12]
 800be6c:	6a3b      	ldr	r3, [r7, #32]
 800be6e:	f003 0301 	and.w	r3, r3, #1
 800be72:	2b00      	cmp	r3, #0
 800be74:	d07c      	beq.n	800bf70 <HAL_CAN_IRQHandler+0x140>
 800be76:	69bb      	ldr	r3, [r7, #24]
 800be78:	f003 0301 	and.w	r3, r3, #1
 800be7c:	2b00      	cmp	r3, #0
 800be7e:	d023      	beq.n	800bec8 <HAL_CAN_IRQHandler+0x98>
 800be80:	687b      	ldr	r3, [r7, #4]
 800be82:	681b      	ldr	r3, [r3, #0]
 800be84:	2201      	movs	r2, #1
 800be86:	609a      	str	r2, [r3, #8]
 800be88:	69bb      	ldr	r3, [r7, #24]
 800be8a:	f003 0302 	and.w	r3, r3, #2
 800be8e:	2b00      	cmp	r3, #0
 800be90:	d003      	beq.n	800be9a <HAL_CAN_IRQHandler+0x6a>
 800be92:	6878      	ldr	r0, [r7, #4]
 800be94:	f000 f983 	bl	800c19e <HAL_CAN_TxMailbox0CompleteCallback>
 800be98:	e016      	b.n	800bec8 <HAL_CAN_IRQHandler+0x98>
 800be9a:	69bb      	ldr	r3, [r7, #24]
 800be9c:	f003 0304 	and.w	r3, r3, #4
 800bea0:	2b00      	cmp	r3, #0
 800bea2:	d004      	beq.n	800beae <HAL_CAN_IRQHandler+0x7e>
 800bea4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bea6:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800beaa:	627b      	str	r3, [r7, #36]	@ 0x24
 800beac:	e00c      	b.n	800bec8 <HAL_CAN_IRQHandler+0x98>
 800beae:	69bb      	ldr	r3, [r7, #24]
 800beb0:	f003 0308 	and.w	r3, r3, #8
 800beb4:	2b00      	cmp	r3, #0
 800beb6:	d004      	beq.n	800bec2 <HAL_CAN_IRQHandler+0x92>
 800beb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800beba:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800bebe:	627b      	str	r3, [r7, #36]	@ 0x24
 800bec0:	e002      	b.n	800bec8 <HAL_CAN_IRQHandler+0x98>
 800bec2:	6878      	ldr	r0, [r7, #4]
 800bec4:	f000 f989 	bl	800c1da <HAL_CAN_TxMailbox0AbortCallback>
 800bec8:	69bb      	ldr	r3, [r7, #24]
 800beca:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800bece:	2b00      	cmp	r3, #0
 800bed0:	d024      	beq.n	800bf1c <HAL_CAN_IRQHandler+0xec>
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	681b      	ldr	r3, [r3, #0]
 800bed6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800beda:	609a      	str	r2, [r3, #8]
 800bedc:	69bb      	ldr	r3, [r7, #24]
 800bede:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800bee2:	2b00      	cmp	r3, #0
 800bee4:	d003      	beq.n	800beee <HAL_CAN_IRQHandler+0xbe>
 800bee6:	6878      	ldr	r0, [r7, #4]
 800bee8:	f000 f963 	bl	800c1b2 <HAL_CAN_TxMailbox1CompleteCallback>
 800beec:	e016      	b.n	800bf1c <HAL_CAN_IRQHandler+0xec>
 800beee:	69bb      	ldr	r3, [r7, #24]
 800bef0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800bef4:	2b00      	cmp	r3, #0
 800bef6:	d004      	beq.n	800bf02 <HAL_CAN_IRQHandler+0xd2>
 800bef8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800befa:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800befe:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf00:	e00c      	b.n	800bf1c <HAL_CAN_IRQHandler+0xec>
 800bf02:	69bb      	ldr	r3, [r7, #24]
 800bf04:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800bf08:	2b00      	cmp	r3, #0
 800bf0a:	d004      	beq.n	800bf16 <HAL_CAN_IRQHandler+0xe6>
 800bf0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf0e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800bf12:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf14:	e002      	b.n	800bf1c <HAL_CAN_IRQHandler+0xec>
 800bf16:	6878      	ldr	r0, [r7, #4]
 800bf18:	f000 f969 	bl	800c1ee <HAL_CAN_TxMailbox1AbortCallback>
 800bf1c:	69bb      	ldr	r3, [r7, #24]
 800bf1e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800bf22:	2b00      	cmp	r3, #0
 800bf24:	d024      	beq.n	800bf70 <HAL_CAN_IRQHandler+0x140>
 800bf26:	687b      	ldr	r3, [r7, #4]
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800bf2e:	609a      	str	r2, [r3, #8]
 800bf30:	69bb      	ldr	r3, [r7, #24]
 800bf32:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800bf36:	2b00      	cmp	r3, #0
 800bf38:	d003      	beq.n	800bf42 <HAL_CAN_IRQHandler+0x112>
 800bf3a:	6878      	ldr	r0, [r7, #4]
 800bf3c:	f000 f943 	bl	800c1c6 <HAL_CAN_TxMailbox2CompleteCallback>
 800bf40:	e016      	b.n	800bf70 <HAL_CAN_IRQHandler+0x140>
 800bf42:	69bb      	ldr	r3, [r7, #24]
 800bf44:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800bf48:	2b00      	cmp	r3, #0
 800bf4a:	d004      	beq.n	800bf56 <HAL_CAN_IRQHandler+0x126>
 800bf4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf4e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800bf52:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf54:	e00c      	b.n	800bf70 <HAL_CAN_IRQHandler+0x140>
 800bf56:	69bb      	ldr	r3, [r7, #24]
 800bf58:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800bf5c:	2b00      	cmp	r3, #0
 800bf5e:	d004      	beq.n	800bf6a <HAL_CAN_IRQHandler+0x13a>
 800bf60:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf62:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800bf66:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf68:	e002      	b.n	800bf70 <HAL_CAN_IRQHandler+0x140>
 800bf6a:	6878      	ldr	r0, [r7, #4]
 800bf6c:	f000 f949 	bl	800c202 <HAL_CAN_TxMailbox2AbortCallback>
 800bf70:	6a3b      	ldr	r3, [r7, #32]
 800bf72:	f003 0308 	and.w	r3, r3, #8
 800bf76:	2b00      	cmp	r3, #0
 800bf78:	d00c      	beq.n	800bf94 <HAL_CAN_IRQHandler+0x164>
 800bf7a:	697b      	ldr	r3, [r7, #20]
 800bf7c:	f003 0310 	and.w	r3, r3, #16
 800bf80:	2b00      	cmp	r3, #0
 800bf82:	d007      	beq.n	800bf94 <HAL_CAN_IRQHandler+0x164>
 800bf84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bf86:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800bf8a:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf8c:	687b      	ldr	r3, [r7, #4]
 800bf8e:	681b      	ldr	r3, [r3, #0]
 800bf90:	2210      	movs	r2, #16
 800bf92:	60da      	str	r2, [r3, #12]
 800bf94:	6a3b      	ldr	r3, [r7, #32]
 800bf96:	f003 0304 	and.w	r3, r3, #4
 800bf9a:	2b00      	cmp	r3, #0
 800bf9c:	d00b      	beq.n	800bfb6 <HAL_CAN_IRQHandler+0x186>
 800bf9e:	697b      	ldr	r3, [r7, #20]
 800bfa0:	f003 0308 	and.w	r3, r3, #8
 800bfa4:	2b00      	cmp	r3, #0
 800bfa6:	d006      	beq.n	800bfb6 <HAL_CAN_IRQHandler+0x186>
 800bfa8:	687b      	ldr	r3, [r7, #4]
 800bfaa:	681b      	ldr	r3, [r3, #0]
 800bfac:	2208      	movs	r2, #8
 800bfae:	60da      	str	r2, [r3, #12]
 800bfb0:	6878      	ldr	r0, [r7, #4]
 800bfb2:	f000 f930 	bl	800c216 <HAL_CAN_RxFifo0FullCallback>
 800bfb6:	6a3b      	ldr	r3, [r7, #32]
 800bfb8:	f003 0302 	and.w	r3, r3, #2
 800bfbc:	2b00      	cmp	r3, #0
 800bfbe:	d009      	beq.n	800bfd4 <HAL_CAN_IRQHandler+0x1a4>
 800bfc0:	687b      	ldr	r3, [r7, #4]
 800bfc2:	681b      	ldr	r3, [r3, #0]
 800bfc4:	68db      	ldr	r3, [r3, #12]
 800bfc6:	f003 0303 	and.w	r3, r3, #3
 800bfca:	2b00      	cmp	r3, #0
 800bfcc:	d002      	beq.n	800bfd4 <HAL_CAN_IRQHandler+0x1a4>
 800bfce:	6878      	ldr	r0, [r7, #4]
 800bfd0:	f7f5 f8fc 	bl	80011cc <HAL_CAN_RxFifo0MsgPendingCallback>
 800bfd4:	6a3b      	ldr	r3, [r7, #32]
 800bfd6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800bfda:	2b00      	cmp	r3, #0
 800bfdc:	d00c      	beq.n	800bff8 <HAL_CAN_IRQHandler+0x1c8>
 800bfde:	693b      	ldr	r3, [r7, #16]
 800bfe0:	f003 0310 	and.w	r3, r3, #16
 800bfe4:	2b00      	cmp	r3, #0
 800bfe6:	d007      	beq.n	800bff8 <HAL_CAN_IRQHandler+0x1c8>
 800bfe8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bfea:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800bfee:	627b      	str	r3, [r7, #36]	@ 0x24
 800bff0:	687b      	ldr	r3, [r7, #4]
 800bff2:	681b      	ldr	r3, [r3, #0]
 800bff4:	2210      	movs	r2, #16
 800bff6:	611a      	str	r2, [r3, #16]
 800bff8:	6a3b      	ldr	r3, [r7, #32]
 800bffa:	f003 0320 	and.w	r3, r3, #32
 800bffe:	2b00      	cmp	r3, #0
 800c000:	d00b      	beq.n	800c01a <HAL_CAN_IRQHandler+0x1ea>
 800c002:	693b      	ldr	r3, [r7, #16]
 800c004:	f003 0308 	and.w	r3, r3, #8
 800c008:	2b00      	cmp	r3, #0
 800c00a:	d006      	beq.n	800c01a <HAL_CAN_IRQHandler+0x1ea>
 800c00c:	687b      	ldr	r3, [r7, #4]
 800c00e:	681b      	ldr	r3, [r3, #0]
 800c010:	2208      	movs	r2, #8
 800c012:	611a      	str	r2, [r3, #16]
 800c014:	6878      	ldr	r0, [r7, #4]
 800c016:	f000 f908 	bl	800c22a <HAL_CAN_RxFifo1FullCallback>
 800c01a:	6a3b      	ldr	r3, [r7, #32]
 800c01c:	f003 0310 	and.w	r3, r3, #16
 800c020:	2b00      	cmp	r3, #0
 800c022:	d009      	beq.n	800c038 <HAL_CAN_IRQHandler+0x208>
 800c024:	687b      	ldr	r3, [r7, #4]
 800c026:	681b      	ldr	r3, [r3, #0]
 800c028:	691b      	ldr	r3, [r3, #16]
 800c02a:	f003 0303 	and.w	r3, r3, #3
 800c02e:	2b00      	cmp	r3, #0
 800c030:	d002      	beq.n	800c038 <HAL_CAN_IRQHandler+0x208>
 800c032:	6878      	ldr	r0, [r7, #4]
 800c034:	f7f5 f8d5 	bl	80011e2 <HAL_CAN_RxFifo1MsgPendingCallback>
 800c038:	6a3b      	ldr	r3, [r7, #32]
 800c03a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800c03e:	2b00      	cmp	r3, #0
 800c040:	d00b      	beq.n	800c05a <HAL_CAN_IRQHandler+0x22a>
 800c042:	69fb      	ldr	r3, [r7, #28]
 800c044:	f003 0310 	and.w	r3, r3, #16
 800c048:	2b00      	cmp	r3, #0
 800c04a:	d006      	beq.n	800c05a <HAL_CAN_IRQHandler+0x22a>
 800c04c:	687b      	ldr	r3, [r7, #4]
 800c04e:	681b      	ldr	r3, [r3, #0]
 800c050:	2210      	movs	r2, #16
 800c052:	605a      	str	r2, [r3, #4]
 800c054:	6878      	ldr	r0, [r7, #4]
 800c056:	f000 f8f2 	bl	800c23e <HAL_CAN_SleepCallback>
 800c05a:	6a3b      	ldr	r3, [r7, #32]
 800c05c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800c060:	2b00      	cmp	r3, #0
 800c062:	d00b      	beq.n	800c07c <HAL_CAN_IRQHandler+0x24c>
 800c064:	69fb      	ldr	r3, [r7, #28]
 800c066:	f003 0308 	and.w	r3, r3, #8
 800c06a:	2b00      	cmp	r3, #0
 800c06c:	d006      	beq.n	800c07c <HAL_CAN_IRQHandler+0x24c>
 800c06e:	687b      	ldr	r3, [r7, #4]
 800c070:	681b      	ldr	r3, [r3, #0]
 800c072:	2208      	movs	r2, #8
 800c074:	605a      	str	r2, [r3, #4]
 800c076:	6878      	ldr	r0, [r7, #4]
 800c078:	f000 f8eb 	bl	800c252 <HAL_CAN_WakeUpFromRxMsgCallback>
 800c07c:	6a3b      	ldr	r3, [r7, #32]
 800c07e:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800c082:	2b00      	cmp	r3, #0
 800c084:	d07b      	beq.n	800c17e <HAL_CAN_IRQHandler+0x34e>
 800c086:	69fb      	ldr	r3, [r7, #28]
 800c088:	f003 0304 	and.w	r3, r3, #4
 800c08c:	2b00      	cmp	r3, #0
 800c08e:	d072      	beq.n	800c176 <HAL_CAN_IRQHandler+0x346>
 800c090:	6a3b      	ldr	r3, [r7, #32]
 800c092:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c096:	2b00      	cmp	r3, #0
 800c098:	d008      	beq.n	800c0ac <HAL_CAN_IRQHandler+0x27c>
 800c09a:	68fb      	ldr	r3, [r7, #12]
 800c09c:	f003 0301 	and.w	r3, r3, #1
 800c0a0:	2b00      	cmp	r3, #0
 800c0a2:	d003      	beq.n	800c0ac <HAL_CAN_IRQHandler+0x27c>
 800c0a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0a6:	f043 0301 	orr.w	r3, r3, #1
 800c0aa:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0ac:	6a3b      	ldr	r3, [r7, #32]
 800c0ae:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d008      	beq.n	800c0c8 <HAL_CAN_IRQHandler+0x298>
 800c0b6:	68fb      	ldr	r3, [r7, #12]
 800c0b8:	f003 0302 	and.w	r3, r3, #2
 800c0bc:	2b00      	cmp	r3, #0
 800c0be:	d003      	beq.n	800c0c8 <HAL_CAN_IRQHandler+0x298>
 800c0c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0c2:	f043 0302 	orr.w	r3, r3, #2
 800c0c6:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0c8:	6a3b      	ldr	r3, [r7, #32]
 800c0ca:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800c0ce:	2b00      	cmp	r3, #0
 800c0d0:	d008      	beq.n	800c0e4 <HAL_CAN_IRQHandler+0x2b4>
 800c0d2:	68fb      	ldr	r3, [r7, #12]
 800c0d4:	f003 0304 	and.w	r3, r3, #4
 800c0d8:	2b00      	cmp	r3, #0
 800c0da:	d003      	beq.n	800c0e4 <HAL_CAN_IRQHandler+0x2b4>
 800c0dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c0de:	f043 0304 	orr.w	r3, r3, #4
 800c0e2:	627b      	str	r3, [r7, #36]	@ 0x24
 800c0e4:	6a3b      	ldr	r3, [r7, #32]
 800c0e6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800c0ea:	2b00      	cmp	r3, #0
 800c0ec:	d043      	beq.n	800c176 <HAL_CAN_IRQHandler+0x346>
 800c0ee:	68fb      	ldr	r3, [r7, #12]
 800c0f0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800c0f4:	2b00      	cmp	r3, #0
 800c0f6:	d03e      	beq.n	800c176 <HAL_CAN_IRQHandler+0x346>
 800c0f8:	68fb      	ldr	r3, [r7, #12]
 800c0fa:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800c0fe:	2b60      	cmp	r3, #96	@ 0x60
 800c100:	d02b      	beq.n	800c15a <HAL_CAN_IRQHandler+0x32a>
 800c102:	2b60      	cmp	r3, #96	@ 0x60
 800c104:	d82e      	bhi.n	800c164 <HAL_CAN_IRQHandler+0x334>
 800c106:	2b50      	cmp	r3, #80	@ 0x50
 800c108:	d022      	beq.n	800c150 <HAL_CAN_IRQHandler+0x320>
 800c10a:	2b50      	cmp	r3, #80	@ 0x50
 800c10c:	d82a      	bhi.n	800c164 <HAL_CAN_IRQHandler+0x334>
 800c10e:	2b40      	cmp	r3, #64	@ 0x40
 800c110:	d019      	beq.n	800c146 <HAL_CAN_IRQHandler+0x316>
 800c112:	2b40      	cmp	r3, #64	@ 0x40
 800c114:	d826      	bhi.n	800c164 <HAL_CAN_IRQHandler+0x334>
 800c116:	2b30      	cmp	r3, #48	@ 0x30
 800c118:	d010      	beq.n	800c13c <HAL_CAN_IRQHandler+0x30c>
 800c11a:	2b30      	cmp	r3, #48	@ 0x30
 800c11c:	d822      	bhi.n	800c164 <HAL_CAN_IRQHandler+0x334>
 800c11e:	2b10      	cmp	r3, #16
 800c120:	d002      	beq.n	800c128 <HAL_CAN_IRQHandler+0x2f8>
 800c122:	2b20      	cmp	r3, #32
 800c124:	d005      	beq.n	800c132 <HAL_CAN_IRQHandler+0x302>
 800c126:	e01d      	b.n	800c164 <HAL_CAN_IRQHandler+0x334>
 800c128:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c12a:	f043 0308 	orr.w	r3, r3, #8
 800c12e:	627b      	str	r3, [r7, #36]	@ 0x24
 800c130:	e019      	b.n	800c166 <HAL_CAN_IRQHandler+0x336>
 800c132:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c134:	f043 0310 	orr.w	r3, r3, #16
 800c138:	627b      	str	r3, [r7, #36]	@ 0x24
 800c13a:	e014      	b.n	800c166 <HAL_CAN_IRQHandler+0x336>
 800c13c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c13e:	f043 0320 	orr.w	r3, r3, #32
 800c142:	627b      	str	r3, [r7, #36]	@ 0x24
 800c144:	e00f      	b.n	800c166 <HAL_CAN_IRQHandler+0x336>
 800c146:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c148:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c14c:	627b      	str	r3, [r7, #36]	@ 0x24
 800c14e:	e00a      	b.n	800c166 <HAL_CAN_IRQHandler+0x336>
 800c150:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c152:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c156:	627b      	str	r3, [r7, #36]	@ 0x24
 800c158:	e005      	b.n	800c166 <HAL_CAN_IRQHandler+0x336>
 800c15a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c15c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c160:	627b      	str	r3, [r7, #36]	@ 0x24
 800c162:	e000      	b.n	800c166 <HAL_CAN_IRQHandler+0x336>
 800c164:	bf00      	nop
 800c166:	687b      	ldr	r3, [r7, #4]
 800c168:	681b      	ldr	r3, [r3, #0]
 800c16a:	699a      	ldr	r2, [r3, #24]
 800c16c:	687b      	ldr	r3, [r7, #4]
 800c16e:	681b      	ldr	r3, [r3, #0]
 800c170:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800c174:	619a      	str	r2, [r3, #24]
 800c176:	687b      	ldr	r3, [r7, #4]
 800c178:	681b      	ldr	r3, [r3, #0]
 800c17a:	2204      	movs	r2, #4
 800c17c:	605a      	str	r2, [r3, #4]
 800c17e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c180:	2b00      	cmp	r3, #0
 800c182:	d008      	beq.n	800c196 <HAL_CAN_IRQHandler+0x366>
 800c184:	687b      	ldr	r3, [r7, #4]
 800c186:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800c188:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c18a:	431a      	orrs	r2, r3
 800c18c:	687b      	ldr	r3, [r7, #4]
 800c18e:	625a      	str	r2, [r3, #36]	@ 0x24
 800c190:	6878      	ldr	r0, [r7, #4]
 800c192:	f000 f868 	bl	800c266 <HAL_CAN_ErrorCallback>
 800c196:	bf00      	nop
 800c198:	3728      	adds	r7, #40	@ 0x28
 800c19a:	46bd      	mov	sp, r7
 800c19c:	bd80      	pop	{r7, pc}

0800c19e <HAL_CAN_TxMailbox0CompleteCallback>:
 800c19e:	b480      	push	{r7}
 800c1a0:	b083      	sub	sp, #12
 800c1a2:	af00      	add	r7, sp, #0
 800c1a4:	6078      	str	r0, [r7, #4]
 800c1a6:	bf00      	nop
 800c1a8:	370c      	adds	r7, #12
 800c1aa:	46bd      	mov	sp, r7
 800c1ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1b0:	4770      	bx	lr

0800c1b2 <HAL_CAN_TxMailbox1CompleteCallback>:
 800c1b2:	b480      	push	{r7}
 800c1b4:	b083      	sub	sp, #12
 800c1b6:	af00      	add	r7, sp, #0
 800c1b8:	6078      	str	r0, [r7, #4]
 800c1ba:	bf00      	nop
 800c1bc:	370c      	adds	r7, #12
 800c1be:	46bd      	mov	sp, r7
 800c1c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1c4:	4770      	bx	lr

0800c1c6 <HAL_CAN_TxMailbox2CompleteCallback>:
 800c1c6:	b480      	push	{r7}
 800c1c8:	b083      	sub	sp, #12
 800c1ca:	af00      	add	r7, sp, #0
 800c1cc:	6078      	str	r0, [r7, #4]
 800c1ce:	bf00      	nop
 800c1d0:	370c      	adds	r7, #12
 800c1d2:	46bd      	mov	sp, r7
 800c1d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1d8:	4770      	bx	lr

0800c1da <HAL_CAN_TxMailbox0AbortCallback>:
 800c1da:	b480      	push	{r7}
 800c1dc:	b083      	sub	sp, #12
 800c1de:	af00      	add	r7, sp, #0
 800c1e0:	6078      	str	r0, [r7, #4]
 800c1e2:	bf00      	nop
 800c1e4:	370c      	adds	r7, #12
 800c1e6:	46bd      	mov	sp, r7
 800c1e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1ec:	4770      	bx	lr

0800c1ee <HAL_CAN_TxMailbox1AbortCallback>:
 800c1ee:	b480      	push	{r7}
 800c1f0:	b083      	sub	sp, #12
 800c1f2:	af00      	add	r7, sp, #0
 800c1f4:	6078      	str	r0, [r7, #4]
 800c1f6:	bf00      	nop
 800c1f8:	370c      	adds	r7, #12
 800c1fa:	46bd      	mov	sp, r7
 800c1fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c200:	4770      	bx	lr

0800c202 <HAL_CAN_TxMailbox2AbortCallback>:
 800c202:	b480      	push	{r7}
 800c204:	b083      	sub	sp, #12
 800c206:	af00      	add	r7, sp, #0
 800c208:	6078      	str	r0, [r7, #4]
 800c20a:	bf00      	nop
 800c20c:	370c      	adds	r7, #12
 800c20e:	46bd      	mov	sp, r7
 800c210:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c214:	4770      	bx	lr

0800c216 <HAL_CAN_RxFifo0FullCallback>:
 800c216:	b480      	push	{r7}
 800c218:	b083      	sub	sp, #12
 800c21a:	af00      	add	r7, sp, #0
 800c21c:	6078      	str	r0, [r7, #4]
 800c21e:	bf00      	nop
 800c220:	370c      	adds	r7, #12
 800c222:	46bd      	mov	sp, r7
 800c224:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c228:	4770      	bx	lr

0800c22a <HAL_CAN_RxFifo1FullCallback>:
 800c22a:	b480      	push	{r7}
 800c22c:	b083      	sub	sp, #12
 800c22e:	af00      	add	r7, sp, #0
 800c230:	6078      	str	r0, [r7, #4]
 800c232:	bf00      	nop
 800c234:	370c      	adds	r7, #12
 800c236:	46bd      	mov	sp, r7
 800c238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c23c:	4770      	bx	lr

0800c23e <HAL_CAN_SleepCallback>:
 800c23e:	b480      	push	{r7}
 800c240:	b083      	sub	sp, #12
 800c242:	af00      	add	r7, sp, #0
 800c244:	6078      	str	r0, [r7, #4]
 800c246:	bf00      	nop
 800c248:	370c      	adds	r7, #12
 800c24a:	46bd      	mov	sp, r7
 800c24c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c250:	4770      	bx	lr

0800c252 <HAL_CAN_WakeUpFromRxMsgCallback>:
 800c252:	b480      	push	{r7}
 800c254:	b083      	sub	sp, #12
 800c256:	af00      	add	r7, sp, #0
 800c258:	6078      	str	r0, [r7, #4]
 800c25a:	bf00      	nop
 800c25c:	370c      	adds	r7, #12
 800c25e:	46bd      	mov	sp, r7
 800c260:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c264:	4770      	bx	lr

0800c266 <HAL_CAN_ErrorCallback>:
 800c266:	b480      	push	{r7}
 800c268:	b083      	sub	sp, #12
 800c26a:	af00      	add	r7, sp, #0
 800c26c:	6078      	str	r0, [r7, #4]
 800c26e:	bf00      	nop
 800c270:	370c      	adds	r7, #12
 800c272:	46bd      	mov	sp, r7
 800c274:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c278:	4770      	bx	lr
	...

0800c27c <__NVIC_SetPriorityGrouping>:
 800c27c:	b480      	push	{r7}
 800c27e:	b085      	sub	sp, #20
 800c280:	af00      	add	r7, sp, #0
 800c282:	6078      	str	r0, [r7, #4]
 800c284:	687b      	ldr	r3, [r7, #4]
 800c286:	f003 0307 	and.w	r3, r3, #7
 800c28a:	60fb      	str	r3, [r7, #12]
 800c28c:	4b0c      	ldr	r3, [pc, #48]	@ (800c2c0 <__NVIC_SetPriorityGrouping+0x44>)
 800c28e:	68db      	ldr	r3, [r3, #12]
 800c290:	60bb      	str	r3, [r7, #8]
 800c292:	68ba      	ldr	r2, [r7, #8]
 800c294:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800c298:	4013      	ands	r3, r2
 800c29a:	60bb      	str	r3, [r7, #8]
 800c29c:	68fb      	ldr	r3, [r7, #12]
 800c29e:	021a      	lsls	r2, r3, #8
 800c2a0:	68bb      	ldr	r3, [r7, #8]
 800c2a2:	4313      	orrs	r3, r2
 800c2a4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800c2a8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c2ac:	60bb      	str	r3, [r7, #8]
 800c2ae:	4a04      	ldr	r2, [pc, #16]	@ (800c2c0 <__NVIC_SetPriorityGrouping+0x44>)
 800c2b0:	68bb      	ldr	r3, [r7, #8]
 800c2b2:	60d3      	str	r3, [r2, #12]
 800c2b4:	bf00      	nop
 800c2b6:	3714      	adds	r7, #20
 800c2b8:	46bd      	mov	sp, r7
 800c2ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2be:	4770      	bx	lr
 800c2c0:	e000ed00 	.word	0xe000ed00

0800c2c4 <__NVIC_GetPriorityGrouping>:
 800c2c4:	b480      	push	{r7}
 800c2c6:	af00      	add	r7, sp, #0
 800c2c8:	4b04      	ldr	r3, [pc, #16]	@ (800c2dc <__NVIC_GetPriorityGrouping+0x18>)
 800c2ca:	68db      	ldr	r3, [r3, #12]
 800c2cc:	0a1b      	lsrs	r3, r3, #8
 800c2ce:	f003 0307 	and.w	r3, r3, #7
 800c2d2:	4618      	mov	r0, r3
 800c2d4:	46bd      	mov	sp, r7
 800c2d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2da:	4770      	bx	lr
 800c2dc:	e000ed00 	.word	0xe000ed00

0800c2e0 <__NVIC_EnableIRQ>:
 800c2e0:	b480      	push	{r7}
 800c2e2:	b083      	sub	sp, #12
 800c2e4:	af00      	add	r7, sp, #0
 800c2e6:	4603      	mov	r3, r0
 800c2e8:	71fb      	strb	r3, [r7, #7]
 800c2ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c2ee:	2b00      	cmp	r3, #0
 800c2f0:	db0b      	blt.n	800c30a <__NVIC_EnableIRQ+0x2a>
 800c2f2:	79fb      	ldrb	r3, [r7, #7]
 800c2f4:	f003 021f 	and.w	r2, r3, #31
 800c2f8:	4907      	ldr	r1, [pc, #28]	@ (800c318 <__NVIC_EnableIRQ+0x38>)
 800c2fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c2fe:	095b      	lsrs	r3, r3, #5
 800c300:	2001      	movs	r0, #1
 800c302:	fa00 f202 	lsl.w	r2, r0, r2
 800c306:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800c30a:	bf00      	nop
 800c30c:	370c      	adds	r7, #12
 800c30e:	46bd      	mov	sp, r7
 800c310:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c314:	4770      	bx	lr
 800c316:	bf00      	nop
 800c318:	e000e100 	.word	0xe000e100

0800c31c <__NVIC_DisableIRQ>:
 800c31c:	b480      	push	{r7}
 800c31e:	b083      	sub	sp, #12
 800c320:	af00      	add	r7, sp, #0
 800c322:	4603      	mov	r3, r0
 800c324:	71fb      	strb	r3, [r7, #7]
 800c326:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c32a:	2b00      	cmp	r3, #0
 800c32c:	db12      	blt.n	800c354 <__NVIC_DisableIRQ+0x38>
 800c32e:	79fb      	ldrb	r3, [r7, #7]
 800c330:	f003 021f 	and.w	r2, r3, #31
 800c334:	490a      	ldr	r1, [pc, #40]	@ (800c360 <__NVIC_DisableIRQ+0x44>)
 800c336:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c33a:	095b      	lsrs	r3, r3, #5
 800c33c:	2001      	movs	r0, #1
 800c33e:	fa00 f202 	lsl.w	r2, r0, r2
 800c342:	3320      	adds	r3, #32
 800c344:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800c348:	f3bf 8f4f 	dsb	sy
 800c34c:	bf00      	nop
 800c34e:	f3bf 8f6f 	isb	sy
 800c352:	bf00      	nop
 800c354:	bf00      	nop
 800c356:	370c      	adds	r7, #12
 800c358:	46bd      	mov	sp, r7
 800c35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c35e:	4770      	bx	lr
 800c360:	e000e100 	.word	0xe000e100

0800c364 <__NVIC_SetPriority>:
 800c364:	b480      	push	{r7}
 800c366:	b083      	sub	sp, #12
 800c368:	af00      	add	r7, sp, #0
 800c36a:	4603      	mov	r3, r0
 800c36c:	6039      	str	r1, [r7, #0]
 800c36e:	71fb      	strb	r3, [r7, #7]
 800c370:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c374:	2b00      	cmp	r3, #0
 800c376:	db0a      	blt.n	800c38e <__NVIC_SetPriority+0x2a>
 800c378:	683b      	ldr	r3, [r7, #0]
 800c37a:	b2da      	uxtb	r2, r3
 800c37c:	490c      	ldr	r1, [pc, #48]	@ (800c3b0 <__NVIC_SetPriority+0x4c>)
 800c37e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c382:	0112      	lsls	r2, r2, #4
 800c384:	b2d2      	uxtb	r2, r2
 800c386:	440b      	add	r3, r1
 800c388:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800c38c:	e00a      	b.n	800c3a4 <__NVIC_SetPriority+0x40>
 800c38e:	683b      	ldr	r3, [r7, #0]
 800c390:	b2da      	uxtb	r2, r3
 800c392:	4908      	ldr	r1, [pc, #32]	@ (800c3b4 <__NVIC_SetPriority+0x50>)
 800c394:	79fb      	ldrb	r3, [r7, #7]
 800c396:	f003 030f 	and.w	r3, r3, #15
 800c39a:	3b04      	subs	r3, #4
 800c39c:	0112      	lsls	r2, r2, #4
 800c39e:	b2d2      	uxtb	r2, r2
 800c3a0:	440b      	add	r3, r1
 800c3a2:	761a      	strb	r2, [r3, #24]
 800c3a4:	bf00      	nop
 800c3a6:	370c      	adds	r7, #12
 800c3a8:	46bd      	mov	sp, r7
 800c3aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3ae:	4770      	bx	lr
 800c3b0:	e000e100 	.word	0xe000e100
 800c3b4:	e000ed00 	.word	0xe000ed00

0800c3b8 <NVIC_EncodePriority>:
 800c3b8:	b480      	push	{r7}
 800c3ba:	b089      	sub	sp, #36	@ 0x24
 800c3bc:	af00      	add	r7, sp, #0
 800c3be:	60f8      	str	r0, [r7, #12]
 800c3c0:	60b9      	str	r1, [r7, #8]
 800c3c2:	607a      	str	r2, [r7, #4]
 800c3c4:	68fb      	ldr	r3, [r7, #12]
 800c3c6:	f003 0307 	and.w	r3, r3, #7
 800c3ca:	61fb      	str	r3, [r7, #28]
 800c3cc:	69fb      	ldr	r3, [r7, #28]
 800c3ce:	f1c3 0307 	rsb	r3, r3, #7
 800c3d2:	2b04      	cmp	r3, #4
 800c3d4:	bf28      	it	cs
 800c3d6:	2304      	movcs	r3, #4
 800c3d8:	61bb      	str	r3, [r7, #24]
 800c3da:	69fb      	ldr	r3, [r7, #28]
 800c3dc:	3304      	adds	r3, #4
 800c3de:	2b06      	cmp	r3, #6
 800c3e0:	d902      	bls.n	800c3e8 <NVIC_EncodePriority+0x30>
 800c3e2:	69fb      	ldr	r3, [r7, #28]
 800c3e4:	3b03      	subs	r3, #3
 800c3e6:	e000      	b.n	800c3ea <NVIC_EncodePriority+0x32>
 800c3e8:	2300      	movs	r3, #0
 800c3ea:	617b      	str	r3, [r7, #20]
 800c3ec:	f04f 32ff 	mov.w	r2, #4294967295
 800c3f0:	69bb      	ldr	r3, [r7, #24]
 800c3f2:	fa02 f303 	lsl.w	r3, r2, r3
 800c3f6:	43da      	mvns	r2, r3
 800c3f8:	68bb      	ldr	r3, [r7, #8]
 800c3fa:	401a      	ands	r2, r3
 800c3fc:	697b      	ldr	r3, [r7, #20]
 800c3fe:	409a      	lsls	r2, r3
 800c400:	f04f 31ff 	mov.w	r1, #4294967295
 800c404:	697b      	ldr	r3, [r7, #20]
 800c406:	fa01 f303 	lsl.w	r3, r1, r3
 800c40a:	43d9      	mvns	r1, r3
 800c40c:	687b      	ldr	r3, [r7, #4]
 800c40e:	400b      	ands	r3, r1
 800c410:	4313      	orrs	r3, r2
 800c412:	4618      	mov	r0, r3
 800c414:	3724      	adds	r7, #36	@ 0x24
 800c416:	46bd      	mov	sp, r7
 800c418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c41c:	4770      	bx	lr

0800c41e <HAL_NVIC_SetPriorityGrouping>:
 800c41e:	b580      	push	{r7, lr}
 800c420:	b082      	sub	sp, #8
 800c422:	af00      	add	r7, sp, #0
 800c424:	6078      	str	r0, [r7, #4]
 800c426:	6878      	ldr	r0, [r7, #4]
 800c428:	f7ff ff28 	bl	800c27c <__NVIC_SetPriorityGrouping>
 800c42c:	bf00      	nop
 800c42e:	3708      	adds	r7, #8
 800c430:	46bd      	mov	sp, r7
 800c432:	bd80      	pop	{r7, pc}

0800c434 <HAL_NVIC_SetPriority>:
 800c434:	b580      	push	{r7, lr}
 800c436:	b086      	sub	sp, #24
 800c438:	af00      	add	r7, sp, #0
 800c43a:	4603      	mov	r3, r0
 800c43c:	60b9      	str	r1, [r7, #8]
 800c43e:	607a      	str	r2, [r7, #4]
 800c440:	73fb      	strb	r3, [r7, #15]
 800c442:	2300      	movs	r3, #0
 800c444:	617b      	str	r3, [r7, #20]
 800c446:	f7ff ff3d 	bl	800c2c4 <__NVIC_GetPriorityGrouping>
 800c44a:	6178      	str	r0, [r7, #20]
 800c44c:	687a      	ldr	r2, [r7, #4]
 800c44e:	68b9      	ldr	r1, [r7, #8]
 800c450:	6978      	ldr	r0, [r7, #20]
 800c452:	f7ff ffb1 	bl	800c3b8 <NVIC_EncodePriority>
 800c456:	4602      	mov	r2, r0
 800c458:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800c45c:	4611      	mov	r1, r2
 800c45e:	4618      	mov	r0, r3
 800c460:	f7ff ff80 	bl	800c364 <__NVIC_SetPriority>
 800c464:	bf00      	nop
 800c466:	3718      	adds	r7, #24
 800c468:	46bd      	mov	sp, r7
 800c46a:	bd80      	pop	{r7, pc}

0800c46c <HAL_NVIC_EnableIRQ>:
 800c46c:	b580      	push	{r7, lr}
 800c46e:	b082      	sub	sp, #8
 800c470:	af00      	add	r7, sp, #0
 800c472:	4603      	mov	r3, r0
 800c474:	71fb      	strb	r3, [r7, #7]
 800c476:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c47a:	4618      	mov	r0, r3
 800c47c:	f7ff ff30 	bl	800c2e0 <__NVIC_EnableIRQ>
 800c480:	bf00      	nop
 800c482:	3708      	adds	r7, #8
 800c484:	46bd      	mov	sp, r7
 800c486:	bd80      	pop	{r7, pc}

0800c488 <HAL_NVIC_DisableIRQ>:
 800c488:	b580      	push	{r7, lr}
 800c48a:	b082      	sub	sp, #8
 800c48c:	af00      	add	r7, sp, #0
 800c48e:	4603      	mov	r3, r0
 800c490:	71fb      	strb	r3, [r7, #7]
 800c492:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c496:	4618      	mov	r0, r3
 800c498:	f7ff ff40 	bl	800c31c <__NVIC_DisableIRQ>
 800c49c:	bf00      	nop
 800c49e:	3708      	adds	r7, #8
 800c4a0:	46bd      	mov	sp, r7
 800c4a2:	bd80      	pop	{r7, pc}

0800c4a4 <HAL_DMA_Init>:
 800c4a4:	b580      	push	{r7, lr}
 800c4a6:	b086      	sub	sp, #24
 800c4a8:	af00      	add	r7, sp, #0
 800c4aa:	6078      	str	r0, [r7, #4]
 800c4ac:	2300      	movs	r3, #0
 800c4ae:	617b      	str	r3, [r7, #20]
 800c4b0:	f7fe fdd2 	bl	800b058 <HAL_GetTick>
 800c4b4:	6138      	str	r0, [r7, #16]
 800c4b6:	687b      	ldr	r3, [r7, #4]
 800c4b8:	2b00      	cmp	r3, #0
 800c4ba:	d101      	bne.n	800c4c0 <HAL_DMA_Init+0x1c>
 800c4bc:	2301      	movs	r3, #1
 800c4be:	e099      	b.n	800c5f4 <HAL_DMA_Init+0x150>
 800c4c0:	687b      	ldr	r3, [r7, #4]
 800c4c2:	2202      	movs	r2, #2
 800c4c4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c4c8:	687b      	ldr	r3, [r7, #4]
 800c4ca:	2200      	movs	r2, #0
 800c4cc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c4d0:	687b      	ldr	r3, [r7, #4]
 800c4d2:	681b      	ldr	r3, [r3, #0]
 800c4d4:	681a      	ldr	r2, [r3, #0]
 800c4d6:	687b      	ldr	r3, [r7, #4]
 800c4d8:	681b      	ldr	r3, [r3, #0]
 800c4da:	f022 0201 	bic.w	r2, r2, #1
 800c4de:	601a      	str	r2, [r3, #0]
 800c4e0:	e00f      	b.n	800c502 <HAL_DMA_Init+0x5e>
 800c4e2:	f7fe fdb9 	bl	800b058 <HAL_GetTick>
 800c4e6:	4602      	mov	r2, r0
 800c4e8:	693b      	ldr	r3, [r7, #16]
 800c4ea:	1ad3      	subs	r3, r2, r3
 800c4ec:	2b05      	cmp	r3, #5
 800c4ee:	d908      	bls.n	800c502 <HAL_DMA_Init+0x5e>
 800c4f0:	687b      	ldr	r3, [r7, #4]
 800c4f2:	2220      	movs	r2, #32
 800c4f4:	655a      	str	r2, [r3, #84]	@ 0x54
 800c4f6:	687b      	ldr	r3, [r7, #4]
 800c4f8:	2203      	movs	r2, #3
 800c4fa:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c4fe:	2303      	movs	r3, #3
 800c500:	e078      	b.n	800c5f4 <HAL_DMA_Init+0x150>
 800c502:	687b      	ldr	r3, [r7, #4]
 800c504:	681b      	ldr	r3, [r3, #0]
 800c506:	681b      	ldr	r3, [r3, #0]
 800c508:	f003 0301 	and.w	r3, r3, #1
 800c50c:	2b00      	cmp	r3, #0
 800c50e:	d1e8      	bne.n	800c4e2 <HAL_DMA_Init+0x3e>
 800c510:	687b      	ldr	r3, [r7, #4]
 800c512:	681b      	ldr	r3, [r3, #0]
 800c514:	681b      	ldr	r3, [r3, #0]
 800c516:	617b      	str	r3, [r7, #20]
 800c518:	697a      	ldr	r2, [r7, #20]
 800c51a:	4b38      	ldr	r3, [pc, #224]	@ (800c5fc <HAL_DMA_Init+0x158>)
 800c51c:	4013      	ands	r3, r2
 800c51e:	617b      	str	r3, [r7, #20]
 800c520:	687b      	ldr	r3, [r7, #4]
 800c522:	685a      	ldr	r2, [r3, #4]
 800c524:	687b      	ldr	r3, [r7, #4]
 800c526:	689b      	ldr	r3, [r3, #8]
 800c528:	431a      	orrs	r2, r3
 800c52a:	687b      	ldr	r3, [r7, #4]
 800c52c:	68db      	ldr	r3, [r3, #12]
 800c52e:	431a      	orrs	r2, r3
 800c530:	687b      	ldr	r3, [r7, #4]
 800c532:	691b      	ldr	r3, [r3, #16]
 800c534:	431a      	orrs	r2, r3
 800c536:	687b      	ldr	r3, [r7, #4]
 800c538:	695b      	ldr	r3, [r3, #20]
 800c53a:	431a      	orrs	r2, r3
 800c53c:	687b      	ldr	r3, [r7, #4]
 800c53e:	699b      	ldr	r3, [r3, #24]
 800c540:	431a      	orrs	r2, r3
 800c542:	687b      	ldr	r3, [r7, #4]
 800c544:	69db      	ldr	r3, [r3, #28]
 800c546:	431a      	orrs	r2, r3
 800c548:	687b      	ldr	r3, [r7, #4]
 800c54a:	6a1b      	ldr	r3, [r3, #32]
 800c54c:	4313      	orrs	r3, r2
 800c54e:	697a      	ldr	r2, [r7, #20]
 800c550:	4313      	orrs	r3, r2
 800c552:	617b      	str	r3, [r7, #20]
 800c554:	687b      	ldr	r3, [r7, #4]
 800c556:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c558:	2b04      	cmp	r3, #4
 800c55a:	d107      	bne.n	800c56c <HAL_DMA_Init+0xc8>
 800c55c:	687b      	ldr	r3, [r7, #4]
 800c55e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800c560:	687b      	ldr	r3, [r7, #4]
 800c562:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c564:	4313      	orrs	r3, r2
 800c566:	697a      	ldr	r2, [r7, #20]
 800c568:	4313      	orrs	r3, r2
 800c56a:	617b      	str	r3, [r7, #20]
 800c56c:	687b      	ldr	r3, [r7, #4]
 800c56e:	681b      	ldr	r3, [r3, #0]
 800c570:	697a      	ldr	r2, [r7, #20]
 800c572:	601a      	str	r2, [r3, #0]
 800c574:	687b      	ldr	r3, [r7, #4]
 800c576:	681b      	ldr	r3, [r3, #0]
 800c578:	695b      	ldr	r3, [r3, #20]
 800c57a:	617b      	str	r3, [r7, #20]
 800c57c:	697b      	ldr	r3, [r7, #20]
 800c57e:	f023 0307 	bic.w	r3, r3, #7
 800c582:	617b      	str	r3, [r7, #20]
 800c584:	687b      	ldr	r3, [r7, #4]
 800c586:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c588:	697a      	ldr	r2, [r7, #20]
 800c58a:	4313      	orrs	r3, r2
 800c58c:	617b      	str	r3, [r7, #20]
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c592:	2b04      	cmp	r3, #4
 800c594:	d117      	bne.n	800c5c6 <HAL_DMA_Init+0x122>
 800c596:	687b      	ldr	r3, [r7, #4]
 800c598:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800c59a:	697a      	ldr	r2, [r7, #20]
 800c59c:	4313      	orrs	r3, r2
 800c59e:	617b      	str	r3, [r7, #20]
 800c5a0:	687b      	ldr	r3, [r7, #4]
 800c5a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c5a4:	2b00      	cmp	r3, #0
 800c5a6:	d00e      	beq.n	800c5c6 <HAL_DMA_Init+0x122>
 800c5a8:	6878      	ldr	r0, [r7, #4]
 800c5aa:	f000 fb0d 	bl	800cbc8 <DMA_CheckFifoParam>
 800c5ae:	4603      	mov	r3, r0
 800c5b0:	2b00      	cmp	r3, #0
 800c5b2:	d008      	beq.n	800c5c6 <HAL_DMA_Init+0x122>
 800c5b4:	687b      	ldr	r3, [r7, #4]
 800c5b6:	2240      	movs	r2, #64	@ 0x40
 800c5b8:	655a      	str	r2, [r3, #84]	@ 0x54
 800c5ba:	687b      	ldr	r3, [r7, #4]
 800c5bc:	2201      	movs	r2, #1
 800c5be:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c5c2:	2301      	movs	r3, #1
 800c5c4:	e016      	b.n	800c5f4 <HAL_DMA_Init+0x150>
 800c5c6:	687b      	ldr	r3, [r7, #4]
 800c5c8:	681b      	ldr	r3, [r3, #0]
 800c5ca:	697a      	ldr	r2, [r7, #20]
 800c5cc:	615a      	str	r2, [r3, #20]
 800c5ce:	6878      	ldr	r0, [r7, #4]
 800c5d0:	f000 fac4 	bl	800cb5c <DMA_CalcBaseAndBitshift>
 800c5d4:	4603      	mov	r3, r0
 800c5d6:	60fb      	str	r3, [r7, #12]
 800c5d8:	687b      	ldr	r3, [r7, #4]
 800c5da:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c5dc:	223f      	movs	r2, #63	@ 0x3f
 800c5de:	409a      	lsls	r2, r3
 800c5e0:	68fb      	ldr	r3, [r7, #12]
 800c5e2:	609a      	str	r2, [r3, #8]
 800c5e4:	687b      	ldr	r3, [r7, #4]
 800c5e6:	2200      	movs	r2, #0
 800c5e8:	655a      	str	r2, [r3, #84]	@ 0x54
 800c5ea:	687b      	ldr	r3, [r7, #4]
 800c5ec:	2201      	movs	r2, #1
 800c5ee:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c5f2:	2300      	movs	r3, #0
 800c5f4:	4618      	mov	r0, r3
 800c5f6:	3718      	adds	r7, #24
 800c5f8:	46bd      	mov	sp, r7
 800c5fa:	bd80      	pop	{r7, pc}
 800c5fc:	f010803f 	.word	0xf010803f

0800c600 <HAL_DMA_Start_IT>:
 800c600:	b580      	push	{r7, lr}
 800c602:	b086      	sub	sp, #24
 800c604:	af00      	add	r7, sp, #0
 800c606:	60f8      	str	r0, [r7, #12]
 800c608:	60b9      	str	r1, [r7, #8]
 800c60a:	607a      	str	r2, [r7, #4]
 800c60c:	603b      	str	r3, [r7, #0]
 800c60e:	2300      	movs	r3, #0
 800c610:	75fb      	strb	r3, [r7, #23]
 800c612:	68fb      	ldr	r3, [r7, #12]
 800c614:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c616:	613b      	str	r3, [r7, #16]
 800c618:	68fb      	ldr	r3, [r7, #12]
 800c61a:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800c61e:	2b01      	cmp	r3, #1
 800c620:	d101      	bne.n	800c626 <HAL_DMA_Start_IT+0x26>
 800c622:	2302      	movs	r3, #2
 800c624:	e040      	b.n	800c6a8 <HAL_DMA_Start_IT+0xa8>
 800c626:	68fb      	ldr	r3, [r7, #12]
 800c628:	2201      	movs	r2, #1
 800c62a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c62e:	68fb      	ldr	r3, [r7, #12]
 800c630:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c634:	b2db      	uxtb	r3, r3
 800c636:	2b01      	cmp	r3, #1
 800c638:	d12f      	bne.n	800c69a <HAL_DMA_Start_IT+0x9a>
 800c63a:	68fb      	ldr	r3, [r7, #12]
 800c63c:	2202      	movs	r2, #2
 800c63e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c642:	68fb      	ldr	r3, [r7, #12]
 800c644:	2200      	movs	r2, #0
 800c646:	655a      	str	r2, [r3, #84]	@ 0x54
 800c648:	683b      	ldr	r3, [r7, #0]
 800c64a:	687a      	ldr	r2, [r7, #4]
 800c64c:	68b9      	ldr	r1, [r7, #8]
 800c64e:	68f8      	ldr	r0, [r7, #12]
 800c650:	f000 fa56 	bl	800cb00 <DMA_SetConfig>
 800c654:	68fb      	ldr	r3, [r7, #12]
 800c656:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c658:	223f      	movs	r2, #63	@ 0x3f
 800c65a:	409a      	lsls	r2, r3
 800c65c:	693b      	ldr	r3, [r7, #16]
 800c65e:	609a      	str	r2, [r3, #8]
 800c660:	68fb      	ldr	r3, [r7, #12]
 800c662:	681b      	ldr	r3, [r3, #0]
 800c664:	681a      	ldr	r2, [r3, #0]
 800c666:	68fb      	ldr	r3, [r7, #12]
 800c668:	681b      	ldr	r3, [r3, #0]
 800c66a:	f042 0216 	orr.w	r2, r2, #22
 800c66e:	601a      	str	r2, [r3, #0]
 800c670:	68fb      	ldr	r3, [r7, #12]
 800c672:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c674:	2b00      	cmp	r3, #0
 800c676:	d007      	beq.n	800c688 <HAL_DMA_Start_IT+0x88>
 800c678:	68fb      	ldr	r3, [r7, #12]
 800c67a:	681b      	ldr	r3, [r3, #0]
 800c67c:	681a      	ldr	r2, [r3, #0]
 800c67e:	68fb      	ldr	r3, [r7, #12]
 800c680:	681b      	ldr	r3, [r3, #0]
 800c682:	f042 0208 	orr.w	r2, r2, #8
 800c686:	601a      	str	r2, [r3, #0]
 800c688:	68fb      	ldr	r3, [r7, #12]
 800c68a:	681b      	ldr	r3, [r3, #0]
 800c68c:	681a      	ldr	r2, [r3, #0]
 800c68e:	68fb      	ldr	r3, [r7, #12]
 800c690:	681b      	ldr	r3, [r3, #0]
 800c692:	f042 0201 	orr.w	r2, r2, #1
 800c696:	601a      	str	r2, [r3, #0]
 800c698:	e005      	b.n	800c6a6 <HAL_DMA_Start_IT+0xa6>
 800c69a:	68fb      	ldr	r3, [r7, #12]
 800c69c:	2200      	movs	r2, #0
 800c69e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c6a2:	2302      	movs	r3, #2
 800c6a4:	75fb      	strb	r3, [r7, #23]
 800c6a6:	7dfb      	ldrb	r3, [r7, #23]
 800c6a8:	4618      	mov	r0, r3
 800c6aa:	3718      	adds	r7, #24
 800c6ac:	46bd      	mov	sp, r7
 800c6ae:	bd80      	pop	{r7, pc}

0800c6b0 <HAL_DMA_Abort>:
 800c6b0:	b580      	push	{r7, lr}
 800c6b2:	b084      	sub	sp, #16
 800c6b4:	af00      	add	r7, sp, #0
 800c6b6:	6078      	str	r0, [r7, #4]
 800c6b8:	687b      	ldr	r3, [r7, #4]
 800c6ba:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c6bc:	60fb      	str	r3, [r7, #12]
 800c6be:	f7fe fccb 	bl	800b058 <HAL_GetTick>
 800c6c2:	60b8      	str	r0, [r7, #8]
 800c6c4:	687b      	ldr	r3, [r7, #4]
 800c6c6:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c6ca:	b2db      	uxtb	r3, r3
 800c6cc:	2b02      	cmp	r3, #2
 800c6ce:	d008      	beq.n	800c6e2 <HAL_DMA_Abort+0x32>
 800c6d0:	687b      	ldr	r3, [r7, #4]
 800c6d2:	2280      	movs	r2, #128	@ 0x80
 800c6d4:	655a      	str	r2, [r3, #84]	@ 0x54
 800c6d6:	687b      	ldr	r3, [r7, #4]
 800c6d8:	2200      	movs	r2, #0
 800c6da:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c6de:	2301      	movs	r3, #1
 800c6e0:	e052      	b.n	800c788 <HAL_DMA_Abort+0xd8>
 800c6e2:	687b      	ldr	r3, [r7, #4]
 800c6e4:	681b      	ldr	r3, [r3, #0]
 800c6e6:	681a      	ldr	r2, [r3, #0]
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	681b      	ldr	r3, [r3, #0]
 800c6ec:	f022 0216 	bic.w	r2, r2, #22
 800c6f0:	601a      	str	r2, [r3, #0]
 800c6f2:	687b      	ldr	r3, [r7, #4]
 800c6f4:	681b      	ldr	r3, [r3, #0]
 800c6f6:	695a      	ldr	r2, [r3, #20]
 800c6f8:	687b      	ldr	r3, [r7, #4]
 800c6fa:	681b      	ldr	r3, [r3, #0]
 800c6fc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800c700:	615a      	str	r2, [r3, #20]
 800c702:	687b      	ldr	r3, [r7, #4]
 800c704:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c706:	2b00      	cmp	r3, #0
 800c708:	d103      	bne.n	800c712 <HAL_DMA_Abort+0x62>
 800c70a:	687b      	ldr	r3, [r7, #4]
 800c70c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c70e:	2b00      	cmp	r3, #0
 800c710:	d007      	beq.n	800c722 <HAL_DMA_Abort+0x72>
 800c712:	687b      	ldr	r3, [r7, #4]
 800c714:	681b      	ldr	r3, [r3, #0]
 800c716:	681a      	ldr	r2, [r3, #0]
 800c718:	687b      	ldr	r3, [r7, #4]
 800c71a:	681b      	ldr	r3, [r3, #0]
 800c71c:	f022 0208 	bic.w	r2, r2, #8
 800c720:	601a      	str	r2, [r3, #0]
 800c722:	687b      	ldr	r3, [r7, #4]
 800c724:	681b      	ldr	r3, [r3, #0]
 800c726:	681a      	ldr	r2, [r3, #0]
 800c728:	687b      	ldr	r3, [r7, #4]
 800c72a:	681b      	ldr	r3, [r3, #0]
 800c72c:	f022 0201 	bic.w	r2, r2, #1
 800c730:	601a      	str	r2, [r3, #0]
 800c732:	e013      	b.n	800c75c <HAL_DMA_Abort+0xac>
 800c734:	f7fe fc90 	bl	800b058 <HAL_GetTick>
 800c738:	4602      	mov	r2, r0
 800c73a:	68bb      	ldr	r3, [r7, #8]
 800c73c:	1ad3      	subs	r3, r2, r3
 800c73e:	2b05      	cmp	r3, #5
 800c740:	d90c      	bls.n	800c75c <HAL_DMA_Abort+0xac>
 800c742:	687b      	ldr	r3, [r7, #4]
 800c744:	2220      	movs	r2, #32
 800c746:	655a      	str	r2, [r3, #84]	@ 0x54
 800c748:	687b      	ldr	r3, [r7, #4]
 800c74a:	2203      	movs	r2, #3
 800c74c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c750:	687b      	ldr	r3, [r7, #4]
 800c752:	2200      	movs	r2, #0
 800c754:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c758:	2303      	movs	r3, #3
 800c75a:	e015      	b.n	800c788 <HAL_DMA_Abort+0xd8>
 800c75c:	687b      	ldr	r3, [r7, #4]
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	681b      	ldr	r3, [r3, #0]
 800c762:	f003 0301 	and.w	r3, r3, #1
 800c766:	2b00      	cmp	r3, #0
 800c768:	d1e4      	bne.n	800c734 <HAL_DMA_Abort+0x84>
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c76e:	223f      	movs	r2, #63	@ 0x3f
 800c770:	409a      	lsls	r2, r3
 800c772:	68fb      	ldr	r3, [r7, #12]
 800c774:	609a      	str	r2, [r3, #8]
 800c776:	687b      	ldr	r3, [r7, #4]
 800c778:	2201      	movs	r2, #1
 800c77a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c77e:	687b      	ldr	r3, [r7, #4]
 800c780:	2200      	movs	r2, #0
 800c782:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c786:	2300      	movs	r3, #0
 800c788:	4618      	mov	r0, r3
 800c78a:	3710      	adds	r7, #16
 800c78c:	46bd      	mov	sp, r7
 800c78e:	bd80      	pop	{r7, pc}

0800c790 <HAL_DMA_Abort_IT>:
 800c790:	b480      	push	{r7}
 800c792:	b083      	sub	sp, #12
 800c794:	af00      	add	r7, sp, #0
 800c796:	6078      	str	r0, [r7, #4]
 800c798:	687b      	ldr	r3, [r7, #4]
 800c79a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c79e:	b2db      	uxtb	r3, r3
 800c7a0:	2b02      	cmp	r3, #2
 800c7a2:	d004      	beq.n	800c7ae <HAL_DMA_Abort_IT+0x1e>
 800c7a4:	687b      	ldr	r3, [r7, #4]
 800c7a6:	2280      	movs	r2, #128	@ 0x80
 800c7a8:	655a      	str	r2, [r3, #84]	@ 0x54
 800c7aa:	2301      	movs	r3, #1
 800c7ac:	e00c      	b.n	800c7c8 <HAL_DMA_Abort_IT+0x38>
 800c7ae:	687b      	ldr	r3, [r7, #4]
 800c7b0:	2205      	movs	r2, #5
 800c7b2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c7b6:	687b      	ldr	r3, [r7, #4]
 800c7b8:	681b      	ldr	r3, [r3, #0]
 800c7ba:	681a      	ldr	r2, [r3, #0]
 800c7bc:	687b      	ldr	r3, [r7, #4]
 800c7be:	681b      	ldr	r3, [r3, #0]
 800c7c0:	f022 0201 	bic.w	r2, r2, #1
 800c7c4:	601a      	str	r2, [r3, #0]
 800c7c6:	2300      	movs	r3, #0
 800c7c8:	4618      	mov	r0, r3
 800c7ca:	370c      	adds	r7, #12
 800c7cc:	46bd      	mov	sp, r7
 800c7ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7d2:	4770      	bx	lr

0800c7d4 <HAL_DMA_IRQHandler>:
 800c7d4:	b580      	push	{r7, lr}
 800c7d6:	b086      	sub	sp, #24
 800c7d8:	af00      	add	r7, sp, #0
 800c7da:	6078      	str	r0, [r7, #4]
 800c7dc:	2300      	movs	r3, #0
 800c7de:	60bb      	str	r3, [r7, #8]
 800c7e0:	4b8e      	ldr	r3, [pc, #568]	@ (800ca1c <HAL_DMA_IRQHandler+0x248>)
 800c7e2:	681b      	ldr	r3, [r3, #0]
 800c7e4:	4a8e      	ldr	r2, [pc, #568]	@ (800ca20 <HAL_DMA_IRQHandler+0x24c>)
 800c7e6:	fba2 2303 	umull	r2, r3, r2, r3
 800c7ea:	0a9b      	lsrs	r3, r3, #10
 800c7ec:	617b      	str	r3, [r7, #20]
 800c7ee:	687b      	ldr	r3, [r7, #4]
 800c7f0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800c7f2:	613b      	str	r3, [r7, #16]
 800c7f4:	693b      	ldr	r3, [r7, #16]
 800c7f6:	681b      	ldr	r3, [r3, #0]
 800c7f8:	60fb      	str	r3, [r7, #12]
 800c7fa:	687b      	ldr	r3, [r7, #4]
 800c7fc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c7fe:	2208      	movs	r2, #8
 800c800:	409a      	lsls	r2, r3
 800c802:	68fb      	ldr	r3, [r7, #12]
 800c804:	4013      	ands	r3, r2
 800c806:	2b00      	cmp	r3, #0
 800c808:	d01a      	beq.n	800c840 <HAL_DMA_IRQHandler+0x6c>
 800c80a:	687b      	ldr	r3, [r7, #4]
 800c80c:	681b      	ldr	r3, [r3, #0]
 800c80e:	681b      	ldr	r3, [r3, #0]
 800c810:	f003 0304 	and.w	r3, r3, #4
 800c814:	2b00      	cmp	r3, #0
 800c816:	d013      	beq.n	800c840 <HAL_DMA_IRQHandler+0x6c>
 800c818:	687b      	ldr	r3, [r7, #4]
 800c81a:	681b      	ldr	r3, [r3, #0]
 800c81c:	681a      	ldr	r2, [r3, #0]
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	681b      	ldr	r3, [r3, #0]
 800c822:	f022 0204 	bic.w	r2, r2, #4
 800c826:	601a      	str	r2, [r3, #0]
 800c828:	687b      	ldr	r3, [r7, #4]
 800c82a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c82c:	2208      	movs	r2, #8
 800c82e:	409a      	lsls	r2, r3
 800c830:	693b      	ldr	r3, [r7, #16]
 800c832:	609a      	str	r2, [r3, #8]
 800c834:	687b      	ldr	r3, [r7, #4]
 800c836:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c838:	f043 0201 	orr.w	r2, r3, #1
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	655a      	str	r2, [r3, #84]	@ 0x54
 800c840:	687b      	ldr	r3, [r7, #4]
 800c842:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c844:	2201      	movs	r2, #1
 800c846:	409a      	lsls	r2, r3
 800c848:	68fb      	ldr	r3, [r7, #12]
 800c84a:	4013      	ands	r3, r2
 800c84c:	2b00      	cmp	r3, #0
 800c84e:	d012      	beq.n	800c876 <HAL_DMA_IRQHandler+0xa2>
 800c850:	687b      	ldr	r3, [r7, #4]
 800c852:	681b      	ldr	r3, [r3, #0]
 800c854:	695b      	ldr	r3, [r3, #20]
 800c856:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800c85a:	2b00      	cmp	r3, #0
 800c85c:	d00b      	beq.n	800c876 <HAL_DMA_IRQHandler+0xa2>
 800c85e:	687b      	ldr	r3, [r7, #4]
 800c860:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c862:	2201      	movs	r2, #1
 800c864:	409a      	lsls	r2, r3
 800c866:	693b      	ldr	r3, [r7, #16]
 800c868:	609a      	str	r2, [r3, #8]
 800c86a:	687b      	ldr	r3, [r7, #4]
 800c86c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c86e:	f043 0202 	orr.w	r2, r3, #2
 800c872:	687b      	ldr	r3, [r7, #4]
 800c874:	655a      	str	r2, [r3, #84]	@ 0x54
 800c876:	687b      	ldr	r3, [r7, #4]
 800c878:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c87a:	2204      	movs	r2, #4
 800c87c:	409a      	lsls	r2, r3
 800c87e:	68fb      	ldr	r3, [r7, #12]
 800c880:	4013      	ands	r3, r2
 800c882:	2b00      	cmp	r3, #0
 800c884:	d012      	beq.n	800c8ac <HAL_DMA_IRQHandler+0xd8>
 800c886:	687b      	ldr	r3, [r7, #4]
 800c888:	681b      	ldr	r3, [r3, #0]
 800c88a:	681b      	ldr	r3, [r3, #0]
 800c88c:	f003 0302 	and.w	r3, r3, #2
 800c890:	2b00      	cmp	r3, #0
 800c892:	d00b      	beq.n	800c8ac <HAL_DMA_IRQHandler+0xd8>
 800c894:	687b      	ldr	r3, [r7, #4]
 800c896:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c898:	2204      	movs	r2, #4
 800c89a:	409a      	lsls	r2, r3
 800c89c:	693b      	ldr	r3, [r7, #16]
 800c89e:	609a      	str	r2, [r3, #8]
 800c8a0:	687b      	ldr	r3, [r7, #4]
 800c8a2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800c8a4:	f043 0204 	orr.w	r2, r3, #4
 800c8a8:	687b      	ldr	r3, [r7, #4]
 800c8aa:	655a      	str	r2, [r3, #84]	@ 0x54
 800c8ac:	687b      	ldr	r3, [r7, #4]
 800c8ae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c8b0:	2210      	movs	r2, #16
 800c8b2:	409a      	lsls	r2, r3
 800c8b4:	68fb      	ldr	r3, [r7, #12]
 800c8b6:	4013      	ands	r3, r2
 800c8b8:	2b00      	cmp	r3, #0
 800c8ba:	d043      	beq.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c8bc:	687b      	ldr	r3, [r7, #4]
 800c8be:	681b      	ldr	r3, [r3, #0]
 800c8c0:	681b      	ldr	r3, [r3, #0]
 800c8c2:	f003 0308 	and.w	r3, r3, #8
 800c8c6:	2b00      	cmp	r3, #0
 800c8c8:	d03c      	beq.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c8ca:	687b      	ldr	r3, [r7, #4]
 800c8cc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c8ce:	2210      	movs	r2, #16
 800c8d0:	409a      	lsls	r2, r3
 800c8d2:	693b      	ldr	r3, [r7, #16]
 800c8d4:	609a      	str	r2, [r3, #8]
 800c8d6:	687b      	ldr	r3, [r7, #4]
 800c8d8:	681b      	ldr	r3, [r3, #0]
 800c8da:	681b      	ldr	r3, [r3, #0]
 800c8dc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800c8e0:	2b00      	cmp	r3, #0
 800c8e2:	d018      	beq.n	800c916 <HAL_DMA_IRQHandler+0x142>
 800c8e4:	687b      	ldr	r3, [r7, #4]
 800c8e6:	681b      	ldr	r3, [r3, #0]
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800c8ee:	2b00      	cmp	r3, #0
 800c8f0:	d108      	bne.n	800c904 <HAL_DMA_IRQHandler+0x130>
 800c8f2:	687b      	ldr	r3, [r7, #4]
 800c8f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c8f6:	2b00      	cmp	r3, #0
 800c8f8:	d024      	beq.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c8fa:	687b      	ldr	r3, [r7, #4]
 800c8fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c8fe:	6878      	ldr	r0, [r7, #4]
 800c900:	4798      	blx	r3
 800c902:	e01f      	b.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c904:	687b      	ldr	r3, [r7, #4]
 800c906:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c908:	2b00      	cmp	r3, #0
 800c90a:	d01b      	beq.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c90c:	687b      	ldr	r3, [r7, #4]
 800c90e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c910:	6878      	ldr	r0, [r7, #4]
 800c912:	4798      	blx	r3
 800c914:	e016      	b.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c916:	687b      	ldr	r3, [r7, #4]
 800c918:	681b      	ldr	r3, [r3, #0]
 800c91a:	681b      	ldr	r3, [r3, #0]
 800c91c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800c920:	2b00      	cmp	r3, #0
 800c922:	d107      	bne.n	800c934 <HAL_DMA_IRQHandler+0x160>
 800c924:	687b      	ldr	r3, [r7, #4]
 800c926:	681b      	ldr	r3, [r3, #0]
 800c928:	681a      	ldr	r2, [r3, #0]
 800c92a:	687b      	ldr	r3, [r7, #4]
 800c92c:	681b      	ldr	r3, [r3, #0]
 800c92e:	f022 0208 	bic.w	r2, r2, #8
 800c932:	601a      	str	r2, [r3, #0]
 800c934:	687b      	ldr	r3, [r7, #4]
 800c936:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c938:	2b00      	cmp	r3, #0
 800c93a:	d003      	beq.n	800c944 <HAL_DMA_IRQHandler+0x170>
 800c93c:	687b      	ldr	r3, [r7, #4]
 800c93e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c940:	6878      	ldr	r0, [r7, #4]
 800c942:	4798      	blx	r3
 800c944:	687b      	ldr	r3, [r7, #4]
 800c946:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c948:	2220      	movs	r2, #32
 800c94a:	409a      	lsls	r2, r3
 800c94c:	68fb      	ldr	r3, [r7, #12]
 800c94e:	4013      	ands	r3, r2
 800c950:	2b00      	cmp	r3, #0
 800c952:	f000 808f 	beq.w	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800c956:	687b      	ldr	r3, [r7, #4]
 800c958:	681b      	ldr	r3, [r3, #0]
 800c95a:	681b      	ldr	r3, [r3, #0]
 800c95c:	f003 0310 	and.w	r3, r3, #16
 800c960:	2b00      	cmp	r3, #0
 800c962:	f000 8087 	beq.w	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800c966:	687b      	ldr	r3, [r7, #4]
 800c968:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c96a:	2220      	movs	r2, #32
 800c96c:	409a      	lsls	r2, r3
 800c96e:	693b      	ldr	r3, [r7, #16]
 800c970:	609a      	str	r2, [r3, #8]
 800c972:	687b      	ldr	r3, [r7, #4]
 800c974:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800c978:	b2db      	uxtb	r3, r3
 800c97a:	2b05      	cmp	r3, #5
 800c97c:	d136      	bne.n	800c9ec <HAL_DMA_IRQHandler+0x218>
 800c97e:	687b      	ldr	r3, [r7, #4]
 800c980:	681b      	ldr	r3, [r3, #0]
 800c982:	681a      	ldr	r2, [r3, #0]
 800c984:	687b      	ldr	r3, [r7, #4]
 800c986:	681b      	ldr	r3, [r3, #0]
 800c988:	f022 0216 	bic.w	r2, r2, #22
 800c98c:	601a      	str	r2, [r3, #0]
 800c98e:	687b      	ldr	r3, [r7, #4]
 800c990:	681b      	ldr	r3, [r3, #0]
 800c992:	695a      	ldr	r2, [r3, #20]
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	681b      	ldr	r3, [r3, #0]
 800c998:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800c99c:	615a      	str	r2, [r3, #20]
 800c99e:	687b      	ldr	r3, [r7, #4]
 800c9a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	d103      	bne.n	800c9ae <HAL_DMA_IRQHandler+0x1da>
 800c9a6:	687b      	ldr	r3, [r7, #4]
 800c9a8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800c9aa:	2b00      	cmp	r3, #0
 800c9ac:	d007      	beq.n	800c9be <HAL_DMA_IRQHandler+0x1ea>
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	681b      	ldr	r3, [r3, #0]
 800c9b2:	681a      	ldr	r2, [r3, #0]
 800c9b4:	687b      	ldr	r3, [r7, #4]
 800c9b6:	681b      	ldr	r3, [r3, #0]
 800c9b8:	f022 0208 	bic.w	r2, r2, #8
 800c9bc:	601a      	str	r2, [r3, #0]
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800c9c2:	223f      	movs	r2, #63	@ 0x3f
 800c9c4:	409a      	lsls	r2, r3
 800c9c6:	693b      	ldr	r3, [r7, #16]
 800c9c8:	609a      	str	r2, [r3, #8]
 800c9ca:	687b      	ldr	r3, [r7, #4]
 800c9cc:	2201      	movs	r2, #1
 800c9ce:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800c9d2:	687b      	ldr	r3, [r7, #4]
 800c9d4:	2200      	movs	r2, #0
 800c9d6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800c9da:	687b      	ldr	r3, [r7, #4]
 800c9dc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c9de:	2b00      	cmp	r3, #0
 800c9e0:	d07e      	beq.n	800cae0 <HAL_DMA_IRQHandler+0x30c>
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800c9e6:	6878      	ldr	r0, [r7, #4]
 800c9e8:	4798      	blx	r3
 800c9ea:	e079      	b.n	800cae0 <HAL_DMA_IRQHandler+0x30c>
 800c9ec:	687b      	ldr	r3, [r7, #4]
 800c9ee:	681b      	ldr	r3, [r3, #0]
 800c9f0:	681b      	ldr	r3, [r3, #0]
 800c9f2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800c9f6:	2b00      	cmp	r3, #0
 800c9f8:	d01d      	beq.n	800ca36 <HAL_DMA_IRQHandler+0x262>
 800c9fa:	687b      	ldr	r3, [r7, #4]
 800c9fc:	681b      	ldr	r3, [r3, #0]
 800c9fe:	681b      	ldr	r3, [r3, #0]
 800ca00:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800ca04:	2b00      	cmp	r3, #0
 800ca06:	d10d      	bne.n	800ca24 <HAL_DMA_IRQHandler+0x250>
 800ca08:	687b      	ldr	r3, [r7, #4]
 800ca0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	d031      	beq.n	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800ca10:	687b      	ldr	r3, [r7, #4]
 800ca12:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ca14:	6878      	ldr	r0, [r7, #4]
 800ca16:	4798      	blx	r3
 800ca18:	e02c      	b.n	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800ca1a:	bf00      	nop
 800ca1c:	20000004 	.word	0x20000004
 800ca20:	1b4e81b5 	.word	0x1b4e81b5
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ca28:	2b00      	cmp	r3, #0
 800ca2a:	d023      	beq.n	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800ca2c:	687b      	ldr	r3, [r7, #4]
 800ca2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ca30:	6878      	ldr	r0, [r7, #4]
 800ca32:	4798      	blx	r3
 800ca34:	e01e      	b.n	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800ca36:	687b      	ldr	r3, [r7, #4]
 800ca38:	681b      	ldr	r3, [r3, #0]
 800ca3a:	681b      	ldr	r3, [r3, #0]
 800ca3c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ca40:	2b00      	cmp	r3, #0
 800ca42:	d10f      	bne.n	800ca64 <HAL_DMA_IRQHandler+0x290>
 800ca44:	687b      	ldr	r3, [r7, #4]
 800ca46:	681b      	ldr	r3, [r3, #0]
 800ca48:	681a      	ldr	r2, [r3, #0]
 800ca4a:	687b      	ldr	r3, [r7, #4]
 800ca4c:	681b      	ldr	r3, [r3, #0]
 800ca4e:	f022 0210 	bic.w	r2, r2, #16
 800ca52:	601a      	str	r2, [r3, #0]
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	2201      	movs	r2, #1
 800ca58:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800ca5c:	687b      	ldr	r3, [r7, #4]
 800ca5e:	2200      	movs	r2, #0
 800ca60:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800ca64:	687b      	ldr	r3, [r7, #4]
 800ca66:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ca68:	2b00      	cmp	r3, #0
 800ca6a:	d003      	beq.n	800ca74 <HAL_DMA_IRQHandler+0x2a0>
 800ca6c:	687b      	ldr	r3, [r7, #4]
 800ca6e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ca70:	6878      	ldr	r0, [r7, #4]
 800ca72:	4798      	blx	r3
 800ca74:	687b      	ldr	r3, [r7, #4]
 800ca76:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ca78:	2b00      	cmp	r3, #0
 800ca7a:	d032      	beq.n	800cae2 <HAL_DMA_IRQHandler+0x30e>
 800ca7c:	687b      	ldr	r3, [r7, #4]
 800ca7e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800ca80:	f003 0301 	and.w	r3, r3, #1
 800ca84:	2b00      	cmp	r3, #0
 800ca86:	d022      	beq.n	800cace <HAL_DMA_IRQHandler+0x2fa>
 800ca88:	687b      	ldr	r3, [r7, #4]
 800ca8a:	2205      	movs	r2, #5
 800ca8c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800ca90:	687b      	ldr	r3, [r7, #4]
 800ca92:	681b      	ldr	r3, [r3, #0]
 800ca94:	681a      	ldr	r2, [r3, #0]
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	f022 0201 	bic.w	r2, r2, #1
 800ca9e:	601a      	str	r2, [r3, #0]
 800caa0:	68bb      	ldr	r3, [r7, #8]
 800caa2:	3301      	adds	r3, #1
 800caa4:	60bb      	str	r3, [r7, #8]
 800caa6:	697a      	ldr	r2, [r7, #20]
 800caa8:	429a      	cmp	r2, r3
 800caaa:	d307      	bcc.n	800cabc <HAL_DMA_IRQHandler+0x2e8>
 800caac:	687b      	ldr	r3, [r7, #4]
 800caae:	681b      	ldr	r3, [r3, #0]
 800cab0:	681b      	ldr	r3, [r3, #0]
 800cab2:	f003 0301 	and.w	r3, r3, #1
 800cab6:	2b00      	cmp	r3, #0
 800cab8:	d1f2      	bne.n	800caa0 <HAL_DMA_IRQHandler+0x2cc>
 800caba:	e000      	b.n	800cabe <HAL_DMA_IRQHandler+0x2ea>
 800cabc:	bf00      	nop
 800cabe:	687b      	ldr	r3, [r7, #4]
 800cac0:	2201      	movs	r2, #1
 800cac2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800cac6:	687b      	ldr	r3, [r7, #4]
 800cac8:	2200      	movs	r2, #0
 800caca:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800cace:	687b      	ldr	r3, [r7, #4]
 800cad0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cad2:	2b00      	cmp	r3, #0
 800cad4:	d005      	beq.n	800cae2 <HAL_DMA_IRQHandler+0x30e>
 800cad6:	687b      	ldr	r3, [r7, #4]
 800cad8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cada:	6878      	ldr	r0, [r7, #4]
 800cadc:	4798      	blx	r3
 800cade:	e000      	b.n	800cae2 <HAL_DMA_IRQHandler+0x30e>
 800cae0:	bf00      	nop
 800cae2:	3718      	adds	r7, #24
 800cae4:	46bd      	mov	sp, r7
 800cae6:	bd80      	pop	{r7, pc}

0800cae8 <HAL_DMA_GetError>:
 800cae8:	b480      	push	{r7}
 800caea:	b083      	sub	sp, #12
 800caec:	af00      	add	r7, sp, #0
 800caee:	6078      	str	r0, [r7, #4]
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800caf4:	4618      	mov	r0, r3
 800caf6:	370c      	adds	r7, #12
 800caf8:	46bd      	mov	sp, r7
 800cafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cafe:	4770      	bx	lr

0800cb00 <DMA_SetConfig>:
 800cb00:	b480      	push	{r7}
 800cb02:	b085      	sub	sp, #20
 800cb04:	af00      	add	r7, sp, #0
 800cb06:	60f8      	str	r0, [r7, #12]
 800cb08:	60b9      	str	r1, [r7, #8]
 800cb0a:	607a      	str	r2, [r7, #4]
 800cb0c:	603b      	str	r3, [r7, #0]
 800cb0e:	68fb      	ldr	r3, [r7, #12]
 800cb10:	681b      	ldr	r3, [r3, #0]
 800cb12:	681a      	ldr	r2, [r3, #0]
 800cb14:	68fb      	ldr	r3, [r7, #12]
 800cb16:	681b      	ldr	r3, [r3, #0]
 800cb18:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800cb1c:	601a      	str	r2, [r3, #0]
 800cb1e:	68fb      	ldr	r3, [r7, #12]
 800cb20:	681b      	ldr	r3, [r3, #0]
 800cb22:	683a      	ldr	r2, [r7, #0]
 800cb24:	605a      	str	r2, [r3, #4]
 800cb26:	68fb      	ldr	r3, [r7, #12]
 800cb28:	689b      	ldr	r3, [r3, #8]
 800cb2a:	2b40      	cmp	r3, #64	@ 0x40
 800cb2c:	d108      	bne.n	800cb40 <DMA_SetConfig+0x40>
 800cb2e:	68fb      	ldr	r3, [r7, #12]
 800cb30:	681b      	ldr	r3, [r3, #0]
 800cb32:	687a      	ldr	r2, [r7, #4]
 800cb34:	609a      	str	r2, [r3, #8]
 800cb36:	68fb      	ldr	r3, [r7, #12]
 800cb38:	681b      	ldr	r3, [r3, #0]
 800cb3a:	68ba      	ldr	r2, [r7, #8]
 800cb3c:	60da      	str	r2, [r3, #12]
 800cb3e:	e007      	b.n	800cb50 <DMA_SetConfig+0x50>
 800cb40:	68fb      	ldr	r3, [r7, #12]
 800cb42:	681b      	ldr	r3, [r3, #0]
 800cb44:	68ba      	ldr	r2, [r7, #8]
 800cb46:	609a      	str	r2, [r3, #8]
 800cb48:	68fb      	ldr	r3, [r7, #12]
 800cb4a:	681b      	ldr	r3, [r3, #0]
 800cb4c:	687a      	ldr	r2, [r7, #4]
 800cb4e:	60da      	str	r2, [r3, #12]
 800cb50:	bf00      	nop
 800cb52:	3714      	adds	r7, #20
 800cb54:	46bd      	mov	sp, r7
 800cb56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb5a:	4770      	bx	lr

0800cb5c <DMA_CalcBaseAndBitshift>:
 800cb5c:	b480      	push	{r7}
 800cb5e:	b085      	sub	sp, #20
 800cb60:	af00      	add	r7, sp, #0
 800cb62:	6078      	str	r0, [r7, #4]
 800cb64:	687b      	ldr	r3, [r7, #4]
 800cb66:	681b      	ldr	r3, [r3, #0]
 800cb68:	b2db      	uxtb	r3, r3
 800cb6a:	3b10      	subs	r3, #16
 800cb6c:	4a14      	ldr	r2, [pc, #80]	@ (800cbc0 <DMA_CalcBaseAndBitshift+0x64>)
 800cb6e:	fba2 2303 	umull	r2, r3, r2, r3
 800cb72:	091b      	lsrs	r3, r3, #4
 800cb74:	60fb      	str	r3, [r7, #12]
 800cb76:	4a13      	ldr	r2, [pc, #76]	@ (800cbc4 <DMA_CalcBaseAndBitshift+0x68>)
 800cb78:	68fb      	ldr	r3, [r7, #12]
 800cb7a:	4413      	add	r3, r2
 800cb7c:	781b      	ldrb	r3, [r3, #0]
 800cb7e:	461a      	mov	r2, r3
 800cb80:	687b      	ldr	r3, [r7, #4]
 800cb82:	65da      	str	r2, [r3, #92]	@ 0x5c
 800cb84:	68fb      	ldr	r3, [r7, #12]
 800cb86:	2b03      	cmp	r3, #3
 800cb88:	d909      	bls.n	800cb9e <DMA_CalcBaseAndBitshift+0x42>
 800cb8a:	687b      	ldr	r3, [r7, #4]
 800cb8c:	681b      	ldr	r3, [r3, #0]
 800cb8e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800cb92:	f023 0303 	bic.w	r3, r3, #3
 800cb96:	1d1a      	adds	r2, r3, #4
 800cb98:	687b      	ldr	r3, [r7, #4]
 800cb9a:	659a      	str	r2, [r3, #88]	@ 0x58
 800cb9c:	e007      	b.n	800cbae <DMA_CalcBaseAndBitshift+0x52>
 800cb9e:	687b      	ldr	r3, [r7, #4]
 800cba0:	681b      	ldr	r3, [r3, #0]
 800cba2:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800cba6:	f023 0303 	bic.w	r3, r3, #3
 800cbaa:	687a      	ldr	r2, [r7, #4]
 800cbac:	6593      	str	r3, [r2, #88]	@ 0x58
 800cbae:	687b      	ldr	r3, [r7, #4]
 800cbb0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800cbb2:	4618      	mov	r0, r3
 800cbb4:	3714      	adds	r7, #20
 800cbb6:	46bd      	mov	sp, r7
 800cbb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbbc:	4770      	bx	lr
 800cbbe:	bf00      	nop
 800cbc0:	aaaaaaab 	.word	0xaaaaaaab
 800cbc4:	0802162c 	.word	0x0802162c

0800cbc8 <DMA_CheckFifoParam>:
 800cbc8:	b480      	push	{r7}
 800cbca:	b085      	sub	sp, #20
 800cbcc:	af00      	add	r7, sp, #0
 800cbce:	6078      	str	r0, [r7, #4]
 800cbd0:	2300      	movs	r3, #0
 800cbd2:	73fb      	strb	r3, [r7, #15]
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800cbd8:	60bb      	str	r3, [r7, #8]
 800cbda:	687b      	ldr	r3, [r7, #4]
 800cbdc:	699b      	ldr	r3, [r3, #24]
 800cbde:	2b00      	cmp	r3, #0
 800cbe0:	d11f      	bne.n	800cc22 <DMA_CheckFifoParam+0x5a>
 800cbe2:	68bb      	ldr	r3, [r7, #8]
 800cbe4:	2b03      	cmp	r3, #3
 800cbe6:	d856      	bhi.n	800cc96 <DMA_CheckFifoParam+0xce>
 800cbe8:	a201      	add	r2, pc, #4	@ (adr r2, 800cbf0 <DMA_CheckFifoParam+0x28>)
 800cbea:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cbee:	bf00      	nop
 800cbf0:	0800cc01 	.word	0x0800cc01
 800cbf4:	0800cc13 	.word	0x0800cc13
 800cbf8:	0800cc01 	.word	0x0800cc01
 800cbfc:	0800cc97 	.word	0x0800cc97
 800cc00:	687b      	ldr	r3, [r7, #4]
 800cc02:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc04:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cc08:	2b00      	cmp	r3, #0
 800cc0a:	d046      	beq.n	800cc9a <DMA_CheckFifoParam+0xd2>
 800cc0c:	2301      	movs	r3, #1
 800cc0e:	73fb      	strb	r3, [r7, #15]
 800cc10:	e043      	b.n	800cc9a <DMA_CheckFifoParam+0xd2>
 800cc12:	687b      	ldr	r3, [r7, #4]
 800cc14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc16:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800cc1a:	d140      	bne.n	800cc9e <DMA_CheckFifoParam+0xd6>
 800cc1c:	2301      	movs	r3, #1
 800cc1e:	73fb      	strb	r3, [r7, #15]
 800cc20:	e03d      	b.n	800cc9e <DMA_CheckFifoParam+0xd6>
 800cc22:	687b      	ldr	r3, [r7, #4]
 800cc24:	699b      	ldr	r3, [r3, #24]
 800cc26:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800cc2a:	d121      	bne.n	800cc70 <DMA_CheckFifoParam+0xa8>
 800cc2c:	68bb      	ldr	r3, [r7, #8]
 800cc2e:	2b03      	cmp	r3, #3
 800cc30:	d837      	bhi.n	800cca2 <DMA_CheckFifoParam+0xda>
 800cc32:	a201      	add	r2, pc, #4	@ (adr r2, 800cc38 <DMA_CheckFifoParam+0x70>)
 800cc34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cc38:	0800cc49 	.word	0x0800cc49
 800cc3c:	0800cc4f 	.word	0x0800cc4f
 800cc40:	0800cc49 	.word	0x0800cc49
 800cc44:	0800cc61 	.word	0x0800cc61
 800cc48:	2301      	movs	r3, #1
 800cc4a:	73fb      	strb	r3, [r7, #15]
 800cc4c:	e030      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cc4e:	687b      	ldr	r3, [r7, #4]
 800cc50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc52:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cc56:	2b00      	cmp	r3, #0
 800cc58:	d025      	beq.n	800cca6 <DMA_CheckFifoParam+0xde>
 800cc5a:	2301      	movs	r3, #1
 800cc5c:	73fb      	strb	r3, [r7, #15]
 800cc5e:	e022      	b.n	800cca6 <DMA_CheckFifoParam+0xde>
 800cc60:	687b      	ldr	r3, [r7, #4]
 800cc62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc64:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800cc68:	d11f      	bne.n	800ccaa <DMA_CheckFifoParam+0xe2>
 800cc6a:	2301      	movs	r3, #1
 800cc6c:	73fb      	strb	r3, [r7, #15]
 800cc6e:	e01c      	b.n	800ccaa <DMA_CheckFifoParam+0xe2>
 800cc70:	68bb      	ldr	r3, [r7, #8]
 800cc72:	2b02      	cmp	r3, #2
 800cc74:	d903      	bls.n	800cc7e <DMA_CheckFifoParam+0xb6>
 800cc76:	68bb      	ldr	r3, [r7, #8]
 800cc78:	2b03      	cmp	r3, #3
 800cc7a:	d003      	beq.n	800cc84 <DMA_CheckFifoParam+0xbc>
 800cc7c:	e018      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cc7e:	2301      	movs	r3, #1
 800cc80:	73fb      	strb	r3, [r7, #15]
 800cc82:	e015      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cc84:	687b      	ldr	r3, [r7, #4]
 800cc86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800cc88:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800cc8c:	2b00      	cmp	r3, #0
 800cc8e:	d00e      	beq.n	800ccae <DMA_CheckFifoParam+0xe6>
 800cc90:	2301      	movs	r3, #1
 800cc92:	73fb      	strb	r3, [r7, #15]
 800cc94:	e00b      	b.n	800ccae <DMA_CheckFifoParam+0xe6>
 800cc96:	bf00      	nop
 800cc98:	e00a      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cc9a:	bf00      	nop
 800cc9c:	e008      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cc9e:	bf00      	nop
 800cca0:	e006      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cca2:	bf00      	nop
 800cca4:	e004      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800cca6:	bf00      	nop
 800cca8:	e002      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800ccaa:	bf00      	nop
 800ccac:	e000      	b.n	800ccb0 <DMA_CheckFifoParam+0xe8>
 800ccae:	bf00      	nop
 800ccb0:	7bfb      	ldrb	r3, [r7, #15]
 800ccb2:	4618      	mov	r0, r3
 800ccb4:	3714      	adds	r7, #20
 800ccb6:	46bd      	mov	sp, r7
 800ccb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccbc:	4770      	bx	lr
 800ccbe:	bf00      	nop

0800ccc0 <HAL_GPIO_Init>:
 800ccc0:	b480      	push	{r7}
 800ccc2:	b089      	sub	sp, #36	@ 0x24
 800ccc4:	af00      	add	r7, sp, #0
 800ccc6:	6078      	str	r0, [r7, #4]
 800ccc8:	6039      	str	r1, [r7, #0]
 800ccca:	2300      	movs	r3, #0
 800cccc:	617b      	str	r3, [r7, #20]
 800ccce:	2300      	movs	r3, #0
 800ccd0:	613b      	str	r3, [r7, #16]
 800ccd2:	2300      	movs	r3, #0
 800ccd4:	61bb      	str	r3, [r7, #24]
 800ccd6:	2300      	movs	r3, #0
 800ccd8:	61fb      	str	r3, [r7, #28]
 800ccda:	e16b      	b.n	800cfb4 <HAL_GPIO_Init+0x2f4>
 800ccdc:	2201      	movs	r2, #1
 800ccde:	69fb      	ldr	r3, [r7, #28]
 800cce0:	fa02 f303 	lsl.w	r3, r2, r3
 800cce4:	617b      	str	r3, [r7, #20]
 800cce6:	683b      	ldr	r3, [r7, #0]
 800cce8:	681b      	ldr	r3, [r3, #0]
 800ccea:	697a      	ldr	r2, [r7, #20]
 800ccec:	4013      	ands	r3, r2
 800ccee:	613b      	str	r3, [r7, #16]
 800ccf0:	693a      	ldr	r2, [r7, #16]
 800ccf2:	697b      	ldr	r3, [r7, #20]
 800ccf4:	429a      	cmp	r2, r3
 800ccf6:	f040 815a 	bne.w	800cfae <HAL_GPIO_Init+0x2ee>
 800ccfa:	683b      	ldr	r3, [r7, #0]
 800ccfc:	685b      	ldr	r3, [r3, #4]
 800ccfe:	f003 0303 	and.w	r3, r3, #3
 800cd02:	2b01      	cmp	r3, #1
 800cd04:	d005      	beq.n	800cd12 <HAL_GPIO_Init+0x52>
 800cd06:	683b      	ldr	r3, [r7, #0]
 800cd08:	685b      	ldr	r3, [r3, #4]
 800cd0a:	f003 0303 	and.w	r3, r3, #3
 800cd0e:	2b02      	cmp	r3, #2
 800cd10:	d130      	bne.n	800cd74 <HAL_GPIO_Init+0xb4>
 800cd12:	687b      	ldr	r3, [r7, #4]
 800cd14:	689b      	ldr	r3, [r3, #8]
 800cd16:	61bb      	str	r3, [r7, #24]
 800cd18:	69fb      	ldr	r3, [r7, #28]
 800cd1a:	005b      	lsls	r3, r3, #1
 800cd1c:	2203      	movs	r2, #3
 800cd1e:	fa02 f303 	lsl.w	r3, r2, r3
 800cd22:	43db      	mvns	r3, r3
 800cd24:	69ba      	ldr	r2, [r7, #24]
 800cd26:	4013      	ands	r3, r2
 800cd28:	61bb      	str	r3, [r7, #24]
 800cd2a:	683b      	ldr	r3, [r7, #0]
 800cd2c:	68da      	ldr	r2, [r3, #12]
 800cd2e:	69fb      	ldr	r3, [r7, #28]
 800cd30:	005b      	lsls	r3, r3, #1
 800cd32:	fa02 f303 	lsl.w	r3, r2, r3
 800cd36:	69ba      	ldr	r2, [r7, #24]
 800cd38:	4313      	orrs	r3, r2
 800cd3a:	61bb      	str	r3, [r7, #24]
 800cd3c:	687b      	ldr	r3, [r7, #4]
 800cd3e:	69ba      	ldr	r2, [r7, #24]
 800cd40:	609a      	str	r2, [r3, #8]
 800cd42:	687b      	ldr	r3, [r7, #4]
 800cd44:	685b      	ldr	r3, [r3, #4]
 800cd46:	61bb      	str	r3, [r7, #24]
 800cd48:	2201      	movs	r2, #1
 800cd4a:	69fb      	ldr	r3, [r7, #28]
 800cd4c:	fa02 f303 	lsl.w	r3, r2, r3
 800cd50:	43db      	mvns	r3, r3
 800cd52:	69ba      	ldr	r2, [r7, #24]
 800cd54:	4013      	ands	r3, r2
 800cd56:	61bb      	str	r3, [r7, #24]
 800cd58:	683b      	ldr	r3, [r7, #0]
 800cd5a:	685b      	ldr	r3, [r3, #4]
 800cd5c:	091b      	lsrs	r3, r3, #4
 800cd5e:	f003 0201 	and.w	r2, r3, #1
 800cd62:	69fb      	ldr	r3, [r7, #28]
 800cd64:	fa02 f303 	lsl.w	r3, r2, r3
 800cd68:	69ba      	ldr	r2, [r7, #24]
 800cd6a:	4313      	orrs	r3, r2
 800cd6c:	61bb      	str	r3, [r7, #24]
 800cd6e:	687b      	ldr	r3, [r7, #4]
 800cd70:	69ba      	ldr	r2, [r7, #24]
 800cd72:	605a      	str	r2, [r3, #4]
 800cd74:	683b      	ldr	r3, [r7, #0]
 800cd76:	685b      	ldr	r3, [r3, #4]
 800cd78:	f003 0303 	and.w	r3, r3, #3
 800cd7c:	2b03      	cmp	r3, #3
 800cd7e:	d017      	beq.n	800cdb0 <HAL_GPIO_Init+0xf0>
 800cd80:	687b      	ldr	r3, [r7, #4]
 800cd82:	68db      	ldr	r3, [r3, #12]
 800cd84:	61bb      	str	r3, [r7, #24]
 800cd86:	69fb      	ldr	r3, [r7, #28]
 800cd88:	005b      	lsls	r3, r3, #1
 800cd8a:	2203      	movs	r2, #3
 800cd8c:	fa02 f303 	lsl.w	r3, r2, r3
 800cd90:	43db      	mvns	r3, r3
 800cd92:	69ba      	ldr	r2, [r7, #24]
 800cd94:	4013      	ands	r3, r2
 800cd96:	61bb      	str	r3, [r7, #24]
 800cd98:	683b      	ldr	r3, [r7, #0]
 800cd9a:	689a      	ldr	r2, [r3, #8]
 800cd9c:	69fb      	ldr	r3, [r7, #28]
 800cd9e:	005b      	lsls	r3, r3, #1
 800cda0:	fa02 f303 	lsl.w	r3, r2, r3
 800cda4:	69ba      	ldr	r2, [r7, #24]
 800cda6:	4313      	orrs	r3, r2
 800cda8:	61bb      	str	r3, [r7, #24]
 800cdaa:	687b      	ldr	r3, [r7, #4]
 800cdac:	69ba      	ldr	r2, [r7, #24]
 800cdae:	60da      	str	r2, [r3, #12]
 800cdb0:	683b      	ldr	r3, [r7, #0]
 800cdb2:	685b      	ldr	r3, [r3, #4]
 800cdb4:	f003 0303 	and.w	r3, r3, #3
 800cdb8:	2b02      	cmp	r3, #2
 800cdba:	d123      	bne.n	800ce04 <HAL_GPIO_Init+0x144>
 800cdbc:	69fb      	ldr	r3, [r7, #28]
 800cdbe:	08da      	lsrs	r2, r3, #3
 800cdc0:	687b      	ldr	r3, [r7, #4]
 800cdc2:	3208      	adds	r2, #8
 800cdc4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800cdc8:	61bb      	str	r3, [r7, #24]
 800cdca:	69fb      	ldr	r3, [r7, #28]
 800cdcc:	f003 0307 	and.w	r3, r3, #7
 800cdd0:	009b      	lsls	r3, r3, #2
 800cdd2:	220f      	movs	r2, #15
 800cdd4:	fa02 f303 	lsl.w	r3, r2, r3
 800cdd8:	43db      	mvns	r3, r3
 800cdda:	69ba      	ldr	r2, [r7, #24]
 800cddc:	4013      	ands	r3, r2
 800cdde:	61bb      	str	r3, [r7, #24]
 800cde0:	683b      	ldr	r3, [r7, #0]
 800cde2:	691a      	ldr	r2, [r3, #16]
 800cde4:	69fb      	ldr	r3, [r7, #28]
 800cde6:	f003 0307 	and.w	r3, r3, #7
 800cdea:	009b      	lsls	r3, r3, #2
 800cdec:	fa02 f303 	lsl.w	r3, r2, r3
 800cdf0:	69ba      	ldr	r2, [r7, #24]
 800cdf2:	4313      	orrs	r3, r2
 800cdf4:	61bb      	str	r3, [r7, #24]
 800cdf6:	69fb      	ldr	r3, [r7, #28]
 800cdf8:	08da      	lsrs	r2, r3, #3
 800cdfa:	687b      	ldr	r3, [r7, #4]
 800cdfc:	3208      	adds	r2, #8
 800cdfe:	69b9      	ldr	r1, [r7, #24]
 800ce00:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800ce04:	687b      	ldr	r3, [r7, #4]
 800ce06:	681b      	ldr	r3, [r3, #0]
 800ce08:	61bb      	str	r3, [r7, #24]
 800ce0a:	69fb      	ldr	r3, [r7, #28]
 800ce0c:	005b      	lsls	r3, r3, #1
 800ce0e:	2203      	movs	r2, #3
 800ce10:	fa02 f303 	lsl.w	r3, r2, r3
 800ce14:	43db      	mvns	r3, r3
 800ce16:	69ba      	ldr	r2, [r7, #24]
 800ce18:	4013      	ands	r3, r2
 800ce1a:	61bb      	str	r3, [r7, #24]
 800ce1c:	683b      	ldr	r3, [r7, #0]
 800ce1e:	685b      	ldr	r3, [r3, #4]
 800ce20:	f003 0203 	and.w	r2, r3, #3
 800ce24:	69fb      	ldr	r3, [r7, #28]
 800ce26:	005b      	lsls	r3, r3, #1
 800ce28:	fa02 f303 	lsl.w	r3, r2, r3
 800ce2c:	69ba      	ldr	r2, [r7, #24]
 800ce2e:	4313      	orrs	r3, r2
 800ce30:	61bb      	str	r3, [r7, #24]
 800ce32:	687b      	ldr	r3, [r7, #4]
 800ce34:	69ba      	ldr	r2, [r7, #24]
 800ce36:	601a      	str	r2, [r3, #0]
 800ce38:	683b      	ldr	r3, [r7, #0]
 800ce3a:	685b      	ldr	r3, [r3, #4]
 800ce3c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800ce40:	2b00      	cmp	r3, #0
 800ce42:	f000 80b4 	beq.w	800cfae <HAL_GPIO_Init+0x2ee>
 800ce46:	2300      	movs	r3, #0
 800ce48:	60fb      	str	r3, [r7, #12]
 800ce4a:	4b60      	ldr	r3, [pc, #384]	@ (800cfcc <HAL_GPIO_Init+0x30c>)
 800ce4c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ce4e:	4a5f      	ldr	r2, [pc, #380]	@ (800cfcc <HAL_GPIO_Init+0x30c>)
 800ce50:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800ce54:	6453      	str	r3, [r2, #68]	@ 0x44
 800ce56:	4b5d      	ldr	r3, [pc, #372]	@ (800cfcc <HAL_GPIO_Init+0x30c>)
 800ce58:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ce5a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800ce5e:	60fb      	str	r3, [r7, #12]
 800ce60:	68fb      	ldr	r3, [r7, #12]
 800ce62:	4a5b      	ldr	r2, [pc, #364]	@ (800cfd0 <HAL_GPIO_Init+0x310>)
 800ce64:	69fb      	ldr	r3, [r7, #28]
 800ce66:	089b      	lsrs	r3, r3, #2
 800ce68:	3302      	adds	r3, #2
 800ce6a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ce6e:	61bb      	str	r3, [r7, #24]
 800ce70:	69fb      	ldr	r3, [r7, #28]
 800ce72:	f003 0303 	and.w	r3, r3, #3
 800ce76:	009b      	lsls	r3, r3, #2
 800ce78:	220f      	movs	r2, #15
 800ce7a:	fa02 f303 	lsl.w	r3, r2, r3
 800ce7e:	43db      	mvns	r3, r3
 800ce80:	69ba      	ldr	r2, [r7, #24]
 800ce82:	4013      	ands	r3, r2
 800ce84:	61bb      	str	r3, [r7, #24]
 800ce86:	687b      	ldr	r3, [r7, #4]
 800ce88:	4a52      	ldr	r2, [pc, #328]	@ (800cfd4 <HAL_GPIO_Init+0x314>)
 800ce8a:	4293      	cmp	r3, r2
 800ce8c:	d02b      	beq.n	800cee6 <HAL_GPIO_Init+0x226>
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	4a51      	ldr	r2, [pc, #324]	@ (800cfd8 <HAL_GPIO_Init+0x318>)
 800ce92:	4293      	cmp	r3, r2
 800ce94:	d025      	beq.n	800cee2 <HAL_GPIO_Init+0x222>
 800ce96:	687b      	ldr	r3, [r7, #4]
 800ce98:	4a50      	ldr	r2, [pc, #320]	@ (800cfdc <HAL_GPIO_Init+0x31c>)
 800ce9a:	4293      	cmp	r3, r2
 800ce9c:	d01f      	beq.n	800cede <HAL_GPIO_Init+0x21e>
 800ce9e:	687b      	ldr	r3, [r7, #4]
 800cea0:	4a4f      	ldr	r2, [pc, #316]	@ (800cfe0 <HAL_GPIO_Init+0x320>)
 800cea2:	4293      	cmp	r3, r2
 800cea4:	d019      	beq.n	800ceda <HAL_GPIO_Init+0x21a>
 800cea6:	687b      	ldr	r3, [r7, #4]
 800cea8:	4a4e      	ldr	r2, [pc, #312]	@ (800cfe4 <HAL_GPIO_Init+0x324>)
 800ceaa:	4293      	cmp	r3, r2
 800ceac:	d013      	beq.n	800ced6 <HAL_GPIO_Init+0x216>
 800ceae:	687b      	ldr	r3, [r7, #4]
 800ceb0:	4a4d      	ldr	r2, [pc, #308]	@ (800cfe8 <HAL_GPIO_Init+0x328>)
 800ceb2:	4293      	cmp	r3, r2
 800ceb4:	d00d      	beq.n	800ced2 <HAL_GPIO_Init+0x212>
 800ceb6:	687b      	ldr	r3, [r7, #4]
 800ceb8:	4a4c      	ldr	r2, [pc, #304]	@ (800cfec <HAL_GPIO_Init+0x32c>)
 800ceba:	4293      	cmp	r3, r2
 800cebc:	d007      	beq.n	800cece <HAL_GPIO_Init+0x20e>
 800cebe:	687b      	ldr	r3, [r7, #4]
 800cec0:	4a4b      	ldr	r2, [pc, #300]	@ (800cff0 <HAL_GPIO_Init+0x330>)
 800cec2:	4293      	cmp	r3, r2
 800cec4:	d101      	bne.n	800ceca <HAL_GPIO_Init+0x20a>
 800cec6:	2307      	movs	r3, #7
 800cec8:	e00e      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800ceca:	2308      	movs	r3, #8
 800cecc:	e00c      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800cece:	2306      	movs	r3, #6
 800ced0:	e00a      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800ced2:	2305      	movs	r3, #5
 800ced4:	e008      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800ced6:	2304      	movs	r3, #4
 800ced8:	e006      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800ceda:	2303      	movs	r3, #3
 800cedc:	e004      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800cede:	2302      	movs	r3, #2
 800cee0:	e002      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800cee2:	2301      	movs	r3, #1
 800cee4:	e000      	b.n	800cee8 <HAL_GPIO_Init+0x228>
 800cee6:	2300      	movs	r3, #0
 800cee8:	69fa      	ldr	r2, [r7, #28]
 800ceea:	f002 0203 	and.w	r2, r2, #3
 800ceee:	0092      	lsls	r2, r2, #2
 800cef0:	4093      	lsls	r3, r2
 800cef2:	69ba      	ldr	r2, [r7, #24]
 800cef4:	4313      	orrs	r3, r2
 800cef6:	61bb      	str	r3, [r7, #24]
 800cef8:	4935      	ldr	r1, [pc, #212]	@ (800cfd0 <HAL_GPIO_Init+0x310>)
 800cefa:	69fb      	ldr	r3, [r7, #28]
 800cefc:	089b      	lsrs	r3, r3, #2
 800cefe:	3302      	adds	r3, #2
 800cf00:	69ba      	ldr	r2, [r7, #24]
 800cf02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800cf06:	4b3b      	ldr	r3, [pc, #236]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf08:	689b      	ldr	r3, [r3, #8]
 800cf0a:	61bb      	str	r3, [r7, #24]
 800cf0c:	693b      	ldr	r3, [r7, #16]
 800cf0e:	43db      	mvns	r3, r3
 800cf10:	69ba      	ldr	r2, [r7, #24]
 800cf12:	4013      	ands	r3, r2
 800cf14:	61bb      	str	r3, [r7, #24]
 800cf16:	683b      	ldr	r3, [r7, #0]
 800cf18:	685b      	ldr	r3, [r3, #4]
 800cf1a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800cf1e:	2b00      	cmp	r3, #0
 800cf20:	d003      	beq.n	800cf2a <HAL_GPIO_Init+0x26a>
 800cf22:	69ba      	ldr	r2, [r7, #24]
 800cf24:	693b      	ldr	r3, [r7, #16]
 800cf26:	4313      	orrs	r3, r2
 800cf28:	61bb      	str	r3, [r7, #24]
 800cf2a:	4a32      	ldr	r2, [pc, #200]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf2c:	69bb      	ldr	r3, [r7, #24]
 800cf2e:	6093      	str	r3, [r2, #8]
 800cf30:	4b30      	ldr	r3, [pc, #192]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf32:	68db      	ldr	r3, [r3, #12]
 800cf34:	61bb      	str	r3, [r7, #24]
 800cf36:	693b      	ldr	r3, [r7, #16]
 800cf38:	43db      	mvns	r3, r3
 800cf3a:	69ba      	ldr	r2, [r7, #24]
 800cf3c:	4013      	ands	r3, r2
 800cf3e:	61bb      	str	r3, [r7, #24]
 800cf40:	683b      	ldr	r3, [r7, #0]
 800cf42:	685b      	ldr	r3, [r3, #4]
 800cf44:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	d003      	beq.n	800cf54 <HAL_GPIO_Init+0x294>
 800cf4c:	69ba      	ldr	r2, [r7, #24]
 800cf4e:	693b      	ldr	r3, [r7, #16]
 800cf50:	4313      	orrs	r3, r2
 800cf52:	61bb      	str	r3, [r7, #24]
 800cf54:	4a27      	ldr	r2, [pc, #156]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf56:	69bb      	ldr	r3, [r7, #24]
 800cf58:	60d3      	str	r3, [r2, #12]
 800cf5a:	4b26      	ldr	r3, [pc, #152]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf5c:	685b      	ldr	r3, [r3, #4]
 800cf5e:	61bb      	str	r3, [r7, #24]
 800cf60:	693b      	ldr	r3, [r7, #16]
 800cf62:	43db      	mvns	r3, r3
 800cf64:	69ba      	ldr	r2, [r7, #24]
 800cf66:	4013      	ands	r3, r2
 800cf68:	61bb      	str	r3, [r7, #24]
 800cf6a:	683b      	ldr	r3, [r7, #0]
 800cf6c:	685b      	ldr	r3, [r3, #4]
 800cf6e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800cf72:	2b00      	cmp	r3, #0
 800cf74:	d003      	beq.n	800cf7e <HAL_GPIO_Init+0x2be>
 800cf76:	69ba      	ldr	r2, [r7, #24]
 800cf78:	693b      	ldr	r3, [r7, #16]
 800cf7a:	4313      	orrs	r3, r2
 800cf7c:	61bb      	str	r3, [r7, #24]
 800cf7e:	4a1d      	ldr	r2, [pc, #116]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf80:	69bb      	ldr	r3, [r7, #24]
 800cf82:	6053      	str	r3, [r2, #4]
 800cf84:	4b1b      	ldr	r3, [pc, #108]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cf86:	681b      	ldr	r3, [r3, #0]
 800cf88:	61bb      	str	r3, [r7, #24]
 800cf8a:	693b      	ldr	r3, [r7, #16]
 800cf8c:	43db      	mvns	r3, r3
 800cf8e:	69ba      	ldr	r2, [r7, #24]
 800cf90:	4013      	ands	r3, r2
 800cf92:	61bb      	str	r3, [r7, #24]
 800cf94:	683b      	ldr	r3, [r7, #0]
 800cf96:	685b      	ldr	r3, [r3, #4]
 800cf98:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800cf9c:	2b00      	cmp	r3, #0
 800cf9e:	d003      	beq.n	800cfa8 <HAL_GPIO_Init+0x2e8>
 800cfa0:	69ba      	ldr	r2, [r7, #24]
 800cfa2:	693b      	ldr	r3, [r7, #16]
 800cfa4:	4313      	orrs	r3, r2
 800cfa6:	61bb      	str	r3, [r7, #24]
 800cfa8:	4a12      	ldr	r2, [pc, #72]	@ (800cff4 <HAL_GPIO_Init+0x334>)
 800cfaa:	69bb      	ldr	r3, [r7, #24]
 800cfac:	6013      	str	r3, [r2, #0]
 800cfae:	69fb      	ldr	r3, [r7, #28]
 800cfb0:	3301      	adds	r3, #1
 800cfb2:	61fb      	str	r3, [r7, #28]
 800cfb4:	69fb      	ldr	r3, [r7, #28]
 800cfb6:	2b0f      	cmp	r3, #15
 800cfb8:	f67f ae90 	bls.w	800ccdc <HAL_GPIO_Init+0x1c>
 800cfbc:	bf00      	nop
 800cfbe:	bf00      	nop
 800cfc0:	3724      	adds	r7, #36	@ 0x24
 800cfc2:	46bd      	mov	sp, r7
 800cfc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfc8:	4770      	bx	lr
 800cfca:	bf00      	nop
 800cfcc:	40023800 	.word	0x40023800
 800cfd0:	40013800 	.word	0x40013800
 800cfd4:	40020000 	.word	0x40020000
 800cfd8:	40020400 	.word	0x40020400
 800cfdc:	40020800 	.word	0x40020800
 800cfe0:	40020c00 	.word	0x40020c00
 800cfe4:	40021000 	.word	0x40021000
 800cfe8:	40021400 	.word	0x40021400
 800cfec:	40021800 	.word	0x40021800
 800cff0:	40021c00 	.word	0x40021c00
 800cff4:	40013c00 	.word	0x40013c00

0800cff8 <HAL_GPIO_WritePin>:
 800cff8:	b480      	push	{r7}
 800cffa:	b083      	sub	sp, #12
 800cffc:	af00      	add	r7, sp, #0
 800cffe:	6078      	str	r0, [r7, #4]
 800d000:	460b      	mov	r3, r1
 800d002:	807b      	strh	r3, [r7, #2]
 800d004:	4613      	mov	r3, r2
 800d006:	707b      	strb	r3, [r7, #1]
 800d008:	787b      	ldrb	r3, [r7, #1]
 800d00a:	2b00      	cmp	r3, #0
 800d00c:	d003      	beq.n	800d016 <HAL_GPIO_WritePin+0x1e>
 800d00e:	887a      	ldrh	r2, [r7, #2]
 800d010:	687b      	ldr	r3, [r7, #4]
 800d012:	619a      	str	r2, [r3, #24]
 800d014:	e003      	b.n	800d01e <HAL_GPIO_WritePin+0x26>
 800d016:	887b      	ldrh	r3, [r7, #2]
 800d018:	041a      	lsls	r2, r3, #16
 800d01a:	687b      	ldr	r3, [r7, #4]
 800d01c:	619a      	str	r2, [r3, #24]
 800d01e:	bf00      	nop
 800d020:	370c      	adds	r7, #12
 800d022:	46bd      	mov	sp, r7
 800d024:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d028:	4770      	bx	lr
	...

0800d02c <HAL_GPIO_EXTI_IRQHandler>:
 800d02c:	b580      	push	{r7, lr}
 800d02e:	b082      	sub	sp, #8
 800d030:	af00      	add	r7, sp, #0
 800d032:	4603      	mov	r3, r0
 800d034:	80fb      	strh	r3, [r7, #6]
 800d036:	4b08      	ldr	r3, [pc, #32]	@ (800d058 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800d038:	695a      	ldr	r2, [r3, #20]
 800d03a:	88fb      	ldrh	r3, [r7, #6]
 800d03c:	4013      	ands	r3, r2
 800d03e:	2b00      	cmp	r3, #0
 800d040:	d006      	beq.n	800d050 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800d042:	4a05      	ldr	r2, [pc, #20]	@ (800d058 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800d044:	88fb      	ldrh	r3, [r7, #6]
 800d046:	6153      	str	r3, [r2, #20]
 800d048:	88fb      	ldrh	r3, [r7, #6]
 800d04a:	4618      	mov	r0, r3
 800d04c:	f7f4 ff12 	bl	8001e74 <HAL_GPIO_EXTI_Callback>
 800d050:	bf00      	nop
 800d052:	3708      	adds	r7, #8
 800d054:	46bd      	mov	sp, r7
 800d056:	bd80      	pop	{r7, pc}
 800d058:	40013c00 	.word	0x40013c00

0800d05c <HAL_I2C_Init>:
 800d05c:	b580      	push	{r7, lr}
 800d05e:	b084      	sub	sp, #16
 800d060:	af00      	add	r7, sp, #0
 800d062:	6078      	str	r0, [r7, #4]
 800d064:	687b      	ldr	r3, [r7, #4]
 800d066:	2b00      	cmp	r3, #0
 800d068:	d101      	bne.n	800d06e <HAL_I2C_Init+0x12>
 800d06a:	2301      	movs	r3, #1
 800d06c:	e12b      	b.n	800d2c6 <HAL_I2C_Init+0x26a>
 800d06e:	687b      	ldr	r3, [r7, #4]
 800d070:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d074:	b2db      	uxtb	r3, r3
 800d076:	2b00      	cmp	r3, #0
 800d078:	d106      	bne.n	800d088 <HAL_I2C_Init+0x2c>
 800d07a:	687b      	ldr	r3, [r7, #4]
 800d07c:	2200      	movs	r2, #0
 800d07e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d082:	6878      	ldr	r0, [r7, #4]
 800d084:	f7f6 fa36 	bl	80034f4 <HAL_I2C_MspInit>
 800d088:	687b      	ldr	r3, [r7, #4]
 800d08a:	2224      	movs	r2, #36	@ 0x24
 800d08c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d090:	687b      	ldr	r3, [r7, #4]
 800d092:	681b      	ldr	r3, [r3, #0]
 800d094:	681a      	ldr	r2, [r3, #0]
 800d096:	687b      	ldr	r3, [r7, #4]
 800d098:	681b      	ldr	r3, [r3, #0]
 800d09a:	f022 0201 	bic.w	r2, r2, #1
 800d09e:	601a      	str	r2, [r3, #0]
 800d0a0:	687b      	ldr	r3, [r7, #4]
 800d0a2:	681b      	ldr	r3, [r3, #0]
 800d0a4:	681a      	ldr	r2, [r3, #0]
 800d0a6:	687b      	ldr	r3, [r7, #4]
 800d0a8:	681b      	ldr	r3, [r3, #0]
 800d0aa:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800d0ae:	601a      	str	r2, [r3, #0]
 800d0b0:	687b      	ldr	r3, [r7, #4]
 800d0b2:	681b      	ldr	r3, [r3, #0]
 800d0b4:	681a      	ldr	r2, [r3, #0]
 800d0b6:	687b      	ldr	r3, [r7, #4]
 800d0b8:	681b      	ldr	r3, [r3, #0]
 800d0ba:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800d0be:	601a      	str	r2, [r3, #0]
 800d0c0:	f003 fc04 	bl	80108cc <HAL_RCC_GetPCLK1Freq>
 800d0c4:	60f8      	str	r0, [r7, #12]
 800d0c6:	687b      	ldr	r3, [r7, #4]
 800d0c8:	685b      	ldr	r3, [r3, #4]
 800d0ca:	4a81      	ldr	r2, [pc, #516]	@ (800d2d0 <HAL_I2C_Init+0x274>)
 800d0cc:	4293      	cmp	r3, r2
 800d0ce:	d807      	bhi.n	800d0e0 <HAL_I2C_Init+0x84>
 800d0d0:	68fb      	ldr	r3, [r7, #12]
 800d0d2:	4a80      	ldr	r2, [pc, #512]	@ (800d2d4 <HAL_I2C_Init+0x278>)
 800d0d4:	4293      	cmp	r3, r2
 800d0d6:	bf94      	ite	ls
 800d0d8:	2301      	movls	r3, #1
 800d0da:	2300      	movhi	r3, #0
 800d0dc:	b2db      	uxtb	r3, r3
 800d0de:	e006      	b.n	800d0ee <HAL_I2C_Init+0x92>
 800d0e0:	68fb      	ldr	r3, [r7, #12]
 800d0e2:	4a7d      	ldr	r2, [pc, #500]	@ (800d2d8 <HAL_I2C_Init+0x27c>)
 800d0e4:	4293      	cmp	r3, r2
 800d0e6:	bf94      	ite	ls
 800d0e8:	2301      	movls	r3, #1
 800d0ea:	2300      	movhi	r3, #0
 800d0ec:	b2db      	uxtb	r3, r3
 800d0ee:	2b00      	cmp	r3, #0
 800d0f0:	d001      	beq.n	800d0f6 <HAL_I2C_Init+0x9a>
 800d0f2:	2301      	movs	r3, #1
 800d0f4:	e0e7      	b.n	800d2c6 <HAL_I2C_Init+0x26a>
 800d0f6:	68fb      	ldr	r3, [r7, #12]
 800d0f8:	4a78      	ldr	r2, [pc, #480]	@ (800d2dc <HAL_I2C_Init+0x280>)
 800d0fa:	fba2 2303 	umull	r2, r3, r2, r3
 800d0fe:	0c9b      	lsrs	r3, r3, #18
 800d100:	60bb      	str	r3, [r7, #8]
 800d102:	687b      	ldr	r3, [r7, #4]
 800d104:	681b      	ldr	r3, [r3, #0]
 800d106:	685b      	ldr	r3, [r3, #4]
 800d108:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800d10c:	687b      	ldr	r3, [r7, #4]
 800d10e:	681b      	ldr	r3, [r3, #0]
 800d110:	68ba      	ldr	r2, [r7, #8]
 800d112:	430a      	orrs	r2, r1
 800d114:	605a      	str	r2, [r3, #4]
 800d116:	687b      	ldr	r3, [r7, #4]
 800d118:	681b      	ldr	r3, [r3, #0]
 800d11a:	6a1b      	ldr	r3, [r3, #32]
 800d11c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800d120:	687b      	ldr	r3, [r7, #4]
 800d122:	685b      	ldr	r3, [r3, #4]
 800d124:	4a6a      	ldr	r2, [pc, #424]	@ (800d2d0 <HAL_I2C_Init+0x274>)
 800d126:	4293      	cmp	r3, r2
 800d128:	d802      	bhi.n	800d130 <HAL_I2C_Init+0xd4>
 800d12a:	68bb      	ldr	r3, [r7, #8]
 800d12c:	3301      	adds	r3, #1
 800d12e:	e009      	b.n	800d144 <HAL_I2C_Init+0xe8>
 800d130:	68bb      	ldr	r3, [r7, #8]
 800d132:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800d136:	fb02 f303 	mul.w	r3, r2, r3
 800d13a:	4a69      	ldr	r2, [pc, #420]	@ (800d2e0 <HAL_I2C_Init+0x284>)
 800d13c:	fba2 2303 	umull	r2, r3, r2, r3
 800d140:	099b      	lsrs	r3, r3, #6
 800d142:	3301      	adds	r3, #1
 800d144:	687a      	ldr	r2, [r7, #4]
 800d146:	6812      	ldr	r2, [r2, #0]
 800d148:	430b      	orrs	r3, r1
 800d14a:	6213      	str	r3, [r2, #32]
 800d14c:	687b      	ldr	r3, [r7, #4]
 800d14e:	681b      	ldr	r3, [r3, #0]
 800d150:	69db      	ldr	r3, [r3, #28]
 800d152:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800d156:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800d15a:	687b      	ldr	r3, [r7, #4]
 800d15c:	685b      	ldr	r3, [r3, #4]
 800d15e:	495c      	ldr	r1, [pc, #368]	@ (800d2d0 <HAL_I2C_Init+0x274>)
 800d160:	428b      	cmp	r3, r1
 800d162:	d819      	bhi.n	800d198 <HAL_I2C_Init+0x13c>
 800d164:	68fb      	ldr	r3, [r7, #12]
 800d166:	1e59      	subs	r1, r3, #1
 800d168:	687b      	ldr	r3, [r7, #4]
 800d16a:	685b      	ldr	r3, [r3, #4]
 800d16c:	005b      	lsls	r3, r3, #1
 800d16e:	fbb1 f3f3 	udiv	r3, r1, r3
 800d172:	1c59      	adds	r1, r3, #1
 800d174:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800d178:	400b      	ands	r3, r1
 800d17a:	2b00      	cmp	r3, #0
 800d17c:	d00a      	beq.n	800d194 <HAL_I2C_Init+0x138>
 800d17e:	68fb      	ldr	r3, [r7, #12]
 800d180:	1e59      	subs	r1, r3, #1
 800d182:	687b      	ldr	r3, [r7, #4]
 800d184:	685b      	ldr	r3, [r3, #4]
 800d186:	005b      	lsls	r3, r3, #1
 800d188:	fbb1 f3f3 	udiv	r3, r1, r3
 800d18c:	3301      	adds	r3, #1
 800d18e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d192:	e051      	b.n	800d238 <HAL_I2C_Init+0x1dc>
 800d194:	2304      	movs	r3, #4
 800d196:	e04f      	b.n	800d238 <HAL_I2C_Init+0x1dc>
 800d198:	687b      	ldr	r3, [r7, #4]
 800d19a:	689b      	ldr	r3, [r3, #8]
 800d19c:	2b00      	cmp	r3, #0
 800d19e:	d111      	bne.n	800d1c4 <HAL_I2C_Init+0x168>
 800d1a0:	68fb      	ldr	r3, [r7, #12]
 800d1a2:	1e58      	subs	r0, r3, #1
 800d1a4:	687b      	ldr	r3, [r7, #4]
 800d1a6:	6859      	ldr	r1, [r3, #4]
 800d1a8:	460b      	mov	r3, r1
 800d1aa:	005b      	lsls	r3, r3, #1
 800d1ac:	440b      	add	r3, r1
 800d1ae:	fbb0 f3f3 	udiv	r3, r0, r3
 800d1b2:	3301      	adds	r3, #1
 800d1b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d1b8:	2b00      	cmp	r3, #0
 800d1ba:	bf0c      	ite	eq
 800d1bc:	2301      	moveq	r3, #1
 800d1be:	2300      	movne	r3, #0
 800d1c0:	b2db      	uxtb	r3, r3
 800d1c2:	e012      	b.n	800d1ea <HAL_I2C_Init+0x18e>
 800d1c4:	68fb      	ldr	r3, [r7, #12]
 800d1c6:	1e58      	subs	r0, r3, #1
 800d1c8:	687b      	ldr	r3, [r7, #4]
 800d1ca:	6859      	ldr	r1, [r3, #4]
 800d1cc:	460b      	mov	r3, r1
 800d1ce:	009b      	lsls	r3, r3, #2
 800d1d0:	440b      	add	r3, r1
 800d1d2:	0099      	lsls	r1, r3, #2
 800d1d4:	440b      	add	r3, r1
 800d1d6:	fbb0 f3f3 	udiv	r3, r0, r3
 800d1da:	3301      	adds	r3, #1
 800d1dc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d1e0:	2b00      	cmp	r3, #0
 800d1e2:	bf0c      	ite	eq
 800d1e4:	2301      	moveq	r3, #1
 800d1e6:	2300      	movne	r3, #0
 800d1e8:	b2db      	uxtb	r3, r3
 800d1ea:	2b00      	cmp	r3, #0
 800d1ec:	d001      	beq.n	800d1f2 <HAL_I2C_Init+0x196>
 800d1ee:	2301      	movs	r3, #1
 800d1f0:	e022      	b.n	800d238 <HAL_I2C_Init+0x1dc>
 800d1f2:	687b      	ldr	r3, [r7, #4]
 800d1f4:	689b      	ldr	r3, [r3, #8]
 800d1f6:	2b00      	cmp	r3, #0
 800d1f8:	d10e      	bne.n	800d218 <HAL_I2C_Init+0x1bc>
 800d1fa:	68fb      	ldr	r3, [r7, #12]
 800d1fc:	1e58      	subs	r0, r3, #1
 800d1fe:	687b      	ldr	r3, [r7, #4]
 800d200:	6859      	ldr	r1, [r3, #4]
 800d202:	460b      	mov	r3, r1
 800d204:	005b      	lsls	r3, r3, #1
 800d206:	440b      	add	r3, r1
 800d208:	fbb0 f3f3 	udiv	r3, r0, r3
 800d20c:	3301      	adds	r3, #1
 800d20e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d212:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800d216:	e00f      	b.n	800d238 <HAL_I2C_Init+0x1dc>
 800d218:	68fb      	ldr	r3, [r7, #12]
 800d21a:	1e58      	subs	r0, r3, #1
 800d21c:	687b      	ldr	r3, [r7, #4]
 800d21e:	6859      	ldr	r1, [r3, #4]
 800d220:	460b      	mov	r3, r1
 800d222:	009b      	lsls	r3, r3, #2
 800d224:	440b      	add	r3, r1
 800d226:	0099      	lsls	r1, r3, #2
 800d228:	440b      	add	r3, r1
 800d22a:	fbb0 f3f3 	udiv	r3, r0, r3
 800d22e:	3301      	adds	r3, #1
 800d230:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800d234:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800d238:	6879      	ldr	r1, [r7, #4]
 800d23a:	6809      	ldr	r1, [r1, #0]
 800d23c:	4313      	orrs	r3, r2
 800d23e:	61cb      	str	r3, [r1, #28]
 800d240:	687b      	ldr	r3, [r7, #4]
 800d242:	681b      	ldr	r3, [r3, #0]
 800d244:	681b      	ldr	r3, [r3, #0]
 800d246:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800d24a:	687b      	ldr	r3, [r7, #4]
 800d24c:	69da      	ldr	r2, [r3, #28]
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	6a1b      	ldr	r3, [r3, #32]
 800d252:	431a      	orrs	r2, r3
 800d254:	687b      	ldr	r3, [r7, #4]
 800d256:	681b      	ldr	r3, [r3, #0]
 800d258:	430a      	orrs	r2, r1
 800d25a:	601a      	str	r2, [r3, #0]
 800d25c:	687b      	ldr	r3, [r7, #4]
 800d25e:	681b      	ldr	r3, [r3, #0]
 800d260:	689b      	ldr	r3, [r3, #8]
 800d262:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800d266:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800d26a:	687a      	ldr	r2, [r7, #4]
 800d26c:	6911      	ldr	r1, [r2, #16]
 800d26e:	687a      	ldr	r2, [r7, #4]
 800d270:	68d2      	ldr	r2, [r2, #12]
 800d272:	4311      	orrs	r1, r2
 800d274:	687a      	ldr	r2, [r7, #4]
 800d276:	6812      	ldr	r2, [r2, #0]
 800d278:	430b      	orrs	r3, r1
 800d27a:	6093      	str	r3, [r2, #8]
 800d27c:	687b      	ldr	r3, [r7, #4]
 800d27e:	681b      	ldr	r3, [r3, #0]
 800d280:	68db      	ldr	r3, [r3, #12]
 800d282:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800d286:	687b      	ldr	r3, [r7, #4]
 800d288:	695a      	ldr	r2, [r3, #20]
 800d28a:	687b      	ldr	r3, [r7, #4]
 800d28c:	699b      	ldr	r3, [r3, #24]
 800d28e:	431a      	orrs	r2, r3
 800d290:	687b      	ldr	r3, [r7, #4]
 800d292:	681b      	ldr	r3, [r3, #0]
 800d294:	430a      	orrs	r2, r1
 800d296:	60da      	str	r2, [r3, #12]
 800d298:	687b      	ldr	r3, [r7, #4]
 800d29a:	681b      	ldr	r3, [r3, #0]
 800d29c:	681a      	ldr	r2, [r3, #0]
 800d29e:	687b      	ldr	r3, [r7, #4]
 800d2a0:	681b      	ldr	r3, [r3, #0]
 800d2a2:	f042 0201 	orr.w	r2, r2, #1
 800d2a6:	601a      	str	r2, [r3, #0]
 800d2a8:	687b      	ldr	r3, [r7, #4]
 800d2aa:	2200      	movs	r2, #0
 800d2ac:	641a      	str	r2, [r3, #64]	@ 0x40
 800d2ae:	687b      	ldr	r3, [r7, #4]
 800d2b0:	2220      	movs	r2, #32
 800d2b2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d2b6:	687b      	ldr	r3, [r7, #4]
 800d2b8:	2200      	movs	r2, #0
 800d2ba:	631a      	str	r2, [r3, #48]	@ 0x30
 800d2bc:	687b      	ldr	r3, [r7, #4]
 800d2be:	2200      	movs	r2, #0
 800d2c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d2c4:	2300      	movs	r3, #0
 800d2c6:	4618      	mov	r0, r3
 800d2c8:	3710      	adds	r7, #16
 800d2ca:	46bd      	mov	sp, r7
 800d2cc:	bd80      	pop	{r7, pc}
 800d2ce:	bf00      	nop
 800d2d0:	000186a0 	.word	0x000186a0
 800d2d4:	001e847f 	.word	0x001e847f
 800d2d8:	003d08ff 	.word	0x003d08ff
 800d2dc:	431bde83 	.word	0x431bde83
 800d2e0:	10624dd3 	.word	0x10624dd3

0800d2e4 <HAL_I2C_Mem_Write>:
 800d2e4:	b580      	push	{r7, lr}
 800d2e6:	b088      	sub	sp, #32
 800d2e8:	af02      	add	r7, sp, #8
 800d2ea:	60f8      	str	r0, [r7, #12]
 800d2ec:	4608      	mov	r0, r1
 800d2ee:	4611      	mov	r1, r2
 800d2f0:	461a      	mov	r2, r3
 800d2f2:	4603      	mov	r3, r0
 800d2f4:	817b      	strh	r3, [r7, #10]
 800d2f6:	460b      	mov	r3, r1
 800d2f8:	813b      	strh	r3, [r7, #8]
 800d2fa:	4613      	mov	r3, r2
 800d2fc:	80fb      	strh	r3, [r7, #6]
 800d2fe:	f7fd feab 	bl	800b058 <HAL_GetTick>
 800d302:	6178      	str	r0, [r7, #20]
 800d304:	68fb      	ldr	r3, [r7, #12]
 800d306:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d30a:	b2db      	uxtb	r3, r3
 800d30c:	2b20      	cmp	r3, #32
 800d30e:	f040 80d9 	bne.w	800d4c4 <HAL_I2C_Mem_Write+0x1e0>
 800d312:	697b      	ldr	r3, [r7, #20]
 800d314:	9300      	str	r3, [sp, #0]
 800d316:	2319      	movs	r3, #25
 800d318:	2201      	movs	r2, #1
 800d31a:	496d      	ldr	r1, [pc, #436]	@ (800d4d0 <HAL_I2C_Mem_Write+0x1ec>)
 800d31c:	68f8      	ldr	r0, [r7, #12]
 800d31e:	f001 fa4b 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800d322:	4603      	mov	r3, r0
 800d324:	2b00      	cmp	r3, #0
 800d326:	d001      	beq.n	800d32c <HAL_I2C_Mem_Write+0x48>
 800d328:	2302      	movs	r3, #2
 800d32a:	e0cc      	b.n	800d4c6 <HAL_I2C_Mem_Write+0x1e2>
 800d32c:	68fb      	ldr	r3, [r7, #12]
 800d32e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d332:	2b01      	cmp	r3, #1
 800d334:	d101      	bne.n	800d33a <HAL_I2C_Mem_Write+0x56>
 800d336:	2302      	movs	r3, #2
 800d338:	e0c5      	b.n	800d4c6 <HAL_I2C_Mem_Write+0x1e2>
 800d33a:	68fb      	ldr	r3, [r7, #12]
 800d33c:	2201      	movs	r2, #1
 800d33e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d342:	68fb      	ldr	r3, [r7, #12]
 800d344:	681b      	ldr	r3, [r3, #0]
 800d346:	681b      	ldr	r3, [r3, #0]
 800d348:	f003 0301 	and.w	r3, r3, #1
 800d34c:	2b01      	cmp	r3, #1
 800d34e:	d007      	beq.n	800d360 <HAL_I2C_Mem_Write+0x7c>
 800d350:	68fb      	ldr	r3, [r7, #12]
 800d352:	681b      	ldr	r3, [r3, #0]
 800d354:	681a      	ldr	r2, [r3, #0]
 800d356:	68fb      	ldr	r3, [r7, #12]
 800d358:	681b      	ldr	r3, [r3, #0]
 800d35a:	f042 0201 	orr.w	r2, r2, #1
 800d35e:	601a      	str	r2, [r3, #0]
 800d360:	68fb      	ldr	r3, [r7, #12]
 800d362:	681b      	ldr	r3, [r3, #0]
 800d364:	681a      	ldr	r2, [r3, #0]
 800d366:	68fb      	ldr	r3, [r7, #12]
 800d368:	681b      	ldr	r3, [r3, #0]
 800d36a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d36e:	601a      	str	r2, [r3, #0]
 800d370:	68fb      	ldr	r3, [r7, #12]
 800d372:	2221      	movs	r2, #33	@ 0x21
 800d374:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d378:	68fb      	ldr	r3, [r7, #12]
 800d37a:	2240      	movs	r2, #64	@ 0x40
 800d37c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d380:	68fb      	ldr	r3, [r7, #12]
 800d382:	2200      	movs	r2, #0
 800d384:	641a      	str	r2, [r3, #64]	@ 0x40
 800d386:	68fb      	ldr	r3, [r7, #12]
 800d388:	6a3a      	ldr	r2, [r7, #32]
 800d38a:	625a      	str	r2, [r3, #36]	@ 0x24
 800d38c:	68fb      	ldr	r3, [r7, #12]
 800d38e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800d390:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d392:	68fb      	ldr	r3, [r7, #12]
 800d394:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d396:	b29a      	uxth	r2, r3
 800d398:	68fb      	ldr	r3, [r7, #12]
 800d39a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d39c:	68fb      	ldr	r3, [r7, #12]
 800d39e:	4a4d      	ldr	r2, [pc, #308]	@ (800d4d4 <HAL_I2C_Mem_Write+0x1f0>)
 800d3a0:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d3a2:	88f8      	ldrh	r0, [r7, #6]
 800d3a4:	893a      	ldrh	r2, [r7, #8]
 800d3a6:	8979      	ldrh	r1, [r7, #10]
 800d3a8:	697b      	ldr	r3, [r7, #20]
 800d3aa:	9301      	str	r3, [sp, #4]
 800d3ac:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d3ae:	9300      	str	r3, [sp, #0]
 800d3b0:	4603      	mov	r3, r0
 800d3b2:	68f8      	ldr	r0, [r7, #12]
 800d3b4:	f000 fec8 	bl	800e148 <I2C_RequestMemoryWrite>
 800d3b8:	4603      	mov	r3, r0
 800d3ba:	2b00      	cmp	r3, #0
 800d3bc:	d052      	beq.n	800d464 <HAL_I2C_Mem_Write+0x180>
 800d3be:	2301      	movs	r3, #1
 800d3c0:	e081      	b.n	800d4c6 <HAL_I2C_Mem_Write+0x1e2>
 800d3c2:	697a      	ldr	r2, [r7, #20]
 800d3c4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800d3c6:	68f8      	ldr	r0, [r7, #12]
 800d3c8:	f001 facc 	bl	800e964 <I2C_WaitOnTXEFlagUntilTimeout>
 800d3cc:	4603      	mov	r3, r0
 800d3ce:	2b00      	cmp	r3, #0
 800d3d0:	d00d      	beq.n	800d3ee <HAL_I2C_Mem_Write+0x10a>
 800d3d2:	68fb      	ldr	r3, [r7, #12]
 800d3d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d3d6:	2b04      	cmp	r3, #4
 800d3d8:	d107      	bne.n	800d3ea <HAL_I2C_Mem_Write+0x106>
 800d3da:	68fb      	ldr	r3, [r7, #12]
 800d3dc:	681b      	ldr	r3, [r3, #0]
 800d3de:	681a      	ldr	r2, [r3, #0]
 800d3e0:	68fb      	ldr	r3, [r7, #12]
 800d3e2:	681b      	ldr	r3, [r3, #0]
 800d3e4:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d3e8:	601a      	str	r2, [r3, #0]
 800d3ea:	2301      	movs	r3, #1
 800d3ec:	e06b      	b.n	800d4c6 <HAL_I2C_Mem_Write+0x1e2>
 800d3ee:	68fb      	ldr	r3, [r7, #12]
 800d3f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d3f2:	781a      	ldrb	r2, [r3, #0]
 800d3f4:	68fb      	ldr	r3, [r7, #12]
 800d3f6:	681b      	ldr	r3, [r3, #0]
 800d3f8:	611a      	str	r2, [r3, #16]
 800d3fa:	68fb      	ldr	r3, [r7, #12]
 800d3fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d3fe:	1c5a      	adds	r2, r3, #1
 800d400:	68fb      	ldr	r3, [r7, #12]
 800d402:	625a      	str	r2, [r3, #36]	@ 0x24
 800d404:	68fb      	ldr	r3, [r7, #12]
 800d406:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d408:	3b01      	subs	r3, #1
 800d40a:	b29a      	uxth	r2, r3
 800d40c:	68fb      	ldr	r3, [r7, #12]
 800d40e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d410:	68fb      	ldr	r3, [r7, #12]
 800d412:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d414:	b29b      	uxth	r3, r3
 800d416:	3b01      	subs	r3, #1
 800d418:	b29a      	uxth	r2, r3
 800d41a:	68fb      	ldr	r3, [r7, #12]
 800d41c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d41e:	68fb      	ldr	r3, [r7, #12]
 800d420:	681b      	ldr	r3, [r3, #0]
 800d422:	695b      	ldr	r3, [r3, #20]
 800d424:	f003 0304 	and.w	r3, r3, #4
 800d428:	2b04      	cmp	r3, #4
 800d42a:	d11b      	bne.n	800d464 <HAL_I2C_Mem_Write+0x180>
 800d42c:	68fb      	ldr	r3, [r7, #12]
 800d42e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d430:	2b00      	cmp	r3, #0
 800d432:	d017      	beq.n	800d464 <HAL_I2C_Mem_Write+0x180>
 800d434:	68fb      	ldr	r3, [r7, #12]
 800d436:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d438:	781a      	ldrb	r2, [r3, #0]
 800d43a:	68fb      	ldr	r3, [r7, #12]
 800d43c:	681b      	ldr	r3, [r3, #0]
 800d43e:	611a      	str	r2, [r3, #16]
 800d440:	68fb      	ldr	r3, [r7, #12]
 800d442:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d444:	1c5a      	adds	r2, r3, #1
 800d446:	68fb      	ldr	r3, [r7, #12]
 800d448:	625a      	str	r2, [r3, #36]	@ 0x24
 800d44a:	68fb      	ldr	r3, [r7, #12]
 800d44c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d44e:	3b01      	subs	r3, #1
 800d450:	b29a      	uxth	r2, r3
 800d452:	68fb      	ldr	r3, [r7, #12]
 800d454:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d456:	68fb      	ldr	r3, [r7, #12]
 800d458:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d45a:	b29b      	uxth	r3, r3
 800d45c:	3b01      	subs	r3, #1
 800d45e:	b29a      	uxth	r2, r3
 800d460:	68fb      	ldr	r3, [r7, #12]
 800d462:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d464:	68fb      	ldr	r3, [r7, #12]
 800d466:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d468:	2b00      	cmp	r3, #0
 800d46a:	d1aa      	bne.n	800d3c2 <HAL_I2C_Mem_Write+0xde>
 800d46c:	697a      	ldr	r2, [r7, #20]
 800d46e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800d470:	68f8      	ldr	r0, [r7, #12]
 800d472:	f001 fab8 	bl	800e9e6 <I2C_WaitOnBTFFlagUntilTimeout>
 800d476:	4603      	mov	r3, r0
 800d478:	2b00      	cmp	r3, #0
 800d47a:	d00d      	beq.n	800d498 <HAL_I2C_Mem_Write+0x1b4>
 800d47c:	68fb      	ldr	r3, [r7, #12]
 800d47e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d480:	2b04      	cmp	r3, #4
 800d482:	d107      	bne.n	800d494 <HAL_I2C_Mem_Write+0x1b0>
 800d484:	68fb      	ldr	r3, [r7, #12]
 800d486:	681b      	ldr	r3, [r3, #0]
 800d488:	681a      	ldr	r2, [r3, #0]
 800d48a:	68fb      	ldr	r3, [r7, #12]
 800d48c:	681b      	ldr	r3, [r3, #0]
 800d48e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d492:	601a      	str	r2, [r3, #0]
 800d494:	2301      	movs	r3, #1
 800d496:	e016      	b.n	800d4c6 <HAL_I2C_Mem_Write+0x1e2>
 800d498:	68fb      	ldr	r3, [r7, #12]
 800d49a:	681b      	ldr	r3, [r3, #0]
 800d49c:	681a      	ldr	r2, [r3, #0]
 800d49e:	68fb      	ldr	r3, [r7, #12]
 800d4a0:	681b      	ldr	r3, [r3, #0]
 800d4a2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d4a6:	601a      	str	r2, [r3, #0]
 800d4a8:	68fb      	ldr	r3, [r7, #12]
 800d4aa:	2220      	movs	r2, #32
 800d4ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d4b0:	68fb      	ldr	r3, [r7, #12]
 800d4b2:	2200      	movs	r2, #0
 800d4b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d4b8:	68fb      	ldr	r3, [r7, #12]
 800d4ba:	2200      	movs	r2, #0
 800d4bc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d4c0:	2300      	movs	r3, #0
 800d4c2:	e000      	b.n	800d4c6 <HAL_I2C_Mem_Write+0x1e2>
 800d4c4:	2302      	movs	r3, #2
 800d4c6:	4618      	mov	r0, r3
 800d4c8:	3718      	adds	r7, #24
 800d4ca:	46bd      	mov	sp, r7
 800d4cc:	bd80      	pop	{r7, pc}
 800d4ce:	bf00      	nop
 800d4d0:	00100002 	.word	0x00100002
 800d4d4:	ffff0000 	.word	0xffff0000

0800d4d8 <HAL_I2C_Mem_Read>:
 800d4d8:	b580      	push	{r7, lr}
 800d4da:	b08c      	sub	sp, #48	@ 0x30
 800d4dc:	af02      	add	r7, sp, #8
 800d4de:	60f8      	str	r0, [r7, #12]
 800d4e0:	4608      	mov	r0, r1
 800d4e2:	4611      	mov	r1, r2
 800d4e4:	461a      	mov	r2, r3
 800d4e6:	4603      	mov	r3, r0
 800d4e8:	817b      	strh	r3, [r7, #10]
 800d4ea:	460b      	mov	r3, r1
 800d4ec:	813b      	strh	r3, [r7, #8]
 800d4ee:	4613      	mov	r3, r2
 800d4f0:	80fb      	strh	r3, [r7, #6]
 800d4f2:	f7fd fdb1 	bl	800b058 <HAL_GetTick>
 800d4f6:	6278      	str	r0, [r7, #36]	@ 0x24
 800d4f8:	68fb      	ldr	r3, [r7, #12]
 800d4fa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d4fe:	b2db      	uxtb	r3, r3
 800d500:	2b20      	cmp	r3, #32
 800d502:	f040 8208 	bne.w	800d916 <HAL_I2C_Mem_Read+0x43e>
 800d506:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d508:	9300      	str	r3, [sp, #0]
 800d50a:	2319      	movs	r3, #25
 800d50c:	2201      	movs	r2, #1
 800d50e:	497b      	ldr	r1, [pc, #492]	@ (800d6fc <HAL_I2C_Mem_Read+0x224>)
 800d510:	68f8      	ldr	r0, [r7, #12]
 800d512:	f001 f951 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800d516:	4603      	mov	r3, r0
 800d518:	2b00      	cmp	r3, #0
 800d51a:	d001      	beq.n	800d520 <HAL_I2C_Mem_Read+0x48>
 800d51c:	2302      	movs	r3, #2
 800d51e:	e1fb      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d520:	68fb      	ldr	r3, [r7, #12]
 800d522:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d526:	2b01      	cmp	r3, #1
 800d528:	d101      	bne.n	800d52e <HAL_I2C_Mem_Read+0x56>
 800d52a:	2302      	movs	r3, #2
 800d52c:	e1f4      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d52e:	68fb      	ldr	r3, [r7, #12]
 800d530:	2201      	movs	r2, #1
 800d532:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d536:	68fb      	ldr	r3, [r7, #12]
 800d538:	681b      	ldr	r3, [r3, #0]
 800d53a:	681b      	ldr	r3, [r3, #0]
 800d53c:	f003 0301 	and.w	r3, r3, #1
 800d540:	2b01      	cmp	r3, #1
 800d542:	d007      	beq.n	800d554 <HAL_I2C_Mem_Read+0x7c>
 800d544:	68fb      	ldr	r3, [r7, #12]
 800d546:	681b      	ldr	r3, [r3, #0]
 800d548:	681a      	ldr	r2, [r3, #0]
 800d54a:	68fb      	ldr	r3, [r7, #12]
 800d54c:	681b      	ldr	r3, [r3, #0]
 800d54e:	f042 0201 	orr.w	r2, r2, #1
 800d552:	601a      	str	r2, [r3, #0]
 800d554:	68fb      	ldr	r3, [r7, #12]
 800d556:	681b      	ldr	r3, [r3, #0]
 800d558:	681a      	ldr	r2, [r3, #0]
 800d55a:	68fb      	ldr	r3, [r7, #12]
 800d55c:	681b      	ldr	r3, [r3, #0]
 800d55e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d562:	601a      	str	r2, [r3, #0]
 800d564:	68fb      	ldr	r3, [r7, #12]
 800d566:	2222      	movs	r2, #34	@ 0x22
 800d568:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d56c:	68fb      	ldr	r3, [r7, #12]
 800d56e:	2240      	movs	r2, #64	@ 0x40
 800d570:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d574:	68fb      	ldr	r3, [r7, #12]
 800d576:	2200      	movs	r2, #0
 800d578:	641a      	str	r2, [r3, #64]	@ 0x40
 800d57a:	68fb      	ldr	r3, [r7, #12]
 800d57c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800d57e:	625a      	str	r2, [r3, #36]	@ 0x24
 800d580:	68fb      	ldr	r3, [r7, #12]
 800d582:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800d584:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d586:	68fb      	ldr	r3, [r7, #12]
 800d588:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d58a:	b29a      	uxth	r2, r3
 800d58c:	68fb      	ldr	r3, [r7, #12]
 800d58e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d590:	68fb      	ldr	r3, [r7, #12]
 800d592:	4a5b      	ldr	r2, [pc, #364]	@ (800d700 <HAL_I2C_Mem_Read+0x228>)
 800d594:	62da      	str	r2, [r3, #44]	@ 0x2c
 800d596:	88f8      	ldrh	r0, [r7, #6]
 800d598:	893a      	ldrh	r2, [r7, #8]
 800d59a:	8979      	ldrh	r1, [r7, #10]
 800d59c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d59e:	9301      	str	r3, [sp, #4]
 800d5a0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d5a2:	9300      	str	r3, [sp, #0]
 800d5a4:	4603      	mov	r3, r0
 800d5a6:	68f8      	ldr	r0, [r7, #12]
 800d5a8:	f000 fe64 	bl	800e274 <I2C_RequestMemoryRead>
 800d5ac:	4603      	mov	r3, r0
 800d5ae:	2b00      	cmp	r3, #0
 800d5b0:	d001      	beq.n	800d5b6 <HAL_I2C_Mem_Read+0xde>
 800d5b2:	2301      	movs	r3, #1
 800d5b4:	e1b0      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d5b6:	68fb      	ldr	r3, [r7, #12]
 800d5b8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d5ba:	2b00      	cmp	r3, #0
 800d5bc:	d113      	bne.n	800d5e6 <HAL_I2C_Mem_Read+0x10e>
 800d5be:	2300      	movs	r3, #0
 800d5c0:	623b      	str	r3, [r7, #32]
 800d5c2:	68fb      	ldr	r3, [r7, #12]
 800d5c4:	681b      	ldr	r3, [r3, #0]
 800d5c6:	695b      	ldr	r3, [r3, #20]
 800d5c8:	623b      	str	r3, [r7, #32]
 800d5ca:	68fb      	ldr	r3, [r7, #12]
 800d5cc:	681b      	ldr	r3, [r3, #0]
 800d5ce:	699b      	ldr	r3, [r3, #24]
 800d5d0:	623b      	str	r3, [r7, #32]
 800d5d2:	6a3b      	ldr	r3, [r7, #32]
 800d5d4:	68fb      	ldr	r3, [r7, #12]
 800d5d6:	681b      	ldr	r3, [r3, #0]
 800d5d8:	681a      	ldr	r2, [r3, #0]
 800d5da:	68fb      	ldr	r3, [r7, #12]
 800d5dc:	681b      	ldr	r3, [r3, #0]
 800d5de:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d5e2:	601a      	str	r2, [r3, #0]
 800d5e4:	e184      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d5e6:	68fb      	ldr	r3, [r7, #12]
 800d5e8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d5ea:	2b01      	cmp	r3, #1
 800d5ec:	d11b      	bne.n	800d626 <HAL_I2C_Mem_Read+0x14e>
 800d5ee:	68fb      	ldr	r3, [r7, #12]
 800d5f0:	681b      	ldr	r3, [r3, #0]
 800d5f2:	681a      	ldr	r2, [r3, #0]
 800d5f4:	68fb      	ldr	r3, [r7, #12]
 800d5f6:	681b      	ldr	r3, [r3, #0]
 800d5f8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d5fc:	601a      	str	r2, [r3, #0]
 800d5fe:	2300      	movs	r3, #0
 800d600:	61fb      	str	r3, [r7, #28]
 800d602:	68fb      	ldr	r3, [r7, #12]
 800d604:	681b      	ldr	r3, [r3, #0]
 800d606:	695b      	ldr	r3, [r3, #20]
 800d608:	61fb      	str	r3, [r7, #28]
 800d60a:	68fb      	ldr	r3, [r7, #12]
 800d60c:	681b      	ldr	r3, [r3, #0]
 800d60e:	699b      	ldr	r3, [r3, #24]
 800d610:	61fb      	str	r3, [r7, #28]
 800d612:	69fb      	ldr	r3, [r7, #28]
 800d614:	68fb      	ldr	r3, [r7, #12]
 800d616:	681b      	ldr	r3, [r3, #0]
 800d618:	681a      	ldr	r2, [r3, #0]
 800d61a:	68fb      	ldr	r3, [r7, #12]
 800d61c:	681b      	ldr	r3, [r3, #0]
 800d61e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d622:	601a      	str	r2, [r3, #0]
 800d624:	e164      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d626:	68fb      	ldr	r3, [r7, #12]
 800d628:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d62a:	2b02      	cmp	r3, #2
 800d62c:	d11b      	bne.n	800d666 <HAL_I2C_Mem_Read+0x18e>
 800d62e:	68fb      	ldr	r3, [r7, #12]
 800d630:	681b      	ldr	r3, [r3, #0]
 800d632:	681a      	ldr	r2, [r3, #0]
 800d634:	68fb      	ldr	r3, [r7, #12]
 800d636:	681b      	ldr	r3, [r3, #0]
 800d638:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d63c:	601a      	str	r2, [r3, #0]
 800d63e:	68fb      	ldr	r3, [r7, #12]
 800d640:	681b      	ldr	r3, [r3, #0]
 800d642:	681a      	ldr	r2, [r3, #0]
 800d644:	68fb      	ldr	r3, [r7, #12]
 800d646:	681b      	ldr	r3, [r3, #0]
 800d648:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800d64c:	601a      	str	r2, [r3, #0]
 800d64e:	2300      	movs	r3, #0
 800d650:	61bb      	str	r3, [r7, #24]
 800d652:	68fb      	ldr	r3, [r7, #12]
 800d654:	681b      	ldr	r3, [r3, #0]
 800d656:	695b      	ldr	r3, [r3, #20]
 800d658:	61bb      	str	r3, [r7, #24]
 800d65a:	68fb      	ldr	r3, [r7, #12]
 800d65c:	681b      	ldr	r3, [r3, #0]
 800d65e:	699b      	ldr	r3, [r3, #24]
 800d660:	61bb      	str	r3, [r7, #24]
 800d662:	69bb      	ldr	r3, [r7, #24]
 800d664:	e144      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d666:	2300      	movs	r3, #0
 800d668:	617b      	str	r3, [r7, #20]
 800d66a:	68fb      	ldr	r3, [r7, #12]
 800d66c:	681b      	ldr	r3, [r3, #0]
 800d66e:	695b      	ldr	r3, [r3, #20]
 800d670:	617b      	str	r3, [r7, #20]
 800d672:	68fb      	ldr	r3, [r7, #12]
 800d674:	681b      	ldr	r3, [r3, #0]
 800d676:	699b      	ldr	r3, [r3, #24]
 800d678:	617b      	str	r3, [r7, #20]
 800d67a:	697b      	ldr	r3, [r7, #20]
 800d67c:	e138      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d67e:	68fb      	ldr	r3, [r7, #12]
 800d680:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d682:	2b03      	cmp	r3, #3
 800d684:	f200 80f1 	bhi.w	800d86a <HAL_I2C_Mem_Read+0x392>
 800d688:	68fb      	ldr	r3, [r7, #12]
 800d68a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d68c:	2b01      	cmp	r3, #1
 800d68e:	d123      	bne.n	800d6d8 <HAL_I2C_Mem_Read+0x200>
 800d690:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d692:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d694:	68f8      	ldr	r0, [r7, #12]
 800d696:	f001 f9e7 	bl	800ea68 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d69a:	4603      	mov	r3, r0
 800d69c:	2b00      	cmp	r3, #0
 800d69e:	d001      	beq.n	800d6a4 <HAL_I2C_Mem_Read+0x1cc>
 800d6a0:	2301      	movs	r3, #1
 800d6a2:	e139      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d6a4:	68fb      	ldr	r3, [r7, #12]
 800d6a6:	681b      	ldr	r3, [r3, #0]
 800d6a8:	691a      	ldr	r2, [r3, #16]
 800d6aa:	68fb      	ldr	r3, [r7, #12]
 800d6ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d6ae:	b2d2      	uxtb	r2, r2
 800d6b0:	701a      	strb	r2, [r3, #0]
 800d6b2:	68fb      	ldr	r3, [r7, #12]
 800d6b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d6b6:	1c5a      	adds	r2, r3, #1
 800d6b8:	68fb      	ldr	r3, [r7, #12]
 800d6ba:	625a      	str	r2, [r3, #36]	@ 0x24
 800d6bc:	68fb      	ldr	r3, [r7, #12]
 800d6be:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d6c0:	3b01      	subs	r3, #1
 800d6c2:	b29a      	uxth	r2, r3
 800d6c4:	68fb      	ldr	r3, [r7, #12]
 800d6c6:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d6c8:	68fb      	ldr	r3, [r7, #12]
 800d6ca:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d6cc:	b29b      	uxth	r3, r3
 800d6ce:	3b01      	subs	r3, #1
 800d6d0:	b29a      	uxth	r2, r3
 800d6d2:	68fb      	ldr	r3, [r7, #12]
 800d6d4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d6d6:	e10b      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d6d8:	68fb      	ldr	r3, [r7, #12]
 800d6da:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d6dc:	2b02      	cmp	r3, #2
 800d6de:	d14e      	bne.n	800d77e <HAL_I2C_Mem_Read+0x2a6>
 800d6e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d6e2:	9300      	str	r3, [sp, #0]
 800d6e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d6e6:	2200      	movs	r2, #0
 800d6e8:	4906      	ldr	r1, [pc, #24]	@ (800d704 <HAL_I2C_Mem_Read+0x22c>)
 800d6ea:	68f8      	ldr	r0, [r7, #12]
 800d6ec:	f001 f864 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800d6f0:	4603      	mov	r3, r0
 800d6f2:	2b00      	cmp	r3, #0
 800d6f4:	d008      	beq.n	800d708 <HAL_I2C_Mem_Read+0x230>
 800d6f6:	2301      	movs	r3, #1
 800d6f8:	e10e      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d6fa:	bf00      	nop
 800d6fc:	00100002 	.word	0x00100002
 800d700:	ffff0000 	.word	0xffff0000
 800d704:	00010004 	.word	0x00010004
 800d708:	68fb      	ldr	r3, [r7, #12]
 800d70a:	681b      	ldr	r3, [r3, #0]
 800d70c:	681a      	ldr	r2, [r3, #0]
 800d70e:	68fb      	ldr	r3, [r7, #12]
 800d710:	681b      	ldr	r3, [r3, #0]
 800d712:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d716:	601a      	str	r2, [r3, #0]
 800d718:	68fb      	ldr	r3, [r7, #12]
 800d71a:	681b      	ldr	r3, [r3, #0]
 800d71c:	691a      	ldr	r2, [r3, #16]
 800d71e:	68fb      	ldr	r3, [r7, #12]
 800d720:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d722:	b2d2      	uxtb	r2, r2
 800d724:	701a      	strb	r2, [r3, #0]
 800d726:	68fb      	ldr	r3, [r7, #12]
 800d728:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d72a:	1c5a      	adds	r2, r3, #1
 800d72c:	68fb      	ldr	r3, [r7, #12]
 800d72e:	625a      	str	r2, [r3, #36]	@ 0x24
 800d730:	68fb      	ldr	r3, [r7, #12]
 800d732:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d734:	3b01      	subs	r3, #1
 800d736:	b29a      	uxth	r2, r3
 800d738:	68fb      	ldr	r3, [r7, #12]
 800d73a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d73c:	68fb      	ldr	r3, [r7, #12]
 800d73e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d740:	b29b      	uxth	r3, r3
 800d742:	3b01      	subs	r3, #1
 800d744:	b29a      	uxth	r2, r3
 800d746:	68fb      	ldr	r3, [r7, #12]
 800d748:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d74a:	68fb      	ldr	r3, [r7, #12]
 800d74c:	681b      	ldr	r3, [r3, #0]
 800d74e:	691a      	ldr	r2, [r3, #16]
 800d750:	68fb      	ldr	r3, [r7, #12]
 800d752:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d754:	b2d2      	uxtb	r2, r2
 800d756:	701a      	strb	r2, [r3, #0]
 800d758:	68fb      	ldr	r3, [r7, #12]
 800d75a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d75c:	1c5a      	adds	r2, r3, #1
 800d75e:	68fb      	ldr	r3, [r7, #12]
 800d760:	625a      	str	r2, [r3, #36]	@ 0x24
 800d762:	68fb      	ldr	r3, [r7, #12]
 800d764:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d766:	3b01      	subs	r3, #1
 800d768:	b29a      	uxth	r2, r3
 800d76a:	68fb      	ldr	r3, [r7, #12]
 800d76c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d76e:	68fb      	ldr	r3, [r7, #12]
 800d770:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d772:	b29b      	uxth	r3, r3
 800d774:	3b01      	subs	r3, #1
 800d776:	b29a      	uxth	r2, r3
 800d778:	68fb      	ldr	r3, [r7, #12]
 800d77a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d77c:	e0b8      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d77e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d780:	9300      	str	r3, [sp, #0]
 800d782:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d784:	2200      	movs	r2, #0
 800d786:	4966      	ldr	r1, [pc, #408]	@ (800d920 <HAL_I2C_Mem_Read+0x448>)
 800d788:	68f8      	ldr	r0, [r7, #12]
 800d78a:	f001 f815 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800d78e:	4603      	mov	r3, r0
 800d790:	2b00      	cmp	r3, #0
 800d792:	d001      	beq.n	800d798 <HAL_I2C_Mem_Read+0x2c0>
 800d794:	2301      	movs	r3, #1
 800d796:	e0bf      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d798:	68fb      	ldr	r3, [r7, #12]
 800d79a:	681b      	ldr	r3, [r3, #0]
 800d79c:	681a      	ldr	r2, [r3, #0]
 800d79e:	68fb      	ldr	r3, [r7, #12]
 800d7a0:	681b      	ldr	r3, [r3, #0]
 800d7a2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800d7a6:	601a      	str	r2, [r3, #0]
 800d7a8:	68fb      	ldr	r3, [r7, #12]
 800d7aa:	681b      	ldr	r3, [r3, #0]
 800d7ac:	691a      	ldr	r2, [r3, #16]
 800d7ae:	68fb      	ldr	r3, [r7, #12]
 800d7b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7b2:	b2d2      	uxtb	r2, r2
 800d7b4:	701a      	strb	r2, [r3, #0]
 800d7b6:	68fb      	ldr	r3, [r7, #12]
 800d7b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d7ba:	1c5a      	adds	r2, r3, #1
 800d7bc:	68fb      	ldr	r3, [r7, #12]
 800d7be:	625a      	str	r2, [r3, #36]	@ 0x24
 800d7c0:	68fb      	ldr	r3, [r7, #12]
 800d7c2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d7c4:	3b01      	subs	r3, #1
 800d7c6:	b29a      	uxth	r2, r3
 800d7c8:	68fb      	ldr	r3, [r7, #12]
 800d7ca:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d7cc:	68fb      	ldr	r3, [r7, #12]
 800d7ce:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d7d0:	b29b      	uxth	r3, r3
 800d7d2:	3b01      	subs	r3, #1
 800d7d4:	b29a      	uxth	r2, r3
 800d7d6:	68fb      	ldr	r3, [r7, #12]
 800d7d8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d7da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d7dc:	9300      	str	r3, [sp, #0]
 800d7de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800d7e0:	2200      	movs	r2, #0
 800d7e2:	494f      	ldr	r1, [pc, #316]	@ (800d920 <HAL_I2C_Mem_Read+0x448>)
 800d7e4:	68f8      	ldr	r0, [r7, #12]
 800d7e6:	f000 ffe7 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800d7ea:	4603      	mov	r3, r0
 800d7ec:	2b00      	cmp	r3, #0
 800d7ee:	d001      	beq.n	800d7f4 <HAL_I2C_Mem_Read+0x31c>
 800d7f0:	2301      	movs	r3, #1
 800d7f2:	e091      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d7f4:	68fb      	ldr	r3, [r7, #12]
 800d7f6:	681b      	ldr	r3, [r3, #0]
 800d7f8:	681a      	ldr	r2, [r3, #0]
 800d7fa:	68fb      	ldr	r3, [r7, #12]
 800d7fc:	681b      	ldr	r3, [r3, #0]
 800d7fe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800d802:	601a      	str	r2, [r3, #0]
 800d804:	68fb      	ldr	r3, [r7, #12]
 800d806:	681b      	ldr	r3, [r3, #0]
 800d808:	691a      	ldr	r2, [r3, #16]
 800d80a:	68fb      	ldr	r3, [r7, #12]
 800d80c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d80e:	b2d2      	uxtb	r2, r2
 800d810:	701a      	strb	r2, [r3, #0]
 800d812:	68fb      	ldr	r3, [r7, #12]
 800d814:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d816:	1c5a      	adds	r2, r3, #1
 800d818:	68fb      	ldr	r3, [r7, #12]
 800d81a:	625a      	str	r2, [r3, #36]	@ 0x24
 800d81c:	68fb      	ldr	r3, [r7, #12]
 800d81e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d820:	3b01      	subs	r3, #1
 800d822:	b29a      	uxth	r2, r3
 800d824:	68fb      	ldr	r3, [r7, #12]
 800d826:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d828:	68fb      	ldr	r3, [r7, #12]
 800d82a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d82c:	b29b      	uxth	r3, r3
 800d82e:	3b01      	subs	r3, #1
 800d830:	b29a      	uxth	r2, r3
 800d832:	68fb      	ldr	r3, [r7, #12]
 800d834:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d836:	68fb      	ldr	r3, [r7, #12]
 800d838:	681b      	ldr	r3, [r3, #0]
 800d83a:	691a      	ldr	r2, [r3, #16]
 800d83c:	68fb      	ldr	r3, [r7, #12]
 800d83e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d840:	b2d2      	uxtb	r2, r2
 800d842:	701a      	strb	r2, [r3, #0]
 800d844:	68fb      	ldr	r3, [r7, #12]
 800d846:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d848:	1c5a      	adds	r2, r3, #1
 800d84a:	68fb      	ldr	r3, [r7, #12]
 800d84c:	625a      	str	r2, [r3, #36]	@ 0x24
 800d84e:	68fb      	ldr	r3, [r7, #12]
 800d850:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d852:	3b01      	subs	r3, #1
 800d854:	b29a      	uxth	r2, r3
 800d856:	68fb      	ldr	r3, [r7, #12]
 800d858:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d85a:	68fb      	ldr	r3, [r7, #12]
 800d85c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d85e:	b29b      	uxth	r3, r3
 800d860:	3b01      	subs	r3, #1
 800d862:	b29a      	uxth	r2, r3
 800d864:	68fb      	ldr	r3, [r7, #12]
 800d866:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d868:	e042      	b.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d86a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800d86c:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 800d86e:	68f8      	ldr	r0, [r7, #12]
 800d870:	f001 f8fa 	bl	800ea68 <I2C_WaitOnRXNEFlagUntilTimeout>
 800d874:	4603      	mov	r3, r0
 800d876:	2b00      	cmp	r3, #0
 800d878:	d001      	beq.n	800d87e <HAL_I2C_Mem_Read+0x3a6>
 800d87a:	2301      	movs	r3, #1
 800d87c:	e04c      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d87e:	68fb      	ldr	r3, [r7, #12]
 800d880:	681b      	ldr	r3, [r3, #0]
 800d882:	691a      	ldr	r2, [r3, #16]
 800d884:	68fb      	ldr	r3, [r7, #12]
 800d886:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d888:	b2d2      	uxtb	r2, r2
 800d88a:	701a      	strb	r2, [r3, #0]
 800d88c:	68fb      	ldr	r3, [r7, #12]
 800d88e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d890:	1c5a      	adds	r2, r3, #1
 800d892:	68fb      	ldr	r3, [r7, #12]
 800d894:	625a      	str	r2, [r3, #36]	@ 0x24
 800d896:	68fb      	ldr	r3, [r7, #12]
 800d898:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d89a:	3b01      	subs	r3, #1
 800d89c:	b29a      	uxth	r2, r3
 800d89e:	68fb      	ldr	r3, [r7, #12]
 800d8a0:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d8a2:	68fb      	ldr	r3, [r7, #12]
 800d8a4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d8a6:	b29b      	uxth	r3, r3
 800d8a8:	3b01      	subs	r3, #1
 800d8aa:	b29a      	uxth	r2, r3
 800d8ac:	68fb      	ldr	r3, [r7, #12]
 800d8ae:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d8b0:	68fb      	ldr	r3, [r7, #12]
 800d8b2:	681b      	ldr	r3, [r3, #0]
 800d8b4:	695b      	ldr	r3, [r3, #20]
 800d8b6:	f003 0304 	and.w	r3, r3, #4
 800d8ba:	2b04      	cmp	r3, #4
 800d8bc:	d118      	bne.n	800d8f0 <HAL_I2C_Mem_Read+0x418>
 800d8be:	68fb      	ldr	r3, [r7, #12]
 800d8c0:	681b      	ldr	r3, [r3, #0]
 800d8c2:	691a      	ldr	r2, [r3, #16]
 800d8c4:	68fb      	ldr	r3, [r7, #12]
 800d8c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d8c8:	b2d2      	uxtb	r2, r2
 800d8ca:	701a      	strb	r2, [r3, #0]
 800d8cc:	68fb      	ldr	r3, [r7, #12]
 800d8ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d8d0:	1c5a      	adds	r2, r3, #1
 800d8d2:	68fb      	ldr	r3, [r7, #12]
 800d8d4:	625a      	str	r2, [r3, #36]	@ 0x24
 800d8d6:	68fb      	ldr	r3, [r7, #12]
 800d8d8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d8da:	3b01      	subs	r3, #1
 800d8dc:	b29a      	uxth	r2, r3
 800d8de:	68fb      	ldr	r3, [r7, #12]
 800d8e0:	851a      	strh	r2, [r3, #40]	@ 0x28
 800d8e2:	68fb      	ldr	r3, [r7, #12]
 800d8e4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800d8e6:	b29b      	uxth	r3, r3
 800d8e8:	3b01      	subs	r3, #1
 800d8ea:	b29a      	uxth	r2, r3
 800d8ec:	68fb      	ldr	r3, [r7, #12]
 800d8ee:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800d8f0:	68fb      	ldr	r3, [r7, #12]
 800d8f2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800d8f4:	2b00      	cmp	r3, #0
 800d8f6:	f47f aec2 	bne.w	800d67e <HAL_I2C_Mem_Read+0x1a6>
 800d8fa:	68fb      	ldr	r3, [r7, #12]
 800d8fc:	2220      	movs	r2, #32
 800d8fe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d902:	68fb      	ldr	r3, [r7, #12]
 800d904:	2200      	movs	r2, #0
 800d906:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d90a:	68fb      	ldr	r3, [r7, #12]
 800d90c:	2200      	movs	r2, #0
 800d90e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d912:	2300      	movs	r3, #0
 800d914:	e000      	b.n	800d918 <HAL_I2C_Mem_Read+0x440>
 800d916:	2302      	movs	r3, #2
 800d918:	4618      	mov	r0, r3
 800d91a:	3728      	adds	r7, #40	@ 0x28
 800d91c:	46bd      	mov	sp, r7
 800d91e:	bd80      	pop	{r7, pc}
 800d920:	00010004 	.word	0x00010004

0800d924 <HAL_I2C_Mem_Read_DMA>:
 800d924:	b580      	push	{r7, lr}
 800d926:	b08c      	sub	sp, #48	@ 0x30
 800d928:	af02      	add	r7, sp, #8
 800d92a:	60f8      	str	r0, [r7, #12]
 800d92c:	4608      	mov	r0, r1
 800d92e:	4611      	mov	r1, r2
 800d930:	461a      	mov	r2, r3
 800d932:	4603      	mov	r3, r0
 800d934:	817b      	strh	r3, [r7, #10]
 800d936:	460b      	mov	r3, r1
 800d938:	813b      	strh	r3, [r7, #8]
 800d93a:	4613      	mov	r3, r2
 800d93c:	80fb      	strh	r3, [r7, #6]
 800d93e:	f7fd fb8b 	bl	800b058 <HAL_GetTick>
 800d942:	6278      	str	r0, [r7, #36]	@ 0x24
 800d944:	2300      	movs	r3, #0
 800d946:	61fb      	str	r3, [r7, #28]
 800d948:	68fb      	ldr	r3, [r7, #12]
 800d94a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800d94e:	b2db      	uxtb	r3, r3
 800d950:	2b20      	cmp	r3, #32
 800d952:	f040 8176 	bne.w	800dc42 <HAL_I2C_Mem_Read_DMA+0x31e>
 800d956:	4b95      	ldr	r3, [pc, #596]	@ (800dbac <HAL_I2C_Mem_Read_DMA+0x288>)
 800d958:	681b      	ldr	r3, [r3, #0]
 800d95a:	08db      	lsrs	r3, r3, #3
 800d95c:	4a94      	ldr	r2, [pc, #592]	@ (800dbb0 <HAL_I2C_Mem_Read_DMA+0x28c>)
 800d95e:	fba2 2303 	umull	r2, r3, r2, r3
 800d962:	0a1a      	lsrs	r2, r3, #8
 800d964:	4613      	mov	r3, r2
 800d966:	009b      	lsls	r3, r3, #2
 800d968:	4413      	add	r3, r2
 800d96a:	009a      	lsls	r2, r3, #2
 800d96c:	4413      	add	r3, r2
 800d96e:	61fb      	str	r3, [r7, #28]
 800d970:	69fb      	ldr	r3, [r7, #28]
 800d972:	3b01      	subs	r3, #1
 800d974:	61fb      	str	r3, [r7, #28]
 800d976:	69fb      	ldr	r3, [r7, #28]
 800d978:	2b00      	cmp	r3, #0
 800d97a:	d116      	bne.n	800d9aa <HAL_I2C_Mem_Read_DMA+0x86>
 800d97c:	68fb      	ldr	r3, [r7, #12]
 800d97e:	2200      	movs	r2, #0
 800d980:	631a      	str	r2, [r3, #48]	@ 0x30
 800d982:	68fb      	ldr	r3, [r7, #12]
 800d984:	2220      	movs	r2, #32
 800d986:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800d98a:	68fb      	ldr	r3, [r7, #12]
 800d98c:	2200      	movs	r2, #0
 800d98e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800d992:	68fb      	ldr	r3, [r7, #12]
 800d994:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d996:	f043 0220 	orr.w	r2, r3, #32
 800d99a:	68fb      	ldr	r3, [r7, #12]
 800d99c:	641a      	str	r2, [r3, #64]	@ 0x40
 800d99e:	68fb      	ldr	r3, [r7, #12]
 800d9a0:	2200      	movs	r2, #0
 800d9a2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d9a6:	2301      	movs	r3, #1
 800d9a8:	e14c      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800d9aa:	68fb      	ldr	r3, [r7, #12]
 800d9ac:	681b      	ldr	r3, [r3, #0]
 800d9ae:	699b      	ldr	r3, [r3, #24]
 800d9b0:	f003 0302 	and.w	r3, r3, #2
 800d9b4:	2b02      	cmp	r3, #2
 800d9b6:	d0db      	beq.n	800d970 <HAL_I2C_Mem_Read_DMA+0x4c>
 800d9b8:	68fb      	ldr	r3, [r7, #12]
 800d9ba:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800d9be:	2b01      	cmp	r3, #1
 800d9c0:	d101      	bne.n	800d9c6 <HAL_I2C_Mem_Read_DMA+0xa2>
 800d9c2:	2302      	movs	r3, #2
 800d9c4:	e13e      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800d9c6:	68fb      	ldr	r3, [r7, #12]
 800d9c8:	2201      	movs	r2, #1
 800d9ca:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800d9ce:	68fb      	ldr	r3, [r7, #12]
 800d9d0:	681b      	ldr	r3, [r3, #0]
 800d9d2:	681b      	ldr	r3, [r3, #0]
 800d9d4:	f003 0301 	and.w	r3, r3, #1
 800d9d8:	2b01      	cmp	r3, #1
 800d9da:	d007      	beq.n	800d9ec <HAL_I2C_Mem_Read_DMA+0xc8>
 800d9dc:	68fb      	ldr	r3, [r7, #12]
 800d9de:	681b      	ldr	r3, [r3, #0]
 800d9e0:	681a      	ldr	r2, [r3, #0]
 800d9e2:	68fb      	ldr	r3, [r7, #12]
 800d9e4:	681b      	ldr	r3, [r3, #0]
 800d9e6:	f042 0201 	orr.w	r2, r2, #1
 800d9ea:	601a      	str	r2, [r3, #0]
 800d9ec:	68fb      	ldr	r3, [r7, #12]
 800d9ee:	681b      	ldr	r3, [r3, #0]
 800d9f0:	681a      	ldr	r2, [r3, #0]
 800d9f2:	68fb      	ldr	r3, [r7, #12]
 800d9f4:	681b      	ldr	r3, [r3, #0]
 800d9f6:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800d9fa:	601a      	str	r2, [r3, #0]
 800d9fc:	68fb      	ldr	r3, [r7, #12]
 800d9fe:	2222      	movs	r2, #34	@ 0x22
 800da00:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800da04:	68fb      	ldr	r3, [r7, #12]
 800da06:	2240      	movs	r2, #64	@ 0x40
 800da08:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800da0c:	68fb      	ldr	r3, [r7, #12]
 800da0e:	2200      	movs	r2, #0
 800da10:	641a      	str	r2, [r3, #64]	@ 0x40
 800da12:	68fb      	ldr	r3, [r7, #12]
 800da14:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800da16:	625a      	str	r2, [r3, #36]	@ 0x24
 800da18:	68fb      	ldr	r3, [r7, #12]
 800da1a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 800da1c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800da1e:	68fb      	ldr	r3, [r7, #12]
 800da20:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800da22:	b29a      	uxth	r2, r3
 800da24:	68fb      	ldr	r3, [r7, #12]
 800da26:	851a      	strh	r2, [r3, #40]	@ 0x28
 800da28:	68fb      	ldr	r3, [r7, #12]
 800da2a:	4a62      	ldr	r2, [pc, #392]	@ (800dbb4 <HAL_I2C_Mem_Read_DMA+0x290>)
 800da2c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800da2e:	897a      	ldrh	r2, [r7, #10]
 800da30:	68fb      	ldr	r3, [r7, #12]
 800da32:	645a      	str	r2, [r3, #68]	@ 0x44
 800da34:	893a      	ldrh	r2, [r7, #8]
 800da36:	68fb      	ldr	r3, [r7, #12]
 800da38:	649a      	str	r2, [r3, #72]	@ 0x48
 800da3a:	88fa      	ldrh	r2, [r7, #6]
 800da3c:	68fb      	ldr	r3, [r7, #12]
 800da3e:	64da      	str	r2, [r3, #76]	@ 0x4c
 800da40:	68fb      	ldr	r3, [r7, #12]
 800da42:	2200      	movs	r2, #0
 800da44:	651a      	str	r2, [r3, #80]	@ 0x50
 800da46:	68fb      	ldr	r3, [r7, #12]
 800da48:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800da4a:	2b00      	cmp	r3, #0
 800da4c:	f000 80cc 	beq.w	800dbe8 <HAL_I2C_Mem_Read_DMA+0x2c4>
 800da50:	68fb      	ldr	r3, [r7, #12]
 800da52:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da54:	2b00      	cmp	r3, #0
 800da56:	d02d      	beq.n	800dab4 <HAL_I2C_Mem_Read_DMA+0x190>
 800da58:	68fb      	ldr	r3, [r7, #12]
 800da5a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da5c:	4a56      	ldr	r2, [pc, #344]	@ (800dbb8 <HAL_I2C_Mem_Read_DMA+0x294>)
 800da5e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800da60:	68fb      	ldr	r3, [r7, #12]
 800da62:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da64:	4a55      	ldr	r2, [pc, #340]	@ (800dbbc <HAL_I2C_Mem_Read_DMA+0x298>)
 800da66:	64da      	str	r2, [r3, #76]	@ 0x4c
 800da68:	68fb      	ldr	r3, [r7, #12]
 800da6a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da6c:	2200      	movs	r2, #0
 800da6e:	641a      	str	r2, [r3, #64]	@ 0x40
 800da70:	68fb      	ldr	r3, [r7, #12]
 800da72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da74:	2200      	movs	r2, #0
 800da76:	645a      	str	r2, [r3, #68]	@ 0x44
 800da78:	68fb      	ldr	r3, [r7, #12]
 800da7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da7c:	2200      	movs	r2, #0
 800da7e:	649a      	str	r2, [r3, #72]	@ 0x48
 800da80:	68fb      	ldr	r3, [r7, #12]
 800da82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800da84:	2200      	movs	r2, #0
 800da86:	651a      	str	r2, [r3, #80]	@ 0x50
 800da88:	68fb      	ldr	r3, [r7, #12]
 800da8a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800da8c:	68fb      	ldr	r3, [r7, #12]
 800da8e:	681b      	ldr	r3, [r3, #0]
 800da90:	3310      	adds	r3, #16
 800da92:	4619      	mov	r1, r3
 800da94:	68fb      	ldr	r3, [r7, #12]
 800da96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800da98:	461a      	mov	r2, r3
 800da9a:	68fb      	ldr	r3, [r7, #12]
 800da9c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800da9e:	f7fe fdaf 	bl	800c600 <HAL_DMA_Start_IT>
 800daa2:	4603      	mov	r3, r0
 800daa4:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800daa8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800daac:	2b00      	cmp	r3, #0
 800daae:	f040 8087 	bne.w	800dbc0 <HAL_I2C_Mem_Read_DMA+0x29c>
 800dab2:	e013      	b.n	800dadc <HAL_I2C_Mem_Read_DMA+0x1b8>
 800dab4:	68fb      	ldr	r3, [r7, #12]
 800dab6:	2220      	movs	r2, #32
 800dab8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dabc:	68fb      	ldr	r3, [r7, #12]
 800dabe:	2200      	movs	r2, #0
 800dac0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800dac4:	68fb      	ldr	r3, [r7, #12]
 800dac6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dac8:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800dacc:	68fb      	ldr	r3, [r7, #12]
 800dace:	641a      	str	r2, [r3, #64]	@ 0x40
 800dad0:	68fb      	ldr	r3, [r7, #12]
 800dad2:	2200      	movs	r2, #0
 800dad4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dad8:	2301      	movs	r3, #1
 800dada:	e0b3      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800dadc:	88f8      	ldrh	r0, [r7, #6]
 800dade:	893a      	ldrh	r2, [r7, #8]
 800dae0:	8979      	ldrh	r1, [r7, #10]
 800dae2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dae4:	9301      	str	r3, [sp, #4]
 800dae6:	2323      	movs	r3, #35	@ 0x23
 800dae8:	9300      	str	r3, [sp, #0]
 800daea:	4603      	mov	r3, r0
 800daec:	68f8      	ldr	r0, [r7, #12]
 800daee:	f000 fbc1 	bl	800e274 <I2C_RequestMemoryRead>
 800daf2:	4603      	mov	r3, r0
 800daf4:	2b00      	cmp	r3, #0
 800daf6:	d023      	beq.n	800db40 <HAL_I2C_Mem_Read_DMA+0x21c>
 800daf8:	68fb      	ldr	r3, [r7, #12]
 800dafa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dafc:	4618      	mov	r0, r3
 800dafe:	f7fe fe47 	bl	800c790 <HAL_DMA_Abort_IT>
 800db02:	4603      	mov	r3, r0
 800db04:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800db08:	68fb      	ldr	r3, [r7, #12]
 800db0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800db0c:	2200      	movs	r2, #0
 800db0e:	63da      	str	r2, [r3, #60]	@ 0x3c
 800db10:	68fb      	ldr	r3, [r7, #12]
 800db12:	681b      	ldr	r3, [r3, #0]
 800db14:	681a      	ldr	r2, [r3, #0]
 800db16:	68fb      	ldr	r3, [r7, #12]
 800db18:	681b      	ldr	r3, [r3, #0]
 800db1a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800db1e:	601a      	str	r2, [r3, #0]
 800db20:	68fb      	ldr	r3, [r7, #12]
 800db22:	2200      	movs	r2, #0
 800db24:	851a      	strh	r2, [r3, #40]	@ 0x28
 800db26:	68fb      	ldr	r3, [r7, #12]
 800db28:	2200      	movs	r2, #0
 800db2a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800db2c:	68fb      	ldr	r3, [r7, #12]
 800db2e:	681b      	ldr	r3, [r3, #0]
 800db30:	681a      	ldr	r2, [r3, #0]
 800db32:	68fb      	ldr	r3, [r7, #12]
 800db34:	681b      	ldr	r3, [r3, #0]
 800db36:	f022 0201 	bic.w	r2, r2, #1
 800db3a:	601a      	str	r2, [r3, #0]
 800db3c:	2301      	movs	r3, #1
 800db3e:	e081      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800db40:	68fb      	ldr	r3, [r7, #12]
 800db42:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800db44:	2b01      	cmp	r3, #1
 800db46:	d108      	bne.n	800db5a <HAL_I2C_Mem_Read_DMA+0x236>
 800db48:	68fb      	ldr	r3, [r7, #12]
 800db4a:	681b      	ldr	r3, [r3, #0]
 800db4c:	681a      	ldr	r2, [r3, #0]
 800db4e:	68fb      	ldr	r3, [r7, #12]
 800db50:	681b      	ldr	r3, [r3, #0]
 800db52:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800db56:	601a      	str	r2, [r3, #0]
 800db58:	e007      	b.n	800db6a <HAL_I2C_Mem_Read_DMA+0x246>
 800db5a:	68fb      	ldr	r3, [r7, #12]
 800db5c:	681b      	ldr	r3, [r3, #0]
 800db5e:	685a      	ldr	r2, [r3, #4]
 800db60:	68fb      	ldr	r3, [r7, #12]
 800db62:	681b      	ldr	r3, [r3, #0]
 800db64:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800db68:	605a      	str	r2, [r3, #4]
 800db6a:	2300      	movs	r3, #0
 800db6c:	61bb      	str	r3, [r7, #24]
 800db6e:	68fb      	ldr	r3, [r7, #12]
 800db70:	681b      	ldr	r3, [r3, #0]
 800db72:	695b      	ldr	r3, [r3, #20]
 800db74:	61bb      	str	r3, [r7, #24]
 800db76:	68fb      	ldr	r3, [r7, #12]
 800db78:	681b      	ldr	r3, [r3, #0]
 800db7a:	699b      	ldr	r3, [r3, #24]
 800db7c:	61bb      	str	r3, [r7, #24]
 800db7e:	69bb      	ldr	r3, [r7, #24]
 800db80:	68fb      	ldr	r3, [r7, #12]
 800db82:	2200      	movs	r2, #0
 800db84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800db88:	68fb      	ldr	r3, [r7, #12]
 800db8a:	681b      	ldr	r3, [r3, #0]
 800db8c:	685a      	ldr	r2, [r3, #4]
 800db8e:	68fb      	ldr	r3, [r7, #12]
 800db90:	681b      	ldr	r3, [r3, #0]
 800db92:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800db96:	605a      	str	r2, [r3, #4]
 800db98:	68fb      	ldr	r3, [r7, #12]
 800db9a:	681b      	ldr	r3, [r3, #0]
 800db9c:	685a      	ldr	r2, [r3, #4]
 800db9e:	68fb      	ldr	r3, [r7, #12]
 800dba0:	681b      	ldr	r3, [r3, #0]
 800dba2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800dba6:	605a      	str	r2, [r3, #4]
 800dba8:	e049      	b.n	800dc3e <HAL_I2C_Mem_Read_DMA+0x31a>
 800dbaa:	bf00      	nop
 800dbac:	20000004 	.word	0x20000004
 800dbb0:	14f8b589 	.word	0x14f8b589
 800dbb4:	ffff0000 	.word	0xffff0000
 800dbb8:	0800e445 	.word	0x0800e445
 800dbbc:	0800e5ef 	.word	0x0800e5ef
 800dbc0:	68fb      	ldr	r3, [r7, #12]
 800dbc2:	2220      	movs	r2, #32
 800dbc4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dbc8:	68fb      	ldr	r3, [r7, #12]
 800dbca:	2200      	movs	r2, #0
 800dbcc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800dbd0:	68fb      	ldr	r3, [r7, #12]
 800dbd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dbd4:	f043 0210 	orr.w	r2, r3, #16
 800dbd8:	68fb      	ldr	r3, [r7, #12]
 800dbda:	641a      	str	r2, [r3, #64]	@ 0x40
 800dbdc:	68fb      	ldr	r3, [r7, #12]
 800dbde:	2200      	movs	r2, #0
 800dbe0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dbe4:	2301      	movs	r3, #1
 800dbe6:	e02d      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800dbe8:	88f8      	ldrh	r0, [r7, #6]
 800dbea:	893a      	ldrh	r2, [r7, #8]
 800dbec:	8979      	ldrh	r1, [r7, #10]
 800dbee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dbf0:	9301      	str	r3, [sp, #4]
 800dbf2:	2323      	movs	r3, #35	@ 0x23
 800dbf4:	9300      	str	r3, [sp, #0]
 800dbf6:	4603      	mov	r3, r0
 800dbf8:	68f8      	ldr	r0, [r7, #12]
 800dbfa:	f000 fb3b 	bl	800e274 <I2C_RequestMemoryRead>
 800dbfe:	4603      	mov	r3, r0
 800dc00:	2b00      	cmp	r3, #0
 800dc02:	d001      	beq.n	800dc08 <HAL_I2C_Mem_Read_DMA+0x2e4>
 800dc04:	2301      	movs	r3, #1
 800dc06:	e01d      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800dc08:	2300      	movs	r3, #0
 800dc0a:	617b      	str	r3, [r7, #20]
 800dc0c:	68fb      	ldr	r3, [r7, #12]
 800dc0e:	681b      	ldr	r3, [r3, #0]
 800dc10:	695b      	ldr	r3, [r3, #20]
 800dc12:	617b      	str	r3, [r7, #20]
 800dc14:	68fb      	ldr	r3, [r7, #12]
 800dc16:	681b      	ldr	r3, [r3, #0]
 800dc18:	699b      	ldr	r3, [r3, #24]
 800dc1a:	617b      	str	r3, [r7, #20]
 800dc1c:	697b      	ldr	r3, [r7, #20]
 800dc1e:	68fb      	ldr	r3, [r7, #12]
 800dc20:	681b      	ldr	r3, [r3, #0]
 800dc22:	681a      	ldr	r2, [r3, #0]
 800dc24:	68fb      	ldr	r3, [r7, #12]
 800dc26:	681b      	ldr	r3, [r3, #0]
 800dc28:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800dc2c:	601a      	str	r2, [r3, #0]
 800dc2e:	68fb      	ldr	r3, [r7, #12]
 800dc30:	2220      	movs	r2, #32
 800dc32:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dc36:	68fb      	ldr	r3, [r7, #12]
 800dc38:	2200      	movs	r2, #0
 800dc3a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dc3e:	2300      	movs	r3, #0
 800dc40:	e000      	b.n	800dc44 <HAL_I2C_Mem_Read_DMA+0x320>
 800dc42:	2302      	movs	r3, #2
 800dc44:	4618      	mov	r0, r3
 800dc46:	3728      	adds	r7, #40	@ 0x28
 800dc48:	46bd      	mov	sp, r7
 800dc4a:	bd80      	pop	{r7, pc}

0800dc4c <HAL_I2C_ER_IRQHandler>:
 800dc4c:	b580      	push	{r7, lr}
 800dc4e:	b08a      	sub	sp, #40	@ 0x28
 800dc50:	af00      	add	r7, sp, #0
 800dc52:	6078      	str	r0, [r7, #4]
 800dc54:	687b      	ldr	r3, [r7, #4]
 800dc56:	681b      	ldr	r3, [r3, #0]
 800dc58:	695b      	ldr	r3, [r3, #20]
 800dc5a:	623b      	str	r3, [r7, #32]
 800dc5c:	687b      	ldr	r3, [r7, #4]
 800dc5e:	681b      	ldr	r3, [r3, #0]
 800dc60:	685b      	ldr	r3, [r3, #4]
 800dc62:	61fb      	str	r3, [r7, #28]
 800dc64:	2300      	movs	r3, #0
 800dc66:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc68:	687b      	ldr	r3, [r7, #4]
 800dc6a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800dc6e:	76fb      	strb	r3, [r7, #27]
 800dc70:	6a3b      	ldr	r3, [r7, #32]
 800dc72:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc76:	2b00      	cmp	r3, #0
 800dc78:	d00d      	beq.n	800dc96 <HAL_I2C_ER_IRQHandler+0x4a>
 800dc7a:	69fb      	ldr	r3, [r7, #28]
 800dc7c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dc80:	2b00      	cmp	r3, #0
 800dc82:	d008      	beq.n	800dc96 <HAL_I2C_ER_IRQHandler+0x4a>
 800dc84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dc86:	f043 0301 	orr.w	r3, r3, #1
 800dc8a:	627b      	str	r3, [r7, #36]	@ 0x24
 800dc8c:	687b      	ldr	r3, [r7, #4]
 800dc8e:	681b      	ldr	r3, [r3, #0]
 800dc90:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 800dc94:	615a      	str	r2, [r3, #20]
 800dc96:	6a3b      	ldr	r3, [r7, #32]
 800dc98:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800dc9c:	2b00      	cmp	r3, #0
 800dc9e:	d00d      	beq.n	800dcbc <HAL_I2C_ER_IRQHandler+0x70>
 800dca0:	69fb      	ldr	r3, [r7, #28]
 800dca2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dca6:	2b00      	cmp	r3, #0
 800dca8:	d008      	beq.n	800dcbc <HAL_I2C_ER_IRQHandler+0x70>
 800dcaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dcac:	f043 0302 	orr.w	r3, r3, #2
 800dcb0:	627b      	str	r3, [r7, #36]	@ 0x24
 800dcb2:	687b      	ldr	r3, [r7, #4]
 800dcb4:	681b      	ldr	r3, [r3, #0]
 800dcb6:	f46f 7200 	mvn.w	r2, #512	@ 0x200
 800dcba:	615a      	str	r2, [r3, #20]
 800dcbc:	6a3b      	ldr	r3, [r7, #32]
 800dcbe:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800dcc2:	2b00      	cmp	r3, #0
 800dcc4:	d03e      	beq.n	800dd44 <HAL_I2C_ER_IRQHandler+0xf8>
 800dcc6:	69fb      	ldr	r3, [r7, #28]
 800dcc8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dccc:	2b00      	cmp	r3, #0
 800dcce:	d039      	beq.n	800dd44 <HAL_I2C_ER_IRQHandler+0xf8>
 800dcd0:	7efb      	ldrb	r3, [r7, #27]
 800dcd2:	76bb      	strb	r3, [r7, #26]
 800dcd4:	687b      	ldr	r3, [r7, #4]
 800dcd6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800dcd8:	b29b      	uxth	r3, r3
 800dcda:	617b      	str	r3, [r7, #20]
 800dcdc:	687b      	ldr	r3, [r7, #4]
 800dcde:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800dce2:	74fb      	strb	r3, [r7, #19]
 800dce4:	687b      	ldr	r3, [r7, #4]
 800dce6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800dce8:	60fb      	str	r3, [r7, #12]
 800dcea:	7ebb      	ldrb	r3, [r7, #26]
 800dcec:	2b20      	cmp	r3, #32
 800dcee:	d112      	bne.n	800dd16 <HAL_I2C_ER_IRQHandler+0xca>
 800dcf0:	697b      	ldr	r3, [r7, #20]
 800dcf2:	2b00      	cmp	r3, #0
 800dcf4:	d10f      	bne.n	800dd16 <HAL_I2C_ER_IRQHandler+0xca>
 800dcf6:	7cfb      	ldrb	r3, [r7, #19]
 800dcf8:	2b21      	cmp	r3, #33	@ 0x21
 800dcfa:	d008      	beq.n	800dd0e <HAL_I2C_ER_IRQHandler+0xc2>
 800dcfc:	7cfb      	ldrb	r3, [r7, #19]
 800dcfe:	2b29      	cmp	r3, #41	@ 0x29
 800dd00:	d005      	beq.n	800dd0e <HAL_I2C_ER_IRQHandler+0xc2>
 800dd02:	7cfb      	ldrb	r3, [r7, #19]
 800dd04:	2b28      	cmp	r3, #40	@ 0x28
 800dd06:	d106      	bne.n	800dd16 <HAL_I2C_ER_IRQHandler+0xca>
 800dd08:	68fb      	ldr	r3, [r7, #12]
 800dd0a:	2b21      	cmp	r3, #33	@ 0x21
 800dd0c:	d103      	bne.n	800dd16 <HAL_I2C_ER_IRQHandler+0xca>
 800dd0e:	6878      	ldr	r0, [r7, #4]
 800dd10:	f000 f878 	bl	800de04 <I2C_Slave_AF>
 800dd14:	e016      	b.n	800dd44 <HAL_I2C_ER_IRQHandler+0xf8>
 800dd16:	687b      	ldr	r3, [r7, #4]
 800dd18:	681b      	ldr	r3, [r3, #0]
 800dd1a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800dd1e:	615a      	str	r2, [r3, #20]
 800dd20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd22:	f043 0304 	orr.w	r3, r3, #4
 800dd26:	627b      	str	r3, [r7, #36]	@ 0x24
 800dd28:	7efb      	ldrb	r3, [r7, #27]
 800dd2a:	2b10      	cmp	r3, #16
 800dd2c:	d002      	beq.n	800dd34 <HAL_I2C_ER_IRQHandler+0xe8>
 800dd2e:	7efb      	ldrb	r3, [r7, #27]
 800dd30:	2b40      	cmp	r3, #64	@ 0x40
 800dd32:	d107      	bne.n	800dd44 <HAL_I2C_ER_IRQHandler+0xf8>
 800dd34:	687b      	ldr	r3, [r7, #4]
 800dd36:	681b      	ldr	r3, [r3, #0]
 800dd38:	681a      	ldr	r2, [r3, #0]
 800dd3a:	687b      	ldr	r3, [r7, #4]
 800dd3c:	681b      	ldr	r3, [r3, #0]
 800dd3e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800dd42:	601a      	str	r2, [r3, #0]
 800dd44:	6a3b      	ldr	r3, [r7, #32]
 800dd46:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800dd4a:	2b00      	cmp	r3, #0
 800dd4c:	d00d      	beq.n	800dd6a <HAL_I2C_ER_IRQHandler+0x11e>
 800dd4e:	69fb      	ldr	r3, [r7, #28]
 800dd50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800dd54:	2b00      	cmp	r3, #0
 800dd56:	d008      	beq.n	800dd6a <HAL_I2C_ER_IRQHandler+0x11e>
 800dd58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd5a:	f043 0308 	orr.w	r3, r3, #8
 800dd5e:	627b      	str	r3, [r7, #36]	@ 0x24
 800dd60:	687b      	ldr	r3, [r7, #4]
 800dd62:	681b      	ldr	r3, [r3, #0]
 800dd64:	f46f 6200 	mvn.w	r2, #2048	@ 0x800
 800dd68:	615a      	str	r2, [r3, #20]
 800dd6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd6c:	2b00      	cmp	r3, #0
 800dd6e:	d008      	beq.n	800dd82 <HAL_I2C_ER_IRQHandler+0x136>
 800dd70:	687b      	ldr	r3, [r7, #4]
 800dd72:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800dd74:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd76:	431a      	orrs	r2, r3
 800dd78:	687b      	ldr	r3, [r7, #4]
 800dd7a:	641a      	str	r2, [r3, #64]	@ 0x40
 800dd7c:	6878      	ldr	r0, [r7, #4]
 800dd7e:	f000 f8b1 	bl	800dee4 <I2C_ITError>
 800dd82:	bf00      	nop
 800dd84:	3728      	adds	r7, #40	@ 0x28
 800dd86:	46bd      	mov	sp, r7
 800dd88:	bd80      	pop	{r7, pc}

0800dd8a <HAL_I2C_MasterRxCpltCallback>:
 800dd8a:	b480      	push	{r7}
 800dd8c:	b083      	sub	sp, #12
 800dd8e:	af00      	add	r7, sp, #0
 800dd90:	6078      	str	r0, [r7, #4]
 800dd92:	bf00      	nop
 800dd94:	370c      	adds	r7, #12
 800dd96:	46bd      	mov	sp, r7
 800dd98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd9c:	4770      	bx	lr

0800dd9e <HAL_I2C_SlaveTxCpltCallback>:
 800dd9e:	b480      	push	{r7}
 800dda0:	b083      	sub	sp, #12
 800dda2:	af00      	add	r7, sp, #0
 800dda4:	6078      	str	r0, [r7, #4]
 800dda6:	bf00      	nop
 800dda8:	370c      	adds	r7, #12
 800ddaa:	46bd      	mov	sp, r7
 800ddac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddb0:	4770      	bx	lr

0800ddb2 <HAL_I2C_SlaveRxCpltCallback>:
 800ddb2:	b480      	push	{r7}
 800ddb4:	b083      	sub	sp, #12
 800ddb6:	af00      	add	r7, sp, #0
 800ddb8:	6078      	str	r0, [r7, #4]
 800ddba:	bf00      	nop
 800ddbc:	370c      	adds	r7, #12
 800ddbe:	46bd      	mov	sp, r7
 800ddc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddc4:	4770      	bx	lr

0800ddc6 <HAL_I2C_ListenCpltCallback>:
 800ddc6:	b480      	push	{r7}
 800ddc8:	b083      	sub	sp, #12
 800ddca:	af00      	add	r7, sp, #0
 800ddcc:	6078      	str	r0, [r7, #4]
 800ddce:	bf00      	nop
 800ddd0:	370c      	adds	r7, #12
 800ddd2:	46bd      	mov	sp, r7
 800ddd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddd8:	4770      	bx	lr

0800ddda <HAL_I2C_ErrorCallback>:
 800ddda:	b480      	push	{r7}
 800dddc:	b083      	sub	sp, #12
 800ddde:	af00      	add	r7, sp, #0
 800dde0:	6078      	str	r0, [r7, #4]
 800dde2:	bf00      	nop
 800dde4:	370c      	adds	r7, #12
 800dde6:	46bd      	mov	sp, r7
 800dde8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddec:	4770      	bx	lr

0800ddee <HAL_I2C_AbortCpltCallback>:
 800ddee:	b480      	push	{r7}
 800ddf0:	b083      	sub	sp, #12
 800ddf2:	af00      	add	r7, sp, #0
 800ddf4:	6078      	str	r0, [r7, #4]
 800ddf6:	bf00      	nop
 800ddf8:	370c      	adds	r7, #12
 800ddfa:	46bd      	mov	sp, r7
 800ddfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de00:	4770      	bx	lr
	...

0800de04 <I2C_Slave_AF>:
 800de04:	b580      	push	{r7, lr}
 800de06:	b084      	sub	sp, #16
 800de08:	af00      	add	r7, sp, #0
 800de0a:	6078      	str	r0, [r7, #4]
 800de0c:	687b      	ldr	r3, [r7, #4]
 800de0e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800de12:	73fb      	strb	r3, [r7, #15]
 800de14:	687b      	ldr	r3, [r7, #4]
 800de16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de18:	60bb      	str	r3, [r7, #8]
 800de1a:	68bb      	ldr	r3, [r7, #8]
 800de1c:	2b08      	cmp	r3, #8
 800de1e:	d002      	beq.n	800de26 <I2C_Slave_AF+0x22>
 800de20:	68bb      	ldr	r3, [r7, #8]
 800de22:	2b20      	cmp	r3, #32
 800de24:	d129      	bne.n	800de7a <I2C_Slave_AF+0x76>
 800de26:	7bfb      	ldrb	r3, [r7, #15]
 800de28:	2b28      	cmp	r3, #40	@ 0x28
 800de2a:	d126      	bne.n	800de7a <I2C_Slave_AF+0x76>
 800de2c:	687b      	ldr	r3, [r7, #4]
 800de2e:	4a2c      	ldr	r2, [pc, #176]	@ (800dee0 <I2C_Slave_AF+0xdc>)
 800de30:	62da      	str	r2, [r3, #44]	@ 0x2c
 800de32:	687b      	ldr	r3, [r7, #4]
 800de34:	681b      	ldr	r3, [r3, #0]
 800de36:	685a      	ldr	r2, [r3, #4]
 800de38:	687b      	ldr	r3, [r7, #4]
 800de3a:	681b      	ldr	r3, [r3, #0]
 800de3c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800de40:	605a      	str	r2, [r3, #4]
 800de42:	687b      	ldr	r3, [r7, #4]
 800de44:	681b      	ldr	r3, [r3, #0]
 800de46:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800de4a:	615a      	str	r2, [r3, #20]
 800de4c:	687b      	ldr	r3, [r7, #4]
 800de4e:	681b      	ldr	r3, [r3, #0]
 800de50:	681a      	ldr	r2, [r3, #0]
 800de52:	687b      	ldr	r3, [r7, #4]
 800de54:	681b      	ldr	r3, [r3, #0]
 800de56:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800de5a:	601a      	str	r2, [r3, #0]
 800de5c:	687b      	ldr	r3, [r7, #4]
 800de5e:	2200      	movs	r2, #0
 800de60:	631a      	str	r2, [r3, #48]	@ 0x30
 800de62:	687b      	ldr	r3, [r7, #4]
 800de64:	2220      	movs	r2, #32
 800de66:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800de6a:	687b      	ldr	r3, [r7, #4]
 800de6c:	2200      	movs	r2, #0
 800de6e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800de72:	6878      	ldr	r0, [r7, #4]
 800de74:	f7ff ffa7 	bl	800ddc6 <HAL_I2C_ListenCpltCallback>
 800de78:	e02e      	b.n	800ded8 <I2C_Slave_AF+0xd4>
 800de7a:	7bfb      	ldrb	r3, [r7, #15]
 800de7c:	2b21      	cmp	r3, #33	@ 0x21
 800de7e:	d126      	bne.n	800dece <I2C_Slave_AF+0xca>
 800de80:	687b      	ldr	r3, [r7, #4]
 800de82:	4a17      	ldr	r2, [pc, #92]	@ (800dee0 <I2C_Slave_AF+0xdc>)
 800de84:	62da      	str	r2, [r3, #44]	@ 0x2c
 800de86:	687b      	ldr	r3, [r7, #4]
 800de88:	2221      	movs	r2, #33	@ 0x21
 800de8a:	631a      	str	r2, [r3, #48]	@ 0x30
 800de8c:	687b      	ldr	r3, [r7, #4]
 800de8e:	2220      	movs	r2, #32
 800de90:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800de94:	687b      	ldr	r3, [r7, #4]
 800de96:	2200      	movs	r2, #0
 800de98:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800de9c:	687b      	ldr	r3, [r7, #4]
 800de9e:	681b      	ldr	r3, [r3, #0]
 800dea0:	685a      	ldr	r2, [r3, #4]
 800dea2:	687b      	ldr	r3, [r7, #4]
 800dea4:	681b      	ldr	r3, [r3, #0]
 800dea6:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800deaa:	605a      	str	r2, [r3, #4]
 800deac:	687b      	ldr	r3, [r7, #4]
 800deae:	681b      	ldr	r3, [r3, #0]
 800deb0:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800deb4:	615a      	str	r2, [r3, #20]
 800deb6:	687b      	ldr	r3, [r7, #4]
 800deb8:	681b      	ldr	r3, [r3, #0]
 800deba:	681a      	ldr	r2, [r3, #0]
 800debc:	687b      	ldr	r3, [r7, #4]
 800debe:	681b      	ldr	r3, [r3, #0]
 800dec0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800dec4:	601a      	str	r2, [r3, #0]
 800dec6:	6878      	ldr	r0, [r7, #4]
 800dec8:	f7ff ff69 	bl	800dd9e <HAL_I2C_SlaveTxCpltCallback>
 800decc:	e004      	b.n	800ded8 <I2C_Slave_AF+0xd4>
 800dece:	687b      	ldr	r3, [r7, #4]
 800ded0:	681b      	ldr	r3, [r3, #0]
 800ded2:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800ded6:	615a      	str	r2, [r3, #20]
 800ded8:	bf00      	nop
 800deda:	3710      	adds	r7, #16
 800dedc:	46bd      	mov	sp, r7
 800dede:	bd80      	pop	{r7, pc}
 800dee0:	ffff0000 	.word	0xffff0000

0800dee4 <I2C_ITError>:
 800dee4:	b580      	push	{r7, lr}
 800dee6:	b084      	sub	sp, #16
 800dee8:	af00      	add	r7, sp, #0
 800deea:	6078      	str	r0, [r7, #4]
 800deec:	687b      	ldr	r3, [r7, #4]
 800deee:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800def2:	73fb      	strb	r3, [r7, #15]
 800def4:	687b      	ldr	r3, [r7, #4]
 800def6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800defa:	73bb      	strb	r3, [r7, #14]
 800defc:	7bbb      	ldrb	r3, [r7, #14]
 800defe:	2b10      	cmp	r3, #16
 800df00:	d002      	beq.n	800df08 <I2C_ITError+0x24>
 800df02:	7bbb      	ldrb	r3, [r7, #14]
 800df04:	2b40      	cmp	r3, #64	@ 0x40
 800df06:	d10a      	bne.n	800df1e <I2C_ITError+0x3a>
 800df08:	7bfb      	ldrb	r3, [r7, #15]
 800df0a:	2b22      	cmp	r3, #34	@ 0x22
 800df0c:	d107      	bne.n	800df1e <I2C_ITError+0x3a>
 800df0e:	687b      	ldr	r3, [r7, #4]
 800df10:	681b      	ldr	r3, [r3, #0]
 800df12:	681a      	ldr	r2, [r3, #0]
 800df14:	687b      	ldr	r3, [r7, #4]
 800df16:	681b      	ldr	r3, [r3, #0]
 800df18:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800df1c:	601a      	str	r2, [r3, #0]
 800df1e:	7bfb      	ldrb	r3, [r7, #15]
 800df20:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800df24:	2b28      	cmp	r3, #40	@ 0x28
 800df26:	d107      	bne.n	800df38 <I2C_ITError+0x54>
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	2200      	movs	r2, #0
 800df2c:	631a      	str	r2, [r3, #48]	@ 0x30
 800df2e:	687b      	ldr	r3, [r7, #4]
 800df30:	2228      	movs	r2, #40	@ 0x28
 800df32:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800df36:	e015      	b.n	800df64 <I2C_ITError+0x80>
 800df38:	687b      	ldr	r3, [r7, #4]
 800df3a:	681b      	ldr	r3, [r3, #0]
 800df3c:	685b      	ldr	r3, [r3, #4]
 800df3e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800df42:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800df46:	d00a      	beq.n	800df5e <I2C_ITError+0x7a>
 800df48:	7bfb      	ldrb	r3, [r7, #15]
 800df4a:	2b60      	cmp	r3, #96	@ 0x60
 800df4c:	d007      	beq.n	800df5e <I2C_ITError+0x7a>
 800df4e:	687b      	ldr	r3, [r7, #4]
 800df50:	2220      	movs	r2, #32
 800df52:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800df56:	687b      	ldr	r3, [r7, #4]
 800df58:	2200      	movs	r2, #0
 800df5a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800df5e:	687b      	ldr	r3, [r7, #4]
 800df60:	2200      	movs	r2, #0
 800df62:	631a      	str	r2, [r3, #48]	@ 0x30
 800df64:	687b      	ldr	r3, [r7, #4]
 800df66:	681b      	ldr	r3, [r3, #0]
 800df68:	685b      	ldr	r3, [r3, #4]
 800df6a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800df6e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800df72:	d162      	bne.n	800e03a <I2C_ITError+0x156>
 800df74:	687b      	ldr	r3, [r7, #4]
 800df76:	681b      	ldr	r3, [r3, #0]
 800df78:	685a      	ldr	r2, [r3, #4]
 800df7a:	687b      	ldr	r3, [r7, #4]
 800df7c:	681b      	ldr	r3, [r3, #0]
 800df7e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800df82:	605a      	str	r2, [r3, #4]
 800df84:	687b      	ldr	r3, [r7, #4]
 800df86:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df88:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800df8c:	b2db      	uxtb	r3, r3
 800df8e:	2b01      	cmp	r3, #1
 800df90:	d020      	beq.n	800dfd4 <I2C_ITError+0xf0>
 800df92:	687b      	ldr	r3, [r7, #4]
 800df94:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df96:	4a6a      	ldr	r2, [pc, #424]	@ (800e140 <I2C_ITError+0x25c>)
 800df98:	651a      	str	r2, [r3, #80]	@ 0x50
 800df9a:	687b      	ldr	r3, [r7, #4]
 800df9c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800df9e:	4618      	mov	r0, r3
 800dfa0:	f7fe fbf6 	bl	800c790 <HAL_DMA_Abort_IT>
 800dfa4:	4603      	mov	r3, r0
 800dfa6:	2b00      	cmp	r3, #0
 800dfa8:	f000 8089 	beq.w	800e0be <I2C_ITError+0x1da>
 800dfac:	687b      	ldr	r3, [r7, #4]
 800dfae:	681b      	ldr	r3, [r3, #0]
 800dfb0:	681a      	ldr	r2, [r3, #0]
 800dfb2:	687b      	ldr	r3, [r7, #4]
 800dfb4:	681b      	ldr	r3, [r3, #0]
 800dfb6:	f022 0201 	bic.w	r2, r2, #1
 800dfba:	601a      	str	r2, [r3, #0]
 800dfbc:	687b      	ldr	r3, [r7, #4]
 800dfbe:	2220      	movs	r2, #32
 800dfc0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800dfc4:	687b      	ldr	r3, [r7, #4]
 800dfc6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dfc8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800dfca:	687a      	ldr	r2, [r7, #4]
 800dfcc:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800dfce:	4610      	mov	r0, r2
 800dfd0:	4798      	blx	r3
 800dfd2:	e074      	b.n	800e0be <I2C_ITError+0x1da>
 800dfd4:	687b      	ldr	r3, [r7, #4]
 800dfd6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dfd8:	4a59      	ldr	r2, [pc, #356]	@ (800e140 <I2C_ITError+0x25c>)
 800dfda:	651a      	str	r2, [r3, #80]	@ 0x50
 800dfdc:	687b      	ldr	r3, [r7, #4]
 800dfde:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dfe0:	4618      	mov	r0, r3
 800dfe2:	f7fe fbd5 	bl	800c790 <HAL_DMA_Abort_IT>
 800dfe6:	4603      	mov	r3, r0
 800dfe8:	2b00      	cmp	r3, #0
 800dfea:	d068      	beq.n	800e0be <I2C_ITError+0x1da>
 800dfec:	687b      	ldr	r3, [r7, #4]
 800dfee:	681b      	ldr	r3, [r3, #0]
 800dff0:	695b      	ldr	r3, [r3, #20]
 800dff2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800dff6:	2b40      	cmp	r3, #64	@ 0x40
 800dff8:	d10b      	bne.n	800e012 <I2C_ITError+0x12e>
 800dffa:	687b      	ldr	r3, [r7, #4]
 800dffc:	681b      	ldr	r3, [r3, #0]
 800dffe:	691a      	ldr	r2, [r3, #16]
 800e000:	687b      	ldr	r3, [r7, #4]
 800e002:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e004:	b2d2      	uxtb	r2, r2
 800e006:	701a      	strb	r2, [r3, #0]
 800e008:	687b      	ldr	r3, [r7, #4]
 800e00a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e00c:	1c5a      	adds	r2, r3, #1
 800e00e:	687b      	ldr	r3, [r7, #4]
 800e010:	625a      	str	r2, [r3, #36]	@ 0x24
 800e012:	687b      	ldr	r3, [r7, #4]
 800e014:	681b      	ldr	r3, [r3, #0]
 800e016:	681a      	ldr	r2, [r3, #0]
 800e018:	687b      	ldr	r3, [r7, #4]
 800e01a:	681b      	ldr	r3, [r3, #0]
 800e01c:	f022 0201 	bic.w	r2, r2, #1
 800e020:	601a      	str	r2, [r3, #0]
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	2220      	movs	r2, #32
 800e026:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e02a:	687b      	ldr	r3, [r7, #4]
 800e02c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e02e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e030:	687a      	ldr	r2, [r7, #4]
 800e032:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800e034:	4610      	mov	r0, r2
 800e036:	4798      	blx	r3
 800e038:	e041      	b.n	800e0be <I2C_ITError+0x1da>
 800e03a:	687b      	ldr	r3, [r7, #4]
 800e03c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e040:	b2db      	uxtb	r3, r3
 800e042:	2b60      	cmp	r3, #96	@ 0x60
 800e044:	d125      	bne.n	800e092 <I2C_ITError+0x1ae>
 800e046:	687b      	ldr	r3, [r7, #4]
 800e048:	2220      	movs	r2, #32
 800e04a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e04e:	687b      	ldr	r3, [r7, #4]
 800e050:	2200      	movs	r2, #0
 800e052:	641a      	str	r2, [r3, #64]	@ 0x40
 800e054:	687b      	ldr	r3, [r7, #4]
 800e056:	681b      	ldr	r3, [r3, #0]
 800e058:	695b      	ldr	r3, [r3, #20]
 800e05a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e05e:	2b40      	cmp	r3, #64	@ 0x40
 800e060:	d10b      	bne.n	800e07a <I2C_ITError+0x196>
 800e062:	687b      	ldr	r3, [r7, #4]
 800e064:	681b      	ldr	r3, [r3, #0]
 800e066:	691a      	ldr	r2, [r3, #16]
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e06c:	b2d2      	uxtb	r2, r2
 800e06e:	701a      	strb	r2, [r3, #0]
 800e070:	687b      	ldr	r3, [r7, #4]
 800e072:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e074:	1c5a      	adds	r2, r3, #1
 800e076:	687b      	ldr	r3, [r7, #4]
 800e078:	625a      	str	r2, [r3, #36]	@ 0x24
 800e07a:	687b      	ldr	r3, [r7, #4]
 800e07c:	681b      	ldr	r3, [r3, #0]
 800e07e:	681a      	ldr	r2, [r3, #0]
 800e080:	687b      	ldr	r3, [r7, #4]
 800e082:	681b      	ldr	r3, [r3, #0]
 800e084:	f022 0201 	bic.w	r2, r2, #1
 800e088:	601a      	str	r2, [r3, #0]
 800e08a:	6878      	ldr	r0, [r7, #4]
 800e08c:	f7ff feaf 	bl	800ddee <HAL_I2C_AbortCpltCallback>
 800e090:	e015      	b.n	800e0be <I2C_ITError+0x1da>
 800e092:	687b      	ldr	r3, [r7, #4]
 800e094:	681b      	ldr	r3, [r3, #0]
 800e096:	695b      	ldr	r3, [r3, #20]
 800e098:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800e09c:	2b40      	cmp	r3, #64	@ 0x40
 800e09e:	d10b      	bne.n	800e0b8 <I2C_ITError+0x1d4>
 800e0a0:	687b      	ldr	r3, [r7, #4]
 800e0a2:	681b      	ldr	r3, [r3, #0]
 800e0a4:	691a      	ldr	r2, [r3, #16]
 800e0a6:	687b      	ldr	r3, [r7, #4]
 800e0a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e0aa:	b2d2      	uxtb	r2, r2
 800e0ac:	701a      	strb	r2, [r3, #0]
 800e0ae:	687b      	ldr	r3, [r7, #4]
 800e0b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e0b2:	1c5a      	adds	r2, r3, #1
 800e0b4:	687b      	ldr	r3, [r7, #4]
 800e0b6:	625a      	str	r2, [r3, #36]	@ 0x24
 800e0b8:	6878      	ldr	r0, [r7, #4]
 800e0ba:	f7ff fe8e 	bl	800ddda <HAL_I2C_ErrorCallback>
 800e0be:	687b      	ldr	r3, [r7, #4]
 800e0c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e0c2:	60bb      	str	r3, [r7, #8]
 800e0c4:	68bb      	ldr	r3, [r7, #8]
 800e0c6:	f003 0301 	and.w	r3, r3, #1
 800e0ca:	2b00      	cmp	r3, #0
 800e0cc:	d10e      	bne.n	800e0ec <I2C_ITError+0x208>
 800e0ce:	68bb      	ldr	r3, [r7, #8]
 800e0d0:	f003 0302 	and.w	r3, r3, #2
 800e0d4:	2b00      	cmp	r3, #0
 800e0d6:	d109      	bne.n	800e0ec <I2C_ITError+0x208>
 800e0d8:	68bb      	ldr	r3, [r7, #8]
 800e0da:	f003 0304 	and.w	r3, r3, #4
 800e0de:	2b00      	cmp	r3, #0
 800e0e0:	d104      	bne.n	800e0ec <I2C_ITError+0x208>
 800e0e2:	68bb      	ldr	r3, [r7, #8]
 800e0e4:	f003 0308 	and.w	r3, r3, #8
 800e0e8:	2b00      	cmp	r3, #0
 800e0ea:	d007      	beq.n	800e0fc <I2C_ITError+0x218>
 800e0ec:	687b      	ldr	r3, [r7, #4]
 800e0ee:	681b      	ldr	r3, [r3, #0]
 800e0f0:	685a      	ldr	r2, [r3, #4]
 800e0f2:	687b      	ldr	r3, [r7, #4]
 800e0f4:	681b      	ldr	r3, [r3, #0]
 800e0f6:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 800e0fa:	605a      	str	r2, [r3, #4]
 800e0fc:	687b      	ldr	r3, [r7, #4]
 800e0fe:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e102:	73fb      	strb	r3, [r7, #15]
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e108:	f003 0304 	and.w	r3, r3, #4
 800e10c:	2b04      	cmp	r3, #4
 800e10e:	d113      	bne.n	800e138 <I2C_ITError+0x254>
 800e110:	7bfb      	ldrb	r3, [r7, #15]
 800e112:	2b28      	cmp	r3, #40	@ 0x28
 800e114:	d110      	bne.n	800e138 <I2C_ITError+0x254>
 800e116:	687b      	ldr	r3, [r7, #4]
 800e118:	4a0a      	ldr	r2, [pc, #40]	@ (800e144 <I2C_ITError+0x260>)
 800e11a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800e11c:	687b      	ldr	r3, [r7, #4]
 800e11e:	2200      	movs	r2, #0
 800e120:	631a      	str	r2, [r3, #48]	@ 0x30
 800e122:	687b      	ldr	r3, [r7, #4]
 800e124:	2220      	movs	r2, #32
 800e126:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e12a:	687b      	ldr	r3, [r7, #4]
 800e12c:	2200      	movs	r2, #0
 800e12e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e132:	6878      	ldr	r0, [r7, #4]
 800e134:	f7ff fe47 	bl	800ddc6 <HAL_I2C_ListenCpltCallback>
 800e138:	bf00      	nop
 800e13a:	3710      	adds	r7, #16
 800e13c:	46bd      	mov	sp, r7
 800e13e:	bd80      	pop	{r7, pc}
 800e140:	0800e669 	.word	0x0800e669
 800e144:	ffff0000 	.word	0xffff0000

0800e148 <I2C_RequestMemoryWrite>:
 800e148:	b580      	push	{r7, lr}
 800e14a:	b088      	sub	sp, #32
 800e14c:	af02      	add	r7, sp, #8
 800e14e:	60f8      	str	r0, [r7, #12]
 800e150:	4608      	mov	r0, r1
 800e152:	4611      	mov	r1, r2
 800e154:	461a      	mov	r2, r3
 800e156:	4603      	mov	r3, r0
 800e158:	817b      	strh	r3, [r7, #10]
 800e15a:	460b      	mov	r3, r1
 800e15c:	813b      	strh	r3, [r7, #8]
 800e15e:	4613      	mov	r3, r2
 800e160:	80fb      	strh	r3, [r7, #6]
 800e162:	68fb      	ldr	r3, [r7, #12]
 800e164:	681b      	ldr	r3, [r3, #0]
 800e166:	681a      	ldr	r2, [r3, #0]
 800e168:	68fb      	ldr	r3, [r7, #12]
 800e16a:	681b      	ldr	r3, [r3, #0]
 800e16c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e170:	601a      	str	r2, [r3, #0]
 800e172:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e174:	9300      	str	r3, [sp, #0]
 800e176:	6a3b      	ldr	r3, [r7, #32]
 800e178:	2200      	movs	r2, #0
 800e17a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e17e:	68f8      	ldr	r0, [r7, #12]
 800e180:	f000 fb1a 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800e184:	4603      	mov	r3, r0
 800e186:	2b00      	cmp	r3, #0
 800e188:	d00d      	beq.n	800e1a6 <I2C_RequestMemoryWrite+0x5e>
 800e18a:	68fb      	ldr	r3, [r7, #12]
 800e18c:	681b      	ldr	r3, [r3, #0]
 800e18e:	681b      	ldr	r3, [r3, #0]
 800e190:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e194:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e198:	d103      	bne.n	800e1a2 <I2C_RequestMemoryWrite+0x5a>
 800e19a:	68fb      	ldr	r3, [r7, #12]
 800e19c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e1a0:	641a      	str	r2, [r3, #64]	@ 0x40
 800e1a2:	2303      	movs	r3, #3
 800e1a4:	e05f      	b.n	800e266 <I2C_RequestMemoryWrite+0x11e>
 800e1a6:	897b      	ldrh	r3, [r7, #10]
 800e1a8:	b2db      	uxtb	r3, r3
 800e1aa:	461a      	mov	r2, r3
 800e1ac:	68fb      	ldr	r3, [r7, #12]
 800e1ae:	681b      	ldr	r3, [r3, #0]
 800e1b0:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800e1b4:	611a      	str	r2, [r3, #16]
 800e1b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e1b8:	6a3a      	ldr	r2, [r7, #32]
 800e1ba:	492d      	ldr	r1, [pc, #180]	@ (800e270 <I2C_RequestMemoryWrite+0x128>)
 800e1bc:	68f8      	ldr	r0, [r7, #12]
 800e1be:	f000 fb52 	bl	800e866 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e1c2:	4603      	mov	r3, r0
 800e1c4:	2b00      	cmp	r3, #0
 800e1c6:	d001      	beq.n	800e1cc <I2C_RequestMemoryWrite+0x84>
 800e1c8:	2301      	movs	r3, #1
 800e1ca:	e04c      	b.n	800e266 <I2C_RequestMemoryWrite+0x11e>
 800e1cc:	2300      	movs	r3, #0
 800e1ce:	617b      	str	r3, [r7, #20]
 800e1d0:	68fb      	ldr	r3, [r7, #12]
 800e1d2:	681b      	ldr	r3, [r3, #0]
 800e1d4:	695b      	ldr	r3, [r3, #20]
 800e1d6:	617b      	str	r3, [r7, #20]
 800e1d8:	68fb      	ldr	r3, [r7, #12]
 800e1da:	681b      	ldr	r3, [r3, #0]
 800e1dc:	699b      	ldr	r3, [r3, #24]
 800e1de:	617b      	str	r3, [r7, #20]
 800e1e0:	697b      	ldr	r3, [r7, #20]
 800e1e2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e1e4:	6a39      	ldr	r1, [r7, #32]
 800e1e6:	68f8      	ldr	r0, [r7, #12]
 800e1e8:	f000 fbbc 	bl	800e964 <I2C_WaitOnTXEFlagUntilTimeout>
 800e1ec:	4603      	mov	r3, r0
 800e1ee:	2b00      	cmp	r3, #0
 800e1f0:	d00d      	beq.n	800e20e <I2C_RequestMemoryWrite+0xc6>
 800e1f2:	68fb      	ldr	r3, [r7, #12]
 800e1f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e1f6:	2b04      	cmp	r3, #4
 800e1f8:	d107      	bne.n	800e20a <I2C_RequestMemoryWrite+0xc2>
 800e1fa:	68fb      	ldr	r3, [r7, #12]
 800e1fc:	681b      	ldr	r3, [r3, #0]
 800e1fe:	681a      	ldr	r2, [r3, #0]
 800e200:	68fb      	ldr	r3, [r7, #12]
 800e202:	681b      	ldr	r3, [r3, #0]
 800e204:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e208:	601a      	str	r2, [r3, #0]
 800e20a:	2301      	movs	r3, #1
 800e20c:	e02b      	b.n	800e266 <I2C_RequestMemoryWrite+0x11e>
 800e20e:	88fb      	ldrh	r3, [r7, #6]
 800e210:	2b01      	cmp	r3, #1
 800e212:	d105      	bne.n	800e220 <I2C_RequestMemoryWrite+0xd8>
 800e214:	893b      	ldrh	r3, [r7, #8]
 800e216:	b2da      	uxtb	r2, r3
 800e218:	68fb      	ldr	r3, [r7, #12]
 800e21a:	681b      	ldr	r3, [r3, #0]
 800e21c:	611a      	str	r2, [r3, #16]
 800e21e:	e021      	b.n	800e264 <I2C_RequestMemoryWrite+0x11c>
 800e220:	893b      	ldrh	r3, [r7, #8]
 800e222:	0a1b      	lsrs	r3, r3, #8
 800e224:	b29b      	uxth	r3, r3
 800e226:	b2da      	uxtb	r2, r3
 800e228:	68fb      	ldr	r3, [r7, #12]
 800e22a:	681b      	ldr	r3, [r3, #0]
 800e22c:	611a      	str	r2, [r3, #16]
 800e22e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e230:	6a39      	ldr	r1, [r7, #32]
 800e232:	68f8      	ldr	r0, [r7, #12]
 800e234:	f000 fb96 	bl	800e964 <I2C_WaitOnTXEFlagUntilTimeout>
 800e238:	4603      	mov	r3, r0
 800e23a:	2b00      	cmp	r3, #0
 800e23c:	d00d      	beq.n	800e25a <I2C_RequestMemoryWrite+0x112>
 800e23e:	68fb      	ldr	r3, [r7, #12]
 800e240:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e242:	2b04      	cmp	r3, #4
 800e244:	d107      	bne.n	800e256 <I2C_RequestMemoryWrite+0x10e>
 800e246:	68fb      	ldr	r3, [r7, #12]
 800e248:	681b      	ldr	r3, [r3, #0]
 800e24a:	681a      	ldr	r2, [r3, #0]
 800e24c:	68fb      	ldr	r3, [r7, #12]
 800e24e:	681b      	ldr	r3, [r3, #0]
 800e250:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e254:	601a      	str	r2, [r3, #0]
 800e256:	2301      	movs	r3, #1
 800e258:	e005      	b.n	800e266 <I2C_RequestMemoryWrite+0x11e>
 800e25a:	893b      	ldrh	r3, [r7, #8]
 800e25c:	b2da      	uxtb	r2, r3
 800e25e:	68fb      	ldr	r3, [r7, #12]
 800e260:	681b      	ldr	r3, [r3, #0]
 800e262:	611a      	str	r2, [r3, #16]
 800e264:	2300      	movs	r3, #0
 800e266:	4618      	mov	r0, r3
 800e268:	3718      	adds	r7, #24
 800e26a:	46bd      	mov	sp, r7
 800e26c:	bd80      	pop	{r7, pc}
 800e26e:	bf00      	nop
 800e270:	00010002 	.word	0x00010002

0800e274 <I2C_RequestMemoryRead>:
 800e274:	b580      	push	{r7, lr}
 800e276:	b088      	sub	sp, #32
 800e278:	af02      	add	r7, sp, #8
 800e27a:	60f8      	str	r0, [r7, #12]
 800e27c:	4608      	mov	r0, r1
 800e27e:	4611      	mov	r1, r2
 800e280:	461a      	mov	r2, r3
 800e282:	4603      	mov	r3, r0
 800e284:	817b      	strh	r3, [r7, #10]
 800e286:	460b      	mov	r3, r1
 800e288:	813b      	strh	r3, [r7, #8]
 800e28a:	4613      	mov	r3, r2
 800e28c:	80fb      	strh	r3, [r7, #6]
 800e28e:	68fb      	ldr	r3, [r7, #12]
 800e290:	681b      	ldr	r3, [r3, #0]
 800e292:	681a      	ldr	r2, [r3, #0]
 800e294:	68fb      	ldr	r3, [r7, #12]
 800e296:	681b      	ldr	r3, [r3, #0]
 800e298:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e29c:	601a      	str	r2, [r3, #0]
 800e29e:	68fb      	ldr	r3, [r7, #12]
 800e2a0:	681b      	ldr	r3, [r3, #0]
 800e2a2:	681a      	ldr	r2, [r3, #0]
 800e2a4:	68fb      	ldr	r3, [r7, #12]
 800e2a6:	681b      	ldr	r3, [r3, #0]
 800e2a8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e2ac:	601a      	str	r2, [r3, #0]
 800e2ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e2b0:	9300      	str	r3, [sp, #0]
 800e2b2:	6a3b      	ldr	r3, [r7, #32]
 800e2b4:	2200      	movs	r2, #0
 800e2b6:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e2ba:	68f8      	ldr	r0, [r7, #12]
 800e2bc:	f000 fa7c 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800e2c0:	4603      	mov	r3, r0
 800e2c2:	2b00      	cmp	r3, #0
 800e2c4:	d00d      	beq.n	800e2e2 <I2C_RequestMemoryRead+0x6e>
 800e2c6:	68fb      	ldr	r3, [r7, #12]
 800e2c8:	681b      	ldr	r3, [r3, #0]
 800e2ca:	681b      	ldr	r3, [r3, #0]
 800e2cc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e2d0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e2d4:	d103      	bne.n	800e2de <I2C_RequestMemoryRead+0x6a>
 800e2d6:	68fb      	ldr	r3, [r7, #12]
 800e2d8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e2dc:	641a      	str	r2, [r3, #64]	@ 0x40
 800e2de:	2303      	movs	r3, #3
 800e2e0:	e0aa      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e2e2:	897b      	ldrh	r3, [r7, #10]
 800e2e4:	b2db      	uxtb	r3, r3
 800e2e6:	461a      	mov	r2, r3
 800e2e8:	68fb      	ldr	r3, [r7, #12]
 800e2ea:	681b      	ldr	r3, [r3, #0]
 800e2ec:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 800e2f0:	611a      	str	r2, [r3, #16]
 800e2f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e2f4:	6a3a      	ldr	r2, [r7, #32]
 800e2f6:	4952      	ldr	r1, [pc, #328]	@ (800e440 <I2C_RequestMemoryRead+0x1cc>)
 800e2f8:	68f8      	ldr	r0, [r7, #12]
 800e2fa:	f000 fab4 	bl	800e866 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e2fe:	4603      	mov	r3, r0
 800e300:	2b00      	cmp	r3, #0
 800e302:	d001      	beq.n	800e308 <I2C_RequestMemoryRead+0x94>
 800e304:	2301      	movs	r3, #1
 800e306:	e097      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e308:	2300      	movs	r3, #0
 800e30a:	617b      	str	r3, [r7, #20]
 800e30c:	68fb      	ldr	r3, [r7, #12]
 800e30e:	681b      	ldr	r3, [r3, #0]
 800e310:	695b      	ldr	r3, [r3, #20]
 800e312:	617b      	str	r3, [r7, #20]
 800e314:	68fb      	ldr	r3, [r7, #12]
 800e316:	681b      	ldr	r3, [r3, #0]
 800e318:	699b      	ldr	r3, [r3, #24]
 800e31a:	617b      	str	r3, [r7, #20]
 800e31c:	697b      	ldr	r3, [r7, #20]
 800e31e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e320:	6a39      	ldr	r1, [r7, #32]
 800e322:	68f8      	ldr	r0, [r7, #12]
 800e324:	f000 fb1e 	bl	800e964 <I2C_WaitOnTXEFlagUntilTimeout>
 800e328:	4603      	mov	r3, r0
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	d00d      	beq.n	800e34a <I2C_RequestMemoryRead+0xd6>
 800e32e:	68fb      	ldr	r3, [r7, #12]
 800e330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e332:	2b04      	cmp	r3, #4
 800e334:	d107      	bne.n	800e346 <I2C_RequestMemoryRead+0xd2>
 800e336:	68fb      	ldr	r3, [r7, #12]
 800e338:	681b      	ldr	r3, [r3, #0]
 800e33a:	681a      	ldr	r2, [r3, #0]
 800e33c:	68fb      	ldr	r3, [r7, #12]
 800e33e:	681b      	ldr	r3, [r3, #0]
 800e340:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e344:	601a      	str	r2, [r3, #0]
 800e346:	2301      	movs	r3, #1
 800e348:	e076      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e34a:	88fb      	ldrh	r3, [r7, #6]
 800e34c:	2b01      	cmp	r3, #1
 800e34e:	d105      	bne.n	800e35c <I2C_RequestMemoryRead+0xe8>
 800e350:	893b      	ldrh	r3, [r7, #8]
 800e352:	b2da      	uxtb	r2, r3
 800e354:	68fb      	ldr	r3, [r7, #12]
 800e356:	681b      	ldr	r3, [r3, #0]
 800e358:	611a      	str	r2, [r3, #16]
 800e35a:	e021      	b.n	800e3a0 <I2C_RequestMemoryRead+0x12c>
 800e35c:	893b      	ldrh	r3, [r7, #8]
 800e35e:	0a1b      	lsrs	r3, r3, #8
 800e360:	b29b      	uxth	r3, r3
 800e362:	b2da      	uxtb	r2, r3
 800e364:	68fb      	ldr	r3, [r7, #12]
 800e366:	681b      	ldr	r3, [r3, #0]
 800e368:	611a      	str	r2, [r3, #16]
 800e36a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e36c:	6a39      	ldr	r1, [r7, #32]
 800e36e:	68f8      	ldr	r0, [r7, #12]
 800e370:	f000 faf8 	bl	800e964 <I2C_WaitOnTXEFlagUntilTimeout>
 800e374:	4603      	mov	r3, r0
 800e376:	2b00      	cmp	r3, #0
 800e378:	d00d      	beq.n	800e396 <I2C_RequestMemoryRead+0x122>
 800e37a:	68fb      	ldr	r3, [r7, #12]
 800e37c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e37e:	2b04      	cmp	r3, #4
 800e380:	d107      	bne.n	800e392 <I2C_RequestMemoryRead+0x11e>
 800e382:	68fb      	ldr	r3, [r7, #12]
 800e384:	681b      	ldr	r3, [r3, #0]
 800e386:	681a      	ldr	r2, [r3, #0]
 800e388:	68fb      	ldr	r3, [r7, #12]
 800e38a:	681b      	ldr	r3, [r3, #0]
 800e38c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e390:	601a      	str	r2, [r3, #0]
 800e392:	2301      	movs	r3, #1
 800e394:	e050      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e396:	893b      	ldrh	r3, [r7, #8]
 800e398:	b2da      	uxtb	r2, r3
 800e39a:	68fb      	ldr	r3, [r7, #12]
 800e39c:	681b      	ldr	r3, [r3, #0]
 800e39e:	611a      	str	r2, [r3, #16]
 800e3a0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800e3a2:	6a39      	ldr	r1, [r7, #32]
 800e3a4:	68f8      	ldr	r0, [r7, #12]
 800e3a6:	f000 fadd 	bl	800e964 <I2C_WaitOnTXEFlagUntilTimeout>
 800e3aa:	4603      	mov	r3, r0
 800e3ac:	2b00      	cmp	r3, #0
 800e3ae:	d00d      	beq.n	800e3cc <I2C_RequestMemoryRead+0x158>
 800e3b0:	68fb      	ldr	r3, [r7, #12]
 800e3b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e3b4:	2b04      	cmp	r3, #4
 800e3b6:	d107      	bne.n	800e3c8 <I2C_RequestMemoryRead+0x154>
 800e3b8:	68fb      	ldr	r3, [r7, #12]
 800e3ba:	681b      	ldr	r3, [r3, #0]
 800e3bc:	681a      	ldr	r2, [r3, #0]
 800e3be:	68fb      	ldr	r3, [r7, #12]
 800e3c0:	681b      	ldr	r3, [r3, #0]
 800e3c2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e3c6:	601a      	str	r2, [r3, #0]
 800e3c8:	2301      	movs	r3, #1
 800e3ca:	e035      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e3cc:	68fb      	ldr	r3, [r7, #12]
 800e3ce:	681b      	ldr	r3, [r3, #0]
 800e3d0:	681a      	ldr	r2, [r3, #0]
 800e3d2:	68fb      	ldr	r3, [r7, #12]
 800e3d4:	681b      	ldr	r3, [r3, #0]
 800e3d6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800e3da:	601a      	str	r2, [r3, #0]
 800e3dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e3de:	9300      	str	r3, [sp, #0]
 800e3e0:	6a3b      	ldr	r3, [r7, #32]
 800e3e2:	2200      	movs	r2, #0
 800e3e4:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800e3e8:	68f8      	ldr	r0, [r7, #12]
 800e3ea:	f000 f9e5 	bl	800e7b8 <I2C_WaitOnFlagUntilTimeout>
 800e3ee:	4603      	mov	r3, r0
 800e3f0:	2b00      	cmp	r3, #0
 800e3f2:	d00d      	beq.n	800e410 <I2C_RequestMemoryRead+0x19c>
 800e3f4:	68fb      	ldr	r3, [r7, #12]
 800e3f6:	681b      	ldr	r3, [r3, #0]
 800e3f8:	681b      	ldr	r3, [r3, #0]
 800e3fa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e3fe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e402:	d103      	bne.n	800e40c <I2C_RequestMemoryRead+0x198>
 800e404:	68fb      	ldr	r3, [r7, #12]
 800e406:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800e40a:	641a      	str	r2, [r3, #64]	@ 0x40
 800e40c:	2303      	movs	r3, #3
 800e40e:	e013      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e410:	897b      	ldrh	r3, [r7, #10]
 800e412:	b2db      	uxtb	r3, r3
 800e414:	f043 0301 	orr.w	r3, r3, #1
 800e418:	b2da      	uxtb	r2, r3
 800e41a:	68fb      	ldr	r3, [r7, #12]
 800e41c:	681b      	ldr	r3, [r3, #0]
 800e41e:	611a      	str	r2, [r3, #16]
 800e420:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e422:	6a3a      	ldr	r2, [r7, #32]
 800e424:	4906      	ldr	r1, [pc, #24]	@ (800e440 <I2C_RequestMemoryRead+0x1cc>)
 800e426:	68f8      	ldr	r0, [r7, #12]
 800e428:	f000 fa1d 	bl	800e866 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800e42c:	4603      	mov	r3, r0
 800e42e:	2b00      	cmp	r3, #0
 800e430:	d001      	beq.n	800e436 <I2C_RequestMemoryRead+0x1c2>
 800e432:	2301      	movs	r3, #1
 800e434:	e000      	b.n	800e438 <I2C_RequestMemoryRead+0x1c4>
 800e436:	2300      	movs	r3, #0
 800e438:	4618      	mov	r0, r3
 800e43a:	3718      	adds	r7, #24
 800e43c:	46bd      	mov	sp, r7
 800e43e:	bd80      	pop	{r7, pc}
 800e440:	00010002 	.word	0x00010002

0800e444 <I2C_DMAXferCplt>:
 800e444:	b580      	push	{r7, lr}
 800e446:	b086      	sub	sp, #24
 800e448:	af00      	add	r7, sp, #0
 800e44a:	6078      	str	r0, [r7, #4]
 800e44c:	687b      	ldr	r3, [r7, #4]
 800e44e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e450:	617b      	str	r3, [r7, #20]
 800e452:	697b      	ldr	r3, [r7, #20]
 800e454:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e458:	74fb      	strb	r3, [r7, #19]
 800e45a:	697b      	ldr	r3, [r7, #20]
 800e45c:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e460:	74bb      	strb	r3, [r7, #18]
 800e462:	697b      	ldr	r3, [r7, #20]
 800e464:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e466:	60fb      	str	r3, [r7, #12]
 800e468:	697b      	ldr	r3, [r7, #20]
 800e46a:	681b      	ldr	r3, [r3, #0]
 800e46c:	685a      	ldr	r2, [r3, #4]
 800e46e:	697b      	ldr	r3, [r7, #20]
 800e470:	681b      	ldr	r3, [r3, #0]
 800e472:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800e476:	605a      	str	r2, [r3, #4]
 800e478:	697b      	ldr	r3, [r7, #20]
 800e47a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e47c:	2b00      	cmp	r3, #0
 800e47e:	d003      	beq.n	800e488 <I2C_DMAXferCplt+0x44>
 800e480:	697b      	ldr	r3, [r7, #20]
 800e482:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e484:	2200      	movs	r2, #0
 800e486:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e488:	697b      	ldr	r3, [r7, #20]
 800e48a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e48c:	2b00      	cmp	r3, #0
 800e48e:	d003      	beq.n	800e498 <I2C_DMAXferCplt+0x54>
 800e490:	697b      	ldr	r3, [r7, #20]
 800e492:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e494:	2200      	movs	r2, #0
 800e496:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e498:	7cfb      	ldrb	r3, [r7, #19]
 800e49a:	f003 0321 	and.w	r3, r3, #33	@ 0x21
 800e49e:	2b21      	cmp	r3, #33	@ 0x21
 800e4a0:	d007      	beq.n	800e4b2 <I2C_DMAXferCplt+0x6e>
 800e4a2:	7cfb      	ldrb	r3, [r7, #19]
 800e4a4:	f003 0322 	and.w	r3, r3, #34	@ 0x22
 800e4a8:	2b22      	cmp	r3, #34	@ 0x22
 800e4aa:	d131      	bne.n	800e510 <I2C_DMAXferCplt+0xcc>
 800e4ac:	7cbb      	ldrb	r3, [r7, #18]
 800e4ae:	2b20      	cmp	r3, #32
 800e4b0:	d12e      	bne.n	800e510 <I2C_DMAXferCplt+0xcc>
 800e4b2:	697b      	ldr	r3, [r7, #20]
 800e4b4:	681b      	ldr	r3, [r3, #0]
 800e4b6:	685a      	ldr	r2, [r3, #4]
 800e4b8:	697b      	ldr	r3, [r7, #20]
 800e4ba:	681b      	ldr	r3, [r3, #0]
 800e4bc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e4c0:	605a      	str	r2, [r3, #4]
 800e4c2:	697b      	ldr	r3, [r7, #20]
 800e4c4:	2200      	movs	r2, #0
 800e4c6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e4c8:	7cfb      	ldrb	r3, [r7, #19]
 800e4ca:	2b29      	cmp	r3, #41	@ 0x29
 800e4cc:	d10a      	bne.n	800e4e4 <I2C_DMAXferCplt+0xa0>
 800e4ce:	697b      	ldr	r3, [r7, #20]
 800e4d0:	2221      	movs	r2, #33	@ 0x21
 800e4d2:	631a      	str	r2, [r3, #48]	@ 0x30
 800e4d4:	697b      	ldr	r3, [r7, #20]
 800e4d6:	2228      	movs	r2, #40	@ 0x28
 800e4d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e4dc:	6978      	ldr	r0, [r7, #20]
 800e4de:	f7ff fc5e 	bl	800dd9e <HAL_I2C_SlaveTxCpltCallback>
 800e4e2:	e00c      	b.n	800e4fe <I2C_DMAXferCplt+0xba>
 800e4e4:	7cfb      	ldrb	r3, [r7, #19]
 800e4e6:	2b2a      	cmp	r3, #42	@ 0x2a
 800e4e8:	d109      	bne.n	800e4fe <I2C_DMAXferCplt+0xba>
 800e4ea:	697b      	ldr	r3, [r7, #20]
 800e4ec:	2222      	movs	r2, #34	@ 0x22
 800e4ee:	631a      	str	r2, [r3, #48]	@ 0x30
 800e4f0:	697b      	ldr	r3, [r7, #20]
 800e4f2:	2228      	movs	r2, #40	@ 0x28
 800e4f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e4f8:	6978      	ldr	r0, [r7, #20]
 800e4fa:	f7ff fc5a 	bl	800ddb2 <HAL_I2C_SlaveRxCpltCallback>
 800e4fe:	697b      	ldr	r3, [r7, #20]
 800e500:	681b      	ldr	r3, [r3, #0]
 800e502:	685a      	ldr	r2, [r3, #4]
 800e504:	697b      	ldr	r3, [r7, #20]
 800e506:	681b      	ldr	r3, [r3, #0]
 800e508:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 800e50c:	605a      	str	r2, [r3, #4]
 800e50e:	e06a      	b.n	800e5e6 <I2C_DMAXferCplt+0x1a2>
 800e510:	697b      	ldr	r3, [r7, #20]
 800e512:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e516:	b2db      	uxtb	r3, r3
 800e518:	2b00      	cmp	r3, #0
 800e51a:	d064      	beq.n	800e5e6 <I2C_DMAXferCplt+0x1a2>
 800e51c:	697b      	ldr	r3, [r7, #20]
 800e51e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800e520:	b29b      	uxth	r3, r3
 800e522:	2b01      	cmp	r3, #1
 800e524:	d107      	bne.n	800e536 <I2C_DMAXferCplt+0xf2>
 800e526:	697b      	ldr	r3, [r7, #20]
 800e528:	681b      	ldr	r3, [r3, #0]
 800e52a:	681a      	ldr	r2, [r3, #0]
 800e52c:	697b      	ldr	r3, [r7, #20]
 800e52e:	681b      	ldr	r3, [r3, #0]
 800e530:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e534:	601a      	str	r2, [r3, #0]
 800e536:	697b      	ldr	r3, [r7, #20]
 800e538:	681b      	ldr	r3, [r3, #0]
 800e53a:	685a      	ldr	r2, [r3, #4]
 800e53c:	697b      	ldr	r3, [r7, #20]
 800e53e:	681b      	ldr	r3, [r3, #0]
 800e540:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 800e544:	605a      	str	r2, [r3, #4]
 800e546:	68fb      	ldr	r3, [r7, #12]
 800e548:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800e54c:	d009      	beq.n	800e562 <I2C_DMAXferCplt+0x11e>
 800e54e:	68fb      	ldr	r3, [r7, #12]
 800e550:	2b08      	cmp	r3, #8
 800e552:	d006      	beq.n	800e562 <I2C_DMAXferCplt+0x11e>
 800e554:	68fb      	ldr	r3, [r7, #12]
 800e556:	f1b3 4f2a 	cmp.w	r3, #2852126720	@ 0xaa000000
 800e55a:	d002      	beq.n	800e562 <I2C_DMAXferCplt+0x11e>
 800e55c:	68fb      	ldr	r3, [r7, #12]
 800e55e:	2b20      	cmp	r3, #32
 800e560:	d107      	bne.n	800e572 <I2C_DMAXferCplt+0x12e>
 800e562:	697b      	ldr	r3, [r7, #20]
 800e564:	681b      	ldr	r3, [r3, #0]
 800e566:	681a      	ldr	r2, [r3, #0]
 800e568:	697b      	ldr	r3, [r7, #20]
 800e56a:	681b      	ldr	r3, [r3, #0]
 800e56c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e570:	601a      	str	r2, [r3, #0]
 800e572:	697b      	ldr	r3, [r7, #20]
 800e574:	681b      	ldr	r3, [r3, #0]
 800e576:	685a      	ldr	r2, [r3, #4]
 800e578:	697b      	ldr	r3, [r7, #20]
 800e57a:	681b      	ldr	r3, [r3, #0]
 800e57c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 800e580:	605a      	str	r2, [r3, #4]
 800e582:	697b      	ldr	r3, [r7, #20]
 800e584:	681b      	ldr	r3, [r3, #0]
 800e586:	685a      	ldr	r2, [r3, #4]
 800e588:	697b      	ldr	r3, [r7, #20]
 800e58a:	681b      	ldr	r3, [r3, #0]
 800e58c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e590:	605a      	str	r2, [r3, #4]
 800e592:	697b      	ldr	r3, [r7, #20]
 800e594:	2200      	movs	r2, #0
 800e596:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e598:	697b      	ldr	r3, [r7, #20]
 800e59a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e59c:	2b00      	cmp	r3, #0
 800e59e:	d003      	beq.n	800e5a8 <I2C_DMAXferCplt+0x164>
 800e5a0:	6978      	ldr	r0, [r7, #20]
 800e5a2:	f7ff fc1a 	bl	800ddda <HAL_I2C_ErrorCallback>
 800e5a6:	e01e      	b.n	800e5e6 <I2C_DMAXferCplt+0x1a2>
 800e5a8:	697b      	ldr	r3, [r7, #20]
 800e5aa:	2220      	movs	r2, #32
 800e5ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e5b0:	697b      	ldr	r3, [r7, #20]
 800e5b2:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800e5b6:	b2db      	uxtb	r3, r3
 800e5b8:	2b40      	cmp	r3, #64	@ 0x40
 800e5ba:	d10a      	bne.n	800e5d2 <I2C_DMAXferCplt+0x18e>
 800e5bc:	697b      	ldr	r3, [r7, #20]
 800e5be:	2200      	movs	r2, #0
 800e5c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e5c4:	697b      	ldr	r3, [r7, #20]
 800e5c6:	2200      	movs	r2, #0
 800e5c8:	631a      	str	r2, [r3, #48]	@ 0x30
 800e5ca:	6978      	ldr	r0, [r7, #20]
 800e5cc:	f7f3 fc84 	bl	8001ed8 <HAL_I2C_MemRxCpltCallback>
 800e5d0:	e009      	b.n	800e5e6 <I2C_DMAXferCplt+0x1a2>
 800e5d2:	697b      	ldr	r3, [r7, #20]
 800e5d4:	2200      	movs	r2, #0
 800e5d6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e5da:	697b      	ldr	r3, [r7, #20]
 800e5dc:	2212      	movs	r2, #18
 800e5de:	631a      	str	r2, [r3, #48]	@ 0x30
 800e5e0:	6978      	ldr	r0, [r7, #20]
 800e5e2:	f7ff fbd2 	bl	800dd8a <HAL_I2C_MasterRxCpltCallback>
 800e5e6:	bf00      	nop
 800e5e8:	3718      	adds	r7, #24
 800e5ea:	46bd      	mov	sp, r7
 800e5ec:	bd80      	pop	{r7, pc}

0800e5ee <I2C_DMAError>:
 800e5ee:	b580      	push	{r7, lr}
 800e5f0:	b084      	sub	sp, #16
 800e5f2:	af00      	add	r7, sp, #0
 800e5f4:	6078      	str	r0, [r7, #4]
 800e5f6:	687b      	ldr	r3, [r7, #4]
 800e5f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e5fa:	60fb      	str	r3, [r7, #12]
 800e5fc:	68fb      	ldr	r3, [r7, #12]
 800e5fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e600:	2b00      	cmp	r3, #0
 800e602:	d003      	beq.n	800e60c <I2C_DMAError+0x1e>
 800e604:	68fb      	ldr	r3, [r7, #12]
 800e606:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e608:	2200      	movs	r2, #0
 800e60a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e60c:	68fb      	ldr	r3, [r7, #12]
 800e60e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e610:	2b00      	cmp	r3, #0
 800e612:	d003      	beq.n	800e61c <I2C_DMAError+0x2e>
 800e614:	68fb      	ldr	r3, [r7, #12]
 800e616:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e618:	2200      	movs	r2, #0
 800e61a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e61c:	6878      	ldr	r0, [r7, #4]
 800e61e:	f7fe fa63 	bl	800cae8 <HAL_DMA_GetError>
 800e622:	4603      	mov	r3, r0
 800e624:	2b02      	cmp	r3, #2
 800e626:	d01b      	beq.n	800e660 <I2C_DMAError+0x72>
 800e628:	68fb      	ldr	r3, [r7, #12]
 800e62a:	681b      	ldr	r3, [r3, #0]
 800e62c:	681a      	ldr	r2, [r3, #0]
 800e62e:	68fb      	ldr	r3, [r7, #12]
 800e630:	681b      	ldr	r3, [r3, #0]
 800e632:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e636:	601a      	str	r2, [r3, #0]
 800e638:	68fb      	ldr	r3, [r7, #12]
 800e63a:	2200      	movs	r2, #0
 800e63c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e63e:	68fb      	ldr	r3, [r7, #12]
 800e640:	2220      	movs	r2, #32
 800e642:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e646:	68fb      	ldr	r3, [r7, #12]
 800e648:	2200      	movs	r2, #0
 800e64a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e64e:	68fb      	ldr	r3, [r7, #12]
 800e650:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e652:	f043 0210 	orr.w	r2, r3, #16
 800e656:	68fb      	ldr	r3, [r7, #12]
 800e658:	641a      	str	r2, [r3, #64]	@ 0x40
 800e65a:	68f8      	ldr	r0, [r7, #12]
 800e65c:	f7ff fbbd 	bl	800ddda <HAL_I2C_ErrorCallback>
 800e660:	bf00      	nop
 800e662:	3710      	adds	r7, #16
 800e664:	46bd      	mov	sp, r7
 800e666:	bd80      	pop	{r7, pc}

0800e668 <I2C_DMAAbort>:
 800e668:	b580      	push	{r7, lr}
 800e66a:	b086      	sub	sp, #24
 800e66c:	af00      	add	r7, sp, #0
 800e66e:	6078      	str	r0, [r7, #4]
 800e670:	2300      	movs	r3, #0
 800e672:	60fb      	str	r3, [r7, #12]
 800e674:	687b      	ldr	r3, [r7, #4]
 800e676:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e678:	617b      	str	r3, [r7, #20]
 800e67a:	697b      	ldr	r3, [r7, #20]
 800e67c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e680:	74fb      	strb	r3, [r7, #19]
 800e682:	4b4b      	ldr	r3, [pc, #300]	@ (800e7b0 <I2C_DMAAbort+0x148>)
 800e684:	681b      	ldr	r3, [r3, #0]
 800e686:	08db      	lsrs	r3, r3, #3
 800e688:	4a4a      	ldr	r2, [pc, #296]	@ (800e7b4 <I2C_DMAAbort+0x14c>)
 800e68a:	fba2 2303 	umull	r2, r3, r2, r3
 800e68e:	0a1a      	lsrs	r2, r3, #8
 800e690:	4613      	mov	r3, r2
 800e692:	009b      	lsls	r3, r3, #2
 800e694:	4413      	add	r3, r2
 800e696:	00da      	lsls	r2, r3, #3
 800e698:	1ad3      	subs	r3, r2, r3
 800e69a:	60fb      	str	r3, [r7, #12]
 800e69c:	68fb      	ldr	r3, [r7, #12]
 800e69e:	2b00      	cmp	r3, #0
 800e6a0:	d106      	bne.n	800e6b0 <I2C_DMAAbort+0x48>
 800e6a2:	697b      	ldr	r3, [r7, #20]
 800e6a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e6a6:	f043 0220 	orr.w	r2, r3, #32
 800e6aa:	697b      	ldr	r3, [r7, #20]
 800e6ac:	641a      	str	r2, [r3, #64]	@ 0x40
 800e6ae:	e00a      	b.n	800e6c6 <I2C_DMAAbort+0x5e>
 800e6b0:	68fb      	ldr	r3, [r7, #12]
 800e6b2:	3b01      	subs	r3, #1
 800e6b4:	60fb      	str	r3, [r7, #12]
 800e6b6:	697b      	ldr	r3, [r7, #20]
 800e6b8:	681b      	ldr	r3, [r3, #0]
 800e6ba:	681b      	ldr	r3, [r3, #0]
 800e6bc:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800e6c0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e6c4:	d0ea      	beq.n	800e69c <I2C_DMAAbort+0x34>
 800e6c6:	697b      	ldr	r3, [r7, #20]
 800e6c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e6ca:	2b00      	cmp	r3, #0
 800e6cc:	d003      	beq.n	800e6d6 <I2C_DMAAbort+0x6e>
 800e6ce:	697b      	ldr	r3, [r7, #20]
 800e6d0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e6d2:	2200      	movs	r2, #0
 800e6d4:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e6d6:	697b      	ldr	r3, [r7, #20]
 800e6d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e6da:	2b00      	cmp	r3, #0
 800e6dc:	d003      	beq.n	800e6e6 <I2C_DMAAbort+0x7e>
 800e6de:	697b      	ldr	r3, [r7, #20]
 800e6e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e6e2:	2200      	movs	r2, #0
 800e6e4:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e6e6:	697b      	ldr	r3, [r7, #20]
 800e6e8:	681b      	ldr	r3, [r3, #0]
 800e6ea:	681a      	ldr	r2, [r3, #0]
 800e6ec:	697b      	ldr	r3, [r7, #20]
 800e6ee:	681b      	ldr	r3, [r3, #0]
 800e6f0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e6f4:	601a      	str	r2, [r3, #0]
 800e6f6:	697b      	ldr	r3, [r7, #20]
 800e6f8:	2200      	movs	r2, #0
 800e6fa:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800e6fc:	697b      	ldr	r3, [r7, #20]
 800e6fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e700:	2b00      	cmp	r3, #0
 800e702:	d003      	beq.n	800e70c <I2C_DMAAbort+0xa4>
 800e704:	697b      	ldr	r3, [r7, #20]
 800e706:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e708:	2200      	movs	r2, #0
 800e70a:	651a      	str	r2, [r3, #80]	@ 0x50
 800e70c:	697b      	ldr	r3, [r7, #20]
 800e70e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e710:	2b00      	cmp	r3, #0
 800e712:	d003      	beq.n	800e71c <I2C_DMAAbort+0xb4>
 800e714:	697b      	ldr	r3, [r7, #20]
 800e716:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e718:	2200      	movs	r2, #0
 800e71a:	651a      	str	r2, [r3, #80]	@ 0x50
 800e71c:	697b      	ldr	r3, [r7, #20]
 800e71e:	681b      	ldr	r3, [r3, #0]
 800e720:	681a      	ldr	r2, [r3, #0]
 800e722:	697b      	ldr	r3, [r7, #20]
 800e724:	681b      	ldr	r3, [r3, #0]
 800e726:	f022 0201 	bic.w	r2, r2, #1
 800e72a:	601a      	str	r2, [r3, #0]
 800e72c:	697b      	ldr	r3, [r7, #20]
 800e72e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800e732:	b2db      	uxtb	r3, r3
 800e734:	2b60      	cmp	r3, #96	@ 0x60
 800e736:	d10e      	bne.n	800e756 <I2C_DMAAbort+0xee>
 800e738:	697b      	ldr	r3, [r7, #20]
 800e73a:	2220      	movs	r2, #32
 800e73c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e740:	697b      	ldr	r3, [r7, #20]
 800e742:	2200      	movs	r2, #0
 800e744:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e748:	697b      	ldr	r3, [r7, #20]
 800e74a:	2200      	movs	r2, #0
 800e74c:	641a      	str	r2, [r3, #64]	@ 0x40
 800e74e:	6978      	ldr	r0, [r7, #20]
 800e750:	f7ff fb4d 	bl	800ddee <HAL_I2C_AbortCpltCallback>
 800e754:	e027      	b.n	800e7a6 <I2C_DMAAbort+0x13e>
 800e756:	7cfb      	ldrb	r3, [r7, #19]
 800e758:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800e75c:	2b28      	cmp	r3, #40	@ 0x28
 800e75e:	d117      	bne.n	800e790 <I2C_DMAAbort+0x128>
 800e760:	697b      	ldr	r3, [r7, #20]
 800e762:	681b      	ldr	r3, [r3, #0]
 800e764:	681a      	ldr	r2, [r3, #0]
 800e766:	697b      	ldr	r3, [r7, #20]
 800e768:	681b      	ldr	r3, [r3, #0]
 800e76a:	f042 0201 	orr.w	r2, r2, #1
 800e76e:	601a      	str	r2, [r3, #0]
 800e770:	697b      	ldr	r3, [r7, #20]
 800e772:	681b      	ldr	r3, [r3, #0]
 800e774:	681a      	ldr	r2, [r3, #0]
 800e776:	697b      	ldr	r3, [r7, #20]
 800e778:	681b      	ldr	r3, [r3, #0]
 800e77a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800e77e:	601a      	str	r2, [r3, #0]
 800e780:	697b      	ldr	r3, [r7, #20]
 800e782:	2200      	movs	r2, #0
 800e784:	631a      	str	r2, [r3, #48]	@ 0x30
 800e786:	697b      	ldr	r3, [r7, #20]
 800e788:	2228      	movs	r2, #40	@ 0x28
 800e78a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e78e:	e007      	b.n	800e7a0 <I2C_DMAAbort+0x138>
 800e790:	697b      	ldr	r3, [r7, #20]
 800e792:	2220      	movs	r2, #32
 800e794:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e798:	697b      	ldr	r3, [r7, #20]
 800e79a:	2200      	movs	r2, #0
 800e79c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e7a0:	6978      	ldr	r0, [r7, #20]
 800e7a2:	f7ff fb1a 	bl	800ddda <HAL_I2C_ErrorCallback>
 800e7a6:	bf00      	nop
 800e7a8:	3718      	adds	r7, #24
 800e7aa:	46bd      	mov	sp, r7
 800e7ac:	bd80      	pop	{r7, pc}
 800e7ae:	bf00      	nop
 800e7b0:	20000004 	.word	0x20000004
 800e7b4:	14f8b589 	.word	0x14f8b589

0800e7b8 <I2C_WaitOnFlagUntilTimeout>:
 800e7b8:	b580      	push	{r7, lr}
 800e7ba:	b084      	sub	sp, #16
 800e7bc:	af00      	add	r7, sp, #0
 800e7be:	60f8      	str	r0, [r7, #12]
 800e7c0:	60b9      	str	r1, [r7, #8]
 800e7c2:	603b      	str	r3, [r7, #0]
 800e7c4:	4613      	mov	r3, r2
 800e7c6:	71fb      	strb	r3, [r7, #7]
 800e7c8:	e025      	b.n	800e816 <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e7ca:	683b      	ldr	r3, [r7, #0]
 800e7cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e7d0:	d021      	beq.n	800e816 <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e7d2:	f7fc fc41 	bl	800b058 <HAL_GetTick>
 800e7d6:	4602      	mov	r2, r0
 800e7d8:	69bb      	ldr	r3, [r7, #24]
 800e7da:	1ad3      	subs	r3, r2, r3
 800e7dc:	683a      	ldr	r2, [r7, #0]
 800e7de:	429a      	cmp	r2, r3
 800e7e0:	d302      	bcc.n	800e7e8 <I2C_WaitOnFlagUntilTimeout+0x30>
 800e7e2:	683b      	ldr	r3, [r7, #0]
 800e7e4:	2b00      	cmp	r3, #0
 800e7e6:	d116      	bne.n	800e816 <I2C_WaitOnFlagUntilTimeout+0x5e>
 800e7e8:	68fb      	ldr	r3, [r7, #12]
 800e7ea:	2200      	movs	r2, #0
 800e7ec:	631a      	str	r2, [r3, #48]	@ 0x30
 800e7ee:	68fb      	ldr	r3, [r7, #12]
 800e7f0:	2220      	movs	r2, #32
 800e7f2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e7f6:	68fb      	ldr	r3, [r7, #12]
 800e7f8:	2200      	movs	r2, #0
 800e7fa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e7fe:	68fb      	ldr	r3, [r7, #12]
 800e800:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e802:	f043 0220 	orr.w	r2, r3, #32
 800e806:	68fb      	ldr	r3, [r7, #12]
 800e808:	641a      	str	r2, [r3, #64]	@ 0x40
 800e80a:	68fb      	ldr	r3, [r7, #12]
 800e80c:	2200      	movs	r2, #0
 800e80e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e812:	2301      	movs	r3, #1
 800e814:	e023      	b.n	800e85e <I2C_WaitOnFlagUntilTimeout+0xa6>
 800e816:	68bb      	ldr	r3, [r7, #8]
 800e818:	0c1b      	lsrs	r3, r3, #16
 800e81a:	b2db      	uxtb	r3, r3
 800e81c:	2b01      	cmp	r3, #1
 800e81e:	d10d      	bne.n	800e83c <I2C_WaitOnFlagUntilTimeout+0x84>
 800e820:	68fb      	ldr	r3, [r7, #12]
 800e822:	681b      	ldr	r3, [r3, #0]
 800e824:	695b      	ldr	r3, [r3, #20]
 800e826:	43da      	mvns	r2, r3
 800e828:	68bb      	ldr	r3, [r7, #8]
 800e82a:	4013      	ands	r3, r2
 800e82c:	b29b      	uxth	r3, r3
 800e82e:	2b00      	cmp	r3, #0
 800e830:	bf0c      	ite	eq
 800e832:	2301      	moveq	r3, #1
 800e834:	2300      	movne	r3, #0
 800e836:	b2db      	uxtb	r3, r3
 800e838:	461a      	mov	r2, r3
 800e83a:	e00c      	b.n	800e856 <I2C_WaitOnFlagUntilTimeout+0x9e>
 800e83c:	68fb      	ldr	r3, [r7, #12]
 800e83e:	681b      	ldr	r3, [r3, #0]
 800e840:	699b      	ldr	r3, [r3, #24]
 800e842:	43da      	mvns	r2, r3
 800e844:	68bb      	ldr	r3, [r7, #8]
 800e846:	4013      	ands	r3, r2
 800e848:	b29b      	uxth	r3, r3
 800e84a:	2b00      	cmp	r3, #0
 800e84c:	bf0c      	ite	eq
 800e84e:	2301      	moveq	r3, #1
 800e850:	2300      	movne	r3, #0
 800e852:	b2db      	uxtb	r3, r3
 800e854:	461a      	mov	r2, r3
 800e856:	79fb      	ldrb	r3, [r7, #7]
 800e858:	429a      	cmp	r2, r3
 800e85a:	d0b6      	beq.n	800e7ca <I2C_WaitOnFlagUntilTimeout+0x12>
 800e85c:	2300      	movs	r3, #0
 800e85e:	4618      	mov	r0, r3
 800e860:	3710      	adds	r7, #16
 800e862:	46bd      	mov	sp, r7
 800e864:	bd80      	pop	{r7, pc}

0800e866 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800e866:	b580      	push	{r7, lr}
 800e868:	b084      	sub	sp, #16
 800e86a:	af00      	add	r7, sp, #0
 800e86c:	60f8      	str	r0, [r7, #12]
 800e86e:	60b9      	str	r1, [r7, #8]
 800e870:	607a      	str	r2, [r7, #4]
 800e872:	603b      	str	r3, [r7, #0]
 800e874:	e051      	b.n	800e91a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e876:	68fb      	ldr	r3, [r7, #12]
 800e878:	681b      	ldr	r3, [r3, #0]
 800e87a:	695b      	ldr	r3, [r3, #20]
 800e87c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800e880:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800e884:	d123      	bne.n	800e8ce <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800e886:	68fb      	ldr	r3, [r7, #12]
 800e888:	681b      	ldr	r3, [r3, #0]
 800e88a:	681a      	ldr	r2, [r3, #0]
 800e88c:	68fb      	ldr	r3, [r7, #12]
 800e88e:	681b      	ldr	r3, [r3, #0]
 800e890:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800e894:	601a      	str	r2, [r3, #0]
 800e896:	68fb      	ldr	r3, [r7, #12]
 800e898:	681b      	ldr	r3, [r3, #0]
 800e89a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800e89e:	615a      	str	r2, [r3, #20]
 800e8a0:	68fb      	ldr	r3, [r7, #12]
 800e8a2:	2200      	movs	r2, #0
 800e8a4:	631a      	str	r2, [r3, #48]	@ 0x30
 800e8a6:	68fb      	ldr	r3, [r7, #12]
 800e8a8:	2220      	movs	r2, #32
 800e8aa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e8ae:	68fb      	ldr	r3, [r7, #12]
 800e8b0:	2200      	movs	r2, #0
 800e8b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e8b6:	68fb      	ldr	r3, [r7, #12]
 800e8b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e8ba:	f043 0204 	orr.w	r2, r3, #4
 800e8be:	68fb      	ldr	r3, [r7, #12]
 800e8c0:	641a      	str	r2, [r3, #64]	@ 0x40
 800e8c2:	68fb      	ldr	r3, [r7, #12]
 800e8c4:	2200      	movs	r2, #0
 800e8c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e8ca:	2301      	movs	r3, #1
 800e8cc:	e046      	b.n	800e95c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800e8ce:	687b      	ldr	r3, [r7, #4]
 800e8d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e8d4:	d021      	beq.n	800e91a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e8d6:	f7fc fbbf 	bl	800b058 <HAL_GetTick>
 800e8da:	4602      	mov	r2, r0
 800e8dc:	683b      	ldr	r3, [r7, #0]
 800e8de:	1ad3      	subs	r3, r2, r3
 800e8e0:	687a      	ldr	r2, [r7, #4]
 800e8e2:	429a      	cmp	r2, r3
 800e8e4:	d302      	bcc.n	800e8ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800e8e6:	687b      	ldr	r3, [r7, #4]
 800e8e8:	2b00      	cmp	r3, #0
 800e8ea:	d116      	bne.n	800e91a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800e8ec:	68fb      	ldr	r3, [r7, #12]
 800e8ee:	2200      	movs	r2, #0
 800e8f0:	631a      	str	r2, [r3, #48]	@ 0x30
 800e8f2:	68fb      	ldr	r3, [r7, #12]
 800e8f4:	2220      	movs	r2, #32
 800e8f6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e8fa:	68fb      	ldr	r3, [r7, #12]
 800e8fc:	2200      	movs	r2, #0
 800e8fe:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e902:	68fb      	ldr	r3, [r7, #12]
 800e904:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e906:	f043 0220 	orr.w	r2, r3, #32
 800e90a:	68fb      	ldr	r3, [r7, #12]
 800e90c:	641a      	str	r2, [r3, #64]	@ 0x40
 800e90e:	68fb      	ldr	r3, [r7, #12]
 800e910:	2200      	movs	r2, #0
 800e912:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e916:	2301      	movs	r3, #1
 800e918:	e020      	b.n	800e95c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800e91a:	68bb      	ldr	r3, [r7, #8]
 800e91c:	0c1b      	lsrs	r3, r3, #16
 800e91e:	b2db      	uxtb	r3, r3
 800e920:	2b01      	cmp	r3, #1
 800e922:	d10c      	bne.n	800e93e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 800e924:	68fb      	ldr	r3, [r7, #12]
 800e926:	681b      	ldr	r3, [r3, #0]
 800e928:	695b      	ldr	r3, [r3, #20]
 800e92a:	43da      	mvns	r2, r3
 800e92c:	68bb      	ldr	r3, [r7, #8]
 800e92e:	4013      	ands	r3, r2
 800e930:	b29b      	uxth	r3, r3
 800e932:	2b00      	cmp	r3, #0
 800e934:	bf14      	ite	ne
 800e936:	2301      	movne	r3, #1
 800e938:	2300      	moveq	r3, #0
 800e93a:	b2db      	uxtb	r3, r3
 800e93c:	e00b      	b.n	800e956 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800e93e:	68fb      	ldr	r3, [r7, #12]
 800e940:	681b      	ldr	r3, [r3, #0]
 800e942:	699b      	ldr	r3, [r3, #24]
 800e944:	43da      	mvns	r2, r3
 800e946:	68bb      	ldr	r3, [r7, #8]
 800e948:	4013      	ands	r3, r2
 800e94a:	b29b      	uxth	r3, r3
 800e94c:	2b00      	cmp	r3, #0
 800e94e:	bf14      	ite	ne
 800e950:	2301      	movne	r3, #1
 800e952:	2300      	moveq	r3, #0
 800e954:	b2db      	uxtb	r3, r3
 800e956:	2b00      	cmp	r3, #0
 800e958:	d18d      	bne.n	800e876 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800e95a:	2300      	movs	r3, #0
 800e95c:	4618      	mov	r0, r3
 800e95e:	3710      	adds	r7, #16
 800e960:	46bd      	mov	sp, r7
 800e962:	bd80      	pop	{r7, pc}

0800e964 <I2C_WaitOnTXEFlagUntilTimeout>:
 800e964:	b580      	push	{r7, lr}
 800e966:	b084      	sub	sp, #16
 800e968:	af00      	add	r7, sp, #0
 800e96a:	60f8      	str	r0, [r7, #12]
 800e96c:	60b9      	str	r1, [r7, #8]
 800e96e:	607a      	str	r2, [r7, #4]
 800e970:	e02d      	b.n	800e9ce <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800e972:	68f8      	ldr	r0, [r7, #12]
 800e974:	f000 f8ce 	bl	800eb14 <I2C_IsAcknowledgeFailed>
 800e978:	4603      	mov	r3, r0
 800e97a:	2b00      	cmp	r3, #0
 800e97c:	d001      	beq.n	800e982 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800e97e:	2301      	movs	r3, #1
 800e980:	e02d      	b.n	800e9de <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800e982:	68bb      	ldr	r3, [r7, #8]
 800e984:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e988:	d021      	beq.n	800e9ce <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800e98a:	f7fc fb65 	bl	800b058 <HAL_GetTick>
 800e98e:	4602      	mov	r2, r0
 800e990:	687b      	ldr	r3, [r7, #4]
 800e992:	1ad3      	subs	r3, r2, r3
 800e994:	68ba      	ldr	r2, [r7, #8]
 800e996:	429a      	cmp	r2, r3
 800e998:	d302      	bcc.n	800e9a0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800e99a:	68bb      	ldr	r3, [r7, #8]
 800e99c:	2b00      	cmp	r3, #0
 800e99e:	d116      	bne.n	800e9ce <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800e9a0:	68fb      	ldr	r3, [r7, #12]
 800e9a2:	2200      	movs	r2, #0
 800e9a4:	631a      	str	r2, [r3, #48]	@ 0x30
 800e9a6:	68fb      	ldr	r3, [r7, #12]
 800e9a8:	2220      	movs	r2, #32
 800e9aa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800e9ae:	68fb      	ldr	r3, [r7, #12]
 800e9b0:	2200      	movs	r2, #0
 800e9b2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800e9b6:	68fb      	ldr	r3, [r7, #12]
 800e9b8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e9ba:	f043 0220 	orr.w	r2, r3, #32
 800e9be:	68fb      	ldr	r3, [r7, #12]
 800e9c0:	641a      	str	r2, [r3, #64]	@ 0x40
 800e9c2:	68fb      	ldr	r3, [r7, #12]
 800e9c4:	2200      	movs	r2, #0
 800e9c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800e9ca:	2301      	movs	r3, #1
 800e9cc:	e007      	b.n	800e9de <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800e9ce:	68fb      	ldr	r3, [r7, #12]
 800e9d0:	681b      	ldr	r3, [r3, #0]
 800e9d2:	695b      	ldr	r3, [r3, #20]
 800e9d4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800e9d8:	2b80      	cmp	r3, #128	@ 0x80
 800e9da:	d1ca      	bne.n	800e972 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800e9dc:	2300      	movs	r3, #0
 800e9de:	4618      	mov	r0, r3
 800e9e0:	3710      	adds	r7, #16
 800e9e2:	46bd      	mov	sp, r7
 800e9e4:	bd80      	pop	{r7, pc}

0800e9e6 <I2C_WaitOnBTFFlagUntilTimeout>:
 800e9e6:	b580      	push	{r7, lr}
 800e9e8:	b084      	sub	sp, #16
 800e9ea:	af00      	add	r7, sp, #0
 800e9ec:	60f8      	str	r0, [r7, #12]
 800e9ee:	60b9      	str	r1, [r7, #8]
 800e9f0:	607a      	str	r2, [r7, #4]
 800e9f2:	e02d      	b.n	800ea50 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800e9f4:	68f8      	ldr	r0, [r7, #12]
 800e9f6:	f000 f88d 	bl	800eb14 <I2C_IsAcknowledgeFailed>
 800e9fa:	4603      	mov	r3, r0
 800e9fc:	2b00      	cmp	r3, #0
 800e9fe:	d001      	beq.n	800ea04 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800ea00:	2301      	movs	r3, #1
 800ea02:	e02d      	b.n	800ea60 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800ea04:	68bb      	ldr	r3, [r7, #8]
 800ea06:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ea0a:	d021      	beq.n	800ea50 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800ea0c:	f7fc fb24 	bl	800b058 <HAL_GetTick>
 800ea10:	4602      	mov	r2, r0
 800ea12:	687b      	ldr	r3, [r7, #4]
 800ea14:	1ad3      	subs	r3, r2, r3
 800ea16:	68ba      	ldr	r2, [r7, #8]
 800ea18:	429a      	cmp	r2, r3
 800ea1a:	d302      	bcc.n	800ea22 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800ea1c:	68bb      	ldr	r3, [r7, #8]
 800ea1e:	2b00      	cmp	r3, #0
 800ea20:	d116      	bne.n	800ea50 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800ea22:	68fb      	ldr	r3, [r7, #12]
 800ea24:	2200      	movs	r2, #0
 800ea26:	631a      	str	r2, [r3, #48]	@ 0x30
 800ea28:	68fb      	ldr	r3, [r7, #12]
 800ea2a:	2220      	movs	r2, #32
 800ea2c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea30:	68fb      	ldr	r3, [r7, #12]
 800ea32:	2200      	movs	r2, #0
 800ea34:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800ea38:	68fb      	ldr	r3, [r7, #12]
 800ea3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ea3c:	f043 0220 	orr.w	r2, r3, #32
 800ea40:	68fb      	ldr	r3, [r7, #12]
 800ea42:	641a      	str	r2, [r3, #64]	@ 0x40
 800ea44:	68fb      	ldr	r3, [r7, #12]
 800ea46:	2200      	movs	r2, #0
 800ea48:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800ea4c:	2301      	movs	r3, #1
 800ea4e:	e007      	b.n	800ea60 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 800ea50:	68fb      	ldr	r3, [r7, #12]
 800ea52:	681b      	ldr	r3, [r3, #0]
 800ea54:	695b      	ldr	r3, [r3, #20]
 800ea56:	f003 0304 	and.w	r3, r3, #4
 800ea5a:	2b04      	cmp	r3, #4
 800ea5c:	d1ca      	bne.n	800e9f4 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800ea5e:	2300      	movs	r3, #0
 800ea60:	4618      	mov	r0, r3
 800ea62:	3710      	adds	r7, #16
 800ea64:	46bd      	mov	sp, r7
 800ea66:	bd80      	pop	{r7, pc}

0800ea68 <I2C_WaitOnRXNEFlagUntilTimeout>:
 800ea68:	b580      	push	{r7, lr}
 800ea6a:	b084      	sub	sp, #16
 800ea6c:	af00      	add	r7, sp, #0
 800ea6e:	60f8      	str	r0, [r7, #12]
 800ea70:	60b9      	str	r1, [r7, #8]
 800ea72:	607a      	str	r2, [r7, #4]
 800ea74:	e042      	b.n	800eafc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800ea76:	68fb      	ldr	r3, [r7, #12]
 800ea78:	681b      	ldr	r3, [r3, #0]
 800ea7a:	695b      	ldr	r3, [r3, #20]
 800ea7c:	f003 0310 	and.w	r3, r3, #16
 800ea80:	2b10      	cmp	r3, #16
 800ea82:	d119      	bne.n	800eab8 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 800ea84:	68fb      	ldr	r3, [r7, #12]
 800ea86:	681b      	ldr	r3, [r3, #0]
 800ea88:	f06f 0210 	mvn.w	r2, #16
 800ea8c:	615a      	str	r2, [r3, #20]
 800ea8e:	68fb      	ldr	r3, [r7, #12]
 800ea90:	2200      	movs	r2, #0
 800ea92:	631a      	str	r2, [r3, #48]	@ 0x30
 800ea94:	68fb      	ldr	r3, [r7, #12]
 800ea96:	2220      	movs	r2, #32
 800ea98:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800ea9c:	68fb      	ldr	r3, [r7, #12]
 800ea9e:	2200      	movs	r2, #0
 800eaa0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800eaa4:	68fb      	ldr	r3, [r7, #12]
 800eaa6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800eaa8:	68fb      	ldr	r3, [r7, #12]
 800eaaa:	641a      	str	r2, [r3, #64]	@ 0x40
 800eaac:	68fb      	ldr	r3, [r7, #12]
 800eaae:	2200      	movs	r2, #0
 800eab0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eab4:	2301      	movs	r3, #1
 800eab6:	e029      	b.n	800eb0c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800eab8:	f7fc face 	bl	800b058 <HAL_GetTick>
 800eabc:	4602      	mov	r2, r0
 800eabe:	687b      	ldr	r3, [r7, #4]
 800eac0:	1ad3      	subs	r3, r2, r3
 800eac2:	68ba      	ldr	r2, [r7, #8]
 800eac4:	429a      	cmp	r2, r3
 800eac6:	d302      	bcc.n	800eace <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800eac8:	68bb      	ldr	r3, [r7, #8]
 800eaca:	2b00      	cmp	r3, #0
 800eacc:	d116      	bne.n	800eafc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800eace:	68fb      	ldr	r3, [r7, #12]
 800ead0:	2200      	movs	r2, #0
 800ead2:	631a      	str	r2, [r3, #48]	@ 0x30
 800ead4:	68fb      	ldr	r3, [r7, #12]
 800ead6:	2220      	movs	r2, #32
 800ead8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eadc:	68fb      	ldr	r3, [r7, #12]
 800eade:	2200      	movs	r2, #0
 800eae0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800eae4:	68fb      	ldr	r3, [r7, #12]
 800eae6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800eae8:	f043 0220 	orr.w	r2, r3, #32
 800eaec:	68fb      	ldr	r3, [r7, #12]
 800eaee:	641a      	str	r2, [r3, #64]	@ 0x40
 800eaf0:	68fb      	ldr	r3, [r7, #12]
 800eaf2:	2200      	movs	r2, #0
 800eaf4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eaf8:	2301      	movs	r3, #1
 800eafa:	e007      	b.n	800eb0c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800eafc:	68fb      	ldr	r3, [r7, #12]
 800eafe:	681b      	ldr	r3, [r3, #0]
 800eb00:	695b      	ldr	r3, [r3, #20]
 800eb02:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800eb06:	2b40      	cmp	r3, #64	@ 0x40
 800eb08:	d1b5      	bne.n	800ea76 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800eb0a:	2300      	movs	r3, #0
 800eb0c:	4618      	mov	r0, r3
 800eb0e:	3710      	adds	r7, #16
 800eb10:	46bd      	mov	sp, r7
 800eb12:	bd80      	pop	{r7, pc}

0800eb14 <I2C_IsAcknowledgeFailed>:
 800eb14:	b480      	push	{r7}
 800eb16:	b083      	sub	sp, #12
 800eb18:	af00      	add	r7, sp, #0
 800eb1a:	6078      	str	r0, [r7, #4]
 800eb1c:	687b      	ldr	r3, [r7, #4]
 800eb1e:	681b      	ldr	r3, [r3, #0]
 800eb20:	695b      	ldr	r3, [r3, #20]
 800eb22:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800eb26:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800eb2a:	d11b      	bne.n	800eb64 <I2C_IsAcknowledgeFailed+0x50>
 800eb2c:	687b      	ldr	r3, [r7, #4]
 800eb2e:	681b      	ldr	r3, [r3, #0]
 800eb30:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800eb34:	615a      	str	r2, [r3, #20]
 800eb36:	687b      	ldr	r3, [r7, #4]
 800eb38:	2200      	movs	r2, #0
 800eb3a:	631a      	str	r2, [r3, #48]	@ 0x30
 800eb3c:	687b      	ldr	r3, [r7, #4]
 800eb3e:	2220      	movs	r2, #32
 800eb40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800eb44:	687b      	ldr	r3, [r7, #4]
 800eb46:	2200      	movs	r2, #0
 800eb48:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800eb4c:	687b      	ldr	r3, [r7, #4]
 800eb4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800eb50:	f043 0204 	orr.w	r2, r3, #4
 800eb54:	687b      	ldr	r3, [r7, #4]
 800eb56:	641a      	str	r2, [r3, #64]	@ 0x40
 800eb58:	687b      	ldr	r3, [r7, #4]
 800eb5a:	2200      	movs	r2, #0
 800eb5c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800eb60:	2301      	movs	r3, #1
 800eb62:	e000      	b.n	800eb66 <I2C_IsAcknowledgeFailed+0x52>
 800eb64:	2300      	movs	r3, #0
 800eb66:	4618      	mov	r0, r3
 800eb68:	370c      	adds	r7, #12
 800eb6a:	46bd      	mov	sp, r7
 800eb6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb70:	4770      	bx	lr

0800eb72 <HAL_PCD_Init>:
 800eb72:	b5f0      	push	{r4, r5, r6, r7, lr}
 800eb74:	b08f      	sub	sp, #60	@ 0x3c
 800eb76:	af0a      	add	r7, sp, #40	@ 0x28
 800eb78:	6078      	str	r0, [r7, #4]
 800eb7a:	687b      	ldr	r3, [r7, #4]
 800eb7c:	2b00      	cmp	r3, #0
 800eb7e:	d101      	bne.n	800eb84 <HAL_PCD_Init+0x12>
 800eb80:	2301      	movs	r3, #1
 800eb82:	e10f      	b.n	800eda4 <HAL_PCD_Init+0x232>
 800eb84:	687b      	ldr	r3, [r7, #4]
 800eb86:	681b      	ldr	r3, [r3, #0]
 800eb88:	60bb      	str	r3, [r7, #8]
 800eb8a:	687b      	ldr	r3, [r7, #4]
 800eb8c:	f893 34bd 	ldrb.w	r3, [r3, #1213]	@ 0x4bd
 800eb90:	b2db      	uxtb	r3, r3
 800eb92:	2b00      	cmp	r3, #0
 800eb94:	d106      	bne.n	800eba4 <HAL_PCD_Init+0x32>
 800eb96:	687b      	ldr	r3, [r7, #4]
 800eb98:	2200      	movs	r2, #0
 800eb9a:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800eb9e:	6878      	ldr	r0, [r7, #4]
 800eba0:	f00b fd1a 	bl	801a5d8 <HAL_PCD_MspInit>
 800eba4:	687b      	ldr	r3, [r7, #4]
 800eba6:	2203      	movs	r2, #3
 800eba8:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ebac:	68bb      	ldr	r3, [r7, #8]
 800ebae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ebb0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ebb4:	2b00      	cmp	r3, #0
 800ebb6:	d102      	bne.n	800ebbe <HAL_PCD_Init+0x4c>
 800ebb8:	687b      	ldr	r3, [r7, #4]
 800ebba:	2200      	movs	r2, #0
 800ebbc:	611a      	str	r2, [r3, #16]
 800ebbe:	687b      	ldr	r3, [r7, #4]
 800ebc0:	681b      	ldr	r3, [r3, #0]
 800ebc2:	4618      	mov	r0, r3
 800ebc4:	f004 ff2b 	bl	8013a1e <USB_DisableGlobalInt>
 800ebc8:	687b      	ldr	r3, [r7, #4]
 800ebca:	681b      	ldr	r3, [r3, #0]
 800ebcc:	603b      	str	r3, [r7, #0]
 800ebce:	687e      	ldr	r6, [r7, #4]
 800ebd0:	466d      	mov	r5, sp
 800ebd2:	f106 0410 	add.w	r4, r6, #16
 800ebd6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ebd8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ebda:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ebdc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ebde:	e894 0003 	ldmia.w	r4, {r0, r1}
 800ebe2:	e885 0003 	stmia.w	r5, {r0, r1}
 800ebe6:	1d33      	adds	r3, r6, #4
 800ebe8:	cb0e      	ldmia	r3, {r1, r2, r3}
 800ebea:	6838      	ldr	r0, [r7, #0]
 800ebec:	f004 fe02 	bl	80137f4 <USB_CoreInit>
 800ebf0:	4603      	mov	r3, r0
 800ebf2:	2b00      	cmp	r3, #0
 800ebf4:	d005      	beq.n	800ec02 <HAL_PCD_Init+0x90>
 800ebf6:	687b      	ldr	r3, [r7, #4]
 800ebf8:	2202      	movs	r2, #2
 800ebfa:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ebfe:	2301      	movs	r3, #1
 800ec00:	e0d0      	b.n	800eda4 <HAL_PCD_Init+0x232>
 800ec02:	687b      	ldr	r3, [r7, #4]
 800ec04:	681b      	ldr	r3, [r3, #0]
 800ec06:	2100      	movs	r1, #0
 800ec08:	4618      	mov	r0, r3
 800ec0a:	f004 ff19 	bl	8013a40 <USB_SetCurrentMode>
 800ec0e:	2300      	movs	r3, #0
 800ec10:	73fb      	strb	r3, [r7, #15]
 800ec12:	e04a      	b.n	800ecaa <HAL_PCD_Init+0x138>
 800ec14:	7bfa      	ldrb	r2, [r7, #15]
 800ec16:	6879      	ldr	r1, [r7, #4]
 800ec18:	4613      	mov	r3, r2
 800ec1a:	00db      	lsls	r3, r3, #3
 800ec1c:	4413      	add	r3, r2
 800ec1e:	009b      	lsls	r3, r3, #2
 800ec20:	440b      	add	r3, r1
 800ec22:	333d      	adds	r3, #61	@ 0x3d
 800ec24:	2201      	movs	r2, #1
 800ec26:	701a      	strb	r2, [r3, #0]
 800ec28:	7bfa      	ldrb	r2, [r7, #15]
 800ec2a:	6879      	ldr	r1, [r7, #4]
 800ec2c:	4613      	mov	r3, r2
 800ec2e:	00db      	lsls	r3, r3, #3
 800ec30:	4413      	add	r3, r2
 800ec32:	009b      	lsls	r3, r3, #2
 800ec34:	440b      	add	r3, r1
 800ec36:	333c      	adds	r3, #60	@ 0x3c
 800ec38:	7bfa      	ldrb	r2, [r7, #15]
 800ec3a:	701a      	strb	r2, [r3, #0]
 800ec3c:	7bfa      	ldrb	r2, [r7, #15]
 800ec3e:	7bfb      	ldrb	r3, [r7, #15]
 800ec40:	b298      	uxth	r0, r3
 800ec42:	6879      	ldr	r1, [r7, #4]
 800ec44:	4613      	mov	r3, r2
 800ec46:	00db      	lsls	r3, r3, #3
 800ec48:	4413      	add	r3, r2
 800ec4a:	009b      	lsls	r3, r3, #2
 800ec4c:	440b      	add	r3, r1
 800ec4e:	3344      	adds	r3, #68	@ 0x44
 800ec50:	4602      	mov	r2, r0
 800ec52:	801a      	strh	r2, [r3, #0]
 800ec54:	7bfa      	ldrb	r2, [r7, #15]
 800ec56:	6879      	ldr	r1, [r7, #4]
 800ec58:	4613      	mov	r3, r2
 800ec5a:	00db      	lsls	r3, r3, #3
 800ec5c:	4413      	add	r3, r2
 800ec5e:	009b      	lsls	r3, r3, #2
 800ec60:	440b      	add	r3, r1
 800ec62:	3340      	adds	r3, #64	@ 0x40
 800ec64:	2200      	movs	r2, #0
 800ec66:	701a      	strb	r2, [r3, #0]
 800ec68:	7bfa      	ldrb	r2, [r7, #15]
 800ec6a:	6879      	ldr	r1, [r7, #4]
 800ec6c:	4613      	mov	r3, r2
 800ec6e:	00db      	lsls	r3, r3, #3
 800ec70:	4413      	add	r3, r2
 800ec72:	009b      	lsls	r3, r3, #2
 800ec74:	440b      	add	r3, r1
 800ec76:	3348      	adds	r3, #72	@ 0x48
 800ec78:	2200      	movs	r2, #0
 800ec7a:	601a      	str	r2, [r3, #0]
 800ec7c:	7bfa      	ldrb	r2, [r7, #15]
 800ec7e:	6879      	ldr	r1, [r7, #4]
 800ec80:	4613      	mov	r3, r2
 800ec82:	00db      	lsls	r3, r3, #3
 800ec84:	4413      	add	r3, r2
 800ec86:	009b      	lsls	r3, r3, #2
 800ec88:	440b      	add	r3, r1
 800ec8a:	334c      	adds	r3, #76	@ 0x4c
 800ec8c:	2200      	movs	r2, #0
 800ec8e:	601a      	str	r2, [r3, #0]
 800ec90:	7bfa      	ldrb	r2, [r7, #15]
 800ec92:	6879      	ldr	r1, [r7, #4]
 800ec94:	4613      	mov	r3, r2
 800ec96:	00db      	lsls	r3, r3, #3
 800ec98:	4413      	add	r3, r2
 800ec9a:	009b      	lsls	r3, r3, #2
 800ec9c:	440b      	add	r3, r1
 800ec9e:	3354      	adds	r3, #84	@ 0x54
 800eca0:	2200      	movs	r2, #0
 800eca2:	601a      	str	r2, [r3, #0]
 800eca4:	7bfb      	ldrb	r3, [r7, #15]
 800eca6:	3301      	adds	r3, #1
 800eca8:	73fb      	strb	r3, [r7, #15]
 800ecaa:	7bfa      	ldrb	r2, [r7, #15]
 800ecac:	687b      	ldr	r3, [r7, #4]
 800ecae:	685b      	ldr	r3, [r3, #4]
 800ecb0:	429a      	cmp	r2, r3
 800ecb2:	d3af      	bcc.n	800ec14 <HAL_PCD_Init+0xa2>
 800ecb4:	2300      	movs	r3, #0
 800ecb6:	73fb      	strb	r3, [r7, #15]
 800ecb8:	e044      	b.n	800ed44 <HAL_PCD_Init+0x1d2>
 800ecba:	7bfa      	ldrb	r2, [r7, #15]
 800ecbc:	6879      	ldr	r1, [r7, #4]
 800ecbe:	4613      	mov	r3, r2
 800ecc0:	00db      	lsls	r3, r3, #3
 800ecc2:	4413      	add	r3, r2
 800ecc4:	009b      	lsls	r3, r3, #2
 800ecc6:	440b      	add	r3, r1
 800ecc8:	f203 237d 	addw	r3, r3, #637	@ 0x27d
 800eccc:	2200      	movs	r2, #0
 800ecce:	701a      	strb	r2, [r3, #0]
 800ecd0:	7bfa      	ldrb	r2, [r7, #15]
 800ecd2:	6879      	ldr	r1, [r7, #4]
 800ecd4:	4613      	mov	r3, r2
 800ecd6:	00db      	lsls	r3, r3, #3
 800ecd8:	4413      	add	r3, r2
 800ecda:	009b      	lsls	r3, r3, #2
 800ecdc:	440b      	add	r3, r1
 800ecde:	f503 731f 	add.w	r3, r3, #636	@ 0x27c
 800ece2:	7bfa      	ldrb	r2, [r7, #15]
 800ece4:	701a      	strb	r2, [r3, #0]
 800ece6:	7bfa      	ldrb	r2, [r7, #15]
 800ece8:	6879      	ldr	r1, [r7, #4]
 800ecea:	4613      	mov	r3, r2
 800ecec:	00db      	lsls	r3, r3, #3
 800ecee:	4413      	add	r3, r2
 800ecf0:	009b      	lsls	r3, r3, #2
 800ecf2:	440b      	add	r3, r1
 800ecf4:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 800ecf8:	2200      	movs	r2, #0
 800ecfa:	701a      	strb	r2, [r3, #0]
 800ecfc:	7bfa      	ldrb	r2, [r7, #15]
 800ecfe:	6879      	ldr	r1, [r7, #4]
 800ed00:	4613      	mov	r3, r2
 800ed02:	00db      	lsls	r3, r3, #3
 800ed04:	4413      	add	r3, r2
 800ed06:	009b      	lsls	r3, r3, #2
 800ed08:	440b      	add	r3, r1
 800ed0a:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800ed0e:	2200      	movs	r2, #0
 800ed10:	601a      	str	r2, [r3, #0]
 800ed12:	7bfa      	ldrb	r2, [r7, #15]
 800ed14:	6879      	ldr	r1, [r7, #4]
 800ed16:	4613      	mov	r3, r2
 800ed18:	00db      	lsls	r3, r3, #3
 800ed1a:	4413      	add	r3, r2
 800ed1c:	009b      	lsls	r3, r3, #2
 800ed1e:	440b      	add	r3, r1
 800ed20:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 800ed24:	2200      	movs	r2, #0
 800ed26:	601a      	str	r2, [r3, #0]
 800ed28:	7bfa      	ldrb	r2, [r7, #15]
 800ed2a:	6879      	ldr	r1, [r7, #4]
 800ed2c:	4613      	mov	r3, r2
 800ed2e:	00db      	lsls	r3, r3, #3
 800ed30:	4413      	add	r3, r2
 800ed32:	009b      	lsls	r3, r3, #2
 800ed34:	440b      	add	r3, r1
 800ed36:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 800ed3a:	2200      	movs	r2, #0
 800ed3c:	601a      	str	r2, [r3, #0]
 800ed3e:	7bfb      	ldrb	r3, [r7, #15]
 800ed40:	3301      	adds	r3, #1
 800ed42:	73fb      	strb	r3, [r7, #15]
 800ed44:	7bfa      	ldrb	r2, [r7, #15]
 800ed46:	687b      	ldr	r3, [r7, #4]
 800ed48:	685b      	ldr	r3, [r3, #4]
 800ed4a:	429a      	cmp	r2, r3
 800ed4c:	d3b5      	bcc.n	800ecba <HAL_PCD_Init+0x148>
 800ed4e:	687b      	ldr	r3, [r7, #4]
 800ed50:	681b      	ldr	r3, [r3, #0]
 800ed52:	603b      	str	r3, [r7, #0]
 800ed54:	687e      	ldr	r6, [r7, #4]
 800ed56:	466d      	mov	r5, sp
 800ed58:	f106 0410 	add.w	r4, r6, #16
 800ed5c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ed5e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ed60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ed62:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800ed64:	e894 0003 	ldmia.w	r4, {r0, r1}
 800ed68:	e885 0003 	stmia.w	r5, {r0, r1}
 800ed6c:	1d33      	adds	r3, r6, #4
 800ed6e:	cb0e      	ldmia	r3, {r1, r2, r3}
 800ed70:	6838      	ldr	r0, [r7, #0]
 800ed72:	f004 feb1 	bl	8013ad8 <USB_DevInit>
 800ed76:	4603      	mov	r3, r0
 800ed78:	2b00      	cmp	r3, #0
 800ed7a:	d005      	beq.n	800ed88 <HAL_PCD_Init+0x216>
 800ed7c:	687b      	ldr	r3, [r7, #4]
 800ed7e:	2202      	movs	r2, #2
 800ed80:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ed84:	2301      	movs	r3, #1
 800ed86:	e00d      	b.n	800eda4 <HAL_PCD_Init+0x232>
 800ed88:	687b      	ldr	r3, [r7, #4]
 800ed8a:	2200      	movs	r2, #0
 800ed8c:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800ed90:	687b      	ldr	r3, [r7, #4]
 800ed92:	2201      	movs	r2, #1
 800ed94:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 800ed98:	687b      	ldr	r3, [r7, #4]
 800ed9a:	681b      	ldr	r3, [r3, #0]
 800ed9c:	4618      	mov	r0, r3
 800ed9e:	f006 f800 	bl	8014da2 <USB_DevDisconnect>
 800eda2:	2300      	movs	r3, #0
 800eda4:	4618      	mov	r0, r3
 800eda6:	3714      	adds	r7, #20
 800eda8:	46bd      	mov	sp, r7
 800edaa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800edac <HAL_PCD_Start>:
 800edac:	b580      	push	{r7, lr}
 800edae:	b084      	sub	sp, #16
 800edb0:	af00      	add	r7, sp, #0
 800edb2:	6078      	str	r0, [r7, #4]
 800edb4:	687b      	ldr	r3, [r7, #4]
 800edb6:	681b      	ldr	r3, [r3, #0]
 800edb8:	60fb      	str	r3, [r7, #12]
 800edba:	687b      	ldr	r3, [r7, #4]
 800edbc:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800edc0:	2b01      	cmp	r3, #1
 800edc2:	d101      	bne.n	800edc8 <HAL_PCD_Start+0x1c>
 800edc4:	2302      	movs	r3, #2
 800edc6:	e020      	b.n	800ee0a <HAL_PCD_Start+0x5e>
 800edc8:	687b      	ldr	r3, [r7, #4]
 800edca:	2201      	movs	r2, #1
 800edcc:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800edd0:	687b      	ldr	r3, [r7, #4]
 800edd2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800edd4:	2b01      	cmp	r3, #1
 800edd6:	d109      	bne.n	800edec <HAL_PCD_Start+0x40>
 800edd8:	687b      	ldr	r3, [r7, #4]
 800edda:	699b      	ldr	r3, [r3, #24]
 800eddc:	2b01      	cmp	r3, #1
 800edde:	d005      	beq.n	800edec <HAL_PCD_Start+0x40>
 800ede0:	68fb      	ldr	r3, [r7, #12]
 800ede2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ede4:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 800ede8:	68fb      	ldr	r3, [r7, #12]
 800edea:	639a      	str	r2, [r3, #56]	@ 0x38
 800edec:	687b      	ldr	r3, [r7, #4]
 800edee:	681b      	ldr	r3, [r3, #0]
 800edf0:	4618      	mov	r0, r3
 800edf2:	f004 fe03 	bl	80139fc <USB_EnableGlobalInt>
 800edf6:	687b      	ldr	r3, [r7, #4]
 800edf8:	681b      	ldr	r3, [r3, #0]
 800edfa:	4618      	mov	r0, r3
 800edfc:	f005 ffb0 	bl	8014d60 <USB_DevConnect>
 800ee00:	687b      	ldr	r3, [r7, #4]
 800ee02:	2200      	movs	r2, #0
 800ee04:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800ee08:	2300      	movs	r3, #0
 800ee0a:	4618      	mov	r0, r3
 800ee0c:	3710      	adds	r7, #16
 800ee0e:	46bd      	mov	sp, r7
 800ee10:	bd80      	pop	{r7, pc}

0800ee12 <HAL_PCD_IRQHandler>:
 800ee12:	b590      	push	{r4, r7, lr}
 800ee14:	b08d      	sub	sp, #52	@ 0x34
 800ee16:	af00      	add	r7, sp, #0
 800ee18:	6078      	str	r0, [r7, #4]
 800ee1a:	687b      	ldr	r3, [r7, #4]
 800ee1c:	681b      	ldr	r3, [r3, #0]
 800ee1e:	623b      	str	r3, [r7, #32]
 800ee20:	6a3b      	ldr	r3, [r7, #32]
 800ee22:	61fb      	str	r3, [r7, #28]
 800ee24:	687b      	ldr	r3, [r7, #4]
 800ee26:	681b      	ldr	r3, [r3, #0]
 800ee28:	4618      	mov	r0, r3
 800ee2a:	f006 f86e 	bl	8014f0a <USB_GetMode>
 800ee2e:	4603      	mov	r3, r0
 800ee30:	2b00      	cmp	r3, #0
 800ee32:	f040 848a 	bne.w	800f74a <HAL_PCD_IRQHandler+0x938>
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	681b      	ldr	r3, [r3, #0]
 800ee3a:	4618      	mov	r0, r3
 800ee3c:	f005 ffd2 	bl	8014de4 <USB_ReadInterrupts>
 800ee40:	4603      	mov	r3, r0
 800ee42:	2b00      	cmp	r3, #0
 800ee44:	f000 8480 	beq.w	800f748 <HAL_PCD_IRQHandler+0x936>
 800ee48:	69fb      	ldr	r3, [r7, #28]
 800ee4a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800ee4e:	689b      	ldr	r3, [r3, #8]
 800ee50:	0a1b      	lsrs	r3, r3, #8
 800ee52:	f3c3 020d 	ubfx	r2, r3, #0, #14
 800ee56:	687b      	ldr	r3, [r7, #4]
 800ee58:	f8c3 24fc 	str.w	r2, [r3, #1276]	@ 0x4fc
 800ee5c:	687b      	ldr	r3, [r7, #4]
 800ee5e:	681b      	ldr	r3, [r3, #0]
 800ee60:	4618      	mov	r0, r3
 800ee62:	f005 ffbf 	bl	8014de4 <USB_ReadInterrupts>
 800ee66:	4603      	mov	r3, r0
 800ee68:	f003 0302 	and.w	r3, r3, #2
 800ee6c:	2b02      	cmp	r3, #2
 800ee6e:	d107      	bne.n	800ee80 <HAL_PCD_IRQHandler+0x6e>
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	681b      	ldr	r3, [r3, #0]
 800ee74:	695a      	ldr	r2, [r3, #20]
 800ee76:	687b      	ldr	r3, [r7, #4]
 800ee78:	681b      	ldr	r3, [r3, #0]
 800ee7a:	f002 0202 	and.w	r2, r2, #2
 800ee7e:	615a      	str	r2, [r3, #20]
 800ee80:	687b      	ldr	r3, [r7, #4]
 800ee82:	681b      	ldr	r3, [r3, #0]
 800ee84:	4618      	mov	r0, r3
 800ee86:	f005 ffad 	bl	8014de4 <USB_ReadInterrupts>
 800ee8a:	4603      	mov	r3, r0
 800ee8c:	f003 0310 	and.w	r3, r3, #16
 800ee90:	2b10      	cmp	r3, #16
 800ee92:	d161      	bne.n	800ef58 <HAL_PCD_IRQHandler+0x146>
 800ee94:	687b      	ldr	r3, [r7, #4]
 800ee96:	681b      	ldr	r3, [r3, #0]
 800ee98:	699a      	ldr	r2, [r3, #24]
 800ee9a:	687b      	ldr	r3, [r7, #4]
 800ee9c:	681b      	ldr	r3, [r3, #0]
 800ee9e:	f022 0210 	bic.w	r2, r2, #16
 800eea2:	619a      	str	r2, [r3, #24]
 800eea4:	6a3b      	ldr	r3, [r7, #32]
 800eea6:	6a1b      	ldr	r3, [r3, #32]
 800eea8:	61bb      	str	r3, [r7, #24]
 800eeaa:	69bb      	ldr	r3, [r7, #24]
 800eeac:	f003 020f 	and.w	r2, r3, #15
 800eeb0:	4613      	mov	r3, r2
 800eeb2:	00db      	lsls	r3, r3, #3
 800eeb4:	4413      	add	r3, r2
 800eeb6:	009b      	lsls	r3, r3, #2
 800eeb8:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800eebc:	687a      	ldr	r2, [r7, #4]
 800eebe:	4413      	add	r3, r2
 800eec0:	3304      	adds	r3, #4
 800eec2:	617b      	str	r3, [r7, #20]
 800eec4:	69bb      	ldr	r3, [r7, #24]
 800eec6:	0c5b      	lsrs	r3, r3, #17
 800eec8:	f003 030f 	and.w	r3, r3, #15
 800eecc:	2b02      	cmp	r3, #2
 800eece:	d124      	bne.n	800ef1a <HAL_PCD_IRQHandler+0x108>
 800eed0:	69ba      	ldr	r2, [r7, #24]
 800eed2:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 800eed6:	4013      	ands	r3, r2
 800eed8:	2b00      	cmp	r3, #0
 800eeda:	d035      	beq.n	800ef48 <HAL_PCD_IRQHandler+0x136>
 800eedc:	697b      	ldr	r3, [r7, #20]
 800eede:	6919      	ldr	r1, [r3, #16]
 800eee0:	69bb      	ldr	r3, [r7, #24]
 800eee2:	091b      	lsrs	r3, r3, #4
 800eee4:	b29b      	uxth	r3, r3
 800eee6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800eeea:	b29b      	uxth	r3, r3
 800eeec:	461a      	mov	r2, r3
 800eeee:	6a38      	ldr	r0, [r7, #32]
 800eef0:	f005 fde4 	bl	8014abc <USB_ReadPacket>
 800eef4:	697b      	ldr	r3, [r7, #20]
 800eef6:	691a      	ldr	r2, [r3, #16]
 800eef8:	69bb      	ldr	r3, [r7, #24]
 800eefa:	091b      	lsrs	r3, r3, #4
 800eefc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800ef00:	441a      	add	r2, r3
 800ef02:	697b      	ldr	r3, [r7, #20]
 800ef04:	611a      	str	r2, [r3, #16]
 800ef06:	697b      	ldr	r3, [r7, #20]
 800ef08:	6a1a      	ldr	r2, [r3, #32]
 800ef0a:	69bb      	ldr	r3, [r7, #24]
 800ef0c:	091b      	lsrs	r3, r3, #4
 800ef0e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800ef12:	441a      	add	r2, r3
 800ef14:	697b      	ldr	r3, [r7, #20]
 800ef16:	621a      	str	r2, [r3, #32]
 800ef18:	e016      	b.n	800ef48 <HAL_PCD_IRQHandler+0x136>
 800ef1a:	69bb      	ldr	r3, [r7, #24]
 800ef1c:	0c5b      	lsrs	r3, r3, #17
 800ef1e:	f003 030f 	and.w	r3, r3, #15
 800ef22:	2b06      	cmp	r3, #6
 800ef24:	d110      	bne.n	800ef48 <HAL_PCD_IRQHandler+0x136>
 800ef26:	687b      	ldr	r3, [r7, #4]
 800ef28:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800ef2c:	2208      	movs	r2, #8
 800ef2e:	4619      	mov	r1, r3
 800ef30:	6a38      	ldr	r0, [r7, #32]
 800ef32:	f005 fdc3 	bl	8014abc <USB_ReadPacket>
 800ef36:	697b      	ldr	r3, [r7, #20]
 800ef38:	6a1a      	ldr	r2, [r3, #32]
 800ef3a:	69bb      	ldr	r3, [r7, #24]
 800ef3c:	091b      	lsrs	r3, r3, #4
 800ef3e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800ef42:	441a      	add	r2, r3
 800ef44:	697b      	ldr	r3, [r7, #20]
 800ef46:	621a      	str	r2, [r3, #32]
 800ef48:	687b      	ldr	r3, [r7, #4]
 800ef4a:	681b      	ldr	r3, [r3, #0]
 800ef4c:	699a      	ldr	r2, [r3, #24]
 800ef4e:	687b      	ldr	r3, [r7, #4]
 800ef50:	681b      	ldr	r3, [r3, #0]
 800ef52:	f042 0210 	orr.w	r2, r2, #16
 800ef56:	619a      	str	r2, [r3, #24]
 800ef58:	687b      	ldr	r3, [r7, #4]
 800ef5a:	681b      	ldr	r3, [r3, #0]
 800ef5c:	4618      	mov	r0, r3
 800ef5e:	f005 ff41 	bl	8014de4 <USB_ReadInterrupts>
 800ef62:	4603      	mov	r3, r0
 800ef64:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800ef68:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 800ef6c:	f040 80a7 	bne.w	800f0be <HAL_PCD_IRQHandler+0x2ac>
 800ef70:	2300      	movs	r3, #0
 800ef72:	627b      	str	r3, [r7, #36]	@ 0x24
 800ef74:	687b      	ldr	r3, [r7, #4]
 800ef76:	681b      	ldr	r3, [r3, #0]
 800ef78:	4618      	mov	r0, r3
 800ef7a:	f005 ff46 	bl	8014e0a <USB_ReadDevAllOutEpInterrupt>
 800ef7e:	62b8      	str	r0, [r7, #40]	@ 0x28
 800ef80:	e099      	b.n	800f0b6 <HAL_PCD_IRQHandler+0x2a4>
 800ef82:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ef84:	f003 0301 	and.w	r3, r3, #1
 800ef88:	2b00      	cmp	r3, #0
 800ef8a:	f000 808e 	beq.w	800f0aa <HAL_PCD_IRQHandler+0x298>
 800ef8e:	687b      	ldr	r3, [r7, #4]
 800ef90:	681b      	ldr	r3, [r3, #0]
 800ef92:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800ef94:	b2d2      	uxtb	r2, r2
 800ef96:	4611      	mov	r1, r2
 800ef98:	4618      	mov	r0, r3
 800ef9a:	f005 ff6a 	bl	8014e72 <USB_ReadDevOutEPInterrupt>
 800ef9e:	6138      	str	r0, [r7, #16]
 800efa0:	693b      	ldr	r3, [r7, #16]
 800efa2:	f003 0301 	and.w	r3, r3, #1
 800efa6:	2b00      	cmp	r3, #0
 800efa8:	d00c      	beq.n	800efc4 <HAL_PCD_IRQHandler+0x1b2>
 800efaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800efac:	015a      	lsls	r2, r3, #5
 800efae:	69fb      	ldr	r3, [r7, #28]
 800efb0:	4413      	add	r3, r2
 800efb2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800efb6:	461a      	mov	r2, r3
 800efb8:	2301      	movs	r3, #1
 800efba:	6093      	str	r3, [r2, #8]
 800efbc:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800efbe:	6878      	ldr	r0, [r7, #4]
 800efc0:	f000 fec2 	bl	800fd48 <PCD_EP_OutXfrComplete_int>
 800efc4:	693b      	ldr	r3, [r7, #16]
 800efc6:	f003 0308 	and.w	r3, r3, #8
 800efca:	2b00      	cmp	r3, #0
 800efcc:	d00c      	beq.n	800efe8 <HAL_PCD_IRQHandler+0x1d6>
 800efce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800efd0:	015a      	lsls	r2, r3, #5
 800efd2:	69fb      	ldr	r3, [r7, #28]
 800efd4:	4413      	add	r3, r2
 800efd6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800efda:	461a      	mov	r2, r3
 800efdc:	2308      	movs	r3, #8
 800efde:	6093      	str	r3, [r2, #8]
 800efe0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800efe2:	6878      	ldr	r0, [r7, #4]
 800efe4:	f000 ff98 	bl	800ff18 <PCD_EP_OutSetupPacket_int>
 800efe8:	693b      	ldr	r3, [r7, #16]
 800efea:	f003 0310 	and.w	r3, r3, #16
 800efee:	2b00      	cmp	r3, #0
 800eff0:	d008      	beq.n	800f004 <HAL_PCD_IRQHandler+0x1f2>
 800eff2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800eff4:	015a      	lsls	r2, r3, #5
 800eff6:	69fb      	ldr	r3, [r7, #28]
 800eff8:	4413      	add	r3, r2
 800effa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800effe:	461a      	mov	r2, r3
 800f000:	2310      	movs	r3, #16
 800f002:	6093      	str	r3, [r2, #8]
 800f004:	693b      	ldr	r3, [r7, #16]
 800f006:	f003 0302 	and.w	r3, r3, #2
 800f00a:	2b00      	cmp	r3, #0
 800f00c:	d030      	beq.n	800f070 <HAL_PCD_IRQHandler+0x25e>
 800f00e:	6a3b      	ldr	r3, [r7, #32]
 800f010:	695b      	ldr	r3, [r3, #20]
 800f012:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f016:	2b80      	cmp	r3, #128	@ 0x80
 800f018:	d109      	bne.n	800f02e <HAL_PCD_IRQHandler+0x21c>
 800f01a:	69fb      	ldr	r3, [r7, #28]
 800f01c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f020:	685b      	ldr	r3, [r3, #4]
 800f022:	69fa      	ldr	r2, [r7, #28]
 800f024:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f028:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800f02c:	6053      	str	r3, [r2, #4]
 800f02e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f030:	4613      	mov	r3, r2
 800f032:	00db      	lsls	r3, r3, #3
 800f034:	4413      	add	r3, r2
 800f036:	009b      	lsls	r3, r3, #2
 800f038:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f03c:	687a      	ldr	r2, [r7, #4]
 800f03e:	4413      	add	r3, r2
 800f040:	3304      	adds	r3, #4
 800f042:	617b      	str	r3, [r7, #20]
 800f044:	697b      	ldr	r3, [r7, #20]
 800f046:	78db      	ldrb	r3, [r3, #3]
 800f048:	2b01      	cmp	r3, #1
 800f04a:	d108      	bne.n	800f05e <HAL_PCD_IRQHandler+0x24c>
 800f04c:	697b      	ldr	r3, [r7, #20]
 800f04e:	2200      	movs	r2, #0
 800f050:	70da      	strb	r2, [r3, #3]
 800f052:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f054:	b2db      	uxtb	r3, r3
 800f056:	4619      	mov	r1, r3
 800f058:	6878      	ldr	r0, [r7, #4]
 800f05a:	f00b fbc3 	bl	801a7e4 <HAL_PCD_ISOOUTIncompleteCallback>
 800f05e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f060:	015a      	lsls	r2, r3, #5
 800f062:	69fb      	ldr	r3, [r7, #28]
 800f064:	4413      	add	r3, r2
 800f066:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f06a:	461a      	mov	r2, r3
 800f06c:	2302      	movs	r3, #2
 800f06e:	6093      	str	r3, [r2, #8]
 800f070:	693b      	ldr	r3, [r7, #16]
 800f072:	f003 0320 	and.w	r3, r3, #32
 800f076:	2b00      	cmp	r3, #0
 800f078:	d008      	beq.n	800f08c <HAL_PCD_IRQHandler+0x27a>
 800f07a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f07c:	015a      	lsls	r2, r3, #5
 800f07e:	69fb      	ldr	r3, [r7, #28]
 800f080:	4413      	add	r3, r2
 800f082:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f086:	461a      	mov	r2, r3
 800f088:	2320      	movs	r3, #32
 800f08a:	6093      	str	r3, [r2, #8]
 800f08c:	693b      	ldr	r3, [r7, #16]
 800f08e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f092:	2b00      	cmp	r3, #0
 800f094:	d009      	beq.n	800f0aa <HAL_PCD_IRQHandler+0x298>
 800f096:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f098:	015a      	lsls	r2, r3, #5
 800f09a:	69fb      	ldr	r3, [r7, #28]
 800f09c:	4413      	add	r3, r2
 800f09e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f0a2:	461a      	mov	r2, r3
 800f0a4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800f0a8:	6093      	str	r3, [r2, #8]
 800f0aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f0ac:	3301      	adds	r3, #1
 800f0ae:	627b      	str	r3, [r7, #36]	@ 0x24
 800f0b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f0b2:	085b      	lsrs	r3, r3, #1
 800f0b4:	62bb      	str	r3, [r7, #40]	@ 0x28
 800f0b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f0b8:	2b00      	cmp	r3, #0
 800f0ba:	f47f af62 	bne.w	800ef82 <HAL_PCD_IRQHandler+0x170>
 800f0be:	687b      	ldr	r3, [r7, #4]
 800f0c0:	681b      	ldr	r3, [r3, #0]
 800f0c2:	4618      	mov	r0, r3
 800f0c4:	f005 fe8e 	bl	8014de4 <USB_ReadInterrupts>
 800f0c8:	4603      	mov	r3, r0
 800f0ca:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800f0ce:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 800f0d2:	f040 80db 	bne.w	800f28c <HAL_PCD_IRQHandler+0x47a>
 800f0d6:	687b      	ldr	r3, [r7, #4]
 800f0d8:	681b      	ldr	r3, [r3, #0]
 800f0da:	4618      	mov	r0, r3
 800f0dc:	f005 feaf 	bl	8014e3e <USB_ReadDevAllInEpInterrupt>
 800f0e0:	62b8      	str	r0, [r7, #40]	@ 0x28
 800f0e2:	2300      	movs	r3, #0
 800f0e4:	627b      	str	r3, [r7, #36]	@ 0x24
 800f0e6:	e0cd      	b.n	800f284 <HAL_PCD_IRQHandler+0x472>
 800f0e8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f0ea:	f003 0301 	and.w	r3, r3, #1
 800f0ee:	2b00      	cmp	r3, #0
 800f0f0:	f000 80c2 	beq.w	800f278 <HAL_PCD_IRQHandler+0x466>
 800f0f4:	687b      	ldr	r3, [r7, #4]
 800f0f6:	681b      	ldr	r3, [r3, #0]
 800f0f8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f0fa:	b2d2      	uxtb	r2, r2
 800f0fc:	4611      	mov	r1, r2
 800f0fe:	4618      	mov	r0, r3
 800f100:	f005 fed5 	bl	8014eae <USB_ReadDevInEPInterrupt>
 800f104:	6138      	str	r0, [r7, #16]
 800f106:	693b      	ldr	r3, [r7, #16]
 800f108:	f003 0301 	and.w	r3, r3, #1
 800f10c:	2b00      	cmp	r3, #0
 800f10e:	d057      	beq.n	800f1c0 <HAL_PCD_IRQHandler+0x3ae>
 800f110:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f112:	f003 030f 	and.w	r3, r3, #15
 800f116:	2201      	movs	r2, #1
 800f118:	fa02 f303 	lsl.w	r3, r2, r3
 800f11c:	60fb      	str	r3, [r7, #12]
 800f11e:	69fb      	ldr	r3, [r7, #28]
 800f120:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f124:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800f126:	68fb      	ldr	r3, [r7, #12]
 800f128:	43db      	mvns	r3, r3
 800f12a:	69f9      	ldr	r1, [r7, #28]
 800f12c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800f130:	4013      	ands	r3, r2
 800f132:	634b      	str	r3, [r1, #52]	@ 0x34
 800f134:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f136:	015a      	lsls	r2, r3, #5
 800f138:	69fb      	ldr	r3, [r7, #28]
 800f13a:	4413      	add	r3, r2
 800f13c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f140:	461a      	mov	r2, r3
 800f142:	2301      	movs	r3, #1
 800f144:	6093      	str	r3, [r2, #8]
 800f146:	687b      	ldr	r3, [r7, #4]
 800f148:	691b      	ldr	r3, [r3, #16]
 800f14a:	2b01      	cmp	r3, #1
 800f14c:	d132      	bne.n	800f1b4 <HAL_PCD_IRQHandler+0x3a2>
 800f14e:	6879      	ldr	r1, [r7, #4]
 800f150:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f152:	4613      	mov	r3, r2
 800f154:	00db      	lsls	r3, r3, #3
 800f156:	4413      	add	r3, r2
 800f158:	009b      	lsls	r3, r3, #2
 800f15a:	440b      	add	r3, r1
 800f15c:	334c      	adds	r3, #76	@ 0x4c
 800f15e:	6819      	ldr	r1, [r3, #0]
 800f160:	6878      	ldr	r0, [r7, #4]
 800f162:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f164:	4613      	mov	r3, r2
 800f166:	00db      	lsls	r3, r3, #3
 800f168:	4413      	add	r3, r2
 800f16a:	009b      	lsls	r3, r3, #2
 800f16c:	4403      	add	r3, r0
 800f16e:	3348      	adds	r3, #72	@ 0x48
 800f170:	681b      	ldr	r3, [r3, #0]
 800f172:	4419      	add	r1, r3
 800f174:	6878      	ldr	r0, [r7, #4]
 800f176:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f178:	4613      	mov	r3, r2
 800f17a:	00db      	lsls	r3, r3, #3
 800f17c:	4413      	add	r3, r2
 800f17e:	009b      	lsls	r3, r3, #2
 800f180:	4403      	add	r3, r0
 800f182:	334c      	adds	r3, #76	@ 0x4c
 800f184:	6019      	str	r1, [r3, #0]
 800f186:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f188:	2b00      	cmp	r3, #0
 800f18a:	d113      	bne.n	800f1b4 <HAL_PCD_IRQHandler+0x3a2>
 800f18c:	6879      	ldr	r1, [r7, #4]
 800f18e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f190:	4613      	mov	r3, r2
 800f192:	00db      	lsls	r3, r3, #3
 800f194:	4413      	add	r3, r2
 800f196:	009b      	lsls	r3, r3, #2
 800f198:	440b      	add	r3, r1
 800f19a:	3354      	adds	r3, #84	@ 0x54
 800f19c:	681b      	ldr	r3, [r3, #0]
 800f19e:	2b00      	cmp	r3, #0
 800f1a0:	d108      	bne.n	800f1b4 <HAL_PCD_IRQHandler+0x3a2>
 800f1a2:	687b      	ldr	r3, [r7, #4]
 800f1a4:	6818      	ldr	r0, [r3, #0]
 800f1a6:	687b      	ldr	r3, [r7, #4]
 800f1a8:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f1ac:	461a      	mov	r2, r3
 800f1ae:	2101      	movs	r1, #1
 800f1b0:	f005 fedc 	bl	8014f6c <USB_EP0_OutStart>
 800f1b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1b6:	b2db      	uxtb	r3, r3
 800f1b8:	4619      	mov	r1, r3
 800f1ba:	6878      	ldr	r0, [r7, #4]
 800f1bc:	f00b fa8d 	bl	801a6da <HAL_PCD_DataInStageCallback>
 800f1c0:	693b      	ldr	r3, [r7, #16]
 800f1c2:	f003 0308 	and.w	r3, r3, #8
 800f1c6:	2b00      	cmp	r3, #0
 800f1c8:	d008      	beq.n	800f1dc <HAL_PCD_IRQHandler+0x3ca>
 800f1ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1cc:	015a      	lsls	r2, r3, #5
 800f1ce:	69fb      	ldr	r3, [r7, #28]
 800f1d0:	4413      	add	r3, r2
 800f1d2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f1d6:	461a      	mov	r2, r3
 800f1d8:	2308      	movs	r3, #8
 800f1da:	6093      	str	r3, [r2, #8]
 800f1dc:	693b      	ldr	r3, [r7, #16]
 800f1de:	f003 0310 	and.w	r3, r3, #16
 800f1e2:	2b00      	cmp	r3, #0
 800f1e4:	d008      	beq.n	800f1f8 <HAL_PCD_IRQHandler+0x3e6>
 800f1e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f1e8:	015a      	lsls	r2, r3, #5
 800f1ea:	69fb      	ldr	r3, [r7, #28]
 800f1ec:	4413      	add	r3, r2
 800f1ee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f1f2:	461a      	mov	r2, r3
 800f1f4:	2310      	movs	r3, #16
 800f1f6:	6093      	str	r3, [r2, #8]
 800f1f8:	693b      	ldr	r3, [r7, #16]
 800f1fa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800f1fe:	2b00      	cmp	r3, #0
 800f200:	d008      	beq.n	800f214 <HAL_PCD_IRQHandler+0x402>
 800f202:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f204:	015a      	lsls	r2, r3, #5
 800f206:	69fb      	ldr	r3, [r7, #28]
 800f208:	4413      	add	r3, r2
 800f20a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f20e:	461a      	mov	r2, r3
 800f210:	2340      	movs	r3, #64	@ 0x40
 800f212:	6093      	str	r3, [r2, #8]
 800f214:	693b      	ldr	r3, [r7, #16]
 800f216:	f003 0302 	and.w	r3, r3, #2
 800f21a:	2b00      	cmp	r3, #0
 800f21c:	d023      	beq.n	800f266 <HAL_PCD_IRQHandler+0x454>
 800f21e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f220:	6a38      	ldr	r0, [r7, #32]
 800f222:	f004 fdbd 	bl	8013da0 <USB_FlushTxFifo>
 800f226:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f228:	4613      	mov	r3, r2
 800f22a:	00db      	lsls	r3, r3, #3
 800f22c:	4413      	add	r3, r2
 800f22e:	009b      	lsls	r3, r3, #2
 800f230:	3338      	adds	r3, #56	@ 0x38
 800f232:	687a      	ldr	r2, [r7, #4]
 800f234:	4413      	add	r3, r2
 800f236:	3304      	adds	r3, #4
 800f238:	617b      	str	r3, [r7, #20]
 800f23a:	697b      	ldr	r3, [r7, #20]
 800f23c:	78db      	ldrb	r3, [r3, #3]
 800f23e:	2b01      	cmp	r3, #1
 800f240:	d108      	bne.n	800f254 <HAL_PCD_IRQHandler+0x442>
 800f242:	697b      	ldr	r3, [r7, #20]
 800f244:	2200      	movs	r2, #0
 800f246:	70da      	strb	r2, [r3, #3]
 800f248:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f24a:	b2db      	uxtb	r3, r3
 800f24c:	4619      	mov	r1, r3
 800f24e:	6878      	ldr	r0, [r7, #4]
 800f250:	f00b fada 	bl	801a808 <HAL_PCD_ISOINIncompleteCallback>
 800f254:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f256:	015a      	lsls	r2, r3, #5
 800f258:	69fb      	ldr	r3, [r7, #28]
 800f25a:	4413      	add	r3, r2
 800f25c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f260:	461a      	mov	r2, r3
 800f262:	2302      	movs	r3, #2
 800f264:	6093      	str	r3, [r2, #8]
 800f266:	693b      	ldr	r3, [r7, #16]
 800f268:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f26c:	2b00      	cmp	r3, #0
 800f26e:	d003      	beq.n	800f278 <HAL_PCD_IRQHandler+0x466>
 800f270:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 800f272:	6878      	ldr	r0, [r7, #4]
 800f274:	f000 fcdb 	bl	800fc2e <PCD_WriteEmptyTxFifo>
 800f278:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f27a:	3301      	adds	r3, #1
 800f27c:	627b      	str	r3, [r7, #36]	@ 0x24
 800f27e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f280:	085b      	lsrs	r3, r3, #1
 800f282:	62bb      	str	r3, [r7, #40]	@ 0x28
 800f284:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800f286:	2b00      	cmp	r3, #0
 800f288:	f47f af2e 	bne.w	800f0e8 <HAL_PCD_IRQHandler+0x2d6>
 800f28c:	687b      	ldr	r3, [r7, #4]
 800f28e:	681b      	ldr	r3, [r3, #0]
 800f290:	4618      	mov	r0, r3
 800f292:	f005 fda7 	bl	8014de4 <USB_ReadInterrupts>
 800f296:	4603      	mov	r3, r0
 800f298:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 800f29c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 800f2a0:	d122      	bne.n	800f2e8 <HAL_PCD_IRQHandler+0x4d6>
 800f2a2:	69fb      	ldr	r3, [r7, #28]
 800f2a4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f2a8:	685b      	ldr	r3, [r3, #4]
 800f2aa:	69fa      	ldr	r2, [r7, #28]
 800f2ac:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f2b0:	f023 0301 	bic.w	r3, r3, #1
 800f2b4:	6053      	str	r3, [r2, #4]
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	f893 34f4 	ldrb.w	r3, [r3, #1268]	@ 0x4f4
 800f2bc:	2b01      	cmp	r3, #1
 800f2be:	d108      	bne.n	800f2d2 <HAL_PCD_IRQHandler+0x4c0>
 800f2c0:	687b      	ldr	r3, [r7, #4]
 800f2c2:	2200      	movs	r2, #0
 800f2c4:	f883 24f4 	strb.w	r2, [r3, #1268]	@ 0x4f4
 800f2c8:	2100      	movs	r1, #0
 800f2ca:	6878      	ldr	r0, [r7, #4]
 800f2cc:	f000 fec2 	bl	8010054 <HAL_PCDEx_LPM_Callback>
 800f2d0:	e002      	b.n	800f2d8 <HAL_PCD_IRQHandler+0x4c6>
 800f2d2:	6878      	ldr	r0, [r7, #4]
 800f2d4:	f00b fa78 	bl	801a7c8 <HAL_PCD_ResumeCallback>
 800f2d8:	687b      	ldr	r3, [r7, #4]
 800f2da:	681b      	ldr	r3, [r3, #0]
 800f2dc:	695a      	ldr	r2, [r3, #20]
 800f2de:	687b      	ldr	r3, [r7, #4]
 800f2e0:	681b      	ldr	r3, [r3, #0]
 800f2e2:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 800f2e6:	615a      	str	r2, [r3, #20]
 800f2e8:	687b      	ldr	r3, [r7, #4]
 800f2ea:	681b      	ldr	r3, [r3, #0]
 800f2ec:	4618      	mov	r0, r3
 800f2ee:	f005 fd79 	bl	8014de4 <USB_ReadInterrupts>
 800f2f2:	4603      	mov	r3, r0
 800f2f4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800f2f8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800f2fc:	d112      	bne.n	800f324 <HAL_PCD_IRQHandler+0x512>
 800f2fe:	69fb      	ldr	r3, [r7, #28]
 800f300:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f304:	689b      	ldr	r3, [r3, #8]
 800f306:	f003 0301 	and.w	r3, r3, #1
 800f30a:	2b01      	cmp	r3, #1
 800f30c:	d102      	bne.n	800f314 <HAL_PCD_IRQHandler+0x502>
 800f30e:	6878      	ldr	r0, [r7, #4]
 800f310:	f00b fa34 	bl	801a77c <HAL_PCD_SuspendCallback>
 800f314:	687b      	ldr	r3, [r7, #4]
 800f316:	681b      	ldr	r3, [r3, #0]
 800f318:	695a      	ldr	r2, [r3, #20]
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	681b      	ldr	r3, [r3, #0]
 800f31e:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 800f322:	615a      	str	r2, [r3, #20]
 800f324:	687b      	ldr	r3, [r7, #4]
 800f326:	681b      	ldr	r3, [r3, #0]
 800f328:	4618      	mov	r0, r3
 800f32a:	f005 fd5b 	bl	8014de4 <USB_ReadInterrupts>
 800f32e:	4603      	mov	r3, r0
 800f330:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800f334:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800f338:	f040 80b7 	bne.w	800f4aa <HAL_PCD_IRQHandler+0x698>
 800f33c:	69fb      	ldr	r3, [r7, #28]
 800f33e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f342:	685b      	ldr	r3, [r3, #4]
 800f344:	69fa      	ldr	r2, [r7, #28]
 800f346:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f34a:	f023 0301 	bic.w	r3, r3, #1
 800f34e:	6053      	str	r3, [r2, #4]
 800f350:	687b      	ldr	r3, [r7, #4]
 800f352:	681b      	ldr	r3, [r3, #0]
 800f354:	2110      	movs	r1, #16
 800f356:	4618      	mov	r0, r3
 800f358:	f004 fd22 	bl	8013da0 <USB_FlushTxFifo>
 800f35c:	2300      	movs	r3, #0
 800f35e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800f360:	e046      	b.n	800f3f0 <HAL_PCD_IRQHandler+0x5de>
 800f362:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f364:	015a      	lsls	r2, r3, #5
 800f366:	69fb      	ldr	r3, [r7, #28]
 800f368:	4413      	add	r3, r2
 800f36a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f36e:	461a      	mov	r2, r3
 800f370:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800f374:	6093      	str	r3, [r2, #8]
 800f376:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f378:	015a      	lsls	r2, r3, #5
 800f37a:	69fb      	ldr	r3, [r7, #28]
 800f37c:	4413      	add	r3, r2
 800f37e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f382:	681b      	ldr	r3, [r3, #0]
 800f384:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f386:	0151      	lsls	r1, r2, #5
 800f388:	69fa      	ldr	r2, [r7, #28]
 800f38a:	440a      	add	r2, r1
 800f38c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 800f390:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800f394:	6013      	str	r3, [r2, #0]
 800f396:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f398:	015a      	lsls	r2, r3, #5
 800f39a:	69fb      	ldr	r3, [r7, #28]
 800f39c:	4413      	add	r3, r2
 800f39e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f3a2:	461a      	mov	r2, r3
 800f3a4:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 800f3a8:	6093      	str	r3, [r2, #8]
 800f3aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f3ac:	015a      	lsls	r2, r3, #5
 800f3ae:	69fb      	ldr	r3, [r7, #28]
 800f3b0:	4413      	add	r3, r2
 800f3b2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f3b6:	681b      	ldr	r3, [r3, #0]
 800f3b8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f3ba:	0151      	lsls	r1, r2, #5
 800f3bc:	69fa      	ldr	r2, [r7, #28]
 800f3be:	440a      	add	r2, r1
 800f3c0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800f3c4:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800f3c8:	6013      	str	r3, [r2, #0]
 800f3ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f3cc:	015a      	lsls	r2, r3, #5
 800f3ce:	69fb      	ldr	r3, [r7, #28]
 800f3d0:	4413      	add	r3, r2
 800f3d2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f3d6:	681b      	ldr	r3, [r3, #0]
 800f3d8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f3da:	0151      	lsls	r1, r2, #5
 800f3dc:	69fa      	ldr	r2, [r7, #28]
 800f3de:	440a      	add	r2, r1
 800f3e0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 800f3e4:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 800f3e8:	6013      	str	r3, [r2, #0]
 800f3ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800f3ec:	3301      	adds	r3, #1
 800f3ee:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800f3f0:	687b      	ldr	r3, [r7, #4]
 800f3f2:	685b      	ldr	r3, [r3, #4]
 800f3f4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800f3f6:	429a      	cmp	r2, r3
 800f3f8:	d3b3      	bcc.n	800f362 <HAL_PCD_IRQHandler+0x550>
 800f3fa:	69fb      	ldr	r3, [r7, #28]
 800f3fc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f400:	69db      	ldr	r3, [r3, #28]
 800f402:	69fa      	ldr	r2, [r7, #28]
 800f404:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f408:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 800f40c:	61d3      	str	r3, [r2, #28]
 800f40e:	687b      	ldr	r3, [r7, #4]
 800f410:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f412:	2b00      	cmp	r3, #0
 800f414:	d016      	beq.n	800f444 <HAL_PCD_IRQHandler+0x632>
 800f416:	69fb      	ldr	r3, [r7, #28]
 800f418:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f41c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800f420:	69fa      	ldr	r2, [r7, #28]
 800f422:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f426:	f043 030b 	orr.w	r3, r3, #11
 800f42a:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 800f42e:	69fb      	ldr	r3, [r7, #28]
 800f430:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f434:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f436:	69fa      	ldr	r2, [r7, #28]
 800f438:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f43c:	f043 030b 	orr.w	r3, r3, #11
 800f440:	6453      	str	r3, [r2, #68]	@ 0x44
 800f442:	e015      	b.n	800f470 <HAL_PCD_IRQHandler+0x65e>
 800f444:	69fb      	ldr	r3, [r7, #28]
 800f446:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f44a:	695b      	ldr	r3, [r3, #20]
 800f44c:	69fa      	ldr	r2, [r7, #28]
 800f44e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f452:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800f456:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 800f45a:	6153      	str	r3, [r2, #20]
 800f45c:	69fb      	ldr	r3, [r7, #28]
 800f45e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f462:	691b      	ldr	r3, [r3, #16]
 800f464:	69fa      	ldr	r2, [r7, #28]
 800f466:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f46a:	f043 030b 	orr.w	r3, r3, #11
 800f46e:	6113      	str	r3, [r2, #16]
 800f470:	69fb      	ldr	r3, [r7, #28]
 800f472:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f476:	681b      	ldr	r3, [r3, #0]
 800f478:	69fa      	ldr	r2, [r7, #28]
 800f47a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f47e:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 800f482:	6013      	str	r3, [r2, #0]
 800f484:	687b      	ldr	r3, [r7, #4]
 800f486:	6818      	ldr	r0, [r3, #0]
 800f488:	687b      	ldr	r3, [r7, #4]
 800f48a:	691b      	ldr	r3, [r3, #16]
 800f48c:	b2d9      	uxtb	r1, r3
 800f48e:	687b      	ldr	r3, [r7, #4]
 800f490:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800f494:	461a      	mov	r2, r3
 800f496:	f005 fd69 	bl	8014f6c <USB_EP0_OutStart>
 800f49a:	687b      	ldr	r3, [r7, #4]
 800f49c:	681b      	ldr	r3, [r3, #0]
 800f49e:	695a      	ldr	r2, [r3, #20]
 800f4a0:	687b      	ldr	r3, [r7, #4]
 800f4a2:	681b      	ldr	r3, [r3, #0]
 800f4a4:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 800f4a8:	615a      	str	r2, [r3, #20]
 800f4aa:	687b      	ldr	r3, [r7, #4]
 800f4ac:	681b      	ldr	r3, [r3, #0]
 800f4ae:	4618      	mov	r0, r3
 800f4b0:	f005 fc98 	bl	8014de4 <USB_ReadInterrupts>
 800f4b4:	4603      	mov	r3, r0
 800f4b6:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800f4ba:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f4be:	d124      	bne.n	800f50a <HAL_PCD_IRQHandler+0x6f8>
 800f4c0:	687b      	ldr	r3, [r7, #4]
 800f4c2:	681b      	ldr	r3, [r3, #0]
 800f4c4:	4618      	mov	r0, r3
 800f4c6:	f005 fd2e 	bl	8014f26 <USB_ActivateSetup>
 800f4ca:	687b      	ldr	r3, [r7, #4]
 800f4cc:	681b      	ldr	r3, [r3, #0]
 800f4ce:	4618      	mov	r0, r3
 800f4d0:	f004 fce3 	bl	8013e9a <USB_GetDevSpeed>
 800f4d4:	4603      	mov	r3, r0
 800f4d6:	461a      	mov	r2, r3
 800f4d8:	687b      	ldr	r3, [r7, #4]
 800f4da:	60da      	str	r2, [r3, #12]
 800f4dc:	687b      	ldr	r3, [r7, #4]
 800f4de:	681c      	ldr	r4, [r3, #0]
 800f4e0:	f001 f9e8 	bl	80108b4 <HAL_RCC_GetHCLKFreq>
 800f4e4:	4601      	mov	r1, r0
 800f4e6:	687b      	ldr	r3, [r7, #4]
 800f4e8:	68db      	ldr	r3, [r3, #12]
 800f4ea:	b2db      	uxtb	r3, r3
 800f4ec:	461a      	mov	r2, r3
 800f4ee:	4620      	mov	r0, r4
 800f4f0:	f004 f9e2 	bl	80138b8 <USB_SetTurnaroundTime>
 800f4f4:	6878      	ldr	r0, [r7, #4]
 800f4f6:	f00b f918 	bl	801a72a <HAL_PCD_ResetCallback>
 800f4fa:	687b      	ldr	r3, [r7, #4]
 800f4fc:	681b      	ldr	r3, [r3, #0]
 800f4fe:	695a      	ldr	r2, [r3, #20]
 800f500:	687b      	ldr	r3, [r7, #4]
 800f502:	681b      	ldr	r3, [r3, #0]
 800f504:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 800f508:	615a      	str	r2, [r3, #20]
 800f50a:	687b      	ldr	r3, [r7, #4]
 800f50c:	681b      	ldr	r3, [r3, #0]
 800f50e:	4618      	mov	r0, r3
 800f510:	f005 fc68 	bl	8014de4 <USB_ReadInterrupts>
 800f514:	4603      	mov	r3, r0
 800f516:	f003 0308 	and.w	r3, r3, #8
 800f51a:	2b08      	cmp	r3, #8
 800f51c:	d10a      	bne.n	800f534 <HAL_PCD_IRQHandler+0x722>
 800f51e:	6878      	ldr	r0, [r7, #4]
 800f520:	f00b f8f5 	bl	801a70e <HAL_PCD_SOFCallback>
 800f524:	687b      	ldr	r3, [r7, #4]
 800f526:	681b      	ldr	r3, [r3, #0]
 800f528:	695a      	ldr	r2, [r3, #20]
 800f52a:	687b      	ldr	r3, [r7, #4]
 800f52c:	681b      	ldr	r3, [r3, #0]
 800f52e:	f002 0208 	and.w	r2, r2, #8
 800f532:	615a      	str	r2, [r3, #20]
 800f534:	687b      	ldr	r3, [r7, #4]
 800f536:	681b      	ldr	r3, [r3, #0]
 800f538:	4618      	mov	r0, r3
 800f53a:	f005 fc53 	bl	8014de4 <USB_ReadInterrupts>
 800f53e:	4603      	mov	r3, r0
 800f540:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f544:	2b80      	cmp	r3, #128	@ 0x80
 800f546:	d122      	bne.n	800f58e <HAL_PCD_IRQHandler+0x77c>
 800f548:	6a3b      	ldr	r3, [r7, #32]
 800f54a:	699b      	ldr	r3, [r3, #24]
 800f54c:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800f550:	6a3b      	ldr	r3, [r7, #32]
 800f552:	619a      	str	r2, [r3, #24]
 800f554:	2301      	movs	r3, #1
 800f556:	627b      	str	r3, [r7, #36]	@ 0x24
 800f558:	e014      	b.n	800f584 <HAL_PCD_IRQHandler+0x772>
 800f55a:	6879      	ldr	r1, [r7, #4]
 800f55c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f55e:	4613      	mov	r3, r2
 800f560:	00db      	lsls	r3, r3, #3
 800f562:	4413      	add	r3, r2
 800f564:	009b      	lsls	r3, r3, #2
 800f566:	440b      	add	r3, r1
 800f568:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 800f56c:	781b      	ldrb	r3, [r3, #0]
 800f56e:	2b01      	cmp	r3, #1
 800f570:	d105      	bne.n	800f57e <HAL_PCD_IRQHandler+0x76c>
 800f572:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f574:	b2db      	uxtb	r3, r3
 800f576:	4619      	mov	r1, r3
 800f578:	6878      	ldr	r0, [r7, #4]
 800f57a:	f000 fb27 	bl	800fbcc <HAL_PCD_EP_Abort>
 800f57e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f580:	3301      	adds	r3, #1
 800f582:	627b      	str	r3, [r7, #36]	@ 0x24
 800f584:	687b      	ldr	r3, [r7, #4]
 800f586:	685b      	ldr	r3, [r3, #4]
 800f588:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f58a:	429a      	cmp	r2, r3
 800f58c:	d3e5      	bcc.n	800f55a <HAL_PCD_IRQHandler+0x748>
 800f58e:	687b      	ldr	r3, [r7, #4]
 800f590:	681b      	ldr	r3, [r3, #0]
 800f592:	4618      	mov	r0, r3
 800f594:	f005 fc26 	bl	8014de4 <USB_ReadInterrupts>
 800f598:	4603      	mov	r3, r0
 800f59a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800f59e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f5a2:	d13b      	bne.n	800f61c <HAL_PCD_IRQHandler+0x80a>
 800f5a4:	2301      	movs	r3, #1
 800f5a6:	627b      	str	r3, [r7, #36]	@ 0x24
 800f5a8:	e02b      	b.n	800f602 <HAL_PCD_IRQHandler+0x7f0>
 800f5aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f5ac:	015a      	lsls	r2, r3, #5
 800f5ae:	69fb      	ldr	r3, [r7, #28]
 800f5b0:	4413      	add	r3, r2
 800f5b2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800f5b6:	681b      	ldr	r3, [r3, #0]
 800f5b8:	61bb      	str	r3, [r7, #24]
 800f5ba:	6879      	ldr	r1, [r7, #4]
 800f5bc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f5be:	4613      	mov	r3, r2
 800f5c0:	00db      	lsls	r3, r3, #3
 800f5c2:	4413      	add	r3, r2
 800f5c4:	009b      	lsls	r3, r3, #2
 800f5c6:	440b      	add	r3, r1
 800f5c8:	3340      	adds	r3, #64	@ 0x40
 800f5ca:	781b      	ldrb	r3, [r3, #0]
 800f5cc:	2b01      	cmp	r3, #1
 800f5ce:	d115      	bne.n	800f5fc <HAL_PCD_IRQHandler+0x7ea>
 800f5d0:	69bb      	ldr	r3, [r7, #24]
 800f5d2:	2b00      	cmp	r3, #0
 800f5d4:	da12      	bge.n	800f5fc <HAL_PCD_IRQHandler+0x7ea>
 800f5d6:	6879      	ldr	r1, [r7, #4]
 800f5d8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f5da:	4613      	mov	r3, r2
 800f5dc:	00db      	lsls	r3, r3, #3
 800f5de:	4413      	add	r3, r2
 800f5e0:	009b      	lsls	r3, r3, #2
 800f5e2:	440b      	add	r3, r1
 800f5e4:	333f      	adds	r3, #63	@ 0x3f
 800f5e6:	2201      	movs	r2, #1
 800f5e8:	701a      	strb	r2, [r3, #0]
 800f5ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f5ec:	b2db      	uxtb	r3, r3
 800f5ee:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800f5f2:	b2db      	uxtb	r3, r3
 800f5f4:	4619      	mov	r1, r3
 800f5f6:	6878      	ldr	r0, [r7, #4]
 800f5f8:	f000 fae8 	bl	800fbcc <HAL_PCD_EP_Abort>
 800f5fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f5fe:	3301      	adds	r3, #1
 800f600:	627b      	str	r3, [r7, #36]	@ 0x24
 800f602:	687b      	ldr	r3, [r7, #4]
 800f604:	685b      	ldr	r3, [r3, #4]
 800f606:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f608:	429a      	cmp	r2, r3
 800f60a:	d3ce      	bcc.n	800f5aa <HAL_PCD_IRQHandler+0x798>
 800f60c:	687b      	ldr	r3, [r7, #4]
 800f60e:	681b      	ldr	r3, [r3, #0]
 800f610:	695a      	ldr	r2, [r3, #20]
 800f612:	687b      	ldr	r3, [r7, #4]
 800f614:	681b      	ldr	r3, [r3, #0]
 800f616:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 800f61a:	615a      	str	r2, [r3, #20]
 800f61c:	687b      	ldr	r3, [r7, #4]
 800f61e:	681b      	ldr	r3, [r3, #0]
 800f620:	4618      	mov	r0, r3
 800f622:	f005 fbdf 	bl	8014de4 <USB_ReadInterrupts>
 800f626:	4603      	mov	r3, r0
 800f628:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800f62c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800f630:	d155      	bne.n	800f6de <HAL_PCD_IRQHandler+0x8cc>
 800f632:	2301      	movs	r3, #1
 800f634:	627b      	str	r3, [r7, #36]	@ 0x24
 800f636:	e045      	b.n	800f6c4 <HAL_PCD_IRQHandler+0x8b2>
 800f638:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f63a:	015a      	lsls	r2, r3, #5
 800f63c:	69fb      	ldr	r3, [r7, #28]
 800f63e:	4413      	add	r3, r2
 800f640:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800f644:	681b      	ldr	r3, [r3, #0]
 800f646:	61bb      	str	r3, [r7, #24]
 800f648:	6879      	ldr	r1, [r7, #4]
 800f64a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f64c:	4613      	mov	r3, r2
 800f64e:	00db      	lsls	r3, r3, #3
 800f650:	4413      	add	r3, r2
 800f652:	009b      	lsls	r3, r3, #2
 800f654:	440b      	add	r3, r1
 800f656:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 800f65a:	781b      	ldrb	r3, [r3, #0]
 800f65c:	2b01      	cmp	r3, #1
 800f65e:	d12e      	bne.n	800f6be <HAL_PCD_IRQHandler+0x8ac>
 800f660:	69bb      	ldr	r3, [r7, #24]
 800f662:	2b00      	cmp	r3, #0
 800f664:	da2b      	bge.n	800f6be <HAL_PCD_IRQHandler+0x8ac>
 800f666:	69bb      	ldr	r3, [r7, #24]
 800f668:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 800f66c:	687b      	ldr	r3, [r7, #4]
 800f66e:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	@ 0x4fc
 800f672:	f003 0301 	and.w	r3, r3, #1
 800f676:	429a      	cmp	r2, r3
 800f678:	d121      	bne.n	800f6be <HAL_PCD_IRQHandler+0x8ac>
 800f67a:	6879      	ldr	r1, [r7, #4]
 800f67c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f67e:	4613      	mov	r3, r2
 800f680:	00db      	lsls	r3, r3, #3
 800f682:	4413      	add	r3, r2
 800f684:	009b      	lsls	r3, r3, #2
 800f686:	440b      	add	r3, r1
 800f688:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 800f68c:	2201      	movs	r2, #1
 800f68e:	701a      	strb	r2, [r3, #0]
 800f690:	6a3b      	ldr	r3, [r7, #32]
 800f692:	699b      	ldr	r3, [r3, #24]
 800f694:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 800f698:	6a3b      	ldr	r3, [r7, #32]
 800f69a:	619a      	str	r2, [r3, #24]
 800f69c:	6a3b      	ldr	r3, [r7, #32]
 800f69e:	695b      	ldr	r3, [r3, #20]
 800f6a0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f6a4:	2b00      	cmp	r3, #0
 800f6a6:	d10a      	bne.n	800f6be <HAL_PCD_IRQHandler+0x8ac>
 800f6a8:	69fb      	ldr	r3, [r7, #28]
 800f6aa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800f6ae:	685b      	ldr	r3, [r3, #4]
 800f6b0:	69fa      	ldr	r2, [r7, #28]
 800f6b2:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 800f6b6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800f6ba:	6053      	str	r3, [r2, #4]
 800f6bc:	e007      	b.n	800f6ce <HAL_PCD_IRQHandler+0x8bc>
 800f6be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f6c0:	3301      	adds	r3, #1
 800f6c2:	627b      	str	r3, [r7, #36]	@ 0x24
 800f6c4:	687b      	ldr	r3, [r7, #4]
 800f6c6:	685b      	ldr	r3, [r3, #4]
 800f6c8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800f6ca:	429a      	cmp	r2, r3
 800f6cc:	d3b4      	bcc.n	800f638 <HAL_PCD_IRQHandler+0x826>
 800f6ce:	687b      	ldr	r3, [r7, #4]
 800f6d0:	681b      	ldr	r3, [r3, #0]
 800f6d2:	695a      	ldr	r2, [r3, #20]
 800f6d4:	687b      	ldr	r3, [r7, #4]
 800f6d6:	681b      	ldr	r3, [r3, #0]
 800f6d8:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 800f6dc:	615a      	str	r2, [r3, #20]
 800f6de:	687b      	ldr	r3, [r7, #4]
 800f6e0:	681b      	ldr	r3, [r3, #0]
 800f6e2:	4618      	mov	r0, r3
 800f6e4:	f005 fb7e 	bl	8014de4 <USB_ReadInterrupts>
 800f6e8:	4603      	mov	r3, r0
 800f6ea:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800f6ee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800f6f2:	d10a      	bne.n	800f70a <HAL_PCD_IRQHandler+0x8f8>
 800f6f4:	6878      	ldr	r0, [r7, #4]
 800f6f6:	f00b f899 	bl	801a82c <HAL_PCD_ConnectCallback>
 800f6fa:	687b      	ldr	r3, [r7, #4]
 800f6fc:	681b      	ldr	r3, [r3, #0]
 800f6fe:	695a      	ldr	r2, [r3, #20]
 800f700:	687b      	ldr	r3, [r7, #4]
 800f702:	681b      	ldr	r3, [r3, #0]
 800f704:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 800f708:	615a      	str	r2, [r3, #20]
 800f70a:	687b      	ldr	r3, [r7, #4]
 800f70c:	681b      	ldr	r3, [r3, #0]
 800f70e:	4618      	mov	r0, r3
 800f710:	f005 fb68 	bl	8014de4 <USB_ReadInterrupts>
 800f714:	4603      	mov	r3, r0
 800f716:	f003 0304 	and.w	r3, r3, #4
 800f71a:	2b04      	cmp	r3, #4
 800f71c:	d115      	bne.n	800f74a <HAL_PCD_IRQHandler+0x938>
 800f71e:	687b      	ldr	r3, [r7, #4]
 800f720:	681b      	ldr	r3, [r3, #0]
 800f722:	685b      	ldr	r3, [r3, #4]
 800f724:	61bb      	str	r3, [r7, #24]
 800f726:	69bb      	ldr	r3, [r7, #24]
 800f728:	f003 0304 	and.w	r3, r3, #4
 800f72c:	2b00      	cmp	r3, #0
 800f72e:	d002      	beq.n	800f736 <HAL_PCD_IRQHandler+0x924>
 800f730:	6878      	ldr	r0, [r7, #4]
 800f732:	f00b f889 	bl	801a848 <HAL_PCD_DisconnectCallback>
 800f736:	687b      	ldr	r3, [r7, #4]
 800f738:	681b      	ldr	r3, [r3, #0]
 800f73a:	6859      	ldr	r1, [r3, #4]
 800f73c:	687b      	ldr	r3, [r7, #4]
 800f73e:	681b      	ldr	r3, [r3, #0]
 800f740:	69ba      	ldr	r2, [r7, #24]
 800f742:	430a      	orrs	r2, r1
 800f744:	605a      	str	r2, [r3, #4]
 800f746:	e000      	b.n	800f74a <HAL_PCD_IRQHandler+0x938>
 800f748:	bf00      	nop
 800f74a:	3734      	adds	r7, #52	@ 0x34
 800f74c:	46bd      	mov	sp, r7
 800f74e:	bd90      	pop	{r4, r7, pc}

0800f750 <HAL_PCD_SetAddress>:
 800f750:	b580      	push	{r7, lr}
 800f752:	b082      	sub	sp, #8
 800f754:	af00      	add	r7, sp, #0
 800f756:	6078      	str	r0, [r7, #4]
 800f758:	460b      	mov	r3, r1
 800f75a:	70fb      	strb	r3, [r7, #3]
 800f75c:	687b      	ldr	r3, [r7, #4]
 800f75e:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f762:	2b01      	cmp	r3, #1
 800f764:	d101      	bne.n	800f76a <HAL_PCD_SetAddress+0x1a>
 800f766:	2302      	movs	r3, #2
 800f768:	e013      	b.n	800f792 <HAL_PCD_SetAddress+0x42>
 800f76a:	687b      	ldr	r3, [r7, #4]
 800f76c:	2201      	movs	r2, #1
 800f76e:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f772:	687b      	ldr	r3, [r7, #4]
 800f774:	78fa      	ldrb	r2, [r7, #3]
 800f776:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800f77a:	687b      	ldr	r3, [r7, #4]
 800f77c:	681b      	ldr	r3, [r3, #0]
 800f77e:	78fa      	ldrb	r2, [r7, #3]
 800f780:	4611      	mov	r1, r2
 800f782:	4618      	mov	r0, r3
 800f784:	f005 fac6 	bl	8014d14 <USB_SetDevAddress>
 800f788:	687b      	ldr	r3, [r7, #4]
 800f78a:	2200      	movs	r2, #0
 800f78c:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f790:	2300      	movs	r3, #0
 800f792:	4618      	mov	r0, r3
 800f794:	3708      	adds	r7, #8
 800f796:	46bd      	mov	sp, r7
 800f798:	bd80      	pop	{r7, pc}

0800f79a <HAL_PCD_EP_Open>:
 800f79a:	b580      	push	{r7, lr}
 800f79c:	b084      	sub	sp, #16
 800f79e:	af00      	add	r7, sp, #0
 800f7a0:	6078      	str	r0, [r7, #4]
 800f7a2:	4608      	mov	r0, r1
 800f7a4:	4611      	mov	r1, r2
 800f7a6:	461a      	mov	r2, r3
 800f7a8:	4603      	mov	r3, r0
 800f7aa:	70fb      	strb	r3, [r7, #3]
 800f7ac:	460b      	mov	r3, r1
 800f7ae:	803b      	strh	r3, [r7, #0]
 800f7b0:	4613      	mov	r3, r2
 800f7b2:	70bb      	strb	r3, [r7, #2]
 800f7b4:	2300      	movs	r3, #0
 800f7b6:	72fb      	strb	r3, [r7, #11]
 800f7b8:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f7bc:	2b00      	cmp	r3, #0
 800f7be:	da0f      	bge.n	800f7e0 <HAL_PCD_EP_Open+0x46>
 800f7c0:	78fb      	ldrb	r3, [r7, #3]
 800f7c2:	f003 020f 	and.w	r2, r3, #15
 800f7c6:	4613      	mov	r3, r2
 800f7c8:	00db      	lsls	r3, r3, #3
 800f7ca:	4413      	add	r3, r2
 800f7cc:	009b      	lsls	r3, r3, #2
 800f7ce:	3338      	adds	r3, #56	@ 0x38
 800f7d0:	687a      	ldr	r2, [r7, #4]
 800f7d2:	4413      	add	r3, r2
 800f7d4:	3304      	adds	r3, #4
 800f7d6:	60fb      	str	r3, [r7, #12]
 800f7d8:	68fb      	ldr	r3, [r7, #12]
 800f7da:	2201      	movs	r2, #1
 800f7dc:	705a      	strb	r2, [r3, #1]
 800f7de:	e00f      	b.n	800f800 <HAL_PCD_EP_Open+0x66>
 800f7e0:	78fb      	ldrb	r3, [r7, #3]
 800f7e2:	f003 020f 	and.w	r2, r3, #15
 800f7e6:	4613      	mov	r3, r2
 800f7e8:	00db      	lsls	r3, r3, #3
 800f7ea:	4413      	add	r3, r2
 800f7ec:	009b      	lsls	r3, r3, #2
 800f7ee:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f7f2:	687a      	ldr	r2, [r7, #4]
 800f7f4:	4413      	add	r3, r2
 800f7f6:	3304      	adds	r3, #4
 800f7f8:	60fb      	str	r3, [r7, #12]
 800f7fa:	68fb      	ldr	r3, [r7, #12]
 800f7fc:	2200      	movs	r2, #0
 800f7fe:	705a      	strb	r2, [r3, #1]
 800f800:	78fb      	ldrb	r3, [r7, #3]
 800f802:	f003 030f 	and.w	r3, r3, #15
 800f806:	b2da      	uxtb	r2, r3
 800f808:	68fb      	ldr	r3, [r7, #12]
 800f80a:	701a      	strb	r2, [r3, #0]
 800f80c:	883a      	ldrh	r2, [r7, #0]
 800f80e:	68fb      	ldr	r3, [r7, #12]
 800f810:	60da      	str	r2, [r3, #12]
 800f812:	68fb      	ldr	r3, [r7, #12]
 800f814:	78ba      	ldrb	r2, [r7, #2]
 800f816:	711a      	strb	r2, [r3, #4]
 800f818:	68fb      	ldr	r3, [r7, #12]
 800f81a:	785b      	ldrb	r3, [r3, #1]
 800f81c:	2b00      	cmp	r3, #0
 800f81e:	d004      	beq.n	800f82a <HAL_PCD_EP_Open+0x90>
 800f820:	68fb      	ldr	r3, [r7, #12]
 800f822:	781b      	ldrb	r3, [r3, #0]
 800f824:	461a      	mov	r2, r3
 800f826:	68fb      	ldr	r3, [r7, #12]
 800f828:	811a      	strh	r2, [r3, #8]
 800f82a:	78bb      	ldrb	r3, [r7, #2]
 800f82c:	2b02      	cmp	r3, #2
 800f82e:	d102      	bne.n	800f836 <HAL_PCD_EP_Open+0x9c>
 800f830:	68fb      	ldr	r3, [r7, #12]
 800f832:	2200      	movs	r2, #0
 800f834:	715a      	strb	r2, [r3, #5]
 800f836:	687b      	ldr	r3, [r7, #4]
 800f838:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f83c:	2b01      	cmp	r3, #1
 800f83e:	d101      	bne.n	800f844 <HAL_PCD_EP_Open+0xaa>
 800f840:	2302      	movs	r3, #2
 800f842:	e00e      	b.n	800f862 <HAL_PCD_EP_Open+0xc8>
 800f844:	687b      	ldr	r3, [r7, #4]
 800f846:	2201      	movs	r2, #1
 800f848:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f84c:	687b      	ldr	r3, [r7, #4]
 800f84e:	681b      	ldr	r3, [r3, #0]
 800f850:	68f9      	ldr	r1, [r7, #12]
 800f852:	4618      	mov	r0, r3
 800f854:	f004 fb46 	bl	8013ee4 <USB_ActivateEndpoint>
 800f858:	687b      	ldr	r3, [r7, #4]
 800f85a:	2200      	movs	r2, #0
 800f85c:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f860:	7afb      	ldrb	r3, [r7, #11]
 800f862:	4618      	mov	r0, r3
 800f864:	3710      	adds	r7, #16
 800f866:	46bd      	mov	sp, r7
 800f868:	bd80      	pop	{r7, pc}

0800f86a <HAL_PCD_EP_Close>:
 800f86a:	b580      	push	{r7, lr}
 800f86c:	b084      	sub	sp, #16
 800f86e:	af00      	add	r7, sp, #0
 800f870:	6078      	str	r0, [r7, #4]
 800f872:	460b      	mov	r3, r1
 800f874:	70fb      	strb	r3, [r7, #3]
 800f876:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f87a:	2b00      	cmp	r3, #0
 800f87c:	da0f      	bge.n	800f89e <HAL_PCD_EP_Close+0x34>
 800f87e:	78fb      	ldrb	r3, [r7, #3]
 800f880:	f003 020f 	and.w	r2, r3, #15
 800f884:	4613      	mov	r3, r2
 800f886:	00db      	lsls	r3, r3, #3
 800f888:	4413      	add	r3, r2
 800f88a:	009b      	lsls	r3, r3, #2
 800f88c:	3338      	adds	r3, #56	@ 0x38
 800f88e:	687a      	ldr	r2, [r7, #4]
 800f890:	4413      	add	r3, r2
 800f892:	3304      	adds	r3, #4
 800f894:	60fb      	str	r3, [r7, #12]
 800f896:	68fb      	ldr	r3, [r7, #12]
 800f898:	2201      	movs	r2, #1
 800f89a:	705a      	strb	r2, [r3, #1]
 800f89c:	e00f      	b.n	800f8be <HAL_PCD_EP_Close+0x54>
 800f89e:	78fb      	ldrb	r3, [r7, #3]
 800f8a0:	f003 020f 	and.w	r2, r3, #15
 800f8a4:	4613      	mov	r3, r2
 800f8a6:	00db      	lsls	r3, r3, #3
 800f8a8:	4413      	add	r3, r2
 800f8aa:	009b      	lsls	r3, r3, #2
 800f8ac:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f8b0:	687a      	ldr	r2, [r7, #4]
 800f8b2:	4413      	add	r3, r2
 800f8b4:	3304      	adds	r3, #4
 800f8b6:	60fb      	str	r3, [r7, #12]
 800f8b8:	68fb      	ldr	r3, [r7, #12]
 800f8ba:	2200      	movs	r2, #0
 800f8bc:	705a      	strb	r2, [r3, #1]
 800f8be:	78fb      	ldrb	r3, [r7, #3]
 800f8c0:	f003 030f 	and.w	r3, r3, #15
 800f8c4:	b2da      	uxtb	r2, r3
 800f8c6:	68fb      	ldr	r3, [r7, #12]
 800f8c8:	701a      	strb	r2, [r3, #0]
 800f8ca:	687b      	ldr	r3, [r7, #4]
 800f8cc:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800f8d0:	2b01      	cmp	r3, #1
 800f8d2:	d101      	bne.n	800f8d8 <HAL_PCD_EP_Close+0x6e>
 800f8d4:	2302      	movs	r3, #2
 800f8d6:	e00e      	b.n	800f8f6 <HAL_PCD_EP_Close+0x8c>
 800f8d8:	687b      	ldr	r3, [r7, #4]
 800f8da:	2201      	movs	r2, #1
 800f8dc:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f8e0:	687b      	ldr	r3, [r7, #4]
 800f8e2:	681b      	ldr	r3, [r3, #0]
 800f8e4:	68f9      	ldr	r1, [r7, #12]
 800f8e6:	4618      	mov	r0, r3
 800f8e8:	f004 fb84 	bl	8013ff4 <USB_DeactivateEndpoint>
 800f8ec:	687b      	ldr	r3, [r7, #4]
 800f8ee:	2200      	movs	r2, #0
 800f8f0:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800f8f4:	2300      	movs	r3, #0
 800f8f6:	4618      	mov	r0, r3
 800f8f8:	3710      	adds	r7, #16
 800f8fa:	46bd      	mov	sp, r7
 800f8fc:	bd80      	pop	{r7, pc}

0800f8fe <HAL_PCD_EP_Receive>:
 800f8fe:	b580      	push	{r7, lr}
 800f900:	b086      	sub	sp, #24
 800f902:	af00      	add	r7, sp, #0
 800f904:	60f8      	str	r0, [r7, #12]
 800f906:	607a      	str	r2, [r7, #4]
 800f908:	603b      	str	r3, [r7, #0]
 800f90a:	460b      	mov	r3, r1
 800f90c:	72fb      	strb	r3, [r7, #11]
 800f90e:	7afb      	ldrb	r3, [r7, #11]
 800f910:	f003 020f 	and.w	r2, r3, #15
 800f914:	4613      	mov	r3, r2
 800f916:	00db      	lsls	r3, r3, #3
 800f918:	4413      	add	r3, r2
 800f91a:	009b      	lsls	r3, r3, #2
 800f91c:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800f920:	68fa      	ldr	r2, [r7, #12]
 800f922:	4413      	add	r3, r2
 800f924:	3304      	adds	r3, #4
 800f926:	617b      	str	r3, [r7, #20]
 800f928:	697b      	ldr	r3, [r7, #20]
 800f92a:	687a      	ldr	r2, [r7, #4]
 800f92c:	611a      	str	r2, [r3, #16]
 800f92e:	697b      	ldr	r3, [r7, #20]
 800f930:	683a      	ldr	r2, [r7, #0]
 800f932:	619a      	str	r2, [r3, #24]
 800f934:	697b      	ldr	r3, [r7, #20]
 800f936:	2200      	movs	r2, #0
 800f938:	621a      	str	r2, [r3, #32]
 800f93a:	697b      	ldr	r3, [r7, #20]
 800f93c:	2200      	movs	r2, #0
 800f93e:	705a      	strb	r2, [r3, #1]
 800f940:	7afb      	ldrb	r3, [r7, #11]
 800f942:	f003 030f 	and.w	r3, r3, #15
 800f946:	b2da      	uxtb	r2, r3
 800f948:	697b      	ldr	r3, [r7, #20]
 800f94a:	701a      	strb	r2, [r3, #0]
 800f94c:	68fb      	ldr	r3, [r7, #12]
 800f94e:	691b      	ldr	r3, [r3, #16]
 800f950:	2b01      	cmp	r3, #1
 800f952:	d102      	bne.n	800f95a <HAL_PCD_EP_Receive+0x5c>
 800f954:	687a      	ldr	r2, [r7, #4]
 800f956:	697b      	ldr	r3, [r7, #20]
 800f958:	615a      	str	r2, [r3, #20]
 800f95a:	7afb      	ldrb	r3, [r7, #11]
 800f95c:	f003 030f 	and.w	r3, r3, #15
 800f960:	2b00      	cmp	r3, #0
 800f962:	d109      	bne.n	800f978 <HAL_PCD_EP_Receive+0x7a>
 800f964:	68fb      	ldr	r3, [r7, #12]
 800f966:	6818      	ldr	r0, [r3, #0]
 800f968:	68fb      	ldr	r3, [r7, #12]
 800f96a:	691b      	ldr	r3, [r3, #16]
 800f96c:	b2db      	uxtb	r3, r3
 800f96e:	461a      	mov	r2, r3
 800f970:	6979      	ldr	r1, [r7, #20]
 800f972:	f004 fe63 	bl	801463c <USB_EP0StartXfer>
 800f976:	e008      	b.n	800f98a <HAL_PCD_EP_Receive+0x8c>
 800f978:	68fb      	ldr	r3, [r7, #12]
 800f97a:	6818      	ldr	r0, [r3, #0]
 800f97c:	68fb      	ldr	r3, [r7, #12]
 800f97e:	691b      	ldr	r3, [r3, #16]
 800f980:	b2db      	uxtb	r3, r3
 800f982:	461a      	mov	r2, r3
 800f984:	6979      	ldr	r1, [r7, #20]
 800f986:	f004 fc11 	bl	80141ac <USB_EPStartXfer>
 800f98a:	2300      	movs	r3, #0
 800f98c:	4618      	mov	r0, r3
 800f98e:	3718      	adds	r7, #24
 800f990:	46bd      	mov	sp, r7
 800f992:	bd80      	pop	{r7, pc}

0800f994 <HAL_PCD_EP_GetRxCount>:
 800f994:	b480      	push	{r7}
 800f996:	b083      	sub	sp, #12
 800f998:	af00      	add	r7, sp, #0
 800f99a:	6078      	str	r0, [r7, #4]
 800f99c:	460b      	mov	r3, r1
 800f99e:	70fb      	strb	r3, [r7, #3]
 800f9a0:	78fb      	ldrb	r3, [r7, #3]
 800f9a2:	f003 020f 	and.w	r2, r3, #15
 800f9a6:	6879      	ldr	r1, [r7, #4]
 800f9a8:	4613      	mov	r3, r2
 800f9aa:	00db      	lsls	r3, r3, #3
 800f9ac:	4413      	add	r3, r2
 800f9ae:	009b      	lsls	r3, r3, #2
 800f9b0:	440b      	add	r3, r1
 800f9b2:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 800f9b6:	681b      	ldr	r3, [r3, #0]
 800f9b8:	4618      	mov	r0, r3
 800f9ba:	370c      	adds	r7, #12
 800f9bc:	46bd      	mov	sp, r7
 800f9be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9c2:	4770      	bx	lr

0800f9c4 <HAL_PCD_EP_Transmit>:
 800f9c4:	b580      	push	{r7, lr}
 800f9c6:	b086      	sub	sp, #24
 800f9c8:	af00      	add	r7, sp, #0
 800f9ca:	60f8      	str	r0, [r7, #12]
 800f9cc:	607a      	str	r2, [r7, #4]
 800f9ce:	603b      	str	r3, [r7, #0]
 800f9d0:	460b      	mov	r3, r1
 800f9d2:	72fb      	strb	r3, [r7, #11]
 800f9d4:	7afb      	ldrb	r3, [r7, #11]
 800f9d6:	f003 020f 	and.w	r2, r3, #15
 800f9da:	4613      	mov	r3, r2
 800f9dc:	00db      	lsls	r3, r3, #3
 800f9de:	4413      	add	r3, r2
 800f9e0:	009b      	lsls	r3, r3, #2
 800f9e2:	3338      	adds	r3, #56	@ 0x38
 800f9e4:	68fa      	ldr	r2, [r7, #12]
 800f9e6:	4413      	add	r3, r2
 800f9e8:	3304      	adds	r3, #4
 800f9ea:	617b      	str	r3, [r7, #20]
 800f9ec:	697b      	ldr	r3, [r7, #20]
 800f9ee:	687a      	ldr	r2, [r7, #4]
 800f9f0:	611a      	str	r2, [r3, #16]
 800f9f2:	697b      	ldr	r3, [r7, #20]
 800f9f4:	683a      	ldr	r2, [r7, #0]
 800f9f6:	619a      	str	r2, [r3, #24]
 800f9f8:	697b      	ldr	r3, [r7, #20]
 800f9fa:	2200      	movs	r2, #0
 800f9fc:	621a      	str	r2, [r3, #32]
 800f9fe:	697b      	ldr	r3, [r7, #20]
 800fa00:	2201      	movs	r2, #1
 800fa02:	705a      	strb	r2, [r3, #1]
 800fa04:	7afb      	ldrb	r3, [r7, #11]
 800fa06:	f003 030f 	and.w	r3, r3, #15
 800fa0a:	b2da      	uxtb	r2, r3
 800fa0c:	697b      	ldr	r3, [r7, #20]
 800fa0e:	701a      	strb	r2, [r3, #0]
 800fa10:	68fb      	ldr	r3, [r7, #12]
 800fa12:	691b      	ldr	r3, [r3, #16]
 800fa14:	2b01      	cmp	r3, #1
 800fa16:	d102      	bne.n	800fa1e <HAL_PCD_EP_Transmit+0x5a>
 800fa18:	687a      	ldr	r2, [r7, #4]
 800fa1a:	697b      	ldr	r3, [r7, #20]
 800fa1c:	615a      	str	r2, [r3, #20]
 800fa1e:	7afb      	ldrb	r3, [r7, #11]
 800fa20:	f003 030f 	and.w	r3, r3, #15
 800fa24:	2b00      	cmp	r3, #0
 800fa26:	d109      	bne.n	800fa3c <HAL_PCD_EP_Transmit+0x78>
 800fa28:	68fb      	ldr	r3, [r7, #12]
 800fa2a:	6818      	ldr	r0, [r3, #0]
 800fa2c:	68fb      	ldr	r3, [r7, #12]
 800fa2e:	691b      	ldr	r3, [r3, #16]
 800fa30:	b2db      	uxtb	r3, r3
 800fa32:	461a      	mov	r2, r3
 800fa34:	6979      	ldr	r1, [r7, #20]
 800fa36:	f004 fe01 	bl	801463c <USB_EP0StartXfer>
 800fa3a:	e008      	b.n	800fa4e <HAL_PCD_EP_Transmit+0x8a>
 800fa3c:	68fb      	ldr	r3, [r7, #12]
 800fa3e:	6818      	ldr	r0, [r3, #0]
 800fa40:	68fb      	ldr	r3, [r7, #12]
 800fa42:	691b      	ldr	r3, [r3, #16]
 800fa44:	b2db      	uxtb	r3, r3
 800fa46:	461a      	mov	r2, r3
 800fa48:	6979      	ldr	r1, [r7, #20]
 800fa4a:	f004 fbaf 	bl	80141ac <USB_EPStartXfer>
 800fa4e:	2300      	movs	r3, #0
 800fa50:	4618      	mov	r0, r3
 800fa52:	3718      	adds	r7, #24
 800fa54:	46bd      	mov	sp, r7
 800fa56:	bd80      	pop	{r7, pc}

0800fa58 <HAL_PCD_EP_SetStall>:
 800fa58:	b580      	push	{r7, lr}
 800fa5a:	b084      	sub	sp, #16
 800fa5c:	af00      	add	r7, sp, #0
 800fa5e:	6078      	str	r0, [r7, #4]
 800fa60:	460b      	mov	r3, r1
 800fa62:	70fb      	strb	r3, [r7, #3]
 800fa64:	78fb      	ldrb	r3, [r7, #3]
 800fa66:	f003 020f 	and.w	r2, r3, #15
 800fa6a:	687b      	ldr	r3, [r7, #4]
 800fa6c:	685b      	ldr	r3, [r3, #4]
 800fa6e:	429a      	cmp	r2, r3
 800fa70:	d901      	bls.n	800fa76 <HAL_PCD_EP_SetStall+0x1e>
 800fa72:	2301      	movs	r3, #1
 800fa74:	e050      	b.n	800fb18 <HAL_PCD_EP_SetStall+0xc0>
 800fa76:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fa7a:	2b00      	cmp	r3, #0
 800fa7c:	da0f      	bge.n	800fa9e <HAL_PCD_EP_SetStall+0x46>
 800fa7e:	78fb      	ldrb	r3, [r7, #3]
 800fa80:	f003 020f 	and.w	r2, r3, #15
 800fa84:	4613      	mov	r3, r2
 800fa86:	00db      	lsls	r3, r3, #3
 800fa88:	4413      	add	r3, r2
 800fa8a:	009b      	lsls	r3, r3, #2
 800fa8c:	3338      	adds	r3, #56	@ 0x38
 800fa8e:	687a      	ldr	r2, [r7, #4]
 800fa90:	4413      	add	r3, r2
 800fa92:	3304      	adds	r3, #4
 800fa94:	60fb      	str	r3, [r7, #12]
 800fa96:	68fb      	ldr	r3, [r7, #12]
 800fa98:	2201      	movs	r2, #1
 800fa9a:	705a      	strb	r2, [r3, #1]
 800fa9c:	e00d      	b.n	800faba <HAL_PCD_EP_SetStall+0x62>
 800fa9e:	78fa      	ldrb	r2, [r7, #3]
 800faa0:	4613      	mov	r3, r2
 800faa2:	00db      	lsls	r3, r3, #3
 800faa4:	4413      	add	r3, r2
 800faa6:	009b      	lsls	r3, r3, #2
 800faa8:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800faac:	687a      	ldr	r2, [r7, #4]
 800faae:	4413      	add	r3, r2
 800fab0:	3304      	adds	r3, #4
 800fab2:	60fb      	str	r3, [r7, #12]
 800fab4:	68fb      	ldr	r3, [r7, #12]
 800fab6:	2200      	movs	r2, #0
 800fab8:	705a      	strb	r2, [r3, #1]
 800faba:	68fb      	ldr	r3, [r7, #12]
 800fabc:	2201      	movs	r2, #1
 800fabe:	709a      	strb	r2, [r3, #2]
 800fac0:	78fb      	ldrb	r3, [r7, #3]
 800fac2:	f003 030f 	and.w	r3, r3, #15
 800fac6:	b2da      	uxtb	r2, r3
 800fac8:	68fb      	ldr	r3, [r7, #12]
 800faca:	701a      	strb	r2, [r3, #0]
 800facc:	687b      	ldr	r3, [r7, #4]
 800face:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800fad2:	2b01      	cmp	r3, #1
 800fad4:	d101      	bne.n	800fada <HAL_PCD_EP_SetStall+0x82>
 800fad6:	2302      	movs	r3, #2
 800fad8:	e01e      	b.n	800fb18 <HAL_PCD_EP_SetStall+0xc0>
 800fada:	687b      	ldr	r3, [r7, #4]
 800fadc:	2201      	movs	r2, #1
 800fade:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fae2:	687b      	ldr	r3, [r7, #4]
 800fae4:	681b      	ldr	r3, [r3, #0]
 800fae6:	68f9      	ldr	r1, [r7, #12]
 800fae8:	4618      	mov	r0, r3
 800faea:	f005 f83f 	bl	8014b6c <USB_EPSetStall>
 800faee:	78fb      	ldrb	r3, [r7, #3]
 800faf0:	f003 030f 	and.w	r3, r3, #15
 800faf4:	2b00      	cmp	r3, #0
 800faf6:	d10a      	bne.n	800fb0e <HAL_PCD_EP_SetStall+0xb6>
 800faf8:	687b      	ldr	r3, [r7, #4]
 800fafa:	6818      	ldr	r0, [r3, #0]
 800fafc:	687b      	ldr	r3, [r7, #4]
 800fafe:	691b      	ldr	r3, [r3, #16]
 800fb00:	b2d9      	uxtb	r1, r3
 800fb02:	687b      	ldr	r3, [r7, #4]
 800fb04:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fb08:	461a      	mov	r2, r3
 800fb0a:	f005 fa2f 	bl	8014f6c <USB_EP0_OutStart>
 800fb0e:	687b      	ldr	r3, [r7, #4]
 800fb10:	2200      	movs	r2, #0
 800fb12:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fb16:	2300      	movs	r3, #0
 800fb18:	4618      	mov	r0, r3
 800fb1a:	3710      	adds	r7, #16
 800fb1c:	46bd      	mov	sp, r7
 800fb1e:	bd80      	pop	{r7, pc}

0800fb20 <HAL_PCD_EP_ClrStall>:
 800fb20:	b580      	push	{r7, lr}
 800fb22:	b084      	sub	sp, #16
 800fb24:	af00      	add	r7, sp, #0
 800fb26:	6078      	str	r0, [r7, #4]
 800fb28:	460b      	mov	r3, r1
 800fb2a:	70fb      	strb	r3, [r7, #3]
 800fb2c:	78fb      	ldrb	r3, [r7, #3]
 800fb2e:	f003 020f 	and.w	r2, r3, #15
 800fb32:	687b      	ldr	r3, [r7, #4]
 800fb34:	685b      	ldr	r3, [r3, #4]
 800fb36:	429a      	cmp	r2, r3
 800fb38:	d901      	bls.n	800fb3e <HAL_PCD_EP_ClrStall+0x1e>
 800fb3a:	2301      	movs	r3, #1
 800fb3c:	e042      	b.n	800fbc4 <HAL_PCD_EP_ClrStall+0xa4>
 800fb3e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fb42:	2b00      	cmp	r3, #0
 800fb44:	da0f      	bge.n	800fb66 <HAL_PCD_EP_ClrStall+0x46>
 800fb46:	78fb      	ldrb	r3, [r7, #3]
 800fb48:	f003 020f 	and.w	r2, r3, #15
 800fb4c:	4613      	mov	r3, r2
 800fb4e:	00db      	lsls	r3, r3, #3
 800fb50:	4413      	add	r3, r2
 800fb52:	009b      	lsls	r3, r3, #2
 800fb54:	3338      	adds	r3, #56	@ 0x38
 800fb56:	687a      	ldr	r2, [r7, #4]
 800fb58:	4413      	add	r3, r2
 800fb5a:	3304      	adds	r3, #4
 800fb5c:	60fb      	str	r3, [r7, #12]
 800fb5e:	68fb      	ldr	r3, [r7, #12]
 800fb60:	2201      	movs	r2, #1
 800fb62:	705a      	strb	r2, [r3, #1]
 800fb64:	e00f      	b.n	800fb86 <HAL_PCD_EP_ClrStall+0x66>
 800fb66:	78fb      	ldrb	r3, [r7, #3]
 800fb68:	f003 020f 	and.w	r2, r3, #15
 800fb6c:	4613      	mov	r3, r2
 800fb6e:	00db      	lsls	r3, r3, #3
 800fb70:	4413      	add	r3, r2
 800fb72:	009b      	lsls	r3, r3, #2
 800fb74:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fb78:	687a      	ldr	r2, [r7, #4]
 800fb7a:	4413      	add	r3, r2
 800fb7c:	3304      	adds	r3, #4
 800fb7e:	60fb      	str	r3, [r7, #12]
 800fb80:	68fb      	ldr	r3, [r7, #12]
 800fb82:	2200      	movs	r2, #0
 800fb84:	705a      	strb	r2, [r3, #1]
 800fb86:	68fb      	ldr	r3, [r7, #12]
 800fb88:	2200      	movs	r2, #0
 800fb8a:	709a      	strb	r2, [r3, #2]
 800fb8c:	78fb      	ldrb	r3, [r7, #3]
 800fb8e:	f003 030f 	and.w	r3, r3, #15
 800fb92:	b2da      	uxtb	r2, r3
 800fb94:	68fb      	ldr	r3, [r7, #12]
 800fb96:	701a      	strb	r2, [r3, #0]
 800fb98:	687b      	ldr	r3, [r7, #4]
 800fb9a:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800fb9e:	2b01      	cmp	r3, #1
 800fba0:	d101      	bne.n	800fba6 <HAL_PCD_EP_ClrStall+0x86>
 800fba2:	2302      	movs	r3, #2
 800fba4:	e00e      	b.n	800fbc4 <HAL_PCD_EP_ClrStall+0xa4>
 800fba6:	687b      	ldr	r3, [r7, #4]
 800fba8:	2201      	movs	r2, #1
 800fbaa:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fbae:	687b      	ldr	r3, [r7, #4]
 800fbb0:	681b      	ldr	r3, [r3, #0]
 800fbb2:	68f9      	ldr	r1, [r7, #12]
 800fbb4:	4618      	mov	r0, r3
 800fbb6:	f005 f847 	bl	8014c48 <USB_EPClearStall>
 800fbba:	687b      	ldr	r3, [r7, #4]
 800fbbc:	2200      	movs	r2, #0
 800fbbe:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 800fbc2:	2300      	movs	r3, #0
 800fbc4:	4618      	mov	r0, r3
 800fbc6:	3710      	adds	r7, #16
 800fbc8:	46bd      	mov	sp, r7
 800fbca:	bd80      	pop	{r7, pc}

0800fbcc <HAL_PCD_EP_Abort>:
 800fbcc:	b580      	push	{r7, lr}
 800fbce:	b084      	sub	sp, #16
 800fbd0:	af00      	add	r7, sp, #0
 800fbd2:	6078      	str	r0, [r7, #4]
 800fbd4:	460b      	mov	r3, r1
 800fbd6:	70fb      	strb	r3, [r7, #3]
 800fbd8:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800fbdc:	2b00      	cmp	r3, #0
 800fbde:	da0c      	bge.n	800fbfa <HAL_PCD_EP_Abort+0x2e>
 800fbe0:	78fb      	ldrb	r3, [r7, #3]
 800fbe2:	f003 020f 	and.w	r2, r3, #15
 800fbe6:	4613      	mov	r3, r2
 800fbe8:	00db      	lsls	r3, r3, #3
 800fbea:	4413      	add	r3, r2
 800fbec:	009b      	lsls	r3, r3, #2
 800fbee:	3338      	adds	r3, #56	@ 0x38
 800fbf0:	687a      	ldr	r2, [r7, #4]
 800fbf2:	4413      	add	r3, r2
 800fbf4:	3304      	adds	r3, #4
 800fbf6:	60fb      	str	r3, [r7, #12]
 800fbf8:	e00c      	b.n	800fc14 <HAL_PCD_EP_Abort+0x48>
 800fbfa:	78fb      	ldrb	r3, [r7, #3]
 800fbfc:	f003 020f 	and.w	r2, r3, #15
 800fc00:	4613      	mov	r3, r2
 800fc02:	00db      	lsls	r3, r3, #3
 800fc04:	4413      	add	r3, r2
 800fc06:	009b      	lsls	r3, r3, #2
 800fc08:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fc0c:	687a      	ldr	r2, [r7, #4]
 800fc0e:	4413      	add	r3, r2
 800fc10:	3304      	adds	r3, #4
 800fc12:	60fb      	str	r3, [r7, #12]
 800fc14:	687b      	ldr	r3, [r7, #4]
 800fc16:	681b      	ldr	r3, [r3, #0]
 800fc18:	68f9      	ldr	r1, [r7, #12]
 800fc1a:	4618      	mov	r0, r3
 800fc1c:	f004 fe66 	bl	80148ec <USB_EPStopXfer>
 800fc20:	4603      	mov	r3, r0
 800fc22:	72fb      	strb	r3, [r7, #11]
 800fc24:	7afb      	ldrb	r3, [r7, #11]
 800fc26:	4618      	mov	r0, r3
 800fc28:	3710      	adds	r7, #16
 800fc2a:	46bd      	mov	sp, r7
 800fc2c:	bd80      	pop	{r7, pc}

0800fc2e <PCD_WriteEmptyTxFifo>:
 800fc2e:	b580      	push	{r7, lr}
 800fc30:	b08a      	sub	sp, #40	@ 0x28
 800fc32:	af02      	add	r7, sp, #8
 800fc34:	6078      	str	r0, [r7, #4]
 800fc36:	6039      	str	r1, [r7, #0]
 800fc38:	687b      	ldr	r3, [r7, #4]
 800fc3a:	681b      	ldr	r3, [r3, #0]
 800fc3c:	617b      	str	r3, [r7, #20]
 800fc3e:	697b      	ldr	r3, [r7, #20]
 800fc40:	613b      	str	r3, [r7, #16]
 800fc42:	683a      	ldr	r2, [r7, #0]
 800fc44:	4613      	mov	r3, r2
 800fc46:	00db      	lsls	r3, r3, #3
 800fc48:	4413      	add	r3, r2
 800fc4a:	009b      	lsls	r3, r3, #2
 800fc4c:	3338      	adds	r3, #56	@ 0x38
 800fc4e:	687a      	ldr	r2, [r7, #4]
 800fc50:	4413      	add	r3, r2
 800fc52:	3304      	adds	r3, #4
 800fc54:	60fb      	str	r3, [r7, #12]
 800fc56:	68fb      	ldr	r3, [r7, #12]
 800fc58:	6a1a      	ldr	r2, [r3, #32]
 800fc5a:	68fb      	ldr	r3, [r7, #12]
 800fc5c:	699b      	ldr	r3, [r3, #24]
 800fc5e:	429a      	cmp	r2, r3
 800fc60:	d901      	bls.n	800fc66 <PCD_WriteEmptyTxFifo+0x38>
 800fc62:	2301      	movs	r3, #1
 800fc64:	e06c      	b.n	800fd40 <PCD_WriteEmptyTxFifo+0x112>
 800fc66:	68fb      	ldr	r3, [r7, #12]
 800fc68:	699a      	ldr	r2, [r3, #24]
 800fc6a:	68fb      	ldr	r3, [r7, #12]
 800fc6c:	6a1b      	ldr	r3, [r3, #32]
 800fc6e:	1ad3      	subs	r3, r2, r3
 800fc70:	61fb      	str	r3, [r7, #28]
 800fc72:	68fb      	ldr	r3, [r7, #12]
 800fc74:	68db      	ldr	r3, [r3, #12]
 800fc76:	69fa      	ldr	r2, [r7, #28]
 800fc78:	429a      	cmp	r2, r3
 800fc7a:	d902      	bls.n	800fc82 <PCD_WriteEmptyTxFifo+0x54>
 800fc7c:	68fb      	ldr	r3, [r7, #12]
 800fc7e:	68db      	ldr	r3, [r3, #12]
 800fc80:	61fb      	str	r3, [r7, #28]
 800fc82:	69fb      	ldr	r3, [r7, #28]
 800fc84:	3303      	adds	r3, #3
 800fc86:	089b      	lsrs	r3, r3, #2
 800fc88:	61bb      	str	r3, [r7, #24]
 800fc8a:	e02b      	b.n	800fce4 <PCD_WriteEmptyTxFifo+0xb6>
 800fc8c:	68fb      	ldr	r3, [r7, #12]
 800fc8e:	699a      	ldr	r2, [r3, #24]
 800fc90:	68fb      	ldr	r3, [r7, #12]
 800fc92:	6a1b      	ldr	r3, [r3, #32]
 800fc94:	1ad3      	subs	r3, r2, r3
 800fc96:	61fb      	str	r3, [r7, #28]
 800fc98:	68fb      	ldr	r3, [r7, #12]
 800fc9a:	68db      	ldr	r3, [r3, #12]
 800fc9c:	69fa      	ldr	r2, [r7, #28]
 800fc9e:	429a      	cmp	r2, r3
 800fca0:	d902      	bls.n	800fca8 <PCD_WriteEmptyTxFifo+0x7a>
 800fca2:	68fb      	ldr	r3, [r7, #12]
 800fca4:	68db      	ldr	r3, [r3, #12]
 800fca6:	61fb      	str	r3, [r7, #28]
 800fca8:	69fb      	ldr	r3, [r7, #28]
 800fcaa:	3303      	adds	r3, #3
 800fcac:	089b      	lsrs	r3, r3, #2
 800fcae:	61bb      	str	r3, [r7, #24]
 800fcb0:	68fb      	ldr	r3, [r7, #12]
 800fcb2:	6919      	ldr	r1, [r3, #16]
 800fcb4:	683b      	ldr	r3, [r7, #0]
 800fcb6:	b2da      	uxtb	r2, r3
 800fcb8:	69fb      	ldr	r3, [r7, #28]
 800fcba:	b298      	uxth	r0, r3
 800fcbc:	687b      	ldr	r3, [r7, #4]
 800fcbe:	691b      	ldr	r3, [r3, #16]
 800fcc0:	b2db      	uxtb	r3, r3
 800fcc2:	9300      	str	r3, [sp, #0]
 800fcc4:	4603      	mov	r3, r0
 800fcc6:	6978      	ldr	r0, [r7, #20]
 800fcc8:	f004 feba 	bl	8014a40 <USB_WritePacket>
 800fccc:	68fb      	ldr	r3, [r7, #12]
 800fcce:	691a      	ldr	r2, [r3, #16]
 800fcd0:	69fb      	ldr	r3, [r7, #28]
 800fcd2:	441a      	add	r2, r3
 800fcd4:	68fb      	ldr	r3, [r7, #12]
 800fcd6:	611a      	str	r2, [r3, #16]
 800fcd8:	68fb      	ldr	r3, [r7, #12]
 800fcda:	6a1a      	ldr	r2, [r3, #32]
 800fcdc:	69fb      	ldr	r3, [r7, #28]
 800fcde:	441a      	add	r2, r3
 800fce0:	68fb      	ldr	r3, [r7, #12]
 800fce2:	621a      	str	r2, [r3, #32]
 800fce4:	683b      	ldr	r3, [r7, #0]
 800fce6:	015a      	lsls	r2, r3, #5
 800fce8:	693b      	ldr	r3, [r7, #16]
 800fcea:	4413      	add	r3, r2
 800fcec:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 800fcf0:	699b      	ldr	r3, [r3, #24]
 800fcf2:	b29b      	uxth	r3, r3
 800fcf4:	69ba      	ldr	r2, [r7, #24]
 800fcf6:	429a      	cmp	r2, r3
 800fcf8:	d809      	bhi.n	800fd0e <PCD_WriteEmptyTxFifo+0xe0>
 800fcfa:	68fb      	ldr	r3, [r7, #12]
 800fcfc:	6a1a      	ldr	r2, [r3, #32]
 800fcfe:	68fb      	ldr	r3, [r7, #12]
 800fd00:	699b      	ldr	r3, [r3, #24]
 800fd02:	429a      	cmp	r2, r3
 800fd04:	d203      	bcs.n	800fd0e <PCD_WriteEmptyTxFifo+0xe0>
 800fd06:	68fb      	ldr	r3, [r7, #12]
 800fd08:	699b      	ldr	r3, [r3, #24]
 800fd0a:	2b00      	cmp	r3, #0
 800fd0c:	d1be      	bne.n	800fc8c <PCD_WriteEmptyTxFifo+0x5e>
 800fd0e:	68fb      	ldr	r3, [r7, #12]
 800fd10:	699a      	ldr	r2, [r3, #24]
 800fd12:	68fb      	ldr	r3, [r7, #12]
 800fd14:	6a1b      	ldr	r3, [r3, #32]
 800fd16:	429a      	cmp	r2, r3
 800fd18:	d811      	bhi.n	800fd3e <PCD_WriteEmptyTxFifo+0x110>
 800fd1a:	683b      	ldr	r3, [r7, #0]
 800fd1c:	f003 030f 	and.w	r3, r3, #15
 800fd20:	2201      	movs	r2, #1
 800fd22:	fa02 f303 	lsl.w	r3, r2, r3
 800fd26:	60bb      	str	r3, [r7, #8]
 800fd28:	693b      	ldr	r3, [r7, #16]
 800fd2a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 800fd2e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800fd30:	68bb      	ldr	r3, [r7, #8]
 800fd32:	43db      	mvns	r3, r3
 800fd34:	6939      	ldr	r1, [r7, #16]
 800fd36:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 800fd3a:	4013      	ands	r3, r2
 800fd3c:	634b      	str	r3, [r1, #52]	@ 0x34
 800fd3e:	2300      	movs	r3, #0
 800fd40:	4618      	mov	r0, r3
 800fd42:	3720      	adds	r7, #32
 800fd44:	46bd      	mov	sp, r7
 800fd46:	bd80      	pop	{r7, pc}

0800fd48 <PCD_EP_OutXfrComplete_int>:
 800fd48:	b580      	push	{r7, lr}
 800fd4a:	b088      	sub	sp, #32
 800fd4c:	af00      	add	r7, sp, #0
 800fd4e:	6078      	str	r0, [r7, #4]
 800fd50:	6039      	str	r1, [r7, #0]
 800fd52:	687b      	ldr	r3, [r7, #4]
 800fd54:	681b      	ldr	r3, [r3, #0]
 800fd56:	61fb      	str	r3, [r7, #28]
 800fd58:	69fb      	ldr	r3, [r7, #28]
 800fd5a:	61bb      	str	r3, [r7, #24]
 800fd5c:	69fb      	ldr	r3, [r7, #28]
 800fd5e:	333c      	adds	r3, #60	@ 0x3c
 800fd60:	3304      	adds	r3, #4
 800fd62:	681b      	ldr	r3, [r3, #0]
 800fd64:	617b      	str	r3, [r7, #20]
 800fd66:	683b      	ldr	r3, [r7, #0]
 800fd68:	015a      	lsls	r2, r3, #5
 800fd6a:	69bb      	ldr	r3, [r7, #24]
 800fd6c:	4413      	add	r3, r2
 800fd6e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fd72:	689b      	ldr	r3, [r3, #8]
 800fd74:	613b      	str	r3, [r7, #16]
 800fd76:	687b      	ldr	r3, [r7, #4]
 800fd78:	691b      	ldr	r3, [r3, #16]
 800fd7a:	2b01      	cmp	r3, #1
 800fd7c:	d17b      	bne.n	800fe76 <PCD_EP_OutXfrComplete_int+0x12e>
 800fd7e:	693b      	ldr	r3, [r7, #16]
 800fd80:	f003 0308 	and.w	r3, r3, #8
 800fd84:	2b00      	cmp	r3, #0
 800fd86:	d015      	beq.n	800fdb4 <PCD_EP_OutXfrComplete_int+0x6c>
 800fd88:	697b      	ldr	r3, [r7, #20]
 800fd8a:	4a61      	ldr	r2, [pc, #388]	@ (800ff10 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800fd8c:	4293      	cmp	r3, r2
 800fd8e:	f240 80b9 	bls.w	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd92:	693b      	ldr	r3, [r7, #16]
 800fd94:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fd98:	2b00      	cmp	r3, #0
 800fd9a:	f000 80b3 	beq.w	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fd9e:	683b      	ldr	r3, [r7, #0]
 800fda0:	015a      	lsls	r2, r3, #5
 800fda2:	69bb      	ldr	r3, [r7, #24]
 800fda4:	4413      	add	r3, r2
 800fda6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fdaa:	461a      	mov	r2, r3
 800fdac:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fdb0:	6093      	str	r3, [r2, #8]
 800fdb2:	e0a7      	b.n	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fdb4:	693b      	ldr	r3, [r7, #16]
 800fdb6:	f003 0320 	and.w	r3, r3, #32
 800fdba:	2b00      	cmp	r3, #0
 800fdbc:	d009      	beq.n	800fdd2 <PCD_EP_OutXfrComplete_int+0x8a>
 800fdbe:	683b      	ldr	r3, [r7, #0]
 800fdc0:	015a      	lsls	r2, r3, #5
 800fdc2:	69bb      	ldr	r3, [r7, #24]
 800fdc4:	4413      	add	r3, r2
 800fdc6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fdca:	461a      	mov	r2, r3
 800fdcc:	2320      	movs	r3, #32
 800fdce:	6093      	str	r3, [r2, #8]
 800fdd0:	e098      	b.n	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fdd2:	693b      	ldr	r3, [r7, #16]
 800fdd4:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800fdd8:	2b00      	cmp	r3, #0
 800fdda:	f040 8093 	bne.w	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fdde:	697b      	ldr	r3, [r7, #20]
 800fde0:	4a4b      	ldr	r2, [pc, #300]	@ (800ff10 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800fde2:	4293      	cmp	r3, r2
 800fde4:	d90f      	bls.n	800fe06 <PCD_EP_OutXfrComplete_int+0xbe>
 800fde6:	693b      	ldr	r3, [r7, #16]
 800fde8:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fdec:	2b00      	cmp	r3, #0
 800fdee:	d00a      	beq.n	800fe06 <PCD_EP_OutXfrComplete_int+0xbe>
 800fdf0:	683b      	ldr	r3, [r7, #0]
 800fdf2:	015a      	lsls	r2, r3, #5
 800fdf4:	69bb      	ldr	r3, [r7, #24]
 800fdf6:	4413      	add	r3, r2
 800fdf8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fdfc:	461a      	mov	r2, r3
 800fdfe:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fe02:	6093      	str	r3, [r2, #8]
 800fe04:	e07e      	b.n	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe06:	683a      	ldr	r2, [r7, #0]
 800fe08:	4613      	mov	r3, r2
 800fe0a:	00db      	lsls	r3, r3, #3
 800fe0c:	4413      	add	r3, r2
 800fe0e:	009b      	lsls	r3, r3, #2
 800fe10:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 800fe14:	687a      	ldr	r2, [r7, #4]
 800fe16:	4413      	add	r3, r2
 800fe18:	3304      	adds	r3, #4
 800fe1a:	60fb      	str	r3, [r7, #12]
 800fe1c:	68fb      	ldr	r3, [r7, #12]
 800fe1e:	69da      	ldr	r2, [r3, #28]
 800fe20:	683b      	ldr	r3, [r7, #0]
 800fe22:	0159      	lsls	r1, r3, #5
 800fe24:	69bb      	ldr	r3, [r7, #24]
 800fe26:	440b      	add	r3, r1
 800fe28:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fe2c:	691b      	ldr	r3, [r3, #16]
 800fe2e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800fe32:	1ad2      	subs	r2, r2, r3
 800fe34:	68fb      	ldr	r3, [r7, #12]
 800fe36:	621a      	str	r2, [r3, #32]
 800fe38:	683b      	ldr	r3, [r7, #0]
 800fe3a:	2b00      	cmp	r3, #0
 800fe3c:	d114      	bne.n	800fe68 <PCD_EP_OutXfrComplete_int+0x120>
 800fe3e:	68fb      	ldr	r3, [r7, #12]
 800fe40:	699b      	ldr	r3, [r3, #24]
 800fe42:	2b00      	cmp	r3, #0
 800fe44:	d109      	bne.n	800fe5a <PCD_EP_OutXfrComplete_int+0x112>
 800fe46:	687b      	ldr	r3, [r7, #4]
 800fe48:	6818      	ldr	r0, [r3, #0]
 800fe4a:	687b      	ldr	r3, [r7, #4]
 800fe4c:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fe50:	461a      	mov	r2, r3
 800fe52:	2101      	movs	r1, #1
 800fe54:	f005 f88a 	bl	8014f6c <USB_EP0_OutStart>
 800fe58:	e006      	b.n	800fe68 <PCD_EP_OutXfrComplete_int+0x120>
 800fe5a:	68fb      	ldr	r3, [r7, #12]
 800fe5c:	691a      	ldr	r2, [r3, #16]
 800fe5e:	68fb      	ldr	r3, [r7, #12]
 800fe60:	6a1b      	ldr	r3, [r3, #32]
 800fe62:	441a      	add	r2, r3
 800fe64:	68fb      	ldr	r3, [r7, #12]
 800fe66:	611a      	str	r2, [r3, #16]
 800fe68:	683b      	ldr	r3, [r7, #0]
 800fe6a:	b2db      	uxtb	r3, r3
 800fe6c:	4619      	mov	r1, r3
 800fe6e:	6878      	ldr	r0, [r7, #4]
 800fe70:	f00a fc18 	bl	801a6a4 <HAL_PCD_DataOutStageCallback>
 800fe74:	e046      	b.n	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe76:	697b      	ldr	r3, [r7, #20]
 800fe78:	4a26      	ldr	r2, [pc, #152]	@ (800ff14 <PCD_EP_OutXfrComplete_int+0x1cc>)
 800fe7a:	4293      	cmp	r3, r2
 800fe7c:	d124      	bne.n	800fec8 <PCD_EP_OutXfrComplete_int+0x180>
 800fe7e:	693b      	ldr	r3, [r7, #16]
 800fe80:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800fe84:	2b00      	cmp	r3, #0
 800fe86:	d00a      	beq.n	800fe9e <PCD_EP_OutXfrComplete_int+0x156>
 800fe88:	683b      	ldr	r3, [r7, #0]
 800fe8a:	015a      	lsls	r2, r3, #5
 800fe8c:	69bb      	ldr	r3, [r7, #24]
 800fe8e:	4413      	add	r3, r2
 800fe90:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800fe94:	461a      	mov	r2, r3
 800fe96:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800fe9a:	6093      	str	r3, [r2, #8]
 800fe9c:	e032      	b.n	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fe9e:	693b      	ldr	r3, [r7, #16]
 800fea0:	f003 0320 	and.w	r3, r3, #32
 800fea4:	2b00      	cmp	r3, #0
 800fea6:	d008      	beq.n	800feba <PCD_EP_OutXfrComplete_int+0x172>
 800fea8:	683b      	ldr	r3, [r7, #0]
 800feaa:	015a      	lsls	r2, r3, #5
 800feac:	69bb      	ldr	r3, [r7, #24]
 800feae:	4413      	add	r3, r2
 800feb0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800feb4:	461a      	mov	r2, r3
 800feb6:	2320      	movs	r3, #32
 800feb8:	6093      	str	r3, [r2, #8]
 800feba:	683b      	ldr	r3, [r7, #0]
 800febc:	b2db      	uxtb	r3, r3
 800febe:	4619      	mov	r1, r3
 800fec0:	6878      	ldr	r0, [r7, #4]
 800fec2:	f00a fbef 	bl	801a6a4 <HAL_PCD_DataOutStageCallback>
 800fec6:	e01d      	b.n	800ff04 <PCD_EP_OutXfrComplete_int+0x1bc>
 800fec8:	683b      	ldr	r3, [r7, #0]
 800feca:	2b00      	cmp	r3, #0
 800fecc:	d114      	bne.n	800fef8 <PCD_EP_OutXfrComplete_int+0x1b0>
 800fece:	6879      	ldr	r1, [r7, #4]
 800fed0:	683a      	ldr	r2, [r7, #0]
 800fed2:	4613      	mov	r3, r2
 800fed4:	00db      	lsls	r3, r3, #3
 800fed6:	4413      	add	r3, r2
 800fed8:	009b      	lsls	r3, r3, #2
 800feda:	440b      	add	r3, r1
 800fedc:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 800fee0:	681b      	ldr	r3, [r3, #0]
 800fee2:	2b00      	cmp	r3, #0
 800fee4:	d108      	bne.n	800fef8 <PCD_EP_OutXfrComplete_int+0x1b0>
 800fee6:	687b      	ldr	r3, [r7, #4]
 800fee8:	6818      	ldr	r0, [r3, #0]
 800feea:	687b      	ldr	r3, [r7, #4]
 800feec:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800fef0:	461a      	mov	r2, r3
 800fef2:	2100      	movs	r1, #0
 800fef4:	f005 f83a 	bl	8014f6c <USB_EP0_OutStart>
 800fef8:	683b      	ldr	r3, [r7, #0]
 800fefa:	b2db      	uxtb	r3, r3
 800fefc:	4619      	mov	r1, r3
 800fefe:	6878      	ldr	r0, [r7, #4]
 800ff00:	f00a fbd0 	bl	801a6a4 <HAL_PCD_DataOutStageCallback>
 800ff04:	2300      	movs	r3, #0
 800ff06:	4618      	mov	r0, r3
 800ff08:	3720      	adds	r7, #32
 800ff0a:	46bd      	mov	sp, r7
 800ff0c:	bd80      	pop	{r7, pc}
 800ff0e:	bf00      	nop
 800ff10:	4f54300a 	.word	0x4f54300a
 800ff14:	4f54310a 	.word	0x4f54310a

0800ff18 <PCD_EP_OutSetupPacket_int>:
 800ff18:	b580      	push	{r7, lr}
 800ff1a:	b086      	sub	sp, #24
 800ff1c:	af00      	add	r7, sp, #0
 800ff1e:	6078      	str	r0, [r7, #4]
 800ff20:	6039      	str	r1, [r7, #0]
 800ff22:	687b      	ldr	r3, [r7, #4]
 800ff24:	681b      	ldr	r3, [r3, #0]
 800ff26:	617b      	str	r3, [r7, #20]
 800ff28:	697b      	ldr	r3, [r7, #20]
 800ff2a:	613b      	str	r3, [r7, #16]
 800ff2c:	697b      	ldr	r3, [r7, #20]
 800ff2e:	333c      	adds	r3, #60	@ 0x3c
 800ff30:	3304      	adds	r3, #4
 800ff32:	681b      	ldr	r3, [r3, #0]
 800ff34:	60fb      	str	r3, [r7, #12]
 800ff36:	683b      	ldr	r3, [r7, #0]
 800ff38:	015a      	lsls	r2, r3, #5
 800ff3a:	693b      	ldr	r3, [r7, #16]
 800ff3c:	4413      	add	r3, r2
 800ff3e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ff42:	689b      	ldr	r3, [r3, #8]
 800ff44:	60bb      	str	r3, [r7, #8]
 800ff46:	68fb      	ldr	r3, [r7, #12]
 800ff48:	4a15      	ldr	r2, [pc, #84]	@ (800ffa0 <PCD_EP_OutSetupPacket_int+0x88>)
 800ff4a:	4293      	cmp	r3, r2
 800ff4c:	d90e      	bls.n	800ff6c <PCD_EP_OutSetupPacket_int+0x54>
 800ff4e:	68bb      	ldr	r3, [r7, #8]
 800ff50:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ff54:	2b00      	cmp	r3, #0
 800ff56:	d009      	beq.n	800ff6c <PCD_EP_OutSetupPacket_int+0x54>
 800ff58:	683b      	ldr	r3, [r7, #0]
 800ff5a:	015a      	lsls	r2, r3, #5
 800ff5c:	693b      	ldr	r3, [r7, #16]
 800ff5e:	4413      	add	r3, r2
 800ff60:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 800ff64:	461a      	mov	r2, r3
 800ff66:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800ff6a:	6093      	str	r3, [r2, #8]
 800ff6c:	6878      	ldr	r0, [r7, #4]
 800ff6e:	f00a fb87 	bl	801a680 <HAL_PCD_SetupStageCallback>
 800ff72:	68fb      	ldr	r3, [r7, #12]
 800ff74:	4a0a      	ldr	r2, [pc, #40]	@ (800ffa0 <PCD_EP_OutSetupPacket_int+0x88>)
 800ff76:	4293      	cmp	r3, r2
 800ff78:	d90c      	bls.n	800ff94 <PCD_EP_OutSetupPacket_int+0x7c>
 800ff7a:	687b      	ldr	r3, [r7, #4]
 800ff7c:	691b      	ldr	r3, [r3, #16]
 800ff7e:	2b01      	cmp	r3, #1
 800ff80:	d108      	bne.n	800ff94 <PCD_EP_OutSetupPacket_int+0x7c>
 800ff82:	687b      	ldr	r3, [r7, #4]
 800ff84:	6818      	ldr	r0, [r3, #0]
 800ff86:	687b      	ldr	r3, [r7, #4]
 800ff88:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 800ff8c:	461a      	mov	r2, r3
 800ff8e:	2101      	movs	r1, #1
 800ff90:	f004 ffec 	bl	8014f6c <USB_EP0_OutStart>
 800ff94:	2300      	movs	r3, #0
 800ff96:	4618      	mov	r0, r3
 800ff98:	3718      	adds	r7, #24
 800ff9a:	46bd      	mov	sp, r7
 800ff9c:	bd80      	pop	{r7, pc}
 800ff9e:	bf00      	nop
 800ffa0:	4f54300a 	.word	0x4f54300a

0800ffa4 <HAL_PCDEx_SetTxFiFo>:
 800ffa4:	b480      	push	{r7}
 800ffa6:	b085      	sub	sp, #20
 800ffa8:	af00      	add	r7, sp, #0
 800ffaa:	6078      	str	r0, [r7, #4]
 800ffac:	460b      	mov	r3, r1
 800ffae:	70fb      	strb	r3, [r7, #3]
 800ffb0:	4613      	mov	r3, r2
 800ffb2:	803b      	strh	r3, [r7, #0]
 800ffb4:	687b      	ldr	r3, [r7, #4]
 800ffb6:	681b      	ldr	r3, [r3, #0]
 800ffb8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ffba:	60bb      	str	r3, [r7, #8]
 800ffbc:	78fb      	ldrb	r3, [r7, #3]
 800ffbe:	2b00      	cmp	r3, #0
 800ffc0:	d107      	bne.n	800ffd2 <HAL_PCDEx_SetTxFiFo+0x2e>
 800ffc2:	883b      	ldrh	r3, [r7, #0]
 800ffc4:	0419      	lsls	r1, r3, #16
 800ffc6:	687b      	ldr	r3, [r7, #4]
 800ffc8:	681b      	ldr	r3, [r3, #0]
 800ffca:	68ba      	ldr	r2, [r7, #8]
 800ffcc:	430a      	orrs	r2, r1
 800ffce:	629a      	str	r2, [r3, #40]	@ 0x28
 800ffd0:	e028      	b.n	8010024 <HAL_PCDEx_SetTxFiFo+0x80>
 800ffd2:	687b      	ldr	r3, [r7, #4]
 800ffd4:	681b      	ldr	r3, [r3, #0]
 800ffd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ffd8:	0c1b      	lsrs	r3, r3, #16
 800ffda:	68ba      	ldr	r2, [r7, #8]
 800ffdc:	4413      	add	r3, r2
 800ffde:	60bb      	str	r3, [r7, #8]
 800ffe0:	2300      	movs	r3, #0
 800ffe2:	73fb      	strb	r3, [r7, #15]
 800ffe4:	e00d      	b.n	8010002 <HAL_PCDEx_SetTxFiFo+0x5e>
 800ffe6:	687b      	ldr	r3, [r7, #4]
 800ffe8:	681a      	ldr	r2, [r3, #0]
 800ffea:	7bfb      	ldrb	r3, [r7, #15]
 800ffec:	3340      	adds	r3, #64	@ 0x40
 800ffee:	009b      	lsls	r3, r3, #2
 800fff0:	4413      	add	r3, r2
 800fff2:	685b      	ldr	r3, [r3, #4]
 800fff4:	0c1b      	lsrs	r3, r3, #16
 800fff6:	68ba      	ldr	r2, [r7, #8]
 800fff8:	4413      	add	r3, r2
 800fffa:	60bb      	str	r3, [r7, #8]
 800fffc:	7bfb      	ldrb	r3, [r7, #15]
 800fffe:	3301      	adds	r3, #1
 8010000:	73fb      	strb	r3, [r7, #15]
 8010002:	7bfa      	ldrb	r2, [r7, #15]
 8010004:	78fb      	ldrb	r3, [r7, #3]
 8010006:	3b01      	subs	r3, #1
 8010008:	429a      	cmp	r2, r3
 801000a:	d3ec      	bcc.n	800ffe6 <HAL_PCDEx_SetTxFiFo+0x42>
 801000c:	883b      	ldrh	r3, [r7, #0]
 801000e:	0418      	lsls	r0, r3, #16
 8010010:	687b      	ldr	r3, [r7, #4]
 8010012:	6819      	ldr	r1, [r3, #0]
 8010014:	78fb      	ldrb	r3, [r7, #3]
 8010016:	3b01      	subs	r3, #1
 8010018:	68ba      	ldr	r2, [r7, #8]
 801001a:	4302      	orrs	r2, r0
 801001c:	3340      	adds	r3, #64	@ 0x40
 801001e:	009b      	lsls	r3, r3, #2
 8010020:	440b      	add	r3, r1
 8010022:	605a      	str	r2, [r3, #4]
 8010024:	2300      	movs	r3, #0
 8010026:	4618      	mov	r0, r3
 8010028:	3714      	adds	r7, #20
 801002a:	46bd      	mov	sp, r7
 801002c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010030:	4770      	bx	lr

08010032 <HAL_PCDEx_SetRxFiFo>:
 8010032:	b480      	push	{r7}
 8010034:	b083      	sub	sp, #12
 8010036:	af00      	add	r7, sp, #0
 8010038:	6078      	str	r0, [r7, #4]
 801003a:	460b      	mov	r3, r1
 801003c:	807b      	strh	r3, [r7, #2]
 801003e:	687b      	ldr	r3, [r7, #4]
 8010040:	681b      	ldr	r3, [r3, #0]
 8010042:	887a      	ldrh	r2, [r7, #2]
 8010044:	625a      	str	r2, [r3, #36]	@ 0x24
 8010046:	2300      	movs	r3, #0
 8010048:	4618      	mov	r0, r3
 801004a:	370c      	adds	r7, #12
 801004c:	46bd      	mov	sp, r7
 801004e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010052:	4770      	bx	lr

08010054 <HAL_PCDEx_LPM_Callback>:
 8010054:	b480      	push	{r7}
 8010056:	b083      	sub	sp, #12
 8010058:	af00      	add	r7, sp, #0
 801005a:	6078      	str	r0, [r7, #4]
 801005c:	460b      	mov	r3, r1
 801005e:	70fb      	strb	r3, [r7, #3]
 8010060:	bf00      	nop
 8010062:	370c      	adds	r7, #12
 8010064:	46bd      	mov	sp, r7
 8010066:	f85d 7b04 	ldr.w	r7, [sp], #4
 801006a:	4770      	bx	lr

0801006c <HAL_RCC_OscConfig>:
 801006c:	b580      	push	{r7, lr}
 801006e:	b086      	sub	sp, #24
 8010070:	af00      	add	r7, sp, #0
 8010072:	6078      	str	r0, [r7, #4]
 8010074:	687b      	ldr	r3, [r7, #4]
 8010076:	2b00      	cmp	r3, #0
 8010078:	d101      	bne.n	801007e <HAL_RCC_OscConfig+0x12>
 801007a:	2301      	movs	r3, #1
 801007c:	e267      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 801007e:	687b      	ldr	r3, [r7, #4]
 8010080:	681b      	ldr	r3, [r3, #0]
 8010082:	f003 0301 	and.w	r3, r3, #1
 8010086:	2b00      	cmp	r3, #0
 8010088:	d075      	beq.n	8010176 <HAL_RCC_OscConfig+0x10a>
 801008a:	4b88      	ldr	r3, [pc, #544]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 801008c:	689b      	ldr	r3, [r3, #8]
 801008e:	f003 030c 	and.w	r3, r3, #12
 8010092:	2b04      	cmp	r3, #4
 8010094:	d00c      	beq.n	80100b0 <HAL_RCC_OscConfig+0x44>
 8010096:	4b85      	ldr	r3, [pc, #532]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010098:	689b      	ldr	r3, [r3, #8]
 801009a:	f003 030c 	and.w	r3, r3, #12
 801009e:	2b08      	cmp	r3, #8
 80100a0:	d112      	bne.n	80100c8 <HAL_RCC_OscConfig+0x5c>
 80100a2:	4b82      	ldr	r3, [pc, #520]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100a4:	685b      	ldr	r3, [r3, #4]
 80100a6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80100aa:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80100ae:	d10b      	bne.n	80100c8 <HAL_RCC_OscConfig+0x5c>
 80100b0:	4b7e      	ldr	r3, [pc, #504]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100b2:	681b      	ldr	r3, [r3, #0]
 80100b4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80100b8:	2b00      	cmp	r3, #0
 80100ba:	d05b      	beq.n	8010174 <HAL_RCC_OscConfig+0x108>
 80100bc:	687b      	ldr	r3, [r7, #4]
 80100be:	685b      	ldr	r3, [r3, #4]
 80100c0:	2b00      	cmp	r3, #0
 80100c2:	d157      	bne.n	8010174 <HAL_RCC_OscConfig+0x108>
 80100c4:	2301      	movs	r3, #1
 80100c6:	e242      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80100c8:	687b      	ldr	r3, [r7, #4]
 80100ca:	685b      	ldr	r3, [r3, #4]
 80100cc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80100d0:	d106      	bne.n	80100e0 <HAL_RCC_OscConfig+0x74>
 80100d2:	4b76      	ldr	r3, [pc, #472]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100d4:	681b      	ldr	r3, [r3, #0]
 80100d6:	4a75      	ldr	r2, [pc, #468]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100d8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80100dc:	6013      	str	r3, [r2, #0]
 80100de:	e01d      	b.n	801011c <HAL_RCC_OscConfig+0xb0>
 80100e0:	687b      	ldr	r3, [r7, #4]
 80100e2:	685b      	ldr	r3, [r3, #4]
 80100e4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80100e8:	d10c      	bne.n	8010104 <HAL_RCC_OscConfig+0x98>
 80100ea:	4b70      	ldr	r3, [pc, #448]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100ec:	681b      	ldr	r3, [r3, #0]
 80100ee:	4a6f      	ldr	r2, [pc, #444]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100f0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80100f4:	6013      	str	r3, [r2, #0]
 80100f6:	4b6d      	ldr	r3, [pc, #436]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100f8:	681b      	ldr	r3, [r3, #0]
 80100fa:	4a6c      	ldr	r2, [pc, #432]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80100fc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8010100:	6013      	str	r3, [r2, #0]
 8010102:	e00b      	b.n	801011c <HAL_RCC_OscConfig+0xb0>
 8010104:	4b69      	ldr	r3, [pc, #420]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010106:	681b      	ldr	r3, [r3, #0]
 8010108:	4a68      	ldr	r2, [pc, #416]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 801010a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 801010e:	6013      	str	r3, [r2, #0]
 8010110:	4b66      	ldr	r3, [pc, #408]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010112:	681b      	ldr	r3, [r3, #0]
 8010114:	4a65      	ldr	r2, [pc, #404]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010116:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 801011a:	6013      	str	r3, [r2, #0]
 801011c:	687b      	ldr	r3, [r7, #4]
 801011e:	685b      	ldr	r3, [r3, #4]
 8010120:	2b00      	cmp	r3, #0
 8010122:	d013      	beq.n	801014c <HAL_RCC_OscConfig+0xe0>
 8010124:	f7fa ff98 	bl	800b058 <HAL_GetTick>
 8010128:	6138      	str	r0, [r7, #16]
 801012a:	e008      	b.n	801013e <HAL_RCC_OscConfig+0xd2>
 801012c:	f7fa ff94 	bl	800b058 <HAL_GetTick>
 8010130:	4602      	mov	r2, r0
 8010132:	693b      	ldr	r3, [r7, #16]
 8010134:	1ad3      	subs	r3, r2, r3
 8010136:	2b64      	cmp	r3, #100	@ 0x64
 8010138:	d901      	bls.n	801013e <HAL_RCC_OscConfig+0xd2>
 801013a:	2303      	movs	r3, #3
 801013c:	e207      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 801013e:	4b5b      	ldr	r3, [pc, #364]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010140:	681b      	ldr	r3, [r3, #0]
 8010142:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8010146:	2b00      	cmp	r3, #0
 8010148:	d0f0      	beq.n	801012c <HAL_RCC_OscConfig+0xc0>
 801014a:	e014      	b.n	8010176 <HAL_RCC_OscConfig+0x10a>
 801014c:	f7fa ff84 	bl	800b058 <HAL_GetTick>
 8010150:	6138      	str	r0, [r7, #16]
 8010152:	e008      	b.n	8010166 <HAL_RCC_OscConfig+0xfa>
 8010154:	f7fa ff80 	bl	800b058 <HAL_GetTick>
 8010158:	4602      	mov	r2, r0
 801015a:	693b      	ldr	r3, [r7, #16]
 801015c:	1ad3      	subs	r3, r2, r3
 801015e:	2b64      	cmp	r3, #100	@ 0x64
 8010160:	d901      	bls.n	8010166 <HAL_RCC_OscConfig+0xfa>
 8010162:	2303      	movs	r3, #3
 8010164:	e1f3      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 8010166:	4b51      	ldr	r3, [pc, #324]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010168:	681b      	ldr	r3, [r3, #0]
 801016a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 801016e:	2b00      	cmp	r3, #0
 8010170:	d1f0      	bne.n	8010154 <HAL_RCC_OscConfig+0xe8>
 8010172:	e000      	b.n	8010176 <HAL_RCC_OscConfig+0x10a>
 8010174:	bf00      	nop
 8010176:	687b      	ldr	r3, [r7, #4]
 8010178:	681b      	ldr	r3, [r3, #0]
 801017a:	f003 0302 	and.w	r3, r3, #2
 801017e:	2b00      	cmp	r3, #0
 8010180:	d063      	beq.n	801024a <HAL_RCC_OscConfig+0x1de>
 8010182:	4b4a      	ldr	r3, [pc, #296]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010184:	689b      	ldr	r3, [r3, #8]
 8010186:	f003 030c 	and.w	r3, r3, #12
 801018a:	2b00      	cmp	r3, #0
 801018c:	d00b      	beq.n	80101a6 <HAL_RCC_OscConfig+0x13a>
 801018e:	4b47      	ldr	r3, [pc, #284]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010190:	689b      	ldr	r3, [r3, #8]
 8010192:	f003 030c 	and.w	r3, r3, #12
 8010196:	2b08      	cmp	r3, #8
 8010198:	d11c      	bne.n	80101d4 <HAL_RCC_OscConfig+0x168>
 801019a:	4b44      	ldr	r3, [pc, #272]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 801019c:	685b      	ldr	r3, [r3, #4]
 801019e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80101a2:	2b00      	cmp	r3, #0
 80101a4:	d116      	bne.n	80101d4 <HAL_RCC_OscConfig+0x168>
 80101a6:	4b41      	ldr	r3, [pc, #260]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80101a8:	681b      	ldr	r3, [r3, #0]
 80101aa:	f003 0302 	and.w	r3, r3, #2
 80101ae:	2b00      	cmp	r3, #0
 80101b0:	d005      	beq.n	80101be <HAL_RCC_OscConfig+0x152>
 80101b2:	687b      	ldr	r3, [r7, #4]
 80101b4:	68db      	ldr	r3, [r3, #12]
 80101b6:	2b01      	cmp	r3, #1
 80101b8:	d001      	beq.n	80101be <HAL_RCC_OscConfig+0x152>
 80101ba:	2301      	movs	r3, #1
 80101bc:	e1c7      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80101be:	4b3b      	ldr	r3, [pc, #236]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80101c0:	681b      	ldr	r3, [r3, #0]
 80101c2:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80101c6:	687b      	ldr	r3, [r7, #4]
 80101c8:	691b      	ldr	r3, [r3, #16]
 80101ca:	00db      	lsls	r3, r3, #3
 80101cc:	4937      	ldr	r1, [pc, #220]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80101ce:	4313      	orrs	r3, r2
 80101d0:	600b      	str	r3, [r1, #0]
 80101d2:	e03a      	b.n	801024a <HAL_RCC_OscConfig+0x1de>
 80101d4:	687b      	ldr	r3, [r7, #4]
 80101d6:	68db      	ldr	r3, [r3, #12]
 80101d8:	2b00      	cmp	r3, #0
 80101da:	d020      	beq.n	801021e <HAL_RCC_OscConfig+0x1b2>
 80101dc:	4b34      	ldr	r3, [pc, #208]	@ (80102b0 <HAL_RCC_OscConfig+0x244>)
 80101de:	2201      	movs	r2, #1
 80101e0:	601a      	str	r2, [r3, #0]
 80101e2:	f7fa ff39 	bl	800b058 <HAL_GetTick>
 80101e6:	6138      	str	r0, [r7, #16]
 80101e8:	e008      	b.n	80101fc <HAL_RCC_OscConfig+0x190>
 80101ea:	f7fa ff35 	bl	800b058 <HAL_GetTick>
 80101ee:	4602      	mov	r2, r0
 80101f0:	693b      	ldr	r3, [r7, #16]
 80101f2:	1ad3      	subs	r3, r2, r3
 80101f4:	2b02      	cmp	r3, #2
 80101f6:	d901      	bls.n	80101fc <HAL_RCC_OscConfig+0x190>
 80101f8:	2303      	movs	r3, #3
 80101fa:	e1a8      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80101fc:	4b2b      	ldr	r3, [pc, #172]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 80101fe:	681b      	ldr	r3, [r3, #0]
 8010200:	f003 0302 	and.w	r3, r3, #2
 8010204:	2b00      	cmp	r3, #0
 8010206:	d0f0      	beq.n	80101ea <HAL_RCC_OscConfig+0x17e>
 8010208:	4b28      	ldr	r3, [pc, #160]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 801020a:	681b      	ldr	r3, [r3, #0]
 801020c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8010210:	687b      	ldr	r3, [r7, #4]
 8010212:	691b      	ldr	r3, [r3, #16]
 8010214:	00db      	lsls	r3, r3, #3
 8010216:	4925      	ldr	r1, [pc, #148]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010218:	4313      	orrs	r3, r2
 801021a:	600b      	str	r3, [r1, #0]
 801021c:	e015      	b.n	801024a <HAL_RCC_OscConfig+0x1de>
 801021e:	4b24      	ldr	r3, [pc, #144]	@ (80102b0 <HAL_RCC_OscConfig+0x244>)
 8010220:	2200      	movs	r2, #0
 8010222:	601a      	str	r2, [r3, #0]
 8010224:	f7fa ff18 	bl	800b058 <HAL_GetTick>
 8010228:	6138      	str	r0, [r7, #16]
 801022a:	e008      	b.n	801023e <HAL_RCC_OscConfig+0x1d2>
 801022c:	f7fa ff14 	bl	800b058 <HAL_GetTick>
 8010230:	4602      	mov	r2, r0
 8010232:	693b      	ldr	r3, [r7, #16]
 8010234:	1ad3      	subs	r3, r2, r3
 8010236:	2b02      	cmp	r3, #2
 8010238:	d901      	bls.n	801023e <HAL_RCC_OscConfig+0x1d2>
 801023a:	2303      	movs	r3, #3
 801023c:	e187      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 801023e:	4b1b      	ldr	r3, [pc, #108]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010240:	681b      	ldr	r3, [r3, #0]
 8010242:	f003 0302 	and.w	r3, r3, #2
 8010246:	2b00      	cmp	r3, #0
 8010248:	d1f0      	bne.n	801022c <HAL_RCC_OscConfig+0x1c0>
 801024a:	687b      	ldr	r3, [r7, #4]
 801024c:	681b      	ldr	r3, [r3, #0]
 801024e:	f003 0308 	and.w	r3, r3, #8
 8010252:	2b00      	cmp	r3, #0
 8010254:	d036      	beq.n	80102c4 <HAL_RCC_OscConfig+0x258>
 8010256:	687b      	ldr	r3, [r7, #4]
 8010258:	695b      	ldr	r3, [r3, #20]
 801025a:	2b00      	cmp	r3, #0
 801025c:	d016      	beq.n	801028c <HAL_RCC_OscConfig+0x220>
 801025e:	4b15      	ldr	r3, [pc, #84]	@ (80102b4 <HAL_RCC_OscConfig+0x248>)
 8010260:	2201      	movs	r2, #1
 8010262:	601a      	str	r2, [r3, #0]
 8010264:	f7fa fef8 	bl	800b058 <HAL_GetTick>
 8010268:	6138      	str	r0, [r7, #16]
 801026a:	e008      	b.n	801027e <HAL_RCC_OscConfig+0x212>
 801026c:	f7fa fef4 	bl	800b058 <HAL_GetTick>
 8010270:	4602      	mov	r2, r0
 8010272:	693b      	ldr	r3, [r7, #16]
 8010274:	1ad3      	subs	r3, r2, r3
 8010276:	2b02      	cmp	r3, #2
 8010278:	d901      	bls.n	801027e <HAL_RCC_OscConfig+0x212>
 801027a:	2303      	movs	r3, #3
 801027c:	e167      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 801027e:	4b0b      	ldr	r3, [pc, #44]	@ (80102ac <HAL_RCC_OscConfig+0x240>)
 8010280:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010282:	f003 0302 	and.w	r3, r3, #2
 8010286:	2b00      	cmp	r3, #0
 8010288:	d0f0      	beq.n	801026c <HAL_RCC_OscConfig+0x200>
 801028a:	e01b      	b.n	80102c4 <HAL_RCC_OscConfig+0x258>
 801028c:	4b09      	ldr	r3, [pc, #36]	@ (80102b4 <HAL_RCC_OscConfig+0x248>)
 801028e:	2200      	movs	r2, #0
 8010290:	601a      	str	r2, [r3, #0]
 8010292:	f7fa fee1 	bl	800b058 <HAL_GetTick>
 8010296:	6138      	str	r0, [r7, #16]
 8010298:	e00e      	b.n	80102b8 <HAL_RCC_OscConfig+0x24c>
 801029a:	f7fa fedd 	bl	800b058 <HAL_GetTick>
 801029e:	4602      	mov	r2, r0
 80102a0:	693b      	ldr	r3, [r7, #16]
 80102a2:	1ad3      	subs	r3, r2, r3
 80102a4:	2b02      	cmp	r3, #2
 80102a6:	d907      	bls.n	80102b8 <HAL_RCC_OscConfig+0x24c>
 80102a8:	2303      	movs	r3, #3
 80102aa:	e150      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80102ac:	40023800 	.word	0x40023800
 80102b0:	42470000 	.word	0x42470000
 80102b4:	42470e80 	.word	0x42470e80
 80102b8:	4b88      	ldr	r3, [pc, #544]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80102ba:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80102bc:	f003 0302 	and.w	r3, r3, #2
 80102c0:	2b00      	cmp	r3, #0
 80102c2:	d1ea      	bne.n	801029a <HAL_RCC_OscConfig+0x22e>
 80102c4:	687b      	ldr	r3, [r7, #4]
 80102c6:	681b      	ldr	r3, [r3, #0]
 80102c8:	f003 0304 	and.w	r3, r3, #4
 80102cc:	2b00      	cmp	r3, #0
 80102ce:	f000 8097 	beq.w	8010400 <HAL_RCC_OscConfig+0x394>
 80102d2:	2300      	movs	r3, #0
 80102d4:	75fb      	strb	r3, [r7, #23]
 80102d6:	4b81      	ldr	r3, [pc, #516]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80102d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80102da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80102de:	2b00      	cmp	r3, #0
 80102e0:	d10f      	bne.n	8010302 <HAL_RCC_OscConfig+0x296>
 80102e2:	2300      	movs	r3, #0
 80102e4:	60bb      	str	r3, [r7, #8]
 80102e6:	4b7d      	ldr	r3, [pc, #500]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80102e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80102ea:	4a7c      	ldr	r2, [pc, #496]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80102ec:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80102f0:	6413      	str	r3, [r2, #64]	@ 0x40
 80102f2:	4b7a      	ldr	r3, [pc, #488]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80102f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80102f6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80102fa:	60bb      	str	r3, [r7, #8]
 80102fc:	68bb      	ldr	r3, [r7, #8]
 80102fe:	2301      	movs	r3, #1
 8010300:	75fb      	strb	r3, [r7, #23]
 8010302:	4b77      	ldr	r3, [pc, #476]	@ (80104e0 <HAL_RCC_OscConfig+0x474>)
 8010304:	681b      	ldr	r3, [r3, #0]
 8010306:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801030a:	2b00      	cmp	r3, #0
 801030c:	d118      	bne.n	8010340 <HAL_RCC_OscConfig+0x2d4>
 801030e:	4b74      	ldr	r3, [pc, #464]	@ (80104e0 <HAL_RCC_OscConfig+0x474>)
 8010310:	681b      	ldr	r3, [r3, #0]
 8010312:	4a73      	ldr	r2, [pc, #460]	@ (80104e0 <HAL_RCC_OscConfig+0x474>)
 8010314:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8010318:	6013      	str	r3, [r2, #0]
 801031a:	f7fa fe9d 	bl	800b058 <HAL_GetTick>
 801031e:	6138      	str	r0, [r7, #16]
 8010320:	e008      	b.n	8010334 <HAL_RCC_OscConfig+0x2c8>
 8010322:	f7fa fe99 	bl	800b058 <HAL_GetTick>
 8010326:	4602      	mov	r2, r0
 8010328:	693b      	ldr	r3, [r7, #16]
 801032a:	1ad3      	subs	r3, r2, r3
 801032c:	2b02      	cmp	r3, #2
 801032e:	d901      	bls.n	8010334 <HAL_RCC_OscConfig+0x2c8>
 8010330:	2303      	movs	r3, #3
 8010332:	e10c      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 8010334:	4b6a      	ldr	r3, [pc, #424]	@ (80104e0 <HAL_RCC_OscConfig+0x474>)
 8010336:	681b      	ldr	r3, [r3, #0]
 8010338:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801033c:	2b00      	cmp	r3, #0
 801033e:	d0f0      	beq.n	8010322 <HAL_RCC_OscConfig+0x2b6>
 8010340:	687b      	ldr	r3, [r7, #4]
 8010342:	689b      	ldr	r3, [r3, #8]
 8010344:	2b01      	cmp	r3, #1
 8010346:	d106      	bne.n	8010356 <HAL_RCC_OscConfig+0x2ea>
 8010348:	4b64      	ldr	r3, [pc, #400]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801034a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801034c:	4a63      	ldr	r2, [pc, #396]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801034e:	f043 0301 	orr.w	r3, r3, #1
 8010352:	6713      	str	r3, [r2, #112]	@ 0x70
 8010354:	e01c      	b.n	8010390 <HAL_RCC_OscConfig+0x324>
 8010356:	687b      	ldr	r3, [r7, #4]
 8010358:	689b      	ldr	r3, [r3, #8]
 801035a:	2b05      	cmp	r3, #5
 801035c:	d10c      	bne.n	8010378 <HAL_RCC_OscConfig+0x30c>
 801035e:	4b5f      	ldr	r3, [pc, #380]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010360:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010362:	4a5e      	ldr	r2, [pc, #376]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010364:	f043 0304 	orr.w	r3, r3, #4
 8010368:	6713      	str	r3, [r2, #112]	@ 0x70
 801036a:	4b5c      	ldr	r3, [pc, #368]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801036c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801036e:	4a5b      	ldr	r2, [pc, #364]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010370:	f043 0301 	orr.w	r3, r3, #1
 8010374:	6713      	str	r3, [r2, #112]	@ 0x70
 8010376:	e00b      	b.n	8010390 <HAL_RCC_OscConfig+0x324>
 8010378:	4b58      	ldr	r3, [pc, #352]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801037a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801037c:	4a57      	ldr	r2, [pc, #348]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801037e:	f023 0301 	bic.w	r3, r3, #1
 8010382:	6713      	str	r3, [r2, #112]	@ 0x70
 8010384:	4b55      	ldr	r3, [pc, #340]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010386:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010388:	4a54      	ldr	r2, [pc, #336]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801038a:	f023 0304 	bic.w	r3, r3, #4
 801038e:	6713      	str	r3, [r2, #112]	@ 0x70
 8010390:	687b      	ldr	r3, [r7, #4]
 8010392:	689b      	ldr	r3, [r3, #8]
 8010394:	2b00      	cmp	r3, #0
 8010396:	d015      	beq.n	80103c4 <HAL_RCC_OscConfig+0x358>
 8010398:	f7fa fe5e 	bl	800b058 <HAL_GetTick>
 801039c:	6138      	str	r0, [r7, #16]
 801039e:	e00a      	b.n	80103b6 <HAL_RCC_OscConfig+0x34a>
 80103a0:	f7fa fe5a 	bl	800b058 <HAL_GetTick>
 80103a4:	4602      	mov	r2, r0
 80103a6:	693b      	ldr	r3, [r7, #16]
 80103a8:	1ad3      	subs	r3, r2, r3
 80103aa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80103ae:	4293      	cmp	r3, r2
 80103b0:	d901      	bls.n	80103b6 <HAL_RCC_OscConfig+0x34a>
 80103b2:	2303      	movs	r3, #3
 80103b4:	e0cb      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80103b6:	4b49      	ldr	r3, [pc, #292]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80103b8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80103ba:	f003 0302 	and.w	r3, r3, #2
 80103be:	2b00      	cmp	r3, #0
 80103c0:	d0ee      	beq.n	80103a0 <HAL_RCC_OscConfig+0x334>
 80103c2:	e014      	b.n	80103ee <HAL_RCC_OscConfig+0x382>
 80103c4:	f7fa fe48 	bl	800b058 <HAL_GetTick>
 80103c8:	6138      	str	r0, [r7, #16]
 80103ca:	e00a      	b.n	80103e2 <HAL_RCC_OscConfig+0x376>
 80103cc:	f7fa fe44 	bl	800b058 <HAL_GetTick>
 80103d0:	4602      	mov	r2, r0
 80103d2:	693b      	ldr	r3, [r7, #16]
 80103d4:	1ad3      	subs	r3, r2, r3
 80103d6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80103da:	4293      	cmp	r3, r2
 80103dc:	d901      	bls.n	80103e2 <HAL_RCC_OscConfig+0x376>
 80103de:	2303      	movs	r3, #3
 80103e0:	e0b5      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80103e2:	4b3e      	ldr	r3, [pc, #248]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80103e4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80103e6:	f003 0302 	and.w	r3, r3, #2
 80103ea:	2b00      	cmp	r3, #0
 80103ec:	d1ee      	bne.n	80103cc <HAL_RCC_OscConfig+0x360>
 80103ee:	7dfb      	ldrb	r3, [r7, #23]
 80103f0:	2b01      	cmp	r3, #1
 80103f2:	d105      	bne.n	8010400 <HAL_RCC_OscConfig+0x394>
 80103f4:	4b39      	ldr	r3, [pc, #228]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80103f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80103f8:	4a38      	ldr	r2, [pc, #224]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80103fa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80103fe:	6413      	str	r3, [r2, #64]	@ 0x40
 8010400:	687b      	ldr	r3, [r7, #4]
 8010402:	699b      	ldr	r3, [r3, #24]
 8010404:	2b00      	cmp	r3, #0
 8010406:	f000 80a1 	beq.w	801054c <HAL_RCC_OscConfig+0x4e0>
 801040a:	4b34      	ldr	r3, [pc, #208]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 801040c:	689b      	ldr	r3, [r3, #8]
 801040e:	f003 030c 	and.w	r3, r3, #12
 8010412:	2b08      	cmp	r3, #8
 8010414:	d05c      	beq.n	80104d0 <HAL_RCC_OscConfig+0x464>
 8010416:	687b      	ldr	r3, [r7, #4]
 8010418:	699b      	ldr	r3, [r3, #24]
 801041a:	2b02      	cmp	r3, #2
 801041c:	d141      	bne.n	80104a2 <HAL_RCC_OscConfig+0x436>
 801041e:	4b31      	ldr	r3, [pc, #196]	@ (80104e4 <HAL_RCC_OscConfig+0x478>)
 8010420:	2200      	movs	r2, #0
 8010422:	601a      	str	r2, [r3, #0]
 8010424:	f7fa fe18 	bl	800b058 <HAL_GetTick>
 8010428:	6138      	str	r0, [r7, #16]
 801042a:	e008      	b.n	801043e <HAL_RCC_OscConfig+0x3d2>
 801042c:	f7fa fe14 	bl	800b058 <HAL_GetTick>
 8010430:	4602      	mov	r2, r0
 8010432:	693b      	ldr	r3, [r7, #16]
 8010434:	1ad3      	subs	r3, r2, r3
 8010436:	2b02      	cmp	r3, #2
 8010438:	d901      	bls.n	801043e <HAL_RCC_OscConfig+0x3d2>
 801043a:	2303      	movs	r3, #3
 801043c:	e087      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 801043e:	4b27      	ldr	r3, [pc, #156]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010440:	681b      	ldr	r3, [r3, #0]
 8010442:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8010446:	2b00      	cmp	r3, #0
 8010448:	d1f0      	bne.n	801042c <HAL_RCC_OscConfig+0x3c0>
 801044a:	687b      	ldr	r3, [r7, #4]
 801044c:	69da      	ldr	r2, [r3, #28]
 801044e:	687b      	ldr	r3, [r7, #4]
 8010450:	6a1b      	ldr	r3, [r3, #32]
 8010452:	431a      	orrs	r2, r3
 8010454:	687b      	ldr	r3, [r7, #4]
 8010456:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010458:	019b      	lsls	r3, r3, #6
 801045a:	431a      	orrs	r2, r3
 801045c:	687b      	ldr	r3, [r7, #4]
 801045e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010460:	085b      	lsrs	r3, r3, #1
 8010462:	3b01      	subs	r3, #1
 8010464:	041b      	lsls	r3, r3, #16
 8010466:	431a      	orrs	r2, r3
 8010468:	687b      	ldr	r3, [r7, #4]
 801046a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801046c:	061b      	lsls	r3, r3, #24
 801046e:	491b      	ldr	r1, [pc, #108]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010470:	4313      	orrs	r3, r2
 8010472:	604b      	str	r3, [r1, #4]
 8010474:	4b1b      	ldr	r3, [pc, #108]	@ (80104e4 <HAL_RCC_OscConfig+0x478>)
 8010476:	2201      	movs	r2, #1
 8010478:	601a      	str	r2, [r3, #0]
 801047a:	f7fa fded 	bl	800b058 <HAL_GetTick>
 801047e:	6138      	str	r0, [r7, #16]
 8010480:	e008      	b.n	8010494 <HAL_RCC_OscConfig+0x428>
 8010482:	f7fa fde9 	bl	800b058 <HAL_GetTick>
 8010486:	4602      	mov	r2, r0
 8010488:	693b      	ldr	r3, [r7, #16]
 801048a:	1ad3      	subs	r3, r2, r3
 801048c:	2b02      	cmp	r3, #2
 801048e:	d901      	bls.n	8010494 <HAL_RCC_OscConfig+0x428>
 8010490:	2303      	movs	r3, #3
 8010492:	e05c      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 8010494:	4b11      	ldr	r3, [pc, #68]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 8010496:	681b      	ldr	r3, [r3, #0]
 8010498:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 801049c:	2b00      	cmp	r3, #0
 801049e:	d0f0      	beq.n	8010482 <HAL_RCC_OscConfig+0x416>
 80104a0:	e054      	b.n	801054c <HAL_RCC_OscConfig+0x4e0>
 80104a2:	4b10      	ldr	r3, [pc, #64]	@ (80104e4 <HAL_RCC_OscConfig+0x478>)
 80104a4:	2200      	movs	r2, #0
 80104a6:	601a      	str	r2, [r3, #0]
 80104a8:	f7fa fdd6 	bl	800b058 <HAL_GetTick>
 80104ac:	6138      	str	r0, [r7, #16]
 80104ae:	e008      	b.n	80104c2 <HAL_RCC_OscConfig+0x456>
 80104b0:	f7fa fdd2 	bl	800b058 <HAL_GetTick>
 80104b4:	4602      	mov	r2, r0
 80104b6:	693b      	ldr	r3, [r7, #16]
 80104b8:	1ad3      	subs	r3, r2, r3
 80104ba:	2b02      	cmp	r3, #2
 80104bc:	d901      	bls.n	80104c2 <HAL_RCC_OscConfig+0x456>
 80104be:	2303      	movs	r3, #3
 80104c0:	e045      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80104c2:	4b06      	ldr	r3, [pc, #24]	@ (80104dc <HAL_RCC_OscConfig+0x470>)
 80104c4:	681b      	ldr	r3, [r3, #0]
 80104c6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80104ca:	2b00      	cmp	r3, #0
 80104cc:	d1f0      	bne.n	80104b0 <HAL_RCC_OscConfig+0x444>
 80104ce:	e03d      	b.n	801054c <HAL_RCC_OscConfig+0x4e0>
 80104d0:	687b      	ldr	r3, [r7, #4]
 80104d2:	699b      	ldr	r3, [r3, #24]
 80104d4:	2b01      	cmp	r3, #1
 80104d6:	d107      	bne.n	80104e8 <HAL_RCC_OscConfig+0x47c>
 80104d8:	2301      	movs	r3, #1
 80104da:	e038      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 80104dc:	40023800 	.word	0x40023800
 80104e0:	40007000 	.word	0x40007000
 80104e4:	42470060 	.word	0x42470060
 80104e8:	4b1b      	ldr	r3, [pc, #108]	@ (8010558 <HAL_RCC_OscConfig+0x4ec>)
 80104ea:	685b      	ldr	r3, [r3, #4]
 80104ec:	60fb      	str	r3, [r7, #12]
 80104ee:	687b      	ldr	r3, [r7, #4]
 80104f0:	699b      	ldr	r3, [r3, #24]
 80104f2:	2b01      	cmp	r3, #1
 80104f4:	d028      	beq.n	8010548 <HAL_RCC_OscConfig+0x4dc>
 80104f6:	68fb      	ldr	r3, [r7, #12]
 80104f8:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80104fc:	687b      	ldr	r3, [r7, #4]
 80104fe:	69db      	ldr	r3, [r3, #28]
 8010500:	429a      	cmp	r2, r3
 8010502:	d121      	bne.n	8010548 <HAL_RCC_OscConfig+0x4dc>
 8010504:	68fb      	ldr	r3, [r7, #12]
 8010506:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 801050a:	687b      	ldr	r3, [r7, #4]
 801050c:	6a1b      	ldr	r3, [r3, #32]
 801050e:	429a      	cmp	r2, r3
 8010510:	d11a      	bne.n	8010548 <HAL_RCC_OscConfig+0x4dc>
 8010512:	68fa      	ldr	r2, [r7, #12]
 8010514:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8010518:	4013      	ands	r3, r2
 801051a:	687a      	ldr	r2, [r7, #4]
 801051c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801051e:	0192      	lsls	r2, r2, #6
 8010520:	4293      	cmp	r3, r2
 8010522:	d111      	bne.n	8010548 <HAL_RCC_OscConfig+0x4dc>
 8010524:	68fb      	ldr	r3, [r7, #12]
 8010526:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 801052a:	687b      	ldr	r3, [r7, #4]
 801052c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801052e:	085b      	lsrs	r3, r3, #1
 8010530:	3b01      	subs	r3, #1
 8010532:	041b      	lsls	r3, r3, #16
 8010534:	429a      	cmp	r2, r3
 8010536:	d107      	bne.n	8010548 <HAL_RCC_OscConfig+0x4dc>
 8010538:	68fb      	ldr	r3, [r7, #12]
 801053a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 801053e:	687b      	ldr	r3, [r7, #4]
 8010540:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010542:	061b      	lsls	r3, r3, #24
 8010544:	429a      	cmp	r2, r3
 8010546:	d001      	beq.n	801054c <HAL_RCC_OscConfig+0x4e0>
 8010548:	2301      	movs	r3, #1
 801054a:	e000      	b.n	801054e <HAL_RCC_OscConfig+0x4e2>
 801054c:	2300      	movs	r3, #0
 801054e:	4618      	mov	r0, r3
 8010550:	3718      	adds	r7, #24
 8010552:	46bd      	mov	sp, r7
 8010554:	bd80      	pop	{r7, pc}
 8010556:	bf00      	nop
 8010558:	40023800 	.word	0x40023800

0801055c <HAL_RCC_ClockConfig>:
 801055c:	b580      	push	{r7, lr}
 801055e:	b084      	sub	sp, #16
 8010560:	af00      	add	r7, sp, #0
 8010562:	6078      	str	r0, [r7, #4]
 8010564:	6039      	str	r1, [r7, #0]
 8010566:	687b      	ldr	r3, [r7, #4]
 8010568:	2b00      	cmp	r3, #0
 801056a:	d101      	bne.n	8010570 <HAL_RCC_ClockConfig+0x14>
 801056c:	2301      	movs	r3, #1
 801056e:	e0cc      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 8010570:	4b68      	ldr	r3, [pc, #416]	@ (8010714 <HAL_RCC_ClockConfig+0x1b8>)
 8010572:	681b      	ldr	r3, [r3, #0]
 8010574:	f003 0307 	and.w	r3, r3, #7
 8010578:	683a      	ldr	r2, [r7, #0]
 801057a:	429a      	cmp	r2, r3
 801057c:	d90c      	bls.n	8010598 <HAL_RCC_ClockConfig+0x3c>
 801057e:	4b65      	ldr	r3, [pc, #404]	@ (8010714 <HAL_RCC_ClockConfig+0x1b8>)
 8010580:	683a      	ldr	r2, [r7, #0]
 8010582:	b2d2      	uxtb	r2, r2
 8010584:	701a      	strb	r2, [r3, #0]
 8010586:	4b63      	ldr	r3, [pc, #396]	@ (8010714 <HAL_RCC_ClockConfig+0x1b8>)
 8010588:	681b      	ldr	r3, [r3, #0]
 801058a:	f003 0307 	and.w	r3, r3, #7
 801058e:	683a      	ldr	r2, [r7, #0]
 8010590:	429a      	cmp	r2, r3
 8010592:	d001      	beq.n	8010598 <HAL_RCC_ClockConfig+0x3c>
 8010594:	2301      	movs	r3, #1
 8010596:	e0b8      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 8010598:	687b      	ldr	r3, [r7, #4]
 801059a:	681b      	ldr	r3, [r3, #0]
 801059c:	f003 0302 	and.w	r3, r3, #2
 80105a0:	2b00      	cmp	r3, #0
 80105a2:	d020      	beq.n	80105e6 <HAL_RCC_ClockConfig+0x8a>
 80105a4:	687b      	ldr	r3, [r7, #4]
 80105a6:	681b      	ldr	r3, [r3, #0]
 80105a8:	f003 0304 	and.w	r3, r3, #4
 80105ac:	2b00      	cmp	r3, #0
 80105ae:	d005      	beq.n	80105bc <HAL_RCC_ClockConfig+0x60>
 80105b0:	4b59      	ldr	r3, [pc, #356]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105b2:	689b      	ldr	r3, [r3, #8]
 80105b4:	4a58      	ldr	r2, [pc, #352]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105b6:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80105ba:	6093      	str	r3, [r2, #8]
 80105bc:	687b      	ldr	r3, [r7, #4]
 80105be:	681b      	ldr	r3, [r3, #0]
 80105c0:	f003 0308 	and.w	r3, r3, #8
 80105c4:	2b00      	cmp	r3, #0
 80105c6:	d005      	beq.n	80105d4 <HAL_RCC_ClockConfig+0x78>
 80105c8:	4b53      	ldr	r3, [pc, #332]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105ca:	689b      	ldr	r3, [r3, #8]
 80105cc:	4a52      	ldr	r2, [pc, #328]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105ce:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80105d2:	6093      	str	r3, [r2, #8]
 80105d4:	4b50      	ldr	r3, [pc, #320]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105d6:	689b      	ldr	r3, [r3, #8]
 80105d8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80105dc:	687b      	ldr	r3, [r7, #4]
 80105de:	689b      	ldr	r3, [r3, #8]
 80105e0:	494d      	ldr	r1, [pc, #308]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105e2:	4313      	orrs	r3, r2
 80105e4:	608b      	str	r3, [r1, #8]
 80105e6:	687b      	ldr	r3, [r7, #4]
 80105e8:	681b      	ldr	r3, [r3, #0]
 80105ea:	f003 0301 	and.w	r3, r3, #1
 80105ee:	2b00      	cmp	r3, #0
 80105f0:	d044      	beq.n	801067c <HAL_RCC_ClockConfig+0x120>
 80105f2:	687b      	ldr	r3, [r7, #4]
 80105f4:	685b      	ldr	r3, [r3, #4]
 80105f6:	2b01      	cmp	r3, #1
 80105f8:	d107      	bne.n	801060a <HAL_RCC_ClockConfig+0xae>
 80105fa:	4b47      	ldr	r3, [pc, #284]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80105fc:	681b      	ldr	r3, [r3, #0]
 80105fe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8010602:	2b00      	cmp	r3, #0
 8010604:	d119      	bne.n	801063a <HAL_RCC_ClockConfig+0xde>
 8010606:	2301      	movs	r3, #1
 8010608:	e07f      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 801060a:	687b      	ldr	r3, [r7, #4]
 801060c:	685b      	ldr	r3, [r3, #4]
 801060e:	2b02      	cmp	r3, #2
 8010610:	d003      	beq.n	801061a <HAL_RCC_ClockConfig+0xbe>
 8010612:	687b      	ldr	r3, [r7, #4]
 8010614:	685b      	ldr	r3, [r3, #4]
 8010616:	2b03      	cmp	r3, #3
 8010618:	d107      	bne.n	801062a <HAL_RCC_ClockConfig+0xce>
 801061a:	4b3f      	ldr	r3, [pc, #252]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 801061c:	681b      	ldr	r3, [r3, #0]
 801061e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8010622:	2b00      	cmp	r3, #0
 8010624:	d109      	bne.n	801063a <HAL_RCC_ClockConfig+0xde>
 8010626:	2301      	movs	r3, #1
 8010628:	e06f      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 801062a:	4b3b      	ldr	r3, [pc, #236]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 801062c:	681b      	ldr	r3, [r3, #0]
 801062e:	f003 0302 	and.w	r3, r3, #2
 8010632:	2b00      	cmp	r3, #0
 8010634:	d101      	bne.n	801063a <HAL_RCC_ClockConfig+0xde>
 8010636:	2301      	movs	r3, #1
 8010638:	e067      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 801063a:	4b37      	ldr	r3, [pc, #220]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 801063c:	689b      	ldr	r3, [r3, #8]
 801063e:	f023 0203 	bic.w	r2, r3, #3
 8010642:	687b      	ldr	r3, [r7, #4]
 8010644:	685b      	ldr	r3, [r3, #4]
 8010646:	4934      	ldr	r1, [pc, #208]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 8010648:	4313      	orrs	r3, r2
 801064a:	608b      	str	r3, [r1, #8]
 801064c:	f7fa fd04 	bl	800b058 <HAL_GetTick>
 8010650:	60f8      	str	r0, [r7, #12]
 8010652:	e00a      	b.n	801066a <HAL_RCC_ClockConfig+0x10e>
 8010654:	f7fa fd00 	bl	800b058 <HAL_GetTick>
 8010658:	4602      	mov	r2, r0
 801065a:	68fb      	ldr	r3, [r7, #12]
 801065c:	1ad3      	subs	r3, r2, r3
 801065e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8010662:	4293      	cmp	r3, r2
 8010664:	d901      	bls.n	801066a <HAL_RCC_ClockConfig+0x10e>
 8010666:	2303      	movs	r3, #3
 8010668:	e04f      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 801066a:	4b2b      	ldr	r3, [pc, #172]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 801066c:	689b      	ldr	r3, [r3, #8]
 801066e:	f003 020c 	and.w	r2, r3, #12
 8010672:	687b      	ldr	r3, [r7, #4]
 8010674:	685b      	ldr	r3, [r3, #4]
 8010676:	009b      	lsls	r3, r3, #2
 8010678:	429a      	cmp	r2, r3
 801067a:	d1eb      	bne.n	8010654 <HAL_RCC_ClockConfig+0xf8>
 801067c:	4b25      	ldr	r3, [pc, #148]	@ (8010714 <HAL_RCC_ClockConfig+0x1b8>)
 801067e:	681b      	ldr	r3, [r3, #0]
 8010680:	f003 0307 	and.w	r3, r3, #7
 8010684:	683a      	ldr	r2, [r7, #0]
 8010686:	429a      	cmp	r2, r3
 8010688:	d20c      	bcs.n	80106a4 <HAL_RCC_ClockConfig+0x148>
 801068a:	4b22      	ldr	r3, [pc, #136]	@ (8010714 <HAL_RCC_ClockConfig+0x1b8>)
 801068c:	683a      	ldr	r2, [r7, #0]
 801068e:	b2d2      	uxtb	r2, r2
 8010690:	701a      	strb	r2, [r3, #0]
 8010692:	4b20      	ldr	r3, [pc, #128]	@ (8010714 <HAL_RCC_ClockConfig+0x1b8>)
 8010694:	681b      	ldr	r3, [r3, #0]
 8010696:	f003 0307 	and.w	r3, r3, #7
 801069a:	683a      	ldr	r2, [r7, #0]
 801069c:	429a      	cmp	r2, r3
 801069e:	d001      	beq.n	80106a4 <HAL_RCC_ClockConfig+0x148>
 80106a0:	2301      	movs	r3, #1
 80106a2:	e032      	b.n	801070a <HAL_RCC_ClockConfig+0x1ae>
 80106a4:	687b      	ldr	r3, [r7, #4]
 80106a6:	681b      	ldr	r3, [r3, #0]
 80106a8:	f003 0304 	and.w	r3, r3, #4
 80106ac:	2b00      	cmp	r3, #0
 80106ae:	d008      	beq.n	80106c2 <HAL_RCC_ClockConfig+0x166>
 80106b0:	4b19      	ldr	r3, [pc, #100]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80106b2:	689b      	ldr	r3, [r3, #8]
 80106b4:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80106b8:	687b      	ldr	r3, [r7, #4]
 80106ba:	68db      	ldr	r3, [r3, #12]
 80106bc:	4916      	ldr	r1, [pc, #88]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80106be:	4313      	orrs	r3, r2
 80106c0:	608b      	str	r3, [r1, #8]
 80106c2:	687b      	ldr	r3, [r7, #4]
 80106c4:	681b      	ldr	r3, [r3, #0]
 80106c6:	f003 0308 	and.w	r3, r3, #8
 80106ca:	2b00      	cmp	r3, #0
 80106cc:	d009      	beq.n	80106e2 <HAL_RCC_ClockConfig+0x186>
 80106ce:	4b12      	ldr	r3, [pc, #72]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80106d0:	689b      	ldr	r3, [r3, #8]
 80106d2:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80106d6:	687b      	ldr	r3, [r7, #4]
 80106d8:	691b      	ldr	r3, [r3, #16]
 80106da:	00db      	lsls	r3, r3, #3
 80106dc:	490e      	ldr	r1, [pc, #56]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80106de:	4313      	orrs	r3, r2
 80106e0:	608b      	str	r3, [r1, #8]
 80106e2:	f000 f821 	bl	8010728 <HAL_RCC_GetSysClockFreq>
 80106e6:	4602      	mov	r2, r0
 80106e8:	4b0b      	ldr	r3, [pc, #44]	@ (8010718 <HAL_RCC_ClockConfig+0x1bc>)
 80106ea:	689b      	ldr	r3, [r3, #8]
 80106ec:	091b      	lsrs	r3, r3, #4
 80106ee:	f003 030f 	and.w	r3, r3, #15
 80106f2:	490a      	ldr	r1, [pc, #40]	@ (801071c <HAL_RCC_ClockConfig+0x1c0>)
 80106f4:	5ccb      	ldrb	r3, [r1, r3]
 80106f6:	fa22 f303 	lsr.w	r3, r2, r3
 80106fa:	4a09      	ldr	r2, [pc, #36]	@ (8010720 <HAL_RCC_ClockConfig+0x1c4>)
 80106fc:	6013      	str	r3, [r2, #0]
 80106fe:	4b09      	ldr	r3, [pc, #36]	@ (8010724 <HAL_RCC_ClockConfig+0x1c8>)
 8010700:	681b      	ldr	r3, [r3, #0]
 8010702:	4618      	mov	r0, r3
 8010704:	f7f3 f9e2 	bl	8003acc <HAL_InitTick>
 8010708:	2300      	movs	r3, #0
 801070a:	4618      	mov	r0, r3
 801070c:	3710      	adds	r7, #16
 801070e:	46bd      	mov	sp, r7
 8010710:	bd80      	pop	{r7, pc}
 8010712:	bf00      	nop
 8010714:	40023c00 	.word	0x40023c00
 8010718:	40023800 	.word	0x40023800
 801071c:	08021324 	.word	0x08021324
 8010720:	20000004 	.word	0x20000004
 8010724:	20000018 	.word	0x20000018

08010728 <HAL_RCC_GetSysClockFreq>:
 8010728:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801072c:	b090      	sub	sp, #64	@ 0x40
 801072e:	af00      	add	r7, sp, #0
 8010730:	2300      	movs	r3, #0
 8010732:	637b      	str	r3, [r7, #52]	@ 0x34
 8010734:	2300      	movs	r3, #0
 8010736:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010738:	2300      	movs	r3, #0
 801073a:	633b      	str	r3, [r7, #48]	@ 0x30
 801073c:	2300      	movs	r3, #0
 801073e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010740:	4b59      	ldr	r3, [pc, #356]	@ (80108a8 <HAL_RCC_GetSysClockFreq+0x180>)
 8010742:	689b      	ldr	r3, [r3, #8]
 8010744:	f003 030c 	and.w	r3, r3, #12
 8010748:	2b08      	cmp	r3, #8
 801074a:	d00d      	beq.n	8010768 <HAL_RCC_GetSysClockFreq+0x40>
 801074c:	2b08      	cmp	r3, #8
 801074e:	f200 80a1 	bhi.w	8010894 <HAL_RCC_GetSysClockFreq+0x16c>
 8010752:	2b00      	cmp	r3, #0
 8010754:	d002      	beq.n	801075c <HAL_RCC_GetSysClockFreq+0x34>
 8010756:	2b04      	cmp	r3, #4
 8010758:	d003      	beq.n	8010762 <HAL_RCC_GetSysClockFreq+0x3a>
 801075a:	e09b      	b.n	8010894 <HAL_RCC_GetSysClockFreq+0x16c>
 801075c:	4b53      	ldr	r3, [pc, #332]	@ (80108ac <HAL_RCC_GetSysClockFreq+0x184>)
 801075e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010760:	e09b      	b.n	801089a <HAL_RCC_GetSysClockFreq+0x172>
 8010762:	4b53      	ldr	r3, [pc, #332]	@ (80108b0 <HAL_RCC_GetSysClockFreq+0x188>)
 8010764:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010766:	e098      	b.n	801089a <HAL_RCC_GetSysClockFreq+0x172>
 8010768:	4b4f      	ldr	r3, [pc, #316]	@ (80108a8 <HAL_RCC_GetSysClockFreq+0x180>)
 801076a:	685b      	ldr	r3, [r3, #4]
 801076c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8010770:	637b      	str	r3, [r7, #52]	@ 0x34
 8010772:	4b4d      	ldr	r3, [pc, #308]	@ (80108a8 <HAL_RCC_GetSysClockFreq+0x180>)
 8010774:	685b      	ldr	r3, [r3, #4]
 8010776:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 801077a:	2b00      	cmp	r3, #0
 801077c:	d028      	beq.n	80107d0 <HAL_RCC_GetSysClockFreq+0xa8>
 801077e:	4b4a      	ldr	r3, [pc, #296]	@ (80108a8 <HAL_RCC_GetSysClockFreq+0x180>)
 8010780:	685b      	ldr	r3, [r3, #4]
 8010782:	099b      	lsrs	r3, r3, #6
 8010784:	2200      	movs	r2, #0
 8010786:	623b      	str	r3, [r7, #32]
 8010788:	627a      	str	r2, [r7, #36]	@ 0x24
 801078a:	6a3b      	ldr	r3, [r7, #32]
 801078c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8010790:	2100      	movs	r1, #0
 8010792:	4b47      	ldr	r3, [pc, #284]	@ (80108b0 <HAL_RCC_GetSysClockFreq+0x188>)
 8010794:	fb03 f201 	mul.w	r2, r3, r1
 8010798:	2300      	movs	r3, #0
 801079a:	fb00 f303 	mul.w	r3, r0, r3
 801079e:	4413      	add	r3, r2
 80107a0:	4a43      	ldr	r2, [pc, #268]	@ (80108b0 <HAL_RCC_GetSysClockFreq+0x188>)
 80107a2:	fba0 1202 	umull	r1, r2, r0, r2
 80107a6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80107a8:	460a      	mov	r2, r1
 80107aa:	62ba      	str	r2, [r7, #40]	@ 0x28
 80107ac:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80107ae:	4413      	add	r3, r2
 80107b0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80107b2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80107b4:	2200      	movs	r2, #0
 80107b6:	61bb      	str	r3, [r7, #24]
 80107b8:	61fa      	str	r2, [r7, #28]
 80107ba:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80107be:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80107c2:	f7f0 fa61 	bl	8000c88 <__aeabi_uldivmod>
 80107c6:	4602      	mov	r2, r0
 80107c8:	460b      	mov	r3, r1
 80107ca:	4613      	mov	r3, r2
 80107cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80107ce:	e053      	b.n	8010878 <HAL_RCC_GetSysClockFreq+0x150>
 80107d0:	4b35      	ldr	r3, [pc, #212]	@ (80108a8 <HAL_RCC_GetSysClockFreq+0x180>)
 80107d2:	685b      	ldr	r3, [r3, #4]
 80107d4:	099b      	lsrs	r3, r3, #6
 80107d6:	2200      	movs	r2, #0
 80107d8:	613b      	str	r3, [r7, #16]
 80107da:	617a      	str	r2, [r7, #20]
 80107dc:	693b      	ldr	r3, [r7, #16]
 80107de:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80107e2:	f04f 0b00 	mov.w	fp, #0
 80107e6:	4652      	mov	r2, sl
 80107e8:	465b      	mov	r3, fp
 80107ea:	f04f 0000 	mov.w	r0, #0
 80107ee:	f04f 0100 	mov.w	r1, #0
 80107f2:	0159      	lsls	r1, r3, #5
 80107f4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80107f8:	0150      	lsls	r0, r2, #5
 80107fa:	4602      	mov	r2, r0
 80107fc:	460b      	mov	r3, r1
 80107fe:	ebb2 080a 	subs.w	r8, r2, sl
 8010802:	eb63 090b 	sbc.w	r9, r3, fp
 8010806:	f04f 0200 	mov.w	r2, #0
 801080a:	f04f 0300 	mov.w	r3, #0
 801080e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8010812:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8010816:	ea4f 1288 	mov.w	r2, r8, lsl #6
 801081a:	ebb2 0408 	subs.w	r4, r2, r8
 801081e:	eb63 0509 	sbc.w	r5, r3, r9
 8010822:	f04f 0200 	mov.w	r2, #0
 8010826:	f04f 0300 	mov.w	r3, #0
 801082a:	00eb      	lsls	r3, r5, #3
 801082c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8010830:	00e2      	lsls	r2, r4, #3
 8010832:	4614      	mov	r4, r2
 8010834:	461d      	mov	r5, r3
 8010836:	eb14 030a 	adds.w	r3, r4, sl
 801083a:	603b      	str	r3, [r7, #0]
 801083c:	eb45 030b 	adc.w	r3, r5, fp
 8010840:	607b      	str	r3, [r7, #4]
 8010842:	f04f 0200 	mov.w	r2, #0
 8010846:	f04f 0300 	mov.w	r3, #0
 801084a:	e9d7 4500 	ldrd	r4, r5, [r7]
 801084e:	4629      	mov	r1, r5
 8010850:	028b      	lsls	r3, r1, #10
 8010852:	4621      	mov	r1, r4
 8010854:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8010858:	4621      	mov	r1, r4
 801085a:	028a      	lsls	r2, r1, #10
 801085c:	4610      	mov	r0, r2
 801085e:	4619      	mov	r1, r3
 8010860:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8010862:	2200      	movs	r2, #0
 8010864:	60bb      	str	r3, [r7, #8]
 8010866:	60fa      	str	r2, [r7, #12]
 8010868:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 801086c:	f7f0 fa0c 	bl	8000c88 <__aeabi_uldivmod>
 8010870:	4602      	mov	r2, r0
 8010872:	460b      	mov	r3, r1
 8010874:	4613      	mov	r3, r2
 8010876:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8010878:	4b0b      	ldr	r3, [pc, #44]	@ (80108a8 <HAL_RCC_GetSysClockFreq+0x180>)
 801087a:	685b      	ldr	r3, [r3, #4]
 801087c:	0c1b      	lsrs	r3, r3, #16
 801087e:	f003 0303 	and.w	r3, r3, #3
 8010882:	3301      	adds	r3, #1
 8010884:	005b      	lsls	r3, r3, #1
 8010886:	633b      	str	r3, [r7, #48]	@ 0x30
 8010888:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 801088a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801088c:	fbb2 f3f3 	udiv	r3, r2, r3
 8010890:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010892:	e002      	b.n	801089a <HAL_RCC_GetSysClockFreq+0x172>
 8010894:	4b05      	ldr	r3, [pc, #20]	@ (80108ac <HAL_RCC_GetSysClockFreq+0x184>)
 8010896:	63bb      	str	r3, [r7, #56]	@ 0x38
 8010898:	bf00      	nop
 801089a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801089c:	4618      	mov	r0, r3
 801089e:	3740      	adds	r7, #64	@ 0x40
 80108a0:	46bd      	mov	sp, r7
 80108a2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80108a6:	bf00      	nop
 80108a8:	40023800 	.word	0x40023800
 80108ac:	00f42400 	.word	0x00f42400
 80108b0:	00b71b00 	.word	0x00b71b00

080108b4 <HAL_RCC_GetHCLKFreq>:
 80108b4:	b480      	push	{r7}
 80108b6:	af00      	add	r7, sp, #0
 80108b8:	4b03      	ldr	r3, [pc, #12]	@ (80108c8 <HAL_RCC_GetHCLKFreq+0x14>)
 80108ba:	681b      	ldr	r3, [r3, #0]
 80108bc:	4618      	mov	r0, r3
 80108be:	46bd      	mov	sp, r7
 80108c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108c4:	4770      	bx	lr
 80108c6:	bf00      	nop
 80108c8:	20000004 	.word	0x20000004

080108cc <HAL_RCC_GetPCLK1Freq>:
 80108cc:	b580      	push	{r7, lr}
 80108ce:	af00      	add	r7, sp, #0
 80108d0:	f7ff fff0 	bl	80108b4 <HAL_RCC_GetHCLKFreq>
 80108d4:	4602      	mov	r2, r0
 80108d6:	4b05      	ldr	r3, [pc, #20]	@ (80108ec <HAL_RCC_GetPCLK1Freq+0x20>)
 80108d8:	689b      	ldr	r3, [r3, #8]
 80108da:	0a9b      	lsrs	r3, r3, #10
 80108dc:	f003 0307 	and.w	r3, r3, #7
 80108e0:	4903      	ldr	r1, [pc, #12]	@ (80108f0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80108e2:	5ccb      	ldrb	r3, [r1, r3]
 80108e4:	fa22 f303 	lsr.w	r3, r2, r3
 80108e8:	4618      	mov	r0, r3
 80108ea:	bd80      	pop	{r7, pc}
 80108ec:	40023800 	.word	0x40023800
 80108f0:	08021334 	.word	0x08021334

080108f4 <HAL_RCC_GetPCLK2Freq>:
 80108f4:	b580      	push	{r7, lr}
 80108f6:	af00      	add	r7, sp, #0
 80108f8:	f7ff ffdc 	bl	80108b4 <HAL_RCC_GetHCLKFreq>
 80108fc:	4602      	mov	r2, r0
 80108fe:	4b05      	ldr	r3, [pc, #20]	@ (8010914 <HAL_RCC_GetPCLK2Freq+0x20>)
 8010900:	689b      	ldr	r3, [r3, #8]
 8010902:	0b5b      	lsrs	r3, r3, #13
 8010904:	f003 0307 	and.w	r3, r3, #7
 8010908:	4903      	ldr	r1, [pc, #12]	@ (8010918 <HAL_RCC_GetPCLK2Freq+0x24>)
 801090a:	5ccb      	ldrb	r3, [r1, r3]
 801090c:	fa22 f303 	lsr.w	r3, r2, r3
 8010910:	4618      	mov	r0, r3
 8010912:	bd80      	pop	{r7, pc}
 8010914:	40023800 	.word	0x40023800
 8010918:	08021334 	.word	0x08021334

0801091c <HAL_RCC_GetClockConfig>:
 801091c:	b480      	push	{r7}
 801091e:	b083      	sub	sp, #12
 8010920:	af00      	add	r7, sp, #0
 8010922:	6078      	str	r0, [r7, #4]
 8010924:	6039      	str	r1, [r7, #0]
 8010926:	687b      	ldr	r3, [r7, #4]
 8010928:	220f      	movs	r2, #15
 801092a:	601a      	str	r2, [r3, #0]
 801092c:	4b12      	ldr	r3, [pc, #72]	@ (8010978 <HAL_RCC_GetClockConfig+0x5c>)
 801092e:	689b      	ldr	r3, [r3, #8]
 8010930:	f003 0203 	and.w	r2, r3, #3
 8010934:	687b      	ldr	r3, [r7, #4]
 8010936:	605a      	str	r2, [r3, #4]
 8010938:	4b0f      	ldr	r3, [pc, #60]	@ (8010978 <HAL_RCC_GetClockConfig+0x5c>)
 801093a:	689b      	ldr	r3, [r3, #8]
 801093c:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 8010940:	687b      	ldr	r3, [r7, #4]
 8010942:	609a      	str	r2, [r3, #8]
 8010944:	4b0c      	ldr	r3, [pc, #48]	@ (8010978 <HAL_RCC_GetClockConfig+0x5c>)
 8010946:	689b      	ldr	r3, [r3, #8]
 8010948:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 801094c:	687b      	ldr	r3, [r7, #4]
 801094e:	60da      	str	r2, [r3, #12]
 8010950:	4b09      	ldr	r3, [pc, #36]	@ (8010978 <HAL_RCC_GetClockConfig+0x5c>)
 8010952:	689b      	ldr	r3, [r3, #8]
 8010954:	08db      	lsrs	r3, r3, #3
 8010956:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 801095a:	687b      	ldr	r3, [r7, #4]
 801095c:	611a      	str	r2, [r3, #16]
 801095e:	4b07      	ldr	r3, [pc, #28]	@ (801097c <HAL_RCC_GetClockConfig+0x60>)
 8010960:	681b      	ldr	r3, [r3, #0]
 8010962:	f003 0207 	and.w	r2, r3, #7
 8010966:	683b      	ldr	r3, [r7, #0]
 8010968:	601a      	str	r2, [r3, #0]
 801096a:	bf00      	nop
 801096c:	370c      	adds	r7, #12
 801096e:	46bd      	mov	sp, r7
 8010970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010974:	4770      	bx	lr
 8010976:	bf00      	nop
 8010978:	40023800 	.word	0x40023800
 801097c:	40023c00 	.word	0x40023c00

08010980 <HAL_RNG_Init>:
 8010980:	b580      	push	{r7, lr}
 8010982:	b082      	sub	sp, #8
 8010984:	af00      	add	r7, sp, #0
 8010986:	6078      	str	r0, [r7, #4]
 8010988:	687b      	ldr	r3, [r7, #4]
 801098a:	2b00      	cmp	r3, #0
 801098c:	d101      	bne.n	8010992 <HAL_RNG_Init+0x12>
 801098e:	2301      	movs	r3, #1
 8010990:	e01c      	b.n	80109cc <HAL_RNG_Init+0x4c>
 8010992:	687b      	ldr	r3, [r7, #4]
 8010994:	795b      	ldrb	r3, [r3, #5]
 8010996:	b2db      	uxtb	r3, r3
 8010998:	2b00      	cmp	r3, #0
 801099a:	d105      	bne.n	80109a8 <HAL_RNG_Init+0x28>
 801099c:	687b      	ldr	r3, [r7, #4]
 801099e:	2200      	movs	r2, #0
 80109a0:	711a      	strb	r2, [r3, #4]
 80109a2:	6878      	ldr	r0, [r7, #4]
 80109a4:	f7f2 ff42 	bl	800382c <HAL_RNG_MspInit>
 80109a8:	687b      	ldr	r3, [r7, #4]
 80109aa:	2202      	movs	r2, #2
 80109ac:	715a      	strb	r2, [r3, #5]
 80109ae:	687b      	ldr	r3, [r7, #4]
 80109b0:	681b      	ldr	r3, [r3, #0]
 80109b2:	681a      	ldr	r2, [r3, #0]
 80109b4:	687b      	ldr	r3, [r7, #4]
 80109b6:	681b      	ldr	r3, [r3, #0]
 80109b8:	f042 0204 	orr.w	r2, r2, #4
 80109bc:	601a      	str	r2, [r3, #0]
 80109be:	687b      	ldr	r3, [r7, #4]
 80109c0:	2201      	movs	r2, #1
 80109c2:	715a      	strb	r2, [r3, #5]
 80109c4:	687b      	ldr	r3, [r7, #4]
 80109c6:	2200      	movs	r2, #0
 80109c8:	609a      	str	r2, [r3, #8]
 80109ca:	2300      	movs	r3, #0
 80109cc:	4618      	mov	r0, r3
 80109ce:	3708      	adds	r7, #8
 80109d0:	46bd      	mov	sp, r7
 80109d2:	bd80      	pop	{r7, pc}

080109d4 <HAL_SPI_Init>:
 80109d4:	b580      	push	{r7, lr}
 80109d6:	b082      	sub	sp, #8
 80109d8:	af00      	add	r7, sp, #0
 80109da:	6078      	str	r0, [r7, #4]
 80109dc:	687b      	ldr	r3, [r7, #4]
 80109de:	2b00      	cmp	r3, #0
 80109e0:	d101      	bne.n	80109e6 <HAL_SPI_Init+0x12>
 80109e2:	2301      	movs	r3, #1
 80109e4:	e07b      	b.n	8010ade <HAL_SPI_Init+0x10a>
 80109e6:	687b      	ldr	r3, [r7, #4]
 80109e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80109ea:	2b00      	cmp	r3, #0
 80109ec:	d108      	bne.n	8010a00 <HAL_SPI_Init+0x2c>
 80109ee:	687b      	ldr	r3, [r7, #4]
 80109f0:	685b      	ldr	r3, [r3, #4]
 80109f2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80109f6:	d009      	beq.n	8010a0c <HAL_SPI_Init+0x38>
 80109f8:	687b      	ldr	r3, [r7, #4]
 80109fa:	2200      	movs	r2, #0
 80109fc:	61da      	str	r2, [r3, #28]
 80109fe:	e005      	b.n	8010a0c <HAL_SPI_Init+0x38>
 8010a00:	687b      	ldr	r3, [r7, #4]
 8010a02:	2200      	movs	r2, #0
 8010a04:	611a      	str	r2, [r3, #16]
 8010a06:	687b      	ldr	r3, [r7, #4]
 8010a08:	2200      	movs	r2, #0
 8010a0a:	615a      	str	r2, [r3, #20]
 8010a0c:	687b      	ldr	r3, [r7, #4]
 8010a0e:	2200      	movs	r2, #0
 8010a10:	629a      	str	r2, [r3, #40]	@ 0x28
 8010a12:	687b      	ldr	r3, [r7, #4]
 8010a14:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010a18:	b2db      	uxtb	r3, r3
 8010a1a:	2b00      	cmp	r3, #0
 8010a1c:	d106      	bne.n	8010a2c <HAL_SPI_Init+0x58>
 8010a1e:	687b      	ldr	r3, [r7, #4]
 8010a20:	2200      	movs	r2, #0
 8010a22:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010a26:	6878      	ldr	r0, [r7, #4]
 8010a28:	f7f2 ff58 	bl	80038dc <HAL_SPI_MspInit>
 8010a2c:	687b      	ldr	r3, [r7, #4]
 8010a2e:	2202      	movs	r2, #2
 8010a30:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010a34:	687b      	ldr	r3, [r7, #4]
 8010a36:	681b      	ldr	r3, [r3, #0]
 8010a38:	681a      	ldr	r2, [r3, #0]
 8010a3a:	687b      	ldr	r3, [r7, #4]
 8010a3c:	681b      	ldr	r3, [r3, #0]
 8010a3e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8010a42:	601a      	str	r2, [r3, #0]
 8010a44:	687b      	ldr	r3, [r7, #4]
 8010a46:	685b      	ldr	r3, [r3, #4]
 8010a48:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8010a4c:	687b      	ldr	r3, [r7, #4]
 8010a4e:	689b      	ldr	r3, [r3, #8]
 8010a50:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8010a54:	431a      	orrs	r2, r3
 8010a56:	687b      	ldr	r3, [r7, #4]
 8010a58:	68db      	ldr	r3, [r3, #12]
 8010a5a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8010a5e:	431a      	orrs	r2, r3
 8010a60:	687b      	ldr	r3, [r7, #4]
 8010a62:	691b      	ldr	r3, [r3, #16]
 8010a64:	f003 0302 	and.w	r3, r3, #2
 8010a68:	431a      	orrs	r2, r3
 8010a6a:	687b      	ldr	r3, [r7, #4]
 8010a6c:	695b      	ldr	r3, [r3, #20]
 8010a6e:	f003 0301 	and.w	r3, r3, #1
 8010a72:	431a      	orrs	r2, r3
 8010a74:	687b      	ldr	r3, [r7, #4]
 8010a76:	699b      	ldr	r3, [r3, #24]
 8010a78:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8010a7c:	431a      	orrs	r2, r3
 8010a7e:	687b      	ldr	r3, [r7, #4]
 8010a80:	69db      	ldr	r3, [r3, #28]
 8010a82:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8010a86:	431a      	orrs	r2, r3
 8010a88:	687b      	ldr	r3, [r7, #4]
 8010a8a:	6a1b      	ldr	r3, [r3, #32]
 8010a8c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8010a90:	ea42 0103 	orr.w	r1, r2, r3
 8010a94:	687b      	ldr	r3, [r7, #4]
 8010a96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010a98:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8010a9c:	687b      	ldr	r3, [r7, #4]
 8010a9e:	681b      	ldr	r3, [r3, #0]
 8010aa0:	430a      	orrs	r2, r1
 8010aa2:	601a      	str	r2, [r3, #0]
 8010aa4:	687b      	ldr	r3, [r7, #4]
 8010aa6:	699b      	ldr	r3, [r3, #24]
 8010aa8:	0c1b      	lsrs	r3, r3, #16
 8010aaa:	f003 0104 	and.w	r1, r3, #4
 8010aae:	687b      	ldr	r3, [r7, #4]
 8010ab0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010ab2:	f003 0210 	and.w	r2, r3, #16
 8010ab6:	687b      	ldr	r3, [r7, #4]
 8010ab8:	681b      	ldr	r3, [r3, #0]
 8010aba:	430a      	orrs	r2, r1
 8010abc:	605a      	str	r2, [r3, #4]
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	681b      	ldr	r3, [r3, #0]
 8010ac2:	69da      	ldr	r2, [r3, #28]
 8010ac4:	687b      	ldr	r3, [r7, #4]
 8010ac6:	681b      	ldr	r3, [r3, #0]
 8010ac8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010acc:	61da      	str	r2, [r3, #28]
 8010ace:	687b      	ldr	r3, [r7, #4]
 8010ad0:	2200      	movs	r2, #0
 8010ad2:	655a      	str	r2, [r3, #84]	@ 0x54
 8010ad4:	687b      	ldr	r3, [r7, #4]
 8010ad6:	2201      	movs	r2, #1
 8010ad8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010adc:	2300      	movs	r3, #0
 8010ade:	4618      	mov	r0, r3
 8010ae0:	3708      	adds	r7, #8
 8010ae2:	46bd      	mov	sp, r7
 8010ae4:	bd80      	pop	{r7, pc}

08010ae6 <HAL_SPI_Receive>:
 8010ae6:	b580      	push	{r7, lr}
 8010ae8:	b088      	sub	sp, #32
 8010aea:	af02      	add	r7, sp, #8
 8010aec:	60f8      	str	r0, [r7, #12]
 8010aee:	60b9      	str	r1, [r7, #8]
 8010af0:	603b      	str	r3, [r7, #0]
 8010af2:	4613      	mov	r3, r2
 8010af4:	80fb      	strh	r3, [r7, #6]
 8010af6:	2300      	movs	r3, #0
 8010af8:	75fb      	strb	r3, [r7, #23]
 8010afa:	68fb      	ldr	r3, [r7, #12]
 8010afc:	685b      	ldr	r3, [r3, #4]
 8010afe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010b02:	d112      	bne.n	8010b2a <HAL_SPI_Receive+0x44>
 8010b04:	68fb      	ldr	r3, [r7, #12]
 8010b06:	689b      	ldr	r3, [r3, #8]
 8010b08:	2b00      	cmp	r3, #0
 8010b0a:	d10e      	bne.n	8010b2a <HAL_SPI_Receive+0x44>
 8010b0c:	68fb      	ldr	r3, [r7, #12]
 8010b0e:	2204      	movs	r2, #4
 8010b10:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010b14:	88fa      	ldrh	r2, [r7, #6]
 8010b16:	683b      	ldr	r3, [r7, #0]
 8010b18:	9300      	str	r3, [sp, #0]
 8010b1a:	4613      	mov	r3, r2
 8010b1c:	68ba      	ldr	r2, [r7, #8]
 8010b1e:	68b9      	ldr	r1, [r7, #8]
 8010b20:	68f8      	ldr	r0, [r7, #12]
 8010b22:	f000 f8f1 	bl	8010d08 <HAL_SPI_TransmitReceive>
 8010b26:	4603      	mov	r3, r0
 8010b28:	e0ea      	b.n	8010d00 <HAL_SPI_Receive+0x21a>
 8010b2a:	68fb      	ldr	r3, [r7, #12]
 8010b2c:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8010b30:	2b01      	cmp	r3, #1
 8010b32:	d101      	bne.n	8010b38 <HAL_SPI_Receive+0x52>
 8010b34:	2302      	movs	r3, #2
 8010b36:	e0e3      	b.n	8010d00 <HAL_SPI_Receive+0x21a>
 8010b38:	68fb      	ldr	r3, [r7, #12]
 8010b3a:	2201      	movs	r2, #1
 8010b3c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010b40:	f7fa fa8a 	bl	800b058 <HAL_GetTick>
 8010b44:	6138      	str	r0, [r7, #16]
 8010b46:	68fb      	ldr	r3, [r7, #12]
 8010b48:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010b4c:	b2db      	uxtb	r3, r3
 8010b4e:	2b01      	cmp	r3, #1
 8010b50:	d002      	beq.n	8010b58 <HAL_SPI_Receive+0x72>
 8010b52:	2302      	movs	r3, #2
 8010b54:	75fb      	strb	r3, [r7, #23]
 8010b56:	e0ca      	b.n	8010cee <HAL_SPI_Receive+0x208>
 8010b58:	68bb      	ldr	r3, [r7, #8]
 8010b5a:	2b00      	cmp	r3, #0
 8010b5c:	d002      	beq.n	8010b64 <HAL_SPI_Receive+0x7e>
 8010b5e:	88fb      	ldrh	r3, [r7, #6]
 8010b60:	2b00      	cmp	r3, #0
 8010b62:	d102      	bne.n	8010b6a <HAL_SPI_Receive+0x84>
 8010b64:	2301      	movs	r3, #1
 8010b66:	75fb      	strb	r3, [r7, #23]
 8010b68:	e0c1      	b.n	8010cee <HAL_SPI_Receive+0x208>
 8010b6a:	68fb      	ldr	r3, [r7, #12]
 8010b6c:	2204      	movs	r2, #4
 8010b6e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010b72:	68fb      	ldr	r3, [r7, #12]
 8010b74:	2200      	movs	r2, #0
 8010b76:	655a      	str	r2, [r3, #84]	@ 0x54
 8010b78:	68fb      	ldr	r3, [r7, #12]
 8010b7a:	68ba      	ldr	r2, [r7, #8]
 8010b7c:	639a      	str	r2, [r3, #56]	@ 0x38
 8010b7e:	68fb      	ldr	r3, [r7, #12]
 8010b80:	88fa      	ldrh	r2, [r7, #6]
 8010b82:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8010b84:	68fb      	ldr	r3, [r7, #12]
 8010b86:	88fa      	ldrh	r2, [r7, #6]
 8010b88:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010b8a:	68fb      	ldr	r3, [r7, #12]
 8010b8c:	2200      	movs	r2, #0
 8010b8e:	631a      	str	r2, [r3, #48]	@ 0x30
 8010b90:	68fb      	ldr	r3, [r7, #12]
 8010b92:	2200      	movs	r2, #0
 8010b94:	869a      	strh	r2, [r3, #52]	@ 0x34
 8010b96:	68fb      	ldr	r3, [r7, #12]
 8010b98:	2200      	movs	r2, #0
 8010b9a:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010b9c:	68fb      	ldr	r3, [r7, #12]
 8010b9e:	2200      	movs	r2, #0
 8010ba0:	641a      	str	r2, [r3, #64]	@ 0x40
 8010ba2:	68fb      	ldr	r3, [r7, #12]
 8010ba4:	2200      	movs	r2, #0
 8010ba6:	645a      	str	r2, [r3, #68]	@ 0x44
 8010ba8:	68fb      	ldr	r3, [r7, #12]
 8010baa:	689b      	ldr	r3, [r3, #8]
 8010bac:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8010bb0:	d10f      	bne.n	8010bd2 <HAL_SPI_Receive+0xec>
 8010bb2:	68fb      	ldr	r3, [r7, #12]
 8010bb4:	681b      	ldr	r3, [r3, #0]
 8010bb6:	681a      	ldr	r2, [r3, #0]
 8010bb8:	68fb      	ldr	r3, [r7, #12]
 8010bba:	681b      	ldr	r3, [r3, #0]
 8010bbc:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8010bc0:	601a      	str	r2, [r3, #0]
 8010bc2:	68fb      	ldr	r3, [r7, #12]
 8010bc4:	681b      	ldr	r3, [r3, #0]
 8010bc6:	681a      	ldr	r2, [r3, #0]
 8010bc8:	68fb      	ldr	r3, [r7, #12]
 8010bca:	681b      	ldr	r3, [r3, #0]
 8010bcc:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8010bd0:	601a      	str	r2, [r3, #0]
 8010bd2:	68fb      	ldr	r3, [r7, #12]
 8010bd4:	681b      	ldr	r3, [r3, #0]
 8010bd6:	681b      	ldr	r3, [r3, #0]
 8010bd8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010bdc:	2b40      	cmp	r3, #64	@ 0x40
 8010bde:	d007      	beq.n	8010bf0 <HAL_SPI_Receive+0x10a>
 8010be0:	68fb      	ldr	r3, [r7, #12]
 8010be2:	681b      	ldr	r3, [r3, #0]
 8010be4:	681a      	ldr	r2, [r3, #0]
 8010be6:	68fb      	ldr	r3, [r7, #12]
 8010be8:	681b      	ldr	r3, [r3, #0]
 8010bea:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8010bee:	601a      	str	r2, [r3, #0]
 8010bf0:	68fb      	ldr	r3, [r7, #12]
 8010bf2:	68db      	ldr	r3, [r3, #12]
 8010bf4:	2b00      	cmp	r3, #0
 8010bf6:	d162      	bne.n	8010cbe <HAL_SPI_Receive+0x1d8>
 8010bf8:	e02e      	b.n	8010c58 <HAL_SPI_Receive+0x172>
 8010bfa:	68fb      	ldr	r3, [r7, #12]
 8010bfc:	681b      	ldr	r3, [r3, #0]
 8010bfe:	689b      	ldr	r3, [r3, #8]
 8010c00:	f003 0301 	and.w	r3, r3, #1
 8010c04:	2b01      	cmp	r3, #1
 8010c06:	d115      	bne.n	8010c34 <HAL_SPI_Receive+0x14e>
 8010c08:	68fb      	ldr	r3, [r7, #12]
 8010c0a:	681b      	ldr	r3, [r3, #0]
 8010c0c:	f103 020c 	add.w	r2, r3, #12
 8010c10:	68fb      	ldr	r3, [r7, #12]
 8010c12:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010c14:	7812      	ldrb	r2, [r2, #0]
 8010c16:	b2d2      	uxtb	r2, r2
 8010c18:	701a      	strb	r2, [r3, #0]
 8010c1a:	68fb      	ldr	r3, [r7, #12]
 8010c1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010c1e:	1c5a      	adds	r2, r3, #1
 8010c20:	68fb      	ldr	r3, [r7, #12]
 8010c22:	639a      	str	r2, [r3, #56]	@ 0x38
 8010c24:	68fb      	ldr	r3, [r7, #12]
 8010c26:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010c28:	b29b      	uxth	r3, r3
 8010c2a:	3b01      	subs	r3, #1
 8010c2c:	b29a      	uxth	r2, r3
 8010c2e:	68fb      	ldr	r3, [r7, #12]
 8010c30:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010c32:	e011      	b.n	8010c58 <HAL_SPI_Receive+0x172>
 8010c34:	f7fa fa10 	bl	800b058 <HAL_GetTick>
 8010c38:	4602      	mov	r2, r0
 8010c3a:	693b      	ldr	r3, [r7, #16]
 8010c3c:	1ad3      	subs	r3, r2, r3
 8010c3e:	683a      	ldr	r2, [r7, #0]
 8010c40:	429a      	cmp	r2, r3
 8010c42:	d803      	bhi.n	8010c4c <HAL_SPI_Receive+0x166>
 8010c44:	683b      	ldr	r3, [r7, #0]
 8010c46:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010c4a:	d102      	bne.n	8010c52 <HAL_SPI_Receive+0x16c>
 8010c4c:	683b      	ldr	r3, [r7, #0]
 8010c4e:	2b00      	cmp	r3, #0
 8010c50:	d102      	bne.n	8010c58 <HAL_SPI_Receive+0x172>
 8010c52:	2303      	movs	r3, #3
 8010c54:	75fb      	strb	r3, [r7, #23]
 8010c56:	e04a      	b.n	8010cee <HAL_SPI_Receive+0x208>
 8010c58:	68fb      	ldr	r3, [r7, #12]
 8010c5a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010c5c:	b29b      	uxth	r3, r3
 8010c5e:	2b00      	cmp	r3, #0
 8010c60:	d1cb      	bne.n	8010bfa <HAL_SPI_Receive+0x114>
 8010c62:	e031      	b.n	8010cc8 <HAL_SPI_Receive+0x1e2>
 8010c64:	68fb      	ldr	r3, [r7, #12]
 8010c66:	681b      	ldr	r3, [r3, #0]
 8010c68:	689b      	ldr	r3, [r3, #8]
 8010c6a:	f003 0301 	and.w	r3, r3, #1
 8010c6e:	2b01      	cmp	r3, #1
 8010c70:	d113      	bne.n	8010c9a <HAL_SPI_Receive+0x1b4>
 8010c72:	68fb      	ldr	r3, [r7, #12]
 8010c74:	681b      	ldr	r3, [r3, #0]
 8010c76:	68da      	ldr	r2, [r3, #12]
 8010c78:	68fb      	ldr	r3, [r7, #12]
 8010c7a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010c7c:	b292      	uxth	r2, r2
 8010c7e:	801a      	strh	r2, [r3, #0]
 8010c80:	68fb      	ldr	r3, [r7, #12]
 8010c82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010c84:	1c9a      	adds	r2, r3, #2
 8010c86:	68fb      	ldr	r3, [r7, #12]
 8010c88:	639a      	str	r2, [r3, #56]	@ 0x38
 8010c8a:	68fb      	ldr	r3, [r7, #12]
 8010c8c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010c8e:	b29b      	uxth	r3, r3
 8010c90:	3b01      	subs	r3, #1
 8010c92:	b29a      	uxth	r2, r3
 8010c94:	68fb      	ldr	r3, [r7, #12]
 8010c96:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010c98:	e011      	b.n	8010cbe <HAL_SPI_Receive+0x1d8>
 8010c9a:	f7fa f9dd 	bl	800b058 <HAL_GetTick>
 8010c9e:	4602      	mov	r2, r0
 8010ca0:	693b      	ldr	r3, [r7, #16]
 8010ca2:	1ad3      	subs	r3, r2, r3
 8010ca4:	683a      	ldr	r2, [r7, #0]
 8010ca6:	429a      	cmp	r2, r3
 8010ca8:	d803      	bhi.n	8010cb2 <HAL_SPI_Receive+0x1cc>
 8010caa:	683b      	ldr	r3, [r7, #0]
 8010cac:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010cb0:	d102      	bne.n	8010cb8 <HAL_SPI_Receive+0x1d2>
 8010cb2:	683b      	ldr	r3, [r7, #0]
 8010cb4:	2b00      	cmp	r3, #0
 8010cb6:	d102      	bne.n	8010cbe <HAL_SPI_Receive+0x1d8>
 8010cb8:	2303      	movs	r3, #3
 8010cba:	75fb      	strb	r3, [r7, #23]
 8010cbc:	e017      	b.n	8010cee <HAL_SPI_Receive+0x208>
 8010cbe:	68fb      	ldr	r3, [r7, #12]
 8010cc0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010cc2:	b29b      	uxth	r3, r3
 8010cc4:	2b00      	cmp	r3, #0
 8010cc6:	d1cd      	bne.n	8010c64 <HAL_SPI_Receive+0x17e>
 8010cc8:	693a      	ldr	r2, [r7, #16]
 8010cca:	6839      	ldr	r1, [r7, #0]
 8010ccc:	68f8      	ldr	r0, [r7, #12]
 8010cce:	f000 fa45 	bl	801115c <SPI_EndRxTransaction>
 8010cd2:	4603      	mov	r3, r0
 8010cd4:	2b00      	cmp	r3, #0
 8010cd6:	d002      	beq.n	8010cde <HAL_SPI_Receive+0x1f8>
 8010cd8:	68fb      	ldr	r3, [r7, #12]
 8010cda:	2220      	movs	r2, #32
 8010cdc:	655a      	str	r2, [r3, #84]	@ 0x54
 8010cde:	68fb      	ldr	r3, [r7, #12]
 8010ce0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8010ce2:	2b00      	cmp	r3, #0
 8010ce4:	d002      	beq.n	8010cec <HAL_SPI_Receive+0x206>
 8010ce6:	2301      	movs	r3, #1
 8010ce8:	75fb      	strb	r3, [r7, #23]
 8010cea:	e000      	b.n	8010cee <HAL_SPI_Receive+0x208>
 8010cec:	bf00      	nop
 8010cee:	68fb      	ldr	r3, [r7, #12]
 8010cf0:	2201      	movs	r2, #1
 8010cf2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010cf6:	68fb      	ldr	r3, [r7, #12]
 8010cf8:	2200      	movs	r2, #0
 8010cfa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010cfe:	7dfb      	ldrb	r3, [r7, #23]
 8010d00:	4618      	mov	r0, r3
 8010d02:	3718      	adds	r7, #24
 8010d04:	46bd      	mov	sp, r7
 8010d06:	bd80      	pop	{r7, pc}

08010d08 <HAL_SPI_TransmitReceive>:
 8010d08:	b580      	push	{r7, lr}
 8010d0a:	b08c      	sub	sp, #48	@ 0x30
 8010d0c:	af00      	add	r7, sp, #0
 8010d0e:	60f8      	str	r0, [r7, #12]
 8010d10:	60b9      	str	r1, [r7, #8]
 8010d12:	607a      	str	r2, [r7, #4]
 8010d14:	807b      	strh	r3, [r7, #2]
 8010d16:	2301      	movs	r3, #1
 8010d18:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010d1a:	2300      	movs	r3, #0
 8010d1c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010d20:	68fb      	ldr	r3, [r7, #12]
 8010d22:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8010d26:	2b01      	cmp	r3, #1
 8010d28:	d101      	bne.n	8010d2e <HAL_SPI_TransmitReceive+0x26>
 8010d2a:	2302      	movs	r3, #2
 8010d2c:	e18a      	b.n	8011044 <HAL_SPI_TransmitReceive+0x33c>
 8010d2e:	68fb      	ldr	r3, [r7, #12]
 8010d30:	2201      	movs	r2, #1
 8010d32:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8010d36:	f7fa f98f 	bl	800b058 <HAL_GetTick>
 8010d3a:	6278      	str	r0, [r7, #36]	@ 0x24
 8010d3c:	68fb      	ldr	r3, [r7, #12]
 8010d3e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010d42:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8010d46:	68fb      	ldr	r3, [r7, #12]
 8010d48:	685b      	ldr	r3, [r3, #4]
 8010d4a:	61fb      	str	r3, [r7, #28]
 8010d4c:	887b      	ldrh	r3, [r7, #2]
 8010d4e:	837b      	strh	r3, [r7, #26]
 8010d50:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8010d54:	2b01      	cmp	r3, #1
 8010d56:	d00f      	beq.n	8010d78 <HAL_SPI_TransmitReceive+0x70>
 8010d58:	69fb      	ldr	r3, [r7, #28]
 8010d5a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8010d5e:	d107      	bne.n	8010d70 <HAL_SPI_TransmitReceive+0x68>
 8010d60:	68fb      	ldr	r3, [r7, #12]
 8010d62:	689b      	ldr	r3, [r3, #8]
 8010d64:	2b00      	cmp	r3, #0
 8010d66:	d103      	bne.n	8010d70 <HAL_SPI_TransmitReceive+0x68>
 8010d68:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 8010d6c:	2b04      	cmp	r3, #4
 8010d6e:	d003      	beq.n	8010d78 <HAL_SPI_TransmitReceive+0x70>
 8010d70:	2302      	movs	r3, #2
 8010d72:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010d76:	e15b      	b.n	8011030 <HAL_SPI_TransmitReceive+0x328>
 8010d78:	68bb      	ldr	r3, [r7, #8]
 8010d7a:	2b00      	cmp	r3, #0
 8010d7c:	d005      	beq.n	8010d8a <HAL_SPI_TransmitReceive+0x82>
 8010d7e:	687b      	ldr	r3, [r7, #4]
 8010d80:	2b00      	cmp	r3, #0
 8010d82:	d002      	beq.n	8010d8a <HAL_SPI_TransmitReceive+0x82>
 8010d84:	887b      	ldrh	r3, [r7, #2]
 8010d86:	2b00      	cmp	r3, #0
 8010d88:	d103      	bne.n	8010d92 <HAL_SPI_TransmitReceive+0x8a>
 8010d8a:	2301      	movs	r3, #1
 8010d8c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010d90:	e14e      	b.n	8011030 <HAL_SPI_TransmitReceive+0x328>
 8010d92:	68fb      	ldr	r3, [r7, #12]
 8010d94:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8010d98:	b2db      	uxtb	r3, r3
 8010d9a:	2b04      	cmp	r3, #4
 8010d9c:	d003      	beq.n	8010da6 <HAL_SPI_TransmitReceive+0x9e>
 8010d9e:	68fb      	ldr	r3, [r7, #12]
 8010da0:	2205      	movs	r2, #5
 8010da2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8010da6:	68fb      	ldr	r3, [r7, #12]
 8010da8:	2200      	movs	r2, #0
 8010daa:	655a      	str	r2, [r3, #84]	@ 0x54
 8010dac:	68fb      	ldr	r3, [r7, #12]
 8010dae:	687a      	ldr	r2, [r7, #4]
 8010db0:	639a      	str	r2, [r3, #56]	@ 0x38
 8010db2:	68fb      	ldr	r3, [r7, #12]
 8010db4:	887a      	ldrh	r2, [r7, #2]
 8010db6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010db8:	68fb      	ldr	r3, [r7, #12]
 8010dba:	887a      	ldrh	r2, [r7, #2]
 8010dbc:	879a      	strh	r2, [r3, #60]	@ 0x3c
 8010dbe:	68fb      	ldr	r3, [r7, #12]
 8010dc0:	68ba      	ldr	r2, [r7, #8]
 8010dc2:	631a      	str	r2, [r3, #48]	@ 0x30
 8010dc4:	68fb      	ldr	r3, [r7, #12]
 8010dc6:	887a      	ldrh	r2, [r7, #2]
 8010dc8:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010dca:	68fb      	ldr	r3, [r7, #12]
 8010dcc:	887a      	ldrh	r2, [r7, #2]
 8010dce:	869a      	strh	r2, [r3, #52]	@ 0x34
 8010dd0:	68fb      	ldr	r3, [r7, #12]
 8010dd2:	2200      	movs	r2, #0
 8010dd4:	641a      	str	r2, [r3, #64]	@ 0x40
 8010dd6:	68fb      	ldr	r3, [r7, #12]
 8010dd8:	2200      	movs	r2, #0
 8010dda:	645a      	str	r2, [r3, #68]	@ 0x44
 8010ddc:	68fb      	ldr	r3, [r7, #12]
 8010dde:	681b      	ldr	r3, [r3, #0]
 8010de0:	681b      	ldr	r3, [r3, #0]
 8010de2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010de6:	2b40      	cmp	r3, #64	@ 0x40
 8010de8:	d007      	beq.n	8010dfa <HAL_SPI_TransmitReceive+0xf2>
 8010dea:	68fb      	ldr	r3, [r7, #12]
 8010dec:	681b      	ldr	r3, [r3, #0]
 8010dee:	681a      	ldr	r2, [r3, #0]
 8010df0:	68fb      	ldr	r3, [r7, #12]
 8010df2:	681b      	ldr	r3, [r3, #0]
 8010df4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8010df8:	601a      	str	r2, [r3, #0]
 8010dfa:	68fb      	ldr	r3, [r7, #12]
 8010dfc:	68db      	ldr	r3, [r3, #12]
 8010dfe:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8010e02:	d178      	bne.n	8010ef6 <HAL_SPI_TransmitReceive+0x1ee>
 8010e04:	68fb      	ldr	r3, [r7, #12]
 8010e06:	685b      	ldr	r3, [r3, #4]
 8010e08:	2b00      	cmp	r3, #0
 8010e0a:	d002      	beq.n	8010e12 <HAL_SPI_TransmitReceive+0x10a>
 8010e0c:	8b7b      	ldrh	r3, [r7, #26]
 8010e0e:	2b01      	cmp	r3, #1
 8010e10:	d166      	bne.n	8010ee0 <HAL_SPI_TransmitReceive+0x1d8>
 8010e12:	68fb      	ldr	r3, [r7, #12]
 8010e14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e16:	881a      	ldrh	r2, [r3, #0]
 8010e18:	68fb      	ldr	r3, [r7, #12]
 8010e1a:	681b      	ldr	r3, [r3, #0]
 8010e1c:	60da      	str	r2, [r3, #12]
 8010e1e:	68fb      	ldr	r3, [r7, #12]
 8010e20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e22:	1c9a      	adds	r2, r3, #2
 8010e24:	68fb      	ldr	r3, [r7, #12]
 8010e26:	631a      	str	r2, [r3, #48]	@ 0x30
 8010e28:	68fb      	ldr	r3, [r7, #12]
 8010e2a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010e2c:	b29b      	uxth	r3, r3
 8010e2e:	3b01      	subs	r3, #1
 8010e30:	b29a      	uxth	r2, r3
 8010e32:	68fb      	ldr	r3, [r7, #12]
 8010e34:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010e36:	e053      	b.n	8010ee0 <HAL_SPI_TransmitReceive+0x1d8>
 8010e38:	68fb      	ldr	r3, [r7, #12]
 8010e3a:	681b      	ldr	r3, [r3, #0]
 8010e3c:	689b      	ldr	r3, [r3, #8]
 8010e3e:	f003 0302 	and.w	r3, r3, #2
 8010e42:	2b02      	cmp	r3, #2
 8010e44:	d11b      	bne.n	8010e7e <HAL_SPI_TransmitReceive+0x176>
 8010e46:	68fb      	ldr	r3, [r7, #12]
 8010e48:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010e4a:	b29b      	uxth	r3, r3
 8010e4c:	2b00      	cmp	r3, #0
 8010e4e:	d016      	beq.n	8010e7e <HAL_SPI_TransmitReceive+0x176>
 8010e50:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8010e52:	2b01      	cmp	r3, #1
 8010e54:	d113      	bne.n	8010e7e <HAL_SPI_TransmitReceive+0x176>
 8010e56:	68fb      	ldr	r3, [r7, #12]
 8010e58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e5a:	881a      	ldrh	r2, [r3, #0]
 8010e5c:	68fb      	ldr	r3, [r7, #12]
 8010e5e:	681b      	ldr	r3, [r3, #0]
 8010e60:	60da      	str	r2, [r3, #12]
 8010e62:	68fb      	ldr	r3, [r7, #12]
 8010e64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010e66:	1c9a      	adds	r2, r3, #2
 8010e68:	68fb      	ldr	r3, [r7, #12]
 8010e6a:	631a      	str	r2, [r3, #48]	@ 0x30
 8010e6c:	68fb      	ldr	r3, [r7, #12]
 8010e6e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010e70:	b29b      	uxth	r3, r3
 8010e72:	3b01      	subs	r3, #1
 8010e74:	b29a      	uxth	r2, r3
 8010e76:	68fb      	ldr	r3, [r7, #12]
 8010e78:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010e7a:	2300      	movs	r3, #0
 8010e7c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010e7e:	68fb      	ldr	r3, [r7, #12]
 8010e80:	681b      	ldr	r3, [r3, #0]
 8010e82:	689b      	ldr	r3, [r3, #8]
 8010e84:	f003 0301 	and.w	r3, r3, #1
 8010e88:	2b01      	cmp	r3, #1
 8010e8a:	d119      	bne.n	8010ec0 <HAL_SPI_TransmitReceive+0x1b8>
 8010e8c:	68fb      	ldr	r3, [r7, #12]
 8010e8e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010e90:	b29b      	uxth	r3, r3
 8010e92:	2b00      	cmp	r3, #0
 8010e94:	d014      	beq.n	8010ec0 <HAL_SPI_TransmitReceive+0x1b8>
 8010e96:	68fb      	ldr	r3, [r7, #12]
 8010e98:	681b      	ldr	r3, [r3, #0]
 8010e9a:	68da      	ldr	r2, [r3, #12]
 8010e9c:	68fb      	ldr	r3, [r7, #12]
 8010e9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010ea0:	b292      	uxth	r2, r2
 8010ea2:	801a      	strh	r2, [r3, #0]
 8010ea4:	68fb      	ldr	r3, [r7, #12]
 8010ea6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010ea8:	1c9a      	adds	r2, r3, #2
 8010eaa:	68fb      	ldr	r3, [r7, #12]
 8010eac:	639a      	str	r2, [r3, #56]	@ 0x38
 8010eae:	68fb      	ldr	r3, [r7, #12]
 8010eb0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010eb2:	b29b      	uxth	r3, r3
 8010eb4:	3b01      	subs	r3, #1
 8010eb6:	b29a      	uxth	r2, r3
 8010eb8:	68fb      	ldr	r3, [r7, #12]
 8010eba:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010ebc:	2301      	movs	r3, #1
 8010ebe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010ec0:	f7fa f8ca 	bl	800b058 <HAL_GetTick>
 8010ec4:	4602      	mov	r2, r0
 8010ec6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010ec8:	1ad3      	subs	r3, r2, r3
 8010eca:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8010ecc:	429a      	cmp	r2, r3
 8010ece:	d807      	bhi.n	8010ee0 <HAL_SPI_TransmitReceive+0x1d8>
 8010ed0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010ed2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010ed6:	d003      	beq.n	8010ee0 <HAL_SPI_TransmitReceive+0x1d8>
 8010ed8:	2303      	movs	r3, #3
 8010eda:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010ede:	e0a7      	b.n	8011030 <HAL_SPI_TransmitReceive+0x328>
 8010ee0:	68fb      	ldr	r3, [r7, #12]
 8010ee2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010ee4:	b29b      	uxth	r3, r3
 8010ee6:	2b00      	cmp	r3, #0
 8010ee8:	d1a6      	bne.n	8010e38 <HAL_SPI_TransmitReceive+0x130>
 8010eea:	68fb      	ldr	r3, [r7, #12]
 8010eec:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010eee:	b29b      	uxth	r3, r3
 8010ef0:	2b00      	cmp	r3, #0
 8010ef2:	d1a1      	bne.n	8010e38 <HAL_SPI_TransmitReceive+0x130>
 8010ef4:	e07c      	b.n	8010ff0 <HAL_SPI_TransmitReceive+0x2e8>
 8010ef6:	68fb      	ldr	r3, [r7, #12]
 8010ef8:	685b      	ldr	r3, [r3, #4]
 8010efa:	2b00      	cmp	r3, #0
 8010efc:	d002      	beq.n	8010f04 <HAL_SPI_TransmitReceive+0x1fc>
 8010efe:	8b7b      	ldrh	r3, [r7, #26]
 8010f00:	2b01      	cmp	r3, #1
 8010f02:	d16b      	bne.n	8010fdc <HAL_SPI_TransmitReceive+0x2d4>
 8010f04:	68fb      	ldr	r3, [r7, #12]
 8010f06:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8010f08:	68fb      	ldr	r3, [r7, #12]
 8010f0a:	681b      	ldr	r3, [r3, #0]
 8010f0c:	330c      	adds	r3, #12
 8010f0e:	7812      	ldrb	r2, [r2, #0]
 8010f10:	701a      	strb	r2, [r3, #0]
 8010f12:	68fb      	ldr	r3, [r7, #12]
 8010f14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010f16:	1c5a      	adds	r2, r3, #1
 8010f18:	68fb      	ldr	r3, [r7, #12]
 8010f1a:	631a      	str	r2, [r3, #48]	@ 0x30
 8010f1c:	68fb      	ldr	r3, [r7, #12]
 8010f1e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f20:	b29b      	uxth	r3, r3
 8010f22:	3b01      	subs	r3, #1
 8010f24:	b29a      	uxth	r2, r3
 8010f26:	68fb      	ldr	r3, [r7, #12]
 8010f28:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010f2a:	e057      	b.n	8010fdc <HAL_SPI_TransmitReceive+0x2d4>
 8010f2c:	68fb      	ldr	r3, [r7, #12]
 8010f2e:	681b      	ldr	r3, [r3, #0]
 8010f30:	689b      	ldr	r3, [r3, #8]
 8010f32:	f003 0302 	and.w	r3, r3, #2
 8010f36:	2b02      	cmp	r3, #2
 8010f38:	d11c      	bne.n	8010f74 <HAL_SPI_TransmitReceive+0x26c>
 8010f3a:	68fb      	ldr	r3, [r7, #12]
 8010f3c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f3e:	b29b      	uxth	r3, r3
 8010f40:	2b00      	cmp	r3, #0
 8010f42:	d017      	beq.n	8010f74 <HAL_SPI_TransmitReceive+0x26c>
 8010f44:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8010f46:	2b01      	cmp	r3, #1
 8010f48:	d114      	bne.n	8010f74 <HAL_SPI_TransmitReceive+0x26c>
 8010f4a:	68fb      	ldr	r3, [r7, #12]
 8010f4c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8010f4e:	68fb      	ldr	r3, [r7, #12]
 8010f50:	681b      	ldr	r3, [r3, #0]
 8010f52:	330c      	adds	r3, #12
 8010f54:	7812      	ldrb	r2, [r2, #0]
 8010f56:	701a      	strb	r2, [r3, #0]
 8010f58:	68fb      	ldr	r3, [r7, #12]
 8010f5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010f5c:	1c5a      	adds	r2, r3, #1
 8010f5e:	68fb      	ldr	r3, [r7, #12]
 8010f60:	631a      	str	r2, [r3, #48]	@ 0x30
 8010f62:	68fb      	ldr	r3, [r7, #12]
 8010f64:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010f66:	b29b      	uxth	r3, r3
 8010f68:	3b01      	subs	r3, #1
 8010f6a:	b29a      	uxth	r2, r3
 8010f6c:	68fb      	ldr	r3, [r7, #12]
 8010f6e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8010f70:	2300      	movs	r3, #0
 8010f72:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010f74:	68fb      	ldr	r3, [r7, #12]
 8010f76:	681b      	ldr	r3, [r3, #0]
 8010f78:	689b      	ldr	r3, [r3, #8]
 8010f7a:	f003 0301 	and.w	r3, r3, #1
 8010f7e:	2b01      	cmp	r3, #1
 8010f80:	d119      	bne.n	8010fb6 <HAL_SPI_TransmitReceive+0x2ae>
 8010f82:	68fb      	ldr	r3, [r7, #12]
 8010f84:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010f86:	b29b      	uxth	r3, r3
 8010f88:	2b00      	cmp	r3, #0
 8010f8a:	d014      	beq.n	8010fb6 <HAL_SPI_TransmitReceive+0x2ae>
 8010f8c:	68fb      	ldr	r3, [r7, #12]
 8010f8e:	681b      	ldr	r3, [r3, #0]
 8010f90:	68da      	ldr	r2, [r3, #12]
 8010f92:	68fb      	ldr	r3, [r7, #12]
 8010f94:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f96:	b2d2      	uxtb	r2, r2
 8010f98:	701a      	strb	r2, [r3, #0]
 8010f9a:	68fb      	ldr	r3, [r7, #12]
 8010f9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010f9e:	1c5a      	adds	r2, r3, #1
 8010fa0:	68fb      	ldr	r3, [r7, #12]
 8010fa2:	639a      	str	r2, [r3, #56]	@ 0x38
 8010fa4:	68fb      	ldr	r3, [r7, #12]
 8010fa6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010fa8:	b29b      	uxth	r3, r3
 8010faa:	3b01      	subs	r3, #1
 8010fac:	b29a      	uxth	r2, r3
 8010fae:	68fb      	ldr	r3, [r7, #12]
 8010fb0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8010fb2:	2301      	movs	r3, #1
 8010fb4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8010fb6:	f7fa f84f 	bl	800b058 <HAL_GetTick>
 8010fba:	4602      	mov	r2, r0
 8010fbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010fbe:	1ad3      	subs	r3, r2, r3
 8010fc0:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8010fc2:	429a      	cmp	r2, r3
 8010fc4:	d803      	bhi.n	8010fce <HAL_SPI_TransmitReceive+0x2c6>
 8010fc6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010fc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8010fcc:	d102      	bne.n	8010fd4 <HAL_SPI_TransmitReceive+0x2cc>
 8010fce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010fd0:	2b00      	cmp	r3, #0
 8010fd2:	d103      	bne.n	8010fdc <HAL_SPI_TransmitReceive+0x2d4>
 8010fd4:	2303      	movs	r3, #3
 8010fd6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8010fda:	e029      	b.n	8011030 <HAL_SPI_TransmitReceive+0x328>
 8010fdc:	68fb      	ldr	r3, [r7, #12]
 8010fde:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8010fe0:	b29b      	uxth	r3, r3
 8010fe2:	2b00      	cmp	r3, #0
 8010fe4:	d1a2      	bne.n	8010f2c <HAL_SPI_TransmitReceive+0x224>
 8010fe6:	68fb      	ldr	r3, [r7, #12]
 8010fe8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8010fea:	b29b      	uxth	r3, r3
 8010fec:	2b00      	cmp	r3, #0
 8010fee:	d19d      	bne.n	8010f2c <HAL_SPI_TransmitReceive+0x224>
 8010ff0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010ff2:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8010ff4:	68f8      	ldr	r0, [r7, #12]
 8010ff6:	f000 f917 	bl	8011228 <SPI_EndRxTxTransaction>
 8010ffa:	4603      	mov	r3, r0
 8010ffc:	2b00      	cmp	r3, #0
 8010ffe:	d006      	beq.n	801100e <HAL_SPI_TransmitReceive+0x306>
 8011000:	2301      	movs	r3, #1
 8011002:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8011006:	68fb      	ldr	r3, [r7, #12]
 8011008:	2220      	movs	r2, #32
 801100a:	655a      	str	r2, [r3, #84]	@ 0x54
 801100c:	e010      	b.n	8011030 <HAL_SPI_TransmitReceive+0x328>
 801100e:	68fb      	ldr	r3, [r7, #12]
 8011010:	689b      	ldr	r3, [r3, #8]
 8011012:	2b00      	cmp	r3, #0
 8011014:	d10b      	bne.n	801102e <HAL_SPI_TransmitReceive+0x326>
 8011016:	2300      	movs	r3, #0
 8011018:	617b      	str	r3, [r7, #20]
 801101a:	68fb      	ldr	r3, [r7, #12]
 801101c:	681b      	ldr	r3, [r3, #0]
 801101e:	68db      	ldr	r3, [r3, #12]
 8011020:	617b      	str	r3, [r7, #20]
 8011022:	68fb      	ldr	r3, [r7, #12]
 8011024:	681b      	ldr	r3, [r3, #0]
 8011026:	689b      	ldr	r3, [r3, #8]
 8011028:	617b      	str	r3, [r7, #20]
 801102a:	697b      	ldr	r3, [r7, #20]
 801102c:	e000      	b.n	8011030 <HAL_SPI_TransmitReceive+0x328>
 801102e:	bf00      	nop
 8011030:	68fb      	ldr	r3, [r7, #12]
 8011032:	2201      	movs	r2, #1
 8011034:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8011038:	68fb      	ldr	r3, [r7, #12]
 801103a:	2200      	movs	r2, #0
 801103c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8011040:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8011044:	4618      	mov	r0, r3
 8011046:	3730      	adds	r7, #48	@ 0x30
 8011048:	46bd      	mov	sp, r7
 801104a:	bd80      	pop	{r7, pc}

0801104c <SPI_WaitFlagStateUntilTimeout>:
 801104c:	b580      	push	{r7, lr}
 801104e:	b088      	sub	sp, #32
 8011050:	af00      	add	r7, sp, #0
 8011052:	60f8      	str	r0, [r7, #12]
 8011054:	60b9      	str	r1, [r7, #8]
 8011056:	603b      	str	r3, [r7, #0]
 8011058:	4613      	mov	r3, r2
 801105a:	71fb      	strb	r3, [r7, #7]
 801105c:	f7f9 fffc 	bl	800b058 <HAL_GetTick>
 8011060:	4602      	mov	r2, r0
 8011062:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011064:	1a9b      	subs	r3, r3, r2
 8011066:	683a      	ldr	r2, [r7, #0]
 8011068:	4413      	add	r3, r2
 801106a:	61fb      	str	r3, [r7, #28]
 801106c:	f7f9 fff4 	bl	800b058 <HAL_GetTick>
 8011070:	61b8      	str	r0, [r7, #24]
 8011072:	4b39      	ldr	r3, [pc, #228]	@ (8011158 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8011074:	681b      	ldr	r3, [r3, #0]
 8011076:	015b      	lsls	r3, r3, #5
 8011078:	0d1b      	lsrs	r3, r3, #20
 801107a:	69fa      	ldr	r2, [r7, #28]
 801107c:	fb02 f303 	mul.w	r3, r2, r3
 8011080:	617b      	str	r3, [r7, #20]
 8011082:	e054      	b.n	801112e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8011084:	683b      	ldr	r3, [r7, #0]
 8011086:	f1b3 3fff 	cmp.w	r3, #4294967295
 801108a:	d050      	beq.n	801112e <SPI_WaitFlagStateUntilTimeout+0xe2>
 801108c:	f7f9 ffe4 	bl	800b058 <HAL_GetTick>
 8011090:	4602      	mov	r2, r0
 8011092:	69bb      	ldr	r3, [r7, #24]
 8011094:	1ad3      	subs	r3, r2, r3
 8011096:	69fa      	ldr	r2, [r7, #28]
 8011098:	429a      	cmp	r2, r3
 801109a:	d902      	bls.n	80110a2 <SPI_WaitFlagStateUntilTimeout+0x56>
 801109c:	69fb      	ldr	r3, [r7, #28]
 801109e:	2b00      	cmp	r3, #0
 80110a0:	d13d      	bne.n	801111e <SPI_WaitFlagStateUntilTimeout+0xd2>
 80110a2:	68fb      	ldr	r3, [r7, #12]
 80110a4:	681b      	ldr	r3, [r3, #0]
 80110a6:	685a      	ldr	r2, [r3, #4]
 80110a8:	68fb      	ldr	r3, [r7, #12]
 80110aa:	681b      	ldr	r3, [r3, #0]
 80110ac:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80110b0:	605a      	str	r2, [r3, #4]
 80110b2:	68fb      	ldr	r3, [r7, #12]
 80110b4:	685b      	ldr	r3, [r3, #4]
 80110b6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80110ba:	d111      	bne.n	80110e0 <SPI_WaitFlagStateUntilTimeout+0x94>
 80110bc:	68fb      	ldr	r3, [r7, #12]
 80110be:	689b      	ldr	r3, [r3, #8]
 80110c0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80110c4:	d004      	beq.n	80110d0 <SPI_WaitFlagStateUntilTimeout+0x84>
 80110c6:	68fb      	ldr	r3, [r7, #12]
 80110c8:	689b      	ldr	r3, [r3, #8]
 80110ca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80110ce:	d107      	bne.n	80110e0 <SPI_WaitFlagStateUntilTimeout+0x94>
 80110d0:	68fb      	ldr	r3, [r7, #12]
 80110d2:	681b      	ldr	r3, [r3, #0]
 80110d4:	681a      	ldr	r2, [r3, #0]
 80110d6:	68fb      	ldr	r3, [r7, #12]
 80110d8:	681b      	ldr	r3, [r3, #0]
 80110da:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80110de:	601a      	str	r2, [r3, #0]
 80110e0:	68fb      	ldr	r3, [r7, #12]
 80110e2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80110e4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80110e8:	d10f      	bne.n	801110a <SPI_WaitFlagStateUntilTimeout+0xbe>
 80110ea:	68fb      	ldr	r3, [r7, #12]
 80110ec:	681b      	ldr	r3, [r3, #0]
 80110ee:	681a      	ldr	r2, [r3, #0]
 80110f0:	68fb      	ldr	r3, [r7, #12]
 80110f2:	681b      	ldr	r3, [r3, #0]
 80110f4:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80110f8:	601a      	str	r2, [r3, #0]
 80110fa:	68fb      	ldr	r3, [r7, #12]
 80110fc:	681b      	ldr	r3, [r3, #0]
 80110fe:	681a      	ldr	r2, [r3, #0]
 8011100:	68fb      	ldr	r3, [r7, #12]
 8011102:	681b      	ldr	r3, [r3, #0]
 8011104:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8011108:	601a      	str	r2, [r3, #0]
 801110a:	68fb      	ldr	r3, [r7, #12]
 801110c:	2201      	movs	r2, #1
 801110e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8011112:	68fb      	ldr	r3, [r7, #12]
 8011114:	2200      	movs	r2, #0
 8011116:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 801111a:	2303      	movs	r3, #3
 801111c:	e017      	b.n	801114e <SPI_WaitFlagStateUntilTimeout+0x102>
 801111e:	697b      	ldr	r3, [r7, #20]
 8011120:	2b00      	cmp	r3, #0
 8011122:	d101      	bne.n	8011128 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8011124:	2300      	movs	r3, #0
 8011126:	61fb      	str	r3, [r7, #28]
 8011128:	697b      	ldr	r3, [r7, #20]
 801112a:	3b01      	subs	r3, #1
 801112c:	617b      	str	r3, [r7, #20]
 801112e:	68fb      	ldr	r3, [r7, #12]
 8011130:	681b      	ldr	r3, [r3, #0]
 8011132:	689a      	ldr	r2, [r3, #8]
 8011134:	68bb      	ldr	r3, [r7, #8]
 8011136:	4013      	ands	r3, r2
 8011138:	68ba      	ldr	r2, [r7, #8]
 801113a:	429a      	cmp	r2, r3
 801113c:	bf0c      	ite	eq
 801113e:	2301      	moveq	r3, #1
 8011140:	2300      	movne	r3, #0
 8011142:	b2db      	uxtb	r3, r3
 8011144:	461a      	mov	r2, r3
 8011146:	79fb      	ldrb	r3, [r7, #7]
 8011148:	429a      	cmp	r2, r3
 801114a:	d19b      	bne.n	8011084 <SPI_WaitFlagStateUntilTimeout+0x38>
 801114c:	2300      	movs	r3, #0
 801114e:	4618      	mov	r0, r3
 8011150:	3720      	adds	r7, #32
 8011152:	46bd      	mov	sp, r7
 8011154:	bd80      	pop	{r7, pc}
 8011156:	bf00      	nop
 8011158:	20000004 	.word	0x20000004

0801115c <SPI_EndRxTransaction>:
 801115c:	b580      	push	{r7, lr}
 801115e:	b086      	sub	sp, #24
 8011160:	af02      	add	r7, sp, #8
 8011162:	60f8      	str	r0, [r7, #12]
 8011164:	60b9      	str	r1, [r7, #8]
 8011166:	607a      	str	r2, [r7, #4]
 8011168:	68fb      	ldr	r3, [r7, #12]
 801116a:	685b      	ldr	r3, [r3, #4]
 801116c:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011170:	d111      	bne.n	8011196 <SPI_EndRxTransaction+0x3a>
 8011172:	68fb      	ldr	r3, [r7, #12]
 8011174:	689b      	ldr	r3, [r3, #8]
 8011176:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 801117a:	d004      	beq.n	8011186 <SPI_EndRxTransaction+0x2a>
 801117c:	68fb      	ldr	r3, [r7, #12]
 801117e:	689b      	ldr	r3, [r3, #8]
 8011180:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011184:	d107      	bne.n	8011196 <SPI_EndRxTransaction+0x3a>
 8011186:	68fb      	ldr	r3, [r7, #12]
 8011188:	681b      	ldr	r3, [r3, #0]
 801118a:	681a      	ldr	r2, [r3, #0]
 801118c:	68fb      	ldr	r3, [r7, #12]
 801118e:	681b      	ldr	r3, [r3, #0]
 8011190:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8011194:	601a      	str	r2, [r3, #0]
 8011196:	68fb      	ldr	r3, [r7, #12]
 8011198:	685b      	ldr	r3, [r3, #4]
 801119a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 801119e:	d12a      	bne.n	80111f6 <SPI_EndRxTransaction+0x9a>
 80111a0:	68fb      	ldr	r3, [r7, #12]
 80111a2:	689b      	ldr	r3, [r3, #8]
 80111a4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80111a8:	d012      	beq.n	80111d0 <SPI_EndRxTransaction+0x74>
 80111aa:	687b      	ldr	r3, [r7, #4]
 80111ac:	9300      	str	r3, [sp, #0]
 80111ae:	68bb      	ldr	r3, [r7, #8]
 80111b0:	2200      	movs	r2, #0
 80111b2:	2180      	movs	r1, #128	@ 0x80
 80111b4:	68f8      	ldr	r0, [r7, #12]
 80111b6:	f7ff ff49 	bl	801104c <SPI_WaitFlagStateUntilTimeout>
 80111ba:	4603      	mov	r3, r0
 80111bc:	2b00      	cmp	r3, #0
 80111be:	d02d      	beq.n	801121c <SPI_EndRxTransaction+0xc0>
 80111c0:	68fb      	ldr	r3, [r7, #12]
 80111c2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80111c4:	f043 0220 	orr.w	r2, r3, #32
 80111c8:	68fb      	ldr	r3, [r7, #12]
 80111ca:	655a      	str	r2, [r3, #84]	@ 0x54
 80111cc:	2303      	movs	r3, #3
 80111ce:	e026      	b.n	801121e <SPI_EndRxTransaction+0xc2>
 80111d0:	687b      	ldr	r3, [r7, #4]
 80111d2:	9300      	str	r3, [sp, #0]
 80111d4:	68bb      	ldr	r3, [r7, #8]
 80111d6:	2200      	movs	r2, #0
 80111d8:	2101      	movs	r1, #1
 80111da:	68f8      	ldr	r0, [r7, #12]
 80111dc:	f7ff ff36 	bl	801104c <SPI_WaitFlagStateUntilTimeout>
 80111e0:	4603      	mov	r3, r0
 80111e2:	2b00      	cmp	r3, #0
 80111e4:	d01a      	beq.n	801121c <SPI_EndRxTransaction+0xc0>
 80111e6:	68fb      	ldr	r3, [r7, #12]
 80111e8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80111ea:	f043 0220 	orr.w	r2, r3, #32
 80111ee:	68fb      	ldr	r3, [r7, #12]
 80111f0:	655a      	str	r2, [r3, #84]	@ 0x54
 80111f2:	2303      	movs	r3, #3
 80111f4:	e013      	b.n	801121e <SPI_EndRxTransaction+0xc2>
 80111f6:	687b      	ldr	r3, [r7, #4]
 80111f8:	9300      	str	r3, [sp, #0]
 80111fa:	68bb      	ldr	r3, [r7, #8]
 80111fc:	2200      	movs	r2, #0
 80111fe:	2101      	movs	r1, #1
 8011200:	68f8      	ldr	r0, [r7, #12]
 8011202:	f7ff ff23 	bl	801104c <SPI_WaitFlagStateUntilTimeout>
 8011206:	4603      	mov	r3, r0
 8011208:	2b00      	cmp	r3, #0
 801120a:	d007      	beq.n	801121c <SPI_EndRxTransaction+0xc0>
 801120c:	68fb      	ldr	r3, [r7, #12]
 801120e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011210:	f043 0220 	orr.w	r2, r3, #32
 8011214:	68fb      	ldr	r3, [r7, #12]
 8011216:	655a      	str	r2, [r3, #84]	@ 0x54
 8011218:	2303      	movs	r3, #3
 801121a:	e000      	b.n	801121e <SPI_EndRxTransaction+0xc2>
 801121c:	2300      	movs	r3, #0
 801121e:	4618      	mov	r0, r3
 8011220:	3710      	adds	r7, #16
 8011222:	46bd      	mov	sp, r7
 8011224:	bd80      	pop	{r7, pc}
	...

08011228 <SPI_EndRxTxTransaction>:
 8011228:	b580      	push	{r7, lr}
 801122a:	b088      	sub	sp, #32
 801122c:	af02      	add	r7, sp, #8
 801122e:	60f8      	str	r0, [r7, #12]
 8011230:	60b9      	str	r1, [r7, #8]
 8011232:	607a      	str	r2, [r7, #4]
 8011234:	4b1b      	ldr	r3, [pc, #108]	@ (80112a4 <SPI_EndRxTxTransaction+0x7c>)
 8011236:	681b      	ldr	r3, [r3, #0]
 8011238:	4a1b      	ldr	r2, [pc, #108]	@ (80112a8 <SPI_EndRxTxTransaction+0x80>)
 801123a:	fba2 2303 	umull	r2, r3, r2, r3
 801123e:	0d5b      	lsrs	r3, r3, #21
 8011240:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8011244:	fb02 f303 	mul.w	r3, r2, r3
 8011248:	617b      	str	r3, [r7, #20]
 801124a:	68fb      	ldr	r3, [r7, #12]
 801124c:	685b      	ldr	r3, [r3, #4]
 801124e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8011252:	d112      	bne.n	801127a <SPI_EndRxTxTransaction+0x52>
 8011254:	687b      	ldr	r3, [r7, #4]
 8011256:	9300      	str	r3, [sp, #0]
 8011258:	68bb      	ldr	r3, [r7, #8]
 801125a:	2200      	movs	r2, #0
 801125c:	2180      	movs	r1, #128	@ 0x80
 801125e:	68f8      	ldr	r0, [r7, #12]
 8011260:	f7ff fef4 	bl	801104c <SPI_WaitFlagStateUntilTimeout>
 8011264:	4603      	mov	r3, r0
 8011266:	2b00      	cmp	r3, #0
 8011268:	d016      	beq.n	8011298 <SPI_EndRxTxTransaction+0x70>
 801126a:	68fb      	ldr	r3, [r7, #12]
 801126c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801126e:	f043 0220 	orr.w	r2, r3, #32
 8011272:	68fb      	ldr	r3, [r7, #12]
 8011274:	655a      	str	r2, [r3, #84]	@ 0x54
 8011276:	2303      	movs	r3, #3
 8011278:	e00f      	b.n	801129a <SPI_EndRxTxTransaction+0x72>
 801127a:	697b      	ldr	r3, [r7, #20]
 801127c:	2b00      	cmp	r3, #0
 801127e:	d00a      	beq.n	8011296 <SPI_EndRxTxTransaction+0x6e>
 8011280:	697b      	ldr	r3, [r7, #20]
 8011282:	3b01      	subs	r3, #1
 8011284:	617b      	str	r3, [r7, #20]
 8011286:	68fb      	ldr	r3, [r7, #12]
 8011288:	681b      	ldr	r3, [r3, #0]
 801128a:	689b      	ldr	r3, [r3, #8]
 801128c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011290:	2b80      	cmp	r3, #128	@ 0x80
 8011292:	d0f2      	beq.n	801127a <SPI_EndRxTxTransaction+0x52>
 8011294:	e000      	b.n	8011298 <SPI_EndRxTxTransaction+0x70>
 8011296:	bf00      	nop
 8011298:	2300      	movs	r3, #0
 801129a:	4618      	mov	r0, r3
 801129c:	3718      	adds	r7, #24
 801129e:	46bd      	mov	sp, r7
 80112a0:	bd80      	pop	{r7, pc}
 80112a2:	bf00      	nop
 80112a4:	20000004 	.word	0x20000004
 80112a8:	165e9f81 	.word	0x165e9f81

080112ac <HAL_TIM_Base_Init>:
 80112ac:	b580      	push	{r7, lr}
 80112ae:	b082      	sub	sp, #8
 80112b0:	af00      	add	r7, sp, #0
 80112b2:	6078      	str	r0, [r7, #4]
 80112b4:	687b      	ldr	r3, [r7, #4]
 80112b6:	2b00      	cmp	r3, #0
 80112b8:	d101      	bne.n	80112be <HAL_TIM_Base_Init+0x12>
 80112ba:	2301      	movs	r3, #1
 80112bc:	e041      	b.n	8011342 <HAL_TIM_Base_Init+0x96>
 80112be:	687b      	ldr	r3, [r7, #4]
 80112c0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80112c4:	b2db      	uxtb	r3, r3
 80112c6:	2b00      	cmp	r3, #0
 80112c8:	d106      	bne.n	80112d8 <HAL_TIM_Base_Init+0x2c>
 80112ca:	687b      	ldr	r3, [r7, #4]
 80112cc:	2200      	movs	r2, #0
 80112ce:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80112d2:	6878      	ldr	r0, [r7, #4]
 80112d4:	f7f3 f86a 	bl	80043ac <HAL_TIM_Base_MspInit>
 80112d8:	687b      	ldr	r3, [r7, #4]
 80112da:	2202      	movs	r2, #2
 80112dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80112e0:	687b      	ldr	r3, [r7, #4]
 80112e2:	681a      	ldr	r2, [r3, #0]
 80112e4:	687b      	ldr	r3, [r7, #4]
 80112e6:	3304      	adds	r3, #4
 80112e8:	4619      	mov	r1, r3
 80112ea:	4610      	mov	r0, r2
 80112ec:	f000 fd24 	bl	8011d38 <TIM_Base_SetConfig>
 80112f0:	687b      	ldr	r3, [r7, #4]
 80112f2:	2201      	movs	r2, #1
 80112f4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80112f8:	687b      	ldr	r3, [r7, #4]
 80112fa:	2201      	movs	r2, #1
 80112fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011300:	687b      	ldr	r3, [r7, #4]
 8011302:	2201      	movs	r2, #1
 8011304:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8011308:	687b      	ldr	r3, [r7, #4]
 801130a:	2201      	movs	r2, #1
 801130c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8011310:	687b      	ldr	r3, [r7, #4]
 8011312:	2201      	movs	r2, #1
 8011314:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011318:	687b      	ldr	r3, [r7, #4]
 801131a:	2201      	movs	r2, #1
 801131c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8011320:	687b      	ldr	r3, [r7, #4]
 8011322:	2201      	movs	r2, #1
 8011324:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8011328:	687b      	ldr	r3, [r7, #4]
 801132a:	2201      	movs	r2, #1
 801132c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8011330:	687b      	ldr	r3, [r7, #4]
 8011332:	2201      	movs	r2, #1
 8011334:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8011338:	687b      	ldr	r3, [r7, #4]
 801133a:	2201      	movs	r2, #1
 801133c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011340:	2300      	movs	r3, #0
 8011342:	4618      	mov	r0, r3
 8011344:	3708      	adds	r7, #8
 8011346:	46bd      	mov	sp, r7
 8011348:	bd80      	pop	{r7, pc}
	...

0801134c <HAL_TIM_Base_Start_IT>:
 801134c:	b480      	push	{r7}
 801134e:	b085      	sub	sp, #20
 8011350:	af00      	add	r7, sp, #0
 8011352:	6078      	str	r0, [r7, #4]
 8011354:	687b      	ldr	r3, [r7, #4]
 8011356:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 801135a:	b2db      	uxtb	r3, r3
 801135c:	2b01      	cmp	r3, #1
 801135e:	d001      	beq.n	8011364 <HAL_TIM_Base_Start_IT+0x18>
 8011360:	2301      	movs	r3, #1
 8011362:	e04e      	b.n	8011402 <HAL_TIM_Base_Start_IT+0xb6>
 8011364:	687b      	ldr	r3, [r7, #4]
 8011366:	2202      	movs	r2, #2
 8011368:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801136c:	687b      	ldr	r3, [r7, #4]
 801136e:	681b      	ldr	r3, [r3, #0]
 8011370:	68da      	ldr	r2, [r3, #12]
 8011372:	687b      	ldr	r3, [r7, #4]
 8011374:	681b      	ldr	r3, [r3, #0]
 8011376:	f042 0201 	orr.w	r2, r2, #1
 801137a:	60da      	str	r2, [r3, #12]
 801137c:	687b      	ldr	r3, [r7, #4]
 801137e:	681b      	ldr	r3, [r3, #0]
 8011380:	4a23      	ldr	r2, [pc, #140]	@ (8011410 <HAL_TIM_Base_Start_IT+0xc4>)
 8011382:	4293      	cmp	r3, r2
 8011384:	d022      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 8011386:	687b      	ldr	r3, [r7, #4]
 8011388:	681b      	ldr	r3, [r3, #0]
 801138a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801138e:	d01d      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 8011390:	687b      	ldr	r3, [r7, #4]
 8011392:	681b      	ldr	r3, [r3, #0]
 8011394:	4a1f      	ldr	r2, [pc, #124]	@ (8011414 <HAL_TIM_Base_Start_IT+0xc8>)
 8011396:	4293      	cmp	r3, r2
 8011398:	d018      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 801139a:	687b      	ldr	r3, [r7, #4]
 801139c:	681b      	ldr	r3, [r3, #0]
 801139e:	4a1e      	ldr	r2, [pc, #120]	@ (8011418 <HAL_TIM_Base_Start_IT+0xcc>)
 80113a0:	4293      	cmp	r3, r2
 80113a2:	d013      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 80113a4:	687b      	ldr	r3, [r7, #4]
 80113a6:	681b      	ldr	r3, [r3, #0]
 80113a8:	4a1c      	ldr	r2, [pc, #112]	@ (801141c <HAL_TIM_Base_Start_IT+0xd0>)
 80113aa:	4293      	cmp	r3, r2
 80113ac:	d00e      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 80113ae:	687b      	ldr	r3, [r7, #4]
 80113b0:	681b      	ldr	r3, [r3, #0]
 80113b2:	4a1b      	ldr	r2, [pc, #108]	@ (8011420 <HAL_TIM_Base_Start_IT+0xd4>)
 80113b4:	4293      	cmp	r3, r2
 80113b6:	d009      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 80113b8:	687b      	ldr	r3, [r7, #4]
 80113ba:	681b      	ldr	r3, [r3, #0]
 80113bc:	4a19      	ldr	r2, [pc, #100]	@ (8011424 <HAL_TIM_Base_Start_IT+0xd8>)
 80113be:	4293      	cmp	r3, r2
 80113c0:	d004      	beq.n	80113cc <HAL_TIM_Base_Start_IT+0x80>
 80113c2:	687b      	ldr	r3, [r7, #4]
 80113c4:	681b      	ldr	r3, [r3, #0]
 80113c6:	4a18      	ldr	r2, [pc, #96]	@ (8011428 <HAL_TIM_Base_Start_IT+0xdc>)
 80113c8:	4293      	cmp	r3, r2
 80113ca:	d111      	bne.n	80113f0 <HAL_TIM_Base_Start_IT+0xa4>
 80113cc:	687b      	ldr	r3, [r7, #4]
 80113ce:	681b      	ldr	r3, [r3, #0]
 80113d0:	689b      	ldr	r3, [r3, #8]
 80113d2:	f003 0307 	and.w	r3, r3, #7
 80113d6:	60fb      	str	r3, [r7, #12]
 80113d8:	68fb      	ldr	r3, [r7, #12]
 80113da:	2b06      	cmp	r3, #6
 80113dc:	d010      	beq.n	8011400 <HAL_TIM_Base_Start_IT+0xb4>
 80113de:	687b      	ldr	r3, [r7, #4]
 80113e0:	681b      	ldr	r3, [r3, #0]
 80113e2:	681a      	ldr	r2, [r3, #0]
 80113e4:	687b      	ldr	r3, [r7, #4]
 80113e6:	681b      	ldr	r3, [r3, #0]
 80113e8:	f042 0201 	orr.w	r2, r2, #1
 80113ec:	601a      	str	r2, [r3, #0]
 80113ee:	e007      	b.n	8011400 <HAL_TIM_Base_Start_IT+0xb4>
 80113f0:	687b      	ldr	r3, [r7, #4]
 80113f2:	681b      	ldr	r3, [r3, #0]
 80113f4:	681a      	ldr	r2, [r3, #0]
 80113f6:	687b      	ldr	r3, [r7, #4]
 80113f8:	681b      	ldr	r3, [r3, #0]
 80113fa:	f042 0201 	orr.w	r2, r2, #1
 80113fe:	601a      	str	r2, [r3, #0]
 8011400:	2300      	movs	r3, #0
 8011402:	4618      	mov	r0, r3
 8011404:	3714      	adds	r7, #20
 8011406:	46bd      	mov	sp, r7
 8011408:	f85d 7b04 	ldr.w	r7, [sp], #4
 801140c:	4770      	bx	lr
 801140e:	bf00      	nop
 8011410:	40010000 	.word	0x40010000
 8011414:	40000400 	.word	0x40000400
 8011418:	40000800 	.word	0x40000800
 801141c:	40000c00 	.word	0x40000c00
 8011420:	40010400 	.word	0x40010400
 8011424:	40014000 	.word	0x40014000
 8011428:	40001800 	.word	0x40001800

0801142c <HAL_TIM_OC_Init>:
 801142c:	b580      	push	{r7, lr}
 801142e:	b082      	sub	sp, #8
 8011430:	af00      	add	r7, sp, #0
 8011432:	6078      	str	r0, [r7, #4]
 8011434:	687b      	ldr	r3, [r7, #4]
 8011436:	2b00      	cmp	r3, #0
 8011438:	d101      	bne.n	801143e <HAL_TIM_OC_Init+0x12>
 801143a:	2301      	movs	r3, #1
 801143c:	e041      	b.n	80114c2 <HAL_TIM_OC_Init+0x96>
 801143e:	687b      	ldr	r3, [r7, #4]
 8011440:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8011444:	b2db      	uxtb	r3, r3
 8011446:	2b00      	cmp	r3, #0
 8011448:	d106      	bne.n	8011458 <HAL_TIM_OC_Init+0x2c>
 801144a:	687b      	ldr	r3, [r7, #4]
 801144c:	2200      	movs	r2, #0
 801144e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011452:	6878      	ldr	r0, [r7, #4]
 8011454:	f000 f839 	bl	80114ca <HAL_TIM_OC_MspInit>
 8011458:	687b      	ldr	r3, [r7, #4]
 801145a:	2202      	movs	r2, #2
 801145c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011460:	687b      	ldr	r3, [r7, #4]
 8011462:	681a      	ldr	r2, [r3, #0]
 8011464:	687b      	ldr	r3, [r7, #4]
 8011466:	3304      	adds	r3, #4
 8011468:	4619      	mov	r1, r3
 801146a:	4610      	mov	r0, r2
 801146c:	f000 fc64 	bl	8011d38 <TIM_Base_SetConfig>
 8011470:	687b      	ldr	r3, [r7, #4]
 8011472:	2201      	movs	r2, #1
 8011474:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8011478:	687b      	ldr	r3, [r7, #4]
 801147a:	2201      	movs	r2, #1
 801147c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011480:	687b      	ldr	r3, [r7, #4]
 8011482:	2201      	movs	r2, #1
 8011484:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8011488:	687b      	ldr	r3, [r7, #4]
 801148a:	2201      	movs	r2, #1
 801148c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8011490:	687b      	ldr	r3, [r7, #4]
 8011492:	2201      	movs	r2, #1
 8011494:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011498:	687b      	ldr	r3, [r7, #4]
 801149a:	2201      	movs	r2, #1
 801149c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80114a0:	687b      	ldr	r3, [r7, #4]
 80114a2:	2201      	movs	r2, #1
 80114a4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80114a8:	687b      	ldr	r3, [r7, #4]
 80114aa:	2201      	movs	r2, #1
 80114ac:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80114b0:	687b      	ldr	r3, [r7, #4]
 80114b2:	2201      	movs	r2, #1
 80114b4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80114b8:	687b      	ldr	r3, [r7, #4]
 80114ba:	2201      	movs	r2, #1
 80114bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80114c0:	2300      	movs	r3, #0
 80114c2:	4618      	mov	r0, r3
 80114c4:	3708      	adds	r7, #8
 80114c6:	46bd      	mov	sp, r7
 80114c8:	bd80      	pop	{r7, pc}

080114ca <HAL_TIM_OC_MspInit>:
 80114ca:	b480      	push	{r7}
 80114cc:	b083      	sub	sp, #12
 80114ce:	af00      	add	r7, sp, #0
 80114d0:	6078      	str	r0, [r7, #4]
 80114d2:	bf00      	nop
 80114d4:	370c      	adds	r7, #12
 80114d6:	46bd      	mov	sp, r7
 80114d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114dc:	4770      	bx	lr

080114de <HAL_TIM_PWM_Init>:
 80114de:	b580      	push	{r7, lr}
 80114e0:	b082      	sub	sp, #8
 80114e2:	af00      	add	r7, sp, #0
 80114e4:	6078      	str	r0, [r7, #4]
 80114e6:	687b      	ldr	r3, [r7, #4]
 80114e8:	2b00      	cmp	r3, #0
 80114ea:	d101      	bne.n	80114f0 <HAL_TIM_PWM_Init+0x12>
 80114ec:	2301      	movs	r3, #1
 80114ee:	e041      	b.n	8011574 <HAL_TIM_PWM_Init+0x96>
 80114f0:	687b      	ldr	r3, [r7, #4]
 80114f2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80114f6:	b2db      	uxtb	r3, r3
 80114f8:	2b00      	cmp	r3, #0
 80114fa:	d106      	bne.n	801150a <HAL_TIM_PWM_Init+0x2c>
 80114fc:	687b      	ldr	r3, [r7, #4]
 80114fe:	2200      	movs	r2, #0
 8011500:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011504:	6878      	ldr	r0, [r7, #4]
 8011506:	f7f2 ff8f 	bl	8004428 <HAL_TIM_PWM_MspInit>
 801150a:	687b      	ldr	r3, [r7, #4]
 801150c:	2202      	movs	r2, #2
 801150e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011512:	687b      	ldr	r3, [r7, #4]
 8011514:	681a      	ldr	r2, [r3, #0]
 8011516:	687b      	ldr	r3, [r7, #4]
 8011518:	3304      	adds	r3, #4
 801151a:	4619      	mov	r1, r3
 801151c:	4610      	mov	r0, r2
 801151e:	f000 fc0b 	bl	8011d38 <TIM_Base_SetConfig>
 8011522:	687b      	ldr	r3, [r7, #4]
 8011524:	2201      	movs	r2, #1
 8011526:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 801152a:	687b      	ldr	r3, [r7, #4]
 801152c:	2201      	movs	r2, #1
 801152e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011532:	687b      	ldr	r3, [r7, #4]
 8011534:	2201      	movs	r2, #1
 8011536:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 801153a:	687b      	ldr	r3, [r7, #4]
 801153c:	2201      	movs	r2, #1
 801153e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8011542:	687b      	ldr	r3, [r7, #4]
 8011544:	2201      	movs	r2, #1
 8011546:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 801154a:	687b      	ldr	r3, [r7, #4]
 801154c:	2201      	movs	r2, #1
 801154e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8011552:	687b      	ldr	r3, [r7, #4]
 8011554:	2201      	movs	r2, #1
 8011556:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 801155a:	687b      	ldr	r3, [r7, #4]
 801155c:	2201      	movs	r2, #1
 801155e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8011562:	687b      	ldr	r3, [r7, #4]
 8011564:	2201      	movs	r2, #1
 8011566:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801156a:	687b      	ldr	r3, [r7, #4]
 801156c:	2201      	movs	r2, #1
 801156e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011572:	2300      	movs	r3, #0
 8011574:	4618      	mov	r0, r3
 8011576:	3708      	adds	r7, #8
 8011578:	46bd      	mov	sp, r7
 801157a:	bd80      	pop	{r7, pc}

0801157c <HAL_TIM_PWM_Start>:
 801157c:	b580      	push	{r7, lr}
 801157e:	b084      	sub	sp, #16
 8011580:	af00      	add	r7, sp, #0
 8011582:	6078      	str	r0, [r7, #4]
 8011584:	6039      	str	r1, [r7, #0]
 8011586:	683b      	ldr	r3, [r7, #0]
 8011588:	2b00      	cmp	r3, #0
 801158a:	d109      	bne.n	80115a0 <HAL_TIM_PWM_Start+0x24>
 801158c:	687b      	ldr	r3, [r7, #4]
 801158e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8011592:	b2db      	uxtb	r3, r3
 8011594:	2b01      	cmp	r3, #1
 8011596:	bf14      	ite	ne
 8011598:	2301      	movne	r3, #1
 801159a:	2300      	moveq	r3, #0
 801159c:	b2db      	uxtb	r3, r3
 801159e:	e022      	b.n	80115e6 <HAL_TIM_PWM_Start+0x6a>
 80115a0:	683b      	ldr	r3, [r7, #0]
 80115a2:	2b04      	cmp	r3, #4
 80115a4:	d109      	bne.n	80115ba <HAL_TIM_PWM_Start+0x3e>
 80115a6:	687b      	ldr	r3, [r7, #4]
 80115a8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80115ac:	b2db      	uxtb	r3, r3
 80115ae:	2b01      	cmp	r3, #1
 80115b0:	bf14      	ite	ne
 80115b2:	2301      	movne	r3, #1
 80115b4:	2300      	moveq	r3, #0
 80115b6:	b2db      	uxtb	r3, r3
 80115b8:	e015      	b.n	80115e6 <HAL_TIM_PWM_Start+0x6a>
 80115ba:	683b      	ldr	r3, [r7, #0]
 80115bc:	2b08      	cmp	r3, #8
 80115be:	d109      	bne.n	80115d4 <HAL_TIM_PWM_Start+0x58>
 80115c0:	687b      	ldr	r3, [r7, #4]
 80115c2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80115c6:	b2db      	uxtb	r3, r3
 80115c8:	2b01      	cmp	r3, #1
 80115ca:	bf14      	ite	ne
 80115cc:	2301      	movne	r3, #1
 80115ce:	2300      	moveq	r3, #0
 80115d0:	b2db      	uxtb	r3, r3
 80115d2:	e008      	b.n	80115e6 <HAL_TIM_PWM_Start+0x6a>
 80115d4:	687b      	ldr	r3, [r7, #4]
 80115d6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80115da:	b2db      	uxtb	r3, r3
 80115dc:	2b01      	cmp	r3, #1
 80115de:	bf14      	ite	ne
 80115e0:	2301      	movne	r3, #1
 80115e2:	2300      	moveq	r3, #0
 80115e4:	b2db      	uxtb	r3, r3
 80115e6:	2b00      	cmp	r3, #0
 80115e8:	d001      	beq.n	80115ee <HAL_TIM_PWM_Start+0x72>
 80115ea:	2301      	movs	r3, #1
 80115ec:	e07c      	b.n	80116e8 <HAL_TIM_PWM_Start+0x16c>
 80115ee:	683b      	ldr	r3, [r7, #0]
 80115f0:	2b00      	cmp	r3, #0
 80115f2:	d104      	bne.n	80115fe <HAL_TIM_PWM_Start+0x82>
 80115f4:	687b      	ldr	r3, [r7, #4]
 80115f6:	2202      	movs	r2, #2
 80115f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80115fc:	e013      	b.n	8011626 <HAL_TIM_PWM_Start+0xaa>
 80115fe:	683b      	ldr	r3, [r7, #0]
 8011600:	2b04      	cmp	r3, #4
 8011602:	d104      	bne.n	801160e <HAL_TIM_PWM_Start+0x92>
 8011604:	687b      	ldr	r3, [r7, #4]
 8011606:	2202      	movs	r2, #2
 8011608:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 801160c:	e00b      	b.n	8011626 <HAL_TIM_PWM_Start+0xaa>
 801160e:	683b      	ldr	r3, [r7, #0]
 8011610:	2b08      	cmp	r3, #8
 8011612:	d104      	bne.n	801161e <HAL_TIM_PWM_Start+0xa2>
 8011614:	687b      	ldr	r3, [r7, #4]
 8011616:	2202      	movs	r2, #2
 8011618:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 801161c:	e003      	b.n	8011626 <HAL_TIM_PWM_Start+0xaa>
 801161e:	687b      	ldr	r3, [r7, #4]
 8011620:	2202      	movs	r2, #2
 8011622:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8011626:	687b      	ldr	r3, [r7, #4]
 8011628:	681b      	ldr	r3, [r3, #0]
 801162a:	2201      	movs	r2, #1
 801162c:	6839      	ldr	r1, [r7, #0]
 801162e:	4618      	mov	r0, r3
 8011630:	f000 fe6c 	bl	801230c <TIM_CCxChannelCmd>
 8011634:	687b      	ldr	r3, [r7, #4]
 8011636:	681b      	ldr	r3, [r3, #0]
 8011638:	4a2d      	ldr	r2, [pc, #180]	@ (80116f0 <HAL_TIM_PWM_Start+0x174>)
 801163a:	4293      	cmp	r3, r2
 801163c:	d004      	beq.n	8011648 <HAL_TIM_PWM_Start+0xcc>
 801163e:	687b      	ldr	r3, [r7, #4]
 8011640:	681b      	ldr	r3, [r3, #0]
 8011642:	4a2c      	ldr	r2, [pc, #176]	@ (80116f4 <HAL_TIM_PWM_Start+0x178>)
 8011644:	4293      	cmp	r3, r2
 8011646:	d101      	bne.n	801164c <HAL_TIM_PWM_Start+0xd0>
 8011648:	2301      	movs	r3, #1
 801164a:	e000      	b.n	801164e <HAL_TIM_PWM_Start+0xd2>
 801164c:	2300      	movs	r3, #0
 801164e:	2b00      	cmp	r3, #0
 8011650:	d007      	beq.n	8011662 <HAL_TIM_PWM_Start+0xe6>
 8011652:	687b      	ldr	r3, [r7, #4]
 8011654:	681b      	ldr	r3, [r3, #0]
 8011656:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8011658:	687b      	ldr	r3, [r7, #4]
 801165a:	681b      	ldr	r3, [r3, #0]
 801165c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8011660:	645a      	str	r2, [r3, #68]	@ 0x44
 8011662:	687b      	ldr	r3, [r7, #4]
 8011664:	681b      	ldr	r3, [r3, #0]
 8011666:	4a22      	ldr	r2, [pc, #136]	@ (80116f0 <HAL_TIM_PWM_Start+0x174>)
 8011668:	4293      	cmp	r3, r2
 801166a:	d022      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 801166c:	687b      	ldr	r3, [r7, #4]
 801166e:	681b      	ldr	r3, [r3, #0]
 8011670:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011674:	d01d      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 8011676:	687b      	ldr	r3, [r7, #4]
 8011678:	681b      	ldr	r3, [r3, #0]
 801167a:	4a1f      	ldr	r2, [pc, #124]	@ (80116f8 <HAL_TIM_PWM_Start+0x17c>)
 801167c:	4293      	cmp	r3, r2
 801167e:	d018      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 8011680:	687b      	ldr	r3, [r7, #4]
 8011682:	681b      	ldr	r3, [r3, #0]
 8011684:	4a1d      	ldr	r2, [pc, #116]	@ (80116fc <HAL_TIM_PWM_Start+0x180>)
 8011686:	4293      	cmp	r3, r2
 8011688:	d013      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 801168a:	687b      	ldr	r3, [r7, #4]
 801168c:	681b      	ldr	r3, [r3, #0]
 801168e:	4a1c      	ldr	r2, [pc, #112]	@ (8011700 <HAL_TIM_PWM_Start+0x184>)
 8011690:	4293      	cmp	r3, r2
 8011692:	d00e      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 8011694:	687b      	ldr	r3, [r7, #4]
 8011696:	681b      	ldr	r3, [r3, #0]
 8011698:	4a16      	ldr	r2, [pc, #88]	@ (80116f4 <HAL_TIM_PWM_Start+0x178>)
 801169a:	4293      	cmp	r3, r2
 801169c:	d009      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 801169e:	687b      	ldr	r3, [r7, #4]
 80116a0:	681b      	ldr	r3, [r3, #0]
 80116a2:	4a18      	ldr	r2, [pc, #96]	@ (8011704 <HAL_TIM_PWM_Start+0x188>)
 80116a4:	4293      	cmp	r3, r2
 80116a6:	d004      	beq.n	80116b2 <HAL_TIM_PWM_Start+0x136>
 80116a8:	687b      	ldr	r3, [r7, #4]
 80116aa:	681b      	ldr	r3, [r3, #0]
 80116ac:	4a16      	ldr	r2, [pc, #88]	@ (8011708 <HAL_TIM_PWM_Start+0x18c>)
 80116ae:	4293      	cmp	r3, r2
 80116b0:	d111      	bne.n	80116d6 <HAL_TIM_PWM_Start+0x15a>
 80116b2:	687b      	ldr	r3, [r7, #4]
 80116b4:	681b      	ldr	r3, [r3, #0]
 80116b6:	689b      	ldr	r3, [r3, #8]
 80116b8:	f003 0307 	and.w	r3, r3, #7
 80116bc:	60fb      	str	r3, [r7, #12]
 80116be:	68fb      	ldr	r3, [r7, #12]
 80116c0:	2b06      	cmp	r3, #6
 80116c2:	d010      	beq.n	80116e6 <HAL_TIM_PWM_Start+0x16a>
 80116c4:	687b      	ldr	r3, [r7, #4]
 80116c6:	681b      	ldr	r3, [r3, #0]
 80116c8:	681a      	ldr	r2, [r3, #0]
 80116ca:	687b      	ldr	r3, [r7, #4]
 80116cc:	681b      	ldr	r3, [r3, #0]
 80116ce:	f042 0201 	orr.w	r2, r2, #1
 80116d2:	601a      	str	r2, [r3, #0]
 80116d4:	e007      	b.n	80116e6 <HAL_TIM_PWM_Start+0x16a>
 80116d6:	687b      	ldr	r3, [r7, #4]
 80116d8:	681b      	ldr	r3, [r3, #0]
 80116da:	681a      	ldr	r2, [r3, #0]
 80116dc:	687b      	ldr	r3, [r7, #4]
 80116de:	681b      	ldr	r3, [r3, #0]
 80116e0:	f042 0201 	orr.w	r2, r2, #1
 80116e4:	601a      	str	r2, [r3, #0]
 80116e6:	2300      	movs	r3, #0
 80116e8:	4618      	mov	r0, r3
 80116ea:	3710      	adds	r7, #16
 80116ec:	46bd      	mov	sp, r7
 80116ee:	bd80      	pop	{r7, pc}
 80116f0:	40010000 	.word	0x40010000
 80116f4:	40010400 	.word	0x40010400
 80116f8:	40000400 	.word	0x40000400
 80116fc:	40000800 	.word	0x40000800
 8011700:	40000c00 	.word	0x40000c00
 8011704:	40014000 	.word	0x40014000
 8011708:	40001800 	.word	0x40001800

0801170c <HAL_TIM_IRQHandler>:
 801170c:	b580      	push	{r7, lr}
 801170e:	b082      	sub	sp, #8
 8011710:	af00      	add	r7, sp, #0
 8011712:	6078      	str	r0, [r7, #4]
 8011714:	687b      	ldr	r3, [r7, #4]
 8011716:	681b      	ldr	r3, [r3, #0]
 8011718:	691b      	ldr	r3, [r3, #16]
 801171a:	f003 0302 	and.w	r3, r3, #2
 801171e:	2b02      	cmp	r3, #2
 8011720:	d122      	bne.n	8011768 <HAL_TIM_IRQHandler+0x5c>
 8011722:	687b      	ldr	r3, [r7, #4]
 8011724:	681b      	ldr	r3, [r3, #0]
 8011726:	68db      	ldr	r3, [r3, #12]
 8011728:	f003 0302 	and.w	r3, r3, #2
 801172c:	2b02      	cmp	r3, #2
 801172e:	d11b      	bne.n	8011768 <HAL_TIM_IRQHandler+0x5c>
 8011730:	687b      	ldr	r3, [r7, #4]
 8011732:	681b      	ldr	r3, [r3, #0]
 8011734:	f06f 0202 	mvn.w	r2, #2
 8011738:	611a      	str	r2, [r3, #16]
 801173a:	687b      	ldr	r3, [r7, #4]
 801173c:	2201      	movs	r2, #1
 801173e:	771a      	strb	r2, [r3, #28]
 8011740:	687b      	ldr	r3, [r7, #4]
 8011742:	681b      	ldr	r3, [r3, #0]
 8011744:	699b      	ldr	r3, [r3, #24]
 8011746:	f003 0303 	and.w	r3, r3, #3
 801174a:	2b00      	cmp	r3, #0
 801174c:	d003      	beq.n	8011756 <HAL_TIM_IRQHandler+0x4a>
 801174e:	6878      	ldr	r0, [r7, #4]
 8011750:	f000 fad3 	bl	8011cfa <HAL_TIM_IC_CaptureCallback>
 8011754:	e005      	b.n	8011762 <HAL_TIM_IRQHandler+0x56>
 8011756:	6878      	ldr	r0, [r7, #4]
 8011758:	f000 fac5 	bl	8011ce6 <HAL_TIM_OC_DelayElapsedCallback>
 801175c:	6878      	ldr	r0, [r7, #4]
 801175e:	f000 fad6 	bl	8011d0e <HAL_TIM_PWM_PulseFinishedCallback>
 8011762:	687b      	ldr	r3, [r7, #4]
 8011764:	2200      	movs	r2, #0
 8011766:	771a      	strb	r2, [r3, #28]
 8011768:	687b      	ldr	r3, [r7, #4]
 801176a:	681b      	ldr	r3, [r3, #0]
 801176c:	691b      	ldr	r3, [r3, #16]
 801176e:	f003 0304 	and.w	r3, r3, #4
 8011772:	2b04      	cmp	r3, #4
 8011774:	d122      	bne.n	80117bc <HAL_TIM_IRQHandler+0xb0>
 8011776:	687b      	ldr	r3, [r7, #4]
 8011778:	681b      	ldr	r3, [r3, #0]
 801177a:	68db      	ldr	r3, [r3, #12]
 801177c:	f003 0304 	and.w	r3, r3, #4
 8011780:	2b04      	cmp	r3, #4
 8011782:	d11b      	bne.n	80117bc <HAL_TIM_IRQHandler+0xb0>
 8011784:	687b      	ldr	r3, [r7, #4]
 8011786:	681b      	ldr	r3, [r3, #0]
 8011788:	f06f 0204 	mvn.w	r2, #4
 801178c:	611a      	str	r2, [r3, #16]
 801178e:	687b      	ldr	r3, [r7, #4]
 8011790:	2202      	movs	r2, #2
 8011792:	771a      	strb	r2, [r3, #28]
 8011794:	687b      	ldr	r3, [r7, #4]
 8011796:	681b      	ldr	r3, [r3, #0]
 8011798:	699b      	ldr	r3, [r3, #24]
 801179a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 801179e:	2b00      	cmp	r3, #0
 80117a0:	d003      	beq.n	80117aa <HAL_TIM_IRQHandler+0x9e>
 80117a2:	6878      	ldr	r0, [r7, #4]
 80117a4:	f000 faa9 	bl	8011cfa <HAL_TIM_IC_CaptureCallback>
 80117a8:	e005      	b.n	80117b6 <HAL_TIM_IRQHandler+0xaa>
 80117aa:	6878      	ldr	r0, [r7, #4]
 80117ac:	f000 fa9b 	bl	8011ce6 <HAL_TIM_OC_DelayElapsedCallback>
 80117b0:	6878      	ldr	r0, [r7, #4]
 80117b2:	f000 faac 	bl	8011d0e <HAL_TIM_PWM_PulseFinishedCallback>
 80117b6:	687b      	ldr	r3, [r7, #4]
 80117b8:	2200      	movs	r2, #0
 80117ba:	771a      	strb	r2, [r3, #28]
 80117bc:	687b      	ldr	r3, [r7, #4]
 80117be:	681b      	ldr	r3, [r3, #0]
 80117c0:	691b      	ldr	r3, [r3, #16]
 80117c2:	f003 0308 	and.w	r3, r3, #8
 80117c6:	2b08      	cmp	r3, #8
 80117c8:	d122      	bne.n	8011810 <HAL_TIM_IRQHandler+0x104>
 80117ca:	687b      	ldr	r3, [r7, #4]
 80117cc:	681b      	ldr	r3, [r3, #0]
 80117ce:	68db      	ldr	r3, [r3, #12]
 80117d0:	f003 0308 	and.w	r3, r3, #8
 80117d4:	2b08      	cmp	r3, #8
 80117d6:	d11b      	bne.n	8011810 <HAL_TIM_IRQHandler+0x104>
 80117d8:	687b      	ldr	r3, [r7, #4]
 80117da:	681b      	ldr	r3, [r3, #0]
 80117dc:	f06f 0208 	mvn.w	r2, #8
 80117e0:	611a      	str	r2, [r3, #16]
 80117e2:	687b      	ldr	r3, [r7, #4]
 80117e4:	2204      	movs	r2, #4
 80117e6:	771a      	strb	r2, [r3, #28]
 80117e8:	687b      	ldr	r3, [r7, #4]
 80117ea:	681b      	ldr	r3, [r3, #0]
 80117ec:	69db      	ldr	r3, [r3, #28]
 80117ee:	f003 0303 	and.w	r3, r3, #3
 80117f2:	2b00      	cmp	r3, #0
 80117f4:	d003      	beq.n	80117fe <HAL_TIM_IRQHandler+0xf2>
 80117f6:	6878      	ldr	r0, [r7, #4]
 80117f8:	f000 fa7f 	bl	8011cfa <HAL_TIM_IC_CaptureCallback>
 80117fc:	e005      	b.n	801180a <HAL_TIM_IRQHandler+0xfe>
 80117fe:	6878      	ldr	r0, [r7, #4]
 8011800:	f000 fa71 	bl	8011ce6 <HAL_TIM_OC_DelayElapsedCallback>
 8011804:	6878      	ldr	r0, [r7, #4]
 8011806:	f000 fa82 	bl	8011d0e <HAL_TIM_PWM_PulseFinishedCallback>
 801180a:	687b      	ldr	r3, [r7, #4]
 801180c:	2200      	movs	r2, #0
 801180e:	771a      	strb	r2, [r3, #28]
 8011810:	687b      	ldr	r3, [r7, #4]
 8011812:	681b      	ldr	r3, [r3, #0]
 8011814:	691b      	ldr	r3, [r3, #16]
 8011816:	f003 0310 	and.w	r3, r3, #16
 801181a:	2b10      	cmp	r3, #16
 801181c:	d122      	bne.n	8011864 <HAL_TIM_IRQHandler+0x158>
 801181e:	687b      	ldr	r3, [r7, #4]
 8011820:	681b      	ldr	r3, [r3, #0]
 8011822:	68db      	ldr	r3, [r3, #12]
 8011824:	f003 0310 	and.w	r3, r3, #16
 8011828:	2b10      	cmp	r3, #16
 801182a:	d11b      	bne.n	8011864 <HAL_TIM_IRQHandler+0x158>
 801182c:	687b      	ldr	r3, [r7, #4]
 801182e:	681b      	ldr	r3, [r3, #0]
 8011830:	f06f 0210 	mvn.w	r2, #16
 8011834:	611a      	str	r2, [r3, #16]
 8011836:	687b      	ldr	r3, [r7, #4]
 8011838:	2208      	movs	r2, #8
 801183a:	771a      	strb	r2, [r3, #28]
 801183c:	687b      	ldr	r3, [r7, #4]
 801183e:	681b      	ldr	r3, [r3, #0]
 8011840:	69db      	ldr	r3, [r3, #28]
 8011842:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8011846:	2b00      	cmp	r3, #0
 8011848:	d003      	beq.n	8011852 <HAL_TIM_IRQHandler+0x146>
 801184a:	6878      	ldr	r0, [r7, #4]
 801184c:	f000 fa55 	bl	8011cfa <HAL_TIM_IC_CaptureCallback>
 8011850:	e005      	b.n	801185e <HAL_TIM_IRQHandler+0x152>
 8011852:	6878      	ldr	r0, [r7, #4]
 8011854:	f000 fa47 	bl	8011ce6 <HAL_TIM_OC_DelayElapsedCallback>
 8011858:	6878      	ldr	r0, [r7, #4]
 801185a:	f000 fa58 	bl	8011d0e <HAL_TIM_PWM_PulseFinishedCallback>
 801185e:	687b      	ldr	r3, [r7, #4]
 8011860:	2200      	movs	r2, #0
 8011862:	771a      	strb	r2, [r3, #28]
 8011864:	687b      	ldr	r3, [r7, #4]
 8011866:	681b      	ldr	r3, [r3, #0]
 8011868:	691b      	ldr	r3, [r3, #16]
 801186a:	f003 0301 	and.w	r3, r3, #1
 801186e:	2b01      	cmp	r3, #1
 8011870:	d10e      	bne.n	8011890 <HAL_TIM_IRQHandler+0x184>
 8011872:	687b      	ldr	r3, [r7, #4]
 8011874:	681b      	ldr	r3, [r3, #0]
 8011876:	68db      	ldr	r3, [r3, #12]
 8011878:	f003 0301 	and.w	r3, r3, #1
 801187c:	2b01      	cmp	r3, #1
 801187e:	d107      	bne.n	8011890 <HAL_TIM_IRQHandler+0x184>
 8011880:	687b      	ldr	r3, [r7, #4]
 8011882:	681b      	ldr	r3, [r3, #0]
 8011884:	f06f 0201 	mvn.w	r2, #1
 8011888:	611a      	str	r2, [r3, #16]
 801188a:	6878      	ldr	r0, [r7, #4]
 801188c:	f7f1 ffa2 	bl	80037d4 <HAL_TIM_PeriodElapsedCallback>
 8011890:	687b      	ldr	r3, [r7, #4]
 8011892:	681b      	ldr	r3, [r3, #0]
 8011894:	691b      	ldr	r3, [r3, #16]
 8011896:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 801189a:	2b80      	cmp	r3, #128	@ 0x80
 801189c:	d10e      	bne.n	80118bc <HAL_TIM_IRQHandler+0x1b0>
 801189e:	687b      	ldr	r3, [r7, #4]
 80118a0:	681b      	ldr	r3, [r3, #0]
 80118a2:	68db      	ldr	r3, [r3, #12]
 80118a4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80118a8:	2b80      	cmp	r3, #128	@ 0x80
 80118aa:	d107      	bne.n	80118bc <HAL_TIM_IRQHandler+0x1b0>
 80118ac:	687b      	ldr	r3, [r7, #4]
 80118ae:	681b      	ldr	r3, [r3, #0]
 80118b0:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 80118b4:	611a      	str	r2, [r3, #16]
 80118b6:	6878      	ldr	r0, [r7, #4]
 80118b8:	f000 fdd4 	bl	8012464 <HAL_TIMEx_BreakCallback>
 80118bc:	687b      	ldr	r3, [r7, #4]
 80118be:	681b      	ldr	r3, [r3, #0]
 80118c0:	691b      	ldr	r3, [r3, #16]
 80118c2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80118c6:	2b40      	cmp	r3, #64	@ 0x40
 80118c8:	d10e      	bne.n	80118e8 <HAL_TIM_IRQHandler+0x1dc>
 80118ca:	687b      	ldr	r3, [r7, #4]
 80118cc:	681b      	ldr	r3, [r3, #0]
 80118ce:	68db      	ldr	r3, [r3, #12]
 80118d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80118d4:	2b40      	cmp	r3, #64	@ 0x40
 80118d6:	d107      	bne.n	80118e8 <HAL_TIM_IRQHandler+0x1dc>
 80118d8:	687b      	ldr	r3, [r7, #4]
 80118da:	681b      	ldr	r3, [r3, #0]
 80118dc:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80118e0:	611a      	str	r2, [r3, #16]
 80118e2:	6878      	ldr	r0, [r7, #4]
 80118e4:	f000 fa1d 	bl	8011d22 <HAL_TIM_TriggerCallback>
 80118e8:	687b      	ldr	r3, [r7, #4]
 80118ea:	681b      	ldr	r3, [r3, #0]
 80118ec:	691b      	ldr	r3, [r3, #16]
 80118ee:	f003 0320 	and.w	r3, r3, #32
 80118f2:	2b20      	cmp	r3, #32
 80118f4:	d10e      	bne.n	8011914 <HAL_TIM_IRQHandler+0x208>
 80118f6:	687b      	ldr	r3, [r7, #4]
 80118f8:	681b      	ldr	r3, [r3, #0]
 80118fa:	68db      	ldr	r3, [r3, #12]
 80118fc:	f003 0320 	and.w	r3, r3, #32
 8011900:	2b20      	cmp	r3, #32
 8011902:	d107      	bne.n	8011914 <HAL_TIM_IRQHandler+0x208>
 8011904:	687b      	ldr	r3, [r7, #4]
 8011906:	681b      	ldr	r3, [r3, #0]
 8011908:	f06f 0220 	mvn.w	r2, #32
 801190c:	611a      	str	r2, [r3, #16]
 801190e:	6878      	ldr	r0, [r7, #4]
 8011910:	f000 fd9e 	bl	8012450 <HAL_TIMEx_CommutCallback>
 8011914:	bf00      	nop
 8011916:	3708      	adds	r7, #8
 8011918:	46bd      	mov	sp, r7
 801191a:	bd80      	pop	{r7, pc}

0801191c <HAL_TIM_OC_ConfigChannel>:
 801191c:	b580      	push	{r7, lr}
 801191e:	b086      	sub	sp, #24
 8011920:	af00      	add	r7, sp, #0
 8011922:	60f8      	str	r0, [r7, #12]
 8011924:	60b9      	str	r1, [r7, #8]
 8011926:	607a      	str	r2, [r7, #4]
 8011928:	2300      	movs	r3, #0
 801192a:	75fb      	strb	r3, [r7, #23]
 801192c:	68fb      	ldr	r3, [r7, #12]
 801192e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011932:	2b01      	cmp	r3, #1
 8011934:	d101      	bne.n	801193a <HAL_TIM_OC_ConfigChannel+0x1e>
 8011936:	2302      	movs	r3, #2
 8011938:	e048      	b.n	80119cc <HAL_TIM_OC_ConfigChannel+0xb0>
 801193a:	68fb      	ldr	r3, [r7, #12]
 801193c:	2201      	movs	r2, #1
 801193e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011942:	687b      	ldr	r3, [r7, #4]
 8011944:	2b0c      	cmp	r3, #12
 8011946:	d839      	bhi.n	80119bc <HAL_TIM_OC_ConfigChannel+0xa0>
 8011948:	a201      	add	r2, pc, #4	@ (adr r2, 8011950 <HAL_TIM_OC_ConfigChannel+0x34>)
 801194a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801194e:	bf00      	nop
 8011950:	08011985 	.word	0x08011985
 8011954:	080119bd 	.word	0x080119bd
 8011958:	080119bd 	.word	0x080119bd
 801195c:	080119bd 	.word	0x080119bd
 8011960:	08011993 	.word	0x08011993
 8011964:	080119bd 	.word	0x080119bd
 8011968:	080119bd 	.word	0x080119bd
 801196c:	080119bd 	.word	0x080119bd
 8011970:	080119a1 	.word	0x080119a1
 8011974:	080119bd 	.word	0x080119bd
 8011978:	080119bd 	.word	0x080119bd
 801197c:	080119bd 	.word	0x080119bd
 8011980:	080119af 	.word	0x080119af
 8011984:	68fb      	ldr	r3, [r7, #12]
 8011986:	681b      	ldr	r3, [r3, #0]
 8011988:	68b9      	ldr	r1, [r7, #8]
 801198a:	4618      	mov	r0, r3
 801198c:	f000 fa74 	bl	8011e78 <TIM_OC1_SetConfig>
 8011990:	e017      	b.n	80119c2 <HAL_TIM_OC_ConfigChannel+0xa6>
 8011992:	68fb      	ldr	r3, [r7, #12]
 8011994:	681b      	ldr	r3, [r3, #0]
 8011996:	68b9      	ldr	r1, [r7, #8]
 8011998:	4618      	mov	r0, r3
 801199a:	f000 fadd 	bl	8011f58 <TIM_OC2_SetConfig>
 801199e:	e010      	b.n	80119c2 <HAL_TIM_OC_ConfigChannel+0xa6>
 80119a0:	68fb      	ldr	r3, [r7, #12]
 80119a2:	681b      	ldr	r3, [r3, #0]
 80119a4:	68b9      	ldr	r1, [r7, #8]
 80119a6:	4618      	mov	r0, r3
 80119a8:	f000 fb4c 	bl	8012044 <TIM_OC3_SetConfig>
 80119ac:	e009      	b.n	80119c2 <HAL_TIM_OC_ConfigChannel+0xa6>
 80119ae:	68fb      	ldr	r3, [r7, #12]
 80119b0:	681b      	ldr	r3, [r3, #0]
 80119b2:	68b9      	ldr	r1, [r7, #8]
 80119b4:	4618      	mov	r0, r3
 80119b6:	f000 fbb9 	bl	801212c <TIM_OC4_SetConfig>
 80119ba:	e002      	b.n	80119c2 <HAL_TIM_OC_ConfigChannel+0xa6>
 80119bc:	2301      	movs	r3, #1
 80119be:	75fb      	strb	r3, [r7, #23]
 80119c0:	bf00      	nop
 80119c2:	68fb      	ldr	r3, [r7, #12]
 80119c4:	2200      	movs	r2, #0
 80119c6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80119ca:	7dfb      	ldrb	r3, [r7, #23]
 80119cc:	4618      	mov	r0, r3
 80119ce:	3718      	adds	r7, #24
 80119d0:	46bd      	mov	sp, r7
 80119d2:	bd80      	pop	{r7, pc}

080119d4 <HAL_TIM_PWM_ConfigChannel>:
 80119d4:	b580      	push	{r7, lr}
 80119d6:	b086      	sub	sp, #24
 80119d8:	af00      	add	r7, sp, #0
 80119da:	60f8      	str	r0, [r7, #12]
 80119dc:	60b9      	str	r1, [r7, #8]
 80119de:	607a      	str	r2, [r7, #4]
 80119e0:	2300      	movs	r3, #0
 80119e2:	75fb      	strb	r3, [r7, #23]
 80119e4:	68fb      	ldr	r3, [r7, #12]
 80119e6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80119ea:	2b01      	cmp	r3, #1
 80119ec:	d101      	bne.n	80119f2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80119ee:	2302      	movs	r3, #2
 80119f0:	e0ae      	b.n	8011b50 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80119f2:	68fb      	ldr	r3, [r7, #12]
 80119f4:	2201      	movs	r2, #1
 80119f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80119fa:	687b      	ldr	r3, [r7, #4]
 80119fc:	2b0c      	cmp	r3, #12
 80119fe:	f200 809f 	bhi.w	8011b40 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8011a02:	a201      	add	r2, pc, #4	@ (adr r2, 8011a08 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8011a04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8011a08:	08011a3d 	.word	0x08011a3d
 8011a0c:	08011b41 	.word	0x08011b41
 8011a10:	08011b41 	.word	0x08011b41
 8011a14:	08011b41 	.word	0x08011b41
 8011a18:	08011a7d 	.word	0x08011a7d
 8011a1c:	08011b41 	.word	0x08011b41
 8011a20:	08011b41 	.word	0x08011b41
 8011a24:	08011b41 	.word	0x08011b41
 8011a28:	08011abf 	.word	0x08011abf
 8011a2c:	08011b41 	.word	0x08011b41
 8011a30:	08011b41 	.word	0x08011b41
 8011a34:	08011b41 	.word	0x08011b41
 8011a38:	08011aff 	.word	0x08011aff
 8011a3c:	68fb      	ldr	r3, [r7, #12]
 8011a3e:	681b      	ldr	r3, [r3, #0]
 8011a40:	68b9      	ldr	r1, [r7, #8]
 8011a42:	4618      	mov	r0, r3
 8011a44:	f000 fa18 	bl	8011e78 <TIM_OC1_SetConfig>
 8011a48:	68fb      	ldr	r3, [r7, #12]
 8011a4a:	681b      	ldr	r3, [r3, #0]
 8011a4c:	699a      	ldr	r2, [r3, #24]
 8011a4e:	68fb      	ldr	r3, [r7, #12]
 8011a50:	681b      	ldr	r3, [r3, #0]
 8011a52:	f042 0208 	orr.w	r2, r2, #8
 8011a56:	619a      	str	r2, [r3, #24]
 8011a58:	68fb      	ldr	r3, [r7, #12]
 8011a5a:	681b      	ldr	r3, [r3, #0]
 8011a5c:	699a      	ldr	r2, [r3, #24]
 8011a5e:	68fb      	ldr	r3, [r7, #12]
 8011a60:	681b      	ldr	r3, [r3, #0]
 8011a62:	f022 0204 	bic.w	r2, r2, #4
 8011a66:	619a      	str	r2, [r3, #24]
 8011a68:	68fb      	ldr	r3, [r7, #12]
 8011a6a:	681b      	ldr	r3, [r3, #0]
 8011a6c:	6999      	ldr	r1, [r3, #24]
 8011a6e:	68bb      	ldr	r3, [r7, #8]
 8011a70:	691a      	ldr	r2, [r3, #16]
 8011a72:	68fb      	ldr	r3, [r7, #12]
 8011a74:	681b      	ldr	r3, [r3, #0]
 8011a76:	430a      	orrs	r2, r1
 8011a78:	619a      	str	r2, [r3, #24]
 8011a7a:	e064      	b.n	8011b46 <HAL_TIM_PWM_ConfigChannel+0x172>
 8011a7c:	68fb      	ldr	r3, [r7, #12]
 8011a7e:	681b      	ldr	r3, [r3, #0]
 8011a80:	68b9      	ldr	r1, [r7, #8]
 8011a82:	4618      	mov	r0, r3
 8011a84:	f000 fa68 	bl	8011f58 <TIM_OC2_SetConfig>
 8011a88:	68fb      	ldr	r3, [r7, #12]
 8011a8a:	681b      	ldr	r3, [r3, #0]
 8011a8c:	699a      	ldr	r2, [r3, #24]
 8011a8e:	68fb      	ldr	r3, [r7, #12]
 8011a90:	681b      	ldr	r3, [r3, #0]
 8011a92:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8011a96:	619a      	str	r2, [r3, #24]
 8011a98:	68fb      	ldr	r3, [r7, #12]
 8011a9a:	681b      	ldr	r3, [r3, #0]
 8011a9c:	699a      	ldr	r2, [r3, #24]
 8011a9e:	68fb      	ldr	r3, [r7, #12]
 8011aa0:	681b      	ldr	r3, [r3, #0]
 8011aa2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011aa6:	619a      	str	r2, [r3, #24]
 8011aa8:	68fb      	ldr	r3, [r7, #12]
 8011aaa:	681b      	ldr	r3, [r3, #0]
 8011aac:	6999      	ldr	r1, [r3, #24]
 8011aae:	68bb      	ldr	r3, [r7, #8]
 8011ab0:	691b      	ldr	r3, [r3, #16]
 8011ab2:	021a      	lsls	r2, r3, #8
 8011ab4:	68fb      	ldr	r3, [r7, #12]
 8011ab6:	681b      	ldr	r3, [r3, #0]
 8011ab8:	430a      	orrs	r2, r1
 8011aba:	619a      	str	r2, [r3, #24]
 8011abc:	e043      	b.n	8011b46 <HAL_TIM_PWM_ConfigChannel+0x172>
 8011abe:	68fb      	ldr	r3, [r7, #12]
 8011ac0:	681b      	ldr	r3, [r3, #0]
 8011ac2:	68b9      	ldr	r1, [r7, #8]
 8011ac4:	4618      	mov	r0, r3
 8011ac6:	f000 fabd 	bl	8012044 <TIM_OC3_SetConfig>
 8011aca:	68fb      	ldr	r3, [r7, #12]
 8011acc:	681b      	ldr	r3, [r3, #0]
 8011ace:	69da      	ldr	r2, [r3, #28]
 8011ad0:	68fb      	ldr	r3, [r7, #12]
 8011ad2:	681b      	ldr	r3, [r3, #0]
 8011ad4:	f042 0208 	orr.w	r2, r2, #8
 8011ad8:	61da      	str	r2, [r3, #28]
 8011ada:	68fb      	ldr	r3, [r7, #12]
 8011adc:	681b      	ldr	r3, [r3, #0]
 8011ade:	69da      	ldr	r2, [r3, #28]
 8011ae0:	68fb      	ldr	r3, [r7, #12]
 8011ae2:	681b      	ldr	r3, [r3, #0]
 8011ae4:	f022 0204 	bic.w	r2, r2, #4
 8011ae8:	61da      	str	r2, [r3, #28]
 8011aea:	68fb      	ldr	r3, [r7, #12]
 8011aec:	681b      	ldr	r3, [r3, #0]
 8011aee:	69d9      	ldr	r1, [r3, #28]
 8011af0:	68bb      	ldr	r3, [r7, #8]
 8011af2:	691a      	ldr	r2, [r3, #16]
 8011af4:	68fb      	ldr	r3, [r7, #12]
 8011af6:	681b      	ldr	r3, [r3, #0]
 8011af8:	430a      	orrs	r2, r1
 8011afa:	61da      	str	r2, [r3, #28]
 8011afc:	e023      	b.n	8011b46 <HAL_TIM_PWM_ConfigChannel+0x172>
 8011afe:	68fb      	ldr	r3, [r7, #12]
 8011b00:	681b      	ldr	r3, [r3, #0]
 8011b02:	68b9      	ldr	r1, [r7, #8]
 8011b04:	4618      	mov	r0, r3
 8011b06:	f000 fb11 	bl	801212c <TIM_OC4_SetConfig>
 8011b0a:	68fb      	ldr	r3, [r7, #12]
 8011b0c:	681b      	ldr	r3, [r3, #0]
 8011b0e:	69da      	ldr	r2, [r3, #28]
 8011b10:	68fb      	ldr	r3, [r7, #12]
 8011b12:	681b      	ldr	r3, [r3, #0]
 8011b14:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8011b18:	61da      	str	r2, [r3, #28]
 8011b1a:	68fb      	ldr	r3, [r7, #12]
 8011b1c:	681b      	ldr	r3, [r3, #0]
 8011b1e:	69da      	ldr	r2, [r3, #28]
 8011b20:	68fb      	ldr	r3, [r7, #12]
 8011b22:	681b      	ldr	r3, [r3, #0]
 8011b24:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011b28:	61da      	str	r2, [r3, #28]
 8011b2a:	68fb      	ldr	r3, [r7, #12]
 8011b2c:	681b      	ldr	r3, [r3, #0]
 8011b2e:	69d9      	ldr	r1, [r3, #28]
 8011b30:	68bb      	ldr	r3, [r7, #8]
 8011b32:	691b      	ldr	r3, [r3, #16]
 8011b34:	021a      	lsls	r2, r3, #8
 8011b36:	68fb      	ldr	r3, [r7, #12]
 8011b38:	681b      	ldr	r3, [r3, #0]
 8011b3a:	430a      	orrs	r2, r1
 8011b3c:	61da      	str	r2, [r3, #28]
 8011b3e:	e002      	b.n	8011b46 <HAL_TIM_PWM_ConfigChannel+0x172>
 8011b40:	2301      	movs	r3, #1
 8011b42:	75fb      	strb	r3, [r7, #23]
 8011b44:	bf00      	nop
 8011b46:	68fb      	ldr	r3, [r7, #12]
 8011b48:	2200      	movs	r2, #0
 8011b4a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011b4e:	7dfb      	ldrb	r3, [r7, #23]
 8011b50:	4618      	mov	r0, r3
 8011b52:	3718      	adds	r7, #24
 8011b54:	46bd      	mov	sp, r7
 8011b56:	bd80      	pop	{r7, pc}

08011b58 <HAL_TIM_ConfigClockSource>:
 8011b58:	b580      	push	{r7, lr}
 8011b5a:	b084      	sub	sp, #16
 8011b5c:	af00      	add	r7, sp, #0
 8011b5e:	6078      	str	r0, [r7, #4]
 8011b60:	6039      	str	r1, [r7, #0]
 8011b62:	2300      	movs	r3, #0
 8011b64:	73fb      	strb	r3, [r7, #15]
 8011b66:	687b      	ldr	r3, [r7, #4]
 8011b68:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8011b6c:	2b01      	cmp	r3, #1
 8011b6e:	d101      	bne.n	8011b74 <HAL_TIM_ConfigClockSource+0x1c>
 8011b70:	2302      	movs	r3, #2
 8011b72:	e0b4      	b.n	8011cde <HAL_TIM_ConfigClockSource+0x186>
 8011b74:	687b      	ldr	r3, [r7, #4]
 8011b76:	2201      	movs	r2, #1
 8011b78:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011b7c:	687b      	ldr	r3, [r7, #4]
 8011b7e:	2202      	movs	r2, #2
 8011b80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011b84:	687b      	ldr	r3, [r7, #4]
 8011b86:	681b      	ldr	r3, [r3, #0]
 8011b88:	689b      	ldr	r3, [r3, #8]
 8011b8a:	60bb      	str	r3, [r7, #8]
 8011b8c:	68bb      	ldr	r3, [r7, #8]
 8011b8e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8011b92:	60bb      	str	r3, [r7, #8]
 8011b94:	68bb      	ldr	r3, [r7, #8]
 8011b96:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8011b9a:	60bb      	str	r3, [r7, #8]
 8011b9c:	687b      	ldr	r3, [r7, #4]
 8011b9e:	681b      	ldr	r3, [r3, #0]
 8011ba0:	68ba      	ldr	r2, [r7, #8]
 8011ba2:	609a      	str	r2, [r3, #8]
 8011ba4:	683b      	ldr	r3, [r7, #0]
 8011ba6:	681b      	ldr	r3, [r3, #0]
 8011ba8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011bac:	d03e      	beq.n	8011c2c <HAL_TIM_ConfigClockSource+0xd4>
 8011bae:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8011bb2:	f200 8087 	bhi.w	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bb6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011bba:	f000 8086 	beq.w	8011cca <HAL_TIM_ConfigClockSource+0x172>
 8011bbe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011bc2:	d87f      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bc4:	2b70      	cmp	r3, #112	@ 0x70
 8011bc6:	d01a      	beq.n	8011bfe <HAL_TIM_ConfigClockSource+0xa6>
 8011bc8:	2b70      	cmp	r3, #112	@ 0x70
 8011bca:	d87b      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bcc:	2b60      	cmp	r3, #96	@ 0x60
 8011bce:	d050      	beq.n	8011c72 <HAL_TIM_ConfigClockSource+0x11a>
 8011bd0:	2b60      	cmp	r3, #96	@ 0x60
 8011bd2:	d877      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bd4:	2b50      	cmp	r3, #80	@ 0x50
 8011bd6:	d03c      	beq.n	8011c52 <HAL_TIM_ConfigClockSource+0xfa>
 8011bd8:	2b50      	cmp	r3, #80	@ 0x50
 8011bda:	d873      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bdc:	2b40      	cmp	r3, #64	@ 0x40
 8011bde:	d058      	beq.n	8011c92 <HAL_TIM_ConfigClockSource+0x13a>
 8011be0:	2b40      	cmp	r3, #64	@ 0x40
 8011be2:	d86f      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011be4:	2b30      	cmp	r3, #48	@ 0x30
 8011be6:	d064      	beq.n	8011cb2 <HAL_TIM_ConfigClockSource+0x15a>
 8011be8:	2b30      	cmp	r3, #48	@ 0x30
 8011bea:	d86b      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bec:	2b20      	cmp	r3, #32
 8011bee:	d060      	beq.n	8011cb2 <HAL_TIM_ConfigClockSource+0x15a>
 8011bf0:	2b20      	cmp	r3, #32
 8011bf2:	d867      	bhi.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bf4:	2b00      	cmp	r3, #0
 8011bf6:	d05c      	beq.n	8011cb2 <HAL_TIM_ConfigClockSource+0x15a>
 8011bf8:	2b10      	cmp	r3, #16
 8011bfa:	d05a      	beq.n	8011cb2 <HAL_TIM_ConfigClockSource+0x15a>
 8011bfc:	e062      	b.n	8011cc4 <HAL_TIM_ConfigClockSource+0x16c>
 8011bfe:	687b      	ldr	r3, [r7, #4]
 8011c00:	6818      	ldr	r0, [r3, #0]
 8011c02:	683b      	ldr	r3, [r7, #0]
 8011c04:	6899      	ldr	r1, [r3, #8]
 8011c06:	683b      	ldr	r3, [r7, #0]
 8011c08:	685a      	ldr	r2, [r3, #4]
 8011c0a:	683b      	ldr	r3, [r7, #0]
 8011c0c:	68db      	ldr	r3, [r3, #12]
 8011c0e:	f000 fb5d 	bl	80122cc <TIM_ETR_SetConfig>
 8011c12:	687b      	ldr	r3, [r7, #4]
 8011c14:	681b      	ldr	r3, [r3, #0]
 8011c16:	689b      	ldr	r3, [r3, #8]
 8011c18:	60bb      	str	r3, [r7, #8]
 8011c1a:	68bb      	ldr	r3, [r7, #8]
 8011c1c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8011c20:	60bb      	str	r3, [r7, #8]
 8011c22:	687b      	ldr	r3, [r7, #4]
 8011c24:	681b      	ldr	r3, [r3, #0]
 8011c26:	68ba      	ldr	r2, [r7, #8]
 8011c28:	609a      	str	r2, [r3, #8]
 8011c2a:	e04f      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011c2c:	687b      	ldr	r3, [r7, #4]
 8011c2e:	6818      	ldr	r0, [r3, #0]
 8011c30:	683b      	ldr	r3, [r7, #0]
 8011c32:	6899      	ldr	r1, [r3, #8]
 8011c34:	683b      	ldr	r3, [r7, #0]
 8011c36:	685a      	ldr	r2, [r3, #4]
 8011c38:	683b      	ldr	r3, [r7, #0]
 8011c3a:	68db      	ldr	r3, [r3, #12]
 8011c3c:	f000 fb46 	bl	80122cc <TIM_ETR_SetConfig>
 8011c40:	687b      	ldr	r3, [r7, #4]
 8011c42:	681b      	ldr	r3, [r3, #0]
 8011c44:	689a      	ldr	r2, [r3, #8]
 8011c46:	687b      	ldr	r3, [r7, #4]
 8011c48:	681b      	ldr	r3, [r3, #0]
 8011c4a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8011c4e:	609a      	str	r2, [r3, #8]
 8011c50:	e03c      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011c52:	687b      	ldr	r3, [r7, #4]
 8011c54:	6818      	ldr	r0, [r3, #0]
 8011c56:	683b      	ldr	r3, [r7, #0]
 8011c58:	6859      	ldr	r1, [r3, #4]
 8011c5a:	683b      	ldr	r3, [r7, #0]
 8011c5c:	68db      	ldr	r3, [r3, #12]
 8011c5e:	461a      	mov	r2, r3
 8011c60:	f000 faba 	bl	80121d8 <TIM_TI1_ConfigInputStage>
 8011c64:	687b      	ldr	r3, [r7, #4]
 8011c66:	681b      	ldr	r3, [r3, #0]
 8011c68:	2150      	movs	r1, #80	@ 0x50
 8011c6a:	4618      	mov	r0, r3
 8011c6c:	f000 fb13 	bl	8012296 <TIM_ITRx_SetConfig>
 8011c70:	e02c      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011c72:	687b      	ldr	r3, [r7, #4]
 8011c74:	6818      	ldr	r0, [r3, #0]
 8011c76:	683b      	ldr	r3, [r7, #0]
 8011c78:	6859      	ldr	r1, [r3, #4]
 8011c7a:	683b      	ldr	r3, [r7, #0]
 8011c7c:	68db      	ldr	r3, [r3, #12]
 8011c7e:	461a      	mov	r2, r3
 8011c80:	f000 fad9 	bl	8012236 <TIM_TI2_ConfigInputStage>
 8011c84:	687b      	ldr	r3, [r7, #4]
 8011c86:	681b      	ldr	r3, [r3, #0]
 8011c88:	2160      	movs	r1, #96	@ 0x60
 8011c8a:	4618      	mov	r0, r3
 8011c8c:	f000 fb03 	bl	8012296 <TIM_ITRx_SetConfig>
 8011c90:	e01c      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011c92:	687b      	ldr	r3, [r7, #4]
 8011c94:	6818      	ldr	r0, [r3, #0]
 8011c96:	683b      	ldr	r3, [r7, #0]
 8011c98:	6859      	ldr	r1, [r3, #4]
 8011c9a:	683b      	ldr	r3, [r7, #0]
 8011c9c:	68db      	ldr	r3, [r3, #12]
 8011c9e:	461a      	mov	r2, r3
 8011ca0:	f000 fa9a 	bl	80121d8 <TIM_TI1_ConfigInputStage>
 8011ca4:	687b      	ldr	r3, [r7, #4]
 8011ca6:	681b      	ldr	r3, [r3, #0]
 8011ca8:	2140      	movs	r1, #64	@ 0x40
 8011caa:	4618      	mov	r0, r3
 8011cac:	f000 faf3 	bl	8012296 <TIM_ITRx_SetConfig>
 8011cb0:	e00c      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011cb2:	687b      	ldr	r3, [r7, #4]
 8011cb4:	681a      	ldr	r2, [r3, #0]
 8011cb6:	683b      	ldr	r3, [r7, #0]
 8011cb8:	681b      	ldr	r3, [r3, #0]
 8011cba:	4619      	mov	r1, r3
 8011cbc:	4610      	mov	r0, r2
 8011cbe:	f000 faea 	bl	8012296 <TIM_ITRx_SetConfig>
 8011cc2:	e003      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011cc4:	2301      	movs	r3, #1
 8011cc6:	73fb      	strb	r3, [r7, #15]
 8011cc8:	e000      	b.n	8011ccc <HAL_TIM_ConfigClockSource+0x174>
 8011cca:	bf00      	nop
 8011ccc:	687b      	ldr	r3, [r7, #4]
 8011cce:	2201      	movs	r2, #1
 8011cd0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011cd4:	687b      	ldr	r3, [r7, #4]
 8011cd6:	2200      	movs	r2, #0
 8011cd8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011cdc:	7bfb      	ldrb	r3, [r7, #15]
 8011cde:	4618      	mov	r0, r3
 8011ce0:	3710      	adds	r7, #16
 8011ce2:	46bd      	mov	sp, r7
 8011ce4:	bd80      	pop	{r7, pc}

08011ce6 <HAL_TIM_OC_DelayElapsedCallback>:
 8011ce6:	b480      	push	{r7}
 8011ce8:	b083      	sub	sp, #12
 8011cea:	af00      	add	r7, sp, #0
 8011cec:	6078      	str	r0, [r7, #4]
 8011cee:	bf00      	nop
 8011cf0:	370c      	adds	r7, #12
 8011cf2:	46bd      	mov	sp, r7
 8011cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011cf8:	4770      	bx	lr

08011cfa <HAL_TIM_IC_CaptureCallback>:
 8011cfa:	b480      	push	{r7}
 8011cfc:	b083      	sub	sp, #12
 8011cfe:	af00      	add	r7, sp, #0
 8011d00:	6078      	str	r0, [r7, #4]
 8011d02:	bf00      	nop
 8011d04:	370c      	adds	r7, #12
 8011d06:	46bd      	mov	sp, r7
 8011d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d0c:	4770      	bx	lr

08011d0e <HAL_TIM_PWM_PulseFinishedCallback>:
 8011d0e:	b480      	push	{r7}
 8011d10:	b083      	sub	sp, #12
 8011d12:	af00      	add	r7, sp, #0
 8011d14:	6078      	str	r0, [r7, #4]
 8011d16:	bf00      	nop
 8011d18:	370c      	adds	r7, #12
 8011d1a:	46bd      	mov	sp, r7
 8011d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d20:	4770      	bx	lr

08011d22 <HAL_TIM_TriggerCallback>:
 8011d22:	b480      	push	{r7}
 8011d24:	b083      	sub	sp, #12
 8011d26:	af00      	add	r7, sp, #0
 8011d28:	6078      	str	r0, [r7, #4]
 8011d2a:	bf00      	nop
 8011d2c:	370c      	adds	r7, #12
 8011d2e:	46bd      	mov	sp, r7
 8011d30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011d34:	4770      	bx	lr
	...

08011d38 <TIM_Base_SetConfig>:
 8011d38:	b480      	push	{r7}
 8011d3a:	b085      	sub	sp, #20
 8011d3c:	af00      	add	r7, sp, #0
 8011d3e:	6078      	str	r0, [r7, #4]
 8011d40:	6039      	str	r1, [r7, #0]
 8011d42:	687b      	ldr	r3, [r7, #4]
 8011d44:	681b      	ldr	r3, [r3, #0]
 8011d46:	60fb      	str	r3, [r7, #12]
 8011d48:	687b      	ldr	r3, [r7, #4]
 8011d4a:	4a40      	ldr	r2, [pc, #256]	@ (8011e4c <TIM_Base_SetConfig+0x114>)
 8011d4c:	4293      	cmp	r3, r2
 8011d4e:	d013      	beq.n	8011d78 <TIM_Base_SetConfig+0x40>
 8011d50:	687b      	ldr	r3, [r7, #4]
 8011d52:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011d56:	d00f      	beq.n	8011d78 <TIM_Base_SetConfig+0x40>
 8011d58:	687b      	ldr	r3, [r7, #4]
 8011d5a:	4a3d      	ldr	r2, [pc, #244]	@ (8011e50 <TIM_Base_SetConfig+0x118>)
 8011d5c:	4293      	cmp	r3, r2
 8011d5e:	d00b      	beq.n	8011d78 <TIM_Base_SetConfig+0x40>
 8011d60:	687b      	ldr	r3, [r7, #4]
 8011d62:	4a3c      	ldr	r2, [pc, #240]	@ (8011e54 <TIM_Base_SetConfig+0x11c>)
 8011d64:	4293      	cmp	r3, r2
 8011d66:	d007      	beq.n	8011d78 <TIM_Base_SetConfig+0x40>
 8011d68:	687b      	ldr	r3, [r7, #4]
 8011d6a:	4a3b      	ldr	r2, [pc, #236]	@ (8011e58 <TIM_Base_SetConfig+0x120>)
 8011d6c:	4293      	cmp	r3, r2
 8011d6e:	d003      	beq.n	8011d78 <TIM_Base_SetConfig+0x40>
 8011d70:	687b      	ldr	r3, [r7, #4]
 8011d72:	4a3a      	ldr	r2, [pc, #232]	@ (8011e5c <TIM_Base_SetConfig+0x124>)
 8011d74:	4293      	cmp	r3, r2
 8011d76:	d108      	bne.n	8011d8a <TIM_Base_SetConfig+0x52>
 8011d78:	68fb      	ldr	r3, [r7, #12]
 8011d7a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8011d7e:	60fb      	str	r3, [r7, #12]
 8011d80:	683b      	ldr	r3, [r7, #0]
 8011d82:	685b      	ldr	r3, [r3, #4]
 8011d84:	68fa      	ldr	r2, [r7, #12]
 8011d86:	4313      	orrs	r3, r2
 8011d88:	60fb      	str	r3, [r7, #12]
 8011d8a:	687b      	ldr	r3, [r7, #4]
 8011d8c:	4a2f      	ldr	r2, [pc, #188]	@ (8011e4c <TIM_Base_SetConfig+0x114>)
 8011d8e:	4293      	cmp	r3, r2
 8011d90:	d02b      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011d92:	687b      	ldr	r3, [r7, #4]
 8011d94:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8011d98:	d027      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011d9a:	687b      	ldr	r3, [r7, #4]
 8011d9c:	4a2c      	ldr	r2, [pc, #176]	@ (8011e50 <TIM_Base_SetConfig+0x118>)
 8011d9e:	4293      	cmp	r3, r2
 8011da0:	d023      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011da2:	687b      	ldr	r3, [r7, #4]
 8011da4:	4a2b      	ldr	r2, [pc, #172]	@ (8011e54 <TIM_Base_SetConfig+0x11c>)
 8011da6:	4293      	cmp	r3, r2
 8011da8:	d01f      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011daa:	687b      	ldr	r3, [r7, #4]
 8011dac:	4a2a      	ldr	r2, [pc, #168]	@ (8011e58 <TIM_Base_SetConfig+0x120>)
 8011dae:	4293      	cmp	r3, r2
 8011db0:	d01b      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011db2:	687b      	ldr	r3, [r7, #4]
 8011db4:	4a29      	ldr	r2, [pc, #164]	@ (8011e5c <TIM_Base_SetConfig+0x124>)
 8011db6:	4293      	cmp	r3, r2
 8011db8:	d017      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011dba:	687b      	ldr	r3, [r7, #4]
 8011dbc:	4a28      	ldr	r2, [pc, #160]	@ (8011e60 <TIM_Base_SetConfig+0x128>)
 8011dbe:	4293      	cmp	r3, r2
 8011dc0:	d013      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011dc2:	687b      	ldr	r3, [r7, #4]
 8011dc4:	4a27      	ldr	r2, [pc, #156]	@ (8011e64 <TIM_Base_SetConfig+0x12c>)
 8011dc6:	4293      	cmp	r3, r2
 8011dc8:	d00f      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011dca:	687b      	ldr	r3, [r7, #4]
 8011dcc:	4a26      	ldr	r2, [pc, #152]	@ (8011e68 <TIM_Base_SetConfig+0x130>)
 8011dce:	4293      	cmp	r3, r2
 8011dd0:	d00b      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011dd2:	687b      	ldr	r3, [r7, #4]
 8011dd4:	4a25      	ldr	r2, [pc, #148]	@ (8011e6c <TIM_Base_SetConfig+0x134>)
 8011dd6:	4293      	cmp	r3, r2
 8011dd8:	d007      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011dda:	687b      	ldr	r3, [r7, #4]
 8011ddc:	4a24      	ldr	r2, [pc, #144]	@ (8011e70 <TIM_Base_SetConfig+0x138>)
 8011dde:	4293      	cmp	r3, r2
 8011de0:	d003      	beq.n	8011dea <TIM_Base_SetConfig+0xb2>
 8011de2:	687b      	ldr	r3, [r7, #4]
 8011de4:	4a23      	ldr	r2, [pc, #140]	@ (8011e74 <TIM_Base_SetConfig+0x13c>)
 8011de6:	4293      	cmp	r3, r2
 8011de8:	d108      	bne.n	8011dfc <TIM_Base_SetConfig+0xc4>
 8011dea:	68fb      	ldr	r3, [r7, #12]
 8011dec:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011df0:	60fb      	str	r3, [r7, #12]
 8011df2:	683b      	ldr	r3, [r7, #0]
 8011df4:	68db      	ldr	r3, [r3, #12]
 8011df6:	68fa      	ldr	r2, [r7, #12]
 8011df8:	4313      	orrs	r3, r2
 8011dfa:	60fb      	str	r3, [r7, #12]
 8011dfc:	68fb      	ldr	r3, [r7, #12]
 8011dfe:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8011e02:	683b      	ldr	r3, [r7, #0]
 8011e04:	695b      	ldr	r3, [r3, #20]
 8011e06:	4313      	orrs	r3, r2
 8011e08:	60fb      	str	r3, [r7, #12]
 8011e0a:	687b      	ldr	r3, [r7, #4]
 8011e0c:	68fa      	ldr	r2, [r7, #12]
 8011e0e:	601a      	str	r2, [r3, #0]
 8011e10:	683b      	ldr	r3, [r7, #0]
 8011e12:	689a      	ldr	r2, [r3, #8]
 8011e14:	687b      	ldr	r3, [r7, #4]
 8011e16:	62da      	str	r2, [r3, #44]	@ 0x2c
 8011e18:	683b      	ldr	r3, [r7, #0]
 8011e1a:	681a      	ldr	r2, [r3, #0]
 8011e1c:	687b      	ldr	r3, [r7, #4]
 8011e1e:	629a      	str	r2, [r3, #40]	@ 0x28
 8011e20:	687b      	ldr	r3, [r7, #4]
 8011e22:	4a0a      	ldr	r2, [pc, #40]	@ (8011e4c <TIM_Base_SetConfig+0x114>)
 8011e24:	4293      	cmp	r3, r2
 8011e26:	d003      	beq.n	8011e30 <TIM_Base_SetConfig+0xf8>
 8011e28:	687b      	ldr	r3, [r7, #4]
 8011e2a:	4a0c      	ldr	r2, [pc, #48]	@ (8011e5c <TIM_Base_SetConfig+0x124>)
 8011e2c:	4293      	cmp	r3, r2
 8011e2e:	d103      	bne.n	8011e38 <TIM_Base_SetConfig+0x100>
 8011e30:	683b      	ldr	r3, [r7, #0]
 8011e32:	691a      	ldr	r2, [r3, #16]
 8011e34:	687b      	ldr	r3, [r7, #4]
 8011e36:	631a      	str	r2, [r3, #48]	@ 0x30
 8011e38:	687b      	ldr	r3, [r7, #4]
 8011e3a:	2201      	movs	r2, #1
 8011e3c:	615a      	str	r2, [r3, #20]
 8011e3e:	bf00      	nop
 8011e40:	3714      	adds	r7, #20
 8011e42:	46bd      	mov	sp, r7
 8011e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011e48:	4770      	bx	lr
 8011e4a:	bf00      	nop
 8011e4c:	40010000 	.word	0x40010000
 8011e50:	40000400 	.word	0x40000400
 8011e54:	40000800 	.word	0x40000800
 8011e58:	40000c00 	.word	0x40000c00
 8011e5c:	40010400 	.word	0x40010400
 8011e60:	40014000 	.word	0x40014000
 8011e64:	40014400 	.word	0x40014400
 8011e68:	40014800 	.word	0x40014800
 8011e6c:	40001800 	.word	0x40001800
 8011e70:	40001c00 	.word	0x40001c00
 8011e74:	40002000 	.word	0x40002000

08011e78 <TIM_OC1_SetConfig>:
 8011e78:	b480      	push	{r7}
 8011e7a:	b087      	sub	sp, #28
 8011e7c:	af00      	add	r7, sp, #0
 8011e7e:	6078      	str	r0, [r7, #4]
 8011e80:	6039      	str	r1, [r7, #0]
 8011e82:	687b      	ldr	r3, [r7, #4]
 8011e84:	6a1b      	ldr	r3, [r3, #32]
 8011e86:	f023 0201 	bic.w	r2, r3, #1
 8011e8a:	687b      	ldr	r3, [r7, #4]
 8011e8c:	621a      	str	r2, [r3, #32]
 8011e8e:	687b      	ldr	r3, [r7, #4]
 8011e90:	6a1b      	ldr	r3, [r3, #32]
 8011e92:	617b      	str	r3, [r7, #20]
 8011e94:	687b      	ldr	r3, [r7, #4]
 8011e96:	685b      	ldr	r3, [r3, #4]
 8011e98:	613b      	str	r3, [r7, #16]
 8011e9a:	687b      	ldr	r3, [r7, #4]
 8011e9c:	699b      	ldr	r3, [r3, #24]
 8011e9e:	60fb      	str	r3, [r7, #12]
 8011ea0:	68fb      	ldr	r3, [r7, #12]
 8011ea2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8011ea6:	60fb      	str	r3, [r7, #12]
 8011ea8:	68fb      	ldr	r3, [r7, #12]
 8011eaa:	f023 0303 	bic.w	r3, r3, #3
 8011eae:	60fb      	str	r3, [r7, #12]
 8011eb0:	683b      	ldr	r3, [r7, #0]
 8011eb2:	681b      	ldr	r3, [r3, #0]
 8011eb4:	68fa      	ldr	r2, [r7, #12]
 8011eb6:	4313      	orrs	r3, r2
 8011eb8:	60fb      	str	r3, [r7, #12]
 8011eba:	697b      	ldr	r3, [r7, #20]
 8011ebc:	f023 0302 	bic.w	r3, r3, #2
 8011ec0:	617b      	str	r3, [r7, #20]
 8011ec2:	683b      	ldr	r3, [r7, #0]
 8011ec4:	689b      	ldr	r3, [r3, #8]
 8011ec6:	697a      	ldr	r2, [r7, #20]
 8011ec8:	4313      	orrs	r3, r2
 8011eca:	617b      	str	r3, [r7, #20]
 8011ecc:	687b      	ldr	r3, [r7, #4]
 8011ece:	4a20      	ldr	r2, [pc, #128]	@ (8011f50 <TIM_OC1_SetConfig+0xd8>)
 8011ed0:	4293      	cmp	r3, r2
 8011ed2:	d003      	beq.n	8011edc <TIM_OC1_SetConfig+0x64>
 8011ed4:	687b      	ldr	r3, [r7, #4]
 8011ed6:	4a1f      	ldr	r2, [pc, #124]	@ (8011f54 <TIM_OC1_SetConfig+0xdc>)
 8011ed8:	4293      	cmp	r3, r2
 8011eda:	d10c      	bne.n	8011ef6 <TIM_OC1_SetConfig+0x7e>
 8011edc:	697b      	ldr	r3, [r7, #20]
 8011ede:	f023 0308 	bic.w	r3, r3, #8
 8011ee2:	617b      	str	r3, [r7, #20]
 8011ee4:	683b      	ldr	r3, [r7, #0]
 8011ee6:	68db      	ldr	r3, [r3, #12]
 8011ee8:	697a      	ldr	r2, [r7, #20]
 8011eea:	4313      	orrs	r3, r2
 8011eec:	617b      	str	r3, [r7, #20]
 8011eee:	697b      	ldr	r3, [r7, #20]
 8011ef0:	f023 0304 	bic.w	r3, r3, #4
 8011ef4:	617b      	str	r3, [r7, #20]
 8011ef6:	687b      	ldr	r3, [r7, #4]
 8011ef8:	4a15      	ldr	r2, [pc, #84]	@ (8011f50 <TIM_OC1_SetConfig+0xd8>)
 8011efa:	4293      	cmp	r3, r2
 8011efc:	d003      	beq.n	8011f06 <TIM_OC1_SetConfig+0x8e>
 8011efe:	687b      	ldr	r3, [r7, #4]
 8011f00:	4a14      	ldr	r2, [pc, #80]	@ (8011f54 <TIM_OC1_SetConfig+0xdc>)
 8011f02:	4293      	cmp	r3, r2
 8011f04:	d111      	bne.n	8011f2a <TIM_OC1_SetConfig+0xb2>
 8011f06:	693b      	ldr	r3, [r7, #16]
 8011f08:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8011f0c:	613b      	str	r3, [r7, #16]
 8011f0e:	693b      	ldr	r3, [r7, #16]
 8011f10:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8011f14:	613b      	str	r3, [r7, #16]
 8011f16:	683b      	ldr	r3, [r7, #0]
 8011f18:	695b      	ldr	r3, [r3, #20]
 8011f1a:	693a      	ldr	r2, [r7, #16]
 8011f1c:	4313      	orrs	r3, r2
 8011f1e:	613b      	str	r3, [r7, #16]
 8011f20:	683b      	ldr	r3, [r7, #0]
 8011f22:	699b      	ldr	r3, [r3, #24]
 8011f24:	693a      	ldr	r2, [r7, #16]
 8011f26:	4313      	orrs	r3, r2
 8011f28:	613b      	str	r3, [r7, #16]
 8011f2a:	687b      	ldr	r3, [r7, #4]
 8011f2c:	693a      	ldr	r2, [r7, #16]
 8011f2e:	605a      	str	r2, [r3, #4]
 8011f30:	687b      	ldr	r3, [r7, #4]
 8011f32:	68fa      	ldr	r2, [r7, #12]
 8011f34:	619a      	str	r2, [r3, #24]
 8011f36:	683b      	ldr	r3, [r7, #0]
 8011f38:	685a      	ldr	r2, [r3, #4]
 8011f3a:	687b      	ldr	r3, [r7, #4]
 8011f3c:	635a      	str	r2, [r3, #52]	@ 0x34
 8011f3e:	687b      	ldr	r3, [r7, #4]
 8011f40:	697a      	ldr	r2, [r7, #20]
 8011f42:	621a      	str	r2, [r3, #32]
 8011f44:	bf00      	nop
 8011f46:	371c      	adds	r7, #28
 8011f48:	46bd      	mov	sp, r7
 8011f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f4e:	4770      	bx	lr
 8011f50:	40010000 	.word	0x40010000
 8011f54:	40010400 	.word	0x40010400

08011f58 <TIM_OC2_SetConfig>:
 8011f58:	b480      	push	{r7}
 8011f5a:	b087      	sub	sp, #28
 8011f5c:	af00      	add	r7, sp, #0
 8011f5e:	6078      	str	r0, [r7, #4]
 8011f60:	6039      	str	r1, [r7, #0]
 8011f62:	687b      	ldr	r3, [r7, #4]
 8011f64:	6a1b      	ldr	r3, [r3, #32]
 8011f66:	f023 0210 	bic.w	r2, r3, #16
 8011f6a:	687b      	ldr	r3, [r7, #4]
 8011f6c:	621a      	str	r2, [r3, #32]
 8011f6e:	687b      	ldr	r3, [r7, #4]
 8011f70:	6a1b      	ldr	r3, [r3, #32]
 8011f72:	617b      	str	r3, [r7, #20]
 8011f74:	687b      	ldr	r3, [r7, #4]
 8011f76:	685b      	ldr	r3, [r3, #4]
 8011f78:	613b      	str	r3, [r7, #16]
 8011f7a:	687b      	ldr	r3, [r7, #4]
 8011f7c:	699b      	ldr	r3, [r3, #24]
 8011f7e:	60fb      	str	r3, [r7, #12]
 8011f80:	68fb      	ldr	r3, [r7, #12]
 8011f82:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8011f86:	60fb      	str	r3, [r7, #12]
 8011f88:	68fb      	ldr	r3, [r7, #12]
 8011f8a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8011f8e:	60fb      	str	r3, [r7, #12]
 8011f90:	683b      	ldr	r3, [r7, #0]
 8011f92:	681b      	ldr	r3, [r3, #0]
 8011f94:	021b      	lsls	r3, r3, #8
 8011f96:	68fa      	ldr	r2, [r7, #12]
 8011f98:	4313      	orrs	r3, r2
 8011f9a:	60fb      	str	r3, [r7, #12]
 8011f9c:	697b      	ldr	r3, [r7, #20]
 8011f9e:	f023 0320 	bic.w	r3, r3, #32
 8011fa2:	617b      	str	r3, [r7, #20]
 8011fa4:	683b      	ldr	r3, [r7, #0]
 8011fa6:	689b      	ldr	r3, [r3, #8]
 8011fa8:	011b      	lsls	r3, r3, #4
 8011faa:	697a      	ldr	r2, [r7, #20]
 8011fac:	4313      	orrs	r3, r2
 8011fae:	617b      	str	r3, [r7, #20]
 8011fb0:	687b      	ldr	r3, [r7, #4]
 8011fb2:	4a22      	ldr	r2, [pc, #136]	@ (801203c <TIM_OC2_SetConfig+0xe4>)
 8011fb4:	4293      	cmp	r3, r2
 8011fb6:	d003      	beq.n	8011fc0 <TIM_OC2_SetConfig+0x68>
 8011fb8:	687b      	ldr	r3, [r7, #4]
 8011fba:	4a21      	ldr	r2, [pc, #132]	@ (8012040 <TIM_OC2_SetConfig+0xe8>)
 8011fbc:	4293      	cmp	r3, r2
 8011fbe:	d10d      	bne.n	8011fdc <TIM_OC2_SetConfig+0x84>
 8011fc0:	697b      	ldr	r3, [r7, #20]
 8011fc2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8011fc6:	617b      	str	r3, [r7, #20]
 8011fc8:	683b      	ldr	r3, [r7, #0]
 8011fca:	68db      	ldr	r3, [r3, #12]
 8011fcc:	011b      	lsls	r3, r3, #4
 8011fce:	697a      	ldr	r2, [r7, #20]
 8011fd0:	4313      	orrs	r3, r2
 8011fd2:	617b      	str	r3, [r7, #20]
 8011fd4:	697b      	ldr	r3, [r7, #20]
 8011fd6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8011fda:	617b      	str	r3, [r7, #20]
 8011fdc:	687b      	ldr	r3, [r7, #4]
 8011fde:	4a17      	ldr	r2, [pc, #92]	@ (801203c <TIM_OC2_SetConfig+0xe4>)
 8011fe0:	4293      	cmp	r3, r2
 8011fe2:	d003      	beq.n	8011fec <TIM_OC2_SetConfig+0x94>
 8011fe4:	687b      	ldr	r3, [r7, #4]
 8011fe6:	4a16      	ldr	r2, [pc, #88]	@ (8012040 <TIM_OC2_SetConfig+0xe8>)
 8011fe8:	4293      	cmp	r3, r2
 8011fea:	d113      	bne.n	8012014 <TIM_OC2_SetConfig+0xbc>
 8011fec:	693b      	ldr	r3, [r7, #16]
 8011fee:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8011ff2:	613b      	str	r3, [r7, #16]
 8011ff4:	693b      	ldr	r3, [r7, #16]
 8011ff6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8011ffa:	613b      	str	r3, [r7, #16]
 8011ffc:	683b      	ldr	r3, [r7, #0]
 8011ffe:	695b      	ldr	r3, [r3, #20]
 8012000:	009b      	lsls	r3, r3, #2
 8012002:	693a      	ldr	r2, [r7, #16]
 8012004:	4313      	orrs	r3, r2
 8012006:	613b      	str	r3, [r7, #16]
 8012008:	683b      	ldr	r3, [r7, #0]
 801200a:	699b      	ldr	r3, [r3, #24]
 801200c:	009b      	lsls	r3, r3, #2
 801200e:	693a      	ldr	r2, [r7, #16]
 8012010:	4313      	orrs	r3, r2
 8012012:	613b      	str	r3, [r7, #16]
 8012014:	687b      	ldr	r3, [r7, #4]
 8012016:	693a      	ldr	r2, [r7, #16]
 8012018:	605a      	str	r2, [r3, #4]
 801201a:	687b      	ldr	r3, [r7, #4]
 801201c:	68fa      	ldr	r2, [r7, #12]
 801201e:	619a      	str	r2, [r3, #24]
 8012020:	683b      	ldr	r3, [r7, #0]
 8012022:	685a      	ldr	r2, [r3, #4]
 8012024:	687b      	ldr	r3, [r7, #4]
 8012026:	639a      	str	r2, [r3, #56]	@ 0x38
 8012028:	687b      	ldr	r3, [r7, #4]
 801202a:	697a      	ldr	r2, [r7, #20]
 801202c:	621a      	str	r2, [r3, #32]
 801202e:	bf00      	nop
 8012030:	371c      	adds	r7, #28
 8012032:	46bd      	mov	sp, r7
 8012034:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012038:	4770      	bx	lr
 801203a:	bf00      	nop
 801203c:	40010000 	.word	0x40010000
 8012040:	40010400 	.word	0x40010400

08012044 <TIM_OC3_SetConfig>:
 8012044:	b480      	push	{r7}
 8012046:	b087      	sub	sp, #28
 8012048:	af00      	add	r7, sp, #0
 801204a:	6078      	str	r0, [r7, #4]
 801204c:	6039      	str	r1, [r7, #0]
 801204e:	687b      	ldr	r3, [r7, #4]
 8012050:	6a1b      	ldr	r3, [r3, #32]
 8012052:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8012056:	687b      	ldr	r3, [r7, #4]
 8012058:	621a      	str	r2, [r3, #32]
 801205a:	687b      	ldr	r3, [r7, #4]
 801205c:	6a1b      	ldr	r3, [r3, #32]
 801205e:	617b      	str	r3, [r7, #20]
 8012060:	687b      	ldr	r3, [r7, #4]
 8012062:	685b      	ldr	r3, [r3, #4]
 8012064:	613b      	str	r3, [r7, #16]
 8012066:	687b      	ldr	r3, [r7, #4]
 8012068:	69db      	ldr	r3, [r3, #28]
 801206a:	60fb      	str	r3, [r7, #12]
 801206c:	68fb      	ldr	r3, [r7, #12]
 801206e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8012072:	60fb      	str	r3, [r7, #12]
 8012074:	68fb      	ldr	r3, [r7, #12]
 8012076:	f023 0303 	bic.w	r3, r3, #3
 801207a:	60fb      	str	r3, [r7, #12]
 801207c:	683b      	ldr	r3, [r7, #0]
 801207e:	681b      	ldr	r3, [r3, #0]
 8012080:	68fa      	ldr	r2, [r7, #12]
 8012082:	4313      	orrs	r3, r2
 8012084:	60fb      	str	r3, [r7, #12]
 8012086:	697b      	ldr	r3, [r7, #20]
 8012088:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 801208c:	617b      	str	r3, [r7, #20]
 801208e:	683b      	ldr	r3, [r7, #0]
 8012090:	689b      	ldr	r3, [r3, #8]
 8012092:	021b      	lsls	r3, r3, #8
 8012094:	697a      	ldr	r2, [r7, #20]
 8012096:	4313      	orrs	r3, r2
 8012098:	617b      	str	r3, [r7, #20]
 801209a:	687b      	ldr	r3, [r7, #4]
 801209c:	4a21      	ldr	r2, [pc, #132]	@ (8012124 <TIM_OC3_SetConfig+0xe0>)
 801209e:	4293      	cmp	r3, r2
 80120a0:	d003      	beq.n	80120aa <TIM_OC3_SetConfig+0x66>
 80120a2:	687b      	ldr	r3, [r7, #4]
 80120a4:	4a20      	ldr	r2, [pc, #128]	@ (8012128 <TIM_OC3_SetConfig+0xe4>)
 80120a6:	4293      	cmp	r3, r2
 80120a8:	d10d      	bne.n	80120c6 <TIM_OC3_SetConfig+0x82>
 80120aa:	697b      	ldr	r3, [r7, #20]
 80120ac:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80120b0:	617b      	str	r3, [r7, #20]
 80120b2:	683b      	ldr	r3, [r7, #0]
 80120b4:	68db      	ldr	r3, [r3, #12]
 80120b6:	021b      	lsls	r3, r3, #8
 80120b8:	697a      	ldr	r2, [r7, #20]
 80120ba:	4313      	orrs	r3, r2
 80120bc:	617b      	str	r3, [r7, #20]
 80120be:	697b      	ldr	r3, [r7, #20]
 80120c0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80120c4:	617b      	str	r3, [r7, #20]
 80120c6:	687b      	ldr	r3, [r7, #4]
 80120c8:	4a16      	ldr	r2, [pc, #88]	@ (8012124 <TIM_OC3_SetConfig+0xe0>)
 80120ca:	4293      	cmp	r3, r2
 80120cc:	d003      	beq.n	80120d6 <TIM_OC3_SetConfig+0x92>
 80120ce:	687b      	ldr	r3, [r7, #4]
 80120d0:	4a15      	ldr	r2, [pc, #84]	@ (8012128 <TIM_OC3_SetConfig+0xe4>)
 80120d2:	4293      	cmp	r3, r2
 80120d4:	d113      	bne.n	80120fe <TIM_OC3_SetConfig+0xba>
 80120d6:	693b      	ldr	r3, [r7, #16]
 80120d8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80120dc:	613b      	str	r3, [r7, #16]
 80120de:	693b      	ldr	r3, [r7, #16]
 80120e0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80120e4:	613b      	str	r3, [r7, #16]
 80120e6:	683b      	ldr	r3, [r7, #0]
 80120e8:	695b      	ldr	r3, [r3, #20]
 80120ea:	011b      	lsls	r3, r3, #4
 80120ec:	693a      	ldr	r2, [r7, #16]
 80120ee:	4313      	orrs	r3, r2
 80120f0:	613b      	str	r3, [r7, #16]
 80120f2:	683b      	ldr	r3, [r7, #0]
 80120f4:	699b      	ldr	r3, [r3, #24]
 80120f6:	011b      	lsls	r3, r3, #4
 80120f8:	693a      	ldr	r2, [r7, #16]
 80120fa:	4313      	orrs	r3, r2
 80120fc:	613b      	str	r3, [r7, #16]
 80120fe:	687b      	ldr	r3, [r7, #4]
 8012100:	693a      	ldr	r2, [r7, #16]
 8012102:	605a      	str	r2, [r3, #4]
 8012104:	687b      	ldr	r3, [r7, #4]
 8012106:	68fa      	ldr	r2, [r7, #12]
 8012108:	61da      	str	r2, [r3, #28]
 801210a:	683b      	ldr	r3, [r7, #0]
 801210c:	685a      	ldr	r2, [r3, #4]
 801210e:	687b      	ldr	r3, [r7, #4]
 8012110:	63da      	str	r2, [r3, #60]	@ 0x3c
 8012112:	687b      	ldr	r3, [r7, #4]
 8012114:	697a      	ldr	r2, [r7, #20]
 8012116:	621a      	str	r2, [r3, #32]
 8012118:	bf00      	nop
 801211a:	371c      	adds	r7, #28
 801211c:	46bd      	mov	sp, r7
 801211e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012122:	4770      	bx	lr
 8012124:	40010000 	.word	0x40010000
 8012128:	40010400 	.word	0x40010400

0801212c <TIM_OC4_SetConfig>:
 801212c:	b480      	push	{r7}
 801212e:	b087      	sub	sp, #28
 8012130:	af00      	add	r7, sp, #0
 8012132:	6078      	str	r0, [r7, #4]
 8012134:	6039      	str	r1, [r7, #0]
 8012136:	687b      	ldr	r3, [r7, #4]
 8012138:	6a1b      	ldr	r3, [r3, #32]
 801213a:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 801213e:	687b      	ldr	r3, [r7, #4]
 8012140:	621a      	str	r2, [r3, #32]
 8012142:	687b      	ldr	r3, [r7, #4]
 8012144:	6a1b      	ldr	r3, [r3, #32]
 8012146:	613b      	str	r3, [r7, #16]
 8012148:	687b      	ldr	r3, [r7, #4]
 801214a:	685b      	ldr	r3, [r3, #4]
 801214c:	617b      	str	r3, [r7, #20]
 801214e:	687b      	ldr	r3, [r7, #4]
 8012150:	69db      	ldr	r3, [r3, #28]
 8012152:	60fb      	str	r3, [r7, #12]
 8012154:	68fb      	ldr	r3, [r7, #12]
 8012156:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 801215a:	60fb      	str	r3, [r7, #12]
 801215c:	68fb      	ldr	r3, [r7, #12]
 801215e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8012162:	60fb      	str	r3, [r7, #12]
 8012164:	683b      	ldr	r3, [r7, #0]
 8012166:	681b      	ldr	r3, [r3, #0]
 8012168:	021b      	lsls	r3, r3, #8
 801216a:	68fa      	ldr	r2, [r7, #12]
 801216c:	4313      	orrs	r3, r2
 801216e:	60fb      	str	r3, [r7, #12]
 8012170:	693b      	ldr	r3, [r7, #16]
 8012172:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8012176:	613b      	str	r3, [r7, #16]
 8012178:	683b      	ldr	r3, [r7, #0]
 801217a:	689b      	ldr	r3, [r3, #8]
 801217c:	031b      	lsls	r3, r3, #12
 801217e:	693a      	ldr	r2, [r7, #16]
 8012180:	4313      	orrs	r3, r2
 8012182:	613b      	str	r3, [r7, #16]
 8012184:	687b      	ldr	r3, [r7, #4]
 8012186:	4a12      	ldr	r2, [pc, #72]	@ (80121d0 <TIM_OC4_SetConfig+0xa4>)
 8012188:	4293      	cmp	r3, r2
 801218a:	d003      	beq.n	8012194 <TIM_OC4_SetConfig+0x68>
 801218c:	687b      	ldr	r3, [r7, #4]
 801218e:	4a11      	ldr	r2, [pc, #68]	@ (80121d4 <TIM_OC4_SetConfig+0xa8>)
 8012190:	4293      	cmp	r3, r2
 8012192:	d109      	bne.n	80121a8 <TIM_OC4_SetConfig+0x7c>
 8012194:	697b      	ldr	r3, [r7, #20]
 8012196:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 801219a:	617b      	str	r3, [r7, #20]
 801219c:	683b      	ldr	r3, [r7, #0]
 801219e:	695b      	ldr	r3, [r3, #20]
 80121a0:	019b      	lsls	r3, r3, #6
 80121a2:	697a      	ldr	r2, [r7, #20]
 80121a4:	4313      	orrs	r3, r2
 80121a6:	617b      	str	r3, [r7, #20]
 80121a8:	687b      	ldr	r3, [r7, #4]
 80121aa:	697a      	ldr	r2, [r7, #20]
 80121ac:	605a      	str	r2, [r3, #4]
 80121ae:	687b      	ldr	r3, [r7, #4]
 80121b0:	68fa      	ldr	r2, [r7, #12]
 80121b2:	61da      	str	r2, [r3, #28]
 80121b4:	683b      	ldr	r3, [r7, #0]
 80121b6:	685a      	ldr	r2, [r3, #4]
 80121b8:	687b      	ldr	r3, [r7, #4]
 80121ba:	641a      	str	r2, [r3, #64]	@ 0x40
 80121bc:	687b      	ldr	r3, [r7, #4]
 80121be:	693a      	ldr	r2, [r7, #16]
 80121c0:	621a      	str	r2, [r3, #32]
 80121c2:	bf00      	nop
 80121c4:	371c      	adds	r7, #28
 80121c6:	46bd      	mov	sp, r7
 80121c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80121cc:	4770      	bx	lr
 80121ce:	bf00      	nop
 80121d0:	40010000 	.word	0x40010000
 80121d4:	40010400 	.word	0x40010400

080121d8 <TIM_TI1_ConfigInputStage>:
 80121d8:	b480      	push	{r7}
 80121da:	b087      	sub	sp, #28
 80121dc:	af00      	add	r7, sp, #0
 80121de:	60f8      	str	r0, [r7, #12]
 80121e0:	60b9      	str	r1, [r7, #8]
 80121e2:	607a      	str	r2, [r7, #4]
 80121e4:	68fb      	ldr	r3, [r7, #12]
 80121e6:	6a1b      	ldr	r3, [r3, #32]
 80121e8:	617b      	str	r3, [r7, #20]
 80121ea:	68fb      	ldr	r3, [r7, #12]
 80121ec:	6a1b      	ldr	r3, [r3, #32]
 80121ee:	f023 0201 	bic.w	r2, r3, #1
 80121f2:	68fb      	ldr	r3, [r7, #12]
 80121f4:	621a      	str	r2, [r3, #32]
 80121f6:	68fb      	ldr	r3, [r7, #12]
 80121f8:	699b      	ldr	r3, [r3, #24]
 80121fa:	613b      	str	r3, [r7, #16]
 80121fc:	693b      	ldr	r3, [r7, #16]
 80121fe:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8012202:	613b      	str	r3, [r7, #16]
 8012204:	687b      	ldr	r3, [r7, #4]
 8012206:	011b      	lsls	r3, r3, #4
 8012208:	693a      	ldr	r2, [r7, #16]
 801220a:	4313      	orrs	r3, r2
 801220c:	613b      	str	r3, [r7, #16]
 801220e:	697b      	ldr	r3, [r7, #20]
 8012210:	f023 030a 	bic.w	r3, r3, #10
 8012214:	617b      	str	r3, [r7, #20]
 8012216:	697a      	ldr	r2, [r7, #20]
 8012218:	68bb      	ldr	r3, [r7, #8]
 801221a:	4313      	orrs	r3, r2
 801221c:	617b      	str	r3, [r7, #20]
 801221e:	68fb      	ldr	r3, [r7, #12]
 8012220:	693a      	ldr	r2, [r7, #16]
 8012222:	619a      	str	r2, [r3, #24]
 8012224:	68fb      	ldr	r3, [r7, #12]
 8012226:	697a      	ldr	r2, [r7, #20]
 8012228:	621a      	str	r2, [r3, #32]
 801222a:	bf00      	nop
 801222c:	371c      	adds	r7, #28
 801222e:	46bd      	mov	sp, r7
 8012230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012234:	4770      	bx	lr

08012236 <TIM_TI2_ConfigInputStage>:
 8012236:	b480      	push	{r7}
 8012238:	b087      	sub	sp, #28
 801223a:	af00      	add	r7, sp, #0
 801223c:	60f8      	str	r0, [r7, #12]
 801223e:	60b9      	str	r1, [r7, #8]
 8012240:	607a      	str	r2, [r7, #4]
 8012242:	68fb      	ldr	r3, [r7, #12]
 8012244:	6a1b      	ldr	r3, [r3, #32]
 8012246:	f023 0210 	bic.w	r2, r3, #16
 801224a:	68fb      	ldr	r3, [r7, #12]
 801224c:	621a      	str	r2, [r3, #32]
 801224e:	68fb      	ldr	r3, [r7, #12]
 8012250:	699b      	ldr	r3, [r3, #24]
 8012252:	617b      	str	r3, [r7, #20]
 8012254:	68fb      	ldr	r3, [r7, #12]
 8012256:	6a1b      	ldr	r3, [r3, #32]
 8012258:	613b      	str	r3, [r7, #16]
 801225a:	697b      	ldr	r3, [r7, #20]
 801225c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8012260:	617b      	str	r3, [r7, #20]
 8012262:	687b      	ldr	r3, [r7, #4]
 8012264:	031b      	lsls	r3, r3, #12
 8012266:	697a      	ldr	r2, [r7, #20]
 8012268:	4313      	orrs	r3, r2
 801226a:	617b      	str	r3, [r7, #20]
 801226c:	693b      	ldr	r3, [r7, #16]
 801226e:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8012272:	613b      	str	r3, [r7, #16]
 8012274:	68bb      	ldr	r3, [r7, #8]
 8012276:	011b      	lsls	r3, r3, #4
 8012278:	693a      	ldr	r2, [r7, #16]
 801227a:	4313      	orrs	r3, r2
 801227c:	613b      	str	r3, [r7, #16]
 801227e:	68fb      	ldr	r3, [r7, #12]
 8012280:	697a      	ldr	r2, [r7, #20]
 8012282:	619a      	str	r2, [r3, #24]
 8012284:	68fb      	ldr	r3, [r7, #12]
 8012286:	693a      	ldr	r2, [r7, #16]
 8012288:	621a      	str	r2, [r3, #32]
 801228a:	bf00      	nop
 801228c:	371c      	adds	r7, #28
 801228e:	46bd      	mov	sp, r7
 8012290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012294:	4770      	bx	lr

08012296 <TIM_ITRx_SetConfig>:
 8012296:	b480      	push	{r7}
 8012298:	b085      	sub	sp, #20
 801229a:	af00      	add	r7, sp, #0
 801229c:	6078      	str	r0, [r7, #4]
 801229e:	6039      	str	r1, [r7, #0]
 80122a0:	687b      	ldr	r3, [r7, #4]
 80122a2:	689b      	ldr	r3, [r3, #8]
 80122a4:	60fb      	str	r3, [r7, #12]
 80122a6:	68fb      	ldr	r3, [r7, #12]
 80122a8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80122ac:	60fb      	str	r3, [r7, #12]
 80122ae:	683a      	ldr	r2, [r7, #0]
 80122b0:	68fb      	ldr	r3, [r7, #12]
 80122b2:	4313      	orrs	r3, r2
 80122b4:	f043 0307 	orr.w	r3, r3, #7
 80122b8:	60fb      	str	r3, [r7, #12]
 80122ba:	687b      	ldr	r3, [r7, #4]
 80122bc:	68fa      	ldr	r2, [r7, #12]
 80122be:	609a      	str	r2, [r3, #8]
 80122c0:	bf00      	nop
 80122c2:	3714      	adds	r7, #20
 80122c4:	46bd      	mov	sp, r7
 80122c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80122ca:	4770      	bx	lr

080122cc <TIM_ETR_SetConfig>:
 80122cc:	b480      	push	{r7}
 80122ce:	b087      	sub	sp, #28
 80122d0:	af00      	add	r7, sp, #0
 80122d2:	60f8      	str	r0, [r7, #12]
 80122d4:	60b9      	str	r1, [r7, #8]
 80122d6:	607a      	str	r2, [r7, #4]
 80122d8:	603b      	str	r3, [r7, #0]
 80122da:	68fb      	ldr	r3, [r7, #12]
 80122dc:	689b      	ldr	r3, [r3, #8]
 80122de:	617b      	str	r3, [r7, #20]
 80122e0:	697b      	ldr	r3, [r7, #20]
 80122e2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80122e6:	617b      	str	r3, [r7, #20]
 80122e8:	683b      	ldr	r3, [r7, #0]
 80122ea:	021a      	lsls	r2, r3, #8
 80122ec:	687b      	ldr	r3, [r7, #4]
 80122ee:	431a      	orrs	r2, r3
 80122f0:	68bb      	ldr	r3, [r7, #8]
 80122f2:	4313      	orrs	r3, r2
 80122f4:	697a      	ldr	r2, [r7, #20]
 80122f6:	4313      	orrs	r3, r2
 80122f8:	617b      	str	r3, [r7, #20]
 80122fa:	68fb      	ldr	r3, [r7, #12]
 80122fc:	697a      	ldr	r2, [r7, #20]
 80122fe:	609a      	str	r2, [r3, #8]
 8012300:	bf00      	nop
 8012302:	371c      	adds	r7, #28
 8012304:	46bd      	mov	sp, r7
 8012306:	f85d 7b04 	ldr.w	r7, [sp], #4
 801230a:	4770      	bx	lr

0801230c <TIM_CCxChannelCmd>:
 801230c:	b480      	push	{r7}
 801230e:	b087      	sub	sp, #28
 8012310:	af00      	add	r7, sp, #0
 8012312:	60f8      	str	r0, [r7, #12]
 8012314:	60b9      	str	r1, [r7, #8]
 8012316:	607a      	str	r2, [r7, #4]
 8012318:	68bb      	ldr	r3, [r7, #8]
 801231a:	f003 031f 	and.w	r3, r3, #31
 801231e:	2201      	movs	r2, #1
 8012320:	fa02 f303 	lsl.w	r3, r2, r3
 8012324:	617b      	str	r3, [r7, #20]
 8012326:	68fb      	ldr	r3, [r7, #12]
 8012328:	6a1a      	ldr	r2, [r3, #32]
 801232a:	697b      	ldr	r3, [r7, #20]
 801232c:	43db      	mvns	r3, r3
 801232e:	401a      	ands	r2, r3
 8012330:	68fb      	ldr	r3, [r7, #12]
 8012332:	621a      	str	r2, [r3, #32]
 8012334:	68fb      	ldr	r3, [r7, #12]
 8012336:	6a1a      	ldr	r2, [r3, #32]
 8012338:	68bb      	ldr	r3, [r7, #8]
 801233a:	f003 031f 	and.w	r3, r3, #31
 801233e:	6879      	ldr	r1, [r7, #4]
 8012340:	fa01 f303 	lsl.w	r3, r1, r3
 8012344:	431a      	orrs	r2, r3
 8012346:	68fb      	ldr	r3, [r7, #12]
 8012348:	621a      	str	r2, [r3, #32]
 801234a:	bf00      	nop
 801234c:	371c      	adds	r7, #28
 801234e:	46bd      	mov	sp, r7
 8012350:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012354:	4770      	bx	lr
	...

08012358 <HAL_TIMEx_MasterConfigSynchronization>:
 8012358:	b480      	push	{r7}
 801235a:	b085      	sub	sp, #20
 801235c:	af00      	add	r7, sp, #0
 801235e:	6078      	str	r0, [r7, #4]
 8012360:	6039      	str	r1, [r7, #0]
 8012362:	687b      	ldr	r3, [r7, #4]
 8012364:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8012368:	2b01      	cmp	r3, #1
 801236a:	d101      	bne.n	8012370 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 801236c:	2302      	movs	r3, #2
 801236e:	e05a      	b.n	8012426 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8012370:	687b      	ldr	r3, [r7, #4]
 8012372:	2201      	movs	r2, #1
 8012374:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012378:	687b      	ldr	r3, [r7, #4]
 801237a:	2202      	movs	r2, #2
 801237c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012380:	687b      	ldr	r3, [r7, #4]
 8012382:	681b      	ldr	r3, [r3, #0]
 8012384:	685b      	ldr	r3, [r3, #4]
 8012386:	60fb      	str	r3, [r7, #12]
 8012388:	687b      	ldr	r3, [r7, #4]
 801238a:	681b      	ldr	r3, [r3, #0]
 801238c:	689b      	ldr	r3, [r3, #8]
 801238e:	60bb      	str	r3, [r7, #8]
 8012390:	68fb      	ldr	r3, [r7, #12]
 8012392:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8012396:	60fb      	str	r3, [r7, #12]
 8012398:	683b      	ldr	r3, [r7, #0]
 801239a:	681b      	ldr	r3, [r3, #0]
 801239c:	68fa      	ldr	r2, [r7, #12]
 801239e:	4313      	orrs	r3, r2
 80123a0:	60fb      	str	r3, [r7, #12]
 80123a2:	687b      	ldr	r3, [r7, #4]
 80123a4:	681b      	ldr	r3, [r3, #0]
 80123a6:	68fa      	ldr	r2, [r7, #12]
 80123a8:	605a      	str	r2, [r3, #4]
 80123aa:	687b      	ldr	r3, [r7, #4]
 80123ac:	681b      	ldr	r3, [r3, #0]
 80123ae:	4a21      	ldr	r2, [pc, #132]	@ (8012434 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 80123b0:	4293      	cmp	r3, r2
 80123b2:	d022      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123b4:	687b      	ldr	r3, [r7, #4]
 80123b6:	681b      	ldr	r3, [r3, #0]
 80123b8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80123bc:	d01d      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123be:	687b      	ldr	r3, [r7, #4]
 80123c0:	681b      	ldr	r3, [r3, #0]
 80123c2:	4a1d      	ldr	r2, [pc, #116]	@ (8012438 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80123c4:	4293      	cmp	r3, r2
 80123c6:	d018      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123c8:	687b      	ldr	r3, [r7, #4]
 80123ca:	681b      	ldr	r3, [r3, #0]
 80123cc:	4a1b      	ldr	r2, [pc, #108]	@ (801243c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80123ce:	4293      	cmp	r3, r2
 80123d0:	d013      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123d2:	687b      	ldr	r3, [r7, #4]
 80123d4:	681b      	ldr	r3, [r3, #0]
 80123d6:	4a1a      	ldr	r2, [pc, #104]	@ (8012440 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80123d8:	4293      	cmp	r3, r2
 80123da:	d00e      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123dc:	687b      	ldr	r3, [r7, #4]
 80123de:	681b      	ldr	r3, [r3, #0]
 80123e0:	4a18      	ldr	r2, [pc, #96]	@ (8012444 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80123e2:	4293      	cmp	r3, r2
 80123e4:	d009      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123e6:	687b      	ldr	r3, [r7, #4]
 80123e8:	681b      	ldr	r3, [r3, #0]
 80123ea:	4a17      	ldr	r2, [pc, #92]	@ (8012448 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80123ec:	4293      	cmp	r3, r2
 80123ee:	d004      	beq.n	80123fa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80123f0:	687b      	ldr	r3, [r7, #4]
 80123f2:	681b      	ldr	r3, [r3, #0]
 80123f4:	4a15      	ldr	r2, [pc, #84]	@ (801244c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80123f6:	4293      	cmp	r3, r2
 80123f8:	d10c      	bne.n	8012414 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80123fa:	68bb      	ldr	r3, [r7, #8]
 80123fc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012400:	60bb      	str	r3, [r7, #8]
 8012402:	683b      	ldr	r3, [r7, #0]
 8012404:	685b      	ldr	r3, [r3, #4]
 8012406:	68ba      	ldr	r2, [r7, #8]
 8012408:	4313      	orrs	r3, r2
 801240a:	60bb      	str	r3, [r7, #8]
 801240c:	687b      	ldr	r3, [r7, #4]
 801240e:	681b      	ldr	r3, [r3, #0]
 8012410:	68ba      	ldr	r2, [r7, #8]
 8012412:	609a      	str	r2, [r3, #8]
 8012414:	687b      	ldr	r3, [r7, #4]
 8012416:	2201      	movs	r2, #1
 8012418:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801241c:	687b      	ldr	r3, [r7, #4]
 801241e:	2200      	movs	r2, #0
 8012420:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012424:	2300      	movs	r3, #0
 8012426:	4618      	mov	r0, r3
 8012428:	3714      	adds	r7, #20
 801242a:	46bd      	mov	sp, r7
 801242c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012430:	4770      	bx	lr
 8012432:	bf00      	nop
 8012434:	40010000 	.word	0x40010000
 8012438:	40000400 	.word	0x40000400
 801243c:	40000800 	.word	0x40000800
 8012440:	40000c00 	.word	0x40000c00
 8012444:	40010400 	.word	0x40010400
 8012448:	40014000 	.word	0x40014000
 801244c:	40001800 	.word	0x40001800

08012450 <HAL_TIMEx_CommutCallback>:
 8012450:	b480      	push	{r7}
 8012452:	b083      	sub	sp, #12
 8012454:	af00      	add	r7, sp, #0
 8012456:	6078      	str	r0, [r7, #4]
 8012458:	bf00      	nop
 801245a:	370c      	adds	r7, #12
 801245c:	46bd      	mov	sp, r7
 801245e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012462:	4770      	bx	lr

08012464 <HAL_TIMEx_BreakCallback>:
 8012464:	b480      	push	{r7}
 8012466:	b083      	sub	sp, #12
 8012468:	af00      	add	r7, sp, #0
 801246a:	6078      	str	r0, [r7, #4]
 801246c:	bf00      	nop
 801246e:	370c      	adds	r7, #12
 8012470:	46bd      	mov	sp, r7
 8012472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012476:	4770      	bx	lr

08012478 <HAL_UART_Init>:
 8012478:	b580      	push	{r7, lr}
 801247a:	b082      	sub	sp, #8
 801247c:	af00      	add	r7, sp, #0
 801247e:	6078      	str	r0, [r7, #4]
 8012480:	687b      	ldr	r3, [r7, #4]
 8012482:	2b00      	cmp	r3, #0
 8012484:	d101      	bne.n	801248a <HAL_UART_Init+0x12>
 8012486:	2301      	movs	r3, #1
 8012488:	e03f      	b.n	801250a <HAL_UART_Init+0x92>
 801248a:	687b      	ldr	r3, [r7, #4]
 801248c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012490:	b2db      	uxtb	r3, r3
 8012492:	2b00      	cmp	r3, #0
 8012494:	d106      	bne.n	80124a4 <HAL_UART_Init+0x2c>
 8012496:	687b      	ldr	r3, [r7, #4]
 8012498:	2200      	movs	r2, #0
 801249a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801249e:	6878      	ldr	r0, [r7, #4]
 80124a0:	f7f2 f906 	bl	80046b0 <HAL_UART_MspInit>
 80124a4:	687b      	ldr	r3, [r7, #4]
 80124a6:	2224      	movs	r2, #36	@ 0x24
 80124a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80124ac:	687b      	ldr	r3, [r7, #4]
 80124ae:	681b      	ldr	r3, [r3, #0]
 80124b0:	68da      	ldr	r2, [r3, #12]
 80124b2:	687b      	ldr	r3, [r7, #4]
 80124b4:	681b      	ldr	r3, [r3, #0]
 80124b6:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80124ba:	60da      	str	r2, [r3, #12]
 80124bc:	6878      	ldr	r0, [r7, #4]
 80124be:	f000 fe51 	bl	8013164 <UART_SetConfig>
 80124c2:	687b      	ldr	r3, [r7, #4]
 80124c4:	681b      	ldr	r3, [r3, #0]
 80124c6:	691a      	ldr	r2, [r3, #16]
 80124c8:	687b      	ldr	r3, [r7, #4]
 80124ca:	681b      	ldr	r3, [r3, #0]
 80124cc:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80124d0:	611a      	str	r2, [r3, #16]
 80124d2:	687b      	ldr	r3, [r7, #4]
 80124d4:	681b      	ldr	r3, [r3, #0]
 80124d6:	695a      	ldr	r2, [r3, #20]
 80124d8:	687b      	ldr	r3, [r7, #4]
 80124da:	681b      	ldr	r3, [r3, #0]
 80124dc:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80124e0:	615a      	str	r2, [r3, #20]
 80124e2:	687b      	ldr	r3, [r7, #4]
 80124e4:	681b      	ldr	r3, [r3, #0]
 80124e6:	68da      	ldr	r2, [r3, #12]
 80124e8:	687b      	ldr	r3, [r7, #4]
 80124ea:	681b      	ldr	r3, [r3, #0]
 80124ec:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80124f0:	60da      	str	r2, [r3, #12]
 80124f2:	687b      	ldr	r3, [r7, #4]
 80124f4:	2200      	movs	r2, #0
 80124f6:	641a      	str	r2, [r3, #64]	@ 0x40
 80124f8:	687b      	ldr	r3, [r7, #4]
 80124fa:	2220      	movs	r2, #32
 80124fc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012500:	687b      	ldr	r3, [r7, #4]
 8012502:	2220      	movs	r2, #32
 8012504:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012508:	2300      	movs	r3, #0
 801250a:	4618      	mov	r0, r3
 801250c:	3708      	adds	r7, #8
 801250e:	46bd      	mov	sp, r7
 8012510:	bd80      	pop	{r7, pc}
	...

08012514 <HAL_UART_Transmit_DMA>:
 8012514:	b580      	push	{r7, lr}
 8012516:	b08c      	sub	sp, #48	@ 0x30
 8012518:	af00      	add	r7, sp, #0
 801251a:	60f8      	str	r0, [r7, #12]
 801251c:	60b9      	str	r1, [r7, #8]
 801251e:	4613      	mov	r3, r2
 8012520:	80fb      	strh	r3, [r7, #6]
 8012522:	68fb      	ldr	r3, [r7, #12]
 8012524:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012528:	b2db      	uxtb	r3, r3
 801252a:	2b20      	cmp	r3, #32
 801252c:	d165      	bne.n	80125fa <HAL_UART_Transmit_DMA+0xe6>
 801252e:	68bb      	ldr	r3, [r7, #8]
 8012530:	2b00      	cmp	r3, #0
 8012532:	d002      	beq.n	801253a <HAL_UART_Transmit_DMA+0x26>
 8012534:	88fb      	ldrh	r3, [r7, #6]
 8012536:	2b00      	cmp	r3, #0
 8012538:	d101      	bne.n	801253e <HAL_UART_Transmit_DMA+0x2a>
 801253a:	2301      	movs	r3, #1
 801253c:	e05e      	b.n	80125fc <HAL_UART_Transmit_DMA+0xe8>
 801253e:	68fb      	ldr	r3, [r7, #12]
 8012540:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8012544:	2b01      	cmp	r3, #1
 8012546:	d101      	bne.n	801254c <HAL_UART_Transmit_DMA+0x38>
 8012548:	2302      	movs	r3, #2
 801254a:	e057      	b.n	80125fc <HAL_UART_Transmit_DMA+0xe8>
 801254c:	68fb      	ldr	r3, [r7, #12]
 801254e:	2201      	movs	r2, #1
 8012550:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8012554:	68ba      	ldr	r2, [r7, #8]
 8012556:	68fb      	ldr	r3, [r7, #12]
 8012558:	621a      	str	r2, [r3, #32]
 801255a:	68fb      	ldr	r3, [r7, #12]
 801255c:	88fa      	ldrh	r2, [r7, #6]
 801255e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8012560:	68fb      	ldr	r3, [r7, #12]
 8012562:	88fa      	ldrh	r2, [r7, #6]
 8012564:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012566:	68fb      	ldr	r3, [r7, #12]
 8012568:	2200      	movs	r2, #0
 801256a:	641a      	str	r2, [r3, #64]	@ 0x40
 801256c:	68fb      	ldr	r3, [r7, #12]
 801256e:	2221      	movs	r2, #33	@ 0x21
 8012570:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012574:	68fb      	ldr	r3, [r7, #12]
 8012576:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012578:	4a22      	ldr	r2, [pc, #136]	@ (8012604 <HAL_UART_Transmit_DMA+0xf0>)
 801257a:	63da      	str	r2, [r3, #60]	@ 0x3c
 801257c:	68fb      	ldr	r3, [r7, #12]
 801257e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012580:	4a21      	ldr	r2, [pc, #132]	@ (8012608 <HAL_UART_Transmit_DMA+0xf4>)
 8012582:	641a      	str	r2, [r3, #64]	@ 0x40
 8012584:	68fb      	ldr	r3, [r7, #12]
 8012586:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012588:	4a20      	ldr	r2, [pc, #128]	@ (801260c <HAL_UART_Transmit_DMA+0xf8>)
 801258a:	64da      	str	r2, [r3, #76]	@ 0x4c
 801258c:	68fb      	ldr	r3, [r7, #12]
 801258e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012590:	2200      	movs	r2, #0
 8012592:	651a      	str	r2, [r3, #80]	@ 0x50
 8012594:	f107 0308 	add.w	r3, r7, #8
 8012598:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801259a:	68fb      	ldr	r3, [r7, #12]
 801259c:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 801259e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80125a0:	6819      	ldr	r1, [r3, #0]
 80125a2:	68fb      	ldr	r3, [r7, #12]
 80125a4:	681b      	ldr	r3, [r3, #0]
 80125a6:	3304      	adds	r3, #4
 80125a8:	461a      	mov	r2, r3
 80125aa:	88fb      	ldrh	r3, [r7, #6]
 80125ac:	f7fa f828 	bl	800c600 <HAL_DMA_Start_IT>
 80125b0:	68fb      	ldr	r3, [r7, #12]
 80125b2:	681b      	ldr	r3, [r3, #0]
 80125b4:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80125b8:	601a      	str	r2, [r3, #0]
 80125ba:	68fb      	ldr	r3, [r7, #12]
 80125bc:	2200      	movs	r2, #0
 80125be:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80125c2:	68fb      	ldr	r3, [r7, #12]
 80125c4:	681b      	ldr	r3, [r3, #0]
 80125c6:	3314      	adds	r3, #20
 80125c8:	61bb      	str	r3, [r7, #24]
 80125ca:	69bb      	ldr	r3, [r7, #24]
 80125cc:	e853 3f00 	ldrex	r3, [r3]
 80125d0:	617b      	str	r3, [r7, #20]
 80125d2:	697b      	ldr	r3, [r7, #20]
 80125d4:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80125d8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80125da:	68fb      	ldr	r3, [r7, #12]
 80125dc:	681b      	ldr	r3, [r3, #0]
 80125de:	3314      	adds	r3, #20
 80125e0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80125e2:	627a      	str	r2, [r7, #36]	@ 0x24
 80125e4:	623b      	str	r3, [r7, #32]
 80125e6:	6a39      	ldr	r1, [r7, #32]
 80125e8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80125ea:	e841 2300 	strex	r3, r2, [r1]
 80125ee:	61fb      	str	r3, [r7, #28]
 80125f0:	69fb      	ldr	r3, [r7, #28]
 80125f2:	2b00      	cmp	r3, #0
 80125f4:	d1e5      	bne.n	80125c2 <HAL_UART_Transmit_DMA+0xae>
 80125f6:	2300      	movs	r3, #0
 80125f8:	e000      	b.n	80125fc <HAL_UART_Transmit_DMA+0xe8>
 80125fa:	2302      	movs	r3, #2
 80125fc:	4618      	mov	r0, r3
 80125fe:	3730      	adds	r7, #48	@ 0x30
 8012600:	46bd      	mov	sp, r7
 8012602:	bd80      	pop	{r7, pc}
 8012604:	08012c95 	.word	0x08012c95
 8012608:	08012d2f 	.word	0x08012d2f
 801260c:	08012d4b 	.word	0x08012d4b

08012610 <HAL_UART_DMAStop>:
 8012610:	b580      	push	{r7, lr}
 8012612:	b090      	sub	sp, #64	@ 0x40
 8012614:	af00      	add	r7, sp, #0
 8012616:	6078      	str	r0, [r7, #4]
 8012618:	2300      	movs	r3, #0
 801261a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801261c:	687b      	ldr	r3, [r7, #4]
 801261e:	681b      	ldr	r3, [r3, #0]
 8012620:	695b      	ldr	r3, [r3, #20]
 8012622:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012626:	2b80      	cmp	r3, #128	@ 0x80
 8012628:	bf0c      	ite	eq
 801262a:	2301      	moveq	r3, #1
 801262c:	2300      	movne	r3, #0
 801262e:	b2db      	uxtb	r3, r3
 8012630:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012632:	687b      	ldr	r3, [r7, #4]
 8012634:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012638:	b2db      	uxtb	r3, r3
 801263a:	2b21      	cmp	r3, #33	@ 0x21
 801263c:	d128      	bne.n	8012690 <HAL_UART_DMAStop+0x80>
 801263e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012640:	2b00      	cmp	r3, #0
 8012642:	d025      	beq.n	8012690 <HAL_UART_DMAStop+0x80>
 8012644:	687b      	ldr	r3, [r7, #4]
 8012646:	681b      	ldr	r3, [r3, #0]
 8012648:	3314      	adds	r3, #20
 801264a:	627b      	str	r3, [r7, #36]	@ 0x24
 801264c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801264e:	e853 3f00 	ldrex	r3, [r3]
 8012652:	623b      	str	r3, [r7, #32]
 8012654:	6a3b      	ldr	r3, [r7, #32]
 8012656:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 801265a:	63bb      	str	r3, [r7, #56]	@ 0x38
 801265c:	687b      	ldr	r3, [r7, #4]
 801265e:	681b      	ldr	r3, [r3, #0]
 8012660:	3314      	adds	r3, #20
 8012662:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8012664:	633a      	str	r2, [r7, #48]	@ 0x30
 8012666:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012668:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 801266a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801266c:	e841 2300 	strex	r3, r2, [r1]
 8012670:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012672:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012674:	2b00      	cmp	r3, #0
 8012676:	d1e5      	bne.n	8012644 <HAL_UART_DMAStop+0x34>
 8012678:	687b      	ldr	r3, [r7, #4]
 801267a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801267c:	2b00      	cmp	r3, #0
 801267e:	d004      	beq.n	801268a <HAL_UART_DMAStop+0x7a>
 8012680:	687b      	ldr	r3, [r7, #4]
 8012682:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012684:	4618      	mov	r0, r3
 8012686:	f7fa f813 	bl	800c6b0 <HAL_DMA_Abort>
 801268a:	6878      	ldr	r0, [r7, #4]
 801268c:	f000 fba7 	bl	8012dde <UART_EndTxTransfer>
 8012690:	687b      	ldr	r3, [r7, #4]
 8012692:	681b      	ldr	r3, [r3, #0]
 8012694:	695b      	ldr	r3, [r3, #20]
 8012696:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801269a:	2b40      	cmp	r3, #64	@ 0x40
 801269c:	bf0c      	ite	eq
 801269e:	2301      	moveq	r3, #1
 80126a0:	2300      	movne	r3, #0
 80126a2:	b2db      	uxtb	r3, r3
 80126a4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80126a6:	687b      	ldr	r3, [r7, #4]
 80126a8:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80126ac:	b2db      	uxtb	r3, r3
 80126ae:	2b22      	cmp	r3, #34	@ 0x22
 80126b0:	d128      	bne.n	8012704 <HAL_UART_DMAStop+0xf4>
 80126b2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80126b4:	2b00      	cmp	r3, #0
 80126b6:	d025      	beq.n	8012704 <HAL_UART_DMAStop+0xf4>
 80126b8:	687b      	ldr	r3, [r7, #4]
 80126ba:	681b      	ldr	r3, [r3, #0]
 80126bc:	3314      	adds	r3, #20
 80126be:	613b      	str	r3, [r7, #16]
 80126c0:	693b      	ldr	r3, [r7, #16]
 80126c2:	e853 3f00 	ldrex	r3, [r3]
 80126c6:	60fb      	str	r3, [r7, #12]
 80126c8:	68fb      	ldr	r3, [r7, #12]
 80126ca:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80126ce:	637b      	str	r3, [r7, #52]	@ 0x34
 80126d0:	687b      	ldr	r3, [r7, #4]
 80126d2:	681b      	ldr	r3, [r3, #0]
 80126d4:	3314      	adds	r3, #20
 80126d6:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80126d8:	61fa      	str	r2, [r7, #28]
 80126da:	61bb      	str	r3, [r7, #24]
 80126dc:	69b9      	ldr	r1, [r7, #24]
 80126de:	69fa      	ldr	r2, [r7, #28]
 80126e0:	e841 2300 	strex	r3, r2, [r1]
 80126e4:	617b      	str	r3, [r7, #20]
 80126e6:	697b      	ldr	r3, [r7, #20]
 80126e8:	2b00      	cmp	r3, #0
 80126ea:	d1e5      	bne.n	80126b8 <HAL_UART_DMAStop+0xa8>
 80126ec:	687b      	ldr	r3, [r7, #4]
 80126ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80126f0:	2b00      	cmp	r3, #0
 80126f2:	d004      	beq.n	80126fe <HAL_UART_DMAStop+0xee>
 80126f4:	687b      	ldr	r3, [r7, #4]
 80126f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80126f8:	4618      	mov	r0, r3
 80126fa:	f7f9 ffd9 	bl	800c6b0 <HAL_DMA_Abort>
 80126fe:	6878      	ldr	r0, [r7, #4]
 8012700:	f000 fb95 	bl	8012e2e <UART_EndRxTransfer>
 8012704:	2300      	movs	r3, #0
 8012706:	4618      	mov	r0, r3
 8012708:	3740      	adds	r7, #64	@ 0x40
 801270a:	46bd      	mov	sp, r7
 801270c:	bd80      	pop	{r7, pc}
	...

08012710 <HAL_UART_IRQHandler>:
 8012710:	b580      	push	{r7, lr}
 8012712:	b0ba      	sub	sp, #232	@ 0xe8
 8012714:	af00      	add	r7, sp, #0
 8012716:	6078      	str	r0, [r7, #4]
 8012718:	687b      	ldr	r3, [r7, #4]
 801271a:	681b      	ldr	r3, [r3, #0]
 801271c:	681b      	ldr	r3, [r3, #0]
 801271e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8012722:	687b      	ldr	r3, [r7, #4]
 8012724:	681b      	ldr	r3, [r3, #0]
 8012726:	68db      	ldr	r3, [r3, #12]
 8012728:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 801272c:	687b      	ldr	r3, [r7, #4]
 801272e:	681b      	ldr	r3, [r3, #0]
 8012730:	695b      	ldr	r3, [r3, #20]
 8012732:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8012736:	2300      	movs	r3, #0
 8012738:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 801273c:	2300      	movs	r3, #0
 801273e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8012742:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012746:	f003 030f 	and.w	r3, r3, #15
 801274a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 801274e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8012752:	2b00      	cmp	r3, #0
 8012754:	d10f      	bne.n	8012776 <HAL_UART_IRQHandler+0x66>
 8012756:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801275a:	f003 0320 	and.w	r3, r3, #32
 801275e:	2b00      	cmp	r3, #0
 8012760:	d009      	beq.n	8012776 <HAL_UART_IRQHandler+0x66>
 8012762:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012766:	f003 0320 	and.w	r3, r3, #32
 801276a:	2b00      	cmp	r3, #0
 801276c:	d003      	beq.n	8012776 <HAL_UART_IRQHandler+0x66>
 801276e:	6878      	ldr	r0, [r7, #4]
 8012770:	f000 fc3c 	bl	8012fec <UART_Receive_IT>
 8012774:	e256      	b.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012776:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 801277a:	2b00      	cmp	r3, #0
 801277c:	f000 80de 	beq.w	801293c <HAL_UART_IRQHandler+0x22c>
 8012780:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8012784:	f003 0301 	and.w	r3, r3, #1
 8012788:	2b00      	cmp	r3, #0
 801278a:	d106      	bne.n	801279a <HAL_UART_IRQHandler+0x8a>
 801278c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012790:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8012794:	2b00      	cmp	r3, #0
 8012796:	f000 80d1 	beq.w	801293c <HAL_UART_IRQHandler+0x22c>
 801279a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801279e:	f003 0301 	and.w	r3, r3, #1
 80127a2:	2b00      	cmp	r3, #0
 80127a4:	d00b      	beq.n	80127be <HAL_UART_IRQHandler+0xae>
 80127a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80127aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80127ae:	2b00      	cmp	r3, #0
 80127b0:	d005      	beq.n	80127be <HAL_UART_IRQHandler+0xae>
 80127b2:	687b      	ldr	r3, [r7, #4]
 80127b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80127b6:	f043 0201 	orr.w	r2, r3, #1
 80127ba:	687b      	ldr	r3, [r7, #4]
 80127bc:	641a      	str	r2, [r3, #64]	@ 0x40
 80127be:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80127c2:	f003 0304 	and.w	r3, r3, #4
 80127c6:	2b00      	cmp	r3, #0
 80127c8:	d00b      	beq.n	80127e2 <HAL_UART_IRQHandler+0xd2>
 80127ca:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80127ce:	f003 0301 	and.w	r3, r3, #1
 80127d2:	2b00      	cmp	r3, #0
 80127d4:	d005      	beq.n	80127e2 <HAL_UART_IRQHandler+0xd2>
 80127d6:	687b      	ldr	r3, [r7, #4]
 80127d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80127da:	f043 0202 	orr.w	r2, r3, #2
 80127de:	687b      	ldr	r3, [r7, #4]
 80127e0:	641a      	str	r2, [r3, #64]	@ 0x40
 80127e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80127e6:	f003 0302 	and.w	r3, r3, #2
 80127ea:	2b00      	cmp	r3, #0
 80127ec:	d00b      	beq.n	8012806 <HAL_UART_IRQHandler+0xf6>
 80127ee:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80127f2:	f003 0301 	and.w	r3, r3, #1
 80127f6:	2b00      	cmp	r3, #0
 80127f8:	d005      	beq.n	8012806 <HAL_UART_IRQHandler+0xf6>
 80127fa:	687b      	ldr	r3, [r7, #4]
 80127fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80127fe:	f043 0204 	orr.w	r2, r3, #4
 8012802:	687b      	ldr	r3, [r7, #4]
 8012804:	641a      	str	r2, [r3, #64]	@ 0x40
 8012806:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801280a:	f003 0308 	and.w	r3, r3, #8
 801280e:	2b00      	cmp	r3, #0
 8012810:	d011      	beq.n	8012836 <HAL_UART_IRQHandler+0x126>
 8012812:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012816:	f003 0320 	and.w	r3, r3, #32
 801281a:	2b00      	cmp	r3, #0
 801281c:	d105      	bne.n	801282a <HAL_UART_IRQHandler+0x11a>
 801281e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8012822:	f003 0301 	and.w	r3, r3, #1
 8012826:	2b00      	cmp	r3, #0
 8012828:	d005      	beq.n	8012836 <HAL_UART_IRQHandler+0x126>
 801282a:	687b      	ldr	r3, [r7, #4]
 801282c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801282e:	f043 0208 	orr.w	r2, r3, #8
 8012832:	687b      	ldr	r3, [r7, #4]
 8012834:	641a      	str	r2, [r3, #64]	@ 0x40
 8012836:	687b      	ldr	r3, [r7, #4]
 8012838:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801283a:	2b00      	cmp	r3, #0
 801283c:	f000 81ed 	beq.w	8012c1a <HAL_UART_IRQHandler+0x50a>
 8012840:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012844:	f003 0320 	and.w	r3, r3, #32
 8012848:	2b00      	cmp	r3, #0
 801284a:	d008      	beq.n	801285e <HAL_UART_IRQHandler+0x14e>
 801284c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012850:	f003 0320 	and.w	r3, r3, #32
 8012854:	2b00      	cmp	r3, #0
 8012856:	d002      	beq.n	801285e <HAL_UART_IRQHandler+0x14e>
 8012858:	6878      	ldr	r0, [r7, #4]
 801285a:	f000 fbc7 	bl	8012fec <UART_Receive_IT>
 801285e:	687b      	ldr	r3, [r7, #4]
 8012860:	681b      	ldr	r3, [r3, #0]
 8012862:	695b      	ldr	r3, [r3, #20]
 8012864:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012868:	2b40      	cmp	r3, #64	@ 0x40
 801286a:	bf0c      	ite	eq
 801286c:	2301      	moveq	r3, #1
 801286e:	2300      	movne	r3, #0
 8012870:	b2db      	uxtb	r3, r3
 8012872:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8012876:	687b      	ldr	r3, [r7, #4]
 8012878:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801287a:	f003 0308 	and.w	r3, r3, #8
 801287e:	2b00      	cmp	r3, #0
 8012880:	d103      	bne.n	801288a <HAL_UART_IRQHandler+0x17a>
 8012882:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8012886:	2b00      	cmp	r3, #0
 8012888:	d04f      	beq.n	801292a <HAL_UART_IRQHandler+0x21a>
 801288a:	6878      	ldr	r0, [r7, #4]
 801288c:	f000 facf 	bl	8012e2e <UART_EndRxTransfer>
 8012890:	687b      	ldr	r3, [r7, #4]
 8012892:	681b      	ldr	r3, [r3, #0]
 8012894:	695b      	ldr	r3, [r3, #20]
 8012896:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801289a:	2b40      	cmp	r3, #64	@ 0x40
 801289c:	d141      	bne.n	8012922 <HAL_UART_IRQHandler+0x212>
 801289e:	687b      	ldr	r3, [r7, #4]
 80128a0:	681b      	ldr	r3, [r3, #0]
 80128a2:	3314      	adds	r3, #20
 80128a4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80128a8:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80128ac:	e853 3f00 	ldrex	r3, [r3]
 80128b0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80128b4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80128b8:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80128bc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80128c0:	687b      	ldr	r3, [r7, #4]
 80128c2:	681b      	ldr	r3, [r3, #0]
 80128c4:	3314      	adds	r3, #20
 80128c6:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80128ca:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80128ce:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80128d2:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80128d6:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80128da:	e841 2300 	strex	r3, r2, [r1]
 80128de:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80128e2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80128e6:	2b00      	cmp	r3, #0
 80128e8:	d1d9      	bne.n	801289e <HAL_UART_IRQHandler+0x18e>
 80128ea:	687b      	ldr	r3, [r7, #4]
 80128ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80128ee:	2b00      	cmp	r3, #0
 80128f0:	d013      	beq.n	801291a <HAL_UART_IRQHandler+0x20a>
 80128f2:	687b      	ldr	r3, [r7, #4]
 80128f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80128f6:	4a7d      	ldr	r2, [pc, #500]	@ (8012aec <HAL_UART_IRQHandler+0x3dc>)
 80128f8:	651a      	str	r2, [r3, #80]	@ 0x50
 80128fa:	687b      	ldr	r3, [r7, #4]
 80128fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80128fe:	4618      	mov	r0, r3
 8012900:	f7f9 ff46 	bl	800c790 <HAL_DMA_Abort_IT>
 8012904:	4603      	mov	r3, r0
 8012906:	2b00      	cmp	r3, #0
 8012908:	d016      	beq.n	8012938 <HAL_UART_IRQHandler+0x228>
 801290a:	687b      	ldr	r3, [r7, #4]
 801290c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801290e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8012910:	687a      	ldr	r2, [r7, #4]
 8012912:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8012914:	4610      	mov	r0, r2
 8012916:	4798      	blx	r3
 8012918:	e00e      	b.n	8012938 <HAL_UART_IRQHandler+0x228>
 801291a:	6878      	ldr	r0, [r7, #4]
 801291c:	f000 f9a4 	bl	8012c68 <HAL_UART_ErrorCallback>
 8012920:	e00a      	b.n	8012938 <HAL_UART_IRQHandler+0x228>
 8012922:	6878      	ldr	r0, [r7, #4]
 8012924:	f000 f9a0 	bl	8012c68 <HAL_UART_ErrorCallback>
 8012928:	e006      	b.n	8012938 <HAL_UART_IRQHandler+0x228>
 801292a:	6878      	ldr	r0, [r7, #4]
 801292c:	f000 f99c 	bl	8012c68 <HAL_UART_ErrorCallback>
 8012930:	687b      	ldr	r3, [r7, #4]
 8012932:	2200      	movs	r2, #0
 8012934:	641a      	str	r2, [r3, #64]	@ 0x40
 8012936:	e170      	b.n	8012c1a <HAL_UART_IRQHandler+0x50a>
 8012938:	bf00      	nop
 801293a:	e16e      	b.n	8012c1a <HAL_UART_IRQHandler+0x50a>
 801293c:	687b      	ldr	r3, [r7, #4]
 801293e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012940:	2b01      	cmp	r3, #1
 8012942:	f040 814a 	bne.w	8012bda <HAL_UART_IRQHandler+0x4ca>
 8012946:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801294a:	f003 0310 	and.w	r3, r3, #16
 801294e:	2b00      	cmp	r3, #0
 8012950:	f000 8143 	beq.w	8012bda <HAL_UART_IRQHandler+0x4ca>
 8012954:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012958:	f003 0310 	and.w	r3, r3, #16
 801295c:	2b00      	cmp	r3, #0
 801295e:	f000 813c 	beq.w	8012bda <HAL_UART_IRQHandler+0x4ca>
 8012962:	2300      	movs	r3, #0
 8012964:	60bb      	str	r3, [r7, #8]
 8012966:	687b      	ldr	r3, [r7, #4]
 8012968:	681b      	ldr	r3, [r3, #0]
 801296a:	681b      	ldr	r3, [r3, #0]
 801296c:	60bb      	str	r3, [r7, #8]
 801296e:	687b      	ldr	r3, [r7, #4]
 8012970:	681b      	ldr	r3, [r3, #0]
 8012972:	685b      	ldr	r3, [r3, #4]
 8012974:	60bb      	str	r3, [r7, #8]
 8012976:	68bb      	ldr	r3, [r7, #8]
 8012978:	687b      	ldr	r3, [r7, #4]
 801297a:	681b      	ldr	r3, [r3, #0]
 801297c:	695b      	ldr	r3, [r3, #20]
 801297e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012982:	2b40      	cmp	r3, #64	@ 0x40
 8012984:	f040 80b4 	bne.w	8012af0 <HAL_UART_IRQHandler+0x3e0>
 8012988:	687b      	ldr	r3, [r7, #4]
 801298a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801298c:	681b      	ldr	r3, [r3, #0]
 801298e:	685b      	ldr	r3, [r3, #4]
 8012990:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8012994:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8012998:	2b00      	cmp	r3, #0
 801299a:	f000 8140 	beq.w	8012c1e <HAL_UART_IRQHandler+0x50e>
 801299e:	687b      	ldr	r3, [r7, #4]
 80129a0:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80129a2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80129a6:	429a      	cmp	r2, r3
 80129a8:	f080 8139 	bcs.w	8012c1e <HAL_UART_IRQHandler+0x50e>
 80129ac:	687b      	ldr	r3, [r7, #4]
 80129ae:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80129b2:	85da      	strh	r2, [r3, #46]	@ 0x2e
 80129b4:	687b      	ldr	r3, [r7, #4]
 80129b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80129b8:	69db      	ldr	r3, [r3, #28]
 80129ba:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80129be:	f000 8088 	beq.w	8012ad2 <HAL_UART_IRQHandler+0x3c2>
 80129c2:	687b      	ldr	r3, [r7, #4]
 80129c4:	681b      	ldr	r3, [r3, #0]
 80129c6:	330c      	adds	r3, #12
 80129c8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80129cc:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80129d0:	e853 3f00 	ldrex	r3, [r3]
 80129d4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80129d8:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80129dc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80129e0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80129e4:	687b      	ldr	r3, [r7, #4]
 80129e6:	681b      	ldr	r3, [r3, #0]
 80129e8:	330c      	adds	r3, #12
 80129ea:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80129ee:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80129f2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80129f6:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80129fa:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80129fe:	e841 2300 	strex	r3, r2, [r1]
 8012a02:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8012a06:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8012a0a:	2b00      	cmp	r3, #0
 8012a0c:	d1d9      	bne.n	80129c2 <HAL_UART_IRQHandler+0x2b2>
 8012a0e:	687b      	ldr	r3, [r7, #4]
 8012a10:	681b      	ldr	r3, [r3, #0]
 8012a12:	3314      	adds	r3, #20
 8012a14:	677b      	str	r3, [r7, #116]	@ 0x74
 8012a16:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8012a18:	e853 3f00 	ldrex	r3, [r3]
 8012a1c:	673b      	str	r3, [r7, #112]	@ 0x70
 8012a1e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8012a20:	f023 0301 	bic.w	r3, r3, #1
 8012a24:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8012a28:	687b      	ldr	r3, [r7, #4]
 8012a2a:	681b      	ldr	r3, [r3, #0]
 8012a2c:	3314      	adds	r3, #20
 8012a2e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8012a32:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8012a36:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8012a38:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8012a3a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8012a3e:	e841 2300 	strex	r3, r2, [r1]
 8012a42:	67bb      	str	r3, [r7, #120]	@ 0x78
 8012a44:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8012a46:	2b00      	cmp	r3, #0
 8012a48:	d1e1      	bne.n	8012a0e <HAL_UART_IRQHandler+0x2fe>
 8012a4a:	687b      	ldr	r3, [r7, #4]
 8012a4c:	681b      	ldr	r3, [r3, #0]
 8012a4e:	3314      	adds	r3, #20
 8012a50:	663b      	str	r3, [r7, #96]	@ 0x60
 8012a52:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8012a54:	e853 3f00 	ldrex	r3, [r3]
 8012a58:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8012a5a:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8012a5c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8012a60:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8012a64:	687b      	ldr	r3, [r7, #4]
 8012a66:	681b      	ldr	r3, [r3, #0]
 8012a68:	3314      	adds	r3, #20
 8012a6a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8012a6e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8012a70:	66bb      	str	r3, [r7, #104]	@ 0x68
 8012a72:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8012a74:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8012a76:	e841 2300 	strex	r3, r2, [r1]
 8012a7a:	667b      	str	r3, [r7, #100]	@ 0x64
 8012a7c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8012a7e:	2b00      	cmp	r3, #0
 8012a80:	d1e3      	bne.n	8012a4a <HAL_UART_IRQHandler+0x33a>
 8012a82:	687b      	ldr	r3, [r7, #4]
 8012a84:	2220      	movs	r2, #32
 8012a86:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012a8a:	687b      	ldr	r3, [r7, #4]
 8012a8c:	2200      	movs	r2, #0
 8012a8e:	631a      	str	r2, [r3, #48]	@ 0x30
 8012a90:	687b      	ldr	r3, [r7, #4]
 8012a92:	681b      	ldr	r3, [r3, #0]
 8012a94:	330c      	adds	r3, #12
 8012a96:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8012a98:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8012a9a:	e853 3f00 	ldrex	r3, [r3]
 8012a9e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8012aa0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8012aa2:	f023 0310 	bic.w	r3, r3, #16
 8012aa6:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8012aaa:	687b      	ldr	r3, [r7, #4]
 8012aac:	681b      	ldr	r3, [r3, #0]
 8012aae:	330c      	adds	r3, #12
 8012ab0:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8012ab4:	65ba      	str	r2, [r7, #88]	@ 0x58
 8012ab6:	657b      	str	r3, [r7, #84]	@ 0x54
 8012ab8:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8012aba:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8012abc:	e841 2300 	strex	r3, r2, [r1]
 8012ac0:	653b      	str	r3, [r7, #80]	@ 0x50
 8012ac2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8012ac4:	2b00      	cmp	r3, #0
 8012ac6:	d1e3      	bne.n	8012a90 <HAL_UART_IRQHandler+0x380>
 8012ac8:	687b      	ldr	r3, [r7, #4]
 8012aca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012acc:	4618      	mov	r0, r3
 8012ace:	f7f9 fdef 	bl	800c6b0 <HAL_DMA_Abort>
 8012ad2:	687b      	ldr	r3, [r7, #4]
 8012ad4:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8012ad6:	687b      	ldr	r3, [r7, #4]
 8012ad8:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012ada:	b29b      	uxth	r3, r3
 8012adc:	1ad3      	subs	r3, r2, r3
 8012ade:	b29b      	uxth	r3, r3
 8012ae0:	4619      	mov	r1, r3
 8012ae2:	6878      	ldr	r0, [r7, #4]
 8012ae4:	f000 f8ca 	bl	8012c7c <HAL_UARTEx_RxEventCallback>
 8012ae8:	e099      	b.n	8012c1e <HAL_UART_IRQHandler+0x50e>
 8012aea:	bf00      	nop
 8012aec:	08012ef5 	.word	0x08012ef5
 8012af0:	687b      	ldr	r3, [r7, #4]
 8012af2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8012af4:	687b      	ldr	r3, [r7, #4]
 8012af6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012af8:	b29b      	uxth	r3, r3
 8012afa:	1ad3      	subs	r3, r2, r3
 8012afc:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8012b00:	687b      	ldr	r3, [r7, #4]
 8012b02:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8012b04:	b29b      	uxth	r3, r3
 8012b06:	2b00      	cmp	r3, #0
 8012b08:	f000 808b 	beq.w	8012c22 <HAL_UART_IRQHandler+0x512>
 8012b0c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8012b10:	2b00      	cmp	r3, #0
 8012b12:	f000 8086 	beq.w	8012c22 <HAL_UART_IRQHandler+0x512>
 8012b16:	687b      	ldr	r3, [r7, #4]
 8012b18:	681b      	ldr	r3, [r3, #0]
 8012b1a:	330c      	adds	r3, #12
 8012b1c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012b1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8012b20:	e853 3f00 	ldrex	r3, [r3]
 8012b24:	637b      	str	r3, [r7, #52]	@ 0x34
 8012b26:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8012b28:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8012b2c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8012b30:	687b      	ldr	r3, [r7, #4]
 8012b32:	681b      	ldr	r3, [r3, #0]
 8012b34:	330c      	adds	r3, #12
 8012b36:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8012b3a:	647a      	str	r2, [r7, #68]	@ 0x44
 8012b3c:	643b      	str	r3, [r7, #64]	@ 0x40
 8012b3e:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8012b40:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012b42:	e841 2300 	strex	r3, r2, [r1]
 8012b46:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012b48:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012b4a:	2b00      	cmp	r3, #0
 8012b4c:	d1e3      	bne.n	8012b16 <HAL_UART_IRQHandler+0x406>
 8012b4e:	687b      	ldr	r3, [r7, #4]
 8012b50:	681b      	ldr	r3, [r3, #0]
 8012b52:	3314      	adds	r3, #20
 8012b54:	627b      	str	r3, [r7, #36]	@ 0x24
 8012b56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012b58:	e853 3f00 	ldrex	r3, [r3]
 8012b5c:	623b      	str	r3, [r7, #32]
 8012b5e:	6a3b      	ldr	r3, [r7, #32]
 8012b60:	f023 0301 	bic.w	r3, r3, #1
 8012b64:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8012b68:	687b      	ldr	r3, [r7, #4]
 8012b6a:	681b      	ldr	r3, [r3, #0]
 8012b6c:	3314      	adds	r3, #20
 8012b6e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8012b72:	633a      	str	r2, [r7, #48]	@ 0x30
 8012b74:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012b76:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012b78:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012b7a:	e841 2300 	strex	r3, r2, [r1]
 8012b7e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012b80:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012b82:	2b00      	cmp	r3, #0
 8012b84:	d1e3      	bne.n	8012b4e <HAL_UART_IRQHandler+0x43e>
 8012b86:	687b      	ldr	r3, [r7, #4]
 8012b88:	2220      	movs	r2, #32
 8012b8a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012b8e:	687b      	ldr	r3, [r7, #4]
 8012b90:	2200      	movs	r2, #0
 8012b92:	631a      	str	r2, [r3, #48]	@ 0x30
 8012b94:	687b      	ldr	r3, [r7, #4]
 8012b96:	681b      	ldr	r3, [r3, #0]
 8012b98:	330c      	adds	r3, #12
 8012b9a:	613b      	str	r3, [r7, #16]
 8012b9c:	693b      	ldr	r3, [r7, #16]
 8012b9e:	e853 3f00 	ldrex	r3, [r3]
 8012ba2:	60fb      	str	r3, [r7, #12]
 8012ba4:	68fb      	ldr	r3, [r7, #12]
 8012ba6:	f023 0310 	bic.w	r3, r3, #16
 8012baa:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8012bae:	687b      	ldr	r3, [r7, #4]
 8012bb0:	681b      	ldr	r3, [r3, #0]
 8012bb2:	330c      	adds	r3, #12
 8012bb4:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8012bb8:	61fa      	str	r2, [r7, #28]
 8012bba:	61bb      	str	r3, [r7, #24]
 8012bbc:	69b9      	ldr	r1, [r7, #24]
 8012bbe:	69fa      	ldr	r2, [r7, #28]
 8012bc0:	e841 2300 	strex	r3, r2, [r1]
 8012bc4:	617b      	str	r3, [r7, #20]
 8012bc6:	697b      	ldr	r3, [r7, #20]
 8012bc8:	2b00      	cmp	r3, #0
 8012bca:	d1e3      	bne.n	8012b94 <HAL_UART_IRQHandler+0x484>
 8012bcc:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8012bd0:	4619      	mov	r1, r3
 8012bd2:	6878      	ldr	r0, [r7, #4]
 8012bd4:	f000 f852 	bl	8012c7c <HAL_UARTEx_RxEventCallback>
 8012bd8:	e023      	b.n	8012c22 <HAL_UART_IRQHandler+0x512>
 8012bda:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012bde:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012be2:	2b00      	cmp	r3, #0
 8012be4:	d009      	beq.n	8012bfa <HAL_UART_IRQHandler+0x4ea>
 8012be6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012bea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012bee:	2b00      	cmp	r3, #0
 8012bf0:	d003      	beq.n	8012bfa <HAL_UART_IRQHandler+0x4ea>
 8012bf2:	6878      	ldr	r0, [r7, #4]
 8012bf4:	f000 f992 	bl	8012f1c <UART_Transmit_IT>
 8012bf8:	e014      	b.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012bfa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8012bfe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012c02:	2b00      	cmp	r3, #0
 8012c04:	d00e      	beq.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012c06:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8012c0a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012c0e:	2b00      	cmp	r3, #0
 8012c10:	d008      	beq.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012c12:	6878      	ldr	r0, [r7, #4]
 8012c14:	f000 f9d2 	bl	8012fbc <UART_EndTransmit_IT>
 8012c18:	e004      	b.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012c1a:	bf00      	nop
 8012c1c:	e002      	b.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012c1e:	bf00      	nop
 8012c20:	e000      	b.n	8012c24 <HAL_UART_IRQHandler+0x514>
 8012c22:	bf00      	nop
 8012c24:	37e8      	adds	r7, #232	@ 0xe8
 8012c26:	46bd      	mov	sp, r7
 8012c28:	bd80      	pop	{r7, pc}
 8012c2a:	bf00      	nop

08012c2c <HAL_UART_TxCpltCallback>:
 8012c2c:	b480      	push	{r7}
 8012c2e:	b083      	sub	sp, #12
 8012c30:	af00      	add	r7, sp, #0
 8012c32:	6078      	str	r0, [r7, #4]
 8012c34:	bf00      	nop
 8012c36:	370c      	adds	r7, #12
 8012c38:	46bd      	mov	sp, r7
 8012c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c3e:	4770      	bx	lr

08012c40 <HAL_UART_TxHalfCpltCallback>:
 8012c40:	b480      	push	{r7}
 8012c42:	b083      	sub	sp, #12
 8012c44:	af00      	add	r7, sp, #0
 8012c46:	6078      	str	r0, [r7, #4]
 8012c48:	bf00      	nop
 8012c4a:	370c      	adds	r7, #12
 8012c4c:	46bd      	mov	sp, r7
 8012c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c52:	4770      	bx	lr

08012c54 <HAL_UART_RxCpltCallback>:
 8012c54:	b480      	push	{r7}
 8012c56:	b083      	sub	sp, #12
 8012c58:	af00      	add	r7, sp, #0
 8012c5a:	6078      	str	r0, [r7, #4]
 8012c5c:	bf00      	nop
 8012c5e:	370c      	adds	r7, #12
 8012c60:	46bd      	mov	sp, r7
 8012c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c66:	4770      	bx	lr

08012c68 <HAL_UART_ErrorCallback>:
 8012c68:	b480      	push	{r7}
 8012c6a:	b083      	sub	sp, #12
 8012c6c:	af00      	add	r7, sp, #0
 8012c6e:	6078      	str	r0, [r7, #4]
 8012c70:	bf00      	nop
 8012c72:	370c      	adds	r7, #12
 8012c74:	46bd      	mov	sp, r7
 8012c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c7a:	4770      	bx	lr

08012c7c <HAL_UARTEx_RxEventCallback>:
 8012c7c:	b480      	push	{r7}
 8012c7e:	b083      	sub	sp, #12
 8012c80:	af00      	add	r7, sp, #0
 8012c82:	6078      	str	r0, [r7, #4]
 8012c84:	460b      	mov	r3, r1
 8012c86:	807b      	strh	r3, [r7, #2]
 8012c88:	bf00      	nop
 8012c8a:	370c      	adds	r7, #12
 8012c8c:	46bd      	mov	sp, r7
 8012c8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012c92:	4770      	bx	lr

08012c94 <UART_DMATransmitCplt>:
 8012c94:	b580      	push	{r7, lr}
 8012c96:	b090      	sub	sp, #64	@ 0x40
 8012c98:	af00      	add	r7, sp, #0
 8012c9a:	6078      	str	r0, [r7, #4]
 8012c9c:	687b      	ldr	r3, [r7, #4]
 8012c9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012ca0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012ca2:	687b      	ldr	r3, [r7, #4]
 8012ca4:	681b      	ldr	r3, [r3, #0]
 8012ca6:	681b      	ldr	r3, [r3, #0]
 8012ca8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012cac:	2b00      	cmp	r3, #0
 8012cae:	d137      	bne.n	8012d20 <UART_DMATransmitCplt+0x8c>
 8012cb0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012cb2:	2200      	movs	r2, #0
 8012cb4:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012cb6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012cb8:	681b      	ldr	r3, [r3, #0]
 8012cba:	3314      	adds	r3, #20
 8012cbc:	627b      	str	r3, [r7, #36]	@ 0x24
 8012cbe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012cc0:	e853 3f00 	ldrex	r3, [r3]
 8012cc4:	623b      	str	r3, [r7, #32]
 8012cc6:	6a3b      	ldr	r3, [r7, #32]
 8012cc8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8012ccc:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012cce:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012cd0:	681b      	ldr	r3, [r3, #0]
 8012cd2:	3314      	adds	r3, #20
 8012cd4:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8012cd6:	633a      	str	r2, [r7, #48]	@ 0x30
 8012cd8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8012cda:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8012cdc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8012cde:	e841 2300 	strex	r3, r2, [r1]
 8012ce2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012ce4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8012ce6:	2b00      	cmp	r3, #0
 8012ce8:	d1e5      	bne.n	8012cb6 <UART_DMATransmitCplt+0x22>
 8012cea:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012cec:	681b      	ldr	r3, [r3, #0]
 8012cee:	330c      	adds	r3, #12
 8012cf0:	613b      	str	r3, [r7, #16]
 8012cf2:	693b      	ldr	r3, [r7, #16]
 8012cf4:	e853 3f00 	ldrex	r3, [r3]
 8012cf8:	60fb      	str	r3, [r7, #12]
 8012cfa:	68fb      	ldr	r3, [r7, #12]
 8012cfc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8012d00:	637b      	str	r3, [r7, #52]	@ 0x34
 8012d02:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8012d04:	681b      	ldr	r3, [r3, #0]
 8012d06:	330c      	adds	r3, #12
 8012d08:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8012d0a:	61fa      	str	r2, [r7, #28]
 8012d0c:	61bb      	str	r3, [r7, #24]
 8012d0e:	69b9      	ldr	r1, [r7, #24]
 8012d10:	69fa      	ldr	r2, [r7, #28]
 8012d12:	e841 2300 	strex	r3, r2, [r1]
 8012d16:	617b      	str	r3, [r7, #20]
 8012d18:	697b      	ldr	r3, [r7, #20]
 8012d1a:	2b00      	cmp	r3, #0
 8012d1c:	d1e5      	bne.n	8012cea <UART_DMATransmitCplt+0x56>
 8012d1e:	e002      	b.n	8012d26 <UART_DMATransmitCplt+0x92>
 8012d20:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8012d22:	f7ff ff83 	bl	8012c2c <HAL_UART_TxCpltCallback>
 8012d26:	bf00      	nop
 8012d28:	3740      	adds	r7, #64	@ 0x40
 8012d2a:	46bd      	mov	sp, r7
 8012d2c:	bd80      	pop	{r7, pc}

08012d2e <UART_DMATxHalfCplt>:
 8012d2e:	b580      	push	{r7, lr}
 8012d30:	b084      	sub	sp, #16
 8012d32:	af00      	add	r7, sp, #0
 8012d34:	6078      	str	r0, [r7, #4]
 8012d36:	687b      	ldr	r3, [r7, #4]
 8012d38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012d3a:	60fb      	str	r3, [r7, #12]
 8012d3c:	68f8      	ldr	r0, [r7, #12]
 8012d3e:	f7ff ff7f 	bl	8012c40 <HAL_UART_TxHalfCpltCallback>
 8012d42:	bf00      	nop
 8012d44:	3710      	adds	r7, #16
 8012d46:	46bd      	mov	sp, r7
 8012d48:	bd80      	pop	{r7, pc}

08012d4a <UART_DMAError>:
 8012d4a:	b580      	push	{r7, lr}
 8012d4c:	b084      	sub	sp, #16
 8012d4e:	af00      	add	r7, sp, #0
 8012d50:	6078      	str	r0, [r7, #4]
 8012d52:	2300      	movs	r3, #0
 8012d54:	60fb      	str	r3, [r7, #12]
 8012d56:	687b      	ldr	r3, [r7, #4]
 8012d58:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012d5a:	60bb      	str	r3, [r7, #8]
 8012d5c:	68bb      	ldr	r3, [r7, #8]
 8012d5e:	681b      	ldr	r3, [r3, #0]
 8012d60:	695b      	ldr	r3, [r3, #20]
 8012d62:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012d66:	2b80      	cmp	r3, #128	@ 0x80
 8012d68:	bf0c      	ite	eq
 8012d6a:	2301      	moveq	r3, #1
 8012d6c:	2300      	movne	r3, #0
 8012d6e:	b2db      	uxtb	r3, r3
 8012d70:	60fb      	str	r3, [r7, #12]
 8012d72:	68bb      	ldr	r3, [r7, #8]
 8012d74:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012d78:	b2db      	uxtb	r3, r3
 8012d7a:	2b21      	cmp	r3, #33	@ 0x21
 8012d7c:	d108      	bne.n	8012d90 <UART_DMAError+0x46>
 8012d7e:	68fb      	ldr	r3, [r7, #12]
 8012d80:	2b00      	cmp	r3, #0
 8012d82:	d005      	beq.n	8012d90 <UART_DMAError+0x46>
 8012d84:	68bb      	ldr	r3, [r7, #8]
 8012d86:	2200      	movs	r2, #0
 8012d88:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012d8a:	68b8      	ldr	r0, [r7, #8]
 8012d8c:	f000 f827 	bl	8012dde <UART_EndTxTransfer>
 8012d90:	68bb      	ldr	r3, [r7, #8]
 8012d92:	681b      	ldr	r3, [r3, #0]
 8012d94:	695b      	ldr	r3, [r3, #20]
 8012d96:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8012d9a:	2b40      	cmp	r3, #64	@ 0x40
 8012d9c:	bf0c      	ite	eq
 8012d9e:	2301      	moveq	r3, #1
 8012da0:	2300      	movne	r3, #0
 8012da2:	b2db      	uxtb	r3, r3
 8012da4:	60fb      	str	r3, [r7, #12]
 8012da6:	68bb      	ldr	r3, [r7, #8]
 8012da8:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012dac:	b2db      	uxtb	r3, r3
 8012dae:	2b22      	cmp	r3, #34	@ 0x22
 8012db0:	d108      	bne.n	8012dc4 <UART_DMAError+0x7a>
 8012db2:	68fb      	ldr	r3, [r7, #12]
 8012db4:	2b00      	cmp	r3, #0
 8012db6:	d005      	beq.n	8012dc4 <UART_DMAError+0x7a>
 8012db8:	68bb      	ldr	r3, [r7, #8]
 8012dba:	2200      	movs	r2, #0
 8012dbc:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012dbe:	68b8      	ldr	r0, [r7, #8]
 8012dc0:	f000 f835 	bl	8012e2e <UART_EndRxTransfer>
 8012dc4:	68bb      	ldr	r3, [r7, #8]
 8012dc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012dc8:	f043 0210 	orr.w	r2, r3, #16
 8012dcc:	68bb      	ldr	r3, [r7, #8]
 8012dce:	641a      	str	r2, [r3, #64]	@ 0x40
 8012dd0:	68b8      	ldr	r0, [r7, #8]
 8012dd2:	f7ff ff49 	bl	8012c68 <HAL_UART_ErrorCallback>
 8012dd6:	bf00      	nop
 8012dd8:	3710      	adds	r7, #16
 8012dda:	46bd      	mov	sp, r7
 8012ddc:	bd80      	pop	{r7, pc}

08012dde <UART_EndTxTransfer>:
 8012dde:	b480      	push	{r7}
 8012de0:	b089      	sub	sp, #36	@ 0x24
 8012de2:	af00      	add	r7, sp, #0
 8012de4:	6078      	str	r0, [r7, #4]
 8012de6:	687b      	ldr	r3, [r7, #4]
 8012de8:	681b      	ldr	r3, [r3, #0]
 8012dea:	330c      	adds	r3, #12
 8012dec:	60fb      	str	r3, [r7, #12]
 8012dee:	68fb      	ldr	r3, [r7, #12]
 8012df0:	e853 3f00 	ldrex	r3, [r3]
 8012df4:	60bb      	str	r3, [r7, #8]
 8012df6:	68bb      	ldr	r3, [r7, #8]
 8012df8:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8012dfc:	61fb      	str	r3, [r7, #28]
 8012dfe:	687b      	ldr	r3, [r7, #4]
 8012e00:	681b      	ldr	r3, [r3, #0]
 8012e02:	330c      	adds	r3, #12
 8012e04:	69fa      	ldr	r2, [r7, #28]
 8012e06:	61ba      	str	r2, [r7, #24]
 8012e08:	617b      	str	r3, [r7, #20]
 8012e0a:	6979      	ldr	r1, [r7, #20]
 8012e0c:	69ba      	ldr	r2, [r7, #24]
 8012e0e:	e841 2300 	strex	r3, r2, [r1]
 8012e12:	613b      	str	r3, [r7, #16]
 8012e14:	693b      	ldr	r3, [r7, #16]
 8012e16:	2b00      	cmp	r3, #0
 8012e18:	d1e5      	bne.n	8012de6 <UART_EndTxTransfer+0x8>
 8012e1a:	687b      	ldr	r3, [r7, #4]
 8012e1c:	2220      	movs	r2, #32
 8012e1e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012e22:	bf00      	nop
 8012e24:	3724      	adds	r7, #36	@ 0x24
 8012e26:	46bd      	mov	sp, r7
 8012e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e2c:	4770      	bx	lr

08012e2e <UART_EndRxTransfer>:
 8012e2e:	b480      	push	{r7}
 8012e30:	b095      	sub	sp, #84	@ 0x54
 8012e32:	af00      	add	r7, sp, #0
 8012e34:	6078      	str	r0, [r7, #4]
 8012e36:	687b      	ldr	r3, [r7, #4]
 8012e38:	681b      	ldr	r3, [r3, #0]
 8012e3a:	330c      	adds	r3, #12
 8012e3c:	637b      	str	r3, [r7, #52]	@ 0x34
 8012e3e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8012e40:	e853 3f00 	ldrex	r3, [r3]
 8012e44:	633b      	str	r3, [r7, #48]	@ 0x30
 8012e46:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8012e48:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8012e4c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8012e4e:	687b      	ldr	r3, [r7, #4]
 8012e50:	681b      	ldr	r3, [r3, #0]
 8012e52:	330c      	adds	r3, #12
 8012e54:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8012e56:	643a      	str	r2, [r7, #64]	@ 0x40
 8012e58:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8012e5a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8012e5c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8012e5e:	e841 2300 	strex	r3, r2, [r1]
 8012e62:	63bb      	str	r3, [r7, #56]	@ 0x38
 8012e64:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8012e66:	2b00      	cmp	r3, #0
 8012e68:	d1e5      	bne.n	8012e36 <UART_EndRxTransfer+0x8>
 8012e6a:	687b      	ldr	r3, [r7, #4]
 8012e6c:	681b      	ldr	r3, [r3, #0]
 8012e6e:	3314      	adds	r3, #20
 8012e70:	623b      	str	r3, [r7, #32]
 8012e72:	6a3b      	ldr	r3, [r7, #32]
 8012e74:	e853 3f00 	ldrex	r3, [r3]
 8012e78:	61fb      	str	r3, [r7, #28]
 8012e7a:	69fb      	ldr	r3, [r7, #28]
 8012e7c:	f023 0301 	bic.w	r3, r3, #1
 8012e80:	64bb      	str	r3, [r7, #72]	@ 0x48
 8012e82:	687b      	ldr	r3, [r7, #4]
 8012e84:	681b      	ldr	r3, [r3, #0]
 8012e86:	3314      	adds	r3, #20
 8012e88:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8012e8a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8012e8c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8012e8e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8012e90:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8012e92:	e841 2300 	strex	r3, r2, [r1]
 8012e96:	627b      	str	r3, [r7, #36]	@ 0x24
 8012e98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012e9a:	2b00      	cmp	r3, #0
 8012e9c:	d1e5      	bne.n	8012e6a <UART_EndRxTransfer+0x3c>
 8012e9e:	687b      	ldr	r3, [r7, #4]
 8012ea0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012ea2:	2b01      	cmp	r3, #1
 8012ea4:	d119      	bne.n	8012eda <UART_EndRxTransfer+0xac>
 8012ea6:	687b      	ldr	r3, [r7, #4]
 8012ea8:	681b      	ldr	r3, [r3, #0]
 8012eaa:	330c      	adds	r3, #12
 8012eac:	60fb      	str	r3, [r7, #12]
 8012eae:	68fb      	ldr	r3, [r7, #12]
 8012eb0:	e853 3f00 	ldrex	r3, [r3]
 8012eb4:	60bb      	str	r3, [r7, #8]
 8012eb6:	68bb      	ldr	r3, [r7, #8]
 8012eb8:	f023 0310 	bic.w	r3, r3, #16
 8012ebc:	647b      	str	r3, [r7, #68]	@ 0x44
 8012ebe:	687b      	ldr	r3, [r7, #4]
 8012ec0:	681b      	ldr	r3, [r3, #0]
 8012ec2:	330c      	adds	r3, #12
 8012ec4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8012ec6:	61ba      	str	r2, [r7, #24]
 8012ec8:	617b      	str	r3, [r7, #20]
 8012eca:	6979      	ldr	r1, [r7, #20]
 8012ecc:	69ba      	ldr	r2, [r7, #24]
 8012ece:	e841 2300 	strex	r3, r2, [r1]
 8012ed2:	613b      	str	r3, [r7, #16]
 8012ed4:	693b      	ldr	r3, [r7, #16]
 8012ed6:	2b00      	cmp	r3, #0
 8012ed8:	d1e5      	bne.n	8012ea6 <UART_EndRxTransfer+0x78>
 8012eda:	687b      	ldr	r3, [r7, #4]
 8012edc:	2220      	movs	r2, #32
 8012ede:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8012ee2:	687b      	ldr	r3, [r7, #4]
 8012ee4:	2200      	movs	r2, #0
 8012ee6:	631a      	str	r2, [r3, #48]	@ 0x30
 8012ee8:	bf00      	nop
 8012eea:	3754      	adds	r7, #84	@ 0x54
 8012eec:	46bd      	mov	sp, r7
 8012eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ef2:	4770      	bx	lr

08012ef4 <UART_DMAAbortOnError>:
 8012ef4:	b580      	push	{r7, lr}
 8012ef6:	b084      	sub	sp, #16
 8012ef8:	af00      	add	r7, sp, #0
 8012efa:	6078      	str	r0, [r7, #4]
 8012efc:	687b      	ldr	r3, [r7, #4]
 8012efe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012f00:	60fb      	str	r3, [r7, #12]
 8012f02:	68fb      	ldr	r3, [r7, #12]
 8012f04:	2200      	movs	r2, #0
 8012f06:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8012f08:	68fb      	ldr	r3, [r7, #12]
 8012f0a:	2200      	movs	r2, #0
 8012f0c:	84da      	strh	r2, [r3, #38]	@ 0x26
 8012f0e:	68f8      	ldr	r0, [r7, #12]
 8012f10:	f7ff feaa 	bl	8012c68 <HAL_UART_ErrorCallback>
 8012f14:	bf00      	nop
 8012f16:	3710      	adds	r7, #16
 8012f18:	46bd      	mov	sp, r7
 8012f1a:	bd80      	pop	{r7, pc}

08012f1c <UART_Transmit_IT>:
 8012f1c:	b480      	push	{r7}
 8012f1e:	b085      	sub	sp, #20
 8012f20:	af00      	add	r7, sp, #0
 8012f22:	6078      	str	r0, [r7, #4]
 8012f24:	687b      	ldr	r3, [r7, #4]
 8012f26:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8012f2a:	b2db      	uxtb	r3, r3
 8012f2c:	2b21      	cmp	r3, #33	@ 0x21
 8012f2e:	d13e      	bne.n	8012fae <UART_Transmit_IT+0x92>
 8012f30:	687b      	ldr	r3, [r7, #4]
 8012f32:	689b      	ldr	r3, [r3, #8]
 8012f34:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8012f38:	d114      	bne.n	8012f64 <UART_Transmit_IT+0x48>
 8012f3a:	687b      	ldr	r3, [r7, #4]
 8012f3c:	691b      	ldr	r3, [r3, #16]
 8012f3e:	2b00      	cmp	r3, #0
 8012f40:	d110      	bne.n	8012f64 <UART_Transmit_IT+0x48>
 8012f42:	687b      	ldr	r3, [r7, #4]
 8012f44:	6a1b      	ldr	r3, [r3, #32]
 8012f46:	60fb      	str	r3, [r7, #12]
 8012f48:	68fb      	ldr	r3, [r7, #12]
 8012f4a:	881b      	ldrh	r3, [r3, #0]
 8012f4c:	461a      	mov	r2, r3
 8012f4e:	687b      	ldr	r3, [r7, #4]
 8012f50:	681b      	ldr	r3, [r3, #0]
 8012f52:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8012f56:	605a      	str	r2, [r3, #4]
 8012f58:	687b      	ldr	r3, [r7, #4]
 8012f5a:	6a1b      	ldr	r3, [r3, #32]
 8012f5c:	1c9a      	adds	r2, r3, #2
 8012f5e:	687b      	ldr	r3, [r7, #4]
 8012f60:	621a      	str	r2, [r3, #32]
 8012f62:	e008      	b.n	8012f76 <UART_Transmit_IT+0x5a>
 8012f64:	687b      	ldr	r3, [r7, #4]
 8012f66:	6a1b      	ldr	r3, [r3, #32]
 8012f68:	1c59      	adds	r1, r3, #1
 8012f6a:	687a      	ldr	r2, [r7, #4]
 8012f6c:	6211      	str	r1, [r2, #32]
 8012f6e:	781a      	ldrb	r2, [r3, #0]
 8012f70:	687b      	ldr	r3, [r7, #4]
 8012f72:	681b      	ldr	r3, [r3, #0]
 8012f74:	605a      	str	r2, [r3, #4]
 8012f76:	687b      	ldr	r3, [r7, #4]
 8012f78:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8012f7a:	b29b      	uxth	r3, r3
 8012f7c:	3b01      	subs	r3, #1
 8012f7e:	b29b      	uxth	r3, r3
 8012f80:	687a      	ldr	r2, [r7, #4]
 8012f82:	4619      	mov	r1, r3
 8012f84:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8012f86:	2b00      	cmp	r3, #0
 8012f88:	d10f      	bne.n	8012faa <UART_Transmit_IT+0x8e>
 8012f8a:	687b      	ldr	r3, [r7, #4]
 8012f8c:	681b      	ldr	r3, [r3, #0]
 8012f8e:	68da      	ldr	r2, [r3, #12]
 8012f90:	687b      	ldr	r3, [r7, #4]
 8012f92:	681b      	ldr	r3, [r3, #0]
 8012f94:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8012f98:	60da      	str	r2, [r3, #12]
 8012f9a:	687b      	ldr	r3, [r7, #4]
 8012f9c:	681b      	ldr	r3, [r3, #0]
 8012f9e:	68da      	ldr	r2, [r3, #12]
 8012fa0:	687b      	ldr	r3, [r7, #4]
 8012fa2:	681b      	ldr	r3, [r3, #0]
 8012fa4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8012fa8:	60da      	str	r2, [r3, #12]
 8012faa:	2300      	movs	r3, #0
 8012fac:	e000      	b.n	8012fb0 <UART_Transmit_IT+0x94>
 8012fae:	2302      	movs	r3, #2
 8012fb0:	4618      	mov	r0, r3
 8012fb2:	3714      	adds	r7, #20
 8012fb4:	46bd      	mov	sp, r7
 8012fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012fba:	4770      	bx	lr

08012fbc <UART_EndTransmit_IT>:
 8012fbc:	b580      	push	{r7, lr}
 8012fbe:	b082      	sub	sp, #8
 8012fc0:	af00      	add	r7, sp, #0
 8012fc2:	6078      	str	r0, [r7, #4]
 8012fc4:	687b      	ldr	r3, [r7, #4]
 8012fc6:	681b      	ldr	r3, [r3, #0]
 8012fc8:	68da      	ldr	r2, [r3, #12]
 8012fca:	687b      	ldr	r3, [r7, #4]
 8012fcc:	681b      	ldr	r3, [r3, #0]
 8012fce:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8012fd2:	60da      	str	r2, [r3, #12]
 8012fd4:	687b      	ldr	r3, [r7, #4]
 8012fd6:	2220      	movs	r2, #32
 8012fd8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8012fdc:	6878      	ldr	r0, [r7, #4]
 8012fde:	f7ff fe25 	bl	8012c2c <HAL_UART_TxCpltCallback>
 8012fe2:	2300      	movs	r3, #0
 8012fe4:	4618      	mov	r0, r3
 8012fe6:	3708      	adds	r7, #8
 8012fe8:	46bd      	mov	sp, r7
 8012fea:	bd80      	pop	{r7, pc}

08012fec <UART_Receive_IT>:
 8012fec:	b580      	push	{r7, lr}
 8012fee:	b08c      	sub	sp, #48	@ 0x30
 8012ff0:	af00      	add	r7, sp, #0
 8012ff2:	6078      	str	r0, [r7, #4]
 8012ff4:	687b      	ldr	r3, [r7, #4]
 8012ff6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8012ffa:	b2db      	uxtb	r3, r3
 8012ffc:	2b22      	cmp	r3, #34	@ 0x22
 8012ffe:	f040 80ab 	bne.w	8013158 <UART_Receive_IT+0x16c>
 8013002:	687b      	ldr	r3, [r7, #4]
 8013004:	689b      	ldr	r3, [r3, #8]
 8013006:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 801300a:	d117      	bne.n	801303c <UART_Receive_IT+0x50>
 801300c:	687b      	ldr	r3, [r7, #4]
 801300e:	691b      	ldr	r3, [r3, #16]
 8013010:	2b00      	cmp	r3, #0
 8013012:	d113      	bne.n	801303c <UART_Receive_IT+0x50>
 8013014:	2300      	movs	r3, #0
 8013016:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013018:	687b      	ldr	r3, [r7, #4]
 801301a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801301c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801301e:	687b      	ldr	r3, [r7, #4]
 8013020:	681b      	ldr	r3, [r3, #0]
 8013022:	685b      	ldr	r3, [r3, #4]
 8013024:	b29b      	uxth	r3, r3
 8013026:	f3c3 0308 	ubfx	r3, r3, #0, #9
 801302a:	b29a      	uxth	r2, r3
 801302c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801302e:	801a      	strh	r2, [r3, #0]
 8013030:	687b      	ldr	r3, [r7, #4]
 8013032:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013034:	1c9a      	adds	r2, r3, #2
 8013036:	687b      	ldr	r3, [r7, #4]
 8013038:	629a      	str	r2, [r3, #40]	@ 0x28
 801303a:	e026      	b.n	801308a <UART_Receive_IT+0x9e>
 801303c:	687b      	ldr	r3, [r7, #4]
 801303e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013040:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013042:	2300      	movs	r3, #0
 8013044:	62bb      	str	r3, [r7, #40]	@ 0x28
 8013046:	687b      	ldr	r3, [r7, #4]
 8013048:	689b      	ldr	r3, [r3, #8]
 801304a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 801304e:	d007      	beq.n	8013060 <UART_Receive_IT+0x74>
 8013050:	687b      	ldr	r3, [r7, #4]
 8013052:	689b      	ldr	r3, [r3, #8]
 8013054:	2b00      	cmp	r3, #0
 8013056:	d10a      	bne.n	801306e <UART_Receive_IT+0x82>
 8013058:	687b      	ldr	r3, [r7, #4]
 801305a:	691b      	ldr	r3, [r3, #16]
 801305c:	2b00      	cmp	r3, #0
 801305e:	d106      	bne.n	801306e <UART_Receive_IT+0x82>
 8013060:	687b      	ldr	r3, [r7, #4]
 8013062:	681b      	ldr	r3, [r3, #0]
 8013064:	685b      	ldr	r3, [r3, #4]
 8013066:	b2da      	uxtb	r2, r3
 8013068:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801306a:	701a      	strb	r2, [r3, #0]
 801306c:	e008      	b.n	8013080 <UART_Receive_IT+0x94>
 801306e:	687b      	ldr	r3, [r7, #4]
 8013070:	681b      	ldr	r3, [r3, #0]
 8013072:	685b      	ldr	r3, [r3, #4]
 8013074:	b2db      	uxtb	r3, r3
 8013076:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 801307a:	b2da      	uxtb	r2, r3
 801307c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801307e:	701a      	strb	r2, [r3, #0]
 8013080:	687b      	ldr	r3, [r7, #4]
 8013082:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013084:	1c5a      	adds	r2, r3, #1
 8013086:	687b      	ldr	r3, [r7, #4]
 8013088:	629a      	str	r2, [r3, #40]	@ 0x28
 801308a:	687b      	ldr	r3, [r7, #4]
 801308c:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 801308e:	b29b      	uxth	r3, r3
 8013090:	3b01      	subs	r3, #1
 8013092:	b29b      	uxth	r3, r3
 8013094:	687a      	ldr	r2, [r7, #4]
 8013096:	4619      	mov	r1, r3
 8013098:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 801309a:	2b00      	cmp	r3, #0
 801309c:	d15a      	bne.n	8013154 <UART_Receive_IT+0x168>
 801309e:	687b      	ldr	r3, [r7, #4]
 80130a0:	681b      	ldr	r3, [r3, #0]
 80130a2:	68da      	ldr	r2, [r3, #12]
 80130a4:	687b      	ldr	r3, [r7, #4]
 80130a6:	681b      	ldr	r3, [r3, #0]
 80130a8:	f022 0220 	bic.w	r2, r2, #32
 80130ac:	60da      	str	r2, [r3, #12]
 80130ae:	687b      	ldr	r3, [r7, #4]
 80130b0:	681b      	ldr	r3, [r3, #0]
 80130b2:	68da      	ldr	r2, [r3, #12]
 80130b4:	687b      	ldr	r3, [r7, #4]
 80130b6:	681b      	ldr	r3, [r3, #0]
 80130b8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80130bc:	60da      	str	r2, [r3, #12]
 80130be:	687b      	ldr	r3, [r7, #4]
 80130c0:	681b      	ldr	r3, [r3, #0]
 80130c2:	695a      	ldr	r2, [r3, #20]
 80130c4:	687b      	ldr	r3, [r7, #4]
 80130c6:	681b      	ldr	r3, [r3, #0]
 80130c8:	f022 0201 	bic.w	r2, r2, #1
 80130cc:	615a      	str	r2, [r3, #20]
 80130ce:	687b      	ldr	r3, [r7, #4]
 80130d0:	2220      	movs	r2, #32
 80130d2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80130d6:	687b      	ldr	r3, [r7, #4]
 80130d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80130da:	2b01      	cmp	r3, #1
 80130dc:	d135      	bne.n	801314a <UART_Receive_IT+0x15e>
 80130de:	687b      	ldr	r3, [r7, #4]
 80130e0:	2200      	movs	r2, #0
 80130e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80130e4:	687b      	ldr	r3, [r7, #4]
 80130e6:	681b      	ldr	r3, [r3, #0]
 80130e8:	330c      	adds	r3, #12
 80130ea:	617b      	str	r3, [r7, #20]
 80130ec:	697b      	ldr	r3, [r7, #20]
 80130ee:	e853 3f00 	ldrex	r3, [r3]
 80130f2:	613b      	str	r3, [r7, #16]
 80130f4:	693b      	ldr	r3, [r7, #16]
 80130f6:	f023 0310 	bic.w	r3, r3, #16
 80130fa:	627b      	str	r3, [r7, #36]	@ 0x24
 80130fc:	687b      	ldr	r3, [r7, #4]
 80130fe:	681b      	ldr	r3, [r3, #0]
 8013100:	330c      	adds	r3, #12
 8013102:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8013104:	623a      	str	r2, [r7, #32]
 8013106:	61fb      	str	r3, [r7, #28]
 8013108:	69f9      	ldr	r1, [r7, #28]
 801310a:	6a3a      	ldr	r2, [r7, #32]
 801310c:	e841 2300 	strex	r3, r2, [r1]
 8013110:	61bb      	str	r3, [r7, #24]
 8013112:	69bb      	ldr	r3, [r7, #24]
 8013114:	2b00      	cmp	r3, #0
 8013116:	d1e5      	bne.n	80130e4 <UART_Receive_IT+0xf8>
 8013118:	687b      	ldr	r3, [r7, #4]
 801311a:	681b      	ldr	r3, [r3, #0]
 801311c:	681b      	ldr	r3, [r3, #0]
 801311e:	f003 0310 	and.w	r3, r3, #16
 8013122:	2b10      	cmp	r3, #16
 8013124:	d10a      	bne.n	801313c <UART_Receive_IT+0x150>
 8013126:	2300      	movs	r3, #0
 8013128:	60fb      	str	r3, [r7, #12]
 801312a:	687b      	ldr	r3, [r7, #4]
 801312c:	681b      	ldr	r3, [r3, #0]
 801312e:	681b      	ldr	r3, [r3, #0]
 8013130:	60fb      	str	r3, [r7, #12]
 8013132:	687b      	ldr	r3, [r7, #4]
 8013134:	681b      	ldr	r3, [r3, #0]
 8013136:	685b      	ldr	r3, [r3, #4]
 8013138:	60fb      	str	r3, [r7, #12]
 801313a:	68fb      	ldr	r3, [r7, #12]
 801313c:	687b      	ldr	r3, [r7, #4]
 801313e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8013140:	4619      	mov	r1, r3
 8013142:	6878      	ldr	r0, [r7, #4]
 8013144:	f7ff fd9a 	bl	8012c7c <HAL_UARTEx_RxEventCallback>
 8013148:	e002      	b.n	8013150 <UART_Receive_IT+0x164>
 801314a:	6878      	ldr	r0, [r7, #4]
 801314c:	f7ff fd82 	bl	8012c54 <HAL_UART_RxCpltCallback>
 8013150:	2300      	movs	r3, #0
 8013152:	e002      	b.n	801315a <UART_Receive_IT+0x16e>
 8013154:	2300      	movs	r3, #0
 8013156:	e000      	b.n	801315a <UART_Receive_IT+0x16e>
 8013158:	2302      	movs	r3, #2
 801315a:	4618      	mov	r0, r3
 801315c:	3730      	adds	r7, #48	@ 0x30
 801315e:	46bd      	mov	sp, r7
 8013160:	bd80      	pop	{r7, pc}
	...

08013164 <UART_SetConfig>:
 8013164:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8013168:	b0c0      	sub	sp, #256	@ 0x100
 801316a:	af00      	add	r7, sp, #0
 801316c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8013170:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013174:	681b      	ldr	r3, [r3, #0]
 8013176:	691b      	ldr	r3, [r3, #16]
 8013178:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 801317c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013180:	68d9      	ldr	r1, [r3, #12]
 8013182:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013186:	681a      	ldr	r2, [r3, #0]
 8013188:	ea40 0301 	orr.w	r3, r0, r1
 801318c:	6113      	str	r3, [r2, #16]
 801318e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013192:	689a      	ldr	r2, [r3, #8]
 8013194:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013198:	691b      	ldr	r3, [r3, #16]
 801319a:	431a      	orrs	r2, r3
 801319c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131a0:	695b      	ldr	r3, [r3, #20]
 80131a2:	431a      	orrs	r2, r3
 80131a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131a8:	69db      	ldr	r3, [r3, #28]
 80131aa:	4313      	orrs	r3, r2
 80131ac:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80131b0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131b4:	681b      	ldr	r3, [r3, #0]
 80131b6:	68db      	ldr	r3, [r3, #12]
 80131b8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80131bc:	f021 010c 	bic.w	r1, r1, #12
 80131c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131c4:	681a      	ldr	r2, [r3, #0]
 80131c6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80131ca:	430b      	orrs	r3, r1
 80131cc:	60d3      	str	r3, [r2, #12]
 80131ce:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131d2:	681b      	ldr	r3, [r3, #0]
 80131d4:	695b      	ldr	r3, [r3, #20]
 80131d6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80131da:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131de:	6999      	ldr	r1, [r3, #24]
 80131e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131e4:	681a      	ldr	r2, [r3, #0]
 80131e6:	ea40 0301 	orr.w	r3, r0, r1
 80131ea:	6153      	str	r3, [r2, #20]
 80131ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131f0:	681a      	ldr	r2, [r3, #0]
 80131f2:	4b8f      	ldr	r3, [pc, #572]	@ (8013430 <UART_SetConfig+0x2cc>)
 80131f4:	429a      	cmp	r2, r3
 80131f6:	d005      	beq.n	8013204 <UART_SetConfig+0xa0>
 80131f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80131fc:	681a      	ldr	r2, [r3, #0]
 80131fe:	4b8d      	ldr	r3, [pc, #564]	@ (8013434 <UART_SetConfig+0x2d0>)
 8013200:	429a      	cmp	r2, r3
 8013202:	d104      	bne.n	801320e <UART_SetConfig+0xaa>
 8013204:	f7fd fb76 	bl	80108f4 <HAL_RCC_GetPCLK2Freq>
 8013208:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 801320c:	e003      	b.n	8013216 <UART_SetConfig+0xb2>
 801320e:	f7fd fb5d 	bl	80108cc <HAL_RCC_GetPCLK1Freq>
 8013212:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8013216:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 801321a:	69db      	ldr	r3, [r3, #28]
 801321c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8013220:	f040 810c 	bne.w	801343c <UART_SetConfig+0x2d8>
 8013224:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013228:	2200      	movs	r2, #0
 801322a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 801322e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8013232:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8013236:	4622      	mov	r2, r4
 8013238:	462b      	mov	r3, r5
 801323a:	1891      	adds	r1, r2, r2
 801323c:	65b9      	str	r1, [r7, #88]	@ 0x58
 801323e:	415b      	adcs	r3, r3
 8013240:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8013242:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8013246:	4621      	mov	r1, r4
 8013248:	eb12 0801 	adds.w	r8, r2, r1
 801324c:	4629      	mov	r1, r5
 801324e:	eb43 0901 	adc.w	r9, r3, r1
 8013252:	f04f 0200 	mov.w	r2, #0
 8013256:	f04f 0300 	mov.w	r3, #0
 801325a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 801325e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8013262:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8013266:	4690      	mov	r8, r2
 8013268:	4699      	mov	r9, r3
 801326a:	4623      	mov	r3, r4
 801326c:	eb18 0303 	adds.w	r3, r8, r3
 8013270:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8013274:	462b      	mov	r3, r5
 8013276:	eb49 0303 	adc.w	r3, r9, r3
 801327a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 801327e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013282:	685b      	ldr	r3, [r3, #4]
 8013284:	2200      	movs	r2, #0
 8013286:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 801328a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 801328e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8013292:	460b      	mov	r3, r1
 8013294:	18db      	adds	r3, r3, r3
 8013296:	653b      	str	r3, [r7, #80]	@ 0x50
 8013298:	4613      	mov	r3, r2
 801329a:	eb42 0303 	adc.w	r3, r2, r3
 801329e:	657b      	str	r3, [r7, #84]	@ 0x54
 80132a0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80132a4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80132a8:	f7ed fcee 	bl	8000c88 <__aeabi_uldivmod>
 80132ac:	4602      	mov	r2, r0
 80132ae:	460b      	mov	r3, r1
 80132b0:	4b61      	ldr	r3, [pc, #388]	@ (8013438 <UART_SetConfig+0x2d4>)
 80132b2:	fba3 2302 	umull	r2, r3, r3, r2
 80132b6:	095b      	lsrs	r3, r3, #5
 80132b8:	011c      	lsls	r4, r3, #4
 80132ba:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80132be:	2200      	movs	r2, #0
 80132c0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80132c4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80132c8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80132cc:	4642      	mov	r2, r8
 80132ce:	464b      	mov	r3, r9
 80132d0:	1891      	adds	r1, r2, r2
 80132d2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80132d4:	415b      	adcs	r3, r3
 80132d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80132d8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80132dc:	4641      	mov	r1, r8
 80132de:	eb12 0a01 	adds.w	sl, r2, r1
 80132e2:	4649      	mov	r1, r9
 80132e4:	eb43 0b01 	adc.w	fp, r3, r1
 80132e8:	f04f 0200 	mov.w	r2, #0
 80132ec:	f04f 0300 	mov.w	r3, #0
 80132f0:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80132f4:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80132f8:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80132fc:	4692      	mov	sl, r2
 80132fe:	469b      	mov	fp, r3
 8013300:	4643      	mov	r3, r8
 8013302:	eb1a 0303 	adds.w	r3, sl, r3
 8013306:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 801330a:	464b      	mov	r3, r9
 801330c:	eb4b 0303 	adc.w	r3, fp, r3
 8013310:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8013314:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013318:	685b      	ldr	r3, [r3, #4]
 801331a:	2200      	movs	r2, #0
 801331c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8013320:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8013324:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8013328:	460b      	mov	r3, r1
 801332a:	18db      	adds	r3, r3, r3
 801332c:	643b      	str	r3, [r7, #64]	@ 0x40
 801332e:	4613      	mov	r3, r2
 8013330:	eb42 0303 	adc.w	r3, r2, r3
 8013334:	647b      	str	r3, [r7, #68]	@ 0x44
 8013336:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 801333a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 801333e:	f7ed fca3 	bl	8000c88 <__aeabi_uldivmod>
 8013342:	4602      	mov	r2, r0
 8013344:	460b      	mov	r3, r1
 8013346:	4611      	mov	r1, r2
 8013348:	4b3b      	ldr	r3, [pc, #236]	@ (8013438 <UART_SetConfig+0x2d4>)
 801334a:	fba3 2301 	umull	r2, r3, r3, r1
 801334e:	095b      	lsrs	r3, r3, #5
 8013350:	2264      	movs	r2, #100	@ 0x64
 8013352:	fb02 f303 	mul.w	r3, r2, r3
 8013356:	1acb      	subs	r3, r1, r3
 8013358:	00db      	lsls	r3, r3, #3
 801335a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 801335e:	4b36      	ldr	r3, [pc, #216]	@ (8013438 <UART_SetConfig+0x2d4>)
 8013360:	fba3 2302 	umull	r2, r3, r3, r2
 8013364:	095b      	lsrs	r3, r3, #5
 8013366:	005b      	lsls	r3, r3, #1
 8013368:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 801336c:	441c      	add	r4, r3
 801336e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013372:	2200      	movs	r2, #0
 8013374:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8013378:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 801337c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8013380:	4642      	mov	r2, r8
 8013382:	464b      	mov	r3, r9
 8013384:	1891      	adds	r1, r2, r2
 8013386:	63b9      	str	r1, [r7, #56]	@ 0x38
 8013388:	415b      	adcs	r3, r3
 801338a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801338c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8013390:	4641      	mov	r1, r8
 8013392:	1851      	adds	r1, r2, r1
 8013394:	6339      	str	r1, [r7, #48]	@ 0x30
 8013396:	4649      	mov	r1, r9
 8013398:	414b      	adcs	r3, r1
 801339a:	637b      	str	r3, [r7, #52]	@ 0x34
 801339c:	f04f 0200 	mov.w	r2, #0
 80133a0:	f04f 0300 	mov.w	r3, #0
 80133a4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80133a8:	4659      	mov	r1, fp
 80133aa:	00cb      	lsls	r3, r1, #3
 80133ac:	4651      	mov	r1, sl
 80133ae:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80133b2:	4651      	mov	r1, sl
 80133b4:	00ca      	lsls	r2, r1, #3
 80133b6:	4610      	mov	r0, r2
 80133b8:	4619      	mov	r1, r3
 80133ba:	4603      	mov	r3, r0
 80133bc:	4642      	mov	r2, r8
 80133be:	189b      	adds	r3, r3, r2
 80133c0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80133c4:	464b      	mov	r3, r9
 80133c6:	460a      	mov	r2, r1
 80133c8:	eb42 0303 	adc.w	r3, r2, r3
 80133cc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80133d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80133d4:	685b      	ldr	r3, [r3, #4]
 80133d6:	2200      	movs	r2, #0
 80133d8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80133dc:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80133e0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80133e4:	460b      	mov	r3, r1
 80133e6:	18db      	adds	r3, r3, r3
 80133e8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80133ea:	4613      	mov	r3, r2
 80133ec:	eb42 0303 	adc.w	r3, r2, r3
 80133f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80133f2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 80133f6:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 80133fa:	f7ed fc45 	bl	8000c88 <__aeabi_uldivmod>
 80133fe:	4602      	mov	r2, r0
 8013400:	460b      	mov	r3, r1
 8013402:	4b0d      	ldr	r3, [pc, #52]	@ (8013438 <UART_SetConfig+0x2d4>)
 8013404:	fba3 1302 	umull	r1, r3, r3, r2
 8013408:	095b      	lsrs	r3, r3, #5
 801340a:	2164      	movs	r1, #100	@ 0x64
 801340c:	fb01 f303 	mul.w	r3, r1, r3
 8013410:	1ad3      	subs	r3, r2, r3
 8013412:	00db      	lsls	r3, r3, #3
 8013414:	3332      	adds	r3, #50	@ 0x32
 8013416:	4a08      	ldr	r2, [pc, #32]	@ (8013438 <UART_SetConfig+0x2d4>)
 8013418:	fba2 2303 	umull	r2, r3, r2, r3
 801341c:	095b      	lsrs	r3, r3, #5
 801341e:	f003 0207 	and.w	r2, r3, #7
 8013422:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013426:	681b      	ldr	r3, [r3, #0]
 8013428:	4422      	add	r2, r4
 801342a:	609a      	str	r2, [r3, #8]
 801342c:	e106      	b.n	801363c <UART_SetConfig+0x4d8>
 801342e:	bf00      	nop
 8013430:	40011000 	.word	0x40011000
 8013434:	40011400 	.word	0x40011400
 8013438:	51eb851f 	.word	0x51eb851f
 801343c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8013440:	2200      	movs	r2, #0
 8013442:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8013446:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 801344a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 801344e:	4642      	mov	r2, r8
 8013450:	464b      	mov	r3, r9
 8013452:	1891      	adds	r1, r2, r2
 8013454:	6239      	str	r1, [r7, #32]
 8013456:	415b      	adcs	r3, r3
 8013458:	627b      	str	r3, [r7, #36]	@ 0x24
 801345a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 801345e:	4641      	mov	r1, r8
 8013460:	1854      	adds	r4, r2, r1
 8013462:	4649      	mov	r1, r9
 8013464:	eb43 0501 	adc.w	r5, r3, r1
 8013468:	f04f 0200 	mov.w	r2, #0
 801346c:	f04f 0300 	mov.w	r3, #0
 8013470:	00eb      	lsls	r3, r5, #3
 8013472:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8013476:	00e2      	lsls	r2, r4, #3
 8013478:	4614      	mov	r4, r2
 801347a:	461d      	mov	r5, r3
 801347c:	4643      	mov	r3, r8
 801347e:	18e3      	adds	r3, r4, r3
 8013480:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8013484:	464b      	mov	r3, r9
 8013486:	eb45 0303 	adc.w	r3, r5, r3
 801348a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 801348e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013492:	685b      	ldr	r3, [r3, #4]
 8013494:	2200      	movs	r2, #0
 8013496:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 801349a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 801349e:	f04f 0200 	mov.w	r2, #0
 80134a2:	f04f 0300 	mov.w	r3, #0
 80134a6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80134aa:	4629      	mov	r1, r5
 80134ac:	008b      	lsls	r3, r1, #2
 80134ae:	4621      	mov	r1, r4
 80134b0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80134b4:	4621      	mov	r1, r4
 80134b6:	008a      	lsls	r2, r1, #2
 80134b8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80134bc:	f7ed fbe4 	bl	8000c88 <__aeabi_uldivmod>
 80134c0:	4602      	mov	r2, r0
 80134c2:	460b      	mov	r3, r1
 80134c4:	4b60      	ldr	r3, [pc, #384]	@ (8013648 <UART_SetConfig+0x4e4>)
 80134c6:	fba3 2302 	umull	r2, r3, r3, r2
 80134ca:	095b      	lsrs	r3, r3, #5
 80134cc:	011c      	lsls	r4, r3, #4
 80134ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80134d2:	2200      	movs	r2, #0
 80134d4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80134d8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80134dc:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80134e0:	4642      	mov	r2, r8
 80134e2:	464b      	mov	r3, r9
 80134e4:	1891      	adds	r1, r2, r2
 80134e6:	61b9      	str	r1, [r7, #24]
 80134e8:	415b      	adcs	r3, r3
 80134ea:	61fb      	str	r3, [r7, #28]
 80134ec:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80134f0:	4641      	mov	r1, r8
 80134f2:	1851      	adds	r1, r2, r1
 80134f4:	6139      	str	r1, [r7, #16]
 80134f6:	4649      	mov	r1, r9
 80134f8:	414b      	adcs	r3, r1
 80134fa:	617b      	str	r3, [r7, #20]
 80134fc:	f04f 0200 	mov.w	r2, #0
 8013500:	f04f 0300 	mov.w	r3, #0
 8013504:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8013508:	4659      	mov	r1, fp
 801350a:	00cb      	lsls	r3, r1, #3
 801350c:	4651      	mov	r1, sl
 801350e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8013512:	4651      	mov	r1, sl
 8013514:	00ca      	lsls	r2, r1, #3
 8013516:	4610      	mov	r0, r2
 8013518:	4619      	mov	r1, r3
 801351a:	4603      	mov	r3, r0
 801351c:	4642      	mov	r2, r8
 801351e:	189b      	adds	r3, r3, r2
 8013520:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8013524:	464b      	mov	r3, r9
 8013526:	460a      	mov	r2, r1
 8013528:	eb42 0303 	adc.w	r3, r2, r3
 801352c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8013530:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013534:	685b      	ldr	r3, [r3, #4]
 8013536:	2200      	movs	r2, #0
 8013538:	67bb      	str	r3, [r7, #120]	@ 0x78
 801353a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 801353c:	f04f 0200 	mov.w	r2, #0
 8013540:	f04f 0300 	mov.w	r3, #0
 8013544:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8013548:	4649      	mov	r1, r9
 801354a:	008b      	lsls	r3, r1, #2
 801354c:	4641      	mov	r1, r8
 801354e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8013552:	4641      	mov	r1, r8
 8013554:	008a      	lsls	r2, r1, #2
 8013556:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 801355a:	f7ed fb95 	bl	8000c88 <__aeabi_uldivmod>
 801355e:	4602      	mov	r2, r0
 8013560:	460b      	mov	r3, r1
 8013562:	4611      	mov	r1, r2
 8013564:	4b38      	ldr	r3, [pc, #224]	@ (8013648 <UART_SetConfig+0x4e4>)
 8013566:	fba3 2301 	umull	r2, r3, r3, r1
 801356a:	095b      	lsrs	r3, r3, #5
 801356c:	2264      	movs	r2, #100	@ 0x64
 801356e:	fb02 f303 	mul.w	r3, r2, r3
 8013572:	1acb      	subs	r3, r1, r3
 8013574:	011b      	lsls	r3, r3, #4
 8013576:	3332      	adds	r3, #50	@ 0x32
 8013578:	4a33      	ldr	r2, [pc, #204]	@ (8013648 <UART_SetConfig+0x4e4>)
 801357a:	fba2 2303 	umull	r2, r3, r2, r3
 801357e:	095b      	lsrs	r3, r3, #5
 8013580:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8013584:	441c      	add	r4, r3
 8013586:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 801358a:	2200      	movs	r2, #0
 801358c:	673b      	str	r3, [r7, #112]	@ 0x70
 801358e:	677a      	str	r2, [r7, #116]	@ 0x74
 8013590:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8013594:	4642      	mov	r2, r8
 8013596:	464b      	mov	r3, r9
 8013598:	1891      	adds	r1, r2, r2
 801359a:	60b9      	str	r1, [r7, #8]
 801359c:	415b      	adcs	r3, r3
 801359e:	60fb      	str	r3, [r7, #12]
 80135a0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80135a4:	4641      	mov	r1, r8
 80135a6:	1851      	adds	r1, r2, r1
 80135a8:	6039      	str	r1, [r7, #0]
 80135aa:	4649      	mov	r1, r9
 80135ac:	414b      	adcs	r3, r1
 80135ae:	607b      	str	r3, [r7, #4]
 80135b0:	f04f 0200 	mov.w	r2, #0
 80135b4:	f04f 0300 	mov.w	r3, #0
 80135b8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80135bc:	4659      	mov	r1, fp
 80135be:	00cb      	lsls	r3, r1, #3
 80135c0:	4651      	mov	r1, sl
 80135c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80135c6:	4651      	mov	r1, sl
 80135c8:	00ca      	lsls	r2, r1, #3
 80135ca:	4610      	mov	r0, r2
 80135cc:	4619      	mov	r1, r3
 80135ce:	4603      	mov	r3, r0
 80135d0:	4642      	mov	r2, r8
 80135d2:	189b      	adds	r3, r3, r2
 80135d4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80135d6:	464b      	mov	r3, r9
 80135d8:	460a      	mov	r2, r1
 80135da:	eb42 0303 	adc.w	r3, r2, r3
 80135de:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80135e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80135e4:	685b      	ldr	r3, [r3, #4]
 80135e6:	2200      	movs	r2, #0
 80135e8:	663b      	str	r3, [r7, #96]	@ 0x60
 80135ea:	667a      	str	r2, [r7, #100]	@ 0x64
 80135ec:	f04f 0200 	mov.w	r2, #0
 80135f0:	f04f 0300 	mov.w	r3, #0
 80135f4:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 80135f8:	4649      	mov	r1, r9
 80135fa:	008b      	lsls	r3, r1, #2
 80135fc:	4641      	mov	r1, r8
 80135fe:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8013602:	4641      	mov	r1, r8
 8013604:	008a      	lsls	r2, r1, #2
 8013606:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 801360a:	f7ed fb3d 	bl	8000c88 <__aeabi_uldivmod>
 801360e:	4602      	mov	r2, r0
 8013610:	460b      	mov	r3, r1
 8013612:	4b0d      	ldr	r3, [pc, #52]	@ (8013648 <UART_SetConfig+0x4e4>)
 8013614:	fba3 1302 	umull	r1, r3, r3, r2
 8013618:	095b      	lsrs	r3, r3, #5
 801361a:	2164      	movs	r1, #100	@ 0x64
 801361c:	fb01 f303 	mul.w	r3, r1, r3
 8013620:	1ad3      	subs	r3, r2, r3
 8013622:	011b      	lsls	r3, r3, #4
 8013624:	3332      	adds	r3, #50	@ 0x32
 8013626:	4a08      	ldr	r2, [pc, #32]	@ (8013648 <UART_SetConfig+0x4e4>)
 8013628:	fba2 2303 	umull	r2, r3, r2, r3
 801362c:	095b      	lsrs	r3, r3, #5
 801362e:	f003 020f 	and.w	r2, r3, #15
 8013632:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8013636:	681b      	ldr	r3, [r3, #0]
 8013638:	4422      	add	r2, r4
 801363a:	609a      	str	r2, [r3, #8]
 801363c:	bf00      	nop
 801363e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8013642:	46bd      	mov	sp, r7
 8013644:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8013648:	51eb851f 	.word	0x51eb851f

0801364c <LL_TIM_SetPrescaler>:
 801364c:	b480      	push	{r7}
 801364e:	b083      	sub	sp, #12
 8013650:	af00      	add	r7, sp, #0
 8013652:	6078      	str	r0, [r7, #4]
 8013654:	6039      	str	r1, [r7, #0]
 8013656:	687b      	ldr	r3, [r7, #4]
 8013658:	683a      	ldr	r2, [r7, #0]
 801365a:	629a      	str	r2, [r3, #40]	@ 0x28
 801365c:	bf00      	nop
 801365e:	370c      	adds	r7, #12
 8013660:	46bd      	mov	sp, r7
 8013662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013666:	4770      	bx	lr

08013668 <LL_TIM_SetAutoReload>:
 8013668:	b480      	push	{r7}
 801366a:	b083      	sub	sp, #12
 801366c:	af00      	add	r7, sp, #0
 801366e:	6078      	str	r0, [r7, #4]
 8013670:	6039      	str	r1, [r7, #0]
 8013672:	687b      	ldr	r3, [r7, #4]
 8013674:	683a      	ldr	r2, [r7, #0]
 8013676:	62da      	str	r2, [r3, #44]	@ 0x2c
 8013678:	bf00      	nop
 801367a:	370c      	adds	r7, #12
 801367c:	46bd      	mov	sp, r7
 801367e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013682:	4770      	bx	lr

08013684 <LL_TIM_SetRepetitionCounter>:
 8013684:	b480      	push	{r7}
 8013686:	b083      	sub	sp, #12
 8013688:	af00      	add	r7, sp, #0
 801368a:	6078      	str	r0, [r7, #4]
 801368c:	6039      	str	r1, [r7, #0]
 801368e:	687b      	ldr	r3, [r7, #4]
 8013690:	683a      	ldr	r2, [r7, #0]
 8013692:	631a      	str	r2, [r3, #48]	@ 0x30
 8013694:	bf00      	nop
 8013696:	370c      	adds	r7, #12
 8013698:	46bd      	mov	sp, r7
 801369a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801369e:	4770      	bx	lr

080136a0 <LL_TIM_GenerateEvent_UPDATE>:
 80136a0:	b480      	push	{r7}
 80136a2:	b083      	sub	sp, #12
 80136a4:	af00      	add	r7, sp, #0
 80136a6:	6078      	str	r0, [r7, #4]
 80136a8:	687b      	ldr	r3, [r7, #4]
 80136aa:	695b      	ldr	r3, [r3, #20]
 80136ac:	f043 0201 	orr.w	r2, r3, #1
 80136b0:	687b      	ldr	r3, [r7, #4]
 80136b2:	615a      	str	r2, [r3, #20]
 80136b4:	bf00      	nop
 80136b6:	370c      	adds	r7, #12
 80136b8:	46bd      	mov	sp, r7
 80136ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80136be:	4770      	bx	lr

080136c0 <LL_TIM_Init>:
 80136c0:	b580      	push	{r7, lr}
 80136c2:	b084      	sub	sp, #16
 80136c4:	af00      	add	r7, sp, #0
 80136c6:	6078      	str	r0, [r7, #4]
 80136c8:	6039      	str	r1, [r7, #0]
 80136ca:	687b      	ldr	r3, [r7, #4]
 80136cc:	681b      	ldr	r3, [r3, #0]
 80136ce:	60fb      	str	r3, [r7, #12]
 80136d0:	687b      	ldr	r3, [r7, #4]
 80136d2:	4a3d      	ldr	r2, [pc, #244]	@ (80137c8 <LL_TIM_Init+0x108>)
 80136d4:	4293      	cmp	r3, r2
 80136d6:	d013      	beq.n	8013700 <LL_TIM_Init+0x40>
 80136d8:	687b      	ldr	r3, [r7, #4]
 80136da:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80136de:	d00f      	beq.n	8013700 <LL_TIM_Init+0x40>
 80136e0:	687b      	ldr	r3, [r7, #4]
 80136e2:	4a3a      	ldr	r2, [pc, #232]	@ (80137cc <LL_TIM_Init+0x10c>)
 80136e4:	4293      	cmp	r3, r2
 80136e6:	d00b      	beq.n	8013700 <LL_TIM_Init+0x40>
 80136e8:	687b      	ldr	r3, [r7, #4]
 80136ea:	4a39      	ldr	r2, [pc, #228]	@ (80137d0 <LL_TIM_Init+0x110>)
 80136ec:	4293      	cmp	r3, r2
 80136ee:	d007      	beq.n	8013700 <LL_TIM_Init+0x40>
 80136f0:	687b      	ldr	r3, [r7, #4]
 80136f2:	4a38      	ldr	r2, [pc, #224]	@ (80137d4 <LL_TIM_Init+0x114>)
 80136f4:	4293      	cmp	r3, r2
 80136f6:	d003      	beq.n	8013700 <LL_TIM_Init+0x40>
 80136f8:	687b      	ldr	r3, [r7, #4]
 80136fa:	4a37      	ldr	r2, [pc, #220]	@ (80137d8 <LL_TIM_Init+0x118>)
 80136fc:	4293      	cmp	r3, r2
 80136fe:	d106      	bne.n	801370e <LL_TIM_Init+0x4e>
 8013700:	68fb      	ldr	r3, [r7, #12]
 8013702:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8013706:	683b      	ldr	r3, [r7, #0]
 8013708:	685b      	ldr	r3, [r3, #4]
 801370a:	4313      	orrs	r3, r2
 801370c:	60fb      	str	r3, [r7, #12]
 801370e:	687b      	ldr	r3, [r7, #4]
 8013710:	4a2d      	ldr	r2, [pc, #180]	@ (80137c8 <LL_TIM_Init+0x108>)
 8013712:	4293      	cmp	r3, r2
 8013714:	d02b      	beq.n	801376e <LL_TIM_Init+0xae>
 8013716:	687b      	ldr	r3, [r7, #4]
 8013718:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801371c:	d027      	beq.n	801376e <LL_TIM_Init+0xae>
 801371e:	687b      	ldr	r3, [r7, #4]
 8013720:	4a2a      	ldr	r2, [pc, #168]	@ (80137cc <LL_TIM_Init+0x10c>)
 8013722:	4293      	cmp	r3, r2
 8013724:	d023      	beq.n	801376e <LL_TIM_Init+0xae>
 8013726:	687b      	ldr	r3, [r7, #4]
 8013728:	4a29      	ldr	r2, [pc, #164]	@ (80137d0 <LL_TIM_Init+0x110>)
 801372a:	4293      	cmp	r3, r2
 801372c:	d01f      	beq.n	801376e <LL_TIM_Init+0xae>
 801372e:	687b      	ldr	r3, [r7, #4]
 8013730:	4a28      	ldr	r2, [pc, #160]	@ (80137d4 <LL_TIM_Init+0x114>)
 8013732:	4293      	cmp	r3, r2
 8013734:	d01b      	beq.n	801376e <LL_TIM_Init+0xae>
 8013736:	687b      	ldr	r3, [r7, #4]
 8013738:	4a27      	ldr	r2, [pc, #156]	@ (80137d8 <LL_TIM_Init+0x118>)
 801373a:	4293      	cmp	r3, r2
 801373c:	d017      	beq.n	801376e <LL_TIM_Init+0xae>
 801373e:	687b      	ldr	r3, [r7, #4]
 8013740:	4a26      	ldr	r2, [pc, #152]	@ (80137dc <LL_TIM_Init+0x11c>)
 8013742:	4293      	cmp	r3, r2
 8013744:	d013      	beq.n	801376e <LL_TIM_Init+0xae>
 8013746:	687b      	ldr	r3, [r7, #4]
 8013748:	4a25      	ldr	r2, [pc, #148]	@ (80137e0 <LL_TIM_Init+0x120>)
 801374a:	4293      	cmp	r3, r2
 801374c:	d00f      	beq.n	801376e <LL_TIM_Init+0xae>
 801374e:	687b      	ldr	r3, [r7, #4]
 8013750:	4a24      	ldr	r2, [pc, #144]	@ (80137e4 <LL_TIM_Init+0x124>)
 8013752:	4293      	cmp	r3, r2
 8013754:	d00b      	beq.n	801376e <LL_TIM_Init+0xae>
 8013756:	687b      	ldr	r3, [r7, #4]
 8013758:	4a23      	ldr	r2, [pc, #140]	@ (80137e8 <LL_TIM_Init+0x128>)
 801375a:	4293      	cmp	r3, r2
 801375c:	d007      	beq.n	801376e <LL_TIM_Init+0xae>
 801375e:	687b      	ldr	r3, [r7, #4]
 8013760:	4a22      	ldr	r2, [pc, #136]	@ (80137ec <LL_TIM_Init+0x12c>)
 8013762:	4293      	cmp	r3, r2
 8013764:	d003      	beq.n	801376e <LL_TIM_Init+0xae>
 8013766:	687b      	ldr	r3, [r7, #4]
 8013768:	4a21      	ldr	r2, [pc, #132]	@ (80137f0 <LL_TIM_Init+0x130>)
 801376a:	4293      	cmp	r3, r2
 801376c:	d106      	bne.n	801377c <LL_TIM_Init+0xbc>
 801376e:	68fb      	ldr	r3, [r7, #12]
 8013770:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8013774:	683b      	ldr	r3, [r7, #0]
 8013776:	68db      	ldr	r3, [r3, #12]
 8013778:	4313      	orrs	r3, r2
 801377a:	60fb      	str	r3, [r7, #12]
 801377c:	687b      	ldr	r3, [r7, #4]
 801377e:	68fa      	ldr	r2, [r7, #12]
 8013780:	601a      	str	r2, [r3, #0]
 8013782:	683b      	ldr	r3, [r7, #0]
 8013784:	689b      	ldr	r3, [r3, #8]
 8013786:	4619      	mov	r1, r3
 8013788:	6878      	ldr	r0, [r7, #4]
 801378a:	f7ff ff6d 	bl	8013668 <LL_TIM_SetAutoReload>
 801378e:	683b      	ldr	r3, [r7, #0]
 8013790:	881b      	ldrh	r3, [r3, #0]
 8013792:	4619      	mov	r1, r3
 8013794:	6878      	ldr	r0, [r7, #4]
 8013796:	f7ff ff59 	bl	801364c <LL_TIM_SetPrescaler>
 801379a:	687b      	ldr	r3, [r7, #4]
 801379c:	4a0a      	ldr	r2, [pc, #40]	@ (80137c8 <LL_TIM_Init+0x108>)
 801379e:	4293      	cmp	r3, r2
 80137a0:	d003      	beq.n	80137aa <LL_TIM_Init+0xea>
 80137a2:	687b      	ldr	r3, [r7, #4]
 80137a4:	4a0c      	ldr	r2, [pc, #48]	@ (80137d8 <LL_TIM_Init+0x118>)
 80137a6:	4293      	cmp	r3, r2
 80137a8:	d105      	bne.n	80137b6 <LL_TIM_Init+0xf6>
 80137aa:	683b      	ldr	r3, [r7, #0]
 80137ac:	691b      	ldr	r3, [r3, #16]
 80137ae:	4619      	mov	r1, r3
 80137b0:	6878      	ldr	r0, [r7, #4]
 80137b2:	f7ff ff67 	bl	8013684 <LL_TIM_SetRepetitionCounter>
 80137b6:	6878      	ldr	r0, [r7, #4]
 80137b8:	f7ff ff72 	bl	80136a0 <LL_TIM_GenerateEvent_UPDATE>
 80137bc:	2300      	movs	r3, #0
 80137be:	4618      	mov	r0, r3
 80137c0:	3710      	adds	r7, #16
 80137c2:	46bd      	mov	sp, r7
 80137c4:	bd80      	pop	{r7, pc}
 80137c6:	bf00      	nop
 80137c8:	40010000 	.word	0x40010000
 80137cc:	40000400 	.word	0x40000400
 80137d0:	40000800 	.word	0x40000800
 80137d4:	40000c00 	.word	0x40000c00
 80137d8:	40010400 	.word	0x40010400
 80137dc:	40014000 	.word	0x40014000
 80137e0:	40014400 	.word	0x40014400
 80137e4:	40014800 	.word	0x40014800
 80137e8:	40001800 	.word	0x40001800
 80137ec:	40001c00 	.word	0x40001c00
 80137f0:	40002000 	.word	0x40002000

080137f4 <USB_CoreInit>:
 80137f4:	b084      	sub	sp, #16
 80137f6:	b580      	push	{r7, lr}
 80137f8:	b084      	sub	sp, #16
 80137fa:	af00      	add	r7, sp, #0
 80137fc:	6078      	str	r0, [r7, #4]
 80137fe:	f107 001c 	add.w	r0, r7, #28
 8013802:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8013806:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8013808:	2b01      	cmp	r3, #1
 801380a:	d122      	bne.n	8013852 <USB_CoreInit+0x5e>
 801380c:	687b      	ldr	r3, [r7, #4]
 801380e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013810:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8013814:	687b      	ldr	r3, [r7, #4]
 8013816:	639a      	str	r2, [r3, #56]	@ 0x38
 8013818:	687b      	ldr	r3, [r7, #4]
 801381a:	68db      	ldr	r3, [r3, #12]
 801381c:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8013820:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8013824:	687a      	ldr	r2, [r7, #4]
 8013826:	60d3      	str	r3, [r2, #12]
 8013828:	687b      	ldr	r3, [r7, #4]
 801382a:	68db      	ldr	r3, [r3, #12]
 801382c:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8013830:	687b      	ldr	r3, [r7, #4]
 8013832:	60da      	str	r2, [r3, #12]
 8013834:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013836:	2b01      	cmp	r3, #1
 8013838:	d105      	bne.n	8013846 <USB_CoreInit+0x52>
 801383a:	687b      	ldr	r3, [r7, #4]
 801383c:	68db      	ldr	r3, [r3, #12]
 801383e:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8013842:	687b      	ldr	r3, [r7, #4]
 8013844:	60da      	str	r2, [r3, #12]
 8013846:	6878      	ldr	r0, [r7, #4]
 8013848:	f001 fbee 	bl	8015028 <USB_CoreReset>
 801384c:	4603      	mov	r3, r0
 801384e:	73fb      	strb	r3, [r7, #15]
 8013850:	e01a      	b.n	8013888 <USB_CoreInit+0x94>
 8013852:	687b      	ldr	r3, [r7, #4]
 8013854:	68db      	ldr	r3, [r3, #12]
 8013856:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 801385a:	687b      	ldr	r3, [r7, #4]
 801385c:	60da      	str	r2, [r3, #12]
 801385e:	6878      	ldr	r0, [r7, #4]
 8013860:	f001 fbe2 	bl	8015028 <USB_CoreReset>
 8013864:	4603      	mov	r3, r0
 8013866:	73fb      	strb	r3, [r7, #15]
 8013868:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 801386a:	2b00      	cmp	r3, #0
 801386c:	d106      	bne.n	801387c <USB_CoreInit+0x88>
 801386e:	687b      	ldr	r3, [r7, #4]
 8013870:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013872:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8013876:	687b      	ldr	r3, [r7, #4]
 8013878:	639a      	str	r2, [r3, #56]	@ 0x38
 801387a:	e005      	b.n	8013888 <USB_CoreInit+0x94>
 801387c:	687b      	ldr	r3, [r7, #4]
 801387e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013880:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8013884:	687b      	ldr	r3, [r7, #4]
 8013886:	639a      	str	r2, [r3, #56]	@ 0x38
 8013888:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801388a:	2b01      	cmp	r3, #1
 801388c:	d10b      	bne.n	80138a6 <USB_CoreInit+0xb2>
 801388e:	687b      	ldr	r3, [r7, #4]
 8013890:	689b      	ldr	r3, [r3, #8]
 8013892:	f043 0206 	orr.w	r2, r3, #6
 8013896:	687b      	ldr	r3, [r7, #4]
 8013898:	609a      	str	r2, [r3, #8]
 801389a:	687b      	ldr	r3, [r7, #4]
 801389c:	689b      	ldr	r3, [r3, #8]
 801389e:	f043 0220 	orr.w	r2, r3, #32
 80138a2:	687b      	ldr	r3, [r7, #4]
 80138a4:	609a      	str	r2, [r3, #8]
 80138a6:	7bfb      	ldrb	r3, [r7, #15]
 80138a8:	4618      	mov	r0, r3
 80138aa:	3710      	adds	r7, #16
 80138ac:	46bd      	mov	sp, r7
 80138ae:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80138b2:	b004      	add	sp, #16
 80138b4:	4770      	bx	lr
	...

080138b8 <USB_SetTurnaroundTime>:
 80138b8:	b480      	push	{r7}
 80138ba:	b087      	sub	sp, #28
 80138bc:	af00      	add	r7, sp, #0
 80138be:	60f8      	str	r0, [r7, #12]
 80138c0:	60b9      	str	r1, [r7, #8]
 80138c2:	4613      	mov	r3, r2
 80138c4:	71fb      	strb	r3, [r7, #7]
 80138c6:	79fb      	ldrb	r3, [r7, #7]
 80138c8:	2b02      	cmp	r3, #2
 80138ca:	d165      	bne.n	8013998 <USB_SetTurnaroundTime+0xe0>
 80138cc:	68bb      	ldr	r3, [r7, #8]
 80138ce:	4a41      	ldr	r2, [pc, #260]	@ (80139d4 <USB_SetTurnaroundTime+0x11c>)
 80138d0:	4293      	cmp	r3, r2
 80138d2:	d906      	bls.n	80138e2 <USB_SetTurnaroundTime+0x2a>
 80138d4:	68bb      	ldr	r3, [r7, #8]
 80138d6:	4a40      	ldr	r2, [pc, #256]	@ (80139d8 <USB_SetTurnaroundTime+0x120>)
 80138d8:	4293      	cmp	r3, r2
 80138da:	d202      	bcs.n	80138e2 <USB_SetTurnaroundTime+0x2a>
 80138dc:	230f      	movs	r3, #15
 80138de:	617b      	str	r3, [r7, #20]
 80138e0:	e062      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 80138e2:	68bb      	ldr	r3, [r7, #8]
 80138e4:	4a3c      	ldr	r2, [pc, #240]	@ (80139d8 <USB_SetTurnaroundTime+0x120>)
 80138e6:	4293      	cmp	r3, r2
 80138e8:	d306      	bcc.n	80138f8 <USB_SetTurnaroundTime+0x40>
 80138ea:	68bb      	ldr	r3, [r7, #8]
 80138ec:	4a3b      	ldr	r2, [pc, #236]	@ (80139dc <USB_SetTurnaroundTime+0x124>)
 80138ee:	4293      	cmp	r3, r2
 80138f0:	d202      	bcs.n	80138f8 <USB_SetTurnaroundTime+0x40>
 80138f2:	230e      	movs	r3, #14
 80138f4:	617b      	str	r3, [r7, #20]
 80138f6:	e057      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 80138f8:	68bb      	ldr	r3, [r7, #8]
 80138fa:	4a38      	ldr	r2, [pc, #224]	@ (80139dc <USB_SetTurnaroundTime+0x124>)
 80138fc:	4293      	cmp	r3, r2
 80138fe:	d306      	bcc.n	801390e <USB_SetTurnaroundTime+0x56>
 8013900:	68bb      	ldr	r3, [r7, #8]
 8013902:	4a37      	ldr	r2, [pc, #220]	@ (80139e0 <USB_SetTurnaroundTime+0x128>)
 8013904:	4293      	cmp	r3, r2
 8013906:	d202      	bcs.n	801390e <USB_SetTurnaroundTime+0x56>
 8013908:	230d      	movs	r3, #13
 801390a:	617b      	str	r3, [r7, #20]
 801390c:	e04c      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 801390e:	68bb      	ldr	r3, [r7, #8]
 8013910:	4a33      	ldr	r2, [pc, #204]	@ (80139e0 <USB_SetTurnaroundTime+0x128>)
 8013912:	4293      	cmp	r3, r2
 8013914:	d306      	bcc.n	8013924 <USB_SetTurnaroundTime+0x6c>
 8013916:	68bb      	ldr	r3, [r7, #8]
 8013918:	4a32      	ldr	r2, [pc, #200]	@ (80139e4 <USB_SetTurnaroundTime+0x12c>)
 801391a:	4293      	cmp	r3, r2
 801391c:	d802      	bhi.n	8013924 <USB_SetTurnaroundTime+0x6c>
 801391e:	230c      	movs	r3, #12
 8013920:	617b      	str	r3, [r7, #20]
 8013922:	e041      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 8013924:	68bb      	ldr	r3, [r7, #8]
 8013926:	4a2f      	ldr	r2, [pc, #188]	@ (80139e4 <USB_SetTurnaroundTime+0x12c>)
 8013928:	4293      	cmp	r3, r2
 801392a:	d906      	bls.n	801393a <USB_SetTurnaroundTime+0x82>
 801392c:	68bb      	ldr	r3, [r7, #8]
 801392e:	4a2e      	ldr	r2, [pc, #184]	@ (80139e8 <USB_SetTurnaroundTime+0x130>)
 8013930:	4293      	cmp	r3, r2
 8013932:	d802      	bhi.n	801393a <USB_SetTurnaroundTime+0x82>
 8013934:	230b      	movs	r3, #11
 8013936:	617b      	str	r3, [r7, #20]
 8013938:	e036      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 801393a:	68bb      	ldr	r3, [r7, #8]
 801393c:	4a2a      	ldr	r2, [pc, #168]	@ (80139e8 <USB_SetTurnaroundTime+0x130>)
 801393e:	4293      	cmp	r3, r2
 8013940:	d906      	bls.n	8013950 <USB_SetTurnaroundTime+0x98>
 8013942:	68bb      	ldr	r3, [r7, #8]
 8013944:	4a29      	ldr	r2, [pc, #164]	@ (80139ec <USB_SetTurnaroundTime+0x134>)
 8013946:	4293      	cmp	r3, r2
 8013948:	d802      	bhi.n	8013950 <USB_SetTurnaroundTime+0x98>
 801394a:	230a      	movs	r3, #10
 801394c:	617b      	str	r3, [r7, #20]
 801394e:	e02b      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 8013950:	68bb      	ldr	r3, [r7, #8]
 8013952:	4a26      	ldr	r2, [pc, #152]	@ (80139ec <USB_SetTurnaroundTime+0x134>)
 8013954:	4293      	cmp	r3, r2
 8013956:	d906      	bls.n	8013966 <USB_SetTurnaroundTime+0xae>
 8013958:	68bb      	ldr	r3, [r7, #8]
 801395a:	4a25      	ldr	r2, [pc, #148]	@ (80139f0 <USB_SetTurnaroundTime+0x138>)
 801395c:	4293      	cmp	r3, r2
 801395e:	d202      	bcs.n	8013966 <USB_SetTurnaroundTime+0xae>
 8013960:	2309      	movs	r3, #9
 8013962:	617b      	str	r3, [r7, #20]
 8013964:	e020      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 8013966:	68bb      	ldr	r3, [r7, #8]
 8013968:	4a21      	ldr	r2, [pc, #132]	@ (80139f0 <USB_SetTurnaroundTime+0x138>)
 801396a:	4293      	cmp	r3, r2
 801396c:	d306      	bcc.n	801397c <USB_SetTurnaroundTime+0xc4>
 801396e:	68bb      	ldr	r3, [r7, #8]
 8013970:	4a20      	ldr	r2, [pc, #128]	@ (80139f4 <USB_SetTurnaroundTime+0x13c>)
 8013972:	4293      	cmp	r3, r2
 8013974:	d802      	bhi.n	801397c <USB_SetTurnaroundTime+0xc4>
 8013976:	2308      	movs	r3, #8
 8013978:	617b      	str	r3, [r7, #20]
 801397a:	e015      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 801397c:	68bb      	ldr	r3, [r7, #8]
 801397e:	4a1d      	ldr	r2, [pc, #116]	@ (80139f4 <USB_SetTurnaroundTime+0x13c>)
 8013980:	4293      	cmp	r3, r2
 8013982:	d906      	bls.n	8013992 <USB_SetTurnaroundTime+0xda>
 8013984:	68bb      	ldr	r3, [r7, #8]
 8013986:	4a1c      	ldr	r2, [pc, #112]	@ (80139f8 <USB_SetTurnaroundTime+0x140>)
 8013988:	4293      	cmp	r3, r2
 801398a:	d202      	bcs.n	8013992 <USB_SetTurnaroundTime+0xda>
 801398c:	2307      	movs	r3, #7
 801398e:	617b      	str	r3, [r7, #20]
 8013990:	e00a      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 8013992:	2306      	movs	r3, #6
 8013994:	617b      	str	r3, [r7, #20]
 8013996:	e007      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 8013998:	79fb      	ldrb	r3, [r7, #7]
 801399a:	2b00      	cmp	r3, #0
 801399c:	d102      	bne.n	80139a4 <USB_SetTurnaroundTime+0xec>
 801399e:	2309      	movs	r3, #9
 80139a0:	617b      	str	r3, [r7, #20]
 80139a2:	e001      	b.n	80139a8 <USB_SetTurnaroundTime+0xf0>
 80139a4:	2309      	movs	r3, #9
 80139a6:	617b      	str	r3, [r7, #20]
 80139a8:	68fb      	ldr	r3, [r7, #12]
 80139aa:	68db      	ldr	r3, [r3, #12]
 80139ac:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 80139b0:	68fb      	ldr	r3, [r7, #12]
 80139b2:	60da      	str	r2, [r3, #12]
 80139b4:	68fb      	ldr	r3, [r7, #12]
 80139b6:	68da      	ldr	r2, [r3, #12]
 80139b8:	697b      	ldr	r3, [r7, #20]
 80139ba:	029b      	lsls	r3, r3, #10
 80139bc:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 80139c0:	431a      	orrs	r2, r3
 80139c2:	68fb      	ldr	r3, [r7, #12]
 80139c4:	60da      	str	r2, [r3, #12]
 80139c6:	2300      	movs	r3, #0
 80139c8:	4618      	mov	r0, r3
 80139ca:	371c      	adds	r7, #28
 80139cc:	46bd      	mov	sp, r7
 80139ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80139d2:	4770      	bx	lr
 80139d4:	00d8acbf 	.word	0x00d8acbf
 80139d8:	00e4e1c0 	.word	0x00e4e1c0
 80139dc:	00f42400 	.word	0x00f42400
 80139e0:	01067380 	.word	0x01067380
 80139e4:	011a499f 	.word	0x011a499f
 80139e8:	01312cff 	.word	0x01312cff
 80139ec:	014ca43f 	.word	0x014ca43f
 80139f0:	016e3600 	.word	0x016e3600
 80139f4:	01a6ab1f 	.word	0x01a6ab1f
 80139f8:	01e84800 	.word	0x01e84800

080139fc <USB_EnableGlobalInt>:
 80139fc:	b480      	push	{r7}
 80139fe:	b083      	sub	sp, #12
 8013a00:	af00      	add	r7, sp, #0
 8013a02:	6078      	str	r0, [r7, #4]
 8013a04:	687b      	ldr	r3, [r7, #4]
 8013a06:	689b      	ldr	r3, [r3, #8]
 8013a08:	f043 0201 	orr.w	r2, r3, #1
 8013a0c:	687b      	ldr	r3, [r7, #4]
 8013a0e:	609a      	str	r2, [r3, #8]
 8013a10:	2300      	movs	r3, #0
 8013a12:	4618      	mov	r0, r3
 8013a14:	370c      	adds	r7, #12
 8013a16:	46bd      	mov	sp, r7
 8013a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013a1c:	4770      	bx	lr

08013a1e <USB_DisableGlobalInt>:
 8013a1e:	b480      	push	{r7}
 8013a20:	b083      	sub	sp, #12
 8013a22:	af00      	add	r7, sp, #0
 8013a24:	6078      	str	r0, [r7, #4]
 8013a26:	687b      	ldr	r3, [r7, #4]
 8013a28:	689b      	ldr	r3, [r3, #8]
 8013a2a:	f023 0201 	bic.w	r2, r3, #1
 8013a2e:	687b      	ldr	r3, [r7, #4]
 8013a30:	609a      	str	r2, [r3, #8]
 8013a32:	2300      	movs	r3, #0
 8013a34:	4618      	mov	r0, r3
 8013a36:	370c      	adds	r7, #12
 8013a38:	46bd      	mov	sp, r7
 8013a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013a3e:	4770      	bx	lr

08013a40 <USB_SetCurrentMode>:
 8013a40:	b580      	push	{r7, lr}
 8013a42:	b084      	sub	sp, #16
 8013a44:	af00      	add	r7, sp, #0
 8013a46:	6078      	str	r0, [r7, #4]
 8013a48:	460b      	mov	r3, r1
 8013a4a:	70fb      	strb	r3, [r7, #3]
 8013a4c:	2300      	movs	r3, #0
 8013a4e:	60fb      	str	r3, [r7, #12]
 8013a50:	687b      	ldr	r3, [r7, #4]
 8013a52:	68db      	ldr	r3, [r3, #12]
 8013a54:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 8013a58:	687b      	ldr	r3, [r7, #4]
 8013a5a:	60da      	str	r2, [r3, #12]
 8013a5c:	78fb      	ldrb	r3, [r7, #3]
 8013a5e:	2b01      	cmp	r3, #1
 8013a60:	d115      	bne.n	8013a8e <USB_SetCurrentMode+0x4e>
 8013a62:	687b      	ldr	r3, [r7, #4]
 8013a64:	68db      	ldr	r3, [r3, #12]
 8013a66:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 8013a6a:	687b      	ldr	r3, [r7, #4]
 8013a6c:	60da      	str	r2, [r3, #12]
 8013a6e:	2001      	movs	r0, #1
 8013a70:	f7f7 fafe 	bl	800b070 <HAL_Delay>
 8013a74:	68fb      	ldr	r3, [r7, #12]
 8013a76:	3301      	adds	r3, #1
 8013a78:	60fb      	str	r3, [r7, #12]
 8013a7a:	6878      	ldr	r0, [r7, #4]
 8013a7c:	f001 fa45 	bl	8014f0a <USB_GetMode>
 8013a80:	4603      	mov	r3, r0
 8013a82:	2b01      	cmp	r3, #1
 8013a84:	d01e      	beq.n	8013ac4 <USB_SetCurrentMode+0x84>
 8013a86:	68fb      	ldr	r3, [r7, #12]
 8013a88:	2b31      	cmp	r3, #49	@ 0x31
 8013a8a:	d9f0      	bls.n	8013a6e <USB_SetCurrentMode+0x2e>
 8013a8c:	e01a      	b.n	8013ac4 <USB_SetCurrentMode+0x84>
 8013a8e:	78fb      	ldrb	r3, [r7, #3]
 8013a90:	2b00      	cmp	r3, #0
 8013a92:	d115      	bne.n	8013ac0 <USB_SetCurrentMode+0x80>
 8013a94:	687b      	ldr	r3, [r7, #4]
 8013a96:	68db      	ldr	r3, [r3, #12]
 8013a98:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 8013a9c:	687b      	ldr	r3, [r7, #4]
 8013a9e:	60da      	str	r2, [r3, #12]
 8013aa0:	2001      	movs	r0, #1
 8013aa2:	f7f7 fae5 	bl	800b070 <HAL_Delay>
 8013aa6:	68fb      	ldr	r3, [r7, #12]
 8013aa8:	3301      	adds	r3, #1
 8013aaa:	60fb      	str	r3, [r7, #12]
 8013aac:	6878      	ldr	r0, [r7, #4]
 8013aae:	f001 fa2c 	bl	8014f0a <USB_GetMode>
 8013ab2:	4603      	mov	r3, r0
 8013ab4:	2b00      	cmp	r3, #0
 8013ab6:	d005      	beq.n	8013ac4 <USB_SetCurrentMode+0x84>
 8013ab8:	68fb      	ldr	r3, [r7, #12]
 8013aba:	2b31      	cmp	r3, #49	@ 0x31
 8013abc:	d9f0      	bls.n	8013aa0 <USB_SetCurrentMode+0x60>
 8013abe:	e001      	b.n	8013ac4 <USB_SetCurrentMode+0x84>
 8013ac0:	2301      	movs	r3, #1
 8013ac2:	e005      	b.n	8013ad0 <USB_SetCurrentMode+0x90>
 8013ac4:	68fb      	ldr	r3, [r7, #12]
 8013ac6:	2b32      	cmp	r3, #50	@ 0x32
 8013ac8:	d101      	bne.n	8013ace <USB_SetCurrentMode+0x8e>
 8013aca:	2301      	movs	r3, #1
 8013acc:	e000      	b.n	8013ad0 <USB_SetCurrentMode+0x90>
 8013ace:	2300      	movs	r3, #0
 8013ad0:	4618      	mov	r0, r3
 8013ad2:	3710      	adds	r7, #16
 8013ad4:	46bd      	mov	sp, r7
 8013ad6:	bd80      	pop	{r7, pc}

08013ad8 <USB_DevInit>:
 8013ad8:	b084      	sub	sp, #16
 8013ada:	b580      	push	{r7, lr}
 8013adc:	b086      	sub	sp, #24
 8013ade:	af00      	add	r7, sp, #0
 8013ae0:	6078      	str	r0, [r7, #4]
 8013ae2:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8013ae6:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8013aea:	2300      	movs	r3, #0
 8013aec:	75fb      	strb	r3, [r7, #23]
 8013aee:	687b      	ldr	r3, [r7, #4]
 8013af0:	60fb      	str	r3, [r7, #12]
 8013af2:	2300      	movs	r3, #0
 8013af4:	613b      	str	r3, [r7, #16]
 8013af6:	e009      	b.n	8013b0c <USB_DevInit+0x34>
 8013af8:	687a      	ldr	r2, [r7, #4]
 8013afa:	693b      	ldr	r3, [r7, #16]
 8013afc:	3340      	adds	r3, #64	@ 0x40
 8013afe:	009b      	lsls	r3, r3, #2
 8013b00:	4413      	add	r3, r2
 8013b02:	2200      	movs	r2, #0
 8013b04:	605a      	str	r2, [r3, #4]
 8013b06:	693b      	ldr	r3, [r7, #16]
 8013b08:	3301      	adds	r3, #1
 8013b0a:	613b      	str	r3, [r7, #16]
 8013b0c:	693b      	ldr	r3, [r7, #16]
 8013b0e:	2b0e      	cmp	r3, #14
 8013b10:	d9f2      	bls.n	8013af8 <USB_DevInit+0x20>
 8013b12:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013b14:	2b00      	cmp	r3, #0
 8013b16:	d11c      	bne.n	8013b52 <USB_DevInit+0x7a>
 8013b18:	68fb      	ldr	r3, [r7, #12]
 8013b1a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b1e:	685b      	ldr	r3, [r3, #4]
 8013b20:	68fa      	ldr	r2, [r7, #12]
 8013b22:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013b26:	f043 0302 	orr.w	r3, r3, #2
 8013b2a:	6053      	str	r3, [r2, #4]
 8013b2c:	687b      	ldr	r3, [r7, #4]
 8013b2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b30:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8013b34:	687b      	ldr	r3, [r7, #4]
 8013b36:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b38:	687b      	ldr	r3, [r7, #4]
 8013b3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b3c:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 8013b40:	687b      	ldr	r3, [r7, #4]
 8013b42:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b44:	687b      	ldr	r3, [r7, #4]
 8013b46:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b48:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 8013b4c:	687b      	ldr	r3, [r7, #4]
 8013b4e:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b50:	e00b      	b.n	8013b6a <USB_DevInit+0x92>
 8013b52:	687b      	ldr	r3, [r7, #4]
 8013b54:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b56:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 8013b5a:	687b      	ldr	r3, [r7, #4]
 8013b5c:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b5e:	687b      	ldr	r3, [r7, #4]
 8013b60:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013b62:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8013b66:	687b      	ldr	r3, [r7, #4]
 8013b68:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b6a:	68fb      	ldr	r3, [r7, #12]
 8013b6c:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8013b70:	461a      	mov	r2, r3
 8013b72:	2300      	movs	r3, #0
 8013b74:	6013      	str	r3, [r2, #0]
 8013b76:	68fb      	ldr	r3, [r7, #12]
 8013b78:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b7c:	4619      	mov	r1, r3
 8013b7e:	68fb      	ldr	r3, [r7, #12]
 8013b80:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013b84:	461a      	mov	r2, r3
 8013b86:	680b      	ldr	r3, [r1, #0]
 8013b88:	6013      	str	r3, [r2, #0]
 8013b8a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013b8c:	2b01      	cmp	r3, #1
 8013b8e:	d10c      	bne.n	8013baa <USB_DevInit+0xd2>
 8013b90:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013b92:	2b00      	cmp	r3, #0
 8013b94:	d104      	bne.n	8013ba0 <USB_DevInit+0xc8>
 8013b96:	2100      	movs	r1, #0
 8013b98:	6878      	ldr	r0, [r7, #4]
 8013b9a:	f000 f965 	bl	8013e68 <USB_SetDevSpeed>
 8013b9e:	e008      	b.n	8013bb2 <USB_DevInit+0xda>
 8013ba0:	2101      	movs	r1, #1
 8013ba2:	6878      	ldr	r0, [r7, #4]
 8013ba4:	f000 f960 	bl	8013e68 <USB_SetDevSpeed>
 8013ba8:	e003      	b.n	8013bb2 <USB_DevInit+0xda>
 8013baa:	2103      	movs	r1, #3
 8013bac:	6878      	ldr	r0, [r7, #4]
 8013bae:	f000 f95b 	bl	8013e68 <USB_SetDevSpeed>
 8013bb2:	2110      	movs	r1, #16
 8013bb4:	6878      	ldr	r0, [r7, #4]
 8013bb6:	f000 f8f3 	bl	8013da0 <USB_FlushTxFifo>
 8013bba:	4603      	mov	r3, r0
 8013bbc:	2b00      	cmp	r3, #0
 8013bbe:	d001      	beq.n	8013bc4 <USB_DevInit+0xec>
 8013bc0:	2301      	movs	r3, #1
 8013bc2:	75fb      	strb	r3, [r7, #23]
 8013bc4:	6878      	ldr	r0, [r7, #4]
 8013bc6:	f000 f91f 	bl	8013e08 <USB_FlushRxFifo>
 8013bca:	4603      	mov	r3, r0
 8013bcc:	2b00      	cmp	r3, #0
 8013bce:	d001      	beq.n	8013bd4 <USB_DevInit+0xfc>
 8013bd0:	2301      	movs	r3, #1
 8013bd2:	75fb      	strb	r3, [r7, #23]
 8013bd4:	68fb      	ldr	r3, [r7, #12]
 8013bd6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013bda:	461a      	mov	r2, r3
 8013bdc:	2300      	movs	r3, #0
 8013bde:	6113      	str	r3, [r2, #16]
 8013be0:	68fb      	ldr	r3, [r7, #12]
 8013be2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013be6:	461a      	mov	r2, r3
 8013be8:	2300      	movs	r3, #0
 8013bea:	6153      	str	r3, [r2, #20]
 8013bec:	68fb      	ldr	r3, [r7, #12]
 8013bee:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013bf2:	461a      	mov	r2, r3
 8013bf4:	2300      	movs	r3, #0
 8013bf6:	61d3      	str	r3, [r2, #28]
 8013bf8:	2300      	movs	r3, #0
 8013bfa:	613b      	str	r3, [r7, #16]
 8013bfc:	e043      	b.n	8013c86 <USB_DevInit+0x1ae>
 8013bfe:	693b      	ldr	r3, [r7, #16]
 8013c00:	015a      	lsls	r2, r3, #5
 8013c02:	68fb      	ldr	r3, [r7, #12]
 8013c04:	4413      	add	r3, r2
 8013c06:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c0a:	681b      	ldr	r3, [r3, #0]
 8013c0c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013c10:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013c14:	d118      	bne.n	8013c48 <USB_DevInit+0x170>
 8013c16:	693b      	ldr	r3, [r7, #16]
 8013c18:	2b00      	cmp	r3, #0
 8013c1a:	d10a      	bne.n	8013c32 <USB_DevInit+0x15a>
 8013c1c:	693b      	ldr	r3, [r7, #16]
 8013c1e:	015a      	lsls	r2, r3, #5
 8013c20:	68fb      	ldr	r3, [r7, #12]
 8013c22:	4413      	add	r3, r2
 8013c24:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c28:	461a      	mov	r2, r3
 8013c2a:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8013c2e:	6013      	str	r3, [r2, #0]
 8013c30:	e013      	b.n	8013c5a <USB_DevInit+0x182>
 8013c32:	693b      	ldr	r3, [r7, #16]
 8013c34:	015a      	lsls	r2, r3, #5
 8013c36:	68fb      	ldr	r3, [r7, #12]
 8013c38:	4413      	add	r3, r2
 8013c3a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c3e:	461a      	mov	r2, r3
 8013c40:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8013c44:	6013      	str	r3, [r2, #0]
 8013c46:	e008      	b.n	8013c5a <USB_DevInit+0x182>
 8013c48:	693b      	ldr	r3, [r7, #16]
 8013c4a:	015a      	lsls	r2, r3, #5
 8013c4c:	68fb      	ldr	r3, [r7, #12]
 8013c4e:	4413      	add	r3, r2
 8013c50:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c54:	461a      	mov	r2, r3
 8013c56:	2300      	movs	r3, #0
 8013c58:	6013      	str	r3, [r2, #0]
 8013c5a:	693b      	ldr	r3, [r7, #16]
 8013c5c:	015a      	lsls	r2, r3, #5
 8013c5e:	68fb      	ldr	r3, [r7, #12]
 8013c60:	4413      	add	r3, r2
 8013c62:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c66:	461a      	mov	r2, r3
 8013c68:	2300      	movs	r3, #0
 8013c6a:	6113      	str	r3, [r2, #16]
 8013c6c:	693b      	ldr	r3, [r7, #16]
 8013c6e:	015a      	lsls	r2, r3, #5
 8013c70:	68fb      	ldr	r3, [r7, #12]
 8013c72:	4413      	add	r3, r2
 8013c74:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013c78:	461a      	mov	r2, r3
 8013c7a:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8013c7e:	6093      	str	r3, [r2, #8]
 8013c80:	693b      	ldr	r3, [r7, #16]
 8013c82:	3301      	adds	r3, #1
 8013c84:	613b      	str	r3, [r7, #16]
 8013c86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013c88:	693a      	ldr	r2, [r7, #16]
 8013c8a:	429a      	cmp	r2, r3
 8013c8c:	d3b7      	bcc.n	8013bfe <USB_DevInit+0x126>
 8013c8e:	2300      	movs	r3, #0
 8013c90:	613b      	str	r3, [r7, #16]
 8013c92:	e043      	b.n	8013d1c <USB_DevInit+0x244>
 8013c94:	693b      	ldr	r3, [r7, #16]
 8013c96:	015a      	lsls	r2, r3, #5
 8013c98:	68fb      	ldr	r3, [r7, #12]
 8013c9a:	4413      	add	r3, r2
 8013c9c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013ca0:	681b      	ldr	r3, [r3, #0]
 8013ca2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8013ca6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8013caa:	d118      	bne.n	8013cde <USB_DevInit+0x206>
 8013cac:	693b      	ldr	r3, [r7, #16]
 8013cae:	2b00      	cmp	r3, #0
 8013cb0:	d10a      	bne.n	8013cc8 <USB_DevInit+0x1f0>
 8013cb2:	693b      	ldr	r3, [r7, #16]
 8013cb4:	015a      	lsls	r2, r3, #5
 8013cb6:	68fb      	ldr	r3, [r7, #12]
 8013cb8:	4413      	add	r3, r2
 8013cba:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013cbe:	461a      	mov	r2, r3
 8013cc0:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8013cc4:	6013      	str	r3, [r2, #0]
 8013cc6:	e013      	b.n	8013cf0 <USB_DevInit+0x218>
 8013cc8:	693b      	ldr	r3, [r7, #16]
 8013cca:	015a      	lsls	r2, r3, #5
 8013ccc:	68fb      	ldr	r3, [r7, #12]
 8013cce:	4413      	add	r3, r2
 8013cd0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013cd4:	461a      	mov	r2, r3
 8013cd6:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8013cda:	6013      	str	r3, [r2, #0]
 8013cdc:	e008      	b.n	8013cf0 <USB_DevInit+0x218>
 8013cde:	693b      	ldr	r3, [r7, #16]
 8013ce0:	015a      	lsls	r2, r3, #5
 8013ce2:	68fb      	ldr	r3, [r7, #12]
 8013ce4:	4413      	add	r3, r2
 8013ce6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013cea:	461a      	mov	r2, r3
 8013cec:	2300      	movs	r3, #0
 8013cee:	6013      	str	r3, [r2, #0]
 8013cf0:	693b      	ldr	r3, [r7, #16]
 8013cf2:	015a      	lsls	r2, r3, #5
 8013cf4:	68fb      	ldr	r3, [r7, #12]
 8013cf6:	4413      	add	r3, r2
 8013cf8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013cfc:	461a      	mov	r2, r3
 8013cfe:	2300      	movs	r3, #0
 8013d00:	6113      	str	r3, [r2, #16]
 8013d02:	693b      	ldr	r3, [r7, #16]
 8013d04:	015a      	lsls	r2, r3, #5
 8013d06:	68fb      	ldr	r3, [r7, #12]
 8013d08:	4413      	add	r3, r2
 8013d0a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013d0e:	461a      	mov	r2, r3
 8013d10:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8013d14:	6093      	str	r3, [r2, #8]
 8013d16:	693b      	ldr	r3, [r7, #16]
 8013d18:	3301      	adds	r3, #1
 8013d1a:	613b      	str	r3, [r7, #16]
 8013d1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013d1e:	693a      	ldr	r2, [r7, #16]
 8013d20:	429a      	cmp	r2, r3
 8013d22:	d3b7      	bcc.n	8013c94 <USB_DevInit+0x1bc>
 8013d24:	68fb      	ldr	r3, [r7, #12]
 8013d26:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013d2a:	691b      	ldr	r3, [r3, #16]
 8013d2c:	68fa      	ldr	r2, [r7, #12]
 8013d2e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8013d32:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8013d36:	6113      	str	r3, [r2, #16]
 8013d38:	687b      	ldr	r3, [r7, #4]
 8013d3a:	2200      	movs	r2, #0
 8013d3c:	619a      	str	r2, [r3, #24]
 8013d3e:	687b      	ldr	r3, [r7, #4]
 8013d40:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 8013d44:	615a      	str	r2, [r3, #20]
 8013d46:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8013d48:	2b00      	cmp	r3, #0
 8013d4a:	d105      	bne.n	8013d58 <USB_DevInit+0x280>
 8013d4c:	687b      	ldr	r3, [r7, #4]
 8013d4e:	699b      	ldr	r3, [r3, #24]
 8013d50:	f043 0210 	orr.w	r2, r3, #16
 8013d54:	687b      	ldr	r3, [r7, #4]
 8013d56:	619a      	str	r2, [r3, #24]
 8013d58:	687b      	ldr	r3, [r7, #4]
 8013d5a:	699a      	ldr	r2, [r3, #24]
 8013d5c:	4b0f      	ldr	r3, [pc, #60]	@ (8013d9c <USB_DevInit+0x2c4>)
 8013d5e:	4313      	orrs	r3, r2
 8013d60:	687a      	ldr	r2, [r7, #4]
 8013d62:	6193      	str	r3, [r2, #24]
 8013d64:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8013d66:	2b00      	cmp	r3, #0
 8013d68:	d005      	beq.n	8013d76 <USB_DevInit+0x29e>
 8013d6a:	687b      	ldr	r3, [r7, #4]
 8013d6c:	699b      	ldr	r3, [r3, #24]
 8013d6e:	f043 0208 	orr.w	r2, r3, #8
 8013d72:	687b      	ldr	r3, [r7, #4]
 8013d74:	619a      	str	r2, [r3, #24]
 8013d76:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8013d78:	2b01      	cmp	r3, #1
 8013d7a:	d107      	bne.n	8013d8c <USB_DevInit+0x2b4>
 8013d7c:	687b      	ldr	r3, [r7, #4]
 8013d7e:	699b      	ldr	r3, [r3, #24]
 8013d80:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8013d84:	f043 0304 	orr.w	r3, r3, #4
 8013d88:	687a      	ldr	r2, [r7, #4]
 8013d8a:	6193      	str	r3, [r2, #24]
 8013d8c:	7dfb      	ldrb	r3, [r7, #23]
 8013d8e:	4618      	mov	r0, r3
 8013d90:	3718      	adds	r7, #24
 8013d92:	46bd      	mov	sp, r7
 8013d94:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8013d98:	b004      	add	sp, #16
 8013d9a:	4770      	bx	lr
 8013d9c:	803c3800 	.word	0x803c3800

08013da0 <USB_FlushTxFifo>:
 8013da0:	b480      	push	{r7}
 8013da2:	b085      	sub	sp, #20
 8013da4:	af00      	add	r7, sp, #0
 8013da6:	6078      	str	r0, [r7, #4]
 8013da8:	6039      	str	r1, [r7, #0]
 8013daa:	2300      	movs	r3, #0
 8013dac:	60fb      	str	r3, [r7, #12]
 8013dae:	68fb      	ldr	r3, [r7, #12]
 8013db0:	3301      	adds	r3, #1
 8013db2:	60fb      	str	r3, [r7, #12]
 8013db4:	68fb      	ldr	r3, [r7, #12]
 8013db6:	4a13      	ldr	r2, [pc, #76]	@ (8013e04 <USB_FlushTxFifo+0x64>)
 8013db8:	4293      	cmp	r3, r2
 8013dba:	d901      	bls.n	8013dc0 <USB_FlushTxFifo+0x20>
 8013dbc:	2303      	movs	r3, #3
 8013dbe:	e01b      	b.n	8013df8 <USB_FlushTxFifo+0x58>
 8013dc0:	687b      	ldr	r3, [r7, #4]
 8013dc2:	691b      	ldr	r3, [r3, #16]
 8013dc4:	2b00      	cmp	r3, #0
 8013dc6:	daf2      	bge.n	8013dae <USB_FlushTxFifo+0xe>
 8013dc8:	2300      	movs	r3, #0
 8013dca:	60fb      	str	r3, [r7, #12]
 8013dcc:	683b      	ldr	r3, [r7, #0]
 8013dce:	019b      	lsls	r3, r3, #6
 8013dd0:	f043 0220 	orr.w	r2, r3, #32
 8013dd4:	687b      	ldr	r3, [r7, #4]
 8013dd6:	611a      	str	r2, [r3, #16]
 8013dd8:	68fb      	ldr	r3, [r7, #12]
 8013dda:	3301      	adds	r3, #1
 8013ddc:	60fb      	str	r3, [r7, #12]
 8013dde:	68fb      	ldr	r3, [r7, #12]
 8013de0:	4a08      	ldr	r2, [pc, #32]	@ (8013e04 <USB_FlushTxFifo+0x64>)
 8013de2:	4293      	cmp	r3, r2
 8013de4:	d901      	bls.n	8013dea <USB_FlushTxFifo+0x4a>
 8013de6:	2303      	movs	r3, #3
 8013de8:	e006      	b.n	8013df8 <USB_FlushTxFifo+0x58>
 8013dea:	687b      	ldr	r3, [r7, #4]
 8013dec:	691b      	ldr	r3, [r3, #16]
 8013dee:	f003 0320 	and.w	r3, r3, #32
 8013df2:	2b20      	cmp	r3, #32
 8013df4:	d0f0      	beq.n	8013dd8 <USB_FlushTxFifo+0x38>
 8013df6:	2300      	movs	r3, #0
 8013df8:	4618      	mov	r0, r3
 8013dfa:	3714      	adds	r7, #20
 8013dfc:	46bd      	mov	sp, r7
 8013dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e02:	4770      	bx	lr
 8013e04:	00030d40 	.word	0x00030d40

08013e08 <USB_FlushRxFifo>:
 8013e08:	b480      	push	{r7}
 8013e0a:	b085      	sub	sp, #20
 8013e0c:	af00      	add	r7, sp, #0
 8013e0e:	6078      	str	r0, [r7, #4]
 8013e10:	2300      	movs	r3, #0
 8013e12:	60fb      	str	r3, [r7, #12]
 8013e14:	68fb      	ldr	r3, [r7, #12]
 8013e16:	3301      	adds	r3, #1
 8013e18:	60fb      	str	r3, [r7, #12]
 8013e1a:	68fb      	ldr	r3, [r7, #12]
 8013e1c:	4a11      	ldr	r2, [pc, #68]	@ (8013e64 <USB_FlushRxFifo+0x5c>)
 8013e1e:	4293      	cmp	r3, r2
 8013e20:	d901      	bls.n	8013e26 <USB_FlushRxFifo+0x1e>
 8013e22:	2303      	movs	r3, #3
 8013e24:	e018      	b.n	8013e58 <USB_FlushRxFifo+0x50>
 8013e26:	687b      	ldr	r3, [r7, #4]
 8013e28:	691b      	ldr	r3, [r3, #16]
 8013e2a:	2b00      	cmp	r3, #0
 8013e2c:	daf2      	bge.n	8013e14 <USB_FlushRxFifo+0xc>
 8013e2e:	2300      	movs	r3, #0
 8013e30:	60fb      	str	r3, [r7, #12]
 8013e32:	687b      	ldr	r3, [r7, #4]
 8013e34:	2210      	movs	r2, #16
 8013e36:	611a      	str	r2, [r3, #16]
 8013e38:	68fb      	ldr	r3, [r7, #12]
 8013e3a:	3301      	adds	r3, #1
 8013e3c:	60fb      	str	r3, [r7, #12]
 8013e3e:	68fb      	ldr	r3, [r7, #12]
 8013e40:	4a08      	ldr	r2, [pc, #32]	@ (8013e64 <USB_FlushRxFifo+0x5c>)
 8013e42:	4293      	cmp	r3, r2
 8013e44:	d901      	bls.n	8013e4a <USB_FlushRxFifo+0x42>
 8013e46:	2303      	movs	r3, #3
 8013e48:	e006      	b.n	8013e58 <USB_FlushRxFifo+0x50>
 8013e4a:	687b      	ldr	r3, [r7, #4]
 8013e4c:	691b      	ldr	r3, [r3, #16]
 8013e4e:	f003 0310 	and.w	r3, r3, #16
 8013e52:	2b10      	cmp	r3, #16
 8013e54:	d0f0      	beq.n	8013e38 <USB_FlushRxFifo+0x30>
 8013e56:	2300      	movs	r3, #0
 8013e58:	4618      	mov	r0, r3
 8013e5a:	3714      	adds	r7, #20
 8013e5c:	46bd      	mov	sp, r7
 8013e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e62:	4770      	bx	lr
 8013e64:	00030d40 	.word	0x00030d40

08013e68 <USB_SetDevSpeed>:
 8013e68:	b480      	push	{r7}
 8013e6a:	b085      	sub	sp, #20
 8013e6c:	af00      	add	r7, sp, #0
 8013e6e:	6078      	str	r0, [r7, #4]
 8013e70:	460b      	mov	r3, r1
 8013e72:	70fb      	strb	r3, [r7, #3]
 8013e74:	687b      	ldr	r3, [r7, #4]
 8013e76:	60fb      	str	r3, [r7, #12]
 8013e78:	68fb      	ldr	r3, [r7, #12]
 8013e7a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013e7e:	681a      	ldr	r2, [r3, #0]
 8013e80:	78fb      	ldrb	r3, [r7, #3]
 8013e82:	68f9      	ldr	r1, [r7, #12]
 8013e84:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013e88:	4313      	orrs	r3, r2
 8013e8a:	600b      	str	r3, [r1, #0]
 8013e8c:	2300      	movs	r3, #0
 8013e8e:	4618      	mov	r0, r3
 8013e90:	3714      	adds	r7, #20
 8013e92:	46bd      	mov	sp, r7
 8013e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e98:	4770      	bx	lr

08013e9a <USB_GetDevSpeed>:
 8013e9a:	b480      	push	{r7}
 8013e9c:	b087      	sub	sp, #28
 8013e9e:	af00      	add	r7, sp, #0
 8013ea0:	6078      	str	r0, [r7, #4]
 8013ea2:	687b      	ldr	r3, [r7, #4]
 8013ea4:	613b      	str	r3, [r7, #16]
 8013ea6:	693b      	ldr	r3, [r7, #16]
 8013ea8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013eac:	689b      	ldr	r3, [r3, #8]
 8013eae:	f003 0306 	and.w	r3, r3, #6
 8013eb2:	60fb      	str	r3, [r7, #12]
 8013eb4:	68fb      	ldr	r3, [r7, #12]
 8013eb6:	2b00      	cmp	r3, #0
 8013eb8:	d102      	bne.n	8013ec0 <USB_GetDevSpeed+0x26>
 8013eba:	2300      	movs	r3, #0
 8013ebc:	75fb      	strb	r3, [r7, #23]
 8013ebe:	e00a      	b.n	8013ed6 <USB_GetDevSpeed+0x3c>
 8013ec0:	68fb      	ldr	r3, [r7, #12]
 8013ec2:	2b02      	cmp	r3, #2
 8013ec4:	d002      	beq.n	8013ecc <USB_GetDevSpeed+0x32>
 8013ec6:	68fb      	ldr	r3, [r7, #12]
 8013ec8:	2b06      	cmp	r3, #6
 8013eca:	d102      	bne.n	8013ed2 <USB_GetDevSpeed+0x38>
 8013ecc:	2302      	movs	r3, #2
 8013ece:	75fb      	strb	r3, [r7, #23]
 8013ed0:	e001      	b.n	8013ed6 <USB_GetDevSpeed+0x3c>
 8013ed2:	230f      	movs	r3, #15
 8013ed4:	75fb      	strb	r3, [r7, #23]
 8013ed6:	7dfb      	ldrb	r3, [r7, #23]
 8013ed8:	4618      	mov	r0, r3
 8013eda:	371c      	adds	r7, #28
 8013edc:	46bd      	mov	sp, r7
 8013ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013ee2:	4770      	bx	lr

08013ee4 <USB_ActivateEndpoint>:
 8013ee4:	b480      	push	{r7}
 8013ee6:	b085      	sub	sp, #20
 8013ee8:	af00      	add	r7, sp, #0
 8013eea:	6078      	str	r0, [r7, #4]
 8013eec:	6039      	str	r1, [r7, #0]
 8013eee:	687b      	ldr	r3, [r7, #4]
 8013ef0:	60fb      	str	r3, [r7, #12]
 8013ef2:	683b      	ldr	r3, [r7, #0]
 8013ef4:	781b      	ldrb	r3, [r3, #0]
 8013ef6:	60bb      	str	r3, [r7, #8]
 8013ef8:	683b      	ldr	r3, [r7, #0]
 8013efa:	785b      	ldrb	r3, [r3, #1]
 8013efc:	2b01      	cmp	r3, #1
 8013efe:	d13a      	bne.n	8013f76 <USB_ActivateEndpoint+0x92>
 8013f00:	68fb      	ldr	r3, [r7, #12]
 8013f02:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013f06:	69da      	ldr	r2, [r3, #28]
 8013f08:	683b      	ldr	r3, [r7, #0]
 8013f0a:	781b      	ldrb	r3, [r3, #0]
 8013f0c:	f003 030f 	and.w	r3, r3, #15
 8013f10:	2101      	movs	r1, #1
 8013f12:	fa01 f303 	lsl.w	r3, r1, r3
 8013f16:	b29b      	uxth	r3, r3
 8013f18:	68f9      	ldr	r1, [r7, #12]
 8013f1a:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013f1e:	4313      	orrs	r3, r2
 8013f20:	61cb      	str	r3, [r1, #28]
 8013f22:	68bb      	ldr	r3, [r7, #8]
 8013f24:	015a      	lsls	r2, r3, #5
 8013f26:	68fb      	ldr	r3, [r7, #12]
 8013f28:	4413      	add	r3, r2
 8013f2a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013f2e:	681b      	ldr	r3, [r3, #0]
 8013f30:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8013f34:	2b00      	cmp	r3, #0
 8013f36:	d155      	bne.n	8013fe4 <USB_ActivateEndpoint+0x100>
 8013f38:	68bb      	ldr	r3, [r7, #8]
 8013f3a:	015a      	lsls	r2, r3, #5
 8013f3c:	68fb      	ldr	r3, [r7, #12]
 8013f3e:	4413      	add	r3, r2
 8013f40:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8013f44:	681a      	ldr	r2, [r3, #0]
 8013f46:	683b      	ldr	r3, [r7, #0]
 8013f48:	68db      	ldr	r3, [r3, #12]
 8013f4a:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8013f4e:	683b      	ldr	r3, [r7, #0]
 8013f50:	791b      	ldrb	r3, [r3, #4]
 8013f52:	049b      	lsls	r3, r3, #18
 8013f54:	4319      	orrs	r1, r3
 8013f56:	68bb      	ldr	r3, [r7, #8]
 8013f58:	059b      	lsls	r3, r3, #22
 8013f5a:	430b      	orrs	r3, r1
 8013f5c:	4313      	orrs	r3, r2
 8013f5e:	68ba      	ldr	r2, [r7, #8]
 8013f60:	0151      	lsls	r1, r2, #5
 8013f62:	68fa      	ldr	r2, [r7, #12]
 8013f64:	440a      	add	r2, r1
 8013f66:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8013f6a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8013f6e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8013f72:	6013      	str	r3, [r2, #0]
 8013f74:	e036      	b.n	8013fe4 <USB_ActivateEndpoint+0x100>
 8013f76:	68fb      	ldr	r3, [r7, #12]
 8013f78:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8013f7c:	69da      	ldr	r2, [r3, #28]
 8013f7e:	683b      	ldr	r3, [r7, #0]
 8013f80:	781b      	ldrb	r3, [r3, #0]
 8013f82:	f003 030f 	and.w	r3, r3, #15
 8013f86:	2101      	movs	r1, #1
 8013f88:	fa01 f303 	lsl.w	r3, r1, r3
 8013f8c:	041b      	lsls	r3, r3, #16
 8013f8e:	68f9      	ldr	r1, [r7, #12]
 8013f90:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8013f94:	4313      	orrs	r3, r2
 8013f96:	61cb      	str	r3, [r1, #28]
 8013f98:	68bb      	ldr	r3, [r7, #8]
 8013f9a:	015a      	lsls	r2, r3, #5
 8013f9c:	68fb      	ldr	r3, [r7, #12]
 8013f9e:	4413      	add	r3, r2
 8013fa0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013fa4:	681b      	ldr	r3, [r3, #0]
 8013fa6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8013faa:	2b00      	cmp	r3, #0
 8013fac:	d11a      	bne.n	8013fe4 <USB_ActivateEndpoint+0x100>
 8013fae:	68bb      	ldr	r3, [r7, #8]
 8013fb0:	015a      	lsls	r2, r3, #5
 8013fb2:	68fb      	ldr	r3, [r7, #12]
 8013fb4:	4413      	add	r3, r2
 8013fb6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8013fba:	681a      	ldr	r2, [r3, #0]
 8013fbc:	683b      	ldr	r3, [r7, #0]
 8013fbe:	68db      	ldr	r3, [r3, #12]
 8013fc0:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8013fc4:	683b      	ldr	r3, [r7, #0]
 8013fc6:	791b      	ldrb	r3, [r3, #4]
 8013fc8:	049b      	lsls	r3, r3, #18
 8013fca:	430b      	orrs	r3, r1
 8013fcc:	4313      	orrs	r3, r2
 8013fce:	68ba      	ldr	r2, [r7, #8]
 8013fd0:	0151      	lsls	r1, r2, #5
 8013fd2:	68fa      	ldr	r2, [r7, #12]
 8013fd4:	440a      	add	r2, r1
 8013fd6:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8013fda:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8013fde:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8013fe2:	6013      	str	r3, [r2, #0]
 8013fe4:	2300      	movs	r3, #0
 8013fe6:	4618      	mov	r0, r3
 8013fe8:	3714      	adds	r7, #20
 8013fea:	46bd      	mov	sp, r7
 8013fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013ff0:	4770      	bx	lr
	...

08013ff4 <USB_DeactivateEndpoint>:
 8013ff4:	b480      	push	{r7}
 8013ff6:	b085      	sub	sp, #20
 8013ff8:	af00      	add	r7, sp, #0
 8013ffa:	6078      	str	r0, [r7, #4]
 8013ffc:	6039      	str	r1, [r7, #0]
 8013ffe:	687b      	ldr	r3, [r7, #4]
 8014000:	60fb      	str	r3, [r7, #12]
 8014002:	683b      	ldr	r3, [r7, #0]
 8014004:	781b      	ldrb	r3, [r3, #0]
 8014006:	60bb      	str	r3, [r7, #8]
 8014008:	683b      	ldr	r3, [r7, #0]
 801400a:	785b      	ldrb	r3, [r3, #1]
 801400c:	2b01      	cmp	r3, #1
 801400e:	d161      	bne.n	80140d4 <USB_DeactivateEndpoint+0xe0>
 8014010:	68bb      	ldr	r3, [r7, #8]
 8014012:	015a      	lsls	r2, r3, #5
 8014014:	68fb      	ldr	r3, [r7, #12]
 8014016:	4413      	add	r3, r2
 8014018:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801401c:	681b      	ldr	r3, [r3, #0]
 801401e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014022:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014026:	d11f      	bne.n	8014068 <USB_DeactivateEndpoint+0x74>
 8014028:	68bb      	ldr	r3, [r7, #8]
 801402a:	015a      	lsls	r2, r3, #5
 801402c:	68fb      	ldr	r3, [r7, #12]
 801402e:	4413      	add	r3, r2
 8014030:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014034:	681b      	ldr	r3, [r3, #0]
 8014036:	68ba      	ldr	r2, [r7, #8]
 8014038:	0151      	lsls	r1, r2, #5
 801403a:	68fa      	ldr	r2, [r7, #12]
 801403c:	440a      	add	r2, r1
 801403e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014042:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8014046:	6013      	str	r3, [r2, #0]
 8014048:	68bb      	ldr	r3, [r7, #8]
 801404a:	015a      	lsls	r2, r3, #5
 801404c:	68fb      	ldr	r3, [r7, #12]
 801404e:	4413      	add	r3, r2
 8014050:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014054:	681b      	ldr	r3, [r3, #0]
 8014056:	68ba      	ldr	r2, [r7, #8]
 8014058:	0151      	lsls	r1, r2, #5
 801405a:	68fa      	ldr	r2, [r7, #12]
 801405c:	440a      	add	r2, r1
 801405e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014062:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8014066:	6013      	str	r3, [r2, #0]
 8014068:	68fb      	ldr	r3, [r7, #12]
 801406a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801406e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8014070:	683b      	ldr	r3, [r7, #0]
 8014072:	781b      	ldrb	r3, [r3, #0]
 8014074:	f003 030f 	and.w	r3, r3, #15
 8014078:	2101      	movs	r1, #1
 801407a:	fa01 f303 	lsl.w	r3, r1, r3
 801407e:	b29b      	uxth	r3, r3
 8014080:	43db      	mvns	r3, r3
 8014082:	68f9      	ldr	r1, [r7, #12]
 8014084:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014088:	4013      	ands	r3, r2
 801408a:	63cb      	str	r3, [r1, #60]	@ 0x3c
 801408c:	68fb      	ldr	r3, [r7, #12]
 801408e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014092:	69da      	ldr	r2, [r3, #28]
 8014094:	683b      	ldr	r3, [r7, #0]
 8014096:	781b      	ldrb	r3, [r3, #0]
 8014098:	f003 030f 	and.w	r3, r3, #15
 801409c:	2101      	movs	r1, #1
 801409e:	fa01 f303 	lsl.w	r3, r1, r3
 80140a2:	b29b      	uxth	r3, r3
 80140a4:	43db      	mvns	r3, r3
 80140a6:	68f9      	ldr	r1, [r7, #12]
 80140a8:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80140ac:	4013      	ands	r3, r2
 80140ae:	61cb      	str	r3, [r1, #28]
 80140b0:	68bb      	ldr	r3, [r7, #8]
 80140b2:	015a      	lsls	r2, r3, #5
 80140b4:	68fb      	ldr	r3, [r7, #12]
 80140b6:	4413      	add	r3, r2
 80140b8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80140bc:	681a      	ldr	r2, [r3, #0]
 80140be:	68bb      	ldr	r3, [r7, #8]
 80140c0:	0159      	lsls	r1, r3, #5
 80140c2:	68fb      	ldr	r3, [r7, #12]
 80140c4:	440b      	add	r3, r1
 80140c6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80140ca:	4619      	mov	r1, r3
 80140cc:	4b35      	ldr	r3, [pc, #212]	@ (80141a4 <USB_DeactivateEndpoint+0x1b0>)
 80140ce:	4013      	ands	r3, r2
 80140d0:	600b      	str	r3, [r1, #0]
 80140d2:	e060      	b.n	8014196 <USB_DeactivateEndpoint+0x1a2>
 80140d4:	68bb      	ldr	r3, [r7, #8]
 80140d6:	015a      	lsls	r2, r3, #5
 80140d8:	68fb      	ldr	r3, [r7, #12]
 80140da:	4413      	add	r3, r2
 80140dc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80140e0:	681b      	ldr	r3, [r3, #0]
 80140e2:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80140e6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80140ea:	d11f      	bne.n	801412c <USB_DeactivateEndpoint+0x138>
 80140ec:	68bb      	ldr	r3, [r7, #8]
 80140ee:	015a      	lsls	r2, r3, #5
 80140f0:	68fb      	ldr	r3, [r7, #12]
 80140f2:	4413      	add	r3, r2
 80140f4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80140f8:	681b      	ldr	r3, [r3, #0]
 80140fa:	68ba      	ldr	r2, [r7, #8]
 80140fc:	0151      	lsls	r1, r2, #5
 80140fe:	68fa      	ldr	r2, [r7, #12]
 8014100:	440a      	add	r2, r1
 8014102:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014106:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 801410a:	6013      	str	r3, [r2, #0]
 801410c:	68bb      	ldr	r3, [r7, #8]
 801410e:	015a      	lsls	r2, r3, #5
 8014110:	68fb      	ldr	r3, [r7, #12]
 8014112:	4413      	add	r3, r2
 8014114:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014118:	681b      	ldr	r3, [r3, #0]
 801411a:	68ba      	ldr	r2, [r7, #8]
 801411c:	0151      	lsls	r1, r2, #5
 801411e:	68fa      	ldr	r2, [r7, #12]
 8014120:	440a      	add	r2, r1
 8014122:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014126:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 801412a:	6013      	str	r3, [r2, #0]
 801412c:	68fb      	ldr	r3, [r7, #12]
 801412e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014132:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8014134:	683b      	ldr	r3, [r7, #0]
 8014136:	781b      	ldrb	r3, [r3, #0]
 8014138:	f003 030f 	and.w	r3, r3, #15
 801413c:	2101      	movs	r1, #1
 801413e:	fa01 f303 	lsl.w	r3, r1, r3
 8014142:	041b      	lsls	r3, r3, #16
 8014144:	43db      	mvns	r3, r3
 8014146:	68f9      	ldr	r1, [r7, #12]
 8014148:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801414c:	4013      	ands	r3, r2
 801414e:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8014150:	68fb      	ldr	r3, [r7, #12]
 8014152:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014156:	69da      	ldr	r2, [r3, #28]
 8014158:	683b      	ldr	r3, [r7, #0]
 801415a:	781b      	ldrb	r3, [r3, #0]
 801415c:	f003 030f 	and.w	r3, r3, #15
 8014160:	2101      	movs	r1, #1
 8014162:	fa01 f303 	lsl.w	r3, r1, r3
 8014166:	041b      	lsls	r3, r3, #16
 8014168:	43db      	mvns	r3, r3
 801416a:	68f9      	ldr	r1, [r7, #12]
 801416c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014170:	4013      	ands	r3, r2
 8014172:	61cb      	str	r3, [r1, #28]
 8014174:	68bb      	ldr	r3, [r7, #8]
 8014176:	015a      	lsls	r2, r3, #5
 8014178:	68fb      	ldr	r3, [r7, #12]
 801417a:	4413      	add	r3, r2
 801417c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014180:	681a      	ldr	r2, [r3, #0]
 8014182:	68bb      	ldr	r3, [r7, #8]
 8014184:	0159      	lsls	r1, r3, #5
 8014186:	68fb      	ldr	r3, [r7, #12]
 8014188:	440b      	add	r3, r1
 801418a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801418e:	4619      	mov	r1, r3
 8014190:	4b05      	ldr	r3, [pc, #20]	@ (80141a8 <USB_DeactivateEndpoint+0x1b4>)
 8014192:	4013      	ands	r3, r2
 8014194:	600b      	str	r3, [r1, #0]
 8014196:	2300      	movs	r3, #0
 8014198:	4618      	mov	r0, r3
 801419a:	3714      	adds	r7, #20
 801419c:	46bd      	mov	sp, r7
 801419e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80141a2:	4770      	bx	lr
 80141a4:	ec337800 	.word	0xec337800
 80141a8:	eff37800 	.word	0xeff37800

080141ac <USB_EPStartXfer>:
 80141ac:	b580      	push	{r7, lr}
 80141ae:	b08a      	sub	sp, #40	@ 0x28
 80141b0:	af02      	add	r7, sp, #8
 80141b2:	60f8      	str	r0, [r7, #12]
 80141b4:	60b9      	str	r1, [r7, #8]
 80141b6:	4613      	mov	r3, r2
 80141b8:	71fb      	strb	r3, [r7, #7]
 80141ba:	68fb      	ldr	r3, [r7, #12]
 80141bc:	61fb      	str	r3, [r7, #28]
 80141be:	68bb      	ldr	r3, [r7, #8]
 80141c0:	781b      	ldrb	r3, [r3, #0]
 80141c2:	61bb      	str	r3, [r7, #24]
 80141c4:	68bb      	ldr	r3, [r7, #8]
 80141c6:	785b      	ldrb	r3, [r3, #1]
 80141c8:	2b01      	cmp	r3, #1
 80141ca:	f040 815c 	bne.w	8014486 <USB_EPStartXfer+0x2da>
 80141ce:	68bb      	ldr	r3, [r7, #8]
 80141d0:	699b      	ldr	r3, [r3, #24]
 80141d2:	2b00      	cmp	r3, #0
 80141d4:	d132      	bne.n	801423c <USB_EPStartXfer+0x90>
 80141d6:	69bb      	ldr	r3, [r7, #24]
 80141d8:	015a      	lsls	r2, r3, #5
 80141da:	69fb      	ldr	r3, [r7, #28]
 80141dc:	4413      	add	r3, r2
 80141de:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80141e2:	691b      	ldr	r3, [r3, #16]
 80141e4:	69ba      	ldr	r2, [r7, #24]
 80141e6:	0151      	lsls	r1, r2, #5
 80141e8:	69fa      	ldr	r2, [r7, #28]
 80141ea:	440a      	add	r2, r1
 80141ec:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80141f0:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80141f4:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80141f8:	6113      	str	r3, [r2, #16]
 80141fa:	69bb      	ldr	r3, [r7, #24]
 80141fc:	015a      	lsls	r2, r3, #5
 80141fe:	69fb      	ldr	r3, [r7, #28]
 8014200:	4413      	add	r3, r2
 8014202:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014206:	691b      	ldr	r3, [r3, #16]
 8014208:	69ba      	ldr	r2, [r7, #24]
 801420a:	0151      	lsls	r1, r2, #5
 801420c:	69fa      	ldr	r2, [r7, #28]
 801420e:	440a      	add	r2, r1
 8014210:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014214:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014218:	6113      	str	r3, [r2, #16]
 801421a:	69bb      	ldr	r3, [r7, #24]
 801421c:	015a      	lsls	r2, r3, #5
 801421e:	69fb      	ldr	r3, [r7, #28]
 8014220:	4413      	add	r3, r2
 8014222:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014226:	691b      	ldr	r3, [r3, #16]
 8014228:	69ba      	ldr	r2, [r7, #24]
 801422a:	0151      	lsls	r1, r2, #5
 801422c:	69fa      	ldr	r2, [r7, #28]
 801422e:	440a      	add	r2, r1
 8014230:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014234:	0cdb      	lsrs	r3, r3, #19
 8014236:	04db      	lsls	r3, r3, #19
 8014238:	6113      	str	r3, [r2, #16]
 801423a:	e074      	b.n	8014326 <USB_EPStartXfer+0x17a>
 801423c:	69bb      	ldr	r3, [r7, #24]
 801423e:	015a      	lsls	r2, r3, #5
 8014240:	69fb      	ldr	r3, [r7, #28]
 8014242:	4413      	add	r3, r2
 8014244:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014248:	691b      	ldr	r3, [r3, #16]
 801424a:	69ba      	ldr	r2, [r7, #24]
 801424c:	0151      	lsls	r1, r2, #5
 801424e:	69fa      	ldr	r2, [r7, #28]
 8014250:	440a      	add	r2, r1
 8014252:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014256:	0cdb      	lsrs	r3, r3, #19
 8014258:	04db      	lsls	r3, r3, #19
 801425a:	6113      	str	r3, [r2, #16]
 801425c:	69bb      	ldr	r3, [r7, #24]
 801425e:	015a      	lsls	r2, r3, #5
 8014260:	69fb      	ldr	r3, [r7, #28]
 8014262:	4413      	add	r3, r2
 8014264:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014268:	691b      	ldr	r3, [r3, #16]
 801426a:	69ba      	ldr	r2, [r7, #24]
 801426c:	0151      	lsls	r1, r2, #5
 801426e:	69fa      	ldr	r2, [r7, #28]
 8014270:	440a      	add	r2, r1
 8014272:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014276:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801427a:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 801427e:	6113      	str	r3, [r2, #16]
 8014280:	69bb      	ldr	r3, [r7, #24]
 8014282:	015a      	lsls	r2, r3, #5
 8014284:	69fb      	ldr	r3, [r7, #28]
 8014286:	4413      	add	r3, r2
 8014288:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801428c:	691a      	ldr	r2, [r3, #16]
 801428e:	68bb      	ldr	r3, [r7, #8]
 8014290:	6999      	ldr	r1, [r3, #24]
 8014292:	68bb      	ldr	r3, [r7, #8]
 8014294:	68db      	ldr	r3, [r3, #12]
 8014296:	440b      	add	r3, r1
 8014298:	1e59      	subs	r1, r3, #1
 801429a:	68bb      	ldr	r3, [r7, #8]
 801429c:	68db      	ldr	r3, [r3, #12]
 801429e:	fbb1 f3f3 	udiv	r3, r1, r3
 80142a2:	04d9      	lsls	r1, r3, #19
 80142a4:	4b9d      	ldr	r3, [pc, #628]	@ (801451c <USB_EPStartXfer+0x370>)
 80142a6:	400b      	ands	r3, r1
 80142a8:	69b9      	ldr	r1, [r7, #24]
 80142aa:	0148      	lsls	r0, r1, #5
 80142ac:	69f9      	ldr	r1, [r7, #28]
 80142ae:	4401      	add	r1, r0
 80142b0:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80142b4:	4313      	orrs	r3, r2
 80142b6:	610b      	str	r3, [r1, #16]
 80142b8:	69bb      	ldr	r3, [r7, #24]
 80142ba:	015a      	lsls	r2, r3, #5
 80142bc:	69fb      	ldr	r3, [r7, #28]
 80142be:	4413      	add	r3, r2
 80142c0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80142c4:	691a      	ldr	r2, [r3, #16]
 80142c6:	68bb      	ldr	r3, [r7, #8]
 80142c8:	699b      	ldr	r3, [r3, #24]
 80142ca:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80142ce:	69b9      	ldr	r1, [r7, #24]
 80142d0:	0148      	lsls	r0, r1, #5
 80142d2:	69f9      	ldr	r1, [r7, #28]
 80142d4:	4401      	add	r1, r0
 80142d6:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80142da:	4313      	orrs	r3, r2
 80142dc:	610b      	str	r3, [r1, #16]
 80142de:	68bb      	ldr	r3, [r7, #8]
 80142e0:	791b      	ldrb	r3, [r3, #4]
 80142e2:	2b01      	cmp	r3, #1
 80142e4:	d11f      	bne.n	8014326 <USB_EPStartXfer+0x17a>
 80142e6:	69bb      	ldr	r3, [r7, #24]
 80142e8:	015a      	lsls	r2, r3, #5
 80142ea:	69fb      	ldr	r3, [r7, #28]
 80142ec:	4413      	add	r3, r2
 80142ee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80142f2:	691b      	ldr	r3, [r3, #16]
 80142f4:	69ba      	ldr	r2, [r7, #24]
 80142f6:	0151      	lsls	r1, r2, #5
 80142f8:	69fa      	ldr	r2, [r7, #28]
 80142fa:	440a      	add	r2, r1
 80142fc:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014300:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8014304:	6113      	str	r3, [r2, #16]
 8014306:	69bb      	ldr	r3, [r7, #24]
 8014308:	015a      	lsls	r2, r3, #5
 801430a:	69fb      	ldr	r3, [r7, #28]
 801430c:	4413      	add	r3, r2
 801430e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014312:	691b      	ldr	r3, [r3, #16]
 8014314:	69ba      	ldr	r2, [r7, #24]
 8014316:	0151      	lsls	r1, r2, #5
 8014318:	69fa      	ldr	r2, [r7, #28]
 801431a:	440a      	add	r2, r1
 801431c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014320:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8014324:	6113      	str	r3, [r2, #16]
 8014326:	79fb      	ldrb	r3, [r7, #7]
 8014328:	2b01      	cmp	r3, #1
 801432a:	d14b      	bne.n	80143c4 <USB_EPStartXfer+0x218>
 801432c:	68bb      	ldr	r3, [r7, #8]
 801432e:	695b      	ldr	r3, [r3, #20]
 8014330:	2b00      	cmp	r3, #0
 8014332:	d009      	beq.n	8014348 <USB_EPStartXfer+0x19c>
 8014334:	69bb      	ldr	r3, [r7, #24]
 8014336:	015a      	lsls	r2, r3, #5
 8014338:	69fb      	ldr	r3, [r7, #28]
 801433a:	4413      	add	r3, r2
 801433c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014340:	461a      	mov	r2, r3
 8014342:	68bb      	ldr	r3, [r7, #8]
 8014344:	695b      	ldr	r3, [r3, #20]
 8014346:	6153      	str	r3, [r2, #20]
 8014348:	68bb      	ldr	r3, [r7, #8]
 801434a:	791b      	ldrb	r3, [r3, #4]
 801434c:	2b01      	cmp	r3, #1
 801434e:	d128      	bne.n	80143a2 <USB_EPStartXfer+0x1f6>
 8014350:	69fb      	ldr	r3, [r7, #28]
 8014352:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014356:	689b      	ldr	r3, [r3, #8]
 8014358:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801435c:	2b00      	cmp	r3, #0
 801435e:	d110      	bne.n	8014382 <USB_EPStartXfer+0x1d6>
 8014360:	69bb      	ldr	r3, [r7, #24]
 8014362:	015a      	lsls	r2, r3, #5
 8014364:	69fb      	ldr	r3, [r7, #28]
 8014366:	4413      	add	r3, r2
 8014368:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801436c:	681b      	ldr	r3, [r3, #0]
 801436e:	69ba      	ldr	r2, [r7, #24]
 8014370:	0151      	lsls	r1, r2, #5
 8014372:	69fa      	ldr	r2, [r7, #28]
 8014374:	440a      	add	r2, r1
 8014376:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801437a:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 801437e:	6013      	str	r3, [r2, #0]
 8014380:	e00f      	b.n	80143a2 <USB_EPStartXfer+0x1f6>
 8014382:	69bb      	ldr	r3, [r7, #24]
 8014384:	015a      	lsls	r2, r3, #5
 8014386:	69fb      	ldr	r3, [r7, #28]
 8014388:	4413      	add	r3, r2
 801438a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801438e:	681b      	ldr	r3, [r3, #0]
 8014390:	69ba      	ldr	r2, [r7, #24]
 8014392:	0151      	lsls	r1, r2, #5
 8014394:	69fa      	ldr	r2, [r7, #28]
 8014396:	440a      	add	r2, r1
 8014398:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801439c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80143a0:	6013      	str	r3, [r2, #0]
 80143a2:	69bb      	ldr	r3, [r7, #24]
 80143a4:	015a      	lsls	r2, r3, #5
 80143a6:	69fb      	ldr	r3, [r7, #28]
 80143a8:	4413      	add	r3, r2
 80143aa:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143ae:	681b      	ldr	r3, [r3, #0]
 80143b0:	69ba      	ldr	r2, [r7, #24]
 80143b2:	0151      	lsls	r1, r2, #5
 80143b4:	69fa      	ldr	r2, [r7, #28]
 80143b6:	440a      	add	r2, r1
 80143b8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80143bc:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80143c0:	6013      	str	r3, [r2, #0]
 80143c2:	e133      	b.n	801462c <USB_EPStartXfer+0x480>
 80143c4:	69bb      	ldr	r3, [r7, #24]
 80143c6:	015a      	lsls	r2, r3, #5
 80143c8:	69fb      	ldr	r3, [r7, #28]
 80143ca:	4413      	add	r3, r2
 80143cc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80143d0:	681b      	ldr	r3, [r3, #0]
 80143d2:	69ba      	ldr	r2, [r7, #24]
 80143d4:	0151      	lsls	r1, r2, #5
 80143d6:	69fa      	ldr	r2, [r7, #28]
 80143d8:	440a      	add	r2, r1
 80143da:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80143de:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80143e2:	6013      	str	r3, [r2, #0]
 80143e4:	68bb      	ldr	r3, [r7, #8]
 80143e6:	791b      	ldrb	r3, [r3, #4]
 80143e8:	2b01      	cmp	r3, #1
 80143ea:	d015      	beq.n	8014418 <USB_EPStartXfer+0x26c>
 80143ec:	68bb      	ldr	r3, [r7, #8]
 80143ee:	699b      	ldr	r3, [r3, #24]
 80143f0:	2b00      	cmp	r3, #0
 80143f2:	f000 811b 	beq.w	801462c <USB_EPStartXfer+0x480>
 80143f6:	69fb      	ldr	r3, [r7, #28]
 80143f8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80143fc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80143fe:	68bb      	ldr	r3, [r7, #8]
 8014400:	781b      	ldrb	r3, [r3, #0]
 8014402:	f003 030f 	and.w	r3, r3, #15
 8014406:	2101      	movs	r1, #1
 8014408:	fa01 f303 	lsl.w	r3, r1, r3
 801440c:	69f9      	ldr	r1, [r7, #28]
 801440e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014412:	4313      	orrs	r3, r2
 8014414:	634b      	str	r3, [r1, #52]	@ 0x34
 8014416:	e109      	b.n	801462c <USB_EPStartXfer+0x480>
 8014418:	69fb      	ldr	r3, [r7, #28]
 801441a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801441e:	689b      	ldr	r3, [r3, #8]
 8014420:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014424:	2b00      	cmp	r3, #0
 8014426:	d110      	bne.n	801444a <USB_EPStartXfer+0x29e>
 8014428:	69bb      	ldr	r3, [r7, #24]
 801442a:	015a      	lsls	r2, r3, #5
 801442c:	69fb      	ldr	r3, [r7, #28]
 801442e:	4413      	add	r3, r2
 8014430:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014434:	681b      	ldr	r3, [r3, #0]
 8014436:	69ba      	ldr	r2, [r7, #24]
 8014438:	0151      	lsls	r1, r2, #5
 801443a:	69fa      	ldr	r2, [r7, #28]
 801443c:	440a      	add	r2, r1
 801443e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014442:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8014446:	6013      	str	r3, [r2, #0]
 8014448:	e00f      	b.n	801446a <USB_EPStartXfer+0x2be>
 801444a:	69bb      	ldr	r3, [r7, #24]
 801444c:	015a      	lsls	r2, r3, #5
 801444e:	69fb      	ldr	r3, [r7, #28]
 8014450:	4413      	add	r3, r2
 8014452:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014456:	681b      	ldr	r3, [r3, #0]
 8014458:	69ba      	ldr	r2, [r7, #24]
 801445a:	0151      	lsls	r1, r2, #5
 801445c:	69fa      	ldr	r2, [r7, #28]
 801445e:	440a      	add	r2, r1
 8014460:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014464:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014468:	6013      	str	r3, [r2, #0]
 801446a:	68bb      	ldr	r3, [r7, #8]
 801446c:	6919      	ldr	r1, [r3, #16]
 801446e:	68bb      	ldr	r3, [r7, #8]
 8014470:	781a      	ldrb	r2, [r3, #0]
 8014472:	68bb      	ldr	r3, [r7, #8]
 8014474:	699b      	ldr	r3, [r3, #24]
 8014476:	b298      	uxth	r0, r3
 8014478:	79fb      	ldrb	r3, [r7, #7]
 801447a:	9300      	str	r3, [sp, #0]
 801447c:	4603      	mov	r3, r0
 801447e:	68f8      	ldr	r0, [r7, #12]
 8014480:	f000 fade 	bl	8014a40 <USB_WritePacket>
 8014484:	e0d2      	b.n	801462c <USB_EPStartXfer+0x480>
 8014486:	69bb      	ldr	r3, [r7, #24]
 8014488:	015a      	lsls	r2, r3, #5
 801448a:	69fb      	ldr	r3, [r7, #28]
 801448c:	4413      	add	r3, r2
 801448e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014492:	691b      	ldr	r3, [r3, #16]
 8014494:	69ba      	ldr	r2, [r7, #24]
 8014496:	0151      	lsls	r1, r2, #5
 8014498:	69fa      	ldr	r2, [r7, #28]
 801449a:	440a      	add	r2, r1
 801449c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80144a0:	0cdb      	lsrs	r3, r3, #19
 80144a2:	04db      	lsls	r3, r3, #19
 80144a4:	6113      	str	r3, [r2, #16]
 80144a6:	69bb      	ldr	r3, [r7, #24]
 80144a8:	015a      	lsls	r2, r3, #5
 80144aa:	69fb      	ldr	r3, [r7, #28]
 80144ac:	4413      	add	r3, r2
 80144ae:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80144b2:	691b      	ldr	r3, [r3, #16]
 80144b4:	69ba      	ldr	r2, [r7, #24]
 80144b6:	0151      	lsls	r1, r2, #5
 80144b8:	69fa      	ldr	r2, [r7, #28]
 80144ba:	440a      	add	r2, r1
 80144bc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80144c0:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80144c4:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80144c8:	6113      	str	r3, [r2, #16]
 80144ca:	68bb      	ldr	r3, [r7, #8]
 80144cc:	699b      	ldr	r3, [r3, #24]
 80144ce:	2b00      	cmp	r3, #0
 80144d0:	d126      	bne.n	8014520 <USB_EPStartXfer+0x374>
 80144d2:	69bb      	ldr	r3, [r7, #24]
 80144d4:	015a      	lsls	r2, r3, #5
 80144d6:	69fb      	ldr	r3, [r7, #28]
 80144d8:	4413      	add	r3, r2
 80144da:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80144de:	691a      	ldr	r2, [r3, #16]
 80144e0:	68bb      	ldr	r3, [r7, #8]
 80144e2:	68db      	ldr	r3, [r3, #12]
 80144e4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80144e8:	69b9      	ldr	r1, [r7, #24]
 80144ea:	0148      	lsls	r0, r1, #5
 80144ec:	69f9      	ldr	r1, [r7, #28]
 80144ee:	4401      	add	r1, r0
 80144f0:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80144f4:	4313      	orrs	r3, r2
 80144f6:	610b      	str	r3, [r1, #16]
 80144f8:	69bb      	ldr	r3, [r7, #24]
 80144fa:	015a      	lsls	r2, r3, #5
 80144fc:	69fb      	ldr	r3, [r7, #28]
 80144fe:	4413      	add	r3, r2
 8014500:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014504:	691b      	ldr	r3, [r3, #16]
 8014506:	69ba      	ldr	r2, [r7, #24]
 8014508:	0151      	lsls	r1, r2, #5
 801450a:	69fa      	ldr	r2, [r7, #28]
 801450c:	440a      	add	r2, r1
 801450e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014512:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014516:	6113      	str	r3, [r2, #16]
 8014518:	e03a      	b.n	8014590 <USB_EPStartXfer+0x3e4>
 801451a:	bf00      	nop
 801451c:	1ff80000 	.word	0x1ff80000
 8014520:	68bb      	ldr	r3, [r7, #8]
 8014522:	699a      	ldr	r2, [r3, #24]
 8014524:	68bb      	ldr	r3, [r7, #8]
 8014526:	68db      	ldr	r3, [r3, #12]
 8014528:	4413      	add	r3, r2
 801452a:	1e5a      	subs	r2, r3, #1
 801452c:	68bb      	ldr	r3, [r7, #8]
 801452e:	68db      	ldr	r3, [r3, #12]
 8014530:	fbb2 f3f3 	udiv	r3, r2, r3
 8014534:	82fb      	strh	r3, [r7, #22]
 8014536:	68bb      	ldr	r3, [r7, #8]
 8014538:	68db      	ldr	r3, [r3, #12]
 801453a:	8afa      	ldrh	r2, [r7, #22]
 801453c:	fb03 f202 	mul.w	r2, r3, r2
 8014540:	68bb      	ldr	r3, [r7, #8]
 8014542:	61da      	str	r2, [r3, #28]
 8014544:	69bb      	ldr	r3, [r7, #24]
 8014546:	015a      	lsls	r2, r3, #5
 8014548:	69fb      	ldr	r3, [r7, #28]
 801454a:	4413      	add	r3, r2
 801454c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014550:	691a      	ldr	r2, [r3, #16]
 8014552:	8afb      	ldrh	r3, [r7, #22]
 8014554:	04d9      	lsls	r1, r3, #19
 8014556:	4b38      	ldr	r3, [pc, #224]	@ (8014638 <USB_EPStartXfer+0x48c>)
 8014558:	400b      	ands	r3, r1
 801455a:	69b9      	ldr	r1, [r7, #24]
 801455c:	0148      	lsls	r0, r1, #5
 801455e:	69f9      	ldr	r1, [r7, #28]
 8014560:	4401      	add	r1, r0
 8014562:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8014566:	4313      	orrs	r3, r2
 8014568:	610b      	str	r3, [r1, #16]
 801456a:	69bb      	ldr	r3, [r7, #24]
 801456c:	015a      	lsls	r2, r3, #5
 801456e:	69fb      	ldr	r3, [r7, #28]
 8014570:	4413      	add	r3, r2
 8014572:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014576:	691a      	ldr	r2, [r3, #16]
 8014578:	68bb      	ldr	r3, [r7, #8]
 801457a:	69db      	ldr	r3, [r3, #28]
 801457c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8014580:	69b9      	ldr	r1, [r7, #24]
 8014582:	0148      	lsls	r0, r1, #5
 8014584:	69f9      	ldr	r1, [r7, #28]
 8014586:	4401      	add	r1, r0
 8014588:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 801458c:	4313      	orrs	r3, r2
 801458e:	610b      	str	r3, [r1, #16]
 8014590:	79fb      	ldrb	r3, [r7, #7]
 8014592:	2b01      	cmp	r3, #1
 8014594:	d10d      	bne.n	80145b2 <USB_EPStartXfer+0x406>
 8014596:	68bb      	ldr	r3, [r7, #8]
 8014598:	691b      	ldr	r3, [r3, #16]
 801459a:	2b00      	cmp	r3, #0
 801459c:	d009      	beq.n	80145b2 <USB_EPStartXfer+0x406>
 801459e:	68bb      	ldr	r3, [r7, #8]
 80145a0:	6919      	ldr	r1, [r3, #16]
 80145a2:	69bb      	ldr	r3, [r7, #24]
 80145a4:	015a      	lsls	r2, r3, #5
 80145a6:	69fb      	ldr	r3, [r7, #28]
 80145a8:	4413      	add	r3, r2
 80145aa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145ae:	460a      	mov	r2, r1
 80145b0:	615a      	str	r2, [r3, #20]
 80145b2:	68bb      	ldr	r3, [r7, #8]
 80145b4:	791b      	ldrb	r3, [r3, #4]
 80145b6:	2b01      	cmp	r3, #1
 80145b8:	d128      	bne.n	801460c <USB_EPStartXfer+0x460>
 80145ba:	69fb      	ldr	r3, [r7, #28]
 80145bc:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80145c0:	689b      	ldr	r3, [r3, #8]
 80145c2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80145c6:	2b00      	cmp	r3, #0
 80145c8:	d110      	bne.n	80145ec <USB_EPStartXfer+0x440>
 80145ca:	69bb      	ldr	r3, [r7, #24]
 80145cc:	015a      	lsls	r2, r3, #5
 80145ce:	69fb      	ldr	r3, [r7, #28]
 80145d0:	4413      	add	r3, r2
 80145d2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145d6:	681b      	ldr	r3, [r3, #0]
 80145d8:	69ba      	ldr	r2, [r7, #24]
 80145da:	0151      	lsls	r1, r2, #5
 80145dc:	69fa      	ldr	r2, [r7, #28]
 80145de:	440a      	add	r2, r1
 80145e0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80145e4:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80145e8:	6013      	str	r3, [r2, #0]
 80145ea:	e00f      	b.n	801460c <USB_EPStartXfer+0x460>
 80145ec:	69bb      	ldr	r3, [r7, #24]
 80145ee:	015a      	lsls	r2, r3, #5
 80145f0:	69fb      	ldr	r3, [r7, #28]
 80145f2:	4413      	add	r3, r2
 80145f4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80145f8:	681b      	ldr	r3, [r3, #0]
 80145fa:	69ba      	ldr	r2, [r7, #24]
 80145fc:	0151      	lsls	r1, r2, #5
 80145fe:	69fa      	ldr	r2, [r7, #28]
 8014600:	440a      	add	r2, r1
 8014602:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014606:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 801460a:	6013      	str	r3, [r2, #0]
 801460c:	69bb      	ldr	r3, [r7, #24]
 801460e:	015a      	lsls	r2, r3, #5
 8014610:	69fb      	ldr	r3, [r7, #28]
 8014612:	4413      	add	r3, r2
 8014614:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014618:	681b      	ldr	r3, [r3, #0]
 801461a:	69ba      	ldr	r2, [r7, #24]
 801461c:	0151      	lsls	r1, r2, #5
 801461e:	69fa      	ldr	r2, [r7, #28]
 8014620:	440a      	add	r2, r1
 8014622:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014626:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801462a:	6013      	str	r3, [r2, #0]
 801462c:	2300      	movs	r3, #0
 801462e:	4618      	mov	r0, r3
 8014630:	3720      	adds	r7, #32
 8014632:	46bd      	mov	sp, r7
 8014634:	bd80      	pop	{r7, pc}
 8014636:	bf00      	nop
 8014638:	1ff80000 	.word	0x1ff80000

0801463c <USB_EP0StartXfer>:
 801463c:	b480      	push	{r7}
 801463e:	b087      	sub	sp, #28
 8014640:	af00      	add	r7, sp, #0
 8014642:	60f8      	str	r0, [r7, #12]
 8014644:	60b9      	str	r1, [r7, #8]
 8014646:	4613      	mov	r3, r2
 8014648:	71fb      	strb	r3, [r7, #7]
 801464a:	68fb      	ldr	r3, [r7, #12]
 801464c:	617b      	str	r3, [r7, #20]
 801464e:	68bb      	ldr	r3, [r7, #8]
 8014650:	781b      	ldrb	r3, [r3, #0]
 8014652:	613b      	str	r3, [r7, #16]
 8014654:	68bb      	ldr	r3, [r7, #8]
 8014656:	785b      	ldrb	r3, [r3, #1]
 8014658:	2b01      	cmp	r3, #1
 801465a:	f040 80ce 	bne.w	80147fa <USB_EP0StartXfer+0x1be>
 801465e:	68bb      	ldr	r3, [r7, #8]
 8014660:	699b      	ldr	r3, [r3, #24]
 8014662:	2b00      	cmp	r3, #0
 8014664:	d132      	bne.n	80146cc <USB_EP0StartXfer+0x90>
 8014666:	693b      	ldr	r3, [r7, #16]
 8014668:	015a      	lsls	r2, r3, #5
 801466a:	697b      	ldr	r3, [r7, #20]
 801466c:	4413      	add	r3, r2
 801466e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014672:	691b      	ldr	r3, [r3, #16]
 8014674:	693a      	ldr	r2, [r7, #16]
 8014676:	0151      	lsls	r1, r2, #5
 8014678:	697a      	ldr	r2, [r7, #20]
 801467a:	440a      	add	r2, r1
 801467c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014680:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8014684:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8014688:	6113      	str	r3, [r2, #16]
 801468a:	693b      	ldr	r3, [r7, #16]
 801468c:	015a      	lsls	r2, r3, #5
 801468e:	697b      	ldr	r3, [r7, #20]
 8014690:	4413      	add	r3, r2
 8014692:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014696:	691b      	ldr	r3, [r3, #16]
 8014698:	693a      	ldr	r2, [r7, #16]
 801469a:	0151      	lsls	r1, r2, #5
 801469c:	697a      	ldr	r2, [r7, #20]
 801469e:	440a      	add	r2, r1
 80146a0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80146a4:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80146a8:	6113      	str	r3, [r2, #16]
 80146aa:	693b      	ldr	r3, [r7, #16]
 80146ac:	015a      	lsls	r2, r3, #5
 80146ae:	697b      	ldr	r3, [r7, #20]
 80146b0:	4413      	add	r3, r2
 80146b2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80146b6:	691b      	ldr	r3, [r3, #16]
 80146b8:	693a      	ldr	r2, [r7, #16]
 80146ba:	0151      	lsls	r1, r2, #5
 80146bc:	697a      	ldr	r2, [r7, #20]
 80146be:	440a      	add	r2, r1
 80146c0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80146c4:	0cdb      	lsrs	r3, r3, #19
 80146c6:	04db      	lsls	r3, r3, #19
 80146c8:	6113      	str	r3, [r2, #16]
 80146ca:	e04e      	b.n	801476a <USB_EP0StartXfer+0x12e>
 80146cc:	693b      	ldr	r3, [r7, #16]
 80146ce:	015a      	lsls	r2, r3, #5
 80146d0:	697b      	ldr	r3, [r7, #20]
 80146d2:	4413      	add	r3, r2
 80146d4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80146d8:	691b      	ldr	r3, [r3, #16]
 80146da:	693a      	ldr	r2, [r7, #16]
 80146dc:	0151      	lsls	r1, r2, #5
 80146de:	697a      	ldr	r2, [r7, #20]
 80146e0:	440a      	add	r2, r1
 80146e2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80146e6:	0cdb      	lsrs	r3, r3, #19
 80146e8:	04db      	lsls	r3, r3, #19
 80146ea:	6113      	str	r3, [r2, #16]
 80146ec:	693b      	ldr	r3, [r7, #16]
 80146ee:	015a      	lsls	r2, r3, #5
 80146f0:	697b      	ldr	r3, [r7, #20]
 80146f2:	4413      	add	r3, r2
 80146f4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80146f8:	691b      	ldr	r3, [r3, #16]
 80146fa:	693a      	ldr	r2, [r7, #16]
 80146fc:	0151      	lsls	r1, r2, #5
 80146fe:	697a      	ldr	r2, [r7, #20]
 8014700:	440a      	add	r2, r1
 8014702:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014706:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801470a:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 801470e:	6113      	str	r3, [r2, #16]
 8014710:	68bb      	ldr	r3, [r7, #8]
 8014712:	699a      	ldr	r2, [r3, #24]
 8014714:	68bb      	ldr	r3, [r7, #8]
 8014716:	68db      	ldr	r3, [r3, #12]
 8014718:	429a      	cmp	r2, r3
 801471a:	d903      	bls.n	8014724 <USB_EP0StartXfer+0xe8>
 801471c:	68bb      	ldr	r3, [r7, #8]
 801471e:	68da      	ldr	r2, [r3, #12]
 8014720:	68bb      	ldr	r3, [r7, #8]
 8014722:	619a      	str	r2, [r3, #24]
 8014724:	693b      	ldr	r3, [r7, #16]
 8014726:	015a      	lsls	r2, r3, #5
 8014728:	697b      	ldr	r3, [r7, #20]
 801472a:	4413      	add	r3, r2
 801472c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014730:	691b      	ldr	r3, [r3, #16]
 8014732:	693a      	ldr	r2, [r7, #16]
 8014734:	0151      	lsls	r1, r2, #5
 8014736:	697a      	ldr	r2, [r7, #20]
 8014738:	440a      	add	r2, r1
 801473a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801473e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014742:	6113      	str	r3, [r2, #16]
 8014744:	693b      	ldr	r3, [r7, #16]
 8014746:	015a      	lsls	r2, r3, #5
 8014748:	697b      	ldr	r3, [r7, #20]
 801474a:	4413      	add	r3, r2
 801474c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014750:	691a      	ldr	r2, [r3, #16]
 8014752:	68bb      	ldr	r3, [r7, #8]
 8014754:	699b      	ldr	r3, [r3, #24]
 8014756:	f3c3 0312 	ubfx	r3, r3, #0, #19
 801475a:	6939      	ldr	r1, [r7, #16]
 801475c:	0148      	lsls	r0, r1, #5
 801475e:	6979      	ldr	r1, [r7, #20]
 8014760:	4401      	add	r1, r0
 8014762:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8014766:	4313      	orrs	r3, r2
 8014768:	610b      	str	r3, [r1, #16]
 801476a:	79fb      	ldrb	r3, [r7, #7]
 801476c:	2b01      	cmp	r3, #1
 801476e:	d11e      	bne.n	80147ae <USB_EP0StartXfer+0x172>
 8014770:	68bb      	ldr	r3, [r7, #8]
 8014772:	695b      	ldr	r3, [r3, #20]
 8014774:	2b00      	cmp	r3, #0
 8014776:	d009      	beq.n	801478c <USB_EP0StartXfer+0x150>
 8014778:	693b      	ldr	r3, [r7, #16]
 801477a:	015a      	lsls	r2, r3, #5
 801477c:	697b      	ldr	r3, [r7, #20]
 801477e:	4413      	add	r3, r2
 8014780:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014784:	461a      	mov	r2, r3
 8014786:	68bb      	ldr	r3, [r7, #8]
 8014788:	695b      	ldr	r3, [r3, #20]
 801478a:	6153      	str	r3, [r2, #20]
 801478c:	693b      	ldr	r3, [r7, #16]
 801478e:	015a      	lsls	r2, r3, #5
 8014790:	697b      	ldr	r3, [r7, #20]
 8014792:	4413      	add	r3, r2
 8014794:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014798:	681b      	ldr	r3, [r3, #0]
 801479a:	693a      	ldr	r2, [r7, #16]
 801479c:	0151      	lsls	r1, r2, #5
 801479e:	697a      	ldr	r2, [r7, #20]
 80147a0:	440a      	add	r2, r1
 80147a2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80147a6:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80147aa:	6013      	str	r3, [r2, #0]
 80147ac:	e097      	b.n	80148de <USB_EP0StartXfer+0x2a2>
 80147ae:	693b      	ldr	r3, [r7, #16]
 80147b0:	015a      	lsls	r2, r3, #5
 80147b2:	697b      	ldr	r3, [r7, #20]
 80147b4:	4413      	add	r3, r2
 80147b6:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80147ba:	681b      	ldr	r3, [r3, #0]
 80147bc:	693a      	ldr	r2, [r7, #16]
 80147be:	0151      	lsls	r1, r2, #5
 80147c0:	697a      	ldr	r2, [r7, #20]
 80147c2:	440a      	add	r2, r1
 80147c4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80147c8:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80147cc:	6013      	str	r3, [r2, #0]
 80147ce:	68bb      	ldr	r3, [r7, #8]
 80147d0:	699b      	ldr	r3, [r3, #24]
 80147d2:	2b00      	cmp	r3, #0
 80147d4:	f000 8083 	beq.w	80148de <USB_EP0StartXfer+0x2a2>
 80147d8:	697b      	ldr	r3, [r7, #20]
 80147da:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80147de:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80147e0:	68bb      	ldr	r3, [r7, #8]
 80147e2:	781b      	ldrb	r3, [r3, #0]
 80147e4:	f003 030f 	and.w	r3, r3, #15
 80147e8:	2101      	movs	r1, #1
 80147ea:	fa01 f303 	lsl.w	r3, r1, r3
 80147ee:	6979      	ldr	r1, [r7, #20]
 80147f0:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80147f4:	4313      	orrs	r3, r2
 80147f6:	634b      	str	r3, [r1, #52]	@ 0x34
 80147f8:	e071      	b.n	80148de <USB_EP0StartXfer+0x2a2>
 80147fa:	693b      	ldr	r3, [r7, #16]
 80147fc:	015a      	lsls	r2, r3, #5
 80147fe:	697b      	ldr	r3, [r7, #20]
 8014800:	4413      	add	r3, r2
 8014802:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014806:	691b      	ldr	r3, [r3, #16]
 8014808:	693a      	ldr	r2, [r7, #16]
 801480a:	0151      	lsls	r1, r2, #5
 801480c:	697a      	ldr	r2, [r7, #20]
 801480e:	440a      	add	r2, r1
 8014810:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014814:	0cdb      	lsrs	r3, r3, #19
 8014816:	04db      	lsls	r3, r3, #19
 8014818:	6113      	str	r3, [r2, #16]
 801481a:	693b      	ldr	r3, [r7, #16]
 801481c:	015a      	lsls	r2, r3, #5
 801481e:	697b      	ldr	r3, [r7, #20]
 8014820:	4413      	add	r3, r2
 8014822:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014826:	691b      	ldr	r3, [r3, #16]
 8014828:	693a      	ldr	r2, [r7, #16]
 801482a:	0151      	lsls	r1, r2, #5
 801482c:	697a      	ldr	r2, [r7, #20]
 801482e:	440a      	add	r2, r1
 8014830:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014834:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8014838:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 801483c:	6113      	str	r3, [r2, #16]
 801483e:	68bb      	ldr	r3, [r7, #8]
 8014840:	699b      	ldr	r3, [r3, #24]
 8014842:	2b00      	cmp	r3, #0
 8014844:	d003      	beq.n	801484e <USB_EP0StartXfer+0x212>
 8014846:	68bb      	ldr	r3, [r7, #8]
 8014848:	68da      	ldr	r2, [r3, #12]
 801484a:	68bb      	ldr	r3, [r7, #8]
 801484c:	619a      	str	r2, [r3, #24]
 801484e:	68bb      	ldr	r3, [r7, #8]
 8014850:	68da      	ldr	r2, [r3, #12]
 8014852:	68bb      	ldr	r3, [r7, #8]
 8014854:	61da      	str	r2, [r3, #28]
 8014856:	693b      	ldr	r3, [r7, #16]
 8014858:	015a      	lsls	r2, r3, #5
 801485a:	697b      	ldr	r3, [r7, #20]
 801485c:	4413      	add	r3, r2
 801485e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014862:	691b      	ldr	r3, [r3, #16]
 8014864:	693a      	ldr	r2, [r7, #16]
 8014866:	0151      	lsls	r1, r2, #5
 8014868:	697a      	ldr	r2, [r7, #20]
 801486a:	440a      	add	r2, r1
 801486c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014870:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014874:	6113      	str	r3, [r2, #16]
 8014876:	693b      	ldr	r3, [r7, #16]
 8014878:	015a      	lsls	r2, r3, #5
 801487a:	697b      	ldr	r3, [r7, #20]
 801487c:	4413      	add	r3, r2
 801487e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014882:	691a      	ldr	r2, [r3, #16]
 8014884:	68bb      	ldr	r3, [r7, #8]
 8014886:	69db      	ldr	r3, [r3, #28]
 8014888:	f3c3 0312 	ubfx	r3, r3, #0, #19
 801488c:	6939      	ldr	r1, [r7, #16]
 801488e:	0148      	lsls	r0, r1, #5
 8014890:	6979      	ldr	r1, [r7, #20]
 8014892:	4401      	add	r1, r0
 8014894:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8014898:	4313      	orrs	r3, r2
 801489a:	610b      	str	r3, [r1, #16]
 801489c:	79fb      	ldrb	r3, [r7, #7]
 801489e:	2b01      	cmp	r3, #1
 80148a0:	d10d      	bne.n	80148be <USB_EP0StartXfer+0x282>
 80148a2:	68bb      	ldr	r3, [r7, #8]
 80148a4:	691b      	ldr	r3, [r3, #16]
 80148a6:	2b00      	cmp	r3, #0
 80148a8:	d009      	beq.n	80148be <USB_EP0StartXfer+0x282>
 80148aa:	68bb      	ldr	r3, [r7, #8]
 80148ac:	6919      	ldr	r1, [r3, #16]
 80148ae:	693b      	ldr	r3, [r7, #16]
 80148b0:	015a      	lsls	r2, r3, #5
 80148b2:	697b      	ldr	r3, [r7, #20]
 80148b4:	4413      	add	r3, r2
 80148b6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80148ba:	460a      	mov	r2, r1
 80148bc:	615a      	str	r2, [r3, #20]
 80148be:	693b      	ldr	r3, [r7, #16]
 80148c0:	015a      	lsls	r2, r3, #5
 80148c2:	697b      	ldr	r3, [r7, #20]
 80148c4:	4413      	add	r3, r2
 80148c6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80148ca:	681b      	ldr	r3, [r3, #0]
 80148cc:	693a      	ldr	r2, [r7, #16]
 80148ce:	0151      	lsls	r1, r2, #5
 80148d0:	697a      	ldr	r2, [r7, #20]
 80148d2:	440a      	add	r2, r1
 80148d4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80148d8:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 80148dc:	6013      	str	r3, [r2, #0]
 80148de:	2300      	movs	r3, #0
 80148e0:	4618      	mov	r0, r3
 80148e2:	371c      	adds	r7, #28
 80148e4:	46bd      	mov	sp, r7
 80148e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80148ea:	4770      	bx	lr

080148ec <USB_EPStopXfer>:
 80148ec:	b480      	push	{r7}
 80148ee:	b087      	sub	sp, #28
 80148f0:	af00      	add	r7, sp, #0
 80148f2:	6078      	str	r0, [r7, #4]
 80148f4:	6039      	str	r1, [r7, #0]
 80148f6:	2300      	movs	r3, #0
 80148f8:	60fb      	str	r3, [r7, #12]
 80148fa:	2300      	movs	r3, #0
 80148fc:	75fb      	strb	r3, [r7, #23]
 80148fe:	687b      	ldr	r3, [r7, #4]
 8014900:	613b      	str	r3, [r7, #16]
 8014902:	683b      	ldr	r3, [r7, #0]
 8014904:	785b      	ldrb	r3, [r3, #1]
 8014906:	2b01      	cmp	r3, #1
 8014908:	d14a      	bne.n	80149a0 <USB_EPStopXfer+0xb4>
 801490a:	683b      	ldr	r3, [r7, #0]
 801490c:	781b      	ldrb	r3, [r3, #0]
 801490e:	015a      	lsls	r2, r3, #5
 8014910:	693b      	ldr	r3, [r7, #16]
 8014912:	4413      	add	r3, r2
 8014914:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014918:	681b      	ldr	r3, [r3, #0]
 801491a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 801491e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014922:	f040 8086 	bne.w	8014a32 <USB_EPStopXfer+0x146>
 8014926:	683b      	ldr	r3, [r7, #0]
 8014928:	781b      	ldrb	r3, [r3, #0]
 801492a:	015a      	lsls	r2, r3, #5
 801492c:	693b      	ldr	r3, [r7, #16]
 801492e:	4413      	add	r3, r2
 8014930:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014934:	681b      	ldr	r3, [r3, #0]
 8014936:	683a      	ldr	r2, [r7, #0]
 8014938:	7812      	ldrb	r2, [r2, #0]
 801493a:	0151      	lsls	r1, r2, #5
 801493c:	693a      	ldr	r2, [r7, #16]
 801493e:	440a      	add	r2, r1
 8014940:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014944:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8014948:	6013      	str	r3, [r2, #0]
 801494a:	683b      	ldr	r3, [r7, #0]
 801494c:	781b      	ldrb	r3, [r3, #0]
 801494e:	015a      	lsls	r2, r3, #5
 8014950:	693b      	ldr	r3, [r7, #16]
 8014952:	4413      	add	r3, r2
 8014954:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014958:	681b      	ldr	r3, [r3, #0]
 801495a:	683a      	ldr	r2, [r7, #0]
 801495c:	7812      	ldrb	r2, [r2, #0]
 801495e:	0151      	lsls	r1, r2, #5
 8014960:	693a      	ldr	r2, [r7, #16]
 8014962:	440a      	add	r2, r1
 8014964:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014968:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 801496c:	6013      	str	r3, [r2, #0]
 801496e:	68fb      	ldr	r3, [r7, #12]
 8014970:	3301      	adds	r3, #1
 8014972:	60fb      	str	r3, [r7, #12]
 8014974:	68fb      	ldr	r3, [r7, #12]
 8014976:	f242 7210 	movw	r2, #10000	@ 0x2710
 801497a:	4293      	cmp	r3, r2
 801497c:	d902      	bls.n	8014984 <USB_EPStopXfer+0x98>
 801497e:	2301      	movs	r3, #1
 8014980:	75fb      	strb	r3, [r7, #23]
 8014982:	e056      	b.n	8014a32 <USB_EPStopXfer+0x146>
 8014984:	683b      	ldr	r3, [r7, #0]
 8014986:	781b      	ldrb	r3, [r3, #0]
 8014988:	015a      	lsls	r2, r3, #5
 801498a:	693b      	ldr	r3, [r7, #16]
 801498c:	4413      	add	r3, r2
 801498e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014992:	681b      	ldr	r3, [r3, #0]
 8014994:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014998:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 801499c:	d0e7      	beq.n	801496e <USB_EPStopXfer+0x82>
 801499e:	e048      	b.n	8014a32 <USB_EPStopXfer+0x146>
 80149a0:	683b      	ldr	r3, [r7, #0]
 80149a2:	781b      	ldrb	r3, [r3, #0]
 80149a4:	015a      	lsls	r2, r3, #5
 80149a6:	693b      	ldr	r3, [r7, #16]
 80149a8:	4413      	add	r3, r2
 80149aa:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80149ae:	681b      	ldr	r3, [r3, #0]
 80149b0:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80149b4:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80149b8:	d13b      	bne.n	8014a32 <USB_EPStopXfer+0x146>
 80149ba:	683b      	ldr	r3, [r7, #0]
 80149bc:	781b      	ldrb	r3, [r3, #0]
 80149be:	015a      	lsls	r2, r3, #5
 80149c0:	693b      	ldr	r3, [r7, #16]
 80149c2:	4413      	add	r3, r2
 80149c4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80149c8:	681b      	ldr	r3, [r3, #0]
 80149ca:	683a      	ldr	r2, [r7, #0]
 80149cc:	7812      	ldrb	r2, [r2, #0]
 80149ce:	0151      	lsls	r1, r2, #5
 80149d0:	693a      	ldr	r2, [r7, #16]
 80149d2:	440a      	add	r2, r1
 80149d4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80149d8:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80149dc:	6013      	str	r3, [r2, #0]
 80149de:	683b      	ldr	r3, [r7, #0]
 80149e0:	781b      	ldrb	r3, [r3, #0]
 80149e2:	015a      	lsls	r2, r3, #5
 80149e4:	693b      	ldr	r3, [r7, #16]
 80149e6:	4413      	add	r3, r2
 80149e8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80149ec:	681b      	ldr	r3, [r3, #0]
 80149ee:	683a      	ldr	r2, [r7, #0]
 80149f0:	7812      	ldrb	r2, [r2, #0]
 80149f2:	0151      	lsls	r1, r2, #5
 80149f4:	693a      	ldr	r2, [r7, #16]
 80149f6:	440a      	add	r2, r1
 80149f8:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80149fc:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8014a00:	6013      	str	r3, [r2, #0]
 8014a02:	68fb      	ldr	r3, [r7, #12]
 8014a04:	3301      	adds	r3, #1
 8014a06:	60fb      	str	r3, [r7, #12]
 8014a08:	68fb      	ldr	r3, [r7, #12]
 8014a0a:	f242 7210 	movw	r2, #10000	@ 0x2710
 8014a0e:	4293      	cmp	r3, r2
 8014a10:	d902      	bls.n	8014a18 <USB_EPStopXfer+0x12c>
 8014a12:	2301      	movs	r3, #1
 8014a14:	75fb      	strb	r3, [r7, #23]
 8014a16:	e00c      	b.n	8014a32 <USB_EPStopXfer+0x146>
 8014a18:	683b      	ldr	r3, [r7, #0]
 8014a1a:	781b      	ldrb	r3, [r3, #0]
 8014a1c:	015a      	lsls	r2, r3, #5
 8014a1e:	693b      	ldr	r3, [r7, #16]
 8014a20:	4413      	add	r3, r2
 8014a22:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014a26:	681b      	ldr	r3, [r3, #0]
 8014a28:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014a2c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014a30:	d0e7      	beq.n	8014a02 <USB_EPStopXfer+0x116>
 8014a32:	7dfb      	ldrb	r3, [r7, #23]
 8014a34:	4618      	mov	r0, r3
 8014a36:	371c      	adds	r7, #28
 8014a38:	46bd      	mov	sp, r7
 8014a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014a3e:	4770      	bx	lr

08014a40 <USB_WritePacket>:
 8014a40:	b480      	push	{r7}
 8014a42:	b089      	sub	sp, #36	@ 0x24
 8014a44:	af00      	add	r7, sp, #0
 8014a46:	60f8      	str	r0, [r7, #12]
 8014a48:	60b9      	str	r1, [r7, #8]
 8014a4a:	4611      	mov	r1, r2
 8014a4c:	461a      	mov	r2, r3
 8014a4e:	460b      	mov	r3, r1
 8014a50:	71fb      	strb	r3, [r7, #7]
 8014a52:	4613      	mov	r3, r2
 8014a54:	80bb      	strh	r3, [r7, #4]
 8014a56:	68fb      	ldr	r3, [r7, #12]
 8014a58:	617b      	str	r3, [r7, #20]
 8014a5a:	68bb      	ldr	r3, [r7, #8]
 8014a5c:	61fb      	str	r3, [r7, #28]
 8014a5e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8014a62:	2b00      	cmp	r3, #0
 8014a64:	d123      	bne.n	8014aae <USB_WritePacket+0x6e>
 8014a66:	88bb      	ldrh	r3, [r7, #4]
 8014a68:	3303      	adds	r3, #3
 8014a6a:	089b      	lsrs	r3, r3, #2
 8014a6c:	613b      	str	r3, [r7, #16]
 8014a6e:	2300      	movs	r3, #0
 8014a70:	61bb      	str	r3, [r7, #24]
 8014a72:	e018      	b.n	8014aa6 <USB_WritePacket+0x66>
 8014a74:	79fb      	ldrb	r3, [r7, #7]
 8014a76:	031a      	lsls	r2, r3, #12
 8014a78:	697b      	ldr	r3, [r7, #20]
 8014a7a:	4413      	add	r3, r2
 8014a7c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014a80:	461a      	mov	r2, r3
 8014a82:	69fb      	ldr	r3, [r7, #28]
 8014a84:	681b      	ldr	r3, [r3, #0]
 8014a86:	6013      	str	r3, [r2, #0]
 8014a88:	69fb      	ldr	r3, [r7, #28]
 8014a8a:	3301      	adds	r3, #1
 8014a8c:	61fb      	str	r3, [r7, #28]
 8014a8e:	69fb      	ldr	r3, [r7, #28]
 8014a90:	3301      	adds	r3, #1
 8014a92:	61fb      	str	r3, [r7, #28]
 8014a94:	69fb      	ldr	r3, [r7, #28]
 8014a96:	3301      	adds	r3, #1
 8014a98:	61fb      	str	r3, [r7, #28]
 8014a9a:	69fb      	ldr	r3, [r7, #28]
 8014a9c:	3301      	adds	r3, #1
 8014a9e:	61fb      	str	r3, [r7, #28]
 8014aa0:	69bb      	ldr	r3, [r7, #24]
 8014aa2:	3301      	adds	r3, #1
 8014aa4:	61bb      	str	r3, [r7, #24]
 8014aa6:	69ba      	ldr	r2, [r7, #24]
 8014aa8:	693b      	ldr	r3, [r7, #16]
 8014aaa:	429a      	cmp	r2, r3
 8014aac:	d3e2      	bcc.n	8014a74 <USB_WritePacket+0x34>
 8014aae:	2300      	movs	r3, #0
 8014ab0:	4618      	mov	r0, r3
 8014ab2:	3724      	adds	r7, #36	@ 0x24
 8014ab4:	46bd      	mov	sp, r7
 8014ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014aba:	4770      	bx	lr

08014abc <USB_ReadPacket>:
 8014abc:	b480      	push	{r7}
 8014abe:	b08b      	sub	sp, #44	@ 0x2c
 8014ac0:	af00      	add	r7, sp, #0
 8014ac2:	60f8      	str	r0, [r7, #12]
 8014ac4:	60b9      	str	r1, [r7, #8]
 8014ac6:	4613      	mov	r3, r2
 8014ac8:	80fb      	strh	r3, [r7, #6]
 8014aca:	68fb      	ldr	r3, [r7, #12]
 8014acc:	61bb      	str	r3, [r7, #24]
 8014ace:	68bb      	ldr	r3, [r7, #8]
 8014ad0:	627b      	str	r3, [r7, #36]	@ 0x24
 8014ad2:	88fb      	ldrh	r3, [r7, #6]
 8014ad4:	089b      	lsrs	r3, r3, #2
 8014ad6:	b29b      	uxth	r3, r3
 8014ad8:	617b      	str	r3, [r7, #20]
 8014ada:	88fb      	ldrh	r3, [r7, #6]
 8014adc:	f003 0303 	and.w	r3, r3, #3
 8014ae0:	83fb      	strh	r3, [r7, #30]
 8014ae2:	2300      	movs	r3, #0
 8014ae4:	623b      	str	r3, [r7, #32]
 8014ae6:	e014      	b.n	8014b12 <USB_ReadPacket+0x56>
 8014ae8:	69bb      	ldr	r3, [r7, #24]
 8014aea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014aee:	681a      	ldr	r2, [r3, #0]
 8014af0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014af2:	601a      	str	r2, [r3, #0]
 8014af4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014af6:	3301      	adds	r3, #1
 8014af8:	627b      	str	r3, [r7, #36]	@ 0x24
 8014afa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014afc:	3301      	adds	r3, #1
 8014afe:	627b      	str	r3, [r7, #36]	@ 0x24
 8014b00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014b02:	3301      	adds	r3, #1
 8014b04:	627b      	str	r3, [r7, #36]	@ 0x24
 8014b06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014b08:	3301      	adds	r3, #1
 8014b0a:	627b      	str	r3, [r7, #36]	@ 0x24
 8014b0c:	6a3b      	ldr	r3, [r7, #32]
 8014b0e:	3301      	adds	r3, #1
 8014b10:	623b      	str	r3, [r7, #32]
 8014b12:	6a3a      	ldr	r2, [r7, #32]
 8014b14:	697b      	ldr	r3, [r7, #20]
 8014b16:	429a      	cmp	r2, r3
 8014b18:	d3e6      	bcc.n	8014ae8 <USB_ReadPacket+0x2c>
 8014b1a:	8bfb      	ldrh	r3, [r7, #30]
 8014b1c:	2b00      	cmp	r3, #0
 8014b1e:	d01e      	beq.n	8014b5e <USB_ReadPacket+0xa2>
 8014b20:	2300      	movs	r3, #0
 8014b22:	623b      	str	r3, [r7, #32]
 8014b24:	69bb      	ldr	r3, [r7, #24]
 8014b26:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8014b2a:	461a      	mov	r2, r3
 8014b2c:	f107 0310 	add.w	r3, r7, #16
 8014b30:	6812      	ldr	r2, [r2, #0]
 8014b32:	601a      	str	r2, [r3, #0]
 8014b34:	693a      	ldr	r2, [r7, #16]
 8014b36:	6a3b      	ldr	r3, [r7, #32]
 8014b38:	b2db      	uxtb	r3, r3
 8014b3a:	00db      	lsls	r3, r3, #3
 8014b3c:	fa22 f303 	lsr.w	r3, r2, r3
 8014b40:	b2da      	uxtb	r2, r3
 8014b42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014b44:	701a      	strb	r2, [r3, #0]
 8014b46:	6a3b      	ldr	r3, [r7, #32]
 8014b48:	3301      	adds	r3, #1
 8014b4a:	623b      	str	r3, [r7, #32]
 8014b4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014b4e:	3301      	adds	r3, #1
 8014b50:	627b      	str	r3, [r7, #36]	@ 0x24
 8014b52:	8bfb      	ldrh	r3, [r7, #30]
 8014b54:	3b01      	subs	r3, #1
 8014b56:	83fb      	strh	r3, [r7, #30]
 8014b58:	8bfb      	ldrh	r3, [r7, #30]
 8014b5a:	2b00      	cmp	r3, #0
 8014b5c:	d1ea      	bne.n	8014b34 <USB_ReadPacket+0x78>
 8014b5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8014b60:	4618      	mov	r0, r3
 8014b62:	372c      	adds	r7, #44	@ 0x2c
 8014b64:	46bd      	mov	sp, r7
 8014b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b6a:	4770      	bx	lr

08014b6c <USB_EPSetStall>:
 8014b6c:	b480      	push	{r7}
 8014b6e:	b085      	sub	sp, #20
 8014b70:	af00      	add	r7, sp, #0
 8014b72:	6078      	str	r0, [r7, #4]
 8014b74:	6039      	str	r1, [r7, #0]
 8014b76:	687b      	ldr	r3, [r7, #4]
 8014b78:	60fb      	str	r3, [r7, #12]
 8014b7a:	683b      	ldr	r3, [r7, #0]
 8014b7c:	781b      	ldrb	r3, [r3, #0]
 8014b7e:	60bb      	str	r3, [r7, #8]
 8014b80:	683b      	ldr	r3, [r7, #0]
 8014b82:	785b      	ldrb	r3, [r3, #1]
 8014b84:	2b01      	cmp	r3, #1
 8014b86:	d12c      	bne.n	8014be2 <USB_EPSetStall+0x76>
 8014b88:	68bb      	ldr	r3, [r7, #8]
 8014b8a:	015a      	lsls	r2, r3, #5
 8014b8c:	68fb      	ldr	r3, [r7, #12]
 8014b8e:	4413      	add	r3, r2
 8014b90:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014b94:	681b      	ldr	r3, [r3, #0]
 8014b96:	2b00      	cmp	r3, #0
 8014b98:	db12      	blt.n	8014bc0 <USB_EPSetStall+0x54>
 8014b9a:	68bb      	ldr	r3, [r7, #8]
 8014b9c:	2b00      	cmp	r3, #0
 8014b9e:	d00f      	beq.n	8014bc0 <USB_EPSetStall+0x54>
 8014ba0:	68bb      	ldr	r3, [r7, #8]
 8014ba2:	015a      	lsls	r2, r3, #5
 8014ba4:	68fb      	ldr	r3, [r7, #12]
 8014ba6:	4413      	add	r3, r2
 8014ba8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014bac:	681b      	ldr	r3, [r3, #0]
 8014bae:	68ba      	ldr	r2, [r7, #8]
 8014bb0:	0151      	lsls	r1, r2, #5
 8014bb2:	68fa      	ldr	r2, [r7, #12]
 8014bb4:	440a      	add	r2, r1
 8014bb6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014bba:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8014bbe:	6013      	str	r3, [r2, #0]
 8014bc0:	68bb      	ldr	r3, [r7, #8]
 8014bc2:	015a      	lsls	r2, r3, #5
 8014bc4:	68fb      	ldr	r3, [r7, #12]
 8014bc6:	4413      	add	r3, r2
 8014bc8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014bcc:	681b      	ldr	r3, [r3, #0]
 8014bce:	68ba      	ldr	r2, [r7, #8]
 8014bd0:	0151      	lsls	r1, r2, #5
 8014bd2:	68fa      	ldr	r2, [r7, #12]
 8014bd4:	440a      	add	r2, r1
 8014bd6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014bda:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8014bde:	6013      	str	r3, [r2, #0]
 8014be0:	e02b      	b.n	8014c3a <USB_EPSetStall+0xce>
 8014be2:	68bb      	ldr	r3, [r7, #8]
 8014be4:	015a      	lsls	r2, r3, #5
 8014be6:	68fb      	ldr	r3, [r7, #12]
 8014be8:	4413      	add	r3, r2
 8014bea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014bee:	681b      	ldr	r3, [r3, #0]
 8014bf0:	2b00      	cmp	r3, #0
 8014bf2:	db12      	blt.n	8014c1a <USB_EPSetStall+0xae>
 8014bf4:	68bb      	ldr	r3, [r7, #8]
 8014bf6:	2b00      	cmp	r3, #0
 8014bf8:	d00f      	beq.n	8014c1a <USB_EPSetStall+0xae>
 8014bfa:	68bb      	ldr	r3, [r7, #8]
 8014bfc:	015a      	lsls	r2, r3, #5
 8014bfe:	68fb      	ldr	r3, [r7, #12]
 8014c00:	4413      	add	r3, r2
 8014c02:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014c06:	681b      	ldr	r3, [r3, #0]
 8014c08:	68ba      	ldr	r2, [r7, #8]
 8014c0a:	0151      	lsls	r1, r2, #5
 8014c0c:	68fa      	ldr	r2, [r7, #12]
 8014c0e:	440a      	add	r2, r1
 8014c10:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014c14:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8014c18:	6013      	str	r3, [r2, #0]
 8014c1a:	68bb      	ldr	r3, [r7, #8]
 8014c1c:	015a      	lsls	r2, r3, #5
 8014c1e:	68fb      	ldr	r3, [r7, #12]
 8014c20:	4413      	add	r3, r2
 8014c22:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014c26:	681b      	ldr	r3, [r3, #0]
 8014c28:	68ba      	ldr	r2, [r7, #8]
 8014c2a:	0151      	lsls	r1, r2, #5
 8014c2c:	68fa      	ldr	r2, [r7, #12]
 8014c2e:	440a      	add	r2, r1
 8014c30:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014c34:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8014c38:	6013      	str	r3, [r2, #0]
 8014c3a:	2300      	movs	r3, #0
 8014c3c:	4618      	mov	r0, r3
 8014c3e:	3714      	adds	r7, #20
 8014c40:	46bd      	mov	sp, r7
 8014c42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c46:	4770      	bx	lr

08014c48 <USB_EPClearStall>:
 8014c48:	b480      	push	{r7}
 8014c4a:	b085      	sub	sp, #20
 8014c4c:	af00      	add	r7, sp, #0
 8014c4e:	6078      	str	r0, [r7, #4]
 8014c50:	6039      	str	r1, [r7, #0]
 8014c52:	687b      	ldr	r3, [r7, #4]
 8014c54:	60fb      	str	r3, [r7, #12]
 8014c56:	683b      	ldr	r3, [r7, #0]
 8014c58:	781b      	ldrb	r3, [r3, #0]
 8014c5a:	60bb      	str	r3, [r7, #8]
 8014c5c:	683b      	ldr	r3, [r7, #0]
 8014c5e:	785b      	ldrb	r3, [r3, #1]
 8014c60:	2b01      	cmp	r3, #1
 8014c62:	d128      	bne.n	8014cb6 <USB_EPClearStall+0x6e>
 8014c64:	68bb      	ldr	r3, [r7, #8]
 8014c66:	015a      	lsls	r2, r3, #5
 8014c68:	68fb      	ldr	r3, [r7, #12]
 8014c6a:	4413      	add	r3, r2
 8014c6c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014c70:	681b      	ldr	r3, [r3, #0]
 8014c72:	68ba      	ldr	r2, [r7, #8]
 8014c74:	0151      	lsls	r1, r2, #5
 8014c76:	68fa      	ldr	r2, [r7, #12]
 8014c78:	440a      	add	r2, r1
 8014c7a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014c7e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8014c82:	6013      	str	r3, [r2, #0]
 8014c84:	683b      	ldr	r3, [r7, #0]
 8014c86:	791b      	ldrb	r3, [r3, #4]
 8014c88:	2b03      	cmp	r3, #3
 8014c8a:	d003      	beq.n	8014c94 <USB_EPClearStall+0x4c>
 8014c8c:	683b      	ldr	r3, [r7, #0]
 8014c8e:	791b      	ldrb	r3, [r3, #4]
 8014c90:	2b02      	cmp	r3, #2
 8014c92:	d138      	bne.n	8014d06 <USB_EPClearStall+0xbe>
 8014c94:	68bb      	ldr	r3, [r7, #8]
 8014c96:	015a      	lsls	r2, r3, #5
 8014c98:	68fb      	ldr	r3, [r7, #12]
 8014c9a:	4413      	add	r3, r2
 8014c9c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014ca0:	681b      	ldr	r3, [r3, #0]
 8014ca2:	68ba      	ldr	r2, [r7, #8]
 8014ca4:	0151      	lsls	r1, r2, #5
 8014ca6:	68fa      	ldr	r2, [r7, #12]
 8014ca8:	440a      	add	r2, r1
 8014caa:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014cae:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014cb2:	6013      	str	r3, [r2, #0]
 8014cb4:	e027      	b.n	8014d06 <USB_EPClearStall+0xbe>
 8014cb6:	68bb      	ldr	r3, [r7, #8]
 8014cb8:	015a      	lsls	r2, r3, #5
 8014cba:	68fb      	ldr	r3, [r7, #12]
 8014cbc:	4413      	add	r3, r2
 8014cbe:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014cc2:	681b      	ldr	r3, [r3, #0]
 8014cc4:	68ba      	ldr	r2, [r7, #8]
 8014cc6:	0151      	lsls	r1, r2, #5
 8014cc8:	68fa      	ldr	r2, [r7, #12]
 8014cca:	440a      	add	r2, r1
 8014ccc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014cd0:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8014cd4:	6013      	str	r3, [r2, #0]
 8014cd6:	683b      	ldr	r3, [r7, #0]
 8014cd8:	791b      	ldrb	r3, [r3, #4]
 8014cda:	2b03      	cmp	r3, #3
 8014cdc:	d003      	beq.n	8014ce6 <USB_EPClearStall+0x9e>
 8014cde:	683b      	ldr	r3, [r7, #0]
 8014ce0:	791b      	ldrb	r3, [r3, #4]
 8014ce2:	2b02      	cmp	r3, #2
 8014ce4:	d10f      	bne.n	8014d06 <USB_EPClearStall+0xbe>
 8014ce6:	68bb      	ldr	r3, [r7, #8]
 8014ce8:	015a      	lsls	r2, r3, #5
 8014cea:	68fb      	ldr	r3, [r7, #12]
 8014cec:	4413      	add	r3, r2
 8014cee:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014cf2:	681b      	ldr	r3, [r3, #0]
 8014cf4:	68ba      	ldr	r2, [r7, #8]
 8014cf6:	0151      	lsls	r1, r2, #5
 8014cf8:	68fa      	ldr	r2, [r7, #12]
 8014cfa:	440a      	add	r2, r1
 8014cfc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014d00:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8014d04:	6013      	str	r3, [r2, #0]
 8014d06:	2300      	movs	r3, #0
 8014d08:	4618      	mov	r0, r3
 8014d0a:	3714      	adds	r7, #20
 8014d0c:	46bd      	mov	sp, r7
 8014d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d12:	4770      	bx	lr

08014d14 <USB_SetDevAddress>:
 8014d14:	b480      	push	{r7}
 8014d16:	b085      	sub	sp, #20
 8014d18:	af00      	add	r7, sp, #0
 8014d1a:	6078      	str	r0, [r7, #4]
 8014d1c:	460b      	mov	r3, r1
 8014d1e:	70fb      	strb	r3, [r7, #3]
 8014d20:	687b      	ldr	r3, [r7, #4]
 8014d22:	60fb      	str	r3, [r7, #12]
 8014d24:	68fb      	ldr	r3, [r7, #12]
 8014d26:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014d2a:	681b      	ldr	r3, [r3, #0]
 8014d2c:	68fa      	ldr	r2, [r7, #12]
 8014d2e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014d32:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8014d36:	6013      	str	r3, [r2, #0]
 8014d38:	68fb      	ldr	r3, [r7, #12]
 8014d3a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014d3e:	681a      	ldr	r2, [r3, #0]
 8014d40:	78fb      	ldrb	r3, [r7, #3]
 8014d42:	011b      	lsls	r3, r3, #4
 8014d44:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 8014d48:	68f9      	ldr	r1, [r7, #12]
 8014d4a:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8014d4e:	4313      	orrs	r3, r2
 8014d50:	600b      	str	r3, [r1, #0]
 8014d52:	2300      	movs	r3, #0
 8014d54:	4618      	mov	r0, r3
 8014d56:	3714      	adds	r7, #20
 8014d58:	46bd      	mov	sp, r7
 8014d5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d5e:	4770      	bx	lr

08014d60 <USB_DevConnect>:
 8014d60:	b480      	push	{r7}
 8014d62:	b085      	sub	sp, #20
 8014d64:	af00      	add	r7, sp, #0
 8014d66:	6078      	str	r0, [r7, #4]
 8014d68:	687b      	ldr	r3, [r7, #4]
 8014d6a:	60fb      	str	r3, [r7, #12]
 8014d6c:	68fb      	ldr	r3, [r7, #12]
 8014d6e:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8014d72:	681b      	ldr	r3, [r3, #0]
 8014d74:	68fa      	ldr	r2, [r7, #12]
 8014d76:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8014d7a:	f023 0303 	bic.w	r3, r3, #3
 8014d7e:	6013      	str	r3, [r2, #0]
 8014d80:	68fb      	ldr	r3, [r7, #12]
 8014d82:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014d86:	685b      	ldr	r3, [r3, #4]
 8014d88:	68fa      	ldr	r2, [r7, #12]
 8014d8a:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014d8e:	f023 0302 	bic.w	r3, r3, #2
 8014d92:	6053      	str	r3, [r2, #4]
 8014d94:	2300      	movs	r3, #0
 8014d96:	4618      	mov	r0, r3
 8014d98:	3714      	adds	r7, #20
 8014d9a:	46bd      	mov	sp, r7
 8014d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014da0:	4770      	bx	lr

08014da2 <USB_DevDisconnect>:
 8014da2:	b480      	push	{r7}
 8014da4:	b085      	sub	sp, #20
 8014da6:	af00      	add	r7, sp, #0
 8014da8:	6078      	str	r0, [r7, #4]
 8014daa:	687b      	ldr	r3, [r7, #4]
 8014dac:	60fb      	str	r3, [r7, #12]
 8014dae:	68fb      	ldr	r3, [r7, #12]
 8014db0:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8014db4:	681b      	ldr	r3, [r3, #0]
 8014db6:	68fa      	ldr	r2, [r7, #12]
 8014db8:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 8014dbc:	f023 0303 	bic.w	r3, r3, #3
 8014dc0:	6013      	str	r3, [r2, #0]
 8014dc2:	68fb      	ldr	r3, [r7, #12]
 8014dc4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014dc8:	685b      	ldr	r3, [r3, #4]
 8014dca:	68fa      	ldr	r2, [r7, #12]
 8014dcc:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014dd0:	f043 0302 	orr.w	r3, r3, #2
 8014dd4:	6053      	str	r3, [r2, #4]
 8014dd6:	2300      	movs	r3, #0
 8014dd8:	4618      	mov	r0, r3
 8014dda:	3714      	adds	r7, #20
 8014ddc:	46bd      	mov	sp, r7
 8014dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014de2:	4770      	bx	lr

08014de4 <USB_ReadInterrupts>:
 8014de4:	b480      	push	{r7}
 8014de6:	b085      	sub	sp, #20
 8014de8:	af00      	add	r7, sp, #0
 8014dea:	6078      	str	r0, [r7, #4]
 8014dec:	687b      	ldr	r3, [r7, #4]
 8014dee:	695b      	ldr	r3, [r3, #20]
 8014df0:	60fb      	str	r3, [r7, #12]
 8014df2:	687b      	ldr	r3, [r7, #4]
 8014df4:	699b      	ldr	r3, [r3, #24]
 8014df6:	68fa      	ldr	r2, [r7, #12]
 8014df8:	4013      	ands	r3, r2
 8014dfa:	60fb      	str	r3, [r7, #12]
 8014dfc:	68fb      	ldr	r3, [r7, #12]
 8014dfe:	4618      	mov	r0, r3
 8014e00:	3714      	adds	r7, #20
 8014e02:	46bd      	mov	sp, r7
 8014e04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e08:	4770      	bx	lr

08014e0a <USB_ReadDevAllOutEpInterrupt>:
 8014e0a:	b480      	push	{r7}
 8014e0c:	b085      	sub	sp, #20
 8014e0e:	af00      	add	r7, sp, #0
 8014e10:	6078      	str	r0, [r7, #4]
 8014e12:	687b      	ldr	r3, [r7, #4]
 8014e14:	60fb      	str	r3, [r7, #12]
 8014e16:	68fb      	ldr	r3, [r7, #12]
 8014e18:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e1c:	699b      	ldr	r3, [r3, #24]
 8014e1e:	60bb      	str	r3, [r7, #8]
 8014e20:	68fb      	ldr	r3, [r7, #12]
 8014e22:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e26:	69db      	ldr	r3, [r3, #28]
 8014e28:	68ba      	ldr	r2, [r7, #8]
 8014e2a:	4013      	ands	r3, r2
 8014e2c:	60bb      	str	r3, [r7, #8]
 8014e2e:	68bb      	ldr	r3, [r7, #8]
 8014e30:	0c1b      	lsrs	r3, r3, #16
 8014e32:	4618      	mov	r0, r3
 8014e34:	3714      	adds	r7, #20
 8014e36:	46bd      	mov	sp, r7
 8014e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e3c:	4770      	bx	lr

08014e3e <USB_ReadDevAllInEpInterrupt>:
 8014e3e:	b480      	push	{r7}
 8014e40:	b085      	sub	sp, #20
 8014e42:	af00      	add	r7, sp, #0
 8014e44:	6078      	str	r0, [r7, #4]
 8014e46:	687b      	ldr	r3, [r7, #4]
 8014e48:	60fb      	str	r3, [r7, #12]
 8014e4a:	68fb      	ldr	r3, [r7, #12]
 8014e4c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e50:	699b      	ldr	r3, [r3, #24]
 8014e52:	60bb      	str	r3, [r7, #8]
 8014e54:	68fb      	ldr	r3, [r7, #12]
 8014e56:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e5a:	69db      	ldr	r3, [r3, #28]
 8014e5c:	68ba      	ldr	r2, [r7, #8]
 8014e5e:	4013      	ands	r3, r2
 8014e60:	60bb      	str	r3, [r7, #8]
 8014e62:	68bb      	ldr	r3, [r7, #8]
 8014e64:	b29b      	uxth	r3, r3
 8014e66:	4618      	mov	r0, r3
 8014e68:	3714      	adds	r7, #20
 8014e6a:	46bd      	mov	sp, r7
 8014e6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e70:	4770      	bx	lr

08014e72 <USB_ReadDevOutEPInterrupt>:
 8014e72:	b480      	push	{r7}
 8014e74:	b085      	sub	sp, #20
 8014e76:	af00      	add	r7, sp, #0
 8014e78:	6078      	str	r0, [r7, #4]
 8014e7a:	460b      	mov	r3, r1
 8014e7c:	70fb      	strb	r3, [r7, #3]
 8014e7e:	687b      	ldr	r3, [r7, #4]
 8014e80:	60fb      	str	r3, [r7, #12]
 8014e82:	78fb      	ldrb	r3, [r7, #3]
 8014e84:	015a      	lsls	r2, r3, #5
 8014e86:	68fb      	ldr	r3, [r7, #12]
 8014e88:	4413      	add	r3, r2
 8014e8a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014e8e:	689b      	ldr	r3, [r3, #8]
 8014e90:	60bb      	str	r3, [r7, #8]
 8014e92:	68fb      	ldr	r3, [r7, #12]
 8014e94:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014e98:	695b      	ldr	r3, [r3, #20]
 8014e9a:	68ba      	ldr	r2, [r7, #8]
 8014e9c:	4013      	ands	r3, r2
 8014e9e:	60bb      	str	r3, [r7, #8]
 8014ea0:	68bb      	ldr	r3, [r7, #8]
 8014ea2:	4618      	mov	r0, r3
 8014ea4:	3714      	adds	r7, #20
 8014ea6:	46bd      	mov	sp, r7
 8014ea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014eac:	4770      	bx	lr

08014eae <USB_ReadDevInEPInterrupt>:
 8014eae:	b480      	push	{r7}
 8014eb0:	b087      	sub	sp, #28
 8014eb2:	af00      	add	r7, sp, #0
 8014eb4:	6078      	str	r0, [r7, #4]
 8014eb6:	460b      	mov	r3, r1
 8014eb8:	70fb      	strb	r3, [r7, #3]
 8014eba:	687b      	ldr	r3, [r7, #4]
 8014ebc:	617b      	str	r3, [r7, #20]
 8014ebe:	697b      	ldr	r3, [r7, #20]
 8014ec0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014ec4:	691b      	ldr	r3, [r3, #16]
 8014ec6:	613b      	str	r3, [r7, #16]
 8014ec8:	697b      	ldr	r3, [r7, #20]
 8014eca:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014ece:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014ed0:	60fb      	str	r3, [r7, #12]
 8014ed2:	78fb      	ldrb	r3, [r7, #3]
 8014ed4:	f003 030f 	and.w	r3, r3, #15
 8014ed8:	68fa      	ldr	r2, [r7, #12]
 8014eda:	fa22 f303 	lsr.w	r3, r2, r3
 8014ede:	01db      	lsls	r3, r3, #7
 8014ee0:	b2db      	uxtb	r3, r3
 8014ee2:	693a      	ldr	r2, [r7, #16]
 8014ee4:	4313      	orrs	r3, r2
 8014ee6:	613b      	str	r3, [r7, #16]
 8014ee8:	78fb      	ldrb	r3, [r7, #3]
 8014eea:	015a      	lsls	r2, r3, #5
 8014eec:	697b      	ldr	r3, [r7, #20]
 8014eee:	4413      	add	r3, r2
 8014ef0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014ef4:	689b      	ldr	r3, [r3, #8]
 8014ef6:	693a      	ldr	r2, [r7, #16]
 8014ef8:	4013      	ands	r3, r2
 8014efa:	60bb      	str	r3, [r7, #8]
 8014efc:	68bb      	ldr	r3, [r7, #8]
 8014efe:	4618      	mov	r0, r3
 8014f00:	371c      	adds	r7, #28
 8014f02:	46bd      	mov	sp, r7
 8014f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f08:	4770      	bx	lr

08014f0a <USB_GetMode>:
 8014f0a:	b480      	push	{r7}
 8014f0c:	b083      	sub	sp, #12
 8014f0e:	af00      	add	r7, sp, #0
 8014f10:	6078      	str	r0, [r7, #4]
 8014f12:	687b      	ldr	r3, [r7, #4]
 8014f14:	695b      	ldr	r3, [r3, #20]
 8014f16:	f003 0301 	and.w	r3, r3, #1
 8014f1a:	4618      	mov	r0, r3
 8014f1c:	370c      	adds	r7, #12
 8014f1e:	46bd      	mov	sp, r7
 8014f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f24:	4770      	bx	lr

08014f26 <USB_ActivateSetup>:
 8014f26:	b480      	push	{r7}
 8014f28:	b085      	sub	sp, #20
 8014f2a:	af00      	add	r7, sp, #0
 8014f2c:	6078      	str	r0, [r7, #4]
 8014f2e:	687b      	ldr	r3, [r7, #4]
 8014f30:	60fb      	str	r3, [r7, #12]
 8014f32:	68fb      	ldr	r3, [r7, #12]
 8014f34:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8014f38:	681b      	ldr	r3, [r3, #0]
 8014f3a:	68fa      	ldr	r2, [r7, #12]
 8014f3c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8014f40:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8014f44:	f023 0307 	bic.w	r3, r3, #7
 8014f48:	6013      	str	r3, [r2, #0]
 8014f4a:	68fb      	ldr	r3, [r7, #12]
 8014f4c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8014f50:	685b      	ldr	r3, [r3, #4]
 8014f52:	68fa      	ldr	r2, [r7, #12]
 8014f54:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8014f58:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8014f5c:	6053      	str	r3, [r2, #4]
 8014f5e:	2300      	movs	r3, #0
 8014f60:	4618      	mov	r0, r3
 8014f62:	3714      	adds	r7, #20
 8014f64:	46bd      	mov	sp, r7
 8014f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f6a:	4770      	bx	lr

08014f6c <USB_EP0_OutStart>:
 8014f6c:	b480      	push	{r7}
 8014f6e:	b087      	sub	sp, #28
 8014f70:	af00      	add	r7, sp, #0
 8014f72:	60f8      	str	r0, [r7, #12]
 8014f74:	460b      	mov	r3, r1
 8014f76:	607a      	str	r2, [r7, #4]
 8014f78:	72fb      	strb	r3, [r7, #11]
 8014f7a:	68fb      	ldr	r3, [r7, #12]
 8014f7c:	617b      	str	r3, [r7, #20]
 8014f7e:	68fb      	ldr	r3, [r7, #12]
 8014f80:	333c      	adds	r3, #60	@ 0x3c
 8014f82:	3304      	adds	r3, #4
 8014f84:	681b      	ldr	r3, [r3, #0]
 8014f86:	613b      	str	r3, [r7, #16]
 8014f88:	693b      	ldr	r3, [r7, #16]
 8014f8a:	4a26      	ldr	r2, [pc, #152]	@ (8015024 <USB_EP0_OutStart+0xb8>)
 8014f8c:	4293      	cmp	r3, r2
 8014f8e:	d90a      	bls.n	8014fa6 <USB_EP0_OutStart+0x3a>
 8014f90:	697b      	ldr	r3, [r7, #20]
 8014f92:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014f96:	681b      	ldr	r3, [r3, #0]
 8014f98:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8014f9c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8014fa0:	d101      	bne.n	8014fa6 <USB_EP0_OutStart+0x3a>
 8014fa2:	2300      	movs	r3, #0
 8014fa4:	e037      	b.n	8015016 <USB_EP0_OutStart+0xaa>
 8014fa6:	697b      	ldr	r3, [r7, #20]
 8014fa8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014fac:	461a      	mov	r2, r3
 8014fae:	2300      	movs	r3, #0
 8014fb0:	6113      	str	r3, [r2, #16]
 8014fb2:	697b      	ldr	r3, [r7, #20]
 8014fb4:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014fb8:	691b      	ldr	r3, [r3, #16]
 8014fba:	697a      	ldr	r2, [r7, #20]
 8014fbc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014fc0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8014fc4:	6113      	str	r3, [r2, #16]
 8014fc6:	697b      	ldr	r3, [r7, #20]
 8014fc8:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014fcc:	691b      	ldr	r3, [r3, #16]
 8014fce:	697a      	ldr	r2, [r7, #20]
 8014fd0:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014fd4:	f043 0318 	orr.w	r3, r3, #24
 8014fd8:	6113      	str	r3, [r2, #16]
 8014fda:	697b      	ldr	r3, [r7, #20]
 8014fdc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014fe0:	691b      	ldr	r3, [r3, #16]
 8014fe2:	697a      	ldr	r2, [r7, #20]
 8014fe4:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8014fe8:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 8014fec:	6113      	str	r3, [r2, #16]
 8014fee:	7afb      	ldrb	r3, [r7, #11]
 8014ff0:	2b01      	cmp	r3, #1
 8014ff2:	d10f      	bne.n	8015014 <USB_EP0_OutStart+0xa8>
 8014ff4:	697b      	ldr	r3, [r7, #20]
 8014ff6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8014ffa:	461a      	mov	r2, r3
 8014ffc:	687b      	ldr	r3, [r7, #4]
 8014ffe:	6153      	str	r3, [r2, #20]
 8015000:	697b      	ldr	r3, [r7, #20]
 8015002:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8015006:	681b      	ldr	r3, [r3, #0]
 8015008:	697a      	ldr	r2, [r7, #20]
 801500a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801500e:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 8015012:	6013      	str	r3, [r2, #0]
 8015014:	2300      	movs	r3, #0
 8015016:	4618      	mov	r0, r3
 8015018:	371c      	adds	r7, #28
 801501a:	46bd      	mov	sp, r7
 801501c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015020:	4770      	bx	lr
 8015022:	bf00      	nop
 8015024:	4f54300a 	.word	0x4f54300a

08015028 <USB_CoreReset>:
 8015028:	b480      	push	{r7}
 801502a:	b085      	sub	sp, #20
 801502c:	af00      	add	r7, sp, #0
 801502e:	6078      	str	r0, [r7, #4]
 8015030:	2300      	movs	r3, #0
 8015032:	60fb      	str	r3, [r7, #12]
 8015034:	68fb      	ldr	r3, [r7, #12]
 8015036:	3301      	adds	r3, #1
 8015038:	60fb      	str	r3, [r7, #12]
 801503a:	68fb      	ldr	r3, [r7, #12]
 801503c:	4a13      	ldr	r2, [pc, #76]	@ (801508c <USB_CoreReset+0x64>)
 801503e:	4293      	cmp	r3, r2
 8015040:	d901      	bls.n	8015046 <USB_CoreReset+0x1e>
 8015042:	2303      	movs	r3, #3
 8015044:	e01b      	b.n	801507e <USB_CoreReset+0x56>
 8015046:	687b      	ldr	r3, [r7, #4]
 8015048:	691b      	ldr	r3, [r3, #16]
 801504a:	2b00      	cmp	r3, #0
 801504c:	daf2      	bge.n	8015034 <USB_CoreReset+0xc>
 801504e:	2300      	movs	r3, #0
 8015050:	60fb      	str	r3, [r7, #12]
 8015052:	687b      	ldr	r3, [r7, #4]
 8015054:	691b      	ldr	r3, [r3, #16]
 8015056:	f043 0201 	orr.w	r2, r3, #1
 801505a:	687b      	ldr	r3, [r7, #4]
 801505c:	611a      	str	r2, [r3, #16]
 801505e:	68fb      	ldr	r3, [r7, #12]
 8015060:	3301      	adds	r3, #1
 8015062:	60fb      	str	r3, [r7, #12]
 8015064:	68fb      	ldr	r3, [r7, #12]
 8015066:	4a09      	ldr	r2, [pc, #36]	@ (801508c <USB_CoreReset+0x64>)
 8015068:	4293      	cmp	r3, r2
 801506a:	d901      	bls.n	8015070 <USB_CoreReset+0x48>
 801506c:	2303      	movs	r3, #3
 801506e:	e006      	b.n	801507e <USB_CoreReset+0x56>
 8015070:	687b      	ldr	r3, [r7, #4]
 8015072:	691b      	ldr	r3, [r3, #16]
 8015074:	f003 0301 	and.w	r3, r3, #1
 8015078:	2b01      	cmp	r3, #1
 801507a:	d0f0      	beq.n	801505e <USB_CoreReset+0x36>
 801507c:	2300      	movs	r3, #0
 801507e:	4618      	mov	r0, r3
 8015080:	3714      	adds	r7, #20
 8015082:	46bd      	mov	sp, r7
 8015084:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015088:	4770      	bx	lr
 801508a:	bf00      	nop
 801508c:	00030d40 	.word	0x00030d40

08015090 <USBD_CDC_Init>:
 8015090:	b580      	push	{r7, lr}
 8015092:	b084      	sub	sp, #16
 8015094:	af00      	add	r7, sp, #0
 8015096:	6078      	str	r0, [r7, #4]
 8015098:	460b      	mov	r3, r1
 801509a:	70fb      	strb	r3, [r7, #3]
 801509c:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 80150a0:	f005 fd6a 	bl	801ab78 <USBD_static_malloc>
 80150a4:	60f8      	str	r0, [r7, #12]
 80150a6:	68fb      	ldr	r3, [r7, #12]
 80150a8:	2b00      	cmp	r3, #0
 80150aa:	d109      	bne.n	80150c0 <USBD_CDC_Init+0x30>
 80150ac:	687b      	ldr	r3, [r7, #4]
 80150ae:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80150b2:	687b      	ldr	r3, [r7, #4]
 80150b4:	32b0      	adds	r2, #176	@ 0xb0
 80150b6:	2100      	movs	r1, #0
 80150b8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80150bc:	2302      	movs	r3, #2
 80150be:	e0d4      	b.n	801526a <USBD_CDC_Init+0x1da>
 80150c0:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 80150c4:	2100      	movs	r1, #0
 80150c6:	68f8      	ldr	r0, [r7, #12]
 80150c8:	f005 fed3 	bl	801ae72 <memset>
 80150cc:	687b      	ldr	r3, [r7, #4]
 80150ce:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80150d2:	687b      	ldr	r3, [r7, #4]
 80150d4:	32b0      	adds	r2, #176	@ 0xb0
 80150d6:	68f9      	ldr	r1, [r7, #12]
 80150d8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80150dc:	687b      	ldr	r3, [r7, #4]
 80150de:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80150e2:	687b      	ldr	r3, [r7, #4]
 80150e4:	32b0      	adds	r2, #176	@ 0xb0
 80150e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80150ea:	687b      	ldr	r3, [r7, #4]
 80150ec:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 80150f0:	687b      	ldr	r3, [r7, #4]
 80150f2:	7c1b      	ldrb	r3, [r3, #16]
 80150f4:	2b00      	cmp	r3, #0
 80150f6:	d138      	bne.n	801516a <USBD_CDC_Init+0xda>
 80150f8:	4b5e      	ldr	r3, [pc, #376]	@ (8015274 <USBD_CDC_Init+0x1e4>)
 80150fa:	7819      	ldrb	r1, [r3, #0]
 80150fc:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015100:	2202      	movs	r2, #2
 8015102:	6878      	ldr	r0, [r7, #4]
 8015104:	f005 fc15 	bl	801a932 <USBD_LL_OpenEP>
 8015108:	4b5a      	ldr	r3, [pc, #360]	@ (8015274 <USBD_CDC_Init+0x1e4>)
 801510a:	781b      	ldrb	r3, [r3, #0]
 801510c:	f003 020f 	and.w	r2, r3, #15
 8015110:	6879      	ldr	r1, [r7, #4]
 8015112:	4613      	mov	r3, r2
 8015114:	009b      	lsls	r3, r3, #2
 8015116:	4413      	add	r3, r2
 8015118:	009b      	lsls	r3, r3, #2
 801511a:	440b      	add	r3, r1
 801511c:	3324      	adds	r3, #36	@ 0x24
 801511e:	2201      	movs	r2, #1
 8015120:	801a      	strh	r2, [r3, #0]
 8015122:	4b55      	ldr	r3, [pc, #340]	@ (8015278 <USBD_CDC_Init+0x1e8>)
 8015124:	7819      	ldrb	r1, [r3, #0]
 8015126:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801512a:	2202      	movs	r2, #2
 801512c:	6878      	ldr	r0, [r7, #4]
 801512e:	f005 fc00 	bl	801a932 <USBD_LL_OpenEP>
 8015132:	4b51      	ldr	r3, [pc, #324]	@ (8015278 <USBD_CDC_Init+0x1e8>)
 8015134:	781b      	ldrb	r3, [r3, #0]
 8015136:	f003 020f 	and.w	r2, r3, #15
 801513a:	6879      	ldr	r1, [r7, #4]
 801513c:	4613      	mov	r3, r2
 801513e:	009b      	lsls	r3, r3, #2
 8015140:	4413      	add	r3, r2
 8015142:	009b      	lsls	r3, r3, #2
 8015144:	440b      	add	r3, r1
 8015146:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 801514a:	2201      	movs	r2, #1
 801514c:	801a      	strh	r2, [r3, #0]
 801514e:	4b4b      	ldr	r3, [pc, #300]	@ (801527c <USBD_CDC_Init+0x1ec>)
 8015150:	781b      	ldrb	r3, [r3, #0]
 8015152:	f003 020f 	and.w	r2, r3, #15
 8015156:	6879      	ldr	r1, [r7, #4]
 8015158:	4613      	mov	r3, r2
 801515a:	009b      	lsls	r3, r3, #2
 801515c:	4413      	add	r3, r2
 801515e:	009b      	lsls	r3, r3, #2
 8015160:	440b      	add	r3, r1
 8015162:	3326      	adds	r3, #38	@ 0x26
 8015164:	2210      	movs	r2, #16
 8015166:	801a      	strh	r2, [r3, #0]
 8015168:	e035      	b.n	80151d6 <USBD_CDC_Init+0x146>
 801516a:	4b42      	ldr	r3, [pc, #264]	@ (8015274 <USBD_CDC_Init+0x1e4>)
 801516c:	7819      	ldrb	r1, [r3, #0]
 801516e:	2340      	movs	r3, #64	@ 0x40
 8015170:	2202      	movs	r2, #2
 8015172:	6878      	ldr	r0, [r7, #4]
 8015174:	f005 fbdd 	bl	801a932 <USBD_LL_OpenEP>
 8015178:	4b3e      	ldr	r3, [pc, #248]	@ (8015274 <USBD_CDC_Init+0x1e4>)
 801517a:	781b      	ldrb	r3, [r3, #0]
 801517c:	f003 020f 	and.w	r2, r3, #15
 8015180:	6879      	ldr	r1, [r7, #4]
 8015182:	4613      	mov	r3, r2
 8015184:	009b      	lsls	r3, r3, #2
 8015186:	4413      	add	r3, r2
 8015188:	009b      	lsls	r3, r3, #2
 801518a:	440b      	add	r3, r1
 801518c:	3324      	adds	r3, #36	@ 0x24
 801518e:	2201      	movs	r2, #1
 8015190:	801a      	strh	r2, [r3, #0]
 8015192:	4b39      	ldr	r3, [pc, #228]	@ (8015278 <USBD_CDC_Init+0x1e8>)
 8015194:	7819      	ldrb	r1, [r3, #0]
 8015196:	2340      	movs	r3, #64	@ 0x40
 8015198:	2202      	movs	r2, #2
 801519a:	6878      	ldr	r0, [r7, #4]
 801519c:	f005 fbc9 	bl	801a932 <USBD_LL_OpenEP>
 80151a0:	4b35      	ldr	r3, [pc, #212]	@ (8015278 <USBD_CDC_Init+0x1e8>)
 80151a2:	781b      	ldrb	r3, [r3, #0]
 80151a4:	f003 020f 	and.w	r2, r3, #15
 80151a8:	6879      	ldr	r1, [r7, #4]
 80151aa:	4613      	mov	r3, r2
 80151ac:	009b      	lsls	r3, r3, #2
 80151ae:	4413      	add	r3, r2
 80151b0:	009b      	lsls	r3, r3, #2
 80151b2:	440b      	add	r3, r1
 80151b4:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80151b8:	2201      	movs	r2, #1
 80151ba:	801a      	strh	r2, [r3, #0]
 80151bc:	4b2f      	ldr	r3, [pc, #188]	@ (801527c <USBD_CDC_Init+0x1ec>)
 80151be:	781b      	ldrb	r3, [r3, #0]
 80151c0:	f003 020f 	and.w	r2, r3, #15
 80151c4:	6879      	ldr	r1, [r7, #4]
 80151c6:	4613      	mov	r3, r2
 80151c8:	009b      	lsls	r3, r3, #2
 80151ca:	4413      	add	r3, r2
 80151cc:	009b      	lsls	r3, r3, #2
 80151ce:	440b      	add	r3, r1
 80151d0:	3326      	adds	r3, #38	@ 0x26
 80151d2:	2210      	movs	r2, #16
 80151d4:	801a      	strh	r2, [r3, #0]
 80151d6:	4b29      	ldr	r3, [pc, #164]	@ (801527c <USBD_CDC_Init+0x1ec>)
 80151d8:	7819      	ldrb	r1, [r3, #0]
 80151da:	2308      	movs	r3, #8
 80151dc:	2203      	movs	r2, #3
 80151de:	6878      	ldr	r0, [r7, #4]
 80151e0:	f005 fba7 	bl	801a932 <USBD_LL_OpenEP>
 80151e4:	4b25      	ldr	r3, [pc, #148]	@ (801527c <USBD_CDC_Init+0x1ec>)
 80151e6:	781b      	ldrb	r3, [r3, #0]
 80151e8:	f003 020f 	and.w	r2, r3, #15
 80151ec:	6879      	ldr	r1, [r7, #4]
 80151ee:	4613      	mov	r3, r2
 80151f0:	009b      	lsls	r3, r3, #2
 80151f2:	4413      	add	r3, r2
 80151f4:	009b      	lsls	r3, r3, #2
 80151f6:	440b      	add	r3, r1
 80151f8:	3324      	adds	r3, #36	@ 0x24
 80151fa:	2201      	movs	r2, #1
 80151fc:	801a      	strh	r2, [r3, #0]
 80151fe:	68fb      	ldr	r3, [r7, #12]
 8015200:	2200      	movs	r2, #0
 8015202:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8015206:	687b      	ldr	r3, [r7, #4]
 8015208:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801520c:	687a      	ldr	r2, [r7, #4]
 801520e:	33b0      	adds	r3, #176	@ 0xb0
 8015210:	009b      	lsls	r3, r3, #2
 8015212:	4413      	add	r3, r2
 8015214:	685b      	ldr	r3, [r3, #4]
 8015216:	681b      	ldr	r3, [r3, #0]
 8015218:	4798      	blx	r3
 801521a:	68fb      	ldr	r3, [r7, #12]
 801521c:	2200      	movs	r2, #0
 801521e:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8015222:	68fb      	ldr	r3, [r7, #12]
 8015224:	2200      	movs	r2, #0
 8015226:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 801522a:	68fb      	ldr	r3, [r7, #12]
 801522c:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 8015230:	2b00      	cmp	r3, #0
 8015232:	d101      	bne.n	8015238 <USBD_CDC_Init+0x1a8>
 8015234:	2302      	movs	r3, #2
 8015236:	e018      	b.n	801526a <USBD_CDC_Init+0x1da>
 8015238:	687b      	ldr	r3, [r7, #4]
 801523a:	7c1b      	ldrb	r3, [r3, #16]
 801523c:	2b00      	cmp	r3, #0
 801523e:	d10a      	bne.n	8015256 <USBD_CDC_Init+0x1c6>
 8015240:	4b0d      	ldr	r3, [pc, #52]	@ (8015278 <USBD_CDC_Init+0x1e8>)
 8015242:	7819      	ldrb	r1, [r3, #0]
 8015244:	68fb      	ldr	r3, [r7, #12]
 8015246:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 801524a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 801524e:	6878      	ldr	r0, [r7, #4]
 8015250:	f005 fc5e 	bl	801ab10 <USBD_LL_PrepareReceive>
 8015254:	e008      	b.n	8015268 <USBD_CDC_Init+0x1d8>
 8015256:	4b08      	ldr	r3, [pc, #32]	@ (8015278 <USBD_CDC_Init+0x1e8>)
 8015258:	7819      	ldrb	r1, [r3, #0]
 801525a:	68fb      	ldr	r3, [r7, #12]
 801525c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015260:	2340      	movs	r3, #64	@ 0x40
 8015262:	6878      	ldr	r0, [r7, #4]
 8015264:	f005 fc54 	bl	801ab10 <USBD_LL_PrepareReceive>
 8015268:	2300      	movs	r3, #0
 801526a:	4618      	mov	r0, r3
 801526c:	3710      	adds	r7, #16
 801526e:	46bd      	mov	sp, r7
 8015270:	bd80      	pop	{r7, pc}
 8015272:	bf00      	nop
 8015274:	200000a7 	.word	0x200000a7
 8015278:	200000a8 	.word	0x200000a8
 801527c:	200000a9 	.word	0x200000a9

08015280 <USBD_CDC_DeInit>:
 8015280:	b580      	push	{r7, lr}
 8015282:	b082      	sub	sp, #8
 8015284:	af00      	add	r7, sp, #0
 8015286:	6078      	str	r0, [r7, #4]
 8015288:	460b      	mov	r3, r1
 801528a:	70fb      	strb	r3, [r7, #3]
 801528c:	4b3a      	ldr	r3, [pc, #232]	@ (8015378 <USBD_CDC_DeInit+0xf8>)
 801528e:	781b      	ldrb	r3, [r3, #0]
 8015290:	4619      	mov	r1, r3
 8015292:	6878      	ldr	r0, [r7, #4]
 8015294:	f005 fb73 	bl	801a97e <USBD_LL_CloseEP>
 8015298:	4b37      	ldr	r3, [pc, #220]	@ (8015378 <USBD_CDC_DeInit+0xf8>)
 801529a:	781b      	ldrb	r3, [r3, #0]
 801529c:	f003 020f 	and.w	r2, r3, #15
 80152a0:	6879      	ldr	r1, [r7, #4]
 80152a2:	4613      	mov	r3, r2
 80152a4:	009b      	lsls	r3, r3, #2
 80152a6:	4413      	add	r3, r2
 80152a8:	009b      	lsls	r3, r3, #2
 80152aa:	440b      	add	r3, r1
 80152ac:	3324      	adds	r3, #36	@ 0x24
 80152ae:	2200      	movs	r2, #0
 80152b0:	801a      	strh	r2, [r3, #0]
 80152b2:	4b32      	ldr	r3, [pc, #200]	@ (801537c <USBD_CDC_DeInit+0xfc>)
 80152b4:	781b      	ldrb	r3, [r3, #0]
 80152b6:	4619      	mov	r1, r3
 80152b8:	6878      	ldr	r0, [r7, #4]
 80152ba:	f005 fb60 	bl	801a97e <USBD_LL_CloseEP>
 80152be:	4b2f      	ldr	r3, [pc, #188]	@ (801537c <USBD_CDC_DeInit+0xfc>)
 80152c0:	781b      	ldrb	r3, [r3, #0]
 80152c2:	f003 020f 	and.w	r2, r3, #15
 80152c6:	6879      	ldr	r1, [r7, #4]
 80152c8:	4613      	mov	r3, r2
 80152ca:	009b      	lsls	r3, r3, #2
 80152cc:	4413      	add	r3, r2
 80152ce:	009b      	lsls	r3, r3, #2
 80152d0:	440b      	add	r3, r1
 80152d2:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80152d6:	2200      	movs	r2, #0
 80152d8:	801a      	strh	r2, [r3, #0]
 80152da:	4b29      	ldr	r3, [pc, #164]	@ (8015380 <USBD_CDC_DeInit+0x100>)
 80152dc:	781b      	ldrb	r3, [r3, #0]
 80152de:	4619      	mov	r1, r3
 80152e0:	6878      	ldr	r0, [r7, #4]
 80152e2:	f005 fb4c 	bl	801a97e <USBD_LL_CloseEP>
 80152e6:	4b26      	ldr	r3, [pc, #152]	@ (8015380 <USBD_CDC_DeInit+0x100>)
 80152e8:	781b      	ldrb	r3, [r3, #0]
 80152ea:	f003 020f 	and.w	r2, r3, #15
 80152ee:	6879      	ldr	r1, [r7, #4]
 80152f0:	4613      	mov	r3, r2
 80152f2:	009b      	lsls	r3, r3, #2
 80152f4:	4413      	add	r3, r2
 80152f6:	009b      	lsls	r3, r3, #2
 80152f8:	440b      	add	r3, r1
 80152fa:	3324      	adds	r3, #36	@ 0x24
 80152fc:	2200      	movs	r2, #0
 80152fe:	801a      	strh	r2, [r3, #0]
 8015300:	4b1f      	ldr	r3, [pc, #124]	@ (8015380 <USBD_CDC_DeInit+0x100>)
 8015302:	781b      	ldrb	r3, [r3, #0]
 8015304:	f003 020f 	and.w	r2, r3, #15
 8015308:	6879      	ldr	r1, [r7, #4]
 801530a:	4613      	mov	r3, r2
 801530c:	009b      	lsls	r3, r3, #2
 801530e:	4413      	add	r3, r2
 8015310:	009b      	lsls	r3, r3, #2
 8015312:	440b      	add	r3, r1
 8015314:	3326      	adds	r3, #38	@ 0x26
 8015316:	2200      	movs	r2, #0
 8015318:	801a      	strh	r2, [r3, #0]
 801531a:	687b      	ldr	r3, [r7, #4]
 801531c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015320:	687b      	ldr	r3, [r7, #4]
 8015322:	32b0      	adds	r2, #176	@ 0xb0
 8015324:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015328:	2b00      	cmp	r3, #0
 801532a:	d01f      	beq.n	801536c <USBD_CDC_DeInit+0xec>
 801532c:	687b      	ldr	r3, [r7, #4]
 801532e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015332:	687a      	ldr	r2, [r7, #4]
 8015334:	33b0      	adds	r3, #176	@ 0xb0
 8015336:	009b      	lsls	r3, r3, #2
 8015338:	4413      	add	r3, r2
 801533a:	685b      	ldr	r3, [r3, #4]
 801533c:	685b      	ldr	r3, [r3, #4]
 801533e:	4798      	blx	r3
 8015340:	687b      	ldr	r3, [r7, #4]
 8015342:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015346:	687b      	ldr	r3, [r7, #4]
 8015348:	32b0      	adds	r2, #176	@ 0xb0
 801534a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801534e:	4618      	mov	r0, r3
 8015350:	f005 fc20 	bl	801ab94 <USBD_static_free>
 8015354:	687b      	ldr	r3, [r7, #4]
 8015356:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801535a:	687b      	ldr	r3, [r7, #4]
 801535c:	32b0      	adds	r2, #176	@ 0xb0
 801535e:	2100      	movs	r1, #0
 8015360:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8015364:	687b      	ldr	r3, [r7, #4]
 8015366:	2200      	movs	r2, #0
 8015368:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 801536c:	2300      	movs	r3, #0
 801536e:	4618      	mov	r0, r3
 8015370:	3708      	adds	r7, #8
 8015372:	46bd      	mov	sp, r7
 8015374:	bd80      	pop	{r7, pc}
 8015376:	bf00      	nop
 8015378:	200000a7 	.word	0x200000a7
 801537c:	200000a8 	.word	0x200000a8
 8015380:	200000a9 	.word	0x200000a9

08015384 <USBD_CDC_Setup>:
 8015384:	b580      	push	{r7, lr}
 8015386:	b086      	sub	sp, #24
 8015388:	af00      	add	r7, sp, #0
 801538a:	6078      	str	r0, [r7, #4]
 801538c:	6039      	str	r1, [r7, #0]
 801538e:	687b      	ldr	r3, [r7, #4]
 8015390:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015394:	687b      	ldr	r3, [r7, #4]
 8015396:	32b0      	adds	r2, #176	@ 0xb0
 8015398:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801539c:	613b      	str	r3, [r7, #16]
 801539e:	2300      	movs	r3, #0
 80153a0:	737b      	strb	r3, [r7, #13]
 80153a2:	2300      	movs	r3, #0
 80153a4:	817b      	strh	r3, [r7, #10]
 80153a6:	2300      	movs	r3, #0
 80153a8:	75fb      	strb	r3, [r7, #23]
 80153aa:	693b      	ldr	r3, [r7, #16]
 80153ac:	2b00      	cmp	r3, #0
 80153ae:	d101      	bne.n	80153b4 <USBD_CDC_Setup+0x30>
 80153b0:	2303      	movs	r3, #3
 80153b2:	e0bf      	b.n	8015534 <USBD_CDC_Setup+0x1b0>
 80153b4:	683b      	ldr	r3, [r7, #0]
 80153b6:	781b      	ldrb	r3, [r3, #0]
 80153b8:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80153bc:	2b00      	cmp	r3, #0
 80153be:	d050      	beq.n	8015462 <USBD_CDC_Setup+0xde>
 80153c0:	2b20      	cmp	r3, #32
 80153c2:	f040 80af 	bne.w	8015524 <USBD_CDC_Setup+0x1a0>
 80153c6:	683b      	ldr	r3, [r7, #0]
 80153c8:	88db      	ldrh	r3, [r3, #6]
 80153ca:	2b00      	cmp	r3, #0
 80153cc:	d03a      	beq.n	8015444 <USBD_CDC_Setup+0xc0>
 80153ce:	683b      	ldr	r3, [r7, #0]
 80153d0:	781b      	ldrb	r3, [r3, #0]
 80153d2:	b25b      	sxtb	r3, r3
 80153d4:	2b00      	cmp	r3, #0
 80153d6:	da1b      	bge.n	8015410 <USBD_CDC_Setup+0x8c>
 80153d8:	687b      	ldr	r3, [r7, #4]
 80153da:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80153de:	687a      	ldr	r2, [r7, #4]
 80153e0:	33b0      	adds	r3, #176	@ 0xb0
 80153e2:	009b      	lsls	r3, r3, #2
 80153e4:	4413      	add	r3, r2
 80153e6:	685b      	ldr	r3, [r3, #4]
 80153e8:	689b      	ldr	r3, [r3, #8]
 80153ea:	683a      	ldr	r2, [r7, #0]
 80153ec:	7850      	ldrb	r0, [r2, #1]
 80153ee:	6939      	ldr	r1, [r7, #16]
 80153f0:	683a      	ldr	r2, [r7, #0]
 80153f2:	88d2      	ldrh	r2, [r2, #6]
 80153f4:	4798      	blx	r3
 80153f6:	683b      	ldr	r3, [r7, #0]
 80153f8:	88db      	ldrh	r3, [r3, #6]
 80153fa:	2b07      	cmp	r3, #7
 80153fc:	bf28      	it	cs
 80153fe:	2307      	movcs	r3, #7
 8015400:	81fb      	strh	r3, [r7, #14]
 8015402:	693b      	ldr	r3, [r7, #16]
 8015404:	89fa      	ldrh	r2, [r7, #14]
 8015406:	4619      	mov	r1, r3
 8015408:	6878      	ldr	r0, [r7, #4]
 801540a:	f001 fd41 	bl	8016e90 <USBD_CtlSendData>
 801540e:	e090      	b.n	8015532 <USBD_CDC_Setup+0x1ae>
 8015410:	683b      	ldr	r3, [r7, #0]
 8015412:	785a      	ldrb	r2, [r3, #1]
 8015414:	693b      	ldr	r3, [r7, #16]
 8015416:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 801541a:	683b      	ldr	r3, [r7, #0]
 801541c:	88db      	ldrh	r3, [r3, #6]
 801541e:	2b3f      	cmp	r3, #63	@ 0x3f
 8015420:	d803      	bhi.n	801542a <USBD_CDC_Setup+0xa6>
 8015422:	683b      	ldr	r3, [r7, #0]
 8015424:	88db      	ldrh	r3, [r3, #6]
 8015426:	b2da      	uxtb	r2, r3
 8015428:	e000      	b.n	801542c <USBD_CDC_Setup+0xa8>
 801542a:	2240      	movs	r2, #64	@ 0x40
 801542c:	693b      	ldr	r3, [r7, #16]
 801542e:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 8015432:	6939      	ldr	r1, [r7, #16]
 8015434:	693b      	ldr	r3, [r7, #16]
 8015436:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 801543a:	461a      	mov	r2, r3
 801543c:	6878      	ldr	r0, [r7, #4]
 801543e:	f001 fd53 	bl	8016ee8 <USBD_CtlPrepareRx>
 8015442:	e076      	b.n	8015532 <USBD_CDC_Setup+0x1ae>
 8015444:	687b      	ldr	r3, [r7, #4]
 8015446:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801544a:	687a      	ldr	r2, [r7, #4]
 801544c:	33b0      	adds	r3, #176	@ 0xb0
 801544e:	009b      	lsls	r3, r3, #2
 8015450:	4413      	add	r3, r2
 8015452:	685b      	ldr	r3, [r3, #4]
 8015454:	689b      	ldr	r3, [r3, #8]
 8015456:	683a      	ldr	r2, [r7, #0]
 8015458:	7850      	ldrb	r0, [r2, #1]
 801545a:	2200      	movs	r2, #0
 801545c:	6839      	ldr	r1, [r7, #0]
 801545e:	4798      	blx	r3
 8015460:	e067      	b.n	8015532 <USBD_CDC_Setup+0x1ae>
 8015462:	683b      	ldr	r3, [r7, #0]
 8015464:	785b      	ldrb	r3, [r3, #1]
 8015466:	2b0b      	cmp	r3, #11
 8015468:	d851      	bhi.n	801550e <USBD_CDC_Setup+0x18a>
 801546a:	a201      	add	r2, pc, #4	@ (adr r2, 8015470 <USBD_CDC_Setup+0xec>)
 801546c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8015470:	080154a1 	.word	0x080154a1
 8015474:	0801551d 	.word	0x0801551d
 8015478:	0801550f 	.word	0x0801550f
 801547c:	0801550f 	.word	0x0801550f
 8015480:	0801550f 	.word	0x0801550f
 8015484:	0801550f 	.word	0x0801550f
 8015488:	0801550f 	.word	0x0801550f
 801548c:	0801550f 	.word	0x0801550f
 8015490:	0801550f 	.word	0x0801550f
 8015494:	0801550f 	.word	0x0801550f
 8015498:	080154cb 	.word	0x080154cb
 801549c:	080154f5 	.word	0x080154f5
 80154a0:	687b      	ldr	r3, [r7, #4]
 80154a2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80154a6:	b2db      	uxtb	r3, r3
 80154a8:	2b03      	cmp	r3, #3
 80154aa:	d107      	bne.n	80154bc <USBD_CDC_Setup+0x138>
 80154ac:	f107 030a 	add.w	r3, r7, #10
 80154b0:	2202      	movs	r2, #2
 80154b2:	4619      	mov	r1, r3
 80154b4:	6878      	ldr	r0, [r7, #4]
 80154b6:	f001 fceb 	bl	8016e90 <USBD_CtlSendData>
 80154ba:	e032      	b.n	8015522 <USBD_CDC_Setup+0x19e>
 80154bc:	6839      	ldr	r1, [r7, #0]
 80154be:	6878      	ldr	r0, [r7, #4]
 80154c0:	f001 fc75 	bl	8016dae <USBD_CtlError>
 80154c4:	2303      	movs	r3, #3
 80154c6:	75fb      	strb	r3, [r7, #23]
 80154c8:	e02b      	b.n	8015522 <USBD_CDC_Setup+0x19e>
 80154ca:	687b      	ldr	r3, [r7, #4]
 80154cc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80154d0:	b2db      	uxtb	r3, r3
 80154d2:	2b03      	cmp	r3, #3
 80154d4:	d107      	bne.n	80154e6 <USBD_CDC_Setup+0x162>
 80154d6:	f107 030d 	add.w	r3, r7, #13
 80154da:	2201      	movs	r2, #1
 80154dc:	4619      	mov	r1, r3
 80154de:	6878      	ldr	r0, [r7, #4]
 80154e0:	f001 fcd6 	bl	8016e90 <USBD_CtlSendData>
 80154e4:	e01d      	b.n	8015522 <USBD_CDC_Setup+0x19e>
 80154e6:	6839      	ldr	r1, [r7, #0]
 80154e8:	6878      	ldr	r0, [r7, #4]
 80154ea:	f001 fc60 	bl	8016dae <USBD_CtlError>
 80154ee:	2303      	movs	r3, #3
 80154f0:	75fb      	strb	r3, [r7, #23]
 80154f2:	e016      	b.n	8015522 <USBD_CDC_Setup+0x19e>
 80154f4:	687b      	ldr	r3, [r7, #4]
 80154f6:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80154fa:	b2db      	uxtb	r3, r3
 80154fc:	2b03      	cmp	r3, #3
 80154fe:	d00f      	beq.n	8015520 <USBD_CDC_Setup+0x19c>
 8015500:	6839      	ldr	r1, [r7, #0]
 8015502:	6878      	ldr	r0, [r7, #4]
 8015504:	f001 fc53 	bl	8016dae <USBD_CtlError>
 8015508:	2303      	movs	r3, #3
 801550a:	75fb      	strb	r3, [r7, #23]
 801550c:	e008      	b.n	8015520 <USBD_CDC_Setup+0x19c>
 801550e:	6839      	ldr	r1, [r7, #0]
 8015510:	6878      	ldr	r0, [r7, #4]
 8015512:	f001 fc4c 	bl	8016dae <USBD_CtlError>
 8015516:	2303      	movs	r3, #3
 8015518:	75fb      	strb	r3, [r7, #23]
 801551a:	e002      	b.n	8015522 <USBD_CDC_Setup+0x19e>
 801551c:	bf00      	nop
 801551e:	e008      	b.n	8015532 <USBD_CDC_Setup+0x1ae>
 8015520:	bf00      	nop
 8015522:	e006      	b.n	8015532 <USBD_CDC_Setup+0x1ae>
 8015524:	6839      	ldr	r1, [r7, #0]
 8015526:	6878      	ldr	r0, [r7, #4]
 8015528:	f001 fc41 	bl	8016dae <USBD_CtlError>
 801552c:	2303      	movs	r3, #3
 801552e:	75fb      	strb	r3, [r7, #23]
 8015530:	bf00      	nop
 8015532:	7dfb      	ldrb	r3, [r7, #23]
 8015534:	4618      	mov	r0, r3
 8015536:	3718      	adds	r7, #24
 8015538:	46bd      	mov	sp, r7
 801553a:	bd80      	pop	{r7, pc}

0801553c <USBD_CDC_DataIn>:
 801553c:	b580      	push	{r7, lr}
 801553e:	b084      	sub	sp, #16
 8015540:	af00      	add	r7, sp, #0
 8015542:	6078      	str	r0, [r7, #4]
 8015544:	460b      	mov	r3, r1
 8015546:	70fb      	strb	r3, [r7, #3]
 8015548:	687b      	ldr	r3, [r7, #4]
 801554a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801554e:	60fb      	str	r3, [r7, #12]
 8015550:	687b      	ldr	r3, [r7, #4]
 8015552:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015556:	687b      	ldr	r3, [r7, #4]
 8015558:	32b0      	adds	r2, #176	@ 0xb0
 801555a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801555e:	2b00      	cmp	r3, #0
 8015560:	d101      	bne.n	8015566 <USBD_CDC_DataIn+0x2a>
 8015562:	2303      	movs	r3, #3
 8015564:	e065      	b.n	8015632 <USBD_CDC_DataIn+0xf6>
 8015566:	687b      	ldr	r3, [r7, #4]
 8015568:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801556c:	687b      	ldr	r3, [r7, #4]
 801556e:	32b0      	adds	r2, #176	@ 0xb0
 8015570:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015574:	60bb      	str	r3, [r7, #8]
 8015576:	78fb      	ldrb	r3, [r7, #3]
 8015578:	f003 020f 	and.w	r2, r3, #15
 801557c:	6879      	ldr	r1, [r7, #4]
 801557e:	4613      	mov	r3, r2
 8015580:	009b      	lsls	r3, r3, #2
 8015582:	4413      	add	r3, r2
 8015584:	009b      	lsls	r3, r3, #2
 8015586:	440b      	add	r3, r1
 8015588:	3318      	adds	r3, #24
 801558a:	681b      	ldr	r3, [r3, #0]
 801558c:	2b00      	cmp	r3, #0
 801558e:	d02f      	beq.n	80155f0 <USBD_CDC_DataIn+0xb4>
 8015590:	78fb      	ldrb	r3, [r7, #3]
 8015592:	f003 020f 	and.w	r2, r3, #15
 8015596:	6879      	ldr	r1, [r7, #4]
 8015598:	4613      	mov	r3, r2
 801559a:	009b      	lsls	r3, r3, #2
 801559c:	4413      	add	r3, r2
 801559e:	009b      	lsls	r3, r3, #2
 80155a0:	440b      	add	r3, r1
 80155a2:	3318      	adds	r3, #24
 80155a4:	681a      	ldr	r2, [r3, #0]
 80155a6:	78fb      	ldrb	r3, [r7, #3]
 80155a8:	f003 010f 	and.w	r1, r3, #15
 80155ac:	68f8      	ldr	r0, [r7, #12]
 80155ae:	460b      	mov	r3, r1
 80155b0:	00db      	lsls	r3, r3, #3
 80155b2:	440b      	add	r3, r1
 80155b4:	009b      	lsls	r3, r3, #2
 80155b6:	4403      	add	r3, r0
 80155b8:	3348      	adds	r3, #72	@ 0x48
 80155ba:	681b      	ldr	r3, [r3, #0]
 80155bc:	fbb2 f1f3 	udiv	r1, r2, r3
 80155c0:	fb01 f303 	mul.w	r3, r1, r3
 80155c4:	1ad3      	subs	r3, r2, r3
 80155c6:	2b00      	cmp	r3, #0
 80155c8:	d112      	bne.n	80155f0 <USBD_CDC_DataIn+0xb4>
 80155ca:	78fb      	ldrb	r3, [r7, #3]
 80155cc:	f003 020f 	and.w	r2, r3, #15
 80155d0:	6879      	ldr	r1, [r7, #4]
 80155d2:	4613      	mov	r3, r2
 80155d4:	009b      	lsls	r3, r3, #2
 80155d6:	4413      	add	r3, r2
 80155d8:	009b      	lsls	r3, r3, #2
 80155da:	440b      	add	r3, r1
 80155dc:	3318      	adds	r3, #24
 80155de:	2200      	movs	r2, #0
 80155e0:	601a      	str	r2, [r3, #0]
 80155e2:	78f9      	ldrb	r1, [r7, #3]
 80155e4:	2300      	movs	r3, #0
 80155e6:	2200      	movs	r2, #0
 80155e8:	6878      	ldr	r0, [r7, #4]
 80155ea:	f005 fa70 	bl	801aace <USBD_LL_Transmit>
 80155ee:	e01f      	b.n	8015630 <USBD_CDC_DataIn+0xf4>
 80155f0:	68bb      	ldr	r3, [r7, #8]
 80155f2:	2200      	movs	r2, #0
 80155f4:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 80155f8:	687b      	ldr	r3, [r7, #4]
 80155fa:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80155fe:	687a      	ldr	r2, [r7, #4]
 8015600:	33b0      	adds	r3, #176	@ 0xb0
 8015602:	009b      	lsls	r3, r3, #2
 8015604:	4413      	add	r3, r2
 8015606:	685b      	ldr	r3, [r3, #4]
 8015608:	691b      	ldr	r3, [r3, #16]
 801560a:	2b00      	cmp	r3, #0
 801560c:	d010      	beq.n	8015630 <USBD_CDC_DataIn+0xf4>
 801560e:	687b      	ldr	r3, [r7, #4]
 8015610:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015614:	687a      	ldr	r2, [r7, #4]
 8015616:	33b0      	adds	r3, #176	@ 0xb0
 8015618:	009b      	lsls	r3, r3, #2
 801561a:	4413      	add	r3, r2
 801561c:	685b      	ldr	r3, [r3, #4]
 801561e:	691b      	ldr	r3, [r3, #16]
 8015620:	68ba      	ldr	r2, [r7, #8]
 8015622:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 8015626:	68ba      	ldr	r2, [r7, #8]
 8015628:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 801562c:	78fa      	ldrb	r2, [r7, #3]
 801562e:	4798      	blx	r3
 8015630:	2300      	movs	r3, #0
 8015632:	4618      	mov	r0, r3
 8015634:	3710      	adds	r7, #16
 8015636:	46bd      	mov	sp, r7
 8015638:	bd80      	pop	{r7, pc}

0801563a <USBD_CDC_DataOut>:
 801563a:	b580      	push	{r7, lr}
 801563c:	b084      	sub	sp, #16
 801563e:	af00      	add	r7, sp, #0
 8015640:	6078      	str	r0, [r7, #4]
 8015642:	460b      	mov	r3, r1
 8015644:	70fb      	strb	r3, [r7, #3]
 8015646:	687b      	ldr	r3, [r7, #4]
 8015648:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801564c:	687b      	ldr	r3, [r7, #4]
 801564e:	32b0      	adds	r2, #176	@ 0xb0
 8015650:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015654:	60fb      	str	r3, [r7, #12]
 8015656:	687b      	ldr	r3, [r7, #4]
 8015658:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801565c:	687b      	ldr	r3, [r7, #4]
 801565e:	32b0      	adds	r2, #176	@ 0xb0
 8015660:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015664:	2b00      	cmp	r3, #0
 8015666:	d101      	bne.n	801566c <USBD_CDC_DataOut+0x32>
 8015668:	2303      	movs	r3, #3
 801566a:	e01a      	b.n	80156a2 <USBD_CDC_DataOut+0x68>
 801566c:	78fb      	ldrb	r3, [r7, #3]
 801566e:	4619      	mov	r1, r3
 8015670:	6878      	ldr	r0, [r7, #4]
 8015672:	f005 fa6e 	bl	801ab52 <USBD_LL_GetRxDataSize>
 8015676:	4602      	mov	r2, r0
 8015678:	68fb      	ldr	r3, [r7, #12]
 801567a:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 801567e:	687b      	ldr	r3, [r7, #4]
 8015680:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8015684:	687a      	ldr	r2, [r7, #4]
 8015686:	33b0      	adds	r3, #176	@ 0xb0
 8015688:	009b      	lsls	r3, r3, #2
 801568a:	4413      	add	r3, r2
 801568c:	685b      	ldr	r3, [r3, #4]
 801568e:	68db      	ldr	r3, [r3, #12]
 8015690:	68fa      	ldr	r2, [r7, #12]
 8015692:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 8015696:	68fa      	ldr	r2, [r7, #12]
 8015698:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 801569c:	4611      	mov	r1, r2
 801569e:	4798      	blx	r3
 80156a0:	2300      	movs	r3, #0
 80156a2:	4618      	mov	r0, r3
 80156a4:	3710      	adds	r7, #16
 80156a6:	46bd      	mov	sp, r7
 80156a8:	bd80      	pop	{r7, pc}

080156aa <USBD_CDC_EP0_RxReady>:
 80156aa:	b580      	push	{r7, lr}
 80156ac:	b084      	sub	sp, #16
 80156ae:	af00      	add	r7, sp, #0
 80156b0:	6078      	str	r0, [r7, #4]
 80156b2:	687b      	ldr	r3, [r7, #4]
 80156b4:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80156b8:	687b      	ldr	r3, [r7, #4]
 80156ba:	32b0      	adds	r2, #176	@ 0xb0
 80156bc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80156c0:	60fb      	str	r3, [r7, #12]
 80156c2:	68fb      	ldr	r3, [r7, #12]
 80156c4:	2b00      	cmp	r3, #0
 80156c6:	d101      	bne.n	80156cc <USBD_CDC_EP0_RxReady+0x22>
 80156c8:	2303      	movs	r3, #3
 80156ca:	e024      	b.n	8015716 <USBD_CDC_EP0_RxReady+0x6c>
 80156cc:	687b      	ldr	r3, [r7, #4]
 80156ce:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80156d2:	687a      	ldr	r2, [r7, #4]
 80156d4:	33b0      	adds	r3, #176	@ 0xb0
 80156d6:	009b      	lsls	r3, r3, #2
 80156d8:	4413      	add	r3, r2
 80156da:	685b      	ldr	r3, [r3, #4]
 80156dc:	2b00      	cmp	r3, #0
 80156de:	d019      	beq.n	8015714 <USBD_CDC_EP0_RxReady+0x6a>
 80156e0:	68fb      	ldr	r3, [r7, #12]
 80156e2:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 80156e6:	2bff      	cmp	r3, #255	@ 0xff
 80156e8:	d014      	beq.n	8015714 <USBD_CDC_EP0_RxReady+0x6a>
 80156ea:	687b      	ldr	r3, [r7, #4]
 80156ec:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80156f0:	687a      	ldr	r2, [r7, #4]
 80156f2:	33b0      	adds	r3, #176	@ 0xb0
 80156f4:	009b      	lsls	r3, r3, #2
 80156f6:	4413      	add	r3, r2
 80156f8:	685b      	ldr	r3, [r3, #4]
 80156fa:	689b      	ldr	r3, [r3, #8]
 80156fc:	68fa      	ldr	r2, [r7, #12]
 80156fe:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 8015702:	68f9      	ldr	r1, [r7, #12]
 8015704:	68fa      	ldr	r2, [r7, #12]
 8015706:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 801570a:	4798      	blx	r3
 801570c:	68fb      	ldr	r3, [r7, #12]
 801570e:	22ff      	movs	r2, #255	@ 0xff
 8015710:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 8015714:	2300      	movs	r3, #0
 8015716:	4618      	mov	r0, r3
 8015718:	3710      	adds	r7, #16
 801571a:	46bd      	mov	sp, r7
 801571c:	bd80      	pop	{r7, pc}
	...

08015720 <USBD_CDC_GetFSCfgDesc>:
 8015720:	b580      	push	{r7, lr}
 8015722:	b086      	sub	sp, #24
 8015724:	af00      	add	r7, sp, #0
 8015726:	6078      	str	r0, [r7, #4]
 8015728:	2182      	movs	r1, #130	@ 0x82
 801572a:	4818      	ldr	r0, [pc, #96]	@ (801578c <USBD_CDC_GetFSCfgDesc+0x6c>)
 801572c:	f000 fd09 	bl	8016142 <USBD_GetEpDesc>
 8015730:	6178      	str	r0, [r7, #20]
 8015732:	2101      	movs	r1, #1
 8015734:	4815      	ldr	r0, [pc, #84]	@ (801578c <USBD_CDC_GetFSCfgDesc+0x6c>)
 8015736:	f000 fd04 	bl	8016142 <USBD_GetEpDesc>
 801573a:	6138      	str	r0, [r7, #16]
 801573c:	2181      	movs	r1, #129	@ 0x81
 801573e:	4813      	ldr	r0, [pc, #76]	@ (801578c <USBD_CDC_GetFSCfgDesc+0x6c>)
 8015740:	f000 fcff 	bl	8016142 <USBD_GetEpDesc>
 8015744:	60f8      	str	r0, [r7, #12]
 8015746:	697b      	ldr	r3, [r7, #20]
 8015748:	2b00      	cmp	r3, #0
 801574a:	d002      	beq.n	8015752 <USBD_CDC_GetFSCfgDesc+0x32>
 801574c:	697b      	ldr	r3, [r7, #20]
 801574e:	2210      	movs	r2, #16
 8015750:	719a      	strb	r2, [r3, #6]
 8015752:	693b      	ldr	r3, [r7, #16]
 8015754:	2b00      	cmp	r3, #0
 8015756:	d006      	beq.n	8015766 <USBD_CDC_GetFSCfgDesc+0x46>
 8015758:	693b      	ldr	r3, [r7, #16]
 801575a:	2200      	movs	r2, #0
 801575c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015760:	711a      	strb	r2, [r3, #4]
 8015762:	2200      	movs	r2, #0
 8015764:	715a      	strb	r2, [r3, #5]
 8015766:	68fb      	ldr	r3, [r7, #12]
 8015768:	2b00      	cmp	r3, #0
 801576a:	d006      	beq.n	801577a <USBD_CDC_GetFSCfgDesc+0x5a>
 801576c:	68fb      	ldr	r3, [r7, #12]
 801576e:	2200      	movs	r2, #0
 8015770:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015774:	711a      	strb	r2, [r3, #4]
 8015776:	2200      	movs	r2, #0
 8015778:	715a      	strb	r2, [r3, #5]
 801577a:	687b      	ldr	r3, [r7, #4]
 801577c:	2243      	movs	r2, #67	@ 0x43
 801577e:	801a      	strh	r2, [r3, #0]
 8015780:	4b02      	ldr	r3, [pc, #8]	@ (801578c <USBD_CDC_GetFSCfgDesc+0x6c>)
 8015782:	4618      	mov	r0, r3
 8015784:	3718      	adds	r7, #24
 8015786:	46bd      	mov	sp, r7
 8015788:	bd80      	pop	{r7, pc}
 801578a:	bf00      	nop
 801578c:	20000064 	.word	0x20000064

08015790 <USBD_CDC_GetHSCfgDesc>:
 8015790:	b580      	push	{r7, lr}
 8015792:	b086      	sub	sp, #24
 8015794:	af00      	add	r7, sp, #0
 8015796:	6078      	str	r0, [r7, #4]
 8015798:	2182      	movs	r1, #130	@ 0x82
 801579a:	4818      	ldr	r0, [pc, #96]	@ (80157fc <USBD_CDC_GetHSCfgDesc+0x6c>)
 801579c:	f000 fcd1 	bl	8016142 <USBD_GetEpDesc>
 80157a0:	6178      	str	r0, [r7, #20]
 80157a2:	2101      	movs	r1, #1
 80157a4:	4815      	ldr	r0, [pc, #84]	@ (80157fc <USBD_CDC_GetHSCfgDesc+0x6c>)
 80157a6:	f000 fccc 	bl	8016142 <USBD_GetEpDesc>
 80157aa:	6138      	str	r0, [r7, #16]
 80157ac:	2181      	movs	r1, #129	@ 0x81
 80157ae:	4813      	ldr	r0, [pc, #76]	@ (80157fc <USBD_CDC_GetHSCfgDesc+0x6c>)
 80157b0:	f000 fcc7 	bl	8016142 <USBD_GetEpDesc>
 80157b4:	60f8      	str	r0, [r7, #12]
 80157b6:	697b      	ldr	r3, [r7, #20]
 80157b8:	2b00      	cmp	r3, #0
 80157ba:	d002      	beq.n	80157c2 <USBD_CDC_GetHSCfgDesc+0x32>
 80157bc:	697b      	ldr	r3, [r7, #20]
 80157be:	2210      	movs	r2, #16
 80157c0:	719a      	strb	r2, [r3, #6]
 80157c2:	693b      	ldr	r3, [r7, #16]
 80157c4:	2b00      	cmp	r3, #0
 80157c6:	d006      	beq.n	80157d6 <USBD_CDC_GetHSCfgDesc+0x46>
 80157c8:	693b      	ldr	r3, [r7, #16]
 80157ca:	2200      	movs	r2, #0
 80157cc:	711a      	strb	r2, [r3, #4]
 80157ce:	2200      	movs	r2, #0
 80157d0:	f042 0202 	orr.w	r2, r2, #2
 80157d4:	715a      	strb	r2, [r3, #5]
 80157d6:	68fb      	ldr	r3, [r7, #12]
 80157d8:	2b00      	cmp	r3, #0
 80157da:	d006      	beq.n	80157ea <USBD_CDC_GetHSCfgDesc+0x5a>
 80157dc:	68fb      	ldr	r3, [r7, #12]
 80157de:	2200      	movs	r2, #0
 80157e0:	711a      	strb	r2, [r3, #4]
 80157e2:	2200      	movs	r2, #0
 80157e4:	f042 0202 	orr.w	r2, r2, #2
 80157e8:	715a      	strb	r2, [r3, #5]
 80157ea:	687b      	ldr	r3, [r7, #4]
 80157ec:	2243      	movs	r2, #67	@ 0x43
 80157ee:	801a      	strh	r2, [r3, #0]
 80157f0:	4b02      	ldr	r3, [pc, #8]	@ (80157fc <USBD_CDC_GetHSCfgDesc+0x6c>)
 80157f2:	4618      	mov	r0, r3
 80157f4:	3718      	adds	r7, #24
 80157f6:	46bd      	mov	sp, r7
 80157f8:	bd80      	pop	{r7, pc}
 80157fa:	bf00      	nop
 80157fc:	20000064 	.word	0x20000064

08015800 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8015800:	b580      	push	{r7, lr}
 8015802:	b086      	sub	sp, #24
 8015804:	af00      	add	r7, sp, #0
 8015806:	6078      	str	r0, [r7, #4]
 8015808:	2182      	movs	r1, #130	@ 0x82
 801580a:	4818      	ldr	r0, [pc, #96]	@ (801586c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 801580c:	f000 fc99 	bl	8016142 <USBD_GetEpDesc>
 8015810:	6178      	str	r0, [r7, #20]
 8015812:	2101      	movs	r1, #1
 8015814:	4815      	ldr	r0, [pc, #84]	@ (801586c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8015816:	f000 fc94 	bl	8016142 <USBD_GetEpDesc>
 801581a:	6138      	str	r0, [r7, #16]
 801581c:	2181      	movs	r1, #129	@ 0x81
 801581e:	4813      	ldr	r0, [pc, #76]	@ (801586c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8015820:	f000 fc8f 	bl	8016142 <USBD_GetEpDesc>
 8015824:	60f8      	str	r0, [r7, #12]
 8015826:	697b      	ldr	r3, [r7, #20]
 8015828:	2b00      	cmp	r3, #0
 801582a:	d002      	beq.n	8015832 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 801582c:	697b      	ldr	r3, [r7, #20]
 801582e:	2210      	movs	r2, #16
 8015830:	719a      	strb	r2, [r3, #6]
 8015832:	693b      	ldr	r3, [r7, #16]
 8015834:	2b00      	cmp	r3, #0
 8015836:	d006      	beq.n	8015846 <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8015838:	693b      	ldr	r3, [r7, #16]
 801583a:	2200      	movs	r2, #0
 801583c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015840:	711a      	strb	r2, [r3, #4]
 8015842:	2200      	movs	r2, #0
 8015844:	715a      	strb	r2, [r3, #5]
 8015846:	68fb      	ldr	r3, [r7, #12]
 8015848:	2b00      	cmp	r3, #0
 801584a:	d006      	beq.n	801585a <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 801584c:	68fb      	ldr	r3, [r7, #12]
 801584e:	2200      	movs	r2, #0
 8015850:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015854:	711a      	strb	r2, [r3, #4]
 8015856:	2200      	movs	r2, #0
 8015858:	715a      	strb	r2, [r3, #5]
 801585a:	687b      	ldr	r3, [r7, #4]
 801585c:	2243      	movs	r2, #67	@ 0x43
 801585e:	801a      	strh	r2, [r3, #0]
 8015860:	4b02      	ldr	r3, [pc, #8]	@ (801586c <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8015862:	4618      	mov	r0, r3
 8015864:	3718      	adds	r7, #24
 8015866:	46bd      	mov	sp, r7
 8015868:	bd80      	pop	{r7, pc}
 801586a:	bf00      	nop
 801586c:	20000064 	.word	0x20000064

08015870 <USBD_CDC_GetDeviceQualifierDescriptor>:
 8015870:	b480      	push	{r7}
 8015872:	b083      	sub	sp, #12
 8015874:	af00      	add	r7, sp, #0
 8015876:	6078      	str	r0, [r7, #4]
 8015878:	687b      	ldr	r3, [r7, #4]
 801587a:	220a      	movs	r2, #10
 801587c:	801a      	strh	r2, [r3, #0]
 801587e:	4b03      	ldr	r3, [pc, #12]	@ (801588c <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 8015880:	4618      	mov	r0, r3
 8015882:	370c      	adds	r7, #12
 8015884:	46bd      	mov	sp, r7
 8015886:	f85d 7b04 	ldr.w	r7, [sp], #4
 801588a:	4770      	bx	lr
 801588c:	20000020 	.word	0x20000020

08015890 <USBD_CDC_RegisterInterface>:
 8015890:	b480      	push	{r7}
 8015892:	b083      	sub	sp, #12
 8015894:	af00      	add	r7, sp, #0
 8015896:	6078      	str	r0, [r7, #4]
 8015898:	6039      	str	r1, [r7, #0]
 801589a:	683b      	ldr	r3, [r7, #0]
 801589c:	2b00      	cmp	r3, #0
 801589e:	d101      	bne.n	80158a4 <USBD_CDC_RegisterInterface+0x14>
 80158a0:	2303      	movs	r3, #3
 80158a2:	e009      	b.n	80158b8 <USBD_CDC_RegisterInterface+0x28>
 80158a4:	687b      	ldr	r3, [r7, #4]
 80158a6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80158aa:	687a      	ldr	r2, [r7, #4]
 80158ac:	33b0      	adds	r3, #176	@ 0xb0
 80158ae:	009b      	lsls	r3, r3, #2
 80158b0:	4413      	add	r3, r2
 80158b2:	683a      	ldr	r2, [r7, #0]
 80158b4:	605a      	str	r2, [r3, #4]
 80158b6:	2300      	movs	r3, #0
 80158b8:	4618      	mov	r0, r3
 80158ba:	370c      	adds	r7, #12
 80158bc:	46bd      	mov	sp, r7
 80158be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158c2:	4770      	bx	lr

080158c4 <USBD_CDC_SetTxBuffer>:
 80158c4:	b480      	push	{r7}
 80158c6:	b087      	sub	sp, #28
 80158c8:	af00      	add	r7, sp, #0
 80158ca:	60f8      	str	r0, [r7, #12]
 80158cc:	60b9      	str	r1, [r7, #8]
 80158ce:	607a      	str	r2, [r7, #4]
 80158d0:	68fb      	ldr	r3, [r7, #12]
 80158d2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80158d6:	68fb      	ldr	r3, [r7, #12]
 80158d8:	32b0      	adds	r2, #176	@ 0xb0
 80158da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80158de:	617b      	str	r3, [r7, #20]
 80158e0:	697b      	ldr	r3, [r7, #20]
 80158e2:	2b00      	cmp	r3, #0
 80158e4:	d101      	bne.n	80158ea <USBD_CDC_SetTxBuffer+0x26>
 80158e6:	2303      	movs	r3, #3
 80158e8:	e008      	b.n	80158fc <USBD_CDC_SetTxBuffer+0x38>
 80158ea:	697b      	ldr	r3, [r7, #20]
 80158ec:	68ba      	ldr	r2, [r7, #8]
 80158ee:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 80158f2:	697b      	ldr	r3, [r7, #20]
 80158f4:	687a      	ldr	r2, [r7, #4]
 80158f6:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 80158fa:	2300      	movs	r3, #0
 80158fc:	4618      	mov	r0, r3
 80158fe:	371c      	adds	r7, #28
 8015900:	46bd      	mov	sp, r7
 8015902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015906:	4770      	bx	lr

08015908 <USBD_CDC_SetRxBuffer>:
 8015908:	b480      	push	{r7}
 801590a:	b085      	sub	sp, #20
 801590c:	af00      	add	r7, sp, #0
 801590e:	6078      	str	r0, [r7, #4]
 8015910:	6039      	str	r1, [r7, #0]
 8015912:	687b      	ldr	r3, [r7, #4]
 8015914:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015918:	687b      	ldr	r3, [r7, #4]
 801591a:	32b0      	adds	r2, #176	@ 0xb0
 801591c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015920:	60fb      	str	r3, [r7, #12]
 8015922:	68fb      	ldr	r3, [r7, #12]
 8015924:	2b00      	cmp	r3, #0
 8015926:	d101      	bne.n	801592c <USBD_CDC_SetRxBuffer+0x24>
 8015928:	2303      	movs	r3, #3
 801592a:	e004      	b.n	8015936 <USBD_CDC_SetRxBuffer+0x2e>
 801592c:	68fb      	ldr	r3, [r7, #12]
 801592e:	683a      	ldr	r2, [r7, #0]
 8015930:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8015934:	2300      	movs	r3, #0
 8015936:	4618      	mov	r0, r3
 8015938:	3714      	adds	r7, #20
 801593a:	46bd      	mov	sp, r7
 801593c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015940:	4770      	bx	lr
	...

08015944 <USBD_CDC_ReceivePacket>:
 8015944:	b580      	push	{r7, lr}
 8015946:	b084      	sub	sp, #16
 8015948:	af00      	add	r7, sp, #0
 801594a:	6078      	str	r0, [r7, #4]
 801594c:	687b      	ldr	r3, [r7, #4]
 801594e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015952:	687b      	ldr	r3, [r7, #4]
 8015954:	32b0      	adds	r2, #176	@ 0xb0
 8015956:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801595a:	60fb      	str	r3, [r7, #12]
 801595c:	687b      	ldr	r3, [r7, #4]
 801595e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015962:	687b      	ldr	r3, [r7, #4]
 8015964:	32b0      	adds	r2, #176	@ 0xb0
 8015966:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801596a:	2b00      	cmp	r3, #0
 801596c:	d101      	bne.n	8015972 <USBD_CDC_ReceivePacket+0x2e>
 801596e:	2303      	movs	r3, #3
 8015970:	e018      	b.n	80159a4 <USBD_CDC_ReceivePacket+0x60>
 8015972:	687b      	ldr	r3, [r7, #4]
 8015974:	7c1b      	ldrb	r3, [r3, #16]
 8015976:	2b00      	cmp	r3, #0
 8015978:	d10a      	bne.n	8015990 <USBD_CDC_ReceivePacket+0x4c>
 801597a:	4b0c      	ldr	r3, [pc, #48]	@ (80159ac <USBD_CDC_ReceivePacket+0x68>)
 801597c:	7819      	ldrb	r1, [r3, #0]
 801597e:	68fb      	ldr	r3, [r7, #12]
 8015980:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8015984:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8015988:	6878      	ldr	r0, [r7, #4]
 801598a:	f005 f8c1 	bl	801ab10 <USBD_LL_PrepareReceive>
 801598e:	e008      	b.n	80159a2 <USBD_CDC_ReceivePacket+0x5e>
 8015990:	4b06      	ldr	r3, [pc, #24]	@ (80159ac <USBD_CDC_ReceivePacket+0x68>)
 8015992:	7819      	ldrb	r1, [r3, #0]
 8015994:	68fb      	ldr	r3, [r7, #12]
 8015996:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 801599a:	2340      	movs	r3, #64	@ 0x40
 801599c:	6878      	ldr	r0, [r7, #4]
 801599e:	f005 f8b7 	bl	801ab10 <USBD_LL_PrepareReceive>
 80159a2:	2300      	movs	r3, #0
 80159a4:	4618      	mov	r0, r3
 80159a6:	3710      	adds	r7, #16
 80159a8:	46bd      	mov	sp, r7
 80159aa:	bd80      	pop	{r7, pc}
 80159ac:	200000a8 	.word	0x200000a8

080159b0 <USBD_Init>:
 80159b0:	b580      	push	{r7, lr}
 80159b2:	b086      	sub	sp, #24
 80159b4:	af00      	add	r7, sp, #0
 80159b6:	60f8      	str	r0, [r7, #12]
 80159b8:	60b9      	str	r1, [r7, #8]
 80159ba:	4613      	mov	r3, r2
 80159bc:	71fb      	strb	r3, [r7, #7]
 80159be:	68fb      	ldr	r3, [r7, #12]
 80159c0:	2b00      	cmp	r3, #0
 80159c2:	d101      	bne.n	80159c8 <USBD_Init+0x18>
 80159c4:	2303      	movs	r3, #3
 80159c6:	e01f      	b.n	8015a08 <USBD_Init+0x58>
 80159c8:	68fb      	ldr	r3, [r7, #12]
 80159ca:	2200      	movs	r2, #0
 80159cc:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 80159d0:	68fb      	ldr	r3, [r7, #12]
 80159d2:	2200      	movs	r2, #0
 80159d4:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 80159d8:	68fb      	ldr	r3, [r7, #12]
 80159da:	2200      	movs	r2, #0
 80159dc:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 80159e0:	68bb      	ldr	r3, [r7, #8]
 80159e2:	2b00      	cmp	r3, #0
 80159e4:	d003      	beq.n	80159ee <USBD_Init+0x3e>
 80159e6:	68fb      	ldr	r3, [r7, #12]
 80159e8:	68ba      	ldr	r2, [r7, #8]
 80159ea:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 80159ee:	68fb      	ldr	r3, [r7, #12]
 80159f0:	2201      	movs	r2, #1
 80159f2:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80159f6:	68fb      	ldr	r3, [r7, #12]
 80159f8:	79fa      	ldrb	r2, [r7, #7]
 80159fa:	701a      	strb	r2, [r3, #0]
 80159fc:	68f8      	ldr	r0, [r7, #12]
 80159fe:	f004 ff31 	bl	801a864 <USBD_LL_Init>
 8015a02:	4603      	mov	r3, r0
 8015a04:	75fb      	strb	r3, [r7, #23]
 8015a06:	7dfb      	ldrb	r3, [r7, #23]
 8015a08:	4618      	mov	r0, r3
 8015a0a:	3718      	adds	r7, #24
 8015a0c:	46bd      	mov	sp, r7
 8015a0e:	bd80      	pop	{r7, pc}

08015a10 <USBD_RegisterClass>:
 8015a10:	b580      	push	{r7, lr}
 8015a12:	b084      	sub	sp, #16
 8015a14:	af00      	add	r7, sp, #0
 8015a16:	6078      	str	r0, [r7, #4]
 8015a18:	6039      	str	r1, [r7, #0]
 8015a1a:	2300      	movs	r3, #0
 8015a1c:	81fb      	strh	r3, [r7, #14]
 8015a1e:	683b      	ldr	r3, [r7, #0]
 8015a20:	2b00      	cmp	r3, #0
 8015a22:	d101      	bne.n	8015a28 <USBD_RegisterClass+0x18>
 8015a24:	2303      	movs	r3, #3
 8015a26:	e025      	b.n	8015a74 <USBD_RegisterClass+0x64>
 8015a28:	687b      	ldr	r3, [r7, #4]
 8015a2a:	683a      	ldr	r2, [r7, #0]
 8015a2c:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8015a30:	687b      	ldr	r3, [r7, #4]
 8015a32:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015a36:	687b      	ldr	r3, [r7, #4]
 8015a38:	32ae      	adds	r2, #174	@ 0xae
 8015a3a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015a3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a40:	2b00      	cmp	r3, #0
 8015a42:	d00f      	beq.n	8015a64 <USBD_RegisterClass+0x54>
 8015a44:	687b      	ldr	r3, [r7, #4]
 8015a46:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015a4a:	687b      	ldr	r3, [r7, #4]
 8015a4c:	32ae      	adds	r2, #174	@ 0xae
 8015a4e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015a52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a54:	f107 020e 	add.w	r2, r7, #14
 8015a58:	4610      	mov	r0, r2
 8015a5a:	4798      	blx	r3
 8015a5c:	4602      	mov	r2, r0
 8015a5e:	687b      	ldr	r3, [r7, #4]
 8015a60:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8015a64:	687b      	ldr	r3, [r7, #4]
 8015a66:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 8015a6a:	1c5a      	adds	r2, r3, #1
 8015a6c:	687b      	ldr	r3, [r7, #4]
 8015a6e:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 8015a72:	2300      	movs	r3, #0
 8015a74:	4618      	mov	r0, r3
 8015a76:	3710      	adds	r7, #16
 8015a78:	46bd      	mov	sp, r7
 8015a7a:	bd80      	pop	{r7, pc}

08015a7c <USBD_Start>:
 8015a7c:	b580      	push	{r7, lr}
 8015a7e:	b082      	sub	sp, #8
 8015a80:	af00      	add	r7, sp, #0
 8015a82:	6078      	str	r0, [r7, #4]
 8015a84:	6878      	ldr	r0, [r7, #4]
 8015a86:	f004 ff39 	bl	801a8fc <USBD_LL_Start>
 8015a8a:	4603      	mov	r3, r0
 8015a8c:	4618      	mov	r0, r3
 8015a8e:	3708      	adds	r7, #8
 8015a90:	46bd      	mov	sp, r7
 8015a92:	bd80      	pop	{r7, pc}

08015a94 <USBD_RunTestMode>:
 8015a94:	b480      	push	{r7}
 8015a96:	b083      	sub	sp, #12
 8015a98:	af00      	add	r7, sp, #0
 8015a9a:	6078      	str	r0, [r7, #4]
 8015a9c:	2300      	movs	r3, #0
 8015a9e:	4618      	mov	r0, r3
 8015aa0:	370c      	adds	r7, #12
 8015aa2:	46bd      	mov	sp, r7
 8015aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015aa8:	4770      	bx	lr

08015aaa <USBD_SetClassConfig>:
 8015aaa:	b580      	push	{r7, lr}
 8015aac:	b084      	sub	sp, #16
 8015aae:	af00      	add	r7, sp, #0
 8015ab0:	6078      	str	r0, [r7, #4]
 8015ab2:	460b      	mov	r3, r1
 8015ab4:	70fb      	strb	r3, [r7, #3]
 8015ab6:	2300      	movs	r3, #0
 8015ab8:	73fb      	strb	r3, [r7, #15]
 8015aba:	687b      	ldr	r3, [r7, #4]
 8015abc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ac0:	2b00      	cmp	r3, #0
 8015ac2:	d009      	beq.n	8015ad8 <USBD_SetClassConfig+0x2e>
 8015ac4:	687b      	ldr	r3, [r7, #4]
 8015ac6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015aca:	681b      	ldr	r3, [r3, #0]
 8015acc:	78fa      	ldrb	r2, [r7, #3]
 8015ace:	4611      	mov	r1, r2
 8015ad0:	6878      	ldr	r0, [r7, #4]
 8015ad2:	4798      	blx	r3
 8015ad4:	4603      	mov	r3, r0
 8015ad6:	73fb      	strb	r3, [r7, #15]
 8015ad8:	7bfb      	ldrb	r3, [r7, #15]
 8015ada:	4618      	mov	r0, r3
 8015adc:	3710      	adds	r7, #16
 8015ade:	46bd      	mov	sp, r7
 8015ae0:	bd80      	pop	{r7, pc}

08015ae2 <USBD_ClrClassConfig>:
 8015ae2:	b580      	push	{r7, lr}
 8015ae4:	b084      	sub	sp, #16
 8015ae6:	af00      	add	r7, sp, #0
 8015ae8:	6078      	str	r0, [r7, #4]
 8015aea:	460b      	mov	r3, r1
 8015aec:	70fb      	strb	r3, [r7, #3]
 8015aee:	2300      	movs	r3, #0
 8015af0:	73fb      	strb	r3, [r7, #15]
 8015af2:	687b      	ldr	r3, [r7, #4]
 8015af4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015af8:	685b      	ldr	r3, [r3, #4]
 8015afa:	78fa      	ldrb	r2, [r7, #3]
 8015afc:	4611      	mov	r1, r2
 8015afe:	6878      	ldr	r0, [r7, #4]
 8015b00:	4798      	blx	r3
 8015b02:	4603      	mov	r3, r0
 8015b04:	2b00      	cmp	r3, #0
 8015b06:	d001      	beq.n	8015b0c <USBD_ClrClassConfig+0x2a>
 8015b08:	2303      	movs	r3, #3
 8015b0a:	73fb      	strb	r3, [r7, #15]
 8015b0c:	7bfb      	ldrb	r3, [r7, #15]
 8015b0e:	4618      	mov	r0, r3
 8015b10:	3710      	adds	r7, #16
 8015b12:	46bd      	mov	sp, r7
 8015b14:	bd80      	pop	{r7, pc}

08015b16 <USBD_LL_SetupStage>:
 8015b16:	b580      	push	{r7, lr}
 8015b18:	b084      	sub	sp, #16
 8015b1a:	af00      	add	r7, sp, #0
 8015b1c:	6078      	str	r0, [r7, #4]
 8015b1e:	6039      	str	r1, [r7, #0]
 8015b20:	687b      	ldr	r3, [r7, #4]
 8015b22:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b26:	6839      	ldr	r1, [r7, #0]
 8015b28:	4618      	mov	r0, r3
 8015b2a:	f001 f906 	bl	8016d3a <USBD_ParseSetupRequest>
 8015b2e:	687b      	ldr	r3, [r7, #4]
 8015b30:	2201      	movs	r2, #1
 8015b32:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015b36:	687b      	ldr	r3, [r7, #4]
 8015b38:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 8015b3c:	461a      	mov	r2, r3
 8015b3e:	687b      	ldr	r3, [r7, #4]
 8015b40:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8015b44:	687b      	ldr	r3, [r7, #4]
 8015b46:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015b4a:	f003 031f 	and.w	r3, r3, #31
 8015b4e:	2b02      	cmp	r3, #2
 8015b50:	d01a      	beq.n	8015b88 <USBD_LL_SetupStage+0x72>
 8015b52:	2b02      	cmp	r3, #2
 8015b54:	d822      	bhi.n	8015b9c <USBD_LL_SetupStage+0x86>
 8015b56:	2b00      	cmp	r3, #0
 8015b58:	d002      	beq.n	8015b60 <USBD_LL_SetupStage+0x4a>
 8015b5a:	2b01      	cmp	r3, #1
 8015b5c:	d00a      	beq.n	8015b74 <USBD_LL_SetupStage+0x5e>
 8015b5e:	e01d      	b.n	8015b9c <USBD_LL_SetupStage+0x86>
 8015b60:	687b      	ldr	r3, [r7, #4]
 8015b62:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b66:	4619      	mov	r1, r3
 8015b68:	6878      	ldr	r0, [r7, #4]
 8015b6a:	f000 fb5d 	bl	8016228 <USBD_StdDevReq>
 8015b6e:	4603      	mov	r3, r0
 8015b70:	73fb      	strb	r3, [r7, #15]
 8015b72:	e020      	b.n	8015bb6 <USBD_LL_SetupStage+0xa0>
 8015b74:	687b      	ldr	r3, [r7, #4]
 8015b76:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b7a:	4619      	mov	r1, r3
 8015b7c:	6878      	ldr	r0, [r7, #4]
 8015b7e:	f000 fbc5 	bl	801630c <USBD_StdItfReq>
 8015b82:	4603      	mov	r3, r0
 8015b84:	73fb      	strb	r3, [r7, #15]
 8015b86:	e016      	b.n	8015bb6 <USBD_LL_SetupStage+0xa0>
 8015b88:	687b      	ldr	r3, [r7, #4]
 8015b8a:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8015b8e:	4619      	mov	r1, r3
 8015b90:	6878      	ldr	r0, [r7, #4]
 8015b92:	f000 fc27 	bl	80163e4 <USBD_StdEPReq>
 8015b96:	4603      	mov	r3, r0
 8015b98:	73fb      	strb	r3, [r7, #15]
 8015b9a:	e00c      	b.n	8015bb6 <USBD_LL_SetupStage+0xa0>
 8015b9c:	687b      	ldr	r3, [r7, #4]
 8015b9e:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015ba2:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8015ba6:	b2db      	uxtb	r3, r3
 8015ba8:	4619      	mov	r1, r3
 8015baa:	6878      	ldr	r0, [r7, #4]
 8015bac:	f004 ff06 	bl	801a9bc <USBD_LL_StallEP>
 8015bb0:	4603      	mov	r3, r0
 8015bb2:	73fb      	strb	r3, [r7, #15]
 8015bb4:	bf00      	nop
 8015bb6:	7bfb      	ldrb	r3, [r7, #15]
 8015bb8:	4618      	mov	r0, r3
 8015bba:	3710      	adds	r7, #16
 8015bbc:	46bd      	mov	sp, r7
 8015bbe:	bd80      	pop	{r7, pc}

08015bc0 <USBD_LL_DataOutStage>:
 8015bc0:	b580      	push	{r7, lr}
 8015bc2:	b086      	sub	sp, #24
 8015bc4:	af00      	add	r7, sp, #0
 8015bc6:	60f8      	str	r0, [r7, #12]
 8015bc8:	460b      	mov	r3, r1
 8015bca:	607a      	str	r2, [r7, #4]
 8015bcc:	72fb      	strb	r3, [r7, #11]
 8015bce:	2300      	movs	r3, #0
 8015bd0:	75fb      	strb	r3, [r7, #23]
 8015bd2:	7afb      	ldrb	r3, [r7, #11]
 8015bd4:	2b00      	cmp	r3, #0
 8015bd6:	d16e      	bne.n	8015cb6 <USBD_LL_DataOutStage+0xf6>
 8015bd8:	68fb      	ldr	r3, [r7, #12]
 8015bda:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 8015bde:	613b      	str	r3, [r7, #16]
 8015be0:	68fb      	ldr	r3, [r7, #12]
 8015be2:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8015be6:	2b03      	cmp	r3, #3
 8015be8:	f040 8098 	bne.w	8015d1c <USBD_LL_DataOutStage+0x15c>
 8015bec:	693b      	ldr	r3, [r7, #16]
 8015bee:	689a      	ldr	r2, [r3, #8]
 8015bf0:	693b      	ldr	r3, [r7, #16]
 8015bf2:	68db      	ldr	r3, [r3, #12]
 8015bf4:	429a      	cmp	r2, r3
 8015bf6:	d913      	bls.n	8015c20 <USBD_LL_DataOutStage+0x60>
 8015bf8:	693b      	ldr	r3, [r7, #16]
 8015bfa:	689a      	ldr	r2, [r3, #8]
 8015bfc:	693b      	ldr	r3, [r7, #16]
 8015bfe:	68db      	ldr	r3, [r3, #12]
 8015c00:	1ad2      	subs	r2, r2, r3
 8015c02:	693b      	ldr	r3, [r7, #16]
 8015c04:	609a      	str	r2, [r3, #8]
 8015c06:	693b      	ldr	r3, [r7, #16]
 8015c08:	68da      	ldr	r2, [r3, #12]
 8015c0a:	693b      	ldr	r3, [r7, #16]
 8015c0c:	689b      	ldr	r3, [r3, #8]
 8015c0e:	4293      	cmp	r3, r2
 8015c10:	bf28      	it	cs
 8015c12:	4613      	movcs	r3, r2
 8015c14:	461a      	mov	r2, r3
 8015c16:	6879      	ldr	r1, [r7, #4]
 8015c18:	68f8      	ldr	r0, [r7, #12]
 8015c1a:	f001 f982 	bl	8016f22 <USBD_CtlContinueRx>
 8015c1e:	e07d      	b.n	8015d1c <USBD_LL_DataOutStage+0x15c>
 8015c20:	68fb      	ldr	r3, [r7, #12]
 8015c22:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8015c26:	f003 031f 	and.w	r3, r3, #31
 8015c2a:	2b02      	cmp	r3, #2
 8015c2c:	d014      	beq.n	8015c58 <USBD_LL_DataOutStage+0x98>
 8015c2e:	2b02      	cmp	r3, #2
 8015c30:	d81d      	bhi.n	8015c6e <USBD_LL_DataOutStage+0xae>
 8015c32:	2b00      	cmp	r3, #0
 8015c34:	d002      	beq.n	8015c3c <USBD_LL_DataOutStage+0x7c>
 8015c36:	2b01      	cmp	r3, #1
 8015c38:	d003      	beq.n	8015c42 <USBD_LL_DataOutStage+0x82>
 8015c3a:	e018      	b.n	8015c6e <USBD_LL_DataOutStage+0xae>
 8015c3c:	2300      	movs	r3, #0
 8015c3e:	75bb      	strb	r3, [r7, #22]
 8015c40:	e018      	b.n	8015c74 <USBD_LL_DataOutStage+0xb4>
 8015c42:	68fb      	ldr	r3, [r7, #12]
 8015c44:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8015c48:	b2db      	uxtb	r3, r3
 8015c4a:	4619      	mov	r1, r3
 8015c4c:	68f8      	ldr	r0, [r7, #12]
 8015c4e:	f000 fa5e 	bl	801610e <USBD_CoreFindIF>
 8015c52:	4603      	mov	r3, r0
 8015c54:	75bb      	strb	r3, [r7, #22]
 8015c56:	e00d      	b.n	8015c74 <USBD_LL_DataOutStage+0xb4>
 8015c58:	68fb      	ldr	r3, [r7, #12]
 8015c5a:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 8015c5e:	b2db      	uxtb	r3, r3
 8015c60:	4619      	mov	r1, r3
 8015c62:	68f8      	ldr	r0, [r7, #12]
 8015c64:	f000 fa60 	bl	8016128 <USBD_CoreFindEP>
 8015c68:	4603      	mov	r3, r0
 8015c6a:	75bb      	strb	r3, [r7, #22]
 8015c6c:	e002      	b.n	8015c74 <USBD_LL_DataOutStage+0xb4>
 8015c6e:	2300      	movs	r3, #0
 8015c70:	75bb      	strb	r3, [r7, #22]
 8015c72:	bf00      	nop
 8015c74:	7dbb      	ldrb	r3, [r7, #22]
 8015c76:	2b00      	cmp	r3, #0
 8015c78:	d119      	bne.n	8015cae <USBD_LL_DataOutStage+0xee>
 8015c7a:	68fb      	ldr	r3, [r7, #12]
 8015c7c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015c80:	b2db      	uxtb	r3, r3
 8015c82:	2b03      	cmp	r3, #3
 8015c84:	d113      	bne.n	8015cae <USBD_LL_DataOutStage+0xee>
 8015c86:	7dba      	ldrb	r2, [r7, #22]
 8015c88:	68fb      	ldr	r3, [r7, #12]
 8015c8a:	32ae      	adds	r2, #174	@ 0xae
 8015c8c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015c90:	691b      	ldr	r3, [r3, #16]
 8015c92:	2b00      	cmp	r3, #0
 8015c94:	d00b      	beq.n	8015cae <USBD_LL_DataOutStage+0xee>
 8015c96:	7dba      	ldrb	r2, [r7, #22]
 8015c98:	68fb      	ldr	r3, [r7, #12]
 8015c9a:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015c9e:	7dba      	ldrb	r2, [r7, #22]
 8015ca0:	68fb      	ldr	r3, [r7, #12]
 8015ca2:	32ae      	adds	r2, #174	@ 0xae
 8015ca4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015ca8:	691b      	ldr	r3, [r3, #16]
 8015caa:	68f8      	ldr	r0, [r7, #12]
 8015cac:	4798      	blx	r3
 8015cae:	68f8      	ldr	r0, [r7, #12]
 8015cb0:	f001 f948 	bl	8016f44 <USBD_CtlSendStatus>
 8015cb4:	e032      	b.n	8015d1c <USBD_LL_DataOutStage+0x15c>
 8015cb6:	7afb      	ldrb	r3, [r7, #11]
 8015cb8:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8015cbc:	b2db      	uxtb	r3, r3
 8015cbe:	4619      	mov	r1, r3
 8015cc0:	68f8      	ldr	r0, [r7, #12]
 8015cc2:	f000 fa31 	bl	8016128 <USBD_CoreFindEP>
 8015cc6:	4603      	mov	r3, r0
 8015cc8:	75bb      	strb	r3, [r7, #22]
 8015cca:	7dbb      	ldrb	r3, [r7, #22]
 8015ccc:	2bff      	cmp	r3, #255	@ 0xff
 8015cce:	d025      	beq.n	8015d1c <USBD_LL_DataOutStage+0x15c>
 8015cd0:	7dbb      	ldrb	r3, [r7, #22]
 8015cd2:	2b00      	cmp	r3, #0
 8015cd4:	d122      	bne.n	8015d1c <USBD_LL_DataOutStage+0x15c>
 8015cd6:	68fb      	ldr	r3, [r7, #12]
 8015cd8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015cdc:	b2db      	uxtb	r3, r3
 8015cde:	2b03      	cmp	r3, #3
 8015ce0:	d117      	bne.n	8015d12 <USBD_LL_DataOutStage+0x152>
 8015ce2:	7dba      	ldrb	r2, [r7, #22]
 8015ce4:	68fb      	ldr	r3, [r7, #12]
 8015ce6:	32ae      	adds	r2, #174	@ 0xae
 8015ce8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015cec:	699b      	ldr	r3, [r3, #24]
 8015cee:	2b00      	cmp	r3, #0
 8015cf0:	d00f      	beq.n	8015d12 <USBD_LL_DataOutStage+0x152>
 8015cf2:	7dba      	ldrb	r2, [r7, #22]
 8015cf4:	68fb      	ldr	r3, [r7, #12]
 8015cf6:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015cfa:	7dba      	ldrb	r2, [r7, #22]
 8015cfc:	68fb      	ldr	r3, [r7, #12]
 8015cfe:	32ae      	adds	r2, #174	@ 0xae
 8015d00:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015d04:	699b      	ldr	r3, [r3, #24]
 8015d06:	7afa      	ldrb	r2, [r7, #11]
 8015d08:	4611      	mov	r1, r2
 8015d0a:	68f8      	ldr	r0, [r7, #12]
 8015d0c:	4798      	blx	r3
 8015d0e:	4603      	mov	r3, r0
 8015d10:	75fb      	strb	r3, [r7, #23]
 8015d12:	7dfb      	ldrb	r3, [r7, #23]
 8015d14:	2b00      	cmp	r3, #0
 8015d16:	d001      	beq.n	8015d1c <USBD_LL_DataOutStage+0x15c>
 8015d18:	7dfb      	ldrb	r3, [r7, #23]
 8015d1a:	e000      	b.n	8015d1e <USBD_LL_DataOutStage+0x15e>
 8015d1c:	2300      	movs	r3, #0
 8015d1e:	4618      	mov	r0, r3
 8015d20:	3718      	adds	r7, #24
 8015d22:	46bd      	mov	sp, r7
 8015d24:	bd80      	pop	{r7, pc}

08015d26 <USBD_LL_DataInStage>:
 8015d26:	b580      	push	{r7, lr}
 8015d28:	b086      	sub	sp, #24
 8015d2a:	af00      	add	r7, sp, #0
 8015d2c:	60f8      	str	r0, [r7, #12]
 8015d2e:	460b      	mov	r3, r1
 8015d30:	607a      	str	r2, [r7, #4]
 8015d32:	72fb      	strb	r3, [r7, #11]
 8015d34:	7afb      	ldrb	r3, [r7, #11]
 8015d36:	2b00      	cmp	r3, #0
 8015d38:	d16f      	bne.n	8015e1a <USBD_LL_DataInStage+0xf4>
 8015d3a:	68fb      	ldr	r3, [r7, #12]
 8015d3c:	3314      	adds	r3, #20
 8015d3e:	613b      	str	r3, [r7, #16]
 8015d40:	68fb      	ldr	r3, [r7, #12]
 8015d42:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8015d46:	2b02      	cmp	r3, #2
 8015d48:	d15a      	bne.n	8015e00 <USBD_LL_DataInStage+0xda>
 8015d4a:	693b      	ldr	r3, [r7, #16]
 8015d4c:	689a      	ldr	r2, [r3, #8]
 8015d4e:	693b      	ldr	r3, [r7, #16]
 8015d50:	68db      	ldr	r3, [r3, #12]
 8015d52:	429a      	cmp	r2, r3
 8015d54:	d914      	bls.n	8015d80 <USBD_LL_DataInStage+0x5a>
 8015d56:	693b      	ldr	r3, [r7, #16]
 8015d58:	689a      	ldr	r2, [r3, #8]
 8015d5a:	693b      	ldr	r3, [r7, #16]
 8015d5c:	68db      	ldr	r3, [r3, #12]
 8015d5e:	1ad2      	subs	r2, r2, r3
 8015d60:	693b      	ldr	r3, [r7, #16]
 8015d62:	609a      	str	r2, [r3, #8]
 8015d64:	693b      	ldr	r3, [r7, #16]
 8015d66:	689b      	ldr	r3, [r3, #8]
 8015d68:	461a      	mov	r2, r3
 8015d6a:	6879      	ldr	r1, [r7, #4]
 8015d6c:	68f8      	ldr	r0, [r7, #12]
 8015d6e:	f001 f8aa 	bl	8016ec6 <USBD_CtlContinueSendData>
 8015d72:	2300      	movs	r3, #0
 8015d74:	2200      	movs	r2, #0
 8015d76:	2100      	movs	r1, #0
 8015d78:	68f8      	ldr	r0, [r7, #12]
 8015d7a:	f004 fec9 	bl	801ab10 <USBD_LL_PrepareReceive>
 8015d7e:	e03f      	b.n	8015e00 <USBD_LL_DataInStage+0xda>
 8015d80:	693b      	ldr	r3, [r7, #16]
 8015d82:	68da      	ldr	r2, [r3, #12]
 8015d84:	693b      	ldr	r3, [r7, #16]
 8015d86:	689b      	ldr	r3, [r3, #8]
 8015d88:	429a      	cmp	r2, r3
 8015d8a:	d11c      	bne.n	8015dc6 <USBD_LL_DataInStage+0xa0>
 8015d8c:	693b      	ldr	r3, [r7, #16]
 8015d8e:	685a      	ldr	r2, [r3, #4]
 8015d90:	693b      	ldr	r3, [r7, #16]
 8015d92:	68db      	ldr	r3, [r3, #12]
 8015d94:	429a      	cmp	r2, r3
 8015d96:	d316      	bcc.n	8015dc6 <USBD_LL_DataInStage+0xa0>
 8015d98:	693b      	ldr	r3, [r7, #16]
 8015d9a:	685a      	ldr	r2, [r3, #4]
 8015d9c:	68fb      	ldr	r3, [r7, #12]
 8015d9e:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 8015da2:	429a      	cmp	r2, r3
 8015da4:	d20f      	bcs.n	8015dc6 <USBD_LL_DataInStage+0xa0>
 8015da6:	2200      	movs	r2, #0
 8015da8:	2100      	movs	r1, #0
 8015daa:	68f8      	ldr	r0, [r7, #12]
 8015dac:	f001 f88b 	bl	8016ec6 <USBD_CtlContinueSendData>
 8015db0:	68fb      	ldr	r3, [r7, #12]
 8015db2:	2200      	movs	r2, #0
 8015db4:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8015db8:	2300      	movs	r3, #0
 8015dba:	2200      	movs	r2, #0
 8015dbc:	2100      	movs	r1, #0
 8015dbe:	68f8      	ldr	r0, [r7, #12]
 8015dc0:	f004 fea6 	bl	801ab10 <USBD_LL_PrepareReceive>
 8015dc4:	e01c      	b.n	8015e00 <USBD_LL_DataInStage+0xda>
 8015dc6:	68fb      	ldr	r3, [r7, #12]
 8015dc8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015dcc:	b2db      	uxtb	r3, r3
 8015dce:	2b03      	cmp	r3, #3
 8015dd0:	d10f      	bne.n	8015df2 <USBD_LL_DataInStage+0xcc>
 8015dd2:	68fb      	ldr	r3, [r7, #12]
 8015dd4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015dd8:	68db      	ldr	r3, [r3, #12]
 8015dda:	2b00      	cmp	r3, #0
 8015ddc:	d009      	beq.n	8015df2 <USBD_LL_DataInStage+0xcc>
 8015dde:	68fb      	ldr	r3, [r7, #12]
 8015de0:	2200      	movs	r2, #0
 8015de2:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015de6:	68fb      	ldr	r3, [r7, #12]
 8015de8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015dec:	68db      	ldr	r3, [r3, #12]
 8015dee:	68f8      	ldr	r0, [r7, #12]
 8015df0:	4798      	blx	r3
 8015df2:	2180      	movs	r1, #128	@ 0x80
 8015df4:	68f8      	ldr	r0, [r7, #12]
 8015df6:	f004 fde1 	bl	801a9bc <USBD_LL_StallEP>
 8015dfa:	68f8      	ldr	r0, [r7, #12]
 8015dfc:	f001 f8b5 	bl	8016f6a <USBD_CtlReceiveStatus>
 8015e00:	68fb      	ldr	r3, [r7, #12]
 8015e02:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8015e06:	2b00      	cmp	r3, #0
 8015e08:	d03a      	beq.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e0a:	68f8      	ldr	r0, [r7, #12]
 8015e0c:	f7ff fe42 	bl	8015a94 <USBD_RunTestMode>
 8015e10:	68fb      	ldr	r3, [r7, #12]
 8015e12:	2200      	movs	r2, #0
 8015e14:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8015e18:	e032      	b.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e1a:	7afb      	ldrb	r3, [r7, #11]
 8015e1c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8015e20:	b2db      	uxtb	r3, r3
 8015e22:	4619      	mov	r1, r3
 8015e24:	68f8      	ldr	r0, [r7, #12]
 8015e26:	f000 f97f 	bl	8016128 <USBD_CoreFindEP>
 8015e2a:	4603      	mov	r3, r0
 8015e2c:	75fb      	strb	r3, [r7, #23]
 8015e2e:	7dfb      	ldrb	r3, [r7, #23]
 8015e30:	2bff      	cmp	r3, #255	@ 0xff
 8015e32:	d025      	beq.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e34:	7dfb      	ldrb	r3, [r7, #23]
 8015e36:	2b00      	cmp	r3, #0
 8015e38:	d122      	bne.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e3a:	68fb      	ldr	r3, [r7, #12]
 8015e3c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015e40:	b2db      	uxtb	r3, r3
 8015e42:	2b03      	cmp	r3, #3
 8015e44:	d11c      	bne.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e46:	7dfa      	ldrb	r2, [r7, #23]
 8015e48:	68fb      	ldr	r3, [r7, #12]
 8015e4a:	32ae      	adds	r2, #174	@ 0xae
 8015e4c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015e50:	695b      	ldr	r3, [r3, #20]
 8015e52:	2b00      	cmp	r3, #0
 8015e54:	d014      	beq.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e56:	7dfa      	ldrb	r2, [r7, #23]
 8015e58:	68fb      	ldr	r3, [r7, #12]
 8015e5a:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8015e5e:	7dfa      	ldrb	r2, [r7, #23]
 8015e60:	68fb      	ldr	r3, [r7, #12]
 8015e62:	32ae      	adds	r2, #174	@ 0xae
 8015e64:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8015e68:	695b      	ldr	r3, [r3, #20]
 8015e6a:	7afa      	ldrb	r2, [r7, #11]
 8015e6c:	4611      	mov	r1, r2
 8015e6e:	68f8      	ldr	r0, [r7, #12]
 8015e70:	4798      	blx	r3
 8015e72:	4603      	mov	r3, r0
 8015e74:	75bb      	strb	r3, [r7, #22]
 8015e76:	7dbb      	ldrb	r3, [r7, #22]
 8015e78:	2b00      	cmp	r3, #0
 8015e7a:	d001      	beq.n	8015e80 <USBD_LL_DataInStage+0x15a>
 8015e7c:	7dbb      	ldrb	r3, [r7, #22]
 8015e7e:	e000      	b.n	8015e82 <USBD_LL_DataInStage+0x15c>
 8015e80:	2300      	movs	r3, #0
 8015e82:	4618      	mov	r0, r3
 8015e84:	3718      	adds	r7, #24
 8015e86:	46bd      	mov	sp, r7
 8015e88:	bd80      	pop	{r7, pc}

08015e8a <USBD_LL_Reset>:
 8015e8a:	b580      	push	{r7, lr}
 8015e8c:	b084      	sub	sp, #16
 8015e8e:	af00      	add	r7, sp, #0
 8015e90:	6078      	str	r0, [r7, #4]
 8015e92:	2300      	movs	r3, #0
 8015e94:	73fb      	strb	r3, [r7, #15]
 8015e96:	687b      	ldr	r3, [r7, #4]
 8015e98:	2201      	movs	r2, #1
 8015e9a:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015e9e:	687b      	ldr	r3, [r7, #4]
 8015ea0:	2200      	movs	r2, #0
 8015ea2:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8015ea6:	687b      	ldr	r3, [r7, #4]
 8015ea8:	2200      	movs	r2, #0
 8015eaa:	605a      	str	r2, [r3, #4]
 8015eac:	687b      	ldr	r3, [r7, #4]
 8015eae:	2200      	movs	r2, #0
 8015eb0:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8015eb4:	687b      	ldr	r3, [r7, #4]
 8015eb6:	2200      	movs	r2, #0
 8015eb8:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8015ebc:	687b      	ldr	r3, [r7, #4]
 8015ebe:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ec2:	2b00      	cmp	r3, #0
 8015ec4:	d014      	beq.n	8015ef0 <USBD_LL_Reset+0x66>
 8015ec6:	687b      	ldr	r3, [r7, #4]
 8015ec8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ecc:	685b      	ldr	r3, [r3, #4]
 8015ece:	2b00      	cmp	r3, #0
 8015ed0:	d00e      	beq.n	8015ef0 <USBD_LL_Reset+0x66>
 8015ed2:	687b      	ldr	r3, [r7, #4]
 8015ed4:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015ed8:	685b      	ldr	r3, [r3, #4]
 8015eda:	687a      	ldr	r2, [r7, #4]
 8015edc:	6852      	ldr	r2, [r2, #4]
 8015ede:	b2d2      	uxtb	r2, r2
 8015ee0:	4611      	mov	r1, r2
 8015ee2:	6878      	ldr	r0, [r7, #4]
 8015ee4:	4798      	blx	r3
 8015ee6:	4603      	mov	r3, r0
 8015ee8:	2b00      	cmp	r3, #0
 8015eea:	d001      	beq.n	8015ef0 <USBD_LL_Reset+0x66>
 8015eec:	2303      	movs	r3, #3
 8015eee:	73fb      	strb	r3, [r7, #15]
 8015ef0:	2340      	movs	r3, #64	@ 0x40
 8015ef2:	2200      	movs	r2, #0
 8015ef4:	2100      	movs	r1, #0
 8015ef6:	6878      	ldr	r0, [r7, #4]
 8015ef8:	f004 fd1b 	bl	801a932 <USBD_LL_OpenEP>
 8015efc:	687b      	ldr	r3, [r7, #4]
 8015efe:	2201      	movs	r2, #1
 8015f00:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 8015f04:	687b      	ldr	r3, [r7, #4]
 8015f06:	2240      	movs	r2, #64	@ 0x40
 8015f08:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 8015f0c:	2340      	movs	r3, #64	@ 0x40
 8015f0e:	2200      	movs	r2, #0
 8015f10:	2180      	movs	r1, #128	@ 0x80
 8015f12:	6878      	ldr	r0, [r7, #4]
 8015f14:	f004 fd0d 	bl	801a932 <USBD_LL_OpenEP>
 8015f18:	687b      	ldr	r3, [r7, #4]
 8015f1a:	2201      	movs	r2, #1
 8015f1c:	849a      	strh	r2, [r3, #36]	@ 0x24
 8015f1e:	687b      	ldr	r3, [r7, #4]
 8015f20:	2240      	movs	r2, #64	@ 0x40
 8015f22:	621a      	str	r2, [r3, #32]
 8015f24:	7bfb      	ldrb	r3, [r7, #15]
 8015f26:	4618      	mov	r0, r3
 8015f28:	3710      	adds	r7, #16
 8015f2a:	46bd      	mov	sp, r7
 8015f2c:	bd80      	pop	{r7, pc}

08015f2e <USBD_LL_SetSpeed>:
 8015f2e:	b480      	push	{r7}
 8015f30:	b083      	sub	sp, #12
 8015f32:	af00      	add	r7, sp, #0
 8015f34:	6078      	str	r0, [r7, #4]
 8015f36:	460b      	mov	r3, r1
 8015f38:	70fb      	strb	r3, [r7, #3]
 8015f3a:	687b      	ldr	r3, [r7, #4]
 8015f3c:	78fa      	ldrb	r2, [r7, #3]
 8015f3e:	741a      	strb	r2, [r3, #16]
 8015f40:	2300      	movs	r3, #0
 8015f42:	4618      	mov	r0, r3
 8015f44:	370c      	adds	r7, #12
 8015f46:	46bd      	mov	sp, r7
 8015f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f4c:	4770      	bx	lr

08015f4e <USBD_LL_Suspend>:
 8015f4e:	b480      	push	{r7}
 8015f50:	b083      	sub	sp, #12
 8015f52:	af00      	add	r7, sp, #0
 8015f54:	6078      	str	r0, [r7, #4]
 8015f56:	687b      	ldr	r3, [r7, #4]
 8015f58:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015f5c:	b2da      	uxtb	r2, r3
 8015f5e:	687b      	ldr	r3, [r7, #4]
 8015f60:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 8015f64:	687b      	ldr	r3, [r7, #4]
 8015f66:	2204      	movs	r2, #4
 8015f68:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015f6c:	2300      	movs	r3, #0
 8015f6e:	4618      	mov	r0, r3
 8015f70:	370c      	adds	r7, #12
 8015f72:	46bd      	mov	sp, r7
 8015f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f78:	4770      	bx	lr

08015f7a <USBD_LL_Resume>:
 8015f7a:	b480      	push	{r7}
 8015f7c:	b083      	sub	sp, #12
 8015f7e:	af00      	add	r7, sp, #0
 8015f80:	6078      	str	r0, [r7, #4]
 8015f82:	687b      	ldr	r3, [r7, #4]
 8015f84:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015f88:	b2db      	uxtb	r3, r3
 8015f8a:	2b04      	cmp	r3, #4
 8015f8c:	d106      	bne.n	8015f9c <USBD_LL_Resume+0x22>
 8015f8e:	687b      	ldr	r3, [r7, #4]
 8015f90:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 8015f94:	b2da      	uxtb	r2, r3
 8015f96:	687b      	ldr	r3, [r7, #4]
 8015f98:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8015f9c:	2300      	movs	r3, #0
 8015f9e:	4618      	mov	r0, r3
 8015fa0:	370c      	adds	r7, #12
 8015fa2:	46bd      	mov	sp, r7
 8015fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fa8:	4770      	bx	lr

08015faa <USBD_LL_SOF>:
 8015faa:	b580      	push	{r7, lr}
 8015fac:	b082      	sub	sp, #8
 8015fae:	af00      	add	r7, sp, #0
 8015fb0:	6078      	str	r0, [r7, #4]
 8015fb2:	687b      	ldr	r3, [r7, #4]
 8015fb4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8015fb8:	b2db      	uxtb	r3, r3
 8015fba:	2b03      	cmp	r3, #3
 8015fbc:	d110      	bne.n	8015fe0 <USBD_LL_SOF+0x36>
 8015fbe:	687b      	ldr	r3, [r7, #4]
 8015fc0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015fc4:	2b00      	cmp	r3, #0
 8015fc6:	d00b      	beq.n	8015fe0 <USBD_LL_SOF+0x36>
 8015fc8:	687b      	ldr	r3, [r7, #4]
 8015fca:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015fce:	69db      	ldr	r3, [r3, #28]
 8015fd0:	2b00      	cmp	r3, #0
 8015fd2:	d005      	beq.n	8015fe0 <USBD_LL_SOF+0x36>
 8015fd4:	687b      	ldr	r3, [r7, #4]
 8015fd6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8015fda:	69db      	ldr	r3, [r3, #28]
 8015fdc:	6878      	ldr	r0, [r7, #4]
 8015fde:	4798      	blx	r3
 8015fe0:	2300      	movs	r3, #0
 8015fe2:	4618      	mov	r0, r3
 8015fe4:	3708      	adds	r7, #8
 8015fe6:	46bd      	mov	sp, r7
 8015fe8:	bd80      	pop	{r7, pc}

08015fea <USBD_LL_IsoINIncomplete>:
 8015fea:	b580      	push	{r7, lr}
 8015fec:	b082      	sub	sp, #8
 8015fee:	af00      	add	r7, sp, #0
 8015ff0:	6078      	str	r0, [r7, #4]
 8015ff2:	460b      	mov	r3, r1
 8015ff4:	70fb      	strb	r3, [r7, #3]
 8015ff6:	687b      	ldr	r3, [r7, #4]
 8015ff8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8015ffc:	687b      	ldr	r3, [r7, #4]
 8015ffe:	32ae      	adds	r2, #174	@ 0xae
 8016000:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016004:	2b00      	cmp	r3, #0
 8016006:	d101      	bne.n	801600c <USBD_LL_IsoINIncomplete+0x22>
 8016008:	2303      	movs	r3, #3
 801600a:	e01c      	b.n	8016046 <USBD_LL_IsoINIncomplete+0x5c>
 801600c:	687b      	ldr	r3, [r7, #4]
 801600e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016012:	b2db      	uxtb	r3, r3
 8016014:	2b03      	cmp	r3, #3
 8016016:	d115      	bne.n	8016044 <USBD_LL_IsoINIncomplete+0x5a>
 8016018:	687b      	ldr	r3, [r7, #4]
 801601a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 801601e:	687b      	ldr	r3, [r7, #4]
 8016020:	32ae      	adds	r2, #174	@ 0xae
 8016022:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016026:	6a1b      	ldr	r3, [r3, #32]
 8016028:	2b00      	cmp	r3, #0
 801602a:	d00b      	beq.n	8016044 <USBD_LL_IsoINIncomplete+0x5a>
 801602c:	687b      	ldr	r3, [r7, #4]
 801602e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016032:	687b      	ldr	r3, [r7, #4]
 8016034:	32ae      	adds	r2, #174	@ 0xae
 8016036:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801603a:	6a1b      	ldr	r3, [r3, #32]
 801603c:	78fa      	ldrb	r2, [r7, #3]
 801603e:	4611      	mov	r1, r2
 8016040:	6878      	ldr	r0, [r7, #4]
 8016042:	4798      	blx	r3
 8016044:	2300      	movs	r3, #0
 8016046:	4618      	mov	r0, r3
 8016048:	3708      	adds	r7, #8
 801604a:	46bd      	mov	sp, r7
 801604c:	bd80      	pop	{r7, pc}

0801604e <USBD_LL_IsoOUTIncomplete>:
 801604e:	b580      	push	{r7, lr}
 8016050:	b082      	sub	sp, #8
 8016052:	af00      	add	r7, sp, #0
 8016054:	6078      	str	r0, [r7, #4]
 8016056:	460b      	mov	r3, r1
 8016058:	70fb      	strb	r3, [r7, #3]
 801605a:	687b      	ldr	r3, [r7, #4]
 801605c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016060:	687b      	ldr	r3, [r7, #4]
 8016062:	32ae      	adds	r2, #174	@ 0xae
 8016064:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016068:	2b00      	cmp	r3, #0
 801606a:	d101      	bne.n	8016070 <USBD_LL_IsoOUTIncomplete+0x22>
 801606c:	2303      	movs	r3, #3
 801606e:	e01c      	b.n	80160aa <USBD_LL_IsoOUTIncomplete+0x5c>
 8016070:	687b      	ldr	r3, [r7, #4]
 8016072:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016076:	b2db      	uxtb	r3, r3
 8016078:	2b03      	cmp	r3, #3
 801607a:	d115      	bne.n	80160a8 <USBD_LL_IsoOUTIncomplete+0x5a>
 801607c:	687b      	ldr	r3, [r7, #4]
 801607e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016082:	687b      	ldr	r3, [r7, #4]
 8016084:	32ae      	adds	r2, #174	@ 0xae
 8016086:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801608a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801608c:	2b00      	cmp	r3, #0
 801608e:	d00b      	beq.n	80160a8 <USBD_LL_IsoOUTIncomplete+0x5a>
 8016090:	687b      	ldr	r3, [r7, #4]
 8016092:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016096:	687b      	ldr	r3, [r7, #4]
 8016098:	32ae      	adds	r2, #174	@ 0xae
 801609a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801609e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80160a0:	78fa      	ldrb	r2, [r7, #3]
 80160a2:	4611      	mov	r1, r2
 80160a4:	6878      	ldr	r0, [r7, #4]
 80160a6:	4798      	blx	r3
 80160a8:	2300      	movs	r3, #0
 80160aa:	4618      	mov	r0, r3
 80160ac:	3708      	adds	r7, #8
 80160ae:	46bd      	mov	sp, r7
 80160b0:	bd80      	pop	{r7, pc}

080160b2 <USBD_LL_DevConnected>:
 80160b2:	b480      	push	{r7}
 80160b4:	b083      	sub	sp, #12
 80160b6:	af00      	add	r7, sp, #0
 80160b8:	6078      	str	r0, [r7, #4]
 80160ba:	2300      	movs	r3, #0
 80160bc:	4618      	mov	r0, r3
 80160be:	370c      	adds	r7, #12
 80160c0:	46bd      	mov	sp, r7
 80160c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80160c6:	4770      	bx	lr

080160c8 <USBD_LL_DevDisconnected>:
 80160c8:	b580      	push	{r7, lr}
 80160ca:	b084      	sub	sp, #16
 80160cc:	af00      	add	r7, sp, #0
 80160ce:	6078      	str	r0, [r7, #4]
 80160d0:	2300      	movs	r3, #0
 80160d2:	73fb      	strb	r3, [r7, #15]
 80160d4:	687b      	ldr	r3, [r7, #4]
 80160d6:	2201      	movs	r2, #1
 80160d8:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80160dc:	687b      	ldr	r3, [r7, #4]
 80160de:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80160e2:	2b00      	cmp	r3, #0
 80160e4:	d00e      	beq.n	8016104 <USBD_LL_DevDisconnected+0x3c>
 80160e6:	687b      	ldr	r3, [r7, #4]
 80160e8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80160ec:	685b      	ldr	r3, [r3, #4]
 80160ee:	687a      	ldr	r2, [r7, #4]
 80160f0:	6852      	ldr	r2, [r2, #4]
 80160f2:	b2d2      	uxtb	r2, r2
 80160f4:	4611      	mov	r1, r2
 80160f6:	6878      	ldr	r0, [r7, #4]
 80160f8:	4798      	blx	r3
 80160fa:	4603      	mov	r3, r0
 80160fc:	2b00      	cmp	r3, #0
 80160fe:	d001      	beq.n	8016104 <USBD_LL_DevDisconnected+0x3c>
 8016100:	2303      	movs	r3, #3
 8016102:	73fb      	strb	r3, [r7, #15]
 8016104:	7bfb      	ldrb	r3, [r7, #15]
 8016106:	4618      	mov	r0, r3
 8016108:	3710      	adds	r7, #16
 801610a:	46bd      	mov	sp, r7
 801610c:	bd80      	pop	{r7, pc}

0801610e <USBD_CoreFindIF>:
 801610e:	b480      	push	{r7}
 8016110:	b083      	sub	sp, #12
 8016112:	af00      	add	r7, sp, #0
 8016114:	6078      	str	r0, [r7, #4]
 8016116:	460b      	mov	r3, r1
 8016118:	70fb      	strb	r3, [r7, #3]
 801611a:	2300      	movs	r3, #0
 801611c:	4618      	mov	r0, r3
 801611e:	370c      	adds	r7, #12
 8016120:	46bd      	mov	sp, r7
 8016122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016126:	4770      	bx	lr

08016128 <USBD_CoreFindEP>:
 8016128:	b480      	push	{r7}
 801612a:	b083      	sub	sp, #12
 801612c:	af00      	add	r7, sp, #0
 801612e:	6078      	str	r0, [r7, #4]
 8016130:	460b      	mov	r3, r1
 8016132:	70fb      	strb	r3, [r7, #3]
 8016134:	2300      	movs	r3, #0
 8016136:	4618      	mov	r0, r3
 8016138:	370c      	adds	r7, #12
 801613a:	46bd      	mov	sp, r7
 801613c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016140:	4770      	bx	lr

08016142 <USBD_GetEpDesc>:
 8016142:	b580      	push	{r7, lr}
 8016144:	b086      	sub	sp, #24
 8016146:	af00      	add	r7, sp, #0
 8016148:	6078      	str	r0, [r7, #4]
 801614a:	460b      	mov	r3, r1
 801614c:	70fb      	strb	r3, [r7, #3]
 801614e:	687b      	ldr	r3, [r7, #4]
 8016150:	617b      	str	r3, [r7, #20]
 8016152:	687b      	ldr	r3, [r7, #4]
 8016154:	60fb      	str	r3, [r7, #12]
 8016156:	2300      	movs	r3, #0
 8016158:	613b      	str	r3, [r7, #16]
 801615a:	68fb      	ldr	r3, [r7, #12]
 801615c:	885b      	ldrh	r3, [r3, #2]
 801615e:	b29b      	uxth	r3, r3
 8016160:	68fa      	ldr	r2, [r7, #12]
 8016162:	7812      	ldrb	r2, [r2, #0]
 8016164:	4293      	cmp	r3, r2
 8016166:	d91f      	bls.n	80161a8 <USBD_GetEpDesc+0x66>
 8016168:	68fb      	ldr	r3, [r7, #12]
 801616a:	781b      	ldrb	r3, [r3, #0]
 801616c:	817b      	strh	r3, [r7, #10]
 801616e:	e013      	b.n	8016198 <USBD_GetEpDesc+0x56>
 8016170:	f107 030a 	add.w	r3, r7, #10
 8016174:	4619      	mov	r1, r3
 8016176:	6978      	ldr	r0, [r7, #20]
 8016178:	f000 f81b 	bl	80161b2 <USBD_GetNextDesc>
 801617c:	6178      	str	r0, [r7, #20]
 801617e:	697b      	ldr	r3, [r7, #20]
 8016180:	785b      	ldrb	r3, [r3, #1]
 8016182:	2b05      	cmp	r3, #5
 8016184:	d108      	bne.n	8016198 <USBD_GetEpDesc+0x56>
 8016186:	697b      	ldr	r3, [r7, #20]
 8016188:	613b      	str	r3, [r7, #16]
 801618a:	693b      	ldr	r3, [r7, #16]
 801618c:	789b      	ldrb	r3, [r3, #2]
 801618e:	78fa      	ldrb	r2, [r7, #3]
 8016190:	429a      	cmp	r2, r3
 8016192:	d008      	beq.n	80161a6 <USBD_GetEpDesc+0x64>
 8016194:	2300      	movs	r3, #0
 8016196:	613b      	str	r3, [r7, #16]
 8016198:	68fb      	ldr	r3, [r7, #12]
 801619a:	885b      	ldrh	r3, [r3, #2]
 801619c:	b29a      	uxth	r2, r3
 801619e:	897b      	ldrh	r3, [r7, #10]
 80161a0:	429a      	cmp	r2, r3
 80161a2:	d8e5      	bhi.n	8016170 <USBD_GetEpDesc+0x2e>
 80161a4:	e000      	b.n	80161a8 <USBD_GetEpDesc+0x66>
 80161a6:	bf00      	nop
 80161a8:	693b      	ldr	r3, [r7, #16]
 80161aa:	4618      	mov	r0, r3
 80161ac:	3718      	adds	r7, #24
 80161ae:	46bd      	mov	sp, r7
 80161b0:	bd80      	pop	{r7, pc}

080161b2 <USBD_GetNextDesc>:
 80161b2:	b480      	push	{r7}
 80161b4:	b085      	sub	sp, #20
 80161b6:	af00      	add	r7, sp, #0
 80161b8:	6078      	str	r0, [r7, #4]
 80161ba:	6039      	str	r1, [r7, #0]
 80161bc:	687b      	ldr	r3, [r7, #4]
 80161be:	60fb      	str	r3, [r7, #12]
 80161c0:	683b      	ldr	r3, [r7, #0]
 80161c2:	881b      	ldrh	r3, [r3, #0]
 80161c4:	68fa      	ldr	r2, [r7, #12]
 80161c6:	7812      	ldrb	r2, [r2, #0]
 80161c8:	4413      	add	r3, r2
 80161ca:	b29a      	uxth	r2, r3
 80161cc:	683b      	ldr	r3, [r7, #0]
 80161ce:	801a      	strh	r2, [r3, #0]
 80161d0:	68fb      	ldr	r3, [r7, #12]
 80161d2:	781b      	ldrb	r3, [r3, #0]
 80161d4:	461a      	mov	r2, r3
 80161d6:	687b      	ldr	r3, [r7, #4]
 80161d8:	4413      	add	r3, r2
 80161da:	60fb      	str	r3, [r7, #12]
 80161dc:	68fb      	ldr	r3, [r7, #12]
 80161de:	4618      	mov	r0, r3
 80161e0:	3714      	adds	r7, #20
 80161e2:	46bd      	mov	sp, r7
 80161e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161e8:	4770      	bx	lr

080161ea <SWAPBYTE>:
 80161ea:	b480      	push	{r7}
 80161ec:	b087      	sub	sp, #28
 80161ee:	af00      	add	r7, sp, #0
 80161f0:	6078      	str	r0, [r7, #4]
 80161f2:	687b      	ldr	r3, [r7, #4]
 80161f4:	617b      	str	r3, [r7, #20]
 80161f6:	697b      	ldr	r3, [r7, #20]
 80161f8:	781b      	ldrb	r3, [r3, #0]
 80161fa:	827b      	strh	r3, [r7, #18]
 80161fc:	697b      	ldr	r3, [r7, #20]
 80161fe:	3301      	adds	r3, #1
 8016200:	617b      	str	r3, [r7, #20]
 8016202:	697b      	ldr	r3, [r7, #20]
 8016204:	781b      	ldrb	r3, [r3, #0]
 8016206:	823b      	strh	r3, [r7, #16]
 8016208:	8a3b      	ldrh	r3, [r7, #16]
 801620a:	021b      	lsls	r3, r3, #8
 801620c:	b21a      	sxth	r2, r3
 801620e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8016212:	4313      	orrs	r3, r2
 8016214:	b21b      	sxth	r3, r3
 8016216:	81fb      	strh	r3, [r7, #14]
 8016218:	89fb      	ldrh	r3, [r7, #14]
 801621a:	4618      	mov	r0, r3
 801621c:	371c      	adds	r7, #28
 801621e:	46bd      	mov	sp, r7
 8016220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016224:	4770      	bx	lr
	...

08016228 <USBD_StdDevReq>:
 8016228:	b580      	push	{r7, lr}
 801622a:	b084      	sub	sp, #16
 801622c:	af00      	add	r7, sp, #0
 801622e:	6078      	str	r0, [r7, #4]
 8016230:	6039      	str	r1, [r7, #0]
 8016232:	2300      	movs	r3, #0
 8016234:	73fb      	strb	r3, [r7, #15]
 8016236:	683b      	ldr	r3, [r7, #0]
 8016238:	781b      	ldrb	r3, [r3, #0]
 801623a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801623e:	2b40      	cmp	r3, #64	@ 0x40
 8016240:	d005      	beq.n	801624e <USBD_StdDevReq+0x26>
 8016242:	2b40      	cmp	r3, #64	@ 0x40
 8016244:	d857      	bhi.n	80162f6 <USBD_StdDevReq+0xce>
 8016246:	2b00      	cmp	r3, #0
 8016248:	d00f      	beq.n	801626a <USBD_StdDevReq+0x42>
 801624a:	2b20      	cmp	r3, #32
 801624c:	d153      	bne.n	80162f6 <USBD_StdDevReq+0xce>
 801624e:	687b      	ldr	r3, [r7, #4]
 8016250:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8016254:	687b      	ldr	r3, [r7, #4]
 8016256:	32ae      	adds	r2, #174	@ 0xae
 8016258:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801625c:	689b      	ldr	r3, [r3, #8]
 801625e:	6839      	ldr	r1, [r7, #0]
 8016260:	6878      	ldr	r0, [r7, #4]
 8016262:	4798      	blx	r3
 8016264:	4603      	mov	r3, r0
 8016266:	73fb      	strb	r3, [r7, #15]
 8016268:	e04a      	b.n	8016300 <USBD_StdDevReq+0xd8>
 801626a:	683b      	ldr	r3, [r7, #0]
 801626c:	785b      	ldrb	r3, [r3, #1]
 801626e:	2b09      	cmp	r3, #9
 8016270:	d83b      	bhi.n	80162ea <USBD_StdDevReq+0xc2>
 8016272:	a201      	add	r2, pc, #4	@ (adr r2, 8016278 <USBD_StdDevReq+0x50>)
 8016274:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8016278:	080162cd 	.word	0x080162cd
 801627c:	080162e1 	.word	0x080162e1
 8016280:	080162eb 	.word	0x080162eb
 8016284:	080162d7 	.word	0x080162d7
 8016288:	080162eb 	.word	0x080162eb
 801628c:	080162ab 	.word	0x080162ab
 8016290:	080162a1 	.word	0x080162a1
 8016294:	080162eb 	.word	0x080162eb
 8016298:	080162c3 	.word	0x080162c3
 801629c:	080162b5 	.word	0x080162b5
 80162a0:	6839      	ldr	r1, [r7, #0]
 80162a2:	6878      	ldr	r0, [r7, #4]
 80162a4:	f000 fa3c 	bl	8016720 <USBD_GetDescriptor>
 80162a8:	e024      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162aa:	6839      	ldr	r1, [r7, #0]
 80162ac:	6878      	ldr	r0, [r7, #4]
 80162ae:	f000 fba1 	bl	80169f4 <USBD_SetAddress>
 80162b2:	e01f      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162b4:	6839      	ldr	r1, [r7, #0]
 80162b6:	6878      	ldr	r0, [r7, #4]
 80162b8:	f000 fbe0 	bl	8016a7c <USBD_SetConfig>
 80162bc:	4603      	mov	r3, r0
 80162be:	73fb      	strb	r3, [r7, #15]
 80162c0:	e018      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162c2:	6839      	ldr	r1, [r7, #0]
 80162c4:	6878      	ldr	r0, [r7, #4]
 80162c6:	f000 fc83 	bl	8016bd0 <USBD_GetConfig>
 80162ca:	e013      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162cc:	6839      	ldr	r1, [r7, #0]
 80162ce:	6878      	ldr	r0, [r7, #4]
 80162d0:	f000 fcb4 	bl	8016c3c <USBD_GetStatus>
 80162d4:	e00e      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162d6:	6839      	ldr	r1, [r7, #0]
 80162d8:	6878      	ldr	r0, [r7, #4]
 80162da:	f000 fce3 	bl	8016ca4 <USBD_SetFeature>
 80162de:	e009      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162e0:	6839      	ldr	r1, [r7, #0]
 80162e2:	6878      	ldr	r0, [r7, #4]
 80162e4:	f000 fd07 	bl	8016cf6 <USBD_ClrFeature>
 80162e8:	e004      	b.n	80162f4 <USBD_StdDevReq+0xcc>
 80162ea:	6839      	ldr	r1, [r7, #0]
 80162ec:	6878      	ldr	r0, [r7, #4]
 80162ee:	f000 fd5e 	bl	8016dae <USBD_CtlError>
 80162f2:	bf00      	nop
 80162f4:	e004      	b.n	8016300 <USBD_StdDevReq+0xd8>
 80162f6:	6839      	ldr	r1, [r7, #0]
 80162f8:	6878      	ldr	r0, [r7, #4]
 80162fa:	f000 fd58 	bl	8016dae <USBD_CtlError>
 80162fe:	bf00      	nop
 8016300:	7bfb      	ldrb	r3, [r7, #15]
 8016302:	4618      	mov	r0, r3
 8016304:	3710      	adds	r7, #16
 8016306:	46bd      	mov	sp, r7
 8016308:	bd80      	pop	{r7, pc}
 801630a:	bf00      	nop

0801630c <USBD_StdItfReq>:
 801630c:	b580      	push	{r7, lr}
 801630e:	b084      	sub	sp, #16
 8016310:	af00      	add	r7, sp, #0
 8016312:	6078      	str	r0, [r7, #4]
 8016314:	6039      	str	r1, [r7, #0]
 8016316:	2300      	movs	r3, #0
 8016318:	73fb      	strb	r3, [r7, #15]
 801631a:	683b      	ldr	r3, [r7, #0]
 801631c:	781b      	ldrb	r3, [r3, #0]
 801631e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016322:	2b40      	cmp	r3, #64	@ 0x40
 8016324:	d005      	beq.n	8016332 <USBD_StdItfReq+0x26>
 8016326:	2b40      	cmp	r3, #64	@ 0x40
 8016328:	d852      	bhi.n	80163d0 <USBD_StdItfReq+0xc4>
 801632a:	2b00      	cmp	r3, #0
 801632c:	d001      	beq.n	8016332 <USBD_StdItfReq+0x26>
 801632e:	2b20      	cmp	r3, #32
 8016330:	d14e      	bne.n	80163d0 <USBD_StdItfReq+0xc4>
 8016332:	687b      	ldr	r3, [r7, #4]
 8016334:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016338:	b2db      	uxtb	r3, r3
 801633a:	3b01      	subs	r3, #1
 801633c:	2b02      	cmp	r3, #2
 801633e:	d840      	bhi.n	80163c2 <USBD_StdItfReq+0xb6>
 8016340:	683b      	ldr	r3, [r7, #0]
 8016342:	889b      	ldrh	r3, [r3, #4]
 8016344:	b2db      	uxtb	r3, r3
 8016346:	2b01      	cmp	r3, #1
 8016348:	d836      	bhi.n	80163b8 <USBD_StdItfReq+0xac>
 801634a:	683b      	ldr	r3, [r7, #0]
 801634c:	889b      	ldrh	r3, [r3, #4]
 801634e:	b2db      	uxtb	r3, r3
 8016350:	4619      	mov	r1, r3
 8016352:	6878      	ldr	r0, [r7, #4]
 8016354:	f7ff fedb 	bl	801610e <USBD_CoreFindIF>
 8016358:	4603      	mov	r3, r0
 801635a:	73bb      	strb	r3, [r7, #14]
 801635c:	7bbb      	ldrb	r3, [r7, #14]
 801635e:	2bff      	cmp	r3, #255	@ 0xff
 8016360:	d01d      	beq.n	801639e <USBD_StdItfReq+0x92>
 8016362:	7bbb      	ldrb	r3, [r7, #14]
 8016364:	2b00      	cmp	r3, #0
 8016366:	d11a      	bne.n	801639e <USBD_StdItfReq+0x92>
 8016368:	7bba      	ldrb	r2, [r7, #14]
 801636a:	687b      	ldr	r3, [r7, #4]
 801636c:	32ae      	adds	r2, #174	@ 0xae
 801636e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016372:	689b      	ldr	r3, [r3, #8]
 8016374:	2b00      	cmp	r3, #0
 8016376:	d00f      	beq.n	8016398 <USBD_StdItfReq+0x8c>
 8016378:	7bba      	ldrb	r2, [r7, #14]
 801637a:	687b      	ldr	r3, [r7, #4]
 801637c:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016380:	7bba      	ldrb	r2, [r7, #14]
 8016382:	687b      	ldr	r3, [r7, #4]
 8016384:	32ae      	adds	r2, #174	@ 0xae
 8016386:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801638a:	689b      	ldr	r3, [r3, #8]
 801638c:	6839      	ldr	r1, [r7, #0]
 801638e:	6878      	ldr	r0, [r7, #4]
 8016390:	4798      	blx	r3
 8016392:	4603      	mov	r3, r0
 8016394:	73fb      	strb	r3, [r7, #15]
 8016396:	e004      	b.n	80163a2 <USBD_StdItfReq+0x96>
 8016398:	2303      	movs	r3, #3
 801639a:	73fb      	strb	r3, [r7, #15]
 801639c:	e001      	b.n	80163a2 <USBD_StdItfReq+0x96>
 801639e:	2303      	movs	r3, #3
 80163a0:	73fb      	strb	r3, [r7, #15]
 80163a2:	683b      	ldr	r3, [r7, #0]
 80163a4:	88db      	ldrh	r3, [r3, #6]
 80163a6:	2b00      	cmp	r3, #0
 80163a8:	d110      	bne.n	80163cc <USBD_StdItfReq+0xc0>
 80163aa:	7bfb      	ldrb	r3, [r7, #15]
 80163ac:	2b00      	cmp	r3, #0
 80163ae:	d10d      	bne.n	80163cc <USBD_StdItfReq+0xc0>
 80163b0:	6878      	ldr	r0, [r7, #4]
 80163b2:	f000 fdc7 	bl	8016f44 <USBD_CtlSendStatus>
 80163b6:	e009      	b.n	80163cc <USBD_StdItfReq+0xc0>
 80163b8:	6839      	ldr	r1, [r7, #0]
 80163ba:	6878      	ldr	r0, [r7, #4]
 80163bc:	f000 fcf7 	bl	8016dae <USBD_CtlError>
 80163c0:	e004      	b.n	80163cc <USBD_StdItfReq+0xc0>
 80163c2:	6839      	ldr	r1, [r7, #0]
 80163c4:	6878      	ldr	r0, [r7, #4]
 80163c6:	f000 fcf2 	bl	8016dae <USBD_CtlError>
 80163ca:	e000      	b.n	80163ce <USBD_StdItfReq+0xc2>
 80163cc:	bf00      	nop
 80163ce:	e004      	b.n	80163da <USBD_StdItfReq+0xce>
 80163d0:	6839      	ldr	r1, [r7, #0]
 80163d2:	6878      	ldr	r0, [r7, #4]
 80163d4:	f000 fceb 	bl	8016dae <USBD_CtlError>
 80163d8:	bf00      	nop
 80163da:	7bfb      	ldrb	r3, [r7, #15]
 80163dc:	4618      	mov	r0, r3
 80163de:	3710      	adds	r7, #16
 80163e0:	46bd      	mov	sp, r7
 80163e2:	bd80      	pop	{r7, pc}

080163e4 <USBD_StdEPReq>:
 80163e4:	b580      	push	{r7, lr}
 80163e6:	b084      	sub	sp, #16
 80163e8:	af00      	add	r7, sp, #0
 80163ea:	6078      	str	r0, [r7, #4]
 80163ec:	6039      	str	r1, [r7, #0]
 80163ee:	2300      	movs	r3, #0
 80163f0:	73fb      	strb	r3, [r7, #15]
 80163f2:	683b      	ldr	r3, [r7, #0]
 80163f4:	889b      	ldrh	r3, [r3, #4]
 80163f6:	73bb      	strb	r3, [r7, #14]
 80163f8:	683b      	ldr	r3, [r7, #0]
 80163fa:	781b      	ldrb	r3, [r3, #0]
 80163fc:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016400:	2b40      	cmp	r3, #64	@ 0x40
 8016402:	d007      	beq.n	8016414 <USBD_StdEPReq+0x30>
 8016404:	2b40      	cmp	r3, #64	@ 0x40
 8016406:	f200 817f 	bhi.w	8016708 <USBD_StdEPReq+0x324>
 801640a:	2b00      	cmp	r3, #0
 801640c:	d02a      	beq.n	8016464 <USBD_StdEPReq+0x80>
 801640e:	2b20      	cmp	r3, #32
 8016410:	f040 817a 	bne.w	8016708 <USBD_StdEPReq+0x324>
 8016414:	7bbb      	ldrb	r3, [r7, #14]
 8016416:	4619      	mov	r1, r3
 8016418:	6878      	ldr	r0, [r7, #4]
 801641a:	f7ff fe85 	bl	8016128 <USBD_CoreFindEP>
 801641e:	4603      	mov	r3, r0
 8016420:	737b      	strb	r3, [r7, #13]
 8016422:	7b7b      	ldrb	r3, [r7, #13]
 8016424:	2bff      	cmp	r3, #255	@ 0xff
 8016426:	f000 8174 	beq.w	8016712 <USBD_StdEPReq+0x32e>
 801642a:	7b7b      	ldrb	r3, [r7, #13]
 801642c:	2b00      	cmp	r3, #0
 801642e:	f040 8170 	bne.w	8016712 <USBD_StdEPReq+0x32e>
 8016432:	7b7a      	ldrb	r2, [r7, #13]
 8016434:	687b      	ldr	r3, [r7, #4]
 8016436:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 801643a:	7b7a      	ldrb	r2, [r7, #13]
 801643c:	687b      	ldr	r3, [r7, #4]
 801643e:	32ae      	adds	r2, #174	@ 0xae
 8016440:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016444:	689b      	ldr	r3, [r3, #8]
 8016446:	2b00      	cmp	r3, #0
 8016448:	f000 8163 	beq.w	8016712 <USBD_StdEPReq+0x32e>
 801644c:	7b7a      	ldrb	r2, [r7, #13]
 801644e:	687b      	ldr	r3, [r7, #4]
 8016450:	32ae      	adds	r2, #174	@ 0xae
 8016452:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016456:	689b      	ldr	r3, [r3, #8]
 8016458:	6839      	ldr	r1, [r7, #0]
 801645a:	6878      	ldr	r0, [r7, #4]
 801645c:	4798      	blx	r3
 801645e:	4603      	mov	r3, r0
 8016460:	73fb      	strb	r3, [r7, #15]
 8016462:	e156      	b.n	8016712 <USBD_StdEPReq+0x32e>
 8016464:	683b      	ldr	r3, [r7, #0]
 8016466:	785b      	ldrb	r3, [r3, #1]
 8016468:	2b03      	cmp	r3, #3
 801646a:	d008      	beq.n	801647e <USBD_StdEPReq+0x9a>
 801646c:	2b03      	cmp	r3, #3
 801646e:	f300 8145 	bgt.w	80166fc <USBD_StdEPReq+0x318>
 8016472:	2b00      	cmp	r3, #0
 8016474:	f000 809b 	beq.w	80165ae <USBD_StdEPReq+0x1ca>
 8016478:	2b01      	cmp	r3, #1
 801647a:	d03c      	beq.n	80164f6 <USBD_StdEPReq+0x112>
 801647c:	e13e      	b.n	80166fc <USBD_StdEPReq+0x318>
 801647e:	687b      	ldr	r3, [r7, #4]
 8016480:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016484:	b2db      	uxtb	r3, r3
 8016486:	2b02      	cmp	r3, #2
 8016488:	d002      	beq.n	8016490 <USBD_StdEPReq+0xac>
 801648a:	2b03      	cmp	r3, #3
 801648c:	d016      	beq.n	80164bc <USBD_StdEPReq+0xd8>
 801648e:	e02c      	b.n	80164ea <USBD_StdEPReq+0x106>
 8016490:	7bbb      	ldrb	r3, [r7, #14]
 8016492:	2b00      	cmp	r3, #0
 8016494:	d00d      	beq.n	80164b2 <USBD_StdEPReq+0xce>
 8016496:	7bbb      	ldrb	r3, [r7, #14]
 8016498:	2b80      	cmp	r3, #128	@ 0x80
 801649a:	d00a      	beq.n	80164b2 <USBD_StdEPReq+0xce>
 801649c:	7bbb      	ldrb	r3, [r7, #14]
 801649e:	4619      	mov	r1, r3
 80164a0:	6878      	ldr	r0, [r7, #4]
 80164a2:	f004 fa8b 	bl	801a9bc <USBD_LL_StallEP>
 80164a6:	2180      	movs	r1, #128	@ 0x80
 80164a8:	6878      	ldr	r0, [r7, #4]
 80164aa:	f004 fa87 	bl	801a9bc <USBD_LL_StallEP>
 80164ae:	bf00      	nop
 80164b0:	e020      	b.n	80164f4 <USBD_StdEPReq+0x110>
 80164b2:	6839      	ldr	r1, [r7, #0]
 80164b4:	6878      	ldr	r0, [r7, #4]
 80164b6:	f000 fc7a 	bl	8016dae <USBD_CtlError>
 80164ba:	e01b      	b.n	80164f4 <USBD_StdEPReq+0x110>
 80164bc:	683b      	ldr	r3, [r7, #0]
 80164be:	885b      	ldrh	r3, [r3, #2]
 80164c0:	2b00      	cmp	r3, #0
 80164c2:	d10e      	bne.n	80164e2 <USBD_StdEPReq+0xfe>
 80164c4:	7bbb      	ldrb	r3, [r7, #14]
 80164c6:	2b00      	cmp	r3, #0
 80164c8:	d00b      	beq.n	80164e2 <USBD_StdEPReq+0xfe>
 80164ca:	7bbb      	ldrb	r3, [r7, #14]
 80164cc:	2b80      	cmp	r3, #128	@ 0x80
 80164ce:	d008      	beq.n	80164e2 <USBD_StdEPReq+0xfe>
 80164d0:	683b      	ldr	r3, [r7, #0]
 80164d2:	88db      	ldrh	r3, [r3, #6]
 80164d4:	2b00      	cmp	r3, #0
 80164d6:	d104      	bne.n	80164e2 <USBD_StdEPReq+0xfe>
 80164d8:	7bbb      	ldrb	r3, [r7, #14]
 80164da:	4619      	mov	r1, r3
 80164dc:	6878      	ldr	r0, [r7, #4]
 80164de:	f004 fa6d 	bl	801a9bc <USBD_LL_StallEP>
 80164e2:	6878      	ldr	r0, [r7, #4]
 80164e4:	f000 fd2e 	bl	8016f44 <USBD_CtlSendStatus>
 80164e8:	e004      	b.n	80164f4 <USBD_StdEPReq+0x110>
 80164ea:	6839      	ldr	r1, [r7, #0]
 80164ec:	6878      	ldr	r0, [r7, #4]
 80164ee:	f000 fc5e 	bl	8016dae <USBD_CtlError>
 80164f2:	bf00      	nop
 80164f4:	e107      	b.n	8016706 <USBD_StdEPReq+0x322>
 80164f6:	687b      	ldr	r3, [r7, #4]
 80164f8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80164fc:	b2db      	uxtb	r3, r3
 80164fe:	2b02      	cmp	r3, #2
 8016500:	d002      	beq.n	8016508 <USBD_StdEPReq+0x124>
 8016502:	2b03      	cmp	r3, #3
 8016504:	d016      	beq.n	8016534 <USBD_StdEPReq+0x150>
 8016506:	e04b      	b.n	80165a0 <USBD_StdEPReq+0x1bc>
 8016508:	7bbb      	ldrb	r3, [r7, #14]
 801650a:	2b00      	cmp	r3, #0
 801650c:	d00d      	beq.n	801652a <USBD_StdEPReq+0x146>
 801650e:	7bbb      	ldrb	r3, [r7, #14]
 8016510:	2b80      	cmp	r3, #128	@ 0x80
 8016512:	d00a      	beq.n	801652a <USBD_StdEPReq+0x146>
 8016514:	7bbb      	ldrb	r3, [r7, #14]
 8016516:	4619      	mov	r1, r3
 8016518:	6878      	ldr	r0, [r7, #4]
 801651a:	f004 fa4f 	bl	801a9bc <USBD_LL_StallEP>
 801651e:	2180      	movs	r1, #128	@ 0x80
 8016520:	6878      	ldr	r0, [r7, #4]
 8016522:	f004 fa4b 	bl	801a9bc <USBD_LL_StallEP>
 8016526:	bf00      	nop
 8016528:	e040      	b.n	80165ac <USBD_StdEPReq+0x1c8>
 801652a:	6839      	ldr	r1, [r7, #0]
 801652c:	6878      	ldr	r0, [r7, #4]
 801652e:	f000 fc3e 	bl	8016dae <USBD_CtlError>
 8016532:	e03b      	b.n	80165ac <USBD_StdEPReq+0x1c8>
 8016534:	683b      	ldr	r3, [r7, #0]
 8016536:	885b      	ldrh	r3, [r3, #2]
 8016538:	2b00      	cmp	r3, #0
 801653a:	d136      	bne.n	80165aa <USBD_StdEPReq+0x1c6>
 801653c:	7bbb      	ldrb	r3, [r7, #14]
 801653e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8016542:	2b00      	cmp	r3, #0
 8016544:	d004      	beq.n	8016550 <USBD_StdEPReq+0x16c>
 8016546:	7bbb      	ldrb	r3, [r7, #14]
 8016548:	4619      	mov	r1, r3
 801654a:	6878      	ldr	r0, [r7, #4]
 801654c:	f004 fa55 	bl	801a9fa <USBD_LL_ClearStallEP>
 8016550:	6878      	ldr	r0, [r7, #4]
 8016552:	f000 fcf7 	bl	8016f44 <USBD_CtlSendStatus>
 8016556:	7bbb      	ldrb	r3, [r7, #14]
 8016558:	4619      	mov	r1, r3
 801655a:	6878      	ldr	r0, [r7, #4]
 801655c:	f7ff fde4 	bl	8016128 <USBD_CoreFindEP>
 8016560:	4603      	mov	r3, r0
 8016562:	737b      	strb	r3, [r7, #13]
 8016564:	7b7b      	ldrb	r3, [r7, #13]
 8016566:	2bff      	cmp	r3, #255	@ 0xff
 8016568:	d01f      	beq.n	80165aa <USBD_StdEPReq+0x1c6>
 801656a:	7b7b      	ldrb	r3, [r7, #13]
 801656c:	2b00      	cmp	r3, #0
 801656e:	d11c      	bne.n	80165aa <USBD_StdEPReq+0x1c6>
 8016570:	7b7a      	ldrb	r2, [r7, #13]
 8016572:	687b      	ldr	r3, [r7, #4]
 8016574:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8016578:	7b7a      	ldrb	r2, [r7, #13]
 801657a:	687b      	ldr	r3, [r7, #4]
 801657c:	32ae      	adds	r2, #174	@ 0xae
 801657e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016582:	689b      	ldr	r3, [r3, #8]
 8016584:	2b00      	cmp	r3, #0
 8016586:	d010      	beq.n	80165aa <USBD_StdEPReq+0x1c6>
 8016588:	7b7a      	ldrb	r2, [r7, #13]
 801658a:	687b      	ldr	r3, [r7, #4]
 801658c:	32ae      	adds	r2, #174	@ 0xae
 801658e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8016592:	689b      	ldr	r3, [r3, #8]
 8016594:	6839      	ldr	r1, [r7, #0]
 8016596:	6878      	ldr	r0, [r7, #4]
 8016598:	4798      	blx	r3
 801659a:	4603      	mov	r3, r0
 801659c:	73fb      	strb	r3, [r7, #15]
 801659e:	e004      	b.n	80165aa <USBD_StdEPReq+0x1c6>
 80165a0:	6839      	ldr	r1, [r7, #0]
 80165a2:	6878      	ldr	r0, [r7, #4]
 80165a4:	f000 fc03 	bl	8016dae <USBD_CtlError>
 80165a8:	e000      	b.n	80165ac <USBD_StdEPReq+0x1c8>
 80165aa:	bf00      	nop
 80165ac:	e0ab      	b.n	8016706 <USBD_StdEPReq+0x322>
 80165ae:	687b      	ldr	r3, [r7, #4]
 80165b0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80165b4:	b2db      	uxtb	r3, r3
 80165b6:	2b02      	cmp	r3, #2
 80165b8:	d002      	beq.n	80165c0 <USBD_StdEPReq+0x1dc>
 80165ba:	2b03      	cmp	r3, #3
 80165bc:	d032      	beq.n	8016624 <USBD_StdEPReq+0x240>
 80165be:	e097      	b.n	80166f0 <USBD_StdEPReq+0x30c>
 80165c0:	7bbb      	ldrb	r3, [r7, #14]
 80165c2:	2b00      	cmp	r3, #0
 80165c4:	d007      	beq.n	80165d6 <USBD_StdEPReq+0x1f2>
 80165c6:	7bbb      	ldrb	r3, [r7, #14]
 80165c8:	2b80      	cmp	r3, #128	@ 0x80
 80165ca:	d004      	beq.n	80165d6 <USBD_StdEPReq+0x1f2>
 80165cc:	6839      	ldr	r1, [r7, #0]
 80165ce:	6878      	ldr	r0, [r7, #4]
 80165d0:	f000 fbed 	bl	8016dae <USBD_CtlError>
 80165d4:	e091      	b.n	80166fa <USBD_StdEPReq+0x316>
 80165d6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80165da:	2b00      	cmp	r3, #0
 80165dc:	da0b      	bge.n	80165f6 <USBD_StdEPReq+0x212>
 80165de:	7bbb      	ldrb	r3, [r7, #14]
 80165e0:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80165e4:	4613      	mov	r3, r2
 80165e6:	009b      	lsls	r3, r3, #2
 80165e8:	4413      	add	r3, r2
 80165ea:	009b      	lsls	r3, r3, #2
 80165ec:	3310      	adds	r3, #16
 80165ee:	687a      	ldr	r2, [r7, #4]
 80165f0:	4413      	add	r3, r2
 80165f2:	3304      	adds	r3, #4
 80165f4:	e00b      	b.n	801660e <USBD_StdEPReq+0x22a>
 80165f6:	7bbb      	ldrb	r3, [r7, #14]
 80165f8:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80165fc:	4613      	mov	r3, r2
 80165fe:	009b      	lsls	r3, r3, #2
 8016600:	4413      	add	r3, r2
 8016602:	009b      	lsls	r3, r3, #2
 8016604:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8016608:	687a      	ldr	r2, [r7, #4]
 801660a:	4413      	add	r3, r2
 801660c:	3304      	adds	r3, #4
 801660e:	60bb      	str	r3, [r7, #8]
 8016610:	68bb      	ldr	r3, [r7, #8]
 8016612:	2200      	movs	r2, #0
 8016614:	601a      	str	r2, [r3, #0]
 8016616:	68bb      	ldr	r3, [r7, #8]
 8016618:	2202      	movs	r2, #2
 801661a:	4619      	mov	r1, r3
 801661c:	6878      	ldr	r0, [r7, #4]
 801661e:	f000 fc37 	bl	8016e90 <USBD_CtlSendData>
 8016622:	e06a      	b.n	80166fa <USBD_StdEPReq+0x316>
 8016624:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8016628:	2b00      	cmp	r3, #0
 801662a:	da11      	bge.n	8016650 <USBD_StdEPReq+0x26c>
 801662c:	7bbb      	ldrb	r3, [r7, #14]
 801662e:	f003 020f 	and.w	r2, r3, #15
 8016632:	6879      	ldr	r1, [r7, #4]
 8016634:	4613      	mov	r3, r2
 8016636:	009b      	lsls	r3, r3, #2
 8016638:	4413      	add	r3, r2
 801663a:	009b      	lsls	r3, r3, #2
 801663c:	440b      	add	r3, r1
 801663e:	3324      	adds	r3, #36	@ 0x24
 8016640:	881b      	ldrh	r3, [r3, #0]
 8016642:	2b00      	cmp	r3, #0
 8016644:	d117      	bne.n	8016676 <USBD_StdEPReq+0x292>
 8016646:	6839      	ldr	r1, [r7, #0]
 8016648:	6878      	ldr	r0, [r7, #4]
 801664a:	f000 fbb0 	bl	8016dae <USBD_CtlError>
 801664e:	e054      	b.n	80166fa <USBD_StdEPReq+0x316>
 8016650:	7bbb      	ldrb	r3, [r7, #14]
 8016652:	f003 020f 	and.w	r2, r3, #15
 8016656:	6879      	ldr	r1, [r7, #4]
 8016658:	4613      	mov	r3, r2
 801665a:	009b      	lsls	r3, r3, #2
 801665c:	4413      	add	r3, r2
 801665e:	009b      	lsls	r3, r3, #2
 8016660:	440b      	add	r3, r1
 8016662:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8016666:	881b      	ldrh	r3, [r3, #0]
 8016668:	2b00      	cmp	r3, #0
 801666a:	d104      	bne.n	8016676 <USBD_StdEPReq+0x292>
 801666c:	6839      	ldr	r1, [r7, #0]
 801666e:	6878      	ldr	r0, [r7, #4]
 8016670:	f000 fb9d 	bl	8016dae <USBD_CtlError>
 8016674:	e041      	b.n	80166fa <USBD_StdEPReq+0x316>
 8016676:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801667a:	2b00      	cmp	r3, #0
 801667c:	da0b      	bge.n	8016696 <USBD_StdEPReq+0x2b2>
 801667e:	7bbb      	ldrb	r3, [r7, #14]
 8016680:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8016684:	4613      	mov	r3, r2
 8016686:	009b      	lsls	r3, r3, #2
 8016688:	4413      	add	r3, r2
 801668a:	009b      	lsls	r3, r3, #2
 801668c:	3310      	adds	r3, #16
 801668e:	687a      	ldr	r2, [r7, #4]
 8016690:	4413      	add	r3, r2
 8016692:	3304      	adds	r3, #4
 8016694:	e00b      	b.n	80166ae <USBD_StdEPReq+0x2ca>
 8016696:	7bbb      	ldrb	r3, [r7, #14]
 8016698:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801669c:	4613      	mov	r3, r2
 801669e:	009b      	lsls	r3, r3, #2
 80166a0:	4413      	add	r3, r2
 80166a2:	009b      	lsls	r3, r3, #2
 80166a4:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 80166a8:	687a      	ldr	r2, [r7, #4]
 80166aa:	4413      	add	r3, r2
 80166ac:	3304      	adds	r3, #4
 80166ae:	60bb      	str	r3, [r7, #8]
 80166b0:	7bbb      	ldrb	r3, [r7, #14]
 80166b2:	2b00      	cmp	r3, #0
 80166b4:	d002      	beq.n	80166bc <USBD_StdEPReq+0x2d8>
 80166b6:	7bbb      	ldrb	r3, [r7, #14]
 80166b8:	2b80      	cmp	r3, #128	@ 0x80
 80166ba:	d103      	bne.n	80166c4 <USBD_StdEPReq+0x2e0>
 80166bc:	68bb      	ldr	r3, [r7, #8]
 80166be:	2200      	movs	r2, #0
 80166c0:	601a      	str	r2, [r3, #0]
 80166c2:	e00e      	b.n	80166e2 <USBD_StdEPReq+0x2fe>
 80166c4:	7bbb      	ldrb	r3, [r7, #14]
 80166c6:	4619      	mov	r1, r3
 80166c8:	6878      	ldr	r0, [r7, #4]
 80166ca:	f004 f9b5 	bl	801aa38 <USBD_LL_IsStallEP>
 80166ce:	4603      	mov	r3, r0
 80166d0:	2b00      	cmp	r3, #0
 80166d2:	d003      	beq.n	80166dc <USBD_StdEPReq+0x2f8>
 80166d4:	68bb      	ldr	r3, [r7, #8]
 80166d6:	2201      	movs	r2, #1
 80166d8:	601a      	str	r2, [r3, #0]
 80166da:	e002      	b.n	80166e2 <USBD_StdEPReq+0x2fe>
 80166dc:	68bb      	ldr	r3, [r7, #8]
 80166de:	2200      	movs	r2, #0
 80166e0:	601a      	str	r2, [r3, #0]
 80166e2:	68bb      	ldr	r3, [r7, #8]
 80166e4:	2202      	movs	r2, #2
 80166e6:	4619      	mov	r1, r3
 80166e8:	6878      	ldr	r0, [r7, #4]
 80166ea:	f000 fbd1 	bl	8016e90 <USBD_CtlSendData>
 80166ee:	e004      	b.n	80166fa <USBD_StdEPReq+0x316>
 80166f0:	6839      	ldr	r1, [r7, #0]
 80166f2:	6878      	ldr	r0, [r7, #4]
 80166f4:	f000 fb5b 	bl	8016dae <USBD_CtlError>
 80166f8:	bf00      	nop
 80166fa:	e004      	b.n	8016706 <USBD_StdEPReq+0x322>
 80166fc:	6839      	ldr	r1, [r7, #0]
 80166fe:	6878      	ldr	r0, [r7, #4]
 8016700:	f000 fb55 	bl	8016dae <USBD_CtlError>
 8016704:	bf00      	nop
 8016706:	e005      	b.n	8016714 <USBD_StdEPReq+0x330>
 8016708:	6839      	ldr	r1, [r7, #0]
 801670a:	6878      	ldr	r0, [r7, #4]
 801670c:	f000 fb4f 	bl	8016dae <USBD_CtlError>
 8016710:	e000      	b.n	8016714 <USBD_StdEPReq+0x330>
 8016712:	bf00      	nop
 8016714:	7bfb      	ldrb	r3, [r7, #15]
 8016716:	4618      	mov	r0, r3
 8016718:	3710      	adds	r7, #16
 801671a:	46bd      	mov	sp, r7
 801671c:	bd80      	pop	{r7, pc}
	...

08016720 <USBD_GetDescriptor>:
 8016720:	b580      	push	{r7, lr}
 8016722:	b084      	sub	sp, #16
 8016724:	af00      	add	r7, sp, #0
 8016726:	6078      	str	r0, [r7, #4]
 8016728:	6039      	str	r1, [r7, #0]
 801672a:	2300      	movs	r3, #0
 801672c:	813b      	strh	r3, [r7, #8]
 801672e:	2300      	movs	r3, #0
 8016730:	60fb      	str	r3, [r7, #12]
 8016732:	2300      	movs	r3, #0
 8016734:	72fb      	strb	r3, [r7, #11]
 8016736:	683b      	ldr	r3, [r7, #0]
 8016738:	885b      	ldrh	r3, [r3, #2]
 801673a:	0a1b      	lsrs	r3, r3, #8
 801673c:	b29b      	uxth	r3, r3
 801673e:	3b01      	subs	r3, #1
 8016740:	2b06      	cmp	r3, #6
 8016742:	f200 8128 	bhi.w	8016996 <USBD_GetDescriptor+0x276>
 8016746:	a201      	add	r2, pc, #4	@ (adr r2, 801674c <USBD_GetDescriptor+0x2c>)
 8016748:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801674c:	08016769 	.word	0x08016769
 8016750:	08016781 	.word	0x08016781
 8016754:	080167c1 	.word	0x080167c1
 8016758:	08016997 	.word	0x08016997
 801675c:	08016997 	.word	0x08016997
 8016760:	08016937 	.word	0x08016937
 8016764:	08016963 	.word	0x08016963
 8016768:	687b      	ldr	r3, [r7, #4]
 801676a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801676e:	681b      	ldr	r3, [r3, #0]
 8016770:	687a      	ldr	r2, [r7, #4]
 8016772:	7c12      	ldrb	r2, [r2, #16]
 8016774:	f107 0108 	add.w	r1, r7, #8
 8016778:	4610      	mov	r0, r2
 801677a:	4798      	blx	r3
 801677c:	60f8      	str	r0, [r7, #12]
 801677e:	e112      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 8016780:	687b      	ldr	r3, [r7, #4]
 8016782:	7c1b      	ldrb	r3, [r3, #16]
 8016784:	2b00      	cmp	r3, #0
 8016786:	d10d      	bne.n	80167a4 <USBD_GetDescriptor+0x84>
 8016788:	687b      	ldr	r3, [r7, #4]
 801678a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801678e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016790:	f107 0208 	add.w	r2, r7, #8
 8016794:	4610      	mov	r0, r2
 8016796:	4798      	blx	r3
 8016798:	60f8      	str	r0, [r7, #12]
 801679a:	68fb      	ldr	r3, [r7, #12]
 801679c:	3301      	adds	r3, #1
 801679e:	2202      	movs	r2, #2
 80167a0:	701a      	strb	r2, [r3, #0]
 80167a2:	e100      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 80167a4:	687b      	ldr	r3, [r7, #4]
 80167a6:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80167aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80167ac:	f107 0208 	add.w	r2, r7, #8
 80167b0:	4610      	mov	r0, r2
 80167b2:	4798      	blx	r3
 80167b4:	60f8      	str	r0, [r7, #12]
 80167b6:	68fb      	ldr	r3, [r7, #12]
 80167b8:	3301      	adds	r3, #1
 80167ba:	2202      	movs	r2, #2
 80167bc:	701a      	strb	r2, [r3, #0]
 80167be:	e0f2      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 80167c0:	683b      	ldr	r3, [r7, #0]
 80167c2:	885b      	ldrh	r3, [r3, #2]
 80167c4:	b2db      	uxtb	r3, r3
 80167c6:	2b05      	cmp	r3, #5
 80167c8:	f200 80ac 	bhi.w	8016924 <USBD_GetDescriptor+0x204>
 80167cc:	a201      	add	r2, pc, #4	@ (adr r2, 80167d4 <USBD_GetDescriptor+0xb4>)
 80167ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80167d2:	bf00      	nop
 80167d4:	080167ed 	.word	0x080167ed
 80167d8:	08016821 	.word	0x08016821
 80167dc:	08016855 	.word	0x08016855
 80167e0:	08016889 	.word	0x08016889
 80167e4:	080168bd 	.word	0x080168bd
 80167e8:	080168f1 	.word	0x080168f1
 80167ec:	687b      	ldr	r3, [r7, #4]
 80167ee:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80167f2:	685b      	ldr	r3, [r3, #4]
 80167f4:	2b00      	cmp	r3, #0
 80167f6:	d00b      	beq.n	8016810 <USBD_GetDescriptor+0xf0>
 80167f8:	687b      	ldr	r3, [r7, #4]
 80167fa:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80167fe:	685b      	ldr	r3, [r3, #4]
 8016800:	687a      	ldr	r2, [r7, #4]
 8016802:	7c12      	ldrb	r2, [r2, #16]
 8016804:	f107 0108 	add.w	r1, r7, #8
 8016808:	4610      	mov	r0, r2
 801680a:	4798      	blx	r3
 801680c:	60f8      	str	r0, [r7, #12]
 801680e:	e091      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016810:	6839      	ldr	r1, [r7, #0]
 8016812:	6878      	ldr	r0, [r7, #4]
 8016814:	f000 facb 	bl	8016dae <USBD_CtlError>
 8016818:	7afb      	ldrb	r3, [r7, #11]
 801681a:	3301      	adds	r3, #1
 801681c:	72fb      	strb	r3, [r7, #11]
 801681e:	e089      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016820:	687b      	ldr	r3, [r7, #4]
 8016822:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016826:	689b      	ldr	r3, [r3, #8]
 8016828:	2b00      	cmp	r3, #0
 801682a:	d00b      	beq.n	8016844 <USBD_GetDescriptor+0x124>
 801682c:	687b      	ldr	r3, [r7, #4]
 801682e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016832:	689b      	ldr	r3, [r3, #8]
 8016834:	687a      	ldr	r2, [r7, #4]
 8016836:	7c12      	ldrb	r2, [r2, #16]
 8016838:	f107 0108 	add.w	r1, r7, #8
 801683c:	4610      	mov	r0, r2
 801683e:	4798      	blx	r3
 8016840:	60f8      	str	r0, [r7, #12]
 8016842:	e077      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016844:	6839      	ldr	r1, [r7, #0]
 8016846:	6878      	ldr	r0, [r7, #4]
 8016848:	f000 fab1 	bl	8016dae <USBD_CtlError>
 801684c:	7afb      	ldrb	r3, [r7, #11]
 801684e:	3301      	adds	r3, #1
 8016850:	72fb      	strb	r3, [r7, #11]
 8016852:	e06f      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016854:	687b      	ldr	r3, [r7, #4]
 8016856:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801685a:	68db      	ldr	r3, [r3, #12]
 801685c:	2b00      	cmp	r3, #0
 801685e:	d00b      	beq.n	8016878 <USBD_GetDescriptor+0x158>
 8016860:	687b      	ldr	r3, [r7, #4]
 8016862:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016866:	68db      	ldr	r3, [r3, #12]
 8016868:	687a      	ldr	r2, [r7, #4]
 801686a:	7c12      	ldrb	r2, [r2, #16]
 801686c:	f107 0108 	add.w	r1, r7, #8
 8016870:	4610      	mov	r0, r2
 8016872:	4798      	blx	r3
 8016874:	60f8      	str	r0, [r7, #12]
 8016876:	e05d      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016878:	6839      	ldr	r1, [r7, #0]
 801687a:	6878      	ldr	r0, [r7, #4]
 801687c:	f000 fa97 	bl	8016dae <USBD_CtlError>
 8016880:	7afb      	ldrb	r3, [r7, #11]
 8016882:	3301      	adds	r3, #1
 8016884:	72fb      	strb	r3, [r7, #11]
 8016886:	e055      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016888:	687b      	ldr	r3, [r7, #4]
 801688a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801688e:	691b      	ldr	r3, [r3, #16]
 8016890:	2b00      	cmp	r3, #0
 8016892:	d00b      	beq.n	80168ac <USBD_GetDescriptor+0x18c>
 8016894:	687b      	ldr	r3, [r7, #4]
 8016896:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801689a:	691b      	ldr	r3, [r3, #16]
 801689c:	687a      	ldr	r2, [r7, #4]
 801689e:	7c12      	ldrb	r2, [r2, #16]
 80168a0:	f107 0108 	add.w	r1, r7, #8
 80168a4:	4610      	mov	r0, r2
 80168a6:	4798      	blx	r3
 80168a8:	60f8      	str	r0, [r7, #12]
 80168aa:	e043      	b.n	8016934 <USBD_GetDescriptor+0x214>
 80168ac:	6839      	ldr	r1, [r7, #0]
 80168ae:	6878      	ldr	r0, [r7, #4]
 80168b0:	f000 fa7d 	bl	8016dae <USBD_CtlError>
 80168b4:	7afb      	ldrb	r3, [r7, #11]
 80168b6:	3301      	adds	r3, #1
 80168b8:	72fb      	strb	r3, [r7, #11]
 80168ba:	e03b      	b.n	8016934 <USBD_GetDescriptor+0x214>
 80168bc:	687b      	ldr	r3, [r7, #4]
 80168be:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80168c2:	695b      	ldr	r3, [r3, #20]
 80168c4:	2b00      	cmp	r3, #0
 80168c6:	d00b      	beq.n	80168e0 <USBD_GetDescriptor+0x1c0>
 80168c8:	687b      	ldr	r3, [r7, #4]
 80168ca:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80168ce:	695b      	ldr	r3, [r3, #20]
 80168d0:	687a      	ldr	r2, [r7, #4]
 80168d2:	7c12      	ldrb	r2, [r2, #16]
 80168d4:	f107 0108 	add.w	r1, r7, #8
 80168d8:	4610      	mov	r0, r2
 80168da:	4798      	blx	r3
 80168dc:	60f8      	str	r0, [r7, #12]
 80168de:	e029      	b.n	8016934 <USBD_GetDescriptor+0x214>
 80168e0:	6839      	ldr	r1, [r7, #0]
 80168e2:	6878      	ldr	r0, [r7, #4]
 80168e4:	f000 fa63 	bl	8016dae <USBD_CtlError>
 80168e8:	7afb      	ldrb	r3, [r7, #11]
 80168ea:	3301      	adds	r3, #1
 80168ec:	72fb      	strb	r3, [r7, #11]
 80168ee:	e021      	b.n	8016934 <USBD_GetDescriptor+0x214>
 80168f0:	687b      	ldr	r3, [r7, #4]
 80168f2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80168f6:	699b      	ldr	r3, [r3, #24]
 80168f8:	2b00      	cmp	r3, #0
 80168fa:	d00b      	beq.n	8016914 <USBD_GetDescriptor+0x1f4>
 80168fc:	687b      	ldr	r3, [r7, #4]
 80168fe:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8016902:	699b      	ldr	r3, [r3, #24]
 8016904:	687a      	ldr	r2, [r7, #4]
 8016906:	7c12      	ldrb	r2, [r2, #16]
 8016908:	f107 0108 	add.w	r1, r7, #8
 801690c:	4610      	mov	r0, r2
 801690e:	4798      	blx	r3
 8016910:	60f8      	str	r0, [r7, #12]
 8016912:	e00f      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016914:	6839      	ldr	r1, [r7, #0]
 8016916:	6878      	ldr	r0, [r7, #4]
 8016918:	f000 fa49 	bl	8016dae <USBD_CtlError>
 801691c:	7afb      	ldrb	r3, [r7, #11]
 801691e:	3301      	adds	r3, #1
 8016920:	72fb      	strb	r3, [r7, #11]
 8016922:	e007      	b.n	8016934 <USBD_GetDescriptor+0x214>
 8016924:	6839      	ldr	r1, [r7, #0]
 8016926:	6878      	ldr	r0, [r7, #4]
 8016928:	f000 fa41 	bl	8016dae <USBD_CtlError>
 801692c:	7afb      	ldrb	r3, [r7, #11]
 801692e:	3301      	adds	r3, #1
 8016930:	72fb      	strb	r3, [r7, #11]
 8016932:	bf00      	nop
 8016934:	e037      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 8016936:	687b      	ldr	r3, [r7, #4]
 8016938:	7c1b      	ldrb	r3, [r3, #16]
 801693a:	2b00      	cmp	r3, #0
 801693c:	d109      	bne.n	8016952 <USBD_GetDescriptor+0x232>
 801693e:	687b      	ldr	r3, [r7, #4]
 8016940:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016944:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8016946:	f107 0208 	add.w	r2, r7, #8
 801694a:	4610      	mov	r0, r2
 801694c:	4798      	blx	r3
 801694e:	60f8      	str	r0, [r7, #12]
 8016950:	e029      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 8016952:	6839      	ldr	r1, [r7, #0]
 8016954:	6878      	ldr	r0, [r7, #4]
 8016956:	f000 fa2a 	bl	8016dae <USBD_CtlError>
 801695a:	7afb      	ldrb	r3, [r7, #11]
 801695c:	3301      	adds	r3, #1
 801695e:	72fb      	strb	r3, [r7, #11]
 8016960:	e021      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 8016962:	687b      	ldr	r3, [r7, #4]
 8016964:	7c1b      	ldrb	r3, [r3, #16]
 8016966:	2b00      	cmp	r3, #0
 8016968:	d10d      	bne.n	8016986 <USBD_GetDescriptor+0x266>
 801696a:	687b      	ldr	r3, [r7, #4]
 801696c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8016970:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016972:	f107 0208 	add.w	r2, r7, #8
 8016976:	4610      	mov	r0, r2
 8016978:	4798      	blx	r3
 801697a:	60f8      	str	r0, [r7, #12]
 801697c:	68fb      	ldr	r3, [r7, #12]
 801697e:	3301      	adds	r3, #1
 8016980:	2207      	movs	r2, #7
 8016982:	701a      	strb	r2, [r3, #0]
 8016984:	e00f      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 8016986:	6839      	ldr	r1, [r7, #0]
 8016988:	6878      	ldr	r0, [r7, #4]
 801698a:	f000 fa10 	bl	8016dae <USBD_CtlError>
 801698e:	7afb      	ldrb	r3, [r7, #11]
 8016990:	3301      	adds	r3, #1
 8016992:	72fb      	strb	r3, [r7, #11]
 8016994:	e007      	b.n	80169a6 <USBD_GetDescriptor+0x286>
 8016996:	6839      	ldr	r1, [r7, #0]
 8016998:	6878      	ldr	r0, [r7, #4]
 801699a:	f000 fa08 	bl	8016dae <USBD_CtlError>
 801699e:	7afb      	ldrb	r3, [r7, #11]
 80169a0:	3301      	adds	r3, #1
 80169a2:	72fb      	strb	r3, [r7, #11]
 80169a4:	bf00      	nop
 80169a6:	7afb      	ldrb	r3, [r7, #11]
 80169a8:	2b00      	cmp	r3, #0
 80169aa:	d11e      	bne.n	80169ea <USBD_GetDescriptor+0x2ca>
 80169ac:	683b      	ldr	r3, [r7, #0]
 80169ae:	88db      	ldrh	r3, [r3, #6]
 80169b0:	2b00      	cmp	r3, #0
 80169b2:	d016      	beq.n	80169e2 <USBD_GetDescriptor+0x2c2>
 80169b4:	893b      	ldrh	r3, [r7, #8]
 80169b6:	2b00      	cmp	r3, #0
 80169b8:	d00e      	beq.n	80169d8 <USBD_GetDescriptor+0x2b8>
 80169ba:	683b      	ldr	r3, [r7, #0]
 80169bc:	88da      	ldrh	r2, [r3, #6]
 80169be:	893b      	ldrh	r3, [r7, #8]
 80169c0:	4293      	cmp	r3, r2
 80169c2:	bf28      	it	cs
 80169c4:	4613      	movcs	r3, r2
 80169c6:	b29b      	uxth	r3, r3
 80169c8:	813b      	strh	r3, [r7, #8]
 80169ca:	893b      	ldrh	r3, [r7, #8]
 80169cc:	461a      	mov	r2, r3
 80169ce:	68f9      	ldr	r1, [r7, #12]
 80169d0:	6878      	ldr	r0, [r7, #4]
 80169d2:	f000 fa5d 	bl	8016e90 <USBD_CtlSendData>
 80169d6:	e009      	b.n	80169ec <USBD_GetDescriptor+0x2cc>
 80169d8:	6839      	ldr	r1, [r7, #0]
 80169da:	6878      	ldr	r0, [r7, #4]
 80169dc:	f000 f9e7 	bl	8016dae <USBD_CtlError>
 80169e0:	e004      	b.n	80169ec <USBD_GetDescriptor+0x2cc>
 80169e2:	6878      	ldr	r0, [r7, #4]
 80169e4:	f000 faae 	bl	8016f44 <USBD_CtlSendStatus>
 80169e8:	e000      	b.n	80169ec <USBD_GetDescriptor+0x2cc>
 80169ea:	bf00      	nop
 80169ec:	3710      	adds	r7, #16
 80169ee:	46bd      	mov	sp, r7
 80169f0:	bd80      	pop	{r7, pc}
 80169f2:	bf00      	nop

080169f4 <USBD_SetAddress>:
 80169f4:	b580      	push	{r7, lr}
 80169f6:	b084      	sub	sp, #16
 80169f8:	af00      	add	r7, sp, #0
 80169fa:	6078      	str	r0, [r7, #4]
 80169fc:	6039      	str	r1, [r7, #0]
 80169fe:	683b      	ldr	r3, [r7, #0]
 8016a00:	889b      	ldrh	r3, [r3, #4]
 8016a02:	2b00      	cmp	r3, #0
 8016a04:	d131      	bne.n	8016a6a <USBD_SetAddress+0x76>
 8016a06:	683b      	ldr	r3, [r7, #0]
 8016a08:	88db      	ldrh	r3, [r3, #6]
 8016a0a:	2b00      	cmp	r3, #0
 8016a0c:	d12d      	bne.n	8016a6a <USBD_SetAddress+0x76>
 8016a0e:	683b      	ldr	r3, [r7, #0]
 8016a10:	885b      	ldrh	r3, [r3, #2]
 8016a12:	2b7f      	cmp	r3, #127	@ 0x7f
 8016a14:	d829      	bhi.n	8016a6a <USBD_SetAddress+0x76>
 8016a16:	683b      	ldr	r3, [r7, #0]
 8016a18:	885b      	ldrh	r3, [r3, #2]
 8016a1a:	b2db      	uxtb	r3, r3
 8016a1c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8016a20:	73fb      	strb	r3, [r7, #15]
 8016a22:	687b      	ldr	r3, [r7, #4]
 8016a24:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016a28:	b2db      	uxtb	r3, r3
 8016a2a:	2b03      	cmp	r3, #3
 8016a2c:	d104      	bne.n	8016a38 <USBD_SetAddress+0x44>
 8016a2e:	6839      	ldr	r1, [r7, #0]
 8016a30:	6878      	ldr	r0, [r7, #4]
 8016a32:	f000 f9bc 	bl	8016dae <USBD_CtlError>
 8016a36:	e01d      	b.n	8016a74 <USBD_SetAddress+0x80>
 8016a38:	687b      	ldr	r3, [r7, #4]
 8016a3a:	7bfa      	ldrb	r2, [r7, #15]
 8016a3c:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 8016a40:	7bfb      	ldrb	r3, [r7, #15]
 8016a42:	4619      	mov	r1, r3
 8016a44:	6878      	ldr	r0, [r7, #4]
 8016a46:	f004 f823 	bl	801aa90 <USBD_LL_SetUSBAddress>
 8016a4a:	6878      	ldr	r0, [r7, #4]
 8016a4c:	f000 fa7a 	bl	8016f44 <USBD_CtlSendStatus>
 8016a50:	7bfb      	ldrb	r3, [r7, #15]
 8016a52:	2b00      	cmp	r3, #0
 8016a54:	d004      	beq.n	8016a60 <USBD_SetAddress+0x6c>
 8016a56:	687b      	ldr	r3, [r7, #4]
 8016a58:	2202      	movs	r2, #2
 8016a5a:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016a5e:	e009      	b.n	8016a74 <USBD_SetAddress+0x80>
 8016a60:	687b      	ldr	r3, [r7, #4]
 8016a62:	2201      	movs	r2, #1
 8016a64:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016a68:	e004      	b.n	8016a74 <USBD_SetAddress+0x80>
 8016a6a:	6839      	ldr	r1, [r7, #0]
 8016a6c:	6878      	ldr	r0, [r7, #4]
 8016a6e:	f000 f99e 	bl	8016dae <USBD_CtlError>
 8016a72:	bf00      	nop
 8016a74:	bf00      	nop
 8016a76:	3710      	adds	r7, #16
 8016a78:	46bd      	mov	sp, r7
 8016a7a:	bd80      	pop	{r7, pc}

08016a7c <USBD_SetConfig>:
 8016a7c:	b580      	push	{r7, lr}
 8016a7e:	b084      	sub	sp, #16
 8016a80:	af00      	add	r7, sp, #0
 8016a82:	6078      	str	r0, [r7, #4]
 8016a84:	6039      	str	r1, [r7, #0]
 8016a86:	2300      	movs	r3, #0
 8016a88:	73fb      	strb	r3, [r7, #15]
 8016a8a:	683b      	ldr	r3, [r7, #0]
 8016a8c:	885b      	ldrh	r3, [r3, #2]
 8016a8e:	b2da      	uxtb	r2, r3
 8016a90:	4b4e      	ldr	r3, [pc, #312]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016a92:	701a      	strb	r2, [r3, #0]
 8016a94:	4b4d      	ldr	r3, [pc, #308]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016a96:	781b      	ldrb	r3, [r3, #0]
 8016a98:	2b01      	cmp	r3, #1
 8016a9a:	d905      	bls.n	8016aa8 <USBD_SetConfig+0x2c>
 8016a9c:	6839      	ldr	r1, [r7, #0]
 8016a9e:	6878      	ldr	r0, [r7, #4]
 8016aa0:	f000 f985 	bl	8016dae <USBD_CtlError>
 8016aa4:	2303      	movs	r3, #3
 8016aa6:	e08c      	b.n	8016bc2 <USBD_SetConfig+0x146>
 8016aa8:	687b      	ldr	r3, [r7, #4]
 8016aaa:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016aae:	b2db      	uxtb	r3, r3
 8016ab0:	2b02      	cmp	r3, #2
 8016ab2:	d002      	beq.n	8016aba <USBD_SetConfig+0x3e>
 8016ab4:	2b03      	cmp	r3, #3
 8016ab6:	d029      	beq.n	8016b0c <USBD_SetConfig+0x90>
 8016ab8:	e075      	b.n	8016ba6 <USBD_SetConfig+0x12a>
 8016aba:	4b44      	ldr	r3, [pc, #272]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016abc:	781b      	ldrb	r3, [r3, #0]
 8016abe:	2b00      	cmp	r3, #0
 8016ac0:	d020      	beq.n	8016b04 <USBD_SetConfig+0x88>
 8016ac2:	4b42      	ldr	r3, [pc, #264]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016ac4:	781b      	ldrb	r3, [r3, #0]
 8016ac6:	461a      	mov	r2, r3
 8016ac8:	687b      	ldr	r3, [r7, #4]
 8016aca:	605a      	str	r2, [r3, #4]
 8016acc:	4b3f      	ldr	r3, [pc, #252]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016ace:	781b      	ldrb	r3, [r3, #0]
 8016ad0:	4619      	mov	r1, r3
 8016ad2:	6878      	ldr	r0, [r7, #4]
 8016ad4:	f7fe ffe9 	bl	8015aaa <USBD_SetClassConfig>
 8016ad8:	4603      	mov	r3, r0
 8016ada:	73fb      	strb	r3, [r7, #15]
 8016adc:	7bfb      	ldrb	r3, [r7, #15]
 8016ade:	2b00      	cmp	r3, #0
 8016ae0:	d008      	beq.n	8016af4 <USBD_SetConfig+0x78>
 8016ae2:	6839      	ldr	r1, [r7, #0]
 8016ae4:	6878      	ldr	r0, [r7, #4]
 8016ae6:	f000 f962 	bl	8016dae <USBD_CtlError>
 8016aea:	687b      	ldr	r3, [r7, #4]
 8016aec:	2202      	movs	r2, #2
 8016aee:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016af2:	e065      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016af4:	6878      	ldr	r0, [r7, #4]
 8016af6:	f000 fa25 	bl	8016f44 <USBD_CtlSendStatus>
 8016afa:	687b      	ldr	r3, [r7, #4]
 8016afc:	2203      	movs	r2, #3
 8016afe:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016b02:	e05d      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016b04:	6878      	ldr	r0, [r7, #4]
 8016b06:	f000 fa1d 	bl	8016f44 <USBD_CtlSendStatus>
 8016b0a:	e059      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016b0c:	4b2f      	ldr	r3, [pc, #188]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016b0e:	781b      	ldrb	r3, [r3, #0]
 8016b10:	2b00      	cmp	r3, #0
 8016b12:	d112      	bne.n	8016b3a <USBD_SetConfig+0xbe>
 8016b14:	687b      	ldr	r3, [r7, #4]
 8016b16:	2202      	movs	r2, #2
 8016b18:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016b1c:	4b2b      	ldr	r3, [pc, #172]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016b1e:	781b      	ldrb	r3, [r3, #0]
 8016b20:	461a      	mov	r2, r3
 8016b22:	687b      	ldr	r3, [r7, #4]
 8016b24:	605a      	str	r2, [r3, #4]
 8016b26:	4b29      	ldr	r3, [pc, #164]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016b28:	781b      	ldrb	r3, [r3, #0]
 8016b2a:	4619      	mov	r1, r3
 8016b2c:	6878      	ldr	r0, [r7, #4]
 8016b2e:	f7fe ffd8 	bl	8015ae2 <USBD_ClrClassConfig>
 8016b32:	6878      	ldr	r0, [r7, #4]
 8016b34:	f000 fa06 	bl	8016f44 <USBD_CtlSendStatus>
 8016b38:	e042      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016b3a:	4b24      	ldr	r3, [pc, #144]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016b3c:	781b      	ldrb	r3, [r3, #0]
 8016b3e:	461a      	mov	r2, r3
 8016b40:	687b      	ldr	r3, [r7, #4]
 8016b42:	685b      	ldr	r3, [r3, #4]
 8016b44:	429a      	cmp	r2, r3
 8016b46:	d02a      	beq.n	8016b9e <USBD_SetConfig+0x122>
 8016b48:	687b      	ldr	r3, [r7, #4]
 8016b4a:	685b      	ldr	r3, [r3, #4]
 8016b4c:	b2db      	uxtb	r3, r3
 8016b4e:	4619      	mov	r1, r3
 8016b50:	6878      	ldr	r0, [r7, #4]
 8016b52:	f7fe ffc6 	bl	8015ae2 <USBD_ClrClassConfig>
 8016b56:	4b1d      	ldr	r3, [pc, #116]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016b58:	781b      	ldrb	r3, [r3, #0]
 8016b5a:	461a      	mov	r2, r3
 8016b5c:	687b      	ldr	r3, [r7, #4]
 8016b5e:	605a      	str	r2, [r3, #4]
 8016b60:	4b1a      	ldr	r3, [pc, #104]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016b62:	781b      	ldrb	r3, [r3, #0]
 8016b64:	4619      	mov	r1, r3
 8016b66:	6878      	ldr	r0, [r7, #4]
 8016b68:	f7fe ff9f 	bl	8015aaa <USBD_SetClassConfig>
 8016b6c:	4603      	mov	r3, r0
 8016b6e:	73fb      	strb	r3, [r7, #15]
 8016b70:	7bfb      	ldrb	r3, [r7, #15]
 8016b72:	2b00      	cmp	r3, #0
 8016b74:	d00f      	beq.n	8016b96 <USBD_SetConfig+0x11a>
 8016b76:	6839      	ldr	r1, [r7, #0]
 8016b78:	6878      	ldr	r0, [r7, #4]
 8016b7a:	f000 f918 	bl	8016dae <USBD_CtlError>
 8016b7e:	687b      	ldr	r3, [r7, #4]
 8016b80:	685b      	ldr	r3, [r3, #4]
 8016b82:	b2db      	uxtb	r3, r3
 8016b84:	4619      	mov	r1, r3
 8016b86:	6878      	ldr	r0, [r7, #4]
 8016b88:	f7fe ffab 	bl	8015ae2 <USBD_ClrClassConfig>
 8016b8c:	687b      	ldr	r3, [r7, #4]
 8016b8e:	2202      	movs	r2, #2
 8016b90:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8016b94:	e014      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016b96:	6878      	ldr	r0, [r7, #4]
 8016b98:	f000 f9d4 	bl	8016f44 <USBD_CtlSendStatus>
 8016b9c:	e010      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016b9e:	6878      	ldr	r0, [r7, #4]
 8016ba0:	f000 f9d0 	bl	8016f44 <USBD_CtlSendStatus>
 8016ba4:	e00c      	b.n	8016bc0 <USBD_SetConfig+0x144>
 8016ba6:	6839      	ldr	r1, [r7, #0]
 8016ba8:	6878      	ldr	r0, [r7, #4]
 8016baa:	f000 f900 	bl	8016dae <USBD_CtlError>
 8016bae:	4b07      	ldr	r3, [pc, #28]	@ (8016bcc <USBD_SetConfig+0x150>)
 8016bb0:	781b      	ldrb	r3, [r3, #0]
 8016bb2:	4619      	mov	r1, r3
 8016bb4:	6878      	ldr	r0, [r7, #4]
 8016bb6:	f7fe ff94 	bl	8015ae2 <USBD_ClrClassConfig>
 8016bba:	2303      	movs	r3, #3
 8016bbc:	73fb      	strb	r3, [r7, #15]
 8016bbe:	bf00      	nop
 8016bc0:	7bfb      	ldrb	r3, [r7, #15]
 8016bc2:	4618      	mov	r0, r3
 8016bc4:	3710      	adds	r7, #16
 8016bc6:	46bd      	mov	sp, r7
 8016bc8:	bd80      	pop	{r7, pc}
 8016bca:	bf00      	nop
 8016bcc:	20003acc 	.word	0x20003acc

08016bd0 <USBD_GetConfig>:
 8016bd0:	b580      	push	{r7, lr}
 8016bd2:	b082      	sub	sp, #8
 8016bd4:	af00      	add	r7, sp, #0
 8016bd6:	6078      	str	r0, [r7, #4]
 8016bd8:	6039      	str	r1, [r7, #0]
 8016bda:	683b      	ldr	r3, [r7, #0]
 8016bdc:	88db      	ldrh	r3, [r3, #6]
 8016bde:	2b01      	cmp	r3, #1
 8016be0:	d004      	beq.n	8016bec <USBD_GetConfig+0x1c>
 8016be2:	6839      	ldr	r1, [r7, #0]
 8016be4:	6878      	ldr	r0, [r7, #4]
 8016be6:	f000 f8e2 	bl	8016dae <USBD_CtlError>
 8016bea:	e023      	b.n	8016c34 <USBD_GetConfig+0x64>
 8016bec:	687b      	ldr	r3, [r7, #4]
 8016bee:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016bf2:	b2db      	uxtb	r3, r3
 8016bf4:	2b02      	cmp	r3, #2
 8016bf6:	dc02      	bgt.n	8016bfe <USBD_GetConfig+0x2e>
 8016bf8:	2b00      	cmp	r3, #0
 8016bfa:	dc03      	bgt.n	8016c04 <USBD_GetConfig+0x34>
 8016bfc:	e015      	b.n	8016c2a <USBD_GetConfig+0x5a>
 8016bfe:	2b03      	cmp	r3, #3
 8016c00:	d00b      	beq.n	8016c1a <USBD_GetConfig+0x4a>
 8016c02:	e012      	b.n	8016c2a <USBD_GetConfig+0x5a>
 8016c04:	687b      	ldr	r3, [r7, #4]
 8016c06:	2200      	movs	r2, #0
 8016c08:	609a      	str	r2, [r3, #8]
 8016c0a:	687b      	ldr	r3, [r7, #4]
 8016c0c:	3308      	adds	r3, #8
 8016c0e:	2201      	movs	r2, #1
 8016c10:	4619      	mov	r1, r3
 8016c12:	6878      	ldr	r0, [r7, #4]
 8016c14:	f000 f93c 	bl	8016e90 <USBD_CtlSendData>
 8016c18:	e00c      	b.n	8016c34 <USBD_GetConfig+0x64>
 8016c1a:	687b      	ldr	r3, [r7, #4]
 8016c1c:	3304      	adds	r3, #4
 8016c1e:	2201      	movs	r2, #1
 8016c20:	4619      	mov	r1, r3
 8016c22:	6878      	ldr	r0, [r7, #4]
 8016c24:	f000 f934 	bl	8016e90 <USBD_CtlSendData>
 8016c28:	e004      	b.n	8016c34 <USBD_GetConfig+0x64>
 8016c2a:	6839      	ldr	r1, [r7, #0]
 8016c2c:	6878      	ldr	r0, [r7, #4]
 8016c2e:	f000 f8be 	bl	8016dae <USBD_CtlError>
 8016c32:	bf00      	nop
 8016c34:	bf00      	nop
 8016c36:	3708      	adds	r7, #8
 8016c38:	46bd      	mov	sp, r7
 8016c3a:	bd80      	pop	{r7, pc}

08016c3c <USBD_GetStatus>:
 8016c3c:	b580      	push	{r7, lr}
 8016c3e:	b082      	sub	sp, #8
 8016c40:	af00      	add	r7, sp, #0
 8016c42:	6078      	str	r0, [r7, #4]
 8016c44:	6039      	str	r1, [r7, #0]
 8016c46:	687b      	ldr	r3, [r7, #4]
 8016c48:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016c4c:	b2db      	uxtb	r3, r3
 8016c4e:	3b01      	subs	r3, #1
 8016c50:	2b02      	cmp	r3, #2
 8016c52:	d81e      	bhi.n	8016c92 <USBD_GetStatus+0x56>
 8016c54:	683b      	ldr	r3, [r7, #0]
 8016c56:	88db      	ldrh	r3, [r3, #6]
 8016c58:	2b02      	cmp	r3, #2
 8016c5a:	d004      	beq.n	8016c66 <USBD_GetStatus+0x2a>
 8016c5c:	6839      	ldr	r1, [r7, #0]
 8016c5e:	6878      	ldr	r0, [r7, #4]
 8016c60:	f000 f8a5 	bl	8016dae <USBD_CtlError>
 8016c64:	e01a      	b.n	8016c9c <USBD_GetStatus+0x60>
 8016c66:	687b      	ldr	r3, [r7, #4]
 8016c68:	2201      	movs	r2, #1
 8016c6a:	60da      	str	r2, [r3, #12]
 8016c6c:	687b      	ldr	r3, [r7, #4]
 8016c6e:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 8016c72:	2b00      	cmp	r3, #0
 8016c74:	d005      	beq.n	8016c82 <USBD_GetStatus+0x46>
 8016c76:	687b      	ldr	r3, [r7, #4]
 8016c78:	68db      	ldr	r3, [r3, #12]
 8016c7a:	f043 0202 	orr.w	r2, r3, #2
 8016c7e:	687b      	ldr	r3, [r7, #4]
 8016c80:	60da      	str	r2, [r3, #12]
 8016c82:	687b      	ldr	r3, [r7, #4]
 8016c84:	330c      	adds	r3, #12
 8016c86:	2202      	movs	r2, #2
 8016c88:	4619      	mov	r1, r3
 8016c8a:	6878      	ldr	r0, [r7, #4]
 8016c8c:	f000 f900 	bl	8016e90 <USBD_CtlSendData>
 8016c90:	e004      	b.n	8016c9c <USBD_GetStatus+0x60>
 8016c92:	6839      	ldr	r1, [r7, #0]
 8016c94:	6878      	ldr	r0, [r7, #4]
 8016c96:	f000 f88a 	bl	8016dae <USBD_CtlError>
 8016c9a:	bf00      	nop
 8016c9c:	bf00      	nop
 8016c9e:	3708      	adds	r7, #8
 8016ca0:	46bd      	mov	sp, r7
 8016ca2:	bd80      	pop	{r7, pc}

08016ca4 <USBD_SetFeature>:
 8016ca4:	b580      	push	{r7, lr}
 8016ca6:	b082      	sub	sp, #8
 8016ca8:	af00      	add	r7, sp, #0
 8016caa:	6078      	str	r0, [r7, #4]
 8016cac:	6039      	str	r1, [r7, #0]
 8016cae:	683b      	ldr	r3, [r7, #0]
 8016cb0:	885b      	ldrh	r3, [r3, #2]
 8016cb2:	2b01      	cmp	r3, #1
 8016cb4:	d107      	bne.n	8016cc6 <USBD_SetFeature+0x22>
 8016cb6:	687b      	ldr	r3, [r7, #4]
 8016cb8:	2201      	movs	r2, #1
 8016cba:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8016cbe:	6878      	ldr	r0, [r7, #4]
 8016cc0:	f000 f940 	bl	8016f44 <USBD_CtlSendStatus>
 8016cc4:	e013      	b.n	8016cee <USBD_SetFeature+0x4a>
 8016cc6:	683b      	ldr	r3, [r7, #0]
 8016cc8:	885b      	ldrh	r3, [r3, #2]
 8016cca:	2b02      	cmp	r3, #2
 8016ccc:	d10b      	bne.n	8016ce6 <USBD_SetFeature+0x42>
 8016cce:	683b      	ldr	r3, [r7, #0]
 8016cd0:	889b      	ldrh	r3, [r3, #4]
 8016cd2:	0a1b      	lsrs	r3, r3, #8
 8016cd4:	b29b      	uxth	r3, r3
 8016cd6:	b2da      	uxtb	r2, r3
 8016cd8:	687b      	ldr	r3, [r7, #4]
 8016cda:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8016cde:	6878      	ldr	r0, [r7, #4]
 8016ce0:	f000 f930 	bl	8016f44 <USBD_CtlSendStatus>
 8016ce4:	e003      	b.n	8016cee <USBD_SetFeature+0x4a>
 8016ce6:	6839      	ldr	r1, [r7, #0]
 8016ce8:	6878      	ldr	r0, [r7, #4]
 8016cea:	f000 f860 	bl	8016dae <USBD_CtlError>
 8016cee:	bf00      	nop
 8016cf0:	3708      	adds	r7, #8
 8016cf2:	46bd      	mov	sp, r7
 8016cf4:	bd80      	pop	{r7, pc}

08016cf6 <USBD_ClrFeature>:
 8016cf6:	b580      	push	{r7, lr}
 8016cf8:	b082      	sub	sp, #8
 8016cfa:	af00      	add	r7, sp, #0
 8016cfc:	6078      	str	r0, [r7, #4]
 8016cfe:	6039      	str	r1, [r7, #0]
 8016d00:	687b      	ldr	r3, [r7, #4]
 8016d02:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8016d06:	b2db      	uxtb	r3, r3
 8016d08:	3b01      	subs	r3, #1
 8016d0a:	2b02      	cmp	r3, #2
 8016d0c:	d80b      	bhi.n	8016d26 <USBD_ClrFeature+0x30>
 8016d0e:	683b      	ldr	r3, [r7, #0]
 8016d10:	885b      	ldrh	r3, [r3, #2]
 8016d12:	2b01      	cmp	r3, #1
 8016d14:	d10c      	bne.n	8016d30 <USBD_ClrFeature+0x3a>
 8016d16:	687b      	ldr	r3, [r7, #4]
 8016d18:	2200      	movs	r2, #0
 8016d1a:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8016d1e:	6878      	ldr	r0, [r7, #4]
 8016d20:	f000 f910 	bl	8016f44 <USBD_CtlSendStatus>
 8016d24:	e004      	b.n	8016d30 <USBD_ClrFeature+0x3a>
 8016d26:	6839      	ldr	r1, [r7, #0]
 8016d28:	6878      	ldr	r0, [r7, #4]
 8016d2a:	f000 f840 	bl	8016dae <USBD_CtlError>
 8016d2e:	e000      	b.n	8016d32 <USBD_ClrFeature+0x3c>
 8016d30:	bf00      	nop
 8016d32:	bf00      	nop
 8016d34:	3708      	adds	r7, #8
 8016d36:	46bd      	mov	sp, r7
 8016d38:	bd80      	pop	{r7, pc}

08016d3a <USBD_ParseSetupRequest>:
 8016d3a:	b580      	push	{r7, lr}
 8016d3c:	b084      	sub	sp, #16
 8016d3e:	af00      	add	r7, sp, #0
 8016d40:	6078      	str	r0, [r7, #4]
 8016d42:	6039      	str	r1, [r7, #0]
 8016d44:	683b      	ldr	r3, [r7, #0]
 8016d46:	60fb      	str	r3, [r7, #12]
 8016d48:	68fb      	ldr	r3, [r7, #12]
 8016d4a:	781a      	ldrb	r2, [r3, #0]
 8016d4c:	687b      	ldr	r3, [r7, #4]
 8016d4e:	701a      	strb	r2, [r3, #0]
 8016d50:	68fb      	ldr	r3, [r7, #12]
 8016d52:	3301      	adds	r3, #1
 8016d54:	60fb      	str	r3, [r7, #12]
 8016d56:	68fb      	ldr	r3, [r7, #12]
 8016d58:	781a      	ldrb	r2, [r3, #0]
 8016d5a:	687b      	ldr	r3, [r7, #4]
 8016d5c:	705a      	strb	r2, [r3, #1]
 8016d5e:	68fb      	ldr	r3, [r7, #12]
 8016d60:	3301      	adds	r3, #1
 8016d62:	60fb      	str	r3, [r7, #12]
 8016d64:	68f8      	ldr	r0, [r7, #12]
 8016d66:	f7ff fa40 	bl	80161ea <SWAPBYTE>
 8016d6a:	4603      	mov	r3, r0
 8016d6c:	461a      	mov	r2, r3
 8016d6e:	687b      	ldr	r3, [r7, #4]
 8016d70:	805a      	strh	r2, [r3, #2]
 8016d72:	68fb      	ldr	r3, [r7, #12]
 8016d74:	3301      	adds	r3, #1
 8016d76:	60fb      	str	r3, [r7, #12]
 8016d78:	68fb      	ldr	r3, [r7, #12]
 8016d7a:	3301      	adds	r3, #1
 8016d7c:	60fb      	str	r3, [r7, #12]
 8016d7e:	68f8      	ldr	r0, [r7, #12]
 8016d80:	f7ff fa33 	bl	80161ea <SWAPBYTE>
 8016d84:	4603      	mov	r3, r0
 8016d86:	461a      	mov	r2, r3
 8016d88:	687b      	ldr	r3, [r7, #4]
 8016d8a:	809a      	strh	r2, [r3, #4]
 8016d8c:	68fb      	ldr	r3, [r7, #12]
 8016d8e:	3301      	adds	r3, #1
 8016d90:	60fb      	str	r3, [r7, #12]
 8016d92:	68fb      	ldr	r3, [r7, #12]
 8016d94:	3301      	adds	r3, #1
 8016d96:	60fb      	str	r3, [r7, #12]
 8016d98:	68f8      	ldr	r0, [r7, #12]
 8016d9a:	f7ff fa26 	bl	80161ea <SWAPBYTE>
 8016d9e:	4603      	mov	r3, r0
 8016da0:	461a      	mov	r2, r3
 8016da2:	687b      	ldr	r3, [r7, #4]
 8016da4:	80da      	strh	r2, [r3, #6]
 8016da6:	bf00      	nop
 8016da8:	3710      	adds	r7, #16
 8016daa:	46bd      	mov	sp, r7
 8016dac:	bd80      	pop	{r7, pc}

08016dae <USBD_CtlError>:
 8016dae:	b580      	push	{r7, lr}
 8016db0:	b082      	sub	sp, #8
 8016db2:	af00      	add	r7, sp, #0
 8016db4:	6078      	str	r0, [r7, #4]
 8016db6:	6039      	str	r1, [r7, #0]
 8016db8:	2180      	movs	r1, #128	@ 0x80
 8016dba:	6878      	ldr	r0, [r7, #4]
 8016dbc:	f003 fdfe 	bl	801a9bc <USBD_LL_StallEP>
 8016dc0:	2100      	movs	r1, #0
 8016dc2:	6878      	ldr	r0, [r7, #4]
 8016dc4:	f003 fdfa 	bl	801a9bc <USBD_LL_StallEP>
 8016dc8:	bf00      	nop
 8016dca:	3708      	adds	r7, #8
 8016dcc:	46bd      	mov	sp, r7
 8016dce:	bd80      	pop	{r7, pc}

08016dd0 <USBD_GetString>:
 8016dd0:	b580      	push	{r7, lr}
 8016dd2:	b086      	sub	sp, #24
 8016dd4:	af00      	add	r7, sp, #0
 8016dd6:	60f8      	str	r0, [r7, #12]
 8016dd8:	60b9      	str	r1, [r7, #8]
 8016dda:	607a      	str	r2, [r7, #4]
 8016ddc:	2300      	movs	r3, #0
 8016dde:	75fb      	strb	r3, [r7, #23]
 8016de0:	68fb      	ldr	r3, [r7, #12]
 8016de2:	2b00      	cmp	r3, #0
 8016de4:	d036      	beq.n	8016e54 <USBD_GetString+0x84>
 8016de6:	68fb      	ldr	r3, [r7, #12]
 8016de8:	613b      	str	r3, [r7, #16]
 8016dea:	6938      	ldr	r0, [r7, #16]
 8016dec:	f000 f836 	bl	8016e5c <USBD_GetLen>
 8016df0:	4603      	mov	r3, r0
 8016df2:	3301      	adds	r3, #1
 8016df4:	b29b      	uxth	r3, r3
 8016df6:	005b      	lsls	r3, r3, #1
 8016df8:	b29a      	uxth	r2, r3
 8016dfa:	687b      	ldr	r3, [r7, #4]
 8016dfc:	801a      	strh	r2, [r3, #0]
 8016dfe:	7dfb      	ldrb	r3, [r7, #23]
 8016e00:	68ba      	ldr	r2, [r7, #8]
 8016e02:	4413      	add	r3, r2
 8016e04:	687a      	ldr	r2, [r7, #4]
 8016e06:	7812      	ldrb	r2, [r2, #0]
 8016e08:	701a      	strb	r2, [r3, #0]
 8016e0a:	7dfb      	ldrb	r3, [r7, #23]
 8016e0c:	3301      	adds	r3, #1
 8016e0e:	75fb      	strb	r3, [r7, #23]
 8016e10:	7dfb      	ldrb	r3, [r7, #23]
 8016e12:	68ba      	ldr	r2, [r7, #8]
 8016e14:	4413      	add	r3, r2
 8016e16:	2203      	movs	r2, #3
 8016e18:	701a      	strb	r2, [r3, #0]
 8016e1a:	7dfb      	ldrb	r3, [r7, #23]
 8016e1c:	3301      	adds	r3, #1
 8016e1e:	75fb      	strb	r3, [r7, #23]
 8016e20:	e013      	b.n	8016e4a <USBD_GetString+0x7a>
 8016e22:	7dfb      	ldrb	r3, [r7, #23]
 8016e24:	68ba      	ldr	r2, [r7, #8]
 8016e26:	4413      	add	r3, r2
 8016e28:	693a      	ldr	r2, [r7, #16]
 8016e2a:	7812      	ldrb	r2, [r2, #0]
 8016e2c:	701a      	strb	r2, [r3, #0]
 8016e2e:	693b      	ldr	r3, [r7, #16]
 8016e30:	3301      	adds	r3, #1
 8016e32:	613b      	str	r3, [r7, #16]
 8016e34:	7dfb      	ldrb	r3, [r7, #23]
 8016e36:	3301      	adds	r3, #1
 8016e38:	75fb      	strb	r3, [r7, #23]
 8016e3a:	7dfb      	ldrb	r3, [r7, #23]
 8016e3c:	68ba      	ldr	r2, [r7, #8]
 8016e3e:	4413      	add	r3, r2
 8016e40:	2200      	movs	r2, #0
 8016e42:	701a      	strb	r2, [r3, #0]
 8016e44:	7dfb      	ldrb	r3, [r7, #23]
 8016e46:	3301      	adds	r3, #1
 8016e48:	75fb      	strb	r3, [r7, #23]
 8016e4a:	693b      	ldr	r3, [r7, #16]
 8016e4c:	781b      	ldrb	r3, [r3, #0]
 8016e4e:	2b00      	cmp	r3, #0
 8016e50:	d1e7      	bne.n	8016e22 <USBD_GetString+0x52>
 8016e52:	e000      	b.n	8016e56 <USBD_GetString+0x86>
 8016e54:	bf00      	nop
 8016e56:	3718      	adds	r7, #24
 8016e58:	46bd      	mov	sp, r7
 8016e5a:	bd80      	pop	{r7, pc}

08016e5c <USBD_GetLen>:
 8016e5c:	b480      	push	{r7}
 8016e5e:	b085      	sub	sp, #20
 8016e60:	af00      	add	r7, sp, #0
 8016e62:	6078      	str	r0, [r7, #4]
 8016e64:	2300      	movs	r3, #0
 8016e66:	73fb      	strb	r3, [r7, #15]
 8016e68:	687b      	ldr	r3, [r7, #4]
 8016e6a:	60bb      	str	r3, [r7, #8]
 8016e6c:	e005      	b.n	8016e7a <USBD_GetLen+0x1e>
 8016e6e:	7bfb      	ldrb	r3, [r7, #15]
 8016e70:	3301      	adds	r3, #1
 8016e72:	73fb      	strb	r3, [r7, #15]
 8016e74:	68bb      	ldr	r3, [r7, #8]
 8016e76:	3301      	adds	r3, #1
 8016e78:	60bb      	str	r3, [r7, #8]
 8016e7a:	68bb      	ldr	r3, [r7, #8]
 8016e7c:	781b      	ldrb	r3, [r3, #0]
 8016e7e:	2b00      	cmp	r3, #0
 8016e80:	d1f5      	bne.n	8016e6e <USBD_GetLen+0x12>
 8016e82:	7bfb      	ldrb	r3, [r7, #15]
 8016e84:	4618      	mov	r0, r3
 8016e86:	3714      	adds	r7, #20
 8016e88:	46bd      	mov	sp, r7
 8016e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016e8e:	4770      	bx	lr

08016e90 <USBD_CtlSendData>:
 8016e90:	b580      	push	{r7, lr}
 8016e92:	b084      	sub	sp, #16
 8016e94:	af00      	add	r7, sp, #0
 8016e96:	60f8      	str	r0, [r7, #12]
 8016e98:	60b9      	str	r1, [r7, #8]
 8016e9a:	607a      	str	r2, [r7, #4]
 8016e9c:	68fb      	ldr	r3, [r7, #12]
 8016e9e:	2202      	movs	r2, #2
 8016ea0:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016ea4:	68fb      	ldr	r3, [r7, #12]
 8016ea6:	687a      	ldr	r2, [r7, #4]
 8016ea8:	619a      	str	r2, [r3, #24]
 8016eaa:	68fb      	ldr	r3, [r7, #12]
 8016eac:	687a      	ldr	r2, [r7, #4]
 8016eae:	61da      	str	r2, [r3, #28]
 8016eb0:	687b      	ldr	r3, [r7, #4]
 8016eb2:	68ba      	ldr	r2, [r7, #8]
 8016eb4:	2100      	movs	r1, #0
 8016eb6:	68f8      	ldr	r0, [r7, #12]
 8016eb8:	f003 fe09 	bl	801aace <USBD_LL_Transmit>
 8016ebc:	2300      	movs	r3, #0
 8016ebe:	4618      	mov	r0, r3
 8016ec0:	3710      	adds	r7, #16
 8016ec2:	46bd      	mov	sp, r7
 8016ec4:	bd80      	pop	{r7, pc}

08016ec6 <USBD_CtlContinueSendData>:
 8016ec6:	b580      	push	{r7, lr}
 8016ec8:	b084      	sub	sp, #16
 8016eca:	af00      	add	r7, sp, #0
 8016ecc:	60f8      	str	r0, [r7, #12]
 8016ece:	60b9      	str	r1, [r7, #8]
 8016ed0:	607a      	str	r2, [r7, #4]
 8016ed2:	687b      	ldr	r3, [r7, #4]
 8016ed4:	68ba      	ldr	r2, [r7, #8]
 8016ed6:	2100      	movs	r1, #0
 8016ed8:	68f8      	ldr	r0, [r7, #12]
 8016eda:	f003 fdf8 	bl	801aace <USBD_LL_Transmit>
 8016ede:	2300      	movs	r3, #0
 8016ee0:	4618      	mov	r0, r3
 8016ee2:	3710      	adds	r7, #16
 8016ee4:	46bd      	mov	sp, r7
 8016ee6:	bd80      	pop	{r7, pc}

08016ee8 <USBD_CtlPrepareRx>:
 8016ee8:	b580      	push	{r7, lr}
 8016eea:	b084      	sub	sp, #16
 8016eec:	af00      	add	r7, sp, #0
 8016eee:	60f8      	str	r0, [r7, #12]
 8016ef0:	60b9      	str	r1, [r7, #8]
 8016ef2:	607a      	str	r2, [r7, #4]
 8016ef4:	68fb      	ldr	r3, [r7, #12]
 8016ef6:	2203      	movs	r2, #3
 8016ef8:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016efc:	68fb      	ldr	r3, [r7, #12]
 8016efe:	687a      	ldr	r2, [r7, #4]
 8016f00:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 8016f04:	68fb      	ldr	r3, [r7, #12]
 8016f06:	687a      	ldr	r2, [r7, #4]
 8016f08:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 8016f0c:	687b      	ldr	r3, [r7, #4]
 8016f0e:	68ba      	ldr	r2, [r7, #8]
 8016f10:	2100      	movs	r1, #0
 8016f12:	68f8      	ldr	r0, [r7, #12]
 8016f14:	f003 fdfc 	bl	801ab10 <USBD_LL_PrepareReceive>
 8016f18:	2300      	movs	r3, #0
 8016f1a:	4618      	mov	r0, r3
 8016f1c:	3710      	adds	r7, #16
 8016f1e:	46bd      	mov	sp, r7
 8016f20:	bd80      	pop	{r7, pc}

08016f22 <USBD_CtlContinueRx>:
 8016f22:	b580      	push	{r7, lr}
 8016f24:	b084      	sub	sp, #16
 8016f26:	af00      	add	r7, sp, #0
 8016f28:	60f8      	str	r0, [r7, #12]
 8016f2a:	60b9      	str	r1, [r7, #8]
 8016f2c:	607a      	str	r2, [r7, #4]
 8016f2e:	687b      	ldr	r3, [r7, #4]
 8016f30:	68ba      	ldr	r2, [r7, #8]
 8016f32:	2100      	movs	r1, #0
 8016f34:	68f8      	ldr	r0, [r7, #12]
 8016f36:	f003 fdeb 	bl	801ab10 <USBD_LL_PrepareReceive>
 8016f3a:	2300      	movs	r3, #0
 8016f3c:	4618      	mov	r0, r3
 8016f3e:	3710      	adds	r7, #16
 8016f40:	46bd      	mov	sp, r7
 8016f42:	bd80      	pop	{r7, pc}

08016f44 <USBD_CtlSendStatus>:
 8016f44:	b580      	push	{r7, lr}
 8016f46:	b082      	sub	sp, #8
 8016f48:	af00      	add	r7, sp, #0
 8016f4a:	6078      	str	r0, [r7, #4]
 8016f4c:	687b      	ldr	r3, [r7, #4]
 8016f4e:	2204      	movs	r2, #4
 8016f50:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016f54:	2300      	movs	r3, #0
 8016f56:	2200      	movs	r2, #0
 8016f58:	2100      	movs	r1, #0
 8016f5a:	6878      	ldr	r0, [r7, #4]
 8016f5c:	f003 fdb7 	bl	801aace <USBD_LL_Transmit>
 8016f60:	2300      	movs	r3, #0
 8016f62:	4618      	mov	r0, r3
 8016f64:	3708      	adds	r7, #8
 8016f66:	46bd      	mov	sp, r7
 8016f68:	bd80      	pop	{r7, pc}

08016f6a <USBD_CtlReceiveStatus>:
 8016f6a:	b580      	push	{r7, lr}
 8016f6c:	b082      	sub	sp, #8
 8016f6e:	af00      	add	r7, sp, #0
 8016f70:	6078      	str	r0, [r7, #4]
 8016f72:	687b      	ldr	r3, [r7, #4]
 8016f74:	2205      	movs	r2, #5
 8016f76:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8016f7a:	2300      	movs	r3, #0
 8016f7c:	2200      	movs	r2, #0
 8016f7e:	2100      	movs	r1, #0
 8016f80:	6878      	ldr	r0, [r7, #4]
 8016f82:	f003 fdc5 	bl	801ab10 <USBD_LL_PrepareReceive>
 8016f86:	2300      	movs	r3, #0
 8016f88:	4618      	mov	r0, r3
 8016f8a:	3708      	adds	r7, #8
 8016f8c:	46bd      	mov	sp, r7
 8016f8e:	bd80      	pop	{r7, pc}

08016f90 <makeFreeRtosPriority>:
 8016f90:	b480      	push	{r7}
 8016f92:	b085      	sub	sp, #20
 8016f94:	af00      	add	r7, sp, #0
 8016f96:	4603      	mov	r3, r0
 8016f98:	80fb      	strh	r3, [r7, #6]
 8016f9a:	2300      	movs	r3, #0
 8016f9c:	60fb      	str	r3, [r7, #12]
 8016f9e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8016fa2:	2b84      	cmp	r3, #132	@ 0x84
 8016fa4:	d005      	beq.n	8016fb2 <makeFreeRtosPriority+0x22>
 8016fa6:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8016faa:	68fb      	ldr	r3, [r7, #12]
 8016fac:	4413      	add	r3, r2
 8016fae:	3303      	adds	r3, #3
 8016fb0:	60fb      	str	r3, [r7, #12]
 8016fb2:	68fb      	ldr	r3, [r7, #12]
 8016fb4:	4618      	mov	r0, r3
 8016fb6:	3714      	adds	r7, #20
 8016fb8:	46bd      	mov	sp, r7
 8016fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016fbe:	4770      	bx	lr

08016fc0 <osKernelStart>:
 8016fc0:	b580      	push	{r7, lr}
 8016fc2:	af00      	add	r7, sp, #0
 8016fc4:	f001 fa44 	bl	8018450 <vTaskStartScheduler>
 8016fc8:	2300      	movs	r3, #0
 8016fca:	4618      	mov	r0, r3
 8016fcc:	bd80      	pop	{r7, pc}

08016fce <osThreadCreate>:
 8016fce:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016fd0:	b089      	sub	sp, #36	@ 0x24
 8016fd2:	af04      	add	r7, sp, #16
 8016fd4:	6078      	str	r0, [r7, #4]
 8016fd6:	6039      	str	r1, [r7, #0]
 8016fd8:	687b      	ldr	r3, [r7, #4]
 8016fda:	695b      	ldr	r3, [r3, #20]
 8016fdc:	2b00      	cmp	r3, #0
 8016fde:	d020      	beq.n	8017022 <osThreadCreate+0x54>
 8016fe0:	687b      	ldr	r3, [r7, #4]
 8016fe2:	699b      	ldr	r3, [r3, #24]
 8016fe4:	2b00      	cmp	r3, #0
 8016fe6:	d01c      	beq.n	8017022 <osThreadCreate+0x54>
 8016fe8:	687b      	ldr	r3, [r7, #4]
 8016fea:	685c      	ldr	r4, [r3, #4]
 8016fec:	687b      	ldr	r3, [r7, #4]
 8016fee:	681d      	ldr	r5, [r3, #0]
 8016ff0:	687b      	ldr	r3, [r7, #4]
 8016ff2:	691e      	ldr	r6, [r3, #16]
 8016ff4:	687b      	ldr	r3, [r7, #4]
 8016ff6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016ffa:	4618      	mov	r0, r3
 8016ffc:	f7ff ffc8 	bl	8016f90 <makeFreeRtosPriority>
 8017000:	4601      	mov	r1, r0
 8017002:	687b      	ldr	r3, [r7, #4]
 8017004:	695b      	ldr	r3, [r3, #20]
 8017006:	687a      	ldr	r2, [r7, #4]
 8017008:	6992      	ldr	r2, [r2, #24]
 801700a:	9202      	str	r2, [sp, #8]
 801700c:	9301      	str	r3, [sp, #4]
 801700e:	9100      	str	r1, [sp, #0]
 8017010:	683b      	ldr	r3, [r7, #0]
 8017012:	4632      	mov	r2, r6
 8017014:	4629      	mov	r1, r5
 8017016:	4620      	mov	r0, r4
 8017018:	f000 ff7a 	bl	8017f10 <xTaskCreateStatic>
 801701c:	4603      	mov	r3, r0
 801701e:	60fb      	str	r3, [r7, #12]
 8017020:	e01c      	b.n	801705c <osThreadCreate+0x8e>
 8017022:	687b      	ldr	r3, [r7, #4]
 8017024:	685c      	ldr	r4, [r3, #4]
 8017026:	687b      	ldr	r3, [r7, #4]
 8017028:	681d      	ldr	r5, [r3, #0]
 801702a:	687b      	ldr	r3, [r7, #4]
 801702c:	691b      	ldr	r3, [r3, #16]
 801702e:	b29e      	uxth	r6, r3
 8017030:	687b      	ldr	r3, [r7, #4]
 8017032:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017036:	4618      	mov	r0, r3
 8017038:	f7ff ffaa 	bl	8016f90 <makeFreeRtosPriority>
 801703c:	4602      	mov	r2, r0
 801703e:	f107 030c 	add.w	r3, r7, #12
 8017042:	9301      	str	r3, [sp, #4]
 8017044:	9200      	str	r2, [sp, #0]
 8017046:	683b      	ldr	r3, [r7, #0]
 8017048:	4632      	mov	r2, r6
 801704a:	4629      	mov	r1, r5
 801704c:	4620      	mov	r0, r4
 801704e:	f000 ffc1 	bl	8017fd4 <xTaskCreate>
 8017052:	4603      	mov	r3, r0
 8017054:	2b01      	cmp	r3, #1
 8017056:	d001      	beq.n	801705c <osThreadCreate+0x8e>
 8017058:	2300      	movs	r3, #0
 801705a:	e000      	b.n	801705e <osThreadCreate+0x90>
 801705c:	68fb      	ldr	r3, [r7, #12]
 801705e:	4618      	mov	r0, r3
 8017060:	3714      	adds	r7, #20
 8017062:	46bd      	mov	sp, r7
 8017064:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017066 <osDelay>:
 8017066:	b580      	push	{r7, lr}
 8017068:	b084      	sub	sp, #16
 801706a:	af00      	add	r7, sp, #0
 801706c:	6078      	str	r0, [r7, #4]
 801706e:	687b      	ldr	r3, [r7, #4]
 8017070:	60fb      	str	r3, [r7, #12]
 8017072:	68fb      	ldr	r3, [r7, #12]
 8017074:	2b00      	cmp	r3, #0
 8017076:	d001      	beq.n	801707c <osDelay+0x16>
 8017078:	68fb      	ldr	r3, [r7, #12]
 801707a:	e000      	b.n	801707e <osDelay+0x18>
 801707c:	2301      	movs	r3, #1
 801707e:	4618      	mov	r0, r3
 8017080:	f001 f9b0 	bl	80183e4 <vTaskDelay>
 8017084:	2300      	movs	r3, #0
 8017086:	4618      	mov	r0, r3
 8017088:	3710      	adds	r7, #16
 801708a:	46bd      	mov	sp, r7
 801708c:	bd80      	pop	{r7, pc}

0801708e <xEventGroupCreate>:
 801708e:	b580      	push	{r7, lr}
 8017090:	b082      	sub	sp, #8
 8017092:	af00      	add	r7, sp, #0
 8017094:	2020      	movs	r0, #32
 8017096:	f002 fe89 	bl	8019dac <pvPortMalloc>
 801709a:	6078      	str	r0, [r7, #4]
 801709c:	687b      	ldr	r3, [r7, #4]
 801709e:	2b00      	cmp	r3, #0
 80170a0:	d00a      	beq.n	80170b8 <xEventGroupCreate+0x2a>
 80170a2:	687b      	ldr	r3, [r7, #4]
 80170a4:	2200      	movs	r2, #0
 80170a6:	601a      	str	r2, [r3, #0]
 80170a8:	687b      	ldr	r3, [r7, #4]
 80170aa:	3304      	adds	r3, #4
 80170ac:	4618      	mov	r0, r3
 80170ae:	f000 f8b5 	bl	801721c <vListInitialise>
 80170b2:	687b      	ldr	r3, [r7, #4]
 80170b4:	2200      	movs	r2, #0
 80170b6:	771a      	strb	r2, [r3, #28]
 80170b8:	687b      	ldr	r3, [r7, #4]
 80170ba:	4618      	mov	r0, r3
 80170bc:	3708      	adds	r7, #8
 80170be:	46bd      	mov	sp, r7
 80170c0:	bd80      	pop	{r7, pc}

080170c2 <xEventGroupSetBits>:
 80170c2:	b580      	push	{r7, lr}
 80170c4:	b08e      	sub	sp, #56	@ 0x38
 80170c6:	af00      	add	r7, sp, #0
 80170c8:	6078      	str	r0, [r7, #4]
 80170ca:	6039      	str	r1, [r7, #0]
 80170cc:	2300      	movs	r3, #0
 80170ce:	633b      	str	r3, [r7, #48]	@ 0x30
 80170d0:	687b      	ldr	r3, [r7, #4]
 80170d2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80170d4:	2300      	movs	r3, #0
 80170d6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80170d8:	687b      	ldr	r3, [r7, #4]
 80170da:	2b00      	cmp	r3, #0
 80170dc:	d10b      	bne.n	80170f6 <xEventGroupSetBits+0x34>
 80170de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80170e2:	f383 8811 	msr	BASEPRI, r3
 80170e6:	f3bf 8f6f 	isb	sy
 80170ea:	f3bf 8f4f 	dsb	sy
 80170ee:	613b      	str	r3, [r7, #16]
 80170f0:	bf00      	nop
 80170f2:	bf00      	nop
 80170f4:	e7fd      	b.n	80170f2 <xEventGroupSetBits+0x30>
 80170f6:	683b      	ldr	r3, [r7, #0]
 80170f8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80170fc:	d30b      	bcc.n	8017116 <xEventGroupSetBits+0x54>
 80170fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017102:	f383 8811 	msr	BASEPRI, r3
 8017106:	f3bf 8f6f 	isb	sy
 801710a:	f3bf 8f4f 	dsb	sy
 801710e:	60fb      	str	r3, [r7, #12]
 8017110:	bf00      	nop
 8017112:	bf00      	nop
 8017114:	e7fd      	b.n	8017112 <xEventGroupSetBits+0x50>
 8017116:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017118:	3304      	adds	r3, #4
 801711a:	627b      	str	r3, [r7, #36]	@ 0x24
 801711c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801711e:	3308      	adds	r3, #8
 8017120:	623b      	str	r3, [r7, #32]
 8017122:	f001 fa07 	bl	8018534 <vTaskSuspendAll>
 8017126:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017128:	68db      	ldr	r3, [r3, #12]
 801712a:	637b      	str	r3, [r7, #52]	@ 0x34
 801712c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801712e:	681a      	ldr	r2, [r3, #0]
 8017130:	683b      	ldr	r3, [r7, #0]
 8017132:	431a      	orrs	r2, r3
 8017134:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017136:	601a      	str	r2, [r3, #0]
 8017138:	e03c      	b.n	80171b4 <xEventGroupSetBits+0xf2>
 801713a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801713c:	685b      	ldr	r3, [r3, #4]
 801713e:	61fb      	str	r3, [r7, #28]
 8017140:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017142:	681b      	ldr	r3, [r3, #0]
 8017144:	61bb      	str	r3, [r7, #24]
 8017146:	2300      	movs	r3, #0
 8017148:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801714a:	69bb      	ldr	r3, [r7, #24]
 801714c:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 8017150:	617b      	str	r3, [r7, #20]
 8017152:	69bb      	ldr	r3, [r7, #24]
 8017154:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8017158:	61bb      	str	r3, [r7, #24]
 801715a:	697b      	ldr	r3, [r7, #20]
 801715c:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8017160:	2b00      	cmp	r3, #0
 8017162:	d108      	bne.n	8017176 <xEventGroupSetBits+0xb4>
 8017164:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017166:	681a      	ldr	r2, [r3, #0]
 8017168:	69bb      	ldr	r3, [r7, #24]
 801716a:	4013      	ands	r3, r2
 801716c:	2b00      	cmp	r3, #0
 801716e:	d00b      	beq.n	8017188 <xEventGroupSetBits+0xc6>
 8017170:	2301      	movs	r3, #1
 8017172:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017174:	e008      	b.n	8017188 <xEventGroupSetBits+0xc6>
 8017176:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017178:	681a      	ldr	r2, [r3, #0]
 801717a:	69bb      	ldr	r3, [r7, #24]
 801717c:	4013      	ands	r3, r2
 801717e:	69ba      	ldr	r2, [r7, #24]
 8017180:	429a      	cmp	r2, r3
 8017182:	d101      	bne.n	8017188 <xEventGroupSetBits+0xc6>
 8017184:	2301      	movs	r3, #1
 8017186:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017188:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801718a:	2b00      	cmp	r3, #0
 801718c:	d010      	beq.n	80171b0 <xEventGroupSetBits+0xee>
 801718e:	697b      	ldr	r3, [r7, #20]
 8017190:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8017194:	2b00      	cmp	r3, #0
 8017196:	d003      	beq.n	80171a0 <xEventGroupSetBits+0xde>
 8017198:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801719a:	69bb      	ldr	r3, [r7, #24]
 801719c:	4313      	orrs	r3, r2
 801719e:	633b      	str	r3, [r7, #48]	@ 0x30
 80171a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80171a2:	681b      	ldr	r3, [r3, #0]
 80171a4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80171a8:	4619      	mov	r1, r3
 80171aa:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 80171ac:	f001 fc7e 	bl	8018aac <vTaskRemoveFromUnorderedEventList>
 80171b0:	69fb      	ldr	r3, [r7, #28]
 80171b2:	637b      	str	r3, [r7, #52]	@ 0x34
 80171b4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80171b6:	6a3b      	ldr	r3, [r7, #32]
 80171b8:	429a      	cmp	r2, r3
 80171ba:	d1be      	bne.n	801713a <xEventGroupSetBits+0x78>
 80171bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80171be:	681a      	ldr	r2, [r3, #0]
 80171c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80171c2:	43db      	mvns	r3, r3
 80171c4:	401a      	ands	r2, r3
 80171c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80171c8:	601a      	str	r2, [r3, #0]
 80171ca:	f001 f9c1 	bl	8018550 <xTaskResumeAll>
 80171ce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80171d0:	681b      	ldr	r3, [r3, #0]
 80171d2:	4618      	mov	r0, r3
 80171d4:	3738      	adds	r7, #56	@ 0x38
 80171d6:	46bd      	mov	sp, r7
 80171d8:	bd80      	pop	{r7, pc}

080171da <vEventGroupSetBitsCallback>:
 80171da:	b580      	push	{r7, lr}
 80171dc:	b082      	sub	sp, #8
 80171de:	af00      	add	r7, sp, #0
 80171e0:	6078      	str	r0, [r7, #4]
 80171e2:	6039      	str	r1, [r7, #0]
 80171e4:	6839      	ldr	r1, [r7, #0]
 80171e6:	6878      	ldr	r0, [r7, #4]
 80171e8:	f7ff ff6b 	bl	80170c2 <xEventGroupSetBits>
 80171ec:	bf00      	nop
 80171ee:	3708      	adds	r7, #8
 80171f0:	46bd      	mov	sp, r7
 80171f2:	bd80      	pop	{r7, pc}

080171f4 <xEventGroupSetBitsFromISR>:
 80171f4:	b580      	push	{r7, lr}
 80171f6:	b086      	sub	sp, #24
 80171f8:	af00      	add	r7, sp, #0
 80171fa:	60f8      	str	r0, [r7, #12]
 80171fc:	60b9      	str	r1, [r7, #8]
 80171fe:	607a      	str	r2, [r7, #4]
 8017200:	687b      	ldr	r3, [r7, #4]
 8017202:	68ba      	ldr	r2, [r7, #8]
 8017204:	68f9      	ldr	r1, [r7, #12]
 8017206:	4804      	ldr	r0, [pc, #16]	@ (8017218 <xEventGroupSetBitsFromISR+0x24>)
 8017208:	f002 fb5e 	bl	80198c8 <xTimerPendFunctionCallFromISR>
 801720c:	6178      	str	r0, [r7, #20]
 801720e:	697b      	ldr	r3, [r7, #20]
 8017210:	4618      	mov	r0, r3
 8017212:	3718      	adds	r7, #24
 8017214:	46bd      	mov	sp, r7
 8017216:	bd80      	pop	{r7, pc}
 8017218:	080171db 	.word	0x080171db

0801721c <vListInitialise>:
 801721c:	b480      	push	{r7}
 801721e:	b083      	sub	sp, #12
 8017220:	af00      	add	r7, sp, #0
 8017222:	6078      	str	r0, [r7, #4]
 8017224:	687b      	ldr	r3, [r7, #4]
 8017226:	f103 0208 	add.w	r2, r3, #8
 801722a:	687b      	ldr	r3, [r7, #4]
 801722c:	605a      	str	r2, [r3, #4]
 801722e:	687b      	ldr	r3, [r7, #4]
 8017230:	f04f 32ff 	mov.w	r2, #4294967295
 8017234:	609a      	str	r2, [r3, #8]
 8017236:	687b      	ldr	r3, [r7, #4]
 8017238:	f103 0208 	add.w	r2, r3, #8
 801723c:	687b      	ldr	r3, [r7, #4]
 801723e:	60da      	str	r2, [r3, #12]
 8017240:	687b      	ldr	r3, [r7, #4]
 8017242:	f103 0208 	add.w	r2, r3, #8
 8017246:	687b      	ldr	r3, [r7, #4]
 8017248:	611a      	str	r2, [r3, #16]
 801724a:	687b      	ldr	r3, [r7, #4]
 801724c:	2200      	movs	r2, #0
 801724e:	601a      	str	r2, [r3, #0]
 8017250:	bf00      	nop
 8017252:	370c      	adds	r7, #12
 8017254:	46bd      	mov	sp, r7
 8017256:	f85d 7b04 	ldr.w	r7, [sp], #4
 801725a:	4770      	bx	lr

0801725c <vListInitialiseItem>:
 801725c:	b480      	push	{r7}
 801725e:	b083      	sub	sp, #12
 8017260:	af00      	add	r7, sp, #0
 8017262:	6078      	str	r0, [r7, #4]
 8017264:	687b      	ldr	r3, [r7, #4]
 8017266:	2200      	movs	r2, #0
 8017268:	611a      	str	r2, [r3, #16]
 801726a:	bf00      	nop
 801726c:	370c      	adds	r7, #12
 801726e:	46bd      	mov	sp, r7
 8017270:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017274:	4770      	bx	lr

08017276 <vListInsertEnd>:
 8017276:	b480      	push	{r7}
 8017278:	b085      	sub	sp, #20
 801727a:	af00      	add	r7, sp, #0
 801727c:	6078      	str	r0, [r7, #4]
 801727e:	6039      	str	r1, [r7, #0]
 8017280:	687b      	ldr	r3, [r7, #4]
 8017282:	685b      	ldr	r3, [r3, #4]
 8017284:	60fb      	str	r3, [r7, #12]
 8017286:	683b      	ldr	r3, [r7, #0]
 8017288:	68fa      	ldr	r2, [r7, #12]
 801728a:	605a      	str	r2, [r3, #4]
 801728c:	68fb      	ldr	r3, [r7, #12]
 801728e:	689a      	ldr	r2, [r3, #8]
 8017290:	683b      	ldr	r3, [r7, #0]
 8017292:	609a      	str	r2, [r3, #8]
 8017294:	68fb      	ldr	r3, [r7, #12]
 8017296:	689b      	ldr	r3, [r3, #8]
 8017298:	683a      	ldr	r2, [r7, #0]
 801729a:	605a      	str	r2, [r3, #4]
 801729c:	68fb      	ldr	r3, [r7, #12]
 801729e:	683a      	ldr	r2, [r7, #0]
 80172a0:	609a      	str	r2, [r3, #8]
 80172a2:	683b      	ldr	r3, [r7, #0]
 80172a4:	687a      	ldr	r2, [r7, #4]
 80172a6:	611a      	str	r2, [r3, #16]
 80172a8:	687b      	ldr	r3, [r7, #4]
 80172aa:	681b      	ldr	r3, [r3, #0]
 80172ac:	1c5a      	adds	r2, r3, #1
 80172ae:	687b      	ldr	r3, [r7, #4]
 80172b0:	601a      	str	r2, [r3, #0]
 80172b2:	bf00      	nop
 80172b4:	3714      	adds	r7, #20
 80172b6:	46bd      	mov	sp, r7
 80172b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80172bc:	4770      	bx	lr

080172be <vListInsert>:
 80172be:	b480      	push	{r7}
 80172c0:	b085      	sub	sp, #20
 80172c2:	af00      	add	r7, sp, #0
 80172c4:	6078      	str	r0, [r7, #4]
 80172c6:	6039      	str	r1, [r7, #0]
 80172c8:	683b      	ldr	r3, [r7, #0]
 80172ca:	681b      	ldr	r3, [r3, #0]
 80172cc:	60bb      	str	r3, [r7, #8]
 80172ce:	68bb      	ldr	r3, [r7, #8]
 80172d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80172d4:	d103      	bne.n	80172de <vListInsert+0x20>
 80172d6:	687b      	ldr	r3, [r7, #4]
 80172d8:	691b      	ldr	r3, [r3, #16]
 80172da:	60fb      	str	r3, [r7, #12]
 80172dc:	e00c      	b.n	80172f8 <vListInsert+0x3a>
 80172de:	687b      	ldr	r3, [r7, #4]
 80172e0:	3308      	adds	r3, #8
 80172e2:	60fb      	str	r3, [r7, #12]
 80172e4:	e002      	b.n	80172ec <vListInsert+0x2e>
 80172e6:	68fb      	ldr	r3, [r7, #12]
 80172e8:	685b      	ldr	r3, [r3, #4]
 80172ea:	60fb      	str	r3, [r7, #12]
 80172ec:	68fb      	ldr	r3, [r7, #12]
 80172ee:	685b      	ldr	r3, [r3, #4]
 80172f0:	681b      	ldr	r3, [r3, #0]
 80172f2:	68ba      	ldr	r2, [r7, #8]
 80172f4:	429a      	cmp	r2, r3
 80172f6:	d2f6      	bcs.n	80172e6 <vListInsert+0x28>
 80172f8:	68fb      	ldr	r3, [r7, #12]
 80172fa:	685a      	ldr	r2, [r3, #4]
 80172fc:	683b      	ldr	r3, [r7, #0]
 80172fe:	605a      	str	r2, [r3, #4]
 8017300:	683b      	ldr	r3, [r7, #0]
 8017302:	685b      	ldr	r3, [r3, #4]
 8017304:	683a      	ldr	r2, [r7, #0]
 8017306:	609a      	str	r2, [r3, #8]
 8017308:	683b      	ldr	r3, [r7, #0]
 801730a:	68fa      	ldr	r2, [r7, #12]
 801730c:	609a      	str	r2, [r3, #8]
 801730e:	68fb      	ldr	r3, [r7, #12]
 8017310:	683a      	ldr	r2, [r7, #0]
 8017312:	605a      	str	r2, [r3, #4]
 8017314:	683b      	ldr	r3, [r7, #0]
 8017316:	687a      	ldr	r2, [r7, #4]
 8017318:	611a      	str	r2, [r3, #16]
 801731a:	687b      	ldr	r3, [r7, #4]
 801731c:	681b      	ldr	r3, [r3, #0]
 801731e:	1c5a      	adds	r2, r3, #1
 8017320:	687b      	ldr	r3, [r7, #4]
 8017322:	601a      	str	r2, [r3, #0]
 8017324:	bf00      	nop
 8017326:	3714      	adds	r7, #20
 8017328:	46bd      	mov	sp, r7
 801732a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801732e:	4770      	bx	lr

08017330 <uxListRemove>:
 8017330:	b480      	push	{r7}
 8017332:	b085      	sub	sp, #20
 8017334:	af00      	add	r7, sp, #0
 8017336:	6078      	str	r0, [r7, #4]
 8017338:	687b      	ldr	r3, [r7, #4]
 801733a:	691b      	ldr	r3, [r3, #16]
 801733c:	60fb      	str	r3, [r7, #12]
 801733e:	687b      	ldr	r3, [r7, #4]
 8017340:	685b      	ldr	r3, [r3, #4]
 8017342:	687a      	ldr	r2, [r7, #4]
 8017344:	6892      	ldr	r2, [r2, #8]
 8017346:	609a      	str	r2, [r3, #8]
 8017348:	687b      	ldr	r3, [r7, #4]
 801734a:	689b      	ldr	r3, [r3, #8]
 801734c:	687a      	ldr	r2, [r7, #4]
 801734e:	6852      	ldr	r2, [r2, #4]
 8017350:	605a      	str	r2, [r3, #4]
 8017352:	68fb      	ldr	r3, [r7, #12]
 8017354:	685b      	ldr	r3, [r3, #4]
 8017356:	687a      	ldr	r2, [r7, #4]
 8017358:	429a      	cmp	r2, r3
 801735a:	d103      	bne.n	8017364 <uxListRemove+0x34>
 801735c:	687b      	ldr	r3, [r7, #4]
 801735e:	689a      	ldr	r2, [r3, #8]
 8017360:	68fb      	ldr	r3, [r7, #12]
 8017362:	605a      	str	r2, [r3, #4]
 8017364:	687b      	ldr	r3, [r7, #4]
 8017366:	2200      	movs	r2, #0
 8017368:	611a      	str	r2, [r3, #16]
 801736a:	68fb      	ldr	r3, [r7, #12]
 801736c:	681b      	ldr	r3, [r3, #0]
 801736e:	1e5a      	subs	r2, r3, #1
 8017370:	68fb      	ldr	r3, [r7, #12]
 8017372:	601a      	str	r2, [r3, #0]
 8017374:	68fb      	ldr	r3, [r7, #12]
 8017376:	681b      	ldr	r3, [r3, #0]
 8017378:	4618      	mov	r0, r3
 801737a:	3714      	adds	r7, #20
 801737c:	46bd      	mov	sp, r7
 801737e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017382:	4770      	bx	lr

08017384 <xQueueGenericReset>:
 8017384:	b580      	push	{r7, lr}
 8017386:	b084      	sub	sp, #16
 8017388:	af00      	add	r7, sp, #0
 801738a:	6078      	str	r0, [r7, #4]
 801738c:	6039      	str	r1, [r7, #0]
 801738e:	687b      	ldr	r3, [r7, #4]
 8017390:	60fb      	str	r3, [r7, #12]
 8017392:	68fb      	ldr	r3, [r7, #12]
 8017394:	2b00      	cmp	r3, #0
 8017396:	d10b      	bne.n	80173b0 <xQueueGenericReset+0x2c>
 8017398:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801739c:	f383 8811 	msr	BASEPRI, r3
 80173a0:	f3bf 8f6f 	isb	sy
 80173a4:	f3bf 8f4f 	dsb	sy
 80173a8:	60bb      	str	r3, [r7, #8]
 80173aa:	bf00      	nop
 80173ac:	bf00      	nop
 80173ae:	e7fd      	b.n	80173ac <xQueueGenericReset+0x28>
 80173b0:	f002 fbda 	bl	8019b68 <vPortEnterCritical>
 80173b4:	68fb      	ldr	r3, [r7, #12]
 80173b6:	681a      	ldr	r2, [r3, #0]
 80173b8:	68fb      	ldr	r3, [r7, #12]
 80173ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80173bc:	68f9      	ldr	r1, [r7, #12]
 80173be:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80173c0:	fb01 f303 	mul.w	r3, r1, r3
 80173c4:	441a      	add	r2, r3
 80173c6:	68fb      	ldr	r3, [r7, #12]
 80173c8:	609a      	str	r2, [r3, #8]
 80173ca:	68fb      	ldr	r3, [r7, #12]
 80173cc:	2200      	movs	r2, #0
 80173ce:	639a      	str	r2, [r3, #56]	@ 0x38
 80173d0:	68fb      	ldr	r3, [r7, #12]
 80173d2:	681a      	ldr	r2, [r3, #0]
 80173d4:	68fb      	ldr	r3, [r7, #12]
 80173d6:	605a      	str	r2, [r3, #4]
 80173d8:	68fb      	ldr	r3, [r7, #12]
 80173da:	681a      	ldr	r2, [r3, #0]
 80173dc:	68fb      	ldr	r3, [r7, #12]
 80173de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80173e0:	3b01      	subs	r3, #1
 80173e2:	68f9      	ldr	r1, [r7, #12]
 80173e4:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80173e6:	fb01 f303 	mul.w	r3, r1, r3
 80173ea:	441a      	add	r2, r3
 80173ec:	68fb      	ldr	r3, [r7, #12]
 80173ee:	60da      	str	r2, [r3, #12]
 80173f0:	68fb      	ldr	r3, [r7, #12]
 80173f2:	22ff      	movs	r2, #255	@ 0xff
 80173f4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80173f8:	68fb      	ldr	r3, [r7, #12]
 80173fa:	22ff      	movs	r2, #255	@ 0xff
 80173fc:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017400:	683b      	ldr	r3, [r7, #0]
 8017402:	2b00      	cmp	r3, #0
 8017404:	d114      	bne.n	8017430 <xQueueGenericReset+0xac>
 8017406:	68fb      	ldr	r3, [r7, #12]
 8017408:	691b      	ldr	r3, [r3, #16]
 801740a:	2b00      	cmp	r3, #0
 801740c:	d01a      	beq.n	8017444 <xQueueGenericReset+0xc0>
 801740e:	68fb      	ldr	r3, [r7, #12]
 8017410:	3310      	adds	r3, #16
 8017412:	4618      	mov	r0, r3
 8017414:	f001 fae6 	bl	80189e4 <xTaskRemoveFromEventList>
 8017418:	4603      	mov	r3, r0
 801741a:	2b00      	cmp	r3, #0
 801741c:	d012      	beq.n	8017444 <xQueueGenericReset+0xc0>
 801741e:	4b0d      	ldr	r3, [pc, #52]	@ (8017454 <xQueueGenericReset+0xd0>)
 8017420:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017424:	601a      	str	r2, [r3, #0]
 8017426:	f3bf 8f4f 	dsb	sy
 801742a:	f3bf 8f6f 	isb	sy
 801742e:	e009      	b.n	8017444 <xQueueGenericReset+0xc0>
 8017430:	68fb      	ldr	r3, [r7, #12]
 8017432:	3310      	adds	r3, #16
 8017434:	4618      	mov	r0, r3
 8017436:	f7ff fef1 	bl	801721c <vListInitialise>
 801743a:	68fb      	ldr	r3, [r7, #12]
 801743c:	3324      	adds	r3, #36	@ 0x24
 801743e:	4618      	mov	r0, r3
 8017440:	f7ff feec 	bl	801721c <vListInitialise>
 8017444:	f002 fbc2 	bl	8019bcc <vPortExitCritical>
 8017448:	2301      	movs	r3, #1
 801744a:	4618      	mov	r0, r3
 801744c:	3710      	adds	r7, #16
 801744e:	46bd      	mov	sp, r7
 8017450:	bd80      	pop	{r7, pc}
 8017452:	bf00      	nop
 8017454:	e000ed04 	.word	0xe000ed04

08017458 <xQueueGenericCreateStatic>:
 8017458:	b580      	push	{r7, lr}
 801745a:	b08e      	sub	sp, #56	@ 0x38
 801745c:	af02      	add	r7, sp, #8
 801745e:	60f8      	str	r0, [r7, #12]
 8017460:	60b9      	str	r1, [r7, #8]
 8017462:	607a      	str	r2, [r7, #4]
 8017464:	603b      	str	r3, [r7, #0]
 8017466:	68fb      	ldr	r3, [r7, #12]
 8017468:	2b00      	cmp	r3, #0
 801746a:	d10b      	bne.n	8017484 <xQueueGenericCreateStatic+0x2c>
 801746c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017470:	f383 8811 	msr	BASEPRI, r3
 8017474:	f3bf 8f6f 	isb	sy
 8017478:	f3bf 8f4f 	dsb	sy
 801747c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801747e:	bf00      	nop
 8017480:	bf00      	nop
 8017482:	e7fd      	b.n	8017480 <xQueueGenericCreateStatic+0x28>
 8017484:	683b      	ldr	r3, [r7, #0]
 8017486:	2b00      	cmp	r3, #0
 8017488:	d10b      	bne.n	80174a2 <xQueueGenericCreateStatic+0x4a>
 801748a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801748e:	f383 8811 	msr	BASEPRI, r3
 8017492:	f3bf 8f6f 	isb	sy
 8017496:	f3bf 8f4f 	dsb	sy
 801749a:	627b      	str	r3, [r7, #36]	@ 0x24
 801749c:	bf00      	nop
 801749e:	bf00      	nop
 80174a0:	e7fd      	b.n	801749e <xQueueGenericCreateStatic+0x46>
 80174a2:	687b      	ldr	r3, [r7, #4]
 80174a4:	2b00      	cmp	r3, #0
 80174a6:	d002      	beq.n	80174ae <xQueueGenericCreateStatic+0x56>
 80174a8:	68bb      	ldr	r3, [r7, #8]
 80174aa:	2b00      	cmp	r3, #0
 80174ac:	d001      	beq.n	80174b2 <xQueueGenericCreateStatic+0x5a>
 80174ae:	2301      	movs	r3, #1
 80174b0:	e000      	b.n	80174b4 <xQueueGenericCreateStatic+0x5c>
 80174b2:	2300      	movs	r3, #0
 80174b4:	2b00      	cmp	r3, #0
 80174b6:	d10b      	bne.n	80174d0 <xQueueGenericCreateStatic+0x78>
 80174b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80174bc:	f383 8811 	msr	BASEPRI, r3
 80174c0:	f3bf 8f6f 	isb	sy
 80174c4:	f3bf 8f4f 	dsb	sy
 80174c8:	623b      	str	r3, [r7, #32]
 80174ca:	bf00      	nop
 80174cc:	bf00      	nop
 80174ce:	e7fd      	b.n	80174cc <xQueueGenericCreateStatic+0x74>
 80174d0:	687b      	ldr	r3, [r7, #4]
 80174d2:	2b00      	cmp	r3, #0
 80174d4:	d102      	bne.n	80174dc <xQueueGenericCreateStatic+0x84>
 80174d6:	68bb      	ldr	r3, [r7, #8]
 80174d8:	2b00      	cmp	r3, #0
 80174da:	d101      	bne.n	80174e0 <xQueueGenericCreateStatic+0x88>
 80174dc:	2301      	movs	r3, #1
 80174de:	e000      	b.n	80174e2 <xQueueGenericCreateStatic+0x8a>
 80174e0:	2300      	movs	r3, #0
 80174e2:	2b00      	cmp	r3, #0
 80174e4:	d10b      	bne.n	80174fe <xQueueGenericCreateStatic+0xa6>
 80174e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80174ea:	f383 8811 	msr	BASEPRI, r3
 80174ee:	f3bf 8f6f 	isb	sy
 80174f2:	f3bf 8f4f 	dsb	sy
 80174f6:	61fb      	str	r3, [r7, #28]
 80174f8:	bf00      	nop
 80174fa:	bf00      	nop
 80174fc:	e7fd      	b.n	80174fa <xQueueGenericCreateStatic+0xa2>
 80174fe:	2350      	movs	r3, #80	@ 0x50
 8017500:	617b      	str	r3, [r7, #20]
 8017502:	697b      	ldr	r3, [r7, #20]
 8017504:	2b50      	cmp	r3, #80	@ 0x50
 8017506:	d00b      	beq.n	8017520 <xQueueGenericCreateStatic+0xc8>
 8017508:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801750c:	f383 8811 	msr	BASEPRI, r3
 8017510:	f3bf 8f6f 	isb	sy
 8017514:	f3bf 8f4f 	dsb	sy
 8017518:	61bb      	str	r3, [r7, #24]
 801751a:	bf00      	nop
 801751c:	bf00      	nop
 801751e:	e7fd      	b.n	801751c <xQueueGenericCreateStatic+0xc4>
 8017520:	697b      	ldr	r3, [r7, #20]
 8017522:	683b      	ldr	r3, [r7, #0]
 8017524:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017526:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017528:	2b00      	cmp	r3, #0
 801752a:	d00d      	beq.n	8017548 <xQueueGenericCreateStatic+0xf0>
 801752c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801752e:	2201      	movs	r2, #1
 8017530:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8017534:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 8017538:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801753a:	9300      	str	r3, [sp, #0]
 801753c:	4613      	mov	r3, r2
 801753e:	687a      	ldr	r2, [r7, #4]
 8017540:	68b9      	ldr	r1, [r7, #8]
 8017542:	68f8      	ldr	r0, [r7, #12]
 8017544:	f000 f840 	bl	80175c8 <prvInitialiseNewQueue>
 8017548:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801754a:	4618      	mov	r0, r3
 801754c:	3730      	adds	r7, #48	@ 0x30
 801754e:	46bd      	mov	sp, r7
 8017550:	bd80      	pop	{r7, pc}

08017552 <xQueueGenericCreate>:
 8017552:	b580      	push	{r7, lr}
 8017554:	b08a      	sub	sp, #40	@ 0x28
 8017556:	af02      	add	r7, sp, #8
 8017558:	60f8      	str	r0, [r7, #12]
 801755a:	60b9      	str	r1, [r7, #8]
 801755c:	4613      	mov	r3, r2
 801755e:	71fb      	strb	r3, [r7, #7]
 8017560:	68fb      	ldr	r3, [r7, #12]
 8017562:	2b00      	cmp	r3, #0
 8017564:	d10b      	bne.n	801757e <xQueueGenericCreate+0x2c>
 8017566:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801756a:	f383 8811 	msr	BASEPRI, r3
 801756e:	f3bf 8f6f 	isb	sy
 8017572:	f3bf 8f4f 	dsb	sy
 8017576:	613b      	str	r3, [r7, #16]
 8017578:	bf00      	nop
 801757a:	bf00      	nop
 801757c:	e7fd      	b.n	801757a <xQueueGenericCreate+0x28>
 801757e:	68fb      	ldr	r3, [r7, #12]
 8017580:	68ba      	ldr	r2, [r7, #8]
 8017582:	fb02 f303 	mul.w	r3, r2, r3
 8017586:	61fb      	str	r3, [r7, #28]
 8017588:	69fb      	ldr	r3, [r7, #28]
 801758a:	3350      	adds	r3, #80	@ 0x50
 801758c:	4618      	mov	r0, r3
 801758e:	f002 fc0d 	bl	8019dac <pvPortMalloc>
 8017592:	61b8      	str	r0, [r7, #24]
 8017594:	69bb      	ldr	r3, [r7, #24]
 8017596:	2b00      	cmp	r3, #0
 8017598:	d011      	beq.n	80175be <xQueueGenericCreate+0x6c>
 801759a:	69bb      	ldr	r3, [r7, #24]
 801759c:	617b      	str	r3, [r7, #20]
 801759e:	697b      	ldr	r3, [r7, #20]
 80175a0:	3350      	adds	r3, #80	@ 0x50
 80175a2:	617b      	str	r3, [r7, #20]
 80175a4:	69bb      	ldr	r3, [r7, #24]
 80175a6:	2200      	movs	r2, #0
 80175a8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80175ac:	79fa      	ldrb	r2, [r7, #7]
 80175ae:	69bb      	ldr	r3, [r7, #24]
 80175b0:	9300      	str	r3, [sp, #0]
 80175b2:	4613      	mov	r3, r2
 80175b4:	697a      	ldr	r2, [r7, #20]
 80175b6:	68b9      	ldr	r1, [r7, #8]
 80175b8:	68f8      	ldr	r0, [r7, #12]
 80175ba:	f000 f805 	bl	80175c8 <prvInitialiseNewQueue>
 80175be:	69bb      	ldr	r3, [r7, #24]
 80175c0:	4618      	mov	r0, r3
 80175c2:	3720      	adds	r7, #32
 80175c4:	46bd      	mov	sp, r7
 80175c6:	bd80      	pop	{r7, pc}

080175c8 <prvInitialiseNewQueue>:
 80175c8:	b580      	push	{r7, lr}
 80175ca:	b084      	sub	sp, #16
 80175cc:	af00      	add	r7, sp, #0
 80175ce:	60f8      	str	r0, [r7, #12]
 80175d0:	60b9      	str	r1, [r7, #8]
 80175d2:	607a      	str	r2, [r7, #4]
 80175d4:	70fb      	strb	r3, [r7, #3]
 80175d6:	68bb      	ldr	r3, [r7, #8]
 80175d8:	2b00      	cmp	r3, #0
 80175da:	d103      	bne.n	80175e4 <prvInitialiseNewQueue+0x1c>
 80175dc:	69bb      	ldr	r3, [r7, #24]
 80175de:	69ba      	ldr	r2, [r7, #24]
 80175e0:	601a      	str	r2, [r3, #0]
 80175e2:	e002      	b.n	80175ea <prvInitialiseNewQueue+0x22>
 80175e4:	69bb      	ldr	r3, [r7, #24]
 80175e6:	687a      	ldr	r2, [r7, #4]
 80175e8:	601a      	str	r2, [r3, #0]
 80175ea:	69bb      	ldr	r3, [r7, #24]
 80175ec:	68fa      	ldr	r2, [r7, #12]
 80175ee:	63da      	str	r2, [r3, #60]	@ 0x3c
 80175f0:	69bb      	ldr	r3, [r7, #24]
 80175f2:	68ba      	ldr	r2, [r7, #8]
 80175f4:	641a      	str	r2, [r3, #64]	@ 0x40
 80175f6:	2101      	movs	r1, #1
 80175f8:	69b8      	ldr	r0, [r7, #24]
 80175fa:	f7ff fec3 	bl	8017384 <xQueueGenericReset>
 80175fe:	69bb      	ldr	r3, [r7, #24]
 8017600:	78fa      	ldrb	r2, [r7, #3]
 8017602:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 8017606:	bf00      	nop
 8017608:	3710      	adds	r7, #16
 801760a:	46bd      	mov	sp, r7
 801760c:	bd80      	pop	{r7, pc}
	...

08017610 <xQueueGenericSend>:
 8017610:	b580      	push	{r7, lr}
 8017612:	b08e      	sub	sp, #56	@ 0x38
 8017614:	af00      	add	r7, sp, #0
 8017616:	60f8      	str	r0, [r7, #12]
 8017618:	60b9      	str	r1, [r7, #8]
 801761a:	607a      	str	r2, [r7, #4]
 801761c:	603b      	str	r3, [r7, #0]
 801761e:	2300      	movs	r3, #0
 8017620:	637b      	str	r3, [r7, #52]	@ 0x34
 8017622:	68fb      	ldr	r3, [r7, #12]
 8017624:	633b      	str	r3, [r7, #48]	@ 0x30
 8017626:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017628:	2b00      	cmp	r3, #0
 801762a:	d10b      	bne.n	8017644 <xQueueGenericSend+0x34>
 801762c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017630:	f383 8811 	msr	BASEPRI, r3
 8017634:	f3bf 8f6f 	isb	sy
 8017638:	f3bf 8f4f 	dsb	sy
 801763c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801763e:	bf00      	nop
 8017640:	bf00      	nop
 8017642:	e7fd      	b.n	8017640 <xQueueGenericSend+0x30>
 8017644:	68bb      	ldr	r3, [r7, #8]
 8017646:	2b00      	cmp	r3, #0
 8017648:	d103      	bne.n	8017652 <xQueueGenericSend+0x42>
 801764a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801764c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801764e:	2b00      	cmp	r3, #0
 8017650:	d101      	bne.n	8017656 <xQueueGenericSend+0x46>
 8017652:	2301      	movs	r3, #1
 8017654:	e000      	b.n	8017658 <xQueueGenericSend+0x48>
 8017656:	2300      	movs	r3, #0
 8017658:	2b00      	cmp	r3, #0
 801765a:	d10b      	bne.n	8017674 <xQueueGenericSend+0x64>
 801765c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017660:	f383 8811 	msr	BASEPRI, r3
 8017664:	f3bf 8f6f 	isb	sy
 8017668:	f3bf 8f4f 	dsb	sy
 801766c:	627b      	str	r3, [r7, #36]	@ 0x24
 801766e:	bf00      	nop
 8017670:	bf00      	nop
 8017672:	e7fd      	b.n	8017670 <xQueueGenericSend+0x60>
 8017674:	683b      	ldr	r3, [r7, #0]
 8017676:	2b02      	cmp	r3, #2
 8017678:	d103      	bne.n	8017682 <xQueueGenericSend+0x72>
 801767a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801767c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801767e:	2b01      	cmp	r3, #1
 8017680:	d101      	bne.n	8017686 <xQueueGenericSend+0x76>
 8017682:	2301      	movs	r3, #1
 8017684:	e000      	b.n	8017688 <xQueueGenericSend+0x78>
 8017686:	2300      	movs	r3, #0
 8017688:	2b00      	cmp	r3, #0
 801768a:	d10b      	bne.n	80176a4 <xQueueGenericSend+0x94>
 801768c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017690:	f383 8811 	msr	BASEPRI, r3
 8017694:	f3bf 8f6f 	isb	sy
 8017698:	f3bf 8f4f 	dsb	sy
 801769c:	623b      	str	r3, [r7, #32]
 801769e:	bf00      	nop
 80176a0:	bf00      	nop
 80176a2:	e7fd      	b.n	80176a0 <xQueueGenericSend+0x90>
 80176a4:	f001 fbc8 	bl	8018e38 <xTaskGetSchedulerState>
 80176a8:	4603      	mov	r3, r0
 80176aa:	2b00      	cmp	r3, #0
 80176ac:	d102      	bne.n	80176b4 <xQueueGenericSend+0xa4>
 80176ae:	687b      	ldr	r3, [r7, #4]
 80176b0:	2b00      	cmp	r3, #0
 80176b2:	d101      	bne.n	80176b8 <xQueueGenericSend+0xa8>
 80176b4:	2301      	movs	r3, #1
 80176b6:	e000      	b.n	80176ba <xQueueGenericSend+0xaa>
 80176b8:	2300      	movs	r3, #0
 80176ba:	2b00      	cmp	r3, #0
 80176bc:	d10b      	bne.n	80176d6 <xQueueGenericSend+0xc6>
 80176be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80176c2:	f383 8811 	msr	BASEPRI, r3
 80176c6:	f3bf 8f6f 	isb	sy
 80176ca:	f3bf 8f4f 	dsb	sy
 80176ce:	61fb      	str	r3, [r7, #28]
 80176d0:	bf00      	nop
 80176d2:	bf00      	nop
 80176d4:	e7fd      	b.n	80176d2 <xQueueGenericSend+0xc2>
 80176d6:	f002 fa47 	bl	8019b68 <vPortEnterCritical>
 80176da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80176dc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80176de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80176e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80176e2:	429a      	cmp	r2, r3
 80176e4:	d302      	bcc.n	80176ec <xQueueGenericSend+0xdc>
 80176e6:	683b      	ldr	r3, [r7, #0]
 80176e8:	2b02      	cmp	r3, #2
 80176ea:	d129      	bne.n	8017740 <xQueueGenericSend+0x130>
 80176ec:	683a      	ldr	r2, [r7, #0]
 80176ee:	68b9      	ldr	r1, [r7, #8]
 80176f0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80176f2:	f000 fa9f 	bl	8017c34 <prvCopyDataToQueue>
 80176f6:	62f8      	str	r0, [r7, #44]	@ 0x2c
 80176f8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80176fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80176fc:	2b00      	cmp	r3, #0
 80176fe:	d010      	beq.n	8017722 <xQueueGenericSend+0x112>
 8017700:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017702:	3324      	adds	r3, #36	@ 0x24
 8017704:	4618      	mov	r0, r3
 8017706:	f001 f96d 	bl	80189e4 <xTaskRemoveFromEventList>
 801770a:	4603      	mov	r3, r0
 801770c:	2b00      	cmp	r3, #0
 801770e:	d013      	beq.n	8017738 <xQueueGenericSend+0x128>
 8017710:	4b3f      	ldr	r3, [pc, #252]	@ (8017810 <xQueueGenericSend+0x200>)
 8017712:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017716:	601a      	str	r2, [r3, #0]
 8017718:	f3bf 8f4f 	dsb	sy
 801771c:	f3bf 8f6f 	isb	sy
 8017720:	e00a      	b.n	8017738 <xQueueGenericSend+0x128>
 8017722:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017724:	2b00      	cmp	r3, #0
 8017726:	d007      	beq.n	8017738 <xQueueGenericSend+0x128>
 8017728:	4b39      	ldr	r3, [pc, #228]	@ (8017810 <xQueueGenericSend+0x200>)
 801772a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801772e:	601a      	str	r2, [r3, #0]
 8017730:	f3bf 8f4f 	dsb	sy
 8017734:	f3bf 8f6f 	isb	sy
 8017738:	f002 fa48 	bl	8019bcc <vPortExitCritical>
 801773c:	2301      	movs	r3, #1
 801773e:	e063      	b.n	8017808 <xQueueGenericSend+0x1f8>
 8017740:	687b      	ldr	r3, [r7, #4]
 8017742:	2b00      	cmp	r3, #0
 8017744:	d103      	bne.n	801774e <xQueueGenericSend+0x13e>
 8017746:	f002 fa41 	bl	8019bcc <vPortExitCritical>
 801774a:	2300      	movs	r3, #0
 801774c:	e05c      	b.n	8017808 <xQueueGenericSend+0x1f8>
 801774e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017750:	2b00      	cmp	r3, #0
 8017752:	d106      	bne.n	8017762 <xQueueGenericSend+0x152>
 8017754:	f107 0314 	add.w	r3, r7, #20
 8017758:	4618      	mov	r0, r3
 801775a:	f001 fa0b 	bl	8018b74 <vTaskInternalSetTimeOutState>
 801775e:	2301      	movs	r3, #1
 8017760:	637b      	str	r3, [r7, #52]	@ 0x34
 8017762:	f002 fa33 	bl	8019bcc <vPortExitCritical>
 8017766:	f000 fee5 	bl	8018534 <vTaskSuspendAll>
 801776a:	f002 f9fd 	bl	8019b68 <vPortEnterCritical>
 801776e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017770:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017774:	b25b      	sxtb	r3, r3
 8017776:	f1b3 3fff 	cmp.w	r3, #4294967295
 801777a:	d103      	bne.n	8017784 <xQueueGenericSend+0x174>
 801777c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801777e:	2200      	movs	r2, #0
 8017780:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017784:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017786:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801778a:	b25b      	sxtb	r3, r3
 801778c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017790:	d103      	bne.n	801779a <xQueueGenericSend+0x18a>
 8017792:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017794:	2200      	movs	r2, #0
 8017796:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801779a:	f002 fa17 	bl	8019bcc <vPortExitCritical>
 801779e:	1d3a      	adds	r2, r7, #4
 80177a0:	f107 0314 	add.w	r3, r7, #20
 80177a4:	4611      	mov	r1, r2
 80177a6:	4618      	mov	r0, r3
 80177a8:	f001 f9fa 	bl	8018ba0 <xTaskCheckForTimeOut>
 80177ac:	4603      	mov	r3, r0
 80177ae:	2b00      	cmp	r3, #0
 80177b0:	d124      	bne.n	80177fc <xQueueGenericSend+0x1ec>
 80177b2:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80177b4:	f000 fb36 	bl	8017e24 <prvIsQueueFull>
 80177b8:	4603      	mov	r3, r0
 80177ba:	2b00      	cmp	r3, #0
 80177bc:	d018      	beq.n	80177f0 <xQueueGenericSend+0x1e0>
 80177be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80177c0:	3310      	adds	r3, #16
 80177c2:	687a      	ldr	r2, [r7, #4]
 80177c4:	4611      	mov	r1, r2
 80177c6:	4618      	mov	r0, r3
 80177c8:	f001 f8ba 	bl	8018940 <vTaskPlaceOnEventList>
 80177cc:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80177ce:	f000 fac1 	bl	8017d54 <prvUnlockQueue>
 80177d2:	f000 febd 	bl	8018550 <xTaskResumeAll>
 80177d6:	4603      	mov	r3, r0
 80177d8:	2b00      	cmp	r3, #0
 80177da:	f47f af7c 	bne.w	80176d6 <xQueueGenericSend+0xc6>
 80177de:	4b0c      	ldr	r3, [pc, #48]	@ (8017810 <xQueueGenericSend+0x200>)
 80177e0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80177e4:	601a      	str	r2, [r3, #0]
 80177e6:	f3bf 8f4f 	dsb	sy
 80177ea:	f3bf 8f6f 	isb	sy
 80177ee:	e772      	b.n	80176d6 <xQueueGenericSend+0xc6>
 80177f0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80177f2:	f000 faaf 	bl	8017d54 <prvUnlockQueue>
 80177f6:	f000 feab 	bl	8018550 <xTaskResumeAll>
 80177fa:	e76c      	b.n	80176d6 <xQueueGenericSend+0xc6>
 80177fc:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 80177fe:	f000 faa9 	bl	8017d54 <prvUnlockQueue>
 8017802:	f000 fea5 	bl	8018550 <xTaskResumeAll>
 8017806:	2300      	movs	r3, #0
 8017808:	4618      	mov	r0, r3
 801780a:	3738      	adds	r7, #56	@ 0x38
 801780c:	46bd      	mov	sp, r7
 801780e:	bd80      	pop	{r7, pc}
 8017810:	e000ed04 	.word	0xe000ed04

08017814 <xQueueGenericSendFromISR>:
 8017814:	b580      	push	{r7, lr}
 8017816:	b090      	sub	sp, #64	@ 0x40
 8017818:	af00      	add	r7, sp, #0
 801781a:	60f8      	str	r0, [r7, #12]
 801781c:	60b9      	str	r1, [r7, #8]
 801781e:	607a      	str	r2, [r7, #4]
 8017820:	603b      	str	r3, [r7, #0]
 8017822:	68fb      	ldr	r3, [r7, #12]
 8017824:	63bb      	str	r3, [r7, #56]	@ 0x38
 8017826:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017828:	2b00      	cmp	r3, #0
 801782a:	d10b      	bne.n	8017844 <xQueueGenericSendFromISR+0x30>
 801782c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017830:	f383 8811 	msr	BASEPRI, r3
 8017834:	f3bf 8f6f 	isb	sy
 8017838:	f3bf 8f4f 	dsb	sy
 801783c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801783e:	bf00      	nop
 8017840:	bf00      	nop
 8017842:	e7fd      	b.n	8017840 <xQueueGenericSendFromISR+0x2c>
 8017844:	68bb      	ldr	r3, [r7, #8]
 8017846:	2b00      	cmp	r3, #0
 8017848:	d103      	bne.n	8017852 <xQueueGenericSendFromISR+0x3e>
 801784a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801784c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801784e:	2b00      	cmp	r3, #0
 8017850:	d101      	bne.n	8017856 <xQueueGenericSendFromISR+0x42>
 8017852:	2301      	movs	r3, #1
 8017854:	e000      	b.n	8017858 <xQueueGenericSendFromISR+0x44>
 8017856:	2300      	movs	r3, #0
 8017858:	2b00      	cmp	r3, #0
 801785a:	d10b      	bne.n	8017874 <xQueueGenericSendFromISR+0x60>
 801785c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017860:	f383 8811 	msr	BASEPRI, r3
 8017864:	f3bf 8f6f 	isb	sy
 8017868:	f3bf 8f4f 	dsb	sy
 801786c:	627b      	str	r3, [r7, #36]	@ 0x24
 801786e:	bf00      	nop
 8017870:	bf00      	nop
 8017872:	e7fd      	b.n	8017870 <xQueueGenericSendFromISR+0x5c>
 8017874:	683b      	ldr	r3, [r7, #0]
 8017876:	2b02      	cmp	r3, #2
 8017878:	d103      	bne.n	8017882 <xQueueGenericSendFromISR+0x6e>
 801787a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801787c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801787e:	2b01      	cmp	r3, #1
 8017880:	d101      	bne.n	8017886 <xQueueGenericSendFromISR+0x72>
 8017882:	2301      	movs	r3, #1
 8017884:	e000      	b.n	8017888 <xQueueGenericSendFromISR+0x74>
 8017886:	2300      	movs	r3, #0
 8017888:	2b00      	cmp	r3, #0
 801788a:	d10b      	bne.n	80178a4 <xQueueGenericSendFromISR+0x90>
 801788c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017890:	f383 8811 	msr	BASEPRI, r3
 8017894:	f3bf 8f6f 	isb	sy
 8017898:	f3bf 8f4f 	dsb	sy
 801789c:	623b      	str	r3, [r7, #32]
 801789e:	bf00      	nop
 80178a0:	bf00      	nop
 80178a2:	e7fd      	b.n	80178a0 <xQueueGenericSendFromISR+0x8c>
 80178a4:	f002 fa40 	bl	8019d28 <vPortValidateInterruptPriority>
 80178a8:	f3ef 8211 	mrs	r2, BASEPRI
 80178ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80178b0:	f383 8811 	msr	BASEPRI, r3
 80178b4:	f3bf 8f6f 	isb	sy
 80178b8:	f3bf 8f4f 	dsb	sy
 80178bc:	61fa      	str	r2, [r7, #28]
 80178be:	61bb      	str	r3, [r7, #24]
 80178c0:	69fb      	ldr	r3, [r7, #28]
 80178c2:	637b      	str	r3, [r7, #52]	@ 0x34
 80178c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178c6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80178c8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80178cc:	429a      	cmp	r2, r3
 80178ce:	d302      	bcc.n	80178d6 <xQueueGenericSendFromISR+0xc2>
 80178d0:	683b      	ldr	r3, [r7, #0]
 80178d2:	2b02      	cmp	r3, #2
 80178d4:	d12f      	bne.n	8017936 <xQueueGenericSendFromISR+0x122>
 80178d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178d8:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80178dc:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 80178e0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80178e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80178e6:	683a      	ldr	r2, [r7, #0]
 80178e8:	68b9      	ldr	r1, [r7, #8]
 80178ea:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 80178ec:	f000 f9a2 	bl	8017c34 <prvCopyDataToQueue>
 80178f0:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 80178f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80178f8:	d112      	bne.n	8017920 <xQueueGenericSendFromISR+0x10c>
 80178fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80178fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80178fe:	2b00      	cmp	r3, #0
 8017900:	d016      	beq.n	8017930 <xQueueGenericSendFromISR+0x11c>
 8017902:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017904:	3324      	adds	r3, #36	@ 0x24
 8017906:	4618      	mov	r0, r3
 8017908:	f001 f86c 	bl	80189e4 <xTaskRemoveFromEventList>
 801790c:	4603      	mov	r3, r0
 801790e:	2b00      	cmp	r3, #0
 8017910:	d00e      	beq.n	8017930 <xQueueGenericSendFromISR+0x11c>
 8017912:	687b      	ldr	r3, [r7, #4]
 8017914:	2b00      	cmp	r3, #0
 8017916:	d00b      	beq.n	8017930 <xQueueGenericSendFromISR+0x11c>
 8017918:	687b      	ldr	r3, [r7, #4]
 801791a:	2201      	movs	r2, #1
 801791c:	601a      	str	r2, [r3, #0]
 801791e:	e007      	b.n	8017930 <xQueueGenericSendFromISR+0x11c>
 8017920:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8017924:	3301      	adds	r3, #1
 8017926:	b2db      	uxtb	r3, r3
 8017928:	b25a      	sxtb	r2, r3
 801792a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801792c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017930:	2301      	movs	r3, #1
 8017932:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8017934:	e001      	b.n	801793a <xQueueGenericSendFromISR+0x126>
 8017936:	2300      	movs	r3, #0
 8017938:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801793a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801793c:	617b      	str	r3, [r7, #20]
 801793e:	697b      	ldr	r3, [r7, #20]
 8017940:	f383 8811 	msr	BASEPRI, r3
 8017944:	bf00      	nop
 8017946:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8017948:	4618      	mov	r0, r3
 801794a:	3740      	adds	r7, #64	@ 0x40
 801794c:	46bd      	mov	sp, r7
 801794e:	bd80      	pop	{r7, pc}

08017950 <xQueueGiveFromISR>:
 8017950:	b580      	push	{r7, lr}
 8017952:	b08e      	sub	sp, #56	@ 0x38
 8017954:	af00      	add	r7, sp, #0
 8017956:	6078      	str	r0, [r7, #4]
 8017958:	6039      	str	r1, [r7, #0]
 801795a:	687b      	ldr	r3, [r7, #4]
 801795c:	633b      	str	r3, [r7, #48]	@ 0x30
 801795e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017960:	2b00      	cmp	r3, #0
 8017962:	d10b      	bne.n	801797c <xQueueGiveFromISR+0x2c>
 8017964:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017968:	f383 8811 	msr	BASEPRI, r3
 801796c:	f3bf 8f6f 	isb	sy
 8017970:	f3bf 8f4f 	dsb	sy
 8017974:	623b      	str	r3, [r7, #32]
 8017976:	bf00      	nop
 8017978:	bf00      	nop
 801797a:	e7fd      	b.n	8017978 <xQueueGiveFromISR+0x28>
 801797c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801797e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017980:	2b00      	cmp	r3, #0
 8017982:	d00b      	beq.n	801799c <xQueueGiveFromISR+0x4c>
 8017984:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017988:	f383 8811 	msr	BASEPRI, r3
 801798c:	f3bf 8f6f 	isb	sy
 8017990:	f3bf 8f4f 	dsb	sy
 8017994:	61fb      	str	r3, [r7, #28]
 8017996:	bf00      	nop
 8017998:	bf00      	nop
 801799a:	e7fd      	b.n	8017998 <xQueueGiveFromISR+0x48>
 801799c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801799e:	681b      	ldr	r3, [r3, #0]
 80179a0:	2b00      	cmp	r3, #0
 80179a2:	d103      	bne.n	80179ac <xQueueGiveFromISR+0x5c>
 80179a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179a6:	689b      	ldr	r3, [r3, #8]
 80179a8:	2b00      	cmp	r3, #0
 80179aa:	d101      	bne.n	80179b0 <xQueueGiveFromISR+0x60>
 80179ac:	2301      	movs	r3, #1
 80179ae:	e000      	b.n	80179b2 <xQueueGiveFromISR+0x62>
 80179b0:	2300      	movs	r3, #0
 80179b2:	2b00      	cmp	r3, #0
 80179b4:	d10b      	bne.n	80179ce <xQueueGiveFromISR+0x7e>
 80179b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80179ba:	f383 8811 	msr	BASEPRI, r3
 80179be:	f3bf 8f6f 	isb	sy
 80179c2:	f3bf 8f4f 	dsb	sy
 80179c6:	61bb      	str	r3, [r7, #24]
 80179c8:	bf00      	nop
 80179ca:	bf00      	nop
 80179cc:	e7fd      	b.n	80179ca <xQueueGiveFromISR+0x7a>
 80179ce:	f002 f9ab 	bl	8019d28 <vPortValidateInterruptPriority>
 80179d2:	f3ef 8211 	mrs	r2, BASEPRI
 80179d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80179da:	f383 8811 	msr	BASEPRI, r3
 80179de:	f3bf 8f6f 	isb	sy
 80179e2:	f3bf 8f4f 	dsb	sy
 80179e6:	617a      	str	r2, [r7, #20]
 80179e8:	613b      	str	r3, [r7, #16]
 80179ea:	697b      	ldr	r3, [r7, #20]
 80179ec:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80179ee:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80179f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80179f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80179f6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80179f8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80179fa:	429a      	cmp	r2, r3
 80179fc:	d22b      	bcs.n	8017a56 <xQueueGiveFromISR+0x106>
 80179fe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a00:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017a04:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8017a08:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017a0a:	1c5a      	adds	r2, r3, #1
 8017a0c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a0e:	639a      	str	r2, [r3, #56]	@ 0x38
 8017a10:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 8017a14:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017a18:	d112      	bne.n	8017a40 <xQueueGiveFromISR+0xf0>
 8017a1a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a1c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017a1e:	2b00      	cmp	r3, #0
 8017a20:	d016      	beq.n	8017a50 <xQueueGiveFromISR+0x100>
 8017a22:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a24:	3324      	adds	r3, #36	@ 0x24
 8017a26:	4618      	mov	r0, r3
 8017a28:	f000 ffdc 	bl	80189e4 <xTaskRemoveFromEventList>
 8017a2c:	4603      	mov	r3, r0
 8017a2e:	2b00      	cmp	r3, #0
 8017a30:	d00e      	beq.n	8017a50 <xQueueGiveFromISR+0x100>
 8017a32:	683b      	ldr	r3, [r7, #0]
 8017a34:	2b00      	cmp	r3, #0
 8017a36:	d00b      	beq.n	8017a50 <xQueueGiveFromISR+0x100>
 8017a38:	683b      	ldr	r3, [r7, #0]
 8017a3a:	2201      	movs	r2, #1
 8017a3c:	601a      	str	r2, [r3, #0]
 8017a3e:	e007      	b.n	8017a50 <xQueueGiveFromISR+0x100>
 8017a40:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8017a44:	3301      	adds	r3, #1
 8017a46:	b2db      	uxtb	r3, r3
 8017a48:	b25a      	sxtb	r2, r3
 8017a4a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017a4c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017a50:	2301      	movs	r3, #1
 8017a52:	637b      	str	r3, [r7, #52]	@ 0x34
 8017a54:	e001      	b.n	8017a5a <xQueueGiveFromISR+0x10a>
 8017a56:	2300      	movs	r3, #0
 8017a58:	637b      	str	r3, [r7, #52]	@ 0x34
 8017a5a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017a5c:	60fb      	str	r3, [r7, #12]
 8017a5e:	68fb      	ldr	r3, [r7, #12]
 8017a60:	f383 8811 	msr	BASEPRI, r3
 8017a64:	bf00      	nop
 8017a66:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017a68:	4618      	mov	r0, r3
 8017a6a:	3738      	adds	r7, #56	@ 0x38
 8017a6c:	46bd      	mov	sp, r7
 8017a6e:	bd80      	pop	{r7, pc}

08017a70 <xQueueReceive>:
 8017a70:	b580      	push	{r7, lr}
 8017a72:	b08c      	sub	sp, #48	@ 0x30
 8017a74:	af00      	add	r7, sp, #0
 8017a76:	60f8      	str	r0, [r7, #12]
 8017a78:	60b9      	str	r1, [r7, #8]
 8017a7a:	607a      	str	r2, [r7, #4]
 8017a7c:	2300      	movs	r3, #0
 8017a7e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017a80:	68fb      	ldr	r3, [r7, #12]
 8017a82:	62bb      	str	r3, [r7, #40]	@ 0x28
 8017a84:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017a86:	2b00      	cmp	r3, #0
 8017a88:	d10b      	bne.n	8017aa2 <xQueueReceive+0x32>
 8017a8a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017a8e:	f383 8811 	msr	BASEPRI, r3
 8017a92:	f3bf 8f6f 	isb	sy
 8017a96:	f3bf 8f4f 	dsb	sy
 8017a9a:	623b      	str	r3, [r7, #32]
 8017a9c:	bf00      	nop
 8017a9e:	bf00      	nop
 8017aa0:	e7fd      	b.n	8017a9e <xQueueReceive+0x2e>
 8017aa2:	68bb      	ldr	r3, [r7, #8]
 8017aa4:	2b00      	cmp	r3, #0
 8017aa6:	d103      	bne.n	8017ab0 <xQueueReceive+0x40>
 8017aa8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017aaa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017aac:	2b00      	cmp	r3, #0
 8017aae:	d101      	bne.n	8017ab4 <xQueueReceive+0x44>
 8017ab0:	2301      	movs	r3, #1
 8017ab2:	e000      	b.n	8017ab6 <xQueueReceive+0x46>
 8017ab4:	2300      	movs	r3, #0
 8017ab6:	2b00      	cmp	r3, #0
 8017ab8:	d10b      	bne.n	8017ad2 <xQueueReceive+0x62>
 8017aba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017abe:	f383 8811 	msr	BASEPRI, r3
 8017ac2:	f3bf 8f6f 	isb	sy
 8017ac6:	f3bf 8f4f 	dsb	sy
 8017aca:	61fb      	str	r3, [r7, #28]
 8017acc:	bf00      	nop
 8017ace:	bf00      	nop
 8017ad0:	e7fd      	b.n	8017ace <xQueueReceive+0x5e>
 8017ad2:	f001 f9b1 	bl	8018e38 <xTaskGetSchedulerState>
 8017ad6:	4603      	mov	r3, r0
 8017ad8:	2b00      	cmp	r3, #0
 8017ada:	d102      	bne.n	8017ae2 <xQueueReceive+0x72>
 8017adc:	687b      	ldr	r3, [r7, #4]
 8017ade:	2b00      	cmp	r3, #0
 8017ae0:	d101      	bne.n	8017ae6 <xQueueReceive+0x76>
 8017ae2:	2301      	movs	r3, #1
 8017ae4:	e000      	b.n	8017ae8 <xQueueReceive+0x78>
 8017ae6:	2300      	movs	r3, #0
 8017ae8:	2b00      	cmp	r3, #0
 8017aea:	d10b      	bne.n	8017b04 <xQueueReceive+0x94>
 8017aec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017af0:	f383 8811 	msr	BASEPRI, r3
 8017af4:	f3bf 8f6f 	isb	sy
 8017af8:	f3bf 8f4f 	dsb	sy
 8017afc:	61bb      	str	r3, [r7, #24]
 8017afe:	bf00      	nop
 8017b00:	bf00      	nop
 8017b02:	e7fd      	b.n	8017b00 <xQueueReceive+0x90>
 8017b04:	f002 f830 	bl	8019b68 <vPortEnterCritical>
 8017b08:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017b0c:	627b      	str	r3, [r7, #36]	@ 0x24
 8017b0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017b10:	2b00      	cmp	r3, #0
 8017b12:	d01f      	beq.n	8017b54 <xQueueReceive+0xe4>
 8017b14:	68b9      	ldr	r1, [r7, #8]
 8017b16:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017b18:	f000 f8f6 	bl	8017d08 <prvCopyDataFromQueue>
 8017b1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017b1e:	1e5a      	subs	r2, r3, #1
 8017b20:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b22:	639a      	str	r2, [r3, #56]	@ 0x38
 8017b24:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b26:	691b      	ldr	r3, [r3, #16]
 8017b28:	2b00      	cmp	r3, #0
 8017b2a:	d00f      	beq.n	8017b4c <xQueueReceive+0xdc>
 8017b2c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b2e:	3310      	adds	r3, #16
 8017b30:	4618      	mov	r0, r3
 8017b32:	f000 ff57 	bl	80189e4 <xTaskRemoveFromEventList>
 8017b36:	4603      	mov	r3, r0
 8017b38:	2b00      	cmp	r3, #0
 8017b3a:	d007      	beq.n	8017b4c <xQueueReceive+0xdc>
 8017b3c:	4b3c      	ldr	r3, [pc, #240]	@ (8017c30 <xQueueReceive+0x1c0>)
 8017b3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017b42:	601a      	str	r2, [r3, #0]
 8017b44:	f3bf 8f4f 	dsb	sy
 8017b48:	f3bf 8f6f 	isb	sy
 8017b4c:	f002 f83e 	bl	8019bcc <vPortExitCritical>
 8017b50:	2301      	movs	r3, #1
 8017b52:	e069      	b.n	8017c28 <xQueueReceive+0x1b8>
 8017b54:	687b      	ldr	r3, [r7, #4]
 8017b56:	2b00      	cmp	r3, #0
 8017b58:	d103      	bne.n	8017b62 <xQueueReceive+0xf2>
 8017b5a:	f002 f837 	bl	8019bcc <vPortExitCritical>
 8017b5e:	2300      	movs	r3, #0
 8017b60:	e062      	b.n	8017c28 <xQueueReceive+0x1b8>
 8017b62:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8017b64:	2b00      	cmp	r3, #0
 8017b66:	d106      	bne.n	8017b76 <xQueueReceive+0x106>
 8017b68:	f107 0310 	add.w	r3, r7, #16
 8017b6c:	4618      	mov	r0, r3
 8017b6e:	f001 f801 	bl	8018b74 <vTaskInternalSetTimeOutState>
 8017b72:	2301      	movs	r3, #1
 8017b74:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8017b76:	f002 f829 	bl	8019bcc <vPortExitCritical>
 8017b7a:	f000 fcdb 	bl	8018534 <vTaskSuspendAll>
 8017b7e:	f001 fff3 	bl	8019b68 <vPortEnterCritical>
 8017b82:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b84:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017b88:	b25b      	sxtb	r3, r3
 8017b8a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017b8e:	d103      	bne.n	8017b98 <xQueueReceive+0x128>
 8017b90:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b92:	2200      	movs	r2, #0
 8017b94:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017b98:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017b9a:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017b9e:	b25b      	sxtb	r3, r3
 8017ba0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017ba4:	d103      	bne.n	8017bae <xQueueReceive+0x13e>
 8017ba6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017ba8:	2200      	movs	r2, #0
 8017baa:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017bae:	f002 f80d 	bl	8019bcc <vPortExitCritical>
 8017bb2:	1d3a      	adds	r2, r7, #4
 8017bb4:	f107 0310 	add.w	r3, r7, #16
 8017bb8:	4611      	mov	r1, r2
 8017bba:	4618      	mov	r0, r3
 8017bbc:	f000 fff0 	bl	8018ba0 <xTaskCheckForTimeOut>
 8017bc0:	4603      	mov	r3, r0
 8017bc2:	2b00      	cmp	r3, #0
 8017bc4:	d123      	bne.n	8017c0e <xQueueReceive+0x19e>
 8017bc6:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017bc8:	f000 f916 	bl	8017df8 <prvIsQueueEmpty>
 8017bcc:	4603      	mov	r3, r0
 8017bce:	2b00      	cmp	r3, #0
 8017bd0:	d017      	beq.n	8017c02 <xQueueReceive+0x192>
 8017bd2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8017bd4:	3324      	adds	r3, #36	@ 0x24
 8017bd6:	687a      	ldr	r2, [r7, #4]
 8017bd8:	4611      	mov	r1, r2
 8017bda:	4618      	mov	r0, r3
 8017bdc:	f000 feb0 	bl	8018940 <vTaskPlaceOnEventList>
 8017be0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017be2:	f000 f8b7 	bl	8017d54 <prvUnlockQueue>
 8017be6:	f000 fcb3 	bl	8018550 <xTaskResumeAll>
 8017bea:	4603      	mov	r3, r0
 8017bec:	2b00      	cmp	r3, #0
 8017bee:	d189      	bne.n	8017b04 <xQueueReceive+0x94>
 8017bf0:	4b0f      	ldr	r3, [pc, #60]	@ (8017c30 <xQueueReceive+0x1c0>)
 8017bf2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8017bf6:	601a      	str	r2, [r3, #0]
 8017bf8:	f3bf 8f4f 	dsb	sy
 8017bfc:	f3bf 8f6f 	isb	sy
 8017c00:	e780      	b.n	8017b04 <xQueueReceive+0x94>
 8017c02:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017c04:	f000 f8a6 	bl	8017d54 <prvUnlockQueue>
 8017c08:	f000 fca2 	bl	8018550 <xTaskResumeAll>
 8017c0c:	e77a      	b.n	8017b04 <xQueueReceive+0x94>
 8017c0e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017c10:	f000 f8a0 	bl	8017d54 <prvUnlockQueue>
 8017c14:	f000 fc9c 	bl	8018550 <xTaskResumeAll>
 8017c18:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8017c1a:	f000 f8ed 	bl	8017df8 <prvIsQueueEmpty>
 8017c1e:	4603      	mov	r3, r0
 8017c20:	2b00      	cmp	r3, #0
 8017c22:	f43f af6f 	beq.w	8017b04 <xQueueReceive+0x94>
 8017c26:	2300      	movs	r3, #0
 8017c28:	4618      	mov	r0, r3
 8017c2a:	3730      	adds	r7, #48	@ 0x30
 8017c2c:	46bd      	mov	sp, r7
 8017c2e:	bd80      	pop	{r7, pc}
 8017c30:	e000ed04 	.word	0xe000ed04

08017c34 <prvCopyDataToQueue>:
 8017c34:	b580      	push	{r7, lr}
 8017c36:	b086      	sub	sp, #24
 8017c38:	af00      	add	r7, sp, #0
 8017c3a:	60f8      	str	r0, [r7, #12]
 8017c3c:	60b9      	str	r1, [r7, #8]
 8017c3e:	607a      	str	r2, [r7, #4]
 8017c40:	2300      	movs	r3, #0
 8017c42:	617b      	str	r3, [r7, #20]
 8017c44:	68fb      	ldr	r3, [r7, #12]
 8017c46:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017c48:	613b      	str	r3, [r7, #16]
 8017c4a:	68fb      	ldr	r3, [r7, #12]
 8017c4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c4e:	2b00      	cmp	r3, #0
 8017c50:	d10d      	bne.n	8017c6e <prvCopyDataToQueue+0x3a>
 8017c52:	68fb      	ldr	r3, [r7, #12]
 8017c54:	681b      	ldr	r3, [r3, #0]
 8017c56:	2b00      	cmp	r3, #0
 8017c58:	d14d      	bne.n	8017cf6 <prvCopyDataToQueue+0xc2>
 8017c5a:	68fb      	ldr	r3, [r7, #12]
 8017c5c:	689b      	ldr	r3, [r3, #8]
 8017c5e:	4618      	mov	r0, r3
 8017c60:	f001 f908 	bl	8018e74 <xTaskPriorityDisinherit>
 8017c64:	6178      	str	r0, [r7, #20]
 8017c66:	68fb      	ldr	r3, [r7, #12]
 8017c68:	2200      	movs	r2, #0
 8017c6a:	609a      	str	r2, [r3, #8]
 8017c6c:	e043      	b.n	8017cf6 <prvCopyDataToQueue+0xc2>
 8017c6e:	687b      	ldr	r3, [r7, #4]
 8017c70:	2b00      	cmp	r3, #0
 8017c72:	d119      	bne.n	8017ca8 <prvCopyDataToQueue+0x74>
 8017c74:	68fb      	ldr	r3, [r7, #12]
 8017c76:	6858      	ldr	r0, [r3, #4]
 8017c78:	68fb      	ldr	r3, [r7, #12]
 8017c7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c7c:	461a      	mov	r2, r3
 8017c7e:	68b9      	ldr	r1, [r7, #8]
 8017c80:	f003 f9a0 	bl	801afc4 <memcpy>
 8017c84:	68fb      	ldr	r3, [r7, #12]
 8017c86:	685a      	ldr	r2, [r3, #4]
 8017c88:	68fb      	ldr	r3, [r7, #12]
 8017c8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017c8c:	441a      	add	r2, r3
 8017c8e:	68fb      	ldr	r3, [r7, #12]
 8017c90:	605a      	str	r2, [r3, #4]
 8017c92:	68fb      	ldr	r3, [r7, #12]
 8017c94:	685a      	ldr	r2, [r3, #4]
 8017c96:	68fb      	ldr	r3, [r7, #12]
 8017c98:	689b      	ldr	r3, [r3, #8]
 8017c9a:	429a      	cmp	r2, r3
 8017c9c:	d32b      	bcc.n	8017cf6 <prvCopyDataToQueue+0xc2>
 8017c9e:	68fb      	ldr	r3, [r7, #12]
 8017ca0:	681a      	ldr	r2, [r3, #0]
 8017ca2:	68fb      	ldr	r3, [r7, #12]
 8017ca4:	605a      	str	r2, [r3, #4]
 8017ca6:	e026      	b.n	8017cf6 <prvCopyDataToQueue+0xc2>
 8017ca8:	68fb      	ldr	r3, [r7, #12]
 8017caa:	68d8      	ldr	r0, [r3, #12]
 8017cac:	68fb      	ldr	r3, [r7, #12]
 8017cae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017cb0:	461a      	mov	r2, r3
 8017cb2:	68b9      	ldr	r1, [r7, #8]
 8017cb4:	f003 f986 	bl	801afc4 <memcpy>
 8017cb8:	68fb      	ldr	r3, [r7, #12]
 8017cba:	68da      	ldr	r2, [r3, #12]
 8017cbc:	68fb      	ldr	r3, [r7, #12]
 8017cbe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017cc0:	425b      	negs	r3, r3
 8017cc2:	441a      	add	r2, r3
 8017cc4:	68fb      	ldr	r3, [r7, #12]
 8017cc6:	60da      	str	r2, [r3, #12]
 8017cc8:	68fb      	ldr	r3, [r7, #12]
 8017cca:	68da      	ldr	r2, [r3, #12]
 8017ccc:	68fb      	ldr	r3, [r7, #12]
 8017cce:	681b      	ldr	r3, [r3, #0]
 8017cd0:	429a      	cmp	r2, r3
 8017cd2:	d207      	bcs.n	8017ce4 <prvCopyDataToQueue+0xb0>
 8017cd4:	68fb      	ldr	r3, [r7, #12]
 8017cd6:	689a      	ldr	r2, [r3, #8]
 8017cd8:	68fb      	ldr	r3, [r7, #12]
 8017cda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017cdc:	425b      	negs	r3, r3
 8017cde:	441a      	add	r2, r3
 8017ce0:	68fb      	ldr	r3, [r7, #12]
 8017ce2:	60da      	str	r2, [r3, #12]
 8017ce4:	687b      	ldr	r3, [r7, #4]
 8017ce6:	2b02      	cmp	r3, #2
 8017ce8:	d105      	bne.n	8017cf6 <prvCopyDataToQueue+0xc2>
 8017cea:	693b      	ldr	r3, [r7, #16]
 8017cec:	2b00      	cmp	r3, #0
 8017cee:	d002      	beq.n	8017cf6 <prvCopyDataToQueue+0xc2>
 8017cf0:	693b      	ldr	r3, [r7, #16]
 8017cf2:	3b01      	subs	r3, #1
 8017cf4:	613b      	str	r3, [r7, #16]
 8017cf6:	693b      	ldr	r3, [r7, #16]
 8017cf8:	1c5a      	adds	r2, r3, #1
 8017cfa:	68fb      	ldr	r3, [r7, #12]
 8017cfc:	639a      	str	r2, [r3, #56]	@ 0x38
 8017cfe:	697b      	ldr	r3, [r7, #20]
 8017d00:	4618      	mov	r0, r3
 8017d02:	3718      	adds	r7, #24
 8017d04:	46bd      	mov	sp, r7
 8017d06:	bd80      	pop	{r7, pc}

08017d08 <prvCopyDataFromQueue>:
 8017d08:	b580      	push	{r7, lr}
 8017d0a:	b082      	sub	sp, #8
 8017d0c:	af00      	add	r7, sp, #0
 8017d0e:	6078      	str	r0, [r7, #4]
 8017d10:	6039      	str	r1, [r7, #0]
 8017d12:	687b      	ldr	r3, [r7, #4]
 8017d14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d16:	2b00      	cmp	r3, #0
 8017d18:	d018      	beq.n	8017d4c <prvCopyDataFromQueue+0x44>
 8017d1a:	687b      	ldr	r3, [r7, #4]
 8017d1c:	68da      	ldr	r2, [r3, #12]
 8017d1e:	687b      	ldr	r3, [r7, #4]
 8017d20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d22:	441a      	add	r2, r3
 8017d24:	687b      	ldr	r3, [r7, #4]
 8017d26:	60da      	str	r2, [r3, #12]
 8017d28:	687b      	ldr	r3, [r7, #4]
 8017d2a:	68da      	ldr	r2, [r3, #12]
 8017d2c:	687b      	ldr	r3, [r7, #4]
 8017d2e:	689b      	ldr	r3, [r3, #8]
 8017d30:	429a      	cmp	r2, r3
 8017d32:	d303      	bcc.n	8017d3c <prvCopyDataFromQueue+0x34>
 8017d34:	687b      	ldr	r3, [r7, #4]
 8017d36:	681a      	ldr	r2, [r3, #0]
 8017d38:	687b      	ldr	r3, [r7, #4]
 8017d3a:	60da      	str	r2, [r3, #12]
 8017d3c:	687b      	ldr	r3, [r7, #4]
 8017d3e:	68d9      	ldr	r1, [r3, #12]
 8017d40:	687b      	ldr	r3, [r7, #4]
 8017d42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8017d44:	461a      	mov	r2, r3
 8017d46:	6838      	ldr	r0, [r7, #0]
 8017d48:	f003 f93c 	bl	801afc4 <memcpy>
 8017d4c:	bf00      	nop
 8017d4e:	3708      	adds	r7, #8
 8017d50:	46bd      	mov	sp, r7
 8017d52:	bd80      	pop	{r7, pc}

08017d54 <prvUnlockQueue>:
 8017d54:	b580      	push	{r7, lr}
 8017d56:	b084      	sub	sp, #16
 8017d58:	af00      	add	r7, sp, #0
 8017d5a:	6078      	str	r0, [r7, #4]
 8017d5c:	f001 ff04 	bl	8019b68 <vPortEnterCritical>
 8017d60:	687b      	ldr	r3, [r7, #4]
 8017d62:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017d66:	73fb      	strb	r3, [r7, #15]
 8017d68:	e011      	b.n	8017d8e <prvUnlockQueue+0x3a>
 8017d6a:	687b      	ldr	r3, [r7, #4]
 8017d6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8017d6e:	2b00      	cmp	r3, #0
 8017d70:	d012      	beq.n	8017d98 <prvUnlockQueue+0x44>
 8017d72:	687b      	ldr	r3, [r7, #4]
 8017d74:	3324      	adds	r3, #36	@ 0x24
 8017d76:	4618      	mov	r0, r3
 8017d78:	f000 fe34 	bl	80189e4 <xTaskRemoveFromEventList>
 8017d7c:	4603      	mov	r3, r0
 8017d7e:	2b00      	cmp	r3, #0
 8017d80:	d001      	beq.n	8017d86 <prvUnlockQueue+0x32>
 8017d82:	f000 ff71 	bl	8018c68 <vTaskMissedYield>
 8017d86:	7bfb      	ldrb	r3, [r7, #15]
 8017d88:	3b01      	subs	r3, #1
 8017d8a:	b2db      	uxtb	r3, r3
 8017d8c:	73fb      	strb	r3, [r7, #15]
 8017d8e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8017d92:	2b00      	cmp	r3, #0
 8017d94:	dce9      	bgt.n	8017d6a <prvUnlockQueue+0x16>
 8017d96:	e000      	b.n	8017d9a <prvUnlockQueue+0x46>
 8017d98:	bf00      	nop
 8017d9a:	687b      	ldr	r3, [r7, #4]
 8017d9c:	22ff      	movs	r2, #255	@ 0xff
 8017d9e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017da2:	f001 ff13 	bl	8019bcc <vPortExitCritical>
 8017da6:	f001 fedf 	bl	8019b68 <vPortEnterCritical>
 8017daa:	687b      	ldr	r3, [r7, #4]
 8017dac:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017db0:	73bb      	strb	r3, [r7, #14]
 8017db2:	e011      	b.n	8017dd8 <prvUnlockQueue+0x84>
 8017db4:	687b      	ldr	r3, [r7, #4]
 8017db6:	691b      	ldr	r3, [r3, #16]
 8017db8:	2b00      	cmp	r3, #0
 8017dba:	d012      	beq.n	8017de2 <prvUnlockQueue+0x8e>
 8017dbc:	687b      	ldr	r3, [r7, #4]
 8017dbe:	3310      	adds	r3, #16
 8017dc0:	4618      	mov	r0, r3
 8017dc2:	f000 fe0f 	bl	80189e4 <xTaskRemoveFromEventList>
 8017dc6:	4603      	mov	r3, r0
 8017dc8:	2b00      	cmp	r3, #0
 8017dca:	d001      	beq.n	8017dd0 <prvUnlockQueue+0x7c>
 8017dcc:	f000 ff4c 	bl	8018c68 <vTaskMissedYield>
 8017dd0:	7bbb      	ldrb	r3, [r7, #14]
 8017dd2:	3b01      	subs	r3, #1
 8017dd4:	b2db      	uxtb	r3, r3
 8017dd6:	73bb      	strb	r3, [r7, #14]
 8017dd8:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8017ddc:	2b00      	cmp	r3, #0
 8017dde:	dce9      	bgt.n	8017db4 <prvUnlockQueue+0x60>
 8017de0:	e000      	b.n	8017de4 <prvUnlockQueue+0x90>
 8017de2:	bf00      	nop
 8017de4:	687b      	ldr	r3, [r7, #4]
 8017de6:	22ff      	movs	r2, #255	@ 0xff
 8017de8:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017dec:	f001 feee 	bl	8019bcc <vPortExitCritical>
 8017df0:	bf00      	nop
 8017df2:	3710      	adds	r7, #16
 8017df4:	46bd      	mov	sp, r7
 8017df6:	bd80      	pop	{r7, pc}

08017df8 <prvIsQueueEmpty>:
 8017df8:	b580      	push	{r7, lr}
 8017dfa:	b084      	sub	sp, #16
 8017dfc:	af00      	add	r7, sp, #0
 8017dfe:	6078      	str	r0, [r7, #4]
 8017e00:	f001 feb2 	bl	8019b68 <vPortEnterCritical>
 8017e04:	687b      	ldr	r3, [r7, #4]
 8017e06:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017e08:	2b00      	cmp	r3, #0
 8017e0a:	d102      	bne.n	8017e12 <prvIsQueueEmpty+0x1a>
 8017e0c:	2301      	movs	r3, #1
 8017e0e:	60fb      	str	r3, [r7, #12]
 8017e10:	e001      	b.n	8017e16 <prvIsQueueEmpty+0x1e>
 8017e12:	2300      	movs	r3, #0
 8017e14:	60fb      	str	r3, [r7, #12]
 8017e16:	f001 fed9 	bl	8019bcc <vPortExitCritical>
 8017e1a:	68fb      	ldr	r3, [r7, #12]
 8017e1c:	4618      	mov	r0, r3
 8017e1e:	3710      	adds	r7, #16
 8017e20:	46bd      	mov	sp, r7
 8017e22:	bd80      	pop	{r7, pc}

08017e24 <prvIsQueueFull>:
 8017e24:	b580      	push	{r7, lr}
 8017e26:	b084      	sub	sp, #16
 8017e28:	af00      	add	r7, sp, #0
 8017e2a:	6078      	str	r0, [r7, #4]
 8017e2c:	f001 fe9c 	bl	8019b68 <vPortEnterCritical>
 8017e30:	687b      	ldr	r3, [r7, #4]
 8017e32:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8017e34:	687b      	ldr	r3, [r7, #4]
 8017e36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017e38:	429a      	cmp	r2, r3
 8017e3a:	d102      	bne.n	8017e42 <prvIsQueueFull+0x1e>
 8017e3c:	2301      	movs	r3, #1
 8017e3e:	60fb      	str	r3, [r7, #12]
 8017e40:	e001      	b.n	8017e46 <prvIsQueueFull+0x22>
 8017e42:	2300      	movs	r3, #0
 8017e44:	60fb      	str	r3, [r7, #12]
 8017e46:	f001 fec1 	bl	8019bcc <vPortExitCritical>
 8017e4a:	68fb      	ldr	r3, [r7, #12]
 8017e4c:	4618      	mov	r0, r3
 8017e4e:	3710      	adds	r7, #16
 8017e50:	46bd      	mov	sp, r7
 8017e52:	bd80      	pop	{r7, pc}

08017e54 <vQueueAddToRegistry>:
 8017e54:	b480      	push	{r7}
 8017e56:	b085      	sub	sp, #20
 8017e58:	af00      	add	r7, sp, #0
 8017e5a:	6078      	str	r0, [r7, #4]
 8017e5c:	6039      	str	r1, [r7, #0]
 8017e5e:	2300      	movs	r3, #0
 8017e60:	60fb      	str	r3, [r7, #12]
 8017e62:	e014      	b.n	8017e8e <vQueueAddToRegistry+0x3a>
 8017e64:	4a0f      	ldr	r2, [pc, #60]	@ (8017ea4 <vQueueAddToRegistry+0x50>)
 8017e66:	68fb      	ldr	r3, [r7, #12]
 8017e68:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8017e6c:	2b00      	cmp	r3, #0
 8017e6e:	d10b      	bne.n	8017e88 <vQueueAddToRegistry+0x34>
 8017e70:	490c      	ldr	r1, [pc, #48]	@ (8017ea4 <vQueueAddToRegistry+0x50>)
 8017e72:	68fb      	ldr	r3, [r7, #12]
 8017e74:	683a      	ldr	r2, [r7, #0]
 8017e76:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8017e7a:	4a0a      	ldr	r2, [pc, #40]	@ (8017ea4 <vQueueAddToRegistry+0x50>)
 8017e7c:	68fb      	ldr	r3, [r7, #12]
 8017e7e:	00db      	lsls	r3, r3, #3
 8017e80:	4413      	add	r3, r2
 8017e82:	687a      	ldr	r2, [r7, #4]
 8017e84:	605a      	str	r2, [r3, #4]
 8017e86:	e006      	b.n	8017e96 <vQueueAddToRegistry+0x42>
 8017e88:	68fb      	ldr	r3, [r7, #12]
 8017e8a:	3301      	adds	r3, #1
 8017e8c:	60fb      	str	r3, [r7, #12]
 8017e8e:	68fb      	ldr	r3, [r7, #12]
 8017e90:	2b07      	cmp	r3, #7
 8017e92:	d9e7      	bls.n	8017e64 <vQueueAddToRegistry+0x10>
 8017e94:	bf00      	nop
 8017e96:	bf00      	nop
 8017e98:	3714      	adds	r7, #20
 8017e9a:	46bd      	mov	sp, r7
 8017e9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017ea0:	4770      	bx	lr
 8017ea2:	bf00      	nop
 8017ea4:	20003ad0 	.word	0x20003ad0

08017ea8 <vQueueWaitForMessageRestricted>:
 8017ea8:	b580      	push	{r7, lr}
 8017eaa:	b086      	sub	sp, #24
 8017eac:	af00      	add	r7, sp, #0
 8017eae:	60f8      	str	r0, [r7, #12]
 8017eb0:	60b9      	str	r1, [r7, #8]
 8017eb2:	607a      	str	r2, [r7, #4]
 8017eb4:	68fb      	ldr	r3, [r7, #12]
 8017eb6:	617b      	str	r3, [r7, #20]
 8017eb8:	f001 fe56 	bl	8019b68 <vPortEnterCritical>
 8017ebc:	697b      	ldr	r3, [r7, #20]
 8017ebe:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8017ec2:	b25b      	sxtb	r3, r3
 8017ec4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017ec8:	d103      	bne.n	8017ed2 <vQueueWaitForMessageRestricted+0x2a>
 8017eca:	697b      	ldr	r3, [r7, #20]
 8017ecc:	2200      	movs	r2, #0
 8017ece:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8017ed2:	697b      	ldr	r3, [r7, #20]
 8017ed4:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8017ed8:	b25b      	sxtb	r3, r3
 8017eda:	f1b3 3fff 	cmp.w	r3, #4294967295
 8017ede:	d103      	bne.n	8017ee8 <vQueueWaitForMessageRestricted+0x40>
 8017ee0:	697b      	ldr	r3, [r7, #20]
 8017ee2:	2200      	movs	r2, #0
 8017ee4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8017ee8:	f001 fe70 	bl	8019bcc <vPortExitCritical>
 8017eec:	697b      	ldr	r3, [r7, #20]
 8017eee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017ef0:	2b00      	cmp	r3, #0
 8017ef2:	d106      	bne.n	8017f02 <vQueueWaitForMessageRestricted+0x5a>
 8017ef4:	697b      	ldr	r3, [r7, #20]
 8017ef6:	3324      	adds	r3, #36	@ 0x24
 8017ef8:	687a      	ldr	r2, [r7, #4]
 8017efa:	68b9      	ldr	r1, [r7, #8]
 8017efc:	4618      	mov	r0, r3
 8017efe:	f000 fd45 	bl	801898c <vTaskPlaceOnEventListRestricted>
 8017f02:	6978      	ldr	r0, [r7, #20]
 8017f04:	f7ff ff26 	bl	8017d54 <prvUnlockQueue>
 8017f08:	bf00      	nop
 8017f0a:	3718      	adds	r7, #24
 8017f0c:	46bd      	mov	sp, r7
 8017f0e:	bd80      	pop	{r7, pc}

08017f10 <xTaskCreateStatic>:
 8017f10:	b580      	push	{r7, lr}
 8017f12:	b08e      	sub	sp, #56	@ 0x38
 8017f14:	af04      	add	r7, sp, #16
 8017f16:	60f8      	str	r0, [r7, #12]
 8017f18:	60b9      	str	r1, [r7, #8]
 8017f1a:	607a      	str	r2, [r7, #4]
 8017f1c:	603b      	str	r3, [r7, #0]
 8017f1e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017f20:	2b00      	cmp	r3, #0
 8017f22:	d10b      	bne.n	8017f3c <xTaskCreateStatic+0x2c>
 8017f24:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017f28:	f383 8811 	msr	BASEPRI, r3
 8017f2c:	f3bf 8f6f 	isb	sy
 8017f30:	f3bf 8f4f 	dsb	sy
 8017f34:	623b      	str	r3, [r7, #32]
 8017f36:	bf00      	nop
 8017f38:	bf00      	nop
 8017f3a:	e7fd      	b.n	8017f38 <xTaskCreateStatic+0x28>
 8017f3c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017f3e:	2b00      	cmp	r3, #0
 8017f40:	d10b      	bne.n	8017f5a <xTaskCreateStatic+0x4a>
 8017f42:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017f46:	f383 8811 	msr	BASEPRI, r3
 8017f4a:	f3bf 8f6f 	isb	sy
 8017f4e:	f3bf 8f4f 	dsb	sy
 8017f52:	61fb      	str	r3, [r7, #28]
 8017f54:	bf00      	nop
 8017f56:	bf00      	nop
 8017f58:	e7fd      	b.n	8017f56 <xTaskCreateStatic+0x46>
 8017f5a:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8017f5e:	613b      	str	r3, [r7, #16]
 8017f60:	693b      	ldr	r3, [r7, #16]
 8017f62:	f5b3 7fc0 	cmp.w	r3, #384	@ 0x180
 8017f66:	d00b      	beq.n	8017f80 <xTaskCreateStatic+0x70>
 8017f68:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8017f6c:	f383 8811 	msr	BASEPRI, r3
 8017f70:	f3bf 8f6f 	isb	sy
 8017f74:	f3bf 8f4f 	dsb	sy
 8017f78:	61bb      	str	r3, [r7, #24]
 8017f7a:	bf00      	nop
 8017f7c:	bf00      	nop
 8017f7e:	e7fd      	b.n	8017f7c <xTaskCreateStatic+0x6c>
 8017f80:	693b      	ldr	r3, [r7, #16]
 8017f82:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017f84:	2b00      	cmp	r3, #0
 8017f86:	d01e      	beq.n	8017fc6 <xTaskCreateStatic+0xb6>
 8017f88:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8017f8a:	2b00      	cmp	r3, #0
 8017f8c:	d01b      	beq.n	8017fc6 <xTaskCreateStatic+0xb6>
 8017f8e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8017f90:	627b      	str	r3, [r7, #36]	@ 0x24
 8017f92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f94:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8017f96:	631a      	str	r2, [r3, #48]	@ 0x30
 8017f98:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017f9a:	2202      	movs	r2, #2
 8017f9c:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 8017fa0:	2300      	movs	r3, #0
 8017fa2:	9303      	str	r3, [sp, #12]
 8017fa4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017fa6:	9302      	str	r3, [sp, #8]
 8017fa8:	f107 0314 	add.w	r3, r7, #20
 8017fac:	9301      	str	r3, [sp, #4]
 8017fae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8017fb0:	9300      	str	r3, [sp, #0]
 8017fb2:	683b      	ldr	r3, [r7, #0]
 8017fb4:	687a      	ldr	r2, [r7, #4]
 8017fb6:	68b9      	ldr	r1, [r7, #8]
 8017fb8:	68f8      	ldr	r0, [r7, #12]
 8017fba:	f000 f851 	bl	8018060 <prvInitialiseNewTask>
 8017fbe:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8017fc0:	f000 f922 	bl	8018208 <prvAddNewTaskToReadyList>
 8017fc4:	e001      	b.n	8017fca <xTaskCreateStatic+0xba>
 8017fc6:	2300      	movs	r3, #0
 8017fc8:	617b      	str	r3, [r7, #20]
 8017fca:	697b      	ldr	r3, [r7, #20]
 8017fcc:	4618      	mov	r0, r3
 8017fce:	3728      	adds	r7, #40	@ 0x28
 8017fd0:	46bd      	mov	sp, r7
 8017fd2:	bd80      	pop	{r7, pc}

08017fd4 <xTaskCreate>:
 8017fd4:	b580      	push	{r7, lr}
 8017fd6:	b08c      	sub	sp, #48	@ 0x30
 8017fd8:	af04      	add	r7, sp, #16
 8017fda:	60f8      	str	r0, [r7, #12]
 8017fdc:	60b9      	str	r1, [r7, #8]
 8017fde:	603b      	str	r3, [r7, #0]
 8017fe0:	4613      	mov	r3, r2
 8017fe2:	80fb      	strh	r3, [r7, #6]
 8017fe4:	88fb      	ldrh	r3, [r7, #6]
 8017fe6:	009b      	lsls	r3, r3, #2
 8017fe8:	4618      	mov	r0, r3
 8017fea:	f001 fedf 	bl	8019dac <pvPortMalloc>
 8017fee:	6178      	str	r0, [r7, #20]
 8017ff0:	697b      	ldr	r3, [r7, #20]
 8017ff2:	2b00      	cmp	r3, #0
 8017ff4:	d00f      	beq.n	8018016 <xTaskCreate+0x42>
 8017ff6:	f44f 70c0 	mov.w	r0, #384	@ 0x180
 8017ffa:	f001 fed7 	bl	8019dac <pvPortMalloc>
 8017ffe:	61f8      	str	r0, [r7, #28]
 8018000:	69fb      	ldr	r3, [r7, #28]
 8018002:	2b00      	cmp	r3, #0
 8018004:	d003      	beq.n	801800e <xTaskCreate+0x3a>
 8018006:	69fb      	ldr	r3, [r7, #28]
 8018008:	697a      	ldr	r2, [r7, #20]
 801800a:	631a      	str	r2, [r3, #48]	@ 0x30
 801800c:	e005      	b.n	801801a <xTaskCreate+0x46>
 801800e:	6978      	ldr	r0, [r7, #20]
 8018010:	f001 ff9a 	bl	8019f48 <vPortFree>
 8018014:	e001      	b.n	801801a <xTaskCreate+0x46>
 8018016:	2300      	movs	r3, #0
 8018018:	61fb      	str	r3, [r7, #28]
 801801a:	69fb      	ldr	r3, [r7, #28]
 801801c:	2b00      	cmp	r3, #0
 801801e:	d017      	beq.n	8018050 <xTaskCreate+0x7c>
 8018020:	69fb      	ldr	r3, [r7, #28]
 8018022:	2200      	movs	r2, #0
 8018024:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 8018028:	88fa      	ldrh	r2, [r7, #6]
 801802a:	2300      	movs	r3, #0
 801802c:	9303      	str	r3, [sp, #12]
 801802e:	69fb      	ldr	r3, [r7, #28]
 8018030:	9302      	str	r3, [sp, #8]
 8018032:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8018034:	9301      	str	r3, [sp, #4]
 8018036:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8018038:	9300      	str	r3, [sp, #0]
 801803a:	683b      	ldr	r3, [r7, #0]
 801803c:	68b9      	ldr	r1, [r7, #8]
 801803e:	68f8      	ldr	r0, [r7, #12]
 8018040:	f000 f80e 	bl	8018060 <prvInitialiseNewTask>
 8018044:	69f8      	ldr	r0, [r7, #28]
 8018046:	f000 f8df 	bl	8018208 <prvAddNewTaskToReadyList>
 801804a:	2301      	movs	r3, #1
 801804c:	61bb      	str	r3, [r7, #24]
 801804e:	e002      	b.n	8018056 <xTaskCreate+0x82>
 8018050:	f04f 33ff 	mov.w	r3, #4294967295
 8018054:	61bb      	str	r3, [r7, #24]
 8018056:	69bb      	ldr	r3, [r7, #24]
 8018058:	4618      	mov	r0, r3
 801805a:	3720      	adds	r7, #32
 801805c:	46bd      	mov	sp, r7
 801805e:	bd80      	pop	{r7, pc}

08018060 <prvInitialiseNewTask>:
 8018060:	b580      	push	{r7, lr}
 8018062:	b088      	sub	sp, #32
 8018064:	af00      	add	r7, sp, #0
 8018066:	60f8      	str	r0, [r7, #12]
 8018068:	60b9      	str	r1, [r7, #8]
 801806a:	607a      	str	r2, [r7, #4]
 801806c:	603b      	str	r3, [r7, #0]
 801806e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018070:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 8018072:	687b      	ldr	r3, [r7, #4]
 8018074:	009b      	lsls	r3, r3, #2
 8018076:	461a      	mov	r2, r3
 8018078:	21a5      	movs	r1, #165	@ 0xa5
 801807a:	f002 fefa 	bl	801ae72 <memset>
 801807e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018080:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8018082:	687b      	ldr	r3, [r7, #4]
 8018084:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8018088:	3b01      	subs	r3, #1
 801808a:	009b      	lsls	r3, r3, #2
 801808c:	4413      	add	r3, r2
 801808e:	61bb      	str	r3, [r7, #24]
 8018090:	69bb      	ldr	r3, [r7, #24]
 8018092:	f023 0307 	bic.w	r3, r3, #7
 8018096:	61bb      	str	r3, [r7, #24]
 8018098:	69bb      	ldr	r3, [r7, #24]
 801809a:	f003 0307 	and.w	r3, r3, #7
 801809e:	2b00      	cmp	r3, #0
 80180a0:	d00b      	beq.n	80180ba <prvInitialiseNewTask+0x5a>
 80180a2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80180a6:	f383 8811 	msr	BASEPRI, r3
 80180aa:	f3bf 8f6f 	isb	sy
 80180ae:	f3bf 8f4f 	dsb	sy
 80180b2:	617b      	str	r3, [r7, #20]
 80180b4:	bf00      	nop
 80180b6:	bf00      	nop
 80180b8:	e7fd      	b.n	80180b6 <prvInitialiseNewTask+0x56>
 80180ba:	68bb      	ldr	r3, [r7, #8]
 80180bc:	2b00      	cmp	r3, #0
 80180be:	d01f      	beq.n	8018100 <prvInitialiseNewTask+0xa0>
 80180c0:	2300      	movs	r3, #0
 80180c2:	61fb      	str	r3, [r7, #28]
 80180c4:	e012      	b.n	80180ec <prvInitialiseNewTask+0x8c>
 80180c6:	68ba      	ldr	r2, [r7, #8]
 80180c8:	69fb      	ldr	r3, [r7, #28]
 80180ca:	4413      	add	r3, r2
 80180cc:	7819      	ldrb	r1, [r3, #0]
 80180ce:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80180d0:	69fb      	ldr	r3, [r7, #28]
 80180d2:	4413      	add	r3, r2
 80180d4:	3334      	adds	r3, #52	@ 0x34
 80180d6:	460a      	mov	r2, r1
 80180d8:	701a      	strb	r2, [r3, #0]
 80180da:	68ba      	ldr	r2, [r7, #8]
 80180dc:	69fb      	ldr	r3, [r7, #28]
 80180de:	4413      	add	r3, r2
 80180e0:	781b      	ldrb	r3, [r3, #0]
 80180e2:	2b00      	cmp	r3, #0
 80180e4:	d006      	beq.n	80180f4 <prvInitialiseNewTask+0x94>
 80180e6:	69fb      	ldr	r3, [r7, #28]
 80180e8:	3301      	adds	r3, #1
 80180ea:	61fb      	str	r3, [r7, #28]
 80180ec:	69fb      	ldr	r3, [r7, #28]
 80180ee:	2b0f      	cmp	r3, #15
 80180f0:	d9e9      	bls.n	80180c6 <prvInitialiseNewTask+0x66>
 80180f2:	e000      	b.n	80180f6 <prvInitialiseNewTask+0x96>
 80180f4:	bf00      	nop
 80180f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80180f8:	2200      	movs	r2, #0
 80180fa:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80180fe:	e003      	b.n	8018108 <prvInitialiseNewTask+0xa8>
 8018100:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018102:	2200      	movs	r2, #0
 8018104:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8018108:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801810a:	2b0e      	cmp	r3, #14
 801810c:	d901      	bls.n	8018112 <prvInitialiseNewTask+0xb2>
 801810e:	230e      	movs	r3, #14
 8018110:	62bb      	str	r3, [r7, #40]	@ 0x28
 8018112:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018114:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8018116:	62da      	str	r2, [r3, #44]	@ 0x2c
 8018118:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801811a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 801811c:	64da      	str	r2, [r3, #76]	@ 0x4c
 801811e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018120:	2200      	movs	r2, #0
 8018122:	651a      	str	r2, [r3, #80]	@ 0x50
 8018124:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018126:	3304      	adds	r3, #4
 8018128:	4618      	mov	r0, r3
 801812a:	f7ff f897 	bl	801725c <vListInitialiseItem>
 801812e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018130:	3318      	adds	r3, #24
 8018132:	4618      	mov	r0, r3
 8018134:	f7ff f892 	bl	801725c <vListInitialiseItem>
 8018138:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801813a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801813c:	611a      	str	r2, [r3, #16]
 801813e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8018140:	f1c3 020f 	rsb	r2, r3, #15
 8018144:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018146:	619a      	str	r2, [r3, #24]
 8018148:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801814a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801814c:	625a      	str	r2, [r3, #36]	@ 0x24
 801814e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018150:	2200      	movs	r2, #0
 8018152:	655a      	str	r2, [r3, #84]	@ 0x54
 8018154:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018156:	2200      	movs	r2, #0
 8018158:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801815c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801815e:	2200      	movs	r2, #0
 8018160:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8018164:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018166:	3358      	adds	r3, #88	@ 0x58
 8018168:	f44f 7290 	mov.w	r2, #288	@ 0x120
 801816c:	2100      	movs	r1, #0
 801816e:	4618      	mov	r0, r3
 8018170:	f002 fe7f 	bl	801ae72 <memset>
 8018174:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018176:	4a21      	ldr	r2, [pc, #132]	@ (80181fc <prvInitialiseNewTask+0x19c>)
 8018178:	65da      	str	r2, [r3, #92]	@ 0x5c
 801817a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801817c:	4a20      	ldr	r2, [pc, #128]	@ (8018200 <prvInitialiseNewTask+0x1a0>)
 801817e:	661a      	str	r2, [r3, #96]	@ 0x60
 8018180:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018182:	4a20      	ldr	r2, [pc, #128]	@ (8018204 <prvInitialiseNewTask+0x1a4>)
 8018184:	665a      	str	r2, [r3, #100]	@ 0x64
 8018186:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8018188:	f04f 0201 	mov.w	r2, #1
 801818c:	f04f 0300 	mov.w	r3, #0
 8018190:	e9c1 233c 	strd	r2, r3, [r1, #240]	@ 0xf0
 8018194:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8018196:	f243 320e 	movw	r2, #13070	@ 0x330e
 801819a:	f8a3 20f8 	strh.w	r2, [r3, #248]	@ 0xf8
 801819e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181a0:	f64a 32cd 	movw	r2, #43981	@ 0xabcd
 80181a4:	f8a3 20fa 	strh.w	r2, [r3, #250]	@ 0xfa
 80181a8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181aa:	f241 2234 	movw	r2, #4660	@ 0x1234
 80181ae:	f8a3 20fc 	strh.w	r2, [r3, #252]	@ 0xfc
 80181b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181b4:	f24e 626d 	movw	r2, #58989	@ 0xe66d
 80181b8:	f8a3 20fe 	strh.w	r2, [r3, #254]	@ 0xfe
 80181bc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181be:	f64d 62ec 	movw	r2, #57068	@ 0xdeec
 80181c2:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 80181c6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181c8:	2205      	movs	r2, #5
 80181ca:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 80181ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181d0:	220b      	movs	r2, #11
 80181d2:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
 80181d6:	683a      	ldr	r2, [r7, #0]
 80181d8:	68f9      	ldr	r1, [r7, #12]
 80181da:	69b8      	ldr	r0, [r7, #24]
 80181dc:	f001 fb94 	bl	8019908 <pxPortInitialiseStack>
 80181e0:	4602      	mov	r2, r0
 80181e2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80181e4:	601a      	str	r2, [r3, #0]
 80181e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80181e8:	2b00      	cmp	r3, #0
 80181ea:	d002      	beq.n	80181f2 <prvInitialiseNewTask+0x192>
 80181ec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80181ee:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80181f0:	601a      	str	r2, [r3, #0]
 80181f2:	bf00      	nop
 80181f4:	3720      	adds	r7, #32
 80181f6:	46bd      	mov	sp, r7
 80181f8:	bd80      	pop	{r7, pc}
 80181fa:	bf00      	nop
 80181fc:	2000cf78 	.word	0x2000cf78
 8018200:	2000cfe0 	.word	0x2000cfe0
 8018204:	2000d048 	.word	0x2000d048

08018208 <prvAddNewTaskToReadyList>:
 8018208:	b580      	push	{r7, lr}
 801820a:	b082      	sub	sp, #8
 801820c:	af00      	add	r7, sp, #0
 801820e:	6078      	str	r0, [r7, #4]
 8018210:	f001 fcaa 	bl	8019b68 <vPortEnterCritical>
 8018214:	4b2c      	ldr	r3, [pc, #176]	@ (80182c8 <prvAddNewTaskToReadyList+0xc0>)
 8018216:	681b      	ldr	r3, [r3, #0]
 8018218:	3301      	adds	r3, #1
 801821a:	4a2b      	ldr	r2, [pc, #172]	@ (80182c8 <prvAddNewTaskToReadyList+0xc0>)
 801821c:	6013      	str	r3, [r2, #0]
 801821e:	4b2b      	ldr	r3, [pc, #172]	@ (80182cc <prvAddNewTaskToReadyList+0xc4>)
 8018220:	681b      	ldr	r3, [r3, #0]
 8018222:	2b00      	cmp	r3, #0
 8018224:	d109      	bne.n	801823a <prvAddNewTaskToReadyList+0x32>
 8018226:	4a29      	ldr	r2, [pc, #164]	@ (80182cc <prvAddNewTaskToReadyList+0xc4>)
 8018228:	687b      	ldr	r3, [r7, #4]
 801822a:	6013      	str	r3, [r2, #0]
 801822c:	4b26      	ldr	r3, [pc, #152]	@ (80182c8 <prvAddNewTaskToReadyList+0xc0>)
 801822e:	681b      	ldr	r3, [r3, #0]
 8018230:	2b01      	cmp	r3, #1
 8018232:	d110      	bne.n	8018256 <prvAddNewTaskToReadyList+0x4e>
 8018234:	f000 fd3c 	bl	8018cb0 <prvInitialiseTaskLists>
 8018238:	e00d      	b.n	8018256 <prvAddNewTaskToReadyList+0x4e>
 801823a:	4b25      	ldr	r3, [pc, #148]	@ (80182d0 <prvAddNewTaskToReadyList+0xc8>)
 801823c:	681b      	ldr	r3, [r3, #0]
 801823e:	2b00      	cmp	r3, #0
 8018240:	d109      	bne.n	8018256 <prvAddNewTaskToReadyList+0x4e>
 8018242:	4b22      	ldr	r3, [pc, #136]	@ (80182cc <prvAddNewTaskToReadyList+0xc4>)
 8018244:	681b      	ldr	r3, [r3, #0]
 8018246:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018248:	687b      	ldr	r3, [r7, #4]
 801824a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801824c:	429a      	cmp	r2, r3
 801824e:	d802      	bhi.n	8018256 <prvAddNewTaskToReadyList+0x4e>
 8018250:	4a1e      	ldr	r2, [pc, #120]	@ (80182cc <prvAddNewTaskToReadyList+0xc4>)
 8018252:	687b      	ldr	r3, [r7, #4]
 8018254:	6013      	str	r3, [r2, #0]
 8018256:	4b1f      	ldr	r3, [pc, #124]	@ (80182d4 <prvAddNewTaskToReadyList+0xcc>)
 8018258:	681b      	ldr	r3, [r3, #0]
 801825a:	3301      	adds	r3, #1
 801825c:	4a1d      	ldr	r2, [pc, #116]	@ (80182d4 <prvAddNewTaskToReadyList+0xcc>)
 801825e:	6013      	str	r3, [r2, #0]
 8018260:	4b1c      	ldr	r3, [pc, #112]	@ (80182d4 <prvAddNewTaskToReadyList+0xcc>)
 8018262:	681a      	ldr	r2, [r3, #0]
 8018264:	687b      	ldr	r3, [r7, #4]
 8018266:	645a      	str	r2, [r3, #68]	@ 0x44
 8018268:	687b      	ldr	r3, [r7, #4]
 801826a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801826c:	2201      	movs	r2, #1
 801826e:	409a      	lsls	r2, r3
 8018270:	4b19      	ldr	r3, [pc, #100]	@ (80182d8 <prvAddNewTaskToReadyList+0xd0>)
 8018272:	681b      	ldr	r3, [r3, #0]
 8018274:	4313      	orrs	r3, r2
 8018276:	4a18      	ldr	r2, [pc, #96]	@ (80182d8 <prvAddNewTaskToReadyList+0xd0>)
 8018278:	6013      	str	r3, [r2, #0]
 801827a:	687b      	ldr	r3, [r7, #4]
 801827c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801827e:	4613      	mov	r3, r2
 8018280:	009b      	lsls	r3, r3, #2
 8018282:	4413      	add	r3, r2
 8018284:	009b      	lsls	r3, r3, #2
 8018286:	4a15      	ldr	r2, [pc, #84]	@ (80182dc <prvAddNewTaskToReadyList+0xd4>)
 8018288:	441a      	add	r2, r3
 801828a:	687b      	ldr	r3, [r7, #4]
 801828c:	3304      	adds	r3, #4
 801828e:	4619      	mov	r1, r3
 8018290:	4610      	mov	r0, r2
 8018292:	f7fe fff0 	bl	8017276 <vListInsertEnd>
 8018296:	f001 fc99 	bl	8019bcc <vPortExitCritical>
 801829a:	4b0d      	ldr	r3, [pc, #52]	@ (80182d0 <prvAddNewTaskToReadyList+0xc8>)
 801829c:	681b      	ldr	r3, [r3, #0]
 801829e:	2b00      	cmp	r3, #0
 80182a0:	d00e      	beq.n	80182c0 <prvAddNewTaskToReadyList+0xb8>
 80182a2:	4b0a      	ldr	r3, [pc, #40]	@ (80182cc <prvAddNewTaskToReadyList+0xc4>)
 80182a4:	681b      	ldr	r3, [r3, #0]
 80182a6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80182a8:	687b      	ldr	r3, [r7, #4]
 80182aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182ac:	429a      	cmp	r2, r3
 80182ae:	d207      	bcs.n	80182c0 <prvAddNewTaskToReadyList+0xb8>
 80182b0:	4b0b      	ldr	r3, [pc, #44]	@ (80182e0 <prvAddNewTaskToReadyList+0xd8>)
 80182b2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80182b6:	601a      	str	r2, [r3, #0]
 80182b8:	f3bf 8f4f 	dsb	sy
 80182bc:	f3bf 8f6f 	isb	sy
 80182c0:	bf00      	nop
 80182c2:	3708      	adds	r7, #8
 80182c4:	46bd      	mov	sp, r7
 80182c6:	bd80      	pop	{r7, pc}
 80182c8:	20003cb0 	.word	0x20003cb0
 80182cc:	20003b10 	.word	0x20003b10
 80182d0:	20003cbc 	.word	0x20003cbc
 80182d4:	20003ccc 	.word	0x20003ccc
 80182d8:	20003cb8 	.word	0x20003cb8
 80182dc:	20003b14 	.word	0x20003b14
 80182e0:	e000ed04 	.word	0xe000ed04

080182e4 <vTaskDelayUntil>:
 80182e4:	b580      	push	{r7, lr}
 80182e6:	b08a      	sub	sp, #40	@ 0x28
 80182e8:	af00      	add	r7, sp, #0
 80182ea:	6078      	str	r0, [r7, #4]
 80182ec:	6039      	str	r1, [r7, #0]
 80182ee:	2300      	movs	r3, #0
 80182f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80182f2:	687b      	ldr	r3, [r7, #4]
 80182f4:	2b00      	cmp	r3, #0
 80182f6:	d10b      	bne.n	8018310 <vTaskDelayUntil+0x2c>
 80182f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80182fc:	f383 8811 	msr	BASEPRI, r3
 8018300:	f3bf 8f6f 	isb	sy
 8018304:	f3bf 8f4f 	dsb	sy
 8018308:	617b      	str	r3, [r7, #20]
 801830a:	bf00      	nop
 801830c:	bf00      	nop
 801830e:	e7fd      	b.n	801830c <vTaskDelayUntil+0x28>
 8018310:	683b      	ldr	r3, [r7, #0]
 8018312:	2b00      	cmp	r3, #0
 8018314:	d10b      	bne.n	801832e <vTaskDelayUntil+0x4a>
 8018316:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801831a:	f383 8811 	msr	BASEPRI, r3
 801831e:	f3bf 8f6f 	isb	sy
 8018322:	f3bf 8f4f 	dsb	sy
 8018326:	613b      	str	r3, [r7, #16]
 8018328:	bf00      	nop
 801832a:	bf00      	nop
 801832c:	e7fd      	b.n	801832a <vTaskDelayUntil+0x46>
 801832e:	4b2a      	ldr	r3, [pc, #168]	@ (80183d8 <vTaskDelayUntil+0xf4>)
 8018330:	681b      	ldr	r3, [r3, #0]
 8018332:	2b00      	cmp	r3, #0
 8018334:	d00b      	beq.n	801834e <vTaskDelayUntil+0x6a>
 8018336:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801833a:	f383 8811 	msr	BASEPRI, r3
 801833e:	f3bf 8f6f 	isb	sy
 8018342:	f3bf 8f4f 	dsb	sy
 8018346:	60fb      	str	r3, [r7, #12]
 8018348:	bf00      	nop
 801834a:	bf00      	nop
 801834c:	e7fd      	b.n	801834a <vTaskDelayUntil+0x66>
 801834e:	f000 f8f1 	bl	8018534 <vTaskSuspendAll>
 8018352:	4b22      	ldr	r3, [pc, #136]	@ (80183dc <vTaskDelayUntil+0xf8>)
 8018354:	681b      	ldr	r3, [r3, #0]
 8018356:	623b      	str	r3, [r7, #32]
 8018358:	687b      	ldr	r3, [r7, #4]
 801835a:	681b      	ldr	r3, [r3, #0]
 801835c:	683a      	ldr	r2, [r7, #0]
 801835e:	4413      	add	r3, r2
 8018360:	61fb      	str	r3, [r7, #28]
 8018362:	687b      	ldr	r3, [r7, #4]
 8018364:	681b      	ldr	r3, [r3, #0]
 8018366:	6a3a      	ldr	r2, [r7, #32]
 8018368:	429a      	cmp	r2, r3
 801836a:	d20b      	bcs.n	8018384 <vTaskDelayUntil+0xa0>
 801836c:	687b      	ldr	r3, [r7, #4]
 801836e:	681b      	ldr	r3, [r3, #0]
 8018370:	69fa      	ldr	r2, [r7, #28]
 8018372:	429a      	cmp	r2, r3
 8018374:	d211      	bcs.n	801839a <vTaskDelayUntil+0xb6>
 8018376:	69fa      	ldr	r2, [r7, #28]
 8018378:	6a3b      	ldr	r3, [r7, #32]
 801837a:	429a      	cmp	r2, r3
 801837c:	d90d      	bls.n	801839a <vTaskDelayUntil+0xb6>
 801837e:	2301      	movs	r3, #1
 8018380:	627b      	str	r3, [r7, #36]	@ 0x24
 8018382:	e00a      	b.n	801839a <vTaskDelayUntil+0xb6>
 8018384:	687b      	ldr	r3, [r7, #4]
 8018386:	681b      	ldr	r3, [r3, #0]
 8018388:	69fa      	ldr	r2, [r7, #28]
 801838a:	429a      	cmp	r2, r3
 801838c:	d303      	bcc.n	8018396 <vTaskDelayUntil+0xb2>
 801838e:	69fa      	ldr	r2, [r7, #28]
 8018390:	6a3b      	ldr	r3, [r7, #32]
 8018392:	429a      	cmp	r2, r3
 8018394:	d901      	bls.n	801839a <vTaskDelayUntil+0xb6>
 8018396:	2301      	movs	r3, #1
 8018398:	627b      	str	r3, [r7, #36]	@ 0x24
 801839a:	687b      	ldr	r3, [r7, #4]
 801839c:	69fa      	ldr	r2, [r7, #28]
 801839e:	601a      	str	r2, [r3, #0]
 80183a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80183a2:	2b00      	cmp	r3, #0
 80183a4:	d006      	beq.n	80183b4 <vTaskDelayUntil+0xd0>
 80183a6:	69fa      	ldr	r2, [r7, #28]
 80183a8:	6a3b      	ldr	r3, [r7, #32]
 80183aa:	1ad3      	subs	r3, r2, r3
 80183ac:	2100      	movs	r1, #0
 80183ae:	4618      	mov	r0, r3
 80183b0:	f000 feca 	bl	8019148 <prvAddCurrentTaskToDelayedList>
 80183b4:	f000 f8cc 	bl	8018550 <xTaskResumeAll>
 80183b8:	61b8      	str	r0, [r7, #24]
 80183ba:	69bb      	ldr	r3, [r7, #24]
 80183bc:	2b00      	cmp	r3, #0
 80183be:	d107      	bne.n	80183d0 <vTaskDelayUntil+0xec>
 80183c0:	4b07      	ldr	r3, [pc, #28]	@ (80183e0 <vTaskDelayUntil+0xfc>)
 80183c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80183c6:	601a      	str	r2, [r3, #0]
 80183c8:	f3bf 8f4f 	dsb	sy
 80183cc:	f3bf 8f6f 	isb	sy
 80183d0:	bf00      	nop
 80183d2:	3728      	adds	r7, #40	@ 0x28
 80183d4:	46bd      	mov	sp, r7
 80183d6:	bd80      	pop	{r7, pc}
 80183d8:	20003cd8 	.word	0x20003cd8
 80183dc:	20003cb4 	.word	0x20003cb4
 80183e0:	e000ed04 	.word	0xe000ed04

080183e4 <vTaskDelay>:
 80183e4:	b580      	push	{r7, lr}
 80183e6:	b084      	sub	sp, #16
 80183e8:	af00      	add	r7, sp, #0
 80183ea:	6078      	str	r0, [r7, #4]
 80183ec:	2300      	movs	r3, #0
 80183ee:	60fb      	str	r3, [r7, #12]
 80183f0:	687b      	ldr	r3, [r7, #4]
 80183f2:	2b00      	cmp	r3, #0
 80183f4:	d018      	beq.n	8018428 <vTaskDelay+0x44>
 80183f6:	4b14      	ldr	r3, [pc, #80]	@ (8018448 <vTaskDelay+0x64>)
 80183f8:	681b      	ldr	r3, [r3, #0]
 80183fa:	2b00      	cmp	r3, #0
 80183fc:	d00b      	beq.n	8018416 <vTaskDelay+0x32>
 80183fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018402:	f383 8811 	msr	BASEPRI, r3
 8018406:	f3bf 8f6f 	isb	sy
 801840a:	f3bf 8f4f 	dsb	sy
 801840e:	60bb      	str	r3, [r7, #8]
 8018410:	bf00      	nop
 8018412:	bf00      	nop
 8018414:	e7fd      	b.n	8018412 <vTaskDelay+0x2e>
 8018416:	f000 f88d 	bl	8018534 <vTaskSuspendAll>
 801841a:	2100      	movs	r1, #0
 801841c:	6878      	ldr	r0, [r7, #4]
 801841e:	f000 fe93 	bl	8019148 <prvAddCurrentTaskToDelayedList>
 8018422:	f000 f895 	bl	8018550 <xTaskResumeAll>
 8018426:	60f8      	str	r0, [r7, #12]
 8018428:	68fb      	ldr	r3, [r7, #12]
 801842a:	2b00      	cmp	r3, #0
 801842c:	d107      	bne.n	801843e <vTaskDelay+0x5a>
 801842e:	4b07      	ldr	r3, [pc, #28]	@ (801844c <vTaskDelay+0x68>)
 8018430:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018434:	601a      	str	r2, [r3, #0]
 8018436:	f3bf 8f4f 	dsb	sy
 801843a:	f3bf 8f6f 	isb	sy
 801843e:	bf00      	nop
 8018440:	3710      	adds	r7, #16
 8018442:	46bd      	mov	sp, r7
 8018444:	bd80      	pop	{r7, pc}
 8018446:	bf00      	nop
 8018448:	20003cd8 	.word	0x20003cd8
 801844c:	e000ed04 	.word	0xe000ed04

08018450 <vTaskStartScheduler>:
 8018450:	b580      	push	{r7, lr}
 8018452:	b08a      	sub	sp, #40	@ 0x28
 8018454:	af04      	add	r7, sp, #16
 8018456:	2300      	movs	r3, #0
 8018458:	60bb      	str	r3, [r7, #8]
 801845a:	2300      	movs	r3, #0
 801845c:	607b      	str	r3, [r7, #4]
 801845e:	463a      	mov	r2, r7
 8018460:	1d39      	adds	r1, r7, #4
 8018462:	f107 0308 	add.w	r3, r7, #8
 8018466:	4618      	mov	r0, r3
 8018468:	f7ea fe86 	bl	8003178 <vApplicationGetIdleTaskMemory>
 801846c:	6839      	ldr	r1, [r7, #0]
 801846e:	687b      	ldr	r3, [r7, #4]
 8018470:	68ba      	ldr	r2, [r7, #8]
 8018472:	9202      	str	r2, [sp, #8]
 8018474:	9301      	str	r3, [sp, #4]
 8018476:	2300      	movs	r3, #0
 8018478:	9300      	str	r3, [sp, #0]
 801847a:	2300      	movs	r3, #0
 801847c:	460a      	mov	r2, r1
 801847e:	4925      	ldr	r1, [pc, #148]	@ (8018514 <vTaskStartScheduler+0xc4>)
 8018480:	4825      	ldr	r0, [pc, #148]	@ (8018518 <vTaskStartScheduler+0xc8>)
 8018482:	f7ff fd45 	bl	8017f10 <xTaskCreateStatic>
 8018486:	4603      	mov	r3, r0
 8018488:	4a24      	ldr	r2, [pc, #144]	@ (801851c <vTaskStartScheduler+0xcc>)
 801848a:	6013      	str	r3, [r2, #0]
 801848c:	4b23      	ldr	r3, [pc, #140]	@ (801851c <vTaskStartScheduler+0xcc>)
 801848e:	681b      	ldr	r3, [r3, #0]
 8018490:	2b00      	cmp	r3, #0
 8018492:	d002      	beq.n	801849a <vTaskStartScheduler+0x4a>
 8018494:	2301      	movs	r3, #1
 8018496:	617b      	str	r3, [r7, #20]
 8018498:	e001      	b.n	801849e <vTaskStartScheduler+0x4e>
 801849a:	2300      	movs	r3, #0
 801849c:	617b      	str	r3, [r7, #20]
 801849e:	697b      	ldr	r3, [r7, #20]
 80184a0:	2b01      	cmp	r3, #1
 80184a2:	d102      	bne.n	80184aa <vTaskStartScheduler+0x5a>
 80184a4:	f000 feb6 	bl	8019214 <xTimerCreateTimerTask>
 80184a8:	6178      	str	r0, [r7, #20]
 80184aa:	697b      	ldr	r3, [r7, #20]
 80184ac:	2b01      	cmp	r3, #1
 80184ae:	d11d      	bne.n	80184ec <vTaskStartScheduler+0x9c>
 80184b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80184b4:	f383 8811 	msr	BASEPRI, r3
 80184b8:	f3bf 8f6f 	isb	sy
 80184bc:	f3bf 8f4f 	dsb	sy
 80184c0:	613b      	str	r3, [r7, #16]
 80184c2:	bf00      	nop
 80184c4:	4b16      	ldr	r3, [pc, #88]	@ (8018520 <vTaskStartScheduler+0xd0>)
 80184c6:	681b      	ldr	r3, [r3, #0]
 80184c8:	3358      	adds	r3, #88	@ 0x58
 80184ca:	4a16      	ldr	r2, [pc, #88]	@ (8018524 <vTaskStartScheduler+0xd4>)
 80184cc:	6013      	str	r3, [r2, #0]
 80184ce:	4b16      	ldr	r3, [pc, #88]	@ (8018528 <vTaskStartScheduler+0xd8>)
 80184d0:	f04f 32ff 	mov.w	r2, #4294967295
 80184d4:	601a      	str	r2, [r3, #0]
 80184d6:	4b15      	ldr	r3, [pc, #84]	@ (801852c <vTaskStartScheduler+0xdc>)
 80184d8:	2201      	movs	r2, #1
 80184da:	601a      	str	r2, [r3, #0]
 80184dc:	4b14      	ldr	r3, [pc, #80]	@ (8018530 <vTaskStartScheduler+0xe0>)
 80184de:	2200      	movs	r2, #0
 80184e0:	601a      	str	r2, [r3, #0]
 80184e2:	f7ea fe2f 	bl	8003144 <configureTimerForRunTimeStats>
 80184e6:	f001 fa9b 	bl	8019a20 <xPortStartScheduler>
 80184ea:	e00f      	b.n	801850c <vTaskStartScheduler+0xbc>
 80184ec:	697b      	ldr	r3, [r7, #20]
 80184ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80184f2:	d10b      	bne.n	801850c <vTaskStartScheduler+0xbc>
 80184f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80184f8:	f383 8811 	msr	BASEPRI, r3
 80184fc:	f3bf 8f6f 	isb	sy
 8018500:	f3bf 8f4f 	dsb	sy
 8018504:	60fb      	str	r3, [r7, #12]
 8018506:	bf00      	nop
 8018508:	bf00      	nop
 801850a:	e7fd      	b.n	8018508 <vTaskStartScheduler+0xb8>
 801850c:	bf00      	nop
 801850e:	3718      	adds	r7, #24
 8018510:	46bd      	mov	sp, r7
 8018512:	bd80      	pop	{r7, pc}
 8018514:	08020f9c 	.word	0x08020f9c
 8018518:	08018c81 	.word	0x08018c81
 801851c:	20003cd4 	.word	0x20003cd4
 8018520:	20003b10 	.word	0x20003b10
 8018524:	20000120 	.word	0x20000120
 8018528:	20003cd0 	.word	0x20003cd0
 801852c:	20003cbc 	.word	0x20003cbc
 8018530:	20003cb4 	.word	0x20003cb4

08018534 <vTaskSuspendAll>:
 8018534:	b480      	push	{r7}
 8018536:	af00      	add	r7, sp, #0
 8018538:	4b04      	ldr	r3, [pc, #16]	@ (801854c <vTaskSuspendAll+0x18>)
 801853a:	681b      	ldr	r3, [r3, #0]
 801853c:	3301      	adds	r3, #1
 801853e:	4a03      	ldr	r2, [pc, #12]	@ (801854c <vTaskSuspendAll+0x18>)
 8018540:	6013      	str	r3, [r2, #0]
 8018542:	bf00      	nop
 8018544:	46bd      	mov	sp, r7
 8018546:	f85d 7b04 	ldr.w	r7, [sp], #4
 801854a:	4770      	bx	lr
 801854c:	20003cd8 	.word	0x20003cd8

08018550 <xTaskResumeAll>:
 8018550:	b580      	push	{r7, lr}
 8018552:	b084      	sub	sp, #16
 8018554:	af00      	add	r7, sp, #0
 8018556:	2300      	movs	r3, #0
 8018558:	60fb      	str	r3, [r7, #12]
 801855a:	2300      	movs	r3, #0
 801855c:	60bb      	str	r3, [r7, #8]
 801855e:	4b42      	ldr	r3, [pc, #264]	@ (8018668 <xTaskResumeAll+0x118>)
 8018560:	681b      	ldr	r3, [r3, #0]
 8018562:	2b00      	cmp	r3, #0
 8018564:	d10b      	bne.n	801857e <xTaskResumeAll+0x2e>
 8018566:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801856a:	f383 8811 	msr	BASEPRI, r3
 801856e:	f3bf 8f6f 	isb	sy
 8018572:	f3bf 8f4f 	dsb	sy
 8018576:	603b      	str	r3, [r7, #0]
 8018578:	bf00      	nop
 801857a:	bf00      	nop
 801857c:	e7fd      	b.n	801857a <xTaskResumeAll+0x2a>
 801857e:	f001 faf3 	bl	8019b68 <vPortEnterCritical>
 8018582:	4b39      	ldr	r3, [pc, #228]	@ (8018668 <xTaskResumeAll+0x118>)
 8018584:	681b      	ldr	r3, [r3, #0]
 8018586:	3b01      	subs	r3, #1
 8018588:	4a37      	ldr	r2, [pc, #220]	@ (8018668 <xTaskResumeAll+0x118>)
 801858a:	6013      	str	r3, [r2, #0]
 801858c:	4b36      	ldr	r3, [pc, #216]	@ (8018668 <xTaskResumeAll+0x118>)
 801858e:	681b      	ldr	r3, [r3, #0]
 8018590:	2b00      	cmp	r3, #0
 8018592:	d161      	bne.n	8018658 <xTaskResumeAll+0x108>
 8018594:	4b35      	ldr	r3, [pc, #212]	@ (801866c <xTaskResumeAll+0x11c>)
 8018596:	681b      	ldr	r3, [r3, #0]
 8018598:	2b00      	cmp	r3, #0
 801859a:	d05d      	beq.n	8018658 <xTaskResumeAll+0x108>
 801859c:	e02e      	b.n	80185fc <xTaskResumeAll+0xac>
 801859e:	4b34      	ldr	r3, [pc, #208]	@ (8018670 <xTaskResumeAll+0x120>)
 80185a0:	68db      	ldr	r3, [r3, #12]
 80185a2:	68db      	ldr	r3, [r3, #12]
 80185a4:	60fb      	str	r3, [r7, #12]
 80185a6:	68fb      	ldr	r3, [r7, #12]
 80185a8:	3318      	adds	r3, #24
 80185aa:	4618      	mov	r0, r3
 80185ac:	f7fe fec0 	bl	8017330 <uxListRemove>
 80185b0:	68fb      	ldr	r3, [r7, #12]
 80185b2:	3304      	adds	r3, #4
 80185b4:	4618      	mov	r0, r3
 80185b6:	f7fe febb 	bl	8017330 <uxListRemove>
 80185ba:	68fb      	ldr	r3, [r7, #12]
 80185bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80185be:	2201      	movs	r2, #1
 80185c0:	409a      	lsls	r2, r3
 80185c2:	4b2c      	ldr	r3, [pc, #176]	@ (8018674 <xTaskResumeAll+0x124>)
 80185c4:	681b      	ldr	r3, [r3, #0]
 80185c6:	4313      	orrs	r3, r2
 80185c8:	4a2a      	ldr	r2, [pc, #168]	@ (8018674 <xTaskResumeAll+0x124>)
 80185ca:	6013      	str	r3, [r2, #0]
 80185cc:	68fb      	ldr	r3, [r7, #12]
 80185ce:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80185d0:	4613      	mov	r3, r2
 80185d2:	009b      	lsls	r3, r3, #2
 80185d4:	4413      	add	r3, r2
 80185d6:	009b      	lsls	r3, r3, #2
 80185d8:	4a27      	ldr	r2, [pc, #156]	@ (8018678 <xTaskResumeAll+0x128>)
 80185da:	441a      	add	r2, r3
 80185dc:	68fb      	ldr	r3, [r7, #12]
 80185de:	3304      	adds	r3, #4
 80185e0:	4619      	mov	r1, r3
 80185e2:	4610      	mov	r0, r2
 80185e4:	f7fe fe47 	bl	8017276 <vListInsertEnd>
 80185e8:	68fb      	ldr	r3, [r7, #12]
 80185ea:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80185ec:	4b23      	ldr	r3, [pc, #140]	@ (801867c <xTaskResumeAll+0x12c>)
 80185ee:	681b      	ldr	r3, [r3, #0]
 80185f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80185f2:	429a      	cmp	r2, r3
 80185f4:	d302      	bcc.n	80185fc <xTaskResumeAll+0xac>
 80185f6:	4b22      	ldr	r3, [pc, #136]	@ (8018680 <xTaskResumeAll+0x130>)
 80185f8:	2201      	movs	r2, #1
 80185fa:	601a      	str	r2, [r3, #0]
 80185fc:	4b1c      	ldr	r3, [pc, #112]	@ (8018670 <xTaskResumeAll+0x120>)
 80185fe:	681b      	ldr	r3, [r3, #0]
 8018600:	2b00      	cmp	r3, #0
 8018602:	d1cc      	bne.n	801859e <xTaskResumeAll+0x4e>
 8018604:	68fb      	ldr	r3, [r7, #12]
 8018606:	2b00      	cmp	r3, #0
 8018608:	d001      	beq.n	801860e <xTaskResumeAll+0xbe>
 801860a:	f000 fbf5 	bl	8018df8 <prvResetNextTaskUnblockTime>
 801860e:	4b1d      	ldr	r3, [pc, #116]	@ (8018684 <xTaskResumeAll+0x134>)
 8018610:	681b      	ldr	r3, [r3, #0]
 8018612:	607b      	str	r3, [r7, #4]
 8018614:	687b      	ldr	r3, [r7, #4]
 8018616:	2b00      	cmp	r3, #0
 8018618:	d010      	beq.n	801863c <xTaskResumeAll+0xec>
 801861a:	f000 f847 	bl	80186ac <xTaskIncrementTick>
 801861e:	4603      	mov	r3, r0
 8018620:	2b00      	cmp	r3, #0
 8018622:	d002      	beq.n	801862a <xTaskResumeAll+0xda>
 8018624:	4b16      	ldr	r3, [pc, #88]	@ (8018680 <xTaskResumeAll+0x130>)
 8018626:	2201      	movs	r2, #1
 8018628:	601a      	str	r2, [r3, #0]
 801862a:	687b      	ldr	r3, [r7, #4]
 801862c:	3b01      	subs	r3, #1
 801862e:	607b      	str	r3, [r7, #4]
 8018630:	687b      	ldr	r3, [r7, #4]
 8018632:	2b00      	cmp	r3, #0
 8018634:	d1f1      	bne.n	801861a <xTaskResumeAll+0xca>
 8018636:	4b13      	ldr	r3, [pc, #76]	@ (8018684 <xTaskResumeAll+0x134>)
 8018638:	2200      	movs	r2, #0
 801863a:	601a      	str	r2, [r3, #0]
 801863c:	4b10      	ldr	r3, [pc, #64]	@ (8018680 <xTaskResumeAll+0x130>)
 801863e:	681b      	ldr	r3, [r3, #0]
 8018640:	2b00      	cmp	r3, #0
 8018642:	d009      	beq.n	8018658 <xTaskResumeAll+0x108>
 8018644:	2301      	movs	r3, #1
 8018646:	60bb      	str	r3, [r7, #8]
 8018648:	4b0f      	ldr	r3, [pc, #60]	@ (8018688 <xTaskResumeAll+0x138>)
 801864a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801864e:	601a      	str	r2, [r3, #0]
 8018650:	f3bf 8f4f 	dsb	sy
 8018654:	f3bf 8f6f 	isb	sy
 8018658:	f001 fab8 	bl	8019bcc <vPortExitCritical>
 801865c:	68bb      	ldr	r3, [r7, #8]
 801865e:	4618      	mov	r0, r3
 8018660:	3710      	adds	r7, #16
 8018662:	46bd      	mov	sp, r7
 8018664:	bd80      	pop	{r7, pc}
 8018666:	bf00      	nop
 8018668:	20003cd8 	.word	0x20003cd8
 801866c:	20003cb0 	.word	0x20003cb0
 8018670:	20003c70 	.word	0x20003c70
 8018674:	20003cb8 	.word	0x20003cb8
 8018678:	20003b14 	.word	0x20003b14
 801867c:	20003b10 	.word	0x20003b10
 8018680:	20003cc4 	.word	0x20003cc4
 8018684:	20003cc0 	.word	0x20003cc0
 8018688:	e000ed04 	.word	0xe000ed04

0801868c <xTaskGetTickCount>:
 801868c:	b480      	push	{r7}
 801868e:	b083      	sub	sp, #12
 8018690:	af00      	add	r7, sp, #0
 8018692:	4b05      	ldr	r3, [pc, #20]	@ (80186a8 <xTaskGetTickCount+0x1c>)
 8018694:	681b      	ldr	r3, [r3, #0]
 8018696:	607b      	str	r3, [r7, #4]
 8018698:	687b      	ldr	r3, [r7, #4]
 801869a:	4618      	mov	r0, r3
 801869c:	370c      	adds	r7, #12
 801869e:	46bd      	mov	sp, r7
 80186a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80186a4:	4770      	bx	lr
 80186a6:	bf00      	nop
 80186a8:	20003cb4 	.word	0x20003cb4

080186ac <xTaskIncrementTick>:
 80186ac:	b580      	push	{r7, lr}
 80186ae:	b086      	sub	sp, #24
 80186b0:	af00      	add	r7, sp, #0
 80186b2:	2300      	movs	r3, #0
 80186b4:	617b      	str	r3, [r7, #20]
 80186b6:	4b4f      	ldr	r3, [pc, #316]	@ (80187f4 <xTaskIncrementTick+0x148>)
 80186b8:	681b      	ldr	r3, [r3, #0]
 80186ba:	2b00      	cmp	r3, #0
 80186bc:	f040 808f 	bne.w	80187de <xTaskIncrementTick+0x132>
 80186c0:	4b4d      	ldr	r3, [pc, #308]	@ (80187f8 <xTaskIncrementTick+0x14c>)
 80186c2:	681b      	ldr	r3, [r3, #0]
 80186c4:	3301      	adds	r3, #1
 80186c6:	613b      	str	r3, [r7, #16]
 80186c8:	4a4b      	ldr	r2, [pc, #300]	@ (80187f8 <xTaskIncrementTick+0x14c>)
 80186ca:	693b      	ldr	r3, [r7, #16]
 80186cc:	6013      	str	r3, [r2, #0]
 80186ce:	693b      	ldr	r3, [r7, #16]
 80186d0:	2b00      	cmp	r3, #0
 80186d2:	d121      	bne.n	8018718 <xTaskIncrementTick+0x6c>
 80186d4:	4b49      	ldr	r3, [pc, #292]	@ (80187fc <xTaskIncrementTick+0x150>)
 80186d6:	681b      	ldr	r3, [r3, #0]
 80186d8:	681b      	ldr	r3, [r3, #0]
 80186da:	2b00      	cmp	r3, #0
 80186dc:	d00b      	beq.n	80186f6 <xTaskIncrementTick+0x4a>
 80186de:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80186e2:	f383 8811 	msr	BASEPRI, r3
 80186e6:	f3bf 8f6f 	isb	sy
 80186ea:	f3bf 8f4f 	dsb	sy
 80186ee:	603b      	str	r3, [r7, #0]
 80186f0:	bf00      	nop
 80186f2:	bf00      	nop
 80186f4:	e7fd      	b.n	80186f2 <xTaskIncrementTick+0x46>
 80186f6:	4b41      	ldr	r3, [pc, #260]	@ (80187fc <xTaskIncrementTick+0x150>)
 80186f8:	681b      	ldr	r3, [r3, #0]
 80186fa:	60fb      	str	r3, [r7, #12]
 80186fc:	4b40      	ldr	r3, [pc, #256]	@ (8018800 <xTaskIncrementTick+0x154>)
 80186fe:	681b      	ldr	r3, [r3, #0]
 8018700:	4a3e      	ldr	r2, [pc, #248]	@ (80187fc <xTaskIncrementTick+0x150>)
 8018702:	6013      	str	r3, [r2, #0]
 8018704:	4a3e      	ldr	r2, [pc, #248]	@ (8018800 <xTaskIncrementTick+0x154>)
 8018706:	68fb      	ldr	r3, [r7, #12]
 8018708:	6013      	str	r3, [r2, #0]
 801870a:	4b3e      	ldr	r3, [pc, #248]	@ (8018804 <xTaskIncrementTick+0x158>)
 801870c:	681b      	ldr	r3, [r3, #0]
 801870e:	3301      	adds	r3, #1
 8018710:	4a3c      	ldr	r2, [pc, #240]	@ (8018804 <xTaskIncrementTick+0x158>)
 8018712:	6013      	str	r3, [r2, #0]
 8018714:	f000 fb70 	bl	8018df8 <prvResetNextTaskUnblockTime>
 8018718:	4b3b      	ldr	r3, [pc, #236]	@ (8018808 <xTaskIncrementTick+0x15c>)
 801871a:	681b      	ldr	r3, [r3, #0]
 801871c:	693a      	ldr	r2, [r7, #16]
 801871e:	429a      	cmp	r2, r3
 8018720:	d348      	bcc.n	80187b4 <xTaskIncrementTick+0x108>
 8018722:	4b36      	ldr	r3, [pc, #216]	@ (80187fc <xTaskIncrementTick+0x150>)
 8018724:	681b      	ldr	r3, [r3, #0]
 8018726:	681b      	ldr	r3, [r3, #0]
 8018728:	2b00      	cmp	r3, #0
 801872a:	d104      	bne.n	8018736 <xTaskIncrementTick+0x8a>
 801872c:	4b36      	ldr	r3, [pc, #216]	@ (8018808 <xTaskIncrementTick+0x15c>)
 801872e:	f04f 32ff 	mov.w	r2, #4294967295
 8018732:	601a      	str	r2, [r3, #0]
 8018734:	e03e      	b.n	80187b4 <xTaskIncrementTick+0x108>
 8018736:	4b31      	ldr	r3, [pc, #196]	@ (80187fc <xTaskIncrementTick+0x150>)
 8018738:	681b      	ldr	r3, [r3, #0]
 801873a:	68db      	ldr	r3, [r3, #12]
 801873c:	68db      	ldr	r3, [r3, #12]
 801873e:	60bb      	str	r3, [r7, #8]
 8018740:	68bb      	ldr	r3, [r7, #8]
 8018742:	685b      	ldr	r3, [r3, #4]
 8018744:	607b      	str	r3, [r7, #4]
 8018746:	693a      	ldr	r2, [r7, #16]
 8018748:	687b      	ldr	r3, [r7, #4]
 801874a:	429a      	cmp	r2, r3
 801874c:	d203      	bcs.n	8018756 <xTaskIncrementTick+0xaa>
 801874e:	4a2e      	ldr	r2, [pc, #184]	@ (8018808 <xTaskIncrementTick+0x15c>)
 8018750:	687b      	ldr	r3, [r7, #4]
 8018752:	6013      	str	r3, [r2, #0]
 8018754:	e02e      	b.n	80187b4 <xTaskIncrementTick+0x108>
 8018756:	68bb      	ldr	r3, [r7, #8]
 8018758:	3304      	adds	r3, #4
 801875a:	4618      	mov	r0, r3
 801875c:	f7fe fde8 	bl	8017330 <uxListRemove>
 8018760:	68bb      	ldr	r3, [r7, #8]
 8018762:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018764:	2b00      	cmp	r3, #0
 8018766:	d004      	beq.n	8018772 <xTaskIncrementTick+0xc6>
 8018768:	68bb      	ldr	r3, [r7, #8]
 801876a:	3318      	adds	r3, #24
 801876c:	4618      	mov	r0, r3
 801876e:	f7fe fddf 	bl	8017330 <uxListRemove>
 8018772:	68bb      	ldr	r3, [r7, #8]
 8018774:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018776:	2201      	movs	r2, #1
 8018778:	409a      	lsls	r2, r3
 801877a:	4b24      	ldr	r3, [pc, #144]	@ (801880c <xTaskIncrementTick+0x160>)
 801877c:	681b      	ldr	r3, [r3, #0]
 801877e:	4313      	orrs	r3, r2
 8018780:	4a22      	ldr	r2, [pc, #136]	@ (801880c <xTaskIncrementTick+0x160>)
 8018782:	6013      	str	r3, [r2, #0]
 8018784:	68bb      	ldr	r3, [r7, #8]
 8018786:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018788:	4613      	mov	r3, r2
 801878a:	009b      	lsls	r3, r3, #2
 801878c:	4413      	add	r3, r2
 801878e:	009b      	lsls	r3, r3, #2
 8018790:	4a1f      	ldr	r2, [pc, #124]	@ (8018810 <xTaskIncrementTick+0x164>)
 8018792:	441a      	add	r2, r3
 8018794:	68bb      	ldr	r3, [r7, #8]
 8018796:	3304      	adds	r3, #4
 8018798:	4619      	mov	r1, r3
 801879a:	4610      	mov	r0, r2
 801879c:	f7fe fd6b 	bl	8017276 <vListInsertEnd>
 80187a0:	68bb      	ldr	r3, [r7, #8]
 80187a2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80187a4:	4b1b      	ldr	r3, [pc, #108]	@ (8018814 <xTaskIncrementTick+0x168>)
 80187a6:	681b      	ldr	r3, [r3, #0]
 80187a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80187aa:	429a      	cmp	r2, r3
 80187ac:	d3b9      	bcc.n	8018722 <xTaskIncrementTick+0x76>
 80187ae:	2301      	movs	r3, #1
 80187b0:	617b      	str	r3, [r7, #20]
 80187b2:	e7b6      	b.n	8018722 <xTaskIncrementTick+0x76>
 80187b4:	4b17      	ldr	r3, [pc, #92]	@ (8018814 <xTaskIncrementTick+0x168>)
 80187b6:	681b      	ldr	r3, [r3, #0]
 80187b8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80187ba:	4915      	ldr	r1, [pc, #84]	@ (8018810 <xTaskIncrementTick+0x164>)
 80187bc:	4613      	mov	r3, r2
 80187be:	009b      	lsls	r3, r3, #2
 80187c0:	4413      	add	r3, r2
 80187c2:	009b      	lsls	r3, r3, #2
 80187c4:	440b      	add	r3, r1
 80187c6:	681b      	ldr	r3, [r3, #0]
 80187c8:	2b01      	cmp	r3, #1
 80187ca:	d901      	bls.n	80187d0 <xTaskIncrementTick+0x124>
 80187cc:	2301      	movs	r3, #1
 80187ce:	617b      	str	r3, [r7, #20]
 80187d0:	4b11      	ldr	r3, [pc, #68]	@ (8018818 <xTaskIncrementTick+0x16c>)
 80187d2:	681b      	ldr	r3, [r3, #0]
 80187d4:	2b00      	cmp	r3, #0
 80187d6:	d007      	beq.n	80187e8 <xTaskIncrementTick+0x13c>
 80187d8:	2301      	movs	r3, #1
 80187da:	617b      	str	r3, [r7, #20]
 80187dc:	e004      	b.n	80187e8 <xTaskIncrementTick+0x13c>
 80187de:	4b0f      	ldr	r3, [pc, #60]	@ (801881c <xTaskIncrementTick+0x170>)
 80187e0:	681b      	ldr	r3, [r3, #0]
 80187e2:	3301      	adds	r3, #1
 80187e4:	4a0d      	ldr	r2, [pc, #52]	@ (801881c <xTaskIncrementTick+0x170>)
 80187e6:	6013      	str	r3, [r2, #0]
 80187e8:	697b      	ldr	r3, [r7, #20]
 80187ea:	4618      	mov	r0, r3
 80187ec:	3718      	adds	r7, #24
 80187ee:	46bd      	mov	sp, r7
 80187f0:	bd80      	pop	{r7, pc}
 80187f2:	bf00      	nop
 80187f4:	20003cd8 	.word	0x20003cd8
 80187f8:	20003cb4 	.word	0x20003cb4
 80187fc:	20003c68 	.word	0x20003c68
 8018800:	20003c6c 	.word	0x20003c6c
 8018804:	20003cc8 	.word	0x20003cc8
 8018808:	20003cd0 	.word	0x20003cd0
 801880c:	20003cb8 	.word	0x20003cb8
 8018810:	20003b14 	.word	0x20003b14
 8018814:	20003b10 	.word	0x20003b10
 8018818:	20003cc4 	.word	0x20003cc4
 801881c:	20003cc0 	.word	0x20003cc0

08018820 <vTaskSwitchContext>:
 8018820:	b580      	push	{r7, lr}
 8018822:	b086      	sub	sp, #24
 8018824:	af00      	add	r7, sp, #0
 8018826:	4b3e      	ldr	r3, [pc, #248]	@ (8018920 <vTaskSwitchContext+0x100>)
 8018828:	681b      	ldr	r3, [r3, #0]
 801882a:	2b00      	cmp	r3, #0
 801882c:	d003      	beq.n	8018836 <vTaskSwitchContext+0x16>
 801882e:	4b3d      	ldr	r3, [pc, #244]	@ (8018924 <vTaskSwitchContext+0x104>)
 8018830:	2201      	movs	r2, #1
 8018832:	601a      	str	r2, [r3, #0]
 8018834:	e06f      	b.n	8018916 <vTaskSwitchContext+0xf6>
 8018836:	4b3b      	ldr	r3, [pc, #236]	@ (8018924 <vTaskSwitchContext+0x104>)
 8018838:	2200      	movs	r2, #0
 801883a:	601a      	str	r2, [r3, #0]
 801883c:	f7ea fc89 	bl	8003152 <getRunTimeCounterValue>
 8018840:	4603      	mov	r3, r0
 8018842:	4a39      	ldr	r2, [pc, #228]	@ (8018928 <vTaskSwitchContext+0x108>)
 8018844:	6013      	str	r3, [r2, #0]
 8018846:	4b38      	ldr	r3, [pc, #224]	@ (8018928 <vTaskSwitchContext+0x108>)
 8018848:	681a      	ldr	r2, [r3, #0]
 801884a:	4b38      	ldr	r3, [pc, #224]	@ (801892c <vTaskSwitchContext+0x10c>)
 801884c:	681b      	ldr	r3, [r3, #0]
 801884e:	429a      	cmp	r2, r3
 8018850:	d909      	bls.n	8018866 <vTaskSwitchContext+0x46>
 8018852:	4b37      	ldr	r3, [pc, #220]	@ (8018930 <vTaskSwitchContext+0x110>)
 8018854:	681b      	ldr	r3, [r3, #0]
 8018856:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8018858:	4a33      	ldr	r2, [pc, #204]	@ (8018928 <vTaskSwitchContext+0x108>)
 801885a:	6810      	ldr	r0, [r2, #0]
 801885c:	4a33      	ldr	r2, [pc, #204]	@ (801892c <vTaskSwitchContext+0x10c>)
 801885e:	6812      	ldr	r2, [r2, #0]
 8018860:	1a82      	subs	r2, r0, r2
 8018862:	440a      	add	r2, r1
 8018864:	655a      	str	r2, [r3, #84]	@ 0x54
 8018866:	4b30      	ldr	r3, [pc, #192]	@ (8018928 <vTaskSwitchContext+0x108>)
 8018868:	681b      	ldr	r3, [r3, #0]
 801886a:	4a30      	ldr	r2, [pc, #192]	@ (801892c <vTaskSwitchContext+0x10c>)
 801886c:	6013      	str	r3, [r2, #0]
 801886e:	4b30      	ldr	r3, [pc, #192]	@ (8018930 <vTaskSwitchContext+0x110>)
 8018870:	681b      	ldr	r3, [r3, #0]
 8018872:	681a      	ldr	r2, [r3, #0]
 8018874:	4b2e      	ldr	r3, [pc, #184]	@ (8018930 <vTaskSwitchContext+0x110>)
 8018876:	681b      	ldr	r3, [r3, #0]
 8018878:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801887a:	429a      	cmp	r2, r3
 801887c:	d808      	bhi.n	8018890 <vTaskSwitchContext+0x70>
 801887e:	4b2c      	ldr	r3, [pc, #176]	@ (8018930 <vTaskSwitchContext+0x110>)
 8018880:	681a      	ldr	r2, [r3, #0]
 8018882:	4b2b      	ldr	r3, [pc, #172]	@ (8018930 <vTaskSwitchContext+0x110>)
 8018884:	681b      	ldr	r3, [r3, #0]
 8018886:	3334      	adds	r3, #52	@ 0x34
 8018888:	4619      	mov	r1, r3
 801888a:	4610      	mov	r0, r2
 801888c:	f7ea fc69 	bl	8003162 <vApplicationStackOverflowHook>
 8018890:	4b28      	ldr	r3, [pc, #160]	@ (8018934 <vTaskSwitchContext+0x114>)
 8018892:	681b      	ldr	r3, [r3, #0]
 8018894:	60fb      	str	r3, [r7, #12]
 8018896:	68fb      	ldr	r3, [r7, #12]
 8018898:	fab3 f383 	clz	r3, r3
 801889c:	72fb      	strb	r3, [r7, #11]
 801889e:	7afb      	ldrb	r3, [r7, #11]
 80188a0:	f1c3 031f 	rsb	r3, r3, #31
 80188a4:	617b      	str	r3, [r7, #20]
 80188a6:	4924      	ldr	r1, [pc, #144]	@ (8018938 <vTaskSwitchContext+0x118>)
 80188a8:	697a      	ldr	r2, [r7, #20]
 80188aa:	4613      	mov	r3, r2
 80188ac:	009b      	lsls	r3, r3, #2
 80188ae:	4413      	add	r3, r2
 80188b0:	009b      	lsls	r3, r3, #2
 80188b2:	440b      	add	r3, r1
 80188b4:	681b      	ldr	r3, [r3, #0]
 80188b6:	2b00      	cmp	r3, #0
 80188b8:	d10b      	bne.n	80188d2 <vTaskSwitchContext+0xb2>
 80188ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80188be:	f383 8811 	msr	BASEPRI, r3
 80188c2:	f3bf 8f6f 	isb	sy
 80188c6:	f3bf 8f4f 	dsb	sy
 80188ca:	607b      	str	r3, [r7, #4]
 80188cc:	bf00      	nop
 80188ce:	bf00      	nop
 80188d0:	e7fd      	b.n	80188ce <vTaskSwitchContext+0xae>
 80188d2:	697a      	ldr	r2, [r7, #20]
 80188d4:	4613      	mov	r3, r2
 80188d6:	009b      	lsls	r3, r3, #2
 80188d8:	4413      	add	r3, r2
 80188da:	009b      	lsls	r3, r3, #2
 80188dc:	4a16      	ldr	r2, [pc, #88]	@ (8018938 <vTaskSwitchContext+0x118>)
 80188de:	4413      	add	r3, r2
 80188e0:	613b      	str	r3, [r7, #16]
 80188e2:	693b      	ldr	r3, [r7, #16]
 80188e4:	685b      	ldr	r3, [r3, #4]
 80188e6:	685a      	ldr	r2, [r3, #4]
 80188e8:	693b      	ldr	r3, [r7, #16]
 80188ea:	605a      	str	r2, [r3, #4]
 80188ec:	693b      	ldr	r3, [r7, #16]
 80188ee:	685a      	ldr	r2, [r3, #4]
 80188f0:	693b      	ldr	r3, [r7, #16]
 80188f2:	3308      	adds	r3, #8
 80188f4:	429a      	cmp	r2, r3
 80188f6:	d104      	bne.n	8018902 <vTaskSwitchContext+0xe2>
 80188f8:	693b      	ldr	r3, [r7, #16]
 80188fa:	685b      	ldr	r3, [r3, #4]
 80188fc:	685a      	ldr	r2, [r3, #4]
 80188fe:	693b      	ldr	r3, [r7, #16]
 8018900:	605a      	str	r2, [r3, #4]
 8018902:	693b      	ldr	r3, [r7, #16]
 8018904:	685b      	ldr	r3, [r3, #4]
 8018906:	68db      	ldr	r3, [r3, #12]
 8018908:	4a09      	ldr	r2, [pc, #36]	@ (8018930 <vTaskSwitchContext+0x110>)
 801890a:	6013      	str	r3, [r2, #0]
 801890c:	4b08      	ldr	r3, [pc, #32]	@ (8018930 <vTaskSwitchContext+0x110>)
 801890e:	681b      	ldr	r3, [r3, #0]
 8018910:	3358      	adds	r3, #88	@ 0x58
 8018912:	4a0a      	ldr	r2, [pc, #40]	@ (801893c <vTaskSwitchContext+0x11c>)
 8018914:	6013      	str	r3, [r2, #0]
 8018916:	bf00      	nop
 8018918:	3718      	adds	r7, #24
 801891a:	46bd      	mov	sp, r7
 801891c:	bd80      	pop	{r7, pc}
 801891e:	bf00      	nop
 8018920:	20003cd8 	.word	0x20003cd8
 8018924:	20003cc4 	.word	0x20003cc4
 8018928:	20003ce0 	.word	0x20003ce0
 801892c:	20003cdc 	.word	0x20003cdc
 8018930:	20003b10 	.word	0x20003b10
 8018934:	20003cb8 	.word	0x20003cb8
 8018938:	20003b14 	.word	0x20003b14
 801893c:	20000120 	.word	0x20000120

08018940 <vTaskPlaceOnEventList>:
 8018940:	b580      	push	{r7, lr}
 8018942:	b084      	sub	sp, #16
 8018944:	af00      	add	r7, sp, #0
 8018946:	6078      	str	r0, [r7, #4]
 8018948:	6039      	str	r1, [r7, #0]
 801894a:	687b      	ldr	r3, [r7, #4]
 801894c:	2b00      	cmp	r3, #0
 801894e:	d10b      	bne.n	8018968 <vTaskPlaceOnEventList+0x28>
 8018950:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018954:	f383 8811 	msr	BASEPRI, r3
 8018958:	f3bf 8f6f 	isb	sy
 801895c:	f3bf 8f4f 	dsb	sy
 8018960:	60fb      	str	r3, [r7, #12]
 8018962:	bf00      	nop
 8018964:	bf00      	nop
 8018966:	e7fd      	b.n	8018964 <vTaskPlaceOnEventList+0x24>
 8018968:	4b07      	ldr	r3, [pc, #28]	@ (8018988 <vTaskPlaceOnEventList+0x48>)
 801896a:	681b      	ldr	r3, [r3, #0]
 801896c:	3318      	adds	r3, #24
 801896e:	4619      	mov	r1, r3
 8018970:	6878      	ldr	r0, [r7, #4]
 8018972:	f7fe fca4 	bl	80172be <vListInsert>
 8018976:	2101      	movs	r1, #1
 8018978:	6838      	ldr	r0, [r7, #0]
 801897a:	f000 fbe5 	bl	8019148 <prvAddCurrentTaskToDelayedList>
 801897e:	bf00      	nop
 8018980:	3710      	adds	r7, #16
 8018982:	46bd      	mov	sp, r7
 8018984:	bd80      	pop	{r7, pc}
 8018986:	bf00      	nop
 8018988:	20003b10 	.word	0x20003b10

0801898c <vTaskPlaceOnEventListRestricted>:
 801898c:	b580      	push	{r7, lr}
 801898e:	b086      	sub	sp, #24
 8018990:	af00      	add	r7, sp, #0
 8018992:	60f8      	str	r0, [r7, #12]
 8018994:	60b9      	str	r1, [r7, #8]
 8018996:	607a      	str	r2, [r7, #4]
 8018998:	68fb      	ldr	r3, [r7, #12]
 801899a:	2b00      	cmp	r3, #0
 801899c:	d10b      	bne.n	80189b6 <vTaskPlaceOnEventListRestricted+0x2a>
 801899e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80189a2:	f383 8811 	msr	BASEPRI, r3
 80189a6:	f3bf 8f6f 	isb	sy
 80189aa:	f3bf 8f4f 	dsb	sy
 80189ae:	617b      	str	r3, [r7, #20]
 80189b0:	bf00      	nop
 80189b2:	bf00      	nop
 80189b4:	e7fd      	b.n	80189b2 <vTaskPlaceOnEventListRestricted+0x26>
 80189b6:	4b0a      	ldr	r3, [pc, #40]	@ (80189e0 <vTaskPlaceOnEventListRestricted+0x54>)
 80189b8:	681b      	ldr	r3, [r3, #0]
 80189ba:	3318      	adds	r3, #24
 80189bc:	4619      	mov	r1, r3
 80189be:	68f8      	ldr	r0, [r7, #12]
 80189c0:	f7fe fc59 	bl	8017276 <vListInsertEnd>
 80189c4:	687b      	ldr	r3, [r7, #4]
 80189c6:	2b00      	cmp	r3, #0
 80189c8:	d002      	beq.n	80189d0 <vTaskPlaceOnEventListRestricted+0x44>
 80189ca:	f04f 33ff 	mov.w	r3, #4294967295
 80189ce:	60bb      	str	r3, [r7, #8]
 80189d0:	6879      	ldr	r1, [r7, #4]
 80189d2:	68b8      	ldr	r0, [r7, #8]
 80189d4:	f000 fbb8 	bl	8019148 <prvAddCurrentTaskToDelayedList>
 80189d8:	bf00      	nop
 80189da:	3718      	adds	r7, #24
 80189dc:	46bd      	mov	sp, r7
 80189de:	bd80      	pop	{r7, pc}
 80189e0:	20003b10 	.word	0x20003b10

080189e4 <xTaskRemoveFromEventList>:
 80189e4:	b580      	push	{r7, lr}
 80189e6:	b086      	sub	sp, #24
 80189e8:	af00      	add	r7, sp, #0
 80189ea:	6078      	str	r0, [r7, #4]
 80189ec:	687b      	ldr	r3, [r7, #4]
 80189ee:	68db      	ldr	r3, [r3, #12]
 80189f0:	68db      	ldr	r3, [r3, #12]
 80189f2:	613b      	str	r3, [r7, #16]
 80189f4:	693b      	ldr	r3, [r7, #16]
 80189f6:	2b00      	cmp	r3, #0
 80189f8:	d10b      	bne.n	8018a12 <xTaskRemoveFromEventList+0x2e>
 80189fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80189fe:	f383 8811 	msr	BASEPRI, r3
 8018a02:	f3bf 8f6f 	isb	sy
 8018a06:	f3bf 8f4f 	dsb	sy
 8018a0a:	60fb      	str	r3, [r7, #12]
 8018a0c:	bf00      	nop
 8018a0e:	bf00      	nop
 8018a10:	e7fd      	b.n	8018a0e <xTaskRemoveFromEventList+0x2a>
 8018a12:	693b      	ldr	r3, [r7, #16]
 8018a14:	3318      	adds	r3, #24
 8018a16:	4618      	mov	r0, r3
 8018a18:	f7fe fc8a 	bl	8017330 <uxListRemove>
 8018a1c:	4b1d      	ldr	r3, [pc, #116]	@ (8018a94 <xTaskRemoveFromEventList+0xb0>)
 8018a1e:	681b      	ldr	r3, [r3, #0]
 8018a20:	2b00      	cmp	r3, #0
 8018a22:	d11c      	bne.n	8018a5e <xTaskRemoveFromEventList+0x7a>
 8018a24:	693b      	ldr	r3, [r7, #16]
 8018a26:	3304      	adds	r3, #4
 8018a28:	4618      	mov	r0, r3
 8018a2a:	f7fe fc81 	bl	8017330 <uxListRemove>
 8018a2e:	693b      	ldr	r3, [r7, #16]
 8018a30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a32:	2201      	movs	r2, #1
 8018a34:	409a      	lsls	r2, r3
 8018a36:	4b18      	ldr	r3, [pc, #96]	@ (8018a98 <xTaskRemoveFromEventList+0xb4>)
 8018a38:	681b      	ldr	r3, [r3, #0]
 8018a3a:	4313      	orrs	r3, r2
 8018a3c:	4a16      	ldr	r2, [pc, #88]	@ (8018a98 <xTaskRemoveFromEventList+0xb4>)
 8018a3e:	6013      	str	r3, [r2, #0]
 8018a40:	693b      	ldr	r3, [r7, #16]
 8018a42:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018a44:	4613      	mov	r3, r2
 8018a46:	009b      	lsls	r3, r3, #2
 8018a48:	4413      	add	r3, r2
 8018a4a:	009b      	lsls	r3, r3, #2
 8018a4c:	4a13      	ldr	r2, [pc, #76]	@ (8018a9c <xTaskRemoveFromEventList+0xb8>)
 8018a4e:	441a      	add	r2, r3
 8018a50:	693b      	ldr	r3, [r7, #16]
 8018a52:	3304      	adds	r3, #4
 8018a54:	4619      	mov	r1, r3
 8018a56:	4610      	mov	r0, r2
 8018a58:	f7fe fc0d 	bl	8017276 <vListInsertEnd>
 8018a5c:	e005      	b.n	8018a6a <xTaskRemoveFromEventList+0x86>
 8018a5e:	693b      	ldr	r3, [r7, #16]
 8018a60:	3318      	adds	r3, #24
 8018a62:	4619      	mov	r1, r3
 8018a64:	480e      	ldr	r0, [pc, #56]	@ (8018aa0 <xTaskRemoveFromEventList+0xbc>)
 8018a66:	f7fe fc06 	bl	8017276 <vListInsertEnd>
 8018a6a:	693b      	ldr	r3, [r7, #16]
 8018a6c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018a6e:	4b0d      	ldr	r3, [pc, #52]	@ (8018aa4 <xTaskRemoveFromEventList+0xc0>)
 8018a70:	681b      	ldr	r3, [r3, #0]
 8018a72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a74:	429a      	cmp	r2, r3
 8018a76:	d905      	bls.n	8018a84 <xTaskRemoveFromEventList+0xa0>
 8018a78:	2301      	movs	r3, #1
 8018a7a:	617b      	str	r3, [r7, #20]
 8018a7c:	4b0a      	ldr	r3, [pc, #40]	@ (8018aa8 <xTaskRemoveFromEventList+0xc4>)
 8018a7e:	2201      	movs	r2, #1
 8018a80:	601a      	str	r2, [r3, #0]
 8018a82:	e001      	b.n	8018a88 <xTaskRemoveFromEventList+0xa4>
 8018a84:	2300      	movs	r3, #0
 8018a86:	617b      	str	r3, [r7, #20]
 8018a88:	697b      	ldr	r3, [r7, #20]
 8018a8a:	4618      	mov	r0, r3
 8018a8c:	3718      	adds	r7, #24
 8018a8e:	46bd      	mov	sp, r7
 8018a90:	bd80      	pop	{r7, pc}
 8018a92:	bf00      	nop
 8018a94:	20003cd8 	.word	0x20003cd8
 8018a98:	20003cb8 	.word	0x20003cb8
 8018a9c:	20003b14 	.word	0x20003b14
 8018aa0:	20003c70 	.word	0x20003c70
 8018aa4:	20003b10 	.word	0x20003b10
 8018aa8:	20003cc4 	.word	0x20003cc4

08018aac <vTaskRemoveFromUnorderedEventList>:
 8018aac:	b580      	push	{r7, lr}
 8018aae:	b086      	sub	sp, #24
 8018ab0:	af00      	add	r7, sp, #0
 8018ab2:	6078      	str	r0, [r7, #4]
 8018ab4:	6039      	str	r1, [r7, #0]
 8018ab6:	4b2a      	ldr	r3, [pc, #168]	@ (8018b60 <vTaskRemoveFromUnorderedEventList+0xb4>)
 8018ab8:	681b      	ldr	r3, [r3, #0]
 8018aba:	2b00      	cmp	r3, #0
 8018abc:	d10b      	bne.n	8018ad6 <vTaskRemoveFromUnorderedEventList+0x2a>
 8018abe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018ac2:	f383 8811 	msr	BASEPRI, r3
 8018ac6:	f3bf 8f6f 	isb	sy
 8018aca:	f3bf 8f4f 	dsb	sy
 8018ace:	613b      	str	r3, [r7, #16]
 8018ad0:	bf00      	nop
 8018ad2:	bf00      	nop
 8018ad4:	e7fd      	b.n	8018ad2 <vTaskRemoveFromUnorderedEventList+0x26>
 8018ad6:	683b      	ldr	r3, [r7, #0]
 8018ad8:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8018adc:	687b      	ldr	r3, [r7, #4]
 8018ade:	601a      	str	r2, [r3, #0]
 8018ae0:	687b      	ldr	r3, [r7, #4]
 8018ae2:	68db      	ldr	r3, [r3, #12]
 8018ae4:	617b      	str	r3, [r7, #20]
 8018ae6:	697b      	ldr	r3, [r7, #20]
 8018ae8:	2b00      	cmp	r3, #0
 8018aea:	d10b      	bne.n	8018b04 <vTaskRemoveFromUnorderedEventList+0x58>
 8018aec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018af0:	f383 8811 	msr	BASEPRI, r3
 8018af4:	f3bf 8f6f 	isb	sy
 8018af8:	f3bf 8f4f 	dsb	sy
 8018afc:	60fb      	str	r3, [r7, #12]
 8018afe:	bf00      	nop
 8018b00:	bf00      	nop
 8018b02:	e7fd      	b.n	8018b00 <vTaskRemoveFromUnorderedEventList+0x54>
 8018b04:	6878      	ldr	r0, [r7, #4]
 8018b06:	f7fe fc13 	bl	8017330 <uxListRemove>
 8018b0a:	697b      	ldr	r3, [r7, #20]
 8018b0c:	3304      	adds	r3, #4
 8018b0e:	4618      	mov	r0, r3
 8018b10:	f7fe fc0e 	bl	8017330 <uxListRemove>
 8018b14:	697b      	ldr	r3, [r7, #20]
 8018b16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b18:	2201      	movs	r2, #1
 8018b1a:	409a      	lsls	r2, r3
 8018b1c:	4b11      	ldr	r3, [pc, #68]	@ (8018b64 <vTaskRemoveFromUnorderedEventList+0xb8>)
 8018b1e:	681b      	ldr	r3, [r3, #0]
 8018b20:	4313      	orrs	r3, r2
 8018b22:	4a10      	ldr	r2, [pc, #64]	@ (8018b64 <vTaskRemoveFromUnorderedEventList+0xb8>)
 8018b24:	6013      	str	r3, [r2, #0]
 8018b26:	697b      	ldr	r3, [r7, #20]
 8018b28:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018b2a:	4613      	mov	r3, r2
 8018b2c:	009b      	lsls	r3, r3, #2
 8018b2e:	4413      	add	r3, r2
 8018b30:	009b      	lsls	r3, r3, #2
 8018b32:	4a0d      	ldr	r2, [pc, #52]	@ (8018b68 <vTaskRemoveFromUnorderedEventList+0xbc>)
 8018b34:	441a      	add	r2, r3
 8018b36:	697b      	ldr	r3, [r7, #20]
 8018b38:	3304      	adds	r3, #4
 8018b3a:	4619      	mov	r1, r3
 8018b3c:	4610      	mov	r0, r2
 8018b3e:	f7fe fb9a 	bl	8017276 <vListInsertEnd>
 8018b42:	697b      	ldr	r3, [r7, #20]
 8018b44:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018b46:	4b09      	ldr	r3, [pc, #36]	@ (8018b6c <vTaskRemoveFromUnorderedEventList+0xc0>)
 8018b48:	681b      	ldr	r3, [r3, #0]
 8018b4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018b4c:	429a      	cmp	r2, r3
 8018b4e:	d902      	bls.n	8018b56 <vTaskRemoveFromUnorderedEventList+0xaa>
 8018b50:	4b07      	ldr	r3, [pc, #28]	@ (8018b70 <vTaskRemoveFromUnorderedEventList+0xc4>)
 8018b52:	2201      	movs	r2, #1
 8018b54:	601a      	str	r2, [r3, #0]
 8018b56:	bf00      	nop
 8018b58:	3718      	adds	r7, #24
 8018b5a:	46bd      	mov	sp, r7
 8018b5c:	bd80      	pop	{r7, pc}
 8018b5e:	bf00      	nop
 8018b60:	20003cd8 	.word	0x20003cd8
 8018b64:	20003cb8 	.word	0x20003cb8
 8018b68:	20003b14 	.word	0x20003b14
 8018b6c:	20003b10 	.word	0x20003b10
 8018b70:	20003cc4 	.word	0x20003cc4

08018b74 <vTaskInternalSetTimeOutState>:
 8018b74:	b480      	push	{r7}
 8018b76:	b083      	sub	sp, #12
 8018b78:	af00      	add	r7, sp, #0
 8018b7a:	6078      	str	r0, [r7, #4]
 8018b7c:	4b06      	ldr	r3, [pc, #24]	@ (8018b98 <vTaskInternalSetTimeOutState+0x24>)
 8018b7e:	681a      	ldr	r2, [r3, #0]
 8018b80:	687b      	ldr	r3, [r7, #4]
 8018b82:	601a      	str	r2, [r3, #0]
 8018b84:	4b05      	ldr	r3, [pc, #20]	@ (8018b9c <vTaskInternalSetTimeOutState+0x28>)
 8018b86:	681a      	ldr	r2, [r3, #0]
 8018b88:	687b      	ldr	r3, [r7, #4]
 8018b8a:	605a      	str	r2, [r3, #4]
 8018b8c:	bf00      	nop
 8018b8e:	370c      	adds	r7, #12
 8018b90:	46bd      	mov	sp, r7
 8018b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018b96:	4770      	bx	lr
 8018b98:	20003cc8 	.word	0x20003cc8
 8018b9c:	20003cb4 	.word	0x20003cb4

08018ba0 <xTaskCheckForTimeOut>:
 8018ba0:	b580      	push	{r7, lr}
 8018ba2:	b088      	sub	sp, #32
 8018ba4:	af00      	add	r7, sp, #0
 8018ba6:	6078      	str	r0, [r7, #4]
 8018ba8:	6039      	str	r1, [r7, #0]
 8018baa:	687b      	ldr	r3, [r7, #4]
 8018bac:	2b00      	cmp	r3, #0
 8018bae:	d10b      	bne.n	8018bc8 <xTaskCheckForTimeOut+0x28>
 8018bb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018bb4:	f383 8811 	msr	BASEPRI, r3
 8018bb8:	f3bf 8f6f 	isb	sy
 8018bbc:	f3bf 8f4f 	dsb	sy
 8018bc0:	613b      	str	r3, [r7, #16]
 8018bc2:	bf00      	nop
 8018bc4:	bf00      	nop
 8018bc6:	e7fd      	b.n	8018bc4 <xTaskCheckForTimeOut+0x24>
 8018bc8:	683b      	ldr	r3, [r7, #0]
 8018bca:	2b00      	cmp	r3, #0
 8018bcc:	d10b      	bne.n	8018be6 <xTaskCheckForTimeOut+0x46>
 8018bce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018bd2:	f383 8811 	msr	BASEPRI, r3
 8018bd6:	f3bf 8f6f 	isb	sy
 8018bda:	f3bf 8f4f 	dsb	sy
 8018bde:	60fb      	str	r3, [r7, #12]
 8018be0:	bf00      	nop
 8018be2:	bf00      	nop
 8018be4:	e7fd      	b.n	8018be2 <xTaskCheckForTimeOut+0x42>
 8018be6:	f000 ffbf 	bl	8019b68 <vPortEnterCritical>
 8018bea:	4b1d      	ldr	r3, [pc, #116]	@ (8018c60 <xTaskCheckForTimeOut+0xc0>)
 8018bec:	681b      	ldr	r3, [r3, #0]
 8018bee:	61bb      	str	r3, [r7, #24]
 8018bf0:	687b      	ldr	r3, [r7, #4]
 8018bf2:	685b      	ldr	r3, [r3, #4]
 8018bf4:	69ba      	ldr	r2, [r7, #24]
 8018bf6:	1ad3      	subs	r3, r2, r3
 8018bf8:	617b      	str	r3, [r7, #20]
 8018bfa:	683b      	ldr	r3, [r7, #0]
 8018bfc:	681b      	ldr	r3, [r3, #0]
 8018bfe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8018c02:	d102      	bne.n	8018c0a <xTaskCheckForTimeOut+0x6a>
 8018c04:	2300      	movs	r3, #0
 8018c06:	61fb      	str	r3, [r7, #28]
 8018c08:	e023      	b.n	8018c52 <xTaskCheckForTimeOut+0xb2>
 8018c0a:	687b      	ldr	r3, [r7, #4]
 8018c0c:	681a      	ldr	r2, [r3, #0]
 8018c0e:	4b15      	ldr	r3, [pc, #84]	@ (8018c64 <xTaskCheckForTimeOut+0xc4>)
 8018c10:	681b      	ldr	r3, [r3, #0]
 8018c12:	429a      	cmp	r2, r3
 8018c14:	d007      	beq.n	8018c26 <xTaskCheckForTimeOut+0x86>
 8018c16:	687b      	ldr	r3, [r7, #4]
 8018c18:	685b      	ldr	r3, [r3, #4]
 8018c1a:	69ba      	ldr	r2, [r7, #24]
 8018c1c:	429a      	cmp	r2, r3
 8018c1e:	d302      	bcc.n	8018c26 <xTaskCheckForTimeOut+0x86>
 8018c20:	2301      	movs	r3, #1
 8018c22:	61fb      	str	r3, [r7, #28]
 8018c24:	e015      	b.n	8018c52 <xTaskCheckForTimeOut+0xb2>
 8018c26:	683b      	ldr	r3, [r7, #0]
 8018c28:	681b      	ldr	r3, [r3, #0]
 8018c2a:	697a      	ldr	r2, [r7, #20]
 8018c2c:	429a      	cmp	r2, r3
 8018c2e:	d20b      	bcs.n	8018c48 <xTaskCheckForTimeOut+0xa8>
 8018c30:	683b      	ldr	r3, [r7, #0]
 8018c32:	681a      	ldr	r2, [r3, #0]
 8018c34:	697b      	ldr	r3, [r7, #20]
 8018c36:	1ad2      	subs	r2, r2, r3
 8018c38:	683b      	ldr	r3, [r7, #0]
 8018c3a:	601a      	str	r2, [r3, #0]
 8018c3c:	6878      	ldr	r0, [r7, #4]
 8018c3e:	f7ff ff99 	bl	8018b74 <vTaskInternalSetTimeOutState>
 8018c42:	2300      	movs	r3, #0
 8018c44:	61fb      	str	r3, [r7, #28]
 8018c46:	e004      	b.n	8018c52 <xTaskCheckForTimeOut+0xb2>
 8018c48:	683b      	ldr	r3, [r7, #0]
 8018c4a:	2200      	movs	r2, #0
 8018c4c:	601a      	str	r2, [r3, #0]
 8018c4e:	2301      	movs	r3, #1
 8018c50:	61fb      	str	r3, [r7, #28]
 8018c52:	f000 ffbb 	bl	8019bcc <vPortExitCritical>
 8018c56:	69fb      	ldr	r3, [r7, #28]
 8018c58:	4618      	mov	r0, r3
 8018c5a:	3720      	adds	r7, #32
 8018c5c:	46bd      	mov	sp, r7
 8018c5e:	bd80      	pop	{r7, pc}
 8018c60:	20003cb4 	.word	0x20003cb4
 8018c64:	20003cc8 	.word	0x20003cc8

08018c68 <vTaskMissedYield>:
 8018c68:	b480      	push	{r7}
 8018c6a:	af00      	add	r7, sp, #0
 8018c6c:	4b03      	ldr	r3, [pc, #12]	@ (8018c7c <vTaskMissedYield+0x14>)
 8018c6e:	2201      	movs	r2, #1
 8018c70:	601a      	str	r2, [r3, #0]
 8018c72:	bf00      	nop
 8018c74:	46bd      	mov	sp, r7
 8018c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018c7a:	4770      	bx	lr
 8018c7c:	20003cc4 	.word	0x20003cc4

08018c80 <prvIdleTask>:
 8018c80:	b580      	push	{r7, lr}
 8018c82:	b082      	sub	sp, #8
 8018c84:	af00      	add	r7, sp, #0
 8018c86:	6078      	str	r0, [r7, #4]
 8018c88:	f000 f852 	bl	8018d30 <prvCheckTasksWaitingTermination>
 8018c8c:	4b06      	ldr	r3, [pc, #24]	@ (8018ca8 <prvIdleTask+0x28>)
 8018c8e:	681b      	ldr	r3, [r3, #0]
 8018c90:	2b01      	cmp	r3, #1
 8018c92:	d9f9      	bls.n	8018c88 <prvIdleTask+0x8>
 8018c94:	4b05      	ldr	r3, [pc, #20]	@ (8018cac <prvIdleTask+0x2c>)
 8018c96:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018c9a:	601a      	str	r2, [r3, #0]
 8018c9c:	f3bf 8f4f 	dsb	sy
 8018ca0:	f3bf 8f6f 	isb	sy
 8018ca4:	e7f0      	b.n	8018c88 <prvIdleTask+0x8>
 8018ca6:	bf00      	nop
 8018ca8:	20003b14 	.word	0x20003b14
 8018cac:	e000ed04 	.word	0xe000ed04

08018cb0 <prvInitialiseTaskLists>:
 8018cb0:	b580      	push	{r7, lr}
 8018cb2:	b082      	sub	sp, #8
 8018cb4:	af00      	add	r7, sp, #0
 8018cb6:	2300      	movs	r3, #0
 8018cb8:	607b      	str	r3, [r7, #4]
 8018cba:	e00c      	b.n	8018cd6 <prvInitialiseTaskLists+0x26>
 8018cbc:	687a      	ldr	r2, [r7, #4]
 8018cbe:	4613      	mov	r3, r2
 8018cc0:	009b      	lsls	r3, r3, #2
 8018cc2:	4413      	add	r3, r2
 8018cc4:	009b      	lsls	r3, r3, #2
 8018cc6:	4a12      	ldr	r2, [pc, #72]	@ (8018d10 <prvInitialiseTaskLists+0x60>)
 8018cc8:	4413      	add	r3, r2
 8018cca:	4618      	mov	r0, r3
 8018ccc:	f7fe faa6 	bl	801721c <vListInitialise>
 8018cd0:	687b      	ldr	r3, [r7, #4]
 8018cd2:	3301      	adds	r3, #1
 8018cd4:	607b      	str	r3, [r7, #4]
 8018cd6:	687b      	ldr	r3, [r7, #4]
 8018cd8:	2b0e      	cmp	r3, #14
 8018cda:	d9ef      	bls.n	8018cbc <prvInitialiseTaskLists+0xc>
 8018cdc:	480d      	ldr	r0, [pc, #52]	@ (8018d14 <prvInitialiseTaskLists+0x64>)
 8018cde:	f7fe fa9d 	bl	801721c <vListInitialise>
 8018ce2:	480d      	ldr	r0, [pc, #52]	@ (8018d18 <prvInitialiseTaskLists+0x68>)
 8018ce4:	f7fe fa9a 	bl	801721c <vListInitialise>
 8018ce8:	480c      	ldr	r0, [pc, #48]	@ (8018d1c <prvInitialiseTaskLists+0x6c>)
 8018cea:	f7fe fa97 	bl	801721c <vListInitialise>
 8018cee:	480c      	ldr	r0, [pc, #48]	@ (8018d20 <prvInitialiseTaskLists+0x70>)
 8018cf0:	f7fe fa94 	bl	801721c <vListInitialise>
 8018cf4:	480b      	ldr	r0, [pc, #44]	@ (8018d24 <prvInitialiseTaskLists+0x74>)
 8018cf6:	f7fe fa91 	bl	801721c <vListInitialise>
 8018cfa:	4b0b      	ldr	r3, [pc, #44]	@ (8018d28 <prvInitialiseTaskLists+0x78>)
 8018cfc:	4a05      	ldr	r2, [pc, #20]	@ (8018d14 <prvInitialiseTaskLists+0x64>)
 8018cfe:	601a      	str	r2, [r3, #0]
 8018d00:	4b0a      	ldr	r3, [pc, #40]	@ (8018d2c <prvInitialiseTaskLists+0x7c>)
 8018d02:	4a05      	ldr	r2, [pc, #20]	@ (8018d18 <prvInitialiseTaskLists+0x68>)
 8018d04:	601a      	str	r2, [r3, #0]
 8018d06:	bf00      	nop
 8018d08:	3708      	adds	r7, #8
 8018d0a:	46bd      	mov	sp, r7
 8018d0c:	bd80      	pop	{r7, pc}
 8018d0e:	bf00      	nop
 8018d10:	20003b14 	.word	0x20003b14
 8018d14:	20003c40 	.word	0x20003c40
 8018d18:	20003c54 	.word	0x20003c54
 8018d1c:	20003c70 	.word	0x20003c70
 8018d20:	20003c84 	.word	0x20003c84
 8018d24:	20003c9c 	.word	0x20003c9c
 8018d28:	20003c68 	.word	0x20003c68
 8018d2c:	20003c6c 	.word	0x20003c6c

08018d30 <prvCheckTasksWaitingTermination>:
 8018d30:	b580      	push	{r7, lr}
 8018d32:	b082      	sub	sp, #8
 8018d34:	af00      	add	r7, sp, #0
 8018d36:	e019      	b.n	8018d6c <prvCheckTasksWaitingTermination+0x3c>
 8018d38:	f000 ff16 	bl	8019b68 <vPortEnterCritical>
 8018d3c:	4b10      	ldr	r3, [pc, #64]	@ (8018d80 <prvCheckTasksWaitingTermination+0x50>)
 8018d3e:	68db      	ldr	r3, [r3, #12]
 8018d40:	68db      	ldr	r3, [r3, #12]
 8018d42:	607b      	str	r3, [r7, #4]
 8018d44:	687b      	ldr	r3, [r7, #4]
 8018d46:	3304      	adds	r3, #4
 8018d48:	4618      	mov	r0, r3
 8018d4a:	f7fe faf1 	bl	8017330 <uxListRemove>
 8018d4e:	4b0d      	ldr	r3, [pc, #52]	@ (8018d84 <prvCheckTasksWaitingTermination+0x54>)
 8018d50:	681b      	ldr	r3, [r3, #0]
 8018d52:	3b01      	subs	r3, #1
 8018d54:	4a0b      	ldr	r2, [pc, #44]	@ (8018d84 <prvCheckTasksWaitingTermination+0x54>)
 8018d56:	6013      	str	r3, [r2, #0]
 8018d58:	4b0b      	ldr	r3, [pc, #44]	@ (8018d88 <prvCheckTasksWaitingTermination+0x58>)
 8018d5a:	681b      	ldr	r3, [r3, #0]
 8018d5c:	3b01      	subs	r3, #1
 8018d5e:	4a0a      	ldr	r2, [pc, #40]	@ (8018d88 <prvCheckTasksWaitingTermination+0x58>)
 8018d60:	6013      	str	r3, [r2, #0]
 8018d62:	f000 ff33 	bl	8019bcc <vPortExitCritical>
 8018d66:	6878      	ldr	r0, [r7, #4]
 8018d68:	f000 f810 	bl	8018d8c <prvDeleteTCB>
 8018d6c:	4b06      	ldr	r3, [pc, #24]	@ (8018d88 <prvCheckTasksWaitingTermination+0x58>)
 8018d6e:	681b      	ldr	r3, [r3, #0]
 8018d70:	2b00      	cmp	r3, #0
 8018d72:	d1e1      	bne.n	8018d38 <prvCheckTasksWaitingTermination+0x8>
 8018d74:	bf00      	nop
 8018d76:	bf00      	nop
 8018d78:	3708      	adds	r7, #8
 8018d7a:	46bd      	mov	sp, r7
 8018d7c:	bd80      	pop	{r7, pc}
 8018d7e:	bf00      	nop
 8018d80:	20003c84 	.word	0x20003c84
 8018d84:	20003cb0 	.word	0x20003cb0
 8018d88:	20003c98 	.word	0x20003c98

08018d8c <prvDeleteTCB>:
 8018d8c:	b580      	push	{r7, lr}
 8018d8e:	b084      	sub	sp, #16
 8018d90:	af00      	add	r7, sp, #0
 8018d92:	6078      	str	r0, [r7, #4]
 8018d94:	687b      	ldr	r3, [r7, #4]
 8018d96:	3358      	adds	r3, #88	@ 0x58
 8018d98:	4618      	mov	r0, r3
 8018d9a:	f002 f883 	bl	801aea4 <_reclaim_reent>
 8018d9e:	687b      	ldr	r3, [r7, #4]
 8018da0:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018da4:	2b00      	cmp	r3, #0
 8018da6:	d108      	bne.n	8018dba <prvDeleteTCB+0x2e>
 8018da8:	687b      	ldr	r3, [r7, #4]
 8018daa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018dac:	4618      	mov	r0, r3
 8018dae:	f001 f8cb 	bl	8019f48 <vPortFree>
 8018db2:	6878      	ldr	r0, [r7, #4]
 8018db4:	f001 f8c8 	bl	8019f48 <vPortFree>
 8018db8:	e019      	b.n	8018dee <prvDeleteTCB+0x62>
 8018dba:	687b      	ldr	r3, [r7, #4]
 8018dbc:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018dc0:	2b01      	cmp	r3, #1
 8018dc2:	d103      	bne.n	8018dcc <prvDeleteTCB+0x40>
 8018dc4:	6878      	ldr	r0, [r7, #4]
 8018dc6:	f001 f8bf 	bl	8019f48 <vPortFree>
 8018dca:	e010      	b.n	8018dee <prvDeleteTCB+0x62>
 8018dcc:	687b      	ldr	r3, [r7, #4]
 8018dce:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 8018dd2:	2b02      	cmp	r3, #2
 8018dd4:	d00b      	beq.n	8018dee <prvDeleteTCB+0x62>
 8018dd6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018dda:	f383 8811 	msr	BASEPRI, r3
 8018dde:	f3bf 8f6f 	isb	sy
 8018de2:	f3bf 8f4f 	dsb	sy
 8018de6:	60fb      	str	r3, [r7, #12]
 8018de8:	bf00      	nop
 8018dea:	bf00      	nop
 8018dec:	e7fd      	b.n	8018dea <prvDeleteTCB+0x5e>
 8018dee:	bf00      	nop
 8018df0:	3710      	adds	r7, #16
 8018df2:	46bd      	mov	sp, r7
 8018df4:	bd80      	pop	{r7, pc}
	...

08018df8 <prvResetNextTaskUnblockTime>:
 8018df8:	b480      	push	{r7}
 8018dfa:	b083      	sub	sp, #12
 8018dfc:	af00      	add	r7, sp, #0
 8018dfe:	4b0c      	ldr	r3, [pc, #48]	@ (8018e30 <prvResetNextTaskUnblockTime+0x38>)
 8018e00:	681b      	ldr	r3, [r3, #0]
 8018e02:	681b      	ldr	r3, [r3, #0]
 8018e04:	2b00      	cmp	r3, #0
 8018e06:	d104      	bne.n	8018e12 <prvResetNextTaskUnblockTime+0x1a>
 8018e08:	4b0a      	ldr	r3, [pc, #40]	@ (8018e34 <prvResetNextTaskUnblockTime+0x3c>)
 8018e0a:	f04f 32ff 	mov.w	r2, #4294967295
 8018e0e:	601a      	str	r2, [r3, #0]
 8018e10:	e008      	b.n	8018e24 <prvResetNextTaskUnblockTime+0x2c>
 8018e12:	4b07      	ldr	r3, [pc, #28]	@ (8018e30 <prvResetNextTaskUnblockTime+0x38>)
 8018e14:	681b      	ldr	r3, [r3, #0]
 8018e16:	68db      	ldr	r3, [r3, #12]
 8018e18:	68db      	ldr	r3, [r3, #12]
 8018e1a:	607b      	str	r3, [r7, #4]
 8018e1c:	687b      	ldr	r3, [r7, #4]
 8018e1e:	685b      	ldr	r3, [r3, #4]
 8018e20:	4a04      	ldr	r2, [pc, #16]	@ (8018e34 <prvResetNextTaskUnblockTime+0x3c>)
 8018e22:	6013      	str	r3, [r2, #0]
 8018e24:	bf00      	nop
 8018e26:	370c      	adds	r7, #12
 8018e28:	46bd      	mov	sp, r7
 8018e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018e2e:	4770      	bx	lr
 8018e30:	20003c68 	.word	0x20003c68
 8018e34:	20003cd0 	.word	0x20003cd0

08018e38 <xTaskGetSchedulerState>:
 8018e38:	b480      	push	{r7}
 8018e3a:	b083      	sub	sp, #12
 8018e3c:	af00      	add	r7, sp, #0
 8018e3e:	4b0b      	ldr	r3, [pc, #44]	@ (8018e6c <xTaskGetSchedulerState+0x34>)
 8018e40:	681b      	ldr	r3, [r3, #0]
 8018e42:	2b00      	cmp	r3, #0
 8018e44:	d102      	bne.n	8018e4c <xTaskGetSchedulerState+0x14>
 8018e46:	2301      	movs	r3, #1
 8018e48:	607b      	str	r3, [r7, #4]
 8018e4a:	e008      	b.n	8018e5e <xTaskGetSchedulerState+0x26>
 8018e4c:	4b08      	ldr	r3, [pc, #32]	@ (8018e70 <xTaskGetSchedulerState+0x38>)
 8018e4e:	681b      	ldr	r3, [r3, #0]
 8018e50:	2b00      	cmp	r3, #0
 8018e52:	d102      	bne.n	8018e5a <xTaskGetSchedulerState+0x22>
 8018e54:	2302      	movs	r3, #2
 8018e56:	607b      	str	r3, [r7, #4]
 8018e58:	e001      	b.n	8018e5e <xTaskGetSchedulerState+0x26>
 8018e5a:	2300      	movs	r3, #0
 8018e5c:	607b      	str	r3, [r7, #4]
 8018e5e:	687b      	ldr	r3, [r7, #4]
 8018e60:	4618      	mov	r0, r3
 8018e62:	370c      	adds	r7, #12
 8018e64:	46bd      	mov	sp, r7
 8018e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018e6a:	4770      	bx	lr
 8018e6c:	20003cbc 	.word	0x20003cbc
 8018e70:	20003cd8 	.word	0x20003cd8

08018e74 <xTaskPriorityDisinherit>:
 8018e74:	b580      	push	{r7, lr}
 8018e76:	b086      	sub	sp, #24
 8018e78:	af00      	add	r7, sp, #0
 8018e7a:	6078      	str	r0, [r7, #4]
 8018e7c:	687b      	ldr	r3, [r7, #4]
 8018e7e:	613b      	str	r3, [r7, #16]
 8018e80:	2300      	movs	r3, #0
 8018e82:	617b      	str	r3, [r7, #20]
 8018e84:	687b      	ldr	r3, [r7, #4]
 8018e86:	2b00      	cmp	r3, #0
 8018e88:	d070      	beq.n	8018f6c <xTaskPriorityDisinherit+0xf8>
 8018e8a:	4b3b      	ldr	r3, [pc, #236]	@ (8018f78 <xTaskPriorityDisinherit+0x104>)
 8018e8c:	681b      	ldr	r3, [r3, #0]
 8018e8e:	693a      	ldr	r2, [r7, #16]
 8018e90:	429a      	cmp	r2, r3
 8018e92:	d00b      	beq.n	8018eac <xTaskPriorityDisinherit+0x38>
 8018e94:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018e98:	f383 8811 	msr	BASEPRI, r3
 8018e9c:	f3bf 8f6f 	isb	sy
 8018ea0:	f3bf 8f4f 	dsb	sy
 8018ea4:	60fb      	str	r3, [r7, #12]
 8018ea6:	bf00      	nop
 8018ea8:	bf00      	nop
 8018eaa:	e7fd      	b.n	8018ea8 <xTaskPriorityDisinherit+0x34>
 8018eac:	693b      	ldr	r3, [r7, #16]
 8018eae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018eb0:	2b00      	cmp	r3, #0
 8018eb2:	d10b      	bne.n	8018ecc <xTaskPriorityDisinherit+0x58>
 8018eb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8018eb8:	f383 8811 	msr	BASEPRI, r3
 8018ebc:	f3bf 8f6f 	isb	sy
 8018ec0:	f3bf 8f4f 	dsb	sy
 8018ec4:	60bb      	str	r3, [r7, #8]
 8018ec6:	bf00      	nop
 8018ec8:	bf00      	nop
 8018eca:	e7fd      	b.n	8018ec8 <xTaskPriorityDisinherit+0x54>
 8018ecc:	693b      	ldr	r3, [r7, #16]
 8018ece:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018ed0:	1e5a      	subs	r2, r3, #1
 8018ed2:	693b      	ldr	r3, [r7, #16]
 8018ed4:	651a      	str	r2, [r3, #80]	@ 0x50
 8018ed6:	693b      	ldr	r3, [r7, #16]
 8018ed8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018eda:	693b      	ldr	r3, [r7, #16]
 8018edc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8018ede:	429a      	cmp	r2, r3
 8018ee0:	d044      	beq.n	8018f6c <xTaskPriorityDisinherit+0xf8>
 8018ee2:	693b      	ldr	r3, [r7, #16]
 8018ee4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8018ee6:	2b00      	cmp	r3, #0
 8018ee8:	d140      	bne.n	8018f6c <xTaskPriorityDisinherit+0xf8>
 8018eea:	693b      	ldr	r3, [r7, #16]
 8018eec:	3304      	adds	r3, #4
 8018eee:	4618      	mov	r0, r3
 8018ef0:	f7fe fa1e 	bl	8017330 <uxListRemove>
 8018ef4:	4603      	mov	r3, r0
 8018ef6:	2b00      	cmp	r3, #0
 8018ef8:	d115      	bne.n	8018f26 <xTaskPriorityDisinherit+0xb2>
 8018efa:	693b      	ldr	r3, [r7, #16]
 8018efc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018efe:	491f      	ldr	r1, [pc, #124]	@ (8018f7c <xTaskPriorityDisinherit+0x108>)
 8018f00:	4613      	mov	r3, r2
 8018f02:	009b      	lsls	r3, r3, #2
 8018f04:	4413      	add	r3, r2
 8018f06:	009b      	lsls	r3, r3, #2
 8018f08:	440b      	add	r3, r1
 8018f0a:	681b      	ldr	r3, [r3, #0]
 8018f0c:	2b00      	cmp	r3, #0
 8018f0e:	d10a      	bne.n	8018f26 <xTaskPriorityDisinherit+0xb2>
 8018f10:	693b      	ldr	r3, [r7, #16]
 8018f12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018f14:	2201      	movs	r2, #1
 8018f16:	fa02 f303 	lsl.w	r3, r2, r3
 8018f1a:	43da      	mvns	r2, r3
 8018f1c:	4b18      	ldr	r3, [pc, #96]	@ (8018f80 <xTaskPriorityDisinherit+0x10c>)
 8018f1e:	681b      	ldr	r3, [r3, #0]
 8018f20:	4013      	ands	r3, r2
 8018f22:	4a17      	ldr	r2, [pc, #92]	@ (8018f80 <xTaskPriorityDisinherit+0x10c>)
 8018f24:	6013      	str	r3, [r2, #0]
 8018f26:	693b      	ldr	r3, [r7, #16]
 8018f28:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8018f2a:	693b      	ldr	r3, [r7, #16]
 8018f2c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8018f2e:	693b      	ldr	r3, [r7, #16]
 8018f30:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018f32:	f1c3 020f 	rsb	r2, r3, #15
 8018f36:	693b      	ldr	r3, [r7, #16]
 8018f38:	619a      	str	r2, [r3, #24]
 8018f3a:	693b      	ldr	r3, [r7, #16]
 8018f3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018f3e:	2201      	movs	r2, #1
 8018f40:	409a      	lsls	r2, r3
 8018f42:	4b0f      	ldr	r3, [pc, #60]	@ (8018f80 <xTaskPriorityDisinherit+0x10c>)
 8018f44:	681b      	ldr	r3, [r3, #0]
 8018f46:	4313      	orrs	r3, r2
 8018f48:	4a0d      	ldr	r2, [pc, #52]	@ (8018f80 <xTaskPriorityDisinherit+0x10c>)
 8018f4a:	6013      	str	r3, [r2, #0]
 8018f4c:	693b      	ldr	r3, [r7, #16]
 8018f4e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8018f50:	4613      	mov	r3, r2
 8018f52:	009b      	lsls	r3, r3, #2
 8018f54:	4413      	add	r3, r2
 8018f56:	009b      	lsls	r3, r3, #2
 8018f58:	4a08      	ldr	r2, [pc, #32]	@ (8018f7c <xTaskPriorityDisinherit+0x108>)
 8018f5a:	441a      	add	r2, r3
 8018f5c:	693b      	ldr	r3, [r7, #16]
 8018f5e:	3304      	adds	r3, #4
 8018f60:	4619      	mov	r1, r3
 8018f62:	4610      	mov	r0, r2
 8018f64:	f7fe f987 	bl	8017276 <vListInsertEnd>
 8018f68:	2301      	movs	r3, #1
 8018f6a:	617b      	str	r3, [r7, #20]
 8018f6c:	697b      	ldr	r3, [r7, #20]
 8018f6e:	4618      	mov	r0, r3
 8018f70:	3718      	adds	r7, #24
 8018f72:	46bd      	mov	sp, r7
 8018f74:	bd80      	pop	{r7, pc}
 8018f76:	bf00      	nop
 8018f78:	20003b10 	.word	0x20003b10
 8018f7c:	20003b14 	.word	0x20003b14
 8018f80:	20003cb8 	.word	0x20003cb8

08018f84 <ulTaskNotifyTake>:
 8018f84:	b580      	push	{r7, lr}
 8018f86:	b084      	sub	sp, #16
 8018f88:	af00      	add	r7, sp, #0
 8018f8a:	6078      	str	r0, [r7, #4]
 8018f8c:	6039      	str	r1, [r7, #0]
 8018f8e:	f000 fdeb 	bl	8019b68 <vPortEnterCritical>
 8018f92:	4b20      	ldr	r3, [pc, #128]	@ (8019014 <ulTaskNotifyTake+0x90>)
 8018f94:	681b      	ldr	r3, [r3, #0]
 8018f96:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8018f9a:	2b00      	cmp	r3, #0
 8018f9c:	d113      	bne.n	8018fc6 <ulTaskNotifyTake+0x42>
 8018f9e:	4b1d      	ldr	r3, [pc, #116]	@ (8019014 <ulTaskNotifyTake+0x90>)
 8018fa0:	681b      	ldr	r3, [r3, #0]
 8018fa2:	2201      	movs	r2, #1
 8018fa4:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8018fa8:	683b      	ldr	r3, [r7, #0]
 8018faa:	2b00      	cmp	r3, #0
 8018fac:	d00b      	beq.n	8018fc6 <ulTaskNotifyTake+0x42>
 8018fae:	2101      	movs	r1, #1
 8018fb0:	6838      	ldr	r0, [r7, #0]
 8018fb2:	f000 f8c9 	bl	8019148 <prvAddCurrentTaskToDelayedList>
 8018fb6:	4b18      	ldr	r3, [pc, #96]	@ (8019018 <ulTaskNotifyTake+0x94>)
 8018fb8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8018fbc:	601a      	str	r2, [r3, #0]
 8018fbe:	f3bf 8f4f 	dsb	sy
 8018fc2:	f3bf 8f6f 	isb	sy
 8018fc6:	f000 fe01 	bl	8019bcc <vPortExitCritical>
 8018fca:	f000 fdcd 	bl	8019b68 <vPortEnterCritical>
 8018fce:	4b11      	ldr	r3, [pc, #68]	@ (8019014 <ulTaskNotifyTake+0x90>)
 8018fd0:	681b      	ldr	r3, [r3, #0]
 8018fd2:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 8018fd6:	60fb      	str	r3, [r7, #12]
 8018fd8:	68fb      	ldr	r3, [r7, #12]
 8018fda:	2b00      	cmp	r3, #0
 8018fdc:	d00e      	beq.n	8018ffc <ulTaskNotifyTake+0x78>
 8018fde:	687b      	ldr	r3, [r7, #4]
 8018fe0:	2b00      	cmp	r3, #0
 8018fe2:	d005      	beq.n	8018ff0 <ulTaskNotifyTake+0x6c>
 8018fe4:	4b0b      	ldr	r3, [pc, #44]	@ (8019014 <ulTaskNotifyTake+0x90>)
 8018fe6:	681b      	ldr	r3, [r3, #0]
 8018fe8:	2200      	movs	r2, #0
 8018fea:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8018fee:	e005      	b.n	8018ffc <ulTaskNotifyTake+0x78>
 8018ff0:	4b08      	ldr	r3, [pc, #32]	@ (8019014 <ulTaskNotifyTake+0x90>)
 8018ff2:	681b      	ldr	r3, [r3, #0]
 8018ff4:	68fa      	ldr	r2, [r7, #12]
 8018ff6:	3a01      	subs	r2, #1
 8018ff8:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8018ffc:	4b05      	ldr	r3, [pc, #20]	@ (8019014 <ulTaskNotifyTake+0x90>)
 8018ffe:	681b      	ldr	r3, [r3, #0]
 8019000:	2200      	movs	r2, #0
 8019002:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8019006:	f000 fde1 	bl	8019bcc <vPortExitCritical>
 801900a:	68fb      	ldr	r3, [r7, #12]
 801900c:	4618      	mov	r0, r3
 801900e:	3710      	adds	r7, #16
 8019010:	46bd      	mov	sp, r7
 8019012:	bd80      	pop	{r7, pc}
 8019014:	20003b10 	.word	0x20003b10
 8019018:	e000ed04 	.word	0xe000ed04

0801901c <vTaskNotifyGiveFromISR>:
 801901c:	b580      	push	{r7, lr}
 801901e:	b08a      	sub	sp, #40	@ 0x28
 8019020:	af00      	add	r7, sp, #0
 8019022:	6078      	str	r0, [r7, #4]
 8019024:	6039      	str	r1, [r7, #0]
 8019026:	687b      	ldr	r3, [r7, #4]
 8019028:	2b00      	cmp	r3, #0
 801902a:	d10b      	bne.n	8019044 <vTaskNotifyGiveFromISR+0x28>
 801902c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019030:	f383 8811 	msr	BASEPRI, r3
 8019034:	f3bf 8f6f 	isb	sy
 8019038:	f3bf 8f4f 	dsb	sy
 801903c:	61bb      	str	r3, [r7, #24]
 801903e:	bf00      	nop
 8019040:	bf00      	nop
 8019042:	e7fd      	b.n	8019040 <vTaskNotifyGiveFromISR+0x24>
 8019044:	f000 fe70 	bl	8019d28 <vPortValidateInterruptPriority>
 8019048:	687b      	ldr	r3, [r7, #4]
 801904a:	627b      	str	r3, [r7, #36]	@ 0x24
 801904c:	f3ef 8211 	mrs	r2, BASEPRI
 8019050:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019054:	f383 8811 	msr	BASEPRI, r3
 8019058:	f3bf 8f6f 	isb	sy
 801905c:	f3bf 8f4f 	dsb	sy
 8019060:	617a      	str	r2, [r7, #20]
 8019062:	613b      	str	r3, [r7, #16]
 8019064:	697b      	ldr	r3, [r7, #20]
 8019066:	623b      	str	r3, [r7, #32]
 8019068:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801906a:	f893 317c 	ldrb.w	r3, [r3, #380]	@ 0x17c
 801906e:	77fb      	strb	r3, [r7, #31]
 8019070:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019072:	2202      	movs	r2, #2
 8019074:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 8019078:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801907a:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 801907e:	1c5a      	adds	r2, r3, #1
 8019080:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019082:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 8019086:	7ffb      	ldrb	r3, [r7, #31]
 8019088:	2b01      	cmp	r3, #1
 801908a:	d146      	bne.n	801911a <vTaskNotifyGiveFromISR+0xfe>
 801908c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801908e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019090:	2b00      	cmp	r3, #0
 8019092:	d00b      	beq.n	80190ac <vTaskNotifyGiveFromISR+0x90>
 8019094:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019098:	f383 8811 	msr	BASEPRI, r3
 801909c:	f3bf 8f6f 	isb	sy
 80190a0:	f3bf 8f4f 	dsb	sy
 80190a4:	60fb      	str	r3, [r7, #12]
 80190a6:	bf00      	nop
 80190a8:	bf00      	nop
 80190aa:	e7fd      	b.n	80190a8 <vTaskNotifyGiveFromISR+0x8c>
 80190ac:	4b20      	ldr	r3, [pc, #128]	@ (8019130 <vTaskNotifyGiveFromISR+0x114>)
 80190ae:	681b      	ldr	r3, [r3, #0]
 80190b0:	2b00      	cmp	r3, #0
 80190b2:	d11c      	bne.n	80190ee <vTaskNotifyGiveFromISR+0xd2>
 80190b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190b6:	3304      	adds	r3, #4
 80190b8:	4618      	mov	r0, r3
 80190ba:	f7fe f939 	bl	8017330 <uxListRemove>
 80190be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80190c2:	2201      	movs	r2, #1
 80190c4:	409a      	lsls	r2, r3
 80190c6:	4b1b      	ldr	r3, [pc, #108]	@ (8019134 <vTaskNotifyGiveFromISR+0x118>)
 80190c8:	681b      	ldr	r3, [r3, #0]
 80190ca:	4313      	orrs	r3, r2
 80190cc:	4a19      	ldr	r2, [pc, #100]	@ (8019134 <vTaskNotifyGiveFromISR+0x118>)
 80190ce:	6013      	str	r3, [r2, #0]
 80190d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190d2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80190d4:	4613      	mov	r3, r2
 80190d6:	009b      	lsls	r3, r3, #2
 80190d8:	4413      	add	r3, r2
 80190da:	009b      	lsls	r3, r3, #2
 80190dc:	4a16      	ldr	r2, [pc, #88]	@ (8019138 <vTaskNotifyGiveFromISR+0x11c>)
 80190de:	441a      	add	r2, r3
 80190e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190e2:	3304      	adds	r3, #4
 80190e4:	4619      	mov	r1, r3
 80190e6:	4610      	mov	r0, r2
 80190e8:	f7fe f8c5 	bl	8017276 <vListInsertEnd>
 80190ec:	e005      	b.n	80190fa <vTaskNotifyGiveFromISR+0xde>
 80190ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190f0:	3318      	adds	r3, #24
 80190f2:	4619      	mov	r1, r3
 80190f4:	4811      	ldr	r0, [pc, #68]	@ (801913c <vTaskNotifyGiveFromISR+0x120>)
 80190f6:	f7fe f8be 	bl	8017276 <vListInsertEnd>
 80190fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80190fc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80190fe:	4b10      	ldr	r3, [pc, #64]	@ (8019140 <vTaskNotifyGiveFromISR+0x124>)
 8019100:	681b      	ldr	r3, [r3, #0]
 8019102:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019104:	429a      	cmp	r2, r3
 8019106:	d908      	bls.n	801911a <vTaskNotifyGiveFromISR+0xfe>
 8019108:	683b      	ldr	r3, [r7, #0]
 801910a:	2b00      	cmp	r3, #0
 801910c:	d002      	beq.n	8019114 <vTaskNotifyGiveFromISR+0xf8>
 801910e:	683b      	ldr	r3, [r7, #0]
 8019110:	2201      	movs	r2, #1
 8019112:	601a      	str	r2, [r3, #0]
 8019114:	4b0b      	ldr	r3, [pc, #44]	@ (8019144 <vTaskNotifyGiveFromISR+0x128>)
 8019116:	2201      	movs	r2, #1
 8019118:	601a      	str	r2, [r3, #0]
 801911a:	6a3b      	ldr	r3, [r7, #32]
 801911c:	60bb      	str	r3, [r7, #8]
 801911e:	68bb      	ldr	r3, [r7, #8]
 8019120:	f383 8811 	msr	BASEPRI, r3
 8019124:	bf00      	nop
 8019126:	bf00      	nop
 8019128:	3728      	adds	r7, #40	@ 0x28
 801912a:	46bd      	mov	sp, r7
 801912c:	bd80      	pop	{r7, pc}
 801912e:	bf00      	nop
 8019130:	20003cd8 	.word	0x20003cd8
 8019134:	20003cb8 	.word	0x20003cb8
 8019138:	20003b14 	.word	0x20003b14
 801913c:	20003c70 	.word	0x20003c70
 8019140:	20003b10 	.word	0x20003b10
 8019144:	20003cc4 	.word	0x20003cc4

08019148 <prvAddCurrentTaskToDelayedList>:
 8019148:	b580      	push	{r7, lr}
 801914a:	b084      	sub	sp, #16
 801914c:	af00      	add	r7, sp, #0
 801914e:	6078      	str	r0, [r7, #4]
 8019150:	6039      	str	r1, [r7, #0]
 8019152:	4b29      	ldr	r3, [pc, #164]	@ (80191f8 <prvAddCurrentTaskToDelayedList+0xb0>)
 8019154:	681b      	ldr	r3, [r3, #0]
 8019156:	60fb      	str	r3, [r7, #12]
 8019158:	4b28      	ldr	r3, [pc, #160]	@ (80191fc <prvAddCurrentTaskToDelayedList+0xb4>)
 801915a:	681b      	ldr	r3, [r3, #0]
 801915c:	3304      	adds	r3, #4
 801915e:	4618      	mov	r0, r3
 8019160:	f7fe f8e6 	bl	8017330 <uxListRemove>
 8019164:	4603      	mov	r3, r0
 8019166:	2b00      	cmp	r3, #0
 8019168:	d10b      	bne.n	8019182 <prvAddCurrentTaskToDelayedList+0x3a>
 801916a:	4b24      	ldr	r3, [pc, #144]	@ (80191fc <prvAddCurrentTaskToDelayedList+0xb4>)
 801916c:	681b      	ldr	r3, [r3, #0]
 801916e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019170:	2201      	movs	r2, #1
 8019172:	fa02 f303 	lsl.w	r3, r2, r3
 8019176:	43da      	mvns	r2, r3
 8019178:	4b21      	ldr	r3, [pc, #132]	@ (8019200 <prvAddCurrentTaskToDelayedList+0xb8>)
 801917a:	681b      	ldr	r3, [r3, #0]
 801917c:	4013      	ands	r3, r2
 801917e:	4a20      	ldr	r2, [pc, #128]	@ (8019200 <prvAddCurrentTaskToDelayedList+0xb8>)
 8019180:	6013      	str	r3, [r2, #0]
 8019182:	687b      	ldr	r3, [r7, #4]
 8019184:	f1b3 3fff 	cmp.w	r3, #4294967295
 8019188:	d10a      	bne.n	80191a0 <prvAddCurrentTaskToDelayedList+0x58>
 801918a:	683b      	ldr	r3, [r7, #0]
 801918c:	2b00      	cmp	r3, #0
 801918e:	d007      	beq.n	80191a0 <prvAddCurrentTaskToDelayedList+0x58>
 8019190:	4b1a      	ldr	r3, [pc, #104]	@ (80191fc <prvAddCurrentTaskToDelayedList+0xb4>)
 8019192:	681b      	ldr	r3, [r3, #0]
 8019194:	3304      	adds	r3, #4
 8019196:	4619      	mov	r1, r3
 8019198:	481a      	ldr	r0, [pc, #104]	@ (8019204 <prvAddCurrentTaskToDelayedList+0xbc>)
 801919a:	f7fe f86c 	bl	8017276 <vListInsertEnd>
 801919e:	e026      	b.n	80191ee <prvAddCurrentTaskToDelayedList+0xa6>
 80191a0:	68fa      	ldr	r2, [r7, #12]
 80191a2:	687b      	ldr	r3, [r7, #4]
 80191a4:	4413      	add	r3, r2
 80191a6:	60bb      	str	r3, [r7, #8]
 80191a8:	4b14      	ldr	r3, [pc, #80]	@ (80191fc <prvAddCurrentTaskToDelayedList+0xb4>)
 80191aa:	681b      	ldr	r3, [r3, #0]
 80191ac:	68ba      	ldr	r2, [r7, #8]
 80191ae:	605a      	str	r2, [r3, #4]
 80191b0:	68ba      	ldr	r2, [r7, #8]
 80191b2:	68fb      	ldr	r3, [r7, #12]
 80191b4:	429a      	cmp	r2, r3
 80191b6:	d209      	bcs.n	80191cc <prvAddCurrentTaskToDelayedList+0x84>
 80191b8:	4b13      	ldr	r3, [pc, #76]	@ (8019208 <prvAddCurrentTaskToDelayedList+0xc0>)
 80191ba:	681a      	ldr	r2, [r3, #0]
 80191bc:	4b0f      	ldr	r3, [pc, #60]	@ (80191fc <prvAddCurrentTaskToDelayedList+0xb4>)
 80191be:	681b      	ldr	r3, [r3, #0]
 80191c0:	3304      	adds	r3, #4
 80191c2:	4619      	mov	r1, r3
 80191c4:	4610      	mov	r0, r2
 80191c6:	f7fe f87a 	bl	80172be <vListInsert>
 80191ca:	e010      	b.n	80191ee <prvAddCurrentTaskToDelayedList+0xa6>
 80191cc:	4b0f      	ldr	r3, [pc, #60]	@ (801920c <prvAddCurrentTaskToDelayedList+0xc4>)
 80191ce:	681a      	ldr	r2, [r3, #0]
 80191d0:	4b0a      	ldr	r3, [pc, #40]	@ (80191fc <prvAddCurrentTaskToDelayedList+0xb4>)
 80191d2:	681b      	ldr	r3, [r3, #0]
 80191d4:	3304      	adds	r3, #4
 80191d6:	4619      	mov	r1, r3
 80191d8:	4610      	mov	r0, r2
 80191da:	f7fe f870 	bl	80172be <vListInsert>
 80191de:	4b0c      	ldr	r3, [pc, #48]	@ (8019210 <prvAddCurrentTaskToDelayedList+0xc8>)
 80191e0:	681b      	ldr	r3, [r3, #0]
 80191e2:	68ba      	ldr	r2, [r7, #8]
 80191e4:	429a      	cmp	r2, r3
 80191e6:	d202      	bcs.n	80191ee <prvAddCurrentTaskToDelayedList+0xa6>
 80191e8:	4a09      	ldr	r2, [pc, #36]	@ (8019210 <prvAddCurrentTaskToDelayedList+0xc8>)
 80191ea:	68bb      	ldr	r3, [r7, #8]
 80191ec:	6013      	str	r3, [r2, #0]
 80191ee:	bf00      	nop
 80191f0:	3710      	adds	r7, #16
 80191f2:	46bd      	mov	sp, r7
 80191f4:	bd80      	pop	{r7, pc}
 80191f6:	bf00      	nop
 80191f8:	20003cb4 	.word	0x20003cb4
 80191fc:	20003b10 	.word	0x20003b10
 8019200:	20003cb8 	.word	0x20003cb8
 8019204:	20003c9c 	.word	0x20003c9c
 8019208:	20003c6c 	.word	0x20003c6c
 801920c:	20003c68 	.word	0x20003c68
 8019210:	20003cd0 	.word	0x20003cd0

08019214 <xTimerCreateTimerTask>:
 8019214:	b580      	push	{r7, lr}
 8019216:	b08a      	sub	sp, #40	@ 0x28
 8019218:	af04      	add	r7, sp, #16
 801921a:	2300      	movs	r3, #0
 801921c:	617b      	str	r3, [r7, #20]
 801921e:	f000 fb13 	bl	8019848 <prvCheckForValidListAndQueue>
 8019222:	4b1d      	ldr	r3, [pc, #116]	@ (8019298 <xTimerCreateTimerTask+0x84>)
 8019224:	681b      	ldr	r3, [r3, #0]
 8019226:	2b00      	cmp	r3, #0
 8019228:	d021      	beq.n	801926e <xTimerCreateTimerTask+0x5a>
 801922a:	2300      	movs	r3, #0
 801922c:	60fb      	str	r3, [r7, #12]
 801922e:	2300      	movs	r3, #0
 8019230:	60bb      	str	r3, [r7, #8]
 8019232:	1d3a      	adds	r2, r7, #4
 8019234:	f107 0108 	add.w	r1, r7, #8
 8019238:	f107 030c 	add.w	r3, r7, #12
 801923c:	4618      	mov	r0, r3
 801923e:	f7e9 ffb5 	bl	80031ac <vApplicationGetTimerTaskMemory>
 8019242:	6879      	ldr	r1, [r7, #4]
 8019244:	68bb      	ldr	r3, [r7, #8]
 8019246:	68fa      	ldr	r2, [r7, #12]
 8019248:	9202      	str	r2, [sp, #8]
 801924a:	9301      	str	r3, [sp, #4]
 801924c:	2302      	movs	r3, #2
 801924e:	9300      	str	r3, [sp, #0]
 8019250:	2300      	movs	r3, #0
 8019252:	460a      	mov	r2, r1
 8019254:	4911      	ldr	r1, [pc, #68]	@ (801929c <xTimerCreateTimerTask+0x88>)
 8019256:	4812      	ldr	r0, [pc, #72]	@ (80192a0 <xTimerCreateTimerTask+0x8c>)
 8019258:	f7fe fe5a 	bl	8017f10 <xTaskCreateStatic>
 801925c:	4603      	mov	r3, r0
 801925e:	4a11      	ldr	r2, [pc, #68]	@ (80192a4 <xTimerCreateTimerTask+0x90>)
 8019260:	6013      	str	r3, [r2, #0]
 8019262:	4b10      	ldr	r3, [pc, #64]	@ (80192a4 <xTimerCreateTimerTask+0x90>)
 8019264:	681b      	ldr	r3, [r3, #0]
 8019266:	2b00      	cmp	r3, #0
 8019268:	d001      	beq.n	801926e <xTimerCreateTimerTask+0x5a>
 801926a:	2301      	movs	r3, #1
 801926c:	617b      	str	r3, [r7, #20]
 801926e:	697b      	ldr	r3, [r7, #20]
 8019270:	2b00      	cmp	r3, #0
 8019272:	d10b      	bne.n	801928c <xTimerCreateTimerTask+0x78>
 8019274:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019278:	f383 8811 	msr	BASEPRI, r3
 801927c:	f3bf 8f6f 	isb	sy
 8019280:	f3bf 8f4f 	dsb	sy
 8019284:	613b      	str	r3, [r7, #16]
 8019286:	bf00      	nop
 8019288:	bf00      	nop
 801928a:	e7fd      	b.n	8019288 <xTimerCreateTimerTask+0x74>
 801928c:	697b      	ldr	r3, [r7, #20]
 801928e:	4618      	mov	r0, r3
 8019290:	3718      	adds	r7, #24
 8019292:	46bd      	mov	sp, r7
 8019294:	bd80      	pop	{r7, pc}
 8019296:	bf00      	nop
 8019298:	20003d14 	.word	0x20003d14
 801929c:	08020fcc 	.word	0x08020fcc
 80192a0:	080193e1 	.word	0x080193e1
 80192a4:	20003d18 	.word	0x20003d18

080192a8 <xTimerGenericCommand>:
 80192a8:	b580      	push	{r7, lr}
 80192aa:	b08a      	sub	sp, #40	@ 0x28
 80192ac:	af00      	add	r7, sp, #0
 80192ae:	60f8      	str	r0, [r7, #12]
 80192b0:	60b9      	str	r1, [r7, #8]
 80192b2:	607a      	str	r2, [r7, #4]
 80192b4:	603b      	str	r3, [r7, #0]
 80192b6:	2300      	movs	r3, #0
 80192b8:	627b      	str	r3, [r7, #36]	@ 0x24
 80192ba:	68fb      	ldr	r3, [r7, #12]
 80192bc:	2b00      	cmp	r3, #0
 80192be:	d10b      	bne.n	80192d8 <xTimerGenericCommand+0x30>
 80192c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80192c4:	f383 8811 	msr	BASEPRI, r3
 80192c8:	f3bf 8f6f 	isb	sy
 80192cc:	f3bf 8f4f 	dsb	sy
 80192d0:	623b      	str	r3, [r7, #32]
 80192d2:	bf00      	nop
 80192d4:	bf00      	nop
 80192d6:	e7fd      	b.n	80192d4 <xTimerGenericCommand+0x2c>
 80192d8:	4b19      	ldr	r3, [pc, #100]	@ (8019340 <xTimerGenericCommand+0x98>)
 80192da:	681b      	ldr	r3, [r3, #0]
 80192dc:	2b00      	cmp	r3, #0
 80192de:	d02a      	beq.n	8019336 <xTimerGenericCommand+0x8e>
 80192e0:	68bb      	ldr	r3, [r7, #8]
 80192e2:	613b      	str	r3, [r7, #16]
 80192e4:	687b      	ldr	r3, [r7, #4]
 80192e6:	617b      	str	r3, [r7, #20]
 80192e8:	68fb      	ldr	r3, [r7, #12]
 80192ea:	61bb      	str	r3, [r7, #24]
 80192ec:	68bb      	ldr	r3, [r7, #8]
 80192ee:	2b05      	cmp	r3, #5
 80192f0:	dc18      	bgt.n	8019324 <xTimerGenericCommand+0x7c>
 80192f2:	f7ff fda1 	bl	8018e38 <xTaskGetSchedulerState>
 80192f6:	4603      	mov	r3, r0
 80192f8:	2b02      	cmp	r3, #2
 80192fa:	d109      	bne.n	8019310 <xTimerGenericCommand+0x68>
 80192fc:	4b10      	ldr	r3, [pc, #64]	@ (8019340 <xTimerGenericCommand+0x98>)
 80192fe:	6818      	ldr	r0, [r3, #0]
 8019300:	f107 0110 	add.w	r1, r7, #16
 8019304:	2300      	movs	r3, #0
 8019306:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8019308:	f7fe f982 	bl	8017610 <xQueueGenericSend>
 801930c:	6278      	str	r0, [r7, #36]	@ 0x24
 801930e:	e012      	b.n	8019336 <xTimerGenericCommand+0x8e>
 8019310:	4b0b      	ldr	r3, [pc, #44]	@ (8019340 <xTimerGenericCommand+0x98>)
 8019312:	6818      	ldr	r0, [r3, #0]
 8019314:	f107 0110 	add.w	r1, r7, #16
 8019318:	2300      	movs	r3, #0
 801931a:	2200      	movs	r2, #0
 801931c:	f7fe f978 	bl	8017610 <xQueueGenericSend>
 8019320:	6278      	str	r0, [r7, #36]	@ 0x24
 8019322:	e008      	b.n	8019336 <xTimerGenericCommand+0x8e>
 8019324:	4b06      	ldr	r3, [pc, #24]	@ (8019340 <xTimerGenericCommand+0x98>)
 8019326:	6818      	ldr	r0, [r3, #0]
 8019328:	f107 0110 	add.w	r1, r7, #16
 801932c:	2300      	movs	r3, #0
 801932e:	683a      	ldr	r2, [r7, #0]
 8019330:	f7fe fa70 	bl	8017814 <xQueueGenericSendFromISR>
 8019334:	6278      	str	r0, [r7, #36]	@ 0x24
 8019336:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019338:	4618      	mov	r0, r3
 801933a:	3728      	adds	r7, #40	@ 0x28
 801933c:	46bd      	mov	sp, r7
 801933e:	bd80      	pop	{r7, pc}
 8019340:	20003d14 	.word	0x20003d14

08019344 <prvProcessExpiredTimer>:
 8019344:	b580      	push	{r7, lr}
 8019346:	b088      	sub	sp, #32
 8019348:	af02      	add	r7, sp, #8
 801934a:	6078      	str	r0, [r7, #4]
 801934c:	6039      	str	r1, [r7, #0]
 801934e:	4b23      	ldr	r3, [pc, #140]	@ (80193dc <prvProcessExpiredTimer+0x98>)
 8019350:	681b      	ldr	r3, [r3, #0]
 8019352:	68db      	ldr	r3, [r3, #12]
 8019354:	68db      	ldr	r3, [r3, #12]
 8019356:	617b      	str	r3, [r7, #20]
 8019358:	697b      	ldr	r3, [r7, #20]
 801935a:	3304      	adds	r3, #4
 801935c:	4618      	mov	r0, r3
 801935e:	f7fd ffe7 	bl	8017330 <uxListRemove>
 8019362:	697b      	ldr	r3, [r7, #20]
 8019364:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019368:	f003 0304 	and.w	r3, r3, #4
 801936c:	2b00      	cmp	r3, #0
 801936e:	d023      	beq.n	80193b8 <prvProcessExpiredTimer+0x74>
 8019370:	697b      	ldr	r3, [r7, #20]
 8019372:	699a      	ldr	r2, [r3, #24]
 8019374:	687b      	ldr	r3, [r7, #4]
 8019376:	18d1      	adds	r1, r2, r3
 8019378:	687b      	ldr	r3, [r7, #4]
 801937a:	683a      	ldr	r2, [r7, #0]
 801937c:	6978      	ldr	r0, [r7, #20]
 801937e:	f000 f8d5 	bl	801952c <prvInsertTimerInActiveList>
 8019382:	4603      	mov	r3, r0
 8019384:	2b00      	cmp	r3, #0
 8019386:	d020      	beq.n	80193ca <prvProcessExpiredTimer+0x86>
 8019388:	2300      	movs	r3, #0
 801938a:	9300      	str	r3, [sp, #0]
 801938c:	2300      	movs	r3, #0
 801938e:	687a      	ldr	r2, [r7, #4]
 8019390:	2100      	movs	r1, #0
 8019392:	6978      	ldr	r0, [r7, #20]
 8019394:	f7ff ff88 	bl	80192a8 <xTimerGenericCommand>
 8019398:	6138      	str	r0, [r7, #16]
 801939a:	693b      	ldr	r3, [r7, #16]
 801939c:	2b00      	cmp	r3, #0
 801939e:	d114      	bne.n	80193ca <prvProcessExpiredTimer+0x86>
 80193a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80193a4:	f383 8811 	msr	BASEPRI, r3
 80193a8:	f3bf 8f6f 	isb	sy
 80193ac:	f3bf 8f4f 	dsb	sy
 80193b0:	60fb      	str	r3, [r7, #12]
 80193b2:	bf00      	nop
 80193b4:	bf00      	nop
 80193b6:	e7fd      	b.n	80193b4 <prvProcessExpiredTimer+0x70>
 80193b8:	697b      	ldr	r3, [r7, #20]
 80193ba:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80193be:	f023 0301 	bic.w	r3, r3, #1
 80193c2:	b2da      	uxtb	r2, r3
 80193c4:	697b      	ldr	r3, [r7, #20]
 80193c6:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80193ca:	697b      	ldr	r3, [r7, #20]
 80193cc:	6a1b      	ldr	r3, [r3, #32]
 80193ce:	6978      	ldr	r0, [r7, #20]
 80193d0:	4798      	blx	r3
 80193d2:	bf00      	nop
 80193d4:	3718      	adds	r7, #24
 80193d6:	46bd      	mov	sp, r7
 80193d8:	bd80      	pop	{r7, pc}
 80193da:	bf00      	nop
 80193dc:	20003d0c 	.word	0x20003d0c

080193e0 <prvTimerTask>:
 80193e0:	b580      	push	{r7, lr}
 80193e2:	b084      	sub	sp, #16
 80193e4:	af00      	add	r7, sp, #0
 80193e6:	6078      	str	r0, [r7, #4]
 80193e8:	f107 0308 	add.w	r3, r7, #8
 80193ec:	4618      	mov	r0, r3
 80193ee:	f000 f859 	bl	80194a4 <prvGetNextExpireTime>
 80193f2:	60f8      	str	r0, [r7, #12]
 80193f4:	68bb      	ldr	r3, [r7, #8]
 80193f6:	4619      	mov	r1, r3
 80193f8:	68f8      	ldr	r0, [r7, #12]
 80193fa:	f000 f805 	bl	8019408 <prvProcessTimerOrBlockTask>
 80193fe:	f000 f8d7 	bl	80195b0 <prvProcessReceivedCommands>
 8019402:	bf00      	nop
 8019404:	e7f0      	b.n	80193e8 <prvTimerTask+0x8>
	...

08019408 <prvProcessTimerOrBlockTask>:
 8019408:	b580      	push	{r7, lr}
 801940a:	b084      	sub	sp, #16
 801940c:	af00      	add	r7, sp, #0
 801940e:	6078      	str	r0, [r7, #4]
 8019410:	6039      	str	r1, [r7, #0]
 8019412:	f7ff f88f 	bl	8018534 <vTaskSuspendAll>
 8019416:	f107 0308 	add.w	r3, r7, #8
 801941a:	4618      	mov	r0, r3
 801941c:	f000 f866 	bl	80194ec <prvSampleTimeNow>
 8019420:	60f8      	str	r0, [r7, #12]
 8019422:	68bb      	ldr	r3, [r7, #8]
 8019424:	2b00      	cmp	r3, #0
 8019426:	d130      	bne.n	801948a <prvProcessTimerOrBlockTask+0x82>
 8019428:	683b      	ldr	r3, [r7, #0]
 801942a:	2b00      	cmp	r3, #0
 801942c:	d10a      	bne.n	8019444 <prvProcessTimerOrBlockTask+0x3c>
 801942e:	687a      	ldr	r2, [r7, #4]
 8019430:	68fb      	ldr	r3, [r7, #12]
 8019432:	429a      	cmp	r2, r3
 8019434:	d806      	bhi.n	8019444 <prvProcessTimerOrBlockTask+0x3c>
 8019436:	f7ff f88b 	bl	8018550 <xTaskResumeAll>
 801943a:	68f9      	ldr	r1, [r7, #12]
 801943c:	6878      	ldr	r0, [r7, #4]
 801943e:	f7ff ff81 	bl	8019344 <prvProcessExpiredTimer>
 8019442:	e024      	b.n	801948e <prvProcessTimerOrBlockTask+0x86>
 8019444:	683b      	ldr	r3, [r7, #0]
 8019446:	2b00      	cmp	r3, #0
 8019448:	d008      	beq.n	801945c <prvProcessTimerOrBlockTask+0x54>
 801944a:	4b13      	ldr	r3, [pc, #76]	@ (8019498 <prvProcessTimerOrBlockTask+0x90>)
 801944c:	681b      	ldr	r3, [r3, #0]
 801944e:	681b      	ldr	r3, [r3, #0]
 8019450:	2b00      	cmp	r3, #0
 8019452:	d101      	bne.n	8019458 <prvProcessTimerOrBlockTask+0x50>
 8019454:	2301      	movs	r3, #1
 8019456:	e000      	b.n	801945a <prvProcessTimerOrBlockTask+0x52>
 8019458:	2300      	movs	r3, #0
 801945a:	603b      	str	r3, [r7, #0]
 801945c:	4b0f      	ldr	r3, [pc, #60]	@ (801949c <prvProcessTimerOrBlockTask+0x94>)
 801945e:	6818      	ldr	r0, [r3, #0]
 8019460:	687a      	ldr	r2, [r7, #4]
 8019462:	68fb      	ldr	r3, [r7, #12]
 8019464:	1ad3      	subs	r3, r2, r3
 8019466:	683a      	ldr	r2, [r7, #0]
 8019468:	4619      	mov	r1, r3
 801946a:	f7fe fd1d 	bl	8017ea8 <vQueueWaitForMessageRestricted>
 801946e:	f7ff f86f 	bl	8018550 <xTaskResumeAll>
 8019472:	4603      	mov	r3, r0
 8019474:	2b00      	cmp	r3, #0
 8019476:	d10a      	bne.n	801948e <prvProcessTimerOrBlockTask+0x86>
 8019478:	4b09      	ldr	r3, [pc, #36]	@ (80194a0 <prvProcessTimerOrBlockTask+0x98>)
 801947a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801947e:	601a      	str	r2, [r3, #0]
 8019480:	f3bf 8f4f 	dsb	sy
 8019484:	f3bf 8f6f 	isb	sy
 8019488:	e001      	b.n	801948e <prvProcessTimerOrBlockTask+0x86>
 801948a:	f7ff f861 	bl	8018550 <xTaskResumeAll>
 801948e:	bf00      	nop
 8019490:	3710      	adds	r7, #16
 8019492:	46bd      	mov	sp, r7
 8019494:	bd80      	pop	{r7, pc}
 8019496:	bf00      	nop
 8019498:	20003d10 	.word	0x20003d10
 801949c:	20003d14 	.word	0x20003d14
 80194a0:	e000ed04 	.word	0xe000ed04

080194a4 <prvGetNextExpireTime>:
 80194a4:	b480      	push	{r7}
 80194a6:	b085      	sub	sp, #20
 80194a8:	af00      	add	r7, sp, #0
 80194aa:	6078      	str	r0, [r7, #4]
 80194ac:	4b0e      	ldr	r3, [pc, #56]	@ (80194e8 <prvGetNextExpireTime+0x44>)
 80194ae:	681b      	ldr	r3, [r3, #0]
 80194b0:	681b      	ldr	r3, [r3, #0]
 80194b2:	2b00      	cmp	r3, #0
 80194b4:	d101      	bne.n	80194ba <prvGetNextExpireTime+0x16>
 80194b6:	2201      	movs	r2, #1
 80194b8:	e000      	b.n	80194bc <prvGetNextExpireTime+0x18>
 80194ba:	2200      	movs	r2, #0
 80194bc:	687b      	ldr	r3, [r7, #4]
 80194be:	601a      	str	r2, [r3, #0]
 80194c0:	687b      	ldr	r3, [r7, #4]
 80194c2:	681b      	ldr	r3, [r3, #0]
 80194c4:	2b00      	cmp	r3, #0
 80194c6:	d105      	bne.n	80194d4 <prvGetNextExpireTime+0x30>
 80194c8:	4b07      	ldr	r3, [pc, #28]	@ (80194e8 <prvGetNextExpireTime+0x44>)
 80194ca:	681b      	ldr	r3, [r3, #0]
 80194cc:	68db      	ldr	r3, [r3, #12]
 80194ce:	681b      	ldr	r3, [r3, #0]
 80194d0:	60fb      	str	r3, [r7, #12]
 80194d2:	e001      	b.n	80194d8 <prvGetNextExpireTime+0x34>
 80194d4:	2300      	movs	r3, #0
 80194d6:	60fb      	str	r3, [r7, #12]
 80194d8:	68fb      	ldr	r3, [r7, #12]
 80194da:	4618      	mov	r0, r3
 80194dc:	3714      	adds	r7, #20
 80194de:	46bd      	mov	sp, r7
 80194e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80194e4:	4770      	bx	lr
 80194e6:	bf00      	nop
 80194e8:	20003d0c 	.word	0x20003d0c

080194ec <prvSampleTimeNow>:
 80194ec:	b580      	push	{r7, lr}
 80194ee:	b084      	sub	sp, #16
 80194f0:	af00      	add	r7, sp, #0
 80194f2:	6078      	str	r0, [r7, #4]
 80194f4:	f7ff f8ca 	bl	801868c <xTaskGetTickCount>
 80194f8:	60f8      	str	r0, [r7, #12]
 80194fa:	4b0b      	ldr	r3, [pc, #44]	@ (8019528 <prvSampleTimeNow+0x3c>)
 80194fc:	681b      	ldr	r3, [r3, #0]
 80194fe:	68fa      	ldr	r2, [r7, #12]
 8019500:	429a      	cmp	r2, r3
 8019502:	d205      	bcs.n	8019510 <prvSampleTimeNow+0x24>
 8019504:	f000 f93a 	bl	801977c <prvSwitchTimerLists>
 8019508:	687b      	ldr	r3, [r7, #4]
 801950a:	2201      	movs	r2, #1
 801950c:	601a      	str	r2, [r3, #0]
 801950e:	e002      	b.n	8019516 <prvSampleTimeNow+0x2a>
 8019510:	687b      	ldr	r3, [r7, #4]
 8019512:	2200      	movs	r2, #0
 8019514:	601a      	str	r2, [r3, #0]
 8019516:	4a04      	ldr	r2, [pc, #16]	@ (8019528 <prvSampleTimeNow+0x3c>)
 8019518:	68fb      	ldr	r3, [r7, #12]
 801951a:	6013      	str	r3, [r2, #0]
 801951c:	68fb      	ldr	r3, [r7, #12]
 801951e:	4618      	mov	r0, r3
 8019520:	3710      	adds	r7, #16
 8019522:	46bd      	mov	sp, r7
 8019524:	bd80      	pop	{r7, pc}
 8019526:	bf00      	nop
 8019528:	20003d1c 	.word	0x20003d1c

0801952c <prvInsertTimerInActiveList>:
 801952c:	b580      	push	{r7, lr}
 801952e:	b086      	sub	sp, #24
 8019530:	af00      	add	r7, sp, #0
 8019532:	60f8      	str	r0, [r7, #12]
 8019534:	60b9      	str	r1, [r7, #8]
 8019536:	607a      	str	r2, [r7, #4]
 8019538:	603b      	str	r3, [r7, #0]
 801953a:	2300      	movs	r3, #0
 801953c:	617b      	str	r3, [r7, #20]
 801953e:	68fb      	ldr	r3, [r7, #12]
 8019540:	68ba      	ldr	r2, [r7, #8]
 8019542:	605a      	str	r2, [r3, #4]
 8019544:	68fb      	ldr	r3, [r7, #12]
 8019546:	68fa      	ldr	r2, [r7, #12]
 8019548:	611a      	str	r2, [r3, #16]
 801954a:	68ba      	ldr	r2, [r7, #8]
 801954c:	687b      	ldr	r3, [r7, #4]
 801954e:	429a      	cmp	r2, r3
 8019550:	d812      	bhi.n	8019578 <prvInsertTimerInActiveList+0x4c>
 8019552:	687a      	ldr	r2, [r7, #4]
 8019554:	683b      	ldr	r3, [r7, #0]
 8019556:	1ad2      	subs	r2, r2, r3
 8019558:	68fb      	ldr	r3, [r7, #12]
 801955a:	699b      	ldr	r3, [r3, #24]
 801955c:	429a      	cmp	r2, r3
 801955e:	d302      	bcc.n	8019566 <prvInsertTimerInActiveList+0x3a>
 8019560:	2301      	movs	r3, #1
 8019562:	617b      	str	r3, [r7, #20]
 8019564:	e01b      	b.n	801959e <prvInsertTimerInActiveList+0x72>
 8019566:	4b10      	ldr	r3, [pc, #64]	@ (80195a8 <prvInsertTimerInActiveList+0x7c>)
 8019568:	681a      	ldr	r2, [r3, #0]
 801956a:	68fb      	ldr	r3, [r7, #12]
 801956c:	3304      	adds	r3, #4
 801956e:	4619      	mov	r1, r3
 8019570:	4610      	mov	r0, r2
 8019572:	f7fd fea4 	bl	80172be <vListInsert>
 8019576:	e012      	b.n	801959e <prvInsertTimerInActiveList+0x72>
 8019578:	687a      	ldr	r2, [r7, #4]
 801957a:	683b      	ldr	r3, [r7, #0]
 801957c:	429a      	cmp	r2, r3
 801957e:	d206      	bcs.n	801958e <prvInsertTimerInActiveList+0x62>
 8019580:	68ba      	ldr	r2, [r7, #8]
 8019582:	683b      	ldr	r3, [r7, #0]
 8019584:	429a      	cmp	r2, r3
 8019586:	d302      	bcc.n	801958e <prvInsertTimerInActiveList+0x62>
 8019588:	2301      	movs	r3, #1
 801958a:	617b      	str	r3, [r7, #20]
 801958c:	e007      	b.n	801959e <prvInsertTimerInActiveList+0x72>
 801958e:	4b07      	ldr	r3, [pc, #28]	@ (80195ac <prvInsertTimerInActiveList+0x80>)
 8019590:	681a      	ldr	r2, [r3, #0]
 8019592:	68fb      	ldr	r3, [r7, #12]
 8019594:	3304      	adds	r3, #4
 8019596:	4619      	mov	r1, r3
 8019598:	4610      	mov	r0, r2
 801959a:	f7fd fe90 	bl	80172be <vListInsert>
 801959e:	697b      	ldr	r3, [r7, #20]
 80195a0:	4618      	mov	r0, r3
 80195a2:	3718      	adds	r7, #24
 80195a4:	46bd      	mov	sp, r7
 80195a6:	bd80      	pop	{r7, pc}
 80195a8:	20003d10 	.word	0x20003d10
 80195ac:	20003d0c 	.word	0x20003d0c

080195b0 <prvProcessReceivedCommands>:
 80195b0:	b580      	push	{r7, lr}
 80195b2:	b08e      	sub	sp, #56	@ 0x38
 80195b4:	af02      	add	r7, sp, #8
 80195b6:	e0ce      	b.n	8019756 <prvProcessReceivedCommands+0x1a6>
 80195b8:	687b      	ldr	r3, [r7, #4]
 80195ba:	2b00      	cmp	r3, #0
 80195bc:	da19      	bge.n	80195f2 <prvProcessReceivedCommands+0x42>
 80195be:	1d3b      	adds	r3, r7, #4
 80195c0:	3304      	adds	r3, #4
 80195c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80195c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80195c6:	2b00      	cmp	r3, #0
 80195c8:	d10b      	bne.n	80195e2 <prvProcessReceivedCommands+0x32>
 80195ca:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80195ce:	f383 8811 	msr	BASEPRI, r3
 80195d2:	f3bf 8f6f 	isb	sy
 80195d6:	f3bf 8f4f 	dsb	sy
 80195da:	61fb      	str	r3, [r7, #28]
 80195dc:	bf00      	nop
 80195de:	bf00      	nop
 80195e0:	e7fd      	b.n	80195de <prvProcessReceivedCommands+0x2e>
 80195e2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80195e4:	681b      	ldr	r3, [r3, #0]
 80195e6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80195e8:	6850      	ldr	r0, [r2, #4]
 80195ea:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80195ec:	6892      	ldr	r2, [r2, #8]
 80195ee:	4611      	mov	r1, r2
 80195f0:	4798      	blx	r3
 80195f2:	687b      	ldr	r3, [r7, #4]
 80195f4:	2b00      	cmp	r3, #0
 80195f6:	f2c0 80ae 	blt.w	8019756 <prvProcessReceivedCommands+0x1a6>
 80195fa:	68fb      	ldr	r3, [r7, #12]
 80195fc:	62bb      	str	r3, [r7, #40]	@ 0x28
 80195fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019600:	695b      	ldr	r3, [r3, #20]
 8019602:	2b00      	cmp	r3, #0
 8019604:	d004      	beq.n	8019610 <prvProcessReceivedCommands+0x60>
 8019606:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019608:	3304      	adds	r3, #4
 801960a:	4618      	mov	r0, r3
 801960c:	f7fd fe90 	bl	8017330 <uxListRemove>
 8019610:	463b      	mov	r3, r7
 8019612:	4618      	mov	r0, r3
 8019614:	f7ff ff6a 	bl	80194ec <prvSampleTimeNow>
 8019618:	6278      	str	r0, [r7, #36]	@ 0x24
 801961a:	687b      	ldr	r3, [r7, #4]
 801961c:	2b09      	cmp	r3, #9
 801961e:	f200 8097 	bhi.w	8019750 <prvProcessReceivedCommands+0x1a0>
 8019622:	a201      	add	r2, pc, #4	@ (adr r2, 8019628 <prvProcessReceivedCommands+0x78>)
 8019624:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019628:	08019651 	.word	0x08019651
 801962c:	08019651 	.word	0x08019651
 8019630:	08019651 	.word	0x08019651
 8019634:	080196c7 	.word	0x080196c7
 8019638:	080196db 	.word	0x080196db
 801963c:	08019727 	.word	0x08019727
 8019640:	08019651 	.word	0x08019651
 8019644:	08019651 	.word	0x08019651
 8019648:	080196c7 	.word	0x080196c7
 801964c:	080196db 	.word	0x080196db
 8019650:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019652:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019656:	f043 0301 	orr.w	r3, r3, #1
 801965a:	b2da      	uxtb	r2, r3
 801965c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801965e:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 8019662:	68ba      	ldr	r2, [r7, #8]
 8019664:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019666:	699b      	ldr	r3, [r3, #24]
 8019668:	18d1      	adds	r1, r2, r3
 801966a:	68bb      	ldr	r3, [r7, #8]
 801966c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801966e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019670:	f7ff ff5c 	bl	801952c <prvInsertTimerInActiveList>
 8019674:	4603      	mov	r3, r0
 8019676:	2b00      	cmp	r3, #0
 8019678:	d06c      	beq.n	8019754 <prvProcessReceivedCommands+0x1a4>
 801967a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801967c:	6a1b      	ldr	r3, [r3, #32]
 801967e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019680:	4798      	blx	r3
 8019682:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019684:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019688:	f003 0304 	and.w	r3, r3, #4
 801968c:	2b00      	cmp	r3, #0
 801968e:	d061      	beq.n	8019754 <prvProcessReceivedCommands+0x1a4>
 8019690:	68ba      	ldr	r2, [r7, #8]
 8019692:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019694:	699b      	ldr	r3, [r3, #24]
 8019696:	441a      	add	r2, r3
 8019698:	2300      	movs	r3, #0
 801969a:	9300      	str	r3, [sp, #0]
 801969c:	2300      	movs	r3, #0
 801969e:	2100      	movs	r1, #0
 80196a0:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 80196a2:	f7ff fe01 	bl	80192a8 <xTimerGenericCommand>
 80196a6:	6238      	str	r0, [r7, #32]
 80196a8:	6a3b      	ldr	r3, [r7, #32]
 80196aa:	2b00      	cmp	r3, #0
 80196ac:	d152      	bne.n	8019754 <prvProcessReceivedCommands+0x1a4>
 80196ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80196b2:	f383 8811 	msr	BASEPRI, r3
 80196b6:	f3bf 8f6f 	isb	sy
 80196ba:	f3bf 8f4f 	dsb	sy
 80196be:	61bb      	str	r3, [r7, #24]
 80196c0:	bf00      	nop
 80196c2:	bf00      	nop
 80196c4:	e7fd      	b.n	80196c2 <prvProcessReceivedCommands+0x112>
 80196c6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196c8:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80196cc:	f023 0301 	bic.w	r3, r3, #1
 80196d0:	b2da      	uxtb	r2, r3
 80196d2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196d4:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80196d8:	e03d      	b.n	8019756 <prvProcessReceivedCommands+0x1a6>
 80196da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196dc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80196e0:	f043 0301 	orr.w	r3, r3, #1
 80196e4:	b2da      	uxtb	r2, r3
 80196e6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196e8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 80196ec:	68ba      	ldr	r2, [r7, #8]
 80196ee:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196f0:	619a      	str	r2, [r3, #24]
 80196f2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80196f4:	699b      	ldr	r3, [r3, #24]
 80196f6:	2b00      	cmp	r3, #0
 80196f8:	d10b      	bne.n	8019712 <prvProcessReceivedCommands+0x162>
 80196fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80196fe:	f383 8811 	msr	BASEPRI, r3
 8019702:	f3bf 8f6f 	isb	sy
 8019706:	f3bf 8f4f 	dsb	sy
 801970a:	617b      	str	r3, [r7, #20]
 801970c:	bf00      	nop
 801970e:	bf00      	nop
 8019710:	e7fd      	b.n	801970e <prvProcessReceivedCommands+0x15e>
 8019712:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019714:	699a      	ldr	r2, [r3, #24]
 8019716:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019718:	18d1      	adds	r1, r2, r3
 801971a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801971c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801971e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019720:	f7ff ff04 	bl	801952c <prvInsertTimerInActiveList>
 8019724:	e017      	b.n	8019756 <prvProcessReceivedCommands+0x1a6>
 8019726:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019728:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801972c:	f003 0302 	and.w	r3, r3, #2
 8019730:	2b00      	cmp	r3, #0
 8019732:	d103      	bne.n	801973c <prvProcessReceivedCommands+0x18c>
 8019734:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 8019736:	f000 fc07 	bl	8019f48 <vPortFree>
 801973a:	e00c      	b.n	8019756 <prvProcessReceivedCommands+0x1a6>
 801973c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801973e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8019742:	f023 0301 	bic.w	r3, r3, #1
 8019746:	b2da      	uxtb	r2, r3
 8019748:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801974a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801974e:	e002      	b.n	8019756 <prvProcessReceivedCommands+0x1a6>
 8019750:	bf00      	nop
 8019752:	e000      	b.n	8019756 <prvProcessReceivedCommands+0x1a6>
 8019754:	bf00      	nop
 8019756:	4b08      	ldr	r3, [pc, #32]	@ (8019778 <prvProcessReceivedCommands+0x1c8>)
 8019758:	681b      	ldr	r3, [r3, #0]
 801975a:	1d39      	adds	r1, r7, #4
 801975c:	2200      	movs	r2, #0
 801975e:	4618      	mov	r0, r3
 8019760:	f7fe f986 	bl	8017a70 <xQueueReceive>
 8019764:	4603      	mov	r3, r0
 8019766:	2b00      	cmp	r3, #0
 8019768:	f47f af26 	bne.w	80195b8 <prvProcessReceivedCommands+0x8>
 801976c:	bf00      	nop
 801976e:	bf00      	nop
 8019770:	3730      	adds	r7, #48	@ 0x30
 8019772:	46bd      	mov	sp, r7
 8019774:	bd80      	pop	{r7, pc}
 8019776:	bf00      	nop
 8019778:	20003d14 	.word	0x20003d14

0801977c <prvSwitchTimerLists>:
 801977c:	b580      	push	{r7, lr}
 801977e:	b088      	sub	sp, #32
 8019780:	af02      	add	r7, sp, #8
 8019782:	e049      	b.n	8019818 <prvSwitchTimerLists+0x9c>
 8019784:	4b2e      	ldr	r3, [pc, #184]	@ (8019840 <prvSwitchTimerLists+0xc4>)
 8019786:	681b      	ldr	r3, [r3, #0]
 8019788:	68db      	ldr	r3, [r3, #12]
 801978a:	681b      	ldr	r3, [r3, #0]
 801978c:	613b      	str	r3, [r7, #16]
 801978e:	4b2c      	ldr	r3, [pc, #176]	@ (8019840 <prvSwitchTimerLists+0xc4>)
 8019790:	681b      	ldr	r3, [r3, #0]
 8019792:	68db      	ldr	r3, [r3, #12]
 8019794:	68db      	ldr	r3, [r3, #12]
 8019796:	60fb      	str	r3, [r7, #12]
 8019798:	68fb      	ldr	r3, [r7, #12]
 801979a:	3304      	adds	r3, #4
 801979c:	4618      	mov	r0, r3
 801979e:	f7fd fdc7 	bl	8017330 <uxListRemove>
 80197a2:	68fb      	ldr	r3, [r7, #12]
 80197a4:	6a1b      	ldr	r3, [r3, #32]
 80197a6:	68f8      	ldr	r0, [r7, #12]
 80197a8:	4798      	blx	r3
 80197aa:	68fb      	ldr	r3, [r7, #12]
 80197ac:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 80197b0:	f003 0304 	and.w	r3, r3, #4
 80197b4:	2b00      	cmp	r3, #0
 80197b6:	d02f      	beq.n	8019818 <prvSwitchTimerLists+0x9c>
 80197b8:	68fb      	ldr	r3, [r7, #12]
 80197ba:	699b      	ldr	r3, [r3, #24]
 80197bc:	693a      	ldr	r2, [r7, #16]
 80197be:	4413      	add	r3, r2
 80197c0:	60bb      	str	r3, [r7, #8]
 80197c2:	68ba      	ldr	r2, [r7, #8]
 80197c4:	693b      	ldr	r3, [r7, #16]
 80197c6:	429a      	cmp	r2, r3
 80197c8:	d90e      	bls.n	80197e8 <prvSwitchTimerLists+0x6c>
 80197ca:	68fb      	ldr	r3, [r7, #12]
 80197cc:	68ba      	ldr	r2, [r7, #8]
 80197ce:	605a      	str	r2, [r3, #4]
 80197d0:	68fb      	ldr	r3, [r7, #12]
 80197d2:	68fa      	ldr	r2, [r7, #12]
 80197d4:	611a      	str	r2, [r3, #16]
 80197d6:	4b1a      	ldr	r3, [pc, #104]	@ (8019840 <prvSwitchTimerLists+0xc4>)
 80197d8:	681a      	ldr	r2, [r3, #0]
 80197da:	68fb      	ldr	r3, [r7, #12]
 80197dc:	3304      	adds	r3, #4
 80197de:	4619      	mov	r1, r3
 80197e0:	4610      	mov	r0, r2
 80197e2:	f7fd fd6c 	bl	80172be <vListInsert>
 80197e6:	e017      	b.n	8019818 <prvSwitchTimerLists+0x9c>
 80197e8:	2300      	movs	r3, #0
 80197ea:	9300      	str	r3, [sp, #0]
 80197ec:	2300      	movs	r3, #0
 80197ee:	693a      	ldr	r2, [r7, #16]
 80197f0:	2100      	movs	r1, #0
 80197f2:	68f8      	ldr	r0, [r7, #12]
 80197f4:	f7ff fd58 	bl	80192a8 <xTimerGenericCommand>
 80197f8:	6078      	str	r0, [r7, #4]
 80197fa:	687b      	ldr	r3, [r7, #4]
 80197fc:	2b00      	cmp	r3, #0
 80197fe:	d10b      	bne.n	8019818 <prvSwitchTimerLists+0x9c>
 8019800:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019804:	f383 8811 	msr	BASEPRI, r3
 8019808:	f3bf 8f6f 	isb	sy
 801980c:	f3bf 8f4f 	dsb	sy
 8019810:	603b      	str	r3, [r7, #0]
 8019812:	bf00      	nop
 8019814:	bf00      	nop
 8019816:	e7fd      	b.n	8019814 <prvSwitchTimerLists+0x98>
 8019818:	4b09      	ldr	r3, [pc, #36]	@ (8019840 <prvSwitchTimerLists+0xc4>)
 801981a:	681b      	ldr	r3, [r3, #0]
 801981c:	681b      	ldr	r3, [r3, #0]
 801981e:	2b00      	cmp	r3, #0
 8019820:	d1b0      	bne.n	8019784 <prvSwitchTimerLists+0x8>
 8019822:	4b07      	ldr	r3, [pc, #28]	@ (8019840 <prvSwitchTimerLists+0xc4>)
 8019824:	681b      	ldr	r3, [r3, #0]
 8019826:	617b      	str	r3, [r7, #20]
 8019828:	4b06      	ldr	r3, [pc, #24]	@ (8019844 <prvSwitchTimerLists+0xc8>)
 801982a:	681b      	ldr	r3, [r3, #0]
 801982c:	4a04      	ldr	r2, [pc, #16]	@ (8019840 <prvSwitchTimerLists+0xc4>)
 801982e:	6013      	str	r3, [r2, #0]
 8019830:	4a04      	ldr	r2, [pc, #16]	@ (8019844 <prvSwitchTimerLists+0xc8>)
 8019832:	697b      	ldr	r3, [r7, #20]
 8019834:	6013      	str	r3, [r2, #0]
 8019836:	bf00      	nop
 8019838:	3718      	adds	r7, #24
 801983a:	46bd      	mov	sp, r7
 801983c:	bd80      	pop	{r7, pc}
 801983e:	bf00      	nop
 8019840:	20003d0c 	.word	0x20003d0c
 8019844:	20003d10 	.word	0x20003d10

08019848 <prvCheckForValidListAndQueue>:
 8019848:	b580      	push	{r7, lr}
 801984a:	b082      	sub	sp, #8
 801984c:	af02      	add	r7, sp, #8
 801984e:	f000 f98b 	bl	8019b68 <vPortEnterCritical>
 8019852:	4b15      	ldr	r3, [pc, #84]	@ (80198a8 <prvCheckForValidListAndQueue+0x60>)
 8019854:	681b      	ldr	r3, [r3, #0]
 8019856:	2b00      	cmp	r3, #0
 8019858:	d120      	bne.n	801989c <prvCheckForValidListAndQueue+0x54>
 801985a:	4814      	ldr	r0, [pc, #80]	@ (80198ac <prvCheckForValidListAndQueue+0x64>)
 801985c:	f7fd fcde 	bl	801721c <vListInitialise>
 8019860:	4813      	ldr	r0, [pc, #76]	@ (80198b0 <prvCheckForValidListAndQueue+0x68>)
 8019862:	f7fd fcdb 	bl	801721c <vListInitialise>
 8019866:	4b13      	ldr	r3, [pc, #76]	@ (80198b4 <prvCheckForValidListAndQueue+0x6c>)
 8019868:	4a10      	ldr	r2, [pc, #64]	@ (80198ac <prvCheckForValidListAndQueue+0x64>)
 801986a:	601a      	str	r2, [r3, #0]
 801986c:	4b12      	ldr	r3, [pc, #72]	@ (80198b8 <prvCheckForValidListAndQueue+0x70>)
 801986e:	4a10      	ldr	r2, [pc, #64]	@ (80198b0 <prvCheckForValidListAndQueue+0x68>)
 8019870:	601a      	str	r2, [r3, #0]
 8019872:	2300      	movs	r3, #0
 8019874:	9300      	str	r3, [sp, #0]
 8019876:	4b11      	ldr	r3, [pc, #68]	@ (80198bc <prvCheckForValidListAndQueue+0x74>)
 8019878:	4a11      	ldr	r2, [pc, #68]	@ (80198c0 <prvCheckForValidListAndQueue+0x78>)
 801987a:	2110      	movs	r1, #16
 801987c:	200a      	movs	r0, #10
 801987e:	f7fd fdeb 	bl	8017458 <xQueueGenericCreateStatic>
 8019882:	4603      	mov	r3, r0
 8019884:	4a08      	ldr	r2, [pc, #32]	@ (80198a8 <prvCheckForValidListAndQueue+0x60>)
 8019886:	6013      	str	r3, [r2, #0]
 8019888:	4b07      	ldr	r3, [pc, #28]	@ (80198a8 <prvCheckForValidListAndQueue+0x60>)
 801988a:	681b      	ldr	r3, [r3, #0]
 801988c:	2b00      	cmp	r3, #0
 801988e:	d005      	beq.n	801989c <prvCheckForValidListAndQueue+0x54>
 8019890:	4b05      	ldr	r3, [pc, #20]	@ (80198a8 <prvCheckForValidListAndQueue+0x60>)
 8019892:	681b      	ldr	r3, [r3, #0]
 8019894:	490b      	ldr	r1, [pc, #44]	@ (80198c4 <prvCheckForValidListAndQueue+0x7c>)
 8019896:	4618      	mov	r0, r3
 8019898:	f7fe fadc 	bl	8017e54 <vQueueAddToRegistry>
 801989c:	f000 f996 	bl	8019bcc <vPortExitCritical>
 80198a0:	bf00      	nop
 80198a2:	46bd      	mov	sp, r7
 80198a4:	bd80      	pop	{r7, pc}
 80198a6:	bf00      	nop
 80198a8:	20003d14 	.word	0x20003d14
 80198ac:	20003ce4 	.word	0x20003ce4
 80198b0:	20003cf8 	.word	0x20003cf8
 80198b4:	20003d0c 	.word	0x20003d0c
 80198b8:	20003d10 	.word	0x20003d10
 80198bc:	20003dc0 	.word	0x20003dc0
 80198c0:	20003d20 	.word	0x20003d20
 80198c4:	08020fd4 	.word	0x08020fd4

080198c8 <xTimerPendFunctionCallFromISR>:
 80198c8:	b580      	push	{r7, lr}
 80198ca:	b08a      	sub	sp, #40	@ 0x28
 80198cc:	af00      	add	r7, sp, #0
 80198ce:	60f8      	str	r0, [r7, #12]
 80198d0:	60b9      	str	r1, [r7, #8]
 80198d2:	607a      	str	r2, [r7, #4]
 80198d4:	603b      	str	r3, [r7, #0]
 80198d6:	f06f 0301 	mvn.w	r3, #1
 80198da:	617b      	str	r3, [r7, #20]
 80198dc:	68fb      	ldr	r3, [r7, #12]
 80198de:	61bb      	str	r3, [r7, #24]
 80198e0:	68bb      	ldr	r3, [r7, #8]
 80198e2:	61fb      	str	r3, [r7, #28]
 80198e4:	687b      	ldr	r3, [r7, #4]
 80198e6:	623b      	str	r3, [r7, #32]
 80198e8:	4b06      	ldr	r3, [pc, #24]	@ (8019904 <xTimerPendFunctionCallFromISR+0x3c>)
 80198ea:	6818      	ldr	r0, [r3, #0]
 80198ec:	f107 0114 	add.w	r1, r7, #20
 80198f0:	2300      	movs	r3, #0
 80198f2:	683a      	ldr	r2, [r7, #0]
 80198f4:	f7fd ff8e 	bl	8017814 <xQueueGenericSendFromISR>
 80198f8:	6278      	str	r0, [r7, #36]	@ 0x24
 80198fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80198fc:	4618      	mov	r0, r3
 80198fe:	3728      	adds	r7, #40	@ 0x28
 8019900:	46bd      	mov	sp, r7
 8019902:	bd80      	pop	{r7, pc}
 8019904:	20003d14 	.word	0x20003d14

08019908 <pxPortInitialiseStack>:
 8019908:	b480      	push	{r7}
 801990a:	b085      	sub	sp, #20
 801990c:	af00      	add	r7, sp, #0
 801990e:	60f8      	str	r0, [r7, #12]
 8019910:	60b9      	str	r1, [r7, #8]
 8019912:	607a      	str	r2, [r7, #4]
 8019914:	68fb      	ldr	r3, [r7, #12]
 8019916:	3b04      	subs	r3, #4
 8019918:	60fb      	str	r3, [r7, #12]
 801991a:	68fb      	ldr	r3, [r7, #12]
 801991c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 8019920:	601a      	str	r2, [r3, #0]
 8019922:	68fb      	ldr	r3, [r7, #12]
 8019924:	3b04      	subs	r3, #4
 8019926:	60fb      	str	r3, [r7, #12]
 8019928:	68bb      	ldr	r3, [r7, #8]
 801992a:	f023 0201 	bic.w	r2, r3, #1
 801992e:	68fb      	ldr	r3, [r7, #12]
 8019930:	601a      	str	r2, [r3, #0]
 8019932:	68fb      	ldr	r3, [r7, #12]
 8019934:	3b04      	subs	r3, #4
 8019936:	60fb      	str	r3, [r7, #12]
 8019938:	4a0c      	ldr	r2, [pc, #48]	@ (801996c <pxPortInitialiseStack+0x64>)
 801993a:	68fb      	ldr	r3, [r7, #12]
 801993c:	601a      	str	r2, [r3, #0]
 801993e:	68fb      	ldr	r3, [r7, #12]
 8019940:	3b14      	subs	r3, #20
 8019942:	60fb      	str	r3, [r7, #12]
 8019944:	687a      	ldr	r2, [r7, #4]
 8019946:	68fb      	ldr	r3, [r7, #12]
 8019948:	601a      	str	r2, [r3, #0]
 801994a:	68fb      	ldr	r3, [r7, #12]
 801994c:	3b04      	subs	r3, #4
 801994e:	60fb      	str	r3, [r7, #12]
 8019950:	68fb      	ldr	r3, [r7, #12]
 8019952:	f06f 0202 	mvn.w	r2, #2
 8019956:	601a      	str	r2, [r3, #0]
 8019958:	68fb      	ldr	r3, [r7, #12]
 801995a:	3b20      	subs	r3, #32
 801995c:	60fb      	str	r3, [r7, #12]
 801995e:	68fb      	ldr	r3, [r7, #12]
 8019960:	4618      	mov	r0, r3
 8019962:	3714      	adds	r7, #20
 8019964:	46bd      	mov	sp, r7
 8019966:	f85d 7b04 	ldr.w	r7, [sp], #4
 801996a:	4770      	bx	lr
 801996c:	08019971 	.word	0x08019971

08019970 <prvTaskExitError>:
 8019970:	b480      	push	{r7}
 8019972:	b085      	sub	sp, #20
 8019974:	af00      	add	r7, sp, #0
 8019976:	2300      	movs	r3, #0
 8019978:	607b      	str	r3, [r7, #4]
 801997a:	4b13      	ldr	r3, [pc, #76]	@ (80199c8 <prvTaskExitError+0x58>)
 801997c:	681b      	ldr	r3, [r3, #0]
 801997e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8019982:	d00b      	beq.n	801999c <prvTaskExitError+0x2c>
 8019984:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019988:	f383 8811 	msr	BASEPRI, r3
 801998c:	f3bf 8f6f 	isb	sy
 8019990:	f3bf 8f4f 	dsb	sy
 8019994:	60fb      	str	r3, [r7, #12]
 8019996:	bf00      	nop
 8019998:	bf00      	nop
 801999a:	e7fd      	b.n	8019998 <prvTaskExitError+0x28>
 801999c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80199a0:	f383 8811 	msr	BASEPRI, r3
 80199a4:	f3bf 8f6f 	isb	sy
 80199a8:	f3bf 8f4f 	dsb	sy
 80199ac:	60bb      	str	r3, [r7, #8]
 80199ae:	bf00      	nop
 80199b0:	bf00      	nop
 80199b2:	687b      	ldr	r3, [r7, #4]
 80199b4:	2b00      	cmp	r3, #0
 80199b6:	d0fc      	beq.n	80199b2 <prvTaskExitError+0x42>
 80199b8:	bf00      	nop
 80199ba:	bf00      	nop
 80199bc:	3714      	adds	r7, #20
 80199be:	46bd      	mov	sp, r7
 80199c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199c4:	4770      	bx	lr
 80199c6:	bf00      	nop
 80199c8:	200000ac 	.word	0x200000ac
 80199cc:	00000000 	.word	0x00000000

080199d0 <SVC_Handler>:
 80199d0:	4b07      	ldr	r3, [pc, #28]	@ (80199f0 <pxCurrentTCBConst2>)
 80199d2:	6819      	ldr	r1, [r3, #0]
 80199d4:	6808      	ldr	r0, [r1, #0]
 80199d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199da:	f380 8809 	msr	PSP, r0
 80199de:	f3bf 8f6f 	isb	sy
 80199e2:	f04f 0000 	mov.w	r0, #0
 80199e6:	f380 8811 	msr	BASEPRI, r0
 80199ea:	4770      	bx	lr
 80199ec:	f3af 8000 	nop.w

080199f0 <pxCurrentTCBConst2>:
 80199f0:	20003b10 	.word	0x20003b10
 80199f4:	bf00      	nop
 80199f6:	bf00      	nop

080199f8 <prvPortStartFirstTask>:
 80199f8:	4808      	ldr	r0, [pc, #32]	@ (8019a1c <prvPortStartFirstTask+0x24>)
 80199fa:	6800      	ldr	r0, [r0, #0]
 80199fc:	6800      	ldr	r0, [r0, #0]
 80199fe:	f380 8808 	msr	MSP, r0
 8019a02:	f04f 0000 	mov.w	r0, #0
 8019a06:	f380 8814 	msr	CONTROL, r0
 8019a0a:	b662      	cpsie	i
 8019a0c:	b661      	cpsie	f
 8019a0e:	f3bf 8f4f 	dsb	sy
 8019a12:	f3bf 8f6f 	isb	sy
 8019a16:	df00      	svc	0
 8019a18:	bf00      	nop
 8019a1a:	bf00      	nop
 8019a1c:	e000ed08 	.word	0xe000ed08

08019a20 <xPortStartScheduler>:
 8019a20:	b580      	push	{r7, lr}
 8019a22:	b086      	sub	sp, #24
 8019a24:	af00      	add	r7, sp, #0
 8019a26:	4b47      	ldr	r3, [pc, #284]	@ (8019b44 <xPortStartScheduler+0x124>)
 8019a28:	681b      	ldr	r3, [r3, #0]
 8019a2a:	4a47      	ldr	r2, [pc, #284]	@ (8019b48 <xPortStartScheduler+0x128>)
 8019a2c:	4293      	cmp	r3, r2
 8019a2e:	d10b      	bne.n	8019a48 <xPortStartScheduler+0x28>
 8019a30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019a34:	f383 8811 	msr	BASEPRI, r3
 8019a38:	f3bf 8f6f 	isb	sy
 8019a3c:	f3bf 8f4f 	dsb	sy
 8019a40:	613b      	str	r3, [r7, #16]
 8019a42:	bf00      	nop
 8019a44:	bf00      	nop
 8019a46:	e7fd      	b.n	8019a44 <xPortStartScheduler+0x24>
 8019a48:	4b3e      	ldr	r3, [pc, #248]	@ (8019b44 <xPortStartScheduler+0x124>)
 8019a4a:	681b      	ldr	r3, [r3, #0]
 8019a4c:	4a3f      	ldr	r2, [pc, #252]	@ (8019b4c <xPortStartScheduler+0x12c>)
 8019a4e:	4293      	cmp	r3, r2
 8019a50:	d10b      	bne.n	8019a6a <xPortStartScheduler+0x4a>
 8019a52:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019a56:	f383 8811 	msr	BASEPRI, r3
 8019a5a:	f3bf 8f6f 	isb	sy
 8019a5e:	f3bf 8f4f 	dsb	sy
 8019a62:	60fb      	str	r3, [r7, #12]
 8019a64:	bf00      	nop
 8019a66:	bf00      	nop
 8019a68:	e7fd      	b.n	8019a66 <xPortStartScheduler+0x46>
 8019a6a:	4b39      	ldr	r3, [pc, #228]	@ (8019b50 <xPortStartScheduler+0x130>)
 8019a6c:	617b      	str	r3, [r7, #20]
 8019a6e:	697b      	ldr	r3, [r7, #20]
 8019a70:	781b      	ldrb	r3, [r3, #0]
 8019a72:	b2db      	uxtb	r3, r3
 8019a74:	607b      	str	r3, [r7, #4]
 8019a76:	697b      	ldr	r3, [r7, #20]
 8019a78:	22ff      	movs	r2, #255	@ 0xff
 8019a7a:	701a      	strb	r2, [r3, #0]
 8019a7c:	697b      	ldr	r3, [r7, #20]
 8019a7e:	781b      	ldrb	r3, [r3, #0]
 8019a80:	b2db      	uxtb	r3, r3
 8019a82:	70fb      	strb	r3, [r7, #3]
 8019a84:	78fb      	ldrb	r3, [r7, #3]
 8019a86:	b2db      	uxtb	r3, r3
 8019a88:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8019a8c:	b2da      	uxtb	r2, r3
 8019a8e:	4b31      	ldr	r3, [pc, #196]	@ (8019b54 <xPortStartScheduler+0x134>)
 8019a90:	701a      	strb	r2, [r3, #0]
 8019a92:	4b31      	ldr	r3, [pc, #196]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019a94:	2207      	movs	r2, #7
 8019a96:	601a      	str	r2, [r3, #0]
 8019a98:	e009      	b.n	8019aae <xPortStartScheduler+0x8e>
 8019a9a:	4b2f      	ldr	r3, [pc, #188]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019a9c:	681b      	ldr	r3, [r3, #0]
 8019a9e:	3b01      	subs	r3, #1
 8019aa0:	4a2d      	ldr	r2, [pc, #180]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019aa2:	6013      	str	r3, [r2, #0]
 8019aa4:	78fb      	ldrb	r3, [r7, #3]
 8019aa6:	b2db      	uxtb	r3, r3
 8019aa8:	005b      	lsls	r3, r3, #1
 8019aaa:	b2db      	uxtb	r3, r3
 8019aac:	70fb      	strb	r3, [r7, #3]
 8019aae:	78fb      	ldrb	r3, [r7, #3]
 8019ab0:	b2db      	uxtb	r3, r3
 8019ab2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8019ab6:	2b80      	cmp	r3, #128	@ 0x80
 8019ab8:	d0ef      	beq.n	8019a9a <xPortStartScheduler+0x7a>
 8019aba:	4b27      	ldr	r3, [pc, #156]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019abc:	681b      	ldr	r3, [r3, #0]
 8019abe:	f1c3 0307 	rsb	r3, r3, #7
 8019ac2:	2b04      	cmp	r3, #4
 8019ac4:	d00b      	beq.n	8019ade <xPortStartScheduler+0xbe>
 8019ac6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019aca:	f383 8811 	msr	BASEPRI, r3
 8019ace:	f3bf 8f6f 	isb	sy
 8019ad2:	f3bf 8f4f 	dsb	sy
 8019ad6:	60bb      	str	r3, [r7, #8]
 8019ad8:	bf00      	nop
 8019ada:	bf00      	nop
 8019adc:	e7fd      	b.n	8019ada <xPortStartScheduler+0xba>
 8019ade:	4b1e      	ldr	r3, [pc, #120]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019ae0:	681b      	ldr	r3, [r3, #0]
 8019ae2:	021b      	lsls	r3, r3, #8
 8019ae4:	4a1c      	ldr	r2, [pc, #112]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019ae6:	6013      	str	r3, [r2, #0]
 8019ae8:	4b1b      	ldr	r3, [pc, #108]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019aea:	681b      	ldr	r3, [r3, #0]
 8019aec:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8019af0:	4a19      	ldr	r2, [pc, #100]	@ (8019b58 <xPortStartScheduler+0x138>)
 8019af2:	6013      	str	r3, [r2, #0]
 8019af4:	687b      	ldr	r3, [r7, #4]
 8019af6:	b2da      	uxtb	r2, r3
 8019af8:	697b      	ldr	r3, [r7, #20]
 8019afa:	701a      	strb	r2, [r3, #0]
 8019afc:	4b17      	ldr	r3, [pc, #92]	@ (8019b5c <xPortStartScheduler+0x13c>)
 8019afe:	681b      	ldr	r3, [r3, #0]
 8019b00:	4a16      	ldr	r2, [pc, #88]	@ (8019b5c <xPortStartScheduler+0x13c>)
 8019b02:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8019b06:	6013      	str	r3, [r2, #0]
 8019b08:	4b14      	ldr	r3, [pc, #80]	@ (8019b5c <xPortStartScheduler+0x13c>)
 8019b0a:	681b      	ldr	r3, [r3, #0]
 8019b0c:	4a13      	ldr	r2, [pc, #76]	@ (8019b5c <xPortStartScheduler+0x13c>)
 8019b0e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 8019b12:	6013      	str	r3, [r2, #0]
 8019b14:	f000 f8da 	bl	8019ccc <vPortSetupTimerInterrupt>
 8019b18:	4b11      	ldr	r3, [pc, #68]	@ (8019b60 <xPortStartScheduler+0x140>)
 8019b1a:	2200      	movs	r2, #0
 8019b1c:	601a      	str	r2, [r3, #0]
 8019b1e:	f000 f8f9 	bl	8019d14 <vPortEnableVFP>
 8019b22:	4b10      	ldr	r3, [pc, #64]	@ (8019b64 <xPortStartScheduler+0x144>)
 8019b24:	681b      	ldr	r3, [r3, #0]
 8019b26:	4a0f      	ldr	r2, [pc, #60]	@ (8019b64 <xPortStartScheduler+0x144>)
 8019b28:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 8019b2c:	6013      	str	r3, [r2, #0]
 8019b2e:	f7ff ff63 	bl	80199f8 <prvPortStartFirstTask>
 8019b32:	f7fe fe75 	bl	8018820 <vTaskSwitchContext>
 8019b36:	f7ff ff1b 	bl	8019970 <prvTaskExitError>
 8019b3a:	2300      	movs	r3, #0
 8019b3c:	4618      	mov	r0, r3
 8019b3e:	3718      	adds	r7, #24
 8019b40:	46bd      	mov	sp, r7
 8019b42:	bd80      	pop	{r7, pc}
 8019b44:	e000ed00 	.word	0xe000ed00
 8019b48:	410fc271 	.word	0x410fc271
 8019b4c:	410fc270 	.word	0x410fc270
 8019b50:	e000e400 	.word	0xe000e400
 8019b54:	20003e10 	.word	0x20003e10
 8019b58:	20003e14 	.word	0x20003e14
 8019b5c:	e000ed20 	.word	0xe000ed20
 8019b60:	200000ac 	.word	0x200000ac
 8019b64:	e000ef34 	.word	0xe000ef34

08019b68 <vPortEnterCritical>:
 8019b68:	b480      	push	{r7}
 8019b6a:	b083      	sub	sp, #12
 8019b6c:	af00      	add	r7, sp, #0
 8019b6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019b72:	f383 8811 	msr	BASEPRI, r3
 8019b76:	f3bf 8f6f 	isb	sy
 8019b7a:	f3bf 8f4f 	dsb	sy
 8019b7e:	607b      	str	r3, [r7, #4]
 8019b80:	bf00      	nop
 8019b82:	4b10      	ldr	r3, [pc, #64]	@ (8019bc4 <vPortEnterCritical+0x5c>)
 8019b84:	681b      	ldr	r3, [r3, #0]
 8019b86:	3301      	adds	r3, #1
 8019b88:	4a0e      	ldr	r2, [pc, #56]	@ (8019bc4 <vPortEnterCritical+0x5c>)
 8019b8a:	6013      	str	r3, [r2, #0]
 8019b8c:	4b0d      	ldr	r3, [pc, #52]	@ (8019bc4 <vPortEnterCritical+0x5c>)
 8019b8e:	681b      	ldr	r3, [r3, #0]
 8019b90:	2b01      	cmp	r3, #1
 8019b92:	d110      	bne.n	8019bb6 <vPortEnterCritical+0x4e>
 8019b94:	4b0c      	ldr	r3, [pc, #48]	@ (8019bc8 <vPortEnterCritical+0x60>)
 8019b96:	681b      	ldr	r3, [r3, #0]
 8019b98:	b2db      	uxtb	r3, r3
 8019b9a:	2b00      	cmp	r3, #0
 8019b9c:	d00b      	beq.n	8019bb6 <vPortEnterCritical+0x4e>
 8019b9e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019ba2:	f383 8811 	msr	BASEPRI, r3
 8019ba6:	f3bf 8f6f 	isb	sy
 8019baa:	f3bf 8f4f 	dsb	sy
 8019bae:	603b      	str	r3, [r7, #0]
 8019bb0:	bf00      	nop
 8019bb2:	bf00      	nop
 8019bb4:	e7fd      	b.n	8019bb2 <vPortEnterCritical+0x4a>
 8019bb6:	bf00      	nop
 8019bb8:	370c      	adds	r7, #12
 8019bba:	46bd      	mov	sp, r7
 8019bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019bc0:	4770      	bx	lr
 8019bc2:	bf00      	nop
 8019bc4:	200000ac 	.word	0x200000ac
 8019bc8:	e000ed04 	.word	0xe000ed04

08019bcc <vPortExitCritical>:
 8019bcc:	b480      	push	{r7}
 8019bce:	b083      	sub	sp, #12
 8019bd0:	af00      	add	r7, sp, #0
 8019bd2:	4b12      	ldr	r3, [pc, #72]	@ (8019c1c <vPortExitCritical+0x50>)
 8019bd4:	681b      	ldr	r3, [r3, #0]
 8019bd6:	2b00      	cmp	r3, #0
 8019bd8:	d10b      	bne.n	8019bf2 <vPortExitCritical+0x26>
 8019bda:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019bde:	f383 8811 	msr	BASEPRI, r3
 8019be2:	f3bf 8f6f 	isb	sy
 8019be6:	f3bf 8f4f 	dsb	sy
 8019bea:	607b      	str	r3, [r7, #4]
 8019bec:	bf00      	nop
 8019bee:	bf00      	nop
 8019bf0:	e7fd      	b.n	8019bee <vPortExitCritical+0x22>
 8019bf2:	4b0a      	ldr	r3, [pc, #40]	@ (8019c1c <vPortExitCritical+0x50>)
 8019bf4:	681b      	ldr	r3, [r3, #0]
 8019bf6:	3b01      	subs	r3, #1
 8019bf8:	4a08      	ldr	r2, [pc, #32]	@ (8019c1c <vPortExitCritical+0x50>)
 8019bfa:	6013      	str	r3, [r2, #0]
 8019bfc:	4b07      	ldr	r3, [pc, #28]	@ (8019c1c <vPortExitCritical+0x50>)
 8019bfe:	681b      	ldr	r3, [r3, #0]
 8019c00:	2b00      	cmp	r3, #0
 8019c02:	d105      	bne.n	8019c10 <vPortExitCritical+0x44>
 8019c04:	2300      	movs	r3, #0
 8019c06:	603b      	str	r3, [r7, #0]
 8019c08:	683b      	ldr	r3, [r7, #0]
 8019c0a:	f383 8811 	msr	BASEPRI, r3
 8019c0e:	bf00      	nop
 8019c10:	bf00      	nop
 8019c12:	370c      	adds	r7, #12
 8019c14:	46bd      	mov	sp, r7
 8019c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019c1a:	4770      	bx	lr
 8019c1c:	200000ac 	.word	0x200000ac

08019c20 <PendSV_Handler>:
 8019c20:	f3ef 8009 	mrs	r0, PSP
 8019c24:	f3bf 8f6f 	isb	sy
 8019c28:	4b15      	ldr	r3, [pc, #84]	@ (8019c80 <pxCurrentTCBConst>)
 8019c2a:	681a      	ldr	r2, [r3, #0]
 8019c2c:	f01e 0f10 	tst.w	lr, #16
 8019c30:	bf08      	it	eq
 8019c32:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8019c36:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c3a:	6010      	str	r0, [r2, #0]
 8019c3c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8019c40:	f04f 0050 	mov.w	r0, #80	@ 0x50
 8019c44:	f380 8811 	msr	BASEPRI, r0
 8019c48:	f3bf 8f4f 	dsb	sy
 8019c4c:	f3bf 8f6f 	isb	sy
 8019c50:	f7fe fde6 	bl	8018820 <vTaskSwitchContext>
 8019c54:	f04f 0000 	mov.w	r0, #0
 8019c58:	f380 8811 	msr	BASEPRI, r0
 8019c5c:	bc09      	pop	{r0, r3}
 8019c5e:	6819      	ldr	r1, [r3, #0]
 8019c60:	6808      	ldr	r0, [r1, #0]
 8019c62:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c66:	f01e 0f10 	tst.w	lr, #16
 8019c6a:	bf08      	it	eq
 8019c6c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8019c70:	f380 8809 	msr	PSP, r0
 8019c74:	f3bf 8f6f 	isb	sy
 8019c78:	4770      	bx	lr
 8019c7a:	bf00      	nop
 8019c7c:	f3af 8000 	nop.w

08019c80 <pxCurrentTCBConst>:
 8019c80:	20003b10 	.word	0x20003b10
 8019c84:	bf00      	nop
 8019c86:	bf00      	nop

08019c88 <SysTick_Handler>:
 8019c88:	b580      	push	{r7, lr}
 8019c8a:	b082      	sub	sp, #8
 8019c8c:	af00      	add	r7, sp, #0
 8019c8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019c92:	f383 8811 	msr	BASEPRI, r3
 8019c96:	f3bf 8f6f 	isb	sy
 8019c9a:	f3bf 8f4f 	dsb	sy
 8019c9e:	607b      	str	r3, [r7, #4]
 8019ca0:	bf00      	nop
 8019ca2:	f7fe fd03 	bl	80186ac <xTaskIncrementTick>
 8019ca6:	4603      	mov	r3, r0
 8019ca8:	2b00      	cmp	r3, #0
 8019caa:	d003      	beq.n	8019cb4 <SysTick_Handler+0x2c>
 8019cac:	4b06      	ldr	r3, [pc, #24]	@ (8019cc8 <SysTick_Handler+0x40>)
 8019cae:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8019cb2:	601a      	str	r2, [r3, #0]
 8019cb4:	2300      	movs	r3, #0
 8019cb6:	603b      	str	r3, [r7, #0]
 8019cb8:	683b      	ldr	r3, [r7, #0]
 8019cba:	f383 8811 	msr	BASEPRI, r3
 8019cbe:	bf00      	nop
 8019cc0:	bf00      	nop
 8019cc2:	3708      	adds	r7, #8
 8019cc4:	46bd      	mov	sp, r7
 8019cc6:	bd80      	pop	{r7, pc}
 8019cc8:	e000ed04 	.word	0xe000ed04

08019ccc <vPortSetupTimerInterrupt>:
 8019ccc:	b480      	push	{r7}
 8019cce:	af00      	add	r7, sp, #0
 8019cd0:	4b0b      	ldr	r3, [pc, #44]	@ (8019d00 <vPortSetupTimerInterrupt+0x34>)
 8019cd2:	2200      	movs	r2, #0
 8019cd4:	601a      	str	r2, [r3, #0]
 8019cd6:	4b0b      	ldr	r3, [pc, #44]	@ (8019d04 <vPortSetupTimerInterrupt+0x38>)
 8019cd8:	2200      	movs	r2, #0
 8019cda:	601a      	str	r2, [r3, #0]
 8019cdc:	4b0a      	ldr	r3, [pc, #40]	@ (8019d08 <vPortSetupTimerInterrupt+0x3c>)
 8019cde:	681b      	ldr	r3, [r3, #0]
 8019ce0:	4a0a      	ldr	r2, [pc, #40]	@ (8019d0c <vPortSetupTimerInterrupt+0x40>)
 8019ce2:	fba2 2303 	umull	r2, r3, r2, r3
 8019ce6:	099b      	lsrs	r3, r3, #6
 8019ce8:	4a09      	ldr	r2, [pc, #36]	@ (8019d10 <vPortSetupTimerInterrupt+0x44>)
 8019cea:	3b01      	subs	r3, #1
 8019cec:	6013      	str	r3, [r2, #0]
 8019cee:	4b04      	ldr	r3, [pc, #16]	@ (8019d00 <vPortSetupTimerInterrupt+0x34>)
 8019cf0:	2207      	movs	r2, #7
 8019cf2:	601a      	str	r2, [r3, #0]
 8019cf4:	bf00      	nop
 8019cf6:	46bd      	mov	sp, r7
 8019cf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019cfc:	4770      	bx	lr
 8019cfe:	bf00      	nop
 8019d00:	e000e010 	.word	0xe000e010
 8019d04:	e000e018 	.word	0xe000e018
 8019d08:	20000004 	.word	0x20000004
 8019d0c:	10624dd3 	.word	0x10624dd3
 8019d10:	e000e014 	.word	0xe000e014

08019d14 <vPortEnableVFP>:
 8019d14:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8019d24 <vPortEnableVFP+0x10>
 8019d18:	6801      	ldr	r1, [r0, #0]
 8019d1a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8019d1e:	6001      	str	r1, [r0, #0]
 8019d20:	4770      	bx	lr
 8019d22:	bf00      	nop
 8019d24:	e000ed88 	.word	0xe000ed88

08019d28 <vPortValidateInterruptPriority>:
 8019d28:	b480      	push	{r7}
 8019d2a:	b085      	sub	sp, #20
 8019d2c:	af00      	add	r7, sp, #0
 8019d2e:	f3ef 8305 	mrs	r3, IPSR
 8019d32:	60fb      	str	r3, [r7, #12]
 8019d34:	68fb      	ldr	r3, [r7, #12]
 8019d36:	2b0f      	cmp	r3, #15
 8019d38:	d915      	bls.n	8019d66 <vPortValidateInterruptPriority+0x3e>
 8019d3a:	4a18      	ldr	r2, [pc, #96]	@ (8019d9c <vPortValidateInterruptPriority+0x74>)
 8019d3c:	68fb      	ldr	r3, [r7, #12]
 8019d3e:	4413      	add	r3, r2
 8019d40:	781b      	ldrb	r3, [r3, #0]
 8019d42:	72fb      	strb	r3, [r7, #11]
 8019d44:	4b16      	ldr	r3, [pc, #88]	@ (8019da0 <vPortValidateInterruptPriority+0x78>)
 8019d46:	781b      	ldrb	r3, [r3, #0]
 8019d48:	7afa      	ldrb	r2, [r7, #11]
 8019d4a:	429a      	cmp	r2, r3
 8019d4c:	d20b      	bcs.n	8019d66 <vPortValidateInterruptPriority+0x3e>
 8019d4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019d52:	f383 8811 	msr	BASEPRI, r3
 8019d56:	f3bf 8f6f 	isb	sy
 8019d5a:	f3bf 8f4f 	dsb	sy
 8019d5e:	607b      	str	r3, [r7, #4]
 8019d60:	bf00      	nop
 8019d62:	bf00      	nop
 8019d64:	e7fd      	b.n	8019d62 <vPortValidateInterruptPriority+0x3a>
 8019d66:	4b0f      	ldr	r3, [pc, #60]	@ (8019da4 <vPortValidateInterruptPriority+0x7c>)
 8019d68:	681b      	ldr	r3, [r3, #0]
 8019d6a:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 8019d6e:	4b0e      	ldr	r3, [pc, #56]	@ (8019da8 <vPortValidateInterruptPriority+0x80>)
 8019d70:	681b      	ldr	r3, [r3, #0]
 8019d72:	429a      	cmp	r2, r3
 8019d74:	d90b      	bls.n	8019d8e <vPortValidateInterruptPriority+0x66>
 8019d76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019d7a:	f383 8811 	msr	BASEPRI, r3
 8019d7e:	f3bf 8f6f 	isb	sy
 8019d82:	f3bf 8f4f 	dsb	sy
 8019d86:	603b      	str	r3, [r7, #0]
 8019d88:	bf00      	nop
 8019d8a:	bf00      	nop
 8019d8c:	e7fd      	b.n	8019d8a <vPortValidateInterruptPriority+0x62>
 8019d8e:	bf00      	nop
 8019d90:	3714      	adds	r7, #20
 8019d92:	46bd      	mov	sp, r7
 8019d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019d98:	4770      	bx	lr
 8019d9a:	bf00      	nop
 8019d9c:	e000e3f0 	.word	0xe000e3f0
 8019da0:	20003e10 	.word	0x20003e10
 8019da4:	e000ed0c 	.word	0xe000ed0c
 8019da8:	20003e14 	.word	0x20003e14

08019dac <pvPortMalloc>:
 8019dac:	b580      	push	{r7, lr}
 8019dae:	b08a      	sub	sp, #40	@ 0x28
 8019db0:	af00      	add	r7, sp, #0
 8019db2:	6078      	str	r0, [r7, #4]
 8019db4:	2300      	movs	r3, #0
 8019db6:	61fb      	str	r3, [r7, #28]
 8019db8:	f7fe fbbc 	bl	8018534 <vTaskSuspendAll>
 8019dbc:	4b5c      	ldr	r3, [pc, #368]	@ (8019f30 <pvPortMalloc+0x184>)
 8019dbe:	681b      	ldr	r3, [r3, #0]
 8019dc0:	2b00      	cmp	r3, #0
 8019dc2:	d101      	bne.n	8019dc8 <pvPortMalloc+0x1c>
 8019dc4:	f000 f924 	bl	801a010 <prvHeapInit>
 8019dc8:	4b5a      	ldr	r3, [pc, #360]	@ (8019f34 <pvPortMalloc+0x188>)
 8019dca:	681a      	ldr	r2, [r3, #0]
 8019dcc:	687b      	ldr	r3, [r7, #4]
 8019dce:	4013      	ands	r3, r2
 8019dd0:	2b00      	cmp	r3, #0
 8019dd2:	f040 8095 	bne.w	8019f00 <pvPortMalloc+0x154>
 8019dd6:	687b      	ldr	r3, [r7, #4]
 8019dd8:	2b00      	cmp	r3, #0
 8019dda:	d01e      	beq.n	8019e1a <pvPortMalloc+0x6e>
 8019ddc:	2208      	movs	r2, #8
 8019dde:	687b      	ldr	r3, [r7, #4]
 8019de0:	4413      	add	r3, r2
 8019de2:	607b      	str	r3, [r7, #4]
 8019de4:	687b      	ldr	r3, [r7, #4]
 8019de6:	f003 0307 	and.w	r3, r3, #7
 8019dea:	2b00      	cmp	r3, #0
 8019dec:	d015      	beq.n	8019e1a <pvPortMalloc+0x6e>
 8019dee:	687b      	ldr	r3, [r7, #4]
 8019df0:	f023 0307 	bic.w	r3, r3, #7
 8019df4:	3308      	adds	r3, #8
 8019df6:	607b      	str	r3, [r7, #4]
 8019df8:	687b      	ldr	r3, [r7, #4]
 8019dfa:	f003 0307 	and.w	r3, r3, #7
 8019dfe:	2b00      	cmp	r3, #0
 8019e00:	d00b      	beq.n	8019e1a <pvPortMalloc+0x6e>
 8019e02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019e06:	f383 8811 	msr	BASEPRI, r3
 8019e0a:	f3bf 8f6f 	isb	sy
 8019e0e:	f3bf 8f4f 	dsb	sy
 8019e12:	617b      	str	r3, [r7, #20]
 8019e14:	bf00      	nop
 8019e16:	bf00      	nop
 8019e18:	e7fd      	b.n	8019e16 <pvPortMalloc+0x6a>
 8019e1a:	687b      	ldr	r3, [r7, #4]
 8019e1c:	2b00      	cmp	r3, #0
 8019e1e:	d06f      	beq.n	8019f00 <pvPortMalloc+0x154>
 8019e20:	4b45      	ldr	r3, [pc, #276]	@ (8019f38 <pvPortMalloc+0x18c>)
 8019e22:	681b      	ldr	r3, [r3, #0]
 8019e24:	687a      	ldr	r2, [r7, #4]
 8019e26:	429a      	cmp	r2, r3
 8019e28:	d86a      	bhi.n	8019f00 <pvPortMalloc+0x154>
 8019e2a:	4b44      	ldr	r3, [pc, #272]	@ (8019f3c <pvPortMalloc+0x190>)
 8019e2c:	623b      	str	r3, [r7, #32]
 8019e2e:	4b43      	ldr	r3, [pc, #268]	@ (8019f3c <pvPortMalloc+0x190>)
 8019e30:	681b      	ldr	r3, [r3, #0]
 8019e32:	627b      	str	r3, [r7, #36]	@ 0x24
 8019e34:	e004      	b.n	8019e40 <pvPortMalloc+0x94>
 8019e36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e38:	623b      	str	r3, [r7, #32]
 8019e3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e3c:	681b      	ldr	r3, [r3, #0]
 8019e3e:	627b      	str	r3, [r7, #36]	@ 0x24
 8019e40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e42:	685b      	ldr	r3, [r3, #4]
 8019e44:	687a      	ldr	r2, [r7, #4]
 8019e46:	429a      	cmp	r2, r3
 8019e48:	d903      	bls.n	8019e52 <pvPortMalloc+0xa6>
 8019e4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e4c:	681b      	ldr	r3, [r3, #0]
 8019e4e:	2b00      	cmp	r3, #0
 8019e50:	d1f1      	bne.n	8019e36 <pvPortMalloc+0x8a>
 8019e52:	4b37      	ldr	r3, [pc, #220]	@ (8019f30 <pvPortMalloc+0x184>)
 8019e54:	681b      	ldr	r3, [r3, #0]
 8019e56:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019e58:	429a      	cmp	r2, r3
 8019e5a:	d051      	beq.n	8019f00 <pvPortMalloc+0x154>
 8019e5c:	6a3b      	ldr	r3, [r7, #32]
 8019e5e:	681b      	ldr	r3, [r3, #0]
 8019e60:	2208      	movs	r2, #8
 8019e62:	4413      	add	r3, r2
 8019e64:	61fb      	str	r3, [r7, #28]
 8019e66:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e68:	681a      	ldr	r2, [r3, #0]
 8019e6a:	6a3b      	ldr	r3, [r7, #32]
 8019e6c:	601a      	str	r2, [r3, #0]
 8019e6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019e70:	685a      	ldr	r2, [r3, #4]
 8019e72:	687b      	ldr	r3, [r7, #4]
 8019e74:	1ad2      	subs	r2, r2, r3
 8019e76:	2308      	movs	r3, #8
 8019e78:	005b      	lsls	r3, r3, #1
 8019e7a:	429a      	cmp	r2, r3
 8019e7c:	d920      	bls.n	8019ec0 <pvPortMalloc+0x114>
 8019e7e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8019e80:	687b      	ldr	r3, [r7, #4]
 8019e82:	4413      	add	r3, r2
 8019e84:	61bb      	str	r3, [r7, #24]
 8019e86:	69bb      	ldr	r3, [r7, #24]
 8019e88:	f003 0307 	and.w	r3, r3, #7
 8019e8c:	2b00      	cmp	r3, #0
 8019e8e:	d00b      	beq.n	8019ea8 <pvPortMalloc+0xfc>
 8019e90:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019e94:	f383 8811 	msr	BASEPRI, r3
 8019e98:	f3bf 8f6f 	isb	sy
 8019e9c:	f3bf 8f4f 	dsb	sy
 8019ea0:	613b      	str	r3, [r7, #16]
 8019ea2:	bf00      	nop
 8019ea4:	bf00      	nop
 8019ea6:	e7fd      	b.n	8019ea4 <pvPortMalloc+0xf8>
 8019ea8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019eaa:	685a      	ldr	r2, [r3, #4]
 8019eac:	687b      	ldr	r3, [r7, #4]
 8019eae:	1ad2      	subs	r2, r2, r3
 8019eb0:	69bb      	ldr	r3, [r7, #24]
 8019eb2:	605a      	str	r2, [r3, #4]
 8019eb4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019eb6:	687a      	ldr	r2, [r7, #4]
 8019eb8:	605a      	str	r2, [r3, #4]
 8019eba:	69b8      	ldr	r0, [r7, #24]
 8019ebc:	f000 f90a 	bl	801a0d4 <prvInsertBlockIntoFreeList>
 8019ec0:	4b1d      	ldr	r3, [pc, #116]	@ (8019f38 <pvPortMalloc+0x18c>)
 8019ec2:	681a      	ldr	r2, [r3, #0]
 8019ec4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019ec6:	685b      	ldr	r3, [r3, #4]
 8019ec8:	1ad3      	subs	r3, r2, r3
 8019eca:	4a1b      	ldr	r2, [pc, #108]	@ (8019f38 <pvPortMalloc+0x18c>)
 8019ecc:	6013      	str	r3, [r2, #0]
 8019ece:	4b1a      	ldr	r3, [pc, #104]	@ (8019f38 <pvPortMalloc+0x18c>)
 8019ed0:	681a      	ldr	r2, [r3, #0]
 8019ed2:	4b1b      	ldr	r3, [pc, #108]	@ (8019f40 <pvPortMalloc+0x194>)
 8019ed4:	681b      	ldr	r3, [r3, #0]
 8019ed6:	429a      	cmp	r2, r3
 8019ed8:	d203      	bcs.n	8019ee2 <pvPortMalloc+0x136>
 8019eda:	4b17      	ldr	r3, [pc, #92]	@ (8019f38 <pvPortMalloc+0x18c>)
 8019edc:	681b      	ldr	r3, [r3, #0]
 8019ede:	4a18      	ldr	r2, [pc, #96]	@ (8019f40 <pvPortMalloc+0x194>)
 8019ee0:	6013      	str	r3, [r2, #0]
 8019ee2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019ee4:	685a      	ldr	r2, [r3, #4]
 8019ee6:	4b13      	ldr	r3, [pc, #76]	@ (8019f34 <pvPortMalloc+0x188>)
 8019ee8:	681b      	ldr	r3, [r3, #0]
 8019eea:	431a      	orrs	r2, r3
 8019eec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019eee:	605a      	str	r2, [r3, #4]
 8019ef0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019ef2:	2200      	movs	r2, #0
 8019ef4:	601a      	str	r2, [r3, #0]
 8019ef6:	4b13      	ldr	r3, [pc, #76]	@ (8019f44 <pvPortMalloc+0x198>)
 8019ef8:	681b      	ldr	r3, [r3, #0]
 8019efa:	3301      	adds	r3, #1
 8019efc:	4a11      	ldr	r2, [pc, #68]	@ (8019f44 <pvPortMalloc+0x198>)
 8019efe:	6013      	str	r3, [r2, #0]
 8019f00:	f7fe fb26 	bl	8018550 <xTaskResumeAll>
 8019f04:	69fb      	ldr	r3, [r7, #28]
 8019f06:	f003 0307 	and.w	r3, r3, #7
 8019f0a:	2b00      	cmp	r3, #0
 8019f0c:	d00b      	beq.n	8019f26 <pvPortMalloc+0x17a>
 8019f0e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019f12:	f383 8811 	msr	BASEPRI, r3
 8019f16:	f3bf 8f6f 	isb	sy
 8019f1a:	f3bf 8f4f 	dsb	sy
 8019f1e:	60fb      	str	r3, [r7, #12]
 8019f20:	bf00      	nop
 8019f22:	bf00      	nop
 8019f24:	e7fd      	b.n	8019f22 <pvPortMalloc+0x176>
 8019f26:	69fb      	ldr	r3, [r7, #28]
 8019f28:	4618      	mov	r0, r3
 8019f2a:	3728      	adds	r7, #40	@ 0x28
 8019f2c:	46bd      	mov	sp, r7
 8019f2e:	bd80      	pop	{r7, pc}
 8019f30:	2000b350 	.word	0x2000b350
 8019f34:	2000b364 	.word	0x2000b364
 8019f38:	2000b354 	.word	0x2000b354
 8019f3c:	2000b348 	.word	0x2000b348
 8019f40:	2000b358 	.word	0x2000b358
 8019f44:	2000b35c 	.word	0x2000b35c

08019f48 <vPortFree>:
 8019f48:	b580      	push	{r7, lr}
 8019f4a:	b086      	sub	sp, #24
 8019f4c:	af00      	add	r7, sp, #0
 8019f4e:	6078      	str	r0, [r7, #4]
 8019f50:	687b      	ldr	r3, [r7, #4]
 8019f52:	617b      	str	r3, [r7, #20]
 8019f54:	687b      	ldr	r3, [r7, #4]
 8019f56:	2b00      	cmp	r3, #0
 8019f58:	d04f      	beq.n	8019ffa <vPortFree+0xb2>
 8019f5a:	2308      	movs	r3, #8
 8019f5c:	425b      	negs	r3, r3
 8019f5e:	697a      	ldr	r2, [r7, #20]
 8019f60:	4413      	add	r3, r2
 8019f62:	617b      	str	r3, [r7, #20]
 8019f64:	697b      	ldr	r3, [r7, #20]
 8019f66:	613b      	str	r3, [r7, #16]
 8019f68:	693b      	ldr	r3, [r7, #16]
 8019f6a:	685a      	ldr	r2, [r3, #4]
 8019f6c:	4b25      	ldr	r3, [pc, #148]	@ (801a004 <vPortFree+0xbc>)
 8019f6e:	681b      	ldr	r3, [r3, #0]
 8019f70:	4013      	ands	r3, r2
 8019f72:	2b00      	cmp	r3, #0
 8019f74:	d10b      	bne.n	8019f8e <vPortFree+0x46>
 8019f76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019f7a:	f383 8811 	msr	BASEPRI, r3
 8019f7e:	f3bf 8f6f 	isb	sy
 8019f82:	f3bf 8f4f 	dsb	sy
 8019f86:	60fb      	str	r3, [r7, #12]
 8019f88:	bf00      	nop
 8019f8a:	bf00      	nop
 8019f8c:	e7fd      	b.n	8019f8a <vPortFree+0x42>
 8019f8e:	693b      	ldr	r3, [r7, #16]
 8019f90:	681b      	ldr	r3, [r3, #0]
 8019f92:	2b00      	cmp	r3, #0
 8019f94:	d00b      	beq.n	8019fae <vPortFree+0x66>
 8019f96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019f9a:	f383 8811 	msr	BASEPRI, r3
 8019f9e:	f3bf 8f6f 	isb	sy
 8019fa2:	f3bf 8f4f 	dsb	sy
 8019fa6:	60bb      	str	r3, [r7, #8]
 8019fa8:	bf00      	nop
 8019faa:	bf00      	nop
 8019fac:	e7fd      	b.n	8019faa <vPortFree+0x62>
 8019fae:	693b      	ldr	r3, [r7, #16]
 8019fb0:	685a      	ldr	r2, [r3, #4]
 8019fb2:	4b14      	ldr	r3, [pc, #80]	@ (801a004 <vPortFree+0xbc>)
 8019fb4:	681b      	ldr	r3, [r3, #0]
 8019fb6:	4013      	ands	r3, r2
 8019fb8:	2b00      	cmp	r3, #0
 8019fba:	d01e      	beq.n	8019ffa <vPortFree+0xb2>
 8019fbc:	693b      	ldr	r3, [r7, #16]
 8019fbe:	681b      	ldr	r3, [r3, #0]
 8019fc0:	2b00      	cmp	r3, #0
 8019fc2:	d11a      	bne.n	8019ffa <vPortFree+0xb2>
 8019fc4:	693b      	ldr	r3, [r7, #16]
 8019fc6:	685a      	ldr	r2, [r3, #4]
 8019fc8:	4b0e      	ldr	r3, [pc, #56]	@ (801a004 <vPortFree+0xbc>)
 8019fca:	681b      	ldr	r3, [r3, #0]
 8019fcc:	43db      	mvns	r3, r3
 8019fce:	401a      	ands	r2, r3
 8019fd0:	693b      	ldr	r3, [r7, #16]
 8019fd2:	605a      	str	r2, [r3, #4]
 8019fd4:	f7fe faae 	bl	8018534 <vTaskSuspendAll>
 8019fd8:	693b      	ldr	r3, [r7, #16]
 8019fda:	685a      	ldr	r2, [r3, #4]
 8019fdc:	4b0a      	ldr	r3, [pc, #40]	@ (801a008 <vPortFree+0xc0>)
 8019fde:	681b      	ldr	r3, [r3, #0]
 8019fe0:	4413      	add	r3, r2
 8019fe2:	4a09      	ldr	r2, [pc, #36]	@ (801a008 <vPortFree+0xc0>)
 8019fe4:	6013      	str	r3, [r2, #0]
 8019fe6:	6938      	ldr	r0, [r7, #16]
 8019fe8:	f000 f874 	bl	801a0d4 <prvInsertBlockIntoFreeList>
 8019fec:	4b07      	ldr	r3, [pc, #28]	@ (801a00c <vPortFree+0xc4>)
 8019fee:	681b      	ldr	r3, [r3, #0]
 8019ff0:	3301      	adds	r3, #1
 8019ff2:	4a06      	ldr	r2, [pc, #24]	@ (801a00c <vPortFree+0xc4>)
 8019ff4:	6013      	str	r3, [r2, #0]
 8019ff6:	f7fe faab 	bl	8018550 <xTaskResumeAll>
 8019ffa:	bf00      	nop
 8019ffc:	3718      	adds	r7, #24
 8019ffe:	46bd      	mov	sp, r7
 801a000:	bd80      	pop	{r7, pc}
 801a002:	bf00      	nop
 801a004:	2000b364 	.word	0x2000b364
 801a008:	2000b354 	.word	0x2000b354
 801a00c:	2000b360 	.word	0x2000b360

0801a010 <prvHeapInit>:
 801a010:	b480      	push	{r7}
 801a012:	b085      	sub	sp, #20
 801a014:	af00      	add	r7, sp, #0
 801a016:	f247 5330 	movw	r3, #30000	@ 0x7530
 801a01a:	60bb      	str	r3, [r7, #8]
 801a01c:	4b27      	ldr	r3, [pc, #156]	@ (801a0bc <prvHeapInit+0xac>)
 801a01e:	60fb      	str	r3, [r7, #12]
 801a020:	68fb      	ldr	r3, [r7, #12]
 801a022:	f003 0307 	and.w	r3, r3, #7
 801a026:	2b00      	cmp	r3, #0
 801a028:	d00c      	beq.n	801a044 <prvHeapInit+0x34>
 801a02a:	68fb      	ldr	r3, [r7, #12]
 801a02c:	3307      	adds	r3, #7
 801a02e:	60fb      	str	r3, [r7, #12]
 801a030:	68fb      	ldr	r3, [r7, #12]
 801a032:	f023 0307 	bic.w	r3, r3, #7
 801a036:	60fb      	str	r3, [r7, #12]
 801a038:	68ba      	ldr	r2, [r7, #8]
 801a03a:	68fb      	ldr	r3, [r7, #12]
 801a03c:	1ad3      	subs	r3, r2, r3
 801a03e:	4a1f      	ldr	r2, [pc, #124]	@ (801a0bc <prvHeapInit+0xac>)
 801a040:	4413      	add	r3, r2
 801a042:	60bb      	str	r3, [r7, #8]
 801a044:	68fb      	ldr	r3, [r7, #12]
 801a046:	607b      	str	r3, [r7, #4]
 801a048:	4a1d      	ldr	r2, [pc, #116]	@ (801a0c0 <prvHeapInit+0xb0>)
 801a04a:	687b      	ldr	r3, [r7, #4]
 801a04c:	6013      	str	r3, [r2, #0]
 801a04e:	4b1c      	ldr	r3, [pc, #112]	@ (801a0c0 <prvHeapInit+0xb0>)
 801a050:	2200      	movs	r2, #0
 801a052:	605a      	str	r2, [r3, #4]
 801a054:	687b      	ldr	r3, [r7, #4]
 801a056:	68ba      	ldr	r2, [r7, #8]
 801a058:	4413      	add	r3, r2
 801a05a:	60fb      	str	r3, [r7, #12]
 801a05c:	2208      	movs	r2, #8
 801a05e:	68fb      	ldr	r3, [r7, #12]
 801a060:	1a9b      	subs	r3, r3, r2
 801a062:	60fb      	str	r3, [r7, #12]
 801a064:	68fb      	ldr	r3, [r7, #12]
 801a066:	f023 0307 	bic.w	r3, r3, #7
 801a06a:	60fb      	str	r3, [r7, #12]
 801a06c:	68fb      	ldr	r3, [r7, #12]
 801a06e:	4a15      	ldr	r2, [pc, #84]	@ (801a0c4 <prvHeapInit+0xb4>)
 801a070:	6013      	str	r3, [r2, #0]
 801a072:	4b14      	ldr	r3, [pc, #80]	@ (801a0c4 <prvHeapInit+0xb4>)
 801a074:	681b      	ldr	r3, [r3, #0]
 801a076:	2200      	movs	r2, #0
 801a078:	605a      	str	r2, [r3, #4]
 801a07a:	4b12      	ldr	r3, [pc, #72]	@ (801a0c4 <prvHeapInit+0xb4>)
 801a07c:	681b      	ldr	r3, [r3, #0]
 801a07e:	2200      	movs	r2, #0
 801a080:	601a      	str	r2, [r3, #0]
 801a082:	687b      	ldr	r3, [r7, #4]
 801a084:	603b      	str	r3, [r7, #0]
 801a086:	683b      	ldr	r3, [r7, #0]
 801a088:	68fa      	ldr	r2, [r7, #12]
 801a08a:	1ad2      	subs	r2, r2, r3
 801a08c:	683b      	ldr	r3, [r7, #0]
 801a08e:	605a      	str	r2, [r3, #4]
 801a090:	4b0c      	ldr	r3, [pc, #48]	@ (801a0c4 <prvHeapInit+0xb4>)
 801a092:	681a      	ldr	r2, [r3, #0]
 801a094:	683b      	ldr	r3, [r7, #0]
 801a096:	601a      	str	r2, [r3, #0]
 801a098:	683b      	ldr	r3, [r7, #0]
 801a09a:	685b      	ldr	r3, [r3, #4]
 801a09c:	4a0a      	ldr	r2, [pc, #40]	@ (801a0c8 <prvHeapInit+0xb8>)
 801a09e:	6013      	str	r3, [r2, #0]
 801a0a0:	683b      	ldr	r3, [r7, #0]
 801a0a2:	685b      	ldr	r3, [r3, #4]
 801a0a4:	4a09      	ldr	r2, [pc, #36]	@ (801a0cc <prvHeapInit+0xbc>)
 801a0a6:	6013      	str	r3, [r2, #0]
 801a0a8:	4b09      	ldr	r3, [pc, #36]	@ (801a0d0 <prvHeapInit+0xc0>)
 801a0aa:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 801a0ae:	601a      	str	r2, [r3, #0]
 801a0b0:	bf00      	nop
 801a0b2:	3714      	adds	r7, #20
 801a0b4:	46bd      	mov	sp, r7
 801a0b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a0ba:	4770      	bx	lr
 801a0bc:	20003e18 	.word	0x20003e18
 801a0c0:	2000b348 	.word	0x2000b348
 801a0c4:	2000b350 	.word	0x2000b350
 801a0c8:	2000b358 	.word	0x2000b358
 801a0cc:	2000b354 	.word	0x2000b354
 801a0d0:	2000b364 	.word	0x2000b364

0801a0d4 <prvInsertBlockIntoFreeList>:
 801a0d4:	b480      	push	{r7}
 801a0d6:	b085      	sub	sp, #20
 801a0d8:	af00      	add	r7, sp, #0
 801a0da:	6078      	str	r0, [r7, #4]
 801a0dc:	4b28      	ldr	r3, [pc, #160]	@ (801a180 <prvInsertBlockIntoFreeList+0xac>)
 801a0de:	60fb      	str	r3, [r7, #12]
 801a0e0:	e002      	b.n	801a0e8 <prvInsertBlockIntoFreeList+0x14>
 801a0e2:	68fb      	ldr	r3, [r7, #12]
 801a0e4:	681b      	ldr	r3, [r3, #0]
 801a0e6:	60fb      	str	r3, [r7, #12]
 801a0e8:	68fb      	ldr	r3, [r7, #12]
 801a0ea:	681b      	ldr	r3, [r3, #0]
 801a0ec:	687a      	ldr	r2, [r7, #4]
 801a0ee:	429a      	cmp	r2, r3
 801a0f0:	d8f7      	bhi.n	801a0e2 <prvInsertBlockIntoFreeList+0xe>
 801a0f2:	68fb      	ldr	r3, [r7, #12]
 801a0f4:	60bb      	str	r3, [r7, #8]
 801a0f6:	68fb      	ldr	r3, [r7, #12]
 801a0f8:	685b      	ldr	r3, [r3, #4]
 801a0fa:	68ba      	ldr	r2, [r7, #8]
 801a0fc:	4413      	add	r3, r2
 801a0fe:	687a      	ldr	r2, [r7, #4]
 801a100:	429a      	cmp	r2, r3
 801a102:	d108      	bne.n	801a116 <prvInsertBlockIntoFreeList+0x42>
 801a104:	68fb      	ldr	r3, [r7, #12]
 801a106:	685a      	ldr	r2, [r3, #4]
 801a108:	687b      	ldr	r3, [r7, #4]
 801a10a:	685b      	ldr	r3, [r3, #4]
 801a10c:	441a      	add	r2, r3
 801a10e:	68fb      	ldr	r3, [r7, #12]
 801a110:	605a      	str	r2, [r3, #4]
 801a112:	68fb      	ldr	r3, [r7, #12]
 801a114:	607b      	str	r3, [r7, #4]
 801a116:	687b      	ldr	r3, [r7, #4]
 801a118:	60bb      	str	r3, [r7, #8]
 801a11a:	687b      	ldr	r3, [r7, #4]
 801a11c:	685b      	ldr	r3, [r3, #4]
 801a11e:	68ba      	ldr	r2, [r7, #8]
 801a120:	441a      	add	r2, r3
 801a122:	68fb      	ldr	r3, [r7, #12]
 801a124:	681b      	ldr	r3, [r3, #0]
 801a126:	429a      	cmp	r2, r3
 801a128:	d118      	bne.n	801a15c <prvInsertBlockIntoFreeList+0x88>
 801a12a:	68fb      	ldr	r3, [r7, #12]
 801a12c:	681a      	ldr	r2, [r3, #0]
 801a12e:	4b15      	ldr	r3, [pc, #84]	@ (801a184 <prvInsertBlockIntoFreeList+0xb0>)
 801a130:	681b      	ldr	r3, [r3, #0]
 801a132:	429a      	cmp	r2, r3
 801a134:	d00d      	beq.n	801a152 <prvInsertBlockIntoFreeList+0x7e>
 801a136:	687b      	ldr	r3, [r7, #4]
 801a138:	685a      	ldr	r2, [r3, #4]
 801a13a:	68fb      	ldr	r3, [r7, #12]
 801a13c:	681b      	ldr	r3, [r3, #0]
 801a13e:	685b      	ldr	r3, [r3, #4]
 801a140:	441a      	add	r2, r3
 801a142:	687b      	ldr	r3, [r7, #4]
 801a144:	605a      	str	r2, [r3, #4]
 801a146:	68fb      	ldr	r3, [r7, #12]
 801a148:	681b      	ldr	r3, [r3, #0]
 801a14a:	681a      	ldr	r2, [r3, #0]
 801a14c:	687b      	ldr	r3, [r7, #4]
 801a14e:	601a      	str	r2, [r3, #0]
 801a150:	e008      	b.n	801a164 <prvInsertBlockIntoFreeList+0x90>
 801a152:	4b0c      	ldr	r3, [pc, #48]	@ (801a184 <prvInsertBlockIntoFreeList+0xb0>)
 801a154:	681a      	ldr	r2, [r3, #0]
 801a156:	687b      	ldr	r3, [r7, #4]
 801a158:	601a      	str	r2, [r3, #0]
 801a15a:	e003      	b.n	801a164 <prvInsertBlockIntoFreeList+0x90>
 801a15c:	68fb      	ldr	r3, [r7, #12]
 801a15e:	681a      	ldr	r2, [r3, #0]
 801a160:	687b      	ldr	r3, [r7, #4]
 801a162:	601a      	str	r2, [r3, #0]
 801a164:	68fa      	ldr	r2, [r7, #12]
 801a166:	687b      	ldr	r3, [r7, #4]
 801a168:	429a      	cmp	r2, r3
 801a16a:	d002      	beq.n	801a172 <prvInsertBlockIntoFreeList+0x9e>
 801a16c:	68fb      	ldr	r3, [r7, #12]
 801a16e:	687a      	ldr	r2, [r7, #4]
 801a170:	601a      	str	r2, [r3, #0]
 801a172:	bf00      	nop
 801a174:	3714      	adds	r7, #20
 801a176:	46bd      	mov	sp, r7
 801a178:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a17c:	4770      	bx	lr
 801a17e:	bf00      	nop
 801a180:	2000b348 	.word	0x2000b348
 801a184:	2000b350 	.word	0x2000b350

0801a188 <MX_USB_DEVICE_Init>:
 801a188:	b580      	push	{r7, lr}
 801a18a:	af00      	add	r7, sp, #0
 801a18c:	2200      	movs	r2, #0
 801a18e:	4912      	ldr	r1, [pc, #72]	@ (801a1d8 <MX_USB_DEVICE_Init+0x50>)
 801a190:	4812      	ldr	r0, [pc, #72]	@ (801a1dc <MX_USB_DEVICE_Init+0x54>)
 801a192:	f7fb fc0d 	bl	80159b0 <USBD_Init>
 801a196:	4603      	mov	r3, r0
 801a198:	2b00      	cmp	r3, #0
 801a19a:	d001      	beq.n	801a1a0 <MX_USB_DEVICE_Init+0x18>
 801a19c:	f7e9 fb2c 	bl	80037f8 <Error_Handler>
 801a1a0:	490f      	ldr	r1, [pc, #60]	@ (801a1e0 <MX_USB_DEVICE_Init+0x58>)
 801a1a2:	480e      	ldr	r0, [pc, #56]	@ (801a1dc <MX_USB_DEVICE_Init+0x54>)
 801a1a4:	f7fb fc34 	bl	8015a10 <USBD_RegisterClass>
 801a1a8:	4603      	mov	r3, r0
 801a1aa:	2b00      	cmp	r3, #0
 801a1ac:	d001      	beq.n	801a1b2 <MX_USB_DEVICE_Init+0x2a>
 801a1ae:	f7e9 fb23 	bl	80037f8 <Error_Handler>
 801a1b2:	490c      	ldr	r1, [pc, #48]	@ (801a1e4 <MX_USB_DEVICE_Init+0x5c>)
 801a1b4:	4809      	ldr	r0, [pc, #36]	@ (801a1dc <MX_USB_DEVICE_Init+0x54>)
 801a1b6:	f7fb fb6b 	bl	8015890 <USBD_CDC_RegisterInterface>
 801a1ba:	4603      	mov	r3, r0
 801a1bc:	2b00      	cmp	r3, #0
 801a1be:	d001      	beq.n	801a1c4 <MX_USB_DEVICE_Init+0x3c>
 801a1c0:	f7e9 fb1a 	bl	80037f8 <Error_Handler>
 801a1c4:	4805      	ldr	r0, [pc, #20]	@ (801a1dc <MX_USB_DEVICE_Init+0x54>)
 801a1c6:	f7fb fc59 	bl	8015a7c <USBD_Start>
 801a1ca:	4603      	mov	r3, r0
 801a1cc:	2b00      	cmp	r3, #0
 801a1ce:	d001      	beq.n	801a1d4 <MX_USB_DEVICE_Init+0x4c>
 801a1d0:	f7e9 fb12 	bl	80037f8 <Error_Handler>
 801a1d4:	bf00      	nop
 801a1d6:	bd80      	pop	{r7, pc}
 801a1d8:	200000c4 	.word	0x200000c4
 801a1dc:	2000b368 	.word	0x2000b368
 801a1e0:	2000002c 	.word	0x2000002c
 801a1e4:	200000b0 	.word	0x200000b0

0801a1e8 <CDC_Init_FS>:
 801a1e8:	b580      	push	{r7, lr}
 801a1ea:	af00      	add	r7, sp, #0
 801a1ec:	2200      	movs	r2, #0
 801a1ee:	4905      	ldr	r1, [pc, #20]	@ (801a204 <CDC_Init_FS+0x1c>)
 801a1f0:	4805      	ldr	r0, [pc, #20]	@ (801a208 <CDC_Init_FS+0x20>)
 801a1f2:	f7fb fb67 	bl	80158c4 <USBD_CDC_SetTxBuffer>
 801a1f6:	4905      	ldr	r1, [pc, #20]	@ (801a20c <CDC_Init_FS+0x24>)
 801a1f8:	4803      	ldr	r0, [pc, #12]	@ (801a208 <CDC_Init_FS+0x20>)
 801a1fa:	f7fb fb85 	bl	8015908 <USBD_CDC_SetRxBuffer>
 801a1fe:	2300      	movs	r3, #0
 801a200:	4618      	mov	r0, r3
 801a202:	bd80      	pop	{r7, pc}
 801a204:	2000be4c 	.word	0x2000be4c
 801a208:	2000b368 	.word	0x2000b368
 801a20c:	2000b64c 	.word	0x2000b64c

0801a210 <CDC_DeInit_FS>:
 801a210:	b480      	push	{r7}
 801a212:	af00      	add	r7, sp, #0
 801a214:	2300      	movs	r3, #0
 801a216:	4618      	mov	r0, r3
 801a218:	46bd      	mov	sp, r7
 801a21a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a21e:	4770      	bx	lr

0801a220 <CDC_Control_FS>:
 801a220:	b480      	push	{r7}
 801a222:	b083      	sub	sp, #12
 801a224:	af00      	add	r7, sp, #0
 801a226:	4603      	mov	r3, r0
 801a228:	6039      	str	r1, [r7, #0]
 801a22a:	71fb      	strb	r3, [r7, #7]
 801a22c:	4613      	mov	r3, r2
 801a22e:	80bb      	strh	r3, [r7, #4]
 801a230:	79fb      	ldrb	r3, [r7, #7]
 801a232:	2b23      	cmp	r3, #35	@ 0x23
 801a234:	f200 808c 	bhi.w	801a350 <CDC_Control_FS+0x130>
 801a238:	a201      	add	r2, pc, #4	@ (adr r2, 801a240 <CDC_Control_FS+0x20>)
 801a23a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801a23e:	bf00      	nop
 801a240:	0801a351 	.word	0x0801a351
 801a244:	0801a351 	.word	0x0801a351
 801a248:	0801a351 	.word	0x0801a351
 801a24c:	0801a351 	.word	0x0801a351
 801a250:	0801a351 	.word	0x0801a351
 801a254:	0801a351 	.word	0x0801a351
 801a258:	0801a351 	.word	0x0801a351
 801a25c:	0801a351 	.word	0x0801a351
 801a260:	0801a351 	.word	0x0801a351
 801a264:	0801a351 	.word	0x0801a351
 801a268:	0801a351 	.word	0x0801a351
 801a26c:	0801a351 	.word	0x0801a351
 801a270:	0801a351 	.word	0x0801a351
 801a274:	0801a351 	.word	0x0801a351
 801a278:	0801a351 	.word	0x0801a351
 801a27c:	0801a351 	.word	0x0801a351
 801a280:	0801a351 	.word	0x0801a351
 801a284:	0801a351 	.word	0x0801a351
 801a288:	0801a351 	.word	0x0801a351
 801a28c:	0801a351 	.word	0x0801a351
 801a290:	0801a351 	.word	0x0801a351
 801a294:	0801a351 	.word	0x0801a351
 801a298:	0801a351 	.word	0x0801a351
 801a29c:	0801a351 	.word	0x0801a351
 801a2a0:	0801a351 	.word	0x0801a351
 801a2a4:	0801a351 	.word	0x0801a351
 801a2a8:	0801a351 	.word	0x0801a351
 801a2ac:	0801a351 	.word	0x0801a351
 801a2b0:	0801a351 	.word	0x0801a351
 801a2b4:	0801a351 	.word	0x0801a351
 801a2b8:	0801a351 	.word	0x0801a351
 801a2bc:	0801a351 	.word	0x0801a351
 801a2c0:	0801a2d1 	.word	0x0801a2d1
 801a2c4:	0801a30b 	.word	0x0801a30b
 801a2c8:	0801a351 	.word	0x0801a351
 801a2cc:	0801a351 	.word	0x0801a351
 801a2d0:	683b      	ldr	r3, [r7, #0]
 801a2d2:	781a      	ldrb	r2, [r3, #0]
 801a2d4:	4b22      	ldr	r3, [pc, #136]	@ (801a360 <CDC_Control_FS+0x140>)
 801a2d6:	701a      	strb	r2, [r3, #0]
 801a2d8:	683b      	ldr	r3, [r7, #0]
 801a2da:	785a      	ldrb	r2, [r3, #1]
 801a2dc:	4b20      	ldr	r3, [pc, #128]	@ (801a360 <CDC_Control_FS+0x140>)
 801a2de:	705a      	strb	r2, [r3, #1]
 801a2e0:	683b      	ldr	r3, [r7, #0]
 801a2e2:	789a      	ldrb	r2, [r3, #2]
 801a2e4:	4b1e      	ldr	r3, [pc, #120]	@ (801a360 <CDC_Control_FS+0x140>)
 801a2e6:	709a      	strb	r2, [r3, #2]
 801a2e8:	683b      	ldr	r3, [r7, #0]
 801a2ea:	78da      	ldrb	r2, [r3, #3]
 801a2ec:	4b1c      	ldr	r3, [pc, #112]	@ (801a360 <CDC_Control_FS+0x140>)
 801a2ee:	70da      	strb	r2, [r3, #3]
 801a2f0:	683b      	ldr	r3, [r7, #0]
 801a2f2:	791a      	ldrb	r2, [r3, #4]
 801a2f4:	4b1a      	ldr	r3, [pc, #104]	@ (801a360 <CDC_Control_FS+0x140>)
 801a2f6:	711a      	strb	r2, [r3, #4]
 801a2f8:	683b      	ldr	r3, [r7, #0]
 801a2fa:	795a      	ldrb	r2, [r3, #5]
 801a2fc:	4b18      	ldr	r3, [pc, #96]	@ (801a360 <CDC_Control_FS+0x140>)
 801a2fe:	715a      	strb	r2, [r3, #5]
 801a300:	683b      	ldr	r3, [r7, #0]
 801a302:	799a      	ldrb	r2, [r3, #6]
 801a304:	4b16      	ldr	r3, [pc, #88]	@ (801a360 <CDC_Control_FS+0x140>)
 801a306:	719a      	strb	r2, [r3, #6]
 801a308:	e023      	b.n	801a352 <CDC_Control_FS+0x132>
 801a30a:	4b15      	ldr	r3, [pc, #84]	@ (801a360 <CDC_Control_FS+0x140>)
 801a30c:	781a      	ldrb	r2, [r3, #0]
 801a30e:	683b      	ldr	r3, [r7, #0]
 801a310:	701a      	strb	r2, [r3, #0]
 801a312:	683b      	ldr	r3, [r7, #0]
 801a314:	3301      	adds	r3, #1
 801a316:	4a12      	ldr	r2, [pc, #72]	@ (801a360 <CDC_Control_FS+0x140>)
 801a318:	7852      	ldrb	r2, [r2, #1]
 801a31a:	701a      	strb	r2, [r3, #0]
 801a31c:	683b      	ldr	r3, [r7, #0]
 801a31e:	3302      	adds	r3, #2
 801a320:	4a0f      	ldr	r2, [pc, #60]	@ (801a360 <CDC_Control_FS+0x140>)
 801a322:	7892      	ldrb	r2, [r2, #2]
 801a324:	701a      	strb	r2, [r3, #0]
 801a326:	683b      	ldr	r3, [r7, #0]
 801a328:	3303      	adds	r3, #3
 801a32a:	4a0d      	ldr	r2, [pc, #52]	@ (801a360 <CDC_Control_FS+0x140>)
 801a32c:	78d2      	ldrb	r2, [r2, #3]
 801a32e:	701a      	strb	r2, [r3, #0]
 801a330:	683b      	ldr	r3, [r7, #0]
 801a332:	3304      	adds	r3, #4
 801a334:	4a0a      	ldr	r2, [pc, #40]	@ (801a360 <CDC_Control_FS+0x140>)
 801a336:	7912      	ldrb	r2, [r2, #4]
 801a338:	701a      	strb	r2, [r3, #0]
 801a33a:	683b      	ldr	r3, [r7, #0]
 801a33c:	3305      	adds	r3, #5
 801a33e:	4a08      	ldr	r2, [pc, #32]	@ (801a360 <CDC_Control_FS+0x140>)
 801a340:	7952      	ldrb	r2, [r2, #5]
 801a342:	701a      	strb	r2, [r3, #0]
 801a344:	683b      	ldr	r3, [r7, #0]
 801a346:	3306      	adds	r3, #6
 801a348:	4a05      	ldr	r2, [pc, #20]	@ (801a360 <CDC_Control_FS+0x140>)
 801a34a:	7992      	ldrb	r2, [r2, #6]
 801a34c:	701a      	strb	r2, [r3, #0]
 801a34e:	e000      	b.n	801a352 <CDC_Control_FS+0x132>
 801a350:	bf00      	nop
 801a352:	2300      	movs	r3, #0
 801a354:	4618      	mov	r0, r3
 801a356:	370c      	adds	r7, #12
 801a358:	46bd      	mov	sp, r7
 801a35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a35e:	4770      	bx	lr
 801a360:	2000b644 	.word	0x2000b644

0801a364 <CDC_Receive_FS>:
 801a364:	b580      	push	{r7, lr}
 801a366:	b082      	sub	sp, #8
 801a368:	af00      	add	r7, sp, #0
 801a36a:	6078      	str	r0, [r7, #4]
 801a36c:	6039      	str	r1, [r7, #0]
 801a36e:	6879      	ldr	r1, [r7, #4]
 801a370:	4807      	ldr	r0, [pc, #28]	@ (801a390 <CDC_Receive_FS+0x2c>)
 801a372:	f7fb fac9 	bl	8015908 <USBD_CDC_SetRxBuffer>
 801a376:	4806      	ldr	r0, [pc, #24]	@ (801a390 <CDC_Receive_FS+0x2c>)
 801a378:	f7fb fae4 	bl	8015944 <USBD_CDC_ReceivePacket>
 801a37c:	6839      	ldr	r1, [r7, #0]
 801a37e:	6878      	ldr	r0, [r7, #4]
 801a380:	f7f0 fdc6 	bl	800af10 <usb_vcp_processing>
 801a384:	2300      	movs	r3, #0
 801a386:	4618      	mov	r0, r3
 801a388:	3708      	adds	r7, #8
 801a38a:	46bd      	mov	sp, r7
 801a38c:	bd80      	pop	{r7, pc}
 801a38e:	bf00      	nop
 801a390:	2000b368 	.word	0x2000b368

0801a394 <CDC_TransmitCplt_FS>:
 801a394:	b480      	push	{r7}
 801a396:	b087      	sub	sp, #28
 801a398:	af00      	add	r7, sp, #0
 801a39a:	60f8      	str	r0, [r7, #12]
 801a39c:	60b9      	str	r1, [r7, #8]
 801a39e:	4613      	mov	r3, r2
 801a3a0:	71fb      	strb	r3, [r7, #7]
 801a3a2:	2300      	movs	r3, #0
 801a3a4:	75fb      	strb	r3, [r7, #23]
 801a3a6:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801a3aa:	4618      	mov	r0, r3
 801a3ac:	371c      	adds	r7, #28
 801a3ae:	46bd      	mov	sp, r7
 801a3b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3b4:	4770      	bx	lr
	...

0801a3b8 <USBD_FS_DeviceDescriptor>:
 801a3b8:	b480      	push	{r7}
 801a3ba:	b083      	sub	sp, #12
 801a3bc:	af00      	add	r7, sp, #0
 801a3be:	4603      	mov	r3, r0
 801a3c0:	6039      	str	r1, [r7, #0]
 801a3c2:	71fb      	strb	r3, [r7, #7]
 801a3c4:	683b      	ldr	r3, [r7, #0]
 801a3c6:	2212      	movs	r2, #18
 801a3c8:	801a      	strh	r2, [r3, #0]
 801a3ca:	4b03      	ldr	r3, [pc, #12]	@ (801a3d8 <USBD_FS_DeviceDescriptor+0x20>)
 801a3cc:	4618      	mov	r0, r3
 801a3ce:	370c      	adds	r7, #12
 801a3d0:	46bd      	mov	sp, r7
 801a3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3d6:	4770      	bx	lr
 801a3d8:	200000e0 	.word	0x200000e0

0801a3dc <USBD_FS_LangIDStrDescriptor>:
 801a3dc:	b480      	push	{r7}
 801a3de:	b083      	sub	sp, #12
 801a3e0:	af00      	add	r7, sp, #0
 801a3e2:	4603      	mov	r3, r0
 801a3e4:	6039      	str	r1, [r7, #0]
 801a3e6:	71fb      	strb	r3, [r7, #7]
 801a3e8:	683b      	ldr	r3, [r7, #0]
 801a3ea:	2204      	movs	r2, #4
 801a3ec:	801a      	strh	r2, [r3, #0]
 801a3ee:	4b03      	ldr	r3, [pc, #12]	@ (801a3fc <USBD_FS_LangIDStrDescriptor+0x20>)
 801a3f0:	4618      	mov	r0, r3
 801a3f2:	370c      	adds	r7, #12
 801a3f4:	46bd      	mov	sp, r7
 801a3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a3fa:	4770      	bx	lr
 801a3fc:	200000f4 	.word	0x200000f4

0801a400 <USBD_FS_ProductStrDescriptor>:
 801a400:	b580      	push	{r7, lr}
 801a402:	b082      	sub	sp, #8
 801a404:	af00      	add	r7, sp, #0
 801a406:	4603      	mov	r3, r0
 801a408:	6039      	str	r1, [r7, #0]
 801a40a:	71fb      	strb	r3, [r7, #7]
 801a40c:	79fb      	ldrb	r3, [r7, #7]
 801a40e:	2b00      	cmp	r3, #0
 801a410:	d105      	bne.n	801a41e <USBD_FS_ProductStrDescriptor+0x1e>
 801a412:	683a      	ldr	r2, [r7, #0]
 801a414:	4907      	ldr	r1, [pc, #28]	@ (801a434 <USBD_FS_ProductStrDescriptor+0x34>)
 801a416:	4808      	ldr	r0, [pc, #32]	@ (801a438 <USBD_FS_ProductStrDescriptor+0x38>)
 801a418:	f7fc fcda 	bl	8016dd0 <USBD_GetString>
 801a41c:	e004      	b.n	801a428 <USBD_FS_ProductStrDescriptor+0x28>
 801a41e:	683a      	ldr	r2, [r7, #0]
 801a420:	4904      	ldr	r1, [pc, #16]	@ (801a434 <USBD_FS_ProductStrDescriptor+0x34>)
 801a422:	4805      	ldr	r0, [pc, #20]	@ (801a438 <USBD_FS_ProductStrDescriptor+0x38>)
 801a424:	f7fc fcd4 	bl	8016dd0 <USBD_GetString>
 801a428:	4b02      	ldr	r3, [pc, #8]	@ (801a434 <USBD_FS_ProductStrDescriptor+0x34>)
 801a42a:	4618      	mov	r0, r3
 801a42c:	3708      	adds	r7, #8
 801a42e:	46bd      	mov	sp, r7
 801a430:	bd80      	pop	{r7, pc}
 801a432:	bf00      	nop
 801a434:	2000c64c 	.word	0x2000c64c
 801a438:	08020fdc 	.word	0x08020fdc

0801a43c <USBD_FS_ManufacturerStrDescriptor>:
 801a43c:	b580      	push	{r7, lr}
 801a43e:	b082      	sub	sp, #8
 801a440:	af00      	add	r7, sp, #0
 801a442:	4603      	mov	r3, r0
 801a444:	6039      	str	r1, [r7, #0]
 801a446:	71fb      	strb	r3, [r7, #7]
 801a448:	683a      	ldr	r2, [r7, #0]
 801a44a:	4904      	ldr	r1, [pc, #16]	@ (801a45c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801a44c:	4804      	ldr	r0, [pc, #16]	@ (801a460 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801a44e:	f7fc fcbf 	bl	8016dd0 <USBD_GetString>
 801a452:	4b02      	ldr	r3, [pc, #8]	@ (801a45c <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801a454:	4618      	mov	r0, r3
 801a456:	3708      	adds	r7, #8
 801a458:	46bd      	mov	sp, r7
 801a45a:	bd80      	pop	{r7, pc}
 801a45c:	2000c64c 	.word	0x2000c64c
 801a460:	08020ff4 	.word	0x08020ff4

0801a464 <USBD_FS_SerialStrDescriptor>:
 801a464:	b580      	push	{r7, lr}
 801a466:	b082      	sub	sp, #8
 801a468:	af00      	add	r7, sp, #0
 801a46a:	4603      	mov	r3, r0
 801a46c:	6039      	str	r1, [r7, #0]
 801a46e:	71fb      	strb	r3, [r7, #7]
 801a470:	683b      	ldr	r3, [r7, #0]
 801a472:	221a      	movs	r2, #26
 801a474:	801a      	strh	r2, [r3, #0]
 801a476:	f000 f843 	bl	801a500 <Get_SerialNum>
 801a47a:	4b02      	ldr	r3, [pc, #8]	@ (801a484 <USBD_FS_SerialStrDescriptor+0x20>)
 801a47c:	4618      	mov	r0, r3
 801a47e:	3708      	adds	r7, #8
 801a480:	46bd      	mov	sp, r7
 801a482:	bd80      	pop	{r7, pc}
 801a484:	200000f8 	.word	0x200000f8

0801a488 <USBD_FS_ConfigStrDescriptor>:
 801a488:	b580      	push	{r7, lr}
 801a48a:	b082      	sub	sp, #8
 801a48c:	af00      	add	r7, sp, #0
 801a48e:	4603      	mov	r3, r0
 801a490:	6039      	str	r1, [r7, #0]
 801a492:	71fb      	strb	r3, [r7, #7]
 801a494:	79fb      	ldrb	r3, [r7, #7]
 801a496:	2b00      	cmp	r3, #0
 801a498:	d105      	bne.n	801a4a6 <USBD_FS_ConfigStrDescriptor+0x1e>
 801a49a:	683a      	ldr	r2, [r7, #0]
 801a49c:	4907      	ldr	r1, [pc, #28]	@ (801a4bc <USBD_FS_ConfigStrDescriptor+0x34>)
 801a49e:	4808      	ldr	r0, [pc, #32]	@ (801a4c0 <USBD_FS_ConfigStrDescriptor+0x38>)
 801a4a0:	f7fc fc96 	bl	8016dd0 <USBD_GetString>
 801a4a4:	e004      	b.n	801a4b0 <USBD_FS_ConfigStrDescriptor+0x28>
 801a4a6:	683a      	ldr	r2, [r7, #0]
 801a4a8:	4904      	ldr	r1, [pc, #16]	@ (801a4bc <USBD_FS_ConfigStrDescriptor+0x34>)
 801a4aa:	4805      	ldr	r0, [pc, #20]	@ (801a4c0 <USBD_FS_ConfigStrDescriptor+0x38>)
 801a4ac:	f7fc fc90 	bl	8016dd0 <USBD_GetString>
 801a4b0:	4b02      	ldr	r3, [pc, #8]	@ (801a4bc <USBD_FS_ConfigStrDescriptor+0x34>)
 801a4b2:	4618      	mov	r0, r3
 801a4b4:	3708      	adds	r7, #8
 801a4b6:	46bd      	mov	sp, r7
 801a4b8:	bd80      	pop	{r7, pc}
 801a4ba:	bf00      	nop
 801a4bc:	2000c64c 	.word	0x2000c64c
 801a4c0:	08021008 	.word	0x08021008

0801a4c4 <USBD_FS_InterfaceStrDescriptor>:
 801a4c4:	b580      	push	{r7, lr}
 801a4c6:	b082      	sub	sp, #8
 801a4c8:	af00      	add	r7, sp, #0
 801a4ca:	4603      	mov	r3, r0
 801a4cc:	6039      	str	r1, [r7, #0]
 801a4ce:	71fb      	strb	r3, [r7, #7]
 801a4d0:	79fb      	ldrb	r3, [r7, #7]
 801a4d2:	2b00      	cmp	r3, #0
 801a4d4:	d105      	bne.n	801a4e2 <USBD_FS_InterfaceStrDescriptor+0x1e>
 801a4d6:	683a      	ldr	r2, [r7, #0]
 801a4d8:	4907      	ldr	r1, [pc, #28]	@ (801a4f8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a4da:	4808      	ldr	r0, [pc, #32]	@ (801a4fc <USBD_FS_InterfaceStrDescriptor+0x38>)
 801a4dc:	f7fc fc78 	bl	8016dd0 <USBD_GetString>
 801a4e0:	e004      	b.n	801a4ec <USBD_FS_InterfaceStrDescriptor+0x28>
 801a4e2:	683a      	ldr	r2, [r7, #0]
 801a4e4:	4904      	ldr	r1, [pc, #16]	@ (801a4f8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a4e6:	4805      	ldr	r0, [pc, #20]	@ (801a4fc <USBD_FS_InterfaceStrDescriptor+0x38>)
 801a4e8:	f7fc fc72 	bl	8016dd0 <USBD_GetString>
 801a4ec:	4b02      	ldr	r3, [pc, #8]	@ (801a4f8 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801a4ee:	4618      	mov	r0, r3
 801a4f0:	3708      	adds	r7, #8
 801a4f2:	46bd      	mov	sp, r7
 801a4f4:	bd80      	pop	{r7, pc}
 801a4f6:	bf00      	nop
 801a4f8:	2000c64c 	.word	0x2000c64c
 801a4fc:	08021014 	.word	0x08021014

0801a500 <Get_SerialNum>:
 801a500:	b580      	push	{r7, lr}
 801a502:	b084      	sub	sp, #16
 801a504:	af00      	add	r7, sp, #0
 801a506:	4b0f      	ldr	r3, [pc, #60]	@ (801a544 <Get_SerialNum+0x44>)
 801a508:	681b      	ldr	r3, [r3, #0]
 801a50a:	60fb      	str	r3, [r7, #12]
 801a50c:	4b0e      	ldr	r3, [pc, #56]	@ (801a548 <Get_SerialNum+0x48>)
 801a50e:	681b      	ldr	r3, [r3, #0]
 801a510:	60bb      	str	r3, [r7, #8]
 801a512:	4b0e      	ldr	r3, [pc, #56]	@ (801a54c <Get_SerialNum+0x4c>)
 801a514:	681b      	ldr	r3, [r3, #0]
 801a516:	607b      	str	r3, [r7, #4]
 801a518:	68fa      	ldr	r2, [r7, #12]
 801a51a:	687b      	ldr	r3, [r7, #4]
 801a51c:	4413      	add	r3, r2
 801a51e:	60fb      	str	r3, [r7, #12]
 801a520:	68fb      	ldr	r3, [r7, #12]
 801a522:	2b00      	cmp	r3, #0
 801a524:	d009      	beq.n	801a53a <Get_SerialNum+0x3a>
 801a526:	2208      	movs	r2, #8
 801a528:	4909      	ldr	r1, [pc, #36]	@ (801a550 <Get_SerialNum+0x50>)
 801a52a:	68f8      	ldr	r0, [r7, #12]
 801a52c:	f000 f814 	bl	801a558 <IntToUnicode>
 801a530:	2204      	movs	r2, #4
 801a532:	4908      	ldr	r1, [pc, #32]	@ (801a554 <Get_SerialNum+0x54>)
 801a534:	68b8      	ldr	r0, [r7, #8]
 801a536:	f000 f80f 	bl	801a558 <IntToUnicode>
 801a53a:	bf00      	nop
 801a53c:	3710      	adds	r7, #16
 801a53e:	46bd      	mov	sp, r7
 801a540:	bd80      	pop	{r7, pc}
 801a542:	bf00      	nop
 801a544:	1fff7a10 	.word	0x1fff7a10
 801a548:	1fff7a14 	.word	0x1fff7a14
 801a54c:	1fff7a18 	.word	0x1fff7a18
 801a550:	200000fa 	.word	0x200000fa
 801a554:	2000010a 	.word	0x2000010a

0801a558 <IntToUnicode>:
 801a558:	b480      	push	{r7}
 801a55a:	b087      	sub	sp, #28
 801a55c:	af00      	add	r7, sp, #0
 801a55e:	60f8      	str	r0, [r7, #12]
 801a560:	60b9      	str	r1, [r7, #8]
 801a562:	4613      	mov	r3, r2
 801a564:	71fb      	strb	r3, [r7, #7]
 801a566:	2300      	movs	r3, #0
 801a568:	75fb      	strb	r3, [r7, #23]
 801a56a:	2300      	movs	r3, #0
 801a56c:	75fb      	strb	r3, [r7, #23]
 801a56e:	e027      	b.n	801a5c0 <IntToUnicode+0x68>
 801a570:	68fb      	ldr	r3, [r7, #12]
 801a572:	0f1b      	lsrs	r3, r3, #28
 801a574:	2b09      	cmp	r3, #9
 801a576:	d80b      	bhi.n	801a590 <IntToUnicode+0x38>
 801a578:	68fb      	ldr	r3, [r7, #12]
 801a57a:	0f1b      	lsrs	r3, r3, #28
 801a57c:	b2da      	uxtb	r2, r3
 801a57e:	7dfb      	ldrb	r3, [r7, #23]
 801a580:	005b      	lsls	r3, r3, #1
 801a582:	4619      	mov	r1, r3
 801a584:	68bb      	ldr	r3, [r7, #8]
 801a586:	440b      	add	r3, r1
 801a588:	3230      	adds	r2, #48	@ 0x30
 801a58a:	b2d2      	uxtb	r2, r2
 801a58c:	701a      	strb	r2, [r3, #0]
 801a58e:	e00a      	b.n	801a5a6 <IntToUnicode+0x4e>
 801a590:	68fb      	ldr	r3, [r7, #12]
 801a592:	0f1b      	lsrs	r3, r3, #28
 801a594:	b2da      	uxtb	r2, r3
 801a596:	7dfb      	ldrb	r3, [r7, #23]
 801a598:	005b      	lsls	r3, r3, #1
 801a59a:	4619      	mov	r1, r3
 801a59c:	68bb      	ldr	r3, [r7, #8]
 801a59e:	440b      	add	r3, r1
 801a5a0:	3237      	adds	r2, #55	@ 0x37
 801a5a2:	b2d2      	uxtb	r2, r2
 801a5a4:	701a      	strb	r2, [r3, #0]
 801a5a6:	68fb      	ldr	r3, [r7, #12]
 801a5a8:	011b      	lsls	r3, r3, #4
 801a5aa:	60fb      	str	r3, [r7, #12]
 801a5ac:	7dfb      	ldrb	r3, [r7, #23]
 801a5ae:	005b      	lsls	r3, r3, #1
 801a5b0:	3301      	adds	r3, #1
 801a5b2:	68ba      	ldr	r2, [r7, #8]
 801a5b4:	4413      	add	r3, r2
 801a5b6:	2200      	movs	r2, #0
 801a5b8:	701a      	strb	r2, [r3, #0]
 801a5ba:	7dfb      	ldrb	r3, [r7, #23]
 801a5bc:	3301      	adds	r3, #1
 801a5be:	75fb      	strb	r3, [r7, #23]
 801a5c0:	7dfa      	ldrb	r2, [r7, #23]
 801a5c2:	79fb      	ldrb	r3, [r7, #7]
 801a5c4:	429a      	cmp	r2, r3
 801a5c6:	d3d3      	bcc.n	801a570 <IntToUnicode+0x18>
 801a5c8:	bf00      	nop
 801a5ca:	bf00      	nop
 801a5cc:	371c      	adds	r7, #28
 801a5ce:	46bd      	mov	sp, r7
 801a5d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801a5d4:	4770      	bx	lr
	...

0801a5d8 <HAL_PCD_MspInit>:
 801a5d8:	b580      	push	{r7, lr}
 801a5da:	b08a      	sub	sp, #40	@ 0x28
 801a5dc:	af00      	add	r7, sp, #0
 801a5de:	6078      	str	r0, [r7, #4]
 801a5e0:	f107 0314 	add.w	r3, r7, #20
 801a5e4:	2200      	movs	r2, #0
 801a5e6:	601a      	str	r2, [r3, #0]
 801a5e8:	605a      	str	r2, [r3, #4]
 801a5ea:	609a      	str	r2, [r3, #8]
 801a5ec:	60da      	str	r2, [r3, #12]
 801a5ee:	611a      	str	r2, [r3, #16]
 801a5f0:	687b      	ldr	r3, [r7, #4]
 801a5f2:	681b      	ldr	r3, [r3, #0]
 801a5f4:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 801a5f8:	d13a      	bne.n	801a670 <HAL_PCD_MspInit+0x98>
 801a5fa:	2300      	movs	r3, #0
 801a5fc:	613b      	str	r3, [r7, #16]
 801a5fe:	4b1e      	ldr	r3, [pc, #120]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a600:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a602:	4a1d      	ldr	r2, [pc, #116]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a604:	f043 0301 	orr.w	r3, r3, #1
 801a608:	6313      	str	r3, [r2, #48]	@ 0x30
 801a60a:	4b1b      	ldr	r3, [pc, #108]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a60c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a60e:	f003 0301 	and.w	r3, r3, #1
 801a612:	613b      	str	r3, [r7, #16]
 801a614:	693b      	ldr	r3, [r7, #16]
 801a616:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 801a61a:	617b      	str	r3, [r7, #20]
 801a61c:	2302      	movs	r3, #2
 801a61e:	61bb      	str	r3, [r7, #24]
 801a620:	2300      	movs	r3, #0
 801a622:	61fb      	str	r3, [r7, #28]
 801a624:	2303      	movs	r3, #3
 801a626:	623b      	str	r3, [r7, #32]
 801a628:	230a      	movs	r3, #10
 801a62a:	627b      	str	r3, [r7, #36]	@ 0x24
 801a62c:	f107 0314 	add.w	r3, r7, #20
 801a630:	4619      	mov	r1, r3
 801a632:	4812      	ldr	r0, [pc, #72]	@ (801a67c <HAL_PCD_MspInit+0xa4>)
 801a634:	f7f2 fb44 	bl	800ccc0 <HAL_GPIO_Init>
 801a638:	4b0f      	ldr	r3, [pc, #60]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a63a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801a63c:	4a0e      	ldr	r2, [pc, #56]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a63e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801a642:	6353      	str	r3, [r2, #52]	@ 0x34
 801a644:	2300      	movs	r3, #0
 801a646:	60fb      	str	r3, [r7, #12]
 801a648:	4b0b      	ldr	r3, [pc, #44]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a64a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a64c:	4a0a      	ldr	r2, [pc, #40]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a64e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 801a652:	6453      	str	r3, [r2, #68]	@ 0x44
 801a654:	4b08      	ldr	r3, [pc, #32]	@ (801a678 <HAL_PCD_MspInit+0xa0>)
 801a656:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801a658:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 801a65c:	60fb      	str	r3, [r7, #12]
 801a65e:	68fb      	ldr	r3, [r7, #12]
 801a660:	2200      	movs	r2, #0
 801a662:	2105      	movs	r1, #5
 801a664:	2043      	movs	r0, #67	@ 0x43
 801a666:	f7f1 fee5 	bl	800c434 <HAL_NVIC_SetPriority>
 801a66a:	2043      	movs	r0, #67	@ 0x43
 801a66c:	f7f1 fefe 	bl	800c46c <HAL_NVIC_EnableIRQ>
 801a670:	bf00      	nop
 801a672:	3728      	adds	r7, #40	@ 0x28
 801a674:	46bd      	mov	sp, r7
 801a676:	bd80      	pop	{r7, pc}
 801a678:	40023800 	.word	0x40023800
 801a67c:	40020000 	.word	0x40020000

0801a680 <HAL_PCD_SetupStageCallback>:
 801a680:	b580      	push	{r7, lr}
 801a682:	b082      	sub	sp, #8
 801a684:	af00      	add	r7, sp, #0
 801a686:	6078      	str	r0, [r7, #4]
 801a688:	687b      	ldr	r3, [r7, #4]
 801a68a:	f8d3 2508 	ldr.w	r2, [r3, #1288]	@ 0x508
 801a68e:	687b      	ldr	r3, [r7, #4]
 801a690:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 801a694:	4619      	mov	r1, r3
 801a696:	4610      	mov	r0, r2
 801a698:	f7fb fa3d 	bl	8015b16 <USBD_LL_SetupStage>
 801a69c:	bf00      	nop
 801a69e:	3708      	adds	r7, #8
 801a6a0:	46bd      	mov	sp, r7
 801a6a2:	bd80      	pop	{r7, pc}

0801a6a4 <HAL_PCD_DataOutStageCallback>:
 801a6a4:	b580      	push	{r7, lr}
 801a6a6:	b082      	sub	sp, #8
 801a6a8:	af00      	add	r7, sp, #0
 801a6aa:	6078      	str	r0, [r7, #4]
 801a6ac:	460b      	mov	r3, r1
 801a6ae:	70fb      	strb	r3, [r7, #3]
 801a6b0:	687b      	ldr	r3, [r7, #4]
 801a6b2:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801a6b6:	78fa      	ldrb	r2, [r7, #3]
 801a6b8:	6879      	ldr	r1, [r7, #4]
 801a6ba:	4613      	mov	r3, r2
 801a6bc:	00db      	lsls	r3, r3, #3
 801a6be:	4413      	add	r3, r2
 801a6c0:	009b      	lsls	r3, r3, #2
 801a6c2:	440b      	add	r3, r1
 801a6c4:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 801a6c8:	681a      	ldr	r2, [r3, #0]
 801a6ca:	78fb      	ldrb	r3, [r7, #3]
 801a6cc:	4619      	mov	r1, r3
 801a6ce:	f7fb fa77 	bl	8015bc0 <USBD_LL_DataOutStage>
 801a6d2:	bf00      	nop
 801a6d4:	3708      	adds	r7, #8
 801a6d6:	46bd      	mov	sp, r7
 801a6d8:	bd80      	pop	{r7, pc}

0801a6da <HAL_PCD_DataInStageCallback>:
 801a6da:	b580      	push	{r7, lr}
 801a6dc:	b082      	sub	sp, #8
 801a6de:	af00      	add	r7, sp, #0
 801a6e0:	6078      	str	r0, [r7, #4]
 801a6e2:	460b      	mov	r3, r1
 801a6e4:	70fb      	strb	r3, [r7, #3]
 801a6e6:	687b      	ldr	r3, [r7, #4]
 801a6e8:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801a6ec:	78fa      	ldrb	r2, [r7, #3]
 801a6ee:	6879      	ldr	r1, [r7, #4]
 801a6f0:	4613      	mov	r3, r2
 801a6f2:	00db      	lsls	r3, r3, #3
 801a6f4:	4413      	add	r3, r2
 801a6f6:	009b      	lsls	r3, r3, #2
 801a6f8:	440b      	add	r3, r1
 801a6fa:	334c      	adds	r3, #76	@ 0x4c
 801a6fc:	681a      	ldr	r2, [r3, #0]
 801a6fe:	78fb      	ldrb	r3, [r7, #3]
 801a700:	4619      	mov	r1, r3
 801a702:	f7fb fb10 	bl	8015d26 <USBD_LL_DataInStage>
 801a706:	bf00      	nop
 801a708:	3708      	adds	r7, #8
 801a70a:	46bd      	mov	sp, r7
 801a70c:	bd80      	pop	{r7, pc}

0801a70e <HAL_PCD_SOFCallback>:
 801a70e:	b580      	push	{r7, lr}
 801a710:	b082      	sub	sp, #8
 801a712:	af00      	add	r7, sp, #0
 801a714:	6078      	str	r0, [r7, #4]
 801a716:	687b      	ldr	r3, [r7, #4]
 801a718:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a71c:	4618      	mov	r0, r3
 801a71e:	f7fb fc44 	bl	8015faa <USBD_LL_SOF>
 801a722:	bf00      	nop
 801a724:	3708      	adds	r7, #8
 801a726:	46bd      	mov	sp, r7
 801a728:	bd80      	pop	{r7, pc}

0801a72a <HAL_PCD_ResetCallback>:
 801a72a:	b580      	push	{r7, lr}
 801a72c:	b084      	sub	sp, #16
 801a72e:	af00      	add	r7, sp, #0
 801a730:	6078      	str	r0, [r7, #4]
 801a732:	2301      	movs	r3, #1
 801a734:	73fb      	strb	r3, [r7, #15]
 801a736:	687b      	ldr	r3, [r7, #4]
 801a738:	68db      	ldr	r3, [r3, #12]
 801a73a:	2b00      	cmp	r3, #0
 801a73c:	d102      	bne.n	801a744 <HAL_PCD_ResetCallback+0x1a>
 801a73e:	2300      	movs	r3, #0
 801a740:	73fb      	strb	r3, [r7, #15]
 801a742:	e008      	b.n	801a756 <HAL_PCD_ResetCallback+0x2c>
 801a744:	687b      	ldr	r3, [r7, #4]
 801a746:	68db      	ldr	r3, [r3, #12]
 801a748:	2b02      	cmp	r3, #2
 801a74a:	d102      	bne.n	801a752 <HAL_PCD_ResetCallback+0x28>
 801a74c:	2301      	movs	r3, #1
 801a74e:	73fb      	strb	r3, [r7, #15]
 801a750:	e001      	b.n	801a756 <HAL_PCD_ResetCallback+0x2c>
 801a752:	f7e9 f851 	bl	80037f8 <Error_Handler>
 801a756:	687b      	ldr	r3, [r7, #4]
 801a758:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a75c:	7bfa      	ldrb	r2, [r7, #15]
 801a75e:	4611      	mov	r1, r2
 801a760:	4618      	mov	r0, r3
 801a762:	f7fb fbe4 	bl	8015f2e <USBD_LL_SetSpeed>
 801a766:	687b      	ldr	r3, [r7, #4]
 801a768:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a76c:	4618      	mov	r0, r3
 801a76e:	f7fb fb8c 	bl	8015e8a <USBD_LL_Reset>
 801a772:	bf00      	nop
 801a774:	3710      	adds	r7, #16
 801a776:	46bd      	mov	sp, r7
 801a778:	bd80      	pop	{r7, pc}
	...

0801a77c <HAL_PCD_SuspendCallback>:
 801a77c:	b580      	push	{r7, lr}
 801a77e:	b082      	sub	sp, #8
 801a780:	af00      	add	r7, sp, #0
 801a782:	6078      	str	r0, [r7, #4]
 801a784:	687b      	ldr	r3, [r7, #4]
 801a786:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a78a:	4618      	mov	r0, r3
 801a78c:	f7fb fbdf 	bl	8015f4e <USBD_LL_Suspend>
 801a790:	687b      	ldr	r3, [r7, #4]
 801a792:	681b      	ldr	r3, [r3, #0]
 801a794:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 801a798:	681b      	ldr	r3, [r3, #0]
 801a79a:	687a      	ldr	r2, [r7, #4]
 801a79c:	6812      	ldr	r2, [r2, #0]
 801a79e:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 801a7a2:	f043 0301 	orr.w	r3, r3, #1
 801a7a6:	6013      	str	r3, [r2, #0]
 801a7a8:	687b      	ldr	r3, [r7, #4]
 801a7aa:	6a1b      	ldr	r3, [r3, #32]
 801a7ac:	2b00      	cmp	r3, #0
 801a7ae:	d005      	beq.n	801a7bc <HAL_PCD_SuspendCallback+0x40>
 801a7b0:	4b04      	ldr	r3, [pc, #16]	@ (801a7c4 <HAL_PCD_SuspendCallback+0x48>)
 801a7b2:	691b      	ldr	r3, [r3, #16]
 801a7b4:	4a03      	ldr	r2, [pc, #12]	@ (801a7c4 <HAL_PCD_SuspendCallback+0x48>)
 801a7b6:	f043 0306 	orr.w	r3, r3, #6
 801a7ba:	6113      	str	r3, [r2, #16]
 801a7bc:	bf00      	nop
 801a7be:	3708      	adds	r7, #8
 801a7c0:	46bd      	mov	sp, r7
 801a7c2:	bd80      	pop	{r7, pc}
 801a7c4:	e000ed00 	.word	0xe000ed00

0801a7c8 <HAL_PCD_ResumeCallback>:
 801a7c8:	b580      	push	{r7, lr}
 801a7ca:	b082      	sub	sp, #8
 801a7cc:	af00      	add	r7, sp, #0
 801a7ce:	6078      	str	r0, [r7, #4]
 801a7d0:	687b      	ldr	r3, [r7, #4]
 801a7d2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a7d6:	4618      	mov	r0, r3
 801a7d8:	f7fb fbcf 	bl	8015f7a <USBD_LL_Resume>
 801a7dc:	bf00      	nop
 801a7de:	3708      	adds	r7, #8
 801a7e0:	46bd      	mov	sp, r7
 801a7e2:	bd80      	pop	{r7, pc}

0801a7e4 <HAL_PCD_ISOOUTIncompleteCallback>:
 801a7e4:	b580      	push	{r7, lr}
 801a7e6:	b082      	sub	sp, #8
 801a7e8:	af00      	add	r7, sp, #0
 801a7ea:	6078      	str	r0, [r7, #4]
 801a7ec:	460b      	mov	r3, r1
 801a7ee:	70fb      	strb	r3, [r7, #3]
 801a7f0:	687b      	ldr	r3, [r7, #4]
 801a7f2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a7f6:	78fa      	ldrb	r2, [r7, #3]
 801a7f8:	4611      	mov	r1, r2
 801a7fa:	4618      	mov	r0, r3
 801a7fc:	f7fb fc27 	bl	801604e <USBD_LL_IsoOUTIncomplete>
 801a800:	bf00      	nop
 801a802:	3708      	adds	r7, #8
 801a804:	46bd      	mov	sp, r7
 801a806:	bd80      	pop	{r7, pc}

0801a808 <HAL_PCD_ISOINIncompleteCallback>:
 801a808:	b580      	push	{r7, lr}
 801a80a:	b082      	sub	sp, #8
 801a80c:	af00      	add	r7, sp, #0
 801a80e:	6078      	str	r0, [r7, #4]
 801a810:	460b      	mov	r3, r1
 801a812:	70fb      	strb	r3, [r7, #3]
 801a814:	687b      	ldr	r3, [r7, #4]
 801a816:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a81a:	78fa      	ldrb	r2, [r7, #3]
 801a81c:	4611      	mov	r1, r2
 801a81e:	4618      	mov	r0, r3
 801a820:	f7fb fbe3 	bl	8015fea <USBD_LL_IsoINIncomplete>
 801a824:	bf00      	nop
 801a826:	3708      	adds	r7, #8
 801a828:	46bd      	mov	sp, r7
 801a82a:	bd80      	pop	{r7, pc}

0801a82c <HAL_PCD_ConnectCallback>:
 801a82c:	b580      	push	{r7, lr}
 801a82e:	b082      	sub	sp, #8
 801a830:	af00      	add	r7, sp, #0
 801a832:	6078      	str	r0, [r7, #4]
 801a834:	687b      	ldr	r3, [r7, #4]
 801a836:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a83a:	4618      	mov	r0, r3
 801a83c:	f7fb fc39 	bl	80160b2 <USBD_LL_DevConnected>
 801a840:	bf00      	nop
 801a842:	3708      	adds	r7, #8
 801a844:	46bd      	mov	sp, r7
 801a846:	bd80      	pop	{r7, pc}

0801a848 <HAL_PCD_DisconnectCallback>:
 801a848:	b580      	push	{r7, lr}
 801a84a:	b082      	sub	sp, #8
 801a84c:	af00      	add	r7, sp, #0
 801a84e:	6078      	str	r0, [r7, #4]
 801a850:	687b      	ldr	r3, [r7, #4]
 801a852:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801a856:	4618      	mov	r0, r3
 801a858:	f7fb fc36 	bl	80160c8 <USBD_LL_DevDisconnected>
 801a85c:	bf00      	nop
 801a85e:	3708      	adds	r7, #8
 801a860:	46bd      	mov	sp, r7
 801a862:	bd80      	pop	{r7, pc}

0801a864 <USBD_LL_Init>:
 801a864:	b580      	push	{r7, lr}
 801a866:	b082      	sub	sp, #8
 801a868:	af00      	add	r7, sp, #0
 801a86a:	6078      	str	r0, [r7, #4]
 801a86c:	687b      	ldr	r3, [r7, #4]
 801a86e:	781b      	ldrb	r3, [r3, #0]
 801a870:	2b00      	cmp	r3, #0
 801a872:	d13c      	bne.n	801a8ee <USBD_LL_Init+0x8a>
 801a874:	4a20      	ldr	r2, [pc, #128]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a876:	687b      	ldr	r3, [r7, #4]
 801a878:	f8c2 3508 	str.w	r3, [r2, #1288]	@ 0x508
 801a87c:	687b      	ldr	r3, [r7, #4]
 801a87e:	4a1e      	ldr	r2, [pc, #120]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a880:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 801a884:	4b1c      	ldr	r3, [pc, #112]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a886:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 801a88a:	601a      	str	r2, [r3, #0]
 801a88c:	4b1a      	ldr	r3, [pc, #104]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a88e:	2204      	movs	r2, #4
 801a890:	605a      	str	r2, [r3, #4]
 801a892:	4b19      	ldr	r3, [pc, #100]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a894:	2202      	movs	r2, #2
 801a896:	60da      	str	r2, [r3, #12]
 801a898:	4b17      	ldr	r3, [pc, #92]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a89a:	2200      	movs	r2, #0
 801a89c:	611a      	str	r2, [r3, #16]
 801a89e:	4b16      	ldr	r3, [pc, #88]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8a0:	2202      	movs	r2, #2
 801a8a2:	619a      	str	r2, [r3, #24]
 801a8a4:	4b14      	ldr	r3, [pc, #80]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8a6:	2200      	movs	r2, #0
 801a8a8:	61da      	str	r2, [r3, #28]
 801a8aa:	4b13      	ldr	r3, [pc, #76]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8ac:	2200      	movs	r2, #0
 801a8ae:	621a      	str	r2, [r3, #32]
 801a8b0:	4b11      	ldr	r3, [pc, #68]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8b2:	2200      	movs	r2, #0
 801a8b4:	625a      	str	r2, [r3, #36]	@ 0x24
 801a8b6:	4b10      	ldr	r3, [pc, #64]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8b8:	2200      	movs	r2, #0
 801a8ba:	62da      	str	r2, [r3, #44]	@ 0x2c
 801a8bc:	4b0e      	ldr	r3, [pc, #56]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8be:	2200      	movs	r2, #0
 801a8c0:	631a      	str	r2, [r3, #48]	@ 0x30
 801a8c2:	480d      	ldr	r0, [pc, #52]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8c4:	f7f4 f955 	bl	800eb72 <HAL_PCD_Init>
 801a8c8:	4603      	mov	r3, r0
 801a8ca:	2b00      	cmp	r3, #0
 801a8cc:	d001      	beq.n	801a8d2 <USBD_LL_Init+0x6e>
 801a8ce:	f7e8 ff93 	bl	80037f8 <Error_Handler>
 801a8d2:	2180      	movs	r1, #128	@ 0x80
 801a8d4:	4808      	ldr	r0, [pc, #32]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8d6:	f7f5 fbac 	bl	8010032 <HAL_PCDEx_SetRxFiFo>
 801a8da:	2240      	movs	r2, #64	@ 0x40
 801a8dc:	2100      	movs	r1, #0
 801a8de:	4806      	ldr	r0, [pc, #24]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8e0:	f7f5 fb60 	bl	800ffa4 <HAL_PCDEx_SetTxFiFo>
 801a8e4:	2280      	movs	r2, #128	@ 0x80
 801a8e6:	2101      	movs	r1, #1
 801a8e8:	4803      	ldr	r0, [pc, #12]	@ (801a8f8 <USBD_LL_Init+0x94>)
 801a8ea:	f7f5 fb5b 	bl	800ffa4 <HAL_PCDEx_SetTxFiFo>
 801a8ee:	2300      	movs	r3, #0
 801a8f0:	4618      	mov	r0, r3
 801a8f2:	3708      	adds	r7, #8
 801a8f4:	46bd      	mov	sp, r7
 801a8f6:	bd80      	pop	{r7, pc}
 801a8f8:	2000c84c 	.word	0x2000c84c

0801a8fc <USBD_LL_Start>:
 801a8fc:	b580      	push	{r7, lr}
 801a8fe:	b084      	sub	sp, #16
 801a900:	af00      	add	r7, sp, #0
 801a902:	6078      	str	r0, [r7, #4]
 801a904:	2300      	movs	r3, #0
 801a906:	73fb      	strb	r3, [r7, #15]
 801a908:	2300      	movs	r3, #0
 801a90a:	73bb      	strb	r3, [r7, #14]
 801a90c:	687b      	ldr	r3, [r7, #4]
 801a90e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a912:	4618      	mov	r0, r3
 801a914:	f7f4 fa4a 	bl	800edac <HAL_PCD_Start>
 801a918:	4603      	mov	r3, r0
 801a91a:	73fb      	strb	r3, [r7, #15]
 801a91c:	7bfb      	ldrb	r3, [r7, #15]
 801a91e:	4618      	mov	r0, r3
 801a920:	f000 f942 	bl	801aba8 <USBD_Get_USB_Status>
 801a924:	4603      	mov	r3, r0
 801a926:	73bb      	strb	r3, [r7, #14]
 801a928:	7bbb      	ldrb	r3, [r7, #14]
 801a92a:	4618      	mov	r0, r3
 801a92c:	3710      	adds	r7, #16
 801a92e:	46bd      	mov	sp, r7
 801a930:	bd80      	pop	{r7, pc}

0801a932 <USBD_LL_OpenEP>:
 801a932:	b580      	push	{r7, lr}
 801a934:	b084      	sub	sp, #16
 801a936:	af00      	add	r7, sp, #0
 801a938:	6078      	str	r0, [r7, #4]
 801a93a:	4608      	mov	r0, r1
 801a93c:	4611      	mov	r1, r2
 801a93e:	461a      	mov	r2, r3
 801a940:	4603      	mov	r3, r0
 801a942:	70fb      	strb	r3, [r7, #3]
 801a944:	460b      	mov	r3, r1
 801a946:	70bb      	strb	r3, [r7, #2]
 801a948:	4613      	mov	r3, r2
 801a94a:	803b      	strh	r3, [r7, #0]
 801a94c:	2300      	movs	r3, #0
 801a94e:	73fb      	strb	r3, [r7, #15]
 801a950:	2300      	movs	r3, #0
 801a952:	73bb      	strb	r3, [r7, #14]
 801a954:	687b      	ldr	r3, [r7, #4]
 801a956:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801a95a:	78bb      	ldrb	r3, [r7, #2]
 801a95c:	883a      	ldrh	r2, [r7, #0]
 801a95e:	78f9      	ldrb	r1, [r7, #3]
 801a960:	f7f4 ff1b 	bl	800f79a <HAL_PCD_EP_Open>
 801a964:	4603      	mov	r3, r0
 801a966:	73fb      	strb	r3, [r7, #15]
 801a968:	7bfb      	ldrb	r3, [r7, #15]
 801a96a:	4618      	mov	r0, r3
 801a96c:	f000 f91c 	bl	801aba8 <USBD_Get_USB_Status>
 801a970:	4603      	mov	r3, r0
 801a972:	73bb      	strb	r3, [r7, #14]
 801a974:	7bbb      	ldrb	r3, [r7, #14]
 801a976:	4618      	mov	r0, r3
 801a978:	3710      	adds	r7, #16
 801a97a:	46bd      	mov	sp, r7
 801a97c:	bd80      	pop	{r7, pc}

0801a97e <USBD_LL_CloseEP>:
 801a97e:	b580      	push	{r7, lr}
 801a980:	b084      	sub	sp, #16
 801a982:	af00      	add	r7, sp, #0
 801a984:	6078      	str	r0, [r7, #4]
 801a986:	460b      	mov	r3, r1
 801a988:	70fb      	strb	r3, [r7, #3]
 801a98a:	2300      	movs	r3, #0
 801a98c:	73fb      	strb	r3, [r7, #15]
 801a98e:	2300      	movs	r3, #0
 801a990:	73bb      	strb	r3, [r7, #14]
 801a992:	687b      	ldr	r3, [r7, #4]
 801a994:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a998:	78fa      	ldrb	r2, [r7, #3]
 801a99a:	4611      	mov	r1, r2
 801a99c:	4618      	mov	r0, r3
 801a99e:	f7f4 ff64 	bl	800f86a <HAL_PCD_EP_Close>
 801a9a2:	4603      	mov	r3, r0
 801a9a4:	73fb      	strb	r3, [r7, #15]
 801a9a6:	7bfb      	ldrb	r3, [r7, #15]
 801a9a8:	4618      	mov	r0, r3
 801a9aa:	f000 f8fd 	bl	801aba8 <USBD_Get_USB_Status>
 801a9ae:	4603      	mov	r3, r0
 801a9b0:	73bb      	strb	r3, [r7, #14]
 801a9b2:	7bbb      	ldrb	r3, [r7, #14]
 801a9b4:	4618      	mov	r0, r3
 801a9b6:	3710      	adds	r7, #16
 801a9b8:	46bd      	mov	sp, r7
 801a9ba:	bd80      	pop	{r7, pc}

0801a9bc <USBD_LL_StallEP>:
 801a9bc:	b580      	push	{r7, lr}
 801a9be:	b084      	sub	sp, #16
 801a9c0:	af00      	add	r7, sp, #0
 801a9c2:	6078      	str	r0, [r7, #4]
 801a9c4:	460b      	mov	r3, r1
 801a9c6:	70fb      	strb	r3, [r7, #3]
 801a9c8:	2300      	movs	r3, #0
 801a9ca:	73fb      	strb	r3, [r7, #15]
 801a9cc:	2300      	movs	r3, #0
 801a9ce:	73bb      	strb	r3, [r7, #14]
 801a9d0:	687b      	ldr	r3, [r7, #4]
 801a9d2:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801a9d6:	78fa      	ldrb	r2, [r7, #3]
 801a9d8:	4611      	mov	r1, r2
 801a9da:	4618      	mov	r0, r3
 801a9dc:	f7f5 f83c 	bl	800fa58 <HAL_PCD_EP_SetStall>
 801a9e0:	4603      	mov	r3, r0
 801a9e2:	73fb      	strb	r3, [r7, #15]
 801a9e4:	7bfb      	ldrb	r3, [r7, #15]
 801a9e6:	4618      	mov	r0, r3
 801a9e8:	f000 f8de 	bl	801aba8 <USBD_Get_USB_Status>
 801a9ec:	4603      	mov	r3, r0
 801a9ee:	73bb      	strb	r3, [r7, #14]
 801a9f0:	7bbb      	ldrb	r3, [r7, #14]
 801a9f2:	4618      	mov	r0, r3
 801a9f4:	3710      	adds	r7, #16
 801a9f6:	46bd      	mov	sp, r7
 801a9f8:	bd80      	pop	{r7, pc}

0801a9fa <USBD_LL_ClearStallEP>:
 801a9fa:	b580      	push	{r7, lr}
 801a9fc:	b084      	sub	sp, #16
 801a9fe:	af00      	add	r7, sp, #0
 801aa00:	6078      	str	r0, [r7, #4]
 801aa02:	460b      	mov	r3, r1
 801aa04:	70fb      	strb	r3, [r7, #3]
 801aa06:	2300      	movs	r3, #0
 801aa08:	73fb      	strb	r3, [r7, #15]
 801aa0a:	2300      	movs	r3, #0
 801aa0c:	73bb      	strb	r3, [r7, #14]
 801aa0e:	687b      	ldr	r3, [r7, #4]
 801aa10:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aa14:	78fa      	ldrb	r2, [r7, #3]
 801aa16:	4611      	mov	r1, r2
 801aa18:	4618      	mov	r0, r3
 801aa1a:	f7f5 f881 	bl	800fb20 <HAL_PCD_EP_ClrStall>
 801aa1e:	4603      	mov	r3, r0
 801aa20:	73fb      	strb	r3, [r7, #15]
 801aa22:	7bfb      	ldrb	r3, [r7, #15]
 801aa24:	4618      	mov	r0, r3
 801aa26:	f000 f8bf 	bl	801aba8 <USBD_Get_USB_Status>
 801aa2a:	4603      	mov	r3, r0
 801aa2c:	73bb      	strb	r3, [r7, #14]
 801aa2e:	7bbb      	ldrb	r3, [r7, #14]
 801aa30:	4618      	mov	r0, r3
 801aa32:	3710      	adds	r7, #16
 801aa34:	46bd      	mov	sp, r7
 801aa36:	bd80      	pop	{r7, pc}

0801aa38 <USBD_LL_IsStallEP>:
 801aa38:	b480      	push	{r7}
 801aa3a:	b085      	sub	sp, #20
 801aa3c:	af00      	add	r7, sp, #0
 801aa3e:	6078      	str	r0, [r7, #4]
 801aa40:	460b      	mov	r3, r1
 801aa42:	70fb      	strb	r3, [r7, #3]
 801aa44:	687b      	ldr	r3, [r7, #4]
 801aa46:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aa4a:	60fb      	str	r3, [r7, #12]
 801aa4c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801aa50:	2b00      	cmp	r3, #0
 801aa52:	da0b      	bge.n	801aa6c <USBD_LL_IsStallEP+0x34>
 801aa54:	78fb      	ldrb	r3, [r7, #3]
 801aa56:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801aa5a:	68f9      	ldr	r1, [r7, #12]
 801aa5c:	4613      	mov	r3, r2
 801aa5e:	00db      	lsls	r3, r3, #3
 801aa60:	4413      	add	r3, r2
 801aa62:	009b      	lsls	r3, r3, #2
 801aa64:	440b      	add	r3, r1
 801aa66:	333e      	adds	r3, #62	@ 0x3e
 801aa68:	781b      	ldrb	r3, [r3, #0]
 801aa6a:	e00b      	b.n	801aa84 <USBD_LL_IsStallEP+0x4c>
 801aa6c:	78fb      	ldrb	r3, [r7, #3]
 801aa6e:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801aa72:	68f9      	ldr	r1, [r7, #12]
 801aa74:	4613      	mov	r3, r2
 801aa76:	00db      	lsls	r3, r3, #3
 801aa78:	4413      	add	r3, r2
 801aa7a:	009b      	lsls	r3, r3, #2
 801aa7c:	440b      	add	r3, r1
 801aa7e:	f203 237e 	addw	r3, r3, #638	@ 0x27e
 801aa82:	781b      	ldrb	r3, [r3, #0]
 801aa84:	4618      	mov	r0, r3
 801aa86:	3714      	adds	r7, #20
 801aa88:	46bd      	mov	sp, r7
 801aa8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aa8e:	4770      	bx	lr

0801aa90 <USBD_LL_SetUSBAddress>:
 801aa90:	b580      	push	{r7, lr}
 801aa92:	b084      	sub	sp, #16
 801aa94:	af00      	add	r7, sp, #0
 801aa96:	6078      	str	r0, [r7, #4]
 801aa98:	460b      	mov	r3, r1
 801aa9a:	70fb      	strb	r3, [r7, #3]
 801aa9c:	2300      	movs	r3, #0
 801aa9e:	73fb      	strb	r3, [r7, #15]
 801aaa0:	2300      	movs	r3, #0
 801aaa2:	73bb      	strb	r3, [r7, #14]
 801aaa4:	687b      	ldr	r3, [r7, #4]
 801aaa6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801aaaa:	78fa      	ldrb	r2, [r7, #3]
 801aaac:	4611      	mov	r1, r2
 801aaae:	4618      	mov	r0, r3
 801aab0:	f7f4 fe4e 	bl	800f750 <HAL_PCD_SetAddress>
 801aab4:	4603      	mov	r3, r0
 801aab6:	73fb      	strb	r3, [r7, #15]
 801aab8:	7bfb      	ldrb	r3, [r7, #15]
 801aaba:	4618      	mov	r0, r3
 801aabc:	f000 f874 	bl	801aba8 <USBD_Get_USB_Status>
 801aac0:	4603      	mov	r3, r0
 801aac2:	73bb      	strb	r3, [r7, #14]
 801aac4:	7bbb      	ldrb	r3, [r7, #14]
 801aac6:	4618      	mov	r0, r3
 801aac8:	3710      	adds	r7, #16
 801aaca:	46bd      	mov	sp, r7
 801aacc:	bd80      	pop	{r7, pc}

0801aace <USBD_LL_Transmit>:
 801aace:	b580      	push	{r7, lr}
 801aad0:	b086      	sub	sp, #24
 801aad2:	af00      	add	r7, sp, #0
 801aad4:	60f8      	str	r0, [r7, #12]
 801aad6:	607a      	str	r2, [r7, #4]
 801aad8:	603b      	str	r3, [r7, #0]
 801aada:	460b      	mov	r3, r1
 801aadc:	72fb      	strb	r3, [r7, #11]
 801aade:	2300      	movs	r3, #0
 801aae0:	75fb      	strb	r3, [r7, #23]
 801aae2:	2300      	movs	r3, #0
 801aae4:	75bb      	strb	r3, [r7, #22]
 801aae6:	68fb      	ldr	r3, [r7, #12]
 801aae8:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801aaec:	7af9      	ldrb	r1, [r7, #11]
 801aaee:	683b      	ldr	r3, [r7, #0]
 801aaf0:	687a      	ldr	r2, [r7, #4]
 801aaf2:	f7f4 ff67 	bl	800f9c4 <HAL_PCD_EP_Transmit>
 801aaf6:	4603      	mov	r3, r0
 801aaf8:	75fb      	strb	r3, [r7, #23]
 801aafa:	7dfb      	ldrb	r3, [r7, #23]
 801aafc:	4618      	mov	r0, r3
 801aafe:	f000 f853 	bl	801aba8 <USBD_Get_USB_Status>
 801ab02:	4603      	mov	r3, r0
 801ab04:	75bb      	strb	r3, [r7, #22]
 801ab06:	7dbb      	ldrb	r3, [r7, #22]
 801ab08:	4618      	mov	r0, r3
 801ab0a:	3718      	adds	r7, #24
 801ab0c:	46bd      	mov	sp, r7
 801ab0e:	bd80      	pop	{r7, pc}

0801ab10 <USBD_LL_PrepareReceive>:
 801ab10:	b580      	push	{r7, lr}
 801ab12:	b086      	sub	sp, #24
 801ab14:	af00      	add	r7, sp, #0
 801ab16:	60f8      	str	r0, [r7, #12]
 801ab18:	607a      	str	r2, [r7, #4]
 801ab1a:	603b      	str	r3, [r7, #0]
 801ab1c:	460b      	mov	r3, r1
 801ab1e:	72fb      	strb	r3, [r7, #11]
 801ab20:	2300      	movs	r3, #0
 801ab22:	75fb      	strb	r3, [r7, #23]
 801ab24:	2300      	movs	r3, #0
 801ab26:	75bb      	strb	r3, [r7, #22]
 801ab28:	68fb      	ldr	r3, [r7, #12]
 801ab2a:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801ab2e:	7af9      	ldrb	r1, [r7, #11]
 801ab30:	683b      	ldr	r3, [r7, #0]
 801ab32:	687a      	ldr	r2, [r7, #4]
 801ab34:	f7f4 fee3 	bl	800f8fe <HAL_PCD_EP_Receive>
 801ab38:	4603      	mov	r3, r0
 801ab3a:	75fb      	strb	r3, [r7, #23]
 801ab3c:	7dfb      	ldrb	r3, [r7, #23]
 801ab3e:	4618      	mov	r0, r3
 801ab40:	f000 f832 	bl	801aba8 <USBD_Get_USB_Status>
 801ab44:	4603      	mov	r3, r0
 801ab46:	75bb      	strb	r3, [r7, #22]
 801ab48:	7dbb      	ldrb	r3, [r7, #22]
 801ab4a:	4618      	mov	r0, r3
 801ab4c:	3718      	adds	r7, #24
 801ab4e:	46bd      	mov	sp, r7
 801ab50:	bd80      	pop	{r7, pc}

0801ab52 <USBD_LL_GetRxDataSize>:
 801ab52:	b580      	push	{r7, lr}
 801ab54:	b082      	sub	sp, #8
 801ab56:	af00      	add	r7, sp, #0
 801ab58:	6078      	str	r0, [r7, #4]
 801ab5a:	460b      	mov	r3, r1
 801ab5c:	70fb      	strb	r3, [r7, #3]
 801ab5e:	687b      	ldr	r3, [r7, #4]
 801ab60:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801ab64:	78fa      	ldrb	r2, [r7, #3]
 801ab66:	4611      	mov	r1, r2
 801ab68:	4618      	mov	r0, r3
 801ab6a:	f7f4 ff13 	bl	800f994 <HAL_PCD_EP_GetRxCount>
 801ab6e:	4603      	mov	r3, r0
 801ab70:	4618      	mov	r0, r3
 801ab72:	3708      	adds	r7, #8
 801ab74:	46bd      	mov	sp, r7
 801ab76:	bd80      	pop	{r7, pc}

0801ab78 <USBD_static_malloc>:
 801ab78:	b480      	push	{r7}
 801ab7a:	b083      	sub	sp, #12
 801ab7c:	af00      	add	r7, sp, #0
 801ab7e:	6078      	str	r0, [r7, #4]
 801ab80:	4b03      	ldr	r3, [pc, #12]	@ (801ab90 <USBD_static_malloc+0x18>)
 801ab82:	4618      	mov	r0, r3
 801ab84:	370c      	adds	r7, #12
 801ab86:	46bd      	mov	sp, r7
 801ab88:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ab8c:	4770      	bx	lr
 801ab8e:	bf00      	nop
 801ab90:	2000cd58 	.word	0x2000cd58

0801ab94 <USBD_static_free>:
 801ab94:	b480      	push	{r7}
 801ab96:	b083      	sub	sp, #12
 801ab98:	af00      	add	r7, sp, #0
 801ab9a:	6078      	str	r0, [r7, #4]
 801ab9c:	bf00      	nop
 801ab9e:	370c      	adds	r7, #12
 801aba0:	46bd      	mov	sp, r7
 801aba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aba6:	4770      	bx	lr

0801aba8 <USBD_Get_USB_Status>:
 801aba8:	b480      	push	{r7}
 801abaa:	b085      	sub	sp, #20
 801abac:	af00      	add	r7, sp, #0
 801abae:	4603      	mov	r3, r0
 801abb0:	71fb      	strb	r3, [r7, #7]
 801abb2:	2300      	movs	r3, #0
 801abb4:	73fb      	strb	r3, [r7, #15]
 801abb6:	79fb      	ldrb	r3, [r7, #7]
 801abb8:	2b03      	cmp	r3, #3
 801abba:	d817      	bhi.n	801abec <USBD_Get_USB_Status+0x44>
 801abbc:	a201      	add	r2, pc, #4	@ (adr r2, 801abc4 <USBD_Get_USB_Status+0x1c>)
 801abbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801abc2:	bf00      	nop
 801abc4:	0801abd5 	.word	0x0801abd5
 801abc8:	0801abdb 	.word	0x0801abdb
 801abcc:	0801abe1 	.word	0x0801abe1
 801abd0:	0801abe7 	.word	0x0801abe7
 801abd4:	2300      	movs	r3, #0
 801abd6:	73fb      	strb	r3, [r7, #15]
 801abd8:	e00b      	b.n	801abf2 <USBD_Get_USB_Status+0x4a>
 801abda:	2303      	movs	r3, #3
 801abdc:	73fb      	strb	r3, [r7, #15]
 801abde:	e008      	b.n	801abf2 <USBD_Get_USB_Status+0x4a>
 801abe0:	2301      	movs	r3, #1
 801abe2:	73fb      	strb	r3, [r7, #15]
 801abe4:	e005      	b.n	801abf2 <USBD_Get_USB_Status+0x4a>
 801abe6:	2303      	movs	r3, #3
 801abe8:	73fb      	strb	r3, [r7, #15]
 801abea:	e002      	b.n	801abf2 <USBD_Get_USB_Status+0x4a>
 801abec:	2303      	movs	r3, #3
 801abee:	73fb      	strb	r3, [r7, #15]
 801abf0:	bf00      	nop
 801abf2:	7bfb      	ldrb	r3, [r7, #15]
 801abf4:	4618      	mov	r0, r3
 801abf6:	3714      	adds	r7, #20
 801abf8:	46bd      	mov	sp, r7
 801abfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801abfe:	4770      	bx	lr

0801ac00 <std>:
 801ac00:	2300      	movs	r3, #0
 801ac02:	b510      	push	{r4, lr}
 801ac04:	4604      	mov	r4, r0
 801ac06:	e9c0 3300 	strd	r3, r3, [r0]
 801ac0a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ac0e:	6083      	str	r3, [r0, #8]
 801ac10:	8181      	strh	r1, [r0, #12]
 801ac12:	6643      	str	r3, [r0, #100]	@ 0x64
 801ac14:	81c2      	strh	r2, [r0, #14]
 801ac16:	6183      	str	r3, [r0, #24]
 801ac18:	4619      	mov	r1, r3
 801ac1a:	2208      	movs	r2, #8
 801ac1c:	305c      	adds	r0, #92	@ 0x5c
 801ac1e:	f000 f928 	bl	801ae72 <memset>
 801ac22:	4b0d      	ldr	r3, [pc, #52]	@ (801ac58 <std+0x58>)
 801ac24:	6223      	str	r3, [r4, #32]
 801ac26:	4b0d      	ldr	r3, [pc, #52]	@ (801ac5c <std+0x5c>)
 801ac28:	6263      	str	r3, [r4, #36]	@ 0x24
 801ac2a:	4b0d      	ldr	r3, [pc, #52]	@ (801ac60 <std+0x60>)
 801ac2c:	62a3      	str	r3, [r4, #40]	@ 0x28
 801ac2e:	4b0d      	ldr	r3, [pc, #52]	@ (801ac64 <std+0x64>)
 801ac30:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801ac32:	4b0d      	ldr	r3, [pc, #52]	@ (801ac68 <std+0x68>)
 801ac34:	61e4      	str	r4, [r4, #28]
 801ac36:	429c      	cmp	r4, r3
 801ac38:	d006      	beq.n	801ac48 <std+0x48>
 801ac3a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801ac3e:	4294      	cmp	r4, r2
 801ac40:	d002      	beq.n	801ac48 <std+0x48>
 801ac42:	33d0      	adds	r3, #208	@ 0xd0
 801ac44:	429c      	cmp	r4, r3
 801ac46:	d105      	bne.n	801ac54 <std+0x54>
 801ac48:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801ac4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac50:	f000 b9b4 	b.w	801afbc <__retarget_lock_init_recursive>
 801ac54:	bd10      	pop	{r4, pc}
 801ac56:	bf00      	nop
 801ac58:	0801aded 	.word	0x0801aded
 801ac5c:	0801ae0f 	.word	0x0801ae0f
 801ac60:	0801ae47 	.word	0x0801ae47
 801ac64:	0801ae6b 	.word	0x0801ae6b
 801ac68:	2000cf78 	.word	0x2000cf78

0801ac6c <stdio_exit_handler>:
 801ac6c:	4a02      	ldr	r2, [pc, #8]	@ (801ac78 <stdio_exit_handler+0xc>)
 801ac6e:	4903      	ldr	r1, [pc, #12]	@ (801ac7c <stdio_exit_handler+0x10>)
 801ac70:	4803      	ldr	r0, [pc, #12]	@ (801ac80 <stdio_exit_handler+0x14>)
 801ac72:	f000 b869 	b.w	801ad48 <_fwalk_sglue>
 801ac76:	bf00      	nop
 801ac78:	20000114 	.word	0x20000114
 801ac7c:	0801ca75 	.word	0x0801ca75
 801ac80:	20000128 	.word	0x20000128

0801ac84 <cleanup_stdio>:
 801ac84:	6841      	ldr	r1, [r0, #4]
 801ac86:	4b0c      	ldr	r3, [pc, #48]	@ (801acb8 <cleanup_stdio+0x34>)
 801ac88:	4299      	cmp	r1, r3
 801ac8a:	b510      	push	{r4, lr}
 801ac8c:	4604      	mov	r4, r0
 801ac8e:	d001      	beq.n	801ac94 <cleanup_stdio+0x10>
 801ac90:	f001 fef0 	bl	801ca74 <_fclose_r>
 801ac94:	68a1      	ldr	r1, [r4, #8]
 801ac96:	4b09      	ldr	r3, [pc, #36]	@ (801acbc <cleanup_stdio+0x38>)
 801ac98:	4299      	cmp	r1, r3
 801ac9a:	d002      	beq.n	801aca2 <cleanup_stdio+0x1e>
 801ac9c:	4620      	mov	r0, r4
 801ac9e:	f001 fee9 	bl	801ca74 <_fclose_r>
 801aca2:	68e1      	ldr	r1, [r4, #12]
 801aca4:	4b06      	ldr	r3, [pc, #24]	@ (801acc0 <cleanup_stdio+0x3c>)
 801aca6:	4299      	cmp	r1, r3
 801aca8:	d004      	beq.n	801acb4 <cleanup_stdio+0x30>
 801acaa:	4620      	mov	r0, r4
 801acac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801acb0:	f001 bee0 	b.w	801ca74 <_fclose_r>
 801acb4:	bd10      	pop	{r4, pc}
 801acb6:	bf00      	nop
 801acb8:	2000cf78 	.word	0x2000cf78
 801acbc:	2000cfe0 	.word	0x2000cfe0
 801acc0:	2000d048 	.word	0x2000d048

0801acc4 <global_stdio_init.part.0>:
 801acc4:	b510      	push	{r4, lr}
 801acc6:	4b0b      	ldr	r3, [pc, #44]	@ (801acf4 <global_stdio_init.part.0+0x30>)
 801acc8:	4c0b      	ldr	r4, [pc, #44]	@ (801acf8 <global_stdio_init.part.0+0x34>)
 801acca:	4a0c      	ldr	r2, [pc, #48]	@ (801acfc <global_stdio_init.part.0+0x38>)
 801accc:	601a      	str	r2, [r3, #0]
 801acce:	4620      	mov	r0, r4
 801acd0:	2200      	movs	r2, #0
 801acd2:	2104      	movs	r1, #4
 801acd4:	f7ff ff94 	bl	801ac00 <std>
 801acd8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801acdc:	2201      	movs	r2, #1
 801acde:	2109      	movs	r1, #9
 801ace0:	f7ff ff8e 	bl	801ac00 <std>
 801ace4:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801ace8:	2202      	movs	r2, #2
 801acea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801acee:	2112      	movs	r1, #18
 801acf0:	f7ff bf86 	b.w	801ac00 <std>
 801acf4:	2000d0b0 	.word	0x2000d0b0
 801acf8:	2000cf78 	.word	0x2000cf78
 801acfc:	0801ac6d 	.word	0x0801ac6d

0801ad00 <__sfp_lock_acquire>:
 801ad00:	4801      	ldr	r0, [pc, #4]	@ (801ad08 <__sfp_lock_acquire+0x8>)
 801ad02:	f000 b95d 	b.w	801afc0 <__retarget_lock_acquire_recursive>
 801ad06:	bf00      	nop
 801ad08:	2000d0ba 	.word	0x2000d0ba

0801ad0c <__sfp_lock_release>:
 801ad0c:	4801      	ldr	r0, [pc, #4]	@ (801ad14 <__sfp_lock_release+0x8>)
 801ad0e:	f000 b958 	b.w	801afc2 <__retarget_lock_release_recursive>
 801ad12:	bf00      	nop
 801ad14:	2000d0ba 	.word	0x2000d0ba

0801ad18 <__sinit>:
 801ad18:	b510      	push	{r4, lr}
 801ad1a:	4604      	mov	r4, r0
 801ad1c:	f7ff fff0 	bl	801ad00 <__sfp_lock_acquire>
 801ad20:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801ad22:	b11b      	cbz	r3, 801ad2c <__sinit+0x14>
 801ad24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ad28:	f7ff bff0 	b.w	801ad0c <__sfp_lock_release>
 801ad2c:	4b04      	ldr	r3, [pc, #16]	@ (801ad40 <__sinit+0x28>)
 801ad2e:	6363      	str	r3, [r4, #52]	@ 0x34
 801ad30:	4b04      	ldr	r3, [pc, #16]	@ (801ad44 <__sinit+0x2c>)
 801ad32:	681b      	ldr	r3, [r3, #0]
 801ad34:	2b00      	cmp	r3, #0
 801ad36:	d1f5      	bne.n	801ad24 <__sinit+0xc>
 801ad38:	f7ff ffc4 	bl	801acc4 <global_stdio_init.part.0>
 801ad3c:	e7f2      	b.n	801ad24 <__sinit+0xc>
 801ad3e:	bf00      	nop
 801ad40:	0801ac85 	.word	0x0801ac85
 801ad44:	2000d0b0 	.word	0x2000d0b0

0801ad48 <_fwalk_sglue>:
 801ad48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ad4c:	4607      	mov	r7, r0
 801ad4e:	4688      	mov	r8, r1
 801ad50:	4614      	mov	r4, r2
 801ad52:	2600      	movs	r6, #0
 801ad54:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ad58:	f1b9 0901 	subs.w	r9, r9, #1
 801ad5c:	d505      	bpl.n	801ad6a <_fwalk_sglue+0x22>
 801ad5e:	6824      	ldr	r4, [r4, #0]
 801ad60:	2c00      	cmp	r4, #0
 801ad62:	d1f7      	bne.n	801ad54 <_fwalk_sglue+0xc>
 801ad64:	4630      	mov	r0, r6
 801ad66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ad6a:	89ab      	ldrh	r3, [r5, #12]
 801ad6c:	2b01      	cmp	r3, #1
 801ad6e:	d907      	bls.n	801ad80 <_fwalk_sglue+0x38>
 801ad70:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ad74:	3301      	adds	r3, #1
 801ad76:	d003      	beq.n	801ad80 <_fwalk_sglue+0x38>
 801ad78:	4629      	mov	r1, r5
 801ad7a:	4638      	mov	r0, r7
 801ad7c:	47c0      	blx	r8
 801ad7e:	4306      	orrs	r6, r0
 801ad80:	3568      	adds	r5, #104	@ 0x68
 801ad82:	e7e9      	b.n	801ad58 <_fwalk_sglue+0x10>

0801ad84 <snprintf>:
 801ad84:	b40c      	push	{r2, r3}
 801ad86:	b530      	push	{r4, r5, lr}
 801ad88:	4b17      	ldr	r3, [pc, #92]	@ (801ade8 <snprintf+0x64>)
 801ad8a:	1e0c      	subs	r4, r1, #0
 801ad8c:	681d      	ldr	r5, [r3, #0]
 801ad8e:	b09d      	sub	sp, #116	@ 0x74
 801ad90:	da08      	bge.n	801ada4 <snprintf+0x20>
 801ad92:	238b      	movs	r3, #139	@ 0x8b
 801ad94:	602b      	str	r3, [r5, #0]
 801ad96:	f04f 30ff 	mov.w	r0, #4294967295
 801ad9a:	b01d      	add	sp, #116	@ 0x74
 801ad9c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ada0:	b002      	add	sp, #8
 801ada2:	4770      	bx	lr
 801ada4:	f44f 7302 	mov.w	r3, #520	@ 0x208
 801ada8:	f8ad 3014 	strh.w	r3, [sp, #20]
 801adac:	bf14      	ite	ne
 801adae:	f104 33ff 	addne.w	r3, r4, #4294967295
 801adb2:	4623      	moveq	r3, r4
 801adb4:	9304      	str	r3, [sp, #16]
 801adb6:	9307      	str	r3, [sp, #28]
 801adb8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801adbc:	9002      	str	r0, [sp, #8]
 801adbe:	9006      	str	r0, [sp, #24]
 801adc0:	f8ad 3016 	strh.w	r3, [sp, #22]
 801adc4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801adc6:	ab21      	add	r3, sp, #132	@ 0x84
 801adc8:	a902      	add	r1, sp, #8
 801adca:	4628      	mov	r0, r5
 801adcc:	9301      	str	r3, [sp, #4]
 801adce:	f000 fc73 	bl	801b6b8 <_svfprintf_r>
 801add2:	1c43      	adds	r3, r0, #1
 801add4:	bfbc      	itt	lt
 801add6:	238b      	movlt	r3, #139	@ 0x8b
 801add8:	602b      	strlt	r3, [r5, #0]
 801adda:	2c00      	cmp	r4, #0
 801addc:	d0dd      	beq.n	801ad9a <snprintf+0x16>
 801adde:	9b02      	ldr	r3, [sp, #8]
 801ade0:	2200      	movs	r2, #0
 801ade2:	701a      	strb	r2, [r3, #0]
 801ade4:	e7d9      	b.n	801ad9a <snprintf+0x16>
 801ade6:	bf00      	nop
 801ade8:	20000120 	.word	0x20000120

0801adec <__sread>:
 801adec:	b510      	push	{r4, lr}
 801adee:	460c      	mov	r4, r1
 801adf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801adf4:	f000 f894 	bl	801af20 <_read_r>
 801adf8:	2800      	cmp	r0, #0
 801adfa:	bfab      	itete	ge
 801adfc:	6d23      	ldrge	r3, [r4, #80]	@ 0x50
 801adfe:	89a3      	ldrhlt	r3, [r4, #12]
 801ae00:	181b      	addge	r3, r3, r0
 801ae02:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801ae06:	bfac      	ite	ge
 801ae08:	6523      	strge	r3, [r4, #80]	@ 0x50
 801ae0a:	81a3      	strhlt	r3, [r4, #12]
 801ae0c:	bd10      	pop	{r4, pc}

0801ae0e <__swrite>:
 801ae0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae12:	461f      	mov	r7, r3
 801ae14:	898b      	ldrh	r3, [r1, #12]
 801ae16:	05db      	lsls	r3, r3, #23
 801ae18:	4605      	mov	r5, r0
 801ae1a:	460c      	mov	r4, r1
 801ae1c:	4616      	mov	r6, r2
 801ae1e:	d505      	bpl.n	801ae2c <__swrite+0x1e>
 801ae20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae24:	2302      	movs	r3, #2
 801ae26:	2200      	movs	r2, #0
 801ae28:	f000 f868 	bl	801aefc <_lseek_r>
 801ae2c:	89a3      	ldrh	r3, [r4, #12]
 801ae2e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ae32:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801ae36:	81a3      	strh	r3, [r4, #12]
 801ae38:	4632      	mov	r2, r6
 801ae3a:	463b      	mov	r3, r7
 801ae3c:	4628      	mov	r0, r5
 801ae3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ae42:	f000 b87f 	b.w	801af44 <_write_r>

0801ae46 <__sseek>:
 801ae46:	b510      	push	{r4, lr}
 801ae48:	460c      	mov	r4, r1
 801ae4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae4e:	f000 f855 	bl	801aefc <_lseek_r>
 801ae52:	1c43      	adds	r3, r0, #1
 801ae54:	89a3      	ldrh	r3, [r4, #12]
 801ae56:	bf15      	itete	ne
 801ae58:	6520      	strne	r0, [r4, #80]	@ 0x50
 801ae5a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801ae5e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801ae62:	81a3      	strheq	r3, [r4, #12]
 801ae64:	bf18      	it	ne
 801ae66:	81a3      	strhne	r3, [r4, #12]
 801ae68:	bd10      	pop	{r4, pc}

0801ae6a <__sclose>:
 801ae6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae6e:	f000 b809 	b.w	801ae84 <_close_r>

0801ae72 <memset>:
 801ae72:	4402      	add	r2, r0
 801ae74:	4603      	mov	r3, r0
 801ae76:	4293      	cmp	r3, r2
 801ae78:	d100      	bne.n	801ae7c <memset+0xa>
 801ae7a:	4770      	bx	lr
 801ae7c:	f803 1b01 	strb.w	r1, [r3], #1
 801ae80:	e7f9      	b.n	801ae76 <memset+0x4>
	...

0801ae84 <_close_r>:
 801ae84:	b538      	push	{r3, r4, r5, lr}
 801ae86:	4d06      	ldr	r5, [pc, #24]	@ (801aea0 <_close_r+0x1c>)
 801ae88:	2300      	movs	r3, #0
 801ae8a:	4604      	mov	r4, r0
 801ae8c:	4608      	mov	r0, r1
 801ae8e:	602b      	str	r3, [r5, #0]
 801ae90:	f7e8 fff0 	bl	8003e74 <_close>
 801ae94:	1c43      	adds	r3, r0, #1
 801ae96:	d102      	bne.n	801ae9e <_close_r+0x1a>
 801ae98:	682b      	ldr	r3, [r5, #0]
 801ae9a:	b103      	cbz	r3, 801ae9e <_close_r+0x1a>
 801ae9c:	6023      	str	r3, [r4, #0]
 801ae9e:	bd38      	pop	{r3, r4, r5, pc}
 801aea0:	2000d0b4 	.word	0x2000d0b4

0801aea4 <_reclaim_reent>:
 801aea4:	4b14      	ldr	r3, [pc, #80]	@ (801aef8 <_reclaim_reent+0x54>)
 801aea6:	681b      	ldr	r3, [r3, #0]
 801aea8:	4283      	cmp	r3, r0
 801aeaa:	b570      	push	{r4, r5, r6, lr}
 801aeac:	4604      	mov	r4, r0
 801aeae:	d022      	beq.n	801aef6 <_reclaim_reent+0x52>
 801aeb0:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801aeb2:	b153      	cbz	r3, 801aeca <_reclaim_reent+0x26>
 801aeb4:	2500      	movs	r5, #0
 801aeb6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801aeb8:	5959      	ldr	r1, [r3, r5]
 801aeba:	b9b1      	cbnz	r1, 801aeea <_reclaim_reent+0x46>
 801aebc:	3504      	adds	r5, #4
 801aebe:	2d80      	cmp	r5, #128	@ 0x80
 801aec0:	d1f9      	bne.n	801aeb6 <_reclaim_reent+0x12>
 801aec2:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801aec4:	4620      	mov	r0, r4
 801aec6:	f000 f8f1 	bl	801b0ac <_free_r>
 801aeca:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801aecc:	b111      	cbz	r1, 801aed4 <_reclaim_reent+0x30>
 801aece:	4620      	mov	r0, r4
 801aed0:	f000 f8ec 	bl	801b0ac <_free_r>
 801aed4:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 801aed6:	b111      	cbz	r1, 801aede <_reclaim_reent+0x3a>
 801aed8:	4620      	mov	r0, r4
 801aeda:	f000 f8e7 	bl	801b0ac <_free_r>
 801aede:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801aee0:	b14b      	cbz	r3, 801aef6 <_reclaim_reent+0x52>
 801aee2:	4620      	mov	r0, r4
 801aee4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801aee8:	4718      	bx	r3
 801aeea:	680e      	ldr	r6, [r1, #0]
 801aeec:	4620      	mov	r0, r4
 801aeee:	f000 f8dd 	bl	801b0ac <_free_r>
 801aef2:	4631      	mov	r1, r6
 801aef4:	e7e1      	b.n	801aeba <_reclaim_reent+0x16>
 801aef6:	bd70      	pop	{r4, r5, r6, pc}
 801aef8:	20000120 	.word	0x20000120

0801aefc <_lseek_r>:
 801aefc:	b538      	push	{r3, r4, r5, lr}
 801aefe:	4d07      	ldr	r5, [pc, #28]	@ (801af1c <_lseek_r+0x20>)
 801af00:	4604      	mov	r4, r0
 801af02:	4608      	mov	r0, r1
 801af04:	4611      	mov	r1, r2
 801af06:	2200      	movs	r2, #0
 801af08:	602a      	str	r2, [r5, #0]
 801af0a:	461a      	mov	r2, r3
 801af0c:	f7e8 ffd9 	bl	8003ec2 <_lseek>
 801af10:	1c43      	adds	r3, r0, #1
 801af12:	d102      	bne.n	801af1a <_lseek_r+0x1e>
 801af14:	682b      	ldr	r3, [r5, #0]
 801af16:	b103      	cbz	r3, 801af1a <_lseek_r+0x1e>
 801af18:	6023      	str	r3, [r4, #0]
 801af1a:	bd38      	pop	{r3, r4, r5, pc}
 801af1c:	2000d0b4 	.word	0x2000d0b4

0801af20 <_read_r>:
 801af20:	b538      	push	{r3, r4, r5, lr}
 801af22:	4d07      	ldr	r5, [pc, #28]	@ (801af40 <_read_r+0x20>)
 801af24:	4604      	mov	r4, r0
 801af26:	4608      	mov	r0, r1
 801af28:	4611      	mov	r1, r2
 801af2a:	2200      	movs	r2, #0
 801af2c:	602a      	str	r2, [r5, #0]
 801af2e:	461a      	mov	r2, r3
 801af30:	f7e8 ff67 	bl	8003e02 <_read>
 801af34:	1c43      	adds	r3, r0, #1
 801af36:	d102      	bne.n	801af3e <_read_r+0x1e>
 801af38:	682b      	ldr	r3, [r5, #0]
 801af3a:	b103      	cbz	r3, 801af3e <_read_r+0x1e>
 801af3c:	6023      	str	r3, [r4, #0]
 801af3e:	bd38      	pop	{r3, r4, r5, pc}
 801af40:	2000d0b4 	.word	0x2000d0b4

0801af44 <_write_r>:
 801af44:	b538      	push	{r3, r4, r5, lr}
 801af46:	4d07      	ldr	r5, [pc, #28]	@ (801af64 <_write_r+0x20>)
 801af48:	4604      	mov	r4, r0
 801af4a:	4608      	mov	r0, r1
 801af4c:	4611      	mov	r1, r2
 801af4e:	2200      	movs	r2, #0
 801af50:	602a      	str	r2, [r5, #0]
 801af52:	461a      	mov	r2, r3
 801af54:	f7e8 ff72 	bl	8003e3c <_write>
 801af58:	1c43      	adds	r3, r0, #1
 801af5a:	d102      	bne.n	801af62 <_write_r+0x1e>
 801af5c:	682b      	ldr	r3, [r5, #0]
 801af5e:	b103      	cbz	r3, 801af62 <_write_r+0x1e>
 801af60:	6023      	str	r3, [r4, #0]
 801af62:	bd38      	pop	{r3, r4, r5, pc}
 801af64:	2000d0b4 	.word	0x2000d0b4

0801af68 <__errno>:
 801af68:	4b01      	ldr	r3, [pc, #4]	@ (801af70 <__errno+0x8>)
 801af6a:	6818      	ldr	r0, [r3, #0]
 801af6c:	4770      	bx	lr
 801af6e:	bf00      	nop
 801af70:	20000120 	.word	0x20000120

0801af74 <__libc_init_array>:
 801af74:	b570      	push	{r4, r5, r6, lr}
 801af76:	4d0d      	ldr	r5, [pc, #52]	@ (801afac <__libc_init_array+0x38>)
 801af78:	4c0d      	ldr	r4, [pc, #52]	@ (801afb0 <__libc_init_array+0x3c>)
 801af7a:	1b64      	subs	r4, r4, r5
 801af7c:	10a4      	asrs	r4, r4, #2
 801af7e:	2600      	movs	r6, #0
 801af80:	42a6      	cmp	r6, r4
 801af82:	d109      	bne.n	801af98 <__libc_init_array+0x24>
 801af84:	4d0b      	ldr	r5, [pc, #44]	@ (801afb4 <__libc_init_array+0x40>)
 801af86:	4c0c      	ldr	r4, [pc, #48]	@ (801afb8 <__libc_init_array+0x44>)
 801af88:	f005 ff8e 	bl	8020ea8 <_init>
 801af8c:	1b64      	subs	r4, r4, r5
 801af8e:	10a4      	asrs	r4, r4, #2
 801af90:	2600      	movs	r6, #0
 801af92:	42a6      	cmp	r6, r4
 801af94:	d105      	bne.n	801afa2 <__libc_init_array+0x2e>
 801af96:	bd70      	pop	{r4, r5, r6, pc}
 801af98:	f855 3b04 	ldr.w	r3, [r5], #4
 801af9c:	4798      	blx	r3
 801af9e:	3601      	adds	r6, #1
 801afa0:	e7ee      	b.n	801af80 <__libc_init_array+0xc>
 801afa2:	f855 3b04 	ldr.w	r3, [r5], #4
 801afa6:	4798      	blx	r3
 801afa8:	3601      	adds	r6, #1
 801afaa:	e7f2      	b.n	801af92 <__libc_init_array+0x1e>
 801afac:	08021c10 	.word	0x08021c10
 801afb0:	08021c10 	.word	0x08021c10
 801afb4:	08021c10 	.word	0x08021c10
 801afb8:	08021c18 	.word	0x08021c18

0801afbc <__retarget_lock_init_recursive>:
 801afbc:	4770      	bx	lr

0801afbe <__retarget_lock_close_recursive>:
 801afbe:	4770      	bx	lr

0801afc0 <__retarget_lock_acquire_recursive>:
 801afc0:	4770      	bx	lr

0801afc2 <__retarget_lock_release_recursive>:
 801afc2:	4770      	bx	lr

0801afc4 <memcpy>:
 801afc4:	440a      	add	r2, r1
 801afc6:	4291      	cmp	r1, r2
 801afc8:	f100 33ff 	add.w	r3, r0, #4294967295
 801afcc:	d100      	bne.n	801afd0 <memcpy+0xc>
 801afce:	4770      	bx	lr
 801afd0:	b510      	push	{r4, lr}
 801afd2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801afd6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801afda:	4291      	cmp	r1, r2
 801afdc:	d1f9      	bne.n	801afd2 <memcpy+0xe>
 801afde:	bd10      	pop	{r4, pc}

0801afe0 <register_fini>:
 801afe0:	4b02      	ldr	r3, [pc, #8]	@ (801afec <register_fini+0xc>)
 801afe2:	b113      	cbz	r3, 801afea <register_fini+0xa>
 801afe4:	4802      	ldr	r0, [pc, #8]	@ (801aff0 <register_fini+0x10>)
 801afe6:	f000 b805 	b.w	801aff4 <atexit>
 801afea:	4770      	bx	lr
 801afec:	00000000 	.word	0x00000000
 801aff0:	0801ccd5 	.word	0x0801ccd5

0801aff4 <atexit>:
 801aff4:	2300      	movs	r3, #0
 801aff6:	4601      	mov	r1, r0
 801aff8:	461a      	mov	r2, r3
 801affa:	4618      	mov	r0, r3
 801affc:	f001 bec0 	b.w	801cd80 <__register_exitproc>

0801b000 <_malloc_trim_r>:
 801b000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801b004:	4606      	mov	r6, r0
 801b006:	2008      	movs	r0, #8
 801b008:	4689      	mov	r9, r1
 801b00a:	f001 fe77 	bl	801ccfc <sysconf>
 801b00e:	4f24      	ldr	r7, [pc, #144]	@ (801b0a0 <_malloc_trim_r+0xa0>)
 801b010:	4680      	mov	r8, r0
 801b012:	4630      	mov	r0, r6
 801b014:	f000 fb44 	bl	801b6a0 <__malloc_lock>
 801b018:	68bb      	ldr	r3, [r7, #8]
 801b01a:	685d      	ldr	r5, [r3, #4]
 801b01c:	f025 0503 	bic.w	r5, r5, #3
 801b020:	f1a5 0411 	sub.w	r4, r5, #17
 801b024:	eba4 0409 	sub.w	r4, r4, r9
 801b028:	4444      	add	r4, r8
 801b02a:	fbb4 f4f8 	udiv	r4, r4, r8
 801b02e:	3c01      	subs	r4, #1
 801b030:	fb08 f404 	mul.w	r4, r8, r4
 801b034:	45a0      	cmp	r8, r4
 801b036:	dd05      	ble.n	801b044 <_malloc_trim_r+0x44>
 801b038:	4630      	mov	r0, r6
 801b03a:	f000 fb37 	bl	801b6ac <__malloc_unlock>
 801b03e:	2000      	movs	r0, #0
 801b040:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801b044:	2100      	movs	r1, #0
 801b046:	4630      	mov	r0, r6
 801b048:	f001 fe34 	bl	801ccb4 <_sbrk_r>
 801b04c:	68bb      	ldr	r3, [r7, #8]
 801b04e:	442b      	add	r3, r5
 801b050:	4298      	cmp	r0, r3
 801b052:	d1f1      	bne.n	801b038 <_malloc_trim_r+0x38>
 801b054:	4261      	negs	r1, r4
 801b056:	4630      	mov	r0, r6
 801b058:	f001 fe2c 	bl	801ccb4 <_sbrk_r>
 801b05c:	3001      	adds	r0, #1
 801b05e:	d110      	bne.n	801b082 <_malloc_trim_r+0x82>
 801b060:	2100      	movs	r1, #0
 801b062:	4630      	mov	r0, r6
 801b064:	f001 fe26 	bl	801ccb4 <_sbrk_r>
 801b068:	68ba      	ldr	r2, [r7, #8]
 801b06a:	1a83      	subs	r3, r0, r2
 801b06c:	2b0f      	cmp	r3, #15
 801b06e:	dde3      	ble.n	801b038 <_malloc_trim_r+0x38>
 801b070:	490c      	ldr	r1, [pc, #48]	@ (801b0a4 <_malloc_trim_r+0xa4>)
 801b072:	6809      	ldr	r1, [r1, #0]
 801b074:	1a40      	subs	r0, r0, r1
 801b076:	490c      	ldr	r1, [pc, #48]	@ (801b0a8 <_malloc_trim_r+0xa8>)
 801b078:	f043 0301 	orr.w	r3, r3, #1
 801b07c:	6008      	str	r0, [r1, #0]
 801b07e:	6053      	str	r3, [r2, #4]
 801b080:	e7da      	b.n	801b038 <_malloc_trim_r+0x38>
 801b082:	68bb      	ldr	r3, [r7, #8]
 801b084:	4a08      	ldr	r2, [pc, #32]	@ (801b0a8 <_malloc_trim_r+0xa8>)
 801b086:	1b2d      	subs	r5, r5, r4
 801b088:	f045 0501 	orr.w	r5, r5, #1
 801b08c:	605d      	str	r5, [r3, #4]
 801b08e:	6813      	ldr	r3, [r2, #0]
 801b090:	4630      	mov	r0, r6
 801b092:	1b1b      	subs	r3, r3, r4
 801b094:	6013      	str	r3, [r2, #0]
 801b096:	f000 fb09 	bl	801b6ac <__malloc_unlock>
 801b09a:	2001      	movs	r0, #1
 801b09c:	e7d0      	b.n	801b040 <_malloc_trim_r+0x40>
 801b09e:	bf00      	nop
 801b0a0:	20000254 	.word	0x20000254
 801b0a4:	2000024c 	.word	0x2000024c
 801b0a8:	2000d0c0 	.word	0x2000d0c0

0801b0ac <_free_r>:
 801b0ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b0ae:	4604      	mov	r4, r0
 801b0b0:	460f      	mov	r7, r1
 801b0b2:	2900      	cmp	r1, #0
 801b0b4:	f000 80b1 	beq.w	801b21a <_free_r+0x16e>
 801b0b8:	f000 faf2 	bl	801b6a0 <__malloc_lock>
 801b0bc:	f857 2c04 	ldr.w	r2, [r7, #-4]
 801b0c0:	4d56      	ldr	r5, [pc, #344]	@ (801b21c <_free_r+0x170>)
 801b0c2:	f022 0001 	bic.w	r0, r2, #1
 801b0c6:	f1a7 0308 	sub.w	r3, r7, #8
 801b0ca:	eb03 0c00 	add.w	ip, r3, r0
 801b0ce:	68a9      	ldr	r1, [r5, #8]
 801b0d0:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b0d4:	4561      	cmp	r1, ip
 801b0d6:	f026 0603 	bic.w	r6, r6, #3
 801b0da:	f002 0201 	and.w	r2, r2, #1
 801b0de:	d11b      	bne.n	801b118 <_free_r+0x6c>
 801b0e0:	4406      	add	r6, r0
 801b0e2:	b93a      	cbnz	r2, 801b0f4 <_free_r+0x48>
 801b0e4:	f857 2c08 	ldr.w	r2, [r7, #-8]
 801b0e8:	1a9b      	subs	r3, r3, r2
 801b0ea:	4416      	add	r6, r2
 801b0ec:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 801b0f0:	60ca      	str	r2, [r1, #12]
 801b0f2:	6091      	str	r1, [r2, #8]
 801b0f4:	f046 0201 	orr.w	r2, r6, #1
 801b0f8:	605a      	str	r2, [r3, #4]
 801b0fa:	60ab      	str	r3, [r5, #8]
 801b0fc:	4b48      	ldr	r3, [pc, #288]	@ (801b220 <_free_r+0x174>)
 801b0fe:	681b      	ldr	r3, [r3, #0]
 801b100:	42b3      	cmp	r3, r6
 801b102:	d804      	bhi.n	801b10e <_free_r+0x62>
 801b104:	4b47      	ldr	r3, [pc, #284]	@ (801b224 <_free_r+0x178>)
 801b106:	4620      	mov	r0, r4
 801b108:	6819      	ldr	r1, [r3, #0]
 801b10a:	f7ff ff79 	bl	801b000 <_malloc_trim_r>
 801b10e:	4620      	mov	r0, r4
 801b110:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801b114:	f000 baca 	b.w	801b6ac <__malloc_unlock>
 801b118:	f8cc 6004 	str.w	r6, [ip, #4]
 801b11c:	2a00      	cmp	r2, #0
 801b11e:	d138      	bne.n	801b192 <_free_r+0xe6>
 801b120:	f857 1c08 	ldr.w	r1, [r7, #-8]
 801b124:	1a5b      	subs	r3, r3, r1
 801b126:	4408      	add	r0, r1
 801b128:	6899      	ldr	r1, [r3, #8]
 801b12a:	f105 0708 	add.w	r7, r5, #8
 801b12e:	42b9      	cmp	r1, r7
 801b130:	d031      	beq.n	801b196 <_free_r+0xea>
 801b132:	68df      	ldr	r7, [r3, #12]
 801b134:	60cf      	str	r7, [r1, #12]
 801b136:	60b9      	str	r1, [r7, #8]
 801b138:	eb0c 0106 	add.w	r1, ip, r6
 801b13c:	6849      	ldr	r1, [r1, #4]
 801b13e:	07c9      	lsls	r1, r1, #31
 801b140:	d40b      	bmi.n	801b15a <_free_r+0xae>
 801b142:	f8dc 1008 	ldr.w	r1, [ip, #8]
 801b146:	4430      	add	r0, r6
 801b148:	bb3a      	cbnz	r2, 801b19a <_free_r+0xee>
 801b14a:	4e37      	ldr	r6, [pc, #220]	@ (801b228 <_free_r+0x17c>)
 801b14c:	42b1      	cmp	r1, r6
 801b14e:	d124      	bne.n	801b19a <_free_r+0xee>
 801b150:	e9c5 3304 	strd	r3, r3, [r5, #16]
 801b154:	e9c3 1102 	strd	r1, r1, [r3, #8]
 801b158:	2201      	movs	r2, #1
 801b15a:	f040 0101 	orr.w	r1, r0, #1
 801b15e:	6059      	str	r1, [r3, #4]
 801b160:	5018      	str	r0, [r3, r0]
 801b162:	2a00      	cmp	r2, #0
 801b164:	d1d3      	bne.n	801b10e <_free_r+0x62>
 801b166:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 801b16a:	d21b      	bcs.n	801b1a4 <_free_r+0xf8>
 801b16c:	08c2      	lsrs	r2, r0, #3
 801b16e:	2101      	movs	r1, #1
 801b170:	0940      	lsrs	r0, r0, #5
 801b172:	4081      	lsls	r1, r0
 801b174:	6868      	ldr	r0, [r5, #4]
 801b176:	3201      	adds	r2, #1
 801b178:	4301      	orrs	r1, r0
 801b17a:	6069      	str	r1, [r5, #4]
 801b17c:	f855 0032 	ldr.w	r0, [r5, r2, lsl #3]
 801b180:	eb05 01c2 	add.w	r1, r5, r2, lsl #3
 801b184:	3908      	subs	r1, #8
 801b186:	e9c3 0102 	strd	r0, r1, [r3, #8]
 801b18a:	f845 3032 	str.w	r3, [r5, r2, lsl #3]
 801b18e:	60c3      	str	r3, [r0, #12]
 801b190:	e7bd      	b.n	801b10e <_free_r+0x62>
 801b192:	2200      	movs	r2, #0
 801b194:	e7d0      	b.n	801b138 <_free_r+0x8c>
 801b196:	2201      	movs	r2, #1
 801b198:	e7ce      	b.n	801b138 <_free_r+0x8c>
 801b19a:	f8dc 600c 	ldr.w	r6, [ip, #12]
 801b19e:	60ce      	str	r6, [r1, #12]
 801b1a0:	60b1      	str	r1, [r6, #8]
 801b1a2:	e7da      	b.n	801b15a <_free_r+0xae>
 801b1a4:	f5b0 6f20 	cmp.w	r0, #2560	@ 0xa00
 801b1a8:	ea4f 2250 	mov.w	r2, r0, lsr #9
 801b1ac:	d214      	bcs.n	801b1d8 <_free_r+0x12c>
 801b1ae:	0982      	lsrs	r2, r0, #6
 801b1b0:	3238      	adds	r2, #56	@ 0x38
 801b1b2:	1c51      	adds	r1, r2, #1
 801b1b4:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 801b1b8:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 801b1bc:	428e      	cmp	r6, r1
 801b1be:	d125      	bne.n	801b20c <_free_r+0x160>
 801b1c0:	2001      	movs	r0, #1
 801b1c2:	1092      	asrs	r2, r2, #2
 801b1c4:	fa00 f202 	lsl.w	r2, r0, r2
 801b1c8:	6868      	ldr	r0, [r5, #4]
 801b1ca:	4302      	orrs	r2, r0
 801b1cc:	606a      	str	r2, [r5, #4]
 801b1ce:	e9c3 1602 	strd	r1, r6, [r3, #8]
 801b1d2:	60b3      	str	r3, [r6, #8]
 801b1d4:	60cb      	str	r3, [r1, #12]
 801b1d6:	e79a      	b.n	801b10e <_free_r+0x62>
 801b1d8:	2a14      	cmp	r2, #20
 801b1da:	d801      	bhi.n	801b1e0 <_free_r+0x134>
 801b1dc:	325b      	adds	r2, #91	@ 0x5b
 801b1de:	e7e8      	b.n	801b1b2 <_free_r+0x106>
 801b1e0:	2a54      	cmp	r2, #84	@ 0x54
 801b1e2:	d802      	bhi.n	801b1ea <_free_r+0x13e>
 801b1e4:	0b02      	lsrs	r2, r0, #12
 801b1e6:	326e      	adds	r2, #110	@ 0x6e
 801b1e8:	e7e3      	b.n	801b1b2 <_free_r+0x106>
 801b1ea:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801b1ee:	d802      	bhi.n	801b1f6 <_free_r+0x14a>
 801b1f0:	0bc2      	lsrs	r2, r0, #15
 801b1f2:	3277      	adds	r2, #119	@ 0x77
 801b1f4:	e7dd      	b.n	801b1b2 <_free_r+0x106>
 801b1f6:	f240 5154 	movw	r1, #1364	@ 0x554
 801b1fa:	428a      	cmp	r2, r1
 801b1fc:	bf9a      	itte	ls
 801b1fe:	0c82      	lsrls	r2, r0, #18
 801b200:	327c      	addls	r2, #124	@ 0x7c
 801b202:	227e      	movhi	r2, #126	@ 0x7e
 801b204:	e7d5      	b.n	801b1b2 <_free_r+0x106>
 801b206:	6889      	ldr	r1, [r1, #8]
 801b208:	428e      	cmp	r6, r1
 801b20a:	d004      	beq.n	801b216 <_free_r+0x16a>
 801b20c:	684a      	ldr	r2, [r1, #4]
 801b20e:	f022 0203 	bic.w	r2, r2, #3
 801b212:	4282      	cmp	r2, r0
 801b214:	d8f7      	bhi.n	801b206 <_free_r+0x15a>
 801b216:	68ce      	ldr	r6, [r1, #12]
 801b218:	e7d9      	b.n	801b1ce <_free_r+0x122>
 801b21a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801b21c:	20000254 	.word	0x20000254
 801b220:	20000250 	.word	0x20000250
 801b224:	2000d0f0 	.word	0x2000d0f0
 801b228:	2000025c 	.word	0x2000025c

0801b22c <_malloc_r>:
 801b22c:	f101 030b 	add.w	r3, r1, #11
 801b230:	2b16      	cmp	r3, #22
 801b232:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b236:	4605      	mov	r5, r0
 801b238:	d906      	bls.n	801b248 <_malloc_r+0x1c>
 801b23a:	f033 0707 	bics.w	r7, r3, #7
 801b23e:	d504      	bpl.n	801b24a <_malloc_r+0x1e>
 801b240:	230c      	movs	r3, #12
 801b242:	602b      	str	r3, [r5, #0]
 801b244:	2400      	movs	r4, #0
 801b246:	e1a3      	b.n	801b590 <_malloc_r+0x364>
 801b248:	2710      	movs	r7, #16
 801b24a:	42b9      	cmp	r1, r7
 801b24c:	d8f8      	bhi.n	801b240 <_malloc_r+0x14>
 801b24e:	4628      	mov	r0, r5
 801b250:	f000 fa26 	bl	801b6a0 <__malloc_lock>
 801b254:	f5b7 7ffc 	cmp.w	r7, #504	@ 0x1f8
 801b258:	4eaf      	ldr	r6, [pc, #700]	@ (801b518 <_malloc_r+0x2ec>)
 801b25a:	d237      	bcs.n	801b2cc <_malloc_r+0xa0>
 801b25c:	f107 0208 	add.w	r2, r7, #8
 801b260:	4432      	add	r2, r6
 801b262:	f1a2 0108 	sub.w	r1, r2, #8
 801b266:	6854      	ldr	r4, [r2, #4]
 801b268:	428c      	cmp	r4, r1
 801b26a:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 801b26e:	d102      	bne.n	801b276 <_malloc_r+0x4a>
 801b270:	68d4      	ldr	r4, [r2, #12]
 801b272:	42a2      	cmp	r2, r4
 801b274:	d010      	beq.n	801b298 <_malloc_r+0x6c>
 801b276:	6863      	ldr	r3, [r4, #4]
 801b278:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801b27c:	f023 0303 	bic.w	r3, r3, #3
 801b280:	60ca      	str	r2, [r1, #12]
 801b282:	4423      	add	r3, r4
 801b284:	6091      	str	r1, [r2, #8]
 801b286:	685a      	ldr	r2, [r3, #4]
 801b288:	f042 0201 	orr.w	r2, r2, #1
 801b28c:	605a      	str	r2, [r3, #4]
 801b28e:	4628      	mov	r0, r5
 801b290:	f000 fa0c 	bl	801b6ac <__malloc_unlock>
 801b294:	3408      	adds	r4, #8
 801b296:	e17b      	b.n	801b590 <_malloc_r+0x364>
 801b298:	3302      	adds	r3, #2
 801b29a:	6934      	ldr	r4, [r6, #16]
 801b29c:	499f      	ldr	r1, [pc, #636]	@ (801b51c <_malloc_r+0x2f0>)
 801b29e:	428c      	cmp	r4, r1
 801b2a0:	d077      	beq.n	801b392 <_malloc_r+0x166>
 801b2a2:	6862      	ldr	r2, [r4, #4]
 801b2a4:	f022 0c03 	bic.w	ip, r2, #3
 801b2a8:	ebac 0007 	sub.w	r0, ip, r7
 801b2ac:	280f      	cmp	r0, #15
 801b2ae:	dd48      	ble.n	801b342 <_malloc_r+0x116>
 801b2b0:	19e2      	adds	r2, r4, r7
 801b2b2:	f040 0301 	orr.w	r3, r0, #1
 801b2b6:	f047 0701 	orr.w	r7, r7, #1
 801b2ba:	6067      	str	r7, [r4, #4]
 801b2bc:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801b2c0:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801b2c4:	6053      	str	r3, [r2, #4]
 801b2c6:	f844 000c 	str.w	r0, [r4, ip]
 801b2ca:	e7e0      	b.n	801b28e <_malloc_r+0x62>
 801b2cc:	0a7b      	lsrs	r3, r7, #9
 801b2ce:	d02a      	beq.n	801b326 <_malloc_r+0xfa>
 801b2d0:	2b04      	cmp	r3, #4
 801b2d2:	d812      	bhi.n	801b2fa <_malloc_r+0xce>
 801b2d4:	09bb      	lsrs	r3, r7, #6
 801b2d6:	3338      	adds	r3, #56	@ 0x38
 801b2d8:	1c5a      	adds	r2, r3, #1
 801b2da:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 801b2de:	f1a2 0c08 	sub.w	ip, r2, #8
 801b2e2:	6854      	ldr	r4, [r2, #4]
 801b2e4:	4564      	cmp	r4, ip
 801b2e6:	d006      	beq.n	801b2f6 <_malloc_r+0xca>
 801b2e8:	6862      	ldr	r2, [r4, #4]
 801b2ea:	f022 0203 	bic.w	r2, r2, #3
 801b2ee:	1bd0      	subs	r0, r2, r7
 801b2f0:	280f      	cmp	r0, #15
 801b2f2:	dd1c      	ble.n	801b32e <_malloc_r+0x102>
 801b2f4:	3b01      	subs	r3, #1
 801b2f6:	3301      	adds	r3, #1
 801b2f8:	e7cf      	b.n	801b29a <_malloc_r+0x6e>
 801b2fa:	2b14      	cmp	r3, #20
 801b2fc:	d801      	bhi.n	801b302 <_malloc_r+0xd6>
 801b2fe:	335b      	adds	r3, #91	@ 0x5b
 801b300:	e7ea      	b.n	801b2d8 <_malloc_r+0xac>
 801b302:	2b54      	cmp	r3, #84	@ 0x54
 801b304:	d802      	bhi.n	801b30c <_malloc_r+0xe0>
 801b306:	0b3b      	lsrs	r3, r7, #12
 801b308:	336e      	adds	r3, #110	@ 0x6e
 801b30a:	e7e5      	b.n	801b2d8 <_malloc_r+0xac>
 801b30c:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 801b310:	d802      	bhi.n	801b318 <_malloc_r+0xec>
 801b312:	0bfb      	lsrs	r3, r7, #15
 801b314:	3377      	adds	r3, #119	@ 0x77
 801b316:	e7df      	b.n	801b2d8 <_malloc_r+0xac>
 801b318:	f240 5254 	movw	r2, #1364	@ 0x554
 801b31c:	4293      	cmp	r3, r2
 801b31e:	d804      	bhi.n	801b32a <_malloc_r+0xfe>
 801b320:	0cbb      	lsrs	r3, r7, #18
 801b322:	337c      	adds	r3, #124	@ 0x7c
 801b324:	e7d8      	b.n	801b2d8 <_malloc_r+0xac>
 801b326:	233f      	movs	r3, #63	@ 0x3f
 801b328:	e7d6      	b.n	801b2d8 <_malloc_r+0xac>
 801b32a:	237e      	movs	r3, #126	@ 0x7e
 801b32c:	e7d4      	b.n	801b2d8 <_malloc_r+0xac>
 801b32e:	2800      	cmp	r0, #0
 801b330:	68e1      	ldr	r1, [r4, #12]
 801b332:	db04      	blt.n	801b33e <_malloc_r+0x112>
 801b334:	68a3      	ldr	r3, [r4, #8]
 801b336:	60d9      	str	r1, [r3, #12]
 801b338:	608b      	str	r3, [r1, #8]
 801b33a:	18a3      	adds	r3, r4, r2
 801b33c:	e7a3      	b.n	801b286 <_malloc_r+0x5a>
 801b33e:	460c      	mov	r4, r1
 801b340:	e7d0      	b.n	801b2e4 <_malloc_r+0xb8>
 801b342:	2800      	cmp	r0, #0
 801b344:	e9c6 1104 	strd	r1, r1, [r6, #16]
 801b348:	db07      	blt.n	801b35a <_malloc_r+0x12e>
 801b34a:	44a4      	add	ip, r4
 801b34c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b350:	f043 0301 	orr.w	r3, r3, #1
 801b354:	f8cc 3004 	str.w	r3, [ip, #4]
 801b358:	e799      	b.n	801b28e <_malloc_r+0x62>
 801b35a:	f5bc 7f00 	cmp.w	ip, #512	@ 0x200
 801b35e:	6870      	ldr	r0, [r6, #4]
 801b360:	f080 8095 	bcs.w	801b48e <_malloc_r+0x262>
 801b364:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 801b368:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 801b36c:	f04f 0c01 	mov.w	ip, #1
 801b370:	3201      	adds	r2, #1
 801b372:	fa0c fc0e 	lsl.w	ip, ip, lr
 801b376:	ea4c 0000 	orr.w	r0, ip, r0
 801b37a:	6070      	str	r0, [r6, #4]
 801b37c:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 801b380:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 801b384:	3808      	subs	r0, #8
 801b386:	e9c4 c002 	strd	ip, r0, [r4, #8]
 801b38a:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 801b38e:	f8cc 400c 	str.w	r4, [ip, #12]
 801b392:	1098      	asrs	r0, r3, #2
 801b394:	2201      	movs	r2, #1
 801b396:	4082      	lsls	r2, r0
 801b398:	6870      	ldr	r0, [r6, #4]
 801b39a:	4290      	cmp	r0, r2
 801b39c:	d326      	bcc.n	801b3ec <_malloc_r+0x1c0>
 801b39e:	4210      	tst	r0, r2
 801b3a0:	d106      	bne.n	801b3b0 <_malloc_r+0x184>
 801b3a2:	f023 0303 	bic.w	r3, r3, #3
 801b3a6:	0052      	lsls	r2, r2, #1
 801b3a8:	4210      	tst	r0, r2
 801b3aa:	f103 0304 	add.w	r3, r3, #4
 801b3ae:	d0fa      	beq.n	801b3a6 <_malloc_r+0x17a>
 801b3b0:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 801b3b4:	46c1      	mov	r9, r8
 801b3b6:	469e      	mov	lr, r3
 801b3b8:	f8d9 400c 	ldr.w	r4, [r9, #12]
 801b3bc:	454c      	cmp	r4, r9
 801b3be:	f040 80b9 	bne.w	801b534 <_malloc_r+0x308>
 801b3c2:	f10e 0e01 	add.w	lr, lr, #1
 801b3c6:	f01e 0f03 	tst.w	lr, #3
 801b3ca:	f109 0908 	add.w	r9, r9, #8
 801b3ce:	d1f3      	bne.n	801b3b8 <_malloc_r+0x18c>
 801b3d0:	0798      	lsls	r0, r3, #30
 801b3d2:	f040 80e3 	bne.w	801b59c <_malloc_r+0x370>
 801b3d6:	6873      	ldr	r3, [r6, #4]
 801b3d8:	ea23 0302 	bic.w	r3, r3, r2
 801b3dc:	6073      	str	r3, [r6, #4]
 801b3de:	6870      	ldr	r0, [r6, #4]
 801b3e0:	0052      	lsls	r2, r2, #1
 801b3e2:	4290      	cmp	r0, r2
 801b3e4:	d302      	bcc.n	801b3ec <_malloc_r+0x1c0>
 801b3e6:	2a00      	cmp	r2, #0
 801b3e8:	f040 80e5 	bne.w	801b5b6 <_malloc_r+0x38a>
 801b3ec:	f8d6 a008 	ldr.w	sl, [r6, #8]
 801b3f0:	f8da 3004 	ldr.w	r3, [sl, #4]
 801b3f4:	f023 0903 	bic.w	r9, r3, #3
 801b3f8:	45b9      	cmp	r9, r7
 801b3fa:	d304      	bcc.n	801b406 <_malloc_r+0x1da>
 801b3fc:	eba9 0207 	sub.w	r2, r9, r7
 801b400:	2a0f      	cmp	r2, #15
 801b402:	f300 8141 	bgt.w	801b688 <_malloc_r+0x45c>
 801b406:	4b46      	ldr	r3, [pc, #280]	@ (801b520 <_malloc_r+0x2f4>)
 801b408:	6819      	ldr	r1, [r3, #0]
 801b40a:	3110      	adds	r1, #16
 801b40c:	4439      	add	r1, r7
 801b40e:	2008      	movs	r0, #8
 801b410:	9101      	str	r1, [sp, #4]
 801b412:	f001 fc73 	bl	801ccfc <sysconf>
 801b416:	4a43      	ldr	r2, [pc, #268]	@ (801b524 <_malloc_r+0x2f8>)
 801b418:	9901      	ldr	r1, [sp, #4]
 801b41a:	6813      	ldr	r3, [r2, #0]
 801b41c:	3301      	adds	r3, #1
 801b41e:	bf1f      	itttt	ne
 801b420:	f101 31ff 	addne.w	r1, r1, #4294967295
 801b424:	1809      	addne	r1, r1, r0
 801b426:	4243      	negne	r3, r0
 801b428:	4019      	andne	r1, r3
 801b42a:	4680      	mov	r8, r0
 801b42c:	4628      	mov	r0, r5
 801b42e:	9101      	str	r1, [sp, #4]
 801b430:	f001 fc40 	bl	801ccb4 <_sbrk_r>
 801b434:	1c42      	adds	r2, r0, #1
 801b436:	eb0a 0b09 	add.w	fp, sl, r9
 801b43a:	4604      	mov	r4, r0
 801b43c:	f000 80f7 	beq.w	801b62e <_malloc_r+0x402>
 801b440:	4583      	cmp	fp, r0
 801b442:	9901      	ldr	r1, [sp, #4]
 801b444:	4a37      	ldr	r2, [pc, #220]	@ (801b524 <_malloc_r+0x2f8>)
 801b446:	d902      	bls.n	801b44e <_malloc_r+0x222>
 801b448:	45b2      	cmp	sl, r6
 801b44a:	f040 80f0 	bne.w	801b62e <_malloc_r+0x402>
 801b44e:	4b36      	ldr	r3, [pc, #216]	@ (801b528 <_malloc_r+0x2fc>)
 801b450:	6818      	ldr	r0, [r3, #0]
 801b452:	45a3      	cmp	fp, r4
 801b454:	eb00 0e01 	add.w	lr, r0, r1
 801b458:	f8c3 e000 	str.w	lr, [r3]
 801b45c:	f108 3cff 	add.w	ip, r8, #4294967295
 801b460:	f040 80ab 	bne.w	801b5ba <_malloc_r+0x38e>
 801b464:	ea1b 0f0c 	tst.w	fp, ip
 801b468:	f040 80a7 	bne.w	801b5ba <_malloc_r+0x38e>
 801b46c:	68b2      	ldr	r2, [r6, #8]
 801b46e:	4449      	add	r1, r9
 801b470:	f041 0101 	orr.w	r1, r1, #1
 801b474:	6051      	str	r1, [r2, #4]
 801b476:	4a2d      	ldr	r2, [pc, #180]	@ (801b52c <_malloc_r+0x300>)
 801b478:	681b      	ldr	r3, [r3, #0]
 801b47a:	6811      	ldr	r1, [r2, #0]
 801b47c:	428b      	cmp	r3, r1
 801b47e:	bf88      	it	hi
 801b480:	6013      	strhi	r3, [r2, #0]
 801b482:	4a2b      	ldr	r2, [pc, #172]	@ (801b530 <_malloc_r+0x304>)
 801b484:	6811      	ldr	r1, [r2, #0]
 801b486:	428b      	cmp	r3, r1
 801b488:	bf88      	it	hi
 801b48a:	6013      	strhi	r3, [r2, #0]
 801b48c:	e0cf      	b.n	801b62e <_malloc_r+0x402>
 801b48e:	f5bc 6f20 	cmp.w	ip, #2560	@ 0xa00
 801b492:	ea4f 225c 	mov.w	r2, ip, lsr #9
 801b496:	d218      	bcs.n	801b4ca <_malloc_r+0x29e>
 801b498:	ea4f 129c 	mov.w	r2, ip, lsr #6
 801b49c:	3238      	adds	r2, #56	@ 0x38
 801b49e:	f102 0e01 	add.w	lr, r2, #1
 801b4a2:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 801b4a6:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 801b4aa:	45f0      	cmp	r8, lr
 801b4ac:	d12b      	bne.n	801b506 <_malloc_r+0x2da>
 801b4ae:	1092      	asrs	r2, r2, #2
 801b4b0:	f04f 0c01 	mov.w	ip, #1
 801b4b4:	fa0c f202 	lsl.w	r2, ip, r2
 801b4b8:	4302      	orrs	r2, r0
 801b4ba:	6072      	str	r2, [r6, #4]
 801b4bc:	e9c4 e802 	strd	lr, r8, [r4, #8]
 801b4c0:	f8c8 4008 	str.w	r4, [r8, #8]
 801b4c4:	f8ce 400c 	str.w	r4, [lr, #12]
 801b4c8:	e763      	b.n	801b392 <_malloc_r+0x166>
 801b4ca:	2a14      	cmp	r2, #20
 801b4cc:	d801      	bhi.n	801b4d2 <_malloc_r+0x2a6>
 801b4ce:	325b      	adds	r2, #91	@ 0x5b
 801b4d0:	e7e5      	b.n	801b49e <_malloc_r+0x272>
 801b4d2:	2a54      	cmp	r2, #84	@ 0x54
 801b4d4:	d803      	bhi.n	801b4de <_malloc_r+0x2b2>
 801b4d6:	ea4f 321c 	mov.w	r2, ip, lsr #12
 801b4da:	326e      	adds	r2, #110	@ 0x6e
 801b4dc:	e7df      	b.n	801b49e <_malloc_r+0x272>
 801b4de:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801b4e2:	d803      	bhi.n	801b4ec <_malloc_r+0x2c0>
 801b4e4:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 801b4e8:	3277      	adds	r2, #119	@ 0x77
 801b4ea:	e7d8      	b.n	801b49e <_malloc_r+0x272>
 801b4ec:	f240 5e54 	movw	lr, #1364	@ 0x554
 801b4f0:	4572      	cmp	r2, lr
 801b4f2:	bf9a      	itte	ls
 801b4f4:	ea4f 429c 	movls.w	r2, ip, lsr #18
 801b4f8:	327c      	addls	r2, #124	@ 0x7c
 801b4fa:	227e      	movhi	r2, #126	@ 0x7e
 801b4fc:	e7cf      	b.n	801b49e <_malloc_r+0x272>
 801b4fe:	f8de e008 	ldr.w	lr, [lr, #8]
 801b502:	45f0      	cmp	r8, lr
 801b504:	d005      	beq.n	801b512 <_malloc_r+0x2e6>
 801b506:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b50a:	f022 0203 	bic.w	r2, r2, #3
 801b50e:	4562      	cmp	r2, ip
 801b510:	d8f5      	bhi.n	801b4fe <_malloc_r+0x2d2>
 801b512:	f8de 800c 	ldr.w	r8, [lr, #12]
 801b516:	e7d1      	b.n	801b4bc <_malloc_r+0x290>
 801b518:	20000254 	.word	0x20000254
 801b51c:	2000025c 	.word	0x2000025c
 801b520:	2000d0f0 	.word	0x2000d0f0
 801b524:	2000024c 	.word	0x2000024c
 801b528:	2000d0c0 	.word	0x2000d0c0
 801b52c:	2000d0ec 	.word	0x2000d0ec
 801b530:	2000d0e8 	.word	0x2000d0e8
 801b534:	6860      	ldr	r0, [r4, #4]
 801b536:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 801b53a:	f020 0003 	bic.w	r0, r0, #3
 801b53e:	eba0 0a07 	sub.w	sl, r0, r7
 801b542:	f1ba 0f0f 	cmp.w	sl, #15
 801b546:	dd12      	ble.n	801b56e <_malloc_r+0x342>
 801b548:	68a3      	ldr	r3, [r4, #8]
 801b54a:	19e2      	adds	r2, r4, r7
 801b54c:	f047 0701 	orr.w	r7, r7, #1
 801b550:	6067      	str	r7, [r4, #4]
 801b552:	f8c3 c00c 	str.w	ip, [r3, #12]
 801b556:	f8cc 3008 	str.w	r3, [ip, #8]
 801b55a:	f04a 0301 	orr.w	r3, sl, #1
 801b55e:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801b562:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801b566:	6053      	str	r3, [r2, #4]
 801b568:	f844 a000 	str.w	sl, [r4, r0]
 801b56c:	e68f      	b.n	801b28e <_malloc_r+0x62>
 801b56e:	f1ba 0f00 	cmp.w	sl, #0
 801b572:	db11      	blt.n	801b598 <_malloc_r+0x36c>
 801b574:	4420      	add	r0, r4
 801b576:	6843      	ldr	r3, [r0, #4]
 801b578:	f043 0301 	orr.w	r3, r3, #1
 801b57c:	6043      	str	r3, [r0, #4]
 801b57e:	f854 3f08 	ldr.w	r3, [r4, #8]!
 801b582:	4628      	mov	r0, r5
 801b584:	f8c3 c00c 	str.w	ip, [r3, #12]
 801b588:	f8cc 3008 	str.w	r3, [ip, #8]
 801b58c:	f000 f88e 	bl	801b6ac <__malloc_unlock>
 801b590:	4620      	mov	r0, r4
 801b592:	b003      	add	sp, #12
 801b594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b598:	4664      	mov	r4, ip
 801b59a:	e70f      	b.n	801b3bc <_malloc_r+0x190>
 801b59c:	f858 0908 	ldr.w	r0, [r8], #-8
 801b5a0:	4540      	cmp	r0, r8
 801b5a2:	f103 33ff 	add.w	r3, r3, #4294967295
 801b5a6:	f43f af13 	beq.w	801b3d0 <_malloc_r+0x1a4>
 801b5aa:	e718      	b.n	801b3de <_malloc_r+0x1b2>
 801b5ac:	3304      	adds	r3, #4
 801b5ae:	0052      	lsls	r2, r2, #1
 801b5b0:	4210      	tst	r0, r2
 801b5b2:	d0fb      	beq.n	801b5ac <_malloc_r+0x380>
 801b5b4:	e6fc      	b.n	801b3b0 <_malloc_r+0x184>
 801b5b6:	4673      	mov	r3, lr
 801b5b8:	e7fa      	b.n	801b5b0 <_malloc_r+0x384>
 801b5ba:	6810      	ldr	r0, [r2, #0]
 801b5bc:	3001      	adds	r0, #1
 801b5be:	bf1b      	ittet	ne
 801b5c0:	eba4 0b0b 	subne.w	fp, r4, fp
 801b5c4:	eb0b 020e 	addne.w	r2, fp, lr
 801b5c8:	6014      	streq	r4, [r2, #0]
 801b5ca:	601a      	strne	r2, [r3, #0]
 801b5cc:	f014 0b07 	ands.w	fp, r4, #7
 801b5d0:	bf1a      	itte	ne
 801b5d2:	f1cb 0008 	rsbne	r0, fp, #8
 801b5d6:	1824      	addne	r4, r4, r0
 801b5d8:	4658      	moveq	r0, fp
 801b5da:	1862      	adds	r2, r4, r1
 801b5dc:	ea02 010c 	and.w	r1, r2, ip
 801b5e0:	4480      	add	r8, r0
 801b5e2:	eba8 0801 	sub.w	r8, r8, r1
 801b5e6:	ea08 080c 	and.w	r8, r8, ip
 801b5ea:	4641      	mov	r1, r8
 801b5ec:	4628      	mov	r0, r5
 801b5ee:	9201      	str	r2, [sp, #4]
 801b5f0:	f001 fb60 	bl	801ccb4 <_sbrk_r>
 801b5f4:	1c43      	adds	r3, r0, #1
 801b5f6:	9a01      	ldr	r2, [sp, #4]
 801b5f8:	4b28      	ldr	r3, [pc, #160]	@ (801b69c <_malloc_r+0x470>)
 801b5fa:	d107      	bne.n	801b60c <_malloc_r+0x3e0>
 801b5fc:	f1bb 0f00 	cmp.w	fp, #0
 801b600:	d023      	beq.n	801b64a <_malloc_r+0x41e>
 801b602:	f1ab 0008 	sub.w	r0, fp, #8
 801b606:	4410      	add	r0, r2
 801b608:	f04f 0800 	mov.w	r8, #0
 801b60c:	681a      	ldr	r2, [r3, #0]
 801b60e:	60b4      	str	r4, [r6, #8]
 801b610:	1b00      	subs	r0, r0, r4
 801b612:	4440      	add	r0, r8
 801b614:	4442      	add	r2, r8
 801b616:	f040 0001 	orr.w	r0, r0, #1
 801b61a:	45b2      	cmp	sl, r6
 801b61c:	601a      	str	r2, [r3, #0]
 801b61e:	6060      	str	r0, [r4, #4]
 801b620:	f43f af29 	beq.w	801b476 <_malloc_r+0x24a>
 801b624:	f1b9 0f0f 	cmp.w	r9, #15
 801b628:	d812      	bhi.n	801b650 <_malloc_r+0x424>
 801b62a:	2301      	movs	r3, #1
 801b62c:	6063      	str	r3, [r4, #4]
 801b62e:	68b3      	ldr	r3, [r6, #8]
 801b630:	685b      	ldr	r3, [r3, #4]
 801b632:	f023 0303 	bic.w	r3, r3, #3
 801b636:	42bb      	cmp	r3, r7
 801b638:	eba3 0207 	sub.w	r2, r3, r7
 801b63c:	d301      	bcc.n	801b642 <_malloc_r+0x416>
 801b63e:	2a0f      	cmp	r2, #15
 801b640:	dc22      	bgt.n	801b688 <_malloc_r+0x45c>
 801b642:	4628      	mov	r0, r5
 801b644:	f000 f832 	bl	801b6ac <__malloc_unlock>
 801b648:	e5fc      	b.n	801b244 <_malloc_r+0x18>
 801b64a:	4610      	mov	r0, r2
 801b64c:	46d8      	mov	r8, fp
 801b64e:	e7dd      	b.n	801b60c <_malloc_r+0x3e0>
 801b650:	f8da 2004 	ldr.w	r2, [sl, #4]
 801b654:	f1a9 090c 	sub.w	r9, r9, #12
 801b658:	f029 0907 	bic.w	r9, r9, #7
 801b65c:	f002 0201 	and.w	r2, r2, #1
 801b660:	ea42 0209 	orr.w	r2, r2, r9
 801b664:	f8ca 2004 	str.w	r2, [sl, #4]
 801b668:	2105      	movs	r1, #5
 801b66a:	eb0a 0209 	add.w	r2, sl, r9
 801b66e:	f1b9 0f0f 	cmp.w	r9, #15
 801b672:	e9c2 1101 	strd	r1, r1, [r2, #4]
 801b676:	f67f aefe 	bls.w	801b476 <_malloc_r+0x24a>
 801b67a:	f10a 0108 	add.w	r1, sl, #8
 801b67e:	4628      	mov	r0, r5
 801b680:	f7ff fd14 	bl	801b0ac <_free_r>
 801b684:	4b05      	ldr	r3, [pc, #20]	@ (801b69c <_malloc_r+0x470>)
 801b686:	e6f6      	b.n	801b476 <_malloc_r+0x24a>
 801b688:	68b4      	ldr	r4, [r6, #8]
 801b68a:	f047 0301 	orr.w	r3, r7, #1
 801b68e:	4427      	add	r7, r4
 801b690:	f042 0201 	orr.w	r2, r2, #1
 801b694:	6063      	str	r3, [r4, #4]
 801b696:	60b7      	str	r7, [r6, #8]
 801b698:	607a      	str	r2, [r7, #4]
 801b69a:	e5f8      	b.n	801b28e <_malloc_r+0x62>
 801b69c:	2000d0c0 	.word	0x2000d0c0

0801b6a0 <__malloc_lock>:
 801b6a0:	4801      	ldr	r0, [pc, #4]	@ (801b6a8 <__malloc_lock+0x8>)
 801b6a2:	f7ff bc8d 	b.w	801afc0 <__retarget_lock_acquire_recursive>
 801b6a6:	bf00      	nop
 801b6a8:	2000d0b8 	.word	0x2000d0b8

0801b6ac <__malloc_unlock>:
 801b6ac:	4801      	ldr	r0, [pc, #4]	@ (801b6b4 <__malloc_unlock+0x8>)
 801b6ae:	f7ff bc88 	b.w	801afc2 <__retarget_lock_release_recursive>
 801b6b2:	bf00      	nop
 801b6b4:	2000d0b8 	.word	0x2000d0b8

0801b6b8 <_svfprintf_r>:
 801b6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6bc:	b0d3      	sub	sp, #332	@ 0x14c
 801b6be:	468b      	mov	fp, r1
 801b6c0:	4691      	mov	r9, r2
 801b6c2:	461e      	mov	r6, r3
 801b6c4:	9003      	str	r0, [sp, #12]
 801b6c6:	f001 faf1 	bl	801ccac <_localeconv_r>
 801b6ca:	6803      	ldr	r3, [r0, #0]
 801b6cc:	9316      	str	r3, [sp, #88]	@ 0x58
 801b6ce:	4618      	mov	r0, r3
 801b6d0:	f7e4 fd7e 	bl	80001d0 <strlen>
 801b6d4:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801b6d8:	900d      	str	r0, [sp, #52]	@ 0x34
 801b6da:	061b      	lsls	r3, r3, #24
 801b6dc:	d515      	bpl.n	801b70a <_svfprintf_r+0x52>
 801b6de:	f8db 3010 	ldr.w	r3, [fp, #16]
 801b6e2:	b993      	cbnz	r3, 801b70a <_svfprintf_r+0x52>
 801b6e4:	9803      	ldr	r0, [sp, #12]
 801b6e6:	2140      	movs	r1, #64	@ 0x40
 801b6e8:	f7ff fda0 	bl	801b22c <_malloc_r>
 801b6ec:	f8cb 0000 	str.w	r0, [fp]
 801b6f0:	f8cb 0010 	str.w	r0, [fp, #16]
 801b6f4:	b930      	cbnz	r0, 801b704 <_svfprintf_r+0x4c>
 801b6f6:	9a03      	ldr	r2, [sp, #12]
 801b6f8:	230c      	movs	r3, #12
 801b6fa:	6013      	str	r3, [r2, #0]
 801b6fc:	f04f 33ff 	mov.w	r3, #4294967295
 801b700:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b702:	e1f7      	b.n	801baf4 <_svfprintf_r+0x43c>
 801b704:	2340      	movs	r3, #64	@ 0x40
 801b706:	f8cb 3014 	str.w	r3, [fp, #20]
 801b70a:	ed9f 7b93 	vldr	d7, [pc, #588]	@ 801b958 <_svfprintf_r+0x2a0>
 801b70e:	2300      	movs	r3, #0
 801b710:	e9cd 3327 	strd	r3, r3, [sp, #156]	@ 0x9c
 801b714:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801b718:	e9cd 3318 	strd	r3, r3, [sp, #96]	@ 0x60
 801b71c:	ac29      	add	r4, sp, #164	@ 0xa4
 801b71e:	9426      	str	r4, [sp, #152]	@ 0x98
 801b720:	9304      	str	r3, [sp, #16]
 801b722:	9309      	str	r3, [sp, #36]	@ 0x24
 801b724:	9312      	str	r3, [sp, #72]	@ 0x48
 801b726:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b728:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b72a:	464b      	mov	r3, r9
 801b72c:	461d      	mov	r5, r3
 801b72e:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b732:	b10a      	cbz	r2, 801b738 <_svfprintf_r+0x80>
 801b734:	2a25      	cmp	r2, #37	@ 0x25
 801b736:	d1f9      	bne.n	801b72c <_svfprintf_r+0x74>
 801b738:	ebb5 0709 	subs.w	r7, r5, r9
 801b73c:	d00d      	beq.n	801b75a <_svfprintf_r+0xa2>
 801b73e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b740:	443b      	add	r3, r7
 801b742:	9328      	str	r3, [sp, #160]	@ 0xa0
 801b744:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b746:	3301      	adds	r3, #1
 801b748:	2b07      	cmp	r3, #7
 801b74a:	e9c4 9700 	strd	r9, r7, [r4]
 801b74e:	9327      	str	r3, [sp, #156]	@ 0x9c
 801b750:	dc75      	bgt.n	801b83e <_svfprintf_r+0x186>
 801b752:	3408      	adds	r4, #8
 801b754:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b756:	443b      	add	r3, r7
 801b758:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b75a:	782b      	ldrb	r3, [r5, #0]
 801b75c:	2b00      	cmp	r3, #0
 801b75e:	f001 8148 	beq.w	801c9f2 <_svfprintf_r+0x133a>
 801b762:	2200      	movs	r2, #0
 801b764:	1c6b      	adds	r3, r5, #1
 801b766:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801b76a:	f04f 38ff 	mov.w	r8, #4294967295
 801b76e:	920e      	str	r2, [sp, #56]	@ 0x38
 801b770:	4615      	mov	r5, r2
 801b772:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b776:	9206      	str	r2, [sp, #24]
 801b778:	930c      	str	r3, [sp, #48]	@ 0x30
 801b77a:	9b06      	ldr	r3, [sp, #24]
 801b77c:	3b20      	subs	r3, #32
 801b77e:	2b5a      	cmp	r3, #90	@ 0x5a
 801b780:	f200 85a4 	bhi.w	801c2cc <_svfprintf_r+0xc14>
 801b784:	e8df f013 	tbh	[pc, r3, lsl #1]
 801b788:	05a2009d 	.word	0x05a2009d
 801b78c:	00a505a2 	.word	0x00a505a2
 801b790:	05a205a2 	.word	0x05a205a2
 801b794:	008505a2 	.word	0x008505a2
 801b798:	05a205a2 	.word	0x05a205a2
 801b79c:	00b200a8 	.word	0x00b200a8
 801b7a0:	00af05a2 	.word	0x00af05a2
 801b7a4:	05a200b4 	.word	0x05a200b4
 801b7a8:	00d100ce 	.word	0x00d100ce
 801b7ac:	00d100d1 	.word	0x00d100d1
 801b7b0:	00d100d1 	.word	0x00d100d1
 801b7b4:	00d100d1 	.word	0x00d100d1
 801b7b8:	00d100d1 	.word	0x00d100d1
 801b7bc:	05a205a2 	.word	0x05a205a2
 801b7c0:	05a205a2 	.word	0x05a205a2
 801b7c4:	05a205a2 	.word	0x05a205a2
 801b7c8:	014705a2 	.word	0x014705a2
 801b7cc:	010805a2 	.word	0x010805a2
 801b7d0:	0147011b 	.word	0x0147011b
 801b7d4:	01470147 	.word	0x01470147
 801b7d8:	05a205a2 	.word	0x05a205a2
 801b7dc:	05a205a2 	.word	0x05a205a2
 801b7e0:	05a200e2 	.word	0x05a200e2
 801b7e4:	049d05a2 	.word	0x049d05a2
 801b7e8:	05a205a2 	.word	0x05a205a2
 801b7ec:	04e705a2 	.word	0x04e705a2
 801b7f0:	050805a2 	.word	0x050805a2
 801b7f4:	05a205a2 	.word	0x05a205a2
 801b7f8:	05a2052a 	.word	0x05a2052a
 801b7fc:	05a205a2 	.word	0x05a205a2
 801b800:	05a205a2 	.word	0x05a205a2
 801b804:	05a205a2 	.word	0x05a205a2
 801b808:	014705a2 	.word	0x014705a2
 801b80c:	010805a2 	.word	0x010805a2
 801b810:	0147011d 	.word	0x0147011d
 801b814:	01470147 	.word	0x01470147
 801b818:	011d00ee 	.word	0x011d00ee
 801b81c:	05a20102 	.word	0x05a20102
 801b820:	05a200fb 	.word	0x05a200fb
 801b824:	049f047e 	.word	0x049f047e
 801b828:	010204d6 	.word	0x010204d6
 801b82c:	04e705a2 	.word	0x04e705a2
 801b830:	050a009b 	.word	0x050a009b
 801b834:	05a205a2 	.word	0x05a205a2
 801b838:	05a20065 	.word	0x05a20065
 801b83c:	009b      	.short	0x009b
 801b83e:	9803      	ldr	r0, [sp, #12]
 801b840:	aa26      	add	r2, sp, #152	@ 0x98
 801b842:	4659      	mov	r1, fp
 801b844:	f002 fe0b 	bl	801e45e <__ssprint_r>
 801b848:	2800      	cmp	r0, #0
 801b84a:	f040 814e 	bne.w	801baea <_svfprintf_r+0x432>
 801b84e:	ac29      	add	r4, sp, #164	@ 0xa4
 801b850:	e780      	b.n	801b754 <_svfprintf_r+0x9c>
 801b852:	4b43      	ldr	r3, [pc, #268]	@ (801b960 <_svfprintf_r+0x2a8>)
 801b854:	9319      	str	r3, [sp, #100]	@ 0x64
 801b856:	f015 0320 	ands.w	r3, r5, #32
 801b85a:	f000 84c2 	beq.w	801c1e2 <_svfprintf_r+0xb2a>
 801b85e:	3607      	adds	r6, #7
 801b860:	f026 0307 	bic.w	r3, r6, #7
 801b864:	461a      	mov	r2, r3
 801b866:	685f      	ldr	r7, [r3, #4]
 801b868:	f852 6b08 	ldr.w	r6, [r2], #8
 801b86c:	9207      	str	r2, [sp, #28]
 801b86e:	07eb      	lsls	r3, r5, #31
 801b870:	d50a      	bpl.n	801b888 <_svfprintf_r+0x1d0>
 801b872:	ea56 0307 	orrs.w	r3, r6, r7
 801b876:	d007      	beq.n	801b888 <_svfprintf_r+0x1d0>
 801b878:	2330      	movs	r3, #48	@ 0x30
 801b87a:	f88d 307c 	strb.w	r3, [sp, #124]	@ 0x7c
 801b87e:	9b06      	ldr	r3, [sp, #24]
 801b880:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801b884:	f045 0502 	orr.w	r5, r5, #2
 801b888:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801b88c:	2302      	movs	r3, #2
 801b88e:	f000 bc28 	b.w	801c0e2 <_svfprintf_r+0xa2a>
 801b892:	9803      	ldr	r0, [sp, #12]
 801b894:	f001 fa0a 	bl	801ccac <_localeconv_r>
 801b898:	6843      	ldr	r3, [r0, #4]
 801b89a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b89c:	4618      	mov	r0, r3
 801b89e:	f7e4 fc97 	bl	80001d0 <strlen>
 801b8a2:	9012      	str	r0, [sp, #72]	@ 0x48
 801b8a4:	9803      	ldr	r0, [sp, #12]
 801b8a6:	f001 fa01 	bl	801ccac <_localeconv_r>
 801b8aa:	6883      	ldr	r3, [r0, #8]
 801b8ac:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8ae:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b8b0:	b12b      	cbz	r3, 801b8be <_svfprintf_r+0x206>
 801b8b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b8b4:	b11b      	cbz	r3, 801b8be <_svfprintf_r+0x206>
 801b8b6:	781b      	ldrb	r3, [r3, #0]
 801b8b8:	b10b      	cbz	r3, 801b8be <_svfprintf_r+0x206>
 801b8ba:	f445 6580 	orr.w	r5, r5, #1024	@ 0x400
 801b8be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b8c0:	e757      	b.n	801b772 <_svfprintf_r+0xba>
 801b8c2:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801b8c6:	2b00      	cmp	r3, #0
 801b8c8:	d1f9      	bne.n	801b8be <_svfprintf_r+0x206>
 801b8ca:	2320      	movs	r3, #32
 801b8cc:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b8d0:	e7f5      	b.n	801b8be <_svfprintf_r+0x206>
 801b8d2:	f045 0501 	orr.w	r5, r5, #1
 801b8d6:	e7f2      	b.n	801b8be <_svfprintf_r+0x206>
 801b8d8:	f856 3b04 	ldr.w	r3, [r6], #4
 801b8dc:	930e      	str	r3, [sp, #56]	@ 0x38
 801b8de:	2b00      	cmp	r3, #0
 801b8e0:	daed      	bge.n	801b8be <_svfprintf_r+0x206>
 801b8e2:	425b      	negs	r3, r3
 801b8e4:	930e      	str	r3, [sp, #56]	@ 0x38
 801b8e6:	f045 0504 	orr.w	r5, r5, #4
 801b8ea:	e7e8      	b.n	801b8be <_svfprintf_r+0x206>
 801b8ec:	232b      	movs	r3, #43	@ 0x2b
 801b8ee:	e7ed      	b.n	801b8cc <_svfprintf_r+0x214>
 801b8f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b8f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b8f6:	9206      	str	r2, [sp, #24]
 801b8f8:	2a2a      	cmp	r2, #42	@ 0x2a
 801b8fa:	d10f      	bne.n	801b91c <_svfprintf_r+0x264>
 801b8fc:	f856 2b04 	ldr.w	r2, [r6], #4
 801b900:	930c      	str	r3, [sp, #48]	@ 0x30
 801b902:	ea42 78e2 	orr.w	r8, r2, r2, asr #31
 801b906:	e7da      	b.n	801b8be <_svfprintf_r+0x206>
 801b908:	fb01 2808 	mla	r8, r1, r8, r2
 801b90c:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b910:	9206      	str	r2, [sp, #24]
 801b912:	9a06      	ldr	r2, [sp, #24]
 801b914:	3a30      	subs	r2, #48	@ 0x30
 801b916:	2a09      	cmp	r2, #9
 801b918:	d9f6      	bls.n	801b908 <_svfprintf_r+0x250>
 801b91a:	e72d      	b.n	801b778 <_svfprintf_r+0xc0>
 801b91c:	f04f 0800 	mov.w	r8, #0
 801b920:	210a      	movs	r1, #10
 801b922:	e7f6      	b.n	801b912 <_svfprintf_r+0x25a>
 801b924:	f045 0580 	orr.w	r5, r5, #128	@ 0x80
 801b928:	e7c9      	b.n	801b8be <_svfprintf_r+0x206>
 801b92a:	2200      	movs	r2, #0
 801b92c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b92e:	920e      	str	r2, [sp, #56]	@ 0x38
 801b930:	210a      	movs	r1, #10
 801b932:	9a06      	ldr	r2, [sp, #24]
 801b934:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801b936:	3a30      	subs	r2, #48	@ 0x30
 801b938:	fb01 2200 	mla	r2, r1, r0, r2
 801b93c:	920e      	str	r2, [sp, #56]	@ 0x38
 801b93e:	f813 2b01 	ldrb.w	r2, [r3], #1
 801b942:	9206      	str	r2, [sp, #24]
 801b944:	3a30      	subs	r2, #48	@ 0x30
 801b946:	2a09      	cmp	r2, #9
 801b948:	d9f3      	bls.n	801b932 <_svfprintf_r+0x27a>
 801b94a:	e715      	b.n	801b778 <_svfprintf_r+0xc0>
 801b94c:	f045 0508 	orr.w	r5, r5, #8
 801b950:	e7b5      	b.n	801b8be <_svfprintf_r+0x206>
 801b952:	bf00      	nop
 801b954:	f3af 8000 	nop.w
	...
 801b960:	08021644 	.word	0x08021644
 801b964:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b966:	781b      	ldrb	r3, [r3, #0]
 801b968:	2b68      	cmp	r3, #104	@ 0x68
 801b96a:	bf01      	itttt	eq
 801b96c:	9b0c      	ldreq	r3, [sp, #48]	@ 0x30
 801b96e:	3301      	addeq	r3, #1
 801b970:	930c      	streq	r3, [sp, #48]	@ 0x30
 801b972:	f445 7500 	orreq.w	r5, r5, #512	@ 0x200
 801b976:	bf18      	it	ne
 801b978:	f045 0540 	orrne.w	r5, r5, #64	@ 0x40
 801b97c:	e79f      	b.n	801b8be <_svfprintf_r+0x206>
 801b97e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b980:	781b      	ldrb	r3, [r3, #0]
 801b982:	2b6c      	cmp	r3, #108	@ 0x6c
 801b984:	d105      	bne.n	801b992 <_svfprintf_r+0x2da>
 801b986:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b988:	3301      	adds	r3, #1
 801b98a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b98c:	f045 0520 	orr.w	r5, r5, #32
 801b990:	e795      	b.n	801b8be <_svfprintf_r+0x206>
 801b992:	f045 0510 	orr.w	r5, r5, #16
 801b996:	e792      	b.n	801b8be <_svfprintf_r+0x206>
 801b998:	4632      	mov	r2, r6
 801b99a:	f852 3b04 	ldr.w	r3, [r2], #4
 801b99e:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801b9a2:	2300      	movs	r3, #0
 801b9a4:	9207      	str	r2, [sp, #28]
 801b9a6:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b9aa:	469a      	mov	sl, r3
 801b9ac:	f04f 0801 	mov.w	r8, #1
 801b9b0:	9310      	str	r3, [sp, #64]	@ 0x40
 801b9b2:	461f      	mov	r7, r3
 801b9b4:	9308      	str	r3, [sp, #32]
 801b9b6:	461e      	mov	r6, r3
 801b9b8:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801b9bc:	e1d2      	b.n	801bd64 <_svfprintf_r+0x6ac>
 801b9be:	f045 0510 	orr.w	r5, r5, #16
 801b9c2:	06af      	lsls	r7, r5, #26
 801b9c4:	d512      	bpl.n	801b9ec <_svfprintf_r+0x334>
 801b9c6:	3607      	adds	r6, #7
 801b9c8:	f026 0307 	bic.w	r3, r6, #7
 801b9cc:	461a      	mov	r2, r3
 801b9ce:	685f      	ldr	r7, [r3, #4]
 801b9d0:	f852 6b08 	ldr.w	r6, [r2], #8
 801b9d4:	9207      	str	r2, [sp, #28]
 801b9d6:	2f00      	cmp	r7, #0
 801b9d8:	da06      	bge.n	801b9e8 <_svfprintf_r+0x330>
 801b9da:	4276      	negs	r6, r6
 801b9dc:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801b9e0:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 801b9e4:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801b9e8:	2301      	movs	r3, #1
 801b9ea:	e37d      	b.n	801c0e8 <_svfprintf_r+0xa30>
 801b9ec:	4633      	mov	r3, r6
 801b9ee:	06ee      	lsls	r6, r5, #27
 801b9f0:	f853 7b04 	ldr.w	r7, [r3], #4
 801b9f4:	9307      	str	r3, [sp, #28]
 801b9f6:	d502      	bpl.n	801b9fe <_svfprintf_r+0x346>
 801b9f8:	463e      	mov	r6, r7
 801b9fa:	17ff      	asrs	r7, r7, #31
 801b9fc:	e7eb      	b.n	801b9d6 <_svfprintf_r+0x31e>
 801b9fe:	0668      	lsls	r0, r5, #25
 801ba00:	d503      	bpl.n	801ba0a <_svfprintf_r+0x352>
 801ba02:	b23e      	sxth	r6, r7
 801ba04:	f347 37c0 	sbfx	r7, r7, #15, #1
 801ba08:	e7e5      	b.n	801b9d6 <_svfprintf_r+0x31e>
 801ba0a:	05a9      	lsls	r1, r5, #22
 801ba0c:	d5f4      	bpl.n	801b9f8 <_svfprintf_r+0x340>
 801ba0e:	b27e      	sxtb	r6, r7
 801ba10:	f347 17c0 	sbfx	r7, r7, #7, #1
 801ba14:	e7df      	b.n	801b9d6 <_svfprintf_r+0x31e>
 801ba16:	3607      	adds	r6, #7
 801ba18:	f026 0307 	bic.w	r3, r6, #7
 801ba1c:	ecb3 7b02 	vldmia	r3!, {d7}
 801ba20:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801ba24:	9307      	str	r3, [sp, #28]
 801ba26:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ba28:	931a      	str	r3, [sp, #104]	@ 0x68
 801ba2a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ba2c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801ba30:	931b      	str	r3, [sp, #108]	@ 0x6c
 801ba32:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801ba36:	4b81      	ldr	r3, [pc, #516]	@ (801bc3c <_svfprintf_r+0x584>)
 801ba38:	f04f 32ff 	mov.w	r2, #4294967295
 801ba3c:	f7e5 f876 	bl	8000b2c <__aeabi_dcmpun>
 801ba40:	bb10      	cbnz	r0, 801ba88 <_svfprintf_r+0x3d0>
 801ba42:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801ba46:	4b7d      	ldr	r3, [pc, #500]	@ (801bc3c <_svfprintf_r+0x584>)
 801ba48:	f04f 32ff 	mov.w	r2, #4294967295
 801ba4c:	f7e5 f850 	bl	8000af0 <__aeabi_dcmple>
 801ba50:	b9d0      	cbnz	r0, 801ba88 <_svfprintf_r+0x3d0>
 801ba52:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801ba56:	2200      	movs	r2, #0
 801ba58:	2300      	movs	r3, #0
 801ba5a:	f7e5 f83f 	bl	8000adc <__aeabi_dcmplt>
 801ba5e:	b110      	cbz	r0, 801ba66 <_svfprintf_r+0x3ae>
 801ba60:	232d      	movs	r3, #45	@ 0x2d
 801ba62:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801ba66:	4a76      	ldr	r2, [pc, #472]	@ (801bc40 <_svfprintf_r+0x588>)
 801ba68:	4b76      	ldr	r3, [pc, #472]	@ (801bc44 <_svfprintf_r+0x58c>)
 801ba6a:	9906      	ldr	r1, [sp, #24]
 801ba6c:	f025 0580 	bic.w	r5, r5, #128	@ 0x80
 801ba70:	2947      	cmp	r1, #71	@ 0x47
 801ba72:	bfd4      	ite	le
 801ba74:	4691      	movle	r9, r2
 801ba76:	4699      	movgt	r9, r3
 801ba78:	f04f 0a00 	mov.w	sl, #0
 801ba7c:	f04f 0803 	mov.w	r8, #3
 801ba80:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 801ba84:	f000 bfec 	b.w	801ca60 <_svfprintf_r+0x13a8>
 801ba88:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801ba8c:	4610      	mov	r0, r2
 801ba8e:	4619      	mov	r1, r3
 801ba90:	f7e5 f84c 	bl	8000b2c <__aeabi_dcmpun>
 801ba94:	4682      	mov	sl, r0
 801ba96:	b140      	cbz	r0, 801baaa <_svfprintf_r+0x3f2>
 801ba98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ba9a:	4a6b      	ldr	r2, [pc, #428]	@ (801bc48 <_svfprintf_r+0x590>)
 801ba9c:	2b00      	cmp	r3, #0
 801ba9e:	bfbc      	itt	lt
 801baa0:	232d      	movlt	r3, #45	@ 0x2d
 801baa2:	f88d 307b 	strblt.w	r3, [sp, #123]	@ 0x7b
 801baa6:	4b69      	ldr	r3, [pc, #420]	@ (801bc4c <_svfprintf_r+0x594>)
 801baa8:	e7df      	b.n	801ba6a <_svfprintf_r+0x3b2>
 801baaa:	9b06      	ldr	r3, [sp, #24]
 801baac:	2b61      	cmp	r3, #97	@ 0x61
 801baae:	d025      	beq.n	801bafc <_svfprintf_r+0x444>
 801bab0:	2b41      	cmp	r3, #65	@ 0x41
 801bab2:	d125      	bne.n	801bb00 <_svfprintf_r+0x448>
 801bab4:	2358      	movs	r3, #88	@ 0x58
 801bab6:	2230      	movs	r2, #48	@ 0x30
 801bab8:	f1b8 0f63 	cmp.w	r8, #99	@ 0x63
 801babc:	f88d 207c 	strb.w	r2, [sp, #124]	@ 0x7c
 801bac0:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801bac4:	f045 0502 	orr.w	r5, r5, #2
 801bac8:	f340 80a5 	ble.w	801bc16 <_svfprintf_r+0x55e>
 801bacc:	9803      	ldr	r0, [sp, #12]
 801bace:	f108 0101 	add.w	r1, r8, #1
 801bad2:	f7ff fbab 	bl	801b22c <_malloc_r>
 801bad6:	4681      	mov	r9, r0
 801bad8:	2800      	cmp	r0, #0
 801bada:	f040 80a1 	bne.w	801bc20 <_svfprintf_r+0x568>
 801bade:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801bae2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801bae6:	f8ab 300c 	strh.w	r3, [fp, #12]
 801baea:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801baee:	065b      	lsls	r3, r3, #25
 801baf0:	f53f ae04 	bmi.w	801b6fc <_svfprintf_r+0x44>
 801baf4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801baf6:	b053      	add	sp, #332	@ 0x14c
 801baf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bafc:	2378      	movs	r3, #120	@ 0x78
 801bafe:	e7da      	b.n	801bab6 <_svfprintf_r+0x3fe>
 801bb00:	f1b8 3fff 	cmp.w	r8, #4294967295
 801bb04:	f000 808e 	beq.w	801bc24 <_svfprintf_r+0x56c>
 801bb08:	9b06      	ldr	r3, [sp, #24]
 801bb0a:	f023 0320 	bic.w	r3, r3, #32
 801bb0e:	2b47      	cmp	r3, #71	@ 0x47
 801bb10:	d105      	bne.n	801bb1e <_svfprintf_r+0x466>
 801bb12:	f1b8 0f00 	cmp.w	r8, #0
 801bb16:	d102      	bne.n	801bb1e <_svfprintf_r+0x466>
 801bb18:	46c2      	mov	sl, r8
 801bb1a:	f04f 0801 	mov.w	r8, #1
 801bb1e:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801bb22:	9311      	str	r3, [sp, #68]	@ 0x44
 801bb24:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb26:	2b00      	cmp	r3, #0
 801bb28:	da7f      	bge.n	801bc2a <_svfprintf_r+0x572>
 801bb2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb2c:	9314      	str	r3, [sp, #80]	@ 0x50
 801bb2e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb30:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801bb34:	9315      	str	r3, [sp, #84]	@ 0x54
 801bb36:	232d      	movs	r3, #45	@ 0x2d
 801bb38:	931c      	str	r3, [sp, #112]	@ 0x70
 801bb3a:	9b06      	ldr	r3, [sp, #24]
 801bb3c:	f023 0320 	bic.w	r3, r3, #32
 801bb40:	2b41      	cmp	r3, #65	@ 0x41
 801bb42:	9308      	str	r3, [sp, #32]
 801bb44:	f040 81e6 	bne.w	801bf14 <_svfprintf_r+0x85c>
 801bb48:	a820      	add	r0, sp, #128	@ 0x80
 801bb4a:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801bb4e:	f001 f8e1 	bl	801cd14 <frexp>
 801bb52:	2200      	movs	r2, #0
 801bb54:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 801bb58:	ec51 0b10 	vmov	r0, r1, d0
 801bb5c:	f7e4 fd4c 	bl	80005f8 <__aeabi_dmul>
 801bb60:	4602      	mov	r2, r0
 801bb62:	460b      	mov	r3, r1
 801bb64:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bb68:	2200      	movs	r2, #0
 801bb6a:	2300      	movs	r3, #0
 801bb6c:	f7e4 ffac 	bl	8000ac8 <__aeabi_dcmpeq>
 801bb70:	b108      	cbz	r0, 801bb76 <_svfprintf_r+0x4be>
 801bb72:	2301      	movs	r3, #1
 801bb74:	9320      	str	r3, [sp, #128]	@ 0x80
 801bb76:	4a36      	ldr	r2, [pc, #216]	@ (801bc50 <_svfprintf_r+0x598>)
 801bb78:	4b36      	ldr	r3, [pc, #216]	@ (801bc54 <_svfprintf_r+0x59c>)
 801bb7a:	9906      	ldr	r1, [sp, #24]
 801bb7c:	2961      	cmp	r1, #97	@ 0x61
 801bb7e:	bf18      	it	ne
 801bb80:	461a      	movne	r2, r3
 801bb82:	9210      	str	r2, [sp, #64]	@ 0x40
 801bb84:	f108 37ff 	add.w	r7, r8, #4294967295
 801bb88:	464e      	mov	r6, r9
 801bb8a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bb8e:	4b32      	ldr	r3, [pc, #200]	@ (801bc58 <_svfprintf_r+0x5a0>)
 801bb90:	2200      	movs	r2, #0
 801bb92:	f7e4 fd31 	bl	80005f8 <__aeabi_dmul>
 801bb96:	4602      	mov	r2, r0
 801bb98:	460b      	mov	r3, r1
 801bb9a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bb9e:	f7e4 ffdb 	bl	8000b58 <__aeabi_d2iz>
 801bba2:	9013      	str	r0, [sp, #76]	@ 0x4c
 801bba4:	f7e4 fcbe 	bl	8000524 <__aeabi_i2d>
 801bba8:	4602      	mov	r2, r0
 801bbaa:	460b      	mov	r3, r1
 801bbac:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bbb0:	f7e4 fb6a 	bl	8000288 <__aeabi_dsub>
 801bbb4:	4602      	mov	r2, r0
 801bbb6:	460b      	mov	r3, r1
 801bbb8:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801bbbc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bbbe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bbc0:	5c9b      	ldrb	r3, [r3, r2]
 801bbc2:	f806 3b01 	strb.w	r3, [r6], #1
 801bbc6:	1c7a      	adds	r2, r7, #1
 801bbc8:	d006      	beq.n	801bbd8 <_svfprintf_r+0x520>
 801bbca:	1e7b      	subs	r3, r7, #1
 801bbcc:	931d      	str	r3, [sp, #116]	@ 0x74
 801bbce:	2200      	movs	r2, #0
 801bbd0:	2300      	movs	r3, #0
 801bbd2:	f7e4 ff79 	bl	8000ac8 <__aeabi_dcmpeq>
 801bbd6:	b370      	cbz	r0, 801bc36 <_svfprintf_r+0x57e>
 801bbd8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bbdc:	4b1f      	ldr	r3, [pc, #124]	@ (801bc5c <_svfprintf_r+0x5a4>)
 801bbde:	2200      	movs	r2, #0
 801bbe0:	f7e4 ff9a 	bl	8000b18 <__aeabi_dcmpgt>
 801bbe4:	2800      	cmp	r0, #0
 801bbe6:	d13b      	bne.n	801bc60 <_svfprintf_r+0x5a8>
 801bbe8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801bbec:	4b1b      	ldr	r3, [pc, #108]	@ (801bc5c <_svfprintf_r+0x5a4>)
 801bbee:	2200      	movs	r2, #0
 801bbf0:	f7e4 ff6a 	bl	8000ac8 <__aeabi_dcmpeq>
 801bbf4:	b110      	cbz	r0, 801bbfc <_svfprintf_r+0x544>
 801bbf6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bbf8:	07db      	lsls	r3, r3, #31
 801bbfa:	d431      	bmi.n	801bc60 <_svfprintf_r+0x5a8>
 801bbfc:	4633      	mov	r3, r6
 801bbfe:	19f1      	adds	r1, r6, r7
 801bc00:	2030      	movs	r0, #48	@ 0x30
 801bc02:	1aca      	subs	r2, r1, r3
 801bc04:	2a00      	cmp	r2, #0
 801bc06:	f280 8182 	bge.w	801bf0e <_svfprintf_r+0x856>
 801bc0a:	1c7b      	adds	r3, r7, #1
 801bc0c:	3701      	adds	r7, #1
 801bc0e:	bfb8      	it	lt
 801bc10:	2300      	movlt	r3, #0
 801bc12:	441e      	add	r6, r3
 801bc14:	e038      	b.n	801bc88 <_svfprintf_r+0x5d0>
 801bc16:	f04f 0a00 	mov.w	sl, #0
 801bc1a:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801bc1e:	e77e      	b.n	801bb1e <_svfprintf_r+0x466>
 801bc20:	4682      	mov	sl, r0
 801bc22:	e77c      	b.n	801bb1e <_svfprintf_r+0x466>
 801bc24:	f04f 0806 	mov.w	r8, #6
 801bc28:	e779      	b.n	801bb1e <_svfprintf_r+0x466>
 801bc2a:	ed9d 7b0a 	vldr	d7, [sp, #40]	@ 0x28
 801bc2e:	2300      	movs	r3, #0
 801bc30:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
 801bc34:	e780      	b.n	801bb38 <_svfprintf_r+0x480>
 801bc36:	9f1d      	ldr	r7, [sp, #116]	@ 0x74
 801bc38:	e7a7      	b.n	801bb8a <_svfprintf_r+0x4d2>
 801bc3a:	bf00      	nop
 801bc3c:	7fefffff 	.word	0x7fefffff
 801bc40:	08021634 	.word	0x08021634
 801bc44:	08021638 	.word	0x08021638
 801bc48:	0802163c 	.word	0x0802163c
 801bc4c:	08021640 	.word	0x08021640
 801bc50:	08021644 	.word	0x08021644
 801bc54:	08021655 	.word	0x08021655
 801bc58:	40300000 	.word	0x40300000
 801bc5c:	3fe00000 	.word	0x3fe00000
 801bc60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bc62:	9624      	str	r6, [sp, #144]	@ 0x90
 801bc64:	7bd9      	ldrb	r1, [r3, #15]
 801bc66:	2030      	movs	r0, #48	@ 0x30
 801bc68:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801bc6a:	1e53      	subs	r3, r2, #1
 801bc6c:	9324      	str	r3, [sp, #144]	@ 0x90
 801bc6e:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 801bc72:	428b      	cmp	r3, r1
 801bc74:	f000 8148 	beq.w	801bf08 <_svfprintf_r+0x850>
 801bc78:	2b39      	cmp	r3, #57	@ 0x39
 801bc7a:	bf0b      	itete	eq
 801bc7c:	9b10      	ldreq	r3, [sp, #64]	@ 0x40
 801bc7e:	3301      	addne	r3, #1
 801bc80:	7a9b      	ldrbeq	r3, [r3, #10]
 801bc82:	b2db      	uxtbne	r3, r3
 801bc84:	f802 3c01 	strb.w	r3, [r2, #-1]
 801bc88:	eba6 0309 	sub.w	r3, r6, r9
 801bc8c:	9304      	str	r3, [sp, #16]
 801bc8e:	9b08      	ldr	r3, [sp, #32]
 801bc90:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801bc92:	2b47      	cmp	r3, #71	@ 0x47
 801bc94:	f040 8187 	bne.w	801bfa6 <_svfprintf_r+0x8ee>
 801bc98:	1cf1      	adds	r1, r6, #3
 801bc9a:	db02      	blt.n	801bca2 <_svfprintf_r+0x5ea>
 801bc9c:	4546      	cmp	r6, r8
 801bc9e:	f340 81a5 	ble.w	801bfec <_svfprintf_r+0x934>
 801bca2:	9b06      	ldr	r3, [sp, #24]
 801bca4:	3b02      	subs	r3, #2
 801bca6:	9306      	str	r3, [sp, #24]
 801bca8:	9906      	ldr	r1, [sp, #24]
 801bcaa:	f89d 2018 	ldrb.w	r2, [sp, #24]
 801bcae:	f021 0120 	bic.w	r1, r1, #32
 801bcb2:	2941      	cmp	r1, #65	@ 0x41
 801bcb4:	bf08      	it	eq
 801bcb6:	320f      	addeq	r2, #15
 801bcb8:	f106 33ff 	add.w	r3, r6, #4294967295
 801bcbc:	bf06      	itte	eq
 801bcbe:	b2d2      	uxtbeq	r2, r2
 801bcc0:	2101      	moveq	r1, #1
 801bcc2:	2100      	movne	r1, #0
 801bcc4:	2b00      	cmp	r3, #0
 801bcc6:	9320      	str	r3, [sp, #128]	@ 0x80
 801bcc8:	bfb8      	it	lt
 801bcca:	f1c6 0301 	rsblt	r3, r6, #1
 801bcce:	f88d 2088 	strb.w	r2, [sp, #136]	@ 0x88
 801bcd2:	bfb4      	ite	lt
 801bcd4:	222d      	movlt	r2, #45	@ 0x2d
 801bcd6:	222b      	movge	r2, #43	@ 0x2b
 801bcd8:	2b09      	cmp	r3, #9
 801bcda:	f88d 2089 	strb.w	r2, [sp, #137]	@ 0x89
 801bcde:	f340 8178 	ble.w	801bfd2 <_svfprintf_r+0x91a>
 801bce2:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801bce6:	270a      	movs	r7, #10
 801bce8:	4602      	mov	r2, r0
 801bcea:	fbb3 f6f7 	udiv	r6, r3, r7
 801bcee:	fb07 3116 	mls	r1, r7, r6, r3
 801bcf2:	3130      	adds	r1, #48	@ 0x30
 801bcf4:	f802 1c01 	strb.w	r1, [r2, #-1]
 801bcf8:	4619      	mov	r1, r3
 801bcfa:	2963      	cmp	r1, #99	@ 0x63
 801bcfc:	f100 30ff 	add.w	r0, r0, #4294967295
 801bd00:	4633      	mov	r3, r6
 801bd02:	dcf1      	bgt.n	801bce8 <_svfprintf_r+0x630>
 801bd04:	3330      	adds	r3, #48	@ 0x30
 801bd06:	1e91      	subs	r1, r2, #2
 801bd08:	f800 3c01 	strb.w	r3, [r0, #-1]
 801bd0c:	f10d 0689 	add.w	r6, sp, #137	@ 0x89
 801bd10:	460b      	mov	r3, r1
 801bd12:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801bd16:	4283      	cmp	r3, r0
 801bd18:	f0c0 8156 	bcc.w	801bfc8 <_svfprintf_r+0x910>
 801bd1c:	f10d 0399 	add.w	r3, sp, #153	@ 0x99
 801bd20:	1a9b      	subs	r3, r3, r2
 801bd22:	4281      	cmp	r1, r0
 801bd24:	bf88      	it	hi
 801bd26:	2300      	movhi	r3, #0
 801bd28:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801bd2c:	441a      	add	r2, r3
 801bd2e:	ab22      	add	r3, sp, #136	@ 0x88
 801bd30:	1ad3      	subs	r3, r2, r3
 801bd32:	9a04      	ldr	r2, [sp, #16]
 801bd34:	9318      	str	r3, [sp, #96]	@ 0x60
 801bd36:	2a01      	cmp	r2, #1
 801bd38:	eb03 0802 	add.w	r8, r3, r2
 801bd3c:	dc01      	bgt.n	801bd42 <_svfprintf_r+0x68a>
 801bd3e:	07ea      	lsls	r2, r5, #31
 801bd40:	d501      	bpl.n	801bd46 <_svfprintf_r+0x68e>
 801bd42:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bd44:	4498      	add	r8, r3
 801bd46:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801bd4a:	2700      	movs	r7, #0
 801bd4c:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801bd50:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd52:	9708      	str	r7, [sp, #32]
 801bd54:	463e      	mov	r6, r7
 801bd56:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801bd58:	2b00      	cmp	r3, #0
 801bd5a:	f040 818f 	bne.w	801c07c <_svfprintf_r+0x9c4>
 801bd5e:	2300      	movs	r3, #0
 801bd60:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801bd62:	9310      	str	r3, [sp, #64]	@ 0x40
 801bd64:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bd66:	4543      	cmp	r3, r8
 801bd68:	bfb8      	it	lt
 801bd6a:	4643      	movlt	r3, r8
 801bd6c:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd6e:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801bd72:	b113      	cbz	r3, 801bd7a <_svfprintf_r+0x6c2>
 801bd74:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bd76:	3301      	adds	r3, #1
 801bd78:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd7a:	f015 0302 	ands.w	r3, r5, #2
 801bd7e:	931c      	str	r3, [sp, #112]	@ 0x70
 801bd80:	bf1e      	ittt	ne
 801bd82:	9b11      	ldrne	r3, [sp, #68]	@ 0x44
 801bd84:	3302      	addne	r3, #2
 801bd86:	9311      	strne	r3, [sp, #68]	@ 0x44
 801bd88:	f015 0384 	ands.w	r3, r5, #132	@ 0x84
 801bd8c:	931d      	str	r3, [sp, #116]	@ 0x74
 801bd8e:	d122      	bne.n	801bdd6 <_svfprintf_r+0x71e>
 801bd90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bd92:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bd94:	1a9b      	subs	r3, r3, r2
 801bd96:	2b00      	cmp	r3, #0
 801bd98:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bd9a:	dd1c      	ble.n	801bdd6 <_svfprintf_r+0x71e>
 801bd9c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bd9e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801bda2:	2810      	cmp	r0, #16
 801bda4:	489e      	ldr	r0, [pc, #632]	@ (801c020 <_svfprintf_r+0x968>)
 801bda6:	6020      	str	r0, [r4, #0]
 801bda8:	f102 0201 	add.w	r2, r2, #1
 801bdac:	f104 0108 	add.w	r1, r4, #8
 801bdb0:	f300 8298 	bgt.w	801c2e4 <_svfprintf_r+0xc2c>
 801bdb4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bdb6:	6060      	str	r0, [r4, #4]
 801bdb8:	4403      	add	r3, r0
 801bdba:	2a07      	cmp	r2, #7
 801bdbc:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801bdc0:	f340 82a5 	ble.w	801c30e <_svfprintf_r+0xc56>
 801bdc4:	9803      	ldr	r0, [sp, #12]
 801bdc6:	aa26      	add	r2, sp, #152	@ 0x98
 801bdc8:	4659      	mov	r1, fp
 801bdca:	f002 fb48 	bl	801e45e <__ssprint_r>
 801bdce:	2800      	cmp	r0, #0
 801bdd0:	f040 85ed 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801bdd4:	ac29      	add	r4, sp, #164	@ 0xa4
 801bdd6:	f89d 207b 	ldrb.w	r2, [sp, #123]	@ 0x7b
 801bdda:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bddc:	b16a      	cbz	r2, 801bdfa <_svfprintf_r+0x742>
 801bdde:	f10d 027b 	add.w	r2, sp, #123	@ 0x7b
 801bde2:	6022      	str	r2, [r4, #0]
 801bde4:	2201      	movs	r2, #1
 801bde6:	4413      	add	r3, r2
 801bde8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bdea:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bdec:	6062      	str	r2, [r4, #4]
 801bdee:	4413      	add	r3, r2
 801bdf0:	2b07      	cmp	r3, #7
 801bdf2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bdf4:	f300 828d 	bgt.w	801c312 <_svfprintf_r+0xc5a>
 801bdf8:	3408      	adds	r4, #8
 801bdfa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801bdfc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bdfe:	b162      	cbz	r2, 801be1a <_svfprintf_r+0x762>
 801be00:	aa1f      	add	r2, sp, #124	@ 0x7c
 801be02:	6022      	str	r2, [r4, #0]
 801be04:	2202      	movs	r2, #2
 801be06:	4413      	add	r3, r2
 801be08:	9328      	str	r3, [sp, #160]	@ 0xa0
 801be0a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801be0c:	6062      	str	r2, [r4, #4]
 801be0e:	3301      	adds	r3, #1
 801be10:	2b07      	cmp	r3, #7
 801be12:	9327      	str	r3, [sp, #156]	@ 0x9c
 801be14:	f300 8287 	bgt.w	801c326 <_svfprintf_r+0xc6e>
 801be18:	3408      	adds	r4, #8
 801be1a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801be1c:	2b80      	cmp	r3, #128	@ 0x80
 801be1e:	d122      	bne.n	801be66 <_svfprintf_r+0x7ae>
 801be20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801be22:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801be24:	1a9b      	subs	r3, r3, r2
 801be26:	2b00      	cmp	r3, #0
 801be28:	9313      	str	r3, [sp, #76]	@ 0x4c
 801be2a:	dd1c      	ble.n	801be66 <_svfprintf_r+0x7ae>
 801be2c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801be2e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801be32:	2810      	cmp	r0, #16
 801be34:	487b      	ldr	r0, [pc, #492]	@ (801c024 <_svfprintf_r+0x96c>)
 801be36:	6020      	str	r0, [r4, #0]
 801be38:	f102 0201 	add.w	r2, r2, #1
 801be3c:	f104 0108 	add.w	r1, r4, #8
 801be40:	f300 827b 	bgt.w	801c33a <_svfprintf_r+0xc82>
 801be44:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801be46:	6060      	str	r0, [r4, #4]
 801be48:	4403      	add	r3, r0
 801be4a:	2a07      	cmp	r2, #7
 801be4c:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801be50:	f340 8288 	ble.w	801c364 <_svfprintf_r+0xcac>
 801be54:	9803      	ldr	r0, [sp, #12]
 801be56:	aa26      	add	r2, sp, #152	@ 0x98
 801be58:	4659      	mov	r1, fp
 801be5a:	f002 fb00 	bl	801e45e <__ssprint_r>
 801be5e:	2800      	cmp	r0, #0
 801be60:	f040 85a5 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801be64:	ac29      	add	r4, sp, #164	@ 0xa4
 801be66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801be68:	eba3 0308 	sub.w	r3, r3, r8
 801be6c:	2b00      	cmp	r3, #0
 801be6e:	9310      	str	r3, [sp, #64]	@ 0x40
 801be70:	dd1c      	ble.n	801beac <_svfprintf_r+0x7f4>
 801be72:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801be74:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801be78:	2810      	cmp	r0, #16
 801be7a:	486a      	ldr	r0, [pc, #424]	@ (801c024 <_svfprintf_r+0x96c>)
 801be7c:	6020      	str	r0, [r4, #0]
 801be7e:	f102 0201 	add.w	r2, r2, #1
 801be82:	f104 0108 	add.w	r1, r4, #8
 801be86:	f300 826f 	bgt.w	801c368 <_svfprintf_r+0xcb0>
 801be8a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801be8c:	6060      	str	r0, [r4, #4]
 801be8e:	4403      	add	r3, r0
 801be90:	2a07      	cmp	r2, #7
 801be92:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801be96:	f340 827c 	ble.w	801c392 <_svfprintf_r+0xcda>
 801be9a:	9803      	ldr	r0, [sp, #12]
 801be9c:	aa26      	add	r2, sp, #152	@ 0x98
 801be9e:	4659      	mov	r1, fp
 801bea0:	f002 fadd 	bl	801e45e <__ssprint_r>
 801bea4:	2800      	cmp	r0, #0
 801bea6:	f040 8582 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801beaa:	ac29      	add	r4, sp, #164	@ 0xa4
 801beac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801beae:	9310      	str	r3, [sp, #64]	@ 0x40
 801beb0:	05ea      	lsls	r2, r5, #23
 801beb2:	f100 8275 	bmi.w	801c3a0 <_svfprintf_r+0xce8>
 801beb6:	4443      	add	r3, r8
 801beb8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801beba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bebc:	3301      	adds	r3, #1
 801bebe:	2b07      	cmp	r3, #7
 801bec0:	e9c4 9800 	strd	r9, r8, [r4]
 801bec4:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bec6:	f300 82b1 	bgt.w	801c42c <_svfprintf_r+0xd74>
 801beca:	3408      	adds	r4, #8
 801becc:	076a      	lsls	r2, r5, #29
 801bece:	f100 8550 	bmi.w	801c972 <_svfprintf_r+0x12ba>
 801bed2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 801bed6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801bed8:	428a      	cmp	r2, r1
 801beda:	bfac      	ite	ge
 801bedc:	189b      	addge	r3, r3, r2
 801bede:	185b      	addlt	r3, r3, r1
 801bee0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bee2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bee4:	b13b      	cbz	r3, 801bef6 <_svfprintf_r+0x83e>
 801bee6:	9803      	ldr	r0, [sp, #12]
 801bee8:	aa26      	add	r2, sp, #152	@ 0x98
 801beea:	4659      	mov	r1, fp
 801beec:	f002 fab7 	bl	801e45e <__ssprint_r>
 801bef0:	2800      	cmp	r0, #0
 801bef2:	f040 855c 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801bef6:	2300      	movs	r3, #0
 801bef8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801befa:	f1ba 0f00 	cmp.w	sl, #0
 801befe:	f040 8572 	bne.w	801c9e6 <_svfprintf_r+0x132e>
 801bf02:	9e07      	ldr	r6, [sp, #28]
 801bf04:	ac29      	add	r4, sp, #164	@ 0xa4
 801bf06:	e0c6      	b.n	801c096 <_svfprintf_r+0x9de>
 801bf08:	f802 0c01 	strb.w	r0, [r2, #-1]
 801bf0c:	e6ac      	b.n	801bc68 <_svfprintf_r+0x5b0>
 801bf0e:	f803 0b01 	strb.w	r0, [r3], #1
 801bf12:	e676      	b.n	801bc02 <_svfprintf_r+0x54a>
 801bf14:	9b08      	ldr	r3, [sp, #32]
 801bf16:	2b46      	cmp	r3, #70	@ 0x46
 801bf18:	d005      	beq.n	801bf26 <_svfprintf_r+0x86e>
 801bf1a:	2b45      	cmp	r3, #69	@ 0x45
 801bf1c:	d11a      	bne.n	801bf54 <_svfprintf_r+0x89c>
 801bf1e:	f108 0601 	add.w	r6, r8, #1
 801bf22:	2102      	movs	r1, #2
 801bf24:	e001      	b.n	801bf2a <_svfprintf_r+0x872>
 801bf26:	4646      	mov	r6, r8
 801bf28:	2103      	movs	r1, #3
 801bf2a:	ab24      	add	r3, sp, #144	@ 0x90
 801bf2c:	9301      	str	r3, [sp, #4]
 801bf2e:	ab21      	add	r3, sp, #132	@ 0x84
 801bf30:	9300      	str	r3, [sp, #0]
 801bf32:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801bf36:	ab20      	add	r3, sp, #128	@ 0x80
 801bf38:	9803      	ldr	r0, [sp, #12]
 801bf3a:	4632      	mov	r2, r6
 801bf3c:	f000 ffe8 	bl	801cf10 <_dtoa_r>
 801bf40:	9b08      	ldr	r3, [sp, #32]
 801bf42:	2b47      	cmp	r3, #71	@ 0x47
 801bf44:	4681      	mov	r9, r0
 801bf46:	d119      	bne.n	801bf7c <_svfprintf_r+0x8c4>
 801bf48:	07e8      	lsls	r0, r5, #31
 801bf4a:	d405      	bmi.n	801bf58 <_svfprintf_r+0x8a0>
 801bf4c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bf4e:	eba3 0309 	sub.w	r3, r3, r9
 801bf52:	e69b      	b.n	801bc8c <_svfprintf_r+0x5d4>
 801bf54:	4646      	mov	r6, r8
 801bf56:	e7e4      	b.n	801bf22 <_svfprintf_r+0x86a>
 801bf58:	eb09 0706 	add.w	r7, r9, r6
 801bf5c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801bf60:	2200      	movs	r2, #0
 801bf62:	2300      	movs	r3, #0
 801bf64:	f7e4 fdb0 	bl	8000ac8 <__aeabi_dcmpeq>
 801bf68:	b100      	cbz	r0, 801bf6c <_svfprintf_r+0x8b4>
 801bf6a:	9724      	str	r7, [sp, #144]	@ 0x90
 801bf6c:	2230      	movs	r2, #48	@ 0x30
 801bf6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bf70:	429f      	cmp	r7, r3
 801bf72:	d9eb      	bls.n	801bf4c <_svfprintf_r+0x894>
 801bf74:	1c59      	adds	r1, r3, #1
 801bf76:	9124      	str	r1, [sp, #144]	@ 0x90
 801bf78:	701a      	strb	r2, [r3, #0]
 801bf7a:	e7f8      	b.n	801bf6e <_svfprintf_r+0x8b6>
 801bf7c:	9b08      	ldr	r3, [sp, #32]
 801bf7e:	2b46      	cmp	r3, #70	@ 0x46
 801bf80:	eb00 0706 	add.w	r7, r0, r6
 801bf84:	d1ea      	bne.n	801bf5c <_svfprintf_r+0x8a4>
 801bf86:	7803      	ldrb	r3, [r0, #0]
 801bf88:	2b30      	cmp	r3, #48	@ 0x30
 801bf8a:	d109      	bne.n	801bfa0 <_svfprintf_r+0x8e8>
 801bf8c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801bf90:	2200      	movs	r2, #0
 801bf92:	2300      	movs	r3, #0
 801bf94:	f7e4 fd98 	bl	8000ac8 <__aeabi_dcmpeq>
 801bf98:	b910      	cbnz	r0, 801bfa0 <_svfprintf_r+0x8e8>
 801bf9a:	f1c6 0601 	rsb	r6, r6, #1
 801bf9e:	9620      	str	r6, [sp, #128]	@ 0x80
 801bfa0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bfa2:	441f      	add	r7, r3
 801bfa4:	e7da      	b.n	801bf5c <_svfprintf_r+0x8a4>
 801bfa6:	9b08      	ldr	r3, [sp, #32]
 801bfa8:	2b46      	cmp	r3, #70	@ 0x46
 801bfaa:	f47f ae7d 	bne.w	801bca8 <_svfprintf_r+0x5f0>
 801bfae:	f005 0301 	and.w	r3, r5, #1
 801bfb2:	2e00      	cmp	r6, #0
 801bfb4:	ea43 0308 	orr.w	r3, r3, r8
 801bfb8:	dd25      	ble.n	801c006 <_svfprintf_r+0x94e>
 801bfba:	b37b      	cbz	r3, 801c01c <_svfprintf_r+0x964>
 801bfbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bfbe:	18f3      	adds	r3, r6, r3
 801bfc0:	4498      	add	r8, r3
 801bfc2:	2366      	movs	r3, #102	@ 0x66
 801bfc4:	9306      	str	r3, [sp, #24]
 801bfc6:	e033      	b.n	801c030 <_svfprintf_r+0x978>
 801bfc8:	f813 7b01 	ldrb.w	r7, [r3], #1
 801bfcc:	f806 7f01 	strb.w	r7, [r6, #1]!
 801bfd0:	e6a1      	b.n	801bd16 <_svfprintf_r+0x65e>
 801bfd2:	b941      	cbnz	r1, 801bfe6 <_svfprintf_r+0x92e>
 801bfd4:	2230      	movs	r2, #48	@ 0x30
 801bfd6:	f88d 208a 	strb.w	r2, [sp, #138]	@ 0x8a
 801bfda:	f10d 028b 	add.w	r2, sp, #139	@ 0x8b
 801bfde:	3330      	adds	r3, #48	@ 0x30
 801bfe0:	f802 3b01 	strb.w	r3, [r2], #1
 801bfe4:	e6a3      	b.n	801bd2e <_svfprintf_r+0x676>
 801bfe6:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801bfea:	e7f8      	b.n	801bfde <_svfprintf_r+0x926>
 801bfec:	9b04      	ldr	r3, [sp, #16]
 801bfee:	429e      	cmp	r6, r3
 801bff0:	da0d      	bge.n	801c00e <_svfprintf_r+0x956>
 801bff2:	9b04      	ldr	r3, [sp, #16]
 801bff4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801bff6:	2e00      	cmp	r6, #0
 801bff8:	eb03 0802 	add.w	r8, r3, r2
 801bffc:	dc0c      	bgt.n	801c018 <_svfprintf_r+0x960>
 801bffe:	f1c6 0301 	rsb	r3, r6, #1
 801c002:	4498      	add	r8, r3
 801c004:	e008      	b.n	801c018 <_svfprintf_r+0x960>
 801c006:	b17b      	cbz	r3, 801c028 <_svfprintf_r+0x970>
 801c008:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c00a:	3301      	adds	r3, #1
 801c00c:	e7d8      	b.n	801bfc0 <_svfprintf_r+0x908>
 801c00e:	07eb      	lsls	r3, r5, #31
 801c010:	d521      	bpl.n	801c056 <_svfprintf_r+0x99e>
 801c012:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c014:	eb06 0803 	add.w	r8, r6, r3
 801c018:	2367      	movs	r3, #103	@ 0x67
 801c01a:	e7d3      	b.n	801bfc4 <_svfprintf_r+0x90c>
 801c01c:	46b0      	mov	r8, r6
 801c01e:	e7d0      	b.n	801bfc2 <_svfprintf_r+0x90a>
 801c020:	08021678 	.word	0x08021678
 801c024:	08021668 	.word	0x08021668
 801c028:	2366      	movs	r3, #102	@ 0x66
 801c02a:	9306      	str	r3, [sp, #24]
 801c02c:	f04f 0801 	mov.w	r8, #1
 801c030:	f415 6380 	ands.w	r3, r5, #1024	@ 0x400
 801c034:	9308      	str	r3, [sp, #32]
 801c036:	d01f      	beq.n	801c078 <_svfprintf_r+0x9c0>
 801c038:	2700      	movs	r7, #0
 801c03a:	2e00      	cmp	r6, #0
 801c03c:	9708      	str	r7, [sp, #32]
 801c03e:	f77f ae8a 	ble.w	801bd56 <_svfprintf_r+0x69e>
 801c042:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c044:	781b      	ldrb	r3, [r3, #0]
 801c046:	2bff      	cmp	r3, #255	@ 0xff
 801c048:	d107      	bne.n	801c05a <_svfprintf_r+0x9a2>
 801c04a:	9b08      	ldr	r3, [sp, #32]
 801c04c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c04e:	443b      	add	r3, r7
 801c050:	fb02 8803 	mla	r8, r2, r3, r8
 801c054:	e67f      	b.n	801bd56 <_svfprintf_r+0x69e>
 801c056:	46b0      	mov	r8, r6
 801c058:	e7de      	b.n	801c018 <_svfprintf_r+0x960>
 801c05a:	42b3      	cmp	r3, r6
 801c05c:	daf5      	bge.n	801c04a <_svfprintf_r+0x992>
 801c05e:	1af6      	subs	r6, r6, r3
 801c060:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c062:	785b      	ldrb	r3, [r3, #1]
 801c064:	b133      	cbz	r3, 801c074 <_svfprintf_r+0x9bc>
 801c066:	9b08      	ldr	r3, [sp, #32]
 801c068:	3301      	adds	r3, #1
 801c06a:	9308      	str	r3, [sp, #32]
 801c06c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c06e:	3301      	adds	r3, #1
 801c070:	9309      	str	r3, [sp, #36]	@ 0x24
 801c072:	e7e6      	b.n	801c042 <_svfprintf_r+0x98a>
 801c074:	3701      	adds	r7, #1
 801c076:	e7e4      	b.n	801c042 <_svfprintf_r+0x98a>
 801c078:	9f08      	ldr	r7, [sp, #32]
 801c07a:	e66c      	b.n	801bd56 <_svfprintf_r+0x69e>
 801c07c:	232d      	movs	r3, #45	@ 0x2d
 801c07e:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801c082:	e66c      	b.n	801bd5e <_svfprintf_r+0x6a6>
 801c084:	06af      	lsls	r7, r5, #26
 801c086:	d50a      	bpl.n	801c09e <_svfprintf_r+0x9e6>
 801c088:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c08a:	6833      	ldr	r3, [r6, #0]
 801c08c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c08e:	17d2      	asrs	r2, r2, #31
 801c090:	e9c3 1200 	strd	r1, r2, [r3]
 801c094:	3604      	adds	r6, #4
 801c096:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c09a:	f7ff bb46 	b.w	801b72a <_svfprintf_r+0x72>
 801c09e:	06e8      	lsls	r0, r5, #27
 801c0a0:	d503      	bpl.n	801c0aa <_svfprintf_r+0x9f2>
 801c0a2:	6833      	ldr	r3, [r6, #0]
 801c0a4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c0a6:	601a      	str	r2, [r3, #0]
 801c0a8:	e7f4      	b.n	801c094 <_svfprintf_r+0x9dc>
 801c0aa:	0669      	lsls	r1, r5, #25
 801c0ac:	d503      	bpl.n	801c0b6 <_svfprintf_r+0x9fe>
 801c0ae:	6833      	ldr	r3, [r6, #0]
 801c0b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c0b2:	801a      	strh	r2, [r3, #0]
 801c0b4:	e7ee      	b.n	801c094 <_svfprintf_r+0x9dc>
 801c0b6:	05aa      	lsls	r2, r5, #22
 801c0b8:	d5f3      	bpl.n	801c0a2 <_svfprintf_r+0x9ea>
 801c0ba:	6833      	ldr	r3, [r6, #0]
 801c0bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c0be:	701a      	strb	r2, [r3, #0]
 801c0c0:	e7e8      	b.n	801c094 <_svfprintf_r+0x9dc>
 801c0c2:	f045 0510 	orr.w	r5, r5, #16
 801c0c6:	f015 0320 	ands.w	r3, r5, #32
 801c0ca:	d020      	beq.n	801c10e <_svfprintf_r+0xa56>
 801c0cc:	3607      	adds	r6, #7
 801c0ce:	f026 0307 	bic.w	r3, r6, #7
 801c0d2:	461a      	mov	r2, r3
 801c0d4:	685f      	ldr	r7, [r3, #4]
 801c0d6:	f852 6b08 	ldr.w	r6, [r2], #8
 801c0da:	9207      	str	r2, [sp, #28]
 801c0dc:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801c0e0:	2300      	movs	r3, #0
 801c0e2:	2200      	movs	r2, #0
 801c0e4:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801c0e8:	f1b8 3fff 	cmp.w	r8, #4294967295
 801c0ec:	f000 848c 	beq.w	801ca08 <_svfprintf_r+0x1350>
 801c0f0:	f025 0280 	bic.w	r2, r5, #128	@ 0x80
 801c0f4:	9208      	str	r2, [sp, #32]
 801c0f6:	ea56 0207 	orrs.w	r2, r6, r7
 801c0fa:	f040 848a 	bne.w	801ca12 <_svfprintf_r+0x135a>
 801c0fe:	f1b8 0f00 	cmp.w	r8, #0
 801c102:	f000 80db 	beq.w	801c2bc <_svfprintf_r+0xc04>
 801c106:	2b01      	cmp	r3, #1
 801c108:	f040 8486 	bne.w	801ca18 <_svfprintf_r+0x1360>
 801c10c:	e083      	b.n	801c216 <_svfprintf_r+0xb5e>
 801c10e:	4632      	mov	r2, r6
 801c110:	f015 0710 	ands.w	r7, r5, #16
 801c114:	f852 6b04 	ldr.w	r6, [r2], #4
 801c118:	9207      	str	r2, [sp, #28]
 801c11a:	d001      	beq.n	801c120 <_svfprintf_r+0xa68>
 801c11c:	461f      	mov	r7, r3
 801c11e:	e7dd      	b.n	801c0dc <_svfprintf_r+0xa24>
 801c120:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c124:	d001      	beq.n	801c12a <_svfprintf_r+0xa72>
 801c126:	b2b6      	uxth	r6, r6
 801c128:	e7d8      	b.n	801c0dc <_svfprintf_r+0xa24>
 801c12a:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c12e:	d0d5      	beq.n	801c0dc <_svfprintf_r+0xa24>
 801c130:	b2f6      	uxtb	r6, r6
 801c132:	e7f3      	b.n	801c11c <_svfprintf_r+0xa64>
 801c134:	4633      	mov	r3, r6
 801c136:	2278      	movs	r2, #120	@ 0x78
 801c138:	f853 6b04 	ldr.w	r6, [r3], #4
 801c13c:	9307      	str	r3, [sp, #28]
 801c13e:	f647 0330 	movw	r3, #30768	@ 0x7830
 801c142:	f8ad 307c 	strh.w	r3, [sp, #124]	@ 0x7c
 801c146:	4b94      	ldr	r3, [pc, #592]	@ (801c398 <_svfprintf_r+0xce0>)
 801c148:	9319      	str	r3, [sp, #100]	@ 0x64
 801c14a:	2700      	movs	r7, #0
 801c14c:	f045 0502 	orr.w	r5, r5, #2
 801c150:	2302      	movs	r3, #2
 801c152:	9206      	str	r2, [sp, #24]
 801c154:	e7c5      	b.n	801c0e2 <_svfprintf_r+0xa2a>
 801c156:	4633      	mov	r3, r6
 801c158:	f1b8 3fff 	cmp.w	r8, #4294967295
 801c15c:	f853 9b04 	ldr.w	r9, [r3], #4
 801c160:	9307      	str	r3, [sp, #28]
 801c162:	f04f 0600 	mov.w	r6, #0
 801c166:	f88d 607b 	strb.w	r6, [sp, #123]	@ 0x7b
 801c16a:	d00f      	beq.n	801c18c <_svfprintf_r+0xad4>
 801c16c:	4642      	mov	r2, r8
 801c16e:	4631      	mov	r1, r6
 801c170:	4648      	mov	r0, r9
 801c172:	f7e4 f835 	bl	80001e0 <memchr>
 801c176:	4682      	mov	sl, r0
 801c178:	2800      	cmp	r0, #0
 801c17a:	f43f ac81 	beq.w	801ba80 <_svfprintf_r+0x3c8>
 801c17e:	eba0 0809 	sub.w	r8, r0, r9
 801c182:	46b2      	mov	sl, r6
 801c184:	9610      	str	r6, [sp, #64]	@ 0x40
 801c186:	4637      	mov	r7, r6
 801c188:	9608      	str	r6, [sp, #32]
 801c18a:	e5eb      	b.n	801bd64 <_svfprintf_r+0x6ac>
 801c18c:	4648      	mov	r0, r9
 801c18e:	f7e4 f81f 	bl	80001d0 <strlen>
 801c192:	46b2      	mov	sl, r6
 801c194:	4680      	mov	r8, r0
 801c196:	e473      	b.n	801ba80 <_svfprintf_r+0x3c8>
 801c198:	f045 0510 	orr.w	r5, r5, #16
 801c19c:	f015 0320 	ands.w	r3, r5, #32
 801c1a0:	d009      	beq.n	801c1b6 <_svfprintf_r+0xafe>
 801c1a2:	3607      	adds	r6, #7
 801c1a4:	f026 0307 	bic.w	r3, r6, #7
 801c1a8:	461a      	mov	r2, r3
 801c1aa:	685f      	ldr	r7, [r3, #4]
 801c1ac:	f852 6b08 	ldr.w	r6, [r2], #8
 801c1b0:	9207      	str	r2, [sp, #28]
 801c1b2:	2301      	movs	r3, #1
 801c1b4:	e795      	b.n	801c0e2 <_svfprintf_r+0xa2a>
 801c1b6:	4632      	mov	r2, r6
 801c1b8:	f015 0710 	ands.w	r7, r5, #16
 801c1bc:	f852 6b04 	ldr.w	r6, [r2], #4
 801c1c0:	9207      	str	r2, [sp, #28]
 801c1c2:	d001      	beq.n	801c1c8 <_svfprintf_r+0xb10>
 801c1c4:	461f      	mov	r7, r3
 801c1c6:	e7f4      	b.n	801c1b2 <_svfprintf_r+0xafa>
 801c1c8:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c1cc:	d001      	beq.n	801c1d2 <_svfprintf_r+0xb1a>
 801c1ce:	b2b6      	uxth	r6, r6
 801c1d0:	e7ef      	b.n	801c1b2 <_svfprintf_r+0xafa>
 801c1d2:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c1d6:	d0ec      	beq.n	801c1b2 <_svfprintf_r+0xafa>
 801c1d8:	b2f6      	uxtb	r6, r6
 801c1da:	e7f3      	b.n	801c1c4 <_svfprintf_r+0xb0c>
 801c1dc:	4b6f      	ldr	r3, [pc, #444]	@ (801c39c <_svfprintf_r+0xce4>)
 801c1de:	f7ff bb39 	b.w	801b854 <_svfprintf_r+0x19c>
 801c1e2:	4632      	mov	r2, r6
 801c1e4:	f015 0710 	ands.w	r7, r5, #16
 801c1e8:	f852 6b04 	ldr.w	r6, [r2], #4
 801c1ec:	9207      	str	r2, [sp, #28]
 801c1ee:	d002      	beq.n	801c1f6 <_svfprintf_r+0xb3e>
 801c1f0:	461f      	mov	r7, r3
 801c1f2:	f7ff bb3c 	b.w	801b86e <_svfprintf_r+0x1b6>
 801c1f6:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801c1fa:	d002      	beq.n	801c202 <_svfprintf_r+0xb4a>
 801c1fc:	b2b6      	uxth	r6, r6
 801c1fe:	f7ff bb36 	b.w	801b86e <_svfprintf_r+0x1b6>
 801c202:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801c206:	f43f ab32 	beq.w	801b86e <_svfprintf_r+0x1b6>
 801c20a:	b2f6      	uxtb	r6, r6
 801c20c:	e7f0      	b.n	801c1f0 <_svfprintf_r+0xb38>
 801c20e:	2e0a      	cmp	r6, #10
 801c210:	f177 0300 	sbcs.w	r3, r7, #0
 801c214:	d207      	bcs.n	801c226 <_svfprintf_r+0xb6e>
 801c216:	3630      	adds	r6, #48	@ 0x30
 801c218:	b2f6      	uxtb	r6, r6
 801c21a:	f88d 6147 	strb.w	r6, [sp, #327]	@ 0x147
 801c21e:	f20d 1947 	addw	r9, sp, #327	@ 0x147
 801c222:	f000 bc15 	b.w	801ca50 <_svfprintf_r+0x1398>
 801c226:	2300      	movs	r3, #0
 801c228:	9304      	str	r3, [sp, #16]
 801c22a:	9b08      	ldr	r3, [sp, #32]
 801c22c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801c230:	ad52      	add	r5, sp, #328	@ 0x148
 801c232:	9310      	str	r3, [sp, #64]	@ 0x40
 801c234:	220a      	movs	r2, #10
 801c236:	2300      	movs	r3, #0
 801c238:	4630      	mov	r0, r6
 801c23a:	4639      	mov	r1, r7
 801c23c:	f7e4 fd24 	bl	8000c88 <__aeabi_uldivmod>
 801c240:	9b04      	ldr	r3, [sp, #16]
 801c242:	9011      	str	r0, [sp, #68]	@ 0x44
 801c244:	3301      	adds	r3, #1
 801c246:	9304      	str	r3, [sp, #16]
 801c248:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c24a:	3230      	adds	r2, #48	@ 0x30
 801c24c:	468a      	mov	sl, r1
 801c24e:	f105 39ff 	add.w	r9, r5, #4294967295
 801c252:	f805 2c01 	strb.w	r2, [r5, #-1]
 801c256:	b1d3      	cbz	r3, 801c28e <_svfprintf_r+0xbd6>
 801c258:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c25a:	9a04      	ldr	r2, [sp, #16]
 801c25c:	781b      	ldrb	r3, [r3, #0]
 801c25e:	429a      	cmp	r2, r3
 801c260:	d115      	bne.n	801c28e <_svfprintf_r+0xbd6>
 801c262:	2aff      	cmp	r2, #255	@ 0xff
 801c264:	d013      	beq.n	801c28e <_svfprintf_r+0xbd6>
 801c266:	2e0a      	cmp	r6, #10
 801c268:	f177 0300 	sbcs.w	r3, r7, #0
 801c26c:	d30f      	bcc.n	801c28e <_svfprintf_r+0xbd6>
 801c26e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c270:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801c272:	eba9 0903 	sub.w	r9, r9, r3
 801c276:	461a      	mov	r2, r3
 801c278:	4648      	mov	r0, r9
 801c27a:	f000 fcfe 	bl	801cc7a <strncpy>
 801c27e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c280:	785b      	ldrb	r3, [r3, #1]
 801c282:	b11b      	cbz	r3, 801c28c <_svfprintf_r+0xbd4>
 801c284:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c286:	3301      	adds	r3, #1
 801c288:	9309      	str	r3, [sp, #36]	@ 0x24
 801c28a:	2300      	movs	r3, #0
 801c28c:	9304      	str	r3, [sp, #16]
 801c28e:	2e0a      	cmp	r6, #10
 801c290:	f177 0700 	sbcs.w	r7, r7, #0
 801c294:	f0c0 83dc 	bcc.w	801ca50 <_svfprintf_r+0x1398>
 801c298:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801c29a:	4657      	mov	r7, sl
 801c29c:	464d      	mov	r5, r9
 801c29e:	e7c9      	b.n	801c234 <_svfprintf_r+0xb7c>
 801c2a0:	f006 030f 	and.w	r3, r6, #15
 801c2a4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801c2a6:	0936      	lsrs	r6, r6, #4
 801c2a8:	5cd3      	ldrb	r3, [r2, r3]
 801c2aa:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801c2ae:	ea46 7607 	orr.w	r6, r6, r7, lsl #28
 801c2b2:	093f      	lsrs	r7, r7, #4
 801c2b4:	ea56 0307 	orrs.w	r3, r6, r7
 801c2b8:	d1f2      	bne.n	801c2a0 <_svfprintf_r+0xbe8>
 801c2ba:	e3c9      	b.n	801ca50 <_svfprintf_r+0x1398>
 801c2bc:	b91b      	cbnz	r3, 801c2c6 <_svfprintf_r+0xc0e>
 801c2be:	07e9      	lsls	r1, r5, #31
 801c2c0:	d501      	bpl.n	801c2c6 <_svfprintf_r+0xc0e>
 801c2c2:	2630      	movs	r6, #48	@ 0x30
 801c2c4:	e7a9      	b.n	801c21a <_svfprintf_r+0xb62>
 801c2c6:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801c2ca:	e3c1      	b.n	801ca50 <_svfprintf_r+0x1398>
 801c2cc:	9b06      	ldr	r3, [sp, #24]
 801c2ce:	2b00      	cmp	r3, #0
 801c2d0:	f000 838f 	beq.w	801c9f2 <_svfprintf_r+0x133a>
 801c2d4:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801c2d8:	2300      	movs	r3, #0
 801c2da:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801c2de:	9607      	str	r6, [sp, #28]
 801c2e0:	f7ff bb63 	b.w	801b9aa <_svfprintf_r+0x2f2>
 801c2e4:	2010      	movs	r0, #16
 801c2e6:	4403      	add	r3, r0
 801c2e8:	2a07      	cmp	r2, #7
 801c2ea:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c2ee:	6060      	str	r0, [r4, #4]
 801c2f0:	dd08      	ble.n	801c304 <_svfprintf_r+0xc4c>
 801c2f2:	9803      	ldr	r0, [sp, #12]
 801c2f4:	aa26      	add	r2, sp, #152	@ 0x98
 801c2f6:	4659      	mov	r1, fp
 801c2f8:	f002 f8b1 	bl	801e45e <__ssprint_r>
 801c2fc:	2800      	cmp	r0, #0
 801c2fe:	f040 8356 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c302:	a929      	add	r1, sp, #164	@ 0xa4
 801c304:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c306:	3b10      	subs	r3, #16
 801c308:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c30a:	460c      	mov	r4, r1
 801c30c:	e546      	b.n	801bd9c <_svfprintf_r+0x6e4>
 801c30e:	460c      	mov	r4, r1
 801c310:	e561      	b.n	801bdd6 <_svfprintf_r+0x71e>
 801c312:	9803      	ldr	r0, [sp, #12]
 801c314:	aa26      	add	r2, sp, #152	@ 0x98
 801c316:	4659      	mov	r1, fp
 801c318:	f002 f8a1 	bl	801e45e <__ssprint_r>
 801c31c:	2800      	cmp	r0, #0
 801c31e:	f040 8346 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c322:	ac29      	add	r4, sp, #164	@ 0xa4
 801c324:	e569      	b.n	801bdfa <_svfprintf_r+0x742>
 801c326:	9803      	ldr	r0, [sp, #12]
 801c328:	aa26      	add	r2, sp, #152	@ 0x98
 801c32a:	4659      	mov	r1, fp
 801c32c:	f002 f897 	bl	801e45e <__ssprint_r>
 801c330:	2800      	cmp	r0, #0
 801c332:	f040 833c 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c336:	ac29      	add	r4, sp, #164	@ 0xa4
 801c338:	e56f      	b.n	801be1a <_svfprintf_r+0x762>
 801c33a:	2010      	movs	r0, #16
 801c33c:	4403      	add	r3, r0
 801c33e:	2a07      	cmp	r2, #7
 801c340:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c344:	6060      	str	r0, [r4, #4]
 801c346:	dd08      	ble.n	801c35a <_svfprintf_r+0xca2>
 801c348:	9803      	ldr	r0, [sp, #12]
 801c34a:	aa26      	add	r2, sp, #152	@ 0x98
 801c34c:	4659      	mov	r1, fp
 801c34e:	f002 f886 	bl	801e45e <__ssprint_r>
 801c352:	2800      	cmp	r0, #0
 801c354:	f040 832b 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c358:	a929      	add	r1, sp, #164	@ 0xa4
 801c35a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c35c:	3b10      	subs	r3, #16
 801c35e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c360:	460c      	mov	r4, r1
 801c362:	e563      	b.n	801be2c <_svfprintf_r+0x774>
 801c364:	460c      	mov	r4, r1
 801c366:	e57e      	b.n	801be66 <_svfprintf_r+0x7ae>
 801c368:	2010      	movs	r0, #16
 801c36a:	4403      	add	r3, r0
 801c36c:	2a07      	cmp	r2, #7
 801c36e:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c372:	6060      	str	r0, [r4, #4]
 801c374:	dd08      	ble.n	801c388 <_svfprintf_r+0xcd0>
 801c376:	9803      	ldr	r0, [sp, #12]
 801c378:	aa26      	add	r2, sp, #152	@ 0x98
 801c37a:	4659      	mov	r1, fp
 801c37c:	f002 f86f 	bl	801e45e <__ssprint_r>
 801c380:	2800      	cmp	r0, #0
 801c382:	f040 8314 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c386:	a929      	add	r1, sp, #164	@ 0xa4
 801c388:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c38a:	3b10      	subs	r3, #16
 801c38c:	9310      	str	r3, [sp, #64]	@ 0x40
 801c38e:	460c      	mov	r4, r1
 801c390:	e56f      	b.n	801be72 <_svfprintf_r+0x7ba>
 801c392:	460c      	mov	r4, r1
 801c394:	e58a      	b.n	801beac <_svfprintf_r+0x7f4>
 801c396:	bf00      	nop
 801c398:	08021644 	.word	0x08021644
 801c39c:	08021655 	.word	0x08021655
 801c3a0:	9b06      	ldr	r3, [sp, #24]
 801c3a2:	2b65      	cmp	r3, #101	@ 0x65
 801c3a4:	f340 8246 	ble.w	801c834 <_svfprintf_r+0x117c>
 801c3a8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801c3ac:	2200      	movs	r2, #0
 801c3ae:	2300      	movs	r3, #0
 801c3b0:	f7e4 fb8a 	bl	8000ac8 <__aeabi_dcmpeq>
 801c3b4:	2800      	cmp	r0, #0
 801c3b6:	d06a      	beq.n	801c48e <_svfprintf_r+0xdd6>
 801c3b8:	4b73      	ldr	r3, [pc, #460]	@ (801c588 <_svfprintf_r+0xed0>)
 801c3ba:	6023      	str	r3, [r4, #0]
 801c3bc:	2301      	movs	r3, #1
 801c3be:	6063      	str	r3, [r4, #4]
 801c3c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c3c2:	3301      	adds	r3, #1
 801c3c4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c3c6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c3c8:	3301      	adds	r3, #1
 801c3ca:	2b07      	cmp	r3, #7
 801c3cc:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c3ce:	dc37      	bgt.n	801c440 <_svfprintf_r+0xd88>
 801c3d0:	3408      	adds	r4, #8
 801c3d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3d4:	9a04      	ldr	r2, [sp, #16]
 801c3d6:	4293      	cmp	r3, r2
 801c3d8:	db02      	blt.n	801c3e0 <_svfprintf_r+0xd28>
 801c3da:	07ef      	lsls	r7, r5, #31
 801c3dc:	f57f ad76 	bpl.w	801becc <_svfprintf_r+0x814>
 801c3e0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c3e2:	6023      	str	r3, [r4, #0]
 801c3e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c3e6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c3e8:	6063      	str	r3, [r4, #4]
 801c3ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c3ec:	4413      	add	r3, r2
 801c3ee:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c3f0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c3f2:	3301      	adds	r3, #1
 801c3f4:	2b07      	cmp	r3, #7
 801c3f6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c3f8:	dc2c      	bgt.n	801c454 <_svfprintf_r+0xd9c>
 801c3fa:	3408      	adds	r4, #8
 801c3fc:	9b04      	ldr	r3, [sp, #16]
 801c3fe:	1e5e      	subs	r6, r3, #1
 801c400:	2e00      	cmp	r6, #0
 801c402:	f77f ad63 	ble.w	801becc <_svfprintf_r+0x814>
 801c406:	4f61      	ldr	r7, [pc, #388]	@ (801c58c <_svfprintf_r+0xed4>)
 801c408:	f04f 0810 	mov.w	r8, #16
 801c40c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c410:	2e10      	cmp	r6, #16
 801c412:	f103 0301 	add.w	r3, r3, #1
 801c416:	f104 0108 	add.w	r1, r4, #8
 801c41a:	6027      	str	r7, [r4, #0]
 801c41c:	dc24      	bgt.n	801c468 <_svfprintf_r+0xdb0>
 801c41e:	6066      	str	r6, [r4, #4]
 801c420:	2b07      	cmp	r3, #7
 801c422:	4416      	add	r6, r2
 801c424:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801c428:	f340 82a0 	ble.w	801c96c <_svfprintf_r+0x12b4>
 801c42c:	9803      	ldr	r0, [sp, #12]
 801c42e:	aa26      	add	r2, sp, #152	@ 0x98
 801c430:	4659      	mov	r1, fp
 801c432:	f002 f814 	bl	801e45e <__ssprint_r>
 801c436:	2800      	cmp	r0, #0
 801c438:	f040 82b9 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c43c:	ac29      	add	r4, sp, #164	@ 0xa4
 801c43e:	e545      	b.n	801becc <_svfprintf_r+0x814>
 801c440:	9803      	ldr	r0, [sp, #12]
 801c442:	aa26      	add	r2, sp, #152	@ 0x98
 801c444:	4659      	mov	r1, fp
 801c446:	f002 f80a 	bl	801e45e <__ssprint_r>
 801c44a:	2800      	cmp	r0, #0
 801c44c:	f040 82af 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c450:	ac29      	add	r4, sp, #164	@ 0xa4
 801c452:	e7be      	b.n	801c3d2 <_svfprintf_r+0xd1a>
 801c454:	9803      	ldr	r0, [sp, #12]
 801c456:	aa26      	add	r2, sp, #152	@ 0x98
 801c458:	4659      	mov	r1, fp
 801c45a:	f002 f800 	bl	801e45e <__ssprint_r>
 801c45e:	2800      	cmp	r0, #0
 801c460:	f040 82a5 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c464:	ac29      	add	r4, sp, #164	@ 0xa4
 801c466:	e7c9      	b.n	801c3fc <_svfprintf_r+0xd44>
 801c468:	3210      	adds	r2, #16
 801c46a:	2b07      	cmp	r3, #7
 801c46c:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c470:	f8c4 8004 	str.w	r8, [r4, #4]
 801c474:	dd08      	ble.n	801c488 <_svfprintf_r+0xdd0>
 801c476:	9803      	ldr	r0, [sp, #12]
 801c478:	aa26      	add	r2, sp, #152	@ 0x98
 801c47a:	4659      	mov	r1, fp
 801c47c:	f001 ffef 	bl	801e45e <__ssprint_r>
 801c480:	2800      	cmp	r0, #0
 801c482:	f040 8294 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c486:	a929      	add	r1, sp, #164	@ 0xa4
 801c488:	3e10      	subs	r6, #16
 801c48a:	460c      	mov	r4, r1
 801c48c:	e7be      	b.n	801c40c <_svfprintf_r+0xd54>
 801c48e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c490:	2b00      	cmp	r3, #0
 801c492:	dc7d      	bgt.n	801c590 <_svfprintf_r+0xed8>
 801c494:	4b3c      	ldr	r3, [pc, #240]	@ (801c588 <_svfprintf_r+0xed0>)
 801c496:	6023      	str	r3, [r4, #0]
 801c498:	2301      	movs	r3, #1
 801c49a:	6063      	str	r3, [r4, #4]
 801c49c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c49e:	3301      	adds	r3, #1
 801c4a0:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c4a2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c4a4:	3301      	adds	r3, #1
 801c4a6:	2b07      	cmp	r3, #7
 801c4a8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c4aa:	dc46      	bgt.n	801c53a <_svfprintf_r+0xe82>
 801c4ac:	3408      	adds	r4, #8
 801c4ae:	9904      	ldr	r1, [sp, #16]
 801c4b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c4b2:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801c4b4:	430b      	orrs	r3, r1
 801c4b6:	f005 0101 	and.w	r1, r5, #1
 801c4ba:	430b      	orrs	r3, r1
 801c4bc:	f43f ad06 	beq.w	801becc <_svfprintf_r+0x814>
 801c4c0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c4c2:	6023      	str	r3, [r4, #0]
 801c4c4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c4c6:	6063      	str	r3, [r4, #4]
 801c4c8:	441a      	add	r2, r3
 801c4ca:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c4cc:	9228      	str	r2, [sp, #160]	@ 0xa0
 801c4ce:	3301      	adds	r3, #1
 801c4d0:	2b07      	cmp	r3, #7
 801c4d2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c4d4:	dc3b      	bgt.n	801c54e <_svfprintf_r+0xe96>
 801c4d6:	f104 0308 	add.w	r3, r4, #8
 801c4da:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801c4dc:	2e00      	cmp	r6, #0
 801c4de:	da1b      	bge.n	801c518 <_svfprintf_r+0xe60>
 801c4e0:	4f2a      	ldr	r7, [pc, #168]	@ (801c58c <_svfprintf_r+0xed4>)
 801c4e2:	4276      	negs	r6, r6
 801c4e4:	461a      	mov	r2, r3
 801c4e6:	2410      	movs	r4, #16
 801c4e8:	e9dd 1027 	ldrd	r1, r0, [sp, #156]	@ 0x9c
 801c4ec:	2e10      	cmp	r6, #16
 801c4ee:	f101 0101 	add.w	r1, r1, #1
 801c4f2:	f103 0308 	add.w	r3, r3, #8
 801c4f6:	6017      	str	r7, [r2, #0]
 801c4f8:	dc33      	bgt.n	801c562 <_svfprintf_r+0xeaa>
 801c4fa:	6056      	str	r6, [r2, #4]
 801c4fc:	2907      	cmp	r1, #7
 801c4fe:	4406      	add	r6, r0
 801c500:	e9cd 1627 	strd	r1, r6, [sp, #156]	@ 0x9c
 801c504:	dd08      	ble.n	801c518 <_svfprintf_r+0xe60>
 801c506:	9803      	ldr	r0, [sp, #12]
 801c508:	aa26      	add	r2, sp, #152	@ 0x98
 801c50a:	4659      	mov	r1, fp
 801c50c:	f001 ffa7 	bl	801e45e <__ssprint_r>
 801c510:	2800      	cmp	r0, #0
 801c512:	f040 824c 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c516:	ab29      	add	r3, sp, #164	@ 0xa4
 801c518:	9a04      	ldr	r2, [sp, #16]
 801c51a:	9904      	ldr	r1, [sp, #16]
 801c51c:	605a      	str	r2, [r3, #4]
 801c51e:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801c520:	f8c3 9000 	str.w	r9, [r3]
 801c524:	440a      	add	r2, r1
 801c526:	9228      	str	r2, [sp, #160]	@ 0xa0
 801c528:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c52a:	3201      	adds	r2, #1
 801c52c:	2a07      	cmp	r2, #7
 801c52e:	9227      	str	r2, [sp, #156]	@ 0x9c
 801c530:	f73f af7c 	bgt.w	801c42c <_svfprintf_r+0xd74>
 801c534:	f103 0408 	add.w	r4, r3, #8
 801c538:	e4c8      	b.n	801becc <_svfprintf_r+0x814>
 801c53a:	9803      	ldr	r0, [sp, #12]
 801c53c:	aa26      	add	r2, sp, #152	@ 0x98
 801c53e:	4659      	mov	r1, fp
 801c540:	f001 ff8d 	bl	801e45e <__ssprint_r>
 801c544:	2800      	cmp	r0, #0
 801c546:	f040 8232 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c54a:	ac29      	add	r4, sp, #164	@ 0xa4
 801c54c:	e7af      	b.n	801c4ae <_svfprintf_r+0xdf6>
 801c54e:	9803      	ldr	r0, [sp, #12]
 801c550:	aa26      	add	r2, sp, #152	@ 0x98
 801c552:	4659      	mov	r1, fp
 801c554:	f001 ff83 	bl	801e45e <__ssprint_r>
 801c558:	2800      	cmp	r0, #0
 801c55a:	f040 8228 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c55e:	ab29      	add	r3, sp, #164	@ 0xa4
 801c560:	e7bb      	b.n	801c4da <_svfprintf_r+0xe22>
 801c562:	3010      	adds	r0, #16
 801c564:	2907      	cmp	r1, #7
 801c566:	e9cd 1027 	strd	r1, r0, [sp, #156]	@ 0x9c
 801c56a:	6054      	str	r4, [r2, #4]
 801c56c:	dd08      	ble.n	801c580 <_svfprintf_r+0xec8>
 801c56e:	9803      	ldr	r0, [sp, #12]
 801c570:	aa26      	add	r2, sp, #152	@ 0x98
 801c572:	4659      	mov	r1, fp
 801c574:	f001 ff73 	bl	801e45e <__ssprint_r>
 801c578:	2800      	cmp	r0, #0
 801c57a:	f040 8218 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c57e:	ab29      	add	r3, sp, #164	@ 0xa4
 801c580:	3e10      	subs	r6, #16
 801c582:	461a      	mov	r2, r3
 801c584:	e7b0      	b.n	801c4e8 <_svfprintf_r+0xe30>
 801c586:	bf00      	nop
 801c588:	08021666 	.word	0x08021666
 801c58c:	08021668 	.word	0x08021668
 801c590:	9b04      	ldr	r3, [sp, #16]
 801c592:	444b      	add	r3, r9
 801c594:	9306      	str	r3, [sp, #24]
 801c596:	9b04      	ldr	r3, [sp, #16]
 801c598:	42b3      	cmp	r3, r6
 801c59a:	bfa8      	it	ge
 801c59c:	4633      	movge	r3, r6
 801c59e:	2b00      	cmp	r3, #0
 801c5a0:	4698      	mov	r8, r3
 801c5a2:	dd0b      	ble.n	801c5bc <_svfprintf_r+0xf04>
 801c5a4:	e9c4 9300 	strd	r9, r3, [r4]
 801c5a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c5aa:	4443      	add	r3, r8
 801c5ac:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c5ae:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c5b0:	3301      	adds	r3, #1
 801c5b2:	2b07      	cmp	r3, #7
 801c5b4:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c5b6:	f300 8089 	bgt.w	801c6cc <_svfprintf_r+0x1014>
 801c5ba:	3408      	adds	r4, #8
 801c5bc:	4643      	mov	r3, r8
 801c5be:	2b00      	cmp	r3, #0
 801c5c0:	bfac      	ite	ge
 801c5c2:	eba6 0808 	subge.w	r8, r6, r8
 801c5c6:	46b0      	movlt	r8, r6
 801c5c8:	f1b8 0f00 	cmp.w	r8, #0
 801c5cc:	dd1b      	ble.n	801c606 <_svfprintf_r+0xf4e>
 801c5ce:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801c5d2:	4897      	ldr	r0, [pc, #604]	@ (801c830 <_svfprintf_r+0x1178>)
 801c5d4:	6020      	str	r0, [r4, #0]
 801c5d6:	f1b8 0f10 	cmp.w	r8, #16
 801c5da:	f102 0201 	add.w	r2, r2, #1
 801c5de:	f104 0108 	add.w	r1, r4, #8
 801c5e2:	dc7d      	bgt.n	801c6e0 <_svfprintf_r+0x1028>
 801c5e4:	4443      	add	r3, r8
 801c5e6:	2a07      	cmp	r2, #7
 801c5e8:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c5ec:	f8c4 8004 	str.w	r8, [r4, #4]
 801c5f0:	f340 808a 	ble.w	801c708 <_svfprintf_r+0x1050>
 801c5f4:	9803      	ldr	r0, [sp, #12]
 801c5f6:	aa26      	add	r2, sp, #152	@ 0x98
 801c5f8:	4659      	mov	r1, fp
 801c5fa:	f001 ff30 	bl	801e45e <__ssprint_r>
 801c5fe:	2800      	cmp	r0, #0
 801c600:	f040 81d5 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c604:	ac29      	add	r4, sp, #164	@ 0xa4
 801c606:	eb09 0806 	add.w	r8, r9, r6
 801c60a:	056e      	lsls	r6, r5, #21
 801c60c:	d508      	bpl.n	801c620 <_svfprintf_r+0xf68>
 801c60e:	9b08      	ldr	r3, [sp, #32]
 801c610:	2b00      	cmp	r3, #0
 801c612:	d17b      	bne.n	801c70c <_svfprintf_r+0x1054>
 801c614:	2f00      	cmp	r7, #0
 801c616:	d17b      	bne.n	801c710 <_svfprintf_r+0x1058>
 801c618:	9b06      	ldr	r3, [sp, #24]
 801c61a:	4598      	cmp	r8, r3
 801c61c:	bf28      	it	cs
 801c61e:	4698      	movcs	r8, r3
 801c620:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c622:	9a04      	ldr	r2, [sp, #16]
 801c624:	4293      	cmp	r3, r2
 801c626:	db01      	blt.n	801c62c <_svfprintf_r+0xf74>
 801c628:	07e8      	lsls	r0, r5, #31
 801c62a:	d50e      	bpl.n	801c64a <_svfprintf_r+0xf92>
 801c62c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c62e:	6023      	str	r3, [r4, #0]
 801c630:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c632:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c634:	6063      	str	r3, [r4, #4]
 801c636:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c638:	4413      	add	r3, r2
 801c63a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c63c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c63e:	3301      	adds	r3, #1
 801c640:	2b07      	cmp	r3, #7
 801c642:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c644:	f300 80df 	bgt.w	801c806 <_svfprintf_r+0x114e>
 801c648:	3408      	adds	r4, #8
 801c64a:	9b04      	ldr	r3, [sp, #16]
 801c64c:	9f20      	ldr	r7, [sp, #128]	@ 0x80
 801c64e:	1bdf      	subs	r7, r3, r7
 801c650:	9b06      	ldr	r3, [sp, #24]
 801c652:	eba3 0308 	sub.w	r3, r3, r8
 801c656:	429f      	cmp	r7, r3
 801c658:	bfa8      	it	ge
 801c65a:	461f      	movge	r7, r3
 801c65c:	2f00      	cmp	r7, #0
 801c65e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c660:	dd0a      	ble.n	801c678 <_svfprintf_r+0xfc0>
 801c662:	443b      	add	r3, r7
 801c664:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c666:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c668:	3301      	adds	r3, #1
 801c66a:	2b07      	cmp	r3, #7
 801c66c:	e9c4 8700 	strd	r8, r7, [r4]
 801c670:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c672:	f300 80d2 	bgt.w	801c81a <_svfprintf_r+0x1162>
 801c676:	3408      	adds	r4, #8
 801c678:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801c67a:	9b04      	ldr	r3, [sp, #16]
 801c67c:	2f00      	cmp	r7, #0
 801c67e:	eba3 0606 	sub.w	r6, r3, r6
 801c682:	bfa8      	it	ge
 801c684:	1bf6      	subge	r6, r6, r7
 801c686:	2e00      	cmp	r6, #0
 801c688:	f77f ac20 	ble.w	801becc <_svfprintf_r+0x814>
 801c68c:	4f68      	ldr	r7, [pc, #416]	@ (801c830 <_svfprintf_r+0x1178>)
 801c68e:	f04f 0810 	mov.w	r8, #16
 801c692:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c696:	2e10      	cmp	r6, #16
 801c698:	f103 0301 	add.w	r3, r3, #1
 801c69c:	f104 0108 	add.w	r1, r4, #8
 801c6a0:	6027      	str	r7, [r4, #0]
 801c6a2:	f77f aebc 	ble.w	801c41e <_svfprintf_r+0xd66>
 801c6a6:	3210      	adds	r2, #16
 801c6a8:	2b07      	cmp	r3, #7
 801c6aa:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c6ae:	f8c4 8004 	str.w	r8, [r4, #4]
 801c6b2:	dd08      	ble.n	801c6c6 <_svfprintf_r+0x100e>
 801c6b4:	9803      	ldr	r0, [sp, #12]
 801c6b6:	aa26      	add	r2, sp, #152	@ 0x98
 801c6b8:	4659      	mov	r1, fp
 801c6ba:	f001 fed0 	bl	801e45e <__ssprint_r>
 801c6be:	2800      	cmp	r0, #0
 801c6c0:	f040 8175 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c6c4:	a929      	add	r1, sp, #164	@ 0xa4
 801c6c6:	3e10      	subs	r6, #16
 801c6c8:	460c      	mov	r4, r1
 801c6ca:	e7e2      	b.n	801c692 <_svfprintf_r+0xfda>
 801c6cc:	9803      	ldr	r0, [sp, #12]
 801c6ce:	aa26      	add	r2, sp, #152	@ 0x98
 801c6d0:	4659      	mov	r1, fp
 801c6d2:	f001 fec4 	bl	801e45e <__ssprint_r>
 801c6d6:	2800      	cmp	r0, #0
 801c6d8:	f040 8169 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c6dc:	ac29      	add	r4, sp, #164	@ 0xa4
 801c6de:	e76d      	b.n	801c5bc <_svfprintf_r+0xf04>
 801c6e0:	2010      	movs	r0, #16
 801c6e2:	4403      	add	r3, r0
 801c6e4:	2a07      	cmp	r2, #7
 801c6e6:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c6ea:	6060      	str	r0, [r4, #4]
 801c6ec:	dd08      	ble.n	801c700 <_svfprintf_r+0x1048>
 801c6ee:	9803      	ldr	r0, [sp, #12]
 801c6f0:	aa26      	add	r2, sp, #152	@ 0x98
 801c6f2:	4659      	mov	r1, fp
 801c6f4:	f001 feb3 	bl	801e45e <__ssprint_r>
 801c6f8:	2800      	cmp	r0, #0
 801c6fa:	f040 8158 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c6fe:	a929      	add	r1, sp, #164	@ 0xa4
 801c700:	f1a8 0810 	sub.w	r8, r8, #16
 801c704:	460c      	mov	r4, r1
 801c706:	e762      	b.n	801c5ce <_svfprintf_r+0xf16>
 801c708:	460c      	mov	r4, r1
 801c70a:	e77c      	b.n	801c606 <_svfprintf_r+0xf4e>
 801c70c:	2f00      	cmp	r7, #0
 801c70e:	d04a      	beq.n	801c7a6 <_svfprintf_r+0x10ee>
 801c710:	3f01      	subs	r7, #1
 801c712:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801c714:	6023      	str	r3, [r4, #0]
 801c716:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c718:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c71a:	6063      	str	r3, [r4, #4]
 801c71c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c71e:	4413      	add	r3, r2
 801c720:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c722:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c724:	3301      	adds	r3, #1
 801c726:	2b07      	cmp	r3, #7
 801c728:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c72a:	dc43      	bgt.n	801c7b4 <_svfprintf_r+0x10fc>
 801c72c:	3408      	adds	r4, #8
 801c72e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c730:	781a      	ldrb	r2, [r3, #0]
 801c732:	9b06      	ldr	r3, [sp, #24]
 801c734:	eba3 0308 	sub.w	r3, r3, r8
 801c738:	429a      	cmp	r2, r3
 801c73a:	bfa8      	it	ge
 801c73c:	461a      	movge	r2, r3
 801c73e:	2a00      	cmp	r2, #0
 801c740:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c742:	4691      	mov	r9, r2
 801c744:	dd09      	ble.n	801c75a <_svfprintf_r+0x10a2>
 801c746:	4413      	add	r3, r2
 801c748:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c74a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c74c:	3301      	adds	r3, #1
 801c74e:	2b07      	cmp	r3, #7
 801c750:	e9c4 8200 	strd	r8, r2, [r4]
 801c754:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c756:	dc37      	bgt.n	801c7c8 <_svfprintf_r+0x1110>
 801c758:	3408      	adds	r4, #8
 801c75a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c75c:	781e      	ldrb	r6, [r3, #0]
 801c75e:	f1b9 0f00 	cmp.w	r9, #0
 801c762:	bfa8      	it	ge
 801c764:	eba6 0609 	subge.w	r6, r6, r9
 801c768:	2e00      	cmp	r6, #0
 801c76a:	dd18      	ble.n	801c79e <_svfprintf_r+0x10e6>
 801c76c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c770:	482f      	ldr	r0, [pc, #188]	@ (801c830 <_svfprintf_r+0x1178>)
 801c772:	6020      	str	r0, [r4, #0]
 801c774:	2e10      	cmp	r6, #16
 801c776:	f103 0301 	add.w	r3, r3, #1
 801c77a:	f104 0108 	add.w	r1, r4, #8
 801c77e:	dc2d      	bgt.n	801c7dc <_svfprintf_r+0x1124>
 801c780:	6066      	str	r6, [r4, #4]
 801c782:	2b07      	cmp	r3, #7
 801c784:	4416      	add	r6, r2
 801c786:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801c78a:	dd3a      	ble.n	801c802 <_svfprintf_r+0x114a>
 801c78c:	9803      	ldr	r0, [sp, #12]
 801c78e:	aa26      	add	r2, sp, #152	@ 0x98
 801c790:	4659      	mov	r1, fp
 801c792:	f001 fe64 	bl	801e45e <__ssprint_r>
 801c796:	2800      	cmp	r0, #0
 801c798:	f040 8109 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c79c:	ac29      	add	r4, sp, #164	@ 0xa4
 801c79e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c7a0:	781b      	ldrb	r3, [r3, #0]
 801c7a2:	4498      	add	r8, r3
 801c7a4:	e733      	b.n	801c60e <_svfprintf_r+0xf56>
 801c7a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c7a8:	3b01      	subs	r3, #1
 801c7aa:	9309      	str	r3, [sp, #36]	@ 0x24
 801c7ac:	9b08      	ldr	r3, [sp, #32]
 801c7ae:	3b01      	subs	r3, #1
 801c7b0:	9308      	str	r3, [sp, #32]
 801c7b2:	e7ae      	b.n	801c712 <_svfprintf_r+0x105a>
 801c7b4:	9803      	ldr	r0, [sp, #12]
 801c7b6:	aa26      	add	r2, sp, #152	@ 0x98
 801c7b8:	4659      	mov	r1, fp
 801c7ba:	f001 fe50 	bl	801e45e <__ssprint_r>
 801c7be:	2800      	cmp	r0, #0
 801c7c0:	f040 80f5 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c7c4:	ac29      	add	r4, sp, #164	@ 0xa4
 801c7c6:	e7b2      	b.n	801c72e <_svfprintf_r+0x1076>
 801c7c8:	9803      	ldr	r0, [sp, #12]
 801c7ca:	aa26      	add	r2, sp, #152	@ 0x98
 801c7cc:	4659      	mov	r1, fp
 801c7ce:	f001 fe46 	bl	801e45e <__ssprint_r>
 801c7d2:	2800      	cmp	r0, #0
 801c7d4:	f040 80eb 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c7d8:	ac29      	add	r4, sp, #164	@ 0xa4
 801c7da:	e7be      	b.n	801c75a <_svfprintf_r+0x10a2>
 801c7dc:	2010      	movs	r0, #16
 801c7de:	4402      	add	r2, r0
 801c7e0:	2b07      	cmp	r3, #7
 801c7e2:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c7e6:	6060      	str	r0, [r4, #4]
 801c7e8:	dd08      	ble.n	801c7fc <_svfprintf_r+0x1144>
 801c7ea:	9803      	ldr	r0, [sp, #12]
 801c7ec:	aa26      	add	r2, sp, #152	@ 0x98
 801c7ee:	4659      	mov	r1, fp
 801c7f0:	f001 fe35 	bl	801e45e <__ssprint_r>
 801c7f4:	2800      	cmp	r0, #0
 801c7f6:	f040 80da 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c7fa:	a929      	add	r1, sp, #164	@ 0xa4
 801c7fc:	3e10      	subs	r6, #16
 801c7fe:	460c      	mov	r4, r1
 801c800:	e7b4      	b.n	801c76c <_svfprintf_r+0x10b4>
 801c802:	460c      	mov	r4, r1
 801c804:	e7cb      	b.n	801c79e <_svfprintf_r+0x10e6>
 801c806:	9803      	ldr	r0, [sp, #12]
 801c808:	aa26      	add	r2, sp, #152	@ 0x98
 801c80a:	4659      	mov	r1, fp
 801c80c:	f001 fe27 	bl	801e45e <__ssprint_r>
 801c810:	2800      	cmp	r0, #0
 801c812:	f040 80cc 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c816:	ac29      	add	r4, sp, #164	@ 0xa4
 801c818:	e717      	b.n	801c64a <_svfprintf_r+0xf92>
 801c81a:	9803      	ldr	r0, [sp, #12]
 801c81c:	aa26      	add	r2, sp, #152	@ 0x98
 801c81e:	4659      	mov	r1, fp
 801c820:	f001 fe1d 	bl	801e45e <__ssprint_r>
 801c824:	2800      	cmp	r0, #0
 801c826:	f040 80c2 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c82a:	ac29      	add	r4, sp, #164	@ 0xa4
 801c82c:	e724      	b.n	801c678 <_svfprintf_r+0xfc0>
 801c82e:	bf00      	nop
 801c830:	08021668 	.word	0x08021668
 801c834:	9904      	ldr	r1, [sp, #16]
 801c836:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c838:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c83a:	2901      	cmp	r1, #1
 801c83c:	f103 0301 	add.w	r3, r3, #1
 801c840:	f102 0201 	add.w	r2, r2, #1
 801c844:	f104 0608 	add.w	r6, r4, #8
 801c848:	dc02      	bgt.n	801c850 <_svfprintf_r+0x1198>
 801c84a:	07e9      	lsls	r1, r5, #31
 801c84c:	f140 8083 	bpl.w	801c956 <_svfprintf_r+0x129e>
 801c850:	2101      	movs	r1, #1
 801c852:	2a07      	cmp	r2, #7
 801c854:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c858:	f8c4 9000 	str.w	r9, [r4]
 801c85c:	6061      	str	r1, [r4, #4]
 801c85e:	dd08      	ble.n	801c872 <_svfprintf_r+0x11ba>
 801c860:	9803      	ldr	r0, [sp, #12]
 801c862:	aa26      	add	r2, sp, #152	@ 0x98
 801c864:	4659      	mov	r1, fp
 801c866:	f001 fdfa 	bl	801e45e <__ssprint_r>
 801c86a:	2800      	cmp	r0, #0
 801c86c:	f040 809f 	bne.w	801c9ae <_svfprintf_r+0x12f6>
 801c870:	ae29      	add	r6, sp, #164	@ 0xa4
 801c872:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801c874:	6033      	str	r3, [r6, #0]
 801c876:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c878:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c87a:	6073      	str	r3, [r6, #4]
 801c87c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c87e:	4413      	add	r3, r2
 801c880:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c882:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c884:	3301      	adds	r3, #1
 801c886:	2b07      	cmp	r3, #7
 801c888:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c88a:	dc33      	bgt.n	801c8f4 <_svfprintf_r+0x123c>
 801c88c:	3608      	adds	r6, #8
 801c88e:	9b04      	ldr	r3, [sp, #16]
 801c890:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801c894:	1e5c      	subs	r4, r3, #1
 801c896:	2200      	movs	r2, #0
 801c898:	2300      	movs	r3, #0
 801c89a:	e9dd 8727 	ldrd	r8, r7, [sp, #156]	@ 0x9c
 801c89e:	f7e4 f913 	bl	8000ac8 <__aeabi_dcmpeq>
 801c8a2:	2800      	cmp	r0, #0
 801c8a4:	d12f      	bne.n	801c906 <_svfprintf_r+0x124e>
 801c8a6:	f109 0201 	add.w	r2, r9, #1
 801c8aa:	e9c6 2400 	strd	r2, r4, [r6]
 801c8ae:	9a04      	ldr	r2, [sp, #16]
 801c8b0:	f108 0301 	add.w	r3, r8, #1
 801c8b4:	3f01      	subs	r7, #1
 801c8b6:	4417      	add	r7, r2
 801c8b8:	2b07      	cmp	r3, #7
 801c8ba:	e9cd 3727 	strd	r3, r7, [sp, #156]	@ 0x9c
 801c8be:	dd53      	ble.n	801c968 <_svfprintf_r+0x12b0>
 801c8c0:	9803      	ldr	r0, [sp, #12]
 801c8c2:	aa26      	add	r2, sp, #152	@ 0x98
 801c8c4:	4659      	mov	r1, fp
 801c8c6:	f001 fdca 	bl	801e45e <__ssprint_r>
 801c8ca:	2800      	cmp	r0, #0
 801c8cc:	d16f      	bne.n	801c9ae <_svfprintf_r+0x12f6>
 801c8ce:	ae29      	add	r6, sp, #164	@ 0xa4
 801c8d0:	ab22      	add	r3, sp, #136	@ 0x88
 801c8d2:	6033      	str	r3, [r6, #0]
 801c8d4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c8d6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c8d8:	6073      	str	r3, [r6, #4]
 801c8da:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c8dc:	4413      	add	r3, r2
 801c8de:	9328      	str	r3, [sp, #160]	@ 0xa0
 801c8e0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c8e2:	3301      	adds	r3, #1
 801c8e4:	2b07      	cmp	r3, #7
 801c8e6:	9327      	str	r3, [sp, #156]	@ 0x9c
 801c8e8:	f73f ada0 	bgt.w	801c42c <_svfprintf_r+0xd74>
 801c8ec:	f106 0408 	add.w	r4, r6, #8
 801c8f0:	f7ff baec 	b.w	801becc <_svfprintf_r+0x814>
 801c8f4:	9803      	ldr	r0, [sp, #12]
 801c8f6:	aa26      	add	r2, sp, #152	@ 0x98
 801c8f8:	4659      	mov	r1, fp
 801c8fa:	f001 fdb0 	bl	801e45e <__ssprint_r>
 801c8fe:	2800      	cmp	r0, #0
 801c900:	d155      	bne.n	801c9ae <_svfprintf_r+0x12f6>
 801c902:	ae29      	add	r6, sp, #164	@ 0xa4
 801c904:	e7c3      	b.n	801c88e <_svfprintf_r+0x11d6>
 801c906:	9b04      	ldr	r3, [sp, #16]
 801c908:	2b01      	cmp	r3, #1
 801c90a:	dde1      	ble.n	801c8d0 <_svfprintf_r+0x1218>
 801c90c:	4f57      	ldr	r7, [pc, #348]	@ (801ca6c <_svfprintf_r+0x13b4>)
 801c90e:	f04f 0810 	mov.w	r8, #16
 801c912:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c916:	2c10      	cmp	r4, #16
 801c918:	f103 0301 	add.w	r3, r3, #1
 801c91c:	f106 0108 	add.w	r1, r6, #8
 801c920:	6037      	str	r7, [r6, #0]
 801c922:	dc07      	bgt.n	801c934 <_svfprintf_r+0x127c>
 801c924:	6074      	str	r4, [r6, #4]
 801c926:	2b07      	cmp	r3, #7
 801c928:	4414      	add	r4, r2
 801c92a:	e9cd 3427 	strd	r3, r4, [sp, #156]	@ 0x9c
 801c92e:	dcc7      	bgt.n	801c8c0 <_svfprintf_r+0x1208>
 801c930:	460e      	mov	r6, r1
 801c932:	e7cd      	b.n	801c8d0 <_svfprintf_r+0x1218>
 801c934:	3210      	adds	r2, #16
 801c936:	2b07      	cmp	r3, #7
 801c938:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c93c:	f8c6 8004 	str.w	r8, [r6, #4]
 801c940:	dd06      	ble.n	801c950 <_svfprintf_r+0x1298>
 801c942:	9803      	ldr	r0, [sp, #12]
 801c944:	aa26      	add	r2, sp, #152	@ 0x98
 801c946:	4659      	mov	r1, fp
 801c948:	f001 fd89 	bl	801e45e <__ssprint_r>
 801c94c:	bb78      	cbnz	r0, 801c9ae <_svfprintf_r+0x12f6>
 801c94e:	a929      	add	r1, sp, #164	@ 0xa4
 801c950:	3c10      	subs	r4, #16
 801c952:	460e      	mov	r6, r1
 801c954:	e7dd      	b.n	801c912 <_svfprintf_r+0x125a>
 801c956:	2101      	movs	r1, #1
 801c958:	2a07      	cmp	r2, #7
 801c95a:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801c95e:	f8c4 9000 	str.w	r9, [r4]
 801c962:	6061      	str	r1, [r4, #4]
 801c964:	ddb4      	ble.n	801c8d0 <_svfprintf_r+0x1218>
 801c966:	e7ab      	b.n	801c8c0 <_svfprintf_r+0x1208>
 801c968:	3608      	adds	r6, #8
 801c96a:	e7b1      	b.n	801c8d0 <_svfprintf_r+0x1218>
 801c96c:	460c      	mov	r4, r1
 801c96e:	f7ff baad 	b.w	801becc <_svfprintf_r+0x814>
 801c972:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c974:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801c976:	1a9d      	subs	r5, r3, r2
 801c978:	2d00      	cmp	r5, #0
 801c97a:	f77f aaaa 	ble.w	801bed2 <_svfprintf_r+0x81a>
 801c97e:	4e3c      	ldr	r6, [pc, #240]	@ (801ca70 <_svfprintf_r+0x13b8>)
 801c980:	2710      	movs	r7, #16
 801c982:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801c986:	2d10      	cmp	r5, #16
 801c988:	f103 0301 	add.w	r3, r3, #1
 801c98c:	6026      	str	r6, [r4, #0]
 801c98e:	dc18      	bgt.n	801c9c2 <_svfprintf_r+0x130a>
 801c990:	442a      	add	r2, r5
 801c992:	2b07      	cmp	r3, #7
 801c994:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c998:	6065      	str	r5, [r4, #4]
 801c99a:	f77f aa9a 	ble.w	801bed2 <_svfprintf_r+0x81a>
 801c99e:	9803      	ldr	r0, [sp, #12]
 801c9a0:	aa26      	add	r2, sp, #152	@ 0x98
 801c9a2:	4659      	mov	r1, fp
 801c9a4:	f001 fd5b 	bl	801e45e <__ssprint_r>
 801c9a8:	2800      	cmp	r0, #0
 801c9aa:	f43f aa92 	beq.w	801bed2 <_svfprintf_r+0x81a>
 801c9ae:	f1ba 0f00 	cmp.w	sl, #0
 801c9b2:	f43f a89a 	beq.w	801baea <_svfprintf_r+0x432>
 801c9b6:	9803      	ldr	r0, [sp, #12]
 801c9b8:	4651      	mov	r1, sl
 801c9ba:	f7fe fb77 	bl	801b0ac <_free_r>
 801c9be:	f7ff b894 	b.w	801baea <_svfprintf_r+0x432>
 801c9c2:	3210      	adds	r2, #16
 801c9c4:	2b07      	cmp	r3, #7
 801c9c6:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801c9ca:	6067      	str	r7, [r4, #4]
 801c9cc:	dc02      	bgt.n	801c9d4 <_svfprintf_r+0x131c>
 801c9ce:	3408      	adds	r4, #8
 801c9d0:	3d10      	subs	r5, #16
 801c9d2:	e7d6      	b.n	801c982 <_svfprintf_r+0x12ca>
 801c9d4:	9803      	ldr	r0, [sp, #12]
 801c9d6:	aa26      	add	r2, sp, #152	@ 0x98
 801c9d8:	4659      	mov	r1, fp
 801c9da:	f001 fd40 	bl	801e45e <__ssprint_r>
 801c9de:	2800      	cmp	r0, #0
 801c9e0:	d1e5      	bne.n	801c9ae <_svfprintf_r+0x12f6>
 801c9e2:	ac29      	add	r4, sp, #164	@ 0xa4
 801c9e4:	e7f4      	b.n	801c9d0 <_svfprintf_r+0x1318>
 801c9e6:	9803      	ldr	r0, [sp, #12]
 801c9e8:	4651      	mov	r1, sl
 801c9ea:	f7fe fb5f 	bl	801b0ac <_free_r>
 801c9ee:	f7ff ba88 	b.w	801bf02 <_svfprintf_r+0x84a>
 801c9f2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c9f4:	2b00      	cmp	r3, #0
 801c9f6:	f43f a878 	beq.w	801baea <_svfprintf_r+0x432>
 801c9fa:	9803      	ldr	r0, [sp, #12]
 801c9fc:	aa26      	add	r2, sp, #152	@ 0x98
 801c9fe:	4659      	mov	r1, fp
 801ca00:	f001 fd2d 	bl	801e45e <__ssprint_r>
 801ca04:	f7ff b871 	b.w	801baea <_svfprintf_r+0x432>
 801ca08:	ea56 0207 	orrs.w	r2, r6, r7
 801ca0c:	9508      	str	r5, [sp, #32]
 801ca0e:	f43f ab7a 	beq.w	801c106 <_svfprintf_r+0xa4e>
 801ca12:	2b01      	cmp	r3, #1
 801ca14:	f43f abfb 	beq.w	801c20e <_svfprintf_r+0xb56>
 801ca18:	2b02      	cmp	r3, #2
 801ca1a:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801ca1e:	f43f ac3f 	beq.w	801c2a0 <_svfprintf_r+0xbe8>
 801ca22:	f006 0307 	and.w	r3, r6, #7
 801ca26:	08f6      	lsrs	r6, r6, #3
 801ca28:	ea46 7647 	orr.w	r6, r6, r7, lsl #29
 801ca2c:	08ff      	lsrs	r7, r7, #3
 801ca2e:	3330      	adds	r3, #48	@ 0x30
 801ca30:	ea56 0107 	orrs.w	r1, r6, r7
 801ca34:	464a      	mov	r2, r9
 801ca36:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801ca3a:	d1f2      	bne.n	801ca22 <_svfprintf_r+0x136a>
 801ca3c:	9908      	ldr	r1, [sp, #32]
 801ca3e:	07c8      	lsls	r0, r1, #31
 801ca40:	d506      	bpl.n	801ca50 <_svfprintf_r+0x1398>
 801ca42:	2b30      	cmp	r3, #48	@ 0x30
 801ca44:	d004      	beq.n	801ca50 <_svfprintf_r+0x1398>
 801ca46:	2330      	movs	r3, #48	@ 0x30
 801ca48:	f809 3c01 	strb.w	r3, [r9, #-1]
 801ca4c:	f1a2 0902 	sub.w	r9, r2, #2
 801ca50:	ab52      	add	r3, sp, #328	@ 0x148
 801ca52:	9d08      	ldr	r5, [sp, #32]
 801ca54:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 801ca58:	f04f 0a00 	mov.w	sl, #0
 801ca5c:	eba3 0809 	sub.w	r8, r3, r9
 801ca60:	4657      	mov	r7, sl
 801ca62:	f8cd a020 	str.w	sl, [sp, #32]
 801ca66:	4656      	mov	r6, sl
 801ca68:	f7ff b97c 	b.w	801bd64 <_svfprintf_r+0x6ac>
 801ca6c:	08021668 	.word	0x08021668
 801ca70:	08021678 	.word	0x08021678

0801ca74 <_fclose_r>:
 801ca74:	b570      	push	{r4, r5, r6, lr}
 801ca76:	4605      	mov	r5, r0
 801ca78:	460c      	mov	r4, r1
 801ca7a:	b1b1      	cbz	r1, 801caaa <_fclose_r+0x36>
 801ca7c:	b118      	cbz	r0, 801ca86 <_fclose_r+0x12>
 801ca7e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801ca80:	b90b      	cbnz	r3, 801ca86 <_fclose_r+0x12>
 801ca82:	f7fe f949 	bl	801ad18 <__sinit>
 801ca86:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801ca88:	07de      	lsls	r6, r3, #31
 801ca8a:	d405      	bmi.n	801ca98 <_fclose_r+0x24>
 801ca8c:	89a3      	ldrh	r3, [r4, #12]
 801ca8e:	0598      	lsls	r0, r3, #22
 801ca90:	d402      	bmi.n	801ca98 <_fclose_r+0x24>
 801ca92:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801ca94:	f7fe fa94 	bl	801afc0 <__retarget_lock_acquire_recursive>
 801ca98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ca9c:	b943      	cbnz	r3, 801cab0 <_fclose_r+0x3c>
 801ca9e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801caa0:	07d9      	lsls	r1, r3, #31
 801caa2:	d402      	bmi.n	801caaa <_fclose_r+0x36>
 801caa4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801caa6:	f7fe fa8c 	bl	801afc2 <__retarget_lock_release_recursive>
 801caaa:	2600      	movs	r6, #0
 801caac:	4630      	mov	r0, r6
 801caae:	bd70      	pop	{r4, r5, r6, pc}
 801cab0:	4621      	mov	r1, r4
 801cab2:	4628      	mov	r0, r5
 801cab4:	f000 f834 	bl	801cb20 <__sflush_r>
 801cab8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801caba:	4606      	mov	r6, r0
 801cabc:	b133      	cbz	r3, 801cacc <_fclose_r+0x58>
 801cabe:	69e1      	ldr	r1, [r4, #28]
 801cac0:	4628      	mov	r0, r5
 801cac2:	4798      	blx	r3
 801cac4:	2800      	cmp	r0, #0
 801cac6:	bfb8      	it	lt
 801cac8:	f04f 36ff 	movlt.w	r6, #4294967295
 801cacc:	89a3      	ldrh	r3, [r4, #12]
 801cace:	061a      	lsls	r2, r3, #24
 801cad0:	d503      	bpl.n	801cada <_fclose_r+0x66>
 801cad2:	6921      	ldr	r1, [r4, #16]
 801cad4:	4628      	mov	r0, r5
 801cad6:	f7fe fae9 	bl	801b0ac <_free_r>
 801cada:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801cadc:	b141      	cbz	r1, 801caf0 <_fclose_r+0x7c>
 801cade:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801cae2:	4299      	cmp	r1, r3
 801cae4:	d002      	beq.n	801caec <_fclose_r+0x78>
 801cae6:	4628      	mov	r0, r5
 801cae8:	f7fe fae0 	bl	801b0ac <_free_r>
 801caec:	2300      	movs	r3, #0
 801caee:	6323      	str	r3, [r4, #48]	@ 0x30
 801caf0:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801caf2:	b121      	cbz	r1, 801cafe <_fclose_r+0x8a>
 801caf4:	4628      	mov	r0, r5
 801caf6:	f7fe fad9 	bl	801b0ac <_free_r>
 801cafa:	2300      	movs	r3, #0
 801cafc:	6463      	str	r3, [r4, #68]	@ 0x44
 801cafe:	f7fe f8ff 	bl	801ad00 <__sfp_lock_acquire>
 801cb02:	2300      	movs	r3, #0
 801cb04:	81a3      	strh	r3, [r4, #12]
 801cb06:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cb08:	07db      	lsls	r3, r3, #31
 801cb0a:	d402      	bmi.n	801cb12 <_fclose_r+0x9e>
 801cb0c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cb0e:	f7fe fa58 	bl	801afc2 <__retarget_lock_release_recursive>
 801cb12:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cb14:	f7fe fa53 	bl	801afbe <__retarget_lock_close_recursive>
 801cb18:	f7fe f8f8 	bl	801ad0c <__sfp_lock_release>
 801cb1c:	e7c6      	b.n	801caac <_fclose_r+0x38>
	...

0801cb20 <__sflush_r>:
 801cb20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cb24:	4605      	mov	r5, r0
 801cb26:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 801cb2a:	0706      	lsls	r6, r0, #28
 801cb2c:	460c      	mov	r4, r1
 801cb2e:	d457      	bmi.n	801cbe0 <__sflush_r+0xc0>
 801cb30:	f440 6300 	orr.w	r3, r0, #2048	@ 0x800
 801cb34:	818b      	strh	r3, [r1, #12]
 801cb36:	684b      	ldr	r3, [r1, #4]
 801cb38:	2b00      	cmp	r3, #0
 801cb3a:	dc02      	bgt.n	801cb42 <__sflush_r+0x22>
 801cb3c:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 801cb3e:	2b00      	cmp	r3, #0
 801cb40:	dd4c      	ble.n	801cbdc <__sflush_r+0xbc>
 801cb42:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801cb44:	2e00      	cmp	r6, #0
 801cb46:	d049      	beq.n	801cbdc <__sflush_r+0xbc>
 801cb48:	2300      	movs	r3, #0
 801cb4a:	f410 5280 	ands.w	r2, r0, #4096	@ 0x1000
 801cb4e:	682f      	ldr	r7, [r5, #0]
 801cb50:	69e1      	ldr	r1, [r4, #28]
 801cb52:	602b      	str	r3, [r5, #0]
 801cb54:	d034      	beq.n	801cbc0 <__sflush_r+0xa0>
 801cb56:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801cb58:	89a3      	ldrh	r3, [r4, #12]
 801cb5a:	0759      	lsls	r1, r3, #29
 801cb5c:	d505      	bpl.n	801cb6a <__sflush_r+0x4a>
 801cb5e:	6863      	ldr	r3, [r4, #4]
 801cb60:	1ad2      	subs	r2, r2, r3
 801cb62:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801cb64:	b10b      	cbz	r3, 801cb6a <__sflush_r+0x4a>
 801cb66:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801cb68:	1ad2      	subs	r2, r2, r3
 801cb6a:	2300      	movs	r3, #0
 801cb6c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801cb6e:	69e1      	ldr	r1, [r4, #28]
 801cb70:	4628      	mov	r0, r5
 801cb72:	47b0      	blx	r6
 801cb74:	1c43      	adds	r3, r0, #1
 801cb76:	d106      	bne.n	801cb86 <__sflush_r+0x66>
 801cb78:	682a      	ldr	r2, [r5, #0]
 801cb7a:	2a1d      	cmp	r2, #29
 801cb7c:	d848      	bhi.n	801cc10 <__sflush_r+0xf0>
 801cb7e:	4b2b      	ldr	r3, [pc, #172]	@ (801cc2c <__sflush_r+0x10c>)
 801cb80:	4113      	asrs	r3, r2
 801cb82:	07de      	lsls	r6, r3, #31
 801cb84:	d444      	bmi.n	801cc10 <__sflush_r+0xf0>
 801cb86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cb8a:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 801cb8e:	81a2      	strh	r2, [r4, #12]
 801cb90:	2200      	movs	r2, #0
 801cb92:	6062      	str	r2, [r4, #4]
 801cb94:	04d9      	lsls	r1, r3, #19
 801cb96:	6922      	ldr	r2, [r4, #16]
 801cb98:	6022      	str	r2, [r4, #0]
 801cb9a:	d504      	bpl.n	801cba6 <__sflush_r+0x86>
 801cb9c:	1c42      	adds	r2, r0, #1
 801cb9e:	d101      	bne.n	801cba4 <__sflush_r+0x84>
 801cba0:	682b      	ldr	r3, [r5, #0]
 801cba2:	b903      	cbnz	r3, 801cba6 <__sflush_r+0x86>
 801cba4:	6520      	str	r0, [r4, #80]	@ 0x50
 801cba6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801cba8:	602f      	str	r7, [r5, #0]
 801cbaa:	b1b9      	cbz	r1, 801cbdc <__sflush_r+0xbc>
 801cbac:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801cbb0:	4299      	cmp	r1, r3
 801cbb2:	d002      	beq.n	801cbba <__sflush_r+0x9a>
 801cbb4:	4628      	mov	r0, r5
 801cbb6:	f7fe fa79 	bl	801b0ac <_free_r>
 801cbba:	2300      	movs	r3, #0
 801cbbc:	6323      	str	r3, [r4, #48]	@ 0x30
 801cbbe:	e00d      	b.n	801cbdc <__sflush_r+0xbc>
 801cbc0:	2301      	movs	r3, #1
 801cbc2:	4628      	mov	r0, r5
 801cbc4:	47b0      	blx	r6
 801cbc6:	4602      	mov	r2, r0
 801cbc8:	1c50      	adds	r0, r2, #1
 801cbca:	d1c5      	bne.n	801cb58 <__sflush_r+0x38>
 801cbcc:	682b      	ldr	r3, [r5, #0]
 801cbce:	2b00      	cmp	r3, #0
 801cbd0:	d0c2      	beq.n	801cb58 <__sflush_r+0x38>
 801cbd2:	2b1d      	cmp	r3, #29
 801cbd4:	d001      	beq.n	801cbda <__sflush_r+0xba>
 801cbd6:	2b16      	cmp	r3, #22
 801cbd8:	d11a      	bne.n	801cc10 <__sflush_r+0xf0>
 801cbda:	602f      	str	r7, [r5, #0]
 801cbdc:	2000      	movs	r0, #0
 801cbde:	e01e      	b.n	801cc1e <__sflush_r+0xfe>
 801cbe0:	690f      	ldr	r7, [r1, #16]
 801cbe2:	2f00      	cmp	r7, #0
 801cbe4:	d0fa      	beq.n	801cbdc <__sflush_r+0xbc>
 801cbe6:	0783      	lsls	r3, r0, #30
 801cbe8:	680e      	ldr	r6, [r1, #0]
 801cbea:	bf08      	it	eq
 801cbec:	694b      	ldreq	r3, [r1, #20]
 801cbee:	600f      	str	r7, [r1, #0]
 801cbf0:	bf18      	it	ne
 801cbf2:	2300      	movne	r3, #0
 801cbf4:	eba6 0807 	sub.w	r8, r6, r7
 801cbf8:	608b      	str	r3, [r1, #8]
 801cbfa:	f1b8 0f00 	cmp.w	r8, #0
 801cbfe:	dded      	ble.n	801cbdc <__sflush_r+0xbc>
 801cc00:	69e1      	ldr	r1, [r4, #28]
 801cc02:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 801cc04:	4643      	mov	r3, r8
 801cc06:	463a      	mov	r2, r7
 801cc08:	4628      	mov	r0, r5
 801cc0a:	47b0      	blx	r6
 801cc0c:	2800      	cmp	r0, #0
 801cc0e:	dc08      	bgt.n	801cc22 <__sflush_r+0x102>
 801cc10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801cc14:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801cc18:	81a3      	strh	r3, [r4, #12]
 801cc1a:	f04f 30ff 	mov.w	r0, #4294967295
 801cc1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cc22:	4407      	add	r7, r0
 801cc24:	eba8 0800 	sub.w	r8, r8, r0
 801cc28:	e7e7      	b.n	801cbfa <__sflush_r+0xda>
 801cc2a:	bf00      	nop
 801cc2c:	dfbffffe 	.word	0xdfbffffe

0801cc30 <_fflush_r>:
 801cc30:	b538      	push	{r3, r4, r5, lr}
 801cc32:	460c      	mov	r4, r1
 801cc34:	4605      	mov	r5, r0
 801cc36:	b118      	cbz	r0, 801cc40 <_fflush_r+0x10>
 801cc38:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801cc3a:	b90b      	cbnz	r3, 801cc40 <_fflush_r+0x10>
 801cc3c:	f7fe f86c 	bl	801ad18 <__sinit>
 801cc40:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 801cc44:	b1b8      	cbz	r0, 801cc76 <_fflush_r+0x46>
 801cc46:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cc48:	07db      	lsls	r3, r3, #31
 801cc4a:	d404      	bmi.n	801cc56 <_fflush_r+0x26>
 801cc4c:	0581      	lsls	r1, r0, #22
 801cc4e:	d402      	bmi.n	801cc56 <_fflush_r+0x26>
 801cc50:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cc52:	f7fe f9b5 	bl	801afc0 <__retarget_lock_acquire_recursive>
 801cc56:	4628      	mov	r0, r5
 801cc58:	4621      	mov	r1, r4
 801cc5a:	f7ff ff61 	bl	801cb20 <__sflush_r>
 801cc5e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801cc60:	07da      	lsls	r2, r3, #31
 801cc62:	4605      	mov	r5, r0
 801cc64:	d405      	bmi.n	801cc72 <_fflush_r+0x42>
 801cc66:	89a3      	ldrh	r3, [r4, #12]
 801cc68:	059b      	lsls	r3, r3, #22
 801cc6a:	d402      	bmi.n	801cc72 <_fflush_r+0x42>
 801cc6c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801cc6e:	f7fe f9a8 	bl	801afc2 <__retarget_lock_release_recursive>
 801cc72:	4628      	mov	r0, r5
 801cc74:	bd38      	pop	{r3, r4, r5, pc}
 801cc76:	4605      	mov	r5, r0
 801cc78:	e7fb      	b.n	801cc72 <_fflush_r+0x42>

0801cc7a <strncpy>:
 801cc7a:	b510      	push	{r4, lr}
 801cc7c:	3901      	subs	r1, #1
 801cc7e:	4603      	mov	r3, r0
 801cc80:	b132      	cbz	r2, 801cc90 <strncpy+0x16>
 801cc82:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801cc86:	f803 4b01 	strb.w	r4, [r3], #1
 801cc8a:	3a01      	subs	r2, #1
 801cc8c:	2c00      	cmp	r4, #0
 801cc8e:	d1f7      	bne.n	801cc80 <strncpy+0x6>
 801cc90:	441a      	add	r2, r3
 801cc92:	2100      	movs	r1, #0
 801cc94:	4293      	cmp	r3, r2
 801cc96:	d100      	bne.n	801cc9a <strncpy+0x20>
 801cc98:	bd10      	pop	{r4, pc}
 801cc9a:	f803 1b01 	strb.w	r1, [r3], #1
 801cc9e:	e7f9      	b.n	801cc94 <strncpy+0x1a>

0801cca0 <__locale_mb_cur_max>:
 801cca0:	4b01      	ldr	r3, [pc, #4]	@ (801cca8 <__locale_mb_cur_max+0x8>)
 801cca2:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
 801cca6:	4770      	bx	lr
 801cca8:	2000065c 	.word	0x2000065c

0801ccac <_localeconv_r>:
 801ccac:	4800      	ldr	r0, [pc, #0]	@ (801ccb0 <_localeconv_r+0x4>)
 801ccae:	4770      	bx	lr
 801ccb0:	2000074c 	.word	0x2000074c

0801ccb4 <_sbrk_r>:
 801ccb4:	b538      	push	{r3, r4, r5, lr}
 801ccb6:	4d06      	ldr	r5, [pc, #24]	@ (801ccd0 <_sbrk_r+0x1c>)
 801ccb8:	2300      	movs	r3, #0
 801ccba:	4604      	mov	r4, r0
 801ccbc:	4608      	mov	r0, r1
 801ccbe:	602b      	str	r3, [r5, #0]
 801ccc0:	f7e7 f90c 	bl	8003edc <_sbrk>
 801ccc4:	1c43      	adds	r3, r0, #1
 801ccc6:	d102      	bne.n	801ccce <_sbrk_r+0x1a>
 801ccc8:	682b      	ldr	r3, [r5, #0]
 801ccca:	b103      	cbz	r3, 801ccce <_sbrk_r+0x1a>
 801cccc:	6023      	str	r3, [r4, #0]
 801ccce:	bd38      	pop	{r3, r4, r5, pc}
 801ccd0:	2000d0b4 	.word	0x2000d0b4

0801ccd4 <__libc_fini_array>:
 801ccd4:	b538      	push	{r3, r4, r5, lr}
 801ccd6:	4d07      	ldr	r5, [pc, #28]	@ (801ccf4 <__libc_fini_array+0x20>)
 801ccd8:	4c07      	ldr	r4, [pc, #28]	@ (801ccf8 <__libc_fini_array+0x24>)
 801ccda:	1b64      	subs	r4, r4, r5
 801ccdc:	10a4      	asrs	r4, r4, #2
 801ccde:	b91c      	cbnz	r4, 801cce8 <__libc_fini_array+0x14>
 801cce0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cce4:	f004 b8e6 	b.w	8020eb4 <_fini>
 801cce8:	3c01      	subs	r4, #1
 801ccea:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 801ccee:	4798      	blx	r3
 801ccf0:	e7f5      	b.n	801ccde <__libc_fini_array+0xa>
 801ccf2:	bf00      	nop
 801ccf4:	08021c18 	.word	0x08021c18
 801ccf8:	08021c1c 	.word	0x08021c1c

0801ccfc <sysconf>:
 801ccfc:	2808      	cmp	r0, #8
 801ccfe:	b508      	push	{r3, lr}
 801cd00:	d006      	beq.n	801cd10 <sysconf+0x14>
 801cd02:	f7fe f931 	bl	801af68 <__errno>
 801cd06:	2316      	movs	r3, #22
 801cd08:	6003      	str	r3, [r0, #0]
 801cd0a:	f04f 30ff 	mov.w	r0, #4294967295
 801cd0e:	bd08      	pop	{r3, pc}
 801cd10:	2080      	movs	r0, #128	@ 0x80
 801cd12:	e7fc      	b.n	801cd0e <sysconf+0x12>

0801cd14 <frexp>:
 801cd14:	b570      	push	{r4, r5, r6, lr}
 801cd16:	2100      	movs	r1, #0
 801cd18:	ec55 4b10 	vmov	r4, r5, d0
 801cd1c:	6001      	str	r1, [r0, #0]
 801cd1e:	4915      	ldr	r1, [pc, #84]	@ (801cd74 <frexp+0x60>)
 801cd20:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801cd24:	428a      	cmp	r2, r1
 801cd26:	4606      	mov	r6, r0
 801cd28:	462b      	mov	r3, r5
 801cd2a:	d820      	bhi.n	801cd6e <frexp+0x5a>
 801cd2c:	4621      	mov	r1, r4
 801cd2e:	4311      	orrs	r1, r2
 801cd30:	d01d      	beq.n	801cd6e <frexp+0x5a>
 801cd32:	4911      	ldr	r1, [pc, #68]	@ (801cd78 <frexp+0x64>)
 801cd34:	4029      	ands	r1, r5
 801cd36:	b961      	cbnz	r1, 801cd52 <frexp+0x3e>
 801cd38:	4b10      	ldr	r3, [pc, #64]	@ (801cd7c <frexp+0x68>)
 801cd3a:	2200      	movs	r2, #0
 801cd3c:	4620      	mov	r0, r4
 801cd3e:	4629      	mov	r1, r5
 801cd40:	f7e3 fc5a 	bl	80005f8 <__aeabi_dmul>
 801cd44:	460b      	mov	r3, r1
 801cd46:	f021 4200 	bic.w	r2, r1, #2147483648	@ 0x80000000
 801cd4a:	f06f 0135 	mvn.w	r1, #53	@ 0x35
 801cd4e:	4604      	mov	r4, r0
 801cd50:	6031      	str	r1, [r6, #0]
 801cd52:	6831      	ldr	r1, [r6, #0]
 801cd54:	1512      	asrs	r2, r2, #20
 801cd56:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 801cd5a:	f2a2 32fe 	subw	r2, r2, #1022	@ 0x3fe
 801cd5e:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 801cd62:	4411      	add	r1, r2
 801cd64:	f043 557f 	orr.w	r5, r3, #1069547520	@ 0x3fc00000
 801cd68:	6031      	str	r1, [r6, #0]
 801cd6a:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
 801cd6e:	ec45 4b10 	vmov	d0, r4, r5
 801cd72:	bd70      	pop	{r4, r5, r6, pc}
 801cd74:	7fefffff 	.word	0x7fefffff
 801cd78:	7ff00000 	.word	0x7ff00000
 801cd7c:	43500000 	.word	0x43500000

0801cd80 <__register_exitproc>:
 801cd80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cd84:	f8df a074 	ldr.w	sl, [pc, #116]	@ 801cdfc <__register_exitproc+0x7c>
 801cd88:	4606      	mov	r6, r0
 801cd8a:	f8da 0000 	ldr.w	r0, [sl]
 801cd8e:	4698      	mov	r8, r3
 801cd90:	460f      	mov	r7, r1
 801cd92:	4691      	mov	r9, r2
 801cd94:	f7fe f914 	bl	801afc0 <__retarget_lock_acquire_recursive>
 801cd98:	4b16      	ldr	r3, [pc, #88]	@ (801cdf4 <__register_exitproc+0x74>)
 801cd9a:	681c      	ldr	r4, [r3, #0]
 801cd9c:	b90c      	cbnz	r4, 801cda2 <__register_exitproc+0x22>
 801cd9e:	4c16      	ldr	r4, [pc, #88]	@ (801cdf8 <__register_exitproc+0x78>)
 801cda0:	601c      	str	r4, [r3, #0]
 801cda2:	6865      	ldr	r5, [r4, #4]
 801cda4:	f8da 0000 	ldr.w	r0, [sl]
 801cda8:	2d1f      	cmp	r5, #31
 801cdaa:	dd05      	ble.n	801cdb8 <__register_exitproc+0x38>
 801cdac:	f7fe f909 	bl	801afc2 <__retarget_lock_release_recursive>
 801cdb0:	f04f 30ff 	mov.w	r0, #4294967295
 801cdb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cdb8:	b19e      	cbz	r6, 801cde2 <__register_exitproc+0x62>
 801cdba:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 801cdbe:	2201      	movs	r2, #1
 801cdc0:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
 801cdc4:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
 801cdc8:	40aa      	lsls	r2, r5
 801cdca:	4313      	orrs	r3, r2
 801cdcc:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
 801cdd0:	2e02      	cmp	r6, #2
 801cdd2:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
 801cdd6:	bf02      	ittt	eq
 801cdd8:	f8d4 318c 	ldreq.w	r3, [r4, #396]	@ 0x18c
 801cddc:	4313      	orreq	r3, r2
 801cdde:	f8c4 318c 	streq.w	r3, [r4, #396]	@ 0x18c
 801cde2:	1c6b      	adds	r3, r5, #1
 801cde4:	3502      	adds	r5, #2
 801cde6:	6063      	str	r3, [r4, #4]
 801cde8:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 801cdec:	f7fe f8e9 	bl	801afc2 <__retarget_lock_release_recursive>
 801cdf0:	2000      	movs	r0, #0
 801cdf2:	e7df      	b.n	801cdb4 <__register_exitproc+0x34>
 801cdf4:	2000d0bc 	.word	0x2000d0bc
 801cdf8:	2000d0f4 	.word	0x2000d0f4
 801cdfc:	20000248 	.word	0x20000248

0801ce00 <quorem>:
 801ce00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce04:	6903      	ldr	r3, [r0, #16]
 801ce06:	690c      	ldr	r4, [r1, #16]
 801ce08:	42a3      	cmp	r3, r4
 801ce0a:	4607      	mov	r7, r0
 801ce0c:	db7e      	blt.n	801cf0c <quorem+0x10c>
 801ce0e:	3c01      	subs	r4, #1
 801ce10:	f101 0814 	add.w	r8, r1, #20
 801ce14:	00a3      	lsls	r3, r4, #2
 801ce16:	f100 0514 	add.w	r5, r0, #20
 801ce1a:	9300      	str	r3, [sp, #0]
 801ce1c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801ce20:	9301      	str	r3, [sp, #4]
 801ce22:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801ce26:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801ce2a:	3301      	adds	r3, #1
 801ce2c:	429a      	cmp	r2, r3
 801ce2e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801ce32:	fbb2 f6f3 	udiv	r6, r2, r3
 801ce36:	d32e      	bcc.n	801ce96 <quorem+0x96>
 801ce38:	f04f 0a00 	mov.w	sl, #0
 801ce3c:	46c4      	mov	ip, r8
 801ce3e:	46ae      	mov	lr, r5
 801ce40:	46d3      	mov	fp, sl
 801ce42:	f85c 3b04 	ldr.w	r3, [ip], #4
 801ce46:	b298      	uxth	r0, r3
 801ce48:	fb06 a000 	mla	r0, r6, r0, sl
 801ce4c:	0c02      	lsrs	r2, r0, #16
 801ce4e:	0c1b      	lsrs	r3, r3, #16
 801ce50:	fb06 2303 	mla	r3, r6, r3, r2
 801ce54:	f8de 2000 	ldr.w	r2, [lr]
 801ce58:	b280      	uxth	r0, r0
 801ce5a:	b292      	uxth	r2, r2
 801ce5c:	1a12      	subs	r2, r2, r0
 801ce5e:	445a      	add	r2, fp
 801ce60:	f8de 0000 	ldr.w	r0, [lr]
 801ce64:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801ce68:	b29b      	uxth	r3, r3
 801ce6a:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 801ce6e:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 801ce72:	b292      	uxth	r2, r2
 801ce74:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 801ce78:	45e1      	cmp	r9, ip
 801ce7a:	f84e 2b04 	str.w	r2, [lr], #4
 801ce7e:	ea4f 4b23 	mov.w	fp, r3, asr #16
 801ce82:	d2de      	bcs.n	801ce42 <quorem+0x42>
 801ce84:	9b00      	ldr	r3, [sp, #0]
 801ce86:	58eb      	ldr	r3, [r5, r3]
 801ce88:	b92b      	cbnz	r3, 801ce96 <quorem+0x96>
 801ce8a:	9b01      	ldr	r3, [sp, #4]
 801ce8c:	3b04      	subs	r3, #4
 801ce8e:	429d      	cmp	r5, r3
 801ce90:	461a      	mov	r2, r3
 801ce92:	d32f      	bcc.n	801cef4 <quorem+0xf4>
 801ce94:	613c      	str	r4, [r7, #16]
 801ce96:	4638      	mov	r0, r7
 801ce98:	f001 f824 	bl	801dee4 <__mcmp>
 801ce9c:	2800      	cmp	r0, #0
 801ce9e:	db25      	blt.n	801ceec <quorem+0xec>
 801cea0:	4629      	mov	r1, r5
 801cea2:	2000      	movs	r0, #0
 801cea4:	f858 2b04 	ldr.w	r2, [r8], #4
 801cea8:	f8d1 c000 	ldr.w	ip, [r1]
 801ceac:	fa1f fe82 	uxth.w	lr, r2
 801ceb0:	fa1f f38c 	uxth.w	r3, ip
 801ceb4:	eba3 030e 	sub.w	r3, r3, lr
 801ceb8:	4403      	add	r3, r0
 801ceba:	0c12      	lsrs	r2, r2, #16
 801cebc:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 801cec0:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 801cec4:	b29b      	uxth	r3, r3
 801cec6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ceca:	45c1      	cmp	r9, r8
 801cecc:	f841 3b04 	str.w	r3, [r1], #4
 801ced0:	ea4f 4022 	mov.w	r0, r2, asr #16
 801ced4:	d2e6      	bcs.n	801cea4 <quorem+0xa4>
 801ced6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801ceda:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801cede:	b922      	cbnz	r2, 801ceea <quorem+0xea>
 801cee0:	3b04      	subs	r3, #4
 801cee2:	429d      	cmp	r5, r3
 801cee4:	461a      	mov	r2, r3
 801cee6:	d30b      	bcc.n	801cf00 <quorem+0x100>
 801cee8:	613c      	str	r4, [r7, #16]
 801ceea:	3601      	adds	r6, #1
 801ceec:	4630      	mov	r0, r6
 801ceee:	b003      	add	sp, #12
 801cef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cef4:	6812      	ldr	r2, [r2, #0]
 801cef6:	3b04      	subs	r3, #4
 801cef8:	2a00      	cmp	r2, #0
 801cefa:	d1cb      	bne.n	801ce94 <quorem+0x94>
 801cefc:	3c01      	subs	r4, #1
 801cefe:	e7c6      	b.n	801ce8e <quorem+0x8e>
 801cf00:	6812      	ldr	r2, [r2, #0]
 801cf02:	3b04      	subs	r3, #4
 801cf04:	2a00      	cmp	r2, #0
 801cf06:	d1ef      	bne.n	801cee8 <quorem+0xe8>
 801cf08:	3c01      	subs	r4, #1
 801cf0a:	e7ea      	b.n	801cee2 <quorem+0xe2>
 801cf0c:	2000      	movs	r0, #0
 801cf0e:	e7ee      	b.n	801ceee <quorem+0xee>

0801cf10 <_dtoa_r>:
 801cf10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf14:	b099      	sub	sp, #100	@ 0x64
 801cf16:	ed8d 0b02 	vstr	d0, [sp, #8]
 801cf1a:	9109      	str	r1, [sp, #36]	@ 0x24
 801cf1c:	6b81      	ldr	r1, [r0, #56]	@ 0x38
 801cf1e:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801cf20:	920e      	str	r2, [sp, #56]	@ 0x38
 801cf22:	ec55 4b10 	vmov	r4, r5, d0
 801cf26:	4683      	mov	fp, r0
 801cf28:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cf2a:	b149      	cbz	r1, 801cf40 <_dtoa_r+0x30>
 801cf2c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801cf2e:	604a      	str	r2, [r1, #4]
 801cf30:	2301      	movs	r3, #1
 801cf32:	4093      	lsls	r3, r2
 801cf34:	608b      	str	r3, [r1, #8]
 801cf36:	f000 fdce 	bl	801dad6 <_Bfree>
 801cf3a:	2300      	movs	r3, #0
 801cf3c:	f8cb 3038 	str.w	r3, [fp, #56]	@ 0x38
 801cf40:	1e2b      	subs	r3, r5, #0
 801cf42:	bfb9      	ittee	lt
 801cf44:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 801cf48:	9303      	strlt	r3, [sp, #12]
 801cf4a:	2300      	movge	r3, #0
 801cf4c:	6033      	strge	r3, [r6, #0]
 801cf4e:	9f03      	ldr	r7, [sp, #12]
 801cf50:	4b97      	ldr	r3, [pc, #604]	@ (801d1b0 <_dtoa_r+0x2a0>)
 801cf52:	bfbc      	itt	lt
 801cf54:	2201      	movlt	r2, #1
 801cf56:	6032      	strlt	r2, [r6, #0]
 801cf58:	43bb      	bics	r3, r7
 801cf5a:	d114      	bne.n	801cf86 <_dtoa_r+0x76>
 801cf5c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cf5e:	f242 730f 	movw	r3, #9999	@ 0x270f
 801cf62:	6013      	str	r3, [r2, #0]
 801cf64:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801cf68:	4323      	orrs	r3, r4
 801cf6a:	f000 854c 	beq.w	801da06 <_dtoa_r+0xaf6>
 801cf6e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801cf70:	f8df a254 	ldr.w	sl, [pc, #596]	@ 801d1c8 <_dtoa_r+0x2b8>
 801cf74:	b11b      	cbz	r3, 801cf7e <_dtoa_r+0x6e>
 801cf76:	f10a 0303 	add.w	r3, sl, #3
 801cf7a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cf7c:	6013      	str	r3, [r2, #0]
 801cf7e:	4650      	mov	r0, sl
 801cf80:	b019      	add	sp, #100	@ 0x64
 801cf82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf86:	ed9d 7b02 	vldr	d7, [sp, #8]
 801cf8a:	2200      	movs	r2, #0
 801cf8c:	ec51 0b17 	vmov	r0, r1, d7
 801cf90:	2300      	movs	r3, #0
 801cf92:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 801cf96:	f7e3 fd97 	bl	8000ac8 <__aeabi_dcmpeq>
 801cf9a:	4680      	mov	r8, r0
 801cf9c:	b150      	cbz	r0, 801cfb4 <_dtoa_r+0xa4>
 801cf9e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801cfa0:	2301      	movs	r3, #1
 801cfa2:	6013      	str	r3, [r2, #0]
 801cfa4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801cfa6:	b113      	cbz	r3, 801cfae <_dtoa_r+0x9e>
 801cfa8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cfaa:	4b82      	ldr	r3, [pc, #520]	@ (801d1b4 <_dtoa_r+0x2a4>)
 801cfac:	6013      	str	r3, [r2, #0]
 801cfae:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 801d1cc <_dtoa_r+0x2bc>
 801cfb2:	e7e4      	b.n	801cf7e <_dtoa_r+0x6e>
 801cfb4:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 801cfb8:	aa16      	add	r2, sp, #88	@ 0x58
 801cfba:	a917      	add	r1, sp, #92	@ 0x5c
 801cfbc:	4658      	mov	r0, fp
 801cfbe:	f001 f841 	bl	801e044 <__d2b>
 801cfc2:	f3c7 560a 	ubfx	r6, r7, #20, #11
 801cfc6:	4681      	mov	r9, r0
 801cfc8:	2e00      	cmp	r6, #0
 801cfca:	d077      	beq.n	801d0bc <_dtoa_r+0x1ac>
 801cfcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cfce:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 801cfd2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801cfd6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801cfda:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 801cfde:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 801cfe2:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 801cfe6:	4619      	mov	r1, r3
 801cfe8:	2200      	movs	r2, #0
 801cfea:	4b73      	ldr	r3, [pc, #460]	@ (801d1b8 <_dtoa_r+0x2a8>)
 801cfec:	f7e3 f94c 	bl	8000288 <__aeabi_dsub>
 801cff0:	a369      	add	r3, pc, #420	@ (adr r3, 801d198 <_dtoa_r+0x288>)
 801cff2:	e9d3 2300 	ldrd	r2, r3, [r3]
 801cff6:	f7e3 faff 	bl	80005f8 <__aeabi_dmul>
 801cffa:	a369      	add	r3, pc, #420	@ (adr r3, 801d1a0 <_dtoa_r+0x290>)
 801cffc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d000:	f7e3 f944 	bl	800028c <__adddf3>
 801d004:	4604      	mov	r4, r0
 801d006:	4630      	mov	r0, r6
 801d008:	460d      	mov	r5, r1
 801d00a:	f7e3 fa8b 	bl	8000524 <__aeabi_i2d>
 801d00e:	a366      	add	r3, pc, #408	@ (adr r3, 801d1a8 <_dtoa_r+0x298>)
 801d010:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d014:	f7e3 faf0 	bl	80005f8 <__aeabi_dmul>
 801d018:	4602      	mov	r2, r0
 801d01a:	460b      	mov	r3, r1
 801d01c:	4620      	mov	r0, r4
 801d01e:	4629      	mov	r1, r5
 801d020:	f7e3 f934 	bl	800028c <__adddf3>
 801d024:	4604      	mov	r4, r0
 801d026:	460d      	mov	r5, r1
 801d028:	f7e3 fd96 	bl	8000b58 <__aeabi_d2iz>
 801d02c:	2200      	movs	r2, #0
 801d02e:	4607      	mov	r7, r0
 801d030:	2300      	movs	r3, #0
 801d032:	4620      	mov	r0, r4
 801d034:	4629      	mov	r1, r5
 801d036:	f7e3 fd51 	bl	8000adc <__aeabi_dcmplt>
 801d03a:	b140      	cbz	r0, 801d04e <_dtoa_r+0x13e>
 801d03c:	4638      	mov	r0, r7
 801d03e:	f7e3 fa71 	bl	8000524 <__aeabi_i2d>
 801d042:	4622      	mov	r2, r4
 801d044:	462b      	mov	r3, r5
 801d046:	f7e3 fd3f 	bl	8000ac8 <__aeabi_dcmpeq>
 801d04a:	b900      	cbnz	r0, 801d04e <_dtoa_r+0x13e>
 801d04c:	3f01      	subs	r7, #1
 801d04e:	2f16      	cmp	r7, #22
 801d050:	d851      	bhi.n	801d0f6 <_dtoa_r+0x1e6>
 801d052:	4b5a      	ldr	r3, [pc, #360]	@ (801d1bc <_dtoa_r+0x2ac>)
 801d054:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d058:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d05c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d060:	f7e3 fd3c 	bl	8000adc <__aeabi_dcmplt>
 801d064:	2800      	cmp	r0, #0
 801d066:	d048      	beq.n	801d0fa <_dtoa_r+0x1ea>
 801d068:	3f01      	subs	r7, #1
 801d06a:	2300      	movs	r3, #0
 801d06c:	9312      	str	r3, [sp, #72]	@ 0x48
 801d06e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d070:	1b9b      	subs	r3, r3, r6
 801d072:	1e5a      	subs	r2, r3, #1
 801d074:	bf44      	itt	mi
 801d076:	f1c3 0801 	rsbmi	r8, r3, #1
 801d07a:	2300      	movmi	r3, #0
 801d07c:	9208      	str	r2, [sp, #32]
 801d07e:	bf54      	ite	pl
 801d080:	f04f 0800 	movpl.w	r8, #0
 801d084:	9308      	strmi	r3, [sp, #32]
 801d086:	2f00      	cmp	r7, #0
 801d088:	db39      	blt.n	801d0fe <_dtoa_r+0x1ee>
 801d08a:	9b08      	ldr	r3, [sp, #32]
 801d08c:	970f      	str	r7, [sp, #60]	@ 0x3c
 801d08e:	443b      	add	r3, r7
 801d090:	9308      	str	r3, [sp, #32]
 801d092:	2300      	movs	r3, #0
 801d094:	930a      	str	r3, [sp, #40]	@ 0x28
 801d096:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d098:	2b09      	cmp	r3, #9
 801d09a:	d865      	bhi.n	801d168 <_dtoa_r+0x258>
 801d09c:	2b05      	cmp	r3, #5
 801d09e:	bfc4      	itt	gt
 801d0a0:	3b04      	subgt	r3, #4
 801d0a2:	9309      	strgt	r3, [sp, #36]	@ 0x24
 801d0a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d0a6:	f1a3 0302 	sub.w	r3, r3, #2
 801d0aa:	bfcc      	ite	gt
 801d0ac:	2400      	movgt	r4, #0
 801d0ae:	2401      	movle	r4, #1
 801d0b0:	2b03      	cmp	r3, #3
 801d0b2:	d864      	bhi.n	801d17e <_dtoa_r+0x26e>
 801d0b4:	e8df f003 	tbb	[pc, r3]
 801d0b8:	5635372a 	.word	0x5635372a
 801d0bc:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 801d0c0:	441e      	add	r6, r3
 801d0c2:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 801d0c6:	2b20      	cmp	r3, #32
 801d0c8:	bfc1      	itttt	gt
 801d0ca:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 801d0ce:	409f      	lslgt	r7, r3
 801d0d0:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 801d0d4:	fa24 f303 	lsrgt.w	r3, r4, r3
 801d0d8:	bfd6      	itet	le
 801d0da:	f1c3 0320 	rsble	r3, r3, #32
 801d0de:	ea47 0003 	orrgt.w	r0, r7, r3
 801d0e2:	fa04 f003 	lslle.w	r0, r4, r3
 801d0e6:	f7e3 fa0d 	bl	8000504 <__aeabi_ui2d>
 801d0ea:	2201      	movs	r2, #1
 801d0ec:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 801d0f0:	3e01      	subs	r6, #1
 801d0f2:	9214      	str	r2, [sp, #80]	@ 0x50
 801d0f4:	e777      	b.n	801cfe6 <_dtoa_r+0xd6>
 801d0f6:	2301      	movs	r3, #1
 801d0f8:	e7b8      	b.n	801d06c <_dtoa_r+0x15c>
 801d0fa:	9012      	str	r0, [sp, #72]	@ 0x48
 801d0fc:	e7b7      	b.n	801d06e <_dtoa_r+0x15e>
 801d0fe:	427b      	negs	r3, r7
 801d100:	930a      	str	r3, [sp, #40]	@ 0x28
 801d102:	2300      	movs	r3, #0
 801d104:	eba8 0807 	sub.w	r8, r8, r7
 801d108:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d10a:	e7c4      	b.n	801d096 <_dtoa_r+0x186>
 801d10c:	2300      	movs	r3, #0
 801d10e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d110:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d112:	2b00      	cmp	r3, #0
 801d114:	dc36      	bgt.n	801d184 <_dtoa_r+0x274>
 801d116:	2301      	movs	r3, #1
 801d118:	9300      	str	r3, [sp, #0]
 801d11a:	9307      	str	r3, [sp, #28]
 801d11c:	461a      	mov	r2, r3
 801d11e:	920e      	str	r2, [sp, #56]	@ 0x38
 801d120:	e00b      	b.n	801d13a <_dtoa_r+0x22a>
 801d122:	2301      	movs	r3, #1
 801d124:	e7f3      	b.n	801d10e <_dtoa_r+0x1fe>
 801d126:	2300      	movs	r3, #0
 801d128:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d12a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d12c:	18fb      	adds	r3, r7, r3
 801d12e:	9300      	str	r3, [sp, #0]
 801d130:	3301      	adds	r3, #1
 801d132:	2b01      	cmp	r3, #1
 801d134:	9307      	str	r3, [sp, #28]
 801d136:	bfb8      	it	lt
 801d138:	2301      	movlt	r3, #1
 801d13a:	2100      	movs	r1, #0
 801d13c:	2204      	movs	r2, #4
 801d13e:	f102 0014 	add.w	r0, r2, #20
 801d142:	4298      	cmp	r0, r3
 801d144:	d922      	bls.n	801d18c <_dtoa_r+0x27c>
 801d146:	f8cb 103c 	str.w	r1, [fp, #60]	@ 0x3c
 801d14a:	4658      	mov	r0, fp
 801d14c:	f000 fc9e 	bl	801da8c <_Balloc>
 801d150:	4682      	mov	sl, r0
 801d152:	2800      	cmp	r0, #0
 801d154:	d13c      	bne.n	801d1d0 <_dtoa_r+0x2c0>
 801d156:	4b1a      	ldr	r3, [pc, #104]	@ (801d1c0 <_dtoa_r+0x2b0>)
 801d158:	4602      	mov	r2, r0
 801d15a:	f240 11af 	movw	r1, #431	@ 0x1af
 801d15e:	4819      	ldr	r0, [pc, #100]	@ (801d1c4 <_dtoa_r+0x2b4>)
 801d160:	f001 fa14 	bl	801e58c <__assert_func>
 801d164:	2301      	movs	r3, #1
 801d166:	e7df      	b.n	801d128 <_dtoa_r+0x218>
 801d168:	2401      	movs	r4, #1
 801d16a:	2300      	movs	r3, #0
 801d16c:	9309      	str	r3, [sp, #36]	@ 0x24
 801d16e:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d170:	f04f 33ff 	mov.w	r3, #4294967295
 801d174:	9300      	str	r3, [sp, #0]
 801d176:	9307      	str	r3, [sp, #28]
 801d178:	2200      	movs	r2, #0
 801d17a:	2312      	movs	r3, #18
 801d17c:	e7cf      	b.n	801d11e <_dtoa_r+0x20e>
 801d17e:	2301      	movs	r3, #1
 801d180:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d182:	e7f5      	b.n	801d170 <_dtoa_r+0x260>
 801d184:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d186:	9300      	str	r3, [sp, #0]
 801d188:	9307      	str	r3, [sp, #28]
 801d18a:	e7d6      	b.n	801d13a <_dtoa_r+0x22a>
 801d18c:	3101      	adds	r1, #1
 801d18e:	0052      	lsls	r2, r2, #1
 801d190:	e7d5      	b.n	801d13e <_dtoa_r+0x22e>
 801d192:	bf00      	nop
 801d194:	f3af 8000 	nop.w
 801d198:	636f4361 	.word	0x636f4361
 801d19c:	3fd287a7 	.word	0x3fd287a7
 801d1a0:	8b60c8b3 	.word	0x8b60c8b3
 801d1a4:	3fc68a28 	.word	0x3fc68a28
 801d1a8:	509f79fb 	.word	0x509f79fb
 801d1ac:	3fd34413 	.word	0x3fd34413
 801d1b0:	7ff00000 	.word	0x7ff00000
 801d1b4:	08021667 	.word	0x08021667
 801d1b8:	3ff80000 	.word	0x3ff80000
 801d1bc:	08021798 	.word	0x08021798
 801d1c0:	0802169f 	.word	0x0802169f
 801d1c4:	080216b0 	.word	0x080216b0
 801d1c8:	0802169b 	.word	0x0802169b
 801d1cc:	08021666 	.word	0x08021666
 801d1d0:	9b07      	ldr	r3, [sp, #28]
 801d1d2:	f8cb 0038 	str.w	r0, [fp, #56]	@ 0x38
 801d1d6:	2b0e      	cmp	r3, #14
 801d1d8:	f200 80a4 	bhi.w	801d324 <_dtoa_r+0x414>
 801d1dc:	2c00      	cmp	r4, #0
 801d1de:	f000 80a1 	beq.w	801d324 <_dtoa_r+0x414>
 801d1e2:	2f00      	cmp	r7, #0
 801d1e4:	dd33      	ble.n	801d24e <_dtoa_r+0x33e>
 801d1e6:	4bae      	ldr	r3, [pc, #696]	@ (801d4a0 <_dtoa_r+0x590>)
 801d1e8:	f007 020f 	and.w	r2, r7, #15
 801d1ec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d1f0:	ed93 7b00 	vldr	d7, [r3]
 801d1f4:	05f8      	lsls	r0, r7, #23
 801d1f6:	ed8d 7b04 	vstr	d7, [sp, #16]
 801d1fa:	ea4f 1427 	mov.w	r4, r7, asr #4
 801d1fe:	d516      	bpl.n	801d22e <_dtoa_r+0x31e>
 801d200:	4ba8      	ldr	r3, [pc, #672]	@ (801d4a4 <_dtoa_r+0x594>)
 801d202:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d206:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801d20a:	f7e3 fb1f 	bl	800084c <__aeabi_ddiv>
 801d20e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d212:	f004 040f 	and.w	r4, r4, #15
 801d216:	2603      	movs	r6, #3
 801d218:	4da2      	ldr	r5, [pc, #648]	@ (801d4a4 <_dtoa_r+0x594>)
 801d21a:	b954      	cbnz	r4, 801d232 <_dtoa_r+0x322>
 801d21c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801d220:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d224:	f7e3 fb12 	bl	800084c <__aeabi_ddiv>
 801d228:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d22c:	e028      	b.n	801d280 <_dtoa_r+0x370>
 801d22e:	2602      	movs	r6, #2
 801d230:	e7f2      	b.n	801d218 <_dtoa_r+0x308>
 801d232:	07e1      	lsls	r1, r4, #31
 801d234:	d508      	bpl.n	801d248 <_dtoa_r+0x338>
 801d236:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801d23a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d23e:	f7e3 f9db 	bl	80005f8 <__aeabi_dmul>
 801d242:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801d246:	3601      	adds	r6, #1
 801d248:	1064      	asrs	r4, r4, #1
 801d24a:	3508      	adds	r5, #8
 801d24c:	e7e5      	b.n	801d21a <_dtoa_r+0x30a>
 801d24e:	f000 80d2 	beq.w	801d3f6 <_dtoa_r+0x4e6>
 801d252:	427c      	negs	r4, r7
 801d254:	4b92      	ldr	r3, [pc, #584]	@ (801d4a0 <_dtoa_r+0x590>)
 801d256:	4d93      	ldr	r5, [pc, #588]	@ (801d4a4 <_dtoa_r+0x594>)
 801d258:	f004 020f 	and.w	r2, r4, #15
 801d25c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801d260:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d264:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801d268:	f7e3 f9c6 	bl	80005f8 <__aeabi_dmul>
 801d26c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d270:	1124      	asrs	r4, r4, #4
 801d272:	2300      	movs	r3, #0
 801d274:	2602      	movs	r6, #2
 801d276:	2c00      	cmp	r4, #0
 801d278:	f040 80b2 	bne.w	801d3e0 <_dtoa_r+0x4d0>
 801d27c:	2b00      	cmp	r3, #0
 801d27e:	d1d3      	bne.n	801d228 <_dtoa_r+0x318>
 801d280:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d282:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801d286:	2b00      	cmp	r3, #0
 801d288:	f000 80b7 	beq.w	801d3fa <_dtoa_r+0x4ea>
 801d28c:	4b86      	ldr	r3, [pc, #536]	@ (801d4a8 <_dtoa_r+0x598>)
 801d28e:	2200      	movs	r2, #0
 801d290:	4620      	mov	r0, r4
 801d292:	4629      	mov	r1, r5
 801d294:	f7e3 fc22 	bl	8000adc <__aeabi_dcmplt>
 801d298:	2800      	cmp	r0, #0
 801d29a:	f000 80ae 	beq.w	801d3fa <_dtoa_r+0x4ea>
 801d29e:	9b07      	ldr	r3, [sp, #28]
 801d2a0:	2b00      	cmp	r3, #0
 801d2a2:	f000 80aa 	beq.w	801d3fa <_dtoa_r+0x4ea>
 801d2a6:	9b00      	ldr	r3, [sp, #0]
 801d2a8:	2b00      	cmp	r3, #0
 801d2aa:	dd37      	ble.n	801d31c <_dtoa_r+0x40c>
 801d2ac:	1e7b      	subs	r3, r7, #1
 801d2ae:	9304      	str	r3, [sp, #16]
 801d2b0:	4620      	mov	r0, r4
 801d2b2:	4b7e      	ldr	r3, [pc, #504]	@ (801d4ac <_dtoa_r+0x59c>)
 801d2b4:	2200      	movs	r2, #0
 801d2b6:	4629      	mov	r1, r5
 801d2b8:	f7e3 f99e 	bl	80005f8 <__aeabi_dmul>
 801d2bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d2c0:	9c00      	ldr	r4, [sp, #0]
 801d2c2:	3601      	adds	r6, #1
 801d2c4:	4630      	mov	r0, r6
 801d2c6:	f7e3 f92d 	bl	8000524 <__aeabi_i2d>
 801d2ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d2ce:	f7e3 f993 	bl	80005f8 <__aeabi_dmul>
 801d2d2:	4b77      	ldr	r3, [pc, #476]	@ (801d4b0 <_dtoa_r+0x5a0>)
 801d2d4:	2200      	movs	r2, #0
 801d2d6:	f7e2 ffd9 	bl	800028c <__adddf3>
 801d2da:	4605      	mov	r5, r0
 801d2dc:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 801d2e0:	2c00      	cmp	r4, #0
 801d2e2:	f040 808d 	bne.w	801d400 <_dtoa_r+0x4f0>
 801d2e6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d2ea:	4b72      	ldr	r3, [pc, #456]	@ (801d4b4 <_dtoa_r+0x5a4>)
 801d2ec:	2200      	movs	r2, #0
 801d2ee:	f7e2 ffcb 	bl	8000288 <__aeabi_dsub>
 801d2f2:	4602      	mov	r2, r0
 801d2f4:	460b      	mov	r3, r1
 801d2f6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d2fa:	462a      	mov	r2, r5
 801d2fc:	4633      	mov	r3, r6
 801d2fe:	f7e3 fc0b 	bl	8000b18 <__aeabi_dcmpgt>
 801d302:	2800      	cmp	r0, #0
 801d304:	f040 828c 	bne.w	801d820 <_dtoa_r+0x910>
 801d308:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d30c:	462a      	mov	r2, r5
 801d30e:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 801d312:	f7e3 fbe3 	bl	8000adc <__aeabi_dcmplt>
 801d316:	2800      	cmp	r0, #0
 801d318:	f040 8129 	bne.w	801d56e <_dtoa_r+0x65e>
 801d31c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 801d320:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801d324:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d326:	2b00      	cmp	r3, #0
 801d328:	f2c0 815b 	blt.w	801d5e2 <_dtoa_r+0x6d2>
 801d32c:	2f0e      	cmp	r7, #14
 801d32e:	f300 8158 	bgt.w	801d5e2 <_dtoa_r+0x6d2>
 801d332:	4b5b      	ldr	r3, [pc, #364]	@ (801d4a0 <_dtoa_r+0x590>)
 801d334:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801d338:	ed93 7b00 	vldr	d7, [r3]
 801d33c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d33e:	2b00      	cmp	r3, #0
 801d340:	ed8d 7b00 	vstr	d7, [sp]
 801d344:	da03      	bge.n	801d34e <_dtoa_r+0x43e>
 801d346:	9b07      	ldr	r3, [sp, #28]
 801d348:	2b00      	cmp	r3, #0
 801d34a:	f340 8102 	ble.w	801d552 <_dtoa_r+0x642>
 801d34e:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801d352:	4656      	mov	r6, sl
 801d354:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d358:	4620      	mov	r0, r4
 801d35a:	4629      	mov	r1, r5
 801d35c:	f7e3 fa76 	bl	800084c <__aeabi_ddiv>
 801d360:	f7e3 fbfa 	bl	8000b58 <__aeabi_d2iz>
 801d364:	4680      	mov	r8, r0
 801d366:	f7e3 f8dd 	bl	8000524 <__aeabi_i2d>
 801d36a:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d36e:	f7e3 f943 	bl	80005f8 <__aeabi_dmul>
 801d372:	4602      	mov	r2, r0
 801d374:	460b      	mov	r3, r1
 801d376:	4620      	mov	r0, r4
 801d378:	4629      	mov	r1, r5
 801d37a:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 801d37e:	f7e2 ff83 	bl	8000288 <__aeabi_dsub>
 801d382:	f806 4b01 	strb.w	r4, [r6], #1
 801d386:	9d07      	ldr	r5, [sp, #28]
 801d388:	eba6 040a 	sub.w	r4, r6, sl
 801d38c:	42a5      	cmp	r5, r4
 801d38e:	4602      	mov	r2, r0
 801d390:	460b      	mov	r3, r1
 801d392:	f040 8118 	bne.w	801d5c6 <_dtoa_r+0x6b6>
 801d396:	f7e2 ff79 	bl	800028c <__adddf3>
 801d39a:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d39e:	4604      	mov	r4, r0
 801d3a0:	460d      	mov	r5, r1
 801d3a2:	f7e3 fbb9 	bl	8000b18 <__aeabi_dcmpgt>
 801d3a6:	2800      	cmp	r0, #0
 801d3a8:	f040 80fa 	bne.w	801d5a0 <_dtoa_r+0x690>
 801d3ac:	e9dd 2300 	ldrd	r2, r3, [sp]
 801d3b0:	4620      	mov	r0, r4
 801d3b2:	4629      	mov	r1, r5
 801d3b4:	f7e3 fb88 	bl	8000ac8 <__aeabi_dcmpeq>
 801d3b8:	b118      	cbz	r0, 801d3c2 <_dtoa_r+0x4b2>
 801d3ba:	f018 0f01 	tst.w	r8, #1
 801d3be:	f040 80ef 	bne.w	801d5a0 <_dtoa_r+0x690>
 801d3c2:	4649      	mov	r1, r9
 801d3c4:	4658      	mov	r0, fp
 801d3c6:	f000 fb86 	bl	801dad6 <_Bfree>
 801d3ca:	2300      	movs	r3, #0
 801d3cc:	7033      	strb	r3, [r6, #0]
 801d3ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d3d0:	3701      	adds	r7, #1
 801d3d2:	601f      	str	r7, [r3, #0]
 801d3d4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801d3d6:	2b00      	cmp	r3, #0
 801d3d8:	f43f add1 	beq.w	801cf7e <_dtoa_r+0x6e>
 801d3dc:	601e      	str	r6, [r3, #0]
 801d3de:	e5ce      	b.n	801cf7e <_dtoa_r+0x6e>
 801d3e0:	07e2      	lsls	r2, r4, #31
 801d3e2:	d505      	bpl.n	801d3f0 <_dtoa_r+0x4e0>
 801d3e4:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d3e8:	f7e3 f906 	bl	80005f8 <__aeabi_dmul>
 801d3ec:	3601      	adds	r6, #1
 801d3ee:	2301      	movs	r3, #1
 801d3f0:	1064      	asrs	r4, r4, #1
 801d3f2:	3508      	adds	r5, #8
 801d3f4:	e73f      	b.n	801d276 <_dtoa_r+0x366>
 801d3f6:	2602      	movs	r6, #2
 801d3f8:	e742      	b.n	801d280 <_dtoa_r+0x370>
 801d3fa:	9c07      	ldr	r4, [sp, #28]
 801d3fc:	9704      	str	r7, [sp, #16]
 801d3fe:	e761      	b.n	801d2c4 <_dtoa_r+0x3b4>
 801d400:	4b27      	ldr	r3, [pc, #156]	@ (801d4a0 <_dtoa_r+0x590>)
 801d402:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801d404:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801d408:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801d40c:	4454      	add	r4, sl
 801d40e:	2900      	cmp	r1, #0
 801d410:	d054      	beq.n	801d4bc <_dtoa_r+0x5ac>
 801d412:	4929      	ldr	r1, [pc, #164]	@ (801d4b8 <_dtoa_r+0x5a8>)
 801d414:	2000      	movs	r0, #0
 801d416:	f7e3 fa19 	bl	800084c <__aeabi_ddiv>
 801d41a:	4633      	mov	r3, r6
 801d41c:	462a      	mov	r2, r5
 801d41e:	f7e2 ff33 	bl	8000288 <__aeabi_dsub>
 801d422:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d426:	4656      	mov	r6, sl
 801d428:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d42c:	f7e3 fb94 	bl	8000b58 <__aeabi_d2iz>
 801d430:	4605      	mov	r5, r0
 801d432:	f7e3 f877 	bl	8000524 <__aeabi_i2d>
 801d436:	4602      	mov	r2, r0
 801d438:	460b      	mov	r3, r1
 801d43a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d43e:	f7e2 ff23 	bl	8000288 <__aeabi_dsub>
 801d442:	3530      	adds	r5, #48	@ 0x30
 801d444:	4602      	mov	r2, r0
 801d446:	460b      	mov	r3, r1
 801d448:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d44c:	f806 5b01 	strb.w	r5, [r6], #1
 801d450:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d454:	f7e3 fb42 	bl	8000adc <__aeabi_dcmplt>
 801d458:	2800      	cmp	r0, #0
 801d45a:	d172      	bne.n	801d542 <_dtoa_r+0x632>
 801d45c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d460:	4911      	ldr	r1, [pc, #68]	@ (801d4a8 <_dtoa_r+0x598>)
 801d462:	2000      	movs	r0, #0
 801d464:	f7e2 ff10 	bl	8000288 <__aeabi_dsub>
 801d468:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d46c:	f7e3 fb36 	bl	8000adc <__aeabi_dcmplt>
 801d470:	2800      	cmp	r0, #0
 801d472:	f040 8096 	bne.w	801d5a2 <_dtoa_r+0x692>
 801d476:	42a6      	cmp	r6, r4
 801d478:	f43f af50 	beq.w	801d31c <_dtoa_r+0x40c>
 801d47c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801d480:	4b0a      	ldr	r3, [pc, #40]	@ (801d4ac <_dtoa_r+0x59c>)
 801d482:	2200      	movs	r2, #0
 801d484:	f7e3 f8b8 	bl	80005f8 <__aeabi_dmul>
 801d488:	4b08      	ldr	r3, [pc, #32]	@ (801d4ac <_dtoa_r+0x59c>)
 801d48a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d48e:	2200      	movs	r2, #0
 801d490:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d494:	f7e3 f8b0 	bl	80005f8 <__aeabi_dmul>
 801d498:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d49c:	e7c4      	b.n	801d428 <_dtoa_r+0x518>
 801d49e:	bf00      	nop
 801d4a0:	08021798 	.word	0x08021798
 801d4a4:	08021770 	.word	0x08021770
 801d4a8:	3ff00000 	.word	0x3ff00000
 801d4ac:	40240000 	.word	0x40240000
 801d4b0:	401c0000 	.word	0x401c0000
 801d4b4:	40140000 	.word	0x40140000
 801d4b8:	3fe00000 	.word	0x3fe00000
 801d4bc:	4631      	mov	r1, r6
 801d4be:	4628      	mov	r0, r5
 801d4c0:	f7e3 f89a 	bl	80005f8 <__aeabi_dmul>
 801d4c4:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801d4c8:	9415      	str	r4, [sp, #84]	@ 0x54
 801d4ca:	4656      	mov	r6, sl
 801d4cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d4d0:	f7e3 fb42 	bl	8000b58 <__aeabi_d2iz>
 801d4d4:	4605      	mov	r5, r0
 801d4d6:	f7e3 f825 	bl	8000524 <__aeabi_i2d>
 801d4da:	4602      	mov	r2, r0
 801d4dc:	460b      	mov	r3, r1
 801d4de:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d4e2:	f7e2 fed1 	bl	8000288 <__aeabi_dsub>
 801d4e6:	3530      	adds	r5, #48	@ 0x30
 801d4e8:	f806 5b01 	strb.w	r5, [r6], #1
 801d4ec:	4602      	mov	r2, r0
 801d4ee:	460b      	mov	r3, r1
 801d4f0:	42a6      	cmp	r6, r4
 801d4f2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801d4f6:	f04f 0200 	mov.w	r2, #0
 801d4fa:	d124      	bne.n	801d546 <_dtoa_r+0x636>
 801d4fc:	4bac      	ldr	r3, [pc, #688]	@ (801d7b0 <_dtoa_r+0x8a0>)
 801d4fe:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801d502:	f7e2 fec3 	bl	800028c <__adddf3>
 801d506:	4602      	mov	r2, r0
 801d508:	460b      	mov	r3, r1
 801d50a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d50e:	f7e3 fb03 	bl	8000b18 <__aeabi_dcmpgt>
 801d512:	2800      	cmp	r0, #0
 801d514:	d145      	bne.n	801d5a2 <_dtoa_r+0x692>
 801d516:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801d51a:	49a5      	ldr	r1, [pc, #660]	@ (801d7b0 <_dtoa_r+0x8a0>)
 801d51c:	2000      	movs	r0, #0
 801d51e:	f7e2 feb3 	bl	8000288 <__aeabi_dsub>
 801d522:	4602      	mov	r2, r0
 801d524:	460b      	mov	r3, r1
 801d526:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801d52a:	f7e3 fad7 	bl	8000adc <__aeabi_dcmplt>
 801d52e:	2800      	cmp	r0, #0
 801d530:	f43f aef4 	beq.w	801d31c <_dtoa_r+0x40c>
 801d534:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801d536:	1e73      	subs	r3, r6, #1
 801d538:	9315      	str	r3, [sp, #84]	@ 0x54
 801d53a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 801d53e:	2b30      	cmp	r3, #48	@ 0x30
 801d540:	d0f8      	beq.n	801d534 <_dtoa_r+0x624>
 801d542:	9f04      	ldr	r7, [sp, #16]
 801d544:	e73d      	b.n	801d3c2 <_dtoa_r+0x4b2>
 801d546:	4b9b      	ldr	r3, [pc, #620]	@ (801d7b4 <_dtoa_r+0x8a4>)
 801d548:	f7e3 f856 	bl	80005f8 <__aeabi_dmul>
 801d54c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801d550:	e7bc      	b.n	801d4cc <_dtoa_r+0x5bc>
 801d552:	d10c      	bne.n	801d56e <_dtoa_r+0x65e>
 801d554:	4b98      	ldr	r3, [pc, #608]	@ (801d7b8 <_dtoa_r+0x8a8>)
 801d556:	2200      	movs	r2, #0
 801d558:	e9dd 0100 	ldrd	r0, r1, [sp]
 801d55c:	f7e3 f84c 	bl	80005f8 <__aeabi_dmul>
 801d560:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801d564:	f7e3 face 	bl	8000b04 <__aeabi_dcmpge>
 801d568:	2800      	cmp	r0, #0
 801d56a:	f000 8157 	beq.w	801d81c <_dtoa_r+0x90c>
 801d56e:	2400      	movs	r4, #0
 801d570:	4625      	mov	r5, r4
 801d572:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d574:	43db      	mvns	r3, r3
 801d576:	9304      	str	r3, [sp, #16]
 801d578:	4656      	mov	r6, sl
 801d57a:	2700      	movs	r7, #0
 801d57c:	4621      	mov	r1, r4
 801d57e:	4658      	mov	r0, fp
 801d580:	f000 faa9 	bl	801dad6 <_Bfree>
 801d584:	2d00      	cmp	r5, #0
 801d586:	d0dc      	beq.n	801d542 <_dtoa_r+0x632>
 801d588:	b12f      	cbz	r7, 801d596 <_dtoa_r+0x686>
 801d58a:	42af      	cmp	r7, r5
 801d58c:	d003      	beq.n	801d596 <_dtoa_r+0x686>
 801d58e:	4639      	mov	r1, r7
 801d590:	4658      	mov	r0, fp
 801d592:	f000 faa0 	bl	801dad6 <_Bfree>
 801d596:	4629      	mov	r1, r5
 801d598:	4658      	mov	r0, fp
 801d59a:	f000 fa9c 	bl	801dad6 <_Bfree>
 801d59e:	e7d0      	b.n	801d542 <_dtoa_r+0x632>
 801d5a0:	9704      	str	r7, [sp, #16]
 801d5a2:	4633      	mov	r3, r6
 801d5a4:	461e      	mov	r6, r3
 801d5a6:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d5aa:	2a39      	cmp	r2, #57	@ 0x39
 801d5ac:	d107      	bne.n	801d5be <_dtoa_r+0x6ae>
 801d5ae:	459a      	cmp	sl, r3
 801d5b0:	d1f8      	bne.n	801d5a4 <_dtoa_r+0x694>
 801d5b2:	9a04      	ldr	r2, [sp, #16]
 801d5b4:	3201      	adds	r2, #1
 801d5b6:	9204      	str	r2, [sp, #16]
 801d5b8:	2230      	movs	r2, #48	@ 0x30
 801d5ba:	f88a 2000 	strb.w	r2, [sl]
 801d5be:	781a      	ldrb	r2, [r3, #0]
 801d5c0:	3201      	adds	r2, #1
 801d5c2:	701a      	strb	r2, [r3, #0]
 801d5c4:	e7bd      	b.n	801d542 <_dtoa_r+0x632>
 801d5c6:	4b7b      	ldr	r3, [pc, #492]	@ (801d7b4 <_dtoa_r+0x8a4>)
 801d5c8:	2200      	movs	r2, #0
 801d5ca:	f7e3 f815 	bl	80005f8 <__aeabi_dmul>
 801d5ce:	2200      	movs	r2, #0
 801d5d0:	2300      	movs	r3, #0
 801d5d2:	4604      	mov	r4, r0
 801d5d4:	460d      	mov	r5, r1
 801d5d6:	f7e3 fa77 	bl	8000ac8 <__aeabi_dcmpeq>
 801d5da:	2800      	cmp	r0, #0
 801d5dc:	f43f aeba 	beq.w	801d354 <_dtoa_r+0x444>
 801d5e0:	e6ef      	b.n	801d3c2 <_dtoa_r+0x4b2>
 801d5e2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d5e4:	2a00      	cmp	r2, #0
 801d5e6:	f000 80db 	beq.w	801d7a0 <_dtoa_r+0x890>
 801d5ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d5ec:	2a01      	cmp	r2, #1
 801d5ee:	f300 80bf 	bgt.w	801d770 <_dtoa_r+0x860>
 801d5f2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d5f4:	2a00      	cmp	r2, #0
 801d5f6:	f000 80b7 	beq.w	801d768 <_dtoa_r+0x858>
 801d5fa:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 801d5fe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d600:	4646      	mov	r6, r8
 801d602:	9a08      	ldr	r2, [sp, #32]
 801d604:	2101      	movs	r1, #1
 801d606:	441a      	add	r2, r3
 801d608:	4658      	mov	r0, fp
 801d60a:	4498      	add	r8, r3
 801d60c:	9208      	str	r2, [sp, #32]
 801d60e:	f000 fafd 	bl	801dc0c <__i2b>
 801d612:	4605      	mov	r5, r0
 801d614:	b15e      	cbz	r6, 801d62e <_dtoa_r+0x71e>
 801d616:	9b08      	ldr	r3, [sp, #32]
 801d618:	2b00      	cmp	r3, #0
 801d61a:	dd08      	ble.n	801d62e <_dtoa_r+0x71e>
 801d61c:	42b3      	cmp	r3, r6
 801d61e:	9a08      	ldr	r2, [sp, #32]
 801d620:	bfa8      	it	ge
 801d622:	4633      	movge	r3, r6
 801d624:	eba8 0803 	sub.w	r8, r8, r3
 801d628:	1af6      	subs	r6, r6, r3
 801d62a:	1ad3      	subs	r3, r2, r3
 801d62c:	9308      	str	r3, [sp, #32]
 801d62e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d630:	b1f3      	cbz	r3, 801d670 <_dtoa_r+0x760>
 801d632:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d634:	2b00      	cmp	r3, #0
 801d636:	f000 80b7 	beq.w	801d7a8 <_dtoa_r+0x898>
 801d63a:	b18c      	cbz	r4, 801d660 <_dtoa_r+0x750>
 801d63c:	4629      	mov	r1, r5
 801d63e:	4622      	mov	r2, r4
 801d640:	4658      	mov	r0, fp
 801d642:	f000 fba3 	bl	801dd8c <__pow5mult>
 801d646:	464a      	mov	r2, r9
 801d648:	4601      	mov	r1, r0
 801d64a:	4605      	mov	r5, r0
 801d64c:	4658      	mov	r0, fp
 801d64e:	f000 faf3 	bl	801dc38 <__multiply>
 801d652:	4649      	mov	r1, r9
 801d654:	9004      	str	r0, [sp, #16]
 801d656:	4658      	mov	r0, fp
 801d658:	f000 fa3d 	bl	801dad6 <_Bfree>
 801d65c:	9b04      	ldr	r3, [sp, #16]
 801d65e:	4699      	mov	r9, r3
 801d660:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d662:	1b1a      	subs	r2, r3, r4
 801d664:	d004      	beq.n	801d670 <_dtoa_r+0x760>
 801d666:	4649      	mov	r1, r9
 801d668:	4658      	mov	r0, fp
 801d66a:	f000 fb8f 	bl	801dd8c <__pow5mult>
 801d66e:	4681      	mov	r9, r0
 801d670:	2101      	movs	r1, #1
 801d672:	4658      	mov	r0, fp
 801d674:	f000 faca 	bl	801dc0c <__i2b>
 801d678:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d67a:	4604      	mov	r4, r0
 801d67c:	2b00      	cmp	r3, #0
 801d67e:	f000 81cc 	beq.w	801da1a <_dtoa_r+0xb0a>
 801d682:	461a      	mov	r2, r3
 801d684:	4601      	mov	r1, r0
 801d686:	4658      	mov	r0, fp
 801d688:	f000 fb80 	bl	801dd8c <__pow5mult>
 801d68c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d68e:	2b01      	cmp	r3, #1
 801d690:	4604      	mov	r4, r0
 801d692:	f300 8095 	bgt.w	801d7c0 <_dtoa_r+0x8b0>
 801d696:	9b02      	ldr	r3, [sp, #8]
 801d698:	2b00      	cmp	r3, #0
 801d69a:	f040 8087 	bne.w	801d7ac <_dtoa_r+0x89c>
 801d69e:	9b03      	ldr	r3, [sp, #12]
 801d6a0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801d6a4:	2b00      	cmp	r3, #0
 801d6a6:	f040 8089 	bne.w	801d7bc <_dtoa_r+0x8ac>
 801d6aa:	9b03      	ldr	r3, [sp, #12]
 801d6ac:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801d6b0:	0d1b      	lsrs	r3, r3, #20
 801d6b2:	051b      	lsls	r3, r3, #20
 801d6b4:	b12b      	cbz	r3, 801d6c2 <_dtoa_r+0x7b2>
 801d6b6:	9b08      	ldr	r3, [sp, #32]
 801d6b8:	3301      	adds	r3, #1
 801d6ba:	9308      	str	r3, [sp, #32]
 801d6bc:	f108 0801 	add.w	r8, r8, #1
 801d6c0:	2301      	movs	r3, #1
 801d6c2:	930a      	str	r3, [sp, #40]	@ 0x28
 801d6c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d6c6:	2b00      	cmp	r3, #0
 801d6c8:	f000 81ad 	beq.w	801da26 <_dtoa_r+0xb16>
 801d6cc:	6923      	ldr	r3, [r4, #16]
 801d6ce:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 801d6d2:	6918      	ldr	r0, [r3, #16]
 801d6d4:	f000 fa4e 	bl	801db74 <__hi0bits>
 801d6d8:	f1c0 0020 	rsb	r0, r0, #32
 801d6dc:	9b08      	ldr	r3, [sp, #32]
 801d6de:	4418      	add	r0, r3
 801d6e0:	f010 001f 	ands.w	r0, r0, #31
 801d6e4:	d077      	beq.n	801d7d6 <_dtoa_r+0x8c6>
 801d6e6:	f1c0 0320 	rsb	r3, r0, #32
 801d6ea:	2b04      	cmp	r3, #4
 801d6ec:	dd6b      	ble.n	801d7c6 <_dtoa_r+0x8b6>
 801d6ee:	9b08      	ldr	r3, [sp, #32]
 801d6f0:	f1c0 001c 	rsb	r0, r0, #28
 801d6f4:	4403      	add	r3, r0
 801d6f6:	4480      	add	r8, r0
 801d6f8:	4406      	add	r6, r0
 801d6fa:	9308      	str	r3, [sp, #32]
 801d6fc:	f1b8 0f00 	cmp.w	r8, #0
 801d700:	dd05      	ble.n	801d70e <_dtoa_r+0x7fe>
 801d702:	4649      	mov	r1, r9
 801d704:	4642      	mov	r2, r8
 801d706:	4658      	mov	r0, fp
 801d708:	f000 fb80 	bl	801de0c <__lshift>
 801d70c:	4681      	mov	r9, r0
 801d70e:	9b08      	ldr	r3, [sp, #32]
 801d710:	2b00      	cmp	r3, #0
 801d712:	dd05      	ble.n	801d720 <_dtoa_r+0x810>
 801d714:	4621      	mov	r1, r4
 801d716:	461a      	mov	r2, r3
 801d718:	4658      	mov	r0, fp
 801d71a:	f000 fb77 	bl	801de0c <__lshift>
 801d71e:	4604      	mov	r4, r0
 801d720:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d722:	2b00      	cmp	r3, #0
 801d724:	d059      	beq.n	801d7da <_dtoa_r+0x8ca>
 801d726:	4621      	mov	r1, r4
 801d728:	4648      	mov	r0, r9
 801d72a:	f000 fbdb 	bl	801dee4 <__mcmp>
 801d72e:	2800      	cmp	r0, #0
 801d730:	da53      	bge.n	801d7da <_dtoa_r+0x8ca>
 801d732:	1e7b      	subs	r3, r7, #1
 801d734:	9304      	str	r3, [sp, #16]
 801d736:	4649      	mov	r1, r9
 801d738:	2300      	movs	r3, #0
 801d73a:	220a      	movs	r2, #10
 801d73c:	4658      	mov	r0, fp
 801d73e:	f000 f9d3 	bl	801dae8 <__multadd>
 801d742:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d744:	4681      	mov	r9, r0
 801d746:	2b00      	cmp	r3, #0
 801d748:	f000 816f 	beq.w	801da2a <_dtoa_r+0xb1a>
 801d74c:	2300      	movs	r3, #0
 801d74e:	4629      	mov	r1, r5
 801d750:	220a      	movs	r2, #10
 801d752:	4658      	mov	r0, fp
 801d754:	f000 f9c8 	bl	801dae8 <__multadd>
 801d758:	9b00      	ldr	r3, [sp, #0]
 801d75a:	2b00      	cmp	r3, #0
 801d75c:	4605      	mov	r5, r0
 801d75e:	dc67      	bgt.n	801d830 <_dtoa_r+0x920>
 801d760:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d762:	2b02      	cmp	r3, #2
 801d764:	dc41      	bgt.n	801d7ea <_dtoa_r+0x8da>
 801d766:	e063      	b.n	801d830 <_dtoa_r+0x920>
 801d768:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d76a:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 801d76e:	e746      	b.n	801d5fe <_dtoa_r+0x6ee>
 801d770:	9b07      	ldr	r3, [sp, #28]
 801d772:	1e5c      	subs	r4, r3, #1
 801d774:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d776:	42a3      	cmp	r3, r4
 801d778:	bfbf      	itttt	lt
 801d77a:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 801d77c:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 801d77e:	940a      	strlt	r4, [sp, #40]	@ 0x28
 801d780:	1ae3      	sublt	r3, r4, r3
 801d782:	bfb4      	ite	lt
 801d784:	18d2      	addlt	r2, r2, r3
 801d786:	1b1c      	subge	r4, r3, r4
 801d788:	9b07      	ldr	r3, [sp, #28]
 801d78a:	bfbc      	itt	lt
 801d78c:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 801d78e:	2400      	movlt	r4, #0
 801d790:	2b00      	cmp	r3, #0
 801d792:	bfb5      	itete	lt
 801d794:	eba8 0603 	sublt.w	r6, r8, r3
 801d798:	9b07      	ldrge	r3, [sp, #28]
 801d79a:	2300      	movlt	r3, #0
 801d79c:	4646      	movge	r6, r8
 801d79e:	e730      	b.n	801d602 <_dtoa_r+0x6f2>
 801d7a0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d7a2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801d7a4:	4646      	mov	r6, r8
 801d7a6:	e735      	b.n	801d614 <_dtoa_r+0x704>
 801d7a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d7aa:	e75c      	b.n	801d666 <_dtoa_r+0x756>
 801d7ac:	2300      	movs	r3, #0
 801d7ae:	e788      	b.n	801d6c2 <_dtoa_r+0x7b2>
 801d7b0:	3fe00000 	.word	0x3fe00000
 801d7b4:	40240000 	.word	0x40240000
 801d7b8:	40140000 	.word	0x40140000
 801d7bc:	9b02      	ldr	r3, [sp, #8]
 801d7be:	e780      	b.n	801d6c2 <_dtoa_r+0x7b2>
 801d7c0:	2300      	movs	r3, #0
 801d7c2:	930a      	str	r3, [sp, #40]	@ 0x28
 801d7c4:	e782      	b.n	801d6cc <_dtoa_r+0x7bc>
 801d7c6:	d099      	beq.n	801d6fc <_dtoa_r+0x7ec>
 801d7c8:	9a08      	ldr	r2, [sp, #32]
 801d7ca:	331c      	adds	r3, #28
 801d7cc:	441a      	add	r2, r3
 801d7ce:	4498      	add	r8, r3
 801d7d0:	441e      	add	r6, r3
 801d7d2:	9208      	str	r2, [sp, #32]
 801d7d4:	e792      	b.n	801d6fc <_dtoa_r+0x7ec>
 801d7d6:	4603      	mov	r3, r0
 801d7d8:	e7f6      	b.n	801d7c8 <_dtoa_r+0x8b8>
 801d7da:	9b07      	ldr	r3, [sp, #28]
 801d7dc:	9704      	str	r7, [sp, #16]
 801d7de:	2b00      	cmp	r3, #0
 801d7e0:	dc20      	bgt.n	801d824 <_dtoa_r+0x914>
 801d7e2:	9300      	str	r3, [sp, #0]
 801d7e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d7e6:	2b02      	cmp	r3, #2
 801d7e8:	dd1e      	ble.n	801d828 <_dtoa_r+0x918>
 801d7ea:	9b00      	ldr	r3, [sp, #0]
 801d7ec:	2b00      	cmp	r3, #0
 801d7ee:	f47f aec0 	bne.w	801d572 <_dtoa_r+0x662>
 801d7f2:	4621      	mov	r1, r4
 801d7f4:	2205      	movs	r2, #5
 801d7f6:	4658      	mov	r0, fp
 801d7f8:	f000 f976 	bl	801dae8 <__multadd>
 801d7fc:	4601      	mov	r1, r0
 801d7fe:	4604      	mov	r4, r0
 801d800:	4648      	mov	r0, r9
 801d802:	f000 fb6f 	bl	801dee4 <__mcmp>
 801d806:	2800      	cmp	r0, #0
 801d808:	f77f aeb3 	ble.w	801d572 <_dtoa_r+0x662>
 801d80c:	4656      	mov	r6, sl
 801d80e:	2331      	movs	r3, #49	@ 0x31
 801d810:	f806 3b01 	strb.w	r3, [r6], #1
 801d814:	9b04      	ldr	r3, [sp, #16]
 801d816:	3301      	adds	r3, #1
 801d818:	9304      	str	r3, [sp, #16]
 801d81a:	e6ae      	b.n	801d57a <_dtoa_r+0x66a>
 801d81c:	9c07      	ldr	r4, [sp, #28]
 801d81e:	9704      	str	r7, [sp, #16]
 801d820:	4625      	mov	r5, r4
 801d822:	e7f3      	b.n	801d80c <_dtoa_r+0x8fc>
 801d824:	9b07      	ldr	r3, [sp, #28]
 801d826:	9300      	str	r3, [sp, #0]
 801d828:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d82a:	2b00      	cmp	r3, #0
 801d82c:	f000 8101 	beq.w	801da32 <_dtoa_r+0xb22>
 801d830:	2e00      	cmp	r6, #0
 801d832:	dd05      	ble.n	801d840 <_dtoa_r+0x930>
 801d834:	4629      	mov	r1, r5
 801d836:	4632      	mov	r2, r6
 801d838:	4658      	mov	r0, fp
 801d83a:	f000 fae7 	bl	801de0c <__lshift>
 801d83e:	4605      	mov	r5, r0
 801d840:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d842:	2b00      	cmp	r3, #0
 801d844:	d059      	beq.n	801d8fa <_dtoa_r+0x9ea>
 801d846:	6869      	ldr	r1, [r5, #4]
 801d848:	4658      	mov	r0, fp
 801d84a:	f000 f91f 	bl	801da8c <_Balloc>
 801d84e:	4606      	mov	r6, r0
 801d850:	b920      	cbnz	r0, 801d85c <_dtoa_r+0x94c>
 801d852:	4b83      	ldr	r3, [pc, #524]	@ (801da60 <_dtoa_r+0xb50>)
 801d854:	4602      	mov	r2, r0
 801d856:	f240 21ef 	movw	r1, #751	@ 0x2ef
 801d85a:	e480      	b.n	801d15e <_dtoa_r+0x24e>
 801d85c:	692a      	ldr	r2, [r5, #16]
 801d85e:	3202      	adds	r2, #2
 801d860:	0092      	lsls	r2, r2, #2
 801d862:	f105 010c 	add.w	r1, r5, #12
 801d866:	300c      	adds	r0, #12
 801d868:	f7fd fbac 	bl	801afc4 <memcpy>
 801d86c:	2201      	movs	r2, #1
 801d86e:	4631      	mov	r1, r6
 801d870:	4658      	mov	r0, fp
 801d872:	f000 facb 	bl	801de0c <__lshift>
 801d876:	f10a 0301 	add.w	r3, sl, #1
 801d87a:	9307      	str	r3, [sp, #28]
 801d87c:	9b00      	ldr	r3, [sp, #0]
 801d87e:	4453      	add	r3, sl
 801d880:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d882:	9b02      	ldr	r3, [sp, #8]
 801d884:	f003 0301 	and.w	r3, r3, #1
 801d888:	462f      	mov	r7, r5
 801d88a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d88c:	4605      	mov	r5, r0
 801d88e:	9b07      	ldr	r3, [sp, #28]
 801d890:	4621      	mov	r1, r4
 801d892:	3b01      	subs	r3, #1
 801d894:	4648      	mov	r0, r9
 801d896:	9300      	str	r3, [sp, #0]
 801d898:	f7ff fab2 	bl	801ce00 <quorem>
 801d89c:	4639      	mov	r1, r7
 801d89e:	9002      	str	r0, [sp, #8]
 801d8a0:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801d8a4:	4648      	mov	r0, r9
 801d8a6:	f000 fb1d 	bl	801dee4 <__mcmp>
 801d8aa:	462a      	mov	r2, r5
 801d8ac:	9008      	str	r0, [sp, #32]
 801d8ae:	4621      	mov	r1, r4
 801d8b0:	4658      	mov	r0, fp
 801d8b2:	f000 fb33 	bl	801df1c <__mdiff>
 801d8b6:	68c2      	ldr	r2, [r0, #12]
 801d8b8:	4606      	mov	r6, r0
 801d8ba:	bb02      	cbnz	r2, 801d8fe <_dtoa_r+0x9ee>
 801d8bc:	4601      	mov	r1, r0
 801d8be:	4648      	mov	r0, r9
 801d8c0:	f000 fb10 	bl	801dee4 <__mcmp>
 801d8c4:	4602      	mov	r2, r0
 801d8c6:	4631      	mov	r1, r6
 801d8c8:	4658      	mov	r0, fp
 801d8ca:	920e      	str	r2, [sp, #56]	@ 0x38
 801d8cc:	f000 f903 	bl	801dad6 <_Bfree>
 801d8d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d8d2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d8d4:	9e07      	ldr	r6, [sp, #28]
 801d8d6:	ea43 0102 	orr.w	r1, r3, r2
 801d8da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d8dc:	4319      	orrs	r1, r3
 801d8de:	d110      	bne.n	801d902 <_dtoa_r+0x9f2>
 801d8e0:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d8e4:	d029      	beq.n	801d93a <_dtoa_r+0xa2a>
 801d8e6:	9b08      	ldr	r3, [sp, #32]
 801d8e8:	2b00      	cmp	r3, #0
 801d8ea:	dd02      	ble.n	801d8f2 <_dtoa_r+0x9e2>
 801d8ec:	9b02      	ldr	r3, [sp, #8]
 801d8ee:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 801d8f2:	9b00      	ldr	r3, [sp, #0]
 801d8f4:	f883 8000 	strb.w	r8, [r3]
 801d8f8:	e640      	b.n	801d57c <_dtoa_r+0x66c>
 801d8fa:	4628      	mov	r0, r5
 801d8fc:	e7bb      	b.n	801d876 <_dtoa_r+0x966>
 801d8fe:	2201      	movs	r2, #1
 801d900:	e7e1      	b.n	801d8c6 <_dtoa_r+0x9b6>
 801d902:	9b08      	ldr	r3, [sp, #32]
 801d904:	2b00      	cmp	r3, #0
 801d906:	db04      	blt.n	801d912 <_dtoa_r+0xa02>
 801d908:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d90a:	430b      	orrs	r3, r1
 801d90c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d90e:	430b      	orrs	r3, r1
 801d910:	d120      	bne.n	801d954 <_dtoa_r+0xa44>
 801d912:	2a00      	cmp	r2, #0
 801d914:	dded      	ble.n	801d8f2 <_dtoa_r+0x9e2>
 801d916:	4649      	mov	r1, r9
 801d918:	2201      	movs	r2, #1
 801d91a:	4658      	mov	r0, fp
 801d91c:	f000 fa76 	bl	801de0c <__lshift>
 801d920:	4621      	mov	r1, r4
 801d922:	4681      	mov	r9, r0
 801d924:	f000 fade 	bl	801dee4 <__mcmp>
 801d928:	2800      	cmp	r0, #0
 801d92a:	dc03      	bgt.n	801d934 <_dtoa_r+0xa24>
 801d92c:	d1e1      	bne.n	801d8f2 <_dtoa_r+0x9e2>
 801d92e:	f018 0f01 	tst.w	r8, #1
 801d932:	d0de      	beq.n	801d8f2 <_dtoa_r+0x9e2>
 801d934:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d938:	d1d8      	bne.n	801d8ec <_dtoa_r+0x9dc>
 801d93a:	9a00      	ldr	r2, [sp, #0]
 801d93c:	2339      	movs	r3, #57	@ 0x39
 801d93e:	7013      	strb	r3, [r2, #0]
 801d940:	4633      	mov	r3, r6
 801d942:	461e      	mov	r6, r3
 801d944:	3b01      	subs	r3, #1
 801d946:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 801d94a:	2a39      	cmp	r2, #57	@ 0x39
 801d94c:	d052      	beq.n	801d9f4 <_dtoa_r+0xae4>
 801d94e:	3201      	adds	r2, #1
 801d950:	701a      	strb	r2, [r3, #0]
 801d952:	e613      	b.n	801d57c <_dtoa_r+0x66c>
 801d954:	2a00      	cmp	r2, #0
 801d956:	dd07      	ble.n	801d968 <_dtoa_r+0xa58>
 801d958:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 801d95c:	d0ed      	beq.n	801d93a <_dtoa_r+0xa2a>
 801d95e:	9a00      	ldr	r2, [sp, #0]
 801d960:	f108 0301 	add.w	r3, r8, #1
 801d964:	7013      	strb	r3, [r2, #0]
 801d966:	e609      	b.n	801d57c <_dtoa_r+0x66c>
 801d968:	9b07      	ldr	r3, [sp, #28]
 801d96a:	9a07      	ldr	r2, [sp, #28]
 801d96c:	f803 8c01 	strb.w	r8, [r3, #-1]
 801d970:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d972:	4293      	cmp	r3, r2
 801d974:	d028      	beq.n	801d9c8 <_dtoa_r+0xab8>
 801d976:	4649      	mov	r1, r9
 801d978:	2300      	movs	r3, #0
 801d97a:	220a      	movs	r2, #10
 801d97c:	4658      	mov	r0, fp
 801d97e:	f000 f8b3 	bl	801dae8 <__multadd>
 801d982:	42af      	cmp	r7, r5
 801d984:	4681      	mov	r9, r0
 801d986:	f04f 0300 	mov.w	r3, #0
 801d98a:	f04f 020a 	mov.w	r2, #10
 801d98e:	4639      	mov	r1, r7
 801d990:	4658      	mov	r0, fp
 801d992:	d107      	bne.n	801d9a4 <_dtoa_r+0xa94>
 801d994:	f000 f8a8 	bl	801dae8 <__multadd>
 801d998:	4607      	mov	r7, r0
 801d99a:	4605      	mov	r5, r0
 801d99c:	9b07      	ldr	r3, [sp, #28]
 801d99e:	3301      	adds	r3, #1
 801d9a0:	9307      	str	r3, [sp, #28]
 801d9a2:	e774      	b.n	801d88e <_dtoa_r+0x97e>
 801d9a4:	f000 f8a0 	bl	801dae8 <__multadd>
 801d9a8:	4629      	mov	r1, r5
 801d9aa:	4607      	mov	r7, r0
 801d9ac:	2300      	movs	r3, #0
 801d9ae:	220a      	movs	r2, #10
 801d9b0:	4658      	mov	r0, fp
 801d9b2:	f000 f899 	bl	801dae8 <__multadd>
 801d9b6:	4605      	mov	r5, r0
 801d9b8:	e7f0      	b.n	801d99c <_dtoa_r+0xa8c>
 801d9ba:	9b00      	ldr	r3, [sp, #0]
 801d9bc:	2b00      	cmp	r3, #0
 801d9be:	bfcc      	ite	gt
 801d9c0:	461e      	movgt	r6, r3
 801d9c2:	2601      	movle	r6, #1
 801d9c4:	4456      	add	r6, sl
 801d9c6:	2700      	movs	r7, #0
 801d9c8:	4649      	mov	r1, r9
 801d9ca:	2201      	movs	r2, #1
 801d9cc:	4658      	mov	r0, fp
 801d9ce:	f000 fa1d 	bl	801de0c <__lshift>
 801d9d2:	4621      	mov	r1, r4
 801d9d4:	4681      	mov	r9, r0
 801d9d6:	f000 fa85 	bl	801dee4 <__mcmp>
 801d9da:	2800      	cmp	r0, #0
 801d9dc:	dcb0      	bgt.n	801d940 <_dtoa_r+0xa30>
 801d9de:	d102      	bne.n	801d9e6 <_dtoa_r+0xad6>
 801d9e0:	f018 0f01 	tst.w	r8, #1
 801d9e4:	d1ac      	bne.n	801d940 <_dtoa_r+0xa30>
 801d9e6:	4633      	mov	r3, r6
 801d9e8:	461e      	mov	r6, r3
 801d9ea:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801d9ee:	2a30      	cmp	r2, #48	@ 0x30
 801d9f0:	d0fa      	beq.n	801d9e8 <_dtoa_r+0xad8>
 801d9f2:	e5c3      	b.n	801d57c <_dtoa_r+0x66c>
 801d9f4:	459a      	cmp	sl, r3
 801d9f6:	d1a4      	bne.n	801d942 <_dtoa_r+0xa32>
 801d9f8:	9b04      	ldr	r3, [sp, #16]
 801d9fa:	3301      	adds	r3, #1
 801d9fc:	9304      	str	r3, [sp, #16]
 801d9fe:	2331      	movs	r3, #49	@ 0x31
 801da00:	f88a 3000 	strb.w	r3, [sl]
 801da04:	e5ba      	b.n	801d57c <_dtoa_r+0x66c>
 801da06:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801da08:	f8df a058 	ldr.w	sl, [pc, #88]	@ 801da64 <_dtoa_r+0xb54>
 801da0c:	2b00      	cmp	r3, #0
 801da0e:	f43f aab6 	beq.w	801cf7e <_dtoa_r+0x6e>
 801da12:	f10a 0308 	add.w	r3, sl, #8
 801da16:	f7ff bab0 	b.w	801cf7a <_dtoa_r+0x6a>
 801da1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801da1c:	2b01      	cmp	r3, #1
 801da1e:	f77f ae3a 	ble.w	801d696 <_dtoa_r+0x786>
 801da22:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801da24:	930a      	str	r3, [sp, #40]	@ 0x28
 801da26:	2001      	movs	r0, #1
 801da28:	e658      	b.n	801d6dc <_dtoa_r+0x7cc>
 801da2a:	9b00      	ldr	r3, [sp, #0]
 801da2c:	2b00      	cmp	r3, #0
 801da2e:	f77f aed9 	ble.w	801d7e4 <_dtoa_r+0x8d4>
 801da32:	4656      	mov	r6, sl
 801da34:	4621      	mov	r1, r4
 801da36:	4648      	mov	r0, r9
 801da38:	f7ff f9e2 	bl	801ce00 <quorem>
 801da3c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 801da40:	f806 8b01 	strb.w	r8, [r6], #1
 801da44:	9b00      	ldr	r3, [sp, #0]
 801da46:	eba6 020a 	sub.w	r2, r6, sl
 801da4a:	4293      	cmp	r3, r2
 801da4c:	ddb5      	ble.n	801d9ba <_dtoa_r+0xaaa>
 801da4e:	4649      	mov	r1, r9
 801da50:	2300      	movs	r3, #0
 801da52:	220a      	movs	r2, #10
 801da54:	4658      	mov	r0, fp
 801da56:	f000 f847 	bl	801dae8 <__multadd>
 801da5a:	4681      	mov	r9, r0
 801da5c:	e7ea      	b.n	801da34 <_dtoa_r+0xb24>
 801da5e:	bf00      	nop
 801da60:	0802169f 	.word	0x0802169f
 801da64:	08021692 	.word	0x08021692

0801da68 <__ascii_mbtowc>:
 801da68:	b082      	sub	sp, #8
 801da6a:	b901      	cbnz	r1, 801da6e <__ascii_mbtowc+0x6>
 801da6c:	a901      	add	r1, sp, #4
 801da6e:	b142      	cbz	r2, 801da82 <__ascii_mbtowc+0x1a>
 801da70:	b14b      	cbz	r3, 801da86 <__ascii_mbtowc+0x1e>
 801da72:	7813      	ldrb	r3, [r2, #0]
 801da74:	600b      	str	r3, [r1, #0]
 801da76:	7812      	ldrb	r2, [r2, #0]
 801da78:	1e10      	subs	r0, r2, #0
 801da7a:	bf18      	it	ne
 801da7c:	2001      	movne	r0, #1
 801da7e:	b002      	add	sp, #8
 801da80:	4770      	bx	lr
 801da82:	4610      	mov	r0, r2
 801da84:	e7fb      	b.n	801da7e <__ascii_mbtowc+0x16>
 801da86:	f06f 0001 	mvn.w	r0, #1
 801da8a:	e7f8      	b.n	801da7e <__ascii_mbtowc+0x16>

0801da8c <_Balloc>:
 801da8c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801da8e:	b570      	push	{r4, r5, r6, lr}
 801da90:	4605      	mov	r5, r0
 801da92:	460c      	mov	r4, r1
 801da94:	b17b      	cbz	r3, 801dab6 <_Balloc+0x2a>
 801da96:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 801da98:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801da9c:	b9a0      	cbnz	r0, 801dac8 <_Balloc+0x3c>
 801da9e:	2101      	movs	r1, #1
 801daa0:	fa01 f604 	lsl.w	r6, r1, r4
 801daa4:	1d72      	adds	r2, r6, #5
 801daa6:	0092      	lsls	r2, r2, #2
 801daa8:	4628      	mov	r0, r5
 801daaa:	f000 fd8d 	bl	801e5c8 <_calloc_r>
 801daae:	b148      	cbz	r0, 801dac4 <_Balloc+0x38>
 801dab0:	e9c0 4601 	strd	r4, r6, [r0, #4]
 801dab4:	e00b      	b.n	801dace <_Balloc+0x42>
 801dab6:	2221      	movs	r2, #33	@ 0x21
 801dab8:	2104      	movs	r1, #4
 801daba:	f000 fd85 	bl	801e5c8 <_calloc_r>
 801dabe:	6468      	str	r0, [r5, #68]	@ 0x44
 801dac0:	2800      	cmp	r0, #0
 801dac2:	d1e8      	bne.n	801da96 <_Balloc+0xa>
 801dac4:	2000      	movs	r0, #0
 801dac6:	bd70      	pop	{r4, r5, r6, pc}
 801dac8:	6802      	ldr	r2, [r0, #0]
 801daca:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 801dace:	2300      	movs	r3, #0
 801dad0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801dad4:	e7f7      	b.n	801dac6 <_Balloc+0x3a>

0801dad6 <_Bfree>:
 801dad6:	b131      	cbz	r1, 801dae6 <_Bfree+0x10>
 801dad8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801dada:	684a      	ldr	r2, [r1, #4]
 801dadc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801dae0:	6008      	str	r0, [r1, #0]
 801dae2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801dae6:	4770      	bx	lr

0801dae8 <__multadd>:
 801dae8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801daec:	690d      	ldr	r5, [r1, #16]
 801daee:	4607      	mov	r7, r0
 801daf0:	460c      	mov	r4, r1
 801daf2:	461e      	mov	r6, r3
 801daf4:	f101 0c14 	add.w	ip, r1, #20
 801daf8:	2000      	movs	r0, #0
 801dafa:	f8dc 3000 	ldr.w	r3, [ip]
 801dafe:	b299      	uxth	r1, r3
 801db00:	fb02 6101 	mla	r1, r2, r1, r6
 801db04:	0c1e      	lsrs	r6, r3, #16
 801db06:	0c0b      	lsrs	r3, r1, #16
 801db08:	fb02 3306 	mla	r3, r2, r6, r3
 801db0c:	b289      	uxth	r1, r1
 801db0e:	3001      	adds	r0, #1
 801db10:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801db14:	4285      	cmp	r5, r0
 801db16:	f84c 1b04 	str.w	r1, [ip], #4
 801db1a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801db1e:	dcec      	bgt.n	801dafa <__multadd+0x12>
 801db20:	b30e      	cbz	r6, 801db66 <__multadd+0x7e>
 801db22:	68a3      	ldr	r3, [r4, #8]
 801db24:	42ab      	cmp	r3, r5
 801db26:	dc19      	bgt.n	801db5c <__multadd+0x74>
 801db28:	6861      	ldr	r1, [r4, #4]
 801db2a:	4638      	mov	r0, r7
 801db2c:	3101      	adds	r1, #1
 801db2e:	f7ff ffad 	bl	801da8c <_Balloc>
 801db32:	4680      	mov	r8, r0
 801db34:	b928      	cbnz	r0, 801db42 <__multadd+0x5a>
 801db36:	4602      	mov	r2, r0
 801db38:	4b0c      	ldr	r3, [pc, #48]	@ (801db6c <__multadd+0x84>)
 801db3a:	480d      	ldr	r0, [pc, #52]	@ (801db70 <__multadd+0x88>)
 801db3c:	21ba      	movs	r1, #186	@ 0xba
 801db3e:	f000 fd25 	bl	801e58c <__assert_func>
 801db42:	6922      	ldr	r2, [r4, #16]
 801db44:	3202      	adds	r2, #2
 801db46:	f104 010c 	add.w	r1, r4, #12
 801db4a:	0092      	lsls	r2, r2, #2
 801db4c:	300c      	adds	r0, #12
 801db4e:	f7fd fa39 	bl	801afc4 <memcpy>
 801db52:	4621      	mov	r1, r4
 801db54:	4638      	mov	r0, r7
 801db56:	f7ff ffbe 	bl	801dad6 <_Bfree>
 801db5a:	4644      	mov	r4, r8
 801db5c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801db60:	3501      	adds	r5, #1
 801db62:	615e      	str	r6, [r3, #20]
 801db64:	6125      	str	r5, [r4, #16]
 801db66:	4620      	mov	r0, r4
 801db68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801db6c:	0802169f 	.word	0x0802169f
 801db70:	08021708 	.word	0x08021708

0801db74 <__hi0bits>:
 801db74:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 801db78:	4603      	mov	r3, r0
 801db7a:	bf36      	itet	cc
 801db7c:	0403      	lslcc	r3, r0, #16
 801db7e:	2000      	movcs	r0, #0
 801db80:	2010      	movcc	r0, #16
 801db82:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 801db86:	bf3c      	itt	cc
 801db88:	021b      	lslcc	r3, r3, #8
 801db8a:	3008      	addcc	r0, #8
 801db8c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 801db90:	bf3c      	itt	cc
 801db92:	011b      	lslcc	r3, r3, #4
 801db94:	3004      	addcc	r0, #4
 801db96:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801db9a:	bf3c      	itt	cc
 801db9c:	009b      	lslcc	r3, r3, #2
 801db9e:	3002      	addcc	r0, #2
 801dba0:	2b00      	cmp	r3, #0
 801dba2:	db05      	blt.n	801dbb0 <__hi0bits+0x3c>
 801dba4:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 801dba8:	f100 0001 	add.w	r0, r0, #1
 801dbac:	bf08      	it	eq
 801dbae:	2020      	moveq	r0, #32
 801dbb0:	4770      	bx	lr

0801dbb2 <__lo0bits>:
 801dbb2:	6803      	ldr	r3, [r0, #0]
 801dbb4:	4602      	mov	r2, r0
 801dbb6:	f013 0007 	ands.w	r0, r3, #7
 801dbba:	d00b      	beq.n	801dbd4 <__lo0bits+0x22>
 801dbbc:	07d9      	lsls	r1, r3, #31
 801dbbe:	d421      	bmi.n	801dc04 <__lo0bits+0x52>
 801dbc0:	0798      	lsls	r0, r3, #30
 801dbc2:	bf49      	itett	mi
 801dbc4:	085b      	lsrmi	r3, r3, #1
 801dbc6:	089b      	lsrpl	r3, r3, #2
 801dbc8:	2001      	movmi	r0, #1
 801dbca:	6013      	strmi	r3, [r2, #0]
 801dbcc:	bf5c      	itt	pl
 801dbce:	6013      	strpl	r3, [r2, #0]
 801dbd0:	2002      	movpl	r0, #2
 801dbd2:	4770      	bx	lr
 801dbd4:	b299      	uxth	r1, r3
 801dbd6:	b909      	cbnz	r1, 801dbdc <__lo0bits+0x2a>
 801dbd8:	0c1b      	lsrs	r3, r3, #16
 801dbda:	2010      	movs	r0, #16
 801dbdc:	b2d9      	uxtb	r1, r3
 801dbde:	b909      	cbnz	r1, 801dbe4 <__lo0bits+0x32>
 801dbe0:	3008      	adds	r0, #8
 801dbe2:	0a1b      	lsrs	r3, r3, #8
 801dbe4:	0719      	lsls	r1, r3, #28
 801dbe6:	bf04      	itt	eq
 801dbe8:	091b      	lsreq	r3, r3, #4
 801dbea:	3004      	addeq	r0, #4
 801dbec:	0799      	lsls	r1, r3, #30
 801dbee:	bf04      	itt	eq
 801dbf0:	089b      	lsreq	r3, r3, #2
 801dbf2:	3002      	addeq	r0, #2
 801dbf4:	07d9      	lsls	r1, r3, #31
 801dbf6:	d403      	bmi.n	801dc00 <__lo0bits+0x4e>
 801dbf8:	085b      	lsrs	r3, r3, #1
 801dbfa:	f100 0001 	add.w	r0, r0, #1
 801dbfe:	d003      	beq.n	801dc08 <__lo0bits+0x56>
 801dc00:	6013      	str	r3, [r2, #0]
 801dc02:	4770      	bx	lr
 801dc04:	2000      	movs	r0, #0
 801dc06:	4770      	bx	lr
 801dc08:	2020      	movs	r0, #32
 801dc0a:	4770      	bx	lr

0801dc0c <__i2b>:
 801dc0c:	b510      	push	{r4, lr}
 801dc0e:	460c      	mov	r4, r1
 801dc10:	2101      	movs	r1, #1
 801dc12:	f7ff ff3b 	bl	801da8c <_Balloc>
 801dc16:	4602      	mov	r2, r0
 801dc18:	b928      	cbnz	r0, 801dc26 <__i2b+0x1a>
 801dc1a:	4b05      	ldr	r3, [pc, #20]	@ (801dc30 <__i2b+0x24>)
 801dc1c:	4805      	ldr	r0, [pc, #20]	@ (801dc34 <__i2b+0x28>)
 801dc1e:	f240 1145 	movw	r1, #325	@ 0x145
 801dc22:	f000 fcb3 	bl	801e58c <__assert_func>
 801dc26:	2301      	movs	r3, #1
 801dc28:	6144      	str	r4, [r0, #20]
 801dc2a:	6103      	str	r3, [r0, #16]
 801dc2c:	bd10      	pop	{r4, pc}
 801dc2e:	bf00      	nop
 801dc30:	0802169f 	.word	0x0802169f
 801dc34:	08021708 	.word	0x08021708

0801dc38 <__multiply>:
 801dc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc3c:	4614      	mov	r4, r2
 801dc3e:	690a      	ldr	r2, [r1, #16]
 801dc40:	6923      	ldr	r3, [r4, #16]
 801dc42:	429a      	cmp	r2, r3
 801dc44:	bfa8      	it	ge
 801dc46:	4623      	movge	r3, r4
 801dc48:	460f      	mov	r7, r1
 801dc4a:	bfa4      	itt	ge
 801dc4c:	460c      	movge	r4, r1
 801dc4e:	461f      	movge	r7, r3
 801dc50:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801dc54:	f8d7 9010 	ldr.w	r9, [r7, #16]
 801dc58:	68a3      	ldr	r3, [r4, #8]
 801dc5a:	6861      	ldr	r1, [r4, #4]
 801dc5c:	eb0a 0609 	add.w	r6, sl, r9
 801dc60:	42b3      	cmp	r3, r6
 801dc62:	b085      	sub	sp, #20
 801dc64:	bfb8      	it	lt
 801dc66:	3101      	addlt	r1, #1
 801dc68:	f7ff ff10 	bl	801da8c <_Balloc>
 801dc6c:	b930      	cbnz	r0, 801dc7c <__multiply+0x44>
 801dc6e:	4602      	mov	r2, r0
 801dc70:	4b44      	ldr	r3, [pc, #272]	@ (801dd84 <__multiply+0x14c>)
 801dc72:	4845      	ldr	r0, [pc, #276]	@ (801dd88 <__multiply+0x150>)
 801dc74:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 801dc78:	f000 fc88 	bl	801e58c <__assert_func>
 801dc7c:	f100 0514 	add.w	r5, r0, #20
 801dc80:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801dc84:	462b      	mov	r3, r5
 801dc86:	2200      	movs	r2, #0
 801dc88:	4543      	cmp	r3, r8
 801dc8a:	d321      	bcc.n	801dcd0 <__multiply+0x98>
 801dc8c:	f107 0114 	add.w	r1, r7, #20
 801dc90:	f104 0214 	add.w	r2, r4, #20
 801dc94:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 801dc98:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 801dc9c:	9302      	str	r3, [sp, #8]
 801dc9e:	1b13      	subs	r3, r2, r4
 801dca0:	3b15      	subs	r3, #21
 801dca2:	f023 0303 	bic.w	r3, r3, #3
 801dca6:	3304      	adds	r3, #4
 801dca8:	f104 0715 	add.w	r7, r4, #21
 801dcac:	42ba      	cmp	r2, r7
 801dcae:	bf38      	it	cc
 801dcb0:	2304      	movcc	r3, #4
 801dcb2:	9301      	str	r3, [sp, #4]
 801dcb4:	9b02      	ldr	r3, [sp, #8]
 801dcb6:	9103      	str	r1, [sp, #12]
 801dcb8:	428b      	cmp	r3, r1
 801dcba:	d80c      	bhi.n	801dcd6 <__multiply+0x9e>
 801dcbc:	2e00      	cmp	r6, #0
 801dcbe:	dd03      	ble.n	801dcc8 <__multiply+0x90>
 801dcc0:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801dcc4:	2b00      	cmp	r3, #0
 801dcc6:	d05b      	beq.n	801dd80 <__multiply+0x148>
 801dcc8:	6106      	str	r6, [r0, #16]
 801dcca:	b005      	add	sp, #20
 801dccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dcd0:	f843 2b04 	str.w	r2, [r3], #4
 801dcd4:	e7d8      	b.n	801dc88 <__multiply+0x50>
 801dcd6:	f8b1 a000 	ldrh.w	sl, [r1]
 801dcda:	f1ba 0f00 	cmp.w	sl, #0
 801dcde:	d024      	beq.n	801dd2a <__multiply+0xf2>
 801dce0:	f104 0e14 	add.w	lr, r4, #20
 801dce4:	46a9      	mov	r9, r5
 801dce6:	f04f 0c00 	mov.w	ip, #0
 801dcea:	f85e 7b04 	ldr.w	r7, [lr], #4
 801dcee:	f8d9 3000 	ldr.w	r3, [r9]
 801dcf2:	fa1f fb87 	uxth.w	fp, r7
 801dcf6:	b29b      	uxth	r3, r3
 801dcf8:	fb0a 330b 	mla	r3, sl, fp, r3
 801dcfc:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 801dd00:	f8d9 7000 	ldr.w	r7, [r9]
 801dd04:	4463      	add	r3, ip
 801dd06:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801dd0a:	fb0a c70b 	mla	r7, sl, fp, ip
 801dd0e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 801dd12:	b29b      	uxth	r3, r3
 801dd14:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 801dd18:	4572      	cmp	r2, lr
 801dd1a:	f849 3b04 	str.w	r3, [r9], #4
 801dd1e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801dd22:	d8e2      	bhi.n	801dcea <__multiply+0xb2>
 801dd24:	9b01      	ldr	r3, [sp, #4]
 801dd26:	f845 c003 	str.w	ip, [r5, r3]
 801dd2a:	9b03      	ldr	r3, [sp, #12]
 801dd2c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 801dd30:	3104      	adds	r1, #4
 801dd32:	f1b9 0f00 	cmp.w	r9, #0
 801dd36:	d021      	beq.n	801dd7c <__multiply+0x144>
 801dd38:	682b      	ldr	r3, [r5, #0]
 801dd3a:	f104 0c14 	add.w	ip, r4, #20
 801dd3e:	46ae      	mov	lr, r5
 801dd40:	f04f 0a00 	mov.w	sl, #0
 801dd44:	f8bc b000 	ldrh.w	fp, [ip]
 801dd48:	f8be 7002 	ldrh.w	r7, [lr, #2]
 801dd4c:	fb09 770b 	mla	r7, r9, fp, r7
 801dd50:	4457      	add	r7, sl
 801dd52:	b29b      	uxth	r3, r3
 801dd54:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 801dd58:	f84e 3b04 	str.w	r3, [lr], #4
 801dd5c:	f85c 3b04 	ldr.w	r3, [ip], #4
 801dd60:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801dd64:	f8be 3000 	ldrh.w	r3, [lr]
 801dd68:	fb09 330a 	mla	r3, r9, sl, r3
 801dd6c:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 801dd70:	4562      	cmp	r2, ip
 801dd72:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801dd76:	d8e5      	bhi.n	801dd44 <__multiply+0x10c>
 801dd78:	9f01      	ldr	r7, [sp, #4]
 801dd7a:	51eb      	str	r3, [r5, r7]
 801dd7c:	3504      	adds	r5, #4
 801dd7e:	e799      	b.n	801dcb4 <__multiply+0x7c>
 801dd80:	3e01      	subs	r6, #1
 801dd82:	e79b      	b.n	801dcbc <__multiply+0x84>
 801dd84:	0802169f 	.word	0x0802169f
 801dd88:	08021708 	.word	0x08021708

0801dd8c <__pow5mult>:
 801dd8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801dd90:	4615      	mov	r5, r2
 801dd92:	f012 0203 	ands.w	r2, r2, #3
 801dd96:	4607      	mov	r7, r0
 801dd98:	460e      	mov	r6, r1
 801dd9a:	d007      	beq.n	801ddac <__pow5mult+0x20>
 801dd9c:	4c1a      	ldr	r4, [pc, #104]	@ (801de08 <__pow5mult+0x7c>)
 801dd9e:	3a01      	subs	r2, #1
 801dda0:	2300      	movs	r3, #0
 801dda2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801dda6:	f7ff fe9f 	bl	801dae8 <__multadd>
 801ddaa:	4606      	mov	r6, r0
 801ddac:	10ad      	asrs	r5, r5, #2
 801ddae:	d027      	beq.n	801de00 <__pow5mult+0x74>
 801ddb0:	6c3c      	ldr	r4, [r7, #64]	@ 0x40
 801ddb2:	b944      	cbnz	r4, 801ddc6 <__pow5mult+0x3a>
 801ddb4:	f240 2171 	movw	r1, #625	@ 0x271
 801ddb8:	4638      	mov	r0, r7
 801ddba:	f7ff ff27 	bl	801dc0c <__i2b>
 801ddbe:	2300      	movs	r3, #0
 801ddc0:	6438      	str	r0, [r7, #64]	@ 0x40
 801ddc2:	4604      	mov	r4, r0
 801ddc4:	6003      	str	r3, [r0, #0]
 801ddc6:	f04f 0900 	mov.w	r9, #0
 801ddca:	07eb      	lsls	r3, r5, #31
 801ddcc:	d50a      	bpl.n	801dde4 <__pow5mult+0x58>
 801ddce:	4631      	mov	r1, r6
 801ddd0:	4622      	mov	r2, r4
 801ddd2:	4638      	mov	r0, r7
 801ddd4:	f7ff ff30 	bl	801dc38 <__multiply>
 801ddd8:	4631      	mov	r1, r6
 801ddda:	4680      	mov	r8, r0
 801dddc:	4638      	mov	r0, r7
 801ddde:	f7ff fe7a 	bl	801dad6 <_Bfree>
 801dde2:	4646      	mov	r6, r8
 801dde4:	106d      	asrs	r5, r5, #1
 801dde6:	d00b      	beq.n	801de00 <__pow5mult+0x74>
 801dde8:	6820      	ldr	r0, [r4, #0]
 801ddea:	b938      	cbnz	r0, 801ddfc <__pow5mult+0x70>
 801ddec:	4622      	mov	r2, r4
 801ddee:	4621      	mov	r1, r4
 801ddf0:	4638      	mov	r0, r7
 801ddf2:	f7ff ff21 	bl	801dc38 <__multiply>
 801ddf6:	6020      	str	r0, [r4, #0]
 801ddf8:	f8c0 9000 	str.w	r9, [r0]
 801ddfc:	4604      	mov	r4, r0
 801ddfe:	e7e4      	b.n	801ddca <__pow5mult+0x3e>
 801de00:	4630      	mov	r0, r6
 801de02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801de06:	bf00      	nop
 801de08:	08021764 	.word	0x08021764

0801de0c <__lshift>:
 801de0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801de10:	460c      	mov	r4, r1
 801de12:	6849      	ldr	r1, [r1, #4]
 801de14:	6923      	ldr	r3, [r4, #16]
 801de16:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801de1a:	68a3      	ldr	r3, [r4, #8]
 801de1c:	4607      	mov	r7, r0
 801de1e:	4691      	mov	r9, r2
 801de20:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801de24:	f108 0601 	add.w	r6, r8, #1
 801de28:	42b3      	cmp	r3, r6
 801de2a:	db0b      	blt.n	801de44 <__lshift+0x38>
 801de2c:	4638      	mov	r0, r7
 801de2e:	f7ff fe2d 	bl	801da8c <_Balloc>
 801de32:	4605      	mov	r5, r0
 801de34:	b948      	cbnz	r0, 801de4a <__lshift+0x3e>
 801de36:	4602      	mov	r2, r0
 801de38:	4b28      	ldr	r3, [pc, #160]	@ (801dedc <__lshift+0xd0>)
 801de3a:	4829      	ldr	r0, [pc, #164]	@ (801dee0 <__lshift+0xd4>)
 801de3c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 801de40:	f000 fba4 	bl	801e58c <__assert_func>
 801de44:	3101      	adds	r1, #1
 801de46:	005b      	lsls	r3, r3, #1
 801de48:	e7ee      	b.n	801de28 <__lshift+0x1c>
 801de4a:	2300      	movs	r3, #0
 801de4c:	f100 0114 	add.w	r1, r0, #20
 801de50:	f100 0210 	add.w	r2, r0, #16
 801de54:	4618      	mov	r0, r3
 801de56:	4553      	cmp	r3, sl
 801de58:	db33      	blt.n	801dec2 <__lshift+0xb6>
 801de5a:	6920      	ldr	r0, [r4, #16]
 801de5c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801de60:	f104 0314 	add.w	r3, r4, #20
 801de64:	f019 091f 	ands.w	r9, r9, #31
 801de68:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801de6c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 801de70:	d02b      	beq.n	801deca <__lshift+0xbe>
 801de72:	f1c9 0e20 	rsb	lr, r9, #32
 801de76:	468a      	mov	sl, r1
 801de78:	2200      	movs	r2, #0
 801de7a:	6818      	ldr	r0, [r3, #0]
 801de7c:	fa00 f009 	lsl.w	r0, r0, r9
 801de80:	4310      	orrs	r0, r2
 801de82:	f84a 0b04 	str.w	r0, [sl], #4
 801de86:	f853 2b04 	ldr.w	r2, [r3], #4
 801de8a:	459c      	cmp	ip, r3
 801de8c:	fa22 f20e 	lsr.w	r2, r2, lr
 801de90:	d8f3      	bhi.n	801de7a <__lshift+0x6e>
 801de92:	ebac 0304 	sub.w	r3, ip, r4
 801de96:	3b15      	subs	r3, #21
 801de98:	f023 0303 	bic.w	r3, r3, #3
 801de9c:	3304      	adds	r3, #4
 801de9e:	f104 0015 	add.w	r0, r4, #21
 801dea2:	4584      	cmp	ip, r0
 801dea4:	bf38      	it	cc
 801dea6:	2304      	movcc	r3, #4
 801dea8:	50ca      	str	r2, [r1, r3]
 801deaa:	b10a      	cbz	r2, 801deb0 <__lshift+0xa4>
 801deac:	f108 0602 	add.w	r6, r8, #2
 801deb0:	3e01      	subs	r6, #1
 801deb2:	4638      	mov	r0, r7
 801deb4:	612e      	str	r6, [r5, #16]
 801deb6:	4621      	mov	r1, r4
 801deb8:	f7ff fe0d 	bl	801dad6 <_Bfree>
 801debc:	4628      	mov	r0, r5
 801debe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dec2:	f842 0f04 	str.w	r0, [r2, #4]!
 801dec6:	3301      	adds	r3, #1
 801dec8:	e7c5      	b.n	801de56 <__lshift+0x4a>
 801deca:	3904      	subs	r1, #4
 801decc:	f853 2b04 	ldr.w	r2, [r3], #4
 801ded0:	f841 2f04 	str.w	r2, [r1, #4]!
 801ded4:	459c      	cmp	ip, r3
 801ded6:	d8f9      	bhi.n	801decc <__lshift+0xc0>
 801ded8:	e7ea      	b.n	801deb0 <__lshift+0xa4>
 801deda:	bf00      	nop
 801dedc:	0802169f 	.word	0x0802169f
 801dee0:	08021708 	.word	0x08021708

0801dee4 <__mcmp>:
 801dee4:	690a      	ldr	r2, [r1, #16]
 801dee6:	4603      	mov	r3, r0
 801dee8:	6900      	ldr	r0, [r0, #16]
 801deea:	1a80      	subs	r0, r0, r2
 801deec:	b530      	push	{r4, r5, lr}
 801deee:	d10e      	bne.n	801df0e <__mcmp+0x2a>
 801def0:	3314      	adds	r3, #20
 801def2:	3114      	adds	r1, #20
 801def4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 801def8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 801defc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 801df00:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 801df04:	4295      	cmp	r5, r2
 801df06:	d003      	beq.n	801df10 <__mcmp+0x2c>
 801df08:	d205      	bcs.n	801df16 <__mcmp+0x32>
 801df0a:	f04f 30ff 	mov.w	r0, #4294967295
 801df0e:	bd30      	pop	{r4, r5, pc}
 801df10:	42a3      	cmp	r3, r4
 801df12:	d3f3      	bcc.n	801defc <__mcmp+0x18>
 801df14:	e7fb      	b.n	801df0e <__mcmp+0x2a>
 801df16:	2001      	movs	r0, #1
 801df18:	e7f9      	b.n	801df0e <__mcmp+0x2a>
	...

0801df1c <__mdiff>:
 801df1c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df20:	4689      	mov	r9, r1
 801df22:	4606      	mov	r6, r0
 801df24:	4611      	mov	r1, r2
 801df26:	4648      	mov	r0, r9
 801df28:	4614      	mov	r4, r2
 801df2a:	f7ff ffdb 	bl	801dee4 <__mcmp>
 801df2e:	1e05      	subs	r5, r0, #0
 801df30:	d112      	bne.n	801df58 <__mdiff+0x3c>
 801df32:	4629      	mov	r1, r5
 801df34:	4630      	mov	r0, r6
 801df36:	f7ff fda9 	bl	801da8c <_Balloc>
 801df3a:	4602      	mov	r2, r0
 801df3c:	b928      	cbnz	r0, 801df4a <__mdiff+0x2e>
 801df3e:	4b3f      	ldr	r3, [pc, #252]	@ (801e03c <__mdiff+0x120>)
 801df40:	f240 2137 	movw	r1, #567	@ 0x237
 801df44:	483e      	ldr	r0, [pc, #248]	@ (801e040 <__mdiff+0x124>)
 801df46:	f000 fb21 	bl	801e58c <__assert_func>
 801df4a:	2301      	movs	r3, #1
 801df4c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801df50:	4610      	mov	r0, r2
 801df52:	b003      	add	sp, #12
 801df54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df58:	bfbc      	itt	lt
 801df5a:	464b      	movlt	r3, r9
 801df5c:	46a1      	movlt	r9, r4
 801df5e:	4630      	mov	r0, r6
 801df60:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801df64:	bfba      	itte	lt
 801df66:	461c      	movlt	r4, r3
 801df68:	2501      	movlt	r5, #1
 801df6a:	2500      	movge	r5, #0
 801df6c:	f7ff fd8e 	bl	801da8c <_Balloc>
 801df70:	4602      	mov	r2, r0
 801df72:	b918      	cbnz	r0, 801df7c <__mdiff+0x60>
 801df74:	4b31      	ldr	r3, [pc, #196]	@ (801e03c <__mdiff+0x120>)
 801df76:	f240 2145 	movw	r1, #581	@ 0x245
 801df7a:	e7e3      	b.n	801df44 <__mdiff+0x28>
 801df7c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 801df80:	6926      	ldr	r6, [r4, #16]
 801df82:	60c5      	str	r5, [r0, #12]
 801df84:	f109 0310 	add.w	r3, r9, #16
 801df88:	f109 0514 	add.w	r5, r9, #20
 801df8c:	f104 0e14 	add.w	lr, r4, #20
 801df90:	f100 0b14 	add.w	fp, r0, #20
 801df94:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 801df98:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 801df9c:	9301      	str	r3, [sp, #4]
 801df9e:	46d9      	mov	r9, fp
 801dfa0:	f04f 0c00 	mov.w	ip, #0
 801dfa4:	9b01      	ldr	r3, [sp, #4]
 801dfa6:	f85e 0b04 	ldr.w	r0, [lr], #4
 801dfaa:	f853 af04 	ldr.w	sl, [r3, #4]!
 801dfae:	9301      	str	r3, [sp, #4]
 801dfb0:	fa1f f38a 	uxth.w	r3, sl
 801dfb4:	4619      	mov	r1, r3
 801dfb6:	b283      	uxth	r3, r0
 801dfb8:	1acb      	subs	r3, r1, r3
 801dfba:	0c00      	lsrs	r0, r0, #16
 801dfbc:	4463      	add	r3, ip
 801dfbe:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 801dfc2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 801dfc6:	b29b      	uxth	r3, r3
 801dfc8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 801dfcc:	4576      	cmp	r6, lr
 801dfce:	f849 3b04 	str.w	r3, [r9], #4
 801dfd2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801dfd6:	d8e5      	bhi.n	801dfa4 <__mdiff+0x88>
 801dfd8:	1b33      	subs	r3, r6, r4
 801dfda:	3b15      	subs	r3, #21
 801dfdc:	f023 0303 	bic.w	r3, r3, #3
 801dfe0:	3415      	adds	r4, #21
 801dfe2:	3304      	adds	r3, #4
 801dfe4:	42a6      	cmp	r6, r4
 801dfe6:	bf38      	it	cc
 801dfe8:	2304      	movcc	r3, #4
 801dfea:	441d      	add	r5, r3
 801dfec:	445b      	add	r3, fp
 801dfee:	461e      	mov	r6, r3
 801dff0:	462c      	mov	r4, r5
 801dff2:	4544      	cmp	r4, r8
 801dff4:	d30e      	bcc.n	801e014 <__mdiff+0xf8>
 801dff6:	f108 0103 	add.w	r1, r8, #3
 801dffa:	1b49      	subs	r1, r1, r5
 801dffc:	f021 0103 	bic.w	r1, r1, #3
 801e000:	3d03      	subs	r5, #3
 801e002:	45a8      	cmp	r8, r5
 801e004:	bf38      	it	cc
 801e006:	2100      	movcc	r1, #0
 801e008:	440b      	add	r3, r1
 801e00a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801e00e:	b191      	cbz	r1, 801e036 <__mdiff+0x11a>
 801e010:	6117      	str	r7, [r2, #16]
 801e012:	e79d      	b.n	801df50 <__mdiff+0x34>
 801e014:	f854 1b04 	ldr.w	r1, [r4], #4
 801e018:	46e6      	mov	lr, ip
 801e01a:	0c08      	lsrs	r0, r1, #16
 801e01c:	fa1c fc81 	uxtah	ip, ip, r1
 801e020:	4471      	add	r1, lr
 801e022:	eb00 402c 	add.w	r0, r0, ip, asr #16
 801e026:	b289      	uxth	r1, r1
 801e028:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 801e02c:	f846 1b04 	str.w	r1, [r6], #4
 801e030:	ea4f 4c20 	mov.w	ip, r0, asr #16
 801e034:	e7dd      	b.n	801dff2 <__mdiff+0xd6>
 801e036:	3f01      	subs	r7, #1
 801e038:	e7e7      	b.n	801e00a <__mdiff+0xee>
 801e03a:	bf00      	nop
 801e03c:	0802169f 	.word	0x0802169f
 801e040:	08021708 	.word	0x08021708

0801e044 <__d2b>:
 801e044:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801e048:	460f      	mov	r7, r1
 801e04a:	2101      	movs	r1, #1
 801e04c:	ec59 8b10 	vmov	r8, r9, d0
 801e050:	4616      	mov	r6, r2
 801e052:	f7ff fd1b 	bl	801da8c <_Balloc>
 801e056:	4604      	mov	r4, r0
 801e058:	b930      	cbnz	r0, 801e068 <__d2b+0x24>
 801e05a:	4602      	mov	r2, r0
 801e05c:	4b23      	ldr	r3, [pc, #140]	@ (801e0ec <__d2b+0xa8>)
 801e05e:	4824      	ldr	r0, [pc, #144]	@ (801e0f0 <__d2b+0xac>)
 801e060:	f240 310f 	movw	r1, #783	@ 0x30f
 801e064:	f000 fa92 	bl	801e58c <__assert_func>
 801e068:	f3c9 550a 	ubfx	r5, r9, #20, #11
 801e06c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801e070:	b10d      	cbz	r5, 801e076 <__d2b+0x32>
 801e072:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801e076:	9301      	str	r3, [sp, #4]
 801e078:	f1b8 0300 	subs.w	r3, r8, #0
 801e07c:	d023      	beq.n	801e0c6 <__d2b+0x82>
 801e07e:	4668      	mov	r0, sp
 801e080:	9300      	str	r3, [sp, #0]
 801e082:	f7ff fd96 	bl	801dbb2 <__lo0bits>
 801e086:	e9dd 1200 	ldrd	r1, r2, [sp]
 801e08a:	b1d0      	cbz	r0, 801e0c2 <__d2b+0x7e>
 801e08c:	f1c0 0320 	rsb	r3, r0, #32
 801e090:	fa02 f303 	lsl.w	r3, r2, r3
 801e094:	430b      	orrs	r3, r1
 801e096:	40c2      	lsrs	r2, r0
 801e098:	6163      	str	r3, [r4, #20]
 801e09a:	9201      	str	r2, [sp, #4]
 801e09c:	9b01      	ldr	r3, [sp, #4]
 801e09e:	61a3      	str	r3, [r4, #24]
 801e0a0:	2b00      	cmp	r3, #0
 801e0a2:	bf0c      	ite	eq
 801e0a4:	2201      	moveq	r2, #1
 801e0a6:	2202      	movne	r2, #2
 801e0a8:	6122      	str	r2, [r4, #16]
 801e0aa:	b1a5      	cbz	r5, 801e0d6 <__d2b+0x92>
 801e0ac:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 801e0b0:	4405      	add	r5, r0
 801e0b2:	603d      	str	r5, [r7, #0]
 801e0b4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 801e0b8:	6030      	str	r0, [r6, #0]
 801e0ba:	4620      	mov	r0, r4
 801e0bc:	b003      	add	sp, #12
 801e0be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e0c2:	6161      	str	r1, [r4, #20]
 801e0c4:	e7ea      	b.n	801e09c <__d2b+0x58>
 801e0c6:	a801      	add	r0, sp, #4
 801e0c8:	f7ff fd73 	bl	801dbb2 <__lo0bits>
 801e0cc:	9b01      	ldr	r3, [sp, #4]
 801e0ce:	6163      	str	r3, [r4, #20]
 801e0d0:	3020      	adds	r0, #32
 801e0d2:	2201      	movs	r2, #1
 801e0d4:	e7e8      	b.n	801e0a8 <__d2b+0x64>
 801e0d6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e0da:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 801e0de:	6038      	str	r0, [r7, #0]
 801e0e0:	6918      	ldr	r0, [r3, #16]
 801e0e2:	f7ff fd47 	bl	801db74 <__hi0bits>
 801e0e6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801e0ea:	e7e5      	b.n	801e0b8 <__d2b+0x74>
 801e0ec:	0802169f 	.word	0x0802169f
 801e0f0:	08021708 	.word	0x08021708

0801e0f4 <_realloc_r>:
 801e0f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0f8:	4682      	mov	sl, r0
 801e0fa:	4693      	mov	fp, r2
 801e0fc:	460c      	mov	r4, r1
 801e0fe:	b929      	cbnz	r1, 801e10c <_realloc_r+0x18>
 801e100:	4611      	mov	r1, r2
 801e102:	b003      	add	sp, #12
 801e104:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e108:	f7fd b890 	b.w	801b22c <_malloc_r>
 801e10c:	f7fd fac8 	bl	801b6a0 <__malloc_lock>
 801e110:	f10b 080b 	add.w	r8, fp, #11
 801e114:	f854 5c04 	ldr.w	r5, [r4, #-4]
 801e118:	f1b8 0f16 	cmp.w	r8, #22
 801e11c:	f1a4 0908 	sub.w	r9, r4, #8
 801e120:	f025 0603 	bic.w	r6, r5, #3
 801e124:	d908      	bls.n	801e138 <_realloc_r+0x44>
 801e126:	f038 0807 	bics.w	r8, r8, #7
 801e12a:	d507      	bpl.n	801e13c <_realloc_r+0x48>
 801e12c:	230c      	movs	r3, #12
 801e12e:	f8ca 3000 	str.w	r3, [sl]
 801e132:	f04f 0b00 	mov.w	fp, #0
 801e136:	e032      	b.n	801e19e <_realloc_r+0xaa>
 801e138:	f04f 0810 	mov.w	r8, #16
 801e13c:	45c3      	cmp	fp, r8
 801e13e:	d8f5      	bhi.n	801e12c <_realloc_r+0x38>
 801e140:	4546      	cmp	r6, r8
 801e142:	f280 8174 	bge.w	801e42e <_realloc_r+0x33a>
 801e146:	4b9e      	ldr	r3, [pc, #632]	@ (801e3c0 <_realloc_r+0x2cc>)
 801e148:	f8d3 c008 	ldr.w	ip, [r3, #8]
 801e14c:	eb09 0106 	add.w	r1, r9, r6
 801e150:	458c      	cmp	ip, r1
 801e152:	6848      	ldr	r0, [r1, #4]
 801e154:	d005      	beq.n	801e162 <_realloc_r+0x6e>
 801e156:	f020 0201 	bic.w	r2, r0, #1
 801e15a:	440a      	add	r2, r1
 801e15c:	6852      	ldr	r2, [r2, #4]
 801e15e:	07d7      	lsls	r7, r2, #31
 801e160:	d449      	bmi.n	801e1f6 <_realloc_r+0x102>
 801e162:	f020 0003 	bic.w	r0, r0, #3
 801e166:	458c      	cmp	ip, r1
 801e168:	eb06 0700 	add.w	r7, r6, r0
 801e16c:	d11b      	bne.n	801e1a6 <_realloc_r+0xb2>
 801e16e:	f108 0210 	add.w	r2, r8, #16
 801e172:	42ba      	cmp	r2, r7
 801e174:	dc41      	bgt.n	801e1fa <_realloc_r+0x106>
 801e176:	eb09 0208 	add.w	r2, r9, r8
 801e17a:	eba7 0708 	sub.w	r7, r7, r8
 801e17e:	f047 0701 	orr.w	r7, r7, #1
 801e182:	609a      	str	r2, [r3, #8]
 801e184:	6057      	str	r7, [r2, #4]
 801e186:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801e18a:	f003 0301 	and.w	r3, r3, #1
 801e18e:	ea43 0308 	orr.w	r3, r3, r8
 801e192:	f844 3c04 	str.w	r3, [r4, #-4]
 801e196:	4650      	mov	r0, sl
 801e198:	f7fd fa88 	bl	801b6ac <__malloc_unlock>
 801e19c:	46a3      	mov	fp, r4
 801e19e:	4658      	mov	r0, fp
 801e1a0:	b003      	add	sp, #12
 801e1a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1a6:	45b8      	cmp	r8, r7
 801e1a8:	dc27      	bgt.n	801e1fa <_realloc_r+0x106>
 801e1aa:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 801e1ae:	60d3      	str	r3, [r2, #12]
 801e1b0:	609a      	str	r2, [r3, #8]
 801e1b2:	f8d9 3004 	ldr.w	r3, [r9, #4]
 801e1b6:	eba7 0008 	sub.w	r0, r7, r8
 801e1ba:	280f      	cmp	r0, #15
 801e1bc:	f003 0301 	and.w	r3, r3, #1
 801e1c0:	eb09 0207 	add.w	r2, r9, r7
 801e1c4:	f240 8135 	bls.w	801e432 <_realloc_r+0x33e>
 801e1c8:	eb09 0108 	add.w	r1, r9, r8
 801e1cc:	ea48 0303 	orr.w	r3, r8, r3
 801e1d0:	f040 0001 	orr.w	r0, r0, #1
 801e1d4:	f8c9 3004 	str.w	r3, [r9, #4]
 801e1d8:	6048      	str	r0, [r1, #4]
 801e1da:	6853      	ldr	r3, [r2, #4]
 801e1dc:	f043 0301 	orr.w	r3, r3, #1
 801e1e0:	6053      	str	r3, [r2, #4]
 801e1e2:	3108      	adds	r1, #8
 801e1e4:	4650      	mov	r0, sl
 801e1e6:	f7fc ff61 	bl	801b0ac <_free_r>
 801e1ea:	4650      	mov	r0, sl
 801e1ec:	f7fd fa5e 	bl	801b6ac <__malloc_unlock>
 801e1f0:	f109 0b08 	add.w	fp, r9, #8
 801e1f4:	e7d3      	b.n	801e19e <_realloc_r+0xaa>
 801e1f6:	2000      	movs	r0, #0
 801e1f8:	4601      	mov	r1, r0
 801e1fa:	07ea      	lsls	r2, r5, #31
 801e1fc:	f100 80c7 	bmi.w	801e38e <_realloc_r+0x29a>
 801e200:	f854 5c08 	ldr.w	r5, [r4, #-8]
 801e204:	eba9 0505 	sub.w	r5, r9, r5
 801e208:	686a      	ldr	r2, [r5, #4]
 801e20a:	f022 0203 	bic.w	r2, r2, #3
 801e20e:	4432      	add	r2, r6
 801e210:	9201      	str	r2, [sp, #4]
 801e212:	2900      	cmp	r1, #0
 801e214:	f000 8086 	beq.w	801e324 <_realloc_r+0x230>
 801e218:	458c      	cmp	ip, r1
 801e21a:	eb00 0702 	add.w	r7, r0, r2
 801e21e:	d149      	bne.n	801e2b4 <_realloc_r+0x1c0>
 801e220:	f108 0210 	add.w	r2, r8, #16
 801e224:	42ba      	cmp	r2, r7
 801e226:	dc7d      	bgt.n	801e324 <_realloc_r+0x230>
 801e228:	46ab      	mov	fp, r5
 801e22a:	68ea      	ldr	r2, [r5, #12]
 801e22c:	f85b 1f08 	ldr.w	r1, [fp, #8]!
 801e230:	60ca      	str	r2, [r1, #12]
 801e232:	6091      	str	r1, [r2, #8]
 801e234:	1f32      	subs	r2, r6, #4
 801e236:	2a24      	cmp	r2, #36	@ 0x24
 801e238:	d836      	bhi.n	801e2a8 <_realloc_r+0x1b4>
 801e23a:	2a13      	cmp	r2, #19
 801e23c:	d932      	bls.n	801e2a4 <_realloc_r+0x1b0>
 801e23e:	6821      	ldr	r1, [r4, #0]
 801e240:	60a9      	str	r1, [r5, #8]
 801e242:	6861      	ldr	r1, [r4, #4]
 801e244:	60e9      	str	r1, [r5, #12]
 801e246:	2a1b      	cmp	r2, #27
 801e248:	d81a      	bhi.n	801e280 <_realloc_r+0x18c>
 801e24a:	3408      	adds	r4, #8
 801e24c:	f105 0210 	add.w	r2, r5, #16
 801e250:	6821      	ldr	r1, [r4, #0]
 801e252:	6011      	str	r1, [r2, #0]
 801e254:	6861      	ldr	r1, [r4, #4]
 801e256:	6051      	str	r1, [r2, #4]
 801e258:	68a1      	ldr	r1, [r4, #8]
 801e25a:	6091      	str	r1, [r2, #8]
 801e25c:	eb05 0208 	add.w	r2, r5, r8
 801e260:	eba7 0708 	sub.w	r7, r7, r8
 801e264:	f047 0701 	orr.w	r7, r7, #1
 801e268:	609a      	str	r2, [r3, #8]
 801e26a:	6057      	str	r7, [r2, #4]
 801e26c:	686b      	ldr	r3, [r5, #4]
 801e26e:	f003 0301 	and.w	r3, r3, #1
 801e272:	ea43 0308 	orr.w	r3, r3, r8
 801e276:	606b      	str	r3, [r5, #4]
 801e278:	4650      	mov	r0, sl
 801e27a:	f7fd fa17 	bl	801b6ac <__malloc_unlock>
 801e27e:	e78e      	b.n	801e19e <_realloc_r+0xaa>
 801e280:	68a1      	ldr	r1, [r4, #8]
 801e282:	6129      	str	r1, [r5, #16]
 801e284:	68e1      	ldr	r1, [r4, #12]
 801e286:	6169      	str	r1, [r5, #20]
 801e288:	2a24      	cmp	r2, #36	@ 0x24
 801e28a:	bf01      	itttt	eq
 801e28c:	6922      	ldreq	r2, [r4, #16]
 801e28e:	61aa      	streq	r2, [r5, #24]
 801e290:	6961      	ldreq	r1, [r4, #20]
 801e292:	61e9      	streq	r1, [r5, #28]
 801e294:	bf19      	ittee	ne
 801e296:	3410      	addne	r4, #16
 801e298:	f105 0218 	addne.w	r2, r5, #24
 801e29c:	f105 0220 	addeq.w	r2, r5, #32
 801e2a0:	3418      	addeq	r4, #24
 801e2a2:	e7d5      	b.n	801e250 <_realloc_r+0x15c>
 801e2a4:	465a      	mov	r2, fp
 801e2a6:	e7d3      	b.n	801e250 <_realloc_r+0x15c>
 801e2a8:	4621      	mov	r1, r4
 801e2aa:	4658      	mov	r0, fp
 801e2ac:	f000 f954 	bl	801e558 <memmove>
 801e2b0:	4b43      	ldr	r3, [pc, #268]	@ (801e3c0 <_realloc_r+0x2cc>)
 801e2b2:	e7d3      	b.n	801e25c <_realloc_r+0x168>
 801e2b4:	45b8      	cmp	r8, r7
 801e2b6:	dc35      	bgt.n	801e324 <_realloc_r+0x230>
 801e2b8:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 801e2bc:	4628      	mov	r0, r5
 801e2be:	60d3      	str	r3, [r2, #12]
 801e2c0:	609a      	str	r2, [r3, #8]
 801e2c2:	f850 2f08 	ldr.w	r2, [r0, #8]!
 801e2c6:	68eb      	ldr	r3, [r5, #12]
 801e2c8:	60d3      	str	r3, [r2, #12]
 801e2ca:	609a      	str	r2, [r3, #8]
 801e2cc:	1f32      	subs	r2, r6, #4
 801e2ce:	2a24      	cmp	r2, #36	@ 0x24
 801e2d0:	d824      	bhi.n	801e31c <_realloc_r+0x228>
 801e2d2:	2a13      	cmp	r2, #19
 801e2d4:	d908      	bls.n	801e2e8 <_realloc_r+0x1f4>
 801e2d6:	6823      	ldr	r3, [r4, #0]
 801e2d8:	60ab      	str	r3, [r5, #8]
 801e2da:	6863      	ldr	r3, [r4, #4]
 801e2dc:	60eb      	str	r3, [r5, #12]
 801e2de:	2a1b      	cmp	r2, #27
 801e2e0:	d80a      	bhi.n	801e2f8 <_realloc_r+0x204>
 801e2e2:	3408      	adds	r4, #8
 801e2e4:	f105 0010 	add.w	r0, r5, #16
 801e2e8:	6823      	ldr	r3, [r4, #0]
 801e2ea:	6003      	str	r3, [r0, #0]
 801e2ec:	6863      	ldr	r3, [r4, #4]
 801e2ee:	6043      	str	r3, [r0, #4]
 801e2f0:	68a3      	ldr	r3, [r4, #8]
 801e2f2:	6083      	str	r3, [r0, #8]
 801e2f4:	46a9      	mov	r9, r5
 801e2f6:	e75c      	b.n	801e1b2 <_realloc_r+0xbe>
 801e2f8:	68a3      	ldr	r3, [r4, #8]
 801e2fa:	612b      	str	r3, [r5, #16]
 801e2fc:	68e3      	ldr	r3, [r4, #12]
 801e2fe:	616b      	str	r3, [r5, #20]
 801e300:	2a24      	cmp	r2, #36	@ 0x24
 801e302:	bf01      	itttt	eq
 801e304:	6923      	ldreq	r3, [r4, #16]
 801e306:	61ab      	streq	r3, [r5, #24]
 801e308:	6963      	ldreq	r3, [r4, #20]
 801e30a:	61eb      	streq	r3, [r5, #28]
 801e30c:	bf19      	ittee	ne
 801e30e:	3410      	addne	r4, #16
 801e310:	f105 0018 	addne.w	r0, r5, #24
 801e314:	f105 0020 	addeq.w	r0, r5, #32
 801e318:	3418      	addeq	r4, #24
 801e31a:	e7e5      	b.n	801e2e8 <_realloc_r+0x1f4>
 801e31c:	4621      	mov	r1, r4
 801e31e:	f000 f91b 	bl	801e558 <memmove>
 801e322:	e7e7      	b.n	801e2f4 <_realloc_r+0x200>
 801e324:	9b01      	ldr	r3, [sp, #4]
 801e326:	4598      	cmp	r8, r3
 801e328:	dc31      	bgt.n	801e38e <_realloc_r+0x29a>
 801e32a:	4628      	mov	r0, r5
 801e32c:	68eb      	ldr	r3, [r5, #12]
 801e32e:	f850 2f08 	ldr.w	r2, [r0, #8]!
 801e332:	60d3      	str	r3, [r2, #12]
 801e334:	609a      	str	r2, [r3, #8]
 801e336:	1f32      	subs	r2, r6, #4
 801e338:	2a24      	cmp	r2, #36	@ 0x24
 801e33a:	d824      	bhi.n	801e386 <_realloc_r+0x292>
 801e33c:	2a13      	cmp	r2, #19
 801e33e:	d908      	bls.n	801e352 <_realloc_r+0x25e>
 801e340:	6823      	ldr	r3, [r4, #0]
 801e342:	60ab      	str	r3, [r5, #8]
 801e344:	6863      	ldr	r3, [r4, #4]
 801e346:	60eb      	str	r3, [r5, #12]
 801e348:	2a1b      	cmp	r2, #27
 801e34a:	d80a      	bhi.n	801e362 <_realloc_r+0x26e>
 801e34c:	3408      	adds	r4, #8
 801e34e:	f105 0010 	add.w	r0, r5, #16
 801e352:	6823      	ldr	r3, [r4, #0]
 801e354:	6003      	str	r3, [r0, #0]
 801e356:	6863      	ldr	r3, [r4, #4]
 801e358:	6043      	str	r3, [r0, #4]
 801e35a:	68a3      	ldr	r3, [r4, #8]
 801e35c:	6083      	str	r3, [r0, #8]
 801e35e:	9f01      	ldr	r7, [sp, #4]
 801e360:	e7c8      	b.n	801e2f4 <_realloc_r+0x200>
 801e362:	68a3      	ldr	r3, [r4, #8]
 801e364:	612b      	str	r3, [r5, #16]
 801e366:	68e3      	ldr	r3, [r4, #12]
 801e368:	616b      	str	r3, [r5, #20]
 801e36a:	2a24      	cmp	r2, #36	@ 0x24
 801e36c:	bf01      	itttt	eq
 801e36e:	6923      	ldreq	r3, [r4, #16]
 801e370:	61ab      	streq	r3, [r5, #24]
 801e372:	6963      	ldreq	r3, [r4, #20]
 801e374:	61eb      	streq	r3, [r5, #28]
 801e376:	bf19      	ittee	ne
 801e378:	3410      	addne	r4, #16
 801e37a:	f105 0018 	addne.w	r0, r5, #24
 801e37e:	f105 0020 	addeq.w	r0, r5, #32
 801e382:	3418      	addeq	r4, #24
 801e384:	e7e5      	b.n	801e352 <_realloc_r+0x25e>
 801e386:	4621      	mov	r1, r4
 801e388:	f000 f8e6 	bl	801e558 <memmove>
 801e38c:	e7e7      	b.n	801e35e <_realloc_r+0x26a>
 801e38e:	4659      	mov	r1, fp
 801e390:	4650      	mov	r0, sl
 801e392:	f7fc ff4b 	bl	801b22c <_malloc_r>
 801e396:	4683      	mov	fp, r0
 801e398:	b918      	cbnz	r0, 801e3a2 <_realloc_r+0x2ae>
 801e39a:	4650      	mov	r0, sl
 801e39c:	f7fd f986 	bl	801b6ac <__malloc_unlock>
 801e3a0:	e6c7      	b.n	801e132 <_realloc_r+0x3e>
 801e3a2:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801e3a6:	f023 0301 	bic.w	r3, r3, #1
 801e3aa:	444b      	add	r3, r9
 801e3ac:	f1a0 0208 	sub.w	r2, r0, #8
 801e3b0:	4293      	cmp	r3, r2
 801e3b2:	d107      	bne.n	801e3c4 <_realloc_r+0x2d0>
 801e3b4:	f850 7c04 	ldr.w	r7, [r0, #-4]
 801e3b8:	f027 0703 	bic.w	r7, r7, #3
 801e3bc:	4437      	add	r7, r6
 801e3be:	e6f8      	b.n	801e1b2 <_realloc_r+0xbe>
 801e3c0:	20000254 	.word	0x20000254
 801e3c4:	1f32      	subs	r2, r6, #4
 801e3c6:	2a24      	cmp	r2, #36	@ 0x24
 801e3c8:	d82d      	bhi.n	801e426 <_realloc_r+0x332>
 801e3ca:	2a13      	cmp	r2, #19
 801e3cc:	d928      	bls.n	801e420 <_realloc_r+0x32c>
 801e3ce:	6823      	ldr	r3, [r4, #0]
 801e3d0:	6003      	str	r3, [r0, #0]
 801e3d2:	6863      	ldr	r3, [r4, #4]
 801e3d4:	6043      	str	r3, [r0, #4]
 801e3d6:	2a1b      	cmp	r2, #27
 801e3d8:	d80e      	bhi.n	801e3f8 <_realloc_r+0x304>
 801e3da:	f104 0208 	add.w	r2, r4, #8
 801e3de:	f100 0308 	add.w	r3, r0, #8
 801e3e2:	6811      	ldr	r1, [r2, #0]
 801e3e4:	6019      	str	r1, [r3, #0]
 801e3e6:	6851      	ldr	r1, [r2, #4]
 801e3e8:	6059      	str	r1, [r3, #4]
 801e3ea:	6892      	ldr	r2, [r2, #8]
 801e3ec:	609a      	str	r2, [r3, #8]
 801e3ee:	4621      	mov	r1, r4
 801e3f0:	4650      	mov	r0, sl
 801e3f2:	f7fc fe5b 	bl	801b0ac <_free_r>
 801e3f6:	e73f      	b.n	801e278 <_realloc_r+0x184>
 801e3f8:	68a3      	ldr	r3, [r4, #8]
 801e3fa:	6083      	str	r3, [r0, #8]
 801e3fc:	68e3      	ldr	r3, [r4, #12]
 801e3fe:	60c3      	str	r3, [r0, #12]
 801e400:	2a24      	cmp	r2, #36	@ 0x24
 801e402:	bf01      	itttt	eq
 801e404:	6923      	ldreq	r3, [r4, #16]
 801e406:	6103      	streq	r3, [r0, #16]
 801e408:	6961      	ldreq	r1, [r4, #20]
 801e40a:	6141      	streq	r1, [r0, #20]
 801e40c:	bf19      	ittee	ne
 801e40e:	f104 0210 	addne.w	r2, r4, #16
 801e412:	f100 0310 	addne.w	r3, r0, #16
 801e416:	f104 0218 	addeq.w	r2, r4, #24
 801e41a:	f100 0318 	addeq.w	r3, r0, #24
 801e41e:	e7e0      	b.n	801e3e2 <_realloc_r+0x2ee>
 801e420:	4603      	mov	r3, r0
 801e422:	4622      	mov	r2, r4
 801e424:	e7dd      	b.n	801e3e2 <_realloc_r+0x2ee>
 801e426:	4621      	mov	r1, r4
 801e428:	f000 f896 	bl	801e558 <memmove>
 801e42c:	e7df      	b.n	801e3ee <_realloc_r+0x2fa>
 801e42e:	4637      	mov	r7, r6
 801e430:	e6bf      	b.n	801e1b2 <_realloc_r+0xbe>
 801e432:	431f      	orrs	r7, r3
 801e434:	f8c9 7004 	str.w	r7, [r9, #4]
 801e438:	6853      	ldr	r3, [r2, #4]
 801e43a:	f043 0301 	orr.w	r3, r3, #1
 801e43e:	6053      	str	r3, [r2, #4]
 801e440:	e6d3      	b.n	801e1ea <_realloc_r+0xf6>
 801e442:	bf00      	nop

0801e444 <__ascii_wctomb>:
 801e444:	4603      	mov	r3, r0
 801e446:	4608      	mov	r0, r1
 801e448:	b141      	cbz	r1, 801e45c <__ascii_wctomb+0x18>
 801e44a:	2aff      	cmp	r2, #255	@ 0xff
 801e44c:	d904      	bls.n	801e458 <__ascii_wctomb+0x14>
 801e44e:	228a      	movs	r2, #138	@ 0x8a
 801e450:	601a      	str	r2, [r3, #0]
 801e452:	f04f 30ff 	mov.w	r0, #4294967295
 801e456:	4770      	bx	lr
 801e458:	700a      	strb	r2, [r1, #0]
 801e45a:	2001      	movs	r0, #1
 801e45c:	4770      	bx	lr

0801e45e <__ssprint_r>:
 801e45e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e462:	6893      	ldr	r3, [r2, #8]
 801e464:	f8d2 b000 	ldr.w	fp, [r2]
 801e468:	9001      	str	r0, [sp, #4]
 801e46a:	460c      	mov	r4, r1
 801e46c:	4617      	mov	r7, r2
 801e46e:	2b00      	cmp	r3, #0
 801e470:	d157      	bne.n	801e522 <__ssprint_r+0xc4>
 801e472:	2000      	movs	r0, #0
 801e474:	2300      	movs	r3, #0
 801e476:	607b      	str	r3, [r7, #4]
 801e478:	b003      	add	sp, #12
 801e47a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e47e:	e9db a800 	ldrd	sl, r8, [fp]
 801e482:	f10b 0b08 	add.w	fp, fp, #8
 801e486:	68a6      	ldr	r6, [r4, #8]
 801e488:	6820      	ldr	r0, [r4, #0]
 801e48a:	f1b8 0f00 	cmp.w	r8, #0
 801e48e:	d0f6      	beq.n	801e47e <__ssprint_r+0x20>
 801e490:	45b0      	cmp	r8, r6
 801e492:	d32e      	bcc.n	801e4f2 <__ssprint_r+0x94>
 801e494:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801e498:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 801e49c:	d029      	beq.n	801e4f2 <__ssprint_r+0x94>
 801e49e:	6921      	ldr	r1, [r4, #16]
 801e4a0:	6965      	ldr	r5, [r4, #20]
 801e4a2:	eba0 0901 	sub.w	r9, r0, r1
 801e4a6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e4aa:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801e4ae:	f109 0001 	add.w	r0, r9, #1
 801e4b2:	106d      	asrs	r5, r5, #1
 801e4b4:	4440      	add	r0, r8
 801e4b6:	4285      	cmp	r5, r0
 801e4b8:	bf38      	it	cc
 801e4ba:	4605      	movcc	r5, r0
 801e4bc:	0553      	lsls	r3, r2, #21
 801e4be:	d534      	bpl.n	801e52a <__ssprint_r+0xcc>
 801e4c0:	9801      	ldr	r0, [sp, #4]
 801e4c2:	4629      	mov	r1, r5
 801e4c4:	f7fc feb2 	bl	801b22c <_malloc_r>
 801e4c8:	4606      	mov	r6, r0
 801e4ca:	2800      	cmp	r0, #0
 801e4cc:	d038      	beq.n	801e540 <__ssprint_r+0xe2>
 801e4ce:	464a      	mov	r2, r9
 801e4d0:	6921      	ldr	r1, [r4, #16]
 801e4d2:	f7fc fd77 	bl	801afc4 <memcpy>
 801e4d6:	89a2      	ldrh	r2, [r4, #12]
 801e4d8:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 801e4dc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801e4e0:	81a2      	strh	r2, [r4, #12]
 801e4e2:	6126      	str	r6, [r4, #16]
 801e4e4:	6165      	str	r5, [r4, #20]
 801e4e6:	444e      	add	r6, r9
 801e4e8:	eba5 0509 	sub.w	r5, r5, r9
 801e4ec:	6026      	str	r6, [r4, #0]
 801e4ee:	60a5      	str	r5, [r4, #8]
 801e4f0:	4646      	mov	r6, r8
 801e4f2:	4546      	cmp	r6, r8
 801e4f4:	bf28      	it	cs
 801e4f6:	4646      	movcs	r6, r8
 801e4f8:	4632      	mov	r2, r6
 801e4fa:	4651      	mov	r1, sl
 801e4fc:	6820      	ldr	r0, [r4, #0]
 801e4fe:	f000 f82b 	bl	801e558 <memmove>
 801e502:	68a2      	ldr	r2, [r4, #8]
 801e504:	1b92      	subs	r2, r2, r6
 801e506:	60a2      	str	r2, [r4, #8]
 801e508:	6822      	ldr	r2, [r4, #0]
 801e50a:	4432      	add	r2, r6
 801e50c:	6022      	str	r2, [r4, #0]
 801e50e:	68ba      	ldr	r2, [r7, #8]
 801e510:	eba2 0308 	sub.w	r3, r2, r8
 801e514:	44c2      	add	sl, r8
 801e516:	60bb      	str	r3, [r7, #8]
 801e518:	2b00      	cmp	r3, #0
 801e51a:	d0aa      	beq.n	801e472 <__ssprint_r+0x14>
 801e51c:	f04f 0800 	mov.w	r8, #0
 801e520:	e7b1      	b.n	801e486 <__ssprint_r+0x28>
 801e522:	f04f 0a00 	mov.w	sl, #0
 801e526:	46d0      	mov	r8, sl
 801e528:	e7ad      	b.n	801e486 <__ssprint_r+0x28>
 801e52a:	9801      	ldr	r0, [sp, #4]
 801e52c:	462a      	mov	r2, r5
 801e52e:	f7ff fde1 	bl	801e0f4 <_realloc_r>
 801e532:	4606      	mov	r6, r0
 801e534:	2800      	cmp	r0, #0
 801e536:	d1d4      	bne.n	801e4e2 <__ssprint_r+0x84>
 801e538:	6921      	ldr	r1, [r4, #16]
 801e53a:	9801      	ldr	r0, [sp, #4]
 801e53c:	f7fc fdb6 	bl	801b0ac <_free_r>
 801e540:	9a01      	ldr	r2, [sp, #4]
 801e542:	230c      	movs	r3, #12
 801e544:	6013      	str	r3, [r2, #0]
 801e546:	89a3      	ldrh	r3, [r4, #12]
 801e548:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e54c:	81a3      	strh	r3, [r4, #12]
 801e54e:	2300      	movs	r3, #0
 801e550:	60bb      	str	r3, [r7, #8]
 801e552:	f04f 30ff 	mov.w	r0, #4294967295
 801e556:	e78d      	b.n	801e474 <__ssprint_r+0x16>

0801e558 <memmove>:
 801e558:	4288      	cmp	r0, r1
 801e55a:	b510      	push	{r4, lr}
 801e55c:	eb01 0402 	add.w	r4, r1, r2
 801e560:	d902      	bls.n	801e568 <memmove+0x10>
 801e562:	4284      	cmp	r4, r0
 801e564:	4623      	mov	r3, r4
 801e566:	d807      	bhi.n	801e578 <memmove+0x20>
 801e568:	1e43      	subs	r3, r0, #1
 801e56a:	42a1      	cmp	r1, r4
 801e56c:	d008      	beq.n	801e580 <memmove+0x28>
 801e56e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e572:	f803 2f01 	strb.w	r2, [r3, #1]!
 801e576:	e7f8      	b.n	801e56a <memmove+0x12>
 801e578:	4402      	add	r2, r0
 801e57a:	4601      	mov	r1, r0
 801e57c:	428a      	cmp	r2, r1
 801e57e:	d100      	bne.n	801e582 <memmove+0x2a>
 801e580:	bd10      	pop	{r4, pc}
 801e582:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801e586:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801e58a:	e7f7      	b.n	801e57c <memmove+0x24>

0801e58c <__assert_func>:
 801e58c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801e58e:	4614      	mov	r4, r2
 801e590:	461a      	mov	r2, r3
 801e592:	4b09      	ldr	r3, [pc, #36]	@ (801e5b8 <__assert_func+0x2c>)
 801e594:	681b      	ldr	r3, [r3, #0]
 801e596:	4605      	mov	r5, r0
 801e598:	68d8      	ldr	r0, [r3, #12]
 801e59a:	b954      	cbnz	r4, 801e5b2 <__assert_func+0x26>
 801e59c:	4b07      	ldr	r3, [pc, #28]	@ (801e5bc <__assert_func+0x30>)
 801e59e:	461c      	mov	r4, r3
 801e5a0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801e5a4:	9100      	str	r1, [sp, #0]
 801e5a6:	462b      	mov	r3, r5
 801e5a8:	4905      	ldr	r1, [pc, #20]	@ (801e5c0 <__assert_func+0x34>)
 801e5aa:	f000 f843 	bl	801e634 <fiprintf>
 801e5ae:	f000 ff59 	bl	801f464 <abort>
 801e5b2:	4b04      	ldr	r3, [pc, #16]	@ (801e5c4 <__assert_func+0x38>)
 801e5b4:	e7f4      	b.n	801e5a0 <__assert_func+0x14>
 801e5b6:	bf00      	nop
 801e5b8:	20000120 	.word	0x20000120
 801e5bc:	0802199c 	.word	0x0802199c
 801e5c0:	0802196e 	.word	0x0802196e
 801e5c4:	08021961 	.word	0x08021961

0801e5c8 <_calloc_r>:
 801e5c8:	b538      	push	{r3, r4, r5, lr}
 801e5ca:	fba1 1502 	umull	r1, r5, r1, r2
 801e5ce:	b935      	cbnz	r5, 801e5de <_calloc_r+0x16>
 801e5d0:	f7fc fe2c 	bl	801b22c <_malloc_r>
 801e5d4:	4604      	mov	r4, r0
 801e5d6:	b938      	cbnz	r0, 801e5e8 <_calloc_r+0x20>
 801e5d8:	2400      	movs	r4, #0
 801e5da:	4620      	mov	r0, r4
 801e5dc:	bd38      	pop	{r3, r4, r5, pc}
 801e5de:	f7fc fcc3 	bl	801af68 <__errno>
 801e5e2:	230c      	movs	r3, #12
 801e5e4:	6003      	str	r3, [r0, #0]
 801e5e6:	e7f7      	b.n	801e5d8 <_calloc_r+0x10>
 801e5e8:	f850 2c04 	ldr.w	r2, [r0, #-4]
 801e5ec:	f022 0203 	bic.w	r2, r2, #3
 801e5f0:	3a04      	subs	r2, #4
 801e5f2:	2a24      	cmp	r2, #36	@ 0x24
 801e5f4:	d819      	bhi.n	801e62a <_calloc_r+0x62>
 801e5f6:	2a13      	cmp	r2, #19
 801e5f8:	d915      	bls.n	801e626 <_calloc_r+0x5e>
 801e5fa:	2a1b      	cmp	r2, #27
 801e5fc:	e9c0 5500 	strd	r5, r5, [r0]
 801e600:	d806      	bhi.n	801e610 <_calloc_r+0x48>
 801e602:	f100 0308 	add.w	r3, r0, #8
 801e606:	2200      	movs	r2, #0
 801e608:	e9c3 2200 	strd	r2, r2, [r3]
 801e60c:	609a      	str	r2, [r3, #8]
 801e60e:	e7e4      	b.n	801e5da <_calloc_r+0x12>
 801e610:	2a24      	cmp	r2, #36	@ 0x24
 801e612:	e9c0 5502 	strd	r5, r5, [r0, #8]
 801e616:	bf11      	iteee	ne
 801e618:	f100 0310 	addne.w	r3, r0, #16
 801e61c:	6105      	streq	r5, [r0, #16]
 801e61e:	f100 0318 	addeq.w	r3, r0, #24
 801e622:	6145      	streq	r5, [r0, #20]
 801e624:	e7ef      	b.n	801e606 <_calloc_r+0x3e>
 801e626:	4603      	mov	r3, r0
 801e628:	e7ed      	b.n	801e606 <_calloc_r+0x3e>
 801e62a:	4629      	mov	r1, r5
 801e62c:	f7fc fc21 	bl	801ae72 <memset>
 801e630:	e7d3      	b.n	801e5da <_calloc_r+0x12>
	...

0801e634 <fiprintf>:
 801e634:	b40e      	push	{r1, r2, r3}
 801e636:	b503      	push	{r0, r1, lr}
 801e638:	4601      	mov	r1, r0
 801e63a:	ab03      	add	r3, sp, #12
 801e63c:	4805      	ldr	r0, [pc, #20]	@ (801e654 <fiprintf+0x20>)
 801e63e:	f853 2b04 	ldr.w	r2, [r3], #4
 801e642:	6800      	ldr	r0, [r0, #0]
 801e644:	9301      	str	r3, [sp, #4]
 801e646:	f000 f839 	bl	801e6bc <_vfiprintf_r>
 801e64a:	b002      	add	sp, #8
 801e64c:	f85d eb04 	ldr.w	lr, [sp], #4
 801e650:	b003      	add	sp, #12
 801e652:	4770      	bx	lr
 801e654:	20000120 	.word	0x20000120

0801e658 <__sprint_r>:
 801e658:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e65c:	6893      	ldr	r3, [r2, #8]
 801e65e:	4680      	mov	r8, r0
 801e660:	460e      	mov	r6, r1
 801e662:	4614      	mov	r4, r2
 801e664:	b343      	cbz	r3, 801e6b8 <__sprint_r+0x60>
 801e666:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 801e668:	049d      	lsls	r5, r3, #18
 801e66a:	d522      	bpl.n	801e6b2 <__sprint_r+0x5a>
 801e66c:	6815      	ldr	r5, [r2, #0]
 801e66e:	68a0      	ldr	r0, [r4, #8]
 801e670:	3508      	adds	r5, #8
 801e672:	b928      	cbnz	r0, 801e680 <__sprint_r+0x28>
 801e674:	2300      	movs	r3, #0
 801e676:	60a3      	str	r3, [r4, #8]
 801e678:	2300      	movs	r3, #0
 801e67a:	6063      	str	r3, [r4, #4]
 801e67c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e680:	e955 b702 	ldrd	fp, r7, [r5, #-8]
 801e684:	f04f 0900 	mov.w	r9, #0
 801e688:	ea4f 0a97 	mov.w	sl, r7, lsr #2
 801e68c:	45ca      	cmp	sl, r9
 801e68e:	dc05      	bgt.n	801e69c <__sprint_r+0x44>
 801e690:	68a3      	ldr	r3, [r4, #8]
 801e692:	f027 0703 	bic.w	r7, r7, #3
 801e696:	1bdb      	subs	r3, r3, r7
 801e698:	60a3      	str	r3, [r4, #8]
 801e69a:	e7e8      	b.n	801e66e <__sprint_r+0x16>
 801e69c:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 801e6a0:	4632      	mov	r2, r6
 801e6a2:	4640      	mov	r0, r8
 801e6a4:	f000 feb5 	bl	801f412 <_fputwc_r>
 801e6a8:	1c43      	adds	r3, r0, #1
 801e6aa:	d0e3      	beq.n	801e674 <__sprint_r+0x1c>
 801e6ac:	f109 0901 	add.w	r9, r9, #1
 801e6b0:	e7ec      	b.n	801e68c <__sprint_r+0x34>
 801e6b2:	f000 fccb 	bl	801f04c <__sfvwrite_r>
 801e6b6:	e7dd      	b.n	801e674 <__sprint_r+0x1c>
 801e6b8:	4618      	mov	r0, r3
 801e6ba:	e7dd      	b.n	801e678 <__sprint_r+0x20>

0801e6bc <_vfiprintf_r>:
 801e6bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6c0:	b0bb      	sub	sp, #236	@ 0xec
 801e6c2:	460f      	mov	r7, r1
 801e6c4:	4693      	mov	fp, r2
 801e6c6:	461c      	mov	r4, r3
 801e6c8:	461d      	mov	r5, r3
 801e6ca:	9000      	str	r0, [sp, #0]
 801e6cc:	b118      	cbz	r0, 801e6d6 <_vfiprintf_r+0x1a>
 801e6ce:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801e6d0:	b90b      	cbnz	r3, 801e6d6 <_vfiprintf_r+0x1a>
 801e6d2:	f7fc fb21 	bl	801ad18 <__sinit>
 801e6d6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e6d8:	07db      	lsls	r3, r3, #31
 801e6da:	d405      	bmi.n	801e6e8 <_vfiprintf_r+0x2c>
 801e6dc:	89bb      	ldrh	r3, [r7, #12]
 801e6de:	059e      	lsls	r6, r3, #22
 801e6e0:	d402      	bmi.n	801e6e8 <_vfiprintf_r+0x2c>
 801e6e2:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e6e4:	f7fc fc6c 	bl	801afc0 <__retarget_lock_acquire_recursive>
 801e6e8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801e6ec:	0498      	lsls	r0, r3, #18
 801e6ee:	d406      	bmi.n	801e6fe <_vfiprintf_r+0x42>
 801e6f0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801e6f4:	81bb      	strh	r3, [r7, #12]
 801e6f6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e6f8:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801e6fc:	667b      	str	r3, [r7, #100]	@ 0x64
 801e6fe:	89bb      	ldrh	r3, [r7, #12]
 801e700:	0719      	lsls	r1, r3, #28
 801e702:	d501      	bpl.n	801e708 <_vfiprintf_r+0x4c>
 801e704:	693b      	ldr	r3, [r7, #16]
 801e706:	b9ab      	cbnz	r3, 801e734 <_vfiprintf_r+0x78>
 801e708:	9800      	ldr	r0, [sp, #0]
 801e70a:	4639      	mov	r1, r7
 801e70c:	f000 fdea 	bl	801f2e4 <__swsetup_r>
 801e710:	b180      	cbz	r0, 801e734 <_vfiprintf_r+0x78>
 801e712:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801e714:	07da      	lsls	r2, r3, #31
 801e716:	d506      	bpl.n	801e726 <_vfiprintf_r+0x6a>
 801e718:	f04f 33ff 	mov.w	r3, #4294967295
 801e71c:	9303      	str	r3, [sp, #12]
 801e71e:	9803      	ldr	r0, [sp, #12]
 801e720:	b03b      	add	sp, #236	@ 0xec
 801e722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e726:	89bb      	ldrh	r3, [r7, #12]
 801e728:	059b      	lsls	r3, r3, #22
 801e72a:	d4f5      	bmi.n	801e718 <_vfiprintf_r+0x5c>
 801e72c:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e72e:	f7fc fc48 	bl	801afc2 <__retarget_lock_release_recursive>
 801e732:	e7f1      	b.n	801e718 <_vfiprintf_r+0x5c>
 801e734:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801e738:	f003 021a 	and.w	r2, r3, #26
 801e73c:	2a0a      	cmp	r2, #10
 801e73e:	d114      	bne.n	801e76a <_vfiprintf_r+0xae>
 801e740:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 801e744:	2a00      	cmp	r2, #0
 801e746:	db10      	blt.n	801e76a <_vfiprintf_r+0xae>
 801e748:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 801e74a:	07d6      	lsls	r6, r2, #31
 801e74c:	d404      	bmi.n	801e758 <_vfiprintf_r+0x9c>
 801e74e:	059d      	lsls	r5, r3, #22
 801e750:	d402      	bmi.n	801e758 <_vfiprintf_r+0x9c>
 801e752:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801e754:	f7fc fc35 	bl	801afc2 <__retarget_lock_release_recursive>
 801e758:	9800      	ldr	r0, [sp, #0]
 801e75a:	4623      	mov	r3, r4
 801e75c:	465a      	mov	r2, fp
 801e75e:	4639      	mov	r1, r7
 801e760:	b03b      	add	sp, #236	@ 0xec
 801e762:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e766:	f000 bc31 	b.w	801efcc <__sbprintf>
 801e76a:	2300      	movs	r3, #0
 801e76c:	e9cd 330f 	strd	r3, r3, [sp, #60]	@ 0x3c
 801e770:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801e774:	ae11      	add	r6, sp, #68	@ 0x44
 801e776:	960e      	str	r6, [sp, #56]	@ 0x38
 801e778:	9307      	str	r3, [sp, #28]
 801e77a:	9309      	str	r3, [sp, #36]	@ 0x24
 801e77c:	9303      	str	r3, [sp, #12]
 801e77e:	465b      	mov	r3, fp
 801e780:	461c      	mov	r4, r3
 801e782:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e786:	b10a      	cbz	r2, 801e78c <_vfiprintf_r+0xd0>
 801e788:	2a25      	cmp	r2, #37	@ 0x25
 801e78a:	d1f9      	bne.n	801e780 <_vfiprintf_r+0xc4>
 801e78c:	ebb4 080b 	subs.w	r8, r4, fp
 801e790:	d00d      	beq.n	801e7ae <_vfiprintf_r+0xf2>
 801e792:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e794:	4443      	add	r3, r8
 801e796:	9310      	str	r3, [sp, #64]	@ 0x40
 801e798:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e79a:	3301      	adds	r3, #1
 801e79c:	2b07      	cmp	r3, #7
 801e79e:	e9c6 b800 	strd	fp, r8, [r6]
 801e7a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e7a4:	dc75      	bgt.n	801e892 <_vfiprintf_r+0x1d6>
 801e7a6:	3608      	adds	r6, #8
 801e7a8:	9b03      	ldr	r3, [sp, #12]
 801e7aa:	4443      	add	r3, r8
 801e7ac:	9303      	str	r3, [sp, #12]
 801e7ae:	7823      	ldrb	r3, [r4, #0]
 801e7b0:	2b00      	cmp	r3, #0
 801e7b2:	f000 83cd 	beq.w	801ef50 <_vfiprintf_r+0x894>
 801e7b6:	2300      	movs	r3, #0
 801e7b8:	f04f 32ff 	mov.w	r2, #4294967295
 801e7bc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 801e7c0:	3401      	adds	r4, #1
 801e7c2:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801e7c6:	469a      	mov	sl, r3
 801e7c8:	46a3      	mov	fp, r4
 801e7ca:	f81b 3b01 	ldrb.w	r3, [fp], #1
 801e7ce:	f1a3 0220 	sub.w	r2, r3, #32
 801e7d2:	2a5a      	cmp	r2, #90	@ 0x5a
 801e7d4:	f200 8316 	bhi.w	801ee04 <_vfiprintf_r+0x748>
 801e7d8:	e8df f012 	tbh	[pc, r2, lsl #1]
 801e7dc:	0314009a 	.word	0x0314009a
 801e7e0:	00a20314 	.word	0x00a20314
 801e7e4:	03140314 	.word	0x03140314
 801e7e8:	00820314 	.word	0x00820314
 801e7ec:	03140314 	.word	0x03140314
 801e7f0:	00af00a5 	.word	0x00af00a5
 801e7f4:	00ac0314 	.word	0x00ac0314
 801e7f8:	031400b1 	.word	0x031400b1
 801e7fc:	00d000cd 	.word	0x00d000cd
 801e800:	00d000d0 	.word	0x00d000d0
 801e804:	00d000d0 	.word	0x00d000d0
 801e808:	00d000d0 	.word	0x00d000d0
 801e80c:	00d000d0 	.word	0x00d000d0
 801e810:	03140314 	.word	0x03140314
 801e814:	03140314 	.word	0x03140314
 801e818:	03140314 	.word	0x03140314
 801e81c:	03140314 	.word	0x03140314
 801e820:	00f70314 	.word	0x00f70314
 801e824:	03140104 	.word	0x03140104
 801e828:	03140314 	.word	0x03140314
 801e82c:	03140314 	.word	0x03140314
 801e830:	03140314 	.word	0x03140314
 801e834:	03140314 	.word	0x03140314
 801e838:	01520314 	.word	0x01520314
 801e83c:	03140314 	.word	0x03140314
 801e840:	019a0314 	.word	0x019a0314
 801e844:	027a0314 	.word	0x027a0314
 801e848:	03140314 	.word	0x03140314
 801e84c:	0314029a 	.word	0x0314029a
 801e850:	03140314 	.word	0x03140314
 801e854:	03140314 	.word	0x03140314
 801e858:	03140314 	.word	0x03140314
 801e85c:	03140314 	.word	0x03140314
 801e860:	00f70314 	.word	0x00f70314
 801e864:	03140106 	.word	0x03140106
 801e868:	03140314 	.word	0x03140314
 801e86c:	010600e0 	.word	0x010600e0
 801e870:	031400f1 	.word	0x031400f1
 801e874:	031400eb 	.word	0x031400eb
 801e878:	01540132 	.word	0x01540132
 801e87c:	00f10189 	.word	0x00f10189
 801e880:	019a0314 	.word	0x019a0314
 801e884:	027c0098 	.word	0x027c0098
 801e888:	03140314 	.word	0x03140314
 801e88c:	03140065 	.word	0x03140065
 801e890:	0098      	.short	0x0098
 801e892:	9800      	ldr	r0, [sp, #0]
 801e894:	aa0e      	add	r2, sp, #56	@ 0x38
 801e896:	4639      	mov	r1, r7
 801e898:	f7ff fede 	bl	801e658 <__sprint_r>
 801e89c:	2800      	cmp	r0, #0
 801e89e:	f040 8336 	bne.w	801ef0e <_vfiprintf_r+0x852>
 801e8a2:	ae11      	add	r6, sp, #68	@ 0x44
 801e8a4:	e780      	b.n	801e7a8 <_vfiprintf_r+0xec>
 801e8a6:	4a99      	ldr	r2, [pc, #612]	@ (801eb0c <_vfiprintf_r+0x450>)
 801e8a8:	9205      	str	r2, [sp, #20]
 801e8aa:	f01a 0220 	ands.w	r2, sl, #32
 801e8ae:	f000 8231 	beq.w	801ed14 <_vfiprintf_r+0x658>
 801e8b2:	3507      	adds	r5, #7
 801e8b4:	f025 0507 	bic.w	r5, r5, #7
 801e8b8:	46a8      	mov	r8, r5
 801e8ba:	686d      	ldr	r5, [r5, #4]
 801e8bc:	f858 4b08 	ldr.w	r4, [r8], #8
 801e8c0:	f01a 0f01 	tst.w	sl, #1
 801e8c4:	d009      	beq.n	801e8da <_vfiprintf_r+0x21e>
 801e8c6:	ea54 0205 	orrs.w	r2, r4, r5
 801e8ca:	bf1f      	itttt	ne
 801e8cc:	2230      	movne	r2, #48	@ 0x30
 801e8ce:	f88d 2034 	strbne.w	r2, [sp, #52]	@ 0x34
 801e8d2:	f88d 3035 	strbne.w	r3, [sp, #53]	@ 0x35
 801e8d6:	f04a 0a02 	orrne.w	sl, sl, #2
 801e8da:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 801e8de:	e112      	b.n	801eb06 <_vfiprintf_r+0x44a>
 801e8e0:	9800      	ldr	r0, [sp, #0]
 801e8e2:	f7fe f9e3 	bl	801ccac <_localeconv_r>
 801e8e6:	6843      	ldr	r3, [r0, #4]
 801e8e8:	9309      	str	r3, [sp, #36]	@ 0x24
 801e8ea:	4618      	mov	r0, r3
 801e8ec:	f7e1 fc70 	bl	80001d0 <strlen>
 801e8f0:	9007      	str	r0, [sp, #28]
 801e8f2:	9800      	ldr	r0, [sp, #0]
 801e8f4:	f7fe f9da 	bl	801ccac <_localeconv_r>
 801e8f8:	6883      	ldr	r3, [r0, #8]
 801e8fa:	9306      	str	r3, [sp, #24]
 801e8fc:	9b07      	ldr	r3, [sp, #28]
 801e8fe:	b12b      	cbz	r3, 801e90c <_vfiprintf_r+0x250>
 801e900:	9b06      	ldr	r3, [sp, #24]
 801e902:	b11b      	cbz	r3, 801e90c <_vfiprintf_r+0x250>
 801e904:	781b      	ldrb	r3, [r3, #0]
 801e906:	b10b      	cbz	r3, 801e90c <_vfiprintf_r+0x250>
 801e908:	f44a 6a80 	orr.w	sl, sl, #1024	@ 0x400
 801e90c:	465c      	mov	r4, fp
 801e90e:	e75b      	b.n	801e7c8 <_vfiprintf_r+0x10c>
 801e910:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 801e914:	2b00      	cmp	r3, #0
 801e916:	d1f9      	bne.n	801e90c <_vfiprintf_r+0x250>
 801e918:	2320      	movs	r3, #32
 801e91a:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801e91e:	e7f5      	b.n	801e90c <_vfiprintf_r+0x250>
 801e920:	f04a 0a01 	orr.w	sl, sl, #1
 801e924:	e7f2      	b.n	801e90c <_vfiprintf_r+0x250>
 801e926:	f855 3b04 	ldr.w	r3, [r5], #4
 801e92a:	9302      	str	r3, [sp, #8]
 801e92c:	2b00      	cmp	r3, #0
 801e92e:	daed      	bge.n	801e90c <_vfiprintf_r+0x250>
 801e930:	425b      	negs	r3, r3
 801e932:	9302      	str	r3, [sp, #8]
 801e934:	f04a 0a04 	orr.w	sl, sl, #4
 801e938:	e7e8      	b.n	801e90c <_vfiprintf_r+0x250>
 801e93a:	232b      	movs	r3, #43	@ 0x2b
 801e93c:	e7ed      	b.n	801e91a <_vfiprintf_r+0x25e>
 801e93e:	465a      	mov	r2, fp
 801e940:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e944:	2b2a      	cmp	r3, #42	@ 0x2a
 801e946:	d112      	bne.n	801e96e <_vfiprintf_r+0x2b2>
 801e948:	f855 3b04 	ldr.w	r3, [r5], #4
 801e94c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 801e950:	9301      	str	r3, [sp, #4]
 801e952:	4693      	mov	fp, r2
 801e954:	e7da      	b.n	801e90c <_vfiprintf_r+0x250>
 801e956:	9b01      	ldr	r3, [sp, #4]
 801e958:	fb00 1303 	mla	r3, r0, r3, r1
 801e95c:	9301      	str	r3, [sp, #4]
 801e95e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e962:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 801e966:	2909      	cmp	r1, #9
 801e968:	d9f5      	bls.n	801e956 <_vfiprintf_r+0x29a>
 801e96a:	4693      	mov	fp, r2
 801e96c:	e72f      	b.n	801e7ce <_vfiprintf_r+0x112>
 801e96e:	2100      	movs	r1, #0
 801e970:	9101      	str	r1, [sp, #4]
 801e972:	200a      	movs	r0, #10
 801e974:	e7f5      	b.n	801e962 <_vfiprintf_r+0x2a6>
 801e976:	f04a 0a80 	orr.w	sl, sl, #128	@ 0x80
 801e97a:	e7c7      	b.n	801e90c <_vfiprintf_r+0x250>
 801e97c:	2100      	movs	r1, #0
 801e97e:	465a      	mov	r2, fp
 801e980:	9102      	str	r1, [sp, #8]
 801e982:	200a      	movs	r0, #10
 801e984:	9902      	ldr	r1, [sp, #8]
 801e986:	3b30      	subs	r3, #48	@ 0x30
 801e988:	fb00 3301 	mla	r3, r0, r1, r3
 801e98c:	9302      	str	r3, [sp, #8]
 801e98e:	f812 3b01 	ldrb.w	r3, [r2], #1
 801e992:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 801e996:	2909      	cmp	r1, #9
 801e998:	d9f4      	bls.n	801e984 <_vfiprintf_r+0x2c8>
 801e99a:	e7e6      	b.n	801e96a <_vfiprintf_r+0x2ae>
 801e99c:	f89b 3000 	ldrb.w	r3, [fp]
 801e9a0:	2b68      	cmp	r3, #104	@ 0x68
 801e9a2:	bf06      	itte	eq
 801e9a4:	f10b 0b01 	addeq.w	fp, fp, #1
 801e9a8:	f44a 7a00 	orreq.w	sl, sl, #512	@ 0x200
 801e9ac:	f04a 0a40 	orrne.w	sl, sl, #64	@ 0x40
 801e9b0:	e7ac      	b.n	801e90c <_vfiprintf_r+0x250>
 801e9b2:	f89b 3000 	ldrb.w	r3, [fp]
 801e9b6:	2b6c      	cmp	r3, #108	@ 0x6c
 801e9b8:	d104      	bne.n	801e9c4 <_vfiprintf_r+0x308>
 801e9ba:	f10b 0b01 	add.w	fp, fp, #1
 801e9be:	f04a 0a20 	orr.w	sl, sl, #32
 801e9c2:	e7a3      	b.n	801e90c <_vfiprintf_r+0x250>
 801e9c4:	f04a 0a10 	orr.w	sl, sl, #16
 801e9c8:	e7a0      	b.n	801e90c <_vfiprintf_r+0x250>
 801e9ca:	46a8      	mov	r8, r5
 801e9cc:	2400      	movs	r4, #0
 801e9ce:	f858 3b04 	ldr.w	r3, [r8], #4
 801e9d2:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 801e9d6:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 801e9da:	2301      	movs	r3, #1
 801e9dc:	9301      	str	r3, [sp, #4]
 801e9de:	f10d 0984 	add.w	r9, sp, #132	@ 0x84
 801e9e2:	e0ab      	b.n	801eb3c <_vfiprintf_r+0x480>
 801e9e4:	f04a 0a10 	orr.w	sl, sl, #16
 801e9e8:	f01a 0f20 	tst.w	sl, #32
 801e9ec:	d011      	beq.n	801ea12 <_vfiprintf_r+0x356>
 801e9ee:	3507      	adds	r5, #7
 801e9f0:	f025 0507 	bic.w	r5, r5, #7
 801e9f4:	46a8      	mov	r8, r5
 801e9f6:	686d      	ldr	r5, [r5, #4]
 801e9f8:	f858 4b08 	ldr.w	r4, [r8], #8
 801e9fc:	2d00      	cmp	r5, #0
 801e9fe:	da06      	bge.n	801ea0e <_vfiprintf_r+0x352>
 801ea00:	4264      	negs	r4, r4
 801ea02:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801ea06:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 801ea0a:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 801ea0e:	2301      	movs	r3, #1
 801ea10:	e048      	b.n	801eaa4 <_vfiprintf_r+0x3e8>
 801ea12:	46a8      	mov	r8, r5
 801ea14:	f01a 0f10 	tst.w	sl, #16
 801ea18:	f858 5b04 	ldr.w	r5, [r8], #4
 801ea1c:	d002      	beq.n	801ea24 <_vfiprintf_r+0x368>
 801ea1e:	462c      	mov	r4, r5
 801ea20:	17ed      	asrs	r5, r5, #31
 801ea22:	e7eb      	b.n	801e9fc <_vfiprintf_r+0x340>
 801ea24:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 801ea28:	d003      	beq.n	801ea32 <_vfiprintf_r+0x376>
 801ea2a:	b22c      	sxth	r4, r5
 801ea2c:	f345 35c0 	sbfx	r5, r5, #15, #1
 801ea30:	e7e4      	b.n	801e9fc <_vfiprintf_r+0x340>
 801ea32:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 801ea36:	d0f2      	beq.n	801ea1e <_vfiprintf_r+0x362>
 801ea38:	b26c      	sxtb	r4, r5
 801ea3a:	f345 15c0 	sbfx	r5, r5, #7, #1
 801ea3e:	e7dd      	b.n	801e9fc <_vfiprintf_r+0x340>
 801ea40:	f01a 0f20 	tst.w	sl, #32
 801ea44:	d007      	beq.n	801ea56 <_vfiprintf_r+0x39a>
 801ea46:	9a03      	ldr	r2, [sp, #12]
 801ea48:	682b      	ldr	r3, [r5, #0]
 801ea4a:	9903      	ldr	r1, [sp, #12]
 801ea4c:	17d2      	asrs	r2, r2, #31
 801ea4e:	e9c3 1200 	strd	r1, r2, [r3]
 801ea52:	3504      	adds	r5, #4
 801ea54:	e693      	b.n	801e77e <_vfiprintf_r+0xc2>
 801ea56:	f01a 0f10 	tst.w	sl, #16
 801ea5a:	d003      	beq.n	801ea64 <_vfiprintf_r+0x3a8>
 801ea5c:	682b      	ldr	r3, [r5, #0]
 801ea5e:	9a03      	ldr	r2, [sp, #12]
 801ea60:	601a      	str	r2, [r3, #0]
 801ea62:	e7f6      	b.n	801ea52 <_vfiprintf_r+0x396>
 801ea64:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 801ea68:	d003      	beq.n	801ea72 <_vfiprintf_r+0x3b6>
 801ea6a:	682b      	ldr	r3, [r5, #0]
 801ea6c:	9a03      	ldr	r2, [sp, #12]
 801ea6e:	801a      	strh	r2, [r3, #0]
 801ea70:	e7ef      	b.n	801ea52 <_vfiprintf_r+0x396>
 801ea72:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 801ea76:	d0f1      	beq.n	801ea5c <_vfiprintf_r+0x3a0>
 801ea78:	682b      	ldr	r3, [r5, #0]
 801ea7a:	9a03      	ldr	r2, [sp, #12]
 801ea7c:	701a      	strb	r2, [r3, #0]
 801ea7e:	e7e8      	b.n	801ea52 <_vfiprintf_r+0x396>
 801ea80:	f04a 0a10 	orr.w	sl, sl, #16
 801ea84:	f01a 0320 	ands.w	r3, sl, #32
 801ea88:	d01f      	beq.n	801eaca <_vfiprintf_r+0x40e>
 801ea8a:	3507      	adds	r5, #7
 801ea8c:	f025 0507 	bic.w	r5, r5, #7
 801ea90:	46a8      	mov	r8, r5
 801ea92:	686d      	ldr	r5, [r5, #4]
 801ea94:	f858 4b08 	ldr.w	r4, [r8], #8
 801ea98:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 801ea9c:	2300      	movs	r3, #0
 801ea9e:	2200      	movs	r2, #0
 801eaa0:	f88d 2033 	strb.w	r2, [sp, #51]	@ 0x33
 801eaa4:	9a01      	ldr	r2, [sp, #4]
 801eaa6:	3201      	adds	r2, #1
 801eaa8:	f000 825f 	beq.w	801ef6a <_vfiprintf_r+0x8ae>
 801eaac:	f02a 0280 	bic.w	r2, sl, #128	@ 0x80
 801eab0:	9204      	str	r2, [sp, #16]
 801eab2:	ea54 0205 	orrs.w	r2, r4, r5
 801eab6:	f040 825e 	bne.w	801ef76 <_vfiprintf_r+0x8ba>
 801eaba:	9a01      	ldr	r2, [sp, #4]
 801eabc:	2a00      	cmp	r2, #0
 801eabe:	f000 8198 	beq.w	801edf2 <_vfiprintf_r+0x736>
 801eac2:	2b01      	cmp	r3, #1
 801eac4:	f040 825a 	bne.w	801ef7c <_vfiprintf_r+0x8c0>
 801eac8:	e13b      	b.n	801ed42 <_vfiprintf_r+0x686>
 801eaca:	46a8      	mov	r8, r5
 801eacc:	f01a 0510 	ands.w	r5, sl, #16
 801ead0:	f858 4b04 	ldr.w	r4, [r8], #4
 801ead4:	d001      	beq.n	801eada <_vfiprintf_r+0x41e>
 801ead6:	461d      	mov	r5, r3
 801ead8:	e7de      	b.n	801ea98 <_vfiprintf_r+0x3dc>
 801eada:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 801eade:	d001      	beq.n	801eae4 <_vfiprintf_r+0x428>
 801eae0:	b2a4      	uxth	r4, r4
 801eae2:	e7d9      	b.n	801ea98 <_vfiprintf_r+0x3dc>
 801eae4:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801eae8:	d0d6      	beq.n	801ea98 <_vfiprintf_r+0x3dc>
 801eaea:	b2e4      	uxtb	r4, r4
 801eaec:	e7f3      	b.n	801ead6 <_vfiprintf_r+0x41a>
 801eaee:	46a8      	mov	r8, r5
 801eaf0:	f647 0330 	movw	r3, #30768	@ 0x7830
 801eaf4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801eaf8:	f858 4b04 	ldr.w	r4, [r8], #4
 801eafc:	4b03      	ldr	r3, [pc, #12]	@ (801eb0c <_vfiprintf_r+0x450>)
 801eafe:	9305      	str	r3, [sp, #20]
 801eb00:	2500      	movs	r5, #0
 801eb02:	f04a 0a02 	orr.w	sl, sl, #2
 801eb06:	2302      	movs	r3, #2
 801eb08:	e7c9      	b.n	801ea9e <_vfiprintf_r+0x3e2>
 801eb0a:	bf00      	nop
 801eb0c:	08021644 	.word	0x08021644
 801eb10:	9b01      	ldr	r3, [sp, #4]
 801eb12:	46a8      	mov	r8, r5
 801eb14:	1c5c      	adds	r4, r3, #1
 801eb16:	f04f 0500 	mov.w	r5, #0
 801eb1a:	f858 9b04 	ldr.w	r9, [r8], #4
 801eb1e:	f88d 5033 	strb.w	r5, [sp, #51]	@ 0x33
 801eb22:	f000 80d0 	beq.w	801ecc6 <_vfiprintf_r+0x60a>
 801eb26:	461a      	mov	r2, r3
 801eb28:	4629      	mov	r1, r5
 801eb2a:	4648      	mov	r0, r9
 801eb2c:	f7e1 fb58 	bl	80001e0 <memchr>
 801eb30:	4604      	mov	r4, r0
 801eb32:	b118      	cbz	r0, 801eb3c <_vfiprintf_r+0x480>
 801eb34:	eba0 0309 	sub.w	r3, r0, r9
 801eb38:	9301      	str	r3, [sp, #4]
 801eb3a:	462c      	mov	r4, r5
 801eb3c:	9b01      	ldr	r3, [sp, #4]
 801eb3e:	42a3      	cmp	r3, r4
 801eb40:	bfb8      	it	lt
 801eb42:	4623      	movlt	r3, r4
 801eb44:	9304      	str	r3, [sp, #16]
 801eb46:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 801eb4a:	b113      	cbz	r3, 801eb52 <_vfiprintf_r+0x496>
 801eb4c:	9b04      	ldr	r3, [sp, #16]
 801eb4e:	3301      	adds	r3, #1
 801eb50:	9304      	str	r3, [sp, #16]
 801eb52:	f01a 0302 	ands.w	r3, sl, #2
 801eb56:	9308      	str	r3, [sp, #32]
 801eb58:	bf1e      	ittt	ne
 801eb5a:	9b04      	ldrne	r3, [sp, #16]
 801eb5c:	3302      	addne	r3, #2
 801eb5e:	9304      	strne	r3, [sp, #16]
 801eb60:	f01a 0384 	ands.w	r3, sl, #132	@ 0x84
 801eb64:	930a      	str	r3, [sp, #40]	@ 0x28
 801eb66:	d11f      	bne.n	801eba8 <_vfiprintf_r+0x4ec>
 801eb68:	9b02      	ldr	r3, [sp, #8]
 801eb6a:	9a04      	ldr	r2, [sp, #16]
 801eb6c:	1a9d      	subs	r5, r3, r2
 801eb6e:	2d00      	cmp	r5, #0
 801eb70:	dd1a      	ble.n	801eba8 <_vfiprintf_r+0x4ec>
 801eb72:	4ba9      	ldr	r3, [pc, #676]	@ (801ee18 <_vfiprintf_r+0x75c>)
 801eb74:	6033      	str	r3, [r6, #0]
 801eb76:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 801eb7a:	2d10      	cmp	r5, #16
 801eb7c:	f102 0201 	add.w	r2, r2, #1
 801eb80:	f106 0008 	add.w	r0, r6, #8
 801eb84:	f300 814e 	bgt.w	801ee24 <_vfiprintf_r+0x768>
 801eb88:	6075      	str	r5, [r6, #4]
 801eb8a:	2a07      	cmp	r2, #7
 801eb8c:	4465      	add	r5, ip
 801eb8e:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 801eb92:	f340 815a 	ble.w	801ee4a <_vfiprintf_r+0x78e>
 801eb96:	9800      	ldr	r0, [sp, #0]
 801eb98:	aa0e      	add	r2, sp, #56	@ 0x38
 801eb9a:	4639      	mov	r1, r7
 801eb9c:	f7ff fd5c 	bl	801e658 <__sprint_r>
 801eba0:	2800      	cmp	r0, #0
 801eba2:	f040 81b4 	bne.w	801ef0e <_vfiprintf_r+0x852>
 801eba6:	ae11      	add	r6, sp, #68	@ 0x44
 801eba8:	f89d 1033 	ldrb.w	r1, [sp, #51]	@ 0x33
 801ebac:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801ebb0:	b161      	cbz	r1, 801ebcc <_vfiprintf_r+0x510>
 801ebb2:	f10d 0133 	add.w	r1, sp, #51	@ 0x33
 801ebb6:	3301      	adds	r3, #1
 801ebb8:	6031      	str	r1, [r6, #0]
 801ebba:	2101      	movs	r1, #1
 801ebbc:	440a      	add	r2, r1
 801ebbe:	2b07      	cmp	r3, #7
 801ebc0:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801ebc4:	6071      	str	r1, [r6, #4]
 801ebc6:	f300 8142 	bgt.w	801ee4e <_vfiprintf_r+0x792>
 801ebca:	3608      	adds	r6, #8
 801ebcc:	9908      	ldr	r1, [sp, #32]
 801ebce:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801ebd2:	b159      	cbz	r1, 801ebec <_vfiprintf_r+0x530>
 801ebd4:	a90d      	add	r1, sp, #52	@ 0x34
 801ebd6:	3301      	adds	r3, #1
 801ebd8:	6031      	str	r1, [r6, #0]
 801ebda:	2102      	movs	r1, #2
 801ebdc:	440a      	add	r2, r1
 801ebde:	2b07      	cmp	r3, #7
 801ebe0:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801ebe4:	6071      	str	r1, [r6, #4]
 801ebe6:	f300 813b 	bgt.w	801ee60 <_vfiprintf_r+0x7a4>
 801ebea:	3608      	adds	r6, #8
 801ebec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ebee:	2b80      	cmp	r3, #128	@ 0x80
 801ebf0:	d11f      	bne.n	801ec32 <_vfiprintf_r+0x576>
 801ebf2:	9b02      	ldr	r3, [sp, #8]
 801ebf4:	9a04      	ldr	r2, [sp, #16]
 801ebf6:	1a9d      	subs	r5, r3, r2
 801ebf8:	2d00      	cmp	r5, #0
 801ebfa:	dd1a      	ble.n	801ec32 <_vfiprintf_r+0x576>
 801ebfc:	4b87      	ldr	r3, [pc, #540]	@ (801ee1c <_vfiprintf_r+0x760>)
 801ebfe:	6033      	str	r3, [r6, #0]
 801ec00:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 801ec04:	2d10      	cmp	r5, #16
 801ec06:	f102 0201 	add.w	r2, r2, #1
 801ec0a:	f106 0008 	add.w	r0, r6, #8
 801ec0e:	f300 8130 	bgt.w	801ee72 <_vfiprintf_r+0x7b6>
 801ec12:	6075      	str	r5, [r6, #4]
 801ec14:	2a07      	cmp	r2, #7
 801ec16:	4465      	add	r5, ip
 801ec18:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 801ec1c:	f340 813c 	ble.w	801ee98 <_vfiprintf_r+0x7dc>
 801ec20:	9800      	ldr	r0, [sp, #0]
 801ec22:	aa0e      	add	r2, sp, #56	@ 0x38
 801ec24:	4639      	mov	r1, r7
 801ec26:	f7ff fd17 	bl	801e658 <__sprint_r>
 801ec2a:	2800      	cmp	r0, #0
 801ec2c:	f040 816f 	bne.w	801ef0e <_vfiprintf_r+0x852>
 801ec30:	ae11      	add	r6, sp, #68	@ 0x44
 801ec32:	9b01      	ldr	r3, [sp, #4]
 801ec34:	1ae4      	subs	r4, r4, r3
 801ec36:	2c00      	cmp	r4, #0
 801ec38:	dd1a      	ble.n	801ec70 <_vfiprintf_r+0x5b4>
 801ec3a:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 801ec3e:	4877      	ldr	r0, [pc, #476]	@ (801ee1c <_vfiprintf_r+0x760>)
 801ec40:	6030      	str	r0, [r6, #0]
 801ec42:	2c10      	cmp	r4, #16
 801ec44:	f103 0301 	add.w	r3, r3, #1
 801ec48:	f106 0108 	add.w	r1, r6, #8
 801ec4c:	f300 8126 	bgt.w	801ee9c <_vfiprintf_r+0x7e0>
 801ec50:	6074      	str	r4, [r6, #4]
 801ec52:	2b07      	cmp	r3, #7
 801ec54:	4414      	add	r4, r2
 801ec56:	e9cd 340f 	strd	r3, r4, [sp, #60]	@ 0x3c
 801ec5a:	f340 8130 	ble.w	801eebe <_vfiprintf_r+0x802>
 801ec5e:	9800      	ldr	r0, [sp, #0]
 801ec60:	aa0e      	add	r2, sp, #56	@ 0x38
 801ec62:	4639      	mov	r1, r7
 801ec64:	f7ff fcf8 	bl	801e658 <__sprint_r>
 801ec68:	2800      	cmp	r0, #0
 801ec6a:	f040 8150 	bne.w	801ef0e <_vfiprintf_r+0x852>
 801ec6e:	ae11      	add	r6, sp, #68	@ 0x44
 801ec70:	9b01      	ldr	r3, [sp, #4]
 801ec72:	9a01      	ldr	r2, [sp, #4]
 801ec74:	6073      	str	r3, [r6, #4]
 801ec76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ec78:	f8c6 9000 	str.w	r9, [r6]
 801ec7c:	4413      	add	r3, r2
 801ec7e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ec80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ec82:	3301      	adds	r3, #1
 801ec84:	2b07      	cmp	r3, #7
 801ec86:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ec88:	f300 811b 	bgt.w	801eec2 <_vfiprintf_r+0x806>
 801ec8c:	f106 0308 	add.w	r3, r6, #8
 801ec90:	f01a 0f04 	tst.w	sl, #4
 801ec94:	f040 811d 	bne.w	801eed2 <_vfiprintf_r+0x816>
 801ec98:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801ec9c:	9904      	ldr	r1, [sp, #16]
 801ec9e:	428a      	cmp	r2, r1
 801eca0:	bfac      	ite	ge
 801eca2:	189b      	addge	r3, r3, r2
 801eca4:	185b      	addlt	r3, r3, r1
 801eca6:	9303      	str	r3, [sp, #12]
 801eca8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ecaa:	b13b      	cbz	r3, 801ecbc <_vfiprintf_r+0x600>
 801ecac:	9800      	ldr	r0, [sp, #0]
 801ecae:	aa0e      	add	r2, sp, #56	@ 0x38
 801ecb0:	4639      	mov	r1, r7
 801ecb2:	f7ff fcd1 	bl	801e658 <__sprint_r>
 801ecb6:	2800      	cmp	r0, #0
 801ecb8:	f040 8129 	bne.w	801ef0e <_vfiprintf_r+0x852>
 801ecbc:	2300      	movs	r3, #0
 801ecbe:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ecc0:	4645      	mov	r5, r8
 801ecc2:	ae11      	add	r6, sp, #68	@ 0x44
 801ecc4:	e55b      	b.n	801e77e <_vfiprintf_r+0xc2>
 801ecc6:	4648      	mov	r0, r9
 801ecc8:	f7e1 fa82 	bl	80001d0 <strlen>
 801eccc:	9001      	str	r0, [sp, #4]
 801ecce:	e734      	b.n	801eb3a <_vfiprintf_r+0x47e>
 801ecd0:	f04a 0a10 	orr.w	sl, sl, #16
 801ecd4:	f01a 0320 	ands.w	r3, sl, #32
 801ecd8:	d008      	beq.n	801ecec <_vfiprintf_r+0x630>
 801ecda:	3507      	adds	r5, #7
 801ecdc:	f025 0507 	bic.w	r5, r5, #7
 801ece0:	46a8      	mov	r8, r5
 801ece2:	686d      	ldr	r5, [r5, #4]
 801ece4:	f858 4b08 	ldr.w	r4, [r8], #8
 801ece8:	2301      	movs	r3, #1
 801ecea:	e6d8      	b.n	801ea9e <_vfiprintf_r+0x3e2>
 801ecec:	46a8      	mov	r8, r5
 801ecee:	f01a 0510 	ands.w	r5, sl, #16
 801ecf2:	f858 4b04 	ldr.w	r4, [r8], #4
 801ecf6:	d001      	beq.n	801ecfc <_vfiprintf_r+0x640>
 801ecf8:	461d      	mov	r5, r3
 801ecfa:	e7f5      	b.n	801ece8 <_vfiprintf_r+0x62c>
 801ecfc:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 801ed00:	d001      	beq.n	801ed06 <_vfiprintf_r+0x64a>
 801ed02:	b2a4      	uxth	r4, r4
 801ed04:	e7f0      	b.n	801ece8 <_vfiprintf_r+0x62c>
 801ed06:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ed0a:	d0ed      	beq.n	801ece8 <_vfiprintf_r+0x62c>
 801ed0c:	b2e4      	uxtb	r4, r4
 801ed0e:	e7f3      	b.n	801ecf8 <_vfiprintf_r+0x63c>
 801ed10:	4a43      	ldr	r2, [pc, #268]	@ (801ee20 <_vfiprintf_r+0x764>)
 801ed12:	e5c9      	b.n	801e8a8 <_vfiprintf_r+0x1ec>
 801ed14:	46a8      	mov	r8, r5
 801ed16:	f01a 0510 	ands.w	r5, sl, #16
 801ed1a:	f858 4b04 	ldr.w	r4, [r8], #4
 801ed1e:	d001      	beq.n	801ed24 <_vfiprintf_r+0x668>
 801ed20:	4615      	mov	r5, r2
 801ed22:	e5cd      	b.n	801e8c0 <_vfiprintf_r+0x204>
 801ed24:	f01a 0240 	ands.w	r2, sl, #64	@ 0x40
 801ed28:	d001      	beq.n	801ed2e <_vfiprintf_r+0x672>
 801ed2a:	b2a4      	uxth	r4, r4
 801ed2c:	e5c8      	b.n	801e8c0 <_vfiprintf_r+0x204>
 801ed2e:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 801ed32:	f43f adc5 	beq.w	801e8c0 <_vfiprintf_r+0x204>
 801ed36:	b2e4      	uxtb	r4, r4
 801ed38:	e7f2      	b.n	801ed20 <_vfiprintf_r+0x664>
 801ed3a:	2c0a      	cmp	r4, #10
 801ed3c:	f175 0300 	sbcs.w	r3, r5, #0
 801ed40:	d206      	bcs.n	801ed50 <_vfiprintf_r+0x694>
 801ed42:	3430      	adds	r4, #48	@ 0x30
 801ed44:	b2e4      	uxtb	r4, r4
 801ed46:	f88d 40e7 	strb.w	r4, [sp, #231]	@ 0xe7
 801ed4a:	f10d 09e7 	add.w	r9, sp, #231	@ 0xe7
 801ed4e:	e131      	b.n	801efb4 <_vfiprintf_r+0x8f8>
 801ed50:	ab3a      	add	r3, sp, #232	@ 0xe8
 801ed52:	9308      	str	r3, [sp, #32]
 801ed54:	9b04      	ldr	r3, [sp, #16]
 801ed56:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801ed5a:	f04f 0a00 	mov.w	sl, #0
 801ed5e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed60:	220a      	movs	r2, #10
 801ed62:	2300      	movs	r3, #0
 801ed64:	4620      	mov	r0, r4
 801ed66:	4629      	mov	r1, r5
 801ed68:	f7e1 ff8e 	bl	8000c88 <__aeabi_uldivmod>
 801ed6c:	460b      	mov	r3, r1
 801ed6e:	9908      	ldr	r1, [sp, #32]
 801ed70:	900b      	str	r0, [sp, #44]	@ 0x2c
 801ed72:	3230      	adds	r2, #48	@ 0x30
 801ed74:	f801 2c01 	strb.w	r2, [r1, #-1]
 801ed78:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ed7a:	f101 39ff 	add.w	r9, r1, #4294967295
 801ed7e:	f10a 0a01 	add.w	sl, sl, #1
 801ed82:	b1e2      	cbz	r2, 801edbe <_vfiprintf_r+0x702>
 801ed84:	9a06      	ldr	r2, [sp, #24]
 801ed86:	7812      	ldrb	r2, [r2, #0]
 801ed88:	4552      	cmp	r2, sl
 801ed8a:	d118      	bne.n	801edbe <_vfiprintf_r+0x702>
 801ed8c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ed90:	d015      	beq.n	801edbe <_vfiprintf_r+0x702>
 801ed92:	2c0a      	cmp	r4, #10
 801ed94:	f175 0200 	sbcs.w	r2, r5, #0
 801ed98:	d311      	bcc.n	801edbe <_vfiprintf_r+0x702>
 801ed9a:	9308      	str	r3, [sp, #32]
 801ed9c:	9b07      	ldr	r3, [sp, #28]
 801ed9e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801eda0:	eba9 0903 	sub.w	r9, r9, r3
 801eda4:	461a      	mov	r2, r3
 801eda6:	4648      	mov	r0, r9
 801eda8:	f7fd ff67 	bl	801cc7a <strncpy>
 801edac:	9b06      	ldr	r3, [sp, #24]
 801edae:	785a      	ldrb	r2, [r3, #1]
 801edb0:	9b08      	ldr	r3, [sp, #32]
 801edb2:	b172      	cbz	r2, 801edd2 <_vfiprintf_r+0x716>
 801edb4:	9a06      	ldr	r2, [sp, #24]
 801edb6:	3201      	adds	r2, #1
 801edb8:	9206      	str	r2, [sp, #24]
 801edba:	f04f 0a00 	mov.w	sl, #0
 801edbe:	2c0a      	cmp	r4, #10
 801edc0:	f175 0500 	sbcs.w	r5, r5, #0
 801edc4:	f0c0 80f6 	bcc.w	801efb4 <_vfiprintf_r+0x8f8>
 801edc8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801edca:	f8cd 9020 	str.w	r9, [sp, #32]
 801edce:	461d      	mov	r5, r3
 801edd0:	e7c6      	b.n	801ed60 <_vfiprintf_r+0x6a4>
 801edd2:	4692      	mov	sl, r2
 801edd4:	e7f3      	b.n	801edbe <_vfiprintf_r+0x702>
 801edd6:	f004 030f 	and.w	r3, r4, #15
 801edda:	9a05      	ldr	r2, [sp, #20]
 801eddc:	0924      	lsrs	r4, r4, #4
 801edde:	5cd3      	ldrb	r3, [r2, r3]
 801ede0:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801ede4:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 801ede8:	092d      	lsrs	r5, r5, #4
 801edea:	ea54 0305 	orrs.w	r3, r4, r5
 801edee:	d1f2      	bne.n	801edd6 <_vfiprintf_r+0x71a>
 801edf0:	e0e0      	b.n	801efb4 <_vfiprintf_r+0x8f8>
 801edf2:	b923      	cbnz	r3, 801edfe <_vfiprintf_r+0x742>
 801edf4:	f01a 0f01 	tst.w	sl, #1
 801edf8:	d001      	beq.n	801edfe <_vfiprintf_r+0x742>
 801edfa:	2430      	movs	r4, #48	@ 0x30
 801edfc:	e7a3      	b.n	801ed46 <_vfiprintf_r+0x68a>
 801edfe:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 801ee02:	e0d7      	b.n	801efb4 <_vfiprintf_r+0x8f8>
 801ee04:	2b00      	cmp	r3, #0
 801ee06:	f000 80a3 	beq.w	801ef50 <_vfiprintf_r+0x894>
 801ee0a:	2400      	movs	r4, #0
 801ee0c:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 801ee10:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 801ee14:	46a8      	mov	r8, r5
 801ee16:	e5e0      	b.n	801e9da <_vfiprintf_r+0x31e>
 801ee18:	080219ad 	.word	0x080219ad
 801ee1c:	0802199d 	.word	0x0802199d
 801ee20:	08021655 	.word	0x08021655
 801ee24:	2110      	movs	r1, #16
 801ee26:	6071      	str	r1, [r6, #4]
 801ee28:	2a07      	cmp	r2, #7
 801ee2a:	4461      	add	r1, ip
 801ee2c:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ee30:	dd08      	ble.n	801ee44 <_vfiprintf_r+0x788>
 801ee32:	9800      	ldr	r0, [sp, #0]
 801ee34:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee36:	4639      	mov	r1, r7
 801ee38:	f7ff fc0e 	bl	801e658 <__sprint_r>
 801ee3c:	2800      	cmp	r0, #0
 801ee3e:	d166      	bne.n	801ef0e <_vfiprintf_r+0x852>
 801ee40:	4b60      	ldr	r3, [pc, #384]	@ (801efc4 <_vfiprintf_r+0x908>)
 801ee42:	a811      	add	r0, sp, #68	@ 0x44
 801ee44:	3d10      	subs	r5, #16
 801ee46:	4606      	mov	r6, r0
 801ee48:	e694      	b.n	801eb74 <_vfiprintf_r+0x4b8>
 801ee4a:	4606      	mov	r6, r0
 801ee4c:	e6ac      	b.n	801eba8 <_vfiprintf_r+0x4ec>
 801ee4e:	9800      	ldr	r0, [sp, #0]
 801ee50:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee52:	4639      	mov	r1, r7
 801ee54:	f7ff fc00 	bl	801e658 <__sprint_r>
 801ee58:	2800      	cmp	r0, #0
 801ee5a:	d158      	bne.n	801ef0e <_vfiprintf_r+0x852>
 801ee5c:	ae11      	add	r6, sp, #68	@ 0x44
 801ee5e:	e6b5      	b.n	801ebcc <_vfiprintf_r+0x510>
 801ee60:	9800      	ldr	r0, [sp, #0]
 801ee62:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee64:	4639      	mov	r1, r7
 801ee66:	f7ff fbf7 	bl	801e658 <__sprint_r>
 801ee6a:	2800      	cmp	r0, #0
 801ee6c:	d14f      	bne.n	801ef0e <_vfiprintf_r+0x852>
 801ee6e:	ae11      	add	r6, sp, #68	@ 0x44
 801ee70:	e6bc      	b.n	801ebec <_vfiprintf_r+0x530>
 801ee72:	2110      	movs	r1, #16
 801ee74:	6071      	str	r1, [r6, #4]
 801ee76:	2a07      	cmp	r2, #7
 801ee78:	4461      	add	r1, ip
 801ee7a:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ee7e:	dd08      	ble.n	801ee92 <_vfiprintf_r+0x7d6>
 801ee80:	9800      	ldr	r0, [sp, #0]
 801ee82:	aa0e      	add	r2, sp, #56	@ 0x38
 801ee84:	4639      	mov	r1, r7
 801ee86:	f7ff fbe7 	bl	801e658 <__sprint_r>
 801ee8a:	2800      	cmp	r0, #0
 801ee8c:	d13f      	bne.n	801ef0e <_vfiprintf_r+0x852>
 801ee8e:	4b4e      	ldr	r3, [pc, #312]	@ (801efc8 <_vfiprintf_r+0x90c>)
 801ee90:	a811      	add	r0, sp, #68	@ 0x44
 801ee92:	3d10      	subs	r5, #16
 801ee94:	4606      	mov	r6, r0
 801ee96:	e6b2      	b.n	801ebfe <_vfiprintf_r+0x542>
 801ee98:	4606      	mov	r6, r0
 801ee9a:	e6ca      	b.n	801ec32 <_vfiprintf_r+0x576>
 801ee9c:	2010      	movs	r0, #16
 801ee9e:	4402      	add	r2, r0
 801eea0:	2b07      	cmp	r3, #7
 801eea2:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 801eea6:	6070      	str	r0, [r6, #4]
 801eea8:	dd06      	ble.n	801eeb8 <_vfiprintf_r+0x7fc>
 801eeaa:	9800      	ldr	r0, [sp, #0]
 801eeac:	aa0e      	add	r2, sp, #56	@ 0x38
 801eeae:	4639      	mov	r1, r7
 801eeb0:	f7ff fbd2 	bl	801e658 <__sprint_r>
 801eeb4:	bb58      	cbnz	r0, 801ef0e <_vfiprintf_r+0x852>
 801eeb6:	a911      	add	r1, sp, #68	@ 0x44
 801eeb8:	3c10      	subs	r4, #16
 801eeba:	460e      	mov	r6, r1
 801eebc:	e6bd      	b.n	801ec3a <_vfiprintf_r+0x57e>
 801eebe:	460e      	mov	r6, r1
 801eec0:	e6d6      	b.n	801ec70 <_vfiprintf_r+0x5b4>
 801eec2:	9800      	ldr	r0, [sp, #0]
 801eec4:	aa0e      	add	r2, sp, #56	@ 0x38
 801eec6:	4639      	mov	r1, r7
 801eec8:	f7ff fbc6 	bl	801e658 <__sprint_r>
 801eecc:	b9f8      	cbnz	r0, 801ef0e <_vfiprintf_r+0x852>
 801eece:	ab11      	add	r3, sp, #68	@ 0x44
 801eed0:	e6de      	b.n	801ec90 <_vfiprintf_r+0x5d4>
 801eed2:	9a02      	ldr	r2, [sp, #8]
 801eed4:	9904      	ldr	r1, [sp, #16]
 801eed6:	1a54      	subs	r4, r2, r1
 801eed8:	2c00      	cmp	r4, #0
 801eeda:	f77f aedd 	ble.w	801ec98 <_vfiprintf_r+0x5dc>
 801eede:	4d39      	ldr	r5, [pc, #228]	@ (801efc4 <_vfiprintf_r+0x908>)
 801eee0:	2610      	movs	r6, #16
 801eee2:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	@ 0x3c
 801eee6:	2c10      	cmp	r4, #16
 801eee8:	f102 0201 	add.w	r2, r2, #1
 801eeec:	601d      	str	r5, [r3, #0]
 801eeee:	dc1d      	bgt.n	801ef2c <_vfiprintf_r+0x870>
 801eef0:	605c      	str	r4, [r3, #4]
 801eef2:	2a07      	cmp	r2, #7
 801eef4:	440c      	add	r4, r1
 801eef6:	e9cd 240f 	strd	r2, r4, [sp, #60]	@ 0x3c
 801eefa:	f77f aecd 	ble.w	801ec98 <_vfiprintf_r+0x5dc>
 801eefe:	9800      	ldr	r0, [sp, #0]
 801ef00:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef02:	4639      	mov	r1, r7
 801ef04:	f7ff fba8 	bl	801e658 <__sprint_r>
 801ef08:	2800      	cmp	r0, #0
 801ef0a:	f43f aec5 	beq.w	801ec98 <_vfiprintf_r+0x5dc>
 801ef0e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 801ef10:	07d9      	lsls	r1, r3, #31
 801ef12:	d405      	bmi.n	801ef20 <_vfiprintf_r+0x864>
 801ef14:	89bb      	ldrh	r3, [r7, #12]
 801ef16:	059a      	lsls	r2, r3, #22
 801ef18:	d402      	bmi.n	801ef20 <_vfiprintf_r+0x864>
 801ef1a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 801ef1c:	f7fc f851 	bl	801afc2 <__retarget_lock_release_recursive>
 801ef20:	89bb      	ldrh	r3, [r7, #12]
 801ef22:	065b      	lsls	r3, r3, #25
 801ef24:	f57f abfb 	bpl.w	801e71e <_vfiprintf_r+0x62>
 801ef28:	f7ff bbf6 	b.w	801e718 <_vfiprintf_r+0x5c>
 801ef2c:	3110      	adds	r1, #16
 801ef2e:	2a07      	cmp	r2, #7
 801ef30:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 801ef34:	605e      	str	r6, [r3, #4]
 801ef36:	dc02      	bgt.n	801ef3e <_vfiprintf_r+0x882>
 801ef38:	3308      	adds	r3, #8
 801ef3a:	3c10      	subs	r4, #16
 801ef3c:	e7d1      	b.n	801eee2 <_vfiprintf_r+0x826>
 801ef3e:	9800      	ldr	r0, [sp, #0]
 801ef40:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef42:	4639      	mov	r1, r7
 801ef44:	f7ff fb88 	bl	801e658 <__sprint_r>
 801ef48:	2800      	cmp	r0, #0
 801ef4a:	d1e0      	bne.n	801ef0e <_vfiprintf_r+0x852>
 801ef4c:	ab11      	add	r3, sp, #68	@ 0x44
 801ef4e:	e7f4      	b.n	801ef3a <_vfiprintf_r+0x87e>
 801ef50:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef52:	b913      	cbnz	r3, 801ef5a <_vfiprintf_r+0x89e>
 801ef54:	2300      	movs	r3, #0
 801ef56:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ef58:	e7d9      	b.n	801ef0e <_vfiprintf_r+0x852>
 801ef5a:	9800      	ldr	r0, [sp, #0]
 801ef5c:	aa0e      	add	r2, sp, #56	@ 0x38
 801ef5e:	4639      	mov	r1, r7
 801ef60:	f7ff fb7a 	bl	801e658 <__sprint_r>
 801ef64:	2800      	cmp	r0, #0
 801ef66:	d0f5      	beq.n	801ef54 <_vfiprintf_r+0x898>
 801ef68:	e7d1      	b.n	801ef0e <_vfiprintf_r+0x852>
 801ef6a:	ea54 0205 	orrs.w	r2, r4, r5
 801ef6e:	f8cd a010 	str.w	sl, [sp, #16]
 801ef72:	f43f ada6 	beq.w	801eac2 <_vfiprintf_r+0x406>
 801ef76:	2b01      	cmp	r3, #1
 801ef78:	f43f aedf 	beq.w	801ed3a <_vfiprintf_r+0x67e>
 801ef7c:	2b02      	cmp	r3, #2
 801ef7e:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 801ef82:	f43f af28 	beq.w	801edd6 <_vfiprintf_r+0x71a>
 801ef86:	f004 0307 	and.w	r3, r4, #7
 801ef8a:	08e4      	lsrs	r4, r4, #3
 801ef8c:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 801ef90:	08ed      	lsrs	r5, r5, #3
 801ef92:	3330      	adds	r3, #48	@ 0x30
 801ef94:	ea54 0105 	orrs.w	r1, r4, r5
 801ef98:	464a      	mov	r2, r9
 801ef9a:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801ef9e:	d1f2      	bne.n	801ef86 <_vfiprintf_r+0x8ca>
 801efa0:	9904      	ldr	r1, [sp, #16]
 801efa2:	07c8      	lsls	r0, r1, #31
 801efa4:	d506      	bpl.n	801efb4 <_vfiprintf_r+0x8f8>
 801efa6:	2b30      	cmp	r3, #48	@ 0x30
 801efa8:	d004      	beq.n	801efb4 <_vfiprintf_r+0x8f8>
 801efaa:	2330      	movs	r3, #48	@ 0x30
 801efac:	f809 3c01 	strb.w	r3, [r9, #-1]
 801efb0:	f1a2 0902 	sub.w	r9, r2, #2
 801efb4:	ab3a      	add	r3, sp, #232	@ 0xe8
 801efb6:	eba3 0309 	sub.w	r3, r3, r9
 801efba:	9c01      	ldr	r4, [sp, #4]
 801efbc:	f8dd a010 	ldr.w	sl, [sp, #16]
 801efc0:	9301      	str	r3, [sp, #4]
 801efc2:	e5bb      	b.n	801eb3c <_vfiprintf_r+0x480>
 801efc4:	080219ad 	.word	0x080219ad
 801efc8:	0802199d 	.word	0x0802199d

0801efcc <__sbprintf>:
 801efcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801efce:	461f      	mov	r7, r3
 801efd0:	898b      	ldrh	r3, [r1, #12]
 801efd2:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
 801efd6:	f023 0302 	bic.w	r3, r3, #2
 801efda:	f8ad 300c 	strh.w	r3, [sp, #12]
 801efde:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 801efe0:	9319      	str	r3, [sp, #100]	@ 0x64
 801efe2:	89cb      	ldrh	r3, [r1, #14]
 801efe4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801efe8:	69cb      	ldr	r3, [r1, #28]
 801efea:	9307      	str	r3, [sp, #28]
 801efec:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 801efee:	9309      	str	r3, [sp, #36]	@ 0x24
 801eff0:	ab1a      	add	r3, sp, #104	@ 0x68
 801eff2:	9300      	str	r3, [sp, #0]
 801eff4:	9304      	str	r3, [sp, #16]
 801eff6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801effa:	4615      	mov	r5, r2
 801effc:	4606      	mov	r6, r0
 801effe:	9302      	str	r3, [sp, #8]
 801f000:	9305      	str	r3, [sp, #20]
 801f002:	a816      	add	r0, sp, #88	@ 0x58
 801f004:	2300      	movs	r3, #0
 801f006:	460c      	mov	r4, r1
 801f008:	9306      	str	r3, [sp, #24]
 801f00a:	f7fb ffd7 	bl	801afbc <__retarget_lock_init_recursive>
 801f00e:	462a      	mov	r2, r5
 801f010:	463b      	mov	r3, r7
 801f012:	4669      	mov	r1, sp
 801f014:	4630      	mov	r0, r6
 801f016:	f7ff fb51 	bl	801e6bc <_vfiprintf_r>
 801f01a:	1e05      	subs	r5, r0, #0
 801f01c:	db07      	blt.n	801f02e <__sbprintf+0x62>
 801f01e:	4669      	mov	r1, sp
 801f020:	4630      	mov	r0, r6
 801f022:	f7fd fe05 	bl	801cc30 <_fflush_r>
 801f026:	2800      	cmp	r0, #0
 801f028:	bf18      	it	ne
 801f02a:	f04f 35ff 	movne.w	r5, #4294967295
 801f02e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801f032:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801f034:	065b      	lsls	r3, r3, #25
 801f036:	bf42      	ittt	mi
 801f038:	89a3      	ldrhmi	r3, [r4, #12]
 801f03a:	f043 0340 	orrmi.w	r3, r3, #64	@ 0x40
 801f03e:	81a3      	strhmi	r3, [r4, #12]
 801f040:	f7fb ffbd 	bl	801afbe <__retarget_lock_close_recursive>
 801f044:	4628      	mov	r0, r5
 801f046:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
 801f04a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801f04c <__sfvwrite_r>:
 801f04c:	6893      	ldr	r3, [r2, #8]
 801f04e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f052:	4606      	mov	r6, r0
 801f054:	460c      	mov	r4, r1
 801f056:	4691      	mov	r9, r2
 801f058:	b91b      	cbnz	r3, 801f062 <__sfvwrite_r+0x16>
 801f05a:	2000      	movs	r0, #0
 801f05c:	b003      	add	sp, #12
 801f05e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f062:	898b      	ldrh	r3, [r1, #12]
 801f064:	0718      	lsls	r0, r3, #28
 801f066:	d550      	bpl.n	801f10a <__sfvwrite_r+0xbe>
 801f068:	690b      	ldr	r3, [r1, #16]
 801f06a:	2b00      	cmp	r3, #0
 801f06c:	d04d      	beq.n	801f10a <__sfvwrite_r+0xbe>
 801f06e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f072:	f8d9 8000 	ldr.w	r8, [r9]
 801f076:	f013 0702 	ands.w	r7, r3, #2
 801f07a:	d16b      	bne.n	801f154 <__sfvwrite_r+0x108>
 801f07c:	f013 0301 	ands.w	r3, r3, #1
 801f080:	f000 809c 	beq.w	801f1bc <__sfvwrite_r+0x170>
 801f084:	4638      	mov	r0, r7
 801f086:	46ba      	mov	sl, r7
 801f088:	46bb      	mov	fp, r7
 801f08a:	f1bb 0f00 	cmp.w	fp, #0
 801f08e:	f000 8103 	beq.w	801f298 <__sfvwrite_r+0x24c>
 801f092:	b950      	cbnz	r0, 801f0aa <__sfvwrite_r+0x5e>
 801f094:	465a      	mov	r2, fp
 801f096:	210a      	movs	r1, #10
 801f098:	4650      	mov	r0, sl
 801f09a:	f7e1 f8a1 	bl	80001e0 <memchr>
 801f09e:	2800      	cmp	r0, #0
 801f0a0:	f000 8100 	beq.w	801f2a4 <__sfvwrite_r+0x258>
 801f0a4:	3001      	adds	r0, #1
 801f0a6:	eba0 070a 	sub.w	r7, r0, sl
 801f0aa:	6820      	ldr	r0, [r4, #0]
 801f0ac:	6921      	ldr	r1, [r4, #16]
 801f0ae:	68a5      	ldr	r5, [r4, #8]
 801f0b0:	6963      	ldr	r3, [r4, #20]
 801f0b2:	455f      	cmp	r7, fp
 801f0b4:	463a      	mov	r2, r7
 801f0b6:	bf28      	it	cs
 801f0b8:	465a      	movcs	r2, fp
 801f0ba:	4288      	cmp	r0, r1
 801f0bc:	f240 80f5 	bls.w	801f2aa <__sfvwrite_r+0x25e>
 801f0c0:	441d      	add	r5, r3
 801f0c2:	42aa      	cmp	r2, r5
 801f0c4:	f340 80f1 	ble.w	801f2aa <__sfvwrite_r+0x25e>
 801f0c8:	4651      	mov	r1, sl
 801f0ca:	462a      	mov	r2, r5
 801f0cc:	f7ff fa44 	bl	801e558 <memmove>
 801f0d0:	6823      	ldr	r3, [r4, #0]
 801f0d2:	442b      	add	r3, r5
 801f0d4:	6023      	str	r3, [r4, #0]
 801f0d6:	4621      	mov	r1, r4
 801f0d8:	4630      	mov	r0, r6
 801f0da:	f7fd fda9 	bl	801cc30 <_fflush_r>
 801f0de:	2800      	cmp	r0, #0
 801f0e0:	d167      	bne.n	801f1b2 <__sfvwrite_r+0x166>
 801f0e2:	1b7f      	subs	r7, r7, r5
 801f0e4:	f040 80f9 	bne.w	801f2da <__sfvwrite_r+0x28e>
 801f0e8:	4621      	mov	r1, r4
 801f0ea:	4630      	mov	r0, r6
 801f0ec:	f7fd fda0 	bl	801cc30 <_fflush_r>
 801f0f0:	2800      	cmp	r0, #0
 801f0f2:	d15e      	bne.n	801f1b2 <__sfvwrite_r+0x166>
 801f0f4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f0f8:	1b5b      	subs	r3, r3, r5
 801f0fa:	44aa      	add	sl, r5
 801f0fc:	ebab 0b05 	sub.w	fp, fp, r5
 801f100:	f8c9 3008 	str.w	r3, [r9, #8]
 801f104:	2b00      	cmp	r3, #0
 801f106:	d1c0      	bne.n	801f08a <__sfvwrite_r+0x3e>
 801f108:	e7a7      	b.n	801f05a <__sfvwrite_r+0xe>
 801f10a:	4621      	mov	r1, r4
 801f10c:	4630      	mov	r0, r6
 801f10e:	f000 f8e9 	bl	801f2e4 <__swsetup_r>
 801f112:	2800      	cmp	r0, #0
 801f114:	d0ab      	beq.n	801f06e <__sfvwrite_r+0x22>
 801f116:	f04f 30ff 	mov.w	r0, #4294967295
 801f11a:	e79f      	b.n	801f05c <__sfvwrite_r+0x10>
 801f11c:	e9d8 a500 	ldrd	sl, r5, [r8]
 801f120:	f108 0808 	add.w	r8, r8, #8
 801f124:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
 801f128:	69e1      	ldr	r1, [r4, #28]
 801f12a:	2d00      	cmp	r5, #0
 801f12c:	d0f6      	beq.n	801f11c <__sfvwrite_r+0xd0>
 801f12e:	42bd      	cmp	r5, r7
 801f130:	462b      	mov	r3, r5
 801f132:	4652      	mov	r2, sl
 801f134:	bf28      	it	cs
 801f136:	463b      	movcs	r3, r7
 801f138:	4630      	mov	r0, r6
 801f13a:	47d8      	blx	fp
 801f13c:	2800      	cmp	r0, #0
 801f13e:	dd38      	ble.n	801f1b2 <__sfvwrite_r+0x166>
 801f140:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f144:	1a1b      	subs	r3, r3, r0
 801f146:	4482      	add	sl, r0
 801f148:	1a2d      	subs	r5, r5, r0
 801f14a:	f8c9 3008 	str.w	r3, [r9, #8]
 801f14e:	2b00      	cmp	r3, #0
 801f150:	d1e8      	bne.n	801f124 <__sfvwrite_r+0xd8>
 801f152:	e782      	b.n	801f05a <__sfvwrite_r+0xe>
 801f154:	f04f 0a00 	mov.w	sl, #0
 801f158:	4f61      	ldr	r7, [pc, #388]	@ (801f2e0 <__sfvwrite_r+0x294>)
 801f15a:	4655      	mov	r5, sl
 801f15c:	e7e2      	b.n	801f124 <__sfvwrite_r+0xd8>
 801f15e:	e9d8 7a00 	ldrd	r7, sl, [r8]
 801f162:	f108 0808 	add.w	r8, r8, #8
 801f166:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f16a:	6820      	ldr	r0, [r4, #0]
 801f16c:	68a2      	ldr	r2, [r4, #8]
 801f16e:	f1ba 0f00 	cmp.w	sl, #0
 801f172:	d0f4      	beq.n	801f15e <__sfvwrite_r+0x112>
 801f174:	0599      	lsls	r1, r3, #22
 801f176:	d563      	bpl.n	801f240 <__sfvwrite_r+0x1f4>
 801f178:	4552      	cmp	r2, sl
 801f17a:	d836      	bhi.n	801f1ea <__sfvwrite_r+0x19e>
 801f17c:	f413 6f90 	tst.w	r3, #1152	@ 0x480
 801f180:	d033      	beq.n	801f1ea <__sfvwrite_r+0x19e>
 801f182:	6921      	ldr	r1, [r4, #16]
 801f184:	6965      	ldr	r5, [r4, #20]
 801f186:	eba0 0b01 	sub.w	fp, r0, r1
 801f18a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f18e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 801f192:	f10b 0201 	add.w	r2, fp, #1
 801f196:	106d      	asrs	r5, r5, #1
 801f198:	4452      	add	r2, sl
 801f19a:	4295      	cmp	r5, r2
 801f19c:	bf38      	it	cc
 801f19e:	4615      	movcc	r5, r2
 801f1a0:	055b      	lsls	r3, r3, #21
 801f1a2:	d53d      	bpl.n	801f220 <__sfvwrite_r+0x1d4>
 801f1a4:	4629      	mov	r1, r5
 801f1a6:	4630      	mov	r0, r6
 801f1a8:	f7fc f840 	bl	801b22c <_malloc_r>
 801f1ac:	b948      	cbnz	r0, 801f1c2 <__sfvwrite_r+0x176>
 801f1ae:	230c      	movs	r3, #12
 801f1b0:	6033      	str	r3, [r6, #0]
 801f1b2:	89a3      	ldrh	r3, [r4, #12]
 801f1b4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f1b8:	81a3      	strh	r3, [r4, #12]
 801f1ba:	e7ac      	b.n	801f116 <__sfvwrite_r+0xca>
 801f1bc:	461f      	mov	r7, r3
 801f1be:	469a      	mov	sl, r3
 801f1c0:	e7d1      	b.n	801f166 <__sfvwrite_r+0x11a>
 801f1c2:	465a      	mov	r2, fp
 801f1c4:	6921      	ldr	r1, [r4, #16]
 801f1c6:	9001      	str	r0, [sp, #4]
 801f1c8:	f7fb fefc 	bl	801afc4 <memcpy>
 801f1cc:	89a2      	ldrh	r2, [r4, #12]
 801f1ce:	9b01      	ldr	r3, [sp, #4]
 801f1d0:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 801f1d4:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 801f1d8:	81a2      	strh	r2, [r4, #12]
 801f1da:	6123      	str	r3, [r4, #16]
 801f1dc:	6165      	str	r5, [r4, #20]
 801f1de:	445b      	add	r3, fp
 801f1e0:	eba5 050b 	sub.w	r5, r5, fp
 801f1e4:	6023      	str	r3, [r4, #0]
 801f1e6:	4652      	mov	r2, sl
 801f1e8:	60a5      	str	r5, [r4, #8]
 801f1ea:	4552      	cmp	r2, sl
 801f1ec:	bf28      	it	cs
 801f1ee:	4652      	movcs	r2, sl
 801f1f0:	6820      	ldr	r0, [r4, #0]
 801f1f2:	9201      	str	r2, [sp, #4]
 801f1f4:	4639      	mov	r1, r7
 801f1f6:	f7ff f9af 	bl	801e558 <memmove>
 801f1fa:	68a3      	ldr	r3, [r4, #8]
 801f1fc:	9a01      	ldr	r2, [sp, #4]
 801f1fe:	1a9b      	subs	r3, r3, r2
 801f200:	60a3      	str	r3, [r4, #8]
 801f202:	6823      	ldr	r3, [r4, #0]
 801f204:	4413      	add	r3, r2
 801f206:	4655      	mov	r5, sl
 801f208:	6023      	str	r3, [r4, #0]
 801f20a:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801f20e:	1b5b      	subs	r3, r3, r5
 801f210:	442f      	add	r7, r5
 801f212:	ebaa 0a05 	sub.w	sl, sl, r5
 801f216:	f8c9 3008 	str.w	r3, [r9, #8]
 801f21a:	2b00      	cmp	r3, #0
 801f21c:	d1a3      	bne.n	801f166 <__sfvwrite_r+0x11a>
 801f21e:	e71c      	b.n	801f05a <__sfvwrite_r+0xe>
 801f220:	462a      	mov	r2, r5
 801f222:	4630      	mov	r0, r6
 801f224:	f7fe ff66 	bl	801e0f4 <_realloc_r>
 801f228:	4603      	mov	r3, r0
 801f22a:	2800      	cmp	r0, #0
 801f22c:	d1d5      	bne.n	801f1da <__sfvwrite_r+0x18e>
 801f22e:	6921      	ldr	r1, [r4, #16]
 801f230:	4630      	mov	r0, r6
 801f232:	f7fb ff3b 	bl	801b0ac <_free_r>
 801f236:	89a3      	ldrh	r3, [r4, #12]
 801f238:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 801f23c:	81a3      	strh	r3, [r4, #12]
 801f23e:	e7b6      	b.n	801f1ae <__sfvwrite_r+0x162>
 801f240:	6923      	ldr	r3, [r4, #16]
 801f242:	4283      	cmp	r3, r0
 801f244:	d302      	bcc.n	801f24c <__sfvwrite_r+0x200>
 801f246:	6961      	ldr	r1, [r4, #20]
 801f248:	4551      	cmp	r1, sl
 801f24a:	d915      	bls.n	801f278 <__sfvwrite_r+0x22c>
 801f24c:	4552      	cmp	r2, sl
 801f24e:	bf28      	it	cs
 801f250:	4652      	movcs	r2, sl
 801f252:	4639      	mov	r1, r7
 801f254:	4615      	mov	r5, r2
 801f256:	f7ff f97f 	bl	801e558 <memmove>
 801f25a:	68a3      	ldr	r3, [r4, #8]
 801f25c:	6822      	ldr	r2, [r4, #0]
 801f25e:	1b5b      	subs	r3, r3, r5
 801f260:	442a      	add	r2, r5
 801f262:	60a3      	str	r3, [r4, #8]
 801f264:	6022      	str	r2, [r4, #0]
 801f266:	2b00      	cmp	r3, #0
 801f268:	d1cf      	bne.n	801f20a <__sfvwrite_r+0x1be>
 801f26a:	4621      	mov	r1, r4
 801f26c:	4630      	mov	r0, r6
 801f26e:	f7fd fcdf 	bl	801cc30 <_fflush_r>
 801f272:	2800      	cmp	r0, #0
 801f274:	d0c9      	beq.n	801f20a <__sfvwrite_r+0x1be>
 801f276:	e79c      	b.n	801f1b2 <__sfvwrite_r+0x166>
 801f278:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 801f27c:	4553      	cmp	r3, sl
 801f27e:	bf28      	it	cs
 801f280:	4653      	movcs	r3, sl
 801f282:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f284:	fb93 f3f1 	sdiv	r3, r3, r1
 801f288:	463a      	mov	r2, r7
 801f28a:	434b      	muls	r3, r1
 801f28c:	4630      	mov	r0, r6
 801f28e:	69e1      	ldr	r1, [r4, #28]
 801f290:	47a8      	blx	r5
 801f292:	1e05      	subs	r5, r0, #0
 801f294:	dcb9      	bgt.n	801f20a <__sfvwrite_r+0x1be>
 801f296:	e78c      	b.n	801f1b2 <__sfvwrite_r+0x166>
 801f298:	e9d8 ab00 	ldrd	sl, fp, [r8]
 801f29c:	2000      	movs	r0, #0
 801f29e:	f108 0808 	add.w	r8, r8, #8
 801f2a2:	e6f2      	b.n	801f08a <__sfvwrite_r+0x3e>
 801f2a4:	f10b 0701 	add.w	r7, fp, #1
 801f2a8:	e6ff      	b.n	801f0aa <__sfvwrite_r+0x5e>
 801f2aa:	4293      	cmp	r3, r2
 801f2ac:	dc08      	bgt.n	801f2c0 <__sfvwrite_r+0x274>
 801f2ae:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 801f2b0:	69e1      	ldr	r1, [r4, #28]
 801f2b2:	4652      	mov	r2, sl
 801f2b4:	4630      	mov	r0, r6
 801f2b6:	47a8      	blx	r5
 801f2b8:	1e05      	subs	r5, r0, #0
 801f2ba:	f73f af12 	bgt.w	801f0e2 <__sfvwrite_r+0x96>
 801f2be:	e778      	b.n	801f1b2 <__sfvwrite_r+0x166>
 801f2c0:	4651      	mov	r1, sl
 801f2c2:	9201      	str	r2, [sp, #4]
 801f2c4:	f7ff f948 	bl	801e558 <memmove>
 801f2c8:	9a01      	ldr	r2, [sp, #4]
 801f2ca:	68a3      	ldr	r3, [r4, #8]
 801f2cc:	1a9b      	subs	r3, r3, r2
 801f2ce:	60a3      	str	r3, [r4, #8]
 801f2d0:	6823      	ldr	r3, [r4, #0]
 801f2d2:	4413      	add	r3, r2
 801f2d4:	6023      	str	r3, [r4, #0]
 801f2d6:	4615      	mov	r5, r2
 801f2d8:	e703      	b.n	801f0e2 <__sfvwrite_r+0x96>
 801f2da:	2001      	movs	r0, #1
 801f2dc:	e70a      	b.n	801f0f4 <__sfvwrite_r+0xa8>
 801f2de:	bf00      	nop
 801f2e0:	7ffffc00 	.word	0x7ffffc00

0801f2e4 <__swsetup_r>:
 801f2e4:	b538      	push	{r3, r4, r5, lr}
 801f2e6:	4b29      	ldr	r3, [pc, #164]	@ (801f38c <__swsetup_r+0xa8>)
 801f2e8:	4605      	mov	r5, r0
 801f2ea:	6818      	ldr	r0, [r3, #0]
 801f2ec:	460c      	mov	r4, r1
 801f2ee:	b118      	cbz	r0, 801f2f8 <__swsetup_r+0x14>
 801f2f0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f2f2:	b90b      	cbnz	r3, 801f2f8 <__swsetup_r+0x14>
 801f2f4:	f7fb fd10 	bl	801ad18 <__sinit>
 801f2f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f2fc:	0719      	lsls	r1, r3, #28
 801f2fe:	d422      	bmi.n	801f346 <__swsetup_r+0x62>
 801f300:	06da      	lsls	r2, r3, #27
 801f302:	d407      	bmi.n	801f314 <__swsetup_r+0x30>
 801f304:	2209      	movs	r2, #9
 801f306:	602a      	str	r2, [r5, #0]
 801f308:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f30c:	81a3      	strh	r3, [r4, #12]
 801f30e:	f04f 30ff 	mov.w	r0, #4294967295
 801f312:	e033      	b.n	801f37c <__swsetup_r+0x98>
 801f314:	0758      	lsls	r0, r3, #29
 801f316:	d512      	bpl.n	801f33e <__swsetup_r+0x5a>
 801f318:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801f31a:	b141      	cbz	r1, 801f32e <__swsetup_r+0x4a>
 801f31c:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801f320:	4299      	cmp	r1, r3
 801f322:	d002      	beq.n	801f32a <__swsetup_r+0x46>
 801f324:	4628      	mov	r0, r5
 801f326:	f7fb fec1 	bl	801b0ac <_free_r>
 801f32a:	2300      	movs	r3, #0
 801f32c:	6323      	str	r3, [r4, #48]	@ 0x30
 801f32e:	89a3      	ldrh	r3, [r4, #12]
 801f330:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 801f334:	81a3      	strh	r3, [r4, #12]
 801f336:	2300      	movs	r3, #0
 801f338:	6063      	str	r3, [r4, #4]
 801f33a:	6923      	ldr	r3, [r4, #16]
 801f33c:	6023      	str	r3, [r4, #0]
 801f33e:	89a3      	ldrh	r3, [r4, #12]
 801f340:	f043 0308 	orr.w	r3, r3, #8
 801f344:	81a3      	strh	r3, [r4, #12]
 801f346:	6923      	ldr	r3, [r4, #16]
 801f348:	b94b      	cbnz	r3, 801f35e <__swsetup_r+0x7a>
 801f34a:	89a3      	ldrh	r3, [r4, #12]
 801f34c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 801f350:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801f354:	d003      	beq.n	801f35e <__swsetup_r+0x7a>
 801f356:	4621      	mov	r1, r4
 801f358:	4628      	mov	r0, r5
 801f35a:	f000 f8c9 	bl	801f4f0 <__smakebuf_r>
 801f35e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f362:	f013 0201 	ands.w	r2, r3, #1
 801f366:	d00a      	beq.n	801f37e <__swsetup_r+0x9a>
 801f368:	2200      	movs	r2, #0
 801f36a:	60a2      	str	r2, [r4, #8]
 801f36c:	6962      	ldr	r2, [r4, #20]
 801f36e:	4252      	negs	r2, r2
 801f370:	61a2      	str	r2, [r4, #24]
 801f372:	6922      	ldr	r2, [r4, #16]
 801f374:	b942      	cbnz	r2, 801f388 <__swsetup_r+0xa4>
 801f376:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 801f37a:	d1c5      	bne.n	801f308 <__swsetup_r+0x24>
 801f37c:	bd38      	pop	{r3, r4, r5, pc}
 801f37e:	0799      	lsls	r1, r3, #30
 801f380:	bf58      	it	pl
 801f382:	6962      	ldrpl	r2, [r4, #20]
 801f384:	60a2      	str	r2, [r4, #8]
 801f386:	e7f4      	b.n	801f372 <__swsetup_r+0x8e>
 801f388:	2000      	movs	r0, #0
 801f38a:	e7f7      	b.n	801f37c <__swsetup_r+0x98>
 801f38c:	20000120 	.word	0x20000120

0801f390 <__fputwc>:
 801f390:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801f394:	4680      	mov	r8, r0
 801f396:	460f      	mov	r7, r1
 801f398:	4614      	mov	r4, r2
 801f39a:	f7fd fc81 	bl	801cca0 <__locale_mb_cur_max>
 801f39e:	2801      	cmp	r0, #1
 801f3a0:	4605      	mov	r5, r0
 801f3a2:	d11b      	bne.n	801f3dc <__fputwc+0x4c>
 801f3a4:	1e7b      	subs	r3, r7, #1
 801f3a6:	2bfe      	cmp	r3, #254	@ 0xfe
 801f3a8:	d818      	bhi.n	801f3dc <__fputwc+0x4c>
 801f3aa:	f88d 7004 	strb.w	r7, [sp, #4]
 801f3ae:	2600      	movs	r6, #0
 801f3b0:	f10d 0904 	add.w	r9, sp, #4
 801f3b4:	42ae      	cmp	r6, r5
 801f3b6:	d021      	beq.n	801f3fc <__fputwc+0x6c>
 801f3b8:	68a3      	ldr	r3, [r4, #8]
 801f3ba:	f816 1009 	ldrb.w	r1, [r6, r9]
 801f3be:	3b01      	subs	r3, #1
 801f3c0:	2b00      	cmp	r3, #0
 801f3c2:	60a3      	str	r3, [r4, #8]
 801f3c4:	da04      	bge.n	801f3d0 <__fputwc+0x40>
 801f3c6:	69a2      	ldr	r2, [r4, #24]
 801f3c8:	4293      	cmp	r3, r2
 801f3ca:	db1b      	blt.n	801f404 <__fputwc+0x74>
 801f3cc:	290a      	cmp	r1, #10
 801f3ce:	d019      	beq.n	801f404 <__fputwc+0x74>
 801f3d0:	6823      	ldr	r3, [r4, #0]
 801f3d2:	1c5a      	adds	r2, r3, #1
 801f3d4:	6022      	str	r2, [r4, #0]
 801f3d6:	7019      	strb	r1, [r3, #0]
 801f3d8:	3601      	adds	r6, #1
 801f3da:	e7eb      	b.n	801f3b4 <__fputwc+0x24>
 801f3dc:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
 801f3e0:	463a      	mov	r2, r7
 801f3e2:	a901      	add	r1, sp, #4
 801f3e4:	4640      	mov	r0, r8
 801f3e6:	f000 f845 	bl	801f474 <_wcrtomb_r>
 801f3ea:	1c43      	adds	r3, r0, #1
 801f3ec:	4605      	mov	r5, r0
 801f3ee:	d1de      	bne.n	801f3ae <__fputwc+0x1e>
 801f3f0:	89a3      	ldrh	r3, [r4, #12]
 801f3f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f3f6:	81a3      	strh	r3, [r4, #12]
 801f3f8:	f04f 37ff 	mov.w	r7, #4294967295
 801f3fc:	4638      	mov	r0, r7
 801f3fe:	b003      	add	sp, #12
 801f400:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f404:	4622      	mov	r2, r4
 801f406:	4640      	mov	r0, r8
 801f408:	f000 f8ae 	bl	801f568 <__swbuf_r>
 801f40c:	3001      	adds	r0, #1
 801f40e:	d1e3      	bne.n	801f3d8 <__fputwc+0x48>
 801f410:	e7f2      	b.n	801f3f8 <__fputwc+0x68>

0801f412 <_fputwc_r>:
 801f412:	6e53      	ldr	r3, [r2, #100]	@ 0x64
 801f414:	07db      	lsls	r3, r3, #31
 801f416:	b570      	push	{r4, r5, r6, lr}
 801f418:	4605      	mov	r5, r0
 801f41a:	460e      	mov	r6, r1
 801f41c:	4614      	mov	r4, r2
 801f41e:	d405      	bmi.n	801f42c <_fputwc_r+0x1a>
 801f420:	8993      	ldrh	r3, [r2, #12]
 801f422:	0598      	lsls	r0, r3, #22
 801f424:	d402      	bmi.n	801f42c <_fputwc_r+0x1a>
 801f426:	6d90      	ldr	r0, [r2, #88]	@ 0x58
 801f428:	f7fb fdca 	bl	801afc0 <__retarget_lock_acquire_recursive>
 801f42c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f430:	0499      	lsls	r1, r3, #18
 801f432:	d406      	bmi.n	801f442 <_fputwc_r+0x30>
 801f434:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f438:	81a3      	strh	r3, [r4, #12]
 801f43a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f43c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f440:	6663      	str	r3, [r4, #100]	@ 0x64
 801f442:	4622      	mov	r2, r4
 801f444:	4628      	mov	r0, r5
 801f446:	4631      	mov	r1, r6
 801f448:	f7ff ffa2 	bl	801f390 <__fputwc>
 801f44c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f44e:	07da      	lsls	r2, r3, #31
 801f450:	4605      	mov	r5, r0
 801f452:	d405      	bmi.n	801f460 <_fputwc_r+0x4e>
 801f454:	89a3      	ldrh	r3, [r4, #12]
 801f456:	059b      	lsls	r3, r3, #22
 801f458:	d402      	bmi.n	801f460 <_fputwc_r+0x4e>
 801f45a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f45c:	f7fb fdb1 	bl	801afc2 <__retarget_lock_release_recursive>
 801f460:	4628      	mov	r0, r5
 801f462:	bd70      	pop	{r4, r5, r6, pc}

0801f464 <abort>:
 801f464:	b508      	push	{r3, lr}
 801f466:	2006      	movs	r0, #6
 801f468:	f000 f8f0 	bl	801f64c <raise>
 801f46c:	2001      	movs	r0, #1
 801f46e:	f7e4 fcbd 	bl	8003dec <_exit>
	...

0801f474 <_wcrtomb_r>:
 801f474:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f476:	4c09      	ldr	r4, [pc, #36]	@ (801f49c <_wcrtomb_r+0x28>)
 801f478:	b085      	sub	sp, #20
 801f47a:	f8d4 70e0 	ldr.w	r7, [r4, #224]	@ 0xe0
 801f47e:	4605      	mov	r5, r0
 801f480:	461e      	mov	r6, r3
 801f482:	b909      	cbnz	r1, 801f488 <_wcrtomb_r+0x14>
 801f484:	460a      	mov	r2, r1
 801f486:	a901      	add	r1, sp, #4
 801f488:	47b8      	blx	r7
 801f48a:	1c43      	adds	r3, r0, #1
 801f48c:	bf01      	itttt	eq
 801f48e:	2300      	moveq	r3, #0
 801f490:	6033      	streq	r3, [r6, #0]
 801f492:	238a      	moveq	r3, #138	@ 0x8a
 801f494:	602b      	streq	r3, [r5, #0]
 801f496:	b005      	add	sp, #20
 801f498:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f49a:	bf00      	nop
 801f49c:	2000065c 	.word	0x2000065c

0801f4a0 <__swhatbuf_r>:
 801f4a0:	b570      	push	{r4, r5, r6, lr}
 801f4a2:	460c      	mov	r4, r1
 801f4a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f4a8:	2900      	cmp	r1, #0
 801f4aa:	b096      	sub	sp, #88	@ 0x58
 801f4ac:	4615      	mov	r5, r2
 801f4ae:	461e      	mov	r6, r3
 801f4b0:	da07      	bge.n	801f4c2 <__swhatbuf_r+0x22>
 801f4b2:	89a1      	ldrh	r1, [r4, #12]
 801f4b4:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
 801f4b8:	d117      	bne.n	801f4ea <__swhatbuf_r+0x4a>
 801f4ba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f4be:	4608      	mov	r0, r1
 801f4c0:	e00f      	b.n	801f4e2 <__swhatbuf_r+0x42>
 801f4c2:	466a      	mov	r2, sp
 801f4c4:	f000 f8ca 	bl	801f65c <_fstat_r>
 801f4c8:	2800      	cmp	r0, #0
 801f4ca:	dbf2      	blt.n	801f4b2 <__swhatbuf_r+0x12>
 801f4cc:	9901      	ldr	r1, [sp, #4]
 801f4ce:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 801f4d2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 801f4d6:	4259      	negs	r1, r3
 801f4d8:	4159      	adcs	r1, r3
 801f4da:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 801f4de:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801f4e2:	6031      	str	r1, [r6, #0]
 801f4e4:	602b      	str	r3, [r5, #0]
 801f4e6:	b016      	add	sp, #88	@ 0x58
 801f4e8:	bd70      	pop	{r4, r5, r6, pc}
 801f4ea:	2100      	movs	r1, #0
 801f4ec:	2340      	movs	r3, #64	@ 0x40
 801f4ee:	e7e6      	b.n	801f4be <__swhatbuf_r+0x1e>

0801f4f0 <__smakebuf_r>:
 801f4f0:	898b      	ldrh	r3, [r1, #12]
 801f4f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801f4f4:	079d      	lsls	r5, r3, #30
 801f4f6:	4606      	mov	r6, r0
 801f4f8:	460c      	mov	r4, r1
 801f4fa:	d507      	bpl.n	801f50c <__smakebuf_r+0x1c>
 801f4fc:	f104 0343 	add.w	r3, r4, #67	@ 0x43
 801f500:	6023      	str	r3, [r4, #0]
 801f502:	6123      	str	r3, [r4, #16]
 801f504:	2301      	movs	r3, #1
 801f506:	6163      	str	r3, [r4, #20]
 801f508:	b003      	add	sp, #12
 801f50a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f50c:	ab01      	add	r3, sp, #4
 801f50e:	466a      	mov	r2, sp
 801f510:	f7ff ffc6 	bl	801f4a0 <__swhatbuf_r>
 801f514:	9f00      	ldr	r7, [sp, #0]
 801f516:	4605      	mov	r5, r0
 801f518:	4639      	mov	r1, r7
 801f51a:	4630      	mov	r0, r6
 801f51c:	f7fb fe86 	bl	801b22c <_malloc_r>
 801f520:	b948      	cbnz	r0, 801f536 <__smakebuf_r+0x46>
 801f522:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f526:	059a      	lsls	r2, r3, #22
 801f528:	d4ee      	bmi.n	801f508 <__smakebuf_r+0x18>
 801f52a:	f023 0303 	bic.w	r3, r3, #3
 801f52e:	f043 0302 	orr.w	r3, r3, #2
 801f532:	81a3      	strh	r3, [r4, #12]
 801f534:	e7e2      	b.n	801f4fc <__smakebuf_r+0xc>
 801f536:	89a3      	ldrh	r3, [r4, #12]
 801f538:	6020      	str	r0, [r4, #0]
 801f53a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801f53e:	81a3      	strh	r3, [r4, #12]
 801f540:	9b01      	ldr	r3, [sp, #4]
 801f542:	e9c4 0704 	strd	r0, r7, [r4, #16]
 801f546:	b15b      	cbz	r3, 801f560 <__smakebuf_r+0x70>
 801f548:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f54c:	4630      	mov	r0, r6
 801f54e:	f000 f897 	bl	801f680 <_isatty_r>
 801f552:	b128      	cbz	r0, 801f560 <__smakebuf_r+0x70>
 801f554:	89a3      	ldrh	r3, [r4, #12]
 801f556:	f023 0303 	bic.w	r3, r3, #3
 801f55a:	f043 0301 	orr.w	r3, r3, #1
 801f55e:	81a3      	strh	r3, [r4, #12]
 801f560:	89a3      	ldrh	r3, [r4, #12]
 801f562:	431d      	orrs	r5, r3
 801f564:	81a5      	strh	r5, [r4, #12]
 801f566:	e7cf      	b.n	801f508 <__smakebuf_r+0x18>

0801f568 <__swbuf_r>:
 801f568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f56a:	460e      	mov	r6, r1
 801f56c:	4614      	mov	r4, r2
 801f56e:	4605      	mov	r5, r0
 801f570:	b118      	cbz	r0, 801f57a <__swbuf_r+0x12>
 801f572:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f574:	b90b      	cbnz	r3, 801f57a <__swbuf_r+0x12>
 801f576:	f7fb fbcf 	bl	801ad18 <__sinit>
 801f57a:	69a3      	ldr	r3, [r4, #24]
 801f57c:	60a3      	str	r3, [r4, #8]
 801f57e:	89a3      	ldrh	r3, [r4, #12]
 801f580:	0719      	lsls	r1, r3, #28
 801f582:	d501      	bpl.n	801f588 <__swbuf_r+0x20>
 801f584:	6923      	ldr	r3, [r4, #16]
 801f586:	b943      	cbnz	r3, 801f59a <__swbuf_r+0x32>
 801f588:	4621      	mov	r1, r4
 801f58a:	4628      	mov	r0, r5
 801f58c:	f7ff feaa 	bl	801f2e4 <__swsetup_r>
 801f590:	b118      	cbz	r0, 801f59a <__swbuf_r+0x32>
 801f592:	f04f 37ff 	mov.w	r7, #4294967295
 801f596:	4638      	mov	r0, r7
 801f598:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f59a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f59e:	b2f6      	uxtb	r6, r6
 801f5a0:	049a      	lsls	r2, r3, #18
 801f5a2:	4637      	mov	r7, r6
 801f5a4:	d406      	bmi.n	801f5b4 <__swbuf_r+0x4c>
 801f5a6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 801f5aa:	81a3      	strh	r3, [r4, #12]
 801f5ac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f5ae:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 801f5b2:	6663      	str	r3, [r4, #100]	@ 0x64
 801f5b4:	6823      	ldr	r3, [r4, #0]
 801f5b6:	6922      	ldr	r2, [r4, #16]
 801f5b8:	1a98      	subs	r0, r3, r2
 801f5ba:	6963      	ldr	r3, [r4, #20]
 801f5bc:	4283      	cmp	r3, r0
 801f5be:	dc05      	bgt.n	801f5cc <__swbuf_r+0x64>
 801f5c0:	4621      	mov	r1, r4
 801f5c2:	4628      	mov	r0, r5
 801f5c4:	f7fd fb34 	bl	801cc30 <_fflush_r>
 801f5c8:	2800      	cmp	r0, #0
 801f5ca:	d1e2      	bne.n	801f592 <__swbuf_r+0x2a>
 801f5cc:	68a3      	ldr	r3, [r4, #8]
 801f5ce:	3b01      	subs	r3, #1
 801f5d0:	60a3      	str	r3, [r4, #8]
 801f5d2:	6823      	ldr	r3, [r4, #0]
 801f5d4:	1c5a      	adds	r2, r3, #1
 801f5d6:	6022      	str	r2, [r4, #0]
 801f5d8:	701e      	strb	r6, [r3, #0]
 801f5da:	6962      	ldr	r2, [r4, #20]
 801f5dc:	1c43      	adds	r3, r0, #1
 801f5de:	429a      	cmp	r2, r3
 801f5e0:	d004      	beq.n	801f5ec <__swbuf_r+0x84>
 801f5e2:	89a3      	ldrh	r3, [r4, #12]
 801f5e4:	07db      	lsls	r3, r3, #31
 801f5e6:	d5d6      	bpl.n	801f596 <__swbuf_r+0x2e>
 801f5e8:	2e0a      	cmp	r6, #10
 801f5ea:	d1d4      	bne.n	801f596 <__swbuf_r+0x2e>
 801f5ec:	4621      	mov	r1, r4
 801f5ee:	4628      	mov	r0, r5
 801f5f0:	f7fd fb1e 	bl	801cc30 <_fflush_r>
 801f5f4:	2800      	cmp	r0, #0
 801f5f6:	d0ce      	beq.n	801f596 <__swbuf_r+0x2e>
 801f5f8:	e7cb      	b.n	801f592 <__swbuf_r+0x2a>

0801f5fa <_raise_r>:
 801f5fa:	291f      	cmp	r1, #31
 801f5fc:	b538      	push	{r3, r4, r5, lr}
 801f5fe:	4605      	mov	r5, r0
 801f600:	460c      	mov	r4, r1
 801f602:	d904      	bls.n	801f60e <_raise_r+0x14>
 801f604:	2316      	movs	r3, #22
 801f606:	6003      	str	r3, [r0, #0]
 801f608:	f04f 30ff 	mov.w	r0, #4294967295
 801f60c:	bd38      	pop	{r3, r4, r5, pc}
 801f60e:	f8d0 2118 	ldr.w	r2, [r0, #280]	@ 0x118
 801f612:	b112      	cbz	r2, 801f61a <_raise_r+0x20>
 801f614:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801f618:	b94b      	cbnz	r3, 801f62e <_raise_r+0x34>
 801f61a:	4628      	mov	r0, r5
 801f61c:	f000 f852 	bl	801f6c4 <_getpid_r>
 801f620:	4622      	mov	r2, r4
 801f622:	4601      	mov	r1, r0
 801f624:	4628      	mov	r0, r5
 801f626:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f62a:	f000 b839 	b.w	801f6a0 <_kill_r>
 801f62e:	2b01      	cmp	r3, #1
 801f630:	d00a      	beq.n	801f648 <_raise_r+0x4e>
 801f632:	1c59      	adds	r1, r3, #1
 801f634:	d103      	bne.n	801f63e <_raise_r+0x44>
 801f636:	2316      	movs	r3, #22
 801f638:	6003      	str	r3, [r0, #0]
 801f63a:	2001      	movs	r0, #1
 801f63c:	e7e6      	b.n	801f60c <_raise_r+0x12>
 801f63e:	2100      	movs	r1, #0
 801f640:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 801f644:	4620      	mov	r0, r4
 801f646:	4798      	blx	r3
 801f648:	2000      	movs	r0, #0
 801f64a:	e7df      	b.n	801f60c <_raise_r+0x12>

0801f64c <raise>:
 801f64c:	4b02      	ldr	r3, [pc, #8]	@ (801f658 <raise+0xc>)
 801f64e:	4601      	mov	r1, r0
 801f650:	6818      	ldr	r0, [r3, #0]
 801f652:	f7ff bfd2 	b.w	801f5fa <_raise_r>
 801f656:	bf00      	nop
 801f658:	20000120 	.word	0x20000120

0801f65c <_fstat_r>:
 801f65c:	b538      	push	{r3, r4, r5, lr}
 801f65e:	4d07      	ldr	r5, [pc, #28]	@ (801f67c <_fstat_r+0x20>)
 801f660:	2300      	movs	r3, #0
 801f662:	4604      	mov	r4, r0
 801f664:	4608      	mov	r0, r1
 801f666:	4611      	mov	r1, r2
 801f668:	602b      	str	r3, [r5, #0]
 801f66a:	f7e4 fc0f 	bl	8003e8c <_fstat>
 801f66e:	1c43      	adds	r3, r0, #1
 801f670:	d102      	bne.n	801f678 <_fstat_r+0x1c>
 801f672:	682b      	ldr	r3, [r5, #0]
 801f674:	b103      	cbz	r3, 801f678 <_fstat_r+0x1c>
 801f676:	6023      	str	r3, [r4, #0]
 801f678:	bd38      	pop	{r3, r4, r5, pc}
 801f67a:	bf00      	nop
 801f67c:	2000d0b4 	.word	0x2000d0b4

0801f680 <_isatty_r>:
 801f680:	b538      	push	{r3, r4, r5, lr}
 801f682:	4d06      	ldr	r5, [pc, #24]	@ (801f69c <_isatty_r+0x1c>)
 801f684:	2300      	movs	r3, #0
 801f686:	4604      	mov	r4, r0
 801f688:	4608      	mov	r0, r1
 801f68a:	602b      	str	r3, [r5, #0]
 801f68c:	f7e4 fc0e 	bl	8003eac <_isatty>
 801f690:	1c43      	adds	r3, r0, #1
 801f692:	d102      	bne.n	801f69a <_isatty_r+0x1a>
 801f694:	682b      	ldr	r3, [r5, #0]
 801f696:	b103      	cbz	r3, 801f69a <_isatty_r+0x1a>
 801f698:	6023      	str	r3, [r4, #0]
 801f69a:	bd38      	pop	{r3, r4, r5, pc}
 801f69c:	2000d0b4 	.word	0x2000d0b4

0801f6a0 <_kill_r>:
 801f6a0:	b538      	push	{r3, r4, r5, lr}
 801f6a2:	4d07      	ldr	r5, [pc, #28]	@ (801f6c0 <_kill_r+0x20>)
 801f6a4:	2300      	movs	r3, #0
 801f6a6:	4604      	mov	r4, r0
 801f6a8:	4608      	mov	r0, r1
 801f6aa:	4611      	mov	r1, r2
 801f6ac:	602b      	str	r3, [r5, #0]
 801f6ae:	f7e4 fb8d 	bl	8003dcc <_kill>
 801f6b2:	1c43      	adds	r3, r0, #1
 801f6b4:	d102      	bne.n	801f6bc <_kill_r+0x1c>
 801f6b6:	682b      	ldr	r3, [r5, #0]
 801f6b8:	b103      	cbz	r3, 801f6bc <_kill_r+0x1c>
 801f6ba:	6023      	str	r3, [r4, #0]
 801f6bc:	bd38      	pop	{r3, r4, r5, pc}
 801f6be:	bf00      	nop
 801f6c0:	2000d0b4 	.word	0x2000d0b4

0801f6c4 <_getpid_r>:
 801f6c4:	f7e4 bb7a 	b.w	8003dbc <_getpid>

0801f6c8 <atan2>:
 801f6c8:	f000 bd52 	b.w	8020170 <__ieee754_atan2>

0801f6cc <sqrt>:
 801f6cc:	b538      	push	{r3, r4, r5, lr}
 801f6ce:	ed2d 8b02 	vpush	{d8}
 801f6d2:	ec55 4b10 	vmov	r4, r5, d0
 801f6d6:	f000 fa6f 	bl	801fbb8 <__ieee754_sqrt>
 801f6da:	4622      	mov	r2, r4
 801f6dc:	462b      	mov	r3, r5
 801f6de:	4620      	mov	r0, r4
 801f6e0:	4629      	mov	r1, r5
 801f6e2:	eeb0 8a40 	vmov.f32	s16, s0
 801f6e6:	eef0 8a60 	vmov.f32	s17, s1
 801f6ea:	f7e1 fa1f 	bl	8000b2c <__aeabi_dcmpun>
 801f6ee:	b990      	cbnz	r0, 801f716 <sqrt+0x4a>
 801f6f0:	2200      	movs	r2, #0
 801f6f2:	2300      	movs	r3, #0
 801f6f4:	4620      	mov	r0, r4
 801f6f6:	4629      	mov	r1, r5
 801f6f8:	f7e1 f9f0 	bl	8000adc <__aeabi_dcmplt>
 801f6fc:	b158      	cbz	r0, 801f716 <sqrt+0x4a>
 801f6fe:	f7fb fc33 	bl	801af68 <__errno>
 801f702:	2321      	movs	r3, #33	@ 0x21
 801f704:	6003      	str	r3, [r0, #0]
 801f706:	2200      	movs	r2, #0
 801f708:	2300      	movs	r3, #0
 801f70a:	4610      	mov	r0, r2
 801f70c:	4619      	mov	r1, r3
 801f70e:	f7e1 f89d 	bl	800084c <__aeabi_ddiv>
 801f712:	ec41 0b18 	vmov	d8, r0, r1
 801f716:	eeb0 0a48 	vmov.f32	s0, s16
 801f71a:	eef0 0a68 	vmov.f32	s1, s17
 801f71e:	ecbd 8b02 	vpop	{d8}
 801f722:	bd38      	pop	{r3, r4, r5, pc}
 801f724:	0000      	movs	r0, r0
	...

0801f728 <atan>:
 801f728:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f72c:	ec55 4b10 	vmov	r4, r5, d0
 801f730:	4bbf      	ldr	r3, [pc, #764]	@ (801fa30 <atan+0x308>)
 801f732:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 801f736:	429e      	cmp	r6, r3
 801f738:	46ab      	mov	fp, r5
 801f73a:	d918      	bls.n	801f76e <atan+0x46>
 801f73c:	4bbd      	ldr	r3, [pc, #756]	@ (801fa34 <atan+0x30c>)
 801f73e:	429e      	cmp	r6, r3
 801f740:	d801      	bhi.n	801f746 <atan+0x1e>
 801f742:	d109      	bne.n	801f758 <atan+0x30>
 801f744:	b144      	cbz	r4, 801f758 <atan+0x30>
 801f746:	4622      	mov	r2, r4
 801f748:	462b      	mov	r3, r5
 801f74a:	4620      	mov	r0, r4
 801f74c:	4629      	mov	r1, r5
 801f74e:	f7e0 fd9d 	bl	800028c <__adddf3>
 801f752:	4604      	mov	r4, r0
 801f754:	460d      	mov	r5, r1
 801f756:	e006      	b.n	801f766 <atan+0x3e>
 801f758:	f1bb 0f00 	cmp.w	fp, #0
 801f75c:	f340 812b 	ble.w	801f9b6 <atan+0x28e>
 801f760:	a597      	add	r5, pc, #604	@ (adr r5, 801f9c0 <atan+0x298>)
 801f762:	e9d5 4500 	ldrd	r4, r5, [r5]
 801f766:	ec45 4b10 	vmov	d0, r4, r5
 801f76a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f76e:	4bb2      	ldr	r3, [pc, #712]	@ (801fa38 <atan+0x310>)
 801f770:	429e      	cmp	r6, r3
 801f772:	d813      	bhi.n	801f79c <atan+0x74>
 801f774:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 801f778:	429e      	cmp	r6, r3
 801f77a:	d80c      	bhi.n	801f796 <atan+0x6e>
 801f77c:	a392      	add	r3, pc, #584	@ (adr r3, 801f9c8 <atan+0x2a0>)
 801f77e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f782:	4620      	mov	r0, r4
 801f784:	4629      	mov	r1, r5
 801f786:	f7e0 fd81 	bl	800028c <__adddf3>
 801f78a:	4bac      	ldr	r3, [pc, #688]	@ (801fa3c <atan+0x314>)
 801f78c:	2200      	movs	r2, #0
 801f78e:	f7e1 f9c3 	bl	8000b18 <__aeabi_dcmpgt>
 801f792:	2800      	cmp	r0, #0
 801f794:	d1e7      	bne.n	801f766 <atan+0x3e>
 801f796:	f04f 3aff 	mov.w	sl, #4294967295
 801f79a:	e029      	b.n	801f7f0 <atan+0xc8>
 801f79c:	f000 f9b0 	bl	801fb00 <fabs>
 801f7a0:	4ba7      	ldr	r3, [pc, #668]	@ (801fa40 <atan+0x318>)
 801f7a2:	429e      	cmp	r6, r3
 801f7a4:	ec55 4b10 	vmov	r4, r5, d0
 801f7a8:	f200 80bc 	bhi.w	801f924 <atan+0x1fc>
 801f7ac:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 801f7b0:	429e      	cmp	r6, r3
 801f7b2:	f200 809e 	bhi.w	801f8f2 <atan+0x1ca>
 801f7b6:	4622      	mov	r2, r4
 801f7b8:	462b      	mov	r3, r5
 801f7ba:	4620      	mov	r0, r4
 801f7bc:	4629      	mov	r1, r5
 801f7be:	f7e0 fd65 	bl	800028c <__adddf3>
 801f7c2:	4b9e      	ldr	r3, [pc, #632]	@ (801fa3c <atan+0x314>)
 801f7c4:	2200      	movs	r2, #0
 801f7c6:	f7e0 fd5f 	bl	8000288 <__aeabi_dsub>
 801f7ca:	2200      	movs	r2, #0
 801f7cc:	4606      	mov	r6, r0
 801f7ce:	460f      	mov	r7, r1
 801f7d0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 801f7d4:	4620      	mov	r0, r4
 801f7d6:	4629      	mov	r1, r5
 801f7d8:	f7e0 fd58 	bl	800028c <__adddf3>
 801f7dc:	4602      	mov	r2, r0
 801f7de:	460b      	mov	r3, r1
 801f7e0:	4630      	mov	r0, r6
 801f7e2:	4639      	mov	r1, r7
 801f7e4:	f7e1 f832 	bl	800084c <__aeabi_ddiv>
 801f7e8:	f04f 0a00 	mov.w	sl, #0
 801f7ec:	4604      	mov	r4, r0
 801f7ee:	460d      	mov	r5, r1
 801f7f0:	4622      	mov	r2, r4
 801f7f2:	462b      	mov	r3, r5
 801f7f4:	4620      	mov	r0, r4
 801f7f6:	4629      	mov	r1, r5
 801f7f8:	f7e0 fefe 	bl	80005f8 <__aeabi_dmul>
 801f7fc:	4602      	mov	r2, r0
 801f7fe:	460b      	mov	r3, r1
 801f800:	4680      	mov	r8, r0
 801f802:	4689      	mov	r9, r1
 801f804:	f7e0 fef8 	bl	80005f8 <__aeabi_dmul>
 801f808:	a371      	add	r3, pc, #452	@ (adr r3, 801f9d0 <atan+0x2a8>)
 801f80a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f80e:	4606      	mov	r6, r0
 801f810:	460f      	mov	r7, r1
 801f812:	f7e0 fef1 	bl	80005f8 <__aeabi_dmul>
 801f816:	a370      	add	r3, pc, #448	@ (adr r3, 801f9d8 <atan+0x2b0>)
 801f818:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f81c:	f7e0 fd36 	bl	800028c <__adddf3>
 801f820:	4632      	mov	r2, r6
 801f822:	463b      	mov	r3, r7
 801f824:	f7e0 fee8 	bl	80005f8 <__aeabi_dmul>
 801f828:	a36d      	add	r3, pc, #436	@ (adr r3, 801f9e0 <atan+0x2b8>)
 801f82a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f82e:	f7e0 fd2d 	bl	800028c <__adddf3>
 801f832:	4632      	mov	r2, r6
 801f834:	463b      	mov	r3, r7
 801f836:	f7e0 fedf 	bl	80005f8 <__aeabi_dmul>
 801f83a:	a36b      	add	r3, pc, #428	@ (adr r3, 801f9e8 <atan+0x2c0>)
 801f83c:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f840:	f7e0 fd24 	bl	800028c <__adddf3>
 801f844:	4632      	mov	r2, r6
 801f846:	463b      	mov	r3, r7
 801f848:	f7e0 fed6 	bl	80005f8 <__aeabi_dmul>
 801f84c:	a368      	add	r3, pc, #416	@ (adr r3, 801f9f0 <atan+0x2c8>)
 801f84e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f852:	f7e0 fd1b 	bl	800028c <__adddf3>
 801f856:	4632      	mov	r2, r6
 801f858:	463b      	mov	r3, r7
 801f85a:	f7e0 fecd 	bl	80005f8 <__aeabi_dmul>
 801f85e:	a366      	add	r3, pc, #408	@ (adr r3, 801f9f8 <atan+0x2d0>)
 801f860:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f864:	f7e0 fd12 	bl	800028c <__adddf3>
 801f868:	4642      	mov	r2, r8
 801f86a:	464b      	mov	r3, r9
 801f86c:	f7e0 fec4 	bl	80005f8 <__aeabi_dmul>
 801f870:	a363      	add	r3, pc, #396	@ (adr r3, 801fa00 <atan+0x2d8>)
 801f872:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f876:	4680      	mov	r8, r0
 801f878:	4689      	mov	r9, r1
 801f87a:	4630      	mov	r0, r6
 801f87c:	4639      	mov	r1, r7
 801f87e:	f7e0 febb 	bl	80005f8 <__aeabi_dmul>
 801f882:	a361      	add	r3, pc, #388	@ (adr r3, 801fa08 <atan+0x2e0>)
 801f884:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f888:	f7e0 fcfe 	bl	8000288 <__aeabi_dsub>
 801f88c:	4632      	mov	r2, r6
 801f88e:	463b      	mov	r3, r7
 801f890:	f7e0 feb2 	bl	80005f8 <__aeabi_dmul>
 801f894:	a35e      	add	r3, pc, #376	@ (adr r3, 801fa10 <atan+0x2e8>)
 801f896:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f89a:	f7e0 fcf5 	bl	8000288 <__aeabi_dsub>
 801f89e:	4632      	mov	r2, r6
 801f8a0:	463b      	mov	r3, r7
 801f8a2:	f7e0 fea9 	bl	80005f8 <__aeabi_dmul>
 801f8a6:	a35c      	add	r3, pc, #368	@ (adr r3, 801fa18 <atan+0x2f0>)
 801f8a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f8ac:	f7e0 fcec 	bl	8000288 <__aeabi_dsub>
 801f8b0:	4632      	mov	r2, r6
 801f8b2:	463b      	mov	r3, r7
 801f8b4:	f7e0 fea0 	bl	80005f8 <__aeabi_dmul>
 801f8b8:	a359      	add	r3, pc, #356	@ (adr r3, 801fa20 <atan+0x2f8>)
 801f8ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f8be:	f7e0 fce3 	bl	8000288 <__aeabi_dsub>
 801f8c2:	4632      	mov	r2, r6
 801f8c4:	463b      	mov	r3, r7
 801f8c6:	f7e0 fe97 	bl	80005f8 <__aeabi_dmul>
 801f8ca:	4602      	mov	r2, r0
 801f8cc:	460b      	mov	r3, r1
 801f8ce:	4640      	mov	r0, r8
 801f8d0:	4649      	mov	r1, r9
 801f8d2:	f7e0 fcdb 	bl	800028c <__adddf3>
 801f8d6:	4622      	mov	r2, r4
 801f8d8:	462b      	mov	r3, r5
 801f8da:	f7e0 fe8d 	bl	80005f8 <__aeabi_dmul>
 801f8de:	f1ba 3fff 	cmp.w	sl, #4294967295
 801f8e2:	4602      	mov	r2, r0
 801f8e4:	460b      	mov	r3, r1
 801f8e6:	d148      	bne.n	801f97a <atan+0x252>
 801f8e8:	4620      	mov	r0, r4
 801f8ea:	4629      	mov	r1, r5
 801f8ec:	f7e0 fccc 	bl	8000288 <__aeabi_dsub>
 801f8f0:	e72f      	b.n	801f752 <atan+0x2a>
 801f8f2:	4b52      	ldr	r3, [pc, #328]	@ (801fa3c <atan+0x314>)
 801f8f4:	2200      	movs	r2, #0
 801f8f6:	4620      	mov	r0, r4
 801f8f8:	4629      	mov	r1, r5
 801f8fa:	f7e0 fcc5 	bl	8000288 <__aeabi_dsub>
 801f8fe:	4b4f      	ldr	r3, [pc, #316]	@ (801fa3c <atan+0x314>)
 801f900:	4606      	mov	r6, r0
 801f902:	460f      	mov	r7, r1
 801f904:	2200      	movs	r2, #0
 801f906:	4620      	mov	r0, r4
 801f908:	4629      	mov	r1, r5
 801f90a:	f7e0 fcbf 	bl	800028c <__adddf3>
 801f90e:	4602      	mov	r2, r0
 801f910:	460b      	mov	r3, r1
 801f912:	4630      	mov	r0, r6
 801f914:	4639      	mov	r1, r7
 801f916:	f7e0 ff99 	bl	800084c <__aeabi_ddiv>
 801f91a:	f04f 0a01 	mov.w	sl, #1
 801f91e:	4604      	mov	r4, r0
 801f920:	460d      	mov	r5, r1
 801f922:	e765      	b.n	801f7f0 <atan+0xc8>
 801f924:	4b47      	ldr	r3, [pc, #284]	@ (801fa44 <atan+0x31c>)
 801f926:	429e      	cmp	r6, r3
 801f928:	d21c      	bcs.n	801f964 <atan+0x23c>
 801f92a:	4b47      	ldr	r3, [pc, #284]	@ (801fa48 <atan+0x320>)
 801f92c:	2200      	movs	r2, #0
 801f92e:	4620      	mov	r0, r4
 801f930:	4629      	mov	r1, r5
 801f932:	f7e0 fca9 	bl	8000288 <__aeabi_dsub>
 801f936:	4b44      	ldr	r3, [pc, #272]	@ (801fa48 <atan+0x320>)
 801f938:	4606      	mov	r6, r0
 801f93a:	460f      	mov	r7, r1
 801f93c:	2200      	movs	r2, #0
 801f93e:	4620      	mov	r0, r4
 801f940:	4629      	mov	r1, r5
 801f942:	f7e0 fe59 	bl	80005f8 <__aeabi_dmul>
 801f946:	4b3d      	ldr	r3, [pc, #244]	@ (801fa3c <atan+0x314>)
 801f948:	2200      	movs	r2, #0
 801f94a:	f7e0 fc9f 	bl	800028c <__adddf3>
 801f94e:	4602      	mov	r2, r0
 801f950:	460b      	mov	r3, r1
 801f952:	4630      	mov	r0, r6
 801f954:	4639      	mov	r1, r7
 801f956:	f7e0 ff79 	bl	800084c <__aeabi_ddiv>
 801f95a:	f04f 0a02 	mov.w	sl, #2
 801f95e:	4604      	mov	r4, r0
 801f960:	460d      	mov	r5, r1
 801f962:	e745      	b.n	801f7f0 <atan+0xc8>
 801f964:	4622      	mov	r2, r4
 801f966:	462b      	mov	r3, r5
 801f968:	4938      	ldr	r1, [pc, #224]	@ (801fa4c <atan+0x324>)
 801f96a:	2000      	movs	r0, #0
 801f96c:	f7e0 ff6e 	bl	800084c <__aeabi_ddiv>
 801f970:	f04f 0a03 	mov.w	sl, #3
 801f974:	4604      	mov	r4, r0
 801f976:	460d      	mov	r5, r1
 801f978:	e73a      	b.n	801f7f0 <atan+0xc8>
 801f97a:	4b35      	ldr	r3, [pc, #212]	@ (801fa50 <atan+0x328>)
 801f97c:	4e35      	ldr	r6, [pc, #212]	@ (801fa54 <atan+0x32c>)
 801f97e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 801f982:	e9d3 2300 	ldrd	r2, r3, [r3]
 801f986:	f7e0 fc7f 	bl	8000288 <__aeabi_dsub>
 801f98a:	4622      	mov	r2, r4
 801f98c:	462b      	mov	r3, r5
 801f98e:	f7e0 fc7b 	bl	8000288 <__aeabi_dsub>
 801f992:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 801f996:	4602      	mov	r2, r0
 801f998:	460b      	mov	r3, r1
 801f99a:	e9d6 0100 	ldrd	r0, r1, [r6]
 801f99e:	f7e0 fc73 	bl	8000288 <__aeabi_dsub>
 801f9a2:	f1bb 0f00 	cmp.w	fp, #0
 801f9a6:	4604      	mov	r4, r0
 801f9a8:	460d      	mov	r5, r1
 801f9aa:	f6bf aedc 	bge.w	801f766 <atan+0x3e>
 801f9ae:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 801f9b2:	461d      	mov	r5, r3
 801f9b4:	e6d7      	b.n	801f766 <atan+0x3e>
 801f9b6:	a51c      	add	r5, pc, #112	@ (adr r5, 801fa28 <atan+0x300>)
 801f9b8:	e9d5 4500 	ldrd	r4, r5, [r5]
 801f9bc:	e6d3      	b.n	801f766 <atan+0x3e>
 801f9be:	bf00      	nop
 801f9c0:	54442d18 	.word	0x54442d18
 801f9c4:	3ff921fb 	.word	0x3ff921fb
 801f9c8:	8800759c 	.word	0x8800759c
 801f9cc:	7e37e43c 	.word	0x7e37e43c
 801f9d0:	e322da11 	.word	0xe322da11
 801f9d4:	3f90ad3a 	.word	0x3f90ad3a
 801f9d8:	24760deb 	.word	0x24760deb
 801f9dc:	3fa97b4b 	.word	0x3fa97b4b
 801f9e0:	a0d03d51 	.word	0xa0d03d51
 801f9e4:	3fb10d66 	.word	0x3fb10d66
 801f9e8:	c54c206e 	.word	0xc54c206e
 801f9ec:	3fb745cd 	.word	0x3fb745cd
 801f9f0:	920083ff 	.word	0x920083ff
 801f9f4:	3fc24924 	.word	0x3fc24924
 801f9f8:	5555550d 	.word	0x5555550d
 801f9fc:	3fd55555 	.word	0x3fd55555
 801fa00:	2c6a6c2f 	.word	0x2c6a6c2f
 801fa04:	bfa2b444 	.word	0xbfa2b444
 801fa08:	52defd9a 	.word	0x52defd9a
 801fa0c:	3fadde2d 	.word	0x3fadde2d
 801fa10:	af749a6d 	.word	0xaf749a6d
 801fa14:	3fb3b0f2 	.word	0x3fb3b0f2
 801fa18:	fe231671 	.word	0xfe231671
 801fa1c:	3fbc71c6 	.word	0x3fbc71c6
 801fa20:	9998ebc4 	.word	0x9998ebc4
 801fa24:	3fc99999 	.word	0x3fc99999
 801fa28:	54442d18 	.word	0x54442d18
 801fa2c:	bff921fb 	.word	0xbff921fb
 801fa30:	440fffff 	.word	0x440fffff
 801fa34:	7ff00000 	.word	0x7ff00000
 801fa38:	3fdbffff 	.word	0x3fdbffff
 801fa3c:	3ff00000 	.word	0x3ff00000
 801fa40:	3ff2ffff 	.word	0x3ff2ffff
 801fa44:	40038000 	.word	0x40038000
 801fa48:	3ff80000 	.word	0x3ff80000
 801fa4c:	bff00000 	.word	0xbff00000
 801fa50:	080219c0 	.word	0x080219c0
 801fa54:	080219e0 	.word	0x080219e0

0801fa58 <cos>:
 801fa58:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fa5a:	ec53 2b10 	vmov	r2, r3, d0
 801fa5e:	4826      	ldr	r0, [pc, #152]	@ (801faf8 <cos+0xa0>)
 801fa60:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 801fa64:	4281      	cmp	r1, r0
 801fa66:	d806      	bhi.n	801fa76 <cos+0x1e>
 801fa68:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 801faf0 <cos+0x98>
 801fa6c:	b005      	add	sp, #20
 801fa6e:	f85d eb04 	ldr.w	lr, [sp], #4
 801fa72:	f000 b9f9 	b.w	801fe68 <__kernel_cos>
 801fa76:	4821      	ldr	r0, [pc, #132]	@ (801fafc <cos+0xa4>)
 801fa78:	4281      	cmp	r1, r0
 801fa7a:	d908      	bls.n	801fa8e <cos+0x36>
 801fa7c:	4610      	mov	r0, r2
 801fa7e:	4619      	mov	r1, r3
 801fa80:	f7e0 fc02 	bl	8000288 <__aeabi_dsub>
 801fa84:	ec41 0b10 	vmov	d0, r0, r1
 801fa88:	b005      	add	sp, #20
 801fa8a:	f85d fb04 	ldr.w	pc, [sp], #4
 801fa8e:	4668      	mov	r0, sp
 801fa90:	f000 fc36 	bl	8020300 <__ieee754_rem_pio2>
 801fa94:	f000 0003 	and.w	r0, r0, #3
 801fa98:	2801      	cmp	r0, #1
 801fa9a:	d00b      	beq.n	801fab4 <cos+0x5c>
 801fa9c:	2802      	cmp	r0, #2
 801fa9e:	d015      	beq.n	801facc <cos+0x74>
 801faa0:	b9d8      	cbnz	r0, 801fada <cos+0x82>
 801faa2:	ed9d 1b02 	vldr	d1, [sp, #8]
 801faa6:	ed9d 0b00 	vldr	d0, [sp]
 801faaa:	f000 f9dd 	bl	801fe68 <__kernel_cos>
 801faae:	ec51 0b10 	vmov	r0, r1, d0
 801fab2:	e7e7      	b.n	801fa84 <cos+0x2c>
 801fab4:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fab8:	ed9d 0b00 	vldr	d0, [sp]
 801fabc:	f000 fa9c 	bl	801fff8 <__kernel_sin>
 801fac0:	ec53 2b10 	vmov	r2, r3, d0
 801fac4:	4610      	mov	r0, r2
 801fac6:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 801faca:	e7db      	b.n	801fa84 <cos+0x2c>
 801facc:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fad0:	ed9d 0b00 	vldr	d0, [sp]
 801fad4:	f000 f9c8 	bl	801fe68 <__kernel_cos>
 801fad8:	e7f2      	b.n	801fac0 <cos+0x68>
 801fada:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fade:	ed9d 0b00 	vldr	d0, [sp]
 801fae2:	2001      	movs	r0, #1
 801fae4:	f000 fa88 	bl	801fff8 <__kernel_sin>
 801fae8:	e7e1      	b.n	801faae <cos+0x56>
 801faea:	bf00      	nop
 801faec:	f3af 8000 	nop.w
	...
 801faf8:	3fe921fb 	.word	0x3fe921fb
 801fafc:	7fefffff 	.word	0x7fefffff

0801fb00 <fabs>:
 801fb00:	ec51 0b10 	vmov	r0, r1, d0
 801fb04:	4602      	mov	r2, r0
 801fb06:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 801fb0a:	ec43 2b10 	vmov	d0, r2, r3
 801fb0e:	4770      	bx	lr

0801fb10 <sin>:
 801fb10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801fb12:	ec53 2b10 	vmov	r2, r3, d0
 801fb16:	4826      	ldr	r0, [pc, #152]	@ (801fbb0 <sin+0xa0>)
 801fb18:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 801fb1c:	4281      	cmp	r1, r0
 801fb1e:	d807      	bhi.n	801fb30 <sin+0x20>
 801fb20:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 801fba8 <sin+0x98>
 801fb24:	2000      	movs	r0, #0
 801fb26:	b005      	add	sp, #20
 801fb28:	f85d eb04 	ldr.w	lr, [sp], #4
 801fb2c:	f000 ba64 	b.w	801fff8 <__kernel_sin>
 801fb30:	4820      	ldr	r0, [pc, #128]	@ (801fbb4 <sin+0xa4>)
 801fb32:	4281      	cmp	r1, r0
 801fb34:	d908      	bls.n	801fb48 <sin+0x38>
 801fb36:	4610      	mov	r0, r2
 801fb38:	4619      	mov	r1, r3
 801fb3a:	f7e0 fba5 	bl	8000288 <__aeabi_dsub>
 801fb3e:	ec41 0b10 	vmov	d0, r0, r1
 801fb42:	b005      	add	sp, #20
 801fb44:	f85d fb04 	ldr.w	pc, [sp], #4
 801fb48:	4668      	mov	r0, sp
 801fb4a:	f000 fbd9 	bl	8020300 <__ieee754_rem_pio2>
 801fb4e:	f000 0003 	and.w	r0, r0, #3
 801fb52:	2801      	cmp	r0, #1
 801fb54:	d00c      	beq.n	801fb70 <sin+0x60>
 801fb56:	2802      	cmp	r0, #2
 801fb58:	d011      	beq.n	801fb7e <sin+0x6e>
 801fb5a:	b9e8      	cbnz	r0, 801fb98 <sin+0x88>
 801fb5c:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb60:	ed9d 0b00 	vldr	d0, [sp]
 801fb64:	2001      	movs	r0, #1
 801fb66:	f000 fa47 	bl	801fff8 <__kernel_sin>
 801fb6a:	ec51 0b10 	vmov	r0, r1, d0
 801fb6e:	e7e6      	b.n	801fb3e <sin+0x2e>
 801fb70:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb74:	ed9d 0b00 	vldr	d0, [sp]
 801fb78:	f000 f976 	bl	801fe68 <__kernel_cos>
 801fb7c:	e7f5      	b.n	801fb6a <sin+0x5a>
 801fb7e:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb82:	ed9d 0b00 	vldr	d0, [sp]
 801fb86:	2001      	movs	r0, #1
 801fb88:	f000 fa36 	bl	801fff8 <__kernel_sin>
 801fb8c:	ec53 2b10 	vmov	r2, r3, d0
 801fb90:	4610      	mov	r0, r2
 801fb92:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 801fb96:	e7d2      	b.n	801fb3e <sin+0x2e>
 801fb98:	ed9d 1b02 	vldr	d1, [sp, #8]
 801fb9c:	ed9d 0b00 	vldr	d0, [sp]
 801fba0:	f000 f962 	bl	801fe68 <__kernel_cos>
 801fba4:	e7f2      	b.n	801fb8c <sin+0x7c>
 801fba6:	bf00      	nop
	...
 801fbb0:	3fe921fb 	.word	0x3fe921fb
 801fbb4:	7fefffff 	.word	0x7fefffff

0801fbb8 <__ieee754_sqrt>:
 801fbb8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fbbc:	4a68      	ldr	r2, [pc, #416]	@ (801fd60 <__ieee754_sqrt+0x1a8>)
 801fbbe:	ec55 4b10 	vmov	r4, r5, d0
 801fbc2:	43aa      	bics	r2, r5
 801fbc4:	462b      	mov	r3, r5
 801fbc6:	4621      	mov	r1, r4
 801fbc8:	d110      	bne.n	801fbec <__ieee754_sqrt+0x34>
 801fbca:	4622      	mov	r2, r4
 801fbcc:	4620      	mov	r0, r4
 801fbce:	4629      	mov	r1, r5
 801fbd0:	f7e0 fd12 	bl	80005f8 <__aeabi_dmul>
 801fbd4:	4602      	mov	r2, r0
 801fbd6:	460b      	mov	r3, r1
 801fbd8:	4620      	mov	r0, r4
 801fbda:	4629      	mov	r1, r5
 801fbdc:	f7e0 fb56 	bl	800028c <__adddf3>
 801fbe0:	4604      	mov	r4, r0
 801fbe2:	460d      	mov	r5, r1
 801fbe4:	ec45 4b10 	vmov	d0, r4, r5
 801fbe8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbec:	2d00      	cmp	r5, #0
 801fbee:	dc0e      	bgt.n	801fc0e <__ieee754_sqrt+0x56>
 801fbf0:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801fbf4:	4322      	orrs	r2, r4
 801fbf6:	d0f5      	beq.n	801fbe4 <__ieee754_sqrt+0x2c>
 801fbf8:	b19d      	cbz	r5, 801fc22 <__ieee754_sqrt+0x6a>
 801fbfa:	4622      	mov	r2, r4
 801fbfc:	4620      	mov	r0, r4
 801fbfe:	4629      	mov	r1, r5
 801fc00:	f7e0 fb42 	bl	8000288 <__aeabi_dsub>
 801fc04:	4602      	mov	r2, r0
 801fc06:	460b      	mov	r3, r1
 801fc08:	f7e0 fe20 	bl	800084c <__aeabi_ddiv>
 801fc0c:	e7e8      	b.n	801fbe0 <__ieee754_sqrt+0x28>
 801fc0e:	152a      	asrs	r2, r5, #20
 801fc10:	d115      	bne.n	801fc3e <__ieee754_sqrt+0x86>
 801fc12:	2000      	movs	r0, #0
 801fc14:	e009      	b.n	801fc2a <__ieee754_sqrt+0x72>
 801fc16:	0acb      	lsrs	r3, r1, #11
 801fc18:	3a15      	subs	r2, #21
 801fc1a:	0549      	lsls	r1, r1, #21
 801fc1c:	2b00      	cmp	r3, #0
 801fc1e:	d0fa      	beq.n	801fc16 <__ieee754_sqrt+0x5e>
 801fc20:	e7f7      	b.n	801fc12 <__ieee754_sqrt+0x5a>
 801fc22:	462a      	mov	r2, r5
 801fc24:	e7fa      	b.n	801fc1c <__ieee754_sqrt+0x64>
 801fc26:	005b      	lsls	r3, r3, #1
 801fc28:	3001      	adds	r0, #1
 801fc2a:	02dc      	lsls	r4, r3, #11
 801fc2c:	d5fb      	bpl.n	801fc26 <__ieee754_sqrt+0x6e>
 801fc2e:	1e44      	subs	r4, r0, #1
 801fc30:	1b12      	subs	r2, r2, r4
 801fc32:	f1c0 0420 	rsb	r4, r0, #32
 801fc36:	fa21 f404 	lsr.w	r4, r1, r4
 801fc3a:	4323      	orrs	r3, r4
 801fc3c:	4081      	lsls	r1, r0
 801fc3e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801fc42:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 801fc46:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 801fc4a:	07d2      	lsls	r2, r2, #31
 801fc4c:	bf5c      	itt	pl
 801fc4e:	005b      	lslpl	r3, r3, #1
 801fc50:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 801fc54:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801fc58:	bf58      	it	pl
 801fc5a:	0049      	lslpl	r1, r1, #1
 801fc5c:	2600      	movs	r6, #0
 801fc5e:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 801fc62:	106d      	asrs	r5, r5, #1
 801fc64:	0049      	lsls	r1, r1, #1
 801fc66:	2016      	movs	r0, #22
 801fc68:	4632      	mov	r2, r6
 801fc6a:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 801fc6e:	1917      	adds	r7, r2, r4
 801fc70:	429f      	cmp	r7, r3
 801fc72:	bfde      	ittt	le
 801fc74:	193a      	addle	r2, r7, r4
 801fc76:	1bdb      	suble	r3, r3, r7
 801fc78:	1936      	addle	r6, r6, r4
 801fc7a:	0fcf      	lsrs	r7, r1, #31
 801fc7c:	3801      	subs	r0, #1
 801fc7e:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 801fc82:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801fc86:	ea4f 0454 	mov.w	r4, r4, lsr #1
 801fc8a:	d1f0      	bne.n	801fc6e <__ieee754_sqrt+0xb6>
 801fc8c:	4604      	mov	r4, r0
 801fc8e:	2720      	movs	r7, #32
 801fc90:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 801fc94:	429a      	cmp	r2, r3
 801fc96:	eb00 0e0c 	add.w	lr, r0, ip
 801fc9a:	db02      	blt.n	801fca2 <__ieee754_sqrt+0xea>
 801fc9c:	d113      	bne.n	801fcc6 <__ieee754_sqrt+0x10e>
 801fc9e:	458e      	cmp	lr, r1
 801fca0:	d811      	bhi.n	801fcc6 <__ieee754_sqrt+0x10e>
 801fca2:	f1be 0f00 	cmp.w	lr, #0
 801fca6:	eb0e 000c 	add.w	r0, lr, ip
 801fcaa:	da42      	bge.n	801fd32 <__ieee754_sqrt+0x17a>
 801fcac:	2800      	cmp	r0, #0
 801fcae:	db40      	blt.n	801fd32 <__ieee754_sqrt+0x17a>
 801fcb0:	f102 0801 	add.w	r8, r2, #1
 801fcb4:	1a9b      	subs	r3, r3, r2
 801fcb6:	458e      	cmp	lr, r1
 801fcb8:	bf88      	it	hi
 801fcba:	f103 33ff 	addhi.w	r3, r3, #4294967295
 801fcbe:	eba1 010e 	sub.w	r1, r1, lr
 801fcc2:	4464      	add	r4, ip
 801fcc4:	4642      	mov	r2, r8
 801fcc6:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 801fcca:	3f01      	subs	r7, #1
 801fccc:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801fcd0:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801fcd4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 801fcd8:	d1dc      	bne.n	801fc94 <__ieee754_sqrt+0xdc>
 801fcda:	4319      	orrs	r1, r3
 801fcdc:	d01b      	beq.n	801fd16 <__ieee754_sqrt+0x15e>
 801fcde:	f8df a084 	ldr.w	sl, [pc, #132]	@ 801fd64 <__ieee754_sqrt+0x1ac>
 801fce2:	f8df b084 	ldr.w	fp, [pc, #132]	@ 801fd68 <__ieee754_sqrt+0x1b0>
 801fce6:	e9da 0100 	ldrd	r0, r1, [sl]
 801fcea:	e9db 2300 	ldrd	r2, r3, [fp]
 801fcee:	f7e0 facb 	bl	8000288 <__aeabi_dsub>
 801fcf2:	e9da 8900 	ldrd	r8, r9, [sl]
 801fcf6:	4602      	mov	r2, r0
 801fcf8:	460b      	mov	r3, r1
 801fcfa:	4640      	mov	r0, r8
 801fcfc:	4649      	mov	r1, r9
 801fcfe:	f7e0 fef7 	bl	8000af0 <__aeabi_dcmple>
 801fd02:	b140      	cbz	r0, 801fd16 <__ieee754_sqrt+0x15e>
 801fd04:	f1b4 3fff 	cmp.w	r4, #4294967295
 801fd08:	e9da 0100 	ldrd	r0, r1, [sl]
 801fd0c:	e9db 2300 	ldrd	r2, r3, [fp]
 801fd10:	d111      	bne.n	801fd36 <__ieee754_sqrt+0x17e>
 801fd12:	3601      	adds	r6, #1
 801fd14:	463c      	mov	r4, r7
 801fd16:	1072      	asrs	r2, r6, #1
 801fd18:	0863      	lsrs	r3, r4, #1
 801fd1a:	07f1      	lsls	r1, r6, #31
 801fd1c:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 801fd20:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 801fd24:	bf48      	it	mi
 801fd26:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 801fd2a:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 801fd2e:	4618      	mov	r0, r3
 801fd30:	e756      	b.n	801fbe0 <__ieee754_sqrt+0x28>
 801fd32:	4690      	mov	r8, r2
 801fd34:	e7be      	b.n	801fcb4 <__ieee754_sqrt+0xfc>
 801fd36:	f7e0 faa9 	bl	800028c <__adddf3>
 801fd3a:	e9da 8900 	ldrd	r8, r9, [sl]
 801fd3e:	4602      	mov	r2, r0
 801fd40:	460b      	mov	r3, r1
 801fd42:	4640      	mov	r0, r8
 801fd44:	4649      	mov	r1, r9
 801fd46:	f7e0 fec9 	bl	8000adc <__aeabi_dcmplt>
 801fd4a:	b120      	cbz	r0, 801fd56 <__ieee754_sqrt+0x19e>
 801fd4c:	1ca0      	adds	r0, r4, #2
 801fd4e:	bf08      	it	eq
 801fd50:	3601      	addeq	r6, #1
 801fd52:	3402      	adds	r4, #2
 801fd54:	e7df      	b.n	801fd16 <__ieee754_sqrt+0x15e>
 801fd56:	1c63      	adds	r3, r4, #1
 801fd58:	f023 0401 	bic.w	r4, r3, #1
 801fd5c:	e7db      	b.n	801fd16 <__ieee754_sqrt+0x15e>
 801fd5e:	bf00      	nop
 801fd60:	7ff00000 	.word	0x7ff00000
 801fd64:	200007d0 	.word	0x200007d0
 801fd68:	200007c8 	.word	0x200007c8
 801fd6c:	00000000 	.word	0x00000000

0801fd70 <floor>:
 801fd70:	ec51 0b10 	vmov	r0, r1, d0
 801fd74:	f3c1 530a 	ubfx	r3, r1, #20, #11
 801fd78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fd7c:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 801fd80:	2e13      	cmp	r6, #19
 801fd82:	460c      	mov	r4, r1
 801fd84:	4605      	mov	r5, r0
 801fd86:	4680      	mov	r8, r0
 801fd88:	dc34      	bgt.n	801fdf4 <floor+0x84>
 801fd8a:	2e00      	cmp	r6, #0
 801fd8c:	da17      	bge.n	801fdbe <floor+0x4e>
 801fd8e:	a332      	add	r3, pc, #200	@ (adr r3, 801fe58 <floor+0xe8>)
 801fd90:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fd94:	f7e0 fa7a 	bl	800028c <__adddf3>
 801fd98:	2200      	movs	r2, #0
 801fd9a:	2300      	movs	r3, #0
 801fd9c:	f7e0 febc 	bl	8000b18 <__aeabi_dcmpgt>
 801fda0:	b150      	cbz	r0, 801fdb8 <floor+0x48>
 801fda2:	2c00      	cmp	r4, #0
 801fda4:	da55      	bge.n	801fe52 <floor+0xe2>
 801fda6:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 801fdaa:	432c      	orrs	r4, r5
 801fdac:	2500      	movs	r5, #0
 801fdae:	42ac      	cmp	r4, r5
 801fdb0:	4c2b      	ldr	r4, [pc, #172]	@ (801fe60 <floor+0xf0>)
 801fdb2:	bf08      	it	eq
 801fdb4:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 801fdb8:	4621      	mov	r1, r4
 801fdba:	4628      	mov	r0, r5
 801fdbc:	e023      	b.n	801fe06 <floor+0x96>
 801fdbe:	4f29      	ldr	r7, [pc, #164]	@ (801fe64 <floor+0xf4>)
 801fdc0:	4137      	asrs	r7, r6
 801fdc2:	ea01 0307 	and.w	r3, r1, r7
 801fdc6:	4303      	orrs	r3, r0
 801fdc8:	d01d      	beq.n	801fe06 <floor+0x96>
 801fdca:	a323      	add	r3, pc, #140	@ (adr r3, 801fe58 <floor+0xe8>)
 801fdcc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fdd0:	f7e0 fa5c 	bl	800028c <__adddf3>
 801fdd4:	2200      	movs	r2, #0
 801fdd6:	2300      	movs	r3, #0
 801fdd8:	f7e0 fe9e 	bl	8000b18 <__aeabi_dcmpgt>
 801fddc:	2800      	cmp	r0, #0
 801fdde:	d0eb      	beq.n	801fdb8 <floor+0x48>
 801fde0:	2c00      	cmp	r4, #0
 801fde2:	bfbe      	ittt	lt
 801fde4:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 801fde8:	4133      	asrlt	r3, r6
 801fdea:	18e4      	addlt	r4, r4, r3
 801fdec:	ea24 0407 	bic.w	r4, r4, r7
 801fdf0:	2500      	movs	r5, #0
 801fdf2:	e7e1      	b.n	801fdb8 <floor+0x48>
 801fdf4:	2e33      	cmp	r6, #51	@ 0x33
 801fdf6:	dd0a      	ble.n	801fe0e <floor+0x9e>
 801fdf8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801fdfc:	d103      	bne.n	801fe06 <floor+0x96>
 801fdfe:	4602      	mov	r2, r0
 801fe00:	460b      	mov	r3, r1
 801fe02:	f7e0 fa43 	bl	800028c <__adddf3>
 801fe06:	ec41 0b10 	vmov	d0, r0, r1
 801fe0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fe0e:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 801fe12:	f04f 37ff 	mov.w	r7, #4294967295
 801fe16:	40df      	lsrs	r7, r3
 801fe18:	4207      	tst	r7, r0
 801fe1a:	d0f4      	beq.n	801fe06 <floor+0x96>
 801fe1c:	a30e      	add	r3, pc, #56	@ (adr r3, 801fe58 <floor+0xe8>)
 801fe1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fe22:	f7e0 fa33 	bl	800028c <__adddf3>
 801fe26:	2200      	movs	r2, #0
 801fe28:	2300      	movs	r3, #0
 801fe2a:	f7e0 fe75 	bl	8000b18 <__aeabi_dcmpgt>
 801fe2e:	2800      	cmp	r0, #0
 801fe30:	d0c2      	beq.n	801fdb8 <floor+0x48>
 801fe32:	2c00      	cmp	r4, #0
 801fe34:	da0a      	bge.n	801fe4c <floor+0xdc>
 801fe36:	2e14      	cmp	r6, #20
 801fe38:	d101      	bne.n	801fe3e <floor+0xce>
 801fe3a:	3401      	adds	r4, #1
 801fe3c:	e006      	b.n	801fe4c <floor+0xdc>
 801fe3e:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 801fe42:	2301      	movs	r3, #1
 801fe44:	40b3      	lsls	r3, r6
 801fe46:	441d      	add	r5, r3
 801fe48:	4545      	cmp	r5, r8
 801fe4a:	d3f6      	bcc.n	801fe3a <floor+0xca>
 801fe4c:	ea25 0507 	bic.w	r5, r5, r7
 801fe50:	e7b2      	b.n	801fdb8 <floor+0x48>
 801fe52:	2500      	movs	r5, #0
 801fe54:	462c      	mov	r4, r5
 801fe56:	e7af      	b.n	801fdb8 <floor+0x48>
 801fe58:	8800759c 	.word	0x8800759c
 801fe5c:	7e37e43c 	.word	0x7e37e43c
 801fe60:	bff00000 	.word	0xbff00000
 801fe64:	000fffff 	.word	0x000fffff

0801fe68 <__kernel_cos>:
 801fe68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe6c:	ec57 6b10 	vmov	r6, r7, d0
 801fe70:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 801fe74:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 801fe78:	ed8d 1b00 	vstr	d1, [sp]
 801fe7c:	d206      	bcs.n	801fe8c <__kernel_cos+0x24>
 801fe7e:	4630      	mov	r0, r6
 801fe80:	4639      	mov	r1, r7
 801fe82:	f7e0 fe69 	bl	8000b58 <__aeabi_d2iz>
 801fe86:	2800      	cmp	r0, #0
 801fe88:	f000 8088 	beq.w	801ff9c <__kernel_cos+0x134>
 801fe8c:	4632      	mov	r2, r6
 801fe8e:	463b      	mov	r3, r7
 801fe90:	4630      	mov	r0, r6
 801fe92:	4639      	mov	r1, r7
 801fe94:	f7e0 fbb0 	bl	80005f8 <__aeabi_dmul>
 801fe98:	4b51      	ldr	r3, [pc, #324]	@ (801ffe0 <__kernel_cos+0x178>)
 801fe9a:	2200      	movs	r2, #0
 801fe9c:	4604      	mov	r4, r0
 801fe9e:	460d      	mov	r5, r1
 801fea0:	f7e0 fbaa 	bl	80005f8 <__aeabi_dmul>
 801fea4:	a340      	add	r3, pc, #256	@ (adr r3, 801ffa8 <__kernel_cos+0x140>)
 801fea6:	e9d3 2300 	ldrd	r2, r3, [r3]
 801feaa:	4682      	mov	sl, r0
 801feac:	468b      	mov	fp, r1
 801feae:	4620      	mov	r0, r4
 801feb0:	4629      	mov	r1, r5
 801feb2:	f7e0 fba1 	bl	80005f8 <__aeabi_dmul>
 801feb6:	a33e      	add	r3, pc, #248	@ (adr r3, 801ffb0 <__kernel_cos+0x148>)
 801feb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 801febc:	f7e0 f9e6 	bl	800028c <__adddf3>
 801fec0:	4622      	mov	r2, r4
 801fec2:	462b      	mov	r3, r5
 801fec4:	f7e0 fb98 	bl	80005f8 <__aeabi_dmul>
 801fec8:	a33b      	add	r3, pc, #236	@ (adr r3, 801ffb8 <__kernel_cos+0x150>)
 801feca:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fece:	f7e0 f9db 	bl	8000288 <__aeabi_dsub>
 801fed2:	4622      	mov	r2, r4
 801fed4:	462b      	mov	r3, r5
 801fed6:	f7e0 fb8f 	bl	80005f8 <__aeabi_dmul>
 801feda:	a339      	add	r3, pc, #228	@ (adr r3, 801ffc0 <__kernel_cos+0x158>)
 801fedc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fee0:	f7e0 f9d4 	bl	800028c <__adddf3>
 801fee4:	4622      	mov	r2, r4
 801fee6:	462b      	mov	r3, r5
 801fee8:	f7e0 fb86 	bl	80005f8 <__aeabi_dmul>
 801feec:	a336      	add	r3, pc, #216	@ (adr r3, 801ffc8 <__kernel_cos+0x160>)
 801feee:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fef2:	f7e0 f9c9 	bl	8000288 <__aeabi_dsub>
 801fef6:	4622      	mov	r2, r4
 801fef8:	462b      	mov	r3, r5
 801fefa:	f7e0 fb7d 	bl	80005f8 <__aeabi_dmul>
 801fefe:	a334      	add	r3, pc, #208	@ (adr r3, 801ffd0 <__kernel_cos+0x168>)
 801ff00:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff04:	f7e0 f9c2 	bl	800028c <__adddf3>
 801ff08:	4622      	mov	r2, r4
 801ff0a:	462b      	mov	r3, r5
 801ff0c:	f7e0 fb74 	bl	80005f8 <__aeabi_dmul>
 801ff10:	4622      	mov	r2, r4
 801ff12:	462b      	mov	r3, r5
 801ff14:	f7e0 fb70 	bl	80005f8 <__aeabi_dmul>
 801ff18:	e9dd 2300 	ldrd	r2, r3, [sp]
 801ff1c:	4604      	mov	r4, r0
 801ff1e:	460d      	mov	r5, r1
 801ff20:	4630      	mov	r0, r6
 801ff22:	4639      	mov	r1, r7
 801ff24:	f7e0 fb68 	bl	80005f8 <__aeabi_dmul>
 801ff28:	460b      	mov	r3, r1
 801ff2a:	4602      	mov	r2, r0
 801ff2c:	4629      	mov	r1, r5
 801ff2e:	4620      	mov	r0, r4
 801ff30:	f7e0 f9aa 	bl	8000288 <__aeabi_dsub>
 801ff34:	4b2b      	ldr	r3, [pc, #172]	@ (801ffe4 <__kernel_cos+0x17c>)
 801ff36:	4598      	cmp	r8, r3
 801ff38:	4606      	mov	r6, r0
 801ff3a:	460f      	mov	r7, r1
 801ff3c:	d810      	bhi.n	801ff60 <__kernel_cos+0xf8>
 801ff3e:	4602      	mov	r2, r0
 801ff40:	460b      	mov	r3, r1
 801ff42:	4650      	mov	r0, sl
 801ff44:	4659      	mov	r1, fp
 801ff46:	f7e0 f99f 	bl	8000288 <__aeabi_dsub>
 801ff4a:	460b      	mov	r3, r1
 801ff4c:	4926      	ldr	r1, [pc, #152]	@ (801ffe8 <__kernel_cos+0x180>)
 801ff4e:	4602      	mov	r2, r0
 801ff50:	2000      	movs	r0, #0
 801ff52:	f7e0 f999 	bl	8000288 <__aeabi_dsub>
 801ff56:	ec41 0b10 	vmov	d0, r0, r1
 801ff5a:	b003      	add	sp, #12
 801ff5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff60:	4b22      	ldr	r3, [pc, #136]	@ (801ffec <__kernel_cos+0x184>)
 801ff62:	4921      	ldr	r1, [pc, #132]	@ (801ffe8 <__kernel_cos+0x180>)
 801ff64:	4598      	cmp	r8, r3
 801ff66:	bf8c      	ite	hi
 801ff68:	4d21      	ldrhi	r5, [pc, #132]	@ (801fff0 <__kernel_cos+0x188>)
 801ff6a:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 801ff6e:	2400      	movs	r4, #0
 801ff70:	4622      	mov	r2, r4
 801ff72:	462b      	mov	r3, r5
 801ff74:	2000      	movs	r0, #0
 801ff76:	f7e0 f987 	bl	8000288 <__aeabi_dsub>
 801ff7a:	4622      	mov	r2, r4
 801ff7c:	4680      	mov	r8, r0
 801ff7e:	4689      	mov	r9, r1
 801ff80:	462b      	mov	r3, r5
 801ff82:	4650      	mov	r0, sl
 801ff84:	4659      	mov	r1, fp
 801ff86:	f7e0 f97f 	bl	8000288 <__aeabi_dsub>
 801ff8a:	4632      	mov	r2, r6
 801ff8c:	463b      	mov	r3, r7
 801ff8e:	f7e0 f97b 	bl	8000288 <__aeabi_dsub>
 801ff92:	4602      	mov	r2, r0
 801ff94:	460b      	mov	r3, r1
 801ff96:	4640      	mov	r0, r8
 801ff98:	4649      	mov	r1, r9
 801ff9a:	e7da      	b.n	801ff52 <__kernel_cos+0xea>
 801ff9c:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 801ffd8 <__kernel_cos+0x170>
 801ffa0:	e7db      	b.n	801ff5a <__kernel_cos+0xf2>
 801ffa2:	bf00      	nop
 801ffa4:	f3af 8000 	nop.w
 801ffa8:	be8838d4 	.word	0xbe8838d4
 801ffac:	bda8fae9 	.word	0xbda8fae9
 801ffb0:	bdb4b1c4 	.word	0xbdb4b1c4
 801ffb4:	3e21ee9e 	.word	0x3e21ee9e
 801ffb8:	809c52ad 	.word	0x809c52ad
 801ffbc:	3e927e4f 	.word	0x3e927e4f
 801ffc0:	19cb1590 	.word	0x19cb1590
 801ffc4:	3efa01a0 	.word	0x3efa01a0
 801ffc8:	16c15177 	.word	0x16c15177
 801ffcc:	3f56c16c 	.word	0x3f56c16c
 801ffd0:	5555554c 	.word	0x5555554c
 801ffd4:	3fa55555 	.word	0x3fa55555
 801ffd8:	00000000 	.word	0x00000000
 801ffdc:	3ff00000 	.word	0x3ff00000
 801ffe0:	3fe00000 	.word	0x3fe00000
 801ffe4:	3fd33332 	.word	0x3fd33332
 801ffe8:	3ff00000 	.word	0x3ff00000
 801ffec:	3fe90000 	.word	0x3fe90000
 801fff0:	3fd20000 	.word	0x3fd20000
 801fff4:	00000000 	.word	0x00000000

0801fff8 <__kernel_sin>:
 801fff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fffc:	ec55 4b10 	vmov	r4, r5, d0
 8020000:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8020004:	b085      	sub	sp, #20
 8020006:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 802000a:	ed8d 1b02 	vstr	d1, [sp, #8]
 802000e:	4680      	mov	r8, r0
 8020010:	d205      	bcs.n	802001e <__kernel_sin+0x26>
 8020012:	4620      	mov	r0, r4
 8020014:	4629      	mov	r1, r5
 8020016:	f7e0 fd9f 	bl	8000b58 <__aeabi_d2iz>
 802001a:	2800      	cmp	r0, #0
 802001c:	d052      	beq.n	80200c4 <__kernel_sin+0xcc>
 802001e:	4622      	mov	r2, r4
 8020020:	462b      	mov	r3, r5
 8020022:	4620      	mov	r0, r4
 8020024:	4629      	mov	r1, r5
 8020026:	f7e0 fae7 	bl	80005f8 <__aeabi_dmul>
 802002a:	4682      	mov	sl, r0
 802002c:	468b      	mov	fp, r1
 802002e:	4602      	mov	r2, r0
 8020030:	460b      	mov	r3, r1
 8020032:	4620      	mov	r0, r4
 8020034:	4629      	mov	r1, r5
 8020036:	f7e0 fadf 	bl	80005f8 <__aeabi_dmul>
 802003a:	a342      	add	r3, pc, #264	@ (adr r3, 8020144 <__kernel_sin+0x14c>)
 802003c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020040:	e9cd 0100 	strd	r0, r1, [sp]
 8020044:	4650      	mov	r0, sl
 8020046:	4659      	mov	r1, fp
 8020048:	f7e0 fad6 	bl	80005f8 <__aeabi_dmul>
 802004c:	a33f      	add	r3, pc, #252	@ (adr r3, 802014c <__kernel_sin+0x154>)
 802004e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020052:	f7e0 f919 	bl	8000288 <__aeabi_dsub>
 8020056:	4652      	mov	r2, sl
 8020058:	465b      	mov	r3, fp
 802005a:	f7e0 facd 	bl	80005f8 <__aeabi_dmul>
 802005e:	a33d      	add	r3, pc, #244	@ (adr r3, 8020154 <__kernel_sin+0x15c>)
 8020060:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020064:	f7e0 f912 	bl	800028c <__adddf3>
 8020068:	4652      	mov	r2, sl
 802006a:	465b      	mov	r3, fp
 802006c:	f7e0 fac4 	bl	80005f8 <__aeabi_dmul>
 8020070:	a33a      	add	r3, pc, #232	@ (adr r3, 802015c <__kernel_sin+0x164>)
 8020072:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020076:	f7e0 f907 	bl	8000288 <__aeabi_dsub>
 802007a:	4652      	mov	r2, sl
 802007c:	465b      	mov	r3, fp
 802007e:	f7e0 fabb 	bl	80005f8 <__aeabi_dmul>
 8020082:	a338      	add	r3, pc, #224	@ (adr r3, 8020164 <__kernel_sin+0x16c>)
 8020084:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020088:	f7e0 f900 	bl	800028c <__adddf3>
 802008c:	4606      	mov	r6, r0
 802008e:	460f      	mov	r7, r1
 8020090:	f1b8 0f00 	cmp.w	r8, #0
 8020094:	d11b      	bne.n	80200ce <__kernel_sin+0xd6>
 8020096:	4602      	mov	r2, r0
 8020098:	460b      	mov	r3, r1
 802009a:	4650      	mov	r0, sl
 802009c:	4659      	mov	r1, fp
 802009e:	f7e0 faab 	bl	80005f8 <__aeabi_dmul>
 80200a2:	a325      	add	r3, pc, #148	@ (adr r3, 8020138 <__kernel_sin+0x140>)
 80200a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80200a8:	f7e0 f8ee 	bl	8000288 <__aeabi_dsub>
 80200ac:	e9dd 2300 	ldrd	r2, r3, [sp]
 80200b0:	f7e0 faa2 	bl	80005f8 <__aeabi_dmul>
 80200b4:	4602      	mov	r2, r0
 80200b6:	460b      	mov	r3, r1
 80200b8:	4620      	mov	r0, r4
 80200ba:	4629      	mov	r1, r5
 80200bc:	f7e0 f8e6 	bl	800028c <__adddf3>
 80200c0:	4604      	mov	r4, r0
 80200c2:	460d      	mov	r5, r1
 80200c4:	ec45 4b10 	vmov	d0, r4, r5
 80200c8:	b005      	add	sp, #20
 80200ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80200d2:	4b1b      	ldr	r3, [pc, #108]	@ (8020140 <__kernel_sin+0x148>)
 80200d4:	2200      	movs	r2, #0
 80200d6:	f7e0 fa8f 	bl	80005f8 <__aeabi_dmul>
 80200da:	4632      	mov	r2, r6
 80200dc:	4680      	mov	r8, r0
 80200de:	4689      	mov	r9, r1
 80200e0:	463b      	mov	r3, r7
 80200e2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80200e6:	f7e0 fa87 	bl	80005f8 <__aeabi_dmul>
 80200ea:	4602      	mov	r2, r0
 80200ec:	460b      	mov	r3, r1
 80200ee:	4640      	mov	r0, r8
 80200f0:	4649      	mov	r1, r9
 80200f2:	f7e0 f8c9 	bl	8000288 <__aeabi_dsub>
 80200f6:	4652      	mov	r2, sl
 80200f8:	465b      	mov	r3, fp
 80200fa:	f7e0 fa7d 	bl	80005f8 <__aeabi_dmul>
 80200fe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8020102:	f7e0 f8c1 	bl	8000288 <__aeabi_dsub>
 8020106:	a30c      	add	r3, pc, #48	@ (adr r3, 8020138 <__kernel_sin+0x140>)
 8020108:	e9d3 2300 	ldrd	r2, r3, [r3]
 802010c:	4606      	mov	r6, r0
 802010e:	460f      	mov	r7, r1
 8020110:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020114:	f7e0 fa70 	bl	80005f8 <__aeabi_dmul>
 8020118:	4602      	mov	r2, r0
 802011a:	460b      	mov	r3, r1
 802011c:	4630      	mov	r0, r6
 802011e:	4639      	mov	r1, r7
 8020120:	f7e0 f8b4 	bl	800028c <__adddf3>
 8020124:	4602      	mov	r2, r0
 8020126:	460b      	mov	r3, r1
 8020128:	4620      	mov	r0, r4
 802012a:	4629      	mov	r1, r5
 802012c:	f7e0 f8ac 	bl	8000288 <__aeabi_dsub>
 8020130:	e7c6      	b.n	80200c0 <__kernel_sin+0xc8>
 8020132:	bf00      	nop
 8020134:	f3af 8000 	nop.w
 8020138:	55555549 	.word	0x55555549
 802013c:	3fc55555 	.word	0x3fc55555
 8020140:	3fe00000 	.word	0x3fe00000
 8020144:	5acfd57c 	.word	0x5acfd57c
 8020148:	3de5d93a 	.word	0x3de5d93a
 802014c:	8a2b9ceb 	.word	0x8a2b9ceb
 8020150:	3e5ae5e6 	.word	0x3e5ae5e6
 8020154:	57b1fe7d 	.word	0x57b1fe7d
 8020158:	3ec71de3 	.word	0x3ec71de3
 802015c:	19c161d5 	.word	0x19c161d5
 8020160:	3f2a01a0 	.word	0x3f2a01a0
 8020164:	1110f8a6 	.word	0x1110f8a6
 8020168:	3f811111 	.word	0x3f811111
 802016c:	00000000 	.word	0x00000000

08020170 <__ieee754_atan2>:
 8020170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020174:	ec57 6b11 	vmov	r6, r7, d1
 8020178:	4273      	negs	r3, r6
 802017a:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 80202f8 <__ieee754_atan2+0x188>
 802017e:	f027 4200 	bic.w	r2, r7, #2147483648	@ 0x80000000
 8020182:	4333      	orrs	r3, r6
 8020184:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8020188:	4543      	cmp	r3, r8
 802018a:	ec51 0b10 	vmov	r0, r1, d0
 802018e:	4635      	mov	r5, r6
 8020190:	d809      	bhi.n	80201a6 <__ieee754_atan2+0x36>
 8020192:	4244      	negs	r4, r0
 8020194:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8020198:	4304      	orrs	r4, r0
 802019a:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 802019e:	4544      	cmp	r4, r8
 80201a0:	468e      	mov	lr, r1
 80201a2:	4681      	mov	r9, r0
 80201a4:	d907      	bls.n	80201b6 <__ieee754_atan2+0x46>
 80201a6:	4632      	mov	r2, r6
 80201a8:	463b      	mov	r3, r7
 80201aa:	f7e0 f86f 	bl	800028c <__adddf3>
 80201ae:	ec41 0b10 	vmov	d0, r0, r1
 80201b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80201b6:	f107 4440 	add.w	r4, r7, #3221225472	@ 0xc0000000
 80201ba:	f504 1480 	add.w	r4, r4, #1048576	@ 0x100000
 80201be:	4334      	orrs	r4, r6
 80201c0:	d103      	bne.n	80201ca <__ieee754_atan2+0x5a>
 80201c2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80201c6:	f7ff baaf 	b.w	801f728 <atan>
 80201ca:	17bc      	asrs	r4, r7, #30
 80201cc:	f004 0402 	and.w	r4, r4, #2
 80201d0:	ea53 0909 	orrs.w	r9, r3, r9
 80201d4:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 80201d8:	d107      	bne.n	80201ea <__ieee754_atan2+0x7a>
 80201da:	2c02      	cmp	r4, #2
 80201dc:	d05f      	beq.n	802029e <__ieee754_atan2+0x12e>
 80201de:	2c03      	cmp	r4, #3
 80201e0:	d1e5      	bne.n	80201ae <__ieee754_atan2+0x3e>
 80201e2:	a141      	add	r1, pc, #260	@ (adr r1, 80202e8 <__ieee754_atan2+0x178>)
 80201e4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80201e8:	e7e1      	b.n	80201ae <__ieee754_atan2+0x3e>
 80201ea:	4315      	orrs	r5, r2
 80201ec:	d106      	bne.n	80201fc <__ieee754_atan2+0x8c>
 80201ee:	f1be 0f00 	cmp.w	lr, #0
 80201f2:	da5f      	bge.n	80202b4 <__ieee754_atan2+0x144>
 80201f4:	a13e      	add	r1, pc, #248	@ (adr r1, 80202f0 <__ieee754_atan2+0x180>)
 80201f6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80201fa:	e7d8      	b.n	80201ae <__ieee754_atan2+0x3e>
 80201fc:	4542      	cmp	r2, r8
 80201fe:	d10f      	bne.n	8020220 <__ieee754_atan2+0xb0>
 8020200:	4293      	cmp	r3, r2
 8020202:	f104 34ff 	add.w	r4, r4, #4294967295
 8020206:	d107      	bne.n	8020218 <__ieee754_atan2+0xa8>
 8020208:	2c02      	cmp	r4, #2
 802020a:	d84c      	bhi.n	80202a6 <__ieee754_atan2+0x136>
 802020c:	4b34      	ldr	r3, [pc, #208]	@ (80202e0 <__ieee754_atan2+0x170>)
 802020e:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020212:	e9d3 0100 	ldrd	r0, r1, [r3]
 8020216:	e7ca      	b.n	80201ae <__ieee754_atan2+0x3e>
 8020218:	2c02      	cmp	r4, #2
 802021a:	d848      	bhi.n	80202ae <__ieee754_atan2+0x13e>
 802021c:	4b31      	ldr	r3, [pc, #196]	@ (80202e4 <__ieee754_atan2+0x174>)
 802021e:	e7f6      	b.n	802020e <__ieee754_atan2+0x9e>
 8020220:	4543      	cmp	r3, r8
 8020222:	d0e4      	beq.n	80201ee <__ieee754_atan2+0x7e>
 8020224:	1a9b      	subs	r3, r3, r2
 8020226:	f1b3 7f74 	cmp.w	r3, #63963136	@ 0x3d00000
 802022a:	ea4f 5223 	mov.w	r2, r3, asr #20
 802022e:	da1e      	bge.n	802026e <__ieee754_atan2+0xfe>
 8020230:	2f00      	cmp	r7, #0
 8020232:	da01      	bge.n	8020238 <__ieee754_atan2+0xc8>
 8020234:	323c      	adds	r2, #60	@ 0x3c
 8020236:	db1e      	blt.n	8020276 <__ieee754_atan2+0x106>
 8020238:	4632      	mov	r2, r6
 802023a:	463b      	mov	r3, r7
 802023c:	f7e0 fb06 	bl	800084c <__aeabi_ddiv>
 8020240:	ec41 0b10 	vmov	d0, r0, r1
 8020244:	f7ff fc5c 	bl	801fb00 <fabs>
 8020248:	f7ff fa6e 	bl	801f728 <atan>
 802024c:	ec51 0b10 	vmov	r0, r1, d0
 8020250:	2c01      	cmp	r4, #1
 8020252:	d013      	beq.n	802027c <__ieee754_atan2+0x10c>
 8020254:	2c02      	cmp	r4, #2
 8020256:	d015      	beq.n	8020284 <__ieee754_atan2+0x114>
 8020258:	2c00      	cmp	r4, #0
 802025a:	d0a8      	beq.n	80201ae <__ieee754_atan2+0x3e>
 802025c:	a318      	add	r3, pc, #96	@ (adr r3, 80202c0 <__ieee754_atan2+0x150>)
 802025e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020262:	f7e0 f811 	bl	8000288 <__aeabi_dsub>
 8020266:	a318      	add	r3, pc, #96	@ (adr r3, 80202c8 <__ieee754_atan2+0x158>)
 8020268:	e9d3 2300 	ldrd	r2, r3, [r3]
 802026c:	e014      	b.n	8020298 <__ieee754_atan2+0x128>
 802026e:	a118      	add	r1, pc, #96	@ (adr r1, 80202d0 <__ieee754_atan2+0x160>)
 8020270:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020274:	e7ec      	b.n	8020250 <__ieee754_atan2+0xe0>
 8020276:	2000      	movs	r0, #0
 8020278:	2100      	movs	r1, #0
 802027a:	e7e9      	b.n	8020250 <__ieee754_atan2+0xe0>
 802027c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020280:	4619      	mov	r1, r3
 8020282:	e794      	b.n	80201ae <__ieee754_atan2+0x3e>
 8020284:	a30e      	add	r3, pc, #56	@ (adr r3, 80202c0 <__ieee754_atan2+0x150>)
 8020286:	e9d3 2300 	ldrd	r2, r3, [r3]
 802028a:	f7df fffd 	bl	8000288 <__aeabi_dsub>
 802028e:	4602      	mov	r2, r0
 8020290:	460b      	mov	r3, r1
 8020292:	a10d      	add	r1, pc, #52	@ (adr r1, 80202c8 <__ieee754_atan2+0x158>)
 8020294:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020298:	f7df fff6 	bl	8000288 <__aeabi_dsub>
 802029c:	e787      	b.n	80201ae <__ieee754_atan2+0x3e>
 802029e:	a10a      	add	r1, pc, #40	@ (adr r1, 80202c8 <__ieee754_atan2+0x158>)
 80202a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80202a4:	e783      	b.n	80201ae <__ieee754_atan2+0x3e>
 80202a6:	a10c      	add	r1, pc, #48	@ (adr r1, 80202d8 <__ieee754_atan2+0x168>)
 80202a8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80202ac:	e77f      	b.n	80201ae <__ieee754_atan2+0x3e>
 80202ae:	2000      	movs	r0, #0
 80202b0:	2100      	movs	r1, #0
 80202b2:	e77c      	b.n	80201ae <__ieee754_atan2+0x3e>
 80202b4:	a106      	add	r1, pc, #24	@ (adr r1, 80202d0 <__ieee754_atan2+0x160>)
 80202b6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80202ba:	e778      	b.n	80201ae <__ieee754_atan2+0x3e>
 80202bc:	f3af 8000 	nop.w
 80202c0:	33145c07 	.word	0x33145c07
 80202c4:	3ca1a626 	.word	0x3ca1a626
 80202c8:	54442d18 	.word	0x54442d18
 80202cc:	400921fb 	.word	0x400921fb
 80202d0:	54442d18 	.word	0x54442d18
 80202d4:	3ff921fb 	.word	0x3ff921fb
 80202d8:	54442d18 	.word	0x54442d18
 80202dc:	3fe921fb 	.word	0x3fe921fb
 80202e0:	08021a18 	.word	0x08021a18
 80202e4:	08021a00 	.word	0x08021a00
 80202e8:	54442d18 	.word	0x54442d18
 80202ec:	c00921fb 	.word	0xc00921fb
 80202f0:	54442d18 	.word	0x54442d18
 80202f4:	bff921fb 	.word	0xbff921fb
 80202f8:	7ff00000 	.word	0x7ff00000
 80202fc:	00000000 	.word	0x00000000

08020300 <__ieee754_rem_pio2>:
 8020300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020304:	ec57 6b10 	vmov	r6, r7, d0
 8020308:	4bc5      	ldr	r3, [pc, #788]	@ (8020620 <__ieee754_rem_pio2+0x320>)
 802030a:	b08d      	sub	sp, #52	@ 0x34
 802030c:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8020310:	4598      	cmp	r8, r3
 8020312:	4604      	mov	r4, r0
 8020314:	9704      	str	r7, [sp, #16]
 8020316:	d807      	bhi.n	8020328 <__ieee754_rem_pio2+0x28>
 8020318:	2200      	movs	r2, #0
 802031a:	2300      	movs	r3, #0
 802031c:	ed80 0b00 	vstr	d0, [r0]
 8020320:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8020324:	2500      	movs	r5, #0
 8020326:	e028      	b.n	802037a <__ieee754_rem_pio2+0x7a>
 8020328:	4bbe      	ldr	r3, [pc, #760]	@ (8020624 <__ieee754_rem_pio2+0x324>)
 802032a:	4598      	cmp	r8, r3
 802032c:	d878      	bhi.n	8020420 <__ieee754_rem_pio2+0x120>
 802032e:	9b04      	ldr	r3, [sp, #16]
 8020330:	4dbd      	ldr	r5, [pc, #756]	@ (8020628 <__ieee754_rem_pio2+0x328>)
 8020332:	2b00      	cmp	r3, #0
 8020334:	4630      	mov	r0, r6
 8020336:	a3ac      	add	r3, pc, #688	@ (adr r3, 80205e8 <__ieee754_rem_pio2+0x2e8>)
 8020338:	e9d3 2300 	ldrd	r2, r3, [r3]
 802033c:	4639      	mov	r1, r7
 802033e:	dd38      	ble.n	80203b2 <__ieee754_rem_pio2+0xb2>
 8020340:	f7df ffa2 	bl	8000288 <__aeabi_dsub>
 8020344:	45a8      	cmp	r8, r5
 8020346:	4606      	mov	r6, r0
 8020348:	460f      	mov	r7, r1
 802034a:	d01a      	beq.n	8020382 <__ieee754_rem_pio2+0x82>
 802034c:	a3a8      	add	r3, pc, #672	@ (adr r3, 80205f0 <__ieee754_rem_pio2+0x2f0>)
 802034e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020352:	f7df ff99 	bl	8000288 <__aeabi_dsub>
 8020356:	4602      	mov	r2, r0
 8020358:	460b      	mov	r3, r1
 802035a:	4680      	mov	r8, r0
 802035c:	4689      	mov	r9, r1
 802035e:	4630      	mov	r0, r6
 8020360:	4639      	mov	r1, r7
 8020362:	f7df ff91 	bl	8000288 <__aeabi_dsub>
 8020366:	a3a2      	add	r3, pc, #648	@ (adr r3, 80205f0 <__ieee754_rem_pio2+0x2f0>)
 8020368:	e9d3 2300 	ldrd	r2, r3, [r3]
 802036c:	f7df ff8c 	bl	8000288 <__aeabi_dsub>
 8020370:	e9c4 8900 	strd	r8, r9, [r4]
 8020374:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020378:	2501      	movs	r5, #1
 802037a:	4628      	mov	r0, r5
 802037c:	b00d      	add	sp, #52	@ 0x34
 802037e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020382:	a39d      	add	r3, pc, #628	@ (adr r3, 80205f8 <__ieee754_rem_pio2+0x2f8>)
 8020384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020388:	f7df ff7e 	bl	8000288 <__aeabi_dsub>
 802038c:	a39c      	add	r3, pc, #624	@ (adr r3, 8020600 <__ieee754_rem_pio2+0x300>)
 802038e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020392:	4606      	mov	r6, r0
 8020394:	460f      	mov	r7, r1
 8020396:	f7df ff77 	bl	8000288 <__aeabi_dsub>
 802039a:	4602      	mov	r2, r0
 802039c:	460b      	mov	r3, r1
 802039e:	4680      	mov	r8, r0
 80203a0:	4689      	mov	r9, r1
 80203a2:	4630      	mov	r0, r6
 80203a4:	4639      	mov	r1, r7
 80203a6:	f7df ff6f 	bl	8000288 <__aeabi_dsub>
 80203aa:	a395      	add	r3, pc, #596	@ (adr r3, 8020600 <__ieee754_rem_pio2+0x300>)
 80203ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203b0:	e7dc      	b.n	802036c <__ieee754_rem_pio2+0x6c>
 80203b2:	f7df ff6b 	bl	800028c <__adddf3>
 80203b6:	45a8      	cmp	r8, r5
 80203b8:	4606      	mov	r6, r0
 80203ba:	460f      	mov	r7, r1
 80203bc:	d018      	beq.n	80203f0 <__ieee754_rem_pio2+0xf0>
 80203be:	a38c      	add	r3, pc, #560	@ (adr r3, 80205f0 <__ieee754_rem_pio2+0x2f0>)
 80203c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203c4:	f7df ff62 	bl	800028c <__adddf3>
 80203c8:	4602      	mov	r2, r0
 80203ca:	460b      	mov	r3, r1
 80203cc:	4680      	mov	r8, r0
 80203ce:	4689      	mov	r9, r1
 80203d0:	4630      	mov	r0, r6
 80203d2:	4639      	mov	r1, r7
 80203d4:	f7df ff58 	bl	8000288 <__aeabi_dsub>
 80203d8:	a385      	add	r3, pc, #532	@ (adr r3, 80205f0 <__ieee754_rem_pio2+0x2f0>)
 80203da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203de:	f7df ff55 	bl	800028c <__adddf3>
 80203e2:	f04f 35ff 	mov.w	r5, #4294967295
 80203e6:	e9c4 8900 	strd	r8, r9, [r4]
 80203ea:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80203ee:	e7c4      	b.n	802037a <__ieee754_rem_pio2+0x7a>
 80203f0:	a381      	add	r3, pc, #516	@ (adr r3, 80205f8 <__ieee754_rem_pio2+0x2f8>)
 80203f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80203f6:	f7df ff49 	bl	800028c <__adddf3>
 80203fa:	a381      	add	r3, pc, #516	@ (adr r3, 8020600 <__ieee754_rem_pio2+0x300>)
 80203fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020400:	4606      	mov	r6, r0
 8020402:	460f      	mov	r7, r1
 8020404:	f7df ff42 	bl	800028c <__adddf3>
 8020408:	4602      	mov	r2, r0
 802040a:	460b      	mov	r3, r1
 802040c:	4680      	mov	r8, r0
 802040e:	4689      	mov	r9, r1
 8020410:	4630      	mov	r0, r6
 8020412:	4639      	mov	r1, r7
 8020414:	f7df ff38 	bl	8000288 <__aeabi_dsub>
 8020418:	a379      	add	r3, pc, #484	@ (adr r3, 8020600 <__ieee754_rem_pio2+0x300>)
 802041a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802041e:	e7de      	b.n	80203de <__ieee754_rem_pio2+0xde>
 8020420:	4b82      	ldr	r3, [pc, #520]	@ (802062c <__ieee754_rem_pio2+0x32c>)
 8020422:	4598      	cmp	r8, r3
 8020424:	f200 80d1 	bhi.w	80205ca <__ieee754_rem_pio2+0x2ca>
 8020428:	f7ff fb6a 	bl	801fb00 <fabs>
 802042c:	ec57 6b10 	vmov	r6, r7, d0
 8020430:	a375      	add	r3, pc, #468	@ (adr r3, 8020608 <__ieee754_rem_pio2+0x308>)
 8020432:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020436:	4630      	mov	r0, r6
 8020438:	4639      	mov	r1, r7
 802043a:	f7e0 f8dd 	bl	80005f8 <__aeabi_dmul>
 802043e:	4b7c      	ldr	r3, [pc, #496]	@ (8020630 <__ieee754_rem_pio2+0x330>)
 8020440:	2200      	movs	r2, #0
 8020442:	f7df ff23 	bl	800028c <__adddf3>
 8020446:	f7e0 fb87 	bl	8000b58 <__aeabi_d2iz>
 802044a:	4605      	mov	r5, r0
 802044c:	f7e0 f86a 	bl	8000524 <__aeabi_i2d>
 8020450:	4602      	mov	r2, r0
 8020452:	460b      	mov	r3, r1
 8020454:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8020458:	a363      	add	r3, pc, #396	@ (adr r3, 80205e8 <__ieee754_rem_pio2+0x2e8>)
 802045a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802045e:	f7e0 f8cb 	bl	80005f8 <__aeabi_dmul>
 8020462:	4602      	mov	r2, r0
 8020464:	460b      	mov	r3, r1
 8020466:	4630      	mov	r0, r6
 8020468:	4639      	mov	r1, r7
 802046a:	f7df ff0d 	bl	8000288 <__aeabi_dsub>
 802046e:	a360      	add	r3, pc, #384	@ (adr r3, 80205f0 <__ieee754_rem_pio2+0x2f0>)
 8020470:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020474:	4682      	mov	sl, r0
 8020476:	468b      	mov	fp, r1
 8020478:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802047c:	f7e0 f8bc 	bl	80005f8 <__aeabi_dmul>
 8020480:	2d1f      	cmp	r5, #31
 8020482:	4606      	mov	r6, r0
 8020484:	460f      	mov	r7, r1
 8020486:	dc0c      	bgt.n	80204a2 <__ieee754_rem_pio2+0x1a2>
 8020488:	4b6a      	ldr	r3, [pc, #424]	@ (8020634 <__ieee754_rem_pio2+0x334>)
 802048a:	1e6a      	subs	r2, r5, #1
 802048c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020490:	4543      	cmp	r3, r8
 8020492:	d006      	beq.n	80204a2 <__ieee754_rem_pio2+0x1a2>
 8020494:	4632      	mov	r2, r6
 8020496:	463b      	mov	r3, r7
 8020498:	4650      	mov	r0, sl
 802049a:	4659      	mov	r1, fp
 802049c:	f7df fef4 	bl	8000288 <__aeabi_dsub>
 80204a0:	e00e      	b.n	80204c0 <__ieee754_rem_pio2+0x1c0>
 80204a2:	463b      	mov	r3, r7
 80204a4:	4632      	mov	r2, r6
 80204a6:	4650      	mov	r0, sl
 80204a8:	4659      	mov	r1, fp
 80204aa:	f7df feed 	bl	8000288 <__aeabi_dsub>
 80204ae:	ea4f 5328 	mov.w	r3, r8, asr #20
 80204b2:	9305      	str	r3, [sp, #20]
 80204b4:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80204b8:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 80204bc:	2b10      	cmp	r3, #16
 80204be:	dc02      	bgt.n	80204c6 <__ieee754_rem_pio2+0x1c6>
 80204c0:	e9c4 0100 	strd	r0, r1, [r4]
 80204c4:	e039      	b.n	802053a <__ieee754_rem_pio2+0x23a>
 80204c6:	a34c      	add	r3, pc, #304	@ (adr r3, 80205f8 <__ieee754_rem_pio2+0x2f8>)
 80204c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80204cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80204d0:	f7e0 f892 	bl	80005f8 <__aeabi_dmul>
 80204d4:	4606      	mov	r6, r0
 80204d6:	460f      	mov	r7, r1
 80204d8:	4602      	mov	r2, r0
 80204da:	460b      	mov	r3, r1
 80204dc:	4650      	mov	r0, sl
 80204de:	4659      	mov	r1, fp
 80204e0:	f7df fed2 	bl	8000288 <__aeabi_dsub>
 80204e4:	4602      	mov	r2, r0
 80204e6:	460b      	mov	r3, r1
 80204e8:	4680      	mov	r8, r0
 80204ea:	4689      	mov	r9, r1
 80204ec:	4650      	mov	r0, sl
 80204ee:	4659      	mov	r1, fp
 80204f0:	f7df feca 	bl	8000288 <__aeabi_dsub>
 80204f4:	4632      	mov	r2, r6
 80204f6:	463b      	mov	r3, r7
 80204f8:	f7df fec6 	bl	8000288 <__aeabi_dsub>
 80204fc:	a340      	add	r3, pc, #256	@ (adr r3, 8020600 <__ieee754_rem_pio2+0x300>)
 80204fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020502:	4606      	mov	r6, r0
 8020504:	460f      	mov	r7, r1
 8020506:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802050a:	f7e0 f875 	bl	80005f8 <__aeabi_dmul>
 802050e:	4632      	mov	r2, r6
 8020510:	463b      	mov	r3, r7
 8020512:	f7df feb9 	bl	8000288 <__aeabi_dsub>
 8020516:	4602      	mov	r2, r0
 8020518:	460b      	mov	r3, r1
 802051a:	4606      	mov	r6, r0
 802051c:	460f      	mov	r7, r1
 802051e:	4640      	mov	r0, r8
 8020520:	4649      	mov	r1, r9
 8020522:	f7df feb1 	bl	8000288 <__aeabi_dsub>
 8020526:	9a05      	ldr	r2, [sp, #20]
 8020528:	f3c1 530a 	ubfx	r3, r1, #20, #11
 802052c:	1ad3      	subs	r3, r2, r3
 802052e:	2b31      	cmp	r3, #49	@ 0x31
 8020530:	dc20      	bgt.n	8020574 <__ieee754_rem_pio2+0x274>
 8020532:	e9c4 0100 	strd	r0, r1, [r4]
 8020536:	46c2      	mov	sl, r8
 8020538:	46cb      	mov	fp, r9
 802053a:	e9d4 8900 	ldrd	r8, r9, [r4]
 802053e:	4650      	mov	r0, sl
 8020540:	4642      	mov	r2, r8
 8020542:	464b      	mov	r3, r9
 8020544:	4659      	mov	r1, fp
 8020546:	f7df fe9f 	bl	8000288 <__aeabi_dsub>
 802054a:	463b      	mov	r3, r7
 802054c:	4632      	mov	r2, r6
 802054e:	f7df fe9b 	bl	8000288 <__aeabi_dsub>
 8020552:	9b04      	ldr	r3, [sp, #16]
 8020554:	2b00      	cmp	r3, #0
 8020556:	e9c4 0102 	strd	r0, r1, [r4, #8]
 802055a:	f6bf af0e 	bge.w	802037a <__ieee754_rem_pio2+0x7a>
 802055e:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 8020562:	6063      	str	r3, [r4, #4]
 8020564:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020568:	f8c4 8000 	str.w	r8, [r4]
 802056c:	60a0      	str	r0, [r4, #8]
 802056e:	60e3      	str	r3, [r4, #12]
 8020570:	426d      	negs	r5, r5
 8020572:	e702      	b.n	802037a <__ieee754_rem_pio2+0x7a>
 8020574:	a326      	add	r3, pc, #152	@ (adr r3, 8020610 <__ieee754_rem_pio2+0x310>)
 8020576:	e9d3 2300 	ldrd	r2, r3, [r3]
 802057a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802057e:	f7e0 f83b 	bl	80005f8 <__aeabi_dmul>
 8020582:	4606      	mov	r6, r0
 8020584:	460f      	mov	r7, r1
 8020586:	4602      	mov	r2, r0
 8020588:	460b      	mov	r3, r1
 802058a:	4640      	mov	r0, r8
 802058c:	4649      	mov	r1, r9
 802058e:	f7df fe7b 	bl	8000288 <__aeabi_dsub>
 8020592:	4602      	mov	r2, r0
 8020594:	460b      	mov	r3, r1
 8020596:	4682      	mov	sl, r0
 8020598:	468b      	mov	fp, r1
 802059a:	4640      	mov	r0, r8
 802059c:	4649      	mov	r1, r9
 802059e:	f7df fe73 	bl	8000288 <__aeabi_dsub>
 80205a2:	4632      	mov	r2, r6
 80205a4:	463b      	mov	r3, r7
 80205a6:	f7df fe6f 	bl	8000288 <__aeabi_dsub>
 80205aa:	a31b      	add	r3, pc, #108	@ (adr r3, 8020618 <__ieee754_rem_pio2+0x318>)
 80205ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80205b0:	4606      	mov	r6, r0
 80205b2:	460f      	mov	r7, r1
 80205b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80205b8:	f7e0 f81e 	bl	80005f8 <__aeabi_dmul>
 80205bc:	4632      	mov	r2, r6
 80205be:	463b      	mov	r3, r7
 80205c0:	f7df fe62 	bl	8000288 <__aeabi_dsub>
 80205c4:	4606      	mov	r6, r0
 80205c6:	460f      	mov	r7, r1
 80205c8:	e764      	b.n	8020494 <__ieee754_rem_pio2+0x194>
 80205ca:	4b1b      	ldr	r3, [pc, #108]	@ (8020638 <__ieee754_rem_pio2+0x338>)
 80205cc:	4598      	cmp	r8, r3
 80205ce:	d935      	bls.n	802063c <__ieee754_rem_pio2+0x33c>
 80205d0:	4632      	mov	r2, r6
 80205d2:	463b      	mov	r3, r7
 80205d4:	4630      	mov	r0, r6
 80205d6:	4639      	mov	r1, r7
 80205d8:	f7df fe56 	bl	8000288 <__aeabi_dsub>
 80205dc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80205e0:	e9c4 0100 	strd	r0, r1, [r4]
 80205e4:	e69e      	b.n	8020324 <__ieee754_rem_pio2+0x24>
 80205e6:	bf00      	nop
 80205e8:	54400000 	.word	0x54400000
 80205ec:	3ff921fb 	.word	0x3ff921fb
 80205f0:	1a626331 	.word	0x1a626331
 80205f4:	3dd0b461 	.word	0x3dd0b461
 80205f8:	1a600000 	.word	0x1a600000
 80205fc:	3dd0b461 	.word	0x3dd0b461
 8020600:	2e037073 	.word	0x2e037073
 8020604:	3ba3198a 	.word	0x3ba3198a
 8020608:	6dc9c883 	.word	0x6dc9c883
 802060c:	3fe45f30 	.word	0x3fe45f30
 8020610:	2e000000 	.word	0x2e000000
 8020614:	3ba3198a 	.word	0x3ba3198a
 8020618:	252049c1 	.word	0x252049c1
 802061c:	397b839a 	.word	0x397b839a
 8020620:	3fe921fb 	.word	0x3fe921fb
 8020624:	4002d97b 	.word	0x4002d97b
 8020628:	3ff921fb 	.word	0x3ff921fb
 802062c:	413921fb 	.word	0x413921fb
 8020630:	3fe00000 	.word	0x3fe00000
 8020634:	08021a30 	.word	0x08021a30
 8020638:	7fefffff 	.word	0x7fefffff
 802063c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8020640:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 8020644:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8020648:	4630      	mov	r0, r6
 802064a:	460f      	mov	r7, r1
 802064c:	f7e0 fa84 	bl	8000b58 <__aeabi_d2iz>
 8020650:	f7df ff68 	bl	8000524 <__aeabi_i2d>
 8020654:	4602      	mov	r2, r0
 8020656:	460b      	mov	r3, r1
 8020658:	4630      	mov	r0, r6
 802065a:	4639      	mov	r1, r7
 802065c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8020660:	f7df fe12 	bl	8000288 <__aeabi_dsub>
 8020664:	4b22      	ldr	r3, [pc, #136]	@ (80206f0 <__ieee754_rem_pio2+0x3f0>)
 8020666:	2200      	movs	r2, #0
 8020668:	f7df ffc6 	bl	80005f8 <__aeabi_dmul>
 802066c:	460f      	mov	r7, r1
 802066e:	4606      	mov	r6, r0
 8020670:	f7e0 fa72 	bl	8000b58 <__aeabi_d2iz>
 8020674:	f7df ff56 	bl	8000524 <__aeabi_i2d>
 8020678:	4602      	mov	r2, r0
 802067a:	460b      	mov	r3, r1
 802067c:	4630      	mov	r0, r6
 802067e:	4639      	mov	r1, r7
 8020680:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8020684:	f7df fe00 	bl	8000288 <__aeabi_dsub>
 8020688:	4b19      	ldr	r3, [pc, #100]	@ (80206f0 <__ieee754_rem_pio2+0x3f0>)
 802068a:	2200      	movs	r2, #0
 802068c:	f7df ffb4 	bl	80005f8 <__aeabi_dmul>
 8020690:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8020694:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8020698:	f04f 0803 	mov.w	r8, #3
 802069c:	2600      	movs	r6, #0
 802069e:	2700      	movs	r7, #0
 80206a0:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 80206a4:	4632      	mov	r2, r6
 80206a6:	463b      	mov	r3, r7
 80206a8:	46c2      	mov	sl, r8
 80206aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80206ae:	f7e0 fa0b 	bl	8000ac8 <__aeabi_dcmpeq>
 80206b2:	2800      	cmp	r0, #0
 80206b4:	d1f4      	bne.n	80206a0 <__ieee754_rem_pio2+0x3a0>
 80206b6:	4b0f      	ldr	r3, [pc, #60]	@ (80206f4 <__ieee754_rem_pio2+0x3f4>)
 80206b8:	9301      	str	r3, [sp, #4]
 80206ba:	2302      	movs	r3, #2
 80206bc:	9300      	str	r3, [sp, #0]
 80206be:	462a      	mov	r2, r5
 80206c0:	4653      	mov	r3, sl
 80206c2:	4621      	mov	r1, r4
 80206c4:	a806      	add	r0, sp, #24
 80206c6:	f000 f897 	bl	80207f8 <__kernel_rem_pio2>
 80206ca:	9b04      	ldr	r3, [sp, #16]
 80206cc:	2b00      	cmp	r3, #0
 80206ce:	4605      	mov	r5, r0
 80206d0:	f6bf ae53 	bge.w	802037a <__ieee754_rem_pio2+0x7a>
 80206d4:	e9d4 2100 	ldrd	r2, r1, [r4]
 80206d8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80206dc:	e9c4 2300 	strd	r2, r3, [r4]
 80206e0:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 80206e4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80206e8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 80206ec:	e740      	b.n	8020570 <__ieee754_rem_pio2+0x270>
 80206ee:	bf00      	nop
 80206f0:	41700000 	.word	0x41700000
 80206f4:	08021ab0 	.word	0x08021ab0

080206f8 <scalbn>:
 80206f8:	b570      	push	{r4, r5, r6, lr}
 80206fa:	ec55 4b10 	vmov	r4, r5, d0
 80206fe:	f3c5 510a 	ubfx	r1, r5, #20, #11
 8020702:	4606      	mov	r6, r0
 8020704:	462b      	mov	r3, r5
 8020706:	b991      	cbnz	r1, 802072e <scalbn+0x36>
 8020708:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 802070c:	4323      	orrs	r3, r4
 802070e:	d03d      	beq.n	802078c <scalbn+0x94>
 8020710:	4b35      	ldr	r3, [pc, #212]	@ (80207e8 <scalbn+0xf0>)
 8020712:	4620      	mov	r0, r4
 8020714:	4629      	mov	r1, r5
 8020716:	2200      	movs	r2, #0
 8020718:	f7df ff6e 	bl	80005f8 <__aeabi_dmul>
 802071c:	4b33      	ldr	r3, [pc, #204]	@ (80207ec <scalbn+0xf4>)
 802071e:	429e      	cmp	r6, r3
 8020720:	4604      	mov	r4, r0
 8020722:	460d      	mov	r5, r1
 8020724:	da0f      	bge.n	8020746 <scalbn+0x4e>
 8020726:	a328      	add	r3, pc, #160	@ (adr r3, 80207c8 <scalbn+0xd0>)
 8020728:	e9d3 2300 	ldrd	r2, r3, [r3]
 802072c:	e01e      	b.n	802076c <scalbn+0x74>
 802072e:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8020732:	4291      	cmp	r1, r2
 8020734:	d10b      	bne.n	802074e <scalbn+0x56>
 8020736:	4622      	mov	r2, r4
 8020738:	4620      	mov	r0, r4
 802073a:	4629      	mov	r1, r5
 802073c:	f7df fda6 	bl	800028c <__adddf3>
 8020740:	4604      	mov	r4, r0
 8020742:	460d      	mov	r5, r1
 8020744:	e022      	b.n	802078c <scalbn+0x94>
 8020746:	460b      	mov	r3, r1
 8020748:	f3c1 510a 	ubfx	r1, r1, #20, #11
 802074c:	3936      	subs	r1, #54	@ 0x36
 802074e:	f24c 3250 	movw	r2, #50000	@ 0xc350
 8020752:	4296      	cmp	r6, r2
 8020754:	dd0d      	ble.n	8020772 <scalbn+0x7a>
 8020756:	2d00      	cmp	r5, #0
 8020758:	a11d      	add	r1, pc, #116	@ (adr r1, 80207d0 <scalbn+0xd8>)
 802075a:	e9d1 0100 	ldrd	r0, r1, [r1]
 802075e:	da02      	bge.n	8020766 <scalbn+0x6e>
 8020760:	a11d      	add	r1, pc, #116	@ (adr r1, 80207d8 <scalbn+0xe0>)
 8020762:	e9d1 0100 	ldrd	r0, r1, [r1]
 8020766:	a31a      	add	r3, pc, #104	@ (adr r3, 80207d0 <scalbn+0xd8>)
 8020768:	e9d3 2300 	ldrd	r2, r3, [r3]
 802076c:	f7df ff44 	bl	80005f8 <__aeabi_dmul>
 8020770:	e7e6      	b.n	8020740 <scalbn+0x48>
 8020772:	1872      	adds	r2, r6, r1
 8020774:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8020778:	428a      	cmp	r2, r1
 802077a:	dcec      	bgt.n	8020756 <scalbn+0x5e>
 802077c:	2a00      	cmp	r2, #0
 802077e:	dd08      	ble.n	8020792 <scalbn+0x9a>
 8020780:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8020784:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8020788:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802078c:	ec45 4b10 	vmov	d0, r4, r5
 8020790:	bd70      	pop	{r4, r5, r6, pc}
 8020792:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8020796:	da08      	bge.n	80207aa <scalbn+0xb2>
 8020798:	2d00      	cmp	r5, #0
 802079a:	a10b      	add	r1, pc, #44	@ (adr r1, 80207c8 <scalbn+0xd0>)
 802079c:	e9d1 0100 	ldrd	r0, r1, [r1]
 80207a0:	dac1      	bge.n	8020726 <scalbn+0x2e>
 80207a2:	a10f      	add	r1, pc, #60	@ (adr r1, 80207e0 <scalbn+0xe8>)
 80207a4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80207a8:	e7bd      	b.n	8020726 <scalbn+0x2e>
 80207aa:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 80207ae:	3236      	adds	r2, #54	@ 0x36
 80207b0:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 80207b4:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 80207b8:	4620      	mov	r0, r4
 80207ba:	4b0d      	ldr	r3, [pc, #52]	@ (80207f0 <scalbn+0xf8>)
 80207bc:	4629      	mov	r1, r5
 80207be:	2200      	movs	r2, #0
 80207c0:	e7d4      	b.n	802076c <scalbn+0x74>
 80207c2:	bf00      	nop
 80207c4:	f3af 8000 	nop.w
 80207c8:	c2f8f359 	.word	0xc2f8f359
 80207cc:	01a56e1f 	.word	0x01a56e1f
 80207d0:	8800759c 	.word	0x8800759c
 80207d4:	7e37e43c 	.word	0x7e37e43c
 80207d8:	8800759c 	.word	0x8800759c
 80207dc:	fe37e43c 	.word	0xfe37e43c
 80207e0:	c2f8f359 	.word	0xc2f8f359
 80207e4:	81a56e1f 	.word	0x81a56e1f
 80207e8:	43500000 	.word	0x43500000
 80207ec:	ffff3cb0 	.word	0xffff3cb0
 80207f0:	3c900000 	.word	0x3c900000
 80207f4:	00000000 	.word	0x00000000

080207f8 <__kernel_rem_pio2>:
 80207f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207fc:	ed2d 8b02 	vpush	{d8}
 8020800:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 8020804:	f112 0f14 	cmn.w	r2, #20
 8020808:	9306      	str	r3, [sp, #24]
 802080a:	9104      	str	r1, [sp, #16]
 802080c:	4bbe      	ldr	r3, [pc, #760]	@ (8020b08 <__kernel_rem_pio2+0x310>)
 802080e:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 8020810:	9008      	str	r0, [sp, #32]
 8020812:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8020816:	9300      	str	r3, [sp, #0]
 8020818:	9b06      	ldr	r3, [sp, #24]
 802081a:	f103 33ff 	add.w	r3, r3, #4294967295
 802081e:	bfa8      	it	ge
 8020820:	1ed4      	subge	r4, r2, #3
 8020822:	9305      	str	r3, [sp, #20]
 8020824:	bfb2      	itee	lt
 8020826:	2400      	movlt	r4, #0
 8020828:	2318      	movge	r3, #24
 802082a:	fb94 f4f3 	sdivge	r4, r4, r3
 802082e:	f06f 0317 	mvn.w	r3, #23
 8020832:	fb04 3303 	mla	r3, r4, r3, r3
 8020836:	eb03 0b02 	add.w	fp, r3, r2
 802083a:	9b00      	ldr	r3, [sp, #0]
 802083c:	9a05      	ldr	r2, [sp, #20]
 802083e:	ed9f 8bae 	vldr	d8, [pc, #696]	@ 8020af8 <__kernel_rem_pio2+0x300>
 8020842:	eb03 0802 	add.w	r8, r3, r2
 8020846:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8020848:	1aa7      	subs	r7, r4, r2
 802084a:	ae20      	add	r6, sp, #128	@ 0x80
 802084c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8020850:	2500      	movs	r5, #0
 8020852:	4545      	cmp	r5, r8
 8020854:	dd13      	ble.n	802087e <__kernel_rem_pio2+0x86>
 8020856:	9b06      	ldr	r3, [sp, #24]
 8020858:	aa20      	add	r2, sp, #128	@ 0x80
 802085a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 802085e:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8020862:	f04f 0800 	mov.w	r8, #0
 8020866:	9b00      	ldr	r3, [sp, #0]
 8020868:	4598      	cmp	r8, r3
 802086a:	dc31      	bgt.n	80208d0 <__kernel_rem_pio2+0xd8>
 802086c:	ed9f 7ba2 	vldr	d7, [pc, #648]	@ 8020af8 <__kernel_rem_pio2+0x300>
 8020870:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8020874:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020878:	462f      	mov	r7, r5
 802087a:	2600      	movs	r6, #0
 802087c:	e01b      	b.n	80208b6 <__kernel_rem_pio2+0xbe>
 802087e:	42ef      	cmn	r7, r5
 8020880:	d407      	bmi.n	8020892 <__kernel_rem_pio2+0x9a>
 8020882:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8020886:	f7df fe4d 	bl	8000524 <__aeabi_i2d>
 802088a:	e8e6 0102 	strd	r0, r1, [r6], #8
 802088e:	3501      	adds	r5, #1
 8020890:	e7df      	b.n	8020852 <__kernel_rem_pio2+0x5a>
 8020892:	ec51 0b18 	vmov	r0, r1, d8
 8020896:	e7f8      	b.n	802088a <__kernel_rem_pio2+0x92>
 8020898:	e9d7 2300 	ldrd	r2, r3, [r7]
 802089c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 80208a0:	f7df feaa 	bl	80005f8 <__aeabi_dmul>
 80208a4:	4602      	mov	r2, r0
 80208a6:	460b      	mov	r3, r1
 80208a8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80208ac:	f7df fcee 	bl	800028c <__adddf3>
 80208b0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80208b4:	3601      	adds	r6, #1
 80208b6:	9b05      	ldr	r3, [sp, #20]
 80208b8:	429e      	cmp	r6, r3
 80208ba:	f1a7 0708 	sub.w	r7, r7, #8
 80208be:	ddeb      	ble.n	8020898 <__kernel_rem_pio2+0xa0>
 80208c0:	ed9d 7b02 	vldr	d7, [sp, #8]
 80208c4:	f108 0801 	add.w	r8, r8, #1
 80208c8:	ecaa 7b02 	vstmia	sl!, {d7}
 80208cc:	3508      	adds	r5, #8
 80208ce:	e7ca      	b.n	8020866 <__kernel_rem_pio2+0x6e>
 80208d0:	9b00      	ldr	r3, [sp, #0]
 80208d2:	f8dd 8000 	ldr.w	r8, [sp]
 80208d6:	aa0c      	add	r2, sp, #48	@ 0x30
 80208d8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80208dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80208de:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 80208e0:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 80208e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80208e6:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 80208ea:	930b      	str	r3, [sp, #44]	@ 0x2c
 80208ec:	ab98      	add	r3, sp, #608	@ 0x260
 80208ee:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80208f2:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 80208f6:	ed8d 7b02 	vstr	d7, [sp, #8]
 80208fa:	ac0c      	add	r4, sp, #48	@ 0x30
 80208fc:	ab70      	add	r3, sp, #448	@ 0x1c0
 80208fe:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 8020902:	46a1      	mov	r9, r4
 8020904:	46c2      	mov	sl, r8
 8020906:	f1ba 0f00 	cmp.w	sl, #0
 802090a:	f1a5 0508 	sub.w	r5, r5, #8
 802090e:	dc77      	bgt.n	8020a00 <__kernel_rem_pio2+0x208>
 8020910:	4658      	mov	r0, fp
 8020912:	ed9d 0b02 	vldr	d0, [sp, #8]
 8020916:	f7ff feef 	bl	80206f8 <scalbn>
 802091a:	ec57 6b10 	vmov	r6, r7, d0
 802091e:	2200      	movs	r2, #0
 8020920:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 8020924:	4630      	mov	r0, r6
 8020926:	4639      	mov	r1, r7
 8020928:	f7df fe66 	bl	80005f8 <__aeabi_dmul>
 802092c:	ec41 0b10 	vmov	d0, r0, r1
 8020930:	f7ff fa1e 	bl	801fd70 <floor>
 8020934:	4b75      	ldr	r3, [pc, #468]	@ (8020b0c <__kernel_rem_pio2+0x314>)
 8020936:	ec51 0b10 	vmov	r0, r1, d0
 802093a:	2200      	movs	r2, #0
 802093c:	f7df fe5c 	bl	80005f8 <__aeabi_dmul>
 8020940:	4602      	mov	r2, r0
 8020942:	460b      	mov	r3, r1
 8020944:	4630      	mov	r0, r6
 8020946:	4639      	mov	r1, r7
 8020948:	f7df fc9e 	bl	8000288 <__aeabi_dsub>
 802094c:	460f      	mov	r7, r1
 802094e:	4606      	mov	r6, r0
 8020950:	f7e0 f902 	bl	8000b58 <__aeabi_d2iz>
 8020954:	9002      	str	r0, [sp, #8]
 8020956:	f7df fde5 	bl	8000524 <__aeabi_i2d>
 802095a:	4602      	mov	r2, r0
 802095c:	460b      	mov	r3, r1
 802095e:	4630      	mov	r0, r6
 8020960:	4639      	mov	r1, r7
 8020962:	f7df fc91 	bl	8000288 <__aeabi_dsub>
 8020966:	f1bb 0f00 	cmp.w	fp, #0
 802096a:	4606      	mov	r6, r0
 802096c:	460f      	mov	r7, r1
 802096e:	dd6c      	ble.n	8020a4a <__kernel_rem_pio2+0x252>
 8020970:	f108 31ff 	add.w	r1, r8, #4294967295
 8020974:	ab0c      	add	r3, sp, #48	@ 0x30
 8020976:	9d02      	ldr	r5, [sp, #8]
 8020978:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 802097c:	f1cb 0018 	rsb	r0, fp, #24
 8020980:	fa43 f200 	asr.w	r2, r3, r0
 8020984:	4415      	add	r5, r2
 8020986:	4082      	lsls	r2, r0
 8020988:	1a9b      	subs	r3, r3, r2
 802098a:	aa0c      	add	r2, sp, #48	@ 0x30
 802098c:	9502      	str	r5, [sp, #8]
 802098e:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8020992:	f1cb 0217 	rsb	r2, fp, #23
 8020996:	fa43 f902 	asr.w	r9, r3, r2
 802099a:	f1b9 0f00 	cmp.w	r9, #0
 802099e:	dd64      	ble.n	8020a6a <__kernel_rem_pio2+0x272>
 80209a0:	9b02      	ldr	r3, [sp, #8]
 80209a2:	2200      	movs	r2, #0
 80209a4:	3301      	adds	r3, #1
 80209a6:	9302      	str	r3, [sp, #8]
 80209a8:	4615      	mov	r5, r2
 80209aa:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 80209ae:	4590      	cmp	r8, r2
 80209b0:	f300 80b8 	bgt.w	8020b24 <__kernel_rem_pio2+0x32c>
 80209b4:	f1bb 0f00 	cmp.w	fp, #0
 80209b8:	dd07      	ble.n	80209ca <__kernel_rem_pio2+0x1d2>
 80209ba:	f1bb 0f01 	cmp.w	fp, #1
 80209be:	f000 80bf 	beq.w	8020b40 <__kernel_rem_pio2+0x348>
 80209c2:	f1bb 0f02 	cmp.w	fp, #2
 80209c6:	f000 80c6 	beq.w	8020b56 <__kernel_rem_pio2+0x35e>
 80209ca:	f1b9 0f02 	cmp.w	r9, #2
 80209ce:	d14c      	bne.n	8020a6a <__kernel_rem_pio2+0x272>
 80209d0:	4632      	mov	r2, r6
 80209d2:	463b      	mov	r3, r7
 80209d4:	494e      	ldr	r1, [pc, #312]	@ (8020b10 <__kernel_rem_pio2+0x318>)
 80209d6:	2000      	movs	r0, #0
 80209d8:	f7df fc56 	bl	8000288 <__aeabi_dsub>
 80209dc:	4606      	mov	r6, r0
 80209de:	460f      	mov	r7, r1
 80209e0:	2d00      	cmp	r5, #0
 80209e2:	d042      	beq.n	8020a6a <__kernel_rem_pio2+0x272>
 80209e4:	4658      	mov	r0, fp
 80209e6:	ed9f 0b46 	vldr	d0, [pc, #280]	@ 8020b00 <__kernel_rem_pio2+0x308>
 80209ea:	f7ff fe85 	bl	80206f8 <scalbn>
 80209ee:	4630      	mov	r0, r6
 80209f0:	4639      	mov	r1, r7
 80209f2:	ec53 2b10 	vmov	r2, r3, d0
 80209f6:	f7df fc47 	bl	8000288 <__aeabi_dsub>
 80209fa:	4606      	mov	r6, r0
 80209fc:	460f      	mov	r7, r1
 80209fe:	e034      	b.n	8020a6a <__kernel_rem_pio2+0x272>
 8020a00:	4b44      	ldr	r3, [pc, #272]	@ (8020b14 <__kernel_rem_pio2+0x31c>)
 8020a02:	2200      	movs	r2, #0
 8020a04:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020a08:	f7df fdf6 	bl	80005f8 <__aeabi_dmul>
 8020a0c:	f7e0 f8a4 	bl	8000b58 <__aeabi_d2iz>
 8020a10:	f7df fd88 	bl	8000524 <__aeabi_i2d>
 8020a14:	4b40      	ldr	r3, [pc, #256]	@ (8020b18 <__kernel_rem_pio2+0x320>)
 8020a16:	2200      	movs	r2, #0
 8020a18:	4606      	mov	r6, r0
 8020a1a:	460f      	mov	r7, r1
 8020a1c:	f7df fdec 	bl	80005f8 <__aeabi_dmul>
 8020a20:	4602      	mov	r2, r0
 8020a22:	460b      	mov	r3, r1
 8020a24:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020a28:	f7df fc2e 	bl	8000288 <__aeabi_dsub>
 8020a2c:	f7e0 f894 	bl	8000b58 <__aeabi_d2iz>
 8020a30:	e9d5 2300 	ldrd	r2, r3, [r5]
 8020a34:	f849 0b04 	str.w	r0, [r9], #4
 8020a38:	4639      	mov	r1, r7
 8020a3a:	4630      	mov	r0, r6
 8020a3c:	f7df fc26 	bl	800028c <__adddf3>
 8020a40:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020a44:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8020a48:	e75d      	b.n	8020906 <__kernel_rem_pio2+0x10e>
 8020a4a:	d107      	bne.n	8020a5c <__kernel_rem_pio2+0x264>
 8020a4c:	f108 33ff 	add.w	r3, r8, #4294967295
 8020a50:	aa0c      	add	r2, sp, #48	@ 0x30
 8020a52:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8020a56:	ea4f 59e3 	mov.w	r9, r3, asr #23
 8020a5a:	e79e      	b.n	802099a <__kernel_rem_pio2+0x1a2>
 8020a5c:	4b2f      	ldr	r3, [pc, #188]	@ (8020b1c <__kernel_rem_pio2+0x324>)
 8020a5e:	2200      	movs	r2, #0
 8020a60:	f7e0 f850 	bl	8000b04 <__aeabi_dcmpge>
 8020a64:	2800      	cmp	r0, #0
 8020a66:	d143      	bne.n	8020af0 <__kernel_rem_pio2+0x2f8>
 8020a68:	4681      	mov	r9, r0
 8020a6a:	2200      	movs	r2, #0
 8020a6c:	2300      	movs	r3, #0
 8020a6e:	4630      	mov	r0, r6
 8020a70:	4639      	mov	r1, r7
 8020a72:	f7e0 f829 	bl	8000ac8 <__aeabi_dcmpeq>
 8020a76:	2800      	cmp	r0, #0
 8020a78:	f000 80bf 	beq.w	8020bfa <__kernel_rem_pio2+0x402>
 8020a7c:	f108 33ff 	add.w	r3, r8, #4294967295
 8020a80:	2200      	movs	r2, #0
 8020a82:	9900      	ldr	r1, [sp, #0]
 8020a84:	428b      	cmp	r3, r1
 8020a86:	da6e      	bge.n	8020b66 <__kernel_rem_pio2+0x36e>
 8020a88:	2a00      	cmp	r2, #0
 8020a8a:	f000 8089 	beq.w	8020ba0 <__kernel_rem_pio2+0x3a8>
 8020a8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020a92:	ab0c      	add	r3, sp, #48	@ 0x30
 8020a94:	f1ab 0b18 	sub.w	fp, fp, #24
 8020a98:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 8020a9c:	2b00      	cmp	r3, #0
 8020a9e:	d0f6      	beq.n	8020a8e <__kernel_rem_pio2+0x296>
 8020aa0:	4658      	mov	r0, fp
 8020aa2:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8020b00 <__kernel_rem_pio2+0x308>
 8020aa6:	f7ff fe27 	bl	80206f8 <scalbn>
 8020aaa:	f108 0301 	add.w	r3, r8, #1
 8020aae:	00da      	lsls	r2, r3, #3
 8020ab0:	9205      	str	r2, [sp, #20]
 8020ab2:	ec55 4b10 	vmov	r4, r5, d0
 8020ab6:	aa70      	add	r2, sp, #448	@ 0x1c0
 8020ab8:	f8df b058 	ldr.w	fp, [pc, #88]	@ 8020b14 <__kernel_rem_pio2+0x31c>
 8020abc:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8020ac0:	4646      	mov	r6, r8
 8020ac2:	f04f 0a00 	mov.w	sl, #0
 8020ac6:	2e00      	cmp	r6, #0
 8020ac8:	f280 80cf 	bge.w	8020c6a <__kernel_rem_pio2+0x472>
 8020acc:	4644      	mov	r4, r8
 8020ace:	2c00      	cmp	r4, #0
 8020ad0:	f2c0 80fd 	blt.w	8020cce <__kernel_rem_pio2+0x4d6>
 8020ad4:	4b12      	ldr	r3, [pc, #72]	@ (8020b20 <__kernel_rem_pio2+0x328>)
 8020ad6:	461f      	mov	r7, r3
 8020ad8:	ab70      	add	r3, sp, #448	@ 0x1c0
 8020ada:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8020ade:	9306      	str	r3, [sp, #24]
 8020ae0:	f04f 0a00 	mov.w	sl, #0
 8020ae4:	f04f 0b00 	mov.w	fp, #0
 8020ae8:	2600      	movs	r6, #0
 8020aea:	eba8 0504 	sub.w	r5, r8, r4
 8020aee:	e0e2      	b.n	8020cb6 <__kernel_rem_pio2+0x4be>
 8020af0:	f04f 0902 	mov.w	r9, #2
 8020af4:	e754      	b.n	80209a0 <__kernel_rem_pio2+0x1a8>
 8020af6:	bf00      	nop
	...
 8020b04:	3ff00000 	.word	0x3ff00000
 8020b08:	08021bf8 	.word	0x08021bf8
 8020b0c:	40200000 	.word	0x40200000
 8020b10:	3ff00000 	.word	0x3ff00000
 8020b14:	3e700000 	.word	0x3e700000
 8020b18:	41700000 	.word	0x41700000
 8020b1c:	3fe00000 	.word	0x3fe00000
 8020b20:	08021bb8 	.word	0x08021bb8
 8020b24:	f854 3b04 	ldr.w	r3, [r4], #4
 8020b28:	b945      	cbnz	r5, 8020b3c <__kernel_rem_pio2+0x344>
 8020b2a:	b123      	cbz	r3, 8020b36 <__kernel_rem_pio2+0x33e>
 8020b2c:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8020b30:	f844 3c04 	str.w	r3, [r4, #-4]
 8020b34:	2301      	movs	r3, #1
 8020b36:	3201      	adds	r2, #1
 8020b38:	461d      	mov	r5, r3
 8020b3a:	e738      	b.n	80209ae <__kernel_rem_pio2+0x1b6>
 8020b3c:	1acb      	subs	r3, r1, r3
 8020b3e:	e7f7      	b.n	8020b30 <__kernel_rem_pio2+0x338>
 8020b40:	f108 32ff 	add.w	r2, r8, #4294967295
 8020b44:	ab0c      	add	r3, sp, #48	@ 0x30
 8020b46:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020b4a:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8020b4e:	a90c      	add	r1, sp, #48	@ 0x30
 8020b50:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8020b54:	e739      	b.n	80209ca <__kernel_rem_pio2+0x1d2>
 8020b56:	f108 32ff 	add.w	r2, r8, #4294967295
 8020b5a:	ab0c      	add	r3, sp, #48	@ 0x30
 8020b5c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8020b60:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8020b64:	e7f3      	b.n	8020b4e <__kernel_rem_pio2+0x356>
 8020b66:	a90c      	add	r1, sp, #48	@ 0x30
 8020b68:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8020b6c:	3b01      	subs	r3, #1
 8020b6e:	430a      	orrs	r2, r1
 8020b70:	e787      	b.n	8020a82 <__kernel_rem_pio2+0x28a>
 8020b72:	3401      	adds	r4, #1
 8020b74:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8020b78:	2a00      	cmp	r2, #0
 8020b7a:	d0fa      	beq.n	8020b72 <__kernel_rem_pio2+0x37a>
 8020b7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020b7e:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8020b82:	eb0d 0503 	add.w	r5, sp, r3
 8020b86:	9b06      	ldr	r3, [sp, #24]
 8020b88:	aa20      	add	r2, sp, #128	@ 0x80
 8020b8a:	4443      	add	r3, r8
 8020b8c:	f108 0701 	add.w	r7, r8, #1
 8020b90:	3d98      	subs	r5, #152	@ 0x98
 8020b92:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 8020b96:	4444      	add	r4, r8
 8020b98:	42bc      	cmp	r4, r7
 8020b9a:	da04      	bge.n	8020ba6 <__kernel_rem_pio2+0x3ae>
 8020b9c:	46a0      	mov	r8, r4
 8020b9e:	e6a2      	b.n	80208e6 <__kernel_rem_pio2+0xee>
 8020ba0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020ba2:	2401      	movs	r4, #1
 8020ba4:	e7e6      	b.n	8020b74 <__kernel_rem_pio2+0x37c>
 8020ba6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020ba8:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8020bac:	f7df fcba 	bl	8000524 <__aeabi_i2d>
 8020bb0:	ed9f 7bb1 	vldr	d7, [pc, #708]	@ 8020e78 <__kernel_rem_pio2+0x680>
 8020bb4:	e8e6 0102 	strd	r0, r1, [r6], #8
 8020bb8:	ed8d 7b02 	vstr	d7, [sp, #8]
 8020bbc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8020bc0:	46b2      	mov	sl, r6
 8020bc2:	f04f 0800 	mov.w	r8, #0
 8020bc6:	9b05      	ldr	r3, [sp, #20]
 8020bc8:	4598      	cmp	r8, r3
 8020bca:	dd05      	ble.n	8020bd8 <__kernel_rem_pio2+0x3e0>
 8020bcc:	ed9d 7b02 	vldr	d7, [sp, #8]
 8020bd0:	3701      	adds	r7, #1
 8020bd2:	eca5 7b02 	vstmia	r5!, {d7}
 8020bd6:	e7df      	b.n	8020b98 <__kernel_rem_pio2+0x3a0>
 8020bd8:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 8020bdc:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8020be0:	f7df fd0a 	bl	80005f8 <__aeabi_dmul>
 8020be4:	4602      	mov	r2, r0
 8020be6:	460b      	mov	r3, r1
 8020be8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020bec:	f7df fb4e 	bl	800028c <__adddf3>
 8020bf0:	f108 0801 	add.w	r8, r8, #1
 8020bf4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8020bf8:	e7e5      	b.n	8020bc6 <__kernel_rem_pio2+0x3ce>
 8020bfa:	f1cb 0000 	rsb	r0, fp, #0
 8020bfe:	ec47 6b10 	vmov	d0, r6, r7
 8020c02:	f7ff fd79 	bl	80206f8 <scalbn>
 8020c06:	ec55 4b10 	vmov	r4, r5, d0
 8020c0a:	4b9d      	ldr	r3, [pc, #628]	@ (8020e80 <__kernel_rem_pio2+0x688>)
 8020c0c:	2200      	movs	r2, #0
 8020c0e:	4620      	mov	r0, r4
 8020c10:	4629      	mov	r1, r5
 8020c12:	f7df ff77 	bl	8000b04 <__aeabi_dcmpge>
 8020c16:	b300      	cbz	r0, 8020c5a <__kernel_rem_pio2+0x462>
 8020c18:	4b9a      	ldr	r3, [pc, #616]	@ (8020e84 <__kernel_rem_pio2+0x68c>)
 8020c1a:	2200      	movs	r2, #0
 8020c1c:	4620      	mov	r0, r4
 8020c1e:	4629      	mov	r1, r5
 8020c20:	f7df fcea 	bl	80005f8 <__aeabi_dmul>
 8020c24:	f7df ff98 	bl	8000b58 <__aeabi_d2iz>
 8020c28:	4606      	mov	r6, r0
 8020c2a:	f7df fc7b 	bl	8000524 <__aeabi_i2d>
 8020c2e:	4b94      	ldr	r3, [pc, #592]	@ (8020e80 <__kernel_rem_pio2+0x688>)
 8020c30:	2200      	movs	r2, #0
 8020c32:	f7df fce1 	bl	80005f8 <__aeabi_dmul>
 8020c36:	460b      	mov	r3, r1
 8020c38:	4602      	mov	r2, r0
 8020c3a:	4629      	mov	r1, r5
 8020c3c:	4620      	mov	r0, r4
 8020c3e:	f7df fb23 	bl	8000288 <__aeabi_dsub>
 8020c42:	f7df ff89 	bl	8000b58 <__aeabi_d2iz>
 8020c46:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c48:	f10b 0b18 	add.w	fp, fp, #24
 8020c4c:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8020c50:	f108 0801 	add.w	r8, r8, #1
 8020c54:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 8020c58:	e722      	b.n	8020aa0 <__kernel_rem_pio2+0x2a8>
 8020c5a:	4620      	mov	r0, r4
 8020c5c:	4629      	mov	r1, r5
 8020c5e:	f7df ff7b 	bl	8000b58 <__aeabi_d2iz>
 8020c62:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c64:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 8020c68:	e71a      	b.n	8020aa0 <__kernel_rem_pio2+0x2a8>
 8020c6a:	ab0c      	add	r3, sp, #48	@ 0x30
 8020c6c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8020c70:	f7df fc58 	bl	8000524 <__aeabi_i2d>
 8020c74:	4622      	mov	r2, r4
 8020c76:	462b      	mov	r3, r5
 8020c78:	f7df fcbe 	bl	80005f8 <__aeabi_dmul>
 8020c7c:	4652      	mov	r2, sl
 8020c7e:	e967 0102 	strd	r0, r1, [r7, #-8]!
 8020c82:	465b      	mov	r3, fp
 8020c84:	4620      	mov	r0, r4
 8020c86:	4629      	mov	r1, r5
 8020c88:	f7df fcb6 	bl	80005f8 <__aeabi_dmul>
 8020c8c:	3e01      	subs	r6, #1
 8020c8e:	4604      	mov	r4, r0
 8020c90:	460d      	mov	r5, r1
 8020c92:	e718      	b.n	8020ac6 <__kernel_rem_pio2+0x2ce>
 8020c94:	9906      	ldr	r1, [sp, #24]
 8020c96:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 8020c9a:	9106      	str	r1, [sp, #24]
 8020c9c:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 8020ca0:	f7df fcaa 	bl	80005f8 <__aeabi_dmul>
 8020ca4:	4602      	mov	r2, r0
 8020ca6:	460b      	mov	r3, r1
 8020ca8:	4650      	mov	r0, sl
 8020caa:	4659      	mov	r1, fp
 8020cac:	f7df faee 	bl	800028c <__adddf3>
 8020cb0:	3601      	adds	r6, #1
 8020cb2:	4682      	mov	sl, r0
 8020cb4:	468b      	mov	fp, r1
 8020cb6:	9b00      	ldr	r3, [sp, #0]
 8020cb8:	429e      	cmp	r6, r3
 8020cba:	dc01      	bgt.n	8020cc0 <__kernel_rem_pio2+0x4c8>
 8020cbc:	42b5      	cmp	r5, r6
 8020cbe:	dae9      	bge.n	8020c94 <__kernel_rem_pio2+0x49c>
 8020cc0:	ab48      	add	r3, sp, #288	@ 0x120
 8020cc2:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8020cc6:	e9c5 ab00 	strd	sl, fp, [r5]
 8020cca:	3c01      	subs	r4, #1
 8020ccc:	e6ff      	b.n	8020ace <__kernel_rem_pio2+0x2d6>
 8020cce:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8020cd0:	2b02      	cmp	r3, #2
 8020cd2:	dc0b      	bgt.n	8020cec <__kernel_rem_pio2+0x4f4>
 8020cd4:	2b00      	cmp	r3, #0
 8020cd6:	dc39      	bgt.n	8020d4c <__kernel_rem_pio2+0x554>
 8020cd8:	d05d      	beq.n	8020d96 <__kernel_rem_pio2+0x59e>
 8020cda:	9b02      	ldr	r3, [sp, #8]
 8020cdc:	f003 0007 	and.w	r0, r3, #7
 8020ce0:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 8020ce4:	ecbd 8b02 	vpop	{d8}
 8020ce8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cec:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8020cee:	2b03      	cmp	r3, #3
 8020cf0:	d1f3      	bne.n	8020cda <__kernel_rem_pio2+0x4e2>
 8020cf2:	9b05      	ldr	r3, [sp, #20]
 8020cf4:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8020cf8:	eb0d 0403 	add.w	r4, sp, r3
 8020cfc:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8020d00:	4625      	mov	r5, r4
 8020d02:	46c2      	mov	sl, r8
 8020d04:	f1ba 0f00 	cmp.w	sl, #0
 8020d08:	f1a5 0508 	sub.w	r5, r5, #8
 8020d0c:	dc6b      	bgt.n	8020de6 <__kernel_rem_pio2+0x5ee>
 8020d0e:	4645      	mov	r5, r8
 8020d10:	2d01      	cmp	r5, #1
 8020d12:	f1a4 0408 	sub.w	r4, r4, #8
 8020d16:	f300 8087 	bgt.w	8020e28 <__kernel_rem_pio2+0x630>
 8020d1a:	9c05      	ldr	r4, [sp, #20]
 8020d1c:	ab48      	add	r3, sp, #288	@ 0x120
 8020d1e:	441c      	add	r4, r3
 8020d20:	2000      	movs	r0, #0
 8020d22:	2100      	movs	r1, #0
 8020d24:	f1b8 0f01 	cmp.w	r8, #1
 8020d28:	f300 809c 	bgt.w	8020e64 <__kernel_rem_pio2+0x66c>
 8020d2c:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	@ 0x120
 8020d30:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	@ 0x128
 8020d34:	f1b9 0f00 	cmp.w	r9, #0
 8020d38:	f040 80a6 	bne.w	8020e88 <__kernel_rem_pio2+0x690>
 8020d3c:	9b04      	ldr	r3, [sp, #16]
 8020d3e:	e9c3 7800 	strd	r7, r8, [r3]
 8020d42:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8020d46:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8020d4a:	e7c6      	b.n	8020cda <__kernel_rem_pio2+0x4e2>
 8020d4c:	9d05      	ldr	r5, [sp, #20]
 8020d4e:	ab48      	add	r3, sp, #288	@ 0x120
 8020d50:	441d      	add	r5, r3
 8020d52:	4644      	mov	r4, r8
 8020d54:	2000      	movs	r0, #0
 8020d56:	2100      	movs	r1, #0
 8020d58:	2c00      	cmp	r4, #0
 8020d5a:	da35      	bge.n	8020dc8 <__kernel_rem_pio2+0x5d0>
 8020d5c:	f1b9 0f00 	cmp.w	r9, #0
 8020d60:	d038      	beq.n	8020dd4 <__kernel_rem_pio2+0x5dc>
 8020d62:	4602      	mov	r2, r0
 8020d64:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020d68:	9c04      	ldr	r4, [sp, #16]
 8020d6a:	e9c4 2300 	strd	r2, r3, [r4]
 8020d6e:	4602      	mov	r2, r0
 8020d70:	460b      	mov	r3, r1
 8020d72:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 8020d76:	f7df fa87 	bl	8000288 <__aeabi_dsub>
 8020d7a:	ad4a      	add	r5, sp, #296	@ 0x128
 8020d7c:	2401      	movs	r4, #1
 8020d7e:	45a0      	cmp	r8, r4
 8020d80:	da2b      	bge.n	8020dda <__kernel_rem_pio2+0x5e2>
 8020d82:	f1b9 0f00 	cmp.w	r9, #0
 8020d86:	d002      	beq.n	8020d8e <__kernel_rem_pio2+0x596>
 8020d88:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020d8c:	4619      	mov	r1, r3
 8020d8e:	9b04      	ldr	r3, [sp, #16]
 8020d90:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8020d94:	e7a1      	b.n	8020cda <__kernel_rem_pio2+0x4e2>
 8020d96:	9c05      	ldr	r4, [sp, #20]
 8020d98:	ab48      	add	r3, sp, #288	@ 0x120
 8020d9a:	441c      	add	r4, r3
 8020d9c:	2000      	movs	r0, #0
 8020d9e:	2100      	movs	r1, #0
 8020da0:	f1b8 0f00 	cmp.w	r8, #0
 8020da4:	da09      	bge.n	8020dba <__kernel_rem_pio2+0x5c2>
 8020da6:	f1b9 0f00 	cmp.w	r9, #0
 8020daa:	d002      	beq.n	8020db2 <__kernel_rem_pio2+0x5ba>
 8020dac:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020db0:	4619      	mov	r1, r3
 8020db2:	9b04      	ldr	r3, [sp, #16]
 8020db4:	e9c3 0100 	strd	r0, r1, [r3]
 8020db8:	e78f      	b.n	8020cda <__kernel_rem_pio2+0x4e2>
 8020dba:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8020dbe:	f7df fa65 	bl	800028c <__adddf3>
 8020dc2:	f108 38ff 	add.w	r8, r8, #4294967295
 8020dc6:	e7eb      	b.n	8020da0 <__kernel_rem_pio2+0x5a8>
 8020dc8:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8020dcc:	f7df fa5e 	bl	800028c <__adddf3>
 8020dd0:	3c01      	subs	r4, #1
 8020dd2:	e7c1      	b.n	8020d58 <__kernel_rem_pio2+0x560>
 8020dd4:	4602      	mov	r2, r0
 8020dd6:	460b      	mov	r3, r1
 8020dd8:	e7c6      	b.n	8020d68 <__kernel_rem_pio2+0x570>
 8020dda:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8020dde:	f7df fa55 	bl	800028c <__adddf3>
 8020de2:	3401      	adds	r4, #1
 8020de4:	e7cb      	b.n	8020d7e <__kernel_rem_pio2+0x586>
 8020de6:	ed95 7b00 	vldr	d7, [r5]
 8020dea:	ed8d 7b00 	vstr	d7, [sp]
 8020dee:	ed95 7b02 	vldr	d7, [r5, #8]
 8020df2:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020df6:	ec53 2b17 	vmov	r2, r3, d7
 8020dfa:	ed8d 7b06 	vstr	d7, [sp, #24]
 8020dfe:	f7df fa45 	bl	800028c <__adddf3>
 8020e02:	4602      	mov	r2, r0
 8020e04:	460b      	mov	r3, r1
 8020e06:	4606      	mov	r6, r0
 8020e08:	460f      	mov	r7, r1
 8020e0a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020e0e:	f7df fa3b 	bl	8000288 <__aeabi_dsub>
 8020e12:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8020e16:	f7df fa39 	bl	800028c <__adddf3>
 8020e1a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020e1e:	e9c5 0102 	strd	r0, r1, [r5, #8]
 8020e22:	e9c5 6700 	strd	r6, r7, [r5]
 8020e26:	e76d      	b.n	8020d04 <__kernel_rem_pio2+0x50c>
 8020e28:	ed94 7b00 	vldr	d7, [r4]
 8020e2c:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 8020e30:	ec51 0b17 	vmov	r0, r1, d7
 8020e34:	4652      	mov	r2, sl
 8020e36:	465b      	mov	r3, fp
 8020e38:	ed8d 7b00 	vstr	d7, [sp]
 8020e3c:	f7df fa26 	bl	800028c <__adddf3>
 8020e40:	4602      	mov	r2, r0
 8020e42:	460b      	mov	r3, r1
 8020e44:	4606      	mov	r6, r0
 8020e46:	460f      	mov	r7, r1
 8020e48:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020e4c:	f7df fa1c 	bl	8000288 <__aeabi_dsub>
 8020e50:	4652      	mov	r2, sl
 8020e52:	465b      	mov	r3, fp
 8020e54:	f7df fa1a 	bl	800028c <__adddf3>
 8020e58:	3d01      	subs	r5, #1
 8020e5a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8020e5e:	e9c4 6700 	strd	r6, r7, [r4]
 8020e62:	e755      	b.n	8020d10 <__kernel_rem_pio2+0x518>
 8020e64:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8020e68:	f7df fa10 	bl	800028c <__adddf3>
 8020e6c:	f108 38ff 	add.w	r8, r8, #4294967295
 8020e70:	e758      	b.n	8020d24 <__kernel_rem_pio2+0x52c>
 8020e72:	bf00      	nop
 8020e74:	f3af 8000 	nop.w
	...
 8020e80:	41700000 	.word	0x41700000
 8020e84:	3e700000 	.word	0x3e700000
 8020e88:	9b04      	ldr	r3, [sp, #16]
 8020e8a:	9a04      	ldr	r2, [sp, #16]
 8020e8c:	601f      	str	r7, [r3, #0]
 8020e8e:	f108 4400 	add.w	r4, r8, #2147483648	@ 0x80000000
 8020e92:	605c      	str	r4, [r3, #4]
 8020e94:	609d      	str	r5, [r3, #8]
 8020e96:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8020e9a:	60d3      	str	r3, [r2, #12]
 8020e9c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8020ea0:	6110      	str	r0, [r2, #16]
 8020ea2:	6153      	str	r3, [r2, #20]
 8020ea4:	e719      	b.n	8020cda <__kernel_rem_pio2+0x4e2>
 8020ea6:	bf00      	nop

08020ea8 <_init>:
 8020ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020eaa:	bf00      	nop
 8020eac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020eae:	bc08      	pop	{r3}
 8020eb0:	469e      	mov	lr, r3
 8020eb2:	4770      	bx	lr

08020eb4 <_fini>:
 8020eb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020eb6:	bf00      	nop
 8020eb8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020eba:	bc08      	pop	{r3}
 8020ebc:	469e      	mov	lr, r3
 8020ebe:	4770      	bx	lr
