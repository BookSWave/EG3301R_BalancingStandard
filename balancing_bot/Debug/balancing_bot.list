
balancing_bot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00024488  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000de8  08024618  08024618  00025618  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08025400  08025400  00027808  2**0
                  CONTENTS
  4 .ARM          00000008  08025400  08025400  00026400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08025408  08025408  00027808  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08025408  08025408  00026408  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08025410  08025410  00026410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000808  20000000  08025414  00027000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000ce50  20000808  08025c1c  00027808  2**3
                  ALLOC
 10 ._user_heap_stack 0000d000  2000d658  08025c1c  00028658  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00027808  2**0
                  CONTENTS, READONLY
 12 .debug_info   00040b30  00000000  00000000  00027838  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000b412  00000000  00000000  00068368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002fc8  00000000  00000000  00073780  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000244c  00000000  00000000  00076748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0003afff  00000000  00000000  00078b94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000531bb  00000000  00000000  000b3b93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0010356c  00000000  00000000  00106d4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000086  00000000  00000000  0020a2ba  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000d714  00000000  00000000  0020a340  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  00217a54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000808 	.word	0x20000808
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08024600 	.word	0x08024600

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000080c 	.word	0x2000080c
 80001cc:	08024600 	.word	0x08024600

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b96a 	b.w	8000f74 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d14e      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc4:	4694      	mov	ip, r2
 8000cc6:	458c      	cmp	ip, r1
 8000cc8:	4686      	mov	lr, r0
 8000cca:	fab2 f282 	clz	r2, r2
 8000cce:	d962      	bls.n	8000d96 <__udivmoddi4+0xde>
 8000cd0:	b14a      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd2:	f1c2 0320 	rsb	r3, r2, #32
 8000cd6:	4091      	lsls	r1, r2
 8000cd8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ce6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cea:	fa1f f68c 	uxth.w	r6, ip
 8000cee:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cf2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfe:	fb04 f106 	mul.w	r1, r4, r6
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f104 30ff 	add.w	r0, r4, #4294967295
 8000d0e:	f080 8112 	bcs.w	8000f36 <__udivmoddi4+0x27e>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 810f 	bls.w	8000f36 <__udivmoddi4+0x27e>
 8000d18:	3c02      	subs	r4, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a59      	subs	r1, r3, r1
 8000d1e:	fa1f f38e 	uxth.w	r3, lr
 8000d22:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d26:	fb07 1110 	mls	r1, r7, r0, r1
 8000d2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d2e:	fb00 f606 	mul.w	r6, r0, r6
 8000d32:	429e      	cmp	r6, r3
 8000d34:	d90a      	bls.n	8000d4c <__udivmoddi4+0x94>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d3e:	f080 80fc 	bcs.w	8000f3a <__udivmoddi4+0x282>
 8000d42:	429e      	cmp	r6, r3
 8000d44:	f240 80f9 	bls.w	8000f3a <__udivmoddi4+0x282>
 8000d48:	4463      	add	r3, ip
 8000d4a:	3802      	subs	r0, #2
 8000d4c:	1b9b      	subs	r3, r3, r6
 8000d4e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d52:	2100      	movs	r1, #0
 8000d54:	b11d      	cbz	r5, 8000d5e <__udivmoddi4+0xa6>
 8000d56:	40d3      	lsrs	r3, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d905      	bls.n	8000d72 <__udivmoddi4+0xba>
 8000d66:	b10d      	cbz	r5, 8000d6c <__udivmoddi4+0xb4>
 8000d68:	e9c5 0100 	strd	r0, r1, [r5]
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e7f5      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d72:	fab3 f183 	clz	r1, r3
 8000d76:	2900      	cmp	r1, #0
 8000d78:	d146      	bne.n	8000e08 <__udivmoddi4+0x150>
 8000d7a:	42a3      	cmp	r3, r4
 8000d7c:	d302      	bcc.n	8000d84 <__udivmoddi4+0xcc>
 8000d7e:	4290      	cmp	r0, r2
 8000d80:	f0c0 80f0 	bcc.w	8000f64 <__udivmoddi4+0x2ac>
 8000d84:	1a86      	subs	r6, r0, r2
 8000d86:	eb64 0303 	sbc.w	r3, r4, r3
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	d0e6      	beq.n	8000d5e <__udivmoddi4+0xa6>
 8000d90:	e9c5 6300 	strd	r6, r3, [r5]
 8000d94:	e7e3      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	f040 8090 	bne.w	8000ebc <__udivmoddi4+0x204>
 8000d9c:	eba1 040c 	sub.w	r4, r1, ip
 8000da0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000da4:	fa1f f78c 	uxth.w	r7, ip
 8000da8:	2101      	movs	r1, #1
 8000daa:	fbb4 f6f8 	udiv	r6, r4, r8
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb08 4416 	mls	r4, r8, r6, r4
 8000db6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000dba:	fb07 f006 	mul.w	r0, r7, r6
 8000dbe:	4298      	cmp	r0, r3
 8000dc0:	d908      	bls.n	8000dd4 <__udivmoddi4+0x11c>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f106 34ff 	add.w	r4, r6, #4294967295
 8000dca:	d202      	bcs.n	8000dd2 <__udivmoddi4+0x11a>
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	f200 80cd 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000dd2:	4626      	mov	r6, r4
 8000dd4:	1a1c      	subs	r4, r3, r0
 8000dd6:	fa1f f38e 	uxth.w	r3, lr
 8000dda:	fbb4 f0f8 	udiv	r0, r4, r8
 8000dde:	fb08 4410 	mls	r4, r8, r0, r4
 8000de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000de6:	fb00 f707 	mul.w	r7, r0, r7
 8000dea:	429f      	cmp	r7, r3
 8000dec:	d908      	bls.n	8000e00 <__udivmoddi4+0x148>
 8000dee:	eb1c 0303 	adds.w	r3, ip, r3
 8000df2:	f100 34ff 	add.w	r4, r0, #4294967295
 8000df6:	d202      	bcs.n	8000dfe <__udivmoddi4+0x146>
 8000df8:	429f      	cmp	r7, r3
 8000dfa:	f200 80b0 	bhi.w	8000f5e <__udivmoddi4+0x2a6>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	1bdb      	subs	r3, r3, r7
 8000e02:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e06:	e7a5      	b.n	8000d54 <__udivmoddi4+0x9c>
 8000e08:	f1c1 0620 	rsb	r6, r1, #32
 8000e0c:	408b      	lsls	r3, r1
 8000e0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000e12:	431f      	orrs	r7, r3
 8000e14:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e18:	fa04 f301 	lsl.w	r3, r4, r1
 8000e1c:	ea43 030c 	orr.w	r3, r3, ip
 8000e20:	40f4      	lsrs	r4, r6
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	0c38      	lsrs	r0, r7, #16
 8000e28:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e2c:	fbb4 fef0 	udiv	lr, r4, r0
 8000e30:	fa1f fc87 	uxth.w	ip, r7
 8000e34:	fb00 441e 	mls	r4, r0, lr, r4
 8000e38:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e3c:	fb0e f90c 	mul.w	r9, lr, ip
 8000e40:	45a1      	cmp	r9, r4
 8000e42:	fa02 f201 	lsl.w	r2, r2, r1
 8000e46:	d90a      	bls.n	8000e5e <__udivmoddi4+0x1a6>
 8000e48:	193c      	adds	r4, r7, r4
 8000e4a:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000e4e:	f080 8084 	bcs.w	8000f5a <__udivmoddi4+0x2a2>
 8000e52:	45a1      	cmp	r9, r4
 8000e54:	f240 8081 	bls.w	8000f5a <__udivmoddi4+0x2a2>
 8000e58:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e5c:	443c      	add	r4, r7
 8000e5e:	eba4 0409 	sub.w	r4, r4, r9
 8000e62:	fa1f f983 	uxth.w	r9, r3
 8000e66:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e6a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e6e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e72:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e76:	45a4      	cmp	ip, r4
 8000e78:	d907      	bls.n	8000e8a <__udivmoddi4+0x1d2>
 8000e7a:	193c      	adds	r4, r7, r4
 8000e7c:	f103 30ff 	add.w	r0, r3, #4294967295
 8000e80:	d267      	bcs.n	8000f52 <__udivmoddi4+0x29a>
 8000e82:	45a4      	cmp	ip, r4
 8000e84:	d965      	bls.n	8000f52 <__udivmoddi4+0x29a>
 8000e86:	3b02      	subs	r3, #2
 8000e88:	443c      	add	r4, r7
 8000e8a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e8e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e92:	eba4 040c 	sub.w	r4, r4, ip
 8000e96:	429c      	cmp	r4, r3
 8000e98:	46ce      	mov	lr, r9
 8000e9a:	469c      	mov	ip, r3
 8000e9c:	d351      	bcc.n	8000f42 <__udivmoddi4+0x28a>
 8000e9e:	d04e      	beq.n	8000f3e <__udivmoddi4+0x286>
 8000ea0:	b155      	cbz	r5, 8000eb8 <__udivmoddi4+0x200>
 8000ea2:	ebb8 030e 	subs.w	r3, r8, lr
 8000ea6:	eb64 040c 	sbc.w	r4, r4, ip
 8000eaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000eae:	40cb      	lsrs	r3, r1
 8000eb0:	431e      	orrs	r6, r3
 8000eb2:	40cc      	lsrs	r4, r1
 8000eb4:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	e750      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000ebc:	f1c2 0320 	rsb	r3, r2, #32
 8000ec0:	fa20 f103 	lsr.w	r1, r0, r3
 8000ec4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ec8:	fa24 f303 	lsr.w	r3, r4, r3
 8000ecc:	4094      	lsls	r4, r2
 8000ece:	430c      	orrs	r4, r1
 8000ed0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ed4:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ed8:	fa1f f78c 	uxth.w	r7, ip
 8000edc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ee0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ee4:	0c23      	lsrs	r3, r4, #16
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f107 	mul.w	r1, r0, r7
 8000eee:	4299      	cmp	r1, r3
 8000ef0:	d908      	bls.n	8000f04 <__udivmoddi4+0x24c>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 36ff 	add.w	r6, r0, #4294967295
 8000efa:	d22c      	bcs.n	8000f56 <__udivmoddi4+0x29e>
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d92a      	bls.n	8000f56 <__udivmoddi4+0x29e>
 8000f00:	3802      	subs	r0, #2
 8000f02:	4463      	add	r3, ip
 8000f04:	1a5b      	subs	r3, r3, r1
 8000f06:	b2a4      	uxth	r4, r4
 8000f08:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f0c:	fb08 3311 	mls	r3, r8, r1, r3
 8000f10:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f14:	fb01 f307 	mul.w	r3, r1, r7
 8000f18:	42a3      	cmp	r3, r4
 8000f1a:	d908      	bls.n	8000f2e <__udivmoddi4+0x276>
 8000f1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000f20:	f101 36ff 	add.w	r6, r1, #4294967295
 8000f24:	d213      	bcs.n	8000f4e <__udivmoddi4+0x296>
 8000f26:	42a3      	cmp	r3, r4
 8000f28:	d911      	bls.n	8000f4e <__udivmoddi4+0x296>
 8000f2a:	3902      	subs	r1, #2
 8000f2c:	4464      	add	r4, ip
 8000f2e:	1ae4      	subs	r4, r4, r3
 8000f30:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000f34:	e739      	b.n	8000daa <__udivmoddi4+0xf2>
 8000f36:	4604      	mov	r4, r0
 8000f38:	e6f0      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e706      	b.n	8000d4c <__udivmoddi4+0x94>
 8000f3e:	45c8      	cmp	r8, r9
 8000f40:	d2ae      	bcs.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f42:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f46:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f4a:	3801      	subs	r0, #1
 8000f4c:	e7a8      	b.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f4e:	4631      	mov	r1, r6
 8000f50:	e7ed      	b.n	8000f2e <__udivmoddi4+0x276>
 8000f52:	4603      	mov	r3, r0
 8000f54:	e799      	b.n	8000e8a <__udivmoddi4+0x1d2>
 8000f56:	4630      	mov	r0, r6
 8000f58:	e7d4      	b.n	8000f04 <__udivmoddi4+0x24c>
 8000f5a:	46d6      	mov	lr, sl
 8000f5c:	e77f      	b.n	8000e5e <__udivmoddi4+0x1a6>
 8000f5e:	4463      	add	r3, ip
 8000f60:	3802      	subs	r0, #2
 8000f62:	e74d      	b.n	8000e00 <__udivmoddi4+0x148>
 8000f64:	4606      	mov	r6, r0
 8000f66:	4623      	mov	r3, r4
 8000f68:	4608      	mov	r0, r1
 8000f6a:	e70f      	b.n	8000d8c <__udivmoddi4+0xd4>
 8000f6c:	3e02      	subs	r6, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	e730      	b.n	8000dd4 <__udivmoddi4+0x11c>
 8000f72:	bf00      	nop

08000f74 <__aeabi_idiv0>:
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop

08000f78 <get_CRC8_check_sum>:
 8000f78:	b480      	push	{r7}
 8000f7a:	b087      	sub	sp, #28
 8000f7c:	af00      	add	r7, sp, #0
 8000f7e:	60f8      	str	r0, [r7, #12]
 8000f80:	60b9      	str	r1, [r7, #8]
 8000f82:	4613      	mov	r3, r2
 8000f84:	71fb      	strb	r3, [r7, #7]
 8000f86:	e00a      	b.n	8000f9e <get_CRC8_check_sum+0x26>
 8000f88:	68fb      	ldr	r3, [r7, #12]
 8000f8a:	1c5a      	adds	r2, r3, #1
 8000f8c:	60fa      	str	r2, [r7, #12]
 8000f8e:	781a      	ldrb	r2, [r3, #0]
 8000f90:	79fb      	ldrb	r3, [r7, #7]
 8000f92:	4053      	eors	r3, r2
 8000f94:	75fb      	strb	r3, [r7, #23]
 8000f96:	7dfb      	ldrb	r3, [r7, #23]
 8000f98:	4a07      	ldr	r2, [pc, #28]	@ (8000fb8 <get_CRC8_check_sum+0x40>)
 8000f9a:	5cd3      	ldrb	r3, [r2, r3]
 8000f9c:	71fb      	strb	r3, [r7, #7]
 8000f9e:	68bb      	ldr	r3, [r7, #8]
 8000fa0:	1e5a      	subs	r2, r3, #1
 8000fa2:	60ba      	str	r2, [r7, #8]
 8000fa4:	2b00      	cmp	r3, #0
 8000fa6:	d1ef      	bne.n	8000f88 <get_CRC8_check_sum+0x10>
 8000fa8:	79fb      	ldrb	r3, [r7, #7]
 8000faa:	4618      	mov	r0, r3
 8000fac:	371c      	adds	r7, #28
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb4:	4770      	bx	lr
 8000fb6:	bf00      	nop
 8000fb8:	080247e8 	.word	0x080247e8

08000fbc <verify_CRC8_check_sum>:
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	b084      	sub	sp, #16
 8000fc0:	af00      	add	r7, sp, #0
 8000fc2:	6078      	str	r0, [r7, #4]
 8000fc4:	6039      	str	r1, [r7, #0]
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	73fb      	strb	r3, [r7, #15]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d002      	beq.n	8000fd6 <verify_CRC8_check_sum+0x1a>
 8000fd0:	683b      	ldr	r3, [r7, #0]
 8000fd2:	2b02      	cmp	r3, #2
 8000fd4:	d801      	bhi.n	8000fda <verify_CRC8_check_sum+0x1e>
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	e013      	b.n	8001002 <verify_CRC8_check_sum+0x46>
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	3b01      	subs	r3, #1
 8000fde:	22ff      	movs	r2, #255	@ 0xff
 8000fe0:	4619      	mov	r1, r3
 8000fe2:	6878      	ldr	r0, [r7, #4]
 8000fe4:	f7ff ffc8 	bl	8000f78 <get_CRC8_check_sum>
 8000fe8:	4603      	mov	r3, r0
 8000fea:	73fb      	strb	r3, [r7, #15]
 8000fec:	683b      	ldr	r3, [r7, #0]
 8000fee:	3b01      	subs	r3, #1
 8000ff0:	687a      	ldr	r2, [r7, #4]
 8000ff2:	4413      	add	r3, r2
 8000ff4:	781b      	ldrb	r3, [r3, #0]
 8000ff6:	7bfa      	ldrb	r2, [r7, #15]
 8000ff8:	429a      	cmp	r2, r3
 8000ffa:	bf0c      	ite	eq
 8000ffc:	2301      	moveq	r3, #1
 8000ffe:	2300      	movne	r3, #0
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4618      	mov	r0, r3
 8001004:	3710      	adds	r7, #16
 8001006:	46bd      	mov	sp, r7
 8001008:	bd80      	pop	{r7, pc}

0800100a <append_CRC8_check_sum>:
 800100a:	b580      	push	{r7, lr}
 800100c:	b084      	sub	sp, #16
 800100e:	af00      	add	r7, sp, #0
 8001010:	6078      	str	r0, [r7, #4]
 8001012:	6039      	str	r1, [r7, #0]
 8001014:	2300      	movs	r3, #0
 8001016:	73fb      	strb	r3, [r7, #15]
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	2b00      	cmp	r3, #0
 800101c:	d012      	beq.n	8001044 <append_CRC8_check_sum+0x3a>
 800101e:	683b      	ldr	r3, [r7, #0]
 8001020:	2b02      	cmp	r3, #2
 8001022:	d90f      	bls.n	8001044 <append_CRC8_check_sum+0x3a>
 8001024:	683b      	ldr	r3, [r7, #0]
 8001026:	3b01      	subs	r3, #1
 8001028:	22ff      	movs	r2, #255	@ 0xff
 800102a:	4619      	mov	r1, r3
 800102c:	6878      	ldr	r0, [r7, #4]
 800102e:	f7ff ffa3 	bl	8000f78 <get_CRC8_check_sum>
 8001032:	4603      	mov	r3, r0
 8001034:	73fb      	strb	r3, [r7, #15]
 8001036:	683b      	ldr	r3, [r7, #0]
 8001038:	3b01      	subs	r3, #1
 800103a:	687a      	ldr	r2, [r7, #4]
 800103c:	4413      	add	r3, r2
 800103e:	7bfa      	ldrb	r2, [r7, #15]
 8001040:	701a      	strb	r2, [r3, #0]
 8001042:	e000      	b.n	8001046 <append_CRC8_check_sum+0x3c>
 8001044:	bf00      	nop
 8001046:	3710      	adds	r7, #16
 8001048:	46bd      	mov	sp, r7
 800104a:	bd80      	pop	{r7, pc}

0800104c <get_CRC16_check_sum>:
 800104c:	b480      	push	{r7}
 800104e:	b087      	sub	sp, #28
 8001050:	af00      	add	r7, sp, #0
 8001052:	60f8      	str	r0, [r7, #12]
 8001054:	60b9      	str	r1, [r7, #8]
 8001056:	4613      	mov	r3, r2
 8001058:	80fb      	strh	r3, [r7, #6]
 800105a:	68fb      	ldr	r3, [r7, #12]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d113      	bne.n	8001088 <get_CRC16_check_sum+0x3c>
 8001060:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8001064:	e016      	b.n	8001094 <get_CRC16_check_sum+0x48>
 8001066:	68fb      	ldr	r3, [r7, #12]
 8001068:	1c5a      	adds	r2, r3, #1
 800106a:	60fa      	str	r2, [r7, #12]
 800106c:	781b      	ldrb	r3, [r3, #0]
 800106e:	75fb      	strb	r3, [r7, #23]
 8001070:	88fb      	ldrh	r3, [r7, #6]
 8001072:	0a1b      	lsrs	r3, r3, #8
 8001074:	b29a      	uxth	r2, r3
 8001076:	88f9      	ldrh	r1, [r7, #6]
 8001078:	7dfb      	ldrb	r3, [r7, #23]
 800107a:	404b      	eors	r3, r1
 800107c:	b2db      	uxtb	r3, r3
 800107e:	4908      	ldr	r1, [pc, #32]	@ (80010a0 <get_CRC16_check_sum+0x54>)
 8001080:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8001084:	4053      	eors	r3, r2
 8001086:	80fb      	strh	r3, [r7, #6]
 8001088:	68bb      	ldr	r3, [r7, #8]
 800108a:	1e5a      	subs	r2, r3, #1
 800108c:	60ba      	str	r2, [r7, #8]
 800108e:	2b00      	cmp	r3, #0
 8001090:	d1e9      	bne.n	8001066 <get_CRC16_check_sum+0x1a>
 8001092:	88fb      	ldrh	r3, [r7, #6]
 8001094:	4618      	mov	r0, r3
 8001096:	371c      	adds	r7, #28
 8001098:	46bd      	mov	sp, r7
 800109a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800109e:	4770      	bx	lr
 80010a0:	080248e8 	.word	0x080248e8

080010a4 <verify_CRC16_check_sum>:
 80010a4:	b580      	push	{r7, lr}
 80010a6:	b084      	sub	sp, #16
 80010a8:	af00      	add	r7, sp, #0
 80010aa:	6078      	str	r0, [r7, #4]
 80010ac:	6039      	str	r1, [r7, #0]
 80010ae:	2300      	movs	r3, #0
 80010b0:	81fb      	strh	r3, [r7, #14]
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d002      	beq.n	80010be <verify_CRC16_check_sum+0x1a>
 80010b8:	683b      	ldr	r3, [r7, #0]
 80010ba:	2b02      	cmp	r3, #2
 80010bc:	d801      	bhi.n	80010c2 <verify_CRC16_check_sum+0x1e>
 80010be:	2300      	movs	r3, #0
 80010c0:	e020      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 80010c2:	683b      	ldr	r3, [r7, #0]
 80010c4:	3b02      	subs	r3, #2
 80010c6:	4a11      	ldr	r2, [pc, #68]	@ (800110c <verify_CRC16_check_sum+0x68>)
 80010c8:	8812      	ldrh	r2, [r2, #0]
 80010ca:	4619      	mov	r1, r3
 80010cc:	6878      	ldr	r0, [r7, #4]
 80010ce:	f7ff ffbd 	bl	800104c <get_CRC16_check_sum>
 80010d2:	4603      	mov	r3, r0
 80010d4:	81fb      	strh	r3, [r7, #14]
 80010d6:	89fb      	ldrh	r3, [r7, #14]
 80010d8:	b2db      	uxtb	r3, r3
 80010da:	683a      	ldr	r2, [r7, #0]
 80010dc:	3a02      	subs	r2, #2
 80010de:	6879      	ldr	r1, [r7, #4]
 80010e0:	440a      	add	r2, r1
 80010e2:	7812      	ldrb	r2, [r2, #0]
 80010e4:	4293      	cmp	r3, r2
 80010e6:	d10c      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010e8:	89fb      	ldrh	r3, [r7, #14]
 80010ea:	0a1b      	lsrs	r3, r3, #8
 80010ec:	b29b      	uxth	r3, r3
 80010ee:	b2db      	uxtb	r3, r3
 80010f0:	683a      	ldr	r2, [r7, #0]
 80010f2:	3a01      	subs	r2, #1
 80010f4:	6879      	ldr	r1, [r7, #4]
 80010f6:	440a      	add	r2, r1
 80010f8:	7812      	ldrb	r2, [r2, #0]
 80010fa:	4293      	cmp	r3, r2
 80010fc:	d101      	bne.n	8001102 <verify_CRC16_check_sum+0x5e>
 80010fe:	2301      	movs	r3, #1
 8001100:	e000      	b.n	8001104 <verify_CRC16_check_sum+0x60>
 8001102:	2300      	movs	r3, #0
 8001104:	4618      	mov	r0, r3
 8001106:	3710      	adds	r7, #16
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}
 800110c:	20000000 	.word	0x20000000

08001110 <append_CRC16_check_sum>:
 8001110:	b580      	push	{r7, lr}
 8001112:	b084      	sub	sp, #16
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
 8001118:	6039      	str	r1, [r7, #0]
 800111a:	2300      	movs	r3, #0
 800111c:	81fb      	strh	r3, [r7, #14]
 800111e:	687b      	ldr	r3, [r7, #4]
 8001120:	2b00      	cmp	r3, #0
 8001122:	d01d      	beq.n	8001160 <append_CRC16_check_sum+0x50>
 8001124:	683b      	ldr	r3, [r7, #0]
 8001126:	2b02      	cmp	r3, #2
 8001128:	d91a      	bls.n	8001160 <append_CRC16_check_sum+0x50>
 800112a:	683b      	ldr	r3, [r7, #0]
 800112c:	3b02      	subs	r3, #2
 800112e:	4a0e      	ldr	r2, [pc, #56]	@ (8001168 <append_CRC16_check_sum+0x58>)
 8001130:	8812      	ldrh	r2, [r2, #0]
 8001132:	4619      	mov	r1, r3
 8001134:	6878      	ldr	r0, [r7, #4]
 8001136:	f7ff ff89 	bl	800104c <get_CRC16_check_sum>
 800113a:	4603      	mov	r3, r0
 800113c:	81fb      	strh	r3, [r7, #14]
 800113e:	683b      	ldr	r3, [r7, #0]
 8001140:	3b02      	subs	r3, #2
 8001142:	687a      	ldr	r2, [r7, #4]
 8001144:	4413      	add	r3, r2
 8001146:	89fa      	ldrh	r2, [r7, #14]
 8001148:	b2d2      	uxtb	r2, r2
 800114a:	701a      	strb	r2, [r3, #0]
 800114c:	89fb      	ldrh	r3, [r7, #14]
 800114e:	0a1b      	lsrs	r3, r3, #8
 8001150:	b299      	uxth	r1, r3
 8001152:	683b      	ldr	r3, [r7, #0]
 8001154:	3b01      	subs	r3, #1
 8001156:	687a      	ldr	r2, [r7, #4]
 8001158:	4413      	add	r3, r2
 800115a:	b2ca      	uxtb	r2, r1
 800115c:	701a      	strb	r2, [r3, #0]
 800115e:	e000      	b.n	8001162 <append_CRC16_check_sum+0x52>
 8001160:	bf00      	nop
 8001162:	3710      	adds	r7, #16
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	20000000 	.word	0x20000000

0800116c <buzzer>:
 800116c:	b480      	push	{r7}
 800116e:	b083      	sub	sp, #12
 8001170:	af00      	add	r7, sp, #0
 8001172:	4603      	mov	r3, r0
 8001174:	80fb      	strh	r3, [r7, #6]
 8001176:	88fb      	ldrh	r3, [r7, #6]
 8001178:	2b00      	cmp	r3, #0
 800117a:	d104      	bne.n	8001186 <buzzer+0x1a>
 800117c:	4b0b      	ldr	r3, [pc, #44]	@ (80011ac <buzzer+0x40>)
 800117e:	681b      	ldr	r3, [r3, #0]
 8001180:	2200      	movs	r2, #0
 8001182:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001184:	e00c      	b.n	80011a0 <buzzer+0x34>
 8001186:	88fb      	ldrh	r3, [r7, #6]
 8001188:	f24a 4210 	movw	r2, #42000	@ 0xa410
 800118c:	fb92 f2f3 	sdiv	r2, r2, r3
 8001190:	4b06      	ldr	r3, [pc, #24]	@ (80011ac <buzzer+0x40>)
 8001192:	681b      	ldr	r3, [r3, #0]
 8001194:	629a      	str	r2, [r3, #40]	@ 0x28
 8001196:	4b05      	ldr	r3, [pc, #20]	@ (80011ac <buzzer+0x40>)
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 800119e:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011a0:	bf00      	nop
 80011a2:	370c      	adds	r7, #12
 80011a4:	46bd      	mov	sp, r7
 80011a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011aa:	4770      	bx	lr
 80011ac:	20001b40 	.word	0x20001b40

080011b0 <buzzer_init>:
 80011b0:	b580      	push	{r7, lr}
 80011b2:	af00      	add	r7, sp, #0
 80011b4:	2108      	movs	r1, #8
 80011b6:	4804      	ldr	r0, [pc, #16]	@ (80011c8 <buzzer_init+0x18>)
 80011b8:	f012 ff90 	bl	80140dc <HAL_TIM_PWM_Start>
 80011bc:	4b02      	ldr	r3, [pc, #8]	@ (80011c8 <buzzer_init+0x18>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	2200      	movs	r2, #0
 80011c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80011c4:	bf00      	nop
 80011c6:	bd80      	pop	{r7, pc}
 80011c8:	20001b40 	.word	0x20001b40

080011cc <HAL_CAN_RxFifo0MsgPendingCallback>:
 80011cc:	b580      	push	{r7, lr}
 80011ce:	b082      	sub	sp, #8
 80011d0:	af00      	add	r7, sp, #0
 80011d2:	6078      	str	r0, [r7, #4]
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f005 fb87 	bl	80068e8 <can_ISR>
 80011da:	bf00      	nop
 80011dc:	3708      	adds	r7, #8
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}

080011e2 <HAL_CAN_RxFifo1MsgPendingCallback>:
 80011e2:	b580      	push	{r7, lr}
 80011e4:	b082      	sub	sp, #8
 80011e6:	af00      	add	r7, sp, #0
 80011e8:	6078      	str	r0, [r7, #4]
 80011ea:	6878      	ldr	r0, [r7, #4]
 80011ec:	f005 fb7c 	bl	80068e8 <can_ISR>
 80011f0:	bf00      	nop
 80011f2:	3708      	adds	r7, #8
 80011f4:	46bd      	mov	sp, r7
 80011f6:	bd80      	pop	{r7, pc}

080011f8 <can1_get_msg>:
 80011f8:	b580      	push	{r7, lr}
 80011fa:	b084      	sub	sp, #16
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	60f8      	str	r0, [r7, #12]
 8001200:	60b9      	str	r1, [r7, #8]
 8001202:	607a      	str	r2, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	68ba      	ldr	r2, [r7, #8]
 8001208:	2100      	movs	r1, #0
 800120a:	68f8      	ldr	r0, [r7, #12]
 800120c:	f00d fa61 	bl	800e6d2 <HAL_CAN_GetRxMessage>
 8001210:	2300      	movs	r3, #0
 8001212:	4618      	mov	r0, r3
 8001214:	3710      	adds	r7, #16
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}

0800121a <can2_get_msg>:
 800121a:	b580      	push	{r7, lr}
 800121c:	b084      	sub	sp, #16
 800121e:	af00      	add	r7, sp, #0
 8001220:	60f8      	str	r0, [r7, #12]
 8001222:	60b9      	str	r1, [r7, #8]
 8001224:	607a      	str	r2, [r7, #4]
 8001226:	687b      	ldr	r3, [r7, #4]
 8001228:	68ba      	ldr	r2, [r7, #8]
 800122a:	2101      	movs	r1, #1
 800122c:	68f8      	ldr	r0, [r7, #12]
 800122e:	f00d fa50 	bl	800e6d2 <HAL_CAN_GetRxMessage>
 8001232:	2300      	movs	r3, #0
 8001234:	4618      	mov	r0, r3
 8001236:	3710      	adds	r7, #16
 8001238:	46bd      	mov	sp, r7
 800123a:	bd80      	pop	{r7, pc}

0800123c <can_start>:
 800123c:	b580      	push	{r7, lr}
 800123e:	b08e      	sub	sp, #56	@ 0x38
 8001240:	af00      	add	r7, sp, #0
 8001242:	60f8      	str	r0, [r7, #12]
 8001244:	60b9      	str	r1, [r7, #8]
 8001246:	607a      	str	r2, [r7, #4]
 8001248:	f107 0310 	add.w	r3, r7, #16
 800124c:	2228      	movs	r2, #40	@ 0x28
 800124e:	2100      	movs	r1, #0
 8001250:	4618      	mov	r0, r3
 8001252:	f01c fbbe 	bl	801d9d2 <memset>
 8001256:	2301      	movs	r3, #1
 8001258:	633b      	str	r3, [r7, #48]	@ 0x30
 800125a:	2300      	movs	r3, #0
 800125c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800125e:	2301      	movs	r3, #1
 8001260:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001262:	68bb      	ldr	r3, [r7, #8]
 8001264:	0c1b      	lsrs	r3, r3, #16
 8001266:	613b      	str	r3, [r7, #16]
 8001268:	68bb      	ldr	r3, [r7, #8]
 800126a:	b29b      	uxth	r3, r3
 800126c:	617b      	str	r3, [r7, #20]
 800126e:	687b      	ldr	r3, [r7, #4]
 8001270:	0c1b      	lsrs	r3, r3, #16
 8001272:	61bb      	str	r3, [r7, #24]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	b29b      	uxth	r3, r3
 8001278:	61fb      	str	r3, [r7, #28]
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	4a18      	ldr	r2, [pc, #96]	@ (80012e0 <can_start+0xa4>)
 8001280:	4293      	cmp	r3, r2
 8001282:	d111      	bne.n	80012a8 <can_start+0x6c>
 8001284:	2300      	movs	r3, #0
 8001286:	627b      	str	r3, [r7, #36]	@ 0x24
 8001288:	2300      	movs	r3, #0
 800128a:	623b      	str	r3, [r7, #32]
 800128c:	f107 0310 	add.w	r3, r7, #16
 8001290:	4619      	mov	r1, r3
 8001292:	68f8      	ldr	r0, [r7, #12]
 8001294:	f00d f81e 	bl	800e2d4 <HAL_CAN_ConfigFilter>
 8001298:	68f8      	ldr	r0, [r7, #12]
 800129a:	f00d f8fb 	bl	800e494 <HAL_CAN_Start>
 800129e:	2102      	movs	r1, #2
 80012a0:	68f8      	ldr	r0, [r7, #12]
 80012a2:	f00d fb28 	bl	800e8f6 <HAL_CAN_ActivateNotification>
 80012a6:	e017      	b.n	80012d8 <can_start+0x9c>
 80012a8:	68fb      	ldr	r3, [r7, #12]
 80012aa:	681b      	ldr	r3, [r3, #0]
 80012ac:	4a0d      	ldr	r2, [pc, #52]	@ (80012e4 <can_start+0xa8>)
 80012ae:	4293      	cmp	r3, r2
 80012b0:	d112      	bne.n	80012d8 <can_start+0x9c>
 80012b2:	2301      	movs	r3, #1
 80012b4:	623b      	str	r3, [r7, #32]
 80012b6:	230e      	movs	r3, #14
 80012b8:	637b      	str	r3, [r7, #52]	@ 0x34
 80012ba:	230e      	movs	r3, #14
 80012bc:	627b      	str	r3, [r7, #36]	@ 0x24
 80012be:	f107 0310 	add.w	r3, r7, #16
 80012c2:	4619      	mov	r1, r3
 80012c4:	68f8      	ldr	r0, [r7, #12]
 80012c6:	f00d f805 	bl	800e2d4 <HAL_CAN_ConfigFilter>
 80012ca:	68f8      	ldr	r0, [r7, #12]
 80012cc:	f00d f8e2 	bl	800e494 <HAL_CAN_Start>
 80012d0:	2110      	movs	r1, #16
 80012d2:	68f8      	ldr	r0, [r7, #12]
 80012d4:	f00d fb0f 	bl	800e8f6 <HAL_CAN_ActivateNotification>
 80012d8:	bf00      	nop
 80012da:	3738      	adds	r7, #56	@ 0x38
 80012dc:	46bd      	mov	sp, r7
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	40006400 	.word	0x40006400
 80012e4:	40006800 	.word	0x40006800

080012e8 <dbus_remote_ISR>:

uint8_t remote_raw_data[REMOTE_DATA_SIZE] = {0};
remote_cmd_t g_remote_cmd = { 0 };


void dbus_remote_ISR(DMA_HandleTypeDef *hdma) {
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b084      	sub	sp, #16
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	6078      	str	r0, [r7, #4]
	g_remote_cmd.right_x = (remote_raw_data[0] | remote_raw_data[1] << 8) & 0x07FF;
 80012f0:	4b79      	ldr	r3, [pc, #484]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f2:	781b      	ldrb	r3, [r3, #0]
 80012f4:	b21a      	sxth	r2, r3
 80012f6:	4b78      	ldr	r3, [pc, #480]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80012f8:	785b      	ldrb	r3, [r3, #1]
 80012fa:	021b      	lsls	r3, r3, #8
 80012fc:	b21b      	sxth	r3, r3
 80012fe:	4313      	orrs	r3, r2
 8001300:	b21b      	sxth	r3, r3
 8001302:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001306:	b21a      	sxth	r2, r3
 8001308:	4b74      	ldr	r3, [pc, #464]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130a:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_x -= JOYSTICK_OFFSET;
 800130c:	4b73      	ldr	r3, [pc, #460]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800130e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001312:	b29b      	uxth	r3, r3
 8001314:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001318:	b29b      	uxth	r3, r3
 800131a:	b21a      	sxth	r2, r3
 800131c:	4b6f      	ldr	r3, [pc, #444]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800131e:	801a      	strh	r2, [r3, #0]
	g_remote_cmd.right_y = (remote_raw_data[1] >> 3 | remote_raw_data[2] << 5) & 0x07FF;
 8001320:	4b6d      	ldr	r3, [pc, #436]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001322:	785b      	ldrb	r3, [r3, #1]
 8001324:	08db      	lsrs	r3, r3, #3
 8001326:	b2db      	uxtb	r3, r3
 8001328:	b21a      	sxth	r2, r3
 800132a:	4b6b      	ldr	r3, [pc, #428]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800132c:	789b      	ldrb	r3, [r3, #2]
 800132e:	015b      	lsls	r3, r3, #5
 8001330:	b21b      	sxth	r3, r3
 8001332:	4313      	orrs	r3, r2
 8001334:	b21b      	sxth	r3, r3
 8001336:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800133a:	b21a      	sxth	r2, r3
 800133c:	4b67      	ldr	r3, [pc, #412]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800133e:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.right_y -= JOYSTICK_OFFSET;
 8001340:	4b66      	ldr	r3, [pc, #408]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001342:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8001346:	b29b      	uxth	r3, r3
 8001348:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800134c:	b29b      	uxth	r3, r3
 800134e:	b21a      	sxth	r2, r3
 8001350:	4b62      	ldr	r3, [pc, #392]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001352:	805a      	strh	r2, [r3, #2]
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 8001354:	4b60      	ldr	r3, [pc, #384]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001356:	789b      	ldrb	r3, [r3, #2]
 8001358:	099b      	lsrs	r3, r3, #6
 800135a:	b2db      	uxtb	r3, r3
 800135c:	b21a      	sxth	r2, r3
 800135e:	4b5e      	ldr	r3, [pc, #376]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001360:	78db      	ldrb	r3, [r3, #3]
 8001362:	009b      	lsls	r3, r3, #2
 8001364:	b21b      	sxth	r3, r3
 8001366:	4313      	orrs	r3, r2
 8001368:	b21a      	sxth	r2, r3
			| remote_raw_data[4] << 10) & 0x07FF;
 800136a:	4b5b      	ldr	r3, [pc, #364]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800136c:	791b      	ldrb	r3, [r3, #4]
 800136e:	029b      	lsls	r3, r3, #10
 8001370:	b21b      	sxth	r3, r3
 8001372:	4313      	orrs	r3, r2
 8001374:	b21b      	sxth	r3, r3
 8001376:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800137a:	b21a      	sxth	r2, r3
	g_remote_cmd.left_x = (remote_raw_data[2] >> 6 | remote_raw_data[3] << 2
 800137c:	4b57      	ldr	r3, [pc, #348]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800137e:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_x -= JOYSTICK_OFFSET;
 8001380:	4b56      	ldr	r3, [pc, #344]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001382:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8001386:	b29b      	uxth	r3, r3
 8001388:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 800138c:	b29b      	uxth	r3, r3
 800138e:	b21a      	sxth	r2, r3
 8001390:	4b52      	ldr	r3, [pc, #328]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001392:	809a      	strh	r2, [r3, #4]
	g_remote_cmd.left_y = (remote_raw_data[4] >> 1 | remote_raw_data[5] << 7) & 0x07FF;
 8001394:	4b50      	ldr	r3, [pc, #320]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001396:	791b      	ldrb	r3, [r3, #4]
 8001398:	085b      	lsrs	r3, r3, #1
 800139a:	b2db      	uxtb	r3, r3
 800139c:	b21a      	sxth	r2, r3
 800139e:	4b4e      	ldr	r3, [pc, #312]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013a0:	795b      	ldrb	r3, [r3, #5]
 80013a2:	01db      	lsls	r3, r3, #7
 80013a4:	b21b      	sxth	r3, r3
 80013a6:	4313      	orrs	r3, r2
 80013a8:	b21b      	sxth	r3, r3
 80013aa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80013ae:	b21a      	sxth	r2, r3
 80013b0:	4b4a      	ldr	r3, [pc, #296]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b2:	80da      	strh	r2, [r3, #6]
	g_remote_cmd.left_y -= JOYSTICK_OFFSET;
 80013b4:	4b49      	ldr	r3, [pc, #292]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013b6:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80013ba:	b29b      	uxth	r3, r3
 80013bc:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 80013c0:	b29b      	uxth	r3, r3
 80013c2:	b21a      	sxth	r2, r3
 80013c4:	4b45      	ldr	r3, [pc, #276]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013c6:	80da      	strh	r2, [r3, #6]
	//Left switch position
	g_remote_cmd.left_switch = ((remote_raw_data[5] >> 4) & 0x000C) >> 2;
 80013c8:	4b43      	ldr	r3, [pc, #268]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013ca:	795b      	ldrb	r3, [r3, #5]
 80013cc:	091b      	lsrs	r3, r3, #4
 80013ce:	b2db      	uxtb	r3, r3
 80013d0:	109b      	asrs	r3, r3, #2
 80013d2:	b25b      	sxtb	r3, r3
 80013d4:	f003 0303 	and.w	r3, r3, #3
 80013d8:	b25a      	sxtb	r2, r3
 80013da:	4b40      	ldr	r3, [pc, #256]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013dc:	721a      	strb	r2, [r3, #8]
	g_remote_cmd.right_switch = (remote_raw_data[5] >> 4) & 0x0003;
 80013de:	4b3e      	ldr	r3, [pc, #248]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013e0:	795b      	ldrb	r3, [r3, #5]
 80013e2:	091b      	lsrs	r3, r3, #4
 80013e4:	b2db      	uxtb	r3, r3
 80013e6:	b25b      	sxtb	r3, r3
 80013e8:	f003 0303 	and.w	r3, r3, #3
 80013ec:	b25a      	sxtb	r2, r3
 80013ee:	4b3b      	ldr	r3, [pc, #236]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80013f0:	725a      	strb	r2, [r3, #9]
	g_remote_cmd.mouse_x = ((int16_t) remote_raw_data[6] | ((int16_t) remote_raw_data[7] << 8));
 80013f2:	4b39      	ldr	r3, [pc, #228]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013f4:	799b      	ldrb	r3, [r3, #6]
 80013f6:	b21a      	sxth	r2, r3
 80013f8:	4b37      	ldr	r3, [pc, #220]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 80013fa:	79db      	ldrb	r3, [r3, #7]
 80013fc:	021b      	lsls	r3, r3, #8
 80013fe:	b21b      	sxth	r3, r3
 8001400:	4313      	orrs	r3, r2
 8001402:	b21a      	sxth	r2, r3
 8001404:	4b35      	ldr	r3, [pc, #212]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001406:	815a      	strh	r2, [r3, #10]
	g_remote_cmd.mouse_y = ((int16_t) remote_raw_data[8] | ((int16_t) remote_raw_data[9] << 8));
 8001408:	4b33      	ldr	r3, [pc, #204]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800140a:	7a1b      	ldrb	r3, [r3, #8]
 800140c:	b21a      	sxth	r2, r3
 800140e:	4b32      	ldr	r3, [pc, #200]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001410:	7a5b      	ldrb	r3, [r3, #9]
 8001412:	021b      	lsls	r3, r3, #8
 8001414:	b21b      	sxth	r3, r3
 8001416:	4313      	orrs	r3, r2
 8001418:	b21a      	sxth	r2, r3
 800141a:	4b30      	ldr	r3, [pc, #192]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800141c:	819a      	strh	r2, [r3, #12]
	g_remote_cmd.mouse_z = ((int16_t) remote_raw_data[10] | ((int16_t) remote_raw_data[11] << 8));
 800141e:	4b2e      	ldr	r3, [pc, #184]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001420:	7a9b      	ldrb	r3, [r3, #10]
 8001422:	b21a      	sxth	r2, r3
 8001424:	4b2c      	ldr	r3, [pc, #176]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001426:	7adb      	ldrb	r3, [r3, #11]
 8001428:	021b      	lsls	r3, r3, #8
 800142a:	b21b      	sxth	r3, r3
 800142c:	4313      	orrs	r3, r2
 800142e:	b21a      	sxth	r2, r3
 8001430:	4b2a      	ldr	r3, [pc, #168]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001432:	81da      	strh	r2, [r3, #14]
	g_remote_cmd.mouse_hori += g_remote_cmd.mouse_x;
 8001434:	4b29      	ldr	r3, [pc, #164]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001436:	691b      	ldr	r3, [r3, #16]
 8001438:	4a28      	ldr	r2, [pc, #160]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800143a:	f9b2 200a 	ldrsh.w	r2, [r2, #10]
 800143e:	4413      	add	r3, r2
 8001440:	4a26      	ldr	r2, [pc, #152]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001442:	6113      	str	r3, [r2, #16]
	g_remote_cmd.mouse_vert += g_remote_cmd.mouse_y;
 8001444:	4b25      	ldr	r3, [pc, #148]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001446:	695b      	ldr	r3, [r3, #20]
 8001448:	4a24      	ldr	r2, [pc, #144]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800144a:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 800144e:	4413      	add	r3, r2
 8001450:	4a22      	ldr	r2, [pc, #136]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001452:	6153      	str	r3, [r2, #20]
	g_remote_cmd.mouse_left = (remote_raw_data[12]);
 8001454:	4b20      	ldr	r3, [pc, #128]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001456:	7b1b      	ldrb	r3, [r3, #12]
 8001458:	b25a      	sxtb	r2, r3
 800145a:	4b20      	ldr	r3, [pc, #128]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800145c:	761a      	strb	r2, [r3, #24]
	g_remote_cmd.mouse_right = (remote_raw_data[13]);
 800145e:	4b1e      	ldr	r3, [pc, #120]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001460:	7b5b      	ldrb	r3, [r3, #13]
 8001462:	b25a      	sxtb	r2, r3
 8001464:	4b1d      	ldr	r3, [pc, #116]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001466:	765a      	strb	r2, [r3, #25]
	g_remote_cmd.keyboard_keys = (remote_raw_data[14]);
 8001468:	4b1b      	ldr	r3, [pc, #108]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800146a:	7b9b      	ldrb	r3, [r3, #14]
 800146c:	461a      	mov	r2, r3
 800146e:	4b1b      	ldr	r3, [pc, #108]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001470:	835a      	strh	r2, [r3, #26]
	g_remote_cmd.side_dial = ((int16_t) remote_raw_data[16]) | ((int16_t) remote_raw_data[17] << 8);
 8001472:	4b19      	ldr	r3, [pc, #100]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 8001474:	7c1b      	ldrb	r3, [r3, #16]
 8001476:	b21a      	sxth	r2, r3
 8001478:	4b17      	ldr	r3, [pc, #92]	@ (80014d8 <dbus_remote_ISR+0x1f0>)
 800147a:	7c5b      	ldrb	r3, [r3, #17]
 800147c:	021b      	lsls	r3, r3, #8
 800147e:	b21b      	sxth	r3, r3
 8001480:	4313      	orrs	r3, r2
 8001482:	b21a      	sxth	r2, r3
 8001484:	4b15      	ldr	r3, [pc, #84]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 8001486:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.side_dial -= JOYSTICK_OFFSET;
 8001488:	4b14      	ldr	r3, [pc, #80]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800148a:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800148e:	b29b      	uxth	r3, r3
 8001490:	f5a3 6380 	sub.w	r3, r3, #1024	@ 0x400
 8001494:	b29b      	uxth	r3, r3
 8001496:	b21a      	sxth	r2, r3
 8001498:	4b10      	ldr	r3, [pc, #64]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 800149a:	839a      	strh	r2, [r3, #28]
	g_remote_cmd.last_time = HAL_GetTick();
 800149c:	f00c fb8c 	bl	800dbb8 <HAL_GetTick>
 80014a0:	4603      	mov	r3, r0
 80014a2:	4a0e      	ldr	r2, [pc, #56]	@ (80014dc <dbus_remote_ISR+0x1f4>)
 80014a4:	6213      	str	r3, [r2, #32]

	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 80014a6:	2300      	movs	r3, #0
 80014a8:	60fb      	str	r3, [r7, #12]
	vTaskNotifyGiveFromISR(control_input_task_handle, &xHigherPriorityTaskWoken);
 80014aa:	4b0d      	ldr	r3, [pc, #52]	@ (80014e0 <dbus_remote_ISR+0x1f8>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	f107 020c 	add.w	r2, r7, #12
 80014b2:	4611      	mov	r1, r2
 80014b4:	4618      	mov	r0, r3
 80014b6:	f01a fb61 	bl	801bb7c <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d007      	beq.n	80014d0 <dbus_remote_ISR+0x1e8>
 80014c0:	4b08      	ldr	r3, [pc, #32]	@ (80014e4 <dbus_remote_ISR+0x1fc>)
 80014c2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80014c6:	601a      	str	r2, [r3, #0]
 80014c8:	f3bf 8f4f 	dsb	sy
 80014cc:	f3bf 8f6f 	isb	sy
}
 80014d0:	bf00      	nop
 80014d2:	3710      	adds	r7, #16
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bd80      	pop	{r7, pc}
 80014d8:	20000824 	.word	0x20000824
 80014dc:	20000838 	.word	0x20000838
 80014e0:	20003b4c 	.word	0x20003b4c
 80014e4:	e000ed04 	.word	0xe000ed04

080014e8 <dbus_remote_start>:
/**
 * This function starts the circular DMA for receiving on a UART port. It is specifically
 * written for the UART1 port for DBUS interface from the controller.
 */
HAL_StatusTypeDef dbus_remote_start()
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b08c      	sub	sp, #48	@ 0x30
 80014ec:	af00      	add	r7, sp, #0
	uint8_t *pData = remote_raw_data;
 80014ee:	4b4d      	ldr	r3, [pc, #308]	@ (8001624 <dbus_remote_start+0x13c>)
 80014f0:	60fb      	str	r3, [r7, #12]
	UART_HandleTypeDef *huart = &DBUS_UART;
 80014f2:	4b4d      	ldr	r3, [pc, #308]	@ (8001628 <dbus_remote_start+0x140>)
 80014f4:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t *tmp;

	/* Check that a Rx process is not already ongoing */
	if (huart->RxState == HAL_UART_STATE_READY) {
 80014f6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80014f8:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80014fc:	b2db      	uxtb	r3, r3
 80014fe:	2b20      	cmp	r3, #32
 8001500:	f040 808b 	bne.w	800161a <dbus_remote_start+0x132>
		if ((pData == NULL) || (REMOTE_DATA_SIZE == 0U)) {
 8001504:	68fb      	ldr	r3, [r7, #12]
 8001506:	2b00      	cmp	r3, #0
 8001508:	d101      	bne.n	800150e <dbus_remote_start+0x26>
			return HAL_ERROR;
 800150a:	2301      	movs	r3, #1
 800150c:	e086      	b.n	800161c <dbus_remote_start+0x134>
		}

		/* Process Locked */
		__HAL_LOCK(huart);
 800150e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001510:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001514:	2b01      	cmp	r3, #1
 8001516:	d101      	bne.n	800151c <dbus_remote_start+0x34>
 8001518:	2302      	movs	r3, #2
 800151a:	e07f      	b.n	800161c <dbus_remote_start+0x134>
 800151c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800151e:	2201      	movs	r2, #1
 8001520:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 8001524:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001526:	2201      	movs	r2, #1
 8001528:	631a      	str	r2, [r3, #48]	@ 0x30
		huart->pRxBuffPtr = pData;
 800152a:	68fa      	ldr	r2, [r7, #12]
 800152c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800152e:	629a      	str	r2, [r3, #40]	@ 0x28
		huart->RxXferSize = REMOTE_DATA_SIZE;
 8001530:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001532:	2212      	movs	r2, #18
 8001534:	859a      	strh	r2, [r3, #44]	@ 0x2c

		huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001536:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001538:	2200      	movs	r2, #0
 800153a:	641a      	str	r2, [r3, #64]	@ 0x40
		huart->RxState = HAL_UART_STATE_BUSY_RX;
 800153c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800153e:	2222      	movs	r2, #34	@ 0x22
 8001540:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

		/* Set the UART DMA transfer complete callback */
		huart->hdmarx->XferCpltCallback = dbus_remote_ISR;
 8001544:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001546:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001548:	4a38      	ldr	r2, [pc, #224]	@ (800162c <dbus_remote_start+0x144>)
 800154a:	63da      	str	r2, [r3, #60]	@ 0x3c

		/* Set the DMA abort callback */
		huart->hdmarx->XferAbortCallback = NULL;
 800154c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800154e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001550:	2200      	movs	r2, #0
 8001552:	651a      	str	r2, [r3, #80]	@ 0x50

		/* Enable the DMA stream */
		tmp = (uint32_t *)&pData;
 8001554:	f107 030c 	add.w	r3, r7, #12
 8001558:	62bb      	str	r3, [r7, #40]	@ 0x28
		HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, REMOTE_DATA_SIZE);
 800155a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800155c:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 800155e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	3304      	adds	r3, #4
 8001564:	4619      	mov	r1, r3
 8001566:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001568:	681a      	ldr	r2, [r3, #0]
 800156a:	2312      	movs	r3, #18
 800156c:	f00d fdf8 	bl	800f160 <HAL_DMA_Start_IT>

		/* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the second transfer */
		__HAL_UART_CLEAR_OREFLAG(huart);
 8001570:	2300      	movs	r3, #0
 8001572:	60bb      	str	r3, [r7, #8]
 8001574:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	60bb      	str	r3, [r7, #8]
 800157c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	685b      	ldr	r3, [r3, #4]
 8001582:	60bb      	str	r3, [r7, #8]
 8001584:	68bb      	ldr	r3, [r7, #8]

		/* Process Unlocked */
		__HAL_UNLOCK(huart);
 8001586:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001588:	2200      	movs	r2, #0
 800158a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

		/* Enable the UART Parity Error Interrupt */
		SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 800158e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001590:	681b      	ldr	r3, [r3, #0]
 8001592:	68da      	ldr	r2, [r3, #12]
 8001594:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800159c:	60da      	str	r2, [r3, #12]

		/* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
		SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800159e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	695a      	ldr	r2, [r3, #20]
 80015a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	f042 0201 	orr.w	r2, r2, #1
 80015ac:	615a      	str	r2, [r3, #20]

		/* Enable the DMA transfer for the receiver request by setting the DMAR bit
		in the UART CR3 register */
		SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80015ae:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	695a      	ldr	r2, [r3, #20]
 80015b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80015bc:	615a      	str	r2, [r3, #20]

		if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 80015be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015c2:	2b01      	cmp	r3, #1
 80015c4:	d125      	bne.n	8001612 <dbus_remote_start+0x12a>
		{
			__HAL_UART_CLEAR_IDLEFLAG(huart);
 80015c6:	2300      	movs	r3, #0
 80015c8:	607b      	str	r3, [r7, #4]
 80015ca:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	681b      	ldr	r3, [r3, #0]
 80015d0:	607b      	str	r3, [r7, #4]
 80015d2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	685b      	ldr	r3, [r3, #4]
 80015d8:	607b      	str	r3, [r7, #4]
 80015da:	687b      	ldr	r3, [r7, #4]
			ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80015dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	330c      	adds	r3, #12
 80015e2:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80015e4:	697b      	ldr	r3, [r7, #20]
 80015e6:	e853 3f00 	ldrex	r3, [r3]
 80015ea:	613b      	str	r3, [r7, #16]
   return(result);
 80015ec:	693b      	ldr	r3, [r7, #16]
 80015ee:	f043 0310 	orr.w	r3, r3, #16
 80015f2:	627b      	str	r3, [r7, #36]	@ 0x24
 80015f4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	330c      	adds	r3, #12
 80015fa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80015fc:	623a      	str	r2, [r7, #32]
 80015fe:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001600:	69f9      	ldr	r1, [r7, #28]
 8001602:	6a3a      	ldr	r2, [r7, #32]
 8001604:	e841 2300 	strex	r3, r2, [r1]
 8001608:	61bb      	str	r3, [r7, #24]
   return(result);
 800160a:	69bb      	ldr	r3, [r7, #24]
 800160c:	2b00      	cmp	r3, #0
 800160e:	d1e5      	bne.n	80015dc <dbus_remote_start+0xf4>
 8001610:	e001      	b.n	8001616 <dbus_remote_start+0x12e>
		{
			/* In case of errors already pending when reception is started,
			   Interrupts may have already been raised and lead to reception abortion.
			   (Overrun error for instance).
			   In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
			return HAL_ERROR;
 8001612:	2301      	movs	r3, #1
 8001614:	e002      	b.n	800161c <dbus_remote_start+0x134>
		}
		return HAL_OK;
 8001616:	2300      	movs	r3, #0
 8001618:	e000      	b.n	800161c <dbus_remote_start+0x134>
	} else {
		return HAL_BUSY;
 800161a:	2302      	movs	r3, #2
	}
}
 800161c:	4618      	mov	r0, r3
 800161e:	3730      	adds	r7, #48	@ 0x30
 8001620:	46bd      	mov	sp, r7
 8001622:	bd80      	pop	{r7, pc}
 8001624:	20000824 	.word	0x20000824
 8001628:	20001c5c 	.word	0x20001c5c
 800162c:	080012e9 	.word	0x080012e9

08001630 <laser_on>:
 8001630:	b580      	push	{r7, lr}
 8001632:	af00      	add	r7, sp, #0
 8001634:	2200      	movs	r2, #0
 8001636:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800163a:	4802      	ldr	r0, [pc, #8]	@ (8001644 <laser_on+0x14>)
 800163c:	f00e fa8c 	bl	800fb58 <HAL_GPIO_WritePin>
 8001640:	bf00      	nop
 8001642:	bd80      	pop	{r7, pc}
 8001644:	40020800 	.word	0x40020800

08001648 <laser_off>:
 8001648:	b580      	push	{r7, lr}
 800164a:	af00      	add	r7, sp, #0
 800164c:	2200      	movs	r2, #0
 800164e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8001652:	4802      	ldr	r0, [pc, #8]	@ (800165c <laser_off+0x14>)
 8001654:	f00e fa80 	bl	800fb58 <HAL_GPIO_WritePin>
 8001658:	bf00      	nop
 800165a:	bd80      	pop	{r7, pc}
 800165c:	40020800 	.word	0x40020800

08001660 <hall_disable>:
void hall_enable(){
	hall_state = HALL_ON;
	  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
}

void hall_disable(){
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
	hall_state = HALL_OFF;
 8001664:	4b03      	ldr	r3, [pc, #12]	@ (8001674 <hall_disable+0x14>)
 8001666:	2201      	movs	r2, #1
 8001668:	701a      	strb	r2, [r3, #0]
	HAL_NVIC_DisableIRQ(EXTI15_10_IRQn);
 800166a:	2028      	movs	r0, #40	@ 0x28
 800166c:	f00d fcbc 	bl	800efe8 <HAL_NVIC_DisableIRQ>
}
 8001670:	bf00      	nop
 8001672:	bd80      	pop	{r7, pc}
 8001674:	20000003 	.word	0x20000003

08001678 <hall_int>:


void hall_int(){
 8001678:	b580      	push	{r7, lr}
 800167a:	b082      	sub	sp, #8
 800167c:	af00      	add	r7, sp, #0
	static int32_t prev_tick;
	uint8_t curr_state = (GPIOE->IDR & GPIO_PIN_11) ? 1 : 0;
 800167e:	4b21      	ldr	r3, [pc, #132]	@ (8001704 <hall_int+0x8c>)
 8001680:	691b      	ldr	r3, [r3, #16]
 8001682:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001686:	2b00      	cmp	r3, #0
 8001688:	bf14      	ite	ne
 800168a:	2301      	movne	r3, #1
 800168c:	2300      	moveq	r3, #0
 800168e:	b2db      	uxtb	r3, r3
 8001690:	71fb      	strb	r3, [r7, #7]
	if (curr_state & GPIO_PIN_11){
 8001692:	79fb      	ldrb	r3, [r7, #7]
 8001694:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001698:	2b00      	cmp	r3, #0
 800169a:	d12e      	bne.n	80016fa <hall_int+0x82>
		//current state and previous state are the same, do nothing
		return;
	}
	if (hall_state == HALL_ON){
 800169c:	4b1a      	ldr	r3, [pc, #104]	@ (8001708 <hall_int+0x90>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d127      	bne.n	80016f4 <hall_int+0x7c>
	//assume hall sensor has changed state
		switch (curr_state){
 80016a4:	79fb      	ldrb	r3, [r7, #7]
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d009      	beq.n	80016be <hall_int+0x46>
 80016aa:	2b01      	cmp	r3, #1
 80016ac:	d11b      	bne.n	80016e6 <hall_int+0x6e>
		case HALL_OFF:
			//hall went from on to off
			//motor just brushed past
			prev_tick = g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks;
 80016ae:	4b17      	ldr	r3, [pc, #92]	@ (800170c <hall_int+0x94>)
 80016b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016b4:	f8d3 3268 	ldr.w	r3, [r3, #616]	@ 0x268
 80016b8:	4a15      	ldr	r2, [pc, #84]	@ (8001710 <hall_int+0x98>)
 80016ba:	6013      	str	r3, [r2, #0]

			break;
 80016bc:	e016      	b.n	80016ec <hall_int+0x74>
		case HALL_ON:
			//hall went from off to on
			//yaw motor just let goo
			g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks = (g_can_motors[YAW_MOTOR_ID-1].angle_data.ticks-prev_tick)/2 ;
 80016be:	4b13      	ldr	r3, [pc, #76]	@ (800170c <hall_int+0x94>)
 80016c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016c4:	f8d3 2268 	ldr.w	r2, [r3, #616]	@ 0x268
 80016c8:	4b11      	ldr	r3, [pc, #68]	@ (8001710 <hall_int+0x98>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	1ad3      	subs	r3, r2, r3
 80016ce:	0fda      	lsrs	r2, r3, #31
 80016d0:	4413      	add	r3, r2
 80016d2:	105b      	asrs	r3, r3, #1
 80016d4:	461a      	mov	r2, r3
 80016d6:	4b0d      	ldr	r3, [pc, #52]	@ (800170c <hall_int+0x94>)
 80016d8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80016dc:	f8c3 2268 	str.w	r2, [r3, #616]	@ 0x268
			//sensor is done, turn it off
			hall_disable();
 80016e0:	f7ff ffbe 	bl	8001660 <hall_disable>
			break;
 80016e4:	e002      	b.n	80016ec <hall_int+0x74>

		default:
			prev_state = 1;
 80016e6:	4b0b      	ldr	r3, [pc, #44]	@ (8001714 <hall_int+0x9c>)
 80016e8:	2201      	movs	r2, #1
 80016ea:	701a      	strb	r2, [r3, #0]
		}
		prev_state = curr_state;
 80016ec:	4a09      	ldr	r2, [pc, #36]	@ (8001714 <hall_int+0x9c>)
 80016ee:	79fb      	ldrb	r3, [r7, #7]
 80016f0:	7013      	strb	r3, [r2, #0]
		return;
 80016f2:	e003      	b.n	80016fc <hall_int+0x84>
	} else{
		hall_disable();
 80016f4:	f7ff ffb4 	bl	8001660 <hall_disable>
		return;
 80016f8:	e000      	b.n	80016fc <hall_int+0x84>
		return;
 80016fa:	bf00      	nop
	}
}
 80016fc:	3708      	adds	r7, #8
 80016fe:	46bd      	mov	sp, r7
 8001700:	bd80      	pop	{r7, pc}
 8001702:	bf00      	nop
 8001704:	40021000 	.word	0x40021000
 8001708:	20000003 	.word	0x20000003
 800170c:	20002220 	.word	0x20002220
 8001710:	2000085c 	.word	0x2000085c
 8001714:	20000002 	.word	0x20000002

08001718 <__NVIC_SystemReset>:
 8001718:	b480      	push	{r7}
 800171a:	af00      	add	r7, sp, #0
 800171c:	f3bf 8f4f 	dsb	sy
 8001720:	bf00      	nop
 8001722:	4b06      	ldr	r3, [pc, #24]	@ (800173c <__NVIC_SystemReset+0x24>)
 8001724:	68db      	ldr	r3, [r3, #12]
 8001726:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 800172a:	4904      	ldr	r1, [pc, #16]	@ (800173c <__NVIC_SystemReset+0x24>)
 800172c:	4b04      	ldr	r3, [pc, #16]	@ (8001740 <__NVIC_SystemReset+0x28>)
 800172e:	4313      	orrs	r3, r2
 8001730:	60cb      	str	r3, [r1, #12]
 8001732:	f3bf 8f4f 	dsb	sy
 8001736:	bf00      	nop
 8001738:	bf00      	nop
 800173a:	e7fd      	b.n	8001738 <__NVIC_SystemReset+0x20>
 800173c:	e000ed00 	.word	0xe000ed00
 8001740:	05fa0004 	.word	0x05fa0004

08001744 <gyro_write_byte>:
 8001744:	b580      	push	{r7, lr}
 8001746:	b086      	sub	sp, #24
 8001748:	af02      	add	r7, sp, #8
 800174a:	4603      	mov	r3, r0
 800174c:	460a      	mov	r2, r1
 800174e:	71fb      	strb	r3, [r7, #7]
 8001750:	4613      	mov	r3, r2
 8001752:	71bb      	strb	r3, [r7, #6]
 8001754:	2200      	movs	r2, #0
 8001756:	2101      	movs	r1, #1
 8001758:	4811      	ldr	r0, [pc, #68]	@ (80017a0 <gyro_write_byte+0x5c>)
 800175a:	f00e f9fd 	bl	800fb58 <HAL_GPIO_WritePin>
 800175e:	79fb      	ldrb	r3, [r7, #7]
 8001760:	73fb      	strb	r3, [r7, #15]
 8001762:	f107 020e 	add.w	r2, r7, #14
 8001766:	f107 010f 	add.w	r1, r7, #15
 800176a:	2364      	movs	r3, #100	@ 0x64
 800176c:	9300      	str	r3, [sp, #0]
 800176e:	2301      	movs	r3, #1
 8001770:	480c      	ldr	r0, [pc, #48]	@ (80017a4 <gyro_write_byte+0x60>)
 8001772:	f012 f879 	bl	8013868 <HAL_SPI_TransmitReceive>
 8001776:	79bb      	ldrb	r3, [r7, #6]
 8001778:	73fb      	strb	r3, [r7, #15]
 800177a:	f107 020e 	add.w	r2, r7, #14
 800177e:	f107 010f 	add.w	r1, r7, #15
 8001782:	2364      	movs	r3, #100	@ 0x64
 8001784:	9300      	str	r3, [sp, #0]
 8001786:	2301      	movs	r3, #1
 8001788:	4806      	ldr	r0, [pc, #24]	@ (80017a4 <gyro_write_byte+0x60>)
 800178a:	f012 f86d 	bl	8013868 <HAL_SPI_TransmitReceive>
 800178e:	2201      	movs	r2, #1
 8001790:	2101      	movs	r1, #1
 8001792:	4803      	ldr	r0, [pc, #12]	@ (80017a0 <gyro_write_byte+0x5c>)
 8001794:	f00e f9e0 	bl	800fb58 <HAL_GPIO_WritePin>
 8001798:	bf00      	nop
 800179a:	3710      	adds	r7, #16
 800179c:	46bd      	mov	sp, r7
 800179e:	bd80      	pop	{r7, pc}
 80017a0:	40020400 	.word	0x40020400
 80017a4:	20001994 	.word	0x20001994

080017a8 <gyro_read_byte>:
 80017a8:	b580      	push	{r7, lr}
 80017aa:	b086      	sub	sp, #24
 80017ac:	af02      	add	r7, sp, #8
 80017ae:	4603      	mov	r3, r0
 80017b0:	71fb      	strb	r3, [r7, #7]
 80017b2:	2200      	movs	r2, #0
 80017b4:	2101      	movs	r1, #1
 80017b6:	4811      	ldr	r0, [pc, #68]	@ (80017fc <gyro_read_byte+0x54>)
 80017b8:	f00e f9ce 	bl	800fb58 <HAL_GPIO_WritePin>
 80017bc:	79fb      	ldrb	r3, [r7, #7]
 80017be:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80017c2:	b2db      	uxtb	r3, r3
 80017c4:	73bb      	strb	r3, [r7, #14]
 80017c6:	f107 020f 	add.w	r2, r7, #15
 80017ca:	f107 010e 	add.w	r1, r7, #14
 80017ce:	2364      	movs	r3, #100	@ 0x64
 80017d0:	9300      	str	r3, [sp, #0]
 80017d2:	2301      	movs	r3, #1
 80017d4:	480a      	ldr	r0, [pc, #40]	@ (8001800 <gyro_read_byte+0x58>)
 80017d6:	f012 f847 	bl	8013868 <HAL_SPI_TransmitReceive>
 80017da:	f107 010f 	add.w	r1, r7, #15
 80017de:	2364      	movs	r3, #100	@ 0x64
 80017e0:	2201      	movs	r2, #1
 80017e2:	4807      	ldr	r0, [pc, #28]	@ (8001800 <gyro_read_byte+0x58>)
 80017e4:	f011 ff2f 	bl	8013646 <HAL_SPI_Receive>
 80017e8:	2201      	movs	r2, #1
 80017ea:	2101      	movs	r1, #1
 80017ec:	4803      	ldr	r0, [pc, #12]	@ (80017fc <gyro_read_byte+0x54>)
 80017ee:	f00e f9b3 	bl	800fb58 <HAL_GPIO_WritePin>
 80017f2:	7bfb      	ldrb	r3, [r7, #15]
 80017f4:	4618      	mov	r0, r3
 80017f6:	3710      	adds	r7, #16
 80017f8:	46bd      	mov	sp, r7
 80017fa:	bd80      	pop	{r7, pc}
 80017fc:	40020400 	.word	0x40020400
 8001800:	20001994 	.word	0x20001994

08001804 <gyro_read_bytes>:
 8001804:	b580      	push	{r7, lr}
 8001806:	b086      	sub	sp, #24
 8001808:	af02      	add	r7, sp, #8
 800180a:	4603      	mov	r3, r0
 800180c:	6039      	str	r1, [r7, #0]
 800180e:	71fb      	strb	r3, [r7, #7]
 8001810:	4613      	mov	r3, r2
 8001812:	71bb      	strb	r3, [r7, #6]
 8001814:	2200      	movs	r2, #0
 8001816:	2101      	movs	r1, #1
 8001818:	4811      	ldr	r0, [pc, #68]	@ (8001860 <gyro_read_bytes+0x5c>)
 800181a:	f00e f99d 	bl	800fb58 <HAL_GPIO_WritePin>
 800181e:	79fb      	ldrb	r3, [r7, #7]
 8001820:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001824:	b2db      	uxtb	r3, r3
 8001826:	73fb      	strb	r3, [r7, #15]
 8001828:	f107 020e 	add.w	r2, r7, #14
 800182c:	f107 010f 	add.w	r1, r7, #15
 8001830:	2364      	movs	r3, #100	@ 0x64
 8001832:	9300      	str	r3, [sp, #0]
 8001834:	2301      	movs	r3, #1
 8001836:	480b      	ldr	r0, [pc, #44]	@ (8001864 <gyro_read_bytes+0x60>)
 8001838:	f012 f816 	bl	8013868 <HAL_SPI_TransmitReceive>
 800183c:	79bb      	ldrb	r3, [r7, #6]
 800183e:	b29a      	uxth	r2, r3
 8001840:	2364      	movs	r3, #100	@ 0x64
 8001842:	6839      	ldr	r1, [r7, #0]
 8001844:	4807      	ldr	r0, [pc, #28]	@ (8001864 <gyro_read_bytes+0x60>)
 8001846:	f011 fefe 	bl	8013646 <HAL_SPI_Receive>
 800184a:	2201      	movs	r2, #1
 800184c:	2101      	movs	r1, #1
 800184e:	4804      	ldr	r0, [pc, #16]	@ (8001860 <gyro_read_bytes+0x5c>)
 8001850:	f00e f982 	bl	800fb58 <HAL_GPIO_WritePin>
 8001854:	2300      	movs	r3, #0
 8001856:	4618      	mov	r0, r3
 8001858:	3710      	adds	r7, #16
 800185a:	46bd      	mov	sp, r7
 800185c:	bd80      	pop	{r7, pc}
 800185e:	bf00      	nop
 8001860:	40020400 	.word	0x40020400
 8001864:	20001994 	.word	0x20001994

08001868 <accel_write_byte>:
 8001868:	b580      	push	{r7, lr}
 800186a:	b086      	sub	sp, #24
 800186c:	af02      	add	r7, sp, #8
 800186e:	4603      	mov	r3, r0
 8001870:	460a      	mov	r2, r1
 8001872:	71fb      	strb	r3, [r7, #7]
 8001874:	4613      	mov	r3, r2
 8001876:	71bb      	strb	r3, [r7, #6]
 8001878:	2200      	movs	r2, #0
 800187a:	2110      	movs	r1, #16
 800187c:	4811      	ldr	r0, [pc, #68]	@ (80018c4 <accel_write_byte+0x5c>)
 800187e:	f00e f96b 	bl	800fb58 <HAL_GPIO_WritePin>
 8001882:	79fb      	ldrb	r3, [r7, #7]
 8001884:	73fb      	strb	r3, [r7, #15]
 8001886:	f107 020e 	add.w	r2, r7, #14
 800188a:	f107 010f 	add.w	r1, r7, #15
 800188e:	2364      	movs	r3, #100	@ 0x64
 8001890:	9300      	str	r3, [sp, #0]
 8001892:	2301      	movs	r3, #1
 8001894:	480c      	ldr	r0, [pc, #48]	@ (80018c8 <accel_write_byte+0x60>)
 8001896:	f011 ffe7 	bl	8013868 <HAL_SPI_TransmitReceive>
 800189a:	79bb      	ldrb	r3, [r7, #6]
 800189c:	73fb      	strb	r3, [r7, #15]
 800189e:	f107 020e 	add.w	r2, r7, #14
 80018a2:	f107 010f 	add.w	r1, r7, #15
 80018a6:	2364      	movs	r3, #100	@ 0x64
 80018a8:	9300      	str	r3, [sp, #0]
 80018aa:	2301      	movs	r3, #1
 80018ac:	4806      	ldr	r0, [pc, #24]	@ (80018c8 <accel_write_byte+0x60>)
 80018ae:	f011 ffdb 	bl	8013868 <HAL_SPI_TransmitReceive>
 80018b2:	2201      	movs	r2, #1
 80018b4:	2110      	movs	r1, #16
 80018b6:	4803      	ldr	r0, [pc, #12]	@ (80018c4 <accel_write_byte+0x5c>)
 80018b8:	f00e f94e 	bl	800fb58 <HAL_GPIO_WritePin>
 80018bc:	bf00      	nop
 80018be:	3710      	adds	r7, #16
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bd80      	pop	{r7, pc}
 80018c4:	40020000 	.word	0x40020000
 80018c8:	20001994 	.word	0x20001994

080018cc <accel_read_byte>:
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b086      	sub	sp, #24
 80018d0:	af02      	add	r7, sp, #8
 80018d2:	4603      	mov	r3, r0
 80018d4:	71fb      	strb	r3, [r7, #7]
 80018d6:	2200      	movs	r2, #0
 80018d8:	2110      	movs	r1, #16
 80018da:	4816      	ldr	r0, [pc, #88]	@ (8001934 <accel_read_byte+0x68>)
 80018dc:	f00e f93c 	bl	800fb58 <HAL_GPIO_WritePin>
 80018e0:	79fb      	ldrb	r3, [r7, #7]
 80018e2:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80018e6:	b2db      	uxtb	r3, r3
 80018e8:	73fb      	strb	r3, [r7, #15]
 80018ea:	f107 020e 	add.w	r2, r7, #14
 80018ee:	f107 010f 	add.w	r1, r7, #15
 80018f2:	2364      	movs	r3, #100	@ 0x64
 80018f4:	9300      	str	r3, [sp, #0]
 80018f6:	2301      	movs	r3, #1
 80018f8:	480f      	ldr	r0, [pc, #60]	@ (8001938 <accel_read_byte+0x6c>)
 80018fa:	f011 ffb5 	bl	8013868 <HAL_SPI_TransmitReceive>
 80018fe:	2355      	movs	r3, #85	@ 0x55
 8001900:	73fb      	strb	r3, [r7, #15]
 8001902:	f107 010e 	add.w	r1, r7, #14
 8001906:	2364      	movs	r3, #100	@ 0x64
 8001908:	2201      	movs	r2, #1
 800190a:	480b      	ldr	r0, [pc, #44]	@ (8001938 <accel_read_byte+0x6c>)
 800190c:	f011 fe9b 	bl	8013646 <HAL_SPI_Receive>
 8001910:	f107 010e 	add.w	r1, r7, #14
 8001914:	2364      	movs	r3, #100	@ 0x64
 8001916:	2201      	movs	r2, #1
 8001918:	4807      	ldr	r0, [pc, #28]	@ (8001938 <accel_read_byte+0x6c>)
 800191a:	f011 fe94 	bl	8013646 <HAL_SPI_Receive>
 800191e:	2201      	movs	r2, #1
 8001920:	2110      	movs	r1, #16
 8001922:	4804      	ldr	r0, [pc, #16]	@ (8001934 <accel_read_byte+0x68>)
 8001924:	f00e f918 	bl	800fb58 <HAL_GPIO_WritePin>
 8001928:	7bbb      	ldrb	r3, [r7, #14]
 800192a:	4618      	mov	r0, r3
 800192c:	3710      	adds	r7, #16
 800192e:	46bd      	mov	sp, r7
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	40020000 	.word	0x40020000
 8001938:	20001994 	.word	0x20001994

0800193c <accel_read_bytes>:
 800193c:	b580      	push	{r7, lr}
 800193e:	b086      	sub	sp, #24
 8001940:	af02      	add	r7, sp, #8
 8001942:	4603      	mov	r3, r0
 8001944:	6039      	str	r1, [r7, #0]
 8001946:	71fb      	strb	r3, [r7, #7]
 8001948:	4613      	mov	r3, r2
 800194a:	71bb      	strb	r3, [r7, #6]
 800194c:	2200      	movs	r2, #0
 800194e:	2110      	movs	r1, #16
 8001950:	4814      	ldr	r0, [pc, #80]	@ (80019a4 <accel_read_bytes+0x68>)
 8001952:	f00e f901 	bl	800fb58 <HAL_GPIO_WritePin>
 8001956:	79fb      	ldrb	r3, [r7, #7]
 8001958:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800195c:	b2db      	uxtb	r3, r3
 800195e:	73fb      	strb	r3, [r7, #15]
 8001960:	f107 020e 	add.w	r2, r7, #14
 8001964:	f107 010f 	add.w	r1, r7, #15
 8001968:	2364      	movs	r3, #100	@ 0x64
 800196a:	9300      	str	r3, [sp, #0]
 800196c:	2301      	movs	r3, #1
 800196e:	480e      	ldr	r0, [pc, #56]	@ (80019a8 <accel_read_bytes+0x6c>)
 8001970:	f011 ff7a 	bl	8013868 <HAL_SPI_TransmitReceive>
 8001974:	f107 010e 	add.w	r1, r7, #14
 8001978:	2364      	movs	r3, #100	@ 0x64
 800197a:	2201      	movs	r2, #1
 800197c:	480a      	ldr	r0, [pc, #40]	@ (80019a8 <accel_read_bytes+0x6c>)
 800197e:	f011 fe62 	bl	8013646 <HAL_SPI_Receive>
 8001982:	79bb      	ldrb	r3, [r7, #6]
 8001984:	b29a      	uxth	r2, r3
 8001986:	2364      	movs	r3, #100	@ 0x64
 8001988:	6839      	ldr	r1, [r7, #0]
 800198a:	4807      	ldr	r0, [pc, #28]	@ (80019a8 <accel_read_bytes+0x6c>)
 800198c:	f011 fe5b 	bl	8013646 <HAL_SPI_Receive>
 8001990:	2201      	movs	r2, #1
 8001992:	2110      	movs	r1, #16
 8001994:	4803      	ldr	r0, [pc, #12]	@ (80019a4 <accel_read_bytes+0x68>)
 8001996:	f00e f8df 	bl	800fb58 <HAL_GPIO_WritePin>
 800199a:	2300      	movs	r3, #0
 800199c:	4618      	mov	r0, r3
 800199e:	3710      	adds	r7, #16
 80019a0:	46bd      	mov	sp, r7
 80019a2:	bd80      	pop	{r7, pc}
 80019a4:	40020000 	.word	0x40020000
 80019a8:	20001994 	.word	0x20001994

080019ac <gyro_init>:
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b082      	sub	sp, #8
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	21b6      	movs	r1, #182	@ 0xb6
 80019b4:	2014      	movs	r0, #20
 80019b6:	f7ff fec5 	bl	8001744 <gyro_write_byte>
 80019ba:	200a      	movs	r0, #10
 80019bc:	f00c f908 	bl	800dbd0 <HAL_Delay>
 80019c0:	2100      	movs	r1, #0
 80019c2:	2011      	movs	r0, #17
 80019c4:	f7ff febe 	bl	8001744 <gyro_write_byte>
 80019c8:	2002      	movs	r0, #2
 80019ca:	f00c f901 	bl	800dbd0 <HAL_Delay>
 80019ce:	2000      	movs	r0, #0
 80019d0:	f7ff feea 	bl	80017a8 <gyro_read_byte>
 80019d4:	4603      	mov	r3, r0
 80019d6:	80fb      	strh	r3, [r7, #6]
 80019d8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80019dc:	2b0f      	cmp	r3, #15
 80019de:	d001      	beq.n	80019e4 <gyro_init+0x38>
 80019e0:	f7ff fe9a 	bl	8001718 <__NVIC_SystemReset>
 80019e4:	2002      	movs	r0, #2
 80019e6:	f00c f8f3 	bl	800dbd0 <HAL_Delay>
 80019ea:	2102      	movs	r1, #2
 80019ec:	200f      	movs	r0, #15
 80019ee:	f7ff fea9 	bl	8001744 <gyro_write_byte>
 80019f2:	2002      	movs	r0, #2
 80019f4:	f00c f8ec 	bl	800dbd0 <HAL_Delay>
 80019f8:	2181      	movs	r1, #129	@ 0x81
 80019fa:	2010      	movs	r0, #16
 80019fc:	f7ff fea2 	bl	8001744 <gyro_write_byte>
 8001a00:	2002      	movs	r0, #2
 8001a02:	f00c f8e5 	bl	800dbd0 <HAL_Delay>
 8001a06:	2101      	movs	r1, #1
 8001a08:	2016      	movs	r0, #22
 8001a0a:	f7ff fe9b 	bl	8001744 <gyro_write_byte>
 8001a0e:	2002      	movs	r0, #2
 8001a10:	f00c f8de 	bl	800dbd0 <HAL_Delay>
 8001a14:	2101      	movs	r1, #1
 8001a16:	2018      	movs	r0, #24
 8001a18:	f7ff fe94 	bl	8001744 <gyro_write_byte>
 8001a1c:	2002      	movs	r0, #2
 8001a1e:	f00c f8d7 	bl	800dbd0 <HAL_Delay>
 8001a22:	2300      	movs	r3, #0
 8001a24:	4618      	mov	r0, r3
 8001a26:	3708      	adds	r7, #8
 8001a28:	46bd      	mov	sp, r7
 8001a2a:	bd80      	pop	{r7, pc}

08001a2c <accel_init>:
 8001a2c:	b580      	push	{r7, lr}
 8001a2e:	b082      	sub	sp, #8
 8001a30:	af00      	add	r7, sp, #0
 8001a32:	2000      	movs	r0, #0
 8001a34:	f7ff ff4a 	bl	80018cc <accel_read_byte>
 8001a38:	4603      	mov	r3, r0
 8001a3a:	71fb      	strb	r3, [r7, #7]
 8001a3c:	2002      	movs	r0, #2
 8001a3e:	f00c f8c7 	bl	800dbd0 <HAL_Delay>
 8001a42:	2000      	movs	r0, #0
 8001a44:	f7ff ff42 	bl	80018cc <accel_read_byte>
 8001a48:	4603      	mov	r3, r0
 8001a4a:	71fb      	strb	r3, [r7, #7]
 8001a4c:	2002      	movs	r0, #2
 8001a4e:	f00c f8bf 	bl	800dbd0 <HAL_Delay>
 8001a52:	21b6      	movs	r1, #182	@ 0xb6
 8001a54:	207e      	movs	r0, #126	@ 0x7e
 8001a56:	f7ff ff07 	bl	8001868 <accel_write_byte>
 8001a5a:	200a      	movs	r0, #10
 8001a5c:	f00c f8b8 	bl	800dbd0 <HAL_Delay>
 8001a60:	2000      	movs	r0, #0
 8001a62:	f7ff ff33 	bl	80018cc <accel_read_byte>
 8001a66:	4603      	mov	r3, r0
 8001a68:	71fb      	strb	r3, [r7, #7]
 8001a6a:	2002      	movs	r0, #2
 8001a6c:	f00c f8b0 	bl	800dbd0 <HAL_Delay>
 8001a70:	2000      	movs	r0, #0
 8001a72:	f7ff ff2b 	bl	80018cc <accel_read_byte>
 8001a76:	4603      	mov	r3, r0
 8001a78:	71fb      	strb	r3, [r7, #7]
 8001a7a:	2002      	movs	r0, #2
 8001a7c:	f00c f8a8 	bl	800dbd0 <HAL_Delay>
 8001a80:	79fb      	ldrb	r3, [r7, #7]
 8001a82:	2b1e      	cmp	r3, #30
 8001a84:	d001      	beq.n	8001a8a <accel_init+0x5e>
 8001a86:	2301      	movs	r3, #1
 8001a88:	e023      	b.n	8001ad2 <accel_init+0xa6>
 8001a8a:	2104      	movs	r1, #4
 8001a8c:	207d      	movs	r0, #125	@ 0x7d
 8001a8e:	f7ff feeb 	bl	8001868 <accel_write_byte>
 8001a92:	2002      	movs	r0, #2
 8001a94:	f00c f89c 	bl	800dbd0 <HAL_Delay>
 8001a98:	2100      	movs	r1, #0
 8001a9a:	207c      	movs	r0, #124	@ 0x7c
 8001a9c:	f7ff fee4 	bl	8001868 <accel_write_byte>
 8001aa0:	2002      	movs	r0, #2
 8001aa2:	f00c f895 	bl	800dbd0 <HAL_Delay>
 8001aa6:	21a9      	movs	r1, #169	@ 0xa9
 8001aa8:	2040      	movs	r0, #64	@ 0x40
 8001aaa:	f7ff fedd 	bl	8001868 <accel_write_byte>
 8001aae:	2002      	movs	r0, #2
 8001ab0:	f00c f88e 	bl	800dbd0 <HAL_Delay>
 8001ab4:	2101      	movs	r1, #1
 8001ab6:	2041      	movs	r0, #65	@ 0x41
 8001ab8:	f7ff fed6 	bl	8001868 <accel_write_byte>
 8001abc:	2002      	movs	r0, #2
 8001abe:	f00c f887 	bl	800dbd0 <HAL_Delay>
 8001ac2:	2108      	movs	r1, #8
 8001ac4:	2053      	movs	r0, #83	@ 0x53
 8001ac6:	f7ff fecf 	bl	8001868 <accel_write_byte>
 8001aca:	2002      	movs	r0, #2
 8001acc:	f00c f880 	bl	800dbd0 <HAL_Delay>
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	3708      	adds	r7, #8
 8001ad6:	46bd      	mov	sp, r7
 8001ad8:	bd80      	pop	{r7, pc}
	...

08001adc <mag_read_single_reg>:
 8001adc:	b580      	push	{r7, lr}
 8001ade:	b088      	sub	sp, #32
 8001ae0:	af04      	add	r7, sp, #16
 8001ae2:	4603      	mov	r3, r0
 8001ae4:	71fb      	strb	r3, [r7, #7]
 8001ae6:	2300      	movs	r3, #0
 8001ae8:	73fb      	strb	r3, [r7, #15]
 8001aea:	79fb      	ldrb	r3, [r7, #7]
 8001aec:	b29a      	uxth	r2, r3
 8001aee:	2305      	movs	r3, #5
 8001af0:	9302      	str	r3, [sp, #8]
 8001af2:	2301      	movs	r3, #1
 8001af4:	9301      	str	r3, [sp, #4]
 8001af6:	f107 030f 	add.w	r3, r7, #15
 8001afa:	9300      	str	r3, [sp, #0]
 8001afc:	2301      	movs	r3, #1
 8001afe:	211c      	movs	r1, #28
 8001b00:	4803      	ldr	r0, [pc, #12]	@ (8001b10 <mag_read_single_reg+0x34>)
 8001b02:	f00e fa99 	bl	8010038 <HAL_I2C_Mem_Read>
 8001b06:	7bfb      	ldrb	r3, [r7, #15]
 8001b08:	4618      	mov	r0, r3
 8001b0a:	3710      	adds	r7, #16
 8001b0c:	46bd      	mov	sp, r7
 8001b0e:	bd80      	pop	{r7, pc}
 8001b10:	20001870 	.word	0x20001870

08001b14 <mag_write_single_reg>:
 8001b14:	b580      	push	{r7, lr}
 8001b16:	b086      	sub	sp, #24
 8001b18:	af04      	add	r7, sp, #16
 8001b1a:	4603      	mov	r3, r0
 8001b1c:	460a      	mov	r2, r1
 8001b1e:	71fb      	strb	r3, [r7, #7]
 8001b20:	4613      	mov	r3, r2
 8001b22:	71bb      	strb	r3, [r7, #6]
 8001b24:	79fb      	ldrb	r3, [r7, #7]
 8001b26:	b29a      	uxth	r2, r3
 8001b28:	2305      	movs	r3, #5
 8001b2a:	9302      	str	r3, [sp, #8]
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	9301      	str	r3, [sp, #4]
 8001b30:	1dbb      	adds	r3, r7, #6
 8001b32:	9300      	str	r3, [sp, #0]
 8001b34:	2301      	movs	r3, #1
 8001b36:	211c      	movs	r1, #28
 8001b38:	4803      	ldr	r0, [pc, #12]	@ (8001b48 <mag_write_single_reg+0x34>)
 8001b3a:	f00e f983 	bl	800fe44 <HAL_I2C_Mem_Write>
 8001b3e:	bf00      	nop
 8001b40:	3708      	adds	r7, #8
 8001b42:	46bd      	mov	sp, r7
 8001b44:	bd80      	pop	{r7, pc}
 8001b46:	bf00      	nop
 8001b48:	20001870 	.word	0x20001870

08001b4c <mag_read_multi_reg_dma>:
 8001b4c:	b580      	push	{r7, lr}
 8001b4e:	b084      	sub	sp, #16
 8001b50:	af02      	add	r7, sp, #8
 8001b52:	4603      	mov	r3, r0
 8001b54:	603a      	str	r2, [r7, #0]
 8001b56:	71fb      	strb	r3, [r7, #7]
 8001b58:	460b      	mov	r3, r1
 8001b5a:	80bb      	strh	r3, [r7, #4]
 8001b5c:	79fb      	ldrb	r3, [r7, #7]
 8001b5e:	b29a      	uxth	r2, r3
 8001b60:	88bb      	ldrh	r3, [r7, #4]
 8001b62:	9301      	str	r3, [sp, #4]
 8001b64:	683b      	ldr	r3, [r7, #0]
 8001b66:	9300      	str	r3, [sp, #0]
 8001b68:	2301      	movs	r3, #1
 8001b6a:	211c      	movs	r1, #28
 8001b6c:	4803      	ldr	r0, [pc, #12]	@ (8001b7c <mag_read_multi_reg_dma+0x30>)
 8001b6e:	f00e fc89 	bl	8010484 <HAL_I2C_Mem_Read_DMA>
 8001b72:	bf00      	nop
 8001b74:	3708      	adds	r7, #8
 8001b76:	46bd      	mov	sp, r7
 8001b78:	bd80      	pop	{r7, pc}
 8001b7a:	bf00      	nop
 8001b7c:	20001870 	.word	0x20001870

08001b80 <imu_init>:
 8001b80:	b580      	push	{r7, lr}
 8001b82:	af00      	add	r7, sp, #0
 8001b84:	2200      	movs	r2, #0
 8001b86:	2110      	movs	r1, #16
 8001b88:	480e      	ldr	r0, [pc, #56]	@ (8001bc4 <imu_init+0x44>)
 8001b8a:	f00d ffe5 	bl	800fb58 <HAL_GPIO_WritePin>
 8001b8e:	2200      	movs	r2, #0
 8001b90:	2101      	movs	r1, #1
 8001b92:	480d      	ldr	r0, [pc, #52]	@ (8001bc8 <imu_init+0x48>)
 8001b94:	f00d ffe0 	bl	800fb58 <HAL_GPIO_WritePin>
 8001b98:	2064      	movs	r0, #100	@ 0x64
 8001b9a:	f00c f819 	bl	800dbd0 <HAL_Delay>
 8001b9e:	2201      	movs	r2, #1
 8001ba0:	2110      	movs	r1, #16
 8001ba2:	4808      	ldr	r0, [pc, #32]	@ (8001bc4 <imu_init+0x44>)
 8001ba4:	f00d ffd8 	bl	800fb58 <HAL_GPIO_WritePin>
 8001ba8:	2201      	movs	r2, #1
 8001baa:	2101      	movs	r1, #1
 8001bac:	4806      	ldr	r0, [pc, #24]	@ (8001bc8 <imu_init+0x48>)
 8001bae:	f00d ffd3 	bl	800fb58 <HAL_GPIO_WritePin>
 8001bb2:	f7ff fefb 	bl	80019ac <gyro_init>
 8001bb6:	f7ff ff39 	bl	8001a2c <accel_init>
 8001bba:	f000 f905 	bl	8001dc8 <ist8310_init>
 8001bbe:	bf00      	nop
 8001bc0:	bd80      	pop	{r7, pc}
 8001bc2:	bf00      	nop
 8001bc4:	40020000 	.word	0x40020000
 8001bc8:	40020400 	.word	0x40020400

08001bcc <imu_start_ints>:
 8001bcc:	b580      	push	{r7, lr}
 8001bce:	af00      	add	r7, sp, #0
 8001bd0:	2180      	movs	r1, #128	@ 0x80
 8001bd2:	2015      	movs	r0, #21
 8001bd4:	f7ff fdb6 	bl	8001744 <gyro_write_byte>
 8001bd8:	200a      	movs	r0, #10
 8001bda:	f019 f9b3 	bl	801af44 <vTaskDelay>
 8001bde:	2104      	movs	r1, #4
 8001be0:	2058      	movs	r0, #88	@ 0x58
 8001be2:	f7ff fe41 	bl	8001868 <accel_write_byte>
 8001be6:	200a      	movs	r0, #10
 8001be8:	f019 f9ac 	bl	801af44 <vTaskDelay>
 8001bec:	2108      	movs	r1, #8
 8001bee:	200b      	movs	r0, #11
 8001bf0:	f7ff ff90 	bl	8001b14 <mag_write_single_reg>
 8001bf4:	4b02      	ldr	r3, [pc, #8]	@ (8001c00 <imu_start_ints+0x34>)
 8001bf6:	2201      	movs	r2, #1
 8001bf8:	701a      	strb	r2, [r3, #0]
 8001bfa:	bf00      	nop
 8001bfc:	bd80      	pop	{r7, pc}
 8001bfe:	bf00      	nop
 8001c00:	200008b0 	.word	0x200008b0

08001c04 <accel_get_data>:
 8001c04:	b580      	push	{r7, lr}
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	2206      	movs	r2, #6
 8001c0a:	4903      	ldr	r1, [pc, #12]	@ (8001c18 <accel_get_data+0x14>)
 8001c0c:	2012      	movs	r0, #18
 8001c0e:	f7ff fe95 	bl	800193c <accel_read_bytes>
 8001c12:	bf00      	nop
 8001c14:	bd80      	pop	{r7, pc}
 8001c16:	bf00      	nop
 8001c18:	20000860 	.word	0x20000860

08001c1c <accel_process_data>:
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b082      	sub	sp, #8
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	4b28      	ldr	r3, [pc, #160]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c24:	785b      	ldrb	r3, [r3, #1]
 8001c26:	021b      	lsls	r3, r3, #8
 8001c28:	b21a      	sxth	r2, r3
 8001c2a:	4b26      	ldr	r3, [pc, #152]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c2c:	781b      	ldrb	r3, [r3, #0]
 8001c2e:	b21b      	sxth	r3, r3
 8001c30:	4313      	orrs	r3, r2
 8001c32:	80fb      	strh	r3, [r7, #6]
 8001c34:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c38:	ee07 3a90 	vmov	s15, r3
 8001c3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c40:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8001cc8 <accel_process_data+0xac>
 8001c44:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c48:	4b20      	ldr	r3, [pc, #128]	@ (8001ccc <accel_process_data+0xb0>)
 8001c4a:	edc3 7a04 	vstr	s15, [r3, #16]
 8001c4e:	4b1d      	ldr	r3, [pc, #116]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c50:	78db      	ldrb	r3, [r3, #3]
 8001c52:	021b      	lsls	r3, r3, #8
 8001c54:	b21a      	sxth	r2, r3
 8001c56:	4b1b      	ldr	r3, [pc, #108]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c58:	789b      	ldrb	r3, [r3, #2]
 8001c5a:	b21b      	sxth	r3, r3
 8001c5c:	4313      	orrs	r3, r2
 8001c5e:	80fb      	strh	r3, [r7, #6]
 8001c60:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c64:	ee07 3a90 	vmov	s15, r3
 8001c68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c6c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001cc8 <accel_process_data+0xac>
 8001c70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c74:	4b15      	ldr	r3, [pc, #84]	@ (8001ccc <accel_process_data+0xb0>)
 8001c76:	edc3 7a05 	vstr	s15, [r3, #20]
 8001c7a:	4b12      	ldr	r3, [pc, #72]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c7c:	795b      	ldrb	r3, [r3, #5]
 8001c7e:	021b      	lsls	r3, r3, #8
 8001c80:	b21a      	sxth	r2, r3
 8001c82:	4b10      	ldr	r3, [pc, #64]	@ (8001cc4 <accel_process_data+0xa8>)
 8001c84:	791b      	ldrb	r3, [r3, #4]
 8001c86:	b21b      	sxth	r3, r3
 8001c88:	4313      	orrs	r3, r2
 8001c8a:	80fb      	strh	r3, [r7, #6]
 8001c8c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001c90:	ee07 3a90 	vmov	s15, r3
 8001c94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001c98:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001cc8 <accel_process_data+0xac>
 8001c9c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001ca0:	4b0a      	ldr	r3, [pc, #40]	@ (8001ccc <accel_process_data+0xb0>)
 8001ca2:	edc3 7a06 	vstr	s15, [r3, #24]
 8001ca6:	f00b ff87 	bl	800dbb8 <HAL_GetTick>
 8001caa:	4603      	mov	r3, r0
 8001cac:	4a07      	ldr	r2, [pc, #28]	@ (8001ccc <accel_process_data+0xb0>)
 8001cae:	61d3      	str	r3, [r2, #28]
 8001cb0:	4b06      	ldr	r3, [pc, #24]	@ (8001ccc <accel_process_data+0xb0>)
 8001cb2:	3310      	adds	r3, #16
 8001cb4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001cb6:	f006 ffeb 	bl	8008c90 <accel_data_ready>
 8001cba:	bf00      	nop
 8001cbc:	3708      	adds	r7, #8
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	20000860 	.word	0x20000860
 8001cc8:	3aeb3333 	.word	0x3aeb3333
 8001ccc:	20000878 	.word	0x20000878

08001cd0 <gyro_get_data>:
 8001cd0:	b580      	push	{r7, lr}
 8001cd2:	af00      	add	r7, sp, #0
 8001cd4:	2206      	movs	r2, #6
 8001cd6:	4903      	ldr	r1, [pc, #12]	@ (8001ce4 <gyro_get_data+0x14>)
 8001cd8:	2002      	movs	r0, #2
 8001cda:	f7ff fd93 	bl	8001804 <gyro_read_bytes>
 8001cde:	bf00      	nop
 8001ce0:	bd80      	pop	{r7, pc}
 8001ce2:	bf00      	nop
 8001ce4:	20000868 	.word	0x20000868

08001ce8 <gyro_process_data>:
 8001ce8:	b580      	push	{r7, lr}
 8001cea:	b082      	sub	sp, #8
 8001cec:	af00      	add	r7, sp, #0
 8001cee:	4b33      	ldr	r3, [pc, #204]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf0:	785b      	ldrb	r3, [r3, #1]
 8001cf2:	021b      	lsls	r3, r3, #8
 8001cf4:	b21a      	sxth	r2, r3
 8001cf6:	4b31      	ldr	r3, [pc, #196]	@ (8001dbc <gyro_process_data+0xd4>)
 8001cf8:	781b      	ldrb	r3, [r3, #0]
 8001cfa:	b21b      	sxth	r3, r3
 8001cfc:	4313      	orrs	r3, r2
 8001cfe:	80fb      	strh	r3, [r7, #6]
 8001d00:	88fa      	ldrh	r2, [r7, #6]
 8001d02:	4b2f      	ldr	r3, [pc, #188]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d04:	f9b3 3032 	ldrsh.w	r3, [r3, #50]	@ 0x32
 8001d08:	b29b      	uxth	r3, r3
 8001d0a:	1ad3      	subs	r3, r2, r3
 8001d0c:	b29b      	uxth	r3, r3
 8001d0e:	80fb      	strh	r3, [r7, #6]
 8001d10:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d14:	ee07 3a90 	vmov	s15, r3
 8001d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d1c:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d24:	4b26      	ldr	r3, [pc, #152]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d26:	edc3 7a00 	vstr	s15, [r3]
 8001d2a:	4b24      	ldr	r3, [pc, #144]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d2c:	78db      	ldrb	r3, [r3, #3]
 8001d2e:	021b      	lsls	r3, r3, #8
 8001d30:	b21a      	sxth	r2, r3
 8001d32:	4b22      	ldr	r3, [pc, #136]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d34:	789b      	ldrb	r3, [r3, #2]
 8001d36:	b21b      	sxth	r3, r3
 8001d38:	4313      	orrs	r3, r2
 8001d3a:	80fb      	strh	r3, [r7, #6]
 8001d3c:	88fa      	ldrh	r2, [r7, #6]
 8001d3e:	4b20      	ldr	r3, [pc, #128]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d40:	f9b3 3034 	ldrsh.w	r3, [r3, #52]	@ 0x34
 8001d44:	b29b      	uxth	r3, r3
 8001d46:	1ad3      	subs	r3, r2, r3
 8001d48:	b29b      	uxth	r3, r3
 8001d4a:	80fb      	strh	r3, [r7, #6]
 8001d4c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d50:	ee07 3a90 	vmov	s15, r3
 8001d54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d58:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d5c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d60:	4b17      	ldr	r3, [pc, #92]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d62:	edc3 7a01 	vstr	s15, [r3, #4]
 8001d66:	4b15      	ldr	r3, [pc, #84]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d68:	795b      	ldrb	r3, [r3, #5]
 8001d6a:	021b      	lsls	r3, r3, #8
 8001d6c:	b21a      	sxth	r2, r3
 8001d6e:	4b13      	ldr	r3, [pc, #76]	@ (8001dbc <gyro_process_data+0xd4>)
 8001d70:	791b      	ldrb	r3, [r3, #4]
 8001d72:	b21b      	sxth	r3, r3
 8001d74:	4313      	orrs	r3, r2
 8001d76:	80fb      	strh	r3, [r7, #6]
 8001d78:	88fa      	ldrh	r2, [r7, #6]
 8001d7a:	4b11      	ldr	r3, [pc, #68]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d7c:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	@ 0x36
 8001d80:	b29b      	uxth	r3, r3
 8001d82:	1ad3      	subs	r3, r2, r3
 8001d84:	b29b      	uxth	r3, r3
 8001d86:	80fb      	strh	r3, [r7, #6]
 8001d88:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001d8c:	ee07 3a90 	vmov	s15, r3
 8001d90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d94:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8001dc4 <gyro_process_data+0xdc>
 8001d98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001d9c:	4b08      	ldr	r3, [pc, #32]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001d9e:	edc3 7a02 	vstr	s15, [r3, #8]
 8001da2:	f00b ff09 	bl	800dbb8 <HAL_GetTick>
 8001da6:	4603      	mov	r3, r0
 8001da8:	4a05      	ldr	r2, [pc, #20]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001daa:	60d3      	str	r3, [r2, #12]
 8001dac:	4b04      	ldr	r3, [pc, #16]	@ (8001dc0 <gyro_process_data+0xd8>)
 8001dae:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001db0:	f006 ff1e 	bl	8008bf0 <gyro_data_ready>
 8001db4:	bf00      	nop
 8001db6:	3708      	adds	r7, #8
 8001db8:	46bd      	mov	sp, r7
 8001dba:	bd80      	pop	{r7, pc}
 8001dbc:	20000868 	.word	0x20000868
 8001dc0:	20000878 	.word	0x20000878
 8001dc4:	398ba058 	.word	0x398ba058

08001dc8 <ist8310_init>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b082      	sub	sp, #8
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	2200      	movs	r2, #0
 8001dd0:	2140      	movs	r1, #64	@ 0x40
 8001dd2:	481d      	ldr	r0, [pc, #116]	@ (8001e48 <ist8310_init+0x80>)
 8001dd4:	f00d fec0 	bl	800fb58 <HAL_GPIO_WritePin>
 8001dd8:	2002      	movs	r0, #2
 8001dda:	f00b fef9 	bl	800dbd0 <HAL_Delay>
 8001dde:	2201      	movs	r2, #1
 8001de0:	2140      	movs	r1, #64	@ 0x40
 8001de2:	4819      	ldr	r0, [pc, #100]	@ (8001e48 <ist8310_init+0x80>)
 8001de4:	f00d feb8 	bl	800fb58 <HAL_GPIO_WritePin>
 8001de8:	2002      	movs	r0, #2
 8001dea:	f00b fef1 	bl	800dbd0 <HAL_Delay>
 8001dee:	2000      	movs	r0, #0
 8001df0:	f7ff fe74 	bl	8001adc <mag_read_single_reg>
 8001df4:	4603      	mov	r3, r0
 8001df6:	71fb      	strb	r3, [r7, #7]
 8001df8:	79fb      	ldrb	r3, [r7, #7]
 8001dfa:	2b10      	cmp	r3, #16
 8001dfc:	d00a      	beq.n	8001e14 <ist8310_init+0x4c>
 8001dfe:	4b13      	ldr	r3, [pc, #76]	@ (8001e4c <ist8310_init+0x84>)
 8001e00:	2200      	movs	r2, #0
 8001e02:	841a      	strh	r2, [r3, #32]
 8001e04:	4b11      	ldr	r3, [pc, #68]	@ (8001e4c <ist8310_init+0x84>)
 8001e06:	2200      	movs	r2, #0
 8001e08:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001e0a:	4b10      	ldr	r3, [pc, #64]	@ (8001e4c <ist8310_init+0x84>)
 8001e0c:	2200      	movs	r2, #0
 8001e0e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001e10:	2300      	movs	r3, #0
 8001e12:	e015      	b.n	8001e40 <ist8310_init+0x78>
 8001e14:	2002      	movs	r0, #2
 8001e16:	f00b fedb 	bl	800dbd0 <HAL_Delay>
 8001e1a:	2109      	movs	r1, #9
 8001e1c:	2041      	movs	r0, #65	@ 0x41
 8001e1e:	f7ff fe79 	bl	8001b14 <mag_write_single_reg>
 8001e22:	2002      	movs	r0, #2
 8001e24:	f00b fed4 	bl	800dbd0 <HAL_Delay>
 8001e28:	21c0      	movs	r1, #192	@ 0xc0
 8001e2a:	2042      	movs	r0, #66	@ 0x42
 8001e2c:	f7ff fe72 	bl	8001b14 <mag_write_single_reg>
 8001e30:	2002      	movs	r0, #2
 8001e32:	f00b fecd 	bl	800dbd0 <HAL_Delay>
 8001e36:	210b      	movs	r1, #11
 8001e38:	200a      	movs	r0, #10
 8001e3a:	f7ff fe6b 	bl	8001b14 <mag_write_single_reg>
 8001e3e:	2300      	movs	r3, #0
 8001e40:	4618      	mov	r0, r3
 8001e42:	3708      	adds	r7, #8
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bd80      	pop	{r7, pc}
 8001e48:	40021800 	.word	0x40021800
 8001e4c:	20000878 	.word	0x20000878

08001e50 <ist8310_get_data>:
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
 8001e54:	4a05      	ldr	r2, [pc, #20]	@ (8001e6c <ist8310_get_data+0x1c>)
 8001e56:	2105      	movs	r1, #5
 8001e58:	2003      	movs	r0, #3
 8001e5a:	f7ff fe77 	bl	8001b4c <mag_read_multi_reg_dma>
 8001e5e:	f00b feab 	bl	800dbb8 <HAL_GetTick>
 8001e62:	4603      	mov	r3, r0
 8001e64:	4a02      	ldr	r2, [pc, #8]	@ (8001e70 <ist8310_get_data+0x20>)
 8001e66:	6293      	str	r3, [r2, #40]	@ 0x28
 8001e68:	bf00      	nop
 8001e6a:	bd80      	pop	{r7, pc}
 8001e6c:	20000870 	.word	0x20000870
 8001e70:	20000878 	.word	0x20000878

08001e74 <HAL_GPIO_EXTI_Callback>:
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b082      	sub	sp, #8
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	4603      	mov	r3, r0
 8001e7c:	80fb      	strh	r3, [r7, #6]
 8001e7e:	4b13      	ldr	r3, [pc, #76]	@ (8001ecc <HAL_GPIO_EXTI_Callback+0x58>)
 8001e80:	781b      	ldrb	r3, [r3, #0]
 8001e82:	2b01      	cmp	r3, #1
 8001e84:	d11e      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001e86:	4b12      	ldr	r3, [pc, #72]	@ (8001ed0 <HAL_GPIO_EXTI_Callback+0x5c>)
 8001e88:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8001e8c:	b2db      	uxtb	r3, r3
 8001e8e:	2b01      	cmp	r3, #1
 8001e90:	d10d      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001e92:	88fb      	ldrh	r3, [r7, #6]
 8001e94:	2b20      	cmp	r3, #32
 8001e96:	d103      	bne.n	8001ea0 <HAL_GPIO_EXTI_Callback+0x2c>
 8001e98:	f7ff ff1a 	bl	8001cd0 <gyro_get_data>
 8001e9c:	f7ff ff24 	bl	8001ce8 <gyro_process_data>
 8001ea0:	88fb      	ldrh	r3, [r7, #6]
 8001ea2:	2b10      	cmp	r3, #16
 8001ea4:	d103      	bne.n	8001eae <HAL_GPIO_EXTI_Callback+0x3a>
 8001ea6:	f7ff fead 	bl	8001c04 <accel_get_data>
 8001eaa:	f7ff feb7 	bl	8001c1c <accel_process_data>
 8001eae:	88fb      	ldrh	r3, [r7, #6]
 8001eb0:	2b08      	cmp	r3, #8
 8001eb2:	d107      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001eb4:	4b07      	ldr	r3, [pc, #28]	@ (8001ed4 <HAL_GPIO_EXTI_Callback+0x60>)
 8001eb6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001eba:	b2db      	uxtb	r3, r3
 8001ebc:	2b20      	cmp	r3, #32
 8001ebe:	d101      	bne.n	8001ec4 <HAL_GPIO_EXTI_Callback+0x50>
 8001ec0:	f7ff ffc6 	bl	8001e50 <ist8310_get_data>
 8001ec4:	bf00      	nop
 8001ec6:	3708      	adds	r7, #8
 8001ec8:	46bd      	mov	sp, r7
 8001eca:	bd80      	pop	{r7, pc}
 8001ecc:	200008b0 	.word	0x200008b0
 8001ed0:	20001994 	.word	0x20001994
 8001ed4:	20001870 	.word	0x20001870

08001ed8 <HAL_I2C_MemRxCpltCallback>:
 8001ed8:	b580      	push	{r7, lr}
 8001eda:	b084      	sub	sp, #16
 8001edc:	af00      	add	r7, sp, #0
 8001ede:	6078      	str	r0, [r7, #4]
 8001ee0:	4b19      	ldr	r3, [pc, #100]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ee2:	785b      	ldrb	r3, [r3, #1]
 8001ee4:	021b      	lsls	r3, r3, #8
 8001ee6:	b21a      	sxth	r2, r3
 8001ee8:	4b17      	ldr	r3, [pc, #92]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001eea:	781b      	ldrb	r3, [r3, #0]
 8001eec:	b21b      	sxth	r3, r3
 8001eee:	4313      	orrs	r3, r2
 8001ef0:	b21b      	sxth	r3, r3
 8001ef2:	813b      	strh	r3, [r7, #8]
 8001ef4:	4b14      	ldr	r3, [pc, #80]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001ef6:	78db      	ldrb	r3, [r3, #3]
 8001ef8:	021b      	lsls	r3, r3, #8
 8001efa:	b21a      	sxth	r2, r3
 8001efc:	4b12      	ldr	r3, [pc, #72]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001efe:	789b      	ldrb	r3, [r3, #2]
 8001f00:	b21b      	sxth	r3, r3
 8001f02:	4313      	orrs	r3, r2
 8001f04:	b21b      	sxth	r3, r3
 8001f06:	817b      	strh	r3, [r7, #10]
 8001f08:	4b0f      	ldr	r3, [pc, #60]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f0a:	795b      	ldrb	r3, [r3, #5]
 8001f0c:	021b      	lsls	r3, r3, #8
 8001f0e:	b21a      	sxth	r2, r3
 8001f10:	4b0d      	ldr	r3, [pc, #52]	@ (8001f48 <HAL_I2C_MemRxCpltCallback+0x70>)
 8001f12:	791b      	ldrb	r3, [r3, #4]
 8001f14:	b21b      	sxth	r3, r3
 8001f16:	4313      	orrs	r3, r2
 8001f18:	b21b      	sxth	r3, r3
 8001f1a:	81bb      	strh	r3, [r7, #12]
 8001f1c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8001f20:	4b0a      	ldr	r3, [pc, #40]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f22:	841a      	strh	r2, [r3, #32]
 8001f24:	f9b7 200a 	ldrsh.w	r2, [r7, #10]
 8001f28:	4b08      	ldr	r3, [pc, #32]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f2a:	845a      	strh	r2, [r3, #34]	@ 0x22
 8001f2c:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8001f30:	4b06      	ldr	r3, [pc, #24]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f32:	849a      	strh	r2, [r3, #36]	@ 0x24
 8001f34:	4b05      	ldr	r3, [pc, #20]	@ (8001f4c <HAL_I2C_MemRxCpltCallback+0x74>)
 8001f36:	3320      	adds	r3, #32
 8001f38:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8001f3c:	f006 fed4 	bl	8008ce8 <mag_data_ready>
 8001f40:	bf00      	nop
 8001f42:	3710      	adds	r7, #16
 8001f44:	46bd      	mov	sp, r7
 8001f46:	bd80      	pop	{r7, pc}
 8001f48:	20000870 	.word	0x20000870
 8001f4c:	20000878 	.word	0x20000878

08001f50 <led_green_off>:
 8001f50:	b480      	push	{r7}
 8001f52:	af00      	add	r7, sp, #0
 8001f54:	4b04      	ldr	r3, [pc, #16]	@ (8001f68 <led_green_off+0x18>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	2200      	movs	r2, #0
 8001f5a:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f5c:	bf00      	nop
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f64:	4770      	bx	lr
 8001f66:	bf00      	nop
 8001f68:	20001b88 	.word	0x20001b88

08001f6c <led_on>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	2100      	movs	r1, #0
 8001f72:	480c      	ldr	r0, [pc, #48]	@ (8001fa4 <led_on+0x38>)
 8001f74:	f012 f8b2 	bl	80140dc <HAL_TIM_PWM_Start>
 8001f78:	2104      	movs	r1, #4
 8001f7a:	480a      	ldr	r0, [pc, #40]	@ (8001fa4 <led_on+0x38>)
 8001f7c:	f012 f8ae 	bl	80140dc <HAL_TIM_PWM_Start>
 8001f80:	2108      	movs	r1, #8
 8001f82:	4808      	ldr	r0, [pc, #32]	@ (8001fa4 <led_on+0x38>)
 8001f84:	f012 f8aa 	bl	80140dc <HAL_TIM_PWM_Start>
 8001f88:	4b06      	ldr	r3, [pc, #24]	@ (8001fa4 <led_on+0x38>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	22ff      	movs	r2, #255	@ 0xff
 8001f8e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001f90:	4b04      	ldr	r3, [pc, #16]	@ (8001fa4 <led_on+0x38>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	22ff      	movs	r2, #255	@ 0xff
 8001f96:	639a      	str	r2, [r3, #56]	@ 0x38
 8001f98:	4b02      	ldr	r3, [pc, #8]	@ (8001fa4 <led_on+0x38>)
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	22ff      	movs	r2, #255	@ 0xff
 8001f9e:	635a      	str	r2, [r3, #52]	@ 0x34
 8001fa0:	bf00      	nop
 8001fa2:	bd80      	pop	{r7, pc}
 8001fa4:	20001b88 	.word	0x20001b88

08001fa8 <led_toggle>:
 8001fa8:	b480      	push	{r7}
 8001faa:	af00      	add	r7, sp, #0
 8001fac:	bf00      	nop
 8001fae:	46bd      	mov	sp, r7
 8001fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb4:	4770      	bx	lr
	...

08001fb8 <status_led>:
 8001fb8:	b480      	push	{r7}
 8001fba:	b083      	sub	sp, #12
 8001fbc:	af00      	add	r7, sp, #0
 8001fbe:	4603      	mov	r3, r0
 8001fc0:	460a      	mov	r2, r1
 8001fc2:	80fb      	strh	r3, [r7, #6]
 8001fc4:	4613      	mov	r3, r2
 8001fc6:	717b      	strb	r3, [r7, #5]
 8001fc8:	797b      	ldrb	r3, [r7, #5]
 8001fca:	2b00      	cmp	r3, #0
 8001fcc:	f040 8090 	bne.w	80020f0 <status_led+0x138>
 8001fd0:	88fb      	ldrh	r3, [r7, #6]
 8001fd2:	3b01      	subs	r3, #1
 8001fd4:	2b08      	cmp	r3, #8
 8001fd6:	f200 808a 	bhi.w	80020ee <status_led+0x136>
 8001fda:	a201      	add	r2, pc, #4	@ (adr r2, 8001fe0 <status_led+0x28>)
 8001fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001fe0:	08002005 	.word	0x08002005
 8001fe4:	0800201f 	.word	0x0800201f
 8001fe8:	08002039 	.word	0x08002039
 8001fec:	08002053 	.word	0x08002053
 8001ff0:	0800206d 	.word	0x0800206d
 8001ff4:	08002087 	.word	0x08002087
 8001ff8:	080020a1 	.word	0x080020a1
 8001ffc:	080020bb 	.word	0x080020bb
 8002000:	080020d5 	.word	0x080020d5
 8002004:	4b3d      	ldr	r3, [pc, #244]	@ (80020fc <status_led+0x144>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	22ff      	movs	r2, #255	@ 0xff
 800200a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800200c:	4b3b      	ldr	r3, [pc, #236]	@ (80020fc <status_led+0x144>)
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	2200      	movs	r2, #0
 8002012:	639a      	str	r2, [r3, #56]	@ 0x38
 8002014:	4b39      	ldr	r3, [pc, #228]	@ (80020fc <status_led+0x144>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	2200      	movs	r2, #0
 800201a:	635a      	str	r2, [r3, #52]	@ 0x34
 800201c:	e068      	b.n	80020f0 <status_led+0x138>
 800201e:	4b37      	ldr	r3, [pc, #220]	@ (80020fc <status_led+0x144>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	2200      	movs	r2, #0
 8002024:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002026:	4b35      	ldr	r3, [pc, #212]	@ (80020fc <status_led+0x144>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	22ff      	movs	r2, #255	@ 0xff
 800202c:	639a      	str	r2, [r3, #56]	@ 0x38
 800202e:	4b33      	ldr	r3, [pc, #204]	@ (80020fc <status_led+0x144>)
 8002030:	681b      	ldr	r3, [r3, #0]
 8002032:	2200      	movs	r2, #0
 8002034:	635a      	str	r2, [r3, #52]	@ 0x34
 8002036:	e05b      	b.n	80020f0 <status_led+0x138>
 8002038:	4b30      	ldr	r3, [pc, #192]	@ (80020fc <status_led+0x144>)
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	2200      	movs	r2, #0
 800203e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002040:	4b2e      	ldr	r3, [pc, #184]	@ (80020fc <status_led+0x144>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	2200      	movs	r2, #0
 8002046:	639a      	str	r2, [r3, #56]	@ 0x38
 8002048:	4b2c      	ldr	r3, [pc, #176]	@ (80020fc <status_led+0x144>)
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	22ff      	movs	r2, #255	@ 0xff
 800204e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002050:	e04e      	b.n	80020f0 <status_led+0x138>
 8002052:	4b2a      	ldr	r3, [pc, #168]	@ (80020fc <status_led+0x144>)
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	22ff      	movs	r2, #255	@ 0xff
 8002058:	63da      	str	r2, [r3, #60]	@ 0x3c
 800205a:	4b28      	ldr	r3, [pc, #160]	@ (80020fc <status_led+0x144>)
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	2200      	movs	r2, #0
 8002060:	639a      	str	r2, [r3, #56]	@ 0x38
 8002062:	4b26      	ldr	r3, [pc, #152]	@ (80020fc <status_led+0x144>)
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	22ff      	movs	r2, #255	@ 0xff
 8002068:	635a      	str	r2, [r3, #52]	@ 0x34
 800206a:	e041      	b.n	80020f0 <status_led+0x138>
 800206c:	4b23      	ldr	r3, [pc, #140]	@ (80020fc <status_led+0x144>)
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2200      	movs	r2, #0
 8002072:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002074:	4b21      	ldr	r3, [pc, #132]	@ (80020fc <status_led+0x144>)
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	2200      	movs	r2, #0
 800207a:	639a      	str	r2, [r3, #56]	@ 0x38
 800207c:	4b1f      	ldr	r3, [pc, #124]	@ (80020fc <status_led+0x144>)
 800207e:	681b      	ldr	r3, [r3, #0]
 8002080:	2200      	movs	r2, #0
 8002082:	635a      	str	r2, [r3, #52]	@ 0x34
 8002084:	e034      	b.n	80020f0 <status_led+0x138>
 8002086:	4b1d      	ldr	r3, [pc, #116]	@ (80020fc <status_led+0x144>)
 8002088:	681b      	ldr	r3, [r3, #0]
 800208a:	2200      	movs	r2, #0
 800208c:	63da      	str	r2, [r3, #60]	@ 0x3c
 800208e:	4b1b      	ldr	r3, [pc, #108]	@ (80020fc <status_led+0x144>)
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	2200      	movs	r2, #0
 8002094:	639a      	str	r2, [r3, #56]	@ 0x38
 8002096:	4b19      	ldr	r3, [pc, #100]	@ (80020fc <status_led+0x144>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	2200      	movs	r2, #0
 800209c:	635a      	str	r2, [r3, #52]	@ 0x34
 800209e:	e027      	b.n	80020f0 <status_led+0x138>
 80020a0:	4b16      	ldr	r3, [pc, #88]	@ (80020fc <status_led+0x144>)
 80020a2:	681b      	ldr	r3, [r3, #0]
 80020a4:	2200      	movs	r2, #0
 80020a6:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020a8:	4b14      	ldr	r3, [pc, #80]	@ (80020fc <status_led+0x144>)
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	2200      	movs	r2, #0
 80020ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80020b0:	4b12      	ldr	r3, [pc, #72]	@ (80020fc <status_led+0x144>)
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	2200      	movs	r2, #0
 80020b6:	635a      	str	r2, [r3, #52]	@ 0x34
 80020b8:	e01a      	b.n	80020f0 <status_led+0x138>
 80020ba:	4b10      	ldr	r3, [pc, #64]	@ (80020fc <status_led+0x144>)
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	2200      	movs	r2, #0
 80020c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020c2:	4b0e      	ldr	r3, [pc, #56]	@ (80020fc <status_led+0x144>)
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	2200      	movs	r2, #0
 80020c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80020ca:	4b0c      	ldr	r3, [pc, #48]	@ (80020fc <status_led+0x144>)
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	2200      	movs	r2, #0
 80020d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80020d2:	e00d      	b.n	80020f0 <status_led+0x138>
 80020d4:	4b09      	ldr	r3, [pc, #36]	@ (80020fc <status_led+0x144>)
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	2200      	movs	r2, #0
 80020da:	63da      	str	r2, [r3, #60]	@ 0x3c
 80020dc:	4b07      	ldr	r3, [pc, #28]	@ (80020fc <status_led+0x144>)
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	2200      	movs	r2, #0
 80020e2:	639a      	str	r2, [r3, #56]	@ 0x38
 80020e4:	4b05      	ldr	r3, [pc, #20]	@ (80020fc <status_led+0x144>)
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	2200      	movs	r2, #0
 80020ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80020ec:	e000      	b.n	80020f0 <status_led+0x138>
 80020ee:	bf00      	nop
 80020f0:	bf00      	nop
 80020f2:	370c      	adds	r7, #12
 80020f4:	46bd      	mov	sp, r7
 80020f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020fa:	4770      	bx	lr
 80020fc:	20001b88 	.word	0x20001b88

08002100 <LL_TIM_EnableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_EnableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
{
 8002100:	b480      	push	{r7}
 8002102:	b083      	sub	sp, #12
 8002104:	af00      	add	r7, sp, #0
 8002106:	6078      	str	r0, [r7, #4]
  SET_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002108:	687b      	ldr	r3, [r7, #4]
 800210a:	681b      	ldr	r3, [r3, #0]
 800210c:	f043 0201 	orr.w	r2, r3, #1
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	601a      	str	r2, [r3, #0]
}
 8002114:	bf00      	nop
 8002116:	370c      	adds	r7, #12
 8002118:	46bd      	mov	sp, r7
 800211a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800211e:	4770      	bx	lr

08002120 <LL_TIM_DisableCounter>:
  * @rmtoll CR1          CEN           LL_TIM_DisableCounter
  * @param  TIMx Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
{
 8002120:	b480      	push	{r7}
 8002122:	b083      	sub	sp, #12
 8002124:	af00      	add	r7, sp, #0
 8002126:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	f023 0201 	bic.w	r2, r3, #1
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	601a      	str	r2, [r3, #0]
}
 8002134:	bf00      	nop
 8002136:	370c      	adds	r7, #12
 8002138:	46bd      	mov	sp, r7
 800213a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213e:	4770      	bx	lr

08002140 <LL_TIM_SetPrescaler>:
  * @param  TIMx Timer instance
  * @param  Prescaler between Min_Data=0 and Max_Data=65535
  * @retval None
  */
__STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
{
 8002140:	b480      	push	{r7}
 8002142:	b083      	sub	sp, #12
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
 8002148:	6039      	str	r1, [r7, #0]
  WRITE_REG(TIMx->PSC, Prescaler);
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	683a      	ldr	r2, [r7, #0]
 800214e:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8002150:	bf00      	nop
 8002152:	370c      	adds	r7, #12
 8002154:	46bd      	mov	sp, r7
 8002156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215a:	4770      	bx	lr

0800215c <micros_tick>:
#include "board_lib.h"
#include "robot_config.h"

static uint32_t gv_overflow_times = 0;

void micros_tick(){
 800215c:	b480      	push	{r7}
 800215e:	af00      	add	r7, sp, #0
	gv_overflow_times ++;
 8002160:	4b04      	ldr	r3, [pc, #16]	@ (8002174 <micros_tick+0x18>)
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	3301      	adds	r3, #1
 8002166:	4a03      	ldr	r2, [pc, #12]	@ (8002174 <micros_tick+0x18>)
 8002168:	6013      	str	r3, [r2, #0]
}
 800216a:	bf00      	nop
 800216c:	46bd      	mov	sp, r7
 800216e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002172:	4770      	bx	lr
 8002174:	200008b4 	.word	0x200008b4

08002178 <start_micros_timer>:

void start_micros_timer()
{
 8002178:	b580      	push	{r7, lr}
 800217a:	af00      	add	r7, sp, #0
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 800217c:	f240 3147 	movw	r1, #839	@ 0x347
 8002180:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8002184:	f7ff ffdc 	bl	8002140 <LL_TIM_SetPrescaler>
	LL_TIM_DisableCounter(TIM2);
 8002188:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800218c:	f7ff ffc8 	bl	8002120 <LL_TIM_DisableCounter>
	TIM2->CNT =0;
 8002190:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8002194:	2200      	movs	r2, #0
 8002196:	625a      	str	r2, [r3, #36]	@ 0x24
//	LL_TIM_DisableExternalClock(TIM2);
	LL_TIM_SetPrescaler(TIM2, 83999999/TIMER_FREQ);
 8002198:	f240 3147 	movw	r1, #839	@ 0x347
 800219c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021a0:	f7ff ffce 	bl	8002140 <LL_TIM_SetPrescaler>
//	LL_TIM_EnableUpdateEvent(TIM2);
//	LL_TIM_EnableIT_UPDATE(TIM2);
	TIM2->EGR |= TIM_EGR_UG_Msk;
 80021a4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80021a8:	695b      	ldr	r3, [r3, #20]
 80021aa:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80021ae:	f043 0301 	orr.w	r3, r3, #1
 80021b2:	6153      	str	r3, [r2, #20]
	LL_TIM_EnableCounter(TIM2);
 80021b4:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 80021b8:	f7ff ffa2 	bl	8002100 <LL_TIM_EnableCounter>
}
 80021bc:	bf00      	nop
 80021be:	bd80      	pop	{r7, pc}

080021c0 <get_microseconds>:
static uint32_t current_cnt;
//T_start = get_microseconds();
//diff = T_end - T_start;
//T_end = T_start;
uint32_t get_microseconds()
{
 80021c0:	e92d 0fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp}
 80021c4:	b083      	sub	sp, #12
 80021c6:	af00      	add	r7, sp, #0
	current_cnt = TIM2->CNT;
 80021c8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021cc:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021ce:	4d15      	ldr	r5, [pc, #84]	@ (8002224 <get_microseconds+0x64>)
 80021d0:	602c      	str	r4, [r5, #0]
	uint64_t temp_cnt = TIM2->CNT;
 80021d2:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
 80021d6:	6a64      	ldr	r4, [r4, #36]	@ 0x24
 80021d8:	2500      	movs	r5, #0
 80021da:	4620      	mov	r0, r4
 80021dc:	4629      	mov	r1, r5
 80021de:	e9c7 0100 	strd	r0, r1, [r7]
	temp_cnt = temp_cnt * (1000000 / TIMER_FREQ);
 80021e2:	e9d7 8900 	ldrd	r8, r9, [r7]
 80021e6:	4640      	mov	r0, r8
 80021e8:	4649      	mov	r1, r9
 80021ea:	f04f 0400 	mov.w	r4, #0
 80021ee:	f04f 0500 	mov.w	r5, #0
 80021f2:	008d      	lsls	r5, r1, #2
 80021f4:	ea45 7590 	orr.w	r5, r5, r0, lsr #30
 80021f8:	0084      	lsls	r4, r0, #2
 80021fa:	4620      	mov	r0, r4
 80021fc:	4629      	mov	r1, r5
 80021fe:	eb10 0208 	adds.w	r2, r0, r8
 8002202:	eb41 0309 	adc.w	r3, r1, r9
 8002206:	eb12 0a02 	adds.w	sl, r2, r2
 800220a:	eb43 0b03 	adc.w	fp, r3, r3
 800220e:	4652      	mov	r2, sl
 8002210:	465b      	mov	r3, fp
 8002212:	e9c7 2300 	strd	r2, r3, [r7]
	return (uint32_t)temp_cnt;
 8002216:	683b      	ldr	r3, [r7, #0]
}
 8002218:	4618      	mov	r0, r3
 800221a:	370c      	adds	r7, #12
 800221c:	46bd      	mov	sp, r7
 800221e:	e8bd 0fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp}
 8002222:	4770      	bx	lr
 8002224:	200008b8 	.word	0x200008b8

08002228 <queue_init>:
 8002228:	b480      	push	{r7}
 800222a:	b085      	sub	sp, #20
 800222c:	af00      	add	r7, sp, #0
 800222e:	6078      	str	r0, [r7, #4]
 8002230:	2300      	movs	r3, #0
 8002232:	723b      	strb	r3, [r7, #8]
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	2b00      	cmp	r3, #0
 8002238:	d104      	bne.n	8002244 <queue_init+0x1c>
 800223a:	2304      	movs	r3, #4
 800223c:	723b      	strb	r3, [r7, #8]
 800223e:	68bb      	ldr	r3, [r7, #8]
 8002240:	60fb      	str	r3, [r7, #12]
 8002242:	e00d      	b.n	8002260 <queue_init+0x38>
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2200      	movs	r2, #0
 8002248:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	2200      	movs	r2, #0
 8002250:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	2200      	movs	r2, #0
 8002258:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 800225c:	68bb      	ldr	r3, [r7, #8]
 800225e:	60fb      	str	r3, [r7, #12]
 8002260:	2300      	movs	r3, #0
 8002262:	89ba      	ldrh	r2, [r7, #12]
 8002264:	f362 030f 	bfi	r3, r2, #0, #16
 8002268:	89fa      	ldrh	r2, [r7, #14]
 800226a:	f362 431f 	bfi	r3, r2, #16, #16
 800226e:	4618      	mov	r0, r3
 8002270:	3714      	adds	r7, #20
 8002272:	46bd      	mov	sp, r7
 8002274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002278:	4770      	bx	lr

0800227a <queue_get_size>:
 800227a:	b480      	push	{r7}
 800227c:	b085      	sub	sp, #20
 800227e:	af00      	add	r7, sp, #0
 8002280:	6078      	str	r0, [r7, #4]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	f8b3 2100 	ldrh.w	r2, [r3, #256]	@ 0x100
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800228e:	1ad3      	subs	r3, r2, r3
 8002290:	81fb      	strh	r3, [r7, #14]
 8002292:	89fb      	ldrh	r3, [r7, #14]
 8002294:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002298:	d904      	bls.n	80022a4 <queue_get_size+0x2a>
 800229a:	89fb      	ldrh	r3, [r7, #14]
 800229c:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 80022a0:	b29b      	uxth	r3, r3
 80022a2:	e000      	b.n	80022a6 <queue_get_size+0x2c>
 80022a4:	89fb      	ldrh	r3, [r7, #14]
 80022a6:	81fb      	strh	r3, [r7, #14]
 80022a8:	89fb      	ldrh	r3, [r7, #14]
 80022aa:	4618      	mov	r0, r3
 80022ac:	3714      	adds	r7, #20
 80022ae:	46bd      	mov	sp, r7
 80022b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b4:	4770      	bx	lr

080022b6 <queue_append_byte>:
 80022b6:	b580      	push	{r7, lr}
 80022b8:	b084      	sub	sp, #16
 80022ba:	af00      	add	r7, sp, #0
 80022bc:	6078      	str	r0, [r7, #4]
 80022be:	460b      	mov	r3, r1
 80022c0:	70fb      	strb	r3, [r7, #3]
 80022c2:	2300      	movs	r3, #0
 80022c4:	723b      	strb	r3, [r7, #8]
 80022c6:	f00b fc77 	bl	800dbb8 <HAL_GetTick>
 80022ca:	4602      	mov	r2, r0
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022d8:	4619      	mov	r1, r3
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	78fa      	ldrb	r2, [r7, #3]
 80022de:	545a      	strb	r2, [r3, r1]
 80022e0:	2301      	movs	r3, #1
 80022e2:	817b      	strh	r3, [r7, #10]
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022ea:	2bfe      	cmp	r3, #254	@ 0xfe
 80022ec:	d805      	bhi.n	80022fa <queue_append_byte+0x44>
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80022f4:	3301      	adds	r3, #1
 80022f6:	b29a      	uxth	r2, r3
 80022f8:	e000      	b.n	80022fc <queue_append_byte+0x46>
 80022fa:	2200      	movs	r2, #0
 80022fc:	687b      	ldr	r3, [r7, #4]
 80022fe:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 8002302:	6878      	ldr	r0, [r7, #4]
 8002304:	f7ff ffb9 	bl	800227a <queue_get_size>
 8002308:	4603      	mov	r3, r0
 800230a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800230e:	d913      	bls.n	8002338 <queue_append_byte+0x82>
 8002310:	2301      	movs	r3, #1
 8002312:	723b      	strb	r3, [r7, #8]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800231a:	2bff      	cmp	r3, #255	@ 0xff
 800231c:	d005      	beq.n	800232a <queue_append_byte+0x74>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002324:	3301      	adds	r3, #1
 8002326:	b29a      	uxth	r2, r3
 8002328:	e000      	b.n	800232c <queue_append_byte+0x76>
 800232a:	2200      	movs	r2, #0
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002332:	68bb      	ldr	r3, [r7, #8]
 8002334:	60fb      	str	r3, [r7, #12]
 8002336:	e001      	b.n	800233c <queue_append_byte+0x86>
 8002338:	68bb      	ldr	r3, [r7, #8]
 800233a:	60fb      	str	r3, [r7, #12]
 800233c:	2300      	movs	r3, #0
 800233e:	89ba      	ldrh	r2, [r7, #12]
 8002340:	f362 030f 	bfi	r3, r2, #0, #16
 8002344:	89fa      	ldrh	r2, [r7, #14]
 8002346:	f362 431f 	bfi	r3, r2, #16, #16
 800234a:	4618      	mov	r0, r3
 800234c:	3710      	adds	r7, #16
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}

08002352 <queue_pop_element>:
 8002352:	b580      	push	{r7, lr}
 8002354:	b084      	sub	sp, #16
 8002356:	af00      	add	r7, sp, #0
 8002358:	6078      	str	r0, [r7, #4]
 800235a:	6878      	ldr	r0, [r7, #4]
 800235c:	f7ff ff8d 	bl	800227a <queue_get_size>
 8002360:	4603      	mov	r3, r0
 8002362:	2b00      	cmp	r3, #0
 8002364:	d101      	bne.n	800236a <queue_pop_element+0x18>
 8002366:	2300      	movs	r3, #0
 8002368:	e01c      	b.n	80023a4 <queue_pop_element+0x52>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002370:	3301      	adds	r3, #1
 8002372:	b29a      	uxth	r2, r3
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002380:	2bff      	cmp	r3, #255	@ 0xff
 8002382:	d803      	bhi.n	800238c <queue_pop_element+0x3a>
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 800238a:	e000      	b.n	800238e <queue_pop_element+0x3c>
 800238c:	2200      	movs	r2, #0
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800239a:	461a      	mov	r2, r3
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	5c9b      	ldrb	r3, [r3, r2]
 80023a0:	73fb      	strb	r3, [r7, #15]
 80023a2:	7bfb      	ldrb	r3, [r7, #15]
 80023a4:	4618      	mov	r0, r3
 80023a6:	3710      	adds	r7, #16
 80023a8:	46bd      	mov	sp, r7
 80023aa:	bd80      	pop	{r7, pc}

080023ac <queue_pop_elements>:
 80023ac:	b580      	push	{r7, lr}
 80023ae:	b088      	sub	sp, #32
 80023b0:	af00      	add	r7, sp, #0
 80023b2:	60f8      	str	r0, [r7, #12]
 80023b4:	60b9      	str	r1, [r7, #8]
 80023b6:	4613      	mov	r3, r2
 80023b8:	80fb      	strh	r3, [r7, #6]
 80023ba:	68f8      	ldr	r0, [r7, #12]
 80023bc:	f7ff ff5d 	bl	800227a <queue_get_size>
 80023c0:	4603      	mov	r3, r0
 80023c2:	83fb      	strh	r3, [r7, #30]
 80023c4:	8bfa      	ldrh	r2, [r7, #30]
 80023c6:	88fb      	ldrh	r3, [r7, #6]
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d203      	bcs.n	80023d4 <queue_pop_elements+0x28>
 80023cc:	2303      	movs	r3, #3
 80023ce:	753b      	strb	r3, [r7, #20]
 80023d0:	8bfb      	ldrh	r3, [r7, #30]
 80023d2:	80fb      	strh	r3, [r7, #6]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023da:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80023de:	83bb      	strh	r3, [r7, #28]
 80023e0:	8bba      	ldrh	r2, [r7, #28]
 80023e2:	88fb      	ldrh	r3, [r7, #6]
 80023e4:	429a      	cmp	r2, r3
 80023e6:	d30b      	bcc.n	8002400 <queue_pop_elements+0x54>
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80023ee:	461a      	mov	r2, r3
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	4413      	add	r3, r2
 80023f4:	88fa      	ldrh	r2, [r7, #6]
 80023f6:	4619      	mov	r1, r3
 80023f8:	68b8      	ldr	r0, [r7, #8]
 80023fa:	f01b fb93 	bl	801db24 <memcpy>
 80023fe:	e014      	b.n	800242a <queue_pop_elements+0x7e>
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002406:	461a      	mov	r2, r3
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	4413      	add	r3, r2
 800240c:	8bba      	ldrh	r2, [r7, #28]
 800240e:	4619      	mov	r1, r3
 8002410:	68b8      	ldr	r0, [r7, #8]
 8002412:	f01b fb87 	bl	801db24 <memcpy>
 8002416:	8bbb      	ldrh	r3, [r7, #28]
 8002418:	68ba      	ldr	r2, [r7, #8]
 800241a:	18d0      	adds	r0, r2, r3
 800241c:	68f9      	ldr	r1, [r7, #12]
 800241e:	88fa      	ldrh	r2, [r7, #6]
 8002420:	8bbb      	ldrh	r3, [r7, #28]
 8002422:	1ad3      	subs	r3, r2, r3
 8002424:	461a      	mov	r2, r3
 8002426:	f01b fb7d 	bl	801db24 <memcpy>
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 8002430:	88fb      	ldrh	r3, [r7, #6]
 8002432:	4413      	add	r3, r2
 8002434:	b29a      	uxth	r2, r3
 8002436:	68fb      	ldr	r3, [r7, #12]
 8002438:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002442:	2bff      	cmp	r3, #255	@ 0xff
 8002444:	d906      	bls.n	8002454 <queue_pop_elements+0xa8>
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800244c:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 8002450:	b29b      	uxth	r3, r3
 8002452:	e002      	b.n	800245a <queue_pop_elements+0xae>
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800245a:	68fa      	ldr	r2, [r7, #12]
 800245c:	f8a2 3102 	strh.w	r3, [r2, #258]	@ 0x102
 8002460:	697b      	ldr	r3, [r7, #20]
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	2300      	movs	r3, #0
 8002466:	8b3a      	ldrh	r2, [r7, #24]
 8002468:	f362 030f 	bfi	r3, r2, #0, #16
 800246c:	8b7a      	ldrh	r2, [r7, #26]
 800246e:	f362 431f 	bfi	r3, r2, #16, #16
 8002472:	4618      	mov	r0, r3
 8002474:	3720      	adds	r7, #32
 8002476:	46bd      	mov	sp, r7
 8002478:	bd80      	pop	{r7, pc}

0800247a <queue_peek>:
 800247a:	b580      	push	{r7, lr}
 800247c:	b082      	sub	sp, #8
 800247e:	af00      	add	r7, sp, #0
 8002480:	6078      	str	r0, [r7, #4]
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f7ff fef9 	bl	800227a <queue_get_size>
 8002488:	4603      	mov	r3, r0
 800248a:	2b00      	cmp	r3, #0
 800248c:	d006      	beq.n	800249c <queue_peek+0x22>
 800248e:	687b      	ldr	r3, [r7, #4]
 8002490:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002494:	461a      	mov	r2, r3
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	5c9b      	ldrb	r3, [r3, r2]
 800249a:	e000      	b.n	800249e <queue_peek+0x24>
 800249c:	2300      	movs	r3, #0
 800249e:	4618      	mov	r0, r3
 80024a0:	3708      	adds	r7, #8
 80024a2:	46bd      	mov	sp, r7
 80024a4:	bd80      	pop	{r7, pc}

080024a6 <queue_peek_number>:
 80024a6:	b580      	push	{r7, lr}
 80024a8:	b088      	sub	sp, #32
 80024aa:	af00      	add	r7, sp, #0
 80024ac:	60f8      	str	r0, [r7, #12]
 80024ae:	60b9      	str	r1, [r7, #8]
 80024b0:	4613      	mov	r3, r2
 80024b2:	80fb      	strh	r3, [r7, #6]
 80024b4:	f00b fb80 	bl	800dbb8 <HAL_GetTick>
 80024b8:	4602      	mov	r2, r0
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	f8c3 2104 	str.w	r2, [r3, #260]	@ 0x104
 80024c0:	2300      	movs	r3, #0
 80024c2:	753b      	strb	r3, [r7, #20]
 80024c4:	68f8      	ldr	r0, [r7, #12]
 80024c6:	f7ff fed8 	bl	800227a <queue_get_size>
 80024ca:	4603      	mov	r3, r0
 80024cc:	83fb      	strh	r3, [r7, #30]
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024d4:	f5c3 7380 	rsb	r3, r3, #256	@ 0x100
 80024d8:	83bb      	strh	r3, [r7, #28]
 80024da:	8bfa      	ldrh	r2, [r7, #30]
 80024dc:	88fb      	ldrh	r3, [r7, #6]
 80024de:	429a      	cmp	r2, r3
 80024e0:	d203      	bcs.n	80024ea <queue_peek_number+0x44>
 80024e2:	2303      	movs	r3, #3
 80024e4:	753b      	strb	r3, [r7, #20]
 80024e6:	8bfb      	ldrh	r3, [r7, #30]
 80024e8:	80fb      	strh	r3, [r7, #6]
 80024ea:	8bba      	ldrh	r2, [r7, #28]
 80024ec:	88fb      	ldrh	r3, [r7, #6]
 80024ee:	429a      	cmp	r2, r3
 80024f0:	d30b      	bcc.n	800250a <queue_peek_number+0x64>
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80024f8:	461a      	mov	r2, r3
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	4413      	add	r3, r2
 80024fe:	88fa      	ldrh	r2, [r7, #6]
 8002500:	4619      	mov	r1, r3
 8002502:	68b8      	ldr	r0, [r7, #8]
 8002504:	f01b fb0e 	bl	801db24 <memcpy>
 8002508:	e014      	b.n	8002534 <queue_peek_number+0x8e>
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8002510:	461a      	mov	r2, r3
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	4413      	add	r3, r2
 8002516:	8bba      	ldrh	r2, [r7, #28]
 8002518:	4619      	mov	r1, r3
 800251a:	68b8      	ldr	r0, [r7, #8]
 800251c:	f01b fb02 	bl	801db24 <memcpy>
 8002520:	8bbb      	ldrh	r3, [r7, #28]
 8002522:	68ba      	ldr	r2, [r7, #8]
 8002524:	18d0      	adds	r0, r2, r3
 8002526:	68f9      	ldr	r1, [r7, #12]
 8002528:	88fa      	ldrh	r2, [r7, #6]
 800252a:	8bbb      	ldrh	r3, [r7, #28]
 800252c:	1ad3      	subs	r3, r2, r3
 800252e:	461a      	mov	r2, r3
 8002530:	f01b faf8 	bl	801db24 <memcpy>
 8002534:	88fb      	ldrh	r3, [r7, #6]
 8002536:	82fb      	strh	r3, [r7, #22]
 8002538:	697b      	ldr	r3, [r7, #20]
 800253a:	61bb      	str	r3, [r7, #24]
 800253c:	2300      	movs	r3, #0
 800253e:	8b3a      	ldrh	r2, [r7, #24]
 8002540:	f362 030f 	bfi	r3, r2, #0, #16
 8002544:	8b7a      	ldrh	r2, [r7, #26]
 8002546:	f362 431f 	bfi	r3, r2, #16, #16
 800254a:	4618      	mov	r0, r3
 800254c:	3720      	adds	r7, #32
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}
	...

08002554 <ref_process_data>:
 8002554:	b590      	push	{r4, r7, lr}
 8002556:	b097      	sub	sp, #92	@ 0x5c
 8002558:	af00      	add	r7, sp, #0
 800255a:	6578      	str	r0, [r7, #84]	@ 0x54
 800255c:	6539      	str	r1, [r7, #80]	@ 0x50
 800255e:	e066      	b.n	800262e <ref_process_data+0xda>
 8002560:	4b38      	ldr	r3, [pc, #224]	@ (8002644 <ref_process_data+0xf0>)
 8002562:	781b      	ldrb	r3, [r3, #0]
 8002564:	2b00      	cmp	r3, #0
 8002566:	d002      	beq.n	800256e <ref_process_data+0x1a>
 8002568:	2b01      	cmp	r3, #1
 800256a:	d036      	beq.n	80025da <ref_process_data+0x86>
 800256c:	e05f      	b.n	800262e <ref_process_data+0xda>
 800256e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002570:	f7ff fe83 	bl	800227a <queue_get_size>
 8002574:	4603      	mov	r3, r0
 8002576:	2b06      	cmp	r3, #6
 8002578:	d801      	bhi.n	800257e <ref_process_data+0x2a>
 800257a:	2302      	movs	r3, #2
 800257c:	e05e      	b.n	800263c <ref_process_data+0xe8>
 800257e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002580:	f7ff ff7b 	bl	800247a <queue_peek>
 8002584:	4603      	mov	r3, r0
 8002586:	2ba5      	cmp	r3, #165	@ 0xa5
 8002588:	d003      	beq.n	8002592 <ref_process_data+0x3e>
 800258a:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 800258c:	f7ff fee1 	bl	8002352 <queue_pop_element>
 8002590:	e04d      	b.n	800262e <ref_process_data+0xda>
 8002592:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002594:	f7ff fe71 	bl	800227a <queue_get_size>
 8002598:	4603      	mov	r3, r0
 800259a:	2b07      	cmp	r3, #7
 800259c:	d91b      	bls.n	80025d6 <ref_process_data+0x82>
 800259e:	4c2a      	ldr	r4, [pc, #168]	@ (8002648 <ref_process_data+0xf4>)
 80025a0:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025a4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 80025a6:	4618      	mov	r0, r3
 80025a8:	f000 f850 	bl	800264c <ref_get_header>
 80025ac:	4622      	mov	r2, r4
 80025ae:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 80025b2:	6818      	ldr	r0, [r3, #0]
 80025b4:	6010      	str	r0, [r2, #0]
 80025b6:	8899      	ldrh	r1, [r3, #4]
 80025b8:	799b      	ldrb	r3, [r3, #6]
 80025ba:	8091      	strh	r1, [r2, #4]
 80025bc:	7193      	strb	r3, [r2, #6]
 80025be:	4b22      	ldr	r3, [pc, #136]	@ (8002648 <ref_process_data+0xf4>)
 80025c0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80025ca:	4293      	cmp	r3, r2
 80025cc:	d02c      	beq.n	8002628 <ref_process_data+0xd4>
 80025ce:	4b1d      	ldr	r3, [pc, #116]	@ (8002644 <ref_process_data+0xf0>)
 80025d0:	2201      	movs	r2, #1
 80025d2:	701a      	strb	r2, [r3, #0]
 80025d4:	e02b      	b.n	800262e <ref_process_data+0xda>
 80025d6:	2302      	movs	r3, #2
 80025d8:	e030      	b.n	800263c <ref_process_data+0xe8>
 80025da:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 80025dc:	f7ff fe4d 	bl	800227a <queue_get_size>
 80025e0:	4603      	mov	r3, r0
 80025e2:	461a      	mov	r2, r3
 80025e4:	4b18      	ldr	r3, [pc, #96]	@ (8002648 <ref_process_data+0xf4>)
 80025e6:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 80025ea:	b29b      	uxth	r3, r3
 80025ec:	3309      	adds	r3, #9
 80025ee:	429a      	cmp	r2, r3
 80025f0:	dd18      	ble.n	8002624 <ref_process_data+0xd0>
 80025f2:	4b14      	ldr	r3, [pc, #80]	@ (8002644 <ref_process_data+0xf0>)
 80025f4:	2200      	movs	r2, #0
 80025f6:	701a      	strb	r2, [r3, #0]
 80025f8:	6d3c      	ldr	r4, [r7, #80]	@ 0x50
 80025fa:	4638      	mov	r0, r7
 80025fc:	4a12      	ldr	r2, [pc, #72]	@ (8002648 <ref_process_data+0xf4>)
 80025fe:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002600:	ca06      	ldmia	r2, {r1, r2}
 8002602:	f000 f89b 	bl	800273c <ref_get_msg>
 8002606:	4620      	mov	r0, r4
 8002608:	463b      	mov	r3, r7
 800260a:	2242      	movs	r2, #66	@ 0x42
 800260c:	4619      	mov	r1, r3
 800260e:	f01b fa89 	bl	801db24 <memcpy>
 8002612:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002614:	881b      	ldrh	r3, [r3, #0]
 8002616:	b29b      	uxth	r3, r3
 8002618:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800261c:	4293      	cmp	r3, r2
 800261e:	d005      	beq.n	800262c <ref_process_data+0xd8>
 8002620:	2300      	movs	r3, #0
 8002622:	e00b      	b.n	800263c <ref_process_data+0xe8>
 8002624:	2302      	movs	r3, #2
 8002626:	e009      	b.n	800263c <ref_process_data+0xe8>
 8002628:	bf00      	nop
 800262a:	e000      	b.n	800262e <ref_process_data+0xda>
 800262c:	bf00      	nop
 800262e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
 8002630:	f7ff fe23 	bl	800227a <queue_get_size>
 8002634:	4603      	mov	r3, r0
 8002636:	2b07      	cmp	r3, #7
 8002638:	d892      	bhi.n	8002560 <ref_process_data+0xc>
 800263a:	2302      	movs	r3, #2
 800263c:	4618      	mov	r0, r3
 800263e:	375c      	adds	r7, #92	@ 0x5c
 8002640:	46bd      	mov	sp, r7
 8002642:	bd90      	pop	{r4, r7, pc}
 8002644:	200008bc 	.word	0x200008bc
 8002648:	200008c0 	.word	0x200008c0

0800264c <ref_get_header>:
 800264c:	b580      	push	{r7, lr}
 800264e:	b088      	sub	sp, #32
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	6039      	str	r1, [r7, #0]
 8002656:	f107 030c 	add.w	r3, r7, #12
 800265a:	2207      	movs	r2, #7
 800265c:	4619      	mov	r1, r3
 800265e:	6838      	ldr	r0, [r7, #0]
 8002660:	f7ff ff21 	bl	80024a6 <queue_peek_number>
 8002664:	7b3b      	ldrb	r3, [r7, #12]
 8002666:	753b      	strb	r3, [r7, #20]
 8002668:	7d3b      	ldrb	r3, [r7, #20]
 800266a:	2ba5      	cmp	r3, #165	@ 0xa5
 800266c:	d013      	beq.n	8002696 <ref_get_header+0x4a>
 800266e:	6838      	ldr	r0, [r7, #0]
 8002670:	f7ff fe6f 	bl	8002352 <queue_pop_element>
 8002674:	f04f 33ff 	mov.w	r3, #4294967295
 8002678:	767b      	strb	r3, [r7, #25]
 800267a:	f04f 33ff 	mov.w	r3, #4294967295
 800267e:	76bb      	strb	r3, [r7, #26]
 8002680:	687b      	ldr	r3, [r7, #4]
 8002682:	461a      	mov	r2, r3
 8002684:	f107 0314 	add.w	r3, r7, #20
 8002688:	6818      	ldr	r0, [r3, #0]
 800268a:	6010      	str	r0, [r2, #0]
 800268c:	8899      	ldrh	r1, [r3, #4]
 800268e:	799b      	ldrb	r3, [r3, #6]
 8002690:	8091      	strh	r1, [r2, #4]
 8002692:	7193      	strb	r3, [r2, #6]
 8002694:	e04d      	b.n	8002732 <ref_get_header+0xe6>
 8002696:	7bbb      	ldrb	r3, [r7, #14]
 8002698:	021b      	lsls	r3, r3, #8
 800269a:	b21a      	sxth	r2, r3
 800269c:	7b7b      	ldrb	r3, [r7, #13]
 800269e:	b21b      	sxth	r3, r3
 80026a0:	4313      	orrs	r3, r2
 80026a2:	b21b      	sxth	r3, r3
 80026a4:	b29b      	uxth	r3, r3
 80026a6:	f8a7 3015 	strh.w	r3, [r7, #21]
 80026aa:	7bfb      	ldrb	r3, [r7, #15]
 80026ac:	75fb      	strb	r3, [r7, #23]
 80026ae:	7c3b      	ldrb	r3, [r7, #16]
 80026b0:	763b      	strb	r3, [r7, #24]
 80026b2:	f107 030c 	add.w	r3, r7, #12
 80026b6:	2105      	movs	r1, #5
 80026b8:	4618      	mov	r0, r3
 80026ba:	f7fe fc7f 	bl	8000fbc <verify_CRC8_check_sum>
 80026be:	4603      	mov	r3, r0
 80026c0:	61fb      	str	r3, [r7, #28]
 80026c2:	7cbb      	ldrb	r3, [r7, #18]
 80026c4:	021b      	lsls	r3, r3, #8
 80026c6:	b21a      	sxth	r2, r3
 80026c8:	7c7b      	ldrb	r3, [r7, #17]
 80026ca:	b21b      	sxth	r3, r3
 80026cc:	4313      	orrs	r3, r2
 80026ce:	b21b      	sxth	r3, r3
 80026d0:	b29b      	uxth	r3, r3
 80026d2:	f8a7 3019 	strh.w	r3, [r7, #25]
 80026d6:	69fb      	ldr	r3, [r7, #28]
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d00c      	beq.n	80026f6 <ref_get_header+0xaa>
 80026dc:	f8b7 3015 	ldrh.w	r3, [r7, #21]
 80026e0:	b29b      	uxth	r3, r3
 80026e2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80026e6:	d806      	bhi.n	80026f6 <ref_get_header+0xaa>
 80026e8:	f8b7 3019 	ldrh.w	r3, [r7, #25]
 80026ec:	b29b      	uxth	r3, r3
 80026ee:	f240 3205 	movw	r2, #773	@ 0x305
 80026f2:	4293      	cmp	r3, r2
 80026f4:	d913      	bls.n	800271e <ref_get_header+0xd2>
 80026f6:	f04f 33ff 	mov.w	r3, #4294967295
 80026fa:	767b      	strb	r3, [r7, #25]
 80026fc:	f04f 33ff 	mov.w	r3, #4294967295
 8002700:	76bb      	strb	r3, [r7, #26]
 8002702:	6838      	ldr	r0, [r7, #0]
 8002704:	f7ff fe25 	bl	8002352 <queue_pop_element>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	461a      	mov	r2, r3
 800270c:	f107 0314 	add.w	r3, r7, #20
 8002710:	6818      	ldr	r0, [r3, #0]
 8002712:	6010      	str	r0, [r2, #0]
 8002714:	8899      	ldrh	r1, [r3, #4]
 8002716:	799b      	ldrb	r3, [r3, #6]
 8002718:	8091      	strh	r1, [r2, #4]
 800271a:	7193      	strb	r3, [r2, #6]
 800271c:	e009      	b.n	8002732 <ref_get_header+0xe6>
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	461a      	mov	r2, r3
 8002722:	f107 0314 	add.w	r3, r7, #20
 8002726:	6818      	ldr	r0, [r3, #0]
 8002728:	6010      	str	r0, [r2, #0]
 800272a:	8899      	ldrh	r1, [r3, #4]
 800272c:	799b      	ldrb	r3, [r3, #6]
 800272e:	8091      	strh	r1, [r2, #4]
 8002730:	7193      	strb	r3, [r2, #6]
 8002732:	6878      	ldr	r0, [r7, #4]
 8002734:	3720      	adds	r7, #32
 8002736:	46bd      	mov	sp, r7
 8002738:	bd80      	pop	{r7, pc}
	...

0800273c <ref_get_msg>:
 800273c:	b5b0      	push	{r4, r5, r7, lr}
 800273e:	b0d8      	sub	sp, #352	@ 0x160
 8002740:	af00      	add	r7, sp, #0
 8002742:	f507 74b0 	add.w	r4, r7, #352	@ 0x160
 8002746:	f5a4 74aa 	sub.w	r4, r4, #340	@ 0x154
 800274a:	6020      	str	r0, [r4, #0]
 800274c:	f507 70b0 	add.w	r0, r7, #352	@ 0x160
 8002750:	f5a0 70ae 	sub.w	r0, r0, #348	@ 0x15c
 8002754:	e880 0006 	stmia.w	r0, {r1, r2}
 8002758:	f507 72b0 	add.w	r2, r7, #352	@ 0x160
 800275c:	f5a2 72b0 	sub.w	r2, r2, #352	@ 0x160
 8002760:	6013      	str	r3, [r2, #0]
 8002762:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002766:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800276a:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 800276e:	b29b      	uxth	r3, r3
 8002770:	3309      	adds	r3, #9
 8002772:	b29a      	uxth	r2, r3
 8002774:	f107 0158 	add.w	r1, r7, #88	@ 0x58
 8002778:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800277c:	f5a3 73b0 	sub.w	r3, r3, #352	@ 0x160
 8002780:	6818      	ldr	r0, [r3, #0]
 8002782:	f7ff fe13 	bl	80023ac <queue_pop_elements>
 8002786:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800278a:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 800278e:	f8b3 3001 	ldrh.w	r3, [r3, #1]
 8002792:	b29b      	uxth	r3, r3
 8002794:	3309      	adds	r3, #9
 8002796:	461a      	mov	r2, r3
 8002798:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800279c:	4611      	mov	r1, r2
 800279e:	4618      	mov	r0, r3
 80027a0:	f7fe fc80 	bl	80010a4 <verify_CRC16_check_sum>
 80027a4:	f8c7 015c 	str.w	r0, [r7, #348]	@ 0x15c
 80027a8:	f8d7 315c 	ldr.w	r3, [r7, #348]	@ 0x15c
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d116      	bne.n	80027de <ref_get_msg+0xa2>
 80027b0:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027b4:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027b8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80027bc:	801a      	strh	r2, [r3, #0]
 80027be:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027c2:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 80027c6:	681a      	ldr	r2, [r3, #0]
 80027c8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027cc:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027d0:	4610      	mov	r0, r2
 80027d2:	4619      	mov	r1, r3
 80027d4:	2342      	movs	r3, #66	@ 0x42
 80027d6:	461a      	mov	r2, r3
 80027d8:	f01b f9a4 	bl	801db24 <memcpy>
 80027dc:	e1a1      	b.n	8002b22 <ref_get_msg+0x3e6>
 80027de:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 80027e2:	3307      	adds	r3, #7
 80027e4:	f8c7 3158 	str.w	r3, [r7, #344]	@ 0x158
 80027e8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027ec:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 80027f0:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 80027f4:	b29a      	uxth	r2, r3
 80027f6:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80027fa:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80027fe:	801a      	strh	r2, [r3, #0]
 8002800:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002804:	f5a3 73ae 	sub.w	r3, r3, #348	@ 0x15c
 8002808:	f8b3 3005 	ldrh.w	r3, [r3, #5]
 800280c:	b29b      	uxth	r3, r3
 800280e:	f240 3202 	movw	r2, #770	@ 0x302
 8002812:	4293      	cmp	r3, r2
 8002814:	f000 815e 	beq.w	8002ad4 <ref_get_msg+0x398>
 8002818:	f240 3202 	movw	r2, #770	@ 0x302
 800281c:	4293      	cmp	r3, r2
 800281e:	f300 8169 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002822:	f240 3201 	movw	r2, #769	@ 0x301
 8002826:	4293      	cmp	r3, r2
 8002828:	f000 8148 	beq.w	8002abc <ref_get_msg+0x380>
 800282c:	f240 3201 	movw	r2, #769	@ 0x301
 8002830:	4293      	cmp	r3, r2
 8002832:	f300 815f 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002836:	f240 220a 	movw	r2, #522	@ 0x20a
 800283a:	4293      	cmp	r3, r2
 800283c:	f300 815a 	bgt.w	8002af4 <ref_get_msg+0x3b8>
 8002840:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8002844:	dc04      	bgt.n	8002850 <ref_get_msg+0x114>
 8002846:	2b04      	cmp	r3, #4
 8002848:	dc40      	bgt.n	80028cc <ref_get_msg+0x190>
 800284a:	2b00      	cmp	r3, #0
 800284c:	dc2e      	bgt.n	80028ac <ref_get_msg+0x170>
 800284e:	e151      	b.n	8002af4 <ref_get_msg+0x3b8>
 8002850:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 8002854:	2b09      	cmp	r3, #9
 8002856:	f200 814d 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 800285a:	a201      	add	r2, pc, #4	@ (adr r2, 8002860 <ref_get_msg+0x124>)
 800285c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002860:	080029b5 	.word	0x080029b5
 8002864:	080029e5 	.word	0x080029e5
 8002868:	08002a05 	.word	0x08002a05
 800286c:	08002a21 	.word	0x08002a21
 8002870:	08002a39 	.word	0x08002a39
 8002874:	08002a4d 	.word	0x08002a4d
 8002878:	08002a5f 	.word	0x08002a5f
 800287c:	08002a7b 	.word	0x08002a7b
 8002880:	08002a93 	.word	0x08002a93
 8002884:	08002aa9 	.word	0x08002aa9
 8002888:	f2a3 1301 	subw	r3, r3, #257	@ 0x101
 800288c:	2b04      	cmp	r3, #4
 800288e:	f200 8131 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 8002892:	a201      	add	r2, pc, #4	@ (adr r2, 8002898 <ref_get_msg+0x15c>)
 8002894:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002898:	0800294b 	.word	0x0800294b
 800289c:	08002961 	.word	0x08002961
 80028a0:	08002977 	.word	0x08002977
 80028a4:	0800298f 	.word	0x0800298f
 80028a8:	080029a3 	.word	0x080029a3
 80028ac:	3b01      	subs	r3, #1
 80028ae:	2b03      	cmp	r3, #3
 80028b0:	f200 8120 	bhi.w	8002af4 <ref_get_msg+0x3b8>
 80028b4:	a201      	add	r2, pc, #4	@ (adr r2, 80028bc <ref_get_msg+0x180>)
 80028b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028ba:	bf00      	nop
 80028bc:	080028dd 	.word	0x080028dd
 80028c0:	080028f5 	.word	0x080028f5
 80028c4:	08002907 	.word	0x08002907
 80028c8:	08002933 	.word	0x08002933
 80028cc:	f5b3 7f83 	cmp.w	r3, #262	@ 0x106
 80028d0:	f280 8110 	bge.w	8002af4 <ref_get_msg+0x3b8>
 80028d4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80028d8:	dcd6      	bgt.n	8002888 <ref_get_msg+0x14c>
 80028da:	e10b      	b.n	8002af4 <ref_get_msg+0x3b8>
 80028dc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028e0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80028e4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80028e8:	3302      	adds	r3, #2
 80028ea:	8811      	ldrh	r1, [r2, #0]
 80028ec:	7892      	ldrb	r2, [r2, #2]
 80028ee:	8019      	strh	r1, [r3, #0]
 80028f0:	709a      	strb	r2, [r3, #2]
 80028f2:	e107      	b.n	8002b04 <ref_get_msg+0x3c8>
 80028f4:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80028f8:	781a      	ldrb	r2, [r3, #0]
 80028fa:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80028fe:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002902:	709a      	strb	r2, [r3, #2]
 8002904:	e0fe      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002906:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800290a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800290e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002912:	3302      	adds	r3, #2
 8002914:	6814      	ldr	r4, [r2, #0]
 8002916:	6850      	ldr	r0, [r2, #4]
 8002918:	6891      	ldr	r1, [r2, #8]
 800291a:	68d5      	ldr	r5, [r2, #12]
 800291c:	601c      	str	r4, [r3, #0]
 800291e:	6058      	str	r0, [r3, #4]
 8002920:	6099      	str	r1, [r3, #8]
 8002922:	60dd      	str	r5, [r3, #12]
 8002924:	6914      	ldr	r4, [r2, #16]
 8002926:	6950      	ldr	r0, [r2, #20]
 8002928:	6991      	ldr	r1, [r2, #24]
 800292a:	611c      	str	r4, [r3, #16]
 800292c:	6158      	str	r0, [r3, #20]
 800292e:	6199      	str	r1, [r3, #24]
 8002930:	e0e8      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002932:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002936:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800293a:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 800293e:	3302      	adds	r3, #2
 8002940:	8811      	ldrh	r1, [r2, #0]
 8002942:	7892      	ldrb	r2, [r2, #2]
 8002944:	8019      	strh	r1, [r3, #0]
 8002946:	709a      	strb	r2, [r3, #2]
 8002948:	e0dc      	b.n	8002b04 <ref_get_msg+0x3c8>
 800294a:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	461a      	mov	r2, r3
 8002952:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002956:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800295a:	f8c3 2002 	str.w	r2, [r3, #2]
 800295e:	e0d1      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002960:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002964:	681b      	ldr	r3, [r3, #0]
 8002966:	461a      	mov	r2, r3
 8002968:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800296c:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002970:	f8c3 2002 	str.w	r2, [r3, #2]
 8002974:	e0c6      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002976:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800297a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800297e:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002982:	3302      	adds	r3, #2
 8002984:	8811      	ldrh	r1, [r2, #0]
 8002986:	7892      	ldrb	r2, [r2, #2]
 8002988:	8019      	strh	r1, [r3, #0]
 800298a:	709a      	strb	r2, [r3, #2]
 800298c:	e0ba      	b.n	8002b04 <ref_get_msg+0x3c8>
 800298e:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002992:	881b      	ldrh	r3, [r3, #0]
 8002994:	b29a      	uxth	r2, r3
 8002996:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 800299a:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 800299e:	805a      	strh	r2, [r3, #2]
 80029a0:	e0b0      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029a2:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 80029a6:	781a      	ldrb	r2, [r3, #0]
 80029a8:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029ac:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029b0:	709a      	strb	r2, [r3, #2]
 80029b2:	e0a7      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029b4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029b8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029bc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029c0:	3302      	adds	r3, #2
 80029c2:	6810      	ldr	r0, [r2, #0]
 80029c4:	6851      	ldr	r1, [r2, #4]
 80029c6:	6895      	ldr	r5, [r2, #8]
 80029c8:	68d4      	ldr	r4, [r2, #12]
 80029ca:	6018      	str	r0, [r3, #0]
 80029cc:	6059      	str	r1, [r3, #4]
 80029ce:	609d      	str	r5, [r3, #8]
 80029d0:	60dc      	str	r4, [r3, #12]
 80029d2:	6910      	ldr	r0, [r2, #16]
 80029d4:	6951      	ldr	r1, [r2, #20]
 80029d6:	6118      	str	r0, [r3, #16]
 80029d8:	6159      	str	r1, [r3, #20]
 80029da:	8b11      	ldrh	r1, [r2, #24]
 80029dc:	7e92      	ldrb	r2, [r2, #26]
 80029de:	8319      	strh	r1, [r3, #24]
 80029e0:	769a      	strb	r2, [r3, #26]
 80029e2:	e08f      	b.n	8002b04 <ref_get_msg+0x3c8>
 80029e4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 80029e8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 80029ec:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 80029f0:	3302      	adds	r3, #2
 80029f2:	6814      	ldr	r4, [r2, #0]
 80029f4:	6850      	ldr	r0, [r2, #4]
 80029f6:	6891      	ldr	r1, [r2, #8]
 80029f8:	68d2      	ldr	r2, [r2, #12]
 80029fa:	601c      	str	r4, [r3, #0]
 80029fc:	6058      	str	r0, [r3, #4]
 80029fe:	6099      	str	r1, [r3, #8]
 8002a00:	60da      	str	r2, [r3, #12]
 8002a02:	e07f      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a08:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a0c:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a10:	3302      	adds	r3, #2
 8002a12:	6810      	ldr	r0, [r2, #0]
 8002a14:	6851      	ldr	r1, [r2, #4]
 8002a16:	6892      	ldr	r2, [r2, #8]
 8002a18:	6018      	str	r0, [r3, #0]
 8002a1a:	6059      	str	r1, [r3, #4]
 8002a1c:	609a      	str	r2, [r3, #8]
 8002a1e:	e071      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a20:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a24:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a28:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a2c:	3302      	adds	r3, #2
 8002a2e:	6811      	ldr	r1, [r2, #0]
 8002a30:	6019      	str	r1, [r3, #0]
 8002a32:	8892      	ldrh	r2, [r2, #4]
 8002a34:	809a      	strh	r2, [r3, #4]
 8002a36:	e065      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a38:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a3c:	881b      	ldrh	r3, [r3, #0]
 8002a3e:	b29a      	uxth	r2, r3
 8002a40:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a44:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a48:	805a      	strh	r2, [r3, #2]
 8002a4a:	e05b      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a4c:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a50:	781a      	ldrb	r2, [r3, #0]
 8002a52:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a56:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a5a:	709a      	strb	r2, [r3, #2]
 8002a5c:	e052      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a5e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a62:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a66:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a6a:	3302      	adds	r3, #2
 8002a6c:	6811      	ldr	r1, [r2, #0]
 8002a6e:	6019      	str	r1, [r3, #0]
 8002a70:	8891      	ldrh	r1, [r2, #4]
 8002a72:	7992      	ldrb	r2, [r2, #6]
 8002a74:	8099      	strh	r1, [r3, #4]
 8002a76:	719a      	strb	r2, [r3, #6]
 8002a78:	e044      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a7a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a7e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002a82:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002a86:	3302      	adds	r3, #2
 8002a88:	6811      	ldr	r1, [r2, #0]
 8002a8a:	6019      	str	r1, [r3, #0]
 8002a8c:	8892      	ldrh	r2, [r2, #4]
 8002a8e:	809a      	strh	r2, [r3, #4]
 8002a90:	e038      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002a92:	f8d7 3158 	ldr.w	r3, [r7, #344]	@ 0x158
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	461a      	mov	r2, r3
 8002a9a:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002a9e:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002aa2:	f8c3 2002 	str.w	r2, [r3, #2]
 8002aa6:	e02d      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002aa8:	f107 0314 	add.w	r3, r7, #20
 8002aac:	3302      	adds	r3, #2
 8002aae:	2203      	movs	r2, #3
 8002ab0:	f8d7 1158 	ldr.w	r1, [r7, #344]	@ 0x158
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	f01b f835 	bl	801db24 <memcpy>
 8002aba:	e023      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002abc:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ac0:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002ac4:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ac8:	3302      	adds	r3, #2
 8002aca:	6811      	ldr	r1, [r2, #0]
 8002acc:	6019      	str	r1, [r3, #0]
 8002ace:	8892      	ldrh	r2, [r2, #4]
 8002ad0:	809a      	strh	r2, [r3, #4]
 8002ad2:	e017      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002ad4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002ad8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002adc:	f8d7 2158 	ldr.w	r2, [r7, #344]	@ 0x158
 8002ae0:	3302      	adds	r3, #2
 8002ae2:	6814      	ldr	r4, [r2, #0]
 8002ae4:	6850      	ldr	r0, [r2, #4]
 8002ae6:	6891      	ldr	r1, [r2, #8]
 8002ae8:	601c      	str	r4, [r3, #0]
 8002aea:	6058      	str	r0, [r3, #4]
 8002aec:	6099      	str	r1, [r3, #8]
 8002aee:	7b12      	ldrb	r2, [r2, #12]
 8002af0:	731a      	strb	r2, [r3, #12]
 8002af2:	e007      	b.n	8002b04 <ref_get_msg+0x3c8>
 8002af4:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002af8:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002afc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002b00:	801a      	strh	r2, [r3, #0]
 8002b02:	bf00      	nop
 8002b04:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b08:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b0c:	681a      	ldr	r2, [r3, #0]
 8002b0e:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b12:	f5a3 73a6 	sub.w	r3, r3, #332	@ 0x14c
 8002b16:	4610      	mov	r0, r2
 8002b18:	4619      	mov	r1, r3
 8002b1a:	2342      	movs	r3, #66	@ 0x42
 8002b1c:	461a      	mov	r2, r3
 8002b1e:	f01b f801 	bl	801db24 <memcpy>
 8002b22:	f507 73b0 	add.w	r3, r7, #352	@ 0x160
 8002b26:	f5a3 73aa 	sub.w	r3, r3, #340	@ 0x154
 8002b2a:	6818      	ldr	r0, [r3, #0]
 8002b2c:	f507 77b0 	add.w	r7, r7, #352	@ 0x160
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bdb0      	pop	{r4, r5, r7, pc}

08002b34 <ref_usart_start>:
 8002b34:	b580      	push	{r7, lr}
 8002b36:	b086      	sub	sp, #24
 8002b38:	af00      	add	r7, sp, #0
 8002b3a:	60f8      	str	r0, [r7, #12]
 8002b3c:	60b9      	str	r1, [r7, #8]
 8002b3e:	603b      	str	r3, [r7, #0]
 8002b40:	4613      	mov	r3, r2
 8002b42:	80fb      	strh	r3, [r7, #6]
 8002b44:	4a3a      	ldr	r2, [pc, #232]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b46:	683b      	ldr	r3, [r7, #0]
 8002b48:	6013      	str	r3, [r2, #0]
 8002b4a:	4b39      	ldr	r3, [pc, #228]	@ (8002c30 <ref_usart_start+0xfc>)
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	4618      	mov	r0, r3
 8002b50:	f7ff fb6a 	bl	8002228 <queue_init>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8002b5a:	b2db      	uxtb	r3, r3
 8002b5c:	2b20      	cmp	r3, #32
 8002b5e:	d162      	bne.n	8002c26 <ref_usart_start+0xf2>
 8002b60:	68bb      	ldr	r3, [r7, #8]
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d002      	beq.n	8002b6c <ref_usart_start+0x38>
 8002b66:	88fb      	ldrh	r3, [r7, #6]
 8002b68:	2b00      	cmp	r3, #0
 8002b6a:	d101      	bne.n	8002b70 <ref_usart_start+0x3c>
 8002b6c:	2301      	movs	r3, #1
 8002b6e:	e05b      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b76:	2b01      	cmp	r3, #1
 8002b78:	d101      	bne.n	8002b7e <ref_usart_start+0x4a>
 8002b7a:	2302      	movs	r3, #2
 8002b7c:	e054      	b.n	8002c28 <ref_usart_start+0xf4>
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	2201      	movs	r2, #1
 8002b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b86:	68ba      	ldr	r2, [r7, #8]
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	629a      	str	r2, [r3, #40]	@ 0x28
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	88fa      	ldrh	r2, [r7, #6]
 8002b90:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	2200      	movs	r2, #0
 8002b96:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b98:	68fb      	ldr	r3, [r7, #12]
 8002b9a:	2222      	movs	r2, #34	@ 0x22
 8002b9c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002ba4:	4a23      	ldr	r2, [pc, #140]	@ (8002c34 <ref_usart_start+0x100>)
 8002ba6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bac:	4a22      	ldr	r2, [pc, #136]	@ (8002c38 <ref_usart_start+0x104>)
 8002bae:	641a      	str	r2, [r3, #64]	@ 0x40
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bb4:	2200      	movs	r2, #0
 8002bb6:	651a      	str	r2, [r3, #80]	@ 0x50
 8002bb8:	f107 0308 	add.w	r3, r7, #8
 8002bbc:	617b      	str	r3, [r7, #20]
 8002bbe:	68fb      	ldr	r3, [r7, #12]
 8002bc0:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	3304      	adds	r3, #4
 8002bc8:	4619      	mov	r1, r3
 8002bca:	697b      	ldr	r3, [r7, #20]
 8002bcc:	681a      	ldr	r2, [r3, #0]
 8002bce:	88fb      	ldrh	r3, [r7, #6]
 8002bd0:	f00c fac6 	bl	800f160 <HAL_DMA_Start_IT>
 8002bd4:	2300      	movs	r3, #0
 8002bd6:	613b      	str	r3, [r7, #16]
 8002bd8:	68fb      	ldr	r3, [r7, #12]
 8002bda:	681b      	ldr	r3, [r3, #0]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	613b      	str	r3, [r7, #16]
 8002be0:	68fb      	ldr	r3, [r7, #12]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	685b      	ldr	r3, [r3, #4]
 8002be6:	613b      	str	r3, [r7, #16]
 8002be8:	693b      	ldr	r3, [r7, #16]
 8002bea:	68fb      	ldr	r3, [r7, #12]
 8002bec:	2200      	movs	r2, #0
 8002bee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	68da      	ldr	r2, [r3, #12]
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002c00:	60da      	str	r2, [r3, #12]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	695a      	ldr	r2, [r3, #20]
 8002c08:	68fb      	ldr	r3, [r7, #12]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	f042 0201 	orr.w	r2, r2, #1
 8002c10:	615a      	str	r2, [r3, #20]
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	695a      	ldr	r2, [r3, #20]
 8002c18:	68fb      	ldr	r3, [r7, #12]
 8002c1a:	681b      	ldr	r3, [r3, #0]
 8002c1c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002c20:	615a      	str	r2, [r3, #20]
 8002c22:	2300      	movs	r3, #0
 8002c24:	e000      	b.n	8002c28 <ref_usart_start+0xf4>
 8002c26:	2302      	movs	r3, #2
 8002c28:	4618      	mov	r0, r3
 8002c2a:	3718      	adds	r7, #24
 8002c2c:	46bd      	mov	sp, r7
 8002c2e:	bd80      	pop	{r7, pc}
 8002c30:	200008c8 	.word	0x200008c8
 8002c34:	08002c99 	.word	0x08002c99
 8002c38:	08002c3d 	.word	0x08002c3d

08002c3c <ref_half_cplt_isr>:
 8002c3c:	b580      	push	{r7, lr}
 8002c3e:	b084      	sub	sp, #16
 8002c40:	af00      	add	r7, sp, #0
 8002c42:	6078      	str	r0, [r7, #4]
 8002c44:	4b11      	ldr	r3, [pc, #68]	@ (8002c8c <ref_half_cplt_isr+0x50>)
 8002c46:	681a      	ldr	r2, [r3, #0]
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	68db      	ldr	r3, [r3, #12]
 8002c4e:	781b      	ldrb	r3, [r3, #0]
 8002c50:	4619      	mov	r1, r3
 8002c52:	4610      	mov	r0, r2
 8002c54:	f7ff fb2f 	bl	80022b6 <queue_append_byte>
 8002c58:	2300      	movs	r3, #0
 8002c5a:	60fb      	str	r3, [r7, #12]
 8002c5c:	4b0c      	ldr	r3, [pc, #48]	@ (8002c90 <ref_half_cplt_isr+0x54>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f107 020c 	add.w	r2, r7, #12
 8002c64:	4611      	mov	r1, r2
 8002c66:	4618      	mov	r0, r3
 8002c68:	f018 ff88 	bl	801bb7c <vTaskNotifyGiveFromISR>
 8002c6c:	68fb      	ldr	r3, [r7, #12]
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d007      	beq.n	8002c82 <ref_half_cplt_isr+0x46>
 8002c72:	4b08      	ldr	r3, [pc, #32]	@ (8002c94 <ref_half_cplt_isr+0x58>)
 8002c74:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002c78:	601a      	str	r2, [r3, #0]
 8002c7a:	f3bf 8f4f 	dsb	sy
 8002c7e:	f3bf 8f6f 	isb	sy
 8002c82:	bf00      	nop
 8002c84:	3710      	adds	r7, #16
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	bf00      	nop
 8002c8c:	200008c8 	.word	0x200008c8
 8002c90:	20003b48 	.word	0x20003b48
 8002c94:	e000ed04 	.word	0xe000ed04

08002c98 <ref_full_cplt_isr>:
 8002c98:	b580      	push	{r7, lr}
 8002c9a:	b084      	sub	sp, #16
 8002c9c:	af00      	add	r7, sp, #0
 8002c9e:	6078      	str	r0, [r7, #4]
 8002ca0:	4b11      	ldr	r3, [pc, #68]	@ (8002ce8 <ref_full_cplt_isr+0x50>)
 8002ca2:	681a      	ldr	r2, [r3, #0]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	68db      	ldr	r3, [r3, #12]
 8002caa:	3301      	adds	r3, #1
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	4619      	mov	r1, r3
 8002cb0:	4610      	mov	r0, r2
 8002cb2:	f7ff fb00 	bl	80022b6 <queue_append_byte>
 8002cb6:	2300      	movs	r3, #0
 8002cb8:	60fb      	str	r3, [r7, #12]
 8002cba:	4b0c      	ldr	r3, [pc, #48]	@ (8002cec <ref_full_cplt_isr+0x54>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	f107 020c 	add.w	r2, r7, #12
 8002cc2:	4611      	mov	r1, r2
 8002cc4:	4618      	mov	r0, r3
 8002cc6:	f018 ff59 	bl	801bb7c <vTaskNotifyGiveFromISR>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d007      	beq.n	8002ce0 <ref_full_cplt_isr+0x48>
 8002cd0:	4b07      	ldr	r3, [pc, #28]	@ (8002cf0 <ref_full_cplt_isr+0x58>)
 8002cd2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8002cd6:	601a      	str	r2, [r3, #0]
 8002cd8:	f3bf 8f4f 	dsb	sy
 8002cdc:	f3bf 8f6f 	isb	sy
 8002ce0:	bf00      	nop
 8002ce2:	3710      	adds	r7, #16
 8002ce4:	46bd      	mov	sp, r7
 8002ce6:	bd80      	pop	{r7, pc}
 8002ce8:	200008c8 	.word	0x200008c8
 8002cec:	20003b48 	.word	0x20003b48
 8002cf0:	e000ed04 	.word	0xe000ed04

08002cf4 <MX_ADC3_Init>:
 8002cf4:	b580      	push	{r7, lr}
 8002cf6:	b084      	sub	sp, #16
 8002cf8:	af00      	add	r7, sp, #0
 8002cfa:	463b      	mov	r3, r7
 8002cfc:	2200      	movs	r2, #0
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	609a      	str	r2, [r3, #8]
 8002d04:	60da      	str	r2, [r3, #12]
 8002d06:	4b21      	ldr	r3, [pc, #132]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d08:	4a21      	ldr	r2, [pc, #132]	@ (8002d90 <MX_ADC3_Init+0x9c>)
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	4b1f      	ldr	r3, [pc, #124]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d0e:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8002d12:	605a      	str	r2, [r3, #4]
 8002d14:	4b1d      	ldr	r3, [pc, #116]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d16:	2200      	movs	r2, #0
 8002d18:	609a      	str	r2, [r3, #8]
 8002d1a:	4b1c      	ldr	r3, [pc, #112]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	611a      	str	r2, [r3, #16]
 8002d20:	4b1a      	ldr	r3, [pc, #104]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d22:	2200      	movs	r2, #0
 8002d24:	761a      	strb	r2, [r3, #24]
 8002d26:	4b19      	ldr	r3, [pc, #100]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d28:	2200      	movs	r2, #0
 8002d2a:	f883 2020 	strb.w	r2, [r3, #32]
 8002d2e:	4b17      	ldr	r3, [pc, #92]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d30:	2200      	movs	r2, #0
 8002d32:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d34:	4b15      	ldr	r3, [pc, #84]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d36:	4a17      	ldr	r2, [pc, #92]	@ (8002d94 <MX_ADC3_Init+0xa0>)
 8002d38:	629a      	str	r2, [r3, #40]	@ 0x28
 8002d3a:	4b14      	ldr	r3, [pc, #80]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	60da      	str	r2, [r3, #12]
 8002d40:	4b12      	ldr	r3, [pc, #72]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d42:	2201      	movs	r2, #1
 8002d44:	61da      	str	r2, [r3, #28]
 8002d46:	4b11      	ldr	r3, [pc, #68]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d48:	2200      	movs	r2, #0
 8002d4a:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
 8002d4e:	4b0f      	ldr	r3, [pc, #60]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d50:	2201      	movs	r2, #1
 8002d52:	615a      	str	r2, [r3, #20]
 8002d54:	480d      	ldr	r0, [pc, #52]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d56:	f00a ff5f 	bl	800dc18 <HAL_ADC_Init>
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d001      	beq.n	8002d64 <MX_ADC3_Init+0x70>
 8002d60:	f000 fd4a 	bl	80037f8 <Error_Handler>
 8002d64:	2308      	movs	r3, #8
 8002d66:	603b      	str	r3, [r7, #0]
 8002d68:	2301      	movs	r3, #1
 8002d6a:	607b      	str	r3, [r7, #4]
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	60bb      	str	r3, [r7, #8]
 8002d70:	463b      	mov	r3, r7
 8002d72:	4619      	mov	r1, r3
 8002d74:	4805      	ldr	r0, [pc, #20]	@ (8002d8c <MX_ADC3_Init+0x98>)
 8002d76:	f00a ff93 	bl	800dca0 <HAL_ADC_ConfigChannel>
 8002d7a:	4603      	mov	r3, r0
 8002d7c:	2b00      	cmp	r3, #0
 8002d7e:	d001      	beq.n	8002d84 <MX_ADC3_Init+0x90>
 8002d80:	f000 fd3a 	bl	80037f8 <Error_Handler>
 8002d84:	bf00      	nop
 8002d86:	3710      	adds	r7, #16
 8002d88:	46bd      	mov	sp, r7
 8002d8a:	bd80      	pop	{r7, pc}
 8002d8c:	200008cc 	.word	0x200008cc
 8002d90:	40012200 	.word	0x40012200
 8002d94:	0f000001 	.word	0x0f000001

08002d98 <HAL_ADC_MspInit>:
 8002d98:	b580      	push	{r7, lr}
 8002d9a:	b08a      	sub	sp, #40	@ 0x28
 8002d9c:	af00      	add	r7, sp, #0
 8002d9e:	6078      	str	r0, [r7, #4]
 8002da0:	f107 0314 	add.w	r3, r7, #20
 8002da4:	2200      	movs	r2, #0
 8002da6:	601a      	str	r2, [r3, #0]
 8002da8:	605a      	str	r2, [r3, #4]
 8002daa:	609a      	str	r2, [r3, #8]
 8002dac:	60da      	str	r2, [r3, #12]
 8002dae:	611a      	str	r2, [r3, #16]
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	4a17      	ldr	r2, [pc, #92]	@ (8002e14 <HAL_ADC_MspInit+0x7c>)
 8002db6:	4293      	cmp	r3, r2
 8002db8:	d128      	bne.n	8002e0c <HAL_ADC_MspInit+0x74>
 8002dba:	2300      	movs	r3, #0
 8002dbc:	613b      	str	r3, [r7, #16]
 8002dbe:	4b16      	ldr	r3, [pc, #88]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dc2:	4a15      	ldr	r2, [pc, #84]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dc4:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002dc8:	6453      	str	r3, [r2, #68]	@ 0x44
 8002dca:	4b13      	ldr	r3, [pc, #76]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002dcc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002dce:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	693b      	ldr	r3, [r7, #16]
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	60fb      	str	r3, [r7, #12]
 8002dda:	4b0f      	ldr	r3, [pc, #60]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dde:	4a0e      	ldr	r2, [pc, #56]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de0:	f043 0320 	orr.w	r3, r3, #32
 8002de4:	6313      	str	r3, [r2, #48]	@ 0x30
 8002de6:	4b0c      	ldr	r3, [pc, #48]	@ (8002e18 <HAL_ADC_MspInit+0x80>)
 8002de8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002dea:	f003 0320 	and.w	r3, r3, #32
 8002dee:	60fb      	str	r3, [r7, #12]
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8002df6:	617b      	str	r3, [r7, #20]
 8002df8:	2303      	movs	r3, #3
 8002dfa:	61bb      	str	r3, [r7, #24]
 8002dfc:	2300      	movs	r3, #0
 8002dfe:	61fb      	str	r3, [r7, #28]
 8002e00:	f107 0314 	add.w	r3, r7, #20
 8002e04:	4619      	mov	r1, r3
 8002e06:	4805      	ldr	r0, [pc, #20]	@ (8002e1c <HAL_ADC_MspInit+0x84>)
 8002e08:	f00c fd0a 	bl	800f820 <HAL_GPIO_Init>
 8002e0c:	bf00      	nop
 8002e0e:	3728      	adds	r7, #40	@ 0x28
 8002e10:	46bd      	mov	sp, r7
 8002e12:	bd80      	pop	{r7, pc}
 8002e14:	40012200 	.word	0x40012200
 8002e18:	40023800 	.word	0x40023800
 8002e1c:	40021400 	.word	0x40021400

08002e20 <MX_CAN1_Init>:
 8002e20:	b580      	push	{r7, lr}
 8002e22:	af00      	add	r7, sp, #0
 8002e24:	4b17      	ldr	r3, [pc, #92]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e26:	4a18      	ldr	r2, [pc, #96]	@ (8002e88 <MX_CAN1_Init+0x68>)
 8002e28:	601a      	str	r2, [r3, #0]
 8002e2a:	4b16      	ldr	r3, [pc, #88]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e2c:	2203      	movs	r2, #3
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	4b14      	ldr	r3, [pc, #80]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	609a      	str	r2, [r3, #8]
 8002e36:	4b13      	ldr	r3, [pc, #76]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e38:	2200      	movs	r2, #0
 8002e3a:	60da      	str	r2, [r3, #12]
 8002e3c:	4b11      	ldr	r3, [pc, #68]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e3e:	f44f 2200 	mov.w	r2, #524288	@ 0x80000
 8002e42:	611a      	str	r2, [r3, #16]
 8002e44:	4b0f      	ldr	r3, [pc, #60]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e46:	f44f 1240 	mov.w	r2, #3145728	@ 0x300000
 8002e4a:	615a      	str	r2, [r3, #20]
 8002e4c:	4b0d      	ldr	r3, [pc, #52]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e4e:	2200      	movs	r2, #0
 8002e50:	761a      	strb	r2, [r3, #24]
 8002e52:	4b0c      	ldr	r3, [pc, #48]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	765a      	strb	r2, [r3, #25]
 8002e58:	4b0a      	ldr	r3, [pc, #40]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e5a:	2200      	movs	r2, #0
 8002e5c:	769a      	strb	r2, [r3, #26]
 8002e5e:	4b09      	ldr	r3, [pc, #36]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e60:	2200      	movs	r2, #0
 8002e62:	76da      	strb	r2, [r3, #27]
 8002e64:	4b07      	ldr	r3, [pc, #28]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e66:	2200      	movs	r2, #0
 8002e68:	771a      	strb	r2, [r3, #28]
 8002e6a:	4b06      	ldr	r3, [pc, #24]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	775a      	strb	r2, [r3, #29]
 8002e70:	4804      	ldr	r0, [pc, #16]	@ (8002e84 <MX_CAN1_Init+0x64>)
 8002e72:	f00b f933 	bl	800e0dc <HAL_CAN_Init>
 8002e76:	4603      	mov	r3, r0
 8002e78:	2b00      	cmp	r3, #0
 8002e7a:	d001      	beq.n	8002e80 <MX_CAN1_Init+0x60>
 8002e7c:	f000 fcbc 	bl	80037f8 <Error_Handler>
 8002e80:	bf00      	nop
 8002e82:	bd80      	pop	{r7, pc}
 8002e84:	20000914 	.word	0x20000914
 8002e88:	40006400 	.word	0x40006400

08002e8c <MX_CAN2_Init>:
 8002e8c:	b580      	push	{r7, lr}
 8002e8e:	af00      	add	r7, sp, #0
 8002e90:	4b17      	ldr	r3, [pc, #92]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e92:	4a18      	ldr	r2, [pc, #96]	@ (8002ef4 <MX_CAN2_Init+0x68>)
 8002e94:	601a      	str	r2, [r3, #0]
 8002e96:	4b16      	ldr	r3, [pc, #88]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e98:	2203      	movs	r2, #3
 8002e9a:	605a      	str	r2, [r3, #4]
 8002e9c:	4b14      	ldr	r3, [pc, #80]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	609a      	str	r2, [r3, #8]
 8002ea2:	4b13      	ldr	r3, [pc, #76]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	60da      	str	r2, [r3, #12]
 8002ea8:	4b11      	ldr	r3, [pc, #68]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eaa:	f44f 2210 	mov.w	r2, #589824	@ 0x90000
 8002eae:	611a      	str	r2, [r3, #16]
 8002eb0:	4b0f      	ldr	r3, [pc, #60]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eb2:	f44f 1200 	mov.w	r2, #2097152	@ 0x200000
 8002eb6:	615a      	str	r2, [r3, #20]
 8002eb8:	4b0d      	ldr	r3, [pc, #52]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002eba:	2200      	movs	r2, #0
 8002ebc:	761a      	strb	r2, [r3, #24]
 8002ebe:	4b0c      	ldr	r3, [pc, #48]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec0:	2200      	movs	r2, #0
 8002ec2:	765a      	strb	r2, [r3, #25]
 8002ec4:	4b0a      	ldr	r3, [pc, #40]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	769a      	strb	r2, [r3, #26]
 8002eca:	4b09      	ldr	r3, [pc, #36]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	76da      	strb	r2, [r3, #27]
 8002ed0:	4b07      	ldr	r3, [pc, #28]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	771a      	strb	r2, [r3, #28]
 8002ed6:	4b06      	ldr	r3, [pc, #24]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ed8:	2200      	movs	r2, #0
 8002eda:	775a      	strb	r2, [r3, #29]
 8002edc:	4804      	ldr	r0, [pc, #16]	@ (8002ef0 <MX_CAN2_Init+0x64>)
 8002ede:	f00b f8fd 	bl	800e0dc <HAL_CAN_Init>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	d001      	beq.n	8002eec <MX_CAN2_Init+0x60>
 8002ee8:	f000 fc86 	bl	80037f8 <Error_Handler>
 8002eec:	bf00      	nop
 8002eee:	bd80      	pop	{r7, pc}
 8002ef0:	2000093c 	.word	0x2000093c
 8002ef4:	40006800 	.word	0x40006800

08002ef8 <HAL_CAN_MspInit>:
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b08c      	sub	sp, #48	@ 0x30
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	f107 031c 	add.w	r3, r7, #28
 8002f04:	2200      	movs	r2, #0
 8002f06:	601a      	str	r2, [r3, #0]
 8002f08:	605a      	str	r2, [r3, #4]
 8002f0a:	609a      	str	r2, [r3, #8]
 8002f0c:	60da      	str	r2, [r3, #12]
 8002f0e:	611a      	str	r2, [r3, #16]
 8002f10:	687b      	ldr	r3, [r7, #4]
 8002f12:	681b      	ldr	r3, [r3, #0]
 8002f14:	4a52      	ldr	r2, [pc, #328]	@ (8003060 <HAL_CAN_MspInit+0x168>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d145      	bne.n	8002fa6 <HAL_CAN_MspInit+0xae>
 8002f1a:	4b52      	ldr	r3, [pc, #328]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	3301      	adds	r3, #1
 8002f20:	4a50      	ldr	r2, [pc, #320]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f22:	6013      	str	r3, [r2, #0]
 8002f24:	4b4f      	ldr	r3, [pc, #316]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002f26:	681b      	ldr	r3, [r3, #0]
 8002f28:	2b01      	cmp	r3, #1
 8002f2a:	d10d      	bne.n	8002f48 <HAL_CAN_MspInit+0x50>
 8002f2c:	2300      	movs	r3, #0
 8002f2e:	61bb      	str	r3, [r7, #24]
 8002f30:	4b4d      	ldr	r3, [pc, #308]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f34:	4a4c      	ldr	r2, [pc, #304]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f36:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002f3a:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f3c:	4b4a      	ldr	r3, [pc, #296]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f3e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f40:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002f44:	61bb      	str	r3, [r7, #24]
 8002f46:	69bb      	ldr	r3, [r7, #24]
 8002f48:	2300      	movs	r3, #0
 8002f4a:	617b      	str	r3, [r7, #20]
 8002f4c:	4b46      	ldr	r3, [pc, #280]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f4e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f50:	4a45      	ldr	r2, [pc, #276]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f52:	f043 0308 	orr.w	r3, r3, #8
 8002f56:	6313      	str	r3, [r2, #48]	@ 0x30
 8002f58:	4b43      	ldr	r3, [pc, #268]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002f5a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002f5c:	f003 0308 	and.w	r3, r3, #8
 8002f60:	617b      	str	r3, [r7, #20]
 8002f62:	697b      	ldr	r3, [r7, #20]
 8002f64:	2303      	movs	r3, #3
 8002f66:	61fb      	str	r3, [r7, #28]
 8002f68:	2302      	movs	r3, #2
 8002f6a:	623b      	str	r3, [r7, #32]
 8002f6c:	2300      	movs	r3, #0
 8002f6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002f70:	2303      	movs	r3, #3
 8002f72:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002f74:	2309      	movs	r3, #9
 8002f76:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002f78:	f107 031c 	add.w	r3, r7, #28
 8002f7c:	4619      	mov	r1, r3
 8002f7e:	483b      	ldr	r0, [pc, #236]	@ (800306c <HAL_CAN_MspInit+0x174>)
 8002f80:	f00c fc4e 	bl	800f820 <HAL_GPIO_Init>
 8002f84:	2200      	movs	r2, #0
 8002f86:	2105      	movs	r1, #5
 8002f88:	2014      	movs	r0, #20
 8002f8a:	f00c f803 	bl	800ef94 <HAL_NVIC_SetPriority>
 8002f8e:	2014      	movs	r0, #20
 8002f90:	f00c f81c 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8002f94:	2200      	movs	r2, #0
 8002f96:	2105      	movs	r1, #5
 8002f98:	2015      	movs	r0, #21
 8002f9a:	f00b fffb 	bl	800ef94 <HAL_NVIC_SetPriority>
 8002f9e:	2015      	movs	r0, #21
 8002fa0:	f00c f814 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8002fa4:	e057      	b.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a31      	ldr	r2, [pc, #196]	@ (8003070 <HAL_CAN_MspInit+0x178>)
 8002fac:	4293      	cmp	r3, r2
 8002fae:	d152      	bne.n	8003056 <HAL_CAN_MspInit+0x15e>
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	613b      	str	r3, [r7, #16]
 8002fb4:	4b2c      	ldr	r3, [pc, #176]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fb8:	4a2b      	ldr	r2, [pc, #172]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fba:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8002fbe:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fc0:	4b29      	ldr	r3, [pc, #164]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fc4:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002fc8:	613b      	str	r3, [r7, #16]
 8002fca:	693b      	ldr	r3, [r7, #16]
 8002fcc:	4b25      	ldr	r3, [pc, #148]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	3301      	adds	r3, #1
 8002fd2:	4a24      	ldr	r2, [pc, #144]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd4:	6013      	str	r3, [r2, #0]
 8002fd6:	4b23      	ldr	r3, [pc, #140]	@ (8003064 <HAL_CAN_MspInit+0x16c>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	2b01      	cmp	r3, #1
 8002fdc:	d10d      	bne.n	8002ffa <HAL_CAN_MspInit+0x102>
 8002fde:	2300      	movs	r3, #0
 8002fe0:	60fb      	str	r3, [r7, #12]
 8002fe2:	4b21      	ldr	r3, [pc, #132]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002fe6:	4a20      	ldr	r2, [pc, #128]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002fe8:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002fec:	6413      	str	r3, [r2, #64]	@ 0x40
 8002fee:	4b1e      	ldr	r3, [pc, #120]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8002ff0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ff2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002ff6:	60fb      	str	r3, [r7, #12]
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	2300      	movs	r3, #0
 8002ffc:	60bb      	str	r3, [r7, #8]
 8002ffe:	4b1a      	ldr	r3, [pc, #104]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003000:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003002:	4a19      	ldr	r2, [pc, #100]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 8003004:	f043 0302 	orr.w	r3, r3, #2
 8003008:	6313      	str	r3, [r2, #48]	@ 0x30
 800300a:	4b17      	ldr	r3, [pc, #92]	@ (8003068 <HAL_CAN_MspInit+0x170>)
 800300c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800300e:	f003 0302 	and.w	r3, r3, #2
 8003012:	60bb      	str	r3, [r7, #8]
 8003014:	68bb      	ldr	r3, [r7, #8]
 8003016:	2360      	movs	r3, #96	@ 0x60
 8003018:	61fb      	str	r3, [r7, #28]
 800301a:	2302      	movs	r3, #2
 800301c:	623b      	str	r3, [r7, #32]
 800301e:	2300      	movs	r3, #0
 8003020:	627b      	str	r3, [r7, #36]	@ 0x24
 8003022:	2303      	movs	r3, #3
 8003024:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003026:	2309      	movs	r3, #9
 8003028:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800302a:	f107 031c 	add.w	r3, r7, #28
 800302e:	4619      	mov	r1, r3
 8003030:	4810      	ldr	r0, [pc, #64]	@ (8003074 <HAL_CAN_MspInit+0x17c>)
 8003032:	f00c fbf5 	bl	800f820 <HAL_GPIO_Init>
 8003036:	2200      	movs	r2, #0
 8003038:	2105      	movs	r1, #5
 800303a:	2040      	movs	r0, #64	@ 0x40
 800303c:	f00b ffaa 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003040:	2040      	movs	r0, #64	@ 0x40
 8003042:	f00b ffc3 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003046:	2200      	movs	r2, #0
 8003048:	2105      	movs	r1, #5
 800304a:	2041      	movs	r0, #65	@ 0x41
 800304c:	f00b ffa2 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003050:	2041      	movs	r0, #65	@ 0x41
 8003052:	f00b ffbb 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003056:	bf00      	nop
 8003058:	3730      	adds	r7, #48	@ 0x30
 800305a:	46bd      	mov	sp, r7
 800305c:	bd80      	pop	{r7, pc}
 800305e:	bf00      	nop
 8003060:	40006400 	.word	0x40006400
 8003064:	20000964 	.word	0x20000964
 8003068:	40023800 	.word	0x40023800
 800306c:	40020c00 	.word	0x40020c00
 8003070:	40006800 	.word	0x40006800
 8003074:	40020400 	.word	0x40020400

08003078 <MX_DMA_Init>:
 8003078:	b580      	push	{r7, lr}
 800307a:	b082      	sub	sp, #8
 800307c:	af00      	add	r7, sp, #0
 800307e:	2300      	movs	r3, #0
 8003080:	607b      	str	r3, [r7, #4]
 8003082:	4b2f      	ldr	r3, [pc, #188]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003084:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003086:	4a2e      	ldr	r2, [pc, #184]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003088:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800308c:	6313      	str	r3, [r2, #48]	@ 0x30
 800308e:	4b2c      	ldr	r3, [pc, #176]	@ (8003140 <MX_DMA_Init+0xc8>)
 8003090:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003092:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003096:	607b      	str	r3, [r7, #4]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	2300      	movs	r3, #0
 800309c:	603b      	str	r3, [r7, #0]
 800309e:	4b28      	ldr	r3, [pc, #160]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030a2:	4a27      	ldr	r2, [pc, #156]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030a4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80030a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80030aa:	4b25      	ldr	r3, [pc, #148]	@ (8003140 <MX_DMA_Init+0xc8>)
 80030ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80030ae:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80030b2:	603b      	str	r3, [r7, #0]
 80030b4:	683b      	ldr	r3, [r7, #0]
 80030b6:	2200      	movs	r2, #0
 80030b8:	2105      	movs	r1, #5
 80030ba:	200c      	movs	r0, #12
 80030bc:	f00b ff6a 	bl	800ef94 <HAL_NVIC_SetPriority>
 80030c0:	200c      	movs	r0, #12
 80030c2:	f00b ff83 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80030c6:	2200      	movs	r2, #0
 80030c8:	2105      	movs	r1, #5
 80030ca:	200d      	movs	r0, #13
 80030cc:	f00b ff62 	bl	800ef94 <HAL_NVIC_SetPriority>
 80030d0:	200d      	movs	r0, #13
 80030d2:	f00b ff7b 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80030d6:	2200      	movs	r2, #0
 80030d8:	2105      	movs	r1, #5
 80030da:	200f      	movs	r0, #15
 80030dc:	f00b ff5a 	bl	800ef94 <HAL_NVIC_SetPriority>
 80030e0:	200f      	movs	r0, #15
 80030e2:	f00b ff73 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80030e6:	2200      	movs	r2, #0
 80030e8:	2105      	movs	r1, #5
 80030ea:	2038      	movs	r0, #56	@ 0x38
 80030ec:	f00b ff52 	bl	800ef94 <HAL_NVIC_SetPriority>
 80030f0:	2038      	movs	r0, #56	@ 0x38
 80030f2:	f00b ff6b 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80030f6:	2200      	movs	r2, #0
 80030f8:	2105      	movs	r1, #5
 80030fa:	2039      	movs	r0, #57	@ 0x39
 80030fc:	f00b ff4a 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003100:	2039      	movs	r0, #57	@ 0x39
 8003102:	f00b ff63 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003106:	2200      	movs	r2, #0
 8003108:	2105      	movs	r1, #5
 800310a:	203b      	movs	r0, #59	@ 0x3b
 800310c:	f00b ff42 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003110:	203b      	movs	r0, #59	@ 0x3b
 8003112:	f00b ff5b 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003116:	2200      	movs	r2, #0
 8003118:	2105      	movs	r1, #5
 800311a:	2044      	movs	r0, #68	@ 0x44
 800311c:	f00b ff3a 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003120:	2044      	movs	r0, #68	@ 0x44
 8003122:	f00b ff53 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003126:	2200      	movs	r2, #0
 8003128:	2105      	movs	r1, #5
 800312a:	2045      	movs	r0, #69	@ 0x45
 800312c:	f00b ff32 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003130:	2045      	movs	r0, #69	@ 0x45
 8003132:	f00b ff4b 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003136:	bf00      	nop
 8003138:	3708      	adds	r7, #8
 800313a:	46bd      	mov	sp, r7
 800313c:	bd80      	pop	{r7, pc}
 800313e:	bf00      	nop
 8003140:	40023800 	.word	0x40023800

08003144 <configureTimerForRunTimeStats>:
 8003144:	b480      	push	{r7}
 8003146:	af00      	add	r7, sp, #0
 8003148:	bf00      	nop
 800314a:	46bd      	mov	sp, r7
 800314c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003150:	4770      	bx	lr

08003152 <getRunTimeCounterValue>:
 8003152:	b480      	push	{r7}
 8003154:	af00      	add	r7, sp, #0
 8003156:	2300      	movs	r3, #0
 8003158:	4618      	mov	r0, r3
 800315a:	46bd      	mov	sp, r7
 800315c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003160:	4770      	bx	lr

08003162 <vApplicationStackOverflowHook>:
 8003162:	b480      	push	{r7}
 8003164:	b083      	sub	sp, #12
 8003166:	af00      	add	r7, sp, #0
 8003168:	6078      	str	r0, [r7, #4]
 800316a:	6039      	str	r1, [r7, #0]
 800316c:	bf00      	nop
 800316e:	370c      	adds	r7, #12
 8003170:	46bd      	mov	sp, r7
 8003172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003176:	4770      	bx	lr

08003178 <vApplicationGetIdleTaskMemory>:
 8003178:	b480      	push	{r7}
 800317a:	b085      	sub	sp, #20
 800317c:	af00      	add	r7, sp, #0
 800317e:	60f8      	str	r0, [r7, #12]
 8003180:	60b9      	str	r1, [r7, #8]
 8003182:	607a      	str	r2, [r7, #4]
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	4a07      	ldr	r2, [pc, #28]	@ (80031a4 <vApplicationGetIdleTaskMemory+0x2c>)
 8003188:	601a      	str	r2, [r3, #0]
 800318a:	68bb      	ldr	r3, [r7, #8]
 800318c:	4a06      	ldr	r2, [pc, #24]	@ (80031a8 <vApplicationGetIdleTaskMemory+0x30>)
 800318e:	601a      	str	r2, [r3, #0]
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003196:	601a      	str	r2, [r3, #0]
 8003198:	bf00      	nop
 800319a:	3714      	adds	r7, #20
 800319c:	46bd      	mov	sp, r7
 800319e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031a2:	4770      	bx	lr
 80031a4:	20000970 	.word	0x20000970
 80031a8:	20000af0 	.word	0x20000af0

080031ac <vApplicationGetTimerTaskMemory>:
 80031ac:	b480      	push	{r7}
 80031ae:	b085      	sub	sp, #20
 80031b0:	af00      	add	r7, sp, #0
 80031b2:	60f8      	str	r0, [r7, #12]
 80031b4:	60b9      	str	r1, [r7, #8]
 80031b6:	607a      	str	r2, [r7, #4]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	4a07      	ldr	r2, [pc, #28]	@ (80031d8 <vApplicationGetTimerTaskMemory+0x2c>)
 80031bc:	601a      	str	r2, [r3, #0]
 80031be:	68bb      	ldr	r3, [r7, #8]
 80031c0:	4a06      	ldr	r2, [pc, #24]	@ (80031dc <vApplicationGetTimerTaskMemory+0x30>)
 80031c2:	601a      	str	r2, [r3, #0]
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80031ca:	601a      	str	r2, [r3, #0]
 80031cc:	bf00      	nop
 80031ce:	3714      	adds	r7, #20
 80031d0:	46bd      	mov	sp, r7
 80031d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d6:	4770      	bx	lr
 80031d8:	20000ef0 	.word	0x20000ef0
 80031dc:	20001070 	.word	0x20001070

080031e0 <MX_FREERTOS_Init>:
 80031e0:	b5b0      	push	{r4, r5, r7, lr}
 80031e2:	b08a      	sub	sp, #40	@ 0x28
 80031e4:	af02      	add	r7, sp, #8
 80031e6:	4b10      	ldr	r3, [pc, #64]	@ (8003228 <MX_FREERTOS_Init+0x48>)
 80031e8:	1d3c      	adds	r4, r7, #4
 80031ea:	461d      	mov	r5, r3
 80031ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80031ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80031f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80031f4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80031f8:	1d3b      	adds	r3, r7, #4
 80031fa:	2100      	movs	r1, #0
 80031fc:	4618      	mov	r0, r3
 80031fe:	f016 fc96 	bl	8019b2e <osThreadCreate>
 8003202:	4603      	mov	r3, r0
 8003204:	4a09      	ldr	r2, [pc, #36]	@ (800322c <MX_FREERTOS_Init+0x4c>)
 8003206:	6013      	str	r3, [r2, #0]
 8003208:	4b09      	ldr	r3, [pc, #36]	@ (8003230 <MX_FREERTOS_Init+0x50>)
 800320a:	9301      	str	r3, [sp, #4]
 800320c:	230c      	movs	r3, #12
 800320e:	9300      	str	r3, [sp, #0]
 8003210:	2301      	movs	r3, #1
 8003212:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8003216:	4907      	ldr	r1, [pc, #28]	@ (8003234 <MX_FREERTOS_Init+0x54>)
 8003218:	4807      	ldr	r0, [pc, #28]	@ (8003238 <MX_FREERTOS_Init+0x58>)
 800321a:	f017 fc8b 	bl	801ab34 <xTaskCreate>
 800321e:	bf00      	nop
 8003220:	3720      	adds	r7, #32
 8003222:	46bd      	mov	sp, r7
 8003224:	bdb0      	pop	{r4, r5, r7, pc}
 8003226:	bf00      	nop
 8003228:	08024630 	.word	0x08024630
 800322c:	2000096c 	.word	0x2000096c
 8003230:	20000968 	.word	0x20000968
 8003234:	08024618 	.word	0x08024618
 8003238:	0800b0d9 	.word	0x0800b0d9

0800323c <StartDefaultTask>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b082      	sub	sp, #8
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	f019 fd50 	bl	801cce8 <MX_USB_DEVICE_Init>
 8003248:	4801      	ldr	r0, [pc, #4]	@ (8003250 <StartDefaultTask+0x14>)
 800324a:	f016 fcbc 	bl	8019bc6 <osDelay>
 800324e:	e7fb      	b.n	8003248 <StartDefaultTask+0xc>
 8003250:	000186a0 	.word	0x000186a0

08003254 <MX_GPIO_Init>:
 8003254:	b580      	push	{r7, lr}
 8003256:	b08e      	sub	sp, #56	@ 0x38
 8003258:	af00      	add	r7, sp, #0
 800325a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800325e:	2200      	movs	r2, #0
 8003260:	601a      	str	r2, [r3, #0]
 8003262:	605a      	str	r2, [r3, #4]
 8003264:	609a      	str	r2, [r3, #8]
 8003266:	60da      	str	r2, [r3, #12]
 8003268:	611a      	str	r2, [r3, #16]
 800326a:	2300      	movs	r3, #0
 800326c:	623b      	str	r3, [r7, #32]
 800326e:	4b84      	ldr	r3, [pc, #528]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003270:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003272:	4a83      	ldr	r2, [pc, #524]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003274:	f043 0302 	orr.w	r3, r3, #2
 8003278:	6313      	str	r3, [r2, #48]	@ 0x30
 800327a:	4b81      	ldr	r3, [pc, #516]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800327c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800327e:	f003 0302 	and.w	r3, r3, #2
 8003282:	623b      	str	r3, [r7, #32]
 8003284:	6a3b      	ldr	r3, [r7, #32]
 8003286:	2300      	movs	r3, #0
 8003288:	61fb      	str	r3, [r7, #28]
 800328a:	4b7d      	ldr	r3, [pc, #500]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800328c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800328e:	4a7c      	ldr	r2, [pc, #496]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003290:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003294:	6313      	str	r3, [r2, #48]	@ 0x30
 8003296:	4b7a      	ldr	r3, [pc, #488]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003298:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800329a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800329e:	61fb      	str	r3, [r7, #28]
 80032a0:	69fb      	ldr	r3, [r7, #28]
 80032a2:	2300      	movs	r3, #0
 80032a4:	61bb      	str	r3, [r7, #24]
 80032a6:	4b76      	ldr	r3, [pc, #472]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032aa:	4a75      	ldr	r2, [pc, #468]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ac:	f043 0301 	orr.w	r3, r3, #1
 80032b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80032b2:	4b73      	ldr	r3, [pc, #460]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032b6:	f003 0301 	and.w	r3, r3, #1
 80032ba:	61bb      	str	r3, [r7, #24]
 80032bc:	69bb      	ldr	r3, [r7, #24]
 80032be:	2300      	movs	r3, #0
 80032c0:	617b      	str	r3, [r7, #20]
 80032c2:	4b6f      	ldr	r3, [pc, #444]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032c6:	4a6e      	ldr	r2, [pc, #440]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032c8:	f043 0308 	orr.w	r3, r3, #8
 80032cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ce:	4b6c      	ldr	r3, [pc, #432]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032d2:	f003 0308 	and.w	r3, r3, #8
 80032d6:	617b      	str	r3, [r7, #20]
 80032d8:	697b      	ldr	r3, [r7, #20]
 80032da:	2300      	movs	r3, #0
 80032dc:	613b      	str	r3, [r7, #16]
 80032de:	4b68      	ldr	r3, [pc, #416]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032e2:	4a67      	ldr	r2, [pc, #412]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032e4:	f043 0304 	orr.w	r3, r3, #4
 80032e8:	6313      	str	r3, [r2, #48]	@ 0x30
 80032ea:	4b65      	ldr	r3, [pc, #404]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032ee:	f003 0304 	and.w	r3, r3, #4
 80032f2:	613b      	str	r3, [r7, #16]
 80032f4:	693b      	ldr	r3, [r7, #16]
 80032f6:	2300      	movs	r3, #0
 80032f8:	60fb      	str	r3, [r7, #12]
 80032fa:	4b61      	ldr	r3, [pc, #388]	@ (8003480 <MX_GPIO_Init+0x22c>)
 80032fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80032fe:	4a60      	ldr	r2, [pc, #384]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003300:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003304:	6313      	str	r3, [r2, #48]	@ 0x30
 8003306:	4b5e      	ldr	r3, [pc, #376]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800330a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800330e:	60fb      	str	r3, [r7, #12]
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	2300      	movs	r3, #0
 8003314:	60bb      	str	r3, [r7, #8]
 8003316:	4b5a      	ldr	r3, [pc, #360]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003318:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800331a:	4a59      	ldr	r2, [pc, #356]	@ (8003480 <MX_GPIO_Init+0x22c>)
 800331c:	f043 0320 	orr.w	r3, r3, #32
 8003320:	6313      	str	r3, [r2, #48]	@ 0x30
 8003322:	4b57      	ldr	r3, [pc, #348]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003324:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003326:	f003 0320 	and.w	r3, r3, #32
 800332a:	60bb      	str	r3, [r7, #8]
 800332c:	68bb      	ldr	r3, [r7, #8]
 800332e:	2300      	movs	r3, #0
 8003330:	607b      	str	r3, [r7, #4]
 8003332:	4b53      	ldr	r3, [pc, #332]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003336:	4a52      	ldr	r2, [pc, #328]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003338:	f043 0310 	orr.w	r3, r3, #16
 800333c:	6313      	str	r3, [r2, #48]	@ 0x30
 800333e:	4b50      	ldr	r3, [pc, #320]	@ (8003480 <MX_GPIO_Init+0x22c>)
 8003340:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003342:	f003 0310 	and.w	r3, r3, #16
 8003346:	607b      	str	r3, [r7, #4]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2200      	movs	r2, #0
 800334c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003350:	484c      	ldr	r0, [pc, #304]	@ (8003484 <MX_GPIO_Init+0x230>)
 8003352:	f00c fc01 	bl	800fb58 <HAL_GPIO_WritePin>
 8003356:	2200      	movs	r2, #0
 8003358:	2140      	movs	r1, #64	@ 0x40
 800335a:	484b      	ldr	r0, [pc, #300]	@ (8003488 <MX_GPIO_Init+0x234>)
 800335c:	f00c fbfc 	bl	800fb58 <HAL_GPIO_WritePin>
 8003360:	2201      	movs	r2, #1
 8003362:	2110      	movs	r1, #16
 8003364:	4849      	ldr	r0, [pc, #292]	@ (800348c <MX_GPIO_Init+0x238>)
 8003366:	f00c fbf7 	bl	800fb58 <HAL_GPIO_WritePin>
 800336a:	2201      	movs	r2, #1
 800336c:	2101      	movs	r1, #1
 800336e:	4848      	ldr	r0, [pc, #288]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003370:	f00c fbf2 	bl	800fb58 <HAL_GPIO_WritePin>
 8003374:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003378:	627b      	str	r3, [r7, #36]	@ 0x24
 800337a:	2301      	movs	r3, #1
 800337c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800337e:	2300      	movs	r3, #0
 8003380:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003382:	2300      	movs	r3, #0
 8003384:	633b      	str	r3, [r7, #48]	@ 0x30
 8003386:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800338a:	4619      	mov	r1, r3
 800338c:	483d      	ldr	r0, [pc, #244]	@ (8003484 <MX_GPIO_Init+0x230>)
 800338e:	f00c fa47 	bl	800f820 <HAL_GPIO_Init>
 8003392:	2340      	movs	r3, #64	@ 0x40
 8003394:	627b      	str	r3, [r7, #36]	@ 0x24
 8003396:	2301      	movs	r3, #1
 8003398:	62bb      	str	r3, [r7, #40]	@ 0x28
 800339a:	2300      	movs	r3, #0
 800339c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800339e:	2300      	movs	r3, #0
 80033a0:	633b      	str	r3, [r7, #48]	@ 0x30
 80033a2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033a6:	4619      	mov	r1, r3
 80033a8:	4837      	ldr	r0, [pc, #220]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033aa:	f00c fa39 	bl	800f820 <HAL_GPIO_Init>
 80033ae:	2308      	movs	r3, #8
 80033b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80033b2:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033b6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033b8:	2301      	movs	r3, #1
 80033ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033bc:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033c0:	4619      	mov	r1, r3
 80033c2:	4831      	ldr	r0, [pc, #196]	@ (8003488 <MX_GPIO_Init+0x234>)
 80033c4:	f00c fa2c 	bl	800f820 <HAL_GPIO_Init>
 80033c8:	2310      	movs	r3, #16
 80033ca:	627b      	str	r3, [r7, #36]	@ 0x24
 80033cc:	2301      	movs	r3, #1
 80033ce:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033d0:	2300      	movs	r3, #0
 80033d2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033d4:	2300      	movs	r3, #0
 80033d6:	633b      	str	r3, [r7, #48]	@ 0x30
 80033d8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033dc:	4619      	mov	r1, r3
 80033de:	482b      	ldr	r0, [pc, #172]	@ (800348c <MX_GPIO_Init+0x238>)
 80033e0:	f00c fa1e 	bl	800f820 <HAL_GPIO_Init>
 80033e4:	2330      	movs	r3, #48	@ 0x30
 80033e6:	627b      	str	r3, [r7, #36]	@ 0x24
 80033e8:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 80033ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80033ee:	2301      	movs	r3, #1
 80033f0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80033f2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80033f6:	4619      	mov	r1, r3
 80033f8:	4822      	ldr	r0, [pc, #136]	@ (8003484 <MX_GPIO_Init+0x230>)
 80033fa:	f00c fa11 	bl	800f820 <HAL_GPIO_Init>
 80033fe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8003402:	627b      	str	r3, [r7, #36]	@ 0x24
 8003404:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8003408:	62bb      	str	r3, [r7, #40]	@ 0x28
 800340a:	2300      	movs	r3, #0
 800340c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800340e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8003412:	4619      	mov	r1, r3
 8003414:	481f      	ldr	r0, [pc, #124]	@ (8003494 <MX_GPIO_Init+0x240>)
 8003416:	f00c fa03 	bl	800f820 <HAL_GPIO_Init>
 800341a:	2301      	movs	r3, #1
 800341c:	627b      	str	r3, [r7, #36]	@ 0x24
 800341e:	2301      	movs	r3, #1
 8003420:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003422:	2300      	movs	r3, #0
 8003424:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003426:	2300      	movs	r3, #0
 8003428:	633b      	str	r3, [r7, #48]	@ 0x30
 800342a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800342e:	4619      	mov	r1, r3
 8003430:	4817      	ldr	r0, [pc, #92]	@ (8003490 <MX_GPIO_Init+0x23c>)
 8003432:	f00c f9f5 	bl	800f820 <HAL_GPIO_Init>
 8003436:	2200      	movs	r2, #0
 8003438:	2105      	movs	r1, #5
 800343a:	2009      	movs	r0, #9
 800343c:	f00b fdaa 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003440:	2009      	movs	r0, #9
 8003442:	f00b fdc3 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003446:	2200      	movs	r2, #0
 8003448:	2105      	movs	r1, #5
 800344a:	200a      	movs	r0, #10
 800344c:	f00b fda2 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003450:	200a      	movs	r0, #10
 8003452:	f00b fdbb 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003456:	2200      	movs	r2, #0
 8003458:	2105      	movs	r1, #5
 800345a:	2017      	movs	r0, #23
 800345c:	f00b fd9a 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003460:	2017      	movs	r0, #23
 8003462:	f00b fdb3 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003466:	2200      	movs	r2, #0
 8003468:	2105      	movs	r1, #5
 800346a:	2028      	movs	r0, #40	@ 0x28
 800346c:	f00b fd92 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003470:	2028      	movs	r0, #40	@ 0x28
 8003472:	f00b fdab 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003476:	bf00      	nop
 8003478:	3738      	adds	r7, #56	@ 0x38
 800347a:	46bd      	mov	sp, r7
 800347c:	bd80      	pop	{r7, pc}
 800347e:	bf00      	nop
 8003480:	40023800 	.word	0x40023800
 8003484:	40020800 	.word	0x40020800
 8003488:	40021800 	.word	0x40021800
 800348c:	40020000 	.word	0x40020000
 8003490:	40020400 	.word	0x40020400
 8003494:	40021000 	.word	0x40021000

08003498 <MX_I2C3_Init>:
 8003498:	b580      	push	{r7, lr}
 800349a:	af00      	add	r7, sp, #0
 800349c:	4b12      	ldr	r3, [pc, #72]	@ (80034e8 <MX_I2C3_Init+0x50>)
 800349e:	4a13      	ldr	r2, [pc, #76]	@ (80034ec <MX_I2C3_Init+0x54>)
 80034a0:	601a      	str	r2, [r3, #0]
 80034a2:	4b11      	ldr	r3, [pc, #68]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034a4:	4a12      	ldr	r2, [pc, #72]	@ (80034f0 <MX_I2C3_Init+0x58>)
 80034a6:	605a      	str	r2, [r3, #4]
 80034a8:	4b0f      	ldr	r3, [pc, #60]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034aa:	2200      	movs	r2, #0
 80034ac:	609a      	str	r2, [r3, #8]
 80034ae:	4b0e      	ldr	r3, [pc, #56]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b0:	2200      	movs	r2, #0
 80034b2:	60da      	str	r2, [r3, #12]
 80034b4:	4b0c      	ldr	r3, [pc, #48]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034b6:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80034ba:	611a      	str	r2, [r3, #16]
 80034bc:	4b0a      	ldr	r3, [pc, #40]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034be:	2200      	movs	r2, #0
 80034c0:	615a      	str	r2, [r3, #20]
 80034c2:	4b09      	ldr	r3, [pc, #36]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034c4:	2200      	movs	r2, #0
 80034c6:	619a      	str	r2, [r3, #24]
 80034c8:	4b07      	ldr	r3, [pc, #28]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034ca:	2200      	movs	r2, #0
 80034cc:	61da      	str	r2, [r3, #28]
 80034ce:	4b06      	ldr	r3, [pc, #24]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d0:	2200      	movs	r2, #0
 80034d2:	621a      	str	r2, [r3, #32]
 80034d4:	4804      	ldr	r0, [pc, #16]	@ (80034e8 <MX_I2C3_Init+0x50>)
 80034d6:	f00c fb71 	bl	800fbbc <HAL_I2C_Init>
 80034da:	4603      	mov	r3, r0
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d001      	beq.n	80034e4 <MX_I2C3_Init+0x4c>
 80034e0:	f000 f98a 	bl	80037f8 <Error_Handler>
 80034e4:	bf00      	nop
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	20001870 	.word	0x20001870
 80034ec:	40005c00 	.word	0x40005c00
 80034f0:	00061a80 	.word	0x00061a80

080034f4 <HAL_I2C_MspInit>:
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b08a      	sub	sp, #40	@ 0x28
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	6078      	str	r0, [r7, #4]
 80034fc:	f107 0314 	add.w	r3, r7, #20
 8003500:	2200      	movs	r2, #0
 8003502:	601a      	str	r2, [r3, #0]
 8003504:	605a      	str	r2, [r3, #4]
 8003506:	609a      	str	r2, [r3, #8]
 8003508:	60da      	str	r2, [r3, #12]
 800350a:	611a      	str	r2, [r3, #16]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	4a5b      	ldr	r2, [pc, #364]	@ (8003680 <HAL_I2C_MspInit+0x18c>)
 8003512:	4293      	cmp	r3, r2
 8003514:	f040 80b0 	bne.w	8003678 <HAL_I2C_MspInit+0x184>
 8003518:	2300      	movs	r3, #0
 800351a:	613b      	str	r3, [r7, #16]
 800351c:	4b59      	ldr	r3, [pc, #356]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800351e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003520:	4a58      	ldr	r2, [pc, #352]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003522:	f043 0304 	orr.w	r3, r3, #4
 8003526:	6313      	str	r3, [r2, #48]	@ 0x30
 8003528:	4b56      	ldr	r3, [pc, #344]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800352a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800352c:	f003 0304 	and.w	r3, r3, #4
 8003530:	613b      	str	r3, [r7, #16]
 8003532:	693b      	ldr	r3, [r7, #16]
 8003534:	2300      	movs	r3, #0
 8003536:	60fb      	str	r3, [r7, #12]
 8003538:	4b52      	ldr	r3, [pc, #328]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800353c:	4a51      	ldr	r2, [pc, #324]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800353e:	f043 0301 	orr.w	r3, r3, #1
 8003542:	6313      	str	r3, [r2, #48]	@ 0x30
 8003544:	4b4f      	ldr	r3, [pc, #316]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 8003546:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003548:	f003 0301 	and.w	r3, r3, #1
 800354c:	60fb      	str	r3, [r7, #12]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003554:	617b      	str	r3, [r7, #20]
 8003556:	2312      	movs	r3, #18
 8003558:	61bb      	str	r3, [r7, #24]
 800355a:	2301      	movs	r3, #1
 800355c:	61fb      	str	r3, [r7, #28]
 800355e:	2303      	movs	r3, #3
 8003560:	623b      	str	r3, [r7, #32]
 8003562:	2304      	movs	r3, #4
 8003564:	627b      	str	r3, [r7, #36]	@ 0x24
 8003566:	f107 0314 	add.w	r3, r7, #20
 800356a:	4619      	mov	r1, r3
 800356c:	4846      	ldr	r0, [pc, #280]	@ (8003688 <HAL_I2C_MspInit+0x194>)
 800356e:	f00c f957 	bl	800f820 <HAL_GPIO_Init>
 8003572:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003576:	617b      	str	r3, [r7, #20]
 8003578:	2312      	movs	r3, #18
 800357a:	61bb      	str	r3, [r7, #24]
 800357c:	2301      	movs	r3, #1
 800357e:	61fb      	str	r3, [r7, #28]
 8003580:	2303      	movs	r3, #3
 8003582:	623b      	str	r3, [r7, #32]
 8003584:	2304      	movs	r3, #4
 8003586:	627b      	str	r3, [r7, #36]	@ 0x24
 8003588:	f107 0314 	add.w	r3, r7, #20
 800358c:	4619      	mov	r1, r3
 800358e:	483f      	ldr	r0, [pc, #252]	@ (800368c <HAL_I2C_MspInit+0x198>)
 8003590:	f00c f946 	bl	800f820 <HAL_GPIO_Init>
 8003594:	2300      	movs	r3, #0
 8003596:	60bb      	str	r3, [r7, #8]
 8003598:	4b3a      	ldr	r3, [pc, #232]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800359c:	4a39      	ldr	r2, [pc, #228]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 800359e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80035a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80035a4:	4b37      	ldr	r3, [pc, #220]	@ (8003684 <HAL_I2C_MspInit+0x190>)
 80035a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80035a8:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80035ac:	60bb      	str	r3, [r7, #8]
 80035ae:	68bb      	ldr	r3, [r7, #8]
 80035b0:	4b37      	ldr	r3, [pc, #220]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b2:	4a38      	ldr	r2, [pc, #224]	@ (8003694 <HAL_I2C_MspInit+0x1a0>)
 80035b4:	601a      	str	r2, [r3, #0]
 80035b6:	4b36      	ldr	r3, [pc, #216]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035b8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80035bc:	605a      	str	r2, [r3, #4]
 80035be:	4b34      	ldr	r3, [pc, #208]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c0:	2200      	movs	r2, #0
 80035c2:	609a      	str	r2, [r3, #8]
 80035c4:	4b32      	ldr	r3, [pc, #200]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035c6:	2200      	movs	r2, #0
 80035c8:	60da      	str	r2, [r3, #12]
 80035ca:	4b31      	ldr	r3, [pc, #196]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035cc:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80035d0:	611a      	str	r2, [r3, #16]
 80035d2:	4b2f      	ldr	r3, [pc, #188]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035d4:	2200      	movs	r2, #0
 80035d6:	615a      	str	r2, [r3, #20]
 80035d8:	4b2d      	ldr	r3, [pc, #180]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035da:	2200      	movs	r2, #0
 80035dc:	619a      	str	r2, [r3, #24]
 80035de:	4b2c      	ldr	r3, [pc, #176]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e0:	2200      	movs	r2, #0
 80035e2:	61da      	str	r2, [r3, #28]
 80035e4:	4b2a      	ldr	r3, [pc, #168]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035e6:	2200      	movs	r2, #0
 80035e8:	621a      	str	r2, [r3, #32]
 80035ea:	4b29      	ldr	r3, [pc, #164]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035ec:	2200      	movs	r2, #0
 80035ee:	625a      	str	r2, [r3, #36]	@ 0x24
 80035f0:	4827      	ldr	r0, [pc, #156]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 80035f2:	f00b fd07 	bl	800f004 <HAL_DMA_Init>
 80035f6:	4603      	mov	r3, r0
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d001      	beq.n	8003600 <HAL_I2C_MspInit+0x10c>
 80035fc:	f000 f8fc 	bl	80037f8 <Error_Handler>
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	4a23      	ldr	r2, [pc, #140]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003604:	639a      	str	r2, [r3, #56]	@ 0x38
 8003606:	4a22      	ldr	r2, [pc, #136]	@ (8003690 <HAL_I2C_MspInit+0x19c>)
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	6393      	str	r3, [r2, #56]	@ 0x38
 800360c:	4b22      	ldr	r3, [pc, #136]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800360e:	4a23      	ldr	r2, [pc, #140]	@ (800369c <HAL_I2C_MspInit+0x1a8>)
 8003610:	601a      	str	r2, [r3, #0]
 8003612:	4b21      	ldr	r3, [pc, #132]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003614:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 8003618:	605a      	str	r2, [r3, #4]
 800361a:	4b1f      	ldr	r3, [pc, #124]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800361c:	2240      	movs	r2, #64	@ 0x40
 800361e:	609a      	str	r2, [r3, #8]
 8003620:	4b1d      	ldr	r3, [pc, #116]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003622:	2200      	movs	r2, #0
 8003624:	60da      	str	r2, [r3, #12]
 8003626:	4b1c      	ldr	r3, [pc, #112]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003628:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800362c:	611a      	str	r2, [r3, #16]
 800362e:	4b1a      	ldr	r3, [pc, #104]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003630:	2200      	movs	r2, #0
 8003632:	615a      	str	r2, [r3, #20]
 8003634:	4b18      	ldr	r3, [pc, #96]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003636:	2200      	movs	r2, #0
 8003638:	619a      	str	r2, [r3, #24]
 800363a:	4b17      	ldr	r3, [pc, #92]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800363c:	2200      	movs	r2, #0
 800363e:	61da      	str	r2, [r3, #28]
 8003640:	4b15      	ldr	r3, [pc, #84]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003642:	2200      	movs	r2, #0
 8003644:	621a      	str	r2, [r3, #32]
 8003646:	4b14      	ldr	r3, [pc, #80]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003648:	2200      	movs	r2, #0
 800364a:	625a      	str	r2, [r3, #36]	@ 0x24
 800364c:	4812      	ldr	r0, [pc, #72]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 800364e:	f00b fcd9 	bl	800f004 <HAL_DMA_Init>
 8003652:	4603      	mov	r3, r0
 8003654:	2b00      	cmp	r3, #0
 8003656:	d001      	beq.n	800365c <HAL_I2C_MspInit+0x168>
 8003658:	f000 f8ce 	bl	80037f8 <Error_Handler>
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	4a0e      	ldr	r2, [pc, #56]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003660:	635a      	str	r2, [r3, #52]	@ 0x34
 8003662:	4a0d      	ldr	r2, [pc, #52]	@ (8003698 <HAL_I2C_MspInit+0x1a4>)
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	6393      	str	r3, [r2, #56]	@ 0x38
 8003668:	2200      	movs	r2, #0
 800366a:	2105      	movs	r1, #5
 800366c:	2049      	movs	r0, #73	@ 0x49
 800366e:	f00b fc91 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003672:	2049      	movs	r0, #73	@ 0x49
 8003674:	f00b fcaa 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003678:	bf00      	nop
 800367a:	3728      	adds	r7, #40	@ 0x28
 800367c:	46bd      	mov	sp, r7
 800367e:	bd80      	pop	{r7, pc}
 8003680:	40005c00 	.word	0x40005c00
 8003684:	40023800 	.word	0x40023800
 8003688:	40020800 	.word	0x40020800
 800368c:	40020000 	.word	0x40020000
 8003690:	200018c4 	.word	0x200018c4
 8003694:	40026040 	.word	0x40026040
 8003698:	20001924 	.word	0x20001924
 800369c:	40026070 	.word	0x40026070

080036a0 <main>:
 80036a0:	b580      	push	{r7, lr}
 80036a2:	af00      	add	r7, sp, #0
 80036a4:	f00a fa52 	bl	800db4c <HAL_Init>
 80036a8:	f000 f82a 	bl	8003700 <SystemClock_Config>
 80036ac:	f7ff fdd2 	bl	8003254 <MX_GPIO_Init>
 80036b0:	f7ff fce2 	bl	8003078 <MX_DMA_Init>
 80036b4:	f7ff fbb4 	bl	8002e20 <MX_CAN1_Init>
 80036b8:	f7ff fbe8 	bl	8002e8c <MX_CAN2_Init>
 80036bc:	f000 fdb8 	bl	8004230 <MX_TIM5_Init>
 80036c0:	f000 fe26 	bl	8004310 <MX_TIM10_Init>
 80036c4:	f000 ff74 	bl	80045b0 <MX_USART1_UART_Init>
 80036c8:	f000 ff9c 	bl	8004604 <MX_USART3_UART_Init>
 80036cc:	f000 ffc6 	bl	800465c <MX_USART6_UART_Init>
 80036d0:	f000 f8ce 	bl	8003870 <MX_SPI1_Init>
 80036d4:	f7ff fee0 	bl	8003498 <MX_I2C3_Init>
 80036d8:	f7ff fb0c 	bl	8002cf4 <MX_ADC3_Init>
 80036dc:	f000 fcdc 	bl	8004098 <MX_TIM3_Init>
 80036e0:	f000 fd4c 	bl	800417c <MX_TIM4_Init>
 80036e4:	f000 f88e 	bl	8003804 <MX_RNG_Init>
 80036e8:	f000 fca4 	bl	8004034 <MX_TIM2_Init>
 80036ec:	f00a f9af 	bl	800da4e <startup_task>
 80036f0:	f019 fafa 	bl	801cce8 <MX_USB_DEVICE_Init>
 80036f4:	f7ff fd74 	bl	80031e0 <MX_FREERTOS_Init>
 80036f8:	f016 fa12 	bl	8019b20 <osKernelStart>
 80036fc:	bf00      	nop
 80036fe:	e7fd      	b.n	80036fc <main+0x5c>

08003700 <SystemClock_Config>:
 8003700:	b580      	push	{r7, lr}
 8003702:	b094      	sub	sp, #80	@ 0x50
 8003704:	af00      	add	r7, sp, #0
 8003706:	f107 0320 	add.w	r3, r7, #32
 800370a:	2230      	movs	r2, #48	@ 0x30
 800370c:	2100      	movs	r1, #0
 800370e:	4618      	mov	r0, r3
 8003710:	f01a f95f 	bl	801d9d2 <memset>
 8003714:	f107 030c 	add.w	r3, r7, #12
 8003718:	2200      	movs	r2, #0
 800371a:	601a      	str	r2, [r3, #0]
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	609a      	str	r2, [r3, #8]
 8003720:	60da      	str	r2, [r3, #12]
 8003722:	611a      	str	r2, [r3, #16]
 8003724:	2300      	movs	r3, #0
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	4b28      	ldr	r3, [pc, #160]	@ (80037cc <SystemClock_Config+0xcc>)
 800372a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800372c:	4a27      	ldr	r2, [pc, #156]	@ (80037cc <SystemClock_Config+0xcc>)
 800372e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003732:	6413      	str	r3, [r2, #64]	@ 0x40
 8003734:	4b25      	ldr	r3, [pc, #148]	@ (80037cc <SystemClock_Config+0xcc>)
 8003736:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003738:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800373c:	60bb      	str	r3, [r7, #8]
 800373e:	68bb      	ldr	r3, [r7, #8]
 8003740:	2300      	movs	r3, #0
 8003742:	607b      	str	r3, [r7, #4]
 8003744:	4b22      	ldr	r3, [pc, #136]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003746:	681b      	ldr	r3, [r3, #0]
 8003748:	4a21      	ldr	r2, [pc, #132]	@ (80037d0 <SystemClock_Config+0xd0>)
 800374a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800374e:	6013      	str	r3, [r2, #0]
 8003750:	4b1f      	ldr	r3, [pc, #124]	@ (80037d0 <SystemClock_Config+0xd0>)
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003758:	607b      	str	r3, [r7, #4]
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	2301      	movs	r3, #1
 800375e:	623b      	str	r3, [r7, #32]
 8003760:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8003764:	627b      	str	r3, [r7, #36]	@ 0x24
 8003766:	2302      	movs	r3, #2
 8003768:	63bb      	str	r3, [r7, #56]	@ 0x38
 800376a:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 800376e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003770:	2306      	movs	r3, #6
 8003772:	643b      	str	r3, [r7, #64]	@ 0x40
 8003774:	23a8      	movs	r3, #168	@ 0xa8
 8003776:	647b      	str	r3, [r7, #68]	@ 0x44
 8003778:	2302      	movs	r3, #2
 800377a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800377c:	2307      	movs	r3, #7
 800377e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003780:	f107 0320 	add.w	r3, r7, #32
 8003784:	4618      	mov	r0, r3
 8003786:	f00f fa21 	bl	8012bcc <HAL_RCC_OscConfig>
 800378a:	4603      	mov	r3, r0
 800378c:	2b00      	cmp	r3, #0
 800378e:	d001      	beq.n	8003794 <SystemClock_Config+0x94>
 8003790:	f000 f832 	bl	80037f8 <Error_Handler>
 8003794:	230f      	movs	r3, #15
 8003796:	60fb      	str	r3, [r7, #12]
 8003798:	2302      	movs	r3, #2
 800379a:	613b      	str	r3, [r7, #16]
 800379c:	2300      	movs	r3, #0
 800379e:	617b      	str	r3, [r7, #20]
 80037a0:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80037a4:	61bb      	str	r3, [r7, #24]
 80037a6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80037aa:	61fb      	str	r3, [r7, #28]
 80037ac:	f107 030c 	add.w	r3, r7, #12
 80037b0:	2105      	movs	r1, #5
 80037b2:	4618      	mov	r0, r3
 80037b4:	f00f fc82 	bl	80130bc <HAL_RCC_ClockConfig>
 80037b8:	4603      	mov	r3, r0
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d001      	beq.n	80037c2 <SystemClock_Config+0xc2>
 80037be:	f000 f81b 	bl	80037f8 <Error_Handler>
 80037c2:	bf00      	nop
 80037c4:	3750      	adds	r7, #80	@ 0x50
 80037c6:	46bd      	mov	sp, r7
 80037c8:	bd80      	pop	{r7, pc}
 80037ca:	bf00      	nop
 80037cc:	40023800 	.word	0x40023800
 80037d0:	40007000 	.word	0x40007000

080037d4 <HAL_TIM_PeriodElapsedCallback>:
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b082      	sub	sp, #8
 80037d8:	af00      	add	r7, sp, #0
 80037da:	6078      	str	r0, [r7, #4]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	4a04      	ldr	r2, [pc, #16]	@ (80037f4 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80037e2:	4293      	cmp	r3, r2
 80037e4:	d101      	bne.n	80037ea <HAL_TIM_PeriodElapsedCallback+0x16>
 80037e6:	f00a f9d3 	bl	800db90 <HAL_IncTick>
 80037ea:	bf00      	nop
 80037ec:	3708      	adds	r7, #8
 80037ee:	46bd      	mov	sp, r7
 80037f0:	bd80      	pop	{r7, pc}
 80037f2:	bf00      	nop
 80037f4:	40001000 	.word	0x40001000

080037f8 <Error_Handler>:
 80037f8:	b480      	push	{r7}
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	b672      	cpsid	i
 80037fe:	bf00      	nop
 8003800:	bf00      	nop
 8003802:	e7fd      	b.n	8003800 <Error_Handler+0x8>

08003804 <MX_RNG_Init>:
 8003804:	b580      	push	{r7, lr}
 8003806:	af00      	add	r7, sp, #0
 8003808:	4b06      	ldr	r3, [pc, #24]	@ (8003824 <MX_RNG_Init+0x20>)
 800380a:	4a07      	ldr	r2, [pc, #28]	@ (8003828 <MX_RNG_Init+0x24>)
 800380c:	601a      	str	r2, [r3, #0]
 800380e:	4805      	ldr	r0, [pc, #20]	@ (8003824 <MX_RNG_Init+0x20>)
 8003810:	f00f fe66 	bl	80134e0 <HAL_RNG_Init>
 8003814:	4603      	mov	r3, r0
 8003816:	2b00      	cmp	r3, #0
 8003818:	d001      	beq.n	800381e <MX_RNG_Init+0x1a>
 800381a:	f7ff ffed 	bl	80037f8 <Error_Handler>
 800381e:	bf00      	nop
 8003820:	bd80      	pop	{r7, pc}
 8003822:	bf00      	nop
 8003824:	20001984 	.word	0x20001984
 8003828:	50060800 	.word	0x50060800

0800382c <HAL_RNG_MspInit>:
 800382c:	b480      	push	{r7}
 800382e:	b085      	sub	sp, #20
 8003830:	af00      	add	r7, sp, #0
 8003832:	6078      	str	r0, [r7, #4]
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	4a0b      	ldr	r2, [pc, #44]	@ (8003868 <HAL_RNG_MspInit+0x3c>)
 800383a:	4293      	cmp	r3, r2
 800383c:	d10d      	bne.n	800385a <HAL_RNG_MspInit+0x2e>
 800383e:	2300      	movs	r3, #0
 8003840:	60fb      	str	r3, [r7, #12]
 8003842:	4b0a      	ldr	r3, [pc, #40]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003844:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003846:	4a09      	ldr	r2, [pc, #36]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003848:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800384c:	6353      	str	r3, [r2, #52]	@ 0x34
 800384e:	4b07      	ldr	r3, [pc, #28]	@ (800386c <HAL_RNG_MspInit+0x40>)
 8003850:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8003852:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	bf00      	nop
 800385c:	3714      	adds	r7, #20
 800385e:	46bd      	mov	sp, r7
 8003860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003864:	4770      	bx	lr
 8003866:	bf00      	nop
 8003868:	50060800 	.word	0x50060800
 800386c:	40023800 	.word	0x40023800

08003870 <MX_SPI1_Init>:
 8003870:	b580      	push	{r7, lr}
 8003872:	af00      	add	r7, sp, #0
 8003874:	4b17      	ldr	r3, [pc, #92]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003876:	4a18      	ldr	r2, [pc, #96]	@ (80038d8 <MX_SPI1_Init+0x68>)
 8003878:	601a      	str	r2, [r3, #0]
 800387a:	4b16      	ldr	r3, [pc, #88]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800387c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003880:	605a      	str	r2, [r3, #4]
 8003882:	4b14      	ldr	r3, [pc, #80]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003884:	2200      	movs	r2, #0
 8003886:	609a      	str	r2, [r3, #8]
 8003888:	4b12      	ldr	r3, [pc, #72]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800388a:	2200      	movs	r2, #0
 800388c:	60da      	str	r2, [r3, #12]
 800388e:	4b11      	ldr	r3, [pc, #68]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003890:	2200      	movs	r2, #0
 8003892:	611a      	str	r2, [r3, #16]
 8003894:	4b0f      	ldr	r3, [pc, #60]	@ (80038d4 <MX_SPI1_Init+0x64>)
 8003896:	2200      	movs	r2, #0
 8003898:	615a      	str	r2, [r3, #20]
 800389a:	4b0e      	ldr	r3, [pc, #56]	@ (80038d4 <MX_SPI1_Init+0x64>)
 800389c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80038a0:	619a      	str	r2, [r3, #24]
 80038a2:	4b0c      	ldr	r3, [pc, #48]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038a4:	2228      	movs	r2, #40	@ 0x28
 80038a6:	61da      	str	r2, [r3, #28]
 80038a8:	4b0a      	ldr	r3, [pc, #40]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038aa:	2200      	movs	r2, #0
 80038ac:	621a      	str	r2, [r3, #32]
 80038ae:	4b09      	ldr	r3, [pc, #36]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b0:	2200      	movs	r2, #0
 80038b2:	625a      	str	r2, [r3, #36]	@ 0x24
 80038b4:	4b07      	ldr	r3, [pc, #28]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038b6:	2200      	movs	r2, #0
 80038b8:	629a      	str	r2, [r3, #40]	@ 0x28
 80038ba:	4b06      	ldr	r3, [pc, #24]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038bc:	220a      	movs	r2, #10
 80038be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80038c0:	4804      	ldr	r0, [pc, #16]	@ (80038d4 <MX_SPI1_Init+0x64>)
 80038c2:	f00f fe37 	bl	8013534 <HAL_SPI_Init>
 80038c6:	4603      	mov	r3, r0
 80038c8:	2b00      	cmp	r3, #0
 80038ca:	d001      	beq.n	80038d0 <MX_SPI1_Init+0x60>
 80038cc:	f7ff ff94 	bl	80037f8 <Error_Handler>
 80038d0:	bf00      	nop
 80038d2:	bd80      	pop	{r7, pc}
 80038d4:	20001994 	.word	0x20001994
 80038d8:	40013000 	.word	0x40013000

080038dc <HAL_SPI_MspInit>:
 80038dc:	b580      	push	{r7, lr}
 80038de:	b08a      	sub	sp, #40	@ 0x28
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
 80038e4:	f107 0314 	add.w	r3, r7, #20
 80038e8:	2200      	movs	r2, #0
 80038ea:	601a      	str	r2, [r3, #0]
 80038ec:	605a      	str	r2, [r3, #4]
 80038ee:	609a      	str	r2, [r3, #8]
 80038f0:	60da      	str	r2, [r3, #12]
 80038f2:	611a      	str	r2, [r3, #16]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4a56      	ldr	r2, [pc, #344]	@ (8003a54 <HAL_SPI_MspInit+0x178>)
 80038fa:	4293      	cmp	r3, r2
 80038fc:	f040 80a6 	bne.w	8003a4c <HAL_SPI_MspInit+0x170>
 8003900:	2300      	movs	r3, #0
 8003902:	613b      	str	r3, [r7, #16]
 8003904:	4b54      	ldr	r3, [pc, #336]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003906:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003908:	4a53      	ldr	r2, [pc, #332]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800390a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800390e:	6453      	str	r3, [r2, #68]	@ 0x44
 8003910:	4b51      	ldr	r3, [pc, #324]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003912:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003914:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003918:	613b      	str	r3, [r7, #16]
 800391a:	693b      	ldr	r3, [r7, #16]
 800391c:	2300      	movs	r3, #0
 800391e:	60fb      	str	r3, [r7, #12]
 8003920:	4b4d      	ldr	r3, [pc, #308]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003924:	4a4c      	ldr	r2, [pc, #304]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003926:	f043 0302 	orr.w	r3, r3, #2
 800392a:	6313      	str	r3, [r2, #48]	@ 0x30
 800392c:	4b4a      	ldr	r3, [pc, #296]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800392e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003930:	f003 0302 	and.w	r3, r3, #2
 8003934:	60fb      	str	r3, [r7, #12]
 8003936:	68fb      	ldr	r3, [r7, #12]
 8003938:	2300      	movs	r3, #0
 800393a:	60bb      	str	r3, [r7, #8]
 800393c:	4b46      	ldr	r3, [pc, #280]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800393e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003940:	4a45      	ldr	r2, [pc, #276]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 8003942:	f043 0301 	orr.w	r3, r3, #1
 8003946:	6313      	str	r3, [r2, #48]	@ 0x30
 8003948:	4b43      	ldr	r3, [pc, #268]	@ (8003a58 <HAL_SPI_MspInit+0x17c>)
 800394a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800394c:	f003 0301 	and.w	r3, r3, #1
 8003950:	60bb      	str	r3, [r7, #8]
 8003952:	68bb      	ldr	r3, [r7, #8]
 8003954:	2318      	movs	r3, #24
 8003956:	617b      	str	r3, [r7, #20]
 8003958:	2302      	movs	r3, #2
 800395a:	61bb      	str	r3, [r7, #24]
 800395c:	2300      	movs	r3, #0
 800395e:	61fb      	str	r3, [r7, #28]
 8003960:	2303      	movs	r3, #3
 8003962:	623b      	str	r3, [r7, #32]
 8003964:	2305      	movs	r3, #5
 8003966:	627b      	str	r3, [r7, #36]	@ 0x24
 8003968:	f107 0314 	add.w	r3, r7, #20
 800396c:	4619      	mov	r1, r3
 800396e:	483b      	ldr	r0, [pc, #236]	@ (8003a5c <HAL_SPI_MspInit+0x180>)
 8003970:	f00b ff56 	bl	800f820 <HAL_GPIO_Init>
 8003974:	2380      	movs	r3, #128	@ 0x80
 8003976:	617b      	str	r3, [r7, #20]
 8003978:	2302      	movs	r3, #2
 800397a:	61bb      	str	r3, [r7, #24]
 800397c:	2300      	movs	r3, #0
 800397e:	61fb      	str	r3, [r7, #28]
 8003980:	2303      	movs	r3, #3
 8003982:	623b      	str	r3, [r7, #32]
 8003984:	2305      	movs	r3, #5
 8003986:	627b      	str	r3, [r7, #36]	@ 0x24
 8003988:	f107 0314 	add.w	r3, r7, #20
 800398c:	4619      	mov	r1, r3
 800398e:	4834      	ldr	r0, [pc, #208]	@ (8003a60 <HAL_SPI_MspInit+0x184>)
 8003990:	f00b ff46 	bl	800f820 <HAL_GPIO_Init>
 8003994:	4b33      	ldr	r3, [pc, #204]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 8003996:	4a34      	ldr	r2, [pc, #208]	@ (8003a68 <HAL_SPI_MspInit+0x18c>)
 8003998:	601a      	str	r2, [r3, #0]
 800399a:	4b32      	ldr	r3, [pc, #200]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 800399c:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039a0:	605a      	str	r2, [r3, #4]
 80039a2:	4b30      	ldr	r3, [pc, #192]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039a4:	2200      	movs	r2, #0
 80039a6:	609a      	str	r2, [r3, #8]
 80039a8:	4b2e      	ldr	r3, [pc, #184]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039aa:	2200      	movs	r2, #0
 80039ac:	60da      	str	r2, [r3, #12]
 80039ae:	4b2d      	ldr	r3, [pc, #180]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b0:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80039b4:	611a      	str	r2, [r3, #16]
 80039b6:	4b2b      	ldr	r3, [pc, #172]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039b8:	2200      	movs	r2, #0
 80039ba:	615a      	str	r2, [r3, #20]
 80039bc:	4b29      	ldr	r3, [pc, #164]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039be:	2200      	movs	r2, #0
 80039c0:	619a      	str	r2, [r3, #24]
 80039c2:	4b28      	ldr	r3, [pc, #160]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039c4:	2200      	movs	r2, #0
 80039c6:	61da      	str	r2, [r3, #28]
 80039c8:	4b26      	ldr	r3, [pc, #152]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ca:	2200      	movs	r2, #0
 80039cc:	621a      	str	r2, [r3, #32]
 80039ce:	4b25      	ldr	r3, [pc, #148]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d0:	2200      	movs	r2, #0
 80039d2:	625a      	str	r2, [r3, #36]	@ 0x24
 80039d4:	4823      	ldr	r0, [pc, #140]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039d6:	f00b fb15 	bl	800f004 <HAL_DMA_Init>
 80039da:	4603      	mov	r3, r0
 80039dc:	2b00      	cmp	r3, #0
 80039de:	d001      	beq.n	80039e4 <HAL_SPI_MspInit+0x108>
 80039e0:	f7ff ff0a 	bl	80037f8 <Error_Handler>
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	4a1f      	ldr	r2, [pc, #124]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039e8:	64da      	str	r2, [r3, #76]	@ 0x4c
 80039ea:	4a1e      	ldr	r2, [pc, #120]	@ (8003a64 <HAL_SPI_MspInit+0x188>)
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6393      	str	r3, [r2, #56]	@ 0x38
 80039f0:	4b1e      	ldr	r3, [pc, #120]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f2:	4a1f      	ldr	r2, [pc, #124]	@ (8003a70 <HAL_SPI_MspInit+0x194>)
 80039f4:	601a      	str	r2, [r3, #0]
 80039f6:	4b1d      	ldr	r3, [pc, #116]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 80039f8:	f04f 62c0 	mov.w	r2, #100663296	@ 0x6000000
 80039fc:	605a      	str	r2, [r3, #4]
 80039fe:	4b1b      	ldr	r3, [pc, #108]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a00:	2240      	movs	r2, #64	@ 0x40
 8003a02:	609a      	str	r2, [r3, #8]
 8003a04:	4b19      	ldr	r3, [pc, #100]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a06:	2200      	movs	r2, #0
 8003a08:	60da      	str	r2, [r3, #12]
 8003a0a:	4b18      	ldr	r3, [pc, #96]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a0c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8003a10:	611a      	str	r2, [r3, #16]
 8003a12:	4b16      	ldr	r3, [pc, #88]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a14:	2200      	movs	r2, #0
 8003a16:	615a      	str	r2, [r3, #20]
 8003a18:	4b14      	ldr	r3, [pc, #80]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a1a:	2200      	movs	r2, #0
 8003a1c:	619a      	str	r2, [r3, #24]
 8003a1e:	4b13      	ldr	r3, [pc, #76]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a20:	2200      	movs	r2, #0
 8003a22:	61da      	str	r2, [r3, #28]
 8003a24:	4b11      	ldr	r3, [pc, #68]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a26:	2200      	movs	r2, #0
 8003a28:	621a      	str	r2, [r3, #32]
 8003a2a:	4b10      	ldr	r3, [pc, #64]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003a30:	480e      	ldr	r0, [pc, #56]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a32:	f00b fae7 	bl	800f004 <HAL_DMA_Init>
 8003a36:	4603      	mov	r3, r0
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	d001      	beq.n	8003a40 <HAL_SPI_MspInit+0x164>
 8003a3c:	f7ff fedc 	bl	80037f8 <Error_Handler>
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	4a0a      	ldr	r2, [pc, #40]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a44:	649a      	str	r2, [r3, #72]	@ 0x48
 8003a46:	4a09      	ldr	r2, [pc, #36]	@ (8003a6c <HAL_SPI_MspInit+0x190>)
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6393      	str	r3, [r2, #56]	@ 0x38
 8003a4c:	bf00      	nop
 8003a4e:	3728      	adds	r7, #40	@ 0x28
 8003a50:	46bd      	mov	sp, r7
 8003a52:	bd80      	pop	{r7, pc}
 8003a54:	40013000 	.word	0x40013000
 8003a58:	40023800 	.word	0x40023800
 8003a5c:	40020400 	.word	0x40020400
 8003a60:	40020000 	.word	0x40020000
 8003a64:	200019ec 	.word	0x200019ec
 8003a68:	40026410 	.word	0x40026410
 8003a6c:	20001a4c 	.word	0x20001a4c
 8003a70:	40026458 	.word	0x40026458

08003a74 <HAL_MspInit>:
 8003a74:	b580      	push	{r7, lr}
 8003a76:	b082      	sub	sp, #8
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	607b      	str	r3, [r7, #4]
 8003a7e:	4b12      	ldr	r3, [pc, #72]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a82:	4a11      	ldr	r2, [pc, #68]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a84:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003a88:	6453      	str	r3, [r2, #68]	@ 0x44
 8003a8a:	4b0f      	ldr	r3, [pc, #60]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a8e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003a92:	607b      	str	r3, [r7, #4]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2300      	movs	r3, #0
 8003a98:	603b      	str	r3, [r7, #0]
 8003a9a:	4b0b      	ldr	r3, [pc, #44]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a9e:	4a0a      	ldr	r2, [pc, #40]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8003aa4:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aa6:	4b08      	ldr	r3, [pc, #32]	@ (8003ac8 <HAL_MspInit+0x54>)
 8003aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003aaa:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8003aae:	603b      	str	r3, [r7, #0]
 8003ab0:	683b      	ldr	r3, [r7, #0]
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	210f      	movs	r1, #15
 8003ab6:	f06f 0001 	mvn.w	r0, #1
 8003aba:	f00b fa6b 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003abe:	bf00      	nop
 8003ac0:	3708      	adds	r7, #8
 8003ac2:	46bd      	mov	sp, r7
 8003ac4:	bd80      	pop	{r7, pc}
 8003ac6:	bf00      	nop
 8003ac8:	40023800 	.word	0x40023800

08003acc <HAL_InitTick>:
 8003acc:	b580      	push	{r7, lr}
 8003ace:	b08e      	sub	sp, #56	@ 0x38
 8003ad0:	af00      	add	r7, sp, #0
 8003ad2:	6078      	str	r0, [r7, #4]
 8003ad4:	2300      	movs	r3, #0
 8003ad6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003ad8:	2300      	movs	r3, #0
 8003ada:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003adc:	2300      	movs	r3, #0
 8003ade:	60fb      	str	r3, [r7, #12]
 8003ae0:	4b33      	ldr	r3, [pc, #204]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003ae4:	4a32      	ldr	r2, [pc, #200]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003ae6:	f043 0310 	orr.w	r3, r3, #16
 8003aea:	6413      	str	r3, [r2, #64]	@ 0x40
 8003aec:	4b30      	ldr	r3, [pc, #192]	@ (8003bb0 <HAL_InitTick+0xe4>)
 8003aee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003af0:	f003 0310 	and.w	r3, r3, #16
 8003af4:	60fb      	str	r3, [r7, #12]
 8003af6:	68fb      	ldr	r3, [r7, #12]
 8003af8:	f107 0210 	add.w	r2, r7, #16
 8003afc:	f107 0314 	add.w	r3, r7, #20
 8003b00:	4611      	mov	r1, r2
 8003b02:	4618      	mov	r0, r3
 8003b04:	f00f fcba 	bl	801347c <HAL_RCC_GetClockConfig>
 8003b08:	6a3b      	ldr	r3, [r7, #32]
 8003b0a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003b0c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d103      	bne.n	8003b1a <HAL_InitTick+0x4e>
 8003b12:	f00f fc8b 	bl	801342c <HAL_RCC_GetPCLK1Freq>
 8003b16:	6378      	str	r0, [r7, #52]	@ 0x34
 8003b18:	e004      	b.n	8003b24 <HAL_InitTick+0x58>
 8003b1a:	f00f fc87 	bl	801342c <HAL_RCC_GetPCLK1Freq>
 8003b1e:	4603      	mov	r3, r0
 8003b20:	005b      	lsls	r3, r3, #1
 8003b22:	637b      	str	r3, [r7, #52]	@ 0x34
 8003b24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003b26:	4a23      	ldr	r2, [pc, #140]	@ (8003bb4 <HAL_InitTick+0xe8>)
 8003b28:	fba2 2303 	umull	r2, r3, r2, r3
 8003b2c:	0c9b      	lsrs	r3, r3, #18
 8003b2e:	3b01      	subs	r3, #1
 8003b30:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b32:	4b21      	ldr	r3, [pc, #132]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b34:	4a21      	ldr	r2, [pc, #132]	@ (8003bbc <HAL_InitTick+0xf0>)
 8003b36:	601a      	str	r2, [r3, #0]
 8003b38:	4b1f      	ldr	r3, [pc, #124]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b3a:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8003b3e:	60da      	str	r2, [r3, #12]
 8003b40:	4a1d      	ldr	r2, [pc, #116]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b42:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b44:	6053      	str	r3, [r2, #4]
 8003b46:	4b1c      	ldr	r3, [pc, #112]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b48:	2200      	movs	r2, #0
 8003b4a:	611a      	str	r2, [r3, #16]
 8003b4c:	4b1a      	ldr	r3, [pc, #104]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b4e:	2200      	movs	r2, #0
 8003b50:	609a      	str	r2, [r3, #8]
 8003b52:	4b19      	ldr	r3, [pc, #100]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b54:	2200      	movs	r2, #0
 8003b56:	619a      	str	r2, [r3, #24]
 8003b58:	4817      	ldr	r0, [pc, #92]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b5a:	f010 f957 	bl	8013e0c <HAL_TIM_Base_Init>
 8003b5e:	4603      	mov	r3, r0
 8003b60:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b64:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d11b      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b6c:	4812      	ldr	r0, [pc, #72]	@ (8003bb8 <HAL_InitTick+0xec>)
 8003b6e:	f010 f99d 	bl	8013eac <HAL_TIM_Base_Start_IT>
 8003b72:	4603      	mov	r3, r0
 8003b74:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003b78:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d111      	bne.n	8003ba4 <HAL_InitTick+0xd8>
 8003b80:	2036      	movs	r0, #54	@ 0x36
 8003b82:	f00b fa23 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	2b0f      	cmp	r3, #15
 8003b8a:	d808      	bhi.n	8003b9e <HAL_InitTick+0xd2>
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	6879      	ldr	r1, [r7, #4]
 8003b90:	2036      	movs	r0, #54	@ 0x36
 8003b92:	f00b f9ff 	bl	800ef94 <HAL_NVIC_SetPriority>
 8003b96:	4a0a      	ldr	r2, [pc, #40]	@ (8003bc0 <HAL_InitTick+0xf4>)
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	6013      	str	r3, [r2, #0]
 8003b9c:	e002      	b.n	8003ba4 <HAL_InitTick+0xd8>
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 8003ba4:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 8003ba8:	4618      	mov	r0, r3
 8003baa:	3738      	adds	r7, #56	@ 0x38
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bd80      	pop	{r7, pc}
 8003bb0:	40023800 	.word	0x40023800
 8003bb4:	431bde83 	.word	0x431bde83
 8003bb8:	20001aac 	.word	0x20001aac
 8003bbc:	40001000 	.word	0x40001000
 8003bc0:	20000048 	.word	0x20000048

08003bc4 <NMI_Handler>:
 8003bc4:	b480      	push	{r7}
 8003bc6:	af00      	add	r7, sp, #0
 8003bc8:	bf00      	nop
 8003bca:	e7fd      	b.n	8003bc8 <NMI_Handler+0x4>

08003bcc <HardFault_Handler>:
 8003bcc:	b480      	push	{r7}
 8003bce:	af00      	add	r7, sp, #0
 8003bd0:	bf00      	nop
 8003bd2:	e7fd      	b.n	8003bd0 <HardFault_Handler+0x4>

08003bd4 <MemManage_Handler>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	af00      	add	r7, sp, #0
 8003bd8:	bf00      	nop
 8003bda:	e7fd      	b.n	8003bd8 <MemManage_Handler+0x4>

08003bdc <BusFault_Handler>:
 8003bdc:	b480      	push	{r7}
 8003bde:	af00      	add	r7, sp, #0
 8003be0:	bf00      	nop
 8003be2:	e7fd      	b.n	8003be0 <BusFault_Handler+0x4>

08003be4 <UsageFault_Handler>:
 8003be4:	b480      	push	{r7}
 8003be6:	af00      	add	r7, sp, #0
 8003be8:	bf00      	nop
 8003bea:	e7fd      	b.n	8003be8 <UsageFault_Handler+0x4>

08003bec <DebugMon_Handler>:
 8003bec:	b480      	push	{r7}
 8003bee:	af00      	add	r7, sp, #0
 8003bf0:	bf00      	nop
 8003bf2:	46bd      	mov	sp, r7
 8003bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bf8:	4770      	bx	lr

08003bfa <EXTI3_IRQHandler>:
 8003bfa:	b580      	push	{r7, lr}
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	2008      	movs	r0, #8
 8003c00:	f00b ffc4 	bl	800fb8c <HAL_GPIO_EXTI_IRQHandler>
 8003c04:	bf00      	nop
 8003c06:	bd80      	pop	{r7, pc}

08003c08 <EXTI4_IRQHandler>:
 8003c08:	b580      	push	{r7, lr}
 8003c0a:	af00      	add	r7, sp, #0
 8003c0c:	2010      	movs	r0, #16
 8003c0e:	f00b ffbd 	bl	800fb8c <HAL_GPIO_EXTI_IRQHandler>
 8003c12:	bf00      	nop
 8003c14:	bd80      	pop	{r7, pc}
	...

08003c18 <DMA1_Stream1_IRQHandler>:
 8003c18:	b580      	push	{r7, lr}
 8003c1a:	af00      	add	r7, sp, #0
 8003c1c:	4802      	ldr	r0, [pc, #8]	@ (8003c28 <DMA1_Stream1_IRQHandler+0x10>)
 8003c1e:	f00b fb89 	bl	800f334 <HAL_DMA_IRQHandler>
 8003c22:	bf00      	nop
 8003c24:	bd80      	pop	{r7, pc}
 8003c26:	bf00      	nop
 8003c28:	20001d44 	.word	0x20001d44

08003c2c <DMA1_Stream2_IRQHandler>:
 8003c2c:	b580      	push	{r7, lr}
 8003c2e:	af00      	add	r7, sp, #0
 8003c30:	4802      	ldr	r0, [pc, #8]	@ (8003c3c <DMA1_Stream2_IRQHandler+0x10>)
 8003c32:	f00b fb7f 	bl	800f334 <HAL_DMA_IRQHandler>
 8003c36:	bf00      	nop
 8003c38:	bd80      	pop	{r7, pc}
 8003c3a:	bf00      	nop
 8003c3c:	200018c4 	.word	0x200018c4

08003c40 <DMA1_Stream4_IRQHandler>:
 8003c40:	b580      	push	{r7, lr}
 8003c42:	af00      	add	r7, sp, #0
 8003c44:	4802      	ldr	r0, [pc, #8]	@ (8003c50 <DMA1_Stream4_IRQHandler+0x10>)
 8003c46:	f00b fb75 	bl	800f334 <HAL_DMA_IRQHandler>
 8003c4a:	bf00      	nop
 8003c4c:	bd80      	pop	{r7, pc}
 8003c4e:	bf00      	nop
 8003c50:	20001924 	.word	0x20001924

08003c54 <CAN1_RX0_IRQHandler>:
 8003c54:	b580      	push	{r7, lr}
 8003c56:	af00      	add	r7, sp, #0
 8003c58:	4802      	ldr	r0, [pc, #8]	@ (8003c64 <CAN1_RX0_IRQHandler+0x10>)
 8003c5a:	f00a fe99 	bl	800e990 <HAL_CAN_IRQHandler>
 8003c5e:	bf00      	nop
 8003c60:	bd80      	pop	{r7, pc}
 8003c62:	bf00      	nop
 8003c64:	20000914 	.word	0x20000914

08003c68 <CAN1_RX1_IRQHandler>:
 8003c68:	b580      	push	{r7, lr}
 8003c6a:	af00      	add	r7, sp, #0
 8003c6c:	4802      	ldr	r0, [pc, #8]	@ (8003c78 <CAN1_RX1_IRQHandler+0x10>)
 8003c6e:	f00a fe8f 	bl	800e990 <HAL_CAN_IRQHandler>
 8003c72:	bf00      	nop
 8003c74:	bd80      	pop	{r7, pc}
 8003c76:	bf00      	nop
 8003c78:	20000914 	.word	0x20000914

08003c7c <EXTI9_5_IRQHandler>:
 8003c7c:	b580      	push	{r7, lr}
 8003c7e:	af00      	add	r7, sp, #0
 8003c80:	2020      	movs	r0, #32
 8003c82:	f00b ff83 	bl	800fb8c <HAL_GPIO_EXTI_IRQHandler>
 8003c86:	bf00      	nop
 8003c88:	bd80      	pop	{r7, pc}
	...

08003c8c <TIM3_IRQHandler>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	af00      	add	r7, sp, #0
 8003c90:	4803      	ldr	r0, [pc, #12]	@ (8003ca0 <TIM3_IRQHandler+0x14>)
 8003c92:	f010 faeb 	bl	801426c <HAL_TIM_IRQHandler>
 8003c96:	f7fe fa61 	bl	800215c <micros_tick>
 8003c9a:	bf00      	nop
 8003c9c:	bd80      	pop	{r7, pc}
 8003c9e:	bf00      	nop
 8003ca0:	20001af8 	.word	0x20001af8

08003ca4 <USART1_IRQHandler>:
 8003ca4:	b580      	push	{r7, lr}
 8003ca6:	af00      	add	r7, sp, #0
 8003ca8:	4802      	ldr	r0, [pc, #8]	@ (8003cb4 <USART1_IRQHandler+0x10>)
 8003caa:	f011 fae1 	bl	8015270 <HAL_UART_IRQHandler>
 8003cae:	bf00      	nop
 8003cb0:	bd80      	pop	{r7, pc}
 8003cb2:	bf00      	nop
 8003cb4:	20001c18 	.word	0x20001c18

08003cb8 <USART3_IRQHandler>:
 8003cb8:	b580      	push	{r7, lr}
 8003cba:	af00      	add	r7, sp, #0
 8003cbc:	4802      	ldr	r0, [pc, #8]	@ (8003cc8 <USART3_IRQHandler+0x10>)
 8003cbe:	f011 fad7 	bl	8015270 <HAL_UART_IRQHandler>
 8003cc2:	bf00      	nop
 8003cc4:	bd80      	pop	{r7, pc}
 8003cc6:	bf00      	nop
 8003cc8:	20001c5c 	.word	0x20001c5c

08003ccc <EXTI15_10_IRQHandler>:
 8003ccc:	b580      	push	{r7, lr}
 8003cce:	af00      	add	r7, sp, #0
 8003cd0:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8003cd4:	f00b ff5a 	bl	800fb8c <HAL_GPIO_EXTI_IRQHandler>
 8003cd8:	f7fd fcce 	bl	8001678 <hall_int>
 8003cdc:	bf00      	nop
 8003cde:	bd80      	pop	{r7, pc}

08003ce0 <TIM6_DAC_IRQHandler>:
 8003ce0:	b580      	push	{r7, lr}
 8003ce2:	af00      	add	r7, sp, #0
 8003ce4:	4802      	ldr	r0, [pc, #8]	@ (8003cf0 <TIM6_DAC_IRQHandler+0x10>)
 8003ce6:	f010 fac1 	bl	801426c <HAL_TIM_IRQHandler>
 8003cea:	bf00      	nop
 8003cec:	bd80      	pop	{r7, pc}
 8003cee:	bf00      	nop
 8003cf0:	20001aac 	.word	0x20001aac

08003cf4 <DMA2_Stream0_IRQHandler>:
 8003cf4:	b580      	push	{r7, lr}
 8003cf6:	af00      	add	r7, sp, #0
 8003cf8:	4802      	ldr	r0, [pc, #8]	@ (8003d04 <DMA2_Stream0_IRQHandler+0x10>)
 8003cfa:	f00b fb1b 	bl	800f334 <HAL_DMA_IRQHandler>
 8003cfe:	bf00      	nop
 8003d00:	bd80      	pop	{r7, pc}
 8003d02:	bf00      	nop
 8003d04:	200019ec 	.word	0x200019ec

08003d08 <DMA2_Stream1_IRQHandler>:
 8003d08:	b580      	push	{r7, lr}
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	4802      	ldr	r0, [pc, #8]	@ (8003d18 <DMA2_Stream1_IRQHandler+0x10>)
 8003d0e:	f00b fb11 	bl	800f334 <HAL_DMA_IRQHandler>
 8003d12:	bf00      	nop
 8003d14:	bd80      	pop	{r7, pc}
 8003d16:	bf00      	nop
 8003d18:	20001da4 	.word	0x20001da4

08003d1c <DMA2_Stream3_IRQHandler>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	af00      	add	r7, sp, #0
 8003d20:	4802      	ldr	r0, [pc, #8]	@ (8003d2c <DMA2_Stream3_IRQHandler+0x10>)
 8003d22:	f00b fb07 	bl	800f334 <HAL_DMA_IRQHandler>
 8003d26:	bf00      	nop
 8003d28:	bd80      	pop	{r7, pc}
 8003d2a:	bf00      	nop
 8003d2c:	20001a4c 	.word	0x20001a4c

08003d30 <CAN2_RX0_IRQHandler>:
 8003d30:	b580      	push	{r7, lr}
 8003d32:	af00      	add	r7, sp, #0
 8003d34:	4802      	ldr	r0, [pc, #8]	@ (8003d40 <CAN2_RX0_IRQHandler+0x10>)
 8003d36:	f00a fe2b 	bl	800e990 <HAL_CAN_IRQHandler>
 8003d3a:	bf00      	nop
 8003d3c:	bd80      	pop	{r7, pc}
 8003d3e:	bf00      	nop
 8003d40:	2000093c 	.word	0x2000093c

08003d44 <CAN2_RX1_IRQHandler>:
 8003d44:	b580      	push	{r7, lr}
 8003d46:	af00      	add	r7, sp, #0
 8003d48:	4802      	ldr	r0, [pc, #8]	@ (8003d54 <CAN2_RX1_IRQHandler+0x10>)
 8003d4a:	f00a fe21 	bl	800e990 <HAL_CAN_IRQHandler>
 8003d4e:	bf00      	nop
 8003d50:	bd80      	pop	{r7, pc}
 8003d52:	bf00      	nop
 8003d54:	2000093c 	.word	0x2000093c

08003d58 <OTG_FS_IRQHandler>:
 8003d58:	b580      	push	{r7, lr}
 8003d5a:	af00      	add	r7, sp, #0
 8003d5c:	4802      	ldr	r0, [pc, #8]	@ (8003d68 <OTG_FS_IRQHandler+0x10>)
 8003d5e:	f00d fe08 	bl	8011972 <HAL_PCD_IRQHandler>
 8003d62:	bf00      	nop
 8003d64:	bd80      	pop	{r7, pc}
 8003d66:	bf00      	nop
 8003d68:	2000cc20 	.word	0x2000cc20

08003d6c <DMA2_Stream5_IRQHandler>:
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0
 8003d70:	4802      	ldr	r0, [pc, #8]	@ (8003d7c <DMA2_Stream5_IRQHandler+0x10>)
 8003d72:	f00b fadf 	bl	800f334 <HAL_DMA_IRQHandler>
 8003d76:	bf00      	nop
 8003d78:	bd80      	pop	{r7, pc}
 8003d7a:	bf00      	nop
 8003d7c:	20001ce4 	.word	0x20001ce4

08003d80 <DMA2_Stream6_IRQHandler>:
 8003d80:	b580      	push	{r7, lr}
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	4802      	ldr	r0, [pc, #8]	@ (8003d90 <DMA2_Stream6_IRQHandler+0x10>)
 8003d86:	f00b fad5 	bl	800f334 <HAL_DMA_IRQHandler>
 8003d8a:	bf00      	nop
 8003d8c:	bd80      	pop	{r7, pc}
 8003d8e:	bf00      	nop
 8003d90:	20001e04 	.word	0x20001e04

08003d94 <USART6_IRQHandler>:
 8003d94:	b580      	push	{r7, lr}
 8003d96:	af00      	add	r7, sp, #0
 8003d98:	4802      	ldr	r0, [pc, #8]	@ (8003da4 <USART6_IRQHandler+0x10>)
 8003d9a:	f011 fa69 	bl	8015270 <HAL_UART_IRQHandler>
 8003d9e:	bf00      	nop
 8003da0:	bd80      	pop	{r7, pc}
 8003da2:	bf00      	nop
 8003da4:	20001ca0 	.word	0x20001ca0

08003da8 <I2C3_ER_IRQHandler>:
 8003da8:	b580      	push	{r7, lr}
 8003daa:	af00      	add	r7, sp, #0
 8003dac:	4802      	ldr	r0, [pc, #8]	@ (8003db8 <I2C3_ER_IRQHandler+0x10>)
 8003dae:	f00c fcfd 	bl	80107ac <HAL_I2C_ER_IRQHandler>
 8003db2:	bf00      	nop
 8003db4:	bd80      	pop	{r7, pc}
 8003db6:	bf00      	nop
 8003db8:	20001870 	.word	0x20001870

08003dbc <_getpid>:
 8003dbc:	b480      	push	{r7}
 8003dbe:	af00      	add	r7, sp, #0
 8003dc0:	2301      	movs	r3, #1
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	46bd      	mov	sp, r7
 8003dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dca:	4770      	bx	lr

08003dcc <_kill>:
 8003dcc:	b580      	push	{r7, lr}
 8003dce:	b082      	sub	sp, #8
 8003dd0:	af00      	add	r7, sp, #0
 8003dd2:	6078      	str	r0, [r7, #4]
 8003dd4:	6039      	str	r1, [r7, #0]
 8003dd6:	f019 fe77 	bl	801dac8 <__errno>
 8003dda:	4603      	mov	r3, r0
 8003ddc:	2216      	movs	r2, #22
 8003dde:	601a      	str	r2, [r3, #0]
 8003de0:	f04f 33ff 	mov.w	r3, #4294967295
 8003de4:	4618      	mov	r0, r3
 8003de6:	3708      	adds	r7, #8
 8003de8:	46bd      	mov	sp, r7
 8003dea:	bd80      	pop	{r7, pc}

08003dec <_exit>:
 8003dec:	b580      	push	{r7, lr}
 8003dee:	b082      	sub	sp, #8
 8003df0:	af00      	add	r7, sp, #0
 8003df2:	6078      	str	r0, [r7, #4]
 8003df4:	f04f 31ff 	mov.w	r1, #4294967295
 8003df8:	6878      	ldr	r0, [r7, #4]
 8003dfa:	f7ff ffe7 	bl	8003dcc <_kill>
 8003dfe:	bf00      	nop
 8003e00:	e7fd      	b.n	8003dfe <_exit+0x12>

08003e02 <_read>:
 8003e02:	b580      	push	{r7, lr}
 8003e04:	b086      	sub	sp, #24
 8003e06:	af00      	add	r7, sp, #0
 8003e08:	60f8      	str	r0, [r7, #12]
 8003e0a:	60b9      	str	r1, [r7, #8]
 8003e0c:	607a      	str	r2, [r7, #4]
 8003e0e:	2300      	movs	r3, #0
 8003e10:	617b      	str	r3, [r7, #20]
 8003e12:	e00a      	b.n	8003e2a <_read+0x28>
 8003e14:	f3af 8000 	nop.w
 8003e18:	4601      	mov	r1, r0
 8003e1a:	68bb      	ldr	r3, [r7, #8]
 8003e1c:	1c5a      	adds	r2, r3, #1
 8003e1e:	60ba      	str	r2, [r7, #8]
 8003e20:	b2ca      	uxtb	r2, r1
 8003e22:	701a      	strb	r2, [r3, #0]
 8003e24:	697b      	ldr	r3, [r7, #20]
 8003e26:	3301      	adds	r3, #1
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	697a      	ldr	r2, [r7, #20]
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	429a      	cmp	r2, r3
 8003e30:	dbf0      	blt.n	8003e14 <_read+0x12>
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	4618      	mov	r0, r3
 8003e36:	3718      	adds	r7, #24
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	bd80      	pop	{r7, pc}

08003e3c <_write>:
 8003e3c:	b580      	push	{r7, lr}
 8003e3e:	b086      	sub	sp, #24
 8003e40:	af00      	add	r7, sp, #0
 8003e42:	60f8      	str	r0, [r7, #12]
 8003e44:	60b9      	str	r1, [r7, #8]
 8003e46:	607a      	str	r2, [r7, #4]
 8003e48:	2300      	movs	r3, #0
 8003e4a:	617b      	str	r3, [r7, #20]
 8003e4c:	e009      	b.n	8003e62 <_write+0x26>
 8003e4e:	68bb      	ldr	r3, [r7, #8]
 8003e50:	1c5a      	adds	r2, r3, #1
 8003e52:	60ba      	str	r2, [r7, #8]
 8003e54:	781b      	ldrb	r3, [r3, #0]
 8003e56:	4618      	mov	r0, r3
 8003e58:	f3af 8000 	nop.w
 8003e5c:	697b      	ldr	r3, [r7, #20]
 8003e5e:	3301      	adds	r3, #1
 8003e60:	617b      	str	r3, [r7, #20]
 8003e62:	697a      	ldr	r2, [r7, #20]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	429a      	cmp	r2, r3
 8003e68:	dbf1      	blt.n	8003e4e <_write+0x12>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	4618      	mov	r0, r3
 8003e6e:	3718      	adds	r7, #24
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}

08003e74 <_close>:
 8003e74:	b480      	push	{r7}
 8003e76:	b083      	sub	sp, #12
 8003e78:	af00      	add	r7, sp, #0
 8003e7a:	6078      	str	r0, [r7, #4]
 8003e7c:	f04f 33ff 	mov.w	r3, #4294967295
 8003e80:	4618      	mov	r0, r3
 8003e82:	370c      	adds	r7, #12
 8003e84:	46bd      	mov	sp, r7
 8003e86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e8a:	4770      	bx	lr

08003e8c <_fstat>:
 8003e8c:	b480      	push	{r7}
 8003e8e:	b083      	sub	sp, #12
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	6039      	str	r1, [r7, #0]
 8003e96:	683b      	ldr	r3, [r7, #0]
 8003e98:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003e9c:	605a      	str	r2, [r3, #4]
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	370c      	adds	r7, #12
 8003ea4:	46bd      	mov	sp, r7
 8003ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eaa:	4770      	bx	lr

08003eac <_isatty>:
 8003eac:	b480      	push	{r7}
 8003eae:	b083      	sub	sp, #12
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	6078      	str	r0, [r7, #4]
 8003eb4:	2301      	movs	r3, #1
 8003eb6:	4618      	mov	r0, r3
 8003eb8:	370c      	adds	r7, #12
 8003eba:	46bd      	mov	sp, r7
 8003ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec0:	4770      	bx	lr

08003ec2 <_lseek>:
 8003ec2:	b480      	push	{r7}
 8003ec4:	b085      	sub	sp, #20
 8003ec6:	af00      	add	r7, sp, #0
 8003ec8:	60f8      	str	r0, [r7, #12]
 8003eca:	60b9      	str	r1, [r7, #8]
 8003ecc:	607a      	str	r2, [r7, #4]
 8003ece:	2300      	movs	r3, #0
 8003ed0:	4618      	mov	r0, r3
 8003ed2:	3714      	adds	r7, #20
 8003ed4:	46bd      	mov	sp, r7
 8003ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eda:	4770      	bx	lr

08003edc <_sbrk>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b086      	sub	sp, #24
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	6078      	str	r0, [r7, #4]
 8003ee4:	4a14      	ldr	r2, [pc, #80]	@ (8003f38 <_sbrk+0x5c>)
 8003ee6:	4b15      	ldr	r3, [pc, #84]	@ (8003f3c <_sbrk+0x60>)
 8003ee8:	1ad3      	subs	r3, r2, r3
 8003eea:	617b      	str	r3, [r7, #20]
 8003eec:	697b      	ldr	r3, [r7, #20]
 8003eee:	613b      	str	r3, [r7, #16]
 8003ef0:	4b13      	ldr	r3, [pc, #76]	@ (8003f40 <_sbrk+0x64>)
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	2b00      	cmp	r3, #0
 8003ef6:	d102      	bne.n	8003efe <_sbrk+0x22>
 8003ef8:	4b11      	ldr	r3, [pc, #68]	@ (8003f40 <_sbrk+0x64>)
 8003efa:	4a12      	ldr	r2, [pc, #72]	@ (8003f44 <_sbrk+0x68>)
 8003efc:	601a      	str	r2, [r3, #0]
 8003efe:	4b10      	ldr	r3, [pc, #64]	@ (8003f40 <_sbrk+0x64>)
 8003f00:	681a      	ldr	r2, [r3, #0]
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	4413      	add	r3, r2
 8003f06:	693a      	ldr	r2, [r7, #16]
 8003f08:	429a      	cmp	r2, r3
 8003f0a:	d207      	bcs.n	8003f1c <_sbrk+0x40>
 8003f0c:	f019 fddc 	bl	801dac8 <__errno>
 8003f10:	4603      	mov	r3, r0
 8003f12:	220c      	movs	r2, #12
 8003f14:	601a      	str	r2, [r3, #0]
 8003f16:	f04f 33ff 	mov.w	r3, #4294967295
 8003f1a:	e009      	b.n	8003f30 <_sbrk+0x54>
 8003f1c:	4b08      	ldr	r3, [pc, #32]	@ (8003f40 <_sbrk+0x64>)
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	60fb      	str	r3, [r7, #12]
 8003f22:	4b07      	ldr	r3, [pc, #28]	@ (8003f40 <_sbrk+0x64>)
 8003f24:	681a      	ldr	r2, [r3, #0]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	4413      	add	r3, r2
 8003f2a:	4a05      	ldr	r2, [pc, #20]	@ (8003f40 <_sbrk+0x64>)
 8003f2c:	6013      	str	r3, [r2, #0]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	4618      	mov	r0, r3
 8003f32:	3718      	adds	r7, #24
 8003f34:	46bd      	mov	sp, r7
 8003f36:	bd80      	pop	{r7, pc}
 8003f38:	20020000 	.word	0x20020000
 8003f3c:	00009000 	.word	0x00009000
 8003f40:	20001af4 	.word	0x20001af4
 8003f44:	2000d658 	.word	0x2000d658

08003f48 <SystemInit>:
 8003f48:	b480      	push	{r7}
 8003f4a:	af00      	add	r7, sp, #0
 8003f4c:	4b08      	ldr	r3, [pc, #32]	@ (8003f70 <SystemInit+0x28>)
 8003f4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8003f52:	4a07      	ldr	r2, [pc, #28]	@ (8003f70 <SystemInit+0x28>)
 8003f54:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8003f58:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8003f5c:	4b04      	ldr	r3, [pc, #16]	@ (8003f70 <SystemInit+0x28>)
 8003f5e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8003f62:	609a      	str	r2, [r3, #8]
 8003f64:	bf00      	nop
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop
 8003f70:	e000ed00 	.word	0xe000ed00

08003f74 <LL_TIM_DisableARRPreload>:
 8003f74:	b480      	push	{r7}
 8003f76:	b083      	sub	sp, #12
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	6078      	str	r0, [r7, #4]
 8003f7c:	687b      	ldr	r3, [r7, #4]
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	601a      	str	r2, [r3, #0]
 8003f88:	bf00      	nop
 8003f8a:	370c      	adds	r7, #12
 8003f8c:	46bd      	mov	sp, r7
 8003f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f92:	4770      	bx	lr

08003f94 <LL_TIM_SetClockSource>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	6039      	str	r1, [r7, #0]
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	689b      	ldr	r3, [r3, #8]
 8003fa2:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8003fa6:	f023 0307 	bic.w	r3, r3, #7
 8003faa:	683a      	ldr	r2, [r7, #0]
 8003fac:	431a      	orrs	r2, r3
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	609a      	str	r2, [r3, #8]
 8003fb2:	bf00      	nop
 8003fb4:	370c      	adds	r7, #12
 8003fb6:	46bd      	mov	sp, r7
 8003fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fbc:	4770      	bx	lr

08003fbe <LL_TIM_SetTriggerOutput>:
 8003fbe:	b480      	push	{r7}
 8003fc0:	b083      	sub	sp, #12
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	6078      	str	r0, [r7, #4]
 8003fc6:	6039      	str	r1, [r7, #0]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	685b      	ldr	r3, [r3, #4]
 8003fcc:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8003fd0:	683b      	ldr	r3, [r7, #0]
 8003fd2:	431a      	orrs	r2, r3
 8003fd4:	687b      	ldr	r3, [r7, #4]
 8003fd6:	605a      	str	r2, [r3, #4]
 8003fd8:	bf00      	nop
 8003fda:	370c      	adds	r7, #12
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe2:	4770      	bx	lr

08003fe4 <LL_TIM_DisableMasterSlaveMode>:
 8003fe4:	b480      	push	{r7}
 8003fe6:	b083      	sub	sp, #12
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	689b      	ldr	r3, [r3, #8]
 8003ff0:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	609a      	str	r2, [r3, #8]
 8003ff8:	bf00      	nop
 8003ffa:	370c      	adds	r7, #12
 8003ffc:	46bd      	mov	sp, r7
 8003ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004002:	4770      	bx	lr

08004004 <LL_APB1_GRP1_EnableClock>:
 8004004:	b480      	push	{r7}
 8004006:	b085      	sub	sp, #20
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
 800400c:	4b08      	ldr	r3, [pc, #32]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800400e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004010:	4907      	ldr	r1, [pc, #28]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	4313      	orrs	r3, r2
 8004016:	640b      	str	r3, [r1, #64]	@ 0x40
 8004018:	4b05      	ldr	r3, [pc, #20]	@ (8004030 <LL_APB1_GRP1_EnableClock+0x2c>)
 800401a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800401c:	687b      	ldr	r3, [r7, #4]
 800401e:	4013      	ands	r3, r2
 8004020:	60fb      	str	r3, [r7, #12]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	bf00      	nop
 8004026:	3714      	adds	r7, #20
 8004028:	46bd      	mov	sp, r7
 800402a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402e:	4770      	bx	lr
 8004030:	40023800 	.word	0x40023800

08004034 <MX_TIM2_Init>:
 8004034:	b580      	push	{r7, lr}
 8004036:	b086      	sub	sp, #24
 8004038:	af00      	add	r7, sp, #0
 800403a:	1d3b      	adds	r3, r7, #4
 800403c:	2200      	movs	r2, #0
 800403e:	601a      	str	r2, [r3, #0]
 8004040:	605a      	str	r2, [r3, #4]
 8004042:	609a      	str	r2, [r3, #8]
 8004044:	60da      	str	r2, [r3, #12]
 8004046:	611a      	str	r2, [r3, #16]
 8004048:	2001      	movs	r0, #1
 800404a:	f7ff ffdb 	bl	8004004 <LL_APB1_GRP1_EnableClock>
 800404e:	2300      	movs	r3, #0
 8004050:	80bb      	strh	r3, [r7, #4]
 8004052:	2300      	movs	r3, #0
 8004054:	60bb      	str	r3, [r7, #8]
 8004056:	f04f 33ff 	mov.w	r3, #4294967295
 800405a:	60fb      	str	r3, [r7, #12]
 800405c:	2300      	movs	r3, #0
 800405e:	613b      	str	r3, [r7, #16]
 8004060:	1d3b      	adds	r3, r7, #4
 8004062:	4619      	mov	r1, r3
 8004064:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004068:	f012 f8da 	bl	8016220 <LL_TIM_Init>
 800406c:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004070:	f7ff ff80 	bl	8003f74 <LL_TIM_DisableARRPreload>
 8004074:	2100      	movs	r1, #0
 8004076:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800407a:	f7ff ff8b 	bl	8003f94 <LL_TIM_SetClockSource>
 800407e:	2100      	movs	r1, #0
 8004080:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8004084:	f7ff ff9b 	bl	8003fbe <LL_TIM_SetTriggerOutput>
 8004088:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 800408c:	f7ff ffaa 	bl	8003fe4 <LL_TIM_DisableMasterSlaveMode>
 8004090:	bf00      	nop
 8004092:	3718      	adds	r7, #24
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <MX_TIM3_Init>:
 8004098:	b580      	push	{r7, lr}
 800409a:	b08e      	sub	sp, #56	@ 0x38
 800409c:	af00      	add	r7, sp, #0
 800409e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80040a2:	2200      	movs	r2, #0
 80040a4:	601a      	str	r2, [r3, #0]
 80040a6:	605a      	str	r2, [r3, #4]
 80040a8:	609a      	str	r2, [r3, #8]
 80040aa:	60da      	str	r2, [r3, #12]
 80040ac:	f107 0320 	add.w	r3, r7, #32
 80040b0:	2200      	movs	r2, #0
 80040b2:	601a      	str	r2, [r3, #0]
 80040b4:	605a      	str	r2, [r3, #4]
 80040b6:	1d3b      	adds	r3, r7, #4
 80040b8:	2200      	movs	r2, #0
 80040ba:	601a      	str	r2, [r3, #0]
 80040bc:	605a      	str	r2, [r3, #4]
 80040be:	609a      	str	r2, [r3, #8]
 80040c0:	60da      	str	r2, [r3, #12]
 80040c2:	611a      	str	r2, [r3, #16]
 80040c4:	615a      	str	r2, [r3, #20]
 80040c6:	619a      	str	r2, [r3, #24]
 80040c8:	4b2a      	ldr	r3, [pc, #168]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ca:	4a2b      	ldr	r2, [pc, #172]	@ (8004178 <MX_TIM3_Init+0xe0>)
 80040cc:	601a      	str	r2, [r3, #0]
 80040ce:	4b29      	ldr	r3, [pc, #164]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d0:	22a7      	movs	r2, #167	@ 0xa7
 80040d2:	605a      	str	r2, [r3, #4]
 80040d4:	4b27      	ldr	r3, [pc, #156]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040d6:	2200      	movs	r2, #0
 80040d8:	609a      	str	r2, [r3, #8]
 80040da:	4b26      	ldr	r3, [pc, #152]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040dc:	2201      	movs	r2, #1
 80040de:	60da      	str	r2, [r3, #12]
 80040e0:	4b24      	ldr	r3, [pc, #144]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e2:	2200      	movs	r2, #0
 80040e4:	611a      	str	r2, [r3, #16]
 80040e6:	4b23      	ldr	r3, [pc, #140]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040e8:	2200      	movs	r2, #0
 80040ea:	619a      	str	r2, [r3, #24]
 80040ec:	4821      	ldr	r0, [pc, #132]	@ (8004174 <MX_TIM3_Init+0xdc>)
 80040ee:	f00f fe8d 	bl	8013e0c <HAL_TIM_Base_Init>
 80040f2:	4603      	mov	r3, r0
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d001      	beq.n	80040fc <MX_TIM3_Init+0x64>
 80040f8:	f7ff fb7e 	bl	80037f8 <Error_Handler>
 80040fc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004100:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004102:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8004106:	4619      	mov	r1, r3
 8004108:	481a      	ldr	r0, [pc, #104]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800410a:	f010 fad5 	bl	80146b8 <HAL_TIM_ConfigClockSource>
 800410e:	4603      	mov	r3, r0
 8004110:	2b00      	cmp	r3, #0
 8004112:	d001      	beq.n	8004118 <MX_TIM3_Init+0x80>
 8004114:	f7ff fb70 	bl	80037f8 <Error_Handler>
 8004118:	4816      	ldr	r0, [pc, #88]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800411a:	f00f ff37 	bl	8013f8c <HAL_TIM_OC_Init>
 800411e:	4603      	mov	r3, r0
 8004120:	2b00      	cmp	r3, #0
 8004122:	d001      	beq.n	8004128 <MX_TIM3_Init+0x90>
 8004124:	f7ff fb68 	bl	80037f8 <Error_Handler>
 8004128:	2300      	movs	r3, #0
 800412a:	623b      	str	r3, [r7, #32]
 800412c:	2300      	movs	r3, #0
 800412e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004130:	f107 0320 	add.w	r3, r7, #32
 8004134:	4619      	mov	r1, r3
 8004136:	480f      	ldr	r0, [pc, #60]	@ (8004174 <MX_TIM3_Init+0xdc>)
 8004138:	f010 febe 	bl	8014eb8 <HAL_TIMEx_MasterConfigSynchronization>
 800413c:	4603      	mov	r3, r0
 800413e:	2b00      	cmp	r3, #0
 8004140:	d001      	beq.n	8004146 <MX_TIM3_Init+0xae>
 8004142:	f7ff fb59 	bl	80037f8 <Error_Handler>
 8004146:	2300      	movs	r3, #0
 8004148:	607b      	str	r3, [r7, #4]
 800414a:	2300      	movs	r3, #0
 800414c:	60bb      	str	r3, [r7, #8]
 800414e:	2300      	movs	r3, #0
 8004150:	60fb      	str	r3, [r7, #12]
 8004152:	2300      	movs	r3, #0
 8004154:	617b      	str	r3, [r7, #20]
 8004156:	1d3b      	adds	r3, r7, #4
 8004158:	2200      	movs	r2, #0
 800415a:	4619      	mov	r1, r3
 800415c:	4805      	ldr	r0, [pc, #20]	@ (8004174 <MX_TIM3_Init+0xdc>)
 800415e:	f010 f98d 	bl	801447c <HAL_TIM_OC_ConfigChannel>
 8004162:	4603      	mov	r3, r0
 8004164:	2b00      	cmp	r3, #0
 8004166:	d001      	beq.n	800416c <MX_TIM3_Init+0xd4>
 8004168:	f7ff fb46 	bl	80037f8 <Error_Handler>
 800416c:	bf00      	nop
 800416e:	3738      	adds	r7, #56	@ 0x38
 8004170:	46bd      	mov	sp, r7
 8004172:	bd80      	pop	{r7, pc}
 8004174:	20001af8 	.word	0x20001af8
 8004178:	40000400 	.word	0x40000400

0800417c <MX_TIM4_Init>:
 800417c:	b580      	push	{r7, lr}
 800417e:	b08a      	sub	sp, #40	@ 0x28
 8004180:	af00      	add	r7, sp, #0
 8004182:	f107 0320 	add.w	r3, r7, #32
 8004186:	2200      	movs	r2, #0
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	605a      	str	r2, [r3, #4]
 800418c:	1d3b      	adds	r3, r7, #4
 800418e:	2200      	movs	r2, #0
 8004190:	601a      	str	r2, [r3, #0]
 8004192:	605a      	str	r2, [r3, #4]
 8004194:	609a      	str	r2, [r3, #8]
 8004196:	60da      	str	r2, [r3, #12]
 8004198:	611a      	str	r2, [r3, #16]
 800419a:	615a      	str	r2, [r3, #20]
 800419c:	619a      	str	r2, [r3, #24]
 800419e:	4b22      	ldr	r3, [pc, #136]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a0:	4a22      	ldr	r2, [pc, #136]	@ (800422c <MX_TIM4_Init+0xb0>)
 80041a2:	601a      	str	r2, [r3, #0]
 80041a4:	4b20      	ldr	r3, [pc, #128]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041a6:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041aa:	605a      	str	r2, [r3, #4]
 80041ac:	4b1e      	ldr	r3, [pc, #120]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041ae:	2200      	movs	r2, #0
 80041b0:	609a      	str	r2, [r3, #8]
 80041b2:	4b1d      	ldr	r3, [pc, #116]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041b4:	f240 32e7 	movw	r2, #999	@ 0x3e7
 80041b8:	60da      	str	r2, [r3, #12]
 80041ba:	4b1b      	ldr	r3, [pc, #108]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041bc:	2200      	movs	r2, #0
 80041be:	611a      	str	r2, [r3, #16]
 80041c0:	4b19      	ldr	r3, [pc, #100]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c2:	2200      	movs	r2, #0
 80041c4:	619a      	str	r2, [r3, #24]
 80041c6:	4818      	ldr	r0, [pc, #96]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041c8:	f00f ff39 	bl	801403e <HAL_TIM_PWM_Init>
 80041cc:	4603      	mov	r3, r0
 80041ce:	2b00      	cmp	r3, #0
 80041d0:	d001      	beq.n	80041d6 <MX_TIM4_Init+0x5a>
 80041d2:	f7ff fb11 	bl	80037f8 <Error_Handler>
 80041d6:	2300      	movs	r3, #0
 80041d8:	623b      	str	r3, [r7, #32]
 80041da:	2300      	movs	r3, #0
 80041dc:	627b      	str	r3, [r7, #36]	@ 0x24
 80041de:	f107 0320 	add.w	r3, r7, #32
 80041e2:	4619      	mov	r1, r3
 80041e4:	4810      	ldr	r0, [pc, #64]	@ (8004228 <MX_TIM4_Init+0xac>)
 80041e6:	f010 fe67 	bl	8014eb8 <HAL_TIMEx_MasterConfigSynchronization>
 80041ea:	4603      	mov	r3, r0
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d001      	beq.n	80041f4 <MX_TIM4_Init+0x78>
 80041f0:	f7ff fb02 	bl	80037f8 <Error_Handler>
 80041f4:	2360      	movs	r3, #96	@ 0x60
 80041f6:	607b      	str	r3, [r7, #4]
 80041f8:	2300      	movs	r3, #0
 80041fa:	60bb      	str	r3, [r7, #8]
 80041fc:	2300      	movs	r3, #0
 80041fe:	60fb      	str	r3, [r7, #12]
 8004200:	2300      	movs	r3, #0
 8004202:	617b      	str	r3, [r7, #20]
 8004204:	1d3b      	adds	r3, r7, #4
 8004206:	2208      	movs	r2, #8
 8004208:	4619      	mov	r1, r3
 800420a:	4807      	ldr	r0, [pc, #28]	@ (8004228 <MX_TIM4_Init+0xac>)
 800420c:	f010 f992 	bl	8014534 <HAL_TIM_PWM_ConfigChannel>
 8004210:	4603      	mov	r3, r0
 8004212:	2b00      	cmp	r3, #0
 8004214:	d001      	beq.n	800421a <MX_TIM4_Init+0x9e>
 8004216:	f7ff faef 	bl	80037f8 <Error_Handler>
 800421a:	4803      	ldr	r0, [pc, #12]	@ (8004228 <MX_TIM4_Init+0xac>)
 800421c:	f000 f93c 	bl	8004498 <HAL_TIM_MspPostInit>
 8004220:	bf00      	nop
 8004222:	3728      	adds	r7, #40	@ 0x28
 8004224:	46bd      	mov	sp, r7
 8004226:	bd80      	pop	{r7, pc}
 8004228:	20001b40 	.word	0x20001b40
 800422c:	40000800 	.word	0x40000800

08004230 <MX_TIM5_Init>:
 8004230:	b580      	push	{r7, lr}
 8004232:	b08a      	sub	sp, #40	@ 0x28
 8004234:	af00      	add	r7, sp, #0
 8004236:	f107 0320 	add.w	r3, r7, #32
 800423a:	2200      	movs	r2, #0
 800423c:	601a      	str	r2, [r3, #0]
 800423e:	605a      	str	r2, [r3, #4]
 8004240:	1d3b      	adds	r3, r7, #4
 8004242:	2200      	movs	r2, #0
 8004244:	601a      	str	r2, [r3, #0]
 8004246:	605a      	str	r2, [r3, #4]
 8004248:	609a      	str	r2, [r3, #8]
 800424a:	60da      	str	r2, [r3, #12]
 800424c:	611a      	str	r2, [r3, #16]
 800424e:	615a      	str	r2, [r3, #20]
 8004250:	619a      	str	r2, [r3, #24]
 8004252:	4b2d      	ldr	r3, [pc, #180]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004254:	4a2d      	ldr	r2, [pc, #180]	@ (800430c <MX_TIM5_Init+0xdc>)
 8004256:	601a      	str	r2, [r3, #0]
 8004258:	4b2b      	ldr	r3, [pc, #172]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800425a:	f240 5225 	movw	r2, #1317	@ 0x525
 800425e:	605a      	str	r2, [r3, #4]
 8004260:	4b29      	ldr	r3, [pc, #164]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004262:	2200      	movs	r2, #0
 8004264:	609a      	str	r2, [r3, #8]
 8004266:	4b28      	ldr	r3, [pc, #160]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004268:	22ff      	movs	r2, #255	@ 0xff
 800426a:	60da      	str	r2, [r3, #12]
 800426c:	4b26      	ldr	r3, [pc, #152]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800426e:	2200      	movs	r2, #0
 8004270:	611a      	str	r2, [r3, #16]
 8004272:	4b25      	ldr	r3, [pc, #148]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004274:	2280      	movs	r2, #128	@ 0x80
 8004276:	619a      	str	r2, [r3, #24]
 8004278:	4823      	ldr	r0, [pc, #140]	@ (8004308 <MX_TIM5_Init+0xd8>)
 800427a:	f00f fee0 	bl	801403e <HAL_TIM_PWM_Init>
 800427e:	4603      	mov	r3, r0
 8004280:	2b00      	cmp	r3, #0
 8004282:	d001      	beq.n	8004288 <MX_TIM5_Init+0x58>
 8004284:	f7ff fab8 	bl	80037f8 <Error_Handler>
 8004288:	2300      	movs	r3, #0
 800428a:	623b      	str	r3, [r7, #32]
 800428c:	2300      	movs	r3, #0
 800428e:	627b      	str	r3, [r7, #36]	@ 0x24
 8004290:	f107 0320 	add.w	r3, r7, #32
 8004294:	4619      	mov	r1, r3
 8004296:	481c      	ldr	r0, [pc, #112]	@ (8004308 <MX_TIM5_Init+0xd8>)
 8004298:	f010 fe0e 	bl	8014eb8 <HAL_TIMEx_MasterConfigSynchronization>
 800429c:	4603      	mov	r3, r0
 800429e:	2b00      	cmp	r3, #0
 80042a0:	d001      	beq.n	80042a6 <MX_TIM5_Init+0x76>
 80042a2:	f7ff faa9 	bl	80037f8 <Error_Handler>
 80042a6:	2360      	movs	r3, #96	@ 0x60
 80042a8:	607b      	str	r3, [r7, #4]
 80042aa:	2300      	movs	r3, #0
 80042ac:	60bb      	str	r3, [r7, #8]
 80042ae:	2302      	movs	r3, #2
 80042b0:	60fb      	str	r3, [r7, #12]
 80042b2:	2304      	movs	r3, #4
 80042b4:	617b      	str	r3, [r7, #20]
 80042b6:	1d3b      	adds	r3, r7, #4
 80042b8:	2200      	movs	r2, #0
 80042ba:	4619      	mov	r1, r3
 80042bc:	4812      	ldr	r0, [pc, #72]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042be:	f010 f939 	bl	8014534 <HAL_TIM_PWM_ConfigChannel>
 80042c2:	4603      	mov	r3, r0
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d001      	beq.n	80042cc <MX_TIM5_Init+0x9c>
 80042c8:	f7ff fa96 	bl	80037f8 <Error_Handler>
 80042cc:	1d3b      	adds	r3, r7, #4
 80042ce:	2204      	movs	r2, #4
 80042d0:	4619      	mov	r1, r3
 80042d2:	480d      	ldr	r0, [pc, #52]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042d4:	f010 f92e 	bl	8014534 <HAL_TIM_PWM_ConfigChannel>
 80042d8:	4603      	mov	r3, r0
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d001      	beq.n	80042e2 <MX_TIM5_Init+0xb2>
 80042de:	f7ff fa8b 	bl	80037f8 <Error_Handler>
 80042e2:	1d3b      	adds	r3, r7, #4
 80042e4:	2208      	movs	r2, #8
 80042e6:	4619      	mov	r1, r3
 80042e8:	4807      	ldr	r0, [pc, #28]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042ea:	f010 f923 	bl	8014534 <HAL_TIM_PWM_ConfigChannel>
 80042ee:	4603      	mov	r3, r0
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d001      	beq.n	80042f8 <MX_TIM5_Init+0xc8>
 80042f4:	f7ff fa80 	bl	80037f8 <Error_Handler>
 80042f8:	4803      	ldr	r0, [pc, #12]	@ (8004308 <MX_TIM5_Init+0xd8>)
 80042fa:	f000 f8cd 	bl	8004498 <HAL_TIM_MspPostInit>
 80042fe:	bf00      	nop
 8004300:	3728      	adds	r7, #40	@ 0x28
 8004302:	46bd      	mov	sp, r7
 8004304:	bd80      	pop	{r7, pc}
 8004306:	bf00      	nop
 8004308:	20001b88 	.word	0x20001b88
 800430c:	40000c00 	.word	0x40000c00

08004310 <MX_TIM10_Init>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b088      	sub	sp, #32
 8004314:	af00      	add	r7, sp, #0
 8004316:	1d3b      	adds	r3, r7, #4
 8004318:	2200      	movs	r2, #0
 800431a:	601a      	str	r2, [r3, #0]
 800431c:	605a      	str	r2, [r3, #4]
 800431e:	609a      	str	r2, [r3, #8]
 8004320:	60da      	str	r2, [r3, #12]
 8004322:	611a      	str	r2, [r3, #16]
 8004324:	615a      	str	r2, [r3, #20]
 8004326:	619a      	str	r2, [r3, #24]
 8004328:	4b1e      	ldr	r3, [pc, #120]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800432a:	4a1f      	ldr	r2, [pc, #124]	@ (80043a8 <MX_TIM10_Init+0x98>)
 800432c:	601a      	str	r2, [r3, #0]
 800432e:	4b1d      	ldr	r3, [pc, #116]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004330:	2200      	movs	r2, #0
 8004332:	605a      	str	r2, [r3, #4]
 8004334:	4b1b      	ldr	r3, [pc, #108]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004336:	2200      	movs	r2, #0
 8004338:	609a      	str	r2, [r3, #8]
 800433a:	4b1a      	ldr	r3, [pc, #104]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800433c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8004340:	60da      	str	r2, [r3, #12]
 8004342:	4b18      	ldr	r3, [pc, #96]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004344:	2200      	movs	r2, #0
 8004346:	611a      	str	r2, [r3, #16]
 8004348:	4b16      	ldr	r3, [pc, #88]	@ (80043a4 <MX_TIM10_Init+0x94>)
 800434a:	2200      	movs	r2, #0
 800434c:	619a      	str	r2, [r3, #24]
 800434e:	4815      	ldr	r0, [pc, #84]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004350:	f00f fd5c 	bl	8013e0c <HAL_TIM_Base_Init>
 8004354:	4603      	mov	r3, r0
 8004356:	2b00      	cmp	r3, #0
 8004358:	d001      	beq.n	800435e <MX_TIM10_Init+0x4e>
 800435a:	f7ff fa4d 	bl	80037f8 <Error_Handler>
 800435e:	4811      	ldr	r0, [pc, #68]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004360:	f00f fe6d 	bl	801403e <HAL_TIM_PWM_Init>
 8004364:	4603      	mov	r3, r0
 8004366:	2b00      	cmp	r3, #0
 8004368:	d001      	beq.n	800436e <MX_TIM10_Init+0x5e>
 800436a:	f7ff fa45 	bl	80037f8 <Error_Handler>
 800436e:	2360      	movs	r3, #96	@ 0x60
 8004370:	607b      	str	r3, [r7, #4]
 8004372:	2300      	movs	r3, #0
 8004374:	60bb      	str	r3, [r7, #8]
 8004376:	2300      	movs	r3, #0
 8004378:	60fb      	str	r3, [r7, #12]
 800437a:	2300      	movs	r3, #0
 800437c:	617b      	str	r3, [r7, #20]
 800437e:	1d3b      	adds	r3, r7, #4
 8004380:	2200      	movs	r2, #0
 8004382:	4619      	mov	r1, r3
 8004384:	4807      	ldr	r0, [pc, #28]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004386:	f010 f8d5 	bl	8014534 <HAL_TIM_PWM_ConfigChannel>
 800438a:	4603      	mov	r3, r0
 800438c:	2b00      	cmp	r3, #0
 800438e:	d001      	beq.n	8004394 <MX_TIM10_Init+0x84>
 8004390:	f7ff fa32 	bl	80037f8 <Error_Handler>
 8004394:	4803      	ldr	r0, [pc, #12]	@ (80043a4 <MX_TIM10_Init+0x94>)
 8004396:	f000 f87f 	bl	8004498 <HAL_TIM_MspPostInit>
 800439a:	bf00      	nop
 800439c:	3720      	adds	r7, #32
 800439e:	46bd      	mov	sp, r7
 80043a0:	bd80      	pop	{r7, pc}
 80043a2:	bf00      	nop
 80043a4:	20001bd0 	.word	0x20001bd0
 80043a8:	40014400 	.word	0x40014400

080043ac <HAL_TIM_Base_MspInit>:
 80043ac:	b580      	push	{r7, lr}
 80043ae:	b084      	sub	sp, #16
 80043b0:	af00      	add	r7, sp, #0
 80043b2:	6078      	str	r0, [r7, #4]
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	4a18      	ldr	r2, [pc, #96]	@ (800441c <HAL_TIM_Base_MspInit+0x70>)
 80043ba:	4293      	cmp	r3, r2
 80043bc:	d116      	bne.n	80043ec <HAL_TIM_Base_MspInit+0x40>
 80043be:	2300      	movs	r3, #0
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	4b17      	ldr	r3, [pc, #92]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043c6:	4a16      	ldr	r2, [pc, #88]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043c8:	f043 0302 	orr.w	r3, r3, #2
 80043cc:	6413      	str	r3, [r2, #64]	@ 0x40
 80043ce:	4b14      	ldr	r3, [pc, #80]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043d2:	f003 0302 	and.w	r3, r3, #2
 80043d6:	60fb      	str	r3, [r7, #12]
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	2200      	movs	r2, #0
 80043dc:	2105      	movs	r1, #5
 80043de:	201d      	movs	r0, #29
 80043e0:	f00a fdd8 	bl	800ef94 <HAL_NVIC_SetPriority>
 80043e4:	201d      	movs	r0, #29
 80043e6:	f00a fdf1 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80043ea:	e012      	b.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	4a0c      	ldr	r2, [pc, #48]	@ (8004424 <HAL_TIM_Base_MspInit+0x78>)
 80043f2:	4293      	cmp	r3, r2
 80043f4:	d10d      	bne.n	8004412 <HAL_TIM_Base_MspInit+0x66>
 80043f6:	2300      	movs	r3, #0
 80043f8:	60bb      	str	r3, [r7, #8]
 80043fa:	4b09      	ldr	r3, [pc, #36]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 80043fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80043fe:	4a08      	ldr	r2, [pc, #32]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004400:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004404:	6453      	str	r3, [r2, #68]	@ 0x44
 8004406:	4b06      	ldr	r3, [pc, #24]	@ (8004420 <HAL_TIM_Base_MspInit+0x74>)
 8004408:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800440a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800440e:	60bb      	str	r3, [r7, #8]
 8004410:	68bb      	ldr	r3, [r7, #8]
 8004412:	bf00      	nop
 8004414:	3710      	adds	r7, #16
 8004416:	46bd      	mov	sp, r7
 8004418:	bd80      	pop	{r7, pc}
 800441a:	bf00      	nop
 800441c:	40000400 	.word	0x40000400
 8004420:	40023800 	.word	0x40023800
 8004424:	40014400 	.word	0x40014400

08004428 <HAL_TIM_PWM_MspInit>:
 8004428:	b480      	push	{r7}
 800442a:	b085      	sub	sp, #20
 800442c:	af00      	add	r7, sp, #0
 800442e:	6078      	str	r0, [r7, #4]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	681b      	ldr	r3, [r3, #0]
 8004434:	4a15      	ldr	r2, [pc, #84]	@ (800448c <HAL_TIM_PWM_MspInit+0x64>)
 8004436:	4293      	cmp	r3, r2
 8004438:	d10e      	bne.n	8004458 <HAL_TIM_PWM_MspInit+0x30>
 800443a:	2300      	movs	r3, #0
 800443c:	60fb      	str	r3, [r7, #12]
 800443e:	4b14      	ldr	r3, [pc, #80]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004440:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004442:	4a13      	ldr	r2, [pc, #76]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004444:	f043 0304 	orr.w	r3, r3, #4
 8004448:	6413      	str	r3, [r2, #64]	@ 0x40
 800444a:	4b11      	ldr	r3, [pc, #68]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800444c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800444e:	f003 0304 	and.w	r3, r3, #4
 8004452:	60fb      	str	r3, [r7, #12]
 8004454:	68fb      	ldr	r3, [r7, #12]
 8004456:	e012      	b.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	4a0d      	ldr	r2, [pc, #52]	@ (8004494 <HAL_TIM_PWM_MspInit+0x6c>)
 800445e:	4293      	cmp	r3, r2
 8004460:	d10d      	bne.n	800447e <HAL_TIM_PWM_MspInit+0x56>
 8004462:	2300      	movs	r3, #0
 8004464:	60bb      	str	r3, [r7, #8]
 8004466:	4b0a      	ldr	r3, [pc, #40]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004468:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800446a:	4a09      	ldr	r2, [pc, #36]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 800446c:	f043 0308 	orr.w	r3, r3, #8
 8004470:	6413      	str	r3, [r2, #64]	@ 0x40
 8004472:	4b07      	ldr	r3, [pc, #28]	@ (8004490 <HAL_TIM_PWM_MspInit+0x68>)
 8004474:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004476:	f003 0308 	and.w	r3, r3, #8
 800447a:	60bb      	str	r3, [r7, #8]
 800447c:	68bb      	ldr	r3, [r7, #8]
 800447e:	bf00      	nop
 8004480:	3714      	adds	r7, #20
 8004482:	46bd      	mov	sp, r7
 8004484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004488:	4770      	bx	lr
 800448a:	bf00      	nop
 800448c:	40000800 	.word	0x40000800
 8004490:	40023800 	.word	0x40023800
 8004494:	40000c00 	.word	0x40000c00

08004498 <HAL_TIM_MspPostInit>:
 8004498:	b580      	push	{r7, lr}
 800449a:	b08a      	sub	sp, #40	@ 0x28
 800449c:	af00      	add	r7, sp, #0
 800449e:	6078      	str	r0, [r7, #4]
 80044a0:	f107 0314 	add.w	r3, r7, #20
 80044a4:	2200      	movs	r2, #0
 80044a6:	601a      	str	r2, [r3, #0]
 80044a8:	605a      	str	r2, [r3, #4]
 80044aa:	609a      	str	r2, [r3, #8]
 80044ac:	60da      	str	r2, [r3, #12]
 80044ae:	611a      	str	r2, [r3, #16]
 80044b0:	687b      	ldr	r3, [r7, #4]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	4a37      	ldr	r2, [pc, #220]	@ (8004594 <HAL_TIM_MspPostInit+0xfc>)
 80044b6:	4293      	cmp	r3, r2
 80044b8:	d11f      	bne.n	80044fa <HAL_TIM_MspPostInit+0x62>
 80044ba:	2300      	movs	r3, #0
 80044bc:	613b      	str	r3, [r7, #16]
 80044be:	4b36      	ldr	r3, [pc, #216]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044c2:	4a35      	ldr	r2, [pc, #212]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044c4:	f043 0308 	orr.w	r3, r3, #8
 80044c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80044ca:	4b33      	ldr	r3, [pc, #204]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 80044cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80044ce:	f003 0308 	and.w	r3, r3, #8
 80044d2:	613b      	str	r3, [r7, #16]
 80044d4:	693b      	ldr	r3, [r7, #16]
 80044d6:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 80044da:	617b      	str	r3, [r7, #20]
 80044dc:	2302      	movs	r3, #2
 80044de:	61bb      	str	r3, [r7, #24]
 80044e0:	2300      	movs	r3, #0
 80044e2:	61fb      	str	r3, [r7, #28]
 80044e4:	2300      	movs	r3, #0
 80044e6:	623b      	str	r3, [r7, #32]
 80044e8:	2302      	movs	r3, #2
 80044ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80044ec:	f107 0314 	add.w	r3, r7, #20
 80044f0:	4619      	mov	r1, r3
 80044f2:	482a      	ldr	r0, [pc, #168]	@ (800459c <HAL_TIM_MspPostInit+0x104>)
 80044f4:	f00b f994 	bl	800f820 <HAL_GPIO_Init>
 80044f8:	e047      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	681b      	ldr	r3, [r3, #0]
 80044fe:	4a28      	ldr	r2, [pc, #160]	@ (80045a0 <HAL_TIM_MspPostInit+0x108>)
 8004500:	4293      	cmp	r3, r2
 8004502:	d11f      	bne.n	8004544 <HAL_TIM_MspPostInit+0xac>
 8004504:	2300      	movs	r3, #0
 8004506:	60fb      	str	r3, [r7, #12]
 8004508:	4b23      	ldr	r3, [pc, #140]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800450c:	4a22      	ldr	r2, [pc, #136]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 800450e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004512:	6313      	str	r3, [r2, #48]	@ 0x30
 8004514:	4b20      	ldr	r3, [pc, #128]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004516:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004518:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800451c:	60fb      	str	r3, [r7, #12]
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8004524:	617b      	str	r3, [r7, #20]
 8004526:	2302      	movs	r3, #2
 8004528:	61bb      	str	r3, [r7, #24]
 800452a:	2300      	movs	r3, #0
 800452c:	61fb      	str	r3, [r7, #28]
 800452e:	2300      	movs	r3, #0
 8004530:	623b      	str	r3, [r7, #32]
 8004532:	2302      	movs	r3, #2
 8004534:	627b      	str	r3, [r7, #36]	@ 0x24
 8004536:	f107 0314 	add.w	r3, r7, #20
 800453a:	4619      	mov	r1, r3
 800453c:	4819      	ldr	r0, [pc, #100]	@ (80045a4 <HAL_TIM_MspPostInit+0x10c>)
 800453e:	f00b f96f 	bl	800f820 <HAL_GPIO_Init>
 8004542:	e022      	b.n	800458a <HAL_TIM_MspPostInit+0xf2>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4a17      	ldr	r2, [pc, #92]	@ (80045a8 <HAL_TIM_MspPostInit+0x110>)
 800454a:	4293      	cmp	r3, r2
 800454c:	d11d      	bne.n	800458a <HAL_TIM_MspPostInit+0xf2>
 800454e:	2300      	movs	r3, #0
 8004550:	60bb      	str	r3, [r7, #8]
 8004552:	4b11      	ldr	r3, [pc, #68]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004556:	4a10      	ldr	r2, [pc, #64]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004558:	f043 0320 	orr.w	r3, r3, #32
 800455c:	6313      	str	r3, [r2, #48]	@ 0x30
 800455e:	4b0e      	ldr	r3, [pc, #56]	@ (8004598 <HAL_TIM_MspPostInit+0x100>)
 8004560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004562:	f003 0320 	and.w	r3, r3, #32
 8004566:	60bb      	str	r3, [r7, #8]
 8004568:	68bb      	ldr	r3, [r7, #8]
 800456a:	2340      	movs	r3, #64	@ 0x40
 800456c:	617b      	str	r3, [r7, #20]
 800456e:	2302      	movs	r3, #2
 8004570:	61bb      	str	r3, [r7, #24]
 8004572:	2300      	movs	r3, #0
 8004574:	61fb      	str	r3, [r7, #28]
 8004576:	2300      	movs	r3, #0
 8004578:	623b      	str	r3, [r7, #32]
 800457a:	2303      	movs	r3, #3
 800457c:	627b      	str	r3, [r7, #36]	@ 0x24
 800457e:	f107 0314 	add.w	r3, r7, #20
 8004582:	4619      	mov	r1, r3
 8004584:	4809      	ldr	r0, [pc, #36]	@ (80045ac <HAL_TIM_MspPostInit+0x114>)
 8004586:	f00b f94b 	bl	800f820 <HAL_GPIO_Init>
 800458a:	bf00      	nop
 800458c:	3728      	adds	r7, #40	@ 0x28
 800458e:	46bd      	mov	sp, r7
 8004590:	bd80      	pop	{r7, pc}
 8004592:	bf00      	nop
 8004594:	40000800 	.word	0x40000800
 8004598:	40023800 	.word	0x40023800
 800459c:	40020c00 	.word	0x40020c00
 80045a0:	40000c00 	.word	0x40000c00
 80045a4:	40021c00 	.word	0x40021c00
 80045a8:	40014400 	.word	0x40014400
 80045ac:	40021400 	.word	0x40021400

080045b0 <MX_USART1_UART_Init>:
 80045b0:	b580      	push	{r7, lr}
 80045b2:	af00      	add	r7, sp, #0
 80045b4:	4b11      	ldr	r3, [pc, #68]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045b6:	4a12      	ldr	r2, [pc, #72]	@ (8004600 <MX_USART1_UART_Init+0x50>)
 80045b8:	601a      	str	r2, [r3, #0]
 80045ba:	4b10      	ldr	r3, [pc, #64]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045bc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80045c0:	605a      	str	r2, [r3, #4]
 80045c2:	4b0e      	ldr	r3, [pc, #56]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045c4:	2200      	movs	r2, #0
 80045c6:	609a      	str	r2, [r3, #8]
 80045c8:	4b0c      	ldr	r3, [pc, #48]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045ca:	2200      	movs	r2, #0
 80045cc:	60da      	str	r2, [r3, #12]
 80045ce:	4b0b      	ldr	r3, [pc, #44]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d0:	2200      	movs	r2, #0
 80045d2:	611a      	str	r2, [r3, #16]
 80045d4:	4b09      	ldr	r3, [pc, #36]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045d6:	220c      	movs	r2, #12
 80045d8:	615a      	str	r2, [r3, #20]
 80045da:	4b08      	ldr	r3, [pc, #32]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045dc:	2200      	movs	r2, #0
 80045de:	619a      	str	r2, [r3, #24]
 80045e0:	4b06      	ldr	r3, [pc, #24]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e2:	2200      	movs	r2, #0
 80045e4:	61da      	str	r2, [r3, #28]
 80045e6:	4805      	ldr	r0, [pc, #20]	@ (80045fc <MX_USART1_UART_Init+0x4c>)
 80045e8:	f010 fcf6 	bl	8014fd8 <HAL_UART_Init>
 80045ec:	4603      	mov	r3, r0
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d001      	beq.n	80045f6 <MX_USART1_UART_Init+0x46>
 80045f2:	f7ff f901 	bl	80037f8 <Error_Handler>
 80045f6:	bf00      	nop
 80045f8:	bd80      	pop	{r7, pc}
 80045fa:	bf00      	nop
 80045fc:	20001c18 	.word	0x20001c18
 8004600:	40011000 	.word	0x40011000

08004604 <MX_USART3_UART_Init>:
 8004604:	b580      	push	{r7, lr}
 8004606:	af00      	add	r7, sp, #0
 8004608:	4b11      	ldr	r3, [pc, #68]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800460a:	4a12      	ldr	r2, [pc, #72]	@ (8004654 <MX_USART3_UART_Init+0x50>)
 800460c:	601a      	str	r2, [r3, #0]
 800460e:	4b10      	ldr	r3, [pc, #64]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004610:	4a11      	ldr	r2, [pc, #68]	@ (8004658 <MX_USART3_UART_Init+0x54>)
 8004612:	605a      	str	r2, [r3, #4]
 8004614:	4b0e      	ldr	r3, [pc, #56]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004616:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800461a:	609a      	str	r2, [r3, #8]
 800461c:	4b0c      	ldr	r3, [pc, #48]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800461e:	2200      	movs	r2, #0
 8004620:	60da      	str	r2, [r3, #12]
 8004622:	4b0b      	ldr	r3, [pc, #44]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004624:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8004628:	611a      	str	r2, [r3, #16]
 800462a:	4b09      	ldr	r3, [pc, #36]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800462c:	220c      	movs	r2, #12
 800462e:	615a      	str	r2, [r3, #20]
 8004630:	4b07      	ldr	r3, [pc, #28]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004632:	2200      	movs	r2, #0
 8004634:	619a      	str	r2, [r3, #24]
 8004636:	4b06      	ldr	r3, [pc, #24]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 8004638:	2200      	movs	r2, #0
 800463a:	61da      	str	r2, [r3, #28]
 800463c:	4804      	ldr	r0, [pc, #16]	@ (8004650 <MX_USART3_UART_Init+0x4c>)
 800463e:	f010 fccb 	bl	8014fd8 <HAL_UART_Init>
 8004642:	4603      	mov	r3, r0
 8004644:	2b00      	cmp	r3, #0
 8004646:	d001      	beq.n	800464c <MX_USART3_UART_Init+0x48>
 8004648:	f7ff f8d6 	bl	80037f8 <Error_Handler>
 800464c:	bf00      	nop
 800464e:	bd80      	pop	{r7, pc}
 8004650:	20001c5c 	.word	0x20001c5c
 8004654:	40004800 	.word	0x40004800
 8004658:	000186a0 	.word	0x000186a0

0800465c <MX_USART6_UART_Init>:
 800465c:	b580      	push	{r7, lr}
 800465e:	af00      	add	r7, sp, #0
 8004660:	4b11      	ldr	r3, [pc, #68]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004662:	4a12      	ldr	r2, [pc, #72]	@ (80046ac <MX_USART6_UART_Init+0x50>)
 8004664:	601a      	str	r2, [r3, #0]
 8004666:	4b10      	ldr	r3, [pc, #64]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004668:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800466c:	605a      	str	r2, [r3, #4]
 800466e:	4b0e      	ldr	r3, [pc, #56]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004670:	2200      	movs	r2, #0
 8004672:	609a      	str	r2, [r3, #8]
 8004674:	4b0c      	ldr	r3, [pc, #48]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004676:	2200      	movs	r2, #0
 8004678:	60da      	str	r2, [r3, #12]
 800467a:	4b0b      	ldr	r3, [pc, #44]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800467c:	2200      	movs	r2, #0
 800467e:	611a      	str	r2, [r3, #16]
 8004680:	4b09      	ldr	r3, [pc, #36]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004682:	220c      	movs	r2, #12
 8004684:	615a      	str	r2, [r3, #20]
 8004686:	4b08      	ldr	r3, [pc, #32]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004688:	2200      	movs	r2, #0
 800468a:	619a      	str	r2, [r3, #24]
 800468c:	4b06      	ldr	r3, [pc, #24]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 800468e:	2200      	movs	r2, #0
 8004690:	61da      	str	r2, [r3, #28]
 8004692:	4805      	ldr	r0, [pc, #20]	@ (80046a8 <MX_USART6_UART_Init+0x4c>)
 8004694:	f010 fca0 	bl	8014fd8 <HAL_UART_Init>
 8004698:	4603      	mov	r3, r0
 800469a:	2b00      	cmp	r3, #0
 800469c:	d001      	beq.n	80046a2 <MX_USART6_UART_Init+0x46>
 800469e:	f7ff f8ab 	bl	80037f8 <Error_Handler>
 80046a2:	bf00      	nop
 80046a4:	bd80      	pop	{r7, pc}
 80046a6:	bf00      	nop
 80046a8:	20001ca0 	.word	0x20001ca0
 80046ac:	40011400 	.word	0x40011400

080046b0 <HAL_UART_MspInit>:
 80046b0:	b580      	push	{r7, lr}
 80046b2:	b08e      	sub	sp, #56	@ 0x38
 80046b4:	af00      	add	r7, sp, #0
 80046b6:	6078      	str	r0, [r7, #4]
 80046b8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80046bc:	2200      	movs	r2, #0
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	605a      	str	r2, [r3, #4]
 80046c2:	609a      	str	r2, [r3, #8]
 80046c4:	60da      	str	r2, [r3, #12]
 80046c6:	611a      	str	r2, [r3, #16]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	4a78      	ldr	r2, [pc, #480]	@ (80048b0 <HAL_UART_MspInit+0x200>)
 80046ce:	4293      	cmp	r3, r2
 80046d0:	f040 8083 	bne.w	80047da <HAL_UART_MspInit+0x12a>
 80046d4:	2300      	movs	r3, #0
 80046d6:	623b      	str	r3, [r7, #32]
 80046d8:	4b76      	ldr	r3, [pc, #472]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046dc:	4a75      	ldr	r2, [pc, #468]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046de:	f043 0310 	orr.w	r3, r3, #16
 80046e2:	6453      	str	r3, [r2, #68]	@ 0x44
 80046e4:	4b73      	ldr	r3, [pc, #460]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80046e8:	f003 0310 	and.w	r3, r3, #16
 80046ec:	623b      	str	r3, [r7, #32]
 80046ee:	6a3b      	ldr	r3, [r7, #32]
 80046f0:	2300      	movs	r3, #0
 80046f2:	61fb      	str	r3, [r7, #28]
 80046f4:	4b6f      	ldr	r3, [pc, #444]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80046f8:	4a6e      	ldr	r2, [pc, #440]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80046fa:	f043 0302 	orr.w	r3, r3, #2
 80046fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8004700:	4b6c      	ldr	r3, [pc, #432]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004702:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004704:	f003 0302 	and.w	r3, r3, #2
 8004708:	61fb      	str	r3, [r7, #28]
 800470a:	69fb      	ldr	r3, [r7, #28]
 800470c:	2300      	movs	r3, #0
 800470e:	61bb      	str	r3, [r7, #24]
 8004710:	4b68      	ldr	r3, [pc, #416]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004714:	4a67      	ldr	r2, [pc, #412]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004716:	f043 0301 	orr.w	r3, r3, #1
 800471a:	6313      	str	r3, [r2, #48]	@ 0x30
 800471c:	4b65      	ldr	r3, [pc, #404]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800471e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004720:	f003 0301 	and.w	r3, r3, #1
 8004724:	61bb      	str	r3, [r7, #24]
 8004726:	69bb      	ldr	r3, [r7, #24]
 8004728:	2380      	movs	r3, #128	@ 0x80
 800472a:	627b      	str	r3, [r7, #36]	@ 0x24
 800472c:	2302      	movs	r3, #2
 800472e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004730:	2300      	movs	r3, #0
 8004732:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004734:	2303      	movs	r3, #3
 8004736:	633b      	str	r3, [r7, #48]	@ 0x30
 8004738:	2307      	movs	r3, #7
 800473a:	637b      	str	r3, [r7, #52]	@ 0x34
 800473c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004740:	4619      	mov	r1, r3
 8004742:	485d      	ldr	r0, [pc, #372]	@ (80048b8 <HAL_UART_MspInit+0x208>)
 8004744:	f00b f86c 	bl	800f820 <HAL_GPIO_Init>
 8004748:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800474c:	627b      	str	r3, [r7, #36]	@ 0x24
 800474e:	2302      	movs	r3, #2
 8004750:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004752:	2300      	movs	r3, #0
 8004754:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004756:	2303      	movs	r3, #3
 8004758:	633b      	str	r3, [r7, #48]	@ 0x30
 800475a:	2307      	movs	r3, #7
 800475c:	637b      	str	r3, [r7, #52]	@ 0x34
 800475e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004762:	4619      	mov	r1, r3
 8004764:	4855      	ldr	r0, [pc, #340]	@ (80048bc <HAL_UART_MspInit+0x20c>)
 8004766:	f00b f85b 	bl	800f820 <HAL_GPIO_Init>
 800476a:	4b55      	ldr	r3, [pc, #340]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800476c:	4a55      	ldr	r2, [pc, #340]	@ (80048c4 <HAL_UART_MspInit+0x214>)
 800476e:	601a      	str	r2, [r3, #0]
 8004770:	4b53      	ldr	r3, [pc, #332]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004772:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8004776:	605a      	str	r2, [r3, #4]
 8004778:	4b51      	ldr	r3, [pc, #324]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800477a:	2200      	movs	r2, #0
 800477c:	609a      	str	r2, [r3, #8]
 800477e:	4b50      	ldr	r3, [pc, #320]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004780:	2200      	movs	r2, #0
 8004782:	60da      	str	r2, [r3, #12]
 8004784:	4b4e      	ldr	r3, [pc, #312]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004786:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800478a:	611a      	str	r2, [r3, #16]
 800478c:	4b4c      	ldr	r3, [pc, #304]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800478e:	2200      	movs	r2, #0
 8004790:	615a      	str	r2, [r3, #20]
 8004792:	4b4b      	ldr	r3, [pc, #300]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 8004794:	2200      	movs	r2, #0
 8004796:	619a      	str	r2, [r3, #24]
 8004798:	4b49      	ldr	r3, [pc, #292]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 800479a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800479e:	61da      	str	r2, [r3, #28]
 80047a0:	4b47      	ldr	r3, [pc, #284]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a2:	2200      	movs	r2, #0
 80047a4:	621a      	str	r2, [r3, #32]
 80047a6:	4b46      	ldr	r3, [pc, #280]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047a8:	2200      	movs	r2, #0
 80047aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80047ac:	4844      	ldr	r0, [pc, #272]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047ae:	f00a fc29 	bl	800f004 <HAL_DMA_Init>
 80047b2:	4603      	mov	r3, r0
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d001      	beq.n	80047bc <HAL_UART_MspInit+0x10c>
 80047b8:	f7ff f81e 	bl	80037f8 <Error_Handler>
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	4a40      	ldr	r2, [pc, #256]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c0:	639a      	str	r2, [r3, #56]	@ 0x38
 80047c2:	4a3f      	ldr	r2, [pc, #252]	@ (80048c0 <HAL_UART_MspInit+0x210>)
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6393      	str	r3, [r2, #56]	@ 0x38
 80047c8:	2200      	movs	r2, #0
 80047ca:	2105      	movs	r1, #5
 80047cc:	2025      	movs	r0, #37	@ 0x25
 80047ce:	f00a fbe1 	bl	800ef94 <HAL_NVIC_SetPriority>
 80047d2:	2025      	movs	r0, #37	@ 0x25
 80047d4:	f00a fbfa 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80047d8:	e116      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80047da:	687b      	ldr	r3, [r7, #4]
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a3a      	ldr	r2, [pc, #232]	@ (80048c8 <HAL_UART_MspInit+0x218>)
 80047e0:	4293      	cmp	r3, r2
 80047e2:	d179      	bne.n	80048d8 <HAL_UART_MspInit+0x228>
 80047e4:	2300      	movs	r3, #0
 80047e6:	617b      	str	r3, [r7, #20]
 80047e8:	4b32      	ldr	r3, [pc, #200]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047ec:	4a31      	ldr	r2, [pc, #196]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047ee:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80047f2:	6413      	str	r3, [r2, #64]	@ 0x40
 80047f4:	4b2f      	ldr	r3, [pc, #188]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 80047f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80047f8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80047fc:	617b      	str	r3, [r7, #20]
 80047fe:	697b      	ldr	r3, [r7, #20]
 8004800:	2300      	movs	r3, #0
 8004802:	613b      	str	r3, [r7, #16]
 8004804:	4b2b      	ldr	r3, [pc, #172]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004806:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004808:	4a2a      	ldr	r2, [pc, #168]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 800480a:	f043 0304 	orr.w	r3, r3, #4
 800480e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004810:	4b28      	ldr	r3, [pc, #160]	@ (80048b4 <HAL_UART_MspInit+0x204>)
 8004812:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004814:	f003 0304 	and.w	r3, r3, #4
 8004818:	613b      	str	r3, [r7, #16]
 800481a:	693b      	ldr	r3, [r7, #16]
 800481c:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004820:	627b      	str	r3, [r7, #36]	@ 0x24
 8004822:	2302      	movs	r3, #2
 8004824:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004826:	2300      	movs	r3, #0
 8004828:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800482a:	2303      	movs	r3, #3
 800482c:	633b      	str	r3, [r7, #48]	@ 0x30
 800482e:	2307      	movs	r3, #7
 8004830:	637b      	str	r3, [r7, #52]	@ 0x34
 8004832:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004836:	4619      	mov	r1, r3
 8004838:	4824      	ldr	r0, [pc, #144]	@ (80048cc <HAL_UART_MspInit+0x21c>)
 800483a:	f00a fff1 	bl	800f820 <HAL_GPIO_Init>
 800483e:	4b24      	ldr	r3, [pc, #144]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004840:	4a24      	ldr	r2, [pc, #144]	@ (80048d4 <HAL_UART_MspInit+0x224>)
 8004842:	601a      	str	r2, [r3, #0]
 8004844:	4b22      	ldr	r3, [pc, #136]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004846:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800484a:	605a      	str	r2, [r3, #4]
 800484c:	4b20      	ldr	r3, [pc, #128]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800484e:	2200      	movs	r2, #0
 8004850:	609a      	str	r2, [r3, #8]
 8004852:	4b1f      	ldr	r3, [pc, #124]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004854:	2200      	movs	r2, #0
 8004856:	60da      	str	r2, [r3, #12]
 8004858:	4b1d      	ldr	r3, [pc, #116]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800485a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800485e:	611a      	str	r2, [r3, #16]
 8004860:	4b1b      	ldr	r3, [pc, #108]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004862:	2200      	movs	r2, #0
 8004864:	615a      	str	r2, [r3, #20]
 8004866:	4b1a      	ldr	r3, [pc, #104]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004868:	2200      	movs	r2, #0
 800486a:	619a      	str	r2, [r3, #24]
 800486c:	4b18      	ldr	r3, [pc, #96]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800486e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004872:	61da      	str	r2, [r3, #28]
 8004874:	4b16      	ldr	r3, [pc, #88]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004876:	2200      	movs	r2, #0
 8004878:	621a      	str	r2, [r3, #32]
 800487a:	4b15      	ldr	r3, [pc, #84]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 800487c:	2200      	movs	r2, #0
 800487e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004880:	4813      	ldr	r0, [pc, #76]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004882:	f00a fbbf 	bl	800f004 <HAL_DMA_Init>
 8004886:	4603      	mov	r3, r0
 8004888:	2b00      	cmp	r3, #0
 800488a:	d001      	beq.n	8004890 <HAL_UART_MspInit+0x1e0>
 800488c:	f7fe ffb4 	bl	80037f8 <Error_Handler>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	4a0f      	ldr	r2, [pc, #60]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004894:	639a      	str	r2, [r3, #56]	@ 0x38
 8004896:	4a0e      	ldr	r2, [pc, #56]	@ (80048d0 <HAL_UART_MspInit+0x220>)
 8004898:	687b      	ldr	r3, [r7, #4]
 800489a:	6393      	str	r3, [r2, #56]	@ 0x38
 800489c:	2200      	movs	r2, #0
 800489e:	2105      	movs	r1, #5
 80048a0:	2027      	movs	r0, #39	@ 0x27
 80048a2:	f00a fb77 	bl	800ef94 <HAL_NVIC_SetPriority>
 80048a6:	2027      	movs	r0, #39	@ 0x27
 80048a8:	f00a fb90 	bl	800efcc <HAL_NVIC_EnableIRQ>
 80048ac:	e0ac      	b.n	8004a08 <HAL_UART_MspInit+0x358>
 80048ae:	bf00      	nop
 80048b0:	40011000 	.word	0x40011000
 80048b4:	40023800 	.word	0x40023800
 80048b8:	40020400 	.word	0x40020400
 80048bc:	40020000 	.word	0x40020000
 80048c0:	20001ce4 	.word	0x20001ce4
 80048c4:	40026488 	.word	0x40026488
 80048c8:	40004800 	.word	0x40004800
 80048cc:	40020800 	.word	0x40020800
 80048d0:	20001d44 	.word	0x20001d44
 80048d4:	40026028 	.word	0x40026028
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	681b      	ldr	r3, [r3, #0]
 80048dc:	4a4c      	ldr	r2, [pc, #304]	@ (8004a10 <HAL_UART_MspInit+0x360>)
 80048de:	4293      	cmp	r3, r2
 80048e0:	f040 8092 	bne.w	8004a08 <HAL_UART_MspInit+0x358>
 80048e4:	2300      	movs	r3, #0
 80048e6:	60fb      	str	r3, [r7, #12]
 80048e8:	4b4a      	ldr	r3, [pc, #296]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048ec:	4a49      	ldr	r2, [pc, #292]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048ee:	f043 0320 	orr.w	r3, r3, #32
 80048f2:	6453      	str	r3, [r2, #68]	@ 0x44
 80048f4:	4b47      	ldr	r3, [pc, #284]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 80048f6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80048f8:	f003 0320 	and.w	r3, r3, #32
 80048fc:	60fb      	str	r3, [r7, #12]
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	2300      	movs	r3, #0
 8004902:	60bb      	str	r3, [r7, #8]
 8004904:	4b43      	ldr	r3, [pc, #268]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004906:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004908:	4a42      	ldr	r2, [pc, #264]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 800490a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800490e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004910:	4b40      	ldr	r3, [pc, #256]	@ (8004a14 <HAL_UART_MspInit+0x364>)
 8004912:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004914:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004918:	60bb      	str	r3, [r7, #8]
 800491a:	68bb      	ldr	r3, [r7, #8]
 800491c:	f44f 4384 	mov.w	r3, #16896	@ 0x4200
 8004920:	627b      	str	r3, [r7, #36]	@ 0x24
 8004922:	2302      	movs	r3, #2
 8004924:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004926:	2300      	movs	r3, #0
 8004928:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800492a:	2303      	movs	r3, #3
 800492c:	633b      	str	r3, [r7, #48]	@ 0x30
 800492e:	2308      	movs	r3, #8
 8004930:	637b      	str	r3, [r7, #52]	@ 0x34
 8004932:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8004936:	4619      	mov	r1, r3
 8004938:	4837      	ldr	r0, [pc, #220]	@ (8004a18 <HAL_UART_MspInit+0x368>)
 800493a:	f00a ff71 	bl	800f820 <HAL_GPIO_Init>
 800493e:	4b37      	ldr	r3, [pc, #220]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004940:	4a37      	ldr	r2, [pc, #220]	@ (8004a20 <HAL_UART_MspInit+0x370>)
 8004942:	601a      	str	r2, [r3, #0]
 8004944:	4b35      	ldr	r3, [pc, #212]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004946:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 800494a:	605a      	str	r2, [r3, #4]
 800494c:	4b33      	ldr	r3, [pc, #204]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800494e:	2200      	movs	r2, #0
 8004950:	609a      	str	r2, [r3, #8]
 8004952:	4b32      	ldr	r3, [pc, #200]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004954:	2200      	movs	r2, #0
 8004956:	60da      	str	r2, [r3, #12]
 8004958:	4b30      	ldr	r3, [pc, #192]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800495a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800495e:	611a      	str	r2, [r3, #16]
 8004960:	4b2e      	ldr	r3, [pc, #184]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004962:	2200      	movs	r2, #0
 8004964:	615a      	str	r2, [r3, #20]
 8004966:	4b2d      	ldr	r3, [pc, #180]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004968:	2200      	movs	r2, #0
 800496a:	619a      	str	r2, [r3, #24]
 800496c:	4b2b      	ldr	r3, [pc, #172]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800496e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8004972:	61da      	str	r2, [r3, #28]
 8004974:	4b29      	ldr	r3, [pc, #164]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004976:	2200      	movs	r2, #0
 8004978:	621a      	str	r2, [r3, #32]
 800497a:	4b28      	ldr	r3, [pc, #160]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 800497c:	2200      	movs	r2, #0
 800497e:	625a      	str	r2, [r3, #36]	@ 0x24
 8004980:	4826      	ldr	r0, [pc, #152]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004982:	f00a fb3f 	bl	800f004 <HAL_DMA_Init>
 8004986:	4603      	mov	r3, r0
 8004988:	2b00      	cmp	r3, #0
 800498a:	d001      	beq.n	8004990 <HAL_UART_MspInit+0x2e0>
 800498c:	f7fe ff34 	bl	80037f8 <Error_Handler>
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	4a22      	ldr	r2, [pc, #136]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004994:	639a      	str	r2, [r3, #56]	@ 0x38
 8004996:	4a21      	ldr	r2, [pc, #132]	@ (8004a1c <HAL_UART_MspInit+0x36c>)
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	6393      	str	r3, [r2, #56]	@ 0x38
 800499c:	4b21      	ldr	r3, [pc, #132]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 800499e:	4a22      	ldr	r2, [pc, #136]	@ (8004a28 <HAL_UART_MspInit+0x378>)
 80049a0:	601a      	str	r2, [r3, #0]
 80049a2:	4b20      	ldr	r3, [pc, #128]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049a4:	f04f 6220 	mov.w	r2, #167772160	@ 0xa000000
 80049a8:	605a      	str	r2, [r3, #4]
 80049aa:	4b1e      	ldr	r3, [pc, #120]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049ac:	2240      	movs	r2, #64	@ 0x40
 80049ae:	609a      	str	r2, [r3, #8]
 80049b0:	4b1c      	ldr	r3, [pc, #112]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b2:	2200      	movs	r2, #0
 80049b4:	60da      	str	r2, [r3, #12]
 80049b6:	4b1b      	ldr	r3, [pc, #108]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049b8:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80049bc:	611a      	str	r2, [r3, #16]
 80049be:	4b19      	ldr	r3, [pc, #100]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c0:	2200      	movs	r2, #0
 80049c2:	615a      	str	r2, [r3, #20]
 80049c4:	4b17      	ldr	r3, [pc, #92]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049c6:	2200      	movs	r2, #0
 80049c8:	619a      	str	r2, [r3, #24]
 80049ca:	4b16      	ldr	r3, [pc, #88]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049cc:	2200      	movs	r2, #0
 80049ce:	61da      	str	r2, [r3, #28]
 80049d0:	4b14      	ldr	r3, [pc, #80]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d2:	2200      	movs	r2, #0
 80049d4:	621a      	str	r2, [r3, #32]
 80049d6:	4b13      	ldr	r3, [pc, #76]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049d8:	2200      	movs	r2, #0
 80049da:	625a      	str	r2, [r3, #36]	@ 0x24
 80049dc:	4811      	ldr	r0, [pc, #68]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049de:	f00a fb11 	bl	800f004 <HAL_DMA_Init>
 80049e2:	4603      	mov	r3, r0
 80049e4:	2b00      	cmp	r3, #0
 80049e6:	d001      	beq.n	80049ec <HAL_UART_MspInit+0x33c>
 80049e8:	f7fe ff06 	bl	80037f8 <Error_Handler>
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	4a0d      	ldr	r2, [pc, #52]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f0:	635a      	str	r2, [r3, #52]	@ 0x34
 80049f2:	4a0c      	ldr	r2, [pc, #48]	@ (8004a24 <HAL_UART_MspInit+0x374>)
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	6393      	str	r3, [r2, #56]	@ 0x38
 80049f8:	2200      	movs	r2, #0
 80049fa:	2105      	movs	r1, #5
 80049fc:	2047      	movs	r0, #71	@ 0x47
 80049fe:	f00a fac9 	bl	800ef94 <HAL_NVIC_SetPriority>
 8004a02:	2047      	movs	r0, #71	@ 0x47
 8004a04:	f00a fae2 	bl	800efcc <HAL_NVIC_EnableIRQ>
 8004a08:	bf00      	nop
 8004a0a:	3738      	adds	r7, #56	@ 0x38
 8004a0c:	46bd      	mov	sp, r7
 8004a0e:	bd80      	pop	{r7, pc}
 8004a10:	40011400 	.word	0x40011400
 8004a14:	40023800 	.word	0x40023800
 8004a18:	40021800 	.word	0x40021800
 8004a1c:	20001da4 	.word	0x20001da4
 8004a20:	40026428 	.word	0x40026428
 8004a24:	20001e04 	.word	0x20001e04
 8004a28:	400264a0 	.word	0x400264a0

08004a2c <Reset_Handler>:
 8004a2c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8004a64 <LoopFillZerobss+0x14>
 8004a30:	2100      	movs	r1, #0
 8004a32:	e003      	b.n	8004a3c <LoopCopyDataInit>

08004a34 <CopyDataInit>:
 8004a34:	4b0c      	ldr	r3, [pc, #48]	@ (8004a68 <LoopFillZerobss+0x18>)
 8004a36:	585b      	ldr	r3, [r3, r1]
 8004a38:	5043      	str	r3, [r0, r1]
 8004a3a:	3104      	adds	r1, #4

08004a3c <LoopCopyDataInit>:
 8004a3c:	480b      	ldr	r0, [pc, #44]	@ (8004a6c <LoopFillZerobss+0x1c>)
 8004a3e:	4b0c      	ldr	r3, [pc, #48]	@ (8004a70 <LoopFillZerobss+0x20>)
 8004a40:	1842      	adds	r2, r0, r1
 8004a42:	429a      	cmp	r2, r3
 8004a44:	d3f6      	bcc.n	8004a34 <CopyDataInit>
 8004a46:	4a0b      	ldr	r2, [pc, #44]	@ (8004a74 <LoopFillZerobss+0x24>)
 8004a48:	e002      	b.n	8004a50 <LoopFillZerobss>

08004a4a <FillZerobss>:
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	f842 3b04 	str.w	r3, [r2], #4

08004a50 <LoopFillZerobss>:
 8004a50:	4b09      	ldr	r3, [pc, #36]	@ (8004a78 <LoopFillZerobss+0x28>)
 8004a52:	429a      	cmp	r2, r3
 8004a54:	d3f9      	bcc.n	8004a4a <FillZerobss>
 8004a56:	f7ff fa77 	bl	8003f48 <SystemInit>
 8004a5a:	f019 f83b 	bl	801dad4 <__libc_init_array>
 8004a5e:	f7fe fe1f 	bl	80036a0 <main>
 8004a62:	4770      	bx	lr
 8004a64:	20020000 	.word	0x20020000
 8004a68:	08025414 	.word	0x08025414
 8004a6c:	20000000 	.word	0x20000000
 8004a70:	20000808 	.word	0x20000808
 8004a74:	20000808 	.word	0x20000808
 8004a78:	2000d658 	.word	0x2000d658

08004a7c <ADC_IRQHandler>:
 8004a7c:	e7fe      	b.n	8004a7c <ADC_IRQHandler>

08004a7e <PID_Init>:
#include "typedefs.h"




void PID_Init(PID *pid, double kp, double ki, double kd, double min_output, double max_output) {
 8004a7e:	b480      	push	{r7}
 8004a80:	b08d      	sub	sp, #52	@ 0x34
 8004a82:	af00      	add	r7, sp, #0
 8004a84:	62f8      	str	r0, [r7, #44]	@ 0x2c
 8004a86:	ed87 0b08 	vstr	d0, [r7, #32]
 8004a8a:	ed87 1b06 	vstr	d1, [r7, #24]
 8004a8e:	ed87 2b04 	vstr	d2, [r7, #16]
 8004a92:	ed87 3b02 	vstr	d3, [r7, #8]
 8004a96:	ed87 4b00 	vstr	d4, [r7]
    pid->kp = kp;
 8004a9a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004a9c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004aa0:	e9c1 2300 	strd	r2, r3, [r1]
    pid->ki = ki;
 8004aa4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aa6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004aaa:	e9c1 2302 	strd	r2, r3, [r1, #8]
    pid->kd = kd;
 8004aae:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ab0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004ab4:	e9c1 2304 	strd	r2, r3, [r1, #16]
    pid->prev_error = 0;
 8004ab8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004aba:	f04f 0200 	mov.w	r2, #0
 8004abe:	f04f 0300 	mov.w	r3, #0
 8004ac2:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->integral = 0;
 8004ac6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ac8:	f04f 0200 	mov.w	r2, #0
 8004acc:	f04f 0300 	mov.w	r3, #0
 8004ad0:	e9c1 2308 	strd	r2, r3, [r1, #32]
    pid->max_output = max_output;
 8004ad4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ad6:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004ada:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    pid->min_output = min_output;
 8004ade:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004ae0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004ae4:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
}
 8004ae8:	bf00      	nop
 8004aea:	3734      	adds	r7, #52	@ 0x34
 8004aec:	46bd      	mov	sp, r7
 8004aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af2:	4770      	bx	lr

08004af4 <PID_Compute>:

double PID_Compute(PID *pid, double setpoint, double measured_value, double dt, double deadzone) {
 8004af4:	b5b0      	push	{r4, r5, r7, lr}
 8004af6:	b090      	sub	sp, #64	@ 0x40
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	6278      	str	r0, [r7, #36]	@ 0x24
 8004afc:	ed87 0b06 	vstr	d0, [r7, #24]
 8004b00:	ed87 1b04 	vstr	d1, [r7, #16]
 8004b04:	ed87 2b02 	vstr	d2, [r7, #8]
 8004b08:	ed87 3b00 	vstr	d3, [r7]
    double error = setpoint - measured_value;
 8004b0c:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8004b10:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004b14:	f7fb fbb8 	bl	8000288 <__aeabi_dsub>
 8004b18:	4602      	mov	r2, r0
 8004b1a:	460b      	mov	r3, r1
 8004b1c:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    if (error < deadzone && error > -deadzone ){
 8004b20:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004b24:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b28:	f7fb ffd8 	bl	8000adc <__aeabi_dcmplt>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d012      	beq.n	8004b58 <PID_Compute+0x64>
 8004b32:	683c      	ldr	r4, [r7, #0]
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 8004b3a:	4622      	mov	r2, r4
 8004b3c:	462b      	mov	r3, r5
 8004b3e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b42:	f7fb ffe9 	bl	8000b18 <__aeabi_dcmpgt>
 8004b46:	4603      	mov	r3, r0
 8004b48:	2b00      	cmp	r3, #0
 8004b4a:	d005      	beq.n	8004b58 <PID_Compute+0x64>
    	error = 0.0;
 8004b4c:	f04f 0200 	mov.w	r2, #0
 8004b50:	f04f 0300 	mov.w	r3, #0
 8004b54:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
    }
    pid->integral += error * dt;
 8004b58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b5a:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 8004b5e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b62:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b66:	f7fb fd47 	bl	80005f8 <__aeabi_dmul>
 8004b6a:	4602      	mov	r2, r0
 8004b6c:	460b      	mov	r3, r1
 8004b6e:	4620      	mov	r0, r4
 8004b70:	4629      	mov	r1, r5
 8004b72:	f7fb fb8b 	bl	800028c <__adddf3>
 8004b76:	4602      	mov	r2, r0
 8004b78:	460b      	mov	r3, r1
 8004b7a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004b7c:	e9c1 2308 	strd	r2, r3, [r1, #32]
    double derivative = (error - pid->prev_error) / dt;
 8004b80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b82:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8004b86:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8004b8a:	f7fb fb7d 	bl	8000288 <__aeabi_dsub>
 8004b8e:	4602      	mov	r2, r0
 8004b90:	460b      	mov	r3, r1
 8004b92:	4610      	mov	r0, r2
 8004b94:	4619      	mov	r1, r3
 8004b96:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004b9a:	f7fb fe57 	bl	800084c <__aeabi_ddiv>
 8004b9e:	4602      	mov	r2, r0
 8004ba0:	460b      	mov	r3, r1
 8004ba2:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
    double output = pid->kp * error + pid->ki * pid->integral + pid->kd * derivative;
 8004ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ba8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8004bac:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004bb0:	f7fb fd22 	bl	80005f8 <__aeabi_dmul>
 8004bb4:	4602      	mov	r2, r0
 8004bb6:	460b      	mov	r3, r1
 8004bb8:	4614      	mov	r4, r2
 8004bba:	461d      	mov	r5, r3
 8004bbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bbe:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8004bc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bc4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004bc8:	f7fb fd16 	bl	80005f8 <__aeabi_dmul>
 8004bcc:	4602      	mov	r2, r0
 8004bce:	460b      	mov	r3, r1
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	4629      	mov	r1, r5
 8004bd4:	f7fb fb5a 	bl	800028c <__adddf3>
 8004bd8:	4602      	mov	r2, r0
 8004bda:	460b      	mov	r3, r1
 8004bdc:	4614      	mov	r4, r2
 8004bde:	461d      	mov	r5, r3
 8004be0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004be2:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8004be6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004bea:	f7fb fd05 	bl	80005f8 <__aeabi_dmul>
 8004bee:	4602      	mov	r2, r0
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	4629      	mov	r1, r5
 8004bf6:	f7fb fb49 	bl	800028c <__adddf3>
 8004bfa:	4602      	mov	r2, r0
 8004bfc:	460b      	mov	r3, r1
 8004bfe:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30

    // Clamp the output to the specified max and min limits
    if (output > pid->max_output) {
 8004c02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c04:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c08:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c0c:	f7fb ff84 	bl	8000b18 <__aeabi_dcmpgt>
 8004c10:	4603      	mov	r3, r0
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d005      	beq.n	8004c22 <PID_Compute+0x12e>
        output = pid->max_output;
 8004c16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c18:	e9d3 230a 	ldrd	r2, r3, [r3, #40]	@ 0x28
 8004c1c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8004c20:	e00e      	b.n	8004c40 <PID_Compute+0x14c>
    } else if (output < pid->min_output) {
 8004c22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c24:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c28:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8004c2c:	f7fb ff56 	bl	8000adc <__aeabi_dcmplt>
 8004c30:	4603      	mov	r3, r0
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d004      	beq.n	8004c40 <PID_Compute+0x14c>
        output = pid->min_output;
 8004c36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c38:	e9d3 230c 	ldrd	r2, r3, [r3, #48]	@ 0x30
 8004c3c:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
    }

    pid->prev_error = error;
 8004c40:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c42:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004c46:	e9c1 2306 	strd	r2, r3, [r1, #24]
    pid->output =  output;
 8004c4a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8004c4c:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8004c50:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
}
 8004c54:	bf00      	nop
 8004c56:	eeb0 0a47 	vmov.f32	s0, s14
 8004c5a:	eef0 0a67 	vmov.f32	s1, s15
 8004c5e:	3740      	adds	r7, #64	@ 0x40
 8004c60:	46bd      	mov	sp, r7
 8004c62:	bdb0      	pop	{r4, r5, r7, pc}
 8004c64:	0000      	movs	r0, r0
	...

08004c68 <balancing_task>:
double k_check[12] = {0};
float check_x = 0;
double leftJointTorque_check[2];
double rightJointTorque_check[2];

void balancing_task(void *argument) {
 8004c68:	b5b0      	push	{r4, r5, r7, lr}
 8004c6a:	b08a      	sub	sp, #40	@ 0x28
 8004c6c:	af00      	add	r7, sp, #0
 8004c6e:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 8004c70:	f04f 0200 	mov.w	r2, #0
 8004c74:	f04f 0300 	mov.w	r3, #0
 8004c78:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double endtime = 0;
 8004c7c:	f04f 0200 	mov.w	r2, #0
 8004c80:	f04f 0300 	mov.w	r3, #0
 8004c84:	e9c7 2306 	strd	r2, r3, [r7, #24]
	double dt;
    TickType_t start_time;
    Ctrl_Init();
 8004c88:	f001 fc42 	bl	8006510 <Ctrl_Init>
//    Ctrl_StandupPrepareTask();
    while (1) {
        endtime = get_microseconds();
 8004c8c:	f7fd fa98 	bl	80021c0 <get_microseconds>
 8004c90:	4603      	mov	r3, r0
 8004c92:	4618      	mov	r0, r3
 8004c94:	f7fb fc36 	bl	8000504 <__aeabi_ui2d>
 8004c98:	4602      	mov	r2, r0
 8004c9a:	460b      	mov	r3, r1
 8004c9c:	e9c7 2306 	strd	r2, r3, [r7, #24]
        dt = endtime - starttime;
 8004ca0:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004ca4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8004ca8:	f7fb faee 	bl	8000288 <__aeabi_dsub>
 8004cac:	4602      	mov	r2, r0
 8004cae:	460b      	mov	r3, r1
 8004cb0:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 8004cb4:	f016 fa9a 	bl	801b1ec <xTaskGetTickCount>
 8004cb8:	4603      	mov	r3, r0
 8004cba:	60fb      	str	r3, [r7, #12]
        starttime = get_microseconds();
 8004cbc:	f7fd fa80 	bl	80021c0 <get_microseconds>
 8004cc0:	4603      	mov	r3, r0
 8004cc2:	4618      	mov	r0, r3
 8004cc4:	f7fb fc1e 	bl	8000504 <__aeabi_ui2d>
 8004cc8:	4602      	mov	r2, r0
 8004cca:	460b      	mov	r3, r1
 8004ccc:	e9c7 2308 	strd	r2, r3, [r7, #32]
        /////////leftjoint[1] = phi1 = 8
        // leftjoint[0] =phi4= 9

        //rightjoint[1] = phi1 = 17
        //rightjoint[0] = phi4 = 16
        target.speedCmd = ((float)g_remote_cmd.left_y/660)*1.0f;
 8004cd0:	4b81      	ldr	r3, [pc, #516]	@ (8004ed8 <balancing_task+0x270>)
 8004cd2:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8004cd6:	ee07 3a90 	vmov	s15, r3
 8004cda:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004cde:	eddf 6a7f 	vldr	s13, [pc, #508]	@ 8004edc <balancing_task+0x274>
 8004ce2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004ce6:	4b7e      	ldr	r3, [pc, #504]	@ (8004ee0 <balancing_task+0x278>)
 8004ce8:	edc3 7a01 	vstr	s15, [r3, #4]
        target.yawSpeedCmd = -((float)g_remote_cmd.left_x/660)*2.0f;
 8004cec:	4b7a      	ldr	r3, [pc, #488]	@ (8004ed8 <balancing_task+0x270>)
 8004cee:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8004cf2:	ee07 3a90 	vmov	s15, r3
 8004cf6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004cfa:	eddf 6a78 	vldr	s13, [pc, #480]	@ 8004edc <balancing_task+0x274>
 8004cfe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004d02:	eef1 7a67 	vneg.f32	s15, s15
 8004d06:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8004d0a:	4b75      	ldr	r3, [pc, #468]	@ (8004ee0 <balancing_task+0x278>)
 8004d0c:	edc3 7a03 	vstr	s15, [r3, #12]
        target.legLength = ((float)g_remote_cmd.right_y/660)*0.04 + 0.16f;
 8004d10:	4b71      	ldr	r3, [pc, #452]	@ (8004ed8 <balancing_task+0x270>)
 8004d12:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004d16:	ee07 3a90 	vmov	s15, r3
 8004d1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d1e:	ed9f 7a6f 	vldr	s14, [pc, #444]	@ 8004edc <balancing_task+0x274>
 8004d22:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8004d26:	ee16 0a90 	vmov	r0, s13
 8004d2a:	f7fb fc0d 	bl	8000548 <__aeabi_f2d>
 8004d2e:	a362      	add	r3, pc, #392	@ (adr r3, 8004eb8 <balancing_task+0x250>)
 8004d30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d34:	f7fb fc60 	bl	80005f8 <__aeabi_dmul>
 8004d38:	4602      	mov	r2, r0
 8004d3a:	460b      	mov	r3, r1
 8004d3c:	4610      	mov	r0, r2
 8004d3e:	4619      	mov	r1, r3
 8004d40:	a35f      	add	r3, pc, #380	@ (adr r3, 8004ec0 <balancing_task+0x258>)
 8004d42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004d46:	f7fb faa1 	bl	800028c <__adddf3>
 8004d4a:	4602      	mov	r2, r0
 8004d4c:	460b      	mov	r3, r1
 8004d4e:	4610      	mov	r0, r2
 8004d50:	4619      	mov	r1, r3
 8004d52:	f7fb ff49 	bl	8000be8 <__aeabi_d2f>
 8004d56:	4603      	mov	r3, r0
 8004d58:	4a61      	ldr	r2, [pc, #388]	@ (8004ee0 <balancing_task+0x278>)
 8004d5a:	6193      	str	r3, [r2, #24]
        leftJoint[1].angle = (double)g_can_motors[4].angle_rad;
 8004d5c:	4b61      	ldr	r3, [pc, #388]	@ (8004ee4 <balancing_task+0x27c>)
 8004d5e:	f8d3 33d8 	ldr.w	r3, [r3, #984]	@ 0x3d8
 8004d62:	4618      	mov	r0, r3
 8004d64:	f7fb fbf0 	bl	8000548 <__aeabi_f2d>
 8004d68:	4602      	mov	r2, r0
 8004d6a:	460b      	mov	r3, r1
 8004d6c:	495e      	ldr	r1, [pc, #376]	@ (8004ee8 <balancing_task+0x280>)
 8004d6e:	e9c1 2314 	strd	r2, r3, [r1, #80]	@ 0x50
        leftJoint[1].speed = (double)g_can_motors[4].speed;
 8004d72:	4b5c      	ldr	r3, [pc, #368]	@ (8004ee4 <balancing_task+0x27c>)
 8004d74:	e9d3 23f8 	ldrd	r2, r3, [r3, #992]	@ 0x3e0
 8004d78:	495b      	ldr	r1, [pc, #364]	@ (8004ee8 <balancing_task+0x280>)
 8004d7a:	e9c1 2312 	strd	r2, r3, [r1, #72]	@ 0x48
        leftJoint[0].angle = (double)g_can_motors[5].angle_rad;
 8004d7e:	4b59      	ldr	r3, [pc, #356]	@ (8004ee4 <balancing_task+0x27c>)
 8004d80:	f503 6399 	add.w	r3, r3, #1224	@ 0x4c8
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	4618      	mov	r0, r3
 8004d88:	f7fb fbde 	bl	8000548 <__aeabi_f2d>
 8004d8c:	4602      	mov	r2, r0
 8004d8e:	460b      	mov	r3, r1
 8004d90:	4955      	ldr	r1, [pc, #340]	@ (8004ee8 <balancing_task+0x280>)
 8004d92:	e9c1 2302 	strd	r2, r3, [r1, #8]
        leftJoint[0].speed = (double)g_can_motors[5].speed;
 8004d96:	4b53      	ldr	r3, [pc, #332]	@ (8004ee4 <balancing_task+0x27c>)
 8004d98:	f503 639a 	add.w	r3, r3, #1232	@ 0x4d0
 8004d9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004da0:	4951      	ldr	r1, [pc, #324]	@ (8004ee8 <balancing_task+0x280>)
 8004da2:	e9c1 2300 	strd	r2, r3, [r1]
        rightJoint[1].angle = (double)g_can_motors[6].angle_rad;
 8004da6:	4b4f      	ldr	r3, [pc, #316]	@ (8004ee4 <balancing_task+0x27c>)
 8004da8:	f503 63b7 	add.w	r3, r3, #1464	@ 0x5b8
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	4618      	mov	r0, r3
 8004db0:	f7fb fbca 	bl	8000548 <__aeabi_f2d>
 8004db4:	4602      	mov	r2, r0
 8004db6:	460b      	mov	r3, r1
 8004db8:	494c      	ldr	r1, [pc, #304]	@ (8004eec <balancing_task+0x284>)
 8004dba:	e9c1 2314 	strd	r2, r3, [r1, #80]	@ 0x50
        rightJoint[1].speed = (double)g_can_motors[6].speed;
 8004dbe:	4b49      	ldr	r3, [pc, #292]	@ (8004ee4 <balancing_task+0x27c>)
 8004dc0:	f503 63b8 	add.w	r3, r3, #1472	@ 0x5c0
 8004dc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004dc8:	4948      	ldr	r1, [pc, #288]	@ (8004eec <balancing_task+0x284>)
 8004dca:	e9c1 2312 	strd	r2, r3, [r1, #72]	@ 0x48
        rightJoint[0].angle = (double)g_can_motors[7].angle_rad;
 8004dce:	4b45      	ldr	r3, [pc, #276]	@ (8004ee4 <balancing_task+0x27c>)
 8004dd0:	f503 63d5 	add.w	r3, r3, #1704	@ 0x6a8
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	4618      	mov	r0, r3
 8004dd8:	f7fb fbb6 	bl	8000548 <__aeabi_f2d>
 8004ddc:	4602      	mov	r2, r0
 8004dde:	460b      	mov	r3, r1
 8004de0:	4942      	ldr	r1, [pc, #264]	@ (8004eec <balancing_task+0x284>)
 8004de2:	e9c1 2302 	strd	r2, r3, [r1, #8]
        rightJoint[0].speed = (double)g_can_motors[7].speed;
 8004de6:	4b3f      	ldr	r3, [pc, #252]	@ (8004ee4 <balancing_task+0x27c>)
 8004de8:	f503 63d6 	add.w	r3, r3, #1712	@ 0x6b0
 8004dec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004df0:	493e      	ldr	r1, [pc, #248]	@ (8004eec <balancing_task+0x284>)
 8004df2:	e9c1 2300 	strd	r2, r3, [r1]
        leftWheel.angle = (double)g_can_motors[0].angle_rad/19.2;
 8004df6:	4b3b      	ldr	r3, [pc, #236]	@ (8004ee4 <balancing_task+0x27c>)
 8004df8:	699b      	ldr	r3, [r3, #24]
 8004dfa:	4618      	mov	r0, r3
 8004dfc:	f7fb fba4 	bl	8000548 <__aeabi_f2d>
 8004e00:	a331      	add	r3, pc, #196	@ (adr r3, 8004ec8 <balancing_task+0x260>)
 8004e02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e06:	f7fb fd21 	bl	800084c <__aeabi_ddiv>
 8004e0a:	4602      	mov	r2, r0
 8004e0c:	460b      	mov	r3, r1
 8004e0e:	4938      	ldr	r1, [pc, #224]	@ (8004ef0 <balancing_task+0x288>)
 8004e10:	e9c1 2302 	strd	r2, r3, [r1, #8]
        rightWheel.angle = (double)g_can_motors[1].angle_rad/19.2;
 8004e14:	4b33      	ldr	r3, [pc, #204]	@ (8004ee4 <balancing_task+0x27c>)
 8004e16:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 8004e1a:	4618      	mov	r0, r3
 8004e1c:	f7fb fb94 	bl	8000548 <__aeabi_f2d>
 8004e20:	a329      	add	r3, pc, #164	@ (adr r3, 8004ec8 <balancing_task+0x260>)
 8004e22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e26:	f7fb fd11 	bl	800084c <__aeabi_ddiv>
 8004e2a:	4602      	mov	r2, r0
 8004e2c:	460b      	mov	r3, r1
 8004e2e:	4931      	ldr	r1, [pc, #196]	@ (8004ef4 <balancing_task+0x28c>)
 8004e30:	e9c1 2302 	strd	r2, r3, [r1, #8]
        leftWheel.speed = -(double)g_can_motors[0].raw_data.rpm * (2*PI/60) /19.2;
 8004e34:	4b2b      	ldr	r3, [pc, #172]	@ (8004ee4 <balancing_task+0x27c>)
 8004e36:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8004e3a:	4618      	mov	r0, r3
 8004e3c:	f7fb fb72 	bl	8000524 <__aeabi_i2d>
 8004e40:	4602      	mov	r2, r0
 8004e42:	460b      	mov	r3, r1
 8004e44:	4614      	mov	r4, r2
 8004e46:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 8004e4a:	a321      	add	r3, pc, #132	@ (adr r3, 8004ed0 <balancing_task+0x268>)
 8004e4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e50:	4620      	mov	r0, r4
 8004e52:	4629      	mov	r1, r5
 8004e54:	f7fb fbd0 	bl	80005f8 <__aeabi_dmul>
 8004e58:	4602      	mov	r2, r0
 8004e5a:	460b      	mov	r3, r1
 8004e5c:	4610      	mov	r0, r2
 8004e5e:	4619      	mov	r1, r3
 8004e60:	a319      	add	r3, pc, #100	@ (adr r3, 8004ec8 <balancing_task+0x260>)
 8004e62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e66:	f7fb fcf1 	bl	800084c <__aeabi_ddiv>
 8004e6a:	4602      	mov	r2, r0
 8004e6c:	460b      	mov	r3, r1
 8004e6e:	4920      	ldr	r1, [pc, #128]	@ (8004ef0 <balancing_task+0x288>)
 8004e70:	e9c1 2300 	strd	r2, r3, [r1]
        rightWheel.speed = (double)g_can_motors[1].raw_data.rpm * (2*PI/60) /19.2;
 8004e74:	4b1b      	ldr	r3, [pc, #108]	@ (8004ee4 <balancing_task+0x27c>)
 8004e76:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	@ 0xf8
 8004e7a:	4618      	mov	r0, r3
 8004e7c:	f7fb fb52 	bl	8000524 <__aeabi_i2d>
 8004e80:	a313      	add	r3, pc, #76	@ (adr r3, 8004ed0 <balancing_task+0x268>)
 8004e82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e86:	f7fb fbb7 	bl	80005f8 <__aeabi_dmul>
 8004e8a:	4602      	mov	r2, r0
 8004e8c:	460b      	mov	r3, r1
 8004e8e:	4610      	mov	r0, r2
 8004e90:	4619      	mov	r1, r3
 8004e92:	a30d      	add	r3, pc, #52	@ (adr r3, 8004ec8 <balancing_task+0x260>)
 8004e94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004e98:	f7fb fcd8 	bl	800084c <__aeabi_ddiv>
 8004e9c:	4602      	mov	r2, r0
 8004e9e:	460b      	mov	r3, r1
 8004ea0:	4914      	ldr	r1, [pc, #80]	@ (8004ef4 <balancing_task+0x28c>)
 8004ea2:	e9c1 2300 	strd	r2, r3, [r1]

        ///////////////////
        vTaskDelayUntil(&start_time, 4);
 8004ea6:	f107 030c 	add.w	r3, r7, #12
 8004eaa:	2104      	movs	r1, #4
 8004eac:	4618      	mov	r0, r3
 8004eae:	f015 ffc9 	bl	801ae44 <vTaskDelayUntil>
        endtime = get_microseconds();
 8004eb2:	bf00      	nop
 8004eb4:	e6ea      	b.n	8004c8c <balancing_task+0x24>
 8004eb6:	bf00      	nop
 8004eb8:	47ae147b 	.word	0x47ae147b
 8004ebc:	3fa47ae1 	.word	0x3fa47ae1
 8004ec0:	40000000 	.word	0x40000000
 8004ec4:	3fc47ae1 	.word	0x3fc47ae1
 8004ec8:	33333333 	.word	0x33333333
 8004ecc:	40333333 	.word	0x40333333
 8004ed0:	00000000 	.word	0x00000000
 8004ed4:	3fbaceea 	.word	0x3fbaceea
 8004ed8:	20000838 	.word	0x20000838
 8004edc:	44250000 	.word	0x44250000
 8004ee0:	20000008 	.word	0x20000008
 8004ee4:	20002220 	.word	0x20002220
 8004ee8:	20001e68 	.word	0x20001e68
 8004eec:	20001ef8 	.word	0x20001ef8
 8004ef0:	20001f88 	.word	0x20001f88
 8004ef4:	20001fd0 	.word	0x20001fd0

08004ef8 <Ctrl_TargetUpdateTask>:
    }
}
void Ctrl_TargetUpdateTask()
{
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b084      	sub	sp, #16
 8004efc:	af00      	add	r7, sp, #0
	TickType_t xLastWakeTime = xTaskGetTickCount();
 8004efe:	f016 f975 	bl	801b1ec <xTaskGetTickCount>
 8004f02:	4603      	mov	r3, r0
 8004f04:	607b      	str	r3, [r7, #4]
	float speedSlopeStep = 0.005f;
 8004f06:	4b72      	ldr	r3, [pc, #456]	@ (80050d0 <Ctrl_TargetUpdateTask+0x1d8>)
 8004f08:	60fb      	str	r3, [r7, #12]
	while(1){
		//根据当前腿长计算速度斜坡步长(腿越短越稳定，加减速斜率越大)
			float legLength = (leftLegPos.length + rightLegPos.length) / 2;
 8004f0a:	4b72      	ldr	r3, [pc, #456]	@ (80050d4 <Ctrl_TargetUpdateTask+0x1dc>)
 8004f0c:	ed93 7a01 	vldr	s14, [r3, #4]
 8004f10:	4b71      	ldr	r3, [pc, #452]	@ (80050d8 <Ctrl_TargetUpdateTask+0x1e0>)
 8004f12:	edd3 7a01 	vldr	s15, [r3, #4]
 8004f16:	ee37 7a27 	vadd.f32	s14, s14, s15
 8004f1a:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8004f1e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004f22:	edc7 7a02 	vstr	s15, [r7, #8]
			speedSlopeStep = -(legLength - 0.12f) * 0.03f + 0.005f;
 8004f26:	edd7 7a02 	vldr	s15, [r7, #8]
 8004f2a:	ed9f 7a6c 	vldr	s14, [pc, #432]	@ 80050dc <Ctrl_TargetUpdateTask+0x1e4>
 8004f2e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004f32:	eef1 7a67 	vneg.f32	s15, s15
 8004f36:	ed9f 7a6a 	vldr	s14, [pc, #424]	@ 80050e0 <Ctrl_TargetUpdateTask+0x1e8>
 8004f3a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004f3e:	ed9f 7a69 	vldr	s14, [pc, #420]	@ 80050e4 <Ctrl_TargetUpdateTask+0x1ec>
 8004f42:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004f46:	edc7 7a03 	vstr	s15, [r7, #12]

			//计算速度斜坡，斜坡值更新到target.speed
			if(fabs(target.speedCmd - target.speed) < speedSlopeStep)
 8004f4a:	4b67      	ldr	r3, [pc, #412]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f4c:	ed93 7a01 	vldr	s14, [r3, #4]
 8004f50:	4b65      	ldr	r3, [pc, #404]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f52:	edd3 7a02 	vldr	s15, [r3, #8]
 8004f56:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004f5a:	eef0 7ae7 	vabs.f32	s15, s15
 8004f5e:	ed97 7a03 	vldr	s14, [r7, #12]
 8004f62:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004f66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f6a:	dd04      	ble.n	8004f76 <Ctrl_TargetUpdateTask+0x7e>
				target.speed = target.speedCmd;
 8004f6c:	4b5e      	ldr	r3, [pc, #376]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f6e:	685b      	ldr	r3, [r3, #4]
 8004f70:	4a5d      	ldr	r2, [pc, #372]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f72:	6093      	str	r3, [r2, #8]
 8004f74:	e021      	b.n	8004fba <Ctrl_TargetUpdateTask+0xc2>
			else
			{
				if(target.speedCmd - target.speed > 0)
 8004f76:	4b5c      	ldr	r3, [pc, #368]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f78:	ed93 7a01 	vldr	s14, [r3, #4]
 8004f7c:	4b5a      	ldr	r3, [pc, #360]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f7e:	edd3 7a02 	vldr	s15, [r3, #8]
 8004f82:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004f86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004f8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f8e:	dd0a      	ble.n	8004fa6 <Ctrl_TargetUpdateTask+0xae>
					target.speed += speedSlopeStep;
 8004f90:	4b55      	ldr	r3, [pc, #340]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004f92:	ed93 7a02 	vldr	s14, [r3, #8]
 8004f96:	edd7 7a03 	vldr	s15, [r7, #12]
 8004f9a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004f9e:	4b52      	ldr	r3, [pc, #328]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fa0:	edc3 7a02 	vstr	s15, [r3, #8]
 8004fa4:	e009      	b.n	8004fba <Ctrl_TargetUpdateTask+0xc2>
				else
					target.speed -= speedSlopeStep;
 8004fa6:	4b50      	ldr	r3, [pc, #320]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fa8:	ed93 7a02 	vldr	s14, [r3, #8]
 8004fac:	edd7 7a03 	vldr	s15, [r7, #12]
 8004fb0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004fb4:	4b4c      	ldr	r3, [pc, #304]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fb6:	edc3 7a02 	vstr	s15, [r3, #8]
			}

			//计算位置目标，并限制在当前位置的±0.1m内
			target.position += target.speed * 0.004f;
 8004fba:	4b4b      	ldr	r3, [pc, #300]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fbc:	ed93 7a00 	vldr	s14, [r3]
 8004fc0:	4b49      	ldr	r3, [pc, #292]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fc2:	edd3 7a02 	vldr	s15, [r3, #8]
 8004fc6:	eddf 6a49 	vldr	s13, [pc, #292]	@ 80050ec <Ctrl_TargetUpdateTask+0x1f4>
 8004fca:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8004fce:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004fd2:	4b45      	ldr	r3, [pc, #276]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fd4:	edc3 7a00 	vstr	s15, [r3]
			if(target.position - stateVar.x > 0.1f)
 8004fd8:	4b43      	ldr	r3, [pc, #268]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8004fda:	ed93 7a00 	vldr	s14, [r3]
 8004fde:	4b44      	ldr	r3, [pc, #272]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 8004fe0:	edd3 7a02 	vldr	s15, [r3, #8]
 8004fe4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004fe8:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80050f4 <Ctrl_TargetUpdateTask+0x1fc>
 8004fec:	eef4 7ac7 	vcmpe.f32	s15, s14
 8004ff0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ff4:	dd0a      	ble.n	800500c <Ctrl_TargetUpdateTask+0x114>
				target.position = stateVar.x + 0.1f;
 8004ff6:	4b3e      	ldr	r3, [pc, #248]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 8004ff8:	edd3 7a02 	vldr	s15, [r3, #8]
 8004ffc:	ed9f 7a3d 	vldr	s14, [pc, #244]	@ 80050f4 <Ctrl_TargetUpdateTask+0x1fc>
 8005000:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005004:	4b38      	ldr	r3, [pc, #224]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8005006:	edc3 7a00 	vstr	s15, [r3]
 800500a:	e018      	b.n	800503e <Ctrl_TargetUpdateTask+0x146>
			else if(target.position - stateVar.x < -0.1f)
 800500c:	4b36      	ldr	r3, [pc, #216]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 800500e:	ed93 7a00 	vldr	s14, [r3]
 8005012:	4b37      	ldr	r3, [pc, #220]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 8005014:	edd3 7a02 	vldr	s15, [r3, #8]
 8005018:	ee77 7a67 	vsub.f32	s15, s14, s15
 800501c:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 80050f8 <Ctrl_TargetUpdateTask+0x200>
 8005020:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005024:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005028:	d509      	bpl.n	800503e <Ctrl_TargetUpdateTask+0x146>
				target.position = stateVar.x - 0.1f;
 800502a:	4b31      	ldr	r3, [pc, #196]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 800502c:	edd3 7a02 	vldr	s15, [r3, #8]
 8005030:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 80050f4 <Ctrl_TargetUpdateTask+0x1fc>
 8005034:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005038:	4b2b      	ldr	r3, [pc, #172]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 800503a:	edc3 7a00 	vstr	s15, [r3]

			//限制速度目标在当前速度的±0.3m/s内
			if(target.speed - stateVar.dx > 1.0f)
 800503e:	4b2a      	ldr	r3, [pc, #168]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8005040:	ed93 7a02 	vldr	s14, [r3, #8]
 8005044:	4b2a      	ldr	r3, [pc, #168]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 8005046:	edd3 7a03 	vldr	s15, [r3, #12]
 800504a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800504e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005052:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800505a:	dd0a      	ble.n	8005072 <Ctrl_TargetUpdateTask+0x17a>
				target.speed = stateVar.dx + 1.0f;
 800505c:	4b24      	ldr	r3, [pc, #144]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 800505e:	edd3 7a03 	vldr	s15, [r3, #12]
 8005062:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8005066:	ee77 7a87 	vadd.f32	s15, s15, s14
 800506a:	4b1f      	ldr	r3, [pc, #124]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 800506c:	edc3 7a02 	vstr	s15, [r3, #8]
 8005070:	e018      	b.n	80050a4 <Ctrl_TargetUpdateTask+0x1ac>
			else if(target.speed - stateVar.dx < -1.0f)
 8005072:	4b1d      	ldr	r3, [pc, #116]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 8005074:	ed93 7a02 	vldr	s14, [r3, #8]
 8005078:	4b1d      	ldr	r3, [pc, #116]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 800507a:	edd3 7a03 	vldr	s15, [r3, #12]
 800507e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005082:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8005086:	eef4 7ac7 	vcmpe.f32	s15, s14
 800508a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800508e:	d509      	bpl.n	80050a4 <Ctrl_TargetUpdateTask+0x1ac>
				target.speed = stateVar.dx - 1.0f;
 8005090:	4b17      	ldr	r3, [pc, #92]	@ (80050f0 <Ctrl_TargetUpdateTask+0x1f8>)
 8005092:	edd3 7a03 	vldr	s15, [r3, #12]
 8005096:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800509a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800509e:	4b12      	ldr	r3, [pc, #72]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 80050a0:	edc3 7a02 	vstr	s15, [r3, #8]

			//计算yaw方位角目标
			target.yawAngle += target.yawSpeedCmd * 0.004f;
 80050a4:	4b10      	ldr	r3, [pc, #64]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 80050a6:	ed93 7a04 	vldr	s14, [r3, #16]
 80050aa:	4b0f      	ldr	r3, [pc, #60]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 80050ac:	edd3 7a03 	vldr	s15, [r3, #12]
 80050b0:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80050ec <Ctrl_TargetUpdateTask+0x1f4>
 80050b4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80050b8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80050bc:	4b0a      	ldr	r3, [pc, #40]	@ (80050e8 <Ctrl_TargetUpdateTask+0x1f0>)
 80050be:	edc3 7a04 	vstr	s15, [r3, #16]
			vTaskDelayUntil(&xLastWakeTime, 4); //每4ms更新一次
 80050c2:	1d3b      	adds	r3, r7, #4
 80050c4:	2104      	movs	r1, #4
 80050c6:	4618      	mov	r0, r3
 80050c8:	f015 febc 	bl	801ae44 <vTaskDelayUntil>
	while(1){
 80050cc:	e71d      	b.n	8004f0a <Ctrl_TargetUpdateTask+0x12>
 80050ce:	bf00      	nop
 80050d0:	3ba3d70a 	.word	0x3ba3d70a
 80050d4:	20002018 	.word	0x20002018
 80050d8:	2000202c 	.word	0x2000202c
 80050dc:	3df5c28f 	.word	0x3df5c28f
 80050e0:	3cf5c28f 	.word	0x3cf5c28f
 80050e4:	3ba3d70a 	.word	0x3ba3d70a
 80050e8:	20000008 	.word	0x20000008
 80050ec:	3b83126f 	.word	0x3b83126f
 80050f0:	20002040 	.word	0x20002040
 80050f4:	3dcccccd 	.word	0x3dcccccd
 80050f8:	bdcccccd 	.word	0xbdcccccd

080050fc <LegPos_UpdateTask>:
	}
}

void LegPos_UpdateTask(void *arg)
{
 80050fc:	b580      	push	{r7, lr}
 80050fe:	b08e      	sub	sp, #56	@ 0x38
 8005100:	af00      	add	r7, sp, #0
 8005102:	6078      	str	r0, [r7, #4]
	const float lpfRatio = 0.5f; //低通滤波系数(新值的权重)
 8005104:	f04f 537c 	mov.w	r3, #1056964608	@ 0x3f000000
 8005108:	62fb      	str	r3, [r7, #44]	@ 0x2c
	float lastLeftDLength = 0, lastRightDLength = 0;
 800510a:	f04f 0300 	mov.w	r3, #0
 800510e:	637b      	str	r3, [r7, #52]	@ 0x34
 8005110:	f04f 0300 	mov.w	r3, #0
 8005114:	633b      	str	r3, [r7, #48]	@ 0x30
	TickType_t xLastWakeTime = xTaskGetTickCount();
 8005116:	f016 f869 	bl	801b1ec <xTaskGetTickCount>
 800511a:	4603      	mov	r3, r0
 800511c:	62bb      	str	r3, [r7, #40]	@ 0x28
	while (1)
	{
		double legPos[2], legSpd[2];

		//计算左腿位置
		leg_pos(leftJoint[1].angle, leftJoint[0].angle, legPos); //机体水平角 pitch， 1st para is larger angle
 800511e:	4b82      	ldr	r3, [pc, #520]	@ (8005328 <LegPos_UpdateTask+0x22c>)
 8005120:	ed93 7b14 	vldr	d7, [r3, #80]	@ 0x50
 8005124:	4b80      	ldr	r3, [pc, #512]	@ (8005328 <LegPos_UpdateTask+0x22c>)
 8005126:	ed93 6b02 	vldr	d6, [r3, #8]
 800512a:	f107 0318 	add.w	r3, r7, #24
 800512e:	4618      	mov	r0, r3
 8005130:	eeb0 1a46 	vmov.f32	s2, s12
 8005134:	eef0 1a66 	vmov.f32	s3, s13
 8005138:	eeb0 0a47 	vmov.f32	s0, s14
 800513c:	eef0 0a67 	vmov.f32	s1, s15
 8005140:	f003 fed6 	bl	8008ef0 <leg_pos>
		leftLegPos.length = legPos[0];
 8005144:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005148:	4610      	mov	r0, r2
 800514a:	4619      	mov	r1, r3
 800514c:	f7fb fd4c 	bl	8000be8 <__aeabi_d2f>
 8005150:	4603      	mov	r3, r0
 8005152:	4a76      	ldr	r2, [pc, #472]	@ (800532c <LegPos_UpdateTask+0x230>)
 8005154:	6053      	str	r3, [r2, #4]
		leftLegPos.angle = legPos[1];
 8005156:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800515a:	4610      	mov	r0, r2
 800515c:	4619      	mov	r1, r3
 800515e:	f7fb fd43 	bl	8000be8 <__aeabi_d2f>
 8005162:	4603      	mov	r3, r0
 8005164:	4a71      	ldr	r2, [pc, #452]	@ (800532c <LegPos_UpdateTask+0x230>)
 8005166:	6013      	str	r3, [r2, #0]

		//计算左腿速度
		leg_spd(leftJoint[1].speed, leftJoint[0].speed, leftJoint[1].angle, leftJoint[0].angle, legSpd);
 8005168:	4b6f      	ldr	r3, [pc, #444]	@ (8005328 <LegPos_UpdateTask+0x22c>)
 800516a:	ed93 7b12 	vldr	d7, [r3, #72]	@ 0x48
 800516e:	4b6e      	ldr	r3, [pc, #440]	@ (8005328 <LegPos_UpdateTask+0x22c>)
 8005170:	ed93 6b00 	vldr	d6, [r3]
 8005174:	4b6c      	ldr	r3, [pc, #432]	@ (8005328 <LegPos_UpdateTask+0x22c>)
 8005176:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
 800517a:	4b6b      	ldr	r3, [pc, #428]	@ (8005328 <LegPos_UpdateTask+0x22c>)
 800517c:	ed93 4b02 	vldr	d4, [r3, #8]
 8005180:	f107 0308 	add.w	r3, r7, #8
 8005184:	4618      	mov	r0, r3
 8005186:	eeb0 3a44 	vmov.f32	s6, s8
 800518a:	eef0 3a64 	vmov.f32	s7, s9
 800518e:	eeb0 2a45 	vmov.f32	s4, s10
 8005192:	eef0 2a65 	vmov.f32	s5, s11
 8005196:	eeb0 1a46 	vmov.f32	s2, s12
 800519a:	eef0 1a66 	vmov.f32	s3, s13
 800519e:	eeb0 0a47 	vmov.f32	s0, s14
 80051a2:	eef0 0a67 	vmov.f32	s1, s15
 80051a6:	f004 fd9b 	bl	8009ce0 <leg_spd>
		leftLegPos.dLength = legSpd[0];
 80051aa:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80051ae:	4610      	mov	r0, r2
 80051b0:	4619      	mov	r1, r3
 80051b2:	f7fb fd19 	bl	8000be8 <__aeabi_d2f>
 80051b6:	4603      	mov	r3, r0
 80051b8:	4a5c      	ldr	r2, [pc, #368]	@ (800532c <LegPos_UpdateTask+0x230>)
 80051ba:	60d3      	str	r3, [r2, #12]
		leftLegPos.dAngle = legSpd[1];
 80051bc:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80051c0:	4610      	mov	r0, r2
 80051c2:	4619      	mov	r1, r3
 80051c4:	f7fb fd10 	bl	8000be8 <__aeabi_d2f>
 80051c8:	4603      	mov	r3, r0
 80051ca:	4a58      	ldr	r2, [pc, #352]	@ (800532c <LegPos_UpdateTask+0x230>)
 80051cc:	6093      	str	r3, [r2, #8]

		//计算左腿腿长加速度
		leftLegPos.ddLength = ((leftLegPos.dLength - lastLeftDLength) * 1000 / 4) * lpfRatio + leftLegPos.ddLength * (1 - lpfRatio);
 80051ce:	4b57      	ldr	r3, [pc, #348]	@ (800532c <LegPos_UpdateTask+0x230>)
 80051d0:	ed93 7a03 	vldr	s14, [r3, #12]
 80051d4:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 80051d8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80051dc:	ed9f 7a54 	vldr	s14, [pc, #336]	@ 8005330 <LegPos_UpdateTask+0x234>
 80051e0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80051e4:	eef1 6a00 	vmov.f32	s13, #16	@ 0x40800000  4.0
 80051e8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80051ec:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80051f0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80051f4:	4b4d      	ldr	r3, [pc, #308]	@ (800532c <LegPos_UpdateTask+0x230>)
 80051f6:	edd3 6a04 	vldr	s13, [r3, #16]
 80051fa:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80051fe:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8005202:	ee76 7a67 	vsub.f32	s15, s12, s15
 8005206:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800520a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800520e:	4b47      	ldr	r3, [pc, #284]	@ (800532c <LegPos_UpdateTask+0x230>)
 8005210:	edc3 7a04 	vstr	s15, [r3, #16]
		lastLeftDLength = leftLegPos.dLength;
 8005214:	4b45      	ldr	r3, [pc, #276]	@ (800532c <LegPos_UpdateTask+0x230>)
 8005216:	68db      	ldr	r3, [r3, #12]
 8005218:	637b      	str	r3, [r7, #52]	@ 0x34

		//计算右腿位置
		leg_pos(rightJoint[1].angle, rightJoint[0].angle, legPos);
 800521a:	4b46      	ldr	r3, [pc, #280]	@ (8005334 <LegPos_UpdateTask+0x238>)
 800521c:	ed93 7b14 	vldr	d7, [r3, #80]	@ 0x50
 8005220:	4b44      	ldr	r3, [pc, #272]	@ (8005334 <LegPos_UpdateTask+0x238>)
 8005222:	ed93 6b02 	vldr	d6, [r3, #8]
 8005226:	f107 0318 	add.w	r3, r7, #24
 800522a:	4618      	mov	r0, r3
 800522c:	eeb0 1a46 	vmov.f32	s2, s12
 8005230:	eef0 1a66 	vmov.f32	s3, s13
 8005234:	eeb0 0a47 	vmov.f32	s0, s14
 8005238:	eef0 0a67 	vmov.f32	s1, s15
 800523c:	f003 fe58 	bl	8008ef0 <leg_pos>
		rightLegPos.length = legPos[0];
 8005240:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005244:	4610      	mov	r0, r2
 8005246:	4619      	mov	r1, r3
 8005248:	f7fb fcce 	bl	8000be8 <__aeabi_d2f>
 800524c:	4603      	mov	r3, r0
 800524e:	4a3a      	ldr	r2, [pc, #232]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 8005250:	6053      	str	r3, [r2, #4]
		rightLegPos.angle = legPos[1];
 8005252:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8005256:	4610      	mov	r0, r2
 8005258:	4619      	mov	r1, r3
 800525a:	f7fb fcc5 	bl	8000be8 <__aeabi_d2f>
 800525e:	4603      	mov	r3, r0
 8005260:	4a35      	ldr	r2, [pc, #212]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 8005262:	6013      	str	r3, [r2, #0]

		//计算右腿速度
		leg_spd(rightJoint[1].speed, rightJoint[0].speed, rightJoint[1].angle, rightJoint[0].angle, legSpd);
 8005264:	4b33      	ldr	r3, [pc, #204]	@ (8005334 <LegPos_UpdateTask+0x238>)
 8005266:	ed93 7b12 	vldr	d7, [r3, #72]	@ 0x48
 800526a:	4b32      	ldr	r3, [pc, #200]	@ (8005334 <LegPos_UpdateTask+0x238>)
 800526c:	ed93 6b00 	vldr	d6, [r3]
 8005270:	4b30      	ldr	r3, [pc, #192]	@ (8005334 <LegPos_UpdateTask+0x238>)
 8005272:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
 8005276:	4b2f      	ldr	r3, [pc, #188]	@ (8005334 <LegPos_UpdateTask+0x238>)
 8005278:	ed93 4b02 	vldr	d4, [r3, #8]
 800527c:	f107 0308 	add.w	r3, r7, #8
 8005280:	4618      	mov	r0, r3
 8005282:	eeb0 3a44 	vmov.f32	s6, s8
 8005286:	eef0 3a64 	vmov.f32	s7, s9
 800528a:	eeb0 2a45 	vmov.f32	s4, s10
 800528e:	eef0 2a65 	vmov.f32	s5, s11
 8005292:	eeb0 1a46 	vmov.f32	s2, s12
 8005296:	eef0 1a66 	vmov.f32	s3, s13
 800529a:	eeb0 0a47 	vmov.f32	s0, s14
 800529e:	eef0 0a67 	vmov.f32	s1, s15
 80052a2:	f004 fd1d 	bl	8009ce0 <leg_spd>
		rightLegPos.dLength = legSpd[0];
 80052a6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80052aa:	4610      	mov	r0, r2
 80052ac:	4619      	mov	r1, r3
 80052ae:	f7fb fc9b 	bl	8000be8 <__aeabi_d2f>
 80052b2:	4603      	mov	r3, r0
 80052b4:	4a20      	ldr	r2, [pc, #128]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 80052b6:	60d3      	str	r3, [r2, #12]
		rightLegPos.dAngle = legSpd[1];
 80052b8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80052bc:	4610      	mov	r0, r2
 80052be:	4619      	mov	r1, r3
 80052c0:	f7fb fc92 	bl	8000be8 <__aeabi_d2f>
 80052c4:	4603      	mov	r3, r0
 80052c6:	4a1c      	ldr	r2, [pc, #112]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 80052c8:	6093      	str	r3, [r2, #8]

		//计算右腿腿长加速度
		rightLegPos.ddLength = ((rightLegPos.dLength - lastRightDLength) * 1000 / 4) * lpfRatio + rightLegPos.ddLength * (1 - lpfRatio);
 80052ca:	4b1b      	ldr	r3, [pc, #108]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 80052cc:	ed93 7a03 	vldr	s14, [r3, #12]
 80052d0:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 80052d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80052d8:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 8005330 <LegPos_UpdateTask+0x234>
 80052dc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052e0:	eef1 6a00 	vmov.f32	s13, #16	@ 0x40800000  4.0
 80052e4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80052e8:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80052ec:	ee27 7a27 	vmul.f32	s14, s14, s15
 80052f0:	4b11      	ldr	r3, [pc, #68]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 80052f2:	edd3 6a04 	vldr	s13, [r3, #16]
 80052f6:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
 80052fa:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80052fe:	ee76 7a67 	vsub.f32	s15, s12, s15
 8005302:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005306:	ee77 7a27 	vadd.f32	s15, s14, s15
 800530a:	4b0b      	ldr	r3, [pc, #44]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 800530c:	edc3 7a04 	vstr	s15, [r3, #16]
		lastRightDLength = rightLegPos.dLength;
 8005310:	4b09      	ldr	r3, [pc, #36]	@ (8005338 <LegPos_UpdateTask+0x23c>)
 8005312:	68db      	ldr	r3, [r3, #12]
 8005314:	633b      	str	r3, [r7, #48]	@ 0x30

		vTaskDelayUntil(&xLastWakeTime, 4); //每4ms更新一次
 8005316:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800531a:	2104      	movs	r1, #4
 800531c:	4618      	mov	r0, r3
 800531e:	f015 fd91 	bl	801ae44 <vTaskDelayUntil>
	{
 8005322:	bf00      	nop
 8005324:	e6fb      	b.n	800511e <LegPos_UpdateTask+0x22>
 8005326:	bf00      	nop
 8005328:	20001e68 	.word	0x20001e68
 800532c:	20002018 	.word	0x20002018
 8005330:	447a0000 	.word	0x447a0000
 8005334:	20001ef8 	.word	0x20001ef8
 8005338:	2000202c 	.word	0x2000202c
 800533c:	00000000 	.word	0x00000000

08005340 <Ctrl_Task>:

// 	vTaskDelete(NULL);
// }

void Ctrl_Task(void *arg)
{
 8005340:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005344:	b0ec      	sub	sp, #432	@ 0x1b0
 8005346:	af00      	add	r7, sp, #0
 8005348:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 800534c:	f5a3 73d6 	sub.w	r3, r3, #428	@ 0x1ac
 8005350:	6018      	str	r0, [r3, #0]
	double starttime = 0;
 8005352:	f04f 0200 	mov.w	r2, #0
 8005356:	f04f 0300 	mov.w	r3, #0
 800535a:	e9c7 236a 	strd	r2, r3, [r7, #424]	@ 0x1a8
	double endtime = 0;
 800535e:	f04f 0200 	mov.w	r2, #0
 8005362:	f04f 0300 	mov.w	r3, #0
 8005366:	e9c7 235e 	strd	r2, r3, [r7, #376]	@ 0x178
	double dt;
	const float wheelRadius = 0.045f; //m，车轮半径
 800536a:	4bb7      	ldr	r3, [pc, #732]	@ (8005648 <Ctrl_Task+0x308>)
 800536c:	f8c7 3174 	str.w	r3, [r7, #372]	@ 0x174
	const float legMass = 0.01f; //kg，腿部质量
 8005370:	4bb6      	ldr	r3, [pc, #728]	@ (800564c <Ctrl_Task+0x30c>)
 8005372:	f8c7 3170 	str.w	r3, [r7, #368]	@ 0x170

	TickType_t xLastWakeTime = xTaskGetTickCount();
 8005376:	f015 ff39 	bl	801b1ec <xTaskGetTickCount>
 800537a:	4603      	mov	r3, r0
 800537c:	f8c7 3134 	str.w	r3, [r7, #308]	@ 0x134

	//手动为反馈矩阵和输出叠加一个系数，用于手动优化控制效果
	float kRatio[2][6] = {{1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f},
 8005380:	4bb3      	ldr	r3, [pc, #716]	@ (8005650 <Ctrl_Task+0x310>)
 8005382:	f507 7482 	add.w	r4, r7, #260	@ 0x104
 8005386:	461d      	mov	r5, r3
 8005388:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800538a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800538c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800538e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005390:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8005394:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						{1.0f, 1.0f, 1.0f, 1.0f, 1.0f, 1.0f}};
	float lqrTpRatio = 1.0f, lqrTRatio = 1.0f;
 8005398:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800539c:	f8c7 316c 	str.w	r3, [r7, #364]	@ 0x16c
 80053a0:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80053a4:	f8c7 3168 	str.w	r3, [r7, #360]	@ 0x168

	//设定初始目标值
	target.rollAngle = 0.0f;
 80053a8:	4baa      	ldr	r3, [pc, #680]	@ (8005654 <Ctrl_Task+0x314>)
 80053aa:	f04f 0200 	mov.w	r2, #0
 80053ae:	615a      	str	r2, [r3, #20]
	target.legLength = 0.12f;
 80053b0:	4ba8      	ldr	r3, [pc, #672]	@ (8005654 <Ctrl_Task+0x314>)
 80053b2:	4aa9      	ldr	r2, [pc, #676]	@ (8005658 <Ctrl_Task+0x318>)
 80053b4:	619a      	str	r2, [r3, #24]
	target.speed = 0.0f;
 80053b6:	4ba7      	ldr	r3, [pc, #668]	@ (8005654 <Ctrl_Task+0x314>)
 80053b8:	f04f 0200 	mov.w	r2, #0
 80053bc:	609a      	str	r2, [r3, #8]
	target.position = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 80053be:	4ba7      	ldr	r3, [pc, #668]	@ (800565c <Ctrl_Task+0x31c>)
 80053c0:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 80053c4:	4ba6      	ldr	r3, [pc, #664]	@ (8005660 <Ctrl_Task+0x320>)
 80053c6:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80053ca:	f7fa ff5f 	bl	800028c <__adddf3>
 80053ce:	4602      	mov	r2, r0
 80053d0:	460b      	mov	r3, r1
 80053d2:	4610      	mov	r0, r2
 80053d4:	4619      	mov	r1, r3
 80053d6:	f04f 0200 	mov.w	r2, #0
 80053da:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80053de:	f7fb fa35 	bl	800084c <__aeabi_ddiv>
 80053e2:	4602      	mov	r2, r0
 80053e4:	460b      	mov	r3, r1
 80053e6:	4614      	mov	r4, r2
 80053e8:	461d      	mov	r5, r3
 80053ea:	f8d7 0174 	ldr.w	r0, [r7, #372]	@ 0x174
 80053ee:	f7fb f8ab 	bl	8000548 <__aeabi_f2d>
 80053f2:	4602      	mov	r2, r0
 80053f4:	460b      	mov	r3, r1
 80053f6:	4620      	mov	r0, r4
 80053f8:	4629      	mov	r1, r5
 80053fa:	f7fb f8fd 	bl	80005f8 <__aeabi_dmul>
 80053fe:	4602      	mov	r2, r0
 8005400:	460b      	mov	r3, r1
 8005402:	4610      	mov	r0, r2
 8005404:	4619      	mov	r1, r3
 8005406:	f7fb fbef 	bl	8000be8 <__aeabi_d2f>
 800540a:	4603      	mov	r3, r0
 800540c:	4a91      	ldr	r2, [pc, #580]	@ (8005654 <Ctrl_Task+0x314>)
 800540e:	6013      	str	r3, [r2, #0]

	while (1)
	{
		endtime = get_microseconds();
 8005410:	f7fc fed6 	bl	80021c0 <get_microseconds>
 8005414:	4603      	mov	r3, r0
 8005416:	4618      	mov	r0, r3
 8005418:	f7fb f874 	bl	8000504 <__aeabi_ui2d>
 800541c:	4602      	mov	r2, r0
 800541e:	460b      	mov	r3, r1
 8005420:	e9c7 235e 	strd	r2, r3, [r7, #376]	@ 0x178
		dt = endtime - starttime;
 8005424:	e9d7 236a 	ldrd	r2, r3, [r7, #424]	@ 0x1a8
 8005428:	e9d7 015e 	ldrd	r0, r1, [r7, #376]	@ 0x178
 800542c:	f7fa ff2c 	bl	8000288 <__aeabi_dsub>
 8005430:	4602      	mov	r2, r0
 8005432:	460b      	mov	r3, r1
 8005434:	e9c7 2358 	strd	r2, r3, [r7, #352]	@ 0x160
		check_dt = dt;
 8005438:	498a      	ldr	r1, [pc, #552]	@ (8005664 <Ctrl_Task+0x324>)
 800543a:	e9d7 2358 	ldrd	r2, r3, [r7, #352]	@ 0x160
 800543e:	e9c1 2300 	strd	r2, r3, [r1]
		starttime = get_microseconds();
 8005442:	f7fc febd 	bl	80021c0 <get_microseconds>
 8005446:	4603      	mov	r3, r0
 8005448:	4618      	mov	r0, r3
 800544a:	f7fb f85b 	bl	8000504 <__aeabi_ui2d>
 800544e:	4602      	mov	r2, r0
 8005450:	460b      	mov	r3, r1
 8005452:	e9c7 236a 	strd	r2, r3, [r7, #424]	@ 0x1a8
		//计算状态变量
		stateVar.phi = imu_heading.pit;    // phi is the pitch angle of the chassis from imu reading
 8005456:	4b84      	ldr	r3, [pc, #528]	@ (8005668 <Ctrl_Task+0x328>)
 8005458:	681b      	ldr	r3, [r3, #0]
 800545a:	4a84      	ldr	r2, [pc, #528]	@ (800566c <Ctrl_Task+0x32c>)
 800545c:	6113      	str	r3, [r2, #16]
		stateVar.dPhi = imu_heading.dpit;
 800545e:	4b82      	ldr	r3, [pc, #520]	@ (8005668 <Ctrl_Task+0x328>)
 8005460:	68db      	ldr	r3, [r3, #12]
 8005462:	4a82      	ldr	r2, [pc, #520]	@ (800566c <Ctrl_Task+0x32c>)
 8005464:	6153      	str	r3, [r2, #20]
		stateVar.x = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 8005466:	4b7d      	ldr	r3, [pc, #500]	@ (800565c <Ctrl_Task+0x31c>)
 8005468:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 800546c:	4b7c      	ldr	r3, [pc, #496]	@ (8005660 <Ctrl_Task+0x320>)
 800546e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8005472:	f7fa ff0b 	bl	800028c <__adddf3>
 8005476:	4602      	mov	r2, r0
 8005478:	460b      	mov	r3, r1
 800547a:	4610      	mov	r0, r2
 800547c:	4619      	mov	r1, r3
 800547e:	f04f 0200 	mov.w	r2, #0
 8005482:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8005486:	f7fb f9e1 	bl	800084c <__aeabi_ddiv>
 800548a:	4602      	mov	r2, r0
 800548c:	460b      	mov	r3, r1
 800548e:	4614      	mov	r4, r2
 8005490:	461d      	mov	r5, r3
 8005492:	f8d7 0174 	ldr.w	r0, [r7, #372]	@ 0x174
 8005496:	f7fb f857 	bl	8000548 <__aeabi_f2d>
 800549a:	4602      	mov	r2, r0
 800549c:	460b      	mov	r3, r1
 800549e:	4620      	mov	r0, r4
 80054a0:	4629      	mov	r1, r5
 80054a2:	f7fb f8a9 	bl	80005f8 <__aeabi_dmul>
 80054a6:	4602      	mov	r2, r0
 80054a8:	460b      	mov	r3, r1
 80054aa:	4610      	mov	r0, r2
 80054ac:	4619      	mov	r1, r3
 80054ae:	f7fb fb9b 	bl	8000be8 <__aeabi_d2f>
 80054b2:	4603      	mov	r3, r0
 80054b4:	4a6d      	ldr	r2, [pc, #436]	@ (800566c <Ctrl_Task+0x32c>)
 80054b6:	6093      	str	r3, [r2, #8]
		stateVar.dx = (leftWheel.speed + rightWheel.speed) / 2 * wheelRadius;
 80054b8:	4b68      	ldr	r3, [pc, #416]	@ (800565c <Ctrl_Task+0x31c>)
 80054ba:	e9d3 0100 	ldrd	r0, r1, [r3]
 80054be:	4b68      	ldr	r3, [pc, #416]	@ (8005660 <Ctrl_Task+0x320>)
 80054c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054c4:	f7fa fee2 	bl	800028c <__adddf3>
 80054c8:	4602      	mov	r2, r0
 80054ca:	460b      	mov	r3, r1
 80054cc:	4610      	mov	r0, r2
 80054ce:	4619      	mov	r1, r3
 80054d0:	f04f 0200 	mov.w	r2, #0
 80054d4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80054d8:	f7fb f9b8 	bl	800084c <__aeabi_ddiv>
 80054dc:	4602      	mov	r2, r0
 80054de:	460b      	mov	r3, r1
 80054e0:	4614      	mov	r4, r2
 80054e2:	461d      	mov	r5, r3
 80054e4:	f8d7 0174 	ldr.w	r0, [r7, #372]	@ 0x174
 80054e8:	f7fb f82e 	bl	8000548 <__aeabi_f2d>
 80054ec:	4602      	mov	r2, r0
 80054ee:	460b      	mov	r3, r1
 80054f0:	4620      	mov	r0, r4
 80054f2:	4629      	mov	r1, r5
 80054f4:	f7fb f880 	bl	80005f8 <__aeabi_dmul>
 80054f8:	4602      	mov	r2, r0
 80054fa:	460b      	mov	r3, r1
 80054fc:	4610      	mov	r0, r2
 80054fe:	4619      	mov	r1, r3
 8005500:	f7fb fb72 	bl	8000be8 <__aeabi_d2f>
 8005504:	4603      	mov	r3, r0
 8005506:	4a59      	ldr	r2, [pc, #356]	@ (800566c <Ctrl_Task+0x32c>)
 8005508:	60d3      	str	r3, [r2, #12]
		stateVar.theta = (leftLegPos.angle + rightLegPos.angle) / 2 - M_PI_2 - imu_heading.pit;
 800550a:	4b59      	ldr	r3, [pc, #356]	@ (8005670 <Ctrl_Task+0x330>)
 800550c:	ed93 7a00 	vldr	s14, [r3]
 8005510:	4b58      	ldr	r3, [pc, #352]	@ (8005674 <Ctrl_Task+0x334>)
 8005512:	edd3 7a00 	vldr	s15, [r3]
 8005516:	ee77 7a27 	vadd.f32	s15, s14, s15
 800551a:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 800551e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8005522:	ee16 0a90 	vmov	r0, s13
 8005526:	f7fb f80f 	bl	8000548 <__aeabi_f2d>
 800552a:	a343      	add	r3, pc, #268	@ (adr r3, 8005638 <Ctrl_Task+0x2f8>)
 800552c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005530:	f7fa feaa 	bl	8000288 <__aeabi_dsub>
 8005534:	4602      	mov	r2, r0
 8005536:	460b      	mov	r3, r1
 8005538:	4614      	mov	r4, r2
 800553a:	461d      	mov	r5, r3
 800553c:	4b4a      	ldr	r3, [pc, #296]	@ (8005668 <Ctrl_Task+0x328>)
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	4618      	mov	r0, r3
 8005542:	f7fb f801 	bl	8000548 <__aeabi_f2d>
 8005546:	4602      	mov	r2, r0
 8005548:	460b      	mov	r3, r1
 800554a:	4620      	mov	r0, r4
 800554c:	4629      	mov	r1, r5
 800554e:	f7fa fe9b 	bl	8000288 <__aeabi_dsub>
 8005552:	4602      	mov	r2, r0
 8005554:	460b      	mov	r3, r1
 8005556:	4610      	mov	r0, r2
 8005558:	4619      	mov	r1, r3
 800555a:	f7fb fb45 	bl	8000be8 <__aeabi_d2f>
 800555e:	4603      	mov	r3, r0
 8005560:	4a42      	ldr	r2, [pc, #264]	@ (800566c <Ctrl_Task+0x32c>)
 8005562:	6013      	str	r3, [r2, #0]
		stateVar.dTheta = (leftLegPos.dAngle + rightLegPos.dAngle) / 2 - imu_heading.dpit;
 8005564:	4b42      	ldr	r3, [pc, #264]	@ (8005670 <Ctrl_Task+0x330>)
 8005566:	ed93 7a02 	vldr	s14, [r3, #8]
 800556a:	4b42      	ldr	r3, [pc, #264]	@ (8005674 <Ctrl_Task+0x334>)
 800556c:	edd3 7a02 	vldr	s15, [r3, #8]
 8005570:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005574:	eef0 6a00 	vmov.f32	s13, #0	@ 0x40000000  2.0
 8005578:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800557c:	4b3a      	ldr	r3, [pc, #232]	@ (8005668 <Ctrl_Task+0x328>)
 800557e:	edd3 7a03 	vldr	s15, [r3, #12]
 8005582:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005586:	4b39      	ldr	r3, [pc, #228]	@ (800566c <Ctrl_Task+0x32c>)
 8005588:	edc3 7a01 	vstr	s15, [r3, #4]
		double legLength = (leftLegPos.length + rightLegPos.length) / 2;
 800558c:	4b38      	ldr	r3, [pc, #224]	@ (8005670 <Ctrl_Task+0x330>)
 800558e:	ed93 7a01 	vldr	s14, [r3, #4]
 8005592:	4b38      	ldr	r3, [pc, #224]	@ (8005674 <Ctrl_Task+0x334>)
 8005594:	edd3 7a01 	vldr	s15, [r3, #4]
 8005598:	ee77 7a27 	vadd.f32	s15, s14, s15
 800559c:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 80055a0:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80055a4:	ee16 0a90 	vmov	r0, s13
 80055a8:	f7fa ffce 	bl	8000548 <__aeabi_f2d>
 80055ac:	4602      	mov	r2, r0
 80055ae:	460b      	mov	r3, r1
 80055b0:	e9c7 2356 	strd	r2, r3, [r7, #344]	@ 0x158
		double dLegLength = (leftLegPos.dLength + rightLegPos.dLength) / 2;
 80055b4:	4b2e      	ldr	r3, [pc, #184]	@ (8005670 <Ctrl_Task+0x330>)
 80055b6:	ed93 7a03 	vldr	s14, [r3, #12]
 80055ba:	4b2e      	ldr	r3, [pc, #184]	@ (8005674 <Ctrl_Task+0x334>)
 80055bc:	edd3 7a03 	vldr	s15, [r3, #12]
 80055c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80055c4:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 80055c8:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80055cc:	ee16 0a90 	vmov	r0, s13
 80055d0:	f7fa ffba 	bl	8000548 <__aeabi_f2d>
 80055d4:	4602      	mov	r2, r0
 80055d6:	460b      	mov	r3, r1
 80055d8:	e9c7 2354 	strd	r2, r3, [r7, #336]	@ 0x150
// 			vTaskDelayUntil(&xLastWakeTime, 4);
// 			continue;
// 		}

		//计算LQR反馈矩阵
		double kRes[12] = {0}, k[2][6] = {0};
 80055dc:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80055e0:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 80055e4:	4618      	mov	r0, r3
 80055e6:	2360      	movs	r3, #96	@ 0x60
 80055e8:	461a      	mov	r2, r3
 80055ea:	2100      	movs	r1, #0
 80055ec:	f018 f9f1 	bl	801d9d2 <memset>
 80055f0:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80055f4:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80055f8:	4618      	mov	r0, r3
 80055fa:	2360      	movs	r3, #96	@ 0x60
 80055fc:	461a      	mov	r2, r3
 80055fe:	2100      	movs	r1, #0
 8005600:	f018 f9e7 	bl	801d9d2 <memset>
		lqr_k(legLength, kRes);
 8005604:	f107 0308 	add.w	r3, r7, #8
 8005608:	4618      	mov	r0, r3
 800560a:	ed97 0b56 	vldr	d0, [r7, #344]	@ 0x158
 800560e:	f005 f9d3 	bl	800a9b8 <lqr_k>
		lqr_k(0.12, k_check);
 8005612:	4819      	ldr	r0, [pc, #100]	@ (8005678 <Ctrl_Task+0x338>)
 8005614:	ed9f 0b0a 	vldr	d0, [pc, #40]	@ 8005640 <Ctrl_Task+0x300>
 8005618:	f005 f9ce 	bl	800a9b8 <lqr_k>
		if(groundDetector.isTouchingGround) //正常触地状态
 800561c:	4b17      	ldr	r3, [pc, #92]	@ (800567c <Ctrl_Task+0x33c>)
 800561e:	7a1b      	ldrb	r3, [r3, #8]
 8005620:	2b00      	cmp	r3, #0
 8005622:	d07b      	beq.n	800571c <Ctrl_Task+0x3dc>
		{
			for (int i = 0; i < 6; i++)
 8005624:	2300      	movs	r3, #0
 8005626:	f8c7 31a4 	str.w	r3, [r7, #420]	@ 0x1a4
 800562a:	e072      	b.n	8005712 <Ctrl_Task+0x3d2>
			{
				for (int j = 0; j < 2; j++)
 800562c:	2300      	movs	r3, #0
 800562e:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8005632:	e065      	b.n	8005700 <Ctrl_Task+0x3c0>
 8005634:	f3af 8000 	nop.w
 8005638:	54442d18 	.word	0x54442d18
 800563c:	3ff921fb 	.word	0x3ff921fb
 8005640:	eb851eb8 	.word	0xeb851eb8
 8005644:	3fbeb851 	.word	0x3fbeb851
 8005648:	3d3851ec 	.word	0x3d3851ec
 800564c:	3c23d70a 	.word	0x3c23d70a
 8005650:	0802464c 	.word	0x0802464c
 8005654:	20000008 	.word	0x20000008
 8005658:	3df5c28f 	.word	0x3df5c28f
 800565c:	20001f88 	.word	0x20001f88
 8005660:	20001fd0 	.word	0x20001fd0
 8005664:	20002190 	.word	0x20002190
 8005668:	20003ad8 	.word	0x20003ad8
 800566c:	20002040 	.word	0x20002040
 8005670:	20002018 	.word	0x20002018
 8005674:	2000202c 	.word	0x2000202c
 8005678:	200021b8 	.word	0x200021b8
 800567c:	20000024 	.word	0x20000024
					k[j][i] = kRes[i * 2 + j] * kRatio[j][i]; // ratio ==1
 8005680:	f8d7 31a4 	ldr.w	r3, [r7, #420]	@ 0x1a4
 8005684:	005a      	lsls	r2, r3, #1
 8005686:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 800568a:	4413      	add	r3, r2
 800568c:	f507 72d8 	add.w	r2, r7, #432	@ 0x1b0
 8005690:	f5a2 72d4 	sub.w	r2, r2, #424	@ 0x1a8
 8005694:	00db      	lsls	r3, r3, #3
 8005696:	4413      	add	r3, r2
 8005698:	e9d3 4500 	ldrd	r4, r5, [r3]
 800569c:	f8d7 21a0 	ldr.w	r2, [r7, #416]	@ 0x1a0
 80056a0:	4613      	mov	r3, r2
 80056a2:	005b      	lsls	r3, r3, #1
 80056a4:	4413      	add	r3, r2
 80056a6:	005b      	lsls	r3, r3, #1
 80056a8:	f8d7 21a4 	ldr.w	r2, [r7, #420]	@ 0x1a4
 80056ac:	4413      	add	r3, r2
 80056ae:	009b      	lsls	r3, r3, #2
 80056b0:	f503 73d8 	add.w	r3, r3, #432	@ 0x1b0
 80056b4:	443b      	add	r3, r7
 80056b6:	3bac      	subs	r3, #172	@ 0xac
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	4618      	mov	r0, r3
 80056bc:	f7fa ff44 	bl	8000548 <__aeabi_f2d>
 80056c0:	4602      	mov	r2, r0
 80056c2:	460b      	mov	r3, r1
 80056c4:	4620      	mov	r0, r4
 80056c6:	4629      	mov	r1, r5
 80056c8:	f7fa ff96 	bl	80005f8 <__aeabi_dmul>
 80056cc:	4602      	mov	r2, r0
 80056ce:	460b      	mov	r3, r1
 80056d0:	4610      	mov	r0, r2
 80056d2:	4619      	mov	r1, r3
 80056d4:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80056d8:	f5a3 74a4 	sub.w	r4, r3, #328	@ 0x148
 80056dc:	f8d7 21a0 	ldr.w	r2, [r7, #416]	@ 0x1a0
 80056e0:	4613      	mov	r3, r2
 80056e2:	005b      	lsls	r3, r3, #1
 80056e4:	4413      	add	r3, r2
 80056e6:	005b      	lsls	r3, r3, #1
 80056e8:	f8d7 21a4 	ldr.w	r2, [r7, #420]	@ 0x1a4
 80056ec:	4413      	add	r3, r2
 80056ee:	00db      	lsls	r3, r3, #3
 80056f0:	4423      	add	r3, r4
 80056f2:	e9c3 0100 	strd	r0, r1, [r3]
				for (int j = 0; j < 2; j++)
 80056f6:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 80056fa:	3301      	adds	r3, #1
 80056fc:	f8c7 31a0 	str.w	r3, [r7, #416]	@ 0x1a0
 8005700:	f8d7 31a0 	ldr.w	r3, [r7, #416]	@ 0x1a0
 8005704:	2b01      	cmp	r3, #1
 8005706:	ddbb      	ble.n	8005680 <Ctrl_Task+0x340>
			for (int i = 0; i < 6; i++)
 8005708:	f8d7 31a4 	ldr.w	r3, [r7, #420]	@ 0x1a4
 800570c:	3301      	adds	r3, #1
 800570e:	f8c7 31a4 	str.w	r3, [r7, #420]	@ 0x1a4
 8005712:	f8d7 31a4 	ldr.w	r3, [r7, #420]	@ 0x1a4
 8005716:	2b05      	cmp	r3, #5
 8005718:	dd88      	ble.n	800562c <Ctrl_Task+0x2ec>
 800571a:	e02d      	b.n	8005778 <Ctrl_Task+0x438>
			}
		}
		else //腿部离地状态，手动修改反馈矩阵，仅保持腿部竖直
		{
			memset(k, 0, sizeof(k));
 800571c:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 8005720:	2260      	movs	r2, #96	@ 0x60
 8005722:	2100      	movs	r1, #0
 8005724:	4618      	mov	r0, r3
 8005726:	f018 f954 	bl	801d9d2 <memset>
			k[1][0] = kRes[1] * -2;
 800572a:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 800572e:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 8005732:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8005736:	f04f 0200 	mov.w	r2, #0
 800573a:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 800573e:	f7fa ff5b 	bl	80005f8 <__aeabi_dmul>
 8005742:	4602      	mov	r2, r0
 8005744:	460b      	mov	r3, r1
 8005746:	f507 71d8 	add.w	r1, r7, #432	@ 0x1b0
 800574a:	f5a1 71a4 	sub.w	r1, r1, #328	@ 0x148
 800574e:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
			k[1][1] = kRes[3] * -10;
 8005752:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 8005756:	f5a3 73d4 	sub.w	r3, r3, #424	@ 0x1a8
 800575a:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 800575e:	f04f 0200 	mov.w	r2, #0
 8005762:	4bdb      	ldr	r3, [pc, #876]	@ (8005ad0 <Ctrl_Task+0x790>)
 8005764:	f7fa ff48 	bl	80005f8 <__aeabi_dmul>
 8005768:	4602      	mov	r2, r0
 800576a:	460b      	mov	r3, r1
 800576c:	f507 71d8 	add.w	r1, r7, #432	@ 0x1b0
 8005770:	f5a1 71a4 	sub.w	r1, r1, #328	@ 0x148
 8005774:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
		}

		//准备状态变量
		float x[6] = {stateVar.theta, stateVar.dTheta, stateVar.x, stateVar.dx, stateVar.phi, stateVar.dPhi};
 8005778:	4bd6      	ldr	r3, [pc, #856]	@ (8005ad4 <Ctrl_Task+0x794>)
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8005780:	4bd4      	ldr	r3, [pc, #848]	@ (8005ad4 <Ctrl_Task+0x794>)
 8005782:	685b      	ldr	r3, [r3, #4]
 8005784:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005788:	4bd2      	ldr	r3, [pc, #840]	@ (8005ad4 <Ctrl_Task+0x794>)
 800578a:	689b      	ldr	r3, [r3, #8]
 800578c:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8005790:	4bd0      	ldr	r3, [pc, #832]	@ (8005ad4 <Ctrl_Task+0x794>)
 8005792:	68db      	ldr	r3, [r3, #12]
 8005794:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005798:	4bce      	ldr	r3, [pc, #824]	@ (8005ad4 <Ctrl_Task+0x794>)
 800579a:	691b      	ldr	r3, [r3, #16]
 800579c:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 80057a0:	4bcc      	ldr	r3, [pc, #816]	@ (8005ad4 <Ctrl_Task+0x794>)
 80057a2:	695b      	ldr	r3, [r3, #20]
 80057a4:	f8c7 3100 	str.w	r3, [r7, #256]	@ 0x100
		//与给定量作差
		x[2] -= target.position;
 80057a8:	ed97 7a3d 	vldr	s14, [r7, #244]	@ 0xf4
 80057ac:	4bca      	ldr	r3, [pc, #808]	@ (8005ad8 <Ctrl_Task+0x798>)
 80057ae:	edd3 7a00 	vldr	s15, [r3]
 80057b2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80057b6:	edc7 7a3d 	vstr	s15, [r7, #244]	@ 0xf4
		x[3] -= target.speed;
 80057ba:	ed97 7a3e 	vldr	s14, [r7, #248]	@ 0xf8
 80057be:	4bc6      	ldr	r3, [pc, #792]	@ (8005ad8 <Ctrl_Task+0x798>)
 80057c0:	edd3 7a02 	vldr	s15, [r3, #8]
 80057c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80057c8:	edc7 7a3e 	vstr	s15, [r7, #248]	@ 0xf8
		check_x = x[2];
 80057cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80057d0:	4ac2      	ldr	r2, [pc, #776]	@ (8005adc <Ctrl_Task+0x79c>)
 80057d2:	6013      	str	r3, [r2, #0]
		//矩阵相乘，计算LQR输出
		float lqrOutT = k[0][0] * x[0] + k[0][1] * x[1] + k[0][2] * x[2] + k[0][3] * x[3] + k[0][4] * x[4] + k[0][5] * x[5];
 80057d4:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80057d8:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80057dc:	e9d3 4500 	ldrd	r4, r5, [r3]
 80057e0:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 80057e4:	4618      	mov	r0, r3
 80057e6:	f7fa feaf 	bl	8000548 <__aeabi_f2d>
 80057ea:	4602      	mov	r2, r0
 80057ec:	460b      	mov	r3, r1
 80057ee:	4620      	mov	r0, r4
 80057f0:	4629      	mov	r1, r5
 80057f2:	f7fa ff01 	bl	80005f8 <__aeabi_dmul>
 80057f6:	4602      	mov	r2, r0
 80057f8:	460b      	mov	r3, r1
 80057fa:	4692      	mov	sl, r2
 80057fc:	469b      	mov	fp, r3
 80057fe:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 8005802:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8005806:	e9d3 4502 	ldrd	r4, r5, [r3, #8]
 800580a:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 800580e:	4618      	mov	r0, r3
 8005810:	f7fa fe9a 	bl	8000548 <__aeabi_f2d>
 8005814:	4602      	mov	r2, r0
 8005816:	460b      	mov	r3, r1
 8005818:	4620      	mov	r0, r4
 800581a:	4629      	mov	r1, r5
 800581c:	f7fa feec 	bl	80005f8 <__aeabi_dmul>
 8005820:	4602      	mov	r2, r0
 8005822:	460b      	mov	r3, r1
 8005824:	4650      	mov	r0, sl
 8005826:	4659      	mov	r1, fp
 8005828:	f7fa fd30 	bl	800028c <__adddf3>
 800582c:	4602      	mov	r2, r0
 800582e:	460b      	mov	r3, r1
 8005830:	4692      	mov	sl, r2
 8005832:	469b      	mov	fp, r3
 8005834:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 8005838:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 800583c:	e9d3 4504 	ldrd	r4, r5, [r3, #16]
 8005840:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005844:	4618      	mov	r0, r3
 8005846:	f7fa fe7f 	bl	8000548 <__aeabi_f2d>
 800584a:	4602      	mov	r2, r0
 800584c:	460b      	mov	r3, r1
 800584e:	4620      	mov	r0, r4
 8005850:	4629      	mov	r1, r5
 8005852:	f7fa fed1 	bl	80005f8 <__aeabi_dmul>
 8005856:	4602      	mov	r2, r0
 8005858:	460b      	mov	r3, r1
 800585a:	4650      	mov	r0, sl
 800585c:	4659      	mov	r1, fp
 800585e:	f7fa fd15 	bl	800028c <__adddf3>
 8005862:	4602      	mov	r2, r0
 8005864:	460b      	mov	r3, r1
 8005866:	4692      	mov	sl, r2
 8005868:	469b      	mov	fp, r3
 800586a:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 800586e:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8005872:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 8005876:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800587a:	4618      	mov	r0, r3
 800587c:	f7fa fe64 	bl	8000548 <__aeabi_f2d>
 8005880:	4602      	mov	r2, r0
 8005882:	460b      	mov	r3, r1
 8005884:	4620      	mov	r0, r4
 8005886:	4629      	mov	r1, r5
 8005888:	f7fa feb6 	bl	80005f8 <__aeabi_dmul>
 800588c:	4602      	mov	r2, r0
 800588e:	460b      	mov	r3, r1
 8005890:	4650      	mov	r0, sl
 8005892:	4659      	mov	r1, fp
 8005894:	f7fa fcfa 	bl	800028c <__adddf3>
 8005898:	4602      	mov	r2, r0
 800589a:	460b      	mov	r3, r1
 800589c:	4692      	mov	sl, r2
 800589e:	469b      	mov	fp, r3
 80058a0:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80058a4:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80058a8:	e9d3 4508 	ldrd	r4, r5, [r3, #32]
 80058ac:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80058b0:	4618      	mov	r0, r3
 80058b2:	f7fa fe49 	bl	8000548 <__aeabi_f2d>
 80058b6:	4602      	mov	r2, r0
 80058b8:	460b      	mov	r3, r1
 80058ba:	4620      	mov	r0, r4
 80058bc:	4629      	mov	r1, r5
 80058be:	f7fa fe9b 	bl	80005f8 <__aeabi_dmul>
 80058c2:	4602      	mov	r2, r0
 80058c4:	460b      	mov	r3, r1
 80058c6:	4650      	mov	r0, sl
 80058c8:	4659      	mov	r1, fp
 80058ca:	f7fa fcdf 	bl	800028c <__adddf3>
 80058ce:	4602      	mov	r2, r0
 80058d0:	460b      	mov	r3, r1
 80058d2:	4692      	mov	sl, r2
 80058d4:	469b      	mov	fp, r3
 80058d6:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80058da:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80058de:	e9d3 450a 	ldrd	r4, r5, [r3, #40]	@ 0x28
 80058e2:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 80058e6:	4618      	mov	r0, r3
 80058e8:	f7fa fe2e 	bl	8000548 <__aeabi_f2d>
 80058ec:	4602      	mov	r2, r0
 80058ee:	460b      	mov	r3, r1
 80058f0:	4620      	mov	r0, r4
 80058f2:	4629      	mov	r1, r5
 80058f4:	f7fa fe80 	bl	80005f8 <__aeabi_dmul>
 80058f8:	4602      	mov	r2, r0
 80058fa:	460b      	mov	r3, r1
 80058fc:	4650      	mov	r0, sl
 80058fe:	4659      	mov	r1, fp
 8005900:	f7fa fcc4 	bl	800028c <__adddf3>
 8005904:	4602      	mov	r2, r0
 8005906:	460b      	mov	r3, r1
 8005908:	4610      	mov	r0, r2
 800590a:	4619      	mov	r1, r3
 800590c:	f7fb f96c 	bl	8000be8 <__aeabi_d2f>
 8005910:	4603      	mov	r3, r0
 8005912:	f8c7 314c 	str.w	r3, [r7, #332]	@ 0x14c
		float lqrOutTp = k[1][0] * x[0] + k[1][1] * x[1] + k[1][2] * x[2] + k[1][3] * x[3] + k[1][4] * x[4] + k[1][5] * x[5];
 8005916:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 800591a:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 800591e:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	@ 0x30
 8005922:	f8d7 30ec 	ldr.w	r3, [r7, #236]	@ 0xec
 8005926:	4618      	mov	r0, r3
 8005928:	f7fa fe0e 	bl	8000548 <__aeabi_f2d>
 800592c:	4602      	mov	r2, r0
 800592e:	460b      	mov	r3, r1
 8005930:	4620      	mov	r0, r4
 8005932:	4629      	mov	r1, r5
 8005934:	f7fa fe60 	bl	80005f8 <__aeabi_dmul>
 8005938:	4602      	mov	r2, r0
 800593a:	460b      	mov	r3, r1
 800593c:	4692      	mov	sl, r2
 800593e:	469b      	mov	fp, r3
 8005940:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 8005944:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8005948:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	@ 0x38
 800594c:	f8d7 30f0 	ldr.w	r3, [r7, #240]	@ 0xf0
 8005950:	4618      	mov	r0, r3
 8005952:	f7fa fdf9 	bl	8000548 <__aeabi_f2d>
 8005956:	4602      	mov	r2, r0
 8005958:	460b      	mov	r3, r1
 800595a:	4620      	mov	r0, r4
 800595c:	4629      	mov	r1, r5
 800595e:	f7fa fe4b 	bl	80005f8 <__aeabi_dmul>
 8005962:	4602      	mov	r2, r0
 8005964:	460b      	mov	r3, r1
 8005966:	4650      	mov	r0, sl
 8005968:	4659      	mov	r1, fp
 800596a:	f7fa fc8f 	bl	800028c <__adddf3>
 800596e:	4602      	mov	r2, r0
 8005970:	460b      	mov	r3, r1
 8005972:	4692      	mov	sl, r2
 8005974:	469b      	mov	fp, r3
 8005976:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 800597a:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 800597e:	e9d3 4510 	ldrd	r4, r5, [r3, #64]	@ 0x40
 8005982:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005986:	4618      	mov	r0, r3
 8005988:	f7fa fdde 	bl	8000548 <__aeabi_f2d>
 800598c:	4602      	mov	r2, r0
 800598e:	460b      	mov	r3, r1
 8005990:	4620      	mov	r0, r4
 8005992:	4629      	mov	r1, r5
 8005994:	f7fa fe30 	bl	80005f8 <__aeabi_dmul>
 8005998:	4602      	mov	r2, r0
 800599a:	460b      	mov	r3, r1
 800599c:	4650      	mov	r0, sl
 800599e:	4659      	mov	r1, fp
 80059a0:	f7fa fc74 	bl	800028c <__adddf3>
 80059a4:	4602      	mov	r2, r0
 80059a6:	460b      	mov	r3, r1
 80059a8:	4692      	mov	sl, r2
 80059aa:	469b      	mov	fp, r3
 80059ac:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80059b0:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80059b4:	e9d3 4512 	ldrd	r4, r5, [r3, #72]	@ 0x48
 80059b8:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80059bc:	4618      	mov	r0, r3
 80059be:	f7fa fdc3 	bl	8000548 <__aeabi_f2d>
 80059c2:	4602      	mov	r2, r0
 80059c4:	460b      	mov	r3, r1
 80059c6:	4620      	mov	r0, r4
 80059c8:	4629      	mov	r1, r5
 80059ca:	f7fa fe15 	bl	80005f8 <__aeabi_dmul>
 80059ce:	4602      	mov	r2, r0
 80059d0:	460b      	mov	r3, r1
 80059d2:	4650      	mov	r0, sl
 80059d4:	4659      	mov	r1, fp
 80059d6:	f7fa fc59 	bl	800028c <__adddf3>
 80059da:	4602      	mov	r2, r0
 80059dc:	460b      	mov	r3, r1
 80059de:	4692      	mov	sl, r2
 80059e0:	469b      	mov	fp, r3
 80059e2:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 80059e6:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 80059ea:	e9d3 4514 	ldrd	r4, r5, [r3, #80]	@ 0x50
 80059ee:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80059f2:	4618      	mov	r0, r3
 80059f4:	f7fa fda8 	bl	8000548 <__aeabi_f2d>
 80059f8:	4602      	mov	r2, r0
 80059fa:	460b      	mov	r3, r1
 80059fc:	4620      	mov	r0, r4
 80059fe:	4629      	mov	r1, r5
 8005a00:	f7fa fdfa 	bl	80005f8 <__aeabi_dmul>
 8005a04:	4602      	mov	r2, r0
 8005a06:	460b      	mov	r3, r1
 8005a08:	4650      	mov	r0, sl
 8005a0a:	4659      	mov	r1, fp
 8005a0c:	f7fa fc3e 	bl	800028c <__adddf3>
 8005a10:	4602      	mov	r2, r0
 8005a12:	460b      	mov	r3, r1
 8005a14:	4692      	mov	sl, r2
 8005a16:	469b      	mov	fp, r3
 8005a18:	f507 73d8 	add.w	r3, r7, #432	@ 0x1b0
 8005a1c:	f5a3 73a4 	sub.w	r3, r3, #328	@ 0x148
 8005a20:	e9d3 4516 	ldrd	r4, r5, [r3, #88]	@ 0x58
 8005a24:	f8d7 3100 	ldr.w	r3, [r7, #256]	@ 0x100
 8005a28:	4618      	mov	r0, r3
 8005a2a:	f7fa fd8d 	bl	8000548 <__aeabi_f2d>
 8005a2e:	4602      	mov	r2, r0
 8005a30:	460b      	mov	r3, r1
 8005a32:	4620      	mov	r0, r4
 8005a34:	4629      	mov	r1, r5
 8005a36:	f7fa fddf 	bl	80005f8 <__aeabi_dmul>
 8005a3a:	4602      	mov	r2, r0
 8005a3c:	460b      	mov	r3, r1
 8005a3e:	4650      	mov	r0, sl
 8005a40:	4659      	mov	r1, fp
 8005a42:	f7fa fc23 	bl	800028c <__adddf3>
 8005a46:	4602      	mov	r2, r0
 8005a48:	460b      	mov	r3, r1
 8005a4a:	4610      	mov	r0, r2
 8005a4c:	4619      	mov	r1, r3
 8005a4e:	f7fb f8cb 	bl	8000be8 <__aeabi_d2f>
 8005a52:	4603      	mov	r3, r0
 8005a54:	f8c7 3148 	str.w	r3, [r7, #328]	@ 0x148
		lqrOutT_check = -lqrOutT;
 8005a58:	edd7 7a53 	vldr	s15, [r7, #332]	@ 0x14c
 8005a5c:	eef1 7a67 	vneg.f32	s15, s15
 8005a60:	ee17 3a90 	vmov	r3, s15
 8005a64:	4618      	mov	r0, r3
 8005a66:	f7fa fd6f 	bl	8000548 <__aeabi_f2d>
 8005a6a:	4602      	mov	r2, r0
 8005a6c:	460b      	mov	r3, r1
 8005a6e:	491c      	ldr	r1, [pc, #112]	@ (8005ae0 <Ctrl_Task+0x7a0>)
 8005a70:	e9c1 2300 	strd	r2, r3, [r1]
		lqrOutTp_check = -lqrOutTp;
 8005a74:	edd7 7a52 	vldr	s15, [r7, #328]	@ 0x148
 8005a78:	eef1 7a67 	vneg.f32	s15, s15
 8005a7c:	ee17 3a90 	vmov	r3, s15
 8005a80:	4618      	mov	r0, r3
 8005a82:	f7fa fd61 	bl	8000548 <__aeabi_f2d>
 8005a86:	4602      	mov	r2, r0
 8005a88:	460b      	mov	r3, r1
 8005a8a:	4916      	ldr	r1, [pc, #88]	@ (8005ae4 <Ctrl_Task+0x7a4>)
 8005a8c:	e9c1 2300 	strd	r2, r3, [r1]
	

		//计算yaw轴PID输出
		PID_Compute(&yawPID, target.yawAngle, imu_heading.yaw,0.004,0);
 8005a90:	4b11      	ldr	r3, [pc, #68]	@ (8005ad8 <Ctrl_Task+0x798>)
 8005a92:	691b      	ldr	r3, [r3, #16]
 8005a94:	4618      	mov	r0, r3
 8005a96:	f7fa fd57 	bl	8000548 <__aeabi_f2d>
 8005a9a:	4604      	mov	r4, r0
 8005a9c:	460d      	mov	r5, r1
 8005a9e:	4b12      	ldr	r3, [pc, #72]	@ (8005ae8 <Ctrl_Task+0x7a8>)
 8005aa0:	689b      	ldr	r3, [r3, #8]
 8005aa2:	4618      	mov	r0, r3
 8005aa4:	f7fa fd50 	bl	8000548 <__aeabi_f2d>
 8005aa8:	4602      	mov	r2, r0
 8005aaa:	460b      	mov	r3, r1
 8005aac:	ed9f 3b04 	vldr	d3, [pc, #16]	@ 8005ac0 <Ctrl_Task+0x780>
 8005ab0:	ed9f 2b05 	vldr	d2, [pc, #20]	@ 8005ac8 <Ctrl_Task+0x788>
 8005ab4:	ec43 2b11 	vmov	d1, r2, r3
 8005ab8:	e018      	b.n	8005aec <Ctrl_Task+0x7ac>
 8005aba:	bf00      	nop
 8005abc:	f3af 8000 	nop.w
	...
 8005ac8:	d2f1a9fc 	.word	0xd2f1a9fc
 8005acc:	3f70624d 	.word	0x3f70624d
 8005ad0:	c0240000 	.word	0xc0240000
 8005ad4:	20002040 	.word	0x20002040
 8005ad8:	20000008 	.word	0x20000008
 8005adc:	20002218 	.word	0x20002218
 8005ae0:	20002168 	.word	0x20002168
 8005ae4:	20002160 	.word	0x20002160
 8005ae8:	20003ad8 	.word	0x20003ad8
 8005aec:	ec45 4b10 	vmov	d0, r4, r5
 8005af0:	4863      	ldr	r0, [pc, #396]	@ (8005c80 <Ctrl_Task+0x940>)
 8005af2:	f7fe ffff 	bl	8004af4 <PID_Compute>

		//设定车轮电机输出扭矩，为LQR和yaw轴PID输出的叠加
		if(groundDetector.isTouchingGround) //正常接地状态
 8005af6:	4b63      	ldr	r3, [pc, #396]	@ (8005c84 <Ctrl_Task+0x944>)
 8005af8:	7a1b      	ldrb	r3, [r3, #8]
 8005afa:	2b00      	cmp	r3, #0
 8005afc:	d035      	beq.n	8005b6a <Ctrl_Task+0x82a>
		{
//			Motor_SetTorque(&leftWheel, -lqrOutT * lqrTRatio - yawPID.output);
//			Motor_SetTorque(&rightWheel, -lqrOutT * lqrTRatio + yawPID.output);
			g_can_motors[0].torque = -lqrOutT * lqrTRatio + yawPID.output;
 8005afe:	edd7 7a53 	vldr	s15, [r7, #332]	@ 0x14c
 8005b02:	eeb1 7a67 	vneg.f32	s14, s15
 8005b06:	edd7 7a5a 	vldr	s15, [r7, #360]	@ 0x168
 8005b0a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005b0e:	ee17 0a90 	vmov	r0, s15
 8005b12:	f7fa fd19 	bl	8000548 <__aeabi_f2d>
 8005b16:	4b5a      	ldr	r3, [pc, #360]	@ (8005c80 <Ctrl_Task+0x940>)
 8005b18:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8005b1c:	f7fa fbb6 	bl	800028c <__adddf3>
 8005b20:	4602      	mov	r2, r0
 8005b22:	460b      	mov	r3, r1
 8005b24:	4610      	mov	r0, r2
 8005b26:	4619      	mov	r1, r3
 8005b28:	f7fb f85e 	bl	8000be8 <__aeabi_d2f>
 8005b2c:	4603      	mov	r3, r0
 8005b2e:	4a56      	ldr	r2, [pc, #344]	@ (8005c88 <Ctrl_Task+0x948>)
 8005b30:	6293      	str	r3, [r2, #40]	@ 0x28
			g_can_motors[1].torque = -lqrOutT * lqrTRatio - yawPID.output;
 8005b32:	edd7 7a53 	vldr	s15, [r7, #332]	@ 0x14c
 8005b36:	eeb1 7a67 	vneg.f32	s14, s15
 8005b3a:	edd7 7a5a 	vldr	s15, [r7, #360]	@ 0x168
 8005b3e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005b42:	ee17 0a90 	vmov	r0, s15
 8005b46:	f7fa fcff 	bl	8000548 <__aeabi_f2d>
 8005b4a:	4b4d      	ldr	r3, [pc, #308]	@ (8005c80 <Ctrl_Task+0x940>)
 8005b4c:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8005b50:	f7fa fb9a 	bl	8000288 <__aeabi_dsub>
 8005b54:	4602      	mov	r2, r0
 8005b56:	460b      	mov	r3, r1
 8005b58:	4610      	mov	r0, r2
 8005b5a:	4619      	mov	r1, r3
 8005b5c:	f7fb f844 	bl	8000be8 <__aeabi_d2f>
 8005b60:	4603      	mov	r3, r0
 8005b62:	4a49      	ldr	r2, [pc, #292]	@ (8005c88 <Ctrl_Task+0x948>)
 8005b64:	f8c2 3118 	str.w	r3, [r2, #280]	@ 0x118
 8005b68:	e008      	b.n	8005b7c <Ctrl_Task+0x83c>
		}
		else //腿部离地状态，关闭车轮电机
		{
//			Motor_SetTorque(&leftWheel, 0);
//			Motor_SetTorque(&rightWheel, 0);
			g_can_motors[0].torque = 0;
 8005b6a:	4b47      	ldr	r3, [pc, #284]	@ (8005c88 <Ctrl_Task+0x948>)
 8005b6c:	f04f 0200 	mov.w	r2, #0
 8005b70:	629a      	str	r2, [r3, #40]	@ 0x28
			g_can_motors[1].torque = 0;
 8005b72:	4b45      	ldr	r3, [pc, #276]	@ (8005c88 <Ctrl_Task+0x948>)
 8005b74:	f04f 0200 	mov.w	r2, #0
 8005b78:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
		}

		//根据离地状态修改目标腿长，并计算腿长PID输出

		PID_Compute(&legLengthPID, (groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? target.legLength : 0.15f, legLength,0.004,0.001);
 8005b7c:	4b41      	ldr	r3, [pc, #260]	@ (8005c84 <Ctrl_Task+0x944>)
 8005b7e:	7a1b      	ldrb	r3, [r3, #8]
 8005b80:	2b00      	cmp	r3, #0
 8005b82:	d00e      	beq.n	8005ba2 <Ctrl_Task+0x862>
 8005b84:	4b3f      	ldr	r3, [pc, #252]	@ (8005c84 <Ctrl_Task+0x944>)
 8005b86:	7a5b      	ldrb	r3, [r3, #9]
 8005b88:	f083 0301 	eor.w	r3, r3, #1
 8005b8c:	b2db      	uxtb	r3, r3
 8005b8e:	2b00      	cmp	r3, #0
 8005b90:	d007      	beq.n	8005ba2 <Ctrl_Task+0x862>
 8005b92:	4b3e      	ldr	r3, [pc, #248]	@ (8005c8c <Ctrl_Task+0x94c>)
 8005b94:	699b      	ldr	r3, [r3, #24]
 8005b96:	4618      	mov	r0, r3
 8005b98:	f7fa fcd6 	bl	8000548 <__aeabi_f2d>
 8005b9c:	4602      	mov	r2, r0
 8005b9e:	460b      	mov	r3, r1
 8005ba0:	e002      	b.n	8005ba8 <Ctrl_Task+0x868>
 8005ba2:	a331      	add	r3, pc, #196	@ (adr r3, 8005c68 <Ctrl_Task+0x928>)
 8005ba4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005ba8:	ed9f 3b31 	vldr	d3, [pc, #196]	@ 8005c70 <Ctrl_Task+0x930>
 8005bac:	ed9f 2b32 	vldr	d2, [pc, #200]	@ 8005c78 <Ctrl_Task+0x938>
 8005bb0:	ed97 1b56 	vldr	d1, [r7, #344]	@ 0x158
 8005bb4:	ec43 2b10 	vmov	d0, r2, r3
 8005bb8:	4835      	ldr	r0, [pc, #212]	@ (8005c90 <Ctrl_Task+0x950>)
 8005bba:	f7fe ff9b 	bl	8004af4 <PID_Compute>
		//计算roll轴PID输出
	
		PID_Compute(&rollPID, target.rollAngle, imu_heading.rol,0.004,0.001);
 8005bbe:	4b33      	ldr	r3, [pc, #204]	@ (8005c8c <Ctrl_Task+0x94c>)
 8005bc0:	695b      	ldr	r3, [r3, #20]
 8005bc2:	4618      	mov	r0, r3
 8005bc4:	f7fa fcc0 	bl	8000548 <__aeabi_f2d>
 8005bc8:	4604      	mov	r4, r0
 8005bca:	460d      	mov	r5, r1
 8005bcc:	4b31      	ldr	r3, [pc, #196]	@ (8005c94 <Ctrl_Task+0x954>)
 8005bce:	685b      	ldr	r3, [r3, #4]
 8005bd0:	4618      	mov	r0, r3
 8005bd2:	f7fa fcb9 	bl	8000548 <__aeabi_f2d>
 8005bd6:	4602      	mov	r2, r0
 8005bd8:	460b      	mov	r3, r1
 8005bda:	ed9f 3b25 	vldr	d3, [pc, #148]	@ 8005c70 <Ctrl_Task+0x930>
 8005bde:	ed9f 2b26 	vldr	d2, [pc, #152]	@ 8005c78 <Ctrl_Task+0x938>
 8005be2:	ec43 2b11 	vmov	d1, r2, r3
 8005be6:	ec45 4b10 	vmov	d0, r4, r5
 8005bea:	482b      	ldr	r0, [pc, #172]	@ (8005c98 <Ctrl_Task+0x958>)
 8005bec:	f7fe ff82 	bl	8004af4 <PID_Compute>
		//根据离地状态计算左右腿推力，若离地则不考虑roll轴PID输出和前馈量
		double leftForce = legLengthPID.output + ((groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? +rollPID.output : 0) + 13;
 8005bf0:	4b27      	ldr	r3, [pc, #156]	@ (8005c90 <Ctrl_Task+0x950>)
 8005bf2:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8005bf6:	4923      	ldr	r1, [pc, #140]	@ (8005c84 <Ctrl_Task+0x944>)
 8005bf8:	7a09      	ldrb	r1, [r1, #8]
 8005bfa:	2900      	cmp	r1, #0
 8005bfc:	d00a      	beq.n	8005c14 <Ctrl_Task+0x8d4>
 8005bfe:	4921      	ldr	r1, [pc, #132]	@ (8005c84 <Ctrl_Task+0x944>)
 8005c00:	7a49      	ldrb	r1, [r1, #9]
 8005c02:	f081 0101 	eor.w	r1, r1, #1
 8005c06:	b2c9      	uxtb	r1, r1
 8005c08:	2900      	cmp	r1, #0
 8005c0a:	d003      	beq.n	8005c14 <Ctrl_Task+0x8d4>
 8005c0c:	4922      	ldr	r1, [pc, #136]	@ (8005c98 <Ctrl_Task+0x958>)
 8005c0e:	e9d1 010e 	ldrd	r0, r1, [r1, #56]	@ 0x38
 8005c12:	e003      	b.n	8005c1c <Ctrl_Task+0x8dc>
 8005c14:	f04f 0000 	mov.w	r0, #0
 8005c18:	f04f 0100 	mov.w	r1, #0
 8005c1c:	f7fa fb36 	bl	800028c <__adddf3>
 8005c20:	4602      	mov	r2, r0
 8005c22:	460b      	mov	r3, r1
 8005c24:	4610      	mov	r0, r2
 8005c26:	4619      	mov	r1, r3
 8005c28:	f04f 0200 	mov.w	r2, #0
 8005c2c:	4b1b      	ldr	r3, [pc, #108]	@ (8005c9c <Ctrl_Task+0x95c>)
 8005c2e:	f7fa fb2d 	bl	800028c <__adddf3>
 8005c32:	4602      	mov	r2, r0
 8005c34:	460b      	mov	r3, r1
 8005c36:	e9c7 2366 	strd	r2, r3, [r7, #408]	@ 0x198
		double rightForce = legLengthPID.output + ((groundDetector.isTouchingGround && !groundDetector.isCuchioning) ? -rollPID.output : 0) + 13;
 8005c3a:	4b15      	ldr	r3, [pc, #84]	@ (8005c90 <Ctrl_Task+0x950>)
 8005c3c:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	@ 0x38
 8005c40:	4b10      	ldr	r3, [pc, #64]	@ (8005c84 <Ctrl_Task+0x944>)
 8005c42:	7a1b      	ldrb	r3, [r3, #8]
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d02b      	beq.n	8005ca0 <Ctrl_Task+0x960>
 8005c48:	4b0e      	ldr	r3, [pc, #56]	@ (8005c84 <Ctrl_Task+0x944>)
 8005c4a:	7a5b      	ldrb	r3, [r3, #9]
 8005c4c:	f083 0301 	eor.w	r3, r3, #1
 8005c50:	b2db      	uxtb	r3, r3
 8005c52:	2b00      	cmp	r3, #0
 8005c54:	d024      	beq.n	8005ca0 <Ctrl_Task+0x960>
 8005c56:	4b10      	ldr	r3, [pc, #64]	@ (8005c98 <Ctrl_Task+0x958>)
 8005c58:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8005c5c:	4690      	mov	r8, r2
 8005c5e:	f083 4900 	eor.w	r9, r3, #2147483648	@ 0x80000000
 8005c62:	e021      	b.n	8005ca8 <Ctrl_Task+0x968>
 8005c64:	f3af 8000 	nop.w
 8005c68:	40000000 	.word	0x40000000
 8005c6c:	3fc33333 	.word	0x3fc33333
 8005c70:	d2f1a9fc 	.word	0xd2f1a9fc
 8005c74:	3f50624d 	.word	0x3f50624d
 8005c78:	d2f1a9fc 	.word	0xd2f1a9fc
 8005c7c:	3f70624d 	.word	0x3f70624d
 8005c80:	200020e0 	.word	0x200020e0
 8005c84:	20000024 	.word	0x20000024
 8005c88:	20002220 	.word	0x20002220
 8005c8c:	20000008 	.word	0x20000008
 8005c90:	200020a0 	.word	0x200020a0
 8005c94:	20003ad8 	.word	0x20003ad8
 8005c98:	20002120 	.word	0x20002120
 8005c9c:	402a0000 	.word	0x402a0000
 8005ca0:	f04f 0800 	mov.w	r8, #0
 8005ca4:	f04f 0900 	mov.w	r9, #0
 8005ca8:	4602      	mov	r2, r0
 8005caa:	460b      	mov	r3, r1
 8005cac:	4640      	mov	r0, r8
 8005cae:	4649      	mov	r1, r9
 8005cb0:	f7fa faec 	bl	800028c <__adddf3>
 8005cb4:	4602      	mov	r2, r0
 8005cb6:	460b      	mov	r3, r1
 8005cb8:	4610      	mov	r0, r2
 8005cba:	4619      	mov	r1, r3
 8005cbc:	f04f 0200 	mov.w	r2, #0
 8005cc0:	4b62      	ldr	r3, [pc, #392]	@ (8005e4c <Ctrl_Task+0xb0c>)
 8005cc2:	f7fa fae3 	bl	800028c <__adddf3>
 8005cc6:	4602      	mov	r2, r0
 8005cc8:	460b      	mov	r3, r1
 8005cca:	e9c7 2364 	strd	r2, r3, [r7, #400]	@ 0x190
//		double leftForce = legLengthPID.output + 5.0;
//		double rightForce = legLengthPID.output + 5.0;
		if(leftLegPos.length > 0.22f) //保护腿部不能伸太长
 8005cce:	4b60      	ldr	r3, [pc, #384]	@ (8005e50 <Ctrl_Task+0xb10>)
 8005cd0:	edd3 7a01 	vldr	s15, [r3, #4]
 8005cd4:	ed9f 7a5f 	vldr	s14, [pc, #380]	@ 8005e54 <Ctrl_Task+0xb14>
 8005cd8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005cdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ce0:	dd14      	ble.n	8005d0c <Ctrl_Task+0x9cc>
			leftForce -= (leftLegPos.length - 0.2f) ;
 8005ce2:	4b5b      	ldr	r3, [pc, #364]	@ (8005e50 <Ctrl_Task+0xb10>)
 8005ce4:	edd3 7a01 	vldr	s15, [r3, #4]
 8005ce8:	ed9f 7a5b 	vldr	s14, [pc, #364]	@ 8005e58 <Ctrl_Task+0xb18>
 8005cec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005cf0:	ee17 0a90 	vmov	r0, s15
 8005cf4:	f7fa fc28 	bl	8000548 <__aeabi_f2d>
 8005cf8:	4602      	mov	r2, r0
 8005cfa:	460b      	mov	r3, r1
 8005cfc:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	@ 0x198
 8005d00:	f7fa fac2 	bl	8000288 <__aeabi_dsub>
 8005d04:	4602      	mov	r2, r0
 8005d06:	460b      	mov	r3, r1
 8005d08:	e9c7 2366 	strd	r2, r3, [r7, #408]	@ 0x198
		if(rightLegPos.length > 0.22f)
 8005d0c:	4b53      	ldr	r3, [pc, #332]	@ (8005e5c <Ctrl_Task+0xb1c>)
 8005d0e:	edd3 7a01 	vldr	s15, [r3, #4]
 8005d12:	ed9f 7a50 	vldr	s14, [pc, #320]	@ 8005e54 <Ctrl_Task+0xb14>
 8005d16:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d1e:	dd14      	ble.n	8005d4a <Ctrl_Task+0xa0a>
			rightForce -= (rightLegPos.length - 0.2f) ;
 8005d20:	4b4e      	ldr	r3, [pc, #312]	@ (8005e5c <Ctrl_Task+0xb1c>)
 8005d22:	edd3 7a01 	vldr	s15, [r3, #4]
 8005d26:	ed9f 7a4c 	vldr	s14, [pc, #304]	@ 8005e58 <Ctrl_Task+0xb18>
 8005d2a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8005d2e:	ee17 0a90 	vmov	r0, s15
 8005d32:	f7fa fc09 	bl	8000548 <__aeabi_f2d>
 8005d36:	4602      	mov	r2, r0
 8005d38:	460b      	mov	r3, r1
 8005d3a:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	@ 0x190
 8005d3e:	f7fa faa3 	bl	8000288 <__aeabi_dsub>
 8005d42:	4602      	mov	r2, r0
 8005d44:	460b      	mov	r3, r1
 8005d46:	e9c7 2364 	strd	r2, r3, [r7, #400]	@ 0x190

// 		//计算左右腿的地面支持力
		groundDetector.leftSupportForce = leftForce + legMass * 9.8f - legMass * (leftLegPos.ddLength - imu_heading.ddz - 9.8f);
 8005d4a:	edd7 7a5c 	vldr	s15, [r7, #368]	@ 0x170
 8005d4e:	ed9f 7a44 	vldr	s14, [pc, #272]	@ 8005e60 <Ctrl_Task+0xb20>
 8005d52:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005d56:	ee17 0a90 	vmov	r0, s15
 8005d5a:	f7fa fbf5 	bl	8000548 <__aeabi_f2d>
 8005d5e:	e9d7 2366 	ldrd	r2, r3, [r7, #408]	@ 0x198
 8005d62:	f7fa fa93 	bl	800028c <__adddf3>
 8005d66:	4602      	mov	r2, r0
 8005d68:	460b      	mov	r3, r1
 8005d6a:	4614      	mov	r4, r2
 8005d6c:	461d      	mov	r5, r3
 8005d6e:	4b38      	ldr	r3, [pc, #224]	@ (8005e50 <Ctrl_Task+0xb10>)
 8005d70:	ed93 7a04 	vldr	s14, [r3, #16]
 8005d74:	4b3b      	ldr	r3, [pc, #236]	@ (8005e64 <Ctrl_Task+0xb24>)
 8005d76:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8005d7a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005d7e:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 8005e60 <Ctrl_Task+0xb20>
 8005d82:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8005d86:	edd7 7a5c 	vldr	s15, [r7, #368]	@ 0x170
 8005d8a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005d8e:	ee17 0a90 	vmov	r0, s15
 8005d92:	f7fa fbd9 	bl	8000548 <__aeabi_f2d>
 8005d96:	4602      	mov	r2, r0
 8005d98:	460b      	mov	r3, r1
 8005d9a:	4620      	mov	r0, r4
 8005d9c:	4629      	mov	r1, r5
 8005d9e:	f7fa fa73 	bl	8000288 <__aeabi_dsub>
 8005da2:	4602      	mov	r2, r0
 8005da4:	460b      	mov	r3, r1
 8005da6:	4610      	mov	r0, r2
 8005da8:	4619      	mov	r1, r3
 8005daa:	f7fa ff1d 	bl	8000be8 <__aeabi_d2f>
 8005dae:	4603      	mov	r3, r0
 8005db0:	4a2d      	ldr	r2, [pc, #180]	@ (8005e68 <Ctrl_Task+0xb28>)
 8005db2:	6013      	str	r3, [r2, #0]
		groundDetector.rightSupportForce = rightForce + legMass * 9.8f - legMass * (rightLegPos.ddLength - imu_heading.ddz - 9.8f);
 8005db4:	edd7 7a5c 	vldr	s15, [r7, #368]	@ 0x170
 8005db8:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 8005e60 <Ctrl_Task+0xb20>
 8005dbc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005dc0:	ee17 0a90 	vmov	r0, s15
 8005dc4:	f7fa fbc0 	bl	8000548 <__aeabi_f2d>
 8005dc8:	e9d7 2364 	ldrd	r2, r3, [r7, #400]	@ 0x190
 8005dcc:	f7fa fa5e 	bl	800028c <__adddf3>
 8005dd0:	4602      	mov	r2, r0
 8005dd2:	460b      	mov	r3, r1
 8005dd4:	4614      	mov	r4, r2
 8005dd6:	461d      	mov	r5, r3
 8005dd8:	4b20      	ldr	r3, [pc, #128]	@ (8005e5c <Ctrl_Task+0xb1c>)
 8005dda:	ed93 7a04 	vldr	s14, [r3, #16]
 8005dde:	4b21      	ldr	r3, [pc, #132]	@ (8005e64 <Ctrl_Task+0xb24>)
 8005de0:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8005de4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005de8:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 8005e60 <Ctrl_Task+0xb20>
 8005dec:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8005df0:	edd7 7a5c 	vldr	s15, [r7, #368]	@ 0x170
 8005df4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005df8:	ee17 0a90 	vmov	r0, s15
 8005dfc:	f7fa fba4 	bl	8000548 <__aeabi_f2d>
 8005e00:	4602      	mov	r2, r0
 8005e02:	460b      	mov	r3, r1
 8005e04:	4620      	mov	r0, r4
 8005e06:	4629      	mov	r1, r5
 8005e08:	f7fa fa3e 	bl	8000288 <__aeabi_dsub>
 8005e0c:	4602      	mov	r2, r0
 8005e0e:	460b      	mov	r3, r1
 8005e10:	4610      	mov	r0, r2
 8005e12:	4619      	mov	r1, r3
 8005e14:	f7fa fee8 	bl	8000be8 <__aeabi_d2f>
 8005e18:	4603      	mov	r3, r0
 8005e1a:	4a13      	ldr	r2, [pc, #76]	@ (8005e68 <Ctrl_Task+0xb28>)
 8005e1c:	6053      	str	r3, [r2, #4]
		//更新离地检测器数据
		static uint32_t lastTouchTime = 0;
		bool isTouchingGround = groundDetector.leftSupportForce > -100 && groundDetector.rightSupportForce > -100; //判断当前瞬间是否接地
 8005e1e:	4b12      	ldr	r3, [pc, #72]	@ (8005e68 <Ctrl_Task+0xb28>)
 8005e20:	edd3 7a00 	vldr	s15, [r3]
 8005e24:	ed9f 7a11 	vldr	s14, [pc, #68]	@ 8005e6c <Ctrl_Task+0xb2c>
 8005e28:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005e2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e30:	dd1e      	ble.n	8005e70 <Ctrl_Task+0xb30>
 8005e32:	4b0d      	ldr	r3, [pc, #52]	@ (8005e68 <Ctrl_Task+0xb28>)
 8005e34:	edd3 7a01 	vldr	s15, [r3, #4]
 8005e38:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8005e6c <Ctrl_Task+0xb2c>
 8005e3c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8005e40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e44:	dd14      	ble.n	8005e70 <Ctrl_Task+0xb30>
 8005e46:	2301      	movs	r3, #1
 8005e48:	e013      	b.n	8005e72 <Ctrl_Task+0xb32>
 8005e4a:	bf00      	nop
 8005e4c:	402a0000 	.word	0x402a0000
 8005e50:	20002018 	.word	0x20002018
 8005e54:	3e6147ae 	.word	0x3e6147ae
 8005e58:	3e4ccccd 	.word	0x3e4ccccd
 8005e5c:	2000202c 	.word	0x2000202c
 8005e60:	411ccccd 	.word	0x411ccccd
 8005e64:	20003ad8 	.word	0x20003ad8
 8005e68:	20000024 	.word	0x20000024
 8005e6c:	c2c80000 	.word	0xc2c80000
 8005e70:	2300      	movs	r3, #0
 8005e72:	f887 318f 	strb.w	r3, [r7, #399]	@ 0x18f
 8005e76:	f897 318f 	ldrb.w	r3, [r7, #399]	@ 0x18f
 8005e7a:	f003 0301 	and.w	r3, r3, #1
 8005e7e:	f887 318f 	strb.w	r3, [r7, #399]	@ 0x18f
		if(!isTouchingGround && (get_microseconds()/1000) - lastTouchTime < 1000) //若上次触地时间距离现在不超过1s，则认为当前瞬间接地，避免弹跳导致误判
 8005e82:	f897 318f 	ldrb.w	r3, [r7, #399]	@ 0x18f
 8005e86:	f083 0301 	eor.w	r3, r3, #1
 8005e8a:	b2db      	uxtb	r3, r3
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	d00f      	beq.n	8005eb0 <Ctrl_Task+0xb70>
 8005e90:	f7fc f996 	bl	80021c0 <get_microseconds>
 8005e94:	4603      	mov	r3, r0
 8005e96:	4a8c      	ldr	r2, [pc, #560]	@ (80060c8 <Ctrl_Task+0xd88>)
 8005e98:	fba2 2303 	umull	r2, r3, r2, r3
 8005e9c:	099a      	lsrs	r2, r3, #6
 8005e9e:	4b8b      	ldr	r3, [pc, #556]	@ (80060cc <Ctrl_Task+0xd8c>)
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	1ad3      	subs	r3, r2, r3
 8005ea4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005ea8:	d202      	bcs.n	8005eb0 <Ctrl_Task+0xb70>
			isTouchingGround = true;
 8005eaa:	2301      	movs	r3, #1
 8005eac:	f887 318f 	strb.w	r3, [r7, #399]	@ 0x18f
		if(!groundDetector.isTouchingGround && isTouchingGround) //判断转为接地状态，标记进入缓冲状态
 8005eb0:	4b87      	ldr	r3, [pc, #540]	@ (80060d0 <Ctrl_Task+0xd90>)
 8005eb2:	7a1b      	ldrb	r3, [r3, #8]
 8005eb4:	f083 0301 	eor.w	r3, r3, #1
 8005eb8:	b2db      	uxtb	r3, r3
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d013      	beq.n	8005ee6 <Ctrl_Task+0xba6>
 8005ebe:	f897 318f 	ldrb.w	r3, [r7, #399]	@ 0x18f
 8005ec2:	2b00      	cmp	r3, #0
 8005ec4:	d00f      	beq.n	8005ee6 <Ctrl_Task+0xba6>
		{
			target.position = stateVar.x;
 8005ec6:	4b83      	ldr	r3, [pc, #524]	@ (80060d4 <Ctrl_Task+0xd94>)
 8005ec8:	689b      	ldr	r3, [r3, #8]
 8005eca:	4a83      	ldr	r2, [pc, #524]	@ (80060d8 <Ctrl_Task+0xd98>)
 8005ecc:	6013      	str	r3, [r2, #0]
			groundDetector.isCuchioning = true;
 8005ece:	4b80      	ldr	r3, [pc, #512]	@ (80060d0 <Ctrl_Task+0xd90>)
 8005ed0:	2201      	movs	r2, #1
 8005ed2:	725a      	strb	r2, [r3, #9]
			lastTouchTime = (get_microseconds()/1000);
 8005ed4:	f7fc f974 	bl	80021c0 <get_microseconds>
 8005ed8:	4603      	mov	r3, r0
 8005eda:	4a7b      	ldr	r2, [pc, #492]	@ (80060c8 <Ctrl_Task+0xd88>)
 8005edc:	fba2 2303 	umull	r2, r3, r2, r3
 8005ee0:	099b      	lsrs	r3, r3, #6
 8005ee2:	4a7a      	ldr	r2, [pc, #488]	@ (80060cc <Ctrl_Task+0xd8c>)
 8005ee4:	6013      	str	r3, [r2, #0]
		}
		if(groundDetector.isCuchioning && legLength < target.legLength) //缓冲状态直到腿长压缩到目标腿长结束
 8005ee6:	4b7a      	ldr	r3, [pc, #488]	@ (80060d0 <Ctrl_Task+0xd90>)
 8005ee8:	7a5b      	ldrb	r3, [r3, #9]
 8005eea:	2b00      	cmp	r3, #0
 8005eec:	d010      	beq.n	8005f10 <Ctrl_Task+0xbd0>
 8005eee:	4b7a      	ldr	r3, [pc, #488]	@ (80060d8 <Ctrl_Task+0xd98>)
 8005ef0:	699b      	ldr	r3, [r3, #24]
 8005ef2:	4618      	mov	r0, r3
 8005ef4:	f7fa fb28 	bl	8000548 <__aeabi_f2d>
 8005ef8:	4602      	mov	r2, r0
 8005efa:	460b      	mov	r3, r1
 8005efc:	e9d7 0156 	ldrd	r0, r1, [r7, #344]	@ 0x158
 8005f00:	f7fa fdec 	bl	8000adc <__aeabi_dcmplt>
 8005f04:	4603      	mov	r3, r0
 8005f06:	2b00      	cmp	r3, #0
 8005f08:	d002      	beq.n	8005f10 <Ctrl_Task+0xbd0>
			groundDetector.isCuchioning = false;
 8005f0a:	4b71      	ldr	r3, [pc, #452]	@ (80060d0 <Ctrl_Task+0xd90>)
 8005f0c:	2200      	movs	r2, #0
 8005f0e:	725a      	strb	r2, [r3, #9]
		groundDetector.isTouchingGround = isTouchingGround;
 8005f10:	4a6f      	ldr	r2, [pc, #444]	@ (80060d0 <Ctrl_Task+0xd90>)
 8005f12:	f897 318f 	ldrb.w	r3, [r7, #399]	@ 0x18f
 8005f16:	7213      	strb	r3, [r2, #8]

		//计算左右腿角度差PID输出
		PID_Compute(&legAnglePID, 0, leftLegPos.angle - rightLegPos.angle,0.004,0.01);
 8005f18:	4b70      	ldr	r3, [pc, #448]	@ (80060dc <Ctrl_Task+0xd9c>)
 8005f1a:	ed93 7a00 	vldr	s14, [r3]
 8005f1e:	4b70      	ldr	r3, [pc, #448]	@ (80060e0 <Ctrl_Task+0xda0>)
 8005f20:	edd3 7a00 	vldr	s15, [r3]
 8005f24:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005f28:	ee17 0a90 	vmov	r0, s15
 8005f2c:	f7fa fb0c 	bl	8000548 <__aeabi_f2d>
 8005f30:	4602      	mov	r2, r0
 8005f32:	460b      	mov	r3, r1
 8005f34:	ed9f 3b5e 	vldr	d3, [pc, #376]	@ 80060b0 <Ctrl_Task+0xd70>
 8005f38:	ed9f 2b5f 	vldr	d2, [pc, #380]	@ 80060b8 <Ctrl_Task+0xd78>
 8005f3c:	ec43 2b11 	vmov	d1, r2, r3
 8005f40:	ed9f 0b5f 	vldr	d0, [pc, #380]	@ 80060c0 <Ctrl_Task+0xd80>
 8005f44:	4867      	ldr	r0, [pc, #412]	@ (80060e4 <Ctrl_Task+0xda4>)
 8005f46:	f7fe fdd5 	bl	8004af4 <PID_Compute>

		//计算髋关节扭矩输出，为LQR输出和左右腿角度差PID输出的叠加
//		double leftTp = lqrOutTp * lqrTpRatio - legAnglePID.output * (leftLegPos.length / 0.15f);
//		double rightTp = -lqrOutTp * lqrTpRatio + legAnglePID.output * (rightLegPos.length / 0.15f);
		double leftTp = -lqrOutTp * lqrTpRatio + legAnglePID.output * (leftLegPos.length / 0.1f);
 8005f4a:	edd7 7a52 	vldr	s15, [r7, #328]	@ 0x148
 8005f4e:	eeb1 7a67 	vneg.f32	s14, s15
 8005f52:	edd7 7a5b 	vldr	s15, [r7, #364]	@ 0x16c
 8005f56:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005f5a:	ee17 0a90 	vmov	r0, s15
 8005f5e:	f7fa faf3 	bl	8000548 <__aeabi_f2d>
 8005f62:	4682      	mov	sl, r0
 8005f64:	468b      	mov	fp, r1
 8005f66:	4b5f      	ldr	r3, [pc, #380]	@ (80060e4 <Ctrl_Task+0xda4>)
 8005f68:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	@ 0x38
 8005f6c:	4b5b      	ldr	r3, [pc, #364]	@ (80060dc <Ctrl_Task+0xd9c>)
 8005f6e:	edd3 7a01 	vldr	s15, [r3, #4]
 8005f72:	ed9f 7a5d 	vldr	s14, [pc, #372]	@ 80060e8 <Ctrl_Task+0xda8>
 8005f76:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8005f7a:	ee16 0a90 	vmov	r0, s13
 8005f7e:	f7fa fae3 	bl	8000548 <__aeabi_f2d>
 8005f82:	4602      	mov	r2, r0
 8005f84:	460b      	mov	r3, r1
 8005f86:	4620      	mov	r0, r4
 8005f88:	4629      	mov	r1, r5
 8005f8a:	f7fa fb35 	bl	80005f8 <__aeabi_dmul>
 8005f8e:	4602      	mov	r2, r0
 8005f90:	460b      	mov	r3, r1
 8005f92:	4650      	mov	r0, sl
 8005f94:	4659      	mov	r1, fp
 8005f96:	f7fa f979 	bl	800028c <__adddf3>
 8005f9a:	4602      	mov	r2, r0
 8005f9c:	460b      	mov	r3, r1
 8005f9e:	e9c7 2350 	strd	r2, r3, [r7, #320]	@ 0x140
		double rightTp = -lqrOutTp * lqrTpRatio - legAnglePID.output * (rightLegPos.length / 0.1f);
 8005fa2:	edd7 7a52 	vldr	s15, [r7, #328]	@ 0x148
 8005fa6:	eeb1 7a67 	vneg.f32	s14, s15
 8005faa:	edd7 7a5b 	vldr	s15, [r7, #364]	@ 0x16c
 8005fae:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005fb2:	ee17 0a90 	vmov	r0, s15
 8005fb6:	f7fa fac7 	bl	8000548 <__aeabi_f2d>
 8005fba:	4682      	mov	sl, r0
 8005fbc:	468b      	mov	fp, r1
 8005fbe:	4b49      	ldr	r3, [pc, #292]	@ (80060e4 <Ctrl_Task+0xda4>)
 8005fc0:	e9d3 450e 	ldrd	r4, r5, [r3, #56]	@ 0x38
 8005fc4:	4b46      	ldr	r3, [pc, #280]	@ (80060e0 <Ctrl_Task+0xda0>)
 8005fc6:	edd3 7a01 	vldr	s15, [r3, #4]
 8005fca:	ed9f 7a47 	vldr	s14, [pc, #284]	@ 80060e8 <Ctrl_Task+0xda8>
 8005fce:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8005fd2:	ee16 0a90 	vmov	r0, s13
 8005fd6:	f7fa fab7 	bl	8000548 <__aeabi_f2d>
 8005fda:	4602      	mov	r2, r0
 8005fdc:	460b      	mov	r3, r1
 8005fde:	4620      	mov	r0, r4
 8005fe0:	4629      	mov	r1, r5
 8005fe2:	f7fa fb09 	bl	80005f8 <__aeabi_dmul>
 8005fe6:	4602      	mov	r2, r0
 8005fe8:	460b      	mov	r3, r1
 8005fea:	4650      	mov	r0, sl
 8005fec:	4659      	mov	r1, fp
 8005fee:	f7fa f94b 	bl	8000288 <__aeabi_dsub>
 8005ff2:	4602      	mov	r2, r0
 8005ff4:	460b      	mov	r3, r1
 8005ff6:	e9c7 234e 	strd	r2, r3, [r7, #312]	@ 0x138



		//使用VMC计算各关节电机输出扭矩
		double leftJointTorque[2]={0};
 8005ffa:	f107 03d8 	add.w	r3, r7, #216	@ 0xd8
 8005ffe:	2200      	movs	r2, #0
 8006000:	601a      	str	r2, [r3, #0]
 8006002:	605a      	str	r2, [r3, #4]
 8006004:	609a      	str	r2, [r3, #8]
 8006006:	60da      	str	r2, [r3, #12]
		leg_conv(leftForce, leftTp, leftJoint[1].angle, leftJoint[0].angle, leftJointTorque);
 8006008:	4b38      	ldr	r3, [pc, #224]	@ (80060ec <Ctrl_Task+0xdac>)
 800600a:	ed93 7b14 	vldr	d7, [r3, #80]	@ 0x50
 800600e:	4b37      	ldr	r3, [pc, #220]	@ (80060ec <Ctrl_Task+0xdac>)
 8006010:	ed93 6b02 	vldr	d6, [r3, #8]
 8006014:	f107 03d8 	add.w	r3, r7, #216	@ 0xd8
 8006018:	4618      	mov	r0, r3
 800601a:	eeb0 3a46 	vmov.f32	s6, s12
 800601e:	eef0 3a66 	vmov.f32	s7, s13
 8006022:	eeb0 2a47 	vmov.f32	s4, s14
 8006026:	eef0 2a67 	vmov.f32	s5, s15
 800602a:	ed97 1b50 	vldr	d1, [r7, #320]	@ 0x140
 800602e:	ed97 0b66 	vldr	d0, [r7, #408]	@ 0x198
 8006032:	f003 f919 	bl	8009268 <leg_conv>
		double rightJointTorque[2]={0};
 8006036:	f107 03c8 	add.w	r3, r7, #200	@ 0xc8
 800603a:	2200      	movs	r2, #0
 800603c:	601a      	str	r2, [r3, #0]
 800603e:	605a      	str	r2, [r3, #4]
 8006040:	609a      	str	r2, [r3, #8]
 8006042:	60da      	str	r2, [r3, #12]
		leg_conv(rightForce, rightTp, rightJoint[1].angle, rightJoint[0].angle, rightJointTorque);
 8006044:	4b2a      	ldr	r3, [pc, #168]	@ (80060f0 <Ctrl_Task+0xdb0>)
 8006046:	ed93 7b14 	vldr	d7, [r3, #80]	@ 0x50
 800604a:	4b29      	ldr	r3, [pc, #164]	@ (80060f0 <Ctrl_Task+0xdb0>)
 800604c:	ed93 6b02 	vldr	d6, [r3, #8]
 8006050:	f107 03c8 	add.w	r3, r7, #200	@ 0xc8
 8006054:	4618      	mov	r0, r3
 8006056:	eeb0 3a46 	vmov.f32	s6, s12
 800605a:	eef0 3a66 	vmov.f32	s7, s13
 800605e:	eeb0 2a47 	vmov.f32	s4, s14
 8006062:	eef0 2a67 	vmov.f32	s5, s15
 8006066:	ed97 1b4e 	vldr	d1, [r7, #312]	@ 0x138
 800606a:	ed97 0b64 	vldr	d0, [r7, #400]	@ 0x190
 800606e:	f003 f8fb 	bl	8009268 <leg_conv>

		leftF_check = leftForce;
 8006072:	4920      	ldr	r1, [pc, #128]	@ (80060f4 <Ctrl_Task+0xdb4>)
 8006074:	e9d7 2366 	ldrd	r2, r3, [r7, #408]	@ 0x198
 8006078:	e9c1 2300 	strd	r2, r3, [r1]
		leftTp_check = leftTp;
 800607c:	491e      	ldr	r1, [pc, #120]	@ (80060f8 <Ctrl_Task+0xdb8>)
 800607e:	e9d7 2350 	ldrd	r2, r3, [r7, #320]	@ 0x140
 8006082:	e9c1 2300 	strd	r2, r3, [r1]
		rightF_check = rightForce;
 8006086:	491d      	ldr	r1, [pc, #116]	@ (80060fc <Ctrl_Task+0xdbc>)
 8006088:	e9d7 2364 	ldrd	r2, r3, [r7, #400]	@ 0x190
 800608c:	e9c1 2300 	strd	r2, r3, [r1]
		rightTp_check = rightTp;
 8006090:	491b      	ldr	r1, [pc, #108]	@ (8006100 <Ctrl_Task+0xdc0>)
 8006092:	e9d7 234e 	ldrd	r2, r3, [r7, #312]	@ 0x138
 8006096:	e9c1 2300 	strd	r2, r3, [r1]

		//保护腿部角度不超限
		if (g_remote_cmd.right_switch == 3){
 800609a:	4b1a      	ldr	r3, [pc, #104]	@ (8006104 <Ctrl_Task+0xdc4>)
 800609c:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80060a0:	2b03      	cmp	r3, #3
 80060a2:	d133      	bne.n	800610c <Ctrl_Task+0xdcc>
			standupState = StandupState_Standup;
 80060a4:	4b18      	ldr	r3, [pc, #96]	@ (8006108 <Ctrl_Task+0xdc8>)
 80060a6:	2202      	movs	r2, #2
 80060a8:	701a      	strb	r2, [r3, #0]
 80060aa:	e032      	b.n	8006112 <Ctrl_Task+0xdd2>
 80060ac:	f3af 8000 	nop.w
 80060b0:	47ae147b 	.word	0x47ae147b
 80060b4:	3f847ae1 	.word	0x3f847ae1
 80060b8:	d2f1a9fc 	.word	0xd2f1a9fc
 80060bc:	3f70624d 	.word	0x3f70624d
	...
 80060c8:	10624dd3 	.word	0x10624dd3
 80060cc:	2000221c 	.word	0x2000221c
 80060d0:	20000024 	.word	0x20000024
 80060d4:	20002040 	.word	0x20002040
 80060d8:	20000008 	.word	0x20000008
 80060dc:	20002018 	.word	0x20002018
 80060e0:	2000202c 	.word	0x2000202c
 80060e4:	20002060 	.word	0x20002060
 80060e8:	3dcccccd 	.word	0x3dcccccd
 80060ec:	20001e68 	.word	0x20001e68
 80060f0:	20001ef8 	.word	0x20001ef8
 80060f4:	20002170 	.word	0x20002170
 80060f8:	20002178 	.word	0x20002178
 80060fc:	20002180 	.word	0x20002180
 8006100:	20002188 	.word	0x20002188
 8006104:	20000838 	.word	0x20000838
 8006108:	20002058 	.word	0x20002058
		}else{
			standupState = StandupState_None;
 800610c:	4bba      	ldr	r3, [pc, #744]	@ (80063f8 <Ctrl_Task+0x10b8>)
 800610e:	2200      	movs	r2, #0
 8006110:	701a      	strb	r2, [r3, #0]
		}
		float leftTheta = leftLegPos.angle - imu_heading.pit - M_PI_2;
 8006112:	4bba      	ldr	r3, [pc, #744]	@ (80063fc <Ctrl_Task+0x10bc>)
 8006114:	ed93 7a00 	vldr	s14, [r3]
 8006118:	4bb9      	ldr	r3, [pc, #740]	@ (8006400 <Ctrl_Task+0x10c0>)
 800611a:	edd3 7a00 	vldr	s15, [r3]
 800611e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006122:	ee17 0a90 	vmov	r0, s15
 8006126:	f7fa fa0f 	bl	8000548 <__aeabi_f2d>
 800612a:	a3ad      	add	r3, pc, #692	@ (adr r3, 80063e0 <Ctrl_Task+0x10a0>)
 800612c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006130:	f7fa f8aa 	bl	8000288 <__aeabi_dsub>
 8006134:	4602      	mov	r2, r0
 8006136:	460b      	mov	r3, r1
 8006138:	4610      	mov	r0, r2
 800613a:	4619      	mov	r1, r3
 800613c:	f7fa fd54 	bl	8000be8 <__aeabi_d2f>
 8006140:	4603      	mov	r3, r0
 8006142:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
		float rightTheta = rightLegPos.angle - imu_heading.pit - M_PI_2;
 8006146:	4baf      	ldr	r3, [pc, #700]	@ (8006404 <Ctrl_Task+0x10c4>)
 8006148:	ed93 7a00 	vldr	s14, [r3]
 800614c:	4bac      	ldr	r3, [pc, #688]	@ (8006400 <Ctrl_Task+0x10c0>)
 800614e:	edd3 7a00 	vldr	s15, [r3]
 8006152:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006156:	ee17 0a90 	vmov	r0, s15
 800615a:	f7fa f9f5 	bl	8000548 <__aeabi_f2d>
 800615e:	a3a0      	add	r3, pc, #640	@ (adr r3, 80063e0 <Ctrl_Task+0x10a0>)
 8006160:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006164:	f7fa f890 	bl	8000288 <__aeabi_dsub>
 8006168:	4602      	mov	r2, r0
 800616a:	460b      	mov	r3, r1
 800616c:	4610      	mov	r0, r2
 800616e:	4619      	mov	r1, r3
 8006170:	f7fa fd3a 	bl	8000be8 <__aeabi_d2f>
 8006174:	4603      	mov	r3, r0
 8006176:	f8c7 3184 	str.w	r3, [r7, #388]	@ 0x184
		#define PROTECT_CONDITION (leftTheta < -M_PI_4 || leftTheta > M_PI_4 || \
								   rightTheta < -M_PI_4 || rightTheta > M_PI_4 || \
								   imu_heading.pit > M_PI_4 || imu_heading.pit < -M_PI_4) //腿部角度超限保护条件
		if(PROTECT_CONDITION || standupState == StandupState_None) //当前达到保护条件 PROTECT_CONDITION
 800617a:	f8d7 0188 	ldr.w	r0, [r7, #392]	@ 0x188
 800617e:	f7fa f9e3 	bl	8000548 <__aeabi_f2d>
 8006182:	a399      	add	r3, pc, #612	@ (adr r3, 80063e8 <Ctrl_Task+0x10a8>)
 8006184:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006188:	f7fa fca8 	bl	8000adc <__aeabi_dcmplt>
 800618c:	4603      	mov	r3, r0
 800618e:	2b00      	cmp	r3, #0
 8006190:	d142      	bne.n	8006218 <Ctrl_Task+0xed8>
 8006192:	f8d7 0188 	ldr.w	r0, [r7, #392]	@ 0x188
 8006196:	f7fa f9d7 	bl	8000548 <__aeabi_f2d>
 800619a:	a395      	add	r3, pc, #596	@ (adr r3, 80063f0 <Ctrl_Task+0x10b0>)
 800619c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061a0:	f7fa fcba 	bl	8000b18 <__aeabi_dcmpgt>
 80061a4:	4603      	mov	r3, r0
 80061a6:	2b00      	cmp	r3, #0
 80061a8:	d136      	bne.n	8006218 <Ctrl_Task+0xed8>
 80061aa:	f8d7 0184 	ldr.w	r0, [r7, #388]	@ 0x184
 80061ae:	f7fa f9cb 	bl	8000548 <__aeabi_f2d>
 80061b2:	a38d      	add	r3, pc, #564	@ (adr r3, 80063e8 <Ctrl_Task+0x10a8>)
 80061b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061b8:	f7fa fc90 	bl	8000adc <__aeabi_dcmplt>
 80061bc:	4603      	mov	r3, r0
 80061be:	2b00      	cmp	r3, #0
 80061c0:	d12a      	bne.n	8006218 <Ctrl_Task+0xed8>
 80061c2:	f8d7 0184 	ldr.w	r0, [r7, #388]	@ 0x184
 80061c6:	f7fa f9bf 	bl	8000548 <__aeabi_f2d>
 80061ca:	a389      	add	r3, pc, #548	@ (adr r3, 80063f0 <Ctrl_Task+0x10b0>)
 80061cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061d0:	f7fa fca2 	bl	8000b18 <__aeabi_dcmpgt>
 80061d4:	4603      	mov	r3, r0
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d11e      	bne.n	8006218 <Ctrl_Task+0xed8>
 80061da:	4b89      	ldr	r3, [pc, #548]	@ (8006400 <Ctrl_Task+0x10c0>)
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	4618      	mov	r0, r3
 80061e0:	f7fa f9b2 	bl	8000548 <__aeabi_f2d>
 80061e4:	a382      	add	r3, pc, #520	@ (adr r3, 80063f0 <Ctrl_Task+0x10b0>)
 80061e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061ea:	f7fa fc95 	bl	8000b18 <__aeabi_dcmpgt>
 80061ee:	4603      	mov	r3, r0
 80061f0:	2b00      	cmp	r3, #0
 80061f2:	d111      	bne.n	8006218 <Ctrl_Task+0xed8>
 80061f4:	4b82      	ldr	r3, [pc, #520]	@ (8006400 <Ctrl_Task+0x10c0>)
 80061f6:	681b      	ldr	r3, [r3, #0]
 80061f8:	4618      	mov	r0, r3
 80061fa:	f7fa f9a5 	bl	8000548 <__aeabi_f2d>
 80061fe:	a37a      	add	r3, pc, #488	@ (adr r3, 80063e8 <Ctrl_Task+0x10a8>)
 8006200:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006204:	f7fa fc6a 	bl	8000adc <__aeabi_dcmplt>
 8006208:	4603      	mov	r3, r0
 800620a:	2b00      	cmp	r3, #0
 800620c:	d104      	bne.n	8006218 <Ctrl_Task+0xed8>
 800620e:	4b7a      	ldr	r3, [pc, #488]	@ (80063f8 <Ctrl_Task+0x10b8>)
 8006210:	781b      	ldrb	r3, [r3, #0]
 8006212:	2b00      	cmp	r3, #0
 8006214:	f040 811f 	bne.w	8006456 <Ctrl_Task+0x1116>
		{
			if(standupState == StandupState_None) //未处于起立过程中
 8006218:	4b77      	ldr	r3, [pc, #476]	@ (80063f8 <Ctrl_Task+0x10b8>)
 800621a:	781b      	ldrb	r3, [r3, #0]
 800621c:	2b00      	cmp	r3, #0
 800621e:	f040 80fb 	bne.w	8006418 <Ctrl_Task+0x10d8>
//				Motor_SetTorque(&rightWheel, 0);
//				Motor_SetTorque(&leftJoint[0], 0);
//				Motor_SetTorque(&leftJoint[1], 0);
//				Motor_SetTorque(&rightJoint[0], 0);
//				Motor_SetTorque(&rightJoint[1], 0);
				g_can_motors[1].torque = 0;
 8006222:	4b79      	ldr	r3, [pc, #484]	@ (8006408 <Ctrl_Task+0x10c8>)
 8006224:	f04f 0200 	mov.w	r2, #0
 8006228:	f8c3 2118 	str.w	r2, [r3, #280]	@ 0x118
				g_can_motors[0].torque = 0;
 800622c:	4b76      	ldr	r3, [pc, #472]	@ (8006408 <Ctrl_Task+0x10c8>)
 800622e:	f04f 0200 	mov.w	r2, #0
 8006232:	629a      	str	r2, [r3, #40]	@ 0x28
				g_can_motors[4].torque = 0;
 8006234:	4b74      	ldr	r3, [pc, #464]	@ (8006408 <Ctrl_Task+0x10c8>)
 8006236:	f04f 0200 	mov.w	r2, #0
 800623a:	f8c3 23e8 	str.w	r2, [r3, #1000]	@ 0x3e8
				g_can_motors[5].torque = 0;
 800623e:	4b72      	ldr	r3, [pc, #456]	@ (8006408 <Ctrl_Task+0x10c8>)
 8006240:	f503 639b 	add.w	r3, r3, #1240	@ 0x4d8
 8006244:	f04f 0200 	mov.w	r2, #0
 8006248:	601a      	str	r2, [r3, #0]
				g_can_motors[6].torque = 0;
 800624a:	4b6f      	ldr	r3, [pc, #444]	@ (8006408 <Ctrl_Task+0x10c8>)
 800624c:	f503 63b9 	add.w	r3, r3, #1480	@ 0x5c8
 8006250:	f04f 0200 	mov.w	r2, #0
 8006254:	601a      	str	r2, [r3, #0]
				g_can_motors[7].torque = 0;
 8006256:	4b6c      	ldr	r3, [pc, #432]	@ (8006408 <Ctrl_Task+0x10c8>)
 8006258:	f503 63d7 	add.w	r3, r3, #1720	@ 0x6b8
 800625c:	f04f 0200 	mov.w	r2, #0
 8006260:	601a      	str	r2, [r3, #0]

				//阻塞等待腿部角度回到安全范围，再等待4s后恢复控制(若中途触发了起立则在起立准备完成后直接跳出)
				while(PROTECT_CONDITION && standupState == StandupState_None)
 8006262:	e036      	b.n	80062d2 <Ctrl_Task+0xf92>
				{
					leftTheta = leftLegPos.angle - imu_heading.pit - M_PI_2;
 8006264:	4b65      	ldr	r3, [pc, #404]	@ (80063fc <Ctrl_Task+0x10bc>)
 8006266:	ed93 7a00 	vldr	s14, [r3]
 800626a:	4b65      	ldr	r3, [pc, #404]	@ (8006400 <Ctrl_Task+0x10c0>)
 800626c:	edd3 7a00 	vldr	s15, [r3]
 8006270:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006274:	ee17 0a90 	vmov	r0, s15
 8006278:	f7fa f966 	bl	8000548 <__aeabi_f2d>
 800627c:	a358      	add	r3, pc, #352	@ (adr r3, 80063e0 <Ctrl_Task+0x10a0>)
 800627e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006282:	f7fa f801 	bl	8000288 <__aeabi_dsub>
 8006286:	4602      	mov	r2, r0
 8006288:	460b      	mov	r3, r1
 800628a:	4610      	mov	r0, r2
 800628c:	4619      	mov	r1, r3
 800628e:	f7fa fcab 	bl	8000be8 <__aeabi_d2f>
 8006292:	4603      	mov	r3, r0
 8006294:	f8c7 3188 	str.w	r3, [r7, #392]	@ 0x188
					rightTheta = rightLegPos.angle - imu_heading.pit - M_PI_2;
 8006298:	4b5a      	ldr	r3, [pc, #360]	@ (8006404 <Ctrl_Task+0x10c4>)
 800629a:	ed93 7a00 	vldr	s14, [r3]
 800629e:	4b58      	ldr	r3, [pc, #352]	@ (8006400 <Ctrl_Task+0x10c0>)
 80062a0:	edd3 7a00 	vldr	s15, [r3]
 80062a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80062a8:	ee17 0a90 	vmov	r0, s15
 80062ac:	f7fa f94c 	bl	8000548 <__aeabi_f2d>
 80062b0:	a34b      	add	r3, pc, #300	@ (adr r3, 80063e0 <Ctrl_Task+0x10a0>)
 80062b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062b6:	f7f9 ffe7 	bl	8000288 <__aeabi_dsub>
 80062ba:	4602      	mov	r2, r0
 80062bc:	460b      	mov	r3, r1
 80062be:	4610      	mov	r0, r2
 80062c0:	4619      	mov	r1, r3
 80062c2:	f7fa fc91 	bl	8000be8 <__aeabi_d2f>
 80062c6:	4603      	mov	r3, r0
 80062c8:	f8c7 3184 	str.w	r3, [r7, #388]	@ 0x184
					vTaskDelay(100);
 80062cc:	2064      	movs	r0, #100	@ 0x64
 80062ce:	f014 fe39 	bl	801af44 <vTaskDelay>
				while(PROTECT_CONDITION && standupState == StandupState_None)
 80062d2:	f8d7 0188 	ldr.w	r0, [r7, #392]	@ 0x188
 80062d6:	f7fa f937 	bl	8000548 <__aeabi_f2d>
 80062da:	a343      	add	r3, pc, #268	@ (adr r3, 80063e8 <Ctrl_Task+0x10a8>)
 80062dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062e0:	f7fa fbfc 	bl	8000adc <__aeabi_dcmplt>
 80062e4:	4603      	mov	r3, r0
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	d13d      	bne.n	8006366 <Ctrl_Task+0x1026>
 80062ea:	f8d7 0188 	ldr.w	r0, [r7, #392]	@ 0x188
 80062ee:	f7fa f92b 	bl	8000548 <__aeabi_f2d>
 80062f2:	a33f      	add	r3, pc, #252	@ (adr r3, 80063f0 <Ctrl_Task+0x10b0>)
 80062f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062f8:	f7fa fc0e 	bl	8000b18 <__aeabi_dcmpgt>
 80062fc:	4603      	mov	r3, r0
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d131      	bne.n	8006366 <Ctrl_Task+0x1026>
 8006302:	f8d7 0184 	ldr.w	r0, [r7, #388]	@ 0x184
 8006306:	f7fa f91f 	bl	8000548 <__aeabi_f2d>
 800630a:	a337      	add	r3, pc, #220	@ (adr r3, 80063e8 <Ctrl_Task+0x10a8>)
 800630c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006310:	f7fa fbe4 	bl	8000adc <__aeabi_dcmplt>
 8006314:	4603      	mov	r3, r0
 8006316:	2b00      	cmp	r3, #0
 8006318:	d125      	bne.n	8006366 <Ctrl_Task+0x1026>
 800631a:	f8d7 0184 	ldr.w	r0, [r7, #388]	@ 0x184
 800631e:	f7fa f913 	bl	8000548 <__aeabi_f2d>
 8006322:	a333      	add	r3, pc, #204	@ (adr r3, 80063f0 <Ctrl_Task+0x10b0>)
 8006324:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006328:	f7fa fbf6 	bl	8000b18 <__aeabi_dcmpgt>
 800632c:	4603      	mov	r3, r0
 800632e:	2b00      	cmp	r3, #0
 8006330:	d119      	bne.n	8006366 <Ctrl_Task+0x1026>
 8006332:	4b33      	ldr	r3, [pc, #204]	@ (8006400 <Ctrl_Task+0x10c0>)
 8006334:	681b      	ldr	r3, [r3, #0]
 8006336:	4618      	mov	r0, r3
 8006338:	f7fa f906 	bl	8000548 <__aeabi_f2d>
 800633c:	a32c      	add	r3, pc, #176	@ (adr r3, 80063f0 <Ctrl_Task+0x10b0>)
 800633e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006342:	f7fa fbe9 	bl	8000b18 <__aeabi_dcmpgt>
 8006346:	4603      	mov	r3, r0
 8006348:	2b00      	cmp	r3, #0
 800634a:	d10c      	bne.n	8006366 <Ctrl_Task+0x1026>
 800634c:	4b2c      	ldr	r3, [pc, #176]	@ (8006400 <Ctrl_Task+0x10c0>)
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	4618      	mov	r0, r3
 8006352:	f7fa f8f9 	bl	8000548 <__aeabi_f2d>
 8006356:	a324      	add	r3, pc, #144	@ (adr r3, 80063e8 <Ctrl_Task+0x10a8>)
 8006358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800635c:	f7fa fbbe 	bl	8000adc <__aeabi_dcmplt>
 8006360:	4603      	mov	r3, r0
 8006362:	2b00      	cmp	r3, #0
 8006364:	d004      	beq.n	8006370 <Ctrl_Task+0x1030>
 8006366:	4b24      	ldr	r3, [pc, #144]	@ (80063f8 <Ctrl_Task+0x10b8>)
 8006368:	781b      	ldrb	r3, [r3, #0]
 800636a:	2b00      	cmp	r3, #0
 800636c:	f43f af7a 	beq.w	8006264 <Ctrl_Task+0xf24>
				}
				if(standupState == StandupState_None)
 8006370:	4b21      	ldr	r3, [pc, #132]	@ (80063f8 <Ctrl_Task+0x10b8>)
 8006372:	781b      	ldrb	r3, [r3, #0]
 8006374:	2b00      	cmp	r3, #0
 8006376:	d103      	bne.n	8006380 <Ctrl_Task+0x1040>
					vTaskDelay(1000);
 8006378:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800637c:	f014 fde2 	bl	801af44 <vTaskDelay>
				//退出保护后设定目标位置和yaw角度为当前值
				target.position = (leftWheel.angle + rightWheel.angle) / 2 * wheelRadius;
 8006380:	4b22      	ldr	r3, [pc, #136]	@ (800640c <Ctrl_Task+0x10cc>)
 8006382:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8006386:	4b22      	ldr	r3, [pc, #136]	@ (8006410 <Ctrl_Task+0x10d0>)
 8006388:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800638c:	f7f9 ff7e 	bl	800028c <__adddf3>
 8006390:	4602      	mov	r2, r0
 8006392:	460b      	mov	r3, r1
 8006394:	4610      	mov	r0, r2
 8006396:	4619      	mov	r1, r3
 8006398:	f04f 0200 	mov.w	r2, #0
 800639c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80063a0:	f7fa fa54 	bl	800084c <__aeabi_ddiv>
 80063a4:	4602      	mov	r2, r0
 80063a6:	460b      	mov	r3, r1
 80063a8:	4614      	mov	r4, r2
 80063aa:	461d      	mov	r5, r3
 80063ac:	f8d7 0174 	ldr.w	r0, [r7, #372]	@ 0x174
 80063b0:	f7fa f8ca 	bl	8000548 <__aeabi_f2d>
 80063b4:	4602      	mov	r2, r0
 80063b6:	460b      	mov	r3, r1
 80063b8:	4620      	mov	r0, r4
 80063ba:	4629      	mov	r1, r5
 80063bc:	f7fa f91c 	bl	80005f8 <__aeabi_dmul>
 80063c0:	4602      	mov	r2, r0
 80063c2:	460b      	mov	r3, r1
 80063c4:	4610      	mov	r0, r2
 80063c6:	4619      	mov	r1, r3
 80063c8:	f7fa fc0e 	bl	8000be8 <__aeabi_d2f>
 80063cc:	4603      	mov	r3, r0
 80063ce:	4a11      	ldr	r2, [pc, #68]	@ (8006414 <Ctrl_Task+0x10d4>)
 80063d0:	6013      	str	r3, [r2, #0]
				target.yawAngle = imu_heading.yaw;
 80063d2:	4b0b      	ldr	r3, [pc, #44]	@ (8006400 <Ctrl_Task+0x10c0>)
 80063d4:	689b      	ldr	r3, [r3, #8]
 80063d6:	4a0f      	ldr	r2, [pc, #60]	@ (8006414 <Ctrl_Task+0x10d4>)
 80063d8:	6113      	str	r3, [r2, #16]
 80063da:	f7ff b819 	b.w	8005410 <Ctrl_Task+0xd0>
 80063de:	bf00      	nop
 80063e0:	54442d18 	.word	0x54442d18
 80063e4:	3ff921fb 	.word	0x3ff921fb
 80063e8:	54442d18 	.word	0x54442d18
 80063ec:	bfe921fb 	.word	0xbfe921fb
 80063f0:	54442d18 	.word	0x54442d18
 80063f4:	3fe921fb 	.word	0x3fe921fb
 80063f8:	20002058 	.word	0x20002058
 80063fc:	20002018 	.word	0x20002018
 8006400:	20003ad8 	.word	0x20003ad8
 8006404:	2000202c 	.word	0x2000202c
 8006408:	20002220 	.word	0x20002220
 800640c:	20001f88 	.word	0x20001f88
 8006410:	20001fd0 	.word	0x20001fd0
 8006414:	20000008 	.word	0x20000008
				continue;
			}
			if(standupState == StandupState_Standup && (leftTheta < -M_PI_4 || rightTheta > M_PI_4))
 8006418:	4b37      	ldr	r3, [pc, #220]	@ (80064f8 <Ctrl_Task+0x11b8>)
 800641a:	781b      	ldrb	r3, [r3, #0]
 800641c:	2b02      	cmp	r3, #2
 800641e:	d11a      	bne.n	8006456 <Ctrl_Task+0x1116>
 8006420:	f8d7 0188 	ldr.w	r0, [r7, #392]	@ 0x188
 8006424:	f7fa f890 	bl	8000548 <__aeabi_f2d>
 8006428:	a32f      	add	r3, pc, #188	@ (adr r3, 80064e8 <Ctrl_Task+0x11a8>)
 800642a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800642e:	f7fa fb55 	bl	8000adc <__aeabi_dcmplt>
 8006432:	4603      	mov	r3, r0
 8006434:	2b00      	cmp	r3, #0
 8006436:	d10b      	bne.n	8006450 <Ctrl_Task+0x1110>
 8006438:	f8d7 0184 	ldr.w	r0, [r7, #388]	@ 0x184
 800643c:	f7fa f884 	bl	8000548 <__aeabi_f2d>
 8006440:	a32b      	add	r3, pc, #172	@ (adr r3, 80064f0 <Ctrl_Task+0x11b0>)
 8006442:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006446:	f7fa fb67 	bl	8000b18 <__aeabi_dcmpgt>
 800644a:	4603      	mov	r3, r0
 800644c:	2b00      	cmp	r3, #0
 800644e:	d002      	beq.n	8006456 <Ctrl_Task+0x1116>
				standupState = StandupState_None;
 8006450:	4b29      	ldr	r3, [pc, #164]	@ (80064f8 <Ctrl_Task+0x11b8>)
 8006452:	2200      	movs	r2, #0
 8006454:	701a      	strb	r2, [r3, #0]
		//设定关节电机输出扭矩
//		Motor_SetTorque(&leftJoint[0], -leftJointTorque[0]);
//		Motor_SetTorque(&leftJoint[1], -leftJointTorque[1]);
//		Motor_SetTorque(&rightJoint[0], -rightJointTorque[0]);
//		Motor_SetTorque(&rightJoint[1], -rightJointTorque[1]);
		g_can_motors[5].torque = leftJointTorque[0];
 8006456:	e9d7 2336 	ldrd	r2, r3, [r7, #216]	@ 0xd8
 800645a:	4610      	mov	r0, r2
 800645c:	4619      	mov	r1, r3
 800645e:	f7fa fbc3 	bl	8000be8 <__aeabi_d2f>
 8006462:	4602      	mov	r2, r0
 8006464:	4b25      	ldr	r3, [pc, #148]	@ (80064fc <Ctrl_Task+0x11bc>)
 8006466:	f503 639b 	add.w	r3, r3, #1240	@ 0x4d8
 800646a:	601a      	str	r2, [r3, #0]
		g_can_motors[4].torque = leftJointTorque[1];
 800646c:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8006470:	4610      	mov	r0, r2
 8006472:	4619      	mov	r1, r3
 8006474:	f7fa fbb8 	bl	8000be8 <__aeabi_d2f>
 8006478:	4603      	mov	r3, r0
 800647a:	4a20      	ldr	r2, [pc, #128]	@ (80064fc <Ctrl_Task+0x11bc>)
 800647c:	f8c2 33e8 	str.w	r3, [r2, #1000]	@ 0x3e8
		g_can_motors[7].torque = rightJointTorque[0];
 8006480:	e9d7 2332 	ldrd	r2, r3, [r7, #200]	@ 0xc8
 8006484:	4610      	mov	r0, r2
 8006486:	4619      	mov	r1, r3
 8006488:	f7fa fbae 	bl	8000be8 <__aeabi_d2f>
 800648c:	4602      	mov	r2, r0
 800648e:	4b1b      	ldr	r3, [pc, #108]	@ (80064fc <Ctrl_Task+0x11bc>)
 8006490:	f503 63d7 	add.w	r3, r3, #1720	@ 0x6b8
 8006494:	601a      	str	r2, [r3, #0]
		g_can_motors[6].torque = rightJointTorque[1];
 8006496:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 800649a:	4610      	mov	r0, r2
 800649c:	4619      	mov	r1, r3
 800649e:	f7fa fba3 	bl	8000be8 <__aeabi_d2f>
 80064a2:	4602      	mov	r2, r0
 80064a4:	4b15      	ldr	r3, [pc, #84]	@ (80064fc <Ctrl_Task+0x11bc>)
 80064a6:	f503 63b9 	add.w	r3, r3, #1480	@ 0x5c8
 80064aa:	601a      	str	r2, [r3, #0]
		l1 = leftJointTorque[0];
 80064ac:	e9d7 2336 	ldrd	r2, r3, [r7, #216]	@ 0xd8
 80064b0:	4913      	ldr	r1, [pc, #76]	@ (8006500 <Ctrl_Task+0x11c0>)
 80064b2:	e9c1 2300 	strd	r2, r3, [r1]
		l4 = leftJointTorque[1];
 80064b6:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 80064ba:	4912      	ldr	r1, [pc, #72]	@ (8006504 <Ctrl_Task+0x11c4>)
 80064bc:	e9c1 2300 	strd	r2, r3, [r1]
		r1 = rightJointTorque[0];
 80064c0:	e9d7 2332 	ldrd	r2, r3, [r7, #200]	@ 0xc8
 80064c4:	4910      	ldr	r1, [pc, #64]	@ (8006508 <Ctrl_Task+0x11c8>)
 80064c6:	e9c1 2300 	strd	r2, r3, [r1]
		r4 = rightJointTorque[1];
 80064ca:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 80064ce:	490f      	ldr	r1, [pc, #60]	@ (800650c <Ctrl_Task+0x11cc>)
 80064d0:	e9c1 2300 	strd	r2, r3, [r1]

		vTaskDelayUntil(&xLastWakeTime, 4); //4ms控制周期
 80064d4:	f507 739a 	add.w	r3, r7, #308	@ 0x134
 80064d8:	2104      	movs	r1, #4
 80064da:	4618      	mov	r0, r3
 80064dc:	f014 fcb2 	bl	801ae44 <vTaskDelayUntil>
	{
 80064e0:	f7fe bf96 	b.w	8005410 <Ctrl_Task+0xd0>
 80064e4:	f3af 8000 	nop.w
 80064e8:	54442d18 	.word	0x54442d18
 80064ec:	bfe921fb 	.word	0xbfe921fb
 80064f0:	54442d18 	.word	0x54442d18
 80064f4:	3fe921fb 	.word	0x3fe921fb
 80064f8:	20002058 	.word	0x20002058
 80064fc:	20002220 	.word	0x20002220
 8006500:	20002198 	.word	0x20002198
 8006504:	200021a0 	.word	0x200021a0
 8006508:	200021a8 	.word	0x200021a8
 800650c:	200021b0 	.word	0x200021b0

08006510 <Ctrl_Init>:
	}
}
void Ctrl_Init()
{
 8006510:	b580      	push	{r7, lr}
 8006512:	af00      	add	r7, sp, #0
	//初始化各个PID参数
//	PID_SetErrLpfRatio(&rollPID.inner, 0.1f);
	PID_Init(&legLengthPID, 500, 0.0, 0.0, -300.0, 300.0);
 8006514:	ed9f 4b1a 	vldr	d4, [pc, #104]	@ 8006580 <Ctrl_Init+0x70>
 8006518:	ed9f 3b1b 	vldr	d3, [pc, #108]	@ 8006588 <Ctrl_Init+0x78>
 800651c:	ed9f 2b1c 	vldr	d2, [pc, #112]	@ 8006590 <Ctrl_Init+0x80>
 8006520:	ed9f 1b1b 	vldr	d1, [pc, #108]	@ 8006590 <Ctrl_Init+0x80>
 8006524:	ed9f 0b1c 	vldr	d0, [pc, #112]	@ 8006598 <Ctrl_Init+0x88>
 8006528:	482f      	ldr	r0, [pc, #188]	@ (80065e8 <Ctrl_Init+0xd8>)
 800652a:	f7fe faa8 	bl	8004a7e <PID_Init>
//	PID_SetErrLpfRatio(&legLengthPID.inner, 0.5f);
	PID_Init(&legAnglePID, 13, 0.0, 0.0, -3.0, 3.0);
 800652e:	ed9f 4b1c 	vldr	d4, [pc, #112]	@ 80065a0 <Ctrl_Init+0x90>
 8006532:	ed9f 3b1d 	vldr	d3, [pc, #116]	@ 80065a8 <Ctrl_Init+0x98>
 8006536:	ed9f 2b16 	vldr	d2, [pc, #88]	@ 8006590 <Ctrl_Init+0x80>
 800653a:	ed9f 1b15 	vldr	d1, [pc, #84]	@ 8006590 <Ctrl_Init+0x80>
 800653e:	ed9f 0b1c 	vldr	d0, [pc, #112]	@ 80065b0 <Ctrl_Init+0xa0>
 8006542:	482a      	ldr	r0, [pc, #168]	@ (80065ec <Ctrl_Init+0xdc>)
 8006544:	f7fe fa9b 	bl	8004a7e <PID_Init>
//	PID_SetErrLpfRatio(&legAnglePID.outer, 0.5f);
	PID_Init(&rollPID, 55, 0.0, 0.0, -50.0, 50.0);
 8006548:	ed9f 4b1b 	vldr	d4, [pc, #108]	@ 80065b8 <Ctrl_Init+0xa8>
 800654c:	ed9f 3b1c 	vldr	d3, [pc, #112]	@ 80065c0 <Ctrl_Init+0xb0>
 8006550:	ed9f 2b0f 	vldr	d2, [pc, #60]	@ 8006590 <Ctrl_Init+0x80>
 8006554:	ed9f 1b0e 	vldr	d1, [pc, #56]	@ 8006590 <Ctrl_Init+0x80>
 8006558:	ed9f 0b1b 	vldr	d0, [pc, #108]	@ 80065c8 <Ctrl_Init+0xb8>
 800655c:	4824      	ldr	r0, [pc, #144]	@ (80065f0 <Ctrl_Init+0xe0>)
 800655e:	f7fe fa8e 	bl	8004a7e <PID_Init>
	PID_Init(&yawPID, 0.5f, 0.0, 0.0, -1, 1);
 8006562:	ed9f 4b1b 	vldr	d4, [pc, #108]	@ 80065d0 <Ctrl_Init+0xc0>
 8006566:	ed9f 3b1c 	vldr	d3, [pc, #112]	@ 80065d8 <Ctrl_Init+0xc8>
 800656a:	ed9f 2b09 	vldr	d2, [pc, #36]	@ 8006590 <Ctrl_Init+0x80>
 800656e:	ed9f 1b08 	vldr	d1, [pc, #32]	@ 8006590 <Ctrl_Init+0x80>
 8006572:	ed9f 0b1b 	vldr	d0, [pc, #108]	@ 80065e0 <Ctrl_Init+0xd0>
 8006576:	481f      	ldr	r0, [pc, #124]	@ (80065f4 <Ctrl_Init+0xe4>)
 8006578:	f7fe fa81 	bl	8004a7e <PID_Init>
}
 800657c:	bf00      	nop
 800657e:	bd80      	pop	{r7, pc}
 8006580:	00000000 	.word	0x00000000
 8006584:	4072c000 	.word	0x4072c000
 8006588:	00000000 	.word	0x00000000
 800658c:	c072c000 	.word	0xc072c000
	...
 800659c:	407f4000 	.word	0x407f4000
 80065a0:	00000000 	.word	0x00000000
 80065a4:	40080000 	.word	0x40080000
 80065a8:	00000000 	.word	0x00000000
 80065ac:	c0080000 	.word	0xc0080000
 80065b0:	00000000 	.word	0x00000000
 80065b4:	402a0000 	.word	0x402a0000
 80065b8:	00000000 	.word	0x00000000
 80065bc:	40490000 	.word	0x40490000
 80065c0:	00000000 	.word	0x00000000
 80065c4:	c0490000 	.word	0xc0490000
 80065c8:	00000000 	.word	0x00000000
 80065cc:	404b8000 	.word	0x404b8000
 80065d0:	00000000 	.word	0x00000000
 80065d4:	3ff00000 	.word	0x3ff00000
 80065d8:	00000000 	.word	0x00000000
 80065dc:	bff00000 	.word	0xbff00000
 80065e0:	00000000 	.word	0x00000000
 80065e4:	3fe00000 	.word	0x3fe00000
 80065e8:	200020a0 	.word	0x200020a0
 80065ec:	20002060 	.word	0x20002060
 80065f0:	20002120 	.word	0x20002120
 80065f4:	200020e0 	.word	0x200020e0

080065f8 <buzzing_task>:
 80065f8:	b580      	push	{r7, lr}
 80065fa:	b086      	sub	sp, #24
 80065fc:	af00      	add	r7, sp, #0
 80065fe:	6078      	str	r0, [r7, #4]
 8006600:	4bb5      	ldr	r3, [pc, #724]	@ (80068d8 <buzzing_task+0x2e0>)
 8006602:	613b      	str	r3, [r7, #16]
 8006604:	4bb5      	ldr	r3, [pc, #724]	@ (80068dc <buzzing_task+0x2e4>)
 8006606:	681b      	ldr	r3, [r3, #0]
 8006608:	f107 010d 	add.w	r1, r7, #13
 800660c:	f04f 32ff 	mov.w	r2, #4294967295
 8006610:	4618      	mov	r0, r3
 8006612:	f013 ffdd 	bl	801a5d0 <xQueueReceive>
 8006616:	7b7b      	ldrb	r3, [r7, #13]
 8006618:	2b0d      	cmp	r3, #13
 800661a:	f200 814c 	bhi.w	80068b6 <buzzing_task+0x2be>
 800661e:	a201      	add	r2, pc, #4	@ (adr r2, 8006624 <buzzing_task+0x2c>)
 8006620:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006624:	0800665d 	.word	0x0800665d
 8006628:	08006703 	.word	0x08006703
 800662c:	08006735 	.word	0x08006735
 8006630:	080067b9 	.word	0x080067b9
 8006634:	08006787 	.word	0x08006787
 8006638:	080067f1 	.word	0x080067f1
 800663c:	0800684b 	.word	0x0800684b
 8006640:	0800685b 	.word	0x0800685b
 8006644:	0800681d 	.word	0x0800681d
 8006648:	0800682d 	.word	0x0800682d
 800664c:	0800683d 	.word	0x0800683d
 8006650:	0800686b 	.word	0x0800686b
 8006654:	08006897 	.word	0x08006897
 8006658:	080068a7 	.word	0x080068a7
 800665c:	2300      	movs	r3, #0
 800665e:	82fb      	strh	r3, [r7, #22]
 8006660:	e04b      	b.n	80066fa <buzzing_task+0x102>
 8006662:	f014 fdc3 	bl	801b1ec <xTaskGetTickCount>
 8006666:	4603      	mov	r3, r0
 8006668:	60bb      	str	r3, [r7, #8]
 800666a:	8afb      	ldrh	r3, [r7, #22]
 800666c:	4a9c      	ldr	r2, [pc, #624]	@ (80068e0 <buzzing_task+0x2e8>)
 800666e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8006672:	4618      	mov	r0, r3
 8006674:	f7fa fd7a 	bl	800116c <buzzer>
 8006678:	8afb      	ldrh	r3, [r7, #22]
 800667a:	4a9a      	ldr	r2, [pc, #616]	@ (80068e4 <buzzing_task+0x2ec>)
 800667c:	009b      	lsls	r3, r3, #2
 800667e:	4413      	add	r3, r2
 8006680:	ed93 7a00 	vldr	s14, [r3]
 8006684:	edd7 7a04 	vldr	s15, [r7, #16]
 8006688:	ee67 7a27 	vmul.f32	s15, s14, s15
 800668c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006690:	ee17 3a90 	vmov	r3, s15
 8006694:	81fb      	strh	r3, [r7, #14]
 8006696:	89fb      	ldrh	r3, [r7, #14]
 8006698:	4618      	mov	r0, r3
 800669a:	f7f9 ff43 	bl	8000524 <__aeabi_i2d>
 800669e:	a38a      	add	r3, pc, #552	@ (adr r3, 80068c8 <buzzing_task+0x2d0>)
 80066a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066a4:	f7f9 ffa8 	bl	80005f8 <__aeabi_dmul>
 80066a8:	4602      	mov	r2, r0
 80066aa:	460b      	mov	r3, r1
 80066ac:	4610      	mov	r0, r2
 80066ae:	4619      	mov	r1, r3
 80066b0:	f7fa fa7a 	bl	8000ba8 <__aeabi_d2uiz>
 80066b4:	4602      	mov	r2, r0
 80066b6:	f107 0308 	add.w	r3, r7, #8
 80066ba:	4611      	mov	r1, r2
 80066bc:	4618      	mov	r0, r3
 80066be:	f014 fbc1 	bl	801ae44 <vTaskDelayUntil>
 80066c2:	2000      	movs	r0, #0
 80066c4:	f7fa fd52 	bl	800116c <buzzer>
 80066c8:	89fb      	ldrh	r3, [r7, #14]
 80066ca:	4618      	mov	r0, r3
 80066cc:	f7f9 ff2a 	bl	8000524 <__aeabi_i2d>
 80066d0:	a37f      	add	r3, pc, #508	@ (adr r3, 80068d0 <buzzing_task+0x2d8>)
 80066d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066d6:	f7f9 ff8f 	bl	80005f8 <__aeabi_dmul>
 80066da:	4602      	mov	r2, r0
 80066dc:	460b      	mov	r3, r1
 80066de:	4610      	mov	r0, r2
 80066e0:	4619      	mov	r1, r3
 80066e2:	f7fa fa61 	bl	8000ba8 <__aeabi_d2uiz>
 80066e6:	4602      	mov	r2, r0
 80066e8:	f107 0308 	add.w	r3, r7, #8
 80066ec:	4611      	mov	r1, r2
 80066ee:	4618      	mov	r0, r3
 80066f0:	f014 fba8 	bl	801ae44 <vTaskDelayUntil>
 80066f4:	8afb      	ldrh	r3, [r7, #22]
 80066f6:	3301      	adds	r3, #1
 80066f8:	82fb      	strh	r3, [r7, #22]
 80066fa:	8afb      	ldrh	r3, [r7, #22]
 80066fc:	2b7c      	cmp	r3, #124	@ 0x7c
 80066fe:	d9b0      	bls.n	8006662 <buzzing_task+0x6a>
 8006700:	e0da      	b.n	80068b8 <buzzing_task+0x2c0>
 8006702:	f014 fd73 	bl	801b1ec <xTaskGetTickCount>
 8006706:	4603      	mov	r3, r0
 8006708:	60bb      	str	r3, [r7, #8]
 800670a:	f44f 705c 	mov.w	r0, #880	@ 0x370
 800670e:	f7fa fd2d 	bl	800116c <buzzer>
 8006712:	2064      	movs	r0, #100	@ 0x64
 8006714:	f014 fc16 	bl	801af44 <vTaskDelay>
 8006718:	2000      	movs	r0, #0
 800671a:	f7fa fd27 	bl	800116c <buzzer>
 800671e:	2032      	movs	r0, #50	@ 0x32
 8006720:	f014 fc10 	bl	801af44 <vTaskDelay>
 8006724:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8006728:	f7fa fd20 	bl	800116c <buzzer>
 800672c:	2064      	movs	r0, #100	@ 0x64
 800672e:	f014 fc09 	bl	801af44 <vTaskDelay>
 8006732:	e0c1      	b.n	80068b8 <buzzing_task+0x2c0>
 8006734:	f014 fd5a 	bl	801b1ec <xTaskGetTickCount>
 8006738:	4603      	mov	r3, r0
 800673a:	60bb      	str	r3, [r7, #8]
 800673c:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8006740:	f7fa fd14 	bl	800116c <buzzer>
 8006744:	2064      	movs	r0, #100	@ 0x64
 8006746:	f014 fbfd 	bl	801af44 <vTaskDelay>
 800674a:	2000      	movs	r0, #0
 800674c:	f7fa fd0e 	bl	800116c <buzzer>
 8006750:	2032      	movs	r0, #50	@ 0x32
 8006752:	f014 fbf7 	bl	801af44 <vTaskDelay>
 8006756:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 800675a:	f7fa fd07 	bl	800116c <buzzer>
 800675e:	2064      	movs	r0, #100	@ 0x64
 8006760:	f014 fbf0 	bl	801af44 <vTaskDelay>
 8006764:	2000      	movs	r0, #0
 8006766:	f7fa fd01 	bl	800116c <buzzer>
 800676a:	2032      	movs	r0, #50	@ 0x32
 800676c:	f014 fbea 	bl	801af44 <vTaskDelay>
 8006770:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8006774:	f7fa fcfa 	bl	800116c <buzzer>
 8006778:	2064      	movs	r0, #100	@ 0x64
 800677a:	f014 fbe3 	bl	801af44 <vTaskDelay>
 800677e:	2000      	movs	r0, #0
 8006780:	f7fa fcf4 	bl	800116c <buzzer>
 8006784:	e098      	b.n	80068b8 <buzzing_task+0x2c0>
 8006786:	f014 fd31 	bl	801b1ec <xTaskGetTickCount>
 800678a:	4603      	mov	r3, r0
 800678c:	60bb      	str	r3, [r7, #8]
 800678e:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 8006792:	f7fa fceb 	bl	800116c <buzzer>
 8006796:	2064      	movs	r0, #100	@ 0x64
 8006798:	f014 fbd4 	bl	801af44 <vTaskDelay>
 800679c:	2000      	movs	r0, #0
 800679e:	f7fa fce5 	bl	800116c <buzzer>
 80067a2:	2032      	movs	r0, #50	@ 0x32
 80067a4:	f014 fbce 	bl	801af44 <vTaskDelay>
 80067a8:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 80067ac:	f7fa fcde 	bl	800116c <buzzer>
 80067b0:	2064      	movs	r0, #100	@ 0x64
 80067b2:	f014 fbc7 	bl	801af44 <vTaskDelay>
 80067b6:	e07f      	b.n	80068b8 <buzzing_task+0x2c0>
 80067b8:	f014 fd18 	bl	801b1ec <xTaskGetTickCount>
 80067bc:	4603      	mov	r3, r0
 80067be:	60bb      	str	r3, [r7, #8]
 80067c0:	f44f 705c 	mov.w	r0, #880	@ 0x370
 80067c4:	f7fa fcd2 	bl	800116c <buzzer>
 80067c8:	2064      	movs	r0, #100	@ 0x64
 80067ca:	f014 fbbb 	bl	801af44 <vTaskDelay>
 80067ce:	2000      	movs	r0, #0
 80067d0:	f7fa fccc 	bl	800116c <buzzer>
 80067d4:	2032      	movs	r0, #50	@ 0x32
 80067d6:	f014 fbb5 	bl	801af44 <vTaskDelay>
 80067da:	f44f 705c 	mov.w	r0, #880	@ 0x370
 80067de:	f7fa fcc5 	bl	800116c <buzzer>
 80067e2:	2064      	movs	r0, #100	@ 0x64
 80067e4:	f014 fbae 	bl	801af44 <vTaskDelay>
 80067e8:	2064      	movs	r0, #100	@ 0x64
 80067ea:	f7fa fcbf 	bl	800116c <buzzer>
 80067ee:	e063      	b.n	80068b8 <buzzing_task+0x2c0>
 80067f0:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 80067f4:	f7fa fcba 	bl	800116c <buzzer>
 80067f8:	2064      	movs	r0, #100	@ 0x64
 80067fa:	f014 fba3 	bl	801af44 <vTaskDelay>
 80067fe:	f44f 7025 	mov.w	r0, #660	@ 0x294
 8006802:	f7fa fcb3 	bl	800116c <buzzer>
 8006806:	2064      	movs	r0, #100	@ 0x64
 8006808:	f014 fb9c 	bl	801af44 <vTaskDelay>
 800680c:	f44f 705c 	mov.w	r0, #880	@ 0x370
 8006810:	f7fa fcac 	bl	800116c <buzzer>
 8006814:	2064      	movs	r0, #100	@ 0x64
 8006816:	f014 fb95 	bl	801af44 <vTaskDelay>
 800681a:	e04d      	b.n	80068b8 <buzzing_task+0x2c0>
 800681c:	f44f 70b9 	mov.w	r0, #370	@ 0x172
 8006820:	f7fa fca4 	bl	800116c <buzzer>
 8006824:	2064      	movs	r0, #100	@ 0x64
 8006826:	f014 fb8d 	bl	801af44 <vTaskDelay>
 800682a:	e045      	b.n	80068b8 <buzzing_task+0x2c0>
 800682c:	f640 1082 	movw	r0, #2434	@ 0x982
 8006830:	f7fa fc9c 	bl	800116c <buzzer>
 8006834:	2064      	movs	r0, #100	@ 0x64
 8006836:	f014 fb85 	bl	801af44 <vTaskDelay>
 800683a:	e03d      	b.n	80068b8 <buzzing_task+0x2c0>
 800683c:	2000      	movs	r0, #0
 800683e:	f7fa fc95 	bl	800116c <buzzer>
 8006842:	2032      	movs	r0, #50	@ 0x32
 8006844:	f014 fb7e 	bl	801af44 <vTaskDelay>
 8006848:	e036      	b.n	80068b8 <buzzing_task+0x2c0>
 800684a:	f44f 705c 	mov.w	r0, #880	@ 0x370
 800684e:	f7fa fc8d 	bl	800116c <buzzer>
 8006852:	2064      	movs	r0, #100	@ 0x64
 8006854:	f014 fb76 	bl	801af44 <vTaskDelay>
 8006858:	e02e      	b.n	80068b8 <buzzing_task+0x2c0>
 800685a:	f44f 70dc 	mov.w	r0, #440	@ 0x1b8
 800685e:	f7fa fc85 	bl	800116c <buzzer>
 8006862:	2064      	movs	r0, #100	@ 0x64
 8006864:	f014 fb6e 	bl	801af44 <vTaskDelay>
 8006868:	e026      	b.n	80068b8 <buzzing_task+0x2c0>
 800686a:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 800686e:	f7fa fc7d 	bl	800116c <buzzer>
 8006872:	2032      	movs	r0, #50	@ 0x32
 8006874:	f014 fb66 	bl	801af44 <vTaskDelay>
 8006878:	f240 4017 	movw	r0, #1047	@ 0x417
 800687c:	f7fa fc76 	bl	800116c <buzzer>
 8006880:	2032      	movs	r0, #50	@ 0x32
 8006882:	f014 fb5f 	bl	801af44 <vTaskDelay>
 8006886:	f240 4055 	movw	r0, #1109	@ 0x455
 800688a:	f7fa fc6f 	bl	800116c <buzzer>
 800688e:	2032      	movs	r0, #50	@ 0x32
 8006890:	f014 fb58 	bl	801af44 <vTaskDelay>
 8006894:	e010      	b.n	80068b8 <buzzing_task+0x2c0>
 8006896:	f44f 7077 	mov.w	r0, #988	@ 0x3dc
 800689a:	f7fa fc67 	bl	800116c <buzzer>
 800689e:	2064      	movs	r0, #100	@ 0x64
 80068a0:	f014 fb50 	bl	801af44 <vTaskDelay>
 80068a4:	e008      	b.n	80068b8 <buzzing_task+0x2c0>
 80068a6:	f240 4055 	movw	r0, #1109	@ 0x455
 80068aa:	f7fa fc5f 	bl	800116c <buzzer>
 80068ae:	2064      	movs	r0, #100	@ 0x64
 80068b0:	f014 fb48 	bl	801af44 <vTaskDelay>
 80068b4:	e000      	b.n	80068b8 <buzzing_task+0x2c0>
 80068b6:	bf00      	nop
 80068b8:	2000      	movs	r0, #0
 80068ba:	f7fa fc57 	bl	800116c <buzzer>
 80068be:	2032      	movs	r0, #50	@ 0x32
 80068c0:	f014 fb40 	bl	801af44 <vTaskDelay>
 80068c4:	e69e      	b.n	8006604 <buzzing_task+0xc>
 80068c6:	bf00      	nop
 80068c8:	66666666 	.word	0x66666666
 80068cc:	3fee6666 	.word	0x3fee6666
 80068d0:	9999999a 	.word	0x9999999a
 80068d4:	3fa99999 	.word	0x3fa99999
 80068d8:	42fa0000 	.word	0x42fa0000
 80068dc:	20003b98 	.word	0x20003b98
 80068e0:	08024b00 	.word	0x08024b00
 80068e4:	08024bfc 	.word	0x08024bfc

080068e8 <can_ISR>:

/**
 * CAN ISR function, triggered upon RX_FIFO0_MSG_PENDING
 * converts the raw can data to the motor_data struct form as well
 */
void can_ISR(CAN_HandleTypeDef *hcan) {
 80068e8:	b580      	push	{r7, lr}
 80068ea:	b08c      	sub	sp, #48	@ 0x30
 80068ec:	af00      	add	r7, sp, #0
 80068ee:	6078      	str	r0, [r7, #4]

	CAN_RxHeaderTypeDef rx_msg_header;
	uint8_t rx_buffer[CAN_BUFFER_SIZE];
	//check which CAN bus received it
	//required because the 2 canbuses use seperate FIFOs for receive
	if (hcan->Instance == CAN1) {
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	4a1f      	ldr	r2, [pc, #124]	@ (8006974 <can_ISR+0x8c>)
 80068f6:	4293      	cmp	r3, r2
 80068f8:	d118      	bne.n	800692c <can_ISR+0x44>
		HAL_CAN_DeactivateNotification(hcan,
 80068fa:	210e      	movs	r1, #14
 80068fc:	6878      	ldr	r0, [r7, #4]
 80068fe:	f008 f820 	bl	800e942 <HAL_CAN_DeactivateNotification>
				CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL
						| CAN_IT_RX_FIFO0_OVERRUN);
		can1_get_msg(&hcan1, &rx_msg_header, rx_buffer);
 8006902:	f107 020c 	add.w	r2, r7, #12
 8006906:	f107 0314 	add.w	r3, r7, #20
 800690a:	4619      	mov	r1, r3
 800690c:	481a      	ldr	r0, [pc, #104]	@ (8006978 <can_ISR+0x90>)
 800690e:	f7fa fc73 	bl	80011f8 <can1_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId, rx_buffer);
 8006912:	697b      	ldr	r3, [r7, #20]
 8006914:	b29b      	uxth	r3, r3
 8006916:	f107 020c 	add.w	r2, r7, #12
 800691a:	4619      	mov	r1, r3
 800691c:	4817      	ldr	r0, [pc, #92]	@ (800697c <can_ISR+0x94>)
 800691e:	f000 f833 	bl	8006988 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8006922:	210e      	movs	r1, #14
 8006924:	6878      	ldr	r0, [r7, #4]
 8006926:	f007 ffe6 	bl	800e8f6 <HAL_CAN_ActivateNotification>
		can_get_msg(&hcan2, &rx_msg_header, rx_buffer);
		process_chassis_can_msg(rx_msg_header.StdId, rx_buffer);
		HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING | CAN_IT_RX_FIFO0_FULL	| CAN_IT_RX_FIFO0_OVERRUN);
	}
#endif
}
 800692a:	e01e      	b.n	800696a <can_ISR+0x82>
	else if (hcan->Instance == CAN2) {
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	4a13      	ldr	r2, [pc, #76]	@ (8006980 <can_ISR+0x98>)
 8006932:	4293      	cmp	r3, r2
 8006934:	d119      	bne.n	800696a <can_ISR+0x82>
		HAL_CAN_DeactivateNotification(hcan,
 8006936:	2170      	movs	r1, #112	@ 0x70
 8006938:	6878      	ldr	r0, [r7, #4]
 800693a:	f008 f802 	bl	800e942 <HAL_CAN_DeactivateNotification>
		can2_get_msg(&hcan2, &rx_msg_header, rx_buffer);
 800693e:	f107 020c 	add.w	r2, r7, #12
 8006942:	f107 0314 	add.w	r3, r7, #20
 8006946:	4619      	mov	r1, r3
 8006948:	480e      	ldr	r0, [pc, #56]	@ (8006984 <can_ISR+0x9c>)
 800694a:	f7fa fc66 	bl	800121a <can2_get_msg>
		convert_raw_can_data(g_can_motors, rx_msg_header.StdId + 12, rx_buffer);
 800694e:	697b      	ldr	r3, [r7, #20]
 8006950:	b29b      	uxth	r3, r3
 8006952:	330c      	adds	r3, #12
 8006954:	b29b      	uxth	r3, r3
 8006956:	f107 020c 	add.w	r2, r7, #12
 800695a:	4619      	mov	r1, r3
 800695c:	4807      	ldr	r0, [pc, #28]	@ (800697c <can_ISR+0x94>)
 800695e:	f000 f813 	bl	8006988 <convert_raw_can_data>
		HAL_CAN_ActivateNotification(hcan,
 8006962:	2170      	movs	r1, #112	@ 0x70
 8006964:	6878      	ldr	r0, [r7, #4]
 8006966:	f007 ffc6 	bl	800e8f6 <HAL_CAN_ActivateNotification>
}
 800696a:	bf00      	nop
 800696c:	3730      	adds	r7, #48	@ 0x30
 800696e:	46bd      	mov	sp, r7
 8006970:	bd80      	pop	{r7, pc}
 8006972:	bf00      	nop
 8006974:	40006400 	.word	0x40006400
 8006978:	20000914 	.word	0x20000914
 800697c:	20002220 	.word	0x20002220
 8006980:	40006800 	.word	0x40006800
 8006984:	2000093c 	.word	0x2000093c

08006988 <convert_raw_can_data>:
 *
 * For GM6020 motors, it recenters the motor angle data and converts it to radians.
 */

void convert_raw_can_data(motor_data_t *can_motor_data, uint16_t motor_id,
		uint8_t *rx_buffer) {
 8006988:	b5b0      	push	{r4, r5, r7, lr}
 800698a:	b08c      	sub	sp, #48	@ 0x30
 800698c:	af00      	add	r7, sp, #0
 800698e:	60f8      	str	r0, [r7, #12]
 8006990:	460b      	mov	r3, r1
 8006992:	607a      	str	r2, [r7, #4]
 8006994:	817b      	strh	r3, [r7, #10]
	uint16_t idnum = motor_id - 0x201;
 8006996:	897b      	ldrh	r3, [r7, #10]
 8006998:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 800699c:	857b      	strh	r3, [r7, #42]	@ 0x2a

	//if idnum > 24, it's not a DJI motor. Add in a seperate processing function if other CAN devices are added
	if (idnum > 24) {
 800699e:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 80069a0:	2b18      	cmp	r3, #24
 80069a2:	f200 81a5 	bhi.w	8006cf0 <convert_raw_can_data+0x368>
		return;
	}
	motor_data_t *curr_motor = &can_motor_data[idnum];
 80069a6:	8d7a      	ldrh	r2, [r7, #42]	@ 0x2a
 80069a8:	4613      	mov	r3, r2
 80069aa:	011b      	lsls	r3, r3, #4
 80069ac:	1a9b      	subs	r3, r3, r2
 80069ae:	011b      	lsls	r3, r3, #4
 80069b0:	461a      	mov	r2, r3
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	4413      	add	r3, r2
 80069b6:	627b      	str	r3, [r7, #36]	@ 0x24
	//motor must be initialised in motor_config.c first
	if (curr_motor->motor_type > 0) {
 80069b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069ba:	789b      	ldrb	r3, [r3, #2]
 80069bc:	2b00      	cmp	r3, #0
 80069be:	f000 8198 	beq.w	8006cf2 <convert_raw_can_data+0x36a>
		//convert the raw data back into the respective values
		curr_motor->id = motor_id;
 80069c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069c4:	897a      	ldrh	r2, [r7, #10]
 80069c6:	801a      	strh	r2, [r3, #0]
		curr_motor->raw_data.angle[1] = curr_motor->raw_data.angle[0];
 80069c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069ca:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 80069ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069d0:	80da      	strh	r2, [r3, #6]
		curr_motor->raw_data.angle[0] = (rx_buffer[0] << 8) | rx_buffer[1];
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	781b      	ldrb	r3, [r3, #0]
 80069d6:	021b      	lsls	r3, r3, #8
 80069d8:	b21a      	sxth	r2, r3
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	3301      	adds	r3, #1
 80069de:	781b      	ldrb	r3, [r3, #0]
 80069e0:	b21b      	sxth	r3, r3
 80069e2:	4313      	orrs	r3, r2
 80069e4:	b21a      	sxth	r2, r3
 80069e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80069e8:	809a      	strh	r2, [r3, #4]
		int16_t temp_rpm = (rx_buffer[2] << 8) | rx_buffer[3];
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	3302      	adds	r3, #2
 80069ee:	781b      	ldrb	r3, [r3, #0]
 80069f0:	021b      	lsls	r3, r3, #8
 80069f2:	b21a      	sxth	r2, r3
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	3303      	adds	r3, #3
 80069f8:	781b      	ldrb	r3, [r3, #0]
 80069fa:	b21b      	sxth	r3, r3
 80069fc:	4313      	orrs	r3, r2
 80069fe:	847b      	strh	r3, [r7, #34]	@ 0x22
		curr_motor->raw_data.rpm = curr_motor->raw_data.rpm * SPEED_LPF
 8006a00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a02:	8c7a      	ldrh	r2, [r7, #34]	@ 0x22
 8006a04:	811a      	strh	r2, [r3, #8]
				+ temp_rpm * (1 - SPEED_LPF);
		curr_motor->raw_data.torque =(rx_buffer[4] << 8) | rx_buffer[5];
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	3304      	adds	r3, #4
 8006a0a:	781b      	ldrb	r3, [r3, #0]
 8006a0c:	021b      	lsls	r3, r3, #8
 8006a0e:	b21a      	sxth	r2, r3
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	3305      	adds	r3, #5
 8006a14:	781b      	ldrb	r3, [r3, #0]
 8006a16:	b21b      	sxth	r3, r3
 8006a18:	4313      	orrs	r3, r2
 8006a1a:	b21a      	sxth	r2, r3
 8006a1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a1e:	815a      	strh	r2, [r3, #10]
		curr_motor->torque_data = ((double)curr_motor->raw_data.torque / 13000.0f)*1.5f;
 8006a20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a22:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 8006a26:	4618      	mov	r0, r3
 8006a28:	f7f9 fd7c 	bl	8000524 <__aeabi_i2d>
 8006a2c:	a3bd      	add	r3, pc, #756	@ (adr r3, 8006d24 <convert_raw_can_data+0x39c>)
 8006a2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a32:	f7f9 ff0b 	bl	800084c <__aeabi_ddiv>
 8006a36:	4602      	mov	r2, r0
 8006a38:	460b      	mov	r3, r1
 8006a3a:	4610      	mov	r0, r2
 8006a3c:	4619      	mov	r1, r3
 8006a3e:	f04f 0200 	mov.w	r2, #0
 8006a42:	4bb1      	ldr	r3, [pc, #708]	@ (8006d08 <convert_raw_can_data+0x380>)
 8006a44:	f7f9 fdd8 	bl	80005f8 <__aeabi_dmul>
 8006a48:	4602      	mov	r2, r0
 8006a4a:	460b      	mov	r3, r1
 8006a4c:	4610      	mov	r0, r2
 8006a4e:	4619      	mov	r1, r3
 8006a50:	f7fa f8ca 	bl	8000be8 <__aeabi_d2f>
 8006a54:	4602      	mov	r2, r0
 8006a56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a58:	62da      	str	r2, [r3, #44]	@ 0x2c
		curr_motor->raw_data.temp = (rx_buffer[6]);
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	799a      	ldrb	r2, [r3, #6]
 8006a5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a60:	731a      	strb	r2, [r3, #12]
		curr_motor->last_time[1] = curr_motor->last_time[0];
 8006a62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a64:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
 8006a68:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a6a:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
		curr_motor->last_time[0] = get_microseconds();
 8006a6e:	f7fb fba7 	bl	80021c0 <get_microseconds>
 8006a72:	4602      	mov	r2, r0
 8006a74:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a76:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4

		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 8006a7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a7c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006a80:	461a      	mov	r2, r3
				- curr_motor->raw_data.angle[1]) / 8192;
 8006a82:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006a84:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8006a88:	1ad3      	subs	r3, r2, r3
		float rds_passed = (float) (curr_motor->raw_data.angle[0]
 8006a8a:	ee07 3a90 	vmov	s15, r3
 8006a8e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006a92:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8006d0c <convert_raw_can_data+0x384>
 8006a96:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006a9a:	edc7 7a07 	vstr	s15, [r7, #28]
		float time_diff = (float) (curr_motor->last_time[0]
 8006a9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006aa0:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
				- curr_motor->last_time[1]) / (float) (TIMER_FREQ * 60);
 8006aa4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006aa6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8006aaa:	1ad3      	subs	r3, r2, r3
		float time_diff = (float) (curr_motor->last_time[0]
 8006aac:	ee07 3a90 	vmov	s15, r3
 8006ab0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8006ab4:	eddf 6a96 	vldr	s13, [pc, #600]	@ 8006d10 <convert_raw_can_data+0x388>
 8006ab8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006abc:	edc7 7a06 	vstr	s15, [r7, #24]
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 8006ac0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ac2:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8006ac6:	4618      	mov	r0, r3
 8006ac8:	f7f9 fd3e 	bl	8000548 <__aeabi_f2d>
				* 0.95 + (rds_passed * time_diff * 0.05);
 8006acc:	a38a      	add	r3, pc, #552	@ (adr r3, 8006cf8 <convert_raw_can_data+0x370>)
 8006ace:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ad2:	f7f9 fd91 	bl	80005f8 <__aeabi_dmul>
 8006ad6:	4602      	mov	r2, r0
 8006ad8:	460b      	mov	r3, r1
 8006ada:	4614      	mov	r4, r2
 8006adc:	461d      	mov	r5, r3
 8006ade:	ed97 7a07 	vldr	s14, [r7, #28]
 8006ae2:	edd7 7a06 	vldr	s15, [r7, #24]
 8006ae6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006aea:	ee17 0a90 	vmov	r0, s15
 8006aee:	f7f9 fd2b 	bl	8000548 <__aeabi_f2d>
 8006af2:	a383      	add	r3, pc, #524	@ (adr r3, 8006d00 <convert_raw_can_data+0x378>)
 8006af4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006af8:	f7f9 fd7e 	bl	80005f8 <__aeabi_dmul>
 8006afc:	4602      	mov	r2, r0
 8006afe:	460b      	mov	r3, r1
 8006b00:	4620      	mov	r0, r4
 8006b02:	4629      	mov	r1, r5
 8006b04:	f7f9 fbc2 	bl	800028c <__adddf3>
 8006b08:	4602      	mov	r2, r0
 8006b0a:	460b      	mov	r3, r1
 8006b0c:	4610      	mov	r0, r2
 8006b0e:	4619      	mov	r1, r3
 8006b10:	f7fa f86a 	bl	8000be8 <__aeabi_d2f>
 8006b14:	4602      	mov	r2, r0
		curr_motor->angle_data.hires_rpm = curr_motor->angle_data.hires_rpm
 8006b16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b18:	f8c3 20d8 	str.w	r2, [r3, #216]	@ 0xd8
		//process the angle data differently depending on the motor type to get radians in the
		//adj_angle value
		switch (curr_motor->motor_type) {
 8006b1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b1e:	789b      	ldrb	r3, [r3, #2]
 8006b20:	3b01      	subs	r3, #1
 8006b22:	2b08      	cmp	r3, #8
 8006b24:	d84d      	bhi.n	8006bc2 <convert_raw_can_data+0x23a>
 8006b26:	a201      	add	r2, pc, #4	@ (adr r2, 8006b2c <convert_raw_can_data+0x1a4>)
 8006b28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006b2c:	08006b51 	.word	0x08006b51
 8006b30:	08006b77 	.word	0x08006b77
 8006b34:	08006b77 	.word	0x08006b77
 8006b38:	08006bc3 	.word	0x08006bc3
 8006b3c:	08006bc3 	.word	0x08006bc3
 8006b40:	08006bc3 	.word	0x08006bc3
 8006b44:	08006b9d 	.word	0x08006b9d
 8006b48:	08006b9d 	.word	0x08006b9d
 8006b4c:	08006b9d 	.word	0x08006b9d
		case TYPE_GM6020:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8006b50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b52:	1d18      	adds	r0, r3, #4
 8006b54:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b56:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 8006b5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b5c:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8006b5e:	461a      	mov	r2, r3
 8006b60:	f000 f922 	bl	8006da8 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8006b64:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b66:	1d1a      	adds	r2, r3, #4
 8006b68:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b6a:	3398      	adds	r3, #152	@ 0x98
 8006b6c:	4619      	mov	r1, r3
 8006b6e:	4610      	mov	r0, r2
 8006b70:	f000 f8dc 	bl	8006d2c <angle_offset>
			break;
 8006b74:	e026      	b.n	8006bc4 <convert_raw_can_data+0x23c>
		case TYPE_M2006:
		case TYPE_M3508:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8006b76:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b78:	1d18      	adds	r0, r3, #4
 8006b7a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b7c:	f103 0198 	add.w	r1, r3, #152	@ 0x98
								curr_motor->last_time);
 8006b80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b82:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8006b84:	461a      	mov	r2, r3
 8006b86:	f000 f90f 	bl	8006da8 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8006b8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b8c:	1d1a      	adds	r2, r3, #4
 8006b8e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b90:	3398      	adds	r3, #152	@ 0x98
 8006b92:	4619      	mov	r1, r3
 8006b94:	4610      	mov	r0, r2
 8006b96:	f000 f8c9 	bl	8006d2c <angle_offset>
			break;
 8006b9a:	e013      	b.n	8006bc4 <convert_raw_can_data+0x23c>
//					curr_motor->last_time);
			break;
		case TYPE_M2006_ANGLE:
		case TYPE_M3508_ANGLE:
		case TYPE_GM6020_720:
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8006b9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006b9e:	1d18      	adds	r0, r3, #4
 8006ba0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ba2:	f103 0198 	add.w	r1, r3, #152	@ 0x98
					curr_motor->last_time);
 8006ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ba8:	33e4      	adds	r3, #228	@ 0xe4
			motor_calc_odometry(&curr_motor->raw_data, &curr_motor->angle_data,
 8006baa:	461a      	mov	r2, r3
 8006bac:	f000 f8fc 	bl	8006da8 <motor_calc_odometry>
			angle_offset(&curr_motor->raw_data, &curr_motor->angle_data);
 8006bb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006bb2:	1d1a      	adds	r2, r3, #4
 8006bb4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006bb6:	3398      	adds	r3, #152	@ 0x98
 8006bb8:	4619      	mov	r1, r3
 8006bba:	4610      	mov	r0, r2
 8006bbc:	f000 f8b6 	bl	8006d2c <angle_offset>
			break;
 8006bc0:	e000      	b.n	8006bc4 <convert_raw_can_data+0x23c>
		default:
			break;
 8006bc2:	bf00      	nop

		}

		//initialise task switching variables
		BaseType_t xHigherPriorityTaskWoken, xResult;
		xHigherPriorityTaskWoken = pdFALSE;
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	617b      	str	r3, [r7, #20]

		//set event group bits so that the tasks and PIDs only trigger upon updated data
		//also checks if the respective tasks are set to ready
		switch (idnum + 1) {
 8006bc8:	8d7b      	ldrh	r3, [r7, #42]	@ 0x2a
 8006bca:	3301      	adds	r3, #1
 8006bcc:	3b05      	subs	r3, #5
 8006bce:	2b0f      	cmp	r3, #15
 8006bd0:	d87c      	bhi.n	8006ccc <convert_raw_can_data+0x344>
 8006bd2:	a201      	add	r2, pc, #4	@ (adr r2, 8006bd8 <convert_raw_can_data+0x250>)
 8006bd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006bd8:	08006c19 	.word	0x08006c19
 8006bdc:	08006c2d 	.word	0x08006c2d
 8006be0:	08006c41 	.word	0x08006c41
 8006be4:	08006c55 	.word	0x08006c55
 8006be8:	08006ccd 	.word	0x08006ccd
 8006bec:	08006ccd 	.word	0x08006ccd
 8006bf0:	08006ccd 	.word	0x08006ccd
 8006bf4:	08006ccd 	.word	0x08006ccd
 8006bf8:	08006ccd 	.word	0x08006ccd
 8006bfc:	08006ccd 	.word	0x08006ccd
 8006c00:	08006c7d 	.word	0x08006c7d
 8006c04:	08006c69 	.word	0x08006c69
 8006c08:	08006c91 	.word	0x08006c91
 8006c0c:	08006ca5 	.word	0x08006ca5
 8006c10:	08006ccd 	.word	0x08006ccd
 8006c14:	08006cb9 	.word	0x08006cb9
#ifndef CHASSIS_MCU
		case FR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b1000,
 8006c18:	4b3e      	ldr	r3, [pc, #248]	@ (8006d14 <convert_raw_can_data+0x38c>)
 8006c1a:	681b      	ldr	r3, [r3, #0]
 8006c1c:	f107 0214 	add.w	r2, r7, #20
 8006c20:	2108      	movs	r1, #8
 8006c22:	4618      	mov	r0, r3
 8006c24:	f013 f896 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006c28:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006c2a:	e052      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case FL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0100,
 8006c2c:	4b39      	ldr	r3, [pc, #228]	@ (8006d14 <convert_raw_can_data+0x38c>)
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	f107 0214 	add.w	r2, r7, #20
 8006c34:	2104      	movs	r1, #4
 8006c36:	4618      	mov	r0, r3
 8006c38:	f013 f88c 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006c3c:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006c3e:	e048      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case BL_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0010,
 8006c40:	4b34      	ldr	r3, [pc, #208]	@ (8006d14 <convert_raw_can_data+0x38c>)
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	f107 0214 	add.w	r2, r7, #20
 8006c48:	2102      	movs	r1, #2
 8006c4a:	4618      	mov	r0, r3
 8006c4c:	f013 f882 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006c50:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006c52:	e03e      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case BR_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(chassis_event_group, 0b0001,
 8006c54:	4b2f      	ldr	r3, [pc, #188]	@ (8006d14 <convert_raw_can_data+0x38c>)
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	f107 0214 	add.w	r2, r7, #20
 8006c5c:	2101      	movs	r1, #1
 8006c5e:	4618      	mov	r0, r3
 8006c60:	f013 f878 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006c64:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006c66:	e034      	b.n	8006cd2 <convert_raw_can_data+0x34a>
#endif
		case LFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b010,
 8006c68:	4b2b      	ldr	r3, [pc, #172]	@ (8006d18 <convert_raw_can_data+0x390>)
 8006c6a:	681b      	ldr	r3, [r3, #0]
 8006c6c:	f107 0214 	add.w	r2, r7, #20
 8006c70:	2102      	movs	r1, #2
 8006c72:	4618      	mov	r0, r3
 8006c74:	f013 f86e 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006c78:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006c7a:	e02a      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case RFRICTION_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b001,
 8006c7c:	4b26      	ldr	r3, [pc, #152]	@ (8006d18 <convert_raw_can_data+0x390>)
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	f107 0214 	add.w	r2, r7, #20
 8006c84:	2101      	movs	r1, #1
 8006c86:	4618      	mov	r0, r3
 8006c88:	f013 f864 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006c8c:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006c8e:	e020      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case FEEDER_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(launcher_event_group, 0b100,
 8006c90:	4b21      	ldr	r3, [pc, #132]	@ (8006d18 <convert_raw_can_data+0x390>)
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	f107 0214 	add.w	r2, r7, #20
 8006c98:	2104      	movs	r1, #4
 8006c9a:	4618      	mov	r0, r3
 8006c9c:	f013 f85a 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006ca0:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006ca2:	e016      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case PITCH_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b01,
 8006ca4:	4b1d      	ldr	r3, [pc, #116]	@ (8006d1c <convert_raw_can_data+0x394>)
 8006ca6:	681b      	ldr	r3, [r3, #0]
 8006ca8:	f107 0214 	add.w	r2, r7, #20
 8006cac:	2101      	movs	r1, #1
 8006cae:	4618      	mov	r0, r3
 8006cb0:	f013 f850 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006cb4:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006cb6:	e00c      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		case YAW_MOTOR_ID:
			xResult = xEventGroupSetBitsFromISR(gimbal_event_group, 0b10,
 8006cb8:	4b18      	ldr	r3, [pc, #96]	@ (8006d1c <convert_raw_can_data+0x394>)
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	f107 0214 	add.w	r2, r7, #20
 8006cc0:	2102      	movs	r1, #2
 8006cc2:	4618      	mov	r0, r3
 8006cc4:	f013 f846 	bl	8019d54 <xEventGroupSetBitsFromISR>
 8006cc8:	62f8      	str	r0, [r7, #44]	@ 0x2c
					&xHigherPriorityTaskWoken);
			break;
 8006cca:	e002      	b.n	8006cd2 <convert_raw_can_data+0x34a>
		default:
			xResult = pdFAIL;
 8006ccc:	2300      	movs	r3, #0
 8006cce:	62fb      	str	r3, [r7, #44]	@ 0x2c
			idnum = idnum;
			//error handler
			break;
 8006cd0:	bf00      	nop
		}

		//switches tasks if a higher priority task is ready.
		//required because the function is in an ISR
		if (xResult != pdFAIL) {
 8006cd2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d00c      	beq.n	8006cf2 <convert_raw_can_data+0x36a>
			portYIELD_FROM_ISR(xHigherPriorityTaskWoken); //forces current task to yield if higher priority task is called
 8006cd8:	697b      	ldr	r3, [r7, #20]
 8006cda:	2b00      	cmp	r3, #0
 8006cdc:	d009      	beq.n	8006cf2 <convert_raw_can_data+0x36a>
 8006cde:	4b10      	ldr	r3, [pc, #64]	@ (8006d20 <convert_raw_can_data+0x398>)
 8006ce0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006ce4:	601a      	str	r2, [r3, #0]
 8006ce6:	f3bf 8f4f 	dsb	sy
 8006cea:	f3bf 8f6f 	isb	sy
 8006cee:	e000      	b.n	8006cf2 <convert_raw_can_data+0x36a>
		return;
 8006cf0:	bf00      	nop
		}
	} else {
		//this is a useless statement so that it is possible to set a breakpoint here lol
		//error handler
	}
}
 8006cf2:	3730      	adds	r7, #48	@ 0x30
 8006cf4:	46bd      	mov	sp, r7
 8006cf6:	bdb0      	pop	{r4, r5, r7, pc}
 8006cf8:	66666666 	.word	0x66666666
 8006cfc:	3fee6666 	.word	0x3fee6666
 8006d00:	9999999a 	.word	0x9999999a
 8006d04:	3fa99999 	.word	0x3fa99999
 8006d08:	3ff80000 	.word	0x3ff80000
 8006d0c:	46000000 	.word	0x46000000
 8006d10:	4ab71b00 	.word	0x4ab71b00
 8006d14:	20003b80 	.word	0x20003b80
 8006d18:	20003b84 	.word	0x20003b84
 8006d1c:	20003b7c 	.word	0x20003b7c
 8006d20:	e000ed04 	.word	0xe000ed04
 8006d24:	00000000 	.word	0x00000000
 8006d28:	40c96400 	.word	0x40c96400

08006d2c <angle_offset>:
}

/**
 * Centers the raw motor angle to between -Pi to +Pi
 */
void angle_offset(raw_data_t *motor_data, angle_data_t *angle_data) {
 8006d2c:	b480      	push	{r7}
 8006d2e:	b085      	sub	sp, #20
 8006d30:	af00      	add	r7, sp, #0
 8006d32:	6078      	str	r0, [r7, #4]
 8006d34:	6039      	str	r1, [r7, #0]
	int32_t temp_ang = 0;
 8006d36:	2300      	movs	r3, #0
 8006d38:	60fb      	str	r3, [r7, #12]
//	}
//	while (angle_data->ticks < angle_data->min_ticks) {
//		angle_data->ticks += angle_data->tick_range;
//	}

	temp_ang = angle_data->ticks - angle_data->center_ang;
 8006d3a:	683b      	ldr	r3, [r7, #0]
 8006d3c:	681a      	ldr	r2, [r3, #0]
 8006d3e:	683b      	ldr	r3, [r7, #0]
 8006d40:	685b      	ldr	r3, [r3, #4]
 8006d42:	1ad3      	subs	r3, r2, r3
 8006d44:	60fb      	str	r3, [r7, #12]
	if (temp_ang > angle_data->max_ticks) {
 8006d46:	683b      	ldr	r3, [r7, #0]
 8006d48:	68db      	ldr	r3, [r3, #12]
 8006d4a:	68fa      	ldr	r2, [r7, #12]
 8006d4c:	429a      	cmp	r2, r3
 8006d4e:	dd05      	ble.n	8006d5c <angle_offset+0x30>
		temp_ang -= angle_data->tick_range;
 8006d50:	683b      	ldr	r3, [r7, #0]
 8006d52:	691b      	ldr	r3, [r3, #16]
 8006d54:	68fa      	ldr	r2, [r7, #12]
 8006d56:	1ad3      	subs	r3, r2, r3
 8006d58:	60fb      	str	r3, [r7, #12]
 8006d5a:	e009      	b.n	8006d70 <angle_offset+0x44>
	} else if (temp_ang < angle_data->min_ticks) {
 8006d5c:	683b      	ldr	r3, [r7, #0]
 8006d5e:	689b      	ldr	r3, [r3, #8]
 8006d60:	68fa      	ldr	r2, [r7, #12]
 8006d62:	429a      	cmp	r2, r3
 8006d64:	da04      	bge.n	8006d70 <angle_offset+0x44>
		temp_ang += angle_data->tick_range;
 8006d66:	683b      	ldr	r3, [r7, #0]
 8006d68:	691b      	ldr	r3, [r3, #16]
 8006d6a:	68fa      	ldr	r2, [r7, #12]
 8006d6c:	4413      	add	r3, r2
 8006d6e:	60fb      	str	r3, [r7, #12]
	}
//	angle_data->ticks = temp_ang;
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 8006d70:	68fb      	ldr	r3, [r7, #12]
 8006d72:	ee07 3a90 	vmov	s15, r3
 8006d76:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006d7a:	683b      	ldr	r3, [r7, #0]
 8006d7c:	edd3 7a09 	vldr	s15, [r3, #36]	@ 0x24
 8006d80:	ee67 6a27 	vmul.f32	s13, s14, s15
			/ angle_data->tick_range;
 8006d84:	683b      	ldr	r3, [r7, #0]
 8006d86:	691b      	ldr	r3, [r3, #16]
 8006d88:	ee07 3a90 	vmov	s15, r3
 8006d8c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006d90:	eec6 7a87 	vdiv.f32	s15, s13, s14
	angle_data->adj_ang = (float) temp_ang * angle_data->ang_range
 8006d94:	683b      	ldr	r3, [r7, #0]
 8006d96:	edc3 7a0d 	vstr	s15, [r3, #52]	@ 0x34
}
 8006d9a:	bf00      	nop
 8006d9c:	3714      	adds	r7, #20
 8006d9e:	46bd      	mov	sp, r7
 8006da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006da4:	4770      	bx	lr
	...

08006da8 <motor_calc_odometry>:

void motor_calc_odometry(raw_data_t *motor_data, angle_data_t *angle_data,
		uint32_t feedback_times[]) {
 8006da8:	b480      	push	{r7}
 8006daa:	b087      	sub	sp, #28
 8006dac:	af00      	add	r7, sp, #0
 8006dae:	60f8      	str	r0, [r7, #12]
 8006db0:	60b9      	str	r1, [r7, #8]
 8006db2:	607a      	str	r2, [r7, #4]
	int16_t abs_angle_diff;
	abs_angle_diff = motor_data->angle[0] - motor_data->angle[1];
 8006db4:	68fb      	ldr	r3, [r7, #12]
 8006db6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8006dba:	b29a      	uxth	r2, r3
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8006dc2:	b29b      	uxth	r3, r3
 8006dc4:	1ad3      	subs	r3, r2, r3
 8006dc6:	b29b      	uxth	r3, r3
 8006dc8:	82fb      	strh	r3, [r7, #22]
	if (angle_data->init == 0){
 8006dca:	68bb      	ldr	r3, [r7, #8]
 8006dcc:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8006dd0:	2b00      	cmp	r3, #0
 8006dd2:	d129      	bne.n	8006e28 <motor_calc_odometry+0x80>
		angle_data->ticks = motor_data->angle[0];
 8006dd4:	68fb      	ldr	r3, [r7, #12]
 8006dd6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8006dda:	461a      	mov	r2, r3
 8006ddc:	68bb      	ldr	r3, [r7, #8]
 8006dde:	601a      	str	r2, [r3, #0]
		if (angle_data->ticks > angle_data->max_ticks) {
 8006de0:	68bb      	ldr	r3, [r7, #8]
 8006de2:	681a      	ldr	r2, [r3, #0]
 8006de4:	68bb      	ldr	r3, [r7, #8]
 8006de6:	68db      	ldr	r3, [r3, #12]
 8006de8:	429a      	cmp	r2, r3
 8006dea:	dd06      	ble.n	8006dfa <motor_calc_odometry+0x52>
			angle_data->ticks -= angle_data->tick_range;
 8006dec:	68bb      	ldr	r3, [r7, #8]
 8006dee:	681a      	ldr	r2, [r3, #0]
 8006df0:	68bb      	ldr	r3, [r7, #8]
 8006df2:	691b      	ldr	r3, [r3, #16]
 8006df4:	1ad2      	subs	r2, r2, r3
 8006df6:	68bb      	ldr	r3, [r7, #8]
 8006df8:	601a      	str	r2, [r3, #0]
		}
		if (angle_data->ticks < angle_data->min_ticks) {
 8006dfa:	68bb      	ldr	r3, [r7, #8]
 8006dfc:	681a      	ldr	r2, [r3, #0]
 8006dfe:	68bb      	ldr	r3, [r7, #8]
 8006e00:	689b      	ldr	r3, [r3, #8]
 8006e02:	429a      	cmp	r2, r3
 8006e04:	da06      	bge.n	8006e14 <motor_calc_odometry+0x6c>
			angle_data->ticks += angle_data->tick_range;
 8006e06:	68bb      	ldr	r3, [r7, #8]
 8006e08:	681a      	ldr	r2, [r3, #0]
 8006e0a:	68bb      	ldr	r3, [r7, #8]
 8006e0c:	691b      	ldr	r3, [r3, #16]
 8006e0e:	441a      	add	r2, r3
 8006e10:	68bb      	ldr	r3, [r7, #8]
 8006e12:	601a      	str	r2, [r3, #0]
		}
		motor_data->angle[1] = motor_data->angle[0];
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	f9b3 2000 	ldrsh.w	r2, [r3]
 8006e1a:	68fb      	ldr	r3, [r7, #12]
 8006e1c:	805a      	strh	r2, [r3, #2]
		angle_data->init = 1;
 8006e1e:	68bb      	ldr	r3, [r7, #8]
 8006e20:	2201      	movs	r2, #1
 8006e22:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
		return;
 8006e26:	e06b      	b.n	8006f00 <motor_calc_odometry+0x158>
	}
	angle_data->abs_ang_diff = abs_angle_diff;
 8006e28:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 8006e2c:	68bb      	ldr	r3, [r7, #8]
 8006e2e:	615a      	str	r2, [r3, #20]

	//generally the motor won't exceed half a turn between each feedback
	if (abs_angle_diff > 4096) {
 8006e30:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8006e34:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006e38:	dd0a      	ble.n	8006e50 <motor_calc_odometry+0xa8>
		++angle_data->rev;
 8006e3a:	68bb      	ldr	r3, [r7, #8]
 8006e3c:	699b      	ldr	r3, [r3, #24]
 8006e3e:	1c5a      	adds	r2, r3, #1
 8006e40:	68bb      	ldr	r3, [r7, #8]
 8006e42:	619a      	str	r2, [r3, #24]
		abs_angle_diff -= 8192;
 8006e44:	8afb      	ldrh	r3, [r7, #22]
 8006e46:	f5a3 5300 	sub.w	r3, r3, #8192	@ 0x2000
 8006e4a:	b29b      	uxth	r3, r3
 8006e4c:	82fb      	strh	r3, [r7, #22]
 8006e4e:	e00e      	b.n	8006e6e <motor_calc_odometry+0xc6>
	} else if (abs_angle_diff < -4096) {
 8006e50:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8006e54:	f513 5f80 	cmn.w	r3, #4096	@ 0x1000
 8006e58:	da09      	bge.n	8006e6e <motor_calc_odometry+0xc6>
		--angle_data->rev;
 8006e5a:	68bb      	ldr	r3, [r7, #8]
 8006e5c:	699b      	ldr	r3, [r3, #24]
 8006e5e:	1e5a      	subs	r2, r3, #1
 8006e60:	68bb      	ldr	r3, [r7, #8]
 8006e62:	619a      	str	r2, [r3, #24]
		abs_angle_diff += 8192;
 8006e64:	8afb      	ldrh	r3, [r7, #22]
 8006e66:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8006e6a:	b29b      	uxth	r3, r3
 8006e6c:	82fb      	strh	r3, [r7, #22]
	}

	uint16_t gear_ticks = 8192 * angle_data->gearbox_ratio;
 8006e6e:	68bb      	ldr	r3, [r7, #8]
 8006e70:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8006e74:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 8006f0c <motor_calc_odometry+0x164>
 8006e78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8006e7c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006e80:	ee17 3a90 	vmov	r3, s15
 8006e84:	82bb      	strh	r3, [r7, #20]
	angle_data->ticks += abs_angle_diff;
 8006e86:	68bb      	ldr	r3, [r7, #8]
 8006e88:	681a      	ldr	r2, [r3, #0]
 8006e8a:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8006e8e:	441a      	add	r2, r3
 8006e90:	68bb      	ldr	r3, [r7, #8]
 8006e92:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 8006e94:	e006      	b.n	8006ea4 <motor_calc_odometry+0xfc>
		angle_data->ticks -= angle_data->tick_range;
 8006e96:	68bb      	ldr	r3, [r7, #8]
 8006e98:	681a      	ldr	r2, [r3, #0]
 8006e9a:	68bb      	ldr	r3, [r7, #8]
 8006e9c:	691b      	ldr	r3, [r3, #16]
 8006e9e:	1ad2      	subs	r2, r2, r3
 8006ea0:	68bb      	ldr	r3, [r7, #8]
 8006ea2:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks > angle_data->max_ticks) {
 8006ea4:	68bb      	ldr	r3, [r7, #8]
 8006ea6:	681a      	ldr	r2, [r3, #0]
 8006ea8:	68bb      	ldr	r3, [r7, #8]
 8006eaa:	68db      	ldr	r3, [r3, #12]
 8006eac:	429a      	cmp	r2, r3
 8006eae:	dcf2      	bgt.n	8006e96 <motor_calc_odometry+0xee>
	}
	while (angle_data->ticks < angle_data->min_ticks) {
 8006eb0:	e006      	b.n	8006ec0 <motor_calc_odometry+0x118>
		angle_data->ticks += angle_data->tick_range;
 8006eb2:	68bb      	ldr	r3, [r7, #8]
 8006eb4:	681a      	ldr	r2, [r3, #0]
 8006eb6:	68bb      	ldr	r3, [r7, #8]
 8006eb8:	691b      	ldr	r3, [r3, #16]
 8006eba:	441a      	add	r2, r3
 8006ebc:	68bb      	ldr	r3, [r7, #8]
 8006ebe:	601a      	str	r2, [r3, #0]
	while (angle_data->ticks < angle_data->min_ticks) {
 8006ec0:	68bb      	ldr	r3, [r7, #8]
 8006ec2:	681a      	ldr	r2, [r3, #0]
 8006ec4:	68bb      	ldr	r3, [r7, #8]
 8006ec6:	689b      	ldr	r3, [r3, #8]
 8006ec8:	429a      	cmp	r2, r3
 8006eca:	dbf2      	blt.n	8006eb2 <motor_calc_odometry+0x10a>
	}

	angle_data->dist = angle_data->ticks * angle_data->wheel_circ / gear_ticks;
 8006ecc:	68bb      	ldr	r3, [r7, #8]
 8006ece:	681b      	ldr	r3, [r3, #0]
 8006ed0:	ee07 3a90 	vmov	s15, r3
 8006ed4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006ed8:	68bb      	ldr	r3, [r7, #8]
 8006eda:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 8006ede:	ee67 6a27 	vmul.f32	s13, s14, s15
 8006ee2:	8abb      	ldrh	r3, [r7, #20]
 8006ee4:	ee07 3a90 	vmov	s15, r3
 8006ee8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8006eec:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006ef0:	68bb      	ldr	r3, [r7, #8]
 8006ef2:	edc3 7a0e 	vstr	s15, [r3, #56]	@ 0x38
	motor_data->angle[1] = motor_data->angle[0];
 8006ef6:	68fb      	ldr	r3, [r7, #12]
 8006ef8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8006efc:	68fb      	ldr	r3, [r7, #12]
 8006efe:	805a      	strh	r2, [r3, #2]
}
 8006f00:	371c      	adds	r7, #28
 8006f02:	46bd      	mov	sp, r7
 8006f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f08:	4770      	bx	lr
 8006f0a:	bf00      	nop
 8006f0c:	46000000 	.word	0x46000000

08006f10 <control_input_task>:
uint8_t g_safety_toggle = ARM_SWITCH;
uint8_t launcher_safety_toggle = ARM_SWITCH;



void control_input_task(void *argument) {
 8006f10:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006f14:	b088      	sub	sp, #32
 8006f16:	af00      	add	r7, sp, #0
 8006f18:	60f8      	str	r0, [r7, #12]
	TickType_t start_time;
	control_reset();
 8006f1a:	f000 f959 	bl	80071d0 <control_reset>
	chassis_yaw_pid_init();
 8006f1e:	f000 fb47 	bl	80075b0 <chassis_yaw_pid_init>
	gimbal_ctrl_data.imu_mode = GIMBAL_MODE;
 8006f22:	4b80      	ldr	r3, [pc, #512]	@ (8007124 <control_input_task+0x214>)
 8006f24:	2201      	movs	r2, #1
 8006f26:	731a      	strb	r2, [r3, #12]
	aimbot_pid_init();
 8006f28:	f000 fee0 	bl	8007cec <aimbot_pid_init>
	dbus_remote_start();
 8006f2c:	f7fa fadc 	bl	80014e8 <dbus_remote_start>
	gear_speed.curr_gear = GEAR_DEFAULT;
 8006f30:	4b7d      	ldr	r3, [pc, #500]	@ (8007128 <control_input_task+0x218>)
 8006f32:	2203      	movs	r2, #3
 8006f34:	701a      	strb	r2, [r3, #0]
	set_gear();
 8006f36:	f000 fabf 	bl	80074b8 <set_gear>
	g_safety_toggle = 1;
 8006f3a:	4b7c      	ldr	r3, [pc, #496]	@ (800712c <control_input_task+0x21c>)
 8006f3c:	2201      	movs	r2, #1
 8006f3e:	701a      	strb	r2, [r3, #0]
	vTaskDelay(100);
 8006f40:	2064      	movs	r0, #100	@ 0x64
 8006f42:	f013 ffff 	bl	801af44 <vTaskDelay>
	uint8_t rc_check;
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 8006f46:	e01a      	b.n	8006f7e <control_input_task+0x6e>
		uint8_t temp_msg;
		temp_msg = not_ok;
 8006f48:	2302      	movs	r3, #2
 8006f4a:	74fb      	strb	r3, [r7, #19]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8006f4c:	4b78      	ldr	r3, [pc, #480]	@ (8007130 <control_input_task+0x220>)
 8006f4e:	6818      	ldr	r0, [r3, #0]
 8006f50:	f107 0113 	add.w	r1, r7, #19
 8006f54:	2300      	movs	r3, #0
 8006f56:	2200      	movs	r2, #0
 8006f58:	f013 f90a 	bl	801a170 <xQueueGenericSend>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8006f5c:	21c8      	movs	r1, #200	@ 0xc8
 8006f5e:	2001      	movs	r0, #1
 8006f60:	f014 fdc0 	bl	801bae4 <ulTaskNotifyTake>
 8006f64:	4603      	mov	r3, r0
 8006f66:	76fb      	strb	r3, [r7, #27]
		HAL_UART_DMAStop(&DBUS_UART);
 8006f68:	4872      	ldr	r0, [pc, #456]	@ (8007134 <control_input_task+0x224>)
 8006f6a:	f00e f901 	bl	8015170 <HAL_UART_DMAStop>
		dbus_remote_start();
 8006f6e:	f7fa fabb 	bl	80014e8 <dbus_remote_start>
		if (rc_check){
 8006f72:	7efb      	ldrb	r3, [r7, #27]
 8006f74:	2b00      	cmp	r3, #0
 8006f76:	d002      	beq.n	8006f7e <control_input_task+0x6e>
			vTaskDelay(200);
 8006f78:	20c8      	movs	r0, #200	@ 0xc8
 8006f7a:	f013 ffe3 	bl	801af44 <vTaskDelay>
	while (fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50 || fabs(g_remote_cmd.left_x) > 50 || fabs(g_remote_cmd.right_x) > 50){
 8006f7e:	4b6e      	ldr	r3, [pc, #440]	@ (8007138 <control_input_task+0x228>)
 8006f80:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006f84:	4618      	mov	r0, r3
 8006f86:	f7f9 facd 	bl	8000524 <__aeabi_i2d>
 8006f8a:	4602      	mov	r2, r0
 8006f8c:	460b      	mov	r3, r1
 8006f8e:	4690      	mov	r8, r2
 8006f90:	f023 4900 	bic.w	r9, r3, #2147483648	@ 0x80000000
 8006f94:	f04f 0200 	mov.w	r2, #0
 8006f98:	4b68      	ldr	r3, [pc, #416]	@ (800713c <control_input_task+0x22c>)
 8006f9a:	4640      	mov	r0, r8
 8006f9c:	4649      	mov	r1, r9
 8006f9e:	f7f9 fdbb 	bl	8000b18 <__aeabi_dcmpgt>
 8006fa2:	4603      	mov	r3, r0
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	d1cf      	bne.n	8006f48 <control_input_task+0x38>
 8006fa8:	4b63      	ldr	r3, [pc, #396]	@ (8007138 <control_input_task+0x228>)
 8006faa:	f9b3 3000 	ldrsh.w	r3, [r3]
 8006fae:	4618      	mov	r0, r3
 8006fb0:	f7f9 fab8 	bl	8000524 <__aeabi_i2d>
 8006fb4:	4602      	mov	r2, r0
 8006fb6:	460b      	mov	r3, r1
 8006fb8:	4692      	mov	sl, r2
 8006fba:	f023 4b00 	bic.w	fp, r3, #2147483648	@ 0x80000000
 8006fbe:	f04f 0200 	mov.w	r2, #0
 8006fc2:	4b5e      	ldr	r3, [pc, #376]	@ (800713c <control_input_task+0x22c>)
 8006fc4:	4650      	mov	r0, sl
 8006fc6:	4659      	mov	r1, fp
 8006fc8:	f7f9 fda6 	bl	8000b18 <__aeabi_dcmpgt>
 8006fcc:	4603      	mov	r3, r0
 8006fce:	2b00      	cmp	r3, #0
 8006fd0:	d1ba      	bne.n	8006f48 <control_input_task+0x38>
 8006fd2:	4b59      	ldr	r3, [pc, #356]	@ (8007138 <control_input_task+0x228>)
 8006fd4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8006fd8:	4618      	mov	r0, r3
 8006fda:	f7f9 faa3 	bl	8000524 <__aeabi_i2d>
 8006fde:	4602      	mov	r2, r0
 8006fe0:	460b      	mov	r3, r1
 8006fe2:	603a      	str	r2, [r7, #0]
 8006fe4:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8006fe8:	607b      	str	r3, [r7, #4]
 8006fea:	f04f 0200 	mov.w	r2, #0
 8006fee:	4b53      	ldr	r3, [pc, #332]	@ (800713c <control_input_task+0x22c>)
 8006ff0:	e9d7 0100 	ldrd	r0, r1, [r7]
 8006ff4:	f7f9 fd90 	bl	8000b18 <__aeabi_dcmpgt>
 8006ff8:	4603      	mov	r3, r0
 8006ffa:	2b00      	cmp	r3, #0
 8006ffc:	d1a4      	bne.n	8006f48 <control_input_task+0x38>
 8006ffe:	4b4e      	ldr	r3, [pc, #312]	@ (8007138 <control_input_task+0x228>)
 8007000:	f9b3 3000 	ldrsh.w	r3, [r3]
 8007004:	4618      	mov	r0, r3
 8007006:	f7f9 fa8d 	bl	8000524 <__aeabi_i2d>
 800700a:	4602      	mov	r2, r0
 800700c:	460b      	mov	r3, r1
 800700e:	4614      	mov	r4, r2
 8007010:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 8007014:	f04f 0200 	mov.w	r2, #0
 8007018:	4b48      	ldr	r3, [pc, #288]	@ (800713c <control_input_task+0x22c>)
 800701a:	4620      	mov	r0, r4
 800701c:	4629      	mov	r1, r5
 800701e:	f7f9 fd7b 	bl	8000b18 <__aeabi_dcmpgt>
 8007022:	4603      	mov	r3, r0
 8007024:	2b00      	cmp	r3, #0
 8007026:	d18f      	bne.n	8006f48 <control_input_task+0x38>
		}
	}
	g_safety_toggle = ARM_SWITCH;
 8007028:	4b40      	ldr	r3, [pc, #256]	@ (800712c <control_input_task+0x21c>)
 800702a:	2201      	movs	r2, #1
 800702c:	701a      	strb	r2, [r3, #0]

	uint32_t last_song = 0;
 800702e:	2300      	movs	r3, #0
 8007030:	61fb      	str	r3, [r7, #28]
	while (1) {
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8007032:	21c8      	movs	r1, #200	@ 0xc8
 8007034:	2001      	movs	r0, #1
 8007036:	f014 fd55 	bl	801bae4 <ulTaskNotifyTake>
 800703a:	4603      	mov	r3, r0
 800703c:	76fb      	strb	r3, [r7, #27]
		if (rc_check) {
 800703e:	7efb      	ldrb	r3, [r7, #27]
 8007040:	2b00      	cmp	r3, #0
 8007042:	d04c      	beq.n	80070de <control_input_task+0x1ce>
			status_led(1, on_led);
 8007044:	2100      	movs	r1, #0
 8007046:	2001      	movs	r0, #1
 8007048:	f7fa ffb6 	bl	8001fb8 <status_led>
			start_time = xTaskGetTickCount();
 800704c:	f014 f8ce 	bl	801b1ec <xTaskGetTickCount>
 8007050:	4603      	mov	r3, r0
 8007052:	617b      	str	r3, [r7, #20]
			if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8007054:	4b38      	ldr	r3, [pc, #224]	@ (8007138 <control_input_task+0x228>)
 8007056:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800705a:	2b01      	cmp	r3, #1
 800705c:	d123      	bne.n	80070a6 <control_input_task+0x196>

				if ((g_remote_cmd.left_switch == ge_LSW_UNSAFE) && (HAL_GetTick() - last_song > 5000)){
 800705e:	4b36      	ldr	r3, [pc, #216]	@ (8007138 <control_input_task+0x228>)
 8007060:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007064:	2b01      	cmp	r3, #1
 8007066:	d10d      	bne.n	8007084 <control_input_task+0x174>
 8007068:	f006 fda6 	bl	800dbb8 <HAL_GetTick>
 800706c:	4602      	mov	r2, r0
 800706e:	69fb      	ldr	r3, [r7, #28]
 8007070:	1ad3      	subs	r3, r2, r3
 8007072:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007076:	4293      	cmp	r3, r2
 8007078:	d904      	bls.n	8007084 <control_input_task+0x174>
					uint8_t temp_msg;
					last_song = HAL_GetTick();
 800707a:	f006 fd9d 	bl	800dbb8 <HAL_GetTick>
 800707e:	61f8      	str	r0, [r7, #28]
					temp_msg = song;
 8007080:	2300      	movs	r3, #0
 8007082:	76bb      	strb	r3, [r7, #26]
//					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
				}
				laser_on();
 8007084:	f7fa fad4 	bl	8001630 <laser_on>
				control_mode_change(g_remote_cmd.side_dial);
 8007088:	4b2b      	ldr	r3, [pc, #172]	@ (8007138 <control_input_task+0x228>)
 800708a:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800708e:	4618      	mov	r0, r3
 8007090:	f000 f8d4 	bl	800723c <control_mode_change>
				g_safety_toggle = 0;
 8007094:	4b25      	ldr	r3, [pc, #148]	@ (800712c <control_input_task+0x21c>)
 8007096:	2200      	movs	r2, #0
 8007098:	701a      	strb	r2, [r3, #0]
				launcher_safety_toggle = 0;
 800709a:	4b29      	ldr	r3, [pc, #164]	@ (8007140 <control_input_task+0x230>)
 800709c:	2200      	movs	r2, #0
 800709e:	701a      	strb	r2, [r3, #0]
				control_reset();
 80070a0:	f000 f896 	bl	80071d0 <control_reset>
 80070a4:	e037      	b.n	8007116 <control_input_task+0x206>
			} else {

				switch (control_mode) {
 80070a6:	4b27      	ldr	r3, [pc, #156]	@ (8007144 <control_input_task+0x234>)
 80070a8:	781b      	ldrb	r3, [r3, #0]
 80070aa:	2b01      	cmp	r3, #1
 80070ac:	d002      	beq.n	80070b4 <control_input_task+0x1a4>
 80070ae:	2b02      	cmp	r3, #2
 80070b0:	d008      	beq.n	80070c4 <control_input_task+0x1b4>
					break;
					;
#endif

				default:
					break;
 80070b2:	e00f      	b.n	80070d4 <control_input_task+0x1c4>
					keyboard_gear_shifter(&gear_speed);
 80070b4:	481c      	ldr	r0, [pc, #112]	@ (8007128 <control_input_task+0x218>)
 80070b6:	f000 fa9f 	bl	80075f8 <keyboard_gear_shifter>
					set_gear();
 80070ba:	f000 f9fd 	bl	80074b8 <set_gear>
					keyboard_control_input();
 80070be:	f000 fa91 	bl	80075e4 <keyboard_control_input>
					break;
 80070c2:	e007      	b.n	80070d4 <control_input_task+0x1c4>
					remote_gear_shifter(&gear_speed);
 80070c4:	4818      	ldr	r0, [pc, #96]	@ (8007128 <control_input_task+0x218>)
 80070c6:	f000 fc75 	bl	80079b4 <remote_gear_shifter>
					set_gear();
 80070ca:	f000 f9f5 	bl	80074b8 <set_gear>
					remote_control_input();
 80070ce:	f000 fc67 	bl	80079a0 <remote_control_input>
					break;
 80070d2:	bf00      	nop

				}
				status_led(1, off_led);
 80070d4:	2101      	movs	r1, #1
 80070d6:	2001      	movs	r0, #1
 80070d8:	f7fa ff6e 	bl	8001fb8 <status_led>
 80070dc:	e01b      	b.n	8007116 <control_input_task+0x206>
			}
		} else {
			//restart remote uart
			if (HAL_GetTick() - g_remote_cmd.last_time > 100) {
 80070de:	f006 fd6b 	bl	800dbb8 <HAL_GetTick>
 80070e2:	4602      	mov	r2, r0
 80070e4:	4b14      	ldr	r3, [pc, #80]	@ (8007138 <control_input_task+0x228>)
 80070e6:	6a1b      	ldr	r3, [r3, #32]
 80070e8:	1ad3      	subs	r3, r2, r3
 80070ea:	2b64      	cmp	r3, #100	@ 0x64
 80070ec:	d909      	bls.n	8007102 <control_input_task+0x1f2>
				HAL_UART_DMAStop(&DBUS_UART);
 80070ee:	4811      	ldr	r0, [pc, #68]	@ (8007134 <control_input_task+0x224>)
 80070f0:	f00e f83e 	bl	8015170 <HAL_UART_DMAStop>
				dbus_remote_start();
 80070f4:	f7fa f9f8 	bl	80014e8 <dbus_remote_start>
				g_remote_cmd.last_time = HAL_GetTick();
 80070f8:	f006 fd5e 	bl	800dbb8 <HAL_GetTick>
 80070fc:	4603      	mov	r3, r0
 80070fe:	4a0e      	ldr	r2, [pc, #56]	@ (8007138 <control_input_task+0x228>)
 8007100:	6213      	str	r3, [r2, #32]
			}
			kill_can();
 8007102:	f005 fc2f 	bl	800c964 <kill_can>
			control_reset();
 8007106:	f000 f863 	bl	80071d0 <control_reset>
			launcher_safety_toggle = LAUNCHER_SAFETY;
 800710a:	4b0d      	ldr	r3, [pc, #52]	@ (8007140 <control_input_task+0x230>)
 800710c:	2200      	movs	r2, #0
 800710e:	701a      	strb	r2, [r3, #0]
			g_safety_toggle = 1;
 8007110:	4b06      	ldr	r3, [pc, #24]	@ (800712c <control_input_task+0x21c>)
 8007112:	2201      	movs	r2, #1
 8007114:	701a      	strb	r2, [r3, #0]

		}
		vTaskDelayUntil(&start_time, CONTROL_DELAY);
 8007116:	f107 0314 	add.w	r3, r7, #20
 800711a:	2102      	movs	r1, #2
 800711c:	4618      	mov	r0, r3
 800711e:	f013 fe91 	bl	801ae44 <vTaskDelayUntil>
		rc_check = ulTaskNotifyTake(pdTRUE, 200);
 8007122:	e786      	b.n	8007032 <control_input_task+0x122>
 8007124:	200038c0 	.word	0x200038c0
 8007128:	20003904 	.word	0x20003904
 800712c:	20000031 	.word	0x20000031
 8007130:	20003b98 	.word	0x20003b98
 8007134:	20001c5c 	.word	0x20001c5c
 8007138:	20000838 	.word	0x20000838
 800713c:	40490000 	.word	0x40490000
 8007140:	20000032 	.word	0x20000032
 8007144:	20000030 	.word	0x20000030

08007148 <chassis_center_yaw>:
	}
	osThreadTerminate(NULL);
}

float chassis_center_yaw() {
 8007148:	b480      	push	{r7}
 800714a:	af00      	add	r7, sp, #0

}
 800714c:	bf00      	nop
 800714e:	eeb0 0a67 	vmov.f32	s0, s15
 8007152:	46bd      	mov	sp, r7
 8007154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007158:	4770      	bx	lr
	...

0800715c <chassis_set_ctrl>:

void chassis_set_ctrl(float forward, float horizontal, float yaw){
 800715c:	b480      	push	{r7}
 800715e:	b085      	sub	sp, #20
 8007160:	af00      	add	r7, sp, #0
 8007162:	ed87 0a03 	vstr	s0, [r7, #12]
 8007166:	edc7 0a02 	vstr	s1, [r7, #8]
 800716a:	ed87 1a01 	vstr	s2, [r7, #4]
	chassis_ctrl_data.enabled = 1;
 800716e:	4b0b      	ldr	r3, [pc, #44]	@ (800719c <chassis_set_ctrl+0x40>)
 8007170:	2201      	movs	r2, #1
 8007172:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.horizontal = horizontal;
 8007174:	4a09      	ldr	r2, [pc, #36]	@ (800719c <chassis_set_ctrl+0x40>)
 8007176:	68bb      	ldr	r3, [r7, #8]
 8007178:	6053      	str	r3, [r2, #4]
	chassis_ctrl_data.forward = forward;
 800717a:	4a08      	ldr	r2, [pc, #32]	@ (800719c <chassis_set_ctrl+0x40>)
 800717c:	68fb      	ldr	r3, [r7, #12]
 800717e:	6013      	str	r3, [r2, #0]
	chassis_ctrl_data.yaw = -yaw;
 8007180:	edd7 7a01 	vldr	s15, [r7, #4]
 8007184:	eef1 7a67 	vneg.f32	s15, s15
 8007188:	4b04      	ldr	r3, [pc, #16]	@ (800719c <chassis_set_ctrl+0x40>)
 800718a:	edc3 7a02 	vstr	s15, [r3, #8]
}
 800718e:	bf00      	nop
 8007190:	3714      	adds	r7, #20
 8007192:	46bd      	mov	sp, r7
 8007194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007198:	4770      	bx	lr
 800719a:	bf00      	nop
 800719c:	200038a0 	.word	0x200038a0

080071a0 <chassis_kill_ctrl>:

void chassis_kill_ctrl(){
 80071a0:	b480      	push	{r7}
 80071a2:	af00      	add	r7, sp, #0
	chassis_ctrl_data.enabled = 0;
 80071a4:	4b09      	ldr	r3, [pc, #36]	@ (80071cc <chassis_kill_ctrl+0x2c>)
 80071a6:	2200      	movs	r2, #0
 80071a8:	751a      	strb	r2, [r3, #20]
	chassis_ctrl_data.forward = 0;
 80071aa:	4b08      	ldr	r3, [pc, #32]	@ (80071cc <chassis_kill_ctrl+0x2c>)
 80071ac:	f04f 0200 	mov.w	r2, #0
 80071b0:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 80071b2:	4b06      	ldr	r3, [pc, #24]	@ (80071cc <chassis_kill_ctrl+0x2c>)
 80071b4:	f04f 0200 	mov.w	r2, #0
 80071b8:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 80071ba:	4b04      	ldr	r3, [pc, #16]	@ (80071cc <chassis_kill_ctrl+0x2c>)
 80071bc:	f04f 0200 	mov.w	r2, #0
 80071c0:	609a      	str	r2, [r3, #8]
}
 80071c2:	bf00      	nop
 80071c4:	46bd      	mov	sp, r7
 80071c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ca:	4770      	bx	lr
 80071cc:	200038a0 	.word	0x200038a0

080071d0 <control_reset>:
		}
	}
	return 0;
}

void control_reset() {
 80071d0:	b580      	push	{r7, lr}
 80071d2:	af00      	add	r7, sp, #0
	chassis_ctrl_data.forward = 0;
 80071d4:	4b14      	ldr	r3, [pc, #80]	@ (8007228 <control_reset+0x58>)
 80071d6:	f04f 0200 	mov.w	r2, #0
 80071da:	601a      	str	r2, [r3, #0]
	chassis_ctrl_data.horizontal = 0;
 80071dc:	4b12      	ldr	r3, [pc, #72]	@ (8007228 <control_reset+0x58>)
 80071de:	f04f 0200 	mov.w	r2, #0
 80071e2:	605a      	str	r2, [r3, #4]
	chassis_ctrl_data.yaw = 0;
 80071e4:	4b10      	ldr	r3, [pc, #64]	@ (8007228 <control_reset+0x58>)
 80071e6:	f04f 0200 	mov.w	r2, #0
 80071ea:	609a      	str	r2, [r3, #8]
	chassis_ctrl_data.enabled = 0;
 80071ec:	4b0e      	ldr	r3, [pc, #56]	@ (8007228 <control_reset+0x58>)
 80071ee:	2200      	movs	r2, #0
 80071f0:	751a      	strb	r2, [r3, #20]
	gimbal_ctrl_data.pitch = 0;
 80071f2:	4b0e      	ldr	r3, [pc, #56]	@ (800722c <control_reset+0x5c>)
 80071f4:	f04f 0200 	mov.w	r2, #0
 80071f8:	601a      	str	r2, [r3, #0]
	gimbal_ctrl_data.yaw = imu_heading.yaw;
 80071fa:	4b0d      	ldr	r3, [pc, #52]	@ (8007230 <control_reset+0x60>)
 80071fc:	689b      	ldr	r3, [r3, #8]
 80071fe:	4a0b      	ldr	r2, [pc, #44]	@ (800722c <control_reset+0x5c>)
 8007200:	6053      	str	r3, [r2, #4]
	gimbal_ctrl_data.enabled = 0;
 8007202:	4b0a      	ldr	r3, [pc, #40]	@ (800722c <control_reset+0x5c>)
 8007204:	2200      	movs	r2, #0
 8007206:	735a      	strb	r2, [r3, #13]
	launcher_ctrl_data.firing = 0;
 8007208:	4b0a      	ldr	r3, [pc, #40]	@ (8007234 <control_reset+0x64>)
 800720a:	2200      	movs	r2, #0
 800720c:	805a      	strh	r2, [r3, #2]
	launcher_ctrl_data.projectile_speed = 0;
 800720e:	4b09      	ldr	r3, [pc, #36]	@ (8007234 <control_reset+0x64>)
 8007210:	2200      	movs	r2, #0
 8007212:	801a      	strh	r2, [r3, #0]
	launcher_ctrl_data.enabled = 0;
 8007214:	4b07      	ldr	r3, [pc, #28]	@ (8007234 <control_reset+0x64>)
 8007216:	2200      	movs	r2, #0
 8007218:	715a      	strb	r2, [r3, #5]
	g_spinspin_mode = 0;
 800721a:	4b07      	ldr	r3, [pc, #28]	@ (8007238 <control_reset+0x68>)
 800721c:	2200      	movs	r2, #0
 800721e:	601a      	str	r2, [r3, #0]
	laser_off();
 8007220:	f7fa fa12 	bl	8001648 <laser_off>
}
 8007224:	bf00      	nop
 8007226:	bd80      	pop	{r7, pc}
 8007228:	200038a0 	.word	0x200038a0
 800722c:	200038c0 	.word	0x200038c0
 8007230:	20003ad8 	.word	0x20003ad8
 8007234:	200038b8 	.word	0x200038b8
 8007238:	20003914 	.word	0x20003914

0800723c <control_mode_change>:

void control_mode_change(int16_t left_dial_input) {
 800723c:	b580      	push	{r7, lr}
 800723e:	b084      	sub	sp, #16
 8007240:	af00      	add	r7, sp, #0
 8007242:	4603      	mov	r3, r0
 8007244:	80fb      	strh	r3, [r7, #6]
//assume already in shutdown mode here
	static uint32_t last_trig_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 8007246:	4b6f      	ldr	r3, [pc, #444]	@ (8007404 <control_mode_change+0x1c8>)
 8007248:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800724c:	2b03      	cmp	r3, #3
 800724e:	d133      	bne.n	80072b8 <control_mode_change+0x7c>
		if (left_dial_input > 330 || left_dial_input < -330) {
 8007250:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007254:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8007258:	dc04      	bgt.n	8007264 <control_mode_change+0x28>
 800725a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800725e:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 8007262:	da23      	bge.n	80072ac <control_mode_change+0x70>
			if (HAL_GetTick() - last_trig_time > 1000) {
 8007264:	f006 fca8 	bl	800dbb8 <HAL_GetTick>
 8007268:	4602      	mov	r2, r0
 800726a:	4b67      	ldr	r3, [pc, #412]	@ (8007408 <control_mode_change+0x1cc>)
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	1ad3      	subs	r3, r2, r3
 8007270:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8007274:	f240 80c2 	bls.w	80073fc <control_mode_change+0x1c0>
				switch (control_mode) {
 8007278:	4b64      	ldr	r3, [pc, #400]	@ (800740c <control_mode_change+0x1d0>)
 800727a:	781b      	ldrb	r3, [r3, #0]
 800727c:	3b01      	subs	r3, #1
 800727e:	2b01      	cmp	r3, #1
 8007280:	d80d      	bhi.n	800729e <control_mode_change+0x62>
				case KEYBOARD_CTRL_MODE:
				case REMOTE_CTRL_MODE:
					control_mode = SBC_CTRL_MODE;
 8007282:	4b62      	ldr	r3, [pc, #392]	@ (800740c <control_mode_change+0x1d0>)
 8007284:	2203      	movs	r2, #3
 8007286:	701a      	strb	r2, [r3, #0]
					temp_msg = control_sbc;
 8007288:	2305      	movs	r3, #5
 800728a:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800728c:	4b60      	ldr	r3, [pc, #384]	@ (8007410 <control_mode_change+0x1d4>)
 800728e:	6818      	ldr	r0, [r3, #0]
 8007290:	f107 010f 	add.w	r1, r7, #15
 8007294:	2300      	movs	r3, #0
 8007296:	2200      	movs	r2, #0
 8007298:	f012 ff6a 	bl	801a170 <xQueueGenericSend>
					break;
 800729c:	e005      	b.n	80072aa <control_mode_change+0x6e>
				default:
					last_trig_time = HAL_GetTick();
 800729e:	f006 fc8b 	bl	800dbb8 <HAL_GetTick>
 80072a2:	4603      	mov	r3, r0
 80072a4:	4a58      	ldr	r2, [pc, #352]	@ (8007408 <control_mode_change+0x1cc>)
 80072a6:	6013      	str	r3, [r2, #0]
					break;
 80072a8:	bf00      	nop
			if (HAL_GetTick() - last_trig_time > 1000) {
 80072aa:	e0a7      	b.n	80073fc <control_mode_change+0x1c0>
				}
			}
		} else {
			last_trig_time = HAL_GetTick();
 80072ac:	f006 fc84 	bl	800dbb8 <HAL_GetTick>
 80072b0:	4603      	mov	r3, r0
 80072b2:	4a55      	ldr	r2, [pc, #340]	@ (8007408 <control_mode_change+0x1cc>)
 80072b4:	6013      	str	r3, [r2, #0]
			break;
		default:
			break;
		}
	}
}
 80072b6:	e0a1      	b.n	80073fc <control_mode_change+0x1c0>
		switch (control_mode) {
 80072b8:	4b54      	ldr	r3, [pc, #336]	@ (800740c <control_mode_change+0x1d0>)
 80072ba:	781b      	ldrb	r3, [r3, #0]
 80072bc:	2b03      	cmp	r3, #3
 80072be:	d052      	beq.n	8007366 <control_mode_change+0x12a>
 80072c0:	2b03      	cmp	r3, #3
 80072c2:	f300 8094 	bgt.w	80073ee <control_mode_change+0x1b2>
 80072c6:	2b01      	cmp	r3, #1
 80072c8:	d002      	beq.n	80072d0 <control_mode_change+0x94>
 80072ca:	2b02      	cmp	r3, #2
 80072cc:	d026      	beq.n	800731c <control_mode_change+0xe0>
			break;
 80072ce:	e08e      	b.n	80073ee <control_mode_change+0x1b2>
			if (left_dial_input < -330) {
 80072d0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80072d4:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 80072d8:	da1a      	bge.n	8007310 <control_mode_change+0xd4>
				if (HAL_GetTick() - last_trig_time > 1000) {
 80072da:	f006 fc6d 	bl	800dbb8 <HAL_GetTick>
 80072de:	4602      	mov	r2, r0
 80072e0:	4b49      	ldr	r3, [pc, #292]	@ (8007408 <control_mode_change+0x1cc>)
 80072e2:	681b      	ldr	r3, [r3, #0]
 80072e4:	1ad3      	subs	r3, r2, r3
 80072e6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80072ea:	f240 8082 	bls.w	80073f2 <control_mode_change+0x1b6>
					control_mode = REMOTE_CTRL_MODE;
 80072ee:	4b47      	ldr	r3, [pc, #284]	@ (800740c <control_mode_change+0x1d0>)
 80072f0:	2202      	movs	r2, #2
 80072f2:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 80072f4:	2304      	movs	r3, #4
 80072f6:	73fb      	strb	r3, [r7, #15]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80072f8:	4b45      	ldr	r3, [pc, #276]	@ (8007410 <control_mode_change+0x1d4>)
 80072fa:	6818      	ldr	r0, [r3, #0]
 80072fc:	f107 010f 	add.w	r1, r7, #15
 8007300:	2300      	movs	r3, #0
 8007302:	2200      	movs	r2, #0
 8007304:	f012 ff34 	bl	801a170 <xQueueGenericSend>
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8007308:	4b42      	ldr	r3, [pc, #264]	@ (8007414 <control_mode_change+0x1d8>)
 800730a:	2200      	movs	r2, #0
 800730c:	701a      	strb	r2, [r3, #0]
			break;
 800730e:	e070      	b.n	80073f2 <control_mode_change+0x1b6>
				last_trig_time = HAL_GetTick();
 8007310:	f006 fc52 	bl	800dbb8 <HAL_GetTick>
 8007314:	4603      	mov	r3, r0
 8007316:	4a3c      	ldr	r2, [pc, #240]	@ (8007408 <control_mode_change+0x1cc>)
 8007318:	6013      	str	r3, [r2, #0]
			break;
 800731a:	e06a      	b.n	80073f2 <control_mode_change+0x1b6>
			if (left_dial_input > 330) {
 800731c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007320:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 8007324:	dd19      	ble.n	800735a <control_mode_change+0x11e>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8007326:	f006 fc47 	bl	800dbb8 <HAL_GetTick>
 800732a:	4602      	mov	r2, r0
 800732c:	4b36      	ldr	r3, [pc, #216]	@ (8007408 <control_mode_change+0x1cc>)
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	1ad3      	subs	r3, r2, r3
 8007332:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8007336:	d95e      	bls.n	80073f6 <control_mode_change+0x1ba>
					control_mode = KEYBOARD_CTRL_MODE;
 8007338:	4b34      	ldr	r3, [pc, #208]	@ (800740c <control_mode_change+0x1d0>)
 800733a:	2201      	movs	r2, #1
 800733c:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 800733e:	2303      	movs	r3, #3
 8007340:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 8007342:	4b34      	ldr	r3, [pc, #208]	@ (8007414 <control_mode_change+0x1d8>)
 8007344:	2200      	movs	r2, #0
 8007346:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8007348:	4b31      	ldr	r3, [pc, #196]	@ (8007410 <control_mode_change+0x1d4>)
 800734a:	6818      	ldr	r0, [r3, #0]
 800734c:	f107 010f 	add.w	r1, r7, #15
 8007350:	2300      	movs	r3, #0
 8007352:	2200      	movs	r2, #0
 8007354:	f012 ff0c 	bl	801a170 <xQueueGenericSend>
			break;
 8007358:	e04d      	b.n	80073f6 <control_mode_change+0x1ba>
				last_trig_time = HAL_GetTick();
 800735a:	f006 fc2d 	bl	800dbb8 <HAL_GetTick>
 800735e:	4603      	mov	r3, r0
 8007360:	4a29      	ldr	r2, [pc, #164]	@ (8007408 <control_mode_change+0x1cc>)
 8007362:	6013      	str	r3, [r2, #0]
			break;
 8007364:	e047      	b.n	80073f6 <control_mode_change+0x1ba>
			if (left_dial_input < -330) {
 8007366:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800736a:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 800736e:	da19      	bge.n	80073a4 <control_mode_change+0x168>
				if (HAL_GetTick() - last_trig_time > 1000) {
 8007370:	f006 fc22 	bl	800dbb8 <HAL_GetTick>
 8007374:	4602      	mov	r2, r0
 8007376:	4b24      	ldr	r3, [pc, #144]	@ (8007408 <control_mode_change+0x1cc>)
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	1ad3      	subs	r3, r2, r3
 800737c:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8007380:	d93b      	bls.n	80073fa <control_mode_change+0x1be>
					control_mode = REMOTE_CTRL_MODE;
 8007382:	4b22      	ldr	r3, [pc, #136]	@ (800740c <control_mode_change+0x1d0>)
 8007384:	2202      	movs	r2, #2
 8007386:	701a      	strb	r2, [r3, #0]
					temp_msg = control_control;
 8007388:	2304      	movs	r3, #4
 800738a:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 800738c:	4b21      	ldr	r3, [pc, #132]	@ (8007414 <control_mode_change+0x1d8>)
 800738e:	2200      	movs	r2, #0
 8007390:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8007392:	4b1f      	ldr	r3, [pc, #124]	@ (8007410 <control_mode_change+0x1d4>)
 8007394:	6818      	ldr	r0, [r3, #0]
 8007396:	f107 010f 	add.w	r1, r7, #15
 800739a:	2300      	movs	r3, #0
 800739c:	2200      	movs	r2, #0
 800739e:	f012 fee7 	bl	801a170 <xQueueGenericSend>
			break;
 80073a2:	e02a      	b.n	80073fa <control_mode_change+0x1be>
			} else if (left_dial_input > 330) {
 80073a4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80073a8:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 80073ac:	dd19      	ble.n	80073e2 <control_mode_change+0x1a6>
				if (HAL_GetTick() - last_trig_time > 1000) {
 80073ae:	f006 fc03 	bl	800dbb8 <HAL_GetTick>
 80073b2:	4602      	mov	r2, r0
 80073b4:	4b14      	ldr	r3, [pc, #80]	@ (8007408 <control_mode_change+0x1cc>)
 80073b6:	681b      	ldr	r3, [r3, #0]
 80073b8:	1ad3      	subs	r3, r2, r3
 80073ba:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80073be:	d91c      	bls.n	80073fa <control_mode_change+0x1be>
					control_mode = KEYBOARD_CTRL_MODE;
 80073c0:	4b12      	ldr	r3, [pc, #72]	@ (800740c <control_mode_change+0x1d0>)
 80073c2:	2201      	movs	r2, #1
 80073c4:	701a      	strb	r2, [r3, #0]
					temp_msg = control_keyboard;
 80073c6:	2303      	movs	r3, #3
 80073c8:	73fb      	strb	r3, [r7, #15]
					launcher_safety_toggle = LAUNCHER_SAFETY;
 80073ca:	4b12      	ldr	r3, [pc, #72]	@ (8007414 <control_mode_change+0x1d8>)
 80073cc:	2200      	movs	r2, #0
 80073ce:	701a      	strb	r2, [r3, #0]
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 80073d0:	4b0f      	ldr	r3, [pc, #60]	@ (8007410 <control_mode_change+0x1d4>)
 80073d2:	6818      	ldr	r0, [r3, #0]
 80073d4:	f107 010f 	add.w	r1, r7, #15
 80073d8:	2300      	movs	r3, #0
 80073da:	2200      	movs	r2, #0
 80073dc:	f012 fec8 	bl	801a170 <xQueueGenericSend>
			break;
 80073e0:	e00b      	b.n	80073fa <control_mode_change+0x1be>
				last_trig_time = HAL_GetTick();
 80073e2:	f006 fbe9 	bl	800dbb8 <HAL_GetTick>
 80073e6:	4603      	mov	r3, r0
 80073e8:	4a07      	ldr	r2, [pc, #28]	@ (8007408 <control_mode_change+0x1cc>)
 80073ea:	6013      	str	r3, [r2, #0]
			break;
 80073ec:	e005      	b.n	80073fa <control_mode_change+0x1be>
			break;
 80073ee:	bf00      	nop
 80073f0:	e004      	b.n	80073fc <control_mode_change+0x1c0>
			break;
 80073f2:	bf00      	nop
 80073f4:	e002      	b.n	80073fc <control_mode_change+0x1c0>
			break;
 80073f6:	bf00      	nop
 80073f8:	e000      	b.n	80073fc <control_mode_change+0x1c0>
			break;
 80073fa:	bf00      	nop
}
 80073fc:	bf00      	nop
 80073fe:	3710      	adds	r7, #16
 8007400:	46bd      	mov	sp, r7
 8007402:	bd80      	pop	{r7, pc}
 8007404:	20000838 	.word	0x20000838
 8007408:	20003918 	.word	0x20003918
 800740c:	20000030 	.word	0x20000030
 8007410:	20003b98 	.word	0x20003b98
 8007414:	20000032 	.word	0x20000032

08007418 <gimbal_turn_ang>:

//ADDs angle to gimbal ctrl
void gimbal_turn_ang(float pit_radians, float yaw_radians) {
 8007418:	b480      	push	{r7}
 800741a:	b085      	sub	sp, #20
 800741c:	af00      	add	r7, sp, #0
 800741e:	ed87 0a01 	vstr	s0, [r7, #4]
 8007422:	edc7 0a00 	vstr	s1, [r7]
//		yaw_radians -= 2 * PI;
//	}
//	while (yaw_radians < -PI) {
//		yaw_radians += 2 * PI;
//	}
	float temp_yaw = gimbal_ctrl_data.yaw + yaw_radians;
 8007426:	4b20      	ldr	r3, [pc, #128]	@ (80074a8 <gimbal_turn_ang+0x90>)
 8007428:	edd3 7a01 	vldr	s15, [r3, #4]
 800742c:	ed97 7a00 	vldr	s14, [r7]
 8007430:	ee77 7a27 	vadd.f32	s15, s14, s15
 8007434:	edc7 7a03 	vstr	s15, [r7, #12]
	temp_yaw = (temp_yaw > PI) ? (temp_yaw - 2 * PI) : (temp_yaw < -PI) ? (temp_yaw + 2* PI) : temp_yaw;
 8007438:	edd7 7a03 	vldr	s15, [r7, #12]
 800743c:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 80074ac <gimbal_turn_ang+0x94>
 8007440:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007448:	dd06      	ble.n	8007458 <gimbal_turn_ang+0x40>
 800744a:	edd7 7a03 	vldr	s15, [r7, #12]
 800744e:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 80074b0 <gimbal_turn_ang+0x98>
 8007452:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007456:	e011      	b.n	800747c <gimbal_turn_ang+0x64>
 8007458:	edd7 7a03 	vldr	s15, [r7, #12]
 800745c:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80074b4 <gimbal_turn_ang+0x9c>
 8007460:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007468:	d506      	bpl.n	8007478 <gimbal_turn_ang+0x60>
 800746a:	edd7 7a03 	vldr	s15, [r7, #12]
 800746e:	ed9f 7a10 	vldr	s14, [pc, #64]	@ 80074b0 <gimbal_turn_ang+0x98>
 8007472:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007476:	e001      	b.n	800747c <gimbal_turn_ang+0x64>
 8007478:	edd7 7a03 	vldr	s15, [r7, #12]
 800747c:	edc7 7a03 	vstr	s15, [r7, #12]
	gimbal_ctrl_data.pitch += pit_radians;
 8007480:	4b09      	ldr	r3, [pc, #36]	@ (80074a8 <gimbal_turn_ang+0x90>)
 8007482:	ed93 7a00 	vldr	s14, [r3]
 8007486:	edd7 7a01 	vldr	s15, [r7, #4]
 800748a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800748e:	4b06      	ldr	r3, [pc, #24]	@ (80074a8 <gimbal_turn_ang+0x90>)
 8007490:	edc3 7a00 	vstr	s15, [r3]
	gimbal_ctrl_data.yaw = temp_yaw;
 8007494:	4a04      	ldr	r2, [pc, #16]	@ (80074a8 <gimbal_turn_ang+0x90>)
 8007496:	68fb      	ldr	r3, [r7, #12]
 8007498:	6053      	str	r3, [r2, #4]
}
 800749a:	bf00      	nop
 800749c:	3714      	adds	r7, #20
 800749e:	46bd      	mov	sp, r7
 80074a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a4:	4770      	bx	lr
 80074a6:	bf00      	nop
 80074a8:	200038c0 	.word	0x200038c0
 80074ac:	40490fdb 	.word	0x40490fdb
 80074b0:	40c90fdb 	.word	0x40c90fdb
 80074b4:	c0490fdb 	.word	0xc0490fdb

080074b8 <set_gear>:
	}
	gimbal_ctrl_data.pitch = pit_radians;
	gimbal_ctrl_data.yaw = yaw_radians;
}

void set_gear() {
 80074b8:	b480      	push	{r7}
 80074ba:	af00      	add	r7, sp, #0
	switch (gear_speed.curr_gear) {
 80074bc:	4b34      	ldr	r3, [pc, #208]	@ (8007590 <set_gear+0xd8>)
 80074be:	781b      	ldrb	r3, [r3, #0]
 80074c0:	3b01      	subs	r3, #1
 80074c2:	2b05      	cmp	r3, #5
 80074c4:	d852      	bhi.n	800756c <set_gear+0xb4>
 80074c6:	a201      	add	r2, pc, #4	@ (adr r2, 80074cc <set_gear+0x14>)
 80074c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80074cc:	080074e5 	.word	0x080074e5
 80074d0:	080074fb 	.word	0x080074fb
 80074d4:	08007511 	.word	0x08007511
 80074d8:	0800752b 	.word	0x0800752b
 80074dc:	0800753f 	.word	0x0800753f
 80074e0:	08007559 	.word	0x08007559
	case 1:
		gear_speed.spin_mult = GEAR1_YAW_MULT;
 80074e4:	4b2a      	ldr	r3, [pc, #168]	@ (8007590 <set_gear+0xd8>)
 80074e6:	4a2b      	ldr	r2, [pc, #172]	@ (8007594 <set_gear+0xdc>)
 80074e8:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR1_SPEED_MULT;
 80074ea:	4b29      	ldr	r3, [pc, #164]	@ (8007590 <set_gear+0xd8>)
 80074ec:	4a29      	ldr	r2, [pc, #164]	@ (8007594 <set_gear+0xdc>)
 80074ee:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR1_ACCEL_MULT;
 80074f0:	4b27      	ldr	r3, [pc, #156]	@ (8007590 <set_gear+0xd8>)
 80074f2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 80074f6:	60da      	str	r2, [r3, #12]
		break;
 80074f8:	e045      	b.n	8007586 <set_gear+0xce>
	case 2:
		gear_speed.spin_mult = GEAR2_YAW_MULT;
 80074fa:	4b25      	ldr	r3, [pc, #148]	@ (8007590 <set_gear+0xd8>)
 80074fc:	4a26      	ldr	r2, [pc, #152]	@ (8007598 <set_gear+0xe0>)
 80074fe:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR2_SPEED_MULT;
 8007500:	4b23      	ldr	r3, [pc, #140]	@ (8007590 <set_gear+0xd8>)
 8007502:	4a25      	ldr	r2, [pc, #148]	@ (8007598 <set_gear+0xe0>)
 8007504:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR2_ACCEL_MULT;
 8007506:	4b22      	ldr	r3, [pc, #136]	@ (8007590 <set_gear+0xd8>)
 8007508:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800750c:	60da      	str	r2, [r3, #12]
		break;
 800750e:	e03a      	b.n	8007586 <set_gear+0xce>
	case 3:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 8007510:	4b1f      	ldr	r3, [pc, #124]	@ (8007590 <set_gear+0xd8>)
 8007512:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007516:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8007518:	4b1d      	ldr	r3, [pc, #116]	@ (8007590 <set_gear+0xd8>)
 800751a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800751e:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 8007520:	4b1b      	ldr	r3, [pc, #108]	@ (8007590 <set_gear+0xd8>)
 8007522:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007526:	60da      	str	r2, [r3, #12]
		break;
 8007528:	e02d      	b.n	8007586 <set_gear+0xce>
	case 4:
		gear_speed.spin_mult = GEAR4_YAW_MULT;
 800752a:	4b19      	ldr	r3, [pc, #100]	@ (8007590 <set_gear+0xd8>)
 800752c:	4a1b      	ldr	r2, [pc, #108]	@ (800759c <set_gear+0xe4>)
 800752e:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR4_SPEED_MULT;
 8007530:	4b17      	ldr	r3, [pc, #92]	@ (8007590 <set_gear+0xd8>)
 8007532:	4a1b      	ldr	r2, [pc, #108]	@ (80075a0 <set_gear+0xe8>)
 8007534:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR4_ACCEL_MULT;
 8007536:	4b16      	ldr	r3, [pc, #88]	@ (8007590 <set_gear+0xd8>)
 8007538:	4a18      	ldr	r2, [pc, #96]	@ (800759c <set_gear+0xe4>)
 800753a:	60da      	str	r2, [r3, #12]
		break;
 800753c:	e023      	b.n	8007586 <set_gear+0xce>
	case 5:
		gear_speed.spin_mult = GEAR5_YAW_MULT;
 800753e:	4b14      	ldr	r3, [pc, #80]	@ (8007590 <set_gear+0xd8>)
 8007540:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8007544:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR5_SPEED_MULT;
 8007546:	4b12      	ldr	r3, [pc, #72]	@ (8007590 <set_gear+0xd8>)
 8007548:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800754c:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR5_ACCEL_MULT;
 800754e:	4b10      	ldr	r3, [pc, #64]	@ (8007590 <set_gear+0xd8>)
 8007550:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8007554:	60da      	str	r2, [r3, #12]
		break;
 8007556:	e016      	b.n	8007586 <set_gear+0xce>
	case 6:
		gear_speed.spin_mult = GEAR6_YAW_MULT;
 8007558:	4b0d      	ldr	r3, [pc, #52]	@ (8007590 <set_gear+0xd8>)
 800755a:	4a12      	ldr	r2, [pc, #72]	@ (80075a4 <set_gear+0xec>)
 800755c:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR6_SPEED_MULT;
 800755e:	4b0c      	ldr	r3, [pc, #48]	@ (8007590 <set_gear+0xd8>)
 8007560:	4a11      	ldr	r2, [pc, #68]	@ (80075a8 <set_gear+0xf0>)
 8007562:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR6_ACCEL_MULT;
 8007564:	4b0a      	ldr	r3, [pc, #40]	@ (8007590 <set_gear+0xd8>)
 8007566:	4a11      	ldr	r2, [pc, #68]	@ (80075ac <set_gear+0xf4>)
 8007568:	60da      	str	r2, [r3, #12]
		break;
 800756a:	e00c      	b.n	8007586 <set_gear+0xce>
	default:
		gear_speed.spin_mult = GEAR3_YAW_MULT;
 800756c:	4b08      	ldr	r3, [pc, #32]	@ (8007590 <set_gear+0xd8>)
 800756e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007572:	605a      	str	r2, [r3, #4]
		gear_speed.trans_mult = GEAR3_SPEED_MULT;
 8007574:	4b06      	ldr	r3, [pc, #24]	@ (8007590 <set_gear+0xd8>)
 8007576:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800757a:	609a      	str	r2, [r3, #8]
		gear_speed.accel_mult = GEAR3_ACCEL_MULT;
 800757c:	4b04      	ldr	r3, [pc, #16]	@ (8007590 <set_gear+0xd8>)
 800757e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007582:	60da      	str	r2, [r3, #12]
		break;
 8007584:	bf00      	nop
	}

}
 8007586:	bf00      	nop
 8007588:	46bd      	mov	sp, r7
 800758a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800758e:	4770      	bx	lr
 8007590:	20003904 	.word	0x20003904
 8007594:	3e99999a 	.word	0x3e99999a
 8007598:	3f19999a 	.word	0x3f19999a
 800759c:	3f99999a 	.word	0x3f99999a
 80075a0:	3fb33333 	.word	0x3fb33333
 80075a4:	40400000 	.word	0x40400000
 80075a8:	40a00000 	.word	0x40a00000
 80075ac:	41200000 	.word	0x41200000

080075b0 <chassis_yaw_pid_init>:

void chassis_yaw_pid_init() {
 80075b0:	b480      	push	{r7}
 80075b2:	af00      	add	r7, sp, #0
	yaw_pid_data.kp = CHASSIS_YAW_KP;
 80075b4:	4b09      	ldr	r3, [pc, #36]	@ (80075dc <chassis_yaw_pid_init+0x2c>)
 80075b6:	4a0a      	ldr	r2, [pc, #40]	@ (80075e0 <chassis_yaw_pid_init+0x30>)
 80075b8:	601a      	str	r2, [r3, #0]
	yaw_pid_data.ki = CHASSIS_YAW_KI;
 80075ba:	4b08      	ldr	r3, [pc, #32]	@ (80075dc <chassis_yaw_pid_init+0x2c>)
 80075bc:	f04f 0200 	mov.w	r2, #0
 80075c0:	605a      	str	r2, [r3, #4]
	yaw_pid_data.kd = CHASSIS_YAW_KD;
 80075c2:	4b06      	ldr	r3, [pc, #24]	@ (80075dc <chassis_yaw_pid_init+0x2c>)
 80075c4:	f04f 0200 	mov.w	r2, #0
 80075c8:	609a      	str	r2, [r3, #8]
	yaw_pid_data.max_out = CHASSIS_YAW_MAX_RPM;
 80075ca:	4b04      	ldr	r3, [pc, #16]	@ (80075dc <chassis_yaw_pid_init+0x2c>)
 80075cc:	f04f 527c 	mov.w	r2, #1056964608	@ 0x3f000000
 80075d0:	61da      	str	r2, [r3, #28]
}
 80075d2:	bf00      	nop
 80075d4:	46bd      	mov	sp, r7
 80075d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075da:	4770      	bx	lr
 80075dc:	200038d4 	.word	0x200038d4
 80075e0:	3f19999a 	.word	0x3f19999a

080075e4 <keyboard_control_input>:
extern int g_spinspin_mode;
static float curr_spinspin = 0;



void keyboard_control_input() {
 80075e4:	b580      	push	{r7, lr}
 80075e6:	af00      	add	r7, sp, #0
	mouse_gimbal_input();
 80075e8:	f000 f908 	bl	80077fc <mouse_gimbal_input>
	keyboard_chassis_input();
 80075ec:	f000 f868 	bl	80076c0 <keyboard_chassis_input>
	mouse_launcher_control_input();
 80075f0:	f000 f97a 	bl	80078e8 <mouse_launcher_control_input>
}
 80075f4:	bf00      	nop
 80075f6:	bd80      	pop	{r7, pc}

080075f8 <keyboard_gear_shifter>:

void keyboard_gear_shifter(speed_shift_t *gear_speed) {
 80075f8:	b580      	push	{r7, lr}
 80075fa:	b082      	sub	sp, #8
 80075fc:	af00      	add	r7, sp, #0
 80075fe:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	if ((g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT)
 8007600:	4b2c      	ldr	r3, [pc, #176]	@ (80076b4 <keyboard_gear_shifter+0xbc>)
 8007602:	8b5b      	ldrh	r3, [r3, #26]
 8007604:	f003 0310 	and.w	r3, r3, #16
 8007608:	2b00      	cmp	r3, #0
 800760a:	d013      	beq.n	8007634 <keyboard_gear_shifter+0x3c>
			&& (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL)) {
 800760c:	4b29      	ldr	r3, [pc, #164]	@ (80076b4 <keyboard_gear_shifter+0xbc>)
 800760e:	8b5b      	ldrh	r3, [r3, #26]
 8007610:	f003 0320 	and.w	r3, r3, #32
 8007614:	2b00      	cmp	r3, #0
 8007616:	d00d      	beq.n	8007634 <keyboard_gear_shifter+0x3c>
		gear_speed->curr_gear = 3;
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	2203      	movs	r2, #3
 800761c:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 800761e:	f006 facb 	bl	800dbb8 <HAL_GetTick>
 8007622:	4603      	mov	r3, r0
 8007624:	4a24      	ldr	r2, [pc, #144]	@ (80076b8 <keyboard_gear_shifter+0xc0>)
 8007626:	6013      	str	r3, [r2, #0]
		ctrl_press_time = HAL_GetTick();
 8007628:	f006 fac6 	bl	800dbb8 <HAL_GetTick>
 800762c:	4603      	mov	r3, r0
 800762e:	4a23      	ldr	r2, [pc, #140]	@ (80076bc <keyboard_gear_shifter+0xc4>)
 8007630:	6013      	str	r3, [r2, #0]
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
		}
		ctrl_press_time = HAL_GetTick();
	}

}
 8007632:	e03a      	b.n	80076aa <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_SHIFT) {
 8007634:	4b1f      	ldr	r3, [pc, #124]	@ (80076b4 <keyboard_gear_shifter+0xbc>)
 8007636:	8b5b      	ldrh	r3, [r3, #26]
 8007638:	f003 0310 	and.w	r3, r3, #16
 800763c:	2b00      	cmp	r3, #0
 800763e:	d017      	beq.n	8007670 <keyboard_gear_shifter+0x78>
		if (HAL_GetTick() - shift_press_time > 100) {
 8007640:	f006 faba 	bl	800dbb8 <HAL_GetTick>
 8007644:	4602      	mov	r2, r0
 8007646:	4b1c      	ldr	r3, [pc, #112]	@ (80076b8 <keyboard_gear_shifter+0xc0>)
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	1ad3      	subs	r3, r2, r3
 800764c:	2b64      	cmp	r3, #100	@ 0x64
 800764e:	d909      	bls.n	8007664 <keyboard_gear_shifter+0x6c>
					(gear_speed->curr_gear < 5) ? gear_speed->curr_gear + 1 : 5;
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8007654:	2b04      	cmp	r3, #4
 8007656:	bf28      	it	cs
 8007658:	2304      	movcs	r3, #4
 800765a:	b2db      	uxtb	r3, r3
 800765c:	3301      	adds	r3, #1
 800765e:	b2da      	uxtb	r2, r3
 8007660:	687b      	ldr	r3, [r7, #4]
 8007662:	701a      	strb	r2, [r3, #0]
		shift_press_time = HAL_GetTick();
 8007664:	f006 faa8 	bl	800dbb8 <HAL_GetTick>
 8007668:	4603      	mov	r3, r0
 800766a:	4a13      	ldr	r2, [pc, #76]	@ (80076b8 <keyboard_gear_shifter+0xc0>)
 800766c:	6013      	str	r3, [r2, #0]
}
 800766e:	e01c      	b.n	80076aa <keyboard_gear_shifter+0xb2>
	else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_CTRL) {
 8007670:	4b10      	ldr	r3, [pc, #64]	@ (80076b4 <keyboard_gear_shifter+0xbc>)
 8007672:	8b5b      	ldrh	r3, [r3, #26]
 8007674:	f003 0320 	and.w	r3, r3, #32
 8007678:	2b00      	cmp	r3, #0
 800767a:	d016      	beq.n	80076aa <keyboard_gear_shifter+0xb2>
		if (HAL_GetTick() - ctrl_press_time > 100) {
 800767c:	f006 fa9c 	bl	800dbb8 <HAL_GetTick>
 8007680:	4602      	mov	r2, r0
 8007682:	4b0e      	ldr	r3, [pc, #56]	@ (80076bc <keyboard_gear_shifter+0xc4>)
 8007684:	681b      	ldr	r3, [r3, #0]
 8007686:	1ad3      	subs	r3, r2, r3
 8007688:	2b64      	cmp	r3, #100	@ 0x64
 800768a:	d909      	bls.n	80076a0 <keyboard_gear_shifter+0xa8>
					(gear_speed->curr_gear > 1) ? gear_speed->curr_gear - 1 : 1;
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	781b      	ldrb	r3, [r3, #0]
			gear_speed->curr_gear =
 8007690:	2b02      	cmp	r3, #2
 8007692:	bf38      	it	cc
 8007694:	2302      	movcc	r3, #2
 8007696:	b2db      	uxtb	r3, r3
 8007698:	3b01      	subs	r3, #1
 800769a:	b2da      	uxtb	r2, r3
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	701a      	strb	r2, [r3, #0]
		ctrl_press_time = HAL_GetTick();
 80076a0:	f006 fa8a 	bl	800dbb8 <HAL_GetTick>
 80076a4:	4603      	mov	r3, r0
 80076a6:	4a05      	ldr	r2, [pc, #20]	@ (80076bc <keyboard_gear_shifter+0xc4>)
 80076a8:	6013      	str	r3, [r2, #0]
}
 80076aa:	bf00      	nop
 80076ac:	3708      	adds	r7, #8
 80076ae:	46bd      	mov	sp, r7
 80076b0:	bd80      	pop	{r7, pc}
 80076b2:	bf00      	nop
 80076b4:	20000838 	.word	0x20000838
 80076b8:	2000391c 	.word	0x2000391c
 80076bc:	20003920 	.word	0x20003920

080076c0 <keyboard_chassis_input>:

void keyboard_chassis_input() {
 80076c0:	b580      	push	{r7, lr}
 80076c2:	b084      	sub	sp, #16
 80076c4:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 80076c6:	4b49      	ldr	r3, [pc, #292]	@ (80077ec <keyboard_chassis_input+0x12c>)
 80076c8:	781b      	ldrb	r3, [r3, #0]
 80076ca:	2b00      	cmp	r3, #0
 80076cc:	d104      	bne.n	80076d8 <keyboard_chassis_input+0x18>
 80076ce:	4b48      	ldr	r3, [pc, #288]	@ (80077f0 <keyboard_chassis_input+0x130>)
 80076d0:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80076d4:	2b02      	cmp	r3, #2
 80076d6:	d00f      	beq.n	80076f8 <keyboard_chassis_input+0x38>
		chassis_ctrl_data.enabled = 0;
 80076d8:	4b46      	ldr	r3, [pc, #280]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80076da:	2200      	movs	r2, #0
 80076dc:	751a      	strb	r2, [r3, #20]
		chassis_ctrl_data.horizontal = 0;
 80076de:	4b45      	ldr	r3, [pc, #276]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80076e0:	f04f 0200 	mov.w	r2, #0
 80076e4:	605a      	str	r2, [r3, #4]
		chassis_ctrl_data.forward = 0;
 80076e6:	4b43      	ldr	r3, [pc, #268]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80076e8:	f04f 0200 	mov.w	r2, #0
 80076ec:	601a      	str	r2, [r3, #0]
		chassis_ctrl_data.yaw = 0;
 80076ee:	4b41      	ldr	r3, [pc, #260]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80076f0:	f04f 0200 	mov.w	r2, #0
 80076f4:	609a      	str	r2, [r3, #8]
			chassis_ctrl_data.horizontal = horizontal_input;
			chassis_ctrl_data.forward = forward_input;
			chassis_ctrl_data.yaw = yaw_input;
		}
	}
}
 80076f6:	e075      	b.n	80077e4 <keyboard_chassis_input+0x124>
		if (g_remote_cmd.right_switch == ge_RSW_ALL_ON) {
 80076f8:	4b3d      	ldr	r3, [pc, #244]	@ (80077f0 <keyboard_chassis_input+0x130>)
 80076fa:	f993 3009 	ldrsb.w	r3, [r3, #9]
 80076fe:	2b02      	cmp	r3, #2
 8007700:	d170      	bne.n	80077e4 <keyboard_chassis_input+0x124>
			chassis_ctrl_data.enabled = 1;
 8007702:	4b3c      	ldr	r3, [pc, #240]	@ (80077f4 <keyboard_chassis_input+0x134>)
 8007704:	2201      	movs	r2, #1
 8007706:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8007708:	f04f 0300 	mov.w	r3, #0
 800770c:	60fb      	str	r3, [r7, #12]
			float forward_input = 0.0;
 800770e:	f04f 0300 	mov.w	r3, #0
 8007712:	60bb      	str	r3, [r7, #8]
			float yaw_input = 0.0;
 8007714:	f04f 0300 	mov.w	r3, #0
 8007718:	607b      	str	r3, [r7, #4]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_Q) {
 800771a:	4b35      	ldr	r3, [pc, #212]	@ (80077f0 <keyboard_chassis_input+0x130>)
 800771c:	8b5b      	ldrh	r3, [r3, #26]
 800771e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007722:	2b00      	cmp	r3, #0
 8007724:	d003      	beq.n	800772e <keyboard_chassis_input+0x6e>
				g_spinspin_mode = 1;
 8007726:	4b34      	ldr	r3, [pc, #208]	@ (80077f8 <keyboard_chassis_input+0x138>)
 8007728:	2201      	movs	r2, #1
 800772a:	601a      	str	r2, [r3, #0]
 800772c:	e008      	b.n	8007740 <keyboard_chassis_input+0x80>
			} else if (g_remote_cmd.keyboard_keys & KEY_OFFSET_E) {
 800772e:	4b30      	ldr	r3, [pc, #192]	@ (80077f0 <keyboard_chassis_input+0x130>)
 8007730:	8b5b      	ldrh	r3, [r3, #26]
 8007732:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007736:	2b00      	cmp	r3, #0
 8007738:	d002      	beq.n	8007740 <keyboard_chassis_input+0x80>
				g_spinspin_mode = 0;
 800773a:	4b2f      	ldr	r3, [pc, #188]	@ (80077f8 <keyboard_chassis_input+0x138>)
 800773c:	2200      	movs	r2, #0
 800773e:	601a      	str	r2, [r3, #0]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_W) {
 8007740:	4b2b      	ldr	r3, [pc, #172]	@ (80077f0 <keyboard_chassis_input+0x130>)
 8007742:	8b5b      	ldrh	r3, [r3, #26]
 8007744:	f003 0301 	and.w	r3, r3, #1
 8007748:	2b00      	cmp	r3, #0
 800774a:	d007      	beq.n	800775c <keyboard_chassis_input+0x9c>
				forward_input += KEYBD_MAX_SPD;
 800774c:	edd7 7a02 	vldr	s15, [r7, #8]
 8007750:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8007754:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007758:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_S) {
 800775c:	4b24      	ldr	r3, [pc, #144]	@ (80077f0 <keyboard_chassis_input+0x130>)
 800775e:	8b5b      	ldrh	r3, [r3, #26]
 8007760:	f003 0302 	and.w	r3, r3, #2
 8007764:	2b00      	cmp	r3, #0
 8007766:	d007      	beq.n	8007778 <keyboard_chassis_input+0xb8>
				forward_input -= KEYBD_MAX_SPD;
 8007768:	edd7 7a02 	vldr	s15, [r7, #8]
 800776c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8007770:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007774:	edc7 7a02 	vstr	s15, [r7, #8]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_A) {
 8007778:	4b1d      	ldr	r3, [pc, #116]	@ (80077f0 <keyboard_chassis_input+0x130>)
 800777a:	8b5b      	ldrh	r3, [r3, #26]
 800777c:	f003 0304 	and.w	r3, r3, #4
 8007780:	2b00      	cmp	r3, #0
 8007782:	d007      	beq.n	8007794 <keyboard_chassis_input+0xd4>
				horizontal_input -= KEYBD_MAX_SPD;
 8007784:	edd7 7a03 	vldr	s15, [r7, #12]
 8007788:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800778c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007790:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_remote_cmd.keyboard_keys & KEY_OFFSET_D) {
 8007794:	4b16      	ldr	r3, [pc, #88]	@ (80077f0 <keyboard_chassis_input+0x130>)
 8007796:	8b5b      	ldrh	r3, [r3, #26]
 8007798:	f003 0308 	and.w	r3, r3, #8
 800779c:	2b00      	cmp	r3, #0
 800779e:	d007      	beq.n	80077b0 <keyboard_chassis_input+0xf0>
				horizontal_input += KEYBD_MAX_SPD;
 80077a0:	edd7 7a03 	vldr	s15, [r7, #12]
 80077a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80077a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80077ac:	edc7 7a03 	vstr	s15, [r7, #12]
			if (g_spinspin_mode) {
 80077b0:	4b11      	ldr	r3, [pc, #68]	@ (80077f8 <keyboard_chassis_input+0x138>)
 80077b2:	681b      	ldr	r3, [r3, #0]
 80077b4:	2b00      	cmp	r3, #0
 80077b6:	d008      	beq.n	80077ca <keyboard_chassis_input+0x10a>
				yaw_input = g_spinspin_mode * CHASSIS_SPINSPIN_MAX;
 80077b8:	4b0f      	ldr	r3, [pc, #60]	@ (80077f8 <keyboard_chassis_input+0x138>)
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	ee07 3a90 	vmov	s15, r3
 80077c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80077c4:	edc7 7a01 	vstr	s15, [r7, #4]
 80077c8:	e003      	b.n	80077d2 <keyboard_chassis_input+0x112>
				yaw_input = chassis_center_yaw();
 80077ca:	f7ff fcbd 	bl	8007148 <chassis_center_yaw>
 80077ce:	ed87 0a01 	vstr	s0, [r7, #4]
			chassis_ctrl_data.horizontal = horizontal_input;
 80077d2:	4a08      	ldr	r2, [pc, #32]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80077d4:	68fb      	ldr	r3, [r7, #12]
 80077d6:	6053      	str	r3, [r2, #4]
			chassis_ctrl_data.forward = forward_input;
 80077d8:	4a06      	ldr	r2, [pc, #24]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80077da:	68bb      	ldr	r3, [r7, #8]
 80077dc:	6013      	str	r3, [r2, #0]
			chassis_ctrl_data.yaw = yaw_input;
 80077de:	4a05      	ldr	r2, [pc, #20]	@ (80077f4 <keyboard_chassis_input+0x134>)
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	6093      	str	r3, [r2, #8]
}
 80077e4:	bf00      	nop
 80077e6:	3710      	adds	r7, #16
 80077e8:	46bd      	mov	sp, r7
 80077ea:	bd80      	pop	{r7, pc}
 80077ec:	20000031 	.word	0x20000031
 80077f0:	20000838 	.word	0x20000838
 80077f4:	200038a0 	.word	0x200038a0
 80077f8:	20003914 	.word	0x20003914

080077fc <mouse_gimbal_input>:

void mouse_gimbal_input() {
 80077fc:	b580      	push	{r7, lr}
 80077fe:	b082      	sub	sp, #8
 8007800:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8007802:	4b33      	ldr	r3, [pc, #204]	@ (80078d0 <mouse_gimbal_input+0xd4>)
 8007804:	781b      	ldrb	r3, [r3, #0]
 8007806:	2b00      	cmp	r3, #0
 8007808:	d104      	bne.n	8007814 <mouse_gimbal_input+0x18>
 800780a:	4b32      	ldr	r3, [pc, #200]	@ (80078d4 <mouse_gimbal_input+0xd8>)
 800780c:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007810:	2b01      	cmp	r3, #1
 8007812:	d103      	bne.n	800781c <mouse_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8007814:	4b30      	ldr	r3, [pc, #192]	@ (80078d8 <mouse_gimbal_input+0xdc>)
 8007816:	2200      	movs	r2, #0
 8007818:	735a      	strb	r2, [r3, #13]
 800781a:	e055      	b.n	80078c8 <mouse_gimbal_input+0xcc>
	} else {
		gimbal_ctrl_data.enabled = 1;
 800781c:	4b2e      	ldr	r3, [pc, #184]	@ (80078d8 <mouse_gimbal_input+0xdc>)
 800781e:	2201      	movs	r2, #1
 8007820:	735a      	strb	r2, [r3, #13]
//		float pitch_mouse = (float) g_remote_cmd.mouse_y * MOUSE_Y_INVERT
//				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
//		float yaw_mouse = (float) g_remote_cmd.mouse_x * MOUSE_X_INVERT
//				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;

		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 8007822:	4b2c      	ldr	r3, [pc, #176]	@ (80078d4 <mouse_gimbal_input+0xd8>)
 8007824:	695b      	ldr	r3, [r3, #20]
 8007826:	ee07 3a90 	vmov	s15, r3
 800782a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* PITCH_INVERT * MOUSE_Y_SENSITIVITY / 32768;
 800782e:	eef1 7a67 	vneg.f32	s15, s15
 8007832:	ee17 3a90 	vmov	r3, s15
 8007836:	4618      	mov	r0, r3
 8007838:	f7f8 fe86 	bl	8000548 <__aeabi_f2d>
 800783c:	f04f 0200 	mov.w	r2, #0
 8007840:	4b26      	ldr	r3, [pc, #152]	@ (80078dc <mouse_gimbal_input+0xe0>)
 8007842:	f7f8 fed9 	bl	80005f8 <__aeabi_dmul>
 8007846:	4602      	mov	r2, r0
 8007848:	460b      	mov	r3, r1
 800784a:	4610      	mov	r0, r2
 800784c:	4619      	mov	r1, r3
 800784e:	f04f 0200 	mov.w	r2, #0
 8007852:	4b23      	ldr	r3, [pc, #140]	@ (80078e0 <mouse_gimbal_input+0xe4>)
 8007854:	f7f8 fffa 	bl	800084c <__aeabi_ddiv>
 8007858:	4602      	mov	r2, r0
 800785a:	460b      	mov	r3, r1
		float pitch_mouse = (float) g_remote_cmd.mouse_vert * MOUSE_Y_INVERT
 800785c:	4610      	mov	r0, r2
 800785e:	4619      	mov	r1, r3
 8007860:	f7f9 f9c2 	bl	8000be8 <__aeabi_d2f>
 8007864:	4603      	mov	r3, r0
 8007866:	607b      	str	r3, [r7, #4]
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 8007868:	4b1a      	ldr	r3, [pc, #104]	@ (80078d4 <mouse_gimbal_input+0xd8>)
 800786a:	691b      	ldr	r3, [r3, #16]
 800786c:	ee07 3a90 	vmov	s15, r3
 8007870:	eef8 7ae7 	vcvt.f32.s32	s15, s15
				* YAW_INVERT * MOUSE_X_SENSITIVITY / 32768;
 8007874:	eef1 7a67 	vneg.f32	s15, s15
 8007878:	ee17 3a90 	vmov	r3, s15
 800787c:	4618      	mov	r0, r3
 800787e:	f7f8 fe63 	bl	8000548 <__aeabi_f2d>
 8007882:	f04f 0200 	mov.w	r2, #0
 8007886:	4b17      	ldr	r3, [pc, #92]	@ (80078e4 <mouse_gimbal_input+0xe8>)
 8007888:	f7f8 feb6 	bl	80005f8 <__aeabi_dmul>
 800788c:	4602      	mov	r2, r0
 800788e:	460b      	mov	r3, r1
 8007890:	4610      	mov	r0, r2
 8007892:	4619      	mov	r1, r3
 8007894:	f04f 0200 	mov.w	r2, #0
 8007898:	4b11      	ldr	r3, [pc, #68]	@ (80078e0 <mouse_gimbal_input+0xe4>)
 800789a:	f7f8 ffd7 	bl	800084c <__aeabi_ddiv>
 800789e:	4602      	mov	r2, r0
 80078a0:	460b      	mov	r3, r1
		float yaw_mouse = (float) g_remote_cmd.mouse_hori * MOUSE_X_INVERT
 80078a2:	4610      	mov	r0, r2
 80078a4:	4619      	mov	r1, r3
 80078a6:	f7f9 f99f 	bl	8000be8 <__aeabi_d2f>
 80078aa:	4603      	mov	r3, r0
 80078ac:	603b      	str	r3, [r7, #0]
		g_remote_cmd.mouse_vert = 0;
 80078ae:	4b09      	ldr	r3, [pc, #36]	@ (80078d4 <mouse_gimbal_input+0xd8>)
 80078b0:	2200      	movs	r2, #0
 80078b2:	615a      	str	r2, [r3, #20]
		g_remote_cmd.mouse_hori = 0;
 80078b4:	4b07      	ldr	r3, [pc, #28]	@ (80078d4 <mouse_gimbal_input+0xd8>)
 80078b6:	2200      	movs	r2, #0
 80078b8:	611a      	str	r2, [r3, #16]
		gimbal_turn_ang(pitch_mouse, yaw_mouse);
 80078ba:	edd7 0a00 	vldr	s1, [r7]
 80078be:	ed97 0a01 	vldr	s0, [r7, #4]
 80078c2:	f7ff fda9 	bl	8007418 <gimbal_turn_ang>

	}
}
 80078c6:	bf00      	nop
 80078c8:	bf00      	nop
 80078ca:	3708      	adds	r7, #8
 80078cc:	46bd      	mov	sp, r7
 80078ce:	bd80      	pop	{r7, pc}
 80078d0:	20000031 	.word	0x20000031
 80078d4:	20000838 	.word	0x20000838
 80078d8:	200038c0 	.word	0x200038c0
 80078dc:	c0240000 	.word	0xc0240000
 80078e0:	40e00000 	.word	0x40e00000
 80078e4:	40240000 	.word	0x40240000

080078e8 <mouse_launcher_control_input>:

void mouse_launcher_control_input() {
 80078e8:	b480      	push	{r7}
 80078ea:	af00      	add	r7, sp, #0
	if (g_safety_toggle || launcher_safety_toggle
 80078ec:	4b28      	ldr	r3, [pc, #160]	@ (8007990 <mouse_launcher_control_input+0xa8>)
 80078ee:	781b      	ldrb	r3, [r3, #0]
 80078f0:	2b00      	cmp	r3, #0
 80078f2:	d10d      	bne.n	8007910 <mouse_launcher_control_input+0x28>
 80078f4:	4b27      	ldr	r3, [pc, #156]	@ (8007994 <mouse_launcher_control_input+0xac>)
 80078f6:	781b      	ldrb	r3, [r3, #0]
 80078f8:	2b00      	cmp	r3, #0
 80078fa:	d109      	bne.n	8007910 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 80078fc:	4b26      	ldr	r3, [pc, #152]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 80078fe:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007902:	2b01      	cmp	r3, #1
 8007904:	d004      	beq.n	8007910 <mouse_launcher_control_input+0x28>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8007906:	4b24      	ldr	r3, [pc, #144]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 8007908:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800790c:	2b01      	cmp	r3, #1
 800790e:	d016      	beq.n	800793e <mouse_launcher_control_input+0x56>
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8007910:	4b21      	ldr	r3, [pc, #132]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 8007912:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007916:	2b01      	cmp	r3, #1
 8007918:	d102      	bne.n	8007920 <mouse_launcher_control_input+0x38>
			launcher_ctrl_data.enabled = 0;
 800791a:	4b20      	ldr	r3, [pc, #128]	@ (800799c <mouse_launcher_control_input+0xb4>)
 800791c:	2200      	movs	r2, #0
 800791e:	715a      	strb	r2, [r3, #5]
		}
		launcher_ctrl_data.firing = 0;
 8007920:	4b1e      	ldr	r3, [pc, #120]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007922:	2200      	movs	r2, #0
 8007924:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8007926:	4b1d      	ldr	r3, [pc, #116]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007928:	2200      	movs	r2, #0
 800792a:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 800792c:	4b1a      	ldr	r3, [pc, #104]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 800792e:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007932:	2b01      	cmp	r3, #1
 8007934:	d027      	beq.n	8007986 <mouse_launcher_control_input+0x9e>
			launcher_safety_toggle = 0;
 8007936:	4b17      	ldr	r3, [pc, #92]	@ (8007994 <mouse_launcher_control_input+0xac>)
 8007938:	2200      	movs	r2, #0
 800793a:	701a      	strb	r2, [r3, #0]
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 800793c:	e023      	b.n	8007986 <mouse_launcher_control_input+0x9e>
		}
	} else {
		launcher_ctrl_data.enabled = 1;
 800793e:	4b17      	ldr	r3, [pc, #92]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007940:	2201      	movs	r2, #1
 8007942:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 8007944:	4b15      	ldr	r3, [pc, #84]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007946:	2201      	movs	r2, #1
 8007948:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 800794a:	4b13      	ldr	r3, [pc, #76]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 800794c:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007950:	2b01      	cmp	r3, #1
 8007952:	d10b      	bne.n	800796c <mouse_launcher_control_input+0x84>
			if (g_remote_cmd.mouse_right) {
 8007954:	4b10      	ldr	r3, [pc, #64]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 8007956:	f993 3019 	ldrsb.w	r3, [r3, #25]
 800795a:	2b00      	cmp	r3, #0
 800795c:	d003      	beq.n	8007966 <mouse_launcher_control_input+0x7e>
				launcher_ctrl_data.override = 1;
 800795e:	4b0f      	ldr	r3, [pc, #60]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007960:	2201      	movs	r2, #1
 8007962:	711a      	strb	r2, [r3, #4]
 8007964:	e002      	b.n	800796c <mouse_launcher_control_input+0x84>
			} else {
				launcher_ctrl_data.override = 0;
 8007966:	4b0d      	ldr	r3, [pc, #52]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007968:	2200      	movs	r2, #0
 800796a:	711a      	strb	r2, [r3, #4]
			}
		}
		if (g_remote_cmd.mouse_left) {
 800796c:	4b0a      	ldr	r3, [pc, #40]	@ (8007998 <mouse_launcher_control_input+0xb0>)
 800796e:	f993 3018 	ldrsb.w	r3, [r3, #24]
 8007972:	2b00      	cmp	r3, #0
 8007974:	d003      	beq.n	800797e <mouse_launcher_control_input+0x96>
			launcher_ctrl_data.firing =1;
 8007976:	4b09      	ldr	r3, [pc, #36]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007978:	2201      	movs	r2, #1
 800797a:	805a      	strh	r2, [r3, #2]

		} else {
			launcher_ctrl_data.firing = 0;
		}
	}
}
 800797c:	e003      	b.n	8007986 <mouse_launcher_control_input+0x9e>
			launcher_ctrl_data.firing = 0;
 800797e:	4b07      	ldr	r3, [pc, #28]	@ (800799c <mouse_launcher_control_input+0xb4>)
 8007980:	2200      	movs	r2, #0
 8007982:	805a      	strh	r2, [r3, #2]
}
 8007984:	e7ff      	b.n	8007986 <mouse_launcher_control_input+0x9e>
 8007986:	bf00      	nop
 8007988:	46bd      	mov	sp, r7
 800798a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800798e:	4770      	bx	lr
 8007990:	20000031 	.word	0x20000031
 8007994:	20000032 	.word	0x20000032
 8007998:	20000838 	.word	0x20000838
 800799c:	200038b8 	.word	0x200038b8

080079a0 <remote_control_input>:
extern gimbal_control_t gimbal_ctrl_data;
extern uint8_t g_safety_toggle;
extern uint8_t launcher_safety_toggle;


void remote_control_input() {
 80079a0:	b580      	push	{r7, lr}
 80079a2:	af00      	add	r7, sp, #0
	remote_gimbal_input();
 80079a4:	f000 f8f0 	bl	8007b88 <remote_gimbal_input>
	remote_chassis_input();
 80079a8:	f000 f87e 	bl	8007aa8 <remote_chassis_input>
	remote_launcher_control_input();
 80079ac:	f000 f958 	bl	8007c60 <remote_launcher_control_input>
}
 80079b0:	bf00      	nop
 80079b2:	bd80      	pop	{r7, pc}

080079b4 <remote_gear_shifter>:
void remote_gear_shifter(speed_shift_t* gear_speed){
 80079b4:	b580      	push	{r7, lr}
 80079b6:	b084      	sub	sp, #16
 80079b8:	af00      	add	r7, sp, #0
 80079ba:	6078      	str	r0, [r7, #4]
	static uint32_t shift_press_time;
	static uint32_t ctrl_press_time;
	uint8_t temp_msg;
	if (g_remote_cmd.left_switch == ge_LSW_CONFIG) {
 80079bc:	4b36      	ldr	r3, [pc, #216]	@ (8007a98 <remote_gear_shifter+0xe4>)
 80079be:	f993 3008 	ldrsb.w	r3, [r3, #8]
 80079c2:	2b03      	cmp	r3, #3
 80079c4:	d164      	bne.n	8007a90 <remote_gear_shifter+0xdc>
		if (g_remote_cmd.side_dial > 330) {
 80079c6:	4b34      	ldr	r3, [pc, #208]	@ (8007a98 <remote_gear_shifter+0xe4>)
 80079c8:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 80079cc:	f5b3 7fa5 	cmp.w	r3, #330	@ 0x14a
 80079d0:	dd2c      	ble.n	8007a2c <remote_gear_shifter+0x78>
			if (HAL_GetTick() - shift_press_time > 100) {
 80079d2:	f006 f8f1 	bl	800dbb8 <HAL_GetTick>
 80079d6:	4602      	mov	r2, r0
 80079d8:	4b30      	ldr	r3, [pc, #192]	@ (8007a9c <remote_gear_shifter+0xe8>)
 80079da:	681b      	ldr	r3, [r3, #0]
 80079dc:	1ad3      	subs	r3, r2, r3
 80079de:	2b64      	cmp	r3, #100	@ 0x64
 80079e0:	d91e      	bls.n	8007a20 <remote_gear_shifter+0x6c>
				gear_speed->curr_gear =
						(gear_speed->curr_gear < 6) ?
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 80079e6:	2b05      	cmp	r3, #5
 80079e8:	bf28      	it	cs
 80079ea:	2305      	movcs	r3, #5
 80079ec:	b2db      	uxtb	r3, r3
 80079ee:	3301      	adds	r3, #1
 80079f0:	b2da      	uxtb	r2, r3
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	701a      	strb	r2, [r3, #0]
								gear_speed->curr_gear + 1 : 6;
				temp_msg = bz_high;
 80079f6:	2306      	movs	r3, #6
 80079f8:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 80079fa:	2300      	movs	r3, #0
 80079fc:	73fb      	strb	r3, [r7, #15]
 80079fe:	e00a      	b.n	8007a16 <remote_gear_shifter+0x62>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8007a00:	4b27      	ldr	r3, [pc, #156]	@ (8007aa0 <remote_gear_shifter+0xec>)
 8007a02:	6818      	ldr	r0, [r3, #0]
 8007a04:	f107 010d 	add.w	r1, r7, #13
 8007a08:	2300      	movs	r3, #0
 8007a0a:	2200      	movs	r2, #0
 8007a0c:	f012 fbb0 	bl	801a170 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8007a10:	7bfb      	ldrb	r3, [r7, #15]
 8007a12:	3301      	adds	r3, #1
 8007a14:	73fb      	strb	r3, [r7, #15]
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	781b      	ldrb	r3, [r3, #0]
 8007a1a:	7bfa      	ldrb	r2, [r7, #15]
 8007a1c:	429a      	cmp	r2, r3
 8007a1e:	d3ef      	bcc.n	8007a00 <remote_gear_shifter+0x4c>
				}
			}
			shift_press_time = HAL_GetTick();
 8007a20:	f006 f8ca 	bl	800dbb8 <HAL_GetTick>
 8007a24:	4603      	mov	r3, r0
 8007a26:	4a1d      	ldr	r2, [pc, #116]	@ (8007a9c <remote_gear_shifter+0xe8>)
 8007a28:	6013      	str	r3, [r2, #0]
				}
			}
			ctrl_press_time = HAL_GetTick();
		}
	}
}
 8007a2a:	e031      	b.n	8007a90 <remote_gear_shifter+0xdc>
		else if (g_remote_cmd.side_dial < -330) {
 8007a2c:	4b1a      	ldr	r3, [pc, #104]	@ (8007a98 <remote_gear_shifter+0xe4>)
 8007a2e:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8007a32:	f513 7fa5 	cmn.w	r3, #330	@ 0x14a
 8007a36:	da2b      	bge.n	8007a90 <remote_gear_shifter+0xdc>
			if (HAL_GetTick() - ctrl_press_time > 100) {
 8007a38:	f006 f8be 	bl	800dbb8 <HAL_GetTick>
 8007a3c:	4602      	mov	r2, r0
 8007a3e:	4b19      	ldr	r3, [pc, #100]	@ (8007aa4 <remote_gear_shifter+0xf0>)
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	1ad3      	subs	r3, r2, r3
 8007a44:	2b64      	cmp	r3, #100	@ 0x64
 8007a46:	d91e      	bls.n	8007a86 <remote_gear_shifter+0xd2>
						(gear_speed->curr_gear > 1) ?
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	781b      	ldrb	r3, [r3, #0]
				gear_speed->curr_gear =
 8007a4c:	2b02      	cmp	r3, #2
 8007a4e:	bf38      	it	cc
 8007a50:	2302      	movcc	r3, #2
 8007a52:	b2db      	uxtb	r3, r3
 8007a54:	3b01      	subs	r3, #1
 8007a56:	b2da      	uxtb	r2, r3
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	701a      	strb	r2, [r3, #0]
				temp_msg = bz_low;
 8007a5c:	2307      	movs	r3, #7
 8007a5e:	737b      	strb	r3, [r7, #13]
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8007a60:	2300      	movs	r3, #0
 8007a62:	73bb      	strb	r3, [r7, #14]
 8007a64:	e00a      	b.n	8007a7c <remote_gear_shifter+0xc8>
					xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 8007a66:	4b0e      	ldr	r3, [pc, #56]	@ (8007aa0 <remote_gear_shifter+0xec>)
 8007a68:	6818      	ldr	r0, [r3, #0]
 8007a6a:	f107 010d 	add.w	r1, r7, #13
 8007a6e:	2300      	movs	r3, #0
 8007a70:	2200      	movs	r2, #0
 8007a72:	f012 fb7d 	bl	801a170 <xQueueGenericSend>
				for (uint8_t i = 0; i < gear_speed->curr_gear; i++) {
 8007a76:	7bbb      	ldrb	r3, [r7, #14]
 8007a78:	3301      	adds	r3, #1
 8007a7a:	73bb      	strb	r3, [r7, #14]
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	781b      	ldrb	r3, [r3, #0]
 8007a80:	7bba      	ldrb	r2, [r7, #14]
 8007a82:	429a      	cmp	r2, r3
 8007a84:	d3ef      	bcc.n	8007a66 <remote_gear_shifter+0xb2>
			ctrl_press_time = HAL_GetTick();
 8007a86:	f006 f897 	bl	800dbb8 <HAL_GetTick>
 8007a8a:	4603      	mov	r3, r0
 8007a8c:	4a05      	ldr	r2, [pc, #20]	@ (8007aa4 <remote_gear_shifter+0xf0>)
 8007a8e:	6013      	str	r3, [r2, #0]
}
 8007a90:	bf00      	nop
 8007a92:	3710      	adds	r7, #16
 8007a94:	46bd      	mov	sp, r7
 8007a96:	bd80      	pop	{r7, pc}
 8007a98:	20000838 	.word	0x20000838
 8007a9c:	20003924 	.word	0x20003924
 8007aa0:	20003b98 	.word	0x20003b98
 8007aa4:	20003928 	.word	0x20003928

08007aa8 <remote_chassis_input>:

void remote_chassis_input() {
 8007aa8:	b580      	push	{r7, lr}
 8007aaa:	b084      	sub	sp, #16
 8007aac:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch != ge_RSW_ALL_ON) {
 8007aae:	4b32      	ldr	r3, [pc, #200]	@ (8007b78 <remote_chassis_input+0xd0>)
 8007ab0:	781b      	ldrb	r3, [r3, #0]
 8007ab2:	2b00      	cmp	r3, #0
 8007ab4:	d104      	bne.n	8007ac0 <remote_chassis_input+0x18>
 8007ab6:	4b31      	ldr	r3, [pc, #196]	@ (8007b7c <remote_chassis_input+0xd4>)
 8007ab8:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007abc:	2b02      	cmp	r3, #2
 8007abe:	d002      	beq.n	8007ac6 <remote_chassis_input+0x1e>
//		chassis_ctrl_data.enabled = 0;
		chassis_kill_ctrl();
 8007ac0:	f7ff fb6e 	bl	80071a0 <chassis_kill_ctrl>
 8007ac4:	e053      	b.n	8007b6e <remote_chassis_input+0xc6>
	} else {
			chassis_ctrl_data.enabled = 1;
 8007ac6:	4b2e      	ldr	r3, [pc, #184]	@ (8007b80 <remote_chassis_input+0xd8>)
 8007ac8:	2201      	movs	r2, #1
 8007aca:	751a      	strb	r2, [r3, #20]
			float horizontal_input = 0.0;
 8007acc:	f04f 0300 	mov.w	r3, #0
 8007ad0:	60bb      	str	r3, [r7, #8]
			float forward_input = 0.0;
 8007ad2:	f04f 0300 	mov.w	r3, #0
 8007ad6:	607b      	str	r3, [r7, #4]
			float yaw_input = 0.0;
 8007ad8:	f04f 0300 	mov.w	r3, #0
 8007adc:	60fb      	str	r3, [r7, #12]

			forward_input = (float) g_remote_cmd.left_y / RC_LIMITS;
 8007ade:	4b27      	ldr	r3, [pc, #156]	@ (8007b7c <remote_chassis_input+0xd4>)
 8007ae0:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8007ae4:	ee07 3a90 	vmov	s15, r3
 8007ae8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007aec:	eddf 6a25 	vldr	s13, [pc, #148]	@ 8007b84 <remote_chassis_input+0xdc>
 8007af0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8007af4:	edc7 7a01 	vstr	s15, [r7, #4]
			horizontal_input = (float) g_remote_cmd.left_x / RC_LIMITS;
 8007af8:	4b20      	ldr	r3, [pc, #128]	@ (8007b7c <remote_chassis_input+0xd4>)
 8007afa:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8007afe:	ee07 3a90 	vmov	s15, r3
 8007b02:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007b06:	eddf 6a1f 	vldr	s13, [pc, #124]	@ 8007b84 <remote_chassis_input+0xdc>
 8007b0a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8007b0e:	edc7 7a02 	vstr	s15, [r7, #8]

//			yaw_input = (float)g_remote_cmd.right_x * CHASSIS_SPINSPIN_MAX/660;
//			yaw_input = 0;
			if (g_remote_cmd.left_switch == ge_LSW_STANDBY){
 8007b12:	4b1a      	ldr	r3, [pc, #104]	@ (8007b7c <remote_chassis_input+0xd4>)
 8007b14:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007b18:	2b02      	cmp	r3, #2
 8007b1a:	d11b      	bne.n	8007b54 <remote_chassis_input+0xac>
				if (abs(g_remote_cmd.side_dial) > 50 ){
 8007b1c:	4b17      	ldr	r3, [pc, #92]	@ (8007b7c <remote_chassis_input+0xd4>)
 8007b1e:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8007b22:	2b00      	cmp	r3, #0
 8007b24:	bfb8      	it	lt
 8007b26:	425b      	neglt	r3, r3
 8007b28:	b29b      	uxth	r3, r3
 8007b2a:	2b32      	cmp	r3, #50	@ 0x32
 8007b2c:	d90d      	bls.n	8007b4a <remote_chassis_input+0xa2>
					yaw_input = (float) g_remote_cmd.side_dial / RC_LIMITS;
 8007b2e:	4b13      	ldr	r3, [pc, #76]	@ (8007b7c <remote_chassis_input+0xd4>)
 8007b30:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8007b34:	ee07 3a90 	vmov	s15, r3
 8007b38:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007b3c:	eddf 6a11 	vldr	s13, [pc, #68]	@ 8007b84 <remote_chassis_input+0xdc>
 8007b40:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8007b44:	edc7 7a03 	vstr	s15, [r7, #12]
 8007b48:	e008      	b.n	8007b5c <remote_chassis_input+0xb4>
				}
				else {
				yaw_input = chassis_center_yaw();
 8007b4a:	f7ff fafd 	bl	8007148 <chassis_center_yaw>
 8007b4e:	ed87 0a03 	vstr	s0, [r7, #12]
 8007b52:	e003      	b.n	8007b5c <remote_chassis_input+0xb4>
				}
			}
			else {
			yaw_input = chassis_center_yaw();
 8007b54:	f7ff faf8 	bl	8007148 <chassis_center_yaw>
 8007b58:	ed87 0a03 	vstr	s0, [r7, #12]
			}
			//min value

//yaw_input = (float) remote_cmd.right_x * CHASSIS_YAW_MAX_RPM /RC_LIMITS;
			chassis_set_ctrl(forward_input, horizontal_input, yaw_input);
 8007b5c:	ed97 1a03 	vldr	s2, [r7, #12]
 8007b60:	edd7 0a02 	vldr	s1, [r7, #8]
 8007b64:	ed97 0a01 	vldr	s0, [r7, #4]
 8007b68:	f7ff faf8 	bl	800715c <chassis_set_ctrl>
	}
}
 8007b6c:	bf00      	nop
 8007b6e:	bf00      	nop
 8007b70:	3710      	adds	r7, #16
 8007b72:	46bd      	mov	sp, r7
 8007b74:	bd80      	pop	{r7, pc}
 8007b76:	bf00      	nop
 8007b78:	20000031 	.word	0x20000031
 8007b7c:	20000838 	.word	0x20000838
 8007b80:	200038a0 	.word	0x200038a0
 8007b84:	44250000 	.word	0x44250000

08007b88 <remote_gimbal_input>:

void remote_gimbal_input() {
 8007b88:	b580      	push	{r7, lr}
 8007b8a:	b082      	sub	sp, #8
 8007b8c:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN) {
 8007b8e:	4b30      	ldr	r3, [pc, #192]	@ (8007c50 <remote_gimbal_input+0xc8>)
 8007b90:	781b      	ldrb	r3, [r3, #0]
 8007b92:	2b00      	cmp	r3, #0
 8007b94:	d104      	bne.n	8007ba0 <remote_gimbal_input+0x18>
 8007b96:	4b2f      	ldr	r3, [pc, #188]	@ (8007c54 <remote_gimbal_input+0xcc>)
 8007b98:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007b9c:	2b01      	cmp	r3, #1
 8007b9e:	d103      	bne.n	8007ba8 <remote_gimbal_input+0x20>
		gimbal_ctrl_data.enabled = 0;
 8007ba0:	4b2d      	ldr	r3, [pc, #180]	@ (8007c58 <remote_gimbal_input+0xd0>)
 8007ba2:	2200      	movs	r2, #0
 8007ba4:	735a      	strb	r2, [r3, #13]
 8007ba6:	e044      	b.n	8007c32 <remote_gimbal_input+0xaa>
	} else {
		gimbal_ctrl_data.enabled = 1;
 8007ba8:	4b2b      	ldr	r3, [pc, #172]	@ (8007c58 <remote_gimbal_input+0xd0>)
 8007baa:	2201      	movs	r2, #1
 8007bac:	735a      	strb	r2, [r3, #13]
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 8007bae:	4b29      	ldr	r3, [pc, #164]	@ (8007c54 <remote_gimbal_input+0xcc>)
 8007bb0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8007bb4:	ee07 3a90 	vmov	s15, r3
 8007bb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bbc:	ed9f 7a27 	vldr	s14, [pc, #156]	@ 8007c5c <remote_gimbal_input+0xd4>
 8007bc0:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8007bc4:	ee16 0a90 	vmov	r0, s13
 8007bc8:	f7f8 fcbe 	bl	8000548 <__aeabi_f2d>
				* REMOTE_PITCH_SPEED;
 8007bcc:	a31c      	add	r3, pc, #112	@ (adr r3, 8007c40 <remote_gimbal_input+0xb8>)
 8007bce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bd2:	f7f8 fd11 	bl	80005f8 <__aeabi_dmul>
 8007bd6:	4602      	mov	r2, r0
 8007bd8:	460b      	mov	r3, r1
		float pitch_remote = ((float) g_remote_cmd.right_y / 660) * PITCH_INVERT
 8007bda:	4610      	mov	r0, r2
 8007bdc:	4619      	mov	r1, r3
 8007bde:	f7f9 f803 	bl	8000be8 <__aeabi_d2f>
 8007be2:	4603      	mov	r3, r0
 8007be4:	607b      	str	r3, [r7, #4]
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 8007be6:	4b1b      	ldr	r3, [pc, #108]	@ (8007c54 <remote_gimbal_input+0xcc>)
 8007be8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8007bec:	ee07 3a90 	vmov	s15, r3
 8007bf0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8007bf4:	eddf 6a19 	vldr	s13, [pc, #100]	@ 8007c5c <remote_gimbal_input+0xd4>
 8007bf8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8007bfc:	eef1 7a67 	vneg.f32	s15, s15
 8007c00:	ee17 3a90 	vmov	r3, s15
 8007c04:	4618      	mov	r0, r3
 8007c06:	f7f8 fc9f 	bl	8000548 <__aeabi_f2d>
				* REMOTE_YAW_SPEED;
 8007c0a:	a30f      	add	r3, pc, #60	@ (adr r3, 8007c48 <remote_gimbal_input+0xc0>)
 8007c0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007c10:	f7f8 fcf2 	bl	80005f8 <__aeabi_dmul>
 8007c14:	4602      	mov	r2, r0
 8007c16:	460b      	mov	r3, r1
		float yaw_remote = ((float) g_remote_cmd.right_x / 660) * YAW_INVERT
 8007c18:	4610      	mov	r0, r2
 8007c1a:	4619      	mov	r1, r3
 8007c1c:	f7f8 ffe4 	bl	8000be8 <__aeabi_d2f>
 8007c20:	4603      	mov	r3, r0
 8007c22:	603b      	str	r3, [r7, #0]
		gimbal_turn_ang(pitch_remote, yaw_remote);
 8007c24:	edd7 0a00 	vldr	s1, [r7]
 8007c28:	ed97 0a01 	vldr	s0, [r7, #4]
 8007c2c:	f7ff fbf4 	bl	8007418 <gimbal_turn_ang>
	}
}
 8007c30:	bf00      	nop
 8007c32:	bf00      	nop
 8007c34:	3708      	adds	r7, #8
 8007c36:	46bd      	mov	sp, r7
 8007c38:	bd80      	pop	{r7, pc}
 8007c3a:	bf00      	nop
 8007c3c:	f3af 8000 	nop.w
 8007c40:	9999999a 	.word	0x9999999a
 8007c44:	bfb99999 	.word	0xbfb99999
 8007c48:	9999999a 	.word	0x9999999a
 8007c4c:	3fb99999 	.word	0x3fb99999
 8007c50:	20000031 	.word	0x20000031
 8007c54:	20000838 	.word	0x20000838
 8007c58:	200038c0 	.word	0x200038c0
 8007c5c:	44250000 	.word	0x44250000

08007c60 <remote_launcher_control_input>:


void remote_launcher_control_input() {
 8007c60:	b480      	push	{r7}
 8007c62:	af00      	add	r7, sp, #0
	if (g_safety_toggle || g_remote_cmd.right_switch == ge_RSW_SHUTDOWN
 8007c64:	4b1d      	ldr	r3, [pc, #116]	@ (8007cdc <remote_launcher_control_input+0x7c>)
 8007c66:	781b      	ldrb	r3, [r3, #0]
 8007c68:	2b00      	cmp	r3, #0
 8007c6a:	d109      	bne.n	8007c80 <remote_launcher_control_input+0x20>
 8007c6c:	4b1c      	ldr	r3, [pc, #112]	@ (8007ce0 <remote_launcher_control_input+0x80>)
 8007c6e:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007c72:	2b01      	cmp	r3, #1
 8007c74:	d004      	beq.n	8007c80 <remote_launcher_control_input+0x20>
			|| g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8007c76:	4b1a      	ldr	r3, [pc, #104]	@ (8007ce0 <remote_launcher_control_input+0x80>)
 8007c78:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007c7c:	2b01      	cmp	r3, #1
 8007c7e:	d016      	beq.n	8007cae <remote_launcher_control_input+0x4e>
		if (g_remote_cmd.left_switch != ge_LSW_UNSAFE) {
 8007c80:	4b17      	ldr	r3, [pc, #92]	@ (8007ce0 <remote_launcher_control_input+0x80>)
 8007c82:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007c86:	2b01      	cmp	r3, #1
 8007c88:	d002      	beq.n	8007c90 <remote_launcher_control_input+0x30>
			launcher_safety_toggle = 0;
 8007c8a:	4b16      	ldr	r3, [pc, #88]	@ (8007ce4 <remote_launcher_control_input+0x84>)
 8007c8c:	2200      	movs	r2, #0
 8007c8e:	701a      	strb	r2, [r3, #0]
		}
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 8007c90:	4b13      	ldr	r3, [pc, #76]	@ (8007ce0 <remote_launcher_control_input+0x80>)
 8007c92:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8007c96:	2b01      	cmp	r3, #1
 8007c98:	d102      	bne.n	8007ca0 <remote_launcher_control_input+0x40>
							launcher_ctrl_data.enabled = 0;
 8007c9a:	4b13      	ldr	r3, [pc, #76]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007c9c:	2200      	movs	r2, #0
 8007c9e:	715a      	strb	r2, [r3, #5]
				}
//		launcher_ctrl_data.enabled = 0;
		launcher_ctrl_data.firing = 0;
 8007ca0:	4b11      	ldr	r3, [pc, #68]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007ca2:	2200      	movs	r2, #0
 8007ca4:	805a      	strh	r2, [r3, #2]
		launcher_ctrl_data.projectile_speed = 0;
 8007ca6:	4b10      	ldr	r3, [pc, #64]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007ca8:	2200      	movs	r2, #0
 8007caa:	801a      	strh	r2, [r3, #0]
		} else {
			launcher_ctrl_data.firing = 0;
		}
	}

}
 8007cac:	e011      	b.n	8007cd2 <remote_launcher_control_input+0x72>
		launcher_ctrl_data.enabled = 1;
 8007cae:	4b0e      	ldr	r3, [pc, #56]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007cb0:	2201      	movs	r2, #1
 8007cb2:	715a      	strb	r2, [r3, #5]
		launcher_ctrl_data.projectile_speed = 1;
 8007cb4:	4b0c      	ldr	r3, [pc, #48]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007cb6:	2201      	movs	r2, #1
 8007cb8:	801a      	strh	r2, [r3, #0]
		if (g_remote_cmd.left_switch == ge_LSW_UNSAFE) {
 8007cba:	4b09      	ldr	r3, [pc, #36]	@ (8007ce0 <remote_launcher_control_input+0x80>)
 8007cbc:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8007cc0:	2b01      	cmp	r3, #1
 8007cc2:	d103      	bne.n	8007ccc <remote_launcher_control_input+0x6c>
			launcher_ctrl_data.firing = 1;
 8007cc4:	4b08      	ldr	r3, [pc, #32]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007cc6:	2201      	movs	r2, #1
 8007cc8:	805a      	strh	r2, [r3, #2]
}
 8007cca:	e002      	b.n	8007cd2 <remote_launcher_control_input+0x72>
			launcher_ctrl_data.firing = 0;
 8007ccc:	4b06      	ldr	r3, [pc, #24]	@ (8007ce8 <remote_launcher_control_input+0x88>)
 8007cce:	2200      	movs	r2, #0
 8007cd0:	805a      	strh	r2, [r3, #2]
}
 8007cd2:	bf00      	nop
 8007cd4:	46bd      	mov	sp, r7
 8007cd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cda:	4770      	bx	lr
 8007cdc:	20000031 	.word	0x20000031
 8007ce0:	20000838 	.word	0x20000838
 8007ce4:	20000032 	.word	0x20000032
 8007ce8:	200038b8 	.word	0x200038b8

08007cec <aimbot_pid_init>:
		sbc_new_data = 0;
		control_reset();
	}
}

void aimbot_pid_init() {
 8007cec:	b480      	push	{r7}
 8007cee:	af00      	add	r7, sp, #0
	aimbot_offset.y_offset = 0;
 8007cf0:	4b1a      	ldr	r3, [pc, #104]	@ (8007d5c <aimbot_pid_init+0x70>)
 8007cf2:	f04f 0200 	mov.w	r2, #0
 8007cf6:	605a      	str	r2, [r3, #4]
	aimbot_offset.x_offset = 0;
 8007cf8:	4b18      	ldr	r3, [pc, #96]	@ (8007d5c <aimbot_pid_init+0x70>)
 8007cfa:	f04f 0200 	mov.w	r2, #0
 8007cfe:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.kp = AIMBOT_X_KP;
 8007d00:	4b17      	ldr	r3, [pc, #92]	@ (8007d60 <aimbot_pid_init+0x74>)
 8007d02:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007d06:	601a      	str	r2, [r3, #0]
	aimbot_x_pid.ki = AIMBOT_X_KI;
 8007d08:	4b15      	ldr	r3, [pc, #84]	@ (8007d60 <aimbot_pid_init+0x74>)
 8007d0a:	f04f 0200 	mov.w	r2, #0
 8007d0e:	605a      	str	r2, [r3, #4]
	aimbot_x_pid.kd = AIMBOT_X_KD;
 8007d10:	4b13      	ldr	r3, [pc, #76]	@ (8007d60 <aimbot_pid_init+0x74>)
 8007d12:	f04f 0200 	mov.w	r2, #0
 8007d16:	609a      	str	r2, [r3, #8]
	aimbot_x_pid.max_out = 1.5;
 8007d18:	4b11      	ldr	r3, [pc, #68]	@ (8007d60 <aimbot_pid_init+0x74>)
 8007d1a:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8007d1e:	61da      	str	r2, [r3, #28]
	aimbot_x_pid.int_max = AIMBOT_KI_MAX;
 8007d20:	4b0f      	ldr	r3, [pc, #60]	@ (8007d60 <aimbot_pid_init+0x74>)
 8007d22:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007d26:	619a      	str	r2, [r3, #24]

	aimbot_y_pid.kp = AIMBOT_Y_KP;
 8007d28:	4b0e      	ldr	r3, [pc, #56]	@ (8007d64 <aimbot_pid_init+0x78>)
 8007d2a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007d2e:	601a      	str	r2, [r3, #0]
	aimbot_y_pid.ki = AIMBOT_Y_KI;
 8007d30:	4b0c      	ldr	r3, [pc, #48]	@ (8007d64 <aimbot_pid_init+0x78>)
 8007d32:	f04f 0200 	mov.w	r2, #0
 8007d36:	605a      	str	r2, [r3, #4]
	aimbot_y_pid.kd = AIMBOT_Y_KD;
 8007d38:	4b0a      	ldr	r3, [pc, #40]	@ (8007d64 <aimbot_pid_init+0x78>)
 8007d3a:	f04f 0200 	mov.w	r2, #0
 8007d3e:	609a      	str	r2, [r3, #8]
	aimbot_y_pid.max_out = 1.5;
 8007d40:	4b08      	ldr	r3, [pc, #32]	@ (8007d64 <aimbot_pid_init+0x78>)
 8007d42:	f04f 527f 	mov.w	r2, #1069547520	@ 0x3fc00000
 8007d46:	61da      	str	r2, [r3, #28]
	aimbot_y_pid.int_max = AIMBOT_KI_MAX;
 8007d48:	4b06      	ldr	r3, [pc, #24]	@ (8007d64 <aimbot_pid_init+0x78>)
 8007d4a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 8007d4e:	619a      	str	r2, [r3, #24]
}
 8007d50:	bf00      	nop
 8007d52:	46bd      	mov	sp, r7
 8007d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d58:	4770      	bx	lr
 8007d5a:	bf00      	nop
 8007d5c:	2000398c 	.word	0x2000398c
 8007d60:	2000395c 	.word	0x2000395c
 8007d64:	2000392c 	.word	0x2000392c

08007d68 <hud_task>:
ref_inter_robot_data_t graphic_header;
graphic_data_struct_t graphic_data;
ref_frame_header_t send_header;
uint8_t char_buffer[30];

void hud_task(void *argument) {
 8007d68:	b580      	push	{r7, lr}
 8007d6a:	b084      	sub	sp, #16
 8007d6c:	af00      	add	r7, sp, #0
 8007d6e:	6078      	str	r0, [r7, #4]

	enum drawings {
		spinspin, gearing, robot_state, motor_fault, refresh

	};
	while (ref_robot_data.robot_id == 0) {
 8007d70:	e002      	b.n	8007d78 <hud_task+0x10>
		vTaskDelay(10);
 8007d72:	200a      	movs	r0, #10
 8007d74:	f013 f8e6 	bl	801af44 <vTaskDelay>
	while (ref_robot_data.robot_id == 0) {
 8007d78:	4b69      	ldr	r3, [pc, #420]	@ (8007f20 <hud_task+0x1b8>)
 8007d7a:	781b      	ldrb	r3, [r3, #0]
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d0f8      	beq.n	8007d72 <hud_task+0xa>
	}
	uint32_t refresh_timer = HAL_GetTick();
 8007d80:	f005 ff1a 	bl	800dbb8 <HAL_GetTick>
 8007d84:	60f8      	str	r0, [r7, #12]

	uint8_t draw_state = spinspin;
 8007d86:	2300      	movs	r3, #0
 8007d88:	72fb      	strb	r3, [r7, #11]
	//draw all images
	vTaskDelay(1000);
 8007d8a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8007d8e:	f013 f8d9 	bl	801af44 <vTaskDelay>
	clear_hud();
 8007d92:	f000 fb29 	bl	80083e8 <clear_hud>
	vTaskDelay(150);
 8007d96:	2096      	movs	r0, #150	@ 0x96
 8007d98:	f013 f8d4 	bl	801af44 <vTaskDelay>
	draw_spinspin(0);
 8007d9c:	2000      	movs	r0, #0
 8007d9e:	f000 f8c3 	bl	8007f28 <draw_spinspin>
	vTaskDelay(150);
 8007da2:	2096      	movs	r0, #150	@ 0x96
 8007da4:	f013 f8ce 	bl	801af44 <vTaskDelay>
	draw_gearing(0);
 8007da8:	2000      	movs	r0, #0
 8007daa:	f000 f9f5 	bl	8008198 <draw_gearing>
	vTaskDelay(150);
 8007dae:	2096      	movs	r0, #150	@ 0x96
 8007db0:	f013 f8c8 	bl	801af44 <vTaskDelay>
	while (1) {
		if (HAL_GetTick() - refresh_timer > 5000){
 8007db4:	f005 ff00 	bl	800dbb8 <HAL_GetTick>
 8007db8:	4602      	mov	r2, r0
 8007dba:	68fb      	ldr	r3, [r7, #12]
 8007dbc:	1ad3      	subs	r3, r2, r3
 8007dbe:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007dc2:	4293      	cmp	r3, r2
 8007dc4:	d904      	bls.n	8007dd0 <hud_task+0x68>
			draw_state = refresh;
 8007dc6:	2304      	movs	r3, #4
 8007dc8:	72fb      	strb	r3, [r7, #11]
			refresh_timer = HAL_GetTick();
 8007dca:	f005 fef5 	bl	800dbb8 <HAL_GetTick>
 8007dce:	60f8      	str	r0, [r7, #12]
		}
		switch (ref_robot_data.robot_id) {
 8007dd0:	4b53      	ldr	r3, [pc, #332]	@ (8007f20 <hud_task+0x1b8>)
 8007dd2:	781b      	ldrb	r3, [r3, #0]
 8007dd4:	2b06      	cmp	r3, #6
 8007dd6:	dc27      	bgt.n	8007e28 <hud_task+0xc0>
 8007dd8:	2b00      	cmp	r3, #0
 8007dda:	dc13      	bgt.n	8007e04 <hud_task+0x9c>
 8007ddc:	e065      	b.n	8007eaa <hud_task+0x142>
 8007dde:	3b65      	subs	r3, #101	@ 0x65
 8007de0:	2b05      	cmp	r3, #5
 8007de2:	d862      	bhi.n	8007eaa <hud_task+0x142>
 8007de4:	a201      	add	r2, pc, #4	@ (adr r2, 8007dec <hud_task+0x84>)
 8007de6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007dea:	bf00      	nop
 8007dec:	08007e6f 	.word	0x08007e6f
 8007df0:	08007e79 	.word	0x08007e79
 8007df4:	08007e83 	.word	0x08007e83
 8007df8:	08007e8d 	.word	0x08007e8d
 8007dfc:	08007e97 	.word	0x08007e97
 8007e00:	08007ea1 	.word	0x08007ea1
 8007e04:	3b01      	subs	r3, #1
 8007e06:	2b05      	cmp	r3, #5
 8007e08:	d84f      	bhi.n	8007eaa <hud_task+0x142>
 8007e0a:	a201      	add	r2, pc, #4	@ (adr r2, 8007e10 <hud_task+0xa8>)
 8007e0c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007e10:	08007e33 	.word	0x08007e33
 8007e14:	08007e3d 	.word	0x08007e3d
 8007e18:	08007e47 	.word	0x08007e47
 8007e1c:	08007e51 	.word	0x08007e51
 8007e20:	08007e5b 	.word	0x08007e5b
 8007e24:	08007e65 	.word	0x08007e65
 8007e28:	2b6a      	cmp	r3, #106	@ 0x6a
 8007e2a:	dc3e      	bgt.n	8007eaa <hud_task+0x142>
 8007e2c:	2b65      	cmp	r3, #101	@ 0x65
 8007e2e:	dad6      	bge.n	8007dde <hud_task+0x76>
 8007e30:	e03b      	b.n	8007eaa <hud_task+0x142>
		case 1:
			g_client_id = 0x101;
 8007e32:	4b3c      	ldr	r3, [pc, #240]	@ (8007f24 <hud_task+0x1bc>)
 8007e34:	f240 1201 	movw	r2, #257	@ 0x101
 8007e38:	801a      	strh	r2, [r3, #0]
			break;
 8007e3a:	e03a      	b.n	8007eb2 <hud_task+0x14a>
		case 2:
			g_client_id = 0x102;
 8007e3c:	4b39      	ldr	r3, [pc, #228]	@ (8007f24 <hud_task+0x1bc>)
 8007e3e:	f44f 7281 	mov.w	r2, #258	@ 0x102
 8007e42:	801a      	strh	r2, [r3, #0]
			break;
 8007e44:	e035      	b.n	8007eb2 <hud_task+0x14a>
		case 3:
			g_client_id = 0x103;
 8007e46:	4b37      	ldr	r3, [pc, #220]	@ (8007f24 <hud_task+0x1bc>)
 8007e48:	f240 1203 	movw	r2, #259	@ 0x103
 8007e4c:	801a      	strh	r2, [r3, #0]
			break;
 8007e4e:	e030      	b.n	8007eb2 <hud_task+0x14a>
		case 4:
			g_client_id = 0x104;
 8007e50:	4b34      	ldr	r3, [pc, #208]	@ (8007f24 <hud_task+0x1bc>)
 8007e52:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8007e56:	801a      	strh	r2, [r3, #0]
			break;
 8007e58:	e02b      	b.n	8007eb2 <hud_task+0x14a>
		case 5:
			g_client_id = 0x105;
 8007e5a:	4b32      	ldr	r3, [pc, #200]	@ (8007f24 <hud_task+0x1bc>)
 8007e5c:	f240 1205 	movw	r2, #261	@ 0x105
 8007e60:	801a      	strh	r2, [r3, #0]
			break;
 8007e62:	e026      	b.n	8007eb2 <hud_task+0x14a>
		case 6:
			g_client_id = 0x106;
 8007e64:	4b2f      	ldr	r3, [pc, #188]	@ (8007f24 <hud_task+0x1bc>)
 8007e66:	f44f 7283 	mov.w	r2, #262	@ 0x106
 8007e6a:	801a      	strh	r2, [r3, #0]
			break;
 8007e6c:	e021      	b.n	8007eb2 <hud_task+0x14a>

		case 101:
			g_client_id = 0x165;
 8007e6e:	4b2d      	ldr	r3, [pc, #180]	@ (8007f24 <hud_task+0x1bc>)
 8007e70:	f240 1265 	movw	r2, #357	@ 0x165
 8007e74:	801a      	strh	r2, [r3, #0]
			break;
 8007e76:	e01c      	b.n	8007eb2 <hud_task+0x14a>
		case 102:
			g_client_id = 0x166;
 8007e78:	4b2a      	ldr	r3, [pc, #168]	@ (8007f24 <hud_task+0x1bc>)
 8007e7a:	f44f 72b3 	mov.w	r2, #358	@ 0x166
 8007e7e:	801a      	strh	r2, [r3, #0]
			break;
 8007e80:	e017      	b.n	8007eb2 <hud_task+0x14a>
		case 103:
			g_client_id = 0x167;
 8007e82:	4b28      	ldr	r3, [pc, #160]	@ (8007f24 <hud_task+0x1bc>)
 8007e84:	f240 1267 	movw	r2, #359	@ 0x167
 8007e88:	801a      	strh	r2, [r3, #0]
			break;
 8007e8a:	e012      	b.n	8007eb2 <hud_task+0x14a>
		case 104:
			g_client_id = 0x168;
 8007e8c:	4b25      	ldr	r3, [pc, #148]	@ (8007f24 <hud_task+0x1bc>)
 8007e8e:	f44f 72b4 	mov.w	r2, #360	@ 0x168
 8007e92:	801a      	strh	r2, [r3, #0]
			break;
 8007e94:	e00d      	b.n	8007eb2 <hud_task+0x14a>
		case 105:
			g_client_id = 0x169;
 8007e96:	4b23      	ldr	r3, [pc, #140]	@ (8007f24 <hud_task+0x1bc>)
 8007e98:	f240 1269 	movw	r2, #361	@ 0x169
 8007e9c:	801a      	strh	r2, [r3, #0]
			break;
 8007e9e:	e008      	b.n	8007eb2 <hud_task+0x14a>
		case 106:
			g_client_id = 0x16A;
 8007ea0:	4b20      	ldr	r3, [pc, #128]	@ (8007f24 <hud_task+0x1bc>)
 8007ea2:	f44f 72b5 	mov.w	r2, #362	@ 0x16a
 8007ea6:	801a      	strh	r2, [r3, #0]
			break;
 8007ea8:	e003      	b.n	8007eb2 <hud_task+0x14a>
		default:
			g_client_id = 0;
 8007eaa:	4b1e      	ldr	r3, [pc, #120]	@ (8007f24 <hud_task+0x1bc>)
 8007eac:	2200      	movs	r2, #0
 8007eae:	801a      	strh	r2, [r3, #0]
			break;
 8007eb0:	bf00      	nop

		}



		switch (draw_state) {
 8007eb2:	7afb      	ldrb	r3, [r7, #11]
 8007eb4:	2b04      	cmp	r3, #4
 8007eb6:	d82d      	bhi.n	8007f14 <hud_task+0x1ac>
 8007eb8:	a201      	add	r2, pc, #4	@ (adr r2, 8007ec0 <hud_task+0x158>)
 8007eba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007ebe:	bf00      	nop
 8007ec0:	08007ed5 	.word	0x08007ed5
 8007ec4:	08007ee1 	.word	0x08007ee1
 8007ec8:	08007f15 	.word	0x08007f15
 8007ecc:	08007f15 	.word	0x08007f15
 8007ed0:	08007eed 	.word	0x08007eed
		case spinspin:
			draw_spinspin(1);
 8007ed4:	2001      	movs	r0, #1
 8007ed6:	f000 f827 	bl	8007f28 <draw_spinspin>
			draw_state = gearing;
 8007eda:	2301      	movs	r3, #1
 8007edc:	72fb      	strb	r3, [r7, #11]
			break;
 8007ede:	e01a      	b.n	8007f16 <hud_task+0x1ae>
		case gearing:
			draw_gearing(1);
 8007ee0:	2001      	movs	r0, #1
 8007ee2:	f000 f959 	bl	8008198 <draw_gearing>
			draw_state = spinspin;
 8007ee6:	2300      	movs	r3, #0
 8007ee8:	72fb      	strb	r3, [r7, #11]
			break;
 8007eea:	e014      	b.n	8007f16 <hud_task+0x1ae>
		case robot_state:
			break;
		case motor_fault:
			break;
		case refresh:
			clear_hud();
 8007eec:	f000 fa7c 	bl	80083e8 <clear_hud>
			vTaskDelay(150);
 8007ef0:	2096      	movs	r0, #150	@ 0x96
 8007ef2:	f013 f827 	bl	801af44 <vTaskDelay>
			draw_spinspin(0);
 8007ef6:	2000      	movs	r0, #0
 8007ef8:	f000 f816 	bl	8007f28 <draw_spinspin>
			vTaskDelay(150);
 8007efc:	2096      	movs	r0, #150	@ 0x96
 8007efe:	f013 f821 	bl	801af44 <vTaskDelay>
			draw_gearing(0);
 8007f02:	2000      	movs	r0, #0
 8007f04:	f000 f948 	bl	8008198 <draw_gearing>
			vTaskDelay(150);
 8007f08:	2096      	movs	r0, #150	@ 0x96
 8007f0a:	f013 f81b 	bl	801af44 <vTaskDelay>
			draw_state = spinspin;
 8007f0e:	2300      	movs	r3, #0
 8007f10:	72fb      	strb	r3, [r7, #11]
			break;
 8007f12:	e000      	b.n	8007f16 <hud_task+0x1ae>
		default:
			break;
 8007f14:	bf00      	nop
		}
		vTaskDelay(150);
 8007f16:	2096      	movs	r0, #150	@ 0x96
 8007f18:	f013 f814 	bl	801af44 <vTaskDelay>
		if (HAL_GetTick() - refresh_timer > 5000){
 8007f1c:	e74a      	b.n	8007db4 <hud_task+0x4c>
 8007f1e:	bf00      	nop
 8007f20:	20003c24 	.word	0x20003c24
 8007f24:	20003994 	.word	0x20003994

08007f28 <draw_spinspin>:
//	else if (&buffer_size > HUD_BUFFER_SIZE){
//		return num_obj;
//	}
}

void draw_spinspin(uint8_t modify) {
 8007f28:	b590      	push	{r4, r7, lr}
 8007f2a:	b085      	sub	sp, #20
 8007f2c:	af00      	add	r7, sp, #0
 8007f2e:	4603      	mov	r3, r0
 8007f30:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 8007f32:	2300      	movs	r3, #0
 8007f34:	60bb      	str	r3, [r7, #8]
	uint8_t char_len = 0;
 8007f36:	2300      	movs	r3, #0
 8007f38:	73fb      	strb	r3, [r7, #15]
	curr_pos = 0;
 8007f3a:	2300      	movs	r3, #0
 8007f3c:	60bb      	str	r3, [r7, #8]
	if (g_spinspin_mode == 0) {
 8007f3e:	4b8a      	ldr	r3, [pc, #552]	@ (8008168 <draw_spinspin+0x240>)
 8007f40:	681b      	ldr	r3, [r3, #0]
 8007f42:	2b00      	cmp	r3, #0
 8007f44:	d10d      	bne.n	8007f62 <draw_spinspin+0x3a>
		graphic_data.color = 4; //orange
 8007f46:	4a89      	ldr	r2, [pc, #548]	@ (800816c <draw_spinspin+0x244>)
 8007f48:	7913      	ldrb	r3, [r2, #4]
 8007f4a:	2104      	movs	r1, #4
 8007f4c:	f361 0385 	bfi	r3, r1, #2, #4
 8007f50:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN OFF");
 8007f52:	4a87      	ldr	r2, [pc, #540]	@ (8008170 <draw_spinspin+0x248>)
 8007f54:	211e      	movs	r1, #30
 8007f56:	4887      	ldr	r0, [pc, #540]	@ (8008174 <draw_spinspin+0x24c>)
 8007f58:	f015 fcc4 	bl	801d8e4 <snprintf>
 8007f5c:	4603      	mov	r3, r0
 8007f5e:	73fb      	strb	r3, [r7, #15]
 8007f60:	e00c      	b.n	8007f7c <draw_spinspin+0x54>
	} else {
		graphic_data.color = 3; //orange
 8007f62:	4a82      	ldr	r2, [pc, #520]	@ (800816c <draw_spinspin+0x244>)
 8007f64:	7913      	ldrb	r3, [r2, #4]
 8007f66:	2103      	movs	r1, #3
 8007f68:	f361 0385 	bfi	r3, r1, #2, #4
 8007f6c:	7113      	strb	r3, [r2, #4]
		char_len = snprintf((char*) char_buffer, 30, "SPIN ON");
 8007f6e:	4a82      	ldr	r2, [pc, #520]	@ (8008178 <draw_spinspin+0x250>)
 8007f70:	211e      	movs	r1, #30
 8007f72:	4880      	ldr	r0, [pc, #512]	@ (8008174 <draw_spinspin+0x24c>)
 8007f74:	f015 fcb6 	bl	801d8e4 <snprintf>
 8007f78:	4603      	mov	r3, r0
 8007f7a:	73fb      	strb	r3, [r7, #15]
	}
	send_header.start_frame = 0xA5;
 8007f7c:	4b7f      	ldr	r3, [pc, #508]	@ (800817c <draw_spinspin+0x254>)
 8007f7e:	22a5      	movs	r2, #165	@ 0xa5
 8007f80:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 8007f82:	4b7e      	ldr	r3, [pc, #504]	@ (800817c <draw_spinspin+0x254>)
 8007f84:	2200      	movs	r2, #0
 8007f86:	f042 0201 	orr.w	r2, r2, #1
 8007f8a:	715a      	strb	r2, [r3, #5]
 8007f8c:	2200      	movs	r2, #0
 8007f8e:	f042 0203 	orr.w	r2, r2, #3
 8007f92:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 8007f94:	4b7a      	ldr	r3, [pc, #488]	@ (8008180 <draw_spinspin+0x258>)
 8007f96:	781b      	ldrb	r3, [r3, #0]
 8007f98:	1c5a      	adds	r2, r3, #1
 8007f9a:	b2d1      	uxtb	r1, r2
 8007f9c:	4a78      	ldr	r2, [pc, #480]	@ (8008180 <draw_spinspin+0x258>)
 8007f9e:	7011      	strb	r1, [r2, #0]
 8007fa0:	4a76      	ldr	r2, [pc, #472]	@ (800817c <draw_spinspin+0x254>)
 8007fa2:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 8007fa4:	7bfb      	ldrb	r3, [r7, #15]
 8007fa6:	b29b      	uxth	r3, r3
 8007fa8:	3315      	adds	r3, #21
 8007faa:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 8007fac:	4b73      	ldr	r3, [pc, #460]	@ (800817c <draw_spinspin+0x254>)
 8007fae:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8007fb2:	4b73      	ldr	r3, [pc, #460]	@ (8008180 <draw_spinspin+0x258>)
 8007fb4:	781b      	ldrb	r3, [r3, #0]
 8007fb6:	1c5a      	adds	r2, r3, #1
 8007fb8:	b2d1      	uxtb	r1, r2
 8007fba:	4a71      	ldr	r2, [pc, #452]	@ (8008180 <draw_spinspin+0x258>)
 8007fbc:	7011      	strb	r1, [r2, #0]
 8007fbe:	4a6f      	ldr	r2, [pc, #444]	@ (800817c <draw_spinspin+0x254>)
 8007fc0:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8007fc2:	68bb      	ldr	r3, [r7, #8]
 8007fc4:	4a6f      	ldr	r2, [pc, #444]	@ (8008184 <draw_spinspin+0x25c>)
 8007fc6:	4413      	add	r3, r2
 8007fc8:	4a6c      	ldr	r2, [pc, #432]	@ (800817c <draw_spinspin+0x254>)
 8007fca:	6810      	ldr	r0, [r2, #0]
 8007fcc:	6018      	str	r0, [r3, #0]
 8007fce:	8891      	ldrh	r1, [r2, #4]
 8007fd0:	7992      	ldrb	r2, [r2, #6]
 8007fd2:	8099      	strh	r1, [r3, #4]
 8007fd4:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8007fd6:	68bb      	ldr	r3, [r7, #8]
 8007fd8:	3307      	adds	r3, #7
 8007fda:	60bb      	str	r3, [r7, #8]
	append_CRC8_check_sum(tx_buffer, 5);
 8007fdc:	2105      	movs	r1, #5
 8007fde:	4869      	ldr	r0, [pc, #420]	@ (8008184 <draw_spinspin+0x25c>)
 8007fe0:	f7f9 f813 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8007fe4:	4b68      	ldr	r3, [pc, #416]	@ (8008188 <draw_spinspin+0x260>)
 8007fe6:	f44f 7288 	mov.w	r2, #272	@ 0x110
 8007fea:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 8007fec:	4b67      	ldr	r3, [pc, #412]	@ (800818c <draw_spinspin+0x264>)
 8007fee:	781b      	ldrb	r3, [r3, #0]
 8007ff0:	461a      	mov	r2, r3
 8007ff2:	4b65      	ldr	r3, [pc, #404]	@ (8008188 <draw_spinspin+0x260>)
 8007ff4:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 8007ff6:	4b66      	ldr	r3, [pc, #408]	@ (8008190 <draw_spinspin+0x268>)
 8007ff8:	881a      	ldrh	r2, [r3, #0]
 8007ffa:	4b63      	ldr	r3, [pc, #396]	@ (8008188 <draw_spinspin+0x260>)
 8007ffc:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 8007ffe:	68bb      	ldr	r3, [r7, #8]
 8008000:	4a60      	ldr	r2, [pc, #384]	@ (8008184 <draw_spinspin+0x25c>)
 8008002:	4413      	add	r3, r2
 8008004:	4a60      	ldr	r2, [pc, #384]	@ (8008188 <draw_spinspin+0x260>)
 8008006:	6810      	ldr	r0, [r2, #0]
 8008008:	6018      	str	r0, [r3, #0]
 800800a:	8892      	ldrh	r2, [r2, #4]
 800800c:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 800800e:	68bb      	ldr	r3, [r7, #8]
 8008010:	3306      	adds	r3, #6
 8008012:	60bb      	str	r3, [r7, #8]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 8008014:	4b55      	ldr	r3, [pc, #340]	@ (800816c <draw_spinspin+0x244>)
 8008016:	2200      	movs	r2, #0
 8008018:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 800801a:	4b54      	ldr	r3, [pc, #336]	@ (800816c <draw_spinspin+0x244>)
 800801c:	2200      	movs	r2, #0
 800801e:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 1;
 8008020:	4b52      	ldr	r3, [pc, #328]	@ (800816c <draw_spinspin+0x244>)
 8008022:	2201      	movs	r2, #1
 8008024:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 8008026:	4b51      	ldr	r3, [pc, #324]	@ (800816c <draw_spinspin+0x244>)
 8008028:	78da      	ldrb	r2, [r3, #3]
 800802a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800802e:	70da      	strb	r2, [r3, #3]
 8008030:	791a      	ldrb	r2, [r3, #4]
 8008032:	f022 0203 	bic.w	r2, r2, #3
 8008036:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8008038:	79fb      	ldrb	r3, [r7, #7]
 800803a:	2b01      	cmp	r3, #1
 800803c:	d106      	bne.n	800804c <draw_spinspin+0x124>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 800803e:	4a4b      	ldr	r2, [pc, #300]	@ (800816c <draw_spinspin+0x244>)
 8008040:	78d3      	ldrb	r3, [r2, #3]
 8008042:	2102      	movs	r1, #2
 8008044:	f361 0302 	bfi	r3, r1, #0, #3
 8008048:	70d3      	strb	r3, [r2, #3]
 800804a:	e005      	b.n	8008058 <draw_spinspin+0x130>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 800804c:	4a47      	ldr	r2, [pc, #284]	@ (800816c <draw_spinspin+0x244>)
 800804e:	78d3      	ldrb	r3, [r2, #3]
 8008050:	2101      	movs	r1, #1
 8008052:	f361 0302 	bfi	r3, r1, #0, #3
 8008056:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 8008058:	4a44      	ldr	r2, [pc, #272]	@ (800816c <draw_spinspin+0x244>)
 800805a:	78d3      	ldrb	r3, [r2, #3]
 800805c:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8008060:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 8008062:	4b42      	ldr	r3, [pc, #264]	@ (800816c <draw_spinspin+0x244>)
 8008064:	791a      	ldrb	r2, [r3, #4]
 8008066:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800806a:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 800806e:	711a      	strb	r2, [r3, #4]
 8008070:	795a      	ldrb	r2, [r3, #5]
 8008072:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 8008076:	f042 0207 	orr.w	r2, r2, #7
 800807a:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 800807c:	7bfb      	ldrb	r3, [r7, #15]
 800807e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008082:	b29a      	uxth	r2, r3
 8008084:	4b39      	ldr	r3, [pc, #228]	@ (800816c <draw_spinspin+0x244>)
 8008086:	f002 0101 	and.w	r1, r2, #1
 800808a:	01cc      	lsls	r4, r1, #7
 800808c:	7959      	ldrb	r1, [r3, #5]
 800808e:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 8008092:	4608      	mov	r0, r1
 8008094:	4621      	mov	r1, r4
 8008096:	4301      	orrs	r1, r0
 8008098:	7159      	strb	r1, [r3, #5]
 800809a:	0852      	lsrs	r2, r2, #1
 800809c:	b292      	uxth	r2, r2
 800809e:	b2d2      	uxtb	r2, r2
 80080a0:	2100      	movs	r1, #0
 80080a2:	430a      	orrs	r2, r1
 80080a4:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 80080a6:	4b31      	ldr	r3, [pc, #196]	@ (800816c <draw_spinspin+0x244>)
 80080a8:	2200      	movs	r2, #0
 80080aa:	f042 0207 	orr.w	r2, r2, #7
 80080ae:	71da      	strb	r2, [r3, #7]
 80080b0:	7a1a      	ldrb	r2, [r3, #8]
 80080b2:	f022 0203 	bic.w	r2, r2, #3
 80080b6:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 80080b8:	4b2c      	ldr	r3, [pc, #176]	@ (800816c <draw_spinspin+0x244>)
 80080ba:	78da      	ldrb	r2, [r3, #3]
 80080bc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80080c0:	70da      	strb	r2, [r3, #3]
 80080c2:	791a      	ldrb	r2, [r3, #4]
 80080c4:	f022 0203 	bic.w	r2, r2, #3
 80080c8:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 80080ca:	4b28      	ldr	r3, [pc, #160]	@ (800816c <draw_spinspin+0x244>)
 80080cc:	7a1a      	ldrb	r2, [r3, #8]
 80080ce:	f002 0203 	and.w	r2, r2, #3
 80080d2:	f062 0237 	orn	r2, r2, #55	@ 0x37
 80080d6:	721a      	strb	r2, [r3, #8]
 80080d8:	7a5a      	ldrb	r2, [r3, #9]
 80080da:	f022 021f 	bic.w	r2, r2, #31
 80080de:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 600;
 80080e0:	4b22      	ldr	r3, [pc, #136]	@ (800816c <draw_spinspin+0x244>)
 80080e2:	7a5a      	ldrb	r2, [r3, #9]
 80080e4:	f002 021f 	and.w	r2, r2, #31
 80080e8:	725a      	strb	r2, [r3, #9]
 80080ea:	2200      	movs	r2, #0
 80080ec:	f042 024b 	orr.w	r2, r2, #75	@ 0x4b
 80080f0:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 80080f2:	68bb      	ldr	r3, [r7, #8]
 80080f4:	4a23      	ldr	r2, [pc, #140]	@ (8008184 <draw_spinspin+0x25c>)
 80080f6:	4413      	add	r3, r2
 80080f8:	4a1c      	ldr	r2, [pc, #112]	@ (800816c <draw_spinspin+0x244>)
 80080fa:	461c      	mov	r4, r3
 80080fc:	4613      	mov	r3, r2
 80080fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008100:	6020      	str	r0, [r4, #0]
 8008102:	6061      	str	r1, [r4, #4]
 8008104:	60a2      	str	r2, [r4, #8]
 8008106:	881a      	ldrh	r2, [r3, #0]
 8008108:	789b      	ldrb	r3, [r3, #2]
 800810a:	81a2      	strh	r2, [r4, #12]
 800810c:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 800810e:	68bb      	ldr	r3, [r7, #8]
 8008110:	330f      	adds	r3, #15
 8008112:	60bb      	str	r3, [r7, #8]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8008114:	68bb      	ldr	r3, [r7, #8]
 8008116:	4a1b      	ldr	r2, [pc, #108]	@ (8008184 <draw_spinspin+0x25c>)
 8008118:	4413      	add	r3, r2
 800811a:	7bfa      	ldrb	r2, [r7, #15]
 800811c:	4915      	ldr	r1, [pc, #84]	@ (8008174 <draw_spinspin+0x24c>)
 800811e:	4618      	mov	r0, r3
 8008120:	f015 fd00 	bl	801db24 <memcpy>
	curr_pos += char_len;
 8008124:	7bfb      	ldrb	r3, [r7, #15]
 8008126:	68ba      	ldr	r2, [r7, #8]
 8008128:	4413      	add	r3, r2
 800812a:	60bb      	str	r3, [r7, #8]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 800812c:	68bb      	ldr	r3, [r7, #8]
 800812e:	3302      	adds	r3, #2
 8008130:	4619      	mov	r1, r3
 8008132:	4814      	ldr	r0, [pc, #80]	@ (8008184 <draw_spinspin+0x25c>)
 8008134:	f7f8 ffec 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8008138:	e002      	b.n	8008140 <draw_spinspin+0x218>
		vTaskDelay(1);
 800813a:	2001      	movs	r0, #1
 800813c:	f012 ff02 	bl	801af44 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8008140:	4b14      	ldr	r3, [pc, #80]	@ (8008194 <draw_spinspin+0x26c>)
 8008142:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008146:	b2db      	uxtb	r3, r3
 8008148:	2b20      	cmp	r3, #32
 800814a:	d1f6      	bne.n	800813a <draw_spinspin+0x212>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 800814c:	68bb      	ldr	r3, [r7, #8]
 800814e:	b29b      	uxth	r3, r3
 8008150:	3302      	adds	r3, #2
 8008152:	b29b      	uxth	r3, r3
 8008154:	461a      	mov	r2, r3
 8008156:	490b      	ldr	r1, [pc, #44]	@ (8008184 <draw_spinspin+0x25c>)
 8008158:	480e      	ldr	r0, [pc, #56]	@ (8008194 <draw_spinspin+0x26c>)
 800815a:	f00c ff8b 	bl	8015074 <HAL_UART_Transmit_DMA>
}
 800815e:	bf00      	nop
 8008160:	3714      	adds	r7, #20
 8008162:	46bd      	mov	sp, r7
 8008164:	bd90      	pop	{r4, r7, pc}
 8008166:	bf00      	nop
 8008168:	20003914 	.word	0x20003914
 800816c:	20003aa0 	.word	0x20003aa0
 8008170:	0802467c 	.word	0x0802467c
 8008174:	20003ab8 	.word	0x20003ab8
 8008178:	08024688 	.word	0x08024688
 800817c:	20003ab0 	.word	0x20003ab0
 8008180:	20003c88 	.word	0x20003c88
 8008184:	20003998 	.word	0x20003998
 8008188:	20003a98 	.word	0x20003a98
 800818c:	20003c24 	.word	0x20003c24
 8008190:	20003994 	.word	0x20003994
 8008194:	20001ca0 	.word	0x20001ca0

08008198 <draw_gearing>:

void draw_gearing(uint8_t modify) {
 8008198:	b590      	push	{r4, r7, lr}
 800819a:	b085      	sub	sp, #20
 800819c:	af00      	add	r7, sp, #0
 800819e:	4603      	mov	r3, r0
 80081a0:	71fb      	strb	r3, [r7, #7]

	uint32_t curr_pos = 0;
 80081a2:	2300      	movs	r3, #0
 80081a4:	60fb      	str	r3, [r7, #12]
	uint8_t char_len = 0;
 80081a6:	2300      	movs	r3, #0
 80081a8:	72fb      	strb	r3, [r7, #11]
	curr_pos = 0;
 80081aa:	2300      	movs	r3, #0
 80081ac:	60fb      	str	r3, [r7, #12]
	graphic_data.color = 6; //CYAN
 80081ae:	4a83      	ldr	r2, [pc, #524]	@ (80083bc <draw_gearing+0x224>)
 80081b0:	7913      	ldrb	r3, [r2, #4]
 80081b2:	2106      	movs	r1, #6
 80081b4:	f361 0385 	bfi	r3, r1, #2, #4
 80081b8:	7113      	strb	r3, [r2, #4]
	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);
 80081ba:	4b81      	ldr	r3, [pc, #516]	@ (80083c0 <draw_gearing+0x228>)
 80081bc:	781b      	ldrb	r3, [r3, #0]
 80081be:	4a81      	ldr	r2, [pc, #516]	@ (80083c4 <draw_gearing+0x22c>)
 80081c0:	211e      	movs	r1, #30
 80081c2:	4881      	ldr	r0, [pc, #516]	@ (80083c8 <draw_gearing+0x230>)
 80081c4:	f015 fb8e 	bl	801d8e4 <snprintf>
 80081c8:	4603      	mov	r3, r0
 80081ca:	72fb      	strb	r3, [r7, #11]
	send_header.start_frame = 0xA5;
 80081cc:	4b7f      	ldr	r3, [pc, #508]	@ (80083cc <draw_gearing+0x234>)
 80081ce:	22a5      	movs	r2, #165	@ 0xa5
 80081d0:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 80081d2:	4b7e      	ldr	r3, [pc, #504]	@ (80083cc <draw_gearing+0x234>)
 80081d4:	2200      	movs	r2, #0
 80081d6:	f042 0201 	orr.w	r2, r2, #1
 80081da:	715a      	strb	r2, [r3, #5]
 80081dc:	2200      	movs	r2, #0
 80081de:	f042 0203 	orr.w	r2, r2, #3
 80081e2:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 80081e4:	4b7a      	ldr	r3, [pc, #488]	@ (80083d0 <draw_gearing+0x238>)
 80081e6:	781b      	ldrb	r3, [r3, #0]
 80081e8:	1c5a      	adds	r2, r3, #1
 80081ea:	b2d1      	uxtb	r1, r2
 80081ec:	4a78      	ldr	r2, [pc, #480]	@ (80083d0 <draw_gearing+0x238>)
 80081ee:	7011      	strb	r1, [r2, #0]
 80081f0:	4a76      	ldr	r2, [pc, #472]	@ (80083cc <draw_gearing+0x234>)
 80081f2:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_inter_robot_data_t)
			+ sizeof(graphic_data_struct_t) + char_len;
 80081f4:	7afb      	ldrb	r3, [r7, #11]
 80081f6:	b29b      	uxth	r3, r3
 80081f8:	3315      	adds	r3, #21
 80081fa:	b29a      	uxth	r2, r3
	send_header.data_length = sizeof(ref_inter_robot_data_t)
 80081fc:	4b73      	ldr	r3, [pc, #460]	@ (80083cc <draw_gearing+0x234>)
 80081fe:	f8a3 2001 	strh.w	r2, [r3, #1]
	send_header.seq = g_ref_tx_seq++;
 8008202:	4b73      	ldr	r3, [pc, #460]	@ (80083d0 <draw_gearing+0x238>)
 8008204:	781b      	ldrb	r3, [r3, #0]
 8008206:	1c5a      	adds	r2, r3, #1
 8008208:	b2d1      	uxtb	r1, r2
 800820a:	4a71      	ldr	r2, [pc, #452]	@ (80083d0 <draw_gearing+0x238>)
 800820c:	7011      	strb	r1, [r2, #0]
 800820e:	4a6f      	ldr	r2, [pc, #444]	@ (80083cc <draw_gearing+0x234>)
 8008210:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8008212:	68fb      	ldr	r3, [r7, #12]
 8008214:	4a6f      	ldr	r2, [pc, #444]	@ (80083d4 <draw_gearing+0x23c>)
 8008216:	4413      	add	r3, r2
 8008218:	4a6c      	ldr	r2, [pc, #432]	@ (80083cc <draw_gearing+0x234>)
 800821a:	6810      	ldr	r0, [r2, #0]
 800821c:	6018      	str	r0, [r3, #0]
 800821e:	8891      	ldrh	r1, [r2, #4]
 8008220:	7992      	ldrb	r2, [r2, #6]
 8008222:	8099      	strh	r1, [r3, #4]
 8008224:	719a      	strb	r2, [r3, #6]
	curr_pos += sizeof(ref_frame_header_t);
 8008226:	68fb      	ldr	r3, [r7, #12]
 8008228:	3307      	adds	r3, #7
 800822a:	60fb      	str	r3, [r7, #12]
	append_CRC8_check_sum(tx_buffer, 5);
 800822c:	2105      	movs	r1, #5
 800822e:	4869      	ldr	r0, [pc, #420]	@ (80083d4 <draw_gearing+0x23c>)
 8008230:	f7f8 feeb 	bl	800100a <append_CRC8_check_sum>

	//for drawing 1 graphic
	graphic_header.cmd_ID = 0x110;
 8008234:	4b68      	ldr	r3, [pc, #416]	@ (80083d8 <draw_gearing+0x240>)
 8008236:	f44f 7288 	mov.w	r2, #272	@ 0x110
 800823a:	801a      	strh	r2, [r3, #0]
	//send to self
	graphic_header.send_ID = ref_robot_data.robot_id;
 800823c:	4b67      	ldr	r3, [pc, #412]	@ (80083dc <draw_gearing+0x244>)
 800823e:	781b      	ldrb	r3, [r3, #0]
 8008240:	461a      	mov	r2, r3
 8008242:	4b65      	ldr	r3, [pc, #404]	@ (80083d8 <draw_gearing+0x240>)
 8008244:	805a      	strh	r2, [r3, #2]
	graphic_header.receiver_ID = g_client_id;
 8008246:	4b66      	ldr	r3, [pc, #408]	@ (80083e0 <draw_gearing+0x248>)
 8008248:	881a      	ldrh	r2, [r3, #0]
 800824a:	4b63      	ldr	r3, [pc, #396]	@ (80083d8 <draw_gearing+0x240>)
 800824c:	809a      	strh	r2, [r3, #4]
	memcpy(tx_buffer + curr_pos, &graphic_header,
 800824e:	68fb      	ldr	r3, [r7, #12]
 8008250:	4a60      	ldr	r2, [pc, #384]	@ (80083d4 <draw_gearing+0x23c>)
 8008252:	4413      	add	r3, r2
 8008254:	4a60      	ldr	r2, [pc, #384]	@ (80083d8 <draw_gearing+0x240>)
 8008256:	6810      	ldr	r0, [r2, #0]
 8008258:	6018      	str	r0, [r3, #0]
 800825a:	8892      	ldrh	r2, [r2, #4]
 800825c:	809a      	strh	r2, [r3, #4]
			sizeof(ref_inter_robot_data_t));
	curr_pos += sizeof(ref_inter_robot_data_t);
 800825e:	68fb      	ldr	r3, [r7, #12]
 8008260:	3306      	adds	r3, #6
 8008262:	60fb      	str	r3, [r7, #12]
	//self set number for identification purposes only
	graphic_data.graphic_name[0] = 0;
 8008264:	4b55      	ldr	r3, [pc, #340]	@ (80083bc <draw_gearing+0x224>)
 8008266:	2200      	movs	r2, #0
 8008268:	701a      	strb	r2, [r3, #0]
	graphic_data.graphic_name[1] = 0;
 800826a:	4b54      	ldr	r3, [pc, #336]	@ (80083bc <draw_gearing+0x224>)
 800826c:	2200      	movs	r2, #0
 800826e:	705a      	strb	r2, [r3, #1]
	graphic_data.graphic_name[2] = 2;
 8008270:	4b52      	ldr	r3, [pc, #328]	@ (80083bc <draw_gearing+0x224>)
 8008272:	2202      	movs	r2, #2
 8008274:	709a      	strb	r2, [r3, #2]
	graphic_data.layer = 0;
 8008276:	4b51      	ldr	r3, [pc, #324]	@ (80083bc <draw_gearing+0x224>)
 8008278:	78da      	ldrb	r2, [r3, #3]
 800827a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800827e:	70da      	strb	r2, [r3, #3]
 8008280:	791a      	ldrb	r2, [r3, #4]
 8008282:	f022 0203 	bic.w	r2, r2, #3
 8008286:	711a      	strb	r2, [r3, #4]
	//draw number
	if (modify == 1) {
 8008288:	79fb      	ldrb	r3, [r7, #7]
 800828a:	2b01      	cmp	r3, #1
 800828c:	d106      	bne.n	800829c <draw_gearing+0x104>
		graphic_data.operation_type = 2; //0 = no operation, 1 = add, 2= modify, 3 = delete
 800828e:	4a4b      	ldr	r2, [pc, #300]	@ (80083bc <draw_gearing+0x224>)
 8008290:	78d3      	ldrb	r3, [r2, #3]
 8008292:	2102      	movs	r1, #2
 8008294:	f361 0302 	bfi	r3, r1, #0, #3
 8008298:	70d3      	strb	r3, [r2, #3]
 800829a:	e005      	b.n	80082a8 <draw_gearing+0x110>
	} else {
		graphic_data.operation_type = 1; //0 = no operation, 1 = add, 2= modify, 3 = delete
 800829c:	4a47      	ldr	r2, [pc, #284]	@ (80083bc <draw_gearing+0x224>)
 800829e:	78d3      	ldrb	r3, [r2, #3]
 80082a0:	2101      	movs	r1, #1
 80082a2:	f361 0302 	bfi	r3, r1, #0, #3
 80082a6:	70d3      	strb	r3, [r2, #3]
	}
	graphic_data.graphic_type = 7; // char
 80082a8:	4a44      	ldr	r2, [pc, #272]	@ (80083bc <draw_gearing+0x224>)
 80082aa:	78d3      	ldrb	r3, [r2, #3]
 80082ac:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80082b0:	70d3      	strb	r3, [r2, #3]
	graphic_data.start_angle = 30; // font size
 80082b2:	4b42      	ldr	r3, [pc, #264]	@ (80083bc <draw_gearing+0x224>)
 80082b4:	791a      	ldrb	r2, [r3, #4]
 80082b6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80082ba:	f062 027f 	orn	r2, r2, #127	@ 0x7f
 80082be:	711a      	strb	r2, [r3, #4]
 80082c0:	795a      	ldrb	r2, [r3, #5]
 80082c2:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 80082c6:	f042 0207 	orr.w	r2, r2, #7
 80082ca:	715a      	strb	r2, [r3, #5]
	graphic_data.end_angle = char_len; //number of decimal places
 80082cc:	7afb      	ldrb	r3, [r7, #11]
 80082ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80082d2:	b29a      	uxth	r2, r3
 80082d4:	4b39      	ldr	r3, [pc, #228]	@ (80083bc <draw_gearing+0x224>)
 80082d6:	f002 0101 	and.w	r1, r2, #1
 80082da:	01cc      	lsls	r4, r1, #7
 80082dc:	7959      	ldrb	r1, [r3, #5]
 80082de:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
 80082e2:	4608      	mov	r0, r1
 80082e4:	4621      	mov	r1, r4
 80082e6:	4301      	orrs	r1, r0
 80082e8:	7159      	strb	r1, [r3, #5]
 80082ea:	0852      	lsrs	r2, r2, #1
 80082ec:	b292      	uxth	r2, r2
 80082ee:	b2d2      	uxtb	r2, r2
 80082f0:	2100      	movs	r1, #0
 80082f2:	430a      	orrs	r2, r1
 80082f4:	719a      	strb	r2, [r3, #6]
	graphic_data.width = 7; //line width
 80082f6:	4b31      	ldr	r3, [pc, #196]	@ (80083bc <draw_gearing+0x224>)
 80082f8:	2200      	movs	r2, #0
 80082fa:	f042 0207 	orr.w	r2, r2, #7
 80082fe:	71da      	strb	r2, [r3, #7]
 8008300:	7a1a      	ldrb	r2, [r3, #8]
 8008302:	f022 0203 	bic.w	r2, r2, #3
 8008306:	721a      	strb	r2, [r3, #8]
	graphic_data.layer = 0;
 8008308:	4b2c      	ldr	r3, [pc, #176]	@ (80083bc <draw_gearing+0x224>)
 800830a:	78da      	ldrb	r2, [r3, #3]
 800830c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8008310:	70da      	strb	r2, [r3, #3]
 8008312:	791a      	ldrb	r2, [r3, #4]
 8008314:	f022 0203 	bic.w	r2, r2, #3
 8008318:	711a      	strb	r2, [r3, #4]
	//assuming 1920x1080? need check
	graphic_data.start_x = 50;
 800831a:	4b28      	ldr	r3, [pc, #160]	@ (80083bc <draw_gearing+0x224>)
 800831c:	7a1a      	ldrb	r2, [r3, #8]
 800831e:	f002 0203 	and.w	r2, r2, #3
 8008322:	f062 0237 	orn	r2, r2, #55	@ 0x37
 8008326:	721a      	strb	r2, [r3, #8]
 8008328:	7a5a      	ldrb	r2, [r3, #9]
 800832a:	f022 021f 	bic.w	r2, r2, #31
 800832e:	725a      	strb	r2, [r3, #9]
	graphic_data.start_y = 650;
 8008330:	4b22      	ldr	r3, [pc, #136]	@ (80083bc <draw_gearing+0x224>)
 8008332:	7a5a      	ldrb	r2, [r3, #9]
 8008334:	f002 021f 	and.w	r2, r2, #31
 8008338:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800833c:	725a      	strb	r2, [r3, #9]
 800833e:	2200      	movs	r2, #0
 8008340:	f042 0251 	orr.w	r2, r2, #81	@ 0x51
 8008344:	729a      	strb	r2, [r3, #10]
	memcpy(tx_buffer + curr_pos, &graphic_data, sizeof(graphic_data_struct_t));
 8008346:	68fb      	ldr	r3, [r7, #12]
 8008348:	4a22      	ldr	r2, [pc, #136]	@ (80083d4 <draw_gearing+0x23c>)
 800834a:	4413      	add	r3, r2
 800834c:	4a1b      	ldr	r2, [pc, #108]	@ (80083bc <draw_gearing+0x224>)
 800834e:	461c      	mov	r4, r3
 8008350:	4613      	mov	r3, r2
 8008352:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008354:	6020      	str	r0, [r4, #0]
 8008356:	6061      	str	r1, [r4, #4]
 8008358:	60a2      	str	r2, [r4, #8]
 800835a:	881a      	ldrh	r2, [r3, #0]
 800835c:	789b      	ldrb	r3, [r3, #2]
 800835e:	81a2      	strh	r2, [r4, #12]
 8008360:	73a3      	strb	r3, [r4, #14]
	curr_pos += sizeof(graphic_data_struct_t);
 8008362:	68fb      	ldr	r3, [r7, #12]
 8008364:	330f      	adds	r3, #15
 8008366:	60fb      	str	r3, [r7, #12]
	memcpy(tx_buffer + curr_pos, char_buffer, char_len);
 8008368:	68fb      	ldr	r3, [r7, #12]
 800836a:	4a1a      	ldr	r2, [pc, #104]	@ (80083d4 <draw_gearing+0x23c>)
 800836c:	4413      	add	r3, r2
 800836e:	7afa      	ldrb	r2, [r7, #11]
 8008370:	4915      	ldr	r1, [pc, #84]	@ (80083c8 <draw_gearing+0x230>)
 8008372:	4618      	mov	r0, r3
 8008374:	f015 fbd6 	bl	801db24 <memcpy>
	curr_pos += char_len;
 8008378:	7afb      	ldrb	r3, [r7, #11]
 800837a:	68fa      	ldr	r2, [r7, #12]
 800837c:	4413      	add	r3, r2
 800837e:	60fb      	str	r3, [r7, #12]

	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8008380:	68fb      	ldr	r3, [r7, #12]
 8008382:	3302      	adds	r3, #2
 8008384:	4619      	mov	r1, r3
 8008386:	4813      	ldr	r0, [pc, #76]	@ (80083d4 <draw_gearing+0x23c>)
 8008388:	f7f8 fec2 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 800838c:	e002      	b.n	8008394 <draw_gearing+0x1fc>
		vTaskDelay(1);
 800838e:	2001      	movs	r0, #1
 8008390:	f012 fdd8 	bl	801af44 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8008394:	4b13      	ldr	r3, [pc, #76]	@ (80083e4 <draw_gearing+0x24c>)
 8008396:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800839a:	b2db      	uxtb	r3, r3
 800839c:	2b20      	cmp	r3, #32
 800839e:	d1f6      	bne.n	800838e <draw_gearing+0x1f6>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 80083a0:	68fb      	ldr	r3, [r7, #12]
 80083a2:	b29b      	uxth	r3, r3
 80083a4:	3302      	adds	r3, #2
 80083a6:	b29b      	uxth	r3, r3
 80083a8:	461a      	mov	r2, r3
 80083aa:	490a      	ldr	r1, [pc, #40]	@ (80083d4 <draw_gearing+0x23c>)
 80083ac:	480d      	ldr	r0, [pc, #52]	@ (80083e4 <draw_gearing+0x24c>)
 80083ae:	f00c fe61 	bl	8015074 <HAL_UART_Transmit_DMA>
}
 80083b2:	bf00      	nop
 80083b4:	3714      	adds	r7, #20
 80083b6:	46bd      	mov	sp, r7
 80083b8:	bd90      	pop	{r4, r7, pc}
 80083ba:	bf00      	nop
 80083bc:	20003aa0 	.word	0x20003aa0
 80083c0:	20003904 	.word	0x20003904
 80083c4:	08024690 	.word	0x08024690
 80083c8:	20003ab8 	.word	0x20003ab8
 80083cc:	20003ab0 	.word	0x20003ab0
 80083d0:	20003c88 	.word	0x20003c88
 80083d4:	20003998 	.word	0x20003998
 80083d8:	20003a98 	.word	0x20003a98
 80083dc:	20003c24 	.word	0x20003c24
 80083e0:	20003994 	.word	0x20003994
 80083e4:	20001ca0 	.word	0x20001ca0

080083e8 <clear_hud>:


void clear_hud(){
 80083e8:	b580      	push	{r7, lr}
 80083ea:	b084      	sub	sp, #16
 80083ec:	af00      	add	r7, sp, #0
	uint32_t curr_pos = 0;
 80083ee:	2300      	movs	r3, #0
 80083f0:	60fb      	str	r3, [r7, #12]
//	uint8_t char_len = 0;
//	curr_pos = 0;
//	char_len = snprintf((char*) char_buffer, 30, "GEAR %d", gear_speed.curr_gear);

	send_header.start_frame = 0xA5;
 80083f2:	4b2f      	ldr	r3, [pc, #188]	@ (80084b0 <clear_hud+0xc8>)
 80083f4:	22a5      	movs	r2, #165	@ 0xa5
 80083f6:	701a      	strb	r2, [r3, #0]
	send_header.cmd_id = REF_ROBOT_COMMS_CMD_ID;
 80083f8:	4b2d      	ldr	r3, [pc, #180]	@ (80084b0 <clear_hud+0xc8>)
 80083fa:	2200      	movs	r2, #0
 80083fc:	f042 0201 	orr.w	r2, r2, #1
 8008400:	715a      	strb	r2, [r3, #5]
 8008402:	2200      	movs	r2, #0
 8008404:	f042 0203 	orr.w	r2, r2, #3
 8008408:	719a      	strb	r2, [r3, #6]
	send_header.seq = g_ref_tx_seq++;
 800840a:	4b2a      	ldr	r3, [pc, #168]	@ (80084b4 <clear_hud+0xcc>)
 800840c:	781b      	ldrb	r3, [r3, #0]
 800840e:	1c5a      	adds	r2, r3, #1
 8008410:	b2d1      	uxtb	r1, r2
 8008412:	4a28      	ldr	r2, [pc, #160]	@ (80084b4 <clear_hud+0xcc>)
 8008414:	7011      	strb	r1, [r2, #0]
 8008416:	4a26      	ldr	r2, [pc, #152]	@ (80084b0 <clear_hud+0xc8>)
 8008418:	70d3      	strb	r3, [r2, #3]
	send_header.data_length = sizeof(ref_delete_graphic_t);
 800841a:	4b25      	ldr	r3, [pc, #148]	@ (80084b0 <clear_hud+0xc8>)
 800841c:	2200      	movs	r2, #0
 800841e:	f042 0208 	orr.w	r2, r2, #8
 8008422:	705a      	strb	r2, [r3, #1]
 8008424:	2200      	movs	r2, #0
 8008426:	709a      	strb	r2, [r3, #2]
	send_header.seq = g_ref_tx_seq++;
 8008428:	4b22      	ldr	r3, [pc, #136]	@ (80084b4 <clear_hud+0xcc>)
 800842a:	781b      	ldrb	r3, [r3, #0]
 800842c:	1c5a      	adds	r2, r3, #1
 800842e:	b2d1      	uxtb	r1, r2
 8008430:	4a20      	ldr	r2, [pc, #128]	@ (80084b4 <clear_hud+0xcc>)
 8008432:	7011      	strb	r1, [r2, #0]
 8008434:	4a1e      	ldr	r2, [pc, #120]	@ (80084b0 <clear_hud+0xc8>)
 8008436:	70d3      	strb	r3, [r2, #3]
	memcpy(tx_buffer + curr_pos, &send_header, 7);
 8008438:	68fb      	ldr	r3, [r7, #12]
 800843a:	4a1f      	ldr	r2, [pc, #124]	@ (80084b8 <clear_hud+0xd0>)
 800843c:	4413      	add	r3, r2
 800843e:	4a1c      	ldr	r2, [pc, #112]	@ (80084b0 <clear_hud+0xc8>)
 8008440:	6810      	ldr	r0, [r2, #0]
 8008442:	6018      	str	r0, [r3, #0]
 8008444:	8891      	ldrh	r1, [r2, #4]
 8008446:	7992      	ldrb	r2, [r2, #6]
 8008448:	8099      	strh	r1, [r3, #4]
 800844a:	719a      	strb	r2, [r3, #6]
	ref_delete_graphic_t ref_delete;
	ref_delete.cmd_ID = 0x100;
 800844c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8008450:	80bb      	strh	r3, [r7, #4]
	ref_delete.graphic_layer = 9;
 8008452:	2309      	movs	r3, #9
 8008454:	72fb      	strb	r3, [r7, #11]
	ref_delete.graphic_operation = 2;
 8008456:	2302      	movs	r3, #2
 8008458:	72bb      	strb	r3, [r7, #10]
	ref_delete.receiver_ID = g_client_id;
 800845a:	4b18      	ldr	r3, [pc, #96]	@ (80084bc <clear_hud+0xd4>)
 800845c:	881b      	ldrh	r3, [r3, #0]
 800845e:	813b      	strh	r3, [r7, #8]
	ref_delete.send_ID = ref_robot_data.robot_id;
 8008460:	4b17      	ldr	r3, [pc, #92]	@ (80084c0 <clear_hud+0xd8>)
 8008462:	781b      	ldrb	r3, [r3, #0]
 8008464:	80fb      	strh	r3, [r7, #6]
	memcpy(tx_buffer + curr_pos, &ref_delete, sizeof(ref_delete_graphic_t));
 8008466:	68fb      	ldr	r3, [r7, #12]
 8008468:	4a13      	ldr	r2, [pc, #76]	@ (80084b8 <clear_hud+0xd0>)
 800846a:	4413      	add	r3, r2
 800846c:	461a      	mov	r2, r3
 800846e:	1d3b      	adds	r3, r7, #4
 8008470:	cb03      	ldmia	r3!, {r0, r1}
 8008472:	6010      	str	r0, [r2, #0]
 8008474:	6051      	str	r1, [r2, #4]
	append_CRC16_check_sum(tx_buffer, curr_pos + 2);
 8008476:	68fb      	ldr	r3, [r7, #12]
 8008478:	3302      	adds	r3, #2
 800847a:	4619      	mov	r1, r3
 800847c:	480e      	ldr	r0, [pc, #56]	@ (80084b8 <clear_hud+0xd0>)
 800847e:	f7f8 fe47 	bl	8001110 <append_CRC16_check_sum>
	while (huart6.gState != HAL_UART_STATE_READY) {
 8008482:	e002      	b.n	800848a <clear_hud+0xa2>
		vTaskDelay(1);
 8008484:	2001      	movs	r0, #1
 8008486:	f012 fd5d 	bl	801af44 <vTaskDelay>
	while (huart6.gState != HAL_UART_STATE_READY) {
 800848a:	4b0e      	ldr	r3, [pc, #56]	@ (80084c4 <clear_hud+0xdc>)
 800848c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008490:	b2db      	uxtb	r3, r3
 8008492:	2b20      	cmp	r3, #32
 8008494:	d1f6      	bne.n	8008484 <clear_hud+0x9c>
	}
	HAL_UART_Transmit_DMA(&huart6, tx_buffer, curr_pos + 2);
 8008496:	68fb      	ldr	r3, [r7, #12]
 8008498:	b29b      	uxth	r3, r3
 800849a:	3302      	adds	r3, #2
 800849c:	b29b      	uxth	r3, r3
 800849e:	461a      	mov	r2, r3
 80084a0:	4905      	ldr	r1, [pc, #20]	@ (80084b8 <clear_hud+0xd0>)
 80084a2:	4808      	ldr	r0, [pc, #32]	@ (80084c4 <clear_hud+0xdc>)
 80084a4:	f00c fde6 	bl	8015074 <HAL_UART_Transmit_DMA>

}
 80084a8:	bf00      	nop
 80084aa:	3710      	adds	r7, #16
 80084ac:	46bd      	mov	sp, r7
 80084ae:	bd80      	pop	{r7, pc}
 80084b0:	20003ab0 	.word	0x20003ab0
 80084b4:	20003c88 	.word	0x20003c88
 80084b8:	20003998 	.word	0x20003998
 80084bc:	20003994 	.word	0x20003994
 80084c0:	20003c24 	.word	0x20003c24
 80084c4:	20001ca0 	.word	0x20001ca0

080084c8 <fusion>:
double time_dif;
#define ALPHA 0.98
#define DT 0.01
#define LPF_ALPHA 0.5  // Low-pass filter coefficient

int fusion() {
 80084c8:	b580      	push	{r7, lr}
 80084ca:	b0ae      	sub	sp, #184	@ 0xb8
 80084cc:	af00      	add	r7, sp, #0
    double accel_data[3];
    double gyro_data[3];
    double dt = DT;
 80084ce:	a377      	add	r3, pc, #476	@ (adr r3, 80086ac <fusion+0x1e4>)
 80084d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084d4:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
    IMUSensorFusion imu;

    initIMUSensorFusion(&imu);
 80084d8:	463b      	mov	r3, r7
 80084da:	4618      	mov	r0, r3
 80084dc:	f000 f92a 	bl	8008734 <initIMUSensorFusion>

    double T_end = 0.1;
 80084e0:	a374      	add	r3, pc, #464	@ (adr r3, 80086b4 <fusion+0x1ec>)
 80084e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80084e6:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
    double time_dif;


    float T_start = get_microseconds();
 80084ea:	f7f9 fe69 	bl	80021c0 <get_microseconds>
 80084ee:	ee07 0a90 	vmov	s15, r0
 80084f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80084f6:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

    // Simulate data (replace with actual sensor reading in a real application)
    while (1) {
        // Replace these functions with actual sensor data reading
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 80084fa:	4b69      	ldr	r3, [pc, #420]	@ (80086a0 <fusion+0x1d8>)
 80084fc:	681b      	ldr	r3, [r3, #0]
 80084fe:	4618      	mov	r0, r3
 8008500:	f7f8 f822 	bl	8000548 <__aeabi_f2d>
 8008504:	4602      	mov	r2, r0
 8008506:	460b      	mov	r3, r1
 8008508:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
        accel_data[1] = accel_proc_data.ay;  // y-axis acceleration
 800850c:	4b64      	ldr	r3, [pc, #400]	@ (80086a0 <fusion+0x1d8>)
 800850e:	685b      	ldr	r3, [r3, #4]
 8008510:	4618      	mov	r0, r3
 8008512:	f7f8 f819 	bl	8000548 <__aeabi_f2d>
 8008516:	4602      	mov	r2, r0
 8008518:	460b      	mov	r3, r1
 800851a:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
        accel_data[2] = accel_proc_data.az;  // z-axis acceleration
 800851e:	4b60      	ldr	r3, [pc, #384]	@ (80086a0 <fusion+0x1d8>)
 8008520:	689b      	ldr	r3, [r3, #8]
 8008522:	4618      	mov	r0, r3
 8008524:	f7f8 f810 	bl	8000548 <__aeabi_f2d>
 8008528:	4602      	mov	r2, r0
 800852a:	460b      	mov	r3, r1
 800852c:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90

        gyro_data[0] = gyro_proc_data.gx;  // roll rate
 8008530:	4b5c      	ldr	r3, [pc, #368]	@ (80086a4 <fusion+0x1dc>)
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	4618      	mov	r0, r3
 8008536:	f7f8 f807 	bl	8000548 <__aeabi_f2d>
 800853a:	4602      	mov	r2, r0
 800853c:	460b      	mov	r3, r1
 800853e:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
        gyro_data[1] = gyro_proc_data.gy;  // pitch rate
 8008542:	4b58      	ldr	r3, [pc, #352]	@ (80086a4 <fusion+0x1dc>)
 8008544:	685b      	ldr	r3, [r3, #4]
 8008546:	4618      	mov	r0, r3
 8008548:	f7f7 fffe 	bl	8000548 <__aeabi_f2d>
 800854c:	4602      	mov	r2, r0
 800854e:	460b      	mov	r3, r1
 8008550:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
        gyro_data[2] = gyro_proc_data.gz;  // yaw rate
 8008554:	4b53      	ldr	r3, [pc, #332]	@ (80086a4 <fusion+0x1dc>)
 8008556:	689b      	ldr	r3, [r3, #8]
 8008558:	4618      	mov	r0, r3
 800855a:	f7f7 fff5 	bl	8000548 <__aeabi_f2d>
 800855e:	4602      	mov	r2, r0
 8008560:	460b      	mov	r3, r1
 8008562:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78

        T_end = get_microseconds();
 8008566:	f7f9 fe2b 	bl	80021c0 <get_microseconds>
 800856a:	4603      	mov	r3, r0
 800856c:	4618      	mov	r0, r3
 800856e:	f7f7 ffc9 	bl	8000504 <__aeabi_ui2d>
 8008572:	4602      	mov	r2, r0
 8008574:	460b      	mov	r3, r1
 8008576:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
        time_dif = (T_end - T_start) * 0.000001;
 800857a:	f8d7 00b4 	ldr.w	r0, [r7, #180]	@ 0xb4
 800857e:	f7f7 ffe3 	bl	8000548 <__aeabi_f2d>
 8008582:	4602      	mov	r2, r0
 8008584:	460b      	mov	r3, r1
 8008586:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800858a:	f7f7 fe7d 	bl	8000288 <__aeabi_dsub>
 800858e:	4602      	mov	r2, r0
 8008590:	460b      	mov	r3, r1
 8008592:	4610      	mov	r0, r2
 8008594:	4619      	mov	r1, r3
 8008596:	a340      	add	r3, pc, #256	@ (adr r3, 8008698 <fusion+0x1d0>)
 8008598:	e9d3 2300 	ldrd	r2, r3, [r3]
 800859c:	f7f8 f82c 	bl	80005f8 <__aeabi_dmul>
 80085a0:	4602      	mov	r2, r0
 80085a2:	460b      	mov	r3, r1
 80085a4:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
        dt = time_dif;
 80085a8:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 80085ac:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
        imu_sensor_fusion(accel_data, gyro_data, dt, &imu);
 80085b0:	463a      	mov	r2, r7
 80085b2:	f107 0168 	add.w	r1, r7, #104	@ 0x68
 80085b6:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 80085ba:	ed97 0b2a 	vldr	d0, [r7, #168]	@ 0xa8
 80085be:	4618      	mov	r0, r3
 80085c0:	f000 f91e 	bl	8008800 <imu_sensor_fusion>
        T_start = get_microseconds();
 80085c4:	f7f9 fdfc 	bl	80021c0 <get_microseconds>
 80085c8:	ee07 0a90 	vmov	s15, r0
 80085cc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80085d0:	edc7 7a2d 	vstr	s15, [r7, #180]	@ 0xb4

        // Store the results in the imu_heading structure
        imu_heading.pit = imu.pitch;
 80085d4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80085d8:	4610      	mov	r0, r2
 80085da:	4619      	mov	r1, r3
 80085dc:	f7f8 fb04 	bl	8000be8 <__aeabi_d2f>
 80085e0:	4603      	mov	r3, r0
 80085e2:	4a31      	ldr	r2, [pc, #196]	@ (80086a8 <fusion+0x1e0>)
 80085e4:	6013      	str	r3, [r2, #0]
        imu_heading.dpit = imu.pitch_speed;
 80085e6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80085ea:	4610      	mov	r0, r2
 80085ec:	4619      	mov	r1, r3
 80085ee:	f7f8 fafb 	bl	8000be8 <__aeabi_d2f>
 80085f2:	4603      	mov	r3, r0
 80085f4:	4a2c      	ldr	r2, [pc, #176]	@ (80086a8 <fusion+0x1e0>)
 80085f6:	60d3      	str	r3, [r2, #12]
        imu_heading.ddpit = imu.pitch_accel;
 80085f8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80085fc:	4610      	mov	r0, r2
 80085fe:	4619      	mov	r1, r3
 8008600:	f7f8 faf2 	bl	8000be8 <__aeabi_d2f>
 8008604:	4603      	mov	r3, r0
 8008606:	4a28      	ldr	r2, [pc, #160]	@ (80086a8 <fusion+0x1e0>)
 8008608:	6193      	str	r3, [r2, #24]
        imu_heading.rol = imu.roll;
 800860a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800860e:	4610      	mov	r0, r2
 8008610:	4619      	mov	r1, r3
 8008612:	f7f8 fae9 	bl	8000be8 <__aeabi_d2f>
 8008616:	4603      	mov	r3, r0
 8008618:	4a23      	ldr	r2, [pc, #140]	@ (80086a8 <fusion+0x1e0>)
 800861a:	6053      	str	r3, [r2, #4]
        imu_heading.drol = imu.roll_speed;
 800861c:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8008620:	4610      	mov	r0, r2
 8008622:	4619      	mov	r1, r3
 8008624:	f7f8 fae0 	bl	8000be8 <__aeabi_d2f>
 8008628:	4603      	mov	r3, r0
 800862a:	4a1f      	ldr	r2, [pc, #124]	@ (80086a8 <fusion+0x1e0>)
 800862c:	6113      	str	r3, [r2, #16]
        imu_heading.ddrol = imu.roll_accel;
 800862e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008632:	4610      	mov	r0, r2
 8008634:	4619      	mov	r1, r3
 8008636:	f7f8 fad7 	bl	8000be8 <__aeabi_d2f>
 800863a:	4603      	mov	r3, r0
 800863c:	4a1a      	ldr	r2, [pc, #104]	@ (80086a8 <fusion+0x1e0>)
 800863e:	61d3      	str	r3, [r2, #28]
        imu_heading.yaw = imu.yaw;
 8008640:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8008644:	4610      	mov	r0, r2
 8008646:	4619      	mov	r1, r3
 8008648:	f7f8 face 	bl	8000be8 <__aeabi_d2f>
 800864c:	4603      	mov	r3, r0
 800864e:	4a16      	ldr	r2, [pc, #88]	@ (80086a8 <fusion+0x1e0>)
 8008650:	6093      	str	r3, [r2, #8]
        imu_heading.dyaw = imu.yaw_speed;
 8008652:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8008656:	4610      	mov	r0, r2
 8008658:	4619      	mov	r1, r3
 800865a:	f7f8 fac5 	bl	8000be8 <__aeabi_d2f>
 800865e:	4603      	mov	r3, r0
 8008660:	4a11      	ldr	r2, [pc, #68]	@ (80086a8 <fusion+0x1e0>)
 8008662:	6153      	str	r3, [r2, #20]
        imu_heading.ddyaw = imu.yaw_accel;
 8008664:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008668:	4610      	mov	r0, r2
 800866a:	4619      	mov	r1, r3
 800866c:	f7f8 fabc 	bl	8000be8 <__aeabi_d2f>
 8008670:	4603      	mov	r3, r0
 8008672:	4a0d      	ldr	r2, [pc, #52]	@ (80086a8 <fusion+0x1e0>)
 8008674:	6213      	str	r3, [r2, #32]
        imu_heading.ddz = imu.vertical_accel;
 8008676:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800867a:	4610      	mov	r0, r2
 800867c:	4619      	mov	r1, r3
 800867e:	f7f8 fab3 	bl	8000be8 <__aeabi_d2f>
 8008682:	4603      	mov	r3, r0
 8008684:	4a08      	ldr	r2, [pc, #32]	@ (80086a8 <fusion+0x1e0>)
 8008686:	6253      	str	r3, [r2, #36]	@ 0x24
        ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8008688:	f04f 31ff 	mov.w	r1, #4294967295
 800868c:	2001      	movs	r0, #1
 800868e:	f013 fa29 	bl	801bae4 <ulTaskNotifyTake>
        accel_data[0] = accel_proc_data.ax;  // x-axis acceleration
 8008692:	bf00      	nop
 8008694:	e731      	b.n	80084fa <fusion+0x32>
 8008696:	bf00      	nop
 8008698:	a0b5ed8d 	.word	0xa0b5ed8d
 800869c:	3eb0c6f7 	.word	0x3eb0c6f7
 80086a0:	20003b00 	.word	0x20003b00
 80086a4:	20003b10 	.word	0x20003b10
 80086a8:	20003ad8 	.word	0x20003ad8
 80086ac:	47ae147b 	.word	0x47ae147b
 80086b0:	3f847ae1 	.word	0x3f847ae1
 80086b4:	9999999a 	.word	0x9999999a
 80086b8:	3fb99999 	.word	0x3fb99999

080086bc <low_pass_filter>:

    return 0;
}

// Low-pass filter function
double low_pass_filter(double input, double *prev_output, double alpha) {
 80086bc:	b5b0      	push	{r4, r5, r7, lr}
 80086be:	b086      	sub	sp, #24
 80086c0:	af00      	add	r7, sp, #0
 80086c2:	ed87 0b04 	vstr	d0, [r7, #16]
 80086c6:	60f8      	str	r0, [r7, #12]
 80086c8:	ed87 1b00 	vstr	d1, [r7]
    *prev_output = alpha * input + (1 - alpha) * (*prev_output);
 80086cc:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 80086d0:	e9d7 0100 	ldrd	r0, r1, [r7]
 80086d4:	f7f7 ff90 	bl	80005f8 <__aeabi_dmul>
 80086d8:	4602      	mov	r2, r0
 80086da:	460b      	mov	r3, r1
 80086dc:	4614      	mov	r4, r2
 80086de:	461d      	mov	r5, r3
 80086e0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80086e4:	f04f 0000 	mov.w	r0, #0
 80086e8:	4911      	ldr	r1, [pc, #68]	@ (8008730 <low_pass_filter+0x74>)
 80086ea:	f7f7 fdcd 	bl	8000288 <__aeabi_dsub>
 80086ee:	4602      	mov	r2, r0
 80086f0:	460b      	mov	r3, r1
 80086f2:	4610      	mov	r0, r2
 80086f4:	4619      	mov	r1, r3
 80086f6:	68fb      	ldr	r3, [r7, #12]
 80086f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086fc:	f7f7 ff7c 	bl	80005f8 <__aeabi_dmul>
 8008700:	4602      	mov	r2, r0
 8008702:	460b      	mov	r3, r1
 8008704:	4620      	mov	r0, r4
 8008706:	4629      	mov	r1, r5
 8008708:	f7f7 fdc0 	bl	800028c <__adddf3>
 800870c:	4602      	mov	r2, r0
 800870e:	460b      	mov	r3, r1
 8008710:	68f9      	ldr	r1, [r7, #12]
 8008712:	e9c1 2300 	strd	r2, r3, [r1]
    return *prev_output;
 8008716:	68fb      	ldr	r3, [r7, #12]
 8008718:	e9d3 2300 	ldrd	r2, r3, [r3]
 800871c:	ec43 2b17 	vmov	d7, r2, r3
}
 8008720:	eeb0 0a47 	vmov.f32	s0, s14
 8008724:	eef0 0a67 	vmov.f32	s1, s15
 8008728:	3718      	adds	r7, #24
 800872a:	46bd      	mov	sp, r7
 800872c:	bdb0      	pop	{r4, r5, r7, pc}
 800872e:	bf00      	nop
 8008730:	3ff00000 	.word	0x3ff00000

08008734 <initIMUSensorFusion>:


void initIMUSensorFusion(IMUSensorFusion *imu) {
 8008734:	b480      	push	{r7}
 8008736:	b083      	sub	sp, #12
 8008738:	af00      	add	r7, sp, #0
 800873a:	6078      	str	r0, [r7, #4]
    imu->pitch = 0.0;
 800873c:	6879      	ldr	r1, [r7, #4]
 800873e:	f04f 0200 	mov.w	r2, #0
 8008742:	f04f 0300 	mov.w	r3, #0
 8008746:	e9c1 2300 	strd	r2, r3, [r1]
    imu->pitch_speed = 0.0;
 800874a:	6879      	ldr	r1, [r7, #4]
 800874c:	f04f 0200 	mov.w	r2, #0
 8008750:	f04f 0300 	mov.w	r3, #0
 8008754:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->pitch_accel = 0.0;
 8008758:	6879      	ldr	r1, [r7, #4]
 800875a:	f04f 0200 	mov.w	r2, #0
 800875e:	f04f 0300 	mov.w	r3, #0
 8008762:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll = 0.0;
 8008766:	6879      	ldr	r1, [r7, #4]
 8008768:	f04f 0200 	mov.w	r2, #0
 800876c:	f04f 0300 	mov.w	r3, #0
 8008770:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->roll_speed = 0.0;
 8008774:	6879      	ldr	r1, [r7, #4]
 8008776:	f04f 0200 	mov.w	r2, #0
 800877a:	f04f 0300 	mov.w	r3, #0
 800877e:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->roll_accel = 0.0;
 8008782:	6879      	ldr	r1, [r7, #4]
 8008784:	f04f 0200 	mov.w	r2, #0
 8008788:	f04f 0300 	mov.w	r3, #0
 800878c:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw = 0.0;
 8008790:	6879      	ldr	r1, [r7, #4]
 8008792:	f04f 0200 	mov.w	r2, #0
 8008796:	f04f 0300 	mov.w	r3, #0
 800879a:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30
    imu->yaw_speed = 0.0;
 800879e:	6879      	ldr	r1, [r7, #4]
 80087a0:	f04f 0200 	mov.w	r2, #0
 80087a4:	f04f 0300 	mov.w	r3, #0
 80087a8:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38
    imu->yaw_accel = 0.0;
 80087ac:	6879      	ldr	r1, [r7, #4]
 80087ae:	f04f 0200 	mov.w	r2, #0
 80087b2:	f04f 0300 	mov.w	r3, #0
 80087b6:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40
    imu->vertical_accel = 0.0;
 80087ba:	6879      	ldr	r1, [r7, #4]
 80087bc:	f04f 0200 	mov.w	r2, #0
 80087c0:	f04f 0300 	mov.w	r3, #0
 80087c4:	e9c1 2312 	strd	r2, r3, [r1, #72]	@ 0x48
    imu->acc_x_lpf = 0.0;
 80087c8:	6879      	ldr	r1, [r7, #4]
 80087ca:	f04f 0200 	mov.w	r2, #0
 80087ce:	f04f 0300 	mov.w	r3, #0
 80087d2:	e9c1 2314 	strd	r2, r3, [r1, #80]	@ 0x50
    imu->acc_y_lpf = 0.0;
 80087d6:	6879      	ldr	r1, [r7, #4]
 80087d8:	f04f 0200 	mov.w	r2, #0
 80087dc:	f04f 0300 	mov.w	r3, #0
 80087e0:	e9c1 2316 	strd	r2, r3, [r1, #88]	@ 0x58
    imu->acc_z_lpf = 0.0;
 80087e4:	6879      	ldr	r1, [r7, #4]
 80087e6:	f04f 0200 	mov.w	r2, #0
 80087ea:	f04f 0300 	mov.w	r3, #0
 80087ee:	e9c1 2318 	strd	r2, r3, [r1, #96]	@ 0x60
}
 80087f2:	bf00      	nop
 80087f4:	370c      	adds	r7, #12
 80087f6:	46bd      	mov	sp, r7
 80087f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087fc:	4770      	bx	lr
	...

08008800 <imu_sensor_fusion>:
void imu_sensor_fusion(double accel_data[3], double gyro_data[3], double dt,
                       IMUSensorFusion *imu) {
 8008800:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8008804:	b08a      	sub	sp, #40	@ 0x28
 8008806:	af00      	add	r7, sp, #0
 8008808:	6178      	str	r0, [r7, #20]
 800880a:	6139      	str	r1, [r7, #16]
 800880c:	ed87 0b02 	vstr	d0, [r7, #8]
 8008810:	607a      	str	r2, [r7, #4]
    // Low-pass filter accelerometer data
    accel_data[0] = low_pass_filter(accel_data[0], &(imu->acc_x_lpf), LPF_ALPHA);
 8008812:	697b      	ldr	r3, [r7, #20]
 8008814:	ed93 7b00 	vldr	d7, [r3]
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	3350      	adds	r3, #80	@ 0x50
 800881c:	ed9f 1bb8 	vldr	d1, [pc, #736]	@ 8008b00 <imu_sensor_fusion+0x300>
 8008820:	4618      	mov	r0, r3
 8008822:	eeb0 0a47 	vmov.f32	s0, s14
 8008826:	eef0 0a67 	vmov.f32	s1, s15
 800882a:	f7ff ff47 	bl	80086bc <low_pass_filter>
 800882e:	eeb0 7a40 	vmov.f32	s14, s0
 8008832:	eef0 7a60 	vmov.f32	s15, s1
 8008836:	697b      	ldr	r3, [r7, #20]
 8008838:	ed83 7b00 	vstr	d7, [r3]
    accel_data[1] = low_pass_filter(accel_data[1], &(imu->acc_y_lpf), LPF_ALPHA);
 800883c:	697b      	ldr	r3, [r7, #20]
 800883e:	3308      	adds	r3, #8
 8008840:	ed93 7b00 	vldr	d7, [r3]
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	f103 0258 	add.w	r2, r3, #88	@ 0x58
 800884a:	697b      	ldr	r3, [r7, #20]
 800884c:	f103 0408 	add.w	r4, r3, #8
 8008850:	ed9f 1bab 	vldr	d1, [pc, #684]	@ 8008b00 <imu_sensor_fusion+0x300>
 8008854:	4610      	mov	r0, r2
 8008856:	eeb0 0a47 	vmov.f32	s0, s14
 800885a:	eef0 0a67 	vmov.f32	s1, s15
 800885e:	f7ff ff2d 	bl	80086bc <low_pass_filter>
 8008862:	eeb0 7a40 	vmov.f32	s14, s0
 8008866:	eef0 7a60 	vmov.f32	s15, s1
 800886a:	ed84 7b00 	vstr	d7, [r4]
    accel_data[2] = low_pass_filter(accel_data[2], &(imu->acc_z_lpf), LPF_ALPHA);
 800886e:	697b      	ldr	r3, [r7, #20]
 8008870:	3310      	adds	r3, #16
 8008872:	ed93 7b00 	vldr	d7, [r3]
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	f103 0260 	add.w	r2, r3, #96	@ 0x60
 800887c:	697b      	ldr	r3, [r7, #20]
 800887e:	f103 0410 	add.w	r4, r3, #16
 8008882:	ed9f 1b9f 	vldr	d1, [pc, #636]	@ 8008b00 <imu_sensor_fusion+0x300>
 8008886:	4610      	mov	r0, r2
 8008888:	eeb0 0a47 	vmov.f32	s0, s14
 800888c:	eef0 0a67 	vmov.f32	s1, s15
 8008890:	f7ff ff14 	bl	80086bc <low_pass_filter>
 8008894:	eeb0 7a40 	vmov.f32	s14, s0
 8008898:	eef0 7a60 	vmov.f32	s15, s1
 800889c:	ed84 7b00 	vstr	d7, [r4]

    // Calculate pitch and roll from accelerometer data
    double pitch_accel_meas = atan2(-accel_data[0], sqrt(accel_data[1] * accel_data[1] + accel_data[2] * accel_data[2]));
 80088a0:	697b      	ldr	r3, [r7, #20]
 80088a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088a6:	4690      	mov	r8, r2
 80088a8:	f083 4900 	eor.w	r9, r3, #2147483648	@ 0x80000000
 80088ac:	697b      	ldr	r3, [r7, #20]
 80088ae:	3308      	adds	r3, #8
 80088b0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80088b4:	697b      	ldr	r3, [r7, #20]
 80088b6:	3308      	adds	r3, #8
 80088b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088bc:	f7f7 fe9c 	bl	80005f8 <__aeabi_dmul>
 80088c0:	4602      	mov	r2, r0
 80088c2:	460b      	mov	r3, r1
 80088c4:	4614      	mov	r4, r2
 80088c6:	461d      	mov	r5, r3
 80088c8:	697b      	ldr	r3, [r7, #20]
 80088ca:	3310      	adds	r3, #16
 80088cc:	e9d3 0100 	ldrd	r0, r1, [r3]
 80088d0:	697b      	ldr	r3, [r7, #20]
 80088d2:	3310      	adds	r3, #16
 80088d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088d8:	f7f7 fe8e 	bl	80005f8 <__aeabi_dmul>
 80088dc:	4602      	mov	r2, r0
 80088de:	460b      	mov	r3, r1
 80088e0:	4620      	mov	r0, r4
 80088e2:	4629      	mov	r1, r5
 80088e4:	f7f7 fcd2 	bl	800028c <__adddf3>
 80088e8:	4602      	mov	r2, r0
 80088ea:	460b      	mov	r3, r1
 80088ec:	ec43 2b17 	vmov	d7, r2, r3
 80088f0:	eeb0 0a47 	vmov.f32	s0, s14
 80088f4:	eef0 0a67 	vmov.f32	s1, s15
 80088f8:	f019 fd08 	bl	802230c <sqrt>
 80088fc:	eeb0 7a40 	vmov.f32	s14, s0
 8008900:	eef0 7a60 	vmov.f32	s15, s1
 8008904:	eeb0 1a47 	vmov.f32	s2, s14
 8008908:	eef0 1a67 	vmov.f32	s3, s15
 800890c:	ec49 8b10 	vmov	d0, r8, r9
 8008910:	f019 fc8a 	bl	8022228 <atan2>
 8008914:	ed87 0b08 	vstr	d0, [r7, #32]
    double roll_accel_meas = atan2(accel_data[1], accel_data[2]);
 8008918:	697b      	ldr	r3, [r7, #20]
 800891a:	3308      	adds	r3, #8
 800891c:	ed93 7b00 	vldr	d7, [r3]
 8008920:	697b      	ldr	r3, [r7, #20]
 8008922:	3310      	adds	r3, #16
 8008924:	ed93 6b00 	vldr	d6, [r3]
 8008928:	eeb0 1a46 	vmov.f32	s2, s12
 800892c:	eef0 1a66 	vmov.f32	s3, s13
 8008930:	eeb0 0a47 	vmov.f32	s0, s14
 8008934:	eef0 0a67 	vmov.f32	s1, s15
 8008938:	f019 fc76 	bl	8022228 <atan2>
 800893c:	ed87 0b06 	vstr	d0, [r7, #24]

    // Apply complementary filter
    imu->pitch = ALPHA * (imu->pitch + gyro_data[1] * dt) + (1 - ALPHA) * pitch_accel_meas;
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	e9d3 4500 	ldrd	r4, r5, [r3]
 8008946:	693b      	ldr	r3, [r7, #16]
 8008948:	3308      	adds	r3, #8
 800894a:	e9d3 0100 	ldrd	r0, r1, [r3]
 800894e:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008952:	f7f7 fe51 	bl	80005f8 <__aeabi_dmul>
 8008956:	4602      	mov	r2, r0
 8008958:	460b      	mov	r3, r1
 800895a:	4620      	mov	r0, r4
 800895c:	4629      	mov	r1, r5
 800895e:	f7f7 fc95 	bl	800028c <__adddf3>
 8008962:	4602      	mov	r2, r0
 8008964:	460b      	mov	r3, r1
 8008966:	4610      	mov	r0, r2
 8008968:	4619      	mov	r1, r3
 800896a:	a36a      	add	r3, pc, #424	@ (adr r3, 8008b14 <imu_sensor_fusion+0x314>)
 800896c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008970:	f7f7 fe42 	bl	80005f8 <__aeabi_dmul>
 8008974:	4602      	mov	r2, r0
 8008976:	460b      	mov	r3, r1
 8008978:	4614      	mov	r4, r2
 800897a:	461d      	mov	r5, r3
 800897c:	a367      	add	r3, pc, #412	@ (adr r3, 8008b1c <imu_sensor_fusion+0x31c>)
 800897e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008982:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8008986:	f7f7 fe37 	bl	80005f8 <__aeabi_dmul>
 800898a:	4602      	mov	r2, r0
 800898c:	460b      	mov	r3, r1
 800898e:	4620      	mov	r0, r4
 8008990:	4629      	mov	r1, r5
 8008992:	f7f7 fc7b 	bl	800028c <__adddf3>
 8008996:	4602      	mov	r2, r0
 8008998:	460b      	mov	r3, r1
 800899a:	6879      	ldr	r1, [r7, #4]
 800899c:	e9c1 2300 	strd	r2, r3, [r1]
    imu->roll = ALPHA * (imu->roll + gyro_data[0] * dt) + (1 - ALPHA) * roll_accel_meas;
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	e9d3 4506 	ldrd	r4, r5, [r3, #24]
 80089a6:	693b      	ldr	r3, [r7, #16]
 80089a8:	e9d3 0100 	ldrd	r0, r1, [r3]
 80089ac:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80089b0:	f7f7 fe22 	bl	80005f8 <__aeabi_dmul>
 80089b4:	4602      	mov	r2, r0
 80089b6:	460b      	mov	r3, r1
 80089b8:	4620      	mov	r0, r4
 80089ba:	4629      	mov	r1, r5
 80089bc:	f7f7 fc66 	bl	800028c <__adddf3>
 80089c0:	4602      	mov	r2, r0
 80089c2:	460b      	mov	r3, r1
 80089c4:	4610      	mov	r0, r2
 80089c6:	4619      	mov	r1, r3
 80089c8:	a352      	add	r3, pc, #328	@ (adr r3, 8008b14 <imu_sensor_fusion+0x314>)
 80089ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089ce:	f7f7 fe13 	bl	80005f8 <__aeabi_dmul>
 80089d2:	4602      	mov	r2, r0
 80089d4:	460b      	mov	r3, r1
 80089d6:	4614      	mov	r4, r2
 80089d8:	461d      	mov	r5, r3
 80089da:	a350      	add	r3, pc, #320	@ (adr r3, 8008b1c <imu_sensor_fusion+0x31c>)
 80089dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089e0:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80089e4:	f7f7 fe08 	bl	80005f8 <__aeabi_dmul>
 80089e8:	4602      	mov	r2, r0
 80089ea:	460b      	mov	r3, r1
 80089ec:	4620      	mov	r0, r4
 80089ee:	4629      	mov	r1, r5
 80089f0:	f7f7 fc4c 	bl	800028c <__adddf3>
 80089f4:	4602      	mov	r2, r0
 80089f6:	460b      	mov	r3, r1
 80089f8:	6879      	ldr	r1, [r7, #4]
 80089fa:	e9c1 2306 	strd	r2, r3, [r1, #24]
    imu->yaw += gyro_data[2] * dt;
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	e9d3 450c 	ldrd	r4, r5, [r3, #48]	@ 0x30
 8008a04:	693b      	ldr	r3, [r7, #16]
 8008a06:	3310      	adds	r3, #16
 8008a08:	e9d3 0100 	ldrd	r0, r1, [r3]
 8008a0c:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008a10:	f7f7 fdf2 	bl	80005f8 <__aeabi_dmul>
 8008a14:	4602      	mov	r2, r0
 8008a16:	460b      	mov	r3, r1
 8008a18:	4620      	mov	r0, r4
 8008a1a:	4629      	mov	r1, r5
 8008a1c:	f7f7 fc36 	bl	800028c <__adddf3>
 8008a20:	4602      	mov	r2, r0
 8008a22:	460b      	mov	r3, r1
 8008a24:	6879      	ldr	r1, [r7, #4]
 8008a26:	e9c1 230c 	strd	r2, r3, [r1, #48]	@ 0x30

    // Calculate speed (rate of change of angles) directly from gyroscope data
    imu->pitch_speed = gyro_data[1];
 8008a2a:	693b      	ldr	r3, [r7, #16]
 8008a2c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8008a30:	6879      	ldr	r1, [r7, #4]
 8008a32:	e9c1 2302 	strd	r2, r3, [r1, #8]
    imu->roll_speed = gyro_data[0];
 8008a36:	693b      	ldr	r3, [r7, #16]
 8008a38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a3c:	6879      	ldr	r1, [r7, #4]
 8008a3e:	e9c1 2308 	strd	r2, r3, [r1, #32]
    imu->yaw_speed = gyro_data[2];
 8008a42:	693b      	ldr	r3, [r7, #16]
 8008a44:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8008a48:	6879      	ldr	r1, [r7, #4]
 8008a4a:	e9c1 230e 	strd	r2, r3, [r1, #56]	@ 0x38

    // Calculate acceleration (rate of change of speeds)
    static double last_pitch_speed = 0, last_roll_speed = 0, last_yaw_speed = 0;
    imu->pitch_accel = (imu->pitch_speed - last_pitch_speed) / dt;
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	e9d3 0102 	ldrd	r0, r1, [r3, #8]
 8008a54:	4b2c      	ldr	r3, [pc, #176]	@ (8008b08 <imu_sensor_fusion+0x308>)
 8008a56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a5a:	f7f7 fc15 	bl	8000288 <__aeabi_dsub>
 8008a5e:	4602      	mov	r2, r0
 8008a60:	460b      	mov	r3, r1
 8008a62:	4610      	mov	r0, r2
 8008a64:	4619      	mov	r1, r3
 8008a66:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008a6a:	f7f7 feef 	bl	800084c <__aeabi_ddiv>
 8008a6e:	4602      	mov	r2, r0
 8008a70:	460b      	mov	r3, r1
 8008a72:	6879      	ldr	r1, [r7, #4]
 8008a74:	e9c1 2304 	strd	r2, r3, [r1, #16]
    imu->roll_accel = (imu->roll_speed - last_roll_speed) / dt;
 8008a78:	687b      	ldr	r3, [r7, #4]
 8008a7a:	e9d3 0108 	ldrd	r0, r1, [r3, #32]
 8008a7e:	4b23      	ldr	r3, [pc, #140]	@ (8008b0c <imu_sensor_fusion+0x30c>)
 8008a80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a84:	f7f7 fc00 	bl	8000288 <__aeabi_dsub>
 8008a88:	4602      	mov	r2, r0
 8008a8a:	460b      	mov	r3, r1
 8008a8c:	4610      	mov	r0, r2
 8008a8e:	4619      	mov	r1, r3
 8008a90:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008a94:	f7f7 feda 	bl	800084c <__aeabi_ddiv>
 8008a98:	4602      	mov	r2, r0
 8008a9a:	460b      	mov	r3, r1
 8008a9c:	6879      	ldr	r1, [r7, #4]
 8008a9e:	e9c1 230a 	strd	r2, r3, [r1, #40]	@ 0x28
    imu->yaw_accel = (imu->yaw_speed - last_yaw_speed) / dt;
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	e9d3 010e 	ldrd	r0, r1, [r3, #56]	@ 0x38
 8008aa8:	4b19      	ldr	r3, [pc, #100]	@ (8008b10 <imu_sensor_fusion+0x310>)
 8008aaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008aae:	f7f7 fbeb 	bl	8000288 <__aeabi_dsub>
 8008ab2:	4602      	mov	r2, r0
 8008ab4:	460b      	mov	r3, r1
 8008ab6:	4610      	mov	r0, r2
 8008ab8:	4619      	mov	r1, r3
 8008aba:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8008abe:	f7f7 fec5 	bl	800084c <__aeabi_ddiv>
 8008ac2:	4602      	mov	r2, r0
 8008ac4:	460b      	mov	r3, r1
 8008ac6:	6879      	ldr	r1, [r7, #4]
 8008ac8:	e9c1 2310 	strd	r2, r3, [r1, #64]	@ 0x40

    // Update last speeds
    last_pitch_speed = imu->pitch_speed;
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8008ad2:	490d      	ldr	r1, [pc, #52]	@ (8008b08 <imu_sensor_fusion+0x308>)
 8008ad4:	e9c1 2300 	strd	r2, r3, [r1]
    last_roll_speed = imu->roll_speed;
 8008ad8:	687b      	ldr	r3, [r7, #4]
 8008ada:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8008ade:	490b      	ldr	r1, [pc, #44]	@ (8008b0c <imu_sensor_fusion+0x30c>)
 8008ae0:	e9c1 2300 	strd	r2, r3, [r1]
    last_yaw_speed = imu->yaw_speed;
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	e9d3 230e 	ldrd	r2, r3, [r3, #56]	@ 0x38
 8008aea:	4909      	ldr	r1, [pc, #36]	@ (8008b10 <imu_sensor_fusion+0x310>)
 8008aec:	e9c1 2300 	strd	r2, r3, [r1]

    // Calculate vertical acceleration (z-axis acceleration)
    imu->vertical_accel = sqrt((accel_data[0]*accel_data[0]) + (accel_data[1]*accel_data[1]) + (accel_data[2]*accel_data[2]));
 8008af0:	697b      	ldr	r3, [r7, #20]
 8008af2:	e9d3 0100 	ldrd	r0, r1, [r3]
 8008af6:	697b      	ldr	r3, [r7, #20]
 8008af8:	e014      	b.n	8008b24 <imu_sensor_fusion+0x324>
 8008afa:	bf00      	nop
 8008afc:	f3af 8000 	nop.w
 8008b00:	00000000 	.word	0x00000000
 8008b04:	3fe00000 	.word	0x3fe00000
 8008b08:	20003b30 	.word	0x20003b30
 8008b0c:	20003b38 	.word	0x20003b38
 8008b10:	20003b40 	.word	0x20003b40
 8008b14:	f5c28f5c 	.word	0xf5c28f5c
 8008b18:	3fef5c28 	.word	0x3fef5c28
 8008b1c:	47ae1480 	.word	0x47ae1480
 8008b20:	3f947ae1 	.word	0x3f947ae1
 8008b24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b28:	f7f7 fd66 	bl	80005f8 <__aeabi_dmul>
 8008b2c:	4602      	mov	r2, r0
 8008b2e:	460b      	mov	r3, r1
 8008b30:	4614      	mov	r4, r2
 8008b32:	461d      	mov	r5, r3
 8008b34:	697b      	ldr	r3, [r7, #20]
 8008b36:	3308      	adds	r3, #8
 8008b38:	e9d3 0100 	ldrd	r0, r1, [r3]
 8008b3c:	697b      	ldr	r3, [r7, #20]
 8008b3e:	3308      	adds	r3, #8
 8008b40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b44:	f7f7 fd58 	bl	80005f8 <__aeabi_dmul>
 8008b48:	4602      	mov	r2, r0
 8008b4a:	460b      	mov	r3, r1
 8008b4c:	4620      	mov	r0, r4
 8008b4e:	4629      	mov	r1, r5
 8008b50:	f7f7 fb9c 	bl	800028c <__adddf3>
 8008b54:	4602      	mov	r2, r0
 8008b56:	460b      	mov	r3, r1
 8008b58:	4614      	mov	r4, r2
 8008b5a:	461d      	mov	r5, r3
 8008b5c:	697b      	ldr	r3, [r7, #20]
 8008b5e:	3310      	adds	r3, #16
 8008b60:	e9d3 0100 	ldrd	r0, r1, [r3]
 8008b64:	697b      	ldr	r3, [r7, #20]
 8008b66:	3310      	adds	r3, #16
 8008b68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b6c:	f7f7 fd44 	bl	80005f8 <__aeabi_dmul>
 8008b70:	4602      	mov	r2, r0
 8008b72:	460b      	mov	r3, r1
 8008b74:	4620      	mov	r0, r4
 8008b76:	4629      	mov	r1, r5
 8008b78:	f7f7 fb88 	bl	800028c <__adddf3>
 8008b7c:	4602      	mov	r2, r0
 8008b7e:	460b      	mov	r3, r1
 8008b80:	ec43 2b17 	vmov	d7, r2, r3
 8008b84:	eeb0 0a47 	vmov.f32	s0, s14
 8008b88:	eef0 0a67 	vmov.f32	s1, s15
 8008b8c:	f019 fbbe 	bl	802230c <sqrt>
 8008b90:	eeb0 7a40 	vmov.f32	s14, s0
 8008b94:	eef0 7a60 	vmov.f32	s15, s1
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	ed83 7b12 	vstr	d7, [r3, #72]	@ 0x48
}
 8008b9e:	bf00      	nop
 8008ba0:	3728      	adds	r7, #40	@ 0x28
 8008ba2:	46bd      	mov	sp, r7
 8008ba4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}

08008ba8 <imu_proc_task_notif>:

void imu_proc_task_notif() {
 8008ba8:	b580      	push	{r7, lr}
 8008baa:	b082      	sub	sp, #8
 8008bac:	af00      	add	r7, sp, #0
	//resets the flags
	update_flag = 0b000;
 8008bae:	4b0d      	ldr	r3, [pc, #52]	@ (8008be4 <imu_proc_task_notif+0x3c>)
 8008bb0:	2200      	movs	r2, #0
 8008bb2:	701a      	strb	r2, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken;
	xHigherPriorityTaskWoken = pdFALSE;
 8008bb4:	2300      	movs	r3, #0
 8008bb6:	607b      	str	r3, [r7, #4]
	vTaskNotifyGiveFromISR(imu_processing_task_handle, &xHigherPriorityTaskWoken);
 8008bb8:	4b0b      	ldr	r3, [pc, #44]	@ (8008be8 <imu_proc_task_notif+0x40>)
 8008bba:	681b      	ldr	r3, [r3, #0]
 8008bbc:	1d3a      	adds	r2, r7, #4
 8008bbe:	4611      	mov	r1, r2
 8008bc0:	4618      	mov	r0, r3
 8008bc2:	f012 ffdb 	bl	801bb7c <vTaskNotifyGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken)
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	2b00      	cmp	r3, #0
 8008bca:	d007      	beq.n	8008bdc <imu_proc_task_notif+0x34>
 8008bcc:	4b07      	ldr	r3, [pc, #28]	@ (8008bec <imu_proc_task_notif+0x44>)
 8008bce:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008bd2:	601a      	str	r2, [r3, #0]
 8008bd4:	f3bf 8f4f 	dsb	sy
 8008bd8:	f3bf 8f6f 	isb	sy
}
 8008bdc:	bf00      	nop
 8008bde:	3708      	adds	r7, #8
 8008be0:	46bd      	mov	sp, r7
 8008be2:	bd80      	pop	{r7, pc}
 8008be4:	20003b2c 	.word	0x20003b2c
 8008be8:	20003b5c 	.word	0x20003b5c
 8008bec:	e000ed04 	.word	0xe000ed04

08008bf0 <gyro_data_ready>:

void gyro_data_ready(gyro_data_t gyro_data) {
 8008bf0:	b590      	push	{r4, r7, lr}
 8008bf2:	b085      	sub	sp, #20
 8008bf4:	af00      	add	r7, sp, #0
 8008bf6:	463c      	mov	r4, r7
 8008bf8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		gyro_proc_data.gx = gyro_data.gz;
		gyro_proc_data.gy = gyro_data.gy;
		gyro_proc_data.gz = -gyro_data.gx;
	} else {

		gyro_proc_data.gx = gyro_data.gx;
 8008bfc:	683b      	ldr	r3, [r7, #0]
 8008bfe:	4a22      	ldr	r2, [pc, #136]	@ (8008c88 <gyro_data_ready+0x98>)
 8008c00:	6013      	str	r3, [r2, #0]
		gyro_proc_data.gy = gyro_data.gy;
 8008c02:	687b      	ldr	r3, [r7, #4]
 8008c04:	4a20      	ldr	r2, [pc, #128]	@ (8008c88 <gyro_data_ready+0x98>)
 8008c06:	6053      	str	r3, [r2, #4]
		if (gyro_data.gz > 0.02 || gyro_data.gz < -0.02){
 8008c08:	68bb      	ldr	r3, [r7, #8]
 8008c0a:	4618      	mov	r0, r3
 8008c0c:	f7f7 fc9c 	bl	8000548 <__aeabi_f2d>
 8008c10:	a319      	add	r3, pc, #100	@ (adr r3, 8008c78 <gyro_data_ready+0x88>)
 8008c12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c16:	f7f7 ff7f 	bl	8000b18 <__aeabi_dcmpgt>
 8008c1a:	4603      	mov	r3, r0
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d10b      	bne.n	8008c38 <gyro_data_ready+0x48>
 8008c20:	68bb      	ldr	r3, [r7, #8]
 8008c22:	4618      	mov	r0, r3
 8008c24:	f7f7 fc90 	bl	8000548 <__aeabi_f2d>
 8008c28:	a315      	add	r3, pc, #84	@ (adr r3, 8008c80 <gyro_data_ready+0x90>)
 8008c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c2e:	f7f7 ff55 	bl	8000adc <__aeabi_dcmplt>
 8008c32:	4603      	mov	r3, r0
 8008c34:	2b00      	cmp	r3, #0
 8008c36:	d003      	beq.n	8008c40 <gyro_data_ready+0x50>
			gyro_proc_data.gz = gyro_data.gz;
 8008c38:	68bb      	ldr	r3, [r7, #8]
 8008c3a:	4a13      	ldr	r2, [pc, #76]	@ (8008c88 <gyro_data_ready+0x98>)
 8008c3c:	6093      	str	r3, [r2, #8]
 8008c3e:	e003      	b.n	8008c48 <gyro_data_ready+0x58>
		} else {
			gyro_proc_data.gz = 0;
 8008c40:	4b11      	ldr	r3, [pc, #68]	@ (8008c88 <gyro_data_ready+0x98>)
 8008c42:	f04f 0200 	mov.w	r2, #0
 8008c46:	609a      	str	r2, [r3, #8]
		}

	}
	gyro_proc_data.last_gyro_update = gyro_data.last_gyro_update;
 8008c48:	68fb      	ldr	r3, [r7, #12]
 8008c4a:	4a0f      	ldr	r2, [pc, #60]	@ (8008c88 <gyro_data_ready+0x98>)
 8008c4c:	60d3      	str	r3, [r2, #12]

	update_flag |= 1; //sets bit 0 to true
 8008c4e:	4b0f      	ldr	r3, [pc, #60]	@ (8008c8c <gyro_data_ready+0x9c>)
 8008c50:	781b      	ldrb	r3, [r3, #0]
 8008c52:	f043 0301 	orr.w	r3, r3, #1
 8008c56:	b2da      	uxtb	r2, r3
 8008c58:	4b0c      	ldr	r3, [pc, #48]	@ (8008c8c <gyro_data_ready+0x9c>)
 8008c5a:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when all the data is new
	if (update_flag == 0b111|| update_flag == 0b011) {
 8008c5c:	4b0b      	ldr	r3, [pc, #44]	@ (8008c8c <gyro_data_ready+0x9c>)
 8008c5e:	781b      	ldrb	r3, [r3, #0]
 8008c60:	2b07      	cmp	r3, #7
 8008c62:	d003      	beq.n	8008c6c <gyro_data_ready+0x7c>
 8008c64:	4b09      	ldr	r3, [pc, #36]	@ (8008c8c <gyro_data_ready+0x9c>)
 8008c66:	781b      	ldrb	r3, [r3, #0]
 8008c68:	2b03      	cmp	r3, #3
 8008c6a:	d101      	bne.n	8008c70 <gyro_data_ready+0x80>
		imu_proc_task_notif();
 8008c6c:	f7ff ff9c 	bl	8008ba8 <imu_proc_task_notif>
	}
}
 8008c70:	bf00      	nop
 8008c72:	3714      	adds	r7, #20
 8008c74:	46bd      	mov	sp, r7
 8008c76:	bd90      	pop	{r4, r7, pc}
 8008c78:	47ae147b 	.word	0x47ae147b
 8008c7c:	3f947ae1 	.word	0x3f947ae1
 8008c80:	47ae147b 	.word	0x47ae147b
 8008c84:	bf947ae1 	.word	0xbf947ae1
 8008c88:	20003b10 	.word	0x20003b10
 8008c8c:	20003b2c 	.word	0x20003b2c

08008c90 <accel_data_ready>:

void accel_data_ready(accel_data_t accel_data) {
 8008c90:	b590      	push	{r4, r7, lr}
 8008c92:	b085      	sub	sp, #20
 8008c94:	af00      	add	r7, sp, #0
 8008c96:	463c      	mov	r4, r7
 8008c98:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		accel_proc_data.ax = accel_data.az;
		accel_proc_data.ay = accel_data.ay;
		accel_proc_data.az = -accel_data.ax;
	} else {

		accel_proc_data.ax = accel_data.ax;
 8008c9c:	683b      	ldr	r3, [r7, #0]
 8008c9e:	4a10      	ldr	r2, [pc, #64]	@ (8008ce0 <accel_data_ready+0x50>)
 8008ca0:	6013      	str	r3, [r2, #0]
		accel_proc_data.ay = accel_data.ay;
 8008ca2:	687b      	ldr	r3, [r7, #4]
 8008ca4:	4a0e      	ldr	r2, [pc, #56]	@ (8008ce0 <accel_data_ready+0x50>)
 8008ca6:	6053      	str	r3, [r2, #4]
		accel_proc_data.az = accel_data.az;
 8008ca8:	68bb      	ldr	r3, [r7, #8]
 8008caa:	4a0d      	ldr	r2, [pc, #52]	@ (8008ce0 <accel_data_ready+0x50>)
 8008cac:	6093      	str	r3, [r2, #8]
	}

	accel_proc_data.last_accel_update = accel_data.last_accel_update;
 8008cae:	68fb      	ldr	r3, [r7, #12]
 8008cb0:	4a0b      	ldr	r2, [pc, #44]	@ (8008ce0 <accel_data_ready+0x50>)
 8008cb2:	60d3      	str	r3, [r2, #12]

	update_flag |= 1 << 1; //sets bit 1 to true
 8008cb4:	4b0b      	ldr	r3, [pc, #44]	@ (8008ce4 <accel_data_ready+0x54>)
 8008cb6:	781b      	ldrb	r3, [r3, #0]
 8008cb8:	f043 0302 	orr.w	r3, r3, #2
 8008cbc:	b2da      	uxtb	r2, r3
 8008cbe:	4b09      	ldr	r3, [pc, #36]	@ (8008ce4 <accel_data_ready+0x54>)
 8008cc0:	701a      	strb	r2, [r3, #0]
	//only allows task to be run when accel and gyro data are new
	if (update_flag == 0b111 || update_flag == 0b011) {
 8008cc2:	4b08      	ldr	r3, [pc, #32]	@ (8008ce4 <accel_data_ready+0x54>)
 8008cc4:	781b      	ldrb	r3, [r3, #0]
 8008cc6:	2b07      	cmp	r3, #7
 8008cc8:	d003      	beq.n	8008cd2 <accel_data_ready+0x42>
 8008cca:	4b06      	ldr	r3, [pc, #24]	@ (8008ce4 <accel_data_ready+0x54>)
 8008ccc:	781b      	ldrb	r3, [r3, #0]
 8008cce:	2b03      	cmp	r3, #3
 8008cd0:	d101      	bne.n	8008cd6 <accel_data_ready+0x46>
		imu_proc_task_notif();
 8008cd2:	f7ff ff69 	bl	8008ba8 <imu_proc_task_notif>
	}
}
 8008cd6:	bf00      	nop
 8008cd8:	3714      	adds	r7, #20
 8008cda:	46bd      	mov	sp, r7
 8008cdc:	bd90      	pop	{r4, r7, pc}
 8008cde:	bf00      	nop
 8008ce0:	20003b00 	.word	0x20003b00
 8008ce4:	20003b2c 	.word	0x20003b2c

08008ce8 <mag_data_ready>:

void mag_data_ready(mag_data_t mag_data) {
 8008ce8:	b480      	push	{r7}
 8008cea:	b085      	sub	sp, #20
 8008cec:	af00      	add	r7, sp, #0
 8008cee:	1d3b      	adds	r3, r7, #4
 8008cf0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	mag_proc_data.mx = mag_data.mx;
 8008cf4:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 8008cf8:	4b0c      	ldr	r3, [pc, #48]	@ (8008d2c <mag_data_ready+0x44>)
 8008cfa:	801a      	strh	r2, [r3, #0]
	mag_proc_data.my = mag_data.my;
 8008cfc:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8008d00:	4b0a      	ldr	r3, [pc, #40]	@ (8008d2c <mag_data_ready+0x44>)
 8008d02:	805a      	strh	r2, [r3, #2]
	mag_proc_data.mz = mag_data.mz;
 8008d04:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8008d08:	4b08      	ldr	r3, [pc, #32]	@ (8008d2c <mag_data_ready+0x44>)
 8008d0a:	809a      	strh	r2, [r3, #4]
	mag_proc_data.last_mag_update = mag_data.last_mag_update;
 8008d0c:	68fb      	ldr	r3, [r7, #12]
 8008d0e:	4a07      	ldr	r2, [pc, #28]	@ (8008d2c <mag_data_ready+0x44>)
 8008d10:	6093      	str	r3, [r2, #8]

	update_flag |= 1 << 2;
 8008d12:	4b07      	ldr	r3, [pc, #28]	@ (8008d30 <mag_data_ready+0x48>)
 8008d14:	781b      	ldrb	r3, [r3, #0]
 8008d16:	f043 0304 	orr.w	r3, r3, #4
 8008d1a:	b2da      	uxtb	r2, r3
 8008d1c:	4b04      	ldr	r3, [pc, #16]	@ (8008d30 <mag_data_ready+0x48>)
 8008d1e:	701a      	strb	r2, [r3, #0]
	if (update_flag == 0b111) {
		//disabled as magnetometer data is not used
		//imu_proc_task_notif();
	}
}
 8008d20:	bf00      	nop
 8008d22:	3714      	adds	r7, #20
 8008d24:	46bd      	mov	sp, r7
 8008d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d2a:	4770      	bx	lr
 8008d2c:	20003b20 	.word	0x20003b20
 8008d30:	20003b2c 	.word	0x20003b2c

08008d34 <imu_processing_task>:

void imu_processing_task(void *argument) {
 8008d34:	b580      	push	{r7, lr}
 8008d36:	b082      	sub	sp, #8
 8008d38:	af00      	add	r7, sp, #0
 8008d3a:	6078      	str	r0, [r7, #4]
	imu_start_ints();
 8008d3c:	f7f8 ff46 	bl	8001bcc <imu_start_ints>
	ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8008d40:	f04f 31ff 	mov.w	r1, #4294967295
 8008d44:	2001      	movs	r0, #1
 8008d46:	f012 fecd 	bl	801bae4 <ulTaskNotifyTake>
	imu_attitude_update();
 8008d4a:	f000 f815 	bl	8008d78 <imu_attitude_update>
//	quat_startup();
	while (1) {
		fusion();
 8008d4e:	f7ff fbbb 	bl	80084c8 <fusion>
		ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8008d52:	f04f 31ff 	mov.w	r1, #4294967295
 8008d56:	2001      	movs	r0, #1
 8008d58:	f012 fec4 	bl	801bae4 <ulTaskNotifyTake>
		imu_attitude_update();
 8008d5c:	f000 f80c 	bl	8008d78 <imu_attitude_update>
		portYIELD();
 8008d60:	4b04      	ldr	r3, [pc, #16]	@ (8008d74 <imu_processing_task+0x40>)
 8008d62:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008d66:	601a      	str	r2, [r3, #0]
 8008d68:	f3bf 8f4f 	dsb	sy
 8008d6c:	f3bf 8f6f 	isb	sy
		fusion();
 8008d70:	bf00      	nop
 8008d72:	e7ec      	b.n	8008d4e <imu_processing_task+0x1a>
 8008d74:	e000ed04 	.word	0xe000ed04

08008d78 <imu_attitude_update>:
	}
}


void imu_attitude_update(void) {
 8008d78:	b480      	push	{r7}
 8008d7a:	af00      	add	r7, sp, #0

}
 8008d7c:	bf00      	nop
 8008d7e:	46bd      	mov	sp, r7
 8008d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d84:	4770      	bx	lr
	...

08008d88 <rt_atan2d_snf>:
 8008d88:	b5b0      	push	{r4, r5, r7, lr}
 8008d8a:	b088      	sub	sp, #32
 8008d8c:	af00      	add	r7, sp, #0
 8008d8e:	ed87 0b02 	vstr	d0, [r7, #8]
 8008d92:	ed87 1b00 	vstr	d1, [r7]
 8008d96:	ed97 0b02 	vldr	d0, [r7, #8]
 8008d9a:	f004 fe43 	bl	800da24 <rtIsNaN>
 8008d9e:	4603      	mov	r3, r0
 8008da0:	2b00      	cmp	r3, #0
 8008da2:	d106      	bne.n	8008db2 <rt_atan2d_snf+0x2a>
 8008da4:	ed97 0b00 	vldr	d0, [r7]
 8008da8:	f004 fe3c 	bl	800da24 <rtIsNaN>
 8008dac:	4603      	mov	r3, r0
 8008dae:	2b00      	cmp	r3, #0
 8008db0:	d005      	beq.n	8008dbe <rt_atan2d_snf+0x36>
 8008db2:	4b4d      	ldr	r3, [pc, #308]	@ (8008ee8 <rt_atan2d_snf+0x160>)
 8008db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008db8:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8008dbc:	e07e      	b.n	8008ebc <rt_atan2d_snf+0x134>
 8008dbe:	ed97 0b02 	vldr	d0, [r7, #8]
 8008dc2:	f004 fe01 	bl	800d9c8 <rtIsInf>
 8008dc6:	4603      	mov	r3, r0
 8008dc8:	2b00      	cmp	r3, #0
 8008dca:	d03b      	beq.n	8008e44 <rt_atan2d_snf+0xbc>
 8008dcc:	ed97 0b00 	vldr	d0, [r7]
 8008dd0:	f004 fdfa 	bl	800d9c8 <rtIsInf>
 8008dd4:	4603      	mov	r3, r0
 8008dd6:	2b00      	cmp	r3, #0
 8008dd8:	d034      	beq.n	8008e44 <rt_atan2d_snf+0xbc>
 8008dda:	f04f 0200 	mov.w	r2, #0
 8008dde:	f04f 0300 	mov.w	r3, #0
 8008de2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8008de6:	f7f7 fe97 	bl	8000b18 <__aeabi_dcmpgt>
 8008dea:	4603      	mov	r3, r0
 8008dec:	2b00      	cmp	r3, #0
 8008dee:	d002      	beq.n	8008df6 <rt_atan2d_snf+0x6e>
 8008df0:	2301      	movs	r3, #1
 8008df2:	617b      	str	r3, [r7, #20]
 8008df4:	e002      	b.n	8008dfc <rt_atan2d_snf+0x74>
 8008df6:	f04f 33ff 	mov.w	r3, #4294967295
 8008dfa:	617b      	str	r3, [r7, #20]
 8008dfc:	f04f 0200 	mov.w	r2, #0
 8008e00:	f04f 0300 	mov.w	r3, #0
 8008e04:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008e08:	f7f7 fe86 	bl	8000b18 <__aeabi_dcmpgt>
 8008e0c:	4603      	mov	r3, r0
 8008e0e:	2b00      	cmp	r3, #0
 8008e10:	d002      	beq.n	8008e18 <rt_atan2d_snf+0x90>
 8008e12:	2301      	movs	r3, #1
 8008e14:	613b      	str	r3, [r7, #16]
 8008e16:	e002      	b.n	8008e1e <rt_atan2d_snf+0x96>
 8008e18:	f04f 33ff 	mov.w	r3, #4294967295
 8008e1c:	613b      	str	r3, [r7, #16]
 8008e1e:	6978      	ldr	r0, [r7, #20]
 8008e20:	f7f7 fb80 	bl	8000524 <__aeabi_i2d>
 8008e24:	4604      	mov	r4, r0
 8008e26:	460d      	mov	r5, r1
 8008e28:	6938      	ldr	r0, [r7, #16]
 8008e2a:	f7f7 fb7b 	bl	8000524 <__aeabi_i2d>
 8008e2e:	4602      	mov	r2, r0
 8008e30:	460b      	mov	r3, r1
 8008e32:	ec43 2b11 	vmov	d1, r2, r3
 8008e36:	ec45 4b10 	vmov	d0, r4, r5
 8008e3a:	f019 f9f5 	bl	8022228 <atan2>
 8008e3e:	ed87 0b06 	vstr	d0, [r7, #24]
 8008e42:	e03b      	b.n	8008ebc <rt_atan2d_snf+0x134>
 8008e44:	f04f 0200 	mov.w	r2, #0
 8008e48:	f04f 0300 	mov.w	r3, #0
 8008e4c:	e9d7 0100 	ldrd	r0, r1, [r7]
 8008e50:	f7f7 fe3a 	bl	8000ac8 <__aeabi_dcmpeq>
 8008e54:	4603      	mov	r3, r0
 8008e56:	2b00      	cmp	r3, #0
 8008e58:	d028      	beq.n	8008eac <rt_atan2d_snf+0x124>
 8008e5a:	f04f 0200 	mov.w	r2, #0
 8008e5e:	f04f 0300 	mov.w	r3, #0
 8008e62:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8008e66:	f7f7 fe57 	bl	8000b18 <__aeabi_dcmpgt>
 8008e6a:	4603      	mov	r3, r0
 8008e6c:	2b00      	cmp	r3, #0
 8008e6e:	d005      	beq.n	8008e7c <rt_atan2d_snf+0xf4>
 8008e70:	a319      	add	r3, pc, #100	@ (adr r3, 8008ed8 <rt_atan2d_snf+0x150>)
 8008e72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e76:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8008e7a:	e01f      	b.n	8008ebc <rt_atan2d_snf+0x134>
 8008e7c:	f04f 0200 	mov.w	r2, #0
 8008e80:	f04f 0300 	mov.w	r3, #0
 8008e84:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8008e88:	f7f7 fe28 	bl	8000adc <__aeabi_dcmplt>
 8008e8c:	4603      	mov	r3, r0
 8008e8e:	2b00      	cmp	r3, #0
 8008e90:	d005      	beq.n	8008e9e <rt_atan2d_snf+0x116>
 8008e92:	a313      	add	r3, pc, #76	@ (adr r3, 8008ee0 <rt_atan2d_snf+0x158>)
 8008e94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e98:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8008e9c:	e00e      	b.n	8008ebc <rt_atan2d_snf+0x134>
 8008e9e:	f04f 0200 	mov.w	r2, #0
 8008ea2:	f04f 0300 	mov.w	r3, #0
 8008ea6:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8008eaa:	e007      	b.n	8008ebc <rt_atan2d_snf+0x134>
 8008eac:	ed97 1b00 	vldr	d1, [r7]
 8008eb0:	ed97 0b02 	vldr	d0, [r7, #8]
 8008eb4:	f019 f9b8 	bl	8022228 <atan2>
 8008eb8:	ed87 0b06 	vstr	d0, [r7, #24]
 8008ebc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008ec0:	ec43 2b17 	vmov	d7, r2, r3
 8008ec4:	eeb0 0a47 	vmov.f32	s0, s14
 8008ec8:	eef0 0a67 	vmov.f32	s1, s15
 8008ecc:	3720      	adds	r7, #32
 8008ece:	46bd      	mov	sp, r7
 8008ed0:	bdb0      	pop	{r4, r5, r7, pc}
 8008ed2:	bf00      	nop
 8008ed4:	f3af 8000 	nop.w
 8008ed8:	54442d18 	.word	0x54442d18
 8008edc:	3ff921fb 	.word	0x3ff921fb
 8008ee0:	54442d18 	.word	0x54442d18
 8008ee4:	bff921fb 	.word	0xbff921fb
 8008ee8:	20000038 	.word	0x20000038
 8008eec:	00000000 	.word	0x00000000

08008ef0 <leg_pos>:
 8008ef0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008ef4:	b09a      	sub	sp, #104	@ 0x68
 8008ef6:	af00      	add	r7, sp, #0
 8008ef8:	ed87 0b04 	vstr	d0, [r7, #16]
 8008efc:	ed87 1b02 	vstr	d1, [r7, #8]
 8008f00:	6078      	str	r0, [r7, #4]
 8008f02:	ed97 0b04 	vldr	d0, [r7, #16]
 8008f06:	f019 fbc7 	bl	8022698 <cos>
 8008f0a:	ed87 0b18 	vstr	d0, [r7, #96]	@ 0x60
 8008f0e:	ed97 0b02 	vldr	d0, [r7, #8]
 8008f12:	f019 fbc1 	bl	8022698 <cos>
 8008f16:	ed87 0b16 	vstr	d0, [r7, #88]	@ 0x58
 8008f1a:	ed97 0b04 	vldr	d0, [r7, #16]
 8008f1e:	f019 fc17 	bl	8022750 <sin>
 8008f22:	ed87 0b14 	vstr	d0, [r7, #80]	@ 0x50
 8008f26:	ed97 0b02 	vldr	d0, [r7, #8]
 8008f2a:	f019 fc11 	bl	8022750 <sin>
 8008f2e:	ed87 0b12 	vstr	d0, [r7, #72]	@ 0x48
 8008f32:	a3c4      	add	r3, pc, #784	@ (adr r3, 8009244 <leg_pos+0x354>)
 8008f34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f38:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8008f3c:	f7f7 fb5c 	bl	80005f8 <__aeabi_dmul>
 8008f40:	4602      	mov	r2, r0
 8008f42:	460b      	mov	r3, r1
 8008f44:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 8008f48:	a3be      	add	r3, pc, #760	@ (adr r3, 8009244 <leg_pos+0x354>)
 8008f4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f4e:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008f52:	f7f7 fb51 	bl	80005f8 <__aeabi_dmul>
 8008f56:	4602      	mov	r2, r0
 8008f58:	460b      	mov	r3, r1
 8008f5a:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
 8008f5e:	a3bb      	add	r3, pc, #748	@ (adr r3, 800924c <leg_pos+0x35c>)
 8008f60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f64:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8008f68:	f7f7 fb46 	bl	80005f8 <__aeabi_dmul>
 8008f6c:	4602      	mov	r2, r0
 8008f6e:	460b      	mov	r3, r1
 8008f70:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
 8008f74:	a3b5      	add	r3, pc, #724	@ (adr r3, 800924c <leg_pos+0x35c>)
 8008f76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f7a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8008f7e:	f7f7 fb3b 	bl	80005f8 <__aeabi_dmul>
 8008f82:	4602      	mov	r2, r0
 8008f84:	460b      	mov	r3, r1
 8008f86:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8008f8a:	a3ae      	add	r3, pc, #696	@ (adr r3, 8009244 <leg_pos+0x354>)
 8008f8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f90:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 8008f94:	f7f7 fb30 	bl	80005f8 <__aeabi_dmul>
 8008f98:	4602      	mov	r2, r0
 8008f9a:	460b      	mov	r3, r1
 8008f9c:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8008fa0:	f7f7 f972 	bl	8000288 <__aeabi_dsub>
 8008fa4:	4602      	mov	r2, r0
 8008fa6:	460b      	mov	r3, r1
 8008fa8:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8008fac:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8008fb0:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8008fb4:	f7f7 f968 	bl	8000288 <__aeabi_dsub>
 8008fb8:	4602      	mov	r2, r0
 8008fba:	460b      	mov	r3, r1
 8008fbc:	e9c7 2308 	strd	r2, r3, [r7, #32]
 8008fc0:	a3a0      	add	r3, pc, #640	@ (adr r3, 8009244 <leg_pos+0x354>)
 8008fc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008fc6:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 8008fca:	f7f7 fb15 	bl	80005f8 <__aeabi_dmul>
 8008fce:	4602      	mov	r2, r0
 8008fd0:	460b      	mov	r3, r1
 8008fd2:	4610      	mov	r0, r2
 8008fd4:	4619      	mov	r1, r3
 8008fd6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8008fda:	f7f7 f955 	bl	8000288 <__aeabi_dsub>
 8008fde:	4602      	mov	r2, r0
 8008fe0:	460b      	mov	r3, r1
 8008fe2:	4610      	mov	r0, r2
 8008fe4:	4619      	mov	r1, r3
 8008fe6:	a39b      	add	r3, pc, #620	@ (adr r3, 8009254 <leg_pos+0x364>)
 8008fe8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008fec:	f7f7 f94e 	bl	800028c <__adddf3>
 8008ff0:	4602      	mov	r2, r0
 8008ff2:	460b      	mov	r3, r1
 8008ff4:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8008ff8:	a394      	add	r3, pc, #592	@ (adr r3, 800924c <leg_pos+0x35c>)
 8008ffa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ffe:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 8009002:	f7f7 faf9 	bl	80005f8 <__aeabi_dmul>
 8009006:	4602      	mov	r2, r0
 8009008:	460b      	mov	r3, r1
 800900a:	4614      	mov	r4, r2
 800900c:	461d      	mov	r5, r3
 800900e:	a38f      	add	r3, pc, #572	@ (adr r3, 800924c <leg_pos+0x35c>)
 8009010:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009014:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8009018:	f7f7 faee 	bl	80005f8 <__aeabi_dmul>
 800901c:	4602      	mov	r2, r0
 800901e:	460b      	mov	r3, r1
 8009020:	4620      	mov	r0, r4
 8009022:	4629      	mov	r1, r5
 8009024:	f7f7 f930 	bl	8000288 <__aeabi_dsub>
 8009028:	4602      	mov	r2, r0
 800902a:	460b      	mov	r3, r1
 800902c:	4610      	mov	r0, r2
 800902e:	4619      	mov	r1, r3
 8009030:	a38a      	add	r3, pc, #552	@ (adr r3, 800925c <leg_pos+0x36c>)
 8009032:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009036:	f7f7 f929 	bl	800028c <__adddf3>
 800903a:	4602      	mov	r2, r0
 800903c:	460b      	mov	r3, r1
 800903e:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8009042:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8009046:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800904a:	f7f7 fad5 	bl	80005f8 <__aeabi_dmul>
 800904e:	4602      	mov	r2, r0
 8009050:	460b      	mov	r3, r1
 8009052:	4614      	mov	r4, r2
 8009054:	461d      	mov	r5, r3
 8009056:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800905a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800905e:	f7f7 facb 	bl	80005f8 <__aeabi_dmul>
 8009062:	4602      	mov	r2, r0
 8009064:	460b      	mov	r3, r1
 8009066:	4620      	mov	r0, r4
 8009068:	4629      	mov	r1, r5
 800906a:	f7f7 f90f 	bl	800028c <__adddf3>
 800906e:	4602      	mov	r2, r0
 8009070:	460b      	mov	r3, r1
 8009072:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8009076:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800907a:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 800907e:	f7f7 f905 	bl	800028c <__adddf3>
 8009082:	4602      	mov	r2, r0
 8009084:	460b      	mov	r3, r1
 8009086:	f04f 0000 	mov.w	r0, #0
 800908a:	496d      	ldr	r1, [pc, #436]	@ (8009240 <leg_pos+0x350>)
 800908c:	f7f7 fbde 	bl	800084c <__aeabi_ddiv>
 8009090:	4602      	mov	r2, r0
 8009092:	460b      	mov	r3, r1
 8009094:	4614      	mov	r4, r2
 8009096:	461d      	mov	r5, r3
 8009098:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800909c:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80090a0:	f7f7 f8f2 	bl	8000288 <__aeabi_dsub>
 80090a4:	4602      	mov	r2, r0
 80090a6:	460b      	mov	r3, r1
 80090a8:	4690      	mov	r8, r2
 80090aa:	4699      	mov	r9, r3
 80090ac:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80090b0:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 80090b4:	f7f7 faa0 	bl	80005f8 <__aeabi_dmul>
 80090b8:	4602      	mov	r2, r0
 80090ba:	460b      	mov	r3, r1
 80090bc:	4692      	mov	sl, r2
 80090be:	469b      	mov	fp, r3
 80090c0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80090c4:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 80090c8:	f7f7 fa96 	bl	80005f8 <__aeabi_dmul>
 80090cc:	4602      	mov	r2, r0
 80090ce:	460b      	mov	r3, r1
 80090d0:	4650      	mov	r0, sl
 80090d2:	4659      	mov	r1, fp
 80090d4:	f7f7 f8da 	bl	800028c <__adddf3>
 80090d8:	4602      	mov	r2, r0
 80090da:	460b      	mov	r3, r1
 80090dc:	4692      	mov	sl, r2
 80090de:	469b      	mov	fp, r3
 80090e0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80090e4:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 80090e8:	f7f7 fa86 	bl	80005f8 <__aeabi_dmul>
 80090ec:	4602      	mov	r2, r0
 80090ee:	460b      	mov	r3, r1
 80090f0:	4650      	mov	r0, sl
 80090f2:	4659      	mov	r1, fp
 80090f4:	f7f7 f8c8 	bl	8000288 <__aeabi_dsub>
 80090f8:	4602      	mov	r2, r0
 80090fa:	460b      	mov	r3, r1
 80090fc:	ec43 2b17 	vmov	d7, r2, r3
 8009100:	eeb0 0a47 	vmov.f32	s0, s14
 8009104:	eef0 0a67 	vmov.f32	s1, s15
 8009108:	f019 f900 	bl	802230c <sqrt>
 800910c:	ec53 2b10 	vmov	r2, r3, d0
 8009110:	4640      	mov	r0, r8
 8009112:	4649      	mov	r1, r9
 8009114:	f7f7 f8ba 	bl	800028c <__adddf3>
 8009118:	4602      	mov	r2, r0
 800911a:	460b      	mov	r3, r1
 800911c:	4620      	mov	r0, r4
 800911e:	4629      	mov	r1, r5
 8009120:	f7f7 fa6a 	bl	80005f8 <__aeabi_dmul>
 8009124:	4602      	mov	r2, r0
 8009126:	460b      	mov	r3, r1
 8009128:	ec43 2b17 	vmov	d7, r2, r3
 800912c:	eeb0 0a47 	vmov.f32	s0, s14
 8009130:	eef0 0a67 	vmov.f32	s1, s15
 8009134:	f019 f918 	bl	8022368 <atan>
 8009138:	ec51 0b10 	vmov	r0, r1, d0
 800913c:	4602      	mov	r2, r0
 800913e:	460b      	mov	r3, r1
 8009140:	f7f7 f8a4 	bl	800028c <__adddf3>
 8009144:	4602      	mov	r2, r0
 8009146:	460b      	mov	r3, r1
 8009148:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 800914c:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 8009150:	f019 fafe 	bl	8022750 <sin>
 8009154:	ec51 0b10 	vmov	r0, r1, d0
 8009158:	a335      	add	r3, pc, #212	@ (adr r3, 8009230 <leg_pos+0x340>)
 800915a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800915e:	f7f7 fa4b 	bl	80005f8 <__aeabi_dmul>
 8009162:	4602      	mov	r2, r0
 8009164:	460b      	mov	r3, r1
 8009166:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 800916a:	f7f7 f88f 	bl	800028c <__adddf3>
 800916e:	4602      	mov	r2, r0
 8009170:	460b      	mov	r3, r1
 8009172:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8009176:	ed97 0b14 	vldr	d0, [r7, #80]	@ 0x50
 800917a:	f019 fa8d 	bl	8022698 <cos>
 800917e:	ec51 0b10 	vmov	r0, r1, d0
 8009182:	a32b      	add	r3, pc, #172	@ (adr r3, 8009230 <leg_pos+0x340>)
 8009184:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009188:	f7f7 fa36 	bl	80005f8 <__aeabi_dmul>
 800918c:	4602      	mov	r2, r0
 800918e:	460b      	mov	r3, r1
 8009190:	4610      	mov	r0, r2
 8009192:	4619      	mov	r1, r3
 8009194:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8009198:	f7f7 f878 	bl	800028c <__adddf3>
 800919c:	4602      	mov	r2, r0
 800919e:	460b      	mov	r3, r1
 80091a0:	4610      	mov	r0, r2
 80091a2:	4619      	mov	r1, r3
 80091a4:	a324      	add	r3, pc, #144	@ (adr r3, 8009238 <leg_pos+0x348>)
 80091a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80091aa:	f7f7 f86d 	bl	8000288 <__aeabi_dsub>
 80091ae:	4602      	mov	r2, r0
 80091b0:	460b      	mov	r3, r1
 80091b2:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 80091b6:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80091ba:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 80091be:	f7f7 fa1b 	bl	80005f8 <__aeabi_dmul>
 80091c2:	4602      	mov	r2, r0
 80091c4:	460b      	mov	r3, r1
 80091c6:	4614      	mov	r4, r2
 80091c8:	461d      	mov	r5, r3
 80091ca:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80091ce:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 80091d2:	f7f7 fa11 	bl	80005f8 <__aeabi_dmul>
 80091d6:	4602      	mov	r2, r0
 80091d8:	460b      	mov	r3, r1
 80091da:	4620      	mov	r0, r4
 80091dc:	4629      	mov	r1, r5
 80091de:	f7f7 f855 	bl	800028c <__adddf3>
 80091e2:	4602      	mov	r2, r0
 80091e4:	460b      	mov	r3, r1
 80091e6:	ec43 2b17 	vmov	d7, r2, r3
 80091ea:	eeb0 0a47 	vmov.f32	s0, s14
 80091ee:	eef0 0a67 	vmov.f32	s1, s15
 80091f2:	f019 f88b 	bl	802230c <sqrt>
 80091f6:	eeb0 7a40 	vmov.f32	s14, s0
 80091fa:	eef0 7a60 	vmov.f32	s15, s1
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	ed83 7b00 	vstr	d7, [r3]
 8009204:	687b      	ldr	r3, [r7, #4]
 8009206:	f103 0408 	add.w	r4, r3, #8
 800920a:	ed97 1b14 	vldr	d1, [r7, #80]	@ 0x50
 800920e:	ed97 0b12 	vldr	d0, [r7, #72]	@ 0x48
 8009212:	f7ff fdb9 	bl	8008d88 <rt_atan2d_snf>
 8009216:	eeb0 7a40 	vmov.f32	s14, s0
 800921a:	eef0 7a60 	vmov.f32	s15, s1
 800921e:	ed84 7b00 	vstr	d7, [r4]
 8009222:	bf00      	nop
 8009224:	3768      	adds	r7, #104	@ 0x68
 8009226:	46bd      	mov	sp, r7
 8009228:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800922c:	f3af 8000 	nop.w
 8009230:	33333333 	.word	0x33333333
 8009234:	3fc33333 	.word	0x3fc33333
 8009238:	5532617c 	.word	0x5532617c
 800923c:	3fa92a30 	.word	0x3fa92a30
 8009240:	3ff00000 	.word	0x3ff00000
 8009244:	47ae147b 	.word	0x47ae147b
 8009248:	3fb47ae1 	.word	0x3fb47ae1
 800924c:	bc6a7efa 	.word	0xbc6a7efa
 8009250:	3f989374 	.word	0x3f989374
 8009254:	5532617c 	.word	0x5532617c
 8009258:	3fb92a30 	.word	0x3fb92a30
 800925c:	663c74fb 	.word	0x663c74fb
 8009260:	3f9e32a0 	.word	0x3f9e32a0
 8009264:	00000000 	.word	0x00000000

08009268 <leg_conv>:
 8009268:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800926c:	b0ba      	sub	sp, #232	@ 0xe8
 800926e:	af00      	add	r7, sp, #0
 8009270:	ed87 0b08 	vstr	d0, [r7, #32]
 8009274:	ed87 1b06 	vstr	d1, [r7, #24]
 8009278:	ed87 2b04 	vstr	d2, [r7, #16]
 800927c:	ed87 3b02 	vstr	d3, [r7, #8]
 8009280:	6078      	str	r0, [r7, #4]
 8009282:	ed97 0b04 	vldr	d0, [r7, #16]
 8009286:	f019 fa07 	bl	8022698 <cos>
 800928a:	ed87 0b38 	vstr	d0, [r7, #224]	@ 0xe0
 800928e:	ed97 0b02 	vldr	d0, [r7, #8]
 8009292:	f019 fa01 	bl	8022698 <cos>
 8009296:	ed87 0b36 	vstr	d0, [r7, #216]	@ 0xd8
 800929a:	ed97 0b04 	vldr	d0, [r7, #16]
 800929e:	f019 fa57 	bl	8022750 <sin>
 80092a2:	ed87 0b34 	vstr	d0, [r7, #208]	@ 0xd0
 80092a6:	ed97 0b02 	vldr	d0, [r7, #8]
 80092aa:	f019 fa51 	bl	8022750 <sin>
 80092ae:	ed87 0b32 	vstr	d0, [r7, #200]	@ 0xc8
 80092b2:	f20f 5350 	addw	r3, pc, #1360	@ 0x550
 80092b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092ba:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80092be:	f7f7 f99b 	bl	80005f8 <__aeabi_dmul>
 80092c2:	4602      	mov	r2, r0
 80092c4:	460b      	mov	r3, r1
 80092c6:	e9c7 2330 	strd	r2, r3, [r7, #192]	@ 0xc0
 80092ca:	f20f 5338 	addw	r3, pc, #1336	@ 0x538
 80092ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092d2:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 80092d6:	f7f7 f98f 	bl	80005f8 <__aeabi_dmul>
 80092da:	4602      	mov	r2, r0
 80092dc:	460b      	mov	r3, r1
 80092de:	e9c7 232e 	strd	r2, r3, [r7, #184]	@ 0xb8
 80092e2:	f20f 5328 	addw	r3, pc, #1320	@ 0x528
 80092e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80092ea:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80092ee:	f7f7 f983 	bl	80005f8 <__aeabi_dmul>
 80092f2:	4602      	mov	r2, r0
 80092f4:	460b      	mov	r3, r1
 80092f6:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 80092fa:	f20f 5310 	addw	r3, pc, #1296	@ 0x510
 80092fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009302:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009306:	f7f7 f977 	bl	80005f8 <__aeabi_dmul>
 800930a:	4602      	mov	r2, r0
 800930c:	460b      	mov	r3, r1
 800930e:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
 8009312:	f20f 43f8 	addw	r3, pc, #1272	@ 0x4f8
 8009316:	e9d3 2300 	ldrd	r2, r3, [r3]
 800931a:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 800931e:	f7f7 f96b 	bl	80005f8 <__aeabi_dmul>
 8009322:	4602      	mov	r2, r0
 8009324:	460b      	mov	r3, r1
 8009326:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800932a:	f20f 43e0 	addw	r3, pc, #1248	@ 0x4e0
 800932e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009332:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8009336:	f7f7 f95f 	bl	80005f8 <__aeabi_dmul>
 800933a:	4602      	mov	r2, r0
 800933c:	460b      	mov	r3, r1
 800933e:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
 8009342:	f20f 43c0 	addw	r3, pc, #1216	@ 0x4c0
 8009346:	e9d3 2300 	ldrd	r2, r3, [r3]
 800934a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800934e:	f7f7 f953 	bl	80005f8 <__aeabi_dmul>
 8009352:	4602      	mov	r2, r0
 8009354:	460b      	mov	r3, r1
 8009356:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 800935a:	f7f6 ff95 	bl	8000288 <__aeabi_dsub>
 800935e:	4602      	mov	r2, r0
 8009360:	460b      	mov	r3, r1
 8009362:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8009366:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 800936a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800936e:	f7f6 ff8b 	bl	8000288 <__aeabi_dsub>
 8009372:	4602      	mov	r2, r0
 8009374:	460b      	mov	r3, r1
 8009376:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
 800937a:	f20f 4388 	addw	r3, pc, #1160	@ 0x488
 800937e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009382:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009386:	f7f7 f937 	bl	80005f8 <__aeabi_dmul>
 800938a:	4602      	mov	r2, r0
 800938c:	460b      	mov	r3, r1
 800938e:	4610      	mov	r0, r2
 8009390:	4619      	mov	r1, r3
 8009392:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8009396:	f7f6 ff77 	bl	8000288 <__aeabi_dsub>
 800939a:	4602      	mov	r2, r0
 800939c:	460b      	mov	r3, r1
 800939e:	4610      	mov	r0, r2
 80093a0:	4619      	mov	r1, r3
 80093a2:	f20f 4370 	addw	r3, pc, #1136	@ 0x470
 80093a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80093aa:	f7f6 ff6f 	bl	800028c <__adddf3>
 80093ae:	4602      	mov	r2, r0
 80093b0:	460b      	mov	r3, r1
 80093b2:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 80093b6:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 80093ba:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 80093be:	f7f6 ff63 	bl	8000288 <__aeabi_dsub>
 80093c2:	4602      	mov	r2, r0
 80093c4:	460b      	mov	r3, r1
 80093c6:	4610      	mov	r0, r2
 80093c8:	4619      	mov	r1, r3
 80093ca:	f20f 4350 	addw	r3, pc, #1104	@ 0x450
 80093ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80093d2:	f7f6 ff5b 	bl	800028c <__adddf3>
 80093d6:	4602      	mov	r2, r0
 80093d8:	460b      	mov	r3, r1
 80093da:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
 80093de:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80093e2:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 80093e6:	f7f7 f907 	bl	80005f8 <__aeabi_dmul>
 80093ea:	4602      	mov	r2, r0
 80093ec:	460b      	mov	r3, r1
 80093ee:	4690      	mov	r8, r2
 80093f0:	4699      	mov	r9, r3
 80093f2:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 80093f6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80093fa:	f7f7 f8fd 	bl	80005f8 <__aeabi_dmul>
 80093fe:	4602      	mov	r2, r0
 8009400:	460b      	mov	r3, r1
 8009402:	4640      	mov	r0, r8
 8009404:	4649      	mov	r1, r9
 8009406:	f7f6 ff41 	bl	800028c <__adddf3>
 800940a:	4602      	mov	r2, r0
 800940c:	460b      	mov	r3, r1
 800940e:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
 8009412:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8009416:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800941a:	f7f7 f8ed 	bl	80005f8 <__aeabi_dmul>
 800941e:	4602      	mov	r2, r0
 8009420:	460b      	mov	r3, r1
 8009422:	4610      	mov	r0, r2
 8009424:	4619      	mov	r1, r3
 8009426:	a3ff      	add	r3, pc, #1020	@ (adr r3, 8009824 <leg_conv+0x5bc>)
 8009428:	e9d3 2300 	ldrd	r2, r3, [r3]
 800942c:	f7f7 f8e4 	bl	80005f8 <__aeabi_dmul>
 8009430:	4602      	mov	r2, r0
 8009432:	460b      	mov	r3, r1
 8009434:	4690      	mov	r8, r2
 8009436:	4699      	mov	r9, r3
 8009438:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 800943c:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8009440:	f7f7 f8da 	bl	80005f8 <__aeabi_dmul>
 8009444:	4602      	mov	r2, r0
 8009446:	460b      	mov	r3, r1
 8009448:	4610      	mov	r0, r2
 800944a:	4619      	mov	r1, r3
 800944c:	a3f5      	add	r3, pc, #980	@ (adr r3, 8009824 <leg_conv+0x5bc>)
 800944e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009452:	f7f7 f8d1 	bl	80005f8 <__aeabi_dmul>
 8009456:	4602      	mov	r2, r0
 8009458:	460b      	mov	r3, r1
 800945a:	4640      	mov	r0, r8
 800945c:	4649      	mov	r1, r9
 800945e:	f7f6 ff15 	bl	800028c <__adddf3>
 8009462:	4602      	mov	r2, r0
 8009464:	460b      	mov	r3, r1
 8009466:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 800946a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800946e:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009472:	f7f7 f8c1 	bl	80005f8 <__aeabi_dmul>
 8009476:	4602      	mov	r2, r0
 8009478:	460b      	mov	r3, r1
 800947a:	4610      	mov	r0, r2
 800947c:	4619      	mov	r1, r3
 800947e:	a3e9      	add	r3, pc, #932	@ (adr r3, 8009824 <leg_conv+0x5bc>)
 8009480:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009484:	f7f7 f8b8 	bl	80005f8 <__aeabi_dmul>
 8009488:	4602      	mov	r2, r0
 800948a:	460b      	mov	r3, r1
 800948c:	4690      	mov	r8, r2
 800948e:	4699      	mov	r9, r3
 8009490:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009494:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8009498:	f7f7 f8ae 	bl	80005f8 <__aeabi_dmul>
 800949c:	4602      	mov	r2, r0
 800949e:	460b      	mov	r3, r1
 80094a0:	4610      	mov	r0, r2
 80094a2:	4619      	mov	r1, r3
 80094a4:	a3df      	add	r3, pc, #892	@ (adr r3, 8009824 <leg_conv+0x5bc>)
 80094a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80094aa:	f7f7 f8a5 	bl	80005f8 <__aeabi_dmul>
 80094ae:	4602      	mov	r2, r0
 80094b0:	460b      	mov	r3, r1
 80094b2:	4640      	mov	r0, r8
 80094b4:	4649      	mov	r1, r9
 80094b6:	f7f6 fee9 	bl	800028c <__adddf3>
 80094ba:	4602      	mov	r2, r0
 80094bc:	460b      	mov	r3, r1
 80094be:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 80094c2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 80094c6:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 80094ca:	f7f6 fedf 	bl	800028c <__adddf3>
 80094ce:	4602      	mov	r2, r0
 80094d0:	460b      	mov	r3, r1
 80094d2:	f04f 0000 	mov.w	r0, #0
 80094d6:	49ca      	ldr	r1, [pc, #808]	@ (8009800 <leg_conv+0x598>)
 80094d8:	f7f7 f9b8 	bl	800084c <__aeabi_ddiv>
 80094dc:	4602      	mov	r2, r0
 80094de:	460b      	mov	r3, r1
 80094e0:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 80094e4:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 80094e8:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80094ec:	f7f7 f884 	bl	80005f8 <__aeabi_dmul>
 80094f0:	4602      	mov	r2, r0
 80094f2:	460b      	mov	r3, r1
 80094f4:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 80094f8:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 80094fc:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8009500:	f7f7 f87a 	bl	80005f8 <__aeabi_dmul>
 8009504:	4602      	mov	r2, r0
 8009506:	460b      	mov	r3, r1
 8009508:	4690      	mov	r8, r2
 800950a:	4699      	mov	r9, r3
 800950c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8009510:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8009514:	f7f7 f870 	bl	80005f8 <__aeabi_dmul>
 8009518:	4602      	mov	r2, r0
 800951a:	460b      	mov	r3, r1
 800951c:	4640      	mov	r0, r8
 800951e:	4649      	mov	r1, r9
 8009520:	f7f6 feb4 	bl	800028c <__adddf3>
 8009524:	4602      	mov	r2, r0
 8009526:	460b      	mov	r3, r1
 8009528:	4690      	mov	r8, r2
 800952a:	4699      	mov	r9, r3
 800952c:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8009530:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8009534:	f7f7 f860 	bl	80005f8 <__aeabi_dmul>
 8009538:	4602      	mov	r2, r0
 800953a:	460b      	mov	r3, r1
 800953c:	4640      	mov	r0, r8
 800953e:	4649      	mov	r1, r9
 8009540:	f7f6 fea2 	bl	8000288 <__aeabi_dsub>
 8009544:	4602      	mov	r2, r0
 8009546:	460b      	mov	r3, r1
 8009548:	ec43 2b17 	vmov	d7, r2, r3
 800954c:	eeb0 0a47 	vmov.f32	s0, s14
 8009550:	eef0 0a67 	vmov.f32	s1, s15
 8009554:	f018 feda 	bl	802230c <sqrt>
 8009558:	ed87 0b24 	vstr	d0, [r7, #144]	@ 0x90
 800955c:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8009560:	f04f 0000 	mov.w	r0, #0
 8009564:	49a6      	ldr	r1, [pc, #664]	@ (8009800 <leg_conv+0x598>)
 8009566:	f7f7 f971 	bl	800084c <__aeabi_ddiv>
 800956a:	4602      	mov	r2, r0
 800956c:	460b      	mov	r3, r1
 800956e:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8009572:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8009576:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800957a:	f7f6 fe85 	bl	8000288 <__aeabi_dsub>
 800957e:	4602      	mov	r2, r0
 8009580:	460b      	mov	r3, r1
 8009582:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8009586:	f7f6 fe81 	bl	800028c <__adddf3>
 800958a:	4602      	mov	r2, r0
 800958c:	460b      	mov	r3, r1
 800958e:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8009592:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8009596:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800959a:	f7f7 f82d 	bl	80005f8 <__aeabi_dmul>
 800959e:	4602      	mov	r2, r0
 80095a0:	460b      	mov	r3, r1
 80095a2:	ec43 2b17 	vmov	d7, r2, r3
 80095a6:	eeb0 0a47 	vmov.f32	s0, s14
 80095aa:	eef0 0a67 	vmov.f32	s1, s15
 80095ae:	f018 fedb 	bl	8022368 <atan>
 80095b2:	ec51 0b10 	vmov	r0, r1, d0
 80095b6:	4602      	mov	r2, r0
 80095b8:	460b      	mov	r3, r1
 80095ba:	f7f6 fe67 	bl	800028c <__adddf3>
 80095be:	4602      	mov	r2, r0
 80095c0:	460b      	mov	r3, r1
 80095c2:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 80095c6:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 80095ca:	f019 f865 	bl	8022698 <cos>
 80095ce:	ed87 0b0e 	vstr	d0, [r7, #56]	@ 0x38
 80095d2:	ed97 0b10 	vldr	d0, [r7, #64]	@ 0x40
 80095d6:	f019 f8bb 	bl	8022750 <sin>
 80095da:	ed87 0b0c 	vstr	d0, [r7, #48]	@ 0x30
 80095de:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80095e2:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 80095e6:	f7f7 f807 	bl	80005f8 <__aeabi_dmul>
 80095ea:	4602      	mov	r2, r0
 80095ec:	460b      	mov	r3, r1
 80095ee:	4610      	mov	r0, r2
 80095f0:	4619      	mov	r1, r3
 80095f2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80095f6:	f7f6 ffff 	bl	80005f8 <__aeabi_dmul>
 80095fa:	4602      	mov	r2, r0
 80095fc:	460b      	mov	r3, r1
 80095fe:	4610      	mov	r0, r2
 8009600:	4619      	mov	r1, r3
 8009602:	f04f 0200 	mov.w	r2, #0
 8009606:	4b7e      	ldr	r3, [pc, #504]	@ (8009800 <leg_conv+0x598>)
 8009608:	f7f6 fe40 	bl	800028c <__adddf3>
 800960c:	4602      	mov	r2, r0
 800960e:	460b      	mov	r3, r1
 8009610:	f04f 0000 	mov.w	r0, #0
 8009614:	497a      	ldr	r1, [pc, #488]	@ (8009800 <leg_conv+0x598>)
 8009616:	f7f7 f919 	bl	800084c <__aeabi_ddiv>
 800961a:	4602      	mov	r2, r0
 800961c:	460b      	mov	r3, r1
 800961e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 8009622:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8009626:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800962a:	f7f6 fe2f 	bl	800028c <__adddf3>
 800962e:	4602      	mov	r2, r0
 8009630:	460b      	mov	r3, r1
 8009632:	4610      	mov	r0, r2
 8009634:	4619      	mov	r1, r3
 8009636:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800963a:	f7f6 ffdd 	bl	80005f8 <__aeabi_dmul>
 800963e:	4602      	mov	r2, r0
 8009640:	460b      	mov	r3, r1
 8009642:	4610      	mov	r0, r2
 8009644:	4619      	mov	r1, r3
 8009646:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800964a:	f7f6 ffd5 	bl	80005f8 <__aeabi_dmul>
 800964e:	4602      	mov	r2, r0
 8009650:	460b      	mov	r3, r1
 8009652:	4690      	mov	r8, r2
 8009654:	4699      	mov	r9, r3
 8009656:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800965a:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800965e:	f7f6 ffcb 	bl	80005f8 <__aeabi_dmul>
 8009662:	4602      	mov	r2, r0
 8009664:	460b      	mov	r3, r1
 8009666:	4610      	mov	r0, r2
 8009668:	4619      	mov	r1, r3
 800966a:	a363      	add	r3, pc, #396	@ (adr r3, 80097f8 <leg_conv+0x590>)
 800966c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009670:	f7f6 ffc2 	bl	80005f8 <__aeabi_dmul>
 8009674:	4602      	mov	r2, r0
 8009676:	460b      	mov	r3, r1
 8009678:	4692      	mov	sl, r2
 800967a:	469b      	mov	fp, r3
 800967c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8009680:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8009684:	f7f6 ffb8 	bl	80005f8 <__aeabi_dmul>
 8009688:	4602      	mov	r2, r0
 800968a:	460b      	mov	r3, r1
 800968c:	4610      	mov	r0, r2
 800968e:	4619      	mov	r1, r3
 8009690:	a359      	add	r3, pc, #356	@ (adr r3, 80097f8 <leg_conv+0x590>)
 8009692:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009696:	f7f6 ffaf 	bl	80005f8 <__aeabi_dmul>
 800969a:	4602      	mov	r2, r0
 800969c:	460b      	mov	r3, r1
 800969e:	4650      	mov	r0, sl
 80096a0:	4659      	mov	r1, fp
 80096a2:	f7f6 fdf3 	bl	800028c <__adddf3>
 80096a6:	4602      	mov	r2, r0
 80096a8:	460b      	mov	r3, r1
 80096aa:	4692      	mov	sl, r2
 80096ac:	469b      	mov	fp, r3
 80096ae:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 80096b2:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80096b6:	f7f6 ff9f 	bl	80005f8 <__aeabi_dmul>
 80096ba:	4602      	mov	r2, r0
 80096bc:	460b      	mov	r3, r1
 80096be:	4610      	mov	r0, r2
 80096c0:	4619      	mov	r1, r3
 80096c2:	4602      	mov	r2, r0
 80096c4:	460b      	mov	r3, r1
 80096c6:	f7f6 fde1 	bl	800028c <__adddf3>
 80096ca:	4602      	mov	r2, r0
 80096cc:	460b      	mov	r3, r1
 80096ce:	4650      	mov	r0, sl
 80096d0:	4659      	mov	r1, fp
 80096d2:	f7f6 fdd9 	bl	8000288 <__aeabi_dsub>
 80096d6:	4602      	mov	r2, r0
 80096d8:	460b      	mov	r3, r1
 80096da:	4610      	mov	r0, r2
 80096dc:	4619      	mov	r1, r3
 80096de:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80096e2:	f7f6 ff89 	bl	80005f8 <__aeabi_dmul>
 80096e6:	4602      	mov	r2, r0
 80096e8:	460b      	mov	r3, r1
 80096ea:	4610      	mov	r0, r2
 80096ec:	4619      	mov	r1, r3
 80096ee:	f04f 0200 	mov.w	r2, #0
 80096f2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80096f6:	f7f7 f8a9 	bl	800084c <__aeabi_ddiv>
 80096fa:	4602      	mov	r2, r0
 80096fc:	460b      	mov	r3, r1
 80096fe:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8009702:	f7f6 fdc1 	bl	8000288 <__aeabi_dsub>
 8009706:	4602      	mov	r2, r0
 8009708:	460b      	mov	r3, r1
 800970a:	4610      	mov	r0, r2
 800970c:	4619      	mov	r1, r3
 800970e:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009712:	f7f6 ff71 	bl	80005f8 <__aeabi_dmul>
 8009716:	4602      	mov	r2, r0
 8009718:	460b      	mov	r3, r1
 800971a:	4640      	mov	r0, r8
 800971c:	4649      	mov	r1, r9
 800971e:	f7f6 fdb5 	bl	800028c <__adddf3>
 8009722:	4602      	mov	r2, r0
 8009724:	460b      	mov	r3, r1
 8009726:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 800972a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800972e:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8009732:	f7f6 fdab 	bl	800028c <__adddf3>
 8009736:	4602      	mov	r2, r0
 8009738:	460b      	mov	r3, r1
 800973a:	4610      	mov	r0, r2
 800973c:	4619      	mov	r1, r3
 800973e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8009742:	f7f6 ff59 	bl	80005f8 <__aeabi_dmul>
 8009746:	4602      	mov	r2, r0
 8009748:	460b      	mov	r3, r1
 800974a:	4610      	mov	r0, r2
 800974c:	4619      	mov	r1, r3
 800974e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8009752:	f7f6 ff51 	bl	80005f8 <__aeabi_dmul>
 8009756:	4602      	mov	r2, r0
 8009758:	460b      	mov	r3, r1
 800975a:	4690      	mov	r8, r2
 800975c:	4699      	mov	r9, r3
 800975e:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8009762:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009766:	f7f6 ff47 	bl	80005f8 <__aeabi_dmul>
 800976a:	4602      	mov	r2, r0
 800976c:	460b      	mov	r3, r1
 800976e:	4610      	mov	r0, r2
 8009770:	4619      	mov	r1, r3
 8009772:	a321      	add	r3, pc, #132	@ (adr r3, 80097f8 <leg_conv+0x590>)
 8009774:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009778:	f7f6 ff3e 	bl	80005f8 <__aeabi_dmul>
 800977c:	4602      	mov	r2, r0
 800977e:	460b      	mov	r3, r1
 8009780:	4692      	mov	sl, r2
 8009782:	469b      	mov	fp, r3
 8009784:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 8009788:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800978c:	f7f6 ff34 	bl	80005f8 <__aeabi_dmul>
 8009790:	4602      	mov	r2, r0
 8009792:	460b      	mov	r3, r1
 8009794:	4610      	mov	r0, r2
 8009796:	4619      	mov	r1, r3
 8009798:	a317      	add	r3, pc, #92	@ (adr r3, 80097f8 <leg_conv+0x590>)
 800979a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800979e:	f7f6 ff2b 	bl	80005f8 <__aeabi_dmul>
 80097a2:	4602      	mov	r2, r0
 80097a4:	460b      	mov	r3, r1
 80097a6:	4650      	mov	r0, sl
 80097a8:	4659      	mov	r1, fp
 80097aa:	f7f6 fd6f 	bl	800028c <__adddf3>
 80097ae:	4602      	mov	r2, r0
 80097b0:	460b      	mov	r3, r1
 80097b2:	4692      	mov	sl, r2
 80097b4:	469b      	mov	fp, r3
 80097b6:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 80097ba:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 80097be:	f7f6 ff1b 	bl	80005f8 <__aeabi_dmul>
 80097c2:	4602      	mov	r2, r0
 80097c4:	460b      	mov	r3, r1
 80097c6:	4610      	mov	r0, r2
 80097c8:	4619      	mov	r1, r3
 80097ca:	4602      	mov	r2, r0
 80097cc:	460b      	mov	r3, r1
 80097ce:	f7f6 fd5d 	bl	800028c <__adddf3>
 80097d2:	4602      	mov	r2, r0
 80097d4:	460b      	mov	r3, r1
 80097d6:	4650      	mov	r0, sl
 80097d8:	4659      	mov	r1, fp
 80097da:	f7f6 fd55 	bl	8000288 <__aeabi_dsub>
 80097de:	4602      	mov	r2, r0
 80097e0:	460b      	mov	r3, r1
 80097e2:	4610      	mov	r0, r2
 80097e4:	4619      	mov	r1, r3
 80097e6:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80097ea:	f7f6 ff05 	bl	80005f8 <__aeabi_dmul>
 80097ee:	4602      	mov	r2, r0
 80097f0:	460b      	mov	r3, r1
 80097f2:	e01b      	b.n	800982c <leg_conv+0x5c4>
 80097f4:	f3af 8000 	nop.w
 80097f8:	bc6a7efa 	.word	0xbc6a7efa
 80097fc:	3fa89374 	.word	0x3fa89374
 8009800:	3ff00000 	.word	0x3ff00000
 8009804:	47ae147b 	.word	0x47ae147b
 8009808:	3fb47ae1 	.word	0x3fb47ae1
 800980c:	bc6a7efa 	.word	0xbc6a7efa
 8009810:	3f989374 	.word	0x3f989374
 8009814:	5532617c 	.word	0x5532617c
 8009818:	3fb92a30 	.word	0x3fb92a30
 800981c:	663c74fb 	.word	0x663c74fb
 8009820:	3f9e32a0 	.word	0x3f9e32a0
 8009824:	47ae147b 	.word	0x47ae147b
 8009828:	3fc47ae1 	.word	0x3fc47ae1
 800982c:	4610      	mov	r0, r2
 800982e:	4619      	mov	r1, r3
 8009830:	f04f 0200 	mov.w	r2, #0
 8009834:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8009838:	f7f7 f808 	bl	800084c <__aeabi_ddiv>
 800983c:	4602      	mov	r2, r0
 800983e:	460b      	mov	r3, r1
 8009840:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8009844:	f7f6 fd20 	bl	8000288 <__aeabi_dsub>
 8009848:	4602      	mov	r2, r0
 800984a:	460b      	mov	r3, r1
 800984c:	4610      	mov	r0, r2
 800984e:	4619      	mov	r1, r3
 8009850:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009854:	f7f6 fed0 	bl	80005f8 <__aeabi_dmul>
 8009858:	4602      	mov	r2, r0
 800985a:	460b      	mov	r3, r1
 800985c:	4640      	mov	r0, r8
 800985e:	4649      	mov	r1, r9
 8009860:	f7f6 fd14 	bl	800028c <__adddf3>
 8009864:	4602      	mov	r2, r0
 8009866:	460b      	mov	r3, r1
 8009868:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 800986c:	a3f3      	add	r3, pc, #972	@ (adr r3, 8009c3c <leg_conv+0x9d4>)
 800986e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009872:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8009876:	f7f6 febf 	bl	80005f8 <__aeabi_dmul>
 800987a:	4602      	mov	r2, r0
 800987c:	460b      	mov	r3, r1
 800987e:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8009882:	f7f6 fd03 	bl	800028c <__adddf3>
 8009886:	4602      	mov	r2, r0
 8009888:	460b      	mov	r3, r1
 800988a:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800988e:	a3eb      	add	r3, pc, #940	@ (adr r3, 8009c3c <leg_conv+0x9d4>)
 8009890:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009894:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 8009898:	f7f6 feae 	bl	80005f8 <__aeabi_dmul>
 800989c:	4602      	mov	r2, r0
 800989e:	460b      	mov	r3, r1
 80098a0:	4610      	mov	r0, r2
 80098a2:	4619      	mov	r1, r3
 80098a4:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 80098a8:	f7f6 fcf0 	bl	800028c <__adddf3>
 80098ac:	4602      	mov	r2, r0
 80098ae:	460b      	mov	r3, r1
 80098b0:	4610      	mov	r0, r2
 80098b2:	4619      	mov	r1, r3
 80098b4:	a3e3      	add	r3, pc, #908	@ (adr r3, 8009c44 <leg_conv+0x9dc>)
 80098b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098ba:	f7f6 fce5 	bl	8000288 <__aeabi_dsub>
 80098be:	4602      	mov	r2, r0
 80098c0:	460b      	mov	r3, r1
 80098c2:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 80098c6:	f8d7 40c0 	ldr.w	r4, [r7, #192]	@ 0xc0
 80098ca:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 80098ce:	f083 4500 	eor.w	r5, r3, #2147483648	@ 0x80000000
 80098d2:	a3da      	add	r3, pc, #872	@ (adr r3, 8009c3c <leg_conv+0x9d4>)
 80098d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098d8:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 80098dc:	f7f6 fe8c 	bl	80005f8 <__aeabi_dmul>
 80098e0:	4602      	mov	r2, r0
 80098e2:	460b      	mov	r3, r1
 80098e4:	4620      	mov	r0, r4
 80098e6:	4629      	mov	r1, r5
 80098e8:	f7f6 fcce 	bl	8000288 <__aeabi_dsub>
 80098ec:	4602      	mov	r2, r0
 80098ee:	460b      	mov	r3, r1
 80098f0:	4610      	mov	r0, r2
 80098f2:	4619      	mov	r1, r3
 80098f4:	a3d3      	add	r3, pc, #844	@ (adr r3, 8009c44 <leg_conv+0x9dc>)
 80098f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80098fa:	f7f6 fcc7 	bl	800028c <__adddf3>
 80098fe:	4602      	mov	r2, r0
 8009900:	460b      	mov	r3, r1
 8009902:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8009906:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800990a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 800990e:	f7f6 fe73 	bl	80005f8 <__aeabi_dmul>
 8009912:	4602      	mov	r2, r0
 8009914:	460b      	mov	r3, r1
 8009916:	e9c7 2338 	strd	r2, r3, [r7, #224]	@ 0xe0
 800991a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800991e:	f04f 0000 	mov.w	r0, #0
 8009922:	49c5      	ldr	r1, [pc, #788]	@ (8009c38 <leg_conv+0x9d0>)
 8009924:	f7f6 ff92 	bl	800084c <__aeabi_ddiv>
 8009928:	4602      	mov	r2, r0
 800992a:	460b      	mov	r3, r1
 800992c:	e9c7 2334 	strd	r2, r3, [r7, #208]	@ 0xd0
 8009930:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8009934:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8009938:	f7f6 fe5e 	bl	80005f8 <__aeabi_dmul>
 800993c:	4602      	mov	r2, r0
 800993e:	460b      	mov	r3, r1
 8009940:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8009944:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8009948:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	@ 0x38
 800994c:	f7f6 fe54 	bl	80005f8 <__aeabi_dmul>
 8009950:	4602      	mov	r2, r0
 8009952:	460b      	mov	r3, r1
 8009954:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8009958:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800995c:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8009960:	f7f6 fe4a 	bl	80005f8 <__aeabi_dmul>
 8009964:	4602      	mov	r2, r0
 8009966:	460b      	mov	r3, r1
 8009968:	4610      	mov	r0, r2
 800996a:	4619      	mov	r1, r3
 800996c:	a3ae      	add	r3, pc, #696	@ (adr r3, 8009c28 <leg_conv+0x9c0>)
 800996e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009972:	f7f6 fe41 	bl	80005f8 <__aeabi_dmul>
 8009976:	4602      	mov	r2, r0
 8009978:	460b      	mov	r3, r1
 800997a:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800997e:	f7f6 fc83 	bl	8000288 <__aeabi_dsub>
 8009982:	4602      	mov	r2, r0
 8009984:	460b      	mov	r3, r1
 8009986:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 800998a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800998e:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 8009992:	f7f6 fe31 	bl	80005f8 <__aeabi_dmul>
 8009996:	4602      	mov	r2, r0
 8009998:	460b      	mov	r3, r1
 800999a:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 800999e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80099a2:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 80099a6:	f7f6 fe27 	bl	80005f8 <__aeabi_dmul>
 80099aa:	4602      	mov	r2, r0
 80099ac:	460b      	mov	r3, r1
 80099ae:	4610      	mov	r0, r2
 80099b0:	4619      	mov	r1, r3
 80099b2:	a39d      	add	r3, pc, #628	@ (adr r3, 8009c28 <leg_conv+0x9c0>)
 80099b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80099b8:	f7f6 fe1e 	bl	80005f8 <__aeabi_dmul>
 80099bc:	4602      	mov	r2, r0
 80099be:	460b      	mov	r3, r1
 80099c0:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 80099c4:	f7f6 fc60 	bl	8000288 <__aeabi_dsub>
 80099c8:	4602      	mov	r2, r0
 80099ca:	460b      	mov	r3, r1
 80099cc:	e9c7 2310 	strd	r2, r3, [r7, #64]	@ 0x40
 80099d0:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 80099d4:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80099d8:	f7f6 fe0e 	bl	80005f8 <__aeabi_dmul>
 80099dc:	4602      	mov	r2, r0
 80099de:	460b      	mov	r3, r1
 80099e0:	4610      	mov	r0, r2
 80099e2:	4619      	mov	r1, r3
 80099e4:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 80099e8:	f7f6 fc50 	bl	800028c <__adddf3>
 80099ec:	4602      	mov	r2, r0
 80099ee:	460b      	mov	r3, r1
 80099f0:	ec43 2b17 	vmov	d7, r2, r3
 80099f4:	eeb0 0a47 	vmov.f32	s0, s14
 80099f8:	eef0 0a67 	vmov.f32	s1, s15
 80099fc:	f018 fc86 	bl	802230c <sqrt>
 8009a00:	ec53 2b10 	vmov	r2, r3, d0
 8009a04:	f04f 0000 	mov.w	r0, #0
 8009a08:	498b      	ldr	r1, [pc, #556]	@ (8009c38 <leg_conv+0x9d0>)
 8009a0a:	f7f6 ff1f 	bl	800084c <__aeabi_ddiv>
 8009a0e:	4602      	mov	r2, r0
 8009a10:	460b      	mov	r3, r1
 8009a12:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 8009a16:	f7f6 fdef 	bl	80005f8 <__aeabi_dmul>
 8009a1a:	4602      	mov	r2, r0
 8009a1c:	460b      	mov	r3, r1
 8009a1e:	e9c7 2312 	strd	r2, r3, [r7, #72]	@ 0x48
 8009a22:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8009a26:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 8009a2a:	f7f6 fde5 	bl	80005f8 <__aeabi_dmul>
 8009a2e:	4602      	mov	r2, r0
 8009a30:	460b      	mov	r3, r1
 8009a32:	4614      	mov	r4, r2
 8009a34:	461d      	mov	r5, r3
 8009a36:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8009a3a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8009a3e:	f7f6 fc25 	bl	800028c <__adddf3>
 8009a42:	4602      	mov	r2, r0
 8009a44:	460b      	mov	r3, r1
 8009a46:	f04f 0000 	mov.w	r0, #0
 8009a4a:	497b      	ldr	r1, [pc, #492]	@ (8009c38 <leg_conv+0x9d0>)
 8009a4c:	f7f6 fefe 	bl	800084c <__aeabi_ddiv>
 8009a50:	4602      	mov	r2, r0
 8009a52:	460b      	mov	r3, r1
 8009a54:	4620      	mov	r0, r4
 8009a56:	4629      	mov	r1, r5
 8009a58:	f7f6 fdce 	bl	80005f8 <__aeabi_dmul>
 8009a5c:	4602      	mov	r2, r0
 8009a5e:	460b      	mov	r3, r1
 8009a60:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8009a64:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 8009a68:	f04f 0000 	mov.w	r0, #0
 8009a6c:	4972      	ldr	r1, [pc, #456]	@ (8009c38 <leg_conv+0x9d0>)
 8009a6e:	f7f6 feed 	bl	800084c <__aeabi_ddiv>
 8009a72:	4602      	mov	r2, r0
 8009a74:	460b      	mov	r3, r1
 8009a76:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8009a7a:	f7f6 fdbd 	bl	80005f8 <__aeabi_dmul>
 8009a7e:	4602      	mov	r2, r0
 8009a80:	460b      	mov	r3, r1
 8009a82:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8009a86:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8009a8a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8009a8e:	f7f6 fdb3 	bl	80005f8 <__aeabi_dmul>
 8009a92:	4602      	mov	r2, r0
 8009a94:	460b      	mov	r3, r1
 8009a96:	4610      	mov	r0, r2
 8009a98:	4619      	mov	r1, r3
 8009a9a:	4602      	mov	r2, r0
 8009a9c:	460b      	mov	r3, r1
 8009a9e:	f7f6 fbf5 	bl	800028c <__adddf3>
 8009aa2:	4602      	mov	r2, r0
 8009aa4:	460b      	mov	r3, r1
 8009aa6:	4614      	mov	r4, r2
 8009aa8:	461d      	mov	r5, r3
 8009aaa:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8009aae:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8009ab2:	f7f6 fda1 	bl	80005f8 <__aeabi_dmul>
 8009ab6:	4602      	mov	r2, r0
 8009ab8:	460b      	mov	r3, r1
 8009aba:	4610      	mov	r0, r2
 8009abc:	4619      	mov	r1, r3
 8009abe:	4602      	mov	r2, r0
 8009ac0:	460b      	mov	r3, r1
 8009ac2:	f7f6 fbe3 	bl	800028c <__adddf3>
 8009ac6:	4602      	mov	r2, r0
 8009ac8:	460b      	mov	r3, r1
 8009aca:	4620      	mov	r0, r4
 8009acc:	4629      	mov	r1, r5
 8009ace:	f7f6 fbdb 	bl	8000288 <__aeabi_dsub>
 8009ad2:	4602      	mov	r2, r0
 8009ad4:	460b      	mov	r3, r1
 8009ad6:	4610      	mov	r0, r2
 8009ad8:	4619      	mov	r1, r3
 8009ada:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8009ade:	f7f6 fd8b 	bl	80005f8 <__aeabi_dmul>
 8009ae2:	4602      	mov	r2, r0
 8009ae4:	460b      	mov	r3, r1
 8009ae6:	4610      	mov	r0, r2
 8009ae8:	4619      	mov	r1, r3
 8009aea:	f04f 0200 	mov.w	r2, #0
 8009aee:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8009af2:	f7f6 feab 	bl	800084c <__aeabi_ddiv>
 8009af6:	4602      	mov	r2, r0
 8009af8:	460b      	mov	r3, r1
 8009afa:	4614      	mov	r4, r2
 8009afc:	461d      	mov	r5, r3
 8009afe:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8009b02:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 8009b06:	f7f6 fd77 	bl	80005f8 <__aeabi_dmul>
 8009b0a:	4602      	mov	r2, r0
 8009b0c:	460b      	mov	r3, r1
 8009b0e:	4690      	mov	r8, r2
 8009b10:	4699      	mov	r9, r3
 8009b12:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8009b16:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8009b1a:	f7f6 fd6d 	bl	80005f8 <__aeabi_dmul>
 8009b1e:	4602      	mov	r2, r0
 8009b20:	460b      	mov	r3, r1
 8009b22:	4640      	mov	r0, r8
 8009b24:	4649      	mov	r1, r9
 8009b26:	f7f6 fbaf 	bl	8000288 <__aeabi_dsub>
 8009b2a:	4602      	mov	r2, r0
 8009b2c:	460b      	mov	r3, r1
 8009b2e:	4610      	mov	r0, r2
 8009b30:	4619      	mov	r1, r3
 8009b32:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009b36:	f7f6 fd5f 	bl	80005f8 <__aeabi_dmul>
 8009b3a:	4602      	mov	r2, r0
 8009b3c:	460b      	mov	r3, r1
 8009b3e:	4620      	mov	r0, r4
 8009b40:	4629      	mov	r1, r5
 8009b42:	f7f6 fba1 	bl	8000288 <__aeabi_dsub>
 8009b46:	4602      	mov	r2, r0
 8009b48:	460b      	mov	r3, r1
 8009b4a:	6879      	ldr	r1, [r7, #4]
 8009b4c:	e9c1 2300 	strd	r2, r3, [r1]
 8009b50:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8009b54:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8009b58:	f7f6 fd4e 	bl	80005f8 <__aeabi_dmul>
 8009b5c:	4602      	mov	r2, r0
 8009b5e:	460b      	mov	r3, r1
 8009b60:	4610      	mov	r0, r2
 8009b62:	4619      	mov	r1, r3
 8009b64:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8009b68:	f7f6 fd46 	bl	80005f8 <__aeabi_dmul>
 8009b6c:	4602      	mov	r2, r0
 8009b6e:	460b      	mov	r3, r1
 8009b70:	4610      	mov	r0, r2
 8009b72:	4619      	mov	r1, r3
 8009b74:	a32e      	add	r3, pc, #184	@ (adr r3, 8009c30 <leg_conv+0x9c8>)
 8009b76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009b7a:	f7f6 fd3d 	bl	80005f8 <__aeabi_dmul>
 8009b7e:	4602      	mov	r2, r0
 8009b80:	460b      	mov	r3, r1
 8009b82:	4614      	mov	r4, r2
 8009b84:	461d      	mov	r5, r3
 8009b86:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8009b8a:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8009b8e:	f7f6 fd33 	bl	80005f8 <__aeabi_dmul>
 8009b92:	4602      	mov	r2, r0
 8009b94:	460b      	mov	r3, r1
 8009b96:	4610      	mov	r0, r2
 8009b98:	4619      	mov	r1, r3
 8009b9a:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8009b9e:	f7f6 fd2b 	bl	80005f8 <__aeabi_dmul>
 8009ba2:	4602      	mov	r2, r0
 8009ba4:	460b      	mov	r3, r1
 8009ba6:	4610      	mov	r0, r2
 8009ba8:	4619      	mov	r1, r3
 8009baa:	a321      	add	r3, pc, #132	@ (adr r3, 8009c30 <leg_conv+0x9c8>)
 8009bac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009bb0:	f7f6 fd22 	bl	80005f8 <__aeabi_dmul>
 8009bb4:	4602      	mov	r2, r0
 8009bb6:	460b      	mov	r3, r1
 8009bb8:	4620      	mov	r0, r4
 8009bba:	4629      	mov	r1, r5
 8009bbc:	f7f6 fb64 	bl	8000288 <__aeabi_dsub>
 8009bc0:	4602      	mov	r2, r0
 8009bc2:	460b      	mov	r3, r1
 8009bc4:	4610      	mov	r0, r2
 8009bc6:	4619      	mov	r1, r3
 8009bc8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8009bcc:	f7f6 fd14 	bl	80005f8 <__aeabi_dmul>
 8009bd0:	4602      	mov	r2, r0
 8009bd2:	460b      	mov	r3, r1
 8009bd4:	4610      	mov	r0, r2
 8009bd6:	4619      	mov	r1, r3
 8009bd8:	f04f 0200 	mov.w	r2, #0
 8009bdc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8009be0:	f7f6 fe34 	bl	800084c <__aeabi_ddiv>
 8009be4:	4602      	mov	r2, r0
 8009be6:	460b      	mov	r3, r1
 8009be8:	4690      	mov	r8, r2
 8009bea:	4699      	mov	r9, r3
 8009bec:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8009bf0:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	@ 0x50
 8009bf4:	f7f6 fd00 	bl	80005f8 <__aeabi_dmul>
 8009bf8:	4602      	mov	r2, r0
 8009bfa:	460b      	mov	r3, r1
 8009bfc:	4610      	mov	r0, r2
 8009bfe:	4619      	mov	r1, r3
 8009c00:	a309      	add	r3, pc, #36	@ (adr r3, 8009c28 <leg_conv+0x9c0>)
 8009c02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009c06:	f7f6 fcf7 	bl	80005f8 <__aeabi_dmul>
 8009c0a:	4602      	mov	r2, r0
 8009c0c:	460b      	mov	r3, r1
 8009c0e:	f04f 0000 	mov.w	r0, #0
 8009c12:	f04f 0100 	mov.w	r1, #0
 8009c16:	f7f6 fb37 	bl	8000288 <__aeabi_dsub>
 8009c1a:	4602      	mov	r2, r0
 8009c1c:	460b      	mov	r3, r1
 8009c1e:	4610      	mov	r0, r2
 8009c20:	4619      	mov	r1, r3
 8009c22:	e013      	b.n	8009c4c <leg_conv+0x9e4>
 8009c24:	f3af 8000 	nop.w
 8009c28:	33333333 	.word	0x33333333
 8009c2c:	3fd33333 	.word	0x3fd33333
 8009c30:	33333333 	.word	0x33333333
 8009c34:	3fe33333 	.word	0x3fe33333
 8009c38:	3ff00000 	.word	0x3ff00000
 8009c3c:	33333333 	.word	0x33333333
 8009c40:	3fc33333 	.word	0x3fc33333
 8009c44:	5532617c 	.word	0x5532617c
 8009c48:	3fa92a30 	.word	0x3fa92a30
 8009c4c:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 8009c50:	f7f6 fcd2 	bl	80005f8 <__aeabi_dmul>
 8009c54:	4602      	mov	r2, r0
 8009c56:	460b      	mov	r3, r1
 8009c58:	4614      	mov	r4, r2
 8009c5a:	461d      	mov	r5, r3
 8009c5c:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8009c60:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 8009c64:	f7f6 fcc8 	bl	80005f8 <__aeabi_dmul>
 8009c68:	4602      	mov	r2, r0
 8009c6a:	460b      	mov	r3, r1
 8009c6c:	4610      	mov	r0, r2
 8009c6e:	4619      	mov	r1, r3
 8009c70:	a319      	add	r3, pc, #100	@ (adr r3, 8009cd8 <leg_conv+0xa70>)
 8009c72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009c76:	f7f6 fcbf 	bl	80005f8 <__aeabi_dmul>
 8009c7a:	4602      	mov	r2, r0
 8009c7c:	460b      	mov	r3, r1
 8009c7e:	4610      	mov	r0, r2
 8009c80:	4619      	mov	r1, r3
 8009c82:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8009c86:	f7f6 fcb7 	bl	80005f8 <__aeabi_dmul>
 8009c8a:	4602      	mov	r2, r0
 8009c8c:	460b      	mov	r3, r1
 8009c8e:	4620      	mov	r0, r4
 8009c90:	4629      	mov	r1, r5
 8009c92:	f7f6 fafb 	bl	800028c <__adddf3>
 8009c96:	4602      	mov	r2, r0
 8009c98:	460b      	mov	r3, r1
 8009c9a:	4610      	mov	r0, r2
 8009c9c:	4619      	mov	r1, r3
 8009c9e:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009ca2:	f7f6 fca9 	bl	80005f8 <__aeabi_dmul>
 8009ca6:	4602      	mov	r2, r0
 8009ca8:	460b      	mov	r3, r1
 8009caa:	4610      	mov	r0, r2
 8009cac:	4619      	mov	r1, r3
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	f103 0408 	add.w	r4, r3, #8
 8009cb4:	4602      	mov	r2, r0
 8009cb6:	460b      	mov	r3, r1
 8009cb8:	4640      	mov	r0, r8
 8009cba:	4649      	mov	r1, r9
 8009cbc:	f7f6 fae6 	bl	800028c <__adddf3>
 8009cc0:	4602      	mov	r2, r0
 8009cc2:	460b      	mov	r3, r1
 8009cc4:	e9c4 2300 	strd	r2, r3, [r4]
 8009cc8:	bf00      	nop
 8009cca:	37e8      	adds	r7, #232	@ 0xe8
 8009ccc:	46bd      	mov	sp, r7
 8009cce:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009cd2:	bf00      	nop
 8009cd4:	f3af 8000 	nop.w
 8009cd8:	33333333 	.word	0x33333333
 8009cdc:	3fd33333 	.word	0x3fd33333

08009ce0 <leg_spd>:
 8009ce0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009ce4:	b0be      	sub	sp, #248	@ 0xf8
 8009ce6:	af00      	add	r7, sp, #0
 8009ce8:	ed87 0b0c 	vstr	d0, [r7, #48]	@ 0x30
 8009cec:	ed87 1b0a 	vstr	d1, [r7, #40]	@ 0x28
 8009cf0:	ed87 2b08 	vstr	d2, [r7, #32]
 8009cf4:	ed87 3b06 	vstr	d3, [r7, #24]
 8009cf8:	6178      	str	r0, [r7, #20]
 8009cfa:	ed97 0b08 	vldr	d0, [r7, #32]
 8009cfe:	f018 fccb 	bl	8022698 <cos>
 8009d02:	ed87 0b3c 	vstr	d0, [r7, #240]	@ 0xf0
 8009d06:	ed97 0b06 	vldr	d0, [r7, #24]
 8009d0a:	f018 fcc5 	bl	8022698 <cos>
 8009d0e:	ed87 0b3a 	vstr	d0, [r7, #232]	@ 0xe8
 8009d12:	ed97 0b08 	vldr	d0, [r7, #32]
 8009d16:	f018 fd1b 	bl	8022750 <sin>
 8009d1a:	ed87 0b38 	vstr	d0, [r7, #224]	@ 0xe0
 8009d1e:	ed97 0b06 	vldr	d0, [r7, #24]
 8009d22:	f018 fd15 	bl	8022750 <sin>
 8009d26:	ed87 0b36 	vstr	d0, [r7, #216]	@ 0xd8
 8009d2a:	f20f 5350 	addw	r3, pc, #1360	@ 0x550
 8009d2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d32:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	@ 0xf0
 8009d36:	f7f6 fc5f 	bl	80005f8 <__aeabi_dmul>
 8009d3a:	4602      	mov	r2, r0
 8009d3c:	460b      	mov	r3, r1
 8009d3e:	e9c7 2334 	strd	r2, r3, [r7, #208]	@ 0xd0
 8009d42:	f20f 5338 	addw	r3, pc, #1336	@ 0x538
 8009d46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d4a:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8009d4e:	f7f6 fc53 	bl	80005f8 <__aeabi_dmul>
 8009d52:	4602      	mov	r2, r0
 8009d54:	460b      	mov	r3, r1
 8009d56:	e9c7 2332 	strd	r2, r3, [r7, #200]	@ 0xc8
 8009d5a:	f20f 5328 	addw	r3, pc, #1320	@ 0x528
 8009d5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d62:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	@ 0xf0
 8009d66:	f7f6 fc47 	bl	80005f8 <__aeabi_dmul>
 8009d6a:	4602      	mov	r2, r0
 8009d6c:	460b      	mov	r3, r1
 8009d6e:	e9c7 2330 	strd	r2, r3, [r7, #192]	@ 0xc0
 8009d72:	f20f 5310 	addw	r3, pc, #1296	@ 0x510
 8009d76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d7a:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	@ 0xe8
 8009d7e:	f7f6 fc3b 	bl	80005f8 <__aeabi_dmul>
 8009d82:	4602      	mov	r2, r0
 8009d84:	460b      	mov	r3, r1
 8009d86:	e9c7 232e 	strd	r2, r3, [r7, #184]	@ 0xb8
 8009d8a:	f20f 43f8 	addw	r3, pc, #1272	@ 0x4f8
 8009d8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009d92:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8009d96:	f7f6 fc2f 	bl	80005f8 <__aeabi_dmul>
 8009d9a:	4602      	mov	r2, r0
 8009d9c:	460b      	mov	r3, r1
 8009d9e:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 8009da2:	f20f 43e0 	addw	r3, pc, #1248	@ 0x4e0
 8009da6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009daa:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009dae:	f7f6 fc23 	bl	80005f8 <__aeabi_dmul>
 8009db2:	4602      	mov	r2, r0
 8009db4:	460b      	mov	r3, r1
 8009db6:	e9c7 232a 	strd	r2, r3, [r7, #168]	@ 0xa8
 8009dba:	f20f 43c0 	addw	r3, pc, #1216	@ 0x4c0
 8009dbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009dc2:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009dc6:	f7f6 fc17 	bl	80005f8 <__aeabi_dmul>
 8009dca:	4602      	mov	r2, r0
 8009dcc:	460b      	mov	r3, r1
 8009dce:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8009dd2:	f7f6 fa59 	bl	8000288 <__aeabi_dsub>
 8009dd6:	4602      	mov	r2, r0
 8009dd8:	460b      	mov	r3, r1
 8009dda:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 8009dde:	e9d7 232a 	ldrd	r2, r3, [r7, #168]	@ 0xa8
 8009de2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8009de6:	f7f6 fa4f 	bl	8000288 <__aeabi_dsub>
 8009dea:	4602      	mov	r2, r0
 8009dec:	460b      	mov	r3, r1
 8009dee:	e9c7 2326 	strd	r2, r3, [r7, #152]	@ 0x98
 8009df2:	f20f 4388 	addw	r3, pc, #1160	@ 0x488
 8009df6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009dfa:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	@ 0xe8
 8009dfe:	f7f6 fbfb 	bl	80005f8 <__aeabi_dmul>
 8009e02:	4602      	mov	r2, r0
 8009e04:	460b      	mov	r3, r1
 8009e06:	4610      	mov	r0, r2
 8009e08:	4619      	mov	r1, r3
 8009e0a:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 8009e0e:	f7f6 fa3b 	bl	8000288 <__aeabi_dsub>
 8009e12:	4602      	mov	r2, r0
 8009e14:	460b      	mov	r3, r1
 8009e16:	4610      	mov	r0, r2
 8009e18:	4619      	mov	r1, r3
 8009e1a:	f20f 4370 	addw	r3, pc, #1136	@ 0x470
 8009e1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009e22:	f7f6 fa33 	bl	800028c <__adddf3>
 8009e26:	4602      	mov	r2, r0
 8009e28:	460b      	mov	r3, r1
 8009e2a:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 8009e2e:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 8009e32:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 8009e36:	f7f6 fa27 	bl	8000288 <__aeabi_dsub>
 8009e3a:	4602      	mov	r2, r0
 8009e3c:	460b      	mov	r3, r1
 8009e3e:	4610      	mov	r0, r2
 8009e40:	4619      	mov	r1, r3
 8009e42:	f20f 4350 	addw	r3, pc, #1104	@ 0x450
 8009e46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009e4a:	f7f6 fa1f 	bl	800028c <__adddf3>
 8009e4e:	4602      	mov	r2, r0
 8009e50:	460b      	mov	r3, r1
 8009e52:	e9c7 2322 	strd	r2, r3, [r7, #136]	@ 0x88
 8009e56:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8009e5a:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 8009e5e:	f7f6 fbcb 	bl	80005f8 <__aeabi_dmul>
 8009e62:	4602      	mov	r2, r0
 8009e64:	460b      	mov	r3, r1
 8009e66:	4614      	mov	r4, r2
 8009e68:	461d      	mov	r5, r3
 8009e6a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8009e6e:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 8009e72:	f7f6 fbc1 	bl	80005f8 <__aeabi_dmul>
 8009e76:	4602      	mov	r2, r0
 8009e78:	460b      	mov	r3, r1
 8009e7a:	4620      	mov	r0, r4
 8009e7c:	4629      	mov	r1, r5
 8009e7e:	f7f6 fa05 	bl	800028c <__adddf3>
 8009e82:	4602      	mov	r2, r0
 8009e84:	460b      	mov	r3, r1
 8009e86:	e9c7 2320 	strd	r2, r3, [r7, #128]	@ 0x80
 8009e8a:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8009e8e:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	@ 0xf0
 8009e92:	f7f6 fbb1 	bl	80005f8 <__aeabi_dmul>
 8009e96:	4602      	mov	r2, r0
 8009e98:	460b      	mov	r3, r1
 8009e9a:	4610      	mov	r0, r2
 8009e9c:	4619      	mov	r1, r3
 8009e9e:	a3ff      	add	r3, pc, #1020	@ (adr r3, 800a29c <leg_spd+0x5bc>)
 8009ea0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009ea4:	f7f6 fba8 	bl	80005f8 <__aeabi_dmul>
 8009ea8:	4602      	mov	r2, r0
 8009eaa:	460b      	mov	r3, r1
 8009eac:	4614      	mov	r4, r2
 8009eae:	461d      	mov	r5, r3
 8009eb0:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8009eb4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8009eb8:	f7f6 fb9e 	bl	80005f8 <__aeabi_dmul>
 8009ebc:	4602      	mov	r2, r0
 8009ebe:	460b      	mov	r3, r1
 8009ec0:	4610      	mov	r0, r2
 8009ec2:	4619      	mov	r1, r3
 8009ec4:	a3f5      	add	r3, pc, #980	@ (adr r3, 800a29c <leg_spd+0x5bc>)
 8009ec6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009eca:	f7f6 fb95 	bl	80005f8 <__aeabi_dmul>
 8009ece:	4602      	mov	r2, r0
 8009ed0:	460b      	mov	r3, r1
 8009ed2:	4620      	mov	r0, r4
 8009ed4:	4629      	mov	r1, r5
 8009ed6:	f7f6 f9d9 	bl	800028c <__adddf3>
 8009eda:	4602      	mov	r2, r0
 8009edc:	460b      	mov	r3, r1
 8009ede:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
 8009ee2:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 8009ee6:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	@ 0xe8
 8009eea:	f7f6 fb85 	bl	80005f8 <__aeabi_dmul>
 8009eee:	4602      	mov	r2, r0
 8009ef0:	460b      	mov	r3, r1
 8009ef2:	4610      	mov	r0, r2
 8009ef4:	4619      	mov	r1, r3
 8009ef6:	a3e9      	add	r3, pc, #932	@ (adr r3, 800a29c <leg_spd+0x5bc>)
 8009ef8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009efc:	f7f6 fb7c 	bl	80005f8 <__aeabi_dmul>
 8009f00:	4602      	mov	r2, r0
 8009f02:	460b      	mov	r3, r1
 8009f04:	4614      	mov	r4, r2
 8009f06:	461d      	mov	r5, r3
 8009f08:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 8009f0c:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 8009f10:	f7f6 fb72 	bl	80005f8 <__aeabi_dmul>
 8009f14:	4602      	mov	r2, r0
 8009f16:	460b      	mov	r3, r1
 8009f18:	4610      	mov	r0, r2
 8009f1a:	4619      	mov	r1, r3
 8009f1c:	a3df      	add	r3, pc, #892	@ (adr r3, 800a29c <leg_spd+0x5bc>)
 8009f1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009f22:	f7f6 fb69 	bl	80005f8 <__aeabi_dmul>
 8009f26:	4602      	mov	r2, r0
 8009f28:	460b      	mov	r3, r1
 8009f2a:	4620      	mov	r0, r4
 8009f2c:	4629      	mov	r1, r5
 8009f2e:	f7f6 f9ad 	bl	800028c <__adddf3>
 8009f32:	4602      	mov	r2, r0
 8009f34:	460b      	mov	r3, r1
 8009f36:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
 8009f3a:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009f3e:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8009f42:	f7f6 f9a3 	bl	800028c <__adddf3>
 8009f46:	4602      	mov	r2, r0
 8009f48:	460b      	mov	r3, r1
 8009f4a:	f04f 0000 	mov.w	r0, #0
 8009f4e:	49ca      	ldr	r1, [pc, #808]	@ (800a278 <leg_spd+0x598>)
 8009f50:	f7f6 fc7c 	bl	800084c <__aeabi_ddiv>
 8009f54:	4602      	mov	r2, r0
 8009f56:	460b      	mov	r3, r1
 8009f58:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 8009f5c:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 8009f60:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8009f64:	f7f6 fb48 	bl	80005f8 <__aeabi_dmul>
 8009f68:	4602      	mov	r2, r0
 8009f6a:	460b      	mov	r3, r1
 8009f6c:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 8009f70:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 8009f74:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8009f78:	f7f6 fb3e 	bl	80005f8 <__aeabi_dmul>
 8009f7c:	4602      	mov	r2, r0
 8009f7e:	460b      	mov	r3, r1
 8009f80:	4614      	mov	r4, r2
 8009f82:	461d      	mov	r5, r3
 8009f84:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8009f88:	e9d7 0122 	ldrd	r0, r1, [r7, #136]	@ 0x88
 8009f8c:	f7f6 fb34 	bl	80005f8 <__aeabi_dmul>
 8009f90:	4602      	mov	r2, r0
 8009f92:	460b      	mov	r3, r1
 8009f94:	4620      	mov	r0, r4
 8009f96:	4629      	mov	r1, r5
 8009f98:	f7f6 f978 	bl	800028c <__adddf3>
 8009f9c:	4602      	mov	r2, r0
 8009f9e:	460b      	mov	r3, r1
 8009fa0:	4614      	mov	r4, r2
 8009fa2:	461d      	mov	r5, r3
 8009fa4:	e9d7 2320 	ldrd	r2, r3, [r7, #128]	@ 0x80
 8009fa8:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8009fac:	f7f6 fb24 	bl	80005f8 <__aeabi_dmul>
 8009fb0:	4602      	mov	r2, r0
 8009fb2:	460b      	mov	r3, r1
 8009fb4:	4620      	mov	r0, r4
 8009fb6:	4629      	mov	r1, r5
 8009fb8:	f7f6 f966 	bl	8000288 <__aeabi_dsub>
 8009fbc:	4602      	mov	r2, r0
 8009fbe:	460b      	mov	r3, r1
 8009fc0:	ec43 2b17 	vmov	d7, r2, r3
 8009fc4:	eeb0 0a47 	vmov.f32	s0, s14
 8009fc8:	eef0 0a67 	vmov.f32	s1, s15
 8009fcc:	f018 f99e 	bl	802230c <sqrt>
 8009fd0:	ed87 0b16 	vstr	d0, [r7, #88]	@ 0x58
 8009fd4:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8009fd8:	f04f 0000 	mov.w	r0, #0
 8009fdc:	49a6      	ldr	r1, [pc, #664]	@ (800a278 <leg_spd+0x598>)
 8009fde:	f7f6 fc35 	bl	800084c <__aeabi_ddiv>
 8009fe2:	4602      	mov	r2, r0
 8009fe4:	460b      	mov	r3, r1
 8009fe6:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 8009fea:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 8009fee:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 8009ff2:	f7f6 f949 	bl	8000288 <__aeabi_dsub>
 8009ff6:	4602      	mov	r2, r0
 8009ff8:	460b      	mov	r3, r1
 8009ffa:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 8009ffe:	f7f6 f945 	bl	800028c <__adddf3>
 800a002:	4602      	mov	r2, r0
 800a004:	460b      	mov	r3, r1
 800a006:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 800a00a:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a00e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800a012:	f7f6 faf1 	bl	80005f8 <__aeabi_dmul>
 800a016:	4602      	mov	r2, r0
 800a018:	460b      	mov	r3, r1
 800a01a:	ec43 2b17 	vmov	d7, r2, r3
 800a01e:	eeb0 0a47 	vmov.f32	s0, s14
 800a022:	eef0 0a67 	vmov.f32	s1, s15
 800a026:	f018 f99f 	bl	8022368 <atan>
 800a02a:	ec51 0b10 	vmov	r0, r1, d0
 800a02e:	4602      	mov	r2, r0
 800a030:	460b      	mov	r3, r1
 800a032:	f7f6 f92b 	bl	800028c <__adddf3>
 800a036:	4602      	mov	r2, r0
 800a038:	460b      	mov	r3, r1
 800a03a:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800a03e:	ed97 0b28 	vldr	d0, [r7, #160]	@ 0xa0
 800a042:	f018 fb29 	bl	8022698 <cos>
 800a046:	ed87 0b12 	vstr	d0, [r7, #72]	@ 0x48
 800a04a:	ed97 0b28 	vldr	d0, [r7, #160]	@ 0xa0
 800a04e:	f018 fb7f 	bl	8022750 <sin>
 800a052:	ed87 0b10 	vstr	d0, [r7, #64]	@ 0x40
 800a056:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a05a:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 800a05e:	f7f6 facb 	bl	80005f8 <__aeabi_dmul>
 800a062:	4602      	mov	r2, r0
 800a064:	460b      	mov	r3, r1
 800a066:	4610      	mov	r0, r2
 800a068:	4619      	mov	r1, r3
 800a06a:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800a06e:	f7f6 fac3 	bl	80005f8 <__aeabi_dmul>
 800a072:	4602      	mov	r2, r0
 800a074:	460b      	mov	r3, r1
 800a076:	4610      	mov	r0, r2
 800a078:	4619      	mov	r1, r3
 800a07a:	f04f 0200 	mov.w	r2, #0
 800a07e:	4b7e      	ldr	r3, [pc, #504]	@ (800a278 <leg_spd+0x598>)
 800a080:	f7f6 f904 	bl	800028c <__adddf3>
 800a084:	4602      	mov	r2, r0
 800a086:	460b      	mov	r3, r1
 800a088:	f04f 0000 	mov.w	r0, #0
 800a08c:	497a      	ldr	r1, [pc, #488]	@ (800a278 <leg_spd+0x598>)
 800a08e:	f7f6 fbdd 	bl	800084c <__aeabi_ddiv>
 800a092:	4602      	mov	r2, r0
 800a094:	460b      	mov	r3, r1
 800a096:	e9c7 230e 	strd	r2, r3, [r7, #56]	@ 0x38
 800a09a:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 800a09e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800a0a2:	f7f6 f8f3 	bl	800028c <__adddf3>
 800a0a6:	4602      	mov	r2, r0
 800a0a8:	460b      	mov	r3, r1
 800a0aa:	4610      	mov	r0, r2
 800a0ac:	4619      	mov	r1, r3
 800a0ae:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800a0b2:	f7f6 faa1 	bl	80005f8 <__aeabi_dmul>
 800a0b6:	4602      	mov	r2, r0
 800a0b8:	460b      	mov	r3, r1
 800a0ba:	4610      	mov	r0, r2
 800a0bc:	4619      	mov	r1, r3
 800a0be:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a0c2:	f7f6 fa99 	bl	80005f8 <__aeabi_dmul>
 800a0c6:	4602      	mov	r2, r0
 800a0c8:	460b      	mov	r3, r1
 800a0ca:	4690      	mov	r8, r2
 800a0cc:	4699      	mov	r9, r3
 800a0ce:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 800a0d2:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	@ 0xf0
 800a0d6:	f7f6 fa8f 	bl	80005f8 <__aeabi_dmul>
 800a0da:	4602      	mov	r2, r0
 800a0dc:	460b      	mov	r3, r1
 800a0de:	4610      	mov	r0, r2
 800a0e0:	4619      	mov	r1, r3
 800a0e2:	a363      	add	r3, pc, #396	@ (adr r3, 800a270 <leg_spd+0x590>)
 800a0e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a0e8:	f7f6 fa86 	bl	80005f8 <__aeabi_dmul>
 800a0ec:	4602      	mov	r2, r0
 800a0ee:	460b      	mov	r3, r1
 800a0f0:	4614      	mov	r4, r2
 800a0f2:	461d      	mov	r5, r3
 800a0f4:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800a0f8:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800a0fc:	f7f6 fa7c 	bl	80005f8 <__aeabi_dmul>
 800a100:	4602      	mov	r2, r0
 800a102:	460b      	mov	r3, r1
 800a104:	4610      	mov	r0, r2
 800a106:	4619      	mov	r1, r3
 800a108:	a359      	add	r3, pc, #356	@ (adr r3, 800a270 <leg_spd+0x590>)
 800a10a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a10e:	f7f6 fa73 	bl	80005f8 <__aeabi_dmul>
 800a112:	4602      	mov	r2, r0
 800a114:	460b      	mov	r3, r1
 800a116:	4620      	mov	r0, r4
 800a118:	4629      	mov	r1, r5
 800a11a:	f7f6 f8b7 	bl	800028c <__adddf3>
 800a11e:	4602      	mov	r2, r0
 800a120:	460b      	mov	r3, r1
 800a122:	4614      	mov	r4, r2
 800a124:	461d      	mov	r5, r3
 800a126:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 800a12a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800a12e:	f7f6 fa63 	bl	80005f8 <__aeabi_dmul>
 800a132:	4602      	mov	r2, r0
 800a134:	460b      	mov	r3, r1
 800a136:	4610      	mov	r0, r2
 800a138:	4619      	mov	r1, r3
 800a13a:	4602      	mov	r2, r0
 800a13c:	460b      	mov	r3, r1
 800a13e:	f7f6 f8a5 	bl	800028c <__adddf3>
 800a142:	4602      	mov	r2, r0
 800a144:	460b      	mov	r3, r1
 800a146:	4620      	mov	r0, r4
 800a148:	4629      	mov	r1, r5
 800a14a:	f7f6 f89d 	bl	8000288 <__aeabi_dsub>
 800a14e:	4602      	mov	r2, r0
 800a150:	460b      	mov	r3, r1
 800a152:	4610      	mov	r0, r2
 800a154:	4619      	mov	r1, r3
 800a156:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800a15a:	f7f6 fa4d 	bl	80005f8 <__aeabi_dmul>
 800a15e:	4602      	mov	r2, r0
 800a160:	460b      	mov	r3, r1
 800a162:	4610      	mov	r0, r2
 800a164:	4619      	mov	r1, r3
 800a166:	f04f 0200 	mov.w	r2, #0
 800a16a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a16e:	f7f6 fb6d 	bl	800084c <__aeabi_ddiv>
 800a172:	4602      	mov	r2, r0
 800a174:	460b      	mov	r3, r1
 800a176:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800a17a:	f7f6 f885 	bl	8000288 <__aeabi_dsub>
 800a17e:	4602      	mov	r2, r0
 800a180:	460b      	mov	r3, r1
 800a182:	4610      	mov	r0, r2
 800a184:	4619      	mov	r1, r3
 800a186:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 800a18a:	f7f6 fa35 	bl	80005f8 <__aeabi_dmul>
 800a18e:	4602      	mov	r2, r0
 800a190:	460b      	mov	r3, r1
 800a192:	4640      	mov	r0, r8
 800a194:	4649      	mov	r1, r9
 800a196:	f7f6 f879 	bl	800028c <__adddf3>
 800a19a:	4602      	mov	r2, r0
 800a19c:	460b      	mov	r3, r1
 800a19e:	e9c7 231e 	strd	r2, r3, [r7, #120]	@ 0x78
 800a1a2:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800a1a6:	e9d7 012a 	ldrd	r0, r1, [r7, #168]	@ 0xa8
 800a1aa:	f7f6 f86f 	bl	800028c <__adddf3>
 800a1ae:	4602      	mov	r2, r0
 800a1b0:	460b      	mov	r3, r1
 800a1b2:	4610      	mov	r0, r2
 800a1b4:	4619      	mov	r1, r3
 800a1b6:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	@ 0x60
 800a1ba:	f7f6 fa1d 	bl	80005f8 <__aeabi_dmul>
 800a1be:	4602      	mov	r2, r0
 800a1c0:	460b      	mov	r3, r1
 800a1c2:	4610      	mov	r0, r2
 800a1c4:	4619      	mov	r1, r3
 800a1c6:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a1ca:	f7f6 fa15 	bl	80005f8 <__aeabi_dmul>
 800a1ce:	4602      	mov	r2, r0
 800a1d0:	460b      	mov	r3, r1
 800a1d2:	4690      	mov	r8, r2
 800a1d4:	4699      	mov	r9, r3
 800a1d6:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	@ 0x98
 800a1da:	e9d7 013a 	ldrd	r0, r1, [r7, #232]	@ 0xe8
 800a1de:	f7f6 fa0b 	bl	80005f8 <__aeabi_dmul>
 800a1e2:	4602      	mov	r2, r0
 800a1e4:	460b      	mov	r3, r1
 800a1e6:	4610      	mov	r0, r2
 800a1e8:	4619      	mov	r1, r3
 800a1ea:	a321      	add	r3, pc, #132	@ (adr r3, 800a270 <leg_spd+0x590>)
 800a1ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a1f0:	f7f6 fa02 	bl	80005f8 <__aeabi_dmul>
 800a1f4:	4602      	mov	r2, r0
 800a1f6:	460b      	mov	r3, r1
 800a1f8:	4614      	mov	r4, r2
 800a1fa:	461d      	mov	r5, r3
 800a1fc:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800a200:	e9d7 0136 	ldrd	r0, r1, [r7, #216]	@ 0xd8
 800a204:	f7f6 f9f8 	bl	80005f8 <__aeabi_dmul>
 800a208:	4602      	mov	r2, r0
 800a20a:	460b      	mov	r3, r1
 800a20c:	4610      	mov	r0, r2
 800a20e:	4619      	mov	r1, r3
 800a210:	a317      	add	r3, pc, #92	@ (adr r3, 800a270 <leg_spd+0x590>)
 800a212:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a216:	f7f6 f9ef 	bl	80005f8 <__aeabi_dmul>
 800a21a:	4602      	mov	r2, r0
 800a21c:	460b      	mov	r3, r1
 800a21e:	4620      	mov	r0, r4
 800a220:	4629      	mov	r1, r5
 800a222:	f7f6 f833 	bl	800028c <__adddf3>
 800a226:	4602      	mov	r2, r0
 800a228:	460b      	mov	r3, r1
 800a22a:	4614      	mov	r4, r2
 800a22c:	461d      	mov	r5, r3
 800a22e:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800a232:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800a236:	f7f6 f9df 	bl	80005f8 <__aeabi_dmul>
 800a23a:	4602      	mov	r2, r0
 800a23c:	460b      	mov	r3, r1
 800a23e:	4610      	mov	r0, r2
 800a240:	4619      	mov	r1, r3
 800a242:	4602      	mov	r2, r0
 800a244:	460b      	mov	r3, r1
 800a246:	f7f6 f821 	bl	800028c <__adddf3>
 800a24a:	4602      	mov	r2, r0
 800a24c:	460b      	mov	r3, r1
 800a24e:	4620      	mov	r0, r4
 800a250:	4629      	mov	r1, r5
 800a252:	f7f6 f819 	bl	8000288 <__aeabi_dsub>
 800a256:	4602      	mov	r2, r0
 800a258:	460b      	mov	r3, r1
 800a25a:	4610      	mov	r0, r2
 800a25c:	4619      	mov	r1, r3
 800a25e:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800a262:	f7f6 f9c9 	bl	80005f8 <__aeabi_dmul>
 800a266:	4602      	mov	r2, r0
 800a268:	460b      	mov	r3, r1
 800a26a:	e01b      	b.n	800a2a4 <leg_spd+0x5c4>
 800a26c:	f3af 8000 	nop.w
 800a270:	bc6a7efa 	.word	0xbc6a7efa
 800a274:	3fa89374 	.word	0x3fa89374
 800a278:	3ff00000 	.word	0x3ff00000
 800a27c:	47ae147b 	.word	0x47ae147b
 800a280:	3fb47ae1 	.word	0x3fb47ae1
 800a284:	bc6a7efa 	.word	0xbc6a7efa
 800a288:	3f989374 	.word	0x3f989374
 800a28c:	5532617c 	.word	0x5532617c
 800a290:	3fb92a30 	.word	0x3fb92a30
 800a294:	663c74fb 	.word	0x663c74fb
 800a298:	3f9e32a0 	.word	0x3f9e32a0
 800a29c:	47ae147b 	.word	0x47ae147b
 800a2a0:	3fc47ae1 	.word	0x3fc47ae1
 800a2a4:	4610      	mov	r0, r2
 800a2a6:	4619      	mov	r1, r3
 800a2a8:	f04f 0200 	mov.w	r2, #0
 800a2ac:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a2b0:	f7f6 facc 	bl	800084c <__aeabi_ddiv>
 800a2b4:	4602      	mov	r2, r0
 800a2b6:	460b      	mov	r3, r1
 800a2b8:	e9d7 012e 	ldrd	r0, r1, [r7, #184]	@ 0xb8
 800a2bc:	f7f5 ffe4 	bl	8000288 <__aeabi_dsub>
 800a2c0:	4602      	mov	r2, r0
 800a2c2:	460b      	mov	r3, r1
 800a2c4:	4610      	mov	r0, r2
 800a2c6:	4619      	mov	r1, r3
 800a2c8:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 800a2cc:	f7f6 f994 	bl	80005f8 <__aeabi_dmul>
 800a2d0:	4602      	mov	r2, r0
 800a2d2:	460b      	mov	r3, r1
 800a2d4:	4640      	mov	r0, r8
 800a2d6:	4649      	mov	r1, r9
 800a2d8:	f7f5 ffd8 	bl	800028c <__adddf3>
 800a2dc:	4602      	mov	r2, r0
 800a2de:	460b      	mov	r3, r1
 800a2e0:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800a2e4:	f20f 432c 	addw	r3, pc, #1068	@ 0x42c
 800a2e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a2ec:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	@ 0x40
 800a2f0:	f7f6 f982 	bl	80005f8 <__aeabi_dmul>
 800a2f4:	4602      	mov	r2, r0
 800a2f6:	460b      	mov	r3, r1
 800a2f8:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800a2fc:	f7f5 ffc6 	bl	800028c <__adddf3>
 800a300:	4602      	mov	r2, r0
 800a302:	460b      	mov	r3, r1
 800a304:	e9c7 2338 	strd	r2, r3, [r7, #224]	@ 0xe0
 800a308:	f20f 4308 	addw	r3, pc, #1032	@ 0x408
 800a30c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a310:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800a314:	f7f6 f970 	bl	80005f8 <__aeabi_dmul>
 800a318:	4602      	mov	r2, r0
 800a31a:	460b      	mov	r3, r1
 800a31c:	4610      	mov	r0, r2
 800a31e:	4619      	mov	r1, r3
 800a320:	e9d7 2334 	ldrd	r2, r3, [r7, #208]	@ 0xd0
 800a324:	f7f5 ffb2 	bl	800028c <__adddf3>
 800a328:	4602      	mov	r2, r0
 800a32a:	460b      	mov	r3, r1
 800a32c:	4610      	mov	r0, r2
 800a32e:	4619      	mov	r1, r3
 800a330:	a3fa      	add	r3, pc, #1000	@ (adr r3, 800a71c <leg_spd+0xa3c>)
 800a332:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a336:	f7f5 ffa7 	bl	8000288 <__aeabi_dsub>
 800a33a:	4602      	mov	r2, r0
 800a33c:	460b      	mov	r3, r1
 800a33e:	e9c7 2330 	strd	r2, r3, [r7, #192]	@ 0xc0
 800a342:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 800a346:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800a34a:	f7f6 f955 	bl	80005f8 <__aeabi_dmul>
 800a34e:	4602      	mov	r2, r0
 800a350:	460b      	mov	r3, r1
 800a352:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 800a356:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a35a:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 800a35e:	f7f6 f94b 	bl	80005f8 <__aeabi_dmul>
 800a362:	4602      	mov	r2, r0
 800a364:	460b      	mov	r3, r1
 800a366:	e9c7 232c 	strd	r2, r3, [r7, #176]	@ 0xb0
 800a36a:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 800a36e:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	@ 0x40
 800a372:	f7f6 f941 	bl	80005f8 <__aeabi_dmul>
 800a376:	4602      	mov	r2, r0
 800a378:	460b      	mov	r3, r1
 800a37a:	e9c7 2318 	strd	r2, r3, [r7, #96]	@ 0x60
 800a37e:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a382:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800a386:	f7f6 f937 	bl	80005f8 <__aeabi_dmul>
 800a38a:	4602      	mov	r2, r0
 800a38c:	460b      	mov	r3, r1
 800a38e:	e9c7 233c 	strd	r2, r3, [r7, #240]	@ 0xf0
 800a392:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800a396:	60bb      	str	r3, [r7, #8]
 800a398:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800a39c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 800a3a0:	60fb      	str	r3, [r7, #12]
 800a3a2:	a3dc      	add	r3, pc, #880	@ (adr r3, 800a714 <leg_spd+0xa34>)
 800a3a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a3a8:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	@ 0x48
 800a3ac:	f7f6 f924 	bl	80005f8 <__aeabi_dmul>
 800a3b0:	4602      	mov	r2, r0
 800a3b2:	460b      	mov	r3, r1
 800a3b4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a3b8:	f7f5 ff66 	bl	8000288 <__aeabi_dsub>
 800a3bc:	4602      	mov	r2, r0
 800a3be:	460b      	mov	r3, r1
 800a3c0:	4610      	mov	r0, r2
 800a3c2:	4619      	mov	r1, r3
 800a3c4:	a3d5      	add	r3, pc, #852	@ (adr r3, 800a71c <leg_spd+0xa3c>)
 800a3c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a3ca:	f7f5 ff5f 	bl	800028c <__adddf3>
 800a3ce:	4602      	mov	r2, r0
 800a3d0:	460b      	mov	r3, r1
 800a3d2:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800a3d6:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a3da:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800a3de:	f7f6 f90b 	bl	80005f8 <__aeabi_dmul>
 800a3e2:	4602      	mov	r2, r0
 800a3e4:	460b      	mov	r3, r1
 800a3e6:	e9c7 2314 	strd	r2, r3, [r7, #80]	@ 0x50
 800a3ea:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a3ee:	f04f 0000 	mov.w	r0, #0
 800a3f2:	49c7      	ldr	r1, [pc, #796]	@ (800a710 <leg_spd+0xa30>)
 800a3f4:	f7f6 fa2a 	bl	800084c <__aeabi_ddiv>
 800a3f8:	4602      	mov	r2, r0
 800a3fa:	460b      	mov	r3, r1
 800a3fc:	e9c7 231a 	strd	r2, r3, [r7, #104]	@ 0x68
 800a400:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	@ 0xe0
 800a404:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800a408:	f7f6 f8f6 	bl	80005f8 <__aeabi_dmul>
 800a40c:	4602      	mov	r2, r0
 800a40e:	460b      	mov	r3, r1
 800a410:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 800a414:	e9d7 2330 	ldrd	r2, r3, [r7, #192]	@ 0xc0
 800a418:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800a41c:	f7f6 f8ec 	bl	80005f8 <__aeabi_dmul>
 800a420:	4602      	mov	r2, r0
 800a422:	460b      	mov	r3, r1
 800a424:	4610      	mov	r0, r2
 800a426:	4619      	mov	r1, r3
 800a428:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a42c:	f7f5 ff2e 	bl	800028c <__adddf3>
 800a430:	4602      	mov	r2, r0
 800a432:	460b      	mov	r3, r1
 800a434:	ec43 2b17 	vmov	d7, r2, r3
 800a438:	eeb0 0a47 	vmov.f32	s0, s14
 800a43c:	eef0 0a67 	vmov.f32	s1, s15
 800a440:	f017 ff64 	bl	802230c <sqrt>
 800a444:	ec53 2b10 	vmov	r2, r3, d0
 800a448:	f04f 0000 	mov.w	r0, #0
 800a44c:	49b0      	ldr	r1, [pc, #704]	@ (800a710 <leg_spd+0xa30>)
 800a44e:	f7f6 f9fd 	bl	800084c <__aeabi_ddiv>
 800a452:	4602      	mov	r2, r0
 800a454:	460b      	mov	r3, r1
 800a456:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800a45a:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800a45e:	e9d7 0124 	ldrd	r0, r1, [r7, #144]	@ 0x90
 800a462:	f7f5 ff13 	bl	800028c <__adddf3>
 800a466:	4602      	mov	r2, r0
 800a468:	460b      	mov	r3, r1
 800a46a:	f04f 0000 	mov.w	r0, #0
 800a46e:	49a8      	ldr	r1, [pc, #672]	@ (800a710 <leg_spd+0xa30>)
 800a470:	f7f6 f9ec 	bl	800084c <__aeabi_ddiv>
 800a474:	4602      	mov	r2, r0
 800a476:	460b      	mov	r3, r1
 800a478:	e9c7 231c 	strd	r2, r3, [r7, #112]	@ 0x70
 800a47c:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 800a480:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	@ 0x58
 800a484:	f7f6 f8b8 	bl	80005f8 <__aeabi_dmul>
 800a488:	4602      	mov	r2, r0
 800a48a:	460b      	mov	r3, r1
 800a48c:	4610      	mov	r0, r2
 800a48e:	4619      	mov	r1, r3
 800a490:	a39b      	add	r3, pc, #620	@ (adr r3, 800a700 <leg_spd+0xa20>)
 800a492:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a496:	f7f6 f8af 	bl	80005f8 <__aeabi_dmul>
 800a49a:	4602      	mov	r2, r0
 800a49c:	460b      	mov	r3, r1
 800a49e:	e9d7 0134 	ldrd	r0, r1, [r7, #208]	@ 0xd0
 800a4a2:	f7f5 fef1 	bl	8000288 <__aeabi_dsub>
 800a4a6:	4602      	mov	r2, r0
 800a4a8:	460b      	mov	r3, r1
 800a4aa:	e9c7 2316 	strd	r2, r3, [r7, #88]	@ 0x58
 800a4ae:	e9d7 231e 	ldrd	r2, r3, [r7, #120]	@ 0x78
 800a4b2:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	@ 0x60
 800a4b6:	f7f6 f89f 	bl	80005f8 <__aeabi_dmul>
 800a4ba:	4602      	mov	r2, r0
 800a4bc:	460b      	mov	r3, r1
 800a4be:	4610      	mov	r0, r2
 800a4c0:	4619      	mov	r1, r3
 800a4c2:	a38f      	add	r3, pc, #572	@ (adr r3, 800a700 <leg_spd+0xa20>)
 800a4c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a4c8:	f7f6 f896 	bl	80005f8 <__aeabi_dmul>
 800a4cc:	4602      	mov	r2, r0
 800a4ce:	460b      	mov	r3, r1
 800a4d0:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800a4d4:	f7f5 fed8 	bl	8000288 <__aeabi_dsub>
 800a4d8:	4602      	mov	r2, r0
 800a4da:	460b      	mov	r3, r1
 800a4dc:	e9c7 2324 	strd	r2, r3, [r7, #144]	@ 0x90
 800a4e0:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a4e4:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800a4e8:	f7f6 f886 	bl	80005f8 <__aeabi_dmul>
 800a4ec:	4602      	mov	r2, r0
 800a4ee:	460b      	mov	r3, r1
 800a4f0:	4614      	mov	r4, r2
 800a4f2:	461d      	mov	r5, r3
 800a4f4:	e9d7 232c 	ldrd	r2, r3, [r7, #176]	@ 0xb0
 800a4f8:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800a4fc:	f7f6 f87c 	bl	80005f8 <__aeabi_dmul>
 800a500:	4602      	mov	r2, r0
 800a502:	460b      	mov	r3, r1
 800a504:	4610      	mov	r0, r2
 800a506:	4619      	mov	r1, r3
 800a508:	a37f      	add	r3, pc, #508	@ (adr r3, 800a708 <leg_spd+0xa28>)
 800a50a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a50e:	f7f6 f873 	bl	80005f8 <__aeabi_dmul>
 800a512:	4602      	mov	r2, r0
 800a514:	460b      	mov	r3, r1
 800a516:	4690      	mov	r8, r2
 800a518:	4699      	mov	r9, r3
 800a51a:	e9d7 233c 	ldrd	r2, r3, [r7, #240]	@ 0xf0
 800a51e:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800a522:	f7f6 f869 	bl	80005f8 <__aeabi_dmul>
 800a526:	4602      	mov	r2, r0
 800a528:	460b      	mov	r3, r1
 800a52a:	4610      	mov	r0, r2
 800a52c:	4619      	mov	r1, r3
 800a52e:	a376      	add	r3, pc, #472	@ (adr r3, 800a708 <leg_spd+0xa28>)
 800a530:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a534:	f7f6 f860 	bl	80005f8 <__aeabi_dmul>
 800a538:	4602      	mov	r2, r0
 800a53a:	460b      	mov	r3, r1
 800a53c:	4640      	mov	r0, r8
 800a53e:	4649      	mov	r1, r9
 800a540:	f7f5 fea2 	bl	8000288 <__aeabi_dsub>
 800a544:	4602      	mov	r2, r0
 800a546:	460b      	mov	r3, r1
 800a548:	4620      	mov	r0, r4
 800a54a:	4629      	mov	r1, r5
 800a54c:	f7f6 f854 	bl	80005f8 <__aeabi_dmul>
 800a550:	4602      	mov	r2, r0
 800a552:	460b      	mov	r3, r1
 800a554:	4610      	mov	r0, r2
 800a556:	4619      	mov	r1, r3
 800a558:	f04f 0200 	mov.w	r2, #0
 800a55c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a560:	f7f6 f974 	bl	800084c <__aeabi_ddiv>
 800a564:	4602      	mov	r2, r0
 800a566:	460b      	mov	r3, r1
 800a568:	4614      	mov	r4, r2
 800a56a:	461d      	mov	r5, r3
 800a56c:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a570:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	@ 0x30
 800a574:	f7f6 f840 	bl	80005f8 <__aeabi_dmul>
 800a578:	4602      	mov	r2, r0
 800a57a:	460b      	mov	r3, r1
 800a57c:	4690      	mov	r8, r2
 800a57e:	4699      	mov	r9, r3
 800a580:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800a584:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800a588:	f7f6 f836 	bl	80005f8 <__aeabi_dmul>
 800a58c:	4602      	mov	r2, r0
 800a58e:	460b      	mov	r3, r1
 800a590:	4610      	mov	r0, r2
 800a592:	4619      	mov	r1, r3
 800a594:	4602      	mov	r2, r0
 800a596:	460b      	mov	r3, r1
 800a598:	f7f5 fe78 	bl	800028c <__adddf3>
 800a59c:	4602      	mov	r2, r0
 800a59e:	460b      	mov	r3, r1
 800a5a0:	4692      	mov	sl, r2
 800a5a2:	469b      	mov	fp, r3
 800a5a4:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a5a8:	e9d7 0130 	ldrd	r0, r1, [r7, #192]	@ 0xc0
 800a5ac:	f7f6 f824 	bl	80005f8 <__aeabi_dmul>
 800a5b0:	4602      	mov	r2, r0
 800a5b2:	460b      	mov	r3, r1
 800a5b4:	4610      	mov	r0, r2
 800a5b6:	4619      	mov	r1, r3
 800a5b8:	4602      	mov	r2, r0
 800a5ba:	460b      	mov	r3, r1
 800a5bc:	f7f5 fe66 	bl	800028c <__adddf3>
 800a5c0:	4602      	mov	r2, r0
 800a5c2:	460b      	mov	r3, r1
 800a5c4:	4650      	mov	r0, sl
 800a5c6:	4659      	mov	r1, fp
 800a5c8:	f7f5 fe5e 	bl	8000288 <__aeabi_dsub>
 800a5cc:	4602      	mov	r2, r0
 800a5ce:	460b      	mov	r3, r1
 800a5d0:	4640      	mov	r0, r8
 800a5d2:	4649      	mov	r1, r9
 800a5d4:	f7f6 f810 	bl	80005f8 <__aeabi_dmul>
 800a5d8:	4602      	mov	r2, r0
 800a5da:	460b      	mov	r3, r1
 800a5dc:	4610      	mov	r0, r2
 800a5de:	4619      	mov	r1, r3
 800a5e0:	f04f 0200 	mov.w	r2, #0
 800a5e4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a5e8:	f7f6 f930 	bl	800084c <__aeabi_ddiv>
 800a5ec:	4602      	mov	r2, r0
 800a5ee:	460b      	mov	r3, r1
 800a5f0:	4620      	mov	r0, r4
 800a5f2:	4629      	mov	r1, r5
 800a5f4:	f7f5 fe4a 	bl	800028c <__adddf3>
 800a5f8:	4602      	mov	r2, r0
 800a5fa:	460b      	mov	r3, r1
 800a5fc:	6979      	ldr	r1, [r7, #20]
 800a5fe:	e9c1 2300 	strd	r2, r3, [r1]
 800a602:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800a606:	f04f 0000 	mov.w	r0, #0
 800a60a:	4941      	ldr	r1, [pc, #260]	@ (800a710 <leg_spd+0xa30>)
 800a60c:	f7f6 f91e 	bl	800084c <__aeabi_ddiv>
 800a610:	4602      	mov	r2, r0
 800a612:	460b      	mov	r3, r1
 800a614:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 800a618:	f7f5 ffee 	bl	80005f8 <__aeabi_dmul>
 800a61c:	4602      	mov	r2, r0
 800a61e:	460b      	mov	r3, r1
 800a620:	e9c7 2328 	strd	r2, r3, [r7, #160]	@ 0xa0
 800a624:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a626:	603b      	str	r3, [r7, #0]
 800a628:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a62a:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000
 800a62e:	607b      	str	r3, [r7, #4]
 800a630:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800a634:	e9d7 0100 	ldrd	r0, r1, [r7]
 800a638:	f7f5 ffde 	bl	80005f8 <__aeabi_dmul>
 800a63c:	4602      	mov	r2, r0
 800a63e:	460b      	mov	r3, r1
 800a640:	4610      	mov	r0, r2
 800a642:	4619      	mov	r1, r3
 800a644:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800a648:	f7f5 ffd6 	bl	80005f8 <__aeabi_dmul>
 800a64c:	4602      	mov	r2, r0
 800a64e:	460b      	mov	r3, r1
 800a650:	4614      	mov	r4, r2
 800a652:	461d      	mov	r5, r3
 800a654:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800a658:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800a65c:	f7f5 ffcc 	bl	80005f8 <__aeabi_dmul>
 800a660:	4602      	mov	r2, r0
 800a662:	460b      	mov	r3, r1
 800a664:	4690      	mov	r8, r2
 800a666:	4699      	mov	r9, r3
 800a668:	e9d7 2324 	ldrd	r2, r3, [r7, #144]	@ 0x90
 800a66c:	e9d7 0128 	ldrd	r0, r1, [r7, #160]	@ 0xa0
 800a670:	f7f5 ffc2 	bl	80005f8 <__aeabi_dmul>
 800a674:	4602      	mov	r2, r0
 800a676:	460b      	mov	r3, r1
 800a678:	4640      	mov	r0, r8
 800a67a:	4649      	mov	r1, r9
 800a67c:	f7f5 fe04 	bl	8000288 <__aeabi_dsub>
 800a680:	4602      	mov	r2, r0
 800a682:	460b      	mov	r3, r1
 800a684:	4620      	mov	r0, r4
 800a686:	4629      	mov	r1, r5
 800a688:	f7f5 ffb6 	bl	80005f8 <__aeabi_dmul>
 800a68c:	4602      	mov	r2, r0
 800a68e:	460b      	mov	r3, r1
 800a690:	4690      	mov	r8, r2
 800a692:	4699      	mov	r9, r3
 800a694:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800a698:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800a69c:	f7f5 ffac 	bl	80005f8 <__aeabi_dmul>
 800a6a0:	4602      	mov	r2, r0
 800a6a2:	460b      	mov	r3, r1
 800a6a4:	4610      	mov	r0, r2
 800a6a6:	4619      	mov	r1, r3
 800a6a8:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800a6ac:	f7f5 ffa4 	bl	80005f8 <__aeabi_dmul>
 800a6b0:	4602      	mov	r2, r0
 800a6b2:	460b      	mov	r3, r1
 800a6b4:	4614      	mov	r4, r2
 800a6b6:	461d      	mov	r5, r3
 800a6b8:	a311      	add	r3, pc, #68	@ (adr r3, 800a700 <leg_spd+0xa20>)
 800a6ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6be:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800a6c2:	f7f5 ff99 	bl	80005f8 <__aeabi_dmul>
 800a6c6:	4602      	mov	r2, r0
 800a6c8:	460b      	mov	r3, r1
 800a6ca:	f04f 0000 	mov.w	r0, #0
 800a6ce:	f04f 0100 	mov.w	r1, #0
 800a6d2:	f7f5 fdd9 	bl	8000288 <__aeabi_dsub>
 800a6d6:	4602      	mov	r2, r0
 800a6d8:	460b      	mov	r3, r1
 800a6da:	4610      	mov	r0, r2
 800a6dc:	4619      	mov	r1, r3
 800a6de:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	@ 0x68
 800a6e2:	f7f5 ff89 	bl	80005f8 <__aeabi_dmul>
 800a6e6:	4602      	mov	r2, r0
 800a6e8:	460b      	mov	r3, r1
 800a6ea:	4692      	mov	sl, r2
 800a6ec:	469b      	mov	fp, r3
 800a6ee:	a304      	add	r3, pc, #16	@ (adr r3, 800a700 <leg_spd+0xa20>)
 800a6f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a6f4:	e9d7 013c 	ldrd	r0, r1, [r7, #240]	@ 0xf0
 800a6f8:	e014      	b.n	800a724 <leg_spd+0xa44>
 800a6fa:	bf00      	nop
 800a6fc:	f3af 8000 	nop.w
 800a700:	33333333 	.word	0x33333333
 800a704:	3fd33333 	.word	0x3fd33333
 800a708:	33333333 	.word	0x33333333
 800a70c:	3fe33333 	.word	0x3fe33333
 800a710:	3ff00000 	.word	0x3ff00000
 800a714:	33333333 	.word	0x33333333
 800a718:	3fc33333 	.word	0x3fc33333
 800a71c:	5532617c 	.word	0x5532617c
 800a720:	3fa92a30 	.word	0x3fa92a30
 800a724:	f7f5 ff68 	bl	80005f8 <__aeabi_dmul>
 800a728:	4602      	mov	r2, r0
 800a72a:	460b      	mov	r3, r1
 800a72c:	4610      	mov	r0, r2
 800a72e:	4619      	mov	r1, r3
 800a730:	e9d7 2328 	ldrd	r2, r3, [r7, #160]	@ 0xa0
 800a734:	f7f5 ff60 	bl	80005f8 <__aeabi_dmul>
 800a738:	4602      	mov	r2, r0
 800a73a:	460b      	mov	r3, r1
 800a73c:	4650      	mov	r0, sl
 800a73e:	4659      	mov	r1, fp
 800a740:	f7f5 fda4 	bl	800028c <__adddf3>
 800a744:	4602      	mov	r2, r0
 800a746:	460b      	mov	r3, r1
 800a748:	4620      	mov	r0, r4
 800a74a:	4629      	mov	r1, r5
 800a74c:	f7f5 ff54 	bl	80005f8 <__aeabi_dmul>
 800a750:	4602      	mov	r2, r0
 800a752:	460b      	mov	r3, r1
 800a754:	4610      	mov	r0, r2
 800a756:	4619      	mov	r1, r3
 800a758:	697b      	ldr	r3, [r7, #20]
 800a75a:	f103 0408 	add.w	r4, r3, #8
 800a75e:	4602      	mov	r2, r0
 800a760:	460b      	mov	r3, r1
 800a762:	4640      	mov	r0, r8
 800a764:	4649      	mov	r1, r9
 800a766:	f7f5 fd91 	bl	800028c <__adddf3>
 800a76a:	4602      	mov	r2, r0
 800a76c:	460b      	mov	r3, r1
 800a76e:	e9c4 2300 	strd	r2, r3, [r4]
 800a772:	bf00      	nop
 800a774:	37f8      	adds	r7, #248	@ 0xf8
 800a776:	46bd      	mov	sp, r7
 800a778:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

0800a77c <rt_powd_snf>:
 800a77c:	b5b0      	push	{r4, r5, r7, lr}
 800a77e:	b08c      	sub	sp, #48	@ 0x30
 800a780:	af00      	add	r7, sp, #0
 800a782:	ed87 0b04 	vstr	d0, [r7, #16]
 800a786:	ed87 1b02 	vstr	d1, [r7, #8]
 800a78a:	ed97 0b04 	vldr	d0, [r7, #16]
 800a78e:	f003 f949 	bl	800da24 <rtIsNaN>
 800a792:	4603      	mov	r3, r0
 800a794:	2b00      	cmp	r3, #0
 800a796:	d106      	bne.n	800a7a6 <rt_powd_snf+0x2a>
 800a798:	ed97 0b02 	vldr	d0, [r7, #8]
 800a79c:	f003 f942 	bl	800da24 <rtIsNaN>
 800a7a0:	4603      	mov	r3, r0
 800a7a2:	2b00      	cmp	r3, #0
 800a7a4:	d005      	beq.n	800a7b2 <rt_powd_snf+0x36>
 800a7a6:	4b80      	ldr	r3, [pc, #512]	@ (800a9a8 <rt_powd_snf+0x22c>)
 800a7a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a7ac:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a7b0:	e0ef      	b.n	800a992 <rt_powd_snf+0x216>
 800a7b2:	693b      	ldr	r3, [r7, #16]
 800a7b4:	603b      	str	r3, [r7, #0]
 800a7b6:	697b      	ldr	r3, [r7, #20]
 800a7b8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800a7bc:	607b      	str	r3, [r7, #4]
 800a7be:	ed97 7b00 	vldr	d7, [r7]
 800a7c2:	ed87 7b08 	vstr	d7, [r7, #32]
 800a7c6:	68bc      	ldr	r4, [r7, #8]
 800a7c8:	68fb      	ldr	r3, [r7, #12]
 800a7ca:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800a7ce:	e9c7 4506 	strd	r4, r5, [r7, #24]
 800a7d2:	ed97 0b02 	vldr	d0, [r7, #8]
 800a7d6:	f003 f8f7 	bl	800d9c8 <rtIsInf>
 800a7da:	4603      	mov	r3, r0
 800a7dc:	2b00      	cmp	r3, #0
 800a7de:	d049      	beq.n	800a874 <rt_powd_snf+0xf8>
 800a7e0:	f04f 0200 	mov.w	r2, #0
 800a7e4:	4b71      	ldr	r3, [pc, #452]	@ (800a9ac <rt_powd_snf+0x230>)
 800a7e6:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800a7ea:	f7f6 f96d 	bl	8000ac8 <__aeabi_dcmpeq>
 800a7ee:	4603      	mov	r3, r0
 800a7f0:	2b00      	cmp	r3, #0
 800a7f2:	d005      	beq.n	800a800 <rt_powd_snf+0x84>
 800a7f4:	f04f 0200 	mov.w	r2, #0
 800a7f8:	4b6c      	ldr	r3, [pc, #432]	@ (800a9ac <rt_powd_snf+0x230>)
 800a7fa:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a7fe:	e0c8      	b.n	800a992 <rt_powd_snf+0x216>
 800a800:	f04f 0200 	mov.w	r2, #0
 800a804:	4b69      	ldr	r3, [pc, #420]	@ (800a9ac <rt_powd_snf+0x230>)
 800a806:	e9d7 0108 	ldrd	r0, r1, [r7, #32]
 800a80a:	f7f6 f985 	bl	8000b18 <__aeabi_dcmpgt>
 800a80e:	4603      	mov	r3, r0
 800a810:	2b00      	cmp	r3, #0
 800a812:	d017      	beq.n	800a844 <rt_powd_snf+0xc8>
 800a814:	f04f 0200 	mov.w	r2, #0
 800a818:	f04f 0300 	mov.w	r3, #0
 800a81c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a820:	f7f6 f97a 	bl	8000b18 <__aeabi_dcmpgt>
 800a824:	4603      	mov	r3, r0
 800a826:	2b00      	cmp	r3, #0
 800a828:	d005      	beq.n	800a836 <rt_powd_snf+0xba>
 800a82a:	4b61      	ldr	r3, [pc, #388]	@ (800a9b0 <rt_powd_snf+0x234>)
 800a82c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a830:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a834:	e0ad      	b.n	800a992 <rt_powd_snf+0x216>
 800a836:	f04f 0200 	mov.w	r2, #0
 800a83a:	f04f 0300 	mov.w	r3, #0
 800a83e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a842:	e0a6      	b.n	800a992 <rt_powd_snf+0x216>
 800a844:	f04f 0200 	mov.w	r2, #0
 800a848:	f04f 0300 	mov.w	r3, #0
 800a84c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a850:	f7f6 f962 	bl	8000b18 <__aeabi_dcmpgt>
 800a854:	4603      	mov	r3, r0
 800a856:	2b00      	cmp	r3, #0
 800a858:	d006      	beq.n	800a868 <rt_powd_snf+0xec>
 800a85a:	f04f 0200 	mov.w	r2, #0
 800a85e:	f04f 0300 	mov.w	r3, #0
 800a862:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a866:	e094      	b.n	800a992 <rt_powd_snf+0x216>
 800a868:	4b51      	ldr	r3, [pc, #324]	@ (800a9b0 <rt_powd_snf+0x234>)
 800a86a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a86e:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a872:	e08e      	b.n	800a992 <rt_powd_snf+0x216>
 800a874:	f04f 0200 	mov.w	r2, #0
 800a878:	f04f 0300 	mov.w	r3, #0
 800a87c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800a880:	f7f6 f922 	bl	8000ac8 <__aeabi_dcmpeq>
 800a884:	4603      	mov	r3, r0
 800a886:	2b00      	cmp	r3, #0
 800a888:	d005      	beq.n	800a896 <rt_powd_snf+0x11a>
 800a88a:	f04f 0200 	mov.w	r2, #0
 800a88e:	4b47      	ldr	r3, [pc, #284]	@ (800a9ac <rt_powd_snf+0x230>)
 800a890:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a894:	e07d      	b.n	800a992 <rt_powd_snf+0x216>
 800a896:	f04f 0200 	mov.w	r2, #0
 800a89a:	4b44      	ldr	r3, [pc, #272]	@ (800a9ac <rt_powd_snf+0x230>)
 800a89c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800a8a0:	f7f6 f912 	bl	8000ac8 <__aeabi_dcmpeq>
 800a8a4:	4603      	mov	r3, r0
 800a8a6:	2b00      	cmp	r3, #0
 800a8a8:	d01b      	beq.n	800a8e2 <rt_powd_snf+0x166>
 800a8aa:	f04f 0200 	mov.w	r2, #0
 800a8ae:	f04f 0300 	mov.w	r3, #0
 800a8b2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a8b6:	f7f6 f92f 	bl	8000b18 <__aeabi_dcmpgt>
 800a8ba:	4603      	mov	r3, r0
 800a8bc:	2b00      	cmp	r3, #0
 800a8be:	d004      	beq.n	800a8ca <rt_powd_snf+0x14e>
 800a8c0:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800a8c4:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a8c8:	e063      	b.n	800a992 <rt_powd_snf+0x216>
 800a8ca:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800a8ce:	f04f 0000 	mov.w	r0, #0
 800a8d2:	4936      	ldr	r1, [pc, #216]	@ (800a9ac <rt_powd_snf+0x230>)
 800a8d4:	f7f5 ffba 	bl	800084c <__aeabi_ddiv>
 800a8d8:	4602      	mov	r2, r0
 800a8da:	460b      	mov	r3, r1
 800a8dc:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a8e0:	e057      	b.n	800a992 <rt_powd_snf+0x216>
 800a8e2:	f04f 0200 	mov.w	r2, #0
 800a8e6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800a8ea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a8ee:	f7f6 f8eb 	bl	8000ac8 <__aeabi_dcmpeq>
 800a8f2:	4603      	mov	r3, r0
 800a8f4:	2b00      	cmp	r3, #0
 800a8f6:	d00a      	beq.n	800a90e <rt_powd_snf+0x192>
 800a8f8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800a8fc:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a900:	f7f5 fe7a 	bl	80005f8 <__aeabi_dmul>
 800a904:	4602      	mov	r2, r0
 800a906:	460b      	mov	r3, r1
 800a908:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a90c:	e041      	b.n	800a992 <rt_powd_snf+0x216>
 800a90e:	f04f 0200 	mov.w	r2, #0
 800a912:	4b28      	ldr	r3, [pc, #160]	@ (800a9b4 <rt_powd_snf+0x238>)
 800a914:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a918:	f7f6 f8d6 	bl	8000ac8 <__aeabi_dcmpeq>
 800a91c:	4603      	mov	r3, r0
 800a91e:	2b00      	cmp	r3, #0
 800a920:	d011      	beq.n	800a946 <rt_powd_snf+0x1ca>
 800a922:	f04f 0200 	mov.w	r2, #0
 800a926:	f04f 0300 	mov.w	r3, #0
 800a92a:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a92e:	f7f6 f8e9 	bl	8000b04 <__aeabi_dcmpge>
 800a932:	4603      	mov	r3, r0
 800a934:	2b00      	cmp	r3, #0
 800a936:	d006      	beq.n	800a946 <rt_powd_snf+0x1ca>
 800a938:	ed97 0b04 	vldr	d0, [r7, #16]
 800a93c:	f017 fce6 	bl	802230c <sqrt>
 800a940:	ed87 0b0a 	vstr	d0, [r7, #40]	@ 0x28
 800a944:	e025      	b.n	800a992 <rt_powd_snf+0x216>
 800a946:	f04f 0200 	mov.w	r2, #0
 800a94a:	f04f 0300 	mov.w	r3, #0
 800a94e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800a952:	f7f6 f8c3 	bl	8000adc <__aeabi_dcmplt>
 800a956:	4603      	mov	r3, r0
 800a958:	2b00      	cmp	r3, #0
 800a95a:	d012      	beq.n	800a982 <rt_powd_snf+0x206>
 800a95c:	ed97 0b02 	vldr	d0, [r7, #8]
 800a960:	f018 f832 	bl	80229c8 <floor>
 800a964:	ec53 2b10 	vmov	r2, r3, d0
 800a968:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a96c:	f7f6 f8d4 	bl	8000b18 <__aeabi_dcmpgt>
 800a970:	4603      	mov	r3, r0
 800a972:	2b00      	cmp	r3, #0
 800a974:	d005      	beq.n	800a982 <rt_powd_snf+0x206>
 800a976:	4b0c      	ldr	r3, [pc, #48]	@ (800a9a8 <rt_powd_snf+0x22c>)
 800a978:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a97c:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
 800a980:	e007      	b.n	800a992 <rt_powd_snf+0x216>
 800a982:	ed97 1b02 	vldr	d1, [r7, #8]
 800a986:	ed97 0b04 	vldr	d0, [r7, #16]
 800a98a:	f017 fc4f 	bl	802222c <pow>
 800a98e:	ed87 0b0a 	vstr	d0, [r7, #40]	@ 0x28
 800a992:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800a996:	ec43 2b17 	vmov	d7, r2, r3
 800a99a:	eeb0 0a47 	vmov.f32	s0, s14
 800a99e:	eef0 0a67 	vmov.f32	s1, s15
 800a9a2:	3730      	adds	r7, #48	@ 0x30
 800a9a4:	46bd      	mov	sp, r7
 800a9a6:	bdb0      	pop	{r4, r5, r7, pc}
 800a9a8:	20000038 	.word	0x20000038
 800a9ac:	3ff00000 	.word	0x3ff00000
 800a9b0:	20000040 	.word	0x20000040
 800a9b4:	3fe00000 	.word	0x3fe00000

0800a9b8 <lqr_k>:
 800a9b8:	b5b0      	push	{r4, r5, r7, lr}
 800a9ba:	b088      	sub	sp, #32
 800a9bc:	af00      	add	r7, sp, #0
 800a9be:	ed87 0b02 	vstr	d0, [r7, #8]
 800a9c2:	6078      	str	r0, [r7, #4]
 800a9c4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800a9c8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a9cc:	f7f5 fe14 	bl	80005f8 <__aeabi_dmul>
 800a9d0:	4602      	mov	r2, r0
 800a9d2:	460b      	mov	r3, r1
 800a9d4:	e9c7 2306 	strd	r2, r3, [r7, #24]
 800a9d8:	ed9f 1bcf 	vldr	d1, [pc, #828]	@ 800ad18 <lqr_k+0x360>
 800a9dc:	ed97 0b02 	vldr	d0, [r7, #8]
 800a9e0:	f7ff fecc 	bl	800a77c <rt_powd_snf>
 800a9e4:	ed87 0b04 	vstr	d0, [r7, #16]
 800a9e8:	a3cd      	add	r3, pc, #820	@ (adr r3, 800ad20 <lqr_k+0x368>)
 800a9ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a9ee:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a9f2:	f7f5 fe01 	bl	80005f8 <__aeabi_dmul>
 800a9f6:	4602      	mov	r2, r0
 800a9f8:	460b      	mov	r3, r1
 800a9fa:	4614      	mov	r4, r2
 800a9fc:	461d      	mov	r5, r3
 800a9fe:	a3ca      	add	r3, pc, #808	@ (adr r3, 800ad28 <lqr_k+0x370>)
 800aa00:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa04:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800aa08:	f7f5 fdf6 	bl	80005f8 <__aeabi_dmul>
 800aa0c:	4602      	mov	r2, r0
 800aa0e:	460b      	mov	r3, r1
 800aa10:	4620      	mov	r0, r4
 800aa12:	4629      	mov	r1, r5
 800aa14:	f7f5 fc3a 	bl	800028c <__adddf3>
 800aa18:	4602      	mov	r2, r0
 800aa1a:	460b      	mov	r3, r1
 800aa1c:	4614      	mov	r4, r2
 800aa1e:	461d      	mov	r5, r3
 800aa20:	a3c3      	add	r3, pc, #780	@ (adr r3, 800ad30 <lqr_k+0x378>)
 800aa22:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa26:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800aa2a:	f7f5 fde5 	bl	80005f8 <__aeabi_dmul>
 800aa2e:	4602      	mov	r2, r0
 800aa30:	460b      	mov	r3, r1
 800aa32:	4620      	mov	r0, r4
 800aa34:	4629      	mov	r1, r5
 800aa36:	f7f5 fc27 	bl	8000288 <__aeabi_dsub>
 800aa3a:	4602      	mov	r2, r0
 800aa3c:	460b      	mov	r3, r1
 800aa3e:	4610      	mov	r0, r2
 800aa40:	4619      	mov	r1, r3
 800aa42:	a3bd      	add	r3, pc, #756	@ (adr r3, 800ad38 <lqr_k+0x380>)
 800aa44:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa48:	f7f5 fc1e 	bl	8000288 <__aeabi_dsub>
 800aa4c:	4602      	mov	r2, r0
 800aa4e:	460b      	mov	r3, r1
 800aa50:	6879      	ldr	r1, [r7, #4]
 800aa52:	e9c1 2300 	strd	r2, r3, [r1]
 800aa56:	a3ba      	add	r3, pc, #744	@ (adr r3, 800ad40 <lqr_k+0x388>)
 800aa58:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa5c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800aa60:	f7f5 fdca 	bl	80005f8 <__aeabi_dmul>
 800aa64:	4602      	mov	r2, r0
 800aa66:	460b      	mov	r3, r1
 800aa68:	4614      	mov	r4, r2
 800aa6a:	461d      	mov	r5, r3
 800aa6c:	a3b6      	add	r3, pc, #728	@ (adr r3, 800ad48 <lqr_k+0x390>)
 800aa6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa72:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800aa76:	f7f5 fdbf 	bl	80005f8 <__aeabi_dmul>
 800aa7a:	4602      	mov	r2, r0
 800aa7c:	460b      	mov	r3, r1
 800aa7e:	4620      	mov	r0, r4
 800aa80:	4629      	mov	r1, r5
 800aa82:	f7f5 fc03 	bl	800028c <__adddf3>
 800aa86:	4602      	mov	r2, r0
 800aa88:	460b      	mov	r3, r1
 800aa8a:	4614      	mov	r4, r2
 800aa8c:	461d      	mov	r5, r3
 800aa8e:	a3b0      	add	r3, pc, #704	@ (adr r3, 800ad50 <lqr_k+0x398>)
 800aa90:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aa94:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800aa98:	f7f5 fdae 	bl	80005f8 <__aeabi_dmul>
 800aa9c:	4602      	mov	r2, r0
 800aa9e:	460b      	mov	r3, r1
 800aaa0:	4620      	mov	r0, r4
 800aaa2:	4629      	mov	r1, r5
 800aaa4:	f7f5 fbf0 	bl	8000288 <__aeabi_dsub>
 800aaa8:	4602      	mov	r2, r0
 800aaaa:	460b      	mov	r3, r1
 800aaac:	4610      	mov	r0, r2
 800aaae:	4619      	mov	r1, r3
 800aab0:	687b      	ldr	r3, [r7, #4]
 800aab2:	f103 0408 	add.w	r4, r3, #8
 800aab6:	a3a8      	add	r3, pc, #672	@ (adr r3, 800ad58 <lqr_k+0x3a0>)
 800aab8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aabc:	f7f5 fbe6 	bl	800028c <__adddf3>
 800aac0:	4602      	mov	r2, r0
 800aac2:	460b      	mov	r3, r1
 800aac4:	e9c4 2300 	strd	r2, r3, [r4]
 800aac8:	a3a5      	add	r3, pc, #660	@ (adr r3, 800ad60 <lqr_k+0x3a8>)
 800aaca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aace:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800aad2:	f7f5 fd91 	bl	80005f8 <__aeabi_dmul>
 800aad6:	4602      	mov	r2, r0
 800aad8:	460b      	mov	r3, r1
 800aada:	4614      	mov	r4, r2
 800aadc:	461d      	mov	r5, r3
 800aade:	a3a2      	add	r3, pc, #648	@ (adr r3, 800ad68 <lqr_k+0x3b0>)
 800aae0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aae4:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800aae8:	f7f5 fd86 	bl	80005f8 <__aeabi_dmul>
 800aaec:	4602      	mov	r2, r0
 800aaee:	460b      	mov	r3, r1
 800aaf0:	4620      	mov	r0, r4
 800aaf2:	4629      	mov	r1, r5
 800aaf4:	f7f5 fbca 	bl	800028c <__adddf3>
 800aaf8:	4602      	mov	r2, r0
 800aafa:	460b      	mov	r3, r1
 800aafc:	4614      	mov	r4, r2
 800aafe:	461d      	mov	r5, r3
 800ab00:	a39b      	add	r3, pc, #620	@ (adr r3, 800ad70 <lqr_k+0x3b8>)
 800ab02:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab06:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800ab0a:	f7f5 fd75 	bl	80005f8 <__aeabi_dmul>
 800ab0e:	4602      	mov	r2, r0
 800ab10:	460b      	mov	r3, r1
 800ab12:	4620      	mov	r0, r4
 800ab14:	4629      	mov	r1, r5
 800ab16:	f7f5 fbb7 	bl	8000288 <__aeabi_dsub>
 800ab1a:	4602      	mov	r2, r0
 800ab1c:	460b      	mov	r3, r1
 800ab1e:	4610      	mov	r0, r2
 800ab20:	4619      	mov	r1, r3
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	f103 0410 	add.w	r4, r3, #16
 800ab28:	a393      	add	r3, pc, #588	@ (adr r3, 800ad78 <lqr_k+0x3c0>)
 800ab2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab2e:	f7f5 fbab 	bl	8000288 <__aeabi_dsub>
 800ab32:	4602      	mov	r2, r0
 800ab34:	460b      	mov	r3, r1
 800ab36:	e9c4 2300 	strd	r2, r3, [r4]
 800ab3a:	a391      	add	r3, pc, #580	@ (adr r3, 800ad80 <lqr_k+0x3c8>)
 800ab3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab40:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ab44:	f7f5 fd58 	bl	80005f8 <__aeabi_dmul>
 800ab48:	4602      	mov	r2, r0
 800ab4a:	460b      	mov	r3, r1
 800ab4c:	4614      	mov	r4, r2
 800ab4e:	461d      	mov	r5, r3
 800ab50:	a38d      	add	r3, pc, #564	@ (adr r3, 800ad88 <lqr_k+0x3d0>)
 800ab52:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab56:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800ab5a:	f7f5 fd4d 	bl	80005f8 <__aeabi_dmul>
 800ab5e:	4602      	mov	r2, r0
 800ab60:	460b      	mov	r3, r1
 800ab62:	4620      	mov	r0, r4
 800ab64:	4629      	mov	r1, r5
 800ab66:	f7f5 fb91 	bl	800028c <__adddf3>
 800ab6a:	4602      	mov	r2, r0
 800ab6c:	460b      	mov	r3, r1
 800ab6e:	4614      	mov	r4, r2
 800ab70:	461d      	mov	r5, r3
 800ab72:	a387      	add	r3, pc, #540	@ (adr r3, 800ad90 <lqr_k+0x3d8>)
 800ab74:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ab78:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800ab7c:	f7f5 fd3c 	bl	80005f8 <__aeabi_dmul>
 800ab80:	4602      	mov	r2, r0
 800ab82:	460b      	mov	r3, r1
 800ab84:	4620      	mov	r0, r4
 800ab86:	4629      	mov	r1, r5
 800ab88:	f7f5 fb7e 	bl	8000288 <__aeabi_dsub>
 800ab8c:	4602      	mov	r2, r0
 800ab8e:	460b      	mov	r3, r1
 800ab90:	4610      	mov	r0, r2
 800ab92:	4619      	mov	r1, r3
 800ab94:	687b      	ldr	r3, [r7, #4]
 800ab96:	f103 0418 	add.w	r4, r3, #24
 800ab9a:	a37f      	add	r3, pc, #508	@ (adr r3, 800ad98 <lqr_k+0x3e0>)
 800ab9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aba0:	f7f5 fb74 	bl	800028c <__adddf3>
 800aba4:	4602      	mov	r2, r0
 800aba6:	460b      	mov	r3, r1
 800aba8:	e9c4 2300 	strd	r2, r3, [r4]
 800abac:	a37c      	add	r3, pc, #496	@ (adr r3, 800ada0 <lqr_k+0x3e8>)
 800abae:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abb2:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800abb6:	f7f5 fd1f 	bl	80005f8 <__aeabi_dmul>
 800abba:	4602      	mov	r2, r0
 800abbc:	460b      	mov	r3, r1
 800abbe:	4614      	mov	r4, r2
 800abc0:	461d      	mov	r5, r3
 800abc2:	a379      	add	r3, pc, #484	@ (adr r3, 800ada8 <lqr_k+0x3f0>)
 800abc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abc8:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800abcc:	f7f5 fd14 	bl	80005f8 <__aeabi_dmul>
 800abd0:	4602      	mov	r2, r0
 800abd2:	460b      	mov	r3, r1
 800abd4:	4620      	mov	r0, r4
 800abd6:	4629      	mov	r1, r5
 800abd8:	f7f5 fb58 	bl	800028c <__adddf3>
 800abdc:	4602      	mov	r2, r0
 800abde:	460b      	mov	r3, r1
 800abe0:	4614      	mov	r4, r2
 800abe2:	461d      	mov	r5, r3
 800abe4:	a372      	add	r3, pc, #456	@ (adr r3, 800adb0 <lqr_k+0x3f8>)
 800abe6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800abea:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800abee:	f7f5 fd03 	bl	80005f8 <__aeabi_dmul>
 800abf2:	4602      	mov	r2, r0
 800abf4:	460b      	mov	r3, r1
 800abf6:	4620      	mov	r0, r4
 800abf8:	4629      	mov	r1, r5
 800abfa:	f7f5 fb45 	bl	8000288 <__aeabi_dsub>
 800abfe:	4602      	mov	r2, r0
 800ac00:	460b      	mov	r3, r1
 800ac02:	4610      	mov	r0, r2
 800ac04:	4619      	mov	r1, r3
 800ac06:	687b      	ldr	r3, [r7, #4]
 800ac08:	f103 0420 	add.w	r4, r3, #32
 800ac0c:	a36a      	add	r3, pc, #424	@ (adr r3, 800adb8 <lqr_k+0x400>)
 800ac0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac12:	f7f5 fb39 	bl	8000288 <__aeabi_dsub>
 800ac16:	4602      	mov	r2, r0
 800ac18:	460b      	mov	r3, r1
 800ac1a:	e9c4 2300 	strd	r2, r3, [r4]
 800ac1e:	a368      	add	r3, pc, #416	@ (adr r3, 800adc0 <lqr_k+0x408>)
 800ac20:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac24:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ac28:	f7f5 fce6 	bl	80005f8 <__aeabi_dmul>
 800ac2c:	4602      	mov	r2, r0
 800ac2e:	460b      	mov	r3, r1
 800ac30:	4614      	mov	r4, r2
 800ac32:	461d      	mov	r5, r3
 800ac34:	a364      	add	r3, pc, #400	@ (adr r3, 800adc8 <lqr_k+0x410>)
 800ac36:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac3a:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800ac3e:	f7f5 fcdb 	bl	80005f8 <__aeabi_dmul>
 800ac42:	4602      	mov	r2, r0
 800ac44:	460b      	mov	r3, r1
 800ac46:	4620      	mov	r0, r4
 800ac48:	4629      	mov	r1, r5
 800ac4a:	f7f5 fb1f 	bl	800028c <__adddf3>
 800ac4e:	4602      	mov	r2, r0
 800ac50:	460b      	mov	r3, r1
 800ac52:	4614      	mov	r4, r2
 800ac54:	461d      	mov	r5, r3
 800ac56:	a35e      	add	r3, pc, #376	@ (adr r3, 800add0 <lqr_k+0x418>)
 800ac58:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac5c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800ac60:	f7f5 fcca 	bl	80005f8 <__aeabi_dmul>
 800ac64:	4602      	mov	r2, r0
 800ac66:	460b      	mov	r3, r1
 800ac68:	4620      	mov	r0, r4
 800ac6a:	4629      	mov	r1, r5
 800ac6c:	f7f5 fb0c 	bl	8000288 <__aeabi_dsub>
 800ac70:	4602      	mov	r2, r0
 800ac72:	460b      	mov	r3, r1
 800ac74:	4610      	mov	r0, r2
 800ac76:	4619      	mov	r1, r3
 800ac78:	687b      	ldr	r3, [r7, #4]
 800ac7a:	f103 0428 	add.w	r4, r3, #40	@ 0x28
 800ac7e:	a356      	add	r3, pc, #344	@ (adr r3, 800add8 <lqr_k+0x420>)
 800ac80:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac84:	f7f5 fb02 	bl	800028c <__adddf3>
 800ac88:	4602      	mov	r2, r0
 800ac8a:	460b      	mov	r3, r1
 800ac8c:	e9c4 2300 	strd	r2, r3, [r4]
 800ac90:	a353      	add	r3, pc, #332	@ (adr r3, 800ade0 <lqr_k+0x428>)
 800ac92:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ac96:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ac9a:	f7f5 fcad 	bl	80005f8 <__aeabi_dmul>
 800ac9e:	4602      	mov	r2, r0
 800aca0:	460b      	mov	r3, r1
 800aca2:	4614      	mov	r4, r2
 800aca4:	461d      	mov	r5, r3
 800aca6:	a350      	add	r3, pc, #320	@ (adr r3, 800ade8 <lqr_k+0x430>)
 800aca8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800acac:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800acb0:	f7f5 fca2 	bl	80005f8 <__aeabi_dmul>
 800acb4:	4602      	mov	r2, r0
 800acb6:	460b      	mov	r3, r1
 800acb8:	4620      	mov	r0, r4
 800acba:	4629      	mov	r1, r5
 800acbc:	f7f5 fae6 	bl	800028c <__adddf3>
 800acc0:	4602      	mov	r2, r0
 800acc2:	460b      	mov	r3, r1
 800acc4:	4614      	mov	r4, r2
 800acc6:	461d      	mov	r5, r3
 800acc8:	a349      	add	r3, pc, #292	@ (adr r3, 800adf0 <lqr_k+0x438>)
 800acca:	e9d3 2300 	ldrd	r2, r3, [r3]
 800acce:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800acd2:	f7f5 fc91 	bl	80005f8 <__aeabi_dmul>
 800acd6:	4602      	mov	r2, r0
 800acd8:	460b      	mov	r3, r1
 800acda:	4620      	mov	r0, r4
 800acdc:	4629      	mov	r1, r5
 800acde:	f7f5 fad3 	bl	8000288 <__aeabi_dsub>
 800ace2:	4602      	mov	r2, r0
 800ace4:	460b      	mov	r3, r1
 800ace6:	4610      	mov	r0, r2
 800ace8:	4619      	mov	r1, r3
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	f103 0430 	add.w	r4, r3, #48	@ 0x30
 800acf0:	a341      	add	r3, pc, #260	@ (adr r3, 800adf8 <lqr_k+0x440>)
 800acf2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800acf6:	f7f5 fac7 	bl	8000288 <__aeabi_dsub>
 800acfa:	4602      	mov	r2, r0
 800acfc:	460b      	mov	r3, r1
 800acfe:	e9c4 2300 	strd	r2, r3, [r4]
 800ad02:	a33f      	add	r3, pc, #252	@ (adr r3, 800ae00 <lqr_k+0x448>)
 800ad04:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad08:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ad0c:	f7f5 fc74 	bl	80005f8 <__aeabi_dmul>
 800ad10:	e07a      	b.n	800ae08 <lqr_k+0x450>
 800ad12:	bf00      	nop
 800ad14:	f3af 8000 	nop.w
 800ad18:	00000000 	.word	0x00000000
 800ad1c:	40080000 	.word	0x40080000
 800ad20:	e11d56d7 	.word	0xe11d56d7
 800ad24:	c0495e82 	.word	0xc0495e82
 800ad28:	cef284e7 	.word	0xcef284e7
 800ad2c:	40651773 	.word	0x40651773
 800ad30:	c64f31c5 	.word	0xc64f31c5
 800ad34:	40715b7a 	.word	0x40715b7a
 800ad38:	088684e0 	.word	0x088684e0
 800ad3c:	40058010 	.word	0x40058010
 800ad40:	dc2046b8 	.word	0xdc2046b8
 800ad44:	c0306918 	.word	0xc0306918
 800ad48:	d1f54deb 	.word	0xd1f54deb
 800ad4c:	404a26fe 	.word	0x404a26fe
 800ad50:	7f95d98b 	.word	0x7f95d98b
 800ad54:	404f6e68 	.word	0x404f6e68
 800ad58:	c2b97df5 	.word	0xc2b97df5
 800ad5c:	40034320 	.word	0x40034320
 800ad60:	bbfc5804 	.word	0xbbfc5804
 800ad64:	c00e57c6 	.word	0xc00e57c6
 800ad68:	8b2cbed8 	.word	0x8b2cbed8
 800ad6c:	3fe136f6 	.word	0x3fe136f6
 800ad70:	48541815 	.word	0x48541815
 800ad74:	401596a8 	.word	0x401596a8
 800ad78:	553c5f99 	.word	0x553c5f99
 800ad7c:	3fd643b5 	.word	0x3fd643b5
 800ad80:	8b6872cc 	.word	0x8b6872cc
 800ad84:	c0030952 	.word	0xc0030952
 800ad88:	0321b9a5 	.word	0x0321b9a5
 800ad8c:	40221b5e 	.word	0x40221b5e
 800ad90:	5e67f3fd 	.word	0x5e67f3fd
 800ad94:	402a2fcb 	.word	0x402a2fcb
 800ad98:	2466f335 	.word	0x2466f335
 800ad9c:	3fd58446 	.word	0x3fd58446
 800ada0:	12933d46 	.word	0x12933d46
 800ada4:	c022345e 	.word	0xc022345e
 800ada8:	104153cc 	.word	0x104153cc
 800adac:	404791c5 	.word	0x404791c5
 800adb0:	b37e44bf 	.word	0xb37e44bf
 800adb4:	4054e01e 	.word	0x4054e01e
 800adb8:	35d984fd 	.word	0x35d984fd
 800adbc:	4004470f 	.word	0x4004470f
 800adc0:	6d2a2eb6 	.word	0x6d2a2eb6
 800adc4:	c035b964 	.word	0xc035b964
 800adc8:	001d5b40 	.word	0x001d5b40
 800adcc:	4056ca7d 	.word	0x4056ca7d
 800add0:	67da7a89 	.word	0x67da7a89
 800add4:	4061b7f6 	.word	0x4061b7f6
 800add8:	5ee7abc5 	.word	0x5ee7abc5
 800addc:	4001a635 	.word	0x4001a635
 800ade0:	3c8af835 	.word	0x3c8af835
 800ade4:	c00363cc 	.word	0xc00363cc
 800ade8:	2d7aa92b 	.word	0x2d7aa92b
 800adec:	401a315b 	.word	0x401a315b
 800adf0:	bc999b77 	.word	0xbc999b77
 800adf4:	4028ad80 	.word	0x4028ad80
 800adf8:	cfcf5d7c 	.word	0xcfcf5d7c
 800adfc:	40032833 	.word	0x40032833
 800ae00:	9ad97d7b 	.word	0x9ad97d7b
 800ae04:	c03416fd 	.word	0xc03416fd
 800ae08:	4602      	mov	r2, r0
 800ae0a:	460b      	mov	r3, r1
 800ae0c:	4614      	mov	r4, r2
 800ae0e:	461d      	mov	r5, r3
 800ae10:	a38b      	add	r3, pc, #556	@ (adr r3, 800b040 <lqr_k+0x688>)
 800ae12:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ae16:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800ae1a:	f7f5 fbed 	bl	80005f8 <__aeabi_dmul>
 800ae1e:	4602      	mov	r2, r0
 800ae20:	460b      	mov	r3, r1
 800ae22:	4620      	mov	r0, r4
 800ae24:	4629      	mov	r1, r5
 800ae26:	f7f5 fa31 	bl	800028c <__adddf3>
 800ae2a:	4602      	mov	r2, r0
 800ae2c:	460b      	mov	r3, r1
 800ae2e:	4614      	mov	r4, r2
 800ae30:	461d      	mov	r5, r3
 800ae32:	a385      	add	r3, pc, #532	@ (adr r3, 800b048 <lqr_k+0x690>)
 800ae34:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ae38:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800ae3c:	f7f5 fbdc 	bl	80005f8 <__aeabi_dmul>
 800ae40:	4602      	mov	r2, r0
 800ae42:	460b      	mov	r3, r1
 800ae44:	4620      	mov	r0, r4
 800ae46:	4629      	mov	r1, r5
 800ae48:	f7f5 fa1e 	bl	8000288 <__aeabi_dsub>
 800ae4c:	4602      	mov	r2, r0
 800ae4e:	460b      	mov	r3, r1
 800ae50:	4610      	mov	r0, r2
 800ae52:	4619      	mov	r1, r3
 800ae54:	687b      	ldr	r3, [r7, #4]
 800ae56:	f103 0438 	add.w	r4, r3, #56	@ 0x38
 800ae5a:	a37d      	add	r3, pc, #500	@ (adr r3, 800b050 <lqr_k+0x698>)
 800ae5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ae60:	f7f5 fa14 	bl	800028c <__adddf3>
 800ae64:	4602      	mov	r2, r0
 800ae66:	460b      	mov	r3, r1
 800ae68:	e9c4 2300 	strd	r2, r3, [r4]
 800ae6c:	a37a      	add	r3, pc, #488	@ (adr r3, 800b058 <lqr_k+0x6a0>)
 800ae6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ae72:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800ae76:	f7f5 fbbf 	bl	80005f8 <__aeabi_dmul>
 800ae7a:	4602      	mov	r2, r0
 800ae7c:	460b      	mov	r3, r1
 800ae7e:	4614      	mov	r4, r2
 800ae80:	461d      	mov	r5, r3
 800ae82:	a377      	add	r3, pc, #476	@ (adr r3, 800b060 <lqr_k+0x6a8>)
 800ae84:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ae88:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800ae8c:	f7f5 fbb4 	bl	80005f8 <__aeabi_dmul>
 800ae90:	4602      	mov	r2, r0
 800ae92:	460b      	mov	r3, r1
 800ae94:	4620      	mov	r0, r4
 800ae96:	4629      	mov	r1, r5
 800ae98:	f7f5 f9f8 	bl	800028c <__adddf3>
 800ae9c:	4602      	mov	r2, r0
 800ae9e:	460b      	mov	r3, r1
 800aea0:	4614      	mov	r4, r2
 800aea2:	461d      	mov	r5, r3
 800aea4:	a370      	add	r3, pc, #448	@ (adr r3, 800b068 <lqr_k+0x6b0>)
 800aea6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aeaa:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800aeae:	f7f5 fba3 	bl	80005f8 <__aeabi_dmul>
 800aeb2:	4602      	mov	r2, r0
 800aeb4:	460b      	mov	r3, r1
 800aeb6:	4620      	mov	r0, r4
 800aeb8:	4629      	mov	r1, r5
 800aeba:	f7f5 f9e5 	bl	8000288 <__aeabi_dsub>
 800aebe:	4602      	mov	r2, r0
 800aec0:	460b      	mov	r3, r1
 800aec2:	4610      	mov	r0, r2
 800aec4:	4619      	mov	r1, r3
 800aec6:	687b      	ldr	r3, [r7, #4]
 800aec8:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800aecc:	a368      	add	r3, pc, #416	@ (adr r3, 800b070 <lqr_k+0x6b8>)
 800aece:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aed2:	f7f5 f9db 	bl	800028c <__adddf3>
 800aed6:	4602      	mov	r2, r0
 800aed8:	460b      	mov	r3, r1
 800aeda:	e9c4 2300 	strd	r2, r3, [r4]
 800aede:	a366      	add	r3, pc, #408	@ (adr r3, 800b078 <lqr_k+0x6c0>)
 800aee0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aee4:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800aee8:	f7f5 fb86 	bl	80005f8 <__aeabi_dmul>
 800aeec:	4602      	mov	r2, r0
 800aeee:	460b      	mov	r3, r1
 800aef0:	4614      	mov	r4, r2
 800aef2:	461d      	mov	r5, r3
 800aef4:	a362      	add	r3, pc, #392	@ (adr r3, 800b080 <lqr_k+0x6c8>)
 800aef6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800aefa:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800aefe:	f7f5 fb7b 	bl	80005f8 <__aeabi_dmul>
 800af02:	4602      	mov	r2, r0
 800af04:	460b      	mov	r3, r1
 800af06:	4620      	mov	r0, r4
 800af08:	4629      	mov	r1, r5
 800af0a:	f7f5 f9bd 	bl	8000288 <__aeabi_dsub>
 800af0e:	4602      	mov	r2, r0
 800af10:	460b      	mov	r3, r1
 800af12:	4614      	mov	r4, r2
 800af14:	461d      	mov	r5, r3
 800af16:	a35c      	add	r3, pc, #368	@ (adr r3, 800b088 <lqr_k+0x6d0>)
 800af18:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af1c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800af20:	f7f5 fb6a 	bl	80005f8 <__aeabi_dmul>
 800af24:	4602      	mov	r2, r0
 800af26:	460b      	mov	r3, r1
 800af28:	4620      	mov	r0, r4
 800af2a:	4629      	mov	r1, r5
 800af2c:	f7f5 f9ae 	bl	800028c <__adddf3>
 800af30:	4602      	mov	r2, r0
 800af32:	460b      	mov	r3, r1
 800af34:	4610      	mov	r0, r2
 800af36:	4619      	mov	r1, r3
 800af38:	687b      	ldr	r3, [r7, #4]
 800af3a:	f103 0448 	add.w	r4, r3, #72	@ 0x48
 800af3e:	a354      	add	r3, pc, #336	@ (adr r3, 800b090 <lqr_k+0x6d8>)
 800af40:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af44:	f7f5 f9a2 	bl	800028c <__adddf3>
 800af48:	4602      	mov	r2, r0
 800af4a:	460b      	mov	r3, r1
 800af4c:	e9c4 2300 	strd	r2, r3, [r4]
 800af50:	a351      	add	r3, pc, #324	@ (adr r3, 800b098 <lqr_k+0x6e0>)
 800af52:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af56:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800af5a:	f7f5 fb4d 	bl	80005f8 <__aeabi_dmul>
 800af5e:	4602      	mov	r2, r0
 800af60:	460b      	mov	r3, r1
 800af62:	4614      	mov	r4, r2
 800af64:	461d      	mov	r5, r3
 800af66:	a34e      	add	r3, pc, #312	@ (adr r3, 800b0a0 <lqr_k+0x6e8>)
 800af68:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af6c:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800af70:	f7f5 fb42 	bl	80005f8 <__aeabi_dmul>
 800af74:	4602      	mov	r2, r0
 800af76:	460b      	mov	r3, r1
 800af78:	4620      	mov	r0, r4
 800af7a:	4629      	mov	r1, r5
 800af7c:	f7f5 f986 	bl	800028c <__adddf3>
 800af80:	4602      	mov	r2, r0
 800af82:	460b      	mov	r3, r1
 800af84:	4614      	mov	r4, r2
 800af86:	461d      	mov	r5, r3
 800af88:	a347      	add	r3, pc, #284	@ (adr r3, 800b0a8 <lqr_k+0x6f0>)
 800af8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800af8e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800af92:	f7f5 fb31 	bl	80005f8 <__aeabi_dmul>
 800af96:	4602      	mov	r2, r0
 800af98:	460b      	mov	r3, r1
 800af9a:	4620      	mov	r0, r4
 800af9c:	4629      	mov	r1, r5
 800af9e:	f7f5 f973 	bl	8000288 <__aeabi_dsub>
 800afa2:	4602      	mov	r2, r0
 800afa4:	460b      	mov	r3, r1
 800afa6:	4610      	mov	r0, r2
 800afa8:	4619      	mov	r1, r3
 800afaa:	687b      	ldr	r3, [r7, #4]
 800afac:	f103 0450 	add.w	r4, r3, #80	@ 0x50
 800afb0:	a33f      	add	r3, pc, #252	@ (adr r3, 800b0b0 <lqr_k+0x6f8>)
 800afb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800afb6:	f7f5 f969 	bl	800028c <__adddf3>
 800afba:	4602      	mov	r2, r0
 800afbc:	460b      	mov	r3, r1
 800afbe:	e9c4 2300 	strd	r2, r3, [r4]
 800afc2:	a33d      	add	r3, pc, #244	@ (adr r3, 800b0b8 <lqr_k+0x700>)
 800afc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800afc8:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800afcc:	f7f5 fb14 	bl	80005f8 <__aeabi_dmul>
 800afd0:	4602      	mov	r2, r0
 800afd2:	460b      	mov	r3, r1
 800afd4:	4614      	mov	r4, r2
 800afd6:	461d      	mov	r5, r3
 800afd8:	a339      	add	r3, pc, #228	@ (adr r3, 800b0c0 <lqr_k+0x708>)
 800afda:	e9d3 2300 	ldrd	r2, r3, [r3]
 800afde:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800afe2:	f7f5 fb09 	bl	80005f8 <__aeabi_dmul>
 800afe6:	4602      	mov	r2, r0
 800afe8:	460b      	mov	r3, r1
 800afea:	4620      	mov	r0, r4
 800afec:	4629      	mov	r1, r5
 800afee:	f7f5 f94b 	bl	8000288 <__aeabi_dsub>
 800aff2:	4602      	mov	r2, r0
 800aff4:	460b      	mov	r3, r1
 800aff6:	4614      	mov	r4, r2
 800aff8:	461d      	mov	r5, r3
 800affa:	a333      	add	r3, pc, #204	@ (adr r3, 800b0c8 <lqr_k+0x710>)
 800affc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b000:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800b004:	f7f5 faf8 	bl	80005f8 <__aeabi_dmul>
 800b008:	4602      	mov	r2, r0
 800b00a:	460b      	mov	r3, r1
 800b00c:	4620      	mov	r0, r4
 800b00e:	4629      	mov	r1, r5
 800b010:	f7f5 f93c 	bl	800028c <__adddf3>
 800b014:	4602      	mov	r2, r0
 800b016:	460b      	mov	r3, r1
 800b018:	4610      	mov	r0, r2
 800b01a:	4619      	mov	r1, r3
 800b01c:	687b      	ldr	r3, [r7, #4]
 800b01e:	f103 0458 	add.w	r4, r3, #88	@ 0x58
 800b022:	a32b      	add	r3, pc, #172	@ (adr r3, 800b0d0 <lqr_k+0x718>)
 800b024:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b028:	f7f5 f930 	bl	800028c <__adddf3>
 800b02c:	4602      	mov	r2, r0
 800b02e:	460b      	mov	r3, r1
 800b030:	e9c4 2300 	strd	r2, r3, [r4]
 800b034:	bf00      	nop
 800b036:	3720      	adds	r7, #32
 800b038:	46bd      	mov	sp, r7
 800b03a:	bdb0      	pop	{r4, r5, r7, pc}
 800b03c:	f3af 8000 	nop.w
 800b040:	ec636a38 	.word	0xec636a38
 800b044:	40563570 	.word	0x40563570
 800b048:	de607f9b 	.word	0xde607f9b
 800b04c:	4061f95b 	.word	0x4061f95b
 800b050:	d857dd98 	.word	0xd857dd98
 800b054:	3ffed8c9 	.word	0x3ffed8c9
 800b058:	a994a8df 	.word	0xa994a8df
 800b05c:	c0512caa 	.word	0xc0512caa
 800b060:	67b97e90 	.word	0x67b97e90
 800b064:	40720491 	.word	0x40720491
 800b068:	89aa9a8f 	.word	0x89aa9a8f
 800b06c:	407c03fc 	.word	0x407c03fc
 800b070:	34ddb1fa 	.word	0x34ddb1fa
 800b074:	401be7ea 	.word	0x401be7ea
 800b078:	1ed9f335 	.word	0x1ed9f335
 800b07c:	403cc8b0 	.word	0x403cc8b0
 800b080:	24f0940c 	.word	0x24f0940c
 800b084:	4062a21d 	.word	0x4062a21d
 800b088:	d3de004a 	.word	0xd3de004a
 800b08c:	407080e5 	.word	0x407080e5
 800b090:	8ee6d215 	.word	0x8ee6d215
 800b094:	402007e4 	.word	0x402007e4
 800b098:	61780aba 	.word	0x61780aba
 800b09c:	c011e3af 	.word	0xc011e3af
 800b0a0:	95202cc4 	.word	0x95202cc4
 800b0a4:	40327c8a 	.word	0x40327c8a
 800b0a8:	51990ce8 	.word	0x51990ce8
 800b0ac:	403cbbaa 	.word	0x403cbbaa
 800b0b0:	843f48ab 	.word	0x843f48ab
 800b0b4:	3fdf7186 	.word	0x3fdf7186
 800b0b8:	2f3d86ed 	.word	0x2f3d86ed
 800b0bc:	3ffeb730 	.word	0x3ffeb730
 800b0c0:	ef16c0ea 	.word	0xef16c0ea
 800b0c4:	4023a29b 	.word	0x4023a29b
 800b0c8:	84ebc161 	.word	0x84ebc161
 800b0cc:	403147f4 	.word	0x403147f4
 800b0d0:	0a47f0a1 	.word	0x0a47f0a1
 800b0d4:	3fdd2d7f 	.word	0x3fdd2d7f

0800b0d8 <master_task>:
QueueHandle_t uart_data_queue;

extern gimbal_control_t gimbal_ctrl_data;


void master_task(void* argument){
 800b0d8:	b580      	push	{r7, lr}
 800b0da:	b084      	sub	sp, #16
 800b0dc:	af02      	add	r7, sp, #8
 800b0de:	6078      	str	r0, [r7, #4]
//	imu_init();
//	led_green_off();
//	start_micros_timer();
//	led_toggle();

	gimbal_event_group = xEventGroupCreate();
 800b0e0:	f00e fd85 	bl	8019bee <xEventGroupCreate>
 800b0e4:	4603      	mov	r3, r0
 800b0e6:	4a6d      	ldr	r2, [pc, #436]	@ (800b29c <master_task+0x1c4>)
 800b0e8:	6013      	str	r3, [r2, #0]
	chassis_event_group = xEventGroupCreate();
 800b0ea:	f00e fd80 	bl	8019bee <xEventGroupCreate>
 800b0ee:	4603      	mov	r3, r0
 800b0f0:	4a6b      	ldr	r2, [pc, #428]	@ (800b2a0 <master_task+0x1c8>)
 800b0f2:	6013      	str	r3, [r2, #0]
	launcher_event_group = xEventGroupCreate();
 800b0f4:	f00e fd7b 	bl	8019bee <xEventGroupCreate>
 800b0f8:	4603      	mov	r3, r0
 800b0fa:	4a6a      	ldr	r2, [pc, #424]	@ (800b2a4 <master_task+0x1cc>)
 800b0fc:	6013      	str	r3, [r2, #0]

	usb_continue_semaphore = xSemaphoreCreateBinary();
 800b0fe:	2203      	movs	r2, #3
 800b100:	2100      	movs	r1, #0
 800b102:	2001      	movs	r0, #1
 800b104:	f00e ffd5 	bl	801a0b2 <xQueueGenericCreate>
 800b108:	4603      	mov	r3, r0
 800b10a:	4a67      	ldr	r2, [pc, #412]	@ (800b2a8 <master_task+0x1d0>)
 800b10c:	6013      	str	r3, [r2, #0]


	gyro_data_queue = xQueueCreate(5, sizeof(gyro_data_t));
 800b10e:	2200      	movs	r2, #0
 800b110:	2110      	movs	r1, #16
 800b112:	2005      	movs	r0, #5
 800b114:	f00e ffcd 	bl	801a0b2 <xQueueGenericCreate>
 800b118:	4603      	mov	r3, r0
 800b11a:	4a64      	ldr	r2, [pc, #400]	@ (800b2ac <master_task+0x1d4>)
 800b11c:	6013      	str	r3, [r2, #0]
	accel_data_queue = xQueueCreate(5, sizeof(accel_data_t));
 800b11e:	2200      	movs	r2, #0
 800b120:	2110      	movs	r1, #16
 800b122:	2005      	movs	r0, #5
 800b124:	f00e ffc5 	bl	801a0b2 <xQueueGenericCreate>
 800b128:	4603      	mov	r3, r0
 800b12a:	4a61      	ldr	r2, [pc, #388]	@ (800b2b0 <master_task+0x1d8>)
 800b12c:	6013      	str	r3, [r2, #0]
	mag_data_queue = xQueueCreate(5, sizeof(mag_data_t));
 800b12e:	2200      	movs	r2, #0
 800b130:	210c      	movs	r1, #12
 800b132:	2005      	movs	r0, #5
 800b134:	f00e ffbd 	bl	801a0b2 <xQueueGenericCreate>
 800b138:	4603      	mov	r3, r0
 800b13a:	4a5e      	ldr	r2, [pc, #376]	@ (800b2b4 <master_task+0x1dc>)
 800b13c:	6013      	str	r3, [r2, #0]
	//telem_data_queue = xQueueCreate(10, sizeof(telem_data_struct_t));
	g_buzzing_task_msg = xQueueCreate(48, sizeof(uint8_t));
 800b13e:	2200      	movs	r2, #0
 800b140:	2101      	movs	r1, #1
 800b142:	2030      	movs	r0, #48	@ 0x30
 800b144:	f00e ffb5 	bl	801a0b2 <xQueueGenericCreate>
 800b148:	4603      	mov	r3, r0
 800b14a:	4a5b      	ldr	r2, [pc, #364]	@ (800b2b8 <master_task+0x1e0>)
 800b14c:	6013      	str	r3, [r2, #0]


	/* add threads, ... */
	//todo: adjust priorities
	//Threads creation
	xTaskCreate(Ctrl_Task, "Ctrl_Task_task",
 800b14e:	4b5b      	ldr	r3, [pc, #364]	@ (800b2bc <master_task+0x1e4>)
 800b150:	9301      	str	r3, [sp, #4]
 800b152:	2304      	movs	r3, #4
 800b154:	9300      	str	r3, [sp, #0]
 800b156:	2301      	movs	r3, #1
 800b158:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b15c:	4958      	ldr	r1, [pc, #352]	@ (800b2c0 <master_task+0x1e8>)
 800b15e:	4859      	ldr	r0, [pc, #356]	@ (800b2c4 <master_task+0x1ec>)
 800b160:	f00f fce8 	bl	801ab34 <xTaskCreate>
					configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
							&Ctrl_Task_handle);

	xTaskCreate(LegPos_UpdateTask, "LegPos_UpdateTask",
 800b164:	4b58      	ldr	r3, [pc, #352]	@ (800b2c8 <master_task+0x1f0>)
 800b166:	9301      	str	r3, [sp, #4]
 800b168:	2304      	movs	r3, #4
 800b16a:	9300      	str	r3, [sp, #0]
 800b16c:	2301      	movs	r3, #1
 800b16e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b172:	4956      	ldr	r1, [pc, #344]	@ (800b2cc <master_task+0x1f4>)
 800b174:	4856      	ldr	r0, [pc, #344]	@ (800b2d0 <master_task+0x1f8>)
 800b176:	f00f fcdd 	bl	801ab34 <xTaskCreate>
				configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
						&LegPos_UpdateTask_handle);

	xTaskCreate(Ctrl_TargetUpdateTask, "Ctrl_TargetUpdateTask",
 800b17a:	4b56      	ldr	r3, [pc, #344]	@ (800b2d4 <master_task+0x1fc>)
 800b17c:	9301      	str	r3, [sp, #4]
 800b17e:	2304      	movs	r3, #4
 800b180:	9300      	str	r3, [sp, #0]
 800b182:	2301      	movs	r3, #1
 800b184:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b188:	4953      	ldr	r1, [pc, #332]	@ (800b2d8 <master_task+0x200>)
 800b18a:	4854      	ldr	r0, [pc, #336]	@ (800b2dc <master_task+0x204>)
 800b18c:	f00f fcd2 	bl	801ab34 <xTaskCreate>
			configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
					&Ctrl_TargetUpdateTask_handle);

	xTaskCreate(motors_process_task, "motor_process",
 800b190:	4b53      	ldr	r3, [pc, #332]	@ (800b2e0 <master_task+0x208>)
 800b192:	9301      	str	r3, [sp, #4]
 800b194:	2304      	movs	r3, #4
 800b196:	9300      	str	r3, [sp, #0]
 800b198:	2301      	movs	r3, #1
 800b19a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b19e:	4951      	ldr	r1, [pc, #324]	@ (800b2e4 <master_task+0x20c>)
 800b1a0:	4851      	ldr	r0, [pc, #324]	@ (800b2e8 <master_task+0x210>)
 800b1a2:	f00f fcc7 	bl	801ab34 <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
				&leg_kinematic_handle);

	xTaskCreate(balancing_task, "balancing_task",
 800b1a6:	4b51      	ldr	r3, [pc, #324]	@ (800b2ec <master_task+0x214>)
 800b1a8:	9301      	str	r3, [sp, #4]
 800b1aa:	2304      	movs	r3, #4
 800b1ac:	9300      	str	r3, [sp, #0]
 800b1ae:	2301      	movs	r3, #1
 800b1b0:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b1b4:	494e      	ldr	r1, [pc, #312]	@ (800b2f0 <master_task+0x218>)
 800b1b6:	484f      	ldr	r0, [pc, #316]	@ (800b2f4 <master_task+0x21c>)
 800b1b8:	f00f fcbc 	bl	801ab34 <xTaskCreate>

	// xTaskCreate(leg_kinematic_task, "leg_kinematic",
	// 		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
	// 				&motors_process_handle);

	xTaskCreate(imu_processing_task, "IMU_task",
 800b1bc:	4b4e      	ldr	r3, [pc, #312]	@ (800b2f8 <master_task+0x220>)
 800b1be:	9301      	str	r3, [sp, #4]
 800b1c0:	230f      	movs	r3, #15
 800b1c2:	9300      	str	r3, [sp, #0]
 800b1c4:	2301      	movs	r3, #1
 800b1c6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b1ca:	494c      	ldr	r1, [pc, #304]	@ (800b2fc <master_task+0x224>)
 800b1cc:	484c      	ldr	r0, [pc, #304]	@ (800b300 <master_task+0x228>)
 800b1ce:	f00f fcb1 	bl	801ab34 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 15,
			&imu_processing_task_handle);

	xTaskCreate(motor_calib_task, "motor_calib_task",
 800b1d2:	4b4c      	ldr	r3, [pc, #304]	@ (800b304 <master_task+0x22c>)
 800b1d4:	9301      	str	r3, [sp, #4]
 800b1d6:	2309      	movs	r3, #9
 800b1d8:	9300      	str	r3, [sp, #0]
 800b1da:	2301      	movs	r3, #1
 800b1dc:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b1e0:	4949      	ldr	r1, [pc, #292]	@ (800b308 <master_task+0x230>)
 800b1e2:	484a      	ldr	r0, [pc, #296]	@ (800b30c <master_task+0x234>)
 800b1e4:	f00f fca6 	bl	801ab34 <xTaskCreate>
	} else {
//		xTaskCreate(launcher_control_task, "launcher_task",
//		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
//				&launcher_control_task_handle);
	}
	gimbal_ctrl_data.yaw_semaphore = xSemaphoreCreateBinary();
 800b1e8:	2203      	movs	r2, #3
 800b1ea:	2100      	movs	r1, #0
 800b1ec:	2001      	movs	r0, #1
 800b1ee:	f00e ff60 	bl	801a0b2 <xQueueGenericCreate>
 800b1f2:	4603      	mov	r3, r0
 800b1f4:	4a46      	ldr	r2, [pc, #280]	@ (800b310 <master_task+0x238>)
 800b1f6:	6113      	str	r3, [r2, #16]
	xSemaphoreGive(gimbal_ctrl_data.yaw_semaphore);
 800b1f8:	4b45      	ldr	r3, [pc, #276]	@ (800b310 <master_task+0x238>)
 800b1fa:	6918      	ldr	r0, [r3, #16]
 800b1fc:	2300      	movs	r3, #0
 800b1fe:	2200      	movs	r2, #0
 800b200:	2100      	movs	r1, #0
 800b202:	f00e ffb5 	bl	801a170 <xQueueGenericSend>
	xTaskCreate(control_input_task, "RC_task",
 800b206:	4b43      	ldr	r3, [pc, #268]	@ (800b314 <master_task+0x23c>)
 800b208:	9301      	str	r3, [sp, #4]
 800b20a:	2304      	movs	r3, #4
 800b20c:	9300      	str	r3, [sp, #0]
 800b20e:	2301      	movs	r3, #1
 800b210:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b214:	4940      	ldr	r1, [pc, #256]	@ (800b318 <master_task+0x240>)
 800b216:	4841      	ldr	r0, [pc, #260]	@ (800b31c <master_task+0x244>)
 800b218:	f00f fc8c 	bl	801ab34 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 4,
			&control_input_task_handle);
	xTaskCreate(referee_processing_task, "referee_task", 512, (void*) 1,
 800b21c:	4b40      	ldr	r3, [pc, #256]	@ (800b320 <master_task+0x248>)
 800b21e:	9301      	str	r3, [sp, #4]
 800b220:	2302      	movs	r3, #2
 800b222:	9300      	str	r3, [sp, #0]
 800b224:	2301      	movs	r3, #1
 800b226:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800b22a:	493e      	ldr	r1, [pc, #248]	@ (800b324 <master_task+0x24c>)
 800b22c:	483e      	ldr	r0, [pc, #248]	@ (800b328 <master_task+0x250>)
 800b22e:	f00f fc81 	bl	801ab34 <xTaskCreate>
			(UBaseType_t) 2, &referee_processing_task_handle);

	// xTaskCreate(motor_control_task, "motor_control_task", 512, (void*) 3,
	// 		(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(motor_control_task, "motor_control", 512, (void*) 3,
 800b232:	4b3e      	ldr	r3, [pc, #248]	@ (800b32c <master_task+0x254>)
 800b234:	9301      	str	r3, [sp, #4]
 800b236:	2308      	movs	r3, #8
 800b238:	9300      	str	r3, [sp, #0]
 800b23a:	2303      	movs	r3, #3
 800b23c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800b240:	493b      	ldr	r1, [pc, #236]	@ (800b330 <master_task+0x258>)
 800b242:	483c      	ldr	r0, [pc, #240]	@ (800b334 <master_task+0x25c>)
 800b244:	f00f fc76 	bl	801ab34 <xTaskCreate>
			(UBaseType_t) 8, &motor_control_task_handle);

	xTaskCreate(buzzing_task, "buzzer_task",
 800b248:	4b3b      	ldr	r3, [pc, #236]	@ (800b338 <master_task+0x260>)
 800b24a:	9301      	str	r3, [sp, #4]
 800b24c:	2301      	movs	r3, #1
 800b24e:	9300      	str	r3, [sp, #0]
 800b250:	2301      	movs	r3, #1
 800b252:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b256:	4939      	ldr	r1, [pc, #228]	@ (800b33c <master_task+0x264>)
 800b258:	4839      	ldr	r0, [pc, #228]	@ (800b340 <master_task+0x268>)
 800b25a:	f00f fc6b 	bl	801ab34 <xTaskCreate>
	configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &buzzing_task_handle);
	if (usb_continue_semaphore == NULL) {
 800b25e:	4b12      	ldr	r3, [pc, #72]	@ (800b2a8 <master_task+0x1d0>)
 800b260:	681b      	ldr	r3, [r3, #0]
 800b262:	2b00      	cmp	r3, #0
 800b264:	d00a      	beq.n	800b27c <master_task+0x1a4>
		//error handler
	} else {
		xTaskCreate(usb_task, "usb_task",
 800b266:	4b37      	ldr	r3, [pc, #220]	@ (800b344 <master_task+0x26c>)
 800b268:	9301      	str	r3, [sp, #4]
 800b26a:	2301      	movs	r3, #1
 800b26c:	9300      	str	r3, [sp, #0]
 800b26e:	2301      	movs	r3, #1
 800b270:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800b274:	4934      	ldr	r1, [pc, #208]	@ (800b348 <master_task+0x270>)
 800b276:	4835      	ldr	r0, [pc, #212]	@ (800b34c <master_task+0x274>)
 800b278:	f00f fc5c 	bl	801ab34 <xTaskCreate>
		configMINIMAL_STACK_SIZE, (void*) 1, (UBaseType_t) 1, &usb_task_handle);
	}

//	xTaskCreate(telemetry_task, "telemetry_task", 700, (void*) 1,
//			(UBaseType_t) 5, &telemetry_task_handle);
	xTaskCreate(hud_task, "hud_task", 512, (void*) 3,
 800b27c:	4b34      	ldr	r3, [pc, #208]	@ (800b350 <master_task+0x278>)
 800b27e:	9301      	str	r3, [sp, #4]
 800b280:	2305      	movs	r3, #5
 800b282:	9300      	str	r3, [sp, #0]
 800b284:	2303      	movs	r3, #3
 800b286:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800b28a:	4932      	ldr	r1, [pc, #200]	@ (800b354 <master_task+0x27c>)
 800b28c:	4832      	ldr	r0, [pc, #200]	@ (800b358 <master_task+0x280>)
 800b28e:	f00f fc51 	bl	801ab34 <xTaskCreate>
			(UBaseType_t) 5, &hud_task_handle);


//	vTaskDelete(master_task_handle);
	while(1){
		vTaskDelay(1000);
 800b292:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800b296:	f00f fe55 	bl	801af44 <vTaskDelay>
 800b29a:	e7fa      	b.n	800b292 <master_task+0x1ba>
 800b29c:	20003b7c 	.word	0x20003b7c
 800b2a0:	20003b80 	.word	0x20003b80
 800b2a4:	20003b84 	.word	0x20003b84
 800b2a8:	20003b88 	.word	0x20003b88
 800b2ac:	20003b8c 	.word	0x20003b8c
 800b2b0:	20003b90 	.word	0x20003b90
 800b2b4:	20003b94 	.word	0x20003b94
 800b2b8:	20003b98 	.word	0x20003b98
 800b2bc:	20003b78 	.word	0x20003b78
 800b2c0:	08024698 	.word	0x08024698
 800b2c4:	08005341 	.word	0x08005341
 800b2c8:	20003b74 	.word	0x20003b74
 800b2cc:	080246a8 	.word	0x080246a8
 800b2d0:	080050fd 	.word	0x080050fd
 800b2d4:	20003b70 	.word	0x20003b70
 800b2d8:	080246bc 	.word	0x080246bc
 800b2dc:	08004ef9 	.word	0x08004ef9
 800b2e0:	20003b68 	.word	0x20003b68
 800b2e4:	080246d4 	.word	0x080246d4
 800b2e8:	0800ced9 	.word	0x0800ced9
 800b2ec:	20003b6c 	.word	0x20003b6c
 800b2f0:	080246e4 	.word	0x080246e4
 800b2f4:	08004c69 	.word	0x08004c69
 800b2f8:	20003b5c 	.word	0x20003b5c
 800b2fc:	080246f4 	.word	0x080246f4
 800b300:	08008d35 	.word	0x08008d35
 800b304:	20003b54 	.word	0x20003b54
 800b308:	08024700 	.word	0x08024700
 800b30c:	0800c701 	.word	0x0800c701
 800b310:	200038c0 	.word	0x200038c0
 800b314:	20003b4c 	.word	0x20003b4c
 800b318:	08024714 	.word	0x08024714
 800b31c:	08006f11 	.word	0x08006f11
 800b320:	20003b48 	.word	0x20003b48
 800b324:	0802471c 	.word	0x0802471c
 800b328:	0800d5b1 	.word	0x0800d5b1
 800b32c:	20003b60 	.word	0x20003b60
 800b330:	0802472c 	.word	0x0802472c
 800b334:	0800c9d5 	.word	0x0800c9d5
 800b338:	20003b50 	.word	0x20003b50
 800b33c:	0802473c 	.word	0x0802473c
 800b340:	080065f9 	.word	0x080065f9
 800b344:	20003b58 	.word	0x20003b58
 800b348:	08024748 	.word	0x08024748
 800b34c:	0800db3d 	.word	0x0800db3d
 800b350:	20003b64 	.word	0x20003b64
 800b354:	08024754 	.word	0x08024754
 800b358:	08007d69 	.word	0x08007d69

0800b35c <set_motor_config>:
#include "motor_config.h"

extern QueueHandle_t g_buzzing_task_msg;
uint16_t g_motor_fault;

void set_motor_config(motor_data_t *motor) {
 800b35c:	b480      	push	{r7}
 800b35e:	b083      	sub	sp, #12
 800b360:	af00      	add	r7, sp, #0
 800b362:	6078      	str	r0, [r7, #4]
	//general config:
	switch (motor->motor_type) {
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	789b      	ldrb	r3, [r3, #2]
 800b368:	3b01      	subs	r3, #1
 800b36a:	2b08      	cmp	r3, #8
 800b36c:	f200 8115 	bhi.w	800b59a <set_motor_config+0x23e>
 800b370:	a201      	add	r2, pc, #4	@ (adr r2, 800b378 <set_motor_config+0x1c>)
 800b372:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b376:	bf00      	nop
 800b378:	0800b469 	.word	0x0800b469
 800b37c:	0800b535 	.word	0x0800b535
 800b380:	0800b39d 	.word	0x0800b39d
 800b384:	0800b401 	.word	0x0800b401
 800b388:	0800b39d 	.word	0x0800b39d
 800b38c:	0800b535 	.word	0x0800b535
 800b390:	0800b535 	.word	0x0800b535
 800b394:	0800b39d 	.word	0x0800b39d
 800b398:	0800b4cf 	.word	0x0800b4cf
	case TYPE_M3508_ANGLE:
	case TYPE_M3508_STEPS:
	case TYPE_M3508:
		motor->angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800b39c:	687b      	ldr	r3, [r7, #4]
 800b39e:	4a84      	ldr	r2, [pc, #528]	@ (800b5b0 <set_motor_config+0x254>)
 800b3a0:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 800b3a4:	687b      	ldr	r3, [r7, #4]
 800b3a6:	4a83      	ldr	r2, [pc, #524]	@ (800b5b4 <set_motor_config+0x258>)
 800b3a8:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800b3b2:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M3508_GEARBOX_RATIO;
 800b3b4:	687b      	ldr	r3, [r7, #4]
 800b3b6:	4a80      	ldr	r2, [pc, #512]	@ (800b5b8 <set_motor_config+0x25c>)
 800b3b8:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M3508_GEARBOX_RATIO;
 800b3bc:	687b      	ldr	r3, [r7, #4]
 800b3be:	4a7f      	ldr	r2, [pc, #508]	@ (800b5bc <set_motor_config+0x260>)
 800b3c0:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800b3ca:	687b      	ldr	r3, [r7, #4]
 800b3cc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b3d0:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b3d2:	687b      	ldr	r3, [r7, #4]
 800b3d4:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 800b3d8:	687b      	ldr	r3, [r7, #4]
 800b3da:	4a79      	ldr	r2, [pc, #484]	@ (800b5c0 <set_motor_config+0x264>)
 800b3dc:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	4a78      	ldr	r2, [pc, #480]	@ (800b5c4 <set_motor_config+0x268>)
 800b3e4:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang - motor->angle_data.min_ang;
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
 800b3ee:	687b      	ldr	r3, [r7, #4]
 800b3f0:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 800b3f4:	ee77 7a67 	vsub.f32	s15, s14, s15
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800b3fe:	e0cd      	b.n	800b59c <set_motor_config+0x240>
	case TYPE_M3508_NGEARBOX:
		motor->angle_data.gearbox_ratio = 1;
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800b406:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M3508_MAX_RPM;
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	4a69      	ldr	r2, [pc, #420]	@ (800b5b4 <set_motor_config+0x258>)
 800b40e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800b418:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	4a6a      	ldr	r2, [pc, #424]	@ (800b5c8 <set_motor_config+0x26c>)
 800b41e:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800b428:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b42c:	687b      	ldr	r3, [r7, #4]
 800b42e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b438:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 800b440:	687b      	ldr	r3, [r7, #4]
 800b442:	4a5f      	ldr	r2, [pc, #380]	@ (800b5c0 <set_motor_config+0x264>)
 800b444:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 800b448:	687b      	ldr	r3, [r7, #4]
 800b44a:	4a5e      	ldr	r2, [pc, #376]	@ (800b5c4 <set_motor_config+0x268>)
 800b44c:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b450:	687b      	ldr	r3, [r7, #4]
 800b452:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 800b456:	687b      	ldr	r3, [r7, #4]
 800b458:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 800b45c:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b460:	687b      	ldr	r3, [r7, #4]
 800b462:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800b466:	e099      	b.n	800b59c <set_motor_config+0x240>

	case TYPE_GM6020:
		motor->angle_data.gearbox_ratio = 1;
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800b46e:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 800b472:	687b      	ldr	r3, [r7, #4]
 800b474:	4a55      	ldr	r2, [pc, #340]	@ (800b5cc <set_motor_config+0x270>)
 800b476:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 800b47a:	687b      	ldr	r3, [r7, #4]
 800b47c:	4a54      	ldr	r2, [pc, #336]	@ (800b5d0 <set_motor_config+0x274>)
 800b47e:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096;
 800b480:	687b      	ldr	r3, [r7, #4]
 800b482:	4a51      	ldr	r2, [pc, #324]	@ (800b5c8 <set_motor_config+0x26c>)
 800b484:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096;
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800b48e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b49e:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.max_ang = PI;
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	4a46      	ldr	r2, [pc, #280]	@ (800b5c4 <set_motor_config+0x268>)
 800b4aa:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.min_ang = -PI;
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	4a43      	ldr	r2, [pc, #268]	@ (800b5c0 <set_motor_config+0x264>)
 800b4b2:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 800b4c2:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800b4cc:	e066      	b.n	800b59c <set_motor_config+0x240>

	case TYPE_GM6020_720:
		motor->angle_data.gearbox_ratio = 0;
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	f04f 0200 	mov.w	r2, #0
 800b4d4:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = GM6020_MAX_RPM;
 800b4d8:	687b      	ldr	r3, [r7, #4]
 800b4da:	4a3c      	ldr	r2, [pc, #240]	@ (800b5cc <set_motor_config+0x270>)
 800b4dc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = GM6020_MAX_OUTPUT;
 800b4e0:	687b      	ldr	r3, [r7, #4]
 800b4e2:	4a3b      	ldr	r2, [pc, #236]	@ (800b5d0 <set_motor_config+0x274>)
 800b4e4:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -8192;	//-4096*2
 800b4e6:	687b      	ldr	r3, [r7, #4]
 800b4e8:	4a3a      	ldr	r2, [pc, #232]	@ (800b5d4 <set_motor_config+0x278>)
 800b4ea:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 8192;	//4096*2
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800b4f4:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b4f8:	687b      	ldr	r3, [r7, #4]
 800b4fa:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b504:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b506:	687b      	ldr	r3, [r7, #4]
 800b508:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -2 * PI;
 800b50c:	687b      	ldr	r3, [r7, #4]
 800b50e:	4a32      	ldr	r2, [pc, #200]	@ (800b5d8 <set_motor_config+0x27c>)
 800b510:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = 2 * PI;
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	4a31      	ldr	r2, [pc, #196]	@ (800b5dc <set_motor_config+0x280>)
 800b518:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b51c:	687b      	ldr	r3, [r7, #4]
 800b51e:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 800b522:	687b      	ldr	r3, [r7, #4]
 800b524:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 800b528:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800b532:	e033      	b.n	800b59c <set_motor_config+0x240>
	case TYPE_M2006:
	case TYPE_M2006_STEPS:
	case TYPE_M2006_ANGLE:
		motor->angle_data.gearbox_ratio = M2006_GEARBOX_RATIO;
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	4a2a      	ldr	r2, [pc, #168]	@ (800b5e0 <set_motor_config+0x284>)
 800b538:	f8c3 20c8 	str.w	r2, [r3, #200]	@ 0xc8
		motor->angle_pid.physical_max = M2006_MAX_RPM;
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	4a29      	ldr	r2, [pc, #164]	@ (800b5e4 <set_motor_config+0x288>)
 800b540:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
		motor->rpm_pid.physical_max = M2006_MAX_OUTPUT;
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800b54a:	65da      	str	r2, [r3, #92]	@ 0x5c
		motor->angle_data.min_ticks = -4096 * M2006_GEARBOX_RATIO;
 800b54c:	687b      	ldr	r3, [r7, #4]
 800b54e:	4a26      	ldr	r2, [pc, #152]	@ (800b5e8 <set_motor_config+0x28c>)
 800b550:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
		motor->angle_data.max_ticks = 4096 * M2006_GEARBOX_RATIO;
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	f44f 3210 	mov.w	r2, #147456	@ 0x24000
 800b55a:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b55e:	687b      	ldr	r3, [r7, #4]
 800b560:	f8d3 20a4 	ldr.w	r2, [r3, #164]	@ 0xa4
				- motor->angle_data.min_ticks;
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800b56a:	1ad2      	subs	r2, r2, r3
		motor->angle_data.tick_range = motor->angle_data.max_ticks
 800b56c:	687b      	ldr	r3, [r7, #4]
 800b56e:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
		motor->angle_data.min_ang = -PI;
 800b572:	687b      	ldr	r3, [r7, #4]
 800b574:	4a12      	ldr	r2, [pc, #72]	@ (800b5c0 <set_motor_config+0x264>)
 800b576:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
		motor->angle_data.max_ang = PI;
 800b57a:	687b      	ldr	r3, [r7, #4]
 800b57c:	4a11      	ldr	r2, [pc, #68]	@ (800b5c4 <set_motor_config+0x268>)
 800b57e:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	ed93 7a2e 	vldr	s14, [r3, #184]	@ 0xb8
				- motor->angle_data.min_ang;
 800b588:	687b      	ldr	r3, [r7, #4]
 800b58a:	edd3 7a2d 	vldr	s15, [r3, #180]	@ 0xb4
 800b58e:	ee77 7a67 	vsub.f32	s15, s14, s15
		motor->angle_data.ang_range = motor->angle_data.max_ang
 800b592:	687b      	ldr	r3, [r7, #4]
 800b594:	edc3 7a2f 	vstr	s15, [r3, #188]	@ 0xbc
		break;
 800b598:	e000      	b.n	800b59c <set_motor_config+0x240>
	default:
		break;
 800b59a:	bf00      	nop
	}

	motor->angle_data.init = 0;
 800b59c:	687b      	ldr	r3, [r7, #4]
 800b59e:	2200      	movs	r2, #0
 800b5a0:	f883 20dc 	strb.w	r2, [r3, #220]	@ 0xdc

}
 800b5a4:	bf00      	nop
 800b5a6:	370c      	adds	r7, #12
 800b5a8:	46bd      	mov	sp, r7
 800b5aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ae:	4770      	bx	lr
 800b5b0:	4199999a 	.word	0x4199999a
 800b5b4:	460fc000 	.word	0x460fc000
 800b5b8:	fffecccd 	.word	0xfffecccd
 800b5bc:	00013333 	.word	0x00013333
 800b5c0:	c0490fdb 	.word	0xc0490fdb
 800b5c4:	40490fdb 	.word	0x40490fdb
 800b5c8:	fffff000 	.word	0xfffff000
 800b5cc:	43c80000 	.word	0x43c80000
 800b5d0:	469c4000 	.word	0x469c4000
 800b5d4:	ffffe000 	.word	0xffffe000
 800b5d8:	c0c90fdb 	.word	0xc0c90fdb
 800b5dc:	40c90fdb 	.word	0x40c90fdb
 800b5e0:	42100000 	.word	0x42100000
 800b5e4:	466a6000 	.word	0x466a6000
 800b5e8:	fffdc000 	.word	0xfffdc000

0800b5ec <config_motors>:

extern motor_data_t g_can_motors[24];
void config_motors() {
 800b5ec:	b580      	push	{r7, lr}
 800b5ee:	b082      	sub	sp, #8
 800b5f0:	af00      	add	r7, sp, #0
	for (uint8_t i = 0; i < 24; i++) {
 800b5f2:	2300      	movs	r3, #0
 800b5f4:	71fb      	strb	r3, [r7, #7]
 800b5f6:	e042      	b.n	800b67e <config_motors+0x92>
		//reset all the values to 0
		g_can_motors[i].motor_type = 0;
 800b5f8:	79fa      	ldrb	r2, [r7, #7]
 800b5fa:	49c4      	ldr	r1, [pc, #784]	@ (800b90c <config_motors+0x320>)
 800b5fc:	4613      	mov	r3, r2
 800b5fe:	011b      	lsls	r3, r3, #4
 800b600:	1a9b      	subs	r3, r3, r2
 800b602:	011b      	lsls	r3, r3, #4
 800b604:	440b      	add	r3, r1
 800b606:	3302      	adds	r3, #2
 800b608:	2200      	movs	r2, #0
 800b60a:	701a      	strb	r2, [r3, #0]
		g_can_motors[i].rpm_pid.output = 0;
 800b60c:	79fa      	ldrb	r2, [r7, #7]
 800b60e:	49bf      	ldr	r1, [pc, #764]	@ (800b90c <config_motors+0x320>)
 800b610:	4613      	mov	r3, r2
 800b612:	011b      	lsls	r3, r3, #4
 800b614:	1a9b      	subs	r3, r3, r2
 800b616:	011b      	lsls	r3, r3, #4
 800b618:	440b      	add	r3, r1
 800b61a:	3358      	adds	r3, #88	@ 0x58
 800b61c:	f04f 0200 	mov.w	r2, #0
 800b620:	601a      	str	r2, [r3, #0]
		g_can_motors[i].rpm_pid.integral = 0;
 800b622:	79fa      	ldrb	r2, [r7, #7]
 800b624:	49b9      	ldr	r1, [pc, #740]	@ (800b90c <config_motors+0x320>)
 800b626:	4613      	mov	r3, r2
 800b628:	011b      	lsls	r3, r3, #4
 800b62a:	1a9b      	subs	r3, r3, r2
 800b62c:	011b      	lsls	r3, r3, #4
 800b62e:	440b      	add	r3, r1
 800b630:	334c      	adds	r3, #76	@ 0x4c
 800b632:	f04f 0200 	mov.w	r2, #0
 800b636:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.output = 0;
 800b638:	79fa      	ldrb	r2, [r7, #7]
 800b63a:	49b4      	ldr	r1, [pc, #720]	@ (800b90c <config_motors+0x320>)
 800b63c:	4613      	mov	r3, r2
 800b63e:	011b      	lsls	r3, r3, #4
 800b640:	1a9b      	subs	r3, r3, r2
 800b642:	011b      	lsls	r3, r3, #4
 800b644:	440b      	add	r3, r1
 800b646:	3388      	adds	r3, #136	@ 0x88
 800b648:	f04f 0200 	mov.w	r2, #0
 800b64c:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_pid.integral = 0;
 800b64e:	79fa      	ldrb	r2, [r7, #7]
 800b650:	49ae      	ldr	r1, [pc, #696]	@ (800b90c <config_motors+0x320>)
 800b652:	4613      	mov	r3, r2
 800b654:	011b      	lsls	r3, r3, #4
 800b656:	1a9b      	subs	r3, r3, r2
 800b658:	011b      	lsls	r3, r3, #4
 800b65a:	440b      	add	r3, r1
 800b65c:	337c      	adds	r3, #124	@ 0x7c
 800b65e:	f04f 0200 	mov.w	r2, #0
 800b662:	601a      	str	r2, [r3, #0]
		g_can_motors[i].angle_data.ticks = 0;
 800b664:	79fa      	ldrb	r2, [r7, #7]
 800b666:	49a9      	ldr	r1, [pc, #676]	@ (800b90c <config_motors+0x320>)
 800b668:	4613      	mov	r3, r2
 800b66a:	011b      	lsls	r3, r3, #4
 800b66c:	1a9b      	subs	r3, r3, r2
 800b66e:	011b      	lsls	r3, r3, #4
 800b670:	440b      	add	r3, r1
 800b672:	3398      	adds	r3, #152	@ 0x98
 800b674:	2200      	movs	r2, #0
 800b676:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < 24; i++) {
 800b678:	79fb      	ldrb	r3, [r7, #7]
 800b67a:	3301      	adds	r3, #1
 800b67c:	71fb      	strb	r3, [r7, #7]
 800b67e:	79fb      	ldrb	r3, [r7, #7]
 800b680:	2b17      	cmp	r3, #23
 800b682:	d9b9      	bls.n	800b5f8 <config_motors+0xc>
	}

	//initialise motor data
#ifdef LEFT_MOTOR_ID
	uint8_t motor_id = LEFT_MOTOR_ID - 1;
 800b684:	2300      	movs	r3, #0
 800b686:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 800b688:	79ba      	ldrb	r2, [r7, #6]
 800b68a:	49a0      	ldr	r1, [pc, #640]	@ (800b90c <config_motors+0x320>)
 800b68c:	4613      	mov	r3, r2
 800b68e:	011b      	lsls	r3, r3, #4
 800b690:	1a9b      	subs	r3, r3, r2
 800b692:	011b      	lsls	r3, r3, #4
 800b694:	440b      	add	r3, r1
 800b696:	3302      	adds	r3, #2
 800b698:	2203      	movs	r2, #3
 800b69a:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800b69c:	79ba      	ldrb	r2, [r7, #6]
 800b69e:	4613      	mov	r3, r2
 800b6a0:	011b      	lsls	r3, r3, #4
 800b6a2:	1a9b      	subs	r3, r3, r2
 800b6a4:	011b      	lsls	r3, r3, #4
 800b6a6:	4a99      	ldr	r2, [pc, #612]	@ (800b90c <config_motors+0x320>)
 800b6a8:	4413      	add	r3, r2
 800b6aa:	4618      	mov	r0, r3
 800b6ac:	f7ff fe56 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 800b6b0:	79ba      	ldrb	r2, [r7, #6]
 800b6b2:	4996      	ldr	r1, [pc, #600]	@ (800b90c <config_motors+0x320>)
 800b6b4:	4613      	mov	r3, r2
 800b6b6:	011b      	lsls	r3, r3, #4
 800b6b8:	1a9b      	subs	r3, r3, r2
 800b6ba:	011b      	lsls	r3, r3, #4
 800b6bc:	440b      	add	r3, r1
 800b6be:	339c      	adds	r3, #156	@ 0x9c
 800b6c0:	2200      	movs	r2, #0
 800b6c2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800b6c4:	79ba      	ldrb	r2, [r7, #6]
 800b6c6:	4991      	ldr	r1, [pc, #580]	@ (800b90c <config_motors+0x320>)
 800b6c8:	4613      	mov	r3, r2
 800b6ca:	011b      	lsls	r3, r3, #4
 800b6cc:	1a9b      	subs	r3, r3, r2
 800b6ce:	011b      	lsls	r3, r3, #4
 800b6d0:	440b      	add	r3, r1
 800b6d2:	33c4      	adds	r3, #196	@ 0xc4
 800b6d4:	4a8e      	ldr	r2, [pc, #568]	@ (800b910 <config_motors+0x324>)
 800b6d6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800b6d8:	79ba      	ldrb	r2, [r7, #6]
 800b6da:	498c      	ldr	r1, [pc, #560]	@ (800b90c <config_motors+0x320>)
 800b6dc:	4613      	mov	r3, r2
 800b6de:	011b      	lsls	r3, r3, #4
 800b6e0:	1a9b      	subs	r3, r3, r2
 800b6e2:	011b      	lsls	r3, r3, #4
 800b6e4:	440b      	add	r3, r1
 800b6e6:	33c0      	adds	r3, #192	@ 0xc0
 800b6e8:	4a8a      	ldr	r2, [pc, #552]	@ (800b914 <config_motors+0x328>)
 800b6ea:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800b6ec:	79ba      	ldrb	r2, [r7, #6]
 800b6ee:	4987      	ldr	r1, [pc, #540]	@ (800b90c <config_motors+0x320>)
 800b6f0:	4613      	mov	r3, r2
 800b6f2:	011b      	lsls	r3, r3, #4
 800b6f4:	1a9b      	subs	r3, r3, r2
 800b6f6:	011b      	lsls	r3, r3, #4
 800b6f8:	440b      	add	r3, r1
 800b6fa:	3338      	adds	r3, #56	@ 0x38
 800b6fc:	f04f 0200 	mov.w	r2, #0
 800b700:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800b702:	79ba      	ldrb	r2, [r7, #6]
 800b704:	4981      	ldr	r1, [pc, #516]	@ (800b90c <config_motors+0x320>)
 800b706:	4613      	mov	r3, r2
 800b708:	011b      	lsls	r3, r3, #4
 800b70a:	1a9b      	subs	r3, r3, r2
 800b70c:	011b      	lsls	r3, r3, #4
 800b70e:	440b      	add	r3, r1
 800b710:	333c      	adds	r3, #60	@ 0x3c
 800b712:	f04f 0200 	mov.w	r2, #0
 800b716:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800b718:	79ba      	ldrb	r2, [r7, #6]
 800b71a:	497c      	ldr	r1, [pc, #496]	@ (800b90c <config_motors+0x320>)
 800b71c:	4613      	mov	r3, r2
 800b71e:	011b      	lsls	r3, r3, #4
 800b720:	1a9b      	subs	r3, r3, r2
 800b722:	011b      	lsls	r3, r3, #4
 800b724:	440b      	add	r3, r1
 800b726:	3340      	adds	r3, #64	@ 0x40
 800b728:	f04f 0200 	mov.w	r2, #0
 800b72c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800b72e:	79ba      	ldrb	r2, [r7, #6]
 800b730:	4976      	ldr	r1, [pc, #472]	@ (800b90c <config_motors+0x320>)
 800b732:	4613      	mov	r3, r2
 800b734:	011b      	lsls	r3, r3, #4
 800b736:	1a9b      	subs	r3, r3, r2
 800b738:	011b      	lsls	r3, r3, #4
 800b73a:	440b      	add	r3, r1
 800b73c:	33d4      	adds	r3, #212	@ 0xd4
 800b73e:	4a76      	ldr	r2, [pc, #472]	@ (800b918 <config_motors+0x32c>)
 800b740:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800b742:	79ba      	ldrb	r2, [r7, #6]
 800b744:	4971      	ldr	r1, [pc, #452]	@ (800b90c <config_motors+0x320>)
 800b746:	4613      	mov	r3, r2
 800b748:	011b      	lsls	r3, r3, #4
 800b74a:	1a9b      	subs	r3, r3, r2
 800b74c:	011b      	lsls	r3, r3, #4
 800b74e:	440b      	add	r3, r1
 800b750:	3350      	adds	r3, #80	@ 0x50
 800b752:	f04f 0200 	mov.w	r2, #0
 800b756:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800b758:	79ba      	ldrb	r2, [r7, #6]
 800b75a:	496c      	ldr	r1, [pc, #432]	@ (800b90c <config_motors+0x320>)
 800b75c:	4613      	mov	r3, r2
 800b75e:	011b      	lsls	r3, r3, #4
 800b760:	1a9b      	subs	r3, r3, r2
 800b762:	011b      	lsls	r3, r3, #4
 800b764:	440b      	add	r3, r1
 800b766:	3354      	adds	r3, #84	@ 0x54
 800b768:	f04f 0200 	mov.w	r2, #0
 800b76c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 800b76e:	79ba      	ldrb	r2, [r7, #6]
 800b770:	4966      	ldr	r1, [pc, #408]	@ (800b90c <config_motors+0x320>)
 800b772:	4613      	mov	r3, r2
 800b774:	011b      	lsls	r3, r3, #4
 800b776:	1a9b      	subs	r3, r3, r2
 800b778:	011b      	lsls	r3, r3, #4
 800b77a:	440b      	add	r3, r1
 800b77c:	3330      	adds	r3, #48	@ 0x30
 800b77e:	4a67      	ldr	r2, [pc, #412]	@ (800b91c <config_motors+0x330>)
 800b780:	601a      	str	r2, [r3, #0]
#endif

#ifdef RIGHT_MOTOR_ID
	motor_id = RIGHT_MOTOR_ID - 1;
 800b782:	2301      	movs	r3, #1
 800b784:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508;
 800b786:	79ba      	ldrb	r2, [r7, #6]
 800b788:	4960      	ldr	r1, [pc, #384]	@ (800b90c <config_motors+0x320>)
 800b78a:	4613      	mov	r3, r2
 800b78c:	011b      	lsls	r3, r3, #4
 800b78e:	1a9b      	subs	r3, r3, r2
 800b790:	011b      	lsls	r3, r3, #4
 800b792:	440b      	add	r3, r1
 800b794:	3302      	adds	r3, #2
 800b796:	2203      	movs	r2, #3
 800b798:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800b79a:	79ba      	ldrb	r2, [r7, #6]
 800b79c:	4613      	mov	r3, r2
 800b79e:	011b      	lsls	r3, r3, #4
 800b7a0:	1a9b      	subs	r3, r3, r2
 800b7a2:	011b      	lsls	r3, r3, #4
 800b7a4:	4a59      	ldr	r2, [pc, #356]	@ (800b90c <config_motors+0x320>)
 800b7a6:	4413      	add	r3, r2
 800b7a8:	4618      	mov	r0, r3
 800b7aa:	f7ff fdd7 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 800b7ae:	79ba      	ldrb	r2, [r7, #6]
 800b7b0:	4956      	ldr	r1, [pc, #344]	@ (800b90c <config_motors+0x320>)
 800b7b2:	4613      	mov	r3, r2
 800b7b4:	011b      	lsls	r3, r3, #4
 800b7b6:	1a9b      	subs	r3, r3, r2
 800b7b8:	011b      	lsls	r3, r3, #4
 800b7ba:	440b      	add	r3, r1
 800b7bc:	339c      	adds	r3, #156	@ 0x9c
 800b7be:	2200      	movs	r2, #0
 800b7c0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800b7c2:	79ba      	ldrb	r2, [r7, #6]
 800b7c4:	4951      	ldr	r1, [pc, #324]	@ (800b90c <config_motors+0x320>)
 800b7c6:	4613      	mov	r3, r2
 800b7c8:	011b      	lsls	r3, r3, #4
 800b7ca:	1a9b      	subs	r3, r3, r2
 800b7cc:	011b      	lsls	r3, r3, #4
 800b7ce:	440b      	add	r3, r1
 800b7d0:	33c4      	adds	r3, #196	@ 0xc4
 800b7d2:	4a4f      	ldr	r2, [pc, #316]	@ (800b910 <config_motors+0x324>)
 800b7d4:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800b7d6:	79ba      	ldrb	r2, [r7, #6]
 800b7d8:	494c      	ldr	r1, [pc, #304]	@ (800b90c <config_motors+0x320>)
 800b7da:	4613      	mov	r3, r2
 800b7dc:	011b      	lsls	r3, r3, #4
 800b7de:	1a9b      	subs	r3, r3, r2
 800b7e0:	011b      	lsls	r3, r3, #4
 800b7e2:	440b      	add	r3, r1
 800b7e4:	33c0      	adds	r3, #192	@ 0xc0
 800b7e6:	4a4b      	ldr	r2, [pc, #300]	@ (800b914 <config_motors+0x328>)
 800b7e8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800b7ea:	79ba      	ldrb	r2, [r7, #6]
 800b7ec:	4947      	ldr	r1, [pc, #284]	@ (800b90c <config_motors+0x320>)
 800b7ee:	4613      	mov	r3, r2
 800b7f0:	011b      	lsls	r3, r3, #4
 800b7f2:	1a9b      	subs	r3, r3, r2
 800b7f4:	011b      	lsls	r3, r3, #4
 800b7f6:	440b      	add	r3, r1
 800b7f8:	33d4      	adds	r3, #212	@ 0xd4
 800b7fa:	4a47      	ldr	r2, [pc, #284]	@ (800b918 <config_motors+0x32c>)
 800b7fc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800b7fe:	79ba      	ldrb	r2, [r7, #6]
 800b800:	4942      	ldr	r1, [pc, #264]	@ (800b90c <config_motors+0x320>)
 800b802:	4613      	mov	r3, r2
 800b804:	011b      	lsls	r3, r3, #4
 800b806:	1a9b      	subs	r3, r3, r2
 800b808:	011b      	lsls	r3, r3, #4
 800b80a:	440b      	add	r3, r1
 800b80c:	3338      	adds	r3, #56	@ 0x38
 800b80e:	f04f 0200 	mov.w	r2, #0
 800b812:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800b814:	79ba      	ldrb	r2, [r7, #6]
 800b816:	493d      	ldr	r1, [pc, #244]	@ (800b90c <config_motors+0x320>)
 800b818:	4613      	mov	r3, r2
 800b81a:	011b      	lsls	r3, r3, #4
 800b81c:	1a9b      	subs	r3, r3, r2
 800b81e:	011b      	lsls	r3, r3, #4
 800b820:	440b      	add	r3, r1
 800b822:	333c      	adds	r3, #60	@ 0x3c
 800b824:	f04f 0200 	mov.w	r2, #0
 800b828:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800b82a:	79ba      	ldrb	r2, [r7, #6]
 800b82c:	4937      	ldr	r1, [pc, #220]	@ (800b90c <config_motors+0x320>)
 800b82e:	4613      	mov	r3, r2
 800b830:	011b      	lsls	r3, r3, #4
 800b832:	1a9b      	subs	r3, r3, r2
 800b834:	011b      	lsls	r3, r3, #4
 800b836:	440b      	add	r3, r1
 800b838:	3340      	adds	r3, #64	@ 0x40
 800b83a:	f04f 0200 	mov.w	r2, #0
 800b83e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800b840:	79ba      	ldrb	r2, [r7, #6]
 800b842:	4932      	ldr	r1, [pc, #200]	@ (800b90c <config_motors+0x320>)
 800b844:	4613      	mov	r3, r2
 800b846:	011b      	lsls	r3, r3, #4
 800b848:	1a9b      	subs	r3, r3, r2
 800b84a:	011b      	lsls	r3, r3, #4
 800b84c:	440b      	add	r3, r1
 800b84e:	3350      	adds	r3, #80	@ 0x50
 800b850:	f04f 0200 	mov.w	r2, #0
 800b854:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800b856:	79ba      	ldrb	r2, [r7, #6]
 800b858:	492c      	ldr	r1, [pc, #176]	@ (800b90c <config_motors+0x320>)
 800b85a:	4613      	mov	r3, r2
 800b85c:	011b      	lsls	r3, r3, #4
 800b85e:	1a9b      	subs	r3, r3, r2
 800b860:	011b      	lsls	r3, r3, #4
 800b862:	440b      	add	r3, r1
 800b864:	3354      	adds	r3, #84	@ 0x54
 800b866:	f04f 0200 	mov.w	r2, #0
 800b86a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 10;
 800b86c:	79ba      	ldrb	r2, [r7, #6]
 800b86e:	4927      	ldr	r1, [pc, #156]	@ (800b90c <config_motors+0x320>)
 800b870:	4613      	mov	r3, r2
 800b872:	011b      	lsls	r3, r3, #4
 800b874:	1a9b      	subs	r3, r3, r2
 800b876:	011b      	lsls	r3, r3, #4
 800b878:	440b      	add	r3, r1
 800b87a:	3330      	adds	r3, #48	@ 0x30
 800b87c:	4a27      	ldr	r2, [pc, #156]	@ (800b91c <config_motors+0x330>)
 800b87e:	601a      	str	r2, [r3, #0]
#endif
#ifdef FR_MOTOR_ID
	motor_id = FR_MOTOR_ID - 1;
 800b880:	2304      	movs	r3, #4
 800b882:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800b884:	79ba      	ldrb	r2, [r7, #6]
 800b886:	4921      	ldr	r1, [pc, #132]	@ (800b90c <config_motors+0x320>)
 800b888:	4613      	mov	r3, r2
 800b88a:	011b      	lsls	r3, r3, #4
 800b88c:	1a9b      	subs	r3, r3, r2
 800b88e:	011b      	lsls	r3, r3, #4
 800b890:	440b      	add	r3, r1
 800b892:	3302      	adds	r3, #2
 800b894:	2201      	movs	r2, #1
 800b896:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800b898:	79ba      	ldrb	r2, [r7, #6]
 800b89a:	4613      	mov	r3, r2
 800b89c:	011b      	lsls	r3, r3, #4
 800b89e:	1a9b      	subs	r3, r3, r2
 800b8a0:	011b      	lsls	r3, r3, #4
 800b8a2:	4a1a      	ldr	r2, [pc, #104]	@ (800b90c <config_motors+0x320>)
 800b8a4:	4413      	add	r3, r2
 800b8a6:	4618      	mov	r0, r3
 800b8a8:	f7ff fd58 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 800b8ac:	79ba      	ldrb	r2, [r7, #6]
 800b8ae:	4917      	ldr	r1, [pc, #92]	@ (800b90c <config_motors+0x320>)
 800b8b0:	4613      	mov	r3, r2
 800b8b2:	011b      	lsls	r3, r3, #4
 800b8b4:	1a9b      	subs	r3, r3, r2
 800b8b6:	011b      	lsls	r3, r3, #4
 800b8b8:	440b      	add	r3, r1
 800b8ba:	339c      	adds	r3, #156	@ 0x9c
 800b8bc:	2200      	movs	r2, #0
 800b8be:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800b8c0:	79ba      	ldrb	r2, [r7, #6]
 800b8c2:	4912      	ldr	r1, [pc, #72]	@ (800b90c <config_motors+0x320>)
 800b8c4:	4613      	mov	r3, r2
 800b8c6:	011b      	lsls	r3, r3, #4
 800b8c8:	1a9b      	subs	r3, r3, r2
 800b8ca:	011b      	lsls	r3, r3, #4
 800b8cc:	440b      	add	r3, r1
 800b8ce:	33c4      	adds	r3, #196	@ 0xc4
 800b8d0:	4a0f      	ldr	r2, [pc, #60]	@ (800b910 <config_motors+0x324>)
 800b8d2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800b8d4:	79ba      	ldrb	r2, [r7, #6]
 800b8d6:	490d      	ldr	r1, [pc, #52]	@ (800b90c <config_motors+0x320>)
 800b8d8:	4613      	mov	r3, r2
 800b8da:	011b      	lsls	r3, r3, #4
 800b8dc:	1a9b      	subs	r3, r3, r2
 800b8de:	011b      	lsls	r3, r3, #4
 800b8e0:	440b      	add	r3, r1
 800b8e2:	33c0      	adds	r3, #192	@ 0xc0
 800b8e4:	4a0b      	ldr	r2, [pc, #44]	@ (800b914 <config_motors+0x328>)
 800b8e6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800b8e8:	79ba      	ldrb	r2, [r7, #6]
 800b8ea:	4908      	ldr	r1, [pc, #32]	@ (800b90c <config_motors+0x320>)
 800b8ec:	4613      	mov	r3, r2
 800b8ee:	011b      	lsls	r3, r3, #4
 800b8f0:	1a9b      	subs	r3, r3, r2
 800b8f2:	011b      	lsls	r3, r3, #4
 800b8f4:	440b      	add	r3, r1
 800b8f6:	3338      	adds	r3, #56	@ 0x38
 800b8f8:	f04f 0200 	mov.w	r2, #0
 800b8fc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800b8fe:	79ba      	ldrb	r2, [r7, #6]
 800b900:	4902      	ldr	r1, [pc, #8]	@ (800b90c <config_motors+0x320>)
 800b902:	4613      	mov	r3, r2
 800b904:	011b      	lsls	r3, r3, #4
 800b906:	1a9b      	subs	r3, r3, r2
 800b908:	011b      	lsls	r3, r3, #4
 800b90a:	e009      	b.n	800b920 <config_motors+0x334>
 800b90c:	20002220 	.word	0x20002220
 800b910:	40c90fdb 	.word	0x40c90fdb
 800b914:	c0c90fdb 	.word	0xc0c90fdb
 800b918:	43eec2d1 	.word	0x43eec2d1
 800b91c:	41200000 	.word	0x41200000
 800b920:	440b      	add	r3, r1
 800b922:	333c      	adds	r3, #60	@ 0x3c
 800b924:	f04f 0200 	mov.w	r2, #0
 800b928:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800b92a:	79ba      	ldrb	r2, [r7, #6]
 800b92c:	49c4      	ldr	r1, [pc, #784]	@ (800bc40 <config_motors+0x654>)
 800b92e:	4613      	mov	r3, r2
 800b930:	011b      	lsls	r3, r3, #4
 800b932:	1a9b      	subs	r3, r3, r2
 800b934:	011b      	lsls	r3, r3, #4
 800b936:	440b      	add	r3, r1
 800b938:	3340      	adds	r3, #64	@ 0x40
 800b93a:	f04f 0200 	mov.w	r2, #0
 800b93e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800b940:	79ba      	ldrb	r2, [r7, #6]
 800b942:	49bf      	ldr	r1, [pc, #764]	@ (800bc40 <config_motors+0x654>)
 800b944:	4613      	mov	r3, r2
 800b946:	011b      	lsls	r3, r3, #4
 800b948:	1a9b      	subs	r3, r3, r2
 800b94a:	011b      	lsls	r3, r3, #4
 800b94c:	440b      	add	r3, r1
 800b94e:	33d4      	adds	r3, #212	@ 0xd4
 800b950:	4abc      	ldr	r2, [pc, #752]	@ (800bc44 <config_motors+0x658>)
 800b952:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800b954:	79ba      	ldrb	r2, [r7, #6]
 800b956:	49ba      	ldr	r1, [pc, #744]	@ (800bc40 <config_motors+0x654>)
 800b958:	4613      	mov	r3, r2
 800b95a:	011b      	lsls	r3, r3, #4
 800b95c:	1a9b      	subs	r3, r3, r2
 800b95e:	011b      	lsls	r3, r3, #4
 800b960:	440b      	add	r3, r1
 800b962:	3350      	adds	r3, #80	@ 0x50
 800b964:	f04f 0200 	mov.w	r2, #0
 800b968:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800b96a:	79ba      	ldrb	r2, [r7, #6]
 800b96c:	49b4      	ldr	r1, [pc, #720]	@ (800bc40 <config_motors+0x654>)
 800b96e:	4613      	mov	r3, r2
 800b970:	011b      	lsls	r3, r3, #4
 800b972:	1a9b      	subs	r3, r3, r2
 800b974:	011b      	lsls	r3, r3, #4
 800b976:	440b      	add	r3, r1
 800b978:	3354      	adds	r3, #84	@ 0x54
 800b97a:	f04f 0200 	mov.w	r2, #0
 800b97e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 800b980:	79ba      	ldrb	r2, [r7, #6]
 800b982:	49af      	ldr	r1, [pc, #700]	@ (800bc40 <config_motors+0x654>)
 800b984:	4613      	mov	r3, r2
 800b986:	011b      	lsls	r3, r3, #4
 800b988:	1a9b      	subs	r3, r3, r2
 800b98a:	011b      	lsls	r3, r3, #4
 800b98c:	440b      	add	r3, r1
 800b98e:	3330      	adds	r3, #48	@ 0x30
 800b990:	4aad      	ldr	r2, [pc, #692]	@ (800bc48 <config_motors+0x65c>)
 800b992:	601a      	str	r2, [r3, #0]
#endif

#ifdef FL_MOTOR_ID
	motor_id = FL_MOTOR_ID - 1;
 800b994:	2305      	movs	r3, #5
 800b996:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800b998:	79ba      	ldrb	r2, [r7, #6]
 800b99a:	49a9      	ldr	r1, [pc, #676]	@ (800bc40 <config_motors+0x654>)
 800b99c:	4613      	mov	r3, r2
 800b99e:	011b      	lsls	r3, r3, #4
 800b9a0:	1a9b      	subs	r3, r3, r2
 800b9a2:	011b      	lsls	r3, r3, #4
 800b9a4:	440b      	add	r3, r1
 800b9a6:	3302      	adds	r3, #2
 800b9a8:	2201      	movs	r2, #1
 800b9aa:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800b9ac:	79ba      	ldrb	r2, [r7, #6]
 800b9ae:	4613      	mov	r3, r2
 800b9b0:	011b      	lsls	r3, r3, #4
 800b9b2:	1a9b      	subs	r3, r3, r2
 800b9b4:	011b      	lsls	r3, r3, #4
 800b9b6:	4aa2      	ldr	r2, [pc, #648]	@ (800bc40 <config_motors+0x654>)
 800b9b8:	4413      	add	r3, r2
 800b9ba:	4618      	mov	r0, r3
 800b9bc:	f7ff fcce 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 800b9c0:	79ba      	ldrb	r2, [r7, #6]
 800b9c2:	499f      	ldr	r1, [pc, #636]	@ (800bc40 <config_motors+0x654>)
 800b9c4:	4613      	mov	r3, r2
 800b9c6:	011b      	lsls	r3, r3, #4
 800b9c8:	1a9b      	subs	r3, r3, r2
 800b9ca:	011b      	lsls	r3, r3, #4
 800b9cc:	440b      	add	r3, r1
 800b9ce:	339c      	adds	r3, #156	@ 0x9c
 800b9d0:	2200      	movs	r2, #0
 800b9d2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800b9d4:	79ba      	ldrb	r2, [r7, #6]
 800b9d6:	499a      	ldr	r1, [pc, #616]	@ (800bc40 <config_motors+0x654>)
 800b9d8:	4613      	mov	r3, r2
 800b9da:	011b      	lsls	r3, r3, #4
 800b9dc:	1a9b      	subs	r3, r3, r2
 800b9de:	011b      	lsls	r3, r3, #4
 800b9e0:	440b      	add	r3, r1
 800b9e2:	33c4      	adds	r3, #196	@ 0xc4
 800b9e4:	4a99      	ldr	r2, [pc, #612]	@ (800bc4c <config_motors+0x660>)
 800b9e6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800b9e8:	79ba      	ldrb	r2, [r7, #6]
 800b9ea:	4995      	ldr	r1, [pc, #596]	@ (800bc40 <config_motors+0x654>)
 800b9ec:	4613      	mov	r3, r2
 800b9ee:	011b      	lsls	r3, r3, #4
 800b9f0:	1a9b      	subs	r3, r3, r2
 800b9f2:	011b      	lsls	r3, r3, #4
 800b9f4:	440b      	add	r3, r1
 800b9f6:	33c0      	adds	r3, #192	@ 0xc0
 800b9f8:	4a95      	ldr	r2, [pc, #596]	@ (800bc50 <config_motors+0x664>)
 800b9fa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800b9fc:	79ba      	ldrb	r2, [r7, #6]
 800b9fe:	4990      	ldr	r1, [pc, #576]	@ (800bc40 <config_motors+0x654>)
 800ba00:	4613      	mov	r3, r2
 800ba02:	011b      	lsls	r3, r3, #4
 800ba04:	1a9b      	subs	r3, r3, r2
 800ba06:	011b      	lsls	r3, r3, #4
 800ba08:	440b      	add	r3, r1
 800ba0a:	33d4      	adds	r3, #212	@ 0xd4
 800ba0c:	4a8d      	ldr	r2, [pc, #564]	@ (800bc44 <config_motors+0x658>)
 800ba0e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800ba10:	79ba      	ldrb	r2, [r7, #6]
 800ba12:	498b      	ldr	r1, [pc, #556]	@ (800bc40 <config_motors+0x654>)
 800ba14:	4613      	mov	r3, r2
 800ba16:	011b      	lsls	r3, r3, #4
 800ba18:	1a9b      	subs	r3, r3, r2
 800ba1a:	011b      	lsls	r3, r3, #4
 800ba1c:	440b      	add	r3, r1
 800ba1e:	3338      	adds	r3, #56	@ 0x38
 800ba20:	f04f 0200 	mov.w	r2, #0
 800ba24:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800ba26:	79ba      	ldrb	r2, [r7, #6]
 800ba28:	4985      	ldr	r1, [pc, #532]	@ (800bc40 <config_motors+0x654>)
 800ba2a:	4613      	mov	r3, r2
 800ba2c:	011b      	lsls	r3, r3, #4
 800ba2e:	1a9b      	subs	r3, r3, r2
 800ba30:	011b      	lsls	r3, r3, #4
 800ba32:	440b      	add	r3, r1
 800ba34:	333c      	adds	r3, #60	@ 0x3c
 800ba36:	f04f 0200 	mov.w	r2, #0
 800ba3a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800ba3c:	79ba      	ldrb	r2, [r7, #6]
 800ba3e:	4980      	ldr	r1, [pc, #512]	@ (800bc40 <config_motors+0x654>)
 800ba40:	4613      	mov	r3, r2
 800ba42:	011b      	lsls	r3, r3, #4
 800ba44:	1a9b      	subs	r3, r3, r2
 800ba46:	011b      	lsls	r3, r3, #4
 800ba48:	440b      	add	r3, r1
 800ba4a:	3340      	adds	r3, #64	@ 0x40
 800ba4c:	f04f 0200 	mov.w	r2, #0
 800ba50:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800ba52:	79ba      	ldrb	r2, [r7, #6]
 800ba54:	497a      	ldr	r1, [pc, #488]	@ (800bc40 <config_motors+0x654>)
 800ba56:	4613      	mov	r3, r2
 800ba58:	011b      	lsls	r3, r3, #4
 800ba5a:	1a9b      	subs	r3, r3, r2
 800ba5c:	011b      	lsls	r3, r3, #4
 800ba5e:	440b      	add	r3, r1
 800ba60:	3350      	adds	r3, #80	@ 0x50
 800ba62:	f04f 0200 	mov.w	r2, #0
 800ba66:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800ba68:	79ba      	ldrb	r2, [r7, #6]
 800ba6a:	4975      	ldr	r1, [pc, #468]	@ (800bc40 <config_motors+0x654>)
 800ba6c:	4613      	mov	r3, r2
 800ba6e:	011b      	lsls	r3, r3, #4
 800ba70:	1a9b      	subs	r3, r3, r2
 800ba72:	011b      	lsls	r3, r3, #4
 800ba74:	440b      	add	r3, r1
 800ba76:	3354      	adds	r3, #84	@ 0x54
 800ba78:	f04f 0200 	mov.w	r2, #0
 800ba7c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 800ba7e:	79ba      	ldrb	r2, [r7, #6]
 800ba80:	496f      	ldr	r1, [pc, #444]	@ (800bc40 <config_motors+0x654>)
 800ba82:	4613      	mov	r3, r2
 800ba84:	011b      	lsls	r3, r3, #4
 800ba86:	1a9b      	subs	r3, r3, r2
 800ba88:	011b      	lsls	r3, r3, #4
 800ba8a:	440b      	add	r3, r1
 800ba8c:	3330      	adds	r3, #48	@ 0x30
 800ba8e:	4a6e      	ldr	r2, [pc, #440]	@ (800bc48 <config_motors+0x65c>)
 800ba90:	601a      	str	r2, [r3, #0]
#endif

#ifdef BL_MOTOR_ID
	motor_id = BL_MOTOR_ID - 1;
 800ba92:	2306      	movs	r3, #6
 800ba94:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800ba96:	79ba      	ldrb	r2, [r7, #6]
 800ba98:	4969      	ldr	r1, [pc, #420]	@ (800bc40 <config_motors+0x654>)
 800ba9a:	4613      	mov	r3, r2
 800ba9c:	011b      	lsls	r3, r3, #4
 800ba9e:	1a9b      	subs	r3, r3, r2
 800baa0:	011b      	lsls	r3, r3, #4
 800baa2:	440b      	add	r3, r1
 800baa4:	3302      	adds	r3, #2
 800baa6:	2201      	movs	r2, #1
 800baa8:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800baaa:	79ba      	ldrb	r2, [r7, #6]
 800baac:	4613      	mov	r3, r2
 800baae:	011b      	lsls	r3, r3, #4
 800bab0:	1a9b      	subs	r3, r3, r2
 800bab2:	011b      	lsls	r3, r3, #4
 800bab4:	4a62      	ldr	r2, [pc, #392]	@ (800bc40 <config_motors+0x654>)
 800bab6:	4413      	add	r3, r2
 800bab8:	4618      	mov	r0, r3
 800baba:	f7ff fc4f 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 800babe:	79ba      	ldrb	r2, [r7, #6]
 800bac0:	495f      	ldr	r1, [pc, #380]	@ (800bc40 <config_motors+0x654>)
 800bac2:	4613      	mov	r3, r2
 800bac4:	011b      	lsls	r3, r3, #4
 800bac6:	1a9b      	subs	r3, r3, r2
 800bac8:	011b      	lsls	r3, r3, #4
 800baca:	440b      	add	r3, r1
 800bacc:	339c      	adds	r3, #156	@ 0x9c
 800bace:	2200      	movs	r2, #0
 800bad0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 0;
 800bad2:	79ba      	ldrb	r2, [r7, #6]
 800bad4:	495a      	ldr	r1, [pc, #360]	@ (800bc40 <config_motors+0x654>)
 800bad6:	4613      	mov	r3, r2
 800bad8:	011b      	lsls	r3, r3, #4
 800bada:	1a9b      	subs	r3, r3, r2
 800badc:	011b      	lsls	r3, r3, #4
 800bade:	440b      	add	r3, r1
 800bae0:	33b8      	adds	r3, #184	@ 0xb8
 800bae2:	f04f 0200 	mov.w	r2, #0
 800bae6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = 0;
 800bae8:	79ba      	ldrb	r2, [r7, #6]
 800baea:	4955      	ldr	r1, [pc, #340]	@ (800bc40 <config_motors+0x654>)
 800baec:	4613      	mov	r3, r2
 800baee:	011b      	lsls	r3, r3, #4
 800baf0:	1a9b      	subs	r3, r3, r2
 800baf2:	011b      	lsls	r3, r3, #4
 800baf4:	440b      	add	r3, r1
 800baf6:	33b4      	adds	r3, #180	@ 0xb4
 800baf8:	f04f 0200 	mov.w	r2, #0
 800bafc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bafe:	79ba      	ldrb	r2, [r7, #6]
 800bb00:	494f      	ldr	r1, [pc, #316]	@ (800bc40 <config_motors+0x654>)
 800bb02:	4613      	mov	r3, r2
 800bb04:	011b      	lsls	r3, r3, #4
 800bb06:	1a9b      	subs	r3, r3, r2
 800bb08:	011b      	lsls	r3, r3, #4
 800bb0a:	440b      	add	r3, r1
 800bb0c:	33c4      	adds	r3, #196	@ 0xc4
 800bb0e:	4a4f      	ldr	r2, [pc, #316]	@ (800bc4c <config_motors+0x660>)
 800bb10:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800bb12:	79ba      	ldrb	r2, [r7, #6]
 800bb14:	494a      	ldr	r1, [pc, #296]	@ (800bc40 <config_motors+0x654>)
 800bb16:	4613      	mov	r3, r2
 800bb18:	011b      	lsls	r3, r3, #4
 800bb1a:	1a9b      	subs	r3, r3, r2
 800bb1c:	011b      	lsls	r3, r3, #4
 800bb1e:	440b      	add	r3, r1
 800bb20:	33c0      	adds	r3, #192	@ 0xc0
 800bb22:	4a4b      	ldr	r2, [pc, #300]	@ (800bc50 <config_motors+0x664>)
 800bb24:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bb26:	79ba      	ldrb	r2, [r7, #6]
 800bb28:	4945      	ldr	r1, [pc, #276]	@ (800bc40 <config_motors+0x654>)
 800bb2a:	4613      	mov	r3, r2
 800bb2c:	011b      	lsls	r3, r3, #4
 800bb2e:	1a9b      	subs	r3, r3, r2
 800bb30:	011b      	lsls	r3, r3, #4
 800bb32:	440b      	add	r3, r1
 800bb34:	33d4      	adds	r3, #212	@ 0xd4
 800bb36:	4a43      	ldr	r2, [pc, #268]	@ (800bc44 <config_motors+0x658>)
 800bb38:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 800bb3a:	79ba      	ldrb	r2, [r7, #6]
 800bb3c:	4940      	ldr	r1, [pc, #256]	@ (800bc40 <config_motors+0x654>)
 800bb3e:	4613      	mov	r3, r2
 800bb40:	011b      	lsls	r3, r3, #4
 800bb42:	1a9b      	subs	r3, r3, r2
 800bb44:	011b      	lsls	r3, r3, #4
 800bb46:	440b      	add	r3, r1
 800bb48:	3368      	adds	r3, #104	@ 0x68
 800bb4a:	f04f 0200 	mov.w	r2, #0
 800bb4e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 800bb50:	79ba      	ldrb	r2, [r7, #6]
 800bb52:	493b      	ldr	r1, [pc, #236]	@ (800bc40 <config_motors+0x654>)
 800bb54:	4613      	mov	r3, r2
 800bb56:	011b      	lsls	r3, r3, #4
 800bb58:	1a9b      	subs	r3, r3, r2
 800bb5a:	011b      	lsls	r3, r3, #4
 800bb5c:	440b      	add	r3, r1
 800bb5e:	336c      	adds	r3, #108	@ 0x6c
 800bb60:	f04f 0200 	mov.w	r2, #0
 800bb64:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 800bb66:	79ba      	ldrb	r2, [r7, #6]
 800bb68:	4935      	ldr	r1, [pc, #212]	@ (800bc40 <config_motors+0x654>)
 800bb6a:	4613      	mov	r3, r2
 800bb6c:	011b      	lsls	r3, r3, #4
 800bb6e:	1a9b      	subs	r3, r3, r2
 800bb70:	011b      	lsls	r3, r3, #4
 800bb72:	440b      	add	r3, r1
 800bb74:	3370      	adds	r3, #112	@ 0x70
 800bb76:	f04f 0200 	mov.w	r2, #0
 800bb7a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 800bb7c:	79ba      	ldrb	r2, [r7, #6]
 800bb7e:	4930      	ldr	r1, [pc, #192]	@ (800bc40 <config_motors+0x654>)
 800bb80:	4613      	mov	r3, r2
 800bb82:	011b      	lsls	r3, r3, #4
 800bb84:	1a9b      	subs	r3, r3, r2
 800bb86:	011b      	lsls	r3, r3, #4
 800bb88:	440b      	add	r3, r1
 800bb8a:	3380      	adds	r3, #128	@ 0x80
 800bb8c:	f04f 0200 	mov.w	r2, #0
 800bb90:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 800bb92:	79ba      	ldrb	r2, [r7, #6]
 800bb94:	492a      	ldr	r1, [pc, #168]	@ (800bc40 <config_motors+0x654>)
 800bb96:	4613      	mov	r3, r2
 800bb98:	011b      	lsls	r3, r3, #4
 800bb9a:	1a9b      	subs	r3, r3, r2
 800bb9c:	011b      	lsls	r3, r3, #4
 800bb9e:	440b      	add	r3, r1
 800bba0:	3384      	adds	r3, #132	@ 0x84
 800bba2:	f04f 0200 	mov.w	r2, #0
 800bba6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bba8:	79ba      	ldrb	r2, [r7, #6]
 800bbaa:	4925      	ldr	r1, [pc, #148]	@ (800bc40 <config_motors+0x654>)
 800bbac:	4613      	mov	r3, r2
 800bbae:	011b      	lsls	r3, r3, #4
 800bbb0:	1a9b      	subs	r3, r3, r2
 800bbb2:	011b      	lsls	r3, r3, #4
 800bbb4:	440b      	add	r3, r1
 800bbb6:	3338      	adds	r3, #56	@ 0x38
 800bbb8:	f04f 0200 	mov.w	r2, #0
 800bbbc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bbbe:	79ba      	ldrb	r2, [r7, #6]
 800bbc0:	491f      	ldr	r1, [pc, #124]	@ (800bc40 <config_motors+0x654>)
 800bbc2:	4613      	mov	r3, r2
 800bbc4:	011b      	lsls	r3, r3, #4
 800bbc6:	1a9b      	subs	r3, r3, r2
 800bbc8:	011b      	lsls	r3, r3, #4
 800bbca:	440b      	add	r3, r1
 800bbcc:	333c      	adds	r3, #60	@ 0x3c
 800bbce:	f04f 0200 	mov.w	r2, #0
 800bbd2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bbd4:	79ba      	ldrb	r2, [r7, #6]
 800bbd6:	491a      	ldr	r1, [pc, #104]	@ (800bc40 <config_motors+0x654>)
 800bbd8:	4613      	mov	r3, r2
 800bbda:	011b      	lsls	r3, r3, #4
 800bbdc:	1a9b      	subs	r3, r3, r2
 800bbde:	011b      	lsls	r3, r3, #4
 800bbe0:	440b      	add	r3, r1
 800bbe2:	3340      	adds	r3, #64	@ 0x40
 800bbe4:	f04f 0200 	mov.w	r2, #0
 800bbe8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bbea:	79ba      	ldrb	r2, [r7, #6]
 800bbec:	4914      	ldr	r1, [pc, #80]	@ (800bc40 <config_motors+0x654>)
 800bbee:	4613      	mov	r3, r2
 800bbf0:	011b      	lsls	r3, r3, #4
 800bbf2:	1a9b      	subs	r3, r3, r2
 800bbf4:	011b      	lsls	r3, r3, #4
 800bbf6:	440b      	add	r3, r1
 800bbf8:	3350      	adds	r3, #80	@ 0x50
 800bbfa:	f04f 0200 	mov.w	r2, #0
 800bbfe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bc00:	79ba      	ldrb	r2, [r7, #6]
 800bc02:	490f      	ldr	r1, [pc, #60]	@ (800bc40 <config_motors+0x654>)
 800bc04:	4613      	mov	r3, r2
 800bc06:	011b      	lsls	r3, r3, #4
 800bc08:	1a9b      	subs	r3, r3, r2
 800bc0a:	011b      	lsls	r3, r3, #4
 800bc0c:	440b      	add	r3, r1
 800bc0e:	3354      	adds	r3, #84	@ 0x54
 800bc10:	f04f 0200 	mov.w	r2, #0
 800bc14:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 800bc16:	79ba      	ldrb	r2, [r7, #6]
 800bc18:	4909      	ldr	r1, [pc, #36]	@ (800bc40 <config_motors+0x654>)
 800bc1a:	4613      	mov	r3, r2
 800bc1c:	011b      	lsls	r3, r3, #4
 800bc1e:	1a9b      	subs	r3, r3, r2
 800bc20:	011b      	lsls	r3, r3, #4
 800bc22:	440b      	add	r3, r1
 800bc24:	3330      	adds	r3, #48	@ 0x30
 800bc26:	4a08      	ldr	r2, [pc, #32]	@ (800bc48 <config_motors+0x65c>)
 800bc28:	601a      	str	r2, [r3, #0]
#endif

#ifdef BR_MOTOR_ID

	motor_id = BR_MOTOR_ID - 1;
 800bc2a:	2307      	movs	r3, #7
 800bc2c:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800bc2e:	79ba      	ldrb	r2, [r7, #6]
 800bc30:	4903      	ldr	r1, [pc, #12]	@ (800bc40 <config_motors+0x654>)
 800bc32:	4613      	mov	r3, r2
 800bc34:	011b      	lsls	r3, r3, #4
 800bc36:	1a9b      	subs	r3, r3, r2
 800bc38:	011b      	lsls	r3, r3, #4
 800bc3a:	440b      	add	r3, r1
 800bc3c:	3302      	adds	r3, #2
 800bc3e:	e009      	b.n	800bc54 <config_motors+0x668>
 800bc40:	20002220 	.word	0x20002220
 800bc44:	43eec2d1 	.word	0x43eec2d1
 800bc48:	447a0000 	.word	0x447a0000
 800bc4c:	40c90fdb 	.word	0x40c90fdb
 800bc50:	c0c90fdb 	.word	0xc0c90fdb
 800bc54:	2201      	movs	r2, #1
 800bc56:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800bc58:	79ba      	ldrb	r2, [r7, #6]
 800bc5a:	4613      	mov	r3, r2
 800bc5c:	011b      	lsls	r3, r3, #4
 800bc5e:	1a9b      	subs	r3, r3, r2
 800bc60:	011b      	lsls	r3, r3, #4
 800bc62:	4ac3      	ldr	r2, [pc, #780]	@ (800bf70 <config_motors+0x984>)
 800bc64:	4413      	add	r3, r2
 800bc66:	4618      	mov	r0, r3
 800bc68:	f7ff fb78 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = 0;
 800bc6c:	79ba      	ldrb	r2, [r7, #6]
 800bc6e:	49c0      	ldr	r1, [pc, #768]	@ (800bf70 <config_motors+0x984>)
 800bc70:	4613      	mov	r3, r2
 800bc72:	011b      	lsls	r3, r3, #4
 800bc74:	1a9b      	subs	r3, r3, r2
 800bc76:	011b      	lsls	r3, r3, #4
 800bc78:	440b      	add	r3, r1
 800bc7a:	339c      	adds	r3, #156	@ 0x9c
 800bc7c:	2200      	movs	r2, #0
 800bc7e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ang = 0;
 800bc80:	79ba      	ldrb	r2, [r7, #6]
 800bc82:	49bb      	ldr	r1, [pc, #748]	@ (800bf70 <config_motors+0x984>)
 800bc84:	4613      	mov	r3, r2
 800bc86:	011b      	lsls	r3, r3, #4
 800bc88:	1a9b      	subs	r3, r3, r2
 800bc8a:	011b      	lsls	r3, r3, #4
 800bc8c:	440b      	add	r3, r1
 800bc8e:	33b8      	adds	r3, #184	@ 0xb8
 800bc90:	f04f 0200 	mov.w	r2, #0
 800bc94:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.min_ang = 0;
 800bc96:	79ba      	ldrb	r2, [r7, #6]
 800bc98:	49b5      	ldr	r1, [pc, #724]	@ (800bf70 <config_motors+0x984>)
 800bc9a:	4613      	mov	r3, r2
 800bc9c:	011b      	lsls	r3, r3, #4
 800bc9e:	1a9b      	subs	r3, r3, r2
 800bca0:	011b      	lsls	r3, r3, #4
 800bca2:	440b      	add	r3, r1
 800bca4:	33b4      	adds	r3, #180	@ 0xb4
 800bca6:	f04f 0200 	mov.w	r2, #0
 800bcaa:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = 2 * PI;
 800bcac:	79ba      	ldrb	r2, [r7, #6]
 800bcae:	49b0      	ldr	r1, [pc, #704]	@ (800bf70 <config_motors+0x984>)
 800bcb0:	4613      	mov	r3, r2
 800bcb2:	011b      	lsls	r3, r3, #4
 800bcb4:	1a9b      	subs	r3, r3, r2
 800bcb6:	011b      	lsls	r3, r3, #4
 800bcb8:	440b      	add	r3, r1
 800bcba:	33c4      	adds	r3, #196	@ 0xc4
 800bcbc:	4aad      	ldr	r2, [pc, #692]	@ (800bf74 <config_motors+0x988>)
 800bcbe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -2 * PI;
 800bcc0:	79ba      	ldrb	r2, [r7, #6]
 800bcc2:	49ab      	ldr	r1, [pc, #684]	@ (800bf70 <config_motors+0x984>)
 800bcc4:	4613      	mov	r3, r2
 800bcc6:	011b      	lsls	r3, r3, #4
 800bcc8:	1a9b      	subs	r3, r3, r2
 800bcca:	011b      	lsls	r3, r3, #4
 800bccc:	440b      	add	r3, r1
 800bcce:	33c0      	adds	r3, #192	@ 0xc0
 800bcd0:	4aa9      	ldr	r2, [pc, #676]	@ (800bf78 <config_motors+0x98c>)
 800bcd2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = WHEEL_CIRC;
 800bcd4:	79ba      	ldrb	r2, [r7, #6]
 800bcd6:	49a6      	ldr	r1, [pc, #664]	@ (800bf70 <config_motors+0x984>)
 800bcd8:	4613      	mov	r3, r2
 800bcda:	011b      	lsls	r3, r3, #4
 800bcdc:	1a9b      	subs	r3, r3, r2
 800bcde:	011b      	lsls	r3, r3, #4
 800bce0:	440b      	add	r3, r1
 800bce2:	33d4      	adds	r3, #212	@ 0xd4
 800bce4:	4aa5      	ldr	r2, [pc, #660]	@ (800bf7c <config_motors+0x990>)
 800bce6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = 0;
 800bce8:	79ba      	ldrb	r2, [r7, #6]
 800bcea:	49a1      	ldr	r1, [pc, #644]	@ (800bf70 <config_motors+0x984>)
 800bcec:	4613      	mov	r3, r2
 800bcee:	011b      	lsls	r3, r3, #4
 800bcf0:	1a9b      	subs	r3, r3, r2
 800bcf2:	011b      	lsls	r3, r3, #4
 800bcf4:	440b      	add	r3, r1
 800bcf6:	3368      	adds	r3, #104	@ 0x68
 800bcf8:	f04f 0200 	mov.w	r2, #0
 800bcfc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = 0;
 800bcfe:	79ba      	ldrb	r2, [r7, #6]
 800bd00:	499b      	ldr	r1, [pc, #620]	@ (800bf70 <config_motors+0x984>)
 800bd02:	4613      	mov	r3, r2
 800bd04:	011b      	lsls	r3, r3, #4
 800bd06:	1a9b      	subs	r3, r3, r2
 800bd08:	011b      	lsls	r3, r3, #4
 800bd0a:	440b      	add	r3, r1
 800bd0c:	336c      	adds	r3, #108	@ 0x6c
 800bd0e:	f04f 0200 	mov.w	r2, #0
 800bd12:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = 0;
 800bd14:	79ba      	ldrb	r2, [r7, #6]
 800bd16:	4996      	ldr	r1, [pc, #600]	@ (800bf70 <config_motors+0x984>)
 800bd18:	4613      	mov	r3, r2
 800bd1a:	011b      	lsls	r3, r3, #4
 800bd1c:	1a9b      	subs	r3, r3, r2
 800bd1e:	011b      	lsls	r3, r3, #4
 800bd20:	440b      	add	r3, r1
 800bd22:	3370      	adds	r3, #112	@ 0x70
 800bd24:	f04f 0200 	mov.w	r2, #0
 800bd28:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = 0;
 800bd2a:	79ba      	ldrb	r2, [r7, #6]
 800bd2c:	4990      	ldr	r1, [pc, #576]	@ (800bf70 <config_motors+0x984>)
 800bd2e:	4613      	mov	r3, r2
 800bd30:	011b      	lsls	r3, r3, #4
 800bd32:	1a9b      	subs	r3, r3, r2
 800bd34:	011b      	lsls	r3, r3, #4
 800bd36:	440b      	add	r3, r1
 800bd38:	3380      	adds	r3, #128	@ 0x80
 800bd3a:	f04f 0200 	mov.w	r2, #0
 800bd3e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = 0;
 800bd40:	79ba      	ldrb	r2, [r7, #6]
 800bd42:	498b      	ldr	r1, [pc, #556]	@ (800bf70 <config_motors+0x984>)
 800bd44:	4613      	mov	r3, r2
 800bd46:	011b      	lsls	r3, r3, #4
 800bd48:	1a9b      	subs	r3, r3, r2
 800bd4a:	011b      	lsls	r3, r3, #4
 800bd4c:	440b      	add	r3, r1
 800bd4e:	3384      	adds	r3, #132	@ 0x84
 800bd50:	f04f 0200 	mov.w	r2, #0
 800bd54:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = CHASSIS_KP;
 800bd56:	79ba      	ldrb	r2, [r7, #6]
 800bd58:	4985      	ldr	r1, [pc, #532]	@ (800bf70 <config_motors+0x984>)
 800bd5a:	4613      	mov	r3, r2
 800bd5c:	011b      	lsls	r3, r3, #4
 800bd5e:	1a9b      	subs	r3, r3, r2
 800bd60:	011b      	lsls	r3, r3, #4
 800bd62:	440b      	add	r3, r1
 800bd64:	3338      	adds	r3, #56	@ 0x38
 800bd66:	f04f 0200 	mov.w	r2, #0
 800bd6a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = CHASSIS_KI;
 800bd6c:	79ba      	ldrb	r2, [r7, #6]
 800bd6e:	4980      	ldr	r1, [pc, #512]	@ (800bf70 <config_motors+0x984>)
 800bd70:	4613      	mov	r3, r2
 800bd72:	011b      	lsls	r3, r3, #4
 800bd74:	1a9b      	subs	r3, r3, r2
 800bd76:	011b      	lsls	r3, r3, #4
 800bd78:	440b      	add	r3, r1
 800bd7a:	333c      	adds	r3, #60	@ 0x3c
 800bd7c:	f04f 0200 	mov.w	r2, #0
 800bd80:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = CHASSIS_KD;
 800bd82:	79ba      	ldrb	r2, [r7, #6]
 800bd84:	497a      	ldr	r1, [pc, #488]	@ (800bf70 <config_motors+0x984>)
 800bd86:	4613      	mov	r3, r2
 800bd88:	011b      	lsls	r3, r3, #4
 800bd8a:	1a9b      	subs	r3, r3, r2
 800bd8c:	011b      	lsls	r3, r3, #4
 800bd8e:	440b      	add	r3, r1
 800bd90:	3340      	adds	r3, #64	@ 0x40
 800bd92:	f04f 0200 	mov.w	r2, #0
 800bd96:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = CHASSIS_INT_MAX;
 800bd98:	79ba      	ldrb	r2, [r7, #6]
 800bd9a:	4975      	ldr	r1, [pc, #468]	@ (800bf70 <config_motors+0x984>)
 800bd9c:	4613      	mov	r3, r2
 800bd9e:	011b      	lsls	r3, r3, #4
 800bda0:	1a9b      	subs	r3, r3, r2
 800bda2:	011b      	lsls	r3, r3, #4
 800bda4:	440b      	add	r3, r1
 800bda6:	3350      	adds	r3, #80	@ 0x50
 800bda8:	f04f 0200 	mov.w	r2, #0
 800bdac:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = CHASSIS_MAX_CURRENT;
 800bdae:	79ba      	ldrb	r2, [r7, #6]
 800bdb0:	496f      	ldr	r1, [pc, #444]	@ (800bf70 <config_motors+0x984>)
 800bdb2:	4613      	mov	r3, r2
 800bdb4:	011b      	lsls	r3, r3, #4
 800bdb6:	1a9b      	subs	r3, r3, r2
 800bdb8:	011b      	lsls	r3, r3, #4
 800bdba:	440b      	add	r3, r1
 800bdbc:	3354      	adds	r3, #84	@ 0x54
 800bdbe:	f04f 0200 	mov.w	r2, #0
 800bdc2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].torqueRatio = 1000;
 800bdc4:	79ba      	ldrb	r2, [r7, #6]
 800bdc6:	496a      	ldr	r1, [pc, #424]	@ (800bf70 <config_motors+0x984>)
 800bdc8:	4613      	mov	r3, r2
 800bdca:	011b      	lsls	r3, r3, #4
 800bdcc:	1a9b      	subs	r3, r3, r2
 800bdce:	011b      	lsls	r3, r3, #4
 800bdd0:	440b      	add	r3, r1
 800bdd2:	3330      	adds	r3, #48	@ 0x30
 800bdd4:	4a6a      	ldr	r2, [pc, #424]	@ (800bf80 <config_motors+0x994>)
 800bdd6:	601a      	str	r2, [r3, #0]
#endif

#ifdef LFRICTION_MOTOR_ID
	motor_id = LFRICTION_MOTOR_ID - 1;
 800bdd8:	230f      	movs	r3, #15
 800bdda:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800bddc:	79ba      	ldrb	r2, [r7, #6]
 800bdde:	4964      	ldr	r1, [pc, #400]	@ (800bf70 <config_motors+0x984>)
 800bde0:	4613      	mov	r3, r2
 800bde2:	011b      	lsls	r3, r3, #4
 800bde4:	1a9b      	subs	r3, r3, r2
 800bde6:	011b      	lsls	r3, r3, #4
 800bde8:	440b      	add	r3, r1
 800bdea:	3302      	adds	r3, #2
 800bdec:	2204      	movs	r2, #4
 800bdee:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800bdf0:	79ba      	ldrb	r2, [r7, #6]
 800bdf2:	4613      	mov	r3, r2
 800bdf4:	011b      	lsls	r3, r3, #4
 800bdf6:	1a9b      	subs	r3, r3, r2
 800bdf8:	011b      	lsls	r3, r3, #4
 800bdfa:	4a5d      	ldr	r2, [pc, #372]	@ (800bf70 <config_motors+0x984>)
 800bdfc:	4413      	add	r3, r2
 800bdfe:	4618      	mov	r0, r3
 800be00:	f7ff faac 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.gearbox_ratio = M3508_GEARBOX_RATIO;
 800be04:	79ba      	ldrb	r2, [r7, #6]
 800be06:	495a      	ldr	r1, [pc, #360]	@ (800bf70 <config_motors+0x984>)
 800be08:	4613      	mov	r3, r2
 800be0a:	011b      	lsls	r3, r3, #4
 800be0c:	1a9b      	subs	r3, r3, r2
 800be0e:	011b      	lsls	r3, r3, #4
 800be10:	440b      	add	r3, r1
 800be12:	33c8      	adds	r3, #200	@ 0xc8
 800be14:	4a5b      	ldr	r2, [pc, #364]	@ (800bf84 <config_motors+0x998>)
 800be16:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800be18:	79ba      	ldrb	r2, [r7, #6]
 800be1a:	4955      	ldr	r1, [pc, #340]	@ (800bf70 <config_motors+0x984>)
 800be1c:	4613      	mov	r3, r2
 800be1e:	011b      	lsls	r3, r3, #4
 800be20:	1a9b      	subs	r3, r3, r2
 800be22:	011b      	lsls	r3, r3, #4
 800be24:	440b      	add	r3, r1
 800be26:	338c      	adds	r3, #140	@ 0x8c
 800be28:	4a57      	ldr	r2, [pc, #348]	@ (800bf88 <config_motors+0x99c>)
 800be2a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800be2c:	79ba      	ldrb	r2, [r7, #6]
 800be2e:	4950      	ldr	r1, [pc, #320]	@ (800bf70 <config_motors+0x984>)
 800be30:	4613      	mov	r3, r2
 800be32:	011b      	lsls	r3, r3, #4
 800be34:	1a9b      	subs	r3, r3, r2
 800be36:	011b      	lsls	r3, r3, #4
 800be38:	440b      	add	r3, r1
 800be3a:	3338      	adds	r3, #56	@ 0x38
 800be3c:	4a53      	ldr	r2, [pc, #332]	@ (800bf8c <config_motors+0x9a0>)
 800be3e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800be40:	79ba      	ldrb	r2, [r7, #6]
 800be42:	494b      	ldr	r1, [pc, #300]	@ (800bf70 <config_motors+0x984>)
 800be44:	4613      	mov	r3, r2
 800be46:	011b      	lsls	r3, r3, #4
 800be48:	1a9b      	subs	r3, r3, r2
 800be4a:	011b      	lsls	r3, r3, #4
 800be4c:	440b      	add	r3, r1
 800be4e:	333c      	adds	r3, #60	@ 0x3c
 800be50:	4a4f      	ldr	r2, [pc, #316]	@ (800bf90 <config_motors+0x9a4>)
 800be52:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800be54:	79ba      	ldrb	r2, [r7, #6]
 800be56:	4946      	ldr	r1, [pc, #280]	@ (800bf70 <config_motors+0x984>)
 800be58:	4613      	mov	r3, r2
 800be5a:	011b      	lsls	r3, r3, #4
 800be5c:	1a9b      	subs	r3, r3, r2
 800be5e:	011b      	lsls	r3, r3, #4
 800be60:	440b      	add	r3, r1
 800be62:	3340      	adds	r3, #64	@ 0x40
 800be64:	f04f 0200 	mov.w	r2, #0
 800be68:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800be6a:	79ba      	ldrb	r2, [r7, #6]
 800be6c:	4940      	ldr	r1, [pc, #256]	@ (800bf70 <config_motors+0x984>)
 800be6e:	4613      	mov	r3, r2
 800be70:	011b      	lsls	r3, r3, #4
 800be72:	1a9b      	subs	r3, r3, r2
 800be74:	011b      	lsls	r3, r3, #4
 800be76:	440b      	add	r3, r1
 800be78:	3350      	adds	r3, #80	@ 0x50
 800be7a:	4a46      	ldr	r2, [pc, #280]	@ (800bf94 <config_motors+0x9a8>)
 800be7c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800be7e:	79ba      	ldrb	r2, [r7, #6]
 800be80:	493b      	ldr	r1, [pc, #236]	@ (800bf70 <config_motors+0x984>)
 800be82:	4613      	mov	r3, r2
 800be84:	011b      	lsls	r3, r3, #4
 800be86:	1a9b      	subs	r3, r3, r2
 800be88:	011b      	lsls	r3, r3, #4
 800be8a:	440b      	add	r3, r1
 800be8c:	3354      	adds	r3, #84	@ 0x54
 800be8e:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800be92:	601a      	str	r2, [r3, #0]
#endif

#ifdef RFRICTION_MOTOR_ID
	motor_id = RFRICTION_MOTOR_ID - 1;
 800be94:	230e      	movs	r3, #14
 800be96:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_M3508_NGEARBOX;
 800be98:	79ba      	ldrb	r2, [r7, #6]
 800be9a:	4935      	ldr	r1, [pc, #212]	@ (800bf70 <config_motors+0x984>)
 800be9c:	4613      	mov	r3, r2
 800be9e:	011b      	lsls	r3, r3, #4
 800bea0:	1a9b      	subs	r3, r3, r2
 800bea2:	011b      	lsls	r3, r3, #4
 800bea4:	440b      	add	r3, r1
 800bea6:	3302      	adds	r3, #2
 800bea8:	2204      	movs	r2, #4
 800beaa:	701a      	strb	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.physical_max = M3508_MAX_RPM;
 800beac:	79ba      	ldrb	r2, [r7, #6]
 800beae:	4930      	ldr	r1, [pc, #192]	@ (800bf70 <config_motors+0x984>)
 800beb0:	4613      	mov	r3, r2
 800beb2:	011b      	lsls	r3, r3, #4
 800beb4:	1a9b      	subs	r3, r3, r2
 800beb6:	011b      	lsls	r3, r3, #4
 800beb8:	440b      	add	r3, r1
 800beba:	338c      	adds	r3, #140	@ 0x8c
 800bebc:	4a32      	ldr	r2, [pc, #200]	@ (800bf88 <config_motors+0x99c>)
 800bebe:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FRICTION_KP;
 800bec0:	79ba      	ldrb	r2, [r7, #6]
 800bec2:	492b      	ldr	r1, [pc, #172]	@ (800bf70 <config_motors+0x984>)
 800bec4:	4613      	mov	r3, r2
 800bec6:	011b      	lsls	r3, r3, #4
 800bec8:	1a9b      	subs	r3, r3, r2
 800beca:	011b      	lsls	r3, r3, #4
 800becc:	440b      	add	r3, r1
 800bece:	3338      	adds	r3, #56	@ 0x38
 800bed0:	4a2e      	ldr	r2, [pc, #184]	@ (800bf8c <config_motors+0x9a0>)
 800bed2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FRICTION_KI;
 800bed4:	79ba      	ldrb	r2, [r7, #6]
 800bed6:	4926      	ldr	r1, [pc, #152]	@ (800bf70 <config_motors+0x984>)
 800bed8:	4613      	mov	r3, r2
 800beda:	011b      	lsls	r3, r3, #4
 800bedc:	1a9b      	subs	r3, r3, r2
 800bede:	011b      	lsls	r3, r3, #4
 800bee0:	440b      	add	r3, r1
 800bee2:	333c      	adds	r3, #60	@ 0x3c
 800bee4:	4a2a      	ldr	r2, [pc, #168]	@ (800bf90 <config_motors+0x9a4>)
 800bee6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FRICTION_KD;
 800bee8:	79ba      	ldrb	r2, [r7, #6]
 800beea:	4921      	ldr	r1, [pc, #132]	@ (800bf70 <config_motors+0x984>)
 800beec:	4613      	mov	r3, r2
 800beee:	011b      	lsls	r3, r3, #4
 800bef0:	1a9b      	subs	r3, r3, r2
 800bef2:	011b      	lsls	r3, r3, #4
 800bef4:	440b      	add	r3, r1
 800bef6:	3340      	adds	r3, #64	@ 0x40
 800bef8:	f04f 0200 	mov.w	r2, #0
 800befc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FRICTION_MAX_INT;
 800befe:	79ba      	ldrb	r2, [r7, #6]
 800bf00:	491b      	ldr	r1, [pc, #108]	@ (800bf70 <config_motors+0x984>)
 800bf02:	4613      	mov	r3, r2
 800bf04:	011b      	lsls	r3, r3, #4
 800bf06:	1a9b      	subs	r3, r3, r2
 800bf08:	011b      	lsls	r3, r3, #4
 800bf0a:	440b      	add	r3, r1
 800bf0c:	3350      	adds	r3, #80	@ 0x50
 800bf0e:	4a21      	ldr	r2, [pc, #132]	@ (800bf94 <config_motors+0x9a8>)
 800bf10:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FRICTION_MAX_CURRENT;
 800bf12:	79ba      	ldrb	r2, [r7, #6]
 800bf14:	4916      	ldr	r1, [pc, #88]	@ (800bf70 <config_motors+0x984>)
 800bf16:	4613      	mov	r3, r2
 800bf18:	011b      	lsls	r3, r3, #4
 800bf1a:	1a9b      	subs	r3, r3, r2
 800bf1c:	011b      	lsls	r3, r3, #4
 800bf1e:	440b      	add	r3, r1
 800bf20:	3354      	adds	r3, #84	@ 0x54
 800bf22:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800bf26:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.physical_max = M3508_MAX_OUTPUT;
 800bf28:	79ba      	ldrb	r2, [r7, #6]
 800bf2a:	4911      	ldr	r1, [pc, #68]	@ (800bf70 <config_motors+0x984>)
 800bf2c:	4613      	mov	r3, r2
 800bf2e:	011b      	lsls	r3, r3, #4
 800bf30:	1a9b      	subs	r3, r3, r2
 800bf32:	011b      	lsls	r3, r3, #4
 800bf34:	440b      	add	r3, r1
 800bf36:	335c      	adds	r3, #92	@ 0x5c
 800bf38:	f04f 428d 	mov.w	r2, #1182793728	@ 0x46800000
 800bf3c:	601a      	str	r2, [r3, #0]
#endif

#ifdef FEEDER_MOTOR_ID
	motor_id = FEEDER_MOTOR_ID - 1;
 800bf3e:	2310      	movs	r3, #16
 800bf40:	71bb      	strb	r3, [r7, #6]
#ifdef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M3508_ANGLE;
#endif
#ifndef ANGLE_FEEDER
	g_can_motors[motor_id].motor_type = TYPE_M2006;
 800bf42:	79ba      	ldrb	r2, [r7, #6]
 800bf44:	490a      	ldr	r1, [pc, #40]	@ (800bf70 <config_motors+0x984>)
 800bf46:	4613      	mov	r3, r2
 800bf48:	011b      	lsls	r3, r3, #4
 800bf4a:	1a9b      	subs	r3, r3, r2
 800bf4c:	011b      	lsls	r3, r3, #4
 800bf4e:	440b      	add	r3, r1
 800bf50:	3302      	adds	r3, #2
 800bf52:	2202      	movs	r2, #2
 800bf54:	701a      	strb	r2, [r3, #0]
#endif
	set_motor_config(&g_can_motors[motor_id]);
 800bf56:	79ba      	ldrb	r2, [r7, #6]
 800bf58:	4613      	mov	r3, r2
 800bf5a:	011b      	lsls	r3, r3, #4
 800bf5c:	1a9b      	subs	r3, r3, r2
 800bf5e:	011b      	lsls	r3, r3, #4
 800bf60:	4a03      	ldr	r2, [pc, #12]	@ (800bf70 <config_motors+0x984>)
 800bf62:	4413      	add	r3, r2
 800bf64:	4618      	mov	r0, r3
 800bf66:	f7ff f9f9 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.phy_max_ang = PI;
 800bf6a:	79ba      	ldrb	r2, [r7, #6]
 800bf6c:	e014      	b.n	800bf98 <config_motors+0x9ac>
 800bf6e:	bf00      	nop
 800bf70:	20002220 	.word	0x20002220
 800bf74:	40c90fdb 	.word	0x40c90fdb
 800bf78:	c0c90fdb 	.word	0xc0c90fdb
 800bf7c:	43eec2d1 	.word	0x43eec2d1
 800bf80:	447a0000 	.word	0x447a0000
 800bf84:	4199999a 	.word	0x4199999a
 800bf88:	460fc000 	.word	0x460fc000
 800bf8c:	40a00000 	.word	0x40a00000
 800bf90:	3b03126f 	.word	0x3b03126f
 800bf94:	461c4000 	.word	0x461c4000
 800bf98:	49c0      	ldr	r1, [pc, #768]	@ (800c29c <config_motors+0xcb0>)
 800bf9a:	4613      	mov	r3, r2
 800bf9c:	011b      	lsls	r3, r3, #4
 800bf9e:	1a9b      	subs	r3, r3, r2
 800bfa0:	011b      	lsls	r3, r3, #4
 800bfa2:	440b      	add	r3, r1
 800bfa4:	33c4      	adds	r3, #196	@ 0xc4
 800bfa6:	4abe      	ldr	r2, [pc, #760]	@ (800c2a0 <config_motors+0xcb4>)
 800bfa8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = -PI;
 800bfaa:	79ba      	ldrb	r2, [r7, #6]
 800bfac:	49bb      	ldr	r1, [pc, #748]	@ (800c29c <config_motors+0xcb0>)
 800bfae:	4613      	mov	r3, r2
 800bfb0:	011b      	lsls	r3, r3, #4
 800bfb2:	1a9b      	subs	r3, r3, r2
 800bfb4:	011b      	lsls	r3, r3, #4
 800bfb6:	440b      	add	r3, r1
 800bfb8:	33c0      	adds	r3, #192	@ 0xc0
 800bfba:	4aba      	ldr	r2, [pc, #744]	@ (800c2a4 <config_motors+0xcb8>)
 800bfbc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 800bfbe:	79ba      	ldrb	r2, [r7, #6]
 800bfc0:	49b6      	ldr	r1, [pc, #728]	@ (800c29c <config_motors+0xcb0>)
 800bfc2:	4613      	mov	r3, r2
 800bfc4:	011b      	lsls	r3, r3, #4
 800bfc6:	1a9b      	subs	r3, r3, r2
 800bfc8:	011b      	lsls	r3, r3, #4
 800bfca:	440b      	add	r3, r1
 800bfcc:	33d4      	adds	r3, #212	@ 0xd4
 800bfce:	f04f 0200 	mov.w	r2, #0
 800bfd2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = FEEDER_ANGLE_KP;
 800bfd4:	79ba      	ldrb	r2, [r7, #6]
 800bfd6:	49b1      	ldr	r1, [pc, #708]	@ (800c29c <config_motors+0xcb0>)
 800bfd8:	4613      	mov	r3, r2
 800bfda:	011b      	lsls	r3, r3, #4
 800bfdc:	1a9b      	subs	r3, r3, r2
 800bfde:	011b      	lsls	r3, r3, #4
 800bfe0:	440b      	add	r3, r1
 800bfe2:	3368      	adds	r3, #104	@ 0x68
 800bfe4:	4ab0      	ldr	r2, [pc, #704]	@ (800c2a8 <config_motors+0xcbc>)
 800bfe6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = FEEDER_ANGLE_KI;
 800bfe8:	79ba      	ldrb	r2, [r7, #6]
 800bfea:	49ac      	ldr	r1, [pc, #688]	@ (800c29c <config_motors+0xcb0>)
 800bfec:	4613      	mov	r3, r2
 800bfee:	011b      	lsls	r3, r3, #4
 800bff0:	1a9b      	subs	r3, r3, r2
 800bff2:	011b      	lsls	r3, r3, #4
 800bff4:	440b      	add	r3, r1
 800bff6:	336c      	adds	r3, #108	@ 0x6c
 800bff8:	f04f 0200 	mov.w	r2, #0
 800bffc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = FEEDER_ANGLE_KD;
 800bffe:	79ba      	ldrb	r2, [r7, #6]
 800c000:	49a6      	ldr	r1, [pc, #664]	@ (800c29c <config_motors+0xcb0>)
 800c002:	4613      	mov	r3, r2
 800c004:	011b      	lsls	r3, r3, #4
 800c006:	1a9b      	subs	r3, r3, r2
 800c008:	011b      	lsls	r3, r3, #4
 800c00a:	440b      	add	r3, r1
 800c00c:	3370      	adds	r3, #112	@ 0x70
 800c00e:	f04f 0200 	mov.w	r2, #0
 800c012:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = FEEDER_ANGLE_INT_MAX;
 800c014:	79ba      	ldrb	r2, [r7, #6]
 800c016:	49a1      	ldr	r1, [pc, #644]	@ (800c29c <config_motors+0xcb0>)
 800c018:	4613      	mov	r3, r2
 800c01a:	011b      	lsls	r3, r3, #4
 800c01c:	1a9b      	subs	r3, r3, r2
 800c01e:	011b      	lsls	r3, r3, #4
 800c020:	440b      	add	r3, r1
 800c022:	3380      	adds	r3, #128	@ 0x80
 800c024:	f04f 0200 	mov.w	r2, #0
 800c028:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = FEEDER_MAX_RPM;
 800c02a:	79ba      	ldrb	r2, [r7, #6]
 800c02c:	499b      	ldr	r1, [pc, #620]	@ (800c29c <config_motors+0xcb0>)
 800c02e:	4613      	mov	r3, r2
 800c030:	011b      	lsls	r3, r3, #4
 800c032:	1a9b      	subs	r3, r3, r2
 800c034:	011b      	lsls	r3, r3, #4
 800c036:	440b      	add	r3, r1
 800c038:	3384      	adds	r3, #132	@ 0x84
 800c03a:	4a9c      	ldr	r2, [pc, #624]	@ (800c2ac <config_motors+0xcc0>)
 800c03c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = FEEDER_KP;
 800c03e:	79ba      	ldrb	r2, [r7, #6]
 800c040:	4996      	ldr	r1, [pc, #600]	@ (800c29c <config_motors+0xcb0>)
 800c042:	4613      	mov	r3, r2
 800c044:	011b      	lsls	r3, r3, #4
 800c046:	1a9b      	subs	r3, r3, r2
 800c048:	011b      	lsls	r3, r3, #4
 800c04a:	440b      	add	r3, r1
 800c04c:	3338      	adds	r3, #56	@ 0x38
 800c04e:	4a98      	ldr	r2, [pc, #608]	@ (800c2b0 <config_motors+0xcc4>)
 800c050:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = FEEDER_KI;
 800c052:	79ba      	ldrb	r2, [r7, #6]
 800c054:	4991      	ldr	r1, [pc, #580]	@ (800c29c <config_motors+0xcb0>)
 800c056:	4613      	mov	r3, r2
 800c058:	011b      	lsls	r3, r3, #4
 800c05a:	1a9b      	subs	r3, r3, r2
 800c05c:	011b      	lsls	r3, r3, #4
 800c05e:	440b      	add	r3, r1
 800c060:	333c      	adds	r3, #60	@ 0x3c
 800c062:	4a94      	ldr	r2, [pc, #592]	@ (800c2b4 <config_motors+0xcc8>)
 800c064:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = FEEDER_KD;
 800c066:	79ba      	ldrb	r2, [r7, #6]
 800c068:	498c      	ldr	r1, [pc, #560]	@ (800c29c <config_motors+0xcb0>)
 800c06a:	4613      	mov	r3, r2
 800c06c:	011b      	lsls	r3, r3, #4
 800c06e:	1a9b      	subs	r3, r3, r2
 800c070:	011b      	lsls	r3, r3, #4
 800c072:	440b      	add	r3, r1
 800c074:	3340      	adds	r3, #64	@ 0x40
 800c076:	4a90      	ldr	r2, [pc, #576]	@ (800c2b8 <config_motors+0xccc>)
 800c078:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = FEEDER_MAX_INT;
 800c07a:	79ba      	ldrb	r2, [r7, #6]
 800c07c:	4987      	ldr	r1, [pc, #540]	@ (800c29c <config_motors+0xcb0>)
 800c07e:	4613      	mov	r3, r2
 800c080:	011b      	lsls	r3, r3, #4
 800c082:	1a9b      	subs	r3, r3, r2
 800c084:	011b      	lsls	r3, r3, #4
 800c086:	440b      	add	r3, r1
 800c088:	3350      	adds	r3, #80	@ 0x50
 800c08a:	4a8c      	ldr	r2, [pc, #560]	@ (800c2bc <config_motors+0xcd0>)
 800c08c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = FEEDER_MAX_CURRENT;
 800c08e:	79ba      	ldrb	r2, [r7, #6]
 800c090:	4982      	ldr	r1, [pc, #520]	@ (800c29c <config_motors+0xcb0>)
 800c092:	4613      	mov	r3, r2
 800c094:	011b      	lsls	r3, r3, #4
 800c096:	1a9b      	subs	r3, r3, r2
 800c098:	011b      	lsls	r3, r3, #4
 800c09a:	440b      	add	r3, r1
 800c09c:	3354      	adds	r3, #84	@ 0x54
 800c09e:	4a87      	ldr	r2, [pc, #540]	@ (800c2bc <config_motors+0xcd0>)
 800c0a0:	601a      	str	r2, [r3, #0]
#endif

#ifdef PITCH_MOTOR_ID
	motor_id = PITCH_MOTOR_ID - 1;
 800c0a2:	2311      	movs	r3, #17
 800c0a4:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800c0a6:	79ba      	ldrb	r2, [r7, #6]
 800c0a8:	497c      	ldr	r1, [pc, #496]	@ (800c29c <config_motors+0xcb0>)
 800c0aa:	4613      	mov	r3, r2
 800c0ac:	011b      	lsls	r3, r3, #4
 800c0ae:	1a9b      	subs	r3, r3, r2
 800c0b0:	011b      	lsls	r3, r3, #4
 800c0b2:	440b      	add	r3, r1
 800c0b4:	3302      	adds	r3, #2
 800c0b6:	2201      	movs	r2, #1
 800c0b8:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800c0ba:	79ba      	ldrb	r2, [r7, #6]
 800c0bc:	4613      	mov	r3, r2
 800c0be:	011b      	lsls	r3, r3, #4
 800c0c0:	1a9b      	subs	r3, r3, r2
 800c0c2:	011b      	lsls	r3, r3, #4
 800c0c4:	4a75      	ldr	r2, [pc, #468]	@ (800c29c <config_motors+0xcb0>)
 800c0c6:	4413      	add	r3, r2
 800c0c8:	4618      	mov	r0, r3
 800c0ca:	f7ff f947 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = PITCH_CENTER;
 800c0ce:	79ba      	ldrb	r2, [r7, #6]
 800c0d0:	4972      	ldr	r1, [pc, #456]	@ (800c29c <config_motors+0xcb0>)
 800c0d2:	4613      	mov	r3, r2
 800c0d4:	011b      	lsls	r3, r3, #4
 800c0d6:	1a9b      	subs	r3, r3, r2
 800c0d8:	011b      	lsls	r3, r3, #4
 800c0da:	440b      	add	r3, r1
 800c0dc:	339c      	adds	r3, #156	@ 0x9c
 800c0de:	f44f 628c 	mov.w	r2, #1120	@ 0x460
 800c0e2:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = PITCH_MAX_ANG;
 800c0e4:	79ba      	ldrb	r2, [r7, #6]
 800c0e6:	496d      	ldr	r1, [pc, #436]	@ (800c29c <config_motors+0xcb0>)
 800c0e8:	4613      	mov	r3, r2
 800c0ea:	011b      	lsls	r3, r3, #4
 800c0ec:	1a9b      	subs	r3, r3, r2
 800c0ee:	011b      	lsls	r3, r3, #4
 800c0f0:	440b      	add	r3, r1
 800c0f2:	33c4      	adds	r3, #196	@ 0xc4
 800c0f4:	4a72      	ldr	r2, [pc, #456]	@ (800c2c0 <config_motors+0xcd4>)
 800c0f6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = PITCH_MIN_ANG;
 800c0f8:	79ba      	ldrb	r2, [r7, #6]
 800c0fa:	4968      	ldr	r1, [pc, #416]	@ (800c29c <config_motors+0xcb0>)
 800c0fc:	4613      	mov	r3, r2
 800c0fe:	011b      	lsls	r3, r3, #4
 800c100:	1a9b      	subs	r3, r3, r2
 800c102:	011b      	lsls	r3, r3, #4
 800c104:	440b      	add	r3, r1
 800c106:	33c0      	adds	r3, #192	@ 0xc0
 800c108:	4a6e      	ldr	r2, [pc, #440]	@ (800c2c4 <config_motors+0xcd8>)
 800c10a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 800c10c:	79ba      	ldrb	r2, [r7, #6]
 800c10e:	4963      	ldr	r1, [pc, #396]	@ (800c29c <config_motors+0xcb0>)
 800c110:	4613      	mov	r3, r2
 800c112:	011b      	lsls	r3, r3, #4
 800c114:	1a9b      	subs	r3, r3, r2
 800c116:	011b      	lsls	r3, r3, #4
 800c118:	440b      	add	r3, r1
 800c11a:	33d4      	adds	r3, #212	@ 0xd4
 800c11c:	f04f 0200 	mov.w	r2, #0
 800c120:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = PITCH_ANGLE_KP;
 800c122:	79ba      	ldrb	r2, [r7, #6]
 800c124:	495d      	ldr	r1, [pc, #372]	@ (800c29c <config_motors+0xcb0>)
 800c126:	4613      	mov	r3, r2
 800c128:	011b      	lsls	r3, r3, #4
 800c12a:	1a9b      	subs	r3, r3, r2
 800c12c:	011b      	lsls	r3, r3, #4
 800c12e:	440b      	add	r3, r1
 800c130:	3368      	adds	r3, #104	@ 0x68
 800c132:	f04f 0200 	mov.w	r2, #0
 800c136:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = PITCH_ANGLE_KI;
 800c138:	79ba      	ldrb	r2, [r7, #6]
 800c13a:	4958      	ldr	r1, [pc, #352]	@ (800c29c <config_motors+0xcb0>)
 800c13c:	4613      	mov	r3, r2
 800c13e:	011b      	lsls	r3, r3, #4
 800c140:	1a9b      	subs	r3, r3, r2
 800c142:	011b      	lsls	r3, r3, #4
 800c144:	440b      	add	r3, r1
 800c146:	336c      	adds	r3, #108	@ 0x6c
 800c148:	f04f 0200 	mov.w	r2, #0
 800c14c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = PITCH_ANGLE_KD;
 800c14e:	79ba      	ldrb	r2, [r7, #6]
 800c150:	4952      	ldr	r1, [pc, #328]	@ (800c29c <config_motors+0xcb0>)
 800c152:	4613      	mov	r3, r2
 800c154:	011b      	lsls	r3, r3, #4
 800c156:	1a9b      	subs	r3, r3, r2
 800c158:	011b      	lsls	r3, r3, #4
 800c15a:	440b      	add	r3, r1
 800c15c:	3370      	adds	r3, #112	@ 0x70
 800c15e:	f04f 0200 	mov.w	r2, #0
 800c162:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = PITCH_ANGLE_INT_MAX;
 800c164:	79ba      	ldrb	r2, [r7, #6]
 800c166:	494d      	ldr	r1, [pc, #308]	@ (800c29c <config_motors+0xcb0>)
 800c168:	4613      	mov	r3, r2
 800c16a:	011b      	lsls	r3, r3, #4
 800c16c:	1a9b      	subs	r3, r3, r2
 800c16e:	011b      	lsls	r3, r3, #4
 800c170:	440b      	add	r3, r1
 800c172:	3380      	adds	r3, #128	@ 0x80
 800c174:	4a54      	ldr	r2, [pc, #336]	@ (800c2c8 <config_motors+0xcdc>)
 800c176:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = PITCH_MAX_RPM;
 800c178:	79ba      	ldrb	r2, [r7, #6]
 800c17a:	4948      	ldr	r1, [pc, #288]	@ (800c29c <config_motors+0xcb0>)
 800c17c:	4613      	mov	r3, r2
 800c17e:	011b      	lsls	r3, r3, #4
 800c180:	1a9b      	subs	r3, r3, r2
 800c182:	011b      	lsls	r3, r3, #4
 800c184:	440b      	add	r3, r1
 800c186:	3384      	adds	r3, #132	@ 0x84
 800c188:	f04f 4282 	mov.w	r2, #1090519040	@ 0x41000000
 800c18c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = PITCHRPM_KP;
 800c18e:	79ba      	ldrb	r2, [r7, #6]
 800c190:	4942      	ldr	r1, [pc, #264]	@ (800c29c <config_motors+0xcb0>)
 800c192:	4613      	mov	r3, r2
 800c194:	011b      	lsls	r3, r3, #4
 800c196:	1a9b      	subs	r3, r3, r2
 800c198:	011b      	lsls	r3, r3, #4
 800c19a:	440b      	add	r3, r1
 800c19c:	3338      	adds	r3, #56	@ 0x38
 800c19e:	4a4b      	ldr	r2, [pc, #300]	@ (800c2cc <config_motors+0xce0>)
 800c1a0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = PITCHRPM_KI;
 800c1a2:	79ba      	ldrb	r2, [r7, #6]
 800c1a4:	493d      	ldr	r1, [pc, #244]	@ (800c29c <config_motors+0xcb0>)
 800c1a6:	4613      	mov	r3, r2
 800c1a8:	011b      	lsls	r3, r3, #4
 800c1aa:	1a9b      	subs	r3, r3, r2
 800c1ac:	011b      	lsls	r3, r3, #4
 800c1ae:	440b      	add	r3, r1
 800c1b0:	333c      	adds	r3, #60	@ 0x3c
 800c1b2:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800c1b6:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = PITCHRPM_KD;
 800c1b8:	79ba      	ldrb	r2, [r7, #6]
 800c1ba:	4938      	ldr	r1, [pc, #224]	@ (800c29c <config_motors+0xcb0>)
 800c1bc:	4613      	mov	r3, r2
 800c1be:	011b      	lsls	r3, r3, #4
 800c1c0:	1a9b      	subs	r3, r3, r2
 800c1c2:	011b      	lsls	r3, r3, #4
 800c1c4:	440b      	add	r3, r1
 800c1c6:	3340      	adds	r3, #64	@ 0x40
 800c1c8:	f04f 0200 	mov.w	r2, #0
 800c1cc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = PITCHRPM_INT_MAX;
 800c1ce:	79ba      	ldrb	r2, [r7, #6]
 800c1d0:	4932      	ldr	r1, [pc, #200]	@ (800c29c <config_motors+0xcb0>)
 800c1d2:	4613      	mov	r3, r2
 800c1d4:	011b      	lsls	r3, r3, #4
 800c1d6:	1a9b      	subs	r3, r3, r2
 800c1d8:	011b      	lsls	r3, r3, #4
 800c1da:	440b      	add	r3, r1
 800c1dc:	3350      	adds	r3, #80	@ 0x50
 800c1de:	4a3c      	ldr	r2, [pc, #240]	@ (800c2d0 <config_motors+0xce4>)
 800c1e0:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = PITCH_MAX_CURRENT;
 800c1e2:	79ba      	ldrb	r2, [r7, #6]
 800c1e4:	492d      	ldr	r1, [pc, #180]	@ (800c29c <config_motors+0xcb0>)
 800c1e6:	4613      	mov	r3, r2
 800c1e8:	011b      	lsls	r3, r3, #4
 800c1ea:	1a9b      	subs	r3, r3, r2
 800c1ec:	011b      	lsls	r3, r3, #4
 800c1ee:	440b      	add	r3, r1
 800c1f0:	3354      	adds	r3, #84	@ 0x54
 800c1f2:	4a38      	ldr	r2, [pc, #224]	@ (800c2d4 <config_motors+0xce8>)
 800c1f4:	601a      	str	r2, [r3, #0]
#endif

#ifdef YAW_MOTOR_ID
#ifndef YAW_M3508
	motor_id = YAW_MOTOR_ID - 1;
 800c1f6:	2313      	movs	r3, #19
 800c1f8:	71bb      	strb	r3, [r7, #6]
	g_can_motors[motor_id].motor_type = TYPE_GM6020;
 800c1fa:	79ba      	ldrb	r2, [r7, #6]
 800c1fc:	4927      	ldr	r1, [pc, #156]	@ (800c29c <config_motors+0xcb0>)
 800c1fe:	4613      	mov	r3, r2
 800c200:	011b      	lsls	r3, r3, #4
 800c202:	1a9b      	subs	r3, r3, r2
 800c204:	011b      	lsls	r3, r3, #4
 800c206:	440b      	add	r3, r1
 800c208:	3302      	adds	r3, #2
 800c20a:	2201      	movs	r2, #1
 800c20c:	701a      	strb	r2, [r3, #0]
	set_motor_config(&g_can_motors[motor_id]);
 800c20e:	79ba      	ldrb	r2, [r7, #6]
 800c210:	4613      	mov	r3, r2
 800c212:	011b      	lsls	r3, r3, #4
 800c214:	1a9b      	subs	r3, r3, r2
 800c216:	011b      	lsls	r3, r3, #4
 800c218:	4a20      	ldr	r2, [pc, #128]	@ (800c29c <config_motors+0xcb0>)
 800c21a:	4413      	add	r3, r2
 800c21c:	4618      	mov	r0, r3
 800c21e:	f7ff f89d 	bl	800b35c <set_motor_config>
	g_can_motors[motor_id].angle_data.center_ang = YAW_CENTER;
 800c222:	79ba      	ldrb	r2, [r7, #6]
 800c224:	491d      	ldr	r1, [pc, #116]	@ (800c29c <config_motors+0xcb0>)
 800c226:	4613      	mov	r3, r2
 800c228:	011b      	lsls	r3, r3, #4
 800c22a:	1a9b      	subs	r3, r3, r2
 800c22c:	011b      	lsls	r3, r3, #4
 800c22e:	440b      	add	r3, r1
 800c230:	339c      	adds	r3, #156	@ 0x9c
 800c232:	f640 62d8 	movw	r2, #3800	@ 0xed8
 800c236:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_max_ang = YAW_MAX_ANG;
 800c238:	79ba      	ldrb	r2, [r7, #6]
 800c23a:	4918      	ldr	r1, [pc, #96]	@ (800c29c <config_motors+0xcb0>)
 800c23c:	4613      	mov	r3, r2
 800c23e:	011b      	lsls	r3, r3, #4
 800c240:	1a9b      	subs	r3, r3, r2
 800c242:	011b      	lsls	r3, r3, #4
 800c244:	440b      	add	r3, r1
 800c246:	33c4      	adds	r3, #196	@ 0xc4
 800c248:	4a23      	ldr	r2, [pc, #140]	@ (800c2d8 <config_motors+0xcec>)
 800c24a:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.phy_min_ang = YAW_MIN_ANG; //angle before it overflows
 800c24c:	79ba      	ldrb	r2, [r7, #6]
 800c24e:	4913      	ldr	r1, [pc, #76]	@ (800c29c <config_motors+0xcb0>)
 800c250:	4613      	mov	r3, r2
 800c252:	011b      	lsls	r3, r3, #4
 800c254:	1a9b      	subs	r3, r3, r2
 800c256:	011b      	lsls	r3, r3, #4
 800c258:	440b      	add	r3, r1
 800c25a:	33c0      	adds	r3, #192	@ 0xc0
 800c25c:	4a1f      	ldr	r2, [pc, #124]	@ (800c2dc <config_motors+0xcf0>)
 800c25e:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.wheel_circ = 0;
 800c260:	79ba      	ldrb	r2, [r7, #6]
 800c262:	490e      	ldr	r1, [pc, #56]	@ (800c29c <config_motors+0xcb0>)
 800c264:	4613      	mov	r3, r2
 800c266:	011b      	lsls	r3, r3, #4
 800c268:	1a9b      	subs	r3, r3, r2
 800c26a:	011b      	lsls	r3, r3, #4
 800c26c:	440b      	add	r3, r1
 800c26e:	33d4      	adds	r3, #212	@ 0xd4
 800c270:	f04f 0200 	mov.w	r2, #0
 800c274:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kp = YAW_ANGLE_KP;
 800c276:	79ba      	ldrb	r2, [r7, #6]
 800c278:	4908      	ldr	r1, [pc, #32]	@ (800c29c <config_motors+0xcb0>)
 800c27a:	4613      	mov	r3, r2
 800c27c:	011b      	lsls	r3, r3, #4
 800c27e:	1a9b      	subs	r3, r3, r2
 800c280:	011b      	lsls	r3, r3, #4
 800c282:	440b      	add	r3, r1
 800c284:	3368      	adds	r3, #104	@ 0x68
 800c286:	4a16      	ldr	r2, [pc, #88]	@ (800c2e0 <config_motors+0xcf4>)
 800c288:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.ki = YAW_ANGLE_KI;
 800c28a:	79ba      	ldrb	r2, [r7, #6]
 800c28c:	4903      	ldr	r1, [pc, #12]	@ (800c29c <config_motors+0xcb0>)
 800c28e:	4613      	mov	r3, r2
 800c290:	011b      	lsls	r3, r3, #4
 800c292:	1a9b      	subs	r3, r3, r2
 800c294:	011b      	lsls	r3, r3, #4
 800c296:	440b      	add	r3, r1
 800c298:	336c      	adds	r3, #108	@ 0x6c
 800c29a:	e023      	b.n	800c2e4 <config_motors+0xcf8>
 800c29c:	20002220 	.word	0x20002220
 800c2a0:	40490fdb 	.word	0x40490fdb
 800c2a4:	c0490fdb 	.word	0xc0490fdb
 800c2a8:	447a0000 	.word	0x447a0000
 800c2ac:	42c80000 	.word	0x42c80000
 800c2b0:	40a00000 	.word	0x40a00000
 800c2b4:	3ca3d70a 	.word	0x3ca3d70a
 800c2b8:	40400000 	.word	0x40400000
 800c2bc:	461c4000 	.word	0x461c4000
 800c2c0:	3f19999a 	.word	0x3f19999a
 800c2c4:	be800000 	.word	0xbe800000
 800c2c8:	3dcccccd 	.word	0x3dcccccd
 800c2cc:	45bb8000 	.word	0x45bb8000
 800c2d0:	457a0000 	.word	0x457a0000
 800c2d4:	469c4000 	.word	0x469c4000
 800c2d8:	417b53d2 	.word	0x417b53d2
 800c2dc:	c17b53d2 	.word	0xc17b53d2
 800c2e0:	41700000 	.word	0x41700000
 800c2e4:	f04f 0200 	mov.w	r2, #0
 800c2e8:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.kd = YAW_ANGLE_KD;
 800c2ea:	79ba      	ldrb	r2, [r7, #6]
 800c2ec:	4929      	ldr	r1, [pc, #164]	@ (800c394 <config_motors+0xda8>)
 800c2ee:	4613      	mov	r3, r2
 800c2f0:	011b      	lsls	r3, r3, #4
 800c2f2:	1a9b      	subs	r3, r3, r2
 800c2f4:	011b      	lsls	r3, r3, #4
 800c2f6:	440b      	add	r3, r1
 800c2f8:	3370      	adds	r3, #112	@ 0x70
 800c2fa:	4a27      	ldr	r2, [pc, #156]	@ (800c398 <config_motors+0xdac>)
 800c2fc:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.int_max = YAW_ANGLE_INT_MAX;
 800c2fe:	79ba      	ldrb	r2, [r7, #6]
 800c300:	4924      	ldr	r1, [pc, #144]	@ (800c394 <config_motors+0xda8>)
 800c302:	4613      	mov	r3, r2
 800c304:	011b      	lsls	r3, r3, #4
 800c306:	1a9b      	subs	r3, r3, r2
 800c308:	011b      	lsls	r3, r3, #4
 800c30a:	440b      	add	r3, r1
 800c30c:	3380      	adds	r3, #128	@ 0x80
 800c30e:	4a23      	ldr	r2, [pc, #140]	@ (800c39c <config_motors+0xdb0>)
 800c310:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_pid.max_out = YAW_MAX_RPM;
 800c312:	79ba      	ldrb	r2, [r7, #6]
 800c314:	491f      	ldr	r1, [pc, #124]	@ (800c394 <config_motors+0xda8>)
 800c316:	4613      	mov	r3, r2
 800c318:	011b      	lsls	r3, r3, #4
 800c31a:	1a9b      	subs	r3, r3, r2
 800c31c:	011b      	lsls	r3, r3, #4
 800c31e:	440b      	add	r3, r1
 800c320:	3384      	adds	r3, #132	@ 0x84
 800c322:	4a1d      	ldr	r2, [pc, #116]	@ (800c398 <config_motors+0xdac>)
 800c324:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kp = YAWRPM_KP;
 800c326:	79ba      	ldrb	r2, [r7, #6]
 800c328:	491a      	ldr	r1, [pc, #104]	@ (800c394 <config_motors+0xda8>)
 800c32a:	4613      	mov	r3, r2
 800c32c:	011b      	lsls	r3, r3, #4
 800c32e:	1a9b      	subs	r3, r3, r2
 800c330:	011b      	lsls	r3, r3, #4
 800c332:	440b      	add	r3, r1
 800c334:	3338      	adds	r3, #56	@ 0x38
 800c336:	4a1a      	ldr	r2, [pc, #104]	@ (800c3a0 <config_motors+0xdb4>)
 800c338:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.ki = YAWRPM_KI;
 800c33a:	79ba      	ldrb	r2, [r7, #6]
 800c33c:	4915      	ldr	r1, [pc, #84]	@ (800c394 <config_motors+0xda8>)
 800c33e:	4613      	mov	r3, r2
 800c340:	011b      	lsls	r3, r3, #4
 800c342:	1a9b      	subs	r3, r3, r2
 800c344:	011b      	lsls	r3, r3, #4
 800c346:	440b      	add	r3, r1
 800c348:	333c      	adds	r3, #60	@ 0x3c
 800c34a:	4a13      	ldr	r2, [pc, #76]	@ (800c398 <config_motors+0xdac>)
 800c34c:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.kd = YAWRPM_KD;
 800c34e:	79ba      	ldrb	r2, [r7, #6]
 800c350:	4910      	ldr	r1, [pc, #64]	@ (800c394 <config_motors+0xda8>)
 800c352:	4613      	mov	r3, r2
 800c354:	011b      	lsls	r3, r3, #4
 800c356:	1a9b      	subs	r3, r3, r2
 800c358:	011b      	lsls	r3, r3, #4
 800c35a:	440b      	add	r3, r1
 800c35c:	3340      	adds	r3, #64	@ 0x40
 800c35e:	4a11      	ldr	r2, [pc, #68]	@ (800c3a4 <config_motors+0xdb8>)
 800c360:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.int_max = YAWRPM_INT_MAX;
 800c362:	79ba      	ldrb	r2, [r7, #6]
 800c364:	490b      	ldr	r1, [pc, #44]	@ (800c394 <config_motors+0xda8>)
 800c366:	4613      	mov	r3, r2
 800c368:	011b      	lsls	r3, r3, #4
 800c36a:	1a9b      	subs	r3, r3, r2
 800c36c:	011b      	lsls	r3, r3, #4
 800c36e:	440b      	add	r3, r1
 800c370:	3350      	adds	r3, #80	@ 0x50
 800c372:	4a0d      	ldr	r2, [pc, #52]	@ (800c3a8 <config_motors+0xdbc>)
 800c374:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].rpm_pid.max_out = YAW_MAX_CURRENT;
 800c376:	79ba      	ldrb	r2, [r7, #6]
 800c378:	4906      	ldr	r1, [pc, #24]	@ (800c394 <config_motors+0xda8>)
 800c37a:	4613      	mov	r3, r2
 800c37c:	011b      	lsls	r3, r3, #4
 800c37e:	1a9b      	subs	r3, r3, r2
 800c380:	011b      	lsls	r3, r3, #4
 800c382:	440b      	add	r3, r1
 800c384:	3354      	adds	r3, #84	@ 0x54
 800c386:	4a09      	ldr	r2, [pc, #36]	@ (800c3ac <config_motors+0xdc0>)
 800c388:	601a      	str	r2, [r3, #0]
	g_can_motors[motor_id].angle_data.max_ticks = 4096 * g_can_motors[motor_id].angle_data.gearbox_ratio;
	g_can_motors[motor_id].angle_data.tick_range = g_can_motors[motor_id].angle_data.max_ticks
			- g_can_motors[motor_id].angle_data.min_ticks;
#endif
#endif
}
 800c38a:	bf00      	nop
 800c38c:	3708      	adds	r7, #8
 800c38e:	46bd      	mov	sp, r7
 800c390:	bd80      	pop	{r7, pc}
 800c392:	bf00      	nop
 800c394:	20002220 	.word	0x20002220
 800c398:	41200000 	.word	0x41200000
 800c39c:	3d4ccccd 	.word	0x3d4ccccd
 800c3a0:	466a6000 	.word	0x466a6000
 800c3a4:	447a0000 	.word	0x447a0000
 800c3a8:	459c4000 	.word	0x459c4000
 800c3ac:	469c4000 	.word	0x469c4000

0800c3b0 <bz_buzzer>:

void bz_buzzer(uint8_t high, uint8_t low) {
 800c3b0:	b580      	push	{r7, lr}
 800c3b2:	b084      	sub	sp, #16
 800c3b4:	af00      	add	r7, sp, #0
 800c3b6:	4603      	mov	r3, r0
 800c3b8:	460a      	mov	r2, r1
 800c3ba:	71fb      	strb	r3, [r7, #7]
 800c3bc:	4613      	mov	r3, r2
 800c3be:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_high;
 800c3c0:	2309      	movs	r3, #9
 800c3c2:	737b      	strb	r3, [r7, #13]
	for (uint8_t i = 0; i < high; i++) {
 800c3c4:	2300      	movs	r3, #0
 800c3c6:	73fb      	strb	r3, [r7, #15]
 800c3c8:	e00a      	b.n	800c3e0 <bz_buzzer+0x30>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c3ca:	4b1a      	ldr	r3, [pc, #104]	@ (800c434 <bz_buzzer+0x84>)
 800c3cc:	6818      	ldr	r0, [r3, #0]
 800c3ce:	f107 010d 	add.w	r1, r7, #13
 800c3d2:	2300      	movs	r3, #0
 800c3d4:	2200      	movs	r2, #0
 800c3d6:	f00d fecb 	bl	801a170 <xQueueGenericSend>
	for (uint8_t i = 0; i < high; i++) {
 800c3da:	7bfb      	ldrb	r3, [r7, #15]
 800c3dc:	3301      	adds	r3, #1
 800c3de:	73fb      	strb	r3, [r7, #15]
 800c3e0:	7bfa      	ldrb	r2, [r7, #15]
 800c3e2:	79fb      	ldrb	r3, [r7, #7]
 800c3e4:	429a      	cmp	r2, r3
 800c3e6:	d3f0      	bcc.n	800c3ca <bz_buzzer+0x1a>
	}
	temp_msg = bz_debug_low;
 800c3e8:	2308      	movs	r3, #8
 800c3ea:	737b      	strb	r3, [r7, #13]
	for (int8_t i = 0; i < low; i++) {
 800c3ec:	2300      	movs	r3, #0
 800c3ee:	73bb      	strb	r3, [r7, #14]
 800c3f0:	e00d      	b.n	800c40e <bz_buzzer+0x5e>
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c3f2:	4b10      	ldr	r3, [pc, #64]	@ (800c434 <bz_buzzer+0x84>)
 800c3f4:	6818      	ldr	r0, [r3, #0]
 800c3f6:	f107 010d 	add.w	r1, r7, #13
 800c3fa:	2300      	movs	r3, #0
 800c3fc:	2200      	movs	r2, #0
 800c3fe:	f00d feb7 	bl	801a170 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800c402:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800c406:	b2db      	uxtb	r3, r3
 800c408:	3301      	adds	r3, #1
 800c40a:	b2db      	uxtb	r3, r3
 800c40c:	73bb      	strb	r3, [r7, #14]
 800c40e:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800c412:	79bb      	ldrb	r3, [r7, #6]
 800c414:	429a      	cmp	r2, r3
 800c416:	dbec      	blt.n	800c3f2 <bz_buzzer+0x42>
	}
	temp_msg = bz_debug_rest;
 800c418:	230a      	movs	r3, #10
 800c41a:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c41c:	4b05      	ldr	r3, [pc, #20]	@ (800c434 <bz_buzzer+0x84>)
 800c41e:	6818      	ldr	r0, [r3, #0]
 800c420:	f107 010d 	add.w	r1, r7, #13
 800c424:	2300      	movs	r3, #0
 800c426:	2200      	movs	r2, #0
 800c428:	f00d fea2 	bl	801a170 <xQueueGenericSend>
}
 800c42c:	bf00      	nop
 800c42e:	3710      	adds	r7, #16
 800c430:	46bd      	mov	sp, r7
 800c432:	bd80      	pop	{r7, pc}
 800c434:	20003b98 	.word	0x20003b98

0800c438 <motor_temp_bz>:

void motor_temp_bz(uint8_t hi, uint8_t low) {
 800c438:	b580      	push	{r7, lr}
 800c43a:	b084      	sub	sp, #16
 800c43c:	af00      	add	r7, sp, #0
 800c43e:	4603      	mov	r3, r0
 800c440:	460a      	mov	r2, r1
 800c442:	71fb      	strb	r3, [r7, #7]
 800c444:	4613      	mov	r3, r2
 800c446:	71bb      	strb	r3, [r7, #6]
	uint8_t temp_msg = bz_debug_hi_temp;
 800c448:	230b      	movs	r3, #11
 800c44a:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c44c:	4b27      	ldr	r3, [pc, #156]	@ (800c4ec <motor_temp_bz+0xb4>)
 800c44e:	6818      	ldr	r0, [r3, #0]
 800c450:	f107 010d 	add.w	r1, r7, #13
 800c454:	2300      	movs	r3, #0
 800c456:	2200      	movs	r2, #0
 800c458:	f00d fe8a 	bl	801a170 <xQueueGenericSend>
	temp_msg = bz_debug_rest;
 800c45c:	230a      	movs	r3, #10
 800c45e:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c460:	4b22      	ldr	r3, [pc, #136]	@ (800c4ec <motor_temp_bz+0xb4>)
 800c462:	6818      	ldr	r0, [r3, #0]
 800c464:	f107 010d 	add.w	r1, r7, #13
 800c468:	2300      	movs	r3, #0
 800c46a:	2200      	movs	r2, #0
 800c46c:	f00d fe80 	bl	801a170 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 800c470:	2300      	movs	r3, #0
 800c472:	73fb      	strb	r3, [r7, #15]
 800c474:	e00f      	b.n	800c496 <motor_temp_bz+0x5e>
		temp_msg = bz_temp_hi;
 800c476:	230c      	movs	r3, #12
 800c478:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c47a:	4b1c      	ldr	r3, [pc, #112]	@ (800c4ec <motor_temp_bz+0xb4>)
 800c47c:	6818      	ldr	r0, [r3, #0]
 800c47e:	f107 010d 	add.w	r1, r7, #13
 800c482:	2300      	movs	r3, #0
 800c484:	2200      	movs	r2, #0
 800c486:	f00d fe73 	bl	801a170 <xQueueGenericSend>
	for (int8_t i = 0; i < hi; i++) {
 800c48a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800c48e:	b2db      	uxtb	r3, r3
 800c490:	3301      	adds	r3, #1
 800c492:	b2db      	uxtb	r3, r3
 800c494:	73fb      	strb	r3, [r7, #15]
 800c496:	f997 200f 	ldrsb.w	r2, [r7, #15]
 800c49a:	79fb      	ldrb	r3, [r7, #7]
 800c49c:	429a      	cmp	r2, r3
 800c49e:	dbea      	blt.n	800c476 <motor_temp_bz+0x3e>
	}
	for (int8_t i = 0; i < low; i++) {
 800c4a0:	2300      	movs	r3, #0
 800c4a2:	73bb      	strb	r3, [r7, #14]
 800c4a4:	e00f      	b.n	800c4c6 <motor_temp_bz+0x8e>
		temp_msg = bz_temp_low;
 800c4a6:	230d      	movs	r3, #13
 800c4a8:	737b      	strb	r3, [r7, #13]
		xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c4aa:	4b10      	ldr	r3, [pc, #64]	@ (800c4ec <motor_temp_bz+0xb4>)
 800c4ac:	6818      	ldr	r0, [r3, #0]
 800c4ae:	f107 010d 	add.w	r1, r7, #13
 800c4b2:	2300      	movs	r3, #0
 800c4b4:	2200      	movs	r2, #0
 800c4b6:	f00d fe5b 	bl	801a170 <xQueueGenericSend>
	for (int8_t i = 0; i < low; i++) {
 800c4ba:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800c4be:	b2db      	uxtb	r3, r3
 800c4c0:	3301      	adds	r3, #1
 800c4c2:	b2db      	uxtb	r3, r3
 800c4c4:	73bb      	strb	r3, [r7, #14]
 800c4c6:	f997 200e 	ldrsb.w	r2, [r7, #14]
 800c4ca:	79bb      	ldrb	r3, [r7, #6]
 800c4cc:	429a      	cmp	r2, r3
 800c4ce:	dbea      	blt.n	800c4a6 <motor_temp_bz+0x6e>
	}
	temp_msg = bz_debug_rest;
 800c4d0:	230a      	movs	r3, #10
 800c4d2:	737b      	strb	r3, [r7, #13]
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c4d4:	4b05      	ldr	r3, [pc, #20]	@ (800c4ec <motor_temp_bz+0xb4>)
 800c4d6:	6818      	ldr	r0, [r3, #0]
 800c4d8:	f107 010d 	add.w	r1, r7, #13
 800c4dc:	2300      	movs	r3, #0
 800c4de:	2200      	movs	r2, #0
 800c4e0:	f00d fe46 	bl	801a170 <xQueueGenericSend>

}
 800c4e4:	bf00      	nop
 800c4e6:	3710      	adds	r7, #16
 800c4e8:	46bd      	mov	sp, r7
 800c4ea:	bd80      	pop	{r7, pc}
 800c4ec:	20003b98 	.word	0x20003b98

0800c4f0 <check_motors>:

uint16_t check_motors() {
 800c4f0:	b580      	push	{r7, lr}
 800c4f2:	b082      	sub	sp, #8
 800c4f4:	af00      	add	r7, sp, #0
	uint16_t error = 0;
 800c4f6:	2300      	movs	r3, #0
 800c4f8:	80fb      	strh	r3, [r7, #6]
	uint32_t curr_time = get_microseconds();
 800c4fa:	f7f5 fe61 	bl	80021c0 <get_microseconds>
 800c4fe:	6038      	str	r0, [r7, #0]
	if (curr_time
				- g_can_motors[LEFT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c500:	4b7d      	ldr	r3, [pc, #500]	@ (800c6f8 <check_motors+0x208>)
 800c502:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 800c506:	683a      	ldr	r2, [r7, #0]
 800c508:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c50a:	4a7c      	ldr	r2, [pc, #496]	@ (800c6fc <check_motors+0x20c>)
 800c50c:	4293      	cmp	r3, r2
 800c50e:	d904      	bls.n	800c51a <check_motors+0x2a>
			error |= 1 << (0);
 800c510:	88fb      	ldrh	r3, [r7, #6]
 800c512:	f043 0301 	orr.w	r3, r3, #1
 800c516:	80fb      	strh	r3, [r7, #6]
 800c518:	e007      	b.n	800c52a <check_motors+0x3a>

		} else {
			if (g_can_motors[LEFT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c51a:	4b77      	ldr	r3, [pc, #476]	@ (800c6f8 <check_motors+0x208>)
 800c51c:	7b1b      	ldrb	r3, [r3, #12]
 800c51e:	2b46      	cmp	r3, #70	@ 0x46
 800c520:	d903      	bls.n	800c52a <check_motors+0x3a>
				motor_temp_bz(1, 1);
 800c522:	2101      	movs	r1, #1
 800c524:	2001      	movs	r0, #1
 800c526:	f7ff ff87 	bl	800c438 <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
				- g_can_motors[RIGHT_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c52a:	4b73      	ldr	r3, [pc, #460]	@ (800c6f8 <check_motors+0x208>)
 800c52c:	f8d3 31d4 	ldr.w	r3, [r3, #468]	@ 0x1d4
 800c530:	683a      	ldr	r2, [r7, #0]
 800c532:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c534:	4a71      	ldr	r2, [pc, #452]	@ (800c6fc <check_motors+0x20c>)
 800c536:	4293      	cmp	r3, r2
 800c538:	d904      	bls.n	800c544 <check_motors+0x54>
			error |= 1 << (0);
 800c53a:	88fb      	ldrh	r3, [r7, #6]
 800c53c:	f043 0301 	orr.w	r3, r3, #1
 800c540:	80fb      	strh	r3, [r7, #6]
 800c542:	e008      	b.n	800c556 <check_motors+0x66>

		} else {
			if (g_can_motors[RIGHT_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c544:	4b6c      	ldr	r3, [pc, #432]	@ (800c6f8 <check_motors+0x208>)
 800c546:	f893 30fc 	ldrb.w	r3, [r3, #252]	@ 0xfc
 800c54a:	2b46      	cmp	r3, #70	@ 0x46
 800c54c:	d903      	bls.n	800c556 <check_motors+0x66>
				motor_temp_bz(1, 1);
 800c54e:	2101      	movs	r1, #1
 800c550:	2001      	movs	r0, #1
 800c552:	f7ff ff71 	bl	800c438 <motor_temp_bz>
			} else {

			}
		}
	if (curr_time
			- g_can_motors[FR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c556:	4b68      	ldr	r3, [pc, #416]	@ (800c6f8 <check_motors+0x208>)
 800c558:	f8d3 34a4 	ldr.w	r3, [r3, #1188]	@ 0x4a4
 800c55c:	683a      	ldr	r2, [r7, #0]
 800c55e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c560:	4a66      	ldr	r2, [pc, #408]	@ (800c6fc <check_motors+0x20c>)
 800c562:	4293      	cmp	r3, r2
 800c564:	d904      	bls.n	800c570 <check_motors+0x80>
		error |= 1 << (0);
 800c566:	88fb      	ldrh	r3, [r7, #6]
 800c568:	f043 0301 	orr.w	r3, r3, #1
 800c56c:	80fb      	strh	r3, [r7, #6]
 800c56e:	e008      	b.n	800c582 <check_motors+0x92>

	} else {
		if (g_can_motors[FR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c570:	4b61      	ldr	r3, [pc, #388]	@ (800c6f8 <check_motors+0x208>)
 800c572:	f893 33cc 	ldrb.w	r3, [r3, #972]	@ 0x3cc
 800c576:	2b46      	cmp	r3, #70	@ 0x46
 800c578:	d903      	bls.n	800c582 <check_motors+0x92>
			motor_temp_bz(1, 1);
 800c57a:	2101      	movs	r1, #1
 800c57c:	2001      	movs	r0, #1
 800c57e:	f7ff ff5b 	bl	800c438 <motor_temp_bz>

		}
	}

	if (curr_time
			- g_can_motors[FL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c582:	4b5d      	ldr	r3, [pc, #372]	@ (800c6f8 <check_motors+0x208>)
 800c584:	f8d3 3594 	ldr.w	r3, [r3, #1428]	@ 0x594
 800c588:	683a      	ldr	r2, [r7, #0]
 800c58a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c58c:	4a5b      	ldr	r2, [pc, #364]	@ (800c6fc <check_motors+0x20c>)
 800c58e:	4293      	cmp	r3, r2
 800c590:	d904      	bls.n	800c59c <check_motors+0xac>
		error |= 1 << (1);
 800c592:	88fb      	ldrh	r3, [r7, #6]
 800c594:	f043 0302 	orr.w	r3, r3, #2
 800c598:	80fb      	strh	r3, [r7, #6]
 800c59a:	e008      	b.n	800c5ae <check_motors+0xbe>

	} else {
		if (g_can_motors[FL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c59c:	4b56      	ldr	r3, [pc, #344]	@ (800c6f8 <check_motors+0x208>)
 800c59e:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 800c5a2:	2b46      	cmp	r3, #70	@ 0x46
 800c5a4:	d903      	bls.n	800c5ae <check_motors+0xbe>
			motor_temp_bz(1, 2);
 800c5a6:	2102      	movs	r1, #2
 800c5a8:	2001      	movs	r0, #1
 800c5aa:	f7ff ff45 	bl	800c438 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[BL_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c5ae:	4b52      	ldr	r3, [pc, #328]	@ (800c6f8 <check_motors+0x208>)
 800c5b0:	f8d3 3684 	ldr.w	r3, [r3, #1668]	@ 0x684
 800c5b4:	683a      	ldr	r2, [r7, #0]
 800c5b6:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c5b8:	4a50      	ldr	r2, [pc, #320]	@ (800c6fc <check_motors+0x20c>)
 800c5ba:	4293      	cmp	r3, r2
 800c5bc:	d904      	bls.n	800c5c8 <check_motors+0xd8>
		error |= 1 << (2);
 800c5be:	88fb      	ldrh	r3, [r7, #6]
 800c5c0:	f043 0304 	orr.w	r3, r3, #4
 800c5c4:	80fb      	strh	r3, [r7, #6]
 800c5c6:	e008      	b.n	800c5da <check_motors+0xea>
	} else {
		if (g_can_motors[BL_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c5c8:	4b4b      	ldr	r3, [pc, #300]	@ (800c6f8 <check_motors+0x208>)
 800c5ca:	f893 35ac 	ldrb.w	r3, [r3, #1452]	@ 0x5ac
 800c5ce:	2b46      	cmp	r3, #70	@ 0x46
 800c5d0:	d903      	bls.n	800c5da <check_motors+0xea>
			motor_temp_bz(1, 3);
 800c5d2:	2103      	movs	r1, #3
 800c5d4:	2001      	movs	r0, #1
 800c5d6:	f7ff ff2f 	bl	800c438 <motor_temp_bz>
		}
	}
	if (curr_time
			- g_can_motors[BR_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c5da:	4b47      	ldr	r3, [pc, #284]	@ (800c6f8 <check_motors+0x208>)
 800c5dc:	f8d3 3774 	ldr.w	r3, [r3, #1908]	@ 0x774
 800c5e0:	683a      	ldr	r2, [r7, #0]
 800c5e2:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c5e4:	4a45      	ldr	r2, [pc, #276]	@ (800c6fc <check_motors+0x20c>)
 800c5e6:	4293      	cmp	r3, r2
 800c5e8:	d904      	bls.n	800c5f4 <check_motors+0x104>
		error |= 1 << (3);
 800c5ea:	88fb      	ldrh	r3, [r7, #6]
 800c5ec:	f043 0308 	orr.w	r3, r3, #8
 800c5f0:	80fb      	strh	r3, [r7, #6]
 800c5f2:	e008      	b.n	800c606 <check_motors+0x116>
	} else {
		if (g_can_motors[BR_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c5f4:	4b40      	ldr	r3, [pc, #256]	@ (800c6f8 <check_motors+0x208>)
 800c5f6:	f893 369c 	ldrb.w	r3, [r3, #1692]	@ 0x69c
 800c5fa:	2b46      	cmp	r3, #70	@ 0x46
 800c5fc:	d903      	bls.n	800c606 <check_motors+0x116>
			motor_temp_bz(1, 4);
 800c5fe:	2104      	movs	r1, #4
 800c600:	2001      	movs	r0, #1
 800c602:	f7ff ff19 	bl	800c438 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[LFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c606:	4b3c      	ldr	r3, [pc, #240]	@ (800c6f8 <check_motors+0x208>)
 800c608:	f8d3 3ef4 	ldr.w	r3, [r3, #3828]	@ 0xef4
 800c60c:	683a      	ldr	r2, [r7, #0]
 800c60e:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c610:	4a3a      	ldr	r2, [pc, #232]	@ (800c6fc <check_motors+0x20c>)
 800c612:	4293      	cmp	r3, r2
 800c614:	d904      	bls.n	800c620 <check_motors+0x130>
		error |= 1 << (4);
 800c616:	88fb      	ldrh	r3, [r7, #6]
 800c618:	f043 0310 	orr.w	r3, r3, #16
 800c61c:	80fb      	strh	r3, [r7, #6]
 800c61e:	e008      	b.n	800c632 <check_motors+0x142>

	} else {
		if (g_can_motors[LFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c620:	4b35      	ldr	r3, [pc, #212]	@ (800c6f8 <check_motors+0x208>)
 800c622:	f893 3e1c 	ldrb.w	r3, [r3, #3612]	@ 0xe1c
 800c626:	2b46      	cmp	r3, #70	@ 0x46
 800c628:	d903      	bls.n	800c632 <check_motors+0x142>
			motor_temp_bz(2, 1);
 800c62a:	2101      	movs	r1, #1
 800c62c:	2002      	movs	r0, #2
 800c62e:	f7ff ff03 	bl	800c438 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[RFRICTION_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c632:	4b31      	ldr	r3, [pc, #196]	@ (800c6f8 <check_motors+0x208>)
 800c634:	f8d3 3e04 	ldr.w	r3, [r3, #3588]	@ 0xe04
 800c638:	683a      	ldr	r2, [r7, #0]
 800c63a:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c63c:	4a2f      	ldr	r2, [pc, #188]	@ (800c6fc <check_motors+0x20c>)
 800c63e:	4293      	cmp	r3, r2
 800c640:	d904      	bls.n	800c64c <check_motors+0x15c>
		error |= 1 << (5);
 800c642:	88fb      	ldrh	r3, [r7, #6]
 800c644:	f043 0320 	orr.w	r3, r3, #32
 800c648:	80fb      	strh	r3, [r7, #6]
 800c64a:	e008      	b.n	800c65e <check_motors+0x16e>

	} else {
		if (g_can_motors[RFRICTION_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c64c:	4b2a      	ldr	r3, [pc, #168]	@ (800c6f8 <check_motors+0x208>)
 800c64e:	f893 3d2c 	ldrb.w	r3, [r3, #3372]	@ 0xd2c
 800c652:	2b46      	cmp	r3, #70	@ 0x46
 800c654:	d903      	bls.n	800c65e <check_motors+0x16e>
			motor_temp_bz(2, 2);
 800c656:	2102      	movs	r1, #2
 800c658:	2002      	movs	r0, #2
 800c65a:	f7ff feed 	bl	800c438 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[FEEDER_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c65e:	4b26      	ldr	r3, [pc, #152]	@ (800c6f8 <check_motors+0x208>)
 800c660:	f8d3 3fe4 	ldr.w	r3, [r3, #4068]	@ 0xfe4
 800c664:	683a      	ldr	r2, [r7, #0]
 800c666:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c668:	4a24      	ldr	r2, [pc, #144]	@ (800c6fc <check_motors+0x20c>)
 800c66a:	4293      	cmp	r3, r2
 800c66c:	d904      	bls.n	800c678 <check_motors+0x188>
		error |= 1 << 6;
 800c66e:	88fb      	ldrh	r3, [r7, #6]
 800c670:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c674:	80fb      	strh	r3, [r7, #6]
 800c676:	e008      	b.n	800c68a <check_motors+0x19a>

	} else {
		if (g_can_motors[FEEDER_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c678:	4b1f      	ldr	r3, [pc, #124]	@ (800c6f8 <check_motors+0x208>)
 800c67a:	f893 3f0c 	ldrb.w	r3, [r3, #3852]	@ 0xf0c
 800c67e:	2b46      	cmp	r3, #70	@ 0x46
 800c680:	d903      	bls.n	800c68a <check_motors+0x19a>
			motor_temp_bz(2, 3);
 800c682:	2103      	movs	r1, #3
 800c684:	2002      	movs	r0, #2
 800c686:	f7ff fed7 	bl	800c438 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[PITCH_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c68a:	4b1b      	ldr	r3, [pc, #108]	@ (800c6f8 <check_motors+0x208>)
 800c68c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c690:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800c694:	683a      	ldr	r2, [r7, #0]
 800c696:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c698:	4a18      	ldr	r2, [pc, #96]	@ (800c6fc <check_motors+0x20c>)
 800c69a:	4293      	cmp	r3, r2
 800c69c:	d904      	bls.n	800c6a8 <check_motors+0x1b8>
		error |= 1 << 7;
 800c69e:	88fb      	ldrh	r3, [r7, #6]
 800c6a0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800c6a4:	80fb      	strh	r3, [r7, #6]
 800c6a6:	e008      	b.n	800c6ba <check_motors+0x1ca>

	} else {
		if (g_can_motors[PITCH_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c6a8:	4b13      	ldr	r3, [pc, #76]	@ (800c6f8 <check_motors+0x208>)
 800c6aa:	f893 3ffc 	ldrb.w	r3, [r3, #4092]	@ 0xffc
 800c6ae:	2b46      	cmp	r3, #70	@ 0x46
 800c6b0:	d903      	bls.n	800c6ba <check_motors+0x1ca>
			motor_temp_bz(3, 1);
 800c6b2:	2101      	movs	r1, #1
 800c6b4:	2003      	movs	r0, #3
 800c6b6:	f7ff febf 	bl	800c438 <motor_temp_bz>
		}
	}

	if (curr_time
			- g_can_motors[YAW_MOTOR_ID - 1].last_time[0]> MOTOR_TIMEOUT_MAX) {
 800c6ba:	4b0f      	ldr	r3, [pc, #60]	@ (800c6f8 <check_motors+0x208>)
 800c6bc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c6c0:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 800c6c4:	683a      	ldr	r2, [r7, #0]
 800c6c6:	1ad3      	subs	r3, r2, r3
	if (curr_time
 800c6c8:	4a0c      	ldr	r2, [pc, #48]	@ (800c6fc <check_motors+0x20c>)
 800c6ca:	4293      	cmp	r3, r2
 800c6cc:	d904      	bls.n	800c6d8 <check_motors+0x1e8>
		error |= 1 << 8;
 800c6ce:	88fb      	ldrh	r3, [r7, #6]
 800c6d0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800c6d4:	80fb      	strh	r3, [r7, #6]
 800c6d6:	e00a      	b.n	800c6ee <check_motors+0x1fe>

	} else {
		if (g_can_motors[YAW_MOTOR_ID - 1].raw_data.temp > HITEMP_WARNING) {
 800c6d8:	4b07      	ldr	r3, [pc, #28]	@ (800c6f8 <check_motors+0x208>)
 800c6da:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800c6de:	f893 31dc 	ldrb.w	r3, [r3, #476]	@ 0x1dc
 800c6e2:	2b46      	cmp	r3, #70	@ 0x46
 800c6e4:	d903      	bls.n	800c6ee <check_motors+0x1fe>
			motor_temp_bz(3, 2);
 800c6e6:	2102      	movs	r1, #2
 800c6e8:	2003      	movs	r0, #3
 800c6ea:	f7ff fea5 	bl	800c438 <motor_temp_bz>
		}
	}
	return error;
 800c6ee:	88fb      	ldrh	r3, [r7, #6]

}
 800c6f0:	4618      	mov	r0, r3
 800c6f2:	3708      	adds	r7, #8
 800c6f4:	46bd      	mov	sp, r7
 800c6f6:	bd80      	pop	{r7, pc}
 800c6f8:	20002220 	.word	0x20002220
 800c6fc:	000f4240 	.word	0x000f4240

0800c700 <motor_calib_task>:

void motor_calib_task(void *argument) {
 800c700:	b580      	push	{r7, lr}
 800c702:	b088      	sub	sp, #32
 800c704:	af00      	add	r7, sp, #0
 800c706:	6078      	str	r0, [r7, #4]
	can_start(&hcan1, 0x00000000, 0x00000000);
 800c708:	2200      	movs	r2, #0
 800c70a:	2100      	movs	r1, #0
 800c70c:	4842      	ldr	r0, [pc, #264]	@ (800c818 <motor_calib_task+0x118>)
 800c70e:	f7f4 fd95 	bl	800123c <can_start>
	can_start(&hcan2, 0x00000000, 0x00000000);
 800c712:	2200      	movs	r2, #0
 800c714:	2100      	movs	r1, #0
 800c716:	4841      	ldr	r0, [pc, #260]	@ (800c81c <motor_calib_task+0x11c>)
 800c718:	f7f4 fd90 	bl	800123c <can_start>
	config_motors();
 800c71c:	f7fe ff66 	bl	800b5ec <config_motors>
	//insert can tester?
	uint16_t error = 0b111111111;
 800c720:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800c724:	82fb      	strh	r3, [r7, #22]
	vTaskDelay(50);
 800c726:	2032      	movs	r0, #50	@ 0x32
 800c728:	f00e fc0c 	bl	801af44 <vTaskDelay>
			vTaskDelay(500);
		}
	}

	uint8_t temp_msg;
	if (error == 0) {
 800c72c:	8afb      	ldrh	r3, [r7, #22]
 800c72e:	2b00      	cmp	r3, #0
 800c730:	d102      	bne.n	800c738 <motor_calib_task+0x38>
		temp_msg = ok;
 800c732:	2301      	movs	r3, #1
 800c734:	73fb      	strb	r3, [r7, #15]
 800c736:	e001      	b.n	800c73c <motor_calib_task+0x3c>
	} else {
		temp_msg = not_ok;
 800c738:	2302      	movs	r3, #2
 800c73a:	73fb      	strb	r3, [r7, #15]
	}
	xQueueSendToBack(g_buzzing_task_msg, &temp_msg, 0);
 800c73c:	4b38      	ldr	r3, [pc, #224]	@ (800c820 <motor_calib_task+0x120>)
 800c73e:	6818      	ldr	r0, [r3, #0]
 800c740:	f107 010f 	add.w	r1, r7, #15
 800c744:	2300      	movs	r3, #0
 800c746:	2200      	movs	r2, #0
 800c748:	f00d fd12 	bl	801a170 <xQueueGenericSend>
	uint32_t last_check = HAL_GetTick();
 800c74c:	f001 fa34 	bl	800dbb8 <HAL_GetTick>
 800c750:	6138      	str	r0, [r7, #16]
	while (1) {
		error = 0;
 800c752:	2300      	movs	r3, #0
 800c754:	82fb      	strh	r3, [r7, #22]

		error = check_motors();
 800c756:	f7ff fecb 	bl	800c4f0 <check_motors>
 800c75a:	4603      	mov	r3, r0
 800c75c:	82fb      	strh	r3, [r7, #22]
		g_motor_fault = error;
 800c75e:	4a31      	ldr	r2, [pc, #196]	@ (800c824 <motor_calib_task+0x124>)
 800c760:	8afb      	ldrh	r3, [r7, #22]
 800c762:	8013      	strh	r3, [r2, #0]
		uint32_t delay = 0;
 800c764:	2300      	movs	r3, #0
 800c766:	61bb      	str	r3, [r7, #24]
		if (HAL_GetTick() - last_check > 30000) {
 800c768:	f001 fa26 	bl	800dbb8 <HAL_GetTick>
 800c76c:	4602      	mov	r2, r0
 800c76e:	693b      	ldr	r3, [r7, #16]
 800c770:	1ad3      	subs	r3, r2, r3
 800c772:	f247 5230 	movw	r2, #30000	@ 0x7530
 800c776:	4293      	cmp	r3, r2
 800c778:	d949      	bls.n	800c80e <motor_calib_task+0x10e>
					bz_buzzer(0, 2);
					vTaskDelay(5000);
					continue;
				}
			} else {
				error = 0;
 800c77a:	2300      	movs	r3, #0
 800c77c:	82fb      	strh	r3, [r7, #22]
			}
			for (uint8_t i = 0; i < 4; i++) {
 800c77e:	2300      	movs	r3, #0
 800c780:	777b      	strb	r3, [r7, #29]
 800c782:	e011      	b.n	800c7a8 <motor_calib_task+0xa8>
				if (error & (1 << (i))) {
 800c784:	8afa      	ldrh	r2, [r7, #22]
 800c786:	7f7b      	ldrb	r3, [r7, #29]
 800c788:	fa42 f303 	asr.w	r3, r2, r3
 800c78c:	f003 0301 	and.w	r3, r3, #1
 800c790:	2b00      	cmp	r3, #0
 800c792:	d006      	beq.n	800c7a2 <motor_calib_task+0xa2>
					bz_buzzer(1, i + 1);
 800c794:	7f7b      	ldrb	r3, [r7, #29]
 800c796:	3301      	adds	r3, #1
 800c798:	b2db      	uxtb	r3, r3
 800c79a:	4619      	mov	r1, r3
 800c79c:	2001      	movs	r0, #1
 800c79e:	f7ff fe07 	bl	800c3b0 <bz_buzzer>
			for (uint8_t i = 0; i < 4; i++) {
 800c7a2:	7f7b      	ldrb	r3, [r7, #29]
 800c7a4:	3301      	adds	r3, #1
 800c7a6:	777b      	strb	r3, [r7, #29]
 800c7a8:	7f7b      	ldrb	r3, [r7, #29]
 800c7aa:	2b03      	cmp	r3, #3
 800c7ac:	d9ea      	bls.n	800c784 <motor_calib_task+0x84>
				} else {

				}
			}
			for (uint8_t i = 4; i < 7; i++) {
 800c7ae:	2304      	movs	r3, #4
 800c7b0:	77bb      	strb	r3, [r7, #30]
 800c7b2:	e011      	b.n	800c7d8 <motor_calib_task+0xd8>
				if (error & (1 << (i))) {
 800c7b4:	8afa      	ldrh	r2, [r7, #22]
 800c7b6:	7fbb      	ldrb	r3, [r7, #30]
 800c7b8:	fa42 f303 	asr.w	r3, r2, r3
 800c7bc:	f003 0301 	and.w	r3, r3, #1
 800c7c0:	2b00      	cmp	r3, #0
 800c7c2:	d006      	beq.n	800c7d2 <motor_calib_task+0xd2>
					bz_buzzer(2, (i - 3));
 800c7c4:	7fbb      	ldrb	r3, [r7, #30]
 800c7c6:	3b03      	subs	r3, #3
 800c7c8:	b2db      	uxtb	r3, r3
 800c7ca:	4619      	mov	r1, r3
 800c7cc:	2002      	movs	r0, #2
 800c7ce:	f7ff fdef 	bl	800c3b0 <bz_buzzer>
			for (uint8_t i = 4; i < 7; i++) {
 800c7d2:	7fbb      	ldrb	r3, [r7, #30]
 800c7d4:	3301      	adds	r3, #1
 800c7d6:	77bb      	strb	r3, [r7, #30]
 800c7d8:	7fbb      	ldrb	r3, [r7, #30]
 800c7da:	2b06      	cmp	r3, #6
 800c7dc:	d9ea      	bls.n	800c7b4 <motor_calib_task+0xb4>
				}
			}
			for (uint8_t i = 7; i < 9; i++) {
 800c7de:	2307      	movs	r3, #7
 800c7e0:	77fb      	strb	r3, [r7, #31]
 800c7e2:	e011      	b.n	800c808 <motor_calib_task+0x108>
				if (error & (1 << (i))) {
 800c7e4:	8afa      	ldrh	r2, [r7, #22]
 800c7e6:	7ffb      	ldrb	r3, [r7, #31]
 800c7e8:	fa42 f303 	asr.w	r3, r2, r3
 800c7ec:	f003 0301 	and.w	r3, r3, #1
 800c7f0:	2b00      	cmp	r3, #0
 800c7f2:	d006      	beq.n	800c802 <motor_calib_task+0x102>
					bz_buzzer(3, (i - 6));
 800c7f4:	7ffb      	ldrb	r3, [r7, #31]
 800c7f6:	3b06      	subs	r3, #6
 800c7f8:	b2db      	uxtb	r3, r3
 800c7fa:	4619      	mov	r1, r3
 800c7fc:	2003      	movs	r0, #3
 800c7fe:	f7ff fdd7 	bl	800c3b0 <bz_buzzer>
			for (uint8_t i = 7; i < 9; i++) {
 800c802:	7ffb      	ldrb	r3, [r7, #31]
 800c804:	3301      	adds	r3, #1
 800c806:	77fb      	strb	r3, [r7, #31]
 800c808:	7ffb      	ldrb	r3, [r7, #31]
 800c80a:	2b08      	cmp	r3, #8
 800c80c:	d9ea      	bls.n	800c7e4 <motor_calib_task+0xe4>
				}
			}
		}

		vTaskDelay(1000);
 800c80e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 800c812:	f00e fb97 	bl	801af44 <vTaskDelay>
	while (1) {
 800c816:	e79c      	b.n	800c752 <motor_calib_task+0x52>
 800c818:	20000914 	.word	0x20000914
 800c81c:	2000093c 	.word	0x2000093c
 800c820:	20003b98 	.word	0x20003b98
 800c824:	20003b9c 	.word	0x20003b9c

0800c828 <speed_pid>:
 *
 * @param setpoint target RPM
 * @param motor's current RPM
 * @param *pid pointer to the rpm_pid struct within the motor's data struct
 */
void speed_pid(double setpoint, double curr_pt, pid_data_t *pid) {
 800c828:	b580      	push	{r7, lr}
 800c82a:	b08a      	sub	sp, #40	@ 0x28
 800c82c:	af00      	add	r7, sp, #0
 800c82e:	ed87 0b04 	vstr	d0, [r7, #16]
 800c832:	ed87 1b02 	vstr	d1, [r7, #8]
 800c836:	6078      	str	r0, [r7, #4]
	pid->last_time[1] = pid->last_time[0];
 800c838:	687b      	ldr	r3, [r7, #4]
 800c83a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	62da      	str	r2, [r3, #44]	@ 0x2c
	pid->last_time[0] = get_microseconds();
 800c840:	f7f5 fcbe 	bl	80021c0 <get_microseconds>
 800c844:	4602      	mov	r2, r0
 800c846:	687b      	ldr	r3, [r7, #4]
 800c848:	629a      	str	r2, [r3, #40]	@ 0x28
	/*
	if (pid->last_time[1]>= pid->last_time[0]) {
		return;
	} */
	uint32_t time_mult = 1;//TIMER_FREQ / (float) (pid->last_time[0] - pid->last_time[1]);
 800c84a:	2301      	movs	r3, #1
 800c84c:	627b      	str	r3, [r7, #36]	@ 0x24
	float Pout = 0;
 800c84e:	f04f 0300 	mov.w	r3, #0
 800c852:	623b      	str	r3, [r7, #32]
	float Iout = 0;
 800c854:	f04f 0300 	mov.w	r3, #0
 800c858:	61fb      	str	r3, [r7, #28]
	float Dout = 0;
 800c85a:	f04f 0300 	mov.w	r3, #0
 800c85e:	61bb      	str	r3, [r7, #24]

	pid->error[1] = pid->error[0];
 800c860:	687b      	ldr	r3, [r7, #4]
 800c862:	68da      	ldr	r2, [r3, #12]
 800c864:	687b      	ldr	r3, [r7, #4]
 800c866:	611a      	str	r2, [r3, #16]
	pid->error[0] = setpoint - curr_pt;
 800c868:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800c86c:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800c870:	f7f3 fd0a 	bl	8000288 <__aeabi_dsub>
 800c874:	4602      	mov	r2, r0
 800c876:	460b      	mov	r3, r1
 800c878:	4610      	mov	r0, r2
 800c87a:	4619      	mov	r1, r3
 800c87c:	f7f4 f9b4 	bl	8000be8 <__aeabi_d2f>
 800c880:	4602      	mov	r2, r0
 800c882:	687b      	ldr	r3, [r7, #4]
 800c884:	60da      	str	r2, [r3, #12]
	Pout = pid->error[0] * pid->kp * time_mult;
 800c886:	687b      	ldr	r3, [r7, #4]
 800c888:	ed93 7a03 	vldr	s14, [r3, #12]
 800c88c:	687b      	ldr	r3, [r7, #4]
 800c88e:	edd3 7a00 	vldr	s15, [r3]
 800c892:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c896:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c898:	ee07 3a90 	vmov	s15, r3
 800c89c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800c8a0:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c8a4:	edc7 7a08 	vstr	s15, [r7, #32]
	Dout = (float)(pid->error[0] - pid->error[1]) * pid->kd * time_mult;
 800c8a8:	687b      	ldr	r3, [r7, #4]
 800c8aa:	ed93 7a03 	vldr	s14, [r3, #12]
 800c8ae:	687b      	ldr	r3, [r7, #4]
 800c8b0:	edd3 7a04 	vldr	s15, [r3, #16]
 800c8b4:	ee37 7a67 	vsub.f32	s14, s14, s15
 800c8b8:	687b      	ldr	r3, [r7, #4]
 800c8ba:	edd3 7a02 	vldr	s15, [r3, #8]
 800c8be:	ee27 7a27 	vmul.f32	s14, s14, s15
 800c8c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c8c4:	ee07 3a90 	vmov	s15, r3
 800c8c8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800c8cc:	ee67 7a27 	vmul.f32	s15, s14, s15
 800c8d0:	edc7 7a06 	vstr	s15, [r7, #24]
	pid->integral += pid->error[0] * pid->ki * time_mult;
 800c8d4:	687b      	ldr	r3, [r7, #4]
 800c8d6:	ed93 7a05 	vldr	s14, [r3, #20]
 800c8da:	687b      	ldr	r3, [r7, #4]
 800c8dc:	edd3 6a03 	vldr	s13, [r3, #12]
 800c8e0:	687b      	ldr	r3, [r7, #4]
 800c8e2:	edd3 7a01 	vldr	s15, [r3, #4]
 800c8e6:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800c8ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c8ec:	ee07 3a90 	vmov	s15, r3
 800c8f0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800c8f4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800c8f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c8fc:	687b      	ldr	r3, [r7, #4]
 800c8fe:	edc3 7a05 	vstr	s15, [r3, #20]
	float_minmax(&pid->integral, pid->int_max, 0);
 800c902:	687b      	ldr	r3, [r7, #4]
 800c904:	f103 0214 	add.w	r2, r3, #20
 800c908:	687b      	ldr	r3, [r7, #4]
 800c90a:	edd3 7a06 	vldr	s15, [r3, #24]
 800c90e:	eddf 0a14 	vldr	s1, [pc, #80]	@ 800c960 <speed_pid+0x138>
 800c912:	eeb0 0a67 	vmov.f32	s0, s15
 800c916:	4610      	mov	r0, r2
 800c918:	f000 f82b 	bl	800c972 <float_minmax>
	Iout = pid->integral;
 800c91c:	687b      	ldr	r3, [r7, #4]
 800c91e:	695b      	ldr	r3, [r3, #20]
 800c920:	61fb      	str	r3, [r7, #28]
	pid->output = Pout + Iout + Dout;
 800c922:	ed97 7a08 	vldr	s14, [r7, #32]
 800c926:	edd7 7a07 	vldr	s15, [r7, #28]
 800c92a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c92e:	edd7 7a06 	vldr	s15, [r7, #24]
 800c932:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c936:	687b      	ldr	r3, [r7, #4]
 800c938:	edc3 7a08 	vstr	s15, [r3, #32]
	float_minmax(&pid->output, pid->max_out, 0);
 800c93c:	687b      	ldr	r3, [r7, #4]
 800c93e:	f103 0220 	add.w	r2, r3, #32
 800c942:	687b      	ldr	r3, [r7, #4]
 800c944:	edd3 7a07 	vldr	s15, [r3, #28]
 800c948:	eddf 0a05 	vldr	s1, [pc, #20]	@ 800c960 <speed_pid+0x138>
 800c94c:	eeb0 0a67 	vmov.f32	s0, s15
 800c950:	4610      	mov	r0, r2
 800c952:	f000 f80e 	bl	800c972 <float_minmax>
}
 800c956:	bf00      	nop
 800c958:	3728      	adds	r7, #40	@ 0x28
 800c95a:	46bd      	mov	sp, r7
 800c95c:	bd80      	pop	{r7, pc}
 800c95e:	bf00      	nop
 800c960:	00000000 	.word	0x00000000

0800c964 <kill_can>:
		HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data, &send_mail_box);
	}
#endif
}

void kill_can() {
 800c964:	b480      	push	{r7}
 800c966:	af00      	add	r7, sp, #0

}
 800c968:	bf00      	nop
 800c96a:	46bd      	mov	sp, r7
 800c96c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c970:	4770      	bx	lr

0800c972 <float_minmax>:
 * Limits the input float variable
 * @params motor_in: the pointer to the variable to be limited
 * @params motor_max: the positive maximum value for the variable
 */

void float_minmax(float *motor_in, float motor_max, float motor_min) {
 800c972:	b480      	push	{r7}
 800c974:	b085      	sub	sp, #20
 800c976:	af00      	add	r7, sp, #0
 800c978:	60f8      	str	r0, [r7, #12]
 800c97a:	ed87 0a02 	vstr	s0, [r7, #8]
 800c97e:	edc7 0a01 	vstr	s1, [r7, #4]
	if (*motor_in > motor_max) {
 800c982:	68fb      	ldr	r3, [r7, #12]
 800c984:	edd3 7a00 	vldr	s15, [r3]
 800c988:	ed97 7a02 	vldr	s14, [r7, #8]
 800c98c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c994:	d503      	bpl.n	800c99e <float_minmax+0x2c>
		*motor_in = motor_max;
 800c996:	68fb      	ldr	r3, [r7, #12]
 800c998:	68ba      	ldr	r2, [r7, #8]
 800c99a:	601a      	str	r2, [r3, #0]

//	if (fabs(*motor_in) < motor_min) {
//		*motor_in = 0;
//	}

}
 800c99c:	e013      	b.n	800c9c6 <float_minmax+0x54>
	} else if (*motor_in < -motor_max) {
 800c99e:	68fb      	ldr	r3, [r7, #12]
 800c9a0:	ed93 7a00 	vldr	s14, [r3]
 800c9a4:	edd7 7a02 	vldr	s15, [r7, #8]
 800c9a8:	eef1 7a67 	vneg.f32	s15, s15
 800c9ac:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9b4:	d400      	bmi.n	800c9b8 <float_minmax+0x46>
}
 800c9b6:	e006      	b.n	800c9c6 <float_minmax+0x54>
		*motor_in = -motor_max;
 800c9b8:	edd7 7a02 	vldr	s15, [r7, #8]
 800c9bc:	eef1 7a67 	vneg.f32	s15, s15
 800c9c0:	68fb      	ldr	r3, [r7, #12]
 800c9c2:	edc3 7a00 	vstr	s15, [r3]
}
 800c9c6:	bf00      	nop
 800c9c8:	3714      	adds	r7, #20
 800c9ca:	46bd      	mov	sp, r7
 800c9cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9d0:	4770      	bx	lr
	...

0800c9d4 <motor_control_task>:
extern QueueHandle_t g_buzzing_task_msg;
extern remote_cmd_t g_remote_cmd;

extern uint8_t g_safety_toggle;
volatile uint32_t g_motor_control_time;
void motor_control_task(void *argument) {
 800c9d4:	b580      	push	{r7, lr}
 800c9d6:	b090      	sub	sp, #64	@ 0x40
 800c9d8:	af00      	add	r7, sp, #0
 800c9da:	6078      	str	r0, [r7, #4]
	CAN_TxHeaderTypeDef CAN_tx_message;
	uint8_t CAN_send_data[8];
	uint32_t send_mail_box;
	int16_t temp_converter;
	CAN_tx_message.IDE = CAN_ID_STD;
 800c9dc:	2300      	movs	r3, #0
 800c9de:	627b      	str	r3, [r7, #36]	@ 0x24
	CAN_tx_message.RTR = CAN_RTR_DATA;
 800c9e0:	2300      	movs	r3, #0
 800c9e2:	62bb      	str	r3, [r7, #40]	@ 0x28
	CAN_tx_message.DLC = 0x08;
 800c9e4:	2308      	movs	r3, #8
 800c9e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
	uint32_t enabled_motors = 0;
 800c9e8:	2300      	movs	r3, #0
 800c9ea:	63bb      	str	r3, [r7, #56]	@ 0x38
	//initialise motor data
#ifdef LEFT_MOTOR_ID
	if (LEFT_MOTOR_ID < 25 && LEFT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LEFT_MOTOR_ID - 1);
 800c9ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800c9ee:	f043 0301 	orr.w	r3, r3, #1
 800c9f2:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RIGHT_MOTOR_ID
	if (RIGHT_MOTOR_ID < 25 && RIGHT_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RIGHT_MOTOR_ID - 1);
 800c9f4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800c9f6:	f043 0302 	orr.w	r3, r3, #2
 800c9fa:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
#ifdef FR_MOTOR_ID
	if (FR_MOTOR_ID < 25 && FR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FR_MOTOR_ID - 1);
 800c9fc:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800c9fe:	f043 0310 	orr.w	r3, r3, #16
 800ca02:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FL_MOTOR_ID
	if (FL_MOTOR_ID < 25 && FL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FL_MOTOR_ID - 1);
 800ca04:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca06:	f043 0320 	orr.w	r3, r3, #32
 800ca0a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BL_MOTOR_ID
	if (BL_MOTOR_ID < 25 && BL_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BL_MOTOR_ID - 1);
 800ca0c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca0e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ca12:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef BR_MOTOR_ID
	if (BR_MOTOR_ID < 25 && BR_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (BR_MOTOR_ID - 1);
 800ca14:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca16:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ca1a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef LFRICTION_MOTOR_ID
	if (LFRICTION_MOTOR_ID < 25 && LFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (LFRICTION_MOTOR_ID - 1);
 800ca1c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca1e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800ca22:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef RFRICTION_MOTOR_ID
	if (RFRICTION_MOTOR_ID < 25 && RFRICTION_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (RFRICTION_MOTOR_ID - 1);
 800ca24:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca26:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800ca2a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef FEEDER_MOTOR_ID
	if (FEEDER_MOTOR_ID < 25 && FEEDER_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (FEEDER_MOTOR_ID - 1);
 800ca2c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca2e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800ca32:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef PITCH_MOTOR_ID
	if (PITCH_MOTOR_ID < 25 && PITCH_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (PITCH_MOTOR_ID - 1);
 800ca34:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca36:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ca3a:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif

#ifdef YAW_MOTOR_ID
	if (YAW_MOTOR_ID < 25 && YAW_MOTOR_ID > 0) {
		enabled_motors = enabled_motors | 1 << (YAW_MOTOR_ID - 1);
 800ca3c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ca3e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800ca42:	63bb      	str	r3, [r7, #56]	@ 0x38
	}
#endif
	TickType_t start_time;
//	uint32_t last_time;
	while (1) {
		start_time = xTaskGetTickCount();
 800ca44:	f00e fbd2 	bl	801b1ec <xTaskGetTickCount>
 800ca48:	4603      	mov	r3, r0
 800ca4a:	60fb      	str	r3, [r7, #12]
		if (g_remote_cmd.right_switch == ge_RSW_SHUTDOWN){
 800ca4c:	4b30      	ldr	r3, [pc, #192]	@ (800cb10 <motor_control_task+0x13c>)
 800ca4e:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800ca52:	2b01      	cmp	r3, #1
 800ca54:	d162      	bne.n	800cb1c <motor_control_task+0x148>
			CAN_send_data[0] = 0;
 800ca56:	2300      	movs	r3, #0
 800ca58:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = 0;
 800ca5a:	2300      	movs	r3, #0
 800ca5c:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = 0;
 800ca5e:	2300      	movs	r3, #0
 800ca60:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = 0;
 800ca62:	2300      	movs	r3, #0
 800ca64:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = 0;
 800ca66:	2300      	movs	r3, #0
 800ca68:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = 0;
 800ca6a:	2300      	movs	r3, #0
 800ca6c:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = 0;
 800ca6e:	2300      	movs	r3, #0
 800ca70:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = 0;
 800ca72:	2300      	movs	r3, #0
 800ca74:	76fb      	strb	r3, [r7, #27]
			CAN_tx_message.StdId = 0x200;
 800ca76:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800ca7a:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800ca7c:	f107 0310 	add.w	r3, r7, #16
 800ca80:	f107 0214 	add.w	r2, r7, #20
 800ca84:	f107 011c 	add.w	r1, r7, #28
 800ca88:	4822      	ldr	r0, [pc, #136]	@ (800cb14 <motor_control_task+0x140>)
 800ca8a:	f001 fd47 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800ca8e:	f107 0310 	add.w	r3, r7, #16
 800ca92:	f107 0214 	add.w	r2, r7, #20
 800ca96:	f107 011c 	add.w	r1, r7, #28
 800ca9a:	481f      	ldr	r0, [pc, #124]	@ (800cb18 <motor_control_task+0x144>)
 800ca9c:	f001 fd3e 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);
 800caa0:	2001      	movs	r0, #1
 800caa2:	f00e fa4f 	bl	801af44 <vTaskDelay>
			CAN_tx_message.StdId = 0x1FF;
 800caa6:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800caaa:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800caac:	f107 0310 	add.w	r3, r7, #16
 800cab0:	f107 0214 	add.w	r2, r7, #20
 800cab4:	f107 011c 	add.w	r1, r7, #28
 800cab8:	4816      	ldr	r0, [pc, #88]	@ (800cb14 <motor_control_task+0x140>)
 800caba:	f001 fd2f 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800cabe:	f107 0310 	add.w	r3, r7, #16
 800cac2:	f107 0214 	add.w	r2, r7, #20
 800cac6:	f107 011c 	add.w	r1, r7, #28
 800caca:	4813      	ldr	r0, [pc, #76]	@ (800cb18 <motor_control_task+0x144>)
 800cacc:	f001 fd26 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelay(1);;
 800cad0:	2001      	movs	r0, #1
 800cad2:	f00e fa37 	bl	801af44 <vTaskDelay>
			CAN_tx_message.StdId = 0x2FF;
 800cad6:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800cada:	61fb      	str	r3, [r7, #28]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800cadc:	f107 0310 	add.w	r3, r7, #16
 800cae0:	f107 0214 	add.w	r2, r7, #20
 800cae4:	f107 011c 	add.w	r1, r7, #28
 800cae8:	480a      	ldr	r0, [pc, #40]	@ (800cb14 <motor_control_task+0x140>)
 800caea:	f001 fd17 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);;
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800caee:	f107 0310 	add.w	r3, r7, #16
 800caf2:	f107 0214 	add.w	r2, r7, #20
 800caf6:	f107 011c 	add.w	r1, r7, #28
 800cafa:	4807      	ldr	r0, [pc, #28]	@ (800cb18 <motor_control_task+0x144>)
 800cafc:	f001 fd0e 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			vTaskDelayUntil(&start_time, 5);
 800cb00:	f107 030c 	add.w	r3, r7, #12
 800cb04:	2105      	movs	r1, #5
 800cb06:	4618      	mov	r0, r3
 800cb08:	f00e f99c 	bl	801ae44 <vTaskDelayUntil>
			continue;
 800cb0c:	e1dd      	b.n	800ceca <motor_control_task+0x4f6>
 800cb0e:	bf00      	nop
 800cb10:	20000838 	.word	0x20000838
 800cb14:	20000914 	.word	0x20000914
 800cb18:	2000093c 	.word	0x2000093c
		}
		TickType_t delay = 0;
 800cb1c:	2300      	movs	r3, #0
 800cb1e:	63fb      	str	r3, [r7, #60]	@ 0x3c
		if (enabled_motors & 0x00000F) {
 800cb20:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800cb22:	f003 030f 	and.w	r3, r3, #15
 800cb26:	2b00      	cmp	r3, #0
 800cb28:	d042      	beq.n	800cbb0 <motor_control_task+0x1dc>
			CAN_tx_message.StdId = 0x200;
 800cb2a:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800cb2e:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x0].output;
 800cb30:	4bb3      	ldr	r3, [pc, #716]	@ (800ce00 <motor_control_task+0x42c>)
 800cb32:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	@ 0xe0
 800cb36:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800cb38:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cb3c:	121b      	asrs	r3, r3, #8
 800cb3e:	b21b      	sxth	r3, r3
 800cb40:	b2db      	uxtb	r3, r3
 800cb42:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800cb44:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cb46:	b2db      	uxtb	r3, r3
 800cb48:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x1].output;
 800cb4a:	4bad      	ldr	r3, [pc, #692]	@ (800ce00 <motor_control_task+0x42c>)
 800cb4c:	f8b3 31d0 	ldrh.w	r3, [r3, #464]	@ 0x1d0
 800cb50:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800cb52:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cb56:	121b      	asrs	r3, r3, #8
 800cb58:	b21b      	sxth	r3, r3
 800cb5a:	b2db      	uxtb	r3, r3
 800cb5c:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800cb5e:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cb60:	b2db      	uxtb	r3, r3
 800cb62:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x2].output;
 800cb64:	4ba6      	ldr	r3, [pc, #664]	@ (800ce00 <motor_control_task+0x42c>)
 800cb66:	f8b3 32c0 	ldrh.w	r3, [r3, #704]	@ 0x2c0
 800cb6a:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800cb6c:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cb70:	121b      	asrs	r3, r3, #8
 800cb72:	b21b      	sxth	r3, r3
 800cb74:	b2db      	uxtb	r3, r3
 800cb76:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800cb78:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cb7a:	b2db      	uxtb	r3, r3
 800cb7c:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x3].output;
 800cb7e:	4ba0      	ldr	r3, [pc, #640]	@ (800ce00 <motor_control_task+0x42c>)
 800cb80:	f8b3 33b0 	ldrh.w	r3, [r3, #944]	@ 0x3b0
 800cb84:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800cb86:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cb8a:	121b      	asrs	r3, r3, #8
 800cb8c:	b21b      	sxth	r3, r3
 800cb8e:	b2db      	uxtb	r3, r3
 800cb90:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800cb92:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cb94:	b2db      	uxtb	r3, r3
 800cb96:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800cb98:	f107 0310 	add.w	r3, r7, #16
 800cb9c:	f107 0214 	add.w	r2, r7, #20
 800cba0:	f107 011c 	add.w	r1, r7, #28
 800cba4:	4897      	ldr	r0, [pc, #604]	@ (800ce04 <motor_control_task+0x430>)
 800cba6:	f001 fcb9 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800cbaa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800cbac:	3301      	adds	r3, #1
 800cbae:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		if (enabled_motors & 0x00F000) {
 800cbb0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800cbb2:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800cbb6:	2b00      	cmp	r3, #0
 800cbb8:	d03e      	beq.n	800cc38 <motor_control_task+0x264>
			CAN_tx_message.StdId = 0x200;
 800cbba:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800cbbe:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x0 + 12].output >> 8;
 800cbc0:	4b8f      	ldr	r3, [pc, #572]	@ (800ce00 <motor_control_task+0x42c>)
 800cbc2:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800cbc6:	121b      	asrs	r3, r3, #8
 800cbc8:	b21b      	sxth	r3, r3
 800cbca:	b2db      	uxtb	r3, r3
 800cbcc:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x0 + 12].output;
 800cbce:	4b8c      	ldr	r3, [pc, #560]	@ (800ce00 <motor_control_task+0x42c>)
 800cbd0:	f9b3 3c20 	ldrsh.w	r3, [r3, #3104]	@ 0xc20
 800cbd4:	b2db      	uxtb	r3, r3
 800cbd6:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x1 + 12].output >> 8;
 800cbd8:	4b89      	ldr	r3, [pc, #548]	@ (800ce00 <motor_control_task+0x42c>)
 800cbda:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800cbde:	121b      	asrs	r3, r3, #8
 800cbe0:	b21b      	sxth	r3, r3
 800cbe2:	b2db      	uxtb	r3, r3
 800cbe4:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x1 + 12].output;
 800cbe6:	4b86      	ldr	r3, [pc, #536]	@ (800ce00 <motor_control_task+0x42c>)
 800cbe8:	f9b3 3d10 	ldrsh.w	r3, [r3, #3344]	@ 0xd10
 800cbec:	b2db      	uxtb	r3, r3
 800cbee:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x2 + 12].output >> 8;
 800cbf0:	4b83      	ldr	r3, [pc, #524]	@ (800ce00 <motor_control_task+0x42c>)
 800cbf2:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800cbf6:	121b      	asrs	r3, r3, #8
 800cbf8:	b21b      	sxth	r3, r3
 800cbfa:	b2db      	uxtb	r3, r3
 800cbfc:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x2 + 12].output;
 800cbfe:	4b80      	ldr	r3, [pc, #512]	@ (800ce00 <motor_control_task+0x42c>)
 800cc00:	f9b3 3e00 	ldrsh.w	r3, [r3, #3584]	@ 0xe00
 800cc04:	b2db      	uxtb	r3, r3
 800cc06:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x3 + 12].output >> 8;
 800cc08:	4b7d      	ldr	r3, [pc, #500]	@ (800ce00 <motor_control_task+0x42c>)
 800cc0a:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800cc0e:	121b      	asrs	r3, r3, #8
 800cc10:	b21b      	sxth	r3, r3
 800cc12:	b2db      	uxtb	r3, r3
 800cc14:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x3 + 12].output;
 800cc16:	4b7a      	ldr	r3, [pc, #488]	@ (800ce00 <motor_control_task+0x42c>)
 800cc18:	f9b3 3ef0 	ldrsh.w	r3, [r3, #3824]	@ 0xef0
 800cc1c:	b2db      	uxtb	r3, r3
 800cc1e:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800cc20:	f107 0310 	add.w	r3, r7, #16
 800cc24:	f107 0214 	add.w	r2, r7, #20
 800cc28:	f107 011c 	add.w	r1, r7, #28
 800cc2c:	4876      	ldr	r0, [pc, #472]	@ (800ce08 <motor_control_task+0x434>)
 800cc2e:	f001 fc75 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800cc32:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800cc34:	3301      	adds	r3, #1
 800cc36:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}

		vTaskDelay(1);
 800cc38:	2001      	movs	r0, #1
 800cc3a:	f00e f983 	bl	801af44 <vTaskDelay>

		if (enabled_motors & 0x0000F0) {
 800cc3e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800cc40:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800cc44:	2b00      	cmp	r3, #0
 800cc46:	d042      	beq.n	800ccce <motor_control_task+0x2fa>
			CAN_tx_message.StdId = 0x1FF;
 800cc48:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800cc4c:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x4].output;
 800cc4e:	4b6c      	ldr	r3, [pc, #432]	@ (800ce00 <motor_control_task+0x42c>)
 800cc50:	f8b3 34a0 	ldrh.w	r3, [r3, #1184]	@ 0x4a0
 800cc54:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800cc56:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cc5a:	121b      	asrs	r3, r3, #8
 800cc5c:	b21b      	sxth	r3, r3
 800cc5e:	b2db      	uxtb	r3, r3
 800cc60:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800cc62:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cc64:	b2db      	uxtb	r3, r3
 800cc66:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x5].output;
 800cc68:	4b65      	ldr	r3, [pc, #404]	@ (800ce00 <motor_control_task+0x42c>)
 800cc6a:	f8b3 3590 	ldrh.w	r3, [r3, #1424]	@ 0x590
 800cc6e:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800cc70:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cc74:	121b      	asrs	r3, r3, #8
 800cc76:	b21b      	sxth	r3, r3
 800cc78:	b2db      	uxtb	r3, r3
 800cc7a:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800cc7c:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cc7e:	b2db      	uxtb	r3, r3
 800cc80:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0x6].output;
 800cc82:	4b5f      	ldr	r3, [pc, #380]	@ (800ce00 <motor_control_task+0x42c>)
 800cc84:	f8b3 3680 	ldrh.w	r3, [r3, #1664]	@ 0x680
 800cc88:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800cc8a:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cc8e:	121b      	asrs	r3, r3, #8
 800cc90:	b21b      	sxth	r3, r3
 800cc92:	b2db      	uxtb	r3, r3
 800cc94:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800cc96:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cc98:	b2db      	uxtb	r3, r3
 800cc9a:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0x7].output;
 800cc9c:	4b58      	ldr	r3, [pc, #352]	@ (800ce00 <motor_control_task+0x42c>)
 800cc9e:	f8b3 3770 	ldrh.w	r3, [r3, #1904]	@ 0x770
 800cca2:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800cca4:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cca8:	121b      	asrs	r3, r3, #8
 800ccaa:	b21b      	sxth	r3, r3
 800ccac:	b2db      	uxtb	r3, r3
 800ccae:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800ccb0:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800ccb2:	b2db      	uxtb	r3, r3
 800ccb4:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800ccb6:	f107 0310 	add.w	r3, r7, #16
 800ccba:	f107 0214 	add.w	r2, r7, #20
 800ccbe:	f107 011c 	add.w	r1, r7, #28
 800ccc2:	4850      	ldr	r0, [pc, #320]	@ (800ce04 <motor_control_task+0x430>)
 800ccc4:	f001 fc2a 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800ccc8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800ccca:	3301      	adds	r3, #1
 800cccc:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x0F0000) {
 800ccce:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ccd0:	f403 2370 	and.w	r3, r3, #983040	@ 0xf0000
 800ccd4:	2b00      	cmp	r3, #0
 800ccd6:	d04a      	beq.n	800cd6e <motor_control_task+0x39a>
			CAN_tx_message.StdId = 0x1FF;
 800ccd8:	f240 13ff 	movw	r3, #511	@ 0x1ff
 800ccdc:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x4 + 12].output >> 8;
 800ccde:	4b48      	ldr	r3, [pc, #288]	@ (800ce00 <motor_control_task+0x42c>)
 800cce0:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800cce4:	121b      	asrs	r3, r3, #8
 800cce6:	b21b      	sxth	r3, r3
 800cce8:	b2db      	uxtb	r3, r3
 800ccea:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x4 + 12].output;
 800ccec:	4b44      	ldr	r3, [pc, #272]	@ (800ce00 <motor_control_task+0x42c>)
 800ccee:	f9b3 3fe0 	ldrsh.w	r3, [r3, #4064]	@ 0xfe0
 800ccf2:	b2db      	uxtb	r3, r3
 800ccf4:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] = g_can_motors[0x5 + 12].output >> 8;
 800ccf6:	4b42      	ldr	r3, [pc, #264]	@ (800ce00 <motor_control_task+0x42c>)
 800ccf8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ccfc:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800cd00:	121b      	asrs	r3, r3, #8
 800cd02:	b21b      	sxth	r3, r3
 800cd04:	b2db      	uxtb	r3, r3
 800cd06:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = g_can_motors[0x5 + 12].output;
 800cd08:	4b3d      	ldr	r3, [pc, #244]	@ (800ce00 <motor_control_task+0x42c>)
 800cd0a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cd0e:	f9b3 30d0 	ldrsh.w	r3, [r3, #208]	@ 0xd0
 800cd12:	b2db      	uxtb	r3, r3
 800cd14:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0x6 + 12].output >> 8;
 800cd16:	4b3a      	ldr	r3, [pc, #232]	@ (800ce00 <motor_control_task+0x42c>)
 800cd18:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cd1c:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800cd20:	121b      	asrs	r3, r3, #8
 800cd22:	b21b      	sxth	r3, r3
 800cd24:	b2db      	uxtb	r3, r3
 800cd26:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0x6 + 12].output;
 800cd28:	4b35      	ldr	r3, [pc, #212]	@ (800ce00 <motor_control_task+0x42c>)
 800cd2a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cd2e:	f9b3 31c0 	ldrsh.w	r3, [r3, #448]	@ 0x1c0
 800cd32:	b2db      	uxtb	r3, r3
 800cd34:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0x7 + 12].output >> 8;
 800cd36:	4b32      	ldr	r3, [pc, #200]	@ (800ce00 <motor_control_task+0x42c>)
 800cd38:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cd3c:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800cd40:	121b      	asrs	r3, r3, #8
 800cd42:	b21b      	sxth	r3, r3
 800cd44:	b2db      	uxtb	r3, r3
 800cd46:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0x7 + 12].output;
 800cd48:	4b2d      	ldr	r3, [pc, #180]	@ (800ce00 <motor_control_task+0x42c>)
 800cd4a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800cd4e:	f9b3 32b0 	ldrsh.w	r3, [r3, #688]	@ 0x2b0
 800cd52:	b2db      	uxtb	r3, r3
 800cd54:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800cd56:	f107 0310 	add.w	r3, r7, #16
 800cd5a:	f107 0214 	add.w	r2, r7, #20
 800cd5e:	f107 011c 	add.w	r1, r7, #28
 800cd62:	4829      	ldr	r0, [pc, #164]	@ (800ce08 <motor_control_task+0x434>)
 800cd64:	f001 fbda 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800cd68:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800cd6a:	3301      	adds	r3, #1
 800cd6c:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}


		if (enabled_motors & 0x000F00) {
 800cd6e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800cd70:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800cd74:	2b00      	cmp	r3, #0
 800cd76:	d049      	beq.n	800ce0c <motor_control_task+0x438>
			CAN_tx_message.StdId = 0x2FF;
 800cd78:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800cd7c:	61fb      	str	r3, [r7, #28]
			temp_converter = g_can_motors[0x8].output;
 800cd7e:	4b20      	ldr	r3, [pc, #128]	@ (800ce00 <motor_control_task+0x42c>)
 800cd80:	f8b3 3860 	ldrh.w	r3, [r3, #2144]	@ 0x860
 800cd84:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[0] = temp_converter >> 8;
 800cd86:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cd8a:	121b      	asrs	r3, r3, #8
 800cd8c:	b21b      	sxth	r3, r3
 800cd8e:	b2db      	uxtb	r3, r3
 800cd90:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = temp_converter;
 800cd92:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cd94:	b2db      	uxtb	r3, r3
 800cd96:	757b      	strb	r3, [r7, #21]
			temp_converter = g_can_motors[0x9].output;
 800cd98:	4b19      	ldr	r3, [pc, #100]	@ (800ce00 <motor_control_task+0x42c>)
 800cd9a:	f8b3 3950 	ldrh.w	r3, [r3, #2384]	@ 0x950
 800cd9e:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[2] = temp_converter >> 8;
 800cda0:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cda4:	121b      	asrs	r3, r3, #8
 800cda6:	b21b      	sxth	r3, r3
 800cda8:	b2db      	uxtb	r3, r3
 800cdaa:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] = temp_converter;
 800cdac:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cdae:	b2db      	uxtb	r3, r3
 800cdb0:	75fb      	strb	r3, [r7, #23]
			temp_converter = g_can_motors[0xA].output;
 800cdb2:	4b13      	ldr	r3, [pc, #76]	@ (800ce00 <motor_control_task+0x42c>)
 800cdb4:	f8b3 3a40 	ldrh.w	r3, [r3, #2624]	@ 0xa40
 800cdb8:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[4] = temp_converter >> 8;
 800cdba:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cdbe:	121b      	asrs	r3, r3, #8
 800cdc0:	b21b      	sxth	r3, r3
 800cdc2:	b2db      	uxtb	r3, r3
 800cdc4:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = temp_converter;
 800cdc6:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cdc8:	b2db      	uxtb	r3, r3
 800cdca:	767b      	strb	r3, [r7, #25]
			temp_converter = g_can_motors[0xB].output;
 800cdcc:	4b0c      	ldr	r3, [pc, #48]	@ (800ce00 <motor_control_task+0x42c>)
 800cdce:	f8b3 3b30 	ldrh.w	r3, [r3, #2864]	@ 0xb30
 800cdd2:	86fb      	strh	r3, [r7, #54]	@ 0x36
			CAN_send_data[6] = temp_converter >> 8;
 800cdd4:	f9b7 3036 	ldrsh.w	r3, [r7, #54]	@ 0x36
 800cdd8:	121b      	asrs	r3, r3, #8
 800cdda:	b21b      	sxth	r3, r3
 800cddc:	b2db      	uxtb	r3, r3
 800cdde:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = temp_converter;
 800cde0:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800cde2:	b2db      	uxtb	r3, r3
 800cde4:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan1, &CAN_tx_message, CAN_send_data,
 800cde6:	f107 0310 	add.w	r3, r7, #16
 800cdea:	f107 0214 	add.w	r2, r7, #20
 800cdee:	f107 011c 	add.w	r1, r7, #28
 800cdf2:	4804      	ldr	r0, [pc, #16]	@ (800ce04 <motor_control_task+0x430>)
 800cdf4:	f001 fb92 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800cdf8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800cdfa:	3301      	adds	r3, #1
 800cdfc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800cdfe:	e005      	b.n	800ce0c <motor_control_task+0x438>
 800ce00:	20002220 	.word	0x20002220
 800ce04:	20000914 	.word	0x20000914
 800ce08:	2000093c 	.word	0x2000093c
		}

		if (enabled_motors & 0xF00000) {
 800ce0c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ce0e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 800ce12:	2b00      	cmp	r3, #0
 800ce14:	d04e      	beq.n	800ceb4 <motor_control_task+0x4e0>
			CAN_tx_message.StdId = 0x2FF;
 800ce16:	f240 23ff 	movw	r3, #767	@ 0x2ff
 800ce1a:	61fb      	str	r3, [r7, #28]
			CAN_send_data[0] = g_can_motors[0x8 + 12].output >> 8;
 800ce1c:	4b2b      	ldr	r3, [pc, #172]	@ (800cecc <motor_control_task+0x4f8>)
 800ce1e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce22:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800ce26:	121b      	asrs	r3, r3, #8
 800ce28:	b21b      	sxth	r3, r3
 800ce2a:	b2db      	uxtb	r3, r3
 800ce2c:	753b      	strb	r3, [r7, #20]
			CAN_send_data[1] = g_can_motors[0x8 + 12].output;
 800ce2e:	4b27      	ldr	r3, [pc, #156]	@ (800cecc <motor_control_task+0x4f8>)
 800ce30:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce34:	f9b3 33a0 	ldrsh.w	r3, [r3, #928]	@ 0x3a0
 800ce38:	b2db      	uxtb	r3, r3
 800ce3a:	757b      	strb	r3, [r7, #21]
			CAN_send_data[2] =  g_can_motors[0x9 + 12].output >> 8;
 800ce3c:	4b23      	ldr	r3, [pc, #140]	@ (800cecc <motor_control_task+0x4f8>)
 800ce3e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce42:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800ce46:	121b      	asrs	r3, r3, #8
 800ce48:	b21b      	sxth	r3, r3
 800ce4a:	b2db      	uxtb	r3, r3
 800ce4c:	75bb      	strb	r3, [r7, #22]
			CAN_send_data[3] =  g_can_motors[0x9 + 12].output;
 800ce4e:	4b1f      	ldr	r3, [pc, #124]	@ (800cecc <motor_control_task+0x4f8>)
 800ce50:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce54:	f9b3 3490 	ldrsh.w	r3, [r3, #1168]	@ 0x490
 800ce58:	b2db      	uxtb	r3, r3
 800ce5a:	75fb      	strb	r3, [r7, #23]
			CAN_send_data[4] = g_can_motors[0xA + 12].output >> 8;
 800ce5c:	4b1b      	ldr	r3, [pc, #108]	@ (800cecc <motor_control_task+0x4f8>)
 800ce5e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce62:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800ce66:	121b      	asrs	r3, r3, #8
 800ce68:	b21b      	sxth	r3, r3
 800ce6a:	b2db      	uxtb	r3, r3
 800ce6c:	763b      	strb	r3, [r7, #24]
			CAN_send_data[5] = g_can_motors[0xA + 12].output;
 800ce6e:	4b17      	ldr	r3, [pc, #92]	@ (800cecc <motor_control_task+0x4f8>)
 800ce70:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce74:	f9b3 3580 	ldrsh.w	r3, [r3, #1408]	@ 0x580
 800ce78:	b2db      	uxtb	r3, r3
 800ce7a:	767b      	strb	r3, [r7, #25]
			CAN_send_data[6] = g_can_motors[0xB + 12].output >> 8;
 800ce7c:	4b13      	ldr	r3, [pc, #76]	@ (800cecc <motor_control_task+0x4f8>)
 800ce7e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce82:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800ce86:	121b      	asrs	r3, r3, #8
 800ce88:	b21b      	sxth	r3, r3
 800ce8a:	b2db      	uxtb	r3, r3
 800ce8c:	76bb      	strb	r3, [r7, #26]
			CAN_send_data[7] = g_can_motors[0xB + 12].output;
 800ce8e:	4b0f      	ldr	r3, [pc, #60]	@ (800cecc <motor_control_task+0x4f8>)
 800ce90:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800ce94:	f9b3 3670 	ldrsh.w	r3, [r3, #1648]	@ 0x670
 800ce98:	b2db      	uxtb	r3, r3
 800ce9a:	76fb      	strb	r3, [r7, #27]
			HAL_CAN_AddTxMessage(&hcan2, &CAN_tx_message, CAN_send_data,
 800ce9c:	f107 0310 	add.w	r3, r7, #16
 800cea0:	f107 0214 	add.w	r2, r7, #20
 800cea4:	f107 011c 	add.w	r1, r7, #28
 800cea8:	4809      	ldr	r0, [pc, #36]	@ (800ced0 <motor_control_task+0x4fc>)
 800ceaa:	f001 fb37 	bl	800e51c <HAL_CAN_AddTxMessage>
					&send_mail_box);
			delay++;
 800ceae:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800ceb0:	3301      	adds	r3, #1
 800ceb2:	63fb      	str	r3, [r7, #60]	@ 0x3c
		}
		delay = (delay > 5) ? delay : 5;
 800ceb4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800ceb6:	2b05      	cmp	r3, #5
 800ceb8:	bf38      	it	cc
 800ceba:	2305      	movcc	r3, #5
 800cebc:	63fb      	str	r3, [r7, #60]	@ 0x3c
//		last_time = get_microseconds();
		vTaskDelayUntil(&start_time, 2);
 800cebe:	f107 030c 	add.w	r3, r7, #12
 800cec2:	2102      	movs	r1, #2
 800cec4:	4618      	mov	r0, r3
 800cec6:	f00d ffbd 	bl	801ae44 <vTaskDelayUntil>
	while (1) {
 800ceca:	e5bb      	b.n	800ca44 <motor_control_task+0x70>
 800cecc:	20002220 	.word	0x20002220
 800ced0:	2000093c 	.word	0x2000093c
 800ced4:	00000000 	.word	0x00000000

0800ced8 <motors_process_task>:
double rev[24] = {0};
extern float motorOutRatio;



void motors_process_task(void *argument) {
 800ced8:	b5b0      	push	{r4, r5, r7, lr}
 800ceda:	b08e      	sub	sp, #56	@ 0x38
 800cedc:	af00      	add	r7, sp, #0
 800cede:	6078      	str	r0, [r7, #4]
	double starttime = 0;
 800cee0:	f04f 0200 	mov.w	r2, #0
 800cee4:	f04f 0300 	mov.w	r3, #0
 800cee8:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30
	double endtime = 0;
 800ceec:	f04f 0200 	mov.w	r2, #0
 800cef0:	f04f 0300 	mov.w	r3, #0
 800cef4:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
	double dt;
	vTaskDelay(5);
 800cef8:	2005      	movs	r0, #5
 800cefa:	f00e f823 	bl	801af44 <vTaskDelay>
	double leftWheel_offset = (double)g_can_motors[1].raw_data.angle[0];
 800cefe:	4b7c      	ldr	r3, [pc, #496]	@ (800d0f0 <motors_process_task+0x218>)
 800cf00:	f9b3 30f4 	ldrsh.w	r3, [r3, #244]	@ 0xf4
 800cf04:	4618      	mov	r0, r3
 800cf06:	f7f3 fb0d 	bl	8000524 <__aeabi_i2d>
 800cf0a:	4602      	mov	r2, r0
 800cf0c:	460b      	mov	r3, r1
 800cf0e:	e9c7 2308 	strd	r2, r3, [r7, #32]
	double rightWheel_offset = (double)g_can_motors[0].raw_data.angle[0];
 800cf12:	4b77      	ldr	r3, [pc, #476]	@ (800d0f0 <motors_process_task+0x218>)
 800cf14:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800cf18:	4618      	mov	r0, r3
 800cf1a:	f7f3 fb03 	bl	8000524 <__aeabi_i2d>
 800cf1e:	4602      	mov	r2, r0
 800cf20:	460b      	mov	r3, r1
 800cf22:	e9c7 2306 	strd	r2, r3, [r7, #24]
	g_can_motors[1].rpm_pid.kp = 5000;
 800cf26:	4b72      	ldr	r3, [pc, #456]	@ (800d0f0 <motors_process_task+0x218>)
 800cf28:	4a72      	ldr	r2, [pc, #456]	@ (800d0f4 <motors_process_task+0x21c>)
 800cf2a:	f8c3 2128 	str.w	r2, [r3, #296]	@ 0x128
	g_can_motors[0].rpm_pid.kp = 5000;
 800cf2e:	4b70      	ldr	r3, [pc, #448]	@ (800d0f0 <motors_process_task+0x218>)
 800cf30:	4a70      	ldr	r2, [pc, #448]	@ (800d0f4 <motors_process_task+0x21c>)
 800cf32:	639a      	str	r2, [r3, #56]	@ 0x38
	g_can_motors[1].rpm_pid.ki = 0;
 800cf34:	4b6e      	ldr	r3, [pc, #440]	@ (800d0f0 <motors_process_task+0x218>)
 800cf36:	f04f 0200 	mov.w	r2, #0
 800cf3a:	f8c3 212c 	str.w	r2, [r3, #300]	@ 0x12c
	g_can_motors[0].rpm_pid.ki = 0;
 800cf3e:	4b6c      	ldr	r3, [pc, #432]	@ (800d0f0 <motors_process_task+0x218>)
 800cf40:	f04f 0200 	mov.w	r2, #0
 800cf44:	63da      	str	r2, [r3, #60]	@ 0x3c
	g_can_motors[1].rpm_pid.kd = 0;
 800cf46:	4b6a      	ldr	r3, [pc, #424]	@ (800d0f0 <motors_process_task+0x218>)
 800cf48:	f04f 0200 	mov.w	r2, #0
 800cf4c:	f8c3 2130 	str.w	r2, [r3, #304]	@ 0x130
	g_can_motors[0].rpm_pid.kd = 0;
 800cf50:	4b67      	ldr	r3, [pc, #412]	@ (800d0f0 <motors_process_task+0x218>)
 800cf52:	f04f 0200 	mov.w	r2, #0
 800cf56:	641a      	str	r2, [r3, #64]	@ 0x40
	g_can_motors[1].rpm_pid.max_out = 10000;
 800cf58:	4b65      	ldr	r3, [pc, #404]	@ (800d0f0 <motors_process_task+0x218>)
 800cf5a:	4a67      	ldr	r2, [pc, #412]	@ (800d0f8 <motors_process_task+0x220>)
 800cf5c:	f8c3 2144 	str.w	r2, [r3, #324]	@ 0x144
	g_can_motors[0].rpm_pid.max_out = 10000;
 800cf60:	4b63      	ldr	r3, [pc, #396]	@ (800d0f0 <motors_process_task+0x218>)
 800cf62:	4a65      	ldr	r2, [pc, #404]	@ (800d0f8 <motors_process_task+0x220>)
 800cf64:	655a      	str	r2, [r3, #84]	@ 0x54
    TickType_t start_time;
    while (1) {
        endtime = get_microseconds();
 800cf66:	f7f5 f92b 	bl	80021c0 <get_microseconds>
 800cf6a:	4603      	mov	r3, r0
 800cf6c:	4618      	mov	r0, r3
 800cf6e:	f7f3 fac9 	bl	8000504 <__aeabi_ui2d>
 800cf72:	4602      	mov	r2, r0
 800cf74:	460b      	mov	r3, r1
 800cf76:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
        dt = endtime - starttime;
 800cf7a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 800cf7e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800cf82:	f7f3 f981 	bl	8000288 <__aeabi_dsub>
 800cf86:	4602      	mov	r2, r0
 800cf88:	460b      	mov	r3, r1
 800cf8a:	e9c7 2304 	strd	r2, r3, [r7, #16]
        start_time = xTaskGetTickCount();
 800cf8e:	f00e f92d 	bl	801b1ec <xTaskGetTickCount>
 800cf92:	4603      	mov	r3, r0
 800cf94:	60fb      	str	r3, [r7, #12]
        raw_angle_to_rad(g_can_motors); // Pass the array directly
 800cf96:	4856      	ldr	r0, [pc, #344]	@ (800d0f0 <motors_process_task+0x218>)
 800cf98:	f000 f8ca 	bl	800d130 <raw_angle_to_rad>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[4], -1.5+3, 1);//3.62+PI+ // left joint[1]
 800cf9c:	2101      	movs	r1, #1
 800cf9e:	eeb7 0a08 	vmov.f32	s0, #120	@ 0x3fc00000  1.5
 800cfa2:	4856      	ldr	r0, [pc, #344]	@ (800d0fc <motors_process_task+0x224>)
 800cfa4:	f000 f94c 	bl	800d240 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[5], -5.85-PI+3.25, 1); // leftjoint[0]
 800cfa8:	2101      	movs	r1, #1
 800cfaa:	ed9f 0a55 	vldr	s0, [pc, #340]	@ 800d100 <motors_process_task+0x228>
 800cfae:	4855      	ldr	r0, [pc, #340]	@ (800d104 <motors_process_task+0x22c>)
 800cfb0:	f000 f946 	bl	800d240 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[6], -4.66+PI, 1);
 800cfb4:	2101      	movs	r1, #1
 800cfb6:	ed9f 0a54 	vldr	s0, [pc, #336]	@ 800d108 <motors_process_task+0x230>
 800cfba:	4854      	ldr	r0, [pc, #336]	@ (800d10c <motors_process_task+0x234>)
 800cfbc:	f000 f940 	bl	800d240 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[7], 0.53, 1);
 800cfc0:	2101      	movs	r1, #1
 800cfc2:	ed9f 0a53 	vldr	s0, [pc, #332]	@ 800d110 <motors_process_task+0x238>
 800cfc6:	4853      	ldr	r0, [pc, #332]	@ (800d114 <motors_process_task+0x23c>)
 800cfc8:	f000 f93a 	bl	800d240 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[1], 0, -1);
 800cfcc:	f04f 31ff 	mov.w	r1, #4294967295
 800cfd0:	ed9f 0a51 	vldr	s0, [pc, #324]	@ 800d118 <motors_process_task+0x240>
 800cfd4:	4851      	ldr	r0, [pc, #324]	@ (800d11c <motors_process_task+0x244>)
 800cfd6:	f000 f933 	bl	800d240 <motors_raw_angle_to_desired_angle_dir>
        motors_raw_angle_to_desired_angle_dir(&g_can_motors[0], 0, 1);
 800cfda:	2101      	movs	r1, #1
 800cfdc:	ed9f 0a4e 	vldr	s0, [pc, #312]	@ 800d118 <motors_process_task+0x240>
 800cfe0:	4843      	ldr	r0, [pc, #268]	@ (800d0f0 <motors_process_task+0x218>)
 800cfe2:	f000 f92d 	bl	800d240 <motors_raw_angle_to_desired_angle_dir>
        motors_torque_to_current_6020(&g_can_motors[4],0,1.0);
 800cfe6:	ed9f 1b3e 	vldr	d1, [pc, #248]	@ 800d0e0 <motors_process_task+0x208>
 800cfea:	ed9f 0a4b 	vldr	s0, [pc, #300]	@ 800d118 <motors_process_task+0x240>
 800cfee:	4843      	ldr	r0, [pc, #268]	@ (800d0fc <motors_process_task+0x224>)
 800cff0:	f000 f986 	bl	800d300 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[5],0,1.0);
 800cff4:	ed9f 1b3a 	vldr	d1, [pc, #232]	@ 800d0e0 <motors_process_task+0x208>
 800cff8:	ed9f 0a47 	vldr	s0, [pc, #284]	@ 800d118 <motors_process_task+0x240>
 800cffc:	4841      	ldr	r0, [pc, #260]	@ (800d104 <motors_process_task+0x22c>)
 800cffe:	f000 f97f 	bl	800d300 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[6],0,1.0);
 800d002:	ed9f 1b37 	vldr	d1, [pc, #220]	@ 800d0e0 <motors_process_task+0x208>
 800d006:	ed9f 0a44 	vldr	s0, [pc, #272]	@ 800d118 <motors_process_task+0x240>
 800d00a:	4840      	ldr	r0, [pc, #256]	@ (800d10c <motors_process_task+0x234>)
 800d00c:	f000 f978 	bl	800d300 <motors_torque_to_current_6020>
        motors_torque_to_current_6020(&g_can_motors[7],0,1.0);
 800d010:	ed9f 1b33 	vldr	d1, [pc, #204]	@ 800d0e0 <motors_process_task+0x208>
 800d014:	ed9f 0a40 	vldr	s0, [pc, #256]	@ 800d118 <motors_process_task+0x240>
 800d018:	483e      	ldr	r0, [pc, #248]	@ (800d114 <motors_process_task+0x23c>)
 800d01a:	f000 f971 	bl	800d300 <motors_torque_to_current_6020>
        motors_torque_to_current_3508_gearbox(&g_can_motors[0],15,1.0);
 800d01e:	ed9f 1b30 	vldr	d1, [pc, #192]	@ 800d0e0 <motors_process_task+0x208>
 800d022:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800d026:	4832      	ldr	r0, [pc, #200]	@ (800d0f0 <motors_process_task+0x218>)
 800d028:	f000 f9f6 	bl	800d418 <motors_torque_to_current_3508_gearbox>
        motors_torque_to_current_3508_gearbox(&g_can_motors[1],15,-1.0);
 800d02c:	ed9f 1b2e 	vldr	d1, [pc, #184]	@ 800d0e8 <motors_process_task+0x210>
 800d030:	eeb2 0a0e 	vmov.f32	s0, #46	@ 0x41700000  15.0
 800d034:	4839      	ldr	r0, [pc, #228]	@ (800d11c <motors_process_task+0x244>)
 800d036:	f000 f9ef 	bl	800d418 <motors_torque_to_current_3508_gearbox>


        speed_pid((double)g_can_motors[1].torque ,(double)g_can_motors[1].raw_data.rpm/1000, &g_can_motors[1].rpm_pid);
 800d03a:	4b2d      	ldr	r3, [pc, #180]	@ (800d0f0 <motors_process_task+0x218>)
 800d03c:	f8d3 3118 	ldr.w	r3, [r3, #280]	@ 0x118
 800d040:	4618      	mov	r0, r3
 800d042:	f7f3 fa81 	bl	8000548 <__aeabi_f2d>
 800d046:	4604      	mov	r4, r0
 800d048:	460d      	mov	r5, r1
 800d04a:	4b29      	ldr	r3, [pc, #164]	@ (800d0f0 <motors_process_task+0x218>)
 800d04c:	f9b3 30f8 	ldrsh.w	r3, [r3, #248]	@ 0xf8
 800d050:	4618      	mov	r0, r3
 800d052:	f7f3 fa67 	bl	8000524 <__aeabi_i2d>
 800d056:	f04f 0200 	mov.w	r2, #0
 800d05a:	4b31      	ldr	r3, [pc, #196]	@ (800d120 <motors_process_task+0x248>)
 800d05c:	f7f3 fbf6 	bl	800084c <__aeabi_ddiv>
 800d060:	4602      	mov	r2, r0
 800d062:	460b      	mov	r3, r1
 800d064:	ec43 2b17 	vmov	d7, r2, r3
 800d068:	482e      	ldr	r0, [pc, #184]	@ (800d124 <motors_process_task+0x24c>)
 800d06a:	eeb0 1a47 	vmov.f32	s2, s14
 800d06e:	eef0 1a67 	vmov.f32	s3, s15
 800d072:	ec45 4b10 	vmov	d0, r4, r5
 800d076:	f7ff fbd7 	bl	800c828 <speed_pid>
        speed_pid((double)g_can_motors[0].torque ,(double)g_can_motors[0].raw_data.rpm/1000, &g_can_motors[0].rpm_pid);
 800d07a:	4b1d      	ldr	r3, [pc, #116]	@ (800d0f0 <motors_process_task+0x218>)
 800d07c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d07e:	4618      	mov	r0, r3
 800d080:	f7f3 fa62 	bl	8000548 <__aeabi_f2d>
 800d084:	4604      	mov	r4, r0
 800d086:	460d      	mov	r5, r1
 800d088:	4b19      	ldr	r3, [pc, #100]	@ (800d0f0 <motors_process_task+0x218>)
 800d08a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d08e:	4618      	mov	r0, r3
 800d090:	f7f3 fa48 	bl	8000524 <__aeabi_i2d>
 800d094:	f04f 0200 	mov.w	r2, #0
 800d098:	4b21      	ldr	r3, [pc, #132]	@ (800d120 <motors_process_task+0x248>)
 800d09a:	f7f3 fbd7 	bl	800084c <__aeabi_ddiv>
 800d09e:	4602      	mov	r2, r0
 800d0a0:	460b      	mov	r3, r1
 800d0a2:	ec43 2b17 	vmov	d7, r2, r3
 800d0a6:	4820      	ldr	r0, [pc, #128]	@ (800d128 <motors_process_task+0x250>)
 800d0a8:	eeb0 1a47 	vmov.f32	s2, s14
 800d0ac:	eef0 1a67 	vmov.f32	s3, s15
 800d0b0:	ec45 4b10 	vmov	d0, r4, r5
 800d0b4:	f7ff fbb8 	bl	800c828 <speed_pid>
//        g_can_motors[1].output = g_can_motors[1].rpm_pid.output;
//        g_can_motors[0].output = g_can_motors[0].rpm_pid.output;
        starttime = get_microseconds();
 800d0b8:	f7f5 f882 	bl	80021c0 <get_microseconds>
 800d0bc:	4603      	mov	r3, r0
 800d0be:	4618      	mov	r0, r3
 800d0c0:	f7f3 fa20 	bl	8000504 <__aeabi_ui2d>
 800d0c4:	4602      	mov	r2, r0
 800d0c6:	460b      	mov	r3, r1
 800d0c8:	e9c7 230c 	strd	r2, r3, [r7, #48]	@ 0x30




        vTaskDelayUntil(&start_time, 5);
 800d0cc:	f107 030c 	add.w	r3, r7, #12
 800d0d0:	2105      	movs	r1, #5
 800d0d2:	4618      	mov	r0, r3
 800d0d4:	f00d feb6 	bl	801ae44 <vTaskDelayUntil>
        endtime = get_microseconds();
 800d0d8:	bf00      	nop
 800d0da:	e744      	b.n	800cf66 <motors_process_task+0x8e>
 800d0dc:	f3af 8000 	nop.w
 800d0e0:	00000000 	.word	0x00000000
 800d0e4:	3ff00000 	.word	0x3ff00000
 800d0e8:	00000000 	.word	0x00000000
 800d0ec:	bff00000 	.word	0xbff00000
 800d0f0:	20002220 	.word	0x20002220
 800d0f4:	459c4000 	.word	0x459c4000
 800d0f8:	461c4000 	.word	0x461c4000
 800d0fc:	200025e0 	.word	0x200025e0
 800d100:	c0b7bb21 	.word	0xc0b7bb21
 800d104:	200026d0 	.word	0x200026d0
 800d108:	bfc25b2b 	.word	0xbfc25b2b
 800d10c:	200027c0 	.word	0x200027c0
 800d110:	3f07ae14 	.word	0x3f07ae14
 800d114:	200028b0 	.word	0x200028b0
 800d118:	00000000 	.word	0x00000000
 800d11c:	20002310 	.word	0x20002310
 800d120:	408f4000 	.word	0x408f4000
 800d124:	20002348 	.word	0x20002348
 800d128:	20002258 	.word	0x20002258
 800d12c:	00000000 	.word	0x00000000

0800d130 <raw_angle_to_rad>:
    }
}

void raw_angle_to_rad(motor_data_t motor[]) { // Change the parameter to accept an array
 800d130:	b590      	push	{r4, r7, lr}
 800d132:	b087      	sub	sp, #28
 800d134:	af00      	add	r7, sp, #0
 800d136:	6078      	str	r0, [r7, #4]
    for (int i = 0; i < 24; i++) {
 800d138:	2300      	movs	r3, #0
 800d13a:	617b      	str	r3, [r7, #20]
 800d13c:	e06b      	b.n	800d216 <raw_angle_to_rad+0xe6>
        // Update moving average history
        double continuous_angle = motor[i].raw_data.angle[0] + (-motor[i].angle_data.rev*8192);
 800d13e:	697a      	ldr	r2, [r7, #20]
 800d140:	4613      	mov	r3, r2
 800d142:	011b      	lsls	r3, r3, #4
 800d144:	1a9b      	subs	r3, r3, r2
 800d146:	011b      	lsls	r3, r3, #4
 800d148:	461a      	mov	r2, r3
 800d14a:	687b      	ldr	r3, [r7, #4]
 800d14c:	4413      	add	r3, r2
 800d14e:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800d152:	4619      	mov	r1, r3
 800d154:	697a      	ldr	r2, [r7, #20]
 800d156:	4613      	mov	r3, r2
 800d158:	011b      	lsls	r3, r3, #4
 800d15a:	1a9b      	subs	r3, r3, r2
 800d15c:	011b      	lsls	r3, r3, #4
 800d15e:	461a      	mov	r2, r3
 800d160:	687b      	ldr	r3, [r7, #4]
 800d162:	4413      	add	r3, r2
 800d164:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 800d168:	4613      	mov	r3, r2
 800d16a:	04db      	lsls	r3, r3, #19
 800d16c:	1a9b      	subs	r3, r3, r2
 800d16e:	035b      	lsls	r3, r3, #13
 800d170:	440b      	add	r3, r1
 800d172:	4618      	mov	r0, r3
 800d174:	f7f3 f9d6 	bl	8000524 <__aeabi_i2d>
 800d178:	4602      	mov	r2, r0
 800d17a:	460b      	mov	r3, r1
 800d17c:	e9c7 2302 	strd	r2, r3, [r7, #8]
        motor[i].raw_angle_rad = (continuous_angle / 8191.0) * 2 * PI;
 800d180:	a32a      	add	r3, pc, #168	@ (adr r3, 800d22c <raw_angle_to_rad+0xfc>)
 800d182:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d186:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d18a:	f7f3 fb5f 	bl	800084c <__aeabi_ddiv>
 800d18e:	4602      	mov	r2, r0
 800d190:	460b      	mov	r3, r1
 800d192:	4610      	mov	r0, r2
 800d194:	4619      	mov	r1, r3
 800d196:	4602      	mov	r2, r0
 800d198:	460b      	mov	r3, r1
 800d19a:	f7f3 f877 	bl	800028c <__adddf3>
 800d19e:	4602      	mov	r2, r0
 800d1a0:	460b      	mov	r3, r1
 800d1a2:	4610      	mov	r0, r2
 800d1a4:	4619      	mov	r1, r3
 800d1a6:	a323      	add	r3, pc, #140	@ (adr r3, 800d234 <raw_angle_to_rad+0x104>)
 800d1a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1ac:	f7f3 fa24 	bl	80005f8 <__aeabi_dmul>
 800d1b0:	4602      	mov	r2, r0
 800d1b2:	460b      	mov	r3, r1
 800d1b4:	4610      	mov	r0, r2
 800d1b6:	4619      	mov	r1, r3
 800d1b8:	697a      	ldr	r2, [r7, #20]
 800d1ba:	4613      	mov	r3, r2
 800d1bc:	011b      	lsls	r3, r3, #4
 800d1be:	1a9b      	subs	r3, r3, r2
 800d1c0:	011b      	lsls	r3, r3, #4
 800d1c2:	461a      	mov	r2, r3
 800d1c4:	687b      	ldr	r3, [r7, #4]
 800d1c6:	189c      	adds	r4, r3, r2
 800d1c8:	f7f3 fd0e 	bl	8000be8 <__aeabi_d2f>
 800d1cc:	4603      	mov	r3, r0
 800d1ce:	6123      	str	r3, [r4, #16]
        motor[i].raw_angle_deg = (continuous_angle / 8191.0) * 360;
 800d1d0:	a316      	add	r3, pc, #88	@ (adr r3, 800d22c <raw_angle_to_rad+0xfc>)
 800d1d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1d6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d1da:	f7f3 fb37 	bl	800084c <__aeabi_ddiv>
 800d1de:	4602      	mov	r2, r0
 800d1e0:	460b      	mov	r3, r1
 800d1e2:	4610      	mov	r0, r2
 800d1e4:	4619      	mov	r1, r3
 800d1e6:	f04f 0200 	mov.w	r2, #0
 800d1ea:	4b0f      	ldr	r3, [pc, #60]	@ (800d228 <raw_angle_to_rad+0xf8>)
 800d1ec:	f7f3 fa04 	bl	80005f8 <__aeabi_dmul>
 800d1f0:	4602      	mov	r2, r0
 800d1f2:	460b      	mov	r3, r1
 800d1f4:	4610      	mov	r0, r2
 800d1f6:	4619      	mov	r1, r3
 800d1f8:	697a      	ldr	r2, [r7, #20]
 800d1fa:	4613      	mov	r3, r2
 800d1fc:	011b      	lsls	r3, r3, #4
 800d1fe:	1a9b      	subs	r3, r3, r2
 800d200:	011b      	lsls	r3, r3, #4
 800d202:	461a      	mov	r2, r3
 800d204:	687b      	ldr	r3, [r7, #4]
 800d206:	189c      	adds	r4, r3, r2
 800d208:	f7f3 fcee 	bl	8000be8 <__aeabi_d2f>
 800d20c:	4603      	mov	r3, r0
 800d20e:	6163      	str	r3, [r4, #20]
    for (int i = 0; i < 24; i++) {
 800d210:	697b      	ldr	r3, [r7, #20]
 800d212:	3301      	adds	r3, #1
 800d214:	617b      	str	r3, [r7, #20]
 800d216:	697b      	ldr	r3, [r7, #20]
 800d218:	2b17      	cmp	r3, #23
 800d21a:	dd90      	ble.n	800d13e <raw_angle_to_rad+0xe>
    }
}
 800d21c:	bf00      	nop
 800d21e:	bf00      	nop
 800d220:	371c      	adds	r7, #28
 800d222:	46bd      	mov	sp, r7
 800d224:	bd90      	pop	{r4, r7, pc}
 800d226:	bf00      	nop
 800d228:	40768000 	.word	0x40768000
 800d22c:	00000000 	.word	0x00000000
 800d230:	40bfff00 	.word	0x40bfff00
 800d234:	60000000 	.word	0x60000000
 800d238:	400921fb 	.word	0x400921fb
 800d23c:	00000000 	.word	0x00000000

0800d240 <motors_raw_angle_to_desired_angle_dir>:

void motors_raw_angle_to_desired_angle_dir(motor_data_t *motor, float offset, int dir) {
 800d240:	b580      	push	{r7, lr}
 800d242:	b084      	sub	sp, #16
 800d244:	af00      	add	r7, sp, #0
 800d246:	60f8      	str	r0, [r7, #12]
 800d248:	ed87 0a02 	vstr	s0, [r7, #8]
 800d24c:	6079      	str	r1, [r7, #4]
    if (dir == -1) {
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d254:	d11b      	bne.n	800d28e <motors_raw_angle_to_desired_angle_dir+0x4e>
        motor->angle_rad = -motor->raw_angle_rad + offset;
 800d256:	68fb      	ldr	r3, [r7, #12]
 800d258:	edd3 7a04 	vldr	s15, [r3, #16]
 800d25c:	ed97 7a02 	vldr	s14, [r7, #8]
 800d260:	ee77 7a67 	vsub.f32	s15, s14, s15
 800d264:	68fb      	ldr	r3, [r7, #12]
 800d266:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = -motor->raw_data.rpm * 0.10472;
 800d26a:	68fb      	ldr	r3, [r7, #12]
 800d26c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d270:	425b      	negs	r3, r3
 800d272:	4618      	mov	r0, r3
 800d274:	f7f3 f956 	bl	8000524 <__aeabi_i2d>
 800d278:	a31d      	add	r3, pc, #116	@ (adr r3, 800d2f0 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800d27a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d27e:	f7f3 f9bb 	bl	80005f8 <__aeabi_dmul>
 800d282:	4602      	mov	r2, r0
 800d284:	460b      	mov	r3, r1
 800d286:	68f9      	ldr	r1, [r7, #12]
 800d288:	e9c1 2308 	strd	r2, r3, [r1, #32]
 800d28c:	e019      	b.n	800d2c2 <motors_raw_angle_to_desired_angle_dir+0x82>
    } else {
        motor->angle_rad = motor->raw_angle_rad + offset;
 800d28e:	68fb      	ldr	r3, [r7, #12]
 800d290:	ed93 7a04 	vldr	s14, [r3, #16]
 800d294:	edd7 7a02 	vldr	s15, [r7, #8]
 800d298:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d29c:	68fb      	ldr	r3, [r7, #12]
 800d29e:	edc3 7a06 	vstr	s15, [r3, #24]
        motor->speed = motor->raw_data.rpm * 0.10472;
 800d2a2:	68fb      	ldr	r3, [r7, #12]
 800d2a4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800d2a8:	4618      	mov	r0, r3
 800d2aa:	f7f3 f93b 	bl	8000524 <__aeabi_i2d>
 800d2ae:	a310      	add	r3, pc, #64	@ (adr r3, 800d2f0 <motors_raw_angle_to_desired_angle_dir+0xb0>)
 800d2b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d2b4:	f7f3 f9a0 	bl	80005f8 <__aeabi_dmul>
 800d2b8:	4602      	mov	r2, r0
 800d2ba:	460b      	mov	r3, r1
 800d2bc:	68f9      	ldr	r1, [r7, #12]
 800d2be:	e9c1 2308 	strd	r2, r3, [r1, #32]
    }
    motor->angle_deg = motor->angle_rad * (180.0 / PI); // Update the degree value as well
 800d2c2:	68fb      	ldr	r3, [r7, #12]
 800d2c4:	699b      	ldr	r3, [r3, #24]
 800d2c6:	4618      	mov	r0, r3
 800d2c8:	f7f3 f93e 	bl	8000548 <__aeabi_f2d>
 800d2cc:	a30a      	add	r3, pc, #40	@ (adr r3, 800d2f8 <motors_raw_angle_to_desired_angle_dir+0xb8>)
 800d2ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d2d2:	f7f3 f991 	bl	80005f8 <__aeabi_dmul>
 800d2d6:	4602      	mov	r2, r0
 800d2d8:	460b      	mov	r3, r1
 800d2da:	4610      	mov	r0, r2
 800d2dc:	4619      	mov	r1, r3
 800d2de:	f7f3 fc83 	bl	8000be8 <__aeabi_d2f>
 800d2e2:	4602      	mov	r2, r0
 800d2e4:	68fb      	ldr	r3, [r7, #12]
 800d2e6:	61da      	str	r2, [r3, #28]

}
 800d2e8:	bf00      	nop
 800d2ea:	3710      	adds	r7, #16
 800d2ec:	46bd      	mov	sp, r7
 800d2ee:	bd80      	pop	{r7, pc}
 800d2f0:	0f3cb3e5 	.word	0x0f3cb3e5
 800d2f4:	3fbaceee 	.word	0x3fbaceee
 800d2f8:	0d03cf26 	.word	0x0d03cf26
 800d2fc:	404ca5dc 	.word	0x404ca5dc

0800d300 <motors_torque_to_current_6020>:

void motors_torque_to_current_6020(motor_data_t *motor, float deadzone,double dir) {
 800d300:	b580      	push	{r7, lr}
 800d302:	b086      	sub	sp, #24
 800d304:	af00      	add	r7, sp, #0
 800d306:	60f8      	str	r0, [r7, #12]
 800d308:	ed87 0a02 	vstr	s0, [r7, #8]
 800d30c:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800d310:	f04f 0200 	mov.w	r2, #0
 800d314:	f04f 0300 	mov.w	r3, #0
 800d318:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800d31c:	68fb      	ldr	r3, [r7, #12]
 800d31e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800d322:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d32a:	dd17      	ble.n	800d35c <motors_torque_to_current_6020+0x5c>
		current = 1.8 * motor->torque + 0.2;
 800d32c:	68fb      	ldr	r3, [r7, #12]
 800d32e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d330:	4618      	mov	r0, r3
 800d332:	f7f3 f909 	bl	8000548 <__aeabi_f2d>
 800d336:	a333      	add	r3, pc, #204	@ (adr r3, 800d404 <motors_torque_to_current_6020+0x104>)
 800d338:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d33c:	f7f3 f95c 	bl	80005f8 <__aeabi_dmul>
 800d340:	4602      	mov	r2, r0
 800d342:	460b      	mov	r3, r1
 800d344:	4610      	mov	r0, r2
 800d346:	4619      	mov	r1, r3
 800d348:	a330      	add	r3, pc, #192	@ (adr r3, 800d40c <motors_torque_to_current_6020+0x10c>)
 800d34a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d34e:	f7f2 ff9d 	bl	800028c <__adddf3>
 800d352:	4602      	mov	r2, r0
 800d354:	460b      	mov	r3, r1
 800d356:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d35a:	e025      	b.n	800d3a8 <motors_torque_to_current_6020+0xa8>
	} else if(motor->torque < 0){
 800d35c:	68fb      	ldr	r3, [r7, #12]
 800d35e:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800d362:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d366:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d36a:	d517      	bpl.n	800d39c <motors_torque_to_current_6020+0x9c>
		current = 1.8 * motor->torque - 0.2;
 800d36c:	68fb      	ldr	r3, [r7, #12]
 800d36e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d370:	4618      	mov	r0, r3
 800d372:	f7f3 f8e9 	bl	8000548 <__aeabi_f2d>
 800d376:	a323      	add	r3, pc, #140	@ (adr r3, 800d404 <motors_torque_to_current_6020+0x104>)
 800d378:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d37c:	f7f3 f93c 	bl	80005f8 <__aeabi_dmul>
 800d380:	4602      	mov	r2, r0
 800d382:	460b      	mov	r3, r1
 800d384:	4610      	mov	r0, r2
 800d386:	4619      	mov	r1, r3
 800d388:	a320      	add	r3, pc, #128	@ (adr r3, 800d40c <motors_torque_to_current_6020+0x10c>)
 800d38a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d38e:	f7f2 ff7b 	bl	8000288 <__aeabi_dsub>
 800d392:	4602      	mov	r2, r0
 800d394:	460b      	mov	r3, r1
 800d396:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d39a:	e005      	b.n	800d3a8 <motors_torque_to_current_6020+0xa8>
	} else{
		current = 0;
 800d39c:	f04f 0200 	mov.w	r2, #0
 800d3a0:	f04f 0300 	mov.w	r3, #0
 800d3a4:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/3.0)*16385.0;
 800d3a8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d3ac:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d3b0:	f7f3 f922 	bl	80005f8 <__aeabi_dmul>
 800d3b4:	4602      	mov	r2, r0
 800d3b6:	460b      	mov	r3, r1
 800d3b8:	4610      	mov	r0, r2
 800d3ba:	4619      	mov	r1, r3
 800d3bc:	f04f 0200 	mov.w	r2, #0
 800d3c0:	4b0f      	ldr	r3, [pc, #60]	@ (800d400 <motors_torque_to_current_6020+0x100>)
 800d3c2:	f7f3 fa43 	bl	800084c <__aeabi_ddiv>
 800d3c6:	4602      	mov	r2, r0
 800d3c8:	460b      	mov	r3, r1
 800d3ca:	4610      	mov	r0, r2
 800d3cc:	4619      	mov	r1, r3
 800d3ce:	a30a      	add	r3, pc, #40	@ (adr r3, 800d3f8 <motors_torque_to_current_6020+0xf8>)
 800d3d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d3d4:	f7f3 f910 	bl	80005f8 <__aeabi_dmul>
 800d3d8:	4602      	mov	r2, r0
 800d3da:	460b      	mov	r3, r1
 800d3dc:	4610      	mov	r0, r2
 800d3de:	4619      	mov	r1, r3
 800d3e0:	f7f3 fbba 	bl	8000b58 <__aeabi_d2iz>
 800d3e4:	4603      	mov	r3, r0
 800d3e6:	b21a      	sxth	r2, r3
 800d3e8:	68fb      	ldr	r3, [r7, #12]
 800d3ea:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800d3ee:	bf00      	nop
 800d3f0:	3718      	adds	r7, #24
 800d3f2:	46bd      	mov	sp, r7
 800d3f4:	bd80      	pop	{r7, pc}
 800d3f6:	bf00      	nop
 800d3f8:	00000000 	.word	0x00000000
 800d3fc:	40d00040 	.word	0x40d00040
 800d400:	40080000 	.word	0x40080000
 800d404:	cccccccd 	.word	0xcccccccd
 800d408:	3ffccccc 	.word	0x3ffccccc
 800d40c:	9999999a 	.word	0x9999999a
 800d410:	3fc99999 	.word	0x3fc99999
 800d414:	00000000 	.word	0x00000000

0800d418 <motors_torque_to_current_3508_gearbox>:
void motors_torque_to_current_3508_gearbox(motor_data_t *motor, float maxCurrent,double dir) {
 800d418:	b580      	push	{r7, lr}
 800d41a:	b086      	sub	sp, #24
 800d41c:	af00      	add	r7, sp, #0
 800d41e:	60f8      	str	r0, [r7, #12]
 800d420:	ed87 0a02 	vstr	s0, [r7, #8]
 800d424:	ed87 1b00 	vstr	d1, [r7]
	double current = 0;
 800d428:	f04f 0200 	mov.w	r2, #0
 800d42c:	f04f 0300 	mov.w	r3, #0
 800d430:	e9c7 2304 	strd	r2, r3, [r7, #16]
	if (motor->torque > 0){
 800d434:	68fb      	ldr	r3, [r7, #12]
 800d436:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800d43a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d43e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d442:	dd20      	ble.n	800d486 <motors_torque_to_current_3508_gearbox+0x6e>
		current = (motor->torque / 4.5) * 20 + 0.08;
 800d444:	68fb      	ldr	r3, [r7, #12]
 800d446:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d448:	4618      	mov	r0, r3
 800d44a:	f7f3 f87d 	bl	8000548 <__aeabi_f2d>
 800d44e:	f04f 0200 	mov.w	r2, #0
 800d452:	4b55      	ldr	r3, [pc, #340]	@ (800d5a8 <motors_torque_to_current_3508_gearbox+0x190>)
 800d454:	f7f3 f9fa 	bl	800084c <__aeabi_ddiv>
 800d458:	4602      	mov	r2, r0
 800d45a:	460b      	mov	r3, r1
 800d45c:	4610      	mov	r0, r2
 800d45e:	4619      	mov	r1, r3
 800d460:	f04f 0200 	mov.w	r2, #0
 800d464:	4b51      	ldr	r3, [pc, #324]	@ (800d5ac <motors_torque_to_current_3508_gearbox+0x194>)
 800d466:	f7f3 f8c7 	bl	80005f8 <__aeabi_dmul>
 800d46a:	4602      	mov	r2, r0
 800d46c:	460b      	mov	r3, r1
 800d46e:	4610      	mov	r0, r2
 800d470:	4619      	mov	r1, r3
 800d472:	a349      	add	r3, pc, #292	@ (adr r3, 800d598 <motors_torque_to_current_3508_gearbox+0x180>)
 800d474:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d478:	f7f2 ff08 	bl	800028c <__adddf3>
 800d47c:	4602      	mov	r2, r0
 800d47e:	460b      	mov	r3, r1
 800d480:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d484:	e02e      	b.n	800d4e4 <motors_torque_to_current_3508_gearbox+0xcc>
	} else if(motor->torque < 0){
 800d486:	68fb      	ldr	r3, [r7, #12]
 800d488:	edd3 7a0a 	vldr	s15, [r3, #40]	@ 0x28
 800d48c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d494:	d520      	bpl.n	800d4d8 <motors_torque_to_current_3508_gearbox+0xc0>
		current = (motor->torque / 4.5) * 20 - 0.08;
 800d496:	68fb      	ldr	r3, [r7, #12]
 800d498:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d49a:	4618      	mov	r0, r3
 800d49c:	f7f3 f854 	bl	8000548 <__aeabi_f2d>
 800d4a0:	f04f 0200 	mov.w	r2, #0
 800d4a4:	4b40      	ldr	r3, [pc, #256]	@ (800d5a8 <motors_torque_to_current_3508_gearbox+0x190>)
 800d4a6:	f7f3 f9d1 	bl	800084c <__aeabi_ddiv>
 800d4aa:	4602      	mov	r2, r0
 800d4ac:	460b      	mov	r3, r1
 800d4ae:	4610      	mov	r0, r2
 800d4b0:	4619      	mov	r1, r3
 800d4b2:	f04f 0200 	mov.w	r2, #0
 800d4b6:	4b3d      	ldr	r3, [pc, #244]	@ (800d5ac <motors_torque_to_current_3508_gearbox+0x194>)
 800d4b8:	f7f3 f89e 	bl	80005f8 <__aeabi_dmul>
 800d4bc:	4602      	mov	r2, r0
 800d4be:	460b      	mov	r3, r1
 800d4c0:	4610      	mov	r0, r2
 800d4c2:	4619      	mov	r1, r3
 800d4c4:	a334      	add	r3, pc, #208	@ (adr r3, 800d598 <motors_torque_to_current_3508_gearbox+0x180>)
 800d4c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d4ca:	f7f2 fedd 	bl	8000288 <__aeabi_dsub>
 800d4ce:	4602      	mov	r2, r0
 800d4d0:	460b      	mov	r3, r1
 800d4d2:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d4d6:	e005      	b.n	800d4e4 <motors_torque_to_current_3508_gearbox+0xcc>
	} else{
		current = 0;
 800d4d8:	f04f 0200 	mov.w	r2, #0
 800d4dc:	f04f 0300 	mov.w	r3, #0
 800d4e0:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	if (current > maxCurrent){
 800d4e4:	68b8      	ldr	r0, [r7, #8]
 800d4e6:	f7f3 f82f 	bl	8000548 <__aeabi_f2d>
 800d4ea:	4602      	mov	r2, r0
 800d4ec:	460b      	mov	r3, r1
 800d4ee:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d4f2:	f7f3 fb11 	bl	8000b18 <__aeabi_dcmpgt>
 800d4f6:	4603      	mov	r3, r0
 800d4f8:	2b00      	cmp	r3, #0
 800d4fa:	d007      	beq.n	800d50c <motors_torque_to_current_3508_gearbox+0xf4>
		current = maxCurrent;
 800d4fc:	68b8      	ldr	r0, [r7, #8]
 800d4fe:	f7f3 f823 	bl	8000548 <__aeabi_f2d>
 800d502:	4602      	mov	r2, r0
 800d504:	460b      	mov	r3, r1
 800d506:	e9c7 2304 	strd	r2, r3, [r7, #16]
 800d50a:	e01e      	b.n	800d54a <motors_torque_to_current_3508_gearbox+0x132>
	} else if(current < -maxCurrent){
 800d50c:	edd7 7a02 	vldr	s15, [r7, #8]
 800d510:	eef1 7a67 	vneg.f32	s15, s15
 800d514:	ee17 3a90 	vmov	r3, s15
 800d518:	4618      	mov	r0, r3
 800d51a:	f7f3 f815 	bl	8000548 <__aeabi_f2d>
 800d51e:	4602      	mov	r2, r0
 800d520:	460b      	mov	r3, r1
 800d522:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d526:	f7f3 fad9 	bl	8000adc <__aeabi_dcmplt>
 800d52a:	4603      	mov	r3, r0
 800d52c:	2b00      	cmp	r3, #0
 800d52e:	d00c      	beq.n	800d54a <motors_torque_to_current_3508_gearbox+0x132>
		current = -maxCurrent;
 800d530:	edd7 7a02 	vldr	s15, [r7, #8]
 800d534:	eef1 7a67 	vneg.f32	s15, s15
 800d538:	ee17 3a90 	vmov	r3, s15
 800d53c:	4618      	mov	r0, r3
 800d53e:	f7f3 f803 	bl	8000548 <__aeabi_f2d>
 800d542:	4602      	mov	r2, r0
 800d544:	460b      	mov	r3, r1
 800d546:	e9c7 2304 	strd	r2, r3, [r7, #16]
	}
	motor->output = ((current * dir)/20.0)*16385.0;
 800d54a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d54e:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800d552:	f7f3 f851 	bl	80005f8 <__aeabi_dmul>
 800d556:	4602      	mov	r2, r0
 800d558:	460b      	mov	r3, r1
 800d55a:	4610      	mov	r0, r2
 800d55c:	4619      	mov	r1, r3
 800d55e:	f04f 0200 	mov.w	r2, #0
 800d562:	4b12      	ldr	r3, [pc, #72]	@ (800d5ac <motors_torque_to_current_3508_gearbox+0x194>)
 800d564:	f7f3 f972 	bl	800084c <__aeabi_ddiv>
 800d568:	4602      	mov	r2, r0
 800d56a:	460b      	mov	r3, r1
 800d56c:	4610      	mov	r0, r2
 800d56e:	4619      	mov	r1, r3
 800d570:	a30b      	add	r3, pc, #44	@ (adr r3, 800d5a0 <motors_torque_to_current_3508_gearbox+0x188>)
 800d572:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d576:	f7f3 f83f 	bl	80005f8 <__aeabi_dmul>
 800d57a:	4602      	mov	r2, r0
 800d57c:	460b      	mov	r3, r1
 800d57e:	4610      	mov	r0, r2
 800d580:	4619      	mov	r1, r3
 800d582:	f7f3 fae9 	bl	8000b58 <__aeabi_d2iz>
 800d586:	4603      	mov	r3, r0
 800d588:	b21a      	sxth	r2, r3
 800d58a:	68fb      	ldr	r3, [r7, #12]
 800d58c:	f8a3 20e0 	strh.w	r2, [r3, #224]	@ 0xe0
}
 800d590:	bf00      	nop
 800d592:	3718      	adds	r7, #24
 800d594:	46bd      	mov	sp, r7
 800d596:	bd80      	pop	{r7, pc}
 800d598:	47ae147b 	.word	0x47ae147b
 800d59c:	3fb47ae1 	.word	0x3fb47ae1
 800d5a0:	00000000 	.word	0x00000000
 800d5a4:	40d00040 	.word	0x40d00040
 800d5a8:	40120000 	.word	0x40120000
 800d5ac:	40340000 	.word	0x40340000

0800d5b0 <referee_processing_task>:
uint32_t ref_mag_data_txno = 0;
uint8_t g_ref_tx_seq = 0;

queue_t referee_uart_q;

void referee_processing_task(void *argument) {
 800d5b0:	b5b0      	push	{r4, r5, r7, lr}
 800d5b2:	b088      	sub	sp, #32
 800d5b4:	af00      	add	r7, sp, #0
 800d5b6:	6078      	str	r0, [r7, #4]
	g_referee_limiters.robot_level = 0;
 800d5b8:	4ba3      	ldr	r3, [pc, #652]	@ (800d848 <referee_processing_task+0x298>)
 800d5ba:	2200      	movs	r2, #0
 800d5bc:	731a      	strb	r2, [r3, #12]
	uint8_t ref_buffer[2];
	ref_processing_status_t proc_status;
	g_referee_limiters.feeding_speed = LV1_FEEDER;
 800d5be:	4ba2      	ldr	r3, [pc, #648]	@ (800d848 <referee_processing_task+0x298>)
 800d5c0:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800d5c4:	801a      	strh	r2, [r3, #0]
	g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800d5c6:	4ba0      	ldr	r3, [pc, #640]	@ (800d848 <referee_processing_task+0x298>)
 800d5c8:	2213      	movs	r2, #19
 800d5ca:	805a      	strh	r2, [r3, #2]
//	g_referee_limiters.wheel_power_limit = LV1_POWER;
	g_referee_limiters.robot_level = 1;
 800d5cc:	4b9e      	ldr	r3, [pc, #632]	@ (800d848 <referee_processing_task+0x298>)
 800d5ce:	2201      	movs	r2, #1
 800d5d0:	731a      	strb	r2, [r3, #12]
	status_led(7, on_led);
 800d5d2:	2100      	movs	r1, #0
 800d5d4:	2007      	movs	r0, #7
 800d5d6:	f7f4 fcef 	bl	8001fb8 <status_led>
	status_led(8, off_led);
 800d5da:	2101      	movs	r1, #1
 800d5dc:	2008      	movs	r0, #8
 800d5de:	f7f4 fceb 	bl	8001fb8 <status_led>
	ref_robot_data.robot_id = 0;
 800d5e2:	4b9a      	ldr	r3, [pc, #616]	@ (800d84c <referee_processing_task+0x29c>)
 800d5e4:	2200      	movs	r2, #0
 800d5e6:	701a      	strb	r2, [r3, #0]
	ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800d5e8:	f107 0108 	add.w	r1, r7, #8
 800d5ec:	4b98      	ldr	r3, [pc, #608]	@ (800d850 <referee_processing_task+0x2a0>)
 800d5ee:	2202      	movs	r2, #2
 800d5f0:	4898      	ldr	r0, [pc, #608]	@ (800d854 <referee_processing_task+0x2a4>)
 800d5f2:	f7f5 fa9f 	bl	8002b34 <ref_usart_start>
	while (1) {

		uint8_t has_data = ulTaskNotifyTake(pdTRUE, 1000);
 800d5f6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800d5fa:	2001      	movs	r0, #1
 800d5fc:	f00e fa72 	bl	801bae4 <ulTaskNotifyTake>
 800d600:	4603      	mov	r3, r0
 800d602:	75fb      	strb	r3, [r7, #23]
		status_led(5, on_led);
 800d604:	2100      	movs	r1, #0
 800d606:	2005      	movs	r0, #5
 800d608:	f7f4 fcd6 	bl	8001fb8 <status_led>
		if (queue_get_size(&referee_uart_q) > 7) {
 800d60c:	4890      	ldr	r0, [pc, #576]	@ (800d850 <referee_processing_task+0x2a0>)
 800d60e:	f7f4 fe34 	bl	800227a <queue_get_size>
 800d612:	4603      	mov	r3, r0
 800d614:	2b07      	cmp	r3, #7
 800d616:	f240 80b8 	bls.w	800d78a <referee_processing_task+0x1da>
			while (queue_get_size(&referee_uart_q) > 7) {
 800d61a:	e0ad      	b.n	800d778 <referee_processing_task+0x1c8>
				proc_status = ref_process_data(&referee_uart_q, &g_ref_msg_buffer);
 800d61c:	498e      	ldr	r1, [pc, #568]	@ (800d858 <referee_processing_task+0x2a8>)
 800d61e:	488c      	ldr	r0, [pc, #560]	@ (800d850 <referee_processing_task+0x2a0>)
 800d620:	f7f4 ff98 	bl	8002554 <ref_process_data>
 800d624:	4603      	mov	r3, r0
 800d626:	75bb      	strb	r3, [r7, #22]
				if (proc_status == PROCESS_SUCCESS) {
 800d628:	7dbb      	ldrb	r3, [r7, #22]
 800d62a:	2b00      	cmp	r3, #0
 800d62c:	f040 809f 	bne.w	800d76e <referee_processing_task+0x1be>
					switch (g_ref_msg_buffer.cmd_id) {
 800d630:	4b89      	ldr	r3, [pc, #548]	@ (800d858 <referee_processing_task+0x2a8>)
 800d632:	881b      	ldrh	r3, [r3, #0]
 800d634:	f5b3 7f02 	cmp.w	r3, #520	@ 0x208
 800d638:	f300 809d 	bgt.w	800d776 <referee_processing_task+0x1c6>
 800d63c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d640:	dc04      	bgt.n	800d64c <referee_processing_task+0x9c>
 800d642:	2b01      	cmp	r3, #1
 800d644:	d029      	beq.n	800d69a <referee_processing_task+0xea>
 800d646:	2b03      	cmp	r3, #3
 800d648:	d071      	beq.n	800d72e <referee_processing_task+0x17e>
								sizeof(ref_magazine_data_t));
						ref_mag_data_txno++;
						//add in the memcpys here
						break;
					default:
						break;
 800d64a:	e094      	b.n	800d776 <referee_processing_task+0x1c6>
					switch (g_ref_msg_buffer.cmd_id) {
 800d64c:	f2a3 2301 	subw	r3, r3, #513	@ 0x201
 800d650:	2b07      	cmp	r3, #7
 800d652:	f200 8090 	bhi.w	800d776 <referee_processing_task+0x1c6>
 800d656:	a201      	add	r2, pc, #4	@ (adr r2, 800d65c <referee_processing_task+0xac>)
 800d658:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d65c:	0800d6b5 	.word	0x0800d6b5
 800d660:	0800d6fd 	.word	0x0800d6fd
 800d664:	0800d6e3 	.word	0x0800d6e3
 800d668:	0800d777 	.word	0x0800d777
 800d66c:	0800d777 	.word	0x0800d777
 800d670:	0800d71b 	.word	0x0800d71b
 800d674:	0800d67d 	.word	0x0800d67d
 800d678:	0800d755 	.word	0x0800d755
						memcpy(&ref_shoot_data, &g_ref_msg_buffer.data,
 800d67c:	4a77      	ldr	r2, [pc, #476]	@ (800d85c <referee_processing_task+0x2ac>)
 800d67e:	4b76      	ldr	r3, [pc, #472]	@ (800d858 <referee_processing_task+0x2a8>)
 800d680:	3302      	adds	r3, #2
 800d682:	6818      	ldr	r0, [r3, #0]
 800d684:	6010      	str	r0, [r2, #0]
 800d686:	8899      	ldrh	r1, [r3, #4]
 800d688:	799b      	ldrb	r3, [r3, #6]
 800d68a:	8091      	strh	r1, [r2, #4]
 800d68c:	7193      	strb	r3, [r2, #6]
						ref_shoot_data_txno++;
 800d68e:	4b74      	ldr	r3, [pc, #464]	@ (800d860 <referee_processing_task+0x2b0>)
 800d690:	681b      	ldr	r3, [r3, #0]
 800d692:	3301      	adds	r3, #1
 800d694:	4a72      	ldr	r2, [pc, #456]	@ (800d860 <referee_processing_task+0x2b0>)
 800d696:	6013      	str	r3, [r2, #0]
						break;
 800d698:	e06e      	b.n	800d778 <referee_processing_task+0x1c8>
							memcpy(&ref_game_state, &g_ref_msg_buffer.data,
 800d69a:	4a72      	ldr	r2, [pc, #456]	@ (800d864 <referee_processing_task+0x2b4>)
 800d69c:	4b6e      	ldr	r3, [pc, #440]	@ (800d858 <referee_processing_task+0x2a8>)
 800d69e:	3302      	adds	r3, #2
 800d6a0:	8819      	ldrh	r1, [r3, #0]
 800d6a2:	789b      	ldrb	r3, [r3, #2]
 800d6a4:	8011      	strh	r1, [r2, #0]
 800d6a6:	7093      	strb	r3, [r2, #2]
							ref_game_state_txno++;
 800d6a8:	4b6f      	ldr	r3, [pc, #444]	@ (800d868 <referee_processing_task+0x2b8>)
 800d6aa:	681b      	ldr	r3, [r3, #0]
 800d6ac:	3301      	adds	r3, #1
 800d6ae:	4a6e      	ldr	r2, [pc, #440]	@ (800d868 <referee_processing_task+0x2b8>)
 800d6b0:	6013      	str	r3, [r2, #0]
							break;
 800d6b2:	e061      	b.n	800d778 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_data, &g_ref_msg_buffer.data,
 800d6b4:	4a65      	ldr	r2, [pc, #404]	@ (800d84c <referee_processing_task+0x29c>)
 800d6b6:	4b68      	ldr	r3, [pc, #416]	@ (800d858 <referee_processing_task+0x2a8>)
 800d6b8:	4614      	mov	r4, r2
 800d6ba:	1c9d      	adds	r5, r3, #2
 800d6bc:	6828      	ldr	r0, [r5, #0]
 800d6be:	6869      	ldr	r1, [r5, #4]
 800d6c0:	68aa      	ldr	r2, [r5, #8]
 800d6c2:	68eb      	ldr	r3, [r5, #12]
 800d6c4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d6c6:	6928      	ldr	r0, [r5, #16]
 800d6c8:	6969      	ldr	r1, [r5, #20]
 800d6ca:	c403      	stmia	r4!, {r0, r1}
 800d6cc:	8b2b      	ldrh	r3, [r5, #24]
 800d6ce:	7eaa      	ldrb	r2, [r5, #26]
 800d6d0:	8023      	strh	r3, [r4, #0]
 800d6d2:	4613      	mov	r3, r2
 800d6d4:	70a3      	strb	r3, [r4, #2]
						ref_robot_data_txno++;
 800d6d6:	4b65      	ldr	r3, [pc, #404]	@ (800d86c <referee_processing_task+0x2bc>)
 800d6d8:	681b      	ldr	r3, [r3, #0]
 800d6da:	3301      	adds	r3, #1
 800d6dc:	4a63      	ldr	r2, [pc, #396]	@ (800d86c <referee_processing_task+0x2bc>)
 800d6de:	6013      	str	r3, [r2, #0]
						break;
 800d6e0:	e04a      	b.n	800d778 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_pos, &g_ref_msg_buffer.data,
 800d6e2:	4b63      	ldr	r3, [pc, #396]	@ (800d870 <referee_processing_task+0x2c0>)
 800d6e4:	4a5c      	ldr	r2, [pc, #368]	@ (800d858 <referee_processing_task+0x2a8>)
 800d6e6:	3202      	adds	r2, #2
 800d6e8:	6810      	ldr	r0, [r2, #0]
 800d6ea:	6851      	ldr	r1, [r2, #4]
 800d6ec:	6892      	ldr	r2, [r2, #8]
 800d6ee:	c307      	stmia	r3!, {r0, r1, r2}
						ref_robot_pos_txno++;
 800d6f0:	4b60      	ldr	r3, [pc, #384]	@ (800d874 <referee_processing_task+0x2c4>)
 800d6f2:	681b      	ldr	r3, [r3, #0]
 800d6f4:	3301      	adds	r3, #1
 800d6f6:	4a5f      	ldr	r2, [pc, #380]	@ (800d874 <referee_processing_task+0x2c4>)
 800d6f8:	6013      	str	r3, [r2, #0]
						break;
 800d6fa:	e03d      	b.n	800d778 <referee_processing_task+0x1c8>
						memcpy(&ref_power_data, &g_ref_msg_buffer.data,
 800d6fc:	4a5e      	ldr	r2, [pc, #376]	@ (800d878 <referee_processing_task+0x2c8>)
 800d6fe:	4b56      	ldr	r3, [pc, #344]	@ (800d858 <referee_processing_task+0x2a8>)
 800d700:	4614      	mov	r4, r2
 800d702:	3302      	adds	r3, #2
 800d704:	6818      	ldr	r0, [r3, #0]
 800d706:	6859      	ldr	r1, [r3, #4]
 800d708:	689a      	ldr	r2, [r3, #8]
 800d70a:	68db      	ldr	r3, [r3, #12]
 800d70c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
						ref_power_data_txno++;
 800d70e:	4b5b      	ldr	r3, [pc, #364]	@ (800d87c <referee_processing_task+0x2cc>)
 800d710:	681b      	ldr	r3, [r3, #0]
 800d712:	3301      	adds	r3, #1
 800d714:	4a59      	ldr	r2, [pc, #356]	@ (800d87c <referee_processing_task+0x2cc>)
 800d716:	6013      	str	r3, [r2, #0]
						break;
 800d718:	e02e      	b.n	800d778 <referee_processing_task+0x1c8>
						memcpy(&ref_dmg_data, &g_ref_msg_buffer.data,
 800d71a:	4b4f      	ldr	r3, [pc, #316]	@ (800d858 <referee_processing_task+0x2a8>)
 800d71c:	789a      	ldrb	r2, [r3, #2]
 800d71e:	4b58      	ldr	r3, [pc, #352]	@ (800d880 <referee_processing_task+0x2d0>)
 800d720:	701a      	strb	r2, [r3, #0]
						ref_dmg_data_txno++;
 800d722:	4b58      	ldr	r3, [pc, #352]	@ (800d884 <referee_processing_task+0x2d4>)
 800d724:	681b      	ldr	r3, [r3, #0]
 800d726:	3301      	adds	r3, #1
 800d728:	4a56      	ldr	r2, [pc, #344]	@ (800d884 <referee_processing_task+0x2d4>)
 800d72a:	6013      	str	r3, [r2, #0]
						break;
 800d72c:	e024      	b.n	800d778 <referee_processing_task+0x1c8>
						memcpy(&ref_robot_hp, &g_ref_msg_buffer.data,
 800d72e:	4a56      	ldr	r2, [pc, #344]	@ (800d888 <referee_processing_task+0x2d8>)
 800d730:	4b49      	ldr	r3, [pc, #292]	@ (800d858 <referee_processing_task+0x2a8>)
 800d732:	4614      	mov	r4, r2
 800d734:	1c9d      	adds	r5, r3, #2
 800d736:	6828      	ldr	r0, [r5, #0]
 800d738:	6869      	ldr	r1, [r5, #4]
 800d73a:	68aa      	ldr	r2, [r5, #8]
 800d73c:	68eb      	ldr	r3, [r5, #12]
 800d73e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d740:	6928      	ldr	r0, [r5, #16]
 800d742:	6969      	ldr	r1, [r5, #20]
 800d744:	69aa      	ldr	r2, [r5, #24]
 800d746:	c407      	stmia	r4!, {r0, r1, r2}
						ref_robot_hp_txno++;
 800d748:	4b50      	ldr	r3, [pc, #320]	@ (800d88c <referee_processing_task+0x2dc>)
 800d74a:	681b      	ldr	r3, [r3, #0]
 800d74c:	3301      	adds	r3, #1
 800d74e:	4a4f      	ldr	r2, [pc, #316]	@ (800d88c <referee_processing_task+0x2dc>)
 800d750:	6013      	str	r3, [r2, #0]
						break;
 800d752:	e011      	b.n	800d778 <referee_processing_task+0x1c8>
						memcpy(&ref_mag_data, &g_ref_msg_buffer.data,
 800d754:	4a4e      	ldr	r2, [pc, #312]	@ (800d890 <referee_processing_task+0x2e0>)
 800d756:	4b40      	ldr	r3, [pc, #256]	@ (800d858 <referee_processing_task+0x2a8>)
 800d758:	3302      	adds	r3, #2
 800d75a:	6818      	ldr	r0, [r3, #0]
 800d75c:	6010      	str	r0, [r2, #0]
 800d75e:	889b      	ldrh	r3, [r3, #4]
 800d760:	8093      	strh	r3, [r2, #4]
						ref_mag_data_txno++;
 800d762:	4b4c      	ldr	r3, [pc, #304]	@ (800d894 <referee_processing_task+0x2e4>)
 800d764:	681b      	ldr	r3, [r3, #0]
 800d766:	3301      	adds	r3, #1
 800d768:	4a4a      	ldr	r2, [pc, #296]	@ (800d894 <referee_processing_task+0x2e4>)
 800d76a:	6013      	str	r3, [r2, #0]
						break;
 800d76c:	e004      	b.n	800d778 <referee_processing_task+0x1c8>
					}
//						if (msg_buffer.cmd_id == REF_ROBOT_SHOOT_DATA_CMD_ID){
//							xQueueSend(uart_data_queue, &msg_buffer, 0);
//						}
				} else if (proc_status == INSUFFICIENT_DATA) {
 800d76e:	7dbb      	ldrb	r3, [r7, #22]
 800d770:	2b02      	cmp	r3, #2
 800d772:	d009      	beq.n	800d788 <referee_processing_task+0x1d8>
 800d774:	e000      	b.n	800d778 <referee_processing_task+0x1c8>
						break;
 800d776:	bf00      	nop
			while (queue_get_size(&referee_uart_q) > 7) {
 800d778:	4835      	ldr	r0, [pc, #212]	@ (800d850 <referee_processing_task+0x2a0>)
 800d77a:	f7f4 fd7e 	bl	800227a <queue_get_size>
 800d77e:	4603      	mov	r3, r0
 800d780:	2b07      	cmp	r3, #7
 800d782:	f63f af4b 	bhi.w	800d61c <referee_processing_task+0x6c>
 800d786:	e000      	b.n	800d78a <referee_processing_task+0x1da>
					break;
 800d788:	bf00      	nop
				}
			}
		}
		if (!has_data){
 800d78a:	7dfb      	ldrb	r3, [r7, #23]
 800d78c:	2b00      	cmp	r3, #0
 800d78e:	d10e      	bne.n	800d7ae <referee_processing_task+0x1fe>
		    __HAL_DMA_ENABLE(&hdma_usart6_rx);
 800d790:	4b41      	ldr	r3, [pc, #260]	@ (800d898 <referee_processing_task+0x2e8>)
 800d792:	681b      	ldr	r3, [r3, #0]
 800d794:	681a      	ldr	r2, [r3, #0]
 800d796:	4b40      	ldr	r3, [pc, #256]	@ (800d898 <referee_processing_task+0x2e8>)
 800d798:	681b      	ldr	r3, [r3, #0]
 800d79a:	f042 0201 	orr.w	r2, r2, #1
 800d79e:	601a      	str	r2, [r3, #0]
			ref_usart_start(&REFEREE_UART, ref_buffer, 2, &referee_uart_q);
 800d7a0:	f107 0108 	add.w	r1, r7, #8
 800d7a4:	4b2a      	ldr	r3, [pc, #168]	@ (800d850 <referee_processing_task+0x2a0>)
 800d7a6:	2202      	movs	r2, #2
 800d7a8:	482a      	ldr	r0, [pc, #168]	@ (800d854 <referee_processing_task+0x2a4>)
 800d7aa:	f7f5 f9c3 	bl	8002b34 <ref_usart_start>

		}

		status_led(5, off_led);
 800d7ae:	2101      	movs	r1, #1
 800d7b0:	2005      	movs	r0, #5
 800d7b2:	f7f4 fc01 	bl	8001fb8 <status_led>


		status_led(5, on_led);
 800d7b6:	2100      	movs	r1, #0
 800d7b8:	2005      	movs	r0, #5
 800d7ba:	f7f4 fbfd 	bl	8001fb8 <status_led>
		if (ref_robot_data.robot_level == 1) {
 800d7be:	4b23      	ldr	r3, [pc, #140]	@ (800d84c <referee_processing_task+0x29c>)
 800d7c0:	785b      	ldrb	r3, [r3, #1]
 800d7c2:	2b01      	cmp	r3, #1
 800d7c4:	d112      	bne.n	800d7ec <referee_processing_task+0x23c>
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800d7c6:	4b20      	ldr	r3, [pc, #128]	@ (800d848 <referee_processing_task+0x298>)
 800d7c8:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800d7cc:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800d7ce:	4b1e      	ldr	r3, [pc, #120]	@ (800d848 <referee_processing_task+0x298>)
 800d7d0:	2213      	movs	r2, #19
 800d7d2:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 1;
 800d7d4:	4b1c      	ldr	r3, [pc, #112]	@ (800d848 <referee_processing_task+0x298>)
 800d7d6:	2201      	movs	r2, #1
 800d7d8:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800d7da:	2100      	movs	r1, #0
 800d7dc:	2007      	movs	r0, #7
 800d7de:	f7f4 fbeb 	bl	8001fb8 <status_led>
			status_led(8, off_led);
 800d7e2:	2101      	movs	r1, #1
 800d7e4:	2008      	movs	r0, #8
 800d7e6:	f7f4 fbe7 	bl	8001fb8 <status_led>
 800d7ea:	e05e      	b.n	800d8aa <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 2) {
 800d7ec:	4b17      	ldr	r3, [pc, #92]	@ (800d84c <referee_processing_task+0x29c>)
 800d7ee:	785b      	ldrb	r3, [r3, #1]
 800d7f0:	2b02      	cmp	r3, #2
 800d7f2:	d112      	bne.n	800d81a <referee_processing_task+0x26a>
			g_referee_limiters.feeding_speed = LV2_FEEDER;
 800d7f4:	4b14      	ldr	r3, [pc, #80]	@ (800d848 <referee_processing_task+0x298>)
 800d7f6:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800d7fa:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV2_PROJECTILE;
 800d7fc:	4b12      	ldr	r3, [pc, #72]	@ (800d848 <referee_processing_task+0x298>)
 800d7fe:	2213      	movs	r2, #19
 800d800:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 2;
 800d802:	4b11      	ldr	r3, [pc, #68]	@ (800d848 <referee_processing_task+0x298>)
 800d804:	2202      	movs	r2, #2
 800d806:	731a      	strb	r2, [r3, #12]
			status_led(7, off_led);
 800d808:	2101      	movs	r1, #1
 800d80a:	2007      	movs	r0, #7
 800d80c:	f7f4 fbd4 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800d810:	2100      	movs	r1, #0
 800d812:	2008      	movs	r0, #8
 800d814:	f7f4 fbd0 	bl	8001fb8 <status_led>
 800d818:	e047      	b.n	800d8aa <referee_processing_task+0x2fa>
		} else if (ref_robot_data.robot_level == 3) {
 800d81a:	4b0c      	ldr	r3, [pc, #48]	@ (800d84c <referee_processing_task+0x29c>)
 800d81c:	785b      	ldrb	r3, [r3, #1]
 800d81e:	2b03      	cmp	r3, #3
 800d820:	d13c      	bne.n	800d89c <referee_processing_task+0x2ec>
			g_referee_limiters.feeding_speed = LV3_FEEDER;
 800d822:	4b09      	ldr	r3, [pc, #36]	@ (800d848 <referee_processing_task+0x298>)
 800d824:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800d828:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV3_PROJECTILE;
 800d82a:	4b07      	ldr	r3, [pc, #28]	@ (800d848 <referee_processing_task+0x298>)
 800d82c:	2213      	movs	r2, #19
 800d82e:	805a      	strh	r2, [r3, #2]
			g_referee_limiters.robot_level = 3;
 800d830:	4b05      	ldr	r3, [pc, #20]	@ (800d848 <referee_processing_task+0x298>)
 800d832:	2203      	movs	r2, #3
 800d834:	731a      	strb	r2, [r3, #12]
			status_led(7, on_led);
 800d836:	2100      	movs	r1, #0
 800d838:	2007      	movs	r0, #7
 800d83a:	f7f4 fbbd 	bl	8001fb8 <status_led>
			status_led(8, on_led);
 800d83e:	2100      	movs	r1, #0
 800d840:	2008      	movs	r0, #8
 800d842:	f7f4 fbb9 	bl	8001fb8 <status_led>
 800d846:	e030      	b.n	800d8aa <referee_processing_task+0x2fa>
 800d848:	20003ba0 	.word	0x20003ba0
 800d84c:	20003c24 	.word	0x20003c24
 800d850:	20003c8c 	.word	0x20003c8c
 800d854:	20001ca0 	.word	0x20001ca0
 800d858:	20003bb8 	.word	0x20003bb8
 800d85c:	20003c70 	.word	0x20003c70
 800d860:	20003c78 	.word	0x20003c78
 800d864:	20003bfc 	.word	0x20003bfc
 800d868:	20003c00 	.word	0x20003c00
 800d86c:	20003c40 	.word	0x20003c40
 800d870:	20003c58 	.word	0x20003c58
 800d874:	20003c64 	.word	0x20003c64
 800d878:	20003c44 	.word	0x20003c44
 800d87c:	20003c54 	.word	0x20003c54
 800d880:	20003c68 	.word	0x20003c68
 800d884:	20003c6c 	.word	0x20003c6c
 800d888:	20003c04 	.word	0x20003c04
 800d88c:	20003c20 	.word	0x20003c20
 800d890:	20003c7c 	.word	0x20003c7c
 800d894:	20003c84 	.word	0x20003c84
 800d898:	20001da4 	.word	0x20001da4
		} else {
			g_referee_limiters.feeding_speed = LV1_FEEDER;
 800d89c:	4b43      	ldr	r3, [pc, #268]	@ (800d9ac <referee_processing_task+0x3fc>)
 800d89e:	f44f 6296 	mov.w	r2, #1200	@ 0x4b0
 800d8a2:	801a      	strh	r2, [r3, #0]
			g_referee_limiters.projectile_speed = LV1_PROJECTILE;
 800d8a4:	4b41      	ldr	r3, [pc, #260]	@ (800d9ac <referee_processing_task+0x3fc>)
 800d8a6:	2213      	movs	r2, #19
 800d8a8:	805a      	strh	r2, [r3, #2]
		}
		if (ref_robot_data.robot_level != 0) {
 800d8aa:	4b41      	ldr	r3, [pc, #260]	@ (800d9b0 <referee_processing_task+0x400>)
 800d8ac:	785b      	ldrb	r3, [r3, #1]
 800d8ae:	2b00      	cmp	r3, #0
 800d8b0:	d070      	beq.n	800d994 <referee_processing_task+0x3e4>
			float temp_buffer = 1;
 800d8b2:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800d8b6:	61fb      	str	r3, [r7, #28]
			if (ref_power_data.buffer_energy < 50){
 800d8b8:	4b3e      	ldr	r3, [pc, #248]	@ (800d9b4 <referee_processing_task+0x404>)
 800d8ba:	891b      	ldrh	r3, [r3, #8]
 800d8bc:	2b31      	cmp	r3, #49	@ 0x31
 800d8be:	d819      	bhi.n	800d8f4 <referee_processing_task+0x344>
			temp_buffer = (float)ref_power_data.buffer_energy/50;
 800d8c0:	4b3c      	ldr	r3, [pc, #240]	@ (800d9b4 <referee_processing_task+0x404>)
 800d8c2:	891b      	ldrh	r3, [r3, #8]
 800d8c4:	ee07 3a90 	vmov	s15, r3
 800d8c8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800d8cc:	eddf 6a3a 	vldr	s13, [pc, #232]	@ 800d9b8 <referee_processing_task+0x408>
 800d8d0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800d8d4:	edc7 7a07 	vstr	s15, [r7, #28]
			temp_buffer = (temp_buffer > 1) ? 1 : temp_buffer;
 800d8d8:	edd7 7a07 	vldr	s15, [r7, #28]
 800d8dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800d8e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 800d8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d8e8:	dd02      	ble.n	800d8f0 <referee_processing_task+0x340>
 800d8ea:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800d8ee:	e000      	b.n	800d8f2 <referee_processing_task+0x342>
 800d8f0:	69fb      	ldr	r3, [r7, #28]
 800d8f2:	61fb      	str	r3, [r7, #28]
			}
#ifdef CHASSIS_POWER_BUFFER_LIMITER
			g_referee_limiters.wheel_buffer_limit = temp_buffer * temp_buffer;
 800d8f4:	edd7 7a07 	vldr	s15, [r7, #28]
 800d8f8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800d8fc:	4b2b      	ldr	r3, [pc, #172]	@ (800d9ac <referee_processing_task+0x3fc>)
 800d8fe:	edc3 7a02 	vstr	s15, [r3, #8]
#else
			g_referee_limiters.wheel_buffer_limit = 1;
#endif

			static float prev_chassis_power;
			float max_power = CHASSIS_MAX_POWER;
 800d902:	4b2e      	ldr	r3, [pc, #184]	@ (800d9bc <referee_processing_task+0x40c>)
 800d904:	61bb      	str	r3, [r7, #24]
			float curr_chassis_power = prev_chassis_power * 0.5 + ref_power_data.chassis_power * 0.5;
 800d906:	4b2e      	ldr	r3, [pc, #184]	@ (800d9c0 <referee_processing_task+0x410>)
 800d908:	681b      	ldr	r3, [r3, #0]
 800d90a:	4618      	mov	r0, r3
 800d90c:	f7f2 fe1c 	bl	8000548 <__aeabi_f2d>
 800d910:	f04f 0200 	mov.w	r2, #0
 800d914:	4b2b      	ldr	r3, [pc, #172]	@ (800d9c4 <referee_processing_task+0x414>)
 800d916:	f7f2 fe6f 	bl	80005f8 <__aeabi_dmul>
 800d91a:	4602      	mov	r2, r0
 800d91c:	460b      	mov	r3, r1
 800d91e:	4614      	mov	r4, r2
 800d920:	461d      	mov	r5, r3
 800d922:	4b24      	ldr	r3, [pc, #144]	@ (800d9b4 <referee_processing_task+0x404>)
 800d924:	685b      	ldr	r3, [r3, #4]
 800d926:	4618      	mov	r0, r3
 800d928:	f7f2 fe0e 	bl	8000548 <__aeabi_f2d>
 800d92c:	f04f 0200 	mov.w	r2, #0
 800d930:	4b24      	ldr	r3, [pc, #144]	@ (800d9c4 <referee_processing_task+0x414>)
 800d932:	f7f2 fe61 	bl	80005f8 <__aeabi_dmul>
 800d936:	4602      	mov	r2, r0
 800d938:	460b      	mov	r3, r1
 800d93a:	4620      	mov	r0, r4
 800d93c:	4629      	mov	r1, r5
 800d93e:	f7f2 fca5 	bl	800028c <__adddf3>
 800d942:	4602      	mov	r2, r0
 800d944:	460b      	mov	r3, r1
 800d946:	4610      	mov	r0, r2
 800d948:	4619      	mov	r1, r3
 800d94a:	f7f3 f94d 	bl	8000be8 <__aeabi_d2f>
 800d94e:	4603      	mov	r3, r0
 800d950:	613b      	str	r3, [r7, #16]
			prev_chassis_power = ref_power_data.chassis_power;
 800d952:	4b18      	ldr	r3, [pc, #96]	@ (800d9b4 <referee_processing_task+0x404>)
 800d954:	685b      	ldr	r3, [r3, #4]
 800d956:	4a1a      	ldr	r2, [pc, #104]	@ (800d9c0 <referee_processing_task+0x410>)
 800d958:	6013      	str	r3, [r2, #0]
			if (ref_robot_data.chassis_power_limit < CHASSIS_MAX_POWER){
 800d95a:	4b15      	ldr	r3, [pc, #84]	@ (800d9b0 <referee_processing_task+0x400>)
 800d95c:	8b1b      	ldrh	r3, [r3, #24]
 800d95e:	f5b3 7fc8 	cmp.w	r3, #400	@ 0x190
 800d962:	d207      	bcs.n	800d974 <referee_processing_task+0x3c4>
				max_power = ref_robot_data.chassis_power_limit;
 800d964:	4b12      	ldr	r3, [pc, #72]	@ (800d9b0 <referee_processing_task+0x400>)
 800d966:	8b1b      	ldrh	r3, [r3, #24]
 800d968:	ee07 3a90 	vmov	s15, r3
 800d96c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800d970:	edc7 7a06 	vstr	s15, [r7, #24]
			}
			float temp_power = (float) ((curr_chassis_power)/(max_power - CHASSIS_POWER_MARGIN));
 800d974:	edd7 7a06 	vldr	s15, [r7, #24]
 800d978:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800d97c:	ee37 7ac7 	vsub.f32	s14, s15, s14
 800d980:	edd7 6a04 	vldr	s13, [r7, #16]
 800d984:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800d988:	edc7 7a03 	vstr	s15, [r7, #12]
//			temp_power = (temp_power > 1) ? 1 : temp_power;
			g_referee_limiters.wheel_power_limit = temp_power;
 800d98c:	4a07      	ldr	r2, [pc, #28]	@ (800d9ac <referee_processing_task+0x3fc>)
 800d98e:	68fb      	ldr	r3, [r7, #12]
 800d990:	6053      	str	r3, [r2, #4]
 800d992:	e007      	b.n	800d9a4 <referee_processing_task+0x3f4>
//			arm_sqrt_f32(temp_power, &referee_limiters.wheel_power_limit);
		} else {
			g_referee_limiters.wheel_buffer_limit = 1;
 800d994:	4b05      	ldr	r3, [pc, #20]	@ (800d9ac <referee_processing_task+0x3fc>)
 800d996:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800d99a:	609a      	str	r2, [r3, #8]
			g_referee_limiters.wheel_power_limit = 1;
 800d99c:	4b03      	ldr	r3, [pc, #12]	@ (800d9ac <referee_processing_task+0x3fc>)
 800d99e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800d9a2:	605a      	str	r2, [r3, #4]

		}
		vTaskDelay(2);
 800d9a4:	2002      	movs	r0, #2
 800d9a6:	f00d facd 	bl	801af44 <vTaskDelay>
	while (1) {
 800d9aa:	e624      	b.n	800d5f6 <referee_processing_task+0x46>
 800d9ac:	20003ba0 	.word	0x20003ba0
 800d9b0:	20003c24 	.word	0x20003c24
 800d9b4:	20003c44 	.word	0x20003c44
 800d9b8:	42480000 	.word	0x42480000
 800d9bc:	43c80000 	.word	0x43c80000
 800d9c0:	20003d94 	.word	0x20003d94
 800d9c4:	3fe00000 	.word	0x3fe00000

0800d9c8 <rtIsInf>:
 800d9c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d9ca:	b083      	sub	sp, #12
 800d9cc:	af00      	add	r7, sp, #0
 800d9ce:	ed87 0b00 	vstr	d0, [r7]
 800d9d2:	683c      	ldr	r4, [r7, #0]
 800d9d4:	687b      	ldr	r3, [r7, #4]
 800d9d6:	f023 4500 	bic.w	r5, r3, #2147483648	@ 0x80000000
 800d9da:	2301      	movs	r3, #1
 800d9dc:	461e      	mov	r6, r3
 800d9de:	f04f 32ff 	mov.w	r2, #4294967295
 800d9e2:	4b0f      	ldr	r3, [pc, #60]	@ (800da20 <rtIsInf+0x58>)
 800d9e4:	4620      	mov	r0, r4
 800d9e6:	4629      	mov	r1, r5
 800d9e8:	f7f3 f8a0 	bl	8000b2c <__aeabi_dcmpun>
 800d9ec:	4603      	mov	r3, r0
 800d9ee:	2b00      	cmp	r3, #0
 800d9f0:	d10b      	bne.n	800da0a <rtIsInf+0x42>
 800d9f2:	f04f 32ff 	mov.w	r2, #4294967295
 800d9f6:	4b0a      	ldr	r3, [pc, #40]	@ (800da20 <rtIsInf+0x58>)
 800d9f8:	4620      	mov	r0, r4
 800d9fa:	4629      	mov	r1, r5
 800d9fc:	f7f3 f878 	bl	8000af0 <__aeabi_dcmple>
 800da00:	4603      	mov	r3, r0
 800da02:	2b00      	cmp	r3, #0
 800da04:	d101      	bne.n	800da0a <rtIsInf+0x42>
 800da06:	2300      	movs	r3, #0
 800da08:	461e      	mov	r6, r3
 800da0a:	b2f3      	uxtb	r3, r6
 800da0c:	f083 0301 	eor.w	r3, r3, #1
 800da10:	b2db      	uxtb	r3, r3
 800da12:	f003 0301 	and.w	r3, r3, #1
 800da16:	b2db      	uxtb	r3, r3
 800da18:	4618      	mov	r0, r3
 800da1a:	370c      	adds	r7, #12
 800da1c:	46bd      	mov	sp, r7
 800da1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da20:	7fefffff 	.word	0x7fefffff

0800da24 <rtIsNaN>:
 800da24:	b580      	push	{r7, lr}
 800da26:	b082      	sub	sp, #8
 800da28:	af00      	add	r7, sp, #0
 800da2a:	ed87 0b00 	vstr	d0, [r7]
 800da2e:	e9d7 2300 	ldrd	r2, r3, [r7]
 800da32:	e9d7 0100 	ldrd	r0, r1, [r7]
 800da36:	f7f3 f879 	bl	8000b2c <__aeabi_dcmpun>
 800da3a:	4603      	mov	r3, r0
 800da3c:	2b00      	cmp	r3, #0
 800da3e:	d001      	beq.n	800da44 <rtIsNaN+0x20>
 800da40:	2301      	movs	r3, #1
 800da42:	e000      	b.n	800da46 <rtIsNaN+0x22>
 800da44:	2300      	movs	r3, #0
 800da46:	4618      	mov	r0, r3
 800da48:	3708      	adds	r7, #8
 800da4a:	46bd      	mov	sp, r7
 800da4c:	bd80      	pop	{r7, pc}

0800da4e <startup_task>:
#include "startup_task.h"
#include "gimbal_control_task.h"
#include "buzzing_task.h"
#include <can_msg_processor.h>

void startup_task() {
 800da4e:	b580      	push	{r7, lr}
 800da50:	af00      	add	r7, sp, #0
	//todo: shift all to an actual task, reimplement motor not connected errors
	led_on();
 800da52:	f7f4 fa8b 	bl	8001f6c <led_on>
	buzzer_init();
 800da56:	f7f3 fbab 	bl	80011b0 <buzzer_init>
	imu_init();
 800da5a:	f7f4 f891 	bl	8001b80 <imu_init>
	led_green_off();
 800da5e:	f7f4 fa77 	bl	8001f50 <led_green_off>
	start_micros_timer();
 800da62:	f7f4 fb89 	bl	8002178 <start_micros_timer>
	led_toggle();
 800da66:	f7f4 fa9f 	bl	8001fa8 <led_toggle>

}
 800da6a:	bf00      	nop
 800da6c:	bd80      	pop	{r7, pc}
	...

0800da70 <usb_vcp_processing>:
uint8_t usb_waiting = 0;

//#define DATA_OUTPUT_MODE
#define USB_CONFIG_MODE

void usb_vcp_processing(uint8_t *buffer, uint32_t *len) {
 800da70:	b580      	push	{r7, lr}
 800da72:	b0c4      	sub	sp, #272	@ 0x110
 800da74:	af00      	add	r7, sp, #0
 800da76:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800da7a:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800da7e:	6018      	str	r0, [r3, #0]
 800da80:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800da84:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800da88:	6019      	str	r1, [r3, #0]
	uint8_t blank_buffer[MAX_CHAR_SIZE] = { 0 };
 800da8a:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800da8e:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800da92:	2200      	movs	r2, #0
 800da94:	601a      	str	r2, [r3, #0]
 800da96:	3304      	adds	r3, #4
 800da98:	22fc      	movs	r2, #252	@ 0xfc
 800da9a:	2100      	movs	r1, #0
 800da9c:	4618      	mov	r0, r3
 800da9e:	f00f ff98 	bl	801d9d2 <memset>
	memcpy(blank_buffer, buffer, *len);
 800daa2:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800daa6:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800daaa:	681b      	ldr	r3, [r3, #0]
 800daac:	681a      	ldr	r2, [r3, #0]
 800daae:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800dab2:	f5a3 7386 	sub.w	r3, r3, #268	@ 0x10c
 800dab6:	f107 0010 	add.w	r0, r7, #16
 800daba:	6819      	ldr	r1, [r3, #0]
 800dabc:	f010 f832 	bl	801db24 <memcpy>
	memcpy(usb_input_buffer, blank_buffer, MAX_CHAR_SIZE);
 800dac0:	4a1a      	ldr	r2, [pc, #104]	@ (800db2c <usb_vcp_processing+0xbc>)
 800dac2:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800dac6:	f5a3 7380 	sub.w	r3, r3, #256	@ 0x100
 800daca:	4610      	mov	r0, r2
 800dacc:	4619      	mov	r1, r3
 800dace:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800dad2:	461a      	mov	r2, r3
 800dad4:	f010 f826 	bl	801db24 <memcpy>
	usb_input_len = *len;
 800dad8:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800dadc:	f5a3 7388 	sub.w	r3, r3, #272	@ 0x110
 800dae0:	681b      	ldr	r3, [r3, #0]
 800dae2:	681b      	ldr	r3, [r3, #0]
 800dae4:	4a12      	ldr	r2, [pc, #72]	@ (800db30 <usb_vcp_processing+0xc0>)
 800dae6:	6013      	str	r3, [r2, #0]

	//Check if the currently running task needs to yield
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 800dae8:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800daec:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800daf0:	2200      	movs	r2, #0
 800daf2:	601a      	str	r2, [r3, #0]
	xSemaphoreGiveFromISR(usb_continue_semaphore, &xHigherPriorityTaskWoken);
 800daf4:	4b0f      	ldr	r3, [pc, #60]	@ (800db34 <usb_vcp_processing+0xc4>)
 800daf6:	681b      	ldr	r3, [r3, #0]
 800daf8:	f107 020c 	add.w	r2, r7, #12
 800dafc:	4611      	mov	r1, r2
 800dafe:	4618      	mov	r0, r3
 800db00:	f00c fcd6 	bl	801a4b0 <xQueueGiveFromISR>
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 800db04:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800db08:	f5a3 7382 	sub.w	r3, r3, #260	@ 0x104
 800db0c:	681b      	ldr	r3, [r3, #0]
 800db0e:	2b00      	cmp	r3, #0
 800db10:	d007      	beq.n	800db22 <usb_vcp_processing+0xb2>
 800db12:	4b09      	ldr	r3, [pc, #36]	@ (800db38 <usb_vcp_processing+0xc8>)
 800db14:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800db18:	601a      	str	r2, [r3, #0]
 800db1a:	f3bf 8f4f 	dsb	sy
 800db1e:	f3bf 8f6f 	isb	sy
}
 800db22:	bf00      	nop
 800db24:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800db28:	46bd      	mov	sp, r7
 800db2a:	bd80      	pop	{r7, pc}
 800db2c:	20003d98 	.word	0x20003d98
 800db30:	20003e98 	.word	0x20003e98
 800db34:	20003b88 	.word	0x20003b88
 800db38:	e000ed04 	.word	0xe000ed04

0800db3c <usb_task>:
	return 0;

}


void usb_task(void *argument) {
 800db3c:	b580      	push	{r7, lr}
 800db3e:	b082      	sub	sp, #8
 800db40:	af00      	add	r7, sp, #0
 800db42:	6078      	str	r0, [r7, #4]
//						CDC_Transmit_FS(usb_input_buffer, len);
//					}
//				}
//			}
//		}
		vTaskDelay(100);
 800db44:	2064      	movs	r0, #100	@ 0x64
 800db46:	f00d f9fd 	bl	801af44 <vTaskDelay>
 800db4a:	e7fb      	b.n	800db44 <usb_task+0x8>

0800db4c <HAL_Init>:
 800db4c:	b580      	push	{r7, lr}
 800db4e:	af00      	add	r7, sp, #0
 800db50:	4b0e      	ldr	r3, [pc, #56]	@ (800db8c <HAL_Init+0x40>)
 800db52:	681b      	ldr	r3, [r3, #0]
 800db54:	4a0d      	ldr	r2, [pc, #52]	@ (800db8c <HAL_Init+0x40>)
 800db56:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800db5a:	6013      	str	r3, [r2, #0]
 800db5c:	4b0b      	ldr	r3, [pc, #44]	@ (800db8c <HAL_Init+0x40>)
 800db5e:	681b      	ldr	r3, [r3, #0]
 800db60:	4a0a      	ldr	r2, [pc, #40]	@ (800db8c <HAL_Init+0x40>)
 800db62:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800db66:	6013      	str	r3, [r2, #0]
 800db68:	4b08      	ldr	r3, [pc, #32]	@ (800db8c <HAL_Init+0x40>)
 800db6a:	681b      	ldr	r3, [r3, #0]
 800db6c:	4a07      	ldr	r2, [pc, #28]	@ (800db8c <HAL_Init+0x40>)
 800db6e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800db72:	6013      	str	r3, [r2, #0]
 800db74:	2003      	movs	r0, #3
 800db76:	f001 fa02 	bl	800ef7e <HAL_NVIC_SetPriorityGrouping>
 800db7a:	200f      	movs	r0, #15
 800db7c:	f7f5 ffa6 	bl	8003acc <HAL_InitTick>
 800db80:	f7f5 ff78 	bl	8003a74 <HAL_MspInit>
 800db84:	2300      	movs	r3, #0
 800db86:	4618      	mov	r0, r3
 800db88:	bd80      	pop	{r7, pc}
 800db8a:	bf00      	nop
 800db8c:	40023c00 	.word	0x40023c00

0800db90 <HAL_IncTick>:
 800db90:	b480      	push	{r7}
 800db92:	af00      	add	r7, sp, #0
 800db94:	4b06      	ldr	r3, [pc, #24]	@ (800dbb0 <HAL_IncTick+0x20>)
 800db96:	781b      	ldrb	r3, [r3, #0]
 800db98:	461a      	mov	r2, r3
 800db9a:	4b06      	ldr	r3, [pc, #24]	@ (800dbb4 <HAL_IncTick+0x24>)
 800db9c:	681b      	ldr	r3, [r3, #0]
 800db9e:	4413      	add	r3, r2
 800dba0:	4a04      	ldr	r2, [pc, #16]	@ (800dbb4 <HAL_IncTick+0x24>)
 800dba2:	6013      	str	r3, [r2, #0]
 800dba4:	bf00      	nop
 800dba6:	46bd      	mov	sp, r7
 800dba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbac:	4770      	bx	lr
 800dbae:	bf00      	nop
 800dbb0:	2000004c 	.word	0x2000004c
 800dbb4:	20003e9c 	.word	0x20003e9c

0800dbb8 <HAL_GetTick>:
 800dbb8:	b480      	push	{r7}
 800dbba:	af00      	add	r7, sp, #0
 800dbbc:	4b03      	ldr	r3, [pc, #12]	@ (800dbcc <HAL_GetTick+0x14>)
 800dbbe:	681b      	ldr	r3, [r3, #0]
 800dbc0:	4618      	mov	r0, r3
 800dbc2:	46bd      	mov	sp, r7
 800dbc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbc8:	4770      	bx	lr
 800dbca:	bf00      	nop
 800dbcc:	20003e9c 	.word	0x20003e9c

0800dbd0 <HAL_Delay>:
 800dbd0:	b580      	push	{r7, lr}
 800dbd2:	b084      	sub	sp, #16
 800dbd4:	af00      	add	r7, sp, #0
 800dbd6:	6078      	str	r0, [r7, #4]
 800dbd8:	f7ff ffee 	bl	800dbb8 <HAL_GetTick>
 800dbdc:	60b8      	str	r0, [r7, #8]
 800dbde:	687b      	ldr	r3, [r7, #4]
 800dbe0:	60fb      	str	r3, [r7, #12]
 800dbe2:	68fb      	ldr	r3, [r7, #12]
 800dbe4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800dbe8:	d005      	beq.n	800dbf6 <HAL_Delay+0x26>
 800dbea:	4b0a      	ldr	r3, [pc, #40]	@ (800dc14 <HAL_Delay+0x44>)
 800dbec:	781b      	ldrb	r3, [r3, #0]
 800dbee:	461a      	mov	r2, r3
 800dbf0:	68fb      	ldr	r3, [r7, #12]
 800dbf2:	4413      	add	r3, r2
 800dbf4:	60fb      	str	r3, [r7, #12]
 800dbf6:	bf00      	nop
 800dbf8:	f7ff ffde 	bl	800dbb8 <HAL_GetTick>
 800dbfc:	4602      	mov	r2, r0
 800dbfe:	68bb      	ldr	r3, [r7, #8]
 800dc00:	1ad3      	subs	r3, r2, r3
 800dc02:	68fa      	ldr	r2, [r7, #12]
 800dc04:	429a      	cmp	r2, r3
 800dc06:	d8f7      	bhi.n	800dbf8 <HAL_Delay+0x28>
 800dc08:	bf00      	nop
 800dc0a:	bf00      	nop
 800dc0c:	3710      	adds	r7, #16
 800dc0e:	46bd      	mov	sp, r7
 800dc10:	bd80      	pop	{r7, pc}
 800dc12:	bf00      	nop
 800dc14:	2000004c 	.word	0x2000004c

0800dc18 <HAL_ADC_Init>:
 800dc18:	b580      	push	{r7, lr}
 800dc1a:	b084      	sub	sp, #16
 800dc1c:	af00      	add	r7, sp, #0
 800dc1e:	6078      	str	r0, [r7, #4]
 800dc20:	2300      	movs	r3, #0
 800dc22:	73fb      	strb	r3, [r7, #15]
 800dc24:	687b      	ldr	r3, [r7, #4]
 800dc26:	2b00      	cmp	r3, #0
 800dc28:	d101      	bne.n	800dc2e <HAL_ADC_Init+0x16>
 800dc2a:	2301      	movs	r3, #1
 800dc2c:	e033      	b.n	800dc96 <HAL_ADC_Init+0x7e>
 800dc2e:	687b      	ldr	r3, [r7, #4]
 800dc30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dc32:	2b00      	cmp	r3, #0
 800dc34:	d109      	bne.n	800dc4a <HAL_ADC_Init+0x32>
 800dc36:	6878      	ldr	r0, [r7, #4]
 800dc38:	f7f5 f8ae 	bl	8002d98 <HAL_ADC_MspInit>
 800dc3c:	687b      	ldr	r3, [r7, #4]
 800dc3e:	2200      	movs	r2, #0
 800dc40:	645a      	str	r2, [r3, #68]	@ 0x44
 800dc42:	687b      	ldr	r3, [r7, #4]
 800dc44:	2200      	movs	r2, #0
 800dc46:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dc4a:	687b      	ldr	r3, [r7, #4]
 800dc4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dc4e:	f003 0310 	and.w	r3, r3, #16
 800dc52:	2b00      	cmp	r3, #0
 800dc54:	d118      	bne.n	800dc88 <HAL_ADC_Init+0x70>
 800dc56:	687b      	ldr	r3, [r7, #4]
 800dc58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dc5a:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 800dc5e:	f023 0302 	bic.w	r3, r3, #2
 800dc62:	f043 0202 	orr.w	r2, r3, #2
 800dc66:	687b      	ldr	r3, [r7, #4]
 800dc68:	641a      	str	r2, [r3, #64]	@ 0x40
 800dc6a:	6878      	ldr	r0, [r7, #4]
 800dc6c:	f000 f93a 	bl	800dee4 <ADC_Init>
 800dc70:	687b      	ldr	r3, [r7, #4]
 800dc72:	2200      	movs	r2, #0
 800dc74:	645a      	str	r2, [r3, #68]	@ 0x44
 800dc76:	687b      	ldr	r3, [r7, #4]
 800dc78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dc7a:	f023 0303 	bic.w	r3, r3, #3
 800dc7e:	f043 0201 	orr.w	r2, r3, #1
 800dc82:	687b      	ldr	r3, [r7, #4]
 800dc84:	641a      	str	r2, [r3, #64]	@ 0x40
 800dc86:	e001      	b.n	800dc8c <HAL_ADC_Init+0x74>
 800dc88:	2301      	movs	r3, #1
 800dc8a:	73fb      	strb	r3, [r7, #15]
 800dc8c:	687b      	ldr	r3, [r7, #4]
 800dc8e:	2200      	movs	r2, #0
 800dc90:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dc94:	7bfb      	ldrb	r3, [r7, #15]
 800dc96:	4618      	mov	r0, r3
 800dc98:	3710      	adds	r7, #16
 800dc9a:	46bd      	mov	sp, r7
 800dc9c:	bd80      	pop	{r7, pc}
	...

0800dca0 <HAL_ADC_ConfigChannel>:
 800dca0:	b480      	push	{r7}
 800dca2:	b085      	sub	sp, #20
 800dca4:	af00      	add	r7, sp, #0
 800dca6:	6078      	str	r0, [r7, #4]
 800dca8:	6039      	str	r1, [r7, #0]
 800dcaa:	2300      	movs	r3, #0
 800dcac:	60bb      	str	r3, [r7, #8]
 800dcae:	687b      	ldr	r3, [r7, #4]
 800dcb0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800dcb4:	2b01      	cmp	r3, #1
 800dcb6:	d101      	bne.n	800dcbc <HAL_ADC_ConfigChannel+0x1c>
 800dcb8:	2302      	movs	r3, #2
 800dcba:	e105      	b.n	800dec8 <HAL_ADC_ConfigChannel+0x228>
 800dcbc:	687b      	ldr	r3, [r7, #4]
 800dcbe:	2201      	movs	r2, #1
 800dcc0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dcc4:	683b      	ldr	r3, [r7, #0]
 800dcc6:	681b      	ldr	r3, [r3, #0]
 800dcc8:	2b09      	cmp	r3, #9
 800dcca:	d925      	bls.n	800dd18 <HAL_ADC_ConfigChannel+0x78>
 800dccc:	687b      	ldr	r3, [r7, #4]
 800dcce:	681b      	ldr	r3, [r3, #0]
 800dcd0:	68d9      	ldr	r1, [r3, #12]
 800dcd2:	683b      	ldr	r3, [r7, #0]
 800dcd4:	681b      	ldr	r3, [r3, #0]
 800dcd6:	b29b      	uxth	r3, r3
 800dcd8:	461a      	mov	r2, r3
 800dcda:	4613      	mov	r3, r2
 800dcdc:	005b      	lsls	r3, r3, #1
 800dcde:	4413      	add	r3, r2
 800dce0:	3b1e      	subs	r3, #30
 800dce2:	2207      	movs	r2, #7
 800dce4:	fa02 f303 	lsl.w	r3, r2, r3
 800dce8:	43da      	mvns	r2, r3
 800dcea:	687b      	ldr	r3, [r7, #4]
 800dcec:	681b      	ldr	r3, [r3, #0]
 800dcee:	400a      	ands	r2, r1
 800dcf0:	60da      	str	r2, [r3, #12]
 800dcf2:	687b      	ldr	r3, [r7, #4]
 800dcf4:	681b      	ldr	r3, [r3, #0]
 800dcf6:	68d9      	ldr	r1, [r3, #12]
 800dcf8:	683b      	ldr	r3, [r7, #0]
 800dcfa:	689a      	ldr	r2, [r3, #8]
 800dcfc:	683b      	ldr	r3, [r7, #0]
 800dcfe:	681b      	ldr	r3, [r3, #0]
 800dd00:	b29b      	uxth	r3, r3
 800dd02:	4618      	mov	r0, r3
 800dd04:	4603      	mov	r3, r0
 800dd06:	005b      	lsls	r3, r3, #1
 800dd08:	4403      	add	r3, r0
 800dd0a:	3b1e      	subs	r3, #30
 800dd0c:	409a      	lsls	r2, r3
 800dd0e:	687b      	ldr	r3, [r7, #4]
 800dd10:	681b      	ldr	r3, [r3, #0]
 800dd12:	430a      	orrs	r2, r1
 800dd14:	60da      	str	r2, [r3, #12]
 800dd16:	e022      	b.n	800dd5e <HAL_ADC_ConfigChannel+0xbe>
 800dd18:	687b      	ldr	r3, [r7, #4]
 800dd1a:	681b      	ldr	r3, [r3, #0]
 800dd1c:	6919      	ldr	r1, [r3, #16]
 800dd1e:	683b      	ldr	r3, [r7, #0]
 800dd20:	681b      	ldr	r3, [r3, #0]
 800dd22:	b29b      	uxth	r3, r3
 800dd24:	461a      	mov	r2, r3
 800dd26:	4613      	mov	r3, r2
 800dd28:	005b      	lsls	r3, r3, #1
 800dd2a:	4413      	add	r3, r2
 800dd2c:	2207      	movs	r2, #7
 800dd2e:	fa02 f303 	lsl.w	r3, r2, r3
 800dd32:	43da      	mvns	r2, r3
 800dd34:	687b      	ldr	r3, [r7, #4]
 800dd36:	681b      	ldr	r3, [r3, #0]
 800dd38:	400a      	ands	r2, r1
 800dd3a:	611a      	str	r2, [r3, #16]
 800dd3c:	687b      	ldr	r3, [r7, #4]
 800dd3e:	681b      	ldr	r3, [r3, #0]
 800dd40:	6919      	ldr	r1, [r3, #16]
 800dd42:	683b      	ldr	r3, [r7, #0]
 800dd44:	689a      	ldr	r2, [r3, #8]
 800dd46:	683b      	ldr	r3, [r7, #0]
 800dd48:	681b      	ldr	r3, [r3, #0]
 800dd4a:	b29b      	uxth	r3, r3
 800dd4c:	4618      	mov	r0, r3
 800dd4e:	4603      	mov	r3, r0
 800dd50:	005b      	lsls	r3, r3, #1
 800dd52:	4403      	add	r3, r0
 800dd54:	409a      	lsls	r2, r3
 800dd56:	687b      	ldr	r3, [r7, #4]
 800dd58:	681b      	ldr	r3, [r3, #0]
 800dd5a:	430a      	orrs	r2, r1
 800dd5c:	611a      	str	r2, [r3, #16]
 800dd5e:	683b      	ldr	r3, [r7, #0]
 800dd60:	685b      	ldr	r3, [r3, #4]
 800dd62:	2b06      	cmp	r3, #6
 800dd64:	d824      	bhi.n	800ddb0 <HAL_ADC_ConfigChannel+0x110>
 800dd66:	687b      	ldr	r3, [r7, #4]
 800dd68:	681b      	ldr	r3, [r3, #0]
 800dd6a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800dd6c:	683b      	ldr	r3, [r7, #0]
 800dd6e:	685a      	ldr	r2, [r3, #4]
 800dd70:	4613      	mov	r3, r2
 800dd72:	009b      	lsls	r3, r3, #2
 800dd74:	4413      	add	r3, r2
 800dd76:	3b05      	subs	r3, #5
 800dd78:	221f      	movs	r2, #31
 800dd7a:	fa02 f303 	lsl.w	r3, r2, r3
 800dd7e:	43da      	mvns	r2, r3
 800dd80:	687b      	ldr	r3, [r7, #4]
 800dd82:	681b      	ldr	r3, [r3, #0]
 800dd84:	400a      	ands	r2, r1
 800dd86:	635a      	str	r2, [r3, #52]	@ 0x34
 800dd88:	687b      	ldr	r3, [r7, #4]
 800dd8a:	681b      	ldr	r3, [r3, #0]
 800dd8c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800dd8e:	683b      	ldr	r3, [r7, #0]
 800dd90:	681b      	ldr	r3, [r3, #0]
 800dd92:	b29b      	uxth	r3, r3
 800dd94:	4618      	mov	r0, r3
 800dd96:	683b      	ldr	r3, [r7, #0]
 800dd98:	685a      	ldr	r2, [r3, #4]
 800dd9a:	4613      	mov	r3, r2
 800dd9c:	009b      	lsls	r3, r3, #2
 800dd9e:	4413      	add	r3, r2
 800dda0:	3b05      	subs	r3, #5
 800dda2:	fa00 f203 	lsl.w	r2, r0, r3
 800dda6:	687b      	ldr	r3, [r7, #4]
 800dda8:	681b      	ldr	r3, [r3, #0]
 800ddaa:	430a      	orrs	r2, r1
 800ddac:	635a      	str	r2, [r3, #52]	@ 0x34
 800ddae:	e04c      	b.n	800de4a <HAL_ADC_ConfigChannel+0x1aa>
 800ddb0:	683b      	ldr	r3, [r7, #0]
 800ddb2:	685b      	ldr	r3, [r3, #4]
 800ddb4:	2b0c      	cmp	r3, #12
 800ddb6:	d824      	bhi.n	800de02 <HAL_ADC_ConfigChannel+0x162>
 800ddb8:	687b      	ldr	r3, [r7, #4]
 800ddba:	681b      	ldr	r3, [r3, #0]
 800ddbc:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800ddbe:	683b      	ldr	r3, [r7, #0]
 800ddc0:	685a      	ldr	r2, [r3, #4]
 800ddc2:	4613      	mov	r3, r2
 800ddc4:	009b      	lsls	r3, r3, #2
 800ddc6:	4413      	add	r3, r2
 800ddc8:	3b23      	subs	r3, #35	@ 0x23
 800ddca:	221f      	movs	r2, #31
 800ddcc:	fa02 f303 	lsl.w	r3, r2, r3
 800ddd0:	43da      	mvns	r2, r3
 800ddd2:	687b      	ldr	r3, [r7, #4]
 800ddd4:	681b      	ldr	r3, [r3, #0]
 800ddd6:	400a      	ands	r2, r1
 800ddd8:	631a      	str	r2, [r3, #48]	@ 0x30
 800ddda:	687b      	ldr	r3, [r7, #4]
 800dddc:	681b      	ldr	r3, [r3, #0]
 800ddde:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 800dde0:	683b      	ldr	r3, [r7, #0]
 800dde2:	681b      	ldr	r3, [r3, #0]
 800dde4:	b29b      	uxth	r3, r3
 800dde6:	4618      	mov	r0, r3
 800dde8:	683b      	ldr	r3, [r7, #0]
 800ddea:	685a      	ldr	r2, [r3, #4]
 800ddec:	4613      	mov	r3, r2
 800ddee:	009b      	lsls	r3, r3, #2
 800ddf0:	4413      	add	r3, r2
 800ddf2:	3b23      	subs	r3, #35	@ 0x23
 800ddf4:	fa00 f203 	lsl.w	r2, r0, r3
 800ddf8:	687b      	ldr	r3, [r7, #4]
 800ddfa:	681b      	ldr	r3, [r3, #0]
 800ddfc:	430a      	orrs	r2, r1
 800ddfe:	631a      	str	r2, [r3, #48]	@ 0x30
 800de00:	e023      	b.n	800de4a <HAL_ADC_ConfigChannel+0x1aa>
 800de02:	687b      	ldr	r3, [r7, #4]
 800de04:	681b      	ldr	r3, [r3, #0]
 800de06:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800de08:	683b      	ldr	r3, [r7, #0]
 800de0a:	685a      	ldr	r2, [r3, #4]
 800de0c:	4613      	mov	r3, r2
 800de0e:	009b      	lsls	r3, r3, #2
 800de10:	4413      	add	r3, r2
 800de12:	3b41      	subs	r3, #65	@ 0x41
 800de14:	221f      	movs	r2, #31
 800de16:	fa02 f303 	lsl.w	r3, r2, r3
 800de1a:	43da      	mvns	r2, r3
 800de1c:	687b      	ldr	r3, [r7, #4]
 800de1e:	681b      	ldr	r3, [r3, #0]
 800de20:	400a      	ands	r2, r1
 800de22:	62da      	str	r2, [r3, #44]	@ 0x2c
 800de24:	687b      	ldr	r3, [r7, #4]
 800de26:	681b      	ldr	r3, [r3, #0]
 800de28:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800de2a:	683b      	ldr	r3, [r7, #0]
 800de2c:	681b      	ldr	r3, [r3, #0]
 800de2e:	b29b      	uxth	r3, r3
 800de30:	4618      	mov	r0, r3
 800de32:	683b      	ldr	r3, [r7, #0]
 800de34:	685a      	ldr	r2, [r3, #4]
 800de36:	4613      	mov	r3, r2
 800de38:	009b      	lsls	r3, r3, #2
 800de3a:	4413      	add	r3, r2
 800de3c:	3b41      	subs	r3, #65	@ 0x41
 800de3e:	fa00 f203 	lsl.w	r2, r0, r3
 800de42:	687b      	ldr	r3, [r7, #4]
 800de44:	681b      	ldr	r3, [r3, #0]
 800de46:	430a      	orrs	r2, r1
 800de48:	62da      	str	r2, [r3, #44]	@ 0x2c
 800de4a:	4b22      	ldr	r3, [pc, #136]	@ (800ded4 <HAL_ADC_ConfigChannel+0x234>)
 800de4c:	60fb      	str	r3, [r7, #12]
 800de4e:	687b      	ldr	r3, [r7, #4]
 800de50:	681b      	ldr	r3, [r3, #0]
 800de52:	4a21      	ldr	r2, [pc, #132]	@ (800ded8 <HAL_ADC_ConfigChannel+0x238>)
 800de54:	4293      	cmp	r3, r2
 800de56:	d109      	bne.n	800de6c <HAL_ADC_ConfigChannel+0x1cc>
 800de58:	683b      	ldr	r3, [r7, #0]
 800de5a:	681b      	ldr	r3, [r3, #0]
 800de5c:	2b12      	cmp	r3, #18
 800de5e:	d105      	bne.n	800de6c <HAL_ADC_ConfigChannel+0x1cc>
 800de60:	68fb      	ldr	r3, [r7, #12]
 800de62:	685b      	ldr	r3, [r3, #4]
 800de64:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 800de68:	68fb      	ldr	r3, [r7, #12]
 800de6a:	605a      	str	r2, [r3, #4]
 800de6c:	687b      	ldr	r3, [r7, #4]
 800de6e:	681b      	ldr	r3, [r3, #0]
 800de70:	4a19      	ldr	r2, [pc, #100]	@ (800ded8 <HAL_ADC_ConfigChannel+0x238>)
 800de72:	4293      	cmp	r3, r2
 800de74:	d123      	bne.n	800debe <HAL_ADC_ConfigChannel+0x21e>
 800de76:	683b      	ldr	r3, [r7, #0]
 800de78:	681b      	ldr	r3, [r3, #0]
 800de7a:	2b10      	cmp	r3, #16
 800de7c:	d003      	beq.n	800de86 <HAL_ADC_ConfigChannel+0x1e6>
 800de7e:	683b      	ldr	r3, [r7, #0]
 800de80:	681b      	ldr	r3, [r3, #0]
 800de82:	2b11      	cmp	r3, #17
 800de84:	d11b      	bne.n	800debe <HAL_ADC_ConfigChannel+0x21e>
 800de86:	68fb      	ldr	r3, [r7, #12]
 800de88:	685b      	ldr	r3, [r3, #4]
 800de8a:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800de8e:	68fb      	ldr	r3, [r7, #12]
 800de90:	605a      	str	r2, [r3, #4]
 800de92:	683b      	ldr	r3, [r7, #0]
 800de94:	681b      	ldr	r3, [r3, #0]
 800de96:	2b10      	cmp	r3, #16
 800de98:	d111      	bne.n	800debe <HAL_ADC_ConfigChannel+0x21e>
 800de9a:	4b10      	ldr	r3, [pc, #64]	@ (800dedc <HAL_ADC_ConfigChannel+0x23c>)
 800de9c:	681b      	ldr	r3, [r3, #0]
 800de9e:	4a10      	ldr	r2, [pc, #64]	@ (800dee0 <HAL_ADC_ConfigChannel+0x240>)
 800dea0:	fba2 2303 	umull	r2, r3, r2, r3
 800dea4:	0c9a      	lsrs	r2, r3, #18
 800dea6:	4613      	mov	r3, r2
 800dea8:	009b      	lsls	r3, r3, #2
 800deaa:	4413      	add	r3, r2
 800deac:	005b      	lsls	r3, r3, #1
 800deae:	60bb      	str	r3, [r7, #8]
 800deb0:	e002      	b.n	800deb8 <HAL_ADC_ConfigChannel+0x218>
 800deb2:	68bb      	ldr	r3, [r7, #8]
 800deb4:	3b01      	subs	r3, #1
 800deb6:	60bb      	str	r3, [r7, #8]
 800deb8:	68bb      	ldr	r3, [r7, #8]
 800deba:	2b00      	cmp	r3, #0
 800debc:	d1f9      	bne.n	800deb2 <HAL_ADC_ConfigChannel+0x212>
 800debe:	687b      	ldr	r3, [r7, #4]
 800dec0:	2200      	movs	r2, #0
 800dec2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800dec6:	2300      	movs	r3, #0
 800dec8:	4618      	mov	r0, r3
 800deca:	3714      	adds	r7, #20
 800decc:	46bd      	mov	sp, r7
 800dece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ded2:	4770      	bx	lr
 800ded4:	40012300 	.word	0x40012300
 800ded8:	40012000 	.word	0x40012000
 800dedc:	20000004 	.word	0x20000004
 800dee0:	431bde83 	.word	0x431bde83

0800dee4 <ADC_Init>:
 800dee4:	b480      	push	{r7}
 800dee6:	b085      	sub	sp, #20
 800dee8:	af00      	add	r7, sp, #0
 800deea:	6078      	str	r0, [r7, #4]
 800deec:	4b79      	ldr	r3, [pc, #484]	@ (800e0d4 <ADC_Init+0x1f0>)
 800deee:	60fb      	str	r3, [r7, #12]
 800def0:	68fb      	ldr	r3, [r7, #12]
 800def2:	685b      	ldr	r3, [r3, #4]
 800def4:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 800def8:	68fb      	ldr	r3, [r7, #12]
 800defa:	605a      	str	r2, [r3, #4]
 800defc:	68fb      	ldr	r3, [r7, #12]
 800defe:	685a      	ldr	r2, [r3, #4]
 800df00:	687b      	ldr	r3, [r7, #4]
 800df02:	685b      	ldr	r3, [r3, #4]
 800df04:	431a      	orrs	r2, r3
 800df06:	68fb      	ldr	r3, [r7, #12]
 800df08:	605a      	str	r2, [r3, #4]
 800df0a:	687b      	ldr	r3, [r7, #4]
 800df0c:	681b      	ldr	r3, [r3, #0]
 800df0e:	685a      	ldr	r2, [r3, #4]
 800df10:	687b      	ldr	r3, [r7, #4]
 800df12:	681b      	ldr	r3, [r3, #0]
 800df14:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800df18:	605a      	str	r2, [r3, #4]
 800df1a:	687b      	ldr	r3, [r7, #4]
 800df1c:	681b      	ldr	r3, [r3, #0]
 800df1e:	6859      	ldr	r1, [r3, #4]
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	691b      	ldr	r3, [r3, #16]
 800df24:	021a      	lsls	r2, r3, #8
 800df26:	687b      	ldr	r3, [r7, #4]
 800df28:	681b      	ldr	r3, [r3, #0]
 800df2a:	430a      	orrs	r2, r1
 800df2c:	605a      	str	r2, [r3, #4]
 800df2e:	687b      	ldr	r3, [r7, #4]
 800df30:	681b      	ldr	r3, [r3, #0]
 800df32:	685a      	ldr	r2, [r3, #4]
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	681b      	ldr	r3, [r3, #0]
 800df38:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800df3c:	605a      	str	r2, [r3, #4]
 800df3e:	687b      	ldr	r3, [r7, #4]
 800df40:	681b      	ldr	r3, [r3, #0]
 800df42:	6859      	ldr	r1, [r3, #4]
 800df44:	687b      	ldr	r3, [r7, #4]
 800df46:	689a      	ldr	r2, [r3, #8]
 800df48:	687b      	ldr	r3, [r7, #4]
 800df4a:	681b      	ldr	r3, [r3, #0]
 800df4c:	430a      	orrs	r2, r1
 800df4e:	605a      	str	r2, [r3, #4]
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	681b      	ldr	r3, [r3, #0]
 800df54:	689a      	ldr	r2, [r3, #8]
 800df56:	687b      	ldr	r3, [r7, #4]
 800df58:	681b      	ldr	r3, [r3, #0]
 800df5a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800df5e:	609a      	str	r2, [r3, #8]
 800df60:	687b      	ldr	r3, [r7, #4]
 800df62:	681b      	ldr	r3, [r3, #0]
 800df64:	6899      	ldr	r1, [r3, #8]
 800df66:	687b      	ldr	r3, [r7, #4]
 800df68:	68da      	ldr	r2, [r3, #12]
 800df6a:	687b      	ldr	r3, [r7, #4]
 800df6c:	681b      	ldr	r3, [r3, #0]
 800df6e:	430a      	orrs	r2, r1
 800df70:	609a      	str	r2, [r3, #8]
 800df72:	687b      	ldr	r3, [r7, #4]
 800df74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800df76:	4a58      	ldr	r2, [pc, #352]	@ (800e0d8 <ADC_Init+0x1f4>)
 800df78:	4293      	cmp	r3, r2
 800df7a:	d022      	beq.n	800dfc2 <ADC_Init+0xde>
 800df7c:	687b      	ldr	r3, [r7, #4]
 800df7e:	681b      	ldr	r3, [r3, #0]
 800df80:	689a      	ldr	r2, [r3, #8]
 800df82:	687b      	ldr	r3, [r7, #4]
 800df84:	681b      	ldr	r3, [r3, #0]
 800df86:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800df8a:	609a      	str	r2, [r3, #8]
 800df8c:	687b      	ldr	r3, [r7, #4]
 800df8e:	681b      	ldr	r3, [r3, #0]
 800df90:	6899      	ldr	r1, [r3, #8]
 800df92:	687b      	ldr	r3, [r7, #4]
 800df94:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800df96:	687b      	ldr	r3, [r7, #4]
 800df98:	681b      	ldr	r3, [r3, #0]
 800df9a:	430a      	orrs	r2, r1
 800df9c:	609a      	str	r2, [r3, #8]
 800df9e:	687b      	ldr	r3, [r7, #4]
 800dfa0:	681b      	ldr	r3, [r3, #0]
 800dfa2:	689a      	ldr	r2, [r3, #8]
 800dfa4:	687b      	ldr	r3, [r7, #4]
 800dfa6:	681b      	ldr	r3, [r3, #0]
 800dfa8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800dfac:	609a      	str	r2, [r3, #8]
 800dfae:	687b      	ldr	r3, [r7, #4]
 800dfb0:	681b      	ldr	r3, [r3, #0]
 800dfb2:	6899      	ldr	r1, [r3, #8]
 800dfb4:	687b      	ldr	r3, [r7, #4]
 800dfb6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800dfb8:	687b      	ldr	r3, [r7, #4]
 800dfba:	681b      	ldr	r3, [r3, #0]
 800dfbc:	430a      	orrs	r2, r1
 800dfbe:	609a      	str	r2, [r3, #8]
 800dfc0:	e00f      	b.n	800dfe2 <ADC_Init+0xfe>
 800dfc2:	687b      	ldr	r3, [r7, #4]
 800dfc4:	681b      	ldr	r3, [r3, #0]
 800dfc6:	689a      	ldr	r2, [r3, #8]
 800dfc8:	687b      	ldr	r3, [r7, #4]
 800dfca:	681b      	ldr	r3, [r3, #0]
 800dfcc:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800dfd0:	609a      	str	r2, [r3, #8]
 800dfd2:	687b      	ldr	r3, [r7, #4]
 800dfd4:	681b      	ldr	r3, [r3, #0]
 800dfd6:	689a      	ldr	r2, [r3, #8]
 800dfd8:	687b      	ldr	r3, [r7, #4]
 800dfda:	681b      	ldr	r3, [r3, #0]
 800dfdc:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800dfe0:	609a      	str	r2, [r3, #8]
 800dfe2:	687b      	ldr	r3, [r7, #4]
 800dfe4:	681b      	ldr	r3, [r3, #0]
 800dfe6:	689a      	ldr	r2, [r3, #8]
 800dfe8:	687b      	ldr	r3, [r7, #4]
 800dfea:	681b      	ldr	r3, [r3, #0]
 800dfec:	f022 0202 	bic.w	r2, r2, #2
 800dff0:	609a      	str	r2, [r3, #8]
 800dff2:	687b      	ldr	r3, [r7, #4]
 800dff4:	681b      	ldr	r3, [r3, #0]
 800dff6:	6899      	ldr	r1, [r3, #8]
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	7e1b      	ldrb	r3, [r3, #24]
 800dffc:	005a      	lsls	r2, r3, #1
 800dffe:	687b      	ldr	r3, [r7, #4]
 800e000:	681b      	ldr	r3, [r3, #0]
 800e002:	430a      	orrs	r2, r1
 800e004:	609a      	str	r2, [r3, #8]
 800e006:	687b      	ldr	r3, [r7, #4]
 800e008:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e00c:	2b00      	cmp	r3, #0
 800e00e:	d01b      	beq.n	800e048 <ADC_Init+0x164>
 800e010:	687b      	ldr	r3, [r7, #4]
 800e012:	681b      	ldr	r3, [r3, #0]
 800e014:	685a      	ldr	r2, [r3, #4]
 800e016:	687b      	ldr	r3, [r7, #4]
 800e018:	681b      	ldr	r3, [r3, #0]
 800e01a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800e01e:	605a      	str	r2, [r3, #4]
 800e020:	687b      	ldr	r3, [r7, #4]
 800e022:	681b      	ldr	r3, [r3, #0]
 800e024:	685a      	ldr	r2, [r3, #4]
 800e026:	687b      	ldr	r3, [r7, #4]
 800e028:	681b      	ldr	r3, [r3, #0]
 800e02a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800e02e:	605a      	str	r2, [r3, #4]
 800e030:	687b      	ldr	r3, [r7, #4]
 800e032:	681b      	ldr	r3, [r3, #0]
 800e034:	6859      	ldr	r1, [r3, #4]
 800e036:	687b      	ldr	r3, [r7, #4]
 800e038:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e03a:	3b01      	subs	r3, #1
 800e03c:	035a      	lsls	r2, r3, #13
 800e03e:	687b      	ldr	r3, [r7, #4]
 800e040:	681b      	ldr	r3, [r3, #0]
 800e042:	430a      	orrs	r2, r1
 800e044:	605a      	str	r2, [r3, #4]
 800e046:	e007      	b.n	800e058 <ADC_Init+0x174>
 800e048:	687b      	ldr	r3, [r7, #4]
 800e04a:	681b      	ldr	r3, [r3, #0]
 800e04c:	685a      	ldr	r2, [r3, #4]
 800e04e:	687b      	ldr	r3, [r7, #4]
 800e050:	681b      	ldr	r3, [r3, #0]
 800e052:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800e056:	605a      	str	r2, [r3, #4]
 800e058:	687b      	ldr	r3, [r7, #4]
 800e05a:	681b      	ldr	r3, [r3, #0]
 800e05c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	681b      	ldr	r3, [r3, #0]
 800e062:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800e066:	62da      	str	r2, [r3, #44]	@ 0x2c
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	681b      	ldr	r3, [r3, #0]
 800e06c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800e06e:	687b      	ldr	r3, [r7, #4]
 800e070:	69db      	ldr	r3, [r3, #28]
 800e072:	3b01      	subs	r3, #1
 800e074:	051a      	lsls	r2, r3, #20
 800e076:	687b      	ldr	r3, [r7, #4]
 800e078:	681b      	ldr	r3, [r3, #0]
 800e07a:	430a      	orrs	r2, r1
 800e07c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800e07e:	687b      	ldr	r3, [r7, #4]
 800e080:	681b      	ldr	r3, [r3, #0]
 800e082:	689a      	ldr	r2, [r3, #8]
 800e084:	687b      	ldr	r3, [r7, #4]
 800e086:	681b      	ldr	r3, [r3, #0]
 800e088:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800e08c:	609a      	str	r2, [r3, #8]
 800e08e:	687b      	ldr	r3, [r7, #4]
 800e090:	681b      	ldr	r3, [r3, #0]
 800e092:	6899      	ldr	r1, [r3, #8]
 800e094:	687b      	ldr	r3, [r7, #4]
 800e096:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800e09a:	025a      	lsls	r2, r3, #9
 800e09c:	687b      	ldr	r3, [r7, #4]
 800e09e:	681b      	ldr	r3, [r3, #0]
 800e0a0:	430a      	orrs	r2, r1
 800e0a2:	609a      	str	r2, [r3, #8]
 800e0a4:	687b      	ldr	r3, [r7, #4]
 800e0a6:	681b      	ldr	r3, [r3, #0]
 800e0a8:	689a      	ldr	r2, [r3, #8]
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	681b      	ldr	r3, [r3, #0]
 800e0ae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800e0b2:	609a      	str	r2, [r3, #8]
 800e0b4:	687b      	ldr	r3, [r7, #4]
 800e0b6:	681b      	ldr	r3, [r3, #0]
 800e0b8:	6899      	ldr	r1, [r3, #8]
 800e0ba:	687b      	ldr	r3, [r7, #4]
 800e0bc:	695b      	ldr	r3, [r3, #20]
 800e0be:	029a      	lsls	r2, r3, #10
 800e0c0:	687b      	ldr	r3, [r7, #4]
 800e0c2:	681b      	ldr	r3, [r3, #0]
 800e0c4:	430a      	orrs	r2, r1
 800e0c6:	609a      	str	r2, [r3, #8]
 800e0c8:	bf00      	nop
 800e0ca:	3714      	adds	r7, #20
 800e0cc:	46bd      	mov	sp, r7
 800e0ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0d2:	4770      	bx	lr
 800e0d4:	40012300 	.word	0x40012300
 800e0d8:	0f000001 	.word	0x0f000001

0800e0dc <HAL_CAN_Init>:
 800e0dc:	b580      	push	{r7, lr}
 800e0de:	b084      	sub	sp, #16
 800e0e0:	af00      	add	r7, sp, #0
 800e0e2:	6078      	str	r0, [r7, #4]
 800e0e4:	687b      	ldr	r3, [r7, #4]
 800e0e6:	2b00      	cmp	r3, #0
 800e0e8:	d101      	bne.n	800e0ee <HAL_CAN_Init+0x12>
 800e0ea:	2301      	movs	r3, #1
 800e0ec:	e0ed      	b.n	800e2ca <HAL_CAN_Init+0x1ee>
 800e0ee:	687b      	ldr	r3, [r7, #4]
 800e0f0:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e0f4:	b2db      	uxtb	r3, r3
 800e0f6:	2b00      	cmp	r3, #0
 800e0f8:	d102      	bne.n	800e100 <HAL_CAN_Init+0x24>
 800e0fa:	6878      	ldr	r0, [r7, #4]
 800e0fc:	f7f4 fefc 	bl	8002ef8 <HAL_CAN_MspInit>
 800e100:	687b      	ldr	r3, [r7, #4]
 800e102:	681b      	ldr	r3, [r3, #0]
 800e104:	681a      	ldr	r2, [r3, #0]
 800e106:	687b      	ldr	r3, [r7, #4]
 800e108:	681b      	ldr	r3, [r3, #0]
 800e10a:	f042 0201 	orr.w	r2, r2, #1
 800e10e:	601a      	str	r2, [r3, #0]
 800e110:	f7ff fd52 	bl	800dbb8 <HAL_GetTick>
 800e114:	60f8      	str	r0, [r7, #12]
 800e116:	e012      	b.n	800e13e <HAL_CAN_Init+0x62>
 800e118:	f7ff fd4e 	bl	800dbb8 <HAL_GetTick>
 800e11c:	4602      	mov	r2, r0
 800e11e:	68fb      	ldr	r3, [r7, #12]
 800e120:	1ad3      	subs	r3, r2, r3
 800e122:	2b0a      	cmp	r3, #10
 800e124:	d90b      	bls.n	800e13e <HAL_CAN_Init+0x62>
 800e126:	687b      	ldr	r3, [r7, #4]
 800e128:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e12a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800e12e:	687b      	ldr	r3, [r7, #4]
 800e130:	625a      	str	r2, [r3, #36]	@ 0x24
 800e132:	687b      	ldr	r3, [r7, #4]
 800e134:	2205      	movs	r2, #5
 800e136:	f883 2020 	strb.w	r2, [r3, #32]
 800e13a:	2301      	movs	r3, #1
 800e13c:	e0c5      	b.n	800e2ca <HAL_CAN_Init+0x1ee>
 800e13e:	687b      	ldr	r3, [r7, #4]
 800e140:	681b      	ldr	r3, [r3, #0]
 800e142:	685b      	ldr	r3, [r3, #4]
 800e144:	f003 0301 	and.w	r3, r3, #1
 800e148:	2b00      	cmp	r3, #0
 800e14a:	d0e5      	beq.n	800e118 <HAL_CAN_Init+0x3c>
 800e14c:	687b      	ldr	r3, [r7, #4]
 800e14e:	681b      	ldr	r3, [r3, #0]
 800e150:	681a      	ldr	r2, [r3, #0]
 800e152:	687b      	ldr	r3, [r7, #4]
 800e154:	681b      	ldr	r3, [r3, #0]
 800e156:	f022 0202 	bic.w	r2, r2, #2
 800e15a:	601a      	str	r2, [r3, #0]
 800e15c:	f7ff fd2c 	bl	800dbb8 <HAL_GetTick>
 800e160:	60f8      	str	r0, [r7, #12]
 800e162:	e012      	b.n	800e18a <HAL_CAN_Init+0xae>
 800e164:	f7ff fd28 	bl	800dbb8 <HAL_GetTick>
 800e168:	4602      	mov	r2, r0
 800e16a:	68fb      	ldr	r3, [r7, #12]
 800e16c:	1ad3      	subs	r3, r2, r3
 800e16e:	2b0a      	cmp	r3, #10
 800e170:	d90b      	bls.n	800e18a <HAL_CAN_Init+0xae>
 800e172:	687b      	ldr	r3, [r7, #4]
 800e174:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e176:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800e17a:	687b      	ldr	r3, [r7, #4]
 800e17c:	625a      	str	r2, [r3, #36]	@ 0x24
 800e17e:	687b      	ldr	r3, [r7, #4]
 800e180:	2205      	movs	r2, #5
 800e182:	f883 2020 	strb.w	r2, [r3, #32]
 800e186:	2301      	movs	r3, #1
 800e188:	e09f      	b.n	800e2ca <HAL_CAN_Init+0x1ee>
 800e18a:	687b      	ldr	r3, [r7, #4]
 800e18c:	681b      	ldr	r3, [r3, #0]
 800e18e:	685b      	ldr	r3, [r3, #4]
 800e190:	f003 0302 	and.w	r3, r3, #2
 800e194:	2b00      	cmp	r3, #0
 800e196:	d1e5      	bne.n	800e164 <HAL_CAN_Init+0x88>
 800e198:	687b      	ldr	r3, [r7, #4]
 800e19a:	7e1b      	ldrb	r3, [r3, #24]
 800e19c:	2b01      	cmp	r3, #1
 800e19e:	d108      	bne.n	800e1b2 <HAL_CAN_Init+0xd6>
 800e1a0:	687b      	ldr	r3, [r7, #4]
 800e1a2:	681b      	ldr	r3, [r3, #0]
 800e1a4:	681a      	ldr	r2, [r3, #0]
 800e1a6:	687b      	ldr	r3, [r7, #4]
 800e1a8:	681b      	ldr	r3, [r3, #0]
 800e1aa:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 800e1ae:	601a      	str	r2, [r3, #0]
 800e1b0:	e007      	b.n	800e1c2 <HAL_CAN_Init+0xe6>
 800e1b2:	687b      	ldr	r3, [r7, #4]
 800e1b4:	681b      	ldr	r3, [r3, #0]
 800e1b6:	681a      	ldr	r2, [r3, #0]
 800e1b8:	687b      	ldr	r3, [r7, #4]
 800e1ba:	681b      	ldr	r3, [r3, #0]
 800e1bc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800e1c0:	601a      	str	r2, [r3, #0]
 800e1c2:	687b      	ldr	r3, [r7, #4]
 800e1c4:	7e5b      	ldrb	r3, [r3, #25]
 800e1c6:	2b01      	cmp	r3, #1
 800e1c8:	d108      	bne.n	800e1dc <HAL_CAN_Init+0x100>
 800e1ca:	687b      	ldr	r3, [r7, #4]
 800e1cc:	681b      	ldr	r3, [r3, #0]
 800e1ce:	681a      	ldr	r2, [r3, #0]
 800e1d0:	687b      	ldr	r3, [r7, #4]
 800e1d2:	681b      	ldr	r3, [r3, #0]
 800e1d4:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800e1d8:	601a      	str	r2, [r3, #0]
 800e1da:	e007      	b.n	800e1ec <HAL_CAN_Init+0x110>
 800e1dc:	687b      	ldr	r3, [r7, #4]
 800e1de:	681b      	ldr	r3, [r3, #0]
 800e1e0:	681a      	ldr	r2, [r3, #0]
 800e1e2:	687b      	ldr	r3, [r7, #4]
 800e1e4:	681b      	ldr	r3, [r3, #0]
 800e1e6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800e1ea:	601a      	str	r2, [r3, #0]
 800e1ec:	687b      	ldr	r3, [r7, #4]
 800e1ee:	7e9b      	ldrb	r3, [r3, #26]
 800e1f0:	2b01      	cmp	r3, #1
 800e1f2:	d108      	bne.n	800e206 <HAL_CAN_Init+0x12a>
 800e1f4:	687b      	ldr	r3, [r7, #4]
 800e1f6:	681b      	ldr	r3, [r3, #0]
 800e1f8:	681a      	ldr	r2, [r3, #0]
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	681b      	ldr	r3, [r3, #0]
 800e1fe:	f042 0220 	orr.w	r2, r2, #32
 800e202:	601a      	str	r2, [r3, #0]
 800e204:	e007      	b.n	800e216 <HAL_CAN_Init+0x13a>
 800e206:	687b      	ldr	r3, [r7, #4]
 800e208:	681b      	ldr	r3, [r3, #0]
 800e20a:	681a      	ldr	r2, [r3, #0]
 800e20c:	687b      	ldr	r3, [r7, #4]
 800e20e:	681b      	ldr	r3, [r3, #0]
 800e210:	f022 0220 	bic.w	r2, r2, #32
 800e214:	601a      	str	r2, [r3, #0]
 800e216:	687b      	ldr	r3, [r7, #4]
 800e218:	7edb      	ldrb	r3, [r3, #27]
 800e21a:	2b01      	cmp	r3, #1
 800e21c:	d108      	bne.n	800e230 <HAL_CAN_Init+0x154>
 800e21e:	687b      	ldr	r3, [r7, #4]
 800e220:	681b      	ldr	r3, [r3, #0]
 800e222:	681a      	ldr	r2, [r3, #0]
 800e224:	687b      	ldr	r3, [r7, #4]
 800e226:	681b      	ldr	r3, [r3, #0]
 800e228:	f022 0210 	bic.w	r2, r2, #16
 800e22c:	601a      	str	r2, [r3, #0]
 800e22e:	e007      	b.n	800e240 <HAL_CAN_Init+0x164>
 800e230:	687b      	ldr	r3, [r7, #4]
 800e232:	681b      	ldr	r3, [r3, #0]
 800e234:	681a      	ldr	r2, [r3, #0]
 800e236:	687b      	ldr	r3, [r7, #4]
 800e238:	681b      	ldr	r3, [r3, #0]
 800e23a:	f042 0210 	orr.w	r2, r2, #16
 800e23e:	601a      	str	r2, [r3, #0]
 800e240:	687b      	ldr	r3, [r7, #4]
 800e242:	7f1b      	ldrb	r3, [r3, #28]
 800e244:	2b01      	cmp	r3, #1
 800e246:	d108      	bne.n	800e25a <HAL_CAN_Init+0x17e>
 800e248:	687b      	ldr	r3, [r7, #4]
 800e24a:	681b      	ldr	r3, [r3, #0]
 800e24c:	681a      	ldr	r2, [r3, #0]
 800e24e:	687b      	ldr	r3, [r7, #4]
 800e250:	681b      	ldr	r3, [r3, #0]
 800e252:	f042 0208 	orr.w	r2, r2, #8
 800e256:	601a      	str	r2, [r3, #0]
 800e258:	e007      	b.n	800e26a <HAL_CAN_Init+0x18e>
 800e25a:	687b      	ldr	r3, [r7, #4]
 800e25c:	681b      	ldr	r3, [r3, #0]
 800e25e:	681a      	ldr	r2, [r3, #0]
 800e260:	687b      	ldr	r3, [r7, #4]
 800e262:	681b      	ldr	r3, [r3, #0]
 800e264:	f022 0208 	bic.w	r2, r2, #8
 800e268:	601a      	str	r2, [r3, #0]
 800e26a:	687b      	ldr	r3, [r7, #4]
 800e26c:	7f5b      	ldrb	r3, [r3, #29]
 800e26e:	2b01      	cmp	r3, #1
 800e270:	d108      	bne.n	800e284 <HAL_CAN_Init+0x1a8>
 800e272:	687b      	ldr	r3, [r7, #4]
 800e274:	681b      	ldr	r3, [r3, #0]
 800e276:	681a      	ldr	r2, [r3, #0]
 800e278:	687b      	ldr	r3, [r7, #4]
 800e27a:	681b      	ldr	r3, [r3, #0]
 800e27c:	f042 0204 	orr.w	r2, r2, #4
 800e280:	601a      	str	r2, [r3, #0]
 800e282:	e007      	b.n	800e294 <HAL_CAN_Init+0x1b8>
 800e284:	687b      	ldr	r3, [r7, #4]
 800e286:	681b      	ldr	r3, [r3, #0]
 800e288:	681a      	ldr	r2, [r3, #0]
 800e28a:	687b      	ldr	r3, [r7, #4]
 800e28c:	681b      	ldr	r3, [r3, #0]
 800e28e:	f022 0204 	bic.w	r2, r2, #4
 800e292:	601a      	str	r2, [r3, #0]
 800e294:	687b      	ldr	r3, [r7, #4]
 800e296:	689a      	ldr	r2, [r3, #8]
 800e298:	687b      	ldr	r3, [r7, #4]
 800e29a:	68db      	ldr	r3, [r3, #12]
 800e29c:	431a      	orrs	r2, r3
 800e29e:	687b      	ldr	r3, [r7, #4]
 800e2a0:	691b      	ldr	r3, [r3, #16]
 800e2a2:	431a      	orrs	r2, r3
 800e2a4:	687b      	ldr	r3, [r7, #4]
 800e2a6:	695b      	ldr	r3, [r3, #20]
 800e2a8:	ea42 0103 	orr.w	r1, r2, r3
 800e2ac:	687b      	ldr	r3, [r7, #4]
 800e2ae:	685b      	ldr	r3, [r3, #4]
 800e2b0:	1e5a      	subs	r2, r3, #1
 800e2b2:	687b      	ldr	r3, [r7, #4]
 800e2b4:	681b      	ldr	r3, [r3, #0]
 800e2b6:	430a      	orrs	r2, r1
 800e2b8:	61da      	str	r2, [r3, #28]
 800e2ba:	687b      	ldr	r3, [r7, #4]
 800e2bc:	2200      	movs	r2, #0
 800e2be:	625a      	str	r2, [r3, #36]	@ 0x24
 800e2c0:	687b      	ldr	r3, [r7, #4]
 800e2c2:	2201      	movs	r2, #1
 800e2c4:	f883 2020 	strb.w	r2, [r3, #32]
 800e2c8:	2300      	movs	r3, #0
 800e2ca:	4618      	mov	r0, r3
 800e2cc:	3710      	adds	r7, #16
 800e2ce:	46bd      	mov	sp, r7
 800e2d0:	bd80      	pop	{r7, pc}
	...

0800e2d4 <HAL_CAN_ConfigFilter>:
 800e2d4:	b480      	push	{r7}
 800e2d6:	b087      	sub	sp, #28
 800e2d8:	af00      	add	r7, sp, #0
 800e2da:	6078      	str	r0, [r7, #4]
 800e2dc:	6039      	str	r1, [r7, #0]
 800e2de:	687b      	ldr	r3, [r7, #4]
 800e2e0:	681b      	ldr	r3, [r3, #0]
 800e2e2:	617b      	str	r3, [r7, #20]
 800e2e4:	687b      	ldr	r3, [r7, #4]
 800e2e6:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e2ea:	74fb      	strb	r3, [r7, #19]
 800e2ec:	7cfb      	ldrb	r3, [r7, #19]
 800e2ee:	2b01      	cmp	r3, #1
 800e2f0:	d003      	beq.n	800e2fa <HAL_CAN_ConfigFilter+0x26>
 800e2f2:	7cfb      	ldrb	r3, [r7, #19]
 800e2f4:	2b02      	cmp	r3, #2
 800e2f6:	f040 80be 	bne.w	800e476 <HAL_CAN_ConfigFilter+0x1a2>
 800e2fa:	4b65      	ldr	r3, [pc, #404]	@ (800e490 <HAL_CAN_ConfigFilter+0x1bc>)
 800e2fc:	617b      	str	r3, [r7, #20]
 800e2fe:	697b      	ldr	r3, [r7, #20]
 800e300:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800e304:	f043 0201 	orr.w	r2, r3, #1
 800e308:	697b      	ldr	r3, [r7, #20]
 800e30a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800e30e:	697b      	ldr	r3, [r7, #20]
 800e310:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800e314:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 800e318:	697b      	ldr	r3, [r7, #20]
 800e31a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800e31e:	697b      	ldr	r3, [r7, #20]
 800e320:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 800e324:	683b      	ldr	r3, [r7, #0]
 800e326:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e328:	021b      	lsls	r3, r3, #8
 800e32a:	431a      	orrs	r2, r3
 800e32c:	697b      	ldr	r3, [r7, #20]
 800e32e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800e332:	683b      	ldr	r3, [r7, #0]
 800e334:	695b      	ldr	r3, [r3, #20]
 800e336:	f003 031f 	and.w	r3, r3, #31
 800e33a:	2201      	movs	r2, #1
 800e33c:	fa02 f303 	lsl.w	r3, r2, r3
 800e340:	60fb      	str	r3, [r7, #12]
 800e342:	697b      	ldr	r3, [r7, #20]
 800e344:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800e348:	68fb      	ldr	r3, [r7, #12]
 800e34a:	43db      	mvns	r3, r3
 800e34c:	401a      	ands	r2, r3
 800e34e:	697b      	ldr	r3, [r7, #20]
 800e350:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800e354:	683b      	ldr	r3, [r7, #0]
 800e356:	69db      	ldr	r3, [r3, #28]
 800e358:	2b00      	cmp	r3, #0
 800e35a:	d123      	bne.n	800e3a4 <HAL_CAN_ConfigFilter+0xd0>
 800e35c:	697b      	ldr	r3, [r7, #20]
 800e35e:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800e362:	68fb      	ldr	r3, [r7, #12]
 800e364:	43db      	mvns	r3, r3
 800e366:	401a      	ands	r2, r3
 800e368:	697b      	ldr	r3, [r7, #20]
 800e36a:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800e36e:	683b      	ldr	r3, [r7, #0]
 800e370:	68db      	ldr	r3, [r3, #12]
 800e372:	0419      	lsls	r1, r3, #16
 800e374:	683b      	ldr	r3, [r7, #0]
 800e376:	685b      	ldr	r3, [r3, #4]
 800e378:	b29b      	uxth	r3, r3
 800e37a:	683a      	ldr	r2, [r7, #0]
 800e37c:	6952      	ldr	r2, [r2, #20]
 800e37e:	4319      	orrs	r1, r3
 800e380:	697b      	ldr	r3, [r7, #20]
 800e382:	3248      	adds	r2, #72	@ 0x48
 800e384:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800e388:	683b      	ldr	r3, [r7, #0]
 800e38a:	689b      	ldr	r3, [r3, #8]
 800e38c:	0419      	lsls	r1, r3, #16
 800e38e:	683b      	ldr	r3, [r7, #0]
 800e390:	681b      	ldr	r3, [r3, #0]
 800e392:	b29a      	uxth	r2, r3
 800e394:	683b      	ldr	r3, [r7, #0]
 800e396:	695b      	ldr	r3, [r3, #20]
 800e398:	430a      	orrs	r2, r1
 800e39a:	6979      	ldr	r1, [r7, #20]
 800e39c:	3348      	adds	r3, #72	@ 0x48
 800e39e:	00db      	lsls	r3, r3, #3
 800e3a0:	440b      	add	r3, r1
 800e3a2:	605a      	str	r2, [r3, #4]
 800e3a4:	683b      	ldr	r3, [r7, #0]
 800e3a6:	69db      	ldr	r3, [r3, #28]
 800e3a8:	2b01      	cmp	r3, #1
 800e3aa:	d122      	bne.n	800e3f2 <HAL_CAN_ConfigFilter+0x11e>
 800e3ac:	697b      	ldr	r3, [r7, #20]
 800e3ae:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 800e3b2:	68fb      	ldr	r3, [r7, #12]
 800e3b4:	431a      	orrs	r2, r3
 800e3b6:	697b      	ldr	r3, [r7, #20]
 800e3b8:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 800e3bc:	683b      	ldr	r3, [r7, #0]
 800e3be:	681b      	ldr	r3, [r3, #0]
 800e3c0:	0419      	lsls	r1, r3, #16
 800e3c2:	683b      	ldr	r3, [r7, #0]
 800e3c4:	685b      	ldr	r3, [r3, #4]
 800e3c6:	b29b      	uxth	r3, r3
 800e3c8:	683a      	ldr	r2, [r7, #0]
 800e3ca:	6952      	ldr	r2, [r2, #20]
 800e3cc:	4319      	orrs	r1, r3
 800e3ce:	697b      	ldr	r3, [r7, #20]
 800e3d0:	3248      	adds	r2, #72	@ 0x48
 800e3d2:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 800e3d6:	683b      	ldr	r3, [r7, #0]
 800e3d8:	689b      	ldr	r3, [r3, #8]
 800e3da:	0419      	lsls	r1, r3, #16
 800e3dc:	683b      	ldr	r3, [r7, #0]
 800e3de:	68db      	ldr	r3, [r3, #12]
 800e3e0:	b29a      	uxth	r2, r3
 800e3e2:	683b      	ldr	r3, [r7, #0]
 800e3e4:	695b      	ldr	r3, [r3, #20]
 800e3e6:	430a      	orrs	r2, r1
 800e3e8:	6979      	ldr	r1, [r7, #20]
 800e3ea:	3348      	adds	r3, #72	@ 0x48
 800e3ec:	00db      	lsls	r3, r3, #3
 800e3ee:	440b      	add	r3, r1
 800e3f0:	605a      	str	r2, [r3, #4]
 800e3f2:	683b      	ldr	r3, [r7, #0]
 800e3f4:	699b      	ldr	r3, [r3, #24]
 800e3f6:	2b00      	cmp	r3, #0
 800e3f8:	d109      	bne.n	800e40e <HAL_CAN_ConfigFilter+0x13a>
 800e3fa:	697b      	ldr	r3, [r7, #20]
 800e3fc:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800e400:	68fb      	ldr	r3, [r7, #12]
 800e402:	43db      	mvns	r3, r3
 800e404:	401a      	ands	r2, r3
 800e406:	697b      	ldr	r3, [r7, #20]
 800e408:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800e40c:	e007      	b.n	800e41e <HAL_CAN_ConfigFilter+0x14a>
 800e40e:	697b      	ldr	r3, [r7, #20]
 800e410:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 800e414:	68fb      	ldr	r3, [r7, #12]
 800e416:	431a      	orrs	r2, r3
 800e418:	697b      	ldr	r3, [r7, #20]
 800e41a:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800e41e:	683b      	ldr	r3, [r7, #0]
 800e420:	691b      	ldr	r3, [r3, #16]
 800e422:	2b00      	cmp	r3, #0
 800e424:	d109      	bne.n	800e43a <HAL_CAN_ConfigFilter+0x166>
 800e426:	697b      	ldr	r3, [r7, #20]
 800e428:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800e42c:	68fb      	ldr	r3, [r7, #12]
 800e42e:	43db      	mvns	r3, r3
 800e430:	401a      	ands	r2, r3
 800e432:	697b      	ldr	r3, [r7, #20]
 800e434:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800e438:	e007      	b.n	800e44a <HAL_CAN_ConfigFilter+0x176>
 800e43a:	697b      	ldr	r3, [r7, #20]
 800e43c:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800e440:	68fb      	ldr	r3, [r7, #12]
 800e442:	431a      	orrs	r2, r3
 800e444:	697b      	ldr	r3, [r7, #20]
 800e446:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800e44a:	683b      	ldr	r3, [r7, #0]
 800e44c:	6a1b      	ldr	r3, [r3, #32]
 800e44e:	2b01      	cmp	r3, #1
 800e450:	d107      	bne.n	800e462 <HAL_CAN_ConfigFilter+0x18e>
 800e452:	697b      	ldr	r3, [r7, #20]
 800e454:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 800e458:	68fb      	ldr	r3, [r7, #12]
 800e45a:	431a      	orrs	r2, r3
 800e45c:	697b      	ldr	r3, [r7, #20]
 800e45e:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 800e462:	697b      	ldr	r3, [r7, #20]
 800e464:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 800e468:	f023 0201 	bic.w	r2, r3, #1
 800e46c:	697b      	ldr	r3, [r7, #20]
 800e46e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800e472:	2300      	movs	r3, #0
 800e474:	e006      	b.n	800e484 <HAL_CAN_ConfigFilter+0x1b0>
 800e476:	687b      	ldr	r3, [r7, #4]
 800e478:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e47a:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800e47e:	687b      	ldr	r3, [r7, #4]
 800e480:	625a      	str	r2, [r3, #36]	@ 0x24
 800e482:	2301      	movs	r3, #1
 800e484:	4618      	mov	r0, r3
 800e486:	371c      	adds	r7, #28
 800e488:	46bd      	mov	sp, r7
 800e48a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e48e:	4770      	bx	lr
 800e490:	40006400 	.word	0x40006400

0800e494 <HAL_CAN_Start>:
 800e494:	b580      	push	{r7, lr}
 800e496:	b084      	sub	sp, #16
 800e498:	af00      	add	r7, sp, #0
 800e49a:	6078      	str	r0, [r7, #4]
 800e49c:	687b      	ldr	r3, [r7, #4]
 800e49e:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e4a2:	b2db      	uxtb	r3, r3
 800e4a4:	2b01      	cmp	r3, #1
 800e4a6:	d12e      	bne.n	800e506 <HAL_CAN_Start+0x72>
 800e4a8:	687b      	ldr	r3, [r7, #4]
 800e4aa:	2202      	movs	r2, #2
 800e4ac:	f883 2020 	strb.w	r2, [r3, #32]
 800e4b0:	687b      	ldr	r3, [r7, #4]
 800e4b2:	681b      	ldr	r3, [r3, #0]
 800e4b4:	681a      	ldr	r2, [r3, #0]
 800e4b6:	687b      	ldr	r3, [r7, #4]
 800e4b8:	681b      	ldr	r3, [r3, #0]
 800e4ba:	f022 0201 	bic.w	r2, r2, #1
 800e4be:	601a      	str	r2, [r3, #0]
 800e4c0:	f7ff fb7a 	bl	800dbb8 <HAL_GetTick>
 800e4c4:	60f8      	str	r0, [r7, #12]
 800e4c6:	e012      	b.n	800e4ee <HAL_CAN_Start+0x5a>
 800e4c8:	f7ff fb76 	bl	800dbb8 <HAL_GetTick>
 800e4cc:	4602      	mov	r2, r0
 800e4ce:	68fb      	ldr	r3, [r7, #12]
 800e4d0:	1ad3      	subs	r3, r2, r3
 800e4d2:	2b0a      	cmp	r3, #10
 800e4d4:	d90b      	bls.n	800e4ee <HAL_CAN_Start+0x5a>
 800e4d6:	687b      	ldr	r3, [r7, #4]
 800e4d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e4da:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800e4de:	687b      	ldr	r3, [r7, #4]
 800e4e0:	625a      	str	r2, [r3, #36]	@ 0x24
 800e4e2:	687b      	ldr	r3, [r7, #4]
 800e4e4:	2205      	movs	r2, #5
 800e4e6:	f883 2020 	strb.w	r2, [r3, #32]
 800e4ea:	2301      	movs	r3, #1
 800e4ec:	e012      	b.n	800e514 <HAL_CAN_Start+0x80>
 800e4ee:	687b      	ldr	r3, [r7, #4]
 800e4f0:	681b      	ldr	r3, [r3, #0]
 800e4f2:	685b      	ldr	r3, [r3, #4]
 800e4f4:	f003 0301 	and.w	r3, r3, #1
 800e4f8:	2b00      	cmp	r3, #0
 800e4fa:	d1e5      	bne.n	800e4c8 <HAL_CAN_Start+0x34>
 800e4fc:	687b      	ldr	r3, [r7, #4]
 800e4fe:	2200      	movs	r2, #0
 800e500:	625a      	str	r2, [r3, #36]	@ 0x24
 800e502:	2300      	movs	r3, #0
 800e504:	e006      	b.n	800e514 <HAL_CAN_Start+0x80>
 800e506:	687b      	ldr	r3, [r7, #4]
 800e508:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e50a:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800e50e:	687b      	ldr	r3, [r7, #4]
 800e510:	625a      	str	r2, [r3, #36]	@ 0x24
 800e512:	2301      	movs	r3, #1
 800e514:	4618      	mov	r0, r3
 800e516:	3710      	adds	r7, #16
 800e518:	46bd      	mov	sp, r7
 800e51a:	bd80      	pop	{r7, pc}

0800e51c <HAL_CAN_AddTxMessage>:
 800e51c:	b480      	push	{r7}
 800e51e:	b089      	sub	sp, #36	@ 0x24
 800e520:	af00      	add	r7, sp, #0
 800e522:	60f8      	str	r0, [r7, #12]
 800e524:	60b9      	str	r1, [r7, #8]
 800e526:	607a      	str	r2, [r7, #4]
 800e528:	603b      	str	r3, [r7, #0]
 800e52a:	68fb      	ldr	r3, [r7, #12]
 800e52c:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e530:	77fb      	strb	r3, [r7, #31]
 800e532:	68fb      	ldr	r3, [r7, #12]
 800e534:	681b      	ldr	r3, [r3, #0]
 800e536:	689b      	ldr	r3, [r3, #8]
 800e538:	61bb      	str	r3, [r7, #24]
 800e53a:	7ffb      	ldrb	r3, [r7, #31]
 800e53c:	2b01      	cmp	r3, #1
 800e53e:	d003      	beq.n	800e548 <HAL_CAN_AddTxMessage+0x2c>
 800e540:	7ffb      	ldrb	r3, [r7, #31]
 800e542:	2b02      	cmp	r3, #2
 800e544:	f040 80b8 	bne.w	800e6b8 <HAL_CAN_AddTxMessage+0x19c>
 800e548:	69bb      	ldr	r3, [r7, #24]
 800e54a:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800e54e:	2b00      	cmp	r3, #0
 800e550:	d10a      	bne.n	800e568 <HAL_CAN_AddTxMessage+0x4c>
 800e552:	69bb      	ldr	r3, [r7, #24]
 800e554:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800e558:	2b00      	cmp	r3, #0
 800e55a:	d105      	bne.n	800e568 <HAL_CAN_AddTxMessage+0x4c>
 800e55c:	69bb      	ldr	r3, [r7, #24]
 800e55e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800e562:	2b00      	cmp	r3, #0
 800e564:	f000 80a0 	beq.w	800e6a8 <HAL_CAN_AddTxMessage+0x18c>
 800e568:	69bb      	ldr	r3, [r7, #24]
 800e56a:	0e1b      	lsrs	r3, r3, #24
 800e56c:	f003 0303 	and.w	r3, r3, #3
 800e570:	617b      	str	r3, [r7, #20]
 800e572:	697b      	ldr	r3, [r7, #20]
 800e574:	2b02      	cmp	r3, #2
 800e576:	d907      	bls.n	800e588 <HAL_CAN_AddTxMessage+0x6c>
 800e578:	68fb      	ldr	r3, [r7, #12]
 800e57a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e57c:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 800e580:	68fb      	ldr	r3, [r7, #12]
 800e582:	625a      	str	r2, [r3, #36]	@ 0x24
 800e584:	2301      	movs	r3, #1
 800e586:	e09e      	b.n	800e6c6 <HAL_CAN_AddTxMessage+0x1aa>
 800e588:	2201      	movs	r2, #1
 800e58a:	697b      	ldr	r3, [r7, #20]
 800e58c:	409a      	lsls	r2, r3
 800e58e:	683b      	ldr	r3, [r7, #0]
 800e590:	601a      	str	r2, [r3, #0]
 800e592:	68bb      	ldr	r3, [r7, #8]
 800e594:	689b      	ldr	r3, [r3, #8]
 800e596:	2b00      	cmp	r3, #0
 800e598:	d10d      	bne.n	800e5b6 <HAL_CAN_AddTxMessage+0x9a>
 800e59a:	68bb      	ldr	r3, [r7, #8]
 800e59c:	681b      	ldr	r3, [r3, #0]
 800e59e:	055a      	lsls	r2, r3, #21
 800e5a0:	68bb      	ldr	r3, [r7, #8]
 800e5a2:	68db      	ldr	r3, [r3, #12]
 800e5a4:	68f9      	ldr	r1, [r7, #12]
 800e5a6:	6809      	ldr	r1, [r1, #0]
 800e5a8:	431a      	orrs	r2, r3
 800e5aa:	697b      	ldr	r3, [r7, #20]
 800e5ac:	3318      	adds	r3, #24
 800e5ae:	011b      	lsls	r3, r3, #4
 800e5b0:	440b      	add	r3, r1
 800e5b2:	601a      	str	r2, [r3, #0]
 800e5b4:	e00f      	b.n	800e5d6 <HAL_CAN_AddTxMessage+0xba>
 800e5b6:	68bb      	ldr	r3, [r7, #8]
 800e5b8:	685b      	ldr	r3, [r3, #4]
 800e5ba:	00da      	lsls	r2, r3, #3
 800e5bc:	68bb      	ldr	r3, [r7, #8]
 800e5be:	689b      	ldr	r3, [r3, #8]
 800e5c0:	431a      	orrs	r2, r3
 800e5c2:	68bb      	ldr	r3, [r7, #8]
 800e5c4:	68db      	ldr	r3, [r3, #12]
 800e5c6:	68f9      	ldr	r1, [r7, #12]
 800e5c8:	6809      	ldr	r1, [r1, #0]
 800e5ca:	431a      	orrs	r2, r3
 800e5cc:	697b      	ldr	r3, [r7, #20]
 800e5ce:	3318      	adds	r3, #24
 800e5d0:	011b      	lsls	r3, r3, #4
 800e5d2:	440b      	add	r3, r1
 800e5d4:	601a      	str	r2, [r3, #0]
 800e5d6:	68fb      	ldr	r3, [r7, #12]
 800e5d8:	6819      	ldr	r1, [r3, #0]
 800e5da:	68bb      	ldr	r3, [r7, #8]
 800e5dc:	691a      	ldr	r2, [r3, #16]
 800e5de:	697b      	ldr	r3, [r7, #20]
 800e5e0:	3318      	adds	r3, #24
 800e5e2:	011b      	lsls	r3, r3, #4
 800e5e4:	440b      	add	r3, r1
 800e5e6:	3304      	adds	r3, #4
 800e5e8:	601a      	str	r2, [r3, #0]
 800e5ea:	68bb      	ldr	r3, [r7, #8]
 800e5ec:	7d1b      	ldrb	r3, [r3, #20]
 800e5ee:	2b01      	cmp	r3, #1
 800e5f0:	d111      	bne.n	800e616 <HAL_CAN_AddTxMessage+0xfa>
 800e5f2:	68fb      	ldr	r3, [r7, #12]
 800e5f4:	681a      	ldr	r2, [r3, #0]
 800e5f6:	697b      	ldr	r3, [r7, #20]
 800e5f8:	3318      	adds	r3, #24
 800e5fa:	011b      	lsls	r3, r3, #4
 800e5fc:	4413      	add	r3, r2
 800e5fe:	3304      	adds	r3, #4
 800e600:	681b      	ldr	r3, [r3, #0]
 800e602:	68fa      	ldr	r2, [r7, #12]
 800e604:	6811      	ldr	r1, [r2, #0]
 800e606:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800e60a:	697b      	ldr	r3, [r7, #20]
 800e60c:	3318      	adds	r3, #24
 800e60e:	011b      	lsls	r3, r3, #4
 800e610:	440b      	add	r3, r1
 800e612:	3304      	adds	r3, #4
 800e614:	601a      	str	r2, [r3, #0]
 800e616:	687b      	ldr	r3, [r7, #4]
 800e618:	3307      	adds	r3, #7
 800e61a:	781b      	ldrb	r3, [r3, #0]
 800e61c:	061a      	lsls	r2, r3, #24
 800e61e:	687b      	ldr	r3, [r7, #4]
 800e620:	3306      	adds	r3, #6
 800e622:	781b      	ldrb	r3, [r3, #0]
 800e624:	041b      	lsls	r3, r3, #16
 800e626:	431a      	orrs	r2, r3
 800e628:	687b      	ldr	r3, [r7, #4]
 800e62a:	3305      	adds	r3, #5
 800e62c:	781b      	ldrb	r3, [r3, #0]
 800e62e:	021b      	lsls	r3, r3, #8
 800e630:	4313      	orrs	r3, r2
 800e632:	687a      	ldr	r2, [r7, #4]
 800e634:	3204      	adds	r2, #4
 800e636:	7812      	ldrb	r2, [r2, #0]
 800e638:	4610      	mov	r0, r2
 800e63a:	68fa      	ldr	r2, [r7, #12]
 800e63c:	6811      	ldr	r1, [r2, #0]
 800e63e:	ea43 0200 	orr.w	r2, r3, r0
 800e642:	697b      	ldr	r3, [r7, #20]
 800e644:	011b      	lsls	r3, r3, #4
 800e646:	440b      	add	r3, r1
 800e648:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800e64c:	601a      	str	r2, [r3, #0]
 800e64e:	687b      	ldr	r3, [r7, #4]
 800e650:	3303      	adds	r3, #3
 800e652:	781b      	ldrb	r3, [r3, #0]
 800e654:	061a      	lsls	r2, r3, #24
 800e656:	687b      	ldr	r3, [r7, #4]
 800e658:	3302      	adds	r3, #2
 800e65a:	781b      	ldrb	r3, [r3, #0]
 800e65c:	041b      	lsls	r3, r3, #16
 800e65e:	431a      	orrs	r2, r3
 800e660:	687b      	ldr	r3, [r7, #4]
 800e662:	3301      	adds	r3, #1
 800e664:	781b      	ldrb	r3, [r3, #0]
 800e666:	021b      	lsls	r3, r3, #8
 800e668:	4313      	orrs	r3, r2
 800e66a:	687a      	ldr	r2, [r7, #4]
 800e66c:	7812      	ldrb	r2, [r2, #0]
 800e66e:	4610      	mov	r0, r2
 800e670:	68fa      	ldr	r2, [r7, #12]
 800e672:	6811      	ldr	r1, [r2, #0]
 800e674:	ea43 0200 	orr.w	r2, r3, r0
 800e678:	697b      	ldr	r3, [r7, #20]
 800e67a:	011b      	lsls	r3, r3, #4
 800e67c:	440b      	add	r3, r1
 800e67e:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800e682:	601a      	str	r2, [r3, #0]
 800e684:	68fb      	ldr	r3, [r7, #12]
 800e686:	681a      	ldr	r2, [r3, #0]
 800e688:	697b      	ldr	r3, [r7, #20]
 800e68a:	3318      	adds	r3, #24
 800e68c:	011b      	lsls	r3, r3, #4
 800e68e:	4413      	add	r3, r2
 800e690:	681b      	ldr	r3, [r3, #0]
 800e692:	68fa      	ldr	r2, [r7, #12]
 800e694:	6811      	ldr	r1, [r2, #0]
 800e696:	f043 0201 	orr.w	r2, r3, #1
 800e69a:	697b      	ldr	r3, [r7, #20]
 800e69c:	3318      	adds	r3, #24
 800e69e:	011b      	lsls	r3, r3, #4
 800e6a0:	440b      	add	r3, r1
 800e6a2:	601a      	str	r2, [r3, #0]
 800e6a4:	2300      	movs	r3, #0
 800e6a6:	e00e      	b.n	800e6c6 <HAL_CAN_AddTxMessage+0x1aa>
 800e6a8:	68fb      	ldr	r3, [r7, #12]
 800e6aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e6ac:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800e6b0:	68fb      	ldr	r3, [r7, #12]
 800e6b2:	625a      	str	r2, [r3, #36]	@ 0x24
 800e6b4:	2301      	movs	r3, #1
 800e6b6:	e006      	b.n	800e6c6 <HAL_CAN_AddTxMessage+0x1aa>
 800e6b8:	68fb      	ldr	r3, [r7, #12]
 800e6ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e6bc:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800e6c0:	68fb      	ldr	r3, [r7, #12]
 800e6c2:	625a      	str	r2, [r3, #36]	@ 0x24
 800e6c4:	2301      	movs	r3, #1
 800e6c6:	4618      	mov	r0, r3
 800e6c8:	3724      	adds	r7, #36	@ 0x24
 800e6ca:	46bd      	mov	sp, r7
 800e6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6d0:	4770      	bx	lr

0800e6d2 <HAL_CAN_GetRxMessage>:
 800e6d2:	b480      	push	{r7}
 800e6d4:	b087      	sub	sp, #28
 800e6d6:	af00      	add	r7, sp, #0
 800e6d8:	60f8      	str	r0, [r7, #12]
 800e6da:	60b9      	str	r1, [r7, #8]
 800e6dc:	607a      	str	r2, [r7, #4]
 800e6de:	603b      	str	r3, [r7, #0]
 800e6e0:	68fb      	ldr	r3, [r7, #12]
 800e6e2:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e6e6:	75fb      	strb	r3, [r7, #23]
 800e6e8:	7dfb      	ldrb	r3, [r7, #23]
 800e6ea:	2b01      	cmp	r3, #1
 800e6ec:	d003      	beq.n	800e6f6 <HAL_CAN_GetRxMessage+0x24>
 800e6ee:	7dfb      	ldrb	r3, [r7, #23]
 800e6f0:	2b02      	cmp	r3, #2
 800e6f2:	f040 80f3 	bne.w	800e8dc <HAL_CAN_GetRxMessage+0x20a>
 800e6f6:	68bb      	ldr	r3, [r7, #8]
 800e6f8:	2b00      	cmp	r3, #0
 800e6fa:	d10e      	bne.n	800e71a <HAL_CAN_GetRxMessage+0x48>
 800e6fc:	68fb      	ldr	r3, [r7, #12]
 800e6fe:	681b      	ldr	r3, [r3, #0]
 800e700:	68db      	ldr	r3, [r3, #12]
 800e702:	f003 0303 	and.w	r3, r3, #3
 800e706:	2b00      	cmp	r3, #0
 800e708:	d116      	bne.n	800e738 <HAL_CAN_GetRxMessage+0x66>
 800e70a:	68fb      	ldr	r3, [r7, #12]
 800e70c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e70e:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800e712:	68fb      	ldr	r3, [r7, #12]
 800e714:	625a      	str	r2, [r3, #36]	@ 0x24
 800e716:	2301      	movs	r3, #1
 800e718:	e0e7      	b.n	800e8ea <HAL_CAN_GetRxMessage+0x218>
 800e71a:	68fb      	ldr	r3, [r7, #12]
 800e71c:	681b      	ldr	r3, [r3, #0]
 800e71e:	691b      	ldr	r3, [r3, #16]
 800e720:	f003 0303 	and.w	r3, r3, #3
 800e724:	2b00      	cmp	r3, #0
 800e726:	d107      	bne.n	800e738 <HAL_CAN_GetRxMessage+0x66>
 800e728:	68fb      	ldr	r3, [r7, #12]
 800e72a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e72c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 800e730:	68fb      	ldr	r3, [r7, #12]
 800e732:	625a      	str	r2, [r3, #36]	@ 0x24
 800e734:	2301      	movs	r3, #1
 800e736:	e0d8      	b.n	800e8ea <HAL_CAN_GetRxMessage+0x218>
 800e738:	68fb      	ldr	r3, [r7, #12]
 800e73a:	681a      	ldr	r2, [r3, #0]
 800e73c:	68bb      	ldr	r3, [r7, #8]
 800e73e:	331b      	adds	r3, #27
 800e740:	011b      	lsls	r3, r3, #4
 800e742:	4413      	add	r3, r2
 800e744:	681b      	ldr	r3, [r3, #0]
 800e746:	f003 0204 	and.w	r2, r3, #4
 800e74a:	687b      	ldr	r3, [r7, #4]
 800e74c:	609a      	str	r2, [r3, #8]
 800e74e:	687b      	ldr	r3, [r7, #4]
 800e750:	689b      	ldr	r3, [r3, #8]
 800e752:	2b00      	cmp	r3, #0
 800e754:	d10c      	bne.n	800e770 <HAL_CAN_GetRxMessage+0x9e>
 800e756:	68fb      	ldr	r3, [r7, #12]
 800e758:	681a      	ldr	r2, [r3, #0]
 800e75a:	68bb      	ldr	r3, [r7, #8]
 800e75c:	331b      	adds	r3, #27
 800e75e:	011b      	lsls	r3, r3, #4
 800e760:	4413      	add	r3, r2
 800e762:	681b      	ldr	r3, [r3, #0]
 800e764:	0d5b      	lsrs	r3, r3, #21
 800e766:	f3c3 020a 	ubfx	r2, r3, #0, #11
 800e76a:	687b      	ldr	r3, [r7, #4]
 800e76c:	601a      	str	r2, [r3, #0]
 800e76e:	e00b      	b.n	800e788 <HAL_CAN_GetRxMessage+0xb6>
 800e770:	68fb      	ldr	r3, [r7, #12]
 800e772:	681a      	ldr	r2, [r3, #0]
 800e774:	68bb      	ldr	r3, [r7, #8]
 800e776:	331b      	adds	r3, #27
 800e778:	011b      	lsls	r3, r3, #4
 800e77a:	4413      	add	r3, r2
 800e77c:	681b      	ldr	r3, [r3, #0]
 800e77e:	08db      	lsrs	r3, r3, #3
 800e780:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 800e784:	687b      	ldr	r3, [r7, #4]
 800e786:	605a      	str	r2, [r3, #4]
 800e788:	68fb      	ldr	r3, [r7, #12]
 800e78a:	681a      	ldr	r2, [r3, #0]
 800e78c:	68bb      	ldr	r3, [r7, #8]
 800e78e:	331b      	adds	r3, #27
 800e790:	011b      	lsls	r3, r3, #4
 800e792:	4413      	add	r3, r2
 800e794:	681b      	ldr	r3, [r3, #0]
 800e796:	f003 0202 	and.w	r2, r3, #2
 800e79a:	687b      	ldr	r3, [r7, #4]
 800e79c:	60da      	str	r2, [r3, #12]
 800e79e:	68fb      	ldr	r3, [r7, #12]
 800e7a0:	681a      	ldr	r2, [r3, #0]
 800e7a2:	68bb      	ldr	r3, [r7, #8]
 800e7a4:	331b      	adds	r3, #27
 800e7a6:	011b      	lsls	r3, r3, #4
 800e7a8:	4413      	add	r3, r2
 800e7aa:	3304      	adds	r3, #4
 800e7ac:	681b      	ldr	r3, [r3, #0]
 800e7ae:	f003 020f 	and.w	r2, r3, #15
 800e7b2:	687b      	ldr	r3, [r7, #4]
 800e7b4:	611a      	str	r2, [r3, #16]
 800e7b6:	68fb      	ldr	r3, [r7, #12]
 800e7b8:	681a      	ldr	r2, [r3, #0]
 800e7ba:	68bb      	ldr	r3, [r7, #8]
 800e7bc:	331b      	adds	r3, #27
 800e7be:	011b      	lsls	r3, r3, #4
 800e7c0:	4413      	add	r3, r2
 800e7c2:	3304      	adds	r3, #4
 800e7c4:	681b      	ldr	r3, [r3, #0]
 800e7c6:	0a1b      	lsrs	r3, r3, #8
 800e7c8:	b2da      	uxtb	r2, r3
 800e7ca:	687b      	ldr	r3, [r7, #4]
 800e7cc:	619a      	str	r2, [r3, #24]
 800e7ce:	68fb      	ldr	r3, [r7, #12]
 800e7d0:	681a      	ldr	r2, [r3, #0]
 800e7d2:	68bb      	ldr	r3, [r7, #8]
 800e7d4:	331b      	adds	r3, #27
 800e7d6:	011b      	lsls	r3, r3, #4
 800e7d8:	4413      	add	r3, r2
 800e7da:	3304      	adds	r3, #4
 800e7dc:	681b      	ldr	r3, [r3, #0]
 800e7de:	0c1b      	lsrs	r3, r3, #16
 800e7e0:	b29a      	uxth	r2, r3
 800e7e2:	687b      	ldr	r3, [r7, #4]
 800e7e4:	615a      	str	r2, [r3, #20]
 800e7e6:	68fb      	ldr	r3, [r7, #12]
 800e7e8:	681a      	ldr	r2, [r3, #0]
 800e7ea:	68bb      	ldr	r3, [r7, #8]
 800e7ec:	011b      	lsls	r3, r3, #4
 800e7ee:	4413      	add	r3, r2
 800e7f0:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800e7f4:	681b      	ldr	r3, [r3, #0]
 800e7f6:	b2da      	uxtb	r2, r3
 800e7f8:	683b      	ldr	r3, [r7, #0]
 800e7fa:	701a      	strb	r2, [r3, #0]
 800e7fc:	68fb      	ldr	r3, [r7, #12]
 800e7fe:	681a      	ldr	r2, [r3, #0]
 800e800:	68bb      	ldr	r3, [r7, #8]
 800e802:	011b      	lsls	r3, r3, #4
 800e804:	4413      	add	r3, r2
 800e806:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800e80a:	681b      	ldr	r3, [r3, #0]
 800e80c:	0a1a      	lsrs	r2, r3, #8
 800e80e:	683b      	ldr	r3, [r7, #0]
 800e810:	3301      	adds	r3, #1
 800e812:	b2d2      	uxtb	r2, r2
 800e814:	701a      	strb	r2, [r3, #0]
 800e816:	68fb      	ldr	r3, [r7, #12]
 800e818:	681a      	ldr	r2, [r3, #0]
 800e81a:	68bb      	ldr	r3, [r7, #8]
 800e81c:	011b      	lsls	r3, r3, #4
 800e81e:	4413      	add	r3, r2
 800e820:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800e824:	681b      	ldr	r3, [r3, #0]
 800e826:	0c1a      	lsrs	r2, r3, #16
 800e828:	683b      	ldr	r3, [r7, #0]
 800e82a:	3302      	adds	r3, #2
 800e82c:	b2d2      	uxtb	r2, r2
 800e82e:	701a      	strb	r2, [r3, #0]
 800e830:	68fb      	ldr	r3, [r7, #12]
 800e832:	681a      	ldr	r2, [r3, #0]
 800e834:	68bb      	ldr	r3, [r7, #8]
 800e836:	011b      	lsls	r3, r3, #4
 800e838:	4413      	add	r3, r2
 800e83a:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800e83e:	681b      	ldr	r3, [r3, #0]
 800e840:	0e1a      	lsrs	r2, r3, #24
 800e842:	683b      	ldr	r3, [r7, #0]
 800e844:	3303      	adds	r3, #3
 800e846:	b2d2      	uxtb	r2, r2
 800e848:	701a      	strb	r2, [r3, #0]
 800e84a:	68fb      	ldr	r3, [r7, #12]
 800e84c:	681a      	ldr	r2, [r3, #0]
 800e84e:	68bb      	ldr	r3, [r7, #8]
 800e850:	011b      	lsls	r3, r3, #4
 800e852:	4413      	add	r3, r2
 800e854:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800e858:	681a      	ldr	r2, [r3, #0]
 800e85a:	683b      	ldr	r3, [r7, #0]
 800e85c:	3304      	adds	r3, #4
 800e85e:	b2d2      	uxtb	r2, r2
 800e860:	701a      	strb	r2, [r3, #0]
 800e862:	68fb      	ldr	r3, [r7, #12]
 800e864:	681a      	ldr	r2, [r3, #0]
 800e866:	68bb      	ldr	r3, [r7, #8]
 800e868:	011b      	lsls	r3, r3, #4
 800e86a:	4413      	add	r3, r2
 800e86c:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800e870:	681b      	ldr	r3, [r3, #0]
 800e872:	0a1a      	lsrs	r2, r3, #8
 800e874:	683b      	ldr	r3, [r7, #0]
 800e876:	3305      	adds	r3, #5
 800e878:	b2d2      	uxtb	r2, r2
 800e87a:	701a      	strb	r2, [r3, #0]
 800e87c:	68fb      	ldr	r3, [r7, #12]
 800e87e:	681a      	ldr	r2, [r3, #0]
 800e880:	68bb      	ldr	r3, [r7, #8]
 800e882:	011b      	lsls	r3, r3, #4
 800e884:	4413      	add	r3, r2
 800e886:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800e88a:	681b      	ldr	r3, [r3, #0]
 800e88c:	0c1a      	lsrs	r2, r3, #16
 800e88e:	683b      	ldr	r3, [r7, #0]
 800e890:	3306      	adds	r3, #6
 800e892:	b2d2      	uxtb	r2, r2
 800e894:	701a      	strb	r2, [r3, #0]
 800e896:	68fb      	ldr	r3, [r7, #12]
 800e898:	681a      	ldr	r2, [r3, #0]
 800e89a:	68bb      	ldr	r3, [r7, #8]
 800e89c:	011b      	lsls	r3, r3, #4
 800e89e:	4413      	add	r3, r2
 800e8a0:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800e8a4:	681b      	ldr	r3, [r3, #0]
 800e8a6:	0e1a      	lsrs	r2, r3, #24
 800e8a8:	683b      	ldr	r3, [r7, #0]
 800e8aa:	3307      	adds	r3, #7
 800e8ac:	b2d2      	uxtb	r2, r2
 800e8ae:	701a      	strb	r2, [r3, #0]
 800e8b0:	68bb      	ldr	r3, [r7, #8]
 800e8b2:	2b00      	cmp	r3, #0
 800e8b4:	d108      	bne.n	800e8c8 <HAL_CAN_GetRxMessage+0x1f6>
 800e8b6:	68fb      	ldr	r3, [r7, #12]
 800e8b8:	681b      	ldr	r3, [r3, #0]
 800e8ba:	68da      	ldr	r2, [r3, #12]
 800e8bc:	68fb      	ldr	r3, [r7, #12]
 800e8be:	681b      	ldr	r3, [r3, #0]
 800e8c0:	f042 0220 	orr.w	r2, r2, #32
 800e8c4:	60da      	str	r2, [r3, #12]
 800e8c6:	e007      	b.n	800e8d8 <HAL_CAN_GetRxMessage+0x206>
 800e8c8:	68fb      	ldr	r3, [r7, #12]
 800e8ca:	681b      	ldr	r3, [r3, #0]
 800e8cc:	691a      	ldr	r2, [r3, #16]
 800e8ce:	68fb      	ldr	r3, [r7, #12]
 800e8d0:	681b      	ldr	r3, [r3, #0]
 800e8d2:	f042 0220 	orr.w	r2, r2, #32
 800e8d6:	611a      	str	r2, [r3, #16]
 800e8d8:	2300      	movs	r3, #0
 800e8da:	e006      	b.n	800e8ea <HAL_CAN_GetRxMessage+0x218>
 800e8dc:	68fb      	ldr	r3, [r7, #12]
 800e8de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e8e0:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800e8e4:	68fb      	ldr	r3, [r7, #12]
 800e8e6:	625a      	str	r2, [r3, #36]	@ 0x24
 800e8e8:	2301      	movs	r3, #1
 800e8ea:	4618      	mov	r0, r3
 800e8ec:	371c      	adds	r7, #28
 800e8ee:	46bd      	mov	sp, r7
 800e8f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8f4:	4770      	bx	lr

0800e8f6 <HAL_CAN_ActivateNotification>:
 800e8f6:	b480      	push	{r7}
 800e8f8:	b085      	sub	sp, #20
 800e8fa:	af00      	add	r7, sp, #0
 800e8fc:	6078      	str	r0, [r7, #4]
 800e8fe:	6039      	str	r1, [r7, #0]
 800e900:	687b      	ldr	r3, [r7, #4]
 800e902:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e906:	73fb      	strb	r3, [r7, #15]
 800e908:	7bfb      	ldrb	r3, [r7, #15]
 800e90a:	2b01      	cmp	r3, #1
 800e90c:	d002      	beq.n	800e914 <HAL_CAN_ActivateNotification+0x1e>
 800e90e:	7bfb      	ldrb	r3, [r7, #15]
 800e910:	2b02      	cmp	r3, #2
 800e912:	d109      	bne.n	800e928 <HAL_CAN_ActivateNotification+0x32>
 800e914:	687b      	ldr	r3, [r7, #4]
 800e916:	681b      	ldr	r3, [r3, #0]
 800e918:	6959      	ldr	r1, [r3, #20]
 800e91a:	687b      	ldr	r3, [r7, #4]
 800e91c:	681b      	ldr	r3, [r3, #0]
 800e91e:	683a      	ldr	r2, [r7, #0]
 800e920:	430a      	orrs	r2, r1
 800e922:	615a      	str	r2, [r3, #20]
 800e924:	2300      	movs	r3, #0
 800e926:	e006      	b.n	800e936 <HAL_CAN_ActivateNotification+0x40>
 800e928:	687b      	ldr	r3, [r7, #4]
 800e92a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e92c:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800e930:	687b      	ldr	r3, [r7, #4]
 800e932:	625a      	str	r2, [r3, #36]	@ 0x24
 800e934:	2301      	movs	r3, #1
 800e936:	4618      	mov	r0, r3
 800e938:	3714      	adds	r7, #20
 800e93a:	46bd      	mov	sp, r7
 800e93c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e940:	4770      	bx	lr

0800e942 <HAL_CAN_DeactivateNotification>:
 800e942:	b480      	push	{r7}
 800e944:	b085      	sub	sp, #20
 800e946:	af00      	add	r7, sp, #0
 800e948:	6078      	str	r0, [r7, #4]
 800e94a:	6039      	str	r1, [r7, #0]
 800e94c:	687b      	ldr	r3, [r7, #4]
 800e94e:	f893 3020 	ldrb.w	r3, [r3, #32]
 800e952:	73fb      	strb	r3, [r7, #15]
 800e954:	7bfb      	ldrb	r3, [r7, #15]
 800e956:	2b01      	cmp	r3, #1
 800e958:	d002      	beq.n	800e960 <HAL_CAN_DeactivateNotification+0x1e>
 800e95a:	7bfb      	ldrb	r3, [r7, #15]
 800e95c:	2b02      	cmp	r3, #2
 800e95e:	d10a      	bne.n	800e976 <HAL_CAN_DeactivateNotification+0x34>
 800e960:	687b      	ldr	r3, [r7, #4]
 800e962:	681b      	ldr	r3, [r3, #0]
 800e964:	6959      	ldr	r1, [r3, #20]
 800e966:	683b      	ldr	r3, [r7, #0]
 800e968:	43da      	mvns	r2, r3
 800e96a:	687b      	ldr	r3, [r7, #4]
 800e96c:	681b      	ldr	r3, [r3, #0]
 800e96e:	400a      	ands	r2, r1
 800e970:	615a      	str	r2, [r3, #20]
 800e972:	2300      	movs	r3, #0
 800e974:	e006      	b.n	800e984 <HAL_CAN_DeactivateNotification+0x42>
 800e976:	687b      	ldr	r3, [r7, #4]
 800e978:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e97a:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	625a      	str	r2, [r3, #36]	@ 0x24
 800e982:	2301      	movs	r3, #1
 800e984:	4618      	mov	r0, r3
 800e986:	3714      	adds	r7, #20
 800e988:	46bd      	mov	sp, r7
 800e98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e98e:	4770      	bx	lr

0800e990 <HAL_CAN_IRQHandler>:
 800e990:	b580      	push	{r7, lr}
 800e992:	b08a      	sub	sp, #40	@ 0x28
 800e994:	af00      	add	r7, sp, #0
 800e996:	6078      	str	r0, [r7, #4]
 800e998:	2300      	movs	r3, #0
 800e99a:	627b      	str	r3, [r7, #36]	@ 0x24
 800e99c:	687b      	ldr	r3, [r7, #4]
 800e99e:	681b      	ldr	r3, [r3, #0]
 800e9a0:	695b      	ldr	r3, [r3, #20]
 800e9a2:	623b      	str	r3, [r7, #32]
 800e9a4:	687b      	ldr	r3, [r7, #4]
 800e9a6:	681b      	ldr	r3, [r3, #0]
 800e9a8:	685b      	ldr	r3, [r3, #4]
 800e9aa:	61fb      	str	r3, [r7, #28]
 800e9ac:	687b      	ldr	r3, [r7, #4]
 800e9ae:	681b      	ldr	r3, [r3, #0]
 800e9b0:	689b      	ldr	r3, [r3, #8]
 800e9b2:	61bb      	str	r3, [r7, #24]
 800e9b4:	687b      	ldr	r3, [r7, #4]
 800e9b6:	681b      	ldr	r3, [r3, #0]
 800e9b8:	68db      	ldr	r3, [r3, #12]
 800e9ba:	617b      	str	r3, [r7, #20]
 800e9bc:	687b      	ldr	r3, [r7, #4]
 800e9be:	681b      	ldr	r3, [r3, #0]
 800e9c0:	691b      	ldr	r3, [r3, #16]
 800e9c2:	613b      	str	r3, [r7, #16]
 800e9c4:	687b      	ldr	r3, [r7, #4]
 800e9c6:	681b      	ldr	r3, [r3, #0]
 800e9c8:	699b      	ldr	r3, [r3, #24]
 800e9ca:	60fb      	str	r3, [r7, #12]
 800e9cc:	6a3b      	ldr	r3, [r7, #32]
 800e9ce:	f003 0301 	and.w	r3, r3, #1
 800e9d2:	2b00      	cmp	r3, #0
 800e9d4:	d07c      	beq.n	800ead0 <HAL_CAN_IRQHandler+0x140>
 800e9d6:	69bb      	ldr	r3, [r7, #24]
 800e9d8:	f003 0301 	and.w	r3, r3, #1
 800e9dc:	2b00      	cmp	r3, #0
 800e9de:	d023      	beq.n	800ea28 <HAL_CAN_IRQHandler+0x98>
 800e9e0:	687b      	ldr	r3, [r7, #4]
 800e9e2:	681b      	ldr	r3, [r3, #0]
 800e9e4:	2201      	movs	r2, #1
 800e9e6:	609a      	str	r2, [r3, #8]
 800e9e8:	69bb      	ldr	r3, [r7, #24]
 800e9ea:	f003 0302 	and.w	r3, r3, #2
 800e9ee:	2b00      	cmp	r3, #0
 800e9f0:	d003      	beq.n	800e9fa <HAL_CAN_IRQHandler+0x6a>
 800e9f2:	6878      	ldr	r0, [r7, #4]
 800e9f4:	f000 f983 	bl	800ecfe <HAL_CAN_TxMailbox0CompleteCallback>
 800e9f8:	e016      	b.n	800ea28 <HAL_CAN_IRQHandler+0x98>
 800e9fa:	69bb      	ldr	r3, [r7, #24]
 800e9fc:	f003 0304 	and.w	r3, r3, #4
 800ea00:	2b00      	cmp	r3, #0
 800ea02:	d004      	beq.n	800ea0e <HAL_CAN_IRQHandler+0x7e>
 800ea04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ea06:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 800ea0a:	627b      	str	r3, [r7, #36]	@ 0x24
 800ea0c:	e00c      	b.n	800ea28 <HAL_CAN_IRQHandler+0x98>
 800ea0e:	69bb      	ldr	r3, [r7, #24]
 800ea10:	f003 0308 	and.w	r3, r3, #8
 800ea14:	2b00      	cmp	r3, #0
 800ea16:	d004      	beq.n	800ea22 <HAL_CAN_IRQHandler+0x92>
 800ea18:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ea1a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800ea1e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ea20:	e002      	b.n	800ea28 <HAL_CAN_IRQHandler+0x98>
 800ea22:	6878      	ldr	r0, [r7, #4]
 800ea24:	f000 f989 	bl	800ed3a <HAL_CAN_TxMailbox0AbortCallback>
 800ea28:	69bb      	ldr	r3, [r7, #24]
 800ea2a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ea2e:	2b00      	cmp	r3, #0
 800ea30:	d024      	beq.n	800ea7c <HAL_CAN_IRQHandler+0xec>
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	681b      	ldr	r3, [r3, #0]
 800ea36:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800ea3a:	609a      	str	r2, [r3, #8]
 800ea3c:	69bb      	ldr	r3, [r7, #24]
 800ea3e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800ea42:	2b00      	cmp	r3, #0
 800ea44:	d003      	beq.n	800ea4e <HAL_CAN_IRQHandler+0xbe>
 800ea46:	6878      	ldr	r0, [r7, #4]
 800ea48:	f000 f963 	bl	800ed12 <HAL_CAN_TxMailbox1CompleteCallback>
 800ea4c:	e016      	b.n	800ea7c <HAL_CAN_IRQHandler+0xec>
 800ea4e:	69bb      	ldr	r3, [r7, #24]
 800ea50:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800ea54:	2b00      	cmp	r3, #0
 800ea56:	d004      	beq.n	800ea62 <HAL_CAN_IRQHandler+0xd2>
 800ea58:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ea5a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800ea5e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ea60:	e00c      	b.n	800ea7c <HAL_CAN_IRQHandler+0xec>
 800ea62:	69bb      	ldr	r3, [r7, #24]
 800ea64:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800ea68:	2b00      	cmp	r3, #0
 800ea6a:	d004      	beq.n	800ea76 <HAL_CAN_IRQHandler+0xe6>
 800ea6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ea6e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800ea72:	627b      	str	r3, [r7, #36]	@ 0x24
 800ea74:	e002      	b.n	800ea7c <HAL_CAN_IRQHandler+0xec>
 800ea76:	6878      	ldr	r0, [r7, #4]
 800ea78:	f000 f969 	bl	800ed4e <HAL_CAN_TxMailbox1AbortCallback>
 800ea7c:	69bb      	ldr	r3, [r7, #24]
 800ea7e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800ea82:	2b00      	cmp	r3, #0
 800ea84:	d024      	beq.n	800ead0 <HAL_CAN_IRQHandler+0x140>
 800ea86:	687b      	ldr	r3, [r7, #4]
 800ea88:	681b      	ldr	r3, [r3, #0]
 800ea8a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800ea8e:	609a      	str	r2, [r3, #8]
 800ea90:	69bb      	ldr	r3, [r7, #24]
 800ea92:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800ea96:	2b00      	cmp	r3, #0
 800ea98:	d003      	beq.n	800eaa2 <HAL_CAN_IRQHandler+0x112>
 800ea9a:	6878      	ldr	r0, [r7, #4]
 800ea9c:	f000 f943 	bl	800ed26 <HAL_CAN_TxMailbox2CompleteCallback>
 800eaa0:	e016      	b.n	800ead0 <HAL_CAN_IRQHandler+0x140>
 800eaa2:	69bb      	ldr	r3, [r7, #24]
 800eaa4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800eaa8:	2b00      	cmp	r3, #0
 800eaaa:	d004      	beq.n	800eab6 <HAL_CAN_IRQHandler+0x126>
 800eaac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800eaae:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800eab2:	627b      	str	r3, [r7, #36]	@ 0x24
 800eab4:	e00c      	b.n	800ead0 <HAL_CAN_IRQHandler+0x140>
 800eab6:	69bb      	ldr	r3, [r7, #24]
 800eab8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800eabc:	2b00      	cmp	r3, #0
 800eabe:	d004      	beq.n	800eaca <HAL_CAN_IRQHandler+0x13a>
 800eac0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800eac2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800eac6:	627b      	str	r3, [r7, #36]	@ 0x24
 800eac8:	e002      	b.n	800ead0 <HAL_CAN_IRQHandler+0x140>
 800eaca:	6878      	ldr	r0, [r7, #4]
 800eacc:	f000 f949 	bl	800ed62 <HAL_CAN_TxMailbox2AbortCallback>
 800ead0:	6a3b      	ldr	r3, [r7, #32]
 800ead2:	f003 0308 	and.w	r3, r3, #8
 800ead6:	2b00      	cmp	r3, #0
 800ead8:	d00c      	beq.n	800eaf4 <HAL_CAN_IRQHandler+0x164>
 800eada:	697b      	ldr	r3, [r7, #20]
 800eadc:	f003 0310 	and.w	r3, r3, #16
 800eae0:	2b00      	cmp	r3, #0
 800eae2:	d007      	beq.n	800eaf4 <HAL_CAN_IRQHandler+0x164>
 800eae4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800eae6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800eaea:	627b      	str	r3, [r7, #36]	@ 0x24
 800eaec:	687b      	ldr	r3, [r7, #4]
 800eaee:	681b      	ldr	r3, [r3, #0]
 800eaf0:	2210      	movs	r2, #16
 800eaf2:	60da      	str	r2, [r3, #12]
 800eaf4:	6a3b      	ldr	r3, [r7, #32]
 800eaf6:	f003 0304 	and.w	r3, r3, #4
 800eafa:	2b00      	cmp	r3, #0
 800eafc:	d00b      	beq.n	800eb16 <HAL_CAN_IRQHandler+0x186>
 800eafe:	697b      	ldr	r3, [r7, #20]
 800eb00:	f003 0308 	and.w	r3, r3, #8
 800eb04:	2b00      	cmp	r3, #0
 800eb06:	d006      	beq.n	800eb16 <HAL_CAN_IRQHandler+0x186>
 800eb08:	687b      	ldr	r3, [r7, #4]
 800eb0a:	681b      	ldr	r3, [r3, #0]
 800eb0c:	2208      	movs	r2, #8
 800eb0e:	60da      	str	r2, [r3, #12]
 800eb10:	6878      	ldr	r0, [r7, #4]
 800eb12:	f000 f930 	bl	800ed76 <HAL_CAN_RxFifo0FullCallback>
 800eb16:	6a3b      	ldr	r3, [r7, #32]
 800eb18:	f003 0302 	and.w	r3, r3, #2
 800eb1c:	2b00      	cmp	r3, #0
 800eb1e:	d009      	beq.n	800eb34 <HAL_CAN_IRQHandler+0x1a4>
 800eb20:	687b      	ldr	r3, [r7, #4]
 800eb22:	681b      	ldr	r3, [r3, #0]
 800eb24:	68db      	ldr	r3, [r3, #12]
 800eb26:	f003 0303 	and.w	r3, r3, #3
 800eb2a:	2b00      	cmp	r3, #0
 800eb2c:	d002      	beq.n	800eb34 <HAL_CAN_IRQHandler+0x1a4>
 800eb2e:	6878      	ldr	r0, [r7, #4]
 800eb30:	f7f2 fb4c 	bl	80011cc <HAL_CAN_RxFifo0MsgPendingCallback>
 800eb34:	6a3b      	ldr	r3, [r7, #32]
 800eb36:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800eb3a:	2b00      	cmp	r3, #0
 800eb3c:	d00c      	beq.n	800eb58 <HAL_CAN_IRQHandler+0x1c8>
 800eb3e:	693b      	ldr	r3, [r7, #16]
 800eb40:	f003 0310 	and.w	r3, r3, #16
 800eb44:	2b00      	cmp	r3, #0
 800eb46:	d007      	beq.n	800eb58 <HAL_CAN_IRQHandler+0x1c8>
 800eb48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800eb4a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800eb4e:	627b      	str	r3, [r7, #36]	@ 0x24
 800eb50:	687b      	ldr	r3, [r7, #4]
 800eb52:	681b      	ldr	r3, [r3, #0]
 800eb54:	2210      	movs	r2, #16
 800eb56:	611a      	str	r2, [r3, #16]
 800eb58:	6a3b      	ldr	r3, [r7, #32]
 800eb5a:	f003 0320 	and.w	r3, r3, #32
 800eb5e:	2b00      	cmp	r3, #0
 800eb60:	d00b      	beq.n	800eb7a <HAL_CAN_IRQHandler+0x1ea>
 800eb62:	693b      	ldr	r3, [r7, #16]
 800eb64:	f003 0308 	and.w	r3, r3, #8
 800eb68:	2b00      	cmp	r3, #0
 800eb6a:	d006      	beq.n	800eb7a <HAL_CAN_IRQHandler+0x1ea>
 800eb6c:	687b      	ldr	r3, [r7, #4]
 800eb6e:	681b      	ldr	r3, [r3, #0]
 800eb70:	2208      	movs	r2, #8
 800eb72:	611a      	str	r2, [r3, #16]
 800eb74:	6878      	ldr	r0, [r7, #4]
 800eb76:	f000 f908 	bl	800ed8a <HAL_CAN_RxFifo1FullCallback>
 800eb7a:	6a3b      	ldr	r3, [r7, #32]
 800eb7c:	f003 0310 	and.w	r3, r3, #16
 800eb80:	2b00      	cmp	r3, #0
 800eb82:	d009      	beq.n	800eb98 <HAL_CAN_IRQHandler+0x208>
 800eb84:	687b      	ldr	r3, [r7, #4]
 800eb86:	681b      	ldr	r3, [r3, #0]
 800eb88:	691b      	ldr	r3, [r3, #16]
 800eb8a:	f003 0303 	and.w	r3, r3, #3
 800eb8e:	2b00      	cmp	r3, #0
 800eb90:	d002      	beq.n	800eb98 <HAL_CAN_IRQHandler+0x208>
 800eb92:	6878      	ldr	r0, [r7, #4]
 800eb94:	f7f2 fb25 	bl	80011e2 <HAL_CAN_RxFifo1MsgPendingCallback>
 800eb98:	6a3b      	ldr	r3, [r7, #32]
 800eb9a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800eb9e:	2b00      	cmp	r3, #0
 800eba0:	d00b      	beq.n	800ebba <HAL_CAN_IRQHandler+0x22a>
 800eba2:	69fb      	ldr	r3, [r7, #28]
 800eba4:	f003 0310 	and.w	r3, r3, #16
 800eba8:	2b00      	cmp	r3, #0
 800ebaa:	d006      	beq.n	800ebba <HAL_CAN_IRQHandler+0x22a>
 800ebac:	687b      	ldr	r3, [r7, #4]
 800ebae:	681b      	ldr	r3, [r3, #0]
 800ebb0:	2210      	movs	r2, #16
 800ebb2:	605a      	str	r2, [r3, #4]
 800ebb4:	6878      	ldr	r0, [r7, #4]
 800ebb6:	f000 f8f2 	bl	800ed9e <HAL_CAN_SleepCallback>
 800ebba:	6a3b      	ldr	r3, [r7, #32]
 800ebbc:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800ebc0:	2b00      	cmp	r3, #0
 800ebc2:	d00b      	beq.n	800ebdc <HAL_CAN_IRQHandler+0x24c>
 800ebc4:	69fb      	ldr	r3, [r7, #28]
 800ebc6:	f003 0308 	and.w	r3, r3, #8
 800ebca:	2b00      	cmp	r3, #0
 800ebcc:	d006      	beq.n	800ebdc <HAL_CAN_IRQHandler+0x24c>
 800ebce:	687b      	ldr	r3, [r7, #4]
 800ebd0:	681b      	ldr	r3, [r3, #0]
 800ebd2:	2208      	movs	r2, #8
 800ebd4:	605a      	str	r2, [r3, #4]
 800ebd6:	6878      	ldr	r0, [r7, #4]
 800ebd8:	f000 f8eb 	bl	800edb2 <HAL_CAN_WakeUpFromRxMsgCallback>
 800ebdc:	6a3b      	ldr	r3, [r7, #32]
 800ebde:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800ebe2:	2b00      	cmp	r3, #0
 800ebe4:	d07b      	beq.n	800ecde <HAL_CAN_IRQHandler+0x34e>
 800ebe6:	69fb      	ldr	r3, [r7, #28]
 800ebe8:	f003 0304 	and.w	r3, r3, #4
 800ebec:	2b00      	cmp	r3, #0
 800ebee:	d072      	beq.n	800ecd6 <HAL_CAN_IRQHandler+0x346>
 800ebf0:	6a3b      	ldr	r3, [r7, #32]
 800ebf2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ebf6:	2b00      	cmp	r3, #0
 800ebf8:	d008      	beq.n	800ec0c <HAL_CAN_IRQHandler+0x27c>
 800ebfa:	68fb      	ldr	r3, [r7, #12]
 800ebfc:	f003 0301 	and.w	r3, r3, #1
 800ec00:	2b00      	cmp	r3, #0
 800ec02:	d003      	beq.n	800ec0c <HAL_CAN_IRQHandler+0x27c>
 800ec04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec06:	f043 0301 	orr.w	r3, r3, #1
 800ec0a:	627b      	str	r3, [r7, #36]	@ 0x24
 800ec0c:	6a3b      	ldr	r3, [r7, #32]
 800ec0e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800ec12:	2b00      	cmp	r3, #0
 800ec14:	d008      	beq.n	800ec28 <HAL_CAN_IRQHandler+0x298>
 800ec16:	68fb      	ldr	r3, [r7, #12]
 800ec18:	f003 0302 	and.w	r3, r3, #2
 800ec1c:	2b00      	cmp	r3, #0
 800ec1e:	d003      	beq.n	800ec28 <HAL_CAN_IRQHandler+0x298>
 800ec20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec22:	f043 0302 	orr.w	r3, r3, #2
 800ec26:	627b      	str	r3, [r7, #36]	@ 0x24
 800ec28:	6a3b      	ldr	r3, [r7, #32]
 800ec2a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800ec2e:	2b00      	cmp	r3, #0
 800ec30:	d008      	beq.n	800ec44 <HAL_CAN_IRQHandler+0x2b4>
 800ec32:	68fb      	ldr	r3, [r7, #12]
 800ec34:	f003 0304 	and.w	r3, r3, #4
 800ec38:	2b00      	cmp	r3, #0
 800ec3a:	d003      	beq.n	800ec44 <HAL_CAN_IRQHandler+0x2b4>
 800ec3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec3e:	f043 0304 	orr.w	r3, r3, #4
 800ec42:	627b      	str	r3, [r7, #36]	@ 0x24
 800ec44:	6a3b      	ldr	r3, [r7, #32]
 800ec46:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800ec4a:	2b00      	cmp	r3, #0
 800ec4c:	d043      	beq.n	800ecd6 <HAL_CAN_IRQHandler+0x346>
 800ec4e:	68fb      	ldr	r3, [r7, #12]
 800ec50:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800ec54:	2b00      	cmp	r3, #0
 800ec56:	d03e      	beq.n	800ecd6 <HAL_CAN_IRQHandler+0x346>
 800ec58:	68fb      	ldr	r3, [r7, #12]
 800ec5a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800ec5e:	2b60      	cmp	r3, #96	@ 0x60
 800ec60:	d02b      	beq.n	800ecba <HAL_CAN_IRQHandler+0x32a>
 800ec62:	2b60      	cmp	r3, #96	@ 0x60
 800ec64:	d82e      	bhi.n	800ecc4 <HAL_CAN_IRQHandler+0x334>
 800ec66:	2b50      	cmp	r3, #80	@ 0x50
 800ec68:	d022      	beq.n	800ecb0 <HAL_CAN_IRQHandler+0x320>
 800ec6a:	2b50      	cmp	r3, #80	@ 0x50
 800ec6c:	d82a      	bhi.n	800ecc4 <HAL_CAN_IRQHandler+0x334>
 800ec6e:	2b40      	cmp	r3, #64	@ 0x40
 800ec70:	d019      	beq.n	800eca6 <HAL_CAN_IRQHandler+0x316>
 800ec72:	2b40      	cmp	r3, #64	@ 0x40
 800ec74:	d826      	bhi.n	800ecc4 <HAL_CAN_IRQHandler+0x334>
 800ec76:	2b30      	cmp	r3, #48	@ 0x30
 800ec78:	d010      	beq.n	800ec9c <HAL_CAN_IRQHandler+0x30c>
 800ec7a:	2b30      	cmp	r3, #48	@ 0x30
 800ec7c:	d822      	bhi.n	800ecc4 <HAL_CAN_IRQHandler+0x334>
 800ec7e:	2b10      	cmp	r3, #16
 800ec80:	d002      	beq.n	800ec88 <HAL_CAN_IRQHandler+0x2f8>
 800ec82:	2b20      	cmp	r3, #32
 800ec84:	d005      	beq.n	800ec92 <HAL_CAN_IRQHandler+0x302>
 800ec86:	e01d      	b.n	800ecc4 <HAL_CAN_IRQHandler+0x334>
 800ec88:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec8a:	f043 0308 	orr.w	r3, r3, #8
 800ec8e:	627b      	str	r3, [r7, #36]	@ 0x24
 800ec90:	e019      	b.n	800ecc6 <HAL_CAN_IRQHandler+0x336>
 800ec92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec94:	f043 0310 	orr.w	r3, r3, #16
 800ec98:	627b      	str	r3, [r7, #36]	@ 0x24
 800ec9a:	e014      	b.n	800ecc6 <HAL_CAN_IRQHandler+0x336>
 800ec9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec9e:	f043 0320 	orr.w	r3, r3, #32
 800eca2:	627b      	str	r3, [r7, #36]	@ 0x24
 800eca4:	e00f      	b.n	800ecc6 <HAL_CAN_IRQHandler+0x336>
 800eca6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800eca8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ecac:	627b      	str	r3, [r7, #36]	@ 0x24
 800ecae:	e00a      	b.n	800ecc6 <HAL_CAN_IRQHandler+0x336>
 800ecb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ecb2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ecb6:	627b      	str	r3, [r7, #36]	@ 0x24
 800ecb8:	e005      	b.n	800ecc6 <HAL_CAN_IRQHandler+0x336>
 800ecba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ecbc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800ecc0:	627b      	str	r3, [r7, #36]	@ 0x24
 800ecc2:	e000      	b.n	800ecc6 <HAL_CAN_IRQHandler+0x336>
 800ecc4:	bf00      	nop
 800ecc6:	687b      	ldr	r3, [r7, #4]
 800ecc8:	681b      	ldr	r3, [r3, #0]
 800ecca:	699a      	ldr	r2, [r3, #24]
 800eccc:	687b      	ldr	r3, [r7, #4]
 800ecce:	681b      	ldr	r3, [r3, #0]
 800ecd0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 800ecd4:	619a      	str	r2, [r3, #24]
 800ecd6:	687b      	ldr	r3, [r7, #4]
 800ecd8:	681b      	ldr	r3, [r3, #0]
 800ecda:	2204      	movs	r2, #4
 800ecdc:	605a      	str	r2, [r3, #4]
 800ecde:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ece0:	2b00      	cmp	r3, #0
 800ece2:	d008      	beq.n	800ecf6 <HAL_CAN_IRQHandler+0x366>
 800ece4:	687b      	ldr	r3, [r7, #4]
 800ece6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800ece8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ecea:	431a      	orrs	r2, r3
 800ecec:	687b      	ldr	r3, [r7, #4]
 800ecee:	625a      	str	r2, [r3, #36]	@ 0x24
 800ecf0:	6878      	ldr	r0, [r7, #4]
 800ecf2:	f000 f868 	bl	800edc6 <HAL_CAN_ErrorCallback>
 800ecf6:	bf00      	nop
 800ecf8:	3728      	adds	r7, #40	@ 0x28
 800ecfa:	46bd      	mov	sp, r7
 800ecfc:	bd80      	pop	{r7, pc}

0800ecfe <HAL_CAN_TxMailbox0CompleteCallback>:
 800ecfe:	b480      	push	{r7}
 800ed00:	b083      	sub	sp, #12
 800ed02:	af00      	add	r7, sp, #0
 800ed04:	6078      	str	r0, [r7, #4]
 800ed06:	bf00      	nop
 800ed08:	370c      	adds	r7, #12
 800ed0a:	46bd      	mov	sp, r7
 800ed0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed10:	4770      	bx	lr

0800ed12 <HAL_CAN_TxMailbox1CompleteCallback>:
 800ed12:	b480      	push	{r7}
 800ed14:	b083      	sub	sp, #12
 800ed16:	af00      	add	r7, sp, #0
 800ed18:	6078      	str	r0, [r7, #4]
 800ed1a:	bf00      	nop
 800ed1c:	370c      	adds	r7, #12
 800ed1e:	46bd      	mov	sp, r7
 800ed20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed24:	4770      	bx	lr

0800ed26 <HAL_CAN_TxMailbox2CompleteCallback>:
 800ed26:	b480      	push	{r7}
 800ed28:	b083      	sub	sp, #12
 800ed2a:	af00      	add	r7, sp, #0
 800ed2c:	6078      	str	r0, [r7, #4]
 800ed2e:	bf00      	nop
 800ed30:	370c      	adds	r7, #12
 800ed32:	46bd      	mov	sp, r7
 800ed34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed38:	4770      	bx	lr

0800ed3a <HAL_CAN_TxMailbox0AbortCallback>:
 800ed3a:	b480      	push	{r7}
 800ed3c:	b083      	sub	sp, #12
 800ed3e:	af00      	add	r7, sp, #0
 800ed40:	6078      	str	r0, [r7, #4]
 800ed42:	bf00      	nop
 800ed44:	370c      	adds	r7, #12
 800ed46:	46bd      	mov	sp, r7
 800ed48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed4c:	4770      	bx	lr

0800ed4e <HAL_CAN_TxMailbox1AbortCallback>:
 800ed4e:	b480      	push	{r7}
 800ed50:	b083      	sub	sp, #12
 800ed52:	af00      	add	r7, sp, #0
 800ed54:	6078      	str	r0, [r7, #4]
 800ed56:	bf00      	nop
 800ed58:	370c      	adds	r7, #12
 800ed5a:	46bd      	mov	sp, r7
 800ed5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed60:	4770      	bx	lr

0800ed62 <HAL_CAN_TxMailbox2AbortCallback>:
 800ed62:	b480      	push	{r7}
 800ed64:	b083      	sub	sp, #12
 800ed66:	af00      	add	r7, sp, #0
 800ed68:	6078      	str	r0, [r7, #4]
 800ed6a:	bf00      	nop
 800ed6c:	370c      	adds	r7, #12
 800ed6e:	46bd      	mov	sp, r7
 800ed70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed74:	4770      	bx	lr

0800ed76 <HAL_CAN_RxFifo0FullCallback>:
 800ed76:	b480      	push	{r7}
 800ed78:	b083      	sub	sp, #12
 800ed7a:	af00      	add	r7, sp, #0
 800ed7c:	6078      	str	r0, [r7, #4]
 800ed7e:	bf00      	nop
 800ed80:	370c      	adds	r7, #12
 800ed82:	46bd      	mov	sp, r7
 800ed84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed88:	4770      	bx	lr

0800ed8a <HAL_CAN_RxFifo1FullCallback>:
 800ed8a:	b480      	push	{r7}
 800ed8c:	b083      	sub	sp, #12
 800ed8e:	af00      	add	r7, sp, #0
 800ed90:	6078      	str	r0, [r7, #4]
 800ed92:	bf00      	nop
 800ed94:	370c      	adds	r7, #12
 800ed96:	46bd      	mov	sp, r7
 800ed98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed9c:	4770      	bx	lr

0800ed9e <HAL_CAN_SleepCallback>:
 800ed9e:	b480      	push	{r7}
 800eda0:	b083      	sub	sp, #12
 800eda2:	af00      	add	r7, sp, #0
 800eda4:	6078      	str	r0, [r7, #4]
 800eda6:	bf00      	nop
 800eda8:	370c      	adds	r7, #12
 800edaa:	46bd      	mov	sp, r7
 800edac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edb0:	4770      	bx	lr

0800edb2 <HAL_CAN_WakeUpFromRxMsgCallback>:
 800edb2:	b480      	push	{r7}
 800edb4:	b083      	sub	sp, #12
 800edb6:	af00      	add	r7, sp, #0
 800edb8:	6078      	str	r0, [r7, #4]
 800edba:	bf00      	nop
 800edbc:	370c      	adds	r7, #12
 800edbe:	46bd      	mov	sp, r7
 800edc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edc4:	4770      	bx	lr

0800edc6 <HAL_CAN_ErrorCallback>:
 800edc6:	b480      	push	{r7}
 800edc8:	b083      	sub	sp, #12
 800edca:	af00      	add	r7, sp, #0
 800edcc:	6078      	str	r0, [r7, #4]
 800edce:	bf00      	nop
 800edd0:	370c      	adds	r7, #12
 800edd2:	46bd      	mov	sp, r7
 800edd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edd8:	4770      	bx	lr
	...

0800eddc <__NVIC_SetPriorityGrouping>:
 800eddc:	b480      	push	{r7}
 800edde:	b085      	sub	sp, #20
 800ede0:	af00      	add	r7, sp, #0
 800ede2:	6078      	str	r0, [r7, #4]
 800ede4:	687b      	ldr	r3, [r7, #4]
 800ede6:	f003 0307 	and.w	r3, r3, #7
 800edea:	60fb      	str	r3, [r7, #12]
 800edec:	4b0c      	ldr	r3, [pc, #48]	@ (800ee20 <__NVIC_SetPriorityGrouping+0x44>)
 800edee:	68db      	ldr	r3, [r3, #12]
 800edf0:	60bb      	str	r3, [r7, #8]
 800edf2:	68ba      	ldr	r2, [r7, #8]
 800edf4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800edf8:	4013      	ands	r3, r2
 800edfa:	60bb      	str	r3, [r7, #8]
 800edfc:	68fb      	ldr	r3, [r7, #12]
 800edfe:	021a      	lsls	r2, r3, #8
 800ee00:	68bb      	ldr	r3, [r7, #8]
 800ee02:	4313      	orrs	r3, r2
 800ee04:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800ee08:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ee0c:	60bb      	str	r3, [r7, #8]
 800ee0e:	4a04      	ldr	r2, [pc, #16]	@ (800ee20 <__NVIC_SetPriorityGrouping+0x44>)
 800ee10:	68bb      	ldr	r3, [r7, #8]
 800ee12:	60d3      	str	r3, [r2, #12]
 800ee14:	bf00      	nop
 800ee16:	3714      	adds	r7, #20
 800ee18:	46bd      	mov	sp, r7
 800ee1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee1e:	4770      	bx	lr
 800ee20:	e000ed00 	.word	0xe000ed00

0800ee24 <__NVIC_GetPriorityGrouping>:
 800ee24:	b480      	push	{r7}
 800ee26:	af00      	add	r7, sp, #0
 800ee28:	4b04      	ldr	r3, [pc, #16]	@ (800ee3c <__NVIC_GetPriorityGrouping+0x18>)
 800ee2a:	68db      	ldr	r3, [r3, #12]
 800ee2c:	0a1b      	lsrs	r3, r3, #8
 800ee2e:	f003 0307 	and.w	r3, r3, #7
 800ee32:	4618      	mov	r0, r3
 800ee34:	46bd      	mov	sp, r7
 800ee36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee3a:	4770      	bx	lr
 800ee3c:	e000ed00 	.word	0xe000ed00

0800ee40 <__NVIC_EnableIRQ>:
 800ee40:	b480      	push	{r7}
 800ee42:	b083      	sub	sp, #12
 800ee44:	af00      	add	r7, sp, #0
 800ee46:	4603      	mov	r3, r0
 800ee48:	71fb      	strb	r3, [r7, #7]
 800ee4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ee4e:	2b00      	cmp	r3, #0
 800ee50:	db0b      	blt.n	800ee6a <__NVIC_EnableIRQ+0x2a>
 800ee52:	79fb      	ldrb	r3, [r7, #7]
 800ee54:	f003 021f 	and.w	r2, r3, #31
 800ee58:	4907      	ldr	r1, [pc, #28]	@ (800ee78 <__NVIC_EnableIRQ+0x38>)
 800ee5a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ee5e:	095b      	lsrs	r3, r3, #5
 800ee60:	2001      	movs	r0, #1
 800ee62:	fa00 f202 	lsl.w	r2, r0, r2
 800ee66:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800ee6a:	bf00      	nop
 800ee6c:	370c      	adds	r7, #12
 800ee6e:	46bd      	mov	sp, r7
 800ee70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee74:	4770      	bx	lr
 800ee76:	bf00      	nop
 800ee78:	e000e100 	.word	0xe000e100

0800ee7c <__NVIC_DisableIRQ>:
 800ee7c:	b480      	push	{r7}
 800ee7e:	b083      	sub	sp, #12
 800ee80:	af00      	add	r7, sp, #0
 800ee82:	4603      	mov	r3, r0
 800ee84:	71fb      	strb	r3, [r7, #7]
 800ee86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ee8a:	2b00      	cmp	r3, #0
 800ee8c:	db12      	blt.n	800eeb4 <__NVIC_DisableIRQ+0x38>
 800ee8e:	79fb      	ldrb	r3, [r7, #7]
 800ee90:	f003 021f 	and.w	r2, r3, #31
 800ee94:	490a      	ldr	r1, [pc, #40]	@ (800eec0 <__NVIC_DisableIRQ+0x44>)
 800ee96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800ee9a:	095b      	lsrs	r3, r3, #5
 800ee9c:	2001      	movs	r0, #1
 800ee9e:	fa00 f202 	lsl.w	r2, r0, r2
 800eea2:	3320      	adds	r3, #32
 800eea4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800eea8:	f3bf 8f4f 	dsb	sy
 800eeac:	bf00      	nop
 800eeae:	f3bf 8f6f 	isb	sy
 800eeb2:	bf00      	nop
 800eeb4:	bf00      	nop
 800eeb6:	370c      	adds	r7, #12
 800eeb8:	46bd      	mov	sp, r7
 800eeba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eebe:	4770      	bx	lr
 800eec0:	e000e100 	.word	0xe000e100

0800eec4 <__NVIC_SetPriority>:
 800eec4:	b480      	push	{r7}
 800eec6:	b083      	sub	sp, #12
 800eec8:	af00      	add	r7, sp, #0
 800eeca:	4603      	mov	r3, r0
 800eecc:	6039      	str	r1, [r7, #0]
 800eece:	71fb      	strb	r3, [r7, #7]
 800eed0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800eed4:	2b00      	cmp	r3, #0
 800eed6:	db0a      	blt.n	800eeee <__NVIC_SetPriority+0x2a>
 800eed8:	683b      	ldr	r3, [r7, #0]
 800eeda:	b2da      	uxtb	r2, r3
 800eedc:	490c      	ldr	r1, [pc, #48]	@ (800ef10 <__NVIC_SetPriority+0x4c>)
 800eede:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800eee2:	0112      	lsls	r2, r2, #4
 800eee4:	b2d2      	uxtb	r2, r2
 800eee6:	440b      	add	r3, r1
 800eee8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800eeec:	e00a      	b.n	800ef04 <__NVIC_SetPriority+0x40>
 800eeee:	683b      	ldr	r3, [r7, #0]
 800eef0:	b2da      	uxtb	r2, r3
 800eef2:	4908      	ldr	r1, [pc, #32]	@ (800ef14 <__NVIC_SetPriority+0x50>)
 800eef4:	79fb      	ldrb	r3, [r7, #7]
 800eef6:	f003 030f 	and.w	r3, r3, #15
 800eefa:	3b04      	subs	r3, #4
 800eefc:	0112      	lsls	r2, r2, #4
 800eefe:	b2d2      	uxtb	r2, r2
 800ef00:	440b      	add	r3, r1
 800ef02:	761a      	strb	r2, [r3, #24]
 800ef04:	bf00      	nop
 800ef06:	370c      	adds	r7, #12
 800ef08:	46bd      	mov	sp, r7
 800ef0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef0e:	4770      	bx	lr
 800ef10:	e000e100 	.word	0xe000e100
 800ef14:	e000ed00 	.word	0xe000ed00

0800ef18 <NVIC_EncodePriority>:
 800ef18:	b480      	push	{r7}
 800ef1a:	b089      	sub	sp, #36	@ 0x24
 800ef1c:	af00      	add	r7, sp, #0
 800ef1e:	60f8      	str	r0, [r7, #12]
 800ef20:	60b9      	str	r1, [r7, #8]
 800ef22:	607a      	str	r2, [r7, #4]
 800ef24:	68fb      	ldr	r3, [r7, #12]
 800ef26:	f003 0307 	and.w	r3, r3, #7
 800ef2a:	61fb      	str	r3, [r7, #28]
 800ef2c:	69fb      	ldr	r3, [r7, #28]
 800ef2e:	f1c3 0307 	rsb	r3, r3, #7
 800ef32:	2b04      	cmp	r3, #4
 800ef34:	bf28      	it	cs
 800ef36:	2304      	movcs	r3, #4
 800ef38:	61bb      	str	r3, [r7, #24]
 800ef3a:	69fb      	ldr	r3, [r7, #28]
 800ef3c:	3304      	adds	r3, #4
 800ef3e:	2b06      	cmp	r3, #6
 800ef40:	d902      	bls.n	800ef48 <NVIC_EncodePriority+0x30>
 800ef42:	69fb      	ldr	r3, [r7, #28]
 800ef44:	3b03      	subs	r3, #3
 800ef46:	e000      	b.n	800ef4a <NVIC_EncodePriority+0x32>
 800ef48:	2300      	movs	r3, #0
 800ef4a:	617b      	str	r3, [r7, #20]
 800ef4c:	f04f 32ff 	mov.w	r2, #4294967295
 800ef50:	69bb      	ldr	r3, [r7, #24]
 800ef52:	fa02 f303 	lsl.w	r3, r2, r3
 800ef56:	43da      	mvns	r2, r3
 800ef58:	68bb      	ldr	r3, [r7, #8]
 800ef5a:	401a      	ands	r2, r3
 800ef5c:	697b      	ldr	r3, [r7, #20]
 800ef5e:	409a      	lsls	r2, r3
 800ef60:	f04f 31ff 	mov.w	r1, #4294967295
 800ef64:	697b      	ldr	r3, [r7, #20]
 800ef66:	fa01 f303 	lsl.w	r3, r1, r3
 800ef6a:	43d9      	mvns	r1, r3
 800ef6c:	687b      	ldr	r3, [r7, #4]
 800ef6e:	400b      	ands	r3, r1
 800ef70:	4313      	orrs	r3, r2
 800ef72:	4618      	mov	r0, r3
 800ef74:	3724      	adds	r7, #36	@ 0x24
 800ef76:	46bd      	mov	sp, r7
 800ef78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef7c:	4770      	bx	lr

0800ef7e <HAL_NVIC_SetPriorityGrouping>:
 800ef7e:	b580      	push	{r7, lr}
 800ef80:	b082      	sub	sp, #8
 800ef82:	af00      	add	r7, sp, #0
 800ef84:	6078      	str	r0, [r7, #4]
 800ef86:	6878      	ldr	r0, [r7, #4]
 800ef88:	f7ff ff28 	bl	800eddc <__NVIC_SetPriorityGrouping>
 800ef8c:	bf00      	nop
 800ef8e:	3708      	adds	r7, #8
 800ef90:	46bd      	mov	sp, r7
 800ef92:	bd80      	pop	{r7, pc}

0800ef94 <HAL_NVIC_SetPriority>:
 800ef94:	b580      	push	{r7, lr}
 800ef96:	b086      	sub	sp, #24
 800ef98:	af00      	add	r7, sp, #0
 800ef9a:	4603      	mov	r3, r0
 800ef9c:	60b9      	str	r1, [r7, #8]
 800ef9e:	607a      	str	r2, [r7, #4]
 800efa0:	73fb      	strb	r3, [r7, #15]
 800efa2:	2300      	movs	r3, #0
 800efa4:	617b      	str	r3, [r7, #20]
 800efa6:	f7ff ff3d 	bl	800ee24 <__NVIC_GetPriorityGrouping>
 800efaa:	6178      	str	r0, [r7, #20]
 800efac:	687a      	ldr	r2, [r7, #4]
 800efae:	68b9      	ldr	r1, [r7, #8]
 800efb0:	6978      	ldr	r0, [r7, #20]
 800efb2:	f7ff ffb1 	bl	800ef18 <NVIC_EncodePriority>
 800efb6:	4602      	mov	r2, r0
 800efb8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800efbc:	4611      	mov	r1, r2
 800efbe:	4618      	mov	r0, r3
 800efc0:	f7ff ff80 	bl	800eec4 <__NVIC_SetPriority>
 800efc4:	bf00      	nop
 800efc6:	3718      	adds	r7, #24
 800efc8:	46bd      	mov	sp, r7
 800efca:	bd80      	pop	{r7, pc}

0800efcc <HAL_NVIC_EnableIRQ>:
 800efcc:	b580      	push	{r7, lr}
 800efce:	b082      	sub	sp, #8
 800efd0:	af00      	add	r7, sp, #0
 800efd2:	4603      	mov	r3, r0
 800efd4:	71fb      	strb	r3, [r7, #7]
 800efd6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800efda:	4618      	mov	r0, r3
 800efdc:	f7ff ff30 	bl	800ee40 <__NVIC_EnableIRQ>
 800efe0:	bf00      	nop
 800efe2:	3708      	adds	r7, #8
 800efe4:	46bd      	mov	sp, r7
 800efe6:	bd80      	pop	{r7, pc}

0800efe8 <HAL_NVIC_DisableIRQ>:
 800efe8:	b580      	push	{r7, lr}
 800efea:	b082      	sub	sp, #8
 800efec:	af00      	add	r7, sp, #0
 800efee:	4603      	mov	r3, r0
 800eff0:	71fb      	strb	r3, [r7, #7]
 800eff2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800eff6:	4618      	mov	r0, r3
 800eff8:	f7ff ff40 	bl	800ee7c <__NVIC_DisableIRQ>
 800effc:	bf00      	nop
 800effe:	3708      	adds	r7, #8
 800f000:	46bd      	mov	sp, r7
 800f002:	bd80      	pop	{r7, pc}

0800f004 <HAL_DMA_Init>:
 800f004:	b580      	push	{r7, lr}
 800f006:	b086      	sub	sp, #24
 800f008:	af00      	add	r7, sp, #0
 800f00a:	6078      	str	r0, [r7, #4]
 800f00c:	2300      	movs	r3, #0
 800f00e:	617b      	str	r3, [r7, #20]
 800f010:	f7fe fdd2 	bl	800dbb8 <HAL_GetTick>
 800f014:	6138      	str	r0, [r7, #16]
 800f016:	687b      	ldr	r3, [r7, #4]
 800f018:	2b00      	cmp	r3, #0
 800f01a:	d101      	bne.n	800f020 <HAL_DMA_Init+0x1c>
 800f01c:	2301      	movs	r3, #1
 800f01e:	e099      	b.n	800f154 <HAL_DMA_Init+0x150>
 800f020:	687b      	ldr	r3, [r7, #4]
 800f022:	2202      	movs	r2, #2
 800f024:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f028:	687b      	ldr	r3, [r7, #4]
 800f02a:	2200      	movs	r2, #0
 800f02c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f030:	687b      	ldr	r3, [r7, #4]
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	681a      	ldr	r2, [r3, #0]
 800f036:	687b      	ldr	r3, [r7, #4]
 800f038:	681b      	ldr	r3, [r3, #0]
 800f03a:	f022 0201 	bic.w	r2, r2, #1
 800f03e:	601a      	str	r2, [r3, #0]
 800f040:	e00f      	b.n	800f062 <HAL_DMA_Init+0x5e>
 800f042:	f7fe fdb9 	bl	800dbb8 <HAL_GetTick>
 800f046:	4602      	mov	r2, r0
 800f048:	693b      	ldr	r3, [r7, #16]
 800f04a:	1ad3      	subs	r3, r2, r3
 800f04c:	2b05      	cmp	r3, #5
 800f04e:	d908      	bls.n	800f062 <HAL_DMA_Init+0x5e>
 800f050:	687b      	ldr	r3, [r7, #4]
 800f052:	2220      	movs	r2, #32
 800f054:	655a      	str	r2, [r3, #84]	@ 0x54
 800f056:	687b      	ldr	r3, [r7, #4]
 800f058:	2203      	movs	r2, #3
 800f05a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f05e:	2303      	movs	r3, #3
 800f060:	e078      	b.n	800f154 <HAL_DMA_Init+0x150>
 800f062:	687b      	ldr	r3, [r7, #4]
 800f064:	681b      	ldr	r3, [r3, #0]
 800f066:	681b      	ldr	r3, [r3, #0]
 800f068:	f003 0301 	and.w	r3, r3, #1
 800f06c:	2b00      	cmp	r3, #0
 800f06e:	d1e8      	bne.n	800f042 <HAL_DMA_Init+0x3e>
 800f070:	687b      	ldr	r3, [r7, #4]
 800f072:	681b      	ldr	r3, [r3, #0]
 800f074:	681b      	ldr	r3, [r3, #0]
 800f076:	617b      	str	r3, [r7, #20]
 800f078:	697a      	ldr	r2, [r7, #20]
 800f07a:	4b38      	ldr	r3, [pc, #224]	@ (800f15c <HAL_DMA_Init+0x158>)
 800f07c:	4013      	ands	r3, r2
 800f07e:	617b      	str	r3, [r7, #20]
 800f080:	687b      	ldr	r3, [r7, #4]
 800f082:	685a      	ldr	r2, [r3, #4]
 800f084:	687b      	ldr	r3, [r7, #4]
 800f086:	689b      	ldr	r3, [r3, #8]
 800f088:	431a      	orrs	r2, r3
 800f08a:	687b      	ldr	r3, [r7, #4]
 800f08c:	68db      	ldr	r3, [r3, #12]
 800f08e:	431a      	orrs	r2, r3
 800f090:	687b      	ldr	r3, [r7, #4]
 800f092:	691b      	ldr	r3, [r3, #16]
 800f094:	431a      	orrs	r2, r3
 800f096:	687b      	ldr	r3, [r7, #4]
 800f098:	695b      	ldr	r3, [r3, #20]
 800f09a:	431a      	orrs	r2, r3
 800f09c:	687b      	ldr	r3, [r7, #4]
 800f09e:	699b      	ldr	r3, [r3, #24]
 800f0a0:	431a      	orrs	r2, r3
 800f0a2:	687b      	ldr	r3, [r7, #4]
 800f0a4:	69db      	ldr	r3, [r3, #28]
 800f0a6:	431a      	orrs	r2, r3
 800f0a8:	687b      	ldr	r3, [r7, #4]
 800f0aa:	6a1b      	ldr	r3, [r3, #32]
 800f0ac:	4313      	orrs	r3, r2
 800f0ae:	697a      	ldr	r2, [r7, #20]
 800f0b0:	4313      	orrs	r3, r2
 800f0b2:	617b      	str	r3, [r7, #20]
 800f0b4:	687b      	ldr	r3, [r7, #4]
 800f0b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f0b8:	2b04      	cmp	r3, #4
 800f0ba:	d107      	bne.n	800f0cc <HAL_DMA_Init+0xc8>
 800f0bc:	687b      	ldr	r3, [r7, #4]
 800f0be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800f0c0:	687b      	ldr	r3, [r7, #4]
 800f0c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f0c4:	4313      	orrs	r3, r2
 800f0c6:	697a      	ldr	r2, [r7, #20]
 800f0c8:	4313      	orrs	r3, r2
 800f0ca:	617b      	str	r3, [r7, #20]
 800f0cc:	687b      	ldr	r3, [r7, #4]
 800f0ce:	681b      	ldr	r3, [r3, #0]
 800f0d0:	697a      	ldr	r2, [r7, #20]
 800f0d2:	601a      	str	r2, [r3, #0]
 800f0d4:	687b      	ldr	r3, [r7, #4]
 800f0d6:	681b      	ldr	r3, [r3, #0]
 800f0d8:	695b      	ldr	r3, [r3, #20]
 800f0da:	617b      	str	r3, [r7, #20]
 800f0dc:	697b      	ldr	r3, [r7, #20]
 800f0de:	f023 0307 	bic.w	r3, r3, #7
 800f0e2:	617b      	str	r3, [r7, #20]
 800f0e4:	687b      	ldr	r3, [r7, #4]
 800f0e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f0e8:	697a      	ldr	r2, [r7, #20]
 800f0ea:	4313      	orrs	r3, r2
 800f0ec:	617b      	str	r3, [r7, #20]
 800f0ee:	687b      	ldr	r3, [r7, #4]
 800f0f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f0f2:	2b04      	cmp	r3, #4
 800f0f4:	d117      	bne.n	800f126 <HAL_DMA_Init+0x122>
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f0fa:	697a      	ldr	r2, [r7, #20]
 800f0fc:	4313      	orrs	r3, r2
 800f0fe:	617b      	str	r3, [r7, #20]
 800f100:	687b      	ldr	r3, [r7, #4]
 800f102:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f104:	2b00      	cmp	r3, #0
 800f106:	d00e      	beq.n	800f126 <HAL_DMA_Init+0x122>
 800f108:	6878      	ldr	r0, [r7, #4]
 800f10a:	f000 fb0d 	bl	800f728 <DMA_CheckFifoParam>
 800f10e:	4603      	mov	r3, r0
 800f110:	2b00      	cmp	r3, #0
 800f112:	d008      	beq.n	800f126 <HAL_DMA_Init+0x122>
 800f114:	687b      	ldr	r3, [r7, #4]
 800f116:	2240      	movs	r2, #64	@ 0x40
 800f118:	655a      	str	r2, [r3, #84]	@ 0x54
 800f11a:	687b      	ldr	r3, [r7, #4]
 800f11c:	2201      	movs	r2, #1
 800f11e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f122:	2301      	movs	r3, #1
 800f124:	e016      	b.n	800f154 <HAL_DMA_Init+0x150>
 800f126:	687b      	ldr	r3, [r7, #4]
 800f128:	681b      	ldr	r3, [r3, #0]
 800f12a:	697a      	ldr	r2, [r7, #20]
 800f12c:	615a      	str	r2, [r3, #20]
 800f12e:	6878      	ldr	r0, [r7, #4]
 800f130:	f000 fac4 	bl	800f6bc <DMA_CalcBaseAndBitshift>
 800f134:	4603      	mov	r3, r0
 800f136:	60fb      	str	r3, [r7, #12]
 800f138:	687b      	ldr	r3, [r7, #4]
 800f13a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f13c:	223f      	movs	r2, #63	@ 0x3f
 800f13e:	409a      	lsls	r2, r3
 800f140:	68fb      	ldr	r3, [r7, #12]
 800f142:	609a      	str	r2, [r3, #8]
 800f144:	687b      	ldr	r3, [r7, #4]
 800f146:	2200      	movs	r2, #0
 800f148:	655a      	str	r2, [r3, #84]	@ 0x54
 800f14a:	687b      	ldr	r3, [r7, #4]
 800f14c:	2201      	movs	r2, #1
 800f14e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f152:	2300      	movs	r3, #0
 800f154:	4618      	mov	r0, r3
 800f156:	3718      	adds	r7, #24
 800f158:	46bd      	mov	sp, r7
 800f15a:	bd80      	pop	{r7, pc}
 800f15c:	f010803f 	.word	0xf010803f

0800f160 <HAL_DMA_Start_IT>:
 800f160:	b580      	push	{r7, lr}
 800f162:	b086      	sub	sp, #24
 800f164:	af00      	add	r7, sp, #0
 800f166:	60f8      	str	r0, [r7, #12]
 800f168:	60b9      	str	r1, [r7, #8]
 800f16a:	607a      	str	r2, [r7, #4]
 800f16c:	603b      	str	r3, [r7, #0]
 800f16e:	2300      	movs	r3, #0
 800f170:	75fb      	strb	r3, [r7, #23]
 800f172:	68fb      	ldr	r3, [r7, #12]
 800f174:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800f176:	613b      	str	r3, [r7, #16]
 800f178:	68fb      	ldr	r3, [r7, #12]
 800f17a:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800f17e:	2b01      	cmp	r3, #1
 800f180:	d101      	bne.n	800f186 <HAL_DMA_Start_IT+0x26>
 800f182:	2302      	movs	r3, #2
 800f184:	e040      	b.n	800f208 <HAL_DMA_Start_IT+0xa8>
 800f186:	68fb      	ldr	r3, [r7, #12]
 800f188:	2201      	movs	r2, #1
 800f18a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f18e:	68fb      	ldr	r3, [r7, #12]
 800f190:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800f194:	b2db      	uxtb	r3, r3
 800f196:	2b01      	cmp	r3, #1
 800f198:	d12f      	bne.n	800f1fa <HAL_DMA_Start_IT+0x9a>
 800f19a:	68fb      	ldr	r3, [r7, #12]
 800f19c:	2202      	movs	r2, #2
 800f19e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f1a2:	68fb      	ldr	r3, [r7, #12]
 800f1a4:	2200      	movs	r2, #0
 800f1a6:	655a      	str	r2, [r3, #84]	@ 0x54
 800f1a8:	683b      	ldr	r3, [r7, #0]
 800f1aa:	687a      	ldr	r2, [r7, #4]
 800f1ac:	68b9      	ldr	r1, [r7, #8]
 800f1ae:	68f8      	ldr	r0, [r7, #12]
 800f1b0:	f000 fa56 	bl	800f660 <DMA_SetConfig>
 800f1b4:	68fb      	ldr	r3, [r7, #12]
 800f1b6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f1b8:	223f      	movs	r2, #63	@ 0x3f
 800f1ba:	409a      	lsls	r2, r3
 800f1bc:	693b      	ldr	r3, [r7, #16]
 800f1be:	609a      	str	r2, [r3, #8]
 800f1c0:	68fb      	ldr	r3, [r7, #12]
 800f1c2:	681b      	ldr	r3, [r3, #0]
 800f1c4:	681a      	ldr	r2, [r3, #0]
 800f1c6:	68fb      	ldr	r3, [r7, #12]
 800f1c8:	681b      	ldr	r3, [r3, #0]
 800f1ca:	f042 0216 	orr.w	r2, r2, #22
 800f1ce:	601a      	str	r2, [r3, #0]
 800f1d0:	68fb      	ldr	r3, [r7, #12]
 800f1d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f1d4:	2b00      	cmp	r3, #0
 800f1d6:	d007      	beq.n	800f1e8 <HAL_DMA_Start_IT+0x88>
 800f1d8:	68fb      	ldr	r3, [r7, #12]
 800f1da:	681b      	ldr	r3, [r3, #0]
 800f1dc:	681a      	ldr	r2, [r3, #0]
 800f1de:	68fb      	ldr	r3, [r7, #12]
 800f1e0:	681b      	ldr	r3, [r3, #0]
 800f1e2:	f042 0208 	orr.w	r2, r2, #8
 800f1e6:	601a      	str	r2, [r3, #0]
 800f1e8:	68fb      	ldr	r3, [r7, #12]
 800f1ea:	681b      	ldr	r3, [r3, #0]
 800f1ec:	681a      	ldr	r2, [r3, #0]
 800f1ee:	68fb      	ldr	r3, [r7, #12]
 800f1f0:	681b      	ldr	r3, [r3, #0]
 800f1f2:	f042 0201 	orr.w	r2, r2, #1
 800f1f6:	601a      	str	r2, [r3, #0]
 800f1f8:	e005      	b.n	800f206 <HAL_DMA_Start_IT+0xa6>
 800f1fa:	68fb      	ldr	r3, [r7, #12]
 800f1fc:	2200      	movs	r2, #0
 800f1fe:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f202:	2302      	movs	r3, #2
 800f204:	75fb      	strb	r3, [r7, #23]
 800f206:	7dfb      	ldrb	r3, [r7, #23]
 800f208:	4618      	mov	r0, r3
 800f20a:	3718      	adds	r7, #24
 800f20c:	46bd      	mov	sp, r7
 800f20e:	bd80      	pop	{r7, pc}

0800f210 <HAL_DMA_Abort>:
 800f210:	b580      	push	{r7, lr}
 800f212:	b084      	sub	sp, #16
 800f214:	af00      	add	r7, sp, #0
 800f216:	6078      	str	r0, [r7, #4]
 800f218:	687b      	ldr	r3, [r7, #4]
 800f21a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800f21c:	60fb      	str	r3, [r7, #12]
 800f21e:	f7fe fccb 	bl	800dbb8 <HAL_GetTick>
 800f222:	60b8      	str	r0, [r7, #8]
 800f224:	687b      	ldr	r3, [r7, #4]
 800f226:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800f22a:	b2db      	uxtb	r3, r3
 800f22c:	2b02      	cmp	r3, #2
 800f22e:	d008      	beq.n	800f242 <HAL_DMA_Abort+0x32>
 800f230:	687b      	ldr	r3, [r7, #4]
 800f232:	2280      	movs	r2, #128	@ 0x80
 800f234:	655a      	str	r2, [r3, #84]	@ 0x54
 800f236:	687b      	ldr	r3, [r7, #4]
 800f238:	2200      	movs	r2, #0
 800f23a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f23e:	2301      	movs	r3, #1
 800f240:	e052      	b.n	800f2e8 <HAL_DMA_Abort+0xd8>
 800f242:	687b      	ldr	r3, [r7, #4]
 800f244:	681b      	ldr	r3, [r3, #0]
 800f246:	681a      	ldr	r2, [r3, #0]
 800f248:	687b      	ldr	r3, [r7, #4]
 800f24a:	681b      	ldr	r3, [r3, #0]
 800f24c:	f022 0216 	bic.w	r2, r2, #22
 800f250:	601a      	str	r2, [r3, #0]
 800f252:	687b      	ldr	r3, [r7, #4]
 800f254:	681b      	ldr	r3, [r3, #0]
 800f256:	695a      	ldr	r2, [r3, #20]
 800f258:	687b      	ldr	r3, [r7, #4]
 800f25a:	681b      	ldr	r3, [r3, #0]
 800f25c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800f260:	615a      	str	r2, [r3, #20]
 800f262:	687b      	ldr	r3, [r7, #4]
 800f264:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f266:	2b00      	cmp	r3, #0
 800f268:	d103      	bne.n	800f272 <HAL_DMA_Abort+0x62>
 800f26a:	687b      	ldr	r3, [r7, #4]
 800f26c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f26e:	2b00      	cmp	r3, #0
 800f270:	d007      	beq.n	800f282 <HAL_DMA_Abort+0x72>
 800f272:	687b      	ldr	r3, [r7, #4]
 800f274:	681b      	ldr	r3, [r3, #0]
 800f276:	681a      	ldr	r2, [r3, #0]
 800f278:	687b      	ldr	r3, [r7, #4]
 800f27a:	681b      	ldr	r3, [r3, #0]
 800f27c:	f022 0208 	bic.w	r2, r2, #8
 800f280:	601a      	str	r2, [r3, #0]
 800f282:	687b      	ldr	r3, [r7, #4]
 800f284:	681b      	ldr	r3, [r3, #0]
 800f286:	681a      	ldr	r2, [r3, #0]
 800f288:	687b      	ldr	r3, [r7, #4]
 800f28a:	681b      	ldr	r3, [r3, #0]
 800f28c:	f022 0201 	bic.w	r2, r2, #1
 800f290:	601a      	str	r2, [r3, #0]
 800f292:	e013      	b.n	800f2bc <HAL_DMA_Abort+0xac>
 800f294:	f7fe fc90 	bl	800dbb8 <HAL_GetTick>
 800f298:	4602      	mov	r2, r0
 800f29a:	68bb      	ldr	r3, [r7, #8]
 800f29c:	1ad3      	subs	r3, r2, r3
 800f29e:	2b05      	cmp	r3, #5
 800f2a0:	d90c      	bls.n	800f2bc <HAL_DMA_Abort+0xac>
 800f2a2:	687b      	ldr	r3, [r7, #4]
 800f2a4:	2220      	movs	r2, #32
 800f2a6:	655a      	str	r2, [r3, #84]	@ 0x54
 800f2a8:	687b      	ldr	r3, [r7, #4]
 800f2aa:	2203      	movs	r2, #3
 800f2ac:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f2b0:	687b      	ldr	r3, [r7, #4]
 800f2b2:	2200      	movs	r2, #0
 800f2b4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f2b8:	2303      	movs	r3, #3
 800f2ba:	e015      	b.n	800f2e8 <HAL_DMA_Abort+0xd8>
 800f2bc:	687b      	ldr	r3, [r7, #4]
 800f2be:	681b      	ldr	r3, [r3, #0]
 800f2c0:	681b      	ldr	r3, [r3, #0]
 800f2c2:	f003 0301 	and.w	r3, r3, #1
 800f2c6:	2b00      	cmp	r3, #0
 800f2c8:	d1e4      	bne.n	800f294 <HAL_DMA_Abort+0x84>
 800f2ca:	687b      	ldr	r3, [r7, #4]
 800f2cc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f2ce:	223f      	movs	r2, #63	@ 0x3f
 800f2d0:	409a      	lsls	r2, r3
 800f2d2:	68fb      	ldr	r3, [r7, #12]
 800f2d4:	609a      	str	r2, [r3, #8]
 800f2d6:	687b      	ldr	r3, [r7, #4]
 800f2d8:	2201      	movs	r2, #1
 800f2da:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f2de:	687b      	ldr	r3, [r7, #4]
 800f2e0:	2200      	movs	r2, #0
 800f2e2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f2e6:	2300      	movs	r3, #0
 800f2e8:	4618      	mov	r0, r3
 800f2ea:	3710      	adds	r7, #16
 800f2ec:	46bd      	mov	sp, r7
 800f2ee:	bd80      	pop	{r7, pc}

0800f2f0 <HAL_DMA_Abort_IT>:
 800f2f0:	b480      	push	{r7}
 800f2f2:	b083      	sub	sp, #12
 800f2f4:	af00      	add	r7, sp, #0
 800f2f6:	6078      	str	r0, [r7, #4]
 800f2f8:	687b      	ldr	r3, [r7, #4]
 800f2fa:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800f2fe:	b2db      	uxtb	r3, r3
 800f300:	2b02      	cmp	r3, #2
 800f302:	d004      	beq.n	800f30e <HAL_DMA_Abort_IT+0x1e>
 800f304:	687b      	ldr	r3, [r7, #4]
 800f306:	2280      	movs	r2, #128	@ 0x80
 800f308:	655a      	str	r2, [r3, #84]	@ 0x54
 800f30a:	2301      	movs	r3, #1
 800f30c:	e00c      	b.n	800f328 <HAL_DMA_Abort_IT+0x38>
 800f30e:	687b      	ldr	r3, [r7, #4]
 800f310:	2205      	movs	r2, #5
 800f312:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f316:	687b      	ldr	r3, [r7, #4]
 800f318:	681b      	ldr	r3, [r3, #0]
 800f31a:	681a      	ldr	r2, [r3, #0]
 800f31c:	687b      	ldr	r3, [r7, #4]
 800f31e:	681b      	ldr	r3, [r3, #0]
 800f320:	f022 0201 	bic.w	r2, r2, #1
 800f324:	601a      	str	r2, [r3, #0]
 800f326:	2300      	movs	r3, #0
 800f328:	4618      	mov	r0, r3
 800f32a:	370c      	adds	r7, #12
 800f32c:	46bd      	mov	sp, r7
 800f32e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f332:	4770      	bx	lr

0800f334 <HAL_DMA_IRQHandler>:
 800f334:	b580      	push	{r7, lr}
 800f336:	b086      	sub	sp, #24
 800f338:	af00      	add	r7, sp, #0
 800f33a:	6078      	str	r0, [r7, #4]
 800f33c:	2300      	movs	r3, #0
 800f33e:	60bb      	str	r3, [r7, #8]
 800f340:	4b8e      	ldr	r3, [pc, #568]	@ (800f57c <HAL_DMA_IRQHandler+0x248>)
 800f342:	681b      	ldr	r3, [r3, #0]
 800f344:	4a8e      	ldr	r2, [pc, #568]	@ (800f580 <HAL_DMA_IRQHandler+0x24c>)
 800f346:	fba2 2303 	umull	r2, r3, r2, r3
 800f34a:	0a9b      	lsrs	r3, r3, #10
 800f34c:	617b      	str	r3, [r7, #20]
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800f352:	613b      	str	r3, [r7, #16]
 800f354:	693b      	ldr	r3, [r7, #16]
 800f356:	681b      	ldr	r3, [r3, #0]
 800f358:	60fb      	str	r3, [r7, #12]
 800f35a:	687b      	ldr	r3, [r7, #4]
 800f35c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f35e:	2208      	movs	r2, #8
 800f360:	409a      	lsls	r2, r3
 800f362:	68fb      	ldr	r3, [r7, #12]
 800f364:	4013      	ands	r3, r2
 800f366:	2b00      	cmp	r3, #0
 800f368:	d01a      	beq.n	800f3a0 <HAL_DMA_IRQHandler+0x6c>
 800f36a:	687b      	ldr	r3, [r7, #4]
 800f36c:	681b      	ldr	r3, [r3, #0]
 800f36e:	681b      	ldr	r3, [r3, #0]
 800f370:	f003 0304 	and.w	r3, r3, #4
 800f374:	2b00      	cmp	r3, #0
 800f376:	d013      	beq.n	800f3a0 <HAL_DMA_IRQHandler+0x6c>
 800f378:	687b      	ldr	r3, [r7, #4]
 800f37a:	681b      	ldr	r3, [r3, #0]
 800f37c:	681a      	ldr	r2, [r3, #0]
 800f37e:	687b      	ldr	r3, [r7, #4]
 800f380:	681b      	ldr	r3, [r3, #0]
 800f382:	f022 0204 	bic.w	r2, r2, #4
 800f386:	601a      	str	r2, [r3, #0]
 800f388:	687b      	ldr	r3, [r7, #4]
 800f38a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f38c:	2208      	movs	r2, #8
 800f38e:	409a      	lsls	r2, r3
 800f390:	693b      	ldr	r3, [r7, #16]
 800f392:	609a      	str	r2, [r3, #8]
 800f394:	687b      	ldr	r3, [r7, #4]
 800f396:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f398:	f043 0201 	orr.w	r2, r3, #1
 800f39c:	687b      	ldr	r3, [r7, #4]
 800f39e:	655a      	str	r2, [r3, #84]	@ 0x54
 800f3a0:	687b      	ldr	r3, [r7, #4]
 800f3a2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f3a4:	2201      	movs	r2, #1
 800f3a6:	409a      	lsls	r2, r3
 800f3a8:	68fb      	ldr	r3, [r7, #12]
 800f3aa:	4013      	ands	r3, r2
 800f3ac:	2b00      	cmp	r3, #0
 800f3ae:	d012      	beq.n	800f3d6 <HAL_DMA_IRQHandler+0xa2>
 800f3b0:	687b      	ldr	r3, [r7, #4]
 800f3b2:	681b      	ldr	r3, [r3, #0]
 800f3b4:	695b      	ldr	r3, [r3, #20]
 800f3b6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800f3ba:	2b00      	cmp	r3, #0
 800f3bc:	d00b      	beq.n	800f3d6 <HAL_DMA_IRQHandler+0xa2>
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f3c2:	2201      	movs	r2, #1
 800f3c4:	409a      	lsls	r2, r3
 800f3c6:	693b      	ldr	r3, [r7, #16]
 800f3c8:	609a      	str	r2, [r3, #8]
 800f3ca:	687b      	ldr	r3, [r7, #4]
 800f3cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f3ce:	f043 0202 	orr.w	r2, r3, #2
 800f3d2:	687b      	ldr	r3, [r7, #4]
 800f3d4:	655a      	str	r2, [r3, #84]	@ 0x54
 800f3d6:	687b      	ldr	r3, [r7, #4]
 800f3d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f3da:	2204      	movs	r2, #4
 800f3dc:	409a      	lsls	r2, r3
 800f3de:	68fb      	ldr	r3, [r7, #12]
 800f3e0:	4013      	ands	r3, r2
 800f3e2:	2b00      	cmp	r3, #0
 800f3e4:	d012      	beq.n	800f40c <HAL_DMA_IRQHandler+0xd8>
 800f3e6:	687b      	ldr	r3, [r7, #4]
 800f3e8:	681b      	ldr	r3, [r3, #0]
 800f3ea:	681b      	ldr	r3, [r3, #0]
 800f3ec:	f003 0302 	and.w	r3, r3, #2
 800f3f0:	2b00      	cmp	r3, #0
 800f3f2:	d00b      	beq.n	800f40c <HAL_DMA_IRQHandler+0xd8>
 800f3f4:	687b      	ldr	r3, [r7, #4]
 800f3f6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f3f8:	2204      	movs	r2, #4
 800f3fa:	409a      	lsls	r2, r3
 800f3fc:	693b      	ldr	r3, [r7, #16]
 800f3fe:	609a      	str	r2, [r3, #8]
 800f400:	687b      	ldr	r3, [r7, #4]
 800f402:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f404:	f043 0204 	orr.w	r2, r3, #4
 800f408:	687b      	ldr	r3, [r7, #4]
 800f40a:	655a      	str	r2, [r3, #84]	@ 0x54
 800f40c:	687b      	ldr	r3, [r7, #4]
 800f40e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f410:	2210      	movs	r2, #16
 800f412:	409a      	lsls	r2, r3
 800f414:	68fb      	ldr	r3, [r7, #12]
 800f416:	4013      	ands	r3, r2
 800f418:	2b00      	cmp	r3, #0
 800f41a:	d043      	beq.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f41c:	687b      	ldr	r3, [r7, #4]
 800f41e:	681b      	ldr	r3, [r3, #0]
 800f420:	681b      	ldr	r3, [r3, #0]
 800f422:	f003 0308 	and.w	r3, r3, #8
 800f426:	2b00      	cmp	r3, #0
 800f428:	d03c      	beq.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f42a:	687b      	ldr	r3, [r7, #4]
 800f42c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f42e:	2210      	movs	r2, #16
 800f430:	409a      	lsls	r2, r3
 800f432:	693b      	ldr	r3, [r7, #16]
 800f434:	609a      	str	r2, [r3, #8]
 800f436:	687b      	ldr	r3, [r7, #4]
 800f438:	681b      	ldr	r3, [r3, #0]
 800f43a:	681b      	ldr	r3, [r3, #0]
 800f43c:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800f440:	2b00      	cmp	r3, #0
 800f442:	d018      	beq.n	800f476 <HAL_DMA_IRQHandler+0x142>
 800f444:	687b      	ldr	r3, [r7, #4]
 800f446:	681b      	ldr	r3, [r3, #0]
 800f448:	681b      	ldr	r3, [r3, #0]
 800f44a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800f44e:	2b00      	cmp	r3, #0
 800f450:	d108      	bne.n	800f464 <HAL_DMA_IRQHandler+0x130>
 800f452:	687b      	ldr	r3, [r7, #4]
 800f454:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f456:	2b00      	cmp	r3, #0
 800f458:	d024      	beq.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f45a:	687b      	ldr	r3, [r7, #4]
 800f45c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f45e:	6878      	ldr	r0, [r7, #4]
 800f460:	4798      	blx	r3
 800f462:	e01f      	b.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f464:	687b      	ldr	r3, [r7, #4]
 800f466:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f468:	2b00      	cmp	r3, #0
 800f46a:	d01b      	beq.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f46c:	687b      	ldr	r3, [r7, #4]
 800f46e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f470:	6878      	ldr	r0, [r7, #4]
 800f472:	4798      	blx	r3
 800f474:	e016      	b.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f476:	687b      	ldr	r3, [r7, #4]
 800f478:	681b      	ldr	r3, [r3, #0]
 800f47a:	681b      	ldr	r3, [r3, #0]
 800f47c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f480:	2b00      	cmp	r3, #0
 800f482:	d107      	bne.n	800f494 <HAL_DMA_IRQHandler+0x160>
 800f484:	687b      	ldr	r3, [r7, #4]
 800f486:	681b      	ldr	r3, [r3, #0]
 800f488:	681a      	ldr	r2, [r3, #0]
 800f48a:	687b      	ldr	r3, [r7, #4]
 800f48c:	681b      	ldr	r3, [r3, #0]
 800f48e:	f022 0208 	bic.w	r2, r2, #8
 800f492:	601a      	str	r2, [r3, #0]
 800f494:	687b      	ldr	r3, [r7, #4]
 800f496:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f498:	2b00      	cmp	r3, #0
 800f49a:	d003      	beq.n	800f4a4 <HAL_DMA_IRQHandler+0x170>
 800f49c:	687b      	ldr	r3, [r7, #4]
 800f49e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f4a0:	6878      	ldr	r0, [r7, #4]
 800f4a2:	4798      	blx	r3
 800f4a4:	687b      	ldr	r3, [r7, #4]
 800f4a6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f4a8:	2220      	movs	r2, #32
 800f4aa:	409a      	lsls	r2, r3
 800f4ac:	68fb      	ldr	r3, [r7, #12]
 800f4ae:	4013      	ands	r3, r2
 800f4b0:	2b00      	cmp	r3, #0
 800f4b2:	f000 808f 	beq.w	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f4b6:	687b      	ldr	r3, [r7, #4]
 800f4b8:	681b      	ldr	r3, [r3, #0]
 800f4ba:	681b      	ldr	r3, [r3, #0]
 800f4bc:	f003 0310 	and.w	r3, r3, #16
 800f4c0:	2b00      	cmp	r3, #0
 800f4c2:	f000 8087 	beq.w	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f4c6:	687b      	ldr	r3, [r7, #4]
 800f4c8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f4ca:	2220      	movs	r2, #32
 800f4cc:	409a      	lsls	r2, r3
 800f4ce:	693b      	ldr	r3, [r7, #16]
 800f4d0:	609a      	str	r2, [r3, #8]
 800f4d2:	687b      	ldr	r3, [r7, #4]
 800f4d4:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800f4d8:	b2db      	uxtb	r3, r3
 800f4da:	2b05      	cmp	r3, #5
 800f4dc:	d136      	bne.n	800f54c <HAL_DMA_IRQHandler+0x218>
 800f4de:	687b      	ldr	r3, [r7, #4]
 800f4e0:	681b      	ldr	r3, [r3, #0]
 800f4e2:	681a      	ldr	r2, [r3, #0]
 800f4e4:	687b      	ldr	r3, [r7, #4]
 800f4e6:	681b      	ldr	r3, [r3, #0]
 800f4e8:	f022 0216 	bic.w	r2, r2, #22
 800f4ec:	601a      	str	r2, [r3, #0]
 800f4ee:	687b      	ldr	r3, [r7, #4]
 800f4f0:	681b      	ldr	r3, [r3, #0]
 800f4f2:	695a      	ldr	r2, [r3, #20]
 800f4f4:	687b      	ldr	r3, [r7, #4]
 800f4f6:	681b      	ldr	r3, [r3, #0]
 800f4f8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800f4fc:	615a      	str	r2, [r3, #20]
 800f4fe:	687b      	ldr	r3, [r7, #4]
 800f500:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f502:	2b00      	cmp	r3, #0
 800f504:	d103      	bne.n	800f50e <HAL_DMA_IRQHandler+0x1da>
 800f506:	687b      	ldr	r3, [r7, #4]
 800f508:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f50a:	2b00      	cmp	r3, #0
 800f50c:	d007      	beq.n	800f51e <HAL_DMA_IRQHandler+0x1ea>
 800f50e:	687b      	ldr	r3, [r7, #4]
 800f510:	681b      	ldr	r3, [r3, #0]
 800f512:	681a      	ldr	r2, [r3, #0]
 800f514:	687b      	ldr	r3, [r7, #4]
 800f516:	681b      	ldr	r3, [r3, #0]
 800f518:	f022 0208 	bic.w	r2, r2, #8
 800f51c:	601a      	str	r2, [r3, #0]
 800f51e:	687b      	ldr	r3, [r7, #4]
 800f520:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800f522:	223f      	movs	r2, #63	@ 0x3f
 800f524:	409a      	lsls	r2, r3
 800f526:	693b      	ldr	r3, [r7, #16]
 800f528:	609a      	str	r2, [r3, #8]
 800f52a:	687b      	ldr	r3, [r7, #4]
 800f52c:	2201      	movs	r2, #1
 800f52e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f532:	687b      	ldr	r3, [r7, #4]
 800f534:	2200      	movs	r2, #0
 800f536:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f53a:	687b      	ldr	r3, [r7, #4]
 800f53c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f53e:	2b00      	cmp	r3, #0
 800f540:	d07e      	beq.n	800f640 <HAL_DMA_IRQHandler+0x30c>
 800f542:	687b      	ldr	r3, [r7, #4]
 800f544:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f546:	6878      	ldr	r0, [r7, #4]
 800f548:	4798      	blx	r3
 800f54a:	e079      	b.n	800f640 <HAL_DMA_IRQHandler+0x30c>
 800f54c:	687b      	ldr	r3, [r7, #4]
 800f54e:	681b      	ldr	r3, [r3, #0]
 800f550:	681b      	ldr	r3, [r3, #0]
 800f552:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800f556:	2b00      	cmp	r3, #0
 800f558:	d01d      	beq.n	800f596 <HAL_DMA_IRQHandler+0x262>
 800f55a:	687b      	ldr	r3, [r7, #4]
 800f55c:	681b      	ldr	r3, [r3, #0]
 800f55e:	681b      	ldr	r3, [r3, #0]
 800f560:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800f564:	2b00      	cmp	r3, #0
 800f566:	d10d      	bne.n	800f584 <HAL_DMA_IRQHandler+0x250>
 800f568:	687b      	ldr	r3, [r7, #4]
 800f56a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f56c:	2b00      	cmp	r3, #0
 800f56e:	d031      	beq.n	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f570:	687b      	ldr	r3, [r7, #4]
 800f572:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f574:	6878      	ldr	r0, [r7, #4]
 800f576:	4798      	blx	r3
 800f578:	e02c      	b.n	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f57a:	bf00      	nop
 800f57c:	20000004 	.word	0x20000004
 800f580:	1b4e81b5 	.word	0x1b4e81b5
 800f584:	687b      	ldr	r3, [r7, #4]
 800f586:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f588:	2b00      	cmp	r3, #0
 800f58a:	d023      	beq.n	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f58c:	687b      	ldr	r3, [r7, #4]
 800f58e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f590:	6878      	ldr	r0, [r7, #4]
 800f592:	4798      	blx	r3
 800f594:	e01e      	b.n	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f596:	687b      	ldr	r3, [r7, #4]
 800f598:	681b      	ldr	r3, [r3, #0]
 800f59a:	681b      	ldr	r3, [r3, #0]
 800f59c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f5a0:	2b00      	cmp	r3, #0
 800f5a2:	d10f      	bne.n	800f5c4 <HAL_DMA_IRQHandler+0x290>
 800f5a4:	687b      	ldr	r3, [r7, #4]
 800f5a6:	681b      	ldr	r3, [r3, #0]
 800f5a8:	681a      	ldr	r2, [r3, #0]
 800f5aa:	687b      	ldr	r3, [r7, #4]
 800f5ac:	681b      	ldr	r3, [r3, #0]
 800f5ae:	f022 0210 	bic.w	r2, r2, #16
 800f5b2:	601a      	str	r2, [r3, #0]
 800f5b4:	687b      	ldr	r3, [r7, #4]
 800f5b6:	2201      	movs	r2, #1
 800f5b8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f5bc:	687b      	ldr	r3, [r7, #4]
 800f5be:	2200      	movs	r2, #0
 800f5c0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f5c4:	687b      	ldr	r3, [r7, #4]
 800f5c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f5c8:	2b00      	cmp	r3, #0
 800f5ca:	d003      	beq.n	800f5d4 <HAL_DMA_IRQHandler+0x2a0>
 800f5cc:	687b      	ldr	r3, [r7, #4]
 800f5ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f5d0:	6878      	ldr	r0, [r7, #4]
 800f5d2:	4798      	blx	r3
 800f5d4:	687b      	ldr	r3, [r7, #4]
 800f5d6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f5d8:	2b00      	cmp	r3, #0
 800f5da:	d032      	beq.n	800f642 <HAL_DMA_IRQHandler+0x30e>
 800f5dc:	687b      	ldr	r3, [r7, #4]
 800f5de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f5e0:	f003 0301 	and.w	r3, r3, #1
 800f5e4:	2b00      	cmp	r3, #0
 800f5e6:	d022      	beq.n	800f62e <HAL_DMA_IRQHandler+0x2fa>
 800f5e8:	687b      	ldr	r3, [r7, #4]
 800f5ea:	2205      	movs	r2, #5
 800f5ec:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f5f0:	687b      	ldr	r3, [r7, #4]
 800f5f2:	681b      	ldr	r3, [r3, #0]
 800f5f4:	681a      	ldr	r2, [r3, #0]
 800f5f6:	687b      	ldr	r3, [r7, #4]
 800f5f8:	681b      	ldr	r3, [r3, #0]
 800f5fa:	f022 0201 	bic.w	r2, r2, #1
 800f5fe:	601a      	str	r2, [r3, #0]
 800f600:	68bb      	ldr	r3, [r7, #8]
 800f602:	3301      	adds	r3, #1
 800f604:	60bb      	str	r3, [r7, #8]
 800f606:	697a      	ldr	r2, [r7, #20]
 800f608:	429a      	cmp	r2, r3
 800f60a:	d307      	bcc.n	800f61c <HAL_DMA_IRQHandler+0x2e8>
 800f60c:	687b      	ldr	r3, [r7, #4]
 800f60e:	681b      	ldr	r3, [r3, #0]
 800f610:	681b      	ldr	r3, [r3, #0]
 800f612:	f003 0301 	and.w	r3, r3, #1
 800f616:	2b00      	cmp	r3, #0
 800f618:	d1f2      	bne.n	800f600 <HAL_DMA_IRQHandler+0x2cc>
 800f61a:	e000      	b.n	800f61e <HAL_DMA_IRQHandler+0x2ea>
 800f61c:	bf00      	nop
 800f61e:	687b      	ldr	r3, [r7, #4]
 800f620:	2201      	movs	r2, #1
 800f622:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 800f626:	687b      	ldr	r3, [r7, #4]
 800f628:	2200      	movs	r2, #0
 800f62a:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800f62e:	687b      	ldr	r3, [r7, #4]
 800f630:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f632:	2b00      	cmp	r3, #0
 800f634:	d005      	beq.n	800f642 <HAL_DMA_IRQHandler+0x30e>
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f63a:	6878      	ldr	r0, [r7, #4]
 800f63c:	4798      	blx	r3
 800f63e:	e000      	b.n	800f642 <HAL_DMA_IRQHandler+0x30e>
 800f640:	bf00      	nop
 800f642:	3718      	adds	r7, #24
 800f644:	46bd      	mov	sp, r7
 800f646:	bd80      	pop	{r7, pc}

0800f648 <HAL_DMA_GetError>:
 800f648:	b480      	push	{r7}
 800f64a:	b083      	sub	sp, #12
 800f64c:	af00      	add	r7, sp, #0
 800f64e:	6078      	str	r0, [r7, #4]
 800f650:	687b      	ldr	r3, [r7, #4]
 800f652:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f654:	4618      	mov	r0, r3
 800f656:	370c      	adds	r7, #12
 800f658:	46bd      	mov	sp, r7
 800f65a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f65e:	4770      	bx	lr

0800f660 <DMA_SetConfig>:
 800f660:	b480      	push	{r7}
 800f662:	b085      	sub	sp, #20
 800f664:	af00      	add	r7, sp, #0
 800f666:	60f8      	str	r0, [r7, #12]
 800f668:	60b9      	str	r1, [r7, #8]
 800f66a:	607a      	str	r2, [r7, #4]
 800f66c:	603b      	str	r3, [r7, #0]
 800f66e:	68fb      	ldr	r3, [r7, #12]
 800f670:	681b      	ldr	r3, [r3, #0]
 800f672:	681a      	ldr	r2, [r3, #0]
 800f674:	68fb      	ldr	r3, [r7, #12]
 800f676:	681b      	ldr	r3, [r3, #0]
 800f678:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 800f67c:	601a      	str	r2, [r3, #0]
 800f67e:	68fb      	ldr	r3, [r7, #12]
 800f680:	681b      	ldr	r3, [r3, #0]
 800f682:	683a      	ldr	r2, [r7, #0]
 800f684:	605a      	str	r2, [r3, #4]
 800f686:	68fb      	ldr	r3, [r7, #12]
 800f688:	689b      	ldr	r3, [r3, #8]
 800f68a:	2b40      	cmp	r3, #64	@ 0x40
 800f68c:	d108      	bne.n	800f6a0 <DMA_SetConfig+0x40>
 800f68e:	68fb      	ldr	r3, [r7, #12]
 800f690:	681b      	ldr	r3, [r3, #0]
 800f692:	687a      	ldr	r2, [r7, #4]
 800f694:	609a      	str	r2, [r3, #8]
 800f696:	68fb      	ldr	r3, [r7, #12]
 800f698:	681b      	ldr	r3, [r3, #0]
 800f69a:	68ba      	ldr	r2, [r7, #8]
 800f69c:	60da      	str	r2, [r3, #12]
 800f69e:	e007      	b.n	800f6b0 <DMA_SetConfig+0x50>
 800f6a0:	68fb      	ldr	r3, [r7, #12]
 800f6a2:	681b      	ldr	r3, [r3, #0]
 800f6a4:	68ba      	ldr	r2, [r7, #8]
 800f6a6:	609a      	str	r2, [r3, #8]
 800f6a8:	68fb      	ldr	r3, [r7, #12]
 800f6aa:	681b      	ldr	r3, [r3, #0]
 800f6ac:	687a      	ldr	r2, [r7, #4]
 800f6ae:	60da      	str	r2, [r3, #12]
 800f6b0:	bf00      	nop
 800f6b2:	3714      	adds	r7, #20
 800f6b4:	46bd      	mov	sp, r7
 800f6b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6ba:	4770      	bx	lr

0800f6bc <DMA_CalcBaseAndBitshift>:
 800f6bc:	b480      	push	{r7}
 800f6be:	b085      	sub	sp, #20
 800f6c0:	af00      	add	r7, sp, #0
 800f6c2:	6078      	str	r0, [r7, #4]
 800f6c4:	687b      	ldr	r3, [r7, #4]
 800f6c6:	681b      	ldr	r3, [r3, #0]
 800f6c8:	b2db      	uxtb	r3, r3
 800f6ca:	3b10      	subs	r3, #16
 800f6cc:	4a14      	ldr	r2, [pc, #80]	@ (800f720 <DMA_CalcBaseAndBitshift+0x64>)
 800f6ce:	fba2 2303 	umull	r2, r3, r2, r3
 800f6d2:	091b      	lsrs	r3, r3, #4
 800f6d4:	60fb      	str	r3, [r7, #12]
 800f6d6:	4a13      	ldr	r2, [pc, #76]	@ (800f724 <DMA_CalcBaseAndBitshift+0x68>)
 800f6d8:	68fb      	ldr	r3, [r7, #12]
 800f6da:	4413      	add	r3, r2
 800f6dc:	781b      	ldrb	r3, [r3, #0]
 800f6de:	461a      	mov	r2, r3
 800f6e0:	687b      	ldr	r3, [r7, #4]
 800f6e2:	65da      	str	r2, [r3, #92]	@ 0x5c
 800f6e4:	68fb      	ldr	r3, [r7, #12]
 800f6e6:	2b03      	cmp	r3, #3
 800f6e8:	d909      	bls.n	800f6fe <DMA_CalcBaseAndBitshift+0x42>
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	681b      	ldr	r3, [r3, #0]
 800f6ee:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800f6f2:	f023 0303 	bic.w	r3, r3, #3
 800f6f6:	1d1a      	adds	r2, r3, #4
 800f6f8:	687b      	ldr	r3, [r7, #4]
 800f6fa:	659a      	str	r2, [r3, #88]	@ 0x58
 800f6fc:	e007      	b.n	800f70e <DMA_CalcBaseAndBitshift+0x52>
 800f6fe:	687b      	ldr	r3, [r7, #4]
 800f700:	681b      	ldr	r3, [r3, #0]
 800f702:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 800f706:	f023 0303 	bic.w	r3, r3, #3
 800f70a:	687a      	ldr	r2, [r7, #4]
 800f70c:	6593      	str	r3, [r2, #88]	@ 0x58
 800f70e:	687b      	ldr	r3, [r7, #4]
 800f710:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800f712:	4618      	mov	r0, r3
 800f714:	3714      	adds	r7, #20
 800f716:	46bd      	mov	sp, r7
 800f718:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f71c:	4770      	bx	lr
 800f71e:	bf00      	nop
 800f720:	aaaaaaab 	.word	0xaaaaaaab
 800f724:	08024df0 	.word	0x08024df0

0800f728 <DMA_CheckFifoParam>:
 800f728:	b480      	push	{r7}
 800f72a:	b085      	sub	sp, #20
 800f72c:	af00      	add	r7, sp, #0
 800f72e:	6078      	str	r0, [r7, #4]
 800f730:	2300      	movs	r3, #0
 800f732:	73fb      	strb	r3, [r7, #15]
 800f734:	687b      	ldr	r3, [r7, #4]
 800f736:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f738:	60bb      	str	r3, [r7, #8]
 800f73a:	687b      	ldr	r3, [r7, #4]
 800f73c:	699b      	ldr	r3, [r3, #24]
 800f73e:	2b00      	cmp	r3, #0
 800f740:	d11f      	bne.n	800f782 <DMA_CheckFifoParam+0x5a>
 800f742:	68bb      	ldr	r3, [r7, #8]
 800f744:	2b03      	cmp	r3, #3
 800f746:	d856      	bhi.n	800f7f6 <DMA_CheckFifoParam+0xce>
 800f748:	a201      	add	r2, pc, #4	@ (adr r2, 800f750 <DMA_CheckFifoParam+0x28>)
 800f74a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f74e:	bf00      	nop
 800f750:	0800f761 	.word	0x0800f761
 800f754:	0800f773 	.word	0x0800f773
 800f758:	0800f761 	.word	0x0800f761
 800f75c:	0800f7f7 	.word	0x0800f7f7
 800f760:	687b      	ldr	r3, [r7, #4]
 800f762:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f764:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800f768:	2b00      	cmp	r3, #0
 800f76a:	d046      	beq.n	800f7fa <DMA_CheckFifoParam+0xd2>
 800f76c:	2301      	movs	r3, #1
 800f76e:	73fb      	strb	r3, [r7, #15]
 800f770:	e043      	b.n	800f7fa <DMA_CheckFifoParam+0xd2>
 800f772:	687b      	ldr	r3, [r7, #4]
 800f774:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f776:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800f77a:	d140      	bne.n	800f7fe <DMA_CheckFifoParam+0xd6>
 800f77c:	2301      	movs	r3, #1
 800f77e:	73fb      	strb	r3, [r7, #15]
 800f780:	e03d      	b.n	800f7fe <DMA_CheckFifoParam+0xd6>
 800f782:	687b      	ldr	r3, [r7, #4]
 800f784:	699b      	ldr	r3, [r3, #24]
 800f786:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800f78a:	d121      	bne.n	800f7d0 <DMA_CheckFifoParam+0xa8>
 800f78c:	68bb      	ldr	r3, [r7, #8]
 800f78e:	2b03      	cmp	r3, #3
 800f790:	d837      	bhi.n	800f802 <DMA_CheckFifoParam+0xda>
 800f792:	a201      	add	r2, pc, #4	@ (adr r2, 800f798 <DMA_CheckFifoParam+0x70>)
 800f794:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f798:	0800f7a9 	.word	0x0800f7a9
 800f79c:	0800f7af 	.word	0x0800f7af
 800f7a0:	0800f7a9 	.word	0x0800f7a9
 800f7a4:	0800f7c1 	.word	0x0800f7c1
 800f7a8:	2301      	movs	r3, #1
 800f7aa:	73fb      	strb	r3, [r7, #15]
 800f7ac:	e030      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f7ae:	687b      	ldr	r3, [r7, #4]
 800f7b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f7b2:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800f7b6:	2b00      	cmp	r3, #0
 800f7b8:	d025      	beq.n	800f806 <DMA_CheckFifoParam+0xde>
 800f7ba:	2301      	movs	r3, #1
 800f7bc:	73fb      	strb	r3, [r7, #15]
 800f7be:	e022      	b.n	800f806 <DMA_CheckFifoParam+0xde>
 800f7c0:	687b      	ldr	r3, [r7, #4]
 800f7c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f7c4:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 800f7c8:	d11f      	bne.n	800f80a <DMA_CheckFifoParam+0xe2>
 800f7ca:	2301      	movs	r3, #1
 800f7cc:	73fb      	strb	r3, [r7, #15]
 800f7ce:	e01c      	b.n	800f80a <DMA_CheckFifoParam+0xe2>
 800f7d0:	68bb      	ldr	r3, [r7, #8]
 800f7d2:	2b02      	cmp	r3, #2
 800f7d4:	d903      	bls.n	800f7de <DMA_CheckFifoParam+0xb6>
 800f7d6:	68bb      	ldr	r3, [r7, #8]
 800f7d8:	2b03      	cmp	r3, #3
 800f7da:	d003      	beq.n	800f7e4 <DMA_CheckFifoParam+0xbc>
 800f7dc:	e018      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f7de:	2301      	movs	r3, #1
 800f7e0:	73fb      	strb	r3, [r7, #15]
 800f7e2:	e015      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f7e4:	687b      	ldr	r3, [r7, #4]
 800f7e6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f7e8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800f7ec:	2b00      	cmp	r3, #0
 800f7ee:	d00e      	beq.n	800f80e <DMA_CheckFifoParam+0xe6>
 800f7f0:	2301      	movs	r3, #1
 800f7f2:	73fb      	strb	r3, [r7, #15]
 800f7f4:	e00b      	b.n	800f80e <DMA_CheckFifoParam+0xe6>
 800f7f6:	bf00      	nop
 800f7f8:	e00a      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f7fa:	bf00      	nop
 800f7fc:	e008      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f7fe:	bf00      	nop
 800f800:	e006      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f802:	bf00      	nop
 800f804:	e004      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f806:	bf00      	nop
 800f808:	e002      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f80a:	bf00      	nop
 800f80c:	e000      	b.n	800f810 <DMA_CheckFifoParam+0xe8>
 800f80e:	bf00      	nop
 800f810:	7bfb      	ldrb	r3, [r7, #15]
 800f812:	4618      	mov	r0, r3
 800f814:	3714      	adds	r7, #20
 800f816:	46bd      	mov	sp, r7
 800f818:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f81c:	4770      	bx	lr
 800f81e:	bf00      	nop

0800f820 <HAL_GPIO_Init>:
 800f820:	b480      	push	{r7}
 800f822:	b089      	sub	sp, #36	@ 0x24
 800f824:	af00      	add	r7, sp, #0
 800f826:	6078      	str	r0, [r7, #4]
 800f828:	6039      	str	r1, [r7, #0]
 800f82a:	2300      	movs	r3, #0
 800f82c:	617b      	str	r3, [r7, #20]
 800f82e:	2300      	movs	r3, #0
 800f830:	613b      	str	r3, [r7, #16]
 800f832:	2300      	movs	r3, #0
 800f834:	61bb      	str	r3, [r7, #24]
 800f836:	2300      	movs	r3, #0
 800f838:	61fb      	str	r3, [r7, #28]
 800f83a:	e16b      	b.n	800fb14 <HAL_GPIO_Init+0x2f4>
 800f83c:	2201      	movs	r2, #1
 800f83e:	69fb      	ldr	r3, [r7, #28]
 800f840:	fa02 f303 	lsl.w	r3, r2, r3
 800f844:	617b      	str	r3, [r7, #20]
 800f846:	683b      	ldr	r3, [r7, #0]
 800f848:	681b      	ldr	r3, [r3, #0]
 800f84a:	697a      	ldr	r2, [r7, #20]
 800f84c:	4013      	ands	r3, r2
 800f84e:	613b      	str	r3, [r7, #16]
 800f850:	693a      	ldr	r2, [r7, #16]
 800f852:	697b      	ldr	r3, [r7, #20]
 800f854:	429a      	cmp	r2, r3
 800f856:	f040 815a 	bne.w	800fb0e <HAL_GPIO_Init+0x2ee>
 800f85a:	683b      	ldr	r3, [r7, #0]
 800f85c:	685b      	ldr	r3, [r3, #4]
 800f85e:	f003 0303 	and.w	r3, r3, #3
 800f862:	2b01      	cmp	r3, #1
 800f864:	d005      	beq.n	800f872 <HAL_GPIO_Init+0x52>
 800f866:	683b      	ldr	r3, [r7, #0]
 800f868:	685b      	ldr	r3, [r3, #4]
 800f86a:	f003 0303 	and.w	r3, r3, #3
 800f86e:	2b02      	cmp	r3, #2
 800f870:	d130      	bne.n	800f8d4 <HAL_GPIO_Init+0xb4>
 800f872:	687b      	ldr	r3, [r7, #4]
 800f874:	689b      	ldr	r3, [r3, #8]
 800f876:	61bb      	str	r3, [r7, #24]
 800f878:	69fb      	ldr	r3, [r7, #28]
 800f87a:	005b      	lsls	r3, r3, #1
 800f87c:	2203      	movs	r2, #3
 800f87e:	fa02 f303 	lsl.w	r3, r2, r3
 800f882:	43db      	mvns	r3, r3
 800f884:	69ba      	ldr	r2, [r7, #24]
 800f886:	4013      	ands	r3, r2
 800f888:	61bb      	str	r3, [r7, #24]
 800f88a:	683b      	ldr	r3, [r7, #0]
 800f88c:	68da      	ldr	r2, [r3, #12]
 800f88e:	69fb      	ldr	r3, [r7, #28]
 800f890:	005b      	lsls	r3, r3, #1
 800f892:	fa02 f303 	lsl.w	r3, r2, r3
 800f896:	69ba      	ldr	r2, [r7, #24]
 800f898:	4313      	orrs	r3, r2
 800f89a:	61bb      	str	r3, [r7, #24]
 800f89c:	687b      	ldr	r3, [r7, #4]
 800f89e:	69ba      	ldr	r2, [r7, #24]
 800f8a0:	609a      	str	r2, [r3, #8]
 800f8a2:	687b      	ldr	r3, [r7, #4]
 800f8a4:	685b      	ldr	r3, [r3, #4]
 800f8a6:	61bb      	str	r3, [r7, #24]
 800f8a8:	2201      	movs	r2, #1
 800f8aa:	69fb      	ldr	r3, [r7, #28]
 800f8ac:	fa02 f303 	lsl.w	r3, r2, r3
 800f8b0:	43db      	mvns	r3, r3
 800f8b2:	69ba      	ldr	r2, [r7, #24]
 800f8b4:	4013      	ands	r3, r2
 800f8b6:	61bb      	str	r3, [r7, #24]
 800f8b8:	683b      	ldr	r3, [r7, #0]
 800f8ba:	685b      	ldr	r3, [r3, #4]
 800f8bc:	091b      	lsrs	r3, r3, #4
 800f8be:	f003 0201 	and.w	r2, r3, #1
 800f8c2:	69fb      	ldr	r3, [r7, #28]
 800f8c4:	fa02 f303 	lsl.w	r3, r2, r3
 800f8c8:	69ba      	ldr	r2, [r7, #24]
 800f8ca:	4313      	orrs	r3, r2
 800f8cc:	61bb      	str	r3, [r7, #24]
 800f8ce:	687b      	ldr	r3, [r7, #4]
 800f8d0:	69ba      	ldr	r2, [r7, #24]
 800f8d2:	605a      	str	r2, [r3, #4]
 800f8d4:	683b      	ldr	r3, [r7, #0]
 800f8d6:	685b      	ldr	r3, [r3, #4]
 800f8d8:	f003 0303 	and.w	r3, r3, #3
 800f8dc:	2b03      	cmp	r3, #3
 800f8de:	d017      	beq.n	800f910 <HAL_GPIO_Init+0xf0>
 800f8e0:	687b      	ldr	r3, [r7, #4]
 800f8e2:	68db      	ldr	r3, [r3, #12]
 800f8e4:	61bb      	str	r3, [r7, #24]
 800f8e6:	69fb      	ldr	r3, [r7, #28]
 800f8e8:	005b      	lsls	r3, r3, #1
 800f8ea:	2203      	movs	r2, #3
 800f8ec:	fa02 f303 	lsl.w	r3, r2, r3
 800f8f0:	43db      	mvns	r3, r3
 800f8f2:	69ba      	ldr	r2, [r7, #24]
 800f8f4:	4013      	ands	r3, r2
 800f8f6:	61bb      	str	r3, [r7, #24]
 800f8f8:	683b      	ldr	r3, [r7, #0]
 800f8fa:	689a      	ldr	r2, [r3, #8]
 800f8fc:	69fb      	ldr	r3, [r7, #28]
 800f8fe:	005b      	lsls	r3, r3, #1
 800f900:	fa02 f303 	lsl.w	r3, r2, r3
 800f904:	69ba      	ldr	r2, [r7, #24]
 800f906:	4313      	orrs	r3, r2
 800f908:	61bb      	str	r3, [r7, #24]
 800f90a:	687b      	ldr	r3, [r7, #4]
 800f90c:	69ba      	ldr	r2, [r7, #24]
 800f90e:	60da      	str	r2, [r3, #12]
 800f910:	683b      	ldr	r3, [r7, #0]
 800f912:	685b      	ldr	r3, [r3, #4]
 800f914:	f003 0303 	and.w	r3, r3, #3
 800f918:	2b02      	cmp	r3, #2
 800f91a:	d123      	bne.n	800f964 <HAL_GPIO_Init+0x144>
 800f91c:	69fb      	ldr	r3, [r7, #28]
 800f91e:	08da      	lsrs	r2, r3, #3
 800f920:	687b      	ldr	r3, [r7, #4]
 800f922:	3208      	adds	r2, #8
 800f924:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800f928:	61bb      	str	r3, [r7, #24]
 800f92a:	69fb      	ldr	r3, [r7, #28]
 800f92c:	f003 0307 	and.w	r3, r3, #7
 800f930:	009b      	lsls	r3, r3, #2
 800f932:	220f      	movs	r2, #15
 800f934:	fa02 f303 	lsl.w	r3, r2, r3
 800f938:	43db      	mvns	r3, r3
 800f93a:	69ba      	ldr	r2, [r7, #24]
 800f93c:	4013      	ands	r3, r2
 800f93e:	61bb      	str	r3, [r7, #24]
 800f940:	683b      	ldr	r3, [r7, #0]
 800f942:	691a      	ldr	r2, [r3, #16]
 800f944:	69fb      	ldr	r3, [r7, #28]
 800f946:	f003 0307 	and.w	r3, r3, #7
 800f94a:	009b      	lsls	r3, r3, #2
 800f94c:	fa02 f303 	lsl.w	r3, r2, r3
 800f950:	69ba      	ldr	r2, [r7, #24]
 800f952:	4313      	orrs	r3, r2
 800f954:	61bb      	str	r3, [r7, #24]
 800f956:	69fb      	ldr	r3, [r7, #28]
 800f958:	08da      	lsrs	r2, r3, #3
 800f95a:	687b      	ldr	r3, [r7, #4]
 800f95c:	3208      	adds	r2, #8
 800f95e:	69b9      	ldr	r1, [r7, #24]
 800f960:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800f964:	687b      	ldr	r3, [r7, #4]
 800f966:	681b      	ldr	r3, [r3, #0]
 800f968:	61bb      	str	r3, [r7, #24]
 800f96a:	69fb      	ldr	r3, [r7, #28]
 800f96c:	005b      	lsls	r3, r3, #1
 800f96e:	2203      	movs	r2, #3
 800f970:	fa02 f303 	lsl.w	r3, r2, r3
 800f974:	43db      	mvns	r3, r3
 800f976:	69ba      	ldr	r2, [r7, #24]
 800f978:	4013      	ands	r3, r2
 800f97a:	61bb      	str	r3, [r7, #24]
 800f97c:	683b      	ldr	r3, [r7, #0]
 800f97e:	685b      	ldr	r3, [r3, #4]
 800f980:	f003 0203 	and.w	r2, r3, #3
 800f984:	69fb      	ldr	r3, [r7, #28]
 800f986:	005b      	lsls	r3, r3, #1
 800f988:	fa02 f303 	lsl.w	r3, r2, r3
 800f98c:	69ba      	ldr	r2, [r7, #24]
 800f98e:	4313      	orrs	r3, r2
 800f990:	61bb      	str	r3, [r7, #24]
 800f992:	687b      	ldr	r3, [r7, #4]
 800f994:	69ba      	ldr	r2, [r7, #24]
 800f996:	601a      	str	r2, [r3, #0]
 800f998:	683b      	ldr	r3, [r7, #0]
 800f99a:	685b      	ldr	r3, [r3, #4]
 800f99c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800f9a0:	2b00      	cmp	r3, #0
 800f9a2:	f000 80b4 	beq.w	800fb0e <HAL_GPIO_Init+0x2ee>
 800f9a6:	2300      	movs	r3, #0
 800f9a8:	60fb      	str	r3, [r7, #12]
 800f9aa:	4b60      	ldr	r3, [pc, #384]	@ (800fb2c <HAL_GPIO_Init+0x30c>)
 800f9ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f9ae:	4a5f      	ldr	r2, [pc, #380]	@ (800fb2c <HAL_GPIO_Init+0x30c>)
 800f9b0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800f9b4:	6453      	str	r3, [r2, #68]	@ 0x44
 800f9b6:	4b5d      	ldr	r3, [pc, #372]	@ (800fb2c <HAL_GPIO_Init+0x30c>)
 800f9b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f9ba:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800f9be:	60fb      	str	r3, [r7, #12]
 800f9c0:	68fb      	ldr	r3, [r7, #12]
 800f9c2:	4a5b      	ldr	r2, [pc, #364]	@ (800fb30 <HAL_GPIO_Init+0x310>)
 800f9c4:	69fb      	ldr	r3, [r7, #28]
 800f9c6:	089b      	lsrs	r3, r3, #2
 800f9c8:	3302      	adds	r3, #2
 800f9ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f9ce:	61bb      	str	r3, [r7, #24]
 800f9d0:	69fb      	ldr	r3, [r7, #28]
 800f9d2:	f003 0303 	and.w	r3, r3, #3
 800f9d6:	009b      	lsls	r3, r3, #2
 800f9d8:	220f      	movs	r2, #15
 800f9da:	fa02 f303 	lsl.w	r3, r2, r3
 800f9de:	43db      	mvns	r3, r3
 800f9e0:	69ba      	ldr	r2, [r7, #24]
 800f9e2:	4013      	ands	r3, r2
 800f9e4:	61bb      	str	r3, [r7, #24]
 800f9e6:	687b      	ldr	r3, [r7, #4]
 800f9e8:	4a52      	ldr	r2, [pc, #328]	@ (800fb34 <HAL_GPIO_Init+0x314>)
 800f9ea:	4293      	cmp	r3, r2
 800f9ec:	d02b      	beq.n	800fa46 <HAL_GPIO_Init+0x226>
 800f9ee:	687b      	ldr	r3, [r7, #4]
 800f9f0:	4a51      	ldr	r2, [pc, #324]	@ (800fb38 <HAL_GPIO_Init+0x318>)
 800f9f2:	4293      	cmp	r3, r2
 800f9f4:	d025      	beq.n	800fa42 <HAL_GPIO_Init+0x222>
 800f9f6:	687b      	ldr	r3, [r7, #4]
 800f9f8:	4a50      	ldr	r2, [pc, #320]	@ (800fb3c <HAL_GPIO_Init+0x31c>)
 800f9fa:	4293      	cmp	r3, r2
 800f9fc:	d01f      	beq.n	800fa3e <HAL_GPIO_Init+0x21e>
 800f9fe:	687b      	ldr	r3, [r7, #4]
 800fa00:	4a4f      	ldr	r2, [pc, #316]	@ (800fb40 <HAL_GPIO_Init+0x320>)
 800fa02:	4293      	cmp	r3, r2
 800fa04:	d019      	beq.n	800fa3a <HAL_GPIO_Init+0x21a>
 800fa06:	687b      	ldr	r3, [r7, #4]
 800fa08:	4a4e      	ldr	r2, [pc, #312]	@ (800fb44 <HAL_GPIO_Init+0x324>)
 800fa0a:	4293      	cmp	r3, r2
 800fa0c:	d013      	beq.n	800fa36 <HAL_GPIO_Init+0x216>
 800fa0e:	687b      	ldr	r3, [r7, #4]
 800fa10:	4a4d      	ldr	r2, [pc, #308]	@ (800fb48 <HAL_GPIO_Init+0x328>)
 800fa12:	4293      	cmp	r3, r2
 800fa14:	d00d      	beq.n	800fa32 <HAL_GPIO_Init+0x212>
 800fa16:	687b      	ldr	r3, [r7, #4]
 800fa18:	4a4c      	ldr	r2, [pc, #304]	@ (800fb4c <HAL_GPIO_Init+0x32c>)
 800fa1a:	4293      	cmp	r3, r2
 800fa1c:	d007      	beq.n	800fa2e <HAL_GPIO_Init+0x20e>
 800fa1e:	687b      	ldr	r3, [r7, #4]
 800fa20:	4a4b      	ldr	r2, [pc, #300]	@ (800fb50 <HAL_GPIO_Init+0x330>)
 800fa22:	4293      	cmp	r3, r2
 800fa24:	d101      	bne.n	800fa2a <HAL_GPIO_Init+0x20a>
 800fa26:	2307      	movs	r3, #7
 800fa28:	e00e      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa2a:	2308      	movs	r3, #8
 800fa2c:	e00c      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa2e:	2306      	movs	r3, #6
 800fa30:	e00a      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa32:	2305      	movs	r3, #5
 800fa34:	e008      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa36:	2304      	movs	r3, #4
 800fa38:	e006      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa3a:	2303      	movs	r3, #3
 800fa3c:	e004      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa3e:	2302      	movs	r3, #2
 800fa40:	e002      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa42:	2301      	movs	r3, #1
 800fa44:	e000      	b.n	800fa48 <HAL_GPIO_Init+0x228>
 800fa46:	2300      	movs	r3, #0
 800fa48:	69fa      	ldr	r2, [r7, #28]
 800fa4a:	f002 0203 	and.w	r2, r2, #3
 800fa4e:	0092      	lsls	r2, r2, #2
 800fa50:	4093      	lsls	r3, r2
 800fa52:	69ba      	ldr	r2, [r7, #24]
 800fa54:	4313      	orrs	r3, r2
 800fa56:	61bb      	str	r3, [r7, #24]
 800fa58:	4935      	ldr	r1, [pc, #212]	@ (800fb30 <HAL_GPIO_Init+0x310>)
 800fa5a:	69fb      	ldr	r3, [r7, #28]
 800fa5c:	089b      	lsrs	r3, r3, #2
 800fa5e:	3302      	adds	r3, #2
 800fa60:	69ba      	ldr	r2, [r7, #24]
 800fa62:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800fa66:	4b3b      	ldr	r3, [pc, #236]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fa68:	689b      	ldr	r3, [r3, #8]
 800fa6a:	61bb      	str	r3, [r7, #24]
 800fa6c:	693b      	ldr	r3, [r7, #16]
 800fa6e:	43db      	mvns	r3, r3
 800fa70:	69ba      	ldr	r2, [r7, #24]
 800fa72:	4013      	ands	r3, r2
 800fa74:	61bb      	str	r3, [r7, #24]
 800fa76:	683b      	ldr	r3, [r7, #0]
 800fa78:	685b      	ldr	r3, [r3, #4]
 800fa7a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800fa7e:	2b00      	cmp	r3, #0
 800fa80:	d003      	beq.n	800fa8a <HAL_GPIO_Init+0x26a>
 800fa82:	69ba      	ldr	r2, [r7, #24]
 800fa84:	693b      	ldr	r3, [r7, #16]
 800fa86:	4313      	orrs	r3, r2
 800fa88:	61bb      	str	r3, [r7, #24]
 800fa8a:	4a32      	ldr	r2, [pc, #200]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fa8c:	69bb      	ldr	r3, [r7, #24]
 800fa8e:	6093      	str	r3, [r2, #8]
 800fa90:	4b30      	ldr	r3, [pc, #192]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fa92:	68db      	ldr	r3, [r3, #12]
 800fa94:	61bb      	str	r3, [r7, #24]
 800fa96:	693b      	ldr	r3, [r7, #16]
 800fa98:	43db      	mvns	r3, r3
 800fa9a:	69ba      	ldr	r2, [r7, #24]
 800fa9c:	4013      	ands	r3, r2
 800fa9e:	61bb      	str	r3, [r7, #24]
 800faa0:	683b      	ldr	r3, [r7, #0]
 800faa2:	685b      	ldr	r3, [r3, #4]
 800faa4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800faa8:	2b00      	cmp	r3, #0
 800faaa:	d003      	beq.n	800fab4 <HAL_GPIO_Init+0x294>
 800faac:	69ba      	ldr	r2, [r7, #24]
 800faae:	693b      	ldr	r3, [r7, #16]
 800fab0:	4313      	orrs	r3, r2
 800fab2:	61bb      	str	r3, [r7, #24]
 800fab4:	4a27      	ldr	r2, [pc, #156]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fab6:	69bb      	ldr	r3, [r7, #24]
 800fab8:	60d3      	str	r3, [r2, #12]
 800faba:	4b26      	ldr	r3, [pc, #152]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fabc:	685b      	ldr	r3, [r3, #4]
 800fabe:	61bb      	str	r3, [r7, #24]
 800fac0:	693b      	ldr	r3, [r7, #16]
 800fac2:	43db      	mvns	r3, r3
 800fac4:	69ba      	ldr	r2, [r7, #24]
 800fac6:	4013      	ands	r3, r2
 800fac8:	61bb      	str	r3, [r7, #24]
 800faca:	683b      	ldr	r3, [r7, #0]
 800facc:	685b      	ldr	r3, [r3, #4]
 800face:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800fad2:	2b00      	cmp	r3, #0
 800fad4:	d003      	beq.n	800fade <HAL_GPIO_Init+0x2be>
 800fad6:	69ba      	ldr	r2, [r7, #24]
 800fad8:	693b      	ldr	r3, [r7, #16]
 800fada:	4313      	orrs	r3, r2
 800fadc:	61bb      	str	r3, [r7, #24]
 800fade:	4a1d      	ldr	r2, [pc, #116]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fae0:	69bb      	ldr	r3, [r7, #24]
 800fae2:	6053      	str	r3, [r2, #4]
 800fae4:	4b1b      	ldr	r3, [pc, #108]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fae6:	681b      	ldr	r3, [r3, #0]
 800fae8:	61bb      	str	r3, [r7, #24]
 800faea:	693b      	ldr	r3, [r7, #16]
 800faec:	43db      	mvns	r3, r3
 800faee:	69ba      	ldr	r2, [r7, #24]
 800faf0:	4013      	ands	r3, r2
 800faf2:	61bb      	str	r3, [r7, #24]
 800faf4:	683b      	ldr	r3, [r7, #0]
 800faf6:	685b      	ldr	r3, [r3, #4]
 800faf8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800fafc:	2b00      	cmp	r3, #0
 800fafe:	d003      	beq.n	800fb08 <HAL_GPIO_Init+0x2e8>
 800fb00:	69ba      	ldr	r2, [r7, #24]
 800fb02:	693b      	ldr	r3, [r7, #16]
 800fb04:	4313      	orrs	r3, r2
 800fb06:	61bb      	str	r3, [r7, #24]
 800fb08:	4a12      	ldr	r2, [pc, #72]	@ (800fb54 <HAL_GPIO_Init+0x334>)
 800fb0a:	69bb      	ldr	r3, [r7, #24]
 800fb0c:	6013      	str	r3, [r2, #0]
 800fb0e:	69fb      	ldr	r3, [r7, #28]
 800fb10:	3301      	adds	r3, #1
 800fb12:	61fb      	str	r3, [r7, #28]
 800fb14:	69fb      	ldr	r3, [r7, #28]
 800fb16:	2b0f      	cmp	r3, #15
 800fb18:	f67f ae90 	bls.w	800f83c <HAL_GPIO_Init+0x1c>
 800fb1c:	bf00      	nop
 800fb1e:	bf00      	nop
 800fb20:	3724      	adds	r7, #36	@ 0x24
 800fb22:	46bd      	mov	sp, r7
 800fb24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb28:	4770      	bx	lr
 800fb2a:	bf00      	nop
 800fb2c:	40023800 	.word	0x40023800
 800fb30:	40013800 	.word	0x40013800
 800fb34:	40020000 	.word	0x40020000
 800fb38:	40020400 	.word	0x40020400
 800fb3c:	40020800 	.word	0x40020800
 800fb40:	40020c00 	.word	0x40020c00
 800fb44:	40021000 	.word	0x40021000
 800fb48:	40021400 	.word	0x40021400
 800fb4c:	40021800 	.word	0x40021800
 800fb50:	40021c00 	.word	0x40021c00
 800fb54:	40013c00 	.word	0x40013c00

0800fb58 <HAL_GPIO_WritePin>:
 800fb58:	b480      	push	{r7}
 800fb5a:	b083      	sub	sp, #12
 800fb5c:	af00      	add	r7, sp, #0
 800fb5e:	6078      	str	r0, [r7, #4]
 800fb60:	460b      	mov	r3, r1
 800fb62:	807b      	strh	r3, [r7, #2]
 800fb64:	4613      	mov	r3, r2
 800fb66:	707b      	strb	r3, [r7, #1]
 800fb68:	787b      	ldrb	r3, [r7, #1]
 800fb6a:	2b00      	cmp	r3, #0
 800fb6c:	d003      	beq.n	800fb76 <HAL_GPIO_WritePin+0x1e>
 800fb6e:	887a      	ldrh	r2, [r7, #2]
 800fb70:	687b      	ldr	r3, [r7, #4]
 800fb72:	619a      	str	r2, [r3, #24]
 800fb74:	e003      	b.n	800fb7e <HAL_GPIO_WritePin+0x26>
 800fb76:	887b      	ldrh	r3, [r7, #2]
 800fb78:	041a      	lsls	r2, r3, #16
 800fb7a:	687b      	ldr	r3, [r7, #4]
 800fb7c:	619a      	str	r2, [r3, #24]
 800fb7e:	bf00      	nop
 800fb80:	370c      	adds	r7, #12
 800fb82:	46bd      	mov	sp, r7
 800fb84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb88:	4770      	bx	lr
	...

0800fb8c <HAL_GPIO_EXTI_IRQHandler>:
 800fb8c:	b580      	push	{r7, lr}
 800fb8e:	b082      	sub	sp, #8
 800fb90:	af00      	add	r7, sp, #0
 800fb92:	4603      	mov	r3, r0
 800fb94:	80fb      	strh	r3, [r7, #6]
 800fb96:	4b08      	ldr	r3, [pc, #32]	@ (800fbb8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800fb98:	695a      	ldr	r2, [r3, #20]
 800fb9a:	88fb      	ldrh	r3, [r7, #6]
 800fb9c:	4013      	ands	r3, r2
 800fb9e:	2b00      	cmp	r3, #0
 800fba0:	d006      	beq.n	800fbb0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 800fba2:	4a05      	ldr	r2, [pc, #20]	@ (800fbb8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800fba4:	88fb      	ldrh	r3, [r7, #6]
 800fba6:	6153      	str	r3, [r2, #20]
 800fba8:	88fb      	ldrh	r3, [r7, #6]
 800fbaa:	4618      	mov	r0, r3
 800fbac:	f7f2 f962 	bl	8001e74 <HAL_GPIO_EXTI_Callback>
 800fbb0:	bf00      	nop
 800fbb2:	3708      	adds	r7, #8
 800fbb4:	46bd      	mov	sp, r7
 800fbb6:	bd80      	pop	{r7, pc}
 800fbb8:	40013c00 	.word	0x40013c00

0800fbbc <HAL_I2C_Init>:
 800fbbc:	b580      	push	{r7, lr}
 800fbbe:	b084      	sub	sp, #16
 800fbc0:	af00      	add	r7, sp, #0
 800fbc2:	6078      	str	r0, [r7, #4]
 800fbc4:	687b      	ldr	r3, [r7, #4]
 800fbc6:	2b00      	cmp	r3, #0
 800fbc8:	d101      	bne.n	800fbce <HAL_I2C_Init+0x12>
 800fbca:	2301      	movs	r3, #1
 800fbcc:	e12b      	b.n	800fe26 <HAL_I2C_Init+0x26a>
 800fbce:	687b      	ldr	r3, [r7, #4]
 800fbd0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800fbd4:	b2db      	uxtb	r3, r3
 800fbd6:	2b00      	cmp	r3, #0
 800fbd8:	d106      	bne.n	800fbe8 <HAL_I2C_Init+0x2c>
 800fbda:	687b      	ldr	r3, [r7, #4]
 800fbdc:	2200      	movs	r2, #0
 800fbde:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800fbe2:	6878      	ldr	r0, [r7, #4]
 800fbe4:	f7f3 fc86 	bl	80034f4 <HAL_I2C_MspInit>
 800fbe8:	687b      	ldr	r3, [r7, #4]
 800fbea:	2224      	movs	r2, #36	@ 0x24
 800fbec:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800fbf0:	687b      	ldr	r3, [r7, #4]
 800fbf2:	681b      	ldr	r3, [r3, #0]
 800fbf4:	681a      	ldr	r2, [r3, #0]
 800fbf6:	687b      	ldr	r3, [r7, #4]
 800fbf8:	681b      	ldr	r3, [r3, #0]
 800fbfa:	f022 0201 	bic.w	r2, r2, #1
 800fbfe:	601a      	str	r2, [r3, #0]
 800fc00:	687b      	ldr	r3, [r7, #4]
 800fc02:	681b      	ldr	r3, [r3, #0]
 800fc04:	681a      	ldr	r2, [r3, #0]
 800fc06:	687b      	ldr	r3, [r7, #4]
 800fc08:	681b      	ldr	r3, [r3, #0]
 800fc0a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800fc0e:	601a      	str	r2, [r3, #0]
 800fc10:	687b      	ldr	r3, [r7, #4]
 800fc12:	681b      	ldr	r3, [r3, #0]
 800fc14:	681a      	ldr	r2, [r3, #0]
 800fc16:	687b      	ldr	r3, [r7, #4]
 800fc18:	681b      	ldr	r3, [r3, #0]
 800fc1a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800fc1e:	601a      	str	r2, [r3, #0]
 800fc20:	f003 fc04 	bl	801342c <HAL_RCC_GetPCLK1Freq>
 800fc24:	60f8      	str	r0, [r7, #12]
 800fc26:	687b      	ldr	r3, [r7, #4]
 800fc28:	685b      	ldr	r3, [r3, #4]
 800fc2a:	4a81      	ldr	r2, [pc, #516]	@ (800fe30 <HAL_I2C_Init+0x274>)
 800fc2c:	4293      	cmp	r3, r2
 800fc2e:	d807      	bhi.n	800fc40 <HAL_I2C_Init+0x84>
 800fc30:	68fb      	ldr	r3, [r7, #12]
 800fc32:	4a80      	ldr	r2, [pc, #512]	@ (800fe34 <HAL_I2C_Init+0x278>)
 800fc34:	4293      	cmp	r3, r2
 800fc36:	bf94      	ite	ls
 800fc38:	2301      	movls	r3, #1
 800fc3a:	2300      	movhi	r3, #0
 800fc3c:	b2db      	uxtb	r3, r3
 800fc3e:	e006      	b.n	800fc4e <HAL_I2C_Init+0x92>
 800fc40:	68fb      	ldr	r3, [r7, #12]
 800fc42:	4a7d      	ldr	r2, [pc, #500]	@ (800fe38 <HAL_I2C_Init+0x27c>)
 800fc44:	4293      	cmp	r3, r2
 800fc46:	bf94      	ite	ls
 800fc48:	2301      	movls	r3, #1
 800fc4a:	2300      	movhi	r3, #0
 800fc4c:	b2db      	uxtb	r3, r3
 800fc4e:	2b00      	cmp	r3, #0
 800fc50:	d001      	beq.n	800fc56 <HAL_I2C_Init+0x9a>
 800fc52:	2301      	movs	r3, #1
 800fc54:	e0e7      	b.n	800fe26 <HAL_I2C_Init+0x26a>
 800fc56:	68fb      	ldr	r3, [r7, #12]
 800fc58:	4a78      	ldr	r2, [pc, #480]	@ (800fe3c <HAL_I2C_Init+0x280>)
 800fc5a:	fba2 2303 	umull	r2, r3, r2, r3
 800fc5e:	0c9b      	lsrs	r3, r3, #18
 800fc60:	60bb      	str	r3, [r7, #8]
 800fc62:	687b      	ldr	r3, [r7, #4]
 800fc64:	681b      	ldr	r3, [r3, #0]
 800fc66:	685b      	ldr	r3, [r3, #4]
 800fc68:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800fc6c:	687b      	ldr	r3, [r7, #4]
 800fc6e:	681b      	ldr	r3, [r3, #0]
 800fc70:	68ba      	ldr	r2, [r7, #8]
 800fc72:	430a      	orrs	r2, r1
 800fc74:	605a      	str	r2, [r3, #4]
 800fc76:	687b      	ldr	r3, [r7, #4]
 800fc78:	681b      	ldr	r3, [r3, #0]
 800fc7a:	6a1b      	ldr	r3, [r3, #32]
 800fc7c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800fc80:	687b      	ldr	r3, [r7, #4]
 800fc82:	685b      	ldr	r3, [r3, #4]
 800fc84:	4a6a      	ldr	r2, [pc, #424]	@ (800fe30 <HAL_I2C_Init+0x274>)
 800fc86:	4293      	cmp	r3, r2
 800fc88:	d802      	bhi.n	800fc90 <HAL_I2C_Init+0xd4>
 800fc8a:	68bb      	ldr	r3, [r7, #8]
 800fc8c:	3301      	adds	r3, #1
 800fc8e:	e009      	b.n	800fca4 <HAL_I2C_Init+0xe8>
 800fc90:	68bb      	ldr	r3, [r7, #8]
 800fc92:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800fc96:	fb02 f303 	mul.w	r3, r2, r3
 800fc9a:	4a69      	ldr	r2, [pc, #420]	@ (800fe40 <HAL_I2C_Init+0x284>)
 800fc9c:	fba2 2303 	umull	r2, r3, r2, r3
 800fca0:	099b      	lsrs	r3, r3, #6
 800fca2:	3301      	adds	r3, #1
 800fca4:	687a      	ldr	r2, [r7, #4]
 800fca6:	6812      	ldr	r2, [r2, #0]
 800fca8:	430b      	orrs	r3, r1
 800fcaa:	6213      	str	r3, [r2, #32]
 800fcac:	687b      	ldr	r3, [r7, #4]
 800fcae:	681b      	ldr	r3, [r3, #0]
 800fcb0:	69db      	ldr	r3, [r3, #28]
 800fcb2:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800fcb6:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800fcba:	687b      	ldr	r3, [r7, #4]
 800fcbc:	685b      	ldr	r3, [r3, #4]
 800fcbe:	495c      	ldr	r1, [pc, #368]	@ (800fe30 <HAL_I2C_Init+0x274>)
 800fcc0:	428b      	cmp	r3, r1
 800fcc2:	d819      	bhi.n	800fcf8 <HAL_I2C_Init+0x13c>
 800fcc4:	68fb      	ldr	r3, [r7, #12]
 800fcc6:	1e59      	subs	r1, r3, #1
 800fcc8:	687b      	ldr	r3, [r7, #4]
 800fcca:	685b      	ldr	r3, [r3, #4]
 800fccc:	005b      	lsls	r3, r3, #1
 800fcce:	fbb1 f3f3 	udiv	r3, r1, r3
 800fcd2:	1c59      	adds	r1, r3, #1
 800fcd4:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800fcd8:	400b      	ands	r3, r1
 800fcda:	2b00      	cmp	r3, #0
 800fcdc:	d00a      	beq.n	800fcf4 <HAL_I2C_Init+0x138>
 800fcde:	68fb      	ldr	r3, [r7, #12]
 800fce0:	1e59      	subs	r1, r3, #1
 800fce2:	687b      	ldr	r3, [r7, #4]
 800fce4:	685b      	ldr	r3, [r3, #4]
 800fce6:	005b      	lsls	r3, r3, #1
 800fce8:	fbb1 f3f3 	udiv	r3, r1, r3
 800fcec:	3301      	adds	r3, #1
 800fcee:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800fcf2:	e051      	b.n	800fd98 <HAL_I2C_Init+0x1dc>
 800fcf4:	2304      	movs	r3, #4
 800fcf6:	e04f      	b.n	800fd98 <HAL_I2C_Init+0x1dc>
 800fcf8:	687b      	ldr	r3, [r7, #4]
 800fcfa:	689b      	ldr	r3, [r3, #8]
 800fcfc:	2b00      	cmp	r3, #0
 800fcfe:	d111      	bne.n	800fd24 <HAL_I2C_Init+0x168>
 800fd00:	68fb      	ldr	r3, [r7, #12]
 800fd02:	1e58      	subs	r0, r3, #1
 800fd04:	687b      	ldr	r3, [r7, #4]
 800fd06:	6859      	ldr	r1, [r3, #4]
 800fd08:	460b      	mov	r3, r1
 800fd0a:	005b      	lsls	r3, r3, #1
 800fd0c:	440b      	add	r3, r1
 800fd0e:	fbb0 f3f3 	udiv	r3, r0, r3
 800fd12:	3301      	adds	r3, #1
 800fd14:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800fd18:	2b00      	cmp	r3, #0
 800fd1a:	bf0c      	ite	eq
 800fd1c:	2301      	moveq	r3, #1
 800fd1e:	2300      	movne	r3, #0
 800fd20:	b2db      	uxtb	r3, r3
 800fd22:	e012      	b.n	800fd4a <HAL_I2C_Init+0x18e>
 800fd24:	68fb      	ldr	r3, [r7, #12]
 800fd26:	1e58      	subs	r0, r3, #1
 800fd28:	687b      	ldr	r3, [r7, #4]
 800fd2a:	6859      	ldr	r1, [r3, #4]
 800fd2c:	460b      	mov	r3, r1
 800fd2e:	009b      	lsls	r3, r3, #2
 800fd30:	440b      	add	r3, r1
 800fd32:	0099      	lsls	r1, r3, #2
 800fd34:	440b      	add	r3, r1
 800fd36:	fbb0 f3f3 	udiv	r3, r0, r3
 800fd3a:	3301      	adds	r3, #1
 800fd3c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800fd40:	2b00      	cmp	r3, #0
 800fd42:	bf0c      	ite	eq
 800fd44:	2301      	moveq	r3, #1
 800fd46:	2300      	movne	r3, #0
 800fd48:	b2db      	uxtb	r3, r3
 800fd4a:	2b00      	cmp	r3, #0
 800fd4c:	d001      	beq.n	800fd52 <HAL_I2C_Init+0x196>
 800fd4e:	2301      	movs	r3, #1
 800fd50:	e022      	b.n	800fd98 <HAL_I2C_Init+0x1dc>
 800fd52:	687b      	ldr	r3, [r7, #4]
 800fd54:	689b      	ldr	r3, [r3, #8]
 800fd56:	2b00      	cmp	r3, #0
 800fd58:	d10e      	bne.n	800fd78 <HAL_I2C_Init+0x1bc>
 800fd5a:	68fb      	ldr	r3, [r7, #12]
 800fd5c:	1e58      	subs	r0, r3, #1
 800fd5e:	687b      	ldr	r3, [r7, #4]
 800fd60:	6859      	ldr	r1, [r3, #4]
 800fd62:	460b      	mov	r3, r1
 800fd64:	005b      	lsls	r3, r3, #1
 800fd66:	440b      	add	r3, r1
 800fd68:	fbb0 f3f3 	udiv	r3, r0, r3
 800fd6c:	3301      	adds	r3, #1
 800fd6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800fd72:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800fd76:	e00f      	b.n	800fd98 <HAL_I2C_Init+0x1dc>
 800fd78:	68fb      	ldr	r3, [r7, #12]
 800fd7a:	1e58      	subs	r0, r3, #1
 800fd7c:	687b      	ldr	r3, [r7, #4]
 800fd7e:	6859      	ldr	r1, [r3, #4]
 800fd80:	460b      	mov	r3, r1
 800fd82:	009b      	lsls	r3, r3, #2
 800fd84:	440b      	add	r3, r1
 800fd86:	0099      	lsls	r1, r3, #2
 800fd88:	440b      	add	r3, r1
 800fd8a:	fbb0 f3f3 	udiv	r3, r0, r3
 800fd8e:	3301      	adds	r3, #1
 800fd90:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800fd94:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800fd98:	6879      	ldr	r1, [r7, #4]
 800fd9a:	6809      	ldr	r1, [r1, #0]
 800fd9c:	4313      	orrs	r3, r2
 800fd9e:	61cb      	str	r3, [r1, #28]
 800fda0:	687b      	ldr	r3, [r7, #4]
 800fda2:	681b      	ldr	r3, [r3, #0]
 800fda4:	681b      	ldr	r3, [r3, #0]
 800fda6:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800fdaa:	687b      	ldr	r3, [r7, #4]
 800fdac:	69da      	ldr	r2, [r3, #28]
 800fdae:	687b      	ldr	r3, [r7, #4]
 800fdb0:	6a1b      	ldr	r3, [r3, #32]
 800fdb2:	431a      	orrs	r2, r3
 800fdb4:	687b      	ldr	r3, [r7, #4]
 800fdb6:	681b      	ldr	r3, [r3, #0]
 800fdb8:	430a      	orrs	r2, r1
 800fdba:	601a      	str	r2, [r3, #0]
 800fdbc:	687b      	ldr	r3, [r7, #4]
 800fdbe:	681b      	ldr	r3, [r3, #0]
 800fdc0:	689b      	ldr	r3, [r3, #8]
 800fdc2:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800fdc6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800fdca:	687a      	ldr	r2, [r7, #4]
 800fdcc:	6911      	ldr	r1, [r2, #16]
 800fdce:	687a      	ldr	r2, [r7, #4]
 800fdd0:	68d2      	ldr	r2, [r2, #12]
 800fdd2:	4311      	orrs	r1, r2
 800fdd4:	687a      	ldr	r2, [r7, #4]
 800fdd6:	6812      	ldr	r2, [r2, #0]
 800fdd8:	430b      	orrs	r3, r1
 800fdda:	6093      	str	r3, [r2, #8]
 800fddc:	687b      	ldr	r3, [r7, #4]
 800fdde:	681b      	ldr	r3, [r3, #0]
 800fde0:	68db      	ldr	r3, [r3, #12]
 800fde2:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800fde6:	687b      	ldr	r3, [r7, #4]
 800fde8:	695a      	ldr	r2, [r3, #20]
 800fdea:	687b      	ldr	r3, [r7, #4]
 800fdec:	699b      	ldr	r3, [r3, #24]
 800fdee:	431a      	orrs	r2, r3
 800fdf0:	687b      	ldr	r3, [r7, #4]
 800fdf2:	681b      	ldr	r3, [r3, #0]
 800fdf4:	430a      	orrs	r2, r1
 800fdf6:	60da      	str	r2, [r3, #12]
 800fdf8:	687b      	ldr	r3, [r7, #4]
 800fdfa:	681b      	ldr	r3, [r3, #0]
 800fdfc:	681a      	ldr	r2, [r3, #0]
 800fdfe:	687b      	ldr	r3, [r7, #4]
 800fe00:	681b      	ldr	r3, [r3, #0]
 800fe02:	f042 0201 	orr.w	r2, r2, #1
 800fe06:	601a      	str	r2, [r3, #0]
 800fe08:	687b      	ldr	r3, [r7, #4]
 800fe0a:	2200      	movs	r2, #0
 800fe0c:	641a      	str	r2, [r3, #64]	@ 0x40
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	2220      	movs	r2, #32
 800fe12:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800fe16:	687b      	ldr	r3, [r7, #4]
 800fe18:	2200      	movs	r2, #0
 800fe1a:	631a      	str	r2, [r3, #48]	@ 0x30
 800fe1c:	687b      	ldr	r3, [r7, #4]
 800fe1e:	2200      	movs	r2, #0
 800fe20:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800fe24:	2300      	movs	r3, #0
 800fe26:	4618      	mov	r0, r3
 800fe28:	3710      	adds	r7, #16
 800fe2a:	46bd      	mov	sp, r7
 800fe2c:	bd80      	pop	{r7, pc}
 800fe2e:	bf00      	nop
 800fe30:	000186a0 	.word	0x000186a0
 800fe34:	001e847f 	.word	0x001e847f
 800fe38:	003d08ff 	.word	0x003d08ff
 800fe3c:	431bde83 	.word	0x431bde83
 800fe40:	10624dd3 	.word	0x10624dd3

0800fe44 <HAL_I2C_Mem_Write>:
 800fe44:	b580      	push	{r7, lr}
 800fe46:	b088      	sub	sp, #32
 800fe48:	af02      	add	r7, sp, #8
 800fe4a:	60f8      	str	r0, [r7, #12]
 800fe4c:	4608      	mov	r0, r1
 800fe4e:	4611      	mov	r1, r2
 800fe50:	461a      	mov	r2, r3
 800fe52:	4603      	mov	r3, r0
 800fe54:	817b      	strh	r3, [r7, #10]
 800fe56:	460b      	mov	r3, r1
 800fe58:	813b      	strh	r3, [r7, #8]
 800fe5a:	4613      	mov	r3, r2
 800fe5c:	80fb      	strh	r3, [r7, #6]
 800fe5e:	f7fd feab 	bl	800dbb8 <HAL_GetTick>
 800fe62:	6178      	str	r0, [r7, #20]
 800fe64:	68fb      	ldr	r3, [r7, #12]
 800fe66:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800fe6a:	b2db      	uxtb	r3, r3
 800fe6c:	2b20      	cmp	r3, #32
 800fe6e:	f040 80d9 	bne.w	8010024 <HAL_I2C_Mem_Write+0x1e0>
 800fe72:	697b      	ldr	r3, [r7, #20]
 800fe74:	9300      	str	r3, [sp, #0]
 800fe76:	2319      	movs	r3, #25
 800fe78:	2201      	movs	r2, #1
 800fe7a:	496d      	ldr	r1, [pc, #436]	@ (8010030 <HAL_I2C_Mem_Write+0x1ec>)
 800fe7c:	68f8      	ldr	r0, [r7, #12]
 800fe7e:	f001 fa4b 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 800fe82:	4603      	mov	r3, r0
 800fe84:	2b00      	cmp	r3, #0
 800fe86:	d001      	beq.n	800fe8c <HAL_I2C_Mem_Write+0x48>
 800fe88:	2302      	movs	r3, #2
 800fe8a:	e0cc      	b.n	8010026 <HAL_I2C_Mem_Write+0x1e2>
 800fe8c:	68fb      	ldr	r3, [r7, #12]
 800fe8e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800fe92:	2b01      	cmp	r3, #1
 800fe94:	d101      	bne.n	800fe9a <HAL_I2C_Mem_Write+0x56>
 800fe96:	2302      	movs	r3, #2
 800fe98:	e0c5      	b.n	8010026 <HAL_I2C_Mem_Write+0x1e2>
 800fe9a:	68fb      	ldr	r3, [r7, #12]
 800fe9c:	2201      	movs	r2, #1
 800fe9e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800fea2:	68fb      	ldr	r3, [r7, #12]
 800fea4:	681b      	ldr	r3, [r3, #0]
 800fea6:	681b      	ldr	r3, [r3, #0]
 800fea8:	f003 0301 	and.w	r3, r3, #1
 800feac:	2b01      	cmp	r3, #1
 800feae:	d007      	beq.n	800fec0 <HAL_I2C_Mem_Write+0x7c>
 800feb0:	68fb      	ldr	r3, [r7, #12]
 800feb2:	681b      	ldr	r3, [r3, #0]
 800feb4:	681a      	ldr	r2, [r3, #0]
 800feb6:	68fb      	ldr	r3, [r7, #12]
 800feb8:	681b      	ldr	r3, [r3, #0]
 800feba:	f042 0201 	orr.w	r2, r2, #1
 800febe:	601a      	str	r2, [r3, #0]
 800fec0:	68fb      	ldr	r3, [r7, #12]
 800fec2:	681b      	ldr	r3, [r3, #0]
 800fec4:	681a      	ldr	r2, [r3, #0]
 800fec6:	68fb      	ldr	r3, [r7, #12]
 800fec8:	681b      	ldr	r3, [r3, #0]
 800feca:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800fece:	601a      	str	r2, [r3, #0]
 800fed0:	68fb      	ldr	r3, [r7, #12]
 800fed2:	2221      	movs	r2, #33	@ 0x21
 800fed4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800fed8:	68fb      	ldr	r3, [r7, #12]
 800feda:	2240      	movs	r2, #64	@ 0x40
 800fedc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800fee0:	68fb      	ldr	r3, [r7, #12]
 800fee2:	2200      	movs	r2, #0
 800fee4:	641a      	str	r2, [r3, #64]	@ 0x40
 800fee6:	68fb      	ldr	r3, [r7, #12]
 800fee8:	6a3a      	ldr	r2, [r7, #32]
 800feea:	625a      	str	r2, [r3, #36]	@ 0x24
 800feec:	68fb      	ldr	r3, [r7, #12]
 800feee:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800fef0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800fef2:	68fb      	ldr	r3, [r7, #12]
 800fef4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800fef6:	b29a      	uxth	r2, r3
 800fef8:	68fb      	ldr	r3, [r7, #12]
 800fefa:	851a      	strh	r2, [r3, #40]	@ 0x28
 800fefc:	68fb      	ldr	r3, [r7, #12]
 800fefe:	4a4d      	ldr	r2, [pc, #308]	@ (8010034 <HAL_I2C_Mem_Write+0x1f0>)
 800ff00:	62da      	str	r2, [r3, #44]	@ 0x2c
 800ff02:	88f8      	ldrh	r0, [r7, #6]
 800ff04:	893a      	ldrh	r2, [r7, #8]
 800ff06:	8979      	ldrh	r1, [r7, #10]
 800ff08:	697b      	ldr	r3, [r7, #20]
 800ff0a:	9301      	str	r3, [sp, #4]
 800ff0c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ff0e:	9300      	str	r3, [sp, #0]
 800ff10:	4603      	mov	r3, r0
 800ff12:	68f8      	ldr	r0, [r7, #12]
 800ff14:	f000 fec8 	bl	8010ca8 <I2C_RequestMemoryWrite>
 800ff18:	4603      	mov	r3, r0
 800ff1a:	2b00      	cmp	r3, #0
 800ff1c:	d052      	beq.n	800ffc4 <HAL_I2C_Mem_Write+0x180>
 800ff1e:	2301      	movs	r3, #1
 800ff20:	e081      	b.n	8010026 <HAL_I2C_Mem_Write+0x1e2>
 800ff22:	697a      	ldr	r2, [r7, #20]
 800ff24:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800ff26:	68f8      	ldr	r0, [r7, #12]
 800ff28:	f001 facc 	bl	80114c4 <I2C_WaitOnTXEFlagUntilTimeout>
 800ff2c:	4603      	mov	r3, r0
 800ff2e:	2b00      	cmp	r3, #0
 800ff30:	d00d      	beq.n	800ff4e <HAL_I2C_Mem_Write+0x10a>
 800ff32:	68fb      	ldr	r3, [r7, #12]
 800ff34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ff36:	2b04      	cmp	r3, #4
 800ff38:	d107      	bne.n	800ff4a <HAL_I2C_Mem_Write+0x106>
 800ff3a:	68fb      	ldr	r3, [r7, #12]
 800ff3c:	681b      	ldr	r3, [r3, #0]
 800ff3e:	681a      	ldr	r2, [r3, #0]
 800ff40:	68fb      	ldr	r3, [r7, #12]
 800ff42:	681b      	ldr	r3, [r3, #0]
 800ff44:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800ff48:	601a      	str	r2, [r3, #0]
 800ff4a:	2301      	movs	r3, #1
 800ff4c:	e06b      	b.n	8010026 <HAL_I2C_Mem_Write+0x1e2>
 800ff4e:	68fb      	ldr	r3, [r7, #12]
 800ff50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ff52:	781a      	ldrb	r2, [r3, #0]
 800ff54:	68fb      	ldr	r3, [r7, #12]
 800ff56:	681b      	ldr	r3, [r3, #0]
 800ff58:	611a      	str	r2, [r3, #16]
 800ff5a:	68fb      	ldr	r3, [r7, #12]
 800ff5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ff5e:	1c5a      	adds	r2, r3, #1
 800ff60:	68fb      	ldr	r3, [r7, #12]
 800ff62:	625a      	str	r2, [r3, #36]	@ 0x24
 800ff64:	68fb      	ldr	r3, [r7, #12]
 800ff66:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ff68:	3b01      	subs	r3, #1
 800ff6a:	b29a      	uxth	r2, r3
 800ff6c:	68fb      	ldr	r3, [r7, #12]
 800ff6e:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ff70:	68fb      	ldr	r3, [r7, #12]
 800ff72:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ff74:	b29b      	uxth	r3, r3
 800ff76:	3b01      	subs	r3, #1
 800ff78:	b29a      	uxth	r2, r3
 800ff7a:	68fb      	ldr	r3, [r7, #12]
 800ff7c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ff7e:	68fb      	ldr	r3, [r7, #12]
 800ff80:	681b      	ldr	r3, [r3, #0]
 800ff82:	695b      	ldr	r3, [r3, #20]
 800ff84:	f003 0304 	and.w	r3, r3, #4
 800ff88:	2b04      	cmp	r3, #4
 800ff8a:	d11b      	bne.n	800ffc4 <HAL_I2C_Mem_Write+0x180>
 800ff8c:	68fb      	ldr	r3, [r7, #12]
 800ff8e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ff90:	2b00      	cmp	r3, #0
 800ff92:	d017      	beq.n	800ffc4 <HAL_I2C_Mem_Write+0x180>
 800ff94:	68fb      	ldr	r3, [r7, #12]
 800ff96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ff98:	781a      	ldrb	r2, [r3, #0]
 800ff9a:	68fb      	ldr	r3, [r7, #12]
 800ff9c:	681b      	ldr	r3, [r3, #0]
 800ff9e:	611a      	str	r2, [r3, #16]
 800ffa0:	68fb      	ldr	r3, [r7, #12]
 800ffa2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ffa4:	1c5a      	adds	r2, r3, #1
 800ffa6:	68fb      	ldr	r3, [r7, #12]
 800ffa8:	625a      	str	r2, [r3, #36]	@ 0x24
 800ffaa:	68fb      	ldr	r3, [r7, #12]
 800ffac:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ffae:	3b01      	subs	r3, #1
 800ffb0:	b29a      	uxth	r2, r3
 800ffb2:	68fb      	ldr	r3, [r7, #12]
 800ffb4:	851a      	strh	r2, [r3, #40]	@ 0x28
 800ffb6:	68fb      	ldr	r3, [r7, #12]
 800ffb8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800ffba:	b29b      	uxth	r3, r3
 800ffbc:	3b01      	subs	r3, #1
 800ffbe:	b29a      	uxth	r2, r3
 800ffc0:	68fb      	ldr	r3, [r7, #12]
 800ffc2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800ffc4:	68fb      	ldr	r3, [r7, #12]
 800ffc6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800ffc8:	2b00      	cmp	r3, #0
 800ffca:	d1aa      	bne.n	800ff22 <HAL_I2C_Mem_Write+0xde>
 800ffcc:	697a      	ldr	r2, [r7, #20]
 800ffce:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800ffd0:	68f8      	ldr	r0, [r7, #12]
 800ffd2:	f001 fab8 	bl	8011546 <I2C_WaitOnBTFFlagUntilTimeout>
 800ffd6:	4603      	mov	r3, r0
 800ffd8:	2b00      	cmp	r3, #0
 800ffda:	d00d      	beq.n	800fff8 <HAL_I2C_Mem_Write+0x1b4>
 800ffdc:	68fb      	ldr	r3, [r7, #12]
 800ffde:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ffe0:	2b04      	cmp	r3, #4
 800ffe2:	d107      	bne.n	800fff4 <HAL_I2C_Mem_Write+0x1b0>
 800ffe4:	68fb      	ldr	r3, [r7, #12]
 800ffe6:	681b      	ldr	r3, [r3, #0]
 800ffe8:	681a      	ldr	r2, [r3, #0]
 800ffea:	68fb      	ldr	r3, [r7, #12]
 800ffec:	681b      	ldr	r3, [r3, #0]
 800ffee:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800fff2:	601a      	str	r2, [r3, #0]
 800fff4:	2301      	movs	r3, #1
 800fff6:	e016      	b.n	8010026 <HAL_I2C_Mem_Write+0x1e2>
 800fff8:	68fb      	ldr	r3, [r7, #12]
 800fffa:	681b      	ldr	r3, [r3, #0]
 800fffc:	681a      	ldr	r2, [r3, #0]
 800fffe:	68fb      	ldr	r3, [r7, #12]
 8010000:	681b      	ldr	r3, [r3, #0]
 8010002:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010006:	601a      	str	r2, [r3, #0]
 8010008:	68fb      	ldr	r3, [r7, #12]
 801000a:	2220      	movs	r2, #32
 801000c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010010:	68fb      	ldr	r3, [r7, #12]
 8010012:	2200      	movs	r2, #0
 8010014:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8010018:	68fb      	ldr	r3, [r7, #12]
 801001a:	2200      	movs	r2, #0
 801001c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010020:	2300      	movs	r3, #0
 8010022:	e000      	b.n	8010026 <HAL_I2C_Mem_Write+0x1e2>
 8010024:	2302      	movs	r3, #2
 8010026:	4618      	mov	r0, r3
 8010028:	3718      	adds	r7, #24
 801002a:	46bd      	mov	sp, r7
 801002c:	bd80      	pop	{r7, pc}
 801002e:	bf00      	nop
 8010030:	00100002 	.word	0x00100002
 8010034:	ffff0000 	.word	0xffff0000

08010038 <HAL_I2C_Mem_Read>:
 8010038:	b580      	push	{r7, lr}
 801003a:	b08c      	sub	sp, #48	@ 0x30
 801003c:	af02      	add	r7, sp, #8
 801003e:	60f8      	str	r0, [r7, #12]
 8010040:	4608      	mov	r0, r1
 8010042:	4611      	mov	r1, r2
 8010044:	461a      	mov	r2, r3
 8010046:	4603      	mov	r3, r0
 8010048:	817b      	strh	r3, [r7, #10]
 801004a:	460b      	mov	r3, r1
 801004c:	813b      	strh	r3, [r7, #8]
 801004e:	4613      	mov	r3, r2
 8010050:	80fb      	strh	r3, [r7, #6]
 8010052:	f7fd fdb1 	bl	800dbb8 <HAL_GetTick>
 8010056:	6278      	str	r0, [r7, #36]	@ 0x24
 8010058:	68fb      	ldr	r3, [r7, #12]
 801005a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 801005e:	b2db      	uxtb	r3, r3
 8010060:	2b20      	cmp	r3, #32
 8010062:	f040 8208 	bne.w	8010476 <HAL_I2C_Mem_Read+0x43e>
 8010066:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010068:	9300      	str	r3, [sp, #0]
 801006a:	2319      	movs	r3, #25
 801006c:	2201      	movs	r2, #1
 801006e:	497b      	ldr	r1, [pc, #492]	@ (801025c <HAL_I2C_Mem_Read+0x224>)
 8010070:	68f8      	ldr	r0, [r7, #12]
 8010072:	f001 f951 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 8010076:	4603      	mov	r3, r0
 8010078:	2b00      	cmp	r3, #0
 801007a:	d001      	beq.n	8010080 <HAL_I2C_Mem_Read+0x48>
 801007c:	2302      	movs	r3, #2
 801007e:	e1fb      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 8010080:	68fb      	ldr	r3, [r7, #12]
 8010082:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8010086:	2b01      	cmp	r3, #1
 8010088:	d101      	bne.n	801008e <HAL_I2C_Mem_Read+0x56>
 801008a:	2302      	movs	r3, #2
 801008c:	e1f4      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 801008e:	68fb      	ldr	r3, [r7, #12]
 8010090:	2201      	movs	r2, #1
 8010092:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010096:	68fb      	ldr	r3, [r7, #12]
 8010098:	681b      	ldr	r3, [r3, #0]
 801009a:	681b      	ldr	r3, [r3, #0]
 801009c:	f003 0301 	and.w	r3, r3, #1
 80100a0:	2b01      	cmp	r3, #1
 80100a2:	d007      	beq.n	80100b4 <HAL_I2C_Mem_Read+0x7c>
 80100a4:	68fb      	ldr	r3, [r7, #12]
 80100a6:	681b      	ldr	r3, [r3, #0]
 80100a8:	681a      	ldr	r2, [r3, #0]
 80100aa:	68fb      	ldr	r3, [r7, #12]
 80100ac:	681b      	ldr	r3, [r3, #0]
 80100ae:	f042 0201 	orr.w	r2, r2, #1
 80100b2:	601a      	str	r2, [r3, #0]
 80100b4:	68fb      	ldr	r3, [r7, #12]
 80100b6:	681b      	ldr	r3, [r3, #0]
 80100b8:	681a      	ldr	r2, [r3, #0]
 80100ba:	68fb      	ldr	r3, [r7, #12]
 80100bc:	681b      	ldr	r3, [r3, #0]
 80100be:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80100c2:	601a      	str	r2, [r3, #0]
 80100c4:	68fb      	ldr	r3, [r7, #12]
 80100c6:	2222      	movs	r2, #34	@ 0x22
 80100c8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80100cc:	68fb      	ldr	r3, [r7, #12]
 80100ce:	2240      	movs	r2, #64	@ 0x40
 80100d0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80100d4:	68fb      	ldr	r3, [r7, #12]
 80100d6:	2200      	movs	r2, #0
 80100d8:	641a      	str	r2, [r3, #64]	@ 0x40
 80100da:	68fb      	ldr	r3, [r7, #12]
 80100dc:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80100de:	625a      	str	r2, [r3, #36]	@ 0x24
 80100e0:	68fb      	ldr	r3, [r7, #12]
 80100e2:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 80100e4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80100e6:	68fb      	ldr	r3, [r7, #12]
 80100e8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80100ea:	b29a      	uxth	r2, r3
 80100ec:	68fb      	ldr	r3, [r7, #12]
 80100ee:	851a      	strh	r2, [r3, #40]	@ 0x28
 80100f0:	68fb      	ldr	r3, [r7, #12]
 80100f2:	4a5b      	ldr	r2, [pc, #364]	@ (8010260 <HAL_I2C_Mem_Read+0x228>)
 80100f4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80100f6:	88f8      	ldrh	r0, [r7, #6]
 80100f8:	893a      	ldrh	r2, [r7, #8]
 80100fa:	8979      	ldrh	r1, [r7, #10]
 80100fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80100fe:	9301      	str	r3, [sp, #4]
 8010100:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010102:	9300      	str	r3, [sp, #0]
 8010104:	4603      	mov	r3, r0
 8010106:	68f8      	ldr	r0, [r7, #12]
 8010108:	f000 fe64 	bl	8010dd4 <I2C_RequestMemoryRead>
 801010c:	4603      	mov	r3, r0
 801010e:	2b00      	cmp	r3, #0
 8010110:	d001      	beq.n	8010116 <HAL_I2C_Mem_Read+0xde>
 8010112:	2301      	movs	r3, #1
 8010114:	e1b0      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 8010116:	68fb      	ldr	r3, [r7, #12]
 8010118:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 801011a:	2b00      	cmp	r3, #0
 801011c:	d113      	bne.n	8010146 <HAL_I2C_Mem_Read+0x10e>
 801011e:	2300      	movs	r3, #0
 8010120:	623b      	str	r3, [r7, #32]
 8010122:	68fb      	ldr	r3, [r7, #12]
 8010124:	681b      	ldr	r3, [r3, #0]
 8010126:	695b      	ldr	r3, [r3, #20]
 8010128:	623b      	str	r3, [r7, #32]
 801012a:	68fb      	ldr	r3, [r7, #12]
 801012c:	681b      	ldr	r3, [r3, #0]
 801012e:	699b      	ldr	r3, [r3, #24]
 8010130:	623b      	str	r3, [r7, #32]
 8010132:	6a3b      	ldr	r3, [r7, #32]
 8010134:	68fb      	ldr	r3, [r7, #12]
 8010136:	681b      	ldr	r3, [r3, #0]
 8010138:	681a      	ldr	r2, [r3, #0]
 801013a:	68fb      	ldr	r3, [r7, #12]
 801013c:	681b      	ldr	r3, [r3, #0]
 801013e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010142:	601a      	str	r2, [r3, #0]
 8010144:	e184      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 8010146:	68fb      	ldr	r3, [r7, #12]
 8010148:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 801014a:	2b01      	cmp	r3, #1
 801014c:	d11b      	bne.n	8010186 <HAL_I2C_Mem_Read+0x14e>
 801014e:	68fb      	ldr	r3, [r7, #12]
 8010150:	681b      	ldr	r3, [r3, #0]
 8010152:	681a      	ldr	r2, [r3, #0]
 8010154:	68fb      	ldr	r3, [r7, #12]
 8010156:	681b      	ldr	r3, [r3, #0]
 8010158:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 801015c:	601a      	str	r2, [r3, #0]
 801015e:	2300      	movs	r3, #0
 8010160:	61fb      	str	r3, [r7, #28]
 8010162:	68fb      	ldr	r3, [r7, #12]
 8010164:	681b      	ldr	r3, [r3, #0]
 8010166:	695b      	ldr	r3, [r3, #20]
 8010168:	61fb      	str	r3, [r7, #28]
 801016a:	68fb      	ldr	r3, [r7, #12]
 801016c:	681b      	ldr	r3, [r3, #0]
 801016e:	699b      	ldr	r3, [r3, #24]
 8010170:	61fb      	str	r3, [r7, #28]
 8010172:	69fb      	ldr	r3, [r7, #28]
 8010174:	68fb      	ldr	r3, [r7, #12]
 8010176:	681b      	ldr	r3, [r3, #0]
 8010178:	681a      	ldr	r2, [r3, #0]
 801017a:	68fb      	ldr	r3, [r7, #12]
 801017c:	681b      	ldr	r3, [r3, #0]
 801017e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010182:	601a      	str	r2, [r3, #0]
 8010184:	e164      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 8010186:	68fb      	ldr	r3, [r7, #12]
 8010188:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 801018a:	2b02      	cmp	r3, #2
 801018c:	d11b      	bne.n	80101c6 <HAL_I2C_Mem_Read+0x18e>
 801018e:	68fb      	ldr	r3, [r7, #12]
 8010190:	681b      	ldr	r3, [r3, #0]
 8010192:	681a      	ldr	r2, [r3, #0]
 8010194:	68fb      	ldr	r3, [r7, #12]
 8010196:	681b      	ldr	r3, [r3, #0]
 8010198:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 801019c:	601a      	str	r2, [r3, #0]
 801019e:	68fb      	ldr	r3, [r7, #12]
 80101a0:	681b      	ldr	r3, [r3, #0]
 80101a2:	681a      	ldr	r2, [r3, #0]
 80101a4:	68fb      	ldr	r3, [r7, #12]
 80101a6:	681b      	ldr	r3, [r3, #0]
 80101a8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80101ac:	601a      	str	r2, [r3, #0]
 80101ae:	2300      	movs	r3, #0
 80101b0:	61bb      	str	r3, [r7, #24]
 80101b2:	68fb      	ldr	r3, [r7, #12]
 80101b4:	681b      	ldr	r3, [r3, #0]
 80101b6:	695b      	ldr	r3, [r3, #20]
 80101b8:	61bb      	str	r3, [r7, #24]
 80101ba:	68fb      	ldr	r3, [r7, #12]
 80101bc:	681b      	ldr	r3, [r3, #0]
 80101be:	699b      	ldr	r3, [r3, #24]
 80101c0:	61bb      	str	r3, [r7, #24]
 80101c2:	69bb      	ldr	r3, [r7, #24]
 80101c4:	e144      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 80101c6:	2300      	movs	r3, #0
 80101c8:	617b      	str	r3, [r7, #20]
 80101ca:	68fb      	ldr	r3, [r7, #12]
 80101cc:	681b      	ldr	r3, [r3, #0]
 80101ce:	695b      	ldr	r3, [r3, #20]
 80101d0:	617b      	str	r3, [r7, #20]
 80101d2:	68fb      	ldr	r3, [r7, #12]
 80101d4:	681b      	ldr	r3, [r3, #0]
 80101d6:	699b      	ldr	r3, [r3, #24]
 80101d8:	617b      	str	r3, [r7, #20]
 80101da:	697b      	ldr	r3, [r7, #20]
 80101dc:	e138      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 80101de:	68fb      	ldr	r3, [r7, #12]
 80101e0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80101e2:	2b03      	cmp	r3, #3
 80101e4:	f200 80f1 	bhi.w	80103ca <HAL_I2C_Mem_Read+0x392>
 80101e8:	68fb      	ldr	r3, [r7, #12]
 80101ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80101ec:	2b01      	cmp	r3, #1
 80101ee:	d123      	bne.n	8010238 <HAL_I2C_Mem_Read+0x200>
 80101f0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80101f2:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 80101f4:	68f8      	ldr	r0, [r7, #12]
 80101f6:	f001 f9e7 	bl	80115c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 80101fa:	4603      	mov	r3, r0
 80101fc:	2b00      	cmp	r3, #0
 80101fe:	d001      	beq.n	8010204 <HAL_I2C_Mem_Read+0x1cc>
 8010200:	2301      	movs	r3, #1
 8010202:	e139      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 8010204:	68fb      	ldr	r3, [r7, #12]
 8010206:	681b      	ldr	r3, [r3, #0]
 8010208:	691a      	ldr	r2, [r3, #16]
 801020a:	68fb      	ldr	r3, [r7, #12]
 801020c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801020e:	b2d2      	uxtb	r2, r2
 8010210:	701a      	strb	r2, [r3, #0]
 8010212:	68fb      	ldr	r3, [r7, #12]
 8010214:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010216:	1c5a      	adds	r2, r3, #1
 8010218:	68fb      	ldr	r3, [r7, #12]
 801021a:	625a      	str	r2, [r3, #36]	@ 0x24
 801021c:	68fb      	ldr	r3, [r7, #12]
 801021e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8010220:	3b01      	subs	r3, #1
 8010222:	b29a      	uxth	r2, r3
 8010224:	68fb      	ldr	r3, [r7, #12]
 8010226:	851a      	strh	r2, [r3, #40]	@ 0x28
 8010228:	68fb      	ldr	r3, [r7, #12]
 801022a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 801022c:	b29b      	uxth	r3, r3
 801022e:	3b01      	subs	r3, #1
 8010230:	b29a      	uxth	r2, r3
 8010232:	68fb      	ldr	r3, [r7, #12]
 8010234:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8010236:	e10b      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 8010238:	68fb      	ldr	r3, [r7, #12]
 801023a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 801023c:	2b02      	cmp	r3, #2
 801023e:	d14e      	bne.n	80102de <HAL_I2C_Mem_Read+0x2a6>
 8010240:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010242:	9300      	str	r3, [sp, #0]
 8010244:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010246:	2200      	movs	r2, #0
 8010248:	4906      	ldr	r1, [pc, #24]	@ (8010264 <HAL_I2C_Mem_Read+0x22c>)
 801024a:	68f8      	ldr	r0, [r7, #12]
 801024c:	f001 f864 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 8010250:	4603      	mov	r3, r0
 8010252:	2b00      	cmp	r3, #0
 8010254:	d008      	beq.n	8010268 <HAL_I2C_Mem_Read+0x230>
 8010256:	2301      	movs	r3, #1
 8010258:	e10e      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 801025a:	bf00      	nop
 801025c:	00100002 	.word	0x00100002
 8010260:	ffff0000 	.word	0xffff0000
 8010264:	00010004 	.word	0x00010004
 8010268:	68fb      	ldr	r3, [r7, #12]
 801026a:	681b      	ldr	r3, [r3, #0]
 801026c:	681a      	ldr	r2, [r3, #0]
 801026e:	68fb      	ldr	r3, [r7, #12]
 8010270:	681b      	ldr	r3, [r3, #0]
 8010272:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010276:	601a      	str	r2, [r3, #0]
 8010278:	68fb      	ldr	r3, [r7, #12]
 801027a:	681b      	ldr	r3, [r3, #0]
 801027c:	691a      	ldr	r2, [r3, #16]
 801027e:	68fb      	ldr	r3, [r7, #12]
 8010280:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010282:	b2d2      	uxtb	r2, r2
 8010284:	701a      	strb	r2, [r3, #0]
 8010286:	68fb      	ldr	r3, [r7, #12]
 8010288:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801028a:	1c5a      	adds	r2, r3, #1
 801028c:	68fb      	ldr	r3, [r7, #12]
 801028e:	625a      	str	r2, [r3, #36]	@ 0x24
 8010290:	68fb      	ldr	r3, [r7, #12]
 8010292:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8010294:	3b01      	subs	r3, #1
 8010296:	b29a      	uxth	r2, r3
 8010298:	68fb      	ldr	r3, [r7, #12]
 801029a:	851a      	strh	r2, [r3, #40]	@ 0x28
 801029c:	68fb      	ldr	r3, [r7, #12]
 801029e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80102a0:	b29b      	uxth	r3, r3
 80102a2:	3b01      	subs	r3, #1
 80102a4:	b29a      	uxth	r2, r3
 80102a6:	68fb      	ldr	r3, [r7, #12]
 80102a8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80102aa:	68fb      	ldr	r3, [r7, #12]
 80102ac:	681b      	ldr	r3, [r3, #0]
 80102ae:	691a      	ldr	r2, [r3, #16]
 80102b0:	68fb      	ldr	r3, [r7, #12]
 80102b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80102b4:	b2d2      	uxtb	r2, r2
 80102b6:	701a      	strb	r2, [r3, #0]
 80102b8:	68fb      	ldr	r3, [r7, #12]
 80102ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80102bc:	1c5a      	adds	r2, r3, #1
 80102be:	68fb      	ldr	r3, [r7, #12]
 80102c0:	625a      	str	r2, [r3, #36]	@ 0x24
 80102c2:	68fb      	ldr	r3, [r7, #12]
 80102c4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80102c6:	3b01      	subs	r3, #1
 80102c8:	b29a      	uxth	r2, r3
 80102ca:	68fb      	ldr	r3, [r7, #12]
 80102cc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80102ce:	68fb      	ldr	r3, [r7, #12]
 80102d0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80102d2:	b29b      	uxth	r3, r3
 80102d4:	3b01      	subs	r3, #1
 80102d6:	b29a      	uxth	r2, r3
 80102d8:	68fb      	ldr	r3, [r7, #12]
 80102da:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80102dc:	e0b8      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 80102de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80102e0:	9300      	str	r3, [sp, #0]
 80102e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80102e4:	2200      	movs	r2, #0
 80102e6:	4966      	ldr	r1, [pc, #408]	@ (8010480 <HAL_I2C_Mem_Read+0x448>)
 80102e8:	68f8      	ldr	r0, [r7, #12]
 80102ea:	f001 f815 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 80102ee:	4603      	mov	r3, r0
 80102f0:	2b00      	cmp	r3, #0
 80102f2:	d001      	beq.n	80102f8 <HAL_I2C_Mem_Read+0x2c0>
 80102f4:	2301      	movs	r3, #1
 80102f6:	e0bf      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 80102f8:	68fb      	ldr	r3, [r7, #12]
 80102fa:	681b      	ldr	r3, [r3, #0]
 80102fc:	681a      	ldr	r2, [r3, #0]
 80102fe:	68fb      	ldr	r3, [r7, #12]
 8010300:	681b      	ldr	r3, [r3, #0]
 8010302:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8010306:	601a      	str	r2, [r3, #0]
 8010308:	68fb      	ldr	r3, [r7, #12]
 801030a:	681b      	ldr	r3, [r3, #0]
 801030c:	691a      	ldr	r2, [r3, #16]
 801030e:	68fb      	ldr	r3, [r7, #12]
 8010310:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010312:	b2d2      	uxtb	r2, r2
 8010314:	701a      	strb	r2, [r3, #0]
 8010316:	68fb      	ldr	r3, [r7, #12]
 8010318:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801031a:	1c5a      	adds	r2, r3, #1
 801031c:	68fb      	ldr	r3, [r7, #12]
 801031e:	625a      	str	r2, [r3, #36]	@ 0x24
 8010320:	68fb      	ldr	r3, [r7, #12]
 8010322:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8010324:	3b01      	subs	r3, #1
 8010326:	b29a      	uxth	r2, r3
 8010328:	68fb      	ldr	r3, [r7, #12]
 801032a:	851a      	strh	r2, [r3, #40]	@ 0x28
 801032c:	68fb      	ldr	r3, [r7, #12]
 801032e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8010330:	b29b      	uxth	r3, r3
 8010332:	3b01      	subs	r3, #1
 8010334:	b29a      	uxth	r2, r3
 8010336:	68fb      	ldr	r3, [r7, #12]
 8010338:	855a      	strh	r2, [r3, #42]	@ 0x2a
 801033a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801033c:	9300      	str	r3, [sp, #0]
 801033e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8010340:	2200      	movs	r2, #0
 8010342:	494f      	ldr	r1, [pc, #316]	@ (8010480 <HAL_I2C_Mem_Read+0x448>)
 8010344:	68f8      	ldr	r0, [r7, #12]
 8010346:	f000 ffe7 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 801034a:	4603      	mov	r3, r0
 801034c:	2b00      	cmp	r3, #0
 801034e:	d001      	beq.n	8010354 <HAL_I2C_Mem_Read+0x31c>
 8010350:	2301      	movs	r3, #1
 8010352:	e091      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 8010354:	68fb      	ldr	r3, [r7, #12]
 8010356:	681b      	ldr	r3, [r3, #0]
 8010358:	681a      	ldr	r2, [r3, #0]
 801035a:	68fb      	ldr	r3, [r7, #12]
 801035c:	681b      	ldr	r3, [r3, #0]
 801035e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010362:	601a      	str	r2, [r3, #0]
 8010364:	68fb      	ldr	r3, [r7, #12]
 8010366:	681b      	ldr	r3, [r3, #0]
 8010368:	691a      	ldr	r2, [r3, #16]
 801036a:	68fb      	ldr	r3, [r7, #12]
 801036c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801036e:	b2d2      	uxtb	r2, r2
 8010370:	701a      	strb	r2, [r3, #0]
 8010372:	68fb      	ldr	r3, [r7, #12]
 8010374:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010376:	1c5a      	adds	r2, r3, #1
 8010378:	68fb      	ldr	r3, [r7, #12]
 801037a:	625a      	str	r2, [r3, #36]	@ 0x24
 801037c:	68fb      	ldr	r3, [r7, #12]
 801037e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8010380:	3b01      	subs	r3, #1
 8010382:	b29a      	uxth	r2, r3
 8010384:	68fb      	ldr	r3, [r7, #12]
 8010386:	851a      	strh	r2, [r3, #40]	@ 0x28
 8010388:	68fb      	ldr	r3, [r7, #12]
 801038a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 801038c:	b29b      	uxth	r3, r3
 801038e:	3b01      	subs	r3, #1
 8010390:	b29a      	uxth	r2, r3
 8010392:	68fb      	ldr	r3, [r7, #12]
 8010394:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8010396:	68fb      	ldr	r3, [r7, #12]
 8010398:	681b      	ldr	r3, [r3, #0]
 801039a:	691a      	ldr	r2, [r3, #16]
 801039c:	68fb      	ldr	r3, [r7, #12]
 801039e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80103a0:	b2d2      	uxtb	r2, r2
 80103a2:	701a      	strb	r2, [r3, #0]
 80103a4:	68fb      	ldr	r3, [r7, #12]
 80103a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80103a8:	1c5a      	adds	r2, r3, #1
 80103aa:	68fb      	ldr	r3, [r7, #12]
 80103ac:	625a      	str	r2, [r3, #36]	@ 0x24
 80103ae:	68fb      	ldr	r3, [r7, #12]
 80103b0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80103b2:	3b01      	subs	r3, #1
 80103b4:	b29a      	uxth	r2, r3
 80103b6:	68fb      	ldr	r3, [r7, #12]
 80103b8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80103ba:	68fb      	ldr	r3, [r7, #12]
 80103bc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80103be:	b29b      	uxth	r3, r3
 80103c0:	3b01      	subs	r3, #1
 80103c2:	b29a      	uxth	r2, r3
 80103c4:	68fb      	ldr	r3, [r7, #12]
 80103c6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80103c8:	e042      	b.n	8010450 <HAL_I2C_Mem_Read+0x418>
 80103ca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80103cc:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 80103ce:	68f8      	ldr	r0, [r7, #12]
 80103d0:	f001 f8fa 	bl	80115c8 <I2C_WaitOnRXNEFlagUntilTimeout>
 80103d4:	4603      	mov	r3, r0
 80103d6:	2b00      	cmp	r3, #0
 80103d8:	d001      	beq.n	80103de <HAL_I2C_Mem_Read+0x3a6>
 80103da:	2301      	movs	r3, #1
 80103dc:	e04c      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 80103de:	68fb      	ldr	r3, [r7, #12]
 80103e0:	681b      	ldr	r3, [r3, #0]
 80103e2:	691a      	ldr	r2, [r3, #16]
 80103e4:	68fb      	ldr	r3, [r7, #12]
 80103e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80103e8:	b2d2      	uxtb	r2, r2
 80103ea:	701a      	strb	r2, [r3, #0]
 80103ec:	68fb      	ldr	r3, [r7, #12]
 80103ee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80103f0:	1c5a      	adds	r2, r3, #1
 80103f2:	68fb      	ldr	r3, [r7, #12]
 80103f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80103f6:	68fb      	ldr	r3, [r7, #12]
 80103f8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80103fa:	3b01      	subs	r3, #1
 80103fc:	b29a      	uxth	r2, r3
 80103fe:	68fb      	ldr	r3, [r7, #12]
 8010400:	851a      	strh	r2, [r3, #40]	@ 0x28
 8010402:	68fb      	ldr	r3, [r7, #12]
 8010404:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8010406:	b29b      	uxth	r3, r3
 8010408:	3b01      	subs	r3, #1
 801040a:	b29a      	uxth	r2, r3
 801040c:	68fb      	ldr	r3, [r7, #12]
 801040e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8010410:	68fb      	ldr	r3, [r7, #12]
 8010412:	681b      	ldr	r3, [r3, #0]
 8010414:	695b      	ldr	r3, [r3, #20]
 8010416:	f003 0304 	and.w	r3, r3, #4
 801041a:	2b04      	cmp	r3, #4
 801041c:	d118      	bne.n	8010450 <HAL_I2C_Mem_Read+0x418>
 801041e:	68fb      	ldr	r3, [r7, #12]
 8010420:	681b      	ldr	r3, [r3, #0]
 8010422:	691a      	ldr	r2, [r3, #16]
 8010424:	68fb      	ldr	r3, [r7, #12]
 8010426:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010428:	b2d2      	uxtb	r2, r2
 801042a:	701a      	strb	r2, [r3, #0]
 801042c:	68fb      	ldr	r3, [r7, #12]
 801042e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010430:	1c5a      	adds	r2, r3, #1
 8010432:	68fb      	ldr	r3, [r7, #12]
 8010434:	625a      	str	r2, [r3, #36]	@ 0x24
 8010436:	68fb      	ldr	r3, [r7, #12]
 8010438:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 801043a:	3b01      	subs	r3, #1
 801043c:	b29a      	uxth	r2, r3
 801043e:	68fb      	ldr	r3, [r7, #12]
 8010440:	851a      	strh	r2, [r3, #40]	@ 0x28
 8010442:	68fb      	ldr	r3, [r7, #12]
 8010444:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8010446:	b29b      	uxth	r3, r3
 8010448:	3b01      	subs	r3, #1
 801044a:	b29a      	uxth	r2, r3
 801044c:	68fb      	ldr	r3, [r7, #12]
 801044e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8010450:	68fb      	ldr	r3, [r7, #12]
 8010452:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8010454:	2b00      	cmp	r3, #0
 8010456:	f47f aec2 	bne.w	80101de <HAL_I2C_Mem_Read+0x1a6>
 801045a:	68fb      	ldr	r3, [r7, #12]
 801045c:	2220      	movs	r2, #32
 801045e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010462:	68fb      	ldr	r3, [r7, #12]
 8010464:	2200      	movs	r2, #0
 8010466:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801046a:	68fb      	ldr	r3, [r7, #12]
 801046c:	2200      	movs	r2, #0
 801046e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010472:	2300      	movs	r3, #0
 8010474:	e000      	b.n	8010478 <HAL_I2C_Mem_Read+0x440>
 8010476:	2302      	movs	r3, #2
 8010478:	4618      	mov	r0, r3
 801047a:	3728      	adds	r7, #40	@ 0x28
 801047c:	46bd      	mov	sp, r7
 801047e:	bd80      	pop	{r7, pc}
 8010480:	00010004 	.word	0x00010004

08010484 <HAL_I2C_Mem_Read_DMA>:
 8010484:	b580      	push	{r7, lr}
 8010486:	b08c      	sub	sp, #48	@ 0x30
 8010488:	af02      	add	r7, sp, #8
 801048a:	60f8      	str	r0, [r7, #12]
 801048c:	4608      	mov	r0, r1
 801048e:	4611      	mov	r1, r2
 8010490:	461a      	mov	r2, r3
 8010492:	4603      	mov	r3, r0
 8010494:	817b      	strh	r3, [r7, #10]
 8010496:	460b      	mov	r3, r1
 8010498:	813b      	strh	r3, [r7, #8]
 801049a:	4613      	mov	r3, r2
 801049c:	80fb      	strh	r3, [r7, #6]
 801049e:	f7fd fb8b 	bl	800dbb8 <HAL_GetTick>
 80104a2:	6278      	str	r0, [r7, #36]	@ 0x24
 80104a4:	2300      	movs	r3, #0
 80104a6:	61fb      	str	r3, [r7, #28]
 80104a8:	68fb      	ldr	r3, [r7, #12]
 80104aa:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80104ae:	b2db      	uxtb	r3, r3
 80104b0:	2b20      	cmp	r3, #32
 80104b2:	f040 8176 	bne.w	80107a2 <HAL_I2C_Mem_Read_DMA+0x31e>
 80104b6:	4b95      	ldr	r3, [pc, #596]	@ (801070c <HAL_I2C_Mem_Read_DMA+0x288>)
 80104b8:	681b      	ldr	r3, [r3, #0]
 80104ba:	08db      	lsrs	r3, r3, #3
 80104bc:	4a94      	ldr	r2, [pc, #592]	@ (8010710 <HAL_I2C_Mem_Read_DMA+0x28c>)
 80104be:	fba2 2303 	umull	r2, r3, r2, r3
 80104c2:	0a1a      	lsrs	r2, r3, #8
 80104c4:	4613      	mov	r3, r2
 80104c6:	009b      	lsls	r3, r3, #2
 80104c8:	4413      	add	r3, r2
 80104ca:	009a      	lsls	r2, r3, #2
 80104cc:	4413      	add	r3, r2
 80104ce:	61fb      	str	r3, [r7, #28]
 80104d0:	69fb      	ldr	r3, [r7, #28]
 80104d2:	3b01      	subs	r3, #1
 80104d4:	61fb      	str	r3, [r7, #28]
 80104d6:	69fb      	ldr	r3, [r7, #28]
 80104d8:	2b00      	cmp	r3, #0
 80104da:	d116      	bne.n	801050a <HAL_I2C_Mem_Read_DMA+0x86>
 80104dc:	68fb      	ldr	r3, [r7, #12]
 80104de:	2200      	movs	r2, #0
 80104e0:	631a      	str	r2, [r3, #48]	@ 0x30
 80104e2:	68fb      	ldr	r3, [r7, #12]
 80104e4:	2220      	movs	r2, #32
 80104e6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80104ea:	68fb      	ldr	r3, [r7, #12]
 80104ec:	2200      	movs	r2, #0
 80104ee:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80104f2:	68fb      	ldr	r3, [r7, #12]
 80104f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80104f6:	f043 0220 	orr.w	r2, r3, #32
 80104fa:	68fb      	ldr	r3, [r7, #12]
 80104fc:	641a      	str	r2, [r3, #64]	@ 0x40
 80104fe:	68fb      	ldr	r3, [r7, #12]
 8010500:	2200      	movs	r2, #0
 8010502:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010506:	2301      	movs	r3, #1
 8010508:	e14c      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 801050a:	68fb      	ldr	r3, [r7, #12]
 801050c:	681b      	ldr	r3, [r3, #0]
 801050e:	699b      	ldr	r3, [r3, #24]
 8010510:	f003 0302 	and.w	r3, r3, #2
 8010514:	2b02      	cmp	r3, #2
 8010516:	d0db      	beq.n	80104d0 <HAL_I2C_Mem_Read_DMA+0x4c>
 8010518:	68fb      	ldr	r3, [r7, #12]
 801051a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 801051e:	2b01      	cmp	r3, #1
 8010520:	d101      	bne.n	8010526 <HAL_I2C_Mem_Read_DMA+0xa2>
 8010522:	2302      	movs	r3, #2
 8010524:	e13e      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 8010526:	68fb      	ldr	r3, [r7, #12]
 8010528:	2201      	movs	r2, #1
 801052a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801052e:	68fb      	ldr	r3, [r7, #12]
 8010530:	681b      	ldr	r3, [r3, #0]
 8010532:	681b      	ldr	r3, [r3, #0]
 8010534:	f003 0301 	and.w	r3, r3, #1
 8010538:	2b01      	cmp	r3, #1
 801053a:	d007      	beq.n	801054c <HAL_I2C_Mem_Read_DMA+0xc8>
 801053c:	68fb      	ldr	r3, [r7, #12]
 801053e:	681b      	ldr	r3, [r3, #0]
 8010540:	681a      	ldr	r2, [r3, #0]
 8010542:	68fb      	ldr	r3, [r7, #12]
 8010544:	681b      	ldr	r3, [r3, #0]
 8010546:	f042 0201 	orr.w	r2, r2, #1
 801054a:	601a      	str	r2, [r3, #0]
 801054c:	68fb      	ldr	r3, [r7, #12]
 801054e:	681b      	ldr	r3, [r3, #0]
 8010550:	681a      	ldr	r2, [r3, #0]
 8010552:	68fb      	ldr	r3, [r7, #12]
 8010554:	681b      	ldr	r3, [r3, #0]
 8010556:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 801055a:	601a      	str	r2, [r3, #0]
 801055c:	68fb      	ldr	r3, [r7, #12]
 801055e:	2222      	movs	r2, #34	@ 0x22
 8010560:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010564:	68fb      	ldr	r3, [r7, #12]
 8010566:	2240      	movs	r2, #64	@ 0x40
 8010568:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801056c:	68fb      	ldr	r3, [r7, #12]
 801056e:	2200      	movs	r2, #0
 8010570:	641a      	str	r2, [r3, #64]	@ 0x40
 8010572:	68fb      	ldr	r3, [r7, #12]
 8010574:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8010576:	625a      	str	r2, [r3, #36]	@ 0x24
 8010578:	68fb      	ldr	r3, [r7, #12]
 801057a:	8eba      	ldrh	r2, [r7, #52]	@ 0x34
 801057c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 801057e:	68fb      	ldr	r3, [r7, #12]
 8010580:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8010582:	b29a      	uxth	r2, r3
 8010584:	68fb      	ldr	r3, [r7, #12]
 8010586:	851a      	strh	r2, [r3, #40]	@ 0x28
 8010588:	68fb      	ldr	r3, [r7, #12]
 801058a:	4a62      	ldr	r2, [pc, #392]	@ (8010714 <HAL_I2C_Mem_Read_DMA+0x290>)
 801058c:	62da      	str	r2, [r3, #44]	@ 0x2c
 801058e:	897a      	ldrh	r2, [r7, #10]
 8010590:	68fb      	ldr	r3, [r7, #12]
 8010592:	645a      	str	r2, [r3, #68]	@ 0x44
 8010594:	893a      	ldrh	r2, [r7, #8]
 8010596:	68fb      	ldr	r3, [r7, #12]
 8010598:	649a      	str	r2, [r3, #72]	@ 0x48
 801059a:	88fa      	ldrh	r2, [r7, #6]
 801059c:	68fb      	ldr	r3, [r7, #12]
 801059e:	64da      	str	r2, [r3, #76]	@ 0x4c
 80105a0:	68fb      	ldr	r3, [r7, #12]
 80105a2:	2200      	movs	r2, #0
 80105a4:	651a      	str	r2, [r3, #80]	@ 0x50
 80105a6:	68fb      	ldr	r3, [r7, #12]
 80105a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80105aa:	2b00      	cmp	r3, #0
 80105ac:	f000 80cc 	beq.w	8010748 <HAL_I2C_Mem_Read_DMA+0x2c4>
 80105b0:	68fb      	ldr	r3, [r7, #12]
 80105b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105b4:	2b00      	cmp	r3, #0
 80105b6:	d02d      	beq.n	8010614 <HAL_I2C_Mem_Read_DMA+0x190>
 80105b8:	68fb      	ldr	r3, [r7, #12]
 80105ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105bc:	4a56      	ldr	r2, [pc, #344]	@ (8010718 <HAL_I2C_Mem_Read_DMA+0x294>)
 80105be:	63da      	str	r2, [r3, #60]	@ 0x3c
 80105c0:	68fb      	ldr	r3, [r7, #12]
 80105c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105c4:	4a55      	ldr	r2, [pc, #340]	@ (801071c <HAL_I2C_Mem_Read_DMA+0x298>)
 80105c6:	64da      	str	r2, [r3, #76]	@ 0x4c
 80105c8:	68fb      	ldr	r3, [r7, #12]
 80105ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105cc:	2200      	movs	r2, #0
 80105ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80105d0:	68fb      	ldr	r3, [r7, #12]
 80105d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105d4:	2200      	movs	r2, #0
 80105d6:	645a      	str	r2, [r3, #68]	@ 0x44
 80105d8:	68fb      	ldr	r3, [r7, #12]
 80105da:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105dc:	2200      	movs	r2, #0
 80105de:	649a      	str	r2, [r3, #72]	@ 0x48
 80105e0:	68fb      	ldr	r3, [r7, #12]
 80105e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80105e4:	2200      	movs	r2, #0
 80105e6:	651a      	str	r2, [r3, #80]	@ 0x50
 80105e8:	68fb      	ldr	r3, [r7, #12]
 80105ea:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 80105ec:	68fb      	ldr	r3, [r7, #12]
 80105ee:	681b      	ldr	r3, [r3, #0]
 80105f0:	3310      	adds	r3, #16
 80105f2:	4619      	mov	r1, r3
 80105f4:	68fb      	ldr	r3, [r7, #12]
 80105f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80105f8:	461a      	mov	r2, r3
 80105fa:	68fb      	ldr	r3, [r7, #12]
 80105fc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80105fe:	f7fe fdaf 	bl	800f160 <HAL_DMA_Start_IT>
 8010602:	4603      	mov	r3, r0
 8010604:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8010608:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 801060c:	2b00      	cmp	r3, #0
 801060e:	f040 8087 	bne.w	8010720 <HAL_I2C_Mem_Read_DMA+0x29c>
 8010612:	e013      	b.n	801063c <HAL_I2C_Mem_Read_DMA+0x1b8>
 8010614:	68fb      	ldr	r3, [r7, #12]
 8010616:	2220      	movs	r2, #32
 8010618:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801061c:	68fb      	ldr	r3, [r7, #12]
 801061e:	2200      	movs	r2, #0
 8010620:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8010624:	68fb      	ldr	r3, [r7, #12]
 8010626:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010628:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 801062c:	68fb      	ldr	r3, [r7, #12]
 801062e:	641a      	str	r2, [r3, #64]	@ 0x40
 8010630:	68fb      	ldr	r3, [r7, #12]
 8010632:	2200      	movs	r2, #0
 8010634:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010638:	2301      	movs	r3, #1
 801063a:	e0b3      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 801063c:	88f8      	ldrh	r0, [r7, #6]
 801063e:	893a      	ldrh	r2, [r7, #8]
 8010640:	8979      	ldrh	r1, [r7, #10]
 8010642:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010644:	9301      	str	r3, [sp, #4]
 8010646:	2323      	movs	r3, #35	@ 0x23
 8010648:	9300      	str	r3, [sp, #0]
 801064a:	4603      	mov	r3, r0
 801064c:	68f8      	ldr	r0, [r7, #12]
 801064e:	f000 fbc1 	bl	8010dd4 <I2C_RequestMemoryRead>
 8010652:	4603      	mov	r3, r0
 8010654:	2b00      	cmp	r3, #0
 8010656:	d023      	beq.n	80106a0 <HAL_I2C_Mem_Read_DMA+0x21c>
 8010658:	68fb      	ldr	r3, [r7, #12]
 801065a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801065c:	4618      	mov	r0, r3
 801065e:	f7fe fe47 	bl	800f2f0 <HAL_DMA_Abort_IT>
 8010662:	4603      	mov	r3, r0
 8010664:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8010668:	68fb      	ldr	r3, [r7, #12]
 801066a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801066c:	2200      	movs	r2, #0
 801066e:	63da      	str	r2, [r3, #60]	@ 0x3c
 8010670:	68fb      	ldr	r3, [r7, #12]
 8010672:	681b      	ldr	r3, [r3, #0]
 8010674:	681a      	ldr	r2, [r3, #0]
 8010676:	68fb      	ldr	r3, [r7, #12]
 8010678:	681b      	ldr	r3, [r3, #0]
 801067a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 801067e:	601a      	str	r2, [r3, #0]
 8010680:	68fb      	ldr	r3, [r7, #12]
 8010682:	2200      	movs	r2, #0
 8010684:	851a      	strh	r2, [r3, #40]	@ 0x28
 8010686:	68fb      	ldr	r3, [r7, #12]
 8010688:	2200      	movs	r2, #0
 801068a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 801068c:	68fb      	ldr	r3, [r7, #12]
 801068e:	681b      	ldr	r3, [r3, #0]
 8010690:	681a      	ldr	r2, [r3, #0]
 8010692:	68fb      	ldr	r3, [r7, #12]
 8010694:	681b      	ldr	r3, [r3, #0]
 8010696:	f022 0201 	bic.w	r2, r2, #1
 801069a:	601a      	str	r2, [r3, #0]
 801069c:	2301      	movs	r3, #1
 801069e:	e081      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 80106a0:	68fb      	ldr	r3, [r7, #12]
 80106a2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80106a4:	2b01      	cmp	r3, #1
 80106a6:	d108      	bne.n	80106ba <HAL_I2C_Mem_Read_DMA+0x236>
 80106a8:	68fb      	ldr	r3, [r7, #12]
 80106aa:	681b      	ldr	r3, [r3, #0]
 80106ac:	681a      	ldr	r2, [r3, #0]
 80106ae:	68fb      	ldr	r3, [r7, #12]
 80106b0:	681b      	ldr	r3, [r3, #0]
 80106b2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80106b6:	601a      	str	r2, [r3, #0]
 80106b8:	e007      	b.n	80106ca <HAL_I2C_Mem_Read_DMA+0x246>
 80106ba:	68fb      	ldr	r3, [r7, #12]
 80106bc:	681b      	ldr	r3, [r3, #0]
 80106be:	685a      	ldr	r2, [r3, #4]
 80106c0:	68fb      	ldr	r3, [r7, #12]
 80106c2:	681b      	ldr	r3, [r3, #0]
 80106c4:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80106c8:	605a      	str	r2, [r3, #4]
 80106ca:	2300      	movs	r3, #0
 80106cc:	61bb      	str	r3, [r7, #24]
 80106ce:	68fb      	ldr	r3, [r7, #12]
 80106d0:	681b      	ldr	r3, [r3, #0]
 80106d2:	695b      	ldr	r3, [r3, #20]
 80106d4:	61bb      	str	r3, [r7, #24]
 80106d6:	68fb      	ldr	r3, [r7, #12]
 80106d8:	681b      	ldr	r3, [r3, #0]
 80106da:	699b      	ldr	r3, [r3, #24]
 80106dc:	61bb      	str	r3, [r7, #24]
 80106de:	69bb      	ldr	r3, [r7, #24]
 80106e0:	68fb      	ldr	r3, [r7, #12]
 80106e2:	2200      	movs	r2, #0
 80106e4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80106e8:	68fb      	ldr	r3, [r7, #12]
 80106ea:	681b      	ldr	r3, [r3, #0]
 80106ec:	685a      	ldr	r2, [r3, #4]
 80106ee:	68fb      	ldr	r3, [r7, #12]
 80106f0:	681b      	ldr	r3, [r3, #0]
 80106f2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80106f6:	605a      	str	r2, [r3, #4]
 80106f8:	68fb      	ldr	r3, [r7, #12]
 80106fa:	681b      	ldr	r3, [r3, #0]
 80106fc:	685a      	ldr	r2, [r3, #4]
 80106fe:	68fb      	ldr	r3, [r7, #12]
 8010700:	681b      	ldr	r3, [r3, #0]
 8010702:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8010706:	605a      	str	r2, [r3, #4]
 8010708:	e049      	b.n	801079e <HAL_I2C_Mem_Read_DMA+0x31a>
 801070a:	bf00      	nop
 801070c:	20000004 	.word	0x20000004
 8010710:	14f8b589 	.word	0x14f8b589
 8010714:	ffff0000 	.word	0xffff0000
 8010718:	08010fa5 	.word	0x08010fa5
 801071c:	0801114f 	.word	0x0801114f
 8010720:	68fb      	ldr	r3, [r7, #12]
 8010722:	2220      	movs	r2, #32
 8010724:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010728:	68fb      	ldr	r3, [r7, #12]
 801072a:	2200      	movs	r2, #0
 801072c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8010730:	68fb      	ldr	r3, [r7, #12]
 8010732:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010734:	f043 0210 	orr.w	r2, r3, #16
 8010738:	68fb      	ldr	r3, [r7, #12]
 801073a:	641a      	str	r2, [r3, #64]	@ 0x40
 801073c:	68fb      	ldr	r3, [r7, #12]
 801073e:	2200      	movs	r2, #0
 8010740:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8010744:	2301      	movs	r3, #1
 8010746:	e02d      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 8010748:	88f8      	ldrh	r0, [r7, #6]
 801074a:	893a      	ldrh	r2, [r7, #8]
 801074c:	8979      	ldrh	r1, [r7, #10]
 801074e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010750:	9301      	str	r3, [sp, #4]
 8010752:	2323      	movs	r3, #35	@ 0x23
 8010754:	9300      	str	r3, [sp, #0]
 8010756:	4603      	mov	r3, r0
 8010758:	68f8      	ldr	r0, [r7, #12]
 801075a:	f000 fb3b 	bl	8010dd4 <I2C_RequestMemoryRead>
 801075e:	4603      	mov	r3, r0
 8010760:	2b00      	cmp	r3, #0
 8010762:	d001      	beq.n	8010768 <HAL_I2C_Mem_Read_DMA+0x2e4>
 8010764:	2301      	movs	r3, #1
 8010766:	e01d      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 8010768:	2300      	movs	r3, #0
 801076a:	617b      	str	r3, [r7, #20]
 801076c:	68fb      	ldr	r3, [r7, #12]
 801076e:	681b      	ldr	r3, [r3, #0]
 8010770:	695b      	ldr	r3, [r3, #20]
 8010772:	617b      	str	r3, [r7, #20]
 8010774:	68fb      	ldr	r3, [r7, #12]
 8010776:	681b      	ldr	r3, [r3, #0]
 8010778:	699b      	ldr	r3, [r3, #24]
 801077a:	617b      	str	r3, [r7, #20]
 801077c:	697b      	ldr	r3, [r7, #20]
 801077e:	68fb      	ldr	r3, [r7, #12]
 8010780:	681b      	ldr	r3, [r3, #0]
 8010782:	681a      	ldr	r2, [r3, #0]
 8010784:	68fb      	ldr	r3, [r7, #12]
 8010786:	681b      	ldr	r3, [r3, #0]
 8010788:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 801078c:	601a      	str	r2, [r3, #0]
 801078e:	68fb      	ldr	r3, [r7, #12]
 8010790:	2220      	movs	r2, #32
 8010792:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010796:	68fb      	ldr	r3, [r7, #12]
 8010798:	2200      	movs	r2, #0
 801079a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801079e:	2300      	movs	r3, #0
 80107a0:	e000      	b.n	80107a4 <HAL_I2C_Mem_Read_DMA+0x320>
 80107a2:	2302      	movs	r3, #2
 80107a4:	4618      	mov	r0, r3
 80107a6:	3728      	adds	r7, #40	@ 0x28
 80107a8:	46bd      	mov	sp, r7
 80107aa:	bd80      	pop	{r7, pc}

080107ac <HAL_I2C_ER_IRQHandler>:
 80107ac:	b580      	push	{r7, lr}
 80107ae:	b08a      	sub	sp, #40	@ 0x28
 80107b0:	af00      	add	r7, sp, #0
 80107b2:	6078      	str	r0, [r7, #4]
 80107b4:	687b      	ldr	r3, [r7, #4]
 80107b6:	681b      	ldr	r3, [r3, #0]
 80107b8:	695b      	ldr	r3, [r3, #20]
 80107ba:	623b      	str	r3, [r7, #32]
 80107bc:	687b      	ldr	r3, [r7, #4]
 80107be:	681b      	ldr	r3, [r3, #0]
 80107c0:	685b      	ldr	r3, [r3, #4]
 80107c2:	61fb      	str	r3, [r7, #28]
 80107c4:	2300      	movs	r3, #0
 80107c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80107c8:	687b      	ldr	r3, [r7, #4]
 80107ca:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80107ce:	76fb      	strb	r3, [r7, #27]
 80107d0:	6a3b      	ldr	r3, [r7, #32]
 80107d2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80107d6:	2b00      	cmp	r3, #0
 80107d8:	d00d      	beq.n	80107f6 <HAL_I2C_ER_IRQHandler+0x4a>
 80107da:	69fb      	ldr	r3, [r7, #28]
 80107dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80107e0:	2b00      	cmp	r3, #0
 80107e2:	d008      	beq.n	80107f6 <HAL_I2C_ER_IRQHandler+0x4a>
 80107e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80107e6:	f043 0301 	orr.w	r3, r3, #1
 80107ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80107ec:	687b      	ldr	r3, [r7, #4]
 80107ee:	681b      	ldr	r3, [r3, #0]
 80107f0:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 80107f4:	615a      	str	r2, [r3, #20]
 80107f6:	6a3b      	ldr	r3, [r7, #32]
 80107f8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80107fc:	2b00      	cmp	r3, #0
 80107fe:	d00d      	beq.n	801081c <HAL_I2C_ER_IRQHandler+0x70>
 8010800:	69fb      	ldr	r3, [r7, #28]
 8010802:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010806:	2b00      	cmp	r3, #0
 8010808:	d008      	beq.n	801081c <HAL_I2C_ER_IRQHandler+0x70>
 801080a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801080c:	f043 0302 	orr.w	r3, r3, #2
 8010810:	627b      	str	r3, [r7, #36]	@ 0x24
 8010812:	687b      	ldr	r3, [r7, #4]
 8010814:	681b      	ldr	r3, [r3, #0]
 8010816:	f46f 7200 	mvn.w	r2, #512	@ 0x200
 801081a:	615a      	str	r2, [r3, #20]
 801081c:	6a3b      	ldr	r3, [r7, #32]
 801081e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8010822:	2b00      	cmp	r3, #0
 8010824:	d03e      	beq.n	80108a4 <HAL_I2C_ER_IRQHandler+0xf8>
 8010826:	69fb      	ldr	r3, [r7, #28]
 8010828:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801082c:	2b00      	cmp	r3, #0
 801082e:	d039      	beq.n	80108a4 <HAL_I2C_ER_IRQHandler+0xf8>
 8010830:	7efb      	ldrb	r3, [r7, #27]
 8010832:	76bb      	strb	r3, [r7, #26]
 8010834:	687b      	ldr	r3, [r7, #4]
 8010836:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8010838:	b29b      	uxth	r3, r3
 801083a:	617b      	str	r3, [r7, #20]
 801083c:	687b      	ldr	r3, [r7, #4]
 801083e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8010842:	74fb      	strb	r3, [r7, #19]
 8010844:	687b      	ldr	r3, [r7, #4]
 8010846:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010848:	60fb      	str	r3, [r7, #12]
 801084a:	7ebb      	ldrb	r3, [r7, #26]
 801084c:	2b20      	cmp	r3, #32
 801084e:	d112      	bne.n	8010876 <HAL_I2C_ER_IRQHandler+0xca>
 8010850:	697b      	ldr	r3, [r7, #20]
 8010852:	2b00      	cmp	r3, #0
 8010854:	d10f      	bne.n	8010876 <HAL_I2C_ER_IRQHandler+0xca>
 8010856:	7cfb      	ldrb	r3, [r7, #19]
 8010858:	2b21      	cmp	r3, #33	@ 0x21
 801085a:	d008      	beq.n	801086e <HAL_I2C_ER_IRQHandler+0xc2>
 801085c:	7cfb      	ldrb	r3, [r7, #19]
 801085e:	2b29      	cmp	r3, #41	@ 0x29
 8010860:	d005      	beq.n	801086e <HAL_I2C_ER_IRQHandler+0xc2>
 8010862:	7cfb      	ldrb	r3, [r7, #19]
 8010864:	2b28      	cmp	r3, #40	@ 0x28
 8010866:	d106      	bne.n	8010876 <HAL_I2C_ER_IRQHandler+0xca>
 8010868:	68fb      	ldr	r3, [r7, #12]
 801086a:	2b21      	cmp	r3, #33	@ 0x21
 801086c:	d103      	bne.n	8010876 <HAL_I2C_ER_IRQHandler+0xca>
 801086e:	6878      	ldr	r0, [r7, #4]
 8010870:	f000 f878 	bl	8010964 <I2C_Slave_AF>
 8010874:	e016      	b.n	80108a4 <HAL_I2C_ER_IRQHandler+0xf8>
 8010876:	687b      	ldr	r3, [r7, #4]
 8010878:	681b      	ldr	r3, [r3, #0]
 801087a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 801087e:	615a      	str	r2, [r3, #20]
 8010880:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010882:	f043 0304 	orr.w	r3, r3, #4
 8010886:	627b      	str	r3, [r7, #36]	@ 0x24
 8010888:	7efb      	ldrb	r3, [r7, #27]
 801088a:	2b10      	cmp	r3, #16
 801088c:	d002      	beq.n	8010894 <HAL_I2C_ER_IRQHandler+0xe8>
 801088e:	7efb      	ldrb	r3, [r7, #27]
 8010890:	2b40      	cmp	r3, #64	@ 0x40
 8010892:	d107      	bne.n	80108a4 <HAL_I2C_ER_IRQHandler+0xf8>
 8010894:	687b      	ldr	r3, [r7, #4]
 8010896:	681b      	ldr	r3, [r3, #0]
 8010898:	681a      	ldr	r2, [r3, #0]
 801089a:	687b      	ldr	r3, [r7, #4]
 801089c:	681b      	ldr	r3, [r3, #0]
 801089e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80108a2:	601a      	str	r2, [r3, #0]
 80108a4:	6a3b      	ldr	r3, [r7, #32]
 80108a6:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80108aa:	2b00      	cmp	r3, #0
 80108ac:	d00d      	beq.n	80108ca <HAL_I2C_ER_IRQHandler+0x11e>
 80108ae:	69fb      	ldr	r3, [r7, #28]
 80108b0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80108b4:	2b00      	cmp	r3, #0
 80108b6:	d008      	beq.n	80108ca <HAL_I2C_ER_IRQHandler+0x11e>
 80108b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80108ba:	f043 0308 	orr.w	r3, r3, #8
 80108be:	627b      	str	r3, [r7, #36]	@ 0x24
 80108c0:	687b      	ldr	r3, [r7, #4]
 80108c2:	681b      	ldr	r3, [r3, #0]
 80108c4:	f46f 6200 	mvn.w	r2, #2048	@ 0x800
 80108c8:	615a      	str	r2, [r3, #20]
 80108ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80108cc:	2b00      	cmp	r3, #0
 80108ce:	d008      	beq.n	80108e2 <HAL_I2C_ER_IRQHandler+0x136>
 80108d0:	687b      	ldr	r3, [r7, #4]
 80108d2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80108d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80108d6:	431a      	orrs	r2, r3
 80108d8:	687b      	ldr	r3, [r7, #4]
 80108da:	641a      	str	r2, [r3, #64]	@ 0x40
 80108dc:	6878      	ldr	r0, [r7, #4]
 80108de:	f000 f8b1 	bl	8010a44 <I2C_ITError>
 80108e2:	bf00      	nop
 80108e4:	3728      	adds	r7, #40	@ 0x28
 80108e6:	46bd      	mov	sp, r7
 80108e8:	bd80      	pop	{r7, pc}

080108ea <HAL_I2C_MasterRxCpltCallback>:
 80108ea:	b480      	push	{r7}
 80108ec:	b083      	sub	sp, #12
 80108ee:	af00      	add	r7, sp, #0
 80108f0:	6078      	str	r0, [r7, #4]
 80108f2:	bf00      	nop
 80108f4:	370c      	adds	r7, #12
 80108f6:	46bd      	mov	sp, r7
 80108f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80108fc:	4770      	bx	lr

080108fe <HAL_I2C_SlaveTxCpltCallback>:
 80108fe:	b480      	push	{r7}
 8010900:	b083      	sub	sp, #12
 8010902:	af00      	add	r7, sp, #0
 8010904:	6078      	str	r0, [r7, #4]
 8010906:	bf00      	nop
 8010908:	370c      	adds	r7, #12
 801090a:	46bd      	mov	sp, r7
 801090c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010910:	4770      	bx	lr

08010912 <HAL_I2C_SlaveRxCpltCallback>:
 8010912:	b480      	push	{r7}
 8010914:	b083      	sub	sp, #12
 8010916:	af00      	add	r7, sp, #0
 8010918:	6078      	str	r0, [r7, #4]
 801091a:	bf00      	nop
 801091c:	370c      	adds	r7, #12
 801091e:	46bd      	mov	sp, r7
 8010920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010924:	4770      	bx	lr

08010926 <HAL_I2C_ListenCpltCallback>:
 8010926:	b480      	push	{r7}
 8010928:	b083      	sub	sp, #12
 801092a:	af00      	add	r7, sp, #0
 801092c:	6078      	str	r0, [r7, #4]
 801092e:	bf00      	nop
 8010930:	370c      	adds	r7, #12
 8010932:	46bd      	mov	sp, r7
 8010934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010938:	4770      	bx	lr

0801093a <HAL_I2C_ErrorCallback>:
 801093a:	b480      	push	{r7}
 801093c:	b083      	sub	sp, #12
 801093e:	af00      	add	r7, sp, #0
 8010940:	6078      	str	r0, [r7, #4]
 8010942:	bf00      	nop
 8010944:	370c      	adds	r7, #12
 8010946:	46bd      	mov	sp, r7
 8010948:	f85d 7b04 	ldr.w	r7, [sp], #4
 801094c:	4770      	bx	lr

0801094e <HAL_I2C_AbortCpltCallback>:
 801094e:	b480      	push	{r7}
 8010950:	b083      	sub	sp, #12
 8010952:	af00      	add	r7, sp, #0
 8010954:	6078      	str	r0, [r7, #4]
 8010956:	bf00      	nop
 8010958:	370c      	adds	r7, #12
 801095a:	46bd      	mov	sp, r7
 801095c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010960:	4770      	bx	lr
	...

08010964 <I2C_Slave_AF>:
 8010964:	b580      	push	{r7, lr}
 8010966:	b084      	sub	sp, #16
 8010968:	af00      	add	r7, sp, #0
 801096a:	6078      	str	r0, [r7, #4]
 801096c:	687b      	ldr	r3, [r7, #4]
 801096e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8010972:	73fb      	strb	r3, [r7, #15]
 8010974:	687b      	ldr	r3, [r7, #4]
 8010976:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010978:	60bb      	str	r3, [r7, #8]
 801097a:	68bb      	ldr	r3, [r7, #8]
 801097c:	2b08      	cmp	r3, #8
 801097e:	d002      	beq.n	8010986 <I2C_Slave_AF+0x22>
 8010980:	68bb      	ldr	r3, [r7, #8]
 8010982:	2b20      	cmp	r3, #32
 8010984:	d129      	bne.n	80109da <I2C_Slave_AF+0x76>
 8010986:	7bfb      	ldrb	r3, [r7, #15]
 8010988:	2b28      	cmp	r3, #40	@ 0x28
 801098a:	d126      	bne.n	80109da <I2C_Slave_AF+0x76>
 801098c:	687b      	ldr	r3, [r7, #4]
 801098e:	4a2c      	ldr	r2, [pc, #176]	@ (8010a40 <I2C_Slave_AF+0xdc>)
 8010990:	62da      	str	r2, [r3, #44]	@ 0x2c
 8010992:	687b      	ldr	r3, [r7, #4]
 8010994:	681b      	ldr	r3, [r3, #0]
 8010996:	685a      	ldr	r2, [r3, #4]
 8010998:	687b      	ldr	r3, [r7, #4]
 801099a:	681b      	ldr	r3, [r3, #0]
 801099c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 80109a0:	605a      	str	r2, [r3, #4]
 80109a2:	687b      	ldr	r3, [r7, #4]
 80109a4:	681b      	ldr	r3, [r3, #0]
 80109a6:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80109aa:	615a      	str	r2, [r3, #20]
 80109ac:	687b      	ldr	r3, [r7, #4]
 80109ae:	681b      	ldr	r3, [r3, #0]
 80109b0:	681a      	ldr	r2, [r3, #0]
 80109b2:	687b      	ldr	r3, [r7, #4]
 80109b4:	681b      	ldr	r3, [r3, #0]
 80109b6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80109ba:	601a      	str	r2, [r3, #0]
 80109bc:	687b      	ldr	r3, [r7, #4]
 80109be:	2200      	movs	r2, #0
 80109c0:	631a      	str	r2, [r3, #48]	@ 0x30
 80109c2:	687b      	ldr	r3, [r7, #4]
 80109c4:	2220      	movs	r2, #32
 80109c6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80109ca:	687b      	ldr	r3, [r7, #4]
 80109cc:	2200      	movs	r2, #0
 80109ce:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80109d2:	6878      	ldr	r0, [r7, #4]
 80109d4:	f7ff ffa7 	bl	8010926 <HAL_I2C_ListenCpltCallback>
 80109d8:	e02e      	b.n	8010a38 <I2C_Slave_AF+0xd4>
 80109da:	7bfb      	ldrb	r3, [r7, #15]
 80109dc:	2b21      	cmp	r3, #33	@ 0x21
 80109de:	d126      	bne.n	8010a2e <I2C_Slave_AF+0xca>
 80109e0:	687b      	ldr	r3, [r7, #4]
 80109e2:	4a17      	ldr	r2, [pc, #92]	@ (8010a40 <I2C_Slave_AF+0xdc>)
 80109e4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80109e6:	687b      	ldr	r3, [r7, #4]
 80109e8:	2221      	movs	r2, #33	@ 0x21
 80109ea:	631a      	str	r2, [r3, #48]	@ 0x30
 80109ec:	687b      	ldr	r3, [r7, #4]
 80109ee:	2220      	movs	r2, #32
 80109f0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80109f4:	687b      	ldr	r3, [r7, #4]
 80109f6:	2200      	movs	r2, #0
 80109f8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80109fc:	687b      	ldr	r3, [r7, #4]
 80109fe:	681b      	ldr	r3, [r3, #0]
 8010a00:	685a      	ldr	r2, [r3, #4]
 8010a02:	687b      	ldr	r3, [r7, #4]
 8010a04:	681b      	ldr	r3, [r3, #0]
 8010a06:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8010a0a:	605a      	str	r2, [r3, #4]
 8010a0c:	687b      	ldr	r3, [r7, #4]
 8010a0e:	681b      	ldr	r3, [r3, #0]
 8010a10:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8010a14:	615a      	str	r2, [r3, #20]
 8010a16:	687b      	ldr	r3, [r7, #4]
 8010a18:	681b      	ldr	r3, [r3, #0]
 8010a1a:	681a      	ldr	r2, [r3, #0]
 8010a1c:	687b      	ldr	r3, [r7, #4]
 8010a1e:	681b      	ldr	r3, [r3, #0]
 8010a20:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8010a24:	601a      	str	r2, [r3, #0]
 8010a26:	6878      	ldr	r0, [r7, #4]
 8010a28:	f7ff ff69 	bl	80108fe <HAL_I2C_SlaveTxCpltCallback>
 8010a2c:	e004      	b.n	8010a38 <I2C_Slave_AF+0xd4>
 8010a2e:	687b      	ldr	r3, [r7, #4]
 8010a30:	681b      	ldr	r3, [r3, #0]
 8010a32:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8010a36:	615a      	str	r2, [r3, #20]
 8010a38:	bf00      	nop
 8010a3a:	3710      	adds	r7, #16
 8010a3c:	46bd      	mov	sp, r7
 8010a3e:	bd80      	pop	{r7, pc}
 8010a40:	ffff0000 	.word	0xffff0000

08010a44 <I2C_ITError>:
 8010a44:	b580      	push	{r7, lr}
 8010a46:	b084      	sub	sp, #16
 8010a48:	af00      	add	r7, sp, #0
 8010a4a:	6078      	str	r0, [r7, #4]
 8010a4c:	687b      	ldr	r3, [r7, #4]
 8010a4e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8010a52:	73fb      	strb	r3, [r7, #15]
 8010a54:	687b      	ldr	r3, [r7, #4]
 8010a56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8010a5a:	73bb      	strb	r3, [r7, #14]
 8010a5c:	7bbb      	ldrb	r3, [r7, #14]
 8010a5e:	2b10      	cmp	r3, #16
 8010a60:	d002      	beq.n	8010a68 <I2C_ITError+0x24>
 8010a62:	7bbb      	ldrb	r3, [r7, #14]
 8010a64:	2b40      	cmp	r3, #64	@ 0x40
 8010a66:	d10a      	bne.n	8010a7e <I2C_ITError+0x3a>
 8010a68:	7bfb      	ldrb	r3, [r7, #15]
 8010a6a:	2b22      	cmp	r3, #34	@ 0x22
 8010a6c:	d107      	bne.n	8010a7e <I2C_ITError+0x3a>
 8010a6e:	687b      	ldr	r3, [r7, #4]
 8010a70:	681b      	ldr	r3, [r3, #0]
 8010a72:	681a      	ldr	r2, [r3, #0]
 8010a74:	687b      	ldr	r3, [r7, #4]
 8010a76:	681b      	ldr	r3, [r3, #0]
 8010a78:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010a7c:	601a      	str	r2, [r3, #0]
 8010a7e:	7bfb      	ldrb	r3, [r7, #15]
 8010a80:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8010a84:	2b28      	cmp	r3, #40	@ 0x28
 8010a86:	d107      	bne.n	8010a98 <I2C_ITError+0x54>
 8010a88:	687b      	ldr	r3, [r7, #4]
 8010a8a:	2200      	movs	r2, #0
 8010a8c:	631a      	str	r2, [r3, #48]	@ 0x30
 8010a8e:	687b      	ldr	r3, [r7, #4]
 8010a90:	2228      	movs	r2, #40	@ 0x28
 8010a92:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010a96:	e015      	b.n	8010ac4 <I2C_ITError+0x80>
 8010a98:	687b      	ldr	r3, [r7, #4]
 8010a9a:	681b      	ldr	r3, [r3, #0]
 8010a9c:	685b      	ldr	r3, [r3, #4]
 8010a9e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8010aa2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8010aa6:	d00a      	beq.n	8010abe <I2C_ITError+0x7a>
 8010aa8:	7bfb      	ldrb	r3, [r7, #15]
 8010aaa:	2b60      	cmp	r3, #96	@ 0x60
 8010aac:	d007      	beq.n	8010abe <I2C_ITError+0x7a>
 8010aae:	687b      	ldr	r3, [r7, #4]
 8010ab0:	2220      	movs	r2, #32
 8010ab2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010ab6:	687b      	ldr	r3, [r7, #4]
 8010ab8:	2200      	movs	r2, #0
 8010aba:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	2200      	movs	r2, #0
 8010ac2:	631a      	str	r2, [r3, #48]	@ 0x30
 8010ac4:	687b      	ldr	r3, [r7, #4]
 8010ac6:	681b      	ldr	r3, [r3, #0]
 8010ac8:	685b      	ldr	r3, [r3, #4]
 8010aca:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8010ace:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8010ad2:	d162      	bne.n	8010b9a <I2C_ITError+0x156>
 8010ad4:	687b      	ldr	r3, [r7, #4]
 8010ad6:	681b      	ldr	r3, [r3, #0]
 8010ad8:	685a      	ldr	r2, [r3, #4]
 8010ada:	687b      	ldr	r3, [r7, #4]
 8010adc:	681b      	ldr	r3, [r3, #0]
 8010ade:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8010ae2:	605a      	str	r2, [r3, #4]
 8010ae4:	687b      	ldr	r3, [r7, #4]
 8010ae6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010ae8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8010aec:	b2db      	uxtb	r3, r3
 8010aee:	2b01      	cmp	r3, #1
 8010af0:	d020      	beq.n	8010b34 <I2C_ITError+0xf0>
 8010af2:	687b      	ldr	r3, [r7, #4]
 8010af4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010af6:	4a6a      	ldr	r2, [pc, #424]	@ (8010ca0 <I2C_ITError+0x25c>)
 8010af8:	651a      	str	r2, [r3, #80]	@ 0x50
 8010afa:	687b      	ldr	r3, [r7, #4]
 8010afc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010afe:	4618      	mov	r0, r3
 8010b00:	f7fe fbf6 	bl	800f2f0 <HAL_DMA_Abort_IT>
 8010b04:	4603      	mov	r3, r0
 8010b06:	2b00      	cmp	r3, #0
 8010b08:	f000 8089 	beq.w	8010c1e <I2C_ITError+0x1da>
 8010b0c:	687b      	ldr	r3, [r7, #4]
 8010b0e:	681b      	ldr	r3, [r3, #0]
 8010b10:	681a      	ldr	r2, [r3, #0]
 8010b12:	687b      	ldr	r3, [r7, #4]
 8010b14:	681b      	ldr	r3, [r3, #0]
 8010b16:	f022 0201 	bic.w	r2, r2, #1
 8010b1a:	601a      	str	r2, [r3, #0]
 8010b1c:	687b      	ldr	r3, [r7, #4]
 8010b1e:	2220      	movs	r2, #32
 8010b20:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010b24:	687b      	ldr	r3, [r7, #4]
 8010b26:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010b28:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010b2a:	687a      	ldr	r2, [r7, #4]
 8010b2c:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 8010b2e:	4610      	mov	r0, r2
 8010b30:	4798      	blx	r3
 8010b32:	e074      	b.n	8010c1e <I2C_ITError+0x1da>
 8010b34:	687b      	ldr	r3, [r7, #4]
 8010b36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010b38:	4a59      	ldr	r2, [pc, #356]	@ (8010ca0 <I2C_ITError+0x25c>)
 8010b3a:	651a      	str	r2, [r3, #80]	@ 0x50
 8010b3c:	687b      	ldr	r3, [r7, #4]
 8010b3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010b40:	4618      	mov	r0, r3
 8010b42:	f7fe fbd5 	bl	800f2f0 <HAL_DMA_Abort_IT>
 8010b46:	4603      	mov	r3, r0
 8010b48:	2b00      	cmp	r3, #0
 8010b4a:	d068      	beq.n	8010c1e <I2C_ITError+0x1da>
 8010b4c:	687b      	ldr	r3, [r7, #4]
 8010b4e:	681b      	ldr	r3, [r3, #0]
 8010b50:	695b      	ldr	r3, [r3, #20]
 8010b52:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010b56:	2b40      	cmp	r3, #64	@ 0x40
 8010b58:	d10b      	bne.n	8010b72 <I2C_ITError+0x12e>
 8010b5a:	687b      	ldr	r3, [r7, #4]
 8010b5c:	681b      	ldr	r3, [r3, #0]
 8010b5e:	691a      	ldr	r2, [r3, #16]
 8010b60:	687b      	ldr	r3, [r7, #4]
 8010b62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010b64:	b2d2      	uxtb	r2, r2
 8010b66:	701a      	strb	r2, [r3, #0]
 8010b68:	687b      	ldr	r3, [r7, #4]
 8010b6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010b6c:	1c5a      	adds	r2, r3, #1
 8010b6e:	687b      	ldr	r3, [r7, #4]
 8010b70:	625a      	str	r2, [r3, #36]	@ 0x24
 8010b72:	687b      	ldr	r3, [r7, #4]
 8010b74:	681b      	ldr	r3, [r3, #0]
 8010b76:	681a      	ldr	r2, [r3, #0]
 8010b78:	687b      	ldr	r3, [r7, #4]
 8010b7a:	681b      	ldr	r3, [r3, #0]
 8010b7c:	f022 0201 	bic.w	r2, r2, #1
 8010b80:	601a      	str	r2, [r3, #0]
 8010b82:	687b      	ldr	r3, [r7, #4]
 8010b84:	2220      	movs	r2, #32
 8010b86:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010b8a:	687b      	ldr	r3, [r7, #4]
 8010b8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010b8e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010b90:	687a      	ldr	r2, [r7, #4]
 8010b92:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8010b94:	4610      	mov	r0, r2
 8010b96:	4798      	blx	r3
 8010b98:	e041      	b.n	8010c1e <I2C_ITError+0x1da>
 8010b9a:	687b      	ldr	r3, [r7, #4]
 8010b9c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8010ba0:	b2db      	uxtb	r3, r3
 8010ba2:	2b60      	cmp	r3, #96	@ 0x60
 8010ba4:	d125      	bne.n	8010bf2 <I2C_ITError+0x1ae>
 8010ba6:	687b      	ldr	r3, [r7, #4]
 8010ba8:	2220      	movs	r2, #32
 8010baa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010bae:	687b      	ldr	r3, [r7, #4]
 8010bb0:	2200      	movs	r2, #0
 8010bb2:	641a      	str	r2, [r3, #64]	@ 0x40
 8010bb4:	687b      	ldr	r3, [r7, #4]
 8010bb6:	681b      	ldr	r3, [r3, #0]
 8010bb8:	695b      	ldr	r3, [r3, #20]
 8010bba:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010bbe:	2b40      	cmp	r3, #64	@ 0x40
 8010bc0:	d10b      	bne.n	8010bda <I2C_ITError+0x196>
 8010bc2:	687b      	ldr	r3, [r7, #4]
 8010bc4:	681b      	ldr	r3, [r3, #0]
 8010bc6:	691a      	ldr	r2, [r3, #16]
 8010bc8:	687b      	ldr	r3, [r7, #4]
 8010bca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010bcc:	b2d2      	uxtb	r2, r2
 8010bce:	701a      	strb	r2, [r3, #0]
 8010bd0:	687b      	ldr	r3, [r7, #4]
 8010bd2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010bd4:	1c5a      	adds	r2, r3, #1
 8010bd6:	687b      	ldr	r3, [r7, #4]
 8010bd8:	625a      	str	r2, [r3, #36]	@ 0x24
 8010bda:	687b      	ldr	r3, [r7, #4]
 8010bdc:	681b      	ldr	r3, [r3, #0]
 8010bde:	681a      	ldr	r2, [r3, #0]
 8010be0:	687b      	ldr	r3, [r7, #4]
 8010be2:	681b      	ldr	r3, [r3, #0]
 8010be4:	f022 0201 	bic.w	r2, r2, #1
 8010be8:	601a      	str	r2, [r3, #0]
 8010bea:	6878      	ldr	r0, [r7, #4]
 8010bec:	f7ff feaf 	bl	801094e <HAL_I2C_AbortCpltCallback>
 8010bf0:	e015      	b.n	8010c1e <I2C_ITError+0x1da>
 8010bf2:	687b      	ldr	r3, [r7, #4]
 8010bf4:	681b      	ldr	r3, [r3, #0]
 8010bf6:	695b      	ldr	r3, [r3, #20]
 8010bf8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8010bfc:	2b40      	cmp	r3, #64	@ 0x40
 8010bfe:	d10b      	bne.n	8010c18 <I2C_ITError+0x1d4>
 8010c00:	687b      	ldr	r3, [r7, #4]
 8010c02:	681b      	ldr	r3, [r3, #0]
 8010c04:	691a      	ldr	r2, [r3, #16]
 8010c06:	687b      	ldr	r3, [r7, #4]
 8010c08:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010c0a:	b2d2      	uxtb	r2, r2
 8010c0c:	701a      	strb	r2, [r3, #0]
 8010c0e:	687b      	ldr	r3, [r7, #4]
 8010c10:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010c12:	1c5a      	adds	r2, r3, #1
 8010c14:	687b      	ldr	r3, [r7, #4]
 8010c16:	625a      	str	r2, [r3, #36]	@ 0x24
 8010c18:	6878      	ldr	r0, [r7, #4]
 8010c1a:	f7ff fe8e 	bl	801093a <HAL_I2C_ErrorCallback>
 8010c1e:	687b      	ldr	r3, [r7, #4]
 8010c20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010c22:	60bb      	str	r3, [r7, #8]
 8010c24:	68bb      	ldr	r3, [r7, #8]
 8010c26:	f003 0301 	and.w	r3, r3, #1
 8010c2a:	2b00      	cmp	r3, #0
 8010c2c:	d10e      	bne.n	8010c4c <I2C_ITError+0x208>
 8010c2e:	68bb      	ldr	r3, [r7, #8]
 8010c30:	f003 0302 	and.w	r3, r3, #2
 8010c34:	2b00      	cmp	r3, #0
 8010c36:	d109      	bne.n	8010c4c <I2C_ITError+0x208>
 8010c38:	68bb      	ldr	r3, [r7, #8]
 8010c3a:	f003 0304 	and.w	r3, r3, #4
 8010c3e:	2b00      	cmp	r3, #0
 8010c40:	d104      	bne.n	8010c4c <I2C_ITError+0x208>
 8010c42:	68bb      	ldr	r3, [r7, #8]
 8010c44:	f003 0308 	and.w	r3, r3, #8
 8010c48:	2b00      	cmp	r3, #0
 8010c4a:	d007      	beq.n	8010c5c <I2C_ITError+0x218>
 8010c4c:	687b      	ldr	r3, [r7, #4]
 8010c4e:	681b      	ldr	r3, [r3, #0]
 8010c50:	685a      	ldr	r2, [r3, #4]
 8010c52:	687b      	ldr	r3, [r7, #4]
 8010c54:	681b      	ldr	r3, [r3, #0]
 8010c56:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
 8010c5a:	605a      	str	r2, [r3, #4]
 8010c5c:	687b      	ldr	r3, [r7, #4]
 8010c5e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8010c62:	73fb      	strb	r3, [r7, #15]
 8010c64:	687b      	ldr	r3, [r7, #4]
 8010c66:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010c68:	f003 0304 	and.w	r3, r3, #4
 8010c6c:	2b04      	cmp	r3, #4
 8010c6e:	d113      	bne.n	8010c98 <I2C_ITError+0x254>
 8010c70:	7bfb      	ldrb	r3, [r7, #15]
 8010c72:	2b28      	cmp	r3, #40	@ 0x28
 8010c74:	d110      	bne.n	8010c98 <I2C_ITError+0x254>
 8010c76:	687b      	ldr	r3, [r7, #4]
 8010c78:	4a0a      	ldr	r2, [pc, #40]	@ (8010ca4 <I2C_ITError+0x260>)
 8010c7a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8010c7c:	687b      	ldr	r3, [r7, #4]
 8010c7e:	2200      	movs	r2, #0
 8010c80:	631a      	str	r2, [r3, #48]	@ 0x30
 8010c82:	687b      	ldr	r3, [r7, #4]
 8010c84:	2220      	movs	r2, #32
 8010c86:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8010c8a:	687b      	ldr	r3, [r7, #4]
 8010c8c:	2200      	movs	r2, #0
 8010c8e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8010c92:	6878      	ldr	r0, [r7, #4]
 8010c94:	f7ff fe47 	bl	8010926 <HAL_I2C_ListenCpltCallback>
 8010c98:	bf00      	nop
 8010c9a:	3710      	adds	r7, #16
 8010c9c:	46bd      	mov	sp, r7
 8010c9e:	bd80      	pop	{r7, pc}
 8010ca0:	080111c9 	.word	0x080111c9
 8010ca4:	ffff0000 	.word	0xffff0000

08010ca8 <I2C_RequestMemoryWrite>:
 8010ca8:	b580      	push	{r7, lr}
 8010caa:	b088      	sub	sp, #32
 8010cac:	af02      	add	r7, sp, #8
 8010cae:	60f8      	str	r0, [r7, #12]
 8010cb0:	4608      	mov	r0, r1
 8010cb2:	4611      	mov	r1, r2
 8010cb4:	461a      	mov	r2, r3
 8010cb6:	4603      	mov	r3, r0
 8010cb8:	817b      	strh	r3, [r7, #10]
 8010cba:	460b      	mov	r3, r1
 8010cbc:	813b      	strh	r3, [r7, #8]
 8010cbe:	4613      	mov	r3, r2
 8010cc0:	80fb      	strh	r3, [r7, #6]
 8010cc2:	68fb      	ldr	r3, [r7, #12]
 8010cc4:	681b      	ldr	r3, [r3, #0]
 8010cc6:	681a      	ldr	r2, [r3, #0]
 8010cc8:	68fb      	ldr	r3, [r7, #12]
 8010cca:	681b      	ldr	r3, [r3, #0]
 8010ccc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8010cd0:	601a      	str	r2, [r3, #0]
 8010cd2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010cd4:	9300      	str	r3, [sp, #0]
 8010cd6:	6a3b      	ldr	r3, [r7, #32]
 8010cd8:	2200      	movs	r2, #0
 8010cda:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8010cde:	68f8      	ldr	r0, [r7, #12]
 8010ce0:	f000 fb1a 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 8010ce4:	4603      	mov	r3, r0
 8010ce6:	2b00      	cmp	r3, #0
 8010ce8:	d00d      	beq.n	8010d06 <I2C_RequestMemoryWrite+0x5e>
 8010cea:	68fb      	ldr	r3, [r7, #12]
 8010cec:	681b      	ldr	r3, [r3, #0]
 8010cee:	681b      	ldr	r3, [r3, #0]
 8010cf0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010cf4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8010cf8:	d103      	bne.n	8010d02 <I2C_RequestMemoryWrite+0x5a>
 8010cfa:	68fb      	ldr	r3, [r7, #12]
 8010cfc:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8010d00:	641a      	str	r2, [r3, #64]	@ 0x40
 8010d02:	2303      	movs	r3, #3
 8010d04:	e05f      	b.n	8010dc6 <I2C_RequestMemoryWrite+0x11e>
 8010d06:	897b      	ldrh	r3, [r7, #10]
 8010d08:	b2db      	uxtb	r3, r3
 8010d0a:	461a      	mov	r2, r3
 8010d0c:	68fb      	ldr	r3, [r7, #12]
 8010d0e:	681b      	ldr	r3, [r3, #0]
 8010d10:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8010d14:	611a      	str	r2, [r3, #16]
 8010d16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010d18:	6a3a      	ldr	r2, [r7, #32]
 8010d1a:	492d      	ldr	r1, [pc, #180]	@ (8010dd0 <I2C_RequestMemoryWrite+0x128>)
 8010d1c:	68f8      	ldr	r0, [r7, #12]
 8010d1e:	f000 fb52 	bl	80113c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010d22:	4603      	mov	r3, r0
 8010d24:	2b00      	cmp	r3, #0
 8010d26:	d001      	beq.n	8010d2c <I2C_RequestMemoryWrite+0x84>
 8010d28:	2301      	movs	r3, #1
 8010d2a:	e04c      	b.n	8010dc6 <I2C_RequestMemoryWrite+0x11e>
 8010d2c:	2300      	movs	r3, #0
 8010d2e:	617b      	str	r3, [r7, #20]
 8010d30:	68fb      	ldr	r3, [r7, #12]
 8010d32:	681b      	ldr	r3, [r3, #0]
 8010d34:	695b      	ldr	r3, [r3, #20]
 8010d36:	617b      	str	r3, [r7, #20]
 8010d38:	68fb      	ldr	r3, [r7, #12]
 8010d3a:	681b      	ldr	r3, [r3, #0]
 8010d3c:	699b      	ldr	r3, [r3, #24]
 8010d3e:	617b      	str	r3, [r7, #20]
 8010d40:	697b      	ldr	r3, [r7, #20]
 8010d42:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010d44:	6a39      	ldr	r1, [r7, #32]
 8010d46:	68f8      	ldr	r0, [r7, #12]
 8010d48:	f000 fbbc 	bl	80114c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8010d4c:	4603      	mov	r3, r0
 8010d4e:	2b00      	cmp	r3, #0
 8010d50:	d00d      	beq.n	8010d6e <I2C_RequestMemoryWrite+0xc6>
 8010d52:	68fb      	ldr	r3, [r7, #12]
 8010d54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010d56:	2b04      	cmp	r3, #4
 8010d58:	d107      	bne.n	8010d6a <I2C_RequestMemoryWrite+0xc2>
 8010d5a:	68fb      	ldr	r3, [r7, #12]
 8010d5c:	681b      	ldr	r3, [r3, #0]
 8010d5e:	681a      	ldr	r2, [r3, #0]
 8010d60:	68fb      	ldr	r3, [r7, #12]
 8010d62:	681b      	ldr	r3, [r3, #0]
 8010d64:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010d68:	601a      	str	r2, [r3, #0]
 8010d6a:	2301      	movs	r3, #1
 8010d6c:	e02b      	b.n	8010dc6 <I2C_RequestMemoryWrite+0x11e>
 8010d6e:	88fb      	ldrh	r3, [r7, #6]
 8010d70:	2b01      	cmp	r3, #1
 8010d72:	d105      	bne.n	8010d80 <I2C_RequestMemoryWrite+0xd8>
 8010d74:	893b      	ldrh	r3, [r7, #8]
 8010d76:	b2da      	uxtb	r2, r3
 8010d78:	68fb      	ldr	r3, [r7, #12]
 8010d7a:	681b      	ldr	r3, [r3, #0]
 8010d7c:	611a      	str	r2, [r3, #16]
 8010d7e:	e021      	b.n	8010dc4 <I2C_RequestMemoryWrite+0x11c>
 8010d80:	893b      	ldrh	r3, [r7, #8]
 8010d82:	0a1b      	lsrs	r3, r3, #8
 8010d84:	b29b      	uxth	r3, r3
 8010d86:	b2da      	uxtb	r2, r3
 8010d88:	68fb      	ldr	r3, [r7, #12]
 8010d8a:	681b      	ldr	r3, [r3, #0]
 8010d8c:	611a      	str	r2, [r3, #16]
 8010d8e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010d90:	6a39      	ldr	r1, [r7, #32]
 8010d92:	68f8      	ldr	r0, [r7, #12]
 8010d94:	f000 fb96 	bl	80114c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8010d98:	4603      	mov	r3, r0
 8010d9a:	2b00      	cmp	r3, #0
 8010d9c:	d00d      	beq.n	8010dba <I2C_RequestMemoryWrite+0x112>
 8010d9e:	68fb      	ldr	r3, [r7, #12]
 8010da0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010da2:	2b04      	cmp	r3, #4
 8010da4:	d107      	bne.n	8010db6 <I2C_RequestMemoryWrite+0x10e>
 8010da6:	68fb      	ldr	r3, [r7, #12]
 8010da8:	681b      	ldr	r3, [r3, #0]
 8010daa:	681a      	ldr	r2, [r3, #0]
 8010dac:	68fb      	ldr	r3, [r7, #12]
 8010dae:	681b      	ldr	r3, [r3, #0]
 8010db0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010db4:	601a      	str	r2, [r3, #0]
 8010db6:	2301      	movs	r3, #1
 8010db8:	e005      	b.n	8010dc6 <I2C_RequestMemoryWrite+0x11e>
 8010dba:	893b      	ldrh	r3, [r7, #8]
 8010dbc:	b2da      	uxtb	r2, r3
 8010dbe:	68fb      	ldr	r3, [r7, #12]
 8010dc0:	681b      	ldr	r3, [r3, #0]
 8010dc2:	611a      	str	r2, [r3, #16]
 8010dc4:	2300      	movs	r3, #0
 8010dc6:	4618      	mov	r0, r3
 8010dc8:	3718      	adds	r7, #24
 8010dca:	46bd      	mov	sp, r7
 8010dcc:	bd80      	pop	{r7, pc}
 8010dce:	bf00      	nop
 8010dd0:	00010002 	.word	0x00010002

08010dd4 <I2C_RequestMemoryRead>:
 8010dd4:	b580      	push	{r7, lr}
 8010dd6:	b088      	sub	sp, #32
 8010dd8:	af02      	add	r7, sp, #8
 8010dda:	60f8      	str	r0, [r7, #12]
 8010ddc:	4608      	mov	r0, r1
 8010dde:	4611      	mov	r1, r2
 8010de0:	461a      	mov	r2, r3
 8010de2:	4603      	mov	r3, r0
 8010de4:	817b      	strh	r3, [r7, #10]
 8010de6:	460b      	mov	r3, r1
 8010de8:	813b      	strh	r3, [r7, #8]
 8010dea:	4613      	mov	r3, r2
 8010dec:	80fb      	strh	r3, [r7, #6]
 8010dee:	68fb      	ldr	r3, [r7, #12]
 8010df0:	681b      	ldr	r3, [r3, #0]
 8010df2:	681a      	ldr	r2, [r3, #0]
 8010df4:	68fb      	ldr	r3, [r7, #12]
 8010df6:	681b      	ldr	r3, [r3, #0]
 8010df8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8010dfc:	601a      	str	r2, [r3, #0]
 8010dfe:	68fb      	ldr	r3, [r7, #12]
 8010e00:	681b      	ldr	r3, [r3, #0]
 8010e02:	681a      	ldr	r2, [r3, #0]
 8010e04:	68fb      	ldr	r3, [r7, #12]
 8010e06:	681b      	ldr	r3, [r3, #0]
 8010e08:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8010e0c:	601a      	str	r2, [r3, #0]
 8010e0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010e10:	9300      	str	r3, [sp, #0]
 8010e12:	6a3b      	ldr	r3, [r7, #32]
 8010e14:	2200      	movs	r2, #0
 8010e16:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8010e1a:	68f8      	ldr	r0, [r7, #12]
 8010e1c:	f000 fa7c 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 8010e20:	4603      	mov	r3, r0
 8010e22:	2b00      	cmp	r3, #0
 8010e24:	d00d      	beq.n	8010e42 <I2C_RequestMemoryRead+0x6e>
 8010e26:	68fb      	ldr	r3, [r7, #12]
 8010e28:	681b      	ldr	r3, [r3, #0]
 8010e2a:	681b      	ldr	r3, [r3, #0]
 8010e2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010e30:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8010e34:	d103      	bne.n	8010e3e <I2C_RequestMemoryRead+0x6a>
 8010e36:	68fb      	ldr	r3, [r7, #12]
 8010e38:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8010e3c:	641a      	str	r2, [r3, #64]	@ 0x40
 8010e3e:	2303      	movs	r3, #3
 8010e40:	e0aa      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010e42:	897b      	ldrh	r3, [r7, #10]
 8010e44:	b2db      	uxtb	r3, r3
 8010e46:	461a      	mov	r2, r3
 8010e48:	68fb      	ldr	r3, [r7, #12]
 8010e4a:	681b      	ldr	r3, [r3, #0]
 8010e4c:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8010e50:	611a      	str	r2, [r3, #16]
 8010e52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010e54:	6a3a      	ldr	r2, [r7, #32]
 8010e56:	4952      	ldr	r1, [pc, #328]	@ (8010fa0 <I2C_RequestMemoryRead+0x1cc>)
 8010e58:	68f8      	ldr	r0, [r7, #12]
 8010e5a:	f000 fab4 	bl	80113c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010e5e:	4603      	mov	r3, r0
 8010e60:	2b00      	cmp	r3, #0
 8010e62:	d001      	beq.n	8010e68 <I2C_RequestMemoryRead+0x94>
 8010e64:	2301      	movs	r3, #1
 8010e66:	e097      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010e68:	2300      	movs	r3, #0
 8010e6a:	617b      	str	r3, [r7, #20]
 8010e6c:	68fb      	ldr	r3, [r7, #12]
 8010e6e:	681b      	ldr	r3, [r3, #0]
 8010e70:	695b      	ldr	r3, [r3, #20]
 8010e72:	617b      	str	r3, [r7, #20]
 8010e74:	68fb      	ldr	r3, [r7, #12]
 8010e76:	681b      	ldr	r3, [r3, #0]
 8010e78:	699b      	ldr	r3, [r3, #24]
 8010e7a:	617b      	str	r3, [r7, #20]
 8010e7c:	697b      	ldr	r3, [r7, #20]
 8010e7e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010e80:	6a39      	ldr	r1, [r7, #32]
 8010e82:	68f8      	ldr	r0, [r7, #12]
 8010e84:	f000 fb1e 	bl	80114c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8010e88:	4603      	mov	r3, r0
 8010e8a:	2b00      	cmp	r3, #0
 8010e8c:	d00d      	beq.n	8010eaa <I2C_RequestMemoryRead+0xd6>
 8010e8e:	68fb      	ldr	r3, [r7, #12]
 8010e90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010e92:	2b04      	cmp	r3, #4
 8010e94:	d107      	bne.n	8010ea6 <I2C_RequestMemoryRead+0xd2>
 8010e96:	68fb      	ldr	r3, [r7, #12]
 8010e98:	681b      	ldr	r3, [r3, #0]
 8010e9a:	681a      	ldr	r2, [r3, #0]
 8010e9c:	68fb      	ldr	r3, [r7, #12]
 8010e9e:	681b      	ldr	r3, [r3, #0]
 8010ea0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010ea4:	601a      	str	r2, [r3, #0]
 8010ea6:	2301      	movs	r3, #1
 8010ea8:	e076      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010eaa:	88fb      	ldrh	r3, [r7, #6]
 8010eac:	2b01      	cmp	r3, #1
 8010eae:	d105      	bne.n	8010ebc <I2C_RequestMemoryRead+0xe8>
 8010eb0:	893b      	ldrh	r3, [r7, #8]
 8010eb2:	b2da      	uxtb	r2, r3
 8010eb4:	68fb      	ldr	r3, [r7, #12]
 8010eb6:	681b      	ldr	r3, [r3, #0]
 8010eb8:	611a      	str	r2, [r3, #16]
 8010eba:	e021      	b.n	8010f00 <I2C_RequestMemoryRead+0x12c>
 8010ebc:	893b      	ldrh	r3, [r7, #8]
 8010ebe:	0a1b      	lsrs	r3, r3, #8
 8010ec0:	b29b      	uxth	r3, r3
 8010ec2:	b2da      	uxtb	r2, r3
 8010ec4:	68fb      	ldr	r3, [r7, #12]
 8010ec6:	681b      	ldr	r3, [r3, #0]
 8010ec8:	611a      	str	r2, [r3, #16]
 8010eca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010ecc:	6a39      	ldr	r1, [r7, #32]
 8010ece:	68f8      	ldr	r0, [r7, #12]
 8010ed0:	f000 faf8 	bl	80114c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8010ed4:	4603      	mov	r3, r0
 8010ed6:	2b00      	cmp	r3, #0
 8010ed8:	d00d      	beq.n	8010ef6 <I2C_RequestMemoryRead+0x122>
 8010eda:	68fb      	ldr	r3, [r7, #12]
 8010edc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010ede:	2b04      	cmp	r3, #4
 8010ee0:	d107      	bne.n	8010ef2 <I2C_RequestMemoryRead+0x11e>
 8010ee2:	68fb      	ldr	r3, [r7, #12]
 8010ee4:	681b      	ldr	r3, [r3, #0]
 8010ee6:	681a      	ldr	r2, [r3, #0]
 8010ee8:	68fb      	ldr	r3, [r7, #12]
 8010eea:	681b      	ldr	r3, [r3, #0]
 8010eec:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010ef0:	601a      	str	r2, [r3, #0]
 8010ef2:	2301      	movs	r3, #1
 8010ef4:	e050      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010ef6:	893b      	ldrh	r3, [r7, #8]
 8010ef8:	b2da      	uxtb	r2, r3
 8010efa:	68fb      	ldr	r3, [r7, #12]
 8010efc:	681b      	ldr	r3, [r3, #0]
 8010efe:	611a      	str	r2, [r3, #16]
 8010f00:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8010f02:	6a39      	ldr	r1, [r7, #32]
 8010f04:	68f8      	ldr	r0, [r7, #12]
 8010f06:	f000 fadd 	bl	80114c4 <I2C_WaitOnTXEFlagUntilTimeout>
 8010f0a:	4603      	mov	r3, r0
 8010f0c:	2b00      	cmp	r3, #0
 8010f0e:	d00d      	beq.n	8010f2c <I2C_RequestMemoryRead+0x158>
 8010f10:	68fb      	ldr	r3, [r7, #12]
 8010f12:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010f14:	2b04      	cmp	r3, #4
 8010f16:	d107      	bne.n	8010f28 <I2C_RequestMemoryRead+0x154>
 8010f18:	68fb      	ldr	r3, [r7, #12]
 8010f1a:	681b      	ldr	r3, [r3, #0]
 8010f1c:	681a      	ldr	r2, [r3, #0]
 8010f1e:	68fb      	ldr	r3, [r7, #12]
 8010f20:	681b      	ldr	r3, [r3, #0]
 8010f22:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8010f26:	601a      	str	r2, [r3, #0]
 8010f28:	2301      	movs	r3, #1
 8010f2a:	e035      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010f2c:	68fb      	ldr	r3, [r7, #12]
 8010f2e:	681b      	ldr	r3, [r3, #0]
 8010f30:	681a      	ldr	r2, [r3, #0]
 8010f32:	68fb      	ldr	r3, [r7, #12]
 8010f34:	681b      	ldr	r3, [r3, #0]
 8010f36:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8010f3a:	601a      	str	r2, [r3, #0]
 8010f3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010f3e:	9300      	str	r3, [sp, #0]
 8010f40:	6a3b      	ldr	r3, [r7, #32]
 8010f42:	2200      	movs	r2, #0
 8010f44:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8010f48:	68f8      	ldr	r0, [r7, #12]
 8010f4a:	f000 f9e5 	bl	8011318 <I2C_WaitOnFlagUntilTimeout>
 8010f4e:	4603      	mov	r3, r0
 8010f50:	2b00      	cmp	r3, #0
 8010f52:	d00d      	beq.n	8010f70 <I2C_RequestMemoryRead+0x19c>
 8010f54:	68fb      	ldr	r3, [r7, #12]
 8010f56:	681b      	ldr	r3, [r3, #0]
 8010f58:	681b      	ldr	r3, [r3, #0]
 8010f5a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010f5e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8010f62:	d103      	bne.n	8010f6c <I2C_RequestMemoryRead+0x198>
 8010f64:	68fb      	ldr	r3, [r7, #12]
 8010f66:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8010f6a:	641a      	str	r2, [r3, #64]	@ 0x40
 8010f6c:	2303      	movs	r3, #3
 8010f6e:	e013      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010f70:	897b      	ldrh	r3, [r7, #10]
 8010f72:	b2db      	uxtb	r3, r3
 8010f74:	f043 0301 	orr.w	r3, r3, #1
 8010f78:	b2da      	uxtb	r2, r3
 8010f7a:	68fb      	ldr	r3, [r7, #12]
 8010f7c:	681b      	ldr	r3, [r3, #0]
 8010f7e:	611a      	str	r2, [r3, #16]
 8010f80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8010f82:	6a3a      	ldr	r2, [r7, #32]
 8010f84:	4906      	ldr	r1, [pc, #24]	@ (8010fa0 <I2C_RequestMemoryRead+0x1cc>)
 8010f86:	68f8      	ldr	r0, [r7, #12]
 8010f88:	f000 fa1d 	bl	80113c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8010f8c:	4603      	mov	r3, r0
 8010f8e:	2b00      	cmp	r3, #0
 8010f90:	d001      	beq.n	8010f96 <I2C_RequestMemoryRead+0x1c2>
 8010f92:	2301      	movs	r3, #1
 8010f94:	e000      	b.n	8010f98 <I2C_RequestMemoryRead+0x1c4>
 8010f96:	2300      	movs	r3, #0
 8010f98:	4618      	mov	r0, r3
 8010f9a:	3718      	adds	r7, #24
 8010f9c:	46bd      	mov	sp, r7
 8010f9e:	bd80      	pop	{r7, pc}
 8010fa0:	00010002 	.word	0x00010002

08010fa4 <I2C_DMAXferCplt>:
 8010fa4:	b580      	push	{r7, lr}
 8010fa6:	b086      	sub	sp, #24
 8010fa8:	af00      	add	r7, sp, #0
 8010faa:	6078      	str	r0, [r7, #4]
 8010fac:	687b      	ldr	r3, [r7, #4]
 8010fae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010fb0:	617b      	str	r3, [r7, #20]
 8010fb2:	697b      	ldr	r3, [r7, #20]
 8010fb4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8010fb8:	74fb      	strb	r3, [r7, #19]
 8010fba:	697b      	ldr	r3, [r7, #20]
 8010fbc:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8010fc0:	74bb      	strb	r3, [r7, #18]
 8010fc2:	697b      	ldr	r3, [r7, #20]
 8010fc4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010fc6:	60fb      	str	r3, [r7, #12]
 8010fc8:	697b      	ldr	r3, [r7, #20]
 8010fca:	681b      	ldr	r3, [r3, #0]
 8010fcc:	685a      	ldr	r2, [r3, #4]
 8010fce:	697b      	ldr	r3, [r7, #20]
 8010fd0:	681b      	ldr	r3, [r3, #0]
 8010fd2:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 8010fd6:	605a      	str	r2, [r3, #4]
 8010fd8:	697b      	ldr	r3, [r7, #20]
 8010fda:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010fdc:	2b00      	cmp	r3, #0
 8010fde:	d003      	beq.n	8010fe8 <I2C_DMAXferCplt+0x44>
 8010fe0:	697b      	ldr	r3, [r7, #20]
 8010fe2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010fe4:	2200      	movs	r2, #0
 8010fe6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8010fe8:	697b      	ldr	r3, [r7, #20]
 8010fea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010fec:	2b00      	cmp	r3, #0
 8010fee:	d003      	beq.n	8010ff8 <I2C_DMAXferCplt+0x54>
 8010ff0:	697b      	ldr	r3, [r7, #20]
 8010ff2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010ff4:	2200      	movs	r2, #0
 8010ff6:	63da      	str	r2, [r3, #60]	@ 0x3c
 8010ff8:	7cfb      	ldrb	r3, [r7, #19]
 8010ffa:	f003 0321 	and.w	r3, r3, #33	@ 0x21
 8010ffe:	2b21      	cmp	r3, #33	@ 0x21
 8011000:	d007      	beq.n	8011012 <I2C_DMAXferCplt+0x6e>
 8011002:	7cfb      	ldrb	r3, [r7, #19]
 8011004:	f003 0322 	and.w	r3, r3, #34	@ 0x22
 8011008:	2b22      	cmp	r3, #34	@ 0x22
 801100a:	d131      	bne.n	8011070 <I2C_DMAXferCplt+0xcc>
 801100c:	7cbb      	ldrb	r3, [r7, #18]
 801100e:	2b20      	cmp	r3, #32
 8011010:	d12e      	bne.n	8011070 <I2C_DMAXferCplt+0xcc>
 8011012:	697b      	ldr	r3, [r7, #20]
 8011014:	681b      	ldr	r3, [r3, #0]
 8011016:	685a      	ldr	r2, [r3, #4]
 8011018:	697b      	ldr	r3, [r7, #20]
 801101a:	681b      	ldr	r3, [r3, #0]
 801101c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8011020:	605a      	str	r2, [r3, #4]
 8011022:	697b      	ldr	r3, [r7, #20]
 8011024:	2200      	movs	r2, #0
 8011026:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8011028:	7cfb      	ldrb	r3, [r7, #19]
 801102a:	2b29      	cmp	r3, #41	@ 0x29
 801102c:	d10a      	bne.n	8011044 <I2C_DMAXferCplt+0xa0>
 801102e:	697b      	ldr	r3, [r7, #20]
 8011030:	2221      	movs	r2, #33	@ 0x21
 8011032:	631a      	str	r2, [r3, #48]	@ 0x30
 8011034:	697b      	ldr	r3, [r7, #20]
 8011036:	2228      	movs	r2, #40	@ 0x28
 8011038:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801103c:	6978      	ldr	r0, [r7, #20]
 801103e:	f7ff fc5e 	bl	80108fe <HAL_I2C_SlaveTxCpltCallback>
 8011042:	e00c      	b.n	801105e <I2C_DMAXferCplt+0xba>
 8011044:	7cfb      	ldrb	r3, [r7, #19]
 8011046:	2b2a      	cmp	r3, #42	@ 0x2a
 8011048:	d109      	bne.n	801105e <I2C_DMAXferCplt+0xba>
 801104a:	697b      	ldr	r3, [r7, #20]
 801104c:	2222      	movs	r2, #34	@ 0x22
 801104e:	631a      	str	r2, [r3, #48]	@ 0x30
 8011050:	697b      	ldr	r3, [r7, #20]
 8011052:	2228      	movs	r2, #40	@ 0x28
 8011054:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011058:	6978      	ldr	r0, [r7, #20]
 801105a:	f7ff fc5a 	bl	8010912 <HAL_I2C_SlaveRxCpltCallback>
 801105e:	697b      	ldr	r3, [r7, #20]
 8011060:	681b      	ldr	r3, [r3, #0]
 8011062:	685a      	ldr	r2, [r3, #4]
 8011064:	697b      	ldr	r3, [r7, #20]
 8011066:	681b      	ldr	r3, [r3, #0]
 8011068:	f442 7240 	orr.w	r2, r2, #768	@ 0x300
 801106c:	605a      	str	r2, [r3, #4]
 801106e:	e06a      	b.n	8011146 <I2C_DMAXferCplt+0x1a2>
 8011070:	697b      	ldr	r3, [r7, #20]
 8011072:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8011076:	b2db      	uxtb	r3, r3
 8011078:	2b00      	cmp	r3, #0
 801107a:	d064      	beq.n	8011146 <I2C_DMAXferCplt+0x1a2>
 801107c:	697b      	ldr	r3, [r7, #20]
 801107e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8011080:	b29b      	uxth	r3, r3
 8011082:	2b01      	cmp	r3, #1
 8011084:	d107      	bne.n	8011096 <I2C_DMAXferCplt+0xf2>
 8011086:	697b      	ldr	r3, [r7, #20]
 8011088:	681b      	ldr	r3, [r3, #0]
 801108a:	681a      	ldr	r2, [r3, #0]
 801108c:	697b      	ldr	r3, [r7, #20]
 801108e:	681b      	ldr	r3, [r3, #0]
 8011090:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011094:	601a      	str	r2, [r3, #0]
 8011096:	697b      	ldr	r3, [r7, #20]
 8011098:	681b      	ldr	r3, [r3, #0]
 801109a:	685a      	ldr	r2, [r3, #4]
 801109c:	697b      	ldr	r3, [r7, #20]
 801109e:	681b      	ldr	r3, [r3, #0]
 80110a0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
 80110a4:	605a      	str	r2, [r3, #4]
 80110a6:	68fb      	ldr	r3, [r7, #12]
 80110a8:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80110ac:	d009      	beq.n	80110c2 <I2C_DMAXferCplt+0x11e>
 80110ae:	68fb      	ldr	r3, [r7, #12]
 80110b0:	2b08      	cmp	r3, #8
 80110b2:	d006      	beq.n	80110c2 <I2C_DMAXferCplt+0x11e>
 80110b4:	68fb      	ldr	r3, [r7, #12]
 80110b6:	f1b3 4f2a 	cmp.w	r3, #2852126720	@ 0xaa000000
 80110ba:	d002      	beq.n	80110c2 <I2C_DMAXferCplt+0x11e>
 80110bc:	68fb      	ldr	r3, [r7, #12]
 80110be:	2b20      	cmp	r3, #32
 80110c0:	d107      	bne.n	80110d2 <I2C_DMAXferCplt+0x12e>
 80110c2:	697b      	ldr	r3, [r7, #20]
 80110c4:	681b      	ldr	r3, [r3, #0]
 80110c6:	681a      	ldr	r2, [r3, #0]
 80110c8:	697b      	ldr	r3, [r7, #20]
 80110ca:	681b      	ldr	r3, [r3, #0]
 80110cc:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80110d0:	601a      	str	r2, [r3, #0]
 80110d2:	697b      	ldr	r3, [r7, #20]
 80110d4:	681b      	ldr	r3, [r3, #0]
 80110d6:	685a      	ldr	r2, [r3, #4]
 80110d8:	697b      	ldr	r3, [r7, #20]
 80110da:	681b      	ldr	r3, [r3, #0]
 80110dc:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80110e0:	605a      	str	r2, [r3, #4]
 80110e2:	697b      	ldr	r3, [r7, #20]
 80110e4:	681b      	ldr	r3, [r3, #0]
 80110e6:	685a      	ldr	r2, [r3, #4]
 80110e8:	697b      	ldr	r3, [r7, #20]
 80110ea:	681b      	ldr	r3, [r3, #0]
 80110ec:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80110f0:	605a      	str	r2, [r3, #4]
 80110f2:	697b      	ldr	r3, [r7, #20]
 80110f4:	2200      	movs	r2, #0
 80110f6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80110f8:	697b      	ldr	r3, [r7, #20]
 80110fa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80110fc:	2b00      	cmp	r3, #0
 80110fe:	d003      	beq.n	8011108 <I2C_DMAXferCplt+0x164>
 8011100:	6978      	ldr	r0, [r7, #20]
 8011102:	f7ff fc1a 	bl	801093a <HAL_I2C_ErrorCallback>
 8011106:	e01e      	b.n	8011146 <I2C_DMAXferCplt+0x1a2>
 8011108:	697b      	ldr	r3, [r7, #20]
 801110a:	2220      	movs	r2, #32
 801110c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011110:	697b      	ldr	r3, [r7, #20]
 8011112:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8011116:	b2db      	uxtb	r3, r3
 8011118:	2b40      	cmp	r3, #64	@ 0x40
 801111a:	d10a      	bne.n	8011132 <I2C_DMAXferCplt+0x18e>
 801111c:	697b      	ldr	r3, [r7, #20]
 801111e:	2200      	movs	r2, #0
 8011120:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011124:	697b      	ldr	r3, [r7, #20]
 8011126:	2200      	movs	r2, #0
 8011128:	631a      	str	r2, [r3, #48]	@ 0x30
 801112a:	6978      	ldr	r0, [r7, #20]
 801112c:	f7f0 fed4 	bl	8001ed8 <HAL_I2C_MemRxCpltCallback>
 8011130:	e009      	b.n	8011146 <I2C_DMAXferCplt+0x1a2>
 8011132:	697b      	ldr	r3, [r7, #20]
 8011134:	2200      	movs	r2, #0
 8011136:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801113a:	697b      	ldr	r3, [r7, #20]
 801113c:	2212      	movs	r2, #18
 801113e:	631a      	str	r2, [r3, #48]	@ 0x30
 8011140:	6978      	ldr	r0, [r7, #20]
 8011142:	f7ff fbd2 	bl	80108ea <HAL_I2C_MasterRxCpltCallback>
 8011146:	bf00      	nop
 8011148:	3718      	adds	r7, #24
 801114a:	46bd      	mov	sp, r7
 801114c:	bd80      	pop	{r7, pc}

0801114e <I2C_DMAError>:
 801114e:	b580      	push	{r7, lr}
 8011150:	b084      	sub	sp, #16
 8011152:	af00      	add	r7, sp, #0
 8011154:	6078      	str	r0, [r7, #4]
 8011156:	687b      	ldr	r3, [r7, #4]
 8011158:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801115a:	60fb      	str	r3, [r7, #12]
 801115c:	68fb      	ldr	r3, [r7, #12]
 801115e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011160:	2b00      	cmp	r3, #0
 8011162:	d003      	beq.n	801116c <I2C_DMAError+0x1e>
 8011164:	68fb      	ldr	r3, [r7, #12]
 8011166:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011168:	2200      	movs	r2, #0
 801116a:	63da      	str	r2, [r3, #60]	@ 0x3c
 801116c:	68fb      	ldr	r3, [r7, #12]
 801116e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011170:	2b00      	cmp	r3, #0
 8011172:	d003      	beq.n	801117c <I2C_DMAError+0x2e>
 8011174:	68fb      	ldr	r3, [r7, #12]
 8011176:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011178:	2200      	movs	r2, #0
 801117a:	63da      	str	r2, [r3, #60]	@ 0x3c
 801117c:	6878      	ldr	r0, [r7, #4]
 801117e:	f7fe fa63 	bl	800f648 <HAL_DMA_GetError>
 8011182:	4603      	mov	r3, r0
 8011184:	2b02      	cmp	r3, #2
 8011186:	d01b      	beq.n	80111c0 <I2C_DMAError+0x72>
 8011188:	68fb      	ldr	r3, [r7, #12]
 801118a:	681b      	ldr	r3, [r3, #0]
 801118c:	681a      	ldr	r2, [r3, #0]
 801118e:	68fb      	ldr	r3, [r7, #12]
 8011190:	681b      	ldr	r3, [r3, #0]
 8011192:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011196:	601a      	str	r2, [r3, #0]
 8011198:	68fb      	ldr	r3, [r7, #12]
 801119a:	2200      	movs	r2, #0
 801119c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 801119e:	68fb      	ldr	r3, [r7, #12]
 80111a0:	2220      	movs	r2, #32
 80111a2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80111a6:	68fb      	ldr	r3, [r7, #12]
 80111a8:	2200      	movs	r2, #0
 80111aa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80111ae:	68fb      	ldr	r3, [r7, #12]
 80111b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80111b2:	f043 0210 	orr.w	r2, r3, #16
 80111b6:	68fb      	ldr	r3, [r7, #12]
 80111b8:	641a      	str	r2, [r3, #64]	@ 0x40
 80111ba:	68f8      	ldr	r0, [r7, #12]
 80111bc:	f7ff fbbd 	bl	801093a <HAL_I2C_ErrorCallback>
 80111c0:	bf00      	nop
 80111c2:	3710      	adds	r7, #16
 80111c4:	46bd      	mov	sp, r7
 80111c6:	bd80      	pop	{r7, pc}

080111c8 <I2C_DMAAbort>:
 80111c8:	b580      	push	{r7, lr}
 80111ca:	b086      	sub	sp, #24
 80111cc:	af00      	add	r7, sp, #0
 80111ce:	6078      	str	r0, [r7, #4]
 80111d0:	2300      	movs	r3, #0
 80111d2:	60fb      	str	r3, [r7, #12]
 80111d4:	687b      	ldr	r3, [r7, #4]
 80111d6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80111d8:	617b      	str	r3, [r7, #20]
 80111da:	697b      	ldr	r3, [r7, #20]
 80111dc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80111e0:	74fb      	strb	r3, [r7, #19]
 80111e2:	4b4b      	ldr	r3, [pc, #300]	@ (8011310 <I2C_DMAAbort+0x148>)
 80111e4:	681b      	ldr	r3, [r3, #0]
 80111e6:	08db      	lsrs	r3, r3, #3
 80111e8:	4a4a      	ldr	r2, [pc, #296]	@ (8011314 <I2C_DMAAbort+0x14c>)
 80111ea:	fba2 2303 	umull	r2, r3, r2, r3
 80111ee:	0a1a      	lsrs	r2, r3, #8
 80111f0:	4613      	mov	r3, r2
 80111f2:	009b      	lsls	r3, r3, #2
 80111f4:	4413      	add	r3, r2
 80111f6:	00da      	lsls	r2, r3, #3
 80111f8:	1ad3      	subs	r3, r2, r3
 80111fa:	60fb      	str	r3, [r7, #12]
 80111fc:	68fb      	ldr	r3, [r7, #12]
 80111fe:	2b00      	cmp	r3, #0
 8011200:	d106      	bne.n	8011210 <I2C_DMAAbort+0x48>
 8011202:	697b      	ldr	r3, [r7, #20]
 8011204:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011206:	f043 0220 	orr.w	r2, r3, #32
 801120a:	697b      	ldr	r3, [r7, #20]
 801120c:	641a      	str	r2, [r3, #64]	@ 0x40
 801120e:	e00a      	b.n	8011226 <I2C_DMAAbort+0x5e>
 8011210:	68fb      	ldr	r3, [r7, #12]
 8011212:	3b01      	subs	r3, #1
 8011214:	60fb      	str	r3, [r7, #12]
 8011216:	697b      	ldr	r3, [r7, #20]
 8011218:	681b      	ldr	r3, [r3, #0]
 801121a:	681b      	ldr	r3, [r3, #0]
 801121c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8011220:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8011224:	d0ea      	beq.n	80111fc <I2C_DMAAbort+0x34>
 8011226:	697b      	ldr	r3, [r7, #20]
 8011228:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801122a:	2b00      	cmp	r3, #0
 801122c:	d003      	beq.n	8011236 <I2C_DMAAbort+0x6e>
 801122e:	697b      	ldr	r3, [r7, #20]
 8011230:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011232:	2200      	movs	r2, #0
 8011234:	63da      	str	r2, [r3, #60]	@ 0x3c
 8011236:	697b      	ldr	r3, [r7, #20]
 8011238:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801123a:	2b00      	cmp	r3, #0
 801123c:	d003      	beq.n	8011246 <I2C_DMAAbort+0x7e>
 801123e:	697b      	ldr	r3, [r7, #20]
 8011240:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011242:	2200      	movs	r2, #0
 8011244:	63da      	str	r2, [r3, #60]	@ 0x3c
 8011246:	697b      	ldr	r3, [r7, #20]
 8011248:	681b      	ldr	r3, [r3, #0]
 801124a:	681a      	ldr	r2, [r3, #0]
 801124c:	697b      	ldr	r3, [r7, #20]
 801124e:	681b      	ldr	r3, [r3, #0]
 8011250:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8011254:	601a      	str	r2, [r3, #0]
 8011256:	697b      	ldr	r3, [r7, #20]
 8011258:	2200      	movs	r2, #0
 801125a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 801125c:	697b      	ldr	r3, [r7, #20]
 801125e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011260:	2b00      	cmp	r3, #0
 8011262:	d003      	beq.n	801126c <I2C_DMAAbort+0xa4>
 8011264:	697b      	ldr	r3, [r7, #20]
 8011266:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011268:	2200      	movs	r2, #0
 801126a:	651a      	str	r2, [r3, #80]	@ 0x50
 801126c:	697b      	ldr	r3, [r7, #20]
 801126e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011270:	2b00      	cmp	r3, #0
 8011272:	d003      	beq.n	801127c <I2C_DMAAbort+0xb4>
 8011274:	697b      	ldr	r3, [r7, #20]
 8011276:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011278:	2200      	movs	r2, #0
 801127a:	651a      	str	r2, [r3, #80]	@ 0x50
 801127c:	697b      	ldr	r3, [r7, #20]
 801127e:	681b      	ldr	r3, [r3, #0]
 8011280:	681a      	ldr	r2, [r3, #0]
 8011282:	697b      	ldr	r3, [r7, #20]
 8011284:	681b      	ldr	r3, [r3, #0]
 8011286:	f022 0201 	bic.w	r2, r2, #1
 801128a:	601a      	str	r2, [r3, #0]
 801128c:	697b      	ldr	r3, [r7, #20]
 801128e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8011292:	b2db      	uxtb	r3, r3
 8011294:	2b60      	cmp	r3, #96	@ 0x60
 8011296:	d10e      	bne.n	80112b6 <I2C_DMAAbort+0xee>
 8011298:	697b      	ldr	r3, [r7, #20]
 801129a:	2220      	movs	r2, #32
 801129c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80112a0:	697b      	ldr	r3, [r7, #20]
 80112a2:	2200      	movs	r2, #0
 80112a4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80112a8:	697b      	ldr	r3, [r7, #20]
 80112aa:	2200      	movs	r2, #0
 80112ac:	641a      	str	r2, [r3, #64]	@ 0x40
 80112ae:	6978      	ldr	r0, [r7, #20]
 80112b0:	f7ff fb4d 	bl	801094e <HAL_I2C_AbortCpltCallback>
 80112b4:	e027      	b.n	8011306 <I2C_DMAAbort+0x13e>
 80112b6:	7cfb      	ldrb	r3, [r7, #19]
 80112b8:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 80112bc:	2b28      	cmp	r3, #40	@ 0x28
 80112be:	d117      	bne.n	80112f0 <I2C_DMAAbort+0x128>
 80112c0:	697b      	ldr	r3, [r7, #20]
 80112c2:	681b      	ldr	r3, [r3, #0]
 80112c4:	681a      	ldr	r2, [r3, #0]
 80112c6:	697b      	ldr	r3, [r7, #20]
 80112c8:	681b      	ldr	r3, [r3, #0]
 80112ca:	f042 0201 	orr.w	r2, r2, #1
 80112ce:	601a      	str	r2, [r3, #0]
 80112d0:	697b      	ldr	r3, [r7, #20]
 80112d2:	681b      	ldr	r3, [r3, #0]
 80112d4:	681a      	ldr	r2, [r3, #0]
 80112d6:	697b      	ldr	r3, [r7, #20]
 80112d8:	681b      	ldr	r3, [r3, #0]
 80112da:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80112de:	601a      	str	r2, [r3, #0]
 80112e0:	697b      	ldr	r3, [r7, #20]
 80112e2:	2200      	movs	r2, #0
 80112e4:	631a      	str	r2, [r3, #48]	@ 0x30
 80112e6:	697b      	ldr	r3, [r7, #20]
 80112e8:	2228      	movs	r2, #40	@ 0x28
 80112ea:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80112ee:	e007      	b.n	8011300 <I2C_DMAAbort+0x138>
 80112f0:	697b      	ldr	r3, [r7, #20]
 80112f2:	2220      	movs	r2, #32
 80112f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80112f8:	697b      	ldr	r3, [r7, #20]
 80112fa:	2200      	movs	r2, #0
 80112fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011300:	6978      	ldr	r0, [r7, #20]
 8011302:	f7ff fb1a 	bl	801093a <HAL_I2C_ErrorCallback>
 8011306:	bf00      	nop
 8011308:	3718      	adds	r7, #24
 801130a:	46bd      	mov	sp, r7
 801130c:	bd80      	pop	{r7, pc}
 801130e:	bf00      	nop
 8011310:	20000004 	.word	0x20000004
 8011314:	14f8b589 	.word	0x14f8b589

08011318 <I2C_WaitOnFlagUntilTimeout>:
 8011318:	b580      	push	{r7, lr}
 801131a:	b084      	sub	sp, #16
 801131c:	af00      	add	r7, sp, #0
 801131e:	60f8      	str	r0, [r7, #12]
 8011320:	60b9      	str	r1, [r7, #8]
 8011322:	603b      	str	r3, [r7, #0]
 8011324:	4613      	mov	r3, r2
 8011326:	71fb      	strb	r3, [r7, #7]
 8011328:	e025      	b.n	8011376 <I2C_WaitOnFlagUntilTimeout+0x5e>
 801132a:	683b      	ldr	r3, [r7, #0]
 801132c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8011330:	d021      	beq.n	8011376 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8011332:	f7fc fc41 	bl	800dbb8 <HAL_GetTick>
 8011336:	4602      	mov	r2, r0
 8011338:	69bb      	ldr	r3, [r7, #24]
 801133a:	1ad3      	subs	r3, r2, r3
 801133c:	683a      	ldr	r2, [r7, #0]
 801133e:	429a      	cmp	r2, r3
 8011340:	d302      	bcc.n	8011348 <I2C_WaitOnFlagUntilTimeout+0x30>
 8011342:	683b      	ldr	r3, [r7, #0]
 8011344:	2b00      	cmp	r3, #0
 8011346:	d116      	bne.n	8011376 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8011348:	68fb      	ldr	r3, [r7, #12]
 801134a:	2200      	movs	r2, #0
 801134c:	631a      	str	r2, [r3, #48]	@ 0x30
 801134e:	68fb      	ldr	r3, [r7, #12]
 8011350:	2220      	movs	r2, #32
 8011352:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011356:	68fb      	ldr	r3, [r7, #12]
 8011358:	2200      	movs	r2, #0
 801135a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801135e:	68fb      	ldr	r3, [r7, #12]
 8011360:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011362:	f043 0220 	orr.w	r2, r3, #32
 8011366:	68fb      	ldr	r3, [r7, #12]
 8011368:	641a      	str	r2, [r3, #64]	@ 0x40
 801136a:	68fb      	ldr	r3, [r7, #12]
 801136c:	2200      	movs	r2, #0
 801136e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011372:	2301      	movs	r3, #1
 8011374:	e023      	b.n	80113be <I2C_WaitOnFlagUntilTimeout+0xa6>
 8011376:	68bb      	ldr	r3, [r7, #8]
 8011378:	0c1b      	lsrs	r3, r3, #16
 801137a:	b2db      	uxtb	r3, r3
 801137c:	2b01      	cmp	r3, #1
 801137e:	d10d      	bne.n	801139c <I2C_WaitOnFlagUntilTimeout+0x84>
 8011380:	68fb      	ldr	r3, [r7, #12]
 8011382:	681b      	ldr	r3, [r3, #0]
 8011384:	695b      	ldr	r3, [r3, #20]
 8011386:	43da      	mvns	r2, r3
 8011388:	68bb      	ldr	r3, [r7, #8]
 801138a:	4013      	ands	r3, r2
 801138c:	b29b      	uxth	r3, r3
 801138e:	2b00      	cmp	r3, #0
 8011390:	bf0c      	ite	eq
 8011392:	2301      	moveq	r3, #1
 8011394:	2300      	movne	r3, #0
 8011396:	b2db      	uxtb	r3, r3
 8011398:	461a      	mov	r2, r3
 801139a:	e00c      	b.n	80113b6 <I2C_WaitOnFlagUntilTimeout+0x9e>
 801139c:	68fb      	ldr	r3, [r7, #12]
 801139e:	681b      	ldr	r3, [r3, #0]
 80113a0:	699b      	ldr	r3, [r3, #24]
 80113a2:	43da      	mvns	r2, r3
 80113a4:	68bb      	ldr	r3, [r7, #8]
 80113a6:	4013      	ands	r3, r2
 80113a8:	b29b      	uxth	r3, r3
 80113aa:	2b00      	cmp	r3, #0
 80113ac:	bf0c      	ite	eq
 80113ae:	2301      	moveq	r3, #1
 80113b0:	2300      	movne	r3, #0
 80113b2:	b2db      	uxtb	r3, r3
 80113b4:	461a      	mov	r2, r3
 80113b6:	79fb      	ldrb	r3, [r7, #7]
 80113b8:	429a      	cmp	r2, r3
 80113ba:	d0b6      	beq.n	801132a <I2C_WaitOnFlagUntilTimeout+0x12>
 80113bc:	2300      	movs	r3, #0
 80113be:	4618      	mov	r0, r3
 80113c0:	3710      	adds	r7, #16
 80113c2:	46bd      	mov	sp, r7
 80113c4:	bd80      	pop	{r7, pc}

080113c6 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80113c6:	b580      	push	{r7, lr}
 80113c8:	b084      	sub	sp, #16
 80113ca:	af00      	add	r7, sp, #0
 80113cc:	60f8      	str	r0, [r7, #12]
 80113ce:	60b9      	str	r1, [r7, #8]
 80113d0:	607a      	str	r2, [r7, #4]
 80113d2:	603b      	str	r3, [r7, #0]
 80113d4:	e051      	b.n	801147a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80113d6:	68fb      	ldr	r3, [r7, #12]
 80113d8:	681b      	ldr	r3, [r3, #0]
 80113da:	695b      	ldr	r3, [r3, #20]
 80113dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80113e0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80113e4:	d123      	bne.n	801142e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80113e6:	68fb      	ldr	r3, [r7, #12]
 80113e8:	681b      	ldr	r3, [r3, #0]
 80113ea:	681a      	ldr	r2, [r3, #0]
 80113ec:	68fb      	ldr	r3, [r7, #12]
 80113ee:	681b      	ldr	r3, [r3, #0]
 80113f0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80113f4:	601a      	str	r2, [r3, #0]
 80113f6:	68fb      	ldr	r3, [r7, #12]
 80113f8:	681b      	ldr	r3, [r3, #0]
 80113fa:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80113fe:	615a      	str	r2, [r3, #20]
 8011400:	68fb      	ldr	r3, [r7, #12]
 8011402:	2200      	movs	r2, #0
 8011404:	631a      	str	r2, [r3, #48]	@ 0x30
 8011406:	68fb      	ldr	r3, [r7, #12]
 8011408:	2220      	movs	r2, #32
 801140a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801140e:	68fb      	ldr	r3, [r7, #12]
 8011410:	2200      	movs	r2, #0
 8011412:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011416:	68fb      	ldr	r3, [r7, #12]
 8011418:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801141a:	f043 0204 	orr.w	r2, r3, #4
 801141e:	68fb      	ldr	r3, [r7, #12]
 8011420:	641a      	str	r2, [r3, #64]	@ 0x40
 8011422:	68fb      	ldr	r3, [r7, #12]
 8011424:	2200      	movs	r2, #0
 8011426:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801142a:	2301      	movs	r3, #1
 801142c:	e046      	b.n	80114bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 801142e:	687b      	ldr	r3, [r7, #4]
 8011430:	f1b3 3fff 	cmp.w	r3, #4294967295
 8011434:	d021      	beq.n	801147a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8011436:	f7fc fbbf 	bl	800dbb8 <HAL_GetTick>
 801143a:	4602      	mov	r2, r0
 801143c:	683b      	ldr	r3, [r7, #0]
 801143e:	1ad3      	subs	r3, r2, r3
 8011440:	687a      	ldr	r2, [r7, #4]
 8011442:	429a      	cmp	r2, r3
 8011444:	d302      	bcc.n	801144c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8011446:	687b      	ldr	r3, [r7, #4]
 8011448:	2b00      	cmp	r3, #0
 801144a:	d116      	bne.n	801147a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 801144c:	68fb      	ldr	r3, [r7, #12]
 801144e:	2200      	movs	r2, #0
 8011450:	631a      	str	r2, [r3, #48]	@ 0x30
 8011452:	68fb      	ldr	r3, [r7, #12]
 8011454:	2220      	movs	r2, #32
 8011456:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801145a:	68fb      	ldr	r3, [r7, #12]
 801145c:	2200      	movs	r2, #0
 801145e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011462:	68fb      	ldr	r3, [r7, #12]
 8011464:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011466:	f043 0220 	orr.w	r2, r3, #32
 801146a:	68fb      	ldr	r3, [r7, #12]
 801146c:	641a      	str	r2, [r3, #64]	@ 0x40
 801146e:	68fb      	ldr	r3, [r7, #12]
 8011470:	2200      	movs	r2, #0
 8011472:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011476:	2301      	movs	r3, #1
 8011478:	e020      	b.n	80114bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 801147a:	68bb      	ldr	r3, [r7, #8]
 801147c:	0c1b      	lsrs	r3, r3, #16
 801147e:	b2db      	uxtb	r3, r3
 8011480:	2b01      	cmp	r3, #1
 8011482:	d10c      	bne.n	801149e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8011484:	68fb      	ldr	r3, [r7, #12]
 8011486:	681b      	ldr	r3, [r3, #0]
 8011488:	695b      	ldr	r3, [r3, #20]
 801148a:	43da      	mvns	r2, r3
 801148c:	68bb      	ldr	r3, [r7, #8]
 801148e:	4013      	ands	r3, r2
 8011490:	b29b      	uxth	r3, r3
 8011492:	2b00      	cmp	r3, #0
 8011494:	bf14      	ite	ne
 8011496:	2301      	movne	r3, #1
 8011498:	2300      	moveq	r3, #0
 801149a:	b2db      	uxtb	r3, r3
 801149c:	e00b      	b.n	80114b6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 801149e:	68fb      	ldr	r3, [r7, #12]
 80114a0:	681b      	ldr	r3, [r3, #0]
 80114a2:	699b      	ldr	r3, [r3, #24]
 80114a4:	43da      	mvns	r2, r3
 80114a6:	68bb      	ldr	r3, [r7, #8]
 80114a8:	4013      	ands	r3, r2
 80114aa:	b29b      	uxth	r3, r3
 80114ac:	2b00      	cmp	r3, #0
 80114ae:	bf14      	ite	ne
 80114b0:	2301      	movne	r3, #1
 80114b2:	2300      	moveq	r3, #0
 80114b4:	b2db      	uxtb	r3, r3
 80114b6:	2b00      	cmp	r3, #0
 80114b8:	d18d      	bne.n	80113d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80114ba:	2300      	movs	r3, #0
 80114bc:	4618      	mov	r0, r3
 80114be:	3710      	adds	r7, #16
 80114c0:	46bd      	mov	sp, r7
 80114c2:	bd80      	pop	{r7, pc}

080114c4 <I2C_WaitOnTXEFlagUntilTimeout>:
 80114c4:	b580      	push	{r7, lr}
 80114c6:	b084      	sub	sp, #16
 80114c8:	af00      	add	r7, sp, #0
 80114ca:	60f8      	str	r0, [r7, #12]
 80114cc:	60b9      	str	r1, [r7, #8]
 80114ce:	607a      	str	r2, [r7, #4]
 80114d0:	e02d      	b.n	801152e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80114d2:	68f8      	ldr	r0, [r7, #12]
 80114d4:	f000 f8ce 	bl	8011674 <I2C_IsAcknowledgeFailed>
 80114d8:	4603      	mov	r3, r0
 80114da:	2b00      	cmp	r3, #0
 80114dc:	d001      	beq.n	80114e2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80114de:	2301      	movs	r3, #1
 80114e0:	e02d      	b.n	801153e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80114e2:	68bb      	ldr	r3, [r7, #8]
 80114e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80114e8:	d021      	beq.n	801152e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80114ea:	f7fc fb65 	bl	800dbb8 <HAL_GetTick>
 80114ee:	4602      	mov	r2, r0
 80114f0:	687b      	ldr	r3, [r7, #4]
 80114f2:	1ad3      	subs	r3, r2, r3
 80114f4:	68ba      	ldr	r2, [r7, #8]
 80114f6:	429a      	cmp	r2, r3
 80114f8:	d302      	bcc.n	8011500 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80114fa:	68bb      	ldr	r3, [r7, #8]
 80114fc:	2b00      	cmp	r3, #0
 80114fe:	d116      	bne.n	801152e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8011500:	68fb      	ldr	r3, [r7, #12]
 8011502:	2200      	movs	r2, #0
 8011504:	631a      	str	r2, [r3, #48]	@ 0x30
 8011506:	68fb      	ldr	r3, [r7, #12]
 8011508:	2220      	movs	r2, #32
 801150a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801150e:	68fb      	ldr	r3, [r7, #12]
 8011510:	2200      	movs	r2, #0
 8011512:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011516:	68fb      	ldr	r3, [r7, #12]
 8011518:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801151a:	f043 0220 	orr.w	r2, r3, #32
 801151e:	68fb      	ldr	r3, [r7, #12]
 8011520:	641a      	str	r2, [r3, #64]	@ 0x40
 8011522:	68fb      	ldr	r3, [r7, #12]
 8011524:	2200      	movs	r2, #0
 8011526:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801152a:	2301      	movs	r3, #1
 801152c:	e007      	b.n	801153e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 801152e:	68fb      	ldr	r3, [r7, #12]
 8011530:	681b      	ldr	r3, [r3, #0]
 8011532:	695b      	ldr	r3, [r3, #20]
 8011534:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011538:	2b80      	cmp	r3, #128	@ 0x80
 801153a:	d1ca      	bne.n	80114d2 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 801153c:	2300      	movs	r3, #0
 801153e:	4618      	mov	r0, r3
 8011540:	3710      	adds	r7, #16
 8011542:	46bd      	mov	sp, r7
 8011544:	bd80      	pop	{r7, pc}

08011546 <I2C_WaitOnBTFFlagUntilTimeout>:
 8011546:	b580      	push	{r7, lr}
 8011548:	b084      	sub	sp, #16
 801154a:	af00      	add	r7, sp, #0
 801154c:	60f8      	str	r0, [r7, #12]
 801154e:	60b9      	str	r1, [r7, #8]
 8011550:	607a      	str	r2, [r7, #4]
 8011552:	e02d      	b.n	80115b0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8011554:	68f8      	ldr	r0, [r7, #12]
 8011556:	f000 f88d 	bl	8011674 <I2C_IsAcknowledgeFailed>
 801155a:	4603      	mov	r3, r0
 801155c:	2b00      	cmp	r3, #0
 801155e:	d001      	beq.n	8011564 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8011560:	2301      	movs	r3, #1
 8011562:	e02d      	b.n	80115c0 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8011564:	68bb      	ldr	r3, [r7, #8]
 8011566:	f1b3 3fff 	cmp.w	r3, #4294967295
 801156a:	d021      	beq.n	80115b0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 801156c:	f7fc fb24 	bl	800dbb8 <HAL_GetTick>
 8011570:	4602      	mov	r2, r0
 8011572:	687b      	ldr	r3, [r7, #4]
 8011574:	1ad3      	subs	r3, r2, r3
 8011576:	68ba      	ldr	r2, [r7, #8]
 8011578:	429a      	cmp	r2, r3
 801157a:	d302      	bcc.n	8011582 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 801157c:	68bb      	ldr	r3, [r7, #8]
 801157e:	2b00      	cmp	r3, #0
 8011580:	d116      	bne.n	80115b0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8011582:	68fb      	ldr	r3, [r7, #12]
 8011584:	2200      	movs	r2, #0
 8011586:	631a      	str	r2, [r3, #48]	@ 0x30
 8011588:	68fb      	ldr	r3, [r7, #12]
 801158a:	2220      	movs	r2, #32
 801158c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8011590:	68fb      	ldr	r3, [r7, #12]
 8011592:	2200      	movs	r2, #0
 8011594:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011598:	68fb      	ldr	r3, [r7, #12]
 801159a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801159c:	f043 0220 	orr.w	r2, r3, #32
 80115a0:	68fb      	ldr	r3, [r7, #12]
 80115a2:	641a      	str	r2, [r3, #64]	@ 0x40
 80115a4:	68fb      	ldr	r3, [r7, #12]
 80115a6:	2200      	movs	r2, #0
 80115a8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80115ac:	2301      	movs	r3, #1
 80115ae:	e007      	b.n	80115c0 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 80115b0:	68fb      	ldr	r3, [r7, #12]
 80115b2:	681b      	ldr	r3, [r3, #0]
 80115b4:	695b      	ldr	r3, [r3, #20]
 80115b6:	f003 0304 	and.w	r3, r3, #4
 80115ba:	2b04      	cmp	r3, #4
 80115bc:	d1ca      	bne.n	8011554 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80115be:	2300      	movs	r3, #0
 80115c0:	4618      	mov	r0, r3
 80115c2:	3710      	adds	r7, #16
 80115c4:	46bd      	mov	sp, r7
 80115c6:	bd80      	pop	{r7, pc}

080115c8 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80115c8:	b580      	push	{r7, lr}
 80115ca:	b084      	sub	sp, #16
 80115cc:	af00      	add	r7, sp, #0
 80115ce:	60f8      	str	r0, [r7, #12]
 80115d0:	60b9      	str	r1, [r7, #8]
 80115d2:	607a      	str	r2, [r7, #4]
 80115d4:	e042      	b.n	801165c <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80115d6:	68fb      	ldr	r3, [r7, #12]
 80115d8:	681b      	ldr	r3, [r3, #0]
 80115da:	695b      	ldr	r3, [r3, #20]
 80115dc:	f003 0310 	and.w	r3, r3, #16
 80115e0:	2b10      	cmp	r3, #16
 80115e2:	d119      	bne.n	8011618 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80115e4:	68fb      	ldr	r3, [r7, #12]
 80115e6:	681b      	ldr	r3, [r3, #0]
 80115e8:	f06f 0210 	mvn.w	r2, #16
 80115ec:	615a      	str	r2, [r3, #20]
 80115ee:	68fb      	ldr	r3, [r7, #12]
 80115f0:	2200      	movs	r2, #0
 80115f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80115f4:	68fb      	ldr	r3, [r7, #12]
 80115f6:	2220      	movs	r2, #32
 80115f8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80115fc:	68fb      	ldr	r3, [r7, #12]
 80115fe:	2200      	movs	r2, #0
 8011600:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011604:	68fb      	ldr	r3, [r7, #12]
 8011606:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8011608:	68fb      	ldr	r3, [r7, #12]
 801160a:	641a      	str	r2, [r3, #64]	@ 0x40
 801160c:	68fb      	ldr	r3, [r7, #12]
 801160e:	2200      	movs	r2, #0
 8011610:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011614:	2301      	movs	r3, #1
 8011616:	e029      	b.n	801166c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8011618:	f7fc face 	bl	800dbb8 <HAL_GetTick>
 801161c:	4602      	mov	r2, r0
 801161e:	687b      	ldr	r3, [r7, #4]
 8011620:	1ad3      	subs	r3, r2, r3
 8011622:	68ba      	ldr	r2, [r7, #8]
 8011624:	429a      	cmp	r2, r3
 8011626:	d302      	bcc.n	801162e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8011628:	68bb      	ldr	r3, [r7, #8]
 801162a:	2b00      	cmp	r3, #0
 801162c:	d116      	bne.n	801165c <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 801162e:	68fb      	ldr	r3, [r7, #12]
 8011630:	2200      	movs	r2, #0
 8011632:	631a      	str	r2, [r3, #48]	@ 0x30
 8011634:	68fb      	ldr	r3, [r7, #12]
 8011636:	2220      	movs	r2, #32
 8011638:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801163c:	68fb      	ldr	r3, [r7, #12]
 801163e:	2200      	movs	r2, #0
 8011640:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8011644:	68fb      	ldr	r3, [r7, #12]
 8011646:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011648:	f043 0220 	orr.w	r2, r3, #32
 801164c:	68fb      	ldr	r3, [r7, #12]
 801164e:	641a      	str	r2, [r3, #64]	@ 0x40
 8011650:	68fb      	ldr	r3, [r7, #12]
 8011652:	2200      	movs	r2, #0
 8011654:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8011658:	2301      	movs	r3, #1
 801165a:	e007      	b.n	801166c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 801165c:	68fb      	ldr	r3, [r7, #12]
 801165e:	681b      	ldr	r3, [r3, #0]
 8011660:	695b      	ldr	r3, [r3, #20]
 8011662:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8011666:	2b40      	cmp	r3, #64	@ 0x40
 8011668:	d1b5      	bne.n	80115d6 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 801166a:	2300      	movs	r3, #0
 801166c:	4618      	mov	r0, r3
 801166e:	3710      	adds	r7, #16
 8011670:	46bd      	mov	sp, r7
 8011672:	bd80      	pop	{r7, pc}

08011674 <I2C_IsAcknowledgeFailed>:
 8011674:	b480      	push	{r7}
 8011676:	b083      	sub	sp, #12
 8011678:	af00      	add	r7, sp, #0
 801167a:	6078      	str	r0, [r7, #4]
 801167c:	687b      	ldr	r3, [r7, #4]
 801167e:	681b      	ldr	r3, [r3, #0]
 8011680:	695b      	ldr	r3, [r3, #20]
 8011682:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8011686:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801168a:	d11b      	bne.n	80116c4 <I2C_IsAcknowledgeFailed+0x50>
 801168c:	687b      	ldr	r3, [r7, #4]
 801168e:	681b      	ldr	r3, [r3, #0]
 8011690:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8011694:	615a      	str	r2, [r3, #20]
 8011696:	687b      	ldr	r3, [r7, #4]
 8011698:	2200      	movs	r2, #0
 801169a:	631a      	str	r2, [r3, #48]	@ 0x30
 801169c:	687b      	ldr	r3, [r7, #4]
 801169e:	2220      	movs	r2, #32
 80116a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80116a4:	687b      	ldr	r3, [r7, #4]
 80116a6:	2200      	movs	r2, #0
 80116a8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80116ac:	687b      	ldr	r3, [r7, #4]
 80116ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80116b0:	f043 0204 	orr.w	r2, r3, #4
 80116b4:	687b      	ldr	r3, [r7, #4]
 80116b6:	641a      	str	r2, [r3, #64]	@ 0x40
 80116b8:	687b      	ldr	r3, [r7, #4]
 80116ba:	2200      	movs	r2, #0
 80116bc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80116c0:	2301      	movs	r3, #1
 80116c2:	e000      	b.n	80116c6 <I2C_IsAcknowledgeFailed+0x52>
 80116c4:	2300      	movs	r3, #0
 80116c6:	4618      	mov	r0, r3
 80116c8:	370c      	adds	r7, #12
 80116ca:	46bd      	mov	sp, r7
 80116cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116d0:	4770      	bx	lr

080116d2 <HAL_PCD_Init>:
 80116d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80116d4:	b08f      	sub	sp, #60	@ 0x3c
 80116d6:	af0a      	add	r7, sp, #40	@ 0x28
 80116d8:	6078      	str	r0, [r7, #4]
 80116da:	687b      	ldr	r3, [r7, #4]
 80116dc:	2b00      	cmp	r3, #0
 80116de:	d101      	bne.n	80116e4 <HAL_PCD_Init+0x12>
 80116e0:	2301      	movs	r3, #1
 80116e2:	e10f      	b.n	8011904 <HAL_PCD_Init+0x232>
 80116e4:	687b      	ldr	r3, [r7, #4]
 80116e6:	681b      	ldr	r3, [r3, #0]
 80116e8:	60bb      	str	r3, [r7, #8]
 80116ea:	687b      	ldr	r3, [r7, #4]
 80116ec:	f893 34bd 	ldrb.w	r3, [r3, #1213]	@ 0x4bd
 80116f0:	b2db      	uxtb	r3, r3
 80116f2:	2b00      	cmp	r3, #0
 80116f4:	d106      	bne.n	8011704 <HAL_PCD_Init+0x32>
 80116f6:	687b      	ldr	r3, [r7, #4]
 80116f8:	2200      	movs	r2, #0
 80116fa:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 80116fe:	6878      	ldr	r0, [r7, #4]
 8011700:	f00b fd1a 	bl	801d138 <HAL_PCD_MspInit>
 8011704:	687b      	ldr	r3, [r7, #4]
 8011706:	2203      	movs	r2, #3
 8011708:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 801170c:	68bb      	ldr	r3, [r7, #8]
 801170e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011710:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011714:	2b00      	cmp	r3, #0
 8011716:	d102      	bne.n	801171e <HAL_PCD_Init+0x4c>
 8011718:	687b      	ldr	r3, [r7, #4]
 801171a:	2200      	movs	r2, #0
 801171c:	611a      	str	r2, [r3, #16]
 801171e:	687b      	ldr	r3, [r7, #4]
 8011720:	681b      	ldr	r3, [r3, #0]
 8011722:	4618      	mov	r0, r3
 8011724:	f004 ff2b 	bl	801657e <USB_DisableGlobalInt>
 8011728:	687b      	ldr	r3, [r7, #4]
 801172a:	681b      	ldr	r3, [r3, #0]
 801172c:	603b      	str	r3, [r7, #0]
 801172e:	687e      	ldr	r6, [r7, #4]
 8011730:	466d      	mov	r5, sp
 8011732:	f106 0410 	add.w	r4, r6, #16
 8011736:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011738:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801173a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801173c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 801173e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8011742:	e885 0003 	stmia.w	r5, {r0, r1}
 8011746:	1d33      	adds	r3, r6, #4
 8011748:	cb0e      	ldmia	r3, {r1, r2, r3}
 801174a:	6838      	ldr	r0, [r7, #0]
 801174c:	f004 fe02 	bl	8016354 <USB_CoreInit>
 8011750:	4603      	mov	r3, r0
 8011752:	2b00      	cmp	r3, #0
 8011754:	d005      	beq.n	8011762 <HAL_PCD_Init+0x90>
 8011756:	687b      	ldr	r3, [r7, #4]
 8011758:	2202      	movs	r2, #2
 801175a:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 801175e:	2301      	movs	r3, #1
 8011760:	e0d0      	b.n	8011904 <HAL_PCD_Init+0x232>
 8011762:	687b      	ldr	r3, [r7, #4]
 8011764:	681b      	ldr	r3, [r3, #0]
 8011766:	2100      	movs	r1, #0
 8011768:	4618      	mov	r0, r3
 801176a:	f004 ff19 	bl	80165a0 <USB_SetCurrentMode>
 801176e:	2300      	movs	r3, #0
 8011770:	73fb      	strb	r3, [r7, #15]
 8011772:	e04a      	b.n	801180a <HAL_PCD_Init+0x138>
 8011774:	7bfa      	ldrb	r2, [r7, #15]
 8011776:	6879      	ldr	r1, [r7, #4]
 8011778:	4613      	mov	r3, r2
 801177a:	00db      	lsls	r3, r3, #3
 801177c:	4413      	add	r3, r2
 801177e:	009b      	lsls	r3, r3, #2
 8011780:	440b      	add	r3, r1
 8011782:	333d      	adds	r3, #61	@ 0x3d
 8011784:	2201      	movs	r2, #1
 8011786:	701a      	strb	r2, [r3, #0]
 8011788:	7bfa      	ldrb	r2, [r7, #15]
 801178a:	6879      	ldr	r1, [r7, #4]
 801178c:	4613      	mov	r3, r2
 801178e:	00db      	lsls	r3, r3, #3
 8011790:	4413      	add	r3, r2
 8011792:	009b      	lsls	r3, r3, #2
 8011794:	440b      	add	r3, r1
 8011796:	333c      	adds	r3, #60	@ 0x3c
 8011798:	7bfa      	ldrb	r2, [r7, #15]
 801179a:	701a      	strb	r2, [r3, #0]
 801179c:	7bfa      	ldrb	r2, [r7, #15]
 801179e:	7bfb      	ldrb	r3, [r7, #15]
 80117a0:	b298      	uxth	r0, r3
 80117a2:	6879      	ldr	r1, [r7, #4]
 80117a4:	4613      	mov	r3, r2
 80117a6:	00db      	lsls	r3, r3, #3
 80117a8:	4413      	add	r3, r2
 80117aa:	009b      	lsls	r3, r3, #2
 80117ac:	440b      	add	r3, r1
 80117ae:	3344      	adds	r3, #68	@ 0x44
 80117b0:	4602      	mov	r2, r0
 80117b2:	801a      	strh	r2, [r3, #0]
 80117b4:	7bfa      	ldrb	r2, [r7, #15]
 80117b6:	6879      	ldr	r1, [r7, #4]
 80117b8:	4613      	mov	r3, r2
 80117ba:	00db      	lsls	r3, r3, #3
 80117bc:	4413      	add	r3, r2
 80117be:	009b      	lsls	r3, r3, #2
 80117c0:	440b      	add	r3, r1
 80117c2:	3340      	adds	r3, #64	@ 0x40
 80117c4:	2200      	movs	r2, #0
 80117c6:	701a      	strb	r2, [r3, #0]
 80117c8:	7bfa      	ldrb	r2, [r7, #15]
 80117ca:	6879      	ldr	r1, [r7, #4]
 80117cc:	4613      	mov	r3, r2
 80117ce:	00db      	lsls	r3, r3, #3
 80117d0:	4413      	add	r3, r2
 80117d2:	009b      	lsls	r3, r3, #2
 80117d4:	440b      	add	r3, r1
 80117d6:	3348      	adds	r3, #72	@ 0x48
 80117d8:	2200      	movs	r2, #0
 80117da:	601a      	str	r2, [r3, #0]
 80117dc:	7bfa      	ldrb	r2, [r7, #15]
 80117de:	6879      	ldr	r1, [r7, #4]
 80117e0:	4613      	mov	r3, r2
 80117e2:	00db      	lsls	r3, r3, #3
 80117e4:	4413      	add	r3, r2
 80117e6:	009b      	lsls	r3, r3, #2
 80117e8:	440b      	add	r3, r1
 80117ea:	334c      	adds	r3, #76	@ 0x4c
 80117ec:	2200      	movs	r2, #0
 80117ee:	601a      	str	r2, [r3, #0]
 80117f0:	7bfa      	ldrb	r2, [r7, #15]
 80117f2:	6879      	ldr	r1, [r7, #4]
 80117f4:	4613      	mov	r3, r2
 80117f6:	00db      	lsls	r3, r3, #3
 80117f8:	4413      	add	r3, r2
 80117fa:	009b      	lsls	r3, r3, #2
 80117fc:	440b      	add	r3, r1
 80117fe:	3354      	adds	r3, #84	@ 0x54
 8011800:	2200      	movs	r2, #0
 8011802:	601a      	str	r2, [r3, #0]
 8011804:	7bfb      	ldrb	r3, [r7, #15]
 8011806:	3301      	adds	r3, #1
 8011808:	73fb      	strb	r3, [r7, #15]
 801180a:	7bfa      	ldrb	r2, [r7, #15]
 801180c:	687b      	ldr	r3, [r7, #4]
 801180e:	685b      	ldr	r3, [r3, #4]
 8011810:	429a      	cmp	r2, r3
 8011812:	d3af      	bcc.n	8011774 <HAL_PCD_Init+0xa2>
 8011814:	2300      	movs	r3, #0
 8011816:	73fb      	strb	r3, [r7, #15]
 8011818:	e044      	b.n	80118a4 <HAL_PCD_Init+0x1d2>
 801181a:	7bfa      	ldrb	r2, [r7, #15]
 801181c:	6879      	ldr	r1, [r7, #4]
 801181e:	4613      	mov	r3, r2
 8011820:	00db      	lsls	r3, r3, #3
 8011822:	4413      	add	r3, r2
 8011824:	009b      	lsls	r3, r3, #2
 8011826:	440b      	add	r3, r1
 8011828:	f203 237d 	addw	r3, r3, #637	@ 0x27d
 801182c:	2200      	movs	r2, #0
 801182e:	701a      	strb	r2, [r3, #0]
 8011830:	7bfa      	ldrb	r2, [r7, #15]
 8011832:	6879      	ldr	r1, [r7, #4]
 8011834:	4613      	mov	r3, r2
 8011836:	00db      	lsls	r3, r3, #3
 8011838:	4413      	add	r3, r2
 801183a:	009b      	lsls	r3, r3, #2
 801183c:	440b      	add	r3, r1
 801183e:	f503 731f 	add.w	r3, r3, #636	@ 0x27c
 8011842:	7bfa      	ldrb	r2, [r7, #15]
 8011844:	701a      	strb	r2, [r3, #0]
 8011846:	7bfa      	ldrb	r2, [r7, #15]
 8011848:	6879      	ldr	r1, [r7, #4]
 801184a:	4613      	mov	r3, r2
 801184c:	00db      	lsls	r3, r3, #3
 801184e:	4413      	add	r3, r2
 8011850:	009b      	lsls	r3, r3, #2
 8011852:	440b      	add	r3, r1
 8011854:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 8011858:	2200      	movs	r2, #0
 801185a:	701a      	strb	r2, [r3, #0]
 801185c:	7bfa      	ldrb	r2, [r7, #15]
 801185e:	6879      	ldr	r1, [r7, #4]
 8011860:	4613      	mov	r3, r2
 8011862:	00db      	lsls	r3, r3, #3
 8011864:	4413      	add	r3, r2
 8011866:	009b      	lsls	r3, r3, #2
 8011868:	440b      	add	r3, r1
 801186a:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 801186e:	2200      	movs	r2, #0
 8011870:	601a      	str	r2, [r3, #0]
 8011872:	7bfa      	ldrb	r2, [r7, #15]
 8011874:	6879      	ldr	r1, [r7, #4]
 8011876:	4613      	mov	r3, r2
 8011878:	00db      	lsls	r3, r3, #3
 801187a:	4413      	add	r3, r2
 801187c:	009b      	lsls	r3, r3, #2
 801187e:	440b      	add	r3, r1
 8011880:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 8011884:	2200      	movs	r2, #0
 8011886:	601a      	str	r2, [r3, #0]
 8011888:	7bfa      	ldrb	r2, [r7, #15]
 801188a:	6879      	ldr	r1, [r7, #4]
 801188c:	4613      	mov	r3, r2
 801188e:	00db      	lsls	r3, r3, #3
 8011890:	4413      	add	r3, r2
 8011892:	009b      	lsls	r3, r3, #2
 8011894:	440b      	add	r3, r1
 8011896:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 801189a:	2200      	movs	r2, #0
 801189c:	601a      	str	r2, [r3, #0]
 801189e:	7bfb      	ldrb	r3, [r7, #15]
 80118a0:	3301      	adds	r3, #1
 80118a2:	73fb      	strb	r3, [r7, #15]
 80118a4:	7bfa      	ldrb	r2, [r7, #15]
 80118a6:	687b      	ldr	r3, [r7, #4]
 80118a8:	685b      	ldr	r3, [r3, #4]
 80118aa:	429a      	cmp	r2, r3
 80118ac:	d3b5      	bcc.n	801181a <HAL_PCD_Init+0x148>
 80118ae:	687b      	ldr	r3, [r7, #4]
 80118b0:	681b      	ldr	r3, [r3, #0]
 80118b2:	603b      	str	r3, [r7, #0]
 80118b4:	687e      	ldr	r6, [r7, #4]
 80118b6:	466d      	mov	r5, sp
 80118b8:	f106 0410 	add.w	r4, r6, #16
 80118bc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80118be:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80118c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80118c2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80118c4:	e894 0003 	ldmia.w	r4, {r0, r1}
 80118c8:	e885 0003 	stmia.w	r5, {r0, r1}
 80118cc:	1d33      	adds	r3, r6, #4
 80118ce:	cb0e      	ldmia	r3, {r1, r2, r3}
 80118d0:	6838      	ldr	r0, [r7, #0]
 80118d2:	f004 feb1 	bl	8016638 <USB_DevInit>
 80118d6:	4603      	mov	r3, r0
 80118d8:	2b00      	cmp	r3, #0
 80118da:	d005      	beq.n	80118e8 <HAL_PCD_Init+0x216>
 80118dc:	687b      	ldr	r3, [r7, #4]
 80118de:	2202      	movs	r2, #2
 80118e0:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 80118e4:	2301      	movs	r3, #1
 80118e6:	e00d      	b.n	8011904 <HAL_PCD_Init+0x232>
 80118e8:	687b      	ldr	r3, [r7, #4]
 80118ea:	2200      	movs	r2, #0
 80118ec:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80118f0:	687b      	ldr	r3, [r7, #4]
 80118f2:	2201      	movs	r2, #1
 80118f4:	f883 24bd 	strb.w	r2, [r3, #1213]	@ 0x4bd
 80118f8:	687b      	ldr	r3, [r7, #4]
 80118fa:	681b      	ldr	r3, [r3, #0]
 80118fc:	4618      	mov	r0, r3
 80118fe:	f006 f800 	bl	8017902 <USB_DevDisconnect>
 8011902:	2300      	movs	r3, #0
 8011904:	4618      	mov	r0, r3
 8011906:	3714      	adds	r7, #20
 8011908:	46bd      	mov	sp, r7
 801190a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801190c <HAL_PCD_Start>:
 801190c:	b580      	push	{r7, lr}
 801190e:	b084      	sub	sp, #16
 8011910:	af00      	add	r7, sp, #0
 8011912:	6078      	str	r0, [r7, #4]
 8011914:	687b      	ldr	r3, [r7, #4]
 8011916:	681b      	ldr	r3, [r3, #0]
 8011918:	60fb      	str	r3, [r7, #12]
 801191a:	687b      	ldr	r3, [r7, #4]
 801191c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 8011920:	2b01      	cmp	r3, #1
 8011922:	d101      	bne.n	8011928 <HAL_PCD_Start+0x1c>
 8011924:	2302      	movs	r3, #2
 8011926:	e020      	b.n	801196a <HAL_PCD_Start+0x5e>
 8011928:	687b      	ldr	r3, [r7, #4]
 801192a:	2201      	movs	r2, #1
 801192c:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8011930:	687b      	ldr	r3, [r7, #4]
 8011932:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011934:	2b01      	cmp	r3, #1
 8011936:	d109      	bne.n	801194c <HAL_PCD_Start+0x40>
 8011938:	687b      	ldr	r3, [r7, #4]
 801193a:	699b      	ldr	r3, [r3, #24]
 801193c:	2b01      	cmp	r3, #1
 801193e:	d005      	beq.n	801194c <HAL_PCD_Start+0x40>
 8011940:	68fb      	ldr	r3, [r7, #12]
 8011942:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011944:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8011948:	68fb      	ldr	r3, [r7, #12]
 801194a:	639a      	str	r2, [r3, #56]	@ 0x38
 801194c:	687b      	ldr	r3, [r7, #4]
 801194e:	681b      	ldr	r3, [r3, #0]
 8011950:	4618      	mov	r0, r3
 8011952:	f004 fe03 	bl	801655c <USB_EnableGlobalInt>
 8011956:	687b      	ldr	r3, [r7, #4]
 8011958:	681b      	ldr	r3, [r3, #0]
 801195a:	4618      	mov	r0, r3
 801195c:	f005 ffb0 	bl	80178c0 <USB_DevConnect>
 8011960:	687b      	ldr	r3, [r7, #4]
 8011962:	2200      	movs	r2, #0
 8011964:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8011968:	2300      	movs	r3, #0
 801196a:	4618      	mov	r0, r3
 801196c:	3710      	adds	r7, #16
 801196e:	46bd      	mov	sp, r7
 8011970:	bd80      	pop	{r7, pc}

08011972 <HAL_PCD_IRQHandler>:
 8011972:	b590      	push	{r4, r7, lr}
 8011974:	b08d      	sub	sp, #52	@ 0x34
 8011976:	af00      	add	r7, sp, #0
 8011978:	6078      	str	r0, [r7, #4]
 801197a:	687b      	ldr	r3, [r7, #4]
 801197c:	681b      	ldr	r3, [r3, #0]
 801197e:	623b      	str	r3, [r7, #32]
 8011980:	6a3b      	ldr	r3, [r7, #32]
 8011982:	61fb      	str	r3, [r7, #28]
 8011984:	687b      	ldr	r3, [r7, #4]
 8011986:	681b      	ldr	r3, [r3, #0]
 8011988:	4618      	mov	r0, r3
 801198a:	f006 f86e 	bl	8017a6a <USB_GetMode>
 801198e:	4603      	mov	r3, r0
 8011990:	2b00      	cmp	r3, #0
 8011992:	f040 848a 	bne.w	80122aa <HAL_PCD_IRQHandler+0x938>
 8011996:	687b      	ldr	r3, [r7, #4]
 8011998:	681b      	ldr	r3, [r3, #0]
 801199a:	4618      	mov	r0, r3
 801199c:	f005 ffd2 	bl	8017944 <USB_ReadInterrupts>
 80119a0:	4603      	mov	r3, r0
 80119a2:	2b00      	cmp	r3, #0
 80119a4:	f000 8480 	beq.w	80122a8 <HAL_PCD_IRQHandler+0x936>
 80119a8:	69fb      	ldr	r3, [r7, #28]
 80119aa:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80119ae:	689b      	ldr	r3, [r3, #8]
 80119b0:	0a1b      	lsrs	r3, r3, #8
 80119b2:	f3c3 020d 	ubfx	r2, r3, #0, #14
 80119b6:	687b      	ldr	r3, [r7, #4]
 80119b8:	f8c3 24fc 	str.w	r2, [r3, #1276]	@ 0x4fc
 80119bc:	687b      	ldr	r3, [r7, #4]
 80119be:	681b      	ldr	r3, [r3, #0]
 80119c0:	4618      	mov	r0, r3
 80119c2:	f005 ffbf 	bl	8017944 <USB_ReadInterrupts>
 80119c6:	4603      	mov	r3, r0
 80119c8:	f003 0302 	and.w	r3, r3, #2
 80119cc:	2b02      	cmp	r3, #2
 80119ce:	d107      	bne.n	80119e0 <HAL_PCD_IRQHandler+0x6e>
 80119d0:	687b      	ldr	r3, [r7, #4]
 80119d2:	681b      	ldr	r3, [r3, #0]
 80119d4:	695a      	ldr	r2, [r3, #20]
 80119d6:	687b      	ldr	r3, [r7, #4]
 80119d8:	681b      	ldr	r3, [r3, #0]
 80119da:	f002 0202 	and.w	r2, r2, #2
 80119de:	615a      	str	r2, [r3, #20]
 80119e0:	687b      	ldr	r3, [r7, #4]
 80119e2:	681b      	ldr	r3, [r3, #0]
 80119e4:	4618      	mov	r0, r3
 80119e6:	f005 ffad 	bl	8017944 <USB_ReadInterrupts>
 80119ea:	4603      	mov	r3, r0
 80119ec:	f003 0310 	and.w	r3, r3, #16
 80119f0:	2b10      	cmp	r3, #16
 80119f2:	d161      	bne.n	8011ab8 <HAL_PCD_IRQHandler+0x146>
 80119f4:	687b      	ldr	r3, [r7, #4]
 80119f6:	681b      	ldr	r3, [r3, #0]
 80119f8:	699a      	ldr	r2, [r3, #24]
 80119fa:	687b      	ldr	r3, [r7, #4]
 80119fc:	681b      	ldr	r3, [r3, #0]
 80119fe:	f022 0210 	bic.w	r2, r2, #16
 8011a02:	619a      	str	r2, [r3, #24]
 8011a04:	6a3b      	ldr	r3, [r7, #32]
 8011a06:	6a1b      	ldr	r3, [r3, #32]
 8011a08:	61bb      	str	r3, [r7, #24]
 8011a0a:	69bb      	ldr	r3, [r7, #24]
 8011a0c:	f003 020f 	and.w	r2, r3, #15
 8011a10:	4613      	mov	r3, r2
 8011a12:	00db      	lsls	r3, r3, #3
 8011a14:	4413      	add	r3, r2
 8011a16:	009b      	lsls	r3, r3, #2
 8011a18:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 8011a1c:	687a      	ldr	r2, [r7, #4]
 8011a1e:	4413      	add	r3, r2
 8011a20:	3304      	adds	r3, #4
 8011a22:	617b      	str	r3, [r7, #20]
 8011a24:	69bb      	ldr	r3, [r7, #24]
 8011a26:	0c5b      	lsrs	r3, r3, #17
 8011a28:	f003 030f 	and.w	r3, r3, #15
 8011a2c:	2b02      	cmp	r3, #2
 8011a2e:	d124      	bne.n	8011a7a <HAL_PCD_IRQHandler+0x108>
 8011a30:	69ba      	ldr	r2, [r7, #24]
 8011a32:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8011a36:	4013      	ands	r3, r2
 8011a38:	2b00      	cmp	r3, #0
 8011a3a:	d035      	beq.n	8011aa8 <HAL_PCD_IRQHandler+0x136>
 8011a3c:	697b      	ldr	r3, [r7, #20]
 8011a3e:	6919      	ldr	r1, [r3, #16]
 8011a40:	69bb      	ldr	r3, [r7, #24]
 8011a42:	091b      	lsrs	r3, r3, #4
 8011a44:	b29b      	uxth	r3, r3
 8011a46:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011a4a:	b29b      	uxth	r3, r3
 8011a4c:	461a      	mov	r2, r3
 8011a4e:	6a38      	ldr	r0, [r7, #32]
 8011a50:	f005 fde4 	bl	801761c <USB_ReadPacket>
 8011a54:	697b      	ldr	r3, [r7, #20]
 8011a56:	691a      	ldr	r2, [r3, #16]
 8011a58:	69bb      	ldr	r3, [r7, #24]
 8011a5a:	091b      	lsrs	r3, r3, #4
 8011a5c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011a60:	441a      	add	r2, r3
 8011a62:	697b      	ldr	r3, [r7, #20]
 8011a64:	611a      	str	r2, [r3, #16]
 8011a66:	697b      	ldr	r3, [r7, #20]
 8011a68:	6a1a      	ldr	r2, [r3, #32]
 8011a6a:	69bb      	ldr	r3, [r7, #24]
 8011a6c:	091b      	lsrs	r3, r3, #4
 8011a6e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011a72:	441a      	add	r2, r3
 8011a74:	697b      	ldr	r3, [r7, #20]
 8011a76:	621a      	str	r2, [r3, #32]
 8011a78:	e016      	b.n	8011aa8 <HAL_PCD_IRQHandler+0x136>
 8011a7a:	69bb      	ldr	r3, [r7, #24]
 8011a7c:	0c5b      	lsrs	r3, r3, #17
 8011a7e:	f003 030f 	and.w	r3, r3, #15
 8011a82:	2b06      	cmp	r3, #6
 8011a84:	d110      	bne.n	8011aa8 <HAL_PCD_IRQHandler+0x136>
 8011a86:	687b      	ldr	r3, [r7, #4]
 8011a88:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8011a8c:	2208      	movs	r2, #8
 8011a8e:	4619      	mov	r1, r3
 8011a90:	6a38      	ldr	r0, [r7, #32]
 8011a92:	f005 fdc3 	bl	801761c <USB_ReadPacket>
 8011a96:	697b      	ldr	r3, [r7, #20]
 8011a98:	6a1a      	ldr	r2, [r3, #32]
 8011a9a:	69bb      	ldr	r3, [r7, #24]
 8011a9c:	091b      	lsrs	r3, r3, #4
 8011a9e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011aa2:	441a      	add	r2, r3
 8011aa4:	697b      	ldr	r3, [r7, #20]
 8011aa6:	621a      	str	r2, [r3, #32]
 8011aa8:	687b      	ldr	r3, [r7, #4]
 8011aaa:	681b      	ldr	r3, [r3, #0]
 8011aac:	699a      	ldr	r2, [r3, #24]
 8011aae:	687b      	ldr	r3, [r7, #4]
 8011ab0:	681b      	ldr	r3, [r3, #0]
 8011ab2:	f042 0210 	orr.w	r2, r2, #16
 8011ab6:	619a      	str	r2, [r3, #24]
 8011ab8:	687b      	ldr	r3, [r7, #4]
 8011aba:	681b      	ldr	r3, [r3, #0]
 8011abc:	4618      	mov	r0, r3
 8011abe:	f005 ff41 	bl	8017944 <USB_ReadInterrupts>
 8011ac2:	4603      	mov	r3, r0
 8011ac4:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8011ac8:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
 8011acc:	f040 80a7 	bne.w	8011c1e <HAL_PCD_IRQHandler+0x2ac>
 8011ad0:	2300      	movs	r3, #0
 8011ad2:	627b      	str	r3, [r7, #36]	@ 0x24
 8011ad4:	687b      	ldr	r3, [r7, #4]
 8011ad6:	681b      	ldr	r3, [r3, #0]
 8011ad8:	4618      	mov	r0, r3
 8011ada:	f005 ff46 	bl	801796a <USB_ReadDevAllOutEpInterrupt>
 8011ade:	62b8      	str	r0, [r7, #40]	@ 0x28
 8011ae0:	e099      	b.n	8011c16 <HAL_PCD_IRQHandler+0x2a4>
 8011ae2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011ae4:	f003 0301 	and.w	r3, r3, #1
 8011ae8:	2b00      	cmp	r3, #0
 8011aea:	f000 808e 	beq.w	8011c0a <HAL_PCD_IRQHandler+0x298>
 8011aee:	687b      	ldr	r3, [r7, #4]
 8011af0:	681b      	ldr	r3, [r3, #0]
 8011af2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011af4:	b2d2      	uxtb	r2, r2
 8011af6:	4611      	mov	r1, r2
 8011af8:	4618      	mov	r0, r3
 8011afa:	f005 ff6a 	bl	80179d2 <USB_ReadDevOutEPInterrupt>
 8011afe:	6138      	str	r0, [r7, #16]
 8011b00:	693b      	ldr	r3, [r7, #16]
 8011b02:	f003 0301 	and.w	r3, r3, #1
 8011b06:	2b00      	cmp	r3, #0
 8011b08:	d00c      	beq.n	8011b24 <HAL_PCD_IRQHandler+0x1b2>
 8011b0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011b0c:	015a      	lsls	r2, r3, #5
 8011b0e:	69fb      	ldr	r3, [r7, #28]
 8011b10:	4413      	add	r3, r2
 8011b12:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011b16:	461a      	mov	r2, r3
 8011b18:	2301      	movs	r3, #1
 8011b1a:	6093      	str	r3, [r2, #8]
 8011b1c:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8011b1e:	6878      	ldr	r0, [r7, #4]
 8011b20:	f000 fec2 	bl	80128a8 <PCD_EP_OutXfrComplete_int>
 8011b24:	693b      	ldr	r3, [r7, #16]
 8011b26:	f003 0308 	and.w	r3, r3, #8
 8011b2a:	2b00      	cmp	r3, #0
 8011b2c:	d00c      	beq.n	8011b48 <HAL_PCD_IRQHandler+0x1d6>
 8011b2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011b30:	015a      	lsls	r2, r3, #5
 8011b32:	69fb      	ldr	r3, [r7, #28]
 8011b34:	4413      	add	r3, r2
 8011b36:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011b3a:	461a      	mov	r2, r3
 8011b3c:	2308      	movs	r3, #8
 8011b3e:	6093      	str	r3, [r2, #8]
 8011b40:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8011b42:	6878      	ldr	r0, [r7, #4]
 8011b44:	f000 ff98 	bl	8012a78 <PCD_EP_OutSetupPacket_int>
 8011b48:	693b      	ldr	r3, [r7, #16]
 8011b4a:	f003 0310 	and.w	r3, r3, #16
 8011b4e:	2b00      	cmp	r3, #0
 8011b50:	d008      	beq.n	8011b64 <HAL_PCD_IRQHandler+0x1f2>
 8011b52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011b54:	015a      	lsls	r2, r3, #5
 8011b56:	69fb      	ldr	r3, [r7, #28]
 8011b58:	4413      	add	r3, r2
 8011b5a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011b5e:	461a      	mov	r2, r3
 8011b60:	2310      	movs	r3, #16
 8011b62:	6093      	str	r3, [r2, #8]
 8011b64:	693b      	ldr	r3, [r7, #16]
 8011b66:	f003 0302 	and.w	r3, r3, #2
 8011b6a:	2b00      	cmp	r3, #0
 8011b6c:	d030      	beq.n	8011bd0 <HAL_PCD_IRQHandler+0x25e>
 8011b6e:	6a3b      	ldr	r3, [r7, #32]
 8011b70:	695b      	ldr	r3, [r3, #20]
 8011b72:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011b76:	2b80      	cmp	r3, #128	@ 0x80
 8011b78:	d109      	bne.n	8011b8e <HAL_PCD_IRQHandler+0x21c>
 8011b7a:	69fb      	ldr	r3, [r7, #28]
 8011b7c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011b80:	685b      	ldr	r3, [r3, #4]
 8011b82:	69fa      	ldr	r2, [r7, #28]
 8011b84:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011b88:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8011b8c:	6053      	str	r3, [r2, #4]
 8011b8e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011b90:	4613      	mov	r3, r2
 8011b92:	00db      	lsls	r3, r3, #3
 8011b94:	4413      	add	r3, r2
 8011b96:	009b      	lsls	r3, r3, #2
 8011b98:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 8011b9c:	687a      	ldr	r2, [r7, #4]
 8011b9e:	4413      	add	r3, r2
 8011ba0:	3304      	adds	r3, #4
 8011ba2:	617b      	str	r3, [r7, #20]
 8011ba4:	697b      	ldr	r3, [r7, #20]
 8011ba6:	78db      	ldrb	r3, [r3, #3]
 8011ba8:	2b01      	cmp	r3, #1
 8011baa:	d108      	bne.n	8011bbe <HAL_PCD_IRQHandler+0x24c>
 8011bac:	697b      	ldr	r3, [r7, #20]
 8011bae:	2200      	movs	r2, #0
 8011bb0:	70da      	strb	r2, [r3, #3]
 8011bb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011bb4:	b2db      	uxtb	r3, r3
 8011bb6:	4619      	mov	r1, r3
 8011bb8:	6878      	ldr	r0, [r7, #4]
 8011bba:	f00b fbc3 	bl	801d344 <HAL_PCD_ISOOUTIncompleteCallback>
 8011bbe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011bc0:	015a      	lsls	r2, r3, #5
 8011bc2:	69fb      	ldr	r3, [r7, #28]
 8011bc4:	4413      	add	r3, r2
 8011bc6:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011bca:	461a      	mov	r2, r3
 8011bcc:	2302      	movs	r3, #2
 8011bce:	6093      	str	r3, [r2, #8]
 8011bd0:	693b      	ldr	r3, [r7, #16]
 8011bd2:	f003 0320 	and.w	r3, r3, #32
 8011bd6:	2b00      	cmp	r3, #0
 8011bd8:	d008      	beq.n	8011bec <HAL_PCD_IRQHandler+0x27a>
 8011bda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011bdc:	015a      	lsls	r2, r3, #5
 8011bde:	69fb      	ldr	r3, [r7, #28]
 8011be0:	4413      	add	r3, r2
 8011be2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011be6:	461a      	mov	r2, r3
 8011be8:	2320      	movs	r3, #32
 8011bea:	6093      	str	r3, [r2, #8]
 8011bec:	693b      	ldr	r3, [r7, #16]
 8011bee:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8011bf2:	2b00      	cmp	r3, #0
 8011bf4:	d009      	beq.n	8011c0a <HAL_PCD_IRQHandler+0x298>
 8011bf6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011bf8:	015a      	lsls	r2, r3, #5
 8011bfa:	69fb      	ldr	r3, [r7, #28]
 8011bfc:	4413      	add	r3, r2
 8011bfe:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011c02:	461a      	mov	r2, r3
 8011c04:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8011c08:	6093      	str	r3, [r2, #8]
 8011c0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011c0c:	3301      	adds	r3, #1
 8011c0e:	627b      	str	r3, [r7, #36]	@ 0x24
 8011c10:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011c12:	085b      	lsrs	r3, r3, #1
 8011c14:	62bb      	str	r3, [r7, #40]	@ 0x28
 8011c16:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011c18:	2b00      	cmp	r3, #0
 8011c1a:	f47f af62 	bne.w	8011ae2 <HAL_PCD_IRQHandler+0x170>
 8011c1e:	687b      	ldr	r3, [r7, #4]
 8011c20:	681b      	ldr	r3, [r3, #0]
 8011c22:	4618      	mov	r0, r3
 8011c24:	f005 fe8e 	bl	8017944 <USB_ReadInterrupts>
 8011c28:	4603      	mov	r3, r0
 8011c2a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8011c2e:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8011c32:	f040 80db 	bne.w	8011dec <HAL_PCD_IRQHandler+0x47a>
 8011c36:	687b      	ldr	r3, [r7, #4]
 8011c38:	681b      	ldr	r3, [r3, #0]
 8011c3a:	4618      	mov	r0, r3
 8011c3c:	f005 feaf 	bl	801799e <USB_ReadDevAllInEpInterrupt>
 8011c40:	62b8      	str	r0, [r7, #40]	@ 0x28
 8011c42:	2300      	movs	r3, #0
 8011c44:	627b      	str	r3, [r7, #36]	@ 0x24
 8011c46:	e0cd      	b.n	8011de4 <HAL_PCD_IRQHandler+0x472>
 8011c48:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011c4a:	f003 0301 	and.w	r3, r3, #1
 8011c4e:	2b00      	cmp	r3, #0
 8011c50:	f000 80c2 	beq.w	8011dd8 <HAL_PCD_IRQHandler+0x466>
 8011c54:	687b      	ldr	r3, [r7, #4]
 8011c56:	681b      	ldr	r3, [r3, #0]
 8011c58:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011c5a:	b2d2      	uxtb	r2, r2
 8011c5c:	4611      	mov	r1, r2
 8011c5e:	4618      	mov	r0, r3
 8011c60:	f005 fed5 	bl	8017a0e <USB_ReadDevInEPInterrupt>
 8011c64:	6138      	str	r0, [r7, #16]
 8011c66:	693b      	ldr	r3, [r7, #16]
 8011c68:	f003 0301 	and.w	r3, r3, #1
 8011c6c:	2b00      	cmp	r3, #0
 8011c6e:	d057      	beq.n	8011d20 <HAL_PCD_IRQHandler+0x3ae>
 8011c70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011c72:	f003 030f 	and.w	r3, r3, #15
 8011c76:	2201      	movs	r2, #1
 8011c78:	fa02 f303 	lsl.w	r3, r2, r3
 8011c7c:	60fb      	str	r3, [r7, #12]
 8011c7e:	69fb      	ldr	r3, [r7, #28]
 8011c80:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011c84:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8011c86:	68fb      	ldr	r3, [r7, #12]
 8011c88:	43db      	mvns	r3, r3
 8011c8a:	69f9      	ldr	r1, [r7, #28]
 8011c8c:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8011c90:	4013      	ands	r3, r2
 8011c92:	634b      	str	r3, [r1, #52]	@ 0x34
 8011c94:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011c96:	015a      	lsls	r2, r3, #5
 8011c98:	69fb      	ldr	r3, [r7, #28]
 8011c9a:	4413      	add	r3, r2
 8011c9c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011ca0:	461a      	mov	r2, r3
 8011ca2:	2301      	movs	r3, #1
 8011ca4:	6093      	str	r3, [r2, #8]
 8011ca6:	687b      	ldr	r3, [r7, #4]
 8011ca8:	691b      	ldr	r3, [r3, #16]
 8011caa:	2b01      	cmp	r3, #1
 8011cac:	d132      	bne.n	8011d14 <HAL_PCD_IRQHandler+0x3a2>
 8011cae:	6879      	ldr	r1, [r7, #4]
 8011cb0:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011cb2:	4613      	mov	r3, r2
 8011cb4:	00db      	lsls	r3, r3, #3
 8011cb6:	4413      	add	r3, r2
 8011cb8:	009b      	lsls	r3, r3, #2
 8011cba:	440b      	add	r3, r1
 8011cbc:	334c      	adds	r3, #76	@ 0x4c
 8011cbe:	6819      	ldr	r1, [r3, #0]
 8011cc0:	6878      	ldr	r0, [r7, #4]
 8011cc2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011cc4:	4613      	mov	r3, r2
 8011cc6:	00db      	lsls	r3, r3, #3
 8011cc8:	4413      	add	r3, r2
 8011cca:	009b      	lsls	r3, r3, #2
 8011ccc:	4403      	add	r3, r0
 8011cce:	3348      	adds	r3, #72	@ 0x48
 8011cd0:	681b      	ldr	r3, [r3, #0]
 8011cd2:	4419      	add	r1, r3
 8011cd4:	6878      	ldr	r0, [r7, #4]
 8011cd6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011cd8:	4613      	mov	r3, r2
 8011cda:	00db      	lsls	r3, r3, #3
 8011cdc:	4413      	add	r3, r2
 8011cde:	009b      	lsls	r3, r3, #2
 8011ce0:	4403      	add	r3, r0
 8011ce2:	334c      	adds	r3, #76	@ 0x4c
 8011ce4:	6019      	str	r1, [r3, #0]
 8011ce6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011ce8:	2b00      	cmp	r3, #0
 8011cea:	d113      	bne.n	8011d14 <HAL_PCD_IRQHandler+0x3a2>
 8011cec:	6879      	ldr	r1, [r7, #4]
 8011cee:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011cf0:	4613      	mov	r3, r2
 8011cf2:	00db      	lsls	r3, r3, #3
 8011cf4:	4413      	add	r3, r2
 8011cf6:	009b      	lsls	r3, r3, #2
 8011cf8:	440b      	add	r3, r1
 8011cfa:	3354      	adds	r3, #84	@ 0x54
 8011cfc:	681b      	ldr	r3, [r3, #0]
 8011cfe:	2b00      	cmp	r3, #0
 8011d00:	d108      	bne.n	8011d14 <HAL_PCD_IRQHandler+0x3a2>
 8011d02:	687b      	ldr	r3, [r7, #4]
 8011d04:	6818      	ldr	r0, [r3, #0]
 8011d06:	687b      	ldr	r3, [r7, #4]
 8011d08:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8011d0c:	461a      	mov	r2, r3
 8011d0e:	2101      	movs	r1, #1
 8011d10:	f005 fedc 	bl	8017acc <USB_EP0_OutStart>
 8011d14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011d16:	b2db      	uxtb	r3, r3
 8011d18:	4619      	mov	r1, r3
 8011d1a:	6878      	ldr	r0, [r7, #4]
 8011d1c:	f00b fa8d 	bl	801d23a <HAL_PCD_DataInStageCallback>
 8011d20:	693b      	ldr	r3, [r7, #16]
 8011d22:	f003 0308 	and.w	r3, r3, #8
 8011d26:	2b00      	cmp	r3, #0
 8011d28:	d008      	beq.n	8011d3c <HAL_PCD_IRQHandler+0x3ca>
 8011d2a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011d2c:	015a      	lsls	r2, r3, #5
 8011d2e:	69fb      	ldr	r3, [r7, #28]
 8011d30:	4413      	add	r3, r2
 8011d32:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011d36:	461a      	mov	r2, r3
 8011d38:	2308      	movs	r3, #8
 8011d3a:	6093      	str	r3, [r2, #8]
 8011d3c:	693b      	ldr	r3, [r7, #16]
 8011d3e:	f003 0310 	and.w	r3, r3, #16
 8011d42:	2b00      	cmp	r3, #0
 8011d44:	d008      	beq.n	8011d58 <HAL_PCD_IRQHandler+0x3e6>
 8011d46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011d48:	015a      	lsls	r2, r3, #5
 8011d4a:	69fb      	ldr	r3, [r7, #28]
 8011d4c:	4413      	add	r3, r2
 8011d4e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011d52:	461a      	mov	r2, r3
 8011d54:	2310      	movs	r3, #16
 8011d56:	6093      	str	r3, [r2, #8]
 8011d58:	693b      	ldr	r3, [r7, #16]
 8011d5a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8011d5e:	2b00      	cmp	r3, #0
 8011d60:	d008      	beq.n	8011d74 <HAL_PCD_IRQHandler+0x402>
 8011d62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011d64:	015a      	lsls	r2, r3, #5
 8011d66:	69fb      	ldr	r3, [r7, #28]
 8011d68:	4413      	add	r3, r2
 8011d6a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011d6e:	461a      	mov	r2, r3
 8011d70:	2340      	movs	r3, #64	@ 0x40
 8011d72:	6093      	str	r3, [r2, #8]
 8011d74:	693b      	ldr	r3, [r7, #16]
 8011d76:	f003 0302 	and.w	r3, r3, #2
 8011d7a:	2b00      	cmp	r3, #0
 8011d7c:	d023      	beq.n	8011dc6 <HAL_PCD_IRQHandler+0x454>
 8011d7e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8011d80:	6a38      	ldr	r0, [r7, #32]
 8011d82:	f004 fdbd 	bl	8016900 <USB_FlushTxFifo>
 8011d86:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8011d88:	4613      	mov	r3, r2
 8011d8a:	00db      	lsls	r3, r3, #3
 8011d8c:	4413      	add	r3, r2
 8011d8e:	009b      	lsls	r3, r3, #2
 8011d90:	3338      	adds	r3, #56	@ 0x38
 8011d92:	687a      	ldr	r2, [r7, #4]
 8011d94:	4413      	add	r3, r2
 8011d96:	3304      	adds	r3, #4
 8011d98:	617b      	str	r3, [r7, #20]
 8011d9a:	697b      	ldr	r3, [r7, #20]
 8011d9c:	78db      	ldrb	r3, [r3, #3]
 8011d9e:	2b01      	cmp	r3, #1
 8011da0:	d108      	bne.n	8011db4 <HAL_PCD_IRQHandler+0x442>
 8011da2:	697b      	ldr	r3, [r7, #20]
 8011da4:	2200      	movs	r2, #0
 8011da6:	70da      	strb	r2, [r3, #3]
 8011da8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011daa:	b2db      	uxtb	r3, r3
 8011dac:	4619      	mov	r1, r3
 8011dae:	6878      	ldr	r0, [r7, #4]
 8011db0:	f00b fada 	bl	801d368 <HAL_PCD_ISOINIncompleteCallback>
 8011db4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011db6:	015a      	lsls	r2, r3, #5
 8011db8:	69fb      	ldr	r3, [r7, #28]
 8011dba:	4413      	add	r3, r2
 8011dbc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011dc0:	461a      	mov	r2, r3
 8011dc2:	2302      	movs	r3, #2
 8011dc4:	6093      	str	r3, [r2, #8]
 8011dc6:	693b      	ldr	r3, [r7, #16]
 8011dc8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8011dcc:	2b00      	cmp	r3, #0
 8011dce:	d003      	beq.n	8011dd8 <HAL_PCD_IRQHandler+0x466>
 8011dd0:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8011dd2:	6878      	ldr	r0, [r7, #4]
 8011dd4:	f000 fcdb 	bl	801278e <PCD_WriteEmptyTxFifo>
 8011dd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8011dda:	3301      	adds	r3, #1
 8011ddc:	627b      	str	r3, [r7, #36]	@ 0x24
 8011dde:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011de0:	085b      	lsrs	r3, r3, #1
 8011de2:	62bb      	str	r3, [r7, #40]	@ 0x28
 8011de4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8011de6:	2b00      	cmp	r3, #0
 8011de8:	f47f af2e 	bne.w	8011c48 <HAL_PCD_IRQHandler+0x2d6>
 8011dec:	687b      	ldr	r3, [r7, #4]
 8011dee:	681b      	ldr	r3, [r3, #0]
 8011df0:	4618      	mov	r0, r3
 8011df2:	f005 fda7 	bl	8017944 <USB_ReadInterrupts>
 8011df6:	4603      	mov	r3, r0
 8011df8:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8011dfc:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8011e00:	d122      	bne.n	8011e48 <HAL_PCD_IRQHandler+0x4d6>
 8011e02:	69fb      	ldr	r3, [r7, #28]
 8011e04:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011e08:	685b      	ldr	r3, [r3, #4]
 8011e0a:	69fa      	ldr	r2, [r7, #28]
 8011e0c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011e10:	f023 0301 	bic.w	r3, r3, #1
 8011e14:	6053      	str	r3, [r2, #4]
 8011e16:	687b      	ldr	r3, [r7, #4]
 8011e18:	f893 34f4 	ldrb.w	r3, [r3, #1268]	@ 0x4f4
 8011e1c:	2b01      	cmp	r3, #1
 8011e1e:	d108      	bne.n	8011e32 <HAL_PCD_IRQHandler+0x4c0>
 8011e20:	687b      	ldr	r3, [r7, #4]
 8011e22:	2200      	movs	r2, #0
 8011e24:	f883 24f4 	strb.w	r2, [r3, #1268]	@ 0x4f4
 8011e28:	2100      	movs	r1, #0
 8011e2a:	6878      	ldr	r0, [r7, #4]
 8011e2c:	f000 fec2 	bl	8012bb4 <HAL_PCDEx_LPM_Callback>
 8011e30:	e002      	b.n	8011e38 <HAL_PCD_IRQHandler+0x4c6>
 8011e32:	6878      	ldr	r0, [r7, #4]
 8011e34:	f00b fa78 	bl	801d328 <HAL_PCD_ResumeCallback>
 8011e38:	687b      	ldr	r3, [r7, #4]
 8011e3a:	681b      	ldr	r3, [r3, #0]
 8011e3c:	695a      	ldr	r2, [r3, #20]
 8011e3e:	687b      	ldr	r3, [r7, #4]
 8011e40:	681b      	ldr	r3, [r3, #0]
 8011e42:	f002 4200 	and.w	r2, r2, #2147483648	@ 0x80000000
 8011e46:	615a      	str	r2, [r3, #20]
 8011e48:	687b      	ldr	r3, [r7, #4]
 8011e4a:	681b      	ldr	r3, [r3, #0]
 8011e4c:	4618      	mov	r0, r3
 8011e4e:	f005 fd79 	bl	8017944 <USB_ReadInterrupts>
 8011e52:	4603      	mov	r3, r0
 8011e54:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8011e58:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8011e5c:	d112      	bne.n	8011e84 <HAL_PCD_IRQHandler+0x512>
 8011e5e:	69fb      	ldr	r3, [r7, #28]
 8011e60:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011e64:	689b      	ldr	r3, [r3, #8]
 8011e66:	f003 0301 	and.w	r3, r3, #1
 8011e6a:	2b01      	cmp	r3, #1
 8011e6c:	d102      	bne.n	8011e74 <HAL_PCD_IRQHandler+0x502>
 8011e6e:	6878      	ldr	r0, [r7, #4]
 8011e70:	f00b fa34 	bl	801d2dc <HAL_PCD_SuspendCallback>
 8011e74:	687b      	ldr	r3, [r7, #4]
 8011e76:	681b      	ldr	r3, [r3, #0]
 8011e78:	695a      	ldr	r2, [r3, #20]
 8011e7a:	687b      	ldr	r3, [r7, #4]
 8011e7c:	681b      	ldr	r3, [r3, #0]
 8011e7e:	f402 6200 	and.w	r2, r2, #2048	@ 0x800
 8011e82:	615a      	str	r2, [r3, #20]
 8011e84:	687b      	ldr	r3, [r7, #4]
 8011e86:	681b      	ldr	r3, [r3, #0]
 8011e88:	4618      	mov	r0, r3
 8011e8a:	f005 fd5b 	bl	8017944 <USB_ReadInterrupts>
 8011e8e:	4603      	mov	r3, r0
 8011e90:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8011e94:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8011e98:	f040 80b7 	bne.w	801200a <HAL_PCD_IRQHandler+0x698>
 8011e9c:	69fb      	ldr	r3, [r7, #28]
 8011e9e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011ea2:	685b      	ldr	r3, [r3, #4]
 8011ea4:	69fa      	ldr	r2, [r7, #28]
 8011ea6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011eaa:	f023 0301 	bic.w	r3, r3, #1
 8011eae:	6053      	str	r3, [r2, #4]
 8011eb0:	687b      	ldr	r3, [r7, #4]
 8011eb2:	681b      	ldr	r3, [r3, #0]
 8011eb4:	2110      	movs	r1, #16
 8011eb6:	4618      	mov	r0, r3
 8011eb8:	f004 fd22 	bl	8016900 <USB_FlushTxFifo>
 8011ebc:	2300      	movs	r3, #0
 8011ebe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8011ec0:	e046      	b.n	8011f50 <HAL_PCD_IRQHandler+0x5de>
 8011ec2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8011ec4:	015a      	lsls	r2, r3, #5
 8011ec6:	69fb      	ldr	r3, [r7, #28]
 8011ec8:	4413      	add	r3, r2
 8011eca:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011ece:	461a      	mov	r2, r3
 8011ed0:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8011ed4:	6093      	str	r3, [r2, #8]
 8011ed6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8011ed8:	015a      	lsls	r2, r3, #5
 8011eda:	69fb      	ldr	r3, [r7, #28]
 8011edc:	4413      	add	r3, r2
 8011ede:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8011ee2:	681b      	ldr	r3, [r3, #0]
 8011ee4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8011ee6:	0151      	lsls	r1, r2, #5
 8011ee8:	69fa      	ldr	r2, [r7, #28]
 8011eea:	440a      	add	r2, r1
 8011eec:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8011ef0:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8011ef4:	6013      	str	r3, [r2, #0]
 8011ef6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8011ef8:	015a      	lsls	r2, r3, #5
 8011efa:	69fb      	ldr	r3, [r7, #28]
 8011efc:	4413      	add	r3, r2
 8011efe:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f02:	461a      	mov	r2, r3
 8011f04:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8011f08:	6093      	str	r3, [r2, #8]
 8011f0a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8011f0c:	015a      	lsls	r2, r3, #5
 8011f0e:	69fb      	ldr	r3, [r7, #28]
 8011f10:	4413      	add	r3, r2
 8011f12:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f16:	681b      	ldr	r3, [r3, #0]
 8011f18:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8011f1a:	0151      	lsls	r1, r2, #5
 8011f1c:	69fa      	ldr	r2, [r7, #28]
 8011f1e:	440a      	add	r2, r1
 8011f20:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8011f24:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8011f28:	6013      	str	r3, [r2, #0]
 8011f2a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8011f2c:	015a      	lsls	r2, r3, #5
 8011f2e:	69fb      	ldr	r3, [r7, #28]
 8011f30:	4413      	add	r3, r2
 8011f32:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8011f36:	681b      	ldr	r3, [r3, #0]
 8011f38:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8011f3a:	0151      	lsls	r1, r2, #5
 8011f3c:	69fa      	ldr	r2, [r7, #28]
 8011f3e:	440a      	add	r2, r1
 8011f40:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8011f44:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8011f48:	6013      	str	r3, [r2, #0]
 8011f4a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8011f4c:	3301      	adds	r3, #1
 8011f4e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8011f50:	687b      	ldr	r3, [r7, #4]
 8011f52:	685b      	ldr	r3, [r3, #4]
 8011f54:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8011f56:	429a      	cmp	r2, r3
 8011f58:	d3b3      	bcc.n	8011ec2 <HAL_PCD_IRQHandler+0x550>
 8011f5a:	69fb      	ldr	r3, [r7, #28]
 8011f5c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011f60:	69db      	ldr	r3, [r3, #28]
 8011f62:	69fa      	ldr	r2, [r7, #28]
 8011f64:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011f68:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8011f6c:	61d3      	str	r3, [r2, #28]
 8011f6e:	687b      	ldr	r3, [r7, #4]
 8011f70:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011f72:	2b00      	cmp	r3, #0
 8011f74:	d016      	beq.n	8011fa4 <HAL_PCD_IRQHandler+0x632>
 8011f76:	69fb      	ldr	r3, [r7, #28]
 8011f78:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011f7c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8011f80:	69fa      	ldr	r2, [r7, #28]
 8011f82:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011f86:	f043 030b 	orr.w	r3, r3, #11
 8011f8a:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
 8011f8e:	69fb      	ldr	r3, [r7, #28]
 8011f90:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011f94:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011f96:	69fa      	ldr	r2, [r7, #28]
 8011f98:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011f9c:	f043 030b 	orr.w	r3, r3, #11
 8011fa0:	6453      	str	r3, [r2, #68]	@ 0x44
 8011fa2:	e015      	b.n	8011fd0 <HAL_PCD_IRQHandler+0x65e>
 8011fa4:	69fb      	ldr	r3, [r7, #28]
 8011fa6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011faa:	695b      	ldr	r3, [r3, #20]
 8011fac:	69fa      	ldr	r2, [r7, #28]
 8011fae:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011fb2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8011fb6:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 8011fba:	6153      	str	r3, [r2, #20]
 8011fbc:	69fb      	ldr	r3, [r7, #28]
 8011fbe:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011fc2:	691b      	ldr	r3, [r3, #16]
 8011fc4:	69fa      	ldr	r2, [r7, #28]
 8011fc6:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011fca:	f043 030b 	orr.w	r3, r3, #11
 8011fce:	6113      	str	r3, [r2, #16]
 8011fd0:	69fb      	ldr	r3, [r7, #28]
 8011fd2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8011fd6:	681b      	ldr	r3, [r3, #0]
 8011fd8:	69fa      	ldr	r2, [r7, #28]
 8011fda:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8011fde:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8011fe2:	6013      	str	r3, [r2, #0]
 8011fe4:	687b      	ldr	r3, [r7, #4]
 8011fe6:	6818      	ldr	r0, [r3, #0]
 8011fe8:	687b      	ldr	r3, [r7, #4]
 8011fea:	691b      	ldr	r3, [r3, #16]
 8011fec:	b2d9      	uxtb	r1, r3
 8011fee:	687b      	ldr	r3, [r7, #4]
 8011ff0:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8011ff4:	461a      	mov	r2, r3
 8011ff6:	f005 fd69 	bl	8017acc <USB_EP0_OutStart>
 8011ffa:	687b      	ldr	r3, [r7, #4]
 8011ffc:	681b      	ldr	r3, [r3, #0]
 8011ffe:	695a      	ldr	r2, [r3, #20]
 8012000:	687b      	ldr	r3, [r7, #4]
 8012002:	681b      	ldr	r3, [r3, #0]
 8012004:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
 8012008:	615a      	str	r2, [r3, #20]
 801200a:	687b      	ldr	r3, [r7, #4]
 801200c:	681b      	ldr	r3, [r3, #0]
 801200e:	4618      	mov	r0, r3
 8012010:	f005 fc98 	bl	8017944 <USB_ReadInterrupts>
 8012014:	4603      	mov	r3, r0
 8012016:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 801201a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 801201e:	d124      	bne.n	801206a <HAL_PCD_IRQHandler+0x6f8>
 8012020:	687b      	ldr	r3, [r7, #4]
 8012022:	681b      	ldr	r3, [r3, #0]
 8012024:	4618      	mov	r0, r3
 8012026:	f005 fd2e 	bl	8017a86 <USB_ActivateSetup>
 801202a:	687b      	ldr	r3, [r7, #4]
 801202c:	681b      	ldr	r3, [r3, #0]
 801202e:	4618      	mov	r0, r3
 8012030:	f004 fce3 	bl	80169fa <USB_GetDevSpeed>
 8012034:	4603      	mov	r3, r0
 8012036:	461a      	mov	r2, r3
 8012038:	687b      	ldr	r3, [r7, #4]
 801203a:	60da      	str	r2, [r3, #12]
 801203c:	687b      	ldr	r3, [r7, #4]
 801203e:	681c      	ldr	r4, [r3, #0]
 8012040:	f001 f9e8 	bl	8013414 <HAL_RCC_GetHCLKFreq>
 8012044:	4601      	mov	r1, r0
 8012046:	687b      	ldr	r3, [r7, #4]
 8012048:	68db      	ldr	r3, [r3, #12]
 801204a:	b2db      	uxtb	r3, r3
 801204c:	461a      	mov	r2, r3
 801204e:	4620      	mov	r0, r4
 8012050:	f004 f9e2 	bl	8016418 <USB_SetTurnaroundTime>
 8012054:	6878      	ldr	r0, [r7, #4]
 8012056:	f00b f918 	bl	801d28a <HAL_PCD_ResetCallback>
 801205a:	687b      	ldr	r3, [r7, #4]
 801205c:	681b      	ldr	r3, [r3, #0]
 801205e:	695a      	ldr	r2, [r3, #20]
 8012060:	687b      	ldr	r3, [r7, #4]
 8012062:	681b      	ldr	r3, [r3, #0]
 8012064:	f402 5200 	and.w	r2, r2, #8192	@ 0x2000
 8012068:	615a      	str	r2, [r3, #20]
 801206a:	687b      	ldr	r3, [r7, #4]
 801206c:	681b      	ldr	r3, [r3, #0]
 801206e:	4618      	mov	r0, r3
 8012070:	f005 fc68 	bl	8017944 <USB_ReadInterrupts>
 8012074:	4603      	mov	r3, r0
 8012076:	f003 0308 	and.w	r3, r3, #8
 801207a:	2b08      	cmp	r3, #8
 801207c:	d10a      	bne.n	8012094 <HAL_PCD_IRQHandler+0x722>
 801207e:	6878      	ldr	r0, [r7, #4]
 8012080:	f00b f8f5 	bl	801d26e <HAL_PCD_SOFCallback>
 8012084:	687b      	ldr	r3, [r7, #4]
 8012086:	681b      	ldr	r3, [r3, #0]
 8012088:	695a      	ldr	r2, [r3, #20]
 801208a:	687b      	ldr	r3, [r7, #4]
 801208c:	681b      	ldr	r3, [r3, #0]
 801208e:	f002 0208 	and.w	r2, r2, #8
 8012092:	615a      	str	r2, [r3, #20]
 8012094:	687b      	ldr	r3, [r7, #4]
 8012096:	681b      	ldr	r3, [r3, #0]
 8012098:	4618      	mov	r0, r3
 801209a:	f005 fc53 	bl	8017944 <USB_ReadInterrupts>
 801209e:	4603      	mov	r3, r0
 80120a0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80120a4:	2b80      	cmp	r3, #128	@ 0x80
 80120a6:	d122      	bne.n	80120ee <HAL_PCD_IRQHandler+0x77c>
 80120a8:	6a3b      	ldr	r3, [r7, #32]
 80120aa:	699b      	ldr	r3, [r3, #24]
 80120ac:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80120b0:	6a3b      	ldr	r3, [r7, #32]
 80120b2:	619a      	str	r2, [r3, #24]
 80120b4:	2301      	movs	r3, #1
 80120b6:	627b      	str	r3, [r7, #36]	@ 0x24
 80120b8:	e014      	b.n	80120e4 <HAL_PCD_IRQHandler+0x772>
 80120ba:	6879      	ldr	r1, [r7, #4]
 80120bc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80120be:	4613      	mov	r3, r2
 80120c0:	00db      	lsls	r3, r3, #3
 80120c2:	4413      	add	r3, r2
 80120c4:	009b      	lsls	r3, r3, #2
 80120c6:	440b      	add	r3, r1
 80120c8:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 80120cc:	781b      	ldrb	r3, [r3, #0]
 80120ce:	2b01      	cmp	r3, #1
 80120d0:	d105      	bne.n	80120de <HAL_PCD_IRQHandler+0x76c>
 80120d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80120d4:	b2db      	uxtb	r3, r3
 80120d6:	4619      	mov	r1, r3
 80120d8:	6878      	ldr	r0, [r7, #4]
 80120da:	f000 fb27 	bl	801272c <HAL_PCD_EP_Abort>
 80120de:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80120e0:	3301      	adds	r3, #1
 80120e2:	627b      	str	r3, [r7, #36]	@ 0x24
 80120e4:	687b      	ldr	r3, [r7, #4]
 80120e6:	685b      	ldr	r3, [r3, #4]
 80120e8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80120ea:	429a      	cmp	r2, r3
 80120ec:	d3e5      	bcc.n	80120ba <HAL_PCD_IRQHandler+0x748>
 80120ee:	687b      	ldr	r3, [r7, #4]
 80120f0:	681b      	ldr	r3, [r3, #0]
 80120f2:	4618      	mov	r0, r3
 80120f4:	f005 fc26 	bl	8017944 <USB_ReadInterrupts>
 80120f8:	4603      	mov	r3, r0
 80120fa:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80120fe:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8012102:	d13b      	bne.n	801217c <HAL_PCD_IRQHandler+0x80a>
 8012104:	2301      	movs	r3, #1
 8012106:	627b      	str	r3, [r7, #36]	@ 0x24
 8012108:	e02b      	b.n	8012162 <HAL_PCD_IRQHandler+0x7f0>
 801210a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801210c:	015a      	lsls	r2, r3, #5
 801210e:	69fb      	ldr	r3, [r7, #28]
 8012110:	4413      	add	r3, r2
 8012112:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012116:	681b      	ldr	r3, [r3, #0]
 8012118:	61bb      	str	r3, [r7, #24]
 801211a:	6879      	ldr	r1, [r7, #4]
 801211c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801211e:	4613      	mov	r3, r2
 8012120:	00db      	lsls	r3, r3, #3
 8012122:	4413      	add	r3, r2
 8012124:	009b      	lsls	r3, r3, #2
 8012126:	440b      	add	r3, r1
 8012128:	3340      	adds	r3, #64	@ 0x40
 801212a:	781b      	ldrb	r3, [r3, #0]
 801212c:	2b01      	cmp	r3, #1
 801212e:	d115      	bne.n	801215c <HAL_PCD_IRQHandler+0x7ea>
 8012130:	69bb      	ldr	r3, [r7, #24]
 8012132:	2b00      	cmp	r3, #0
 8012134:	da12      	bge.n	801215c <HAL_PCD_IRQHandler+0x7ea>
 8012136:	6879      	ldr	r1, [r7, #4]
 8012138:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801213a:	4613      	mov	r3, r2
 801213c:	00db      	lsls	r3, r3, #3
 801213e:	4413      	add	r3, r2
 8012140:	009b      	lsls	r3, r3, #2
 8012142:	440b      	add	r3, r1
 8012144:	333f      	adds	r3, #63	@ 0x3f
 8012146:	2201      	movs	r2, #1
 8012148:	701a      	strb	r2, [r3, #0]
 801214a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801214c:	b2db      	uxtb	r3, r3
 801214e:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8012152:	b2db      	uxtb	r3, r3
 8012154:	4619      	mov	r1, r3
 8012156:	6878      	ldr	r0, [r7, #4]
 8012158:	f000 fae8 	bl	801272c <HAL_PCD_EP_Abort>
 801215c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801215e:	3301      	adds	r3, #1
 8012160:	627b      	str	r3, [r7, #36]	@ 0x24
 8012162:	687b      	ldr	r3, [r7, #4]
 8012164:	685b      	ldr	r3, [r3, #4]
 8012166:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8012168:	429a      	cmp	r2, r3
 801216a:	d3ce      	bcc.n	801210a <HAL_PCD_IRQHandler+0x798>
 801216c:	687b      	ldr	r3, [r7, #4]
 801216e:	681b      	ldr	r3, [r3, #0]
 8012170:	695a      	ldr	r2, [r3, #20]
 8012172:	687b      	ldr	r3, [r7, #4]
 8012174:	681b      	ldr	r3, [r3, #0]
 8012176:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 801217a:	615a      	str	r2, [r3, #20]
 801217c:	687b      	ldr	r3, [r7, #4]
 801217e:	681b      	ldr	r3, [r3, #0]
 8012180:	4618      	mov	r0, r3
 8012182:	f005 fbdf 	bl	8017944 <USB_ReadInterrupts>
 8012186:	4603      	mov	r3, r0
 8012188:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 801218c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8012190:	d155      	bne.n	801223e <HAL_PCD_IRQHandler+0x8cc>
 8012192:	2301      	movs	r3, #1
 8012194:	627b      	str	r3, [r7, #36]	@ 0x24
 8012196:	e045      	b.n	8012224 <HAL_PCD_IRQHandler+0x8b2>
 8012198:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801219a:	015a      	lsls	r2, r3, #5
 801219c:	69fb      	ldr	r3, [r7, #28]
 801219e:	4413      	add	r3, r2
 80121a0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80121a4:	681b      	ldr	r3, [r3, #0]
 80121a6:	61bb      	str	r3, [r7, #24]
 80121a8:	6879      	ldr	r1, [r7, #4]
 80121aa:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80121ac:	4613      	mov	r3, r2
 80121ae:	00db      	lsls	r3, r3, #3
 80121b0:	4413      	add	r3, r2
 80121b2:	009b      	lsls	r3, r3, #2
 80121b4:	440b      	add	r3, r1
 80121b6:	f503 7320 	add.w	r3, r3, #640	@ 0x280
 80121ba:	781b      	ldrb	r3, [r3, #0]
 80121bc:	2b01      	cmp	r3, #1
 80121be:	d12e      	bne.n	801221e <HAL_PCD_IRQHandler+0x8ac>
 80121c0:	69bb      	ldr	r3, [r7, #24]
 80121c2:	2b00      	cmp	r3, #0
 80121c4:	da2b      	bge.n	801221e <HAL_PCD_IRQHandler+0x8ac>
 80121c6:	69bb      	ldr	r3, [r7, #24]
 80121c8:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 80121cc:	687b      	ldr	r3, [r7, #4]
 80121ce:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	@ 0x4fc
 80121d2:	f003 0301 	and.w	r3, r3, #1
 80121d6:	429a      	cmp	r2, r3
 80121d8:	d121      	bne.n	801221e <HAL_PCD_IRQHandler+0x8ac>
 80121da:	6879      	ldr	r1, [r7, #4]
 80121dc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80121de:	4613      	mov	r3, r2
 80121e0:	00db      	lsls	r3, r3, #3
 80121e2:	4413      	add	r3, r2
 80121e4:	009b      	lsls	r3, r3, #2
 80121e6:	440b      	add	r3, r1
 80121e8:	f203 237f 	addw	r3, r3, #639	@ 0x27f
 80121ec:	2201      	movs	r2, #1
 80121ee:	701a      	strb	r2, [r3, #0]
 80121f0:	6a3b      	ldr	r3, [r7, #32]
 80121f2:	699b      	ldr	r3, [r3, #24]
 80121f4:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 80121f8:	6a3b      	ldr	r3, [r7, #32]
 80121fa:	619a      	str	r2, [r3, #24]
 80121fc:	6a3b      	ldr	r3, [r7, #32]
 80121fe:	695b      	ldr	r3, [r3, #20]
 8012200:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8012204:	2b00      	cmp	r3, #0
 8012206:	d10a      	bne.n	801221e <HAL_PCD_IRQHandler+0x8ac>
 8012208:	69fb      	ldr	r3, [r7, #28]
 801220a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801220e:	685b      	ldr	r3, [r3, #4]
 8012210:	69fa      	ldr	r2, [r7, #28]
 8012212:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8012216:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 801221a:	6053      	str	r3, [r2, #4]
 801221c:	e007      	b.n	801222e <HAL_PCD_IRQHandler+0x8bc>
 801221e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8012220:	3301      	adds	r3, #1
 8012222:	627b      	str	r3, [r7, #36]	@ 0x24
 8012224:	687b      	ldr	r3, [r7, #4]
 8012226:	685b      	ldr	r3, [r3, #4]
 8012228:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801222a:	429a      	cmp	r2, r3
 801222c:	d3b4      	bcc.n	8012198 <HAL_PCD_IRQHandler+0x826>
 801222e:	687b      	ldr	r3, [r7, #4]
 8012230:	681b      	ldr	r3, [r3, #0]
 8012232:	695a      	ldr	r2, [r3, #20]
 8012234:	687b      	ldr	r3, [r7, #4]
 8012236:	681b      	ldr	r3, [r3, #0]
 8012238:	f402 1200 	and.w	r2, r2, #2097152	@ 0x200000
 801223c:	615a      	str	r2, [r3, #20]
 801223e:	687b      	ldr	r3, [r7, #4]
 8012240:	681b      	ldr	r3, [r3, #0]
 8012242:	4618      	mov	r0, r3
 8012244:	f005 fb7e 	bl	8017944 <USB_ReadInterrupts>
 8012248:	4603      	mov	r3, r0
 801224a:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 801224e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8012252:	d10a      	bne.n	801226a <HAL_PCD_IRQHandler+0x8f8>
 8012254:	6878      	ldr	r0, [r7, #4]
 8012256:	f00b f899 	bl	801d38c <HAL_PCD_ConnectCallback>
 801225a:	687b      	ldr	r3, [r7, #4]
 801225c:	681b      	ldr	r3, [r3, #0]
 801225e:	695a      	ldr	r2, [r3, #20]
 8012260:	687b      	ldr	r3, [r7, #4]
 8012262:	681b      	ldr	r3, [r3, #0]
 8012264:	f002 4280 	and.w	r2, r2, #1073741824	@ 0x40000000
 8012268:	615a      	str	r2, [r3, #20]
 801226a:	687b      	ldr	r3, [r7, #4]
 801226c:	681b      	ldr	r3, [r3, #0]
 801226e:	4618      	mov	r0, r3
 8012270:	f005 fb68 	bl	8017944 <USB_ReadInterrupts>
 8012274:	4603      	mov	r3, r0
 8012276:	f003 0304 	and.w	r3, r3, #4
 801227a:	2b04      	cmp	r3, #4
 801227c:	d115      	bne.n	80122aa <HAL_PCD_IRQHandler+0x938>
 801227e:	687b      	ldr	r3, [r7, #4]
 8012280:	681b      	ldr	r3, [r3, #0]
 8012282:	685b      	ldr	r3, [r3, #4]
 8012284:	61bb      	str	r3, [r7, #24]
 8012286:	69bb      	ldr	r3, [r7, #24]
 8012288:	f003 0304 	and.w	r3, r3, #4
 801228c:	2b00      	cmp	r3, #0
 801228e:	d002      	beq.n	8012296 <HAL_PCD_IRQHandler+0x924>
 8012290:	6878      	ldr	r0, [r7, #4]
 8012292:	f00b f889 	bl	801d3a8 <HAL_PCD_DisconnectCallback>
 8012296:	687b      	ldr	r3, [r7, #4]
 8012298:	681b      	ldr	r3, [r3, #0]
 801229a:	6859      	ldr	r1, [r3, #4]
 801229c:	687b      	ldr	r3, [r7, #4]
 801229e:	681b      	ldr	r3, [r3, #0]
 80122a0:	69ba      	ldr	r2, [r7, #24]
 80122a2:	430a      	orrs	r2, r1
 80122a4:	605a      	str	r2, [r3, #4]
 80122a6:	e000      	b.n	80122aa <HAL_PCD_IRQHandler+0x938>
 80122a8:	bf00      	nop
 80122aa:	3734      	adds	r7, #52	@ 0x34
 80122ac:	46bd      	mov	sp, r7
 80122ae:	bd90      	pop	{r4, r7, pc}

080122b0 <HAL_PCD_SetAddress>:
 80122b0:	b580      	push	{r7, lr}
 80122b2:	b082      	sub	sp, #8
 80122b4:	af00      	add	r7, sp, #0
 80122b6:	6078      	str	r0, [r7, #4]
 80122b8:	460b      	mov	r3, r1
 80122ba:	70fb      	strb	r3, [r7, #3]
 80122bc:	687b      	ldr	r3, [r7, #4]
 80122be:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 80122c2:	2b01      	cmp	r3, #1
 80122c4:	d101      	bne.n	80122ca <HAL_PCD_SetAddress+0x1a>
 80122c6:	2302      	movs	r3, #2
 80122c8:	e013      	b.n	80122f2 <HAL_PCD_SetAddress+0x42>
 80122ca:	687b      	ldr	r3, [r7, #4]
 80122cc:	2201      	movs	r2, #1
 80122ce:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 80122d2:	687b      	ldr	r3, [r7, #4]
 80122d4:	78fa      	ldrb	r2, [r7, #3]
 80122d6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 80122da:	687b      	ldr	r3, [r7, #4]
 80122dc:	681b      	ldr	r3, [r3, #0]
 80122de:	78fa      	ldrb	r2, [r7, #3]
 80122e0:	4611      	mov	r1, r2
 80122e2:	4618      	mov	r0, r3
 80122e4:	f005 fac6 	bl	8017874 <USB_SetDevAddress>
 80122e8:	687b      	ldr	r3, [r7, #4]
 80122ea:	2200      	movs	r2, #0
 80122ec:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 80122f0:	2300      	movs	r3, #0
 80122f2:	4618      	mov	r0, r3
 80122f4:	3708      	adds	r7, #8
 80122f6:	46bd      	mov	sp, r7
 80122f8:	bd80      	pop	{r7, pc}

080122fa <HAL_PCD_EP_Open>:
 80122fa:	b580      	push	{r7, lr}
 80122fc:	b084      	sub	sp, #16
 80122fe:	af00      	add	r7, sp, #0
 8012300:	6078      	str	r0, [r7, #4]
 8012302:	4608      	mov	r0, r1
 8012304:	4611      	mov	r1, r2
 8012306:	461a      	mov	r2, r3
 8012308:	4603      	mov	r3, r0
 801230a:	70fb      	strb	r3, [r7, #3]
 801230c:	460b      	mov	r3, r1
 801230e:	803b      	strh	r3, [r7, #0]
 8012310:	4613      	mov	r3, r2
 8012312:	70bb      	strb	r3, [r7, #2]
 8012314:	2300      	movs	r3, #0
 8012316:	72fb      	strb	r3, [r7, #11]
 8012318:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801231c:	2b00      	cmp	r3, #0
 801231e:	da0f      	bge.n	8012340 <HAL_PCD_EP_Open+0x46>
 8012320:	78fb      	ldrb	r3, [r7, #3]
 8012322:	f003 020f 	and.w	r2, r3, #15
 8012326:	4613      	mov	r3, r2
 8012328:	00db      	lsls	r3, r3, #3
 801232a:	4413      	add	r3, r2
 801232c:	009b      	lsls	r3, r3, #2
 801232e:	3338      	adds	r3, #56	@ 0x38
 8012330:	687a      	ldr	r2, [r7, #4]
 8012332:	4413      	add	r3, r2
 8012334:	3304      	adds	r3, #4
 8012336:	60fb      	str	r3, [r7, #12]
 8012338:	68fb      	ldr	r3, [r7, #12]
 801233a:	2201      	movs	r2, #1
 801233c:	705a      	strb	r2, [r3, #1]
 801233e:	e00f      	b.n	8012360 <HAL_PCD_EP_Open+0x66>
 8012340:	78fb      	ldrb	r3, [r7, #3]
 8012342:	f003 020f 	and.w	r2, r3, #15
 8012346:	4613      	mov	r3, r2
 8012348:	00db      	lsls	r3, r3, #3
 801234a:	4413      	add	r3, r2
 801234c:	009b      	lsls	r3, r3, #2
 801234e:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 8012352:	687a      	ldr	r2, [r7, #4]
 8012354:	4413      	add	r3, r2
 8012356:	3304      	adds	r3, #4
 8012358:	60fb      	str	r3, [r7, #12]
 801235a:	68fb      	ldr	r3, [r7, #12]
 801235c:	2200      	movs	r2, #0
 801235e:	705a      	strb	r2, [r3, #1]
 8012360:	78fb      	ldrb	r3, [r7, #3]
 8012362:	f003 030f 	and.w	r3, r3, #15
 8012366:	b2da      	uxtb	r2, r3
 8012368:	68fb      	ldr	r3, [r7, #12]
 801236a:	701a      	strb	r2, [r3, #0]
 801236c:	883a      	ldrh	r2, [r7, #0]
 801236e:	68fb      	ldr	r3, [r7, #12]
 8012370:	60da      	str	r2, [r3, #12]
 8012372:	68fb      	ldr	r3, [r7, #12]
 8012374:	78ba      	ldrb	r2, [r7, #2]
 8012376:	711a      	strb	r2, [r3, #4]
 8012378:	68fb      	ldr	r3, [r7, #12]
 801237a:	785b      	ldrb	r3, [r3, #1]
 801237c:	2b00      	cmp	r3, #0
 801237e:	d004      	beq.n	801238a <HAL_PCD_EP_Open+0x90>
 8012380:	68fb      	ldr	r3, [r7, #12]
 8012382:	781b      	ldrb	r3, [r3, #0]
 8012384:	461a      	mov	r2, r3
 8012386:	68fb      	ldr	r3, [r7, #12]
 8012388:	811a      	strh	r2, [r3, #8]
 801238a:	78bb      	ldrb	r3, [r7, #2]
 801238c:	2b02      	cmp	r3, #2
 801238e:	d102      	bne.n	8012396 <HAL_PCD_EP_Open+0x9c>
 8012390:	68fb      	ldr	r3, [r7, #12]
 8012392:	2200      	movs	r2, #0
 8012394:	715a      	strb	r2, [r3, #5]
 8012396:	687b      	ldr	r3, [r7, #4]
 8012398:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 801239c:	2b01      	cmp	r3, #1
 801239e:	d101      	bne.n	80123a4 <HAL_PCD_EP_Open+0xaa>
 80123a0:	2302      	movs	r3, #2
 80123a2:	e00e      	b.n	80123c2 <HAL_PCD_EP_Open+0xc8>
 80123a4:	687b      	ldr	r3, [r7, #4]
 80123a6:	2201      	movs	r2, #1
 80123a8:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 80123ac:	687b      	ldr	r3, [r7, #4]
 80123ae:	681b      	ldr	r3, [r3, #0]
 80123b0:	68f9      	ldr	r1, [r7, #12]
 80123b2:	4618      	mov	r0, r3
 80123b4:	f004 fb46 	bl	8016a44 <USB_ActivateEndpoint>
 80123b8:	687b      	ldr	r3, [r7, #4]
 80123ba:	2200      	movs	r2, #0
 80123bc:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 80123c0:	7afb      	ldrb	r3, [r7, #11]
 80123c2:	4618      	mov	r0, r3
 80123c4:	3710      	adds	r7, #16
 80123c6:	46bd      	mov	sp, r7
 80123c8:	bd80      	pop	{r7, pc}

080123ca <HAL_PCD_EP_Close>:
 80123ca:	b580      	push	{r7, lr}
 80123cc:	b084      	sub	sp, #16
 80123ce:	af00      	add	r7, sp, #0
 80123d0:	6078      	str	r0, [r7, #4]
 80123d2:	460b      	mov	r3, r1
 80123d4:	70fb      	strb	r3, [r7, #3]
 80123d6:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80123da:	2b00      	cmp	r3, #0
 80123dc:	da0f      	bge.n	80123fe <HAL_PCD_EP_Close+0x34>
 80123de:	78fb      	ldrb	r3, [r7, #3]
 80123e0:	f003 020f 	and.w	r2, r3, #15
 80123e4:	4613      	mov	r3, r2
 80123e6:	00db      	lsls	r3, r3, #3
 80123e8:	4413      	add	r3, r2
 80123ea:	009b      	lsls	r3, r3, #2
 80123ec:	3338      	adds	r3, #56	@ 0x38
 80123ee:	687a      	ldr	r2, [r7, #4]
 80123f0:	4413      	add	r3, r2
 80123f2:	3304      	adds	r3, #4
 80123f4:	60fb      	str	r3, [r7, #12]
 80123f6:	68fb      	ldr	r3, [r7, #12]
 80123f8:	2201      	movs	r2, #1
 80123fa:	705a      	strb	r2, [r3, #1]
 80123fc:	e00f      	b.n	801241e <HAL_PCD_EP_Close+0x54>
 80123fe:	78fb      	ldrb	r3, [r7, #3]
 8012400:	f003 020f 	and.w	r2, r3, #15
 8012404:	4613      	mov	r3, r2
 8012406:	00db      	lsls	r3, r3, #3
 8012408:	4413      	add	r3, r2
 801240a:	009b      	lsls	r3, r3, #2
 801240c:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 8012410:	687a      	ldr	r2, [r7, #4]
 8012412:	4413      	add	r3, r2
 8012414:	3304      	adds	r3, #4
 8012416:	60fb      	str	r3, [r7, #12]
 8012418:	68fb      	ldr	r3, [r7, #12]
 801241a:	2200      	movs	r2, #0
 801241c:	705a      	strb	r2, [r3, #1]
 801241e:	78fb      	ldrb	r3, [r7, #3]
 8012420:	f003 030f 	and.w	r3, r3, #15
 8012424:	b2da      	uxtb	r2, r3
 8012426:	68fb      	ldr	r3, [r7, #12]
 8012428:	701a      	strb	r2, [r3, #0]
 801242a:	687b      	ldr	r3, [r7, #4]
 801242c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 8012430:	2b01      	cmp	r3, #1
 8012432:	d101      	bne.n	8012438 <HAL_PCD_EP_Close+0x6e>
 8012434:	2302      	movs	r3, #2
 8012436:	e00e      	b.n	8012456 <HAL_PCD_EP_Close+0x8c>
 8012438:	687b      	ldr	r3, [r7, #4]
 801243a:	2201      	movs	r2, #1
 801243c:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8012440:	687b      	ldr	r3, [r7, #4]
 8012442:	681b      	ldr	r3, [r3, #0]
 8012444:	68f9      	ldr	r1, [r7, #12]
 8012446:	4618      	mov	r0, r3
 8012448:	f004 fb84 	bl	8016b54 <USB_DeactivateEndpoint>
 801244c:	687b      	ldr	r3, [r7, #4]
 801244e:	2200      	movs	r2, #0
 8012450:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8012454:	2300      	movs	r3, #0
 8012456:	4618      	mov	r0, r3
 8012458:	3710      	adds	r7, #16
 801245a:	46bd      	mov	sp, r7
 801245c:	bd80      	pop	{r7, pc}

0801245e <HAL_PCD_EP_Receive>:
 801245e:	b580      	push	{r7, lr}
 8012460:	b086      	sub	sp, #24
 8012462:	af00      	add	r7, sp, #0
 8012464:	60f8      	str	r0, [r7, #12]
 8012466:	607a      	str	r2, [r7, #4]
 8012468:	603b      	str	r3, [r7, #0]
 801246a:	460b      	mov	r3, r1
 801246c:	72fb      	strb	r3, [r7, #11]
 801246e:	7afb      	ldrb	r3, [r7, #11]
 8012470:	f003 020f 	and.w	r2, r3, #15
 8012474:	4613      	mov	r3, r2
 8012476:	00db      	lsls	r3, r3, #3
 8012478:	4413      	add	r3, r2
 801247a:	009b      	lsls	r3, r3, #2
 801247c:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 8012480:	68fa      	ldr	r2, [r7, #12]
 8012482:	4413      	add	r3, r2
 8012484:	3304      	adds	r3, #4
 8012486:	617b      	str	r3, [r7, #20]
 8012488:	697b      	ldr	r3, [r7, #20]
 801248a:	687a      	ldr	r2, [r7, #4]
 801248c:	611a      	str	r2, [r3, #16]
 801248e:	697b      	ldr	r3, [r7, #20]
 8012490:	683a      	ldr	r2, [r7, #0]
 8012492:	619a      	str	r2, [r3, #24]
 8012494:	697b      	ldr	r3, [r7, #20]
 8012496:	2200      	movs	r2, #0
 8012498:	621a      	str	r2, [r3, #32]
 801249a:	697b      	ldr	r3, [r7, #20]
 801249c:	2200      	movs	r2, #0
 801249e:	705a      	strb	r2, [r3, #1]
 80124a0:	7afb      	ldrb	r3, [r7, #11]
 80124a2:	f003 030f 	and.w	r3, r3, #15
 80124a6:	b2da      	uxtb	r2, r3
 80124a8:	697b      	ldr	r3, [r7, #20]
 80124aa:	701a      	strb	r2, [r3, #0]
 80124ac:	68fb      	ldr	r3, [r7, #12]
 80124ae:	691b      	ldr	r3, [r3, #16]
 80124b0:	2b01      	cmp	r3, #1
 80124b2:	d102      	bne.n	80124ba <HAL_PCD_EP_Receive+0x5c>
 80124b4:	687a      	ldr	r2, [r7, #4]
 80124b6:	697b      	ldr	r3, [r7, #20]
 80124b8:	615a      	str	r2, [r3, #20]
 80124ba:	7afb      	ldrb	r3, [r7, #11]
 80124bc:	f003 030f 	and.w	r3, r3, #15
 80124c0:	2b00      	cmp	r3, #0
 80124c2:	d109      	bne.n	80124d8 <HAL_PCD_EP_Receive+0x7a>
 80124c4:	68fb      	ldr	r3, [r7, #12]
 80124c6:	6818      	ldr	r0, [r3, #0]
 80124c8:	68fb      	ldr	r3, [r7, #12]
 80124ca:	691b      	ldr	r3, [r3, #16]
 80124cc:	b2db      	uxtb	r3, r3
 80124ce:	461a      	mov	r2, r3
 80124d0:	6979      	ldr	r1, [r7, #20]
 80124d2:	f004 fe63 	bl	801719c <USB_EP0StartXfer>
 80124d6:	e008      	b.n	80124ea <HAL_PCD_EP_Receive+0x8c>
 80124d8:	68fb      	ldr	r3, [r7, #12]
 80124da:	6818      	ldr	r0, [r3, #0]
 80124dc:	68fb      	ldr	r3, [r7, #12]
 80124de:	691b      	ldr	r3, [r3, #16]
 80124e0:	b2db      	uxtb	r3, r3
 80124e2:	461a      	mov	r2, r3
 80124e4:	6979      	ldr	r1, [r7, #20]
 80124e6:	f004 fc11 	bl	8016d0c <USB_EPStartXfer>
 80124ea:	2300      	movs	r3, #0
 80124ec:	4618      	mov	r0, r3
 80124ee:	3718      	adds	r7, #24
 80124f0:	46bd      	mov	sp, r7
 80124f2:	bd80      	pop	{r7, pc}

080124f4 <HAL_PCD_EP_GetRxCount>:
 80124f4:	b480      	push	{r7}
 80124f6:	b083      	sub	sp, #12
 80124f8:	af00      	add	r7, sp, #0
 80124fa:	6078      	str	r0, [r7, #4]
 80124fc:	460b      	mov	r3, r1
 80124fe:	70fb      	strb	r3, [r7, #3]
 8012500:	78fb      	ldrb	r3, [r7, #3]
 8012502:	f003 020f 	and.w	r2, r3, #15
 8012506:	6879      	ldr	r1, [r7, #4]
 8012508:	4613      	mov	r3, r2
 801250a:	00db      	lsls	r3, r3, #3
 801250c:	4413      	add	r3, r2
 801250e:	009b      	lsls	r3, r3, #2
 8012510:	440b      	add	r3, r1
 8012512:	f503 7327 	add.w	r3, r3, #668	@ 0x29c
 8012516:	681b      	ldr	r3, [r3, #0]
 8012518:	4618      	mov	r0, r3
 801251a:	370c      	adds	r7, #12
 801251c:	46bd      	mov	sp, r7
 801251e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012522:	4770      	bx	lr

08012524 <HAL_PCD_EP_Transmit>:
 8012524:	b580      	push	{r7, lr}
 8012526:	b086      	sub	sp, #24
 8012528:	af00      	add	r7, sp, #0
 801252a:	60f8      	str	r0, [r7, #12]
 801252c:	607a      	str	r2, [r7, #4]
 801252e:	603b      	str	r3, [r7, #0]
 8012530:	460b      	mov	r3, r1
 8012532:	72fb      	strb	r3, [r7, #11]
 8012534:	7afb      	ldrb	r3, [r7, #11]
 8012536:	f003 020f 	and.w	r2, r3, #15
 801253a:	4613      	mov	r3, r2
 801253c:	00db      	lsls	r3, r3, #3
 801253e:	4413      	add	r3, r2
 8012540:	009b      	lsls	r3, r3, #2
 8012542:	3338      	adds	r3, #56	@ 0x38
 8012544:	68fa      	ldr	r2, [r7, #12]
 8012546:	4413      	add	r3, r2
 8012548:	3304      	adds	r3, #4
 801254a:	617b      	str	r3, [r7, #20]
 801254c:	697b      	ldr	r3, [r7, #20]
 801254e:	687a      	ldr	r2, [r7, #4]
 8012550:	611a      	str	r2, [r3, #16]
 8012552:	697b      	ldr	r3, [r7, #20]
 8012554:	683a      	ldr	r2, [r7, #0]
 8012556:	619a      	str	r2, [r3, #24]
 8012558:	697b      	ldr	r3, [r7, #20]
 801255a:	2200      	movs	r2, #0
 801255c:	621a      	str	r2, [r3, #32]
 801255e:	697b      	ldr	r3, [r7, #20]
 8012560:	2201      	movs	r2, #1
 8012562:	705a      	strb	r2, [r3, #1]
 8012564:	7afb      	ldrb	r3, [r7, #11]
 8012566:	f003 030f 	and.w	r3, r3, #15
 801256a:	b2da      	uxtb	r2, r3
 801256c:	697b      	ldr	r3, [r7, #20]
 801256e:	701a      	strb	r2, [r3, #0]
 8012570:	68fb      	ldr	r3, [r7, #12]
 8012572:	691b      	ldr	r3, [r3, #16]
 8012574:	2b01      	cmp	r3, #1
 8012576:	d102      	bne.n	801257e <HAL_PCD_EP_Transmit+0x5a>
 8012578:	687a      	ldr	r2, [r7, #4]
 801257a:	697b      	ldr	r3, [r7, #20]
 801257c:	615a      	str	r2, [r3, #20]
 801257e:	7afb      	ldrb	r3, [r7, #11]
 8012580:	f003 030f 	and.w	r3, r3, #15
 8012584:	2b00      	cmp	r3, #0
 8012586:	d109      	bne.n	801259c <HAL_PCD_EP_Transmit+0x78>
 8012588:	68fb      	ldr	r3, [r7, #12]
 801258a:	6818      	ldr	r0, [r3, #0]
 801258c:	68fb      	ldr	r3, [r7, #12]
 801258e:	691b      	ldr	r3, [r3, #16]
 8012590:	b2db      	uxtb	r3, r3
 8012592:	461a      	mov	r2, r3
 8012594:	6979      	ldr	r1, [r7, #20]
 8012596:	f004 fe01 	bl	801719c <USB_EP0StartXfer>
 801259a:	e008      	b.n	80125ae <HAL_PCD_EP_Transmit+0x8a>
 801259c:	68fb      	ldr	r3, [r7, #12]
 801259e:	6818      	ldr	r0, [r3, #0]
 80125a0:	68fb      	ldr	r3, [r7, #12]
 80125a2:	691b      	ldr	r3, [r3, #16]
 80125a4:	b2db      	uxtb	r3, r3
 80125a6:	461a      	mov	r2, r3
 80125a8:	6979      	ldr	r1, [r7, #20]
 80125aa:	f004 fbaf 	bl	8016d0c <USB_EPStartXfer>
 80125ae:	2300      	movs	r3, #0
 80125b0:	4618      	mov	r0, r3
 80125b2:	3718      	adds	r7, #24
 80125b4:	46bd      	mov	sp, r7
 80125b6:	bd80      	pop	{r7, pc}

080125b8 <HAL_PCD_EP_SetStall>:
 80125b8:	b580      	push	{r7, lr}
 80125ba:	b084      	sub	sp, #16
 80125bc:	af00      	add	r7, sp, #0
 80125be:	6078      	str	r0, [r7, #4]
 80125c0:	460b      	mov	r3, r1
 80125c2:	70fb      	strb	r3, [r7, #3]
 80125c4:	78fb      	ldrb	r3, [r7, #3]
 80125c6:	f003 020f 	and.w	r2, r3, #15
 80125ca:	687b      	ldr	r3, [r7, #4]
 80125cc:	685b      	ldr	r3, [r3, #4]
 80125ce:	429a      	cmp	r2, r3
 80125d0:	d901      	bls.n	80125d6 <HAL_PCD_EP_SetStall+0x1e>
 80125d2:	2301      	movs	r3, #1
 80125d4:	e050      	b.n	8012678 <HAL_PCD_EP_SetStall+0xc0>
 80125d6:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80125da:	2b00      	cmp	r3, #0
 80125dc:	da0f      	bge.n	80125fe <HAL_PCD_EP_SetStall+0x46>
 80125de:	78fb      	ldrb	r3, [r7, #3]
 80125e0:	f003 020f 	and.w	r2, r3, #15
 80125e4:	4613      	mov	r3, r2
 80125e6:	00db      	lsls	r3, r3, #3
 80125e8:	4413      	add	r3, r2
 80125ea:	009b      	lsls	r3, r3, #2
 80125ec:	3338      	adds	r3, #56	@ 0x38
 80125ee:	687a      	ldr	r2, [r7, #4]
 80125f0:	4413      	add	r3, r2
 80125f2:	3304      	adds	r3, #4
 80125f4:	60fb      	str	r3, [r7, #12]
 80125f6:	68fb      	ldr	r3, [r7, #12]
 80125f8:	2201      	movs	r2, #1
 80125fa:	705a      	strb	r2, [r3, #1]
 80125fc:	e00d      	b.n	801261a <HAL_PCD_EP_SetStall+0x62>
 80125fe:	78fa      	ldrb	r2, [r7, #3]
 8012600:	4613      	mov	r3, r2
 8012602:	00db      	lsls	r3, r3, #3
 8012604:	4413      	add	r3, r2
 8012606:	009b      	lsls	r3, r3, #2
 8012608:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 801260c:	687a      	ldr	r2, [r7, #4]
 801260e:	4413      	add	r3, r2
 8012610:	3304      	adds	r3, #4
 8012612:	60fb      	str	r3, [r7, #12]
 8012614:	68fb      	ldr	r3, [r7, #12]
 8012616:	2200      	movs	r2, #0
 8012618:	705a      	strb	r2, [r3, #1]
 801261a:	68fb      	ldr	r3, [r7, #12]
 801261c:	2201      	movs	r2, #1
 801261e:	709a      	strb	r2, [r3, #2]
 8012620:	78fb      	ldrb	r3, [r7, #3]
 8012622:	f003 030f 	and.w	r3, r3, #15
 8012626:	b2da      	uxtb	r2, r3
 8012628:	68fb      	ldr	r3, [r7, #12]
 801262a:	701a      	strb	r2, [r3, #0]
 801262c:	687b      	ldr	r3, [r7, #4]
 801262e:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 8012632:	2b01      	cmp	r3, #1
 8012634:	d101      	bne.n	801263a <HAL_PCD_EP_SetStall+0x82>
 8012636:	2302      	movs	r3, #2
 8012638:	e01e      	b.n	8012678 <HAL_PCD_EP_SetStall+0xc0>
 801263a:	687b      	ldr	r3, [r7, #4]
 801263c:	2201      	movs	r2, #1
 801263e:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8012642:	687b      	ldr	r3, [r7, #4]
 8012644:	681b      	ldr	r3, [r3, #0]
 8012646:	68f9      	ldr	r1, [r7, #12]
 8012648:	4618      	mov	r0, r3
 801264a:	f005 f83f 	bl	80176cc <USB_EPSetStall>
 801264e:	78fb      	ldrb	r3, [r7, #3]
 8012650:	f003 030f 	and.w	r3, r3, #15
 8012654:	2b00      	cmp	r3, #0
 8012656:	d10a      	bne.n	801266e <HAL_PCD_EP_SetStall+0xb6>
 8012658:	687b      	ldr	r3, [r7, #4]
 801265a:	6818      	ldr	r0, [r3, #0]
 801265c:	687b      	ldr	r3, [r7, #4]
 801265e:	691b      	ldr	r3, [r3, #16]
 8012660:	b2d9      	uxtb	r1, r3
 8012662:	687b      	ldr	r3, [r7, #4]
 8012664:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8012668:	461a      	mov	r2, r3
 801266a:	f005 fa2f 	bl	8017acc <USB_EP0_OutStart>
 801266e:	687b      	ldr	r3, [r7, #4]
 8012670:	2200      	movs	r2, #0
 8012672:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8012676:	2300      	movs	r3, #0
 8012678:	4618      	mov	r0, r3
 801267a:	3710      	adds	r7, #16
 801267c:	46bd      	mov	sp, r7
 801267e:	bd80      	pop	{r7, pc}

08012680 <HAL_PCD_EP_ClrStall>:
 8012680:	b580      	push	{r7, lr}
 8012682:	b084      	sub	sp, #16
 8012684:	af00      	add	r7, sp, #0
 8012686:	6078      	str	r0, [r7, #4]
 8012688:	460b      	mov	r3, r1
 801268a:	70fb      	strb	r3, [r7, #3]
 801268c:	78fb      	ldrb	r3, [r7, #3]
 801268e:	f003 020f 	and.w	r2, r3, #15
 8012692:	687b      	ldr	r3, [r7, #4]
 8012694:	685b      	ldr	r3, [r3, #4]
 8012696:	429a      	cmp	r2, r3
 8012698:	d901      	bls.n	801269e <HAL_PCD_EP_ClrStall+0x1e>
 801269a:	2301      	movs	r3, #1
 801269c:	e042      	b.n	8012724 <HAL_PCD_EP_ClrStall+0xa4>
 801269e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80126a2:	2b00      	cmp	r3, #0
 80126a4:	da0f      	bge.n	80126c6 <HAL_PCD_EP_ClrStall+0x46>
 80126a6:	78fb      	ldrb	r3, [r7, #3]
 80126a8:	f003 020f 	and.w	r2, r3, #15
 80126ac:	4613      	mov	r3, r2
 80126ae:	00db      	lsls	r3, r3, #3
 80126b0:	4413      	add	r3, r2
 80126b2:	009b      	lsls	r3, r3, #2
 80126b4:	3338      	adds	r3, #56	@ 0x38
 80126b6:	687a      	ldr	r2, [r7, #4]
 80126b8:	4413      	add	r3, r2
 80126ba:	3304      	adds	r3, #4
 80126bc:	60fb      	str	r3, [r7, #12]
 80126be:	68fb      	ldr	r3, [r7, #12]
 80126c0:	2201      	movs	r2, #1
 80126c2:	705a      	strb	r2, [r3, #1]
 80126c4:	e00f      	b.n	80126e6 <HAL_PCD_EP_ClrStall+0x66>
 80126c6:	78fb      	ldrb	r3, [r7, #3]
 80126c8:	f003 020f 	and.w	r2, r3, #15
 80126cc:	4613      	mov	r3, r2
 80126ce:	00db      	lsls	r3, r3, #3
 80126d0:	4413      	add	r3, r2
 80126d2:	009b      	lsls	r3, r3, #2
 80126d4:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 80126d8:	687a      	ldr	r2, [r7, #4]
 80126da:	4413      	add	r3, r2
 80126dc:	3304      	adds	r3, #4
 80126de:	60fb      	str	r3, [r7, #12]
 80126e0:	68fb      	ldr	r3, [r7, #12]
 80126e2:	2200      	movs	r2, #0
 80126e4:	705a      	strb	r2, [r3, #1]
 80126e6:	68fb      	ldr	r3, [r7, #12]
 80126e8:	2200      	movs	r2, #0
 80126ea:	709a      	strb	r2, [r3, #2]
 80126ec:	78fb      	ldrb	r3, [r7, #3]
 80126ee:	f003 030f 	and.w	r3, r3, #15
 80126f2:	b2da      	uxtb	r2, r3
 80126f4:	68fb      	ldr	r3, [r7, #12]
 80126f6:	701a      	strb	r2, [r3, #0]
 80126f8:	687b      	ldr	r3, [r7, #4]
 80126fa:	f893 34bc 	ldrb.w	r3, [r3, #1212]	@ 0x4bc
 80126fe:	2b01      	cmp	r3, #1
 8012700:	d101      	bne.n	8012706 <HAL_PCD_EP_ClrStall+0x86>
 8012702:	2302      	movs	r3, #2
 8012704:	e00e      	b.n	8012724 <HAL_PCD_EP_ClrStall+0xa4>
 8012706:	687b      	ldr	r3, [r7, #4]
 8012708:	2201      	movs	r2, #1
 801270a:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 801270e:	687b      	ldr	r3, [r7, #4]
 8012710:	681b      	ldr	r3, [r3, #0]
 8012712:	68f9      	ldr	r1, [r7, #12]
 8012714:	4618      	mov	r0, r3
 8012716:	f005 f847 	bl	80177a8 <USB_EPClearStall>
 801271a:	687b      	ldr	r3, [r7, #4]
 801271c:	2200      	movs	r2, #0
 801271e:	f883 24bc 	strb.w	r2, [r3, #1212]	@ 0x4bc
 8012722:	2300      	movs	r3, #0
 8012724:	4618      	mov	r0, r3
 8012726:	3710      	adds	r7, #16
 8012728:	46bd      	mov	sp, r7
 801272a:	bd80      	pop	{r7, pc}

0801272c <HAL_PCD_EP_Abort>:
 801272c:	b580      	push	{r7, lr}
 801272e:	b084      	sub	sp, #16
 8012730:	af00      	add	r7, sp, #0
 8012732:	6078      	str	r0, [r7, #4]
 8012734:	460b      	mov	r3, r1
 8012736:	70fb      	strb	r3, [r7, #3]
 8012738:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801273c:	2b00      	cmp	r3, #0
 801273e:	da0c      	bge.n	801275a <HAL_PCD_EP_Abort+0x2e>
 8012740:	78fb      	ldrb	r3, [r7, #3]
 8012742:	f003 020f 	and.w	r2, r3, #15
 8012746:	4613      	mov	r3, r2
 8012748:	00db      	lsls	r3, r3, #3
 801274a:	4413      	add	r3, r2
 801274c:	009b      	lsls	r3, r3, #2
 801274e:	3338      	adds	r3, #56	@ 0x38
 8012750:	687a      	ldr	r2, [r7, #4]
 8012752:	4413      	add	r3, r2
 8012754:	3304      	adds	r3, #4
 8012756:	60fb      	str	r3, [r7, #12]
 8012758:	e00c      	b.n	8012774 <HAL_PCD_EP_Abort+0x48>
 801275a:	78fb      	ldrb	r3, [r7, #3]
 801275c:	f003 020f 	and.w	r2, r3, #15
 8012760:	4613      	mov	r3, r2
 8012762:	00db      	lsls	r3, r3, #3
 8012764:	4413      	add	r3, r2
 8012766:	009b      	lsls	r3, r3, #2
 8012768:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 801276c:	687a      	ldr	r2, [r7, #4]
 801276e:	4413      	add	r3, r2
 8012770:	3304      	adds	r3, #4
 8012772:	60fb      	str	r3, [r7, #12]
 8012774:	687b      	ldr	r3, [r7, #4]
 8012776:	681b      	ldr	r3, [r3, #0]
 8012778:	68f9      	ldr	r1, [r7, #12]
 801277a:	4618      	mov	r0, r3
 801277c:	f004 fe66 	bl	801744c <USB_EPStopXfer>
 8012780:	4603      	mov	r3, r0
 8012782:	72fb      	strb	r3, [r7, #11]
 8012784:	7afb      	ldrb	r3, [r7, #11]
 8012786:	4618      	mov	r0, r3
 8012788:	3710      	adds	r7, #16
 801278a:	46bd      	mov	sp, r7
 801278c:	bd80      	pop	{r7, pc}

0801278e <PCD_WriteEmptyTxFifo>:
 801278e:	b580      	push	{r7, lr}
 8012790:	b08a      	sub	sp, #40	@ 0x28
 8012792:	af02      	add	r7, sp, #8
 8012794:	6078      	str	r0, [r7, #4]
 8012796:	6039      	str	r1, [r7, #0]
 8012798:	687b      	ldr	r3, [r7, #4]
 801279a:	681b      	ldr	r3, [r3, #0]
 801279c:	617b      	str	r3, [r7, #20]
 801279e:	697b      	ldr	r3, [r7, #20]
 80127a0:	613b      	str	r3, [r7, #16]
 80127a2:	683a      	ldr	r2, [r7, #0]
 80127a4:	4613      	mov	r3, r2
 80127a6:	00db      	lsls	r3, r3, #3
 80127a8:	4413      	add	r3, r2
 80127aa:	009b      	lsls	r3, r3, #2
 80127ac:	3338      	adds	r3, #56	@ 0x38
 80127ae:	687a      	ldr	r2, [r7, #4]
 80127b0:	4413      	add	r3, r2
 80127b2:	3304      	adds	r3, #4
 80127b4:	60fb      	str	r3, [r7, #12]
 80127b6:	68fb      	ldr	r3, [r7, #12]
 80127b8:	6a1a      	ldr	r2, [r3, #32]
 80127ba:	68fb      	ldr	r3, [r7, #12]
 80127bc:	699b      	ldr	r3, [r3, #24]
 80127be:	429a      	cmp	r2, r3
 80127c0:	d901      	bls.n	80127c6 <PCD_WriteEmptyTxFifo+0x38>
 80127c2:	2301      	movs	r3, #1
 80127c4:	e06c      	b.n	80128a0 <PCD_WriteEmptyTxFifo+0x112>
 80127c6:	68fb      	ldr	r3, [r7, #12]
 80127c8:	699a      	ldr	r2, [r3, #24]
 80127ca:	68fb      	ldr	r3, [r7, #12]
 80127cc:	6a1b      	ldr	r3, [r3, #32]
 80127ce:	1ad3      	subs	r3, r2, r3
 80127d0:	61fb      	str	r3, [r7, #28]
 80127d2:	68fb      	ldr	r3, [r7, #12]
 80127d4:	68db      	ldr	r3, [r3, #12]
 80127d6:	69fa      	ldr	r2, [r7, #28]
 80127d8:	429a      	cmp	r2, r3
 80127da:	d902      	bls.n	80127e2 <PCD_WriteEmptyTxFifo+0x54>
 80127dc:	68fb      	ldr	r3, [r7, #12]
 80127de:	68db      	ldr	r3, [r3, #12]
 80127e0:	61fb      	str	r3, [r7, #28]
 80127e2:	69fb      	ldr	r3, [r7, #28]
 80127e4:	3303      	adds	r3, #3
 80127e6:	089b      	lsrs	r3, r3, #2
 80127e8:	61bb      	str	r3, [r7, #24]
 80127ea:	e02b      	b.n	8012844 <PCD_WriteEmptyTxFifo+0xb6>
 80127ec:	68fb      	ldr	r3, [r7, #12]
 80127ee:	699a      	ldr	r2, [r3, #24]
 80127f0:	68fb      	ldr	r3, [r7, #12]
 80127f2:	6a1b      	ldr	r3, [r3, #32]
 80127f4:	1ad3      	subs	r3, r2, r3
 80127f6:	61fb      	str	r3, [r7, #28]
 80127f8:	68fb      	ldr	r3, [r7, #12]
 80127fa:	68db      	ldr	r3, [r3, #12]
 80127fc:	69fa      	ldr	r2, [r7, #28]
 80127fe:	429a      	cmp	r2, r3
 8012800:	d902      	bls.n	8012808 <PCD_WriteEmptyTxFifo+0x7a>
 8012802:	68fb      	ldr	r3, [r7, #12]
 8012804:	68db      	ldr	r3, [r3, #12]
 8012806:	61fb      	str	r3, [r7, #28]
 8012808:	69fb      	ldr	r3, [r7, #28]
 801280a:	3303      	adds	r3, #3
 801280c:	089b      	lsrs	r3, r3, #2
 801280e:	61bb      	str	r3, [r7, #24]
 8012810:	68fb      	ldr	r3, [r7, #12]
 8012812:	6919      	ldr	r1, [r3, #16]
 8012814:	683b      	ldr	r3, [r7, #0]
 8012816:	b2da      	uxtb	r2, r3
 8012818:	69fb      	ldr	r3, [r7, #28]
 801281a:	b298      	uxth	r0, r3
 801281c:	687b      	ldr	r3, [r7, #4]
 801281e:	691b      	ldr	r3, [r3, #16]
 8012820:	b2db      	uxtb	r3, r3
 8012822:	9300      	str	r3, [sp, #0]
 8012824:	4603      	mov	r3, r0
 8012826:	6978      	ldr	r0, [r7, #20]
 8012828:	f004 feba 	bl	80175a0 <USB_WritePacket>
 801282c:	68fb      	ldr	r3, [r7, #12]
 801282e:	691a      	ldr	r2, [r3, #16]
 8012830:	69fb      	ldr	r3, [r7, #28]
 8012832:	441a      	add	r2, r3
 8012834:	68fb      	ldr	r3, [r7, #12]
 8012836:	611a      	str	r2, [r3, #16]
 8012838:	68fb      	ldr	r3, [r7, #12]
 801283a:	6a1a      	ldr	r2, [r3, #32]
 801283c:	69fb      	ldr	r3, [r7, #28]
 801283e:	441a      	add	r2, r3
 8012840:	68fb      	ldr	r3, [r7, #12]
 8012842:	621a      	str	r2, [r3, #32]
 8012844:	683b      	ldr	r3, [r7, #0]
 8012846:	015a      	lsls	r2, r3, #5
 8012848:	693b      	ldr	r3, [r7, #16]
 801284a:	4413      	add	r3, r2
 801284c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8012850:	699b      	ldr	r3, [r3, #24]
 8012852:	b29b      	uxth	r3, r3
 8012854:	69ba      	ldr	r2, [r7, #24]
 8012856:	429a      	cmp	r2, r3
 8012858:	d809      	bhi.n	801286e <PCD_WriteEmptyTxFifo+0xe0>
 801285a:	68fb      	ldr	r3, [r7, #12]
 801285c:	6a1a      	ldr	r2, [r3, #32]
 801285e:	68fb      	ldr	r3, [r7, #12]
 8012860:	699b      	ldr	r3, [r3, #24]
 8012862:	429a      	cmp	r2, r3
 8012864:	d203      	bcs.n	801286e <PCD_WriteEmptyTxFifo+0xe0>
 8012866:	68fb      	ldr	r3, [r7, #12]
 8012868:	699b      	ldr	r3, [r3, #24]
 801286a:	2b00      	cmp	r3, #0
 801286c:	d1be      	bne.n	80127ec <PCD_WriteEmptyTxFifo+0x5e>
 801286e:	68fb      	ldr	r3, [r7, #12]
 8012870:	699a      	ldr	r2, [r3, #24]
 8012872:	68fb      	ldr	r3, [r7, #12]
 8012874:	6a1b      	ldr	r3, [r3, #32]
 8012876:	429a      	cmp	r2, r3
 8012878:	d811      	bhi.n	801289e <PCD_WriteEmptyTxFifo+0x110>
 801287a:	683b      	ldr	r3, [r7, #0]
 801287c:	f003 030f 	and.w	r3, r3, #15
 8012880:	2201      	movs	r2, #1
 8012882:	fa02 f303 	lsl.w	r3, r2, r3
 8012886:	60bb      	str	r3, [r7, #8]
 8012888:	693b      	ldr	r3, [r7, #16]
 801288a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801288e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8012890:	68bb      	ldr	r3, [r7, #8]
 8012892:	43db      	mvns	r3, r3
 8012894:	6939      	ldr	r1, [r7, #16]
 8012896:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 801289a:	4013      	ands	r3, r2
 801289c:	634b      	str	r3, [r1, #52]	@ 0x34
 801289e:	2300      	movs	r3, #0
 80128a0:	4618      	mov	r0, r3
 80128a2:	3720      	adds	r7, #32
 80128a4:	46bd      	mov	sp, r7
 80128a6:	bd80      	pop	{r7, pc}

080128a8 <PCD_EP_OutXfrComplete_int>:
 80128a8:	b580      	push	{r7, lr}
 80128aa:	b088      	sub	sp, #32
 80128ac:	af00      	add	r7, sp, #0
 80128ae:	6078      	str	r0, [r7, #4]
 80128b0:	6039      	str	r1, [r7, #0]
 80128b2:	687b      	ldr	r3, [r7, #4]
 80128b4:	681b      	ldr	r3, [r3, #0]
 80128b6:	61fb      	str	r3, [r7, #28]
 80128b8:	69fb      	ldr	r3, [r7, #28]
 80128ba:	61bb      	str	r3, [r7, #24]
 80128bc:	69fb      	ldr	r3, [r7, #28]
 80128be:	333c      	adds	r3, #60	@ 0x3c
 80128c0:	3304      	adds	r3, #4
 80128c2:	681b      	ldr	r3, [r3, #0]
 80128c4:	617b      	str	r3, [r7, #20]
 80128c6:	683b      	ldr	r3, [r7, #0]
 80128c8:	015a      	lsls	r2, r3, #5
 80128ca:	69bb      	ldr	r3, [r7, #24]
 80128cc:	4413      	add	r3, r2
 80128ce:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80128d2:	689b      	ldr	r3, [r3, #8]
 80128d4:	613b      	str	r3, [r7, #16]
 80128d6:	687b      	ldr	r3, [r7, #4]
 80128d8:	691b      	ldr	r3, [r3, #16]
 80128da:	2b01      	cmp	r3, #1
 80128dc:	d17b      	bne.n	80129d6 <PCD_EP_OutXfrComplete_int+0x12e>
 80128de:	693b      	ldr	r3, [r7, #16]
 80128e0:	f003 0308 	and.w	r3, r3, #8
 80128e4:	2b00      	cmp	r3, #0
 80128e6:	d015      	beq.n	8012914 <PCD_EP_OutXfrComplete_int+0x6c>
 80128e8:	697b      	ldr	r3, [r7, #20]
 80128ea:	4a61      	ldr	r2, [pc, #388]	@ (8012a70 <PCD_EP_OutXfrComplete_int+0x1c8>)
 80128ec:	4293      	cmp	r3, r2
 80128ee:	f240 80b9 	bls.w	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 80128f2:	693b      	ldr	r3, [r7, #16]
 80128f4:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80128f8:	2b00      	cmp	r3, #0
 80128fa:	f000 80b3 	beq.w	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 80128fe:	683b      	ldr	r3, [r7, #0]
 8012900:	015a      	lsls	r2, r3, #5
 8012902:	69bb      	ldr	r3, [r7, #24]
 8012904:	4413      	add	r3, r2
 8012906:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801290a:	461a      	mov	r2, r3
 801290c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012910:	6093      	str	r3, [r2, #8]
 8012912:	e0a7      	b.n	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 8012914:	693b      	ldr	r3, [r7, #16]
 8012916:	f003 0320 	and.w	r3, r3, #32
 801291a:	2b00      	cmp	r3, #0
 801291c:	d009      	beq.n	8012932 <PCD_EP_OutXfrComplete_int+0x8a>
 801291e:	683b      	ldr	r3, [r7, #0]
 8012920:	015a      	lsls	r2, r3, #5
 8012922:	69bb      	ldr	r3, [r7, #24]
 8012924:	4413      	add	r3, r2
 8012926:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801292a:	461a      	mov	r2, r3
 801292c:	2320      	movs	r3, #32
 801292e:	6093      	str	r3, [r2, #8]
 8012930:	e098      	b.n	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 8012932:	693b      	ldr	r3, [r7, #16]
 8012934:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8012938:	2b00      	cmp	r3, #0
 801293a:	f040 8093 	bne.w	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 801293e:	697b      	ldr	r3, [r7, #20]
 8012940:	4a4b      	ldr	r2, [pc, #300]	@ (8012a70 <PCD_EP_OutXfrComplete_int+0x1c8>)
 8012942:	4293      	cmp	r3, r2
 8012944:	d90f      	bls.n	8012966 <PCD_EP_OutXfrComplete_int+0xbe>
 8012946:	693b      	ldr	r3, [r7, #16]
 8012948:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 801294c:	2b00      	cmp	r3, #0
 801294e:	d00a      	beq.n	8012966 <PCD_EP_OutXfrComplete_int+0xbe>
 8012950:	683b      	ldr	r3, [r7, #0]
 8012952:	015a      	lsls	r2, r3, #5
 8012954:	69bb      	ldr	r3, [r7, #24]
 8012956:	4413      	add	r3, r2
 8012958:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801295c:	461a      	mov	r2, r3
 801295e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012962:	6093      	str	r3, [r2, #8]
 8012964:	e07e      	b.n	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 8012966:	683a      	ldr	r2, [r7, #0]
 8012968:	4613      	mov	r3, r2
 801296a:	00db      	lsls	r3, r3, #3
 801296c:	4413      	add	r3, r2
 801296e:	009b      	lsls	r3, r3, #2
 8012970:	f503 731e 	add.w	r3, r3, #632	@ 0x278
 8012974:	687a      	ldr	r2, [r7, #4]
 8012976:	4413      	add	r3, r2
 8012978:	3304      	adds	r3, #4
 801297a:	60fb      	str	r3, [r7, #12]
 801297c:	68fb      	ldr	r3, [r7, #12]
 801297e:	69da      	ldr	r2, [r3, #28]
 8012980:	683b      	ldr	r3, [r7, #0]
 8012982:	0159      	lsls	r1, r3, #5
 8012984:	69bb      	ldr	r3, [r7, #24]
 8012986:	440b      	add	r3, r1
 8012988:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801298c:	691b      	ldr	r3, [r3, #16]
 801298e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8012992:	1ad2      	subs	r2, r2, r3
 8012994:	68fb      	ldr	r3, [r7, #12]
 8012996:	621a      	str	r2, [r3, #32]
 8012998:	683b      	ldr	r3, [r7, #0]
 801299a:	2b00      	cmp	r3, #0
 801299c:	d114      	bne.n	80129c8 <PCD_EP_OutXfrComplete_int+0x120>
 801299e:	68fb      	ldr	r3, [r7, #12]
 80129a0:	699b      	ldr	r3, [r3, #24]
 80129a2:	2b00      	cmp	r3, #0
 80129a4:	d109      	bne.n	80129ba <PCD_EP_OutXfrComplete_int+0x112>
 80129a6:	687b      	ldr	r3, [r7, #4]
 80129a8:	6818      	ldr	r0, [r3, #0]
 80129aa:	687b      	ldr	r3, [r7, #4]
 80129ac:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 80129b0:	461a      	mov	r2, r3
 80129b2:	2101      	movs	r1, #1
 80129b4:	f005 f88a 	bl	8017acc <USB_EP0_OutStart>
 80129b8:	e006      	b.n	80129c8 <PCD_EP_OutXfrComplete_int+0x120>
 80129ba:	68fb      	ldr	r3, [r7, #12]
 80129bc:	691a      	ldr	r2, [r3, #16]
 80129be:	68fb      	ldr	r3, [r7, #12]
 80129c0:	6a1b      	ldr	r3, [r3, #32]
 80129c2:	441a      	add	r2, r3
 80129c4:	68fb      	ldr	r3, [r7, #12]
 80129c6:	611a      	str	r2, [r3, #16]
 80129c8:	683b      	ldr	r3, [r7, #0]
 80129ca:	b2db      	uxtb	r3, r3
 80129cc:	4619      	mov	r1, r3
 80129ce:	6878      	ldr	r0, [r7, #4]
 80129d0:	f00a fc18 	bl	801d204 <HAL_PCD_DataOutStageCallback>
 80129d4:	e046      	b.n	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 80129d6:	697b      	ldr	r3, [r7, #20]
 80129d8:	4a26      	ldr	r2, [pc, #152]	@ (8012a74 <PCD_EP_OutXfrComplete_int+0x1cc>)
 80129da:	4293      	cmp	r3, r2
 80129dc:	d124      	bne.n	8012a28 <PCD_EP_OutXfrComplete_int+0x180>
 80129de:	693b      	ldr	r3, [r7, #16]
 80129e0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80129e4:	2b00      	cmp	r3, #0
 80129e6:	d00a      	beq.n	80129fe <PCD_EP_OutXfrComplete_int+0x156>
 80129e8:	683b      	ldr	r3, [r7, #0]
 80129ea:	015a      	lsls	r2, r3, #5
 80129ec:	69bb      	ldr	r3, [r7, #24]
 80129ee:	4413      	add	r3, r2
 80129f0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80129f4:	461a      	mov	r2, r3
 80129f6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80129fa:	6093      	str	r3, [r2, #8]
 80129fc:	e032      	b.n	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 80129fe:	693b      	ldr	r3, [r7, #16]
 8012a00:	f003 0320 	and.w	r3, r3, #32
 8012a04:	2b00      	cmp	r3, #0
 8012a06:	d008      	beq.n	8012a1a <PCD_EP_OutXfrComplete_int+0x172>
 8012a08:	683b      	ldr	r3, [r7, #0]
 8012a0a:	015a      	lsls	r2, r3, #5
 8012a0c:	69bb      	ldr	r3, [r7, #24]
 8012a0e:	4413      	add	r3, r2
 8012a10:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012a14:	461a      	mov	r2, r3
 8012a16:	2320      	movs	r3, #32
 8012a18:	6093      	str	r3, [r2, #8]
 8012a1a:	683b      	ldr	r3, [r7, #0]
 8012a1c:	b2db      	uxtb	r3, r3
 8012a1e:	4619      	mov	r1, r3
 8012a20:	6878      	ldr	r0, [r7, #4]
 8012a22:	f00a fbef 	bl	801d204 <HAL_PCD_DataOutStageCallback>
 8012a26:	e01d      	b.n	8012a64 <PCD_EP_OutXfrComplete_int+0x1bc>
 8012a28:	683b      	ldr	r3, [r7, #0]
 8012a2a:	2b00      	cmp	r3, #0
 8012a2c:	d114      	bne.n	8012a58 <PCD_EP_OutXfrComplete_int+0x1b0>
 8012a2e:	6879      	ldr	r1, [r7, #4]
 8012a30:	683a      	ldr	r2, [r7, #0]
 8012a32:	4613      	mov	r3, r2
 8012a34:	00db      	lsls	r3, r3, #3
 8012a36:	4413      	add	r3, r2
 8012a38:	009b      	lsls	r3, r3, #2
 8012a3a:	440b      	add	r3, r1
 8012a3c:	f503 7325 	add.w	r3, r3, #660	@ 0x294
 8012a40:	681b      	ldr	r3, [r3, #0]
 8012a42:	2b00      	cmp	r3, #0
 8012a44:	d108      	bne.n	8012a58 <PCD_EP_OutXfrComplete_int+0x1b0>
 8012a46:	687b      	ldr	r3, [r7, #4]
 8012a48:	6818      	ldr	r0, [r3, #0]
 8012a4a:	687b      	ldr	r3, [r7, #4]
 8012a4c:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8012a50:	461a      	mov	r2, r3
 8012a52:	2100      	movs	r1, #0
 8012a54:	f005 f83a 	bl	8017acc <USB_EP0_OutStart>
 8012a58:	683b      	ldr	r3, [r7, #0]
 8012a5a:	b2db      	uxtb	r3, r3
 8012a5c:	4619      	mov	r1, r3
 8012a5e:	6878      	ldr	r0, [r7, #4]
 8012a60:	f00a fbd0 	bl	801d204 <HAL_PCD_DataOutStageCallback>
 8012a64:	2300      	movs	r3, #0
 8012a66:	4618      	mov	r0, r3
 8012a68:	3720      	adds	r7, #32
 8012a6a:	46bd      	mov	sp, r7
 8012a6c:	bd80      	pop	{r7, pc}
 8012a6e:	bf00      	nop
 8012a70:	4f54300a 	.word	0x4f54300a
 8012a74:	4f54310a 	.word	0x4f54310a

08012a78 <PCD_EP_OutSetupPacket_int>:
 8012a78:	b580      	push	{r7, lr}
 8012a7a:	b086      	sub	sp, #24
 8012a7c:	af00      	add	r7, sp, #0
 8012a7e:	6078      	str	r0, [r7, #4]
 8012a80:	6039      	str	r1, [r7, #0]
 8012a82:	687b      	ldr	r3, [r7, #4]
 8012a84:	681b      	ldr	r3, [r3, #0]
 8012a86:	617b      	str	r3, [r7, #20]
 8012a88:	697b      	ldr	r3, [r7, #20]
 8012a8a:	613b      	str	r3, [r7, #16]
 8012a8c:	697b      	ldr	r3, [r7, #20]
 8012a8e:	333c      	adds	r3, #60	@ 0x3c
 8012a90:	3304      	adds	r3, #4
 8012a92:	681b      	ldr	r3, [r3, #0]
 8012a94:	60fb      	str	r3, [r7, #12]
 8012a96:	683b      	ldr	r3, [r7, #0]
 8012a98:	015a      	lsls	r2, r3, #5
 8012a9a:	693b      	ldr	r3, [r7, #16]
 8012a9c:	4413      	add	r3, r2
 8012a9e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012aa2:	689b      	ldr	r3, [r3, #8]
 8012aa4:	60bb      	str	r3, [r7, #8]
 8012aa6:	68fb      	ldr	r3, [r7, #12]
 8012aa8:	4a15      	ldr	r2, [pc, #84]	@ (8012b00 <PCD_EP_OutSetupPacket_int+0x88>)
 8012aaa:	4293      	cmp	r3, r2
 8012aac:	d90e      	bls.n	8012acc <PCD_EP_OutSetupPacket_int+0x54>
 8012aae:	68bb      	ldr	r3, [r7, #8]
 8012ab0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8012ab4:	2b00      	cmp	r3, #0
 8012ab6:	d009      	beq.n	8012acc <PCD_EP_OutSetupPacket_int+0x54>
 8012ab8:	683b      	ldr	r3, [r7, #0]
 8012aba:	015a      	lsls	r2, r3, #5
 8012abc:	693b      	ldr	r3, [r7, #16]
 8012abe:	4413      	add	r3, r2
 8012ac0:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8012ac4:	461a      	mov	r2, r3
 8012ac6:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012aca:	6093      	str	r3, [r2, #8]
 8012acc:	6878      	ldr	r0, [r7, #4]
 8012ace:	f00a fb87 	bl	801d1e0 <HAL_PCD_SetupStageCallback>
 8012ad2:	68fb      	ldr	r3, [r7, #12]
 8012ad4:	4a0a      	ldr	r2, [pc, #40]	@ (8012b00 <PCD_EP_OutSetupPacket_int+0x88>)
 8012ad6:	4293      	cmp	r3, r2
 8012ad8:	d90c      	bls.n	8012af4 <PCD_EP_OutSetupPacket_int+0x7c>
 8012ada:	687b      	ldr	r3, [r7, #4]
 8012adc:	691b      	ldr	r3, [r3, #16]
 8012ade:	2b01      	cmp	r3, #1
 8012ae0:	d108      	bne.n	8012af4 <PCD_EP_OutSetupPacket_int+0x7c>
 8012ae2:	687b      	ldr	r3, [r7, #4]
 8012ae4:	6818      	ldr	r0, [r3, #0]
 8012ae6:	687b      	ldr	r3, [r7, #4]
 8012ae8:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 8012aec:	461a      	mov	r2, r3
 8012aee:	2101      	movs	r1, #1
 8012af0:	f004 ffec 	bl	8017acc <USB_EP0_OutStart>
 8012af4:	2300      	movs	r3, #0
 8012af6:	4618      	mov	r0, r3
 8012af8:	3718      	adds	r7, #24
 8012afa:	46bd      	mov	sp, r7
 8012afc:	bd80      	pop	{r7, pc}
 8012afe:	bf00      	nop
 8012b00:	4f54300a 	.word	0x4f54300a

08012b04 <HAL_PCDEx_SetTxFiFo>:
 8012b04:	b480      	push	{r7}
 8012b06:	b085      	sub	sp, #20
 8012b08:	af00      	add	r7, sp, #0
 8012b0a:	6078      	str	r0, [r7, #4]
 8012b0c:	460b      	mov	r3, r1
 8012b0e:	70fb      	strb	r3, [r7, #3]
 8012b10:	4613      	mov	r3, r2
 8012b12:	803b      	strh	r3, [r7, #0]
 8012b14:	687b      	ldr	r3, [r7, #4]
 8012b16:	681b      	ldr	r3, [r3, #0]
 8012b18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8012b1a:	60bb      	str	r3, [r7, #8]
 8012b1c:	78fb      	ldrb	r3, [r7, #3]
 8012b1e:	2b00      	cmp	r3, #0
 8012b20:	d107      	bne.n	8012b32 <HAL_PCDEx_SetTxFiFo+0x2e>
 8012b22:	883b      	ldrh	r3, [r7, #0]
 8012b24:	0419      	lsls	r1, r3, #16
 8012b26:	687b      	ldr	r3, [r7, #4]
 8012b28:	681b      	ldr	r3, [r3, #0]
 8012b2a:	68ba      	ldr	r2, [r7, #8]
 8012b2c:	430a      	orrs	r2, r1
 8012b2e:	629a      	str	r2, [r3, #40]	@ 0x28
 8012b30:	e028      	b.n	8012b84 <HAL_PCDEx_SetTxFiFo+0x80>
 8012b32:	687b      	ldr	r3, [r7, #4]
 8012b34:	681b      	ldr	r3, [r3, #0]
 8012b36:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012b38:	0c1b      	lsrs	r3, r3, #16
 8012b3a:	68ba      	ldr	r2, [r7, #8]
 8012b3c:	4413      	add	r3, r2
 8012b3e:	60bb      	str	r3, [r7, #8]
 8012b40:	2300      	movs	r3, #0
 8012b42:	73fb      	strb	r3, [r7, #15]
 8012b44:	e00d      	b.n	8012b62 <HAL_PCDEx_SetTxFiFo+0x5e>
 8012b46:	687b      	ldr	r3, [r7, #4]
 8012b48:	681a      	ldr	r2, [r3, #0]
 8012b4a:	7bfb      	ldrb	r3, [r7, #15]
 8012b4c:	3340      	adds	r3, #64	@ 0x40
 8012b4e:	009b      	lsls	r3, r3, #2
 8012b50:	4413      	add	r3, r2
 8012b52:	685b      	ldr	r3, [r3, #4]
 8012b54:	0c1b      	lsrs	r3, r3, #16
 8012b56:	68ba      	ldr	r2, [r7, #8]
 8012b58:	4413      	add	r3, r2
 8012b5a:	60bb      	str	r3, [r7, #8]
 8012b5c:	7bfb      	ldrb	r3, [r7, #15]
 8012b5e:	3301      	adds	r3, #1
 8012b60:	73fb      	strb	r3, [r7, #15]
 8012b62:	7bfa      	ldrb	r2, [r7, #15]
 8012b64:	78fb      	ldrb	r3, [r7, #3]
 8012b66:	3b01      	subs	r3, #1
 8012b68:	429a      	cmp	r2, r3
 8012b6a:	d3ec      	bcc.n	8012b46 <HAL_PCDEx_SetTxFiFo+0x42>
 8012b6c:	883b      	ldrh	r3, [r7, #0]
 8012b6e:	0418      	lsls	r0, r3, #16
 8012b70:	687b      	ldr	r3, [r7, #4]
 8012b72:	6819      	ldr	r1, [r3, #0]
 8012b74:	78fb      	ldrb	r3, [r7, #3]
 8012b76:	3b01      	subs	r3, #1
 8012b78:	68ba      	ldr	r2, [r7, #8]
 8012b7a:	4302      	orrs	r2, r0
 8012b7c:	3340      	adds	r3, #64	@ 0x40
 8012b7e:	009b      	lsls	r3, r3, #2
 8012b80:	440b      	add	r3, r1
 8012b82:	605a      	str	r2, [r3, #4]
 8012b84:	2300      	movs	r3, #0
 8012b86:	4618      	mov	r0, r3
 8012b88:	3714      	adds	r7, #20
 8012b8a:	46bd      	mov	sp, r7
 8012b8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b90:	4770      	bx	lr

08012b92 <HAL_PCDEx_SetRxFiFo>:
 8012b92:	b480      	push	{r7}
 8012b94:	b083      	sub	sp, #12
 8012b96:	af00      	add	r7, sp, #0
 8012b98:	6078      	str	r0, [r7, #4]
 8012b9a:	460b      	mov	r3, r1
 8012b9c:	807b      	strh	r3, [r7, #2]
 8012b9e:	687b      	ldr	r3, [r7, #4]
 8012ba0:	681b      	ldr	r3, [r3, #0]
 8012ba2:	887a      	ldrh	r2, [r7, #2]
 8012ba4:	625a      	str	r2, [r3, #36]	@ 0x24
 8012ba6:	2300      	movs	r3, #0
 8012ba8:	4618      	mov	r0, r3
 8012baa:	370c      	adds	r7, #12
 8012bac:	46bd      	mov	sp, r7
 8012bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012bb2:	4770      	bx	lr

08012bb4 <HAL_PCDEx_LPM_Callback>:
 8012bb4:	b480      	push	{r7}
 8012bb6:	b083      	sub	sp, #12
 8012bb8:	af00      	add	r7, sp, #0
 8012bba:	6078      	str	r0, [r7, #4]
 8012bbc:	460b      	mov	r3, r1
 8012bbe:	70fb      	strb	r3, [r7, #3]
 8012bc0:	bf00      	nop
 8012bc2:	370c      	adds	r7, #12
 8012bc4:	46bd      	mov	sp, r7
 8012bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012bca:	4770      	bx	lr

08012bcc <HAL_RCC_OscConfig>:
 8012bcc:	b580      	push	{r7, lr}
 8012bce:	b086      	sub	sp, #24
 8012bd0:	af00      	add	r7, sp, #0
 8012bd2:	6078      	str	r0, [r7, #4]
 8012bd4:	687b      	ldr	r3, [r7, #4]
 8012bd6:	2b00      	cmp	r3, #0
 8012bd8:	d101      	bne.n	8012bde <HAL_RCC_OscConfig+0x12>
 8012bda:	2301      	movs	r3, #1
 8012bdc:	e267      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012bde:	687b      	ldr	r3, [r7, #4]
 8012be0:	681b      	ldr	r3, [r3, #0]
 8012be2:	f003 0301 	and.w	r3, r3, #1
 8012be6:	2b00      	cmp	r3, #0
 8012be8:	d075      	beq.n	8012cd6 <HAL_RCC_OscConfig+0x10a>
 8012bea:	4b88      	ldr	r3, [pc, #544]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012bec:	689b      	ldr	r3, [r3, #8]
 8012bee:	f003 030c 	and.w	r3, r3, #12
 8012bf2:	2b04      	cmp	r3, #4
 8012bf4:	d00c      	beq.n	8012c10 <HAL_RCC_OscConfig+0x44>
 8012bf6:	4b85      	ldr	r3, [pc, #532]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012bf8:	689b      	ldr	r3, [r3, #8]
 8012bfa:	f003 030c 	and.w	r3, r3, #12
 8012bfe:	2b08      	cmp	r3, #8
 8012c00:	d112      	bne.n	8012c28 <HAL_RCC_OscConfig+0x5c>
 8012c02:	4b82      	ldr	r3, [pc, #520]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c04:	685b      	ldr	r3, [r3, #4]
 8012c06:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8012c0a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8012c0e:	d10b      	bne.n	8012c28 <HAL_RCC_OscConfig+0x5c>
 8012c10:	4b7e      	ldr	r3, [pc, #504]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c12:	681b      	ldr	r3, [r3, #0]
 8012c14:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8012c18:	2b00      	cmp	r3, #0
 8012c1a:	d05b      	beq.n	8012cd4 <HAL_RCC_OscConfig+0x108>
 8012c1c:	687b      	ldr	r3, [r7, #4]
 8012c1e:	685b      	ldr	r3, [r3, #4]
 8012c20:	2b00      	cmp	r3, #0
 8012c22:	d157      	bne.n	8012cd4 <HAL_RCC_OscConfig+0x108>
 8012c24:	2301      	movs	r3, #1
 8012c26:	e242      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012c28:	687b      	ldr	r3, [r7, #4]
 8012c2a:	685b      	ldr	r3, [r3, #4]
 8012c2c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8012c30:	d106      	bne.n	8012c40 <HAL_RCC_OscConfig+0x74>
 8012c32:	4b76      	ldr	r3, [pc, #472]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c34:	681b      	ldr	r3, [r3, #0]
 8012c36:	4a75      	ldr	r2, [pc, #468]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c38:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8012c3c:	6013      	str	r3, [r2, #0]
 8012c3e:	e01d      	b.n	8012c7c <HAL_RCC_OscConfig+0xb0>
 8012c40:	687b      	ldr	r3, [r7, #4]
 8012c42:	685b      	ldr	r3, [r3, #4]
 8012c44:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8012c48:	d10c      	bne.n	8012c64 <HAL_RCC_OscConfig+0x98>
 8012c4a:	4b70      	ldr	r3, [pc, #448]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c4c:	681b      	ldr	r3, [r3, #0]
 8012c4e:	4a6f      	ldr	r2, [pc, #444]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c50:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8012c54:	6013      	str	r3, [r2, #0]
 8012c56:	4b6d      	ldr	r3, [pc, #436]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c58:	681b      	ldr	r3, [r3, #0]
 8012c5a:	4a6c      	ldr	r2, [pc, #432]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c5c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8012c60:	6013      	str	r3, [r2, #0]
 8012c62:	e00b      	b.n	8012c7c <HAL_RCC_OscConfig+0xb0>
 8012c64:	4b69      	ldr	r3, [pc, #420]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c66:	681b      	ldr	r3, [r3, #0]
 8012c68:	4a68      	ldr	r2, [pc, #416]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c6a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8012c6e:	6013      	str	r3, [r2, #0]
 8012c70:	4b66      	ldr	r3, [pc, #408]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c72:	681b      	ldr	r3, [r3, #0]
 8012c74:	4a65      	ldr	r2, [pc, #404]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012c76:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8012c7a:	6013      	str	r3, [r2, #0]
 8012c7c:	687b      	ldr	r3, [r7, #4]
 8012c7e:	685b      	ldr	r3, [r3, #4]
 8012c80:	2b00      	cmp	r3, #0
 8012c82:	d013      	beq.n	8012cac <HAL_RCC_OscConfig+0xe0>
 8012c84:	f7fa ff98 	bl	800dbb8 <HAL_GetTick>
 8012c88:	6138      	str	r0, [r7, #16]
 8012c8a:	e008      	b.n	8012c9e <HAL_RCC_OscConfig+0xd2>
 8012c8c:	f7fa ff94 	bl	800dbb8 <HAL_GetTick>
 8012c90:	4602      	mov	r2, r0
 8012c92:	693b      	ldr	r3, [r7, #16]
 8012c94:	1ad3      	subs	r3, r2, r3
 8012c96:	2b64      	cmp	r3, #100	@ 0x64
 8012c98:	d901      	bls.n	8012c9e <HAL_RCC_OscConfig+0xd2>
 8012c9a:	2303      	movs	r3, #3
 8012c9c:	e207      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012c9e:	4b5b      	ldr	r3, [pc, #364]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012ca0:	681b      	ldr	r3, [r3, #0]
 8012ca2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8012ca6:	2b00      	cmp	r3, #0
 8012ca8:	d0f0      	beq.n	8012c8c <HAL_RCC_OscConfig+0xc0>
 8012caa:	e014      	b.n	8012cd6 <HAL_RCC_OscConfig+0x10a>
 8012cac:	f7fa ff84 	bl	800dbb8 <HAL_GetTick>
 8012cb0:	6138      	str	r0, [r7, #16]
 8012cb2:	e008      	b.n	8012cc6 <HAL_RCC_OscConfig+0xfa>
 8012cb4:	f7fa ff80 	bl	800dbb8 <HAL_GetTick>
 8012cb8:	4602      	mov	r2, r0
 8012cba:	693b      	ldr	r3, [r7, #16]
 8012cbc:	1ad3      	subs	r3, r2, r3
 8012cbe:	2b64      	cmp	r3, #100	@ 0x64
 8012cc0:	d901      	bls.n	8012cc6 <HAL_RCC_OscConfig+0xfa>
 8012cc2:	2303      	movs	r3, #3
 8012cc4:	e1f3      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012cc6:	4b51      	ldr	r3, [pc, #324]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012cc8:	681b      	ldr	r3, [r3, #0]
 8012cca:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8012cce:	2b00      	cmp	r3, #0
 8012cd0:	d1f0      	bne.n	8012cb4 <HAL_RCC_OscConfig+0xe8>
 8012cd2:	e000      	b.n	8012cd6 <HAL_RCC_OscConfig+0x10a>
 8012cd4:	bf00      	nop
 8012cd6:	687b      	ldr	r3, [r7, #4]
 8012cd8:	681b      	ldr	r3, [r3, #0]
 8012cda:	f003 0302 	and.w	r3, r3, #2
 8012cde:	2b00      	cmp	r3, #0
 8012ce0:	d063      	beq.n	8012daa <HAL_RCC_OscConfig+0x1de>
 8012ce2:	4b4a      	ldr	r3, [pc, #296]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012ce4:	689b      	ldr	r3, [r3, #8]
 8012ce6:	f003 030c 	and.w	r3, r3, #12
 8012cea:	2b00      	cmp	r3, #0
 8012cec:	d00b      	beq.n	8012d06 <HAL_RCC_OscConfig+0x13a>
 8012cee:	4b47      	ldr	r3, [pc, #284]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012cf0:	689b      	ldr	r3, [r3, #8]
 8012cf2:	f003 030c 	and.w	r3, r3, #12
 8012cf6:	2b08      	cmp	r3, #8
 8012cf8:	d11c      	bne.n	8012d34 <HAL_RCC_OscConfig+0x168>
 8012cfa:	4b44      	ldr	r3, [pc, #272]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012cfc:	685b      	ldr	r3, [r3, #4]
 8012cfe:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8012d02:	2b00      	cmp	r3, #0
 8012d04:	d116      	bne.n	8012d34 <HAL_RCC_OscConfig+0x168>
 8012d06:	4b41      	ldr	r3, [pc, #260]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012d08:	681b      	ldr	r3, [r3, #0]
 8012d0a:	f003 0302 	and.w	r3, r3, #2
 8012d0e:	2b00      	cmp	r3, #0
 8012d10:	d005      	beq.n	8012d1e <HAL_RCC_OscConfig+0x152>
 8012d12:	687b      	ldr	r3, [r7, #4]
 8012d14:	68db      	ldr	r3, [r3, #12]
 8012d16:	2b01      	cmp	r3, #1
 8012d18:	d001      	beq.n	8012d1e <HAL_RCC_OscConfig+0x152>
 8012d1a:	2301      	movs	r3, #1
 8012d1c:	e1c7      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012d1e:	4b3b      	ldr	r3, [pc, #236]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012d20:	681b      	ldr	r3, [r3, #0]
 8012d22:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8012d26:	687b      	ldr	r3, [r7, #4]
 8012d28:	691b      	ldr	r3, [r3, #16]
 8012d2a:	00db      	lsls	r3, r3, #3
 8012d2c:	4937      	ldr	r1, [pc, #220]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012d2e:	4313      	orrs	r3, r2
 8012d30:	600b      	str	r3, [r1, #0]
 8012d32:	e03a      	b.n	8012daa <HAL_RCC_OscConfig+0x1de>
 8012d34:	687b      	ldr	r3, [r7, #4]
 8012d36:	68db      	ldr	r3, [r3, #12]
 8012d38:	2b00      	cmp	r3, #0
 8012d3a:	d020      	beq.n	8012d7e <HAL_RCC_OscConfig+0x1b2>
 8012d3c:	4b34      	ldr	r3, [pc, #208]	@ (8012e10 <HAL_RCC_OscConfig+0x244>)
 8012d3e:	2201      	movs	r2, #1
 8012d40:	601a      	str	r2, [r3, #0]
 8012d42:	f7fa ff39 	bl	800dbb8 <HAL_GetTick>
 8012d46:	6138      	str	r0, [r7, #16]
 8012d48:	e008      	b.n	8012d5c <HAL_RCC_OscConfig+0x190>
 8012d4a:	f7fa ff35 	bl	800dbb8 <HAL_GetTick>
 8012d4e:	4602      	mov	r2, r0
 8012d50:	693b      	ldr	r3, [r7, #16]
 8012d52:	1ad3      	subs	r3, r2, r3
 8012d54:	2b02      	cmp	r3, #2
 8012d56:	d901      	bls.n	8012d5c <HAL_RCC_OscConfig+0x190>
 8012d58:	2303      	movs	r3, #3
 8012d5a:	e1a8      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012d5c:	4b2b      	ldr	r3, [pc, #172]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012d5e:	681b      	ldr	r3, [r3, #0]
 8012d60:	f003 0302 	and.w	r3, r3, #2
 8012d64:	2b00      	cmp	r3, #0
 8012d66:	d0f0      	beq.n	8012d4a <HAL_RCC_OscConfig+0x17e>
 8012d68:	4b28      	ldr	r3, [pc, #160]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012d6a:	681b      	ldr	r3, [r3, #0]
 8012d6c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8012d70:	687b      	ldr	r3, [r7, #4]
 8012d72:	691b      	ldr	r3, [r3, #16]
 8012d74:	00db      	lsls	r3, r3, #3
 8012d76:	4925      	ldr	r1, [pc, #148]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012d78:	4313      	orrs	r3, r2
 8012d7a:	600b      	str	r3, [r1, #0]
 8012d7c:	e015      	b.n	8012daa <HAL_RCC_OscConfig+0x1de>
 8012d7e:	4b24      	ldr	r3, [pc, #144]	@ (8012e10 <HAL_RCC_OscConfig+0x244>)
 8012d80:	2200      	movs	r2, #0
 8012d82:	601a      	str	r2, [r3, #0]
 8012d84:	f7fa ff18 	bl	800dbb8 <HAL_GetTick>
 8012d88:	6138      	str	r0, [r7, #16]
 8012d8a:	e008      	b.n	8012d9e <HAL_RCC_OscConfig+0x1d2>
 8012d8c:	f7fa ff14 	bl	800dbb8 <HAL_GetTick>
 8012d90:	4602      	mov	r2, r0
 8012d92:	693b      	ldr	r3, [r7, #16]
 8012d94:	1ad3      	subs	r3, r2, r3
 8012d96:	2b02      	cmp	r3, #2
 8012d98:	d901      	bls.n	8012d9e <HAL_RCC_OscConfig+0x1d2>
 8012d9a:	2303      	movs	r3, #3
 8012d9c:	e187      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012d9e:	4b1b      	ldr	r3, [pc, #108]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012da0:	681b      	ldr	r3, [r3, #0]
 8012da2:	f003 0302 	and.w	r3, r3, #2
 8012da6:	2b00      	cmp	r3, #0
 8012da8:	d1f0      	bne.n	8012d8c <HAL_RCC_OscConfig+0x1c0>
 8012daa:	687b      	ldr	r3, [r7, #4]
 8012dac:	681b      	ldr	r3, [r3, #0]
 8012dae:	f003 0308 	and.w	r3, r3, #8
 8012db2:	2b00      	cmp	r3, #0
 8012db4:	d036      	beq.n	8012e24 <HAL_RCC_OscConfig+0x258>
 8012db6:	687b      	ldr	r3, [r7, #4]
 8012db8:	695b      	ldr	r3, [r3, #20]
 8012dba:	2b00      	cmp	r3, #0
 8012dbc:	d016      	beq.n	8012dec <HAL_RCC_OscConfig+0x220>
 8012dbe:	4b15      	ldr	r3, [pc, #84]	@ (8012e14 <HAL_RCC_OscConfig+0x248>)
 8012dc0:	2201      	movs	r2, #1
 8012dc2:	601a      	str	r2, [r3, #0]
 8012dc4:	f7fa fef8 	bl	800dbb8 <HAL_GetTick>
 8012dc8:	6138      	str	r0, [r7, #16]
 8012dca:	e008      	b.n	8012dde <HAL_RCC_OscConfig+0x212>
 8012dcc:	f7fa fef4 	bl	800dbb8 <HAL_GetTick>
 8012dd0:	4602      	mov	r2, r0
 8012dd2:	693b      	ldr	r3, [r7, #16]
 8012dd4:	1ad3      	subs	r3, r2, r3
 8012dd6:	2b02      	cmp	r3, #2
 8012dd8:	d901      	bls.n	8012dde <HAL_RCC_OscConfig+0x212>
 8012dda:	2303      	movs	r3, #3
 8012ddc:	e167      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012dde:	4b0b      	ldr	r3, [pc, #44]	@ (8012e0c <HAL_RCC_OscConfig+0x240>)
 8012de0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8012de2:	f003 0302 	and.w	r3, r3, #2
 8012de6:	2b00      	cmp	r3, #0
 8012de8:	d0f0      	beq.n	8012dcc <HAL_RCC_OscConfig+0x200>
 8012dea:	e01b      	b.n	8012e24 <HAL_RCC_OscConfig+0x258>
 8012dec:	4b09      	ldr	r3, [pc, #36]	@ (8012e14 <HAL_RCC_OscConfig+0x248>)
 8012dee:	2200      	movs	r2, #0
 8012df0:	601a      	str	r2, [r3, #0]
 8012df2:	f7fa fee1 	bl	800dbb8 <HAL_GetTick>
 8012df6:	6138      	str	r0, [r7, #16]
 8012df8:	e00e      	b.n	8012e18 <HAL_RCC_OscConfig+0x24c>
 8012dfa:	f7fa fedd 	bl	800dbb8 <HAL_GetTick>
 8012dfe:	4602      	mov	r2, r0
 8012e00:	693b      	ldr	r3, [r7, #16]
 8012e02:	1ad3      	subs	r3, r2, r3
 8012e04:	2b02      	cmp	r3, #2
 8012e06:	d907      	bls.n	8012e18 <HAL_RCC_OscConfig+0x24c>
 8012e08:	2303      	movs	r3, #3
 8012e0a:	e150      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012e0c:	40023800 	.word	0x40023800
 8012e10:	42470000 	.word	0x42470000
 8012e14:	42470e80 	.word	0x42470e80
 8012e18:	4b88      	ldr	r3, [pc, #544]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012e1a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8012e1c:	f003 0302 	and.w	r3, r3, #2
 8012e20:	2b00      	cmp	r3, #0
 8012e22:	d1ea      	bne.n	8012dfa <HAL_RCC_OscConfig+0x22e>
 8012e24:	687b      	ldr	r3, [r7, #4]
 8012e26:	681b      	ldr	r3, [r3, #0]
 8012e28:	f003 0304 	and.w	r3, r3, #4
 8012e2c:	2b00      	cmp	r3, #0
 8012e2e:	f000 8097 	beq.w	8012f60 <HAL_RCC_OscConfig+0x394>
 8012e32:	2300      	movs	r3, #0
 8012e34:	75fb      	strb	r3, [r7, #23]
 8012e36:	4b81      	ldr	r3, [pc, #516]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012e38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012e3a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8012e3e:	2b00      	cmp	r3, #0
 8012e40:	d10f      	bne.n	8012e62 <HAL_RCC_OscConfig+0x296>
 8012e42:	2300      	movs	r3, #0
 8012e44:	60bb      	str	r3, [r7, #8]
 8012e46:	4b7d      	ldr	r3, [pc, #500]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012e48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012e4a:	4a7c      	ldr	r2, [pc, #496]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012e4c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8012e50:	6413      	str	r3, [r2, #64]	@ 0x40
 8012e52:	4b7a      	ldr	r3, [pc, #488]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012e54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012e56:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8012e5a:	60bb      	str	r3, [r7, #8]
 8012e5c:	68bb      	ldr	r3, [r7, #8]
 8012e5e:	2301      	movs	r3, #1
 8012e60:	75fb      	strb	r3, [r7, #23]
 8012e62:	4b77      	ldr	r3, [pc, #476]	@ (8013040 <HAL_RCC_OscConfig+0x474>)
 8012e64:	681b      	ldr	r3, [r3, #0]
 8012e66:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012e6a:	2b00      	cmp	r3, #0
 8012e6c:	d118      	bne.n	8012ea0 <HAL_RCC_OscConfig+0x2d4>
 8012e6e:	4b74      	ldr	r3, [pc, #464]	@ (8013040 <HAL_RCC_OscConfig+0x474>)
 8012e70:	681b      	ldr	r3, [r3, #0]
 8012e72:	4a73      	ldr	r2, [pc, #460]	@ (8013040 <HAL_RCC_OscConfig+0x474>)
 8012e74:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8012e78:	6013      	str	r3, [r2, #0]
 8012e7a:	f7fa fe9d 	bl	800dbb8 <HAL_GetTick>
 8012e7e:	6138      	str	r0, [r7, #16]
 8012e80:	e008      	b.n	8012e94 <HAL_RCC_OscConfig+0x2c8>
 8012e82:	f7fa fe99 	bl	800dbb8 <HAL_GetTick>
 8012e86:	4602      	mov	r2, r0
 8012e88:	693b      	ldr	r3, [r7, #16]
 8012e8a:	1ad3      	subs	r3, r2, r3
 8012e8c:	2b02      	cmp	r3, #2
 8012e8e:	d901      	bls.n	8012e94 <HAL_RCC_OscConfig+0x2c8>
 8012e90:	2303      	movs	r3, #3
 8012e92:	e10c      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012e94:	4b6a      	ldr	r3, [pc, #424]	@ (8013040 <HAL_RCC_OscConfig+0x474>)
 8012e96:	681b      	ldr	r3, [r3, #0]
 8012e98:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012e9c:	2b00      	cmp	r3, #0
 8012e9e:	d0f0      	beq.n	8012e82 <HAL_RCC_OscConfig+0x2b6>
 8012ea0:	687b      	ldr	r3, [r7, #4]
 8012ea2:	689b      	ldr	r3, [r3, #8]
 8012ea4:	2b01      	cmp	r3, #1
 8012ea6:	d106      	bne.n	8012eb6 <HAL_RCC_OscConfig+0x2ea>
 8012ea8:	4b64      	ldr	r3, [pc, #400]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012eaa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012eac:	4a63      	ldr	r2, [pc, #396]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012eae:	f043 0301 	orr.w	r3, r3, #1
 8012eb2:	6713      	str	r3, [r2, #112]	@ 0x70
 8012eb4:	e01c      	b.n	8012ef0 <HAL_RCC_OscConfig+0x324>
 8012eb6:	687b      	ldr	r3, [r7, #4]
 8012eb8:	689b      	ldr	r3, [r3, #8]
 8012eba:	2b05      	cmp	r3, #5
 8012ebc:	d10c      	bne.n	8012ed8 <HAL_RCC_OscConfig+0x30c>
 8012ebe:	4b5f      	ldr	r3, [pc, #380]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ec0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012ec2:	4a5e      	ldr	r2, [pc, #376]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ec4:	f043 0304 	orr.w	r3, r3, #4
 8012ec8:	6713      	str	r3, [r2, #112]	@ 0x70
 8012eca:	4b5c      	ldr	r3, [pc, #368]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ecc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012ece:	4a5b      	ldr	r2, [pc, #364]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ed0:	f043 0301 	orr.w	r3, r3, #1
 8012ed4:	6713      	str	r3, [r2, #112]	@ 0x70
 8012ed6:	e00b      	b.n	8012ef0 <HAL_RCC_OscConfig+0x324>
 8012ed8:	4b58      	ldr	r3, [pc, #352]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012eda:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012edc:	4a57      	ldr	r2, [pc, #348]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ede:	f023 0301 	bic.w	r3, r3, #1
 8012ee2:	6713      	str	r3, [r2, #112]	@ 0x70
 8012ee4:	4b55      	ldr	r3, [pc, #340]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ee6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012ee8:	4a54      	ldr	r2, [pc, #336]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012eea:	f023 0304 	bic.w	r3, r3, #4
 8012eee:	6713      	str	r3, [r2, #112]	@ 0x70
 8012ef0:	687b      	ldr	r3, [r7, #4]
 8012ef2:	689b      	ldr	r3, [r3, #8]
 8012ef4:	2b00      	cmp	r3, #0
 8012ef6:	d015      	beq.n	8012f24 <HAL_RCC_OscConfig+0x358>
 8012ef8:	f7fa fe5e 	bl	800dbb8 <HAL_GetTick>
 8012efc:	6138      	str	r0, [r7, #16]
 8012efe:	e00a      	b.n	8012f16 <HAL_RCC_OscConfig+0x34a>
 8012f00:	f7fa fe5a 	bl	800dbb8 <HAL_GetTick>
 8012f04:	4602      	mov	r2, r0
 8012f06:	693b      	ldr	r3, [r7, #16]
 8012f08:	1ad3      	subs	r3, r2, r3
 8012f0a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8012f0e:	4293      	cmp	r3, r2
 8012f10:	d901      	bls.n	8012f16 <HAL_RCC_OscConfig+0x34a>
 8012f12:	2303      	movs	r3, #3
 8012f14:	e0cb      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012f16:	4b49      	ldr	r3, [pc, #292]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012f18:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012f1a:	f003 0302 	and.w	r3, r3, #2
 8012f1e:	2b00      	cmp	r3, #0
 8012f20:	d0ee      	beq.n	8012f00 <HAL_RCC_OscConfig+0x334>
 8012f22:	e014      	b.n	8012f4e <HAL_RCC_OscConfig+0x382>
 8012f24:	f7fa fe48 	bl	800dbb8 <HAL_GetTick>
 8012f28:	6138      	str	r0, [r7, #16]
 8012f2a:	e00a      	b.n	8012f42 <HAL_RCC_OscConfig+0x376>
 8012f2c:	f7fa fe44 	bl	800dbb8 <HAL_GetTick>
 8012f30:	4602      	mov	r2, r0
 8012f32:	693b      	ldr	r3, [r7, #16]
 8012f34:	1ad3      	subs	r3, r2, r3
 8012f36:	f241 3288 	movw	r2, #5000	@ 0x1388
 8012f3a:	4293      	cmp	r3, r2
 8012f3c:	d901      	bls.n	8012f42 <HAL_RCC_OscConfig+0x376>
 8012f3e:	2303      	movs	r3, #3
 8012f40:	e0b5      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012f42:	4b3e      	ldr	r3, [pc, #248]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012f44:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8012f46:	f003 0302 	and.w	r3, r3, #2
 8012f4a:	2b00      	cmp	r3, #0
 8012f4c:	d1ee      	bne.n	8012f2c <HAL_RCC_OscConfig+0x360>
 8012f4e:	7dfb      	ldrb	r3, [r7, #23]
 8012f50:	2b01      	cmp	r3, #1
 8012f52:	d105      	bne.n	8012f60 <HAL_RCC_OscConfig+0x394>
 8012f54:	4b39      	ldr	r3, [pc, #228]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012f56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012f58:	4a38      	ldr	r2, [pc, #224]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012f5a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8012f5e:	6413      	str	r3, [r2, #64]	@ 0x40
 8012f60:	687b      	ldr	r3, [r7, #4]
 8012f62:	699b      	ldr	r3, [r3, #24]
 8012f64:	2b00      	cmp	r3, #0
 8012f66:	f000 80a1 	beq.w	80130ac <HAL_RCC_OscConfig+0x4e0>
 8012f6a:	4b34      	ldr	r3, [pc, #208]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012f6c:	689b      	ldr	r3, [r3, #8]
 8012f6e:	f003 030c 	and.w	r3, r3, #12
 8012f72:	2b08      	cmp	r3, #8
 8012f74:	d05c      	beq.n	8013030 <HAL_RCC_OscConfig+0x464>
 8012f76:	687b      	ldr	r3, [r7, #4]
 8012f78:	699b      	ldr	r3, [r3, #24]
 8012f7a:	2b02      	cmp	r3, #2
 8012f7c:	d141      	bne.n	8013002 <HAL_RCC_OscConfig+0x436>
 8012f7e:	4b31      	ldr	r3, [pc, #196]	@ (8013044 <HAL_RCC_OscConfig+0x478>)
 8012f80:	2200      	movs	r2, #0
 8012f82:	601a      	str	r2, [r3, #0]
 8012f84:	f7fa fe18 	bl	800dbb8 <HAL_GetTick>
 8012f88:	6138      	str	r0, [r7, #16]
 8012f8a:	e008      	b.n	8012f9e <HAL_RCC_OscConfig+0x3d2>
 8012f8c:	f7fa fe14 	bl	800dbb8 <HAL_GetTick>
 8012f90:	4602      	mov	r2, r0
 8012f92:	693b      	ldr	r3, [r7, #16]
 8012f94:	1ad3      	subs	r3, r2, r3
 8012f96:	2b02      	cmp	r3, #2
 8012f98:	d901      	bls.n	8012f9e <HAL_RCC_OscConfig+0x3d2>
 8012f9a:	2303      	movs	r3, #3
 8012f9c:	e087      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012f9e:	4b27      	ldr	r3, [pc, #156]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012fa0:	681b      	ldr	r3, [r3, #0]
 8012fa2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8012fa6:	2b00      	cmp	r3, #0
 8012fa8:	d1f0      	bne.n	8012f8c <HAL_RCC_OscConfig+0x3c0>
 8012faa:	687b      	ldr	r3, [r7, #4]
 8012fac:	69da      	ldr	r2, [r3, #28]
 8012fae:	687b      	ldr	r3, [r7, #4]
 8012fb0:	6a1b      	ldr	r3, [r3, #32]
 8012fb2:	431a      	orrs	r2, r3
 8012fb4:	687b      	ldr	r3, [r7, #4]
 8012fb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8012fb8:	019b      	lsls	r3, r3, #6
 8012fba:	431a      	orrs	r2, r3
 8012fbc:	687b      	ldr	r3, [r7, #4]
 8012fbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012fc0:	085b      	lsrs	r3, r3, #1
 8012fc2:	3b01      	subs	r3, #1
 8012fc4:	041b      	lsls	r3, r3, #16
 8012fc6:	431a      	orrs	r2, r3
 8012fc8:	687b      	ldr	r3, [r7, #4]
 8012fca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012fcc:	061b      	lsls	r3, r3, #24
 8012fce:	491b      	ldr	r1, [pc, #108]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012fd0:	4313      	orrs	r3, r2
 8012fd2:	604b      	str	r3, [r1, #4]
 8012fd4:	4b1b      	ldr	r3, [pc, #108]	@ (8013044 <HAL_RCC_OscConfig+0x478>)
 8012fd6:	2201      	movs	r2, #1
 8012fd8:	601a      	str	r2, [r3, #0]
 8012fda:	f7fa fded 	bl	800dbb8 <HAL_GetTick>
 8012fde:	6138      	str	r0, [r7, #16]
 8012fe0:	e008      	b.n	8012ff4 <HAL_RCC_OscConfig+0x428>
 8012fe2:	f7fa fde9 	bl	800dbb8 <HAL_GetTick>
 8012fe6:	4602      	mov	r2, r0
 8012fe8:	693b      	ldr	r3, [r7, #16]
 8012fea:	1ad3      	subs	r3, r2, r3
 8012fec:	2b02      	cmp	r3, #2
 8012fee:	d901      	bls.n	8012ff4 <HAL_RCC_OscConfig+0x428>
 8012ff0:	2303      	movs	r3, #3
 8012ff2:	e05c      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8012ff4:	4b11      	ldr	r3, [pc, #68]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8012ff6:	681b      	ldr	r3, [r3, #0]
 8012ff8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8012ffc:	2b00      	cmp	r3, #0
 8012ffe:	d0f0      	beq.n	8012fe2 <HAL_RCC_OscConfig+0x416>
 8013000:	e054      	b.n	80130ac <HAL_RCC_OscConfig+0x4e0>
 8013002:	4b10      	ldr	r3, [pc, #64]	@ (8013044 <HAL_RCC_OscConfig+0x478>)
 8013004:	2200      	movs	r2, #0
 8013006:	601a      	str	r2, [r3, #0]
 8013008:	f7fa fdd6 	bl	800dbb8 <HAL_GetTick>
 801300c:	6138      	str	r0, [r7, #16]
 801300e:	e008      	b.n	8013022 <HAL_RCC_OscConfig+0x456>
 8013010:	f7fa fdd2 	bl	800dbb8 <HAL_GetTick>
 8013014:	4602      	mov	r2, r0
 8013016:	693b      	ldr	r3, [r7, #16]
 8013018:	1ad3      	subs	r3, r2, r3
 801301a:	2b02      	cmp	r3, #2
 801301c:	d901      	bls.n	8013022 <HAL_RCC_OscConfig+0x456>
 801301e:	2303      	movs	r3, #3
 8013020:	e045      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 8013022:	4b06      	ldr	r3, [pc, #24]	@ (801303c <HAL_RCC_OscConfig+0x470>)
 8013024:	681b      	ldr	r3, [r3, #0]
 8013026:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 801302a:	2b00      	cmp	r3, #0
 801302c:	d1f0      	bne.n	8013010 <HAL_RCC_OscConfig+0x444>
 801302e:	e03d      	b.n	80130ac <HAL_RCC_OscConfig+0x4e0>
 8013030:	687b      	ldr	r3, [r7, #4]
 8013032:	699b      	ldr	r3, [r3, #24]
 8013034:	2b01      	cmp	r3, #1
 8013036:	d107      	bne.n	8013048 <HAL_RCC_OscConfig+0x47c>
 8013038:	2301      	movs	r3, #1
 801303a:	e038      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 801303c:	40023800 	.word	0x40023800
 8013040:	40007000 	.word	0x40007000
 8013044:	42470060 	.word	0x42470060
 8013048:	4b1b      	ldr	r3, [pc, #108]	@ (80130b8 <HAL_RCC_OscConfig+0x4ec>)
 801304a:	685b      	ldr	r3, [r3, #4]
 801304c:	60fb      	str	r3, [r7, #12]
 801304e:	687b      	ldr	r3, [r7, #4]
 8013050:	699b      	ldr	r3, [r3, #24]
 8013052:	2b01      	cmp	r3, #1
 8013054:	d028      	beq.n	80130a8 <HAL_RCC_OscConfig+0x4dc>
 8013056:	68fb      	ldr	r3, [r7, #12]
 8013058:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 801305c:	687b      	ldr	r3, [r7, #4]
 801305e:	69db      	ldr	r3, [r3, #28]
 8013060:	429a      	cmp	r2, r3
 8013062:	d121      	bne.n	80130a8 <HAL_RCC_OscConfig+0x4dc>
 8013064:	68fb      	ldr	r3, [r7, #12]
 8013066:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 801306a:	687b      	ldr	r3, [r7, #4]
 801306c:	6a1b      	ldr	r3, [r3, #32]
 801306e:	429a      	cmp	r2, r3
 8013070:	d11a      	bne.n	80130a8 <HAL_RCC_OscConfig+0x4dc>
 8013072:	68fa      	ldr	r2, [r7, #12]
 8013074:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8013078:	4013      	ands	r3, r2
 801307a:	687a      	ldr	r2, [r7, #4]
 801307c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 801307e:	0192      	lsls	r2, r2, #6
 8013080:	4293      	cmp	r3, r2
 8013082:	d111      	bne.n	80130a8 <HAL_RCC_OscConfig+0x4dc>
 8013084:	68fb      	ldr	r3, [r7, #12]
 8013086:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 801308a:	687b      	ldr	r3, [r7, #4]
 801308c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801308e:	085b      	lsrs	r3, r3, #1
 8013090:	3b01      	subs	r3, #1
 8013092:	041b      	lsls	r3, r3, #16
 8013094:	429a      	cmp	r2, r3
 8013096:	d107      	bne.n	80130a8 <HAL_RCC_OscConfig+0x4dc>
 8013098:	68fb      	ldr	r3, [r7, #12]
 801309a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 801309e:	687b      	ldr	r3, [r7, #4]
 80130a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80130a2:	061b      	lsls	r3, r3, #24
 80130a4:	429a      	cmp	r2, r3
 80130a6:	d001      	beq.n	80130ac <HAL_RCC_OscConfig+0x4e0>
 80130a8:	2301      	movs	r3, #1
 80130aa:	e000      	b.n	80130ae <HAL_RCC_OscConfig+0x4e2>
 80130ac:	2300      	movs	r3, #0
 80130ae:	4618      	mov	r0, r3
 80130b0:	3718      	adds	r7, #24
 80130b2:	46bd      	mov	sp, r7
 80130b4:	bd80      	pop	{r7, pc}
 80130b6:	bf00      	nop
 80130b8:	40023800 	.word	0x40023800

080130bc <HAL_RCC_ClockConfig>:
 80130bc:	b580      	push	{r7, lr}
 80130be:	b084      	sub	sp, #16
 80130c0:	af00      	add	r7, sp, #0
 80130c2:	6078      	str	r0, [r7, #4]
 80130c4:	6039      	str	r1, [r7, #0]
 80130c6:	687b      	ldr	r3, [r7, #4]
 80130c8:	2b00      	cmp	r3, #0
 80130ca:	d101      	bne.n	80130d0 <HAL_RCC_ClockConfig+0x14>
 80130cc:	2301      	movs	r3, #1
 80130ce:	e0cc      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 80130d0:	4b68      	ldr	r3, [pc, #416]	@ (8013274 <HAL_RCC_ClockConfig+0x1b8>)
 80130d2:	681b      	ldr	r3, [r3, #0]
 80130d4:	f003 0307 	and.w	r3, r3, #7
 80130d8:	683a      	ldr	r2, [r7, #0]
 80130da:	429a      	cmp	r2, r3
 80130dc:	d90c      	bls.n	80130f8 <HAL_RCC_ClockConfig+0x3c>
 80130de:	4b65      	ldr	r3, [pc, #404]	@ (8013274 <HAL_RCC_ClockConfig+0x1b8>)
 80130e0:	683a      	ldr	r2, [r7, #0]
 80130e2:	b2d2      	uxtb	r2, r2
 80130e4:	701a      	strb	r2, [r3, #0]
 80130e6:	4b63      	ldr	r3, [pc, #396]	@ (8013274 <HAL_RCC_ClockConfig+0x1b8>)
 80130e8:	681b      	ldr	r3, [r3, #0]
 80130ea:	f003 0307 	and.w	r3, r3, #7
 80130ee:	683a      	ldr	r2, [r7, #0]
 80130f0:	429a      	cmp	r2, r3
 80130f2:	d001      	beq.n	80130f8 <HAL_RCC_ClockConfig+0x3c>
 80130f4:	2301      	movs	r3, #1
 80130f6:	e0b8      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 80130f8:	687b      	ldr	r3, [r7, #4]
 80130fa:	681b      	ldr	r3, [r3, #0]
 80130fc:	f003 0302 	and.w	r3, r3, #2
 8013100:	2b00      	cmp	r3, #0
 8013102:	d020      	beq.n	8013146 <HAL_RCC_ClockConfig+0x8a>
 8013104:	687b      	ldr	r3, [r7, #4]
 8013106:	681b      	ldr	r3, [r3, #0]
 8013108:	f003 0304 	and.w	r3, r3, #4
 801310c:	2b00      	cmp	r3, #0
 801310e:	d005      	beq.n	801311c <HAL_RCC_ClockConfig+0x60>
 8013110:	4b59      	ldr	r3, [pc, #356]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 8013112:	689b      	ldr	r3, [r3, #8]
 8013114:	4a58      	ldr	r2, [pc, #352]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 8013116:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 801311a:	6093      	str	r3, [r2, #8]
 801311c:	687b      	ldr	r3, [r7, #4]
 801311e:	681b      	ldr	r3, [r3, #0]
 8013120:	f003 0308 	and.w	r3, r3, #8
 8013124:	2b00      	cmp	r3, #0
 8013126:	d005      	beq.n	8013134 <HAL_RCC_ClockConfig+0x78>
 8013128:	4b53      	ldr	r3, [pc, #332]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801312a:	689b      	ldr	r3, [r3, #8]
 801312c:	4a52      	ldr	r2, [pc, #328]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801312e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8013132:	6093      	str	r3, [r2, #8]
 8013134:	4b50      	ldr	r3, [pc, #320]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 8013136:	689b      	ldr	r3, [r3, #8]
 8013138:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 801313c:	687b      	ldr	r3, [r7, #4]
 801313e:	689b      	ldr	r3, [r3, #8]
 8013140:	494d      	ldr	r1, [pc, #308]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 8013142:	4313      	orrs	r3, r2
 8013144:	608b      	str	r3, [r1, #8]
 8013146:	687b      	ldr	r3, [r7, #4]
 8013148:	681b      	ldr	r3, [r3, #0]
 801314a:	f003 0301 	and.w	r3, r3, #1
 801314e:	2b00      	cmp	r3, #0
 8013150:	d044      	beq.n	80131dc <HAL_RCC_ClockConfig+0x120>
 8013152:	687b      	ldr	r3, [r7, #4]
 8013154:	685b      	ldr	r3, [r3, #4]
 8013156:	2b01      	cmp	r3, #1
 8013158:	d107      	bne.n	801316a <HAL_RCC_ClockConfig+0xae>
 801315a:	4b47      	ldr	r3, [pc, #284]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801315c:	681b      	ldr	r3, [r3, #0]
 801315e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8013162:	2b00      	cmp	r3, #0
 8013164:	d119      	bne.n	801319a <HAL_RCC_ClockConfig+0xde>
 8013166:	2301      	movs	r3, #1
 8013168:	e07f      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 801316a:	687b      	ldr	r3, [r7, #4]
 801316c:	685b      	ldr	r3, [r3, #4]
 801316e:	2b02      	cmp	r3, #2
 8013170:	d003      	beq.n	801317a <HAL_RCC_ClockConfig+0xbe>
 8013172:	687b      	ldr	r3, [r7, #4]
 8013174:	685b      	ldr	r3, [r3, #4]
 8013176:	2b03      	cmp	r3, #3
 8013178:	d107      	bne.n	801318a <HAL_RCC_ClockConfig+0xce>
 801317a:	4b3f      	ldr	r3, [pc, #252]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801317c:	681b      	ldr	r3, [r3, #0]
 801317e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8013182:	2b00      	cmp	r3, #0
 8013184:	d109      	bne.n	801319a <HAL_RCC_ClockConfig+0xde>
 8013186:	2301      	movs	r3, #1
 8013188:	e06f      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 801318a:	4b3b      	ldr	r3, [pc, #236]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801318c:	681b      	ldr	r3, [r3, #0]
 801318e:	f003 0302 	and.w	r3, r3, #2
 8013192:	2b00      	cmp	r3, #0
 8013194:	d101      	bne.n	801319a <HAL_RCC_ClockConfig+0xde>
 8013196:	2301      	movs	r3, #1
 8013198:	e067      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 801319a:	4b37      	ldr	r3, [pc, #220]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801319c:	689b      	ldr	r3, [r3, #8]
 801319e:	f023 0203 	bic.w	r2, r3, #3
 80131a2:	687b      	ldr	r3, [r7, #4]
 80131a4:	685b      	ldr	r3, [r3, #4]
 80131a6:	4934      	ldr	r1, [pc, #208]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 80131a8:	4313      	orrs	r3, r2
 80131aa:	608b      	str	r3, [r1, #8]
 80131ac:	f7fa fd04 	bl	800dbb8 <HAL_GetTick>
 80131b0:	60f8      	str	r0, [r7, #12]
 80131b2:	e00a      	b.n	80131ca <HAL_RCC_ClockConfig+0x10e>
 80131b4:	f7fa fd00 	bl	800dbb8 <HAL_GetTick>
 80131b8:	4602      	mov	r2, r0
 80131ba:	68fb      	ldr	r3, [r7, #12]
 80131bc:	1ad3      	subs	r3, r2, r3
 80131be:	f241 3288 	movw	r2, #5000	@ 0x1388
 80131c2:	4293      	cmp	r3, r2
 80131c4:	d901      	bls.n	80131ca <HAL_RCC_ClockConfig+0x10e>
 80131c6:	2303      	movs	r3, #3
 80131c8:	e04f      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 80131ca:	4b2b      	ldr	r3, [pc, #172]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 80131cc:	689b      	ldr	r3, [r3, #8]
 80131ce:	f003 020c 	and.w	r2, r3, #12
 80131d2:	687b      	ldr	r3, [r7, #4]
 80131d4:	685b      	ldr	r3, [r3, #4]
 80131d6:	009b      	lsls	r3, r3, #2
 80131d8:	429a      	cmp	r2, r3
 80131da:	d1eb      	bne.n	80131b4 <HAL_RCC_ClockConfig+0xf8>
 80131dc:	4b25      	ldr	r3, [pc, #148]	@ (8013274 <HAL_RCC_ClockConfig+0x1b8>)
 80131de:	681b      	ldr	r3, [r3, #0]
 80131e0:	f003 0307 	and.w	r3, r3, #7
 80131e4:	683a      	ldr	r2, [r7, #0]
 80131e6:	429a      	cmp	r2, r3
 80131e8:	d20c      	bcs.n	8013204 <HAL_RCC_ClockConfig+0x148>
 80131ea:	4b22      	ldr	r3, [pc, #136]	@ (8013274 <HAL_RCC_ClockConfig+0x1b8>)
 80131ec:	683a      	ldr	r2, [r7, #0]
 80131ee:	b2d2      	uxtb	r2, r2
 80131f0:	701a      	strb	r2, [r3, #0]
 80131f2:	4b20      	ldr	r3, [pc, #128]	@ (8013274 <HAL_RCC_ClockConfig+0x1b8>)
 80131f4:	681b      	ldr	r3, [r3, #0]
 80131f6:	f003 0307 	and.w	r3, r3, #7
 80131fa:	683a      	ldr	r2, [r7, #0]
 80131fc:	429a      	cmp	r2, r3
 80131fe:	d001      	beq.n	8013204 <HAL_RCC_ClockConfig+0x148>
 8013200:	2301      	movs	r3, #1
 8013202:	e032      	b.n	801326a <HAL_RCC_ClockConfig+0x1ae>
 8013204:	687b      	ldr	r3, [r7, #4]
 8013206:	681b      	ldr	r3, [r3, #0]
 8013208:	f003 0304 	and.w	r3, r3, #4
 801320c:	2b00      	cmp	r3, #0
 801320e:	d008      	beq.n	8013222 <HAL_RCC_ClockConfig+0x166>
 8013210:	4b19      	ldr	r3, [pc, #100]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 8013212:	689b      	ldr	r3, [r3, #8]
 8013214:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8013218:	687b      	ldr	r3, [r7, #4]
 801321a:	68db      	ldr	r3, [r3, #12]
 801321c:	4916      	ldr	r1, [pc, #88]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801321e:	4313      	orrs	r3, r2
 8013220:	608b      	str	r3, [r1, #8]
 8013222:	687b      	ldr	r3, [r7, #4]
 8013224:	681b      	ldr	r3, [r3, #0]
 8013226:	f003 0308 	and.w	r3, r3, #8
 801322a:	2b00      	cmp	r3, #0
 801322c:	d009      	beq.n	8013242 <HAL_RCC_ClockConfig+0x186>
 801322e:	4b12      	ldr	r3, [pc, #72]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 8013230:	689b      	ldr	r3, [r3, #8]
 8013232:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8013236:	687b      	ldr	r3, [r7, #4]
 8013238:	691b      	ldr	r3, [r3, #16]
 801323a:	00db      	lsls	r3, r3, #3
 801323c:	490e      	ldr	r1, [pc, #56]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801323e:	4313      	orrs	r3, r2
 8013240:	608b      	str	r3, [r1, #8]
 8013242:	f000 f821 	bl	8013288 <HAL_RCC_GetSysClockFreq>
 8013246:	4602      	mov	r2, r0
 8013248:	4b0b      	ldr	r3, [pc, #44]	@ (8013278 <HAL_RCC_ClockConfig+0x1bc>)
 801324a:	689b      	ldr	r3, [r3, #8]
 801324c:	091b      	lsrs	r3, r3, #4
 801324e:	f003 030f 	and.w	r3, r3, #15
 8013252:	490a      	ldr	r1, [pc, #40]	@ (801327c <HAL_RCC_ClockConfig+0x1c0>)
 8013254:	5ccb      	ldrb	r3, [r1, r3]
 8013256:	fa22 f303 	lsr.w	r3, r2, r3
 801325a:	4a09      	ldr	r2, [pc, #36]	@ (8013280 <HAL_RCC_ClockConfig+0x1c4>)
 801325c:	6013      	str	r3, [r2, #0]
 801325e:	4b09      	ldr	r3, [pc, #36]	@ (8013284 <HAL_RCC_ClockConfig+0x1c8>)
 8013260:	681b      	ldr	r3, [r3, #0]
 8013262:	4618      	mov	r0, r3
 8013264:	f7f0 fc32 	bl	8003acc <HAL_InitTick>
 8013268:	2300      	movs	r3, #0
 801326a:	4618      	mov	r0, r3
 801326c:	3710      	adds	r7, #16
 801326e:	46bd      	mov	sp, r7
 8013270:	bd80      	pop	{r7, pc}
 8013272:	bf00      	nop
 8013274:	40023c00 	.word	0x40023c00
 8013278:	40023800 	.word	0x40023800
 801327c:	08024ae8 	.word	0x08024ae8
 8013280:	20000004 	.word	0x20000004
 8013284:	20000048 	.word	0x20000048

08013288 <HAL_RCC_GetSysClockFreq>:
 8013288:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 801328c:	b090      	sub	sp, #64	@ 0x40
 801328e:	af00      	add	r7, sp, #0
 8013290:	2300      	movs	r3, #0
 8013292:	637b      	str	r3, [r7, #52]	@ 0x34
 8013294:	2300      	movs	r3, #0
 8013296:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8013298:	2300      	movs	r3, #0
 801329a:	633b      	str	r3, [r7, #48]	@ 0x30
 801329c:	2300      	movs	r3, #0
 801329e:	63bb      	str	r3, [r7, #56]	@ 0x38
 80132a0:	4b59      	ldr	r3, [pc, #356]	@ (8013408 <HAL_RCC_GetSysClockFreq+0x180>)
 80132a2:	689b      	ldr	r3, [r3, #8]
 80132a4:	f003 030c 	and.w	r3, r3, #12
 80132a8:	2b08      	cmp	r3, #8
 80132aa:	d00d      	beq.n	80132c8 <HAL_RCC_GetSysClockFreq+0x40>
 80132ac:	2b08      	cmp	r3, #8
 80132ae:	f200 80a1 	bhi.w	80133f4 <HAL_RCC_GetSysClockFreq+0x16c>
 80132b2:	2b00      	cmp	r3, #0
 80132b4:	d002      	beq.n	80132bc <HAL_RCC_GetSysClockFreq+0x34>
 80132b6:	2b04      	cmp	r3, #4
 80132b8:	d003      	beq.n	80132c2 <HAL_RCC_GetSysClockFreq+0x3a>
 80132ba:	e09b      	b.n	80133f4 <HAL_RCC_GetSysClockFreq+0x16c>
 80132bc:	4b53      	ldr	r3, [pc, #332]	@ (801340c <HAL_RCC_GetSysClockFreq+0x184>)
 80132be:	63bb      	str	r3, [r7, #56]	@ 0x38
 80132c0:	e09b      	b.n	80133fa <HAL_RCC_GetSysClockFreq+0x172>
 80132c2:	4b53      	ldr	r3, [pc, #332]	@ (8013410 <HAL_RCC_GetSysClockFreq+0x188>)
 80132c4:	63bb      	str	r3, [r7, #56]	@ 0x38
 80132c6:	e098      	b.n	80133fa <HAL_RCC_GetSysClockFreq+0x172>
 80132c8:	4b4f      	ldr	r3, [pc, #316]	@ (8013408 <HAL_RCC_GetSysClockFreq+0x180>)
 80132ca:	685b      	ldr	r3, [r3, #4]
 80132cc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80132d0:	637b      	str	r3, [r7, #52]	@ 0x34
 80132d2:	4b4d      	ldr	r3, [pc, #308]	@ (8013408 <HAL_RCC_GetSysClockFreq+0x180>)
 80132d4:	685b      	ldr	r3, [r3, #4]
 80132d6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80132da:	2b00      	cmp	r3, #0
 80132dc:	d028      	beq.n	8013330 <HAL_RCC_GetSysClockFreq+0xa8>
 80132de:	4b4a      	ldr	r3, [pc, #296]	@ (8013408 <HAL_RCC_GetSysClockFreq+0x180>)
 80132e0:	685b      	ldr	r3, [r3, #4]
 80132e2:	099b      	lsrs	r3, r3, #6
 80132e4:	2200      	movs	r2, #0
 80132e6:	623b      	str	r3, [r7, #32]
 80132e8:	627a      	str	r2, [r7, #36]	@ 0x24
 80132ea:	6a3b      	ldr	r3, [r7, #32]
 80132ec:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80132f0:	2100      	movs	r1, #0
 80132f2:	4b47      	ldr	r3, [pc, #284]	@ (8013410 <HAL_RCC_GetSysClockFreq+0x188>)
 80132f4:	fb03 f201 	mul.w	r2, r3, r1
 80132f8:	2300      	movs	r3, #0
 80132fa:	fb00 f303 	mul.w	r3, r0, r3
 80132fe:	4413      	add	r3, r2
 8013300:	4a43      	ldr	r2, [pc, #268]	@ (8013410 <HAL_RCC_GetSysClockFreq+0x188>)
 8013302:	fba0 1202 	umull	r1, r2, r0, r2
 8013306:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8013308:	460a      	mov	r2, r1
 801330a:	62ba      	str	r2, [r7, #40]	@ 0x28
 801330c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 801330e:	4413      	add	r3, r2
 8013310:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013312:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8013314:	2200      	movs	r2, #0
 8013316:	61bb      	str	r3, [r7, #24]
 8013318:	61fa      	str	r2, [r7, #28]
 801331a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 801331e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8013322:	f7ed fcb1 	bl	8000c88 <__aeabi_uldivmod>
 8013326:	4602      	mov	r2, r0
 8013328:	460b      	mov	r3, r1
 801332a:	4613      	mov	r3, r2
 801332c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801332e:	e053      	b.n	80133d8 <HAL_RCC_GetSysClockFreq+0x150>
 8013330:	4b35      	ldr	r3, [pc, #212]	@ (8013408 <HAL_RCC_GetSysClockFreq+0x180>)
 8013332:	685b      	ldr	r3, [r3, #4]
 8013334:	099b      	lsrs	r3, r3, #6
 8013336:	2200      	movs	r2, #0
 8013338:	613b      	str	r3, [r7, #16]
 801333a:	617a      	str	r2, [r7, #20]
 801333c:	693b      	ldr	r3, [r7, #16]
 801333e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8013342:	f04f 0b00 	mov.w	fp, #0
 8013346:	4652      	mov	r2, sl
 8013348:	465b      	mov	r3, fp
 801334a:	f04f 0000 	mov.w	r0, #0
 801334e:	f04f 0100 	mov.w	r1, #0
 8013352:	0159      	lsls	r1, r3, #5
 8013354:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8013358:	0150      	lsls	r0, r2, #5
 801335a:	4602      	mov	r2, r0
 801335c:	460b      	mov	r3, r1
 801335e:	ebb2 080a 	subs.w	r8, r2, sl
 8013362:	eb63 090b 	sbc.w	r9, r3, fp
 8013366:	f04f 0200 	mov.w	r2, #0
 801336a:	f04f 0300 	mov.w	r3, #0
 801336e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8013372:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8013376:	ea4f 1288 	mov.w	r2, r8, lsl #6
 801337a:	ebb2 0408 	subs.w	r4, r2, r8
 801337e:	eb63 0509 	sbc.w	r5, r3, r9
 8013382:	f04f 0200 	mov.w	r2, #0
 8013386:	f04f 0300 	mov.w	r3, #0
 801338a:	00eb      	lsls	r3, r5, #3
 801338c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8013390:	00e2      	lsls	r2, r4, #3
 8013392:	4614      	mov	r4, r2
 8013394:	461d      	mov	r5, r3
 8013396:	eb14 030a 	adds.w	r3, r4, sl
 801339a:	603b      	str	r3, [r7, #0]
 801339c:	eb45 030b 	adc.w	r3, r5, fp
 80133a0:	607b      	str	r3, [r7, #4]
 80133a2:	f04f 0200 	mov.w	r2, #0
 80133a6:	f04f 0300 	mov.w	r3, #0
 80133aa:	e9d7 4500 	ldrd	r4, r5, [r7]
 80133ae:	4629      	mov	r1, r5
 80133b0:	028b      	lsls	r3, r1, #10
 80133b2:	4621      	mov	r1, r4
 80133b4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80133b8:	4621      	mov	r1, r4
 80133ba:	028a      	lsls	r2, r1, #10
 80133bc:	4610      	mov	r0, r2
 80133be:	4619      	mov	r1, r3
 80133c0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80133c2:	2200      	movs	r2, #0
 80133c4:	60bb      	str	r3, [r7, #8]
 80133c6:	60fa      	str	r2, [r7, #12]
 80133c8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80133cc:	f7ed fc5c 	bl	8000c88 <__aeabi_uldivmod>
 80133d0:	4602      	mov	r2, r0
 80133d2:	460b      	mov	r3, r1
 80133d4:	4613      	mov	r3, r2
 80133d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80133d8:	4b0b      	ldr	r3, [pc, #44]	@ (8013408 <HAL_RCC_GetSysClockFreq+0x180>)
 80133da:	685b      	ldr	r3, [r3, #4]
 80133dc:	0c1b      	lsrs	r3, r3, #16
 80133de:	f003 0303 	and.w	r3, r3, #3
 80133e2:	3301      	adds	r3, #1
 80133e4:	005b      	lsls	r3, r3, #1
 80133e6:	633b      	str	r3, [r7, #48]	@ 0x30
 80133e8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80133ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80133ec:	fbb2 f3f3 	udiv	r3, r2, r3
 80133f0:	63bb      	str	r3, [r7, #56]	@ 0x38
 80133f2:	e002      	b.n	80133fa <HAL_RCC_GetSysClockFreq+0x172>
 80133f4:	4b05      	ldr	r3, [pc, #20]	@ (801340c <HAL_RCC_GetSysClockFreq+0x184>)
 80133f6:	63bb      	str	r3, [r7, #56]	@ 0x38
 80133f8:	bf00      	nop
 80133fa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80133fc:	4618      	mov	r0, r3
 80133fe:	3740      	adds	r7, #64	@ 0x40
 8013400:	46bd      	mov	sp, r7
 8013402:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8013406:	bf00      	nop
 8013408:	40023800 	.word	0x40023800
 801340c:	00f42400 	.word	0x00f42400
 8013410:	00b71b00 	.word	0x00b71b00

08013414 <HAL_RCC_GetHCLKFreq>:
 8013414:	b480      	push	{r7}
 8013416:	af00      	add	r7, sp, #0
 8013418:	4b03      	ldr	r3, [pc, #12]	@ (8013428 <HAL_RCC_GetHCLKFreq+0x14>)
 801341a:	681b      	ldr	r3, [r3, #0]
 801341c:	4618      	mov	r0, r3
 801341e:	46bd      	mov	sp, r7
 8013420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013424:	4770      	bx	lr
 8013426:	bf00      	nop
 8013428:	20000004 	.word	0x20000004

0801342c <HAL_RCC_GetPCLK1Freq>:
 801342c:	b580      	push	{r7, lr}
 801342e:	af00      	add	r7, sp, #0
 8013430:	f7ff fff0 	bl	8013414 <HAL_RCC_GetHCLKFreq>
 8013434:	4602      	mov	r2, r0
 8013436:	4b05      	ldr	r3, [pc, #20]	@ (801344c <HAL_RCC_GetPCLK1Freq+0x20>)
 8013438:	689b      	ldr	r3, [r3, #8]
 801343a:	0a9b      	lsrs	r3, r3, #10
 801343c:	f003 0307 	and.w	r3, r3, #7
 8013440:	4903      	ldr	r1, [pc, #12]	@ (8013450 <HAL_RCC_GetPCLK1Freq+0x24>)
 8013442:	5ccb      	ldrb	r3, [r1, r3]
 8013444:	fa22 f303 	lsr.w	r3, r2, r3
 8013448:	4618      	mov	r0, r3
 801344a:	bd80      	pop	{r7, pc}
 801344c:	40023800 	.word	0x40023800
 8013450:	08024af8 	.word	0x08024af8

08013454 <HAL_RCC_GetPCLK2Freq>:
 8013454:	b580      	push	{r7, lr}
 8013456:	af00      	add	r7, sp, #0
 8013458:	f7ff ffdc 	bl	8013414 <HAL_RCC_GetHCLKFreq>
 801345c:	4602      	mov	r2, r0
 801345e:	4b05      	ldr	r3, [pc, #20]	@ (8013474 <HAL_RCC_GetPCLK2Freq+0x20>)
 8013460:	689b      	ldr	r3, [r3, #8]
 8013462:	0b5b      	lsrs	r3, r3, #13
 8013464:	f003 0307 	and.w	r3, r3, #7
 8013468:	4903      	ldr	r1, [pc, #12]	@ (8013478 <HAL_RCC_GetPCLK2Freq+0x24>)
 801346a:	5ccb      	ldrb	r3, [r1, r3]
 801346c:	fa22 f303 	lsr.w	r3, r2, r3
 8013470:	4618      	mov	r0, r3
 8013472:	bd80      	pop	{r7, pc}
 8013474:	40023800 	.word	0x40023800
 8013478:	08024af8 	.word	0x08024af8

0801347c <HAL_RCC_GetClockConfig>:
 801347c:	b480      	push	{r7}
 801347e:	b083      	sub	sp, #12
 8013480:	af00      	add	r7, sp, #0
 8013482:	6078      	str	r0, [r7, #4]
 8013484:	6039      	str	r1, [r7, #0]
 8013486:	687b      	ldr	r3, [r7, #4]
 8013488:	220f      	movs	r2, #15
 801348a:	601a      	str	r2, [r3, #0]
 801348c:	4b12      	ldr	r3, [pc, #72]	@ (80134d8 <HAL_RCC_GetClockConfig+0x5c>)
 801348e:	689b      	ldr	r3, [r3, #8]
 8013490:	f003 0203 	and.w	r2, r3, #3
 8013494:	687b      	ldr	r3, [r7, #4]
 8013496:	605a      	str	r2, [r3, #4]
 8013498:	4b0f      	ldr	r3, [pc, #60]	@ (80134d8 <HAL_RCC_GetClockConfig+0x5c>)
 801349a:	689b      	ldr	r3, [r3, #8]
 801349c:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80134a0:	687b      	ldr	r3, [r7, #4]
 80134a2:	609a      	str	r2, [r3, #8]
 80134a4:	4b0c      	ldr	r3, [pc, #48]	@ (80134d8 <HAL_RCC_GetClockConfig+0x5c>)
 80134a6:	689b      	ldr	r3, [r3, #8]
 80134a8:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 80134ac:	687b      	ldr	r3, [r7, #4]
 80134ae:	60da      	str	r2, [r3, #12]
 80134b0:	4b09      	ldr	r3, [pc, #36]	@ (80134d8 <HAL_RCC_GetClockConfig+0x5c>)
 80134b2:	689b      	ldr	r3, [r3, #8]
 80134b4:	08db      	lsrs	r3, r3, #3
 80134b6:	f403 52e0 	and.w	r2, r3, #7168	@ 0x1c00
 80134ba:	687b      	ldr	r3, [r7, #4]
 80134bc:	611a      	str	r2, [r3, #16]
 80134be:	4b07      	ldr	r3, [pc, #28]	@ (80134dc <HAL_RCC_GetClockConfig+0x60>)
 80134c0:	681b      	ldr	r3, [r3, #0]
 80134c2:	f003 0207 	and.w	r2, r3, #7
 80134c6:	683b      	ldr	r3, [r7, #0]
 80134c8:	601a      	str	r2, [r3, #0]
 80134ca:	bf00      	nop
 80134cc:	370c      	adds	r7, #12
 80134ce:	46bd      	mov	sp, r7
 80134d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80134d4:	4770      	bx	lr
 80134d6:	bf00      	nop
 80134d8:	40023800 	.word	0x40023800
 80134dc:	40023c00 	.word	0x40023c00

080134e0 <HAL_RNG_Init>:
 80134e0:	b580      	push	{r7, lr}
 80134e2:	b082      	sub	sp, #8
 80134e4:	af00      	add	r7, sp, #0
 80134e6:	6078      	str	r0, [r7, #4]
 80134e8:	687b      	ldr	r3, [r7, #4]
 80134ea:	2b00      	cmp	r3, #0
 80134ec:	d101      	bne.n	80134f2 <HAL_RNG_Init+0x12>
 80134ee:	2301      	movs	r3, #1
 80134f0:	e01c      	b.n	801352c <HAL_RNG_Init+0x4c>
 80134f2:	687b      	ldr	r3, [r7, #4]
 80134f4:	795b      	ldrb	r3, [r3, #5]
 80134f6:	b2db      	uxtb	r3, r3
 80134f8:	2b00      	cmp	r3, #0
 80134fa:	d105      	bne.n	8013508 <HAL_RNG_Init+0x28>
 80134fc:	687b      	ldr	r3, [r7, #4]
 80134fe:	2200      	movs	r2, #0
 8013500:	711a      	strb	r2, [r3, #4]
 8013502:	6878      	ldr	r0, [r7, #4]
 8013504:	f7f0 f992 	bl	800382c <HAL_RNG_MspInit>
 8013508:	687b      	ldr	r3, [r7, #4]
 801350a:	2202      	movs	r2, #2
 801350c:	715a      	strb	r2, [r3, #5]
 801350e:	687b      	ldr	r3, [r7, #4]
 8013510:	681b      	ldr	r3, [r3, #0]
 8013512:	681a      	ldr	r2, [r3, #0]
 8013514:	687b      	ldr	r3, [r7, #4]
 8013516:	681b      	ldr	r3, [r3, #0]
 8013518:	f042 0204 	orr.w	r2, r2, #4
 801351c:	601a      	str	r2, [r3, #0]
 801351e:	687b      	ldr	r3, [r7, #4]
 8013520:	2201      	movs	r2, #1
 8013522:	715a      	strb	r2, [r3, #5]
 8013524:	687b      	ldr	r3, [r7, #4]
 8013526:	2200      	movs	r2, #0
 8013528:	609a      	str	r2, [r3, #8]
 801352a:	2300      	movs	r3, #0
 801352c:	4618      	mov	r0, r3
 801352e:	3708      	adds	r7, #8
 8013530:	46bd      	mov	sp, r7
 8013532:	bd80      	pop	{r7, pc}

08013534 <HAL_SPI_Init>:
 8013534:	b580      	push	{r7, lr}
 8013536:	b082      	sub	sp, #8
 8013538:	af00      	add	r7, sp, #0
 801353a:	6078      	str	r0, [r7, #4]
 801353c:	687b      	ldr	r3, [r7, #4]
 801353e:	2b00      	cmp	r3, #0
 8013540:	d101      	bne.n	8013546 <HAL_SPI_Init+0x12>
 8013542:	2301      	movs	r3, #1
 8013544:	e07b      	b.n	801363e <HAL_SPI_Init+0x10a>
 8013546:	687b      	ldr	r3, [r7, #4]
 8013548:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801354a:	2b00      	cmp	r3, #0
 801354c:	d108      	bne.n	8013560 <HAL_SPI_Init+0x2c>
 801354e:	687b      	ldr	r3, [r7, #4]
 8013550:	685b      	ldr	r3, [r3, #4]
 8013552:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8013556:	d009      	beq.n	801356c <HAL_SPI_Init+0x38>
 8013558:	687b      	ldr	r3, [r7, #4]
 801355a:	2200      	movs	r2, #0
 801355c:	61da      	str	r2, [r3, #28]
 801355e:	e005      	b.n	801356c <HAL_SPI_Init+0x38>
 8013560:	687b      	ldr	r3, [r7, #4]
 8013562:	2200      	movs	r2, #0
 8013564:	611a      	str	r2, [r3, #16]
 8013566:	687b      	ldr	r3, [r7, #4]
 8013568:	2200      	movs	r2, #0
 801356a:	615a      	str	r2, [r3, #20]
 801356c:	687b      	ldr	r3, [r7, #4]
 801356e:	2200      	movs	r2, #0
 8013570:	629a      	str	r2, [r3, #40]	@ 0x28
 8013572:	687b      	ldr	r3, [r7, #4]
 8013574:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8013578:	b2db      	uxtb	r3, r3
 801357a:	2b00      	cmp	r3, #0
 801357c:	d106      	bne.n	801358c <HAL_SPI_Init+0x58>
 801357e:	687b      	ldr	r3, [r7, #4]
 8013580:	2200      	movs	r2, #0
 8013582:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8013586:	6878      	ldr	r0, [r7, #4]
 8013588:	f7f0 f9a8 	bl	80038dc <HAL_SPI_MspInit>
 801358c:	687b      	ldr	r3, [r7, #4]
 801358e:	2202      	movs	r2, #2
 8013590:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8013594:	687b      	ldr	r3, [r7, #4]
 8013596:	681b      	ldr	r3, [r3, #0]
 8013598:	681a      	ldr	r2, [r3, #0]
 801359a:	687b      	ldr	r3, [r7, #4]
 801359c:	681b      	ldr	r3, [r3, #0]
 801359e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80135a2:	601a      	str	r2, [r3, #0]
 80135a4:	687b      	ldr	r3, [r7, #4]
 80135a6:	685b      	ldr	r3, [r3, #4]
 80135a8:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80135ac:	687b      	ldr	r3, [r7, #4]
 80135ae:	689b      	ldr	r3, [r3, #8]
 80135b0:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80135b4:	431a      	orrs	r2, r3
 80135b6:	687b      	ldr	r3, [r7, #4]
 80135b8:	68db      	ldr	r3, [r3, #12]
 80135ba:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80135be:	431a      	orrs	r2, r3
 80135c0:	687b      	ldr	r3, [r7, #4]
 80135c2:	691b      	ldr	r3, [r3, #16]
 80135c4:	f003 0302 	and.w	r3, r3, #2
 80135c8:	431a      	orrs	r2, r3
 80135ca:	687b      	ldr	r3, [r7, #4]
 80135cc:	695b      	ldr	r3, [r3, #20]
 80135ce:	f003 0301 	and.w	r3, r3, #1
 80135d2:	431a      	orrs	r2, r3
 80135d4:	687b      	ldr	r3, [r7, #4]
 80135d6:	699b      	ldr	r3, [r3, #24]
 80135d8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80135dc:	431a      	orrs	r2, r3
 80135de:	687b      	ldr	r3, [r7, #4]
 80135e0:	69db      	ldr	r3, [r3, #28]
 80135e2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80135e6:	431a      	orrs	r2, r3
 80135e8:	687b      	ldr	r3, [r7, #4]
 80135ea:	6a1b      	ldr	r3, [r3, #32]
 80135ec:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80135f0:	ea42 0103 	orr.w	r1, r2, r3
 80135f4:	687b      	ldr	r3, [r7, #4]
 80135f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80135f8:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80135fc:	687b      	ldr	r3, [r7, #4]
 80135fe:	681b      	ldr	r3, [r3, #0]
 8013600:	430a      	orrs	r2, r1
 8013602:	601a      	str	r2, [r3, #0]
 8013604:	687b      	ldr	r3, [r7, #4]
 8013606:	699b      	ldr	r3, [r3, #24]
 8013608:	0c1b      	lsrs	r3, r3, #16
 801360a:	f003 0104 	and.w	r1, r3, #4
 801360e:	687b      	ldr	r3, [r7, #4]
 8013610:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8013612:	f003 0210 	and.w	r2, r3, #16
 8013616:	687b      	ldr	r3, [r7, #4]
 8013618:	681b      	ldr	r3, [r3, #0]
 801361a:	430a      	orrs	r2, r1
 801361c:	605a      	str	r2, [r3, #4]
 801361e:	687b      	ldr	r3, [r7, #4]
 8013620:	681b      	ldr	r3, [r3, #0]
 8013622:	69da      	ldr	r2, [r3, #28]
 8013624:	687b      	ldr	r3, [r7, #4]
 8013626:	681b      	ldr	r3, [r3, #0]
 8013628:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 801362c:	61da      	str	r2, [r3, #28]
 801362e:	687b      	ldr	r3, [r7, #4]
 8013630:	2200      	movs	r2, #0
 8013632:	655a      	str	r2, [r3, #84]	@ 0x54
 8013634:	687b      	ldr	r3, [r7, #4]
 8013636:	2201      	movs	r2, #1
 8013638:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 801363c:	2300      	movs	r3, #0
 801363e:	4618      	mov	r0, r3
 8013640:	3708      	adds	r7, #8
 8013642:	46bd      	mov	sp, r7
 8013644:	bd80      	pop	{r7, pc}

08013646 <HAL_SPI_Receive>:
 8013646:	b580      	push	{r7, lr}
 8013648:	b088      	sub	sp, #32
 801364a:	af02      	add	r7, sp, #8
 801364c:	60f8      	str	r0, [r7, #12]
 801364e:	60b9      	str	r1, [r7, #8]
 8013650:	603b      	str	r3, [r7, #0]
 8013652:	4613      	mov	r3, r2
 8013654:	80fb      	strh	r3, [r7, #6]
 8013656:	2300      	movs	r3, #0
 8013658:	75fb      	strb	r3, [r7, #23]
 801365a:	68fb      	ldr	r3, [r7, #12]
 801365c:	685b      	ldr	r3, [r3, #4]
 801365e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8013662:	d112      	bne.n	801368a <HAL_SPI_Receive+0x44>
 8013664:	68fb      	ldr	r3, [r7, #12]
 8013666:	689b      	ldr	r3, [r3, #8]
 8013668:	2b00      	cmp	r3, #0
 801366a:	d10e      	bne.n	801368a <HAL_SPI_Receive+0x44>
 801366c:	68fb      	ldr	r3, [r7, #12]
 801366e:	2204      	movs	r2, #4
 8013670:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8013674:	88fa      	ldrh	r2, [r7, #6]
 8013676:	683b      	ldr	r3, [r7, #0]
 8013678:	9300      	str	r3, [sp, #0]
 801367a:	4613      	mov	r3, r2
 801367c:	68ba      	ldr	r2, [r7, #8]
 801367e:	68b9      	ldr	r1, [r7, #8]
 8013680:	68f8      	ldr	r0, [r7, #12]
 8013682:	f000 f8f1 	bl	8013868 <HAL_SPI_TransmitReceive>
 8013686:	4603      	mov	r3, r0
 8013688:	e0ea      	b.n	8013860 <HAL_SPI_Receive+0x21a>
 801368a:	68fb      	ldr	r3, [r7, #12]
 801368c:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8013690:	2b01      	cmp	r3, #1
 8013692:	d101      	bne.n	8013698 <HAL_SPI_Receive+0x52>
 8013694:	2302      	movs	r3, #2
 8013696:	e0e3      	b.n	8013860 <HAL_SPI_Receive+0x21a>
 8013698:	68fb      	ldr	r3, [r7, #12]
 801369a:	2201      	movs	r2, #1
 801369c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80136a0:	f7fa fa8a 	bl	800dbb8 <HAL_GetTick>
 80136a4:	6138      	str	r0, [r7, #16]
 80136a6:	68fb      	ldr	r3, [r7, #12]
 80136a8:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80136ac:	b2db      	uxtb	r3, r3
 80136ae:	2b01      	cmp	r3, #1
 80136b0:	d002      	beq.n	80136b8 <HAL_SPI_Receive+0x72>
 80136b2:	2302      	movs	r3, #2
 80136b4:	75fb      	strb	r3, [r7, #23]
 80136b6:	e0ca      	b.n	801384e <HAL_SPI_Receive+0x208>
 80136b8:	68bb      	ldr	r3, [r7, #8]
 80136ba:	2b00      	cmp	r3, #0
 80136bc:	d002      	beq.n	80136c4 <HAL_SPI_Receive+0x7e>
 80136be:	88fb      	ldrh	r3, [r7, #6]
 80136c0:	2b00      	cmp	r3, #0
 80136c2:	d102      	bne.n	80136ca <HAL_SPI_Receive+0x84>
 80136c4:	2301      	movs	r3, #1
 80136c6:	75fb      	strb	r3, [r7, #23]
 80136c8:	e0c1      	b.n	801384e <HAL_SPI_Receive+0x208>
 80136ca:	68fb      	ldr	r3, [r7, #12]
 80136cc:	2204      	movs	r2, #4
 80136ce:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80136d2:	68fb      	ldr	r3, [r7, #12]
 80136d4:	2200      	movs	r2, #0
 80136d6:	655a      	str	r2, [r3, #84]	@ 0x54
 80136d8:	68fb      	ldr	r3, [r7, #12]
 80136da:	68ba      	ldr	r2, [r7, #8]
 80136dc:	639a      	str	r2, [r3, #56]	@ 0x38
 80136de:	68fb      	ldr	r3, [r7, #12]
 80136e0:	88fa      	ldrh	r2, [r7, #6]
 80136e2:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80136e4:	68fb      	ldr	r3, [r7, #12]
 80136e6:	88fa      	ldrh	r2, [r7, #6]
 80136e8:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80136ea:	68fb      	ldr	r3, [r7, #12]
 80136ec:	2200      	movs	r2, #0
 80136ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80136f0:	68fb      	ldr	r3, [r7, #12]
 80136f2:	2200      	movs	r2, #0
 80136f4:	869a      	strh	r2, [r3, #52]	@ 0x34
 80136f6:	68fb      	ldr	r3, [r7, #12]
 80136f8:	2200      	movs	r2, #0
 80136fa:	86da      	strh	r2, [r3, #54]	@ 0x36
 80136fc:	68fb      	ldr	r3, [r7, #12]
 80136fe:	2200      	movs	r2, #0
 8013700:	641a      	str	r2, [r3, #64]	@ 0x40
 8013702:	68fb      	ldr	r3, [r7, #12]
 8013704:	2200      	movs	r2, #0
 8013706:	645a      	str	r2, [r3, #68]	@ 0x44
 8013708:	68fb      	ldr	r3, [r7, #12]
 801370a:	689b      	ldr	r3, [r3, #8]
 801370c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8013710:	d10f      	bne.n	8013732 <HAL_SPI_Receive+0xec>
 8013712:	68fb      	ldr	r3, [r7, #12]
 8013714:	681b      	ldr	r3, [r3, #0]
 8013716:	681a      	ldr	r2, [r3, #0]
 8013718:	68fb      	ldr	r3, [r7, #12]
 801371a:	681b      	ldr	r3, [r3, #0]
 801371c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8013720:	601a      	str	r2, [r3, #0]
 8013722:	68fb      	ldr	r3, [r7, #12]
 8013724:	681b      	ldr	r3, [r3, #0]
 8013726:	681a      	ldr	r2, [r3, #0]
 8013728:	68fb      	ldr	r3, [r7, #12]
 801372a:	681b      	ldr	r3, [r3, #0]
 801372c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8013730:	601a      	str	r2, [r3, #0]
 8013732:	68fb      	ldr	r3, [r7, #12]
 8013734:	681b      	ldr	r3, [r3, #0]
 8013736:	681b      	ldr	r3, [r3, #0]
 8013738:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801373c:	2b40      	cmp	r3, #64	@ 0x40
 801373e:	d007      	beq.n	8013750 <HAL_SPI_Receive+0x10a>
 8013740:	68fb      	ldr	r3, [r7, #12]
 8013742:	681b      	ldr	r3, [r3, #0]
 8013744:	681a      	ldr	r2, [r3, #0]
 8013746:	68fb      	ldr	r3, [r7, #12]
 8013748:	681b      	ldr	r3, [r3, #0]
 801374a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 801374e:	601a      	str	r2, [r3, #0]
 8013750:	68fb      	ldr	r3, [r7, #12]
 8013752:	68db      	ldr	r3, [r3, #12]
 8013754:	2b00      	cmp	r3, #0
 8013756:	d162      	bne.n	801381e <HAL_SPI_Receive+0x1d8>
 8013758:	e02e      	b.n	80137b8 <HAL_SPI_Receive+0x172>
 801375a:	68fb      	ldr	r3, [r7, #12]
 801375c:	681b      	ldr	r3, [r3, #0]
 801375e:	689b      	ldr	r3, [r3, #8]
 8013760:	f003 0301 	and.w	r3, r3, #1
 8013764:	2b01      	cmp	r3, #1
 8013766:	d115      	bne.n	8013794 <HAL_SPI_Receive+0x14e>
 8013768:	68fb      	ldr	r3, [r7, #12]
 801376a:	681b      	ldr	r3, [r3, #0]
 801376c:	f103 020c 	add.w	r2, r3, #12
 8013770:	68fb      	ldr	r3, [r7, #12]
 8013772:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013774:	7812      	ldrb	r2, [r2, #0]
 8013776:	b2d2      	uxtb	r2, r2
 8013778:	701a      	strb	r2, [r3, #0]
 801377a:	68fb      	ldr	r3, [r7, #12]
 801377c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801377e:	1c5a      	adds	r2, r3, #1
 8013780:	68fb      	ldr	r3, [r7, #12]
 8013782:	639a      	str	r2, [r3, #56]	@ 0x38
 8013784:	68fb      	ldr	r3, [r7, #12]
 8013786:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013788:	b29b      	uxth	r3, r3
 801378a:	3b01      	subs	r3, #1
 801378c:	b29a      	uxth	r2, r3
 801378e:	68fb      	ldr	r3, [r7, #12]
 8013790:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8013792:	e011      	b.n	80137b8 <HAL_SPI_Receive+0x172>
 8013794:	f7fa fa10 	bl	800dbb8 <HAL_GetTick>
 8013798:	4602      	mov	r2, r0
 801379a:	693b      	ldr	r3, [r7, #16]
 801379c:	1ad3      	subs	r3, r2, r3
 801379e:	683a      	ldr	r2, [r7, #0]
 80137a0:	429a      	cmp	r2, r3
 80137a2:	d803      	bhi.n	80137ac <HAL_SPI_Receive+0x166>
 80137a4:	683b      	ldr	r3, [r7, #0]
 80137a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80137aa:	d102      	bne.n	80137b2 <HAL_SPI_Receive+0x16c>
 80137ac:	683b      	ldr	r3, [r7, #0]
 80137ae:	2b00      	cmp	r3, #0
 80137b0:	d102      	bne.n	80137b8 <HAL_SPI_Receive+0x172>
 80137b2:	2303      	movs	r3, #3
 80137b4:	75fb      	strb	r3, [r7, #23]
 80137b6:	e04a      	b.n	801384e <HAL_SPI_Receive+0x208>
 80137b8:	68fb      	ldr	r3, [r7, #12]
 80137ba:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80137bc:	b29b      	uxth	r3, r3
 80137be:	2b00      	cmp	r3, #0
 80137c0:	d1cb      	bne.n	801375a <HAL_SPI_Receive+0x114>
 80137c2:	e031      	b.n	8013828 <HAL_SPI_Receive+0x1e2>
 80137c4:	68fb      	ldr	r3, [r7, #12]
 80137c6:	681b      	ldr	r3, [r3, #0]
 80137c8:	689b      	ldr	r3, [r3, #8]
 80137ca:	f003 0301 	and.w	r3, r3, #1
 80137ce:	2b01      	cmp	r3, #1
 80137d0:	d113      	bne.n	80137fa <HAL_SPI_Receive+0x1b4>
 80137d2:	68fb      	ldr	r3, [r7, #12]
 80137d4:	681b      	ldr	r3, [r3, #0]
 80137d6:	68da      	ldr	r2, [r3, #12]
 80137d8:	68fb      	ldr	r3, [r7, #12]
 80137da:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80137dc:	b292      	uxth	r2, r2
 80137de:	801a      	strh	r2, [r3, #0]
 80137e0:	68fb      	ldr	r3, [r7, #12]
 80137e2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80137e4:	1c9a      	adds	r2, r3, #2
 80137e6:	68fb      	ldr	r3, [r7, #12]
 80137e8:	639a      	str	r2, [r3, #56]	@ 0x38
 80137ea:	68fb      	ldr	r3, [r7, #12]
 80137ec:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80137ee:	b29b      	uxth	r3, r3
 80137f0:	3b01      	subs	r3, #1
 80137f2:	b29a      	uxth	r2, r3
 80137f4:	68fb      	ldr	r3, [r7, #12]
 80137f6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80137f8:	e011      	b.n	801381e <HAL_SPI_Receive+0x1d8>
 80137fa:	f7fa f9dd 	bl	800dbb8 <HAL_GetTick>
 80137fe:	4602      	mov	r2, r0
 8013800:	693b      	ldr	r3, [r7, #16]
 8013802:	1ad3      	subs	r3, r2, r3
 8013804:	683a      	ldr	r2, [r7, #0]
 8013806:	429a      	cmp	r2, r3
 8013808:	d803      	bhi.n	8013812 <HAL_SPI_Receive+0x1cc>
 801380a:	683b      	ldr	r3, [r7, #0]
 801380c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8013810:	d102      	bne.n	8013818 <HAL_SPI_Receive+0x1d2>
 8013812:	683b      	ldr	r3, [r7, #0]
 8013814:	2b00      	cmp	r3, #0
 8013816:	d102      	bne.n	801381e <HAL_SPI_Receive+0x1d8>
 8013818:	2303      	movs	r3, #3
 801381a:	75fb      	strb	r3, [r7, #23]
 801381c:	e017      	b.n	801384e <HAL_SPI_Receive+0x208>
 801381e:	68fb      	ldr	r3, [r7, #12]
 8013820:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013822:	b29b      	uxth	r3, r3
 8013824:	2b00      	cmp	r3, #0
 8013826:	d1cd      	bne.n	80137c4 <HAL_SPI_Receive+0x17e>
 8013828:	693a      	ldr	r2, [r7, #16]
 801382a:	6839      	ldr	r1, [r7, #0]
 801382c:	68f8      	ldr	r0, [r7, #12]
 801382e:	f000 fa45 	bl	8013cbc <SPI_EndRxTransaction>
 8013832:	4603      	mov	r3, r0
 8013834:	2b00      	cmp	r3, #0
 8013836:	d002      	beq.n	801383e <HAL_SPI_Receive+0x1f8>
 8013838:	68fb      	ldr	r3, [r7, #12]
 801383a:	2220      	movs	r2, #32
 801383c:	655a      	str	r2, [r3, #84]	@ 0x54
 801383e:	68fb      	ldr	r3, [r7, #12]
 8013840:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013842:	2b00      	cmp	r3, #0
 8013844:	d002      	beq.n	801384c <HAL_SPI_Receive+0x206>
 8013846:	2301      	movs	r3, #1
 8013848:	75fb      	strb	r3, [r7, #23]
 801384a:	e000      	b.n	801384e <HAL_SPI_Receive+0x208>
 801384c:	bf00      	nop
 801384e:	68fb      	ldr	r3, [r7, #12]
 8013850:	2201      	movs	r2, #1
 8013852:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8013856:	68fb      	ldr	r3, [r7, #12]
 8013858:	2200      	movs	r2, #0
 801385a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 801385e:	7dfb      	ldrb	r3, [r7, #23]
 8013860:	4618      	mov	r0, r3
 8013862:	3718      	adds	r7, #24
 8013864:	46bd      	mov	sp, r7
 8013866:	bd80      	pop	{r7, pc}

08013868 <HAL_SPI_TransmitReceive>:
 8013868:	b580      	push	{r7, lr}
 801386a:	b08c      	sub	sp, #48	@ 0x30
 801386c:	af00      	add	r7, sp, #0
 801386e:	60f8      	str	r0, [r7, #12]
 8013870:	60b9      	str	r1, [r7, #8]
 8013872:	607a      	str	r2, [r7, #4]
 8013874:	807b      	strh	r3, [r7, #2]
 8013876:	2301      	movs	r3, #1
 8013878:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801387a:	2300      	movs	r3, #0
 801387c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8013880:	68fb      	ldr	r3, [r7, #12]
 8013882:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8013886:	2b01      	cmp	r3, #1
 8013888:	d101      	bne.n	801388e <HAL_SPI_TransmitReceive+0x26>
 801388a:	2302      	movs	r3, #2
 801388c:	e18a      	b.n	8013ba4 <HAL_SPI_TransmitReceive+0x33c>
 801388e:	68fb      	ldr	r3, [r7, #12]
 8013890:	2201      	movs	r2, #1
 8013892:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8013896:	f7fa f98f 	bl	800dbb8 <HAL_GetTick>
 801389a:	6278      	str	r0, [r7, #36]	@ 0x24
 801389c:	68fb      	ldr	r3, [r7, #12]
 801389e:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80138a2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80138a6:	68fb      	ldr	r3, [r7, #12]
 80138a8:	685b      	ldr	r3, [r3, #4]
 80138aa:	61fb      	str	r3, [r7, #28]
 80138ac:	887b      	ldrh	r3, [r7, #2]
 80138ae:	837b      	strh	r3, [r7, #26]
 80138b0:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 80138b4:	2b01      	cmp	r3, #1
 80138b6:	d00f      	beq.n	80138d8 <HAL_SPI_TransmitReceive+0x70>
 80138b8:	69fb      	ldr	r3, [r7, #28]
 80138ba:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80138be:	d107      	bne.n	80138d0 <HAL_SPI_TransmitReceive+0x68>
 80138c0:	68fb      	ldr	r3, [r7, #12]
 80138c2:	689b      	ldr	r3, [r3, #8]
 80138c4:	2b00      	cmp	r3, #0
 80138c6:	d103      	bne.n	80138d0 <HAL_SPI_TransmitReceive+0x68>
 80138c8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 80138cc:	2b04      	cmp	r3, #4
 80138ce:	d003      	beq.n	80138d8 <HAL_SPI_TransmitReceive+0x70>
 80138d0:	2302      	movs	r3, #2
 80138d2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80138d6:	e15b      	b.n	8013b90 <HAL_SPI_TransmitReceive+0x328>
 80138d8:	68bb      	ldr	r3, [r7, #8]
 80138da:	2b00      	cmp	r3, #0
 80138dc:	d005      	beq.n	80138ea <HAL_SPI_TransmitReceive+0x82>
 80138de:	687b      	ldr	r3, [r7, #4]
 80138e0:	2b00      	cmp	r3, #0
 80138e2:	d002      	beq.n	80138ea <HAL_SPI_TransmitReceive+0x82>
 80138e4:	887b      	ldrh	r3, [r7, #2]
 80138e6:	2b00      	cmp	r3, #0
 80138e8:	d103      	bne.n	80138f2 <HAL_SPI_TransmitReceive+0x8a>
 80138ea:	2301      	movs	r3, #1
 80138ec:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 80138f0:	e14e      	b.n	8013b90 <HAL_SPI_TransmitReceive+0x328>
 80138f2:	68fb      	ldr	r3, [r7, #12]
 80138f4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80138f8:	b2db      	uxtb	r3, r3
 80138fa:	2b04      	cmp	r3, #4
 80138fc:	d003      	beq.n	8013906 <HAL_SPI_TransmitReceive+0x9e>
 80138fe:	68fb      	ldr	r3, [r7, #12]
 8013900:	2205      	movs	r2, #5
 8013902:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8013906:	68fb      	ldr	r3, [r7, #12]
 8013908:	2200      	movs	r2, #0
 801390a:	655a      	str	r2, [r3, #84]	@ 0x54
 801390c:	68fb      	ldr	r3, [r7, #12]
 801390e:	687a      	ldr	r2, [r7, #4]
 8013910:	639a      	str	r2, [r3, #56]	@ 0x38
 8013912:	68fb      	ldr	r3, [r7, #12]
 8013914:	887a      	ldrh	r2, [r7, #2]
 8013916:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8013918:	68fb      	ldr	r3, [r7, #12]
 801391a:	887a      	ldrh	r2, [r7, #2]
 801391c:	879a      	strh	r2, [r3, #60]	@ 0x3c
 801391e:	68fb      	ldr	r3, [r7, #12]
 8013920:	68ba      	ldr	r2, [r7, #8]
 8013922:	631a      	str	r2, [r3, #48]	@ 0x30
 8013924:	68fb      	ldr	r3, [r7, #12]
 8013926:	887a      	ldrh	r2, [r7, #2]
 8013928:	86da      	strh	r2, [r3, #54]	@ 0x36
 801392a:	68fb      	ldr	r3, [r7, #12]
 801392c:	887a      	ldrh	r2, [r7, #2]
 801392e:	869a      	strh	r2, [r3, #52]	@ 0x34
 8013930:	68fb      	ldr	r3, [r7, #12]
 8013932:	2200      	movs	r2, #0
 8013934:	641a      	str	r2, [r3, #64]	@ 0x40
 8013936:	68fb      	ldr	r3, [r7, #12]
 8013938:	2200      	movs	r2, #0
 801393a:	645a      	str	r2, [r3, #68]	@ 0x44
 801393c:	68fb      	ldr	r3, [r7, #12]
 801393e:	681b      	ldr	r3, [r3, #0]
 8013940:	681b      	ldr	r3, [r3, #0]
 8013942:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8013946:	2b40      	cmp	r3, #64	@ 0x40
 8013948:	d007      	beq.n	801395a <HAL_SPI_TransmitReceive+0xf2>
 801394a:	68fb      	ldr	r3, [r7, #12]
 801394c:	681b      	ldr	r3, [r3, #0]
 801394e:	681a      	ldr	r2, [r3, #0]
 8013950:	68fb      	ldr	r3, [r7, #12]
 8013952:	681b      	ldr	r3, [r3, #0]
 8013954:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8013958:	601a      	str	r2, [r3, #0]
 801395a:	68fb      	ldr	r3, [r7, #12]
 801395c:	68db      	ldr	r3, [r3, #12]
 801395e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8013962:	d178      	bne.n	8013a56 <HAL_SPI_TransmitReceive+0x1ee>
 8013964:	68fb      	ldr	r3, [r7, #12]
 8013966:	685b      	ldr	r3, [r3, #4]
 8013968:	2b00      	cmp	r3, #0
 801396a:	d002      	beq.n	8013972 <HAL_SPI_TransmitReceive+0x10a>
 801396c:	8b7b      	ldrh	r3, [r7, #26]
 801396e:	2b01      	cmp	r3, #1
 8013970:	d166      	bne.n	8013a40 <HAL_SPI_TransmitReceive+0x1d8>
 8013972:	68fb      	ldr	r3, [r7, #12]
 8013974:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013976:	881a      	ldrh	r2, [r3, #0]
 8013978:	68fb      	ldr	r3, [r7, #12]
 801397a:	681b      	ldr	r3, [r3, #0]
 801397c:	60da      	str	r2, [r3, #12]
 801397e:	68fb      	ldr	r3, [r7, #12]
 8013980:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013982:	1c9a      	adds	r2, r3, #2
 8013984:	68fb      	ldr	r3, [r7, #12]
 8013986:	631a      	str	r2, [r3, #48]	@ 0x30
 8013988:	68fb      	ldr	r3, [r7, #12]
 801398a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 801398c:	b29b      	uxth	r3, r3
 801398e:	3b01      	subs	r3, #1
 8013990:	b29a      	uxth	r2, r3
 8013992:	68fb      	ldr	r3, [r7, #12]
 8013994:	86da      	strh	r2, [r3, #54]	@ 0x36
 8013996:	e053      	b.n	8013a40 <HAL_SPI_TransmitReceive+0x1d8>
 8013998:	68fb      	ldr	r3, [r7, #12]
 801399a:	681b      	ldr	r3, [r3, #0]
 801399c:	689b      	ldr	r3, [r3, #8]
 801399e:	f003 0302 	and.w	r3, r3, #2
 80139a2:	2b02      	cmp	r3, #2
 80139a4:	d11b      	bne.n	80139de <HAL_SPI_TransmitReceive+0x176>
 80139a6:	68fb      	ldr	r3, [r7, #12]
 80139a8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80139aa:	b29b      	uxth	r3, r3
 80139ac:	2b00      	cmp	r3, #0
 80139ae:	d016      	beq.n	80139de <HAL_SPI_TransmitReceive+0x176>
 80139b0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80139b2:	2b01      	cmp	r3, #1
 80139b4:	d113      	bne.n	80139de <HAL_SPI_TransmitReceive+0x176>
 80139b6:	68fb      	ldr	r3, [r7, #12]
 80139b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80139ba:	881a      	ldrh	r2, [r3, #0]
 80139bc:	68fb      	ldr	r3, [r7, #12]
 80139be:	681b      	ldr	r3, [r3, #0]
 80139c0:	60da      	str	r2, [r3, #12]
 80139c2:	68fb      	ldr	r3, [r7, #12]
 80139c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80139c6:	1c9a      	adds	r2, r3, #2
 80139c8:	68fb      	ldr	r3, [r7, #12]
 80139ca:	631a      	str	r2, [r3, #48]	@ 0x30
 80139cc:	68fb      	ldr	r3, [r7, #12]
 80139ce:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80139d0:	b29b      	uxth	r3, r3
 80139d2:	3b01      	subs	r3, #1
 80139d4:	b29a      	uxth	r2, r3
 80139d6:	68fb      	ldr	r3, [r7, #12]
 80139d8:	86da      	strh	r2, [r3, #54]	@ 0x36
 80139da:	2300      	movs	r3, #0
 80139dc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80139de:	68fb      	ldr	r3, [r7, #12]
 80139e0:	681b      	ldr	r3, [r3, #0]
 80139e2:	689b      	ldr	r3, [r3, #8]
 80139e4:	f003 0301 	and.w	r3, r3, #1
 80139e8:	2b01      	cmp	r3, #1
 80139ea:	d119      	bne.n	8013a20 <HAL_SPI_TransmitReceive+0x1b8>
 80139ec:	68fb      	ldr	r3, [r7, #12]
 80139ee:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80139f0:	b29b      	uxth	r3, r3
 80139f2:	2b00      	cmp	r3, #0
 80139f4:	d014      	beq.n	8013a20 <HAL_SPI_TransmitReceive+0x1b8>
 80139f6:	68fb      	ldr	r3, [r7, #12]
 80139f8:	681b      	ldr	r3, [r3, #0]
 80139fa:	68da      	ldr	r2, [r3, #12]
 80139fc:	68fb      	ldr	r3, [r7, #12]
 80139fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013a00:	b292      	uxth	r2, r2
 8013a02:	801a      	strh	r2, [r3, #0]
 8013a04:	68fb      	ldr	r3, [r7, #12]
 8013a06:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013a08:	1c9a      	adds	r2, r3, #2
 8013a0a:	68fb      	ldr	r3, [r7, #12]
 8013a0c:	639a      	str	r2, [r3, #56]	@ 0x38
 8013a0e:	68fb      	ldr	r3, [r7, #12]
 8013a10:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013a12:	b29b      	uxth	r3, r3
 8013a14:	3b01      	subs	r3, #1
 8013a16:	b29a      	uxth	r2, r3
 8013a18:	68fb      	ldr	r3, [r7, #12]
 8013a1a:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8013a1c:	2301      	movs	r3, #1
 8013a1e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013a20:	f7fa f8ca 	bl	800dbb8 <HAL_GetTick>
 8013a24:	4602      	mov	r2, r0
 8013a26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013a28:	1ad3      	subs	r3, r2, r3
 8013a2a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8013a2c:	429a      	cmp	r2, r3
 8013a2e:	d807      	bhi.n	8013a40 <HAL_SPI_TransmitReceive+0x1d8>
 8013a30:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013a32:	f1b3 3fff 	cmp.w	r3, #4294967295
 8013a36:	d003      	beq.n	8013a40 <HAL_SPI_TransmitReceive+0x1d8>
 8013a38:	2303      	movs	r3, #3
 8013a3a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8013a3e:	e0a7      	b.n	8013b90 <HAL_SPI_TransmitReceive+0x328>
 8013a40:	68fb      	ldr	r3, [r7, #12]
 8013a42:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8013a44:	b29b      	uxth	r3, r3
 8013a46:	2b00      	cmp	r3, #0
 8013a48:	d1a6      	bne.n	8013998 <HAL_SPI_TransmitReceive+0x130>
 8013a4a:	68fb      	ldr	r3, [r7, #12]
 8013a4c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013a4e:	b29b      	uxth	r3, r3
 8013a50:	2b00      	cmp	r3, #0
 8013a52:	d1a1      	bne.n	8013998 <HAL_SPI_TransmitReceive+0x130>
 8013a54:	e07c      	b.n	8013b50 <HAL_SPI_TransmitReceive+0x2e8>
 8013a56:	68fb      	ldr	r3, [r7, #12]
 8013a58:	685b      	ldr	r3, [r3, #4]
 8013a5a:	2b00      	cmp	r3, #0
 8013a5c:	d002      	beq.n	8013a64 <HAL_SPI_TransmitReceive+0x1fc>
 8013a5e:	8b7b      	ldrh	r3, [r7, #26]
 8013a60:	2b01      	cmp	r3, #1
 8013a62:	d16b      	bne.n	8013b3c <HAL_SPI_TransmitReceive+0x2d4>
 8013a64:	68fb      	ldr	r3, [r7, #12]
 8013a66:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013a68:	68fb      	ldr	r3, [r7, #12]
 8013a6a:	681b      	ldr	r3, [r3, #0]
 8013a6c:	330c      	adds	r3, #12
 8013a6e:	7812      	ldrb	r2, [r2, #0]
 8013a70:	701a      	strb	r2, [r3, #0]
 8013a72:	68fb      	ldr	r3, [r7, #12]
 8013a74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013a76:	1c5a      	adds	r2, r3, #1
 8013a78:	68fb      	ldr	r3, [r7, #12]
 8013a7a:	631a      	str	r2, [r3, #48]	@ 0x30
 8013a7c:	68fb      	ldr	r3, [r7, #12]
 8013a7e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8013a80:	b29b      	uxth	r3, r3
 8013a82:	3b01      	subs	r3, #1
 8013a84:	b29a      	uxth	r2, r3
 8013a86:	68fb      	ldr	r3, [r7, #12]
 8013a88:	86da      	strh	r2, [r3, #54]	@ 0x36
 8013a8a:	e057      	b.n	8013b3c <HAL_SPI_TransmitReceive+0x2d4>
 8013a8c:	68fb      	ldr	r3, [r7, #12]
 8013a8e:	681b      	ldr	r3, [r3, #0]
 8013a90:	689b      	ldr	r3, [r3, #8]
 8013a92:	f003 0302 	and.w	r3, r3, #2
 8013a96:	2b02      	cmp	r3, #2
 8013a98:	d11c      	bne.n	8013ad4 <HAL_SPI_TransmitReceive+0x26c>
 8013a9a:	68fb      	ldr	r3, [r7, #12]
 8013a9c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8013a9e:	b29b      	uxth	r3, r3
 8013aa0:	2b00      	cmp	r3, #0
 8013aa2:	d017      	beq.n	8013ad4 <HAL_SPI_TransmitReceive+0x26c>
 8013aa4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8013aa6:	2b01      	cmp	r3, #1
 8013aa8:	d114      	bne.n	8013ad4 <HAL_SPI_TransmitReceive+0x26c>
 8013aaa:	68fb      	ldr	r3, [r7, #12]
 8013aac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8013aae:	68fb      	ldr	r3, [r7, #12]
 8013ab0:	681b      	ldr	r3, [r3, #0]
 8013ab2:	330c      	adds	r3, #12
 8013ab4:	7812      	ldrb	r2, [r2, #0]
 8013ab6:	701a      	strb	r2, [r3, #0]
 8013ab8:	68fb      	ldr	r3, [r7, #12]
 8013aba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013abc:	1c5a      	adds	r2, r3, #1
 8013abe:	68fb      	ldr	r3, [r7, #12]
 8013ac0:	631a      	str	r2, [r3, #48]	@ 0x30
 8013ac2:	68fb      	ldr	r3, [r7, #12]
 8013ac4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8013ac6:	b29b      	uxth	r3, r3
 8013ac8:	3b01      	subs	r3, #1
 8013aca:	b29a      	uxth	r2, r3
 8013acc:	68fb      	ldr	r3, [r7, #12]
 8013ace:	86da      	strh	r2, [r3, #54]	@ 0x36
 8013ad0:	2300      	movs	r3, #0
 8013ad2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013ad4:	68fb      	ldr	r3, [r7, #12]
 8013ad6:	681b      	ldr	r3, [r3, #0]
 8013ad8:	689b      	ldr	r3, [r3, #8]
 8013ada:	f003 0301 	and.w	r3, r3, #1
 8013ade:	2b01      	cmp	r3, #1
 8013ae0:	d119      	bne.n	8013b16 <HAL_SPI_TransmitReceive+0x2ae>
 8013ae2:	68fb      	ldr	r3, [r7, #12]
 8013ae4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013ae6:	b29b      	uxth	r3, r3
 8013ae8:	2b00      	cmp	r3, #0
 8013aea:	d014      	beq.n	8013b16 <HAL_SPI_TransmitReceive+0x2ae>
 8013aec:	68fb      	ldr	r3, [r7, #12]
 8013aee:	681b      	ldr	r3, [r3, #0]
 8013af0:	68da      	ldr	r2, [r3, #12]
 8013af2:	68fb      	ldr	r3, [r7, #12]
 8013af4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013af6:	b2d2      	uxtb	r2, r2
 8013af8:	701a      	strb	r2, [r3, #0]
 8013afa:	68fb      	ldr	r3, [r7, #12]
 8013afc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013afe:	1c5a      	adds	r2, r3, #1
 8013b00:	68fb      	ldr	r3, [r7, #12]
 8013b02:	639a      	str	r2, [r3, #56]	@ 0x38
 8013b04:	68fb      	ldr	r3, [r7, #12]
 8013b06:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013b08:	b29b      	uxth	r3, r3
 8013b0a:	3b01      	subs	r3, #1
 8013b0c:	b29a      	uxth	r2, r3
 8013b0e:	68fb      	ldr	r3, [r7, #12]
 8013b10:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8013b12:	2301      	movs	r3, #1
 8013b14:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8013b16:	f7fa f84f 	bl	800dbb8 <HAL_GetTick>
 8013b1a:	4602      	mov	r2, r0
 8013b1c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8013b1e:	1ad3      	subs	r3, r2, r3
 8013b20:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8013b22:	429a      	cmp	r2, r3
 8013b24:	d803      	bhi.n	8013b2e <HAL_SPI_TransmitReceive+0x2c6>
 8013b26:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013b28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8013b2c:	d102      	bne.n	8013b34 <HAL_SPI_TransmitReceive+0x2cc>
 8013b2e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8013b30:	2b00      	cmp	r3, #0
 8013b32:	d103      	bne.n	8013b3c <HAL_SPI_TransmitReceive+0x2d4>
 8013b34:	2303      	movs	r3, #3
 8013b36:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8013b3a:	e029      	b.n	8013b90 <HAL_SPI_TransmitReceive+0x328>
 8013b3c:	68fb      	ldr	r3, [r7, #12]
 8013b3e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8013b40:	b29b      	uxth	r3, r3
 8013b42:	2b00      	cmp	r3, #0
 8013b44:	d1a2      	bne.n	8013a8c <HAL_SPI_TransmitReceive+0x224>
 8013b46:	68fb      	ldr	r3, [r7, #12]
 8013b48:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8013b4a:	b29b      	uxth	r3, r3
 8013b4c:	2b00      	cmp	r3, #0
 8013b4e:	d19d      	bne.n	8013a8c <HAL_SPI_TransmitReceive+0x224>
 8013b50:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8013b52:	6bb9      	ldr	r1, [r7, #56]	@ 0x38
 8013b54:	68f8      	ldr	r0, [r7, #12]
 8013b56:	f000 f917 	bl	8013d88 <SPI_EndRxTxTransaction>
 8013b5a:	4603      	mov	r3, r0
 8013b5c:	2b00      	cmp	r3, #0
 8013b5e:	d006      	beq.n	8013b6e <HAL_SPI_TransmitReceive+0x306>
 8013b60:	2301      	movs	r3, #1
 8013b62:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 8013b66:	68fb      	ldr	r3, [r7, #12]
 8013b68:	2220      	movs	r2, #32
 8013b6a:	655a      	str	r2, [r3, #84]	@ 0x54
 8013b6c:	e010      	b.n	8013b90 <HAL_SPI_TransmitReceive+0x328>
 8013b6e:	68fb      	ldr	r3, [r7, #12]
 8013b70:	689b      	ldr	r3, [r3, #8]
 8013b72:	2b00      	cmp	r3, #0
 8013b74:	d10b      	bne.n	8013b8e <HAL_SPI_TransmitReceive+0x326>
 8013b76:	2300      	movs	r3, #0
 8013b78:	617b      	str	r3, [r7, #20]
 8013b7a:	68fb      	ldr	r3, [r7, #12]
 8013b7c:	681b      	ldr	r3, [r3, #0]
 8013b7e:	68db      	ldr	r3, [r3, #12]
 8013b80:	617b      	str	r3, [r7, #20]
 8013b82:	68fb      	ldr	r3, [r7, #12]
 8013b84:	681b      	ldr	r3, [r3, #0]
 8013b86:	689b      	ldr	r3, [r3, #8]
 8013b88:	617b      	str	r3, [r7, #20]
 8013b8a:	697b      	ldr	r3, [r7, #20]
 8013b8c:	e000      	b.n	8013b90 <HAL_SPI_TransmitReceive+0x328>
 8013b8e:	bf00      	nop
 8013b90:	68fb      	ldr	r3, [r7, #12]
 8013b92:	2201      	movs	r2, #1
 8013b94:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8013b98:	68fb      	ldr	r3, [r7, #12]
 8013b9a:	2200      	movs	r2, #0
 8013b9c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8013ba0:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 8013ba4:	4618      	mov	r0, r3
 8013ba6:	3730      	adds	r7, #48	@ 0x30
 8013ba8:	46bd      	mov	sp, r7
 8013baa:	bd80      	pop	{r7, pc}

08013bac <SPI_WaitFlagStateUntilTimeout>:
 8013bac:	b580      	push	{r7, lr}
 8013bae:	b088      	sub	sp, #32
 8013bb0:	af00      	add	r7, sp, #0
 8013bb2:	60f8      	str	r0, [r7, #12]
 8013bb4:	60b9      	str	r1, [r7, #8]
 8013bb6:	603b      	str	r3, [r7, #0]
 8013bb8:	4613      	mov	r3, r2
 8013bba:	71fb      	strb	r3, [r7, #7]
 8013bbc:	f7f9 fffc 	bl	800dbb8 <HAL_GetTick>
 8013bc0:	4602      	mov	r2, r0
 8013bc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8013bc4:	1a9b      	subs	r3, r3, r2
 8013bc6:	683a      	ldr	r2, [r7, #0]
 8013bc8:	4413      	add	r3, r2
 8013bca:	61fb      	str	r3, [r7, #28]
 8013bcc:	f7f9 fff4 	bl	800dbb8 <HAL_GetTick>
 8013bd0:	61b8      	str	r0, [r7, #24]
 8013bd2:	4b39      	ldr	r3, [pc, #228]	@ (8013cb8 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8013bd4:	681b      	ldr	r3, [r3, #0]
 8013bd6:	015b      	lsls	r3, r3, #5
 8013bd8:	0d1b      	lsrs	r3, r3, #20
 8013bda:	69fa      	ldr	r2, [r7, #28]
 8013bdc:	fb02 f303 	mul.w	r3, r2, r3
 8013be0:	617b      	str	r3, [r7, #20]
 8013be2:	e054      	b.n	8013c8e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8013be4:	683b      	ldr	r3, [r7, #0]
 8013be6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8013bea:	d050      	beq.n	8013c8e <SPI_WaitFlagStateUntilTimeout+0xe2>
 8013bec:	f7f9 ffe4 	bl	800dbb8 <HAL_GetTick>
 8013bf0:	4602      	mov	r2, r0
 8013bf2:	69bb      	ldr	r3, [r7, #24]
 8013bf4:	1ad3      	subs	r3, r2, r3
 8013bf6:	69fa      	ldr	r2, [r7, #28]
 8013bf8:	429a      	cmp	r2, r3
 8013bfa:	d902      	bls.n	8013c02 <SPI_WaitFlagStateUntilTimeout+0x56>
 8013bfc:	69fb      	ldr	r3, [r7, #28]
 8013bfe:	2b00      	cmp	r3, #0
 8013c00:	d13d      	bne.n	8013c7e <SPI_WaitFlagStateUntilTimeout+0xd2>
 8013c02:	68fb      	ldr	r3, [r7, #12]
 8013c04:	681b      	ldr	r3, [r3, #0]
 8013c06:	685a      	ldr	r2, [r3, #4]
 8013c08:	68fb      	ldr	r3, [r7, #12]
 8013c0a:	681b      	ldr	r3, [r3, #0]
 8013c0c:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8013c10:	605a      	str	r2, [r3, #4]
 8013c12:	68fb      	ldr	r3, [r7, #12]
 8013c14:	685b      	ldr	r3, [r3, #4]
 8013c16:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8013c1a:	d111      	bne.n	8013c40 <SPI_WaitFlagStateUntilTimeout+0x94>
 8013c1c:	68fb      	ldr	r3, [r7, #12]
 8013c1e:	689b      	ldr	r3, [r3, #8]
 8013c20:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8013c24:	d004      	beq.n	8013c30 <SPI_WaitFlagStateUntilTimeout+0x84>
 8013c26:	68fb      	ldr	r3, [r7, #12]
 8013c28:	689b      	ldr	r3, [r3, #8]
 8013c2a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013c2e:	d107      	bne.n	8013c40 <SPI_WaitFlagStateUntilTimeout+0x94>
 8013c30:	68fb      	ldr	r3, [r7, #12]
 8013c32:	681b      	ldr	r3, [r3, #0]
 8013c34:	681a      	ldr	r2, [r3, #0]
 8013c36:	68fb      	ldr	r3, [r7, #12]
 8013c38:	681b      	ldr	r3, [r3, #0]
 8013c3a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8013c3e:	601a      	str	r2, [r3, #0]
 8013c40:	68fb      	ldr	r3, [r7, #12]
 8013c42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013c44:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8013c48:	d10f      	bne.n	8013c6a <SPI_WaitFlagStateUntilTimeout+0xbe>
 8013c4a:	68fb      	ldr	r3, [r7, #12]
 8013c4c:	681b      	ldr	r3, [r3, #0]
 8013c4e:	681a      	ldr	r2, [r3, #0]
 8013c50:	68fb      	ldr	r3, [r7, #12]
 8013c52:	681b      	ldr	r3, [r3, #0]
 8013c54:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8013c58:	601a      	str	r2, [r3, #0]
 8013c5a:	68fb      	ldr	r3, [r7, #12]
 8013c5c:	681b      	ldr	r3, [r3, #0]
 8013c5e:	681a      	ldr	r2, [r3, #0]
 8013c60:	68fb      	ldr	r3, [r7, #12]
 8013c62:	681b      	ldr	r3, [r3, #0]
 8013c64:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8013c68:	601a      	str	r2, [r3, #0]
 8013c6a:	68fb      	ldr	r3, [r7, #12]
 8013c6c:	2201      	movs	r2, #1
 8013c6e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8013c72:	68fb      	ldr	r3, [r7, #12]
 8013c74:	2200      	movs	r2, #0
 8013c76:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8013c7a:	2303      	movs	r3, #3
 8013c7c:	e017      	b.n	8013cae <SPI_WaitFlagStateUntilTimeout+0x102>
 8013c7e:	697b      	ldr	r3, [r7, #20]
 8013c80:	2b00      	cmp	r3, #0
 8013c82:	d101      	bne.n	8013c88 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8013c84:	2300      	movs	r3, #0
 8013c86:	61fb      	str	r3, [r7, #28]
 8013c88:	697b      	ldr	r3, [r7, #20]
 8013c8a:	3b01      	subs	r3, #1
 8013c8c:	617b      	str	r3, [r7, #20]
 8013c8e:	68fb      	ldr	r3, [r7, #12]
 8013c90:	681b      	ldr	r3, [r3, #0]
 8013c92:	689a      	ldr	r2, [r3, #8]
 8013c94:	68bb      	ldr	r3, [r7, #8]
 8013c96:	4013      	ands	r3, r2
 8013c98:	68ba      	ldr	r2, [r7, #8]
 8013c9a:	429a      	cmp	r2, r3
 8013c9c:	bf0c      	ite	eq
 8013c9e:	2301      	moveq	r3, #1
 8013ca0:	2300      	movne	r3, #0
 8013ca2:	b2db      	uxtb	r3, r3
 8013ca4:	461a      	mov	r2, r3
 8013ca6:	79fb      	ldrb	r3, [r7, #7]
 8013ca8:	429a      	cmp	r2, r3
 8013caa:	d19b      	bne.n	8013be4 <SPI_WaitFlagStateUntilTimeout+0x38>
 8013cac:	2300      	movs	r3, #0
 8013cae:	4618      	mov	r0, r3
 8013cb0:	3720      	adds	r7, #32
 8013cb2:	46bd      	mov	sp, r7
 8013cb4:	bd80      	pop	{r7, pc}
 8013cb6:	bf00      	nop
 8013cb8:	20000004 	.word	0x20000004

08013cbc <SPI_EndRxTransaction>:
 8013cbc:	b580      	push	{r7, lr}
 8013cbe:	b086      	sub	sp, #24
 8013cc0:	af02      	add	r7, sp, #8
 8013cc2:	60f8      	str	r0, [r7, #12]
 8013cc4:	60b9      	str	r1, [r7, #8]
 8013cc6:	607a      	str	r2, [r7, #4]
 8013cc8:	68fb      	ldr	r3, [r7, #12]
 8013cca:	685b      	ldr	r3, [r3, #4]
 8013ccc:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8013cd0:	d111      	bne.n	8013cf6 <SPI_EndRxTransaction+0x3a>
 8013cd2:	68fb      	ldr	r3, [r7, #12]
 8013cd4:	689b      	ldr	r3, [r3, #8]
 8013cd6:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8013cda:	d004      	beq.n	8013ce6 <SPI_EndRxTransaction+0x2a>
 8013cdc:	68fb      	ldr	r3, [r7, #12]
 8013cde:	689b      	ldr	r3, [r3, #8]
 8013ce0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013ce4:	d107      	bne.n	8013cf6 <SPI_EndRxTransaction+0x3a>
 8013ce6:	68fb      	ldr	r3, [r7, #12]
 8013ce8:	681b      	ldr	r3, [r3, #0]
 8013cea:	681a      	ldr	r2, [r3, #0]
 8013cec:	68fb      	ldr	r3, [r7, #12]
 8013cee:	681b      	ldr	r3, [r3, #0]
 8013cf0:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8013cf4:	601a      	str	r2, [r3, #0]
 8013cf6:	68fb      	ldr	r3, [r7, #12]
 8013cf8:	685b      	ldr	r3, [r3, #4]
 8013cfa:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8013cfe:	d12a      	bne.n	8013d56 <SPI_EndRxTransaction+0x9a>
 8013d00:	68fb      	ldr	r3, [r7, #12]
 8013d02:	689b      	ldr	r3, [r3, #8]
 8013d04:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8013d08:	d012      	beq.n	8013d30 <SPI_EndRxTransaction+0x74>
 8013d0a:	687b      	ldr	r3, [r7, #4]
 8013d0c:	9300      	str	r3, [sp, #0]
 8013d0e:	68bb      	ldr	r3, [r7, #8]
 8013d10:	2200      	movs	r2, #0
 8013d12:	2180      	movs	r1, #128	@ 0x80
 8013d14:	68f8      	ldr	r0, [r7, #12]
 8013d16:	f7ff ff49 	bl	8013bac <SPI_WaitFlagStateUntilTimeout>
 8013d1a:	4603      	mov	r3, r0
 8013d1c:	2b00      	cmp	r3, #0
 8013d1e:	d02d      	beq.n	8013d7c <SPI_EndRxTransaction+0xc0>
 8013d20:	68fb      	ldr	r3, [r7, #12]
 8013d22:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013d24:	f043 0220 	orr.w	r2, r3, #32
 8013d28:	68fb      	ldr	r3, [r7, #12]
 8013d2a:	655a      	str	r2, [r3, #84]	@ 0x54
 8013d2c:	2303      	movs	r3, #3
 8013d2e:	e026      	b.n	8013d7e <SPI_EndRxTransaction+0xc2>
 8013d30:	687b      	ldr	r3, [r7, #4]
 8013d32:	9300      	str	r3, [sp, #0]
 8013d34:	68bb      	ldr	r3, [r7, #8]
 8013d36:	2200      	movs	r2, #0
 8013d38:	2101      	movs	r1, #1
 8013d3a:	68f8      	ldr	r0, [r7, #12]
 8013d3c:	f7ff ff36 	bl	8013bac <SPI_WaitFlagStateUntilTimeout>
 8013d40:	4603      	mov	r3, r0
 8013d42:	2b00      	cmp	r3, #0
 8013d44:	d01a      	beq.n	8013d7c <SPI_EndRxTransaction+0xc0>
 8013d46:	68fb      	ldr	r3, [r7, #12]
 8013d48:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013d4a:	f043 0220 	orr.w	r2, r3, #32
 8013d4e:	68fb      	ldr	r3, [r7, #12]
 8013d50:	655a      	str	r2, [r3, #84]	@ 0x54
 8013d52:	2303      	movs	r3, #3
 8013d54:	e013      	b.n	8013d7e <SPI_EndRxTransaction+0xc2>
 8013d56:	687b      	ldr	r3, [r7, #4]
 8013d58:	9300      	str	r3, [sp, #0]
 8013d5a:	68bb      	ldr	r3, [r7, #8]
 8013d5c:	2200      	movs	r2, #0
 8013d5e:	2101      	movs	r1, #1
 8013d60:	68f8      	ldr	r0, [r7, #12]
 8013d62:	f7ff ff23 	bl	8013bac <SPI_WaitFlagStateUntilTimeout>
 8013d66:	4603      	mov	r3, r0
 8013d68:	2b00      	cmp	r3, #0
 8013d6a:	d007      	beq.n	8013d7c <SPI_EndRxTransaction+0xc0>
 8013d6c:	68fb      	ldr	r3, [r7, #12]
 8013d6e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013d70:	f043 0220 	orr.w	r2, r3, #32
 8013d74:	68fb      	ldr	r3, [r7, #12]
 8013d76:	655a      	str	r2, [r3, #84]	@ 0x54
 8013d78:	2303      	movs	r3, #3
 8013d7a:	e000      	b.n	8013d7e <SPI_EndRxTransaction+0xc2>
 8013d7c:	2300      	movs	r3, #0
 8013d7e:	4618      	mov	r0, r3
 8013d80:	3710      	adds	r7, #16
 8013d82:	46bd      	mov	sp, r7
 8013d84:	bd80      	pop	{r7, pc}
	...

08013d88 <SPI_EndRxTxTransaction>:
 8013d88:	b580      	push	{r7, lr}
 8013d8a:	b088      	sub	sp, #32
 8013d8c:	af02      	add	r7, sp, #8
 8013d8e:	60f8      	str	r0, [r7, #12]
 8013d90:	60b9      	str	r1, [r7, #8]
 8013d92:	607a      	str	r2, [r7, #4]
 8013d94:	4b1b      	ldr	r3, [pc, #108]	@ (8013e04 <SPI_EndRxTxTransaction+0x7c>)
 8013d96:	681b      	ldr	r3, [r3, #0]
 8013d98:	4a1b      	ldr	r2, [pc, #108]	@ (8013e08 <SPI_EndRxTxTransaction+0x80>)
 8013d9a:	fba2 2303 	umull	r2, r3, r2, r3
 8013d9e:	0d5b      	lsrs	r3, r3, #21
 8013da0:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8013da4:	fb02 f303 	mul.w	r3, r2, r3
 8013da8:	617b      	str	r3, [r7, #20]
 8013daa:	68fb      	ldr	r3, [r7, #12]
 8013dac:	685b      	ldr	r3, [r3, #4]
 8013dae:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8013db2:	d112      	bne.n	8013dda <SPI_EndRxTxTransaction+0x52>
 8013db4:	687b      	ldr	r3, [r7, #4]
 8013db6:	9300      	str	r3, [sp, #0]
 8013db8:	68bb      	ldr	r3, [r7, #8]
 8013dba:	2200      	movs	r2, #0
 8013dbc:	2180      	movs	r1, #128	@ 0x80
 8013dbe:	68f8      	ldr	r0, [r7, #12]
 8013dc0:	f7ff fef4 	bl	8013bac <SPI_WaitFlagStateUntilTimeout>
 8013dc4:	4603      	mov	r3, r0
 8013dc6:	2b00      	cmp	r3, #0
 8013dc8:	d016      	beq.n	8013df8 <SPI_EndRxTxTransaction+0x70>
 8013dca:	68fb      	ldr	r3, [r7, #12]
 8013dcc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013dce:	f043 0220 	orr.w	r2, r3, #32
 8013dd2:	68fb      	ldr	r3, [r7, #12]
 8013dd4:	655a      	str	r2, [r3, #84]	@ 0x54
 8013dd6:	2303      	movs	r3, #3
 8013dd8:	e00f      	b.n	8013dfa <SPI_EndRxTxTransaction+0x72>
 8013dda:	697b      	ldr	r3, [r7, #20]
 8013ddc:	2b00      	cmp	r3, #0
 8013dde:	d00a      	beq.n	8013df6 <SPI_EndRxTxTransaction+0x6e>
 8013de0:	697b      	ldr	r3, [r7, #20]
 8013de2:	3b01      	subs	r3, #1
 8013de4:	617b      	str	r3, [r7, #20]
 8013de6:	68fb      	ldr	r3, [r7, #12]
 8013de8:	681b      	ldr	r3, [r3, #0]
 8013dea:	689b      	ldr	r3, [r3, #8]
 8013dec:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8013df0:	2b80      	cmp	r3, #128	@ 0x80
 8013df2:	d0f2      	beq.n	8013dda <SPI_EndRxTxTransaction+0x52>
 8013df4:	e000      	b.n	8013df8 <SPI_EndRxTxTransaction+0x70>
 8013df6:	bf00      	nop
 8013df8:	2300      	movs	r3, #0
 8013dfa:	4618      	mov	r0, r3
 8013dfc:	3718      	adds	r7, #24
 8013dfe:	46bd      	mov	sp, r7
 8013e00:	bd80      	pop	{r7, pc}
 8013e02:	bf00      	nop
 8013e04:	20000004 	.word	0x20000004
 8013e08:	165e9f81 	.word	0x165e9f81

08013e0c <HAL_TIM_Base_Init>:
 8013e0c:	b580      	push	{r7, lr}
 8013e0e:	b082      	sub	sp, #8
 8013e10:	af00      	add	r7, sp, #0
 8013e12:	6078      	str	r0, [r7, #4]
 8013e14:	687b      	ldr	r3, [r7, #4]
 8013e16:	2b00      	cmp	r3, #0
 8013e18:	d101      	bne.n	8013e1e <HAL_TIM_Base_Init+0x12>
 8013e1a:	2301      	movs	r3, #1
 8013e1c:	e041      	b.n	8013ea2 <HAL_TIM_Base_Init+0x96>
 8013e1e:	687b      	ldr	r3, [r7, #4]
 8013e20:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8013e24:	b2db      	uxtb	r3, r3
 8013e26:	2b00      	cmp	r3, #0
 8013e28:	d106      	bne.n	8013e38 <HAL_TIM_Base_Init+0x2c>
 8013e2a:	687b      	ldr	r3, [r7, #4]
 8013e2c:	2200      	movs	r2, #0
 8013e2e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8013e32:	6878      	ldr	r0, [r7, #4]
 8013e34:	f7f0 faba 	bl	80043ac <HAL_TIM_Base_MspInit>
 8013e38:	687b      	ldr	r3, [r7, #4]
 8013e3a:	2202      	movs	r2, #2
 8013e3c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8013e40:	687b      	ldr	r3, [r7, #4]
 8013e42:	681a      	ldr	r2, [r3, #0]
 8013e44:	687b      	ldr	r3, [r7, #4]
 8013e46:	3304      	adds	r3, #4
 8013e48:	4619      	mov	r1, r3
 8013e4a:	4610      	mov	r0, r2
 8013e4c:	f000 fd24 	bl	8014898 <TIM_Base_SetConfig>
 8013e50:	687b      	ldr	r3, [r7, #4]
 8013e52:	2201      	movs	r2, #1
 8013e54:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8013e58:	687b      	ldr	r3, [r7, #4]
 8013e5a:	2201      	movs	r2, #1
 8013e5c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8013e60:	687b      	ldr	r3, [r7, #4]
 8013e62:	2201      	movs	r2, #1
 8013e64:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8013e68:	687b      	ldr	r3, [r7, #4]
 8013e6a:	2201      	movs	r2, #1
 8013e6c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8013e70:	687b      	ldr	r3, [r7, #4]
 8013e72:	2201      	movs	r2, #1
 8013e74:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8013e78:	687b      	ldr	r3, [r7, #4]
 8013e7a:	2201      	movs	r2, #1
 8013e7c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8013e80:	687b      	ldr	r3, [r7, #4]
 8013e82:	2201      	movs	r2, #1
 8013e84:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8013e88:	687b      	ldr	r3, [r7, #4]
 8013e8a:	2201      	movs	r2, #1
 8013e8c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8013e90:	687b      	ldr	r3, [r7, #4]
 8013e92:	2201      	movs	r2, #1
 8013e94:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8013e98:	687b      	ldr	r3, [r7, #4]
 8013e9a:	2201      	movs	r2, #1
 8013e9c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8013ea0:	2300      	movs	r3, #0
 8013ea2:	4618      	mov	r0, r3
 8013ea4:	3708      	adds	r7, #8
 8013ea6:	46bd      	mov	sp, r7
 8013ea8:	bd80      	pop	{r7, pc}
	...

08013eac <HAL_TIM_Base_Start_IT>:
 8013eac:	b480      	push	{r7}
 8013eae:	b085      	sub	sp, #20
 8013eb0:	af00      	add	r7, sp, #0
 8013eb2:	6078      	str	r0, [r7, #4]
 8013eb4:	687b      	ldr	r3, [r7, #4]
 8013eb6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8013eba:	b2db      	uxtb	r3, r3
 8013ebc:	2b01      	cmp	r3, #1
 8013ebe:	d001      	beq.n	8013ec4 <HAL_TIM_Base_Start_IT+0x18>
 8013ec0:	2301      	movs	r3, #1
 8013ec2:	e04e      	b.n	8013f62 <HAL_TIM_Base_Start_IT+0xb6>
 8013ec4:	687b      	ldr	r3, [r7, #4]
 8013ec6:	2202      	movs	r2, #2
 8013ec8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8013ecc:	687b      	ldr	r3, [r7, #4]
 8013ece:	681b      	ldr	r3, [r3, #0]
 8013ed0:	68da      	ldr	r2, [r3, #12]
 8013ed2:	687b      	ldr	r3, [r7, #4]
 8013ed4:	681b      	ldr	r3, [r3, #0]
 8013ed6:	f042 0201 	orr.w	r2, r2, #1
 8013eda:	60da      	str	r2, [r3, #12]
 8013edc:	687b      	ldr	r3, [r7, #4]
 8013ede:	681b      	ldr	r3, [r3, #0]
 8013ee0:	4a23      	ldr	r2, [pc, #140]	@ (8013f70 <HAL_TIM_Base_Start_IT+0xc4>)
 8013ee2:	4293      	cmp	r3, r2
 8013ee4:	d022      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013ee6:	687b      	ldr	r3, [r7, #4]
 8013ee8:	681b      	ldr	r3, [r3, #0]
 8013eea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8013eee:	d01d      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013ef0:	687b      	ldr	r3, [r7, #4]
 8013ef2:	681b      	ldr	r3, [r3, #0]
 8013ef4:	4a1f      	ldr	r2, [pc, #124]	@ (8013f74 <HAL_TIM_Base_Start_IT+0xc8>)
 8013ef6:	4293      	cmp	r3, r2
 8013ef8:	d018      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013efa:	687b      	ldr	r3, [r7, #4]
 8013efc:	681b      	ldr	r3, [r3, #0]
 8013efe:	4a1e      	ldr	r2, [pc, #120]	@ (8013f78 <HAL_TIM_Base_Start_IT+0xcc>)
 8013f00:	4293      	cmp	r3, r2
 8013f02:	d013      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013f04:	687b      	ldr	r3, [r7, #4]
 8013f06:	681b      	ldr	r3, [r3, #0]
 8013f08:	4a1c      	ldr	r2, [pc, #112]	@ (8013f7c <HAL_TIM_Base_Start_IT+0xd0>)
 8013f0a:	4293      	cmp	r3, r2
 8013f0c:	d00e      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013f0e:	687b      	ldr	r3, [r7, #4]
 8013f10:	681b      	ldr	r3, [r3, #0]
 8013f12:	4a1b      	ldr	r2, [pc, #108]	@ (8013f80 <HAL_TIM_Base_Start_IT+0xd4>)
 8013f14:	4293      	cmp	r3, r2
 8013f16:	d009      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013f18:	687b      	ldr	r3, [r7, #4]
 8013f1a:	681b      	ldr	r3, [r3, #0]
 8013f1c:	4a19      	ldr	r2, [pc, #100]	@ (8013f84 <HAL_TIM_Base_Start_IT+0xd8>)
 8013f1e:	4293      	cmp	r3, r2
 8013f20:	d004      	beq.n	8013f2c <HAL_TIM_Base_Start_IT+0x80>
 8013f22:	687b      	ldr	r3, [r7, #4]
 8013f24:	681b      	ldr	r3, [r3, #0]
 8013f26:	4a18      	ldr	r2, [pc, #96]	@ (8013f88 <HAL_TIM_Base_Start_IT+0xdc>)
 8013f28:	4293      	cmp	r3, r2
 8013f2a:	d111      	bne.n	8013f50 <HAL_TIM_Base_Start_IT+0xa4>
 8013f2c:	687b      	ldr	r3, [r7, #4]
 8013f2e:	681b      	ldr	r3, [r3, #0]
 8013f30:	689b      	ldr	r3, [r3, #8]
 8013f32:	f003 0307 	and.w	r3, r3, #7
 8013f36:	60fb      	str	r3, [r7, #12]
 8013f38:	68fb      	ldr	r3, [r7, #12]
 8013f3a:	2b06      	cmp	r3, #6
 8013f3c:	d010      	beq.n	8013f60 <HAL_TIM_Base_Start_IT+0xb4>
 8013f3e:	687b      	ldr	r3, [r7, #4]
 8013f40:	681b      	ldr	r3, [r3, #0]
 8013f42:	681a      	ldr	r2, [r3, #0]
 8013f44:	687b      	ldr	r3, [r7, #4]
 8013f46:	681b      	ldr	r3, [r3, #0]
 8013f48:	f042 0201 	orr.w	r2, r2, #1
 8013f4c:	601a      	str	r2, [r3, #0]
 8013f4e:	e007      	b.n	8013f60 <HAL_TIM_Base_Start_IT+0xb4>
 8013f50:	687b      	ldr	r3, [r7, #4]
 8013f52:	681b      	ldr	r3, [r3, #0]
 8013f54:	681a      	ldr	r2, [r3, #0]
 8013f56:	687b      	ldr	r3, [r7, #4]
 8013f58:	681b      	ldr	r3, [r3, #0]
 8013f5a:	f042 0201 	orr.w	r2, r2, #1
 8013f5e:	601a      	str	r2, [r3, #0]
 8013f60:	2300      	movs	r3, #0
 8013f62:	4618      	mov	r0, r3
 8013f64:	3714      	adds	r7, #20
 8013f66:	46bd      	mov	sp, r7
 8013f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013f6c:	4770      	bx	lr
 8013f6e:	bf00      	nop
 8013f70:	40010000 	.word	0x40010000
 8013f74:	40000400 	.word	0x40000400
 8013f78:	40000800 	.word	0x40000800
 8013f7c:	40000c00 	.word	0x40000c00
 8013f80:	40010400 	.word	0x40010400
 8013f84:	40014000 	.word	0x40014000
 8013f88:	40001800 	.word	0x40001800

08013f8c <HAL_TIM_OC_Init>:
 8013f8c:	b580      	push	{r7, lr}
 8013f8e:	b082      	sub	sp, #8
 8013f90:	af00      	add	r7, sp, #0
 8013f92:	6078      	str	r0, [r7, #4]
 8013f94:	687b      	ldr	r3, [r7, #4]
 8013f96:	2b00      	cmp	r3, #0
 8013f98:	d101      	bne.n	8013f9e <HAL_TIM_OC_Init+0x12>
 8013f9a:	2301      	movs	r3, #1
 8013f9c:	e041      	b.n	8014022 <HAL_TIM_OC_Init+0x96>
 8013f9e:	687b      	ldr	r3, [r7, #4]
 8013fa0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8013fa4:	b2db      	uxtb	r3, r3
 8013fa6:	2b00      	cmp	r3, #0
 8013fa8:	d106      	bne.n	8013fb8 <HAL_TIM_OC_Init+0x2c>
 8013faa:	687b      	ldr	r3, [r7, #4]
 8013fac:	2200      	movs	r2, #0
 8013fae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8013fb2:	6878      	ldr	r0, [r7, #4]
 8013fb4:	f000 f839 	bl	801402a <HAL_TIM_OC_MspInit>
 8013fb8:	687b      	ldr	r3, [r7, #4]
 8013fba:	2202      	movs	r2, #2
 8013fbc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8013fc0:	687b      	ldr	r3, [r7, #4]
 8013fc2:	681a      	ldr	r2, [r3, #0]
 8013fc4:	687b      	ldr	r3, [r7, #4]
 8013fc6:	3304      	adds	r3, #4
 8013fc8:	4619      	mov	r1, r3
 8013fca:	4610      	mov	r0, r2
 8013fcc:	f000 fc64 	bl	8014898 <TIM_Base_SetConfig>
 8013fd0:	687b      	ldr	r3, [r7, #4]
 8013fd2:	2201      	movs	r2, #1
 8013fd4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8013fd8:	687b      	ldr	r3, [r7, #4]
 8013fda:	2201      	movs	r2, #1
 8013fdc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8013fe0:	687b      	ldr	r3, [r7, #4]
 8013fe2:	2201      	movs	r2, #1
 8013fe4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8013fe8:	687b      	ldr	r3, [r7, #4]
 8013fea:	2201      	movs	r2, #1
 8013fec:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8013ff0:	687b      	ldr	r3, [r7, #4]
 8013ff2:	2201      	movs	r2, #1
 8013ff4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8013ff8:	687b      	ldr	r3, [r7, #4]
 8013ffa:	2201      	movs	r2, #1
 8013ffc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8014000:	687b      	ldr	r3, [r7, #4]
 8014002:	2201      	movs	r2, #1
 8014004:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8014008:	687b      	ldr	r3, [r7, #4]
 801400a:	2201      	movs	r2, #1
 801400c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8014010:	687b      	ldr	r3, [r7, #4]
 8014012:	2201      	movs	r2, #1
 8014014:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8014018:	687b      	ldr	r3, [r7, #4]
 801401a:	2201      	movs	r2, #1
 801401c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8014020:	2300      	movs	r3, #0
 8014022:	4618      	mov	r0, r3
 8014024:	3708      	adds	r7, #8
 8014026:	46bd      	mov	sp, r7
 8014028:	bd80      	pop	{r7, pc}

0801402a <HAL_TIM_OC_MspInit>:
 801402a:	b480      	push	{r7}
 801402c:	b083      	sub	sp, #12
 801402e:	af00      	add	r7, sp, #0
 8014030:	6078      	str	r0, [r7, #4]
 8014032:	bf00      	nop
 8014034:	370c      	adds	r7, #12
 8014036:	46bd      	mov	sp, r7
 8014038:	f85d 7b04 	ldr.w	r7, [sp], #4
 801403c:	4770      	bx	lr

0801403e <HAL_TIM_PWM_Init>:
 801403e:	b580      	push	{r7, lr}
 8014040:	b082      	sub	sp, #8
 8014042:	af00      	add	r7, sp, #0
 8014044:	6078      	str	r0, [r7, #4]
 8014046:	687b      	ldr	r3, [r7, #4]
 8014048:	2b00      	cmp	r3, #0
 801404a:	d101      	bne.n	8014050 <HAL_TIM_PWM_Init+0x12>
 801404c:	2301      	movs	r3, #1
 801404e:	e041      	b.n	80140d4 <HAL_TIM_PWM_Init+0x96>
 8014050:	687b      	ldr	r3, [r7, #4]
 8014052:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8014056:	b2db      	uxtb	r3, r3
 8014058:	2b00      	cmp	r3, #0
 801405a:	d106      	bne.n	801406a <HAL_TIM_PWM_Init+0x2c>
 801405c:	687b      	ldr	r3, [r7, #4]
 801405e:	2200      	movs	r2, #0
 8014060:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8014064:	6878      	ldr	r0, [r7, #4]
 8014066:	f7f0 f9df 	bl	8004428 <HAL_TIM_PWM_MspInit>
 801406a:	687b      	ldr	r3, [r7, #4]
 801406c:	2202      	movs	r2, #2
 801406e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8014072:	687b      	ldr	r3, [r7, #4]
 8014074:	681a      	ldr	r2, [r3, #0]
 8014076:	687b      	ldr	r3, [r7, #4]
 8014078:	3304      	adds	r3, #4
 801407a:	4619      	mov	r1, r3
 801407c:	4610      	mov	r0, r2
 801407e:	f000 fc0b 	bl	8014898 <TIM_Base_SetConfig>
 8014082:	687b      	ldr	r3, [r7, #4]
 8014084:	2201      	movs	r2, #1
 8014086:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 801408a:	687b      	ldr	r3, [r7, #4]
 801408c:	2201      	movs	r2, #1
 801408e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8014092:	687b      	ldr	r3, [r7, #4]
 8014094:	2201      	movs	r2, #1
 8014096:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 801409a:	687b      	ldr	r3, [r7, #4]
 801409c:	2201      	movs	r2, #1
 801409e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80140a2:	687b      	ldr	r3, [r7, #4]
 80140a4:	2201      	movs	r2, #1
 80140a6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80140aa:	687b      	ldr	r3, [r7, #4]
 80140ac:	2201      	movs	r2, #1
 80140ae:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80140b2:	687b      	ldr	r3, [r7, #4]
 80140b4:	2201      	movs	r2, #1
 80140b6:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80140ba:	687b      	ldr	r3, [r7, #4]
 80140bc:	2201      	movs	r2, #1
 80140be:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80140c2:	687b      	ldr	r3, [r7, #4]
 80140c4:	2201      	movs	r2, #1
 80140c6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80140ca:	687b      	ldr	r3, [r7, #4]
 80140cc:	2201      	movs	r2, #1
 80140ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80140d2:	2300      	movs	r3, #0
 80140d4:	4618      	mov	r0, r3
 80140d6:	3708      	adds	r7, #8
 80140d8:	46bd      	mov	sp, r7
 80140da:	bd80      	pop	{r7, pc}

080140dc <HAL_TIM_PWM_Start>:
 80140dc:	b580      	push	{r7, lr}
 80140de:	b084      	sub	sp, #16
 80140e0:	af00      	add	r7, sp, #0
 80140e2:	6078      	str	r0, [r7, #4]
 80140e4:	6039      	str	r1, [r7, #0]
 80140e6:	683b      	ldr	r3, [r7, #0]
 80140e8:	2b00      	cmp	r3, #0
 80140ea:	d109      	bne.n	8014100 <HAL_TIM_PWM_Start+0x24>
 80140ec:	687b      	ldr	r3, [r7, #4]
 80140ee:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80140f2:	b2db      	uxtb	r3, r3
 80140f4:	2b01      	cmp	r3, #1
 80140f6:	bf14      	ite	ne
 80140f8:	2301      	movne	r3, #1
 80140fa:	2300      	moveq	r3, #0
 80140fc:	b2db      	uxtb	r3, r3
 80140fe:	e022      	b.n	8014146 <HAL_TIM_PWM_Start+0x6a>
 8014100:	683b      	ldr	r3, [r7, #0]
 8014102:	2b04      	cmp	r3, #4
 8014104:	d109      	bne.n	801411a <HAL_TIM_PWM_Start+0x3e>
 8014106:	687b      	ldr	r3, [r7, #4]
 8014108:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 801410c:	b2db      	uxtb	r3, r3
 801410e:	2b01      	cmp	r3, #1
 8014110:	bf14      	ite	ne
 8014112:	2301      	movne	r3, #1
 8014114:	2300      	moveq	r3, #0
 8014116:	b2db      	uxtb	r3, r3
 8014118:	e015      	b.n	8014146 <HAL_TIM_PWM_Start+0x6a>
 801411a:	683b      	ldr	r3, [r7, #0]
 801411c:	2b08      	cmp	r3, #8
 801411e:	d109      	bne.n	8014134 <HAL_TIM_PWM_Start+0x58>
 8014120:	687b      	ldr	r3, [r7, #4]
 8014122:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8014126:	b2db      	uxtb	r3, r3
 8014128:	2b01      	cmp	r3, #1
 801412a:	bf14      	ite	ne
 801412c:	2301      	movne	r3, #1
 801412e:	2300      	moveq	r3, #0
 8014130:	b2db      	uxtb	r3, r3
 8014132:	e008      	b.n	8014146 <HAL_TIM_PWM_Start+0x6a>
 8014134:	687b      	ldr	r3, [r7, #4]
 8014136:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 801413a:	b2db      	uxtb	r3, r3
 801413c:	2b01      	cmp	r3, #1
 801413e:	bf14      	ite	ne
 8014140:	2301      	movne	r3, #1
 8014142:	2300      	moveq	r3, #0
 8014144:	b2db      	uxtb	r3, r3
 8014146:	2b00      	cmp	r3, #0
 8014148:	d001      	beq.n	801414e <HAL_TIM_PWM_Start+0x72>
 801414a:	2301      	movs	r3, #1
 801414c:	e07c      	b.n	8014248 <HAL_TIM_PWM_Start+0x16c>
 801414e:	683b      	ldr	r3, [r7, #0]
 8014150:	2b00      	cmp	r3, #0
 8014152:	d104      	bne.n	801415e <HAL_TIM_PWM_Start+0x82>
 8014154:	687b      	ldr	r3, [r7, #4]
 8014156:	2202      	movs	r2, #2
 8014158:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 801415c:	e013      	b.n	8014186 <HAL_TIM_PWM_Start+0xaa>
 801415e:	683b      	ldr	r3, [r7, #0]
 8014160:	2b04      	cmp	r3, #4
 8014162:	d104      	bne.n	801416e <HAL_TIM_PWM_Start+0x92>
 8014164:	687b      	ldr	r3, [r7, #4]
 8014166:	2202      	movs	r2, #2
 8014168:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 801416c:	e00b      	b.n	8014186 <HAL_TIM_PWM_Start+0xaa>
 801416e:	683b      	ldr	r3, [r7, #0]
 8014170:	2b08      	cmp	r3, #8
 8014172:	d104      	bne.n	801417e <HAL_TIM_PWM_Start+0xa2>
 8014174:	687b      	ldr	r3, [r7, #4]
 8014176:	2202      	movs	r2, #2
 8014178:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 801417c:	e003      	b.n	8014186 <HAL_TIM_PWM_Start+0xaa>
 801417e:	687b      	ldr	r3, [r7, #4]
 8014180:	2202      	movs	r2, #2
 8014182:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8014186:	687b      	ldr	r3, [r7, #4]
 8014188:	681b      	ldr	r3, [r3, #0]
 801418a:	2201      	movs	r2, #1
 801418c:	6839      	ldr	r1, [r7, #0]
 801418e:	4618      	mov	r0, r3
 8014190:	f000 fe6c 	bl	8014e6c <TIM_CCxChannelCmd>
 8014194:	687b      	ldr	r3, [r7, #4]
 8014196:	681b      	ldr	r3, [r3, #0]
 8014198:	4a2d      	ldr	r2, [pc, #180]	@ (8014250 <HAL_TIM_PWM_Start+0x174>)
 801419a:	4293      	cmp	r3, r2
 801419c:	d004      	beq.n	80141a8 <HAL_TIM_PWM_Start+0xcc>
 801419e:	687b      	ldr	r3, [r7, #4]
 80141a0:	681b      	ldr	r3, [r3, #0]
 80141a2:	4a2c      	ldr	r2, [pc, #176]	@ (8014254 <HAL_TIM_PWM_Start+0x178>)
 80141a4:	4293      	cmp	r3, r2
 80141a6:	d101      	bne.n	80141ac <HAL_TIM_PWM_Start+0xd0>
 80141a8:	2301      	movs	r3, #1
 80141aa:	e000      	b.n	80141ae <HAL_TIM_PWM_Start+0xd2>
 80141ac:	2300      	movs	r3, #0
 80141ae:	2b00      	cmp	r3, #0
 80141b0:	d007      	beq.n	80141c2 <HAL_TIM_PWM_Start+0xe6>
 80141b2:	687b      	ldr	r3, [r7, #4]
 80141b4:	681b      	ldr	r3, [r3, #0]
 80141b6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80141b8:	687b      	ldr	r3, [r7, #4]
 80141ba:	681b      	ldr	r3, [r3, #0]
 80141bc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80141c0:	645a      	str	r2, [r3, #68]	@ 0x44
 80141c2:	687b      	ldr	r3, [r7, #4]
 80141c4:	681b      	ldr	r3, [r3, #0]
 80141c6:	4a22      	ldr	r2, [pc, #136]	@ (8014250 <HAL_TIM_PWM_Start+0x174>)
 80141c8:	4293      	cmp	r3, r2
 80141ca:	d022      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 80141cc:	687b      	ldr	r3, [r7, #4]
 80141ce:	681b      	ldr	r3, [r3, #0]
 80141d0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80141d4:	d01d      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 80141d6:	687b      	ldr	r3, [r7, #4]
 80141d8:	681b      	ldr	r3, [r3, #0]
 80141da:	4a1f      	ldr	r2, [pc, #124]	@ (8014258 <HAL_TIM_PWM_Start+0x17c>)
 80141dc:	4293      	cmp	r3, r2
 80141de:	d018      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 80141e0:	687b      	ldr	r3, [r7, #4]
 80141e2:	681b      	ldr	r3, [r3, #0]
 80141e4:	4a1d      	ldr	r2, [pc, #116]	@ (801425c <HAL_TIM_PWM_Start+0x180>)
 80141e6:	4293      	cmp	r3, r2
 80141e8:	d013      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 80141ea:	687b      	ldr	r3, [r7, #4]
 80141ec:	681b      	ldr	r3, [r3, #0]
 80141ee:	4a1c      	ldr	r2, [pc, #112]	@ (8014260 <HAL_TIM_PWM_Start+0x184>)
 80141f0:	4293      	cmp	r3, r2
 80141f2:	d00e      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 80141f4:	687b      	ldr	r3, [r7, #4]
 80141f6:	681b      	ldr	r3, [r3, #0]
 80141f8:	4a16      	ldr	r2, [pc, #88]	@ (8014254 <HAL_TIM_PWM_Start+0x178>)
 80141fa:	4293      	cmp	r3, r2
 80141fc:	d009      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 80141fe:	687b      	ldr	r3, [r7, #4]
 8014200:	681b      	ldr	r3, [r3, #0]
 8014202:	4a18      	ldr	r2, [pc, #96]	@ (8014264 <HAL_TIM_PWM_Start+0x188>)
 8014204:	4293      	cmp	r3, r2
 8014206:	d004      	beq.n	8014212 <HAL_TIM_PWM_Start+0x136>
 8014208:	687b      	ldr	r3, [r7, #4]
 801420a:	681b      	ldr	r3, [r3, #0]
 801420c:	4a16      	ldr	r2, [pc, #88]	@ (8014268 <HAL_TIM_PWM_Start+0x18c>)
 801420e:	4293      	cmp	r3, r2
 8014210:	d111      	bne.n	8014236 <HAL_TIM_PWM_Start+0x15a>
 8014212:	687b      	ldr	r3, [r7, #4]
 8014214:	681b      	ldr	r3, [r3, #0]
 8014216:	689b      	ldr	r3, [r3, #8]
 8014218:	f003 0307 	and.w	r3, r3, #7
 801421c:	60fb      	str	r3, [r7, #12]
 801421e:	68fb      	ldr	r3, [r7, #12]
 8014220:	2b06      	cmp	r3, #6
 8014222:	d010      	beq.n	8014246 <HAL_TIM_PWM_Start+0x16a>
 8014224:	687b      	ldr	r3, [r7, #4]
 8014226:	681b      	ldr	r3, [r3, #0]
 8014228:	681a      	ldr	r2, [r3, #0]
 801422a:	687b      	ldr	r3, [r7, #4]
 801422c:	681b      	ldr	r3, [r3, #0]
 801422e:	f042 0201 	orr.w	r2, r2, #1
 8014232:	601a      	str	r2, [r3, #0]
 8014234:	e007      	b.n	8014246 <HAL_TIM_PWM_Start+0x16a>
 8014236:	687b      	ldr	r3, [r7, #4]
 8014238:	681b      	ldr	r3, [r3, #0]
 801423a:	681a      	ldr	r2, [r3, #0]
 801423c:	687b      	ldr	r3, [r7, #4]
 801423e:	681b      	ldr	r3, [r3, #0]
 8014240:	f042 0201 	orr.w	r2, r2, #1
 8014244:	601a      	str	r2, [r3, #0]
 8014246:	2300      	movs	r3, #0
 8014248:	4618      	mov	r0, r3
 801424a:	3710      	adds	r7, #16
 801424c:	46bd      	mov	sp, r7
 801424e:	bd80      	pop	{r7, pc}
 8014250:	40010000 	.word	0x40010000
 8014254:	40010400 	.word	0x40010400
 8014258:	40000400 	.word	0x40000400
 801425c:	40000800 	.word	0x40000800
 8014260:	40000c00 	.word	0x40000c00
 8014264:	40014000 	.word	0x40014000
 8014268:	40001800 	.word	0x40001800

0801426c <HAL_TIM_IRQHandler>:
 801426c:	b580      	push	{r7, lr}
 801426e:	b082      	sub	sp, #8
 8014270:	af00      	add	r7, sp, #0
 8014272:	6078      	str	r0, [r7, #4]
 8014274:	687b      	ldr	r3, [r7, #4]
 8014276:	681b      	ldr	r3, [r3, #0]
 8014278:	691b      	ldr	r3, [r3, #16]
 801427a:	f003 0302 	and.w	r3, r3, #2
 801427e:	2b02      	cmp	r3, #2
 8014280:	d122      	bne.n	80142c8 <HAL_TIM_IRQHandler+0x5c>
 8014282:	687b      	ldr	r3, [r7, #4]
 8014284:	681b      	ldr	r3, [r3, #0]
 8014286:	68db      	ldr	r3, [r3, #12]
 8014288:	f003 0302 	and.w	r3, r3, #2
 801428c:	2b02      	cmp	r3, #2
 801428e:	d11b      	bne.n	80142c8 <HAL_TIM_IRQHandler+0x5c>
 8014290:	687b      	ldr	r3, [r7, #4]
 8014292:	681b      	ldr	r3, [r3, #0]
 8014294:	f06f 0202 	mvn.w	r2, #2
 8014298:	611a      	str	r2, [r3, #16]
 801429a:	687b      	ldr	r3, [r7, #4]
 801429c:	2201      	movs	r2, #1
 801429e:	771a      	strb	r2, [r3, #28]
 80142a0:	687b      	ldr	r3, [r7, #4]
 80142a2:	681b      	ldr	r3, [r3, #0]
 80142a4:	699b      	ldr	r3, [r3, #24]
 80142a6:	f003 0303 	and.w	r3, r3, #3
 80142aa:	2b00      	cmp	r3, #0
 80142ac:	d003      	beq.n	80142b6 <HAL_TIM_IRQHandler+0x4a>
 80142ae:	6878      	ldr	r0, [r7, #4]
 80142b0:	f000 fad3 	bl	801485a <HAL_TIM_IC_CaptureCallback>
 80142b4:	e005      	b.n	80142c2 <HAL_TIM_IRQHandler+0x56>
 80142b6:	6878      	ldr	r0, [r7, #4]
 80142b8:	f000 fac5 	bl	8014846 <HAL_TIM_OC_DelayElapsedCallback>
 80142bc:	6878      	ldr	r0, [r7, #4]
 80142be:	f000 fad6 	bl	801486e <HAL_TIM_PWM_PulseFinishedCallback>
 80142c2:	687b      	ldr	r3, [r7, #4]
 80142c4:	2200      	movs	r2, #0
 80142c6:	771a      	strb	r2, [r3, #28]
 80142c8:	687b      	ldr	r3, [r7, #4]
 80142ca:	681b      	ldr	r3, [r3, #0]
 80142cc:	691b      	ldr	r3, [r3, #16]
 80142ce:	f003 0304 	and.w	r3, r3, #4
 80142d2:	2b04      	cmp	r3, #4
 80142d4:	d122      	bne.n	801431c <HAL_TIM_IRQHandler+0xb0>
 80142d6:	687b      	ldr	r3, [r7, #4]
 80142d8:	681b      	ldr	r3, [r3, #0]
 80142da:	68db      	ldr	r3, [r3, #12]
 80142dc:	f003 0304 	and.w	r3, r3, #4
 80142e0:	2b04      	cmp	r3, #4
 80142e2:	d11b      	bne.n	801431c <HAL_TIM_IRQHandler+0xb0>
 80142e4:	687b      	ldr	r3, [r7, #4]
 80142e6:	681b      	ldr	r3, [r3, #0]
 80142e8:	f06f 0204 	mvn.w	r2, #4
 80142ec:	611a      	str	r2, [r3, #16]
 80142ee:	687b      	ldr	r3, [r7, #4]
 80142f0:	2202      	movs	r2, #2
 80142f2:	771a      	strb	r2, [r3, #28]
 80142f4:	687b      	ldr	r3, [r7, #4]
 80142f6:	681b      	ldr	r3, [r3, #0]
 80142f8:	699b      	ldr	r3, [r3, #24]
 80142fa:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80142fe:	2b00      	cmp	r3, #0
 8014300:	d003      	beq.n	801430a <HAL_TIM_IRQHandler+0x9e>
 8014302:	6878      	ldr	r0, [r7, #4]
 8014304:	f000 faa9 	bl	801485a <HAL_TIM_IC_CaptureCallback>
 8014308:	e005      	b.n	8014316 <HAL_TIM_IRQHandler+0xaa>
 801430a:	6878      	ldr	r0, [r7, #4]
 801430c:	f000 fa9b 	bl	8014846 <HAL_TIM_OC_DelayElapsedCallback>
 8014310:	6878      	ldr	r0, [r7, #4]
 8014312:	f000 faac 	bl	801486e <HAL_TIM_PWM_PulseFinishedCallback>
 8014316:	687b      	ldr	r3, [r7, #4]
 8014318:	2200      	movs	r2, #0
 801431a:	771a      	strb	r2, [r3, #28]
 801431c:	687b      	ldr	r3, [r7, #4]
 801431e:	681b      	ldr	r3, [r3, #0]
 8014320:	691b      	ldr	r3, [r3, #16]
 8014322:	f003 0308 	and.w	r3, r3, #8
 8014326:	2b08      	cmp	r3, #8
 8014328:	d122      	bne.n	8014370 <HAL_TIM_IRQHandler+0x104>
 801432a:	687b      	ldr	r3, [r7, #4]
 801432c:	681b      	ldr	r3, [r3, #0]
 801432e:	68db      	ldr	r3, [r3, #12]
 8014330:	f003 0308 	and.w	r3, r3, #8
 8014334:	2b08      	cmp	r3, #8
 8014336:	d11b      	bne.n	8014370 <HAL_TIM_IRQHandler+0x104>
 8014338:	687b      	ldr	r3, [r7, #4]
 801433a:	681b      	ldr	r3, [r3, #0]
 801433c:	f06f 0208 	mvn.w	r2, #8
 8014340:	611a      	str	r2, [r3, #16]
 8014342:	687b      	ldr	r3, [r7, #4]
 8014344:	2204      	movs	r2, #4
 8014346:	771a      	strb	r2, [r3, #28]
 8014348:	687b      	ldr	r3, [r7, #4]
 801434a:	681b      	ldr	r3, [r3, #0]
 801434c:	69db      	ldr	r3, [r3, #28]
 801434e:	f003 0303 	and.w	r3, r3, #3
 8014352:	2b00      	cmp	r3, #0
 8014354:	d003      	beq.n	801435e <HAL_TIM_IRQHandler+0xf2>
 8014356:	6878      	ldr	r0, [r7, #4]
 8014358:	f000 fa7f 	bl	801485a <HAL_TIM_IC_CaptureCallback>
 801435c:	e005      	b.n	801436a <HAL_TIM_IRQHandler+0xfe>
 801435e:	6878      	ldr	r0, [r7, #4]
 8014360:	f000 fa71 	bl	8014846 <HAL_TIM_OC_DelayElapsedCallback>
 8014364:	6878      	ldr	r0, [r7, #4]
 8014366:	f000 fa82 	bl	801486e <HAL_TIM_PWM_PulseFinishedCallback>
 801436a:	687b      	ldr	r3, [r7, #4]
 801436c:	2200      	movs	r2, #0
 801436e:	771a      	strb	r2, [r3, #28]
 8014370:	687b      	ldr	r3, [r7, #4]
 8014372:	681b      	ldr	r3, [r3, #0]
 8014374:	691b      	ldr	r3, [r3, #16]
 8014376:	f003 0310 	and.w	r3, r3, #16
 801437a:	2b10      	cmp	r3, #16
 801437c:	d122      	bne.n	80143c4 <HAL_TIM_IRQHandler+0x158>
 801437e:	687b      	ldr	r3, [r7, #4]
 8014380:	681b      	ldr	r3, [r3, #0]
 8014382:	68db      	ldr	r3, [r3, #12]
 8014384:	f003 0310 	and.w	r3, r3, #16
 8014388:	2b10      	cmp	r3, #16
 801438a:	d11b      	bne.n	80143c4 <HAL_TIM_IRQHandler+0x158>
 801438c:	687b      	ldr	r3, [r7, #4]
 801438e:	681b      	ldr	r3, [r3, #0]
 8014390:	f06f 0210 	mvn.w	r2, #16
 8014394:	611a      	str	r2, [r3, #16]
 8014396:	687b      	ldr	r3, [r7, #4]
 8014398:	2208      	movs	r2, #8
 801439a:	771a      	strb	r2, [r3, #28]
 801439c:	687b      	ldr	r3, [r7, #4]
 801439e:	681b      	ldr	r3, [r3, #0]
 80143a0:	69db      	ldr	r3, [r3, #28]
 80143a2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80143a6:	2b00      	cmp	r3, #0
 80143a8:	d003      	beq.n	80143b2 <HAL_TIM_IRQHandler+0x146>
 80143aa:	6878      	ldr	r0, [r7, #4]
 80143ac:	f000 fa55 	bl	801485a <HAL_TIM_IC_CaptureCallback>
 80143b0:	e005      	b.n	80143be <HAL_TIM_IRQHandler+0x152>
 80143b2:	6878      	ldr	r0, [r7, #4]
 80143b4:	f000 fa47 	bl	8014846 <HAL_TIM_OC_DelayElapsedCallback>
 80143b8:	6878      	ldr	r0, [r7, #4]
 80143ba:	f000 fa58 	bl	801486e <HAL_TIM_PWM_PulseFinishedCallback>
 80143be:	687b      	ldr	r3, [r7, #4]
 80143c0:	2200      	movs	r2, #0
 80143c2:	771a      	strb	r2, [r3, #28]
 80143c4:	687b      	ldr	r3, [r7, #4]
 80143c6:	681b      	ldr	r3, [r3, #0]
 80143c8:	691b      	ldr	r3, [r3, #16]
 80143ca:	f003 0301 	and.w	r3, r3, #1
 80143ce:	2b01      	cmp	r3, #1
 80143d0:	d10e      	bne.n	80143f0 <HAL_TIM_IRQHandler+0x184>
 80143d2:	687b      	ldr	r3, [r7, #4]
 80143d4:	681b      	ldr	r3, [r3, #0]
 80143d6:	68db      	ldr	r3, [r3, #12]
 80143d8:	f003 0301 	and.w	r3, r3, #1
 80143dc:	2b01      	cmp	r3, #1
 80143de:	d107      	bne.n	80143f0 <HAL_TIM_IRQHandler+0x184>
 80143e0:	687b      	ldr	r3, [r7, #4]
 80143e2:	681b      	ldr	r3, [r3, #0]
 80143e4:	f06f 0201 	mvn.w	r2, #1
 80143e8:	611a      	str	r2, [r3, #16]
 80143ea:	6878      	ldr	r0, [r7, #4]
 80143ec:	f7ef f9f2 	bl	80037d4 <HAL_TIM_PeriodElapsedCallback>
 80143f0:	687b      	ldr	r3, [r7, #4]
 80143f2:	681b      	ldr	r3, [r3, #0]
 80143f4:	691b      	ldr	r3, [r3, #16]
 80143f6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80143fa:	2b80      	cmp	r3, #128	@ 0x80
 80143fc:	d10e      	bne.n	801441c <HAL_TIM_IRQHandler+0x1b0>
 80143fe:	687b      	ldr	r3, [r7, #4]
 8014400:	681b      	ldr	r3, [r3, #0]
 8014402:	68db      	ldr	r3, [r3, #12]
 8014404:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8014408:	2b80      	cmp	r3, #128	@ 0x80
 801440a:	d107      	bne.n	801441c <HAL_TIM_IRQHandler+0x1b0>
 801440c:	687b      	ldr	r3, [r7, #4]
 801440e:	681b      	ldr	r3, [r3, #0]
 8014410:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8014414:	611a      	str	r2, [r3, #16]
 8014416:	6878      	ldr	r0, [r7, #4]
 8014418:	f000 fdd4 	bl	8014fc4 <HAL_TIMEx_BreakCallback>
 801441c:	687b      	ldr	r3, [r7, #4]
 801441e:	681b      	ldr	r3, [r3, #0]
 8014420:	691b      	ldr	r3, [r3, #16]
 8014422:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8014426:	2b40      	cmp	r3, #64	@ 0x40
 8014428:	d10e      	bne.n	8014448 <HAL_TIM_IRQHandler+0x1dc>
 801442a:	687b      	ldr	r3, [r7, #4]
 801442c:	681b      	ldr	r3, [r3, #0]
 801442e:	68db      	ldr	r3, [r3, #12]
 8014430:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8014434:	2b40      	cmp	r3, #64	@ 0x40
 8014436:	d107      	bne.n	8014448 <HAL_TIM_IRQHandler+0x1dc>
 8014438:	687b      	ldr	r3, [r7, #4]
 801443a:	681b      	ldr	r3, [r3, #0]
 801443c:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8014440:	611a      	str	r2, [r3, #16]
 8014442:	6878      	ldr	r0, [r7, #4]
 8014444:	f000 fa1d 	bl	8014882 <HAL_TIM_TriggerCallback>
 8014448:	687b      	ldr	r3, [r7, #4]
 801444a:	681b      	ldr	r3, [r3, #0]
 801444c:	691b      	ldr	r3, [r3, #16]
 801444e:	f003 0320 	and.w	r3, r3, #32
 8014452:	2b20      	cmp	r3, #32
 8014454:	d10e      	bne.n	8014474 <HAL_TIM_IRQHandler+0x208>
 8014456:	687b      	ldr	r3, [r7, #4]
 8014458:	681b      	ldr	r3, [r3, #0]
 801445a:	68db      	ldr	r3, [r3, #12]
 801445c:	f003 0320 	and.w	r3, r3, #32
 8014460:	2b20      	cmp	r3, #32
 8014462:	d107      	bne.n	8014474 <HAL_TIM_IRQHandler+0x208>
 8014464:	687b      	ldr	r3, [r7, #4]
 8014466:	681b      	ldr	r3, [r3, #0]
 8014468:	f06f 0220 	mvn.w	r2, #32
 801446c:	611a      	str	r2, [r3, #16]
 801446e:	6878      	ldr	r0, [r7, #4]
 8014470:	f000 fd9e 	bl	8014fb0 <HAL_TIMEx_CommutCallback>
 8014474:	bf00      	nop
 8014476:	3708      	adds	r7, #8
 8014478:	46bd      	mov	sp, r7
 801447a:	bd80      	pop	{r7, pc}

0801447c <HAL_TIM_OC_ConfigChannel>:
 801447c:	b580      	push	{r7, lr}
 801447e:	b086      	sub	sp, #24
 8014480:	af00      	add	r7, sp, #0
 8014482:	60f8      	str	r0, [r7, #12]
 8014484:	60b9      	str	r1, [r7, #8]
 8014486:	607a      	str	r2, [r7, #4]
 8014488:	2300      	movs	r3, #0
 801448a:	75fb      	strb	r3, [r7, #23]
 801448c:	68fb      	ldr	r3, [r7, #12]
 801448e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8014492:	2b01      	cmp	r3, #1
 8014494:	d101      	bne.n	801449a <HAL_TIM_OC_ConfigChannel+0x1e>
 8014496:	2302      	movs	r3, #2
 8014498:	e048      	b.n	801452c <HAL_TIM_OC_ConfigChannel+0xb0>
 801449a:	68fb      	ldr	r3, [r7, #12]
 801449c:	2201      	movs	r2, #1
 801449e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80144a2:	687b      	ldr	r3, [r7, #4]
 80144a4:	2b0c      	cmp	r3, #12
 80144a6:	d839      	bhi.n	801451c <HAL_TIM_OC_ConfigChannel+0xa0>
 80144a8:	a201      	add	r2, pc, #4	@ (adr r2, 80144b0 <HAL_TIM_OC_ConfigChannel+0x34>)
 80144aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80144ae:	bf00      	nop
 80144b0:	080144e5 	.word	0x080144e5
 80144b4:	0801451d 	.word	0x0801451d
 80144b8:	0801451d 	.word	0x0801451d
 80144bc:	0801451d 	.word	0x0801451d
 80144c0:	080144f3 	.word	0x080144f3
 80144c4:	0801451d 	.word	0x0801451d
 80144c8:	0801451d 	.word	0x0801451d
 80144cc:	0801451d 	.word	0x0801451d
 80144d0:	08014501 	.word	0x08014501
 80144d4:	0801451d 	.word	0x0801451d
 80144d8:	0801451d 	.word	0x0801451d
 80144dc:	0801451d 	.word	0x0801451d
 80144e0:	0801450f 	.word	0x0801450f
 80144e4:	68fb      	ldr	r3, [r7, #12]
 80144e6:	681b      	ldr	r3, [r3, #0]
 80144e8:	68b9      	ldr	r1, [r7, #8]
 80144ea:	4618      	mov	r0, r3
 80144ec:	f000 fa74 	bl	80149d8 <TIM_OC1_SetConfig>
 80144f0:	e017      	b.n	8014522 <HAL_TIM_OC_ConfigChannel+0xa6>
 80144f2:	68fb      	ldr	r3, [r7, #12]
 80144f4:	681b      	ldr	r3, [r3, #0]
 80144f6:	68b9      	ldr	r1, [r7, #8]
 80144f8:	4618      	mov	r0, r3
 80144fa:	f000 fadd 	bl	8014ab8 <TIM_OC2_SetConfig>
 80144fe:	e010      	b.n	8014522 <HAL_TIM_OC_ConfigChannel+0xa6>
 8014500:	68fb      	ldr	r3, [r7, #12]
 8014502:	681b      	ldr	r3, [r3, #0]
 8014504:	68b9      	ldr	r1, [r7, #8]
 8014506:	4618      	mov	r0, r3
 8014508:	f000 fb4c 	bl	8014ba4 <TIM_OC3_SetConfig>
 801450c:	e009      	b.n	8014522 <HAL_TIM_OC_ConfigChannel+0xa6>
 801450e:	68fb      	ldr	r3, [r7, #12]
 8014510:	681b      	ldr	r3, [r3, #0]
 8014512:	68b9      	ldr	r1, [r7, #8]
 8014514:	4618      	mov	r0, r3
 8014516:	f000 fbb9 	bl	8014c8c <TIM_OC4_SetConfig>
 801451a:	e002      	b.n	8014522 <HAL_TIM_OC_ConfigChannel+0xa6>
 801451c:	2301      	movs	r3, #1
 801451e:	75fb      	strb	r3, [r7, #23]
 8014520:	bf00      	nop
 8014522:	68fb      	ldr	r3, [r7, #12]
 8014524:	2200      	movs	r2, #0
 8014526:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801452a:	7dfb      	ldrb	r3, [r7, #23]
 801452c:	4618      	mov	r0, r3
 801452e:	3718      	adds	r7, #24
 8014530:	46bd      	mov	sp, r7
 8014532:	bd80      	pop	{r7, pc}

08014534 <HAL_TIM_PWM_ConfigChannel>:
 8014534:	b580      	push	{r7, lr}
 8014536:	b086      	sub	sp, #24
 8014538:	af00      	add	r7, sp, #0
 801453a:	60f8      	str	r0, [r7, #12]
 801453c:	60b9      	str	r1, [r7, #8]
 801453e:	607a      	str	r2, [r7, #4]
 8014540:	2300      	movs	r3, #0
 8014542:	75fb      	strb	r3, [r7, #23]
 8014544:	68fb      	ldr	r3, [r7, #12]
 8014546:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 801454a:	2b01      	cmp	r3, #1
 801454c:	d101      	bne.n	8014552 <HAL_TIM_PWM_ConfigChannel+0x1e>
 801454e:	2302      	movs	r3, #2
 8014550:	e0ae      	b.n	80146b0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8014552:	68fb      	ldr	r3, [r7, #12]
 8014554:	2201      	movs	r2, #1
 8014556:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801455a:	687b      	ldr	r3, [r7, #4]
 801455c:	2b0c      	cmp	r3, #12
 801455e:	f200 809f 	bhi.w	80146a0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8014562:	a201      	add	r2, pc, #4	@ (adr r2, 8014568 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8014564:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8014568:	0801459d 	.word	0x0801459d
 801456c:	080146a1 	.word	0x080146a1
 8014570:	080146a1 	.word	0x080146a1
 8014574:	080146a1 	.word	0x080146a1
 8014578:	080145dd 	.word	0x080145dd
 801457c:	080146a1 	.word	0x080146a1
 8014580:	080146a1 	.word	0x080146a1
 8014584:	080146a1 	.word	0x080146a1
 8014588:	0801461f 	.word	0x0801461f
 801458c:	080146a1 	.word	0x080146a1
 8014590:	080146a1 	.word	0x080146a1
 8014594:	080146a1 	.word	0x080146a1
 8014598:	0801465f 	.word	0x0801465f
 801459c:	68fb      	ldr	r3, [r7, #12]
 801459e:	681b      	ldr	r3, [r3, #0]
 80145a0:	68b9      	ldr	r1, [r7, #8]
 80145a2:	4618      	mov	r0, r3
 80145a4:	f000 fa18 	bl	80149d8 <TIM_OC1_SetConfig>
 80145a8:	68fb      	ldr	r3, [r7, #12]
 80145aa:	681b      	ldr	r3, [r3, #0]
 80145ac:	699a      	ldr	r2, [r3, #24]
 80145ae:	68fb      	ldr	r3, [r7, #12]
 80145b0:	681b      	ldr	r3, [r3, #0]
 80145b2:	f042 0208 	orr.w	r2, r2, #8
 80145b6:	619a      	str	r2, [r3, #24]
 80145b8:	68fb      	ldr	r3, [r7, #12]
 80145ba:	681b      	ldr	r3, [r3, #0]
 80145bc:	699a      	ldr	r2, [r3, #24]
 80145be:	68fb      	ldr	r3, [r7, #12]
 80145c0:	681b      	ldr	r3, [r3, #0]
 80145c2:	f022 0204 	bic.w	r2, r2, #4
 80145c6:	619a      	str	r2, [r3, #24]
 80145c8:	68fb      	ldr	r3, [r7, #12]
 80145ca:	681b      	ldr	r3, [r3, #0]
 80145cc:	6999      	ldr	r1, [r3, #24]
 80145ce:	68bb      	ldr	r3, [r7, #8]
 80145d0:	691a      	ldr	r2, [r3, #16]
 80145d2:	68fb      	ldr	r3, [r7, #12]
 80145d4:	681b      	ldr	r3, [r3, #0]
 80145d6:	430a      	orrs	r2, r1
 80145d8:	619a      	str	r2, [r3, #24]
 80145da:	e064      	b.n	80146a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80145dc:	68fb      	ldr	r3, [r7, #12]
 80145de:	681b      	ldr	r3, [r3, #0]
 80145e0:	68b9      	ldr	r1, [r7, #8]
 80145e2:	4618      	mov	r0, r3
 80145e4:	f000 fa68 	bl	8014ab8 <TIM_OC2_SetConfig>
 80145e8:	68fb      	ldr	r3, [r7, #12]
 80145ea:	681b      	ldr	r3, [r3, #0]
 80145ec:	699a      	ldr	r2, [r3, #24]
 80145ee:	68fb      	ldr	r3, [r7, #12]
 80145f0:	681b      	ldr	r3, [r3, #0]
 80145f2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80145f6:	619a      	str	r2, [r3, #24]
 80145f8:	68fb      	ldr	r3, [r7, #12]
 80145fa:	681b      	ldr	r3, [r3, #0]
 80145fc:	699a      	ldr	r2, [r3, #24]
 80145fe:	68fb      	ldr	r3, [r7, #12]
 8014600:	681b      	ldr	r3, [r3, #0]
 8014602:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8014606:	619a      	str	r2, [r3, #24]
 8014608:	68fb      	ldr	r3, [r7, #12]
 801460a:	681b      	ldr	r3, [r3, #0]
 801460c:	6999      	ldr	r1, [r3, #24]
 801460e:	68bb      	ldr	r3, [r7, #8]
 8014610:	691b      	ldr	r3, [r3, #16]
 8014612:	021a      	lsls	r2, r3, #8
 8014614:	68fb      	ldr	r3, [r7, #12]
 8014616:	681b      	ldr	r3, [r3, #0]
 8014618:	430a      	orrs	r2, r1
 801461a:	619a      	str	r2, [r3, #24]
 801461c:	e043      	b.n	80146a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 801461e:	68fb      	ldr	r3, [r7, #12]
 8014620:	681b      	ldr	r3, [r3, #0]
 8014622:	68b9      	ldr	r1, [r7, #8]
 8014624:	4618      	mov	r0, r3
 8014626:	f000 fabd 	bl	8014ba4 <TIM_OC3_SetConfig>
 801462a:	68fb      	ldr	r3, [r7, #12]
 801462c:	681b      	ldr	r3, [r3, #0]
 801462e:	69da      	ldr	r2, [r3, #28]
 8014630:	68fb      	ldr	r3, [r7, #12]
 8014632:	681b      	ldr	r3, [r3, #0]
 8014634:	f042 0208 	orr.w	r2, r2, #8
 8014638:	61da      	str	r2, [r3, #28]
 801463a:	68fb      	ldr	r3, [r7, #12]
 801463c:	681b      	ldr	r3, [r3, #0]
 801463e:	69da      	ldr	r2, [r3, #28]
 8014640:	68fb      	ldr	r3, [r7, #12]
 8014642:	681b      	ldr	r3, [r3, #0]
 8014644:	f022 0204 	bic.w	r2, r2, #4
 8014648:	61da      	str	r2, [r3, #28]
 801464a:	68fb      	ldr	r3, [r7, #12]
 801464c:	681b      	ldr	r3, [r3, #0]
 801464e:	69d9      	ldr	r1, [r3, #28]
 8014650:	68bb      	ldr	r3, [r7, #8]
 8014652:	691a      	ldr	r2, [r3, #16]
 8014654:	68fb      	ldr	r3, [r7, #12]
 8014656:	681b      	ldr	r3, [r3, #0]
 8014658:	430a      	orrs	r2, r1
 801465a:	61da      	str	r2, [r3, #28]
 801465c:	e023      	b.n	80146a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 801465e:	68fb      	ldr	r3, [r7, #12]
 8014660:	681b      	ldr	r3, [r3, #0]
 8014662:	68b9      	ldr	r1, [r7, #8]
 8014664:	4618      	mov	r0, r3
 8014666:	f000 fb11 	bl	8014c8c <TIM_OC4_SetConfig>
 801466a:	68fb      	ldr	r3, [r7, #12]
 801466c:	681b      	ldr	r3, [r3, #0]
 801466e:	69da      	ldr	r2, [r3, #28]
 8014670:	68fb      	ldr	r3, [r7, #12]
 8014672:	681b      	ldr	r3, [r3, #0]
 8014674:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8014678:	61da      	str	r2, [r3, #28]
 801467a:	68fb      	ldr	r3, [r7, #12]
 801467c:	681b      	ldr	r3, [r3, #0]
 801467e:	69da      	ldr	r2, [r3, #28]
 8014680:	68fb      	ldr	r3, [r7, #12]
 8014682:	681b      	ldr	r3, [r3, #0]
 8014684:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8014688:	61da      	str	r2, [r3, #28]
 801468a:	68fb      	ldr	r3, [r7, #12]
 801468c:	681b      	ldr	r3, [r3, #0]
 801468e:	69d9      	ldr	r1, [r3, #28]
 8014690:	68bb      	ldr	r3, [r7, #8]
 8014692:	691b      	ldr	r3, [r3, #16]
 8014694:	021a      	lsls	r2, r3, #8
 8014696:	68fb      	ldr	r3, [r7, #12]
 8014698:	681b      	ldr	r3, [r3, #0]
 801469a:	430a      	orrs	r2, r1
 801469c:	61da      	str	r2, [r3, #28]
 801469e:	e002      	b.n	80146a6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80146a0:	2301      	movs	r3, #1
 80146a2:	75fb      	strb	r3, [r7, #23]
 80146a4:	bf00      	nop
 80146a6:	68fb      	ldr	r3, [r7, #12]
 80146a8:	2200      	movs	r2, #0
 80146aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80146ae:	7dfb      	ldrb	r3, [r7, #23]
 80146b0:	4618      	mov	r0, r3
 80146b2:	3718      	adds	r7, #24
 80146b4:	46bd      	mov	sp, r7
 80146b6:	bd80      	pop	{r7, pc}

080146b8 <HAL_TIM_ConfigClockSource>:
 80146b8:	b580      	push	{r7, lr}
 80146ba:	b084      	sub	sp, #16
 80146bc:	af00      	add	r7, sp, #0
 80146be:	6078      	str	r0, [r7, #4]
 80146c0:	6039      	str	r1, [r7, #0]
 80146c2:	2300      	movs	r3, #0
 80146c4:	73fb      	strb	r3, [r7, #15]
 80146c6:	687b      	ldr	r3, [r7, #4]
 80146c8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80146cc:	2b01      	cmp	r3, #1
 80146ce:	d101      	bne.n	80146d4 <HAL_TIM_ConfigClockSource+0x1c>
 80146d0:	2302      	movs	r3, #2
 80146d2:	e0b4      	b.n	801483e <HAL_TIM_ConfigClockSource+0x186>
 80146d4:	687b      	ldr	r3, [r7, #4]
 80146d6:	2201      	movs	r2, #1
 80146d8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80146dc:	687b      	ldr	r3, [r7, #4]
 80146de:	2202      	movs	r2, #2
 80146e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80146e4:	687b      	ldr	r3, [r7, #4]
 80146e6:	681b      	ldr	r3, [r3, #0]
 80146e8:	689b      	ldr	r3, [r3, #8]
 80146ea:	60bb      	str	r3, [r7, #8]
 80146ec:	68bb      	ldr	r3, [r7, #8]
 80146ee:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 80146f2:	60bb      	str	r3, [r7, #8]
 80146f4:	68bb      	ldr	r3, [r7, #8]
 80146f6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80146fa:	60bb      	str	r3, [r7, #8]
 80146fc:	687b      	ldr	r3, [r7, #4]
 80146fe:	681b      	ldr	r3, [r3, #0]
 8014700:	68ba      	ldr	r2, [r7, #8]
 8014702:	609a      	str	r2, [r3, #8]
 8014704:	683b      	ldr	r3, [r7, #0]
 8014706:	681b      	ldr	r3, [r3, #0]
 8014708:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 801470c:	d03e      	beq.n	801478c <HAL_TIM_ConfigClockSource+0xd4>
 801470e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8014712:	f200 8087 	bhi.w	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 8014716:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 801471a:	f000 8086 	beq.w	801482a <HAL_TIM_ConfigClockSource+0x172>
 801471e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8014722:	d87f      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 8014724:	2b70      	cmp	r3, #112	@ 0x70
 8014726:	d01a      	beq.n	801475e <HAL_TIM_ConfigClockSource+0xa6>
 8014728:	2b70      	cmp	r3, #112	@ 0x70
 801472a:	d87b      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 801472c:	2b60      	cmp	r3, #96	@ 0x60
 801472e:	d050      	beq.n	80147d2 <HAL_TIM_ConfigClockSource+0x11a>
 8014730:	2b60      	cmp	r3, #96	@ 0x60
 8014732:	d877      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 8014734:	2b50      	cmp	r3, #80	@ 0x50
 8014736:	d03c      	beq.n	80147b2 <HAL_TIM_ConfigClockSource+0xfa>
 8014738:	2b50      	cmp	r3, #80	@ 0x50
 801473a:	d873      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 801473c:	2b40      	cmp	r3, #64	@ 0x40
 801473e:	d058      	beq.n	80147f2 <HAL_TIM_ConfigClockSource+0x13a>
 8014740:	2b40      	cmp	r3, #64	@ 0x40
 8014742:	d86f      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 8014744:	2b30      	cmp	r3, #48	@ 0x30
 8014746:	d064      	beq.n	8014812 <HAL_TIM_ConfigClockSource+0x15a>
 8014748:	2b30      	cmp	r3, #48	@ 0x30
 801474a:	d86b      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 801474c:	2b20      	cmp	r3, #32
 801474e:	d060      	beq.n	8014812 <HAL_TIM_ConfigClockSource+0x15a>
 8014750:	2b20      	cmp	r3, #32
 8014752:	d867      	bhi.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 8014754:	2b00      	cmp	r3, #0
 8014756:	d05c      	beq.n	8014812 <HAL_TIM_ConfigClockSource+0x15a>
 8014758:	2b10      	cmp	r3, #16
 801475a:	d05a      	beq.n	8014812 <HAL_TIM_ConfigClockSource+0x15a>
 801475c:	e062      	b.n	8014824 <HAL_TIM_ConfigClockSource+0x16c>
 801475e:	687b      	ldr	r3, [r7, #4]
 8014760:	6818      	ldr	r0, [r3, #0]
 8014762:	683b      	ldr	r3, [r7, #0]
 8014764:	6899      	ldr	r1, [r3, #8]
 8014766:	683b      	ldr	r3, [r7, #0]
 8014768:	685a      	ldr	r2, [r3, #4]
 801476a:	683b      	ldr	r3, [r7, #0]
 801476c:	68db      	ldr	r3, [r3, #12]
 801476e:	f000 fb5d 	bl	8014e2c <TIM_ETR_SetConfig>
 8014772:	687b      	ldr	r3, [r7, #4]
 8014774:	681b      	ldr	r3, [r3, #0]
 8014776:	689b      	ldr	r3, [r3, #8]
 8014778:	60bb      	str	r3, [r7, #8]
 801477a:	68bb      	ldr	r3, [r7, #8]
 801477c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8014780:	60bb      	str	r3, [r7, #8]
 8014782:	687b      	ldr	r3, [r7, #4]
 8014784:	681b      	ldr	r3, [r3, #0]
 8014786:	68ba      	ldr	r2, [r7, #8]
 8014788:	609a      	str	r2, [r3, #8]
 801478a:	e04f      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 801478c:	687b      	ldr	r3, [r7, #4]
 801478e:	6818      	ldr	r0, [r3, #0]
 8014790:	683b      	ldr	r3, [r7, #0]
 8014792:	6899      	ldr	r1, [r3, #8]
 8014794:	683b      	ldr	r3, [r7, #0]
 8014796:	685a      	ldr	r2, [r3, #4]
 8014798:	683b      	ldr	r3, [r7, #0]
 801479a:	68db      	ldr	r3, [r3, #12]
 801479c:	f000 fb46 	bl	8014e2c <TIM_ETR_SetConfig>
 80147a0:	687b      	ldr	r3, [r7, #4]
 80147a2:	681b      	ldr	r3, [r3, #0]
 80147a4:	689a      	ldr	r2, [r3, #8]
 80147a6:	687b      	ldr	r3, [r7, #4]
 80147a8:	681b      	ldr	r3, [r3, #0]
 80147aa:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80147ae:	609a      	str	r2, [r3, #8]
 80147b0:	e03c      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 80147b2:	687b      	ldr	r3, [r7, #4]
 80147b4:	6818      	ldr	r0, [r3, #0]
 80147b6:	683b      	ldr	r3, [r7, #0]
 80147b8:	6859      	ldr	r1, [r3, #4]
 80147ba:	683b      	ldr	r3, [r7, #0]
 80147bc:	68db      	ldr	r3, [r3, #12]
 80147be:	461a      	mov	r2, r3
 80147c0:	f000 faba 	bl	8014d38 <TIM_TI1_ConfigInputStage>
 80147c4:	687b      	ldr	r3, [r7, #4]
 80147c6:	681b      	ldr	r3, [r3, #0]
 80147c8:	2150      	movs	r1, #80	@ 0x50
 80147ca:	4618      	mov	r0, r3
 80147cc:	f000 fb13 	bl	8014df6 <TIM_ITRx_SetConfig>
 80147d0:	e02c      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 80147d2:	687b      	ldr	r3, [r7, #4]
 80147d4:	6818      	ldr	r0, [r3, #0]
 80147d6:	683b      	ldr	r3, [r7, #0]
 80147d8:	6859      	ldr	r1, [r3, #4]
 80147da:	683b      	ldr	r3, [r7, #0]
 80147dc:	68db      	ldr	r3, [r3, #12]
 80147de:	461a      	mov	r2, r3
 80147e0:	f000 fad9 	bl	8014d96 <TIM_TI2_ConfigInputStage>
 80147e4:	687b      	ldr	r3, [r7, #4]
 80147e6:	681b      	ldr	r3, [r3, #0]
 80147e8:	2160      	movs	r1, #96	@ 0x60
 80147ea:	4618      	mov	r0, r3
 80147ec:	f000 fb03 	bl	8014df6 <TIM_ITRx_SetConfig>
 80147f0:	e01c      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 80147f2:	687b      	ldr	r3, [r7, #4]
 80147f4:	6818      	ldr	r0, [r3, #0]
 80147f6:	683b      	ldr	r3, [r7, #0]
 80147f8:	6859      	ldr	r1, [r3, #4]
 80147fa:	683b      	ldr	r3, [r7, #0]
 80147fc:	68db      	ldr	r3, [r3, #12]
 80147fe:	461a      	mov	r2, r3
 8014800:	f000 fa9a 	bl	8014d38 <TIM_TI1_ConfigInputStage>
 8014804:	687b      	ldr	r3, [r7, #4]
 8014806:	681b      	ldr	r3, [r3, #0]
 8014808:	2140      	movs	r1, #64	@ 0x40
 801480a:	4618      	mov	r0, r3
 801480c:	f000 faf3 	bl	8014df6 <TIM_ITRx_SetConfig>
 8014810:	e00c      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 8014812:	687b      	ldr	r3, [r7, #4]
 8014814:	681a      	ldr	r2, [r3, #0]
 8014816:	683b      	ldr	r3, [r7, #0]
 8014818:	681b      	ldr	r3, [r3, #0]
 801481a:	4619      	mov	r1, r3
 801481c:	4610      	mov	r0, r2
 801481e:	f000 faea 	bl	8014df6 <TIM_ITRx_SetConfig>
 8014822:	e003      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 8014824:	2301      	movs	r3, #1
 8014826:	73fb      	strb	r3, [r7, #15]
 8014828:	e000      	b.n	801482c <HAL_TIM_ConfigClockSource+0x174>
 801482a:	bf00      	nop
 801482c:	687b      	ldr	r3, [r7, #4]
 801482e:	2201      	movs	r2, #1
 8014830:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8014834:	687b      	ldr	r3, [r7, #4]
 8014836:	2200      	movs	r2, #0
 8014838:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 801483c:	7bfb      	ldrb	r3, [r7, #15]
 801483e:	4618      	mov	r0, r3
 8014840:	3710      	adds	r7, #16
 8014842:	46bd      	mov	sp, r7
 8014844:	bd80      	pop	{r7, pc}

08014846 <HAL_TIM_OC_DelayElapsedCallback>:
 8014846:	b480      	push	{r7}
 8014848:	b083      	sub	sp, #12
 801484a:	af00      	add	r7, sp, #0
 801484c:	6078      	str	r0, [r7, #4]
 801484e:	bf00      	nop
 8014850:	370c      	adds	r7, #12
 8014852:	46bd      	mov	sp, r7
 8014854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014858:	4770      	bx	lr

0801485a <HAL_TIM_IC_CaptureCallback>:
 801485a:	b480      	push	{r7}
 801485c:	b083      	sub	sp, #12
 801485e:	af00      	add	r7, sp, #0
 8014860:	6078      	str	r0, [r7, #4]
 8014862:	bf00      	nop
 8014864:	370c      	adds	r7, #12
 8014866:	46bd      	mov	sp, r7
 8014868:	f85d 7b04 	ldr.w	r7, [sp], #4
 801486c:	4770      	bx	lr

0801486e <HAL_TIM_PWM_PulseFinishedCallback>:
 801486e:	b480      	push	{r7}
 8014870:	b083      	sub	sp, #12
 8014872:	af00      	add	r7, sp, #0
 8014874:	6078      	str	r0, [r7, #4]
 8014876:	bf00      	nop
 8014878:	370c      	adds	r7, #12
 801487a:	46bd      	mov	sp, r7
 801487c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014880:	4770      	bx	lr

08014882 <HAL_TIM_TriggerCallback>:
 8014882:	b480      	push	{r7}
 8014884:	b083      	sub	sp, #12
 8014886:	af00      	add	r7, sp, #0
 8014888:	6078      	str	r0, [r7, #4]
 801488a:	bf00      	nop
 801488c:	370c      	adds	r7, #12
 801488e:	46bd      	mov	sp, r7
 8014890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014894:	4770      	bx	lr
	...

08014898 <TIM_Base_SetConfig>:
 8014898:	b480      	push	{r7}
 801489a:	b085      	sub	sp, #20
 801489c:	af00      	add	r7, sp, #0
 801489e:	6078      	str	r0, [r7, #4]
 80148a0:	6039      	str	r1, [r7, #0]
 80148a2:	687b      	ldr	r3, [r7, #4]
 80148a4:	681b      	ldr	r3, [r3, #0]
 80148a6:	60fb      	str	r3, [r7, #12]
 80148a8:	687b      	ldr	r3, [r7, #4]
 80148aa:	4a40      	ldr	r2, [pc, #256]	@ (80149ac <TIM_Base_SetConfig+0x114>)
 80148ac:	4293      	cmp	r3, r2
 80148ae:	d013      	beq.n	80148d8 <TIM_Base_SetConfig+0x40>
 80148b0:	687b      	ldr	r3, [r7, #4]
 80148b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80148b6:	d00f      	beq.n	80148d8 <TIM_Base_SetConfig+0x40>
 80148b8:	687b      	ldr	r3, [r7, #4]
 80148ba:	4a3d      	ldr	r2, [pc, #244]	@ (80149b0 <TIM_Base_SetConfig+0x118>)
 80148bc:	4293      	cmp	r3, r2
 80148be:	d00b      	beq.n	80148d8 <TIM_Base_SetConfig+0x40>
 80148c0:	687b      	ldr	r3, [r7, #4]
 80148c2:	4a3c      	ldr	r2, [pc, #240]	@ (80149b4 <TIM_Base_SetConfig+0x11c>)
 80148c4:	4293      	cmp	r3, r2
 80148c6:	d007      	beq.n	80148d8 <TIM_Base_SetConfig+0x40>
 80148c8:	687b      	ldr	r3, [r7, #4]
 80148ca:	4a3b      	ldr	r2, [pc, #236]	@ (80149b8 <TIM_Base_SetConfig+0x120>)
 80148cc:	4293      	cmp	r3, r2
 80148ce:	d003      	beq.n	80148d8 <TIM_Base_SetConfig+0x40>
 80148d0:	687b      	ldr	r3, [r7, #4]
 80148d2:	4a3a      	ldr	r2, [pc, #232]	@ (80149bc <TIM_Base_SetConfig+0x124>)
 80148d4:	4293      	cmp	r3, r2
 80148d6:	d108      	bne.n	80148ea <TIM_Base_SetConfig+0x52>
 80148d8:	68fb      	ldr	r3, [r7, #12]
 80148da:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80148de:	60fb      	str	r3, [r7, #12]
 80148e0:	683b      	ldr	r3, [r7, #0]
 80148e2:	685b      	ldr	r3, [r3, #4]
 80148e4:	68fa      	ldr	r2, [r7, #12]
 80148e6:	4313      	orrs	r3, r2
 80148e8:	60fb      	str	r3, [r7, #12]
 80148ea:	687b      	ldr	r3, [r7, #4]
 80148ec:	4a2f      	ldr	r2, [pc, #188]	@ (80149ac <TIM_Base_SetConfig+0x114>)
 80148ee:	4293      	cmp	r3, r2
 80148f0:	d02b      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 80148f2:	687b      	ldr	r3, [r7, #4]
 80148f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80148f8:	d027      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 80148fa:	687b      	ldr	r3, [r7, #4]
 80148fc:	4a2c      	ldr	r2, [pc, #176]	@ (80149b0 <TIM_Base_SetConfig+0x118>)
 80148fe:	4293      	cmp	r3, r2
 8014900:	d023      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 8014902:	687b      	ldr	r3, [r7, #4]
 8014904:	4a2b      	ldr	r2, [pc, #172]	@ (80149b4 <TIM_Base_SetConfig+0x11c>)
 8014906:	4293      	cmp	r3, r2
 8014908:	d01f      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 801490a:	687b      	ldr	r3, [r7, #4]
 801490c:	4a2a      	ldr	r2, [pc, #168]	@ (80149b8 <TIM_Base_SetConfig+0x120>)
 801490e:	4293      	cmp	r3, r2
 8014910:	d01b      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 8014912:	687b      	ldr	r3, [r7, #4]
 8014914:	4a29      	ldr	r2, [pc, #164]	@ (80149bc <TIM_Base_SetConfig+0x124>)
 8014916:	4293      	cmp	r3, r2
 8014918:	d017      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 801491a:	687b      	ldr	r3, [r7, #4]
 801491c:	4a28      	ldr	r2, [pc, #160]	@ (80149c0 <TIM_Base_SetConfig+0x128>)
 801491e:	4293      	cmp	r3, r2
 8014920:	d013      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 8014922:	687b      	ldr	r3, [r7, #4]
 8014924:	4a27      	ldr	r2, [pc, #156]	@ (80149c4 <TIM_Base_SetConfig+0x12c>)
 8014926:	4293      	cmp	r3, r2
 8014928:	d00f      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 801492a:	687b      	ldr	r3, [r7, #4]
 801492c:	4a26      	ldr	r2, [pc, #152]	@ (80149c8 <TIM_Base_SetConfig+0x130>)
 801492e:	4293      	cmp	r3, r2
 8014930:	d00b      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 8014932:	687b      	ldr	r3, [r7, #4]
 8014934:	4a25      	ldr	r2, [pc, #148]	@ (80149cc <TIM_Base_SetConfig+0x134>)
 8014936:	4293      	cmp	r3, r2
 8014938:	d007      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 801493a:	687b      	ldr	r3, [r7, #4]
 801493c:	4a24      	ldr	r2, [pc, #144]	@ (80149d0 <TIM_Base_SetConfig+0x138>)
 801493e:	4293      	cmp	r3, r2
 8014940:	d003      	beq.n	801494a <TIM_Base_SetConfig+0xb2>
 8014942:	687b      	ldr	r3, [r7, #4]
 8014944:	4a23      	ldr	r2, [pc, #140]	@ (80149d4 <TIM_Base_SetConfig+0x13c>)
 8014946:	4293      	cmp	r3, r2
 8014948:	d108      	bne.n	801495c <TIM_Base_SetConfig+0xc4>
 801494a:	68fb      	ldr	r3, [r7, #12]
 801494c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8014950:	60fb      	str	r3, [r7, #12]
 8014952:	683b      	ldr	r3, [r7, #0]
 8014954:	68db      	ldr	r3, [r3, #12]
 8014956:	68fa      	ldr	r2, [r7, #12]
 8014958:	4313      	orrs	r3, r2
 801495a:	60fb      	str	r3, [r7, #12]
 801495c:	68fb      	ldr	r3, [r7, #12]
 801495e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8014962:	683b      	ldr	r3, [r7, #0]
 8014964:	695b      	ldr	r3, [r3, #20]
 8014966:	4313      	orrs	r3, r2
 8014968:	60fb      	str	r3, [r7, #12]
 801496a:	687b      	ldr	r3, [r7, #4]
 801496c:	68fa      	ldr	r2, [r7, #12]
 801496e:	601a      	str	r2, [r3, #0]
 8014970:	683b      	ldr	r3, [r7, #0]
 8014972:	689a      	ldr	r2, [r3, #8]
 8014974:	687b      	ldr	r3, [r7, #4]
 8014976:	62da      	str	r2, [r3, #44]	@ 0x2c
 8014978:	683b      	ldr	r3, [r7, #0]
 801497a:	681a      	ldr	r2, [r3, #0]
 801497c:	687b      	ldr	r3, [r7, #4]
 801497e:	629a      	str	r2, [r3, #40]	@ 0x28
 8014980:	687b      	ldr	r3, [r7, #4]
 8014982:	4a0a      	ldr	r2, [pc, #40]	@ (80149ac <TIM_Base_SetConfig+0x114>)
 8014984:	4293      	cmp	r3, r2
 8014986:	d003      	beq.n	8014990 <TIM_Base_SetConfig+0xf8>
 8014988:	687b      	ldr	r3, [r7, #4]
 801498a:	4a0c      	ldr	r2, [pc, #48]	@ (80149bc <TIM_Base_SetConfig+0x124>)
 801498c:	4293      	cmp	r3, r2
 801498e:	d103      	bne.n	8014998 <TIM_Base_SetConfig+0x100>
 8014990:	683b      	ldr	r3, [r7, #0]
 8014992:	691a      	ldr	r2, [r3, #16]
 8014994:	687b      	ldr	r3, [r7, #4]
 8014996:	631a      	str	r2, [r3, #48]	@ 0x30
 8014998:	687b      	ldr	r3, [r7, #4]
 801499a:	2201      	movs	r2, #1
 801499c:	615a      	str	r2, [r3, #20]
 801499e:	bf00      	nop
 80149a0:	3714      	adds	r7, #20
 80149a2:	46bd      	mov	sp, r7
 80149a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80149a8:	4770      	bx	lr
 80149aa:	bf00      	nop
 80149ac:	40010000 	.word	0x40010000
 80149b0:	40000400 	.word	0x40000400
 80149b4:	40000800 	.word	0x40000800
 80149b8:	40000c00 	.word	0x40000c00
 80149bc:	40010400 	.word	0x40010400
 80149c0:	40014000 	.word	0x40014000
 80149c4:	40014400 	.word	0x40014400
 80149c8:	40014800 	.word	0x40014800
 80149cc:	40001800 	.word	0x40001800
 80149d0:	40001c00 	.word	0x40001c00
 80149d4:	40002000 	.word	0x40002000

080149d8 <TIM_OC1_SetConfig>:
 80149d8:	b480      	push	{r7}
 80149da:	b087      	sub	sp, #28
 80149dc:	af00      	add	r7, sp, #0
 80149de:	6078      	str	r0, [r7, #4]
 80149e0:	6039      	str	r1, [r7, #0]
 80149e2:	687b      	ldr	r3, [r7, #4]
 80149e4:	6a1b      	ldr	r3, [r3, #32]
 80149e6:	f023 0201 	bic.w	r2, r3, #1
 80149ea:	687b      	ldr	r3, [r7, #4]
 80149ec:	621a      	str	r2, [r3, #32]
 80149ee:	687b      	ldr	r3, [r7, #4]
 80149f0:	6a1b      	ldr	r3, [r3, #32]
 80149f2:	617b      	str	r3, [r7, #20]
 80149f4:	687b      	ldr	r3, [r7, #4]
 80149f6:	685b      	ldr	r3, [r3, #4]
 80149f8:	613b      	str	r3, [r7, #16]
 80149fa:	687b      	ldr	r3, [r7, #4]
 80149fc:	699b      	ldr	r3, [r3, #24]
 80149fe:	60fb      	str	r3, [r7, #12]
 8014a00:	68fb      	ldr	r3, [r7, #12]
 8014a02:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8014a06:	60fb      	str	r3, [r7, #12]
 8014a08:	68fb      	ldr	r3, [r7, #12]
 8014a0a:	f023 0303 	bic.w	r3, r3, #3
 8014a0e:	60fb      	str	r3, [r7, #12]
 8014a10:	683b      	ldr	r3, [r7, #0]
 8014a12:	681b      	ldr	r3, [r3, #0]
 8014a14:	68fa      	ldr	r2, [r7, #12]
 8014a16:	4313      	orrs	r3, r2
 8014a18:	60fb      	str	r3, [r7, #12]
 8014a1a:	697b      	ldr	r3, [r7, #20]
 8014a1c:	f023 0302 	bic.w	r3, r3, #2
 8014a20:	617b      	str	r3, [r7, #20]
 8014a22:	683b      	ldr	r3, [r7, #0]
 8014a24:	689b      	ldr	r3, [r3, #8]
 8014a26:	697a      	ldr	r2, [r7, #20]
 8014a28:	4313      	orrs	r3, r2
 8014a2a:	617b      	str	r3, [r7, #20]
 8014a2c:	687b      	ldr	r3, [r7, #4]
 8014a2e:	4a20      	ldr	r2, [pc, #128]	@ (8014ab0 <TIM_OC1_SetConfig+0xd8>)
 8014a30:	4293      	cmp	r3, r2
 8014a32:	d003      	beq.n	8014a3c <TIM_OC1_SetConfig+0x64>
 8014a34:	687b      	ldr	r3, [r7, #4]
 8014a36:	4a1f      	ldr	r2, [pc, #124]	@ (8014ab4 <TIM_OC1_SetConfig+0xdc>)
 8014a38:	4293      	cmp	r3, r2
 8014a3a:	d10c      	bne.n	8014a56 <TIM_OC1_SetConfig+0x7e>
 8014a3c:	697b      	ldr	r3, [r7, #20]
 8014a3e:	f023 0308 	bic.w	r3, r3, #8
 8014a42:	617b      	str	r3, [r7, #20]
 8014a44:	683b      	ldr	r3, [r7, #0]
 8014a46:	68db      	ldr	r3, [r3, #12]
 8014a48:	697a      	ldr	r2, [r7, #20]
 8014a4a:	4313      	orrs	r3, r2
 8014a4c:	617b      	str	r3, [r7, #20]
 8014a4e:	697b      	ldr	r3, [r7, #20]
 8014a50:	f023 0304 	bic.w	r3, r3, #4
 8014a54:	617b      	str	r3, [r7, #20]
 8014a56:	687b      	ldr	r3, [r7, #4]
 8014a58:	4a15      	ldr	r2, [pc, #84]	@ (8014ab0 <TIM_OC1_SetConfig+0xd8>)
 8014a5a:	4293      	cmp	r3, r2
 8014a5c:	d003      	beq.n	8014a66 <TIM_OC1_SetConfig+0x8e>
 8014a5e:	687b      	ldr	r3, [r7, #4]
 8014a60:	4a14      	ldr	r2, [pc, #80]	@ (8014ab4 <TIM_OC1_SetConfig+0xdc>)
 8014a62:	4293      	cmp	r3, r2
 8014a64:	d111      	bne.n	8014a8a <TIM_OC1_SetConfig+0xb2>
 8014a66:	693b      	ldr	r3, [r7, #16]
 8014a68:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8014a6c:	613b      	str	r3, [r7, #16]
 8014a6e:	693b      	ldr	r3, [r7, #16]
 8014a70:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8014a74:	613b      	str	r3, [r7, #16]
 8014a76:	683b      	ldr	r3, [r7, #0]
 8014a78:	695b      	ldr	r3, [r3, #20]
 8014a7a:	693a      	ldr	r2, [r7, #16]
 8014a7c:	4313      	orrs	r3, r2
 8014a7e:	613b      	str	r3, [r7, #16]
 8014a80:	683b      	ldr	r3, [r7, #0]
 8014a82:	699b      	ldr	r3, [r3, #24]
 8014a84:	693a      	ldr	r2, [r7, #16]
 8014a86:	4313      	orrs	r3, r2
 8014a88:	613b      	str	r3, [r7, #16]
 8014a8a:	687b      	ldr	r3, [r7, #4]
 8014a8c:	693a      	ldr	r2, [r7, #16]
 8014a8e:	605a      	str	r2, [r3, #4]
 8014a90:	687b      	ldr	r3, [r7, #4]
 8014a92:	68fa      	ldr	r2, [r7, #12]
 8014a94:	619a      	str	r2, [r3, #24]
 8014a96:	683b      	ldr	r3, [r7, #0]
 8014a98:	685a      	ldr	r2, [r3, #4]
 8014a9a:	687b      	ldr	r3, [r7, #4]
 8014a9c:	635a      	str	r2, [r3, #52]	@ 0x34
 8014a9e:	687b      	ldr	r3, [r7, #4]
 8014aa0:	697a      	ldr	r2, [r7, #20]
 8014aa2:	621a      	str	r2, [r3, #32]
 8014aa4:	bf00      	nop
 8014aa6:	371c      	adds	r7, #28
 8014aa8:	46bd      	mov	sp, r7
 8014aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014aae:	4770      	bx	lr
 8014ab0:	40010000 	.word	0x40010000
 8014ab4:	40010400 	.word	0x40010400

08014ab8 <TIM_OC2_SetConfig>:
 8014ab8:	b480      	push	{r7}
 8014aba:	b087      	sub	sp, #28
 8014abc:	af00      	add	r7, sp, #0
 8014abe:	6078      	str	r0, [r7, #4]
 8014ac0:	6039      	str	r1, [r7, #0]
 8014ac2:	687b      	ldr	r3, [r7, #4]
 8014ac4:	6a1b      	ldr	r3, [r3, #32]
 8014ac6:	f023 0210 	bic.w	r2, r3, #16
 8014aca:	687b      	ldr	r3, [r7, #4]
 8014acc:	621a      	str	r2, [r3, #32]
 8014ace:	687b      	ldr	r3, [r7, #4]
 8014ad0:	6a1b      	ldr	r3, [r3, #32]
 8014ad2:	617b      	str	r3, [r7, #20]
 8014ad4:	687b      	ldr	r3, [r7, #4]
 8014ad6:	685b      	ldr	r3, [r3, #4]
 8014ad8:	613b      	str	r3, [r7, #16]
 8014ada:	687b      	ldr	r3, [r7, #4]
 8014adc:	699b      	ldr	r3, [r3, #24]
 8014ade:	60fb      	str	r3, [r7, #12]
 8014ae0:	68fb      	ldr	r3, [r7, #12]
 8014ae2:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8014ae6:	60fb      	str	r3, [r7, #12]
 8014ae8:	68fb      	ldr	r3, [r7, #12]
 8014aea:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8014aee:	60fb      	str	r3, [r7, #12]
 8014af0:	683b      	ldr	r3, [r7, #0]
 8014af2:	681b      	ldr	r3, [r3, #0]
 8014af4:	021b      	lsls	r3, r3, #8
 8014af6:	68fa      	ldr	r2, [r7, #12]
 8014af8:	4313      	orrs	r3, r2
 8014afa:	60fb      	str	r3, [r7, #12]
 8014afc:	697b      	ldr	r3, [r7, #20]
 8014afe:	f023 0320 	bic.w	r3, r3, #32
 8014b02:	617b      	str	r3, [r7, #20]
 8014b04:	683b      	ldr	r3, [r7, #0]
 8014b06:	689b      	ldr	r3, [r3, #8]
 8014b08:	011b      	lsls	r3, r3, #4
 8014b0a:	697a      	ldr	r2, [r7, #20]
 8014b0c:	4313      	orrs	r3, r2
 8014b0e:	617b      	str	r3, [r7, #20]
 8014b10:	687b      	ldr	r3, [r7, #4]
 8014b12:	4a22      	ldr	r2, [pc, #136]	@ (8014b9c <TIM_OC2_SetConfig+0xe4>)
 8014b14:	4293      	cmp	r3, r2
 8014b16:	d003      	beq.n	8014b20 <TIM_OC2_SetConfig+0x68>
 8014b18:	687b      	ldr	r3, [r7, #4]
 8014b1a:	4a21      	ldr	r2, [pc, #132]	@ (8014ba0 <TIM_OC2_SetConfig+0xe8>)
 8014b1c:	4293      	cmp	r3, r2
 8014b1e:	d10d      	bne.n	8014b3c <TIM_OC2_SetConfig+0x84>
 8014b20:	697b      	ldr	r3, [r7, #20]
 8014b22:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8014b26:	617b      	str	r3, [r7, #20]
 8014b28:	683b      	ldr	r3, [r7, #0]
 8014b2a:	68db      	ldr	r3, [r3, #12]
 8014b2c:	011b      	lsls	r3, r3, #4
 8014b2e:	697a      	ldr	r2, [r7, #20]
 8014b30:	4313      	orrs	r3, r2
 8014b32:	617b      	str	r3, [r7, #20]
 8014b34:	697b      	ldr	r3, [r7, #20]
 8014b36:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8014b3a:	617b      	str	r3, [r7, #20]
 8014b3c:	687b      	ldr	r3, [r7, #4]
 8014b3e:	4a17      	ldr	r2, [pc, #92]	@ (8014b9c <TIM_OC2_SetConfig+0xe4>)
 8014b40:	4293      	cmp	r3, r2
 8014b42:	d003      	beq.n	8014b4c <TIM_OC2_SetConfig+0x94>
 8014b44:	687b      	ldr	r3, [r7, #4]
 8014b46:	4a16      	ldr	r2, [pc, #88]	@ (8014ba0 <TIM_OC2_SetConfig+0xe8>)
 8014b48:	4293      	cmp	r3, r2
 8014b4a:	d113      	bne.n	8014b74 <TIM_OC2_SetConfig+0xbc>
 8014b4c:	693b      	ldr	r3, [r7, #16]
 8014b4e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8014b52:	613b      	str	r3, [r7, #16]
 8014b54:	693b      	ldr	r3, [r7, #16]
 8014b56:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8014b5a:	613b      	str	r3, [r7, #16]
 8014b5c:	683b      	ldr	r3, [r7, #0]
 8014b5e:	695b      	ldr	r3, [r3, #20]
 8014b60:	009b      	lsls	r3, r3, #2
 8014b62:	693a      	ldr	r2, [r7, #16]
 8014b64:	4313      	orrs	r3, r2
 8014b66:	613b      	str	r3, [r7, #16]
 8014b68:	683b      	ldr	r3, [r7, #0]
 8014b6a:	699b      	ldr	r3, [r3, #24]
 8014b6c:	009b      	lsls	r3, r3, #2
 8014b6e:	693a      	ldr	r2, [r7, #16]
 8014b70:	4313      	orrs	r3, r2
 8014b72:	613b      	str	r3, [r7, #16]
 8014b74:	687b      	ldr	r3, [r7, #4]
 8014b76:	693a      	ldr	r2, [r7, #16]
 8014b78:	605a      	str	r2, [r3, #4]
 8014b7a:	687b      	ldr	r3, [r7, #4]
 8014b7c:	68fa      	ldr	r2, [r7, #12]
 8014b7e:	619a      	str	r2, [r3, #24]
 8014b80:	683b      	ldr	r3, [r7, #0]
 8014b82:	685a      	ldr	r2, [r3, #4]
 8014b84:	687b      	ldr	r3, [r7, #4]
 8014b86:	639a      	str	r2, [r3, #56]	@ 0x38
 8014b88:	687b      	ldr	r3, [r7, #4]
 8014b8a:	697a      	ldr	r2, [r7, #20]
 8014b8c:	621a      	str	r2, [r3, #32]
 8014b8e:	bf00      	nop
 8014b90:	371c      	adds	r7, #28
 8014b92:	46bd      	mov	sp, r7
 8014b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014b98:	4770      	bx	lr
 8014b9a:	bf00      	nop
 8014b9c:	40010000 	.word	0x40010000
 8014ba0:	40010400 	.word	0x40010400

08014ba4 <TIM_OC3_SetConfig>:
 8014ba4:	b480      	push	{r7}
 8014ba6:	b087      	sub	sp, #28
 8014ba8:	af00      	add	r7, sp, #0
 8014baa:	6078      	str	r0, [r7, #4]
 8014bac:	6039      	str	r1, [r7, #0]
 8014bae:	687b      	ldr	r3, [r7, #4]
 8014bb0:	6a1b      	ldr	r3, [r3, #32]
 8014bb2:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8014bb6:	687b      	ldr	r3, [r7, #4]
 8014bb8:	621a      	str	r2, [r3, #32]
 8014bba:	687b      	ldr	r3, [r7, #4]
 8014bbc:	6a1b      	ldr	r3, [r3, #32]
 8014bbe:	617b      	str	r3, [r7, #20]
 8014bc0:	687b      	ldr	r3, [r7, #4]
 8014bc2:	685b      	ldr	r3, [r3, #4]
 8014bc4:	613b      	str	r3, [r7, #16]
 8014bc6:	687b      	ldr	r3, [r7, #4]
 8014bc8:	69db      	ldr	r3, [r3, #28]
 8014bca:	60fb      	str	r3, [r7, #12]
 8014bcc:	68fb      	ldr	r3, [r7, #12]
 8014bce:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8014bd2:	60fb      	str	r3, [r7, #12]
 8014bd4:	68fb      	ldr	r3, [r7, #12]
 8014bd6:	f023 0303 	bic.w	r3, r3, #3
 8014bda:	60fb      	str	r3, [r7, #12]
 8014bdc:	683b      	ldr	r3, [r7, #0]
 8014bde:	681b      	ldr	r3, [r3, #0]
 8014be0:	68fa      	ldr	r2, [r7, #12]
 8014be2:	4313      	orrs	r3, r2
 8014be4:	60fb      	str	r3, [r7, #12]
 8014be6:	697b      	ldr	r3, [r7, #20]
 8014be8:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8014bec:	617b      	str	r3, [r7, #20]
 8014bee:	683b      	ldr	r3, [r7, #0]
 8014bf0:	689b      	ldr	r3, [r3, #8]
 8014bf2:	021b      	lsls	r3, r3, #8
 8014bf4:	697a      	ldr	r2, [r7, #20]
 8014bf6:	4313      	orrs	r3, r2
 8014bf8:	617b      	str	r3, [r7, #20]
 8014bfa:	687b      	ldr	r3, [r7, #4]
 8014bfc:	4a21      	ldr	r2, [pc, #132]	@ (8014c84 <TIM_OC3_SetConfig+0xe0>)
 8014bfe:	4293      	cmp	r3, r2
 8014c00:	d003      	beq.n	8014c0a <TIM_OC3_SetConfig+0x66>
 8014c02:	687b      	ldr	r3, [r7, #4]
 8014c04:	4a20      	ldr	r2, [pc, #128]	@ (8014c88 <TIM_OC3_SetConfig+0xe4>)
 8014c06:	4293      	cmp	r3, r2
 8014c08:	d10d      	bne.n	8014c26 <TIM_OC3_SetConfig+0x82>
 8014c0a:	697b      	ldr	r3, [r7, #20]
 8014c0c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8014c10:	617b      	str	r3, [r7, #20]
 8014c12:	683b      	ldr	r3, [r7, #0]
 8014c14:	68db      	ldr	r3, [r3, #12]
 8014c16:	021b      	lsls	r3, r3, #8
 8014c18:	697a      	ldr	r2, [r7, #20]
 8014c1a:	4313      	orrs	r3, r2
 8014c1c:	617b      	str	r3, [r7, #20]
 8014c1e:	697b      	ldr	r3, [r7, #20]
 8014c20:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8014c24:	617b      	str	r3, [r7, #20]
 8014c26:	687b      	ldr	r3, [r7, #4]
 8014c28:	4a16      	ldr	r2, [pc, #88]	@ (8014c84 <TIM_OC3_SetConfig+0xe0>)
 8014c2a:	4293      	cmp	r3, r2
 8014c2c:	d003      	beq.n	8014c36 <TIM_OC3_SetConfig+0x92>
 8014c2e:	687b      	ldr	r3, [r7, #4]
 8014c30:	4a15      	ldr	r2, [pc, #84]	@ (8014c88 <TIM_OC3_SetConfig+0xe4>)
 8014c32:	4293      	cmp	r3, r2
 8014c34:	d113      	bne.n	8014c5e <TIM_OC3_SetConfig+0xba>
 8014c36:	693b      	ldr	r3, [r7, #16]
 8014c38:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8014c3c:	613b      	str	r3, [r7, #16]
 8014c3e:	693b      	ldr	r3, [r7, #16]
 8014c40:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8014c44:	613b      	str	r3, [r7, #16]
 8014c46:	683b      	ldr	r3, [r7, #0]
 8014c48:	695b      	ldr	r3, [r3, #20]
 8014c4a:	011b      	lsls	r3, r3, #4
 8014c4c:	693a      	ldr	r2, [r7, #16]
 8014c4e:	4313      	orrs	r3, r2
 8014c50:	613b      	str	r3, [r7, #16]
 8014c52:	683b      	ldr	r3, [r7, #0]
 8014c54:	699b      	ldr	r3, [r3, #24]
 8014c56:	011b      	lsls	r3, r3, #4
 8014c58:	693a      	ldr	r2, [r7, #16]
 8014c5a:	4313      	orrs	r3, r2
 8014c5c:	613b      	str	r3, [r7, #16]
 8014c5e:	687b      	ldr	r3, [r7, #4]
 8014c60:	693a      	ldr	r2, [r7, #16]
 8014c62:	605a      	str	r2, [r3, #4]
 8014c64:	687b      	ldr	r3, [r7, #4]
 8014c66:	68fa      	ldr	r2, [r7, #12]
 8014c68:	61da      	str	r2, [r3, #28]
 8014c6a:	683b      	ldr	r3, [r7, #0]
 8014c6c:	685a      	ldr	r2, [r3, #4]
 8014c6e:	687b      	ldr	r3, [r7, #4]
 8014c70:	63da      	str	r2, [r3, #60]	@ 0x3c
 8014c72:	687b      	ldr	r3, [r7, #4]
 8014c74:	697a      	ldr	r2, [r7, #20]
 8014c76:	621a      	str	r2, [r3, #32]
 8014c78:	bf00      	nop
 8014c7a:	371c      	adds	r7, #28
 8014c7c:	46bd      	mov	sp, r7
 8014c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014c82:	4770      	bx	lr
 8014c84:	40010000 	.word	0x40010000
 8014c88:	40010400 	.word	0x40010400

08014c8c <TIM_OC4_SetConfig>:
 8014c8c:	b480      	push	{r7}
 8014c8e:	b087      	sub	sp, #28
 8014c90:	af00      	add	r7, sp, #0
 8014c92:	6078      	str	r0, [r7, #4]
 8014c94:	6039      	str	r1, [r7, #0]
 8014c96:	687b      	ldr	r3, [r7, #4]
 8014c98:	6a1b      	ldr	r3, [r3, #32]
 8014c9a:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8014c9e:	687b      	ldr	r3, [r7, #4]
 8014ca0:	621a      	str	r2, [r3, #32]
 8014ca2:	687b      	ldr	r3, [r7, #4]
 8014ca4:	6a1b      	ldr	r3, [r3, #32]
 8014ca6:	613b      	str	r3, [r7, #16]
 8014ca8:	687b      	ldr	r3, [r7, #4]
 8014caa:	685b      	ldr	r3, [r3, #4]
 8014cac:	617b      	str	r3, [r7, #20]
 8014cae:	687b      	ldr	r3, [r7, #4]
 8014cb0:	69db      	ldr	r3, [r3, #28]
 8014cb2:	60fb      	str	r3, [r7, #12]
 8014cb4:	68fb      	ldr	r3, [r7, #12]
 8014cb6:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8014cba:	60fb      	str	r3, [r7, #12]
 8014cbc:	68fb      	ldr	r3, [r7, #12]
 8014cbe:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8014cc2:	60fb      	str	r3, [r7, #12]
 8014cc4:	683b      	ldr	r3, [r7, #0]
 8014cc6:	681b      	ldr	r3, [r3, #0]
 8014cc8:	021b      	lsls	r3, r3, #8
 8014cca:	68fa      	ldr	r2, [r7, #12]
 8014ccc:	4313      	orrs	r3, r2
 8014cce:	60fb      	str	r3, [r7, #12]
 8014cd0:	693b      	ldr	r3, [r7, #16]
 8014cd2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8014cd6:	613b      	str	r3, [r7, #16]
 8014cd8:	683b      	ldr	r3, [r7, #0]
 8014cda:	689b      	ldr	r3, [r3, #8]
 8014cdc:	031b      	lsls	r3, r3, #12
 8014cde:	693a      	ldr	r2, [r7, #16]
 8014ce0:	4313      	orrs	r3, r2
 8014ce2:	613b      	str	r3, [r7, #16]
 8014ce4:	687b      	ldr	r3, [r7, #4]
 8014ce6:	4a12      	ldr	r2, [pc, #72]	@ (8014d30 <TIM_OC4_SetConfig+0xa4>)
 8014ce8:	4293      	cmp	r3, r2
 8014cea:	d003      	beq.n	8014cf4 <TIM_OC4_SetConfig+0x68>
 8014cec:	687b      	ldr	r3, [r7, #4]
 8014cee:	4a11      	ldr	r2, [pc, #68]	@ (8014d34 <TIM_OC4_SetConfig+0xa8>)
 8014cf0:	4293      	cmp	r3, r2
 8014cf2:	d109      	bne.n	8014d08 <TIM_OC4_SetConfig+0x7c>
 8014cf4:	697b      	ldr	r3, [r7, #20]
 8014cf6:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8014cfa:	617b      	str	r3, [r7, #20]
 8014cfc:	683b      	ldr	r3, [r7, #0]
 8014cfe:	695b      	ldr	r3, [r3, #20]
 8014d00:	019b      	lsls	r3, r3, #6
 8014d02:	697a      	ldr	r2, [r7, #20]
 8014d04:	4313      	orrs	r3, r2
 8014d06:	617b      	str	r3, [r7, #20]
 8014d08:	687b      	ldr	r3, [r7, #4]
 8014d0a:	697a      	ldr	r2, [r7, #20]
 8014d0c:	605a      	str	r2, [r3, #4]
 8014d0e:	687b      	ldr	r3, [r7, #4]
 8014d10:	68fa      	ldr	r2, [r7, #12]
 8014d12:	61da      	str	r2, [r3, #28]
 8014d14:	683b      	ldr	r3, [r7, #0]
 8014d16:	685a      	ldr	r2, [r3, #4]
 8014d18:	687b      	ldr	r3, [r7, #4]
 8014d1a:	641a      	str	r2, [r3, #64]	@ 0x40
 8014d1c:	687b      	ldr	r3, [r7, #4]
 8014d1e:	693a      	ldr	r2, [r7, #16]
 8014d20:	621a      	str	r2, [r3, #32]
 8014d22:	bf00      	nop
 8014d24:	371c      	adds	r7, #28
 8014d26:	46bd      	mov	sp, r7
 8014d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d2c:	4770      	bx	lr
 8014d2e:	bf00      	nop
 8014d30:	40010000 	.word	0x40010000
 8014d34:	40010400 	.word	0x40010400

08014d38 <TIM_TI1_ConfigInputStage>:
 8014d38:	b480      	push	{r7}
 8014d3a:	b087      	sub	sp, #28
 8014d3c:	af00      	add	r7, sp, #0
 8014d3e:	60f8      	str	r0, [r7, #12]
 8014d40:	60b9      	str	r1, [r7, #8]
 8014d42:	607a      	str	r2, [r7, #4]
 8014d44:	68fb      	ldr	r3, [r7, #12]
 8014d46:	6a1b      	ldr	r3, [r3, #32]
 8014d48:	617b      	str	r3, [r7, #20]
 8014d4a:	68fb      	ldr	r3, [r7, #12]
 8014d4c:	6a1b      	ldr	r3, [r3, #32]
 8014d4e:	f023 0201 	bic.w	r2, r3, #1
 8014d52:	68fb      	ldr	r3, [r7, #12]
 8014d54:	621a      	str	r2, [r3, #32]
 8014d56:	68fb      	ldr	r3, [r7, #12]
 8014d58:	699b      	ldr	r3, [r3, #24]
 8014d5a:	613b      	str	r3, [r7, #16]
 8014d5c:	693b      	ldr	r3, [r7, #16]
 8014d5e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8014d62:	613b      	str	r3, [r7, #16]
 8014d64:	687b      	ldr	r3, [r7, #4]
 8014d66:	011b      	lsls	r3, r3, #4
 8014d68:	693a      	ldr	r2, [r7, #16]
 8014d6a:	4313      	orrs	r3, r2
 8014d6c:	613b      	str	r3, [r7, #16]
 8014d6e:	697b      	ldr	r3, [r7, #20]
 8014d70:	f023 030a 	bic.w	r3, r3, #10
 8014d74:	617b      	str	r3, [r7, #20]
 8014d76:	697a      	ldr	r2, [r7, #20]
 8014d78:	68bb      	ldr	r3, [r7, #8]
 8014d7a:	4313      	orrs	r3, r2
 8014d7c:	617b      	str	r3, [r7, #20]
 8014d7e:	68fb      	ldr	r3, [r7, #12]
 8014d80:	693a      	ldr	r2, [r7, #16]
 8014d82:	619a      	str	r2, [r3, #24]
 8014d84:	68fb      	ldr	r3, [r7, #12]
 8014d86:	697a      	ldr	r2, [r7, #20]
 8014d88:	621a      	str	r2, [r3, #32]
 8014d8a:	bf00      	nop
 8014d8c:	371c      	adds	r7, #28
 8014d8e:	46bd      	mov	sp, r7
 8014d90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d94:	4770      	bx	lr

08014d96 <TIM_TI2_ConfigInputStage>:
 8014d96:	b480      	push	{r7}
 8014d98:	b087      	sub	sp, #28
 8014d9a:	af00      	add	r7, sp, #0
 8014d9c:	60f8      	str	r0, [r7, #12]
 8014d9e:	60b9      	str	r1, [r7, #8]
 8014da0:	607a      	str	r2, [r7, #4]
 8014da2:	68fb      	ldr	r3, [r7, #12]
 8014da4:	6a1b      	ldr	r3, [r3, #32]
 8014da6:	f023 0210 	bic.w	r2, r3, #16
 8014daa:	68fb      	ldr	r3, [r7, #12]
 8014dac:	621a      	str	r2, [r3, #32]
 8014dae:	68fb      	ldr	r3, [r7, #12]
 8014db0:	699b      	ldr	r3, [r3, #24]
 8014db2:	617b      	str	r3, [r7, #20]
 8014db4:	68fb      	ldr	r3, [r7, #12]
 8014db6:	6a1b      	ldr	r3, [r3, #32]
 8014db8:	613b      	str	r3, [r7, #16]
 8014dba:	697b      	ldr	r3, [r7, #20]
 8014dbc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8014dc0:	617b      	str	r3, [r7, #20]
 8014dc2:	687b      	ldr	r3, [r7, #4]
 8014dc4:	031b      	lsls	r3, r3, #12
 8014dc6:	697a      	ldr	r2, [r7, #20]
 8014dc8:	4313      	orrs	r3, r2
 8014dca:	617b      	str	r3, [r7, #20]
 8014dcc:	693b      	ldr	r3, [r7, #16]
 8014dce:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8014dd2:	613b      	str	r3, [r7, #16]
 8014dd4:	68bb      	ldr	r3, [r7, #8]
 8014dd6:	011b      	lsls	r3, r3, #4
 8014dd8:	693a      	ldr	r2, [r7, #16]
 8014dda:	4313      	orrs	r3, r2
 8014ddc:	613b      	str	r3, [r7, #16]
 8014dde:	68fb      	ldr	r3, [r7, #12]
 8014de0:	697a      	ldr	r2, [r7, #20]
 8014de2:	619a      	str	r2, [r3, #24]
 8014de4:	68fb      	ldr	r3, [r7, #12]
 8014de6:	693a      	ldr	r2, [r7, #16]
 8014de8:	621a      	str	r2, [r3, #32]
 8014dea:	bf00      	nop
 8014dec:	371c      	adds	r7, #28
 8014dee:	46bd      	mov	sp, r7
 8014df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014df4:	4770      	bx	lr

08014df6 <TIM_ITRx_SetConfig>:
 8014df6:	b480      	push	{r7}
 8014df8:	b085      	sub	sp, #20
 8014dfa:	af00      	add	r7, sp, #0
 8014dfc:	6078      	str	r0, [r7, #4]
 8014dfe:	6039      	str	r1, [r7, #0]
 8014e00:	687b      	ldr	r3, [r7, #4]
 8014e02:	689b      	ldr	r3, [r3, #8]
 8014e04:	60fb      	str	r3, [r7, #12]
 8014e06:	68fb      	ldr	r3, [r7, #12]
 8014e08:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8014e0c:	60fb      	str	r3, [r7, #12]
 8014e0e:	683a      	ldr	r2, [r7, #0]
 8014e10:	68fb      	ldr	r3, [r7, #12]
 8014e12:	4313      	orrs	r3, r2
 8014e14:	f043 0307 	orr.w	r3, r3, #7
 8014e18:	60fb      	str	r3, [r7, #12]
 8014e1a:	687b      	ldr	r3, [r7, #4]
 8014e1c:	68fa      	ldr	r2, [r7, #12]
 8014e1e:	609a      	str	r2, [r3, #8]
 8014e20:	bf00      	nop
 8014e22:	3714      	adds	r7, #20
 8014e24:	46bd      	mov	sp, r7
 8014e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e2a:	4770      	bx	lr

08014e2c <TIM_ETR_SetConfig>:
 8014e2c:	b480      	push	{r7}
 8014e2e:	b087      	sub	sp, #28
 8014e30:	af00      	add	r7, sp, #0
 8014e32:	60f8      	str	r0, [r7, #12]
 8014e34:	60b9      	str	r1, [r7, #8]
 8014e36:	607a      	str	r2, [r7, #4]
 8014e38:	603b      	str	r3, [r7, #0]
 8014e3a:	68fb      	ldr	r3, [r7, #12]
 8014e3c:	689b      	ldr	r3, [r3, #8]
 8014e3e:	617b      	str	r3, [r7, #20]
 8014e40:	697b      	ldr	r3, [r7, #20]
 8014e42:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8014e46:	617b      	str	r3, [r7, #20]
 8014e48:	683b      	ldr	r3, [r7, #0]
 8014e4a:	021a      	lsls	r2, r3, #8
 8014e4c:	687b      	ldr	r3, [r7, #4]
 8014e4e:	431a      	orrs	r2, r3
 8014e50:	68bb      	ldr	r3, [r7, #8]
 8014e52:	4313      	orrs	r3, r2
 8014e54:	697a      	ldr	r2, [r7, #20]
 8014e56:	4313      	orrs	r3, r2
 8014e58:	617b      	str	r3, [r7, #20]
 8014e5a:	68fb      	ldr	r3, [r7, #12]
 8014e5c:	697a      	ldr	r2, [r7, #20]
 8014e5e:	609a      	str	r2, [r3, #8]
 8014e60:	bf00      	nop
 8014e62:	371c      	adds	r7, #28
 8014e64:	46bd      	mov	sp, r7
 8014e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e6a:	4770      	bx	lr

08014e6c <TIM_CCxChannelCmd>:
 8014e6c:	b480      	push	{r7}
 8014e6e:	b087      	sub	sp, #28
 8014e70:	af00      	add	r7, sp, #0
 8014e72:	60f8      	str	r0, [r7, #12]
 8014e74:	60b9      	str	r1, [r7, #8]
 8014e76:	607a      	str	r2, [r7, #4]
 8014e78:	68bb      	ldr	r3, [r7, #8]
 8014e7a:	f003 031f 	and.w	r3, r3, #31
 8014e7e:	2201      	movs	r2, #1
 8014e80:	fa02 f303 	lsl.w	r3, r2, r3
 8014e84:	617b      	str	r3, [r7, #20]
 8014e86:	68fb      	ldr	r3, [r7, #12]
 8014e88:	6a1a      	ldr	r2, [r3, #32]
 8014e8a:	697b      	ldr	r3, [r7, #20]
 8014e8c:	43db      	mvns	r3, r3
 8014e8e:	401a      	ands	r2, r3
 8014e90:	68fb      	ldr	r3, [r7, #12]
 8014e92:	621a      	str	r2, [r3, #32]
 8014e94:	68fb      	ldr	r3, [r7, #12]
 8014e96:	6a1a      	ldr	r2, [r3, #32]
 8014e98:	68bb      	ldr	r3, [r7, #8]
 8014e9a:	f003 031f 	and.w	r3, r3, #31
 8014e9e:	6879      	ldr	r1, [r7, #4]
 8014ea0:	fa01 f303 	lsl.w	r3, r1, r3
 8014ea4:	431a      	orrs	r2, r3
 8014ea6:	68fb      	ldr	r3, [r7, #12]
 8014ea8:	621a      	str	r2, [r3, #32]
 8014eaa:	bf00      	nop
 8014eac:	371c      	adds	r7, #28
 8014eae:	46bd      	mov	sp, r7
 8014eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014eb4:	4770      	bx	lr
	...

08014eb8 <HAL_TIMEx_MasterConfigSynchronization>:
 8014eb8:	b480      	push	{r7}
 8014eba:	b085      	sub	sp, #20
 8014ebc:	af00      	add	r7, sp, #0
 8014ebe:	6078      	str	r0, [r7, #4]
 8014ec0:	6039      	str	r1, [r7, #0]
 8014ec2:	687b      	ldr	r3, [r7, #4]
 8014ec4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8014ec8:	2b01      	cmp	r3, #1
 8014eca:	d101      	bne.n	8014ed0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8014ecc:	2302      	movs	r3, #2
 8014ece:	e05a      	b.n	8014f86 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8014ed0:	687b      	ldr	r3, [r7, #4]
 8014ed2:	2201      	movs	r2, #1
 8014ed4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8014ed8:	687b      	ldr	r3, [r7, #4]
 8014eda:	2202      	movs	r2, #2
 8014edc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8014ee0:	687b      	ldr	r3, [r7, #4]
 8014ee2:	681b      	ldr	r3, [r3, #0]
 8014ee4:	685b      	ldr	r3, [r3, #4]
 8014ee6:	60fb      	str	r3, [r7, #12]
 8014ee8:	687b      	ldr	r3, [r7, #4]
 8014eea:	681b      	ldr	r3, [r3, #0]
 8014eec:	689b      	ldr	r3, [r3, #8]
 8014eee:	60bb      	str	r3, [r7, #8]
 8014ef0:	68fb      	ldr	r3, [r7, #12]
 8014ef2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8014ef6:	60fb      	str	r3, [r7, #12]
 8014ef8:	683b      	ldr	r3, [r7, #0]
 8014efa:	681b      	ldr	r3, [r3, #0]
 8014efc:	68fa      	ldr	r2, [r7, #12]
 8014efe:	4313      	orrs	r3, r2
 8014f00:	60fb      	str	r3, [r7, #12]
 8014f02:	687b      	ldr	r3, [r7, #4]
 8014f04:	681b      	ldr	r3, [r3, #0]
 8014f06:	68fa      	ldr	r2, [r7, #12]
 8014f08:	605a      	str	r2, [r3, #4]
 8014f0a:	687b      	ldr	r3, [r7, #4]
 8014f0c:	681b      	ldr	r3, [r3, #0]
 8014f0e:	4a21      	ldr	r2, [pc, #132]	@ (8014f94 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8014f10:	4293      	cmp	r3, r2
 8014f12:	d022      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f14:	687b      	ldr	r3, [r7, #4]
 8014f16:	681b      	ldr	r3, [r3, #0]
 8014f18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8014f1c:	d01d      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f1e:	687b      	ldr	r3, [r7, #4]
 8014f20:	681b      	ldr	r3, [r3, #0]
 8014f22:	4a1d      	ldr	r2, [pc, #116]	@ (8014f98 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8014f24:	4293      	cmp	r3, r2
 8014f26:	d018      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f28:	687b      	ldr	r3, [r7, #4]
 8014f2a:	681b      	ldr	r3, [r3, #0]
 8014f2c:	4a1b      	ldr	r2, [pc, #108]	@ (8014f9c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8014f2e:	4293      	cmp	r3, r2
 8014f30:	d013      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f32:	687b      	ldr	r3, [r7, #4]
 8014f34:	681b      	ldr	r3, [r3, #0]
 8014f36:	4a1a      	ldr	r2, [pc, #104]	@ (8014fa0 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8014f38:	4293      	cmp	r3, r2
 8014f3a:	d00e      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f3c:	687b      	ldr	r3, [r7, #4]
 8014f3e:	681b      	ldr	r3, [r3, #0]
 8014f40:	4a18      	ldr	r2, [pc, #96]	@ (8014fa4 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8014f42:	4293      	cmp	r3, r2
 8014f44:	d009      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f46:	687b      	ldr	r3, [r7, #4]
 8014f48:	681b      	ldr	r3, [r3, #0]
 8014f4a:	4a17      	ldr	r2, [pc, #92]	@ (8014fa8 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8014f4c:	4293      	cmp	r3, r2
 8014f4e:	d004      	beq.n	8014f5a <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8014f50:	687b      	ldr	r3, [r7, #4]
 8014f52:	681b      	ldr	r3, [r3, #0]
 8014f54:	4a15      	ldr	r2, [pc, #84]	@ (8014fac <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8014f56:	4293      	cmp	r3, r2
 8014f58:	d10c      	bne.n	8014f74 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8014f5a:	68bb      	ldr	r3, [r7, #8]
 8014f5c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8014f60:	60bb      	str	r3, [r7, #8]
 8014f62:	683b      	ldr	r3, [r7, #0]
 8014f64:	685b      	ldr	r3, [r3, #4]
 8014f66:	68ba      	ldr	r2, [r7, #8]
 8014f68:	4313      	orrs	r3, r2
 8014f6a:	60bb      	str	r3, [r7, #8]
 8014f6c:	687b      	ldr	r3, [r7, #4]
 8014f6e:	681b      	ldr	r3, [r3, #0]
 8014f70:	68ba      	ldr	r2, [r7, #8]
 8014f72:	609a      	str	r2, [r3, #8]
 8014f74:	687b      	ldr	r3, [r7, #4]
 8014f76:	2201      	movs	r2, #1
 8014f78:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8014f7c:	687b      	ldr	r3, [r7, #4]
 8014f7e:	2200      	movs	r2, #0
 8014f80:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8014f84:	2300      	movs	r3, #0
 8014f86:	4618      	mov	r0, r3
 8014f88:	3714      	adds	r7, #20
 8014f8a:	46bd      	mov	sp, r7
 8014f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f90:	4770      	bx	lr
 8014f92:	bf00      	nop
 8014f94:	40010000 	.word	0x40010000
 8014f98:	40000400 	.word	0x40000400
 8014f9c:	40000800 	.word	0x40000800
 8014fa0:	40000c00 	.word	0x40000c00
 8014fa4:	40010400 	.word	0x40010400
 8014fa8:	40014000 	.word	0x40014000
 8014fac:	40001800 	.word	0x40001800

08014fb0 <HAL_TIMEx_CommutCallback>:
 8014fb0:	b480      	push	{r7}
 8014fb2:	b083      	sub	sp, #12
 8014fb4:	af00      	add	r7, sp, #0
 8014fb6:	6078      	str	r0, [r7, #4]
 8014fb8:	bf00      	nop
 8014fba:	370c      	adds	r7, #12
 8014fbc:	46bd      	mov	sp, r7
 8014fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014fc2:	4770      	bx	lr

08014fc4 <HAL_TIMEx_BreakCallback>:
 8014fc4:	b480      	push	{r7}
 8014fc6:	b083      	sub	sp, #12
 8014fc8:	af00      	add	r7, sp, #0
 8014fca:	6078      	str	r0, [r7, #4]
 8014fcc:	bf00      	nop
 8014fce:	370c      	adds	r7, #12
 8014fd0:	46bd      	mov	sp, r7
 8014fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014fd6:	4770      	bx	lr

08014fd8 <HAL_UART_Init>:
 8014fd8:	b580      	push	{r7, lr}
 8014fda:	b082      	sub	sp, #8
 8014fdc:	af00      	add	r7, sp, #0
 8014fde:	6078      	str	r0, [r7, #4]
 8014fe0:	687b      	ldr	r3, [r7, #4]
 8014fe2:	2b00      	cmp	r3, #0
 8014fe4:	d101      	bne.n	8014fea <HAL_UART_Init+0x12>
 8014fe6:	2301      	movs	r3, #1
 8014fe8:	e03f      	b.n	801506a <HAL_UART_Init+0x92>
 8014fea:	687b      	ldr	r3, [r7, #4]
 8014fec:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8014ff0:	b2db      	uxtb	r3, r3
 8014ff2:	2b00      	cmp	r3, #0
 8014ff4:	d106      	bne.n	8015004 <HAL_UART_Init+0x2c>
 8014ff6:	687b      	ldr	r3, [r7, #4]
 8014ff8:	2200      	movs	r2, #0
 8014ffa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8014ffe:	6878      	ldr	r0, [r7, #4]
 8015000:	f7ef fb56 	bl	80046b0 <HAL_UART_MspInit>
 8015004:	687b      	ldr	r3, [r7, #4]
 8015006:	2224      	movs	r2, #36	@ 0x24
 8015008:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 801500c:	687b      	ldr	r3, [r7, #4]
 801500e:	681b      	ldr	r3, [r3, #0]
 8015010:	68da      	ldr	r2, [r3, #12]
 8015012:	687b      	ldr	r3, [r7, #4]
 8015014:	681b      	ldr	r3, [r3, #0]
 8015016:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 801501a:	60da      	str	r2, [r3, #12]
 801501c:	6878      	ldr	r0, [r7, #4]
 801501e:	f000 fe51 	bl	8015cc4 <UART_SetConfig>
 8015022:	687b      	ldr	r3, [r7, #4]
 8015024:	681b      	ldr	r3, [r3, #0]
 8015026:	691a      	ldr	r2, [r3, #16]
 8015028:	687b      	ldr	r3, [r7, #4]
 801502a:	681b      	ldr	r3, [r3, #0]
 801502c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8015030:	611a      	str	r2, [r3, #16]
 8015032:	687b      	ldr	r3, [r7, #4]
 8015034:	681b      	ldr	r3, [r3, #0]
 8015036:	695a      	ldr	r2, [r3, #20]
 8015038:	687b      	ldr	r3, [r7, #4]
 801503a:	681b      	ldr	r3, [r3, #0]
 801503c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8015040:	615a      	str	r2, [r3, #20]
 8015042:	687b      	ldr	r3, [r7, #4]
 8015044:	681b      	ldr	r3, [r3, #0]
 8015046:	68da      	ldr	r2, [r3, #12]
 8015048:	687b      	ldr	r3, [r7, #4]
 801504a:	681b      	ldr	r3, [r3, #0]
 801504c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8015050:	60da      	str	r2, [r3, #12]
 8015052:	687b      	ldr	r3, [r7, #4]
 8015054:	2200      	movs	r2, #0
 8015056:	641a      	str	r2, [r3, #64]	@ 0x40
 8015058:	687b      	ldr	r3, [r7, #4]
 801505a:	2220      	movs	r2, #32
 801505c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8015060:	687b      	ldr	r3, [r7, #4]
 8015062:	2220      	movs	r2, #32
 8015064:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8015068:	2300      	movs	r3, #0
 801506a:	4618      	mov	r0, r3
 801506c:	3708      	adds	r7, #8
 801506e:	46bd      	mov	sp, r7
 8015070:	bd80      	pop	{r7, pc}
	...

08015074 <HAL_UART_Transmit_DMA>:
 8015074:	b580      	push	{r7, lr}
 8015076:	b08c      	sub	sp, #48	@ 0x30
 8015078:	af00      	add	r7, sp, #0
 801507a:	60f8      	str	r0, [r7, #12]
 801507c:	60b9      	str	r1, [r7, #8]
 801507e:	4613      	mov	r3, r2
 8015080:	80fb      	strh	r3, [r7, #6]
 8015082:	68fb      	ldr	r3, [r7, #12]
 8015084:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8015088:	b2db      	uxtb	r3, r3
 801508a:	2b20      	cmp	r3, #32
 801508c:	d165      	bne.n	801515a <HAL_UART_Transmit_DMA+0xe6>
 801508e:	68bb      	ldr	r3, [r7, #8]
 8015090:	2b00      	cmp	r3, #0
 8015092:	d002      	beq.n	801509a <HAL_UART_Transmit_DMA+0x26>
 8015094:	88fb      	ldrh	r3, [r7, #6]
 8015096:	2b00      	cmp	r3, #0
 8015098:	d101      	bne.n	801509e <HAL_UART_Transmit_DMA+0x2a>
 801509a:	2301      	movs	r3, #1
 801509c:	e05e      	b.n	801515c <HAL_UART_Transmit_DMA+0xe8>
 801509e:	68fb      	ldr	r3, [r7, #12]
 80150a0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80150a4:	2b01      	cmp	r3, #1
 80150a6:	d101      	bne.n	80150ac <HAL_UART_Transmit_DMA+0x38>
 80150a8:	2302      	movs	r3, #2
 80150aa:	e057      	b.n	801515c <HAL_UART_Transmit_DMA+0xe8>
 80150ac:	68fb      	ldr	r3, [r7, #12]
 80150ae:	2201      	movs	r2, #1
 80150b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80150b4:	68ba      	ldr	r2, [r7, #8]
 80150b6:	68fb      	ldr	r3, [r7, #12]
 80150b8:	621a      	str	r2, [r3, #32]
 80150ba:	68fb      	ldr	r3, [r7, #12]
 80150bc:	88fa      	ldrh	r2, [r7, #6]
 80150be:	849a      	strh	r2, [r3, #36]	@ 0x24
 80150c0:	68fb      	ldr	r3, [r7, #12]
 80150c2:	88fa      	ldrh	r2, [r7, #6]
 80150c4:	84da      	strh	r2, [r3, #38]	@ 0x26
 80150c6:	68fb      	ldr	r3, [r7, #12]
 80150c8:	2200      	movs	r2, #0
 80150ca:	641a      	str	r2, [r3, #64]	@ 0x40
 80150cc:	68fb      	ldr	r3, [r7, #12]
 80150ce:	2221      	movs	r2, #33	@ 0x21
 80150d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80150d4:	68fb      	ldr	r3, [r7, #12]
 80150d6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80150d8:	4a22      	ldr	r2, [pc, #136]	@ (8015164 <HAL_UART_Transmit_DMA+0xf0>)
 80150da:	63da      	str	r2, [r3, #60]	@ 0x3c
 80150dc:	68fb      	ldr	r3, [r7, #12]
 80150de:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80150e0:	4a21      	ldr	r2, [pc, #132]	@ (8015168 <HAL_UART_Transmit_DMA+0xf4>)
 80150e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80150e4:	68fb      	ldr	r3, [r7, #12]
 80150e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80150e8:	4a20      	ldr	r2, [pc, #128]	@ (801516c <HAL_UART_Transmit_DMA+0xf8>)
 80150ea:	64da      	str	r2, [r3, #76]	@ 0x4c
 80150ec:	68fb      	ldr	r3, [r7, #12]
 80150ee:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80150f0:	2200      	movs	r2, #0
 80150f2:	651a      	str	r2, [r3, #80]	@ 0x50
 80150f4:	f107 0308 	add.w	r3, r7, #8
 80150f8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80150fa:	68fb      	ldr	r3, [r7, #12]
 80150fc:	6b58      	ldr	r0, [r3, #52]	@ 0x34
 80150fe:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8015100:	6819      	ldr	r1, [r3, #0]
 8015102:	68fb      	ldr	r3, [r7, #12]
 8015104:	681b      	ldr	r3, [r3, #0]
 8015106:	3304      	adds	r3, #4
 8015108:	461a      	mov	r2, r3
 801510a:	88fb      	ldrh	r3, [r7, #6]
 801510c:	f7fa f828 	bl	800f160 <HAL_DMA_Start_IT>
 8015110:	68fb      	ldr	r3, [r7, #12]
 8015112:	681b      	ldr	r3, [r3, #0]
 8015114:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8015118:	601a      	str	r2, [r3, #0]
 801511a:	68fb      	ldr	r3, [r7, #12]
 801511c:	2200      	movs	r2, #0
 801511e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8015122:	68fb      	ldr	r3, [r7, #12]
 8015124:	681b      	ldr	r3, [r3, #0]
 8015126:	3314      	adds	r3, #20
 8015128:	61bb      	str	r3, [r7, #24]
 801512a:	69bb      	ldr	r3, [r7, #24]
 801512c:	e853 3f00 	ldrex	r3, [r3]
 8015130:	617b      	str	r3, [r7, #20]
 8015132:	697b      	ldr	r3, [r7, #20]
 8015134:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8015138:	62bb      	str	r3, [r7, #40]	@ 0x28
 801513a:	68fb      	ldr	r3, [r7, #12]
 801513c:	681b      	ldr	r3, [r3, #0]
 801513e:	3314      	adds	r3, #20
 8015140:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8015142:	627a      	str	r2, [r7, #36]	@ 0x24
 8015144:	623b      	str	r3, [r7, #32]
 8015146:	6a39      	ldr	r1, [r7, #32]
 8015148:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801514a:	e841 2300 	strex	r3, r2, [r1]
 801514e:	61fb      	str	r3, [r7, #28]
 8015150:	69fb      	ldr	r3, [r7, #28]
 8015152:	2b00      	cmp	r3, #0
 8015154:	d1e5      	bne.n	8015122 <HAL_UART_Transmit_DMA+0xae>
 8015156:	2300      	movs	r3, #0
 8015158:	e000      	b.n	801515c <HAL_UART_Transmit_DMA+0xe8>
 801515a:	2302      	movs	r3, #2
 801515c:	4618      	mov	r0, r3
 801515e:	3730      	adds	r7, #48	@ 0x30
 8015160:	46bd      	mov	sp, r7
 8015162:	bd80      	pop	{r7, pc}
 8015164:	080157f5 	.word	0x080157f5
 8015168:	0801588f 	.word	0x0801588f
 801516c:	080158ab 	.word	0x080158ab

08015170 <HAL_UART_DMAStop>:
 8015170:	b580      	push	{r7, lr}
 8015172:	b090      	sub	sp, #64	@ 0x40
 8015174:	af00      	add	r7, sp, #0
 8015176:	6078      	str	r0, [r7, #4]
 8015178:	2300      	movs	r3, #0
 801517a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801517c:	687b      	ldr	r3, [r7, #4]
 801517e:	681b      	ldr	r3, [r3, #0]
 8015180:	695b      	ldr	r3, [r3, #20]
 8015182:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8015186:	2b80      	cmp	r3, #128	@ 0x80
 8015188:	bf0c      	ite	eq
 801518a:	2301      	moveq	r3, #1
 801518c:	2300      	movne	r3, #0
 801518e:	b2db      	uxtb	r3, r3
 8015190:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8015192:	687b      	ldr	r3, [r7, #4]
 8015194:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8015198:	b2db      	uxtb	r3, r3
 801519a:	2b21      	cmp	r3, #33	@ 0x21
 801519c:	d128      	bne.n	80151f0 <HAL_UART_DMAStop+0x80>
 801519e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80151a0:	2b00      	cmp	r3, #0
 80151a2:	d025      	beq.n	80151f0 <HAL_UART_DMAStop+0x80>
 80151a4:	687b      	ldr	r3, [r7, #4]
 80151a6:	681b      	ldr	r3, [r3, #0]
 80151a8:	3314      	adds	r3, #20
 80151aa:	627b      	str	r3, [r7, #36]	@ 0x24
 80151ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80151ae:	e853 3f00 	ldrex	r3, [r3]
 80151b2:	623b      	str	r3, [r7, #32]
 80151b4:	6a3b      	ldr	r3, [r7, #32]
 80151b6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80151ba:	63bb      	str	r3, [r7, #56]	@ 0x38
 80151bc:	687b      	ldr	r3, [r7, #4]
 80151be:	681b      	ldr	r3, [r3, #0]
 80151c0:	3314      	adds	r3, #20
 80151c2:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80151c4:	633a      	str	r2, [r7, #48]	@ 0x30
 80151c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80151c8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80151ca:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80151cc:	e841 2300 	strex	r3, r2, [r1]
 80151d0:	62bb      	str	r3, [r7, #40]	@ 0x28
 80151d2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80151d4:	2b00      	cmp	r3, #0
 80151d6:	d1e5      	bne.n	80151a4 <HAL_UART_DMAStop+0x34>
 80151d8:	687b      	ldr	r3, [r7, #4]
 80151da:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80151dc:	2b00      	cmp	r3, #0
 80151de:	d004      	beq.n	80151ea <HAL_UART_DMAStop+0x7a>
 80151e0:	687b      	ldr	r3, [r7, #4]
 80151e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80151e4:	4618      	mov	r0, r3
 80151e6:	f7fa f813 	bl	800f210 <HAL_DMA_Abort>
 80151ea:	6878      	ldr	r0, [r7, #4]
 80151ec:	f000 fba7 	bl	801593e <UART_EndTxTransfer>
 80151f0:	687b      	ldr	r3, [r7, #4]
 80151f2:	681b      	ldr	r3, [r3, #0]
 80151f4:	695b      	ldr	r3, [r3, #20]
 80151f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80151fa:	2b40      	cmp	r3, #64	@ 0x40
 80151fc:	bf0c      	ite	eq
 80151fe:	2301      	moveq	r3, #1
 8015200:	2300      	movne	r3, #0
 8015202:	b2db      	uxtb	r3, r3
 8015204:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8015206:	687b      	ldr	r3, [r7, #4]
 8015208:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 801520c:	b2db      	uxtb	r3, r3
 801520e:	2b22      	cmp	r3, #34	@ 0x22
 8015210:	d128      	bne.n	8015264 <HAL_UART_DMAStop+0xf4>
 8015212:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8015214:	2b00      	cmp	r3, #0
 8015216:	d025      	beq.n	8015264 <HAL_UART_DMAStop+0xf4>
 8015218:	687b      	ldr	r3, [r7, #4]
 801521a:	681b      	ldr	r3, [r3, #0]
 801521c:	3314      	adds	r3, #20
 801521e:	613b      	str	r3, [r7, #16]
 8015220:	693b      	ldr	r3, [r7, #16]
 8015222:	e853 3f00 	ldrex	r3, [r3]
 8015226:	60fb      	str	r3, [r7, #12]
 8015228:	68fb      	ldr	r3, [r7, #12]
 801522a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 801522e:	637b      	str	r3, [r7, #52]	@ 0x34
 8015230:	687b      	ldr	r3, [r7, #4]
 8015232:	681b      	ldr	r3, [r3, #0]
 8015234:	3314      	adds	r3, #20
 8015236:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8015238:	61fa      	str	r2, [r7, #28]
 801523a:	61bb      	str	r3, [r7, #24]
 801523c:	69b9      	ldr	r1, [r7, #24]
 801523e:	69fa      	ldr	r2, [r7, #28]
 8015240:	e841 2300 	strex	r3, r2, [r1]
 8015244:	617b      	str	r3, [r7, #20]
 8015246:	697b      	ldr	r3, [r7, #20]
 8015248:	2b00      	cmp	r3, #0
 801524a:	d1e5      	bne.n	8015218 <HAL_UART_DMAStop+0xa8>
 801524c:	687b      	ldr	r3, [r7, #4]
 801524e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015250:	2b00      	cmp	r3, #0
 8015252:	d004      	beq.n	801525e <HAL_UART_DMAStop+0xee>
 8015254:	687b      	ldr	r3, [r7, #4]
 8015256:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015258:	4618      	mov	r0, r3
 801525a:	f7f9 ffd9 	bl	800f210 <HAL_DMA_Abort>
 801525e:	6878      	ldr	r0, [r7, #4]
 8015260:	f000 fb95 	bl	801598e <UART_EndRxTransfer>
 8015264:	2300      	movs	r3, #0
 8015266:	4618      	mov	r0, r3
 8015268:	3740      	adds	r7, #64	@ 0x40
 801526a:	46bd      	mov	sp, r7
 801526c:	bd80      	pop	{r7, pc}
	...

08015270 <HAL_UART_IRQHandler>:
 8015270:	b580      	push	{r7, lr}
 8015272:	b0ba      	sub	sp, #232	@ 0xe8
 8015274:	af00      	add	r7, sp, #0
 8015276:	6078      	str	r0, [r7, #4]
 8015278:	687b      	ldr	r3, [r7, #4]
 801527a:	681b      	ldr	r3, [r3, #0]
 801527c:	681b      	ldr	r3, [r3, #0]
 801527e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8015282:	687b      	ldr	r3, [r7, #4]
 8015284:	681b      	ldr	r3, [r3, #0]
 8015286:	68db      	ldr	r3, [r3, #12]
 8015288:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 801528c:	687b      	ldr	r3, [r7, #4]
 801528e:	681b      	ldr	r3, [r3, #0]
 8015290:	695b      	ldr	r3, [r3, #20]
 8015292:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8015296:	2300      	movs	r3, #0
 8015298:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 801529c:	2300      	movs	r3, #0
 801529e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80152a2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80152a6:	f003 030f 	and.w	r3, r3, #15
 80152aa:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80152ae:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80152b2:	2b00      	cmp	r3, #0
 80152b4:	d10f      	bne.n	80152d6 <HAL_UART_IRQHandler+0x66>
 80152b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80152ba:	f003 0320 	and.w	r3, r3, #32
 80152be:	2b00      	cmp	r3, #0
 80152c0:	d009      	beq.n	80152d6 <HAL_UART_IRQHandler+0x66>
 80152c2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80152c6:	f003 0320 	and.w	r3, r3, #32
 80152ca:	2b00      	cmp	r3, #0
 80152cc:	d003      	beq.n	80152d6 <HAL_UART_IRQHandler+0x66>
 80152ce:	6878      	ldr	r0, [r7, #4]
 80152d0:	f000 fc3c 	bl	8015b4c <UART_Receive_IT>
 80152d4:	e256      	b.n	8015784 <HAL_UART_IRQHandler+0x514>
 80152d6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80152da:	2b00      	cmp	r3, #0
 80152dc:	f000 80de 	beq.w	801549c <HAL_UART_IRQHandler+0x22c>
 80152e0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80152e4:	f003 0301 	and.w	r3, r3, #1
 80152e8:	2b00      	cmp	r3, #0
 80152ea:	d106      	bne.n	80152fa <HAL_UART_IRQHandler+0x8a>
 80152ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80152f0:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 80152f4:	2b00      	cmp	r3, #0
 80152f6:	f000 80d1 	beq.w	801549c <HAL_UART_IRQHandler+0x22c>
 80152fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80152fe:	f003 0301 	and.w	r3, r3, #1
 8015302:	2b00      	cmp	r3, #0
 8015304:	d00b      	beq.n	801531e <HAL_UART_IRQHandler+0xae>
 8015306:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 801530a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801530e:	2b00      	cmp	r3, #0
 8015310:	d005      	beq.n	801531e <HAL_UART_IRQHandler+0xae>
 8015312:	687b      	ldr	r3, [r7, #4]
 8015314:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015316:	f043 0201 	orr.w	r2, r3, #1
 801531a:	687b      	ldr	r3, [r7, #4]
 801531c:	641a      	str	r2, [r3, #64]	@ 0x40
 801531e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8015322:	f003 0304 	and.w	r3, r3, #4
 8015326:	2b00      	cmp	r3, #0
 8015328:	d00b      	beq.n	8015342 <HAL_UART_IRQHandler+0xd2>
 801532a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 801532e:	f003 0301 	and.w	r3, r3, #1
 8015332:	2b00      	cmp	r3, #0
 8015334:	d005      	beq.n	8015342 <HAL_UART_IRQHandler+0xd2>
 8015336:	687b      	ldr	r3, [r7, #4]
 8015338:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801533a:	f043 0202 	orr.w	r2, r3, #2
 801533e:	687b      	ldr	r3, [r7, #4]
 8015340:	641a      	str	r2, [r3, #64]	@ 0x40
 8015342:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8015346:	f003 0302 	and.w	r3, r3, #2
 801534a:	2b00      	cmp	r3, #0
 801534c:	d00b      	beq.n	8015366 <HAL_UART_IRQHandler+0xf6>
 801534e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8015352:	f003 0301 	and.w	r3, r3, #1
 8015356:	2b00      	cmp	r3, #0
 8015358:	d005      	beq.n	8015366 <HAL_UART_IRQHandler+0xf6>
 801535a:	687b      	ldr	r3, [r7, #4]
 801535c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801535e:	f043 0204 	orr.w	r2, r3, #4
 8015362:	687b      	ldr	r3, [r7, #4]
 8015364:	641a      	str	r2, [r3, #64]	@ 0x40
 8015366:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801536a:	f003 0308 	and.w	r3, r3, #8
 801536e:	2b00      	cmp	r3, #0
 8015370:	d011      	beq.n	8015396 <HAL_UART_IRQHandler+0x126>
 8015372:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8015376:	f003 0320 	and.w	r3, r3, #32
 801537a:	2b00      	cmp	r3, #0
 801537c:	d105      	bne.n	801538a <HAL_UART_IRQHandler+0x11a>
 801537e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8015382:	f003 0301 	and.w	r3, r3, #1
 8015386:	2b00      	cmp	r3, #0
 8015388:	d005      	beq.n	8015396 <HAL_UART_IRQHandler+0x126>
 801538a:	687b      	ldr	r3, [r7, #4]
 801538c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801538e:	f043 0208 	orr.w	r2, r3, #8
 8015392:	687b      	ldr	r3, [r7, #4]
 8015394:	641a      	str	r2, [r3, #64]	@ 0x40
 8015396:	687b      	ldr	r3, [r7, #4]
 8015398:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801539a:	2b00      	cmp	r3, #0
 801539c:	f000 81ed 	beq.w	801577a <HAL_UART_IRQHandler+0x50a>
 80153a0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80153a4:	f003 0320 	and.w	r3, r3, #32
 80153a8:	2b00      	cmp	r3, #0
 80153aa:	d008      	beq.n	80153be <HAL_UART_IRQHandler+0x14e>
 80153ac:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80153b0:	f003 0320 	and.w	r3, r3, #32
 80153b4:	2b00      	cmp	r3, #0
 80153b6:	d002      	beq.n	80153be <HAL_UART_IRQHandler+0x14e>
 80153b8:	6878      	ldr	r0, [r7, #4]
 80153ba:	f000 fbc7 	bl	8015b4c <UART_Receive_IT>
 80153be:	687b      	ldr	r3, [r7, #4]
 80153c0:	681b      	ldr	r3, [r3, #0]
 80153c2:	695b      	ldr	r3, [r3, #20]
 80153c4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80153c8:	2b40      	cmp	r3, #64	@ 0x40
 80153ca:	bf0c      	ite	eq
 80153cc:	2301      	moveq	r3, #1
 80153ce:	2300      	movne	r3, #0
 80153d0:	b2db      	uxtb	r3, r3
 80153d2:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80153d6:	687b      	ldr	r3, [r7, #4]
 80153d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80153da:	f003 0308 	and.w	r3, r3, #8
 80153de:	2b00      	cmp	r3, #0
 80153e0:	d103      	bne.n	80153ea <HAL_UART_IRQHandler+0x17a>
 80153e2:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 80153e6:	2b00      	cmp	r3, #0
 80153e8:	d04f      	beq.n	801548a <HAL_UART_IRQHandler+0x21a>
 80153ea:	6878      	ldr	r0, [r7, #4]
 80153ec:	f000 facf 	bl	801598e <UART_EndRxTransfer>
 80153f0:	687b      	ldr	r3, [r7, #4]
 80153f2:	681b      	ldr	r3, [r3, #0]
 80153f4:	695b      	ldr	r3, [r3, #20]
 80153f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80153fa:	2b40      	cmp	r3, #64	@ 0x40
 80153fc:	d141      	bne.n	8015482 <HAL_UART_IRQHandler+0x212>
 80153fe:	687b      	ldr	r3, [r7, #4]
 8015400:	681b      	ldr	r3, [r3, #0]
 8015402:	3314      	adds	r3, #20
 8015404:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8015408:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 801540c:	e853 3f00 	ldrex	r3, [r3]
 8015410:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8015414:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8015418:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 801541c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8015420:	687b      	ldr	r3, [r7, #4]
 8015422:	681b      	ldr	r3, [r3, #0]
 8015424:	3314      	adds	r3, #20
 8015426:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 801542a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 801542e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8015432:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8015436:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 801543a:	e841 2300 	strex	r3, r2, [r1]
 801543e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8015442:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8015446:	2b00      	cmp	r3, #0
 8015448:	d1d9      	bne.n	80153fe <HAL_UART_IRQHandler+0x18e>
 801544a:	687b      	ldr	r3, [r7, #4]
 801544c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801544e:	2b00      	cmp	r3, #0
 8015450:	d013      	beq.n	801547a <HAL_UART_IRQHandler+0x20a>
 8015452:	687b      	ldr	r3, [r7, #4]
 8015454:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015456:	4a7d      	ldr	r2, [pc, #500]	@ (801564c <HAL_UART_IRQHandler+0x3dc>)
 8015458:	651a      	str	r2, [r3, #80]	@ 0x50
 801545a:	687b      	ldr	r3, [r7, #4]
 801545c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801545e:	4618      	mov	r0, r3
 8015460:	f7f9 ff46 	bl	800f2f0 <HAL_DMA_Abort_IT>
 8015464:	4603      	mov	r3, r0
 8015466:	2b00      	cmp	r3, #0
 8015468:	d016      	beq.n	8015498 <HAL_UART_IRQHandler+0x228>
 801546a:	687b      	ldr	r3, [r7, #4]
 801546c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801546e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8015470:	687a      	ldr	r2, [r7, #4]
 8015472:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8015474:	4610      	mov	r0, r2
 8015476:	4798      	blx	r3
 8015478:	e00e      	b.n	8015498 <HAL_UART_IRQHandler+0x228>
 801547a:	6878      	ldr	r0, [r7, #4]
 801547c:	f000 f9a4 	bl	80157c8 <HAL_UART_ErrorCallback>
 8015480:	e00a      	b.n	8015498 <HAL_UART_IRQHandler+0x228>
 8015482:	6878      	ldr	r0, [r7, #4]
 8015484:	f000 f9a0 	bl	80157c8 <HAL_UART_ErrorCallback>
 8015488:	e006      	b.n	8015498 <HAL_UART_IRQHandler+0x228>
 801548a:	6878      	ldr	r0, [r7, #4]
 801548c:	f000 f99c 	bl	80157c8 <HAL_UART_ErrorCallback>
 8015490:	687b      	ldr	r3, [r7, #4]
 8015492:	2200      	movs	r2, #0
 8015494:	641a      	str	r2, [r3, #64]	@ 0x40
 8015496:	e170      	b.n	801577a <HAL_UART_IRQHandler+0x50a>
 8015498:	bf00      	nop
 801549a:	e16e      	b.n	801577a <HAL_UART_IRQHandler+0x50a>
 801549c:	687b      	ldr	r3, [r7, #4]
 801549e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80154a0:	2b01      	cmp	r3, #1
 80154a2:	f040 814a 	bne.w	801573a <HAL_UART_IRQHandler+0x4ca>
 80154a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80154aa:	f003 0310 	and.w	r3, r3, #16
 80154ae:	2b00      	cmp	r3, #0
 80154b0:	f000 8143 	beq.w	801573a <HAL_UART_IRQHandler+0x4ca>
 80154b4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80154b8:	f003 0310 	and.w	r3, r3, #16
 80154bc:	2b00      	cmp	r3, #0
 80154be:	f000 813c 	beq.w	801573a <HAL_UART_IRQHandler+0x4ca>
 80154c2:	2300      	movs	r3, #0
 80154c4:	60bb      	str	r3, [r7, #8]
 80154c6:	687b      	ldr	r3, [r7, #4]
 80154c8:	681b      	ldr	r3, [r3, #0]
 80154ca:	681b      	ldr	r3, [r3, #0]
 80154cc:	60bb      	str	r3, [r7, #8]
 80154ce:	687b      	ldr	r3, [r7, #4]
 80154d0:	681b      	ldr	r3, [r3, #0]
 80154d2:	685b      	ldr	r3, [r3, #4]
 80154d4:	60bb      	str	r3, [r7, #8]
 80154d6:	68bb      	ldr	r3, [r7, #8]
 80154d8:	687b      	ldr	r3, [r7, #4]
 80154da:	681b      	ldr	r3, [r3, #0]
 80154dc:	695b      	ldr	r3, [r3, #20]
 80154de:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80154e2:	2b40      	cmp	r3, #64	@ 0x40
 80154e4:	f040 80b4 	bne.w	8015650 <HAL_UART_IRQHandler+0x3e0>
 80154e8:	687b      	ldr	r3, [r7, #4]
 80154ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80154ec:	681b      	ldr	r3, [r3, #0]
 80154ee:	685b      	ldr	r3, [r3, #4]
 80154f0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80154f4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80154f8:	2b00      	cmp	r3, #0
 80154fa:	f000 8140 	beq.w	801577e <HAL_UART_IRQHandler+0x50e>
 80154fe:	687b      	ldr	r3, [r7, #4]
 8015500:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8015502:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8015506:	429a      	cmp	r2, r3
 8015508:	f080 8139 	bcs.w	801577e <HAL_UART_IRQHandler+0x50e>
 801550c:	687b      	ldr	r3, [r7, #4]
 801550e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8015512:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8015514:	687b      	ldr	r3, [r7, #4]
 8015516:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015518:	69db      	ldr	r3, [r3, #28]
 801551a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801551e:	f000 8088 	beq.w	8015632 <HAL_UART_IRQHandler+0x3c2>
 8015522:	687b      	ldr	r3, [r7, #4]
 8015524:	681b      	ldr	r3, [r3, #0]
 8015526:	330c      	adds	r3, #12
 8015528:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 801552c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8015530:	e853 3f00 	ldrex	r3, [r3]
 8015534:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8015538:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 801553c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8015540:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8015544:	687b      	ldr	r3, [r7, #4]
 8015546:	681b      	ldr	r3, [r3, #0]
 8015548:	330c      	adds	r3, #12
 801554a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 801554e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8015552:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8015556:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 801555a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 801555e:	e841 2300 	strex	r3, r2, [r1]
 8015562:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8015566:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 801556a:	2b00      	cmp	r3, #0
 801556c:	d1d9      	bne.n	8015522 <HAL_UART_IRQHandler+0x2b2>
 801556e:	687b      	ldr	r3, [r7, #4]
 8015570:	681b      	ldr	r3, [r3, #0]
 8015572:	3314      	adds	r3, #20
 8015574:	677b      	str	r3, [r7, #116]	@ 0x74
 8015576:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8015578:	e853 3f00 	ldrex	r3, [r3]
 801557c:	673b      	str	r3, [r7, #112]	@ 0x70
 801557e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8015580:	f023 0301 	bic.w	r3, r3, #1
 8015584:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8015588:	687b      	ldr	r3, [r7, #4]
 801558a:	681b      	ldr	r3, [r3, #0]
 801558c:	3314      	adds	r3, #20
 801558e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8015592:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8015596:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8015598:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 801559a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 801559e:	e841 2300 	strex	r3, r2, [r1]
 80155a2:	67bb      	str	r3, [r7, #120]	@ 0x78
 80155a4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80155a6:	2b00      	cmp	r3, #0
 80155a8:	d1e1      	bne.n	801556e <HAL_UART_IRQHandler+0x2fe>
 80155aa:	687b      	ldr	r3, [r7, #4]
 80155ac:	681b      	ldr	r3, [r3, #0]
 80155ae:	3314      	adds	r3, #20
 80155b0:	663b      	str	r3, [r7, #96]	@ 0x60
 80155b2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80155b4:	e853 3f00 	ldrex	r3, [r3]
 80155b8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80155ba:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80155bc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80155c0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80155c4:	687b      	ldr	r3, [r7, #4]
 80155c6:	681b      	ldr	r3, [r3, #0]
 80155c8:	3314      	adds	r3, #20
 80155ca:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 80155ce:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80155d0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80155d2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 80155d4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80155d6:	e841 2300 	strex	r3, r2, [r1]
 80155da:	667b      	str	r3, [r7, #100]	@ 0x64
 80155dc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80155de:	2b00      	cmp	r3, #0
 80155e0:	d1e3      	bne.n	80155aa <HAL_UART_IRQHandler+0x33a>
 80155e2:	687b      	ldr	r3, [r7, #4]
 80155e4:	2220      	movs	r2, #32
 80155e6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80155ea:	687b      	ldr	r3, [r7, #4]
 80155ec:	2200      	movs	r2, #0
 80155ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80155f0:	687b      	ldr	r3, [r7, #4]
 80155f2:	681b      	ldr	r3, [r3, #0]
 80155f4:	330c      	adds	r3, #12
 80155f6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80155f8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80155fa:	e853 3f00 	ldrex	r3, [r3]
 80155fe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8015600:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8015602:	f023 0310 	bic.w	r3, r3, #16
 8015606:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 801560a:	687b      	ldr	r3, [r7, #4]
 801560c:	681b      	ldr	r3, [r3, #0]
 801560e:	330c      	adds	r3, #12
 8015610:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8015614:	65ba      	str	r2, [r7, #88]	@ 0x58
 8015616:	657b      	str	r3, [r7, #84]	@ 0x54
 8015618:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 801561a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 801561c:	e841 2300 	strex	r3, r2, [r1]
 8015620:	653b      	str	r3, [r7, #80]	@ 0x50
 8015622:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8015624:	2b00      	cmp	r3, #0
 8015626:	d1e3      	bne.n	80155f0 <HAL_UART_IRQHandler+0x380>
 8015628:	687b      	ldr	r3, [r7, #4]
 801562a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801562c:	4618      	mov	r0, r3
 801562e:	f7f9 fdef 	bl	800f210 <HAL_DMA_Abort>
 8015632:	687b      	ldr	r3, [r7, #4]
 8015634:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8015636:	687b      	ldr	r3, [r7, #4]
 8015638:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 801563a:	b29b      	uxth	r3, r3
 801563c:	1ad3      	subs	r3, r2, r3
 801563e:	b29b      	uxth	r3, r3
 8015640:	4619      	mov	r1, r3
 8015642:	6878      	ldr	r0, [r7, #4]
 8015644:	f000 f8ca 	bl	80157dc <HAL_UARTEx_RxEventCallback>
 8015648:	e099      	b.n	801577e <HAL_UART_IRQHandler+0x50e>
 801564a:	bf00      	nop
 801564c:	08015a55 	.word	0x08015a55
 8015650:	687b      	ldr	r3, [r7, #4]
 8015652:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8015654:	687b      	ldr	r3, [r7, #4]
 8015656:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8015658:	b29b      	uxth	r3, r3
 801565a:	1ad3      	subs	r3, r2, r3
 801565c:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8015660:	687b      	ldr	r3, [r7, #4]
 8015662:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8015664:	b29b      	uxth	r3, r3
 8015666:	2b00      	cmp	r3, #0
 8015668:	f000 808b 	beq.w	8015782 <HAL_UART_IRQHandler+0x512>
 801566c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8015670:	2b00      	cmp	r3, #0
 8015672:	f000 8086 	beq.w	8015782 <HAL_UART_IRQHandler+0x512>
 8015676:	687b      	ldr	r3, [r7, #4]
 8015678:	681b      	ldr	r3, [r3, #0]
 801567a:	330c      	adds	r3, #12
 801567c:	63bb      	str	r3, [r7, #56]	@ 0x38
 801567e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8015680:	e853 3f00 	ldrex	r3, [r3]
 8015684:	637b      	str	r3, [r7, #52]	@ 0x34
 8015686:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8015688:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 801568c:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8015690:	687b      	ldr	r3, [r7, #4]
 8015692:	681b      	ldr	r3, [r3, #0]
 8015694:	330c      	adds	r3, #12
 8015696:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 801569a:	647a      	str	r2, [r7, #68]	@ 0x44
 801569c:	643b      	str	r3, [r7, #64]	@ 0x40
 801569e:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 80156a0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80156a2:	e841 2300 	strex	r3, r2, [r1]
 80156a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80156a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80156aa:	2b00      	cmp	r3, #0
 80156ac:	d1e3      	bne.n	8015676 <HAL_UART_IRQHandler+0x406>
 80156ae:	687b      	ldr	r3, [r7, #4]
 80156b0:	681b      	ldr	r3, [r3, #0]
 80156b2:	3314      	adds	r3, #20
 80156b4:	627b      	str	r3, [r7, #36]	@ 0x24
 80156b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80156b8:	e853 3f00 	ldrex	r3, [r3]
 80156bc:	623b      	str	r3, [r7, #32]
 80156be:	6a3b      	ldr	r3, [r7, #32]
 80156c0:	f023 0301 	bic.w	r3, r3, #1
 80156c4:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80156c8:	687b      	ldr	r3, [r7, #4]
 80156ca:	681b      	ldr	r3, [r3, #0]
 80156cc:	3314      	adds	r3, #20
 80156ce:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 80156d2:	633a      	str	r2, [r7, #48]	@ 0x30
 80156d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80156d6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80156d8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80156da:	e841 2300 	strex	r3, r2, [r1]
 80156de:	62bb      	str	r3, [r7, #40]	@ 0x28
 80156e0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80156e2:	2b00      	cmp	r3, #0
 80156e4:	d1e3      	bne.n	80156ae <HAL_UART_IRQHandler+0x43e>
 80156e6:	687b      	ldr	r3, [r7, #4]
 80156e8:	2220      	movs	r2, #32
 80156ea:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80156ee:	687b      	ldr	r3, [r7, #4]
 80156f0:	2200      	movs	r2, #0
 80156f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80156f4:	687b      	ldr	r3, [r7, #4]
 80156f6:	681b      	ldr	r3, [r3, #0]
 80156f8:	330c      	adds	r3, #12
 80156fa:	613b      	str	r3, [r7, #16]
 80156fc:	693b      	ldr	r3, [r7, #16]
 80156fe:	e853 3f00 	ldrex	r3, [r3]
 8015702:	60fb      	str	r3, [r7, #12]
 8015704:	68fb      	ldr	r3, [r7, #12]
 8015706:	f023 0310 	bic.w	r3, r3, #16
 801570a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 801570e:	687b      	ldr	r3, [r7, #4]
 8015710:	681b      	ldr	r3, [r3, #0]
 8015712:	330c      	adds	r3, #12
 8015714:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8015718:	61fa      	str	r2, [r7, #28]
 801571a:	61bb      	str	r3, [r7, #24]
 801571c:	69b9      	ldr	r1, [r7, #24]
 801571e:	69fa      	ldr	r2, [r7, #28]
 8015720:	e841 2300 	strex	r3, r2, [r1]
 8015724:	617b      	str	r3, [r7, #20]
 8015726:	697b      	ldr	r3, [r7, #20]
 8015728:	2b00      	cmp	r3, #0
 801572a:	d1e3      	bne.n	80156f4 <HAL_UART_IRQHandler+0x484>
 801572c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8015730:	4619      	mov	r1, r3
 8015732:	6878      	ldr	r0, [r7, #4]
 8015734:	f000 f852 	bl	80157dc <HAL_UARTEx_RxEventCallback>
 8015738:	e023      	b.n	8015782 <HAL_UART_IRQHandler+0x512>
 801573a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801573e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8015742:	2b00      	cmp	r3, #0
 8015744:	d009      	beq.n	801575a <HAL_UART_IRQHandler+0x4ea>
 8015746:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 801574a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 801574e:	2b00      	cmp	r3, #0
 8015750:	d003      	beq.n	801575a <HAL_UART_IRQHandler+0x4ea>
 8015752:	6878      	ldr	r0, [r7, #4]
 8015754:	f000 f992 	bl	8015a7c <UART_Transmit_IT>
 8015758:	e014      	b.n	8015784 <HAL_UART_IRQHandler+0x514>
 801575a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 801575e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8015762:	2b00      	cmp	r3, #0
 8015764:	d00e      	beq.n	8015784 <HAL_UART_IRQHandler+0x514>
 8015766:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 801576a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 801576e:	2b00      	cmp	r3, #0
 8015770:	d008      	beq.n	8015784 <HAL_UART_IRQHandler+0x514>
 8015772:	6878      	ldr	r0, [r7, #4]
 8015774:	f000 f9d2 	bl	8015b1c <UART_EndTransmit_IT>
 8015778:	e004      	b.n	8015784 <HAL_UART_IRQHandler+0x514>
 801577a:	bf00      	nop
 801577c:	e002      	b.n	8015784 <HAL_UART_IRQHandler+0x514>
 801577e:	bf00      	nop
 8015780:	e000      	b.n	8015784 <HAL_UART_IRQHandler+0x514>
 8015782:	bf00      	nop
 8015784:	37e8      	adds	r7, #232	@ 0xe8
 8015786:	46bd      	mov	sp, r7
 8015788:	bd80      	pop	{r7, pc}
 801578a:	bf00      	nop

0801578c <HAL_UART_TxCpltCallback>:
 801578c:	b480      	push	{r7}
 801578e:	b083      	sub	sp, #12
 8015790:	af00      	add	r7, sp, #0
 8015792:	6078      	str	r0, [r7, #4]
 8015794:	bf00      	nop
 8015796:	370c      	adds	r7, #12
 8015798:	46bd      	mov	sp, r7
 801579a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801579e:	4770      	bx	lr

080157a0 <HAL_UART_TxHalfCpltCallback>:
 80157a0:	b480      	push	{r7}
 80157a2:	b083      	sub	sp, #12
 80157a4:	af00      	add	r7, sp, #0
 80157a6:	6078      	str	r0, [r7, #4]
 80157a8:	bf00      	nop
 80157aa:	370c      	adds	r7, #12
 80157ac:	46bd      	mov	sp, r7
 80157ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80157b2:	4770      	bx	lr

080157b4 <HAL_UART_RxCpltCallback>:
 80157b4:	b480      	push	{r7}
 80157b6:	b083      	sub	sp, #12
 80157b8:	af00      	add	r7, sp, #0
 80157ba:	6078      	str	r0, [r7, #4]
 80157bc:	bf00      	nop
 80157be:	370c      	adds	r7, #12
 80157c0:	46bd      	mov	sp, r7
 80157c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80157c6:	4770      	bx	lr

080157c8 <HAL_UART_ErrorCallback>:
 80157c8:	b480      	push	{r7}
 80157ca:	b083      	sub	sp, #12
 80157cc:	af00      	add	r7, sp, #0
 80157ce:	6078      	str	r0, [r7, #4]
 80157d0:	bf00      	nop
 80157d2:	370c      	adds	r7, #12
 80157d4:	46bd      	mov	sp, r7
 80157d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80157da:	4770      	bx	lr

080157dc <HAL_UARTEx_RxEventCallback>:
 80157dc:	b480      	push	{r7}
 80157de:	b083      	sub	sp, #12
 80157e0:	af00      	add	r7, sp, #0
 80157e2:	6078      	str	r0, [r7, #4]
 80157e4:	460b      	mov	r3, r1
 80157e6:	807b      	strh	r3, [r7, #2]
 80157e8:	bf00      	nop
 80157ea:	370c      	adds	r7, #12
 80157ec:	46bd      	mov	sp, r7
 80157ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80157f2:	4770      	bx	lr

080157f4 <UART_DMATransmitCplt>:
 80157f4:	b580      	push	{r7, lr}
 80157f6:	b090      	sub	sp, #64	@ 0x40
 80157f8:	af00      	add	r7, sp, #0
 80157fa:	6078      	str	r0, [r7, #4]
 80157fc:	687b      	ldr	r3, [r7, #4]
 80157fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015800:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8015802:	687b      	ldr	r3, [r7, #4]
 8015804:	681b      	ldr	r3, [r3, #0]
 8015806:	681b      	ldr	r3, [r3, #0]
 8015808:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801580c:	2b00      	cmp	r3, #0
 801580e:	d137      	bne.n	8015880 <UART_DMATransmitCplt+0x8c>
 8015810:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8015812:	2200      	movs	r2, #0
 8015814:	84da      	strh	r2, [r3, #38]	@ 0x26
 8015816:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8015818:	681b      	ldr	r3, [r3, #0]
 801581a:	3314      	adds	r3, #20
 801581c:	627b      	str	r3, [r7, #36]	@ 0x24
 801581e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8015820:	e853 3f00 	ldrex	r3, [r3]
 8015824:	623b      	str	r3, [r7, #32]
 8015826:	6a3b      	ldr	r3, [r7, #32]
 8015828:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 801582c:	63bb      	str	r3, [r7, #56]	@ 0x38
 801582e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8015830:	681b      	ldr	r3, [r3, #0]
 8015832:	3314      	adds	r3, #20
 8015834:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8015836:	633a      	str	r2, [r7, #48]	@ 0x30
 8015838:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801583a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 801583c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801583e:	e841 2300 	strex	r3, r2, [r1]
 8015842:	62bb      	str	r3, [r7, #40]	@ 0x28
 8015844:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8015846:	2b00      	cmp	r3, #0
 8015848:	d1e5      	bne.n	8015816 <UART_DMATransmitCplt+0x22>
 801584a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801584c:	681b      	ldr	r3, [r3, #0]
 801584e:	330c      	adds	r3, #12
 8015850:	613b      	str	r3, [r7, #16]
 8015852:	693b      	ldr	r3, [r7, #16]
 8015854:	e853 3f00 	ldrex	r3, [r3]
 8015858:	60fb      	str	r3, [r7, #12]
 801585a:	68fb      	ldr	r3, [r7, #12]
 801585c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8015860:	637b      	str	r3, [r7, #52]	@ 0x34
 8015862:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8015864:	681b      	ldr	r3, [r3, #0]
 8015866:	330c      	adds	r3, #12
 8015868:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 801586a:	61fa      	str	r2, [r7, #28]
 801586c:	61bb      	str	r3, [r7, #24]
 801586e:	69b9      	ldr	r1, [r7, #24]
 8015870:	69fa      	ldr	r2, [r7, #28]
 8015872:	e841 2300 	strex	r3, r2, [r1]
 8015876:	617b      	str	r3, [r7, #20]
 8015878:	697b      	ldr	r3, [r7, #20]
 801587a:	2b00      	cmp	r3, #0
 801587c:	d1e5      	bne.n	801584a <UART_DMATransmitCplt+0x56>
 801587e:	e002      	b.n	8015886 <UART_DMATransmitCplt+0x92>
 8015880:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
 8015882:	f7ff ff83 	bl	801578c <HAL_UART_TxCpltCallback>
 8015886:	bf00      	nop
 8015888:	3740      	adds	r7, #64	@ 0x40
 801588a:	46bd      	mov	sp, r7
 801588c:	bd80      	pop	{r7, pc}

0801588e <UART_DMATxHalfCplt>:
 801588e:	b580      	push	{r7, lr}
 8015890:	b084      	sub	sp, #16
 8015892:	af00      	add	r7, sp, #0
 8015894:	6078      	str	r0, [r7, #4]
 8015896:	687b      	ldr	r3, [r7, #4]
 8015898:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801589a:	60fb      	str	r3, [r7, #12]
 801589c:	68f8      	ldr	r0, [r7, #12]
 801589e:	f7ff ff7f 	bl	80157a0 <HAL_UART_TxHalfCpltCallback>
 80158a2:	bf00      	nop
 80158a4:	3710      	adds	r7, #16
 80158a6:	46bd      	mov	sp, r7
 80158a8:	bd80      	pop	{r7, pc}

080158aa <UART_DMAError>:
 80158aa:	b580      	push	{r7, lr}
 80158ac:	b084      	sub	sp, #16
 80158ae:	af00      	add	r7, sp, #0
 80158b0:	6078      	str	r0, [r7, #4]
 80158b2:	2300      	movs	r3, #0
 80158b4:	60fb      	str	r3, [r7, #12]
 80158b6:	687b      	ldr	r3, [r7, #4]
 80158b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80158ba:	60bb      	str	r3, [r7, #8]
 80158bc:	68bb      	ldr	r3, [r7, #8]
 80158be:	681b      	ldr	r3, [r3, #0]
 80158c0:	695b      	ldr	r3, [r3, #20]
 80158c2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80158c6:	2b80      	cmp	r3, #128	@ 0x80
 80158c8:	bf0c      	ite	eq
 80158ca:	2301      	moveq	r3, #1
 80158cc:	2300      	movne	r3, #0
 80158ce:	b2db      	uxtb	r3, r3
 80158d0:	60fb      	str	r3, [r7, #12]
 80158d2:	68bb      	ldr	r3, [r7, #8]
 80158d4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80158d8:	b2db      	uxtb	r3, r3
 80158da:	2b21      	cmp	r3, #33	@ 0x21
 80158dc:	d108      	bne.n	80158f0 <UART_DMAError+0x46>
 80158de:	68fb      	ldr	r3, [r7, #12]
 80158e0:	2b00      	cmp	r3, #0
 80158e2:	d005      	beq.n	80158f0 <UART_DMAError+0x46>
 80158e4:	68bb      	ldr	r3, [r7, #8]
 80158e6:	2200      	movs	r2, #0
 80158e8:	84da      	strh	r2, [r3, #38]	@ 0x26
 80158ea:	68b8      	ldr	r0, [r7, #8]
 80158ec:	f000 f827 	bl	801593e <UART_EndTxTransfer>
 80158f0:	68bb      	ldr	r3, [r7, #8]
 80158f2:	681b      	ldr	r3, [r3, #0]
 80158f4:	695b      	ldr	r3, [r3, #20]
 80158f6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80158fa:	2b40      	cmp	r3, #64	@ 0x40
 80158fc:	bf0c      	ite	eq
 80158fe:	2301      	moveq	r3, #1
 8015900:	2300      	movne	r3, #0
 8015902:	b2db      	uxtb	r3, r3
 8015904:	60fb      	str	r3, [r7, #12]
 8015906:	68bb      	ldr	r3, [r7, #8]
 8015908:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 801590c:	b2db      	uxtb	r3, r3
 801590e:	2b22      	cmp	r3, #34	@ 0x22
 8015910:	d108      	bne.n	8015924 <UART_DMAError+0x7a>
 8015912:	68fb      	ldr	r3, [r7, #12]
 8015914:	2b00      	cmp	r3, #0
 8015916:	d005      	beq.n	8015924 <UART_DMAError+0x7a>
 8015918:	68bb      	ldr	r3, [r7, #8]
 801591a:	2200      	movs	r2, #0
 801591c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 801591e:	68b8      	ldr	r0, [r7, #8]
 8015920:	f000 f835 	bl	801598e <UART_EndRxTransfer>
 8015924:	68bb      	ldr	r3, [r7, #8]
 8015926:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015928:	f043 0210 	orr.w	r2, r3, #16
 801592c:	68bb      	ldr	r3, [r7, #8]
 801592e:	641a      	str	r2, [r3, #64]	@ 0x40
 8015930:	68b8      	ldr	r0, [r7, #8]
 8015932:	f7ff ff49 	bl	80157c8 <HAL_UART_ErrorCallback>
 8015936:	bf00      	nop
 8015938:	3710      	adds	r7, #16
 801593a:	46bd      	mov	sp, r7
 801593c:	bd80      	pop	{r7, pc}

0801593e <UART_EndTxTransfer>:
 801593e:	b480      	push	{r7}
 8015940:	b089      	sub	sp, #36	@ 0x24
 8015942:	af00      	add	r7, sp, #0
 8015944:	6078      	str	r0, [r7, #4]
 8015946:	687b      	ldr	r3, [r7, #4]
 8015948:	681b      	ldr	r3, [r3, #0]
 801594a:	330c      	adds	r3, #12
 801594c:	60fb      	str	r3, [r7, #12]
 801594e:	68fb      	ldr	r3, [r7, #12]
 8015950:	e853 3f00 	ldrex	r3, [r3]
 8015954:	60bb      	str	r3, [r7, #8]
 8015956:	68bb      	ldr	r3, [r7, #8]
 8015958:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 801595c:	61fb      	str	r3, [r7, #28]
 801595e:	687b      	ldr	r3, [r7, #4]
 8015960:	681b      	ldr	r3, [r3, #0]
 8015962:	330c      	adds	r3, #12
 8015964:	69fa      	ldr	r2, [r7, #28]
 8015966:	61ba      	str	r2, [r7, #24]
 8015968:	617b      	str	r3, [r7, #20]
 801596a:	6979      	ldr	r1, [r7, #20]
 801596c:	69ba      	ldr	r2, [r7, #24]
 801596e:	e841 2300 	strex	r3, r2, [r1]
 8015972:	613b      	str	r3, [r7, #16]
 8015974:	693b      	ldr	r3, [r7, #16]
 8015976:	2b00      	cmp	r3, #0
 8015978:	d1e5      	bne.n	8015946 <UART_EndTxTransfer+0x8>
 801597a:	687b      	ldr	r3, [r7, #4]
 801597c:	2220      	movs	r2, #32
 801597e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8015982:	bf00      	nop
 8015984:	3724      	adds	r7, #36	@ 0x24
 8015986:	46bd      	mov	sp, r7
 8015988:	f85d 7b04 	ldr.w	r7, [sp], #4
 801598c:	4770      	bx	lr

0801598e <UART_EndRxTransfer>:
 801598e:	b480      	push	{r7}
 8015990:	b095      	sub	sp, #84	@ 0x54
 8015992:	af00      	add	r7, sp, #0
 8015994:	6078      	str	r0, [r7, #4]
 8015996:	687b      	ldr	r3, [r7, #4]
 8015998:	681b      	ldr	r3, [r3, #0]
 801599a:	330c      	adds	r3, #12
 801599c:	637b      	str	r3, [r7, #52]	@ 0x34
 801599e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80159a0:	e853 3f00 	ldrex	r3, [r3]
 80159a4:	633b      	str	r3, [r7, #48]	@ 0x30
 80159a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80159a8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80159ac:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80159ae:	687b      	ldr	r3, [r7, #4]
 80159b0:	681b      	ldr	r3, [r3, #0]
 80159b2:	330c      	adds	r3, #12
 80159b4:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 80159b6:	643a      	str	r2, [r7, #64]	@ 0x40
 80159b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80159ba:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 80159bc:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 80159be:	e841 2300 	strex	r3, r2, [r1]
 80159c2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80159c4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80159c6:	2b00      	cmp	r3, #0
 80159c8:	d1e5      	bne.n	8015996 <UART_EndRxTransfer+0x8>
 80159ca:	687b      	ldr	r3, [r7, #4]
 80159cc:	681b      	ldr	r3, [r3, #0]
 80159ce:	3314      	adds	r3, #20
 80159d0:	623b      	str	r3, [r7, #32]
 80159d2:	6a3b      	ldr	r3, [r7, #32]
 80159d4:	e853 3f00 	ldrex	r3, [r3]
 80159d8:	61fb      	str	r3, [r7, #28]
 80159da:	69fb      	ldr	r3, [r7, #28]
 80159dc:	f023 0301 	bic.w	r3, r3, #1
 80159e0:	64bb      	str	r3, [r7, #72]	@ 0x48
 80159e2:	687b      	ldr	r3, [r7, #4]
 80159e4:	681b      	ldr	r3, [r3, #0]
 80159e6:	3314      	adds	r3, #20
 80159e8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80159ea:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80159ec:	62bb      	str	r3, [r7, #40]	@ 0x28
 80159ee:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80159f0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80159f2:	e841 2300 	strex	r3, r2, [r1]
 80159f6:	627b      	str	r3, [r7, #36]	@ 0x24
 80159f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80159fa:	2b00      	cmp	r3, #0
 80159fc:	d1e5      	bne.n	80159ca <UART_EndRxTransfer+0x3c>
 80159fe:	687b      	ldr	r3, [r7, #4]
 8015a00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015a02:	2b01      	cmp	r3, #1
 8015a04:	d119      	bne.n	8015a3a <UART_EndRxTransfer+0xac>
 8015a06:	687b      	ldr	r3, [r7, #4]
 8015a08:	681b      	ldr	r3, [r3, #0]
 8015a0a:	330c      	adds	r3, #12
 8015a0c:	60fb      	str	r3, [r7, #12]
 8015a0e:	68fb      	ldr	r3, [r7, #12]
 8015a10:	e853 3f00 	ldrex	r3, [r3]
 8015a14:	60bb      	str	r3, [r7, #8]
 8015a16:	68bb      	ldr	r3, [r7, #8]
 8015a18:	f023 0310 	bic.w	r3, r3, #16
 8015a1c:	647b      	str	r3, [r7, #68]	@ 0x44
 8015a1e:	687b      	ldr	r3, [r7, #4]
 8015a20:	681b      	ldr	r3, [r3, #0]
 8015a22:	330c      	adds	r3, #12
 8015a24:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8015a26:	61ba      	str	r2, [r7, #24]
 8015a28:	617b      	str	r3, [r7, #20]
 8015a2a:	6979      	ldr	r1, [r7, #20]
 8015a2c:	69ba      	ldr	r2, [r7, #24]
 8015a2e:	e841 2300 	strex	r3, r2, [r1]
 8015a32:	613b      	str	r3, [r7, #16]
 8015a34:	693b      	ldr	r3, [r7, #16]
 8015a36:	2b00      	cmp	r3, #0
 8015a38:	d1e5      	bne.n	8015a06 <UART_EndRxTransfer+0x78>
 8015a3a:	687b      	ldr	r3, [r7, #4]
 8015a3c:	2220      	movs	r2, #32
 8015a3e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8015a42:	687b      	ldr	r3, [r7, #4]
 8015a44:	2200      	movs	r2, #0
 8015a46:	631a      	str	r2, [r3, #48]	@ 0x30
 8015a48:	bf00      	nop
 8015a4a:	3754      	adds	r7, #84	@ 0x54
 8015a4c:	46bd      	mov	sp, r7
 8015a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015a52:	4770      	bx	lr

08015a54 <UART_DMAAbortOnError>:
 8015a54:	b580      	push	{r7, lr}
 8015a56:	b084      	sub	sp, #16
 8015a58:	af00      	add	r7, sp, #0
 8015a5a:	6078      	str	r0, [r7, #4]
 8015a5c:	687b      	ldr	r3, [r7, #4]
 8015a5e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015a60:	60fb      	str	r3, [r7, #12]
 8015a62:	68fb      	ldr	r3, [r7, #12]
 8015a64:	2200      	movs	r2, #0
 8015a66:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8015a68:	68fb      	ldr	r3, [r7, #12]
 8015a6a:	2200      	movs	r2, #0
 8015a6c:	84da      	strh	r2, [r3, #38]	@ 0x26
 8015a6e:	68f8      	ldr	r0, [r7, #12]
 8015a70:	f7ff feaa 	bl	80157c8 <HAL_UART_ErrorCallback>
 8015a74:	bf00      	nop
 8015a76:	3710      	adds	r7, #16
 8015a78:	46bd      	mov	sp, r7
 8015a7a:	bd80      	pop	{r7, pc}

08015a7c <UART_Transmit_IT>:
 8015a7c:	b480      	push	{r7}
 8015a7e:	b085      	sub	sp, #20
 8015a80:	af00      	add	r7, sp, #0
 8015a82:	6078      	str	r0, [r7, #4]
 8015a84:	687b      	ldr	r3, [r7, #4]
 8015a86:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8015a8a:	b2db      	uxtb	r3, r3
 8015a8c:	2b21      	cmp	r3, #33	@ 0x21
 8015a8e:	d13e      	bne.n	8015b0e <UART_Transmit_IT+0x92>
 8015a90:	687b      	ldr	r3, [r7, #4]
 8015a92:	689b      	ldr	r3, [r3, #8]
 8015a94:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8015a98:	d114      	bne.n	8015ac4 <UART_Transmit_IT+0x48>
 8015a9a:	687b      	ldr	r3, [r7, #4]
 8015a9c:	691b      	ldr	r3, [r3, #16]
 8015a9e:	2b00      	cmp	r3, #0
 8015aa0:	d110      	bne.n	8015ac4 <UART_Transmit_IT+0x48>
 8015aa2:	687b      	ldr	r3, [r7, #4]
 8015aa4:	6a1b      	ldr	r3, [r3, #32]
 8015aa6:	60fb      	str	r3, [r7, #12]
 8015aa8:	68fb      	ldr	r3, [r7, #12]
 8015aaa:	881b      	ldrh	r3, [r3, #0]
 8015aac:	461a      	mov	r2, r3
 8015aae:	687b      	ldr	r3, [r7, #4]
 8015ab0:	681b      	ldr	r3, [r3, #0]
 8015ab2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8015ab6:	605a      	str	r2, [r3, #4]
 8015ab8:	687b      	ldr	r3, [r7, #4]
 8015aba:	6a1b      	ldr	r3, [r3, #32]
 8015abc:	1c9a      	adds	r2, r3, #2
 8015abe:	687b      	ldr	r3, [r7, #4]
 8015ac0:	621a      	str	r2, [r3, #32]
 8015ac2:	e008      	b.n	8015ad6 <UART_Transmit_IT+0x5a>
 8015ac4:	687b      	ldr	r3, [r7, #4]
 8015ac6:	6a1b      	ldr	r3, [r3, #32]
 8015ac8:	1c59      	adds	r1, r3, #1
 8015aca:	687a      	ldr	r2, [r7, #4]
 8015acc:	6211      	str	r1, [r2, #32]
 8015ace:	781a      	ldrb	r2, [r3, #0]
 8015ad0:	687b      	ldr	r3, [r7, #4]
 8015ad2:	681b      	ldr	r3, [r3, #0]
 8015ad4:	605a      	str	r2, [r3, #4]
 8015ad6:	687b      	ldr	r3, [r7, #4]
 8015ad8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8015ada:	b29b      	uxth	r3, r3
 8015adc:	3b01      	subs	r3, #1
 8015ade:	b29b      	uxth	r3, r3
 8015ae0:	687a      	ldr	r2, [r7, #4]
 8015ae2:	4619      	mov	r1, r3
 8015ae4:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8015ae6:	2b00      	cmp	r3, #0
 8015ae8:	d10f      	bne.n	8015b0a <UART_Transmit_IT+0x8e>
 8015aea:	687b      	ldr	r3, [r7, #4]
 8015aec:	681b      	ldr	r3, [r3, #0]
 8015aee:	68da      	ldr	r2, [r3, #12]
 8015af0:	687b      	ldr	r3, [r7, #4]
 8015af2:	681b      	ldr	r3, [r3, #0]
 8015af4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8015af8:	60da      	str	r2, [r3, #12]
 8015afa:	687b      	ldr	r3, [r7, #4]
 8015afc:	681b      	ldr	r3, [r3, #0]
 8015afe:	68da      	ldr	r2, [r3, #12]
 8015b00:	687b      	ldr	r3, [r7, #4]
 8015b02:	681b      	ldr	r3, [r3, #0]
 8015b04:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8015b08:	60da      	str	r2, [r3, #12]
 8015b0a:	2300      	movs	r3, #0
 8015b0c:	e000      	b.n	8015b10 <UART_Transmit_IT+0x94>
 8015b0e:	2302      	movs	r3, #2
 8015b10:	4618      	mov	r0, r3
 8015b12:	3714      	adds	r7, #20
 8015b14:	46bd      	mov	sp, r7
 8015b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b1a:	4770      	bx	lr

08015b1c <UART_EndTransmit_IT>:
 8015b1c:	b580      	push	{r7, lr}
 8015b1e:	b082      	sub	sp, #8
 8015b20:	af00      	add	r7, sp, #0
 8015b22:	6078      	str	r0, [r7, #4]
 8015b24:	687b      	ldr	r3, [r7, #4]
 8015b26:	681b      	ldr	r3, [r3, #0]
 8015b28:	68da      	ldr	r2, [r3, #12]
 8015b2a:	687b      	ldr	r3, [r7, #4]
 8015b2c:	681b      	ldr	r3, [r3, #0]
 8015b2e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8015b32:	60da      	str	r2, [r3, #12]
 8015b34:	687b      	ldr	r3, [r7, #4]
 8015b36:	2220      	movs	r2, #32
 8015b38:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8015b3c:	6878      	ldr	r0, [r7, #4]
 8015b3e:	f7ff fe25 	bl	801578c <HAL_UART_TxCpltCallback>
 8015b42:	2300      	movs	r3, #0
 8015b44:	4618      	mov	r0, r3
 8015b46:	3708      	adds	r7, #8
 8015b48:	46bd      	mov	sp, r7
 8015b4a:	bd80      	pop	{r7, pc}

08015b4c <UART_Receive_IT>:
 8015b4c:	b580      	push	{r7, lr}
 8015b4e:	b08c      	sub	sp, #48	@ 0x30
 8015b50:	af00      	add	r7, sp, #0
 8015b52:	6078      	str	r0, [r7, #4]
 8015b54:	687b      	ldr	r3, [r7, #4]
 8015b56:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8015b5a:	b2db      	uxtb	r3, r3
 8015b5c:	2b22      	cmp	r3, #34	@ 0x22
 8015b5e:	f040 80ab 	bne.w	8015cb8 <UART_Receive_IT+0x16c>
 8015b62:	687b      	ldr	r3, [r7, #4]
 8015b64:	689b      	ldr	r3, [r3, #8]
 8015b66:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8015b6a:	d117      	bne.n	8015b9c <UART_Receive_IT+0x50>
 8015b6c:	687b      	ldr	r3, [r7, #4]
 8015b6e:	691b      	ldr	r3, [r3, #16]
 8015b70:	2b00      	cmp	r3, #0
 8015b72:	d113      	bne.n	8015b9c <UART_Receive_IT+0x50>
 8015b74:	2300      	movs	r3, #0
 8015b76:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8015b78:	687b      	ldr	r3, [r7, #4]
 8015b7a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015b7c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8015b7e:	687b      	ldr	r3, [r7, #4]
 8015b80:	681b      	ldr	r3, [r3, #0]
 8015b82:	685b      	ldr	r3, [r3, #4]
 8015b84:	b29b      	uxth	r3, r3
 8015b86:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8015b8a:	b29a      	uxth	r2, r3
 8015b8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8015b8e:	801a      	strh	r2, [r3, #0]
 8015b90:	687b      	ldr	r3, [r7, #4]
 8015b92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015b94:	1c9a      	adds	r2, r3, #2
 8015b96:	687b      	ldr	r3, [r7, #4]
 8015b98:	629a      	str	r2, [r3, #40]	@ 0x28
 8015b9a:	e026      	b.n	8015bea <UART_Receive_IT+0x9e>
 8015b9c:	687b      	ldr	r3, [r7, #4]
 8015b9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015ba0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8015ba2:	2300      	movs	r3, #0
 8015ba4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8015ba6:	687b      	ldr	r3, [r7, #4]
 8015ba8:	689b      	ldr	r3, [r3, #8]
 8015baa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8015bae:	d007      	beq.n	8015bc0 <UART_Receive_IT+0x74>
 8015bb0:	687b      	ldr	r3, [r7, #4]
 8015bb2:	689b      	ldr	r3, [r3, #8]
 8015bb4:	2b00      	cmp	r3, #0
 8015bb6:	d10a      	bne.n	8015bce <UART_Receive_IT+0x82>
 8015bb8:	687b      	ldr	r3, [r7, #4]
 8015bba:	691b      	ldr	r3, [r3, #16]
 8015bbc:	2b00      	cmp	r3, #0
 8015bbe:	d106      	bne.n	8015bce <UART_Receive_IT+0x82>
 8015bc0:	687b      	ldr	r3, [r7, #4]
 8015bc2:	681b      	ldr	r3, [r3, #0]
 8015bc4:	685b      	ldr	r3, [r3, #4]
 8015bc6:	b2da      	uxtb	r2, r3
 8015bc8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8015bca:	701a      	strb	r2, [r3, #0]
 8015bcc:	e008      	b.n	8015be0 <UART_Receive_IT+0x94>
 8015bce:	687b      	ldr	r3, [r7, #4]
 8015bd0:	681b      	ldr	r3, [r3, #0]
 8015bd2:	685b      	ldr	r3, [r3, #4]
 8015bd4:	b2db      	uxtb	r3, r3
 8015bd6:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8015bda:	b2da      	uxtb	r2, r3
 8015bdc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8015bde:	701a      	strb	r2, [r3, #0]
 8015be0:	687b      	ldr	r3, [r7, #4]
 8015be2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015be4:	1c5a      	adds	r2, r3, #1
 8015be6:	687b      	ldr	r3, [r7, #4]
 8015be8:	629a      	str	r2, [r3, #40]	@ 0x28
 8015bea:	687b      	ldr	r3, [r7, #4]
 8015bec:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8015bee:	b29b      	uxth	r3, r3
 8015bf0:	3b01      	subs	r3, #1
 8015bf2:	b29b      	uxth	r3, r3
 8015bf4:	687a      	ldr	r2, [r7, #4]
 8015bf6:	4619      	mov	r1, r3
 8015bf8:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8015bfa:	2b00      	cmp	r3, #0
 8015bfc:	d15a      	bne.n	8015cb4 <UART_Receive_IT+0x168>
 8015bfe:	687b      	ldr	r3, [r7, #4]
 8015c00:	681b      	ldr	r3, [r3, #0]
 8015c02:	68da      	ldr	r2, [r3, #12]
 8015c04:	687b      	ldr	r3, [r7, #4]
 8015c06:	681b      	ldr	r3, [r3, #0]
 8015c08:	f022 0220 	bic.w	r2, r2, #32
 8015c0c:	60da      	str	r2, [r3, #12]
 8015c0e:	687b      	ldr	r3, [r7, #4]
 8015c10:	681b      	ldr	r3, [r3, #0]
 8015c12:	68da      	ldr	r2, [r3, #12]
 8015c14:	687b      	ldr	r3, [r7, #4]
 8015c16:	681b      	ldr	r3, [r3, #0]
 8015c18:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8015c1c:	60da      	str	r2, [r3, #12]
 8015c1e:	687b      	ldr	r3, [r7, #4]
 8015c20:	681b      	ldr	r3, [r3, #0]
 8015c22:	695a      	ldr	r2, [r3, #20]
 8015c24:	687b      	ldr	r3, [r7, #4]
 8015c26:	681b      	ldr	r3, [r3, #0]
 8015c28:	f022 0201 	bic.w	r2, r2, #1
 8015c2c:	615a      	str	r2, [r3, #20]
 8015c2e:	687b      	ldr	r3, [r7, #4]
 8015c30:	2220      	movs	r2, #32
 8015c32:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8015c36:	687b      	ldr	r3, [r7, #4]
 8015c38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015c3a:	2b01      	cmp	r3, #1
 8015c3c:	d135      	bne.n	8015caa <UART_Receive_IT+0x15e>
 8015c3e:	687b      	ldr	r3, [r7, #4]
 8015c40:	2200      	movs	r2, #0
 8015c42:	631a      	str	r2, [r3, #48]	@ 0x30
 8015c44:	687b      	ldr	r3, [r7, #4]
 8015c46:	681b      	ldr	r3, [r3, #0]
 8015c48:	330c      	adds	r3, #12
 8015c4a:	617b      	str	r3, [r7, #20]
 8015c4c:	697b      	ldr	r3, [r7, #20]
 8015c4e:	e853 3f00 	ldrex	r3, [r3]
 8015c52:	613b      	str	r3, [r7, #16]
 8015c54:	693b      	ldr	r3, [r7, #16]
 8015c56:	f023 0310 	bic.w	r3, r3, #16
 8015c5a:	627b      	str	r3, [r7, #36]	@ 0x24
 8015c5c:	687b      	ldr	r3, [r7, #4]
 8015c5e:	681b      	ldr	r3, [r3, #0]
 8015c60:	330c      	adds	r3, #12
 8015c62:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8015c64:	623a      	str	r2, [r7, #32]
 8015c66:	61fb      	str	r3, [r7, #28]
 8015c68:	69f9      	ldr	r1, [r7, #28]
 8015c6a:	6a3a      	ldr	r2, [r7, #32]
 8015c6c:	e841 2300 	strex	r3, r2, [r1]
 8015c70:	61bb      	str	r3, [r7, #24]
 8015c72:	69bb      	ldr	r3, [r7, #24]
 8015c74:	2b00      	cmp	r3, #0
 8015c76:	d1e5      	bne.n	8015c44 <UART_Receive_IT+0xf8>
 8015c78:	687b      	ldr	r3, [r7, #4]
 8015c7a:	681b      	ldr	r3, [r3, #0]
 8015c7c:	681b      	ldr	r3, [r3, #0]
 8015c7e:	f003 0310 	and.w	r3, r3, #16
 8015c82:	2b10      	cmp	r3, #16
 8015c84:	d10a      	bne.n	8015c9c <UART_Receive_IT+0x150>
 8015c86:	2300      	movs	r3, #0
 8015c88:	60fb      	str	r3, [r7, #12]
 8015c8a:	687b      	ldr	r3, [r7, #4]
 8015c8c:	681b      	ldr	r3, [r3, #0]
 8015c8e:	681b      	ldr	r3, [r3, #0]
 8015c90:	60fb      	str	r3, [r7, #12]
 8015c92:	687b      	ldr	r3, [r7, #4]
 8015c94:	681b      	ldr	r3, [r3, #0]
 8015c96:	685b      	ldr	r3, [r3, #4]
 8015c98:	60fb      	str	r3, [r7, #12]
 8015c9a:	68fb      	ldr	r3, [r7, #12]
 8015c9c:	687b      	ldr	r3, [r7, #4]
 8015c9e:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8015ca0:	4619      	mov	r1, r3
 8015ca2:	6878      	ldr	r0, [r7, #4]
 8015ca4:	f7ff fd9a 	bl	80157dc <HAL_UARTEx_RxEventCallback>
 8015ca8:	e002      	b.n	8015cb0 <UART_Receive_IT+0x164>
 8015caa:	6878      	ldr	r0, [r7, #4]
 8015cac:	f7ff fd82 	bl	80157b4 <HAL_UART_RxCpltCallback>
 8015cb0:	2300      	movs	r3, #0
 8015cb2:	e002      	b.n	8015cba <UART_Receive_IT+0x16e>
 8015cb4:	2300      	movs	r3, #0
 8015cb6:	e000      	b.n	8015cba <UART_Receive_IT+0x16e>
 8015cb8:	2302      	movs	r3, #2
 8015cba:	4618      	mov	r0, r3
 8015cbc:	3730      	adds	r7, #48	@ 0x30
 8015cbe:	46bd      	mov	sp, r7
 8015cc0:	bd80      	pop	{r7, pc}
	...

08015cc4 <UART_SetConfig>:
 8015cc4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8015cc8:	b0c0      	sub	sp, #256	@ 0x100
 8015cca:	af00      	add	r7, sp, #0
 8015ccc:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8015cd0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015cd4:	681b      	ldr	r3, [r3, #0]
 8015cd6:	691b      	ldr	r3, [r3, #16]
 8015cd8:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8015cdc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015ce0:	68d9      	ldr	r1, [r3, #12]
 8015ce2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015ce6:	681a      	ldr	r2, [r3, #0]
 8015ce8:	ea40 0301 	orr.w	r3, r0, r1
 8015cec:	6113      	str	r3, [r2, #16]
 8015cee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015cf2:	689a      	ldr	r2, [r3, #8]
 8015cf4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015cf8:	691b      	ldr	r3, [r3, #16]
 8015cfa:	431a      	orrs	r2, r3
 8015cfc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d00:	695b      	ldr	r3, [r3, #20]
 8015d02:	431a      	orrs	r2, r3
 8015d04:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d08:	69db      	ldr	r3, [r3, #28]
 8015d0a:	4313      	orrs	r3, r2
 8015d0c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8015d10:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d14:	681b      	ldr	r3, [r3, #0]
 8015d16:	68db      	ldr	r3, [r3, #12]
 8015d18:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8015d1c:	f021 010c 	bic.w	r1, r1, #12
 8015d20:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d24:	681a      	ldr	r2, [r3, #0]
 8015d26:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8015d2a:	430b      	orrs	r3, r1
 8015d2c:	60d3      	str	r3, [r2, #12]
 8015d2e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d32:	681b      	ldr	r3, [r3, #0]
 8015d34:	695b      	ldr	r3, [r3, #20]
 8015d36:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8015d3a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d3e:	6999      	ldr	r1, [r3, #24]
 8015d40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d44:	681a      	ldr	r2, [r3, #0]
 8015d46:	ea40 0301 	orr.w	r3, r0, r1
 8015d4a:	6153      	str	r3, [r2, #20]
 8015d4c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d50:	681a      	ldr	r2, [r3, #0]
 8015d52:	4b8f      	ldr	r3, [pc, #572]	@ (8015f90 <UART_SetConfig+0x2cc>)
 8015d54:	429a      	cmp	r2, r3
 8015d56:	d005      	beq.n	8015d64 <UART_SetConfig+0xa0>
 8015d58:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d5c:	681a      	ldr	r2, [r3, #0]
 8015d5e:	4b8d      	ldr	r3, [pc, #564]	@ (8015f94 <UART_SetConfig+0x2d0>)
 8015d60:	429a      	cmp	r2, r3
 8015d62:	d104      	bne.n	8015d6e <UART_SetConfig+0xaa>
 8015d64:	f7fd fb76 	bl	8013454 <HAL_RCC_GetPCLK2Freq>
 8015d68:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8015d6c:	e003      	b.n	8015d76 <UART_SetConfig+0xb2>
 8015d6e:	f7fd fb5d 	bl	801342c <HAL_RCC_GetPCLK1Freq>
 8015d72:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8015d76:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015d7a:	69db      	ldr	r3, [r3, #28]
 8015d7c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8015d80:	f040 810c 	bne.w	8015f9c <UART_SetConfig+0x2d8>
 8015d84:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8015d88:	2200      	movs	r2, #0
 8015d8a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8015d8e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8015d92:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8015d96:	4622      	mov	r2, r4
 8015d98:	462b      	mov	r3, r5
 8015d9a:	1891      	adds	r1, r2, r2
 8015d9c:	65b9      	str	r1, [r7, #88]	@ 0x58
 8015d9e:	415b      	adcs	r3, r3
 8015da0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8015da2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8015da6:	4621      	mov	r1, r4
 8015da8:	eb12 0801 	adds.w	r8, r2, r1
 8015dac:	4629      	mov	r1, r5
 8015dae:	eb43 0901 	adc.w	r9, r3, r1
 8015db2:	f04f 0200 	mov.w	r2, #0
 8015db6:	f04f 0300 	mov.w	r3, #0
 8015dba:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8015dbe:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8015dc2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8015dc6:	4690      	mov	r8, r2
 8015dc8:	4699      	mov	r9, r3
 8015dca:	4623      	mov	r3, r4
 8015dcc:	eb18 0303 	adds.w	r3, r8, r3
 8015dd0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8015dd4:	462b      	mov	r3, r5
 8015dd6:	eb49 0303 	adc.w	r3, r9, r3
 8015dda:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8015dde:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015de2:	685b      	ldr	r3, [r3, #4]
 8015de4:	2200      	movs	r2, #0
 8015de6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8015dea:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8015dee:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8015df2:	460b      	mov	r3, r1
 8015df4:	18db      	adds	r3, r3, r3
 8015df6:	653b      	str	r3, [r7, #80]	@ 0x50
 8015df8:	4613      	mov	r3, r2
 8015dfa:	eb42 0303 	adc.w	r3, r2, r3
 8015dfe:	657b      	str	r3, [r7, #84]	@ 0x54
 8015e00:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8015e04:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8015e08:	f7ea ff3e 	bl	8000c88 <__aeabi_uldivmod>
 8015e0c:	4602      	mov	r2, r0
 8015e0e:	460b      	mov	r3, r1
 8015e10:	4b61      	ldr	r3, [pc, #388]	@ (8015f98 <UART_SetConfig+0x2d4>)
 8015e12:	fba3 2302 	umull	r2, r3, r3, r2
 8015e16:	095b      	lsrs	r3, r3, #5
 8015e18:	011c      	lsls	r4, r3, #4
 8015e1a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8015e1e:	2200      	movs	r2, #0
 8015e20:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8015e24:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8015e28:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8015e2c:	4642      	mov	r2, r8
 8015e2e:	464b      	mov	r3, r9
 8015e30:	1891      	adds	r1, r2, r2
 8015e32:	64b9      	str	r1, [r7, #72]	@ 0x48
 8015e34:	415b      	adcs	r3, r3
 8015e36:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8015e38:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8015e3c:	4641      	mov	r1, r8
 8015e3e:	eb12 0a01 	adds.w	sl, r2, r1
 8015e42:	4649      	mov	r1, r9
 8015e44:	eb43 0b01 	adc.w	fp, r3, r1
 8015e48:	f04f 0200 	mov.w	r2, #0
 8015e4c:	f04f 0300 	mov.w	r3, #0
 8015e50:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8015e54:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8015e58:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8015e5c:	4692      	mov	sl, r2
 8015e5e:	469b      	mov	fp, r3
 8015e60:	4643      	mov	r3, r8
 8015e62:	eb1a 0303 	adds.w	r3, sl, r3
 8015e66:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8015e6a:	464b      	mov	r3, r9
 8015e6c:	eb4b 0303 	adc.w	r3, fp, r3
 8015e70:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8015e74:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015e78:	685b      	ldr	r3, [r3, #4]
 8015e7a:	2200      	movs	r2, #0
 8015e7c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8015e80:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8015e84:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8015e88:	460b      	mov	r3, r1
 8015e8a:	18db      	adds	r3, r3, r3
 8015e8c:	643b      	str	r3, [r7, #64]	@ 0x40
 8015e8e:	4613      	mov	r3, r2
 8015e90:	eb42 0303 	adc.w	r3, r2, r3
 8015e94:	647b      	str	r3, [r7, #68]	@ 0x44
 8015e96:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8015e9a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8015e9e:	f7ea fef3 	bl	8000c88 <__aeabi_uldivmod>
 8015ea2:	4602      	mov	r2, r0
 8015ea4:	460b      	mov	r3, r1
 8015ea6:	4611      	mov	r1, r2
 8015ea8:	4b3b      	ldr	r3, [pc, #236]	@ (8015f98 <UART_SetConfig+0x2d4>)
 8015eaa:	fba3 2301 	umull	r2, r3, r3, r1
 8015eae:	095b      	lsrs	r3, r3, #5
 8015eb0:	2264      	movs	r2, #100	@ 0x64
 8015eb2:	fb02 f303 	mul.w	r3, r2, r3
 8015eb6:	1acb      	subs	r3, r1, r3
 8015eb8:	00db      	lsls	r3, r3, #3
 8015eba:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8015ebe:	4b36      	ldr	r3, [pc, #216]	@ (8015f98 <UART_SetConfig+0x2d4>)
 8015ec0:	fba3 2302 	umull	r2, r3, r3, r2
 8015ec4:	095b      	lsrs	r3, r3, #5
 8015ec6:	005b      	lsls	r3, r3, #1
 8015ec8:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8015ecc:	441c      	add	r4, r3
 8015ece:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8015ed2:	2200      	movs	r2, #0
 8015ed4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8015ed8:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8015edc:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8015ee0:	4642      	mov	r2, r8
 8015ee2:	464b      	mov	r3, r9
 8015ee4:	1891      	adds	r1, r2, r2
 8015ee6:	63b9      	str	r1, [r7, #56]	@ 0x38
 8015ee8:	415b      	adcs	r3, r3
 8015eea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8015eec:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8015ef0:	4641      	mov	r1, r8
 8015ef2:	1851      	adds	r1, r2, r1
 8015ef4:	6339      	str	r1, [r7, #48]	@ 0x30
 8015ef6:	4649      	mov	r1, r9
 8015ef8:	414b      	adcs	r3, r1
 8015efa:	637b      	str	r3, [r7, #52]	@ 0x34
 8015efc:	f04f 0200 	mov.w	r2, #0
 8015f00:	f04f 0300 	mov.w	r3, #0
 8015f04:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8015f08:	4659      	mov	r1, fp
 8015f0a:	00cb      	lsls	r3, r1, #3
 8015f0c:	4651      	mov	r1, sl
 8015f0e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8015f12:	4651      	mov	r1, sl
 8015f14:	00ca      	lsls	r2, r1, #3
 8015f16:	4610      	mov	r0, r2
 8015f18:	4619      	mov	r1, r3
 8015f1a:	4603      	mov	r3, r0
 8015f1c:	4642      	mov	r2, r8
 8015f1e:	189b      	adds	r3, r3, r2
 8015f20:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8015f24:	464b      	mov	r3, r9
 8015f26:	460a      	mov	r2, r1
 8015f28:	eb42 0303 	adc.w	r3, r2, r3
 8015f2c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8015f30:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015f34:	685b      	ldr	r3, [r3, #4]
 8015f36:	2200      	movs	r2, #0
 8015f38:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8015f3c:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8015f40:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8015f44:	460b      	mov	r3, r1
 8015f46:	18db      	adds	r3, r3, r3
 8015f48:	62bb      	str	r3, [r7, #40]	@ 0x28
 8015f4a:	4613      	mov	r3, r2
 8015f4c:	eb42 0303 	adc.w	r3, r2, r3
 8015f50:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8015f52:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8015f56:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8015f5a:	f7ea fe95 	bl	8000c88 <__aeabi_uldivmod>
 8015f5e:	4602      	mov	r2, r0
 8015f60:	460b      	mov	r3, r1
 8015f62:	4b0d      	ldr	r3, [pc, #52]	@ (8015f98 <UART_SetConfig+0x2d4>)
 8015f64:	fba3 1302 	umull	r1, r3, r3, r2
 8015f68:	095b      	lsrs	r3, r3, #5
 8015f6a:	2164      	movs	r1, #100	@ 0x64
 8015f6c:	fb01 f303 	mul.w	r3, r1, r3
 8015f70:	1ad3      	subs	r3, r2, r3
 8015f72:	00db      	lsls	r3, r3, #3
 8015f74:	3332      	adds	r3, #50	@ 0x32
 8015f76:	4a08      	ldr	r2, [pc, #32]	@ (8015f98 <UART_SetConfig+0x2d4>)
 8015f78:	fba2 2303 	umull	r2, r3, r2, r3
 8015f7c:	095b      	lsrs	r3, r3, #5
 8015f7e:	f003 0207 	and.w	r2, r3, #7
 8015f82:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015f86:	681b      	ldr	r3, [r3, #0]
 8015f88:	4422      	add	r2, r4
 8015f8a:	609a      	str	r2, [r3, #8]
 8015f8c:	e106      	b.n	801619c <UART_SetConfig+0x4d8>
 8015f8e:	bf00      	nop
 8015f90:	40011000 	.word	0x40011000
 8015f94:	40011400 	.word	0x40011400
 8015f98:	51eb851f 	.word	0x51eb851f
 8015f9c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8015fa0:	2200      	movs	r2, #0
 8015fa2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8015fa6:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8015faa:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8015fae:	4642      	mov	r2, r8
 8015fb0:	464b      	mov	r3, r9
 8015fb2:	1891      	adds	r1, r2, r2
 8015fb4:	6239      	str	r1, [r7, #32]
 8015fb6:	415b      	adcs	r3, r3
 8015fb8:	627b      	str	r3, [r7, #36]	@ 0x24
 8015fba:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8015fbe:	4641      	mov	r1, r8
 8015fc0:	1854      	adds	r4, r2, r1
 8015fc2:	4649      	mov	r1, r9
 8015fc4:	eb43 0501 	adc.w	r5, r3, r1
 8015fc8:	f04f 0200 	mov.w	r2, #0
 8015fcc:	f04f 0300 	mov.w	r3, #0
 8015fd0:	00eb      	lsls	r3, r5, #3
 8015fd2:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8015fd6:	00e2      	lsls	r2, r4, #3
 8015fd8:	4614      	mov	r4, r2
 8015fda:	461d      	mov	r5, r3
 8015fdc:	4643      	mov	r3, r8
 8015fde:	18e3      	adds	r3, r4, r3
 8015fe0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8015fe4:	464b      	mov	r3, r9
 8015fe6:	eb45 0303 	adc.w	r3, r5, r3
 8015fea:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8015fee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8015ff2:	685b      	ldr	r3, [r3, #4]
 8015ff4:	2200      	movs	r2, #0
 8015ff6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8015ffa:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8015ffe:	f04f 0200 	mov.w	r2, #0
 8016002:	f04f 0300 	mov.w	r3, #0
 8016006:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 801600a:	4629      	mov	r1, r5
 801600c:	008b      	lsls	r3, r1, #2
 801600e:	4621      	mov	r1, r4
 8016010:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8016014:	4621      	mov	r1, r4
 8016016:	008a      	lsls	r2, r1, #2
 8016018:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 801601c:	f7ea fe34 	bl	8000c88 <__aeabi_uldivmod>
 8016020:	4602      	mov	r2, r0
 8016022:	460b      	mov	r3, r1
 8016024:	4b60      	ldr	r3, [pc, #384]	@ (80161a8 <UART_SetConfig+0x4e4>)
 8016026:	fba3 2302 	umull	r2, r3, r3, r2
 801602a:	095b      	lsrs	r3, r3, #5
 801602c:	011c      	lsls	r4, r3, #4
 801602e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8016032:	2200      	movs	r2, #0
 8016034:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8016038:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 801603c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8016040:	4642      	mov	r2, r8
 8016042:	464b      	mov	r3, r9
 8016044:	1891      	adds	r1, r2, r2
 8016046:	61b9      	str	r1, [r7, #24]
 8016048:	415b      	adcs	r3, r3
 801604a:	61fb      	str	r3, [r7, #28]
 801604c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8016050:	4641      	mov	r1, r8
 8016052:	1851      	adds	r1, r2, r1
 8016054:	6139      	str	r1, [r7, #16]
 8016056:	4649      	mov	r1, r9
 8016058:	414b      	adcs	r3, r1
 801605a:	617b      	str	r3, [r7, #20]
 801605c:	f04f 0200 	mov.w	r2, #0
 8016060:	f04f 0300 	mov.w	r3, #0
 8016064:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8016068:	4659      	mov	r1, fp
 801606a:	00cb      	lsls	r3, r1, #3
 801606c:	4651      	mov	r1, sl
 801606e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8016072:	4651      	mov	r1, sl
 8016074:	00ca      	lsls	r2, r1, #3
 8016076:	4610      	mov	r0, r2
 8016078:	4619      	mov	r1, r3
 801607a:	4603      	mov	r3, r0
 801607c:	4642      	mov	r2, r8
 801607e:	189b      	adds	r3, r3, r2
 8016080:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8016084:	464b      	mov	r3, r9
 8016086:	460a      	mov	r2, r1
 8016088:	eb42 0303 	adc.w	r3, r2, r3
 801608c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8016090:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8016094:	685b      	ldr	r3, [r3, #4]
 8016096:	2200      	movs	r2, #0
 8016098:	67bb      	str	r3, [r7, #120]	@ 0x78
 801609a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 801609c:	f04f 0200 	mov.w	r2, #0
 80160a0:	f04f 0300 	mov.w	r3, #0
 80160a4:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80160a8:	4649      	mov	r1, r9
 80160aa:	008b      	lsls	r3, r1, #2
 80160ac:	4641      	mov	r1, r8
 80160ae:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80160b2:	4641      	mov	r1, r8
 80160b4:	008a      	lsls	r2, r1, #2
 80160b6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80160ba:	f7ea fde5 	bl	8000c88 <__aeabi_uldivmod>
 80160be:	4602      	mov	r2, r0
 80160c0:	460b      	mov	r3, r1
 80160c2:	4611      	mov	r1, r2
 80160c4:	4b38      	ldr	r3, [pc, #224]	@ (80161a8 <UART_SetConfig+0x4e4>)
 80160c6:	fba3 2301 	umull	r2, r3, r3, r1
 80160ca:	095b      	lsrs	r3, r3, #5
 80160cc:	2264      	movs	r2, #100	@ 0x64
 80160ce:	fb02 f303 	mul.w	r3, r2, r3
 80160d2:	1acb      	subs	r3, r1, r3
 80160d4:	011b      	lsls	r3, r3, #4
 80160d6:	3332      	adds	r3, #50	@ 0x32
 80160d8:	4a33      	ldr	r2, [pc, #204]	@ (80161a8 <UART_SetConfig+0x4e4>)
 80160da:	fba2 2303 	umull	r2, r3, r2, r3
 80160de:	095b      	lsrs	r3, r3, #5
 80160e0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80160e4:	441c      	add	r4, r3
 80160e6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80160ea:	2200      	movs	r2, #0
 80160ec:	673b      	str	r3, [r7, #112]	@ 0x70
 80160ee:	677a      	str	r2, [r7, #116]	@ 0x74
 80160f0:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80160f4:	4642      	mov	r2, r8
 80160f6:	464b      	mov	r3, r9
 80160f8:	1891      	adds	r1, r2, r2
 80160fa:	60b9      	str	r1, [r7, #8]
 80160fc:	415b      	adcs	r3, r3
 80160fe:	60fb      	str	r3, [r7, #12]
 8016100:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8016104:	4641      	mov	r1, r8
 8016106:	1851      	adds	r1, r2, r1
 8016108:	6039      	str	r1, [r7, #0]
 801610a:	4649      	mov	r1, r9
 801610c:	414b      	adcs	r3, r1
 801610e:	607b      	str	r3, [r7, #4]
 8016110:	f04f 0200 	mov.w	r2, #0
 8016114:	f04f 0300 	mov.w	r3, #0
 8016118:	e9d7 ab00 	ldrd	sl, fp, [r7]
 801611c:	4659      	mov	r1, fp
 801611e:	00cb      	lsls	r3, r1, #3
 8016120:	4651      	mov	r1, sl
 8016122:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8016126:	4651      	mov	r1, sl
 8016128:	00ca      	lsls	r2, r1, #3
 801612a:	4610      	mov	r0, r2
 801612c:	4619      	mov	r1, r3
 801612e:	4603      	mov	r3, r0
 8016130:	4642      	mov	r2, r8
 8016132:	189b      	adds	r3, r3, r2
 8016134:	66bb      	str	r3, [r7, #104]	@ 0x68
 8016136:	464b      	mov	r3, r9
 8016138:	460a      	mov	r2, r1
 801613a:	eb42 0303 	adc.w	r3, r2, r3
 801613e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8016140:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8016144:	685b      	ldr	r3, [r3, #4]
 8016146:	2200      	movs	r2, #0
 8016148:	663b      	str	r3, [r7, #96]	@ 0x60
 801614a:	667a      	str	r2, [r7, #100]	@ 0x64
 801614c:	f04f 0200 	mov.w	r2, #0
 8016150:	f04f 0300 	mov.w	r3, #0
 8016154:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8016158:	4649      	mov	r1, r9
 801615a:	008b      	lsls	r3, r1, #2
 801615c:	4641      	mov	r1, r8
 801615e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8016162:	4641      	mov	r1, r8
 8016164:	008a      	lsls	r2, r1, #2
 8016166:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 801616a:	f7ea fd8d 	bl	8000c88 <__aeabi_uldivmod>
 801616e:	4602      	mov	r2, r0
 8016170:	460b      	mov	r3, r1
 8016172:	4b0d      	ldr	r3, [pc, #52]	@ (80161a8 <UART_SetConfig+0x4e4>)
 8016174:	fba3 1302 	umull	r1, r3, r3, r2
 8016178:	095b      	lsrs	r3, r3, #5
 801617a:	2164      	movs	r1, #100	@ 0x64
 801617c:	fb01 f303 	mul.w	r3, r1, r3
 8016180:	1ad3      	subs	r3, r2, r3
 8016182:	011b      	lsls	r3, r3, #4
 8016184:	3332      	adds	r3, #50	@ 0x32
 8016186:	4a08      	ldr	r2, [pc, #32]	@ (80161a8 <UART_SetConfig+0x4e4>)
 8016188:	fba2 2303 	umull	r2, r3, r2, r3
 801618c:	095b      	lsrs	r3, r3, #5
 801618e:	f003 020f 	and.w	r2, r3, #15
 8016192:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8016196:	681b      	ldr	r3, [r3, #0]
 8016198:	4422      	add	r2, r4
 801619a:	609a      	str	r2, [r3, #8]
 801619c:	bf00      	nop
 801619e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80161a2:	46bd      	mov	sp, r7
 80161a4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80161a8:	51eb851f 	.word	0x51eb851f

080161ac <LL_TIM_SetPrescaler>:
 80161ac:	b480      	push	{r7}
 80161ae:	b083      	sub	sp, #12
 80161b0:	af00      	add	r7, sp, #0
 80161b2:	6078      	str	r0, [r7, #4]
 80161b4:	6039      	str	r1, [r7, #0]
 80161b6:	687b      	ldr	r3, [r7, #4]
 80161b8:	683a      	ldr	r2, [r7, #0]
 80161ba:	629a      	str	r2, [r3, #40]	@ 0x28
 80161bc:	bf00      	nop
 80161be:	370c      	adds	r7, #12
 80161c0:	46bd      	mov	sp, r7
 80161c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161c6:	4770      	bx	lr

080161c8 <LL_TIM_SetAutoReload>:
 80161c8:	b480      	push	{r7}
 80161ca:	b083      	sub	sp, #12
 80161cc:	af00      	add	r7, sp, #0
 80161ce:	6078      	str	r0, [r7, #4]
 80161d0:	6039      	str	r1, [r7, #0]
 80161d2:	687b      	ldr	r3, [r7, #4]
 80161d4:	683a      	ldr	r2, [r7, #0]
 80161d6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80161d8:	bf00      	nop
 80161da:	370c      	adds	r7, #12
 80161dc:	46bd      	mov	sp, r7
 80161de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161e2:	4770      	bx	lr

080161e4 <LL_TIM_SetRepetitionCounter>:
 80161e4:	b480      	push	{r7}
 80161e6:	b083      	sub	sp, #12
 80161e8:	af00      	add	r7, sp, #0
 80161ea:	6078      	str	r0, [r7, #4]
 80161ec:	6039      	str	r1, [r7, #0]
 80161ee:	687b      	ldr	r3, [r7, #4]
 80161f0:	683a      	ldr	r2, [r7, #0]
 80161f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80161f4:	bf00      	nop
 80161f6:	370c      	adds	r7, #12
 80161f8:	46bd      	mov	sp, r7
 80161fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80161fe:	4770      	bx	lr

08016200 <LL_TIM_GenerateEvent_UPDATE>:
 8016200:	b480      	push	{r7}
 8016202:	b083      	sub	sp, #12
 8016204:	af00      	add	r7, sp, #0
 8016206:	6078      	str	r0, [r7, #4]
 8016208:	687b      	ldr	r3, [r7, #4]
 801620a:	695b      	ldr	r3, [r3, #20]
 801620c:	f043 0201 	orr.w	r2, r3, #1
 8016210:	687b      	ldr	r3, [r7, #4]
 8016212:	615a      	str	r2, [r3, #20]
 8016214:	bf00      	nop
 8016216:	370c      	adds	r7, #12
 8016218:	46bd      	mov	sp, r7
 801621a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801621e:	4770      	bx	lr

08016220 <LL_TIM_Init>:
 8016220:	b580      	push	{r7, lr}
 8016222:	b084      	sub	sp, #16
 8016224:	af00      	add	r7, sp, #0
 8016226:	6078      	str	r0, [r7, #4]
 8016228:	6039      	str	r1, [r7, #0]
 801622a:	687b      	ldr	r3, [r7, #4]
 801622c:	681b      	ldr	r3, [r3, #0]
 801622e:	60fb      	str	r3, [r7, #12]
 8016230:	687b      	ldr	r3, [r7, #4]
 8016232:	4a3d      	ldr	r2, [pc, #244]	@ (8016328 <LL_TIM_Init+0x108>)
 8016234:	4293      	cmp	r3, r2
 8016236:	d013      	beq.n	8016260 <LL_TIM_Init+0x40>
 8016238:	687b      	ldr	r3, [r7, #4]
 801623a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801623e:	d00f      	beq.n	8016260 <LL_TIM_Init+0x40>
 8016240:	687b      	ldr	r3, [r7, #4]
 8016242:	4a3a      	ldr	r2, [pc, #232]	@ (801632c <LL_TIM_Init+0x10c>)
 8016244:	4293      	cmp	r3, r2
 8016246:	d00b      	beq.n	8016260 <LL_TIM_Init+0x40>
 8016248:	687b      	ldr	r3, [r7, #4]
 801624a:	4a39      	ldr	r2, [pc, #228]	@ (8016330 <LL_TIM_Init+0x110>)
 801624c:	4293      	cmp	r3, r2
 801624e:	d007      	beq.n	8016260 <LL_TIM_Init+0x40>
 8016250:	687b      	ldr	r3, [r7, #4]
 8016252:	4a38      	ldr	r2, [pc, #224]	@ (8016334 <LL_TIM_Init+0x114>)
 8016254:	4293      	cmp	r3, r2
 8016256:	d003      	beq.n	8016260 <LL_TIM_Init+0x40>
 8016258:	687b      	ldr	r3, [r7, #4]
 801625a:	4a37      	ldr	r2, [pc, #220]	@ (8016338 <LL_TIM_Init+0x118>)
 801625c:	4293      	cmp	r3, r2
 801625e:	d106      	bne.n	801626e <LL_TIM_Init+0x4e>
 8016260:	68fb      	ldr	r3, [r7, #12]
 8016262:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8016266:	683b      	ldr	r3, [r7, #0]
 8016268:	685b      	ldr	r3, [r3, #4]
 801626a:	4313      	orrs	r3, r2
 801626c:	60fb      	str	r3, [r7, #12]
 801626e:	687b      	ldr	r3, [r7, #4]
 8016270:	4a2d      	ldr	r2, [pc, #180]	@ (8016328 <LL_TIM_Init+0x108>)
 8016272:	4293      	cmp	r3, r2
 8016274:	d02b      	beq.n	80162ce <LL_TIM_Init+0xae>
 8016276:	687b      	ldr	r3, [r7, #4]
 8016278:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 801627c:	d027      	beq.n	80162ce <LL_TIM_Init+0xae>
 801627e:	687b      	ldr	r3, [r7, #4]
 8016280:	4a2a      	ldr	r2, [pc, #168]	@ (801632c <LL_TIM_Init+0x10c>)
 8016282:	4293      	cmp	r3, r2
 8016284:	d023      	beq.n	80162ce <LL_TIM_Init+0xae>
 8016286:	687b      	ldr	r3, [r7, #4]
 8016288:	4a29      	ldr	r2, [pc, #164]	@ (8016330 <LL_TIM_Init+0x110>)
 801628a:	4293      	cmp	r3, r2
 801628c:	d01f      	beq.n	80162ce <LL_TIM_Init+0xae>
 801628e:	687b      	ldr	r3, [r7, #4]
 8016290:	4a28      	ldr	r2, [pc, #160]	@ (8016334 <LL_TIM_Init+0x114>)
 8016292:	4293      	cmp	r3, r2
 8016294:	d01b      	beq.n	80162ce <LL_TIM_Init+0xae>
 8016296:	687b      	ldr	r3, [r7, #4]
 8016298:	4a27      	ldr	r2, [pc, #156]	@ (8016338 <LL_TIM_Init+0x118>)
 801629a:	4293      	cmp	r3, r2
 801629c:	d017      	beq.n	80162ce <LL_TIM_Init+0xae>
 801629e:	687b      	ldr	r3, [r7, #4]
 80162a0:	4a26      	ldr	r2, [pc, #152]	@ (801633c <LL_TIM_Init+0x11c>)
 80162a2:	4293      	cmp	r3, r2
 80162a4:	d013      	beq.n	80162ce <LL_TIM_Init+0xae>
 80162a6:	687b      	ldr	r3, [r7, #4]
 80162a8:	4a25      	ldr	r2, [pc, #148]	@ (8016340 <LL_TIM_Init+0x120>)
 80162aa:	4293      	cmp	r3, r2
 80162ac:	d00f      	beq.n	80162ce <LL_TIM_Init+0xae>
 80162ae:	687b      	ldr	r3, [r7, #4]
 80162b0:	4a24      	ldr	r2, [pc, #144]	@ (8016344 <LL_TIM_Init+0x124>)
 80162b2:	4293      	cmp	r3, r2
 80162b4:	d00b      	beq.n	80162ce <LL_TIM_Init+0xae>
 80162b6:	687b      	ldr	r3, [r7, #4]
 80162b8:	4a23      	ldr	r2, [pc, #140]	@ (8016348 <LL_TIM_Init+0x128>)
 80162ba:	4293      	cmp	r3, r2
 80162bc:	d007      	beq.n	80162ce <LL_TIM_Init+0xae>
 80162be:	687b      	ldr	r3, [r7, #4]
 80162c0:	4a22      	ldr	r2, [pc, #136]	@ (801634c <LL_TIM_Init+0x12c>)
 80162c2:	4293      	cmp	r3, r2
 80162c4:	d003      	beq.n	80162ce <LL_TIM_Init+0xae>
 80162c6:	687b      	ldr	r3, [r7, #4]
 80162c8:	4a21      	ldr	r2, [pc, #132]	@ (8016350 <LL_TIM_Init+0x130>)
 80162ca:	4293      	cmp	r3, r2
 80162cc:	d106      	bne.n	80162dc <LL_TIM_Init+0xbc>
 80162ce:	68fb      	ldr	r3, [r7, #12]
 80162d0:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80162d4:	683b      	ldr	r3, [r7, #0]
 80162d6:	68db      	ldr	r3, [r3, #12]
 80162d8:	4313      	orrs	r3, r2
 80162da:	60fb      	str	r3, [r7, #12]
 80162dc:	687b      	ldr	r3, [r7, #4]
 80162de:	68fa      	ldr	r2, [r7, #12]
 80162e0:	601a      	str	r2, [r3, #0]
 80162e2:	683b      	ldr	r3, [r7, #0]
 80162e4:	689b      	ldr	r3, [r3, #8]
 80162e6:	4619      	mov	r1, r3
 80162e8:	6878      	ldr	r0, [r7, #4]
 80162ea:	f7ff ff6d 	bl	80161c8 <LL_TIM_SetAutoReload>
 80162ee:	683b      	ldr	r3, [r7, #0]
 80162f0:	881b      	ldrh	r3, [r3, #0]
 80162f2:	4619      	mov	r1, r3
 80162f4:	6878      	ldr	r0, [r7, #4]
 80162f6:	f7ff ff59 	bl	80161ac <LL_TIM_SetPrescaler>
 80162fa:	687b      	ldr	r3, [r7, #4]
 80162fc:	4a0a      	ldr	r2, [pc, #40]	@ (8016328 <LL_TIM_Init+0x108>)
 80162fe:	4293      	cmp	r3, r2
 8016300:	d003      	beq.n	801630a <LL_TIM_Init+0xea>
 8016302:	687b      	ldr	r3, [r7, #4]
 8016304:	4a0c      	ldr	r2, [pc, #48]	@ (8016338 <LL_TIM_Init+0x118>)
 8016306:	4293      	cmp	r3, r2
 8016308:	d105      	bne.n	8016316 <LL_TIM_Init+0xf6>
 801630a:	683b      	ldr	r3, [r7, #0]
 801630c:	691b      	ldr	r3, [r3, #16]
 801630e:	4619      	mov	r1, r3
 8016310:	6878      	ldr	r0, [r7, #4]
 8016312:	f7ff ff67 	bl	80161e4 <LL_TIM_SetRepetitionCounter>
 8016316:	6878      	ldr	r0, [r7, #4]
 8016318:	f7ff ff72 	bl	8016200 <LL_TIM_GenerateEvent_UPDATE>
 801631c:	2300      	movs	r3, #0
 801631e:	4618      	mov	r0, r3
 8016320:	3710      	adds	r7, #16
 8016322:	46bd      	mov	sp, r7
 8016324:	bd80      	pop	{r7, pc}
 8016326:	bf00      	nop
 8016328:	40010000 	.word	0x40010000
 801632c:	40000400 	.word	0x40000400
 8016330:	40000800 	.word	0x40000800
 8016334:	40000c00 	.word	0x40000c00
 8016338:	40010400 	.word	0x40010400
 801633c:	40014000 	.word	0x40014000
 8016340:	40014400 	.word	0x40014400
 8016344:	40014800 	.word	0x40014800
 8016348:	40001800 	.word	0x40001800
 801634c:	40001c00 	.word	0x40001c00
 8016350:	40002000 	.word	0x40002000

08016354 <USB_CoreInit>:
 8016354:	b084      	sub	sp, #16
 8016356:	b580      	push	{r7, lr}
 8016358:	b084      	sub	sp, #16
 801635a:	af00      	add	r7, sp, #0
 801635c:	6078      	str	r0, [r7, #4]
 801635e:	f107 001c 	add.w	r0, r7, #28
 8016362:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8016366:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8016368:	2b01      	cmp	r3, #1
 801636a:	d122      	bne.n	80163b2 <USB_CoreInit+0x5e>
 801636c:	687b      	ldr	r3, [r7, #4]
 801636e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016370:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8016374:	687b      	ldr	r3, [r7, #4]
 8016376:	639a      	str	r2, [r3, #56]	@ 0x38
 8016378:	687b      	ldr	r3, [r7, #4]
 801637a:	68db      	ldr	r3, [r3, #12]
 801637c:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 8016380:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8016384:	687a      	ldr	r2, [r7, #4]
 8016386:	60d3      	str	r3, [r2, #12]
 8016388:	687b      	ldr	r3, [r7, #4]
 801638a:	68db      	ldr	r3, [r3, #12]
 801638c:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8016390:	687b      	ldr	r3, [r7, #4]
 8016392:	60da      	str	r2, [r3, #12]
 8016394:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8016396:	2b01      	cmp	r3, #1
 8016398:	d105      	bne.n	80163a6 <USB_CoreInit+0x52>
 801639a:	687b      	ldr	r3, [r7, #4]
 801639c:	68db      	ldr	r3, [r3, #12]
 801639e:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 80163a2:	687b      	ldr	r3, [r7, #4]
 80163a4:	60da      	str	r2, [r3, #12]
 80163a6:	6878      	ldr	r0, [r7, #4]
 80163a8:	f001 fbee 	bl	8017b88 <USB_CoreReset>
 80163ac:	4603      	mov	r3, r0
 80163ae:	73fb      	strb	r3, [r7, #15]
 80163b0:	e01a      	b.n	80163e8 <USB_CoreInit+0x94>
 80163b2:	687b      	ldr	r3, [r7, #4]
 80163b4:	68db      	ldr	r3, [r3, #12]
 80163b6:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 80163ba:	687b      	ldr	r3, [r7, #4]
 80163bc:	60da      	str	r2, [r3, #12]
 80163be:	6878      	ldr	r0, [r7, #4]
 80163c0:	f001 fbe2 	bl	8017b88 <USB_CoreReset>
 80163c4:	4603      	mov	r3, r0
 80163c6:	73fb      	strb	r3, [r7, #15]
 80163c8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 80163ca:	2b00      	cmp	r3, #0
 80163cc:	d106      	bne.n	80163dc <USB_CoreInit+0x88>
 80163ce:	687b      	ldr	r3, [r7, #4]
 80163d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80163d2:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 80163d6:	687b      	ldr	r3, [r7, #4]
 80163d8:	639a      	str	r2, [r3, #56]	@ 0x38
 80163da:	e005      	b.n	80163e8 <USB_CoreInit+0x94>
 80163dc:	687b      	ldr	r3, [r7, #4]
 80163de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80163e0:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 80163e4:	687b      	ldr	r3, [r7, #4]
 80163e6:	639a      	str	r2, [r3, #56]	@ 0x38
 80163e8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80163ea:	2b01      	cmp	r3, #1
 80163ec:	d10b      	bne.n	8016406 <USB_CoreInit+0xb2>
 80163ee:	687b      	ldr	r3, [r7, #4]
 80163f0:	689b      	ldr	r3, [r3, #8]
 80163f2:	f043 0206 	orr.w	r2, r3, #6
 80163f6:	687b      	ldr	r3, [r7, #4]
 80163f8:	609a      	str	r2, [r3, #8]
 80163fa:	687b      	ldr	r3, [r7, #4]
 80163fc:	689b      	ldr	r3, [r3, #8]
 80163fe:	f043 0220 	orr.w	r2, r3, #32
 8016402:	687b      	ldr	r3, [r7, #4]
 8016404:	609a      	str	r2, [r3, #8]
 8016406:	7bfb      	ldrb	r3, [r7, #15]
 8016408:	4618      	mov	r0, r3
 801640a:	3710      	adds	r7, #16
 801640c:	46bd      	mov	sp, r7
 801640e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8016412:	b004      	add	sp, #16
 8016414:	4770      	bx	lr
	...

08016418 <USB_SetTurnaroundTime>:
 8016418:	b480      	push	{r7}
 801641a:	b087      	sub	sp, #28
 801641c:	af00      	add	r7, sp, #0
 801641e:	60f8      	str	r0, [r7, #12]
 8016420:	60b9      	str	r1, [r7, #8]
 8016422:	4613      	mov	r3, r2
 8016424:	71fb      	strb	r3, [r7, #7]
 8016426:	79fb      	ldrb	r3, [r7, #7]
 8016428:	2b02      	cmp	r3, #2
 801642a:	d165      	bne.n	80164f8 <USB_SetTurnaroundTime+0xe0>
 801642c:	68bb      	ldr	r3, [r7, #8]
 801642e:	4a41      	ldr	r2, [pc, #260]	@ (8016534 <USB_SetTurnaroundTime+0x11c>)
 8016430:	4293      	cmp	r3, r2
 8016432:	d906      	bls.n	8016442 <USB_SetTurnaroundTime+0x2a>
 8016434:	68bb      	ldr	r3, [r7, #8]
 8016436:	4a40      	ldr	r2, [pc, #256]	@ (8016538 <USB_SetTurnaroundTime+0x120>)
 8016438:	4293      	cmp	r3, r2
 801643a:	d202      	bcs.n	8016442 <USB_SetTurnaroundTime+0x2a>
 801643c:	230f      	movs	r3, #15
 801643e:	617b      	str	r3, [r7, #20]
 8016440:	e062      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 8016442:	68bb      	ldr	r3, [r7, #8]
 8016444:	4a3c      	ldr	r2, [pc, #240]	@ (8016538 <USB_SetTurnaroundTime+0x120>)
 8016446:	4293      	cmp	r3, r2
 8016448:	d306      	bcc.n	8016458 <USB_SetTurnaroundTime+0x40>
 801644a:	68bb      	ldr	r3, [r7, #8]
 801644c:	4a3b      	ldr	r2, [pc, #236]	@ (801653c <USB_SetTurnaroundTime+0x124>)
 801644e:	4293      	cmp	r3, r2
 8016450:	d202      	bcs.n	8016458 <USB_SetTurnaroundTime+0x40>
 8016452:	230e      	movs	r3, #14
 8016454:	617b      	str	r3, [r7, #20]
 8016456:	e057      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 8016458:	68bb      	ldr	r3, [r7, #8]
 801645a:	4a38      	ldr	r2, [pc, #224]	@ (801653c <USB_SetTurnaroundTime+0x124>)
 801645c:	4293      	cmp	r3, r2
 801645e:	d306      	bcc.n	801646e <USB_SetTurnaroundTime+0x56>
 8016460:	68bb      	ldr	r3, [r7, #8]
 8016462:	4a37      	ldr	r2, [pc, #220]	@ (8016540 <USB_SetTurnaroundTime+0x128>)
 8016464:	4293      	cmp	r3, r2
 8016466:	d202      	bcs.n	801646e <USB_SetTurnaroundTime+0x56>
 8016468:	230d      	movs	r3, #13
 801646a:	617b      	str	r3, [r7, #20]
 801646c:	e04c      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 801646e:	68bb      	ldr	r3, [r7, #8]
 8016470:	4a33      	ldr	r2, [pc, #204]	@ (8016540 <USB_SetTurnaroundTime+0x128>)
 8016472:	4293      	cmp	r3, r2
 8016474:	d306      	bcc.n	8016484 <USB_SetTurnaroundTime+0x6c>
 8016476:	68bb      	ldr	r3, [r7, #8]
 8016478:	4a32      	ldr	r2, [pc, #200]	@ (8016544 <USB_SetTurnaroundTime+0x12c>)
 801647a:	4293      	cmp	r3, r2
 801647c:	d802      	bhi.n	8016484 <USB_SetTurnaroundTime+0x6c>
 801647e:	230c      	movs	r3, #12
 8016480:	617b      	str	r3, [r7, #20]
 8016482:	e041      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 8016484:	68bb      	ldr	r3, [r7, #8]
 8016486:	4a2f      	ldr	r2, [pc, #188]	@ (8016544 <USB_SetTurnaroundTime+0x12c>)
 8016488:	4293      	cmp	r3, r2
 801648a:	d906      	bls.n	801649a <USB_SetTurnaroundTime+0x82>
 801648c:	68bb      	ldr	r3, [r7, #8]
 801648e:	4a2e      	ldr	r2, [pc, #184]	@ (8016548 <USB_SetTurnaroundTime+0x130>)
 8016490:	4293      	cmp	r3, r2
 8016492:	d802      	bhi.n	801649a <USB_SetTurnaroundTime+0x82>
 8016494:	230b      	movs	r3, #11
 8016496:	617b      	str	r3, [r7, #20]
 8016498:	e036      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 801649a:	68bb      	ldr	r3, [r7, #8]
 801649c:	4a2a      	ldr	r2, [pc, #168]	@ (8016548 <USB_SetTurnaroundTime+0x130>)
 801649e:	4293      	cmp	r3, r2
 80164a0:	d906      	bls.n	80164b0 <USB_SetTurnaroundTime+0x98>
 80164a2:	68bb      	ldr	r3, [r7, #8]
 80164a4:	4a29      	ldr	r2, [pc, #164]	@ (801654c <USB_SetTurnaroundTime+0x134>)
 80164a6:	4293      	cmp	r3, r2
 80164a8:	d802      	bhi.n	80164b0 <USB_SetTurnaroundTime+0x98>
 80164aa:	230a      	movs	r3, #10
 80164ac:	617b      	str	r3, [r7, #20]
 80164ae:	e02b      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 80164b0:	68bb      	ldr	r3, [r7, #8]
 80164b2:	4a26      	ldr	r2, [pc, #152]	@ (801654c <USB_SetTurnaroundTime+0x134>)
 80164b4:	4293      	cmp	r3, r2
 80164b6:	d906      	bls.n	80164c6 <USB_SetTurnaroundTime+0xae>
 80164b8:	68bb      	ldr	r3, [r7, #8]
 80164ba:	4a25      	ldr	r2, [pc, #148]	@ (8016550 <USB_SetTurnaroundTime+0x138>)
 80164bc:	4293      	cmp	r3, r2
 80164be:	d202      	bcs.n	80164c6 <USB_SetTurnaroundTime+0xae>
 80164c0:	2309      	movs	r3, #9
 80164c2:	617b      	str	r3, [r7, #20]
 80164c4:	e020      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 80164c6:	68bb      	ldr	r3, [r7, #8]
 80164c8:	4a21      	ldr	r2, [pc, #132]	@ (8016550 <USB_SetTurnaroundTime+0x138>)
 80164ca:	4293      	cmp	r3, r2
 80164cc:	d306      	bcc.n	80164dc <USB_SetTurnaroundTime+0xc4>
 80164ce:	68bb      	ldr	r3, [r7, #8]
 80164d0:	4a20      	ldr	r2, [pc, #128]	@ (8016554 <USB_SetTurnaroundTime+0x13c>)
 80164d2:	4293      	cmp	r3, r2
 80164d4:	d802      	bhi.n	80164dc <USB_SetTurnaroundTime+0xc4>
 80164d6:	2308      	movs	r3, #8
 80164d8:	617b      	str	r3, [r7, #20]
 80164da:	e015      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 80164dc:	68bb      	ldr	r3, [r7, #8]
 80164de:	4a1d      	ldr	r2, [pc, #116]	@ (8016554 <USB_SetTurnaroundTime+0x13c>)
 80164e0:	4293      	cmp	r3, r2
 80164e2:	d906      	bls.n	80164f2 <USB_SetTurnaroundTime+0xda>
 80164e4:	68bb      	ldr	r3, [r7, #8]
 80164e6:	4a1c      	ldr	r2, [pc, #112]	@ (8016558 <USB_SetTurnaroundTime+0x140>)
 80164e8:	4293      	cmp	r3, r2
 80164ea:	d202      	bcs.n	80164f2 <USB_SetTurnaroundTime+0xda>
 80164ec:	2307      	movs	r3, #7
 80164ee:	617b      	str	r3, [r7, #20]
 80164f0:	e00a      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 80164f2:	2306      	movs	r3, #6
 80164f4:	617b      	str	r3, [r7, #20]
 80164f6:	e007      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 80164f8:	79fb      	ldrb	r3, [r7, #7]
 80164fa:	2b00      	cmp	r3, #0
 80164fc:	d102      	bne.n	8016504 <USB_SetTurnaroundTime+0xec>
 80164fe:	2309      	movs	r3, #9
 8016500:	617b      	str	r3, [r7, #20]
 8016502:	e001      	b.n	8016508 <USB_SetTurnaroundTime+0xf0>
 8016504:	2309      	movs	r3, #9
 8016506:	617b      	str	r3, [r7, #20]
 8016508:	68fb      	ldr	r3, [r7, #12]
 801650a:	68db      	ldr	r3, [r3, #12]
 801650c:	f423 5270 	bic.w	r2, r3, #15360	@ 0x3c00
 8016510:	68fb      	ldr	r3, [r7, #12]
 8016512:	60da      	str	r2, [r3, #12]
 8016514:	68fb      	ldr	r3, [r7, #12]
 8016516:	68da      	ldr	r2, [r3, #12]
 8016518:	697b      	ldr	r3, [r7, #20]
 801651a:	029b      	lsls	r3, r3, #10
 801651c:	f403 5370 	and.w	r3, r3, #15360	@ 0x3c00
 8016520:	431a      	orrs	r2, r3
 8016522:	68fb      	ldr	r3, [r7, #12]
 8016524:	60da      	str	r2, [r3, #12]
 8016526:	2300      	movs	r3, #0
 8016528:	4618      	mov	r0, r3
 801652a:	371c      	adds	r7, #28
 801652c:	46bd      	mov	sp, r7
 801652e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016532:	4770      	bx	lr
 8016534:	00d8acbf 	.word	0x00d8acbf
 8016538:	00e4e1c0 	.word	0x00e4e1c0
 801653c:	00f42400 	.word	0x00f42400
 8016540:	01067380 	.word	0x01067380
 8016544:	011a499f 	.word	0x011a499f
 8016548:	01312cff 	.word	0x01312cff
 801654c:	014ca43f 	.word	0x014ca43f
 8016550:	016e3600 	.word	0x016e3600
 8016554:	01a6ab1f 	.word	0x01a6ab1f
 8016558:	01e84800 	.word	0x01e84800

0801655c <USB_EnableGlobalInt>:
 801655c:	b480      	push	{r7}
 801655e:	b083      	sub	sp, #12
 8016560:	af00      	add	r7, sp, #0
 8016562:	6078      	str	r0, [r7, #4]
 8016564:	687b      	ldr	r3, [r7, #4]
 8016566:	689b      	ldr	r3, [r3, #8]
 8016568:	f043 0201 	orr.w	r2, r3, #1
 801656c:	687b      	ldr	r3, [r7, #4]
 801656e:	609a      	str	r2, [r3, #8]
 8016570:	2300      	movs	r3, #0
 8016572:	4618      	mov	r0, r3
 8016574:	370c      	adds	r7, #12
 8016576:	46bd      	mov	sp, r7
 8016578:	f85d 7b04 	ldr.w	r7, [sp], #4
 801657c:	4770      	bx	lr

0801657e <USB_DisableGlobalInt>:
 801657e:	b480      	push	{r7}
 8016580:	b083      	sub	sp, #12
 8016582:	af00      	add	r7, sp, #0
 8016584:	6078      	str	r0, [r7, #4]
 8016586:	687b      	ldr	r3, [r7, #4]
 8016588:	689b      	ldr	r3, [r3, #8]
 801658a:	f023 0201 	bic.w	r2, r3, #1
 801658e:	687b      	ldr	r3, [r7, #4]
 8016590:	609a      	str	r2, [r3, #8]
 8016592:	2300      	movs	r3, #0
 8016594:	4618      	mov	r0, r3
 8016596:	370c      	adds	r7, #12
 8016598:	46bd      	mov	sp, r7
 801659a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801659e:	4770      	bx	lr

080165a0 <USB_SetCurrentMode>:
 80165a0:	b580      	push	{r7, lr}
 80165a2:	b084      	sub	sp, #16
 80165a4:	af00      	add	r7, sp, #0
 80165a6:	6078      	str	r0, [r7, #4]
 80165a8:	460b      	mov	r3, r1
 80165aa:	70fb      	strb	r3, [r7, #3]
 80165ac:	2300      	movs	r3, #0
 80165ae:	60fb      	str	r3, [r7, #12]
 80165b0:	687b      	ldr	r3, [r7, #4]
 80165b2:	68db      	ldr	r3, [r3, #12]
 80165b4:	f023 42c0 	bic.w	r2, r3, #1610612736	@ 0x60000000
 80165b8:	687b      	ldr	r3, [r7, #4]
 80165ba:	60da      	str	r2, [r3, #12]
 80165bc:	78fb      	ldrb	r3, [r7, #3]
 80165be:	2b01      	cmp	r3, #1
 80165c0:	d115      	bne.n	80165ee <USB_SetCurrentMode+0x4e>
 80165c2:	687b      	ldr	r3, [r7, #4]
 80165c4:	68db      	ldr	r3, [r3, #12]
 80165c6:	f043 5200 	orr.w	r2, r3, #536870912	@ 0x20000000
 80165ca:	687b      	ldr	r3, [r7, #4]
 80165cc:	60da      	str	r2, [r3, #12]
 80165ce:	2001      	movs	r0, #1
 80165d0:	f7f7 fafe 	bl	800dbd0 <HAL_Delay>
 80165d4:	68fb      	ldr	r3, [r7, #12]
 80165d6:	3301      	adds	r3, #1
 80165d8:	60fb      	str	r3, [r7, #12]
 80165da:	6878      	ldr	r0, [r7, #4]
 80165dc:	f001 fa45 	bl	8017a6a <USB_GetMode>
 80165e0:	4603      	mov	r3, r0
 80165e2:	2b01      	cmp	r3, #1
 80165e4:	d01e      	beq.n	8016624 <USB_SetCurrentMode+0x84>
 80165e6:	68fb      	ldr	r3, [r7, #12]
 80165e8:	2b31      	cmp	r3, #49	@ 0x31
 80165ea:	d9f0      	bls.n	80165ce <USB_SetCurrentMode+0x2e>
 80165ec:	e01a      	b.n	8016624 <USB_SetCurrentMode+0x84>
 80165ee:	78fb      	ldrb	r3, [r7, #3]
 80165f0:	2b00      	cmp	r3, #0
 80165f2:	d115      	bne.n	8016620 <USB_SetCurrentMode+0x80>
 80165f4:	687b      	ldr	r3, [r7, #4]
 80165f6:	68db      	ldr	r3, [r3, #12]
 80165f8:	f043 4280 	orr.w	r2, r3, #1073741824	@ 0x40000000
 80165fc:	687b      	ldr	r3, [r7, #4]
 80165fe:	60da      	str	r2, [r3, #12]
 8016600:	2001      	movs	r0, #1
 8016602:	f7f7 fae5 	bl	800dbd0 <HAL_Delay>
 8016606:	68fb      	ldr	r3, [r7, #12]
 8016608:	3301      	adds	r3, #1
 801660a:	60fb      	str	r3, [r7, #12]
 801660c:	6878      	ldr	r0, [r7, #4]
 801660e:	f001 fa2c 	bl	8017a6a <USB_GetMode>
 8016612:	4603      	mov	r3, r0
 8016614:	2b00      	cmp	r3, #0
 8016616:	d005      	beq.n	8016624 <USB_SetCurrentMode+0x84>
 8016618:	68fb      	ldr	r3, [r7, #12]
 801661a:	2b31      	cmp	r3, #49	@ 0x31
 801661c:	d9f0      	bls.n	8016600 <USB_SetCurrentMode+0x60>
 801661e:	e001      	b.n	8016624 <USB_SetCurrentMode+0x84>
 8016620:	2301      	movs	r3, #1
 8016622:	e005      	b.n	8016630 <USB_SetCurrentMode+0x90>
 8016624:	68fb      	ldr	r3, [r7, #12]
 8016626:	2b32      	cmp	r3, #50	@ 0x32
 8016628:	d101      	bne.n	801662e <USB_SetCurrentMode+0x8e>
 801662a:	2301      	movs	r3, #1
 801662c:	e000      	b.n	8016630 <USB_SetCurrentMode+0x90>
 801662e:	2300      	movs	r3, #0
 8016630:	4618      	mov	r0, r3
 8016632:	3710      	adds	r7, #16
 8016634:	46bd      	mov	sp, r7
 8016636:	bd80      	pop	{r7, pc}

08016638 <USB_DevInit>:
 8016638:	b084      	sub	sp, #16
 801663a:	b580      	push	{r7, lr}
 801663c:	b086      	sub	sp, #24
 801663e:	af00      	add	r7, sp, #0
 8016640:	6078      	str	r0, [r7, #4]
 8016642:	f107 0024 	add.w	r0, r7, #36	@ 0x24
 8016646:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 801664a:	2300      	movs	r3, #0
 801664c:	75fb      	strb	r3, [r7, #23]
 801664e:	687b      	ldr	r3, [r7, #4]
 8016650:	60fb      	str	r3, [r7, #12]
 8016652:	2300      	movs	r3, #0
 8016654:	613b      	str	r3, [r7, #16]
 8016656:	e009      	b.n	801666c <USB_DevInit+0x34>
 8016658:	687a      	ldr	r2, [r7, #4]
 801665a:	693b      	ldr	r3, [r7, #16]
 801665c:	3340      	adds	r3, #64	@ 0x40
 801665e:	009b      	lsls	r3, r3, #2
 8016660:	4413      	add	r3, r2
 8016662:	2200      	movs	r2, #0
 8016664:	605a      	str	r2, [r3, #4]
 8016666:	693b      	ldr	r3, [r7, #16]
 8016668:	3301      	adds	r3, #1
 801666a:	613b      	str	r3, [r7, #16]
 801666c:	693b      	ldr	r3, [r7, #16]
 801666e:	2b0e      	cmp	r3, #14
 8016670:	d9f2      	bls.n	8016658 <USB_DevInit+0x20>
 8016672:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8016674:	2b00      	cmp	r3, #0
 8016676:	d11c      	bne.n	80166b2 <USB_DevInit+0x7a>
 8016678:	68fb      	ldr	r3, [r7, #12]
 801667a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801667e:	685b      	ldr	r3, [r3, #4]
 8016680:	68fa      	ldr	r2, [r7, #12]
 8016682:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8016686:	f043 0302 	orr.w	r3, r3, #2
 801668a:	6053      	str	r3, [r2, #4]
 801668c:	687b      	ldr	r3, [r7, #4]
 801668e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016690:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8016694:	687b      	ldr	r3, [r7, #4]
 8016696:	639a      	str	r2, [r3, #56]	@ 0x38
 8016698:	687b      	ldr	r3, [r7, #4]
 801669a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801669c:	f423 2200 	bic.w	r2, r3, #524288	@ 0x80000
 80166a0:	687b      	ldr	r3, [r7, #4]
 80166a2:	639a      	str	r2, [r3, #56]	@ 0x38
 80166a4:	687b      	ldr	r3, [r7, #4]
 80166a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80166a8:	f423 2280 	bic.w	r2, r3, #262144	@ 0x40000
 80166ac:	687b      	ldr	r3, [r7, #4]
 80166ae:	639a      	str	r2, [r3, #56]	@ 0x38
 80166b0:	e00b      	b.n	80166ca <USB_DevInit+0x92>
 80166b2:	687b      	ldr	r3, [r7, #4]
 80166b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80166b6:	f423 1200 	bic.w	r2, r3, #2097152	@ 0x200000
 80166ba:	687b      	ldr	r3, [r7, #4]
 80166bc:	639a      	str	r2, [r3, #56]	@ 0x38
 80166be:	687b      	ldr	r3, [r7, #4]
 80166c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80166c2:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 80166c6:	687b      	ldr	r3, [r7, #4]
 80166c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80166ca:	68fb      	ldr	r3, [r7, #12]
 80166cc:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 80166d0:	461a      	mov	r2, r3
 80166d2:	2300      	movs	r3, #0
 80166d4:	6013      	str	r3, [r2, #0]
 80166d6:	68fb      	ldr	r3, [r7, #12]
 80166d8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80166dc:	4619      	mov	r1, r3
 80166de:	68fb      	ldr	r3, [r7, #12]
 80166e0:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80166e4:	461a      	mov	r2, r3
 80166e6:	680b      	ldr	r3, [r1, #0]
 80166e8:	6013      	str	r3, [r2, #0]
 80166ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80166ec:	2b01      	cmp	r3, #1
 80166ee:	d10c      	bne.n	801670a <USB_DevInit+0xd2>
 80166f0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80166f2:	2b00      	cmp	r3, #0
 80166f4:	d104      	bne.n	8016700 <USB_DevInit+0xc8>
 80166f6:	2100      	movs	r1, #0
 80166f8:	6878      	ldr	r0, [r7, #4]
 80166fa:	f000 f965 	bl	80169c8 <USB_SetDevSpeed>
 80166fe:	e008      	b.n	8016712 <USB_DevInit+0xda>
 8016700:	2101      	movs	r1, #1
 8016702:	6878      	ldr	r0, [r7, #4]
 8016704:	f000 f960 	bl	80169c8 <USB_SetDevSpeed>
 8016708:	e003      	b.n	8016712 <USB_DevInit+0xda>
 801670a:	2103      	movs	r1, #3
 801670c:	6878      	ldr	r0, [r7, #4]
 801670e:	f000 f95b 	bl	80169c8 <USB_SetDevSpeed>
 8016712:	2110      	movs	r1, #16
 8016714:	6878      	ldr	r0, [r7, #4]
 8016716:	f000 f8f3 	bl	8016900 <USB_FlushTxFifo>
 801671a:	4603      	mov	r3, r0
 801671c:	2b00      	cmp	r3, #0
 801671e:	d001      	beq.n	8016724 <USB_DevInit+0xec>
 8016720:	2301      	movs	r3, #1
 8016722:	75fb      	strb	r3, [r7, #23]
 8016724:	6878      	ldr	r0, [r7, #4]
 8016726:	f000 f91f 	bl	8016968 <USB_FlushRxFifo>
 801672a:	4603      	mov	r3, r0
 801672c:	2b00      	cmp	r3, #0
 801672e:	d001      	beq.n	8016734 <USB_DevInit+0xfc>
 8016730:	2301      	movs	r3, #1
 8016732:	75fb      	strb	r3, [r7, #23]
 8016734:	68fb      	ldr	r3, [r7, #12]
 8016736:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801673a:	461a      	mov	r2, r3
 801673c:	2300      	movs	r3, #0
 801673e:	6113      	str	r3, [r2, #16]
 8016740:	68fb      	ldr	r3, [r7, #12]
 8016742:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016746:	461a      	mov	r2, r3
 8016748:	2300      	movs	r3, #0
 801674a:	6153      	str	r3, [r2, #20]
 801674c:	68fb      	ldr	r3, [r7, #12]
 801674e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016752:	461a      	mov	r2, r3
 8016754:	2300      	movs	r3, #0
 8016756:	61d3      	str	r3, [r2, #28]
 8016758:	2300      	movs	r3, #0
 801675a:	613b      	str	r3, [r7, #16]
 801675c:	e043      	b.n	80167e6 <USB_DevInit+0x1ae>
 801675e:	693b      	ldr	r3, [r7, #16]
 8016760:	015a      	lsls	r2, r3, #5
 8016762:	68fb      	ldr	r3, [r7, #12]
 8016764:	4413      	add	r3, r2
 8016766:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801676a:	681b      	ldr	r3, [r3, #0]
 801676c:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8016770:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8016774:	d118      	bne.n	80167a8 <USB_DevInit+0x170>
 8016776:	693b      	ldr	r3, [r7, #16]
 8016778:	2b00      	cmp	r3, #0
 801677a:	d10a      	bne.n	8016792 <USB_DevInit+0x15a>
 801677c:	693b      	ldr	r3, [r7, #16]
 801677e:	015a      	lsls	r2, r3, #5
 8016780:	68fb      	ldr	r3, [r7, #12]
 8016782:	4413      	add	r3, r2
 8016784:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016788:	461a      	mov	r2, r3
 801678a:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 801678e:	6013      	str	r3, [r2, #0]
 8016790:	e013      	b.n	80167ba <USB_DevInit+0x182>
 8016792:	693b      	ldr	r3, [r7, #16]
 8016794:	015a      	lsls	r2, r3, #5
 8016796:	68fb      	ldr	r3, [r7, #12]
 8016798:	4413      	add	r3, r2
 801679a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801679e:	461a      	mov	r2, r3
 80167a0:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80167a4:	6013      	str	r3, [r2, #0]
 80167a6:	e008      	b.n	80167ba <USB_DevInit+0x182>
 80167a8:	693b      	ldr	r3, [r7, #16]
 80167aa:	015a      	lsls	r2, r3, #5
 80167ac:	68fb      	ldr	r3, [r7, #12]
 80167ae:	4413      	add	r3, r2
 80167b0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80167b4:	461a      	mov	r2, r3
 80167b6:	2300      	movs	r3, #0
 80167b8:	6013      	str	r3, [r2, #0]
 80167ba:	693b      	ldr	r3, [r7, #16]
 80167bc:	015a      	lsls	r2, r3, #5
 80167be:	68fb      	ldr	r3, [r7, #12]
 80167c0:	4413      	add	r3, r2
 80167c2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80167c6:	461a      	mov	r2, r3
 80167c8:	2300      	movs	r3, #0
 80167ca:	6113      	str	r3, [r2, #16]
 80167cc:	693b      	ldr	r3, [r7, #16]
 80167ce:	015a      	lsls	r2, r3, #5
 80167d0:	68fb      	ldr	r3, [r7, #12]
 80167d2:	4413      	add	r3, r2
 80167d4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80167d8:	461a      	mov	r2, r3
 80167da:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 80167de:	6093      	str	r3, [r2, #8]
 80167e0:	693b      	ldr	r3, [r7, #16]
 80167e2:	3301      	adds	r3, #1
 80167e4:	613b      	str	r3, [r7, #16]
 80167e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80167e8:	693a      	ldr	r2, [r7, #16]
 80167ea:	429a      	cmp	r2, r3
 80167ec:	d3b7      	bcc.n	801675e <USB_DevInit+0x126>
 80167ee:	2300      	movs	r3, #0
 80167f0:	613b      	str	r3, [r7, #16]
 80167f2:	e043      	b.n	801687c <USB_DevInit+0x244>
 80167f4:	693b      	ldr	r3, [r7, #16]
 80167f6:	015a      	lsls	r2, r3, #5
 80167f8:	68fb      	ldr	r3, [r7, #12]
 80167fa:	4413      	add	r3, r2
 80167fc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016800:	681b      	ldr	r3, [r3, #0]
 8016802:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8016806:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 801680a:	d118      	bne.n	801683e <USB_DevInit+0x206>
 801680c:	693b      	ldr	r3, [r7, #16]
 801680e:	2b00      	cmp	r3, #0
 8016810:	d10a      	bne.n	8016828 <USB_DevInit+0x1f0>
 8016812:	693b      	ldr	r3, [r7, #16]
 8016814:	015a      	lsls	r2, r3, #5
 8016816:	68fb      	ldr	r3, [r7, #12]
 8016818:	4413      	add	r3, r2
 801681a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801681e:	461a      	mov	r2, r3
 8016820:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 8016824:	6013      	str	r3, [r2, #0]
 8016826:	e013      	b.n	8016850 <USB_DevInit+0x218>
 8016828:	693b      	ldr	r3, [r7, #16]
 801682a:	015a      	lsls	r2, r3, #5
 801682c:	68fb      	ldr	r3, [r7, #12]
 801682e:	4413      	add	r3, r2
 8016830:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016834:	461a      	mov	r2, r3
 8016836:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 801683a:	6013      	str	r3, [r2, #0]
 801683c:	e008      	b.n	8016850 <USB_DevInit+0x218>
 801683e:	693b      	ldr	r3, [r7, #16]
 8016840:	015a      	lsls	r2, r3, #5
 8016842:	68fb      	ldr	r3, [r7, #12]
 8016844:	4413      	add	r3, r2
 8016846:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801684a:	461a      	mov	r2, r3
 801684c:	2300      	movs	r3, #0
 801684e:	6013      	str	r3, [r2, #0]
 8016850:	693b      	ldr	r3, [r7, #16]
 8016852:	015a      	lsls	r2, r3, #5
 8016854:	68fb      	ldr	r3, [r7, #12]
 8016856:	4413      	add	r3, r2
 8016858:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801685c:	461a      	mov	r2, r3
 801685e:	2300      	movs	r3, #0
 8016860:	6113      	str	r3, [r2, #16]
 8016862:	693b      	ldr	r3, [r7, #16]
 8016864:	015a      	lsls	r2, r3, #5
 8016866:	68fb      	ldr	r3, [r7, #12]
 8016868:	4413      	add	r3, r2
 801686a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801686e:	461a      	mov	r2, r3
 8016870:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
 8016874:	6093      	str	r3, [r2, #8]
 8016876:	693b      	ldr	r3, [r7, #16]
 8016878:	3301      	adds	r3, #1
 801687a:	613b      	str	r3, [r7, #16]
 801687c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801687e:	693a      	ldr	r2, [r7, #16]
 8016880:	429a      	cmp	r2, r3
 8016882:	d3b7      	bcc.n	80167f4 <USB_DevInit+0x1bc>
 8016884:	68fb      	ldr	r3, [r7, #12]
 8016886:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801688a:	691b      	ldr	r3, [r3, #16]
 801688c:	68fa      	ldr	r2, [r7, #12]
 801688e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8016892:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8016896:	6113      	str	r3, [r2, #16]
 8016898:	687b      	ldr	r3, [r7, #4]
 801689a:	2200      	movs	r2, #0
 801689c:	619a      	str	r2, [r3, #24]
 801689e:	687b      	ldr	r3, [r7, #4]
 80168a0:	f06f 4280 	mvn.w	r2, #1073741824	@ 0x40000000
 80168a4:	615a      	str	r2, [r3, #20]
 80168a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80168a8:	2b00      	cmp	r3, #0
 80168aa:	d105      	bne.n	80168b8 <USB_DevInit+0x280>
 80168ac:	687b      	ldr	r3, [r7, #4]
 80168ae:	699b      	ldr	r3, [r3, #24]
 80168b0:	f043 0210 	orr.w	r2, r3, #16
 80168b4:	687b      	ldr	r3, [r7, #4]
 80168b6:	619a      	str	r2, [r3, #24]
 80168b8:	687b      	ldr	r3, [r7, #4]
 80168ba:	699a      	ldr	r2, [r3, #24]
 80168bc:	4b0f      	ldr	r3, [pc, #60]	@ (80168fc <USB_DevInit+0x2c4>)
 80168be:	4313      	orrs	r3, r2
 80168c0:	687a      	ldr	r2, [r7, #4]
 80168c2:	6193      	str	r3, [r2, #24]
 80168c4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80168c6:	2b00      	cmp	r3, #0
 80168c8:	d005      	beq.n	80168d6 <USB_DevInit+0x29e>
 80168ca:	687b      	ldr	r3, [r7, #4]
 80168cc:	699b      	ldr	r3, [r3, #24]
 80168ce:	f043 0208 	orr.w	r2, r3, #8
 80168d2:	687b      	ldr	r3, [r7, #4]
 80168d4:	619a      	str	r2, [r3, #24]
 80168d6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 80168d8:	2b01      	cmp	r3, #1
 80168da:	d107      	bne.n	80168ec <USB_DevInit+0x2b4>
 80168dc:	687b      	ldr	r3, [r7, #4]
 80168de:	699b      	ldr	r3, [r3, #24]
 80168e0:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80168e4:	f043 0304 	orr.w	r3, r3, #4
 80168e8:	687a      	ldr	r2, [r7, #4]
 80168ea:	6193      	str	r3, [r2, #24]
 80168ec:	7dfb      	ldrb	r3, [r7, #23]
 80168ee:	4618      	mov	r0, r3
 80168f0:	3718      	adds	r7, #24
 80168f2:	46bd      	mov	sp, r7
 80168f4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80168f8:	b004      	add	sp, #16
 80168fa:	4770      	bx	lr
 80168fc:	803c3800 	.word	0x803c3800

08016900 <USB_FlushTxFifo>:
 8016900:	b480      	push	{r7}
 8016902:	b085      	sub	sp, #20
 8016904:	af00      	add	r7, sp, #0
 8016906:	6078      	str	r0, [r7, #4]
 8016908:	6039      	str	r1, [r7, #0]
 801690a:	2300      	movs	r3, #0
 801690c:	60fb      	str	r3, [r7, #12]
 801690e:	68fb      	ldr	r3, [r7, #12]
 8016910:	3301      	adds	r3, #1
 8016912:	60fb      	str	r3, [r7, #12]
 8016914:	68fb      	ldr	r3, [r7, #12]
 8016916:	4a13      	ldr	r2, [pc, #76]	@ (8016964 <USB_FlushTxFifo+0x64>)
 8016918:	4293      	cmp	r3, r2
 801691a:	d901      	bls.n	8016920 <USB_FlushTxFifo+0x20>
 801691c:	2303      	movs	r3, #3
 801691e:	e01b      	b.n	8016958 <USB_FlushTxFifo+0x58>
 8016920:	687b      	ldr	r3, [r7, #4]
 8016922:	691b      	ldr	r3, [r3, #16]
 8016924:	2b00      	cmp	r3, #0
 8016926:	daf2      	bge.n	801690e <USB_FlushTxFifo+0xe>
 8016928:	2300      	movs	r3, #0
 801692a:	60fb      	str	r3, [r7, #12]
 801692c:	683b      	ldr	r3, [r7, #0]
 801692e:	019b      	lsls	r3, r3, #6
 8016930:	f043 0220 	orr.w	r2, r3, #32
 8016934:	687b      	ldr	r3, [r7, #4]
 8016936:	611a      	str	r2, [r3, #16]
 8016938:	68fb      	ldr	r3, [r7, #12]
 801693a:	3301      	adds	r3, #1
 801693c:	60fb      	str	r3, [r7, #12]
 801693e:	68fb      	ldr	r3, [r7, #12]
 8016940:	4a08      	ldr	r2, [pc, #32]	@ (8016964 <USB_FlushTxFifo+0x64>)
 8016942:	4293      	cmp	r3, r2
 8016944:	d901      	bls.n	801694a <USB_FlushTxFifo+0x4a>
 8016946:	2303      	movs	r3, #3
 8016948:	e006      	b.n	8016958 <USB_FlushTxFifo+0x58>
 801694a:	687b      	ldr	r3, [r7, #4]
 801694c:	691b      	ldr	r3, [r3, #16]
 801694e:	f003 0320 	and.w	r3, r3, #32
 8016952:	2b20      	cmp	r3, #32
 8016954:	d0f0      	beq.n	8016938 <USB_FlushTxFifo+0x38>
 8016956:	2300      	movs	r3, #0
 8016958:	4618      	mov	r0, r3
 801695a:	3714      	adds	r7, #20
 801695c:	46bd      	mov	sp, r7
 801695e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016962:	4770      	bx	lr
 8016964:	00030d40 	.word	0x00030d40

08016968 <USB_FlushRxFifo>:
 8016968:	b480      	push	{r7}
 801696a:	b085      	sub	sp, #20
 801696c:	af00      	add	r7, sp, #0
 801696e:	6078      	str	r0, [r7, #4]
 8016970:	2300      	movs	r3, #0
 8016972:	60fb      	str	r3, [r7, #12]
 8016974:	68fb      	ldr	r3, [r7, #12]
 8016976:	3301      	adds	r3, #1
 8016978:	60fb      	str	r3, [r7, #12]
 801697a:	68fb      	ldr	r3, [r7, #12]
 801697c:	4a11      	ldr	r2, [pc, #68]	@ (80169c4 <USB_FlushRxFifo+0x5c>)
 801697e:	4293      	cmp	r3, r2
 8016980:	d901      	bls.n	8016986 <USB_FlushRxFifo+0x1e>
 8016982:	2303      	movs	r3, #3
 8016984:	e018      	b.n	80169b8 <USB_FlushRxFifo+0x50>
 8016986:	687b      	ldr	r3, [r7, #4]
 8016988:	691b      	ldr	r3, [r3, #16]
 801698a:	2b00      	cmp	r3, #0
 801698c:	daf2      	bge.n	8016974 <USB_FlushRxFifo+0xc>
 801698e:	2300      	movs	r3, #0
 8016990:	60fb      	str	r3, [r7, #12]
 8016992:	687b      	ldr	r3, [r7, #4]
 8016994:	2210      	movs	r2, #16
 8016996:	611a      	str	r2, [r3, #16]
 8016998:	68fb      	ldr	r3, [r7, #12]
 801699a:	3301      	adds	r3, #1
 801699c:	60fb      	str	r3, [r7, #12]
 801699e:	68fb      	ldr	r3, [r7, #12]
 80169a0:	4a08      	ldr	r2, [pc, #32]	@ (80169c4 <USB_FlushRxFifo+0x5c>)
 80169a2:	4293      	cmp	r3, r2
 80169a4:	d901      	bls.n	80169aa <USB_FlushRxFifo+0x42>
 80169a6:	2303      	movs	r3, #3
 80169a8:	e006      	b.n	80169b8 <USB_FlushRxFifo+0x50>
 80169aa:	687b      	ldr	r3, [r7, #4]
 80169ac:	691b      	ldr	r3, [r3, #16]
 80169ae:	f003 0310 	and.w	r3, r3, #16
 80169b2:	2b10      	cmp	r3, #16
 80169b4:	d0f0      	beq.n	8016998 <USB_FlushRxFifo+0x30>
 80169b6:	2300      	movs	r3, #0
 80169b8:	4618      	mov	r0, r3
 80169ba:	3714      	adds	r7, #20
 80169bc:	46bd      	mov	sp, r7
 80169be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80169c2:	4770      	bx	lr
 80169c4:	00030d40 	.word	0x00030d40

080169c8 <USB_SetDevSpeed>:
 80169c8:	b480      	push	{r7}
 80169ca:	b085      	sub	sp, #20
 80169cc:	af00      	add	r7, sp, #0
 80169ce:	6078      	str	r0, [r7, #4]
 80169d0:	460b      	mov	r3, r1
 80169d2:	70fb      	strb	r3, [r7, #3]
 80169d4:	687b      	ldr	r3, [r7, #4]
 80169d6:	60fb      	str	r3, [r7, #12]
 80169d8:	68fb      	ldr	r3, [r7, #12]
 80169da:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80169de:	681a      	ldr	r2, [r3, #0]
 80169e0:	78fb      	ldrb	r3, [r7, #3]
 80169e2:	68f9      	ldr	r1, [r7, #12]
 80169e4:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80169e8:	4313      	orrs	r3, r2
 80169ea:	600b      	str	r3, [r1, #0]
 80169ec:	2300      	movs	r3, #0
 80169ee:	4618      	mov	r0, r3
 80169f0:	3714      	adds	r7, #20
 80169f2:	46bd      	mov	sp, r7
 80169f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80169f8:	4770      	bx	lr

080169fa <USB_GetDevSpeed>:
 80169fa:	b480      	push	{r7}
 80169fc:	b087      	sub	sp, #28
 80169fe:	af00      	add	r7, sp, #0
 8016a00:	6078      	str	r0, [r7, #4]
 8016a02:	687b      	ldr	r3, [r7, #4]
 8016a04:	613b      	str	r3, [r7, #16]
 8016a06:	693b      	ldr	r3, [r7, #16]
 8016a08:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016a0c:	689b      	ldr	r3, [r3, #8]
 8016a0e:	f003 0306 	and.w	r3, r3, #6
 8016a12:	60fb      	str	r3, [r7, #12]
 8016a14:	68fb      	ldr	r3, [r7, #12]
 8016a16:	2b00      	cmp	r3, #0
 8016a18:	d102      	bne.n	8016a20 <USB_GetDevSpeed+0x26>
 8016a1a:	2300      	movs	r3, #0
 8016a1c:	75fb      	strb	r3, [r7, #23]
 8016a1e:	e00a      	b.n	8016a36 <USB_GetDevSpeed+0x3c>
 8016a20:	68fb      	ldr	r3, [r7, #12]
 8016a22:	2b02      	cmp	r3, #2
 8016a24:	d002      	beq.n	8016a2c <USB_GetDevSpeed+0x32>
 8016a26:	68fb      	ldr	r3, [r7, #12]
 8016a28:	2b06      	cmp	r3, #6
 8016a2a:	d102      	bne.n	8016a32 <USB_GetDevSpeed+0x38>
 8016a2c:	2302      	movs	r3, #2
 8016a2e:	75fb      	strb	r3, [r7, #23]
 8016a30:	e001      	b.n	8016a36 <USB_GetDevSpeed+0x3c>
 8016a32:	230f      	movs	r3, #15
 8016a34:	75fb      	strb	r3, [r7, #23]
 8016a36:	7dfb      	ldrb	r3, [r7, #23]
 8016a38:	4618      	mov	r0, r3
 8016a3a:	371c      	adds	r7, #28
 8016a3c:	46bd      	mov	sp, r7
 8016a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016a42:	4770      	bx	lr

08016a44 <USB_ActivateEndpoint>:
 8016a44:	b480      	push	{r7}
 8016a46:	b085      	sub	sp, #20
 8016a48:	af00      	add	r7, sp, #0
 8016a4a:	6078      	str	r0, [r7, #4]
 8016a4c:	6039      	str	r1, [r7, #0]
 8016a4e:	687b      	ldr	r3, [r7, #4]
 8016a50:	60fb      	str	r3, [r7, #12]
 8016a52:	683b      	ldr	r3, [r7, #0]
 8016a54:	781b      	ldrb	r3, [r3, #0]
 8016a56:	60bb      	str	r3, [r7, #8]
 8016a58:	683b      	ldr	r3, [r7, #0]
 8016a5a:	785b      	ldrb	r3, [r3, #1]
 8016a5c:	2b01      	cmp	r3, #1
 8016a5e:	d13a      	bne.n	8016ad6 <USB_ActivateEndpoint+0x92>
 8016a60:	68fb      	ldr	r3, [r7, #12]
 8016a62:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016a66:	69da      	ldr	r2, [r3, #28]
 8016a68:	683b      	ldr	r3, [r7, #0]
 8016a6a:	781b      	ldrb	r3, [r3, #0]
 8016a6c:	f003 030f 	and.w	r3, r3, #15
 8016a70:	2101      	movs	r1, #1
 8016a72:	fa01 f303 	lsl.w	r3, r1, r3
 8016a76:	b29b      	uxth	r3, r3
 8016a78:	68f9      	ldr	r1, [r7, #12]
 8016a7a:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016a7e:	4313      	orrs	r3, r2
 8016a80:	61cb      	str	r3, [r1, #28]
 8016a82:	68bb      	ldr	r3, [r7, #8]
 8016a84:	015a      	lsls	r2, r3, #5
 8016a86:	68fb      	ldr	r3, [r7, #12]
 8016a88:	4413      	add	r3, r2
 8016a8a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016a8e:	681b      	ldr	r3, [r3, #0]
 8016a90:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8016a94:	2b00      	cmp	r3, #0
 8016a96:	d155      	bne.n	8016b44 <USB_ActivateEndpoint+0x100>
 8016a98:	68bb      	ldr	r3, [r7, #8]
 8016a9a:	015a      	lsls	r2, r3, #5
 8016a9c:	68fb      	ldr	r3, [r7, #12]
 8016a9e:	4413      	add	r3, r2
 8016aa0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016aa4:	681a      	ldr	r2, [r3, #0]
 8016aa6:	683b      	ldr	r3, [r7, #0]
 8016aa8:	68db      	ldr	r3, [r3, #12]
 8016aaa:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8016aae:	683b      	ldr	r3, [r7, #0]
 8016ab0:	791b      	ldrb	r3, [r3, #4]
 8016ab2:	049b      	lsls	r3, r3, #18
 8016ab4:	4319      	orrs	r1, r3
 8016ab6:	68bb      	ldr	r3, [r7, #8]
 8016ab8:	059b      	lsls	r3, r3, #22
 8016aba:	430b      	orrs	r3, r1
 8016abc:	4313      	orrs	r3, r2
 8016abe:	68ba      	ldr	r2, [r7, #8]
 8016ac0:	0151      	lsls	r1, r2, #5
 8016ac2:	68fa      	ldr	r2, [r7, #12]
 8016ac4:	440a      	add	r2, r1
 8016ac6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016aca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8016ace:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8016ad2:	6013      	str	r3, [r2, #0]
 8016ad4:	e036      	b.n	8016b44 <USB_ActivateEndpoint+0x100>
 8016ad6:	68fb      	ldr	r3, [r7, #12]
 8016ad8:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016adc:	69da      	ldr	r2, [r3, #28]
 8016ade:	683b      	ldr	r3, [r7, #0]
 8016ae0:	781b      	ldrb	r3, [r3, #0]
 8016ae2:	f003 030f 	and.w	r3, r3, #15
 8016ae6:	2101      	movs	r1, #1
 8016ae8:	fa01 f303 	lsl.w	r3, r1, r3
 8016aec:	041b      	lsls	r3, r3, #16
 8016aee:	68f9      	ldr	r1, [r7, #12]
 8016af0:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016af4:	4313      	orrs	r3, r2
 8016af6:	61cb      	str	r3, [r1, #28]
 8016af8:	68bb      	ldr	r3, [r7, #8]
 8016afa:	015a      	lsls	r2, r3, #5
 8016afc:	68fb      	ldr	r3, [r7, #12]
 8016afe:	4413      	add	r3, r2
 8016b00:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016b04:	681b      	ldr	r3, [r3, #0]
 8016b06:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8016b0a:	2b00      	cmp	r3, #0
 8016b0c:	d11a      	bne.n	8016b44 <USB_ActivateEndpoint+0x100>
 8016b0e:	68bb      	ldr	r3, [r7, #8]
 8016b10:	015a      	lsls	r2, r3, #5
 8016b12:	68fb      	ldr	r3, [r7, #12]
 8016b14:	4413      	add	r3, r2
 8016b16:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016b1a:	681a      	ldr	r2, [r3, #0]
 8016b1c:	683b      	ldr	r3, [r7, #0]
 8016b1e:	68db      	ldr	r3, [r3, #12]
 8016b20:	f3c3 010a 	ubfx	r1, r3, #0, #11
 8016b24:	683b      	ldr	r3, [r7, #0]
 8016b26:	791b      	ldrb	r3, [r3, #4]
 8016b28:	049b      	lsls	r3, r3, #18
 8016b2a:	430b      	orrs	r3, r1
 8016b2c:	4313      	orrs	r3, r2
 8016b2e:	68ba      	ldr	r2, [r7, #8]
 8016b30:	0151      	lsls	r1, r2, #5
 8016b32:	68fa      	ldr	r2, [r7, #12]
 8016b34:	440a      	add	r2, r1
 8016b36:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8016b3a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8016b3e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8016b42:	6013      	str	r3, [r2, #0]
 8016b44:	2300      	movs	r3, #0
 8016b46:	4618      	mov	r0, r3
 8016b48:	3714      	adds	r7, #20
 8016b4a:	46bd      	mov	sp, r7
 8016b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016b50:	4770      	bx	lr
	...

08016b54 <USB_DeactivateEndpoint>:
 8016b54:	b480      	push	{r7}
 8016b56:	b085      	sub	sp, #20
 8016b58:	af00      	add	r7, sp, #0
 8016b5a:	6078      	str	r0, [r7, #4]
 8016b5c:	6039      	str	r1, [r7, #0]
 8016b5e:	687b      	ldr	r3, [r7, #4]
 8016b60:	60fb      	str	r3, [r7, #12]
 8016b62:	683b      	ldr	r3, [r7, #0]
 8016b64:	781b      	ldrb	r3, [r3, #0]
 8016b66:	60bb      	str	r3, [r7, #8]
 8016b68:	683b      	ldr	r3, [r7, #0]
 8016b6a:	785b      	ldrb	r3, [r3, #1]
 8016b6c:	2b01      	cmp	r3, #1
 8016b6e:	d161      	bne.n	8016c34 <USB_DeactivateEndpoint+0xe0>
 8016b70:	68bb      	ldr	r3, [r7, #8]
 8016b72:	015a      	lsls	r2, r3, #5
 8016b74:	68fb      	ldr	r3, [r7, #12]
 8016b76:	4413      	add	r3, r2
 8016b78:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016b7c:	681b      	ldr	r3, [r3, #0]
 8016b7e:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8016b82:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8016b86:	d11f      	bne.n	8016bc8 <USB_DeactivateEndpoint+0x74>
 8016b88:	68bb      	ldr	r3, [r7, #8]
 8016b8a:	015a      	lsls	r2, r3, #5
 8016b8c:	68fb      	ldr	r3, [r7, #12]
 8016b8e:	4413      	add	r3, r2
 8016b90:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016b94:	681b      	ldr	r3, [r3, #0]
 8016b96:	68ba      	ldr	r2, [r7, #8]
 8016b98:	0151      	lsls	r1, r2, #5
 8016b9a:	68fa      	ldr	r2, [r7, #12]
 8016b9c:	440a      	add	r2, r1
 8016b9e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016ba2:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8016ba6:	6013      	str	r3, [r2, #0]
 8016ba8:	68bb      	ldr	r3, [r7, #8]
 8016baa:	015a      	lsls	r2, r3, #5
 8016bac:	68fb      	ldr	r3, [r7, #12]
 8016bae:	4413      	add	r3, r2
 8016bb0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016bb4:	681b      	ldr	r3, [r3, #0]
 8016bb6:	68ba      	ldr	r2, [r7, #8]
 8016bb8:	0151      	lsls	r1, r2, #5
 8016bba:	68fa      	ldr	r2, [r7, #12]
 8016bbc:	440a      	add	r2, r1
 8016bbe:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016bc2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8016bc6:	6013      	str	r3, [r2, #0]
 8016bc8:	68fb      	ldr	r3, [r7, #12]
 8016bca:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016bce:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8016bd0:	683b      	ldr	r3, [r7, #0]
 8016bd2:	781b      	ldrb	r3, [r3, #0]
 8016bd4:	f003 030f 	and.w	r3, r3, #15
 8016bd8:	2101      	movs	r1, #1
 8016bda:	fa01 f303 	lsl.w	r3, r1, r3
 8016bde:	b29b      	uxth	r3, r3
 8016be0:	43db      	mvns	r3, r3
 8016be2:	68f9      	ldr	r1, [r7, #12]
 8016be4:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016be8:	4013      	ands	r3, r2
 8016bea:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8016bec:	68fb      	ldr	r3, [r7, #12]
 8016bee:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016bf2:	69da      	ldr	r2, [r3, #28]
 8016bf4:	683b      	ldr	r3, [r7, #0]
 8016bf6:	781b      	ldrb	r3, [r3, #0]
 8016bf8:	f003 030f 	and.w	r3, r3, #15
 8016bfc:	2101      	movs	r1, #1
 8016bfe:	fa01 f303 	lsl.w	r3, r1, r3
 8016c02:	b29b      	uxth	r3, r3
 8016c04:	43db      	mvns	r3, r3
 8016c06:	68f9      	ldr	r1, [r7, #12]
 8016c08:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016c0c:	4013      	ands	r3, r2
 8016c0e:	61cb      	str	r3, [r1, #28]
 8016c10:	68bb      	ldr	r3, [r7, #8]
 8016c12:	015a      	lsls	r2, r3, #5
 8016c14:	68fb      	ldr	r3, [r7, #12]
 8016c16:	4413      	add	r3, r2
 8016c18:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016c1c:	681a      	ldr	r2, [r3, #0]
 8016c1e:	68bb      	ldr	r3, [r7, #8]
 8016c20:	0159      	lsls	r1, r3, #5
 8016c22:	68fb      	ldr	r3, [r7, #12]
 8016c24:	440b      	add	r3, r1
 8016c26:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016c2a:	4619      	mov	r1, r3
 8016c2c:	4b35      	ldr	r3, [pc, #212]	@ (8016d04 <USB_DeactivateEndpoint+0x1b0>)
 8016c2e:	4013      	ands	r3, r2
 8016c30:	600b      	str	r3, [r1, #0]
 8016c32:	e060      	b.n	8016cf6 <USB_DeactivateEndpoint+0x1a2>
 8016c34:	68bb      	ldr	r3, [r7, #8]
 8016c36:	015a      	lsls	r2, r3, #5
 8016c38:	68fb      	ldr	r3, [r7, #12]
 8016c3a:	4413      	add	r3, r2
 8016c3c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016c40:	681b      	ldr	r3, [r3, #0]
 8016c42:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8016c46:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8016c4a:	d11f      	bne.n	8016c8c <USB_DeactivateEndpoint+0x138>
 8016c4c:	68bb      	ldr	r3, [r7, #8]
 8016c4e:	015a      	lsls	r2, r3, #5
 8016c50:	68fb      	ldr	r3, [r7, #12]
 8016c52:	4413      	add	r3, r2
 8016c54:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016c58:	681b      	ldr	r3, [r3, #0]
 8016c5a:	68ba      	ldr	r2, [r7, #8]
 8016c5c:	0151      	lsls	r1, r2, #5
 8016c5e:	68fa      	ldr	r2, [r7, #12]
 8016c60:	440a      	add	r2, r1
 8016c62:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8016c66:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8016c6a:	6013      	str	r3, [r2, #0]
 8016c6c:	68bb      	ldr	r3, [r7, #8]
 8016c6e:	015a      	lsls	r2, r3, #5
 8016c70:	68fb      	ldr	r3, [r7, #12]
 8016c72:	4413      	add	r3, r2
 8016c74:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016c78:	681b      	ldr	r3, [r3, #0]
 8016c7a:	68ba      	ldr	r2, [r7, #8]
 8016c7c:	0151      	lsls	r1, r2, #5
 8016c7e:	68fa      	ldr	r2, [r7, #12]
 8016c80:	440a      	add	r2, r1
 8016c82:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8016c86:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8016c8a:	6013      	str	r3, [r2, #0]
 8016c8c:	68fb      	ldr	r3, [r7, #12]
 8016c8e:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016c92:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8016c94:	683b      	ldr	r3, [r7, #0]
 8016c96:	781b      	ldrb	r3, [r3, #0]
 8016c98:	f003 030f 	and.w	r3, r3, #15
 8016c9c:	2101      	movs	r1, #1
 8016c9e:	fa01 f303 	lsl.w	r3, r1, r3
 8016ca2:	041b      	lsls	r3, r3, #16
 8016ca4:	43db      	mvns	r3, r3
 8016ca6:	68f9      	ldr	r1, [r7, #12]
 8016ca8:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016cac:	4013      	ands	r3, r2
 8016cae:	63cb      	str	r3, [r1, #60]	@ 0x3c
 8016cb0:	68fb      	ldr	r3, [r7, #12]
 8016cb2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016cb6:	69da      	ldr	r2, [r3, #28]
 8016cb8:	683b      	ldr	r3, [r7, #0]
 8016cba:	781b      	ldrb	r3, [r3, #0]
 8016cbc:	f003 030f 	and.w	r3, r3, #15
 8016cc0:	2101      	movs	r1, #1
 8016cc2:	fa01 f303 	lsl.w	r3, r1, r3
 8016cc6:	041b      	lsls	r3, r3, #16
 8016cc8:	43db      	mvns	r3, r3
 8016cca:	68f9      	ldr	r1, [r7, #12]
 8016ccc:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016cd0:	4013      	ands	r3, r2
 8016cd2:	61cb      	str	r3, [r1, #28]
 8016cd4:	68bb      	ldr	r3, [r7, #8]
 8016cd6:	015a      	lsls	r2, r3, #5
 8016cd8:	68fb      	ldr	r3, [r7, #12]
 8016cda:	4413      	add	r3, r2
 8016cdc:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016ce0:	681a      	ldr	r2, [r3, #0]
 8016ce2:	68bb      	ldr	r3, [r7, #8]
 8016ce4:	0159      	lsls	r1, r3, #5
 8016ce6:	68fb      	ldr	r3, [r7, #12]
 8016ce8:	440b      	add	r3, r1
 8016cea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016cee:	4619      	mov	r1, r3
 8016cf0:	4b05      	ldr	r3, [pc, #20]	@ (8016d08 <USB_DeactivateEndpoint+0x1b4>)
 8016cf2:	4013      	ands	r3, r2
 8016cf4:	600b      	str	r3, [r1, #0]
 8016cf6:	2300      	movs	r3, #0
 8016cf8:	4618      	mov	r0, r3
 8016cfa:	3714      	adds	r7, #20
 8016cfc:	46bd      	mov	sp, r7
 8016cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016d02:	4770      	bx	lr
 8016d04:	ec337800 	.word	0xec337800
 8016d08:	eff37800 	.word	0xeff37800

08016d0c <USB_EPStartXfer>:
 8016d0c:	b580      	push	{r7, lr}
 8016d0e:	b08a      	sub	sp, #40	@ 0x28
 8016d10:	af02      	add	r7, sp, #8
 8016d12:	60f8      	str	r0, [r7, #12]
 8016d14:	60b9      	str	r1, [r7, #8]
 8016d16:	4613      	mov	r3, r2
 8016d18:	71fb      	strb	r3, [r7, #7]
 8016d1a:	68fb      	ldr	r3, [r7, #12]
 8016d1c:	61fb      	str	r3, [r7, #28]
 8016d1e:	68bb      	ldr	r3, [r7, #8]
 8016d20:	781b      	ldrb	r3, [r3, #0]
 8016d22:	61bb      	str	r3, [r7, #24]
 8016d24:	68bb      	ldr	r3, [r7, #8]
 8016d26:	785b      	ldrb	r3, [r3, #1]
 8016d28:	2b01      	cmp	r3, #1
 8016d2a:	f040 815c 	bne.w	8016fe6 <USB_EPStartXfer+0x2da>
 8016d2e:	68bb      	ldr	r3, [r7, #8]
 8016d30:	699b      	ldr	r3, [r3, #24]
 8016d32:	2b00      	cmp	r3, #0
 8016d34:	d132      	bne.n	8016d9c <USB_EPStartXfer+0x90>
 8016d36:	69bb      	ldr	r3, [r7, #24]
 8016d38:	015a      	lsls	r2, r3, #5
 8016d3a:	69fb      	ldr	r3, [r7, #28]
 8016d3c:	4413      	add	r3, r2
 8016d3e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016d42:	691b      	ldr	r3, [r3, #16]
 8016d44:	69ba      	ldr	r2, [r7, #24]
 8016d46:	0151      	lsls	r1, r2, #5
 8016d48:	69fa      	ldr	r2, [r7, #28]
 8016d4a:	440a      	add	r2, r1
 8016d4c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016d50:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8016d54:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8016d58:	6113      	str	r3, [r2, #16]
 8016d5a:	69bb      	ldr	r3, [r7, #24]
 8016d5c:	015a      	lsls	r2, r3, #5
 8016d5e:	69fb      	ldr	r3, [r7, #28]
 8016d60:	4413      	add	r3, r2
 8016d62:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016d66:	691b      	ldr	r3, [r3, #16]
 8016d68:	69ba      	ldr	r2, [r7, #24]
 8016d6a:	0151      	lsls	r1, r2, #5
 8016d6c:	69fa      	ldr	r2, [r7, #28]
 8016d6e:	440a      	add	r2, r1
 8016d70:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016d74:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8016d78:	6113      	str	r3, [r2, #16]
 8016d7a:	69bb      	ldr	r3, [r7, #24]
 8016d7c:	015a      	lsls	r2, r3, #5
 8016d7e:	69fb      	ldr	r3, [r7, #28]
 8016d80:	4413      	add	r3, r2
 8016d82:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016d86:	691b      	ldr	r3, [r3, #16]
 8016d88:	69ba      	ldr	r2, [r7, #24]
 8016d8a:	0151      	lsls	r1, r2, #5
 8016d8c:	69fa      	ldr	r2, [r7, #28]
 8016d8e:	440a      	add	r2, r1
 8016d90:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016d94:	0cdb      	lsrs	r3, r3, #19
 8016d96:	04db      	lsls	r3, r3, #19
 8016d98:	6113      	str	r3, [r2, #16]
 8016d9a:	e074      	b.n	8016e86 <USB_EPStartXfer+0x17a>
 8016d9c:	69bb      	ldr	r3, [r7, #24]
 8016d9e:	015a      	lsls	r2, r3, #5
 8016da0:	69fb      	ldr	r3, [r7, #28]
 8016da2:	4413      	add	r3, r2
 8016da4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016da8:	691b      	ldr	r3, [r3, #16]
 8016daa:	69ba      	ldr	r2, [r7, #24]
 8016dac:	0151      	lsls	r1, r2, #5
 8016dae:	69fa      	ldr	r2, [r7, #28]
 8016db0:	440a      	add	r2, r1
 8016db2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016db6:	0cdb      	lsrs	r3, r3, #19
 8016db8:	04db      	lsls	r3, r3, #19
 8016dba:	6113      	str	r3, [r2, #16]
 8016dbc:	69bb      	ldr	r3, [r7, #24]
 8016dbe:	015a      	lsls	r2, r3, #5
 8016dc0:	69fb      	ldr	r3, [r7, #28]
 8016dc2:	4413      	add	r3, r2
 8016dc4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016dc8:	691b      	ldr	r3, [r3, #16]
 8016dca:	69ba      	ldr	r2, [r7, #24]
 8016dcc:	0151      	lsls	r1, r2, #5
 8016dce:	69fa      	ldr	r2, [r7, #28]
 8016dd0:	440a      	add	r2, r1
 8016dd2:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016dd6:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8016dda:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8016dde:	6113      	str	r3, [r2, #16]
 8016de0:	69bb      	ldr	r3, [r7, #24]
 8016de2:	015a      	lsls	r2, r3, #5
 8016de4:	69fb      	ldr	r3, [r7, #28]
 8016de6:	4413      	add	r3, r2
 8016de8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016dec:	691a      	ldr	r2, [r3, #16]
 8016dee:	68bb      	ldr	r3, [r7, #8]
 8016df0:	6999      	ldr	r1, [r3, #24]
 8016df2:	68bb      	ldr	r3, [r7, #8]
 8016df4:	68db      	ldr	r3, [r3, #12]
 8016df6:	440b      	add	r3, r1
 8016df8:	1e59      	subs	r1, r3, #1
 8016dfa:	68bb      	ldr	r3, [r7, #8]
 8016dfc:	68db      	ldr	r3, [r3, #12]
 8016dfe:	fbb1 f3f3 	udiv	r3, r1, r3
 8016e02:	04d9      	lsls	r1, r3, #19
 8016e04:	4b9d      	ldr	r3, [pc, #628]	@ (801707c <USB_EPStartXfer+0x370>)
 8016e06:	400b      	ands	r3, r1
 8016e08:	69b9      	ldr	r1, [r7, #24]
 8016e0a:	0148      	lsls	r0, r1, #5
 8016e0c:	69f9      	ldr	r1, [r7, #28]
 8016e0e:	4401      	add	r1, r0
 8016e10:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8016e14:	4313      	orrs	r3, r2
 8016e16:	610b      	str	r3, [r1, #16]
 8016e18:	69bb      	ldr	r3, [r7, #24]
 8016e1a:	015a      	lsls	r2, r3, #5
 8016e1c:	69fb      	ldr	r3, [r7, #28]
 8016e1e:	4413      	add	r3, r2
 8016e20:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016e24:	691a      	ldr	r2, [r3, #16]
 8016e26:	68bb      	ldr	r3, [r7, #8]
 8016e28:	699b      	ldr	r3, [r3, #24]
 8016e2a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8016e2e:	69b9      	ldr	r1, [r7, #24]
 8016e30:	0148      	lsls	r0, r1, #5
 8016e32:	69f9      	ldr	r1, [r7, #28]
 8016e34:	4401      	add	r1, r0
 8016e36:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 8016e3a:	4313      	orrs	r3, r2
 8016e3c:	610b      	str	r3, [r1, #16]
 8016e3e:	68bb      	ldr	r3, [r7, #8]
 8016e40:	791b      	ldrb	r3, [r3, #4]
 8016e42:	2b01      	cmp	r3, #1
 8016e44:	d11f      	bne.n	8016e86 <USB_EPStartXfer+0x17a>
 8016e46:	69bb      	ldr	r3, [r7, #24]
 8016e48:	015a      	lsls	r2, r3, #5
 8016e4a:	69fb      	ldr	r3, [r7, #28]
 8016e4c:	4413      	add	r3, r2
 8016e4e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016e52:	691b      	ldr	r3, [r3, #16]
 8016e54:	69ba      	ldr	r2, [r7, #24]
 8016e56:	0151      	lsls	r1, r2, #5
 8016e58:	69fa      	ldr	r2, [r7, #28]
 8016e5a:	440a      	add	r2, r1
 8016e5c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016e60:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 8016e64:	6113      	str	r3, [r2, #16]
 8016e66:	69bb      	ldr	r3, [r7, #24]
 8016e68:	015a      	lsls	r2, r3, #5
 8016e6a:	69fb      	ldr	r3, [r7, #28]
 8016e6c:	4413      	add	r3, r2
 8016e6e:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016e72:	691b      	ldr	r3, [r3, #16]
 8016e74:	69ba      	ldr	r2, [r7, #24]
 8016e76:	0151      	lsls	r1, r2, #5
 8016e78:	69fa      	ldr	r2, [r7, #28]
 8016e7a:	440a      	add	r2, r1
 8016e7c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016e80:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8016e84:	6113      	str	r3, [r2, #16]
 8016e86:	79fb      	ldrb	r3, [r7, #7]
 8016e88:	2b01      	cmp	r3, #1
 8016e8a:	d14b      	bne.n	8016f24 <USB_EPStartXfer+0x218>
 8016e8c:	68bb      	ldr	r3, [r7, #8]
 8016e8e:	695b      	ldr	r3, [r3, #20]
 8016e90:	2b00      	cmp	r3, #0
 8016e92:	d009      	beq.n	8016ea8 <USB_EPStartXfer+0x19c>
 8016e94:	69bb      	ldr	r3, [r7, #24]
 8016e96:	015a      	lsls	r2, r3, #5
 8016e98:	69fb      	ldr	r3, [r7, #28]
 8016e9a:	4413      	add	r3, r2
 8016e9c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016ea0:	461a      	mov	r2, r3
 8016ea2:	68bb      	ldr	r3, [r7, #8]
 8016ea4:	695b      	ldr	r3, [r3, #20]
 8016ea6:	6153      	str	r3, [r2, #20]
 8016ea8:	68bb      	ldr	r3, [r7, #8]
 8016eaa:	791b      	ldrb	r3, [r3, #4]
 8016eac:	2b01      	cmp	r3, #1
 8016eae:	d128      	bne.n	8016f02 <USB_EPStartXfer+0x1f6>
 8016eb0:	69fb      	ldr	r3, [r7, #28]
 8016eb2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016eb6:	689b      	ldr	r3, [r3, #8]
 8016eb8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016ebc:	2b00      	cmp	r3, #0
 8016ebe:	d110      	bne.n	8016ee2 <USB_EPStartXfer+0x1d6>
 8016ec0:	69bb      	ldr	r3, [r7, #24]
 8016ec2:	015a      	lsls	r2, r3, #5
 8016ec4:	69fb      	ldr	r3, [r7, #28]
 8016ec6:	4413      	add	r3, r2
 8016ec8:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016ecc:	681b      	ldr	r3, [r3, #0]
 8016ece:	69ba      	ldr	r2, [r7, #24]
 8016ed0:	0151      	lsls	r1, r2, #5
 8016ed2:	69fa      	ldr	r2, [r7, #28]
 8016ed4:	440a      	add	r2, r1
 8016ed6:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016eda:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8016ede:	6013      	str	r3, [r2, #0]
 8016ee0:	e00f      	b.n	8016f02 <USB_EPStartXfer+0x1f6>
 8016ee2:	69bb      	ldr	r3, [r7, #24]
 8016ee4:	015a      	lsls	r2, r3, #5
 8016ee6:	69fb      	ldr	r3, [r7, #28]
 8016ee8:	4413      	add	r3, r2
 8016eea:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016eee:	681b      	ldr	r3, [r3, #0]
 8016ef0:	69ba      	ldr	r2, [r7, #24]
 8016ef2:	0151      	lsls	r1, r2, #5
 8016ef4:	69fa      	ldr	r2, [r7, #28]
 8016ef6:	440a      	add	r2, r1
 8016ef8:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016efc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8016f00:	6013      	str	r3, [r2, #0]
 8016f02:	69bb      	ldr	r3, [r7, #24]
 8016f04:	015a      	lsls	r2, r3, #5
 8016f06:	69fb      	ldr	r3, [r7, #28]
 8016f08:	4413      	add	r3, r2
 8016f0a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016f0e:	681b      	ldr	r3, [r3, #0]
 8016f10:	69ba      	ldr	r2, [r7, #24]
 8016f12:	0151      	lsls	r1, r2, #5
 8016f14:	69fa      	ldr	r2, [r7, #28]
 8016f16:	440a      	add	r2, r1
 8016f18:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016f1c:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8016f20:	6013      	str	r3, [r2, #0]
 8016f22:	e133      	b.n	801718c <USB_EPStartXfer+0x480>
 8016f24:	69bb      	ldr	r3, [r7, #24]
 8016f26:	015a      	lsls	r2, r3, #5
 8016f28:	69fb      	ldr	r3, [r7, #28]
 8016f2a:	4413      	add	r3, r2
 8016f2c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016f30:	681b      	ldr	r3, [r3, #0]
 8016f32:	69ba      	ldr	r2, [r7, #24]
 8016f34:	0151      	lsls	r1, r2, #5
 8016f36:	69fa      	ldr	r2, [r7, #28]
 8016f38:	440a      	add	r2, r1
 8016f3a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016f3e:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8016f42:	6013      	str	r3, [r2, #0]
 8016f44:	68bb      	ldr	r3, [r7, #8]
 8016f46:	791b      	ldrb	r3, [r3, #4]
 8016f48:	2b01      	cmp	r3, #1
 8016f4a:	d015      	beq.n	8016f78 <USB_EPStartXfer+0x26c>
 8016f4c:	68bb      	ldr	r3, [r7, #8]
 8016f4e:	699b      	ldr	r3, [r3, #24]
 8016f50:	2b00      	cmp	r3, #0
 8016f52:	f000 811b 	beq.w	801718c <USB_EPStartXfer+0x480>
 8016f56:	69fb      	ldr	r3, [r7, #28]
 8016f58:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016f5c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8016f5e:	68bb      	ldr	r3, [r7, #8]
 8016f60:	781b      	ldrb	r3, [r3, #0]
 8016f62:	f003 030f 	and.w	r3, r3, #15
 8016f66:	2101      	movs	r1, #1
 8016f68:	fa01 f303 	lsl.w	r3, r1, r3
 8016f6c:	69f9      	ldr	r1, [r7, #28]
 8016f6e:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8016f72:	4313      	orrs	r3, r2
 8016f74:	634b      	str	r3, [r1, #52]	@ 0x34
 8016f76:	e109      	b.n	801718c <USB_EPStartXfer+0x480>
 8016f78:	69fb      	ldr	r3, [r7, #28]
 8016f7a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8016f7e:	689b      	ldr	r3, [r3, #8]
 8016f80:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8016f84:	2b00      	cmp	r3, #0
 8016f86:	d110      	bne.n	8016faa <USB_EPStartXfer+0x29e>
 8016f88:	69bb      	ldr	r3, [r7, #24]
 8016f8a:	015a      	lsls	r2, r3, #5
 8016f8c:	69fb      	ldr	r3, [r7, #28]
 8016f8e:	4413      	add	r3, r2
 8016f90:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016f94:	681b      	ldr	r3, [r3, #0]
 8016f96:	69ba      	ldr	r2, [r7, #24]
 8016f98:	0151      	lsls	r1, r2, #5
 8016f9a:	69fa      	ldr	r2, [r7, #28]
 8016f9c:	440a      	add	r2, r1
 8016f9e:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016fa2:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8016fa6:	6013      	str	r3, [r2, #0]
 8016fa8:	e00f      	b.n	8016fca <USB_EPStartXfer+0x2be>
 8016faa:	69bb      	ldr	r3, [r7, #24]
 8016fac:	015a      	lsls	r2, r3, #5
 8016fae:	69fb      	ldr	r3, [r7, #28]
 8016fb0:	4413      	add	r3, r2
 8016fb2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8016fb6:	681b      	ldr	r3, [r3, #0]
 8016fb8:	69ba      	ldr	r2, [r7, #24]
 8016fba:	0151      	lsls	r1, r2, #5
 8016fbc:	69fa      	ldr	r2, [r7, #28]
 8016fbe:	440a      	add	r2, r1
 8016fc0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8016fc4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8016fc8:	6013      	str	r3, [r2, #0]
 8016fca:	68bb      	ldr	r3, [r7, #8]
 8016fcc:	6919      	ldr	r1, [r3, #16]
 8016fce:	68bb      	ldr	r3, [r7, #8]
 8016fd0:	781a      	ldrb	r2, [r3, #0]
 8016fd2:	68bb      	ldr	r3, [r7, #8]
 8016fd4:	699b      	ldr	r3, [r3, #24]
 8016fd6:	b298      	uxth	r0, r3
 8016fd8:	79fb      	ldrb	r3, [r7, #7]
 8016fda:	9300      	str	r3, [sp, #0]
 8016fdc:	4603      	mov	r3, r0
 8016fde:	68f8      	ldr	r0, [r7, #12]
 8016fe0:	f000 fade 	bl	80175a0 <USB_WritePacket>
 8016fe4:	e0d2      	b.n	801718c <USB_EPStartXfer+0x480>
 8016fe6:	69bb      	ldr	r3, [r7, #24]
 8016fe8:	015a      	lsls	r2, r3, #5
 8016fea:	69fb      	ldr	r3, [r7, #28]
 8016fec:	4413      	add	r3, r2
 8016fee:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8016ff2:	691b      	ldr	r3, [r3, #16]
 8016ff4:	69ba      	ldr	r2, [r7, #24]
 8016ff6:	0151      	lsls	r1, r2, #5
 8016ff8:	69fa      	ldr	r2, [r7, #28]
 8016ffa:	440a      	add	r2, r1
 8016ffc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017000:	0cdb      	lsrs	r3, r3, #19
 8017002:	04db      	lsls	r3, r3, #19
 8017004:	6113      	str	r3, [r2, #16]
 8017006:	69bb      	ldr	r3, [r7, #24]
 8017008:	015a      	lsls	r2, r3, #5
 801700a:	69fb      	ldr	r3, [r7, #28]
 801700c:	4413      	add	r3, r2
 801700e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017012:	691b      	ldr	r3, [r3, #16]
 8017014:	69ba      	ldr	r2, [r7, #24]
 8017016:	0151      	lsls	r1, r2, #5
 8017018:	69fa      	ldr	r2, [r7, #28]
 801701a:	440a      	add	r2, r1
 801701c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017020:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8017024:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 8017028:	6113      	str	r3, [r2, #16]
 801702a:	68bb      	ldr	r3, [r7, #8]
 801702c:	699b      	ldr	r3, [r3, #24]
 801702e:	2b00      	cmp	r3, #0
 8017030:	d126      	bne.n	8017080 <USB_EPStartXfer+0x374>
 8017032:	69bb      	ldr	r3, [r7, #24]
 8017034:	015a      	lsls	r2, r3, #5
 8017036:	69fb      	ldr	r3, [r7, #28]
 8017038:	4413      	add	r3, r2
 801703a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801703e:	691a      	ldr	r2, [r3, #16]
 8017040:	68bb      	ldr	r3, [r7, #8]
 8017042:	68db      	ldr	r3, [r3, #12]
 8017044:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8017048:	69b9      	ldr	r1, [r7, #24]
 801704a:	0148      	lsls	r0, r1, #5
 801704c:	69f9      	ldr	r1, [r7, #28]
 801704e:	4401      	add	r1, r0
 8017050:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 8017054:	4313      	orrs	r3, r2
 8017056:	610b      	str	r3, [r1, #16]
 8017058:	69bb      	ldr	r3, [r7, #24]
 801705a:	015a      	lsls	r2, r3, #5
 801705c:	69fb      	ldr	r3, [r7, #28]
 801705e:	4413      	add	r3, r2
 8017060:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017064:	691b      	ldr	r3, [r3, #16]
 8017066:	69ba      	ldr	r2, [r7, #24]
 8017068:	0151      	lsls	r1, r2, #5
 801706a:	69fa      	ldr	r2, [r7, #28]
 801706c:	440a      	add	r2, r1
 801706e:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017072:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8017076:	6113      	str	r3, [r2, #16]
 8017078:	e03a      	b.n	80170f0 <USB_EPStartXfer+0x3e4>
 801707a:	bf00      	nop
 801707c:	1ff80000 	.word	0x1ff80000
 8017080:	68bb      	ldr	r3, [r7, #8]
 8017082:	699a      	ldr	r2, [r3, #24]
 8017084:	68bb      	ldr	r3, [r7, #8]
 8017086:	68db      	ldr	r3, [r3, #12]
 8017088:	4413      	add	r3, r2
 801708a:	1e5a      	subs	r2, r3, #1
 801708c:	68bb      	ldr	r3, [r7, #8]
 801708e:	68db      	ldr	r3, [r3, #12]
 8017090:	fbb2 f3f3 	udiv	r3, r2, r3
 8017094:	82fb      	strh	r3, [r7, #22]
 8017096:	68bb      	ldr	r3, [r7, #8]
 8017098:	68db      	ldr	r3, [r3, #12]
 801709a:	8afa      	ldrh	r2, [r7, #22]
 801709c:	fb03 f202 	mul.w	r2, r3, r2
 80170a0:	68bb      	ldr	r3, [r7, #8]
 80170a2:	61da      	str	r2, [r3, #28]
 80170a4:	69bb      	ldr	r3, [r7, #24]
 80170a6:	015a      	lsls	r2, r3, #5
 80170a8:	69fb      	ldr	r3, [r7, #28]
 80170aa:	4413      	add	r3, r2
 80170ac:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80170b0:	691a      	ldr	r2, [r3, #16]
 80170b2:	8afb      	ldrh	r3, [r7, #22]
 80170b4:	04d9      	lsls	r1, r3, #19
 80170b6:	4b38      	ldr	r3, [pc, #224]	@ (8017198 <USB_EPStartXfer+0x48c>)
 80170b8:	400b      	ands	r3, r1
 80170ba:	69b9      	ldr	r1, [r7, #24]
 80170bc:	0148      	lsls	r0, r1, #5
 80170be:	69f9      	ldr	r1, [r7, #28]
 80170c0:	4401      	add	r1, r0
 80170c2:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80170c6:	4313      	orrs	r3, r2
 80170c8:	610b      	str	r3, [r1, #16]
 80170ca:	69bb      	ldr	r3, [r7, #24]
 80170cc:	015a      	lsls	r2, r3, #5
 80170ce:	69fb      	ldr	r3, [r7, #28]
 80170d0:	4413      	add	r3, r2
 80170d2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80170d6:	691a      	ldr	r2, [r3, #16]
 80170d8:	68bb      	ldr	r3, [r7, #8]
 80170da:	69db      	ldr	r3, [r3, #28]
 80170dc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80170e0:	69b9      	ldr	r1, [r7, #24]
 80170e2:	0148      	lsls	r0, r1, #5
 80170e4:	69f9      	ldr	r1, [r7, #28]
 80170e6:	4401      	add	r1, r0
 80170e8:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80170ec:	4313      	orrs	r3, r2
 80170ee:	610b      	str	r3, [r1, #16]
 80170f0:	79fb      	ldrb	r3, [r7, #7]
 80170f2:	2b01      	cmp	r3, #1
 80170f4:	d10d      	bne.n	8017112 <USB_EPStartXfer+0x406>
 80170f6:	68bb      	ldr	r3, [r7, #8]
 80170f8:	691b      	ldr	r3, [r3, #16]
 80170fa:	2b00      	cmp	r3, #0
 80170fc:	d009      	beq.n	8017112 <USB_EPStartXfer+0x406>
 80170fe:	68bb      	ldr	r3, [r7, #8]
 8017100:	6919      	ldr	r1, [r3, #16]
 8017102:	69bb      	ldr	r3, [r7, #24]
 8017104:	015a      	lsls	r2, r3, #5
 8017106:	69fb      	ldr	r3, [r7, #28]
 8017108:	4413      	add	r3, r2
 801710a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801710e:	460a      	mov	r2, r1
 8017110:	615a      	str	r2, [r3, #20]
 8017112:	68bb      	ldr	r3, [r7, #8]
 8017114:	791b      	ldrb	r3, [r3, #4]
 8017116:	2b01      	cmp	r3, #1
 8017118:	d128      	bne.n	801716c <USB_EPStartXfer+0x460>
 801711a:	69fb      	ldr	r3, [r7, #28]
 801711c:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8017120:	689b      	ldr	r3, [r3, #8]
 8017122:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8017126:	2b00      	cmp	r3, #0
 8017128:	d110      	bne.n	801714c <USB_EPStartXfer+0x440>
 801712a:	69bb      	ldr	r3, [r7, #24]
 801712c:	015a      	lsls	r2, r3, #5
 801712e:	69fb      	ldr	r3, [r7, #28]
 8017130:	4413      	add	r3, r2
 8017132:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017136:	681b      	ldr	r3, [r3, #0]
 8017138:	69ba      	ldr	r2, [r7, #24]
 801713a:	0151      	lsls	r1, r2, #5
 801713c:	69fa      	ldr	r2, [r7, #28]
 801713e:	440a      	add	r2, r1
 8017140:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017144:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8017148:	6013      	str	r3, [r2, #0]
 801714a:	e00f      	b.n	801716c <USB_EPStartXfer+0x460>
 801714c:	69bb      	ldr	r3, [r7, #24]
 801714e:	015a      	lsls	r2, r3, #5
 8017150:	69fb      	ldr	r3, [r7, #28]
 8017152:	4413      	add	r3, r2
 8017154:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017158:	681b      	ldr	r3, [r3, #0]
 801715a:	69ba      	ldr	r2, [r7, #24]
 801715c:	0151      	lsls	r1, r2, #5
 801715e:	69fa      	ldr	r2, [r7, #28]
 8017160:	440a      	add	r2, r1
 8017162:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017166:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 801716a:	6013      	str	r3, [r2, #0]
 801716c:	69bb      	ldr	r3, [r7, #24]
 801716e:	015a      	lsls	r2, r3, #5
 8017170:	69fb      	ldr	r3, [r7, #28]
 8017172:	4413      	add	r3, r2
 8017174:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017178:	681b      	ldr	r3, [r3, #0]
 801717a:	69ba      	ldr	r2, [r7, #24]
 801717c:	0151      	lsls	r1, r2, #5
 801717e:	69fa      	ldr	r2, [r7, #28]
 8017180:	440a      	add	r2, r1
 8017182:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017186:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801718a:	6013      	str	r3, [r2, #0]
 801718c:	2300      	movs	r3, #0
 801718e:	4618      	mov	r0, r3
 8017190:	3720      	adds	r7, #32
 8017192:	46bd      	mov	sp, r7
 8017194:	bd80      	pop	{r7, pc}
 8017196:	bf00      	nop
 8017198:	1ff80000 	.word	0x1ff80000

0801719c <USB_EP0StartXfer>:
 801719c:	b480      	push	{r7}
 801719e:	b087      	sub	sp, #28
 80171a0:	af00      	add	r7, sp, #0
 80171a2:	60f8      	str	r0, [r7, #12]
 80171a4:	60b9      	str	r1, [r7, #8]
 80171a6:	4613      	mov	r3, r2
 80171a8:	71fb      	strb	r3, [r7, #7]
 80171aa:	68fb      	ldr	r3, [r7, #12]
 80171ac:	617b      	str	r3, [r7, #20]
 80171ae:	68bb      	ldr	r3, [r7, #8]
 80171b0:	781b      	ldrb	r3, [r3, #0]
 80171b2:	613b      	str	r3, [r7, #16]
 80171b4:	68bb      	ldr	r3, [r7, #8]
 80171b6:	785b      	ldrb	r3, [r3, #1]
 80171b8:	2b01      	cmp	r3, #1
 80171ba:	f040 80ce 	bne.w	801735a <USB_EP0StartXfer+0x1be>
 80171be:	68bb      	ldr	r3, [r7, #8]
 80171c0:	699b      	ldr	r3, [r3, #24]
 80171c2:	2b00      	cmp	r3, #0
 80171c4:	d132      	bne.n	801722c <USB_EP0StartXfer+0x90>
 80171c6:	693b      	ldr	r3, [r7, #16]
 80171c8:	015a      	lsls	r2, r3, #5
 80171ca:	697b      	ldr	r3, [r7, #20]
 80171cc:	4413      	add	r3, r2
 80171ce:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80171d2:	691b      	ldr	r3, [r3, #16]
 80171d4:	693a      	ldr	r2, [r7, #16]
 80171d6:	0151      	lsls	r1, r2, #5
 80171d8:	697a      	ldr	r2, [r7, #20]
 80171da:	440a      	add	r2, r1
 80171dc:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80171e0:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 80171e4:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 80171e8:	6113      	str	r3, [r2, #16]
 80171ea:	693b      	ldr	r3, [r7, #16]
 80171ec:	015a      	lsls	r2, r3, #5
 80171ee:	697b      	ldr	r3, [r7, #20]
 80171f0:	4413      	add	r3, r2
 80171f2:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80171f6:	691b      	ldr	r3, [r3, #16]
 80171f8:	693a      	ldr	r2, [r7, #16]
 80171fa:	0151      	lsls	r1, r2, #5
 80171fc:	697a      	ldr	r2, [r7, #20]
 80171fe:	440a      	add	r2, r1
 8017200:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017204:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8017208:	6113      	str	r3, [r2, #16]
 801720a:	693b      	ldr	r3, [r7, #16]
 801720c:	015a      	lsls	r2, r3, #5
 801720e:	697b      	ldr	r3, [r7, #20]
 8017210:	4413      	add	r3, r2
 8017212:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017216:	691b      	ldr	r3, [r3, #16]
 8017218:	693a      	ldr	r2, [r7, #16]
 801721a:	0151      	lsls	r1, r2, #5
 801721c:	697a      	ldr	r2, [r7, #20]
 801721e:	440a      	add	r2, r1
 8017220:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017224:	0cdb      	lsrs	r3, r3, #19
 8017226:	04db      	lsls	r3, r3, #19
 8017228:	6113      	str	r3, [r2, #16]
 801722a:	e04e      	b.n	80172ca <USB_EP0StartXfer+0x12e>
 801722c:	693b      	ldr	r3, [r7, #16]
 801722e:	015a      	lsls	r2, r3, #5
 8017230:	697b      	ldr	r3, [r7, #20]
 8017232:	4413      	add	r3, r2
 8017234:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017238:	691b      	ldr	r3, [r3, #16]
 801723a:	693a      	ldr	r2, [r7, #16]
 801723c:	0151      	lsls	r1, r2, #5
 801723e:	697a      	ldr	r2, [r7, #20]
 8017240:	440a      	add	r2, r1
 8017242:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017246:	0cdb      	lsrs	r3, r3, #19
 8017248:	04db      	lsls	r3, r3, #19
 801724a:	6113      	str	r3, [r2, #16]
 801724c:	693b      	ldr	r3, [r7, #16]
 801724e:	015a      	lsls	r2, r3, #5
 8017250:	697b      	ldr	r3, [r7, #20]
 8017252:	4413      	add	r3, r2
 8017254:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017258:	691b      	ldr	r3, [r3, #16]
 801725a:	693a      	ldr	r2, [r7, #16]
 801725c:	0151      	lsls	r1, r2, #5
 801725e:	697a      	ldr	r2, [r7, #20]
 8017260:	440a      	add	r2, r1
 8017262:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017266:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 801726a:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 801726e:	6113      	str	r3, [r2, #16]
 8017270:	68bb      	ldr	r3, [r7, #8]
 8017272:	699a      	ldr	r2, [r3, #24]
 8017274:	68bb      	ldr	r3, [r7, #8]
 8017276:	68db      	ldr	r3, [r3, #12]
 8017278:	429a      	cmp	r2, r3
 801727a:	d903      	bls.n	8017284 <USB_EP0StartXfer+0xe8>
 801727c:	68bb      	ldr	r3, [r7, #8]
 801727e:	68da      	ldr	r2, [r3, #12]
 8017280:	68bb      	ldr	r3, [r7, #8]
 8017282:	619a      	str	r2, [r3, #24]
 8017284:	693b      	ldr	r3, [r7, #16]
 8017286:	015a      	lsls	r2, r3, #5
 8017288:	697b      	ldr	r3, [r7, #20]
 801728a:	4413      	add	r3, r2
 801728c:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017290:	691b      	ldr	r3, [r3, #16]
 8017292:	693a      	ldr	r2, [r7, #16]
 8017294:	0151      	lsls	r1, r2, #5
 8017296:	697a      	ldr	r2, [r7, #20]
 8017298:	440a      	add	r2, r1
 801729a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801729e:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80172a2:	6113      	str	r3, [r2, #16]
 80172a4:	693b      	ldr	r3, [r7, #16]
 80172a6:	015a      	lsls	r2, r3, #5
 80172a8:	697b      	ldr	r3, [r7, #20]
 80172aa:	4413      	add	r3, r2
 80172ac:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80172b0:	691a      	ldr	r2, [r3, #16]
 80172b2:	68bb      	ldr	r3, [r7, #8]
 80172b4:	699b      	ldr	r3, [r3, #24]
 80172b6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80172ba:	6939      	ldr	r1, [r7, #16]
 80172bc:	0148      	lsls	r0, r1, #5
 80172be:	6979      	ldr	r1, [r7, #20]
 80172c0:	4401      	add	r1, r0
 80172c2:	f501 6110 	add.w	r1, r1, #2304	@ 0x900
 80172c6:	4313      	orrs	r3, r2
 80172c8:	610b      	str	r3, [r1, #16]
 80172ca:	79fb      	ldrb	r3, [r7, #7]
 80172cc:	2b01      	cmp	r3, #1
 80172ce:	d11e      	bne.n	801730e <USB_EP0StartXfer+0x172>
 80172d0:	68bb      	ldr	r3, [r7, #8]
 80172d2:	695b      	ldr	r3, [r3, #20]
 80172d4:	2b00      	cmp	r3, #0
 80172d6:	d009      	beq.n	80172ec <USB_EP0StartXfer+0x150>
 80172d8:	693b      	ldr	r3, [r7, #16]
 80172da:	015a      	lsls	r2, r3, #5
 80172dc:	697b      	ldr	r3, [r7, #20]
 80172de:	4413      	add	r3, r2
 80172e0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80172e4:	461a      	mov	r2, r3
 80172e6:	68bb      	ldr	r3, [r7, #8]
 80172e8:	695b      	ldr	r3, [r3, #20]
 80172ea:	6153      	str	r3, [r2, #20]
 80172ec:	693b      	ldr	r3, [r7, #16]
 80172ee:	015a      	lsls	r2, r3, #5
 80172f0:	697b      	ldr	r3, [r7, #20]
 80172f2:	4413      	add	r3, r2
 80172f4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80172f8:	681b      	ldr	r3, [r3, #0]
 80172fa:	693a      	ldr	r2, [r7, #16]
 80172fc:	0151      	lsls	r1, r2, #5
 80172fe:	697a      	ldr	r2, [r7, #20]
 8017300:	440a      	add	r2, r1
 8017302:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017306:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801730a:	6013      	str	r3, [r2, #0]
 801730c:	e097      	b.n	801743e <USB_EP0StartXfer+0x2a2>
 801730e:	693b      	ldr	r3, [r7, #16]
 8017310:	015a      	lsls	r2, r3, #5
 8017312:	697b      	ldr	r3, [r7, #20]
 8017314:	4413      	add	r3, r2
 8017316:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801731a:	681b      	ldr	r3, [r3, #0]
 801731c:	693a      	ldr	r2, [r7, #16]
 801731e:	0151      	lsls	r1, r2, #5
 8017320:	697a      	ldr	r2, [r7, #20]
 8017322:	440a      	add	r2, r1
 8017324:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017328:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801732c:	6013      	str	r3, [r2, #0]
 801732e:	68bb      	ldr	r3, [r7, #8]
 8017330:	699b      	ldr	r3, [r3, #24]
 8017332:	2b00      	cmp	r3, #0
 8017334:	f000 8083 	beq.w	801743e <USB_EP0StartXfer+0x2a2>
 8017338:	697b      	ldr	r3, [r7, #20]
 801733a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801733e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8017340:	68bb      	ldr	r3, [r7, #8]
 8017342:	781b      	ldrb	r3, [r3, #0]
 8017344:	f003 030f 	and.w	r3, r3, #15
 8017348:	2101      	movs	r1, #1
 801734a:	fa01 f303 	lsl.w	r3, r1, r3
 801734e:	6979      	ldr	r1, [r7, #20]
 8017350:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 8017354:	4313      	orrs	r3, r2
 8017356:	634b      	str	r3, [r1, #52]	@ 0x34
 8017358:	e071      	b.n	801743e <USB_EP0StartXfer+0x2a2>
 801735a:	693b      	ldr	r3, [r7, #16]
 801735c:	015a      	lsls	r2, r3, #5
 801735e:	697b      	ldr	r3, [r7, #20]
 8017360:	4413      	add	r3, r2
 8017362:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017366:	691b      	ldr	r3, [r3, #16]
 8017368:	693a      	ldr	r2, [r7, #16]
 801736a:	0151      	lsls	r1, r2, #5
 801736c:	697a      	ldr	r2, [r7, #20]
 801736e:	440a      	add	r2, r1
 8017370:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017374:	0cdb      	lsrs	r3, r3, #19
 8017376:	04db      	lsls	r3, r3, #19
 8017378:	6113      	str	r3, [r2, #16]
 801737a:	693b      	ldr	r3, [r7, #16]
 801737c:	015a      	lsls	r2, r3, #5
 801737e:	697b      	ldr	r3, [r7, #20]
 8017380:	4413      	add	r3, r2
 8017382:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017386:	691b      	ldr	r3, [r3, #16]
 8017388:	693a      	ldr	r2, [r7, #16]
 801738a:	0151      	lsls	r1, r2, #5
 801738c:	697a      	ldr	r2, [r7, #20]
 801738e:	440a      	add	r2, r1
 8017390:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017394:	f023 53ff 	bic.w	r3, r3, #534773760	@ 0x1fe00000
 8017398:	f423 13c0 	bic.w	r3, r3, #1572864	@ 0x180000
 801739c:	6113      	str	r3, [r2, #16]
 801739e:	68bb      	ldr	r3, [r7, #8]
 80173a0:	699b      	ldr	r3, [r3, #24]
 80173a2:	2b00      	cmp	r3, #0
 80173a4:	d003      	beq.n	80173ae <USB_EP0StartXfer+0x212>
 80173a6:	68bb      	ldr	r3, [r7, #8]
 80173a8:	68da      	ldr	r2, [r3, #12]
 80173aa:	68bb      	ldr	r3, [r7, #8]
 80173ac:	619a      	str	r2, [r3, #24]
 80173ae:	68bb      	ldr	r3, [r7, #8]
 80173b0:	68da      	ldr	r2, [r3, #12]
 80173b2:	68bb      	ldr	r3, [r7, #8]
 80173b4:	61da      	str	r2, [r3, #28]
 80173b6:	693b      	ldr	r3, [r7, #16]
 80173b8:	015a      	lsls	r2, r3, #5
 80173ba:	697b      	ldr	r3, [r7, #20]
 80173bc:	4413      	add	r3, r2
 80173be:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80173c2:	691b      	ldr	r3, [r3, #16]
 80173c4:	693a      	ldr	r2, [r7, #16]
 80173c6:	0151      	lsls	r1, r2, #5
 80173c8:	697a      	ldr	r2, [r7, #20]
 80173ca:	440a      	add	r2, r1
 80173cc:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 80173d0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80173d4:	6113      	str	r3, [r2, #16]
 80173d6:	693b      	ldr	r3, [r7, #16]
 80173d8:	015a      	lsls	r2, r3, #5
 80173da:	697b      	ldr	r3, [r7, #20]
 80173dc:	4413      	add	r3, r2
 80173de:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80173e2:	691a      	ldr	r2, [r3, #16]
 80173e4:	68bb      	ldr	r3, [r7, #8]
 80173e6:	69db      	ldr	r3, [r3, #28]
 80173e8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80173ec:	6939      	ldr	r1, [r7, #16]
 80173ee:	0148      	lsls	r0, r1, #5
 80173f0:	6979      	ldr	r1, [r7, #20]
 80173f2:	4401      	add	r1, r0
 80173f4:	f501 6130 	add.w	r1, r1, #2816	@ 0xb00
 80173f8:	4313      	orrs	r3, r2
 80173fa:	610b      	str	r3, [r1, #16]
 80173fc:	79fb      	ldrb	r3, [r7, #7]
 80173fe:	2b01      	cmp	r3, #1
 8017400:	d10d      	bne.n	801741e <USB_EP0StartXfer+0x282>
 8017402:	68bb      	ldr	r3, [r7, #8]
 8017404:	691b      	ldr	r3, [r3, #16]
 8017406:	2b00      	cmp	r3, #0
 8017408:	d009      	beq.n	801741e <USB_EP0StartXfer+0x282>
 801740a:	68bb      	ldr	r3, [r7, #8]
 801740c:	6919      	ldr	r1, [r3, #16]
 801740e:	693b      	ldr	r3, [r7, #16]
 8017410:	015a      	lsls	r2, r3, #5
 8017412:	697b      	ldr	r3, [r7, #20]
 8017414:	4413      	add	r3, r2
 8017416:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801741a:	460a      	mov	r2, r1
 801741c:	615a      	str	r2, [r3, #20]
 801741e:	693b      	ldr	r3, [r7, #16]
 8017420:	015a      	lsls	r2, r3, #5
 8017422:	697b      	ldr	r3, [r7, #20]
 8017424:	4413      	add	r3, r2
 8017426:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801742a:	681b      	ldr	r3, [r3, #0]
 801742c:	693a      	ldr	r2, [r7, #16]
 801742e:	0151      	lsls	r1, r2, #5
 8017430:	697a      	ldr	r2, [r7, #20]
 8017432:	440a      	add	r2, r1
 8017434:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017438:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 801743c:	6013      	str	r3, [r2, #0]
 801743e:	2300      	movs	r3, #0
 8017440:	4618      	mov	r0, r3
 8017442:	371c      	adds	r7, #28
 8017444:	46bd      	mov	sp, r7
 8017446:	f85d 7b04 	ldr.w	r7, [sp], #4
 801744a:	4770      	bx	lr

0801744c <USB_EPStopXfer>:
 801744c:	b480      	push	{r7}
 801744e:	b087      	sub	sp, #28
 8017450:	af00      	add	r7, sp, #0
 8017452:	6078      	str	r0, [r7, #4]
 8017454:	6039      	str	r1, [r7, #0]
 8017456:	2300      	movs	r3, #0
 8017458:	60fb      	str	r3, [r7, #12]
 801745a:	2300      	movs	r3, #0
 801745c:	75fb      	strb	r3, [r7, #23]
 801745e:	687b      	ldr	r3, [r7, #4]
 8017460:	613b      	str	r3, [r7, #16]
 8017462:	683b      	ldr	r3, [r7, #0]
 8017464:	785b      	ldrb	r3, [r3, #1]
 8017466:	2b01      	cmp	r3, #1
 8017468:	d14a      	bne.n	8017500 <USB_EPStopXfer+0xb4>
 801746a:	683b      	ldr	r3, [r7, #0]
 801746c:	781b      	ldrb	r3, [r3, #0]
 801746e:	015a      	lsls	r2, r3, #5
 8017470:	693b      	ldr	r3, [r7, #16]
 8017472:	4413      	add	r3, r2
 8017474:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017478:	681b      	ldr	r3, [r3, #0]
 801747a:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 801747e:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8017482:	f040 8086 	bne.w	8017592 <USB_EPStopXfer+0x146>
 8017486:	683b      	ldr	r3, [r7, #0]
 8017488:	781b      	ldrb	r3, [r3, #0]
 801748a:	015a      	lsls	r2, r3, #5
 801748c:	693b      	ldr	r3, [r7, #16]
 801748e:	4413      	add	r3, r2
 8017490:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017494:	681b      	ldr	r3, [r3, #0]
 8017496:	683a      	ldr	r2, [r7, #0]
 8017498:	7812      	ldrb	r2, [r2, #0]
 801749a:	0151      	lsls	r1, r2, #5
 801749c:	693a      	ldr	r2, [r7, #16]
 801749e:	440a      	add	r2, r1
 80174a0:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80174a4:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 80174a8:	6013      	str	r3, [r2, #0]
 80174aa:	683b      	ldr	r3, [r7, #0]
 80174ac:	781b      	ldrb	r3, [r3, #0]
 80174ae:	015a      	lsls	r2, r3, #5
 80174b0:	693b      	ldr	r3, [r7, #16]
 80174b2:	4413      	add	r3, r2
 80174b4:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80174b8:	681b      	ldr	r3, [r3, #0]
 80174ba:	683a      	ldr	r2, [r7, #0]
 80174bc:	7812      	ldrb	r2, [r2, #0]
 80174be:	0151      	lsls	r1, r2, #5
 80174c0:	693a      	ldr	r2, [r7, #16]
 80174c2:	440a      	add	r2, r1
 80174c4:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80174c8:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80174cc:	6013      	str	r3, [r2, #0]
 80174ce:	68fb      	ldr	r3, [r7, #12]
 80174d0:	3301      	adds	r3, #1
 80174d2:	60fb      	str	r3, [r7, #12]
 80174d4:	68fb      	ldr	r3, [r7, #12]
 80174d6:	f242 7210 	movw	r2, #10000	@ 0x2710
 80174da:	4293      	cmp	r3, r2
 80174dc:	d902      	bls.n	80174e4 <USB_EPStopXfer+0x98>
 80174de:	2301      	movs	r3, #1
 80174e0:	75fb      	strb	r3, [r7, #23]
 80174e2:	e056      	b.n	8017592 <USB_EPStopXfer+0x146>
 80174e4:	683b      	ldr	r3, [r7, #0]
 80174e6:	781b      	ldrb	r3, [r3, #0]
 80174e8:	015a      	lsls	r2, r3, #5
 80174ea:	693b      	ldr	r3, [r7, #16]
 80174ec:	4413      	add	r3, r2
 80174ee:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80174f2:	681b      	ldr	r3, [r3, #0]
 80174f4:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80174f8:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80174fc:	d0e7      	beq.n	80174ce <USB_EPStopXfer+0x82>
 80174fe:	e048      	b.n	8017592 <USB_EPStopXfer+0x146>
 8017500:	683b      	ldr	r3, [r7, #0]
 8017502:	781b      	ldrb	r3, [r3, #0]
 8017504:	015a      	lsls	r2, r3, #5
 8017506:	693b      	ldr	r3, [r7, #16]
 8017508:	4413      	add	r3, r2
 801750a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801750e:	681b      	ldr	r3, [r3, #0]
 8017510:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8017514:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8017518:	d13b      	bne.n	8017592 <USB_EPStopXfer+0x146>
 801751a:	683b      	ldr	r3, [r7, #0]
 801751c:	781b      	ldrb	r3, [r3, #0]
 801751e:	015a      	lsls	r2, r3, #5
 8017520:	693b      	ldr	r3, [r7, #16]
 8017522:	4413      	add	r3, r2
 8017524:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017528:	681b      	ldr	r3, [r3, #0]
 801752a:	683a      	ldr	r2, [r7, #0]
 801752c:	7812      	ldrb	r2, [r2, #0]
 801752e:	0151      	lsls	r1, r2, #5
 8017530:	693a      	ldr	r2, [r7, #16]
 8017532:	440a      	add	r2, r1
 8017534:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017538:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 801753c:	6013      	str	r3, [r2, #0]
 801753e:	683b      	ldr	r3, [r7, #0]
 8017540:	781b      	ldrb	r3, [r3, #0]
 8017542:	015a      	lsls	r2, r3, #5
 8017544:	693b      	ldr	r3, [r7, #16]
 8017546:	4413      	add	r3, r2
 8017548:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801754c:	681b      	ldr	r3, [r3, #0]
 801754e:	683a      	ldr	r2, [r7, #0]
 8017550:	7812      	ldrb	r2, [r2, #0]
 8017552:	0151      	lsls	r1, r2, #5
 8017554:	693a      	ldr	r2, [r7, #16]
 8017556:	440a      	add	r2, r1
 8017558:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 801755c:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8017560:	6013      	str	r3, [r2, #0]
 8017562:	68fb      	ldr	r3, [r7, #12]
 8017564:	3301      	adds	r3, #1
 8017566:	60fb      	str	r3, [r7, #12]
 8017568:	68fb      	ldr	r3, [r7, #12]
 801756a:	f242 7210 	movw	r2, #10000	@ 0x2710
 801756e:	4293      	cmp	r3, r2
 8017570:	d902      	bls.n	8017578 <USB_EPStopXfer+0x12c>
 8017572:	2301      	movs	r3, #1
 8017574:	75fb      	strb	r3, [r7, #23]
 8017576:	e00c      	b.n	8017592 <USB_EPStopXfer+0x146>
 8017578:	683b      	ldr	r3, [r7, #0]
 801757a:	781b      	ldrb	r3, [r3, #0]
 801757c:	015a      	lsls	r2, r3, #5
 801757e:	693b      	ldr	r3, [r7, #16]
 8017580:	4413      	add	r3, r2
 8017582:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017586:	681b      	ldr	r3, [r3, #0]
 8017588:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 801758c:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8017590:	d0e7      	beq.n	8017562 <USB_EPStopXfer+0x116>
 8017592:	7dfb      	ldrb	r3, [r7, #23]
 8017594:	4618      	mov	r0, r3
 8017596:	371c      	adds	r7, #28
 8017598:	46bd      	mov	sp, r7
 801759a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801759e:	4770      	bx	lr

080175a0 <USB_WritePacket>:
 80175a0:	b480      	push	{r7}
 80175a2:	b089      	sub	sp, #36	@ 0x24
 80175a4:	af00      	add	r7, sp, #0
 80175a6:	60f8      	str	r0, [r7, #12]
 80175a8:	60b9      	str	r1, [r7, #8]
 80175aa:	4611      	mov	r1, r2
 80175ac:	461a      	mov	r2, r3
 80175ae:	460b      	mov	r3, r1
 80175b0:	71fb      	strb	r3, [r7, #7]
 80175b2:	4613      	mov	r3, r2
 80175b4:	80bb      	strh	r3, [r7, #4]
 80175b6:	68fb      	ldr	r3, [r7, #12]
 80175b8:	617b      	str	r3, [r7, #20]
 80175ba:	68bb      	ldr	r3, [r7, #8]
 80175bc:	61fb      	str	r3, [r7, #28]
 80175be:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80175c2:	2b00      	cmp	r3, #0
 80175c4:	d123      	bne.n	801760e <USB_WritePacket+0x6e>
 80175c6:	88bb      	ldrh	r3, [r7, #4]
 80175c8:	3303      	adds	r3, #3
 80175ca:	089b      	lsrs	r3, r3, #2
 80175cc:	613b      	str	r3, [r7, #16]
 80175ce:	2300      	movs	r3, #0
 80175d0:	61bb      	str	r3, [r7, #24]
 80175d2:	e018      	b.n	8017606 <USB_WritePacket+0x66>
 80175d4:	79fb      	ldrb	r3, [r7, #7]
 80175d6:	031a      	lsls	r2, r3, #12
 80175d8:	697b      	ldr	r3, [r7, #20]
 80175da:	4413      	add	r3, r2
 80175dc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 80175e0:	461a      	mov	r2, r3
 80175e2:	69fb      	ldr	r3, [r7, #28]
 80175e4:	681b      	ldr	r3, [r3, #0]
 80175e6:	6013      	str	r3, [r2, #0]
 80175e8:	69fb      	ldr	r3, [r7, #28]
 80175ea:	3301      	adds	r3, #1
 80175ec:	61fb      	str	r3, [r7, #28]
 80175ee:	69fb      	ldr	r3, [r7, #28]
 80175f0:	3301      	adds	r3, #1
 80175f2:	61fb      	str	r3, [r7, #28]
 80175f4:	69fb      	ldr	r3, [r7, #28]
 80175f6:	3301      	adds	r3, #1
 80175f8:	61fb      	str	r3, [r7, #28]
 80175fa:	69fb      	ldr	r3, [r7, #28]
 80175fc:	3301      	adds	r3, #1
 80175fe:	61fb      	str	r3, [r7, #28]
 8017600:	69bb      	ldr	r3, [r7, #24]
 8017602:	3301      	adds	r3, #1
 8017604:	61bb      	str	r3, [r7, #24]
 8017606:	69ba      	ldr	r2, [r7, #24]
 8017608:	693b      	ldr	r3, [r7, #16]
 801760a:	429a      	cmp	r2, r3
 801760c:	d3e2      	bcc.n	80175d4 <USB_WritePacket+0x34>
 801760e:	2300      	movs	r3, #0
 8017610:	4618      	mov	r0, r3
 8017612:	3724      	adds	r7, #36	@ 0x24
 8017614:	46bd      	mov	sp, r7
 8017616:	f85d 7b04 	ldr.w	r7, [sp], #4
 801761a:	4770      	bx	lr

0801761c <USB_ReadPacket>:
 801761c:	b480      	push	{r7}
 801761e:	b08b      	sub	sp, #44	@ 0x2c
 8017620:	af00      	add	r7, sp, #0
 8017622:	60f8      	str	r0, [r7, #12]
 8017624:	60b9      	str	r1, [r7, #8]
 8017626:	4613      	mov	r3, r2
 8017628:	80fb      	strh	r3, [r7, #6]
 801762a:	68fb      	ldr	r3, [r7, #12]
 801762c:	61bb      	str	r3, [r7, #24]
 801762e:	68bb      	ldr	r3, [r7, #8]
 8017630:	627b      	str	r3, [r7, #36]	@ 0x24
 8017632:	88fb      	ldrh	r3, [r7, #6]
 8017634:	089b      	lsrs	r3, r3, #2
 8017636:	b29b      	uxth	r3, r3
 8017638:	617b      	str	r3, [r7, #20]
 801763a:	88fb      	ldrh	r3, [r7, #6]
 801763c:	f003 0303 	and.w	r3, r3, #3
 8017640:	83fb      	strh	r3, [r7, #30]
 8017642:	2300      	movs	r3, #0
 8017644:	623b      	str	r3, [r7, #32]
 8017646:	e014      	b.n	8017672 <USB_ReadPacket+0x56>
 8017648:	69bb      	ldr	r3, [r7, #24]
 801764a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 801764e:	681a      	ldr	r2, [r3, #0]
 8017650:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017652:	601a      	str	r2, [r3, #0]
 8017654:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017656:	3301      	adds	r3, #1
 8017658:	627b      	str	r3, [r7, #36]	@ 0x24
 801765a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801765c:	3301      	adds	r3, #1
 801765e:	627b      	str	r3, [r7, #36]	@ 0x24
 8017660:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017662:	3301      	adds	r3, #1
 8017664:	627b      	str	r3, [r7, #36]	@ 0x24
 8017666:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8017668:	3301      	adds	r3, #1
 801766a:	627b      	str	r3, [r7, #36]	@ 0x24
 801766c:	6a3b      	ldr	r3, [r7, #32]
 801766e:	3301      	adds	r3, #1
 8017670:	623b      	str	r3, [r7, #32]
 8017672:	6a3a      	ldr	r2, [r7, #32]
 8017674:	697b      	ldr	r3, [r7, #20]
 8017676:	429a      	cmp	r2, r3
 8017678:	d3e6      	bcc.n	8017648 <USB_ReadPacket+0x2c>
 801767a:	8bfb      	ldrh	r3, [r7, #30]
 801767c:	2b00      	cmp	r3, #0
 801767e:	d01e      	beq.n	80176be <USB_ReadPacket+0xa2>
 8017680:	2300      	movs	r3, #0
 8017682:	623b      	str	r3, [r7, #32]
 8017684:	69bb      	ldr	r3, [r7, #24]
 8017686:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 801768a:	461a      	mov	r2, r3
 801768c:	f107 0310 	add.w	r3, r7, #16
 8017690:	6812      	ldr	r2, [r2, #0]
 8017692:	601a      	str	r2, [r3, #0]
 8017694:	693a      	ldr	r2, [r7, #16]
 8017696:	6a3b      	ldr	r3, [r7, #32]
 8017698:	b2db      	uxtb	r3, r3
 801769a:	00db      	lsls	r3, r3, #3
 801769c:	fa22 f303 	lsr.w	r3, r2, r3
 80176a0:	b2da      	uxtb	r2, r3
 80176a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80176a4:	701a      	strb	r2, [r3, #0]
 80176a6:	6a3b      	ldr	r3, [r7, #32]
 80176a8:	3301      	adds	r3, #1
 80176aa:	623b      	str	r3, [r7, #32]
 80176ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80176ae:	3301      	adds	r3, #1
 80176b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80176b2:	8bfb      	ldrh	r3, [r7, #30]
 80176b4:	3b01      	subs	r3, #1
 80176b6:	83fb      	strh	r3, [r7, #30]
 80176b8:	8bfb      	ldrh	r3, [r7, #30]
 80176ba:	2b00      	cmp	r3, #0
 80176bc:	d1ea      	bne.n	8017694 <USB_ReadPacket+0x78>
 80176be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80176c0:	4618      	mov	r0, r3
 80176c2:	372c      	adds	r7, #44	@ 0x2c
 80176c4:	46bd      	mov	sp, r7
 80176c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80176ca:	4770      	bx	lr

080176cc <USB_EPSetStall>:
 80176cc:	b480      	push	{r7}
 80176ce:	b085      	sub	sp, #20
 80176d0:	af00      	add	r7, sp, #0
 80176d2:	6078      	str	r0, [r7, #4]
 80176d4:	6039      	str	r1, [r7, #0]
 80176d6:	687b      	ldr	r3, [r7, #4]
 80176d8:	60fb      	str	r3, [r7, #12]
 80176da:	683b      	ldr	r3, [r7, #0]
 80176dc:	781b      	ldrb	r3, [r3, #0]
 80176de:	60bb      	str	r3, [r7, #8]
 80176e0:	683b      	ldr	r3, [r7, #0]
 80176e2:	785b      	ldrb	r3, [r3, #1]
 80176e4:	2b01      	cmp	r3, #1
 80176e6:	d12c      	bne.n	8017742 <USB_EPSetStall+0x76>
 80176e8:	68bb      	ldr	r3, [r7, #8]
 80176ea:	015a      	lsls	r2, r3, #5
 80176ec:	68fb      	ldr	r3, [r7, #12]
 80176ee:	4413      	add	r3, r2
 80176f0:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80176f4:	681b      	ldr	r3, [r3, #0]
 80176f6:	2b00      	cmp	r3, #0
 80176f8:	db12      	blt.n	8017720 <USB_EPSetStall+0x54>
 80176fa:	68bb      	ldr	r3, [r7, #8]
 80176fc:	2b00      	cmp	r3, #0
 80176fe:	d00f      	beq.n	8017720 <USB_EPSetStall+0x54>
 8017700:	68bb      	ldr	r3, [r7, #8]
 8017702:	015a      	lsls	r2, r3, #5
 8017704:	68fb      	ldr	r3, [r7, #12]
 8017706:	4413      	add	r3, r2
 8017708:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801770c:	681b      	ldr	r3, [r3, #0]
 801770e:	68ba      	ldr	r2, [r7, #8]
 8017710:	0151      	lsls	r1, r2, #5
 8017712:	68fa      	ldr	r2, [r7, #12]
 8017714:	440a      	add	r2, r1
 8017716:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801771a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 801771e:	6013      	str	r3, [r2, #0]
 8017720:	68bb      	ldr	r3, [r7, #8]
 8017722:	015a      	lsls	r2, r3, #5
 8017724:	68fb      	ldr	r3, [r7, #12]
 8017726:	4413      	add	r3, r2
 8017728:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 801772c:	681b      	ldr	r3, [r3, #0]
 801772e:	68ba      	ldr	r2, [r7, #8]
 8017730:	0151      	lsls	r1, r2, #5
 8017732:	68fa      	ldr	r2, [r7, #12]
 8017734:	440a      	add	r2, r1
 8017736:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801773a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 801773e:	6013      	str	r3, [r2, #0]
 8017740:	e02b      	b.n	801779a <USB_EPSetStall+0xce>
 8017742:	68bb      	ldr	r3, [r7, #8]
 8017744:	015a      	lsls	r2, r3, #5
 8017746:	68fb      	ldr	r3, [r7, #12]
 8017748:	4413      	add	r3, r2
 801774a:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 801774e:	681b      	ldr	r3, [r3, #0]
 8017750:	2b00      	cmp	r3, #0
 8017752:	db12      	blt.n	801777a <USB_EPSetStall+0xae>
 8017754:	68bb      	ldr	r3, [r7, #8]
 8017756:	2b00      	cmp	r3, #0
 8017758:	d00f      	beq.n	801777a <USB_EPSetStall+0xae>
 801775a:	68bb      	ldr	r3, [r7, #8]
 801775c:	015a      	lsls	r2, r3, #5
 801775e:	68fb      	ldr	r3, [r7, #12]
 8017760:	4413      	add	r3, r2
 8017762:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017766:	681b      	ldr	r3, [r3, #0]
 8017768:	68ba      	ldr	r2, [r7, #8]
 801776a:	0151      	lsls	r1, r2, #5
 801776c:	68fa      	ldr	r2, [r7, #12]
 801776e:	440a      	add	r2, r1
 8017770:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017774:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8017778:	6013      	str	r3, [r2, #0]
 801777a:	68bb      	ldr	r3, [r7, #8]
 801777c:	015a      	lsls	r2, r3, #5
 801777e:	68fb      	ldr	r3, [r7, #12]
 8017780:	4413      	add	r3, r2
 8017782:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017786:	681b      	ldr	r3, [r3, #0]
 8017788:	68ba      	ldr	r2, [r7, #8]
 801778a:	0151      	lsls	r1, r2, #5
 801778c:	68fa      	ldr	r2, [r7, #12]
 801778e:	440a      	add	r2, r1
 8017790:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017794:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8017798:	6013      	str	r3, [r2, #0]
 801779a:	2300      	movs	r3, #0
 801779c:	4618      	mov	r0, r3
 801779e:	3714      	adds	r7, #20
 80177a0:	46bd      	mov	sp, r7
 80177a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80177a6:	4770      	bx	lr

080177a8 <USB_EPClearStall>:
 80177a8:	b480      	push	{r7}
 80177aa:	b085      	sub	sp, #20
 80177ac:	af00      	add	r7, sp, #0
 80177ae:	6078      	str	r0, [r7, #4]
 80177b0:	6039      	str	r1, [r7, #0]
 80177b2:	687b      	ldr	r3, [r7, #4]
 80177b4:	60fb      	str	r3, [r7, #12]
 80177b6:	683b      	ldr	r3, [r7, #0]
 80177b8:	781b      	ldrb	r3, [r3, #0]
 80177ba:	60bb      	str	r3, [r7, #8]
 80177bc:	683b      	ldr	r3, [r7, #0]
 80177be:	785b      	ldrb	r3, [r3, #1]
 80177c0:	2b01      	cmp	r3, #1
 80177c2:	d128      	bne.n	8017816 <USB_EPClearStall+0x6e>
 80177c4:	68bb      	ldr	r3, [r7, #8]
 80177c6:	015a      	lsls	r2, r3, #5
 80177c8:	68fb      	ldr	r3, [r7, #12]
 80177ca:	4413      	add	r3, r2
 80177cc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 80177d0:	681b      	ldr	r3, [r3, #0]
 80177d2:	68ba      	ldr	r2, [r7, #8]
 80177d4:	0151      	lsls	r1, r2, #5
 80177d6:	68fa      	ldr	r2, [r7, #12]
 80177d8:	440a      	add	r2, r1
 80177da:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 80177de:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80177e2:	6013      	str	r3, [r2, #0]
 80177e4:	683b      	ldr	r3, [r7, #0]
 80177e6:	791b      	ldrb	r3, [r3, #4]
 80177e8:	2b03      	cmp	r3, #3
 80177ea:	d003      	beq.n	80177f4 <USB_EPClearStall+0x4c>
 80177ec:	683b      	ldr	r3, [r7, #0]
 80177ee:	791b      	ldrb	r3, [r3, #4]
 80177f0:	2b02      	cmp	r3, #2
 80177f2:	d138      	bne.n	8017866 <USB_EPClearStall+0xbe>
 80177f4:	68bb      	ldr	r3, [r7, #8]
 80177f6:	015a      	lsls	r2, r3, #5
 80177f8:	68fb      	ldr	r3, [r7, #12]
 80177fa:	4413      	add	r3, r2
 80177fc:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017800:	681b      	ldr	r3, [r3, #0]
 8017802:	68ba      	ldr	r2, [r7, #8]
 8017804:	0151      	lsls	r1, r2, #5
 8017806:	68fa      	ldr	r2, [r7, #12]
 8017808:	440a      	add	r2, r1
 801780a:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 801780e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8017812:	6013      	str	r3, [r2, #0]
 8017814:	e027      	b.n	8017866 <USB_EPClearStall+0xbe>
 8017816:	68bb      	ldr	r3, [r7, #8]
 8017818:	015a      	lsls	r2, r3, #5
 801781a:	68fb      	ldr	r3, [r7, #12]
 801781c:	4413      	add	r3, r2
 801781e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017822:	681b      	ldr	r3, [r3, #0]
 8017824:	68ba      	ldr	r2, [r7, #8]
 8017826:	0151      	lsls	r1, r2, #5
 8017828:	68fa      	ldr	r2, [r7, #12]
 801782a:	440a      	add	r2, r1
 801782c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017830:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8017834:	6013      	str	r3, [r2, #0]
 8017836:	683b      	ldr	r3, [r7, #0]
 8017838:	791b      	ldrb	r3, [r3, #4]
 801783a:	2b03      	cmp	r3, #3
 801783c:	d003      	beq.n	8017846 <USB_EPClearStall+0x9e>
 801783e:	683b      	ldr	r3, [r7, #0]
 8017840:	791b      	ldrb	r3, [r3, #4]
 8017842:	2b02      	cmp	r3, #2
 8017844:	d10f      	bne.n	8017866 <USB_EPClearStall+0xbe>
 8017846:	68bb      	ldr	r3, [r7, #8]
 8017848:	015a      	lsls	r2, r3, #5
 801784a:	68fb      	ldr	r3, [r7, #12]
 801784c:	4413      	add	r3, r2
 801784e:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017852:	681b      	ldr	r3, [r3, #0]
 8017854:	68ba      	ldr	r2, [r7, #8]
 8017856:	0151      	lsls	r1, r2, #5
 8017858:	68fa      	ldr	r2, [r7, #12]
 801785a:	440a      	add	r2, r1
 801785c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017860:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8017864:	6013      	str	r3, [r2, #0]
 8017866:	2300      	movs	r3, #0
 8017868:	4618      	mov	r0, r3
 801786a:	3714      	adds	r7, #20
 801786c:	46bd      	mov	sp, r7
 801786e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017872:	4770      	bx	lr

08017874 <USB_SetDevAddress>:
 8017874:	b480      	push	{r7}
 8017876:	b085      	sub	sp, #20
 8017878:	af00      	add	r7, sp, #0
 801787a:	6078      	str	r0, [r7, #4]
 801787c:	460b      	mov	r3, r1
 801787e:	70fb      	strb	r3, [r7, #3]
 8017880:	687b      	ldr	r3, [r7, #4]
 8017882:	60fb      	str	r3, [r7, #12]
 8017884:	68fb      	ldr	r3, [r7, #12]
 8017886:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801788a:	681b      	ldr	r3, [r3, #0]
 801788c:	68fa      	ldr	r2, [r7, #12]
 801788e:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8017892:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8017896:	6013      	str	r3, [r2, #0]
 8017898:	68fb      	ldr	r3, [r7, #12]
 801789a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801789e:	681a      	ldr	r2, [r3, #0]
 80178a0:	78fb      	ldrb	r3, [r7, #3]
 80178a2:	011b      	lsls	r3, r3, #4
 80178a4:	f403 63fe 	and.w	r3, r3, #2032	@ 0x7f0
 80178a8:	68f9      	ldr	r1, [r7, #12]
 80178aa:	f501 6100 	add.w	r1, r1, #2048	@ 0x800
 80178ae:	4313      	orrs	r3, r2
 80178b0:	600b      	str	r3, [r1, #0]
 80178b2:	2300      	movs	r3, #0
 80178b4:	4618      	mov	r0, r3
 80178b6:	3714      	adds	r7, #20
 80178b8:	46bd      	mov	sp, r7
 80178ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80178be:	4770      	bx	lr

080178c0 <USB_DevConnect>:
 80178c0:	b480      	push	{r7}
 80178c2:	b085      	sub	sp, #20
 80178c4:	af00      	add	r7, sp, #0
 80178c6:	6078      	str	r0, [r7, #4]
 80178c8:	687b      	ldr	r3, [r7, #4]
 80178ca:	60fb      	str	r3, [r7, #12]
 80178cc:	68fb      	ldr	r3, [r7, #12]
 80178ce:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 80178d2:	681b      	ldr	r3, [r3, #0]
 80178d4:	68fa      	ldr	r2, [r7, #12]
 80178d6:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 80178da:	f023 0303 	bic.w	r3, r3, #3
 80178de:	6013      	str	r3, [r2, #0]
 80178e0:	68fb      	ldr	r3, [r7, #12]
 80178e2:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80178e6:	685b      	ldr	r3, [r3, #4]
 80178e8:	68fa      	ldr	r2, [r7, #12]
 80178ea:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 80178ee:	f023 0302 	bic.w	r3, r3, #2
 80178f2:	6053      	str	r3, [r2, #4]
 80178f4:	2300      	movs	r3, #0
 80178f6:	4618      	mov	r0, r3
 80178f8:	3714      	adds	r7, #20
 80178fa:	46bd      	mov	sp, r7
 80178fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017900:	4770      	bx	lr

08017902 <USB_DevDisconnect>:
 8017902:	b480      	push	{r7}
 8017904:	b085      	sub	sp, #20
 8017906:	af00      	add	r7, sp, #0
 8017908:	6078      	str	r0, [r7, #4]
 801790a:	687b      	ldr	r3, [r7, #4]
 801790c:	60fb      	str	r3, [r7, #12]
 801790e:	68fb      	ldr	r3, [r7, #12]
 8017910:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 8017914:	681b      	ldr	r3, [r3, #0]
 8017916:	68fa      	ldr	r2, [r7, #12]
 8017918:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 801791c:	f023 0303 	bic.w	r3, r3, #3
 8017920:	6013      	str	r3, [r2, #0]
 8017922:	68fb      	ldr	r3, [r7, #12]
 8017924:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8017928:	685b      	ldr	r3, [r3, #4]
 801792a:	68fa      	ldr	r2, [r7, #12]
 801792c:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8017930:	f043 0302 	orr.w	r3, r3, #2
 8017934:	6053      	str	r3, [r2, #4]
 8017936:	2300      	movs	r3, #0
 8017938:	4618      	mov	r0, r3
 801793a:	3714      	adds	r7, #20
 801793c:	46bd      	mov	sp, r7
 801793e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017942:	4770      	bx	lr

08017944 <USB_ReadInterrupts>:
 8017944:	b480      	push	{r7}
 8017946:	b085      	sub	sp, #20
 8017948:	af00      	add	r7, sp, #0
 801794a:	6078      	str	r0, [r7, #4]
 801794c:	687b      	ldr	r3, [r7, #4]
 801794e:	695b      	ldr	r3, [r3, #20]
 8017950:	60fb      	str	r3, [r7, #12]
 8017952:	687b      	ldr	r3, [r7, #4]
 8017954:	699b      	ldr	r3, [r3, #24]
 8017956:	68fa      	ldr	r2, [r7, #12]
 8017958:	4013      	ands	r3, r2
 801795a:	60fb      	str	r3, [r7, #12]
 801795c:	68fb      	ldr	r3, [r7, #12]
 801795e:	4618      	mov	r0, r3
 8017960:	3714      	adds	r7, #20
 8017962:	46bd      	mov	sp, r7
 8017964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017968:	4770      	bx	lr

0801796a <USB_ReadDevAllOutEpInterrupt>:
 801796a:	b480      	push	{r7}
 801796c:	b085      	sub	sp, #20
 801796e:	af00      	add	r7, sp, #0
 8017970:	6078      	str	r0, [r7, #4]
 8017972:	687b      	ldr	r3, [r7, #4]
 8017974:	60fb      	str	r3, [r7, #12]
 8017976:	68fb      	ldr	r3, [r7, #12]
 8017978:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 801797c:	699b      	ldr	r3, [r3, #24]
 801797e:	60bb      	str	r3, [r7, #8]
 8017980:	68fb      	ldr	r3, [r7, #12]
 8017982:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8017986:	69db      	ldr	r3, [r3, #28]
 8017988:	68ba      	ldr	r2, [r7, #8]
 801798a:	4013      	ands	r3, r2
 801798c:	60bb      	str	r3, [r7, #8]
 801798e:	68bb      	ldr	r3, [r7, #8]
 8017990:	0c1b      	lsrs	r3, r3, #16
 8017992:	4618      	mov	r0, r3
 8017994:	3714      	adds	r7, #20
 8017996:	46bd      	mov	sp, r7
 8017998:	f85d 7b04 	ldr.w	r7, [sp], #4
 801799c:	4770      	bx	lr

0801799e <USB_ReadDevAllInEpInterrupt>:
 801799e:	b480      	push	{r7}
 80179a0:	b085      	sub	sp, #20
 80179a2:	af00      	add	r7, sp, #0
 80179a4:	6078      	str	r0, [r7, #4]
 80179a6:	687b      	ldr	r3, [r7, #4]
 80179a8:	60fb      	str	r3, [r7, #12]
 80179aa:	68fb      	ldr	r3, [r7, #12]
 80179ac:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80179b0:	699b      	ldr	r3, [r3, #24]
 80179b2:	60bb      	str	r3, [r7, #8]
 80179b4:	68fb      	ldr	r3, [r7, #12]
 80179b6:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80179ba:	69db      	ldr	r3, [r3, #28]
 80179bc:	68ba      	ldr	r2, [r7, #8]
 80179be:	4013      	ands	r3, r2
 80179c0:	60bb      	str	r3, [r7, #8]
 80179c2:	68bb      	ldr	r3, [r7, #8]
 80179c4:	b29b      	uxth	r3, r3
 80179c6:	4618      	mov	r0, r3
 80179c8:	3714      	adds	r7, #20
 80179ca:	46bd      	mov	sp, r7
 80179cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80179d0:	4770      	bx	lr

080179d2 <USB_ReadDevOutEPInterrupt>:
 80179d2:	b480      	push	{r7}
 80179d4:	b085      	sub	sp, #20
 80179d6:	af00      	add	r7, sp, #0
 80179d8:	6078      	str	r0, [r7, #4]
 80179da:	460b      	mov	r3, r1
 80179dc:	70fb      	strb	r3, [r7, #3]
 80179de:	687b      	ldr	r3, [r7, #4]
 80179e0:	60fb      	str	r3, [r7, #12]
 80179e2:	78fb      	ldrb	r3, [r7, #3]
 80179e4:	015a      	lsls	r2, r3, #5
 80179e6:	68fb      	ldr	r3, [r7, #12]
 80179e8:	4413      	add	r3, r2
 80179ea:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 80179ee:	689b      	ldr	r3, [r3, #8]
 80179f0:	60bb      	str	r3, [r7, #8]
 80179f2:	68fb      	ldr	r3, [r7, #12]
 80179f4:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 80179f8:	695b      	ldr	r3, [r3, #20]
 80179fa:	68ba      	ldr	r2, [r7, #8]
 80179fc:	4013      	ands	r3, r2
 80179fe:	60bb      	str	r3, [r7, #8]
 8017a00:	68bb      	ldr	r3, [r7, #8]
 8017a02:	4618      	mov	r0, r3
 8017a04:	3714      	adds	r7, #20
 8017a06:	46bd      	mov	sp, r7
 8017a08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017a0c:	4770      	bx	lr

08017a0e <USB_ReadDevInEPInterrupt>:
 8017a0e:	b480      	push	{r7}
 8017a10:	b087      	sub	sp, #28
 8017a12:	af00      	add	r7, sp, #0
 8017a14:	6078      	str	r0, [r7, #4]
 8017a16:	460b      	mov	r3, r1
 8017a18:	70fb      	strb	r3, [r7, #3]
 8017a1a:	687b      	ldr	r3, [r7, #4]
 8017a1c:	617b      	str	r3, [r7, #20]
 8017a1e:	697b      	ldr	r3, [r7, #20]
 8017a20:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8017a24:	691b      	ldr	r3, [r3, #16]
 8017a26:	613b      	str	r3, [r7, #16]
 8017a28:	697b      	ldr	r3, [r7, #20]
 8017a2a:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8017a2e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8017a30:	60fb      	str	r3, [r7, #12]
 8017a32:	78fb      	ldrb	r3, [r7, #3]
 8017a34:	f003 030f 	and.w	r3, r3, #15
 8017a38:	68fa      	ldr	r2, [r7, #12]
 8017a3a:	fa22 f303 	lsr.w	r3, r2, r3
 8017a3e:	01db      	lsls	r3, r3, #7
 8017a40:	b2db      	uxtb	r3, r3
 8017a42:	693a      	ldr	r2, [r7, #16]
 8017a44:	4313      	orrs	r3, r2
 8017a46:	613b      	str	r3, [r7, #16]
 8017a48:	78fb      	ldrb	r3, [r7, #3]
 8017a4a:	015a      	lsls	r2, r3, #5
 8017a4c:	697b      	ldr	r3, [r7, #20]
 8017a4e:	4413      	add	r3, r2
 8017a50:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017a54:	689b      	ldr	r3, [r3, #8]
 8017a56:	693a      	ldr	r2, [r7, #16]
 8017a58:	4013      	ands	r3, r2
 8017a5a:	60bb      	str	r3, [r7, #8]
 8017a5c:	68bb      	ldr	r3, [r7, #8]
 8017a5e:	4618      	mov	r0, r3
 8017a60:	371c      	adds	r7, #28
 8017a62:	46bd      	mov	sp, r7
 8017a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017a68:	4770      	bx	lr

08017a6a <USB_GetMode>:
 8017a6a:	b480      	push	{r7}
 8017a6c:	b083      	sub	sp, #12
 8017a6e:	af00      	add	r7, sp, #0
 8017a70:	6078      	str	r0, [r7, #4]
 8017a72:	687b      	ldr	r3, [r7, #4]
 8017a74:	695b      	ldr	r3, [r3, #20]
 8017a76:	f003 0301 	and.w	r3, r3, #1
 8017a7a:	4618      	mov	r0, r3
 8017a7c:	370c      	adds	r7, #12
 8017a7e:	46bd      	mov	sp, r7
 8017a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017a84:	4770      	bx	lr

08017a86 <USB_ActivateSetup>:
 8017a86:	b480      	push	{r7}
 8017a88:	b085      	sub	sp, #20
 8017a8a:	af00      	add	r7, sp, #0
 8017a8c:	6078      	str	r0, [r7, #4]
 8017a8e:	687b      	ldr	r3, [r7, #4]
 8017a90:	60fb      	str	r3, [r7, #12]
 8017a92:	68fb      	ldr	r3, [r7, #12]
 8017a94:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
 8017a98:	681b      	ldr	r3, [r3, #0]
 8017a9a:	68fa      	ldr	r2, [r7, #12]
 8017a9c:	f502 6210 	add.w	r2, r2, #2304	@ 0x900
 8017aa0:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8017aa4:	f023 0307 	bic.w	r3, r3, #7
 8017aa8:	6013      	str	r3, [r2, #0]
 8017aaa:	68fb      	ldr	r3, [r7, #12]
 8017aac:	f503 6300 	add.w	r3, r3, #2048	@ 0x800
 8017ab0:	685b      	ldr	r3, [r3, #4]
 8017ab2:	68fa      	ldr	r2, [r7, #12]
 8017ab4:	f502 6200 	add.w	r2, r2, #2048	@ 0x800
 8017ab8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8017abc:	6053      	str	r3, [r2, #4]
 8017abe:	2300      	movs	r3, #0
 8017ac0:	4618      	mov	r0, r3
 8017ac2:	3714      	adds	r7, #20
 8017ac4:	46bd      	mov	sp, r7
 8017ac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017aca:	4770      	bx	lr

08017acc <USB_EP0_OutStart>:
 8017acc:	b480      	push	{r7}
 8017ace:	b087      	sub	sp, #28
 8017ad0:	af00      	add	r7, sp, #0
 8017ad2:	60f8      	str	r0, [r7, #12]
 8017ad4:	460b      	mov	r3, r1
 8017ad6:	607a      	str	r2, [r7, #4]
 8017ad8:	72fb      	strb	r3, [r7, #11]
 8017ada:	68fb      	ldr	r3, [r7, #12]
 8017adc:	617b      	str	r3, [r7, #20]
 8017ade:	68fb      	ldr	r3, [r7, #12]
 8017ae0:	333c      	adds	r3, #60	@ 0x3c
 8017ae2:	3304      	adds	r3, #4
 8017ae4:	681b      	ldr	r3, [r3, #0]
 8017ae6:	613b      	str	r3, [r7, #16]
 8017ae8:	693b      	ldr	r3, [r7, #16]
 8017aea:	4a26      	ldr	r2, [pc, #152]	@ (8017b84 <USB_EP0_OutStart+0xb8>)
 8017aec:	4293      	cmp	r3, r2
 8017aee:	d90a      	bls.n	8017b06 <USB_EP0_OutStart+0x3a>
 8017af0:	697b      	ldr	r3, [r7, #20]
 8017af2:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017af6:	681b      	ldr	r3, [r3, #0]
 8017af8:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 8017afc:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8017b00:	d101      	bne.n	8017b06 <USB_EP0_OutStart+0x3a>
 8017b02:	2300      	movs	r3, #0
 8017b04:	e037      	b.n	8017b76 <USB_EP0_OutStart+0xaa>
 8017b06:	697b      	ldr	r3, [r7, #20]
 8017b08:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017b0c:	461a      	mov	r2, r3
 8017b0e:	2300      	movs	r3, #0
 8017b10:	6113      	str	r3, [r2, #16]
 8017b12:	697b      	ldr	r3, [r7, #20]
 8017b14:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017b18:	691b      	ldr	r3, [r3, #16]
 8017b1a:	697a      	ldr	r2, [r7, #20]
 8017b1c:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017b20:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8017b24:	6113      	str	r3, [r2, #16]
 8017b26:	697b      	ldr	r3, [r7, #20]
 8017b28:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017b2c:	691b      	ldr	r3, [r3, #16]
 8017b2e:	697a      	ldr	r2, [r7, #20]
 8017b30:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017b34:	f043 0318 	orr.w	r3, r3, #24
 8017b38:	6113      	str	r3, [r2, #16]
 8017b3a:	697b      	ldr	r3, [r7, #20]
 8017b3c:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017b40:	691b      	ldr	r3, [r3, #16]
 8017b42:	697a      	ldr	r2, [r7, #20]
 8017b44:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017b48:	f043 43c0 	orr.w	r3, r3, #1610612736	@ 0x60000000
 8017b4c:	6113      	str	r3, [r2, #16]
 8017b4e:	7afb      	ldrb	r3, [r7, #11]
 8017b50:	2b01      	cmp	r3, #1
 8017b52:	d10f      	bne.n	8017b74 <USB_EP0_OutStart+0xa8>
 8017b54:	697b      	ldr	r3, [r7, #20]
 8017b56:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017b5a:	461a      	mov	r2, r3
 8017b5c:	687b      	ldr	r3, [r7, #4]
 8017b5e:	6153      	str	r3, [r2, #20]
 8017b60:	697b      	ldr	r3, [r7, #20]
 8017b62:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8017b66:	681b      	ldr	r3, [r3, #0]
 8017b68:	697a      	ldr	r2, [r7, #20]
 8017b6a:	f502 6230 	add.w	r2, r2, #2816	@ 0xb00
 8017b6e:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
 8017b72:	6013      	str	r3, [r2, #0]
 8017b74:	2300      	movs	r3, #0
 8017b76:	4618      	mov	r0, r3
 8017b78:	371c      	adds	r7, #28
 8017b7a:	46bd      	mov	sp, r7
 8017b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017b80:	4770      	bx	lr
 8017b82:	bf00      	nop
 8017b84:	4f54300a 	.word	0x4f54300a

08017b88 <USB_CoreReset>:
 8017b88:	b480      	push	{r7}
 8017b8a:	b085      	sub	sp, #20
 8017b8c:	af00      	add	r7, sp, #0
 8017b8e:	6078      	str	r0, [r7, #4]
 8017b90:	2300      	movs	r3, #0
 8017b92:	60fb      	str	r3, [r7, #12]
 8017b94:	68fb      	ldr	r3, [r7, #12]
 8017b96:	3301      	adds	r3, #1
 8017b98:	60fb      	str	r3, [r7, #12]
 8017b9a:	68fb      	ldr	r3, [r7, #12]
 8017b9c:	4a13      	ldr	r2, [pc, #76]	@ (8017bec <USB_CoreReset+0x64>)
 8017b9e:	4293      	cmp	r3, r2
 8017ba0:	d901      	bls.n	8017ba6 <USB_CoreReset+0x1e>
 8017ba2:	2303      	movs	r3, #3
 8017ba4:	e01b      	b.n	8017bde <USB_CoreReset+0x56>
 8017ba6:	687b      	ldr	r3, [r7, #4]
 8017ba8:	691b      	ldr	r3, [r3, #16]
 8017baa:	2b00      	cmp	r3, #0
 8017bac:	daf2      	bge.n	8017b94 <USB_CoreReset+0xc>
 8017bae:	2300      	movs	r3, #0
 8017bb0:	60fb      	str	r3, [r7, #12]
 8017bb2:	687b      	ldr	r3, [r7, #4]
 8017bb4:	691b      	ldr	r3, [r3, #16]
 8017bb6:	f043 0201 	orr.w	r2, r3, #1
 8017bba:	687b      	ldr	r3, [r7, #4]
 8017bbc:	611a      	str	r2, [r3, #16]
 8017bbe:	68fb      	ldr	r3, [r7, #12]
 8017bc0:	3301      	adds	r3, #1
 8017bc2:	60fb      	str	r3, [r7, #12]
 8017bc4:	68fb      	ldr	r3, [r7, #12]
 8017bc6:	4a09      	ldr	r2, [pc, #36]	@ (8017bec <USB_CoreReset+0x64>)
 8017bc8:	4293      	cmp	r3, r2
 8017bca:	d901      	bls.n	8017bd0 <USB_CoreReset+0x48>
 8017bcc:	2303      	movs	r3, #3
 8017bce:	e006      	b.n	8017bde <USB_CoreReset+0x56>
 8017bd0:	687b      	ldr	r3, [r7, #4]
 8017bd2:	691b      	ldr	r3, [r3, #16]
 8017bd4:	f003 0301 	and.w	r3, r3, #1
 8017bd8:	2b01      	cmp	r3, #1
 8017bda:	d0f0      	beq.n	8017bbe <USB_CoreReset+0x36>
 8017bdc:	2300      	movs	r3, #0
 8017bde:	4618      	mov	r0, r3
 8017be0:	3714      	adds	r7, #20
 8017be2:	46bd      	mov	sp, r7
 8017be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8017be8:	4770      	bx	lr
 8017bea:	bf00      	nop
 8017bec:	00030d40 	.word	0x00030d40

08017bf0 <USBD_CDC_Init>:
 8017bf0:	b580      	push	{r7, lr}
 8017bf2:	b084      	sub	sp, #16
 8017bf4:	af00      	add	r7, sp, #0
 8017bf6:	6078      	str	r0, [r7, #4]
 8017bf8:	460b      	mov	r3, r1
 8017bfa:	70fb      	strb	r3, [r7, #3]
 8017bfc:	f44f 7007 	mov.w	r0, #540	@ 0x21c
 8017c00:	f005 fd6a 	bl	801d6d8 <USBD_static_malloc>
 8017c04:	60f8      	str	r0, [r7, #12]
 8017c06:	68fb      	ldr	r3, [r7, #12]
 8017c08:	2b00      	cmp	r3, #0
 8017c0a:	d109      	bne.n	8017c20 <USBD_CDC_Init+0x30>
 8017c0c:	687b      	ldr	r3, [r7, #4]
 8017c0e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017c12:	687b      	ldr	r3, [r7, #4]
 8017c14:	32b0      	adds	r2, #176	@ 0xb0
 8017c16:	2100      	movs	r1, #0
 8017c18:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8017c1c:	2302      	movs	r3, #2
 8017c1e:	e0d4      	b.n	8017dca <USBD_CDC_Init+0x1da>
 8017c20:	f44f 7207 	mov.w	r2, #540	@ 0x21c
 8017c24:	2100      	movs	r1, #0
 8017c26:	68f8      	ldr	r0, [r7, #12]
 8017c28:	f005 fed3 	bl	801d9d2 <memset>
 8017c2c:	687b      	ldr	r3, [r7, #4]
 8017c2e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017c32:	687b      	ldr	r3, [r7, #4]
 8017c34:	32b0      	adds	r2, #176	@ 0xb0
 8017c36:	68f9      	ldr	r1, [r7, #12]
 8017c38:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8017c3c:	687b      	ldr	r3, [r7, #4]
 8017c3e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017c42:	687b      	ldr	r3, [r7, #4]
 8017c44:	32b0      	adds	r2, #176	@ 0xb0
 8017c46:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017c4a:	687b      	ldr	r3, [r7, #4]
 8017c4c:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 8017c50:	687b      	ldr	r3, [r7, #4]
 8017c52:	7c1b      	ldrb	r3, [r3, #16]
 8017c54:	2b00      	cmp	r3, #0
 8017c56:	d138      	bne.n	8017cca <USBD_CDC_Init+0xda>
 8017c58:	4b5e      	ldr	r3, [pc, #376]	@ (8017dd4 <USBD_CDC_Init+0x1e4>)
 8017c5a:	7819      	ldrb	r1, [r3, #0]
 8017c5c:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8017c60:	2202      	movs	r2, #2
 8017c62:	6878      	ldr	r0, [r7, #4]
 8017c64:	f005 fc15 	bl	801d492 <USBD_LL_OpenEP>
 8017c68:	4b5a      	ldr	r3, [pc, #360]	@ (8017dd4 <USBD_CDC_Init+0x1e4>)
 8017c6a:	781b      	ldrb	r3, [r3, #0]
 8017c6c:	f003 020f 	and.w	r2, r3, #15
 8017c70:	6879      	ldr	r1, [r7, #4]
 8017c72:	4613      	mov	r3, r2
 8017c74:	009b      	lsls	r3, r3, #2
 8017c76:	4413      	add	r3, r2
 8017c78:	009b      	lsls	r3, r3, #2
 8017c7a:	440b      	add	r3, r1
 8017c7c:	3324      	adds	r3, #36	@ 0x24
 8017c7e:	2201      	movs	r2, #1
 8017c80:	801a      	strh	r2, [r3, #0]
 8017c82:	4b55      	ldr	r3, [pc, #340]	@ (8017dd8 <USBD_CDC_Init+0x1e8>)
 8017c84:	7819      	ldrb	r1, [r3, #0]
 8017c86:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8017c8a:	2202      	movs	r2, #2
 8017c8c:	6878      	ldr	r0, [r7, #4]
 8017c8e:	f005 fc00 	bl	801d492 <USBD_LL_OpenEP>
 8017c92:	4b51      	ldr	r3, [pc, #324]	@ (8017dd8 <USBD_CDC_Init+0x1e8>)
 8017c94:	781b      	ldrb	r3, [r3, #0]
 8017c96:	f003 020f 	and.w	r2, r3, #15
 8017c9a:	6879      	ldr	r1, [r7, #4]
 8017c9c:	4613      	mov	r3, r2
 8017c9e:	009b      	lsls	r3, r3, #2
 8017ca0:	4413      	add	r3, r2
 8017ca2:	009b      	lsls	r3, r3, #2
 8017ca4:	440b      	add	r3, r1
 8017ca6:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8017caa:	2201      	movs	r2, #1
 8017cac:	801a      	strh	r2, [r3, #0]
 8017cae:	4b4b      	ldr	r3, [pc, #300]	@ (8017ddc <USBD_CDC_Init+0x1ec>)
 8017cb0:	781b      	ldrb	r3, [r3, #0]
 8017cb2:	f003 020f 	and.w	r2, r3, #15
 8017cb6:	6879      	ldr	r1, [r7, #4]
 8017cb8:	4613      	mov	r3, r2
 8017cba:	009b      	lsls	r3, r3, #2
 8017cbc:	4413      	add	r3, r2
 8017cbe:	009b      	lsls	r3, r3, #2
 8017cc0:	440b      	add	r3, r1
 8017cc2:	3326      	adds	r3, #38	@ 0x26
 8017cc4:	2210      	movs	r2, #16
 8017cc6:	801a      	strh	r2, [r3, #0]
 8017cc8:	e035      	b.n	8017d36 <USBD_CDC_Init+0x146>
 8017cca:	4b42      	ldr	r3, [pc, #264]	@ (8017dd4 <USBD_CDC_Init+0x1e4>)
 8017ccc:	7819      	ldrb	r1, [r3, #0]
 8017cce:	2340      	movs	r3, #64	@ 0x40
 8017cd0:	2202      	movs	r2, #2
 8017cd2:	6878      	ldr	r0, [r7, #4]
 8017cd4:	f005 fbdd 	bl	801d492 <USBD_LL_OpenEP>
 8017cd8:	4b3e      	ldr	r3, [pc, #248]	@ (8017dd4 <USBD_CDC_Init+0x1e4>)
 8017cda:	781b      	ldrb	r3, [r3, #0]
 8017cdc:	f003 020f 	and.w	r2, r3, #15
 8017ce0:	6879      	ldr	r1, [r7, #4]
 8017ce2:	4613      	mov	r3, r2
 8017ce4:	009b      	lsls	r3, r3, #2
 8017ce6:	4413      	add	r3, r2
 8017ce8:	009b      	lsls	r3, r3, #2
 8017cea:	440b      	add	r3, r1
 8017cec:	3324      	adds	r3, #36	@ 0x24
 8017cee:	2201      	movs	r2, #1
 8017cf0:	801a      	strh	r2, [r3, #0]
 8017cf2:	4b39      	ldr	r3, [pc, #228]	@ (8017dd8 <USBD_CDC_Init+0x1e8>)
 8017cf4:	7819      	ldrb	r1, [r3, #0]
 8017cf6:	2340      	movs	r3, #64	@ 0x40
 8017cf8:	2202      	movs	r2, #2
 8017cfa:	6878      	ldr	r0, [r7, #4]
 8017cfc:	f005 fbc9 	bl	801d492 <USBD_LL_OpenEP>
 8017d00:	4b35      	ldr	r3, [pc, #212]	@ (8017dd8 <USBD_CDC_Init+0x1e8>)
 8017d02:	781b      	ldrb	r3, [r3, #0]
 8017d04:	f003 020f 	and.w	r2, r3, #15
 8017d08:	6879      	ldr	r1, [r7, #4]
 8017d0a:	4613      	mov	r3, r2
 8017d0c:	009b      	lsls	r3, r3, #2
 8017d0e:	4413      	add	r3, r2
 8017d10:	009b      	lsls	r3, r3, #2
 8017d12:	440b      	add	r3, r1
 8017d14:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8017d18:	2201      	movs	r2, #1
 8017d1a:	801a      	strh	r2, [r3, #0]
 8017d1c:	4b2f      	ldr	r3, [pc, #188]	@ (8017ddc <USBD_CDC_Init+0x1ec>)
 8017d1e:	781b      	ldrb	r3, [r3, #0]
 8017d20:	f003 020f 	and.w	r2, r3, #15
 8017d24:	6879      	ldr	r1, [r7, #4]
 8017d26:	4613      	mov	r3, r2
 8017d28:	009b      	lsls	r3, r3, #2
 8017d2a:	4413      	add	r3, r2
 8017d2c:	009b      	lsls	r3, r3, #2
 8017d2e:	440b      	add	r3, r1
 8017d30:	3326      	adds	r3, #38	@ 0x26
 8017d32:	2210      	movs	r2, #16
 8017d34:	801a      	strh	r2, [r3, #0]
 8017d36:	4b29      	ldr	r3, [pc, #164]	@ (8017ddc <USBD_CDC_Init+0x1ec>)
 8017d38:	7819      	ldrb	r1, [r3, #0]
 8017d3a:	2308      	movs	r3, #8
 8017d3c:	2203      	movs	r2, #3
 8017d3e:	6878      	ldr	r0, [r7, #4]
 8017d40:	f005 fba7 	bl	801d492 <USBD_LL_OpenEP>
 8017d44:	4b25      	ldr	r3, [pc, #148]	@ (8017ddc <USBD_CDC_Init+0x1ec>)
 8017d46:	781b      	ldrb	r3, [r3, #0]
 8017d48:	f003 020f 	and.w	r2, r3, #15
 8017d4c:	6879      	ldr	r1, [r7, #4]
 8017d4e:	4613      	mov	r3, r2
 8017d50:	009b      	lsls	r3, r3, #2
 8017d52:	4413      	add	r3, r2
 8017d54:	009b      	lsls	r3, r3, #2
 8017d56:	440b      	add	r3, r1
 8017d58:	3324      	adds	r3, #36	@ 0x24
 8017d5a:	2201      	movs	r2, #1
 8017d5c:	801a      	strh	r2, [r3, #0]
 8017d5e:	68fb      	ldr	r3, [r7, #12]
 8017d60:	2200      	movs	r2, #0
 8017d62:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8017d66:	687b      	ldr	r3, [r7, #4]
 8017d68:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8017d6c:	687a      	ldr	r2, [r7, #4]
 8017d6e:	33b0      	adds	r3, #176	@ 0xb0
 8017d70:	009b      	lsls	r3, r3, #2
 8017d72:	4413      	add	r3, r2
 8017d74:	685b      	ldr	r3, [r3, #4]
 8017d76:	681b      	ldr	r3, [r3, #0]
 8017d78:	4798      	blx	r3
 8017d7a:	68fb      	ldr	r3, [r7, #12]
 8017d7c:	2200      	movs	r2, #0
 8017d7e:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8017d82:	68fb      	ldr	r3, [r7, #12]
 8017d84:	2200      	movs	r2, #0
 8017d86:	f8c3 2218 	str.w	r2, [r3, #536]	@ 0x218
 8017d8a:	68fb      	ldr	r3, [r7, #12]
 8017d8c:	f8d3 3204 	ldr.w	r3, [r3, #516]	@ 0x204
 8017d90:	2b00      	cmp	r3, #0
 8017d92:	d101      	bne.n	8017d98 <USBD_CDC_Init+0x1a8>
 8017d94:	2302      	movs	r3, #2
 8017d96:	e018      	b.n	8017dca <USBD_CDC_Init+0x1da>
 8017d98:	687b      	ldr	r3, [r7, #4]
 8017d9a:	7c1b      	ldrb	r3, [r3, #16]
 8017d9c:	2b00      	cmp	r3, #0
 8017d9e:	d10a      	bne.n	8017db6 <USBD_CDC_Init+0x1c6>
 8017da0:	4b0d      	ldr	r3, [pc, #52]	@ (8017dd8 <USBD_CDC_Init+0x1e8>)
 8017da2:	7819      	ldrb	r1, [r3, #0]
 8017da4:	68fb      	ldr	r3, [r7, #12]
 8017da6:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8017daa:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8017dae:	6878      	ldr	r0, [r7, #4]
 8017db0:	f005 fc5e 	bl	801d670 <USBD_LL_PrepareReceive>
 8017db4:	e008      	b.n	8017dc8 <USBD_CDC_Init+0x1d8>
 8017db6:	4b08      	ldr	r3, [pc, #32]	@ (8017dd8 <USBD_CDC_Init+0x1e8>)
 8017db8:	7819      	ldrb	r1, [r3, #0]
 8017dba:	68fb      	ldr	r3, [r7, #12]
 8017dbc:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8017dc0:	2340      	movs	r3, #64	@ 0x40
 8017dc2:	6878      	ldr	r0, [r7, #4]
 8017dc4:	f005 fc54 	bl	801d670 <USBD_LL_PrepareReceive>
 8017dc8:	2300      	movs	r3, #0
 8017dca:	4618      	mov	r0, r3
 8017dcc:	3710      	adds	r7, #16
 8017dce:	46bd      	mov	sp, r7
 8017dd0:	bd80      	pop	{r7, pc}
 8017dd2:	bf00      	nop
 8017dd4:	200000d7 	.word	0x200000d7
 8017dd8:	200000d8 	.word	0x200000d8
 8017ddc:	200000d9 	.word	0x200000d9

08017de0 <USBD_CDC_DeInit>:
 8017de0:	b580      	push	{r7, lr}
 8017de2:	b082      	sub	sp, #8
 8017de4:	af00      	add	r7, sp, #0
 8017de6:	6078      	str	r0, [r7, #4]
 8017de8:	460b      	mov	r3, r1
 8017dea:	70fb      	strb	r3, [r7, #3]
 8017dec:	4b3a      	ldr	r3, [pc, #232]	@ (8017ed8 <USBD_CDC_DeInit+0xf8>)
 8017dee:	781b      	ldrb	r3, [r3, #0]
 8017df0:	4619      	mov	r1, r3
 8017df2:	6878      	ldr	r0, [r7, #4]
 8017df4:	f005 fb73 	bl	801d4de <USBD_LL_CloseEP>
 8017df8:	4b37      	ldr	r3, [pc, #220]	@ (8017ed8 <USBD_CDC_DeInit+0xf8>)
 8017dfa:	781b      	ldrb	r3, [r3, #0]
 8017dfc:	f003 020f 	and.w	r2, r3, #15
 8017e00:	6879      	ldr	r1, [r7, #4]
 8017e02:	4613      	mov	r3, r2
 8017e04:	009b      	lsls	r3, r3, #2
 8017e06:	4413      	add	r3, r2
 8017e08:	009b      	lsls	r3, r3, #2
 8017e0a:	440b      	add	r3, r1
 8017e0c:	3324      	adds	r3, #36	@ 0x24
 8017e0e:	2200      	movs	r2, #0
 8017e10:	801a      	strh	r2, [r3, #0]
 8017e12:	4b32      	ldr	r3, [pc, #200]	@ (8017edc <USBD_CDC_DeInit+0xfc>)
 8017e14:	781b      	ldrb	r3, [r3, #0]
 8017e16:	4619      	mov	r1, r3
 8017e18:	6878      	ldr	r0, [r7, #4]
 8017e1a:	f005 fb60 	bl	801d4de <USBD_LL_CloseEP>
 8017e1e:	4b2f      	ldr	r3, [pc, #188]	@ (8017edc <USBD_CDC_DeInit+0xfc>)
 8017e20:	781b      	ldrb	r3, [r3, #0]
 8017e22:	f003 020f 	and.w	r2, r3, #15
 8017e26:	6879      	ldr	r1, [r7, #4]
 8017e28:	4613      	mov	r3, r2
 8017e2a:	009b      	lsls	r3, r3, #2
 8017e2c:	4413      	add	r3, r2
 8017e2e:	009b      	lsls	r3, r3, #2
 8017e30:	440b      	add	r3, r1
 8017e32:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 8017e36:	2200      	movs	r2, #0
 8017e38:	801a      	strh	r2, [r3, #0]
 8017e3a:	4b29      	ldr	r3, [pc, #164]	@ (8017ee0 <USBD_CDC_DeInit+0x100>)
 8017e3c:	781b      	ldrb	r3, [r3, #0]
 8017e3e:	4619      	mov	r1, r3
 8017e40:	6878      	ldr	r0, [r7, #4]
 8017e42:	f005 fb4c 	bl	801d4de <USBD_LL_CloseEP>
 8017e46:	4b26      	ldr	r3, [pc, #152]	@ (8017ee0 <USBD_CDC_DeInit+0x100>)
 8017e48:	781b      	ldrb	r3, [r3, #0]
 8017e4a:	f003 020f 	and.w	r2, r3, #15
 8017e4e:	6879      	ldr	r1, [r7, #4]
 8017e50:	4613      	mov	r3, r2
 8017e52:	009b      	lsls	r3, r3, #2
 8017e54:	4413      	add	r3, r2
 8017e56:	009b      	lsls	r3, r3, #2
 8017e58:	440b      	add	r3, r1
 8017e5a:	3324      	adds	r3, #36	@ 0x24
 8017e5c:	2200      	movs	r2, #0
 8017e5e:	801a      	strh	r2, [r3, #0]
 8017e60:	4b1f      	ldr	r3, [pc, #124]	@ (8017ee0 <USBD_CDC_DeInit+0x100>)
 8017e62:	781b      	ldrb	r3, [r3, #0]
 8017e64:	f003 020f 	and.w	r2, r3, #15
 8017e68:	6879      	ldr	r1, [r7, #4]
 8017e6a:	4613      	mov	r3, r2
 8017e6c:	009b      	lsls	r3, r3, #2
 8017e6e:	4413      	add	r3, r2
 8017e70:	009b      	lsls	r3, r3, #2
 8017e72:	440b      	add	r3, r1
 8017e74:	3326      	adds	r3, #38	@ 0x26
 8017e76:	2200      	movs	r2, #0
 8017e78:	801a      	strh	r2, [r3, #0]
 8017e7a:	687b      	ldr	r3, [r7, #4]
 8017e7c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017e80:	687b      	ldr	r3, [r7, #4]
 8017e82:	32b0      	adds	r2, #176	@ 0xb0
 8017e84:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8017e88:	2b00      	cmp	r3, #0
 8017e8a:	d01f      	beq.n	8017ecc <USBD_CDC_DeInit+0xec>
 8017e8c:	687b      	ldr	r3, [r7, #4]
 8017e8e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8017e92:	687a      	ldr	r2, [r7, #4]
 8017e94:	33b0      	adds	r3, #176	@ 0xb0
 8017e96:	009b      	lsls	r3, r3, #2
 8017e98:	4413      	add	r3, r2
 8017e9a:	685b      	ldr	r3, [r3, #4]
 8017e9c:	685b      	ldr	r3, [r3, #4]
 8017e9e:	4798      	blx	r3
 8017ea0:	687b      	ldr	r3, [r7, #4]
 8017ea2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017ea6:	687b      	ldr	r3, [r7, #4]
 8017ea8:	32b0      	adds	r2, #176	@ 0xb0
 8017eaa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8017eae:	4618      	mov	r0, r3
 8017eb0:	f005 fc20 	bl	801d6f4 <USBD_static_free>
 8017eb4:	687b      	ldr	r3, [r7, #4]
 8017eb6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017eba:	687b      	ldr	r3, [r7, #4]
 8017ebc:	32b0      	adds	r2, #176	@ 0xb0
 8017ebe:	2100      	movs	r1, #0
 8017ec0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8017ec4:	687b      	ldr	r3, [r7, #4]
 8017ec6:	2200      	movs	r2, #0
 8017ec8:	f8c3 22bc 	str.w	r2, [r3, #700]	@ 0x2bc
 8017ecc:	2300      	movs	r3, #0
 8017ece:	4618      	mov	r0, r3
 8017ed0:	3708      	adds	r7, #8
 8017ed2:	46bd      	mov	sp, r7
 8017ed4:	bd80      	pop	{r7, pc}
 8017ed6:	bf00      	nop
 8017ed8:	200000d7 	.word	0x200000d7
 8017edc:	200000d8 	.word	0x200000d8
 8017ee0:	200000d9 	.word	0x200000d9

08017ee4 <USBD_CDC_Setup>:
 8017ee4:	b580      	push	{r7, lr}
 8017ee6:	b086      	sub	sp, #24
 8017ee8:	af00      	add	r7, sp, #0
 8017eea:	6078      	str	r0, [r7, #4]
 8017eec:	6039      	str	r1, [r7, #0]
 8017eee:	687b      	ldr	r3, [r7, #4]
 8017ef0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8017ef4:	687b      	ldr	r3, [r7, #4]
 8017ef6:	32b0      	adds	r2, #176	@ 0xb0
 8017ef8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8017efc:	613b      	str	r3, [r7, #16]
 8017efe:	2300      	movs	r3, #0
 8017f00:	737b      	strb	r3, [r7, #13]
 8017f02:	2300      	movs	r3, #0
 8017f04:	817b      	strh	r3, [r7, #10]
 8017f06:	2300      	movs	r3, #0
 8017f08:	75fb      	strb	r3, [r7, #23]
 8017f0a:	693b      	ldr	r3, [r7, #16]
 8017f0c:	2b00      	cmp	r3, #0
 8017f0e:	d101      	bne.n	8017f14 <USBD_CDC_Setup+0x30>
 8017f10:	2303      	movs	r3, #3
 8017f12:	e0bf      	b.n	8018094 <USBD_CDC_Setup+0x1b0>
 8017f14:	683b      	ldr	r3, [r7, #0]
 8017f16:	781b      	ldrb	r3, [r3, #0]
 8017f18:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8017f1c:	2b00      	cmp	r3, #0
 8017f1e:	d050      	beq.n	8017fc2 <USBD_CDC_Setup+0xde>
 8017f20:	2b20      	cmp	r3, #32
 8017f22:	f040 80af 	bne.w	8018084 <USBD_CDC_Setup+0x1a0>
 8017f26:	683b      	ldr	r3, [r7, #0]
 8017f28:	88db      	ldrh	r3, [r3, #6]
 8017f2a:	2b00      	cmp	r3, #0
 8017f2c:	d03a      	beq.n	8017fa4 <USBD_CDC_Setup+0xc0>
 8017f2e:	683b      	ldr	r3, [r7, #0]
 8017f30:	781b      	ldrb	r3, [r3, #0]
 8017f32:	b25b      	sxtb	r3, r3
 8017f34:	2b00      	cmp	r3, #0
 8017f36:	da1b      	bge.n	8017f70 <USBD_CDC_Setup+0x8c>
 8017f38:	687b      	ldr	r3, [r7, #4]
 8017f3a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8017f3e:	687a      	ldr	r2, [r7, #4]
 8017f40:	33b0      	adds	r3, #176	@ 0xb0
 8017f42:	009b      	lsls	r3, r3, #2
 8017f44:	4413      	add	r3, r2
 8017f46:	685b      	ldr	r3, [r3, #4]
 8017f48:	689b      	ldr	r3, [r3, #8]
 8017f4a:	683a      	ldr	r2, [r7, #0]
 8017f4c:	7850      	ldrb	r0, [r2, #1]
 8017f4e:	6939      	ldr	r1, [r7, #16]
 8017f50:	683a      	ldr	r2, [r7, #0]
 8017f52:	88d2      	ldrh	r2, [r2, #6]
 8017f54:	4798      	blx	r3
 8017f56:	683b      	ldr	r3, [r7, #0]
 8017f58:	88db      	ldrh	r3, [r3, #6]
 8017f5a:	2b07      	cmp	r3, #7
 8017f5c:	bf28      	it	cs
 8017f5e:	2307      	movcs	r3, #7
 8017f60:	81fb      	strh	r3, [r7, #14]
 8017f62:	693b      	ldr	r3, [r7, #16]
 8017f64:	89fa      	ldrh	r2, [r7, #14]
 8017f66:	4619      	mov	r1, r3
 8017f68:	6878      	ldr	r0, [r7, #4]
 8017f6a:	f001 fd41 	bl	80199f0 <USBD_CtlSendData>
 8017f6e:	e090      	b.n	8018092 <USBD_CDC_Setup+0x1ae>
 8017f70:	683b      	ldr	r3, [r7, #0]
 8017f72:	785a      	ldrb	r2, [r3, #1]
 8017f74:	693b      	ldr	r3, [r7, #16]
 8017f76:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 8017f7a:	683b      	ldr	r3, [r7, #0]
 8017f7c:	88db      	ldrh	r3, [r3, #6]
 8017f7e:	2b3f      	cmp	r3, #63	@ 0x3f
 8017f80:	d803      	bhi.n	8017f8a <USBD_CDC_Setup+0xa6>
 8017f82:	683b      	ldr	r3, [r7, #0]
 8017f84:	88db      	ldrh	r3, [r3, #6]
 8017f86:	b2da      	uxtb	r2, r3
 8017f88:	e000      	b.n	8017f8c <USBD_CDC_Setup+0xa8>
 8017f8a:	2240      	movs	r2, #64	@ 0x40
 8017f8c:	693b      	ldr	r3, [r7, #16]
 8017f8e:	f883 2201 	strb.w	r2, [r3, #513]	@ 0x201
 8017f92:	6939      	ldr	r1, [r7, #16]
 8017f94:	693b      	ldr	r3, [r7, #16]
 8017f96:	f893 3201 	ldrb.w	r3, [r3, #513]	@ 0x201
 8017f9a:	461a      	mov	r2, r3
 8017f9c:	6878      	ldr	r0, [r7, #4]
 8017f9e:	f001 fd53 	bl	8019a48 <USBD_CtlPrepareRx>
 8017fa2:	e076      	b.n	8018092 <USBD_CDC_Setup+0x1ae>
 8017fa4:	687b      	ldr	r3, [r7, #4]
 8017fa6:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8017faa:	687a      	ldr	r2, [r7, #4]
 8017fac:	33b0      	adds	r3, #176	@ 0xb0
 8017fae:	009b      	lsls	r3, r3, #2
 8017fb0:	4413      	add	r3, r2
 8017fb2:	685b      	ldr	r3, [r3, #4]
 8017fb4:	689b      	ldr	r3, [r3, #8]
 8017fb6:	683a      	ldr	r2, [r7, #0]
 8017fb8:	7850      	ldrb	r0, [r2, #1]
 8017fba:	2200      	movs	r2, #0
 8017fbc:	6839      	ldr	r1, [r7, #0]
 8017fbe:	4798      	blx	r3
 8017fc0:	e067      	b.n	8018092 <USBD_CDC_Setup+0x1ae>
 8017fc2:	683b      	ldr	r3, [r7, #0]
 8017fc4:	785b      	ldrb	r3, [r3, #1]
 8017fc6:	2b0b      	cmp	r3, #11
 8017fc8:	d851      	bhi.n	801806e <USBD_CDC_Setup+0x18a>
 8017fca:	a201      	add	r2, pc, #4	@ (adr r2, 8017fd0 <USBD_CDC_Setup+0xec>)
 8017fcc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8017fd0:	08018001 	.word	0x08018001
 8017fd4:	0801807d 	.word	0x0801807d
 8017fd8:	0801806f 	.word	0x0801806f
 8017fdc:	0801806f 	.word	0x0801806f
 8017fe0:	0801806f 	.word	0x0801806f
 8017fe4:	0801806f 	.word	0x0801806f
 8017fe8:	0801806f 	.word	0x0801806f
 8017fec:	0801806f 	.word	0x0801806f
 8017ff0:	0801806f 	.word	0x0801806f
 8017ff4:	0801806f 	.word	0x0801806f
 8017ff8:	0801802b 	.word	0x0801802b
 8017ffc:	08018055 	.word	0x08018055
 8018000:	687b      	ldr	r3, [r7, #4]
 8018002:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018006:	b2db      	uxtb	r3, r3
 8018008:	2b03      	cmp	r3, #3
 801800a:	d107      	bne.n	801801c <USBD_CDC_Setup+0x138>
 801800c:	f107 030a 	add.w	r3, r7, #10
 8018010:	2202      	movs	r2, #2
 8018012:	4619      	mov	r1, r3
 8018014:	6878      	ldr	r0, [r7, #4]
 8018016:	f001 fceb 	bl	80199f0 <USBD_CtlSendData>
 801801a:	e032      	b.n	8018082 <USBD_CDC_Setup+0x19e>
 801801c:	6839      	ldr	r1, [r7, #0]
 801801e:	6878      	ldr	r0, [r7, #4]
 8018020:	f001 fc75 	bl	801990e <USBD_CtlError>
 8018024:	2303      	movs	r3, #3
 8018026:	75fb      	strb	r3, [r7, #23]
 8018028:	e02b      	b.n	8018082 <USBD_CDC_Setup+0x19e>
 801802a:	687b      	ldr	r3, [r7, #4]
 801802c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018030:	b2db      	uxtb	r3, r3
 8018032:	2b03      	cmp	r3, #3
 8018034:	d107      	bne.n	8018046 <USBD_CDC_Setup+0x162>
 8018036:	f107 030d 	add.w	r3, r7, #13
 801803a:	2201      	movs	r2, #1
 801803c:	4619      	mov	r1, r3
 801803e:	6878      	ldr	r0, [r7, #4]
 8018040:	f001 fcd6 	bl	80199f0 <USBD_CtlSendData>
 8018044:	e01d      	b.n	8018082 <USBD_CDC_Setup+0x19e>
 8018046:	6839      	ldr	r1, [r7, #0]
 8018048:	6878      	ldr	r0, [r7, #4]
 801804a:	f001 fc60 	bl	801990e <USBD_CtlError>
 801804e:	2303      	movs	r3, #3
 8018050:	75fb      	strb	r3, [r7, #23]
 8018052:	e016      	b.n	8018082 <USBD_CDC_Setup+0x19e>
 8018054:	687b      	ldr	r3, [r7, #4]
 8018056:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801805a:	b2db      	uxtb	r3, r3
 801805c:	2b03      	cmp	r3, #3
 801805e:	d00f      	beq.n	8018080 <USBD_CDC_Setup+0x19c>
 8018060:	6839      	ldr	r1, [r7, #0]
 8018062:	6878      	ldr	r0, [r7, #4]
 8018064:	f001 fc53 	bl	801990e <USBD_CtlError>
 8018068:	2303      	movs	r3, #3
 801806a:	75fb      	strb	r3, [r7, #23]
 801806c:	e008      	b.n	8018080 <USBD_CDC_Setup+0x19c>
 801806e:	6839      	ldr	r1, [r7, #0]
 8018070:	6878      	ldr	r0, [r7, #4]
 8018072:	f001 fc4c 	bl	801990e <USBD_CtlError>
 8018076:	2303      	movs	r3, #3
 8018078:	75fb      	strb	r3, [r7, #23]
 801807a:	e002      	b.n	8018082 <USBD_CDC_Setup+0x19e>
 801807c:	bf00      	nop
 801807e:	e008      	b.n	8018092 <USBD_CDC_Setup+0x1ae>
 8018080:	bf00      	nop
 8018082:	e006      	b.n	8018092 <USBD_CDC_Setup+0x1ae>
 8018084:	6839      	ldr	r1, [r7, #0]
 8018086:	6878      	ldr	r0, [r7, #4]
 8018088:	f001 fc41 	bl	801990e <USBD_CtlError>
 801808c:	2303      	movs	r3, #3
 801808e:	75fb      	strb	r3, [r7, #23]
 8018090:	bf00      	nop
 8018092:	7dfb      	ldrb	r3, [r7, #23]
 8018094:	4618      	mov	r0, r3
 8018096:	3718      	adds	r7, #24
 8018098:	46bd      	mov	sp, r7
 801809a:	bd80      	pop	{r7, pc}

0801809c <USBD_CDC_DataIn>:
 801809c:	b580      	push	{r7, lr}
 801809e:	b084      	sub	sp, #16
 80180a0:	af00      	add	r7, sp, #0
 80180a2:	6078      	str	r0, [r7, #4]
 80180a4:	460b      	mov	r3, r1
 80180a6:	70fb      	strb	r3, [r7, #3]
 80180a8:	687b      	ldr	r3, [r7, #4]
 80180aa:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 80180ae:	60fb      	str	r3, [r7, #12]
 80180b0:	687b      	ldr	r3, [r7, #4]
 80180b2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80180b6:	687b      	ldr	r3, [r7, #4]
 80180b8:	32b0      	adds	r2, #176	@ 0xb0
 80180ba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80180be:	2b00      	cmp	r3, #0
 80180c0:	d101      	bne.n	80180c6 <USBD_CDC_DataIn+0x2a>
 80180c2:	2303      	movs	r3, #3
 80180c4:	e065      	b.n	8018192 <USBD_CDC_DataIn+0xf6>
 80180c6:	687b      	ldr	r3, [r7, #4]
 80180c8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80180cc:	687b      	ldr	r3, [r7, #4]
 80180ce:	32b0      	adds	r2, #176	@ 0xb0
 80180d0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80180d4:	60bb      	str	r3, [r7, #8]
 80180d6:	78fb      	ldrb	r3, [r7, #3]
 80180d8:	f003 020f 	and.w	r2, r3, #15
 80180dc:	6879      	ldr	r1, [r7, #4]
 80180de:	4613      	mov	r3, r2
 80180e0:	009b      	lsls	r3, r3, #2
 80180e2:	4413      	add	r3, r2
 80180e4:	009b      	lsls	r3, r3, #2
 80180e6:	440b      	add	r3, r1
 80180e8:	3318      	adds	r3, #24
 80180ea:	681b      	ldr	r3, [r3, #0]
 80180ec:	2b00      	cmp	r3, #0
 80180ee:	d02f      	beq.n	8018150 <USBD_CDC_DataIn+0xb4>
 80180f0:	78fb      	ldrb	r3, [r7, #3]
 80180f2:	f003 020f 	and.w	r2, r3, #15
 80180f6:	6879      	ldr	r1, [r7, #4]
 80180f8:	4613      	mov	r3, r2
 80180fa:	009b      	lsls	r3, r3, #2
 80180fc:	4413      	add	r3, r2
 80180fe:	009b      	lsls	r3, r3, #2
 8018100:	440b      	add	r3, r1
 8018102:	3318      	adds	r3, #24
 8018104:	681a      	ldr	r2, [r3, #0]
 8018106:	78fb      	ldrb	r3, [r7, #3]
 8018108:	f003 010f 	and.w	r1, r3, #15
 801810c:	68f8      	ldr	r0, [r7, #12]
 801810e:	460b      	mov	r3, r1
 8018110:	00db      	lsls	r3, r3, #3
 8018112:	440b      	add	r3, r1
 8018114:	009b      	lsls	r3, r3, #2
 8018116:	4403      	add	r3, r0
 8018118:	3348      	adds	r3, #72	@ 0x48
 801811a:	681b      	ldr	r3, [r3, #0]
 801811c:	fbb2 f1f3 	udiv	r1, r2, r3
 8018120:	fb01 f303 	mul.w	r3, r1, r3
 8018124:	1ad3      	subs	r3, r2, r3
 8018126:	2b00      	cmp	r3, #0
 8018128:	d112      	bne.n	8018150 <USBD_CDC_DataIn+0xb4>
 801812a:	78fb      	ldrb	r3, [r7, #3]
 801812c:	f003 020f 	and.w	r2, r3, #15
 8018130:	6879      	ldr	r1, [r7, #4]
 8018132:	4613      	mov	r3, r2
 8018134:	009b      	lsls	r3, r3, #2
 8018136:	4413      	add	r3, r2
 8018138:	009b      	lsls	r3, r3, #2
 801813a:	440b      	add	r3, r1
 801813c:	3318      	adds	r3, #24
 801813e:	2200      	movs	r2, #0
 8018140:	601a      	str	r2, [r3, #0]
 8018142:	78f9      	ldrb	r1, [r7, #3]
 8018144:	2300      	movs	r3, #0
 8018146:	2200      	movs	r2, #0
 8018148:	6878      	ldr	r0, [r7, #4]
 801814a:	f005 fa70 	bl	801d62e <USBD_LL_Transmit>
 801814e:	e01f      	b.n	8018190 <USBD_CDC_DataIn+0xf4>
 8018150:	68bb      	ldr	r3, [r7, #8]
 8018152:	2200      	movs	r2, #0
 8018154:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8018158:	687b      	ldr	r3, [r7, #4]
 801815a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801815e:	687a      	ldr	r2, [r7, #4]
 8018160:	33b0      	adds	r3, #176	@ 0xb0
 8018162:	009b      	lsls	r3, r3, #2
 8018164:	4413      	add	r3, r2
 8018166:	685b      	ldr	r3, [r3, #4]
 8018168:	691b      	ldr	r3, [r3, #16]
 801816a:	2b00      	cmp	r3, #0
 801816c:	d010      	beq.n	8018190 <USBD_CDC_DataIn+0xf4>
 801816e:	687b      	ldr	r3, [r7, #4]
 8018170:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8018174:	687a      	ldr	r2, [r7, #4]
 8018176:	33b0      	adds	r3, #176	@ 0xb0
 8018178:	009b      	lsls	r3, r3, #2
 801817a:	4413      	add	r3, r2
 801817c:	685b      	ldr	r3, [r3, #4]
 801817e:	691b      	ldr	r3, [r3, #16]
 8018180:	68ba      	ldr	r2, [r7, #8]
 8018182:	f8d2 0208 	ldr.w	r0, [r2, #520]	@ 0x208
 8018186:	68ba      	ldr	r2, [r7, #8]
 8018188:	f502 7104 	add.w	r1, r2, #528	@ 0x210
 801818c:	78fa      	ldrb	r2, [r7, #3]
 801818e:	4798      	blx	r3
 8018190:	2300      	movs	r3, #0
 8018192:	4618      	mov	r0, r3
 8018194:	3710      	adds	r7, #16
 8018196:	46bd      	mov	sp, r7
 8018198:	bd80      	pop	{r7, pc}

0801819a <USBD_CDC_DataOut>:
 801819a:	b580      	push	{r7, lr}
 801819c:	b084      	sub	sp, #16
 801819e:	af00      	add	r7, sp, #0
 80181a0:	6078      	str	r0, [r7, #4]
 80181a2:	460b      	mov	r3, r1
 80181a4:	70fb      	strb	r3, [r7, #3]
 80181a6:	687b      	ldr	r3, [r7, #4]
 80181a8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80181ac:	687b      	ldr	r3, [r7, #4]
 80181ae:	32b0      	adds	r2, #176	@ 0xb0
 80181b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80181b4:	60fb      	str	r3, [r7, #12]
 80181b6:	687b      	ldr	r3, [r7, #4]
 80181b8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80181bc:	687b      	ldr	r3, [r7, #4]
 80181be:	32b0      	adds	r2, #176	@ 0xb0
 80181c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80181c4:	2b00      	cmp	r3, #0
 80181c6:	d101      	bne.n	80181cc <USBD_CDC_DataOut+0x32>
 80181c8:	2303      	movs	r3, #3
 80181ca:	e01a      	b.n	8018202 <USBD_CDC_DataOut+0x68>
 80181cc:	78fb      	ldrb	r3, [r7, #3]
 80181ce:	4619      	mov	r1, r3
 80181d0:	6878      	ldr	r0, [r7, #4]
 80181d2:	f005 fa6e 	bl	801d6b2 <USBD_LL_GetRxDataSize>
 80181d6:	4602      	mov	r2, r0
 80181d8:	68fb      	ldr	r3, [r7, #12]
 80181da:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 80181de:	687b      	ldr	r3, [r7, #4]
 80181e0:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 80181e4:	687a      	ldr	r2, [r7, #4]
 80181e6:	33b0      	adds	r3, #176	@ 0xb0
 80181e8:	009b      	lsls	r3, r3, #2
 80181ea:	4413      	add	r3, r2
 80181ec:	685b      	ldr	r3, [r3, #4]
 80181ee:	68db      	ldr	r3, [r3, #12]
 80181f0:	68fa      	ldr	r2, [r7, #12]
 80181f2:	f8d2 0204 	ldr.w	r0, [r2, #516]	@ 0x204
 80181f6:	68fa      	ldr	r2, [r7, #12]
 80181f8:	f502 7203 	add.w	r2, r2, #524	@ 0x20c
 80181fc:	4611      	mov	r1, r2
 80181fe:	4798      	blx	r3
 8018200:	2300      	movs	r3, #0
 8018202:	4618      	mov	r0, r3
 8018204:	3710      	adds	r7, #16
 8018206:	46bd      	mov	sp, r7
 8018208:	bd80      	pop	{r7, pc}

0801820a <USBD_CDC_EP0_RxReady>:
 801820a:	b580      	push	{r7, lr}
 801820c:	b084      	sub	sp, #16
 801820e:	af00      	add	r7, sp, #0
 8018210:	6078      	str	r0, [r7, #4]
 8018212:	687b      	ldr	r3, [r7, #4]
 8018214:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018218:	687b      	ldr	r3, [r7, #4]
 801821a:	32b0      	adds	r2, #176	@ 0xb0
 801821c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018220:	60fb      	str	r3, [r7, #12]
 8018222:	68fb      	ldr	r3, [r7, #12]
 8018224:	2b00      	cmp	r3, #0
 8018226:	d101      	bne.n	801822c <USBD_CDC_EP0_RxReady+0x22>
 8018228:	2303      	movs	r3, #3
 801822a:	e024      	b.n	8018276 <USBD_CDC_EP0_RxReady+0x6c>
 801822c:	687b      	ldr	r3, [r7, #4]
 801822e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8018232:	687a      	ldr	r2, [r7, #4]
 8018234:	33b0      	adds	r3, #176	@ 0xb0
 8018236:	009b      	lsls	r3, r3, #2
 8018238:	4413      	add	r3, r2
 801823a:	685b      	ldr	r3, [r3, #4]
 801823c:	2b00      	cmp	r3, #0
 801823e:	d019      	beq.n	8018274 <USBD_CDC_EP0_RxReady+0x6a>
 8018240:	68fb      	ldr	r3, [r7, #12]
 8018242:	f893 3200 	ldrb.w	r3, [r3, #512]	@ 0x200
 8018246:	2bff      	cmp	r3, #255	@ 0xff
 8018248:	d014      	beq.n	8018274 <USBD_CDC_EP0_RxReady+0x6a>
 801824a:	687b      	ldr	r3, [r7, #4]
 801824c:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 8018250:	687a      	ldr	r2, [r7, #4]
 8018252:	33b0      	adds	r3, #176	@ 0xb0
 8018254:	009b      	lsls	r3, r3, #2
 8018256:	4413      	add	r3, r2
 8018258:	685b      	ldr	r3, [r3, #4]
 801825a:	689b      	ldr	r3, [r3, #8]
 801825c:	68fa      	ldr	r2, [r7, #12]
 801825e:	f892 0200 	ldrb.w	r0, [r2, #512]	@ 0x200
 8018262:	68f9      	ldr	r1, [r7, #12]
 8018264:	68fa      	ldr	r2, [r7, #12]
 8018266:	f892 2201 	ldrb.w	r2, [r2, #513]	@ 0x201
 801826a:	4798      	blx	r3
 801826c:	68fb      	ldr	r3, [r7, #12]
 801826e:	22ff      	movs	r2, #255	@ 0xff
 8018270:	f883 2200 	strb.w	r2, [r3, #512]	@ 0x200
 8018274:	2300      	movs	r3, #0
 8018276:	4618      	mov	r0, r3
 8018278:	3710      	adds	r7, #16
 801827a:	46bd      	mov	sp, r7
 801827c:	bd80      	pop	{r7, pc}
	...

08018280 <USBD_CDC_GetFSCfgDesc>:
 8018280:	b580      	push	{r7, lr}
 8018282:	b086      	sub	sp, #24
 8018284:	af00      	add	r7, sp, #0
 8018286:	6078      	str	r0, [r7, #4]
 8018288:	2182      	movs	r1, #130	@ 0x82
 801828a:	4818      	ldr	r0, [pc, #96]	@ (80182ec <USBD_CDC_GetFSCfgDesc+0x6c>)
 801828c:	f000 fd09 	bl	8018ca2 <USBD_GetEpDesc>
 8018290:	6178      	str	r0, [r7, #20]
 8018292:	2101      	movs	r1, #1
 8018294:	4815      	ldr	r0, [pc, #84]	@ (80182ec <USBD_CDC_GetFSCfgDesc+0x6c>)
 8018296:	f000 fd04 	bl	8018ca2 <USBD_GetEpDesc>
 801829a:	6138      	str	r0, [r7, #16]
 801829c:	2181      	movs	r1, #129	@ 0x81
 801829e:	4813      	ldr	r0, [pc, #76]	@ (80182ec <USBD_CDC_GetFSCfgDesc+0x6c>)
 80182a0:	f000 fcff 	bl	8018ca2 <USBD_GetEpDesc>
 80182a4:	60f8      	str	r0, [r7, #12]
 80182a6:	697b      	ldr	r3, [r7, #20]
 80182a8:	2b00      	cmp	r3, #0
 80182aa:	d002      	beq.n	80182b2 <USBD_CDC_GetFSCfgDesc+0x32>
 80182ac:	697b      	ldr	r3, [r7, #20]
 80182ae:	2210      	movs	r2, #16
 80182b0:	719a      	strb	r2, [r3, #6]
 80182b2:	693b      	ldr	r3, [r7, #16]
 80182b4:	2b00      	cmp	r3, #0
 80182b6:	d006      	beq.n	80182c6 <USBD_CDC_GetFSCfgDesc+0x46>
 80182b8:	693b      	ldr	r3, [r7, #16]
 80182ba:	2200      	movs	r2, #0
 80182bc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80182c0:	711a      	strb	r2, [r3, #4]
 80182c2:	2200      	movs	r2, #0
 80182c4:	715a      	strb	r2, [r3, #5]
 80182c6:	68fb      	ldr	r3, [r7, #12]
 80182c8:	2b00      	cmp	r3, #0
 80182ca:	d006      	beq.n	80182da <USBD_CDC_GetFSCfgDesc+0x5a>
 80182cc:	68fb      	ldr	r3, [r7, #12]
 80182ce:	2200      	movs	r2, #0
 80182d0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80182d4:	711a      	strb	r2, [r3, #4]
 80182d6:	2200      	movs	r2, #0
 80182d8:	715a      	strb	r2, [r3, #5]
 80182da:	687b      	ldr	r3, [r7, #4]
 80182dc:	2243      	movs	r2, #67	@ 0x43
 80182de:	801a      	strh	r2, [r3, #0]
 80182e0:	4b02      	ldr	r3, [pc, #8]	@ (80182ec <USBD_CDC_GetFSCfgDesc+0x6c>)
 80182e2:	4618      	mov	r0, r3
 80182e4:	3718      	adds	r7, #24
 80182e6:	46bd      	mov	sp, r7
 80182e8:	bd80      	pop	{r7, pc}
 80182ea:	bf00      	nop
 80182ec:	20000094 	.word	0x20000094

080182f0 <USBD_CDC_GetHSCfgDesc>:
 80182f0:	b580      	push	{r7, lr}
 80182f2:	b086      	sub	sp, #24
 80182f4:	af00      	add	r7, sp, #0
 80182f6:	6078      	str	r0, [r7, #4]
 80182f8:	2182      	movs	r1, #130	@ 0x82
 80182fa:	4818      	ldr	r0, [pc, #96]	@ (801835c <USBD_CDC_GetHSCfgDesc+0x6c>)
 80182fc:	f000 fcd1 	bl	8018ca2 <USBD_GetEpDesc>
 8018300:	6178      	str	r0, [r7, #20]
 8018302:	2101      	movs	r1, #1
 8018304:	4815      	ldr	r0, [pc, #84]	@ (801835c <USBD_CDC_GetHSCfgDesc+0x6c>)
 8018306:	f000 fccc 	bl	8018ca2 <USBD_GetEpDesc>
 801830a:	6138      	str	r0, [r7, #16]
 801830c:	2181      	movs	r1, #129	@ 0x81
 801830e:	4813      	ldr	r0, [pc, #76]	@ (801835c <USBD_CDC_GetHSCfgDesc+0x6c>)
 8018310:	f000 fcc7 	bl	8018ca2 <USBD_GetEpDesc>
 8018314:	60f8      	str	r0, [r7, #12]
 8018316:	697b      	ldr	r3, [r7, #20]
 8018318:	2b00      	cmp	r3, #0
 801831a:	d002      	beq.n	8018322 <USBD_CDC_GetHSCfgDesc+0x32>
 801831c:	697b      	ldr	r3, [r7, #20]
 801831e:	2210      	movs	r2, #16
 8018320:	719a      	strb	r2, [r3, #6]
 8018322:	693b      	ldr	r3, [r7, #16]
 8018324:	2b00      	cmp	r3, #0
 8018326:	d006      	beq.n	8018336 <USBD_CDC_GetHSCfgDesc+0x46>
 8018328:	693b      	ldr	r3, [r7, #16]
 801832a:	2200      	movs	r2, #0
 801832c:	711a      	strb	r2, [r3, #4]
 801832e:	2200      	movs	r2, #0
 8018330:	f042 0202 	orr.w	r2, r2, #2
 8018334:	715a      	strb	r2, [r3, #5]
 8018336:	68fb      	ldr	r3, [r7, #12]
 8018338:	2b00      	cmp	r3, #0
 801833a:	d006      	beq.n	801834a <USBD_CDC_GetHSCfgDesc+0x5a>
 801833c:	68fb      	ldr	r3, [r7, #12]
 801833e:	2200      	movs	r2, #0
 8018340:	711a      	strb	r2, [r3, #4]
 8018342:	2200      	movs	r2, #0
 8018344:	f042 0202 	orr.w	r2, r2, #2
 8018348:	715a      	strb	r2, [r3, #5]
 801834a:	687b      	ldr	r3, [r7, #4]
 801834c:	2243      	movs	r2, #67	@ 0x43
 801834e:	801a      	strh	r2, [r3, #0]
 8018350:	4b02      	ldr	r3, [pc, #8]	@ (801835c <USBD_CDC_GetHSCfgDesc+0x6c>)
 8018352:	4618      	mov	r0, r3
 8018354:	3718      	adds	r7, #24
 8018356:	46bd      	mov	sp, r7
 8018358:	bd80      	pop	{r7, pc}
 801835a:	bf00      	nop
 801835c:	20000094 	.word	0x20000094

08018360 <USBD_CDC_GetOtherSpeedCfgDesc>:
 8018360:	b580      	push	{r7, lr}
 8018362:	b086      	sub	sp, #24
 8018364:	af00      	add	r7, sp, #0
 8018366:	6078      	str	r0, [r7, #4]
 8018368:	2182      	movs	r1, #130	@ 0x82
 801836a:	4818      	ldr	r0, [pc, #96]	@ (80183cc <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 801836c:	f000 fc99 	bl	8018ca2 <USBD_GetEpDesc>
 8018370:	6178      	str	r0, [r7, #20]
 8018372:	2101      	movs	r1, #1
 8018374:	4815      	ldr	r0, [pc, #84]	@ (80183cc <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8018376:	f000 fc94 	bl	8018ca2 <USBD_GetEpDesc>
 801837a:	6138      	str	r0, [r7, #16]
 801837c:	2181      	movs	r1, #129	@ 0x81
 801837e:	4813      	ldr	r0, [pc, #76]	@ (80183cc <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 8018380:	f000 fc8f 	bl	8018ca2 <USBD_GetEpDesc>
 8018384:	60f8      	str	r0, [r7, #12]
 8018386:	697b      	ldr	r3, [r7, #20]
 8018388:	2b00      	cmp	r3, #0
 801838a:	d002      	beq.n	8018392 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 801838c:	697b      	ldr	r3, [r7, #20]
 801838e:	2210      	movs	r2, #16
 8018390:	719a      	strb	r2, [r3, #6]
 8018392:	693b      	ldr	r3, [r7, #16]
 8018394:	2b00      	cmp	r3, #0
 8018396:	d006      	beq.n	80183a6 <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 8018398:	693b      	ldr	r3, [r7, #16]
 801839a:	2200      	movs	r2, #0
 801839c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80183a0:	711a      	strb	r2, [r3, #4]
 80183a2:	2200      	movs	r2, #0
 80183a4:	715a      	strb	r2, [r3, #5]
 80183a6:	68fb      	ldr	r3, [r7, #12]
 80183a8:	2b00      	cmp	r3, #0
 80183aa:	d006      	beq.n	80183ba <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 80183ac:	68fb      	ldr	r3, [r7, #12]
 80183ae:	2200      	movs	r2, #0
 80183b0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80183b4:	711a      	strb	r2, [r3, #4]
 80183b6:	2200      	movs	r2, #0
 80183b8:	715a      	strb	r2, [r3, #5]
 80183ba:	687b      	ldr	r3, [r7, #4]
 80183bc:	2243      	movs	r2, #67	@ 0x43
 80183be:	801a      	strh	r2, [r3, #0]
 80183c0:	4b02      	ldr	r3, [pc, #8]	@ (80183cc <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 80183c2:	4618      	mov	r0, r3
 80183c4:	3718      	adds	r7, #24
 80183c6:	46bd      	mov	sp, r7
 80183c8:	bd80      	pop	{r7, pc}
 80183ca:	bf00      	nop
 80183cc:	20000094 	.word	0x20000094

080183d0 <USBD_CDC_GetDeviceQualifierDescriptor>:
 80183d0:	b480      	push	{r7}
 80183d2:	b083      	sub	sp, #12
 80183d4:	af00      	add	r7, sp, #0
 80183d6:	6078      	str	r0, [r7, #4]
 80183d8:	687b      	ldr	r3, [r7, #4]
 80183da:	220a      	movs	r2, #10
 80183dc:	801a      	strh	r2, [r3, #0]
 80183de:	4b03      	ldr	r3, [pc, #12]	@ (80183ec <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 80183e0:	4618      	mov	r0, r3
 80183e2:	370c      	adds	r7, #12
 80183e4:	46bd      	mov	sp, r7
 80183e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80183ea:	4770      	bx	lr
 80183ec:	20000050 	.word	0x20000050

080183f0 <USBD_CDC_RegisterInterface>:
 80183f0:	b480      	push	{r7}
 80183f2:	b083      	sub	sp, #12
 80183f4:	af00      	add	r7, sp, #0
 80183f6:	6078      	str	r0, [r7, #4]
 80183f8:	6039      	str	r1, [r7, #0]
 80183fa:	683b      	ldr	r3, [r7, #0]
 80183fc:	2b00      	cmp	r3, #0
 80183fe:	d101      	bne.n	8018404 <USBD_CDC_RegisterInterface+0x14>
 8018400:	2303      	movs	r3, #3
 8018402:	e009      	b.n	8018418 <USBD_CDC_RegisterInterface+0x28>
 8018404:	687b      	ldr	r3, [r7, #4]
 8018406:	f8d3 32d4 	ldr.w	r3, [r3, #724]	@ 0x2d4
 801840a:	687a      	ldr	r2, [r7, #4]
 801840c:	33b0      	adds	r3, #176	@ 0xb0
 801840e:	009b      	lsls	r3, r3, #2
 8018410:	4413      	add	r3, r2
 8018412:	683a      	ldr	r2, [r7, #0]
 8018414:	605a      	str	r2, [r3, #4]
 8018416:	2300      	movs	r3, #0
 8018418:	4618      	mov	r0, r3
 801841a:	370c      	adds	r7, #12
 801841c:	46bd      	mov	sp, r7
 801841e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018422:	4770      	bx	lr

08018424 <USBD_CDC_SetTxBuffer>:
 8018424:	b480      	push	{r7}
 8018426:	b087      	sub	sp, #28
 8018428:	af00      	add	r7, sp, #0
 801842a:	60f8      	str	r0, [r7, #12]
 801842c:	60b9      	str	r1, [r7, #8]
 801842e:	607a      	str	r2, [r7, #4]
 8018430:	68fb      	ldr	r3, [r7, #12]
 8018432:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018436:	68fb      	ldr	r3, [r7, #12]
 8018438:	32b0      	adds	r2, #176	@ 0xb0
 801843a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801843e:	617b      	str	r3, [r7, #20]
 8018440:	697b      	ldr	r3, [r7, #20]
 8018442:	2b00      	cmp	r3, #0
 8018444:	d101      	bne.n	801844a <USBD_CDC_SetTxBuffer+0x26>
 8018446:	2303      	movs	r3, #3
 8018448:	e008      	b.n	801845c <USBD_CDC_SetTxBuffer+0x38>
 801844a:	697b      	ldr	r3, [r7, #20]
 801844c:	68ba      	ldr	r2, [r7, #8]
 801844e:	f8c3 2208 	str.w	r2, [r3, #520]	@ 0x208
 8018452:	697b      	ldr	r3, [r7, #20]
 8018454:	687a      	ldr	r2, [r7, #4]
 8018456:	f8c3 2210 	str.w	r2, [r3, #528]	@ 0x210
 801845a:	2300      	movs	r3, #0
 801845c:	4618      	mov	r0, r3
 801845e:	371c      	adds	r7, #28
 8018460:	46bd      	mov	sp, r7
 8018462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018466:	4770      	bx	lr

08018468 <USBD_CDC_SetRxBuffer>:
 8018468:	b480      	push	{r7}
 801846a:	b085      	sub	sp, #20
 801846c:	af00      	add	r7, sp, #0
 801846e:	6078      	str	r0, [r7, #4]
 8018470:	6039      	str	r1, [r7, #0]
 8018472:	687b      	ldr	r3, [r7, #4]
 8018474:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018478:	687b      	ldr	r3, [r7, #4]
 801847a:	32b0      	adds	r2, #176	@ 0xb0
 801847c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018480:	60fb      	str	r3, [r7, #12]
 8018482:	68fb      	ldr	r3, [r7, #12]
 8018484:	2b00      	cmp	r3, #0
 8018486:	d101      	bne.n	801848c <USBD_CDC_SetRxBuffer+0x24>
 8018488:	2303      	movs	r3, #3
 801848a:	e004      	b.n	8018496 <USBD_CDC_SetRxBuffer+0x2e>
 801848c:	68fb      	ldr	r3, [r7, #12]
 801848e:	683a      	ldr	r2, [r7, #0]
 8018490:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8018494:	2300      	movs	r3, #0
 8018496:	4618      	mov	r0, r3
 8018498:	3714      	adds	r7, #20
 801849a:	46bd      	mov	sp, r7
 801849c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80184a0:	4770      	bx	lr
	...

080184a4 <USBD_CDC_ReceivePacket>:
 80184a4:	b580      	push	{r7, lr}
 80184a6:	b084      	sub	sp, #16
 80184a8:	af00      	add	r7, sp, #0
 80184aa:	6078      	str	r0, [r7, #4]
 80184ac:	687b      	ldr	r3, [r7, #4]
 80184ae:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80184b2:	687b      	ldr	r3, [r7, #4]
 80184b4:	32b0      	adds	r2, #176	@ 0xb0
 80184b6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80184ba:	60fb      	str	r3, [r7, #12]
 80184bc:	687b      	ldr	r3, [r7, #4]
 80184be:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80184c2:	687b      	ldr	r3, [r7, #4]
 80184c4:	32b0      	adds	r2, #176	@ 0xb0
 80184c6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80184ca:	2b00      	cmp	r3, #0
 80184cc:	d101      	bne.n	80184d2 <USBD_CDC_ReceivePacket+0x2e>
 80184ce:	2303      	movs	r3, #3
 80184d0:	e018      	b.n	8018504 <USBD_CDC_ReceivePacket+0x60>
 80184d2:	687b      	ldr	r3, [r7, #4]
 80184d4:	7c1b      	ldrb	r3, [r3, #16]
 80184d6:	2b00      	cmp	r3, #0
 80184d8:	d10a      	bne.n	80184f0 <USBD_CDC_ReceivePacket+0x4c>
 80184da:	4b0c      	ldr	r3, [pc, #48]	@ (801850c <USBD_CDC_ReceivePacket+0x68>)
 80184dc:	7819      	ldrb	r1, [r3, #0]
 80184de:	68fb      	ldr	r3, [r7, #12]
 80184e0:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80184e4:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80184e8:	6878      	ldr	r0, [r7, #4]
 80184ea:	f005 f8c1 	bl	801d670 <USBD_LL_PrepareReceive>
 80184ee:	e008      	b.n	8018502 <USBD_CDC_ReceivePacket+0x5e>
 80184f0:	4b06      	ldr	r3, [pc, #24]	@ (801850c <USBD_CDC_ReceivePacket+0x68>)
 80184f2:	7819      	ldrb	r1, [r3, #0]
 80184f4:	68fb      	ldr	r3, [r7, #12]
 80184f6:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 80184fa:	2340      	movs	r3, #64	@ 0x40
 80184fc:	6878      	ldr	r0, [r7, #4]
 80184fe:	f005 f8b7 	bl	801d670 <USBD_LL_PrepareReceive>
 8018502:	2300      	movs	r3, #0
 8018504:	4618      	mov	r0, r3
 8018506:	3710      	adds	r7, #16
 8018508:	46bd      	mov	sp, r7
 801850a:	bd80      	pop	{r7, pc}
 801850c:	200000d8 	.word	0x200000d8

08018510 <USBD_Init>:
 8018510:	b580      	push	{r7, lr}
 8018512:	b086      	sub	sp, #24
 8018514:	af00      	add	r7, sp, #0
 8018516:	60f8      	str	r0, [r7, #12]
 8018518:	60b9      	str	r1, [r7, #8]
 801851a:	4613      	mov	r3, r2
 801851c:	71fb      	strb	r3, [r7, #7]
 801851e:	68fb      	ldr	r3, [r7, #12]
 8018520:	2b00      	cmp	r3, #0
 8018522:	d101      	bne.n	8018528 <USBD_Init+0x18>
 8018524:	2303      	movs	r3, #3
 8018526:	e01f      	b.n	8018568 <USBD_Init+0x58>
 8018528:	68fb      	ldr	r3, [r7, #12]
 801852a:	2200      	movs	r2, #0
 801852c:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8018530:	68fb      	ldr	r3, [r7, #12]
 8018532:	2200      	movs	r2, #0
 8018534:	f8c3 22c4 	str.w	r2, [r3, #708]	@ 0x2c4
 8018538:	68fb      	ldr	r3, [r7, #12]
 801853a:	2200      	movs	r2, #0
 801853c:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 8018540:	68bb      	ldr	r3, [r7, #8]
 8018542:	2b00      	cmp	r3, #0
 8018544:	d003      	beq.n	801854e <USBD_Init+0x3e>
 8018546:	68fb      	ldr	r3, [r7, #12]
 8018548:	68ba      	ldr	r2, [r7, #8]
 801854a:	f8c3 22b4 	str.w	r2, [r3, #692]	@ 0x2b4
 801854e:	68fb      	ldr	r3, [r7, #12]
 8018550:	2201      	movs	r2, #1
 8018552:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8018556:	68fb      	ldr	r3, [r7, #12]
 8018558:	79fa      	ldrb	r2, [r7, #7]
 801855a:	701a      	strb	r2, [r3, #0]
 801855c:	68f8      	ldr	r0, [r7, #12]
 801855e:	f004 ff31 	bl	801d3c4 <USBD_LL_Init>
 8018562:	4603      	mov	r3, r0
 8018564:	75fb      	strb	r3, [r7, #23]
 8018566:	7dfb      	ldrb	r3, [r7, #23]
 8018568:	4618      	mov	r0, r3
 801856a:	3718      	adds	r7, #24
 801856c:	46bd      	mov	sp, r7
 801856e:	bd80      	pop	{r7, pc}

08018570 <USBD_RegisterClass>:
 8018570:	b580      	push	{r7, lr}
 8018572:	b084      	sub	sp, #16
 8018574:	af00      	add	r7, sp, #0
 8018576:	6078      	str	r0, [r7, #4]
 8018578:	6039      	str	r1, [r7, #0]
 801857a:	2300      	movs	r3, #0
 801857c:	81fb      	strh	r3, [r7, #14]
 801857e:	683b      	ldr	r3, [r7, #0]
 8018580:	2b00      	cmp	r3, #0
 8018582:	d101      	bne.n	8018588 <USBD_RegisterClass+0x18>
 8018584:	2303      	movs	r3, #3
 8018586:	e025      	b.n	80185d4 <USBD_RegisterClass+0x64>
 8018588:	687b      	ldr	r3, [r7, #4]
 801858a:	683a      	ldr	r2, [r7, #0]
 801858c:	f8c3 22b8 	str.w	r2, [r3, #696]	@ 0x2b8
 8018590:	687b      	ldr	r3, [r7, #4]
 8018592:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018596:	687b      	ldr	r3, [r7, #4]
 8018598:	32ae      	adds	r2, #174	@ 0xae
 801859a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801859e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80185a0:	2b00      	cmp	r3, #0
 80185a2:	d00f      	beq.n	80185c4 <USBD_RegisterClass+0x54>
 80185a4:	687b      	ldr	r3, [r7, #4]
 80185a6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 80185aa:	687b      	ldr	r3, [r7, #4]
 80185ac:	32ae      	adds	r2, #174	@ 0xae
 80185ae:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80185b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80185b4:	f107 020e 	add.w	r2, r7, #14
 80185b8:	4610      	mov	r0, r2
 80185ba:	4798      	blx	r3
 80185bc:	4602      	mov	r2, r0
 80185be:	687b      	ldr	r3, [r7, #4]
 80185c0:	f8c3 22d0 	str.w	r2, [r3, #720]	@ 0x2d0
 80185c4:	687b      	ldr	r3, [r7, #4]
 80185c6:	f8d3 32d8 	ldr.w	r3, [r3, #728]	@ 0x2d8
 80185ca:	1c5a      	adds	r2, r3, #1
 80185cc:	687b      	ldr	r3, [r7, #4]
 80185ce:	f8c3 22d8 	str.w	r2, [r3, #728]	@ 0x2d8
 80185d2:	2300      	movs	r3, #0
 80185d4:	4618      	mov	r0, r3
 80185d6:	3710      	adds	r7, #16
 80185d8:	46bd      	mov	sp, r7
 80185da:	bd80      	pop	{r7, pc}

080185dc <USBD_Start>:
 80185dc:	b580      	push	{r7, lr}
 80185de:	b082      	sub	sp, #8
 80185e0:	af00      	add	r7, sp, #0
 80185e2:	6078      	str	r0, [r7, #4]
 80185e4:	6878      	ldr	r0, [r7, #4]
 80185e6:	f004 ff39 	bl	801d45c <USBD_LL_Start>
 80185ea:	4603      	mov	r3, r0
 80185ec:	4618      	mov	r0, r3
 80185ee:	3708      	adds	r7, #8
 80185f0:	46bd      	mov	sp, r7
 80185f2:	bd80      	pop	{r7, pc}

080185f4 <USBD_RunTestMode>:
 80185f4:	b480      	push	{r7}
 80185f6:	b083      	sub	sp, #12
 80185f8:	af00      	add	r7, sp, #0
 80185fa:	6078      	str	r0, [r7, #4]
 80185fc:	2300      	movs	r3, #0
 80185fe:	4618      	mov	r0, r3
 8018600:	370c      	adds	r7, #12
 8018602:	46bd      	mov	sp, r7
 8018604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018608:	4770      	bx	lr

0801860a <USBD_SetClassConfig>:
 801860a:	b580      	push	{r7, lr}
 801860c:	b084      	sub	sp, #16
 801860e:	af00      	add	r7, sp, #0
 8018610:	6078      	str	r0, [r7, #4]
 8018612:	460b      	mov	r3, r1
 8018614:	70fb      	strb	r3, [r7, #3]
 8018616:	2300      	movs	r3, #0
 8018618:	73fb      	strb	r3, [r7, #15]
 801861a:	687b      	ldr	r3, [r7, #4]
 801861c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018620:	2b00      	cmp	r3, #0
 8018622:	d009      	beq.n	8018638 <USBD_SetClassConfig+0x2e>
 8018624:	687b      	ldr	r3, [r7, #4]
 8018626:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801862a:	681b      	ldr	r3, [r3, #0]
 801862c:	78fa      	ldrb	r2, [r7, #3]
 801862e:	4611      	mov	r1, r2
 8018630:	6878      	ldr	r0, [r7, #4]
 8018632:	4798      	blx	r3
 8018634:	4603      	mov	r3, r0
 8018636:	73fb      	strb	r3, [r7, #15]
 8018638:	7bfb      	ldrb	r3, [r7, #15]
 801863a:	4618      	mov	r0, r3
 801863c:	3710      	adds	r7, #16
 801863e:	46bd      	mov	sp, r7
 8018640:	bd80      	pop	{r7, pc}

08018642 <USBD_ClrClassConfig>:
 8018642:	b580      	push	{r7, lr}
 8018644:	b084      	sub	sp, #16
 8018646:	af00      	add	r7, sp, #0
 8018648:	6078      	str	r0, [r7, #4]
 801864a:	460b      	mov	r3, r1
 801864c:	70fb      	strb	r3, [r7, #3]
 801864e:	2300      	movs	r3, #0
 8018650:	73fb      	strb	r3, [r7, #15]
 8018652:	687b      	ldr	r3, [r7, #4]
 8018654:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018658:	685b      	ldr	r3, [r3, #4]
 801865a:	78fa      	ldrb	r2, [r7, #3]
 801865c:	4611      	mov	r1, r2
 801865e:	6878      	ldr	r0, [r7, #4]
 8018660:	4798      	blx	r3
 8018662:	4603      	mov	r3, r0
 8018664:	2b00      	cmp	r3, #0
 8018666:	d001      	beq.n	801866c <USBD_ClrClassConfig+0x2a>
 8018668:	2303      	movs	r3, #3
 801866a:	73fb      	strb	r3, [r7, #15]
 801866c:	7bfb      	ldrb	r3, [r7, #15]
 801866e:	4618      	mov	r0, r3
 8018670:	3710      	adds	r7, #16
 8018672:	46bd      	mov	sp, r7
 8018674:	bd80      	pop	{r7, pc}

08018676 <USBD_LL_SetupStage>:
 8018676:	b580      	push	{r7, lr}
 8018678:	b084      	sub	sp, #16
 801867a:	af00      	add	r7, sp, #0
 801867c:	6078      	str	r0, [r7, #4]
 801867e:	6039      	str	r1, [r7, #0]
 8018680:	687b      	ldr	r3, [r7, #4]
 8018682:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 8018686:	6839      	ldr	r1, [r7, #0]
 8018688:	4618      	mov	r0, r3
 801868a:	f001 f906 	bl	801989a <USBD_ParseSetupRequest>
 801868e:	687b      	ldr	r3, [r7, #4]
 8018690:	2201      	movs	r2, #1
 8018692:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8018696:	687b      	ldr	r3, [r7, #4]
 8018698:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	@ 0x2b0
 801869c:	461a      	mov	r2, r3
 801869e:	687b      	ldr	r3, [r7, #4]
 80186a0:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 80186a4:	687b      	ldr	r3, [r7, #4]
 80186a6:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 80186aa:	f003 031f 	and.w	r3, r3, #31
 80186ae:	2b02      	cmp	r3, #2
 80186b0:	d01a      	beq.n	80186e8 <USBD_LL_SetupStage+0x72>
 80186b2:	2b02      	cmp	r3, #2
 80186b4:	d822      	bhi.n	80186fc <USBD_LL_SetupStage+0x86>
 80186b6:	2b00      	cmp	r3, #0
 80186b8:	d002      	beq.n	80186c0 <USBD_LL_SetupStage+0x4a>
 80186ba:	2b01      	cmp	r3, #1
 80186bc:	d00a      	beq.n	80186d4 <USBD_LL_SetupStage+0x5e>
 80186be:	e01d      	b.n	80186fc <USBD_LL_SetupStage+0x86>
 80186c0:	687b      	ldr	r3, [r7, #4]
 80186c2:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 80186c6:	4619      	mov	r1, r3
 80186c8:	6878      	ldr	r0, [r7, #4]
 80186ca:	f000 fb5d 	bl	8018d88 <USBD_StdDevReq>
 80186ce:	4603      	mov	r3, r0
 80186d0:	73fb      	strb	r3, [r7, #15]
 80186d2:	e020      	b.n	8018716 <USBD_LL_SetupStage+0xa0>
 80186d4:	687b      	ldr	r3, [r7, #4]
 80186d6:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 80186da:	4619      	mov	r1, r3
 80186dc:	6878      	ldr	r0, [r7, #4]
 80186de:	f000 fbc5 	bl	8018e6c <USBD_StdItfReq>
 80186e2:	4603      	mov	r3, r0
 80186e4:	73fb      	strb	r3, [r7, #15]
 80186e6:	e016      	b.n	8018716 <USBD_LL_SetupStage+0xa0>
 80186e8:	687b      	ldr	r3, [r7, #4]
 80186ea:	f203 23aa 	addw	r3, r3, #682	@ 0x2aa
 80186ee:	4619      	mov	r1, r3
 80186f0:	6878      	ldr	r0, [r7, #4]
 80186f2:	f000 fc27 	bl	8018f44 <USBD_StdEPReq>
 80186f6:	4603      	mov	r3, r0
 80186f8:	73fb      	strb	r3, [r7, #15]
 80186fa:	e00c      	b.n	8018716 <USBD_LL_SetupStage+0xa0>
 80186fc:	687b      	ldr	r3, [r7, #4]
 80186fe:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8018702:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 8018706:	b2db      	uxtb	r3, r3
 8018708:	4619      	mov	r1, r3
 801870a:	6878      	ldr	r0, [r7, #4]
 801870c:	f004 ff06 	bl	801d51c <USBD_LL_StallEP>
 8018710:	4603      	mov	r3, r0
 8018712:	73fb      	strb	r3, [r7, #15]
 8018714:	bf00      	nop
 8018716:	7bfb      	ldrb	r3, [r7, #15]
 8018718:	4618      	mov	r0, r3
 801871a:	3710      	adds	r7, #16
 801871c:	46bd      	mov	sp, r7
 801871e:	bd80      	pop	{r7, pc}

08018720 <USBD_LL_DataOutStage>:
 8018720:	b580      	push	{r7, lr}
 8018722:	b086      	sub	sp, #24
 8018724:	af00      	add	r7, sp, #0
 8018726:	60f8      	str	r0, [r7, #12]
 8018728:	460b      	mov	r3, r1
 801872a:	607a      	str	r2, [r7, #4]
 801872c:	72fb      	strb	r3, [r7, #11]
 801872e:	2300      	movs	r3, #0
 8018730:	75fb      	strb	r3, [r7, #23]
 8018732:	7afb      	ldrb	r3, [r7, #11]
 8018734:	2b00      	cmp	r3, #0
 8018736:	d16e      	bne.n	8018816 <USBD_LL_DataOutStage+0xf6>
 8018738:	68fb      	ldr	r3, [r7, #12]
 801873a:	f503 73aa 	add.w	r3, r3, #340	@ 0x154
 801873e:	613b      	str	r3, [r7, #16]
 8018740:	68fb      	ldr	r3, [r7, #12]
 8018742:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 8018746:	2b03      	cmp	r3, #3
 8018748:	f040 8098 	bne.w	801887c <USBD_LL_DataOutStage+0x15c>
 801874c:	693b      	ldr	r3, [r7, #16]
 801874e:	689a      	ldr	r2, [r3, #8]
 8018750:	693b      	ldr	r3, [r7, #16]
 8018752:	68db      	ldr	r3, [r3, #12]
 8018754:	429a      	cmp	r2, r3
 8018756:	d913      	bls.n	8018780 <USBD_LL_DataOutStage+0x60>
 8018758:	693b      	ldr	r3, [r7, #16]
 801875a:	689a      	ldr	r2, [r3, #8]
 801875c:	693b      	ldr	r3, [r7, #16]
 801875e:	68db      	ldr	r3, [r3, #12]
 8018760:	1ad2      	subs	r2, r2, r3
 8018762:	693b      	ldr	r3, [r7, #16]
 8018764:	609a      	str	r2, [r3, #8]
 8018766:	693b      	ldr	r3, [r7, #16]
 8018768:	68da      	ldr	r2, [r3, #12]
 801876a:	693b      	ldr	r3, [r7, #16]
 801876c:	689b      	ldr	r3, [r3, #8]
 801876e:	4293      	cmp	r3, r2
 8018770:	bf28      	it	cs
 8018772:	4613      	movcs	r3, r2
 8018774:	461a      	mov	r2, r3
 8018776:	6879      	ldr	r1, [r7, #4]
 8018778:	68f8      	ldr	r0, [r7, #12]
 801877a:	f001 f982 	bl	8019a82 <USBD_CtlContinueRx>
 801877e:	e07d      	b.n	801887c <USBD_LL_DataOutStage+0x15c>
 8018780:	68fb      	ldr	r3, [r7, #12]
 8018782:	f893 32aa 	ldrb.w	r3, [r3, #682]	@ 0x2aa
 8018786:	f003 031f 	and.w	r3, r3, #31
 801878a:	2b02      	cmp	r3, #2
 801878c:	d014      	beq.n	80187b8 <USBD_LL_DataOutStage+0x98>
 801878e:	2b02      	cmp	r3, #2
 8018790:	d81d      	bhi.n	80187ce <USBD_LL_DataOutStage+0xae>
 8018792:	2b00      	cmp	r3, #0
 8018794:	d002      	beq.n	801879c <USBD_LL_DataOutStage+0x7c>
 8018796:	2b01      	cmp	r3, #1
 8018798:	d003      	beq.n	80187a2 <USBD_LL_DataOutStage+0x82>
 801879a:	e018      	b.n	80187ce <USBD_LL_DataOutStage+0xae>
 801879c:	2300      	movs	r3, #0
 801879e:	75bb      	strb	r3, [r7, #22]
 80187a0:	e018      	b.n	80187d4 <USBD_LL_DataOutStage+0xb4>
 80187a2:	68fb      	ldr	r3, [r7, #12]
 80187a4:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 80187a8:	b2db      	uxtb	r3, r3
 80187aa:	4619      	mov	r1, r3
 80187ac:	68f8      	ldr	r0, [r7, #12]
 80187ae:	f000 fa5e 	bl	8018c6e <USBD_CoreFindIF>
 80187b2:	4603      	mov	r3, r0
 80187b4:	75bb      	strb	r3, [r7, #22]
 80187b6:	e00d      	b.n	80187d4 <USBD_LL_DataOutStage+0xb4>
 80187b8:	68fb      	ldr	r3, [r7, #12]
 80187ba:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	@ 0x2ae
 80187be:	b2db      	uxtb	r3, r3
 80187c0:	4619      	mov	r1, r3
 80187c2:	68f8      	ldr	r0, [r7, #12]
 80187c4:	f000 fa60 	bl	8018c88 <USBD_CoreFindEP>
 80187c8:	4603      	mov	r3, r0
 80187ca:	75bb      	strb	r3, [r7, #22]
 80187cc:	e002      	b.n	80187d4 <USBD_LL_DataOutStage+0xb4>
 80187ce:	2300      	movs	r3, #0
 80187d0:	75bb      	strb	r3, [r7, #22]
 80187d2:	bf00      	nop
 80187d4:	7dbb      	ldrb	r3, [r7, #22]
 80187d6:	2b00      	cmp	r3, #0
 80187d8:	d119      	bne.n	801880e <USBD_LL_DataOutStage+0xee>
 80187da:	68fb      	ldr	r3, [r7, #12]
 80187dc:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80187e0:	b2db      	uxtb	r3, r3
 80187e2:	2b03      	cmp	r3, #3
 80187e4:	d113      	bne.n	801880e <USBD_LL_DataOutStage+0xee>
 80187e6:	7dba      	ldrb	r2, [r7, #22]
 80187e8:	68fb      	ldr	r3, [r7, #12]
 80187ea:	32ae      	adds	r2, #174	@ 0xae
 80187ec:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80187f0:	691b      	ldr	r3, [r3, #16]
 80187f2:	2b00      	cmp	r3, #0
 80187f4:	d00b      	beq.n	801880e <USBD_LL_DataOutStage+0xee>
 80187f6:	7dba      	ldrb	r2, [r7, #22]
 80187f8:	68fb      	ldr	r3, [r7, #12]
 80187fa:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80187fe:	7dba      	ldrb	r2, [r7, #22]
 8018800:	68fb      	ldr	r3, [r7, #12]
 8018802:	32ae      	adds	r2, #174	@ 0xae
 8018804:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018808:	691b      	ldr	r3, [r3, #16]
 801880a:	68f8      	ldr	r0, [r7, #12]
 801880c:	4798      	blx	r3
 801880e:	68f8      	ldr	r0, [r7, #12]
 8018810:	f001 f948 	bl	8019aa4 <USBD_CtlSendStatus>
 8018814:	e032      	b.n	801887c <USBD_LL_DataOutStage+0x15c>
 8018816:	7afb      	ldrb	r3, [r7, #11]
 8018818:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 801881c:	b2db      	uxtb	r3, r3
 801881e:	4619      	mov	r1, r3
 8018820:	68f8      	ldr	r0, [r7, #12]
 8018822:	f000 fa31 	bl	8018c88 <USBD_CoreFindEP>
 8018826:	4603      	mov	r3, r0
 8018828:	75bb      	strb	r3, [r7, #22]
 801882a:	7dbb      	ldrb	r3, [r7, #22]
 801882c:	2bff      	cmp	r3, #255	@ 0xff
 801882e:	d025      	beq.n	801887c <USBD_LL_DataOutStage+0x15c>
 8018830:	7dbb      	ldrb	r3, [r7, #22]
 8018832:	2b00      	cmp	r3, #0
 8018834:	d122      	bne.n	801887c <USBD_LL_DataOutStage+0x15c>
 8018836:	68fb      	ldr	r3, [r7, #12]
 8018838:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801883c:	b2db      	uxtb	r3, r3
 801883e:	2b03      	cmp	r3, #3
 8018840:	d117      	bne.n	8018872 <USBD_LL_DataOutStage+0x152>
 8018842:	7dba      	ldrb	r2, [r7, #22]
 8018844:	68fb      	ldr	r3, [r7, #12]
 8018846:	32ae      	adds	r2, #174	@ 0xae
 8018848:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801884c:	699b      	ldr	r3, [r3, #24]
 801884e:	2b00      	cmp	r3, #0
 8018850:	d00f      	beq.n	8018872 <USBD_LL_DataOutStage+0x152>
 8018852:	7dba      	ldrb	r2, [r7, #22]
 8018854:	68fb      	ldr	r3, [r7, #12]
 8018856:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 801885a:	7dba      	ldrb	r2, [r7, #22]
 801885c:	68fb      	ldr	r3, [r7, #12]
 801885e:	32ae      	adds	r2, #174	@ 0xae
 8018860:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018864:	699b      	ldr	r3, [r3, #24]
 8018866:	7afa      	ldrb	r2, [r7, #11]
 8018868:	4611      	mov	r1, r2
 801886a:	68f8      	ldr	r0, [r7, #12]
 801886c:	4798      	blx	r3
 801886e:	4603      	mov	r3, r0
 8018870:	75fb      	strb	r3, [r7, #23]
 8018872:	7dfb      	ldrb	r3, [r7, #23]
 8018874:	2b00      	cmp	r3, #0
 8018876:	d001      	beq.n	801887c <USBD_LL_DataOutStage+0x15c>
 8018878:	7dfb      	ldrb	r3, [r7, #23]
 801887a:	e000      	b.n	801887e <USBD_LL_DataOutStage+0x15e>
 801887c:	2300      	movs	r3, #0
 801887e:	4618      	mov	r0, r3
 8018880:	3718      	adds	r7, #24
 8018882:	46bd      	mov	sp, r7
 8018884:	bd80      	pop	{r7, pc}

08018886 <USBD_LL_DataInStage>:
 8018886:	b580      	push	{r7, lr}
 8018888:	b086      	sub	sp, #24
 801888a:	af00      	add	r7, sp, #0
 801888c:	60f8      	str	r0, [r7, #12]
 801888e:	460b      	mov	r3, r1
 8018890:	607a      	str	r2, [r7, #4]
 8018892:	72fb      	strb	r3, [r7, #11]
 8018894:	7afb      	ldrb	r3, [r7, #11]
 8018896:	2b00      	cmp	r3, #0
 8018898:	d16f      	bne.n	801897a <USBD_LL_DataInStage+0xf4>
 801889a:	68fb      	ldr	r3, [r7, #12]
 801889c:	3314      	adds	r3, #20
 801889e:	613b      	str	r3, [r7, #16]
 80188a0:	68fb      	ldr	r3, [r7, #12]
 80188a2:	f8d3 3294 	ldr.w	r3, [r3, #660]	@ 0x294
 80188a6:	2b02      	cmp	r3, #2
 80188a8:	d15a      	bne.n	8018960 <USBD_LL_DataInStage+0xda>
 80188aa:	693b      	ldr	r3, [r7, #16]
 80188ac:	689a      	ldr	r2, [r3, #8]
 80188ae:	693b      	ldr	r3, [r7, #16]
 80188b0:	68db      	ldr	r3, [r3, #12]
 80188b2:	429a      	cmp	r2, r3
 80188b4:	d914      	bls.n	80188e0 <USBD_LL_DataInStage+0x5a>
 80188b6:	693b      	ldr	r3, [r7, #16]
 80188b8:	689a      	ldr	r2, [r3, #8]
 80188ba:	693b      	ldr	r3, [r7, #16]
 80188bc:	68db      	ldr	r3, [r3, #12]
 80188be:	1ad2      	subs	r2, r2, r3
 80188c0:	693b      	ldr	r3, [r7, #16]
 80188c2:	609a      	str	r2, [r3, #8]
 80188c4:	693b      	ldr	r3, [r7, #16]
 80188c6:	689b      	ldr	r3, [r3, #8]
 80188c8:	461a      	mov	r2, r3
 80188ca:	6879      	ldr	r1, [r7, #4]
 80188cc:	68f8      	ldr	r0, [r7, #12]
 80188ce:	f001 f8aa 	bl	8019a26 <USBD_CtlContinueSendData>
 80188d2:	2300      	movs	r3, #0
 80188d4:	2200      	movs	r2, #0
 80188d6:	2100      	movs	r1, #0
 80188d8:	68f8      	ldr	r0, [r7, #12]
 80188da:	f004 fec9 	bl	801d670 <USBD_LL_PrepareReceive>
 80188de:	e03f      	b.n	8018960 <USBD_LL_DataInStage+0xda>
 80188e0:	693b      	ldr	r3, [r7, #16]
 80188e2:	68da      	ldr	r2, [r3, #12]
 80188e4:	693b      	ldr	r3, [r7, #16]
 80188e6:	689b      	ldr	r3, [r3, #8]
 80188e8:	429a      	cmp	r2, r3
 80188ea:	d11c      	bne.n	8018926 <USBD_LL_DataInStage+0xa0>
 80188ec:	693b      	ldr	r3, [r7, #16]
 80188ee:	685a      	ldr	r2, [r3, #4]
 80188f0:	693b      	ldr	r3, [r7, #16]
 80188f2:	68db      	ldr	r3, [r3, #12]
 80188f4:	429a      	cmp	r2, r3
 80188f6:	d316      	bcc.n	8018926 <USBD_LL_DataInStage+0xa0>
 80188f8:	693b      	ldr	r3, [r7, #16]
 80188fa:	685a      	ldr	r2, [r3, #4]
 80188fc:	68fb      	ldr	r3, [r7, #12]
 80188fe:	f8d3 3298 	ldr.w	r3, [r3, #664]	@ 0x298
 8018902:	429a      	cmp	r2, r3
 8018904:	d20f      	bcs.n	8018926 <USBD_LL_DataInStage+0xa0>
 8018906:	2200      	movs	r2, #0
 8018908:	2100      	movs	r1, #0
 801890a:	68f8      	ldr	r0, [r7, #12]
 801890c:	f001 f88b 	bl	8019a26 <USBD_CtlContinueSendData>
 8018910:	68fb      	ldr	r3, [r7, #12]
 8018912:	2200      	movs	r2, #0
 8018914:	f8c3 2298 	str.w	r2, [r3, #664]	@ 0x298
 8018918:	2300      	movs	r3, #0
 801891a:	2200      	movs	r2, #0
 801891c:	2100      	movs	r1, #0
 801891e:	68f8      	ldr	r0, [r7, #12]
 8018920:	f004 fea6 	bl	801d670 <USBD_LL_PrepareReceive>
 8018924:	e01c      	b.n	8018960 <USBD_LL_DataInStage+0xda>
 8018926:	68fb      	ldr	r3, [r7, #12]
 8018928:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801892c:	b2db      	uxtb	r3, r3
 801892e:	2b03      	cmp	r3, #3
 8018930:	d10f      	bne.n	8018952 <USBD_LL_DataInStage+0xcc>
 8018932:	68fb      	ldr	r3, [r7, #12]
 8018934:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018938:	68db      	ldr	r3, [r3, #12]
 801893a:	2b00      	cmp	r3, #0
 801893c:	d009      	beq.n	8018952 <USBD_LL_DataInStage+0xcc>
 801893e:	68fb      	ldr	r3, [r7, #12]
 8018940:	2200      	movs	r2, #0
 8018942:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8018946:	68fb      	ldr	r3, [r7, #12]
 8018948:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801894c:	68db      	ldr	r3, [r3, #12]
 801894e:	68f8      	ldr	r0, [r7, #12]
 8018950:	4798      	blx	r3
 8018952:	2180      	movs	r1, #128	@ 0x80
 8018954:	68f8      	ldr	r0, [r7, #12]
 8018956:	f004 fde1 	bl	801d51c <USBD_LL_StallEP>
 801895a:	68f8      	ldr	r0, [r7, #12]
 801895c:	f001 f8b5 	bl	8019aca <USBD_CtlReceiveStatus>
 8018960:	68fb      	ldr	r3, [r7, #12]
 8018962:	f893 32a0 	ldrb.w	r3, [r3, #672]	@ 0x2a0
 8018966:	2b00      	cmp	r3, #0
 8018968:	d03a      	beq.n	80189e0 <USBD_LL_DataInStage+0x15a>
 801896a:	68f8      	ldr	r0, [r7, #12]
 801896c:	f7ff fe42 	bl	80185f4 <USBD_RunTestMode>
 8018970:	68fb      	ldr	r3, [r7, #12]
 8018972:	2200      	movs	r2, #0
 8018974:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8018978:	e032      	b.n	80189e0 <USBD_LL_DataInStage+0x15a>
 801897a:	7afb      	ldrb	r3, [r7, #11]
 801897c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8018980:	b2db      	uxtb	r3, r3
 8018982:	4619      	mov	r1, r3
 8018984:	68f8      	ldr	r0, [r7, #12]
 8018986:	f000 f97f 	bl	8018c88 <USBD_CoreFindEP>
 801898a:	4603      	mov	r3, r0
 801898c:	75fb      	strb	r3, [r7, #23]
 801898e:	7dfb      	ldrb	r3, [r7, #23]
 8018990:	2bff      	cmp	r3, #255	@ 0xff
 8018992:	d025      	beq.n	80189e0 <USBD_LL_DataInStage+0x15a>
 8018994:	7dfb      	ldrb	r3, [r7, #23]
 8018996:	2b00      	cmp	r3, #0
 8018998:	d122      	bne.n	80189e0 <USBD_LL_DataInStage+0x15a>
 801899a:	68fb      	ldr	r3, [r7, #12]
 801899c:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80189a0:	b2db      	uxtb	r3, r3
 80189a2:	2b03      	cmp	r3, #3
 80189a4:	d11c      	bne.n	80189e0 <USBD_LL_DataInStage+0x15a>
 80189a6:	7dfa      	ldrb	r2, [r7, #23]
 80189a8:	68fb      	ldr	r3, [r7, #12]
 80189aa:	32ae      	adds	r2, #174	@ 0xae
 80189ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80189b0:	695b      	ldr	r3, [r3, #20]
 80189b2:	2b00      	cmp	r3, #0
 80189b4:	d014      	beq.n	80189e0 <USBD_LL_DataInStage+0x15a>
 80189b6:	7dfa      	ldrb	r2, [r7, #23]
 80189b8:	68fb      	ldr	r3, [r7, #12]
 80189ba:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80189be:	7dfa      	ldrb	r2, [r7, #23]
 80189c0:	68fb      	ldr	r3, [r7, #12]
 80189c2:	32ae      	adds	r2, #174	@ 0xae
 80189c4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80189c8:	695b      	ldr	r3, [r3, #20]
 80189ca:	7afa      	ldrb	r2, [r7, #11]
 80189cc:	4611      	mov	r1, r2
 80189ce:	68f8      	ldr	r0, [r7, #12]
 80189d0:	4798      	blx	r3
 80189d2:	4603      	mov	r3, r0
 80189d4:	75bb      	strb	r3, [r7, #22]
 80189d6:	7dbb      	ldrb	r3, [r7, #22]
 80189d8:	2b00      	cmp	r3, #0
 80189da:	d001      	beq.n	80189e0 <USBD_LL_DataInStage+0x15a>
 80189dc:	7dbb      	ldrb	r3, [r7, #22]
 80189de:	e000      	b.n	80189e2 <USBD_LL_DataInStage+0x15c>
 80189e0:	2300      	movs	r3, #0
 80189e2:	4618      	mov	r0, r3
 80189e4:	3718      	adds	r7, #24
 80189e6:	46bd      	mov	sp, r7
 80189e8:	bd80      	pop	{r7, pc}

080189ea <USBD_LL_Reset>:
 80189ea:	b580      	push	{r7, lr}
 80189ec:	b084      	sub	sp, #16
 80189ee:	af00      	add	r7, sp, #0
 80189f0:	6078      	str	r0, [r7, #4]
 80189f2:	2300      	movs	r3, #0
 80189f4:	73fb      	strb	r3, [r7, #15]
 80189f6:	687b      	ldr	r3, [r7, #4]
 80189f8:	2201      	movs	r2, #1
 80189fa:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80189fe:	687b      	ldr	r3, [r7, #4]
 8018a00:	2200      	movs	r2, #0
 8018a02:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8018a06:	687b      	ldr	r3, [r7, #4]
 8018a08:	2200      	movs	r2, #0
 8018a0a:	605a      	str	r2, [r3, #4]
 8018a0c:	687b      	ldr	r3, [r7, #4]
 8018a0e:	2200      	movs	r2, #0
 8018a10:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 8018a14:	687b      	ldr	r3, [r7, #4]
 8018a16:	2200      	movs	r2, #0
 8018a18:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 8018a1c:	687b      	ldr	r3, [r7, #4]
 8018a1e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018a22:	2b00      	cmp	r3, #0
 8018a24:	d014      	beq.n	8018a50 <USBD_LL_Reset+0x66>
 8018a26:	687b      	ldr	r3, [r7, #4]
 8018a28:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018a2c:	685b      	ldr	r3, [r3, #4]
 8018a2e:	2b00      	cmp	r3, #0
 8018a30:	d00e      	beq.n	8018a50 <USBD_LL_Reset+0x66>
 8018a32:	687b      	ldr	r3, [r7, #4]
 8018a34:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018a38:	685b      	ldr	r3, [r3, #4]
 8018a3a:	687a      	ldr	r2, [r7, #4]
 8018a3c:	6852      	ldr	r2, [r2, #4]
 8018a3e:	b2d2      	uxtb	r2, r2
 8018a40:	4611      	mov	r1, r2
 8018a42:	6878      	ldr	r0, [r7, #4]
 8018a44:	4798      	blx	r3
 8018a46:	4603      	mov	r3, r0
 8018a48:	2b00      	cmp	r3, #0
 8018a4a:	d001      	beq.n	8018a50 <USBD_LL_Reset+0x66>
 8018a4c:	2303      	movs	r3, #3
 8018a4e:	73fb      	strb	r3, [r7, #15]
 8018a50:	2340      	movs	r3, #64	@ 0x40
 8018a52:	2200      	movs	r2, #0
 8018a54:	2100      	movs	r1, #0
 8018a56:	6878      	ldr	r0, [r7, #4]
 8018a58:	f004 fd1b 	bl	801d492 <USBD_LL_OpenEP>
 8018a5c:	687b      	ldr	r3, [r7, #4]
 8018a5e:	2201      	movs	r2, #1
 8018a60:	f8a3 2164 	strh.w	r2, [r3, #356]	@ 0x164
 8018a64:	687b      	ldr	r3, [r7, #4]
 8018a66:	2240      	movs	r2, #64	@ 0x40
 8018a68:	f8c3 2160 	str.w	r2, [r3, #352]	@ 0x160
 8018a6c:	2340      	movs	r3, #64	@ 0x40
 8018a6e:	2200      	movs	r2, #0
 8018a70:	2180      	movs	r1, #128	@ 0x80
 8018a72:	6878      	ldr	r0, [r7, #4]
 8018a74:	f004 fd0d 	bl	801d492 <USBD_LL_OpenEP>
 8018a78:	687b      	ldr	r3, [r7, #4]
 8018a7a:	2201      	movs	r2, #1
 8018a7c:	849a      	strh	r2, [r3, #36]	@ 0x24
 8018a7e:	687b      	ldr	r3, [r7, #4]
 8018a80:	2240      	movs	r2, #64	@ 0x40
 8018a82:	621a      	str	r2, [r3, #32]
 8018a84:	7bfb      	ldrb	r3, [r7, #15]
 8018a86:	4618      	mov	r0, r3
 8018a88:	3710      	adds	r7, #16
 8018a8a:	46bd      	mov	sp, r7
 8018a8c:	bd80      	pop	{r7, pc}

08018a8e <USBD_LL_SetSpeed>:
 8018a8e:	b480      	push	{r7}
 8018a90:	b083      	sub	sp, #12
 8018a92:	af00      	add	r7, sp, #0
 8018a94:	6078      	str	r0, [r7, #4]
 8018a96:	460b      	mov	r3, r1
 8018a98:	70fb      	strb	r3, [r7, #3]
 8018a9a:	687b      	ldr	r3, [r7, #4]
 8018a9c:	78fa      	ldrb	r2, [r7, #3]
 8018a9e:	741a      	strb	r2, [r3, #16]
 8018aa0:	2300      	movs	r3, #0
 8018aa2:	4618      	mov	r0, r3
 8018aa4:	370c      	adds	r7, #12
 8018aa6:	46bd      	mov	sp, r7
 8018aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018aac:	4770      	bx	lr

08018aae <USBD_LL_Suspend>:
 8018aae:	b480      	push	{r7}
 8018ab0:	b083      	sub	sp, #12
 8018ab2:	af00      	add	r7, sp, #0
 8018ab4:	6078      	str	r0, [r7, #4]
 8018ab6:	687b      	ldr	r3, [r7, #4]
 8018ab8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018abc:	b2da      	uxtb	r2, r3
 8018abe:	687b      	ldr	r3, [r7, #4]
 8018ac0:	f883 229d 	strb.w	r2, [r3, #669]	@ 0x29d
 8018ac4:	687b      	ldr	r3, [r7, #4]
 8018ac6:	2204      	movs	r2, #4
 8018ac8:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8018acc:	2300      	movs	r3, #0
 8018ace:	4618      	mov	r0, r3
 8018ad0:	370c      	adds	r7, #12
 8018ad2:	46bd      	mov	sp, r7
 8018ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018ad8:	4770      	bx	lr

08018ada <USBD_LL_Resume>:
 8018ada:	b480      	push	{r7}
 8018adc:	b083      	sub	sp, #12
 8018ade:	af00      	add	r7, sp, #0
 8018ae0:	6078      	str	r0, [r7, #4]
 8018ae2:	687b      	ldr	r3, [r7, #4]
 8018ae4:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018ae8:	b2db      	uxtb	r3, r3
 8018aea:	2b04      	cmp	r3, #4
 8018aec:	d106      	bne.n	8018afc <USBD_LL_Resume+0x22>
 8018aee:	687b      	ldr	r3, [r7, #4]
 8018af0:	f893 329d 	ldrb.w	r3, [r3, #669]	@ 0x29d
 8018af4:	b2da      	uxtb	r2, r3
 8018af6:	687b      	ldr	r3, [r7, #4]
 8018af8:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8018afc:	2300      	movs	r3, #0
 8018afe:	4618      	mov	r0, r3
 8018b00:	370c      	adds	r7, #12
 8018b02:	46bd      	mov	sp, r7
 8018b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018b08:	4770      	bx	lr

08018b0a <USBD_LL_SOF>:
 8018b0a:	b580      	push	{r7, lr}
 8018b0c:	b082      	sub	sp, #8
 8018b0e:	af00      	add	r7, sp, #0
 8018b10:	6078      	str	r0, [r7, #4]
 8018b12:	687b      	ldr	r3, [r7, #4]
 8018b14:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018b18:	b2db      	uxtb	r3, r3
 8018b1a:	2b03      	cmp	r3, #3
 8018b1c:	d110      	bne.n	8018b40 <USBD_LL_SOF+0x36>
 8018b1e:	687b      	ldr	r3, [r7, #4]
 8018b20:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018b24:	2b00      	cmp	r3, #0
 8018b26:	d00b      	beq.n	8018b40 <USBD_LL_SOF+0x36>
 8018b28:	687b      	ldr	r3, [r7, #4]
 8018b2a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018b2e:	69db      	ldr	r3, [r3, #28]
 8018b30:	2b00      	cmp	r3, #0
 8018b32:	d005      	beq.n	8018b40 <USBD_LL_SOF+0x36>
 8018b34:	687b      	ldr	r3, [r7, #4]
 8018b36:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018b3a:	69db      	ldr	r3, [r3, #28]
 8018b3c:	6878      	ldr	r0, [r7, #4]
 8018b3e:	4798      	blx	r3
 8018b40:	2300      	movs	r3, #0
 8018b42:	4618      	mov	r0, r3
 8018b44:	3708      	adds	r7, #8
 8018b46:	46bd      	mov	sp, r7
 8018b48:	bd80      	pop	{r7, pc}

08018b4a <USBD_LL_IsoINIncomplete>:
 8018b4a:	b580      	push	{r7, lr}
 8018b4c:	b082      	sub	sp, #8
 8018b4e:	af00      	add	r7, sp, #0
 8018b50:	6078      	str	r0, [r7, #4]
 8018b52:	460b      	mov	r3, r1
 8018b54:	70fb      	strb	r3, [r7, #3]
 8018b56:	687b      	ldr	r3, [r7, #4]
 8018b58:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018b5c:	687b      	ldr	r3, [r7, #4]
 8018b5e:	32ae      	adds	r2, #174	@ 0xae
 8018b60:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018b64:	2b00      	cmp	r3, #0
 8018b66:	d101      	bne.n	8018b6c <USBD_LL_IsoINIncomplete+0x22>
 8018b68:	2303      	movs	r3, #3
 8018b6a:	e01c      	b.n	8018ba6 <USBD_LL_IsoINIncomplete+0x5c>
 8018b6c:	687b      	ldr	r3, [r7, #4]
 8018b6e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018b72:	b2db      	uxtb	r3, r3
 8018b74:	2b03      	cmp	r3, #3
 8018b76:	d115      	bne.n	8018ba4 <USBD_LL_IsoINIncomplete+0x5a>
 8018b78:	687b      	ldr	r3, [r7, #4]
 8018b7a:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018b7e:	687b      	ldr	r3, [r7, #4]
 8018b80:	32ae      	adds	r2, #174	@ 0xae
 8018b82:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018b86:	6a1b      	ldr	r3, [r3, #32]
 8018b88:	2b00      	cmp	r3, #0
 8018b8a:	d00b      	beq.n	8018ba4 <USBD_LL_IsoINIncomplete+0x5a>
 8018b8c:	687b      	ldr	r3, [r7, #4]
 8018b8e:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018b92:	687b      	ldr	r3, [r7, #4]
 8018b94:	32ae      	adds	r2, #174	@ 0xae
 8018b96:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018b9a:	6a1b      	ldr	r3, [r3, #32]
 8018b9c:	78fa      	ldrb	r2, [r7, #3]
 8018b9e:	4611      	mov	r1, r2
 8018ba0:	6878      	ldr	r0, [r7, #4]
 8018ba2:	4798      	blx	r3
 8018ba4:	2300      	movs	r3, #0
 8018ba6:	4618      	mov	r0, r3
 8018ba8:	3708      	adds	r7, #8
 8018baa:	46bd      	mov	sp, r7
 8018bac:	bd80      	pop	{r7, pc}

08018bae <USBD_LL_IsoOUTIncomplete>:
 8018bae:	b580      	push	{r7, lr}
 8018bb0:	b082      	sub	sp, #8
 8018bb2:	af00      	add	r7, sp, #0
 8018bb4:	6078      	str	r0, [r7, #4]
 8018bb6:	460b      	mov	r3, r1
 8018bb8:	70fb      	strb	r3, [r7, #3]
 8018bba:	687b      	ldr	r3, [r7, #4]
 8018bbc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018bc0:	687b      	ldr	r3, [r7, #4]
 8018bc2:	32ae      	adds	r2, #174	@ 0xae
 8018bc4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018bc8:	2b00      	cmp	r3, #0
 8018bca:	d101      	bne.n	8018bd0 <USBD_LL_IsoOUTIncomplete+0x22>
 8018bcc:	2303      	movs	r3, #3
 8018bce:	e01c      	b.n	8018c0a <USBD_LL_IsoOUTIncomplete+0x5c>
 8018bd0:	687b      	ldr	r3, [r7, #4]
 8018bd2:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018bd6:	b2db      	uxtb	r3, r3
 8018bd8:	2b03      	cmp	r3, #3
 8018bda:	d115      	bne.n	8018c08 <USBD_LL_IsoOUTIncomplete+0x5a>
 8018bdc:	687b      	ldr	r3, [r7, #4]
 8018bde:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018be2:	687b      	ldr	r3, [r7, #4]
 8018be4:	32ae      	adds	r2, #174	@ 0xae
 8018be6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018bea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8018bec:	2b00      	cmp	r3, #0
 8018bee:	d00b      	beq.n	8018c08 <USBD_LL_IsoOUTIncomplete+0x5a>
 8018bf0:	687b      	ldr	r3, [r7, #4]
 8018bf2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018bf6:	687b      	ldr	r3, [r7, #4]
 8018bf8:	32ae      	adds	r2, #174	@ 0xae
 8018bfa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018bfe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8018c00:	78fa      	ldrb	r2, [r7, #3]
 8018c02:	4611      	mov	r1, r2
 8018c04:	6878      	ldr	r0, [r7, #4]
 8018c06:	4798      	blx	r3
 8018c08:	2300      	movs	r3, #0
 8018c0a:	4618      	mov	r0, r3
 8018c0c:	3708      	adds	r7, #8
 8018c0e:	46bd      	mov	sp, r7
 8018c10:	bd80      	pop	{r7, pc}

08018c12 <USBD_LL_DevConnected>:
 8018c12:	b480      	push	{r7}
 8018c14:	b083      	sub	sp, #12
 8018c16:	af00      	add	r7, sp, #0
 8018c18:	6078      	str	r0, [r7, #4]
 8018c1a:	2300      	movs	r3, #0
 8018c1c:	4618      	mov	r0, r3
 8018c1e:	370c      	adds	r7, #12
 8018c20:	46bd      	mov	sp, r7
 8018c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018c26:	4770      	bx	lr

08018c28 <USBD_LL_DevDisconnected>:
 8018c28:	b580      	push	{r7, lr}
 8018c2a:	b084      	sub	sp, #16
 8018c2c:	af00      	add	r7, sp, #0
 8018c2e:	6078      	str	r0, [r7, #4]
 8018c30:	2300      	movs	r3, #0
 8018c32:	73fb      	strb	r3, [r7, #15]
 8018c34:	687b      	ldr	r3, [r7, #4]
 8018c36:	2201      	movs	r2, #1
 8018c38:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8018c3c:	687b      	ldr	r3, [r7, #4]
 8018c3e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018c42:	2b00      	cmp	r3, #0
 8018c44:	d00e      	beq.n	8018c64 <USBD_LL_DevDisconnected+0x3c>
 8018c46:	687b      	ldr	r3, [r7, #4]
 8018c48:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 8018c4c:	685b      	ldr	r3, [r3, #4]
 8018c4e:	687a      	ldr	r2, [r7, #4]
 8018c50:	6852      	ldr	r2, [r2, #4]
 8018c52:	b2d2      	uxtb	r2, r2
 8018c54:	4611      	mov	r1, r2
 8018c56:	6878      	ldr	r0, [r7, #4]
 8018c58:	4798      	blx	r3
 8018c5a:	4603      	mov	r3, r0
 8018c5c:	2b00      	cmp	r3, #0
 8018c5e:	d001      	beq.n	8018c64 <USBD_LL_DevDisconnected+0x3c>
 8018c60:	2303      	movs	r3, #3
 8018c62:	73fb      	strb	r3, [r7, #15]
 8018c64:	7bfb      	ldrb	r3, [r7, #15]
 8018c66:	4618      	mov	r0, r3
 8018c68:	3710      	adds	r7, #16
 8018c6a:	46bd      	mov	sp, r7
 8018c6c:	bd80      	pop	{r7, pc}

08018c6e <USBD_CoreFindIF>:
 8018c6e:	b480      	push	{r7}
 8018c70:	b083      	sub	sp, #12
 8018c72:	af00      	add	r7, sp, #0
 8018c74:	6078      	str	r0, [r7, #4]
 8018c76:	460b      	mov	r3, r1
 8018c78:	70fb      	strb	r3, [r7, #3]
 8018c7a:	2300      	movs	r3, #0
 8018c7c:	4618      	mov	r0, r3
 8018c7e:	370c      	adds	r7, #12
 8018c80:	46bd      	mov	sp, r7
 8018c82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018c86:	4770      	bx	lr

08018c88 <USBD_CoreFindEP>:
 8018c88:	b480      	push	{r7}
 8018c8a:	b083      	sub	sp, #12
 8018c8c:	af00      	add	r7, sp, #0
 8018c8e:	6078      	str	r0, [r7, #4]
 8018c90:	460b      	mov	r3, r1
 8018c92:	70fb      	strb	r3, [r7, #3]
 8018c94:	2300      	movs	r3, #0
 8018c96:	4618      	mov	r0, r3
 8018c98:	370c      	adds	r7, #12
 8018c9a:	46bd      	mov	sp, r7
 8018c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018ca0:	4770      	bx	lr

08018ca2 <USBD_GetEpDesc>:
 8018ca2:	b580      	push	{r7, lr}
 8018ca4:	b086      	sub	sp, #24
 8018ca6:	af00      	add	r7, sp, #0
 8018ca8:	6078      	str	r0, [r7, #4]
 8018caa:	460b      	mov	r3, r1
 8018cac:	70fb      	strb	r3, [r7, #3]
 8018cae:	687b      	ldr	r3, [r7, #4]
 8018cb0:	617b      	str	r3, [r7, #20]
 8018cb2:	687b      	ldr	r3, [r7, #4]
 8018cb4:	60fb      	str	r3, [r7, #12]
 8018cb6:	2300      	movs	r3, #0
 8018cb8:	613b      	str	r3, [r7, #16]
 8018cba:	68fb      	ldr	r3, [r7, #12]
 8018cbc:	885b      	ldrh	r3, [r3, #2]
 8018cbe:	b29b      	uxth	r3, r3
 8018cc0:	68fa      	ldr	r2, [r7, #12]
 8018cc2:	7812      	ldrb	r2, [r2, #0]
 8018cc4:	4293      	cmp	r3, r2
 8018cc6:	d91f      	bls.n	8018d08 <USBD_GetEpDesc+0x66>
 8018cc8:	68fb      	ldr	r3, [r7, #12]
 8018cca:	781b      	ldrb	r3, [r3, #0]
 8018ccc:	817b      	strh	r3, [r7, #10]
 8018cce:	e013      	b.n	8018cf8 <USBD_GetEpDesc+0x56>
 8018cd0:	f107 030a 	add.w	r3, r7, #10
 8018cd4:	4619      	mov	r1, r3
 8018cd6:	6978      	ldr	r0, [r7, #20]
 8018cd8:	f000 f81b 	bl	8018d12 <USBD_GetNextDesc>
 8018cdc:	6178      	str	r0, [r7, #20]
 8018cde:	697b      	ldr	r3, [r7, #20]
 8018ce0:	785b      	ldrb	r3, [r3, #1]
 8018ce2:	2b05      	cmp	r3, #5
 8018ce4:	d108      	bne.n	8018cf8 <USBD_GetEpDesc+0x56>
 8018ce6:	697b      	ldr	r3, [r7, #20]
 8018ce8:	613b      	str	r3, [r7, #16]
 8018cea:	693b      	ldr	r3, [r7, #16]
 8018cec:	789b      	ldrb	r3, [r3, #2]
 8018cee:	78fa      	ldrb	r2, [r7, #3]
 8018cf0:	429a      	cmp	r2, r3
 8018cf2:	d008      	beq.n	8018d06 <USBD_GetEpDesc+0x64>
 8018cf4:	2300      	movs	r3, #0
 8018cf6:	613b      	str	r3, [r7, #16]
 8018cf8:	68fb      	ldr	r3, [r7, #12]
 8018cfa:	885b      	ldrh	r3, [r3, #2]
 8018cfc:	b29a      	uxth	r2, r3
 8018cfe:	897b      	ldrh	r3, [r7, #10]
 8018d00:	429a      	cmp	r2, r3
 8018d02:	d8e5      	bhi.n	8018cd0 <USBD_GetEpDesc+0x2e>
 8018d04:	e000      	b.n	8018d08 <USBD_GetEpDesc+0x66>
 8018d06:	bf00      	nop
 8018d08:	693b      	ldr	r3, [r7, #16]
 8018d0a:	4618      	mov	r0, r3
 8018d0c:	3718      	adds	r7, #24
 8018d0e:	46bd      	mov	sp, r7
 8018d10:	bd80      	pop	{r7, pc}

08018d12 <USBD_GetNextDesc>:
 8018d12:	b480      	push	{r7}
 8018d14:	b085      	sub	sp, #20
 8018d16:	af00      	add	r7, sp, #0
 8018d18:	6078      	str	r0, [r7, #4]
 8018d1a:	6039      	str	r1, [r7, #0]
 8018d1c:	687b      	ldr	r3, [r7, #4]
 8018d1e:	60fb      	str	r3, [r7, #12]
 8018d20:	683b      	ldr	r3, [r7, #0]
 8018d22:	881b      	ldrh	r3, [r3, #0]
 8018d24:	68fa      	ldr	r2, [r7, #12]
 8018d26:	7812      	ldrb	r2, [r2, #0]
 8018d28:	4413      	add	r3, r2
 8018d2a:	b29a      	uxth	r2, r3
 8018d2c:	683b      	ldr	r3, [r7, #0]
 8018d2e:	801a      	strh	r2, [r3, #0]
 8018d30:	68fb      	ldr	r3, [r7, #12]
 8018d32:	781b      	ldrb	r3, [r3, #0]
 8018d34:	461a      	mov	r2, r3
 8018d36:	687b      	ldr	r3, [r7, #4]
 8018d38:	4413      	add	r3, r2
 8018d3a:	60fb      	str	r3, [r7, #12]
 8018d3c:	68fb      	ldr	r3, [r7, #12]
 8018d3e:	4618      	mov	r0, r3
 8018d40:	3714      	adds	r7, #20
 8018d42:	46bd      	mov	sp, r7
 8018d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018d48:	4770      	bx	lr

08018d4a <SWAPBYTE>:
 8018d4a:	b480      	push	{r7}
 8018d4c:	b087      	sub	sp, #28
 8018d4e:	af00      	add	r7, sp, #0
 8018d50:	6078      	str	r0, [r7, #4]
 8018d52:	687b      	ldr	r3, [r7, #4]
 8018d54:	617b      	str	r3, [r7, #20]
 8018d56:	697b      	ldr	r3, [r7, #20]
 8018d58:	781b      	ldrb	r3, [r3, #0]
 8018d5a:	827b      	strh	r3, [r7, #18]
 8018d5c:	697b      	ldr	r3, [r7, #20]
 8018d5e:	3301      	adds	r3, #1
 8018d60:	617b      	str	r3, [r7, #20]
 8018d62:	697b      	ldr	r3, [r7, #20]
 8018d64:	781b      	ldrb	r3, [r3, #0]
 8018d66:	823b      	strh	r3, [r7, #16]
 8018d68:	8a3b      	ldrh	r3, [r7, #16]
 8018d6a:	021b      	lsls	r3, r3, #8
 8018d6c:	b21a      	sxth	r2, r3
 8018d6e:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 8018d72:	4313      	orrs	r3, r2
 8018d74:	b21b      	sxth	r3, r3
 8018d76:	81fb      	strh	r3, [r7, #14]
 8018d78:	89fb      	ldrh	r3, [r7, #14]
 8018d7a:	4618      	mov	r0, r3
 8018d7c:	371c      	adds	r7, #28
 8018d7e:	46bd      	mov	sp, r7
 8018d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8018d84:	4770      	bx	lr
	...

08018d88 <USBD_StdDevReq>:
 8018d88:	b580      	push	{r7, lr}
 8018d8a:	b084      	sub	sp, #16
 8018d8c:	af00      	add	r7, sp, #0
 8018d8e:	6078      	str	r0, [r7, #4]
 8018d90:	6039      	str	r1, [r7, #0]
 8018d92:	2300      	movs	r3, #0
 8018d94:	73fb      	strb	r3, [r7, #15]
 8018d96:	683b      	ldr	r3, [r7, #0]
 8018d98:	781b      	ldrb	r3, [r3, #0]
 8018d9a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8018d9e:	2b40      	cmp	r3, #64	@ 0x40
 8018da0:	d005      	beq.n	8018dae <USBD_StdDevReq+0x26>
 8018da2:	2b40      	cmp	r3, #64	@ 0x40
 8018da4:	d857      	bhi.n	8018e56 <USBD_StdDevReq+0xce>
 8018da6:	2b00      	cmp	r3, #0
 8018da8:	d00f      	beq.n	8018dca <USBD_StdDevReq+0x42>
 8018daa:	2b20      	cmp	r3, #32
 8018dac:	d153      	bne.n	8018e56 <USBD_StdDevReq+0xce>
 8018dae:	687b      	ldr	r3, [r7, #4]
 8018db0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4
 8018db4:	687b      	ldr	r3, [r7, #4]
 8018db6:	32ae      	adds	r2, #174	@ 0xae
 8018db8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018dbc:	689b      	ldr	r3, [r3, #8]
 8018dbe:	6839      	ldr	r1, [r7, #0]
 8018dc0:	6878      	ldr	r0, [r7, #4]
 8018dc2:	4798      	blx	r3
 8018dc4:	4603      	mov	r3, r0
 8018dc6:	73fb      	strb	r3, [r7, #15]
 8018dc8:	e04a      	b.n	8018e60 <USBD_StdDevReq+0xd8>
 8018dca:	683b      	ldr	r3, [r7, #0]
 8018dcc:	785b      	ldrb	r3, [r3, #1]
 8018dce:	2b09      	cmp	r3, #9
 8018dd0:	d83b      	bhi.n	8018e4a <USBD_StdDevReq+0xc2>
 8018dd2:	a201      	add	r2, pc, #4	@ (adr r2, 8018dd8 <USBD_StdDevReq+0x50>)
 8018dd4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8018dd8:	08018e2d 	.word	0x08018e2d
 8018ddc:	08018e41 	.word	0x08018e41
 8018de0:	08018e4b 	.word	0x08018e4b
 8018de4:	08018e37 	.word	0x08018e37
 8018de8:	08018e4b 	.word	0x08018e4b
 8018dec:	08018e0b 	.word	0x08018e0b
 8018df0:	08018e01 	.word	0x08018e01
 8018df4:	08018e4b 	.word	0x08018e4b
 8018df8:	08018e23 	.word	0x08018e23
 8018dfc:	08018e15 	.word	0x08018e15
 8018e00:	6839      	ldr	r1, [r7, #0]
 8018e02:	6878      	ldr	r0, [r7, #4]
 8018e04:	f000 fa3c 	bl	8019280 <USBD_GetDescriptor>
 8018e08:	e024      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e0a:	6839      	ldr	r1, [r7, #0]
 8018e0c:	6878      	ldr	r0, [r7, #4]
 8018e0e:	f000 fba1 	bl	8019554 <USBD_SetAddress>
 8018e12:	e01f      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e14:	6839      	ldr	r1, [r7, #0]
 8018e16:	6878      	ldr	r0, [r7, #4]
 8018e18:	f000 fbe0 	bl	80195dc <USBD_SetConfig>
 8018e1c:	4603      	mov	r3, r0
 8018e1e:	73fb      	strb	r3, [r7, #15]
 8018e20:	e018      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e22:	6839      	ldr	r1, [r7, #0]
 8018e24:	6878      	ldr	r0, [r7, #4]
 8018e26:	f000 fc83 	bl	8019730 <USBD_GetConfig>
 8018e2a:	e013      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e2c:	6839      	ldr	r1, [r7, #0]
 8018e2e:	6878      	ldr	r0, [r7, #4]
 8018e30:	f000 fcb4 	bl	801979c <USBD_GetStatus>
 8018e34:	e00e      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e36:	6839      	ldr	r1, [r7, #0]
 8018e38:	6878      	ldr	r0, [r7, #4]
 8018e3a:	f000 fce3 	bl	8019804 <USBD_SetFeature>
 8018e3e:	e009      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e40:	6839      	ldr	r1, [r7, #0]
 8018e42:	6878      	ldr	r0, [r7, #4]
 8018e44:	f000 fd07 	bl	8019856 <USBD_ClrFeature>
 8018e48:	e004      	b.n	8018e54 <USBD_StdDevReq+0xcc>
 8018e4a:	6839      	ldr	r1, [r7, #0]
 8018e4c:	6878      	ldr	r0, [r7, #4]
 8018e4e:	f000 fd5e 	bl	801990e <USBD_CtlError>
 8018e52:	bf00      	nop
 8018e54:	e004      	b.n	8018e60 <USBD_StdDevReq+0xd8>
 8018e56:	6839      	ldr	r1, [r7, #0]
 8018e58:	6878      	ldr	r0, [r7, #4]
 8018e5a:	f000 fd58 	bl	801990e <USBD_CtlError>
 8018e5e:	bf00      	nop
 8018e60:	7bfb      	ldrb	r3, [r7, #15]
 8018e62:	4618      	mov	r0, r3
 8018e64:	3710      	adds	r7, #16
 8018e66:	46bd      	mov	sp, r7
 8018e68:	bd80      	pop	{r7, pc}
 8018e6a:	bf00      	nop

08018e6c <USBD_StdItfReq>:
 8018e6c:	b580      	push	{r7, lr}
 8018e6e:	b084      	sub	sp, #16
 8018e70:	af00      	add	r7, sp, #0
 8018e72:	6078      	str	r0, [r7, #4]
 8018e74:	6039      	str	r1, [r7, #0]
 8018e76:	2300      	movs	r3, #0
 8018e78:	73fb      	strb	r3, [r7, #15]
 8018e7a:	683b      	ldr	r3, [r7, #0]
 8018e7c:	781b      	ldrb	r3, [r3, #0]
 8018e7e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8018e82:	2b40      	cmp	r3, #64	@ 0x40
 8018e84:	d005      	beq.n	8018e92 <USBD_StdItfReq+0x26>
 8018e86:	2b40      	cmp	r3, #64	@ 0x40
 8018e88:	d852      	bhi.n	8018f30 <USBD_StdItfReq+0xc4>
 8018e8a:	2b00      	cmp	r3, #0
 8018e8c:	d001      	beq.n	8018e92 <USBD_StdItfReq+0x26>
 8018e8e:	2b20      	cmp	r3, #32
 8018e90:	d14e      	bne.n	8018f30 <USBD_StdItfReq+0xc4>
 8018e92:	687b      	ldr	r3, [r7, #4]
 8018e94:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018e98:	b2db      	uxtb	r3, r3
 8018e9a:	3b01      	subs	r3, #1
 8018e9c:	2b02      	cmp	r3, #2
 8018e9e:	d840      	bhi.n	8018f22 <USBD_StdItfReq+0xb6>
 8018ea0:	683b      	ldr	r3, [r7, #0]
 8018ea2:	889b      	ldrh	r3, [r3, #4]
 8018ea4:	b2db      	uxtb	r3, r3
 8018ea6:	2b01      	cmp	r3, #1
 8018ea8:	d836      	bhi.n	8018f18 <USBD_StdItfReq+0xac>
 8018eaa:	683b      	ldr	r3, [r7, #0]
 8018eac:	889b      	ldrh	r3, [r3, #4]
 8018eae:	b2db      	uxtb	r3, r3
 8018eb0:	4619      	mov	r1, r3
 8018eb2:	6878      	ldr	r0, [r7, #4]
 8018eb4:	f7ff fedb 	bl	8018c6e <USBD_CoreFindIF>
 8018eb8:	4603      	mov	r3, r0
 8018eba:	73bb      	strb	r3, [r7, #14]
 8018ebc:	7bbb      	ldrb	r3, [r7, #14]
 8018ebe:	2bff      	cmp	r3, #255	@ 0xff
 8018ec0:	d01d      	beq.n	8018efe <USBD_StdItfReq+0x92>
 8018ec2:	7bbb      	ldrb	r3, [r7, #14]
 8018ec4:	2b00      	cmp	r3, #0
 8018ec6:	d11a      	bne.n	8018efe <USBD_StdItfReq+0x92>
 8018ec8:	7bba      	ldrb	r2, [r7, #14]
 8018eca:	687b      	ldr	r3, [r7, #4]
 8018ecc:	32ae      	adds	r2, #174	@ 0xae
 8018ece:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018ed2:	689b      	ldr	r3, [r3, #8]
 8018ed4:	2b00      	cmp	r3, #0
 8018ed6:	d00f      	beq.n	8018ef8 <USBD_StdItfReq+0x8c>
 8018ed8:	7bba      	ldrb	r2, [r7, #14]
 8018eda:	687b      	ldr	r3, [r7, #4]
 8018edc:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8018ee0:	7bba      	ldrb	r2, [r7, #14]
 8018ee2:	687b      	ldr	r3, [r7, #4]
 8018ee4:	32ae      	adds	r2, #174	@ 0xae
 8018ee6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018eea:	689b      	ldr	r3, [r3, #8]
 8018eec:	6839      	ldr	r1, [r7, #0]
 8018eee:	6878      	ldr	r0, [r7, #4]
 8018ef0:	4798      	blx	r3
 8018ef2:	4603      	mov	r3, r0
 8018ef4:	73fb      	strb	r3, [r7, #15]
 8018ef6:	e004      	b.n	8018f02 <USBD_StdItfReq+0x96>
 8018ef8:	2303      	movs	r3, #3
 8018efa:	73fb      	strb	r3, [r7, #15]
 8018efc:	e001      	b.n	8018f02 <USBD_StdItfReq+0x96>
 8018efe:	2303      	movs	r3, #3
 8018f00:	73fb      	strb	r3, [r7, #15]
 8018f02:	683b      	ldr	r3, [r7, #0]
 8018f04:	88db      	ldrh	r3, [r3, #6]
 8018f06:	2b00      	cmp	r3, #0
 8018f08:	d110      	bne.n	8018f2c <USBD_StdItfReq+0xc0>
 8018f0a:	7bfb      	ldrb	r3, [r7, #15]
 8018f0c:	2b00      	cmp	r3, #0
 8018f0e:	d10d      	bne.n	8018f2c <USBD_StdItfReq+0xc0>
 8018f10:	6878      	ldr	r0, [r7, #4]
 8018f12:	f000 fdc7 	bl	8019aa4 <USBD_CtlSendStatus>
 8018f16:	e009      	b.n	8018f2c <USBD_StdItfReq+0xc0>
 8018f18:	6839      	ldr	r1, [r7, #0]
 8018f1a:	6878      	ldr	r0, [r7, #4]
 8018f1c:	f000 fcf7 	bl	801990e <USBD_CtlError>
 8018f20:	e004      	b.n	8018f2c <USBD_StdItfReq+0xc0>
 8018f22:	6839      	ldr	r1, [r7, #0]
 8018f24:	6878      	ldr	r0, [r7, #4]
 8018f26:	f000 fcf2 	bl	801990e <USBD_CtlError>
 8018f2a:	e000      	b.n	8018f2e <USBD_StdItfReq+0xc2>
 8018f2c:	bf00      	nop
 8018f2e:	e004      	b.n	8018f3a <USBD_StdItfReq+0xce>
 8018f30:	6839      	ldr	r1, [r7, #0]
 8018f32:	6878      	ldr	r0, [r7, #4]
 8018f34:	f000 fceb 	bl	801990e <USBD_CtlError>
 8018f38:	bf00      	nop
 8018f3a:	7bfb      	ldrb	r3, [r7, #15]
 8018f3c:	4618      	mov	r0, r3
 8018f3e:	3710      	adds	r7, #16
 8018f40:	46bd      	mov	sp, r7
 8018f42:	bd80      	pop	{r7, pc}

08018f44 <USBD_StdEPReq>:
 8018f44:	b580      	push	{r7, lr}
 8018f46:	b084      	sub	sp, #16
 8018f48:	af00      	add	r7, sp, #0
 8018f4a:	6078      	str	r0, [r7, #4]
 8018f4c:	6039      	str	r1, [r7, #0]
 8018f4e:	2300      	movs	r3, #0
 8018f50:	73fb      	strb	r3, [r7, #15]
 8018f52:	683b      	ldr	r3, [r7, #0]
 8018f54:	889b      	ldrh	r3, [r3, #4]
 8018f56:	73bb      	strb	r3, [r7, #14]
 8018f58:	683b      	ldr	r3, [r7, #0]
 8018f5a:	781b      	ldrb	r3, [r3, #0]
 8018f5c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8018f60:	2b40      	cmp	r3, #64	@ 0x40
 8018f62:	d007      	beq.n	8018f74 <USBD_StdEPReq+0x30>
 8018f64:	2b40      	cmp	r3, #64	@ 0x40
 8018f66:	f200 817f 	bhi.w	8019268 <USBD_StdEPReq+0x324>
 8018f6a:	2b00      	cmp	r3, #0
 8018f6c:	d02a      	beq.n	8018fc4 <USBD_StdEPReq+0x80>
 8018f6e:	2b20      	cmp	r3, #32
 8018f70:	f040 817a 	bne.w	8019268 <USBD_StdEPReq+0x324>
 8018f74:	7bbb      	ldrb	r3, [r7, #14]
 8018f76:	4619      	mov	r1, r3
 8018f78:	6878      	ldr	r0, [r7, #4]
 8018f7a:	f7ff fe85 	bl	8018c88 <USBD_CoreFindEP>
 8018f7e:	4603      	mov	r3, r0
 8018f80:	737b      	strb	r3, [r7, #13]
 8018f82:	7b7b      	ldrb	r3, [r7, #13]
 8018f84:	2bff      	cmp	r3, #255	@ 0xff
 8018f86:	f000 8174 	beq.w	8019272 <USBD_StdEPReq+0x32e>
 8018f8a:	7b7b      	ldrb	r3, [r7, #13]
 8018f8c:	2b00      	cmp	r3, #0
 8018f8e:	f040 8170 	bne.w	8019272 <USBD_StdEPReq+0x32e>
 8018f92:	7b7a      	ldrb	r2, [r7, #13]
 8018f94:	687b      	ldr	r3, [r7, #4]
 8018f96:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 8018f9a:	7b7a      	ldrb	r2, [r7, #13]
 8018f9c:	687b      	ldr	r3, [r7, #4]
 8018f9e:	32ae      	adds	r2, #174	@ 0xae
 8018fa0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018fa4:	689b      	ldr	r3, [r3, #8]
 8018fa6:	2b00      	cmp	r3, #0
 8018fa8:	f000 8163 	beq.w	8019272 <USBD_StdEPReq+0x32e>
 8018fac:	7b7a      	ldrb	r2, [r7, #13]
 8018fae:	687b      	ldr	r3, [r7, #4]
 8018fb0:	32ae      	adds	r2, #174	@ 0xae
 8018fb2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8018fb6:	689b      	ldr	r3, [r3, #8]
 8018fb8:	6839      	ldr	r1, [r7, #0]
 8018fba:	6878      	ldr	r0, [r7, #4]
 8018fbc:	4798      	blx	r3
 8018fbe:	4603      	mov	r3, r0
 8018fc0:	73fb      	strb	r3, [r7, #15]
 8018fc2:	e156      	b.n	8019272 <USBD_StdEPReq+0x32e>
 8018fc4:	683b      	ldr	r3, [r7, #0]
 8018fc6:	785b      	ldrb	r3, [r3, #1]
 8018fc8:	2b03      	cmp	r3, #3
 8018fca:	d008      	beq.n	8018fde <USBD_StdEPReq+0x9a>
 8018fcc:	2b03      	cmp	r3, #3
 8018fce:	f300 8145 	bgt.w	801925c <USBD_StdEPReq+0x318>
 8018fd2:	2b00      	cmp	r3, #0
 8018fd4:	f000 809b 	beq.w	801910e <USBD_StdEPReq+0x1ca>
 8018fd8:	2b01      	cmp	r3, #1
 8018fda:	d03c      	beq.n	8019056 <USBD_StdEPReq+0x112>
 8018fdc:	e13e      	b.n	801925c <USBD_StdEPReq+0x318>
 8018fde:	687b      	ldr	r3, [r7, #4]
 8018fe0:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8018fe4:	b2db      	uxtb	r3, r3
 8018fe6:	2b02      	cmp	r3, #2
 8018fe8:	d002      	beq.n	8018ff0 <USBD_StdEPReq+0xac>
 8018fea:	2b03      	cmp	r3, #3
 8018fec:	d016      	beq.n	801901c <USBD_StdEPReq+0xd8>
 8018fee:	e02c      	b.n	801904a <USBD_StdEPReq+0x106>
 8018ff0:	7bbb      	ldrb	r3, [r7, #14]
 8018ff2:	2b00      	cmp	r3, #0
 8018ff4:	d00d      	beq.n	8019012 <USBD_StdEPReq+0xce>
 8018ff6:	7bbb      	ldrb	r3, [r7, #14]
 8018ff8:	2b80      	cmp	r3, #128	@ 0x80
 8018ffa:	d00a      	beq.n	8019012 <USBD_StdEPReq+0xce>
 8018ffc:	7bbb      	ldrb	r3, [r7, #14]
 8018ffe:	4619      	mov	r1, r3
 8019000:	6878      	ldr	r0, [r7, #4]
 8019002:	f004 fa8b 	bl	801d51c <USBD_LL_StallEP>
 8019006:	2180      	movs	r1, #128	@ 0x80
 8019008:	6878      	ldr	r0, [r7, #4]
 801900a:	f004 fa87 	bl	801d51c <USBD_LL_StallEP>
 801900e:	bf00      	nop
 8019010:	e020      	b.n	8019054 <USBD_StdEPReq+0x110>
 8019012:	6839      	ldr	r1, [r7, #0]
 8019014:	6878      	ldr	r0, [r7, #4]
 8019016:	f000 fc7a 	bl	801990e <USBD_CtlError>
 801901a:	e01b      	b.n	8019054 <USBD_StdEPReq+0x110>
 801901c:	683b      	ldr	r3, [r7, #0]
 801901e:	885b      	ldrh	r3, [r3, #2]
 8019020:	2b00      	cmp	r3, #0
 8019022:	d10e      	bne.n	8019042 <USBD_StdEPReq+0xfe>
 8019024:	7bbb      	ldrb	r3, [r7, #14]
 8019026:	2b00      	cmp	r3, #0
 8019028:	d00b      	beq.n	8019042 <USBD_StdEPReq+0xfe>
 801902a:	7bbb      	ldrb	r3, [r7, #14]
 801902c:	2b80      	cmp	r3, #128	@ 0x80
 801902e:	d008      	beq.n	8019042 <USBD_StdEPReq+0xfe>
 8019030:	683b      	ldr	r3, [r7, #0]
 8019032:	88db      	ldrh	r3, [r3, #6]
 8019034:	2b00      	cmp	r3, #0
 8019036:	d104      	bne.n	8019042 <USBD_StdEPReq+0xfe>
 8019038:	7bbb      	ldrb	r3, [r7, #14]
 801903a:	4619      	mov	r1, r3
 801903c:	6878      	ldr	r0, [r7, #4]
 801903e:	f004 fa6d 	bl	801d51c <USBD_LL_StallEP>
 8019042:	6878      	ldr	r0, [r7, #4]
 8019044:	f000 fd2e 	bl	8019aa4 <USBD_CtlSendStatus>
 8019048:	e004      	b.n	8019054 <USBD_StdEPReq+0x110>
 801904a:	6839      	ldr	r1, [r7, #0]
 801904c:	6878      	ldr	r0, [r7, #4]
 801904e:	f000 fc5e 	bl	801990e <USBD_CtlError>
 8019052:	bf00      	nop
 8019054:	e107      	b.n	8019266 <USBD_StdEPReq+0x322>
 8019056:	687b      	ldr	r3, [r7, #4]
 8019058:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801905c:	b2db      	uxtb	r3, r3
 801905e:	2b02      	cmp	r3, #2
 8019060:	d002      	beq.n	8019068 <USBD_StdEPReq+0x124>
 8019062:	2b03      	cmp	r3, #3
 8019064:	d016      	beq.n	8019094 <USBD_StdEPReq+0x150>
 8019066:	e04b      	b.n	8019100 <USBD_StdEPReq+0x1bc>
 8019068:	7bbb      	ldrb	r3, [r7, #14]
 801906a:	2b00      	cmp	r3, #0
 801906c:	d00d      	beq.n	801908a <USBD_StdEPReq+0x146>
 801906e:	7bbb      	ldrb	r3, [r7, #14]
 8019070:	2b80      	cmp	r3, #128	@ 0x80
 8019072:	d00a      	beq.n	801908a <USBD_StdEPReq+0x146>
 8019074:	7bbb      	ldrb	r3, [r7, #14]
 8019076:	4619      	mov	r1, r3
 8019078:	6878      	ldr	r0, [r7, #4]
 801907a:	f004 fa4f 	bl	801d51c <USBD_LL_StallEP>
 801907e:	2180      	movs	r1, #128	@ 0x80
 8019080:	6878      	ldr	r0, [r7, #4]
 8019082:	f004 fa4b 	bl	801d51c <USBD_LL_StallEP>
 8019086:	bf00      	nop
 8019088:	e040      	b.n	801910c <USBD_StdEPReq+0x1c8>
 801908a:	6839      	ldr	r1, [r7, #0]
 801908c:	6878      	ldr	r0, [r7, #4]
 801908e:	f000 fc3e 	bl	801990e <USBD_CtlError>
 8019092:	e03b      	b.n	801910c <USBD_StdEPReq+0x1c8>
 8019094:	683b      	ldr	r3, [r7, #0]
 8019096:	885b      	ldrh	r3, [r3, #2]
 8019098:	2b00      	cmp	r3, #0
 801909a:	d136      	bne.n	801910a <USBD_StdEPReq+0x1c6>
 801909c:	7bbb      	ldrb	r3, [r7, #14]
 801909e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80190a2:	2b00      	cmp	r3, #0
 80190a4:	d004      	beq.n	80190b0 <USBD_StdEPReq+0x16c>
 80190a6:	7bbb      	ldrb	r3, [r7, #14]
 80190a8:	4619      	mov	r1, r3
 80190aa:	6878      	ldr	r0, [r7, #4]
 80190ac:	f004 fa55 	bl	801d55a <USBD_LL_ClearStallEP>
 80190b0:	6878      	ldr	r0, [r7, #4]
 80190b2:	f000 fcf7 	bl	8019aa4 <USBD_CtlSendStatus>
 80190b6:	7bbb      	ldrb	r3, [r7, #14]
 80190b8:	4619      	mov	r1, r3
 80190ba:	6878      	ldr	r0, [r7, #4]
 80190bc:	f7ff fde4 	bl	8018c88 <USBD_CoreFindEP>
 80190c0:	4603      	mov	r3, r0
 80190c2:	737b      	strb	r3, [r7, #13]
 80190c4:	7b7b      	ldrb	r3, [r7, #13]
 80190c6:	2bff      	cmp	r3, #255	@ 0xff
 80190c8:	d01f      	beq.n	801910a <USBD_StdEPReq+0x1c6>
 80190ca:	7b7b      	ldrb	r3, [r7, #13]
 80190cc:	2b00      	cmp	r3, #0
 80190ce:	d11c      	bne.n	801910a <USBD_StdEPReq+0x1c6>
 80190d0:	7b7a      	ldrb	r2, [r7, #13]
 80190d2:	687b      	ldr	r3, [r7, #4]
 80190d4:	f8c3 22d4 	str.w	r2, [r3, #724]	@ 0x2d4
 80190d8:	7b7a      	ldrb	r2, [r7, #13]
 80190da:	687b      	ldr	r3, [r7, #4]
 80190dc:	32ae      	adds	r2, #174	@ 0xae
 80190de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80190e2:	689b      	ldr	r3, [r3, #8]
 80190e4:	2b00      	cmp	r3, #0
 80190e6:	d010      	beq.n	801910a <USBD_StdEPReq+0x1c6>
 80190e8:	7b7a      	ldrb	r2, [r7, #13]
 80190ea:	687b      	ldr	r3, [r7, #4]
 80190ec:	32ae      	adds	r2, #174	@ 0xae
 80190ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80190f2:	689b      	ldr	r3, [r3, #8]
 80190f4:	6839      	ldr	r1, [r7, #0]
 80190f6:	6878      	ldr	r0, [r7, #4]
 80190f8:	4798      	blx	r3
 80190fa:	4603      	mov	r3, r0
 80190fc:	73fb      	strb	r3, [r7, #15]
 80190fe:	e004      	b.n	801910a <USBD_StdEPReq+0x1c6>
 8019100:	6839      	ldr	r1, [r7, #0]
 8019102:	6878      	ldr	r0, [r7, #4]
 8019104:	f000 fc03 	bl	801990e <USBD_CtlError>
 8019108:	e000      	b.n	801910c <USBD_StdEPReq+0x1c8>
 801910a:	bf00      	nop
 801910c:	e0ab      	b.n	8019266 <USBD_StdEPReq+0x322>
 801910e:	687b      	ldr	r3, [r7, #4]
 8019110:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8019114:	b2db      	uxtb	r3, r3
 8019116:	2b02      	cmp	r3, #2
 8019118:	d002      	beq.n	8019120 <USBD_StdEPReq+0x1dc>
 801911a:	2b03      	cmp	r3, #3
 801911c:	d032      	beq.n	8019184 <USBD_StdEPReq+0x240>
 801911e:	e097      	b.n	8019250 <USBD_StdEPReq+0x30c>
 8019120:	7bbb      	ldrb	r3, [r7, #14]
 8019122:	2b00      	cmp	r3, #0
 8019124:	d007      	beq.n	8019136 <USBD_StdEPReq+0x1f2>
 8019126:	7bbb      	ldrb	r3, [r7, #14]
 8019128:	2b80      	cmp	r3, #128	@ 0x80
 801912a:	d004      	beq.n	8019136 <USBD_StdEPReq+0x1f2>
 801912c:	6839      	ldr	r1, [r7, #0]
 801912e:	6878      	ldr	r0, [r7, #4]
 8019130:	f000 fbed 	bl	801990e <USBD_CtlError>
 8019134:	e091      	b.n	801925a <USBD_StdEPReq+0x316>
 8019136:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801913a:	2b00      	cmp	r3, #0
 801913c:	da0b      	bge.n	8019156 <USBD_StdEPReq+0x212>
 801913e:	7bbb      	ldrb	r3, [r7, #14]
 8019140:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 8019144:	4613      	mov	r3, r2
 8019146:	009b      	lsls	r3, r3, #2
 8019148:	4413      	add	r3, r2
 801914a:	009b      	lsls	r3, r3, #2
 801914c:	3310      	adds	r3, #16
 801914e:	687a      	ldr	r2, [r7, #4]
 8019150:	4413      	add	r3, r2
 8019152:	3304      	adds	r3, #4
 8019154:	e00b      	b.n	801916e <USBD_StdEPReq+0x22a>
 8019156:	7bbb      	ldrb	r3, [r7, #14]
 8019158:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801915c:	4613      	mov	r3, r2
 801915e:	009b      	lsls	r3, r3, #2
 8019160:	4413      	add	r3, r2
 8019162:	009b      	lsls	r3, r3, #2
 8019164:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8019168:	687a      	ldr	r2, [r7, #4]
 801916a:	4413      	add	r3, r2
 801916c:	3304      	adds	r3, #4
 801916e:	60bb      	str	r3, [r7, #8]
 8019170:	68bb      	ldr	r3, [r7, #8]
 8019172:	2200      	movs	r2, #0
 8019174:	601a      	str	r2, [r3, #0]
 8019176:	68bb      	ldr	r3, [r7, #8]
 8019178:	2202      	movs	r2, #2
 801917a:	4619      	mov	r1, r3
 801917c:	6878      	ldr	r0, [r7, #4]
 801917e:	f000 fc37 	bl	80199f0 <USBD_CtlSendData>
 8019182:	e06a      	b.n	801925a <USBD_StdEPReq+0x316>
 8019184:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8019188:	2b00      	cmp	r3, #0
 801918a:	da11      	bge.n	80191b0 <USBD_StdEPReq+0x26c>
 801918c:	7bbb      	ldrb	r3, [r7, #14]
 801918e:	f003 020f 	and.w	r2, r3, #15
 8019192:	6879      	ldr	r1, [r7, #4]
 8019194:	4613      	mov	r3, r2
 8019196:	009b      	lsls	r3, r3, #2
 8019198:	4413      	add	r3, r2
 801919a:	009b      	lsls	r3, r3, #2
 801919c:	440b      	add	r3, r1
 801919e:	3324      	adds	r3, #36	@ 0x24
 80191a0:	881b      	ldrh	r3, [r3, #0]
 80191a2:	2b00      	cmp	r3, #0
 80191a4:	d117      	bne.n	80191d6 <USBD_StdEPReq+0x292>
 80191a6:	6839      	ldr	r1, [r7, #0]
 80191a8:	6878      	ldr	r0, [r7, #4]
 80191aa:	f000 fbb0 	bl	801990e <USBD_CtlError>
 80191ae:	e054      	b.n	801925a <USBD_StdEPReq+0x316>
 80191b0:	7bbb      	ldrb	r3, [r7, #14]
 80191b2:	f003 020f 	and.w	r2, r3, #15
 80191b6:	6879      	ldr	r1, [r7, #4]
 80191b8:	4613      	mov	r3, r2
 80191ba:	009b      	lsls	r3, r3, #2
 80191bc:	4413      	add	r3, r2
 80191be:	009b      	lsls	r3, r3, #2
 80191c0:	440b      	add	r3, r1
 80191c2:	f503 73b2 	add.w	r3, r3, #356	@ 0x164
 80191c6:	881b      	ldrh	r3, [r3, #0]
 80191c8:	2b00      	cmp	r3, #0
 80191ca:	d104      	bne.n	80191d6 <USBD_StdEPReq+0x292>
 80191cc:	6839      	ldr	r1, [r7, #0]
 80191ce:	6878      	ldr	r0, [r7, #4]
 80191d0:	f000 fb9d 	bl	801990e <USBD_CtlError>
 80191d4:	e041      	b.n	801925a <USBD_StdEPReq+0x316>
 80191d6:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80191da:	2b00      	cmp	r3, #0
 80191dc:	da0b      	bge.n	80191f6 <USBD_StdEPReq+0x2b2>
 80191de:	7bbb      	ldrb	r3, [r7, #14]
 80191e0:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80191e4:	4613      	mov	r3, r2
 80191e6:	009b      	lsls	r3, r3, #2
 80191e8:	4413      	add	r3, r2
 80191ea:	009b      	lsls	r3, r3, #2
 80191ec:	3310      	adds	r3, #16
 80191ee:	687a      	ldr	r2, [r7, #4]
 80191f0:	4413      	add	r3, r2
 80191f2:	3304      	adds	r3, #4
 80191f4:	e00b      	b.n	801920e <USBD_StdEPReq+0x2ca>
 80191f6:	7bbb      	ldrb	r3, [r7, #14]
 80191f8:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80191fc:	4613      	mov	r3, r2
 80191fe:	009b      	lsls	r3, r3, #2
 8019200:	4413      	add	r3, r2
 8019202:	009b      	lsls	r3, r3, #2
 8019204:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8019208:	687a      	ldr	r2, [r7, #4]
 801920a:	4413      	add	r3, r2
 801920c:	3304      	adds	r3, #4
 801920e:	60bb      	str	r3, [r7, #8]
 8019210:	7bbb      	ldrb	r3, [r7, #14]
 8019212:	2b00      	cmp	r3, #0
 8019214:	d002      	beq.n	801921c <USBD_StdEPReq+0x2d8>
 8019216:	7bbb      	ldrb	r3, [r7, #14]
 8019218:	2b80      	cmp	r3, #128	@ 0x80
 801921a:	d103      	bne.n	8019224 <USBD_StdEPReq+0x2e0>
 801921c:	68bb      	ldr	r3, [r7, #8]
 801921e:	2200      	movs	r2, #0
 8019220:	601a      	str	r2, [r3, #0]
 8019222:	e00e      	b.n	8019242 <USBD_StdEPReq+0x2fe>
 8019224:	7bbb      	ldrb	r3, [r7, #14]
 8019226:	4619      	mov	r1, r3
 8019228:	6878      	ldr	r0, [r7, #4]
 801922a:	f004 f9b5 	bl	801d598 <USBD_LL_IsStallEP>
 801922e:	4603      	mov	r3, r0
 8019230:	2b00      	cmp	r3, #0
 8019232:	d003      	beq.n	801923c <USBD_StdEPReq+0x2f8>
 8019234:	68bb      	ldr	r3, [r7, #8]
 8019236:	2201      	movs	r2, #1
 8019238:	601a      	str	r2, [r3, #0]
 801923a:	e002      	b.n	8019242 <USBD_StdEPReq+0x2fe>
 801923c:	68bb      	ldr	r3, [r7, #8]
 801923e:	2200      	movs	r2, #0
 8019240:	601a      	str	r2, [r3, #0]
 8019242:	68bb      	ldr	r3, [r7, #8]
 8019244:	2202      	movs	r2, #2
 8019246:	4619      	mov	r1, r3
 8019248:	6878      	ldr	r0, [r7, #4]
 801924a:	f000 fbd1 	bl	80199f0 <USBD_CtlSendData>
 801924e:	e004      	b.n	801925a <USBD_StdEPReq+0x316>
 8019250:	6839      	ldr	r1, [r7, #0]
 8019252:	6878      	ldr	r0, [r7, #4]
 8019254:	f000 fb5b 	bl	801990e <USBD_CtlError>
 8019258:	bf00      	nop
 801925a:	e004      	b.n	8019266 <USBD_StdEPReq+0x322>
 801925c:	6839      	ldr	r1, [r7, #0]
 801925e:	6878      	ldr	r0, [r7, #4]
 8019260:	f000 fb55 	bl	801990e <USBD_CtlError>
 8019264:	bf00      	nop
 8019266:	e005      	b.n	8019274 <USBD_StdEPReq+0x330>
 8019268:	6839      	ldr	r1, [r7, #0]
 801926a:	6878      	ldr	r0, [r7, #4]
 801926c:	f000 fb4f 	bl	801990e <USBD_CtlError>
 8019270:	e000      	b.n	8019274 <USBD_StdEPReq+0x330>
 8019272:	bf00      	nop
 8019274:	7bfb      	ldrb	r3, [r7, #15]
 8019276:	4618      	mov	r0, r3
 8019278:	3710      	adds	r7, #16
 801927a:	46bd      	mov	sp, r7
 801927c:	bd80      	pop	{r7, pc}
	...

08019280 <USBD_GetDescriptor>:
 8019280:	b580      	push	{r7, lr}
 8019282:	b084      	sub	sp, #16
 8019284:	af00      	add	r7, sp, #0
 8019286:	6078      	str	r0, [r7, #4]
 8019288:	6039      	str	r1, [r7, #0]
 801928a:	2300      	movs	r3, #0
 801928c:	813b      	strh	r3, [r7, #8]
 801928e:	2300      	movs	r3, #0
 8019290:	60fb      	str	r3, [r7, #12]
 8019292:	2300      	movs	r3, #0
 8019294:	72fb      	strb	r3, [r7, #11]
 8019296:	683b      	ldr	r3, [r7, #0]
 8019298:	885b      	ldrh	r3, [r3, #2]
 801929a:	0a1b      	lsrs	r3, r3, #8
 801929c:	b29b      	uxth	r3, r3
 801929e:	3b01      	subs	r3, #1
 80192a0:	2b06      	cmp	r3, #6
 80192a2:	f200 8128 	bhi.w	80194f6 <USBD_GetDescriptor+0x276>
 80192a6:	a201      	add	r2, pc, #4	@ (adr r2, 80192ac <USBD_GetDescriptor+0x2c>)
 80192a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80192ac:	080192c9 	.word	0x080192c9
 80192b0:	080192e1 	.word	0x080192e1
 80192b4:	08019321 	.word	0x08019321
 80192b8:	080194f7 	.word	0x080194f7
 80192bc:	080194f7 	.word	0x080194f7
 80192c0:	08019497 	.word	0x08019497
 80192c4:	080194c3 	.word	0x080194c3
 80192c8:	687b      	ldr	r3, [r7, #4]
 80192ca:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80192ce:	681b      	ldr	r3, [r3, #0]
 80192d0:	687a      	ldr	r2, [r7, #4]
 80192d2:	7c12      	ldrb	r2, [r2, #16]
 80192d4:	f107 0108 	add.w	r1, r7, #8
 80192d8:	4610      	mov	r0, r2
 80192da:	4798      	blx	r3
 80192dc:	60f8      	str	r0, [r7, #12]
 80192de:	e112      	b.n	8019506 <USBD_GetDescriptor+0x286>
 80192e0:	687b      	ldr	r3, [r7, #4]
 80192e2:	7c1b      	ldrb	r3, [r3, #16]
 80192e4:	2b00      	cmp	r3, #0
 80192e6:	d10d      	bne.n	8019304 <USBD_GetDescriptor+0x84>
 80192e8:	687b      	ldr	r3, [r7, #4]
 80192ea:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80192ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80192f0:	f107 0208 	add.w	r2, r7, #8
 80192f4:	4610      	mov	r0, r2
 80192f6:	4798      	blx	r3
 80192f8:	60f8      	str	r0, [r7, #12]
 80192fa:	68fb      	ldr	r3, [r7, #12]
 80192fc:	3301      	adds	r3, #1
 80192fe:	2202      	movs	r2, #2
 8019300:	701a      	strb	r2, [r3, #0]
 8019302:	e100      	b.n	8019506 <USBD_GetDescriptor+0x286>
 8019304:	687b      	ldr	r3, [r7, #4]
 8019306:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 801930a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801930c:	f107 0208 	add.w	r2, r7, #8
 8019310:	4610      	mov	r0, r2
 8019312:	4798      	blx	r3
 8019314:	60f8      	str	r0, [r7, #12]
 8019316:	68fb      	ldr	r3, [r7, #12]
 8019318:	3301      	adds	r3, #1
 801931a:	2202      	movs	r2, #2
 801931c:	701a      	strb	r2, [r3, #0]
 801931e:	e0f2      	b.n	8019506 <USBD_GetDescriptor+0x286>
 8019320:	683b      	ldr	r3, [r7, #0]
 8019322:	885b      	ldrh	r3, [r3, #2]
 8019324:	b2db      	uxtb	r3, r3
 8019326:	2b05      	cmp	r3, #5
 8019328:	f200 80ac 	bhi.w	8019484 <USBD_GetDescriptor+0x204>
 801932c:	a201      	add	r2, pc, #4	@ (adr r2, 8019334 <USBD_GetDescriptor+0xb4>)
 801932e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8019332:	bf00      	nop
 8019334:	0801934d 	.word	0x0801934d
 8019338:	08019381 	.word	0x08019381
 801933c:	080193b5 	.word	0x080193b5
 8019340:	080193e9 	.word	0x080193e9
 8019344:	0801941d 	.word	0x0801941d
 8019348:	08019451 	.word	0x08019451
 801934c:	687b      	ldr	r3, [r7, #4]
 801934e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8019352:	685b      	ldr	r3, [r3, #4]
 8019354:	2b00      	cmp	r3, #0
 8019356:	d00b      	beq.n	8019370 <USBD_GetDescriptor+0xf0>
 8019358:	687b      	ldr	r3, [r7, #4]
 801935a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801935e:	685b      	ldr	r3, [r3, #4]
 8019360:	687a      	ldr	r2, [r7, #4]
 8019362:	7c12      	ldrb	r2, [r2, #16]
 8019364:	f107 0108 	add.w	r1, r7, #8
 8019368:	4610      	mov	r0, r2
 801936a:	4798      	blx	r3
 801936c:	60f8      	str	r0, [r7, #12]
 801936e:	e091      	b.n	8019494 <USBD_GetDescriptor+0x214>
 8019370:	6839      	ldr	r1, [r7, #0]
 8019372:	6878      	ldr	r0, [r7, #4]
 8019374:	f000 facb 	bl	801990e <USBD_CtlError>
 8019378:	7afb      	ldrb	r3, [r7, #11]
 801937a:	3301      	adds	r3, #1
 801937c:	72fb      	strb	r3, [r7, #11]
 801937e:	e089      	b.n	8019494 <USBD_GetDescriptor+0x214>
 8019380:	687b      	ldr	r3, [r7, #4]
 8019382:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8019386:	689b      	ldr	r3, [r3, #8]
 8019388:	2b00      	cmp	r3, #0
 801938a:	d00b      	beq.n	80193a4 <USBD_GetDescriptor+0x124>
 801938c:	687b      	ldr	r3, [r7, #4]
 801938e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8019392:	689b      	ldr	r3, [r3, #8]
 8019394:	687a      	ldr	r2, [r7, #4]
 8019396:	7c12      	ldrb	r2, [r2, #16]
 8019398:	f107 0108 	add.w	r1, r7, #8
 801939c:	4610      	mov	r0, r2
 801939e:	4798      	blx	r3
 80193a0:	60f8      	str	r0, [r7, #12]
 80193a2:	e077      	b.n	8019494 <USBD_GetDescriptor+0x214>
 80193a4:	6839      	ldr	r1, [r7, #0]
 80193a6:	6878      	ldr	r0, [r7, #4]
 80193a8:	f000 fab1 	bl	801990e <USBD_CtlError>
 80193ac:	7afb      	ldrb	r3, [r7, #11]
 80193ae:	3301      	adds	r3, #1
 80193b0:	72fb      	strb	r3, [r7, #11]
 80193b2:	e06f      	b.n	8019494 <USBD_GetDescriptor+0x214>
 80193b4:	687b      	ldr	r3, [r7, #4]
 80193b6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80193ba:	68db      	ldr	r3, [r3, #12]
 80193bc:	2b00      	cmp	r3, #0
 80193be:	d00b      	beq.n	80193d8 <USBD_GetDescriptor+0x158>
 80193c0:	687b      	ldr	r3, [r7, #4]
 80193c2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80193c6:	68db      	ldr	r3, [r3, #12]
 80193c8:	687a      	ldr	r2, [r7, #4]
 80193ca:	7c12      	ldrb	r2, [r2, #16]
 80193cc:	f107 0108 	add.w	r1, r7, #8
 80193d0:	4610      	mov	r0, r2
 80193d2:	4798      	blx	r3
 80193d4:	60f8      	str	r0, [r7, #12]
 80193d6:	e05d      	b.n	8019494 <USBD_GetDescriptor+0x214>
 80193d8:	6839      	ldr	r1, [r7, #0]
 80193da:	6878      	ldr	r0, [r7, #4]
 80193dc:	f000 fa97 	bl	801990e <USBD_CtlError>
 80193e0:	7afb      	ldrb	r3, [r7, #11]
 80193e2:	3301      	adds	r3, #1
 80193e4:	72fb      	strb	r3, [r7, #11]
 80193e6:	e055      	b.n	8019494 <USBD_GetDescriptor+0x214>
 80193e8:	687b      	ldr	r3, [r7, #4]
 80193ea:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80193ee:	691b      	ldr	r3, [r3, #16]
 80193f0:	2b00      	cmp	r3, #0
 80193f2:	d00b      	beq.n	801940c <USBD_GetDescriptor+0x18c>
 80193f4:	687b      	ldr	r3, [r7, #4]
 80193f6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 80193fa:	691b      	ldr	r3, [r3, #16]
 80193fc:	687a      	ldr	r2, [r7, #4]
 80193fe:	7c12      	ldrb	r2, [r2, #16]
 8019400:	f107 0108 	add.w	r1, r7, #8
 8019404:	4610      	mov	r0, r2
 8019406:	4798      	blx	r3
 8019408:	60f8      	str	r0, [r7, #12]
 801940a:	e043      	b.n	8019494 <USBD_GetDescriptor+0x214>
 801940c:	6839      	ldr	r1, [r7, #0]
 801940e:	6878      	ldr	r0, [r7, #4]
 8019410:	f000 fa7d 	bl	801990e <USBD_CtlError>
 8019414:	7afb      	ldrb	r3, [r7, #11]
 8019416:	3301      	adds	r3, #1
 8019418:	72fb      	strb	r3, [r7, #11]
 801941a:	e03b      	b.n	8019494 <USBD_GetDescriptor+0x214>
 801941c:	687b      	ldr	r3, [r7, #4]
 801941e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8019422:	695b      	ldr	r3, [r3, #20]
 8019424:	2b00      	cmp	r3, #0
 8019426:	d00b      	beq.n	8019440 <USBD_GetDescriptor+0x1c0>
 8019428:	687b      	ldr	r3, [r7, #4]
 801942a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 801942e:	695b      	ldr	r3, [r3, #20]
 8019430:	687a      	ldr	r2, [r7, #4]
 8019432:	7c12      	ldrb	r2, [r2, #16]
 8019434:	f107 0108 	add.w	r1, r7, #8
 8019438:	4610      	mov	r0, r2
 801943a:	4798      	blx	r3
 801943c:	60f8      	str	r0, [r7, #12]
 801943e:	e029      	b.n	8019494 <USBD_GetDescriptor+0x214>
 8019440:	6839      	ldr	r1, [r7, #0]
 8019442:	6878      	ldr	r0, [r7, #4]
 8019444:	f000 fa63 	bl	801990e <USBD_CtlError>
 8019448:	7afb      	ldrb	r3, [r7, #11]
 801944a:	3301      	adds	r3, #1
 801944c:	72fb      	strb	r3, [r7, #11]
 801944e:	e021      	b.n	8019494 <USBD_GetDescriptor+0x214>
 8019450:	687b      	ldr	r3, [r7, #4]
 8019452:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8019456:	699b      	ldr	r3, [r3, #24]
 8019458:	2b00      	cmp	r3, #0
 801945a:	d00b      	beq.n	8019474 <USBD_GetDescriptor+0x1f4>
 801945c:	687b      	ldr	r3, [r7, #4]
 801945e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	@ 0x2b4
 8019462:	699b      	ldr	r3, [r3, #24]
 8019464:	687a      	ldr	r2, [r7, #4]
 8019466:	7c12      	ldrb	r2, [r2, #16]
 8019468:	f107 0108 	add.w	r1, r7, #8
 801946c:	4610      	mov	r0, r2
 801946e:	4798      	blx	r3
 8019470:	60f8      	str	r0, [r7, #12]
 8019472:	e00f      	b.n	8019494 <USBD_GetDescriptor+0x214>
 8019474:	6839      	ldr	r1, [r7, #0]
 8019476:	6878      	ldr	r0, [r7, #4]
 8019478:	f000 fa49 	bl	801990e <USBD_CtlError>
 801947c:	7afb      	ldrb	r3, [r7, #11]
 801947e:	3301      	adds	r3, #1
 8019480:	72fb      	strb	r3, [r7, #11]
 8019482:	e007      	b.n	8019494 <USBD_GetDescriptor+0x214>
 8019484:	6839      	ldr	r1, [r7, #0]
 8019486:	6878      	ldr	r0, [r7, #4]
 8019488:	f000 fa41 	bl	801990e <USBD_CtlError>
 801948c:	7afb      	ldrb	r3, [r7, #11]
 801948e:	3301      	adds	r3, #1
 8019490:	72fb      	strb	r3, [r7, #11]
 8019492:	bf00      	nop
 8019494:	e037      	b.n	8019506 <USBD_GetDescriptor+0x286>
 8019496:	687b      	ldr	r3, [r7, #4]
 8019498:	7c1b      	ldrb	r3, [r3, #16]
 801949a:	2b00      	cmp	r3, #0
 801949c:	d109      	bne.n	80194b2 <USBD_GetDescriptor+0x232>
 801949e:	687b      	ldr	r3, [r7, #4]
 80194a0:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80194a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80194a6:	f107 0208 	add.w	r2, r7, #8
 80194aa:	4610      	mov	r0, r2
 80194ac:	4798      	blx	r3
 80194ae:	60f8      	str	r0, [r7, #12]
 80194b0:	e029      	b.n	8019506 <USBD_GetDescriptor+0x286>
 80194b2:	6839      	ldr	r1, [r7, #0]
 80194b4:	6878      	ldr	r0, [r7, #4]
 80194b6:	f000 fa2a 	bl	801990e <USBD_CtlError>
 80194ba:	7afb      	ldrb	r3, [r7, #11]
 80194bc:	3301      	adds	r3, #1
 80194be:	72fb      	strb	r3, [r7, #11]
 80194c0:	e021      	b.n	8019506 <USBD_GetDescriptor+0x286>
 80194c2:	687b      	ldr	r3, [r7, #4]
 80194c4:	7c1b      	ldrb	r3, [r3, #16]
 80194c6:	2b00      	cmp	r3, #0
 80194c8:	d10d      	bne.n	80194e6 <USBD_GetDescriptor+0x266>
 80194ca:	687b      	ldr	r3, [r7, #4]
 80194cc:	f8d3 32b8 	ldr.w	r3, [r3, #696]	@ 0x2b8
 80194d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80194d2:	f107 0208 	add.w	r2, r7, #8
 80194d6:	4610      	mov	r0, r2
 80194d8:	4798      	blx	r3
 80194da:	60f8      	str	r0, [r7, #12]
 80194dc:	68fb      	ldr	r3, [r7, #12]
 80194de:	3301      	adds	r3, #1
 80194e0:	2207      	movs	r2, #7
 80194e2:	701a      	strb	r2, [r3, #0]
 80194e4:	e00f      	b.n	8019506 <USBD_GetDescriptor+0x286>
 80194e6:	6839      	ldr	r1, [r7, #0]
 80194e8:	6878      	ldr	r0, [r7, #4]
 80194ea:	f000 fa10 	bl	801990e <USBD_CtlError>
 80194ee:	7afb      	ldrb	r3, [r7, #11]
 80194f0:	3301      	adds	r3, #1
 80194f2:	72fb      	strb	r3, [r7, #11]
 80194f4:	e007      	b.n	8019506 <USBD_GetDescriptor+0x286>
 80194f6:	6839      	ldr	r1, [r7, #0]
 80194f8:	6878      	ldr	r0, [r7, #4]
 80194fa:	f000 fa08 	bl	801990e <USBD_CtlError>
 80194fe:	7afb      	ldrb	r3, [r7, #11]
 8019500:	3301      	adds	r3, #1
 8019502:	72fb      	strb	r3, [r7, #11]
 8019504:	bf00      	nop
 8019506:	7afb      	ldrb	r3, [r7, #11]
 8019508:	2b00      	cmp	r3, #0
 801950a:	d11e      	bne.n	801954a <USBD_GetDescriptor+0x2ca>
 801950c:	683b      	ldr	r3, [r7, #0]
 801950e:	88db      	ldrh	r3, [r3, #6]
 8019510:	2b00      	cmp	r3, #0
 8019512:	d016      	beq.n	8019542 <USBD_GetDescriptor+0x2c2>
 8019514:	893b      	ldrh	r3, [r7, #8]
 8019516:	2b00      	cmp	r3, #0
 8019518:	d00e      	beq.n	8019538 <USBD_GetDescriptor+0x2b8>
 801951a:	683b      	ldr	r3, [r7, #0]
 801951c:	88da      	ldrh	r2, [r3, #6]
 801951e:	893b      	ldrh	r3, [r7, #8]
 8019520:	4293      	cmp	r3, r2
 8019522:	bf28      	it	cs
 8019524:	4613      	movcs	r3, r2
 8019526:	b29b      	uxth	r3, r3
 8019528:	813b      	strh	r3, [r7, #8]
 801952a:	893b      	ldrh	r3, [r7, #8]
 801952c:	461a      	mov	r2, r3
 801952e:	68f9      	ldr	r1, [r7, #12]
 8019530:	6878      	ldr	r0, [r7, #4]
 8019532:	f000 fa5d 	bl	80199f0 <USBD_CtlSendData>
 8019536:	e009      	b.n	801954c <USBD_GetDescriptor+0x2cc>
 8019538:	6839      	ldr	r1, [r7, #0]
 801953a:	6878      	ldr	r0, [r7, #4]
 801953c:	f000 f9e7 	bl	801990e <USBD_CtlError>
 8019540:	e004      	b.n	801954c <USBD_GetDescriptor+0x2cc>
 8019542:	6878      	ldr	r0, [r7, #4]
 8019544:	f000 faae 	bl	8019aa4 <USBD_CtlSendStatus>
 8019548:	e000      	b.n	801954c <USBD_GetDescriptor+0x2cc>
 801954a:	bf00      	nop
 801954c:	3710      	adds	r7, #16
 801954e:	46bd      	mov	sp, r7
 8019550:	bd80      	pop	{r7, pc}
 8019552:	bf00      	nop

08019554 <USBD_SetAddress>:
 8019554:	b580      	push	{r7, lr}
 8019556:	b084      	sub	sp, #16
 8019558:	af00      	add	r7, sp, #0
 801955a:	6078      	str	r0, [r7, #4]
 801955c:	6039      	str	r1, [r7, #0]
 801955e:	683b      	ldr	r3, [r7, #0]
 8019560:	889b      	ldrh	r3, [r3, #4]
 8019562:	2b00      	cmp	r3, #0
 8019564:	d131      	bne.n	80195ca <USBD_SetAddress+0x76>
 8019566:	683b      	ldr	r3, [r7, #0]
 8019568:	88db      	ldrh	r3, [r3, #6]
 801956a:	2b00      	cmp	r3, #0
 801956c:	d12d      	bne.n	80195ca <USBD_SetAddress+0x76>
 801956e:	683b      	ldr	r3, [r7, #0]
 8019570:	885b      	ldrh	r3, [r3, #2]
 8019572:	2b7f      	cmp	r3, #127	@ 0x7f
 8019574:	d829      	bhi.n	80195ca <USBD_SetAddress+0x76>
 8019576:	683b      	ldr	r3, [r7, #0]
 8019578:	885b      	ldrh	r3, [r3, #2]
 801957a:	b2db      	uxtb	r3, r3
 801957c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8019580:	73fb      	strb	r3, [r7, #15]
 8019582:	687b      	ldr	r3, [r7, #4]
 8019584:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8019588:	b2db      	uxtb	r3, r3
 801958a:	2b03      	cmp	r3, #3
 801958c:	d104      	bne.n	8019598 <USBD_SetAddress+0x44>
 801958e:	6839      	ldr	r1, [r7, #0]
 8019590:	6878      	ldr	r0, [r7, #4]
 8019592:	f000 f9bc 	bl	801990e <USBD_CtlError>
 8019596:	e01d      	b.n	80195d4 <USBD_SetAddress+0x80>
 8019598:	687b      	ldr	r3, [r7, #4]
 801959a:	7bfa      	ldrb	r2, [r7, #15]
 801959c:	f883 229e 	strb.w	r2, [r3, #670]	@ 0x29e
 80195a0:	7bfb      	ldrb	r3, [r7, #15]
 80195a2:	4619      	mov	r1, r3
 80195a4:	6878      	ldr	r0, [r7, #4]
 80195a6:	f004 f823 	bl	801d5f0 <USBD_LL_SetUSBAddress>
 80195aa:	6878      	ldr	r0, [r7, #4]
 80195ac:	f000 fa7a 	bl	8019aa4 <USBD_CtlSendStatus>
 80195b0:	7bfb      	ldrb	r3, [r7, #15]
 80195b2:	2b00      	cmp	r3, #0
 80195b4:	d004      	beq.n	80195c0 <USBD_SetAddress+0x6c>
 80195b6:	687b      	ldr	r3, [r7, #4]
 80195b8:	2202      	movs	r2, #2
 80195ba:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80195be:	e009      	b.n	80195d4 <USBD_SetAddress+0x80>
 80195c0:	687b      	ldr	r3, [r7, #4]
 80195c2:	2201      	movs	r2, #1
 80195c4:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80195c8:	e004      	b.n	80195d4 <USBD_SetAddress+0x80>
 80195ca:	6839      	ldr	r1, [r7, #0]
 80195cc:	6878      	ldr	r0, [r7, #4]
 80195ce:	f000 f99e 	bl	801990e <USBD_CtlError>
 80195d2:	bf00      	nop
 80195d4:	bf00      	nop
 80195d6:	3710      	adds	r7, #16
 80195d8:	46bd      	mov	sp, r7
 80195da:	bd80      	pop	{r7, pc}

080195dc <USBD_SetConfig>:
 80195dc:	b580      	push	{r7, lr}
 80195de:	b084      	sub	sp, #16
 80195e0:	af00      	add	r7, sp, #0
 80195e2:	6078      	str	r0, [r7, #4]
 80195e4:	6039      	str	r1, [r7, #0]
 80195e6:	2300      	movs	r3, #0
 80195e8:	73fb      	strb	r3, [r7, #15]
 80195ea:	683b      	ldr	r3, [r7, #0]
 80195ec:	885b      	ldrh	r3, [r3, #2]
 80195ee:	b2da      	uxtb	r2, r3
 80195f0:	4b4e      	ldr	r3, [pc, #312]	@ (801972c <USBD_SetConfig+0x150>)
 80195f2:	701a      	strb	r2, [r3, #0]
 80195f4:	4b4d      	ldr	r3, [pc, #308]	@ (801972c <USBD_SetConfig+0x150>)
 80195f6:	781b      	ldrb	r3, [r3, #0]
 80195f8:	2b01      	cmp	r3, #1
 80195fa:	d905      	bls.n	8019608 <USBD_SetConfig+0x2c>
 80195fc:	6839      	ldr	r1, [r7, #0]
 80195fe:	6878      	ldr	r0, [r7, #4]
 8019600:	f000 f985 	bl	801990e <USBD_CtlError>
 8019604:	2303      	movs	r3, #3
 8019606:	e08c      	b.n	8019722 <USBD_SetConfig+0x146>
 8019608:	687b      	ldr	r3, [r7, #4]
 801960a:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 801960e:	b2db      	uxtb	r3, r3
 8019610:	2b02      	cmp	r3, #2
 8019612:	d002      	beq.n	801961a <USBD_SetConfig+0x3e>
 8019614:	2b03      	cmp	r3, #3
 8019616:	d029      	beq.n	801966c <USBD_SetConfig+0x90>
 8019618:	e075      	b.n	8019706 <USBD_SetConfig+0x12a>
 801961a:	4b44      	ldr	r3, [pc, #272]	@ (801972c <USBD_SetConfig+0x150>)
 801961c:	781b      	ldrb	r3, [r3, #0]
 801961e:	2b00      	cmp	r3, #0
 8019620:	d020      	beq.n	8019664 <USBD_SetConfig+0x88>
 8019622:	4b42      	ldr	r3, [pc, #264]	@ (801972c <USBD_SetConfig+0x150>)
 8019624:	781b      	ldrb	r3, [r3, #0]
 8019626:	461a      	mov	r2, r3
 8019628:	687b      	ldr	r3, [r7, #4]
 801962a:	605a      	str	r2, [r3, #4]
 801962c:	4b3f      	ldr	r3, [pc, #252]	@ (801972c <USBD_SetConfig+0x150>)
 801962e:	781b      	ldrb	r3, [r3, #0]
 8019630:	4619      	mov	r1, r3
 8019632:	6878      	ldr	r0, [r7, #4]
 8019634:	f7fe ffe9 	bl	801860a <USBD_SetClassConfig>
 8019638:	4603      	mov	r3, r0
 801963a:	73fb      	strb	r3, [r7, #15]
 801963c:	7bfb      	ldrb	r3, [r7, #15]
 801963e:	2b00      	cmp	r3, #0
 8019640:	d008      	beq.n	8019654 <USBD_SetConfig+0x78>
 8019642:	6839      	ldr	r1, [r7, #0]
 8019644:	6878      	ldr	r0, [r7, #4]
 8019646:	f000 f962 	bl	801990e <USBD_CtlError>
 801964a:	687b      	ldr	r3, [r7, #4]
 801964c:	2202      	movs	r2, #2
 801964e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8019652:	e065      	b.n	8019720 <USBD_SetConfig+0x144>
 8019654:	6878      	ldr	r0, [r7, #4]
 8019656:	f000 fa25 	bl	8019aa4 <USBD_CtlSendStatus>
 801965a:	687b      	ldr	r3, [r7, #4]
 801965c:	2203      	movs	r2, #3
 801965e:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 8019662:	e05d      	b.n	8019720 <USBD_SetConfig+0x144>
 8019664:	6878      	ldr	r0, [r7, #4]
 8019666:	f000 fa1d 	bl	8019aa4 <USBD_CtlSendStatus>
 801966a:	e059      	b.n	8019720 <USBD_SetConfig+0x144>
 801966c:	4b2f      	ldr	r3, [pc, #188]	@ (801972c <USBD_SetConfig+0x150>)
 801966e:	781b      	ldrb	r3, [r3, #0]
 8019670:	2b00      	cmp	r3, #0
 8019672:	d112      	bne.n	801969a <USBD_SetConfig+0xbe>
 8019674:	687b      	ldr	r3, [r7, #4]
 8019676:	2202      	movs	r2, #2
 8019678:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 801967c:	4b2b      	ldr	r3, [pc, #172]	@ (801972c <USBD_SetConfig+0x150>)
 801967e:	781b      	ldrb	r3, [r3, #0]
 8019680:	461a      	mov	r2, r3
 8019682:	687b      	ldr	r3, [r7, #4]
 8019684:	605a      	str	r2, [r3, #4]
 8019686:	4b29      	ldr	r3, [pc, #164]	@ (801972c <USBD_SetConfig+0x150>)
 8019688:	781b      	ldrb	r3, [r3, #0]
 801968a:	4619      	mov	r1, r3
 801968c:	6878      	ldr	r0, [r7, #4]
 801968e:	f7fe ffd8 	bl	8018642 <USBD_ClrClassConfig>
 8019692:	6878      	ldr	r0, [r7, #4]
 8019694:	f000 fa06 	bl	8019aa4 <USBD_CtlSendStatus>
 8019698:	e042      	b.n	8019720 <USBD_SetConfig+0x144>
 801969a:	4b24      	ldr	r3, [pc, #144]	@ (801972c <USBD_SetConfig+0x150>)
 801969c:	781b      	ldrb	r3, [r3, #0]
 801969e:	461a      	mov	r2, r3
 80196a0:	687b      	ldr	r3, [r7, #4]
 80196a2:	685b      	ldr	r3, [r3, #4]
 80196a4:	429a      	cmp	r2, r3
 80196a6:	d02a      	beq.n	80196fe <USBD_SetConfig+0x122>
 80196a8:	687b      	ldr	r3, [r7, #4]
 80196aa:	685b      	ldr	r3, [r3, #4]
 80196ac:	b2db      	uxtb	r3, r3
 80196ae:	4619      	mov	r1, r3
 80196b0:	6878      	ldr	r0, [r7, #4]
 80196b2:	f7fe ffc6 	bl	8018642 <USBD_ClrClassConfig>
 80196b6:	4b1d      	ldr	r3, [pc, #116]	@ (801972c <USBD_SetConfig+0x150>)
 80196b8:	781b      	ldrb	r3, [r3, #0]
 80196ba:	461a      	mov	r2, r3
 80196bc:	687b      	ldr	r3, [r7, #4]
 80196be:	605a      	str	r2, [r3, #4]
 80196c0:	4b1a      	ldr	r3, [pc, #104]	@ (801972c <USBD_SetConfig+0x150>)
 80196c2:	781b      	ldrb	r3, [r3, #0]
 80196c4:	4619      	mov	r1, r3
 80196c6:	6878      	ldr	r0, [r7, #4]
 80196c8:	f7fe ff9f 	bl	801860a <USBD_SetClassConfig>
 80196cc:	4603      	mov	r3, r0
 80196ce:	73fb      	strb	r3, [r7, #15]
 80196d0:	7bfb      	ldrb	r3, [r7, #15]
 80196d2:	2b00      	cmp	r3, #0
 80196d4:	d00f      	beq.n	80196f6 <USBD_SetConfig+0x11a>
 80196d6:	6839      	ldr	r1, [r7, #0]
 80196d8:	6878      	ldr	r0, [r7, #4]
 80196da:	f000 f918 	bl	801990e <USBD_CtlError>
 80196de:	687b      	ldr	r3, [r7, #4]
 80196e0:	685b      	ldr	r3, [r3, #4]
 80196e2:	b2db      	uxtb	r3, r3
 80196e4:	4619      	mov	r1, r3
 80196e6:	6878      	ldr	r0, [r7, #4]
 80196e8:	f7fe ffab 	bl	8018642 <USBD_ClrClassConfig>
 80196ec:	687b      	ldr	r3, [r7, #4]
 80196ee:	2202      	movs	r2, #2
 80196f0:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
 80196f4:	e014      	b.n	8019720 <USBD_SetConfig+0x144>
 80196f6:	6878      	ldr	r0, [r7, #4]
 80196f8:	f000 f9d4 	bl	8019aa4 <USBD_CtlSendStatus>
 80196fc:	e010      	b.n	8019720 <USBD_SetConfig+0x144>
 80196fe:	6878      	ldr	r0, [r7, #4]
 8019700:	f000 f9d0 	bl	8019aa4 <USBD_CtlSendStatus>
 8019704:	e00c      	b.n	8019720 <USBD_SetConfig+0x144>
 8019706:	6839      	ldr	r1, [r7, #0]
 8019708:	6878      	ldr	r0, [r7, #4]
 801970a:	f000 f900 	bl	801990e <USBD_CtlError>
 801970e:	4b07      	ldr	r3, [pc, #28]	@ (801972c <USBD_SetConfig+0x150>)
 8019710:	781b      	ldrb	r3, [r3, #0]
 8019712:	4619      	mov	r1, r3
 8019714:	6878      	ldr	r0, [r7, #4]
 8019716:	f7fe ff94 	bl	8018642 <USBD_ClrClassConfig>
 801971a:	2303      	movs	r3, #3
 801971c:	73fb      	strb	r3, [r7, #15]
 801971e:	bf00      	nop
 8019720:	7bfb      	ldrb	r3, [r7, #15]
 8019722:	4618      	mov	r0, r3
 8019724:	3710      	adds	r7, #16
 8019726:	46bd      	mov	sp, r7
 8019728:	bd80      	pop	{r7, pc}
 801972a:	bf00      	nop
 801972c:	20003ea0 	.word	0x20003ea0

08019730 <USBD_GetConfig>:
 8019730:	b580      	push	{r7, lr}
 8019732:	b082      	sub	sp, #8
 8019734:	af00      	add	r7, sp, #0
 8019736:	6078      	str	r0, [r7, #4]
 8019738:	6039      	str	r1, [r7, #0]
 801973a:	683b      	ldr	r3, [r7, #0]
 801973c:	88db      	ldrh	r3, [r3, #6]
 801973e:	2b01      	cmp	r3, #1
 8019740:	d004      	beq.n	801974c <USBD_GetConfig+0x1c>
 8019742:	6839      	ldr	r1, [r7, #0]
 8019744:	6878      	ldr	r0, [r7, #4]
 8019746:	f000 f8e2 	bl	801990e <USBD_CtlError>
 801974a:	e023      	b.n	8019794 <USBD_GetConfig+0x64>
 801974c:	687b      	ldr	r3, [r7, #4]
 801974e:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8019752:	b2db      	uxtb	r3, r3
 8019754:	2b02      	cmp	r3, #2
 8019756:	dc02      	bgt.n	801975e <USBD_GetConfig+0x2e>
 8019758:	2b00      	cmp	r3, #0
 801975a:	dc03      	bgt.n	8019764 <USBD_GetConfig+0x34>
 801975c:	e015      	b.n	801978a <USBD_GetConfig+0x5a>
 801975e:	2b03      	cmp	r3, #3
 8019760:	d00b      	beq.n	801977a <USBD_GetConfig+0x4a>
 8019762:	e012      	b.n	801978a <USBD_GetConfig+0x5a>
 8019764:	687b      	ldr	r3, [r7, #4]
 8019766:	2200      	movs	r2, #0
 8019768:	609a      	str	r2, [r3, #8]
 801976a:	687b      	ldr	r3, [r7, #4]
 801976c:	3308      	adds	r3, #8
 801976e:	2201      	movs	r2, #1
 8019770:	4619      	mov	r1, r3
 8019772:	6878      	ldr	r0, [r7, #4]
 8019774:	f000 f93c 	bl	80199f0 <USBD_CtlSendData>
 8019778:	e00c      	b.n	8019794 <USBD_GetConfig+0x64>
 801977a:	687b      	ldr	r3, [r7, #4]
 801977c:	3304      	adds	r3, #4
 801977e:	2201      	movs	r2, #1
 8019780:	4619      	mov	r1, r3
 8019782:	6878      	ldr	r0, [r7, #4]
 8019784:	f000 f934 	bl	80199f0 <USBD_CtlSendData>
 8019788:	e004      	b.n	8019794 <USBD_GetConfig+0x64>
 801978a:	6839      	ldr	r1, [r7, #0]
 801978c:	6878      	ldr	r0, [r7, #4]
 801978e:	f000 f8be 	bl	801990e <USBD_CtlError>
 8019792:	bf00      	nop
 8019794:	bf00      	nop
 8019796:	3708      	adds	r7, #8
 8019798:	46bd      	mov	sp, r7
 801979a:	bd80      	pop	{r7, pc}

0801979c <USBD_GetStatus>:
 801979c:	b580      	push	{r7, lr}
 801979e:	b082      	sub	sp, #8
 80197a0:	af00      	add	r7, sp, #0
 80197a2:	6078      	str	r0, [r7, #4]
 80197a4:	6039      	str	r1, [r7, #0]
 80197a6:	687b      	ldr	r3, [r7, #4]
 80197a8:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 80197ac:	b2db      	uxtb	r3, r3
 80197ae:	3b01      	subs	r3, #1
 80197b0:	2b02      	cmp	r3, #2
 80197b2:	d81e      	bhi.n	80197f2 <USBD_GetStatus+0x56>
 80197b4:	683b      	ldr	r3, [r7, #0]
 80197b6:	88db      	ldrh	r3, [r3, #6]
 80197b8:	2b02      	cmp	r3, #2
 80197ba:	d004      	beq.n	80197c6 <USBD_GetStatus+0x2a>
 80197bc:	6839      	ldr	r1, [r7, #0]
 80197be:	6878      	ldr	r0, [r7, #4]
 80197c0:	f000 f8a5 	bl	801990e <USBD_CtlError>
 80197c4:	e01a      	b.n	80197fc <USBD_GetStatus+0x60>
 80197c6:	687b      	ldr	r3, [r7, #4]
 80197c8:	2201      	movs	r2, #1
 80197ca:	60da      	str	r2, [r3, #12]
 80197cc:	687b      	ldr	r3, [r7, #4]
 80197ce:	f8d3 32a4 	ldr.w	r3, [r3, #676]	@ 0x2a4
 80197d2:	2b00      	cmp	r3, #0
 80197d4:	d005      	beq.n	80197e2 <USBD_GetStatus+0x46>
 80197d6:	687b      	ldr	r3, [r7, #4]
 80197d8:	68db      	ldr	r3, [r3, #12]
 80197da:	f043 0202 	orr.w	r2, r3, #2
 80197de:	687b      	ldr	r3, [r7, #4]
 80197e0:	60da      	str	r2, [r3, #12]
 80197e2:	687b      	ldr	r3, [r7, #4]
 80197e4:	330c      	adds	r3, #12
 80197e6:	2202      	movs	r2, #2
 80197e8:	4619      	mov	r1, r3
 80197ea:	6878      	ldr	r0, [r7, #4]
 80197ec:	f000 f900 	bl	80199f0 <USBD_CtlSendData>
 80197f0:	e004      	b.n	80197fc <USBD_GetStatus+0x60>
 80197f2:	6839      	ldr	r1, [r7, #0]
 80197f4:	6878      	ldr	r0, [r7, #4]
 80197f6:	f000 f88a 	bl	801990e <USBD_CtlError>
 80197fa:	bf00      	nop
 80197fc:	bf00      	nop
 80197fe:	3708      	adds	r7, #8
 8019800:	46bd      	mov	sp, r7
 8019802:	bd80      	pop	{r7, pc}

08019804 <USBD_SetFeature>:
 8019804:	b580      	push	{r7, lr}
 8019806:	b082      	sub	sp, #8
 8019808:	af00      	add	r7, sp, #0
 801980a:	6078      	str	r0, [r7, #4]
 801980c:	6039      	str	r1, [r7, #0]
 801980e:	683b      	ldr	r3, [r7, #0]
 8019810:	885b      	ldrh	r3, [r3, #2]
 8019812:	2b01      	cmp	r3, #1
 8019814:	d107      	bne.n	8019826 <USBD_SetFeature+0x22>
 8019816:	687b      	ldr	r3, [r7, #4]
 8019818:	2201      	movs	r2, #1
 801981a:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 801981e:	6878      	ldr	r0, [r7, #4]
 8019820:	f000 f940 	bl	8019aa4 <USBD_CtlSendStatus>
 8019824:	e013      	b.n	801984e <USBD_SetFeature+0x4a>
 8019826:	683b      	ldr	r3, [r7, #0]
 8019828:	885b      	ldrh	r3, [r3, #2]
 801982a:	2b02      	cmp	r3, #2
 801982c:	d10b      	bne.n	8019846 <USBD_SetFeature+0x42>
 801982e:	683b      	ldr	r3, [r7, #0]
 8019830:	889b      	ldrh	r3, [r3, #4]
 8019832:	0a1b      	lsrs	r3, r3, #8
 8019834:	b29b      	uxth	r3, r3
 8019836:	b2da      	uxtb	r2, r3
 8019838:	687b      	ldr	r3, [r7, #4]
 801983a:	f883 22a0 	strb.w	r2, [r3, #672]	@ 0x2a0
 801983e:	6878      	ldr	r0, [r7, #4]
 8019840:	f000 f930 	bl	8019aa4 <USBD_CtlSendStatus>
 8019844:	e003      	b.n	801984e <USBD_SetFeature+0x4a>
 8019846:	6839      	ldr	r1, [r7, #0]
 8019848:	6878      	ldr	r0, [r7, #4]
 801984a:	f000 f860 	bl	801990e <USBD_CtlError>
 801984e:	bf00      	nop
 8019850:	3708      	adds	r7, #8
 8019852:	46bd      	mov	sp, r7
 8019854:	bd80      	pop	{r7, pc}

08019856 <USBD_ClrFeature>:
 8019856:	b580      	push	{r7, lr}
 8019858:	b082      	sub	sp, #8
 801985a:	af00      	add	r7, sp, #0
 801985c:	6078      	str	r0, [r7, #4]
 801985e:	6039      	str	r1, [r7, #0]
 8019860:	687b      	ldr	r3, [r7, #4]
 8019862:	f893 329c 	ldrb.w	r3, [r3, #668]	@ 0x29c
 8019866:	b2db      	uxtb	r3, r3
 8019868:	3b01      	subs	r3, #1
 801986a:	2b02      	cmp	r3, #2
 801986c:	d80b      	bhi.n	8019886 <USBD_ClrFeature+0x30>
 801986e:	683b      	ldr	r3, [r7, #0]
 8019870:	885b      	ldrh	r3, [r3, #2]
 8019872:	2b01      	cmp	r3, #1
 8019874:	d10c      	bne.n	8019890 <USBD_ClrFeature+0x3a>
 8019876:	687b      	ldr	r3, [r7, #4]
 8019878:	2200      	movs	r2, #0
 801987a:	f8c3 22a4 	str.w	r2, [r3, #676]	@ 0x2a4
 801987e:	6878      	ldr	r0, [r7, #4]
 8019880:	f000 f910 	bl	8019aa4 <USBD_CtlSendStatus>
 8019884:	e004      	b.n	8019890 <USBD_ClrFeature+0x3a>
 8019886:	6839      	ldr	r1, [r7, #0]
 8019888:	6878      	ldr	r0, [r7, #4]
 801988a:	f000 f840 	bl	801990e <USBD_CtlError>
 801988e:	e000      	b.n	8019892 <USBD_ClrFeature+0x3c>
 8019890:	bf00      	nop
 8019892:	bf00      	nop
 8019894:	3708      	adds	r7, #8
 8019896:	46bd      	mov	sp, r7
 8019898:	bd80      	pop	{r7, pc}

0801989a <USBD_ParseSetupRequest>:
 801989a:	b580      	push	{r7, lr}
 801989c:	b084      	sub	sp, #16
 801989e:	af00      	add	r7, sp, #0
 80198a0:	6078      	str	r0, [r7, #4]
 80198a2:	6039      	str	r1, [r7, #0]
 80198a4:	683b      	ldr	r3, [r7, #0]
 80198a6:	60fb      	str	r3, [r7, #12]
 80198a8:	68fb      	ldr	r3, [r7, #12]
 80198aa:	781a      	ldrb	r2, [r3, #0]
 80198ac:	687b      	ldr	r3, [r7, #4]
 80198ae:	701a      	strb	r2, [r3, #0]
 80198b0:	68fb      	ldr	r3, [r7, #12]
 80198b2:	3301      	adds	r3, #1
 80198b4:	60fb      	str	r3, [r7, #12]
 80198b6:	68fb      	ldr	r3, [r7, #12]
 80198b8:	781a      	ldrb	r2, [r3, #0]
 80198ba:	687b      	ldr	r3, [r7, #4]
 80198bc:	705a      	strb	r2, [r3, #1]
 80198be:	68fb      	ldr	r3, [r7, #12]
 80198c0:	3301      	adds	r3, #1
 80198c2:	60fb      	str	r3, [r7, #12]
 80198c4:	68f8      	ldr	r0, [r7, #12]
 80198c6:	f7ff fa40 	bl	8018d4a <SWAPBYTE>
 80198ca:	4603      	mov	r3, r0
 80198cc:	461a      	mov	r2, r3
 80198ce:	687b      	ldr	r3, [r7, #4]
 80198d0:	805a      	strh	r2, [r3, #2]
 80198d2:	68fb      	ldr	r3, [r7, #12]
 80198d4:	3301      	adds	r3, #1
 80198d6:	60fb      	str	r3, [r7, #12]
 80198d8:	68fb      	ldr	r3, [r7, #12]
 80198da:	3301      	adds	r3, #1
 80198dc:	60fb      	str	r3, [r7, #12]
 80198de:	68f8      	ldr	r0, [r7, #12]
 80198e0:	f7ff fa33 	bl	8018d4a <SWAPBYTE>
 80198e4:	4603      	mov	r3, r0
 80198e6:	461a      	mov	r2, r3
 80198e8:	687b      	ldr	r3, [r7, #4]
 80198ea:	809a      	strh	r2, [r3, #4]
 80198ec:	68fb      	ldr	r3, [r7, #12]
 80198ee:	3301      	adds	r3, #1
 80198f0:	60fb      	str	r3, [r7, #12]
 80198f2:	68fb      	ldr	r3, [r7, #12]
 80198f4:	3301      	adds	r3, #1
 80198f6:	60fb      	str	r3, [r7, #12]
 80198f8:	68f8      	ldr	r0, [r7, #12]
 80198fa:	f7ff fa26 	bl	8018d4a <SWAPBYTE>
 80198fe:	4603      	mov	r3, r0
 8019900:	461a      	mov	r2, r3
 8019902:	687b      	ldr	r3, [r7, #4]
 8019904:	80da      	strh	r2, [r3, #6]
 8019906:	bf00      	nop
 8019908:	3710      	adds	r7, #16
 801990a:	46bd      	mov	sp, r7
 801990c:	bd80      	pop	{r7, pc}

0801990e <USBD_CtlError>:
 801990e:	b580      	push	{r7, lr}
 8019910:	b082      	sub	sp, #8
 8019912:	af00      	add	r7, sp, #0
 8019914:	6078      	str	r0, [r7, #4]
 8019916:	6039      	str	r1, [r7, #0]
 8019918:	2180      	movs	r1, #128	@ 0x80
 801991a:	6878      	ldr	r0, [r7, #4]
 801991c:	f003 fdfe 	bl	801d51c <USBD_LL_StallEP>
 8019920:	2100      	movs	r1, #0
 8019922:	6878      	ldr	r0, [r7, #4]
 8019924:	f003 fdfa 	bl	801d51c <USBD_LL_StallEP>
 8019928:	bf00      	nop
 801992a:	3708      	adds	r7, #8
 801992c:	46bd      	mov	sp, r7
 801992e:	bd80      	pop	{r7, pc}

08019930 <USBD_GetString>:
 8019930:	b580      	push	{r7, lr}
 8019932:	b086      	sub	sp, #24
 8019934:	af00      	add	r7, sp, #0
 8019936:	60f8      	str	r0, [r7, #12]
 8019938:	60b9      	str	r1, [r7, #8]
 801993a:	607a      	str	r2, [r7, #4]
 801993c:	2300      	movs	r3, #0
 801993e:	75fb      	strb	r3, [r7, #23]
 8019940:	68fb      	ldr	r3, [r7, #12]
 8019942:	2b00      	cmp	r3, #0
 8019944:	d036      	beq.n	80199b4 <USBD_GetString+0x84>
 8019946:	68fb      	ldr	r3, [r7, #12]
 8019948:	613b      	str	r3, [r7, #16]
 801994a:	6938      	ldr	r0, [r7, #16]
 801994c:	f000 f836 	bl	80199bc <USBD_GetLen>
 8019950:	4603      	mov	r3, r0
 8019952:	3301      	adds	r3, #1
 8019954:	b29b      	uxth	r3, r3
 8019956:	005b      	lsls	r3, r3, #1
 8019958:	b29a      	uxth	r2, r3
 801995a:	687b      	ldr	r3, [r7, #4]
 801995c:	801a      	strh	r2, [r3, #0]
 801995e:	7dfb      	ldrb	r3, [r7, #23]
 8019960:	68ba      	ldr	r2, [r7, #8]
 8019962:	4413      	add	r3, r2
 8019964:	687a      	ldr	r2, [r7, #4]
 8019966:	7812      	ldrb	r2, [r2, #0]
 8019968:	701a      	strb	r2, [r3, #0]
 801996a:	7dfb      	ldrb	r3, [r7, #23]
 801996c:	3301      	adds	r3, #1
 801996e:	75fb      	strb	r3, [r7, #23]
 8019970:	7dfb      	ldrb	r3, [r7, #23]
 8019972:	68ba      	ldr	r2, [r7, #8]
 8019974:	4413      	add	r3, r2
 8019976:	2203      	movs	r2, #3
 8019978:	701a      	strb	r2, [r3, #0]
 801997a:	7dfb      	ldrb	r3, [r7, #23]
 801997c:	3301      	adds	r3, #1
 801997e:	75fb      	strb	r3, [r7, #23]
 8019980:	e013      	b.n	80199aa <USBD_GetString+0x7a>
 8019982:	7dfb      	ldrb	r3, [r7, #23]
 8019984:	68ba      	ldr	r2, [r7, #8]
 8019986:	4413      	add	r3, r2
 8019988:	693a      	ldr	r2, [r7, #16]
 801998a:	7812      	ldrb	r2, [r2, #0]
 801998c:	701a      	strb	r2, [r3, #0]
 801998e:	693b      	ldr	r3, [r7, #16]
 8019990:	3301      	adds	r3, #1
 8019992:	613b      	str	r3, [r7, #16]
 8019994:	7dfb      	ldrb	r3, [r7, #23]
 8019996:	3301      	adds	r3, #1
 8019998:	75fb      	strb	r3, [r7, #23]
 801999a:	7dfb      	ldrb	r3, [r7, #23]
 801999c:	68ba      	ldr	r2, [r7, #8]
 801999e:	4413      	add	r3, r2
 80199a0:	2200      	movs	r2, #0
 80199a2:	701a      	strb	r2, [r3, #0]
 80199a4:	7dfb      	ldrb	r3, [r7, #23]
 80199a6:	3301      	adds	r3, #1
 80199a8:	75fb      	strb	r3, [r7, #23]
 80199aa:	693b      	ldr	r3, [r7, #16]
 80199ac:	781b      	ldrb	r3, [r3, #0]
 80199ae:	2b00      	cmp	r3, #0
 80199b0:	d1e7      	bne.n	8019982 <USBD_GetString+0x52>
 80199b2:	e000      	b.n	80199b6 <USBD_GetString+0x86>
 80199b4:	bf00      	nop
 80199b6:	3718      	adds	r7, #24
 80199b8:	46bd      	mov	sp, r7
 80199ba:	bd80      	pop	{r7, pc}

080199bc <USBD_GetLen>:
 80199bc:	b480      	push	{r7}
 80199be:	b085      	sub	sp, #20
 80199c0:	af00      	add	r7, sp, #0
 80199c2:	6078      	str	r0, [r7, #4]
 80199c4:	2300      	movs	r3, #0
 80199c6:	73fb      	strb	r3, [r7, #15]
 80199c8:	687b      	ldr	r3, [r7, #4]
 80199ca:	60bb      	str	r3, [r7, #8]
 80199cc:	e005      	b.n	80199da <USBD_GetLen+0x1e>
 80199ce:	7bfb      	ldrb	r3, [r7, #15]
 80199d0:	3301      	adds	r3, #1
 80199d2:	73fb      	strb	r3, [r7, #15]
 80199d4:	68bb      	ldr	r3, [r7, #8]
 80199d6:	3301      	adds	r3, #1
 80199d8:	60bb      	str	r3, [r7, #8]
 80199da:	68bb      	ldr	r3, [r7, #8]
 80199dc:	781b      	ldrb	r3, [r3, #0]
 80199de:	2b00      	cmp	r3, #0
 80199e0:	d1f5      	bne.n	80199ce <USBD_GetLen+0x12>
 80199e2:	7bfb      	ldrb	r3, [r7, #15]
 80199e4:	4618      	mov	r0, r3
 80199e6:	3714      	adds	r7, #20
 80199e8:	46bd      	mov	sp, r7
 80199ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80199ee:	4770      	bx	lr

080199f0 <USBD_CtlSendData>:
 80199f0:	b580      	push	{r7, lr}
 80199f2:	b084      	sub	sp, #16
 80199f4:	af00      	add	r7, sp, #0
 80199f6:	60f8      	str	r0, [r7, #12]
 80199f8:	60b9      	str	r1, [r7, #8]
 80199fa:	607a      	str	r2, [r7, #4]
 80199fc:	68fb      	ldr	r3, [r7, #12]
 80199fe:	2202      	movs	r2, #2
 8019a00:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8019a04:	68fb      	ldr	r3, [r7, #12]
 8019a06:	687a      	ldr	r2, [r7, #4]
 8019a08:	619a      	str	r2, [r3, #24]
 8019a0a:	68fb      	ldr	r3, [r7, #12]
 8019a0c:	687a      	ldr	r2, [r7, #4]
 8019a0e:	61da      	str	r2, [r3, #28]
 8019a10:	687b      	ldr	r3, [r7, #4]
 8019a12:	68ba      	ldr	r2, [r7, #8]
 8019a14:	2100      	movs	r1, #0
 8019a16:	68f8      	ldr	r0, [r7, #12]
 8019a18:	f003 fe09 	bl	801d62e <USBD_LL_Transmit>
 8019a1c:	2300      	movs	r3, #0
 8019a1e:	4618      	mov	r0, r3
 8019a20:	3710      	adds	r7, #16
 8019a22:	46bd      	mov	sp, r7
 8019a24:	bd80      	pop	{r7, pc}

08019a26 <USBD_CtlContinueSendData>:
 8019a26:	b580      	push	{r7, lr}
 8019a28:	b084      	sub	sp, #16
 8019a2a:	af00      	add	r7, sp, #0
 8019a2c:	60f8      	str	r0, [r7, #12]
 8019a2e:	60b9      	str	r1, [r7, #8]
 8019a30:	607a      	str	r2, [r7, #4]
 8019a32:	687b      	ldr	r3, [r7, #4]
 8019a34:	68ba      	ldr	r2, [r7, #8]
 8019a36:	2100      	movs	r1, #0
 8019a38:	68f8      	ldr	r0, [r7, #12]
 8019a3a:	f003 fdf8 	bl	801d62e <USBD_LL_Transmit>
 8019a3e:	2300      	movs	r3, #0
 8019a40:	4618      	mov	r0, r3
 8019a42:	3710      	adds	r7, #16
 8019a44:	46bd      	mov	sp, r7
 8019a46:	bd80      	pop	{r7, pc}

08019a48 <USBD_CtlPrepareRx>:
 8019a48:	b580      	push	{r7, lr}
 8019a4a:	b084      	sub	sp, #16
 8019a4c:	af00      	add	r7, sp, #0
 8019a4e:	60f8      	str	r0, [r7, #12]
 8019a50:	60b9      	str	r1, [r7, #8]
 8019a52:	607a      	str	r2, [r7, #4]
 8019a54:	68fb      	ldr	r3, [r7, #12]
 8019a56:	2203      	movs	r2, #3
 8019a58:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8019a5c:	68fb      	ldr	r3, [r7, #12]
 8019a5e:	687a      	ldr	r2, [r7, #4]
 8019a60:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
 8019a64:	68fb      	ldr	r3, [r7, #12]
 8019a66:	687a      	ldr	r2, [r7, #4]
 8019a68:	f8c3 215c 	str.w	r2, [r3, #348]	@ 0x15c
 8019a6c:	687b      	ldr	r3, [r7, #4]
 8019a6e:	68ba      	ldr	r2, [r7, #8]
 8019a70:	2100      	movs	r1, #0
 8019a72:	68f8      	ldr	r0, [r7, #12]
 8019a74:	f003 fdfc 	bl	801d670 <USBD_LL_PrepareReceive>
 8019a78:	2300      	movs	r3, #0
 8019a7a:	4618      	mov	r0, r3
 8019a7c:	3710      	adds	r7, #16
 8019a7e:	46bd      	mov	sp, r7
 8019a80:	bd80      	pop	{r7, pc}

08019a82 <USBD_CtlContinueRx>:
 8019a82:	b580      	push	{r7, lr}
 8019a84:	b084      	sub	sp, #16
 8019a86:	af00      	add	r7, sp, #0
 8019a88:	60f8      	str	r0, [r7, #12]
 8019a8a:	60b9      	str	r1, [r7, #8]
 8019a8c:	607a      	str	r2, [r7, #4]
 8019a8e:	687b      	ldr	r3, [r7, #4]
 8019a90:	68ba      	ldr	r2, [r7, #8]
 8019a92:	2100      	movs	r1, #0
 8019a94:	68f8      	ldr	r0, [r7, #12]
 8019a96:	f003 fdeb 	bl	801d670 <USBD_LL_PrepareReceive>
 8019a9a:	2300      	movs	r3, #0
 8019a9c:	4618      	mov	r0, r3
 8019a9e:	3710      	adds	r7, #16
 8019aa0:	46bd      	mov	sp, r7
 8019aa2:	bd80      	pop	{r7, pc}

08019aa4 <USBD_CtlSendStatus>:
 8019aa4:	b580      	push	{r7, lr}
 8019aa6:	b082      	sub	sp, #8
 8019aa8:	af00      	add	r7, sp, #0
 8019aaa:	6078      	str	r0, [r7, #4]
 8019aac:	687b      	ldr	r3, [r7, #4]
 8019aae:	2204      	movs	r2, #4
 8019ab0:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8019ab4:	2300      	movs	r3, #0
 8019ab6:	2200      	movs	r2, #0
 8019ab8:	2100      	movs	r1, #0
 8019aba:	6878      	ldr	r0, [r7, #4]
 8019abc:	f003 fdb7 	bl	801d62e <USBD_LL_Transmit>
 8019ac0:	2300      	movs	r3, #0
 8019ac2:	4618      	mov	r0, r3
 8019ac4:	3708      	adds	r7, #8
 8019ac6:	46bd      	mov	sp, r7
 8019ac8:	bd80      	pop	{r7, pc}

08019aca <USBD_CtlReceiveStatus>:
 8019aca:	b580      	push	{r7, lr}
 8019acc:	b082      	sub	sp, #8
 8019ace:	af00      	add	r7, sp, #0
 8019ad0:	6078      	str	r0, [r7, #4]
 8019ad2:	687b      	ldr	r3, [r7, #4]
 8019ad4:	2205      	movs	r2, #5
 8019ad6:	f8c3 2294 	str.w	r2, [r3, #660]	@ 0x294
 8019ada:	2300      	movs	r3, #0
 8019adc:	2200      	movs	r2, #0
 8019ade:	2100      	movs	r1, #0
 8019ae0:	6878      	ldr	r0, [r7, #4]
 8019ae2:	f003 fdc5 	bl	801d670 <USBD_LL_PrepareReceive>
 8019ae6:	2300      	movs	r3, #0
 8019ae8:	4618      	mov	r0, r3
 8019aea:	3708      	adds	r7, #8
 8019aec:	46bd      	mov	sp, r7
 8019aee:	bd80      	pop	{r7, pc}

08019af0 <makeFreeRtosPriority>:
 8019af0:	b480      	push	{r7}
 8019af2:	b085      	sub	sp, #20
 8019af4:	af00      	add	r7, sp, #0
 8019af6:	4603      	mov	r3, r0
 8019af8:	80fb      	strh	r3, [r7, #6]
 8019afa:	2300      	movs	r3, #0
 8019afc:	60fb      	str	r3, [r7, #12]
 8019afe:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8019b02:	2b84      	cmp	r3, #132	@ 0x84
 8019b04:	d005      	beq.n	8019b12 <makeFreeRtosPriority+0x22>
 8019b06:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8019b0a:	68fb      	ldr	r3, [r7, #12]
 8019b0c:	4413      	add	r3, r2
 8019b0e:	3303      	adds	r3, #3
 8019b10:	60fb      	str	r3, [r7, #12]
 8019b12:	68fb      	ldr	r3, [r7, #12]
 8019b14:	4618      	mov	r0, r3
 8019b16:	3714      	adds	r7, #20
 8019b18:	46bd      	mov	sp, r7
 8019b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019b1e:	4770      	bx	lr

08019b20 <osKernelStart>:
 8019b20:	b580      	push	{r7, lr}
 8019b22:	af00      	add	r7, sp, #0
 8019b24:	f001 fa44 	bl	801afb0 <vTaskStartScheduler>
 8019b28:	2300      	movs	r3, #0
 8019b2a:	4618      	mov	r0, r3
 8019b2c:	bd80      	pop	{r7, pc}

08019b2e <osThreadCreate>:
 8019b2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b30:	b089      	sub	sp, #36	@ 0x24
 8019b32:	af04      	add	r7, sp, #16
 8019b34:	6078      	str	r0, [r7, #4]
 8019b36:	6039      	str	r1, [r7, #0]
 8019b38:	687b      	ldr	r3, [r7, #4]
 8019b3a:	695b      	ldr	r3, [r3, #20]
 8019b3c:	2b00      	cmp	r3, #0
 8019b3e:	d020      	beq.n	8019b82 <osThreadCreate+0x54>
 8019b40:	687b      	ldr	r3, [r7, #4]
 8019b42:	699b      	ldr	r3, [r3, #24]
 8019b44:	2b00      	cmp	r3, #0
 8019b46:	d01c      	beq.n	8019b82 <osThreadCreate+0x54>
 8019b48:	687b      	ldr	r3, [r7, #4]
 8019b4a:	685c      	ldr	r4, [r3, #4]
 8019b4c:	687b      	ldr	r3, [r7, #4]
 8019b4e:	681d      	ldr	r5, [r3, #0]
 8019b50:	687b      	ldr	r3, [r7, #4]
 8019b52:	691e      	ldr	r6, [r3, #16]
 8019b54:	687b      	ldr	r3, [r7, #4]
 8019b56:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019b5a:	4618      	mov	r0, r3
 8019b5c:	f7ff ffc8 	bl	8019af0 <makeFreeRtosPriority>
 8019b60:	4601      	mov	r1, r0
 8019b62:	687b      	ldr	r3, [r7, #4]
 8019b64:	695b      	ldr	r3, [r3, #20]
 8019b66:	687a      	ldr	r2, [r7, #4]
 8019b68:	6992      	ldr	r2, [r2, #24]
 8019b6a:	9202      	str	r2, [sp, #8]
 8019b6c:	9301      	str	r3, [sp, #4]
 8019b6e:	9100      	str	r1, [sp, #0]
 8019b70:	683b      	ldr	r3, [r7, #0]
 8019b72:	4632      	mov	r2, r6
 8019b74:	4629      	mov	r1, r5
 8019b76:	4620      	mov	r0, r4
 8019b78:	f000 ff7a 	bl	801aa70 <xTaskCreateStatic>
 8019b7c:	4603      	mov	r3, r0
 8019b7e:	60fb      	str	r3, [r7, #12]
 8019b80:	e01c      	b.n	8019bbc <osThreadCreate+0x8e>
 8019b82:	687b      	ldr	r3, [r7, #4]
 8019b84:	685c      	ldr	r4, [r3, #4]
 8019b86:	687b      	ldr	r3, [r7, #4]
 8019b88:	681d      	ldr	r5, [r3, #0]
 8019b8a:	687b      	ldr	r3, [r7, #4]
 8019b8c:	691b      	ldr	r3, [r3, #16]
 8019b8e:	b29e      	uxth	r6, r3
 8019b90:	687b      	ldr	r3, [r7, #4]
 8019b92:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019b96:	4618      	mov	r0, r3
 8019b98:	f7ff ffaa 	bl	8019af0 <makeFreeRtosPriority>
 8019b9c:	4602      	mov	r2, r0
 8019b9e:	f107 030c 	add.w	r3, r7, #12
 8019ba2:	9301      	str	r3, [sp, #4]
 8019ba4:	9200      	str	r2, [sp, #0]
 8019ba6:	683b      	ldr	r3, [r7, #0]
 8019ba8:	4632      	mov	r2, r6
 8019baa:	4629      	mov	r1, r5
 8019bac:	4620      	mov	r0, r4
 8019bae:	f000 ffc1 	bl	801ab34 <xTaskCreate>
 8019bb2:	4603      	mov	r3, r0
 8019bb4:	2b01      	cmp	r3, #1
 8019bb6:	d001      	beq.n	8019bbc <osThreadCreate+0x8e>
 8019bb8:	2300      	movs	r3, #0
 8019bba:	e000      	b.n	8019bbe <osThreadCreate+0x90>
 8019bbc:	68fb      	ldr	r3, [r7, #12]
 8019bbe:	4618      	mov	r0, r3
 8019bc0:	3714      	adds	r7, #20
 8019bc2:	46bd      	mov	sp, r7
 8019bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019bc6 <osDelay>:
 8019bc6:	b580      	push	{r7, lr}
 8019bc8:	b084      	sub	sp, #16
 8019bca:	af00      	add	r7, sp, #0
 8019bcc:	6078      	str	r0, [r7, #4]
 8019bce:	687b      	ldr	r3, [r7, #4]
 8019bd0:	60fb      	str	r3, [r7, #12]
 8019bd2:	68fb      	ldr	r3, [r7, #12]
 8019bd4:	2b00      	cmp	r3, #0
 8019bd6:	d001      	beq.n	8019bdc <osDelay+0x16>
 8019bd8:	68fb      	ldr	r3, [r7, #12]
 8019bda:	e000      	b.n	8019bde <osDelay+0x18>
 8019bdc:	2301      	movs	r3, #1
 8019bde:	4618      	mov	r0, r3
 8019be0:	f001 f9b0 	bl	801af44 <vTaskDelay>
 8019be4:	2300      	movs	r3, #0
 8019be6:	4618      	mov	r0, r3
 8019be8:	3710      	adds	r7, #16
 8019bea:	46bd      	mov	sp, r7
 8019bec:	bd80      	pop	{r7, pc}

08019bee <xEventGroupCreate>:
 8019bee:	b580      	push	{r7, lr}
 8019bf0:	b082      	sub	sp, #8
 8019bf2:	af00      	add	r7, sp, #0
 8019bf4:	2020      	movs	r0, #32
 8019bf6:	f002 fe89 	bl	801c90c <pvPortMalloc>
 8019bfa:	6078      	str	r0, [r7, #4]
 8019bfc:	687b      	ldr	r3, [r7, #4]
 8019bfe:	2b00      	cmp	r3, #0
 8019c00:	d00a      	beq.n	8019c18 <xEventGroupCreate+0x2a>
 8019c02:	687b      	ldr	r3, [r7, #4]
 8019c04:	2200      	movs	r2, #0
 8019c06:	601a      	str	r2, [r3, #0]
 8019c08:	687b      	ldr	r3, [r7, #4]
 8019c0a:	3304      	adds	r3, #4
 8019c0c:	4618      	mov	r0, r3
 8019c0e:	f000 f8b5 	bl	8019d7c <vListInitialise>
 8019c12:	687b      	ldr	r3, [r7, #4]
 8019c14:	2200      	movs	r2, #0
 8019c16:	771a      	strb	r2, [r3, #28]
 8019c18:	687b      	ldr	r3, [r7, #4]
 8019c1a:	4618      	mov	r0, r3
 8019c1c:	3708      	adds	r7, #8
 8019c1e:	46bd      	mov	sp, r7
 8019c20:	bd80      	pop	{r7, pc}

08019c22 <xEventGroupSetBits>:
 8019c22:	b580      	push	{r7, lr}
 8019c24:	b08e      	sub	sp, #56	@ 0x38
 8019c26:	af00      	add	r7, sp, #0
 8019c28:	6078      	str	r0, [r7, #4]
 8019c2a:	6039      	str	r1, [r7, #0]
 8019c2c:	2300      	movs	r3, #0
 8019c2e:	633b      	str	r3, [r7, #48]	@ 0x30
 8019c30:	687b      	ldr	r3, [r7, #4]
 8019c32:	62bb      	str	r3, [r7, #40]	@ 0x28
 8019c34:	2300      	movs	r3, #0
 8019c36:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8019c38:	687b      	ldr	r3, [r7, #4]
 8019c3a:	2b00      	cmp	r3, #0
 8019c3c:	d10b      	bne.n	8019c56 <xEventGroupSetBits+0x34>
 8019c3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019c42:	f383 8811 	msr	BASEPRI, r3
 8019c46:	f3bf 8f6f 	isb	sy
 8019c4a:	f3bf 8f4f 	dsb	sy
 8019c4e:	613b      	str	r3, [r7, #16]
 8019c50:	bf00      	nop
 8019c52:	bf00      	nop
 8019c54:	e7fd      	b.n	8019c52 <xEventGroupSetBits+0x30>
 8019c56:	683b      	ldr	r3, [r7, #0]
 8019c58:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8019c5c:	d30b      	bcc.n	8019c76 <xEventGroupSetBits+0x54>
 8019c5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019c62:	f383 8811 	msr	BASEPRI, r3
 8019c66:	f3bf 8f6f 	isb	sy
 8019c6a:	f3bf 8f4f 	dsb	sy
 8019c6e:	60fb      	str	r3, [r7, #12]
 8019c70:	bf00      	nop
 8019c72:	bf00      	nop
 8019c74:	e7fd      	b.n	8019c72 <xEventGroupSetBits+0x50>
 8019c76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019c78:	3304      	adds	r3, #4
 8019c7a:	627b      	str	r3, [r7, #36]	@ 0x24
 8019c7c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019c7e:	3308      	adds	r3, #8
 8019c80:	623b      	str	r3, [r7, #32]
 8019c82:	f001 fa07 	bl	801b094 <vTaskSuspendAll>
 8019c86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8019c88:	68db      	ldr	r3, [r3, #12]
 8019c8a:	637b      	str	r3, [r7, #52]	@ 0x34
 8019c8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019c8e:	681a      	ldr	r2, [r3, #0]
 8019c90:	683b      	ldr	r3, [r7, #0]
 8019c92:	431a      	orrs	r2, r3
 8019c94:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019c96:	601a      	str	r2, [r3, #0]
 8019c98:	e03c      	b.n	8019d14 <xEventGroupSetBits+0xf2>
 8019c9a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8019c9c:	685b      	ldr	r3, [r3, #4]
 8019c9e:	61fb      	str	r3, [r7, #28]
 8019ca0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8019ca2:	681b      	ldr	r3, [r3, #0]
 8019ca4:	61bb      	str	r3, [r7, #24]
 8019ca6:	2300      	movs	r3, #0
 8019ca8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8019caa:	69bb      	ldr	r3, [r7, #24]
 8019cac:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 8019cb0:	617b      	str	r3, [r7, #20]
 8019cb2:	69bb      	ldr	r3, [r7, #24]
 8019cb4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
 8019cb8:	61bb      	str	r3, [r7, #24]
 8019cba:	697b      	ldr	r3, [r7, #20]
 8019cbc:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8019cc0:	2b00      	cmp	r3, #0
 8019cc2:	d108      	bne.n	8019cd6 <xEventGroupSetBits+0xb4>
 8019cc4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019cc6:	681a      	ldr	r2, [r3, #0]
 8019cc8:	69bb      	ldr	r3, [r7, #24]
 8019cca:	4013      	ands	r3, r2
 8019ccc:	2b00      	cmp	r3, #0
 8019cce:	d00b      	beq.n	8019ce8 <xEventGroupSetBits+0xc6>
 8019cd0:	2301      	movs	r3, #1
 8019cd2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8019cd4:	e008      	b.n	8019ce8 <xEventGroupSetBits+0xc6>
 8019cd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019cd8:	681a      	ldr	r2, [r3, #0]
 8019cda:	69bb      	ldr	r3, [r7, #24]
 8019cdc:	4013      	ands	r3, r2
 8019cde:	69ba      	ldr	r2, [r7, #24]
 8019ce0:	429a      	cmp	r2, r3
 8019ce2:	d101      	bne.n	8019ce8 <xEventGroupSetBits+0xc6>
 8019ce4:	2301      	movs	r3, #1
 8019ce6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8019ce8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8019cea:	2b00      	cmp	r3, #0
 8019cec:	d010      	beq.n	8019d10 <xEventGroupSetBits+0xee>
 8019cee:	697b      	ldr	r3, [r7, #20]
 8019cf0:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8019cf4:	2b00      	cmp	r3, #0
 8019cf6:	d003      	beq.n	8019d00 <xEventGroupSetBits+0xde>
 8019cf8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8019cfa:	69bb      	ldr	r3, [r7, #24]
 8019cfc:	4313      	orrs	r3, r2
 8019cfe:	633b      	str	r3, [r7, #48]	@ 0x30
 8019d00:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019d02:	681b      	ldr	r3, [r3, #0]
 8019d04:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8019d08:	4619      	mov	r1, r3
 8019d0a:	6b78      	ldr	r0, [r7, #52]	@ 0x34
 8019d0c:	f001 fc7e 	bl	801b60c <vTaskRemoveFromUnorderedEventList>
 8019d10:	69fb      	ldr	r3, [r7, #28]
 8019d12:	637b      	str	r3, [r7, #52]	@ 0x34
 8019d14:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8019d16:	6a3b      	ldr	r3, [r7, #32]
 8019d18:	429a      	cmp	r2, r3
 8019d1a:	d1be      	bne.n	8019c9a <xEventGroupSetBits+0x78>
 8019d1c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019d1e:	681a      	ldr	r2, [r3, #0]
 8019d20:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8019d22:	43db      	mvns	r3, r3
 8019d24:	401a      	ands	r2, r3
 8019d26:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019d28:	601a      	str	r2, [r3, #0]
 8019d2a:	f001 f9c1 	bl	801b0b0 <xTaskResumeAll>
 8019d2e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8019d30:	681b      	ldr	r3, [r3, #0]
 8019d32:	4618      	mov	r0, r3
 8019d34:	3738      	adds	r7, #56	@ 0x38
 8019d36:	46bd      	mov	sp, r7
 8019d38:	bd80      	pop	{r7, pc}

08019d3a <vEventGroupSetBitsCallback>:
 8019d3a:	b580      	push	{r7, lr}
 8019d3c:	b082      	sub	sp, #8
 8019d3e:	af00      	add	r7, sp, #0
 8019d40:	6078      	str	r0, [r7, #4]
 8019d42:	6039      	str	r1, [r7, #0]
 8019d44:	6839      	ldr	r1, [r7, #0]
 8019d46:	6878      	ldr	r0, [r7, #4]
 8019d48:	f7ff ff6b 	bl	8019c22 <xEventGroupSetBits>
 8019d4c:	bf00      	nop
 8019d4e:	3708      	adds	r7, #8
 8019d50:	46bd      	mov	sp, r7
 8019d52:	bd80      	pop	{r7, pc}

08019d54 <xEventGroupSetBitsFromISR>:
 8019d54:	b580      	push	{r7, lr}
 8019d56:	b086      	sub	sp, #24
 8019d58:	af00      	add	r7, sp, #0
 8019d5a:	60f8      	str	r0, [r7, #12]
 8019d5c:	60b9      	str	r1, [r7, #8]
 8019d5e:	607a      	str	r2, [r7, #4]
 8019d60:	687b      	ldr	r3, [r7, #4]
 8019d62:	68ba      	ldr	r2, [r7, #8]
 8019d64:	68f9      	ldr	r1, [r7, #12]
 8019d66:	4804      	ldr	r0, [pc, #16]	@ (8019d78 <xEventGroupSetBitsFromISR+0x24>)
 8019d68:	f002 fb5e 	bl	801c428 <xTimerPendFunctionCallFromISR>
 8019d6c:	6178      	str	r0, [r7, #20]
 8019d6e:	697b      	ldr	r3, [r7, #20]
 8019d70:	4618      	mov	r0, r3
 8019d72:	3718      	adds	r7, #24
 8019d74:	46bd      	mov	sp, r7
 8019d76:	bd80      	pop	{r7, pc}
 8019d78:	08019d3b 	.word	0x08019d3b

08019d7c <vListInitialise>:
 8019d7c:	b480      	push	{r7}
 8019d7e:	b083      	sub	sp, #12
 8019d80:	af00      	add	r7, sp, #0
 8019d82:	6078      	str	r0, [r7, #4]
 8019d84:	687b      	ldr	r3, [r7, #4]
 8019d86:	f103 0208 	add.w	r2, r3, #8
 8019d8a:	687b      	ldr	r3, [r7, #4]
 8019d8c:	605a      	str	r2, [r3, #4]
 8019d8e:	687b      	ldr	r3, [r7, #4]
 8019d90:	f04f 32ff 	mov.w	r2, #4294967295
 8019d94:	609a      	str	r2, [r3, #8]
 8019d96:	687b      	ldr	r3, [r7, #4]
 8019d98:	f103 0208 	add.w	r2, r3, #8
 8019d9c:	687b      	ldr	r3, [r7, #4]
 8019d9e:	60da      	str	r2, [r3, #12]
 8019da0:	687b      	ldr	r3, [r7, #4]
 8019da2:	f103 0208 	add.w	r2, r3, #8
 8019da6:	687b      	ldr	r3, [r7, #4]
 8019da8:	611a      	str	r2, [r3, #16]
 8019daa:	687b      	ldr	r3, [r7, #4]
 8019dac:	2200      	movs	r2, #0
 8019dae:	601a      	str	r2, [r3, #0]
 8019db0:	bf00      	nop
 8019db2:	370c      	adds	r7, #12
 8019db4:	46bd      	mov	sp, r7
 8019db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019dba:	4770      	bx	lr

08019dbc <vListInitialiseItem>:
 8019dbc:	b480      	push	{r7}
 8019dbe:	b083      	sub	sp, #12
 8019dc0:	af00      	add	r7, sp, #0
 8019dc2:	6078      	str	r0, [r7, #4]
 8019dc4:	687b      	ldr	r3, [r7, #4]
 8019dc6:	2200      	movs	r2, #0
 8019dc8:	611a      	str	r2, [r3, #16]
 8019dca:	bf00      	nop
 8019dcc:	370c      	adds	r7, #12
 8019dce:	46bd      	mov	sp, r7
 8019dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019dd4:	4770      	bx	lr

08019dd6 <vListInsertEnd>:
 8019dd6:	b480      	push	{r7}
 8019dd8:	b085      	sub	sp, #20
 8019dda:	af00      	add	r7, sp, #0
 8019ddc:	6078      	str	r0, [r7, #4]
 8019dde:	6039      	str	r1, [r7, #0]
 8019de0:	687b      	ldr	r3, [r7, #4]
 8019de2:	685b      	ldr	r3, [r3, #4]
 8019de4:	60fb      	str	r3, [r7, #12]
 8019de6:	683b      	ldr	r3, [r7, #0]
 8019de8:	68fa      	ldr	r2, [r7, #12]
 8019dea:	605a      	str	r2, [r3, #4]
 8019dec:	68fb      	ldr	r3, [r7, #12]
 8019dee:	689a      	ldr	r2, [r3, #8]
 8019df0:	683b      	ldr	r3, [r7, #0]
 8019df2:	609a      	str	r2, [r3, #8]
 8019df4:	68fb      	ldr	r3, [r7, #12]
 8019df6:	689b      	ldr	r3, [r3, #8]
 8019df8:	683a      	ldr	r2, [r7, #0]
 8019dfa:	605a      	str	r2, [r3, #4]
 8019dfc:	68fb      	ldr	r3, [r7, #12]
 8019dfe:	683a      	ldr	r2, [r7, #0]
 8019e00:	609a      	str	r2, [r3, #8]
 8019e02:	683b      	ldr	r3, [r7, #0]
 8019e04:	687a      	ldr	r2, [r7, #4]
 8019e06:	611a      	str	r2, [r3, #16]
 8019e08:	687b      	ldr	r3, [r7, #4]
 8019e0a:	681b      	ldr	r3, [r3, #0]
 8019e0c:	1c5a      	adds	r2, r3, #1
 8019e0e:	687b      	ldr	r3, [r7, #4]
 8019e10:	601a      	str	r2, [r3, #0]
 8019e12:	bf00      	nop
 8019e14:	3714      	adds	r7, #20
 8019e16:	46bd      	mov	sp, r7
 8019e18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e1c:	4770      	bx	lr

08019e1e <vListInsert>:
 8019e1e:	b480      	push	{r7}
 8019e20:	b085      	sub	sp, #20
 8019e22:	af00      	add	r7, sp, #0
 8019e24:	6078      	str	r0, [r7, #4]
 8019e26:	6039      	str	r1, [r7, #0]
 8019e28:	683b      	ldr	r3, [r7, #0]
 8019e2a:	681b      	ldr	r3, [r3, #0]
 8019e2c:	60bb      	str	r3, [r7, #8]
 8019e2e:	68bb      	ldr	r3, [r7, #8]
 8019e30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8019e34:	d103      	bne.n	8019e3e <vListInsert+0x20>
 8019e36:	687b      	ldr	r3, [r7, #4]
 8019e38:	691b      	ldr	r3, [r3, #16]
 8019e3a:	60fb      	str	r3, [r7, #12]
 8019e3c:	e00c      	b.n	8019e58 <vListInsert+0x3a>
 8019e3e:	687b      	ldr	r3, [r7, #4]
 8019e40:	3308      	adds	r3, #8
 8019e42:	60fb      	str	r3, [r7, #12]
 8019e44:	e002      	b.n	8019e4c <vListInsert+0x2e>
 8019e46:	68fb      	ldr	r3, [r7, #12]
 8019e48:	685b      	ldr	r3, [r3, #4]
 8019e4a:	60fb      	str	r3, [r7, #12]
 8019e4c:	68fb      	ldr	r3, [r7, #12]
 8019e4e:	685b      	ldr	r3, [r3, #4]
 8019e50:	681b      	ldr	r3, [r3, #0]
 8019e52:	68ba      	ldr	r2, [r7, #8]
 8019e54:	429a      	cmp	r2, r3
 8019e56:	d2f6      	bcs.n	8019e46 <vListInsert+0x28>
 8019e58:	68fb      	ldr	r3, [r7, #12]
 8019e5a:	685a      	ldr	r2, [r3, #4]
 8019e5c:	683b      	ldr	r3, [r7, #0]
 8019e5e:	605a      	str	r2, [r3, #4]
 8019e60:	683b      	ldr	r3, [r7, #0]
 8019e62:	685b      	ldr	r3, [r3, #4]
 8019e64:	683a      	ldr	r2, [r7, #0]
 8019e66:	609a      	str	r2, [r3, #8]
 8019e68:	683b      	ldr	r3, [r7, #0]
 8019e6a:	68fa      	ldr	r2, [r7, #12]
 8019e6c:	609a      	str	r2, [r3, #8]
 8019e6e:	68fb      	ldr	r3, [r7, #12]
 8019e70:	683a      	ldr	r2, [r7, #0]
 8019e72:	605a      	str	r2, [r3, #4]
 8019e74:	683b      	ldr	r3, [r7, #0]
 8019e76:	687a      	ldr	r2, [r7, #4]
 8019e78:	611a      	str	r2, [r3, #16]
 8019e7a:	687b      	ldr	r3, [r7, #4]
 8019e7c:	681b      	ldr	r3, [r3, #0]
 8019e7e:	1c5a      	adds	r2, r3, #1
 8019e80:	687b      	ldr	r3, [r7, #4]
 8019e82:	601a      	str	r2, [r3, #0]
 8019e84:	bf00      	nop
 8019e86:	3714      	adds	r7, #20
 8019e88:	46bd      	mov	sp, r7
 8019e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019e8e:	4770      	bx	lr

08019e90 <uxListRemove>:
 8019e90:	b480      	push	{r7}
 8019e92:	b085      	sub	sp, #20
 8019e94:	af00      	add	r7, sp, #0
 8019e96:	6078      	str	r0, [r7, #4]
 8019e98:	687b      	ldr	r3, [r7, #4]
 8019e9a:	691b      	ldr	r3, [r3, #16]
 8019e9c:	60fb      	str	r3, [r7, #12]
 8019e9e:	687b      	ldr	r3, [r7, #4]
 8019ea0:	685b      	ldr	r3, [r3, #4]
 8019ea2:	687a      	ldr	r2, [r7, #4]
 8019ea4:	6892      	ldr	r2, [r2, #8]
 8019ea6:	609a      	str	r2, [r3, #8]
 8019ea8:	687b      	ldr	r3, [r7, #4]
 8019eaa:	689b      	ldr	r3, [r3, #8]
 8019eac:	687a      	ldr	r2, [r7, #4]
 8019eae:	6852      	ldr	r2, [r2, #4]
 8019eb0:	605a      	str	r2, [r3, #4]
 8019eb2:	68fb      	ldr	r3, [r7, #12]
 8019eb4:	685b      	ldr	r3, [r3, #4]
 8019eb6:	687a      	ldr	r2, [r7, #4]
 8019eb8:	429a      	cmp	r2, r3
 8019eba:	d103      	bne.n	8019ec4 <uxListRemove+0x34>
 8019ebc:	687b      	ldr	r3, [r7, #4]
 8019ebe:	689a      	ldr	r2, [r3, #8]
 8019ec0:	68fb      	ldr	r3, [r7, #12]
 8019ec2:	605a      	str	r2, [r3, #4]
 8019ec4:	687b      	ldr	r3, [r7, #4]
 8019ec6:	2200      	movs	r2, #0
 8019ec8:	611a      	str	r2, [r3, #16]
 8019eca:	68fb      	ldr	r3, [r7, #12]
 8019ecc:	681b      	ldr	r3, [r3, #0]
 8019ece:	1e5a      	subs	r2, r3, #1
 8019ed0:	68fb      	ldr	r3, [r7, #12]
 8019ed2:	601a      	str	r2, [r3, #0]
 8019ed4:	68fb      	ldr	r3, [r7, #12]
 8019ed6:	681b      	ldr	r3, [r3, #0]
 8019ed8:	4618      	mov	r0, r3
 8019eda:	3714      	adds	r7, #20
 8019edc:	46bd      	mov	sp, r7
 8019ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8019ee2:	4770      	bx	lr

08019ee4 <xQueueGenericReset>:
 8019ee4:	b580      	push	{r7, lr}
 8019ee6:	b084      	sub	sp, #16
 8019ee8:	af00      	add	r7, sp, #0
 8019eea:	6078      	str	r0, [r7, #4]
 8019eec:	6039      	str	r1, [r7, #0]
 8019eee:	687b      	ldr	r3, [r7, #4]
 8019ef0:	60fb      	str	r3, [r7, #12]
 8019ef2:	68fb      	ldr	r3, [r7, #12]
 8019ef4:	2b00      	cmp	r3, #0
 8019ef6:	d10b      	bne.n	8019f10 <xQueueGenericReset+0x2c>
 8019ef8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019efc:	f383 8811 	msr	BASEPRI, r3
 8019f00:	f3bf 8f6f 	isb	sy
 8019f04:	f3bf 8f4f 	dsb	sy
 8019f08:	60bb      	str	r3, [r7, #8]
 8019f0a:	bf00      	nop
 8019f0c:	bf00      	nop
 8019f0e:	e7fd      	b.n	8019f0c <xQueueGenericReset+0x28>
 8019f10:	f002 fbda 	bl	801c6c8 <vPortEnterCritical>
 8019f14:	68fb      	ldr	r3, [r7, #12]
 8019f16:	681a      	ldr	r2, [r3, #0]
 8019f18:	68fb      	ldr	r3, [r7, #12]
 8019f1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019f1c:	68f9      	ldr	r1, [r7, #12]
 8019f1e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8019f20:	fb01 f303 	mul.w	r3, r1, r3
 8019f24:	441a      	add	r2, r3
 8019f26:	68fb      	ldr	r3, [r7, #12]
 8019f28:	609a      	str	r2, [r3, #8]
 8019f2a:	68fb      	ldr	r3, [r7, #12]
 8019f2c:	2200      	movs	r2, #0
 8019f2e:	639a      	str	r2, [r3, #56]	@ 0x38
 8019f30:	68fb      	ldr	r3, [r7, #12]
 8019f32:	681a      	ldr	r2, [r3, #0]
 8019f34:	68fb      	ldr	r3, [r7, #12]
 8019f36:	605a      	str	r2, [r3, #4]
 8019f38:	68fb      	ldr	r3, [r7, #12]
 8019f3a:	681a      	ldr	r2, [r3, #0]
 8019f3c:	68fb      	ldr	r3, [r7, #12]
 8019f3e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8019f40:	3b01      	subs	r3, #1
 8019f42:	68f9      	ldr	r1, [r7, #12]
 8019f44:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8019f46:	fb01 f303 	mul.w	r3, r1, r3
 8019f4a:	441a      	add	r2, r3
 8019f4c:	68fb      	ldr	r3, [r7, #12]
 8019f4e:	60da      	str	r2, [r3, #12]
 8019f50:	68fb      	ldr	r3, [r7, #12]
 8019f52:	22ff      	movs	r2, #255	@ 0xff
 8019f54:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8019f58:	68fb      	ldr	r3, [r7, #12]
 8019f5a:	22ff      	movs	r2, #255	@ 0xff
 8019f5c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8019f60:	683b      	ldr	r3, [r7, #0]
 8019f62:	2b00      	cmp	r3, #0
 8019f64:	d114      	bne.n	8019f90 <xQueueGenericReset+0xac>
 8019f66:	68fb      	ldr	r3, [r7, #12]
 8019f68:	691b      	ldr	r3, [r3, #16]
 8019f6a:	2b00      	cmp	r3, #0
 8019f6c:	d01a      	beq.n	8019fa4 <xQueueGenericReset+0xc0>
 8019f6e:	68fb      	ldr	r3, [r7, #12]
 8019f70:	3310      	adds	r3, #16
 8019f72:	4618      	mov	r0, r3
 8019f74:	f001 fae6 	bl	801b544 <xTaskRemoveFromEventList>
 8019f78:	4603      	mov	r3, r0
 8019f7a:	2b00      	cmp	r3, #0
 8019f7c:	d012      	beq.n	8019fa4 <xQueueGenericReset+0xc0>
 8019f7e:	4b0d      	ldr	r3, [pc, #52]	@ (8019fb4 <xQueueGenericReset+0xd0>)
 8019f80:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8019f84:	601a      	str	r2, [r3, #0]
 8019f86:	f3bf 8f4f 	dsb	sy
 8019f8a:	f3bf 8f6f 	isb	sy
 8019f8e:	e009      	b.n	8019fa4 <xQueueGenericReset+0xc0>
 8019f90:	68fb      	ldr	r3, [r7, #12]
 8019f92:	3310      	adds	r3, #16
 8019f94:	4618      	mov	r0, r3
 8019f96:	f7ff fef1 	bl	8019d7c <vListInitialise>
 8019f9a:	68fb      	ldr	r3, [r7, #12]
 8019f9c:	3324      	adds	r3, #36	@ 0x24
 8019f9e:	4618      	mov	r0, r3
 8019fa0:	f7ff feec 	bl	8019d7c <vListInitialise>
 8019fa4:	f002 fbc2 	bl	801c72c <vPortExitCritical>
 8019fa8:	2301      	movs	r3, #1
 8019faa:	4618      	mov	r0, r3
 8019fac:	3710      	adds	r7, #16
 8019fae:	46bd      	mov	sp, r7
 8019fb0:	bd80      	pop	{r7, pc}
 8019fb2:	bf00      	nop
 8019fb4:	e000ed04 	.word	0xe000ed04

08019fb8 <xQueueGenericCreateStatic>:
 8019fb8:	b580      	push	{r7, lr}
 8019fba:	b08e      	sub	sp, #56	@ 0x38
 8019fbc:	af02      	add	r7, sp, #8
 8019fbe:	60f8      	str	r0, [r7, #12]
 8019fc0:	60b9      	str	r1, [r7, #8]
 8019fc2:	607a      	str	r2, [r7, #4]
 8019fc4:	603b      	str	r3, [r7, #0]
 8019fc6:	68fb      	ldr	r3, [r7, #12]
 8019fc8:	2b00      	cmp	r3, #0
 8019fca:	d10b      	bne.n	8019fe4 <xQueueGenericCreateStatic+0x2c>
 8019fcc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019fd0:	f383 8811 	msr	BASEPRI, r3
 8019fd4:	f3bf 8f6f 	isb	sy
 8019fd8:	f3bf 8f4f 	dsb	sy
 8019fdc:	62bb      	str	r3, [r7, #40]	@ 0x28
 8019fde:	bf00      	nop
 8019fe0:	bf00      	nop
 8019fe2:	e7fd      	b.n	8019fe0 <xQueueGenericCreateStatic+0x28>
 8019fe4:	683b      	ldr	r3, [r7, #0]
 8019fe6:	2b00      	cmp	r3, #0
 8019fe8:	d10b      	bne.n	801a002 <xQueueGenericCreateStatic+0x4a>
 8019fea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8019fee:	f383 8811 	msr	BASEPRI, r3
 8019ff2:	f3bf 8f6f 	isb	sy
 8019ff6:	f3bf 8f4f 	dsb	sy
 8019ffa:	627b      	str	r3, [r7, #36]	@ 0x24
 8019ffc:	bf00      	nop
 8019ffe:	bf00      	nop
 801a000:	e7fd      	b.n	8019ffe <xQueueGenericCreateStatic+0x46>
 801a002:	687b      	ldr	r3, [r7, #4]
 801a004:	2b00      	cmp	r3, #0
 801a006:	d002      	beq.n	801a00e <xQueueGenericCreateStatic+0x56>
 801a008:	68bb      	ldr	r3, [r7, #8]
 801a00a:	2b00      	cmp	r3, #0
 801a00c:	d001      	beq.n	801a012 <xQueueGenericCreateStatic+0x5a>
 801a00e:	2301      	movs	r3, #1
 801a010:	e000      	b.n	801a014 <xQueueGenericCreateStatic+0x5c>
 801a012:	2300      	movs	r3, #0
 801a014:	2b00      	cmp	r3, #0
 801a016:	d10b      	bne.n	801a030 <xQueueGenericCreateStatic+0x78>
 801a018:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a01c:	f383 8811 	msr	BASEPRI, r3
 801a020:	f3bf 8f6f 	isb	sy
 801a024:	f3bf 8f4f 	dsb	sy
 801a028:	623b      	str	r3, [r7, #32]
 801a02a:	bf00      	nop
 801a02c:	bf00      	nop
 801a02e:	e7fd      	b.n	801a02c <xQueueGenericCreateStatic+0x74>
 801a030:	687b      	ldr	r3, [r7, #4]
 801a032:	2b00      	cmp	r3, #0
 801a034:	d102      	bne.n	801a03c <xQueueGenericCreateStatic+0x84>
 801a036:	68bb      	ldr	r3, [r7, #8]
 801a038:	2b00      	cmp	r3, #0
 801a03a:	d101      	bne.n	801a040 <xQueueGenericCreateStatic+0x88>
 801a03c:	2301      	movs	r3, #1
 801a03e:	e000      	b.n	801a042 <xQueueGenericCreateStatic+0x8a>
 801a040:	2300      	movs	r3, #0
 801a042:	2b00      	cmp	r3, #0
 801a044:	d10b      	bne.n	801a05e <xQueueGenericCreateStatic+0xa6>
 801a046:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a04a:	f383 8811 	msr	BASEPRI, r3
 801a04e:	f3bf 8f6f 	isb	sy
 801a052:	f3bf 8f4f 	dsb	sy
 801a056:	61fb      	str	r3, [r7, #28]
 801a058:	bf00      	nop
 801a05a:	bf00      	nop
 801a05c:	e7fd      	b.n	801a05a <xQueueGenericCreateStatic+0xa2>
 801a05e:	2350      	movs	r3, #80	@ 0x50
 801a060:	617b      	str	r3, [r7, #20]
 801a062:	697b      	ldr	r3, [r7, #20]
 801a064:	2b50      	cmp	r3, #80	@ 0x50
 801a066:	d00b      	beq.n	801a080 <xQueueGenericCreateStatic+0xc8>
 801a068:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a06c:	f383 8811 	msr	BASEPRI, r3
 801a070:	f3bf 8f6f 	isb	sy
 801a074:	f3bf 8f4f 	dsb	sy
 801a078:	61bb      	str	r3, [r7, #24]
 801a07a:	bf00      	nop
 801a07c:	bf00      	nop
 801a07e:	e7fd      	b.n	801a07c <xQueueGenericCreateStatic+0xc4>
 801a080:	697b      	ldr	r3, [r7, #20]
 801a082:	683b      	ldr	r3, [r7, #0]
 801a084:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801a086:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a088:	2b00      	cmp	r3, #0
 801a08a:	d00d      	beq.n	801a0a8 <xQueueGenericCreateStatic+0xf0>
 801a08c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a08e:	2201      	movs	r2, #1
 801a090:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 801a094:	f897 2038 	ldrb.w	r2, [r7, #56]	@ 0x38
 801a098:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a09a:	9300      	str	r3, [sp, #0]
 801a09c:	4613      	mov	r3, r2
 801a09e:	687a      	ldr	r2, [r7, #4]
 801a0a0:	68b9      	ldr	r1, [r7, #8]
 801a0a2:	68f8      	ldr	r0, [r7, #12]
 801a0a4:	f000 f840 	bl	801a128 <prvInitialiseNewQueue>
 801a0a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a0aa:	4618      	mov	r0, r3
 801a0ac:	3730      	adds	r7, #48	@ 0x30
 801a0ae:	46bd      	mov	sp, r7
 801a0b0:	bd80      	pop	{r7, pc}

0801a0b2 <xQueueGenericCreate>:
 801a0b2:	b580      	push	{r7, lr}
 801a0b4:	b08a      	sub	sp, #40	@ 0x28
 801a0b6:	af02      	add	r7, sp, #8
 801a0b8:	60f8      	str	r0, [r7, #12]
 801a0ba:	60b9      	str	r1, [r7, #8]
 801a0bc:	4613      	mov	r3, r2
 801a0be:	71fb      	strb	r3, [r7, #7]
 801a0c0:	68fb      	ldr	r3, [r7, #12]
 801a0c2:	2b00      	cmp	r3, #0
 801a0c4:	d10b      	bne.n	801a0de <xQueueGenericCreate+0x2c>
 801a0c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a0ca:	f383 8811 	msr	BASEPRI, r3
 801a0ce:	f3bf 8f6f 	isb	sy
 801a0d2:	f3bf 8f4f 	dsb	sy
 801a0d6:	613b      	str	r3, [r7, #16]
 801a0d8:	bf00      	nop
 801a0da:	bf00      	nop
 801a0dc:	e7fd      	b.n	801a0da <xQueueGenericCreate+0x28>
 801a0de:	68fb      	ldr	r3, [r7, #12]
 801a0e0:	68ba      	ldr	r2, [r7, #8]
 801a0e2:	fb02 f303 	mul.w	r3, r2, r3
 801a0e6:	61fb      	str	r3, [r7, #28]
 801a0e8:	69fb      	ldr	r3, [r7, #28]
 801a0ea:	3350      	adds	r3, #80	@ 0x50
 801a0ec:	4618      	mov	r0, r3
 801a0ee:	f002 fc0d 	bl	801c90c <pvPortMalloc>
 801a0f2:	61b8      	str	r0, [r7, #24]
 801a0f4:	69bb      	ldr	r3, [r7, #24]
 801a0f6:	2b00      	cmp	r3, #0
 801a0f8:	d011      	beq.n	801a11e <xQueueGenericCreate+0x6c>
 801a0fa:	69bb      	ldr	r3, [r7, #24]
 801a0fc:	617b      	str	r3, [r7, #20]
 801a0fe:	697b      	ldr	r3, [r7, #20]
 801a100:	3350      	adds	r3, #80	@ 0x50
 801a102:	617b      	str	r3, [r7, #20]
 801a104:	69bb      	ldr	r3, [r7, #24]
 801a106:	2200      	movs	r2, #0
 801a108:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 801a10c:	79fa      	ldrb	r2, [r7, #7]
 801a10e:	69bb      	ldr	r3, [r7, #24]
 801a110:	9300      	str	r3, [sp, #0]
 801a112:	4613      	mov	r3, r2
 801a114:	697a      	ldr	r2, [r7, #20]
 801a116:	68b9      	ldr	r1, [r7, #8]
 801a118:	68f8      	ldr	r0, [r7, #12]
 801a11a:	f000 f805 	bl	801a128 <prvInitialiseNewQueue>
 801a11e:	69bb      	ldr	r3, [r7, #24]
 801a120:	4618      	mov	r0, r3
 801a122:	3720      	adds	r7, #32
 801a124:	46bd      	mov	sp, r7
 801a126:	bd80      	pop	{r7, pc}

0801a128 <prvInitialiseNewQueue>:
 801a128:	b580      	push	{r7, lr}
 801a12a:	b084      	sub	sp, #16
 801a12c:	af00      	add	r7, sp, #0
 801a12e:	60f8      	str	r0, [r7, #12]
 801a130:	60b9      	str	r1, [r7, #8]
 801a132:	607a      	str	r2, [r7, #4]
 801a134:	70fb      	strb	r3, [r7, #3]
 801a136:	68bb      	ldr	r3, [r7, #8]
 801a138:	2b00      	cmp	r3, #0
 801a13a:	d103      	bne.n	801a144 <prvInitialiseNewQueue+0x1c>
 801a13c:	69bb      	ldr	r3, [r7, #24]
 801a13e:	69ba      	ldr	r2, [r7, #24]
 801a140:	601a      	str	r2, [r3, #0]
 801a142:	e002      	b.n	801a14a <prvInitialiseNewQueue+0x22>
 801a144:	69bb      	ldr	r3, [r7, #24]
 801a146:	687a      	ldr	r2, [r7, #4]
 801a148:	601a      	str	r2, [r3, #0]
 801a14a:	69bb      	ldr	r3, [r7, #24]
 801a14c:	68fa      	ldr	r2, [r7, #12]
 801a14e:	63da      	str	r2, [r3, #60]	@ 0x3c
 801a150:	69bb      	ldr	r3, [r7, #24]
 801a152:	68ba      	ldr	r2, [r7, #8]
 801a154:	641a      	str	r2, [r3, #64]	@ 0x40
 801a156:	2101      	movs	r1, #1
 801a158:	69b8      	ldr	r0, [r7, #24]
 801a15a:	f7ff fec3 	bl	8019ee4 <xQueueGenericReset>
 801a15e:	69bb      	ldr	r3, [r7, #24]
 801a160:	78fa      	ldrb	r2, [r7, #3]
 801a162:	f883 204c 	strb.w	r2, [r3, #76]	@ 0x4c
 801a166:	bf00      	nop
 801a168:	3710      	adds	r7, #16
 801a16a:	46bd      	mov	sp, r7
 801a16c:	bd80      	pop	{r7, pc}
	...

0801a170 <xQueueGenericSend>:
 801a170:	b580      	push	{r7, lr}
 801a172:	b08e      	sub	sp, #56	@ 0x38
 801a174:	af00      	add	r7, sp, #0
 801a176:	60f8      	str	r0, [r7, #12]
 801a178:	60b9      	str	r1, [r7, #8]
 801a17a:	607a      	str	r2, [r7, #4]
 801a17c:	603b      	str	r3, [r7, #0]
 801a17e:	2300      	movs	r3, #0
 801a180:	637b      	str	r3, [r7, #52]	@ 0x34
 801a182:	68fb      	ldr	r3, [r7, #12]
 801a184:	633b      	str	r3, [r7, #48]	@ 0x30
 801a186:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a188:	2b00      	cmp	r3, #0
 801a18a:	d10b      	bne.n	801a1a4 <xQueueGenericSend+0x34>
 801a18c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a190:	f383 8811 	msr	BASEPRI, r3
 801a194:	f3bf 8f6f 	isb	sy
 801a198:	f3bf 8f4f 	dsb	sy
 801a19c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801a19e:	bf00      	nop
 801a1a0:	bf00      	nop
 801a1a2:	e7fd      	b.n	801a1a0 <xQueueGenericSend+0x30>
 801a1a4:	68bb      	ldr	r3, [r7, #8]
 801a1a6:	2b00      	cmp	r3, #0
 801a1a8:	d103      	bne.n	801a1b2 <xQueueGenericSend+0x42>
 801a1aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a1ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a1ae:	2b00      	cmp	r3, #0
 801a1b0:	d101      	bne.n	801a1b6 <xQueueGenericSend+0x46>
 801a1b2:	2301      	movs	r3, #1
 801a1b4:	e000      	b.n	801a1b8 <xQueueGenericSend+0x48>
 801a1b6:	2300      	movs	r3, #0
 801a1b8:	2b00      	cmp	r3, #0
 801a1ba:	d10b      	bne.n	801a1d4 <xQueueGenericSend+0x64>
 801a1bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a1c0:	f383 8811 	msr	BASEPRI, r3
 801a1c4:	f3bf 8f6f 	isb	sy
 801a1c8:	f3bf 8f4f 	dsb	sy
 801a1cc:	627b      	str	r3, [r7, #36]	@ 0x24
 801a1ce:	bf00      	nop
 801a1d0:	bf00      	nop
 801a1d2:	e7fd      	b.n	801a1d0 <xQueueGenericSend+0x60>
 801a1d4:	683b      	ldr	r3, [r7, #0]
 801a1d6:	2b02      	cmp	r3, #2
 801a1d8:	d103      	bne.n	801a1e2 <xQueueGenericSend+0x72>
 801a1da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a1dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a1de:	2b01      	cmp	r3, #1
 801a1e0:	d101      	bne.n	801a1e6 <xQueueGenericSend+0x76>
 801a1e2:	2301      	movs	r3, #1
 801a1e4:	e000      	b.n	801a1e8 <xQueueGenericSend+0x78>
 801a1e6:	2300      	movs	r3, #0
 801a1e8:	2b00      	cmp	r3, #0
 801a1ea:	d10b      	bne.n	801a204 <xQueueGenericSend+0x94>
 801a1ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a1f0:	f383 8811 	msr	BASEPRI, r3
 801a1f4:	f3bf 8f6f 	isb	sy
 801a1f8:	f3bf 8f4f 	dsb	sy
 801a1fc:	623b      	str	r3, [r7, #32]
 801a1fe:	bf00      	nop
 801a200:	bf00      	nop
 801a202:	e7fd      	b.n	801a200 <xQueueGenericSend+0x90>
 801a204:	f001 fbc8 	bl	801b998 <xTaskGetSchedulerState>
 801a208:	4603      	mov	r3, r0
 801a20a:	2b00      	cmp	r3, #0
 801a20c:	d102      	bne.n	801a214 <xQueueGenericSend+0xa4>
 801a20e:	687b      	ldr	r3, [r7, #4]
 801a210:	2b00      	cmp	r3, #0
 801a212:	d101      	bne.n	801a218 <xQueueGenericSend+0xa8>
 801a214:	2301      	movs	r3, #1
 801a216:	e000      	b.n	801a21a <xQueueGenericSend+0xaa>
 801a218:	2300      	movs	r3, #0
 801a21a:	2b00      	cmp	r3, #0
 801a21c:	d10b      	bne.n	801a236 <xQueueGenericSend+0xc6>
 801a21e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a222:	f383 8811 	msr	BASEPRI, r3
 801a226:	f3bf 8f6f 	isb	sy
 801a22a:	f3bf 8f4f 	dsb	sy
 801a22e:	61fb      	str	r3, [r7, #28]
 801a230:	bf00      	nop
 801a232:	bf00      	nop
 801a234:	e7fd      	b.n	801a232 <xQueueGenericSend+0xc2>
 801a236:	f002 fa47 	bl	801c6c8 <vPortEnterCritical>
 801a23a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a23c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 801a23e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a240:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a242:	429a      	cmp	r2, r3
 801a244:	d302      	bcc.n	801a24c <xQueueGenericSend+0xdc>
 801a246:	683b      	ldr	r3, [r7, #0]
 801a248:	2b02      	cmp	r3, #2
 801a24a:	d129      	bne.n	801a2a0 <xQueueGenericSend+0x130>
 801a24c:	683a      	ldr	r2, [r7, #0]
 801a24e:	68b9      	ldr	r1, [r7, #8]
 801a250:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801a252:	f000 fa9f 	bl	801a794 <prvCopyDataToQueue>
 801a256:	62f8      	str	r0, [r7, #44]	@ 0x2c
 801a258:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a25a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801a25c:	2b00      	cmp	r3, #0
 801a25e:	d010      	beq.n	801a282 <xQueueGenericSend+0x112>
 801a260:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a262:	3324      	adds	r3, #36	@ 0x24
 801a264:	4618      	mov	r0, r3
 801a266:	f001 f96d 	bl	801b544 <xTaskRemoveFromEventList>
 801a26a:	4603      	mov	r3, r0
 801a26c:	2b00      	cmp	r3, #0
 801a26e:	d013      	beq.n	801a298 <xQueueGenericSend+0x128>
 801a270:	4b3f      	ldr	r3, [pc, #252]	@ (801a370 <xQueueGenericSend+0x200>)
 801a272:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801a276:	601a      	str	r2, [r3, #0]
 801a278:	f3bf 8f4f 	dsb	sy
 801a27c:	f3bf 8f6f 	isb	sy
 801a280:	e00a      	b.n	801a298 <xQueueGenericSend+0x128>
 801a282:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a284:	2b00      	cmp	r3, #0
 801a286:	d007      	beq.n	801a298 <xQueueGenericSend+0x128>
 801a288:	4b39      	ldr	r3, [pc, #228]	@ (801a370 <xQueueGenericSend+0x200>)
 801a28a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801a28e:	601a      	str	r2, [r3, #0]
 801a290:	f3bf 8f4f 	dsb	sy
 801a294:	f3bf 8f6f 	isb	sy
 801a298:	f002 fa48 	bl	801c72c <vPortExitCritical>
 801a29c:	2301      	movs	r3, #1
 801a29e:	e063      	b.n	801a368 <xQueueGenericSend+0x1f8>
 801a2a0:	687b      	ldr	r3, [r7, #4]
 801a2a2:	2b00      	cmp	r3, #0
 801a2a4:	d103      	bne.n	801a2ae <xQueueGenericSend+0x13e>
 801a2a6:	f002 fa41 	bl	801c72c <vPortExitCritical>
 801a2aa:	2300      	movs	r3, #0
 801a2ac:	e05c      	b.n	801a368 <xQueueGenericSend+0x1f8>
 801a2ae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801a2b0:	2b00      	cmp	r3, #0
 801a2b2:	d106      	bne.n	801a2c2 <xQueueGenericSend+0x152>
 801a2b4:	f107 0314 	add.w	r3, r7, #20
 801a2b8:	4618      	mov	r0, r3
 801a2ba:	f001 fa0b 	bl	801b6d4 <vTaskInternalSetTimeOutState>
 801a2be:	2301      	movs	r3, #1
 801a2c0:	637b      	str	r3, [r7, #52]	@ 0x34
 801a2c2:	f002 fa33 	bl	801c72c <vPortExitCritical>
 801a2c6:	f000 fee5 	bl	801b094 <vTaskSuspendAll>
 801a2ca:	f002 f9fd 	bl	801c6c8 <vPortEnterCritical>
 801a2ce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a2d0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 801a2d4:	b25b      	sxtb	r3, r3
 801a2d6:	f1b3 3fff 	cmp.w	r3, #4294967295
 801a2da:	d103      	bne.n	801a2e4 <xQueueGenericSend+0x174>
 801a2dc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a2de:	2200      	movs	r2, #0
 801a2e0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801a2e4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a2e6:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801a2ea:	b25b      	sxtb	r3, r3
 801a2ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 801a2f0:	d103      	bne.n	801a2fa <xQueueGenericSend+0x18a>
 801a2f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a2f4:	2200      	movs	r2, #0
 801a2f6:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801a2fa:	f002 fa17 	bl	801c72c <vPortExitCritical>
 801a2fe:	1d3a      	adds	r2, r7, #4
 801a300:	f107 0314 	add.w	r3, r7, #20
 801a304:	4611      	mov	r1, r2
 801a306:	4618      	mov	r0, r3
 801a308:	f001 f9fa 	bl	801b700 <xTaskCheckForTimeOut>
 801a30c:	4603      	mov	r3, r0
 801a30e:	2b00      	cmp	r3, #0
 801a310:	d124      	bne.n	801a35c <xQueueGenericSend+0x1ec>
 801a312:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801a314:	f000 fb36 	bl	801a984 <prvIsQueueFull>
 801a318:	4603      	mov	r3, r0
 801a31a:	2b00      	cmp	r3, #0
 801a31c:	d018      	beq.n	801a350 <xQueueGenericSend+0x1e0>
 801a31e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a320:	3310      	adds	r3, #16
 801a322:	687a      	ldr	r2, [r7, #4]
 801a324:	4611      	mov	r1, r2
 801a326:	4618      	mov	r0, r3
 801a328:	f001 f8ba 	bl	801b4a0 <vTaskPlaceOnEventList>
 801a32c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801a32e:	f000 fac1 	bl	801a8b4 <prvUnlockQueue>
 801a332:	f000 febd 	bl	801b0b0 <xTaskResumeAll>
 801a336:	4603      	mov	r3, r0
 801a338:	2b00      	cmp	r3, #0
 801a33a:	f47f af7c 	bne.w	801a236 <xQueueGenericSend+0xc6>
 801a33e:	4b0c      	ldr	r3, [pc, #48]	@ (801a370 <xQueueGenericSend+0x200>)
 801a340:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801a344:	601a      	str	r2, [r3, #0]
 801a346:	f3bf 8f4f 	dsb	sy
 801a34a:	f3bf 8f6f 	isb	sy
 801a34e:	e772      	b.n	801a236 <xQueueGenericSend+0xc6>
 801a350:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801a352:	f000 faaf 	bl	801a8b4 <prvUnlockQueue>
 801a356:	f000 feab 	bl	801b0b0 <xTaskResumeAll>
 801a35a:	e76c      	b.n	801a236 <xQueueGenericSend+0xc6>
 801a35c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 801a35e:	f000 faa9 	bl	801a8b4 <prvUnlockQueue>
 801a362:	f000 fea5 	bl	801b0b0 <xTaskResumeAll>
 801a366:	2300      	movs	r3, #0
 801a368:	4618      	mov	r0, r3
 801a36a:	3738      	adds	r7, #56	@ 0x38
 801a36c:	46bd      	mov	sp, r7
 801a36e:	bd80      	pop	{r7, pc}
 801a370:	e000ed04 	.word	0xe000ed04

0801a374 <xQueueGenericSendFromISR>:
 801a374:	b580      	push	{r7, lr}
 801a376:	b090      	sub	sp, #64	@ 0x40
 801a378:	af00      	add	r7, sp, #0
 801a37a:	60f8      	str	r0, [r7, #12]
 801a37c:	60b9      	str	r1, [r7, #8]
 801a37e:	607a      	str	r2, [r7, #4]
 801a380:	603b      	str	r3, [r7, #0]
 801a382:	68fb      	ldr	r3, [r7, #12]
 801a384:	63bb      	str	r3, [r7, #56]	@ 0x38
 801a386:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a388:	2b00      	cmp	r3, #0
 801a38a:	d10b      	bne.n	801a3a4 <xQueueGenericSendFromISR+0x30>
 801a38c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a390:	f383 8811 	msr	BASEPRI, r3
 801a394:	f3bf 8f6f 	isb	sy
 801a398:	f3bf 8f4f 	dsb	sy
 801a39c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801a39e:	bf00      	nop
 801a3a0:	bf00      	nop
 801a3a2:	e7fd      	b.n	801a3a0 <xQueueGenericSendFromISR+0x2c>
 801a3a4:	68bb      	ldr	r3, [r7, #8]
 801a3a6:	2b00      	cmp	r3, #0
 801a3a8:	d103      	bne.n	801a3b2 <xQueueGenericSendFromISR+0x3e>
 801a3aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a3ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a3ae:	2b00      	cmp	r3, #0
 801a3b0:	d101      	bne.n	801a3b6 <xQueueGenericSendFromISR+0x42>
 801a3b2:	2301      	movs	r3, #1
 801a3b4:	e000      	b.n	801a3b8 <xQueueGenericSendFromISR+0x44>
 801a3b6:	2300      	movs	r3, #0
 801a3b8:	2b00      	cmp	r3, #0
 801a3ba:	d10b      	bne.n	801a3d4 <xQueueGenericSendFromISR+0x60>
 801a3bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a3c0:	f383 8811 	msr	BASEPRI, r3
 801a3c4:	f3bf 8f6f 	isb	sy
 801a3c8:	f3bf 8f4f 	dsb	sy
 801a3cc:	627b      	str	r3, [r7, #36]	@ 0x24
 801a3ce:	bf00      	nop
 801a3d0:	bf00      	nop
 801a3d2:	e7fd      	b.n	801a3d0 <xQueueGenericSendFromISR+0x5c>
 801a3d4:	683b      	ldr	r3, [r7, #0]
 801a3d6:	2b02      	cmp	r3, #2
 801a3d8:	d103      	bne.n	801a3e2 <xQueueGenericSendFromISR+0x6e>
 801a3da:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a3dc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a3de:	2b01      	cmp	r3, #1
 801a3e0:	d101      	bne.n	801a3e6 <xQueueGenericSendFromISR+0x72>
 801a3e2:	2301      	movs	r3, #1
 801a3e4:	e000      	b.n	801a3e8 <xQueueGenericSendFromISR+0x74>
 801a3e6:	2300      	movs	r3, #0
 801a3e8:	2b00      	cmp	r3, #0
 801a3ea:	d10b      	bne.n	801a404 <xQueueGenericSendFromISR+0x90>
 801a3ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a3f0:	f383 8811 	msr	BASEPRI, r3
 801a3f4:	f3bf 8f6f 	isb	sy
 801a3f8:	f3bf 8f4f 	dsb	sy
 801a3fc:	623b      	str	r3, [r7, #32]
 801a3fe:	bf00      	nop
 801a400:	bf00      	nop
 801a402:	e7fd      	b.n	801a400 <xQueueGenericSendFromISR+0x8c>
 801a404:	f002 fa40 	bl	801c888 <vPortValidateInterruptPriority>
 801a408:	f3ef 8211 	mrs	r2, BASEPRI
 801a40c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a410:	f383 8811 	msr	BASEPRI, r3
 801a414:	f3bf 8f6f 	isb	sy
 801a418:	f3bf 8f4f 	dsb	sy
 801a41c:	61fa      	str	r2, [r7, #28]
 801a41e:	61bb      	str	r3, [r7, #24]
 801a420:	69fb      	ldr	r3, [r7, #28]
 801a422:	637b      	str	r3, [r7, #52]	@ 0x34
 801a424:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a426:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 801a428:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a42a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a42c:	429a      	cmp	r2, r3
 801a42e:	d302      	bcc.n	801a436 <xQueueGenericSendFromISR+0xc2>
 801a430:	683b      	ldr	r3, [r7, #0]
 801a432:	2b02      	cmp	r3, #2
 801a434:	d12f      	bne.n	801a496 <xQueueGenericSendFromISR+0x122>
 801a436:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a438:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801a43c:	f887 3033 	strb.w	r3, [r7, #51]	@ 0x33
 801a440:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a442:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a444:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801a446:	683a      	ldr	r2, [r7, #0]
 801a448:	68b9      	ldr	r1, [r7, #8]
 801a44a:	6bb8      	ldr	r0, [r7, #56]	@ 0x38
 801a44c:	f000 f9a2 	bl	801a794 <prvCopyDataToQueue>
 801a450:	f997 3033 	ldrsb.w	r3, [r7, #51]	@ 0x33
 801a454:	f1b3 3fff 	cmp.w	r3, #4294967295
 801a458:	d112      	bne.n	801a480 <xQueueGenericSendFromISR+0x10c>
 801a45a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a45c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801a45e:	2b00      	cmp	r3, #0
 801a460:	d016      	beq.n	801a490 <xQueueGenericSendFromISR+0x11c>
 801a462:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a464:	3324      	adds	r3, #36	@ 0x24
 801a466:	4618      	mov	r0, r3
 801a468:	f001 f86c 	bl	801b544 <xTaskRemoveFromEventList>
 801a46c:	4603      	mov	r3, r0
 801a46e:	2b00      	cmp	r3, #0
 801a470:	d00e      	beq.n	801a490 <xQueueGenericSendFromISR+0x11c>
 801a472:	687b      	ldr	r3, [r7, #4]
 801a474:	2b00      	cmp	r3, #0
 801a476:	d00b      	beq.n	801a490 <xQueueGenericSendFromISR+0x11c>
 801a478:	687b      	ldr	r3, [r7, #4]
 801a47a:	2201      	movs	r2, #1
 801a47c:	601a      	str	r2, [r3, #0]
 801a47e:	e007      	b.n	801a490 <xQueueGenericSendFromISR+0x11c>
 801a480:	f897 3033 	ldrb.w	r3, [r7, #51]	@ 0x33
 801a484:	3301      	adds	r3, #1
 801a486:	b2db      	uxtb	r3, r3
 801a488:	b25a      	sxtb	r2, r3
 801a48a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801a48c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801a490:	2301      	movs	r3, #1
 801a492:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801a494:	e001      	b.n	801a49a <xQueueGenericSendFromISR+0x126>
 801a496:	2300      	movs	r3, #0
 801a498:	63fb      	str	r3, [r7, #60]	@ 0x3c
 801a49a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801a49c:	617b      	str	r3, [r7, #20]
 801a49e:	697b      	ldr	r3, [r7, #20]
 801a4a0:	f383 8811 	msr	BASEPRI, r3
 801a4a4:	bf00      	nop
 801a4a6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 801a4a8:	4618      	mov	r0, r3
 801a4aa:	3740      	adds	r7, #64	@ 0x40
 801a4ac:	46bd      	mov	sp, r7
 801a4ae:	bd80      	pop	{r7, pc}

0801a4b0 <xQueueGiveFromISR>:
 801a4b0:	b580      	push	{r7, lr}
 801a4b2:	b08e      	sub	sp, #56	@ 0x38
 801a4b4:	af00      	add	r7, sp, #0
 801a4b6:	6078      	str	r0, [r7, #4]
 801a4b8:	6039      	str	r1, [r7, #0]
 801a4ba:	687b      	ldr	r3, [r7, #4]
 801a4bc:	633b      	str	r3, [r7, #48]	@ 0x30
 801a4be:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a4c0:	2b00      	cmp	r3, #0
 801a4c2:	d10b      	bne.n	801a4dc <xQueueGiveFromISR+0x2c>
 801a4c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a4c8:	f383 8811 	msr	BASEPRI, r3
 801a4cc:	f3bf 8f6f 	isb	sy
 801a4d0:	f3bf 8f4f 	dsb	sy
 801a4d4:	623b      	str	r3, [r7, #32]
 801a4d6:	bf00      	nop
 801a4d8:	bf00      	nop
 801a4da:	e7fd      	b.n	801a4d8 <xQueueGiveFromISR+0x28>
 801a4dc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a4de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a4e0:	2b00      	cmp	r3, #0
 801a4e2:	d00b      	beq.n	801a4fc <xQueueGiveFromISR+0x4c>
 801a4e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a4e8:	f383 8811 	msr	BASEPRI, r3
 801a4ec:	f3bf 8f6f 	isb	sy
 801a4f0:	f3bf 8f4f 	dsb	sy
 801a4f4:	61fb      	str	r3, [r7, #28]
 801a4f6:	bf00      	nop
 801a4f8:	bf00      	nop
 801a4fa:	e7fd      	b.n	801a4f8 <xQueueGiveFromISR+0x48>
 801a4fc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a4fe:	681b      	ldr	r3, [r3, #0]
 801a500:	2b00      	cmp	r3, #0
 801a502:	d103      	bne.n	801a50c <xQueueGiveFromISR+0x5c>
 801a504:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a506:	689b      	ldr	r3, [r3, #8]
 801a508:	2b00      	cmp	r3, #0
 801a50a:	d101      	bne.n	801a510 <xQueueGiveFromISR+0x60>
 801a50c:	2301      	movs	r3, #1
 801a50e:	e000      	b.n	801a512 <xQueueGiveFromISR+0x62>
 801a510:	2300      	movs	r3, #0
 801a512:	2b00      	cmp	r3, #0
 801a514:	d10b      	bne.n	801a52e <xQueueGiveFromISR+0x7e>
 801a516:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a51a:	f383 8811 	msr	BASEPRI, r3
 801a51e:	f3bf 8f6f 	isb	sy
 801a522:	f3bf 8f4f 	dsb	sy
 801a526:	61bb      	str	r3, [r7, #24]
 801a528:	bf00      	nop
 801a52a:	bf00      	nop
 801a52c:	e7fd      	b.n	801a52a <xQueueGiveFromISR+0x7a>
 801a52e:	f002 f9ab 	bl	801c888 <vPortValidateInterruptPriority>
 801a532:	f3ef 8211 	mrs	r2, BASEPRI
 801a536:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a53a:	f383 8811 	msr	BASEPRI, r3
 801a53e:	f3bf 8f6f 	isb	sy
 801a542:	f3bf 8f4f 	dsb	sy
 801a546:	617a      	str	r2, [r7, #20]
 801a548:	613b      	str	r3, [r7, #16]
 801a54a:	697b      	ldr	r3, [r7, #20]
 801a54c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801a54e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a550:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a552:	62bb      	str	r3, [r7, #40]	@ 0x28
 801a554:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a556:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a558:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 801a55a:	429a      	cmp	r2, r3
 801a55c:	d22b      	bcs.n	801a5b6 <xQueueGiveFromISR+0x106>
 801a55e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a560:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801a564:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 801a568:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a56a:	1c5a      	adds	r2, r3, #1
 801a56c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a56e:	639a      	str	r2, [r3, #56]	@ 0x38
 801a570:	f997 3027 	ldrsb.w	r3, [r7, #39]	@ 0x27
 801a574:	f1b3 3fff 	cmp.w	r3, #4294967295
 801a578:	d112      	bne.n	801a5a0 <xQueueGiveFromISR+0xf0>
 801a57a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a57c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801a57e:	2b00      	cmp	r3, #0
 801a580:	d016      	beq.n	801a5b0 <xQueueGiveFromISR+0x100>
 801a582:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a584:	3324      	adds	r3, #36	@ 0x24
 801a586:	4618      	mov	r0, r3
 801a588:	f000 ffdc 	bl	801b544 <xTaskRemoveFromEventList>
 801a58c:	4603      	mov	r3, r0
 801a58e:	2b00      	cmp	r3, #0
 801a590:	d00e      	beq.n	801a5b0 <xQueueGiveFromISR+0x100>
 801a592:	683b      	ldr	r3, [r7, #0]
 801a594:	2b00      	cmp	r3, #0
 801a596:	d00b      	beq.n	801a5b0 <xQueueGiveFromISR+0x100>
 801a598:	683b      	ldr	r3, [r7, #0]
 801a59a:	2201      	movs	r2, #1
 801a59c:	601a      	str	r2, [r3, #0]
 801a59e:	e007      	b.n	801a5b0 <xQueueGiveFromISR+0x100>
 801a5a0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 801a5a4:	3301      	adds	r3, #1
 801a5a6:	b2db      	uxtb	r3, r3
 801a5a8:	b25a      	sxtb	r2, r3
 801a5aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801a5ac:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801a5b0:	2301      	movs	r3, #1
 801a5b2:	637b      	str	r3, [r7, #52]	@ 0x34
 801a5b4:	e001      	b.n	801a5ba <xQueueGiveFromISR+0x10a>
 801a5b6:	2300      	movs	r3, #0
 801a5b8:	637b      	str	r3, [r7, #52]	@ 0x34
 801a5ba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a5bc:	60fb      	str	r3, [r7, #12]
 801a5be:	68fb      	ldr	r3, [r7, #12]
 801a5c0:	f383 8811 	msr	BASEPRI, r3
 801a5c4:	bf00      	nop
 801a5c6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801a5c8:	4618      	mov	r0, r3
 801a5ca:	3738      	adds	r7, #56	@ 0x38
 801a5cc:	46bd      	mov	sp, r7
 801a5ce:	bd80      	pop	{r7, pc}

0801a5d0 <xQueueReceive>:
 801a5d0:	b580      	push	{r7, lr}
 801a5d2:	b08c      	sub	sp, #48	@ 0x30
 801a5d4:	af00      	add	r7, sp, #0
 801a5d6:	60f8      	str	r0, [r7, #12]
 801a5d8:	60b9      	str	r1, [r7, #8]
 801a5da:	607a      	str	r2, [r7, #4]
 801a5dc:	2300      	movs	r3, #0
 801a5de:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801a5e0:	68fb      	ldr	r3, [r7, #12]
 801a5e2:	62bb      	str	r3, [r7, #40]	@ 0x28
 801a5e4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a5e6:	2b00      	cmp	r3, #0
 801a5e8:	d10b      	bne.n	801a602 <xQueueReceive+0x32>
 801a5ea:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a5ee:	f383 8811 	msr	BASEPRI, r3
 801a5f2:	f3bf 8f6f 	isb	sy
 801a5f6:	f3bf 8f4f 	dsb	sy
 801a5fa:	623b      	str	r3, [r7, #32]
 801a5fc:	bf00      	nop
 801a5fe:	bf00      	nop
 801a600:	e7fd      	b.n	801a5fe <xQueueReceive+0x2e>
 801a602:	68bb      	ldr	r3, [r7, #8]
 801a604:	2b00      	cmp	r3, #0
 801a606:	d103      	bne.n	801a610 <xQueueReceive+0x40>
 801a608:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a60a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a60c:	2b00      	cmp	r3, #0
 801a60e:	d101      	bne.n	801a614 <xQueueReceive+0x44>
 801a610:	2301      	movs	r3, #1
 801a612:	e000      	b.n	801a616 <xQueueReceive+0x46>
 801a614:	2300      	movs	r3, #0
 801a616:	2b00      	cmp	r3, #0
 801a618:	d10b      	bne.n	801a632 <xQueueReceive+0x62>
 801a61a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a61e:	f383 8811 	msr	BASEPRI, r3
 801a622:	f3bf 8f6f 	isb	sy
 801a626:	f3bf 8f4f 	dsb	sy
 801a62a:	61fb      	str	r3, [r7, #28]
 801a62c:	bf00      	nop
 801a62e:	bf00      	nop
 801a630:	e7fd      	b.n	801a62e <xQueueReceive+0x5e>
 801a632:	f001 f9b1 	bl	801b998 <xTaskGetSchedulerState>
 801a636:	4603      	mov	r3, r0
 801a638:	2b00      	cmp	r3, #0
 801a63a:	d102      	bne.n	801a642 <xQueueReceive+0x72>
 801a63c:	687b      	ldr	r3, [r7, #4]
 801a63e:	2b00      	cmp	r3, #0
 801a640:	d101      	bne.n	801a646 <xQueueReceive+0x76>
 801a642:	2301      	movs	r3, #1
 801a644:	e000      	b.n	801a648 <xQueueReceive+0x78>
 801a646:	2300      	movs	r3, #0
 801a648:	2b00      	cmp	r3, #0
 801a64a:	d10b      	bne.n	801a664 <xQueueReceive+0x94>
 801a64c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801a650:	f383 8811 	msr	BASEPRI, r3
 801a654:	f3bf 8f6f 	isb	sy
 801a658:	f3bf 8f4f 	dsb	sy
 801a65c:	61bb      	str	r3, [r7, #24]
 801a65e:	bf00      	nop
 801a660:	bf00      	nop
 801a662:	e7fd      	b.n	801a660 <xQueueReceive+0x90>
 801a664:	f002 f830 	bl	801c6c8 <vPortEnterCritical>
 801a668:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a66a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a66c:	627b      	str	r3, [r7, #36]	@ 0x24
 801a66e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801a670:	2b00      	cmp	r3, #0
 801a672:	d01f      	beq.n	801a6b4 <xQueueReceive+0xe4>
 801a674:	68b9      	ldr	r1, [r7, #8]
 801a676:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801a678:	f000 f8f6 	bl	801a868 <prvCopyDataFromQueue>
 801a67c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801a67e:	1e5a      	subs	r2, r3, #1
 801a680:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a682:	639a      	str	r2, [r3, #56]	@ 0x38
 801a684:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a686:	691b      	ldr	r3, [r3, #16]
 801a688:	2b00      	cmp	r3, #0
 801a68a:	d00f      	beq.n	801a6ac <xQueueReceive+0xdc>
 801a68c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a68e:	3310      	adds	r3, #16
 801a690:	4618      	mov	r0, r3
 801a692:	f000 ff57 	bl	801b544 <xTaskRemoveFromEventList>
 801a696:	4603      	mov	r3, r0
 801a698:	2b00      	cmp	r3, #0
 801a69a:	d007      	beq.n	801a6ac <xQueueReceive+0xdc>
 801a69c:	4b3c      	ldr	r3, [pc, #240]	@ (801a790 <xQueueReceive+0x1c0>)
 801a69e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801a6a2:	601a      	str	r2, [r3, #0]
 801a6a4:	f3bf 8f4f 	dsb	sy
 801a6a8:	f3bf 8f6f 	isb	sy
 801a6ac:	f002 f83e 	bl	801c72c <vPortExitCritical>
 801a6b0:	2301      	movs	r3, #1
 801a6b2:	e069      	b.n	801a788 <xQueueReceive+0x1b8>
 801a6b4:	687b      	ldr	r3, [r7, #4]
 801a6b6:	2b00      	cmp	r3, #0
 801a6b8:	d103      	bne.n	801a6c2 <xQueueReceive+0xf2>
 801a6ba:	f002 f837 	bl	801c72c <vPortExitCritical>
 801a6be:	2300      	movs	r3, #0
 801a6c0:	e062      	b.n	801a788 <xQueueReceive+0x1b8>
 801a6c2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801a6c4:	2b00      	cmp	r3, #0
 801a6c6:	d106      	bne.n	801a6d6 <xQueueReceive+0x106>
 801a6c8:	f107 0310 	add.w	r3, r7, #16
 801a6cc:	4618      	mov	r0, r3
 801a6ce:	f001 f801 	bl	801b6d4 <vTaskInternalSetTimeOutState>
 801a6d2:	2301      	movs	r3, #1
 801a6d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801a6d6:	f002 f829 	bl	801c72c <vPortExitCritical>
 801a6da:	f000 fcdb 	bl	801b094 <vTaskSuspendAll>
 801a6de:	f001 fff3 	bl	801c6c8 <vPortEnterCritical>
 801a6e2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a6e4:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 801a6e8:	b25b      	sxtb	r3, r3
 801a6ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 801a6ee:	d103      	bne.n	801a6f8 <xQueueReceive+0x128>
 801a6f0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a6f2:	2200      	movs	r2, #0
 801a6f4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801a6f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a6fa:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801a6fe:	b25b      	sxtb	r3, r3
 801a700:	f1b3 3fff 	cmp.w	r3, #4294967295
 801a704:	d103      	bne.n	801a70e <xQueueReceive+0x13e>
 801a706:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a708:	2200      	movs	r2, #0
 801a70a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801a70e:	f002 f80d 	bl	801c72c <vPortExitCritical>
 801a712:	1d3a      	adds	r2, r7, #4
 801a714:	f107 0310 	add.w	r3, r7, #16
 801a718:	4611      	mov	r1, r2
 801a71a:	4618      	mov	r0, r3
 801a71c:	f000 fff0 	bl	801b700 <xTaskCheckForTimeOut>
 801a720:	4603      	mov	r3, r0
 801a722:	2b00      	cmp	r3, #0
 801a724:	d123      	bne.n	801a76e <xQueueReceive+0x19e>
 801a726:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801a728:	f000 f916 	bl	801a958 <prvIsQueueEmpty>
 801a72c:	4603      	mov	r3, r0
 801a72e:	2b00      	cmp	r3, #0
 801a730:	d017      	beq.n	801a762 <xQueueReceive+0x192>
 801a732:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801a734:	3324      	adds	r3, #36	@ 0x24
 801a736:	687a      	ldr	r2, [r7, #4]
 801a738:	4611      	mov	r1, r2
 801a73a:	4618      	mov	r0, r3
 801a73c:	f000 feb0 	bl	801b4a0 <vTaskPlaceOnEventList>
 801a740:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801a742:	f000 f8b7 	bl	801a8b4 <prvUnlockQueue>
 801a746:	f000 fcb3 	bl	801b0b0 <xTaskResumeAll>
 801a74a:	4603      	mov	r3, r0
 801a74c:	2b00      	cmp	r3, #0
 801a74e:	d189      	bne.n	801a664 <xQueueReceive+0x94>
 801a750:	4b0f      	ldr	r3, [pc, #60]	@ (801a790 <xQueueReceive+0x1c0>)
 801a752:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801a756:	601a      	str	r2, [r3, #0]
 801a758:	f3bf 8f4f 	dsb	sy
 801a75c:	f3bf 8f6f 	isb	sy
 801a760:	e780      	b.n	801a664 <xQueueReceive+0x94>
 801a762:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801a764:	f000 f8a6 	bl	801a8b4 <prvUnlockQueue>
 801a768:	f000 fca2 	bl	801b0b0 <xTaskResumeAll>
 801a76c:	e77a      	b.n	801a664 <xQueueReceive+0x94>
 801a76e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801a770:	f000 f8a0 	bl	801a8b4 <prvUnlockQueue>
 801a774:	f000 fc9c 	bl	801b0b0 <xTaskResumeAll>
 801a778:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801a77a:	f000 f8ed 	bl	801a958 <prvIsQueueEmpty>
 801a77e:	4603      	mov	r3, r0
 801a780:	2b00      	cmp	r3, #0
 801a782:	f43f af6f 	beq.w	801a664 <xQueueReceive+0x94>
 801a786:	2300      	movs	r3, #0
 801a788:	4618      	mov	r0, r3
 801a78a:	3730      	adds	r7, #48	@ 0x30
 801a78c:	46bd      	mov	sp, r7
 801a78e:	bd80      	pop	{r7, pc}
 801a790:	e000ed04 	.word	0xe000ed04

0801a794 <prvCopyDataToQueue>:
 801a794:	b580      	push	{r7, lr}
 801a796:	b086      	sub	sp, #24
 801a798:	af00      	add	r7, sp, #0
 801a79a:	60f8      	str	r0, [r7, #12]
 801a79c:	60b9      	str	r1, [r7, #8]
 801a79e:	607a      	str	r2, [r7, #4]
 801a7a0:	2300      	movs	r3, #0
 801a7a2:	617b      	str	r3, [r7, #20]
 801a7a4:	68fb      	ldr	r3, [r7, #12]
 801a7a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a7a8:	613b      	str	r3, [r7, #16]
 801a7aa:	68fb      	ldr	r3, [r7, #12]
 801a7ac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a7ae:	2b00      	cmp	r3, #0
 801a7b0:	d10d      	bne.n	801a7ce <prvCopyDataToQueue+0x3a>
 801a7b2:	68fb      	ldr	r3, [r7, #12]
 801a7b4:	681b      	ldr	r3, [r3, #0]
 801a7b6:	2b00      	cmp	r3, #0
 801a7b8:	d14d      	bne.n	801a856 <prvCopyDataToQueue+0xc2>
 801a7ba:	68fb      	ldr	r3, [r7, #12]
 801a7bc:	689b      	ldr	r3, [r3, #8]
 801a7be:	4618      	mov	r0, r3
 801a7c0:	f001 f908 	bl	801b9d4 <xTaskPriorityDisinherit>
 801a7c4:	6178      	str	r0, [r7, #20]
 801a7c6:	68fb      	ldr	r3, [r7, #12]
 801a7c8:	2200      	movs	r2, #0
 801a7ca:	609a      	str	r2, [r3, #8]
 801a7cc:	e043      	b.n	801a856 <prvCopyDataToQueue+0xc2>
 801a7ce:	687b      	ldr	r3, [r7, #4]
 801a7d0:	2b00      	cmp	r3, #0
 801a7d2:	d119      	bne.n	801a808 <prvCopyDataToQueue+0x74>
 801a7d4:	68fb      	ldr	r3, [r7, #12]
 801a7d6:	6858      	ldr	r0, [r3, #4]
 801a7d8:	68fb      	ldr	r3, [r7, #12]
 801a7da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a7dc:	461a      	mov	r2, r3
 801a7de:	68b9      	ldr	r1, [r7, #8]
 801a7e0:	f003 f9a0 	bl	801db24 <memcpy>
 801a7e4:	68fb      	ldr	r3, [r7, #12]
 801a7e6:	685a      	ldr	r2, [r3, #4]
 801a7e8:	68fb      	ldr	r3, [r7, #12]
 801a7ea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a7ec:	441a      	add	r2, r3
 801a7ee:	68fb      	ldr	r3, [r7, #12]
 801a7f0:	605a      	str	r2, [r3, #4]
 801a7f2:	68fb      	ldr	r3, [r7, #12]
 801a7f4:	685a      	ldr	r2, [r3, #4]
 801a7f6:	68fb      	ldr	r3, [r7, #12]
 801a7f8:	689b      	ldr	r3, [r3, #8]
 801a7fa:	429a      	cmp	r2, r3
 801a7fc:	d32b      	bcc.n	801a856 <prvCopyDataToQueue+0xc2>
 801a7fe:	68fb      	ldr	r3, [r7, #12]
 801a800:	681a      	ldr	r2, [r3, #0]
 801a802:	68fb      	ldr	r3, [r7, #12]
 801a804:	605a      	str	r2, [r3, #4]
 801a806:	e026      	b.n	801a856 <prvCopyDataToQueue+0xc2>
 801a808:	68fb      	ldr	r3, [r7, #12]
 801a80a:	68d8      	ldr	r0, [r3, #12]
 801a80c:	68fb      	ldr	r3, [r7, #12]
 801a80e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a810:	461a      	mov	r2, r3
 801a812:	68b9      	ldr	r1, [r7, #8]
 801a814:	f003 f986 	bl	801db24 <memcpy>
 801a818:	68fb      	ldr	r3, [r7, #12]
 801a81a:	68da      	ldr	r2, [r3, #12]
 801a81c:	68fb      	ldr	r3, [r7, #12]
 801a81e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a820:	425b      	negs	r3, r3
 801a822:	441a      	add	r2, r3
 801a824:	68fb      	ldr	r3, [r7, #12]
 801a826:	60da      	str	r2, [r3, #12]
 801a828:	68fb      	ldr	r3, [r7, #12]
 801a82a:	68da      	ldr	r2, [r3, #12]
 801a82c:	68fb      	ldr	r3, [r7, #12]
 801a82e:	681b      	ldr	r3, [r3, #0]
 801a830:	429a      	cmp	r2, r3
 801a832:	d207      	bcs.n	801a844 <prvCopyDataToQueue+0xb0>
 801a834:	68fb      	ldr	r3, [r7, #12]
 801a836:	689a      	ldr	r2, [r3, #8]
 801a838:	68fb      	ldr	r3, [r7, #12]
 801a83a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a83c:	425b      	negs	r3, r3
 801a83e:	441a      	add	r2, r3
 801a840:	68fb      	ldr	r3, [r7, #12]
 801a842:	60da      	str	r2, [r3, #12]
 801a844:	687b      	ldr	r3, [r7, #4]
 801a846:	2b02      	cmp	r3, #2
 801a848:	d105      	bne.n	801a856 <prvCopyDataToQueue+0xc2>
 801a84a:	693b      	ldr	r3, [r7, #16]
 801a84c:	2b00      	cmp	r3, #0
 801a84e:	d002      	beq.n	801a856 <prvCopyDataToQueue+0xc2>
 801a850:	693b      	ldr	r3, [r7, #16]
 801a852:	3b01      	subs	r3, #1
 801a854:	613b      	str	r3, [r7, #16]
 801a856:	693b      	ldr	r3, [r7, #16]
 801a858:	1c5a      	adds	r2, r3, #1
 801a85a:	68fb      	ldr	r3, [r7, #12]
 801a85c:	639a      	str	r2, [r3, #56]	@ 0x38
 801a85e:	697b      	ldr	r3, [r7, #20]
 801a860:	4618      	mov	r0, r3
 801a862:	3718      	adds	r7, #24
 801a864:	46bd      	mov	sp, r7
 801a866:	bd80      	pop	{r7, pc}

0801a868 <prvCopyDataFromQueue>:
 801a868:	b580      	push	{r7, lr}
 801a86a:	b082      	sub	sp, #8
 801a86c:	af00      	add	r7, sp, #0
 801a86e:	6078      	str	r0, [r7, #4]
 801a870:	6039      	str	r1, [r7, #0]
 801a872:	687b      	ldr	r3, [r7, #4]
 801a874:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a876:	2b00      	cmp	r3, #0
 801a878:	d018      	beq.n	801a8ac <prvCopyDataFromQueue+0x44>
 801a87a:	687b      	ldr	r3, [r7, #4]
 801a87c:	68da      	ldr	r2, [r3, #12]
 801a87e:	687b      	ldr	r3, [r7, #4]
 801a880:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a882:	441a      	add	r2, r3
 801a884:	687b      	ldr	r3, [r7, #4]
 801a886:	60da      	str	r2, [r3, #12]
 801a888:	687b      	ldr	r3, [r7, #4]
 801a88a:	68da      	ldr	r2, [r3, #12]
 801a88c:	687b      	ldr	r3, [r7, #4]
 801a88e:	689b      	ldr	r3, [r3, #8]
 801a890:	429a      	cmp	r2, r3
 801a892:	d303      	bcc.n	801a89c <prvCopyDataFromQueue+0x34>
 801a894:	687b      	ldr	r3, [r7, #4]
 801a896:	681a      	ldr	r2, [r3, #0]
 801a898:	687b      	ldr	r3, [r7, #4]
 801a89a:	60da      	str	r2, [r3, #12]
 801a89c:	687b      	ldr	r3, [r7, #4]
 801a89e:	68d9      	ldr	r1, [r3, #12]
 801a8a0:	687b      	ldr	r3, [r7, #4]
 801a8a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801a8a4:	461a      	mov	r2, r3
 801a8a6:	6838      	ldr	r0, [r7, #0]
 801a8a8:	f003 f93c 	bl	801db24 <memcpy>
 801a8ac:	bf00      	nop
 801a8ae:	3708      	adds	r7, #8
 801a8b0:	46bd      	mov	sp, r7
 801a8b2:	bd80      	pop	{r7, pc}

0801a8b4 <prvUnlockQueue>:
 801a8b4:	b580      	push	{r7, lr}
 801a8b6:	b084      	sub	sp, #16
 801a8b8:	af00      	add	r7, sp, #0
 801a8ba:	6078      	str	r0, [r7, #4]
 801a8bc:	f001 ff04 	bl	801c6c8 <vPortEnterCritical>
 801a8c0:	687b      	ldr	r3, [r7, #4]
 801a8c2:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801a8c6:	73fb      	strb	r3, [r7, #15]
 801a8c8:	e011      	b.n	801a8ee <prvUnlockQueue+0x3a>
 801a8ca:	687b      	ldr	r3, [r7, #4]
 801a8cc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801a8ce:	2b00      	cmp	r3, #0
 801a8d0:	d012      	beq.n	801a8f8 <prvUnlockQueue+0x44>
 801a8d2:	687b      	ldr	r3, [r7, #4]
 801a8d4:	3324      	adds	r3, #36	@ 0x24
 801a8d6:	4618      	mov	r0, r3
 801a8d8:	f000 fe34 	bl	801b544 <xTaskRemoveFromEventList>
 801a8dc:	4603      	mov	r3, r0
 801a8de:	2b00      	cmp	r3, #0
 801a8e0:	d001      	beq.n	801a8e6 <prvUnlockQueue+0x32>
 801a8e2:	f000 ff71 	bl	801b7c8 <vTaskMissedYield>
 801a8e6:	7bfb      	ldrb	r3, [r7, #15]
 801a8e8:	3b01      	subs	r3, #1
 801a8ea:	b2db      	uxtb	r3, r3
 801a8ec:	73fb      	strb	r3, [r7, #15]
 801a8ee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801a8f2:	2b00      	cmp	r3, #0
 801a8f4:	dce9      	bgt.n	801a8ca <prvUnlockQueue+0x16>
 801a8f6:	e000      	b.n	801a8fa <prvUnlockQueue+0x46>
 801a8f8:	bf00      	nop
 801a8fa:	687b      	ldr	r3, [r7, #4]
 801a8fc:	22ff      	movs	r2, #255	@ 0xff
 801a8fe:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801a902:	f001 ff13 	bl	801c72c <vPortExitCritical>
 801a906:	f001 fedf 	bl	801c6c8 <vPortEnterCritical>
 801a90a:	687b      	ldr	r3, [r7, #4]
 801a90c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 801a910:	73bb      	strb	r3, [r7, #14]
 801a912:	e011      	b.n	801a938 <prvUnlockQueue+0x84>
 801a914:	687b      	ldr	r3, [r7, #4]
 801a916:	691b      	ldr	r3, [r3, #16]
 801a918:	2b00      	cmp	r3, #0
 801a91a:	d012      	beq.n	801a942 <prvUnlockQueue+0x8e>
 801a91c:	687b      	ldr	r3, [r7, #4]
 801a91e:	3310      	adds	r3, #16
 801a920:	4618      	mov	r0, r3
 801a922:	f000 fe0f 	bl	801b544 <xTaskRemoveFromEventList>
 801a926:	4603      	mov	r3, r0
 801a928:	2b00      	cmp	r3, #0
 801a92a:	d001      	beq.n	801a930 <prvUnlockQueue+0x7c>
 801a92c:	f000 ff4c 	bl	801b7c8 <vTaskMissedYield>
 801a930:	7bbb      	ldrb	r3, [r7, #14]
 801a932:	3b01      	subs	r3, #1
 801a934:	b2db      	uxtb	r3, r3
 801a936:	73bb      	strb	r3, [r7, #14]
 801a938:	f997 300e 	ldrsb.w	r3, [r7, #14]
 801a93c:	2b00      	cmp	r3, #0
 801a93e:	dce9      	bgt.n	801a914 <prvUnlockQueue+0x60>
 801a940:	e000      	b.n	801a944 <prvUnlockQueue+0x90>
 801a942:	bf00      	nop
 801a944:	687b      	ldr	r3, [r7, #4]
 801a946:	22ff      	movs	r2, #255	@ 0xff
 801a948:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801a94c:	f001 feee 	bl	801c72c <vPortExitCritical>
 801a950:	bf00      	nop
 801a952:	3710      	adds	r7, #16
 801a954:	46bd      	mov	sp, r7
 801a956:	bd80      	pop	{r7, pc}

0801a958 <prvIsQueueEmpty>:
 801a958:	b580      	push	{r7, lr}
 801a95a:	b084      	sub	sp, #16
 801a95c:	af00      	add	r7, sp, #0
 801a95e:	6078      	str	r0, [r7, #4]
 801a960:	f001 feb2 	bl	801c6c8 <vPortEnterCritical>
 801a964:	687b      	ldr	r3, [r7, #4]
 801a966:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a968:	2b00      	cmp	r3, #0
 801a96a:	d102      	bne.n	801a972 <prvIsQueueEmpty+0x1a>
 801a96c:	2301      	movs	r3, #1
 801a96e:	60fb      	str	r3, [r7, #12]
 801a970:	e001      	b.n	801a976 <prvIsQueueEmpty+0x1e>
 801a972:	2300      	movs	r3, #0
 801a974:	60fb      	str	r3, [r7, #12]
 801a976:	f001 fed9 	bl	801c72c <vPortExitCritical>
 801a97a:	68fb      	ldr	r3, [r7, #12]
 801a97c:	4618      	mov	r0, r3
 801a97e:	3710      	adds	r7, #16
 801a980:	46bd      	mov	sp, r7
 801a982:	bd80      	pop	{r7, pc}

0801a984 <prvIsQueueFull>:
 801a984:	b580      	push	{r7, lr}
 801a986:	b084      	sub	sp, #16
 801a988:	af00      	add	r7, sp, #0
 801a98a:	6078      	str	r0, [r7, #4]
 801a98c:	f001 fe9c 	bl	801c6c8 <vPortEnterCritical>
 801a990:	687b      	ldr	r3, [r7, #4]
 801a992:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 801a994:	687b      	ldr	r3, [r7, #4]
 801a996:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801a998:	429a      	cmp	r2, r3
 801a99a:	d102      	bne.n	801a9a2 <prvIsQueueFull+0x1e>
 801a99c:	2301      	movs	r3, #1
 801a99e:	60fb      	str	r3, [r7, #12]
 801a9a0:	e001      	b.n	801a9a6 <prvIsQueueFull+0x22>
 801a9a2:	2300      	movs	r3, #0
 801a9a4:	60fb      	str	r3, [r7, #12]
 801a9a6:	f001 fec1 	bl	801c72c <vPortExitCritical>
 801a9aa:	68fb      	ldr	r3, [r7, #12]
 801a9ac:	4618      	mov	r0, r3
 801a9ae:	3710      	adds	r7, #16
 801a9b0:	46bd      	mov	sp, r7
 801a9b2:	bd80      	pop	{r7, pc}

0801a9b4 <vQueueAddToRegistry>:
 801a9b4:	b480      	push	{r7}
 801a9b6:	b085      	sub	sp, #20
 801a9b8:	af00      	add	r7, sp, #0
 801a9ba:	6078      	str	r0, [r7, #4]
 801a9bc:	6039      	str	r1, [r7, #0]
 801a9be:	2300      	movs	r3, #0
 801a9c0:	60fb      	str	r3, [r7, #12]
 801a9c2:	e014      	b.n	801a9ee <vQueueAddToRegistry+0x3a>
 801a9c4:	4a0f      	ldr	r2, [pc, #60]	@ (801aa04 <vQueueAddToRegistry+0x50>)
 801a9c6:	68fb      	ldr	r3, [r7, #12]
 801a9c8:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 801a9cc:	2b00      	cmp	r3, #0
 801a9ce:	d10b      	bne.n	801a9e8 <vQueueAddToRegistry+0x34>
 801a9d0:	490c      	ldr	r1, [pc, #48]	@ (801aa04 <vQueueAddToRegistry+0x50>)
 801a9d2:	68fb      	ldr	r3, [r7, #12]
 801a9d4:	683a      	ldr	r2, [r7, #0]
 801a9d6:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 801a9da:	4a0a      	ldr	r2, [pc, #40]	@ (801aa04 <vQueueAddToRegistry+0x50>)
 801a9dc:	68fb      	ldr	r3, [r7, #12]
 801a9de:	00db      	lsls	r3, r3, #3
 801a9e0:	4413      	add	r3, r2
 801a9e2:	687a      	ldr	r2, [r7, #4]
 801a9e4:	605a      	str	r2, [r3, #4]
 801a9e6:	e006      	b.n	801a9f6 <vQueueAddToRegistry+0x42>
 801a9e8:	68fb      	ldr	r3, [r7, #12]
 801a9ea:	3301      	adds	r3, #1
 801a9ec:	60fb      	str	r3, [r7, #12]
 801a9ee:	68fb      	ldr	r3, [r7, #12]
 801a9f0:	2b07      	cmp	r3, #7
 801a9f2:	d9e7      	bls.n	801a9c4 <vQueueAddToRegistry+0x10>
 801a9f4:	bf00      	nop
 801a9f6:	bf00      	nop
 801a9f8:	3714      	adds	r7, #20
 801a9fa:	46bd      	mov	sp, r7
 801a9fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 801aa00:	4770      	bx	lr
 801aa02:	bf00      	nop
 801aa04:	20003ea4 	.word	0x20003ea4

0801aa08 <vQueueWaitForMessageRestricted>:
 801aa08:	b580      	push	{r7, lr}
 801aa0a:	b086      	sub	sp, #24
 801aa0c:	af00      	add	r7, sp, #0
 801aa0e:	60f8      	str	r0, [r7, #12]
 801aa10:	60b9      	str	r1, [r7, #8]
 801aa12:	607a      	str	r2, [r7, #4]
 801aa14:	68fb      	ldr	r3, [r7, #12]
 801aa16:	617b      	str	r3, [r7, #20]
 801aa18:	f001 fe56 	bl	801c6c8 <vPortEnterCritical>
 801aa1c:	697b      	ldr	r3, [r7, #20]
 801aa1e:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 801aa22:	b25b      	sxtb	r3, r3
 801aa24:	f1b3 3fff 	cmp.w	r3, #4294967295
 801aa28:	d103      	bne.n	801aa32 <vQueueWaitForMessageRestricted+0x2a>
 801aa2a:	697b      	ldr	r3, [r7, #20]
 801aa2c:	2200      	movs	r2, #0
 801aa2e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 801aa32:	697b      	ldr	r3, [r7, #20]
 801aa34:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 801aa38:	b25b      	sxtb	r3, r3
 801aa3a:	f1b3 3fff 	cmp.w	r3, #4294967295
 801aa3e:	d103      	bne.n	801aa48 <vQueueWaitForMessageRestricted+0x40>
 801aa40:	697b      	ldr	r3, [r7, #20]
 801aa42:	2200      	movs	r2, #0
 801aa44:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 801aa48:	f001 fe70 	bl	801c72c <vPortExitCritical>
 801aa4c:	697b      	ldr	r3, [r7, #20]
 801aa4e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801aa50:	2b00      	cmp	r3, #0
 801aa52:	d106      	bne.n	801aa62 <vQueueWaitForMessageRestricted+0x5a>
 801aa54:	697b      	ldr	r3, [r7, #20]
 801aa56:	3324      	adds	r3, #36	@ 0x24
 801aa58:	687a      	ldr	r2, [r7, #4]
 801aa5a:	68b9      	ldr	r1, [r7, #8]
 801aa5c:	4618      	mov	r0, r3
 801aa5e:	f000 fd45 	bl	801b4ec <vTaskPlaceOnEventListRestricted>
 801aa62:	6978      	ldr	r0, [r7, #20]
 801aa64:	f7ff ff26 	bl	801a8b4 <prvUnlockQueue>
 801aa68:	bf00      	nop
 801aa6a:	3718      	adds	r7, #24
 801aa6c:	46bd      	mov	sp, r7
 801aa6e:	bd80      	pop	{r7, pc}

0801aa70 <xTaskCreateStatic>:
 801aa70:	b580      	push	{r7, lr}
 801aa72:	b08e      	sub	sp, #56	@ 0x38
 801aa74:	af04      	add	r7, sp, #16
 801aa76:	60f8      	str	r0, [r7, #12]
 801aa78:	60b9      	str	r1, [r7, #8]
 801aa7a:	607a      	str	r2, [r7, #4]
 801aa7c:	603b      	str	r3, [r7, #0]
 801aa7e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801aa80:	2b00      	cmp	r3, #0
 801aa82:	d10b      	bne.n	801aa9c <xTaskCreateStatic+0x2c>
 801aa84:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801aa88:	f383 8811 	msr	BASEPRI, r3
 801aa8c:	f3bf 8f6f 	isb	sy
 801aa90:	f3bf 8f4f 	dsb	sy
 801aa94:	623b      	str	r3, [r7, #32]
 801aa96:	bf00      	nop
 801aa98:	bf00      	nop
 801aa9a:	e7fd      	b.n	801aa98 <xTaskCreateStatic+0x28>
 801aa9c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801aa9e:	2b00      	cmp	r3, #0
 801aaa0:	d10b      	bne.n	801aaba <xTaskCreateStatic+0x4a>
 801aaa2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801aaa6:	f383 8811 	msr	BASEPRI, r3
 801aaaa:	f3bf 8f6f 	isb	sy
 801aaae:	f3bf 8f4f 	dsb	sy
 801aab2:	61fb      	str	r3, [r7, #28]
 801aab4:	bf00      	nop
 801aab6:	bf00      	nop
 801aab8:	e7fd      	b.n	801aab6 <xTaskCreateStatic+0x46>
 801aaba:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 801aabe:	613b      	str	r3, [r7, #16]
 801aac0:	693b      	ldr	r3, [r7, #16]
 801aac2:	f5b3 7fc0 	cmp.w	r3, #384	@ 0x180
 801aac6:	d00b      	beq.n	801aae0 <xTaskCreateStatic+0x70>
 801aac8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801aacc:	f383 8811 	msr	BASEPRI, r3
 801aad0:	f3bf 8f6f 	isb	sy
 801aad4:	f3bf 8f4f 	dsb	sy
 801aad8:	61bb      	str	r3, [r7, #24]
 801aada:	bf00      	nop
 801aadc:	bf00      	nop
 801aade:	e7fd      	b.n	801aadc <xTaskCreateStatic+0x6c>
 801aae0:	693b      	ldr	r3, [r7, #16]
 801aae2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801aae4:	2b00      	cmp	r3, #0
 801aae6:	d01e      	beq.n	801ab26 <xTaskCreateStatic+0xb6>
 801aae8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 801aaea:	2b00      	cmp	r3, #0
 801aaec:	d01b      	beq.n	801ab26 <xTaskCreateStatic+0xb6>
 801aaee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 801aaf0:	627b      	str	r3, [r7, #36]	@ 0x24
 801aaf2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801aaf4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 801aaf6:	631a      	str	r2, [r3, #48]	@ 0x30
 801aaf8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801aafa:	2202      	movs	r2, #2
 801aafc:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 801ab00:	2300      	movs	r3, #0
 801ab02:	9303      	str	r3, [sp, #12]
 801ab04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ab06:	9302      	str	r3, [sp, #8]
 801ab08:	f107 0314 	add.w	r3, r7, #20
 801ab0c:	9301      	str	r3, [sp, #4]
 801ab0e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ab10:	9300      	str	r3, [sp, #0]
 801ab12:	683b      	ldr	r3, [r7, #0]
 801ab14:	687a      	ldr	r2, [r7, #4]
 801ab16:	68b9      	ldr	r1, [r7, #8]
 801ab18:	68f8      	ldr	r0, [r7, #12]
 801ab1a:	f000 f851 	bl	801abc0 <prvInitialiseNewTask>
 801ab1e:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 801ab20:	f000 f922 	bl	801ad68 <prvAddNewTaskToReadyList>
 801ab24:	e001      	b.n	801ab2a <xTaskCreateStatic+0xba>
 801ab26:	2300      	movs	r3, #0
 801ab28:	617b      	str	r3, [r7, #20]
 801ab2a:	697b      	ldr	r3, [r7, #20]
 801ab2c:	4618      	mov	r0, r3
 801ab2e:	3728      	adds	r7, #40	@ 0x28
 801ab30:	46bd      	mov	sp, r7
 801ab32:	bd80      	pop	{r7, pc}

0801ab34 <xTaskCreate>:
 801ab34:	b580      	push	{r7, lr}
 801ab36:	b08c      	sub	sp, #48	@ 0x30
 801ab38:	af04      	add	r7, sp, #16
 801ab3a:	60f8      	str	r0, [r7, #12]
 801ab3c:	60b9      	str	r1, [r7, #8]
 801ab3e:	603b      	str	r3, [r7, #0]
 801ab40:	4613      	mov	r3, r2
 801ab42:	80fb      	strh	r3, [r7, #6]
 801ab44:	88fb      	ldrh	r3, [r7, #6]
 801ab46:	009b      	lsls	r3, r3, #2
 801ab48:	4618      	mov	r0, r3
 801ab4a:	f001 fedf 	bl	801c90c <pvPortMalloc>
 801ab4e:	6178      	str	r0, [r7, #20]
 801ab50:	697b      	ldr	r3, [r7, #20]
 801ab52:	2b00      	cmp	r3, #0
 801ab54:	d00f      	beq.n	801ab76 <xTaskCreate+0x42>
 801ab56:	f44f 70c0 	mov.w	r0, #384	@ 0x180
 801ab5a:	f001 fed7 	bl	801c90c <pvPortMalloc>
 801ab5e:	61f8      	str	r0, [r7, #28]
 801ab60:	69fb      	ldr	r3, [r7, #28]
 801ab62:	2b00      	cmp	r3, #0
 801ab64:	d003      	beq.n	801ab6e <xTaskCreate+0x3a>
 801ab66:	69fb      	ldr	r3, [r7, #28]
 801ab68:	697a      	ldr	r2, [r7, #20]
 801ab6a:	631a      	str	r2, [r3, #48]	@ 0x30
 801ab6c:	e005      	b.n	801ab7a <xTaskCreate+0x46>
 801ab6e:	6978      	ldr	r0, [r7, #20]
 801ab70:	f001 ff9a 	bl	801caa8 <vPortFree>
 801ab74:	e001      	b.n	801ab7a <xTaskCreate+0x46>
 801ab76:	2300      	movs	r3, #0
 801ab78:	61fb      	str	r3, [r7, #28]
 801ab7a:	69fb      	ldr	r3, [r7, #28]
 801ab7c:	2b00      	cmp	r3, #0
 801ab7e:	d017      	beq.n	801abb0 <xTaskCreate+0x7c>
 801ab80:	69fb      	ldr	r3, [r7, #28]
 801ab82:	2200      	movs	r2, #0
 801ab84:	f883 217d 	strb.w	r2, [r3, #381]	@ 0x17d
 801ab88:	88fa      	ldrh	r2, [r7, #6]
 801ab8a:	2300      	movs	r3, #0
 801ab8c:	9303      	str	r3, [sp, #12]
 801ab8e:	69fb      	ldr	r3, [r7, #28]
 801ab90:	9302      	str	r3, [sp, #8]
 801ab92:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801ab94:	9301      	str	r3, [sp, #4]
 801ab96:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801ab98:	9300      	str	r3, [sp, #0]
 801ab9a:	683b      	ldr	r3, [r7, #0]
 801ab9c:	68b9      	ldr	r1, [r7, #8]
 801ab9e:	68f8      	ldr	r0, [r7, #12]
 801aba0:	f000 f80e 	bl	801abc0 <prvInitialiseNewTask>
 801aba4:	69f8      	ldr	r0, [r7, #28]
 801aba6:	f000 f8df 	bl	801ad68 <prvAddNewTaskToReadyList>
 801abaa:	2301      	movs	r3, #1
 801abac:	61bb      	str	r3, [r7, #24]
 801abae:	e002      	b.n	801abb6 <xTaskCreate+0x82>
 801abb0:	f04f 33ff 	mov.w	r3, #4294967295
 801abb4:	61bb      	str	r3, [r7, #24]
 801abb6:	69bb      	ldr	r3, [r7, #24]
 801abb8:	4618      	mov	r0, r3
 801abba:	3720      	adds	r7, #32
 801abbc:	46bd      	mov	sp, r7
 801abbe:	bd80      	pop	{r7, pc}

0801abc0 <prvInitialiseNewTask>:
 801abc0:	b580      	push	{r7, lr}
 801abc2:	b088      	sub	sp, #32
 801abc4:	af00      	add	r7, sp, #0
 801abc6:	60f8      	str	r0, [r7, #12]
 801abc8:	60b9      	str	r1, [r7, #8]
 801abca:	607a      	str	r2, [r7, #4]
 801abcc:	603b      	str	r3, [r7, #0]
 801abce:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801abd0:	6b18      	ldr	r0, [r3, #48]	@ 0x30
 801abd2:	687b      	ldr	r3, [r7, #4]
 801abd4:	009b      	lsls	r3, r3, #2
 801abd6:	461a      	mov	r2, r3
 801abd8:	21a5      	movs	r1, #165	@ 0xa5
 801abda:	f002 fefa 	bl	801d9d2 <memset>
 801abde:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801abe0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 801abe2:	687b      	ldr	r3, [r7, #4]
 801abe4:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801abe8:	3b01      	subs	r3, #1
 801abea:	009b      	lsls	r3, r3, #2
 801abec:	4413      	add	r3, r2
 801abee:	61bb      	str	r3, [r7, #24]
 801abf0:	69bb      	ldr	r3, [r7, #24]
 801abf2:	f023 0307 	bic.w	r3, r3, #7
 801abf6:	61bb      	str	r3, [r7, #24]
 801abf8:	69bb      	ldr	r3, [r7, #24]
 801abfa:	f003 0307 	and.w	r3, r3, #7
 801abfe:	2b00      	cmp	r3, #0
 801ac00:	d00b      	beq.n	801ac1a <prvInitialiseNewTask+0x5a>
 801ac02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801ac06:	f383 8811 	msr	BASEPRI, r3
 801ac0a:	f3bf 8f6f 	isb	sy
 801ac0e:	f3bf 8f4f 	dsb	sy
 801ac12:	617b      	str	r3, [r7, #20]
 801ac14:	bf00      	nop
 801ac16:	bf00      	nop
 801ac18:	e7fd      	b.n	801ac16 <prvInitialiseNewTask+0x56>
 801ac1a:	68bb      	ldr	r3, [r7, #8]
 801ac1c:	2b00      	cmp	r3, #0
 801ac1e:	d01f      	beq.n	801ac60 <prvInitialiseNewTask+0xa0>
 801ac20:	2300      	movs	r3, #0
 801ac22:	61fb      	str	r3, [r7, #28]
 801ac24:	e012      	b.n	801ac4c <prvInitialiseNewTask+0x8c>
 801ac26:	68ba      	ldr	r2, [r7, #8]
 801ac28:	69fb      	ldr	r3, [r7, #28]
 801ac2a:	4413      	add	r3, r2
 801ac2c:	7819      	ldrb	r1, [r3, #0]
 801ac2e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801ac30:	69fb      	ldr	r3, [r7, #28]
 801ac32:	4413      	add	r3, r2
 801ac34:	3334      	adds	r3, #52	@ 0x34
 801ac36:	460a      	mov	r2, r1
 801ac38:	701a      	strb	r2, [r3, #0]
 801ac3a:	68ba      	ldr	r2, [r7, #8]
 801ac3c:	69fb      	ldr	r3, [r7, #28]
 801ac3e:	4413      	add	r3, r2
 801ac40:	781b      	ldrb	r3, [r3, #0]
 801ac42:	2b00      	cmp	r3, #0
 801ac44:	d006      	beq.n	801ac54 <prvInitialiseNewTask+0x94>
 801ac46:	69fb      	ldr	r3, [r7, #28]
 801ac48:	3301      	adds	r3, #1
 801ac4a:	61fb      	str	r3, [r7, #28]
 801ac4c:	69fb      	ldr	r3, [r7, #28]
 801ac4e:	2b0f      	cmp	r3, #15
 801ac50:	d9e9      	bls.n	801ac26 <prvInitialiseNewTask+0x66>
 801ac52:	e000      	b.n	801ac56 <prvInitialiseNewTask+0x96>
 801ac54:	bf00      	nop
 801ac56:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac58:	2200      	movs	r2, #0
 801ac5a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 801ac5e:	e003      	b.n	801ac68 <prvInitialiseNewTask+0xa8>
 801ac60:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac62:	2200      	movs	r2, #0
 801ac64:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 801ac68:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801ac6a:	2b0e      	cmp	r3, #14
 801ac6c:	d901      	bls.n	801ac72 <prvInitialiseNewTask+0xb2>
 801ac6e:	230e      	movs	r3, #14
 801ac70:	62bb      	str	r3, [r7, #40]	@ 0x28
 801ac72:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac74:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 801ac76:	62da      	str	r2, [r3, #44]	@ 0x2c
 801ac78:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac7a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 801ac7c:	64da      	str	r2, [r3, #76]	@ 0x4c
 801ac7e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac80:	2200      	movs	r2, #0
 801ac82:	651a      	str	r2, [r3, #80]	@ 0x50
 801ac84:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac86:	3304      	adds	r3, #4
 801ac88:	4618      	mov	r0, r3
 801ac8a:	f7ff f897 	bl	8019dbc <vListInitialiseItem>
 801ac8e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac90:	3318      	adds	r3, #24
 801ac92:	4618      	mov	r0, r3
 801ac94:	f7ff f892 	bl	8019dbc <vListInitialiseItem>
 801ac98:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ac9a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801ac9c:	611a      	str	r2, [r3, #16]
 801ac9e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801aca0:	f1c3 020f 	rsb	r2, r3, #15
 801aca4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801aca6:	619a      	str	r2, [r3, #24]
 801aca8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acaa:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801acac:	625a      	str	r2, [r3, #36]	@ 0x24
 801acae:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acb0:	2200      	movs	r2, #0
 801acb2:	655a      	str	r2, [r3, #84]	@ 0x54
 801acb4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acb6:	2200      	movs	r2, #0
 801acb8:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801acbc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acbe:	2200      	movs	r2, #0
 801acc0:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 801acc4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acc6:	3358      	adds	r3, #88	@ 0x58
 801acc8:	f44f 7290 	mov.w	r2, #288	@ 0x120
 801accc:	2100      	movs	r1, #0
 801acce:	4618      	mov	r0, r3
 801acd0:	f002 fe7f 	bl	801d9d2 <memset>
 801acd4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acd6:	4a21      	ldr	r2, [pc, #132]	@ (801ad5c <prvInitialiseNewTask+0x19c>)
 801acd8:	65da      	str	r2, [r3, #92]	@ 0x5c
 801acda:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acdc:	4a20      	ldr	r2, [pc, #128]	@ (801ad60 <prvInitialiseNewTask+0x1a0>)
 801acde:	661a      	str	r2, [r3, #96]	@ 0x60
 801ace0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ace2:	4a20      	ldr	r2, [pc, #128]	@ (801ad64 <prvInitialiseNewTask+0x1a4>)
 801ace4:	665a      	str	r2, [r3, #100]	@ 0x64
 801ace6:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 801ace8:	f04f 0201 	mov.w	r2, #1
 801acec:	f04f 0300 	mov.w	r3, #0
 801acf0:	e9c1 233c 	strd	r2, r3, [r1, #240]	@ 0xf0
 801acf4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801acf6:	f243 320e 	movw	r2, #13070	@ 0x330e
 801acfa:	f8a3 20f8 	strh.w	r2, [r3, #248]	@ 0xf8
 801acfe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad00:	f64a 32cd 	movw	r2, #43981	@ 0xabcd
 801ad04:	f8a3 20fa 	strh.w	r2, [r3, #250]	@ 0xfa
 801ad08:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad0a:	f241 2234 	movw	r2, #4660	@ 0x1234
 801ad0e:	f8a3 20fc 	strh.w	r2, [r3, #252]	@ 0xfc
 801ad12:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad14:	f24e 626d 	movw	r2, #58989	@ 0xe66d
 801ad18:	f8a3 20fe 	strh.w	r2, [r3, #254]	@ 0xfe
 801ad1c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad1e:	f64d 62ec 	movw	r2, #57068	@ 0xdeec
 801ad22:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
 801ad26:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad28:	2205      	movs	r2, #5
 801ad2a:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
 801ad2e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad30:	220b      	movs	r2, #11
 801ad32:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
 801ad36:	683a      	ldr	r2, [r7, #0]
 801ad38:	68f9      	ldr	r1, [r7, #12]
 801ad3a:	69b8      	ldr	r0, [r7, #24]
 801ad3c:	f001 fb94 	bl	801c468 <pxPortInitialiseStack>
 801ad40:	4602      	mov	r2, r0
 801ad42:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 801ad44:	601a      	str	r2, [r3, #0]
 801ad46:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801ad48:	2b00      	cmp	r3, #0
 801ad4a:	d002      	beq.n	801ad52 <prvInitialiseNewTask+0x192>
 801ad4c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801ad4e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801ad50:	601a      	str	r2, [r3, #0]
 801ad52:	bf00      	nop
 801ad54:	3720      	adds	r7, #32
 801ad56:	46bd      	mov	sp, r7
 801ad58:	bd80      	pop	{r7, pc}
 801ad5a:	bf00      	nop
 801ad5c:	2000d34c 	.word	0x2000d34c
 801ad60:	2000d3b4 	.word	0x2000d3b4
 801ad64:	2000d41c 	.word	0x2000d41c

0801ad68 <prvAddNewTaskToReadyList>:
 801ad68:	b580      	push	{r7, lr}
 801ad6a:	b082      	sub	sp, #8
 801ad6c:	af00      	add	r7, sp, #0
 801ad6e:	6078      	str	r0, [r7, #4]
 801ad70:	f001 fcaa 	bl	801c6c8 <vPortEnterCritical>
 801ad74:	4b2c      	ldr	r3, [pc, #176]	@ (801ae28 <prvAddNewTaskToReadyList+0xc0>)
 801ad76:	681b      	ldr	r3, [r3, #0]
 801ad78:	3301      	adds	r3, #1
 801ad7a:	4a2b      	ldr	r2, [pc, #172]	@ (801ae28 <prvAddNewTaskToReadyList+0xc0>)
 801ad7c:	6013      	str	r3, [r2, #0]
 801ad7e:	4b2b      	ldr	r3, [pc, #172]	@ (801ae2c <prvAddNewTaskToReadyList+0xc4>)
 801ad80:	681b      	ldr	r3, [r3, #0]
 801ad82:	2b00      	cmp	r3, #0
 801ad84:	d109      	bne.n	801ad9a <prvAddNewTaskToReadyList+0x32>
 801ad86:	4a29      	ldr	r2, [pc, #164]	@ (801ae2c <prvAddNewTaskToReadyList+0xc4>)
 801ad88:	687b      	ldr	r3, [r7, #4]
 801ad8a:	6013      	str	r3, [r2, #0]
 801ad8c:	4b26      	ldr	r3, [pc, #152]	@ (801ae28 <prvAddNewTaskToReadyList+0xc0>)
 801ad8e:	681b      	ldr	r3, [r3, #0]
 801ad90:	2b01      	cmp	r3, #1
 801ad92:	d110      	bne.n	801adb6 <prvAddNewTaskToReadyList+0x4e>
 801ad94:	f000 fd3c 	bl	801b810 <prvInitialiseTaskLists>
 801ad98:	e00d      	b.n	801adb6 <prvAddNewTaskToReadyList+0x4e>
 801ad9a:	4b25      	ldr	r3, [pc, #148]	@ (801ae30 <prvAddNewTaskToReadyList+0xc8>)
 801ad9c:	681b      	ldr	r3, [r3, #0]
 801ad9e:	2b00      	cmp	r3, #0
 801ada0:	d109      	bne.n	801adb6 <prvAddNewTaskToReadyList+0x4e>
 801ada2:	4b22      	ldr	r3, [pc, #136]	@ (801ae2c <prvAddNewTaskToReadyList+0xc4>)
 801ada4:	681b      	ldr	r3, [r3, #0]
 801ada6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801ada8:	687b      	ldr	r3, [r7, #4]
 801adaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801adac:	429a      	cmp	r2, r3
 801adae:	d802      	bhi.n	801adb6 <prvAddNewTaskToReadyList+0x4e>
 801adb0:	4a1e      	ldr	r2, [pc, #120]	@ (801ae2c <prvAddNewTaskToReadyList+0xc4>)
 801adb2:	687b      	ldr	r3, [r7, #4]
 801adb4:	6013      	str	r3, [r2, #0]
 801adb6:	4b1f      	ldr	r3, [pc, #124]	@ (801ae34 <prvAddNewTaskToReadyList+0xcc>)
 801adb8:	681b      	ldr	r3, [r3, #0]
 801adba:	3301      	adds	r3, #1
 801adbc:	4a1d      	ldr	r2, [pc, #116]	@ (801ae34 <prvAddNewTaskToReadyList+0xcc>)
 801adbe:	6013      	str	r3, [r2, #0]
 801adc0:	4b1c      	ldr	r3, [pc, #112]	@ (801ae34 <prvAddNewTaskToReadyList+0xcc>)
 801adc2:	681a      	ldr	r2, [r3, #0]
 801adc4:	687b      	ldr	r3, [r7, #4]
 801adc6:	645a      	str	r2, [r3, #68]	@ 0x44
 801adc8:	687b      	ldr	r3, [r7, #4]
 801adca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801adcc:	2201      	movs	r2, #1
 801adce:	409a      	lsls	r2, r3
 801add0:	4b19      	ldr	r3, [pc, #100]	@ (801ae38 <prvAddNewTaskToReadyList+0xd0>)
 801add2:	681b      	ldr	r3, [r3, #0]
 801add4:	4313      	orrs	r3, r2
 801add6:	4a18      	ldr	r2, [pc, #96]	@ (801ae38 <prvAddNewTaskToReadyList+0xd0>)
 801add8:	6013      	str	r3, [r2, #0]
 801adda:	687b      	ldr	r3, [r7, #4]
 801addc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801adde:	4613      	mov	r3, r2
 801ade0:	009b      	lsls	r3, r3, #2
 801ade2:	4413      	add	r3, r2
 801ade4:	009b      	lsls	r3, r3, #2
 801ade6:	4a15      	ldr	r2, [pc, #84]	@ (801ae3c <prvAddNewTaskToReadyList+0xd4>)
 801ade8:	441a      	add	r2, r3
 801adea:	687b      	ldr	r3, [r7, #4]
 801adec:	3304      	adds	r3, #4
 801adee:	4619      	mov	r1, r3
 801adf0:	4610      	mov	r0, r2
 801adf2:	f7fe fff0 	bl	8019dd6 <vListInsertEnd>
 801adf6:	f001 fc99 	bl	801c72c <vPortExitCritical>
 801adfa:	4b0d      	ldr	r3, [pc, #52]	@ (801ae30 <prvAddNewTaskToReadyList+0xc8>)
 801adfc:	681b      	ldr	r3, [r3, #0]
 801adfe:	2b00      	cmp	r3, #0
 801ae00:	d00e      	beq.n	801ae20 <prvAddNewTaskToReadyList+0xb8>
 801ae02:	4b0a      	ldr	r3, [pc, #40]	@ (801ae2c <prvAddNewTaskToReadyList+0xc4>)
 801ae04:	681b      	ldr	r3, [r3, #0]
 801ae06:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801ae08:	687b      	ldr	r3, [r7, #4]
 801ae0a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ae0c:	429a      	cmp	r2, r3
 801ae0e:	d207      	bcs.n	801ae20 <prvAddNewTaskToReadyList+0xb8>
 801ae10:	4b0b      	ldr	r3, [pc, #44]	@ (801ae40 <prvAddNewTaskToReadyList+0xd8>)
 801ae12:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801ae16:	601a      	str	r2, [r3, #0]
 801ae18:	f3bf 8f4f 	dsb	sy
 801ae1c:	f3bf 8f6f 	isb	sy
 801ae20:	bf00      	nop
 801ae22:	3708      	adds	r7, #8
 801ae24:	46bd      	mov	sp, r7
 801ae26:	bd80      	pop	{r7, pc}
 801ae28:	20004084 	.word	0x20004084
 801ae2c:	20003ee4 	.word	0x20003ee4
 801ae30:	20004090 	.word	0x20004090
 801ae34:	200040a0 	.word	0x200040a0
 801ae38:	2000408c 	.word	0x2000408c
 801ae3c:	20003ee8 	.word	0x20003ee8
 801ae40:	e000ed04 	.word	0xe000ed04

0801ae44 <vTaskDelayUntil>:
 801ae44:	b580      	push	{r7, lr}
 801ae46:	b08a      	sub	sp, #40	@ 0x28
 801ae48:	af00      	add	r7, sp, #0
 801ae4a:	6078      	str	r0, [r7, #4]
 801ae4c:	6039      	str	r1, [r7, #0]
 801ae4e:	2300      	movs	r3, #0
 801ae50:	627b      	str	r3, [r7, #36]	@ 0x24
 801ae52:	687b      	ldr	r3, [r7, #4]
 801ae54:	2b00      	cmp	r3, #0
 801ae56:	d10b      	bne.n	801ae70 <vTaskDelayUntil+0x2c>
 801ae58:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801ae5c:	f383 8811 	msr	BASEPRI, r3
 801ae60:	f3bf 8f6f 	isb	sy
 801ae64:	f3bf 8f4f 	dsb	sy
 801ae68:	617b      	str	r3, [r7, #20]
 801ae6a:	bf00      	nop
 801ae6c:	bf00      	nop
 801ae6e:	e7fd      	b.n	801ae6c <vTaskDelayUntil+0x28>
 801ae70:	683b      	ldr	r3, [r7, #0]
 801ae72:	2b00      	cmp	r3, #0
 801ae74:	d10b      	bne.n	801ae8e <vTaskDelayUntil+0x4a>
 801ae76:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801ae7a:	f383 8811 	msr	BASEPRI, r3
 801ae7e:	f3bf 8f6f 	isb	sy
 801ae82:	f3bf 8f4f 	dsb	sy
 801ae86:	613b      	str	r3, [r7, #16]
 801ae88:	bf00      	nop
 801ae8a:	bf00      	nop
 801ae8c:	e7fd      	b.n	801ae8a <vTaskDelayUntil+0x46>
 801ae8e:	4b2a      	ldr	r3, [pc, #168]	@ (801af38 <vTaskDelayUntil+0xf4>)
 801ae90:	681b      	ldr	r3, [r3, #0]
 801ae92:	2b00      	cmp	r3, #0
 801ae94:	d00b      	beq.n	801aeae <vTaskDelayUntil+0x6a>
 801ae96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801ae9a:	f383 8811 	msr	BASEPRI, r3
 801ae9e:	f3bf 8f6f 	isb	sy
 801aea2:	f3bf 8f4f 	dsb	sy
 801aea6:	60fb      	str	r3, [r7, #12]
 801aea8:	bf00      	nop
 801aeaa:	bf00      	nop
 801aeac:	e7fd      	b.n	801aeaa <vTaskDelayUntil+0x66>
 801aeae:	f000 f8f1 	bl	801b094 <vTaskSuspendAll>
 801aeb2:	4b22      	ldr	r3, [pc, #136]	@ (801af3c <vTaskDelayUntil+0xf8>)
 801aeb4:	681b      	ldr	r3, [r3, #0]
 801aeb6:	623b      	str	r3, [r7, #32]
 801aeb8:	687b      	ldr	r3, [r7, #4]
 801aeba:	681b      	ldr	r3, [r3, #0]
 801aebc:	683a      	ldr	r2, [r7, #0]
 801aebe:	4413      	add	r3, r2
 801aec0:	61fb      	str	r3, [r7, #28]
 801aec2:	687b      	ldr	r3, [r7, #4]
 801aec4:	681b      	ldr	r3, [r3, #0]
 801aec6:	6a3a      	ldr	r2, [r7, #32]
 801aec8:	429a      	cmp	r2, r3
 801aeca:	d20b      	bcs.n	801aee4 <vTaskDelayUntil+0xa0>
 801aecc:	687b      	ldr	r3, [r7, #4]
 801aece:	681b      	ldr	r3, [r3, #0]
 801aed0:	69fa      	ldr	r2, [r7, #28]
 801aed2:	429a      	cmp	r2, r3
 801aed4:	d211      	bcs.n	801aefa <vTaskDelayUntil+0xb6>
 801aed6:	69fa      	ldr	r2, [r7, #28]
 801aed8:	6a3b      	ldr	r3, [r7, #32]
 801aeda:	429a      	cmp	r2, r3
 801aedc:	d90d      	bls.n	801aefa <vTaskDelayUntil+0xb6>
 801aede:	2301      	movs	r3, #1
 801aee0:	627b      	str	r3, [r7, #36]	@ 0x24
 801aee2:	e00a      	b.n	801aefa <vTaskDelayUntil+0xb6>
 801aee4:	687b      	ldr	r3, [r7, #4]
 801aee6:	681b      	ldr	r3, [r3, #0]
 801aee8:	69fa      	ldr	r2, [r7, #28]
 801aeea:	429a      	cmp	r2, r3
 801aeec:	d303      	bcc.n	801aef6 <vTaskDelayUntil+0xb2>
 801aeee:	69fa      	ldr	r2, [r7, #28]
 801aef0:	6a3b      	ldr	r3, [r7, #32]
 801aef2:	429a      	cmp	r2, r3
 801aef4:	d901      	bls.n	801aefa <vTaskDelayUntil+0xb6>
 801aef6:	2301      	movs	r3, #1
 801aef8:	627b      	str	r3, [r7, #36]	@ 0x24
 801aefa:	687b      	ldr	r3, [r7, #4]
 801aefc:	69fa      	ldr	r2, [r7, #28]
 801aefe:	601a      	str	r2, [r3, #0]
 801af00:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801af02:	2b00      	cmp	r3, #0
 801af04:	d006      	beq.n	801af14 <vTaskDelayUntil+0xd0>
 801af06:	69fa      	ldr	r2, [r7, #28]
 801af08:	6a3b      	ldr	r3, [r7, #32]
 801af0a:	1ad3      	subs	r3, r2, r3
 801af0c:	2100      	movs	r1, #0
 801af0e:	4618      	mov	r0, r3
 801af10:	f000 feca 	bl	801bca8 <prvAddCurrentTaskToDelayedList>
 801af14:	f000 f8cc 	bl	801b0b0 <xTaskResumeAll>
 801af18:	61b8      	str	r0, [r7, #24]
 801af1a:	69bb      	ldr	r3, [r7, #24]
 801af1c:	2b00      	cmp	r3, #0
 801af1e:	d107      	bne.n	801af30 <vTaskDelayUntil+0xec>
 801af20:	4b07      	ldr	r3, [pc, #28]	@ (801af40 <vTaskDelayUntil+0xfc>)
 801af22:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801af26:	601a      	str	r2, [r3, #0]
 801af28:	f3bf 8f4f 	dsb	sy
 801af2c:	f3bf 8f6f 	isb	sy
 801af30:	bf00      	nop
 801af32:	3728      	adds	r7, #40	@ 0x28
 801af34:	46bd      	mov	sp, r7
 801af36:	bd80      	pop	{r7, pc}
 801af38:	200040ac 	.word	0x200040ac
 801af3c:	20004088 	.word	0x20004088
 801af40:	e000ed04 	.word	0xe000ed04

0801af44 <vTaskDelay>:
 801af44:	b580      	push	{r7, lr}
 801af46:	b084      	sub	sp, #16
 801af48:	af00      	add	r7, sp, #0
 801af4a:	6078      	str	r0, [r7, #4]
 801af4c:	2300      	movs	r3, #0
 801af4e:	60fb      	str	r3, [r7, #12]
 801af50:	687b      	ldr	r3, [r7, #4]
 801af52:	2b00      	cmp	r3, #0
 801af54:	d018      	beq.n	801af88 <vTaskDelay+0x44>
 801af56:	4b14      	ldr	r3, [pc, #80]	@ (801afa8 <vTaskDelay+0x64>)
 801af58:	681b      	ldr	r3, [r3, #0]
 801af5a:	2b00      	cmp	r3, #0
 801af5c:	d00b      	beq.n	801af76 <vTaskDelay+0x32>
 801af5e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801af62:	f383 8811 	msr	BASEPRI, r3
 801af66:	f3bf 8f6f 	isb	sy
 801af6a:	f3bf 8f4f 	dsb	sy
 801af6e:	60bb      	str	r3, [r7, #8]
 801af70:	bf00      	nop
 801af72:	bf00      	nop
 801af74:	e7fd      	b.n	801af72 <vTaskDelay+0x2e>
 801af76:	f000 f88d 	bl	801b094 <vTaskSuspendAll>
 801af7a:	2100      	movs	r1, #0
 801af7c:	6878      	ldr	r0, [r7, #4]
 801af7e:	f000 fe93 	bl	801bca8 <prvAddCurrentTaskToDelayedList>
 801af82:	f000 f895 	bl	801b0b0 <xTaskResumeAll>
 801af86:	60f8      	str	r0, [r7, #12]
 801af88:	68fb      	ldr	r3, [r7, #12]
 801af8a:	2b00      	cmp	r3, #0
 801af8c:	d107      	bne.n	801af9e <vTaskDelay+0x5a>
 801af8e:	4b07      	ldr	r3, [pc, #28]	@ (801afac <vTaskDelay+0x68>)
 801af90:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801af94:	601a      	str	r2, [r3, #0]
 801af96:	f3bf 8f4f 	dsb	sy
 801af9a:	f3bf 8f6f 	isb	sy
 801af9e:	bf00      	nop
 801afa0:	3710      	adds	r7, #16
 801afa2:	46bd      	mov	sp, r7
 801afa4:	bd80      	pop	{r7, pc}
 801afa6:	bf00      	nop
 801afa8:	200040ac 	.word	0x200040ac
 801afac:	e000ed04 	.word	0xe000ed04

0801afb0 <vTaskStartScheduler>:
 801afb0:	b580      	push	{r7, lr}
 801afb2:	b08a      	sub	sp, #40	@ 0x28
 801afb4:	af04      	add	r7, sp, #16
 801afb6:	2300      	movs	r3, #0
 801afb8:	60bb      	str	r3, [r7, #8]
 801afba:	2300      	movs	r3, #0
 801afbc:	607b      	str	r3, [r7, #4]
 801afbe:	463a      	mov	r2, r7
 801afc0:	1d39      	adds	r1, r7, #4
 801afc2:	f107 0308 	add.w	r3, r7, #8
 801afc6:	4618      	mov	r0, r3
 801afc8:	f7e8 f8d6 	bl	8003178 <vApplicationGetIdleTaskMemory>
 801afcc:	6839      	ldr	r1, [r7, #0]
 801afce:	687b      	ldr	r3, [r7, #4]
 801afd0:	68ba      	ldr	r2, [r7, #8]
 801afd2:	9202      	str	r2, [sp, #8]
 801afd4:	9301      	str	r3, [sp, #4]
 801afd6:	2300      	movs	r3, #0
 801afd8:	9300      	str	r3, [sp, #0]
 801afda:	2300      	movs	r3, #0
 801afdc:	460a      	mov	r2, r1
 801afde:	4925      	ldr	r1, [pc, #148]	@ (801b074 <vTaskStartScheduler+0xc4>)
 801afe0:	4825      	ldr	r0, [pc, #148]	@ (801b078 <vTaskStartScheduler+0xc8>)
 801afe2:	f7ff fd45 	bl	801aa70 <xTaskCreateStatic>
 801afe6:	4603      	mov	r3, r0
 801afe8:	4a24      	ldr	r2, [pc, #144]	@ (801b07c <vTaskStartScheduler+0xcc>)
 801afea:	6013      	str	r3, [r2, #0]
 801afec:	4b23      	ldr	r3, [pc, #140]	@ (801b07c <vTaskStartScheduler+0xcc>)
 801afee:	681b      	ldr	r3, [r3, #0]
 801aff0:	2b00      	cmp	r3, #0
 801aff2:	d002      	beq.n	801affa <vTaskStartScheduler+0x4a>
 801aff4:	2301      	movs	r3, #1
 801aff6:	617b      	str	r3, [r7, #20]
 801aff8:	e001      	b.n	801affe <vTaskStartScheduler+0x4e>
 801affa:	2300      	movs	r3, #0
 801affc:	617b      	str	r3, [r7, #20]
 801affe:	697b      	ldr	r3, [r7, #20]
 801b000:	2b01      	cmp	r3, #1
 801b002:	d102      	bne.n	801b00a <vTaskStartScheduler+0x5a>
 801b004:	f000 feb6 	bl	801bd74 <xTimerCreateTimerTask>
 801b008:	6178      	str	r0, [r7, #20]
 801b00a:	697b      	ldr	r3, [r7, #20]
 801b00c:	2b01      	cmp	r3, #1
 801b00e:	d11d      	bne.n	801b04c <vTaskStartScheduler+0x9c>
 801b010:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b014:	f383 8811 	msr	BASEPRI, r3
 801b018:	f3bf 8f6f 	isb	sy
 801b01c:	f3bf 8f4f 	dsb	sy
 801b020:	613b      	str	r3, [r7, #16]
 801b022:	bf00      	nop
 801b024:	4b16      	ldr	r3, [pc, #88]	@ (801b080 <vTaskStartScheduler+0xd0>)
 801b026:	681b      	ldr	r3, [r3, #0]
 801b028:	3358      	adds	r3, #88	@ 0x58
 801b02a:	4a16      	ldr	r2, [pc, #88]	@ (801b084 <vTaskStartScheduler+0xd4>)
 801b02c:	6013      	str	r3, [r2, #0]
 801b02e:	4b16      	ldr	r3, [pc, #88]	@ (801b088 <vTaskStartScheduler+0xd8>)
 801b030:	f04f 32ff 	mov.w	r2, #4294967295
 801b034:	601a      	str	r2, [r3, #0]
 801b036:	4b15      	ldr	r3, [pc, #84]	@ (801b08c <vTaskStartScheduler+0xdc>)
 801b038:	2201      	movs	r2, #1
 801b03a:	601a      	str	r2, [r3, #0]
 801b03c:	4b14      	ldr	r3, [pc, #80]	@ (801b090 <vTaskStartScheduler+0xe0>)
 801b03e:	2200      	movs	r2, #0
 801b040:	601a      	str	r2, [r3, #0]
 801b042:	f7e8 f87f 	bl	8003144 <configureTimerForRunTimeStats>
 801b046:	f001 fa9b 	bl	801c580 <xPortStartScheduler>
 801b04a:	e00f      	b.n	801b06c <vTaskStartScheduler+0xbc>
 801b04c:	697b      	ldr	r3, [r7, #20]
 801b04e:	f1b3 3fff 	cmp.w	r3, #4294967295
 801b052:	d10b      	bne.n	801b06c <vTaskStartScheduler+0xbc>
 801b054:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b058:	f383 8811 	msr	BASEPRI, r3
 801b05c:	f3bf 8f6f 	isb	sy
 801b060:	f3bf 8f4f 	dsb	sy
 801b064:	60fb      	str	r3, [r7, #12]
 801b066:	bf00      	nop
 801b068:	bf00      	nop
 801b06a:	e7fd      	b.n	801b068 <vTaskStartScheduler+0xb8>
 801b06c:	bf00      	nop
 801b06e:	3718      	adds	r7, #24
 801b070:	46bd      	mov	sp, r7
 801b072:	bd80      	pop	{r7, pc}
 801b074:	08024760 	.word	0x08024760
 801b078:	0801b7e1 	.word	0x0801b7e1
 801b07c:	200040a8 	.word	0x200040a8
 801b080:	20003ee4 	.word	0x20003ee4
 801b084:	20000150 	.word	0x20000150
 801b088:	200040a4 	.word	0x200040a4
 801b08c:	20004090 	.word	0x20004090
 801b090:	20004088 	.word	0x20004088

0801b094 <vTaskSuspendAll>:
 801b094:	b480      	push	{r7}
 801b096:	af00      	add	r7, sp, #0
 801b098:	4b04      	ldr	r3, [pc, #16]	@ (801b0ac <vTaskSuspendAll+0x18>)
 801b09a:	681b      	ldr	r3, [r3, #0]
 801b09c:	3301      	adds	r3, #1
 801b09e:	4a03      	ldr	r2, [pc, #12]	@ (801b0ac <vTaskSuspendAll+0x18>)
 801b0a0:	6013      	str	r3, [r2, #0]
 801b0a2:	bf00      	nop
 801b0a4:	46bd      	mov	sp, r7
 801b0a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b0aa:	4770      	bx	lr
 801b0ac:	200040ac 	.word	0x200040ac

0801b0b0 <xTaskResumeAll>:
 801b0b0:	b580      	push	{r7, lr}
 801b0b2:	b084      	sub	sp, #16
 801b0b4:	af00      	add	r7, sp, #0
 801b0b6:	2300      	movs	r3, #0
 801b0b8:	60fb      	str	r3, [r7, #12]
 801b0ba:	2300      	movs	r3, #0
 801b0bc:	60bb      	str	r3, [r7, #8]
 801b0be:	4b42      	ldr	r3, [pc, #264]	@ (801b1c8 <xTaskResumeAll+0x118>)
 801b0c0:	681b      	ldr	r3, [r3, #0]
 801b0c2:	2b00      	cmp	r3, #0
 801b0c4:	d10b      	bne.n	801b0de <xTaskResumeAll+0x2e>
 801b0c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b0ca:	f383 8811 	msr	BASEPRI, r3
 801b0ce:	f3bf 8f6f 	isb	sy
 801b0d2:	f3bf 8f4f 	dsb	sy
 801b0d6:	603b      	str	r3, [r7, #0]
 801b0d8:	bf00      	nop
 801b0da:	bf00      	nop
 801b0dc:	e7fd      	b.n	801b0da <xTaskResumeAll+0x2a>
 801b0de:	f001 faf3 	bl	801c6c8 <vPortEnterCritical>
 801b0e2:	4b39      	ldr	r3, [pc, #228]	@ (801b1c8 <xTaskResumeAll+0x118>)
 801b0e4:	681b      	ldr	r3, [r3, #0]
 801b0e6:	3b01      	subs	r3, #1
 801b0e8:	4a37      	ldr	r2, [pc, #220]	@ (801b1c8 <xTaskResumeAll+0x118>)
 801b0ea:	6013      	str	r3, [r2, #0]
 801b0ec:	4b36      	ldr	r3, [pc, #216]	@ (801b1c8 <xTaskResumeAll+0x118>)
 801b0ee:	681b      	ldr	r3, [r3, #0]
 801b0f0:	2b00      	cmp	r3, #0
 801b0f2:	d161      	bne.n	801b1b8 <xTaskResumeAll+0x108>
 801b0f4:	4b35      	ldr	r3, [pc, #212]	@ (801b1cc <xTaskResumeAll+0x11c>)
 801b0f6:	681b      	ldr	r3, [r3, #0]
 801b0f8:	2b00      	cmp	r3, #0
 801b0fa:	d05d      	beq.n	801b1b8 <xTaskResumeAll+0x108>
 801b0fc:	e02e      	b.n	801b15c <xTaskResumeAll+0xac>
 801b0fe:	4b34      	ldr	r3, [pc, #208]	@ (801b1d0 <xTaskResumeAll+0x120>)
 801b100:	68db      	ldr	r3, [r3, #12]
 801b102:	68db      	ldr	r3, [r3, #12]
 801b104:	60fb      	str	r3, [r7, #12]
 801b106:	68fb      	ldr	r3, [r7, #12]
 801b108:	3318      	adds	r3, #24
 801b10a:	4618      	mov	r0, r3
 801b10c:	f7fe fec0 	bl	8019e90 <uxListRemove>
 801b110:	68fb      	ldr	r3, [r7, #12]
 801b112:	3304      	adds	r3, #4
 801b114:	4618      	mov	r0, r3
 801b116:	f7fe febb 	bl	8019e90 <uxListRemove>
 801b11a:	68fb      	ldr	r3, [r7, #12]
 801b11c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b11e:	2201      	movs	r2, #1
 801b120:	409a      	lsls	r2, r3
 801b122:	4b2c      	ldr	r3, [pc, #176]	@ (801b1d4 <xTaskResumeAll+0x124>)
 801b124:	681b      	ldr	r3, [r3, #0]
 801b126:	4313      	orrs	r3, r2
 801b128:	4a2a      	ldr	r2, [pc, #168]	@ (801b1d4 <xTaskResumeAll+0x124>)
 801b12a:	6013      	str	r3, [r2, #0]
 801b12c:	68fb      	ldr	r3, [r7, #12]
 801b12e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b130:	4613      	mov	r3, r2
 801b132:	009b      	lsls	r3, r3, #2
 801b134:	4413      	add	r3, r2
 801b136:	009b      	lsls	r3, r3, #2
 801b138:	4a27      	ldr	r2, [pc, #156]	@ (801b1d8 <xTaskResumeAll+0x128>)
 801b13a:	441a      	add	r2, r3
 801b13c:	68fb      	ldr	r3, [r7, #12]
 801b13e:	3304      	adds	r3, #4
 801b140:	4619      	mov	r1, r3
 801b142:	4610      	mov	r0, r2
 801b144:	f7fe fe47 	bl	8019dd6 <vListInsertEnd>
 801b148:	68fb      	ldr	r3, [r7, #12]
 801b14a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b14c:	4b23      	ldr	r3, [pc, #140]	@ (801b1dc <xTaskResumeAll+0x12c>)
 801b14e:	681b      	ldr	r3, [r3, #0]
 801b150:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b152:	429a      	cmp	r2, r3
 801b154:	d302      	bcc.n	801b15c <xTaskResumeAll+0xac>
 801b156:	4b22      	ldr	r3, [pc, #136]	@ (801b1e0 <xTaskResumeAll+0x130>)
 801b158:	2201      	movs	r2, #1
 801b15a:	601a      	str	r2, [r3, #0]
 801b15c:	4b1c      	ldr	r3, [pc, #112]	@ (801b1d0 <xTaskResumeAll+0x120>)
 801b15e:	681b      	ldr	r3, [r3, #0]
 801b160:	2b00      	cmp	r3, #0
 801b162:	d1cc      	bne.n	801b0fe <xTaskResumeAll+0x4e>
 801b164:	68fb      	ldr	r3, [r7, #12]
 801b166:	2b00      	cmp	r3, #0
 801b168:	d001      	beq.n	801b16e <xTaskResumeAll+0xbe>
 801b16a:	f000 fbf5 	bl	801b958 <prvResetNextTaskUnblockTime>
 801b16e:	4b1d      	ldr	r3, [pc, #116]	@ (801b1e4 <xTaskResumeAll+0x134>)
 801b170:	681b      	ldr	r3, [r3, #0]
 801b172:	607b      	str	r3, [r7, #4]
 801b174:	687b      	ldr	r3, [r7, #4]
 801b176:	2b00      	cmp	r3, #0
 801b178:	d010      	beq.n	801b19c <xTaskResumeAll+0xec>
 801b17a:	f000 f847 	bl	801b20c <xTaskIncrementTick>
 801b17e:	4603      	mov	r3, r0
 801b180:	2b00      	cmp	r3, #0
 801b182:	d002      	beq.n	801b18a <xTaskResumeAll+0xda>
 801b184:	4b16      	ldr	r3, [pc, #88]	@ (801b1e0 <xTaskResumeAll+0x130>)
 801b186:	2201      	movs	r2, #1
 801b188:	601a      	str	r2, [r3, #0]
 801b18a:	687b      	ldr	r3, [r7, #4]
 801b18c:	3b01      	subs	r3, #1
 801b18e:	607b      	str	r3, [r7, #4]
 801b190:	687b      	ldr	r3, [r7, #4]
 801b192:	2b00      	cmp	r3, #0
 801b194:	d1f1      	bne.n	801b17a <xTaskResumeAll+0xca>
 801b196:	4b13      	ldr	r3, [pc, #76]	@ (801b1e4 <xTaskResumeAll+0x134>)
 801b198:	2200      	movs	r2, #0
 801b19a:	601a      	str	r2, [r3, #0]
 801b19c:	4b10      	ldr	r3, [pc, #64]	@ (801b1e0 <xTaskResumeAll+0x130>)
 801b19e:	681b      	ldr	r3, [r3, #0]
 801b1a0:	2b00      	cmp	r3, #0
 801b1a2:	d009      	beq.n	801b1b8 <xTaskResumeAll+0x108>
 801b1a4:	2301      	movs	r3, #1
 801b1a6:	60bb      	str	r3, [r7, #8]
 801b1a8:	4b0f      	ldr	r3, [pc, #60]	@ (801b1e8 <xTaskResumeAll+0x138>)
 801b1aa:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801b1ae:	601a      	str	r2, [r3, #0]
 801b1b0:	f3bf 8f4f 	dsb	sy
 801b1b4:	f3bf 8f6f 	isb	sy
 801b1b8:	f001 fab8 	bl	801c72c <vPortExitCritical>
 801b1bc:	68bb      	ldr	r3, [r7, #8]
 801b1be:	4618      	mov	r0, r3
 801b1c0:	3710      	adds	r7, #16
 801b1c2:	46bd      	mov	sp, r7
 801b1c4:	bd80      	pop	{r7, pc}
 801b1c6:	bf00      	nop
 801b1c8:	200040ac 	.word	0x200040ac
 801b1cc:	20004084 	.word	0x20004084
 801b1d0:	20004044 	.word	0x20004044
 801b1d4:	2000408c 	.word	0x2000408c
 801b1d8:	20003ee8 	.word	0x20003ee8
 801b1dc:	20003ee4 	.word	0x20003ee4
 801b1e0:	20004098 	.word	0x20004098
 801b1e4:	20004094 	.word	0x20004094
 801b1e8:	e000ed04 	.word	0xe000ed04

0801b1ec <xTaskGetTickCount>:
 801b1ec:	b480      	push	{r7}
 801b1ee:	b083      	sub	sp, #12
 801b1f0:	af00      	add	r7, sp, #0
 801b1f2:	4b05      	ldr	r3, [pc, #20]	@ (801b208 <xTaskGetTickCount+0x1c>)
 801b1f4:	681b      	ldr	r3, [r3, #0]
 801b1f6:	607b      	str	r3, [r7, #4]
 801b1f8:	687b      	ldr	r3, [r7, #4]
 801b1fa:	4618      	mov	r0, r3
 801b1fc:	370c      	adds	r7, #12
 801b1fe:	46bd      	mov	sp, r7
 801b200:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b204:	4770      	bx	lr
 801b206:	bf00      	nop
 801b208:	20004088 	.word	0x20004088

0801b20c <xTaskIncrementTick>:
 801b20c:	b580      	push	{r7, lr}
 801b20e:	b086      	sub	sp, #24
 801b210:	af00      	add	r7, sp, #0
 801b212:	2300      	movs	r3, #0
 801b214:	617b      	str	r3, [r7, #20]
 801b216:	4b4f      	ldr	r3, [pc, #316]	@ (801b354 <xTaskIncrementTick+0x148>)
 801b218:	681b      	ldr	r3, [r3, #0]
 801b21a:	2b00      	cmp	r3, #0
 801b21c:	f040 808f 	bne.w	801b33e <xTaskIncrementTick+0x132>
 801b220:	4b4d      	ldr	r3, [pc, #308]	@ (801b358 <xTaskIncrementTick+0x14c>)
 801b222:	681b      	ldr	r3, [r3, #0]
 801b224:	3301      	adds	r3, #1
 801b226:	613b      	str	r3, [r7, #16]
 801b228:	4a4b      	ldr	r2, [pc, #300]	@ (801b358 <xTaskIncrementTick+0x14c>)
 801b22a:	693b      	ldr	r3, [r7, #16]
 801b22c:	6013      	str	r3, [r2, #0]
 801b22e:	693b      	ldr	r3, [r7, #16]
 801b230:	2b00      	cmp	r3, #0
 801b232:	d121      	bne.n	801b278 <xTaskIncrementTick+0x6c>
 801b234:	4b49      	ldr	r3, [pc, #292]	@ (801b35c <xTaskIncrementTick+0x150>)
 801b236:	681b      	ldr	r3, [r3, #0]
 801b238:	681b      	ldr	r3, [r3, #0]
 801b23a:	2b00      	cmp	r3, #0
 801b23c:	d00b      	beq.n	801b256 <xTaskIncrementTick+0x4a>
 801b23e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b242:	f383 8811 	msr	BASEPRI, r3
 801b246:	f3bf 8f6f 	isb	sy
 801b24a:	f3bf 8f4f 	dsb	sy
 801b24e:	603b      	str	r3, [r7, #0]
 801b250:	bf00      	nop
 801b252:	bf00      	nop
 801b254:	e7fd      	b.n	801b252 <xTaskIncrementTick+0x46>
 801b256:	4b41      	ldr	r3, [pc, #260]	@ (801b35c <xTaskIncrementTick+0x150>)
 801b258:	681b      	ldr	r3, [r3, #0]
 801b25a:	60fb      	str	r3, [r7, #12]
 801b25c:	4b40      	ldr	r3, [pc, #256]	@ (801b360 <xTaskIncrementTick+0x154>)
 801b25e:	681b      	ldr	r3, [r3, #0]
 801b260:	4a3e      	ldr	r2, [pc, #248]	@ (801b35c <xTaskIncrementTick+0x150>)
 801b262:	6013      	str	r3, [r2, #0]
 801b264:	4a3e      	ldr	r2, [pc, #248]	@ (801b360 <xTaskIncrementTick+0x154>)
 801b266:	68fb      	ldr	r3, [r7, #12]
 801b268:	6013      	str	r3, [r2, #0]
 801b26a:	4b3e      	ldr	r3, [pc, #248]	@ (801b364 <xTaskIncrementTick+0x158>)
 801b26c:	681b      	ldr	r3, [r3, #0]
 801b26e:	3301      	adds	r3, #1
 801b270:	4a3c      	ldr	r2, [pc, #240]	@ (801b364 <xTaskIncrementTick+0x158>)
 801b272:	6013      	str	r3, [r2, #0]
 801b274:	f000 fb70 	bl	801b958 <prvResetNextTaskUnblockTime>
 801b278:	4b3b      	ldr	r3, [pc, #236]	@ (801b368 <xTaskIncrementTick+0x15c>)
 801b27a:	681b      	ldr	r3, [r3, #0]
 801b27c:	693a      	ldr	r2, [r7, #16]
 801b27e:	429a      	cmp	r2, r3
 801b280:	d348      	bcc.n	801b314 <xTaskIncrementTick+0x108>
 801b282:	4b36      	ldr	r3, [pc, #216]	@ (801b35c <xTaskIncrementTick+0x150>)
 801b284:	681b      	ldr	r3, [r3, #0]
 801b286:	681b      	ldr	r3, [r3, #0]
 801b288:	2b00      	cmp	r3, #0
 801b28a:	d104      	bne.n	801b296 <xTaskIncrementTick+0x8a>
 801b28c:	4b36      	ldr	r3, [pc, #216]	@ (801b368 <xTaskIncrementTick+0x15c>)
 801b28e:	f04f 32ff 	mov.w	r2, #4294967295
 801b292:	601a      	str	r2, [r3, #0]
 801b294:	e03e      	b.n	801b314 <xTaskIncrementTick+0x108>
 801b296:	4b31      	ldr	r3, [pc, #196]	@ (801b35c <xTaskIncrementTick+0x150>)
 801b298:	681b      	ldr	r3, [r3, #0]
 801b29a:	68db      	ldr	r3, [r3, #12]
 801b29c:	68db      	ldr	r3, [r3, #12]
 801b29e:	60bb      	str	r3, [r7, #8]
 801b2a0:	68bb      	ldr	r3, [r7, #8]
 801b2a2:	685b      	ldr	r3, [r3, #4]
 801b2a4:	607b      	str	r3, [r7, #4]
 801b2a6:	693a      	ldr	r2, [r7, #16]
 801b2a8:	687b      	ldr	r3, [r7, #4]
 801b2aa:	429a      	cmp	r2, r3
 801b2ac:	d203      	bcs.n	801b2b6 <xTaskIncrementTick+0xaa>
 801b2ae:	4a2e      	ldr	r2, [pc, #184]	@ (801b368 <xTaskIncrementTick+0x15c>)
 801b2b0:	687b      	ldr	r3, [r7, #4]
 801b2b2:	6013      	str	r3, [r2, #0]
 801b2b4:	e02e      	b.n	801b314 <xTaskIncrementTick+0x108>
 801b2b6:	68bb      	ldr	r3, [r7, #8]
 801b2b8:	3304      	adds	r3, #4
 801b2ba:	4618      	mov	r0, r3
 801b2bc:	f7fe fde8 	bl	8019e90 <uxListRemove>
 801b2c0:	68bb      	ldr	r3, [r7, #8]
 801b2c2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b2c4:	2b00      	cmp	r3, #0
 801b2c6:	d004      	beq.n	801b2d2 <xTaskIncrementTick+0xc6>
 801b2c8:	68bb      	ldr	r3, [r7, #8]
 801b2ca:	3318      	adds	r3, #24
 801b2cc:	4618      	mov	r0, r3
 801b2ce:	f7fe fddf 	bl	8019e90 <uxListRemove>
 801b2d2:	68bb      	ldr	r3, [r7, #8]
 801b2d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b2d6:	2201      	movs	r2, #1
 801b2d8:	409a      	lsls	r2, r3
 801b2da:	4b24      	ldr	r3, [pc, #144]	@ (801b36c <xTaskIncrementTick+0x160>)
 801b2dc:	681b      	ldr	r3, [r3, #0]
 801b2de:	4313      	orrs	r3, r2
 801b2e0:	4a22      	ldr	r2, [pc, #136]	@ (801b36c <xTaskIncrementTick+0x160>)
 801b2e2:	6013      	str	r3, [r2, #0]
 801b2e4:	68bb      	ldr	r3, [r7, #8]
 801b2e6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b2e8:	4613      	mov	r3, r2
 801b2ea:	009b      	lsls	r3, r3, #2
 801b2ec:	4413      	add	r3, r2
 801b2ee:	009b      	lsls	r3, r3, #2
 801b2f0:	4a1f      	ldr	r2, [pc, #124]	@ (801b370 <xTaskIncrementTick+0x164>)
 801b2f2:	441a      	add	r2, r3
 801b2f4:	68bb      	ldr	r3, [r7, #8]
 801b2f6:	3304      	adds	r3, #4
 801b2f8:	4619      	mov	r1, r3
 801b2fa:	4610      	mov	r0, r2
 801b2fc:	f7fe fd6b 	bl	8019dd6 <vListInsertEnd>
 801b300:	68bb      	ldr	r3, [r7, #8]
 801b302:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b304:	4b1b      	ldr	r3, [pc, #108]	@ (801b374 <xTaskIncrementTick+0x168>)
 801b306:	681b      	ldr	r3, [r3, #0]
 801b308:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b30a:	429a      	cmp	r2, r3
 801b30c:	d3b9      	bcc.n	801b282 <xTaskIncrementTick+0x76>
 801b30e:	2301      	movs	r3, #1
 801b310:	617b      	str	r3, [r7, #20]
 801b312:	e7b6      	b.n	801b282 <xTaskIncrementTick+0x76>
 801b314:	4b17      	ldr	r3, [pc, #92]	@ (801b374 <xTaskIncrementTick+0x168>)
 801b316:	681b      	ldr	r3, [r3, #0]
 801b318:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b31a:	4915      	ldr	r1, [pc, #84]	@ (801b370 <xTaskIncrementTick+0x164>)
 801b31c:	4613      	mov	r3, r2
 801b31e:	009b      	lsls	r3, r3, #2
 801b320:	4413      	add	r3, r2
 801b322:	009b      	lsls	r3, r3, #2
 801b324:	440b      	add	r3, r1
 801b326:	681b      	ldr	r3, [r3, #0]
 801b328:	2b01      	cmp	r3, #1
 801b32a:	d901      	bls.n	801b330 <xTaskIncrementTick+0x124>
 801b32c:	2301      	movs	r3, #1
 801b32e:	617b      	str	r3, [r7, #20]
 801b330:	4b11      	ldr	r3, [pc, #68]	@ (801b378 <xTaskIncrementTick+0x16c>)
 801b332:	681b      	ldr	r3, [r3, #0]
 801b334:	2b00      	cmp	r3, #0
 801b336:	d007      	beq.n	801b348 <xTaskIncrementTick+0x13c>
 801b338:	2301      	movs	r3, #1
 801b33a:	617b      	str	r3, [r7, #20]
 801b33c:	e004      	b.n	801b348 <xTaskIncrementTick+0x13c>
 801b33e:	4b0f      	ldr	r3, [pc, #60]	@ (801b37c <xTaskIncrementTick+0x170>)
 801b340:	681b      	ldr	r3, [r3, #0]
 801b342:	3301      	adds	r3, #1
 801b344:	4a0d      	ldr	r2, [pc, #52]	@ (801b37c <xTaskIncrementTick+0x170>)
 801b346:	6013      	str	r3, [r2, #0]
 801b348:	697b      	ldr	r3, [r7, #20]
 801b34a:	4618      	mov	r0, r3
 801b34c:	3718      	adds	r7, #24
 801b34e:	46bd      	mov	sp, r7
 801b350:	bd80      	pop	{r7, pc}
 801b352:	bf00      	nop
 801b354:	200040ac 	.word	0x200040ac
 801b358:	20004088 	.word	0x20004088
 801b35c:	2000403c 	.word	0x2000403c
 801b360:	20004040 	.word	0x20004040
 801b364:	2000409c 	.word	0x2000409c
 801b368:	200040a4 	.word	0x200040a4
 801b36c:	2000408c 	.word	0x2000408c
 801b370:	20003ee8 	.word	0x20003ee8
 801b374:	20003ee4 	.word	0x20003ee4
 801b378:	20004098 	.word	0x20004098
 801b37c:	20004094 	.word	0x20004094

0801b380 <vTaskSwitchContext>:
 801b380:	b580      	push	{r7, lr}
 801b382:	b086      	sub	sp, #24
 801b384:	af00      	add	r7, sp, #0
 801b386:	4b3e      	ldr	r3, [pc, #248]	@ (801b480 <vTaskSwitchContext+0x100>)
 801b388:	681b      	ldr	r3, [r3, #0]
 801b38a:	2b00      	cmp	r3, #0
 801b38c:	d003      	beq.n	801b396 <vTaskSwitchContext+0x16>
 801b38e:	4b3d      	ldr	r3, [pc, #244]	@ (801b484 <vTaskSwitchContext+0x104>)
 801b390:	2201      	movs	r2, #1
 801b392:	601a      	str	r2, [r3, #0]
 801b394:	e06f      	b.n	801b476 <vTaskSwitchContext+0xf6>
 801b396:	4b3b      	ldr	r3, [pc, #236]	@ (801b484 <vTaskSwitchContext+0x104>)
 801b398:	2200      	movs	r2, #0
 801b39a:	601a      	str	r2, [r3, #0]
 801b39c:	f7e7 fed9 	bl	8003152 <getRunTimeCounterValue>
 801b3a0:	4603      	mov	r3, r0
 801b3a2:	4a39      	ldr	r2, [pc, #228]	@ (801b488 <vTaskSwitchContext+0x108>)
 801b3a4:	6013      	str	r3, [r2, #0]
 801b3a6:	4b38      	ldr	r3, [pc, #224]	@ (801b488 <vTaskSwitchContext+0x108>)
 801b3a8:	681a      	ldr	r2, [r3, #0]
 801b3aa:	4b38      	ldr	r3, [pc, #224]	@ (801b48c <vTaskSwitchContext+0x10c>)
 801b3ac:	681b      	ldr	r3, [r3, #0]
 801b3ae:	429a      	cmp	r2, r3
 801b3b0:	d909      	bls.n	801b3c6 <vTaskSwitchContext+0x46>
 801b3b2:	4b37      	ldr	r3, [pc, #220]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b3b4:	681b      	ldr	r3, [r3, #0]
 801b3b6:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 801b3b8:	4a33      	ldr	r2, [pc, #204]	@ (801b488 <vTaskSwitchContext+0x108>)
 801b3ba:	6810      	ldr	r0, [r2, #0]
 801b3bc:	4a33      	ldr	r2, [pc, #204]	@ (801b48c <vTaskSwitchContext+0x10c>)
 801b3be:	6812      	ldr	r2, [r2, #0]
 801b3c0:	1a82      	subs	r2, r0, r2
 801b3c2:	440a      	add	r2, r1
 801b3c4:	655a      	str	r2, [r3, #84]	@ 0x54
 801b3c6:	4b30      	ldr	r3, [pc, #192]	@ (801b488 <vTaskSwitchContext+0x108>)
 801b3c8:	681b      	ldr	r3, [r3, #0]
 801b3ca:	4a30      	ldr	r2, [pc, #192]	@ (801b48c <vTaskSwitchContext+0x10c>)
 801b3cc:	6013      	str	r3, [r2, #0]
 801b3ce:	4b30      	ldr	r3, [pc, #192]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b3d0:	681b      	ldr	r3, [r3, #0]
 801b3d2:	681a      	ldr	r2, [r3, #0]
 801b3d4:	4b2e      	ldr	r3, [pc, #184]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b3d6:	681b      	ldr	r3, [r3, #0]
 801b3d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b3da:	429a      	cmp	r2, r3
 801b3dc:	d808      	bhi.n	801b3f0 <vTaskSwitchContext+0x70>
 801b3de:	4b2c      	ldr	r3, [pc, #176]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b3e0:	681a      	ldr	r2, [r3, #0]
 801b3e2:	4b2b      	ldr	r3, [pc, #172]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b3e4:	681b      	ldr	r3, [r3, #0]
 801b3e6:	3334      	adds	r3, #52	@ 0x34
 801b3e8:	4619      	mov	r1, r3
 801b3ea:	4610      	mov	r0, r2
 801b3ec:	f7e7 feb9 	bl	8003162 <vApplicationStackOverflowHook>
 801b3f0:	4b28      	ldr	r3, [pc, #160]	@ (801b494 <vTaskSwitchContext+0x114>)
 801b3f2:	681b      	ldr	r3, [r3, #0]
 801b3f4:	60fb      	str	r3, [r7, #12]
 801b3f6:	68fb      	ldr	r3, [r7, #12]
 801b3f8:	fab3 f383 	clz	r3, r3
 801b3fc:	72fb      	strb	r3, [r7, #11]
 801b3fe:	7afb      	ldrb	r3, [r7, #11]
 801b400:	f1c3 031f 	rsb	r3, r3, #31
 801b404:	617b      	str	r3, [r7, #20]
 801b406:	4924      	ldr	r1, [pc, #144]	@ (801b498 <vTaskSwitchContext+0x118>)
 801b408:	697a      	ldr	r2, [r7, #20]
 801b40a:	4613      	mov	r3, r2
 801b40c:	009b      	lsls	r3, r3, #2
 801b40e:	4413      	add	r3, r2
 801b410:	009b      	lsls	r3, r3, #2
 801b412:	440b      	add	r3, r1
 801b414:	681b      	ldr	r3, [r3, #0]
 801b416:	2b00      	cmp	r3, #0
 801b418:	d10b      	bne.n	801b432 <vTaskSwitchContext+0xb2>
 801b41a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b41e:	f383 8811 	msr	BASEPRI, r3
 801b422:	f3bf 8f6f 	isb	sy
 801b426:	f3bf 8f4f 	dsb	sy
 801b42a:	607b      	str	r3, [r7, #4]
 801b42c:	bf00      	nop
 801b42e:	bf00      	nop
 801b430:	e7fd      	b.n	801b42e <vTaskSwitchContext+0xae>
 801b432:	697a      	ldr	r2, [r7, #20]
 801b434:	4613      	mov	r3, r2
 801b436:	009b      	lsls	r3, r3, #2
 801b438:	4413      	add	r3, r2
 801b43a:	009b      	lsls	r3, r3, #2
 801b43c:	4a16      	ldr	r2, [pc, #88]	@ (801b498 <vTaskSwitchContext+0x118>)
 801b43e:	4413      	add	r3, r2
 801b440:	613b      	str	r3, [r7, #16]
 801b442:	693b      	ldr	r3, [r7, #16]
 801b444:	685b      	ldr	r3, [r3, #4]
 801b446:	685a      	ldr	r2, [r3, #4]
 801b448:	693b      	ldr	r3, [r7, #16]
 801b44a:	605a      	str	r2, [r3, #4]
 801b44c:	693b      	ldr	r3, [r7, #16]
 801b44e:	685a      	ldr	r2, [r3, #4]
 801b450:	693b      	ldr	r3, [r7, #16]
 801b452:	3308      	adds	r3, #8
 801b454:	429a      	cmp	r2, r3
 801b456:	d104      	bne.n	801b462 <vTaskSwitchContext+0xe2>
 801b458:	693b      	ldr	r3, [r7, #16]
 801b45a:	685b      	ldr	r3, [r3, #4]
 801b45c:	685a      	ldr	r2, [r3, #4]
 801b45e:	693b      	ldr	r3, [r7, #16]
 801b460:	605a      	str	r2, [r3, #4]
 801b462:	693b      	ldr	r3, [r7, #16]
 801b464:	685b      	ldr	r3, [r3, #4]
 801b466:	68db      	ldr	r3, [r3, #12]
 801b468:	4a09      	ldr	r2, [pc, #36]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b46a:	6013      	str	r3, [r2, #0]
 801b46c:	4b08      	ldr	r3, [pc, #32]	@ (801b490 <vTaskSwitchContext+0x110>)
 801b46e:	681b      	ldr	r3, [r3, #0]
 801b470:	3358      	adds	r3, #88	@ 0x58
 801b472:	4a0a      	ldr	r2, [pc, #40]	@ (801b49c <vTaskSwitchContext+0x11c>)
 801b474:	6013      	str	r3, [r2, #0]
 801b476:	bf00      	nop
 801b478:	3718      	adds	r7, #24
 801b47a:	46bd      	mov	sp, r7
 801b47c:	bd80      	pop	{r7, pc}
 801b47e:	bf00      	nop
 801b480:	200040ac 	.word	0x200040ac
 801b484:	20004098 	.word	0x20004098
 801b488:	200040b4 	.word	0x200040b4
 801b48c:	200040b0 	.word	0x200040b0
 801b490:	20003ee4 	.word	0x20003ee4
 801b494:	2000408c 	.word	0x2000408c
 801b498:	20003ee8 	.word	0x20003ee8
 801b49c:	20000150 	.word	0x20000150

0801b4a0 <vTaskPlaceOnEventList>:
 801b4a0:	b580      	push	{r7, lr}
 801b4a2:	b084      	sub	sp, #16
 801b4a4:	af00      	add	r7, sp, #0
 801b4a6:	6078      	str	r0, [r7, #4]
 801b4a8:	6039      	str	r1, [r7, #0]
 801b4aa:	687b      	ldr	r3, [r7, #4]
 801b4ac:	2b00      	cmp	r3, #0
 801b4ae:	d10b      	bne.n	801b4c8 <vTaskPlaceOnEventList+0x28>
 801b4b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b4b4:	f383 8811 	msr	BASEPRI, r3
 801b4b8:	f3bf 8f6f 	isb	sy
 801b4bc:	f3bf 8f4f 	dsb	sy
 801b4c0:	60fb      	str	r3, [r7, #12]
 801b4c2:	bf00      	nop
 801b4c4:	bf00      	nop
 801b4c6:	e7fd      	b.n	801b4c4 <vTaskPlaceOnEventList+0x24>
 801b4c8:	4b07      	ldr	r3, [pc, #28]	@ (801b4e8 <vTaskPlaceOnEventList+0x48>)
 801b4ca:	681b      	ldr	r3, [r3, #0]
 801b4cc:	3318      	adds	r3, #24
 801b4ce:	4619      	mov	r1, r3
 801b4d0:	6878      	ldr	r0, [r7, #4]
 801b4d2:	f7fe fca4 	bl	8019e1e <vListInsert>
 801b4d6:	2101      	movs	r1, #1
 801b4d8:	6838      	ldr	r0, [r7, #0]
 801b4da:	f000 fbe5 	bl	801bca8 <prvAddCurrentTaskToDelayedList>
 801b4de:	bf00      	nop
 801b4e0:	3710      	adds	r7, #16
 801b4e2:	46bd      	mov	sp, r7
 801b4e4:	bd80      	pop	{r7, pc}
 801b4e6:	bf00      	nop
 801b4e8:	20003ee4 	.word	0x20003ee4

0801b4ec <vTaskPlaceOnEventListRestricted>:
 801b4ec:	b580      	push	{r7, lr}
 801b4ee:	b086      	sub	sp, #24
 801b4f0:	af00      	add	r7, sp, #0
 801b4f2:	60f8      	str	r0, [r7, #12]
 801b4f4:	60b9      	str	r1, [r7, #8]
 801b4f6:	607a      	str	r2, [r7, #4]
 801b4f8:	68fb      	ldr	r3, [r7, #12]
 801b4fa:	2b00      	cmp	r3, #0
 801b4fc:	d10b      	bne.n	801b516 <vTaskPlaceOnEventListRestricted+0x2a>
 801b4fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b502:	f383 8811 	msr	BASEPRI, r3
 801b506:	f3bf 8f6f 	isb	sy
 801b50a:	f3bf 8f4f 	dsb	sy
 801b50e:	617b      	str	r3, [r7, #20]
 801b510:	bf00      	nop
 801b512:	bf00      	nop
 801b514:	e7fd      	b.n	801b512 <vTaskPlaceOnEventListRestricted+0x26>
 801b516:	4b0a      	ldr	r3, [pc, #40]	@ (801b540 <vTaskPlaceOnEventListRestricted+0x54>)
 801b518:	681b      	ldr	r3, [r3, #0]
 801b51a:	3318      	adds	r3, #24
 801b51c:	4619      	mov	r1, r3
 801b51e:	68f8      	ldr	r0, [r7, #12]
 801b520:	f7fe fc59 	bl	8019dd6 <vListInsertEnd>
 801b524:	687b      	ldr	r3, [r7, #4]
 801b526:	2b00      	cmp	r3, #0
 801b528:	d002      	beq.n	801b530 <vTaskPlaceOnEventListRestricted+0x44>
 801b52a:	f04f 33ff 	mov.w	r3, #4294967295
 801b52e:	60bb      	str	r3, [r7, #8]
 801b530:	6879      	ldr	r1, [r7, #4]
 801b532:	68b8      	ldr	r0, [r7, #8]
 801b534:	f000 fbb8 	bl	801bca8 <prvAddCurrentTaskToDelayedList>
 801b538:	bf00      	nop
 801b53a:	3718      	adds	r7, #24
 801b53c:	46bd      	mov	sp, r7
 801b53e:	bd80      	pop	{r7, pc}
 801b540:	20003ee4 	.word	0x20003ee4

0801b544 <xTaskRemoveFromEventList>:
 801b544:	b580      	push	{r7, lr}
 801b546:	b086      	sub	sp, #24
 801b548:	af00      	add	r7, sp, #0
 801b54a:	6078      	str	r0, [r7, #4]
 801b54c:	687b      	ldr	r3, [r7, #4]
 801b54e:	68db      	ldr	r3, [r3, #12]
 801b550:	68db      	ldr	r3, [r3, #12]
 801b552:	613b      	str	r3, [r7, #16]
 801b554:	693b      	ldr	r3, [r7, #16]
 801b556:	2b00      	cmp	r3, #0
 801b558:	d10b      	bne.n	801b572 <xTaskRemoveFromEventList+0x2e>
 801b55a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b55e:	f383 8811 	msr	BASEPRI, r3
 801b562:	f3bf 8f6f 	isb	sy
 801b566:	f3bf 8f4f 	dsb	sy
 801b56a:	60fb      	str	r3, [r7, #12]
 801b56c:	bf00      	nop
 801b56e:	bf00      	nop
 801b570:	e7fd      	b.n	801b56e <xTaskRemoveFromEventList+0x2a>
 801b572:	693b      	ldr	r3, [r7, #16]
 801b574:	3318      	adds	r3, #24
 801b576:	4618      	mov	r0, r3
 801b578:	f7fe fc8a 	bl	8019e90 <uxListRemove>
 801b57c:	4b1d      	ldr	r3, [pc, #116]	@ (801b5f4 <xTaskRemoveFromEventList+0xb0>)
 801b57e:	681b      	ldr	r3, [r3, #0]
 801b580:	2b00      	cmp	r3, #0
 801b582:	d11c      	bne.n	801b5be <xTaskRemoveFromEventList+0x7a>
 801b584:	693b      	ldr	r3, [r7, #16]
 801b586:	3304      	adds	r3, #4
 801b588:	4618      	mov	r0, r3
 801b58a:	f7fe fc81 	bl	8019e90 <uxListRemove>
 801b58e:	693b      	ldr	r3, [r7, #16]
 801b590:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b592:	2201      	movs	r2, #1
 801b594:	409a      	lsls	r2, r3
 801b596:	4b18      	ldr	r3, [pc, #96]	@ (801b5f8 <xTaskRemoveFromEventList+0xb4>)
 801b598:	681b      	ldr	r3, [r3, #0]
 801b59a:	4313      	orrs	r3, r2
 801b59c:	4a16      	ldr	r2, [pc, #88]	@ (801b5f8 <xTaskRemoveFromEventList+0xb4>)
 801b59e:	6013      	str	r3, [r2, #0]
 801b5a0:	693b      	ldr	r3, [r7, #16]
 801b5a2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b5a4:	4613      	mov	r3, r2
 801b5a6:	009b      	lsls	r3, r3, #2
 801b5a8:	4413      	add	r3, r2
 801b5aa:	009b      	lsls	r3, r3, #2
 801b5ac:	4a13      	ldr	r2, [pc, #76]	@ (801b5fc <xTaskRemoveFromEventList+0xb8>)
 801b5ae:	441a      	add	r2, r3
 801b5b0:	693b      	ldr	r3, [r7, #16]
 801b5b2:	3304      	adds	r3, #4
 801b5b4:	4619      	mov	r1, r3
 801b5b6:	4610      	mov	r0, r2
 801b5b8:	f7fe fc0d 	bl	8019dd6 <vListInsertEnd>
 801b5bc:	e005      	b.n	801b5ca <xTaskRemoveFromEventList+0x86>
 801b5be:	693b      	ldr	r3, [r7, #16]
 801b5c0:	3318      	adds	r3, #24
 801b5c2:	4619      	mov	r1, r3
 801b5c4:	480e      	ldr	r0, [pc, #56]	@ (801b600 <xTaskRemoveFromEventList+0xbc>)
 801b5c6:	f7fe fc06 	bl	8019dd6 <vListInsertEnd>
 801b5ca:	693b      	ldr	r3, [r7, #16]
 801b5cc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b5ce:	4b0d      	ldr	r3, [pc, #52]	@ (801b604 <xTaskRemoveFromEventList+0xc0>)
 801b5d0:	681b      	ldr	r3, [r3, #0]
 801b5d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b5d4:	429a      	cmp	r2, r3
 801b5d6:	d905      	bls.n	801b5e4 <xTaskRemoveFromEventList+0xa0>
 801b5d8:	2301      	movs	r3, #1
 801b5da:	617b      	str	r3, [r7, #20]
 801b5dc:	4b0a      	ldr	r3, [pc, #40]	@ (801b608 <xTaskRemoveFromEventList+0xc4>)
 801b5de:	2201      	movs	r2, #1
 801b5e0:	601a      	str	r2, [r3, #0]
 801b5e2:	e001      	b.n	801b5e8 <xTaskRemoveFromEventList+0xa4>
 801b5e4:	2300      	movs	r3, #0
 801b5e6:	617b      	str	r3, [r7, #20]
 801b5e8:	697b      	ldr	r3, [r7, #20]
 801b5ea:	4618      	mov	r0, r3
 801b5ec:	3718      	adds	r7, #24
 801b5ee:	46bd      	mov	sp, r7
 801b5f0:	bd80      	pop	{r7, pc}
 801b5f2:	bf00      	nop
 801b5f4:	200040ac 	.word	0x200040ac
 801b5f8:	2000408c 	.word	0x2000408c
 801b5fc:	20003ee8 	.word	0x20003ee8
 801b600:	20004044 	.word	0x20004044
 801b604:	20003ee4 	.word	0x20003ee4
 801b608:	20004098 	.word	0x20004098

0801b60c <vTaskRemoveFromUnorderedEventList>:
 801b60c:	b580      	push	{r7, lr}
 801b60e:	b086      	sub	sp, #24
 801b610:	af00      	add	r7, sp, #0
 801b612:	6078      	str	r0, [r7, #4]
 801b614:	6039      	str	r1, [r7, #0]
 801b616:	4b2a      	ldr	r3, [pc, #168]	@ (801b6c0 <vTaskRemoveFromUnorderedEventList+0xb4>)
 801b618:	681b      	ldr	r3, [r3, #0]
 801b61a:	2b00      	cmp	r3, #0
 801b61c:	d10b      	bne.n	801b636 <vTaskRemoveFromUnorderedEventList+0x2a>
 801b61e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b622:	f383 8811 	msr	BASEPRI, r3
 801b626:	f3bf 8f6f 	isb	sy
 801b62a:	f3bf 8f4f 	dsb	sy
 801b62e:	613b      	str	r3, [r7, #16]
 801b630:	bf00      	nop
 801b632:	bf00      	nop
 801b634:	e7fd      	b.n	801b632 <vTaskRemoveFromUnorderedEventList+0x26>
 801b636:	683b      	ldr	r3, [r7, #0]
 801b638:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 801b63c:	687b      	ldr	r3, [r7, #4]
 801b63e:	601a      	str	r2, [r3, #0]
 801b640:	687b      	ldr	r3, [r7, #4]
 801b642:	68db      	ldr	r3, [r3, #12]
 801b644:	617b      	str	r3, [r7, #20]
 801b646:	697b      	ldr	r3, [r7, #20]
 801b648:	2b00      	cmp	r3, #0
 801b64a:	d10b      	bne.n	801b664 <vTaskRemoveFromUnorderedEventList+0x58>
 801b64c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b650:	f383 8811 	msr	BASEPRI, r3
 801b654:	f3bf 8f6f 	isb	sy
 801b658:	f3bf 8f4f 	dsb	sy
 801b65c:	60fb      	str	r3, [r7, #12]
 801b65e:	bf00      	nop
 801b660:	bf00      	nop
 801b662:	e7fd      	b.n	801b660 <vTaskRemoveFromUnorderedEventList+0x54>
 801b664:	6878      	ldr	r0, [r7, #4]
 801b666:	f7fe fc13 	bl	8019e90 <uxListRemove>
 801b66a:	697b      	ldr	r3, [r7, #20]
 801b66c:	3304      	adds	r3, #4
 801b66e:	4618      	mov	r0, r3
 801b670:	f7fe fc0e 	bl	8019e90 <uxListRemove>
 801b674:	697b      	ldr	r3, [r7, #20]
 801b676:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b678:	2201      	movs	r2, #1
 801b67a:	409a      	lsls	r2, r3
 801b67c:	4b11      	ldr	r3, [pc, #68]	@ (801b6c4 <vTaskRemoveFromUnorderedEventList+0xb8>)
 801b67e:	681b      	ldr	r3, [r3, #0]
 801b680:	4313      	orrs	r3, r2
 801b682:	4a10      	ldr	r2, [pc, #64]	@ (801b6c4 <vTaskRemoveFromUnorderedEventList+0xb8>)
 801b684:	6013      	str	r3, [r2, #0]
 801b686:	697b      	ldr	r3, [r7, #20]
 801b688:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b68a:	4613      	mov	r3, r2
 801b68c:	009b      	lsls	r3, r3, #2
 801b68e:	4413      	add	r3, r2
 801b690:	009b      	lsls	r3, r3, #2
 801b692:	4a0d      	ldr	r2, [pc, #52]	@ (801b6c8 <vTaskRemoveFromUnorderedEventList+0xbc>)
 801b694:	441a      	add	r2, r3
 801b696:	697b      	ldr	r3, [r7, #20]
 801b698:	3304      	adds	r3, #4
 801b69a:	4619      	mov	r1, r3
 801b69c:	4610      	mov	r0, r2
 801b69e:	f7fe fb9a 	bl	8019dd6 <vListInsertEnd>
 801b6a2:	697b      	ldr	r3, [r7, #20]
 801b6a4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801b6a6:	4b09      	ldr	r3, [pc, #36]	@ (801b6cc <vTaskRemoveFromUnorderedEventList+0xc0>)
 801b6a8:	681b      	ldr	r3, [r3, #0]
 801b6aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b6ac:	429a      	cmp	r2, r3
 801b6ae:	d902      	bls.n	801b6b6 <vTaskRemoveFromUnorderedEventList+0xaa>
 801b6b0:	4b07      	ldr	r3, [pc, #28]	@ (801b6d0 <vTaskRemoveFromUnorderedEventList+0xc4>)
 801b6b2:	2201      	movs	r2, #1
 801b6b4:	601a      	str	r2, [r3, #0]
 801b6b6:	bf00      	nop
 801b6b8:	3718      	adds	r7, #24
 801b6ba:	46bd      	mov	sp, r7
 801b6bc:	bd80      	pop	{r7, pc}
 801b6be:	bf00      	nop
 801b6c0:	200040ac 	.word	0x200040ac
 801b6c4:	2000408c 	.word	0x2000408c
 801b6c8:	20003ee8 	.word	0x20003ee8
 801b6cc:	20003ee4 	.word	0x20003ee4
 801b6d0:	20004098 	.word	0x20004098

0801b6d4 <vTaskInternalSetTimeOutState>:
 801b6d4:	b480      	push	{r7}
 801b6d6:	b083      	sub	sp, #12
 801b6d8:	af00      	add	r7, sp, #0
 801b6da:	6078      	str	r0, [r7, #4]
 801b6dc:	4b06      	ldr	r3, [pc, #24]	@ (801b6f8 <vTaskInternalSetTimeOutState+0x24>)
 801b6de:	681a      	ldr	r2, [r3, #0]
 801b6e0:	687b      	ldr	r3, [r7, #4]
 801b6e2:	601a      	str	r2, [r3, #0]
 801b6e4:	4b05      	ldr	r3, [pc, #20]	@ (801b6fc <vTaskInternalSetTimeOutState+0x28>)
 801b6e6:	681a      	ldr	r2, [r3, #0]
 801b6e8:	687b      	ldr	r3, [r7, #4]
 801b6ea:	605a      	str	r2, [r3, #4]
 801b6ec:	bf00      	nop
 801b6ee:	370c      	adds	r7, #12
 801b6f0:	46bd      	mov	sp, r7
 801b6f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6f6:	4770      	bx	lr
 801b6f8:	2000409c 	.word	0x2000409c
 801b6fc:	20004088 	.word	0x20004088

0801b700 <xTaskCheckForTimeOut>:
 801b700:	b580      	push	{r7, lr}
 801b702:	b088      	sub	sp, #32
 801b704:	af00      	add	r7, sp, #0
 801b706:	6078      	str	r0, [r7, #4]
 801b708:	6039      	str	r1, [r7, #0]
 801b70a:	687b      	ldr	r3, [r7, #4]
 801b70c:	2b00      	cmp	r3, #0
 801b70e:	d10b      	bne.n	801b728 <xTaskCheckForTimeOut+0x28>
 801b710:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b714:	f383 8811 	msr	BASEPRI, r3
 801b718:	f3bf 8f6f 	isb	sy
 801b71c:	f3bf 8f4f 	dsb	sy
 801b720:	613b      	str	r3, [r7, #16]
 801b722:	bf00      	nop
 801b724:	bf00      	nop
 801b726:	e7fd      	b.n	801b724 <xTaskCheckForTimeOut+0x24>
 801b728:	683b      	ldr	r3, [r7, #0]
 801b72a:	2b00      	cmp	r3, #0
 801b72c:	d10b      	bne.n	801b746 <xTaskCheckForTimeOut+0x46>
 801b72e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b732:	f383 8811 	msr	BASEPRI, r3
 801b736:	f3bf 8f6f 	isb	sy
 801b73a:	f3bf 8f4f 	dsb	sy
 801b73e:	60fb      	str	r3, [r7, #12]
 801b740:	bf00      	nop
 801b742:	bf00      	nop
 801b744:	e7fd      	b.n	801b742 <xTaskCheckForTimeOut+0x42>
 801b746:	f000 ffbf 	bl	801c6c8 <vPortEnterCritical>
 801b74a:	4b1d      	ldr	r3, [pc, #116]	@ (801b7c0 <xTaskCheckForTimeOut+0xc0>)
 801b74c:	681b      	ldr	r3, [r3, #0]
 801b74e:	61bb      	str	r3, [r7, #24]
 801b750:	687b      	ldr	r3, [r7, #4]
 801b752:	685b      	ldr	r3, [r3, #4]
 801b754:	69ba      	ldr	r2, [r7, #24]
 801b756:	1ad3      	subs	r3, r2, r3
 801b758:	617b      	str	r3, [r7, #20]
 801b75a:	683b      	ldr	r3, [r7, #0]
 801b75c:	681b      	ldr	r3, [r3, #0]
 801b75e:	f1b3 3fff 	cmp.w	r3, #4294967295
 801b762:	d102      	bne.n	801b76a <xTaskCheckForTimeOut+0x6a>
 801b764:	2300      	movs	r3, #0
 801b766:	61fb      	str	r3, [r7, #28]
 801b768:	e023      	b.n	801b7b2 <xTaskCheckForTimeOut+0xb2>
 801b76a:	687b      	ldr	r3, [r7, #4]
 801b76c:	681a      	ldr	r2, [r3, #0]
 801b76e:	4b15      	ldr	r3, [pc, #84]	@ (801b7c4 <xTaskCheckForTimeOut+0xc4>)
 801b770:	681b      	ldr	r3, [r3, #0]
 801b772:	429a      	cmp	r2, r3
 801b774:	d007      	beq.n	801b786 <xTaskCheckForTimeOut+0x86>
 801b776:	687b      	ldr	r3, [r7, #4]
 801b778:	685b      	ldr	r3, [r3, #4]
 801b77a:	69ba      	ldr	r2, [r7, #24]
 801b77c:	429a      	cmp	r2, r3
 801b77e:	d302      	bcc.n	801b786 <xTaskCheckForTimeOut+0x86>
 801b780:	2301      	movs	r3, #1
 801b782:	61fb      	str	r3, [r7, #28]
 801b784:	e015      	b.n	801b7b2 <xTaskCheckForTimeOut+0xb2>
 801b786:	683b      	ldr	r3, [r7, #0]
 801b788:	681b      	ldr	r3, [r3, #0]
 801b78a:	697a      	ldr	r2, [r7, #20]
 801b78c:	429a      	cmp	r2, r3
 801b78e:	d20b      	bcs.n	801b7a8 <xTaskCheckForTimeOut+0xa8>
 801b790:	683b      	ldr	r3, [r7, #0]
 801b792:	681a      	ldr	r2, [r3, #0]
 801b794:	697b      	ldr	r3, [r7, #20]
 801b796:	1ad2      	subs	r2, r2, r3
 801b798:	683b      	ldr	r3, [r7, #0]
 801b79a:	601a      	str	r2, [r3, #0]
 801b79c:	6878      	ldr	r0, [r7, #4]
 801b79e:	f7ff ff99 	bl	801b6d4 <vTaskInternalSetTimeOutState>
 801b7a2:	2300      	movs	r3, #0
 801b7a4:	61fb      	str	r3, [r7, #28]
 801b7a6:	e004      	b.n	801b7b2 <xTaskCheckForTimeOut+0xb2>
 801b7a8:	683b      	ldr	r3, [r7, #0]
 801b7aa:	2200      	movs	r2, #0
 801b7ac:	601a      	str	r2, [r3, #0]
 801b7ae:	2301      	movs	r3, #1
 801b7b0:	61fb      	str	r3, [r7, #28]
 801b7b2:	f000 ffbb 	bl	801c72c <vPortExitCritical>
 801b7b6:	69fb      	ldr	r3, [r7, #28]
 801b7b8:	4618      	mov	r0, r3
 801b7ba:	3720      	adds	r7, #32
 801b7bc:	46bd      	mov	sp, r7
 801b7be:	bd80      	pop	{r7, pc}
 801b7c0:	20004088 	.word	0x20004088
 801b7c4:	2000409c 	.word	0x2000409c

0801b7c8 <vTaskMissedYield>:
 801b7c8:	b480      	push	{r7}
 801b7ca:	af00      	add	r7, sp, #0
 801b7cc:	4b03      	ldr	r3, [pc, #12]	@ (801b7dc <vTaskMissedYield+0x14>)
 801b7ce:	2201      	movs	r2, #1
 801b7d0:	601a      	str	r2, [r3, #0]
 801b7d2:	bf00      	nop
 801b7d4:	46bd      	mov	sp, r7
 801b7d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b7da:	4770      	bx	lr
 801b7dc:	20004098 	.word	0x20004098

0801b7e0 <prvIdleTask>:
 801b7e0:	b580      	push	{r7, lr}
 801b7e2:	b082      	sub	sp, #8
 801b7e4:	af00      	add	r7, sp, #0
 801b7e6:	6078      	str	r0, [r7, #4]
 801b7e8:	f000 f852 	bl	801b890 <prvCheckTasksWaitingTermination>
 801b7ec:	4b06      	ldr	r3, [pc, #24]	@ (801b808 <prvIdleTask+0x28>)
 801b7ee:	681b      	ldr	r3, [r3, #0]
 801b7f0:	2b01      	cmp	r3, #1
 801b7f2:	d9f9      	bls.n	801b7e8 <prvIdleTask+0x8>
 801b7f4:	4b05      	ldr	r3, [pc, #20]	@ (801b80c <prvIdleTask+0x2c>)
 801b7f6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801b7fa:	601a      	str	r2, [r3, #0]
 801b7fc:	f3bf 8f4f 	dsb	sy
 801b800:	f3bf 8f6f 	isb	sy
 801b804:	e7f0      	b.n	801b7e8 <prvIdleTask+0x8>
 801b806:	bf00      	nop
 801b808:	20003ee8 	.word	0x20003ee8
 801b80c:	e000ed04 	.word	0xe000ed04

0801b810 <prvInitialiseTaskLists>:
 801b810:	b580      	push	{r7, lr}
 801b812:	b082      	sub	sp, #8
 801b814:	af00      	add	r7, sp, #0
 801b816:	2300      	movs	r3, #0
 801b818:	607b      	str	r3, [r7, #4]
 801b81a:	e00c      	b.n	801b836 <prvInitialiseTaskLists+0x26>
 801b81c:	687a      	ldr	r2, [r7, #4]
 801b81e:	4613      	mov	r3, r2
 801b820:	009b      	lsls	r3, r3, #2
 801b822:	4413      	add	r3, r2
 801b824:	009b      	lsls	r3, r3, #2
 801b826:	4a12      	ldr	r2, [pc, #72]	@ (801b870 <prvInitialiseTaskLists+0x60>)
 801b828:	4413      	add	r3, r2
 801b82a:	4618      	mov	r0, r3
 801b82c:	f7fe faa6 	bl	8019d7c <vListInitialise>
 801b830:	687b      	ldr	r3, [r7, #4]
 801b832:	3301      	adds	r3, #1
 801b834:	607b      	str	r3, [r7, #4]
 801b836:	687b      	ldr	r3, [r7, #4]
 801b838:	2b0e      	cmp	r3, #14
 801b83a:	d9ef      	bls.n	801b81c <prvInitialiseTaskLists+0xc>
 801b83c:	480d      	ldr	r0, [pc, #52]	@ (801b874 <prvInitialiseTaskLists+0x64>)
 801b83e:	f7fe fa9d 	bl	8019d7c <vListInitialise>
 801b842:	480d      	ldr	r0, [pc, #52]	@ (801b878 <prvInitialiseTaskLists+0x68>)
 801b844:	f7fe fa9a 	bl	8019d7c <vListInitialise>
 801b848:	480c      	ldr	r0, [pc, #48]	@ (801b87c <prvInitialiseTaskLists+0x6c>)
 801b84a:	f7fe fa97 	bl	8019d7c <vListInitialise>
 801b84e:	480c      	ldr	r0, [pc, #48]	@ (801b880 <prvInitialiseTaskLists+0x70>)
 801b850:	f7fe fa94 	bl	8019d7c <vListInitialise>
 801b854:	480b      	ldr	r0, [pc, #44]	@ (801b884 <prvInitialiseTaskLists+0x74>)
 801b856:	f7fe fa91 	bl	8019d7c <vListInitialise>
 801b85a:	4b0b      	ldr	r3, [pc, #44]	@ (801b888 <prvInitialiseTaskLists+0x78>)
 801b85c:	4a05      	ldr	r2, [pc, #20]	@ (801b874 <prvInitialiseTaskLists+0x64>)
 801b85e:	601a      	str	r2, [r3, #0]
 801b860:	4b0a      	ldr	r3, [pc, #40]	@ (801b88c <prvInitialiseTaskLists+0x7c>)
 801b862:	4a05      	ldr	r2, [pc, #20]	@ (801b878 <prvInitialiseTaskLists+0x68>)
 801b864:	601a      	str	r2, [r3, #0]
 801b866:	bf00      	nop
 801b868:	3708      	adds	r7, #8
 801b86a:	46bd      	mov	sp, r7
 801b86c:	bd80      	pop	{r7, pc}
 801b86e:	bf00      	nop
 801b870:	20003ee8 	.word	0x20003ee8
 801b874:	20004014 	.word	0x20004014
 801b878:	20004028 	.word	0x20004028
 801b87c:	20004044 	.word	0x20004044
 801b880:	20004058 	.word	0x20004058
 801b884:	20004070 	.word	0x20004070
 801b888:	2000403c 	.word	0x2000403c
 801b88c:	20004040 	.word	0x20004040

0801b890 <prvCheckTasksWaitingTermination>:
 801b890:	b580      	push	{r7, lr}
 801b892:	b082      	sub	sp, #8
 801b894:	af00      	add	r7, sp, #0
 801b896:	e019      	b.n	801b8cc <prvCheckTasksWaitingTermination+0x3c>
 801b898:	f000 ff16 	bl	801c6c8 <vPortEnterCritical>
 801b89c:	4b10      	ldr	r3, [pc, #64]	@ (801b8e0 <prvCheckTasksWaitingTermination+0x50>)
 801b89e:	68db      	ldr	r3, [r3, #12]
 801b8a0:	68db      	ldr	r3, [r3, #12]
 801b8a2:	607b      	str	r3, [r7, #4]
 801b8a4:	687b      	ldr	r3, [r7, #4]
 801b8a6:	3304      	adds	r3, #4
 801b8a8:	4618      	mov	r0, r3
 801b8aa:	f7fe faf1 	bl	8019e90 <uxListRemove>
 801b8ae:	4b0d      	ldr	r3, [pc, #52]	@ (801b8e4 <prvCheckTasksWaitingTermination+0x54>)
 801b8b0:	681b      	ldr	r3, [r3, #0]
 801b8b2:	3b01      	subs	r3, #1
 801b8b4:	4a0b      	ldr	r2, [pc, #44]	@ (801b8e4 <prvCheckTasksWaitingTermination+0x54>)
 801b8b6:	6013      	str	r3, [r2, #0]
 801b8b8:	4b0b      	ldr	r3, [pc, #44]	@ (801b8e8 <prvCheckTasksWaitingTermination+0x58>)
 801b8ba:	681b      	ldr	r3, [r3, #0]
 801b8bc:	3b01      	subs	r3, #1
 801b8be:	4a0a      	ldr	r2, [pc, #40]	@ (801b8e8 <prvCheckTasksWaitingTermination+0x58>)
 801b8c0:	6013      	str	r3, [r2, #0]
 801b8c2:	f000 ff33 	bl	801c72c <vPortExitCritical>
 801b8c6:	6878      	ldr	r0, [r7, #4]
 801b8c8:	f000 f810 	bl	801b8ec <prvDeleteTCB>
 801b8cc:	4b06      	ldr	r3, [pc, #24]	@ (801b8e8 <prvCheckTasksWaitingTermination+0x58>)
 801b8ce:	681b      	ldr	r3, [r3, #0]
 801b8d0:	2b00      	cmp	r3, #0
 801b8d2:	d1e1      	bne.n	801b898 <prvCheckTasksWaitingTermination+0x8>
 801b8d4:	bf00      	nop
 801b8d6:	bf00      	nop
 801b8d8:	3708      	adds	r7, #8
 801b8da:	46bd      	mov	sp, r7
 801b8dc:	bd80      	pop	{r7, pc}
 801b8de:	bf00      	nop
 801b8e0:	20004058 	.word	0x20004058
 801b8e4:	20004084 	.word	0x20004084
 801b8e8:	2000406c 	.word	0x2000406c

0801b8ec <prvDeleteTCB>:
 801b8ec:	b580      	push	{r7, lr}
 801b8ee:	b084      	sub	sp, #16
 801b8f0:	af00      	add	r7, sp, #0
 801b8f2:	6078      	str	r0, [r7, #4]
 801b8f4:	687b      	ldr	r3, [r7, #4]
 801b8f6:	3358      	adds	r3, #88	@ 0x58
 801b8f8:	4618      	mov	r0, r3
 801b8fa:	f002 f883 	bl	801da04 <_reclaim_reent>
 801b8fe:	687b      	ldr	r3, [r7, #4]
 801b900:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 801b904:	2b00      	cmp	r3, #0
 801b906:	d108      	bne.n	801b91a <prvDeleteTCB+0x2e>
 801b908:	687b      	ldr	r3, [r7, #4]
 801b90a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b90c:	4618      	mov	r0, r3
 801b90e:	f001 f8cb 	bl	801caa8 <vPortFree>
 801b912:	6878      	ldr	r0, [r7, #4]
 801b914:	f001 f8c8 	bl	801caa8 <vPortFree>
 801b918:	e019      	b.n	801b94e <prvDeleteTCB+0x62>
 801b91a:	687b      	ldr	r3, [r7, #4]
 801b91c:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 801b920:	2b01      	cmp	r3, #1
 801b922:	d103      	bne.n	801b92c <prvDeleteTCB+0x40>
 801b924:	6878      	ldr	r0, [r7, #4]
 801b926:	f001 f8bf 	bl	801caa8 <vPortFree>
 801b92a:	e010      	b.n	801b94e <prvDeleteTCB+0x62>
 801b92c:	687b      	ldr	r3, [r7, #4]
 801b92e:	f893 317d 	ldrb.w	r3, [r3, #381]	@ 0x17d
 801b932:	2b02      	cmp	r3, #2
 801b934:	d00b      	beq.n	801b94e <prvDeleteTCB+0x62>
 801b936:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b93a:	f383 8811 	msr	BASEPRI, r3
 801b93e:	f3bf 8f6f 	isb	sy
 801b942:	f3bf 8f4f 	dsb	sy
 801b946:	60fb      	str	r3, [r7, #12]
 801b948:	bf00      	nop
 801b94a:	bf00      	nop
 801b94c:	e7fd      	b.n	801b94a <prvDeleteTCB+0x5e>
 801b94e:	bf00      	nop
 801b950:	3710      	adds	r7, #16
 801b952:	46bd      	mov	sp, r7
 801b954:	bd80      	pop	{r7, pc}
	...

0801b958 <prvResetNextTaskUnblockTime>:
 801b958:	b480      	push	{r7}
 801b95a:	b083      	sub	sp, #12
 801b95c:	af00      	add	r7, sp, #0
 801b95e:	4b0c      	ldr	r3, [pc, #48]	@ (801b990 <prvResetNextTaskUnblockTime+0x38>)
 801b960:	681b      	ldr	r3, [r3, #0]
 801b962:	681b      	ldr	r3, [r3, #0]
 801b964:	2b00      	cmp	r3, #0
 801b966:	d104      	bne.n	801b972 <prvResetNextTaskUnblockTime+0x1a>
 801b968:	4b0a      	ldr	r3, [pc, #40]	@ (801b994 <prvResetNextTaskUnblockTime+0x3c>)
 801b96a:	f04f 32ff 	mov.w	r2, #4294967295
 801b96e:	601a      	str	r2, [r3, #0]
 801b970:	e008      	b.n	801b984 <prvResetNextTaskUnblockTime+0x2c>
 801b972:	4b07      	ldr	r3, [pc, #28]	@ (801b990 <prvResetNextTaskUnblockTime+0x38>)
 801b974:	681b      	ldr	r3, [r3, #0]
 801b976:	68db      	ldr	r3, [r3, #12]
 801b978:	68db      	ldr	r3, [r3, #12]
 801b97a:	607b      	str	r3, [r7, #4]
 801b97c:	687b      	ldr	r3, [r7, #4]
 801b97e:	685b      	ldr	r3, [r3, #4]
 801b980:	4a04      	ldr	r2, [pc, #16]	@ (801b994 <prvResetNextTaskUnblockTime+0x3c>)
 801b982:	6013      	str	r3, [r2, #0]
 801b984:	bf00      	nop
 801b986:	370c      	adds	r7, #12
 801b988:	46bd      	mov	sp, r7
 801b98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b98e:	4770      	bx	lr
 801b990:	2000403c 	.word	0x2000403c
 801b994:	200040a4 	.word	0x200040a4

0801b998 <xTaskGetSchedulerState>:
 801b998:	b480      	push	{r7}
 801b99a:	b083      	sub	sp, #12
 801b99c:	af00      	add	r7, sp, #0
 801b99e:	4b0b      	ldr	r3, [pc, #44]	@ (801b9cc <xTaskGetSchedulerState+0x34>)
 801b9a0:	681b      	ldr	r3, [r3, #0]
 801b9a2:	2b00      	cmp	r3, #0
 801b9a4:	d102      	bne.n	801b9ac <xTaskGetSchedulerState+0x14>
 801b9a6:	2301      	movs	r3, #1
 801b9a8:	607b      	str	r3, [r7, #4]
 801b9aa:	e008      	b.n	801b9be <xTaskGetSchedulerState+0x26>
 801b9ac:	4b08      	ldr	r3, [pc, #32]	@ (801b9d0 <xTaskGetSchedulerState+0x38>)
 801b9ae:	681b      	ldr	r3, [r3, #0]
 801b9b0:	2b00      	cmp	r3, #0
 801b9b2:	d102      	bne.n	801b9ba <xTaskGetSchedulerState+0x22>
 801b9b4:	2302      	movs	r3, #2
 801b9b6:	607b      	str	r3, [r7, #4]
 801b9b8:	e001      	b.n	801b9be <xTaskGetSchedulerState+0x26>
 801b9ba:	2300      	movs	r3, #0
 801b9bc:	607b      	str	r3, [r7, #4]
 801b9be:	687b      	ldr	r3, [r7, #4]
 801b9c0:	4618      	mov	r0, r3
 801b9c2:	370c      	adds	r7, #12
 801b9c4:	46bd      	mov	sp, r7
 801b9c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b9ca:	4770      	bx	lr
 801b9cc:	20004090 	.word	0x20004090
 801b9d0:	200040ac 	.word	0x200040ac

0801b9d4 <xTaskPriorityDisinherit>:
 801b9d4:	b580      	push	{r7, lr}
 801b9d6:	b086      	sub	sp, #24
 801b9d8:	af00      	add	r7, sp, #0
 801b9da:	6078      	str	r0, [r7, #4]
 801b9dc:	687b      	ldr	r3, [r7, #4]
 801b9de:	613b      	str	r3, [r7, #16]
 801b9e0:	2300      	movs	r3, #0
 801b9e2:	617b      	str	r3, [r7, #20]
 801b9e4:	687b      	ldr	r3, [r7, #4]
 801b9e6:	2b00      	cmp	r3, #0
 801b9e8:	d070      	beq.n	801bacc <xTaskPriorityDisinherit+0xf8>
 801b9ea:	4b3b      	ldr	r3, [pc, #236]	@ (801bad8 <xTaskPriorityDisinherit+0x104>)
 801b9ec:	681b      	ldr	r3, [r3, #0]
 801b9ee:	693a      	ldr	r2, [r7, #16]
 801b9f0:	429a      	cmp	r2, r3
 801b9f2:	d00b      	beq.n	801ba0c <xTaskPriorityDisinherit+0x38>
 801b9f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801b9f8:	f383 8811 	msr	BASEPRI, r3
 801b9fc:	f3bf 8f6f 	isb	sy
 801ba00:	f3bf 8f4f 	dsb	sy
 801ba04:	60fb      	str	r3, [r7, #12]
 801ba06:	bf00      	nop
 801ba08:	bf00      	nop
 801ba0a:	e7fd      	b.n	801ba08 <xTaskPriorityDisinherit+0x34>
 801ba0c:	693b      	ldr	r3, [r7, #16]
 801ba0e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801ba10:	2b00      	cmp	r3, #0
 801ba12:	d10b      	bne.n	801ba2c <xTaskPriorityDisinherit+0x58>
 801ba14:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801ba18:	f383 8811 	msr	BASEPRI, r3
 801ba1c:	f3bf 8f6f 	isb	sy
 801ba20:	f3bf 8f4f 	dsb	sy
 801ba24:	60bb      	str	r3, [r7, #8]
 801ba26:	bf00      	nop
 801ba28:	bf00      	nop
 801ba2a:	e7fd      	b.n	801ba28 <xTaskPriorityDisinherit+0x54>
 801ba2c:	693b      	ldr	r3, [r7, #16]
 801ba2e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801ba30:	1e5a      	subs	r2, r3, #1
 801ba32:	693b      	ldr	r3, [r7, #16]
 801ba34:	651a      	str	r2, [r3, #80]	@ 0x50
 801ba36:	693b      	ldr	r3, [r7, #16]
 801ba38:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801ba3a:	693b      	ldr	r3, [r7, #16]
 801ba3c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801ba3e:	429a      	cmp	r2, r3
 801ba40:	d044      	beq.n	801bacc <xTaskPriorityDisinherit+0xf8>
 801ba42:	693b      	ldr	r3, [r7, #16]
 801ba44:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801ba46:	2b00      	cmp	r3, #0
 801ba48:	d140      	bne.n	801bacc <xTaskPriorityDisinherit+0xf8>
 801ba4a:	693b      	ldr	r3, [r7, #16]
 801ba4c:	3304      	adds	r3, #4
 801ba4e:	4618      	mov	r0, r3
 801ba50:	f7fe fa1e 	bl	8019e90 <uxListRemove>
 801ba54:	4603      	mov	r3, r0
 801ba56:	2b00      	cmp	r3, #0
 801ba58:	d115      	bne.n	801ba86 <xTaskPriorityDisinherit+0xb2>
 801ba5a:	693b      	ldr	r3, [r7, #16]
 801ba5c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801ba5e:	491f      	ldr	r1, [pc, #124]	@ (801badc <xTaskPriorityDisinherit+0x108>)
 801ba60:	4613      	mov	r3, r2
 801ba62:	009b      	lsls	r3, r3, #2
 801ba64:	4413      	add	r3, r2
 801ba66:	009b      	lsls	r3, r3, #2
 801ba68:	440b      	add	r3, r1
 801ba6a:	681b      	ldr	r3, [r3, #0]
 801ba6c:	2b00      	cmp	r3, #0
 801ba6e:	d10a      	bne.n	801ba86 <xTaskPriorityDisinherit+0xb2>
 801ba70:	693b      	ldr	r3, [r7, #16]
 801ba72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba74:	2201      	movs	r2, #1
 801ba76:	fa02 f303 	lsl.w	r3, r2, r3
 801ba7a:	43da      	mvns	r2, r3
 801ba7c:	4b18      	ldr	r3, [pc, #96]	@ (801bae0 <xTaskPriorityDisinherit+0x10c>)
 801ba7e:	681b      	ldr	r3, [r3, #0]
 801ba80:	4013      	ands	r3, r2
 801ba82:	4a17      	ldr	r2, [pc, #92]	@ (801bae0 <xTaskPriorityDisinherit+0x10c>)
 801ba84:	6013      	str	r3, [r2, #0]
 801ba86:	693b      	ldr	r3, [r7, #16]
 801ba88:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 801ba8a:	693b      	ldr	r3, [r7, #16]
 801ba8c:	62da      	str	r2, [r3, #44]	@ 0x2c
 801ba8e:	693b      	ldr	r3, [r7, #16]
 801ba90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba92:	f1c3 020f 	rsb	r2, r3, #15
 801ba96:	693b      	ldr	r3, [r7, #16]
 801ba98:	619a      	str	r2, [r3, #24]
 801ba9a:	693b      	ldr	r3, [r7, #16]
 801ba9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba9e:	2201      	movs	r2, #1
 801baa0:	409a      	lsls	r2, r3
 801baa2:	4b0f      	ldr	r3, [pc, #60]	@ (801bae0 <xTaskPriorityDisinherit+0x10c>)
 801baa4:	681b      	ldr	r3, [r3, #0]
 801baa6:	4313      	orrs	r3, r2
 801baa8:	4a0d      	ldr	r2, [pc, #52]	@ (801bae0 <xTaskPriorityDisinherit+0x10c>)
 801baaa:	6013      	str	r3, [r2, #0]
 801baac:	693b      	ldr	r3, [r7, #16]
 801baae:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801bab0:	4613      	mov	r3, r2
 801bab2:	009b      	lsls	r3, r3, #2
 801bab4:	4413      	add	r3, r2
 801bab6:	009b      	lsls	r3, r3, #2
 801bab8:	4a08      	ldr	r2, [pc, #32]	@ (801badc <xTaskPriorityDisinherit+0x108>)
 801baba:	441a      	add	r2, r3
 801babc:	693b      	ldr	r3, [r7, #16]
 801babe:	3304      	adds	r3, #4
 801bac0:	4619      	mov	r1, r3
 801bac2:	4610      	mov	r0, r2
 801bac4:	f7fe f987 	bl	8019dd6 <vListInsertEnd>
 801bac8:	2301      	movs	r3, #1
 801baca:	617b      	str	r3, [r7, #20]
 801bacc:	697b      	ldr	r3, [r7, #20]
 801bace:	4618      	mov	r0, r3
 801bad0:	3718      	adds	r7, #24
 801bad2:	46bd      	mov	sp, r7
 801bad4:	bd80      	pop	{r7, pc}
 801bad6:	bf00      	nop
 801bad8:	20003ee4 	.word	0x20003ee4
 801badc:	20003ee8 	.word	0x20003ee8
 801bae0:	2000408c 	.word	0x2000408c

0801bae4 <ulTaskNotifyTake>:
 801bae4:	b580      	push	{r7, lr}
 801bae6:	b084      	sub	sp, #16
 801bae8:	af00      	add	r7, sp, #0
 801baea:	6078      	str	r0, [r7, #4]
 801baec:	6039      	str	r1, [r7, #0]
 801baee:	f000 fdeb 	bl	801c6c8 <vPortEnterCritical>
 801baf2:	4b20      	ldr	r3, [pc, #128]	@ (801bb74 <ulTaskNotifyTake+0x90>)
 801baf4:	681b      	ldr	r3, [r3, #0]
 801baf6:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 801bafa:	2b00      	cmp	r3, #0
 801bafc:	d113      	bne.n	801bb26 <ulTaskNotifyTake+0x42>
 801bafe:	4b1d      	ldr	r3, [pc, #116]	@ (801bb74 <ulTaskNotifyTake+0x90>)
 801bb00:	681b      	ldr	r3, [r3, #0]
 801bb02:	2201      	movs	r2, #1
 801bb04:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 801bb08:	683b      	ldr	r3, [r7, #0]
 801bb0a:	2b00      	cmp	r3, #0
 801bb0c:	d00b      	beq.n	801bb26 <ulTaskNotifyTake+0x42>
 801bb0e:	2101      	movs	r1, #1
 801bb10:	6838      	ldr	r0, [r7, #0]
 801bb12:	f000 f8c9 	bl	801bca8 <prvAddCurrentTaskToDelayedList>
 801bb16:	4b18      	ldr	r3, [pc, #96]	@ (801bb78 <ulTaskNotifyTake+0x94>)
 801bb18:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801bb1c:	601a      	str	r2, [r3, #0]
 801bb1e:	f3bf 8f4f 	dsb	sy
 801bb22:	f3bf 8f6f 	isb	sy
 801bb26:	f000 fe01 	bl	801c72c <vPortExitCritical>
 801bb2a:	f000 fdcd 	bl	801c6c8 <vPortEnterCritical>
 801bb2e:	4b11      	ldr	r3, [pc, #68]	@ (801bb74 <ulTaskNotifyTake+0x90>)
 801bb30:	681b      	ldr	r3, [r3, #0]
 801bb32:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 801bb36:	60fb      	str	r3, [r7, #12]
 801bb38:	68fb      	ldr	r3, [r7, #12]
 801bb3a:	2b00      	cmp	r3, #0
 801bb3c:	d00e      	beq.n	801bb5c <ulTaskNotifyTake+0x78>
 801bb3e:	687b      	ldr	r3, [r7, #4]
 801bb40:	2b00      	cmp	r3, #0
 801bb42:	d005      	beq.n	801bb50 <ulTaskNotifyTake+0x6c>
 801bb44:	4b0b      	ldr	r3, [pc, #44]	@ (801bb74 <ulTaskNotifyTake+0x90>)
 801bb46:	681b      	ldr	r3, [r3, #0]
 801bb48:	2200      	movs	r2, #0
 801bb4a:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801bb4e:	e005      	b.n	801bb5c <ulTaskNotifyTake+0x78>
 801bb50:	4b08      	ldr	r3, [pc, #32]	@ (801bb74 <ulTaskNotifyTake+0x90>)
 801bb52:	681b      	ldr	r3, [r3, #0]
 801bb54:	68fa      	ldr	r2, [r7, #12]
 801bb56:	3a01      	subs	r2, #1
 801bb58:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801bb5c:	4b05      	ldr	r3, [pc, #20]	@ (801bb74 <ulTaskNotifyTake+0x90>)
 801bb5e:	681b      	ldr	r3, [r3, #0]
 801bb60:	2200      	movs	r2, #0
 801bb62:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 801bb66:	f000 fde1 	bl	801c72c <vPortExitCritical>
 801bb6a:	68fb      	ldr	r3, [r7, #12]
 801bb6c:	4618      	mov	r0, r3
 801bb6e:	3710      	adds	r7, #16
 801bb70:	46bd      	mov	sp, r7
 801bb72:	bd80      	pop	{r7, pc}
 801bb74:	20003ee4 	.word	0x20003ee4
 801bb78:	e000ed04 	.word	0xe000ed04

0801bb7c <vTaskNotifyGiveFromISR>:
 801bb7c:	b580      	push	{r7, lr}
 801bb7e:	b08a      	sub	sp, #40	@ 0x28
 801bb80:	af00      	add	r7, sp, #0
 801bb82:	6078      	str	r0, [r7, #4]
 801bb84:	6039      	str	r1, [r7, #0]
 801bb86:	687b      	ldr	r3, [r7, #4]
 801bb88:	2b00      	cmp	r3, #0
 801bb8a:	d10b      	bne.n	801bba4 <vTaskNotifyGiveFromISR+0x28>
 801bb8c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801bb90:	f383 8811 	msr	BASEPRI, r3
 801bb94:	f3bf 8f6f 	isb	sy
 801bb98:	f3bf 8f4f 	dsb	sy
 801bb9c:	61bb      	str	r3, [r7, #24]
 801bb9e:	bf00      	nop
 801bba0:	bf00      	nop
 801bba2:	e7fd      	b.n	801bba0 <vTaskNotifyGiveFromISR+0x24>
 801bba4:	f000 fe70 	bl	801c888 <vPortValidateInterruptPriority>
 801bba8:	687b      	ldr	r3, [r7, #4]
 801bbaa:	627b      	str	r3, [r7, #36]	@ 0x24
 801bbac:	f3ef 8211 	mrs	r2, BASEPRI
 801bbb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801bbb4:	f383 8811 	msr	BASEPRI, r3
 801bbb8:	f3bf 8f6f 	isb	sy
 801bbbc:	f3bf 8f4f 	dsb	sy
 801bbc0:	617a      	str	r2, [r7, #20]
 801bbc2:	613b      	str	r3, [r7, #16]
 801bbc4:	697b      	ldr	r3, [r7, #20]
 801bbc6:	623b      	str	r3, [r7, #32]
 801bbc8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bbca:	f893 317c 	ldrb.w	r3, [r3, #380]	@ 0x17c
 801bbce:	77fb      	strb	r3, [r7, #31]
 801bbd0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bbd2:	2202      	movs	r2, #2
 801bbd4:	f883 217c 	strb.w	r2, [r3, #380]	@ 0x17c
 801bbd8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bbda:	f8d3 3178 	ldr.w	r3, [r3, #376]	@ 0x178
 801bbde:	1c5a      	adds	r2, r3, #1
 801bbe0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bbe2:	f8c3 2178 	str.w	r2, [r3, #376]	@ 0x178
 801bbe6:	7ffb      	ldrb	r3, [r7, #31]
 801bbe8:	2b01      	cmp	r3, #1
 801bbea:	d146      	bne.n	801bc7a <vTaskNotifyGiveFromISR+0xfe>
 801bbec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bbee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bbf0:	2b00      	cmp	r3, #0
 801bbf2:	d00b      	beq.n	801bc0c <vTaskNotifyGiveFromISR+0x90>
 801bbf4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801bbf8:	f383 8811 	msr	BASEPRI, r3
 801bbfc:	f3bf 8f6f 	isb	sy
 801bc00:	f3bf 8f4f 	dsb	sy
 801bc04:	60fb      	str	r3, [r7, #12]
 801bc06:	bf00      	nop
 801bc08:	bf00      	nop
 801bc0a:	e7fd      	b.n	801bc08 <vTaskNotifyGiveFromISR+0x8c>
 801bc0c:	4b20      	ldr	r3, [pc, #128]	@ (801bc90 <vTaskNotifyGiveFromISR+0x114>)
 801bc0e:	681b      	ldr	r3, [r3, #0]
 801bc10:	2b00      	cmp	r3, #0
 801bc12:	d11c      	bne.n	801bc4e <vTaskNotifyGiveFromISR+0xd2>
 801bc14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bc16:	3304      	adds	r3, #4
 801bc18:	4618      	mov	r0, r3
 801bc1a:	f7fe f939 	bl	8019e90 <uxListRemove>
 801bc1e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bc20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bc22:	2201      	movs	r2, #1
 801bc24:	409a      	lsls	r2, r3
 801bc26:	4b1b      	ldr	r3, [pc, #108]	@ (801bc94 <vTaskNotifyGiveFromISR+0x118>)
 801bc28:	681b      	ldr	r3, [r3, #0]
 801bc2a:	4313      	orrs	r3, r2
 801bc2c:	4a19      	ldr	r2, [pc, #100]	@ (801bc94 <vTaskNotifyGiveFromISR+0x118>)
 801bc2e:	6013      	str	r3, [r2, #0]
 801bc30:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bc32:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801bc34:	4613      	mov	r3, r2
 801bc36:	009b      	lsls	r3, r3, #2
 801bc38:	4413      	add	r3, r2
 801bc3a:	009b      	lsls	r3, r3, #2
 801bc3c:	4a16      	ldr	r2, [pc, #88]	@ (801bc98 <vTaskNotifyGiveFromISR+0x11c>)
 801bc3e:	441a      	add	r2, r3
 801bc40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bc42:	3304      	adds	r3, #4
 801bc44:	4619      	mov	r1, r3
 801bc46:	4610      	mov	r0, r2
 801bc48:	f7fe f8c5 	bl	8019dd6 <vListInsertEnd>
 801bc4c:	e005      	b.n	801bc5a <vTaskNotifyGiveFromISR+0xde>
 801bc4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bc50:	3318      	adds	r3, #24
 801bc52:	4619      	mov	r1, r3
 801bc54:	4811      	ldr	r0, [pc, #68]	@ (801bc9c <vTaskNotifyGiveFromISR+0x120>)
 801bc56:	f7fe f8be 	bl	8019dd6 <vListInsertEnd>
 801bc5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801bc5c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 801bc5e:	4b10      	ldr	r3, [pc, #64]	@ (801bca0 <vTaskNotifyGiveFromISR+0x124>)
 801bc60:	681b      	ldr	r3, [r3, #0]
 801bc62:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bc64:	429a      	cmp	r2, r3
 801bc66:	d908      	bls.n	801bc7a <vTaskNotifyGiveFromISR+0xfe>
 801bc68:	683b      	ldr	r3, [r7, #0]
 801bc6a:	2b00      	cmp	r3, #0
 801bc6c:	d002      	beq.n	801bc74 <vTaskNotifyGiveFromISR+0xf8>
 801bc6e:	683b      	ldr	r3, [r7, #0]
 801bc70:	2201      	movs	r2, #1
 801bc72:	601a      	str	r2, [r3, #0]
 801bc74:	4b0b      	ldr	r3, [pc, #44]	@ (801bca4 <vTaskNotifyGiveFromISR+0x128>)
 801bc76:	2201      	movs	r2, #1
 801bc78:	601a      	str	r2, [r3, #0]
 801bc7a:	6a3b      	ldr	r3, [r7, #32]
 801bc7c:	60bb      	str	r3, [r7, #8]
 801bc7e:	68bb      	ldr	r3, [r7, #8]
 801bc80:	f383 8811 	msr	BASEPRI, r3
 801bc84:	bf00      	nop
 801bc86:	bf00      	nop
 801bc88:	3728      	adds	r7, #40	@ 0x28
 801bc8a:	46bd      	mov	sp, r7
 801bc8c:	bd80      	pop	{r7, pc}
 801bc8e:	bf00      	nop
 801bc90:	200040ac 	.word	0x200040ac
 801bc94:	2000408c 	.word	0x2000408c
 801bc98:	20003ee8 	.word	0x20003ee8
 801bc9c:	20004044 	.word	0x20004044
 801bca0:	20003ee4 	.word	0x20003ee4
 801bca4:	20004098 	.word	0x20004098

0801bca8 <prvAddCurrentTaskToDelayedList>:
 801bca8:	b580      	push	{r7, lr}
 801bcaa:	b084      	sub	sp, #16
 801bcac:	af00      	add	r7, sp, #0
 801bcae:	6078      	str	r0, [r7, #4]
 801bcb0:	6039      	str	r1, [r7, #0]
 801bcb2:	4b29      	ldr	r3, [pc, #164]	@ (801bd58 <prvAddCurrentTaskToDelayedList+0xb0>)
 801bcb4:	681b      	ldr	r3, [r3, #0]
 801bcb6:	60fb      	str	r3, [r7, #12]
 801bcb8:	4b28      	ldr	r3, [pc, #160]	@ (801bd5c <prvAddCurrentTaskToDelayedList+0xb4>)
 801bcba:	681b      	ldr	r3, [r3, #0]
 801bcbc:	3304      	adds	r3, #4
 801bcbe:	4618      	mov	r0, r3
 801bcc0:	f7fe f8e6 	bl	8019e90 <uxListRemove>
 801bcc4:	4603      	mov	r3, r0
 801bcc6:	2b00      	cmp	r3, #0
 801bcc8:	d10b      	bne.n	801bce2 <prvAddCurrentTaskToDelayedList+0x3a>
 801bcca:	4b24      	ldr	r3, [pc, #144]	@ (801bd5c <prvAddCurrentTaskToDelayedList+0xb4>)
 801bccc:	681b      	ldr	r3, [r3, #0]
 801bcce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bcd0:	2201      	movs	r2, #1
 801bcd2:	fa02 f303 	lsl.w	r3, r2, r3
 801bcd6:	43da      	mvns	r2, r3
 801bcd8:	4b21      	ldr	r3, [pc, #132]	@ (801bd60 <prvAddCurrentTaskToDelayedList+0xb8>)
 801bcda:	681b      	ldr	r3, [r3, #0]
 801bcdc:	4013      	ands	r3, r2
 801bcde:	4a20      	ldr	r2, [pc, #128]	@ (801bd60 <prvAddCurrentTaskToDelayedList+0xb8>)
 801bce0:	6013      	str	r3, [r2, #0]
 801bce2:	687b      	ldr	r3, [r7, #4]
 801bce4:	f1b3 3fff 	cmp.w	r3, #4294967295
 801bce8:	d10a      	bne.n	801bd00 <prvAddCurrentTaskToDelayedList+0x58>
 801bcea:	683b      	ldr	r3, [r7, #0]
 801bcec:	2b00      	cmp	r3, #0
 801bcee:	d007      	beq.n	801bd00 <prvAddCurrentTaskToDelayedList+0x58>
 801bcf0:	4b1a      	ldr	r3, [pc, #104]	@ (801bd5c <prvAddCurrentTaskToDelayedList+0xb4>)
 801bcf2:	681b      	ldr	r3, [r3, #0]
 801bcf4:	3304      	adds	r3, #4
 801bcf6:	4619      	mov	r1, r3
 801bcf8:	481a      	ldr	r0, [pc, #104]	@ (801bd64 <prvAddCurrentTaskToDelayedList+0xbc>)
 801bcfa:	f7fe f86c 	bl	8019dd6 <vListInsertEnd>
 801bcfe:	e026      	b.n	801bd4e <prvAddCurrentTaskToDelayedList+0xa6>
 801bd00:	68fa      	ldr	r2, [r7, #12]
 801bd02:	687b      	ldr	r3, [r7, #4]
 801bd04:	4413      	add	r3, r2
 801bd06:	60bb      	str	r3, [r7, #8]
 801bd08:	4b14      	ldr	r3, [pc, #80]	@ (801bd5c <prvAddCurrentTaskToDelayedList+0xb4>)
 801bd0a:	681b      	ldr	r3, [r3, #0]
 801bd0c:	68ba      	ldr	r2, [r7, #8]
 801bd0e:	605a      	str	r2, [r3, #4]
 801bd10:	68ba      	ldr	r2, [r7, #8]
 801bd12:	68fb      	ldr	r3, [r7, #12]
 801bd14:	429a      	cmp	r2, r3
 801bd16:	d209      	bcs.n	801bd2c <prvAddCurrentTaskToDelayedList+0x84>
 801bd18:	4b13      	ldr	r3, [pc, #76]	@ (801bd68 <prvAddCurrentTaskToDelayedList+0xc0>)
 801bd1a:	681a      	ldr	r2, [r3, #0]
 801bd1c:	4b0f      	ldr	r3, [pc, #60]	@ (801bd5c <prvAddCurrentTaskToDelayedList+0xb4>)
 801bd1e:	681b      	ldr	r3, [r3, #0]
 801bd20:	3304      	adds	r3, #4
 801bd22:	4619      	mov	r1, r3
 801bd24:	4610      	mov	r0, r2
 801bd26:	f7fe f87a 	bl	8019e1e <vListInsert>
 801bd2a:	e010      	b.n	801bd4e <prvAddCurrentTaskToDelayedList+0xa6>
 801bd2c:	4b0f      	ldr	r3, [pc, #60]	@ (801bd6c <prvAddCurrentTaskToDelayedList+0xc4>)
 801bd2e:	681a      	ldr	r2, [r3, #0]
 801bd30:	4b0a      	ldr	r3, [pc, #40]	@ (801bd5c <prvAddCurrentTaskToDelayedList+0xb4>)
 801bd32:	681b      	ldr	r3, [r3, #0]
 801bd34:	3304      	adds	r3, #4
 801bd36:	4619      	mov	r1, r3
 801bd38:	4610      	mov	r0, r2
 801bd3a:	f7fe f870 	bl	8019e1e <vListInsert>
 801bd3e:	4b0c      	ldr	r3, [pc, #48]	@ (801bd70 <prvAddCurrentTaskToDelayedList+0xc8>)
 801bd40:	681b      	ldr	r3, [r3, #0]
 801bd42:	68ba      	ldr	r2, [r7, #8]
 801bd44:	429a      	cmp	r2, r3
 801bd46:	d202      	bcs.n	801bd4e <prvAddCurrentTaskToDelayedList+0xa6>
 801bd48:	4a09      	ldr	r2, [pc, #36]	@ (801bd70 <prvAddCurrentTaskToDelayedList+0xc8>)
 801bd4a:	68bb      	ldr	r3, [r7, #8]
 801bd4c:	6013      	str	r3, [r2, #0]
 801bd4e:	bf00      	nop
 801bd50:	3710      	adds	r7, #16
 801bd52:	46bd      	mov	sp, r7
 801bd54:	bd80      	pop	{r7, pc}
 801bd56:	bf00      	nop
 801bd58:	20004088 	.word	0x20004088
 801bd5c:	20003ee4 	.word	0x20003ee4
 801bd60:	2000408c 	.word	0x2000408c
 801bd64:	20004070 	.word	0x20004070
 801bd68:	20004040 	.word	0x20004040
 801bd6c:	2000403c 	.word	0x2000403c
 801bd70:	200040a4 	.word	0x200040a4

0801bd74 <xTimerCreateTimerTask>:
 801bd74:	b580      	push	{r7, lr}
 801bd76:	b08a      	sub	sp, #40	@ 0x28
 801bd78:	af04      	add	r7, sp, #16
 801bd7a:	2300      	movs	r3, #0
 801bd7c:	617b      	str	r3, [r7, #20]
 801bd7e:	f000 fb13 	bl	801c3a8 <prvCheckForValidListAndQueue>
 801bd82:	4b1d      	ldr	r3, [pc, #116]	@ (801bdf8 <xTimerCreateTimerTask+0x84>)
 801bd84:	681b      	ldr	r3, [r3, #0]
 801bd86:	2b00      	cmp	r3, #0
 801bd88:	d021      	beq.n	801bdce <xTimerCreateTimerTask+0x5a>
 801bd8a:	2300      	movs	r3, #0
 801bd8c:	60fb      	str	r3, [r7, #12]
 801bd8e:	2300      	movs	r3, #0
 801bd90:	60bb      	str	r3, [r7, #8]
 801bd92:	1d3a      	adds	r2, r7, #4
 801bd94:	f107 0108 	add.w	r1, r7, #8
 801bd98:	f107 030c 	add.w	r3, r7, #12
 801bd9c:	4618      	mov	r0, r3
 801bd9e:	f7e7 fa05 	bl	80031ac <vApplicationGetTimerTaskMemory>
 801bda2:	6879      	ldr	r1, [r7, #4]
 801bda4:	68bb      	ldr	r3, [r7, #8]
 801bda6:	68fa      	ldr	r2, [r7, #12]
 801bda8:	9202      	str	r2, [sp, #8]
 801bdaa:	9301      	str	r3, [sp, #4]
 801bdac:	2302      	movs	r3, #2
 801bdae:	9300      	str	r3, [sp, #0]
 801bdb0:	2300      	movs	r3, #0
 801bdb2:	460a      	mov	r2, r1
 801bdb4:	4911      	ldr	r1, [pc, #68]	@ (801bdfc <xTimerCreateTimerTask+0x88>)
 801bdb6:	4812      	ldr	r0, [pc, #72]	@ (801be00 <xTimerCreateTimerTask+0x8c>)
 801bdb8:	f7fe fe5a 	bl	801aa70 <xTaskCreateStatic>
 801bdbc:	4603      	mov	r3, r0
 801bdbe:	4a11      	ldr	r2, [pc, #68]	@ (801be04 <xTimerCreateTimerTask+0x90>)
 801bdc0:	6013      	str	r3, [r2, #0]
 801bdc2:	4b10      	ldr	r3, [pc, #64]	@ (801be04 <xTimerCreateTimerTask+0x90>)
 801bdc4:	681b      	ldr	r3, [r3, #0]
 801bdc6:	2b00      	cmp	r3, #0
 801bdc8:	d001      	beq.n	801bdce <xTimerCreateTimerTask+0x5a>
 801bdca:	2301      	movs	r3, #1
 801bdcc:	617b      	str	r3, [r7, #20]
 801bdce:	697b      	ldr	r3, [r7, #20]
 801bdd0:	2b00      	cmp	r3, #0
 801bdd2:	d10b      	bne.n	801bdec <xTimerCreateTimerTask+0x78>
 801bdd4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801bdd8:	f383 8811 	msr	BASEPRI, r3
 801bddc:	f3bf 8f6f 	isb	sy
 801bde0:	f3bf 8f4f 	dsb	sy
 801bde4:	613b      	str	r3, [r7, #16]
 801bde6:	bf00      	nop
 801bde8:	bf00      	nop
 801bdea:	e7fd      	b.n	801bde8 <xTimerCreateTimerTask+0x74>
 801bdec:	697b      	ldr	r3, [r7, #20]
 801bdee:	4618      	mov	r0, r3
 801bdf0:	3718      	adds	r7, #24
 801bdf2:	46bd      	mov	sp, r7
 801bdf4:	bd80      	pop	{r7, pc}
 801bdf6:	bf00      	nop
 801bdf8:	200040e8 	.word	0x200040e8
 801bdfc:	08024790 	.word	0x08024790
 801be00:	0801bf41 	.word	0x0801bf41
 801be04:	200040ec 	.word	0x200040ec

0801be08 <xTimerGenericCommand>:
 801be08:	b580      	push	{r7, lr}
 801be0a:	b08a      	sub	sp, #40	@ 0x28
 801be0c:	af00      	add	r7, sp, #0
 801be0e:	60f8      	str	r0, [r7, #12]
 801be10:	60b9      	str	r1, [r7, #8]
 801be12:	607a      	str	r2, [r7, #4]
 801be14:	603b      	str	r3, [r7, #0]
 801be16:	2300      	movs	r3, #0
 801be18:	627b      	str	r3, [r7, #36]	@ 0x24
 801be1a:	68fb      	ldr	r3, [r7, #12]
 801be1c:	2b00      	cmp	r3, #0
 801be1e:	d10b      	bne.n	801be38 <xTimerGenericCommand+0x30>
 801be20:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801be24:	f383 8811 	msr	BASEPRI, r3
 801be28:	f3bf 8f6f 	isb	sy
 801be2c:	f3bf 8f4f 	dsb	sy
 801be30:	623b      	str	r3, [r7, #32]
 801be32:	bf00      	nop
 801be34:	bf00      	nop
 801be36:	e7fd      	b.n	801be34 <xTimerGenericCommand+0x2c>
 801be38:	4b19      	ldr	r3, [pc, #100]	@ (801bea0 <xTimerGenericCommand+0x98>)
 801be3a:	681b      	ldr	r3, [r3, #0]
 801be3c:	2b00      	cmp	r3, #0
 801be3e:	d02a      	beq.n	801be96 <xTimerGenericCommand+0x8e>
 801be40:	68bb      	ldr	r3, [r7, #8]
 801be42:	613b      	str	r3, [r7, #16]
 801be44:	687b      	ldr	r3, [r7, #4]
 801be46:	617b      	str	r3, [r7, #20]
 801be48:	68fb      	ldr	r3, [r7, #12]
 801be4a:	61bb      	str	r3, [r7, #24]
 801be4c:	68bb      	ldr	r3, [r7, #8]
 801be4e:	2b05      	cmp	r3, #5
 801be50:	dc18      	bgt.n	801be84 <xTimerGenericCommand+0x7c>
 801be52:	f7ff fda1 	bl	801b998 <xTaskGetSchedulerState>
 801be56:	4603      	mov	r3, r0
 801be58:	2b02      	cmp	r3, #2
 801be5a:	d109      	bne.n	801be70 <xTimerGenericCommand+0x68>
 801be5c:	4b10      	ldr	r3, [pc, #64]	@ (801bea0 <xTimerGenericCommand+0x98>)
 801be5e:	6818      	ldr	r0, [r3, #0]
 801be60:	f107 0110 	add.w	r1, r7, #16
 801be64:	2300      	movs	r3, #0
 801be66:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 801be68:	f7fe f982 	bl	801a170 <xQueueGenericSend>
 801be6c:	6278      	str	r0, [r7, #36]	@ 0x24
 801be6e:	e012      	b.n	801be96 <xTimerGenericCommand+0x8e>
 801be70:	4b0b      	ldr	r3, [pc, #44]	@ (801bea0 <xTimerGenericCommand+0x98>)
 801be72:	6818      	ldr	r0, [r3, #0]
 801be74:	f107 0110 	add.w	r1, r7, #16
 801be78:	2300      	movs	r3, #0
 801be7a:	2200      	movs	r2, #0
 801be7c:	f7fe f978 	bl	801a170 <xQueueGenericSend>
 801be80:	6278      	str	r0, [r7, #36]	@ 0x24
 801be82:	e008      	b.n	801be96 <xTimerGenericCommand+0x8e>
 801be84:	4b06      	ldr	r3, [pc, #24]	@ (801bea0 <xTimerGenericCommand+0x98>)
 801be86:	6818      	ldr	r0, [r3, #0]
 801be88:	f107 0110 	add.w	r1, r7, #16
 801be8c:	2300      	movs	r3, #0
 801be8e:	683a      	ldr	r2, [r7, #0]
 801be90:	f7fe fa70 	bl	801a374 <xQueueGenericSendFromISR>
 801be94:	6278      	str	r0, [r7, #36]	@ 0x24
 801be96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801be98:	4618      	mov	r0, r3
 801be9a:	3728      	adds	r7, #40	@ 0x28
 801be9c:	46bd      	mov	sp, r7
 801be9e:	bd80      	pop	{r7, pc}
 801bea0:	200040e8 	.word	0x200040e8

0801bea4 <prvProcessExpiredTimer>:
 801bea4:	b580      	push	{r7, lr}
 801bea6:	b088      	sub	sp, #32
 801bea8:	af02      	add	r7, sp, #8
 801beaa:	6078      	str	r0, [r7, #4]
 801beac:	6039      	str	r1, [r7, #0]
 801beae:	4b23      	ldr	r3, [pc, #140]	@ (801bf3c <prvProcessExpiredTimer+0x98>)
 801beb0:	681b      	ldr	r3, [r3, #0]
 801beb2:	68db      	ldr	r3, [r3, #12]
 801beb4:	68db      	ldr	r3, [r3, #12]
 801beb6:	617b      	str	r3, [r7, #20]
 801beb8:	697b      	ldr	r3, [r7, #20]
 801beba:	3304      	adds	r3, #4
 801bebc:	4618      	mov	r0, r3
 801bebe:	f7fd ffe7 	bl	8019e90 <uxListRemove>
 801bec2:	697b      	ldr	r3, [r7, #20]
 801bec4:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801bec8:	f003 0304 	and.w	r3, r3, #4
 801becc:	2b00      	cmp	r3, #0
 801bece:	d023      	beq.n	801bf18 <prvProcessExpiredTimer+0x74>
 801bed0:	697b      	ldr	r3, [r7, #20]
 801bed2:	699a      	ldr	r2, [r3, #24]
 801bed4:	687b      	ldr	r3, [r7, #4]
 801bed6:	18d1      	adds	r1, r2, r3
 801bed8:	687b      	ldr	r3, [r7, #4]
 801beda:	683a      	ldr	r2, [r7, #0]
 801bedc:	6978      	ldr	r0, [r7, #20]
 801bede:	f000 f8d5 	bl	801c08c <prvInsertTimerInActiveList>
 801bee2:	4603      	mov	r3, r0
 801bee4:	2b00      	cmp	r3, #0
 801bee6:	d020      	beq.n	801bf2a <prvProcessExpiredTimer+0x86>
 801bee8:	2300      	movs	r3, #0
 801beea:	9300      	str	r3, [sp, #0]
 801beec:	2300      	movs	r3, #0
 801beee:	687a      	ldr	r2, [r7, #4]
 801bef0:	2100      	movs	r1, #0
 801bef2:	6978      	ldr	r0, [r7, #20]
 801bef4:	f7ff ff88 	bl	801be08 <xTimerGenericCommand>
 801bef8:	6138      	str	r0, [r7, #16]
 801befa:	693b      	ldr	r3, [r7, #16]
 801befc:	2b00      	cmp	r3, #0
 801befe:	d114      	bne.n	801bf2a <prvProcessExpiredTimer+0x86>
 801bf00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801bf04:	f383 8811 	msr	BASEPRI, r3
 801bf08:	f3bf 8f6f 	isb	sy
 801bf0c:	f3bf 8f4f 	dsb	sy
 801bf10:	60fb      	str	r3, [r7, #12]
 801bf12:	bf00      	nop
 801bf14:	bf00      	nop
 801bf16:	e7fd      	b.n	801bf14 <prvProcessExpiredTimer+0x70>
 801bf18:	697b      	ldr	r3, [r7, #20]
 801bf1a:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801bf1e:	f023 0301 	bic.w	r3, r3, #1
 801bf22:	b2da      	uxtb	r2, r3
 801bf24:	697b      	ldr	r3, [r7, #20]
 801bf26:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801bf2a:	697b      	ldr	r3, [r7, #20]
 801bf2c:	6a1b      	ldr	r3, [r3, #32]
 801bf2e:	6978      	ldr	r0, [r7, #20]
 801bf30:	4798      	blx	r3
 801bf32:	bf00      	nop
 801bf34:	3718      	adds	r7, #24
 801bf36:	46bd      	mov	sp, r7
 801bf38:	bd80      	pop	{r7, pc}
 801bf3a:	bf00      	nop
 801bf3c:	200040e0 	.word	0x200040e0

0801bf40 <prvTimerTask>:
 801bf40:	b580      	push	{r7, lr}
 801bf42:	b084      	sub	sp, #16
 801bf44:	af00      	add	r7, sp, #0
 801bf46:	6078      	str	r0, [r7, #4]
 801bf48:	f107 0308 	add.w	r3, r7, #8
 801bf4c:	4618      	mov	r0, r3
 801bf4e:	f000 f859 	bl	801c004 <prvGetNextExpireTime>
 801bf52:	60f8      	str	r0, [r7, #12]
 801bf54:	68bb      	ldr	r3, [r7, #8]
 801bf56:	4619      	mov	r1, r3
 801bf58:	68f8      	ldr	r0, [r7, #12]
 801bf5a:	f000 f805 	bl	801bf68 <prvProcessTimerOrBlockTask>
 801bf5e:	f000 f8d7 	bl	801c110 <prvProcessReceivedCommands>
 801bf62:	bf00      	nop
 801bf64:	e7f0      	b.n	801bf48 <prvTimerTask+0x8>
	...

0801bf68 <prvProcessTimerOrBlockTask>:
 801bf68:	b580      	push	{r7, lr}
 801bf6a:	b084      	sub	sp, #16
 801bf6c:	af00      	add	r7, sp, #0
 801bf6e:	6078      	str	r0, [r7, #4]
 801bf70:	6039      	str	r1, [r7, #0]
 801bf72:	f7ff f88f 	bl	801b094 <vTaskSuspendAll>
 801bf76:	f107 0308 	add.w	r3, r7, #8
 801bf7a:	4618      	mov	r0, r3
 801bf7c:	f000 f866 	bl	801c04c <prvSampleTimeNow>
 801bf80:	60f8      	str	r0, [r7, #12]
 801bf82:	68bb      	ldr	r3, [r7, #8]
 801bf84:	2b00      	cmp	r3, #0
 801bf86:	d130      	bne.n	801bfea <prvProcessTimerOrBlockTask+0x82>
 801bf88:	683b      	ldr	r3, [r7, #0]
 801bf8a:	2b00      	cmp	r3, #0
 801bf8c:	d10a      	bne.n	801bfa4 <prvProcessTimerOrBlockTask+0x3c>
 801bf8e:	687a      	ldr	r2, [r7, #4]
 801bf90:	68fb      	ldr	r3, [r7, #12]
 801bf92:	429a      	cmp	r2, r3
 801bf94:	d806      	bhi.n	801bfa4 <prvProcessTimerOrBlockTask+0x3c>
 801bf96:	f7ff f88b 	bl	801b0b0 <xTaskResumeAll>
 801bf9a:	68f9      	ldr	r1, [r7, #12]
 801bf9c:	6878      	ldr	r0, [r7, #4]
 801bf9e:	f7ff ff81 	bl	801bea4 <prvProcessExpiredTimer>
 801bfa2:	e024      	b.n	801bfee <prvProcessTimerOrBlockTask+0x86>
 801bfa4:	683b      	ldr	r3, [r7, #0]
 801bfa6:	2b00      	cmp	r3, #0
 801bfa8:	d008      	beq.n	801bfbc <prvProcessTimerOrBlockTask+0x54>
 801bfaa:	4b13      	ldr	r3, [pc, #76]	@ (801bff8 <prvProcessTimerOrBlockTask+0x90>)
 801bfac:	681b      	ldr	r3, [r3, #0]
 801bfae:	681b      	ldr	r3, [r3, #0]
 801bfb0:	2b00      	cmp	r3, #0
 801bfb2:	d101      	bne.n	801bfb8 <prvProcessTimerOrBlockTask+0x50>
 801bfb4:	2301      	movs	r3, #1
 801bfb6:	e000      	b.n	801bfba <prvProcessTimerOrBlockTask+0x52>
 801bfb8:	2300      	movs	r3, #0
 801bfba:	603b      	str	r3, [r7, #0]
 801bfbc:	4b0f      	ldr	r3, [pc, #60]	@ (801bffc <prvProcessTimerOrBlockTask+0x94>)
 801bfbe:	6818      	ldr	r0, [r3, #0]
 801bfc0:	687a      	ldr	r2, [r7, #4]
 801bfc2:	68fb      	ldr	r3, [r7, #12]
 801bfc4:	1ad3      	subs	r3, r2, r3
 801bfc6:	683a      	ldr	r2, [r7, #0]
 801bfc8:	4619      	mov	r1, r3
 801bfca:	f7fe fd1d 	bl	801aa08 <vQueueWaitForMessageRestricted>
 801bfce:	f7ff f86f 	bl	801b0b0 <xTaskResumeAll>
 801bfd2:	4603      	mov	r3, r0
 801bfd4:	2b00      	cmp	r3, #0
 801bfd6:	d10a      	bne.n	801bfee <prvProcessTimerOrBlockTask+0x86>
 801bfd8:	4b09      	ldr	r3, [pc, #36]	@ (801c000 <prvProcessTimerOrBlockTask+0x98>)
 801bfda:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801bfde:	601a      	str	r2, [r3, #0]
 801bfe0:	f3bf 8f4f 	dsb	sy
 801bfe4:	f3bf 8f6f 	isb	sy
 801bfe8:	e001      	b.n	801bfee <prvProcessTimerOrBlockTask+0x86>
 801bfea:	f7ff f861 	bl	801b0b0 <xTaskResumeAll>
 801bfee:	bf00      	nop
 801bff0:	3710      	adds	r7, #16
 801bff2:	46bd      	mov	sp, r7
 801bff4:	bd80      	pop	{r7, pc}
 801bff6:	bf00      	nop
 801bff8:	200040e4 	.word	0x200040e4
 801bffc:	200040e8 	.word	0x200040e8
 801c000:	e000ed04 	.word	0xe000ed04

0801c004 <prvGetNextExpireTime>:
 801c004:	b480      	push	{r7}
 801c006:	b085      	sub	sp, #20
 801c008:	af00      	add	r7, sp, #0
 801c00a:	6078      	str	r0, [r7, #4]
 801c00c:	4b0e      	ldr	r3, [pc, #56]	@ (801c048 <prvGetNextExpireTime+0x44>)
 801c00e:	681b      	ldr	r3, [r3, #0]
 801c010:	681b      	ldr	r3, [r3, #0]
 801c012:	2b00      	cmp	r3, #0
 801c014:	d101      	bne.n	801c01a <prvGetNextExpireTime+0x16>
 801c016:	2201      	movs	r2, #1
 801c018:	e000      	b.n	801c01c <prvGetNextExpireTime+0x18>
 801c01a:	2200      	movs	r2, #0
 801c01c:	687b      	ldr	r3, [r7, #4]
 801c01e:	601a      	str	r2, [r3, #0]
 801c020:	687b      	ldr	r3, [r7, #4]
 801c022:	681b      	ldr	r3, [r3, #0]
 801c024:	2b00      	cmp	r3, #0
 801c026:	d105      	bne.n	801c034 <prvGetNextExpireTime+0x30>
 801c028:	4b07      	ldr	r3, [pc, #28]	@ (801c048 <prvGetNextExpireTime+0x44>)
 801c02a:	681b      	ldr	r3, [r3, #0]
 801c02c:	68db      	ldr	r3, [r3, #12]
 801c02e:	681b      	ldr	r3, [r3, #0]
 801c030:	60fb      	str	r3, [r7, #12]
 801c032:	e001      	b.n	801c038 <prvGetNextExpireTime+0x34>
 801c034:	2300      	movs	r3, #0
 801c036:	60fb      	str	r3, [r7, #12]
 801c038:	68fb      	ldr	r3, [r7, #12]
 801c03a:	4618      	mov	r0, r3
 801c03c:	3714      	adds	r7, #20
 801c03e:	46bd      	mov	sp, r7
 801c040:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c044:	4770      	bx	lr
 801c046:	bf00      	nop
 801c048:	200040e0 	.word	0x200040e0

0801c04c <prvSampleTimeNow>:
 801c04c:	b580      	push	{r7, lr}
 801c04e:	b084      	sub	sp, #16
 801c050:	af00      	add	r7, sp, #0
 801c052:	6078      	str	r0, [r7, #4]
 801c054:	f7ff f8ca 	bl	801b1ec <xTaskGetTickCount>
 801c058:	60f8      	str	r0, [r7, #12]
 801c05a:	4b0b      	ldr	r3, [pc, #44]	@ (801c088 <prvSampleTimeNow+0x3c>)
 801c05c:	681b      	ldr	r3, [r3, #0]
 801c05e:	68fa      	ldr	r2, [r7, #12]
 801c060:	429a      	cmp	r2, r3
 801c062:	d205      	bcs.n	801c070 <prvSampleTimeNow+0x24>
 801c064:	f000 f93a 	bl	801c2dc <prvSwitchTimerLists>
 801c068:	687b      	ldr	r3, [r7, #4]
 801c06a:	2201      	movs	r2, #1
 801c06c:	601a      	str	r2, [r3, #0]
 801c06e:	e002      	b.n	801c076 <prvSampleTimeNow+0x2a>
 801c070:	687b      	ldr	r3, [r7, #4]
 801c072:	2200      	movs	r2, #0
 801c074:	601a      	str	r2, [r3, #0]
 801c076:	4a04      	ldr	r2, [pc, #16]	@ (801c088 <prvSampleTimeNow+0x3c>)
 801c078:	68fb      	ldr	r3, [r7, #12]
 801c07a:	6013      	str	r3, [r2, #0]
 801c07c:	68fb      	ldr	r3, [r7, #12]
 801c07e:	4618      	mov	r0, r3
 801c080:	3710      	adds	r7, #16
 801c082:	46bd      	mov	sp, r7
 801c084:	bd80      	pop	{r7, pc}
 801c086:	bf00      	nop
 801c088:	200040f0 	.word	0x200040f0

0801c08c <prvInsertTimerInActiveList>:
 801c08c:	b580      	push	{r7, lr}
 801c08e:	b086      	sub	sp, #24
 801c090:	af00      	add	r7, sp, #0
 801c092:	60f8      	str	r0, [r7, #12]
 801c094:	60b9      	str	r1, [r7, #8]
 801c096:	607a      	str	r2, [r7, #4]
 801c098:	603b      	str	r3, [r7, #0]
 801c09a:	2300      	movs	r3, #0
 801c09c:	617b      	str	r3, [r7, #20]
 801c09e:	68fb      	ldr	r3, [r7, #12]
 801c0a0:	68ba      	ldr	r2, [r7, #8]
 801c0a2:	605a      	str	r2, [r3, #4]
 801c0a4:	68fb      	ldr	r3, [r7, #12]
 801c0a6:	68fa      	ldr	r2, [r7, #12]
 801c0a8:	611a      	str	r2, [r3, #16]
 801c0aa:	68ba      	ldr	r2, [r7, #8]
 801c0ac:	687b      	ldr	r3, [r7, #4]
 801c0ae:	429a      	cmp	r2, r3
 801c0b0:	d812      	bhi.n	801c0d8 <prvInsertTimerInActiveList+0x4c>
 801c0b2:	687a      	ldr	r2, [r7, #4]
 801c0b4:	683b      	ldr	r3, [r7, #0]
 801c0b6:	1ad2      	subs	r2, r2, r3
 801c0b8:	68fb      	ldr	r3, [r7, #12]
 801c0ba:	699b      	ldr	r3, [r3, #24]
 801c0bc:	429a      	cmp	r2, r3
 801c0be:	d302      	bcc.n	801c0c6 <prvInsertTimerInActiveList+0x3a>
 801c0c0:	2301      	movs	r3, #1
 801c0c2:	617b      	str	r3, [r7, #20]
 801c0c4:	e01b      	b.n	801c0fe <prvInsertTimerInActiveList+0x72>
 801c0c6:	4b10      	ldr	r3, [pc, #64]	@ (801c108 <prvInsertTimerInActiveList+0x7c>)
 801c0c8:	681a      	ldr	r2, [r3, #0]
 801c0ca:	68fb      	ldr	r3, [r7, #12]
 801c0cc:	3304      	adds	r3, #4
 801c0ce:	4619      	mov	r1, r3
 801c0d0:	4610      	mov	r0, r2
 801c0d2:	f7fd fea4 	bl	8019e1e <vListInsert>
 801c0d6:	e012      	b.n	801c0fe <prvInsertTimerInActiveList+0x72>
 801c0d8:	687a      	ldr	r2, [r7, #4]
 801c0da:	683b      	ldr	r3, [r7, #0]
 801c0dc:	429a      	cmp	r2, r3
 801c0de:	d206      	bcs.n	801c0ee <prvInsertTimerInActiveList+0x62>
 801c0e0:	68ba      	ldr	r2, [r7, #8]
 801c0e2:	683b      	ldr	r3, [r7, #0]
 801c0e4:	429a      	cmp	r2, r3
 801c0e6:	d302      	bcc.n	801c0ee <prvInsertTimerInActiveList+0x62>
 801c0e8:	2301      	movs	r3, #1
 801c0ea:	617b      	str	r3, [r7, #20]
 801c0ec:	e007      	b.n	801c0fe <prvInsertTimerInActiveList+0x72>
 801c0ee:	4b07      	ldr	r3, [pc, #28]	@ (801c10c <prvInsertTimerInActiveList+0x80>)
 801c0f0:	681a      	ldr	r2, [r3, #0]
 801c0f2:	68fb      	ldr	r3, [r7, #12]
 801c0f4:	3304      	adds	r3, #4
 801c0f6:	4619      	mov	r1, r3
 801c0f8:	4610      	mov	r0, r2
 801c0fa:	f7fd fe90 	bl	8019e1e <vListInsert>
 801c0fe:	697b      	ldr	r3, [r7, #20]
 801c100:	4618      	mov	r0, r3
 801c102:	3718      	adds	r7, #24
 801c104:	46bd      	mov	sp, r7
 801c106:	bd80      	pop	{r7, pc}
 801c108:	200040e4 	.word	0x200040e4
 801c10c:	200040e0 	.word	0x200040e0

0801c110 <prvProcessReceivedCommands>:
 801c110:	b580      	push	{r7, lr}
 801c112:	b08e      	sub	sp, #56	@ 0x38
 801c114:	af02      	add	r7, sp, #8
 801c116:	e0ce      	b.n	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c118:	687b      	ldr	r3, [r7, #4]
 801c11a:	2b00      	cmp	r3, #0
 801c11c:	da19      	bge.n	801c152 <prvProcessReceivedCommands+0x42>
 801c11e:	1d3b      	adds	r3, r7, #4
 801c120:	3304      	adds	r3, #4
 801c122:	62fb      	str	r3, [r7, #44]	@ 0x2c
 801c124:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801c126:	2b00      	cmp	r3, #0
 801c128:	d10b      	bne.n	801c142 <prvProcessReceivedCommands+0x32>
 801c12a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c12e:	f383 8811 	msr	BASEPRI, r3
 801c132:	f3bf 8f6f 	isb	sy
 801c136:	f3bf 8f4f 	dsb	sy
 801c13a:	61fb      	str	r3, [r7, #28]
 801c13c:	bf00      	nop
 801c13e:	bf00      	nop
 801c140:	e7fd      	b.n	801c13e <prvProcessReceivedCommands+0x2e>
 801c142:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 801c144:	681b      	ldr	r3, [r3, #0]
 801c146:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 801c148:	6850      	ldr	r0, [r2, #4]
 801c14a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 801c14c:	6892      	ldr	r2, [r2, #8]
 801c14e:	4611      	mov	r1, r2
 801c150:	4798      	blx	r3
 801c152:	687b      	ldr	r3, [r7, #4]
 801c154:	2b00      	cmp	r3, #0
 801c156:	f2c0 80ae 	blt.w	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c15a:	68fb      	ldr	r3, [r7, #12]
 801c15c:	62bb      	str	r3, [r7, #40]	@ 0x28
 801c15e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c160:	695b      	ldr	r3, [r3, #20]
 801c162:	2b00      	cmp	r3, #0
 801c164:	d004      	beq.n	801c170 <prvProcessReceivedCommands+0x60>
 801c166:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c168:	3304      	adds	r3, #4
 801c16a:	4618      	mov	r0, r3
 801c16c:	f7fd fe90 	bl	8019e90 <uxListRemove>
 801c170:	463b      	mov	r3, r7
 801c172:	4618      	mov	r0, r3
 801c174:	f7ff ff6a 	bl	801c04c <prvSampleTimeNow>
 801c178:	6278      	str	r0, [r7, #36]	@ 0x24
 801c17a:	687b      	ldr	r3, [r7, #4]
 801c17c:	2b09      	cmp	r3, #9
 801c17e:	f200 8097 	bhi.w	801c2b0 <prvProcessReceivedCommands+0x1a0>
 801c182:	a201      	add	r2, pc, #4	@ (adr r2, 801c188 <prvProcessReceivedCommands+0x78>)
 801c184:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801c188:	0801c1b1 	.word	0x0801c1b1
 801c18c:	0801c1b1 	.word	0x0801c1b1
 801c190:	0801c1b1 	.word	0x0801c1b1
 801c194:	0801c227 	.word	0x0801c227
 801c198:	0801c23b 	.word	0x0801c23b
 801c19c:	0801c287 	.word	0x0801c287
 801c1a0:	0801c1b1 	.word	0x0801c1b1
 801c1a4:	0801c1b1 	.word	0x0801c1b1
 801c1a8:	0801c227 	.word	0x0801c227
 801c1ac:	0801c23b 	.word	0x0801c23b
 801c1b0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c1b2:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c1b6:	f043 0301 	orr.w	r3, r3, #1
 801c1ba:	b2da      	uxtb	r2, r3
 801c1bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c1be:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801c1c2:	68ba      	ldr	r2, [r7, #8]
 801c1c4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c1c6:	699b      	ldr	r3, [r3, #24]
 801c1c8:	18d1      	adds	r1, r2, r3
 801c1ca:	68bb      	ldr	r3, [r7, #8]
 801c1cc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801c1ce:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801c1d0:	f7ff ff5c 	bl	801c08c <prvInsertTimerInActiveList>
 801c1d4:	4603      	mov	r3, r0
 801c1d6:	2b00      	cmp	r3, #0
 801c1d8:	d06c      	beq.n	801c2b4 <prvProcessReceivedCommands+0x1a4>
 801c1da:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c1dc:	6a1b      	ldr	r3, [r3, #32]
 801c1de:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801c1e0:	4798      	blx	r3
 801c1e2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c1e4:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c1e8:	f003 0304 	and.w	r3, r3, #4
 801c1ec:	2b00      	cmp	r3, #0
 801c1ee:	d061      	beq.n	801c2b4 <prvProcessReceivedCommands+0x1a4>
 801c1f0:	68ba      	ldr	r2, [r7, #8]
 801c1f2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c1f4:	699b      	ldr	r3, [r3, #24]
 801c1f6:	441a      	add	r2, r3
 801c1f8:	2300      	movs	r3, #0
 801c1fa:	9300      	str	r3, [sp, #0]
 801c1fc:	2300      	movs	r3, #0
 801c1fe:	2100      	movs	r1, #0
 801c200:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801c202:	f7ff fe01 	bl	801be08 <xTimerGenericCommand>
 801c206:	6238      	str	r0, [r7, #32]
 801c208:	6a3b      	ldr	r3, [r7, #32]
 801c20a:	2b00      	cmp	r3, #0
 801c20c:	d152      	bne.n	801c2b4 <prvProcessReceivedCommands+0x1a4>
 801c20e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c212:	f383 8811 	msr	BASEPRI, r3
 801c216:	f3bf 8f6f 	isb	sy
 801c21a:	f3bf 8f4f 	dsb	sy
 801c21e:	61bb      	str	r3, [r7, #24]
 801c220:	bf00      	nop
 801c222:	bf00      	nop
 801c224:	e7fd      	b.n	801c222 <prvProcessReceivedCommands+0x112>
 801c226:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c228:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c22c:	f023 0301 	bic.w	r3, r3, #1
 801c230:	b2da      	uxtb	r2, r3
 801c232:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c234:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801c238:	e03d      	b.n	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c23a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c23c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c240:	f043 0301 	orr.w	r3, r3, #1
 801c244:	b2da      	uxtb	r2, r3
 801c246:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c248:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801c24c:	68ba      	ldr	r2, [r7, #8]
 801c24e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c250:	619a      	str	r2, [r3, #24]
 801c252:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c254:	699b      	ldr	r3, [r3, #24]
 801c256:	2b00      	cmp	r3, #0
 801c258:	d10b      	bne.n	801c272 <prvProcessReceivedCommands+0x162>
 801c25a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c25e:	f383 8811 	msr	BASEPRI, r3
 801c262:	f3bf 8f6f 	isb	sy
 801c266:	f3bf 8f4f 	dsb	sy
 801c26a:	617b      	str	r3, [r7, #20]
 801c26c:	bf00      	nop
 801c26e:	bf00      	nop
 801c270:	e7fd      	b.n	801c26e <prvProcessReceivedCommands+0x15e>
 801c272:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c274:	699a      	ldr	r2, [r3, #24]
 801c276:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c278:	18d1      	adds	r1, r2, r3
 801c27a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c27c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801c27e:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801c280:	f7ff ff04 	bl	801c08c <prvInsertTimerInActiveList>
 801c284:	e017      	b.n	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c286:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c288:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c28c:	f003 0302 	and.w	r3, r3, #2
 801c290:	2b00      	cmp	r3, #0
 801c292:	d103      	bne.n	801c29c <prvProcessReceivedCommands+0x18c>
 801c294:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 801c296:	f000 fc07 	bl	801caa8 <vPortFree>
 801c29a:	e00c      	b.n	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c29c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c29e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c2a2:	f023 0301 	bic.w	r3, r3, #1
 801c2a6:	b2da      	uxtb	r2, r3
 801c2a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 801c2aa:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 801c2ae:	e002      	b.n	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c2b0:	bf00      	nop
 801c2b2:	e000      	b.n	801c2b6 <prvProcessReceivedCommands+0x1a6>
 801c2b4:	bf00      	nop
 801c2b6:	4b08      	ldr	r3, [pc, #32]	@ (801c2d8 <prvProcessReceivedCommands+0x1c8>)
 801c2b8:	681b      	ldr	r3, [r3, #0]
 801c2ba:	1d39      	adds	r1, r7, #4
 801c2bc:	2200      	movs	r2, #0
 801c2be:	4618      	mov	r0, r3
 801c2c0:	f7fe f986 	bl	801a5d0 <xQueueReceive>
 801c2c4:	4603      	mov	r3, r0
 801c2c6:	2b00      	cmp	r3, #0
 801c2c8:	f47f af26 	bne.w	801c118 <prvProcessReceivedCommands+0x8>
 801c2cc:	bf00      	nop
 801c2ce:	bf00      	nop
 801c2d0:	3730      	adds	r7, #48	@ 0x30
 801c2d2:	46bd      	mov	sp, r7
 801c2d4:	bd80      	pop	{r7, pc}
 801c2d6:	bf00      	nop
 801c2d8:	200040e8 	.word	0x200040e8

0801c2dc <prvSwitchTimerLists>:
 801c2dc:	b580      	push	{r7, lr}
 801c2de:	b088      	sub	sp, #32
 801c2e0:	af02      	add	r7, sp, #8
 801c2e2:	e049      	b.n	801c378 <prvSwitchTimerLists+0x9c>
 801c2e4:	4b2e      	ldr	r3, [pc, #184]	@ (801c3a0 <prvSwitchTimerLists+0xc4>)
 801c2e6:	681b      	ldr	r3, [r3, #0]
 801c2e8:	68db      	ldr	r3, [r3, #12]
 801c2ea:	681b      	ldr	r3, [r3, #0]
 801c2ec:	613b      	str	r3, [r7, #16]
 801c2ee:	4b2c      	ldr	r3, [pc, #176]	@ (801c3a0 <prvSwitchTimerLists+0xc4>)
 801c2f0:	681b      	ldr	r3, [r3, #0]
 801c2f2:	68db      	ldr	r3, [r3, #12]
 801c2f4:	68db      	ldr	r3, [r3, #12]
 801c2f6:	60fb      	str	r3, [r7, #12]
 801c2f8:	68fb      	ldr	r3, [r7, #12]
 801c2fa:	3304      	adds	r3, #4
 801c2fc:	4618      	mov	r0, r3
 801c2fe:	f7fd fdc7 	bl	8019e90 <uxListRemove>
 801c302:	68fb      	ldr	r3, [r7, #12]
 801c304:	6a1b      	ldr	r3, [r3, #32]
 801c306:	68f8      	ldr	r0, [r7, #12]
 801c308:	4798      	blx	r3
 801c30a:	68fb      	ldr	r3, [r7, #12]
 801c30c:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 801c310:	f003 0304 	and.w	r3, r3, #4
 801c314:	2b00      	cmp	r3, #0
 801c316:	d02f      	beq.n	801c378 <prvSwitchTimerLists+0x9c>
 801c318:	68fb      	ldr	r3, [r7, #12]
 801c31a:	699b      	ldr	r3, [r3, #24]
 801c31c:	693a      	ldr	r2, [r7, #16]
 801c31e:	4413      	add	r3, r2
 801c320:	60bb      	str	r3, [r7, #8]
 801c322:	68ba      	ldr	r2, [r7, #8]
 801c324:	693b      	ldr	r3, [r7, #16]
 801c326:	429a      	cmp	r2, r3
 801c328:	d90e      	bls.n	801c348 <prvSwitchTimerLists+0x6c>
 801c32a:	68fb      	ldr	r3, [r7, #12]
 801c32c:	68ba      	ldr	r2, [r7, #8]
 801c32e:	605a      	str	r2, [r3, #4]
 801c330:	68fb      	ldr	r3, [r7, #12]
 801c332:	68fa      	ldr	r2, [r7, #12]
 801c334:	611a      	str	r2, [r3, #16]
 801c336:	4b1a      	ldr	r3, [pc, #104]	@ (801c3a0 <prvSwitchTimerLists+0xc4>)
 801c338:	681a      	ldr	r2, [r3, #0]
 801c33a:	68fb      	ldr	r3, [r7, #12]
 801c33c:	3304      	adds	r3, #4
 801c33e:	4619      	mov	r1, r3
 801c340:	4610      	mov	r0, r2
 801c342:	f7fd fd6c 	bl	8019e1e <vListInsert>
 801c346:	e017      	b.n	801c378 <prvSwitchTimerLists+0x9c>
 801c348:	2300      	movs	r3, #0
 801c34a:	9300      	str	r3, [sp, #0]
 801c34c:	2300      	movs	r3, #0
 801c34e:	693a      	ldr	r2, [r7, #16]
 801c350:	2100      	movs	r1, #0
 801c352:	68f8      	ldr	r0, [r7, #12]
 801c354:	f7ff fd58 	bl	801be08 <xTimerGenericCommand>
 801c358:	6078      	str	r0, [r7, #4]
 801c35a:	687b      	ldr	r3, [r7, #4]
 801c35c:	2b00      	cmp	r3, #0
 801c35e:	d10b      	bne.n	801c378 <prvSwitchTimerLists+0x9c>
 801c360:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c364:	f383 8811 	msr	BASEPRI, r3
 801c368:	f3bf 8f6f 	isb	sy
 801c36c:	f3bf 8f4f 	dsb	sy
 801c370:	603b      	str	r3, [r7, #0]
 801c372:	bf00      	nop
 801c374:	bf00      	nop
 801c376:	e7fd      	b.n	801c374 <prvSwitchTimerLists+0x98>
 801c378:	4b09      	ldr	r3, [pc, #36]	@ (801c3a0 <prvSwitchTimerLists+0xc4>)
 801c37a:	681b      	ldr	r3, [r3, #0]
 801c37c:	681b      	ldr	r3, [r3, #0]
 801c37e:	2b00      	cmp	r3, #0
 801c380:	d1b0      	bne.n	801c2e4 <prvSwitchTimerLists+0x8>
 801c382:	4b07      	ldr	r3, [pc, #28]	@ (801c3a0 <prvSwitchTimerLists+0xc4>)
 801c384:	681b      	ldr	r3, [r3, #0]
 801c386:	617b      	str	r3, [r7, #20]
 801c388:	4b06      	ldr	r3, [pc, #24]	@ (801c3a4 <prvSwitchTimerLists+0xc8>)
 801c38a:	681b      	ldr	r3, [r3, #0]
 801c38c:	4a04      	ldr	r2, [pc, #16]	@ (801c3a0 <prvSwitchTimerLists+0xc4>)
 801c38e:	6013      	str	r3, [r2, #0]
 801c390:	4a04      	ldr	r2, [pc, #16]	@ (801c3a4 <prvSwitchTimerLists+0xc8>)
 801c392:	697b      	ldr	r3, [r7, #20]
 801c394:	6013      	str	r3, [r2, #0]
 801c396:	bf00      	nop
 801c398:	3718      	adds	r7, #24
 801c39a:	46bd      	mov	sp, r7
 801c39c:	bd80      	pop	{r7, pc}
 801c39e:	bf00      	nop
 801c3a0:	200040e0 	.word	0x200040e0
 801c3a4:	200040e4 	.word	0x200040e4

0801c3a8 <prvCheckForValidListAndQueue>:
 801c3a8:	b580      	push	{r7, lr}
 801c3aa:	b082      	sub	sp, #8
 801c3ac:	af02      	add	r7, sp, #8
 801c3ae:	f000 f98b 	bl	801c6c8 <vPortEnterCritical>
 801c3b2:	4b15      	ldr	r3, [pc, #84]	@ (801c408 <prvCheckForValidListAndQueue+0x60>)
 801c3b4:	681b      	ldr	r3, [r3, #0]
 801c3b6:	2b00      	cmp	r3, #0
 801c3b8:	d120      	bne.n	801c3fc <prvCheckForValidListAndQueue+0x54>
 801c3ba:	4814      	ldr	r0, [pc, #80]	@ (801c40c <prvCheckForValidListAndQueue+0x64>)
 801c3bc:	f7fd fcde 	bl	8019d7c <vListInitialise>
 801c3c0:	4813      	ldr	r0, [pc, #76]	@ (801c410 <prvCheckForValidListAndQueue+0x68>)
 801c3c2:	f7fd fcdb 	bl	8019d7c <vListInitialise>
 801c3c6:	4b13      	ldr	r3, [pc, #76]	@ (801c414 <prvCheckForValidListAndQueue+0x6c>)
 801c3c8:	4a10      	ldr	r2, [pc, #64]	@ (801c40c <prvCheckForValidListAndQueue+0x64>)
 801c3ca:	601a      	str	r2, [r3, #0]
 801c3cc:	4b12      	ldr	r3, [pc, #72]	@ (801c418 <prvCheckForValidListAndQueue+0x70>)
 801c3ce:	4a10      	ldr	r2, [pc, #64]	@ (801c410 <prvCheckForValidListAndQueue+0x68>)
 801c3d0:	601a      	str	r2, [r3, #0]
 801c3d2:	2300      	movs	r3, #0
 801c3d4:	9300      	str	r3, [sp, #0]
 801c3d6:	4b11      	ldr	r3, [pc, #68]	@ (801c41c <prvCheckForValidListAndQueue+0x74>)
 801c3d8:	4a11      	ldr	r2, [pc, #68]	@ (801c420 <prvCheckForValidListAndQueue+0x78>)
 801c3da:	2110      	movs	r1, #16
 801c3dc:	200a      	movs	r0, #10
 801c3de:	f7fd fdeb 	bl	8019fb8 <xQueueGenericCreateStatic>
 801c3e2:	4603      	mov	r3, r0
 801c3e4:	4a08      	ldr	r2, [pc, #32]	@ (801c408 <prvCheckForValidListAndQueue+0x60>)
 801c3e6:	6013      	str	r3, [r2, #0]
 801c3e8:	4b07      	ldr	r3, [pc, #28]	@ (801c408 <prvCheckForValidListAndQueue+0x60>)
 801c3ea:	681b      	ldr	r3, [r3, #0]
 801c3ec:	2b00      	cmp	r3, #0
 801c3ee:	d005      	beq.n	801c3fc <prvCheckForValidListAndQueue+0x54>
 801c3f0:	4b05      	ldr	r3, [pc, #20]	@ (801c408 <prvCheckForValidListAndQueue+0x60>)
 801c3f2:	681b      	ldr	r3, [r3, #0]
 801c3f4:	490b      	ldr	r1, [pc, #44]	@ (801c424 <prvCheckForValidListAndQueue+0x7c>)
 801c3f6:	4618      	mov	r0, r3
 801c3f8:	f7fe fadc 	bl	801a9b4 <vQueueAddToRegistry>
 801c3fc:	f000 f996 	bl	801c72c <vPortExitCritical>
 801c400:	bf00      	nop
 801c402:	46bd      	mov	sp, r7
 801c404:	bd80      	pop	{r7, pc}
 801c406:	bf00      	nop
 801c408:	200040e8 	.word	0x200040e8
 801c40c:	200040b8 	.word	0x200040b8
 801c410:	200040cc 	.word	0x200040cc
 801c414:	200040e0 	.word	0x200040e0
 801c418:	200040e4 	.word	0x200040e4
 801c41c:	20004194 	.word	0x20004194
 801c420:	200040f4 	.word	0x200040f4
 801c424:	08024798 	.word	0x08024798

0801c428 <xTimerPendFunctionCallFromISR>:
 801c428:	b580      	push	{r7, lr}
 801c42a:	b08a      	sub	sp, #40	@ 0x28
 801c42c:	af00      	add	r7, sp, #0
 801c42e:	60f8      	str	r0, [r7, #12]
 801c430:	60b9      	str	r1, [r7, #8]
 801c432:	607a      	str	r2, [r7, #4]
 801c434:	603b      	str	r3, [r7, #0]
 801c436:	f06f 0301 	mvn.w	r3, #1
 801c43a:	617b      	str	r3, [r7, #20]
 801c43c:	68fb      	ldr	r3, [r7, #12]
 801c43e:	61bb      	str	r3, [r7, #24]
 801c440:	68bb      	ldr	r3, [r7, #8]
 801c442:	61fb      	str	r3, [r7, #28]
 801c444:	687b      	ldr	r3, [r7, #4]
 801c446:	623b      	str	r3, [r7, #32]
 801c448:	4b06      	ldr	r3, [pc, #24]	@ (801c464 <xTimerPendFunctionCallFromISR+0x3c>)
 801c44a:	6818      	ldr	r0, [r3, #0]
 801c44c:	f107 0114 	add.w	r1, r7, #20
 801c450:	2300      	movs	r3, #0
 801c452:	683a      	ldr	r2, [r7, #0]
 801c454:	f7fd ff8e 	bl	801a374 <xQueueGenericSendFromISR>
 801c458:	6278      	str	r0, [r7, #36]	@ 0x24
 801c45a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c45c:	4618      	mov	r0, r3
 801c45e:	3728      	adds	r7, #40	@ 0x28
 801c460:	46bd      	mov	sp, r7
 801c462:	bd80      	pop	{r7, pc}
 801c464:	200040e8 	.word	0x200040e8

0801c468 <pxPortInitialiseStack>:
 801c468:	b480      	push	{r7}
 801c46a:	b085      	sub	sp, #20
 801c46c:	af00      	add	r7, sp, #0
 801c46e:	60f8      	str	r0, [r7, #12]
 801c470:	60b9      	str	r1, [r7, #8]
 801c472:	607a      	str	r2, [r7, #4]
 801c474:	68fb      	ldr	r3, [r7, #12]
 801c476:	3b04      	subs	r3, #4
 801c478:	60fb      	str	r3, [r7, #12]
 801c47a:	68fb      	ldr	r3, [r7, #12]
 801c47c:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 801c480:	601a      	str	r2, [r3, #0]
 801c482:	68fb      	ldr	r3, [r7, #12]
 801c484:	3b04      	subs	r3, #4
 801c486:	60fb      	str	r3, [r7, #12]
 801c488:	68bb      	ldr	r3, [r7, #8]
 801c48a:	f023 0201 	bic.w	r2, r3, #1
 801c48e:	68fb      	ldr	r3, [r7, #12]
 801c490:	601a      	str	r2, [r3, #0]
 801c492:	68fb      	ldr	r3, [r7, #12]
 801c494:	3b04      	subs	r3, #4
 801c496:	60fb      	str	r3, [r7, #12]
 801c498:	4a0c      	ldr	r2, [pc, #48]	@ (801c4cc <pxPortInitialiseStack+0x64>)
 801c49a:	68fb      	ldr	r3, [r7, #12]
 801c49c:	601a      	str	r2, [r3, #0]
 801c49e:	68fb      	ldr	r3, [r7, #12]
 801c4a0:	3b14      	subs	r3, #20
 801c4a2:	60fb      	str	r3, [r7, #12]
 801c4a4:	687a      	ldr	r2, [r7, #4]
 801c4a6:	68fb      	ldr	r3, [r7, #12]
 801c4a8:	601a      	str	r2, [r3, #0]
 801c4aa:	68fb      	ldr	r3, [r7, #12]
 801c4ac:	3b04      	subs	r3, #4
 801c4ae:	60fb      	str	r3, [r7, #12]
 801c4b0:	68fb      	ldr	r3, [r7, #12]
 801c4b2:	f06f 0202 	mvn.w	r2, #2
 801c4b6:	601a      	str	r2, [r3, #0]
 801c4b8:	68fb      	ldr	r3, [r7, #12]
 801c4ba:	3b20      	subs	r3, #32
 801c4bc:	60fb      	str	r3, [r7, #12]
 801c4be:	68fb      	ldr	r3, [r7, #12]
 801c4c0:	4618      	mov	r0, r3
 801c4c2:	3714      	adds	r7, #20
 801c4c4:	46bd      	mov	sp, r7
 801c4c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c4ca:	4770      	bx	lr
 801c4cc:	0801c4d1 	.word	0x0801c4d1

0801c4d0 <prvTaskExitError>:
 801c4d0:	b480      	push	{r7}
 801c4d2:	b085      	sub	sp, #20
 801c4d4:	af00      	add	r7, sp, #0
 801c4d6:	2300      	movs	r3, #0
 801c4d8:	607b      	str	r3, [r7, #4]
 801c4da:	4b13      	ldr	r3, [pc, #76]	@ (801c528 <prvTaskExitError+0x58>)
 801c4dc:	681b      	ldr	r3, [r3, #0]
 801c4de:	f1b3 3fff 	cmp.w	r3, #4294967295
 801c4e2:	d00b      	beq.n	801c4fc <prvTaskExitError+0x2c>
 801c4e4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c4e8:	f383 8811 	msr	BASEPRI, r3
 801c4ec:	f3bf 8f6f 	isb	sy
 801c4f0:	f3bf 8f4f 	dsb	sy
 801c4f4:	60fb      	str	r3, [r7, #12]
 801c4f6:	bf00      	nop
 801c4f8:	bf00      	nop
 801c4fa:	e7fd      	b.n	801c4f8 <prvTaskExitError+0x28>
 801c4fc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c500:	f383 8811 	msr	BASEPRI, r3
 801c504:	f3bf 8f6f 	isb	sy
 801c508:	f3bf 8f4f 	dsb	sy
 801c50c:	60bb      	str	r3, [r7, #8]
 801c50e:	bf00      	nop
 801c510:	bf00      	nop
 801c512:	687b      	ldr	r3, [r7, #4]
 801c514:	2b00      	cmp	r3, #0
 801c516:	d0fc      	beq.n	801c512 <prvTaskExitError+0x42>
 801c518:	bf00      	nop
 801c51a:	bf00      	nop
 801c51c:	3714      	adds	r7, #20
 801c51e:	46bd      	mov	sp, r7
 801c520:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c524:	4770      	bx	lr
 801c526:	bf00      	nop
 801c528:	200000dc 	.word	0x200000dc
 801c52c:	00000000 	.word	0x00000000

0801c530 <SVC_Handler>:
 801c530:	4b07      	ldr	r3, [pc, #28]	@ (801c550 <pxCurrentTCBConst2>)
 801c532:	6819      	ldr	r1, [r3, #0]
 801c534:	6808      	ldr	r0, [r1, #0]
 801c536:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c53a:	f380 8809 	msr	PSP, r0
 801c53e:	f3bf 8f6f 	isb	sy
 801c542:	f04f 0000 	mov.w	r0, #0
 801c546:	f380 8811 	msr	BASEPRI, r0
 801c54a:	4770      	bx	lr
 801c54c:	f3af 8000 	nop.w

0801c550 <pxCurrentTCBConst2>:
 801c550:	20003ee4 	.word	0x20003ee4
 801c554:	bf00      	nop
 801c556:	bf00      	nop

0801c558 <prvPortStartFirstTask>:
 801c558:	4808      	ldr	r0, [pc, #32]	@ (801c57c <prvPortStartFirstTask+0x24>)
 801c55a:	6800      	ldr	r0, [r0, #0]
 801c55c:	6800      	ldr	r0, [r0, #0]
 801c55e:	f380 8808 	msr	MSP, r0
 801c562:	f04f 0000 	mov.w	r0, #0
 801c566:	f380 8814 	msr	CONTROL, r0
 801c56a:	b662      	cpsie	i
 801c56c:	b661      	cpsie	f
 801c56e:	f3bf 8f4f 	dsb	sy
 801c572:	f3bf 8f6f 	isb	sy
 801c576:	df00      	svc	0
 801c578:	bf00      	nop
 801c57a:	bf00      	nop
 801c57c:	e000ed08 	.word	0xe000ed08

0801c580 <xPortStartScheduler>:
 801c580:	b580      	push	{r7, lr}
 801c582:	b086      	sub	sp, #24
 801c584:	af00      	add	r7, sp, #0
 801c586:	4b47      	ldr	r3, [pc, #284]	@ (801c6a4 <xPortStartScheduler+0x124>)
 801c588:	681b      	ldr	r3, [r3, #0]
 801c58a:	4a47      	ldr	r2, [pc, #284]	@ (801c6a8 <xPortStartScheduler+0x128>)
 801c58c:	4293      	cmp	r3, r2
 801c58e:	d10b      	bne.n	801c5a8 <xPortStartScheduler+0x28>
 801c590:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c594:	f383 8811 	msr	BASEPRI, r3
 801c598:	f3bf 8f6f 	isb	sy
 801c59c:	f3bf 8f4f 	dsb	sy
 801c5a0:	613b      	str	r3, [r7, #16]
 801c5a2:	bf00      	nop
 801c5a4:	bf00      	nop
 801c5a6:	e7fd      	b.n	801c5a4 <xPortStartScheduler+0x24>
 801c5a8:	4b3e      	ldr	r3, [pc, #248]	@ (801c6a4 <xPortStartScheduler+0x124>)
 801c5aa:	681b      	ldr	r3, [r3, #0]
 801c5ac:	4a3f      	ldr	r2, [pc, #252]	@ (801c6ac <xPortStartScheduler+0x12c>)
 801c5ae:	4293      	cmp	r3, r2
 801c5b0:	d10b      	bne.n	801c5ca <xPortStartScheduler+0x4a>
 801c5b2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c5b6:	f383 8811 	msr	BASEPRI, r3
 801c5ba:	f3bf 8f6f 	isb	sy
 801c5be:	f3bf 8f4f 	dsb	sy
 801c5c2:	60fb      	str	r3, [r7, #12]
 801c5c4:	bf00      	nop
 801c5c6:	bf00      	nop
 801c5c8:	e7fd      	b.n	801c5c6 <xPortStartScheduler+0x46>
 801c5ca:	4b39      	ldr	r3, [pc, #228]	@ (801c6b0 <xPortStartScheduler+0x130>)
 801c5cc:	617b      	str	r3, [r7, #20]
 801c5ce:	697b      	ldr	r3, [r7, #20]
 801c5d0:	781b      	ldrb	r3, [r3, #0]
 801c5d2:	b2db      	uxtb	r3, r3
 801c5d4:	607b      	str	r3, [r7, #4]
 801c5d6:	697b      	ldr	r3, [r7, #20]
 801c5d8:	22ff      	movs	r2, #255	@ 0xff
 801c5da:	701a      	strb	r2, [r3, #0]
 801c5dc:	697b      	ldr	r3, [r7, #20]
 801c5de:	781b      	ldrb	r3, [r3, #0]
 801c5e0:	b2db      	uxtb	r3, r3
 801c5e2:	70fb      	strb	r3, [r7, #3]
 801c5e4:	78fb      	ldrb	r3, [r7, #3]
 801c5e6:	b2db      	uxtb	r3, r3
 801c5e8:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 801c5ec:	b2da      	uxtb	r2, r3
 801c5ee:	4b31      	ldr	r3, [pc, #196]	@ (801c6b4 <xPortStartScheduler+0x134>)
 801c5f0:	701a      	strb	r2, [r3, #0]
 801c5f2:	4b31      	ldr	r3, [pc, #196]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c5f4:	2207      	movs	r2, #7
 801c5f6:	601a      	str	r2, [r3, #0]
 801c5f8:	e009      	b.n	801c60e <xPortStartScheduler+0x8e>
 801c5fa:	4b2f      	ldr	r3, [pc, #188]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c5fc:	681b      	ldr	r3, [r3, #0]
 801c5fe:	3b01      	subs	r3, #1
 801c600:	4a2d      	ldr	r2, [pc, #180]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c602:	6013      	str	r3, [r2, #0]
 801c604:	78fb      	ldrb	r3, [r7, #3]
 801c606:	b2db      	uxtb	r3, r3
 801c608:	005b      	lsls	r3, r3, #1
 801c60a:	b2db      	uxtb	r3, r3
 801c60c:	70fb      	strb	r3, [r7, #3]
 801c60e:	78fb      	ldrb	r3, [r7, #3]
 801c610:	b2db      	uxtb	r3, r3
 801c612:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 801c616:	2b80      	cmp	r3, #128	@ 0x80
 801c618:	d0ef      	beq.n	801c5fa <xPortStartScheduler+0x7a>
 801c61a:	4b27      	ldr	r3, [pc, #156]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c61c:	681b      	ldr	r3, [r3, #0]
 801c61e:	f1c3 0307 	rsb	r3, r3, #7
 801c622:	2b04      	cmp	r3, #4
 801c624:	d00b      	beq.n	801c63e <xPortStartScheduler+0xbe>
 801c626:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c62a:	f383 8811 	msr	BASEPRI, r3
 801c62e:	f3bf 8f6f 	isb	sy
 801c632:	f3bf 8f4f 	dsb	sy
 801c636:	60bb      	str	r3, [r7, #8]
 801c638:	bf00      	nop
 801c63a:	bf00      	nop
 801c63c:	e7fd      	b.n	801c63a <xPortStartScheduler+0xba>
 801c63e:	4b1e      	ldr	r3, [pc, #120]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c640:	681b      	ldr	r3, [r3, #0]
 801c642:	021b      	lsls	r3, r3, #8
 801c644:	4a1c      	ldr	r2, [pc, #112]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c646:	6013      	str	r3, [r2, #0]
 801c648:	4b1b      	ldr	r3, [pc, #108]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c64a:	681b      	ldr	r3, [r3, #0]
 801c64c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 801c650:	4a19      	ldr	r2, [pc, #100]	@ (801c6b8 <xPortStartScheduler+0x138>)
 801c652:	6013      	str	r3, [r2, #0]
 801c654:	687b      	ldr	r3, [r7, #4]
 801c656:	b2da      	uxtb	r2, r3
 801c658:	697b      	ldr	r3, [r7, #20]
 801c65a:	701a      	strb	r2, [r3, #0]
 801c65c:	4b17      	ldr	r3, [pc, #92]	@ (801c6bc <xPortStartScheduler+0x13c>)
 801c65e:	681b      	ldr	r3, [r3, #0]
 801c660:	4a16      	ldr	r2, [pc, #88]	@ (801c6bc <xPortStartScheduler+0x13c>)
 801c662:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 801c666:	6013      	str	r3, [r2, #0]
 801c668:	4b14      	ldr	r3, [pc, #80]	@ (801c6bc <xPortStartScheduler+0x13c>)
 801c66a:	681b      	ldr	r3, [r3, #0]
 801c66c:	4a13      	ldr	r2, [pc, #76]	@ (801c6bc <xPortStartScheduler+0x13c>)
 801c66e:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 801c672:	6013      	str	r3, [r2, #0]
 801c674:	f000 f8da 	bl	801c82c <vPortSetupTimerInterrupt>
 801c678:	4b11      	ldr	r3, [pc, #68]	@ (801c6c0 <xPortStartScheduler+0x140>)
 801c67a:	2200      	movs	r2, #0
 801c67c:	601a      	str	r2, [r3, #0]
 801c67e:	f000 f8f9 	bl	801c874 <vPortEnableVFP>
 801c682:	4b10      	ldr	r3, [pc, #64]	@ (801c6c4 <xPortStartScheduler+0x144>)
 801c684:	681b      	ldr	r3, [r3, #0]
 801c686:	4a0f      	ldr	r2, [pc, #60]	@ (801c6c4 <xPortStartScheduler+0x144>)
 801c688:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 801c68c:	6013      	str	r3, [r2, #0]
 801c68e:	f7ff ff63 	bl	801c558 <prvPortStartFirstTask>
 801c692:	f7fe fe75 	bl	801b380 <vTaskSwitchContext>
 801c696:	f7ff ff1b 	bl	801c4d0 <prvTaskExitError>
 801c69a:	2300      	movs	r3, #0
 801c69c:	4618      	mov	r0, r3
 801c69e:	3718      	adds	r7, #24
 801c6a0:	46bd      	mov	sp, r7
 801c6a2:	bd80      	pop	{r7, pc}
 801c6a4:	e000ed00 	.word	0xe000ed00
 801c6a8:	410fc271 	.word	0x410fc271
 801c6ac:	410fc270 	.word	0x410fc270
 801c6b0:	e000e400 	.word	0xe000e400
 801c6b4:	200041e4 	.word	0x200041e4
 801c6b8:	200041e8 	.word	0x200041e8
 801c6bc:	e000ed20 	.word	0xe000ed20
 801c6c0:	200000dc 	.word	0x200000dc
 801c6c4:	e000ef34 	.word	0xe000ef34

0801c6c8 <vPortEnterCritical>:
 801c6c8:	b480      	push	{r7}
 801c6ca:	b083      	sub	sp, #12
 801c6cc:	af00      	add	r7, sp, #0
 801c6ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c6d2:	f383 8811 	msr	BASEPRI, r3
 801c6d6:	f3bf 8f6f 	isb	sy
 801c6da:	f3bf 8f4f 	dsb	sy
 801c6de:	607b      	str	r3, [r7, #4]
 801c6e0:	bf00      	nop
 801c6e2:	4b10      	ldr	r3, [pc, #64]	@ (801c724 <vPortEnterCritical+0x5c>)
 801c6e4:	681b      	ldr	r3, [r3, #0]
 801c6e6:	3301      	adds	r3, #1
 801c6e8:	4a0e      	ldr	r2, [pc, #56]	@ (801c724 <vPortEnterCritical+0x5c>)
 801c6ea:	6013      	str	r3, [r2, #0]
 801c6ec:	4b0d      	ldr	r3, [pc, #52]	@ (801c724 <vPortEnterCritical+0x5c>)
 801c6ee:	681b      	ldr	r3, [r3, #0]
 801c6f0:	2b01      	cmp	r3, #1
 801c6f2:	d110      	bne.n	801c716 <vPortEnterCritical+0x4e>
 801c6f4:	4b0c      	ldr	r3, [pc, #48]	@ (801c728 <vPortEnterCritical+0x60>)
 801c6f6:	681b      	ldr	r3, [r3, #0]
 801c6f8:	b2db      	uxtb	r3, r3
 801c6fa:	2b00      	cmp	r3, #0
 801c6fc:	d00b      	beq.n	801c716 <vPortEnterCritical+0x4e>
 801c6fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c702:	f383 8811 	msr	BASEPRI, r3
 801c706:	f3bf 8f6f 	isb	sy
 801c70a:	f3bf 8f4f 	dsb	sy
 801c70e:	603b      	str	r3, [r7, #0]
 801c710:	bf00      	nop
 801c712:	bf00      	nop
 801c714:	e7fd      	b.n	801c712 <vPortEnterCritical+0x4a>
 801c716:	bf00      	nop
 801c718:	370c      	adds	r7, #12
 801c71a:	46bd      	mov	sp, r7
 801c71c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c720:	4770      	bx	lr
 801c722:	bf00      	nop
 801c724:	200000dc 	.word	0x200000dc
 801c728:	e000ed04 	.word	0xe000ed04

0801c72c <vPortExitCritical>:
 801c72c:	b480      	push	{r7}
 801c72e:	b083      	sub	sp, #12
 801c730:	af00      	add	r7, sp, #0
 801c732:	4b12      	ldr	r3, [pc, #72]	@ (801c77c <vPortExitCritical+0x50>)
 801c734:	681b      	ldr	r3, [r3, #0]
 801c736:	2b00      	cmp	r3, #0
 801c738:	d10b      	bne.n	801c752 <vPortExitCritical+0x26>
 801c73a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c73e:	f383 8811 	msr	BASEPRI, r3
 801c742:	f3bf 8f6f 	isb	sy
 801c746:	f3bf 8f4f 	dsb	sy
 801c74a:	607b      	str	r3, [r7, #4]
 801c74c:	bf00      	nop
 801c74e:	bf00      	nop
 801c750:	e7fd      	b.n	801c74e <vPortExitCritical+0x22>
 801c752:	4b0a      	ldr	r3, [pc, #40]	@ (801c77c <vPortExitCritical+0x50>)
 801c754:	681b      	ldr	r3, [r3, #0]
 801c756:	3b01      	subs	r3, #1
 801c758:	4a08      	ldr	r2, [pc, #32]	@ (801c77c <vPortExitCritical+0x50>)
 801c75a:	6013      	str	r3, [r2, #0]
 801c75c:	4b07      	ldr	r3, [pc, #28]	@ (801c77c <vPortExitCritical+0x50>)
 801c75e:	681b      	ldr	r3, [r3, #0]
 801c760:	2b00      	cmp	r3, #0
 801c762:	d105      	bne.n	801c770 <vPortExitCritical+0x44>
 801c764:	2300      	movs	r3, #0
 801c766:	603b      	str	r3, [r7, #0]
 801c768:	683b      	ldr	r3, [r7, #0]
 801c76a:	f383 8811 	msr	BASEPRI, r3
 801c76e:	bf00      	nop
 801c770:	bf00      	nop
 801c772:	370c      	adds	r7, #12
 801c774:	46bd      	mov	sp, r7
 801c776:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c77a:	4770      	bx	lr
 801c77c:	200000dc 	.word	0x200000dc

0801c780 <PendSV_Handler>:
 801c780:	f3ef 8009 	mrs	r0, PSP
 801c784:	f3bf 8f6f 	isb	sy
 801c788:	4b15      	ldr	r3, [pc, #84]	@ (801c7e0 <pxCurrentTCBConst>)
 801c78a:	681a      	ldr	r2, [r3, #0]
 801c78c:	f01e 0f10 	tst.w	lr, #16
 801c790:	bf08      	it	eq
 801c792:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 801c796:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c79a:	6010      	str	r0, [r2, #0]
 801c79c:	e92d 0009 	stmdb	sp!, {r0, r3}
 801c7a0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 801c7a4:	f380 8811 	msr	BASEPRI, r0
 801c7a8:	f3bf 8f4f 	dsb	sy
 801c7ac:	f3bf 8f6f 	isb	sy
 801c7b0:	f7fe fde6 	bl	801b380 <vTaskSwitchContext>
 801c7b4:	f04f 0000 	mov.w	r0, #0
 801c7b8:	f380 8811 	msr	BASEPRI, r0
 801c7bc:	bc09      	pop	{r0, r3}
 801c7be:	6819      	ldr	r1, [r3, #0]
 801c7c0:	6808      	ldr	r0, [r1, #0]
 801c7c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7c6:	f01e 0f10 	tst.w	lr, #16
 801c7ca:	bf08      	it	eq
 801c7cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 801c7d0:	f380 8809 	msr	PSP, r0
 801c7d4:	f3bf 8f6f 	isb	sy
 801c7d8:	4770      	bx	lr
 801c7da:	bf00      	nop
 801c7dc:	f3af 8000 	nop.w

0801c7e0 <pxCurrentTCBConst>:
 801c7e0:	20003ee4 	.word	0x20003ee4
 801c7e4:	bf00      	nop
 801c7e6:	bf00      	nop

0801c7e8 <SysTick_Handler>:
 801c7e8:	b580      	push	{r7, lr}
 801c7ea:	b082      	sub	sp, #8
 801c7ec:	af00      	add	r7, sp, #0
 801c7ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c7f2:	f383 8811 	msr	BASEPRI, r3
 801c7f6:	f3bf 8f6f 	isb	sy
 801c7fa:	f3bf 8f4f 	dsb	sy
 801c7fe:	607b      	str	r3, [r7, #4]
 801c800:	bf00      	nop
 801c802:	f7fe fd03 	bl	801b20c <xTaskIncrementTick>
 801c806:	4603      	mov	r3, r0
 801c808:	2b00      	cmp	r3, #0
 801c80a:	d003      	beq.n	801c814 <SysTick_Handler+0x2c>
 801c80c:	4b06      	ldr	r3, [pc, #24]	@ (801c828 <SysTick_Handler+0x40>)
 801c80e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 801c812:	601a      	str	r2, [r3, #0]
 801c814:	2300      	movs	r3, #0
 801c816:	603b      	str	r3, [r7, #0]
 801c818:	683b      	ldr	r3, [r7, #0]
 801c81a:	f383 8811 	msr	BASEPRI, r3
 801c81e:	bf00      	nop
 801c820:	bf00      	nop
 801c822:	3708      	adds	r7, #8
 801c824:	46bd      	mov	sp, r7
 801c826:	bd80      	pop	{r7, pc}
 801c828:	e000ed04 	.word	0xe000ed04

0801c82c <vPortSetupTimerInterrupt>:
 801c82c:	b480      	push	{r7}
 801c82e:	af00      	add	r7, sp, #0
 801c830:	4b0b      	ldr	r3, [pc, #44]	@ (801c860 <vPortSetupTimerInterrupt+0x34>)
 801c832:	2200      	movs	r2, #0
 801c834:	601a      	str	r2, [r3, #0]
 801c836:	4b0b      	ldr	r3, [pc, #44]	@ (801c864 <vPortSetupTimerInterrupt+0x38>)
 801c838:	2200      	movs	r2, #0
 801c83a:	601a      	str	r2, [r3, #0]
 801c83c:	4b0a      	ldr	r3, [pc, #40]	@ (801c868 <vPortSetupTimerInterrupt+0x3c>)
 801c83e:	681b      	ldr	r3, [r3, #0]
 801c840:	4a0a      	ldr	r2, [pc, #40]	@ (801c86c <vPortSetupTimerInterrupt+0x40>)
 801c842:	fba2 2303 	umull	r2, r3, r2, r3
 801c846:	099b      	lsrs	r3, r3, #6
 801c848:	4a09      	ldr	r2, [pc, #36]	@ (801c870 <vPortSetupTimerInterrupt+0x44>)
 801c84a:	3b01      	subs	r3, #1
 801c84c:	6013      	str	r3, [r2, #0]
 801c84e:	4b04      	ldr	r3, [pc, #16]	@ (801c860 <vPortSetupTimerInterrupt+0x34>)
 801c850:	2207      	movs	r2, #7
 801c852:	601a      	str	r2, [r3, #0]
 801c854:	bf00      	nop
 801c856:	46bd      	mov	sp, r7
 801c858:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c85c:	4770      	bx	lr
 801c85e:	bf00      	nop
 801c860:	e000e010 	.word	0xe000e010
 801c864:	e000e018 	.word	0xe000e018
 801c868:	20000004 	.word	0x20000004
 801c86c:	10624dd3 	.word	0x10624dd3
 801c870:	e000e014 	.word	0xe000e014

0801c874 <vPortEnableVFP>:
 801c874:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 801c884 <vPortEnableVFP+0x10>
 801c878:	6801      	ldr	r1, [r0, #0]
 801c87a:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 801c87e:	6001      	str	r1, [r0, #0]
 801c880:	4770      	bx	lr
 801c882:	bf00      	nop
 801c884:	e000ed88 	.word	0xe000ed88

0801c888 <vPortValidateInterruptPriority>:
 801c888:	b480      	push	{r7}
 801c88a:	b085      	sub	sp, #20
 801c88c:	af00      	add	r7, sp, #0
 801c88e:	f3ef 8305 	mrs	r3, IPSR
 801c892:	60fb      	str	r3, [r7, #12]
 801c894:	68fb      	ldr	r3, [r7, #12]
 801c896:	2b0f      	cmp	r3, #15
 801c898:	d915      	bls.n	801c8c6 <vPortValidateInterruptPriority+0x3e>
 801c89a:	4a18      	ldr	r2, [pc, #96]	@ (801c8fc <vPortValidateInterruptPriority+0x74>)
 801c89c:	68fb      	ldr	r3, [r7, #12]
 801c89e:	4413      	add	r3, r2
 801c8a0:	781b      	ldrb	r3, [r3, #0]
 801c8a2:	72fb      	strb	r3, [r7, #11]
 801c8a4:	4b16      	ldr	r3, [pc, #88]	@ (801c900 <vPortValidateInterruptPriority+0x78>)
 801c8a6:	781b      	ldrb	r3, [r3, #0]
 801c8a8:	7afa      	ldrb	r2, [r7, #11]
 801c8aa:	429a      	cmp	r2, r3
 801c8ac:	d20b      	bcs.n	801c8c6 <vPortValidateInterruptPriority+0x3e>
 801c8ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c8b2:	f383 8811 	msr	BASEPRI, r3
 801c8b6:	f3bf 8f6f 	isb	sy
 801c8ba:	f3bf 8f4f 	dsb	sy
 801c8be:	607b      	str	r3, [r7, #4]
 801c8c0:	bf00      	nop
 801c8c2:	bf00      	nop
 801c8c4:	e7fd      	b.n	801c8c2 <vPortValidateInterruptPriority+0x3a>
 801c8c6:	4b0f      	ldr	r3, [pc, #60]	@ (801c904 <vPortValidateInterruptPriority+0x7c>)
 801c8c8:	681b      	ldr	r3, [r3, #0]
 801c8ca:	f403 62e0 	and.w	r2, r3, #1792	@ 0x700
 801c8ce:	4b0e      	ldr	r3, [pc, #56]	@ (801c908 <vPortValidateInterruptPriority+0x80>)
 801c8d0:	681b      	ldr	r3, [r3, #0]
 801c8d2:	429a      	cmp	r2, r3
 801c8d4:	d90b      	bls.n	801c8ee <vPortValidateInterruptPriority+0x66>
 801c8d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c8da:	f383 8811 	msr	BASEPRI, r3
 801c8de:	f3bf 8f6f 	isb	sy
 801c8e2:	f3bf 8f4f 	dsb	sy
 801c8e6:	603b      	str	r3, [r7, #0]
 801c8e8:	bf00      	nop
 801c8ea:	bf00      	nop
 801c8ec:	e7fd      	b.n	801c8ea <vPortValidateInterruptPriority+0x62>
 801c8ee:	bf00      	nop
 801c8f0:	3714      	adds	r7, #20
 801c8f2:	46bd      	mov	sp, r7
 801c8f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c8f8:	4770      	bx	lr
 801c8fa:	bf00      	nop
 801c8fc:	e000e3f0 	.word	0xe000e3f0
 801c900:	200041e4 	.word	0x200041e4
 801c904:	e000ed0c 	.word	0xe000ed0c
 801c908:	200041e8 	.word	0x200041e8

0801c90c <pvPortMalloc>:
 801c90c:	b580      	push	{r7, lr}
 801c90e:	b08a      	sub	sp, #40	@ 0x28
 801c910:	af00      	add	r7, sp, #0
 801c912:	6078      	str	r0, [r7, #4]
 801c914:	2300      	movs	r3, #0
 801c916:	61fb      	str	r3, [r7, #28]
 801c918:	f7fe fbbc 	bl	801b094 <vTaskSuspendAll>
 801c91c:	4b5c      	ldr	r3, [pc, #368]	@ (801ca90 <pvPortMalloc+0x184>)
 801c91e:	681b      	ldr	r3, [r3, #0]
 801c920:	2b00      	cmp	r3, #0
 801c922:	d101      	bne.n	801c928 <pvPortMalloc+0x1c>
 801c924:	f000 f924 	bl	801cb70 <prvHeapInit>
 801c928:	4b5a      	ldr	r3, [pc, #360]	@ (801ca94 <pvPortMalloc+0x188>)
 801c92a:	681a      	ldr	r2, [r3, #0]
 801c92c:	687b      	ldr	r3, [r7, #4]
 801c92e:	4013      	ands	r3, r2
 801c930:	2b00      	cmp	r3, #0
 801c932:	f040 8095 	bne.w	801ca60 <pvPortMalloc+0x154>
 801c936:	687b      	ldr	r3, [r7, #4]
 801c938:	2b00      	cmp	r3, #0
 801c93a:	d01e      	beq.n	801c97a <pvPortMalloc+0x6e>
 801c93c:	2208      	movs	r2, #8
 801c93e:	687b      	ldr	r3, [r7, #4]
 801c940:	4413      	add	r3, r2
 801c942:	607b      	str	r3, [r7, #4]
 801c944:	687b      	ldr	r3, [r7, #4]
 801c946:	f003 0307 	and.w	r3, r3, #7
 801c94a:	2b00      	cmp	r3, #0
 801c94c:	d015      	beq.n	801c97a <pvPortMalloc+0x6e>
 801c94e:	687b      	ldr	r3, [r7, #4]
 801c950:	f023 0307 	bic.w	r3, r3, #7
 801c954:	3308      	adds	r3, #8
 801c956:	607b      	str	r3, [r7, #4]
 801c958:	687b      	ldr	r3, [r7, #4]
 801c95a:	f003 0307 	and.w	r3, r3, #7
 801c95e:	2b00      	cmp	r3, #0
 801c960:	d00b      	beq.n	801c97a <pvPortMalloc+0x6e>
 801c962:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c966:	f383 8811 	msr	BASEPRI, r3
 801c96a:	f3bf 8f6f 	isb	sy
 801c96e:	f3bf 8f4f 	dsb	sy
 801c972:	617b      	str	r3, [r7, #20]
 801c974:	bf00      	nop
 801c976:	bf00      	nop
 801c978:	e7fd      	b.n	801c976 <pvPortMalloc+0x6a>
 801c97a:	687b      	ldr	r3, [r7, #4]
 801c97c:	2b00      	cmp	r3, #0
 801c97e:	d06f      	beq.n	801ca60 <pvPortMalloc+0x154>
 801c980:	4b45      	ldr	r3, [pc, #276]	@ (801ca98 <pvPortMalloc+0x18c>)
 801c982:	681b      	ldr	r3, [r3, #0]
 801c984:	687a      	ldr	r2, [r7, #4]
 801c986:	429a      	cmp	r2, r3
 801c988:	d86a      	bhi.n	801ca60 <pvPortMalloc+0x154>
 801c98a:	4b44      	ldr	r3, [pc, #272]	@ (801ca9c <pvPortMalloc+0x190>)
 801c98c:	623b      	str	r3, [r7, #32]
 801c98e:	4b43      	ldr	r3, [pc, #268]	@ (801ca9c <pvPortMalloc+0x190>)
 801c990:	681b      	ldr	r3, [r3, #0]
 801c992:	627b      	str	r3, [r7, #36]	@ 0x24
 801c994:	e004      	b.n	801c9a0 <pvPortMalloc+0x94>
 801c996:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c998:	623b      	str	r3, [r7, #32]
 801c99a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c99c:	681b      	ldr	r3, [r3, #0]
 801c99e:	627b      	str	r3, [r7, #36]	@ 0x24
 801c9a0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c9a2:	685b      	ldr	r3, [r3, #4]
 801c9a4:	687a      	ldr	r2, [r7, #4]
 801c9a6:	429a      	cmp	r2, r3
 801c9a8:	d903      	bls.n	801c9b2 <pvPortMalloc+0xa6>
 801c9aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c9ac:	681b      	ldr	r3, [r3, #0]
 801c9ae:	2b00      	cmp	r3, #0
 801c9b0:	d1f1      	bne.n	801c996 <pvPortMalloc+0x8a>
 801c9b2:	4b37      	ldr	r3, [pc, #220]	@ (801ca90 <pvPortMalloc+0x184>)
 801c9b4:	681b      	ldr	r3, [r3, #0]
 801c9b6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801c9b8:	429a      	cmp	r2, r3
 801c9ba:	d051      	beq.n	801ca60 <pvPortMalloc+0x154>
 801c9bc:	6a3b      	ldr	r3, [r7, #32]
 801c9be:	681b      	ldr	r3, [r3, #0]
 801c9c0:	2208      	movs	r2, #8
 801c9c2:	4413      	add	r3, r2
 801c9c4:	61fb      	str	r3, [r7, #28]
 801c9c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c9c8:	681a      	ldr	r2, [r3, #0]
 801c9ca:	6a3b      	ldr	r3, [r7, #32]
 801c9cc:	601a      	str	r2, [r3, #0]
 801c9ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801c9d0:	685a      	ldr	r2, [r3, #4]
 801c9d2:	687b      	ldr	r3, [r7, #4]
 801c9d4:	1ad2      	subs	r2, r2, r3
 801c9d6:	2308      	movs	r3, #8
 801c9d8:	005b      	lsls	r3, r3, #1
 801c9da:	429a      	cmp	r2, r3
 801c9dc:	d920      	bls.n	801ca20 <pvPortMalloc+0x114>
 801c9de:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 801c9e0:	687b      	ldr	r3, [r7, #4]
 801c9e2:	4413      	add	r3, r2
 801c9e4:	61bb      	str	r3, [r7, #24]
 801c9e6:	69bb      	ldr	r3, [r7, #24]
 801c9e8:	f003 0307 	and.w	r3, r3, #7
 801c9ec:	2b00      	cmp	r3, #0
 801c9ee:	d00b      	beq.n	801ca08 <pvPortMalloc+0xfc>
 801c9f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801c9f4:	f383 8811 	msr	BASEPRI, r3
 801c9f8:	f3bf 8f6f 	isb	sy
 801c9fc:	f3bf 8f4f 	dsb	sy
 801ca00:	613b      	str	r3, [r7, #16]
 801ca02:	bf00      	nop
 801ca04:	bf00      	nop
 801ca06:	e7fd      	b.n	801ca04 <pvPortMalloc+0xf8>
 801ca08:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ca0a:	685a      	ldr	r2, [r3, #4]
 801ca0c:	687b      	ldr	r3, [r7, #4]
 801ca0e:	1ad2      	subs	r2, r2, r3
 801ca10:	69bb      	ldr	r3, [r7, #24]
 801ca12:	605a      	str	r2, [r3, #4]
 801ca14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ca16:	687a      	ldr	r2, [r7, #4]
 801ca18:	605a      	str	r2, [r3, #4]
 801ca1a:	69b8      	ldr	r0, [r7, #24]
 801ca1c:	f000 f90a 	bl	801cc34 <prvInsertBlockIntoFreeList>
 801ca20:	4b1d      	ldr	r3, [pc, #116]	@ (801ca98 <pvPortMalloc+0x18c>)
 801ca22:	681a      	ldr	r2, [r3, #0]
 801ca24:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ca26:	685b      	ldr	r3, [r3, #4]
 801ca28:	1ad3      	subs	r3, r2, r3
 801ca2a:	4a1b      	ldr	r2, [pc, #108]	@ (801ca98 <pvPortMalloc+0x18c>)
 801ca2c:	6013      	str	r3, [r2, #0]
 801ca2e:	4b1a      	ldr	r3, [pc, #104]	@ (801ca98 <pvPortMalloc+0x18c>)
 801ca30:	681a      	ldr	r2, [r3, #0]
 801ca32:	4b1b      	ldr	r3, [pc, #108]	@ (801caa0 <pvPortMalloc+0x194>)
 801ca34:	681b      	ldr	r3, [r3, #0]
 801ca36:	429a      	cmp	r2, r3
 801ca38:	d203      	bcs.n	801ca42 <pvPortMalloc+0x136>
 801ca3a:	4b17      	ldr	r3, [pc, #92]	@ (801ca98 <pvPortMalloc+0x18c>)
 801ca3c:	681b      	ldr	r3, [r3, #0]
 801ca3e:	4a18      	ldr	r2, [pc, #96]	@ (801caa0 <pvPortMalloc+0x194>)
 801ca40:	6013      	str	r3, [r2, #0]
 801ca42:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ca44:	685a      	ldr	r2, [r3, #4]
 801ca46:	4b13      	ldr	r3, [pc, #76]	@ (801ca94 <pvPortMalloc+0x188>)
 801ca48:	681b      	ldr	r3, [r3, #0]
 801ca4a:	431a      	orrs	r2, r3
 801ca4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ca4e:	605a      	str	r2, [r3, #4]
 801ca50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801ca52:	2200      	movs	r2, #0
 801ca54:	601a      	str	r2, [r3, #0]
 801ca56:	4b13      	ldr	r3, [pc, #76]	@ (801caa4 <pvPortMalloc+0x198>)
 801ca58:	681b      	ldr	r3, [r3, #0]
 801ca5a:	3301      	adds	r3, #1
 801ca5c:	4a11      	ldr	r2, [pc, #68]	@ (801caa4 <pvPortMalloc+0x198>)
 801ca5e:	6013      	str	r3, [r2, #0]
 801ca60:	f7fe fb26 	bl	801b0b0 <xTaskResumeAll>
 801ca64:	69fb      	ldr	r3, [r7, #28]
 801ca66:	f003 0307 	and.w	r3, r3, #7
 801ca6a:	2b00      	cmp	r3, #0
 801ca6c:	d00b      	beq.n	801ca86 <pvPortMalloc+0x17a>
 801ca6e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801ca72:	f383 8811 	msr	BASEPRI, r3
 801ca76:	f3bf 8f6f 	isb	sy
 801ca7a:	f3bf 8f4f 	dsb	sy
 801ca7e:	60fb      	str	r3, [r7, #12]
 801ca80:	bf00      	nop
 801ca82:	bf00      	nop
 801ca84:	e7fd      	b.n	801ca82 <pvPortMalloc+0x176>
 801ca86:	69fb      	ldr	r3, [r7, #28]
 801ca88:	4618      	mov	r0, r3
 801ca8a:	3728      	adds	r7, #40	@ 0x28
 801ca8c:	46bd      	mov	sp, r7
 801ca8e:	bd80      	pop	{r7, pc}
 801ca90:	2000b724 	.word	0x2000b724
 801ca94:	2000b738 	.word	0x2000b738
 801ca98:	2000b728 	.word	0x2000b728
 801ca9c:	2000b71c 	.word	0x2000b71c
 801caa0:	2000b72c 	.word	0x2000b72c
 801caa4:	2000b730 	.word	0x2000b730

0801caa8 <vPortFree>:
 801caa8:	b580      	push	{r7, lr}
 801caaa:	b086      	sub	sp, #24
 801caac:	af00      	add	r7, sp, #0
 801caae:	6078      	str	r0, [r7, #4]
 801cab0:	687b      	ldr	r3, [r7, #4]
 801cab2:	617b      	str	r3, [r7, #20]
 801cab4:	687b      	ldr	r3, [r7, #4]
 801cab6:	2b00      	cmp	r3, #0
 801cab8:	d04f      	beq.n	801cb5a <vPortFree+0xb2>
 801caba:	2308      	movs	r3, #8
 801cabc:	425b      	negs	r3, r3
 801cabe:	697a      	ldr	r2, [r7, #20]
 801cac0:	4413      	add	r3, r2
 801cac2:	617b      	str	r3, [r7, #20]
 801cac4:	697b      	ldr	r3, [r7, #20]
 801cac6:	613b      	str	r3, [r7, #16]
 801cac8:	693b      	ldr	r3, [r7, #16]
 801caca:	685a      	ldr	r2, [r3, #4]
 801cacc:	4b25      	ldr	r3, [pc, #148]	@ (801cb64 <vPortFree+0xbc>)
 801cace:	681b      	ldr	r3, [r3, #0]
 801cad0:	4013      	ands	r3, r2
 801cad2:	2b00      	cmp	r3, #0
 801cad4:	d10b      	bne.n	801caee <vPortFree+0x46>
 801cad6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801cada:	f383 8811 	msr	BASEPRI, r3
 801cade:	f3bf 8f6f 	isb	sy
 801cae2:	f3bf 8f4f 	dsb	sy
 801cae6:	60fb      	str	r3, [r7, #12]
 801cae8:	bf00      	nop
 801caea:	bf00      	nop
 801caec:	e7fd      	b.n	801caea <vPortFree+0x42>
 801caee:	693b      	ldr	r3, [r7, #16]
 801caf0:	681b      	ldr	r3, [r3, #0]
 801caf2:	2b00      	cmp	r3, #0
 801caf4:	d00b      	beq.n	801cb0e <vPortFree+0x66>
 801caf6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 801cafa:	f383 8811 	msr	BASEPRI, r3
 801cafe:	f3bf 8f6f 	isb	sy
 801cb02:	f3bf 8f4f 	dsb	sy
 801cb06:	60bb      	str	r3, [r7, #8]
 801cb08:	bf00      	nop
 801cb0a:	bf00      	nop
 801cb0c:	e7fd      	b.n	801cb0a <vPortFree+0x62>
 801cb0e:	693b      	ldr	r3, [r7, #16]
 801cb10:	685a      	ldr	r2, [r3, #4]
 801cb12:	4b14      	ldr	r3, [pc, #80]	@ (801cb64 <vPortFree+0xbc>)
 801cb14:	681b      	ldr	r3, [r3, #0]
 801cb16:	4013      	ands	r3, r2
 801cb18:	2b00      	cmp	r3, #0
 801cb1a:	d01e      	beq.n	801cb5a <vPortFree+0xb2>
 801cb1c:	693b      	ldr	r3, [r7, #16]
 801cb1e:	681b      	ldr	r3, [r3, #0]
 801cb20:	2b00      	cmp	r3, #0
 801cb22:	d11a      	bne.n	801cb5a <vPortFree+0xb2>
 801cb24:	693b      	ldr	r3, [r7, #16]
 801cb26:	685a      	ldr	r2, [r3, #4]
 801cb28:	4b0e      	ldr	r3, [pc, #56]	@ (801cb64 <vPortFree+0xbc>)
 801cb2a:	681b      	ldr	r3, [r3, #0]
 801cb2c:	43db      	mvns	r3, r3
 801cb2e:	401a      	ands	r2, r3
 801cb30:	693b      	ldr	r3, [r7, #16]
 801cb32:	605a      	str	r2, [r3, #4]
 801cb34:	f7fe faae 	bl	801b094 <vTaskSuspendAll>
 801cb38:	693b      	ldr	r3, [r7, #16]
 801cb3a:	685a      	ldr	r2, [r3, #4]
 801cb3c:	4b0a      	ldr	r3, [pc, #40]	@ (801cb68 <vPortFree+0xc0>)
 801cb3e:	681b      	ldr	r3, [r3, #0]
 801cb40:	4413      	add	r3, r2
 801cb42:	4a09      	ldr	r2, [pc, #36]	@ (801cb68 <vPortFree+0xc0>)
 801cb44:	6013      	str	r3, [r2, #0]
 801cb46:	6938      	ldr	r0, [r7, #16]
 801cb48:	f000 f874 	bl	801cc34 <prvInsertBlockIntoFreeList>
 801cb4c:	4b07      	ldr	r3, [pc, #28]	@ (801cb6c <vPortFree+0xc4>)
 801cb4e:	681b      	ldr	r3, [r3, #0]
 801cb50:	3301      	adds	r3, #1
 801cb52:	4a06      	ldr	r2, [pc, #24]	@ (801cb6c <vPortFree+0xc4>)
 801cb54:	6013      	str	r3, [r2, #0]
 801cb56:	f7fe faab 	bl	801b0b0 <xTaskResumeAll>
 801cb5a:	bf00      	nop
 801cb5c:	3718      	adds	r7, #24
 801cb5e:	46bd      	mov	sp, r7
 801cb60:	bd80      	pop	{r7, pc}
 801cb62:	bf00      	nop
 801cb64:	2000b738 	.word	0x2000b738
 801cb68:	2000b728 	.word	0x2000b728
 801cb6c:	2000b734 	.word	0x2000b734

0801cb70 <prvHeapInit>:
 801cb70:	b480      	push	{r7}
 801cb72:	b085      	sub	sp, #20
 801cb74:	af00      	add	r7, sp, #0
 801cb76:	f247 5330 	movw	r3, #30000	@ 0x7530
 801cb7a:	60bb      	str	r3, [r7, #8]
 801cb7c:	4b27      	ldr	r3, [pc, #156]	@ (801cc1c <prvHeapInit+0xac>)
 801cb7e:	60fb      	str	r3, [r7, #12]
 801cb80:	68fb      	ldr	r3, [r7, #12]
 801cb82:	f003 0307 	and.w	r3, r3, #7
 801cb86:	2b00      	cmp	r3, #0
 801cb88:	d00c      	beq.n	801cba4 <prvHeapInit+0x34>
 801cb8a:	68fb      	ldr	r3, [r7, #12]
 801cb8c:	3307      	adds	r3, #7
 801cb8e:	60fb      	str	r3, [r7, #12]
 801cb90:	68fb      	ldr	r3, [r7, #12]
 801cb92:	f023 0307 	bic.w	r3, r3, #7
 801cb96:	60fb      	str	r3, [r7, #12]
 801cb98:	68ba      	ldr	r2, [r7, #8]
 801cb9a:	68fb      	ldr	r3, [r7, #12]
 801cb9c:	1ad3      	subs	r3, r2, r3
 801cb9e:	4a1f      	ldr	r2, [pc, #124]	@ (801cc1c <prvHeapInit+0xac>)
 801cba0:	4413      	add	r3, r2
 801cba2:	60bb      	str	r3, [r7, #8]
 801cba4:	68fb      	ldr	r3, [r7, #12]
 801cba6:	607b      	str	r3, [r7, #4]
 801cba8:	4a1d      	ldr	r2, [pc, #116]	@ (801cc20 <prvHeapInit+0xb0>)
 801cbaa:	687b      	ldr	r3, [r7, #4]
 801cbac:	6013      	str	r3, [r2, #0]
 801cbae:	4b1c      	ldr	r3, [pc, #112]	@ (801cc20 <prvHeapInit+0xb0>)
 801cbb0:	2200      	movs	r2, #0
 801cbb2:	605a      	str	r2, [r3, #4]
 801cbb4:	687b      	ldr	r3, [r7, #4]
 801cbb6:	68ba      	ldr	r2, [r7, #8]
 801cbb8:	4413      	add	r3, r2
 801cbba:	60fb      	str	r3, [r7, #12]
 801cbbc:	2208      	movs	r2, #8
 801cbbe:	68fb      	ldr	r3, [r7, #12]
 801cbc0:	1a9b      	subs	r3, r3, r2
 801cbc2:	60fb      	str	r3, [r7, #12]
 801cbc4:	68fb      	ldr	r3, [r7, #12]
 801cbc6:	f023 0307 	bic.w	r3, r3, #7
 801cbca:	60fb      	str	r3, [r7, #12]
 801cbcc:	68fb      	ldr	r3, [r7, #12]
 801cbce:	4a15      	ldr	r2, [pc, #84]	@ (801cc24 <prvHeapInit+0xb4>)
 801cbd0:	6013      	str	r3, [r2, #0]
 801cbd2:	4b14      	ldr	r3, [pc, #80]	@ (801cc24 <prvHeapInit+0xb4>)
 801cbd4:	681b      	ldr	r3, [r3, #0]
 801cbd6:	2200      	movs	r2, #0
 801cbd8:	605a      	str	r2, [r3, #4]
 801cbda:	4b12      	ldr	r3, [pc, #72]	@ (801cc24 <prvHeapInit+0xb4>)
 801cbdc:	681b      	ldr	r3, [r3, #0]
 801cbde:	2200      	movs	r2, #0
 801cbe0:	601a      	str	r2, [r3, #0]
 801cbe2:	687b      	ldr	r3, [r7, #4]
 801cbe4:	603b      	str	r3, [r7, #0]
 801cbe6:	683b      	ldr	r3, [r7, #0]
 801cbe8:	68fa      	ldr	r2, [r7, #12]
 801cbea:	1ad2      	subs	r2, r2, r3
 801cbec:	683b      	ldr	r3, [r7, #0]
 801cbee:	605a      	str	r2, [r3, #4]
 801cbf0:	4b0c      	ldr	r3, [pc, #48]	@ (801cc24 <prvHeapInit+0xb4>)
 801cbf2:	681a      	ldr	r2, [r3, #0]
 801cbf4:	683b      	ldr	r3, [r7, #0]
 801cbf6:	601a      	str	r2, [r3, #0]
 801cbf8:	683b      	ldr	r3, [r7, #0]
 801cbfa:	685b      	ldr	r3, [r3, #4]
 801cbfc:	4a0a      	ldr	r2, [pc, #40]	@ (801cc28 <prvHeapInit+0xb8>)
 801cbfe:	6013      	str	r3, [r2, #0]
 801cc00:	683b      	ldr	r3, [r7, #0]
 801cc02:	685b      	ldr	r3, [r3, #4]
 801cc04:	4a09      	ldr	r2, [pc, #36]	@ (801cc2c <prvHeapInit+0xbc>)
 801cc06:	6013      	str	r3, [r2, #0]
 801cc08:	4b09      	ldr	r3, [pc, #36]	@ (801cc30 <prvHeapInit+0xc0>)
 801cc0a:	f04f 4200 	mov.w	r2, #2147483648	@ 0x80000000
 801cc0e:	601a      	str	r2, [r3, #0]
 801cc10:	bf00      	nop
 801cc12:	3714      	adds	r7, #20
 801cc14:	46bd      	mov	sp, r7
 801cc16:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cc1a:	4770      	bx	lr
 801cc1c:	200041ec 	.word	0x200041ec
 801cc20:	2000b71c 	.word	0x2000b71c
 801cc24:	2000b724 	.word	0x2000b724
 801cc28:	2000b72c 	.word	0x2000b72c
 801cc2c:	2000b728 	.word	0x2000b728
 801cc30:	2000b738 	.word	0x2000b738

0801cc34 <prvInsertBlockIntoFreeList>:
 801cc34:	b480      	push	{r7}
 801cc36:	b085      	sub	sp, #20
 801cc38:	af00      	add	r7, sp, #0
 801cc3a:	6078      	str	r0, [r7, #4]
 801cc3c:	4b28      	ldr	r3, [pc, #160]	@ (801cce0 <prvInsertBlockIntoFreeList+0xac>)
 801cc3e:	60fb      	str	r3, [r7, #12]
 801cc40:	e002      	b.n	801cc48 <prvInsertBlockIntoFreeList+0x14>
 801cc42:	68fb      	ldr	r3, [r7, #12]
 801cc44:	681b      	ldr	r3, [r3, #0]
 801cc46:	60fb      	str	r3, [r7, #12]
 801cc48:	68fb      	ldr	r3, [r7, #12]
 801cc4a:	681b      	ldr	r3, [r3, #0]
 801cc4c:	687a      	ldr	r2, [r7, #4]
 801cc4e:	429a      	cmp	r2, r3
 801cc50:	d8f7      	bhi.n	801cc42 <prvInsertBlockIntoFreeList+0xe>
 801cc52:	68fb      	ldr	r3, [r7, #12]
 801cc54:	60bb      	str	r3, [r7, #8]
 801cc56:	68fb      	ldr	r3, [r7, #12]
 801cc58:	685b      	ldr	r3, [r3, #4]
 801cc5a:	68ba      	ldr	r2, [r7, #8]
 801cc5c:	4413      	add	r3, r2
 801cc5e:	687a      	ldr	r2, [r7, #4]
 801cc60:	429a      	cmp	r2, r3
 801cc62:	d108      	bne.n	801cc76 <prvInsertBlockIntoFreeList+0x42>
 801cc64:	68fb      	ldr	r3, [r7, #12]
 801cc66:	685a      	ldr	r2, [r3, #4]
 801cc68:	687b      	ldr	r3, [r7, #4]
 801cc6a:	685b      	ldr	r3, [r3, #4]
 801cc6c:	441a      	add	r2, r3
 801cc6e:	68fb      	ldr	r3, [r7, #12]
 801cc70:	605a      	str	r2, [r3, #4]
 801cc72:	68fb      	ldr	r3, [r7, #12]
 801cc74:	607b      	str	r3, [r7, #4]
 801cc76:	687b      	ldr	r3, [r7, #4]
 801cc78:	60bb      	str	r3, [r7, #8]
 801cc7a:	687b      	ldr	r3, [r7, #4]
 801cc7c:	685b      	ldr	r3, [r3, #4]
 801cc7e:	68ba      	ldr	r2, [r7, #8]
 801cc80:	441a      	add	r2, r3
 801cc82:	68fb      	ldr	r3, [r7, #12]
 801cc84:	681b      	ldr	r3, [r3, #0]
 801cc86:	429a      	cmp	r2, r3
 801cc88:	d118      	bne.n	801ccbc <prvInsertBlockIntoFreeList+0x88>
 801cc8a:	68fb      	ldr	r3, [r7, #12]
 801cc8c:	681a      	ldr	r2, [r3, #0]
 801cc8e:	4b15      	ldr	r3, [pc, #84]	@ (801cce4 <prvInsertBlockIntoFreeList+0xb0>)
 801cc90:	681b      	ldr	r3, [r3, #0]
 801cc92:	429a      	cmp	r2, r3
 801cc94:	d00d      	beq.n	801ccb2 <prvInsertBlockIntoFreeList+0x7e>
 801cc96:	687b      	ldr	r3, [r7, #4]
 801cc98:	685a      	ldr	r2, [r3, #4]
 801cc9a:	68fb      	ldr	r3, [r7, #12]
 801cc9c:	681b      	ldr	r3, [r3, #0]
 801cc9e:	685b      	ldr	r3, [r3, #4]
 801cca0:	441a      	add	r2, r3
 801cca2:	687b      	ldr	r3, [r7, #4]
 801cca4:	605a      	str	r2, [r3, #4]
 801cca6:	68fb      	ldr	r3, [r7, #12]
 801cca8:	681b      	ldr	r3, [r3, #0]
 801ccaa:	681a      	ldr	r2, [r3, #0]
 801ccac:	687b      	ldr	r3, [r7, #4]
 801ccae:	601a      	str	r2, [r3, #0]
 801ccb0:	e008      	b.n	801ccc4 <prvInsertBlockIntoFreeList+0x90>
 801ccb2:	4b0c      	ldr	r3, [pc, #48]	@ (801cce4 <prvInsertBlockIntoFreeList+0xb0>)
 801ccb4:	681a      	ldr	r2, [r3, #0]
 801ccb6:	687b      	ldr	r3, [r7, #4]
 801ccb8:	601a      	str	r2, [r3, #0]
 801ccba:	e003      	b.n	801ccc4 <prvInsertBlockIntoFreeList+0x90>
 801ccbc:	68fb      	ldr	r3, [r7, #12]
 801ccbe:	681a      	ldr	r2, [r3, #0]
 801ccc0:	687b      	ldr	r3, [r7, #4]
 801ccc2:	601a      	str	r2, [r3, #0]
 801ccc4:	68fa      	ldr	r2, [r7, #12]
 801ccc6:	687b      	ldr	r3, [r7, #4]
 801ccc8:	429a      	cmp	r2, r3
 801ccca:	d002      	beq.n	801ccd2 <prvInsertBlockIntoFreeList+0x9e>
 801cccc:	68fb      	ldr	r3, [r7, #12]
 801ccce:	687a      	ldr	r2, [r7, #4]
 801ccd0:	601a      	str	r2, [r3, #0]
 801ccd2:	bf00      	nop
 801ccd4:	3714      	adds	r7, #20
 801ccd6:	46bd      	mov	sp, r7
 801ccd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ccdc:	4770      	bx	lr
 801ccde:	bf00      	nop
 801cce0:	2000b71c 	.word	0x2000b71c
 801cce4:	2000b724 	.word	0x2000b724

0801cce8 <MX_USB_DEVICE_Init>:
 801cce8:	b580      	push	{r7, lr}
 801ccea:	af00      	add	r7, sp, #0
 801ccec:	2200      	movs	r2, #0
 801ccee:	4912      	ldr	r1, [pc, #72]	@ (801cd38 <MX_USB_DEVICE_Init+0x50>)
 801ccf0:	4812      	ldr	r0, [pc, #72]	@ (801cd3c <MX_USB_DEVICE_Init+0x54>)
 801ccf2:	f7fb fc0d 	bl	8018510 <USBD_Init>
 801ccf6:	4603      	mov	r3, r0
 801ccf8:	2b00      	cmp	r3, #0
 801ccfa:	d001      	beq.n	801cd00 <MX_USB_DEVICE_Init+0x18>
 801ccfc:	f7e6 fd7c 	bl	80037f8 <Error_Handler>
 801cd00:	490f      	ldr	r1, [pc, #60]	@ (801cd40 <MX_USB_DEVICE_Init+0x58>)
 801cd02:	480e      	ldr	r0, [pc, #56]	@ (801cd3c <MX_USB_DEVICE_Init+0x54>)
 801cd04:	f7fb fc34 	bl	8018570 <USBD_RegisterClass>
 801cd08:	4603      	mov	r3, r0
 801cd0a:	2b00      	cmp	r3, #0
 801cd0c:	d001      	beq.n	801cd12 <MX_USB_DEVICE_Init+0x2a>
 801cd0e:	f7e6 fd73 	bl	80037f8 <Error_Handler>
 801cd12:	490c      	ldr	r1, [pc, #48]	@ (801cd44 <MX_USB_DEVICE_Init+0x5c>)
 801cd14:	4809      	ldr	r0, [pc, #36]	@ (801cd3c <MX_USB_DEVICE_Init+0x54>)
 801cd16:	f7fb fb6b 	bl	80183f0 <USBD_CDC_RegisterInterface>
 801cd1a:	4603      	mov	r3, r0
 801cd1c:	2b00      	cmp	r3, #0
 801cd1e:	d001      	beq.n	801cd24 <MX_USB_DEVICE_Init+0x3c>
 801cd20:	f7e6 fd6a 	bl	80037f8 <Error_Handler>
 801cd24:	4805      	ldr	r0, [pc, #20]	@ (801cd3c <MX_USB_DEVICE_Init+0x54>)
 801cd26:	f7fb fc59 	bl	80185dc <USBD_Start>
 801cd2a:	4603      	mov	r3, r0
 801cd2c:	2b00      	cmp	r3, #0
 801cd2e:	d001      	beq.n	801cd34 <MX_USB_DEVICE_Init+0x4c>
 801cd30:	f7e6 fd62 	bl	80037f8 <Error_Handler>
 801cd34:	bf00      	nop
 801cd36:	bd80      	pop	{r7, pc}
 801cd38:	200000f4 	.word	0x200000f4
 801cd3c:	2000b73c 	.word	0x2000b73c
 801cd40:	2000005c 	.word	0x2000005c
 801cd44:	200000e0 	.word	0x200000e0

0801cd48 <CDC_Init_FS>:
 801cd48:	b580      	push	{r7, lr}
 801cd4a:	af00      	add	r7, sp, #0
 801cd4c:	2200      	movs	r2, #0
 801cd4e:	4905      	ldr	r1, [pc, #20]	@ (801cd64 <CDC_Init_FS+0x1c>)
 801cd50:	4805      	ldr	r0, [pc, #20]	@ (801cd68 <CDC_Init_FS+0x20>)
 801cd52:	f7fb fb67 	bl	8018424 <USBD_CDC_SetTxBuffer>
 801cd56:	4905      	ldr	r1, [pc, #20]	@ (801cd6c <CDC_Init_FS+0x24>)
 801cd58:	4803      	ldr	r0, [pc, #12]	@ (801cd68 <CDC_Init_FS+0x20>)
 801cd5a:	f7fb fb85 	bl	8018468 <USBD_CDC_SetRxBuffer>
 801cd5e:	2300      	movs	r3, #0
 801cd60:	4618      	mov	r0, r3
 801cd62:	bd80      	pop	{r7, pc}
 801cd64:	2000c220 	.word	0x2000c220
 801cd68:	2000b73c 	.word	0x2000b73c
 801cd6c:	2000ba20 	.word	0x2000ba20

0801cd70 <CDC_DeInit_FS>:
 801cd70:	b480      	push	{r7}
 801cd72:	af00      	add	r7, sp, #0
 801cd74:	2300      	movs	r3, #0
 801cd76:	4618      	mov	r0, r3
 801cd78:	46bd      	mov	sp, r7
 801cd7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cd7e:	4770      	bx	lr

0801cd80 <CDC_Control_FS>:
 801cd80:	b480      	push	{r7}
 801cd82:	b083      	sub	sp, #12
 801cd84:	af00      	add	r7, sp, #0
 801cd86:	4603      	mov	r3, r0
 801cd88:	6039      	str	r1, [r7, #0]
 801cd8a:	71fb      	strb	r3, [r7, #7]
 801cd8c:	4613      	mov	r3, r2
 801cd8e:	80bb      	strh	r3, [r7, #4]
 801cd90:	79fb      	ldrb	r3, [r7, #7]
 801cd92:	2b23      	cmp	r3, #35	@ 0x23
 801cd94:	f200 808c 	bhi.w	801ceb0 <CDC_Control_FS+0x130>
 801cd98:	a201      	add	r2, pc, #4	@ (adr r2, 801cda0 <CDC_Control_FS+0x20>)
 801cd9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801cd9e:	bf00      	nop
 801cda0:	0801ceb1 	.word	0x0801ceb1
 801cda4:	0801ceb1 	.word	0x0801ceb1
 801cda8:	0801ceb1 	.word	0x0801ceb1
 801cdac:	0801ceb1 	.word	0x0801ceb1
 801cdb0:	0801ceb1 	.word	0x0801ceb1
 801cdb4:	0801ceb1 	.word	0x0801ceb1
 801cdb8:	0801ceb1 	.word	0x0801ceb1
 801cdbc:	0801ceb1 	.word	0x0801ceb1
 801cdc0:	0801ceb1 	.word	0x0801ceb1
 801cdc4:	0801ceb1 	.word	0x0801ceb1
 801cdc8:	0801ceb1 	.word	0x0801ceb1
 801cdcc:	0801ceb1 	.word	0x0801ceb1
 801cdd0:	0801ceb1 	.word	0x0801ceb1
 801cdd4:	0801ceb1 	.word	0x0801ceb1
 801cdd8:	0801ceb1 	.word	0x0801ceb1
 801cddc:	0801ceb1 	.word	0x0801ceb1
 801cde0:	0801ceb1 	.word	0x0801ceb1
 801cde4:	0801ceb1 	.word	0x0801ceb1
 801cde8:	0801ceb1 	.word	0x0801ceb1
 801cdec:	0801ceb1 	.word	0x0801ceb1
 801cdf0:	0801ceb1 	.word	0x0801ceb1
 801cdf4:	0801ceb1 	.word	0x0801ceb1
 801cdf8:	0801ceb1 	.word	0x0801ceb1
 801cdfc:	0801ceb1 	.word	0x0801ceb1
 801ce00:	0801ceb1 	.word	0x0801ceb1
 801ce04:	0801ceb1 	.word	0x0801ceb1
 801ce08:	0801ceb1 	.word	0x0801ceb1
 801ce0c:	0801ceb1 	.word	0x0801ceb1
 801ce10:	0801ceb1 	.word	0x0801ceb1
 801ce14:	0801ceb1 	.word	0x0801ceb1
 801ce18:	0801ceb1 	.word	0x0801ceb1
 801ce1c:	0801ceb1 	.word	0x0801ceb1
 801ce20:	0801ce31 	.word	0x0801ce31
 801ce24:	0801ce6b 	.word	0x0801ce6b
 801ce28:	0801ceb1 	.word	0x0801ceb1
 801ce2c:	0801ceb1 	.word	0x0801ceb1
 801ce30:	683b      	ldr	r3, [r7, #0]
 801ce32:	781a      	ldrb	r2, [r3, #0]
 801ce34:	4b22      	ldr	r3, [pc, #136]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce36:	701a      	strb	r2, [r3, #0]
 801ce38:	683b      	ldr	r3, [r7, #0]
 801ce3a:	785a      	ldrb	r2, [r3, #1]
 801ce3c:	4b20      	ldr	r3, [pc, #128]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce3e:	705a      	strb	r2, [r3, #1]
 801ce40:	683b      	ldr	r3, [r7, #0]
 801ce42:	789a      	ldrb	r2, [r3, #2]
 801ce44:	4b1e      	ldr	r3, [pc, #120]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce46:	709a      	strb	r2, [r3, #2]
 801ce48:	683b      	ldr	r3, [r7, #0]
 801ce4a:	78da      	ldrb	r2, [r3, #3]
 801ce4c:	4b1c      	ldr	r3, [pc, #112]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce4e:	70da      	strb	r2, [r3, #3]
 801ce50:	683b      	ldr	r3, [r7, #0]
 801ce52:	791a      	ldrb	r2, [r3, #4]
 801ce54:	4b1a      	ldr	r3, [pc, #104]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce56:	711a      	strb	r2, [r3, #4]
 801ce58:	683b      	ldr	r3, [r7, #0]
 801ce5a:	795a      	ldrb	r2, [r3, #5]
 801ce5c:	4b18      	ldr	r3, [pc, #96]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce5e:	715a      	strb	r2, [r3, #5]
 801ce60:	683b      	ldr	r3, [r7, #0]
 801ce62:	799a      	ldrb	r2, [r3, #6]
 801ce64:	4b16      	ldr	r3, [pc, #88]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce66:	719a      	strb	r2, [r3, #6]
 801ce68:	e023      	b.n	801ceb2 <CDC_Control_FS+0x132>
 801ce6a:	4b15      	ldr	r3, [pc, #84]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce6c:	781a      	ldrb	r2, [r3, #0]
 801ce6e:	683b      	ldr	r3, [r7, #0]
 801ce70:	701a      	strb	r2, [r3, #0]
 801ce72:	683b      	ldr	r3, [r7, #0]
 801ce74:	3301      	adds	r3, #1
 801ce76:	4a12      	ldr	r2, [pc, #72]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce78:	7852      	ldrb	r2, [r2, #1]
 801ce7a:	701a      	strb	r2, [r3, #0]
 801ce7c:	683b      	ldr	r3, [r7, #0]
 801ce7e:	3302      	adds	r3, #2
 801ce80:	4a0f      	ldr	r2, [pc, #60]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce82:	7892      	ldrb	r2, [r2, #2]
 801ce84:	701a      	strb	r2, [r3, #0]
 801ce86:	683b      	ldr	r3, [r7, #0]
 801ce88:	3303      	adds	r3, #3
 801ce8a:	4a0d      	ldr	r2, [pc, #52]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce8c:	78d2      	ldrb	r2, [r2, #3]
 801ce8e:	701a      	strb	r2, [r3, #0]
 801ce90:	683b      	ldr	r3, [r7, #0]
 801ce92:	3304      	adds	r3, #4
 801ce94:	4a0a      	ldr	r2, [pc, #40]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ce96:	7912      	ldrb	r2, [r2, #4]
 801ce98:	701a      	strb	r2, [r3, #0]
 801ce9a:	683b      	ldr	r3, [r7, #0]
 801ce9c:	3305      	adds	r3, #5
 801ce9e:	4a08      	ldr	r2, [pc, #32]	@ (801cec0 <CDC_Control_FS+0x140>)
 801cea0:	7952      	ldrb	r2, [r2, #5]
 801cea2:	701a      	strb	r2, [r3, #0]
 801cea4:	683b      	ldr	r3, [r7, #0]
 801cea6:	3306      	adds	r3, #6
 801cea8:	4a05      	ldr	r2, [pc, #20]	@ (801cec0 <CDC_Control_FS+0x140>)
 801ceaa:	7992      	ldrb	r2, [r2, #6]
 801ceac:	701a      	strb	r2, [r3, #0]
 801ceae:	e000      	b.n	801ceb2 <CDC_Control_FS+0x132>
 801ceb0:	bf00      	nop
 801ceb2:	2300      	movs	r3, #0
 801ceb4:	4618      	mov	r0, r3
 801ceb6:	370c      	adds	r7, #12
 801ceb8:	46bd      	mov	sp, r7
 801ceba:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cebe:	4770      	bx	lr
 801cec0:	2000ba18 	.word	0x2000ba18

0801cec4 <CDC_Receive_FS>:
 801cec4:	b580      	push	{r7, lr}
 801cec6:	b082      	sub	sp, #8
 801cec8:	af00      	add	r7, sp, #0
 801ceca:	6078      	str	r0, [r7, #4]
 801cecc:	6039      	str	r1, [r7, #0]
 801cece:	6879      	ldr	r1, [r7, #4]
 801ced0:	4807      	ldr	r0, [pc, #28]	@ (801cef0 <CDC_Receive_FS+0x2c>)
 801ced2:	f7fb fac9 	bl	8018468 <USBD_CDC_SetRxBuffer>
 801ced6:	4806      	ldr	r0, [pc, #24]	@ (801cef0 <CDC_Receive_FS+0x2c>)
 801ced8:	f7fb fae4 	bl	80184a4 <USBD_CDC_ReceivePacket>
 801cedc:	6839      	ldr	r1, [r7, #0]
 801cede:	6878      	ldr	r0, [r7, #4]
 801cee0:	f7f0 fdc6 	bl	800da70 <usb_vcp_processing>
 801cee4:	2300      	movs	r3, #0
 801cee6:	4618      	mov	r0, r3
 801cee8:	3708      	adds	r7, #8
 801ceea:	46bd      	mov	sp, r7
 801ceec:	bd80      	pop	{r7, pc}
 801ceee:	bf00      	nop
 801cef0:	2000b73c 	.word	0x2000b73c

0801cef4 <CDC_TransmitCplt_FS>:
 801cef4:	b480      	push	{r7}
 801cef6:	b087      	sub	sp, #28
 801cef8:	af00      	add	r7, sp, #0
 801cefa:	60f8      	str	r0, [r7, #12]
 801cefc:	60b9      	str	r1, [r7, #8]
 801cefe:	4613      	mov	r3, r2
 801cf00:	71fb      	strb	r3, [r7, #7]
 801cf02:	2300      	movs	r3, #0
 801cf04:	75fb      	strb	r3, [r7, #23]
 801cf06:	f997 3017 	ldrsb.w	r3, [r7, #23]
 801cf0a:	4618      	mov	r0, r3
 801cf0c:	371c      	adds	r7, #28
 801cf0e:	46bd      	mov	sp, r7
 801cf10:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf14:	4770      	bx	lr
	...

0801cf18 <USBD_FS_DeviceDescriptor>:
 801cf18:	b480      	push	{r7}
 801cf1a:	b083      	sub	sp, #12
 801cf1c:	af00      	add	r7, sp, #0
 801cf1e:	4603      	mov	r3, r0
 801cf20:	6039      	str	r1, [r7, #0]
 801cf22:	71fb      	strb	r3, [r7, #7]
 801cf24:	683b      	ldr	r3, [r7, #0]
 801cf26:	2212      	movs	r2, #18
 801cf28:	801a      	strh	r2, [r3, #0]
 801cf2a:	4b03      	ldr	r3, [pc, #12]	@ (801cf38 <USBD_FS_DeviceDescriptor+0x20>)
 801cf2c:	4618      	mov	r0, r3
 801cf2e:	370c      	adds	r7, #12
 801cf30:	46bd      	mov	sp, r7
 801cf32:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf36:	4770      	bx	lr
 801cf38:	20000110 	.word	0x20000110

0801cf3c <USBD_FS_LangIDStrDescriptor>:
 801cf3c:	b480      	push	{r7}
 801cf3e:	b083      	sub	sp, #12
 801cf40:	af00      	add	r7, sp, #0
 801cf42:	4603      	mov	r3, r0
 801cf44:	6039      	str	r1, [r7, #0]
 801cf46:	71fb      	strb	r3, [r7, #7]
 801cf48:	683b      	ldr	r3, [r7, #0]
 801cf4a:	2204      	movs	r2, #4
 801cf4c:	801a      	strh	r2, [r3, #0]
 801cf4e:	4b03      	ldr	r3, [pc, #12]	@ (801cf5c <USBD_FS_LangIDStrDescriptor+0x20>)
 801cf50:	4618      	mov	r0, r3
 801cf52:	370c      	adds	r7, #12
 801cf54:	46bd      	mov	sp, r7
 801cf56:	f85d 7b04 	ldr.w	r7, [sp], #4
 801cf5a:	4770      	bx	lr
 801cf5c:	20000124 	.word	0x20000124

0801cf60 <USBD_FS_ProductStrDescriptor>:
 801cf60:	b580      	push	{r7, lr}
 801cf62:	b082      	sub	sp, #8
 801cf64:	af00      	add	r7, sp, #0
 801cf66:	4603      	mov	r3, r0
 801cf68:	6039      	str	r1, [r7, #0]
 801cf6a:	71fb      	strb	r3, [r7, #7]
 801cf6c:	79fb      	ldrb	r3, [r7, #7]
 801cf6e:	2b00      	cmp	r3, #0
 801cf70:	d105      	bne.n	801cf7e <USBD_FS_ProductStrDescriptor+0x1e>
 801cf72:	683a      	ldr	r2, [r7, #0]
 801cf74:	4907      	ldr	r1, [pc, #28]	@ (801cf94 <USBD_FS_ProductStrDescriptor+0x34>)
 801cf76:	4808      	ldr	r0, [pc, #32]	@ (801cf98 <USBD_FS_ProductStrDescriptor+0x38>)
 801cf78:	f7fc fcda 	bl	8019930 <USBD_GetString>
 801cf7c:	e004      	b.n	801cf88 <USBD_FS_ProductStrDescriptor+0x28>
 801cf7e:	683a      	ldr	r2, [r7, #0]
 801cf80:	4904      	ldr	r1, [pc, #16]	@ (801cf94 <USBD_FS_ProductStrDescriptor+0x34>)
 801cf82:	4805      	ldr	r0, [pc, #20]	@ (801cf98 <USBD_FS_ProductStrDescriptor+0x38>)
 801cf84:	f7fc fcd4 	bl	8019930 <USBD_GetString>
 801cf88:	4b02      	ldr	r3, [pc, #8]	@ (801cf94 <USBD_FS_ProductStrDescriptor+0x34>)
 801cf8a:	4618      	mov	r0, r3
 801cf8c:	3708      	adds	r7, #8
 801cf8e:	46bd      	mov	sp, r7
 801cf90:	bd80      	pop	{r7, pc}
 801cf92:	bf00      	nop
 801cf94:	2000ca20 	.word	0x2000ca20
 801cf98:	080247a0 	.word	0x080247a0

0801cf9c <USBD_FS_ManufacturerStrDescriptor>:
 801cf9c:	b580      	push	{r7, lr}
 801cf9e:	b082      	sub	sp, #8
 801cfa0:	af00      	add	r7, sp, #0
 801cfa2:	4603      	mov	r3, r0
 801cfa4:	6039      	str	r1, [r7, #0]
 801cfa6:	71fb      	strb	r3, [r7, #7]
 801cfa8:	683a      	ldr	r2, [r7, #0]
 801cfaa:	4904      	ldr	r1, [pc, #16]	@ (801cfbc <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801cfac:	4804      	ldr	r0, [pc, #16]	@ (801cfc0 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 801cfae:	f7fc fcbf 	bl	8019930 <USBD_GetString>
 801cfb2:	4b02      	ldr	r3, [pc, #8]	@ (801cfbc <USBD_FS_ManufacturerStrDescriptor+0x20>)
 801cfb4:	4618      	mov	r0, r3
 801cfb6:	3708      	adds	r7, #8
 801cfb8:	46bd      	mov	sp, r7
 801cfba:	bd80      	pop	{r7, pc}
 801cfbc:	2000ca20 	.word	0x2000ca20
 801cfc0:	080247b8 	.word	0x080247b8

0801cfc4 <USBD_FS_SerialStrDescriptor>:
 801cfc4:	b580      	push	{r7, lr}
 801cfc6:	b082      	sub	sp, #8
 801cfc8:	af00      	add	r7, sp, #0
 801cfca:	4603      	mov	r3, r0
 801cfcc:	6039      	str	r1, [r7, #0]
 801cfce:	71fb      	strb	r3, [r7, #7]
 801cfd0:	683b      	ldr	r3, [r7, #0]
 801cfd2:	221a      	movs	r2, #26
 801cfd4:	801a      	strh	r2, [r3, #0]
 801cfd6:	f000 f843 	bl	801d060 <Get_SerialNum>
 801cfda:	4b02      	ldr	r3, [pc, #8]	@ (801cfe4 <USBD_FS_SerialStrDescriptor+0x20>)
 801cfdc:	4618      	mov	r0, r3
 801cfde:	3708      	adds	r7, #8
 801cfe0:	46bd      	mov	sp, r7
 801cfe2:	bd80      	pop	{r7, pc}
 801cfe4:	20000128 	.word	0x20000128

0801cfe8 <USBD_FS_ConfigStrDescriptor>:
 801cfe8:	b580      	push	{r7, lr}
 801cfea:	b082      	sub	sp, #8
 801cfec:	af00      	add	r7, sp, #0
 801cfee:	4603      	mov	r3, r0
 801cff0:	6039      	str	r1, [r7, #0]
 801cff2:	71fb      	strb	r3, [r7, #7]
 801cff4:	79fb      	ldrb	r3, [r7, #7]
 801cff6:	2b00      	cmp	r3, #0
 801cff8:	d105      	bne.n	801d006 <USBD_FS_ConfigStrDescriptor+0x1e>
 801cffa:	683a      	ldr	r2, [r7, #0]
 801cffc:	4907      	ldr	r1, [pc, #28]	@ (801d01c <USBD_FS_ConfigStrDescriptor+0x34>)
 801cffe:	4808      	ldr	r0, [pc, #32]	@ (801d020 <USBD_FS_ConfigStrDescriptor+0x38>)
 801d000:	f7fc fc96 	bl	8019930 <USBD_GetString>
 801d004:	e004      	b.n	801d010 <USBD_FS_ConfigStrDescriptor+0x28>
 801d006:	683a      	ldr	r2, [r7, #0]
 801d008:	4904      	ldr	r1, [pc, #16]	@ (801d01c <USBD_FS_ConfigStrDescriptor+0x34>)
 801d00a:	4805      	ldr	r0, [pc, #20]	@ (801d020 <USBD_FS_ConfigStrDescriptor+0x38>)
 801d00c:	f7fc fc90 	bl	8019930 <USBD_GetString>
 801d010:	4b02      	ldr	r3, [pc, #8]	@ (801d01c <USBD_FS_ConfigStrDescriptor+0x34>)
 801d012:	4618      	mov	r0, r3
 801d014:	3708      	adds	r7, #8
 801d016:	46bd      	mov	sp, r7
 801d018:	bd80      	pop	{r7, pc}
 801d01a:	bf00      	nop
 801d01c:	2000ca20 	.word	0x2000ca20
 801d020:	080247cc 	.word	0x080247cc

0801d024 <USBD_FS_InterfaceStrDescriptor>:
 801d024:	b580      	push	{r7, lr}
 801d026:	b082      	sub	sp, #8
 801d028:	af00      	add	r7, sp, #0
 801d02a:	4603      	mov	r3, r0
 801d02c:	6039      	str	r1, [r7, #0]
 801d02e:	71fb      	strb	r3, [r7, #7]
 801d030:	79fb      	ldrb	r3, [r7, #7]
 801d032:	2b00      	cmp	r3, #0
 801d034:	d105      	bne.n	801d042 <USBD_FS_InterfaceStrDescriptor+0x1e>
 801d036:	683a      	ldr	r2, [r7, #0]
 801d038:	4907      	ldr	r1, [pc, #28]	@ (801d058 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801d03a:	4808      	ldr	r0, [pc, #32]	@ (801d05c <USBD_FS_InterfaceStrDescriptor+0x38>)
 801d03c:	f7fc fc78 	bl	8019930 <USBD_GetString>
 801d040:	e004      	b.n	801d04c <USBD_FS_InterfaceStrDescriptor+0x28>
 801d042:	683a      	ldr	r2, [r7, #0]
 801d044:	4904      	ldr	r1, [pc, #16]	@ (801d058 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801d046:	4805      	ldr	r0, [pc, #20]	@ (801d05c <USBD_FS_InterfaceStrDescriptor+0x38>)
 801d048:	f7fc fc72 	bl	8019930 <USBD_GetString>
 801d04c:	4b02      	ldr	r3, [pc, #8]	@ (801d058 <USBD_FS_InterfaceStrDescriptor+0x34>)
 801d04e:	4618      	mov	r0, r3
 801d050:	3708      	adds	r7, #8
 801d052:	46bd      	mov	sp, r7
 801d054:	bd80      	pop	{r7, pc}
 801d056:	bf00      	nop
 801d058:	2000ca20 	.word	0x2000ca20
 801d05c:	080247d8 	.word	0x080247d8

0801d060 <Get_SerialNum>:
 801d060:	b580      	push	{r7, lr}
 801d062:	b084      	sub	sp, #16
 801d064:	af00      	add	r7, sp, #0
 801d066:	4b0f      	ldr	r3, [pc, #60]	@ (801d0a4 <Get_SerialNum+0x44>)
 801d068:	681b      	ldr	r3, [r3, #0]
 801d06a:	60fb      	str	r3, [r7, #12]
 801d06c:	4b0e      	ldr	r3, [pc, #56]	@ (801d0a8 <Get_SerialNum+0x48>)
 801d06e:	681b      	ldr	r3, [r3, #0]
 801d070:	60bb      	str	r3, [r7, #8]
 801d072:	4b0e      	ldr	r3, [pc, #56]	@ (801d0ac <Get_SerialNum+0x4c>)
 801d074:	681b      	ldr	r3, [r3, #0]
 801d076:	607b      	str	r3, [r7, #4]
 801d078:	68fa      	ldr	r2, [r7, #12]
 801d07a:	687b      	ldr	r3, [r7, #4]
 801d07c:	4413      	add	r3, r2
 801d07e:	60fb      	str	r3, [r7, #12]
 801d080:	68fb      	ldr	r3, [r7, #12]
 801d082:	2b00      	cmp	r3, #0
 801d084:	d009      	beq.n	801d09a <Get_SerialNum+0x3a>
 801d086:	2208      	movs	r2, #8
 801d088:	4909      	ldr	r1, [pc, #36]	@ (801d0b0 <Get_SerialNum+0x50>)
 801d08a:	68f8      	ldr	r0, [r7, #12]
 801d08c:	f000 f814 	bl	801d0b8 <IntToUnicode>
 801d090:	2204      	movs	r2, #4
 801d092:	4908      	ldr	r1, [pc, #32]	@ (801d0b4 <Get_SerialNum+0x54>)
 801d094:	68b8      	ldr	r0, [r7, #8]
 801d096:	f000 f80f 	bl	801d0b8 <IntToUnicode>
 801d09a:	bf00      	nop
 801d09c:	3710      	adds	r7, #16
 801d09e:	46bd      	mov	sp, r7
 801d0a0:	bd80      	pop	{r7, pc}
 801d0a2:	bf00      	nop
 801d0a4:	1fff7a10 	.word	0x1fff7a10
 801d0a8:	1fff7a14 	.word	0x1fff7a14
 801d0ac:	1fff7a18 	.word	0x1fff7a18
 801d0b0:	2000012a 	.word	0x2000012a
 801d0b4:	2000013a 	.word	0x2000013a

0801d0b8 <IntToUnicode>:
 801d0b8:	b480      	push	{r7}
 801d0ba:	b087      	sub	sp, #28
 801d0bc:	af00      	add	r7, sp, #0
 801d0be:	60f8      	str	r0, [r7, #12]
 801d0c0:	60b9      	str	r1, [r7, #8]
 801d0c2:	4613      	mov	r3, r2
 801d0c4:	71fb      	strb	r3, [r7, #7]
 801d0c6:	2300      	movs	r3, #0
 801d0c8:	75fb      	strb	r3, [r7, #23]
 801d0ca:	2300      	movs	r3, #0
 801d0cc:	75fb      	strb	r3, [r7, #23]
 801d0ce:	e027      	b.n	801d120 <IntToUnicode+0x68>
 801d0d0:	68fb      	ldr	r3, [r7, #12]
 801d0d2:	0f1b      	lsrs	r3, r3, #28
 801d0d4:	2b09      	cmp	r3, #9
 801d0d6:	d80b      	bhi.n	801d0f0 <IntToUnicode+0x38>
 801d0d8:	68fb      	ldr	r3, [r7, #12]
 801d0da:	0f1b      	lsrs	r3, r3, #28
 801d0dc:	b2da      	uxtb	r2, r3
 801d0de:	7dfb      	ldrb	r3, [r7, #23]
 801d0e0:	005b      	lsls	r3, r3, #1
 801d0e2:	4619      	mov	r1, r3
 801d0e4:	68bb      	ldr	r3, [r7, #8]
 801d0e6:	440b      	add	r3, r1
 801d0e8:	3230      	adds	r2, #48	@ 0x30
 801d0ea:	b2d2      	uxtb	r2, r2
 801d0ec:	701a      	strb	r2, [r3, #0]
 801d0ee:	e00a      	b.n	801d106 <IntToUnicode+0x4e>
 801d0f0:	68fb      	ldr	r3, [r7, #12]
 801d0f2:	0f1b      	lsrs	r3, r3, #28
 801d0f4:	b2da      	uxtb	r2, r3
 801d0f6:	7dfb      	ldrb	r3, [r7, #23]
 801d0f8:	005b      	lsls	r3, r3, #1
 801d0fa:	4619      	mov	r1, r3
 801d0fc:	68bb      	ldr	r3, [r7, #8]
 801d0fe:	440b      	add	r3, r1
 801d100:	3237      	adds	r2, #55	@ 0x37
 801d102:	b2d2      	uxtb	r2, r2
 801d104:	701a      	strb	r2, [r3, #0]
 801d106:	68fb      	ldr	r3, [r7, #12]
 801d108:	011b      	lsls	r3, r3, #4
 801d10a:	60fb      	str	r3, [r7, #12]
 801d10c:	7dfb      	ldrb	r3, [r7, #23]
 801d10e:	005b      	lsls	r3, r3, #1
 801d110:	3301      	adds	r3, #1
 801d112:	68ba      	ldr	r2, [r7, #8]
 801d114:	4413      	add	r3, r2
 801d116:	2200      	movs	r2, #0
 801d118:	701a      	strb	r2, [r3, #0]
 801d11a:	7dfb      	ldrb	r3, [r7, #23]
 801d11c:	3301      	adds	r3, #1
 801d11e:	75fb      	strb	r3, [r7, #23]
 801d120:	7dfa      	ldrb	r2, [r7, #23]
 801d122:	79fb      	ldrb	r3, [r7, #7]
 801d124:	429a      	cmp	r2, r3
 801d126:	d3d3      	bcc.n	801d0d0 <IntToUnicode+0x18>
 801d128:	bf00      	nop
 801d12a:	bf00      	nop
 801d12c:	371c      	adds	r7, #28
 801d12e:	46bd      	mov	sp, r7
 801d130:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d134:	4770      	bx	lr
	...

0801d138 <HAL_PCD_MspInit>:
 801d138:	b580      	push	{r7, lr}
 801d13a:	b08a      	sub	sp, #40	@ 0x28
 801d13c:	af00      	add	r7, sp, #0
 801d13e:	6078      	str	r0, [r7, #4]
 801d140:	f107 0314 	add.w	r3, r7, #20
 801d144:	2200      	movs	r2, #0
 801d146:	601a      	str	r2, [r3, #0]
 801d148:	605a      	str	r2, [r3, #4]
 801d14a:	609a      	str	r2, [r3, #8]
 801d14c:	60da      	str	r2, [r3, #12]
 801d14e:	611a      	str	r2, [r3, #16]
 801d150:	687b      	ldr	r3, [r7, #4]
 801d152:	681b      	ldr	r3, [r3, #0]
 801d154:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 801d158:	d13a      	bne.n	801d1d0 <HAL_PCD_MspInit+0x98>
 801d15a:	2300      	movs	r3, #0
 801d15c:	613b      	str	r3, [r7, #16]
 801d15e:	4b1e      	ldr	r3, [pc, #120]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d160:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801d162:	4a1d      	ldr	r2, [pc, #116]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d164:	f043 0301 	orr.w	r3, r3, #1
 801d168:	6313      	str	r3, [r2, #48]	@ 0x30
 801d16a:	4b1b      	ldr	r3, [pc, #108]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d16c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801d16e:	f003 0301 	and.w	r3, r3, #1
 801d172:	613b      	str	r3, [r7, #16]
 801d174:	693b      	ldr	r3, [r7, #16]
 801d176:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 801d17a:	617b      	str	r3, [r7, #20]
 801d17c:	2302      	movs	r3, #2
 801d17e:	61bb      	str	r3, [r7, #24]
 801d180:	2300      	movs	r3, #0
 801d182:	61fb      	str	r3, [r7, #28]
 801d184:	2303      	movs	r3, #3
 801d186:	623b      	str	r3, [r7, #32]
 801d188:	230a      	movs	r3, #10
 801d18a:	627b      	str	r3, [r7, #36]	@ 0x24
 801d18c:	f107 0314 	add.w	r3, r7, #20
 801d190:	4619      	mov	r1, r3
 801d192:	4812      	ldr	r0, [pc, #72]	@ (801d1dc <HAL_PCD_MspInit+0xa4>)
 801d194:	f7f2 fb44 	bl	800f820 <HAL_GPIO_Init>
 801d198:	4b0f      	ldr	r3, [pc, #60]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d19a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 801d19c:	4a0e      	ldr	r2, [pc, #56]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d19e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 801d1a2:	6353      	str	r3, [r2, #52]	@ 0x34
 801d1a4:	2300      	movs	r3, #0
 801d1a6:	60fb      	str	r3, [r7, #12]
 801d1a8:	4b0b      	ldr	r3, [pc, #44]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d1aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801d1ac:	4a0a      	ldr	r2, [pc, #40]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d1ae:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 801d1b2:	6453      	str	r3, [r2, #68]	@ 0x44
 801d1b4:	4b08      	ldr	r3, [pc, #32]	@ (801d1d8 <HAL_PCD_MspInit+0xa0>)
 801d1b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801d1b8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 801d1bc:	60fb      	str	r3, [r7, #12]
 801d1be:	68fb      	ldr	r3, [r7, #12]
 801d1c0:	2200      	movs	r2, #0
 801d1c2:	2105      	movs	r1, #5
 801d1c4:	2043      	movs	r0, #67	@ 0x43
 801d1c6:	f7f1 fee5 	bl	800ef94 <HAL_NVIC_SetPriority>
 801d1ca:	2043      	movs	r0, #67	@ 0x43
 801d1cc:	f7f1 fefe 	bl	800efcc <HAL_NVIC_EnableIRQ>
 801d1d0:	bf00      	nop
 801d1d2:	3728      	adds	r7, #40	@ 0x28
 801d1d4:	46bd      	mov	sp, r7
 801d1d6:	bd80      	pop	{r7, pc}
 801d1d8:	40023800 	.word	0x40023800
 801d1dc:	40020000 	.word	0x40020000

0801d1e0 <HAL_PCD_SetupStageCallback>:
 801d1e0:	b580      	push	{r7, lr}
 801d1e2:	b082      	sub	sp, #8
 801d1e4:	af00      	add	r7, sp, #0
 801d1e6:	6078      	str	r0, [r7, #4]
 801d1e8:	687b      	ldr	r3, [r7, #4]
 801d1ea:	f8d3 2508 	ldr.w	r2, [r3, #1288]	@ 0x508
 801d1ee:	687b      	ldr	r3, [r7, #4]
 801d1f0:	f203 43c4 	addw	r3, r3, #1220	@ 0x4c4
 801d1f4:	4619      	mov	r1, r3
 801d1f6:	4610      	mov	r0, r2
 801d1f8:	f7fb fa3d 	bl	8018676 <USBD_LL_SetupStage>
 801d1fc:	bf00      	nop
 801d1fe:	3708      	adds	r7, #8
 801d200:	46bd      	mov	sp, r7
 801d202:	bd80      	pop	{r7, pc}

0801d204 <HAL_PCD_DataOutStageCallback>:
 801d204:	b580      	push	{r7, lr}
 801d206:	b082      	sub	sp, #8
 801d208:	af00      	add	r7, sp, #0
 801d20a:	6078      	str	r0, [r7, #4]
 801d20c:	460b      	mov	r3, r1
 801d20e:	70fb      	strb	r3, [r7, #3]
 801d210:	687b      	ldr	r3, [r7, #4]
 801d212:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801d216:	78fa      	ldrb	r2, [r7, #3]
 801d218:	6879      	ldr	r1, [r7, #4]
 801d21a:	4613      	mov	r3, r2
 801d21c:	00db      	lsls	r3, r3, #3
 801d21e:	4413      	add	r3, r2
 801d220:	009b      	lsls	r3, r3, #2
 801d222:	440b      	add	r3, r1
 801d224:	f503 7323 	add.w	r3, r3, #652	@ 0x28c
 801d228:	681a      	ldr	r2, [r3, #0]
 801d22a:	78fb      	ldrb	r3, [r7, #3]
 801d22c:	4619      	mov	r1, r3
 801d22e:	f7fb fa77 	bl	8018720 <USBD_LL_DataOutStage>
 801d232:	bf00      	nop
 801d234:	3708      	adds	r7, #8
 801d236:	46bd      	mov	sp, r7
 801d238:	bd80      	pop	{r7, pc}

0801d23a <HAL_PCD_DataInStageCallback>:
 801d23a:	b580      	push	{r7, lr}
 801d23c:	b082      	sub	sp, #8
 801d23e:	af00      	add	r7, sp, #0
 801d240:	6078      	str	r0, [r7, #4]
 801d242:	460b      	mov	r3, r1
 801d244:	70fb      	strb	r3, [r7, #3]
 801d246:	687b      	ldr	r3, [r7, #4]
 801d248:	f8d3 0508 	ldr.w	r0, [r3, #1288]	@ 0x508
 801d24c:	78fa      	ldrb	r2, [r7, #3]
 801d24e:	6879      	ldr	r1, [r7, #4]
 801d250:	4613      	mov	r3, r2
 801d252:	00db      	lsls	r3, r3, #3
 801d254:	4413      	add	r3, r2
 801d256:	009b      	lsls	r3, r3, #2
 801d258:	440b      	add	r3, r1
 801d25a:	334c      	adds	r3, #76	@ 0x4c
 801d25c:	681a      	ldr	r2, [r3, #0]
 801d25e:	78fb      	ldrb	r3, [r7, #3]
 801d260:	4619      	mov	r1, r3
 801d262:	f7fb fb10 	bl	8018886 <USBD_LL_DataInStage>
 801d266:	bf00      	nop
 801d268:	3708      	adds	r7, #8
 801d26a:	46bd      	mov	sp, r7
 801d26c:	bd80      	pop	{r7, pc}

0801d26e <HAL_PCD_SOFCallback>:
 801d26e:	b580      	push	{r7, lr}
 801d270:	b082      	sub	sp, #8
 801d272:	af00      	add	r7, sp, #0
 801d274:	6078      	str	r0, [r7, #4]
 801d276:	687b      	ldr	r3, [r7, #4]
 801d278:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d27c:	4618      	mov	r0, r3
 801d27e:	f7fb fc44 	bl	8018b0a <USBD_LL_SOF>
 801d282:	bf00      	nop
 801d284:	3708      	adds	r7, #8
 801d286:	46bd      	mov	sp, r7
 801d288:	bd80      	pop	{r7, pc}

0801d28a <HAL_PCD_ResetCallback>:
 801d28a:	b580      	push	{r7, lr}
 801d28c:	b084      	sub	sp, #16
 801d28e:	af00      	add	r7, sp, #0
 801d290:	6078      	str	r0, [r7, #4]
 801d292:	2301      	movs	r3, #1
 801d294:	73fb      	strb	r3, [r7, #15]
 801d296:	687b      	ldr	r3, [r7, #4]
 801d298:	68db      	ldr	r3, [r3, #12]
 801d29a:	2b00      	cmp	r3, #0
 801d29c:	d102      	bne.n	801d2a4 <HAL_PCD_ResetCallback+0x1a>
 801d29e:	2300      	movs	r3, #0
 801d2a0:	73fb      	strb	r3, [r7, #15]
 801d2a2:	e008      	b.n	801d2b6 <HAL_PCD_ResetCallback+0x2c>
 801d2a4:	687b      	ldr	r3, [r7, #4]
 801d2a6:	68db      	ldr	r3, [r3, #12]
 801d2a8:	2b02      	cmp	r3, #2
 801d2aa:	d102      	bne.n	801d2b2 <HAL_PCD_ResetCallback+0x28>
 801d2ac:	2301      	movs	r3, #1
 801d2ae:	73fb      	strb	r3, [r7, #15]
 801d2b0:	e001      	b.n	801d2b6 <HAL_PCD_ResetCallback+0x2c>
 801d2b2:	f7e6 faa1 	bl	80037f8 <Error_Handler>
 801d2b6:	687b      	ldr	r3, [r7, #4]
 801d2b8:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d2bc:	7bfa      	ldrb	r2, [r7, #15]
 801d2be:	4611      	mov	r1, r2
 801d2c0:	4618      	mov	r0, r3
 801d2c2:	f7fb fbe4 	bl	8018a8e <USBD_LL_SetSpeed>
 801d2c6:	687b      	ldr	r3, [r7, #4]
 801d2c8:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d2cc:	4618      	mov	r0, r3
 801d2ce:	f7fb fb8c 	bl	80189ea <USBD_LL_Reset>
 801d2d2:	bf00      	nop
 801d2d4:	3710      	adds	r7, #16
 801d2d6:	46bd      	mov	sp, r7
 801d2d8:	bd80      	pop	{r7, pc}
	...

0801d2dc <HAL_PCD_SuspendCallback>:
 801d2dc:	b580      	push	{r7, lr}
 801d2de:	b082      	sub	sp, #8
 801d2e0:	af00      	add	r7, sp, #0
 801d2e2:	6078      	str	r0, [r7, #4]
 801d2e4:	687b      	ldr	r3, [r7, #4]
 801d2e6:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d2ea:	4618      	mov	r0, r3
 801d2ec:	f7fb fbdf 	bl	8018aae <USBD_LL_Suspend>
 801d2f0:	687b      	ldr	r3, [r7, #4]
 801d2f2:	681b      	ldr	r3, [r3, #0]
 801d2f4:	f503 6360 	add.w	r3, r3, #3584	@ 0xe00
 801d2f8:	681b      	ldr	r3, [r3, #0]
 801d2fa:	687a      	ldr	r2, [r7, #4]
 801d2fc:	6812      	ldr	r2, [r2, #0]
 801d2fe:	f502 6260 	add.w	r2, r2, #3584	@ 0xe00
 801d302:	f043 0301 	orr.w	r3, r3, #1
 801d306:	6013      	str	r3, [r2, #0]
 801d308:	687b      	ldr	r3, [r7, #4]
 801d30a:	6a1b      	ldr	r3, [r3, #32]
 801d30c:	2b00      	cmp	r3, #0
 801d30e:	d005      	beq.n	801d31c <HAL_PCD_SuspendCallback+0x40>
 801d310:	4b04      	ldr	r3, [pc, #16]	@ (801d324 <HAL_PCD_SuspendCallback+0x48>)
 801d312:	691b      	ldr	r3, [r3, #16]
 801d314:	4a03      	ldr	r2, [pc, #12]	@ (801d324 <HAL_PCD_SuspendCallback+0x48>)
 801d316:	f043 0306 	orr.w	r3, r3, #6
 801d31a:	6113      	str	r3, [r2, #16]
 801d31c:	bf00      	nop
 801d31e:	3708      	adds	r7, #8
 801d320:	46bd      	mov	sp, r7
 801d322:	bd80      	pop	{r7, pc}
 801d324:	e000ed00 	.word	0xe000ed00

0801d328 <HAL_PCD_ResumeCallback>:
 801d328:	b580      	push	{r7, lr}
 801d32a:	b082      	sub	sp, #8
 801d32c:	af00      	add	r7, sp, #0
 801d32e:	6078      	str	r0, [r7, #4]
 801d330:	687b      	ldr	r3, [r7, #4]
 801d332:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d336:	4618      	mov	r0, r3
 801d338:	f7fb fbcf 	bl	8018ada <USBD_LL_Resume>
 801d33c:	bf00      	nop
 801d33e:	3708      	adds	r7, #8
 801d340:	46bd      	mov	sp, r7
 801d342:	bd80      	pop	{r7, pc}

0801d344 <HAL_PCD_ISOOUTIncompleteCallback>:
 801d344:	b580      	push	{r7, lr}
 801d346:	b082      	sub	sp, #8
 801d348:	af00      	add	r7, sp, #0
 801d34a:	6078      	str	r0, [r7, #4]
 801d34c:	460b      	mov	r3, r1
 801d34e:	70fb      	strb	r3, [r7, #3]
 801d350:	687b      	ldr	r3, [r7, #4]
 801d352:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d356:	78fa      	ldrb	r2, [r7, #3]
 801d358:	4611      	mov	r1, r2
 801d35a:	4618      	mov	r0, r3
 801d35c:	f7fb fc27 	bl	8018bae <USBD_LL_IsoOUTIncomplete>
 801d360:	bf00      	nop
 801d362:	3708      	adds	r7, #8
 801d364:	46bd      	mov	sp, r7
 801d366:	bd80      	pop	{r7, pc}

0801d368 <HAL_PCD_ISOINIncompleteCallback>:
 801d368:	b580      	push	{r7, lr}
 801d36a:	b082      	sub	sp, #8
 801d36c:	af00      	add	r7, sp, #0
 801d36e:	6078      	str	r0, [r7, #4]
 801d370:	460b      	mov	r3, r1
 801d372:	70fb      	strb	r3, [r7, #3]
 801d374:	687b      	ldr	r3, [r7, #4]
 801d376:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d37a:	78fa      	ldrb	r2, [r7, #3]
 801d37c:	4611      	mov	r1, r2
 801d37e:	4618      	mov	r0, r3
 801d380:	f7fb fbe3 	bl	8018b4a <USBD_LL_IsoINIncomplete>
 801d384:	bf00      	nop
 801d386:	3708      	adds	r7, #8
 801d388:	46bd      	mov	sp, r7
 801d38a:	bd80      	pop	{r7, pc}

0801d38c <HAL_PCD_ConnectCallback>:
 801d38c:	b580      	push	{r7, lr}
 801d38e:	b082      	sub	sp, #8
 801d390:	af00      	add	r7, sp, #0
 801d392:	6078      	str	r0, [r7, #4]
 801d394:	687b      	ldr	r3, [r7, #4]
 801d396:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d39a:	4618      	mov	r0, r3
 801d39c:	f7fb fc39 	bl	8018c12 <USBD_LL_DevConnected>
 801d3a0:	bf00      	nop
 801d3a2:	3708      	adds	r7, #8
 801d3a4:	46bd      	mov	sp, r7
 801d3a6:	bd80      	pop	{r7, pc}

0801d3a8 <HAL_PCD_DisconnectCallback>:
 801d3a8:	b580      	push	{r7, lr}
 801d3aa:	b082      	sub	sp, #8
 801d3ac:	af00      	add	r7, sp, #0
 801d3ae:	6078      	str	r0, [r7, #4]
 801d3b0:	687b      	ldr	r3, [r7, #4]
 801d3b2:	f8d3 3508 	ldr.w	r3, [r3, #1288]	@ 0x508
 801d3b6:	4618      	mov	r0, r3
 801d3b8:	f7fb fc36 	bl	8018c28 <USBD_LL_DevDisconnected>
 801d3bc:	bf00      	nop
 801d3be:	3708      	adds	r7, #8
 801d3c0:	46bd      	mov	sp, r7
 801d3c2:	bd80      	pop	{r7, pc}

0801d3c4 <USBD_LL_Init>:
 801d3c4:	b580      	push	{r7, lr}
 801d3c6:	b082      	sub	sp, #8
 801d3c8:	af00      	add	r7, sp, #0
 801d3ca:	6078      	str	r0, [r7, #4]
 801d3cc:	687b      	ldr	r3, [r7, #4]
 801d3ce:	781b      	ldrb	r3, [r3, #0]
 801d3d0:	2b00      	cmp	r3, #0
 801d3d2:	d13c      	bne.n	801d44e <USBD_LL_Init+0x8a>
 801d3d4:	4a20      	ldr	r2, [pc, #128]	@ (801d458 <USBD_LL_Init+0x94>)
 801d3d6:	687b      	ldr	r3, [r7, #4]
 801d3d8:	f8c2 3508 	str.w	r3, [r2, #1288]	@ 0x508
 801d3dc:	687b      	ldr	r3, [r7, #4]
 801d3de:	4a1e      	ldr	r2, [pc, #120]	@ (801d458 <USBD_LL_Init+0x94>)
 801d3e0:	f8c3 22c8 	str.w	r2, [r3, #712]	@ 0x2c8
 801d3e4:	4b1c      	ldr	r3, [pc, #112]	@ (801d458 <USBD_LL_Init+0x94>)
 801d3e6:	f04f 42a0 	mov.w	r2, #1342177280	@ 0x50000000
 801d3ea:	601a      	str	r2, [r3, #0]
 801d3ec:	4b1a      	ldr	r3, [pc, #104]	@ (801d458 <USBD_LL_Init+0x94>)
 801d3ee:	2204      	movs	r2, #4
 801d3f0:	605a      	str	r2, [r3, #4]
 801d3f2:	4b19      	ldr	r3, [pc, #100]	@ (801d458 <USBD_LL_Init+0x94>)
 801d3f4:	2202      	movs	r2, #2
 801d3f6:	60da      	str	r2, [r3, #12]
 801d3f8:	4b17      	ldr	r3, [pc, #92]	@ (801d458 <USBD_LL_Init+0x94>)
 801d3fa:	2200      	movs	r2, #0
 801d3fc:	611a      	str	r2, [r3, #16]
 801d3fe:	4b16      	ldr	r3, [pc, #88]	@ (801d458 <USBD_LL_Init+0x94>)
 801d400:	2202      	movs	r2, #2
 801d402:	619a      	str	r2, [r3, #24]
 801d404:	4b14      	ldr	r3, [pc, #80]	@ (801d458 <USBD_LL_Init+0x94>)
 801d406:	2200      	movs	r2, #0
 801d408:	61da      	str	r2, [r3, #28]
 801d40a:	4b13      	ldr	r3, [pc, #76]	@ (801d458 <USBD_LL_Init+0x94>)
 801d40c:	2200      	movs	r2, #0
 801d40e:	621a      	str	r2, [r3, #32]
 801d410:	4b11      	ldr	r3, [pc, #68]	@ (801d458 <USBD_LL_Init+0x94>)
 801d412:	2200      	movs	r2, #0
 801d414:	625a      	str	r2, [r3, #36]	@ 0x24
 801d416:	4b10      	ldr	r3, [pc, #64]	@ (801d458 <USBD_LL_Init+0x94>)
 801d418:	2200      	movs	r2, #0
 801d41a:	62da      	str	r2, [r3, #44]	@ 0x2c
 801d41c:	4b0e      	ldr	r3, [pc, #56]	@ (801d458 <USBD_LL_Init+0x94>)
 801d41e:	2200      	movs	r2, #0
 801d420:	631a      	str	r2, [r3, #48]	@ 0x30
 801d422:	480d      	ldr	r0, [pc, #52]	@ (801d458 <USBD_LL_Init+0x94>)
 801d424:	f7f4 f955 	bl	80116d2 <HAL_PCD_Init>
 801d428:	4603      	mov	r3, r0
 801d42a:	2b00      	cmp	r3, #0
 801d42c:	d001      	beq.n	801d432 <USBD_LL_Init+0x6e>
 801d42e:	f7e6 f9e3 	bl	80037f8 <Error_Handler>
 801d432:	2180      	movs	r1, #128	@ 0x80
 801d434:	4808      	ldr	r0, [pc, #32]	@ (801d458 <USBD_LL_Init+0x94>)
 801d436:	f7f5 fbac 	bl	8012b92 <HAL_PCDEx_SetRxFiFo>
 801d43a:	2240      	movs	r2, #64	@ 0x40
 801d43c:	2100      	movs	r1, #0
 801d43e:	4806      	ldr	r0, [pc, #24]	@ (801d458 <USBD_LL_Init+0x94>)
 801d440:	f7f5 fb60 	bl	8012b04 <HAL_PCDEx_SetTxFiFo>
 801d444:	2280      	movs	r2, #128	@ 0x80
 801d446:	2101      	movs	r1, #1
 801d448:	4803      	ldr	r0, [pc, #12]	@ (801d458 <USBD_LL_Init+0x94>)
 801d44a:	f7f5 fb5b 	bl	8012b04 <HAL_PCDEx_SetTxFiFo>
 801d44e:	2300      	movs	r3, #0
 801d450:	4618      	mov	r0, r3
 801d452:	3708      	adds	r7, #8
 801d454:	46bd      	mov	sp, r7
 801d456:	bd80      	pop	{r7, pc}
 801d458:	2000cc20 	.word	0x2000cc20

0801d45c <USBD_LL_Start>:
 801d45c:	b580      	push	{r7, lr}
 801d45e:	b084      	sub	sp, #16
 801d460:	af00      	add	r7, sp, #0
 801d462:	6078      	str	r0, [r7, #4]
 801d464:	2300      	movs	r3, #0
 801d466:	73fb      	strb	r3, [r7, #15]
 801d468:	2300      	movs	r3, #0
 801d46a:	73bb      	strb	r3, [r7, #14]
 801d46c:	687b      	ldr	r3, [r7, #4]
 801d46e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d472:	4618      	mov	r0, r3
 801d474:	f7f4 fa4a 	bl	801190c <HAL_PCD_Start>
 801d478:	4603      	mov	r3, r0
 801d47a:	73fb      	strb	r3, [r7, #15]
 801d47c:	7bfb      	ldrb	r3, [r7, #15]
 801d47e:	4618      	mov	r0, r3
 801d480:	f000 f942 	bl	801d708 <USBD_Get_USB_Status>
 801d484:	4603      	mov	r3, r0
 801d486:	73bb      	strb	r3, [r7, #14]
 801d488:	7bbb      	ldrb	r3, [r7, #14]
 801d48a:	4618      	mov	r0, r3
 801d48c:	3710      	adds	r7, #16
 801d48e:	46bd      	mov	sp, r7
 801d490:	bd80      	pop	{r7, pc}

0801d492 <USBD_LL_OpenEP>:
 801d492:	b580      	push	{r7, lr}
 801d494:	b084      	sub	sp, #16
 801d496:	af00      	add	r7, sp, #0
 801d498:	6078      	str	r0, [r7, #4]
 801d49a:	4608      	mov	r0, r1
 801d49c:	4611      	mov	r1, r2
 801d49e:	461a      	mov	r2, r3
 801d4a0:	4603      	mov	r3, r0
 801d4a2:	70fb      	strb	r3, [r7, #3]
 801d4a4:	460b      	mov	r3, r1
 801d4a6:	70bb      	strb	r3, [r7, #2]
 801d4a8:	4613      	mov	r3, r2
 801d4aa:	803b      	strh	r3, [r7, #0]
 801d4ac:	2300      	movs	r3, #0
 801d4ae:	73fb      	strb	r3, [r7, #15]
 801d4b0:	2300      	movs	r3, #0
 801d4b2:	73bb      	strb	r3, [r7, #14]
 801d4b4:	687b      	ldr	r3, [r7, #4]
 801d4b6:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801d4ba:	78bb      	ldrb	r3, [r7, #2]
 801d4bc:	883a      	ldrh	r2, [r7, #0]
 801d4be:	78f9      	ldrb	r1, [r7, #3]
 801d4c0:	f7f4 ff1b 	bl	80122fa <HAL_PCD_EP_Open>
 801d4c4:	4603      	mov	r3, r0
 801d4c6:	73fb      	strb	r3, [r7, #15]
 801d4c8:	7bfb      	ldrb	r3, [r7, #15]
 801d4ca:	4618      	mov	r0, r3
 801d4cc:	f000 f91c 	bl	801d708 <USBD_Get_USB_Status>
 801d4d0:	4603      	mov	r3, r0
 801d4d2:	73bb      	strb	r3, [r7, #14]
 801d4d4:	7bbb      	ldrb	r3, [r7, #14]
 801d4d6:	4618      	mov	r0, r3
 801d4d8:	3710      	adds	r7, #16
 801d4da:	46bd      	mov	sp, r7
 801d4dc:	bd80      	pop	{r7, pc}

0801d4de <USBD_LL_CloseEP>:
 801d4de:	b580      	push	{r7, lr}
 801d4e0:	b084      	sub	sp, #16
 801d4e2:	af00      	add	r7, sp, #0
 801d4e4:	6078      	str	r0, [r7, #4]
 801d4e6:	460b      	mov	r3, r1
 801d4e8:	70fb      	strb	r3, [r7, #3]
 801d4ea:	2300      	movs	r3, #0
 801d4ec:	73fb      	strb	r3, [r7, #15]
 801d4ee:	2300      	movs	r3, #0
 801d4f0:	73bb      	strb	r3, [r7, #14]
 801d4f2:	687b      	ldr	r3, [r7, #4]
 801d4f4:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d4f8:	78fa      	ldrb	r2, [r7, #3]
 801d4fa:	4611      	mov	r1, r2
 801d4fc:	4618      	mov	r0, r3
 801d4fe:	f7f4 ff64 	bl	80123ca <HAL_PCD_EP_Close>
 801d502:	4603      	mov	r3, r0
 801d504:	73fb      	strb	r3, [r7, #15]
 801d506:	7bfb      	ldrb	r3, [r7, #15]
 801d508:	4618      	mov	r0, r3
 801d50a:	f000 f8fd 	bl	801d708 <USBD_Get_USB_Status>
 801d50e:	4603      	mov	r3, r0
 801d510:	73bb      	strb	r3, [r7, #14]
 801d512:	7bbb      	ldrb	r3, [r7, #14]
 801d514:	4618      	mov	r0, r3
 801d516:	3710      	adds	r7, #16
 801d518:	46bd      	mov	sp, r7
 801d51a:	bd80      	pop	{r7, pc}

0801d51c <USBD_LL_StallEP>:
 801d51c:	b580      	push	{r7, lr}
 801d51e:	b084      	sub	sp, #16
 801d520:	af00      	add	r7, sp, #0
 801d522:	6078      	str	r0, [r7, #4]
 801d524:	460b      	mov	r3, r1
 801d526:	70fb      	strb	r3, [r7, #3]
 801d528:	2300      	movs	r3, #0
 801d52a:	73fb      	strb	r3, [r7, #15]
 801d52c:	2300      	movs	r3, #0
 801d52e:	73bb      	strb	r3, [r7, #14]
 801d530:	687b      	ldr	r3, [r7, #4]
 801d532:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d536:	78fa      	ldrb	r2, [r7, #3]
 801d538:	4611      	mov	r1, r2
 801d53a:	4618      	mov	r0, r3
 801d53c:	f7f5 f83c 	bl	80125b8 <HAL_PCD_EP_SetStall>
 801d540:	4603      	mov	r3, r0
 801d542:	73fb      	strb	r3, [r7, #15]
 801d544:	7bfb      	ldrb	r3, [r7, #15]
 801d546:	4618      	mov	r0, r3
 801d548:	f000 f8de 	bl	801d708 <USBD_Get_USB_Status>
 801d54c:	4603      	mov	r3, r0
 801d54e:	73bb      	strb	r3, [r7, #14]
 801d550:	7bbb      	ldrb	r3, [r7, #14]
 801d552:	4618      	mov	r0, r3
 801d554:	3710      	adds	r7, #16
 801d556:	46bd      	mov	sp, r7
 801d558:	bd80      	pop	{r7, pc}

0801d55a <USBD_LL_ClearStallEP>:
 801d55a:	b580      	push	{r7, lr}
 801d55c:	b084      	sub	sp, #16
 801d55e:	af00      	add	r7, sp, #0
 801d560:	6078      	str	r0, [r7, #4]
 801d562:	460b      	mov	r3, r1
 801d564:	70fb      	strb	r3, [r7, #3]
 801d566:	2300      	movs	r3, #0
 801d568:	73fb      	strb	r3, [r7, #15]
 801d56a:	2300      	movs	r3, #0
 801d56c:	73bb      	strb	r3, [r7, #14]
 801d56e:	687b      	ldr	r3, [r7, #4]
 801d570:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d574:	78fa      	ldrb	r2, [r7, #3]
 801d576:	4611      	mov	r1, r2
 801d578:	4618      	mov	r0, r3
 801d57a:	f7f5 f881 	bl	8012680 <HAL_PCD_EP_ClrStall>
 801d57e:	4603      	mov	r3, r0
 801d580:	73fb      	strb	r3, [r7, #15]
 801d582:	7bfb      	ldrb	r3, [r7, #15]
 801d584:	4618      	mov	r0, r3
 801d586:	f000 f8bf 	bl	801d708 <USBD_Get_USB_Status>
 801d58a:	4603      	mov	r3, r0
 801d58c:	73bb      	strb	r3, [r7, #14]
 801d58e:	7bbb      	ldrb	r3, [r7, #14]
 801d590:	4618      	mov	r0, r3
 801d592:	3710      	adds	r7, #16
 801d594:	46bd      	mov	sp, r7
 801d596:	bd80      	pop	{r7, pc}

0801d598 <USBD_LL_IsStallEP>:
 801d598:	b480      	push	{r7}
 801d59a:	b085      	sub	sp, #20
 801d59c:	af00      	add	r7, sp, #0
 801d59e:	6078      	str	r0, [r7, #4]
 801d5a0:	460b      	mov	r3, r1
 801d5a2:	70fb      	strb	r3, [r7, #3]
 801d5a4:	687b      	ldr	r3, [r7, #4]
 801d5a6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d5aa:	60fb      	str	r3, [r7, #12]
 801d5ac:	f997 3003 	ldrsb.w	r3, [r7, #3]
 801d5b0:	2b00      	cmp	r3, #0
 801d5b2:	da0b      	bge.n	801d5cc <USBD_LL_IsStallEP+0x34>
 801d5b4:	78fb      	ldrb	r3, [r7, #3]
 801d5b6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801d5ba:	68f9      	ldr	r1, [r7, #12]
 801d5bc:	4613      	mov	r3, r2
 801d5be:	00db      	lsls	r3, r3, #3
 801d5c0:	4413      	add	r3, r2
 801d5c2:	009b      	lsls	r3, r3, #2
 801d5c4:	440b      	add	r3, r1
 801d5c6:	333e      	adds	r3, #62	@ 0x3e
 801d5c8:	781b      	ldrb	r3, [r3, #0]
 801d5ca:	e00b      	b.n	801d5e4 <USBD_LL_IsStallEP+0x4c>
 801d5cc:	78fb      	ldrb	r3, [r7, #3]
 801d5ce:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 801d5d2:	68f9      	ldr	r1, [r7, #12]
 801d5d4:	4613      	mov	r3, r2
 801d5d6:	00db      	lsls	r3, r3, #3
 801d5d8:	4413      	add	r3, r2
 801d5da:	009b      	lsls	r3, r3, #2
 801d5dc:	440b      	add	r3, r1
 801d5de:	f203 237e 	addw	r3, r3, #638	@ 0x27e
 801d5e2:	781b      	ldrb	r3, [r3, #0]
 801d5e4:	4618      	mov	r0, r3
 801d5e6:	3714      	adds	r7, #20
 801d5e8:	46bd      	mov	sp, r7
 801d5ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d5ee:	4770      	bx	lr

0801d5f0 <USBD_LL_SetUSBAddress>:
 801d5f0:	b580      	push	{r7, lr}
 801d5f2:	b084      	sub	sp, #16
 801d5f4:	af00      	add	r7, sp, #0
 801d5f6:	6078      	str	r0, [r7, #4]
 801d5f8:	460b      	mov	r3, r1
 801d5fa:	70fb      	strb	r3, [r7, #3]
 801d5fc:	2300      	movs	r3, #0
 801d5fe:	73fb      	strb	r3, [r7, #15]
 801d600:	2300      	movs	r3, #0
 801d602:	73bb      	strb	r3, [r7, #14]
 801d604:	687b      	ldr	r3, [r7, #4]
 801d606:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d60a:	78fa      	ldrb	r2, [r7, #3]
 801d60c:	4611      	mov	r1, r2
 801d60e:	4618      	mov	r0, r3
 801d610:	f7f4 fe4e 	bl	80122b0 <HAL_PCD_SetAddress>
 801d614:	4603      	mov	r3, r0
 801d616:	73fb      	strb	r3, [r7, #15]
 801d618:	7bfb      	ldrb	r3, [r7, #15]
 801d61a:	4618      	mov	r0, r3
 801d61c:	f000 f874 	bl	801d708 <USBD_Get_USB_Status>
 801d620:	4603      	mov	r3, r0
 801d622:	73bb      	strb	r3, [r7, #14]
 801d624:	7bbb      	ldrb	r3, [r7, #14]
 801d626:	4618      	mov	r0, r3
 801d628:	3710      	adds	r7, #16
 801d62a:	46bd      	mov	sp, r7
 801d62c:	bd80      	pop	{r7, pc}

0801d62e <USBD_LL_Transmit>:
 801d62e:	b580      	push	{r7, lr}
 801d630:	b086      	sub	sp, #24
 801d632:	af00      	add	r7, sp, #0
 801d634:	60f8      	str	r0, [r7, #12]
 801d636:	607a      	str	r2, [r7, #4]
 801d638:	603b      	str	r3, [r7, #0]
 801d63a:	460b      	mov	r3, r1
 801d63c:	72fb      	strb	r3, [r7, #11]
 801d63e:	2300      	movs	r3, #0
 801d640:	75fb      	strb	r3, [r7, #23]
 801d642:	2300      	movs	r3, #0
 801d644:	75bb      	strb	r3, [r7, #22]
 801d646:	68fb      	ldr	r3, [r7, #12]
 801d648:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801d64c:	7af9      	ldrb	r1, [r7, #11]
 801d64e:	683b      	ldr	r3, [r7, #0]
 801d650:	687a      	ldr	r2, [r7, #4]
 801d652:	f7f4 ff67 	bl	8012524 <HAL_PCD_EP_Transmit>
 801d656:	4603      	mov	r3, r0
 801d658:	75fb      	strb	r3, [r7, #23]
 801d65a:	7dfb      	ldrb	r3, [r7, #23]
 801d65c:	4618      	mov	r0, r3
 801d65e:	f000 f853 	bl	801d708 <USBD_Get_USB_Status>
 801d662:	4603      	mov	r3, r0
 801d664:	75bb      	strb	r3, [r7, #22]
 801d666:	7dbb      	ldrb	r3, [r7, #22]
 801d668:	4618      	mov	r0, r3
 801d66a:	3718      	adds	r7, #24
 801d66c:	46bd      	mov	sp, r7
 801d66e:	bd80      	pop	{r7, pc}

0801d670 <USBD_LL_PrepareReceive>:
 801d670:	b580      	push	{r7, lr}
 801d672:	b086      	sub	sp, #24
 801d674:	af00      	add	r7, sp, #0
 801d676:	60f8      	str	r0, [r7, #12]
 801d678:	607a      	str	r2, [r7, #4]
 801d67a:	603b      	str	r3, [r7, #0]
 801d67c:	460b      	mov	r3, r1
 801d67e:	72fb      	strb	r3, [r7, #11]
 801d680:	2300      	movs	r3, #0
 801d682:	75fb      	strb	r3, [r7, #23]
 801d684:	2300      	movs	r3, #0
 801d686:	75bb      	strb	r3, [r7, #22]
 801d688:	68fb      	ldr	r3, [r7, #12]
 801d68a:	f8d3 02c8 	ldr.w	r0, [r3, #712]	@ 0x2c8
 801d68e:	7af9      	ldrb	r1, [r7, #11]
 801d690:	683b      	ldr	r3, [r7, #0]
 801d692:	687a      	ldr	r2, [r7, #4]
 801d694:	f7f4 fee3 	bl	801245e <HAL_PCD_EP_Receive>
 801d698:	4603      	mov	r3, r0
 801d69a:	75fb      	strb	r3, [r7, #23]
 801d69c:	7dfb      	ldrb	r3, [r7, #23]
 801d69e:	4618      	mov	r0, r3
 801d6a0:	f000 f832 	bl	801d708 <USBD_Get_USB_Status>
 801d6a4:	4603      	mov	r3, r0
 801d6a6:	75bb      	strb	r3, [r7, #22]
 801d6a8:	7dbb      	ldrb	r3, [r7, #22]
 801d6aa:	4618      	mov	r0, r3
 801d6ac:	3718      	adds	r7, #24
 801d6ae:	46bd      	mov	sp, r7
 801d6b0:	bd80      	pop	{r7, pc}

0801d6b2 <USBD_LL_GetRxDataSize>:
 801d6b2:	b580      	push	{r7, lr}
 801d6b4:	b082      	sub	sp, #8
 801d6b6:	af00      	add	r7, sp, #0
 801d6b8:	6078      	str	r0, [r7, #4]
 801d6ba:	460b      	mov	r3, r1
 801d6bc:	70fb      	strb	r3, [r7, #3]
 801d6be:	687b      	ldr	r3, [r7, #4]
 801d6c0:	f8d3 32c8 	ldr.w	r3, [r3, #712]	@ 0x2c8
 801d6c4:	78fa      	ldrb	r2, [r7, #3]
 801d6c6:	4611      	mov	r1, r2
 801d6c8:	4618      	mov	r0, r3
 801d6ca:	f7f4 ff13 	bl	80124f4 <HAL_PCD_EP_GetRxCount>
 801d6ce:	4603      	mov	r3, r0
 801d6d0:	4618      	mov	r0, r3
 801d6d2:	3708      	adds	r7, #8
 801d6d4:	46bd      	mov	sp, r7
 801d6d6:	bd80      	pop	{r7, pc}

0801d6d8 <USBD_static_malloc>:
 801d6d8:	b480      	push	{r7}
 801d6da:	b083      	sub	sp, #12
 801d6dc:	af00      	add	r7, sp, #0
 801d6de:	6078      	str	r0, [r7, #4]
 801d6e0:	4b03      	ldr	r3, [pc, #12]	@ (801d6f0 <USBD_static_malloc+0x18>)
 801d6e2:	4618      	mov	r0, r3
 801d6e4:	370c      	adds	r7, #12
 801d6e6:	46bd      	mov	sp, r7
 801d6e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d6ec:	4770      	bx	lr
 801d6ee:	bf00      	nop
 801d6f0:	2000d12c 	.word	0x2000d12c

0801d6f4 <USBD_static_free>:
 801d6f4:	b480      	push	{r7}
 801d6f6:	b083      	sub	sp, #12
 801d6f8:	af00      	add	r7, sp, #0
 801d6fa:	6078      	str	r0, [r7, #4]
 801d6fc:	bf00      	nop
 801d6fe:	370c      	adds	r7, #12
 801d700:	46bd      	mov	sp, r7
 801d702:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d706:	4770      	bx	lr

0801d708 <USBD_Get_USB_Status>:
 801d708:	b480      	push	{r7}
 801d70a:	b085      	sub	sp, #20
 801d70c:	af00      	add	r7, sp, #0
 801d70e:	4603      	mov	r3, r0
 801d710:	71fb      	strb	r3, [r7, #7]
 801d712:	2300      	movs	r3, #0
 801d714:	73fb      	strb	r3, [r7, #15]
 801d716:	79fb      	ldrb	r3, [r7, #7]
 801d718:	2b03      	cmp	r3, #3
 801d71a:	d817      	bhi.n	801d74c <USBD_Get_USB_Status+0x44>
 801d71c:	a201      	add	r2, pc, #4	@ (adr r2, 801d724 <USBD_Get_USB_Status+0x1c>)
 801d71e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801d722:	bf00      	nop
 801d724:	0801d735 	.word	0x0801d735
 801d728:	0801d73b 	.word	0x0801d73b
 801d72c:	0801d741 	.word	0x0801d741
 801d730:	0801d747 	.word	0x0801d747
 801d734:	2300      	movs	r3, #0
 801d736:	73fb      	strb	r3, [r7, #15]
 801d738:	e00b      	b.n	801d752 <USBD_Get_USB_Status+0x4a>
 801d73a:	2303      	movs	r3, #3
 801d73c:	73fb      	strb	r3, [r7, #15]
 801d73e:	e008      	b.n	801d752 <USBD_Get_USB_Status+0x4a>
 801d740:	2301      	movs	r3, #1
 801d742:	73fb      	strb	r3, [r7, #15]
 801d744:	e005      	b.n	801d752 <USBD_Get_USB_Status+0x4a>
 801d746:	2303      	movs	r3, #3
 801d748:	73fb      	strb	r3, [r7, #15]
 801d74a:	e002      	b.n	801d752 <USBD_Get_USB_Status+0x4a>
 801d74c:	2303      	movs	r3, #3
 801d74e:	73fb      	strb	r3, [r7, #15]
 801d750:	bf00      	nop
 801d752:	7bfb      	ldrb	r3, [r7, #15]
 801d754:	4618      	mov	r0, r3
 801d756:	3714      	adds	r7, #20
 801d758:	46bd      	mov	sp, r7
 801d75a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d75e:	4770      	bx	lr

0801d760 <std>:
 801d760:	2300      	movs	r3, #0
 801d762:	b510      	push	{r4, lr}
 801d764:	4604      	mov	r4, r0
 801d766:	e9c0 3300 	strd	r3, r3, [r0]
 801d76a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801d76e:	6083      	str	r3, [r0, #8]
 801d770:	8181      	strh	r1, [r0, #12]
 801d772:	6643      	str	r3, [r0, #100]	@ 0x64
 801d774:	81c2      	strh	r2, [r0, #14]
 801d776:	6183      	str	r3, [r0, #24]
 801d778:	4619      	mov	r1, r3
 801d77a:	2208      	movs	r2, #8
 801d77c:	305c      	adds	r0, #92	@ 0x5c
 801d77e:	f000 f928 	bl	801d9d2 <memset>
 801d782:	4b0d      	ldr	r3, [pc, #52]	@ (801d7b8 <std+0x58>)
 801d784:	6223      	str	r3, [r4, #32]
 801d786:	4b0d      	ldr	r3, [pc, #52]	@ (801d7bc <std+0x5c>)
 801d788:	6263      	str	r3, [r4, #36]	@ 0x24
 801d78a:	4b0d      	ldr	r3, [pc, #52]	@ (801d7c0 <std+0x60>)
 801d78c:	62a3      	str	r3, [r4, #40]	@ 0x28
 801d78e:	4b0d      	ldr	r3, [pc, #52]	@ (801d7c4 <std+0x64>)
 801d790:	62e3      	str	r3, [r4, #44]	@ 0x2c
 801d792:	4b0d      	ldr	r3, [pc, #52]	@ (801d7c8 <std+0x68>)
 801d794:	61e4      	str	r4, [r4, #28]
 801d796:	429c      	cmp	r4, r3
 801d798:	d006      	beq.n	801d7a8 <std+0x48>
 801d79a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 801d79e:	4294      	cmp	r4, r2
 801d7a0:	d002      	beq.n	801d7a8 <std+0x48>
 801d7a2:	33d0      	adds	r3, #208	@ 0xd0
 801d7a4:	429c      	cmp	r4, r3
 801d7a6:	d105      	bne.n	801d7b4 <std+0x54>
 801d7a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 801d7ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d7b0:	f000 b9b4 	b.w	801db1c <__retarget_lock_init_recursive>
 801d7b4:	bd10      	pop	{r4, pc}
 801d7b6:	bf00      	nop
 801d7b8:	0801d94d 	.word	0x0801d94d
 801d7bc:	0801d96f 	.word	0x0801d96f
 801d7c0:	0801d9a7 	.word	0x0801d9a7
 801d7c4:	0801d9cb 	.word	0x0801d9cb
 801d7c8:	2000d34c 	.word	0x2000d34c

0801d7cc <stdio_exit_handler>:
 801d7cc:	4a02      	ldr	r2, [pc, #8]	@ (801d7d8 <stdio_exit_handler+0xc>)
 801d7ce:	4903      	ldr	r1, [pc, #12]	@ (801d7dc <stdio_exit_handler+0x10>)
 801d7d0:	4803      	ldr	r0, [pc, #12]	@ (801d7e0 <stdio_exit_handler+0x14>)
 801d7d2:	f000 b869 	b.w	801d8a8 <_fwalk_sglue>
 801d7d6:	bf00      	nop
 801d7d8:	20000144 	.word	0x20000144
 801d7dc:	0801f5d5 	.word	0x0801f5d5
 801d7e0:	20000158 	.word	0x20000158

0801d7e4 <cleanup_stdio>:
 801d7e4:	6841      	ldr	r1, [r0, #4]
 801d7e6:	4b0c      	ldr	r3, [pc, #48]	@ (801d818 <cleanup_stdio+0x34>)
 801d7e8:	4299      	cmp	r1, r3
 801d7ea:	b510      	push	{r4, lr}
 801d7ec:	4604      	mov	r4, r0
 801d7ee:	d001      	beq.n	801d7f4 <cleanup_stdio+0x10>
 801d7f0:	f001 fef0 	bl	801f5d4 <_fclose_r>
 801d7f4:	68a1      	ldr	r1, [r4, #8]
 801d7f6:	4b09      	ldr	r3, [pc, #36]	@ (801d81c <cleanup_stdio+0x38>)
 801d7f8:	4299      	cmp	r1, r3
 801d7fa:	d002      	beq.n	801d802 <cleanup_stdio+0x1e>
 801d7fc:	4620      	mov	r0, r4
 801d7fe:	f001 fee9 	bl	801f5d4 <_fclose_r>
 801d802:	68e1      	ldr	r1, [r4, #12]
 801d804:	4b06      	ldr	r3, [pc, #24]	@ (801d820 <cleanup_stdio+0x3c>)
 801d806:	4299      	cmp	r1, r3
 801d808:	d004      	beq.n	801d814 <cleanup_stdio+0x30>
 801d80a:	4620      	mov	r0, r4
 801d80c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d810:	f001 bee0 	b.w	801f5d4 <_fclose_r>
 801d814:	bd10      	pop	{r4, pc}
 801d816:	bf00      	nop
 801d818:	2000d34c 	.word	0x2000d34c
 801d81c:	2000d3b4 	.word	0x2000d3b4
 801d820:	2000d41c 	.word	0x2000d41c

0801d824 <global_stdio_init.part.0>:
 801d824:	b510      	push	{r4, lr}
 801d826:	4b0b      	ldr	r3, [pc, #44]	@ (801d854 <global_stdio_init.part.0+0x30>)
 801d828:	4c0b      	ldr	r4, [pc, #44]	@ (801d858 <global_stdio_init.part.0+0x34>)
 801d82a:	4a0c      	ldr	r2, [pc, #48]	@ (801d85c <global_stdio_init.part.0+0x38>)
 801d82c:	601a      	str	r2, [r3, #0]
 801d82e:	4620      	mov	r0, r4
 801d830:	2200      	movs	r2, #0
 801d832:	2104      	movs	r1, #4
 801d834:	f7ff ff94 	bl	801d760 <std>
 801d838:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 801d83c:	2201      	movs	r2, #1
 801d83e:	2109      	movs	r1, #9
 801d840:	f7ff ff8e 	bl	801d760 <std>
 801d844:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 801d848:	2202      	movs	r2, #2
 801d84a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d84e:	2112      	movs	r1, #18
 801d850:	f7ff bf86 	b.w	801d760 <std>
 801d854:	2000d484 	.word	0x2000d484
 801d858:	2000d34c 	.word	0x2000d34c
 801d85c:	0801d7cd 	.word	0x0801d7cd

0801d860 <__sfp_lock_acquire>:
 801d860:	4801      	ldr	r0, [pc, #4]	@ (801d868 <__sfp_lock_acquire+0x8>)
 801d862:	f000 b95d 	b.w	801db20 <__retarget_lock_acquire_recursive>
 801d866:	bf00      	nop
 801d868:	2000d48e 	.word	0x2000d48e

0801d86c <__sfp_lock_release>:
 801d86c:	4801      	ldr	r0, [pc, #4]	@ (801d874 <__sfp_lock_release+0x8>)
 801d86e:	f000 b958 	b.w	801db22 <__retarget_lock_release_recursive>
 801d872:	bf00      	nop
 801d874:	2000d48e 	.word	0x2000d48e

0801d878 <__sinit>:
 801d878:	b510      	push	{r4, lr}
 801d87a:	4604      	mov	r4, r0
 801d87c:	f7ff fff0 	bl	801d860 <__sfp_lock_acquire>
 801d880:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801d882:	b11b      	cbz	r3, 801d88c <__sinit+0x14>
 801d884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d888:	f7ff bff0 	b.w	801d86c <__sfp_lock_release>
 801d88c:	4b04      	ldr	r3, [pc, #16]	@ (801d8a0 <__sinit+0x28>)
 801d88e:	6363      	str	r3, [r4, #52]	@ 0x34
 801d890:	4b04      	ldr	r3, [pc, #16]	@ (801d8a4 <__sinit+0x2c>)
 801d892:	681b      	ldr	r3, [r3, #0]
 801d894:	2b00      	cmp	r3, #0
 801d896:	d1f5      	bne.n	801d884 <__sinit+0xc>
 801d898:	f7ff ffc4 	bl	801d824 <global_stdio_init.part.0>
 801d89c:	e7f2      	b.n	801d884 <__sinit+0xc>
 801d89e:	bf00      	nop
 801d8a0:	0801d7e5 	.word	0x0801d7e5
 801d8a4:	2000d484 	.word	0x2000d484

0801d8a8 <_fwalk_sglue>:
 801d8a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d8ac:	4607      	mov	r7, r0
 801d8ae:	4688      	mov	r8, r1
 801d8b0:	4614      	mov	r4, r2
 801d8b2:	2600      	movs	r6, #0
 801d8b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801d8b8:	f1b9 0901 	subs.w	r9, r9, #1
 801d8bc:	d505      	bpl.n	801d8ca <_fwalk_sglue+0x22>
 801d8be:	6824      	ldr	r4, [r4, #0]
 801d8c0:	2c00      	cmp	r4, #0
 801d8c2:	d1f7      	bne.n	801d8b4 <_fwalk_sglue+0xc>
 801d8c4:	4630      	mov	r0, r6
 801d8c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d8ca:	89ab      	ldrh	r3, [r5, #12]
 801d8cc:	2b01      	cmp	r3, #1
 801d8ce:	d907      	bls.n	801d8e0 <_fwalk_sglue+0x38>
 801d8d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801d8d4:	3301      	adds	r3, #1
 801d8d6:	d003      	beq.n	801d8e0 <_fwalk_sglue+0x38>
 801d8d8:	4629      	mov	r1, r5
 801d8da:	4638      	mov	r0, r7
 801d8dc:	47c0      	blx	r8
 801d8de:	4306      	orrs	r6, r0
 801d8e0:	3568      	adds	r5, #104	@ 0x68
 801d8e2:	e7e9      	b.n	801d8b8 <_fwalk_sglue+0x10>

0801d8e4 <snprintf>:
 801d8e4:	b40c      	push	{r2, r3}
 801d8e6:	b530      	push	{r4, r5, lr}
 801d8e8:	4b17      	ldr	r3, [pc, #92]	@ (801d948 <snprintf+0x64>)
 801d8ea:	1e0c      	subs	r4, r1, #0
 801d8ec:	681d      	ldr	r5, [r3, #0]
 801d8ee:	b09d      	sub	sp, #116	@ 0x74
 801d8f0:	da08      	bge.n	801d904 <snprintf+0x20>
 801d8f2:	238b      	movs	r3, #139	@ 0x8b
 801d8f4:	602b      	str	r3, [r5, #0]
 801d8f6:	f04f 30ff 	mov.w	r0, #4294967295
 801d8fa:	b01d      	add	sp, #116	@ 0x74
 801d8fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801d900:	b002      	add	sp, #8
 801d902:	4770      	bx	lr
 801d904:	f44f 7302 	mov.w	r3, #520	@ 0x208
 801d908:	f8ad 3014 	strh.w	r3, [sp, #20]
 801d90c:	bf14      	ite	ne
 801d90e:	f104 33ff 	addne.w	r3, r4, #4294967295
 801d912:	4623      	moveq	r3, r4
 801d914:	9304      	str	r3, [sp, #16]
 801d916:	9307      	str	r3, [sp, #28]
 801d918:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 801d91c:	9002      	str	r0, [sp, #8]
 801d91e:	9006      	str	r0, [sp, #24]
 801d920:	f8ad 3016 	strh.w	r3, [sp, #22]
 801d924:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d926:	ab21      	add	r3, sp, #132	@ 0x84
 801d928:	a902      	add	r1, sp, #8
 801d92a:	4628      	mov	r0, r5
 801d92c:	9301      	str	r3, [sp, #4]
 801d92e:	f000 fc73 	bl	801e218 <_svfprintf_r>
 801d932:	1c43      	adds	r3, r0, #1
 801d934:	bfbc      	itt	lt
 801d936:	238b      	movlt	r3, #139	@ 0x8b
 801d938:	602b      	strlt	r3, [r5, #0]
 801d93a:	2c00      	cmp	r4, #0
 801d93c:	d0dd      	beq.n	801d8fa <snprintf+0x16>
 801d93e:	9b02      	ldr	r3, [sp, #8]
 801d940:	2200      	movs	r2, #0
 801d942:	701a      	strb	r2, [r3, #0]
 801d944:	e7d9      	b.n	801d8fa <snprintf+0x16>
 801d946:	bf00      	nop
 801d948:	20000150 	.word	0x20000150

0801d94c <__sread>:
 801d94c:	b510      	push	{r4, lr}
 801d94e:	460c      	mov	r4, r1
 801d950:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d954:	f000 f894 	bl	801da80 <_read_r>
 801d958:	2800      	cmp	r0, #0
 801d95a:	bfab      	itete	ge
 801d95c:	6d23      	ldrge	r3, [r4, #80]	@ 0x50
 801d95e:	89a3      	ldrhlt	r3, [r4, #12]
 801d960:	181b      	addge	r3, r3, r0
 801d962:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 801d966:	bfac      	ite	ge
 801d968:	6523      	strge	r3, [r4, #80]	@ 0x50
 801d96a:	81a3      	strhlt	r3, [r4, #12]
 801d96c:	bd10      	pop	{r4, pc}

0801d96e <__swrite>:
 801d96e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d972:	461f      	mov	r7, r3
 801d974:	898b      	ldrh	r3, [r1, #12]
 801d976:	05db      	lsls	r3, r3, #23
 801d978:	4605      	mov	r5, r0
 801d97a:	460c      	mov	r4, r1
 801d97c:	4616      	mov	r6, r2
 801d97e:	d505      	bpl.n	801d98c <__swrite+0x1e>
 801d980:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d984:	2302      	movs	r3, #2
 801d986:	2200      	movs	r2, #0
 801d988:	f000 f868 	bl	801da5c <_lseek_r>
 801d98c:	89a3      	ldrh	r3, [r4, #12]
 801d98e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801d992:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 801d996:	81a3      	strh	r3, [r4, #12]
 801d998:	4632      	mov	r2, r6
 801d99a:	463b      	mov	r3, r7
 801d99c:	4628      	mov	r0, r5
 801d99e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801d9a2:	f000 b87f 	b.w	801daa4 <_write_r>

0801d9a6 <__sseek>:
 801d9a6:	b510      	push	{r4, lr}
 801d9a8:	460c      	mov	r4, r1
 801d9aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d9ae:	f000 f855 	bl	801da5c <_lseek_r>
 801d9b2:	1c43      	adds	r3, r0, #1
 801d9b4:	89a3      	ldrh	r3, [r4, #12]
 801d9b6:	bf15      	itete	ne
 801d9b8:	6520      	strne	r0, [r4, #80]	@ 0x50
 801d9ba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 801d9be:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 801d9c2:	81a3      	strheq	r3, [r4, #12]
 801d9c4:	bf18      	it	ne
 801d9c6:	81a3      	strhne	r3, [r4, #12]
 801d9c8:	bd10      	pop	{r4, pc}

0801d9ca <__sclose>:
 801d9ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801d9ce:	f000 b809 	b.w	801d9e4 <_close_r>

0801d9d2 <memset>:
 801d9d2:	4402      	add	r2, r0
 801d9d4:	4603      	mov	r3, r0
 801d9d6:	4293      	cmp	r3, r2
 801d9d8:	d100      	bne.n	801d9dc <memset+0xa>
 801d9da:	4770      	bx	lr
 801d9dc:	f803 1b01 	strb.w	r1, [r3], #1
 801d9e0:	e7f9      	b.n	801d9d6 <memset+0x4>
	...

0801d9e4 <_close_r>:
 801d9e4:	b538      	push	{r3, r4, r5, lr}
 801d9e6:	4d06      	ldr	r5, [pc, #24]	@ (801da00 <_close_r+0x1c>)
 801d9e8:	2300      	movs	r3, #0
 801d9ea:	4604      	mov	r4, r0
 801d9ec:	4608      	mov	r0, r1
 801d9ee:	602b      	str	r3, [r5, #0]
 801d9f0:	f7e6 fa40 	bl	8003e74 <_close>
 801d9f4:	1c43      	adds	r3, r0, #1
 801d9f6:	d102      	bne.n	801d9fe <_close_r+0x1a>
 801d9f8:	682b      	ldr	r3, [r5, #0]
 801d9fa:	b103      	cbz	r3, 801d9fe <_close_r+0x1a>
 801d9fc:	6023      	str	r3, [r4, #0]
 801d9fe:	bd38      	pop	{r3, r4, r5, pc}
 801da00:	2000d488 	.word	0x2000d488

0801da04 <_reclaim_reent>:
 801da04:	4b14      	ldr	r3, [pc, #80]	@ (801da58 <_reclaim_reent+0x54>)
 801da06:	681b      	ldr	r3, [r3, #0]
 801da08:	4283      	cmp	r3, r0
 801da0a:	b570      	push	{r4, r5, r6, lr}
 801da0c:	4604      	mov	r4, r0
 801da0e:	d022      	beq.n	801da56 <_reclaim_reent+0x52>
 801da10:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801da12:	b153      	cbz	r3, 801da2a <_reclaim_reent+0x26>
 801da14:	2500      	movs	r5, #0
 801da16:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801da18:	5959      	ldr	r1, [r3, r5]
 801da1a:	b9b1      	cbnz	r1, 801da4a <_reclaim_reent+0x46>
 801da1c:	3504      	adds	r5, #4
 801da1e:	2d80      	cmp	r5, #128	@ 0x80
 801da20:	d1f9      	bne.n	801da16 <_reclaim_reent+0x12>
 801da22:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801da24:	4620      	mov	r0, r4
 801da26:	f000 f8f1 	bl	801dc0c <_free_r>
 801da2a:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
 801da2c:	b111      	cbz	r1, 801da34 <_reclaim_reent+0x30>
 801da2e:	4620      	mov	r0, r4
 801da30:	f000 f8ec 	bl	801dc0c <_free_r>
 801da34:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
 801da36:	b111      	cbz	r1, 801da3e <_reclaim_reent+0x3a>
 801da38:	4620      	mov	r0, r4
 801da3a:	f000 f8e7 	bl	801dc0c <_free_r>
 801da3e:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 801da40:	b14b      	cbz	r3, 801da56 <_reclaim_reent+0x52>
 801da42:	4620      	mov	r0, r4
 801da44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801da48:	4718      	bx	r3
 801da4a:	680e      	ldr	r6, [r1, #0]
 801da4c:	4620      	mov	r0, r4
 801da4e:	f000 f8dd 	bl	801dc0c <_free_r>
 801da52:	4631      	mov	r1, r6
 801da54:	e7e1      	b.n	801da1a <_reclaim_reent+0x16>
 801da56:	bd70      	pop	{r4, r5, r6, pc}
 801da58:	20000150 	.word	0x20000150

0801da5c <_lseek_r>:
 801da5c:	b538      	push	{r3, r4, r5, lr}
 801da5e:	4d07      	ldr	r5, [pc, #28]	@ (801da7c <_lseek_r+0x20>)
 801da60:	4604      	mov	r4, r0
 801da62:	4608      	mov	r0, r1
 801da64:	4611      	mov	r1, r2
 801da66:	2200      	movs	r2, #0
 801da68:	602a      	str	r2, [r5, #0]
 801da6a:	461a      	mov	r2, r3
 801da6c:	f7e6 fa29 	bl	8003ec2 <_lseek>
 801da70:	1c43      	adds	r3, r0, #1
 801da72:	d102      	bne.n	801da7a <_lseek_r+0x1e>
 801da74:	682b      	ldr	r3, [r5, #0]
 801da76:	b103      	cbz	r3, 801da7a <_lseek_r+0x1e>
 801da78:	6023      	str	r3, [r4, #0]
 801da7a:	bd38      	pop	{r3, r4, r5, pc}
 801da7c:	2000d488 	.word	0x2000d488

0801da80 <_read_r>:
 801da80:	b538      	push	{r3, r4, r5, lr}
 801da82:	4d07      	ldr	r5, [pc, #28]	@ (801daa0 <_read_r+0x20>)
 801da84:	4604      	mov	r4, r0
 801da86:	4608      	mov	r0, r1
 801da88:	4611      	mov	r1, r2
 801da8a:	2200      	movs	r2, #0
 801da8c:	602a      	str	r2, [r5, #0]
 801da8e:	461a      	mov	r2, r3
 801da90:	f7e6 f9b7 	bl	8003e02 <_read>
 801da94:	1c43      	adds	r3, r0, #1
 801da96:	d102      	bne.n	801da9e <_read_r+0x1e>
 801da98:	682b      	ldr	r3, [r5, #0]
 801da9a:	b103      	cbz	r3, 801da9e <_read_r+0x1e>
 801da9c:	6023      	str	r3, [r4, #0]
 801da9e:	bd38      	pop	{r3, r4, r5, pc}
 801daa0:	2000d488 	.word	0x2000d488

0801daa4 <_write_r>:
 801daa4:	b538      	push	{r3, r4, r5, lr}
 801daa6:	4d07      	ldr	r5, [pc, #28]	@ (801dac4 <_write_r+0x20>)
 801daa8:	4604      	mov	r4, r0
 801daaa:	4608      	mov	r0, r1
 801daac:	4611      	mov	r1, r2
 801daae:	2200      	movs	r2, #0
 801dab0:	602a      	str	r2, [r5, #0]
 801dab2:	461a      	mov	r2, r3
 801dab4:	f7e6 f9c2 	bl	8003e3c <_write>
 801dab8:	1c43      	adds	r3, r0, #1
 801daba:	d102      	bne.n	801dac2 <_write_r+0x1e>
 801dabc:	682b      	ldr	r3, [r5, #0]
 801dabe:	b103      	cbz	r3, 801dac2 <_write_r+0x1e>
 801dac0:	6023      	str	r3, [r4, #0]
 801dac2:	bd38      	pop	{r3, r4, r5, pc}
 801dac4:	2000d488 	.word	0x2000d488

0801dac8 <__errno>:
 801dac8:	4b01      	ldr	r3, [pc, #4]	@ (801dad0 <__errno+0x8>)
 801daca:	6818      	ldr	r0, [r3, #0]
 801dacc:	4770      	bx	lr
 801dace:	bf00      	nop
 801dad0:	20000150 	.word	0x20000150

0801dad4 <__libc_init_array>:
 801dad4:	b570      	push	{r4, r5, r6, lr}
 801dad6:	4d0d      	ldr	r5, [pc, #52]	@ (801db0c <__libc_init_array+0x38>)
 801dad8:	4c0d      	ldr	r4, [pc, #52]	@ (801db10 <__libc_init_array+0x3c>)
 801dada:	1b64      	subs	r4, r4, r5
 801dadc:	10a4      	asrs	r4, r4, #2
 801dade:	2600      	movs	r6, #0
 801dae0:	42a6      	cmp	r6, r4
 801dae2:	d109      	bne.n	801daf8 <__libc_init_array+0x24>
 801dae4:	4d0b      	ldr	r5, [pc, #44]	@ (801db14 <__libc_init_array+0x40>)
 801dae6:	4c0c      	ldr	r4, [pc, #48]	@ (801db18 <__libc_init_array+0x44>)
 801dae8:	f006 fd8a 	bl	8024600 <_init>
 801daec:	1b64      	subs	r4, r4, r5
 801daee:	10a4      	asrs	r4, r4, #2
 801daf0:	2600      	movs	r6, #0
 801daf2:	42a6      	cmp	r6, r4
 801daf4:	d105      	bne.n	801db02 <__libc_init_array+0x2e>
 801daf6:	bd70      	pop	{r4, r5, r6, pc}
 801daf8:	f855 3b04 	ldr.w	r3, [r5], #4
 801dafc:	4798      	blx	r3
 801dafe:	3601      	adds	r6, #1
 801db00:	e7ee      	b.n	801dae0 <__libc_init_array+0xc>
 801db02:	f855 3b04 	ldr.w	r3, [r5], #4
 801db06:	4798      	blx	r3
 801db08:	3601      	adds	r6, #1
 801db0a:	e7f2      	b.n	801daf2 <__libc_init_array+0x1e>
 801db0c:	08025408 	.word	0x08025408
 801db10:	08025408 	.word	0x08025408
 801db14:	08025408 	.word	0x08025408
 801db18:	08025410 	.word	0x08025410

0801db1c <__retarget_lock_init_recursive>:
 801db1c:	4770      	bx	lr

0801db1e <__retarget_lock_close_recursive>:
 801db1e:	4770      	bx	lr

0801db20 <__retarget_lock_acquire_recursive>:
 801db20:	4770      	bx	lr

0801db22 <__retarget_lock_release_recursive>:
 801db22:	4770      	bx	lr

0801db24 <memcpy>:
 801db24:	440a      	add	r2, r1
 801db26:	4291      	cmp	r1, r2
 801db28:	f100 33ff 	add.w	r3, r0, #4294967295
 801db2c:	d100      	bne.n	801db30 <memcpy+0xc>
 801db2e:	4770      	bx	lr
 801db30:	b510      	push	{r4, lr}
 801db32:	f811 4b01 	ldrb.w	r4, [r1], #1
 801db36:	f803 4f01 	strb.w	r4, [r3, #1]!
 801db3a:	4291      	cmp	r1, r2
 801db3c:	d1f9      	bne.n	801db32 <memcpy+0xe>
 801db3e:	bd10      	pop	{r4, pc}

0801db40 <register_fini>:
 801db40:	4b02      	ldr	r3, [pc, #8]	@ (801db4c <register_fini+0xc>)
 801db42:	b113      	cbz	r3, 801db4a <register_fini+0xa>
 801db44:	4802      	ldr	r0, [pc, #8]	@ (801db50 <register_fini+0x10>)
 801db46:	f000 b805 	b.w	801db54 <atexit>
 801db4a:	4770      	bx	lr
 801db4c:	00000000 	.word	0x00000000
 801db50:	0801f835 	.word	0x0801f835

0801db54 <atexit>:
 801db54:	2300      	movs	r3, #0
 801db56:	4601      	mov	r1, r0
 801db58:	461a      	mov	r2, r3
 801db5a:	4618      	mov	r0, r3
 801db5c:	f001 bec0 	b.w	801f8e0 <__register_exitproc>

0801db60 <_malloc_trim_r>:
 801db60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801db64:	4606      	mov	r6, r0
 801db66:	2008      	movs	r0, #8
 801db68:	4689      	mov	r9, r1
 801db6a:	f001 fe77 	bl	801f85c <sysconf>
 801db6e:	4f24      	ldr	r7, [pc, #144]	@ (801dc00 <_malloc_trim_r+0xa0>)
 801db70:	4680      	mov	r8, r0
 801db72:	4630      	mov	r0, r6
 801db74:	f000 fb44 	bl	801e200 <__malloc_lock>
 801db78:	68bb      	ldr	r3, [r7, #8]
 801db7a:	685d      	ldr	r5, [r3, #4]
 801db7c:	f025 0503 	bic.w	r5, r5, #3
 801db80:	f1a5 0411 	sub.w	r4, r5, #17
 801db84:	eba4 0409 	sub.w	r4, r4, r9
 801db88:	4444      	add	r4, r8
 801db8a:	fbb4 f4f8 	udiv	r4, r4, r8
 801db8e:	3c01      	subs	r4, #1
 801db90:	fb08 f404 	mul.w	r4, r8, r4
 801db94:	45a0      	cmp	r8, r4
 801db96:	dd05      	ble.n	801dba4 <_malloc_trim_r+0x44>
 801db98:	4630      	mov	r0, r6
 801db9a:	f000 fb37 	bl	801e20c <__malloc_unlock>
 801db9e:	2000      	movs	r0, #0
 801dba0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801dba4:	2100      	movs	r1, #0
 801dba6:	4630      	mov	r0, r6
 801dba8:	f001 fe34 	bl	801f814 <_sbrk_r>
 801dbac:	68bb      	ldr	r3, [r7, #8]
 801dbae:	442b      	add	r3, r5
 801dbb0:	4298      	cmp	r0, r3
 801dbb2:	d1f1      	bne.n	801db98 <_malloc_trim_r+0x38>
 801dbb4:	4261      	negs	r1, r4
 801dbb6:	4630      	mov	r0, r6
 801dbb8:	f001 fe2c 	bl	801f814 <_sbrk_r>
 801dbbc:	3001      	adds	r0, #1
 801dbbe:	d110      	bne.n	801dbe2 <_malloc_trim_r+0x82>
 801dbc0:	2100      	movs	r1, #0
 801dbc2:	4630      	mov	r0, r6
 801dbc4:	f001 fe26 	bl	801f814 <_sbrk_r>
 801dbc8:	68ba      	ldr	r2, [r7, #8]
 801dbca:	1a83      	subs	r3, r0, r2
 801dbcc:	2b0f      	cmp	r3, #15
 801dbce:	dde3      	ble.n	801db98 <_malloc_trim_r+0x38>
 801dbd0:	490c      	ldr	r1, [pc, #48]	@ (801dc04 <_malloc_trim_r+0xa4>)
 801dbd2:	6809      	ldr	r1, [r1, #0]
 801dbd4:	1a40      	subs	r0, r0, r1
 801dbd6:	490c      	ldr	r1, [pc, #48]	@ (801dc08 <_malloc_trim_r+0xa8>)
 801dbd8:	f043 0301 	orr.w	r3, r3, #1
 801dbdc:	6008      	str	r0, [r1, #0]
 801dbde:	6053      	str	r3, [r2, #4]
 801dbe0:	e7da      	b.n	801db98 <_malloc_trim_r+0x38>
 801dbe2:	68bb      	ldr	r3, [r7, #8]
 801dbe4:	4a08      	ldr	r2, [pc, #32]	@ (801dc08 <_malloc_trim_r+0xa8>)
 801dbe6:	1b2d      	subs	r5, r5, r4
 801dbe8:	f045 0501 	orr.w	r5, r5, #1
 801dbec:	605d      	str	r5, [r3, #4]
 801dbee:	6813      	ldr	r3, [r2, #0]
 801dbf0:	4630      	mov	r0, r6
 801dbf2:	1b1b      	subs	r3, r3, r4
 801dbf4:	6013      	str	r3, [r2, #0]
 801dbf6:	f000 fb09 	bl	801e20c <__malloc_unlock>
 801dbfa:	2001      	movs	r0, #1
 801dbfc:	e7d0      	b.n	801dba0 <_malloc_trim_r+0x40>
 801dbfe:	bf00      	nop
 801dc00:	20000284 	.word	0x20000284
 801dc04:	2000027c 	.word	0x2000027c
 801dc08:	2000d494 	.word	0x2000d494

0801dc0c <_free_r>:
 801dc0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dc0e:	4604      	mov	r4, r0
 801dc10:	460f      	mov	r7, r1
 801dc12:	2900      	cmp	r1, #0
 801dc14:	f000 80b1 	beq.w	801dd7a <_free_r+0x16e>
 801dc18:	f000 faf2 	bl	801e200 <__malloc_lock>
 801dc1c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 801dc20:	4d56      	ldr	r5, [pc, #344]	@ (801dd7c <_free_r+0x170>)
 801dc22:	f022 0001 	bic.w	r0, r2, #1
 801dc26:	f1a7 0308 	sub.w	r3, r7, #8
 801dc2a:	eb03 0c00 	add.w	ip, r3, r0
 801dc2e:	68a9      	ldr	r1, [r5, #8]
 801dc30:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801dc34:	4561      	cmp	r1, ip
 801dc36:	f026 0603 	bic.w	r6, r6, #3
 801dc3a:	f002 0201 	and.w	r2, r2, #1
 801dc3e:	d11b      	bne.n	801dc78 <_free_r+0x6c>
 801dc40:	4406      	add	r6, r0
 801dc42:	b93a      	cbnz	r2, 801dc54 <_free_r+0x48>
 801dc44:	f857 2c08 	ldr.w	r2, [r7, #-8]
 801dc48:	1a9b      	subs	r3, r3, r2
 801dc4a:	4416      	add	r6, r2
 801dc4c:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 801dc50:	60ca      	str	r2, [r1, #12]
 801dc52:	6091      	str	r1, [r2, #8]
 801dc54:	f046 0201 	orr.w	r2, r6, #1
 801dc58:	605a      	str	r2, [r3, #4]
 801dc5a:	60ab      	str	r3, [r5, #8]
 801dc5c:	4b48      	ldr	r3, [pc, #288]	@ (801dd80 <_free_r+0x174>)
 801dc5e:	681b      	ldr	r3, [r3, #0]
 801dc60:	42b3      	cmp	r3, r6
 801dc62:	d804      	bhi.n	801dc6e <_free_r+0x62>
 801dc64:	4b47      	ldr	r3, [pc, #284]	@ (801dd84 <_free_r+0x178>)
 801dc66:	4620      	mov	r0, r4
 801dc68:	6819      	ldr	r1, [r3, #0]
 801dc6a:	f7ff ff79 	bl	801db60 <_malloc_trim_r>
 801dc6e:	4620      	mov	r0, r4
 801dc70:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801dc74:	f000 baca 	b.w	801e20c <__malloc_unlock>
 801dc78:	f8cc 6004 	str.w	r6, [ip, #4]
 801dc7c:	2a00      	cmp	r2, #0
 801dc7e:	d138      	bne.n	801dcf2 <_free_r+0xe6>
 801dc80:	f857 1c08 	ldr.w	r1, [r7, #-8]
 801dc84:	1a5b      	subs	r3, r3, r1
 801dc86:	4408      	add	r0, r1
 801dc88:	6899      	ldr	r1, [r3, #8]
 801dc8a:	f105 0708 	add.w	r7, r5, #8
 801dc8e:	42b9      	cmp	r1, r7
 801dc90:	d031      	beq.n	801dcf6 <_free_r+0xea>
 801dc92:	68df      	ldr	r7, [r3, #12]
 801dc94:	60cf      	str	r7, [r1, #12]
 801dc96:	60b9      	str	r1, [r7, #8]
 801dc98:	eb0c 0106 	add.w	r1, ip, r6
 801dc9c:	6849      	ldr	r1, [r1, #4]
 801dc9e:	07c9      	lsls	r1, r1, #31
 801dca0:	d40b      	bmi.n	801dcba <_free_r+0xae>
 801dca2:	f8dc 1008 	ldr.w	r1, [ip, #8]
 801dca6:	4430      	add	r0, r6
 801dca8:	bb3a      	cbnz	r2, 801dcfa <_free_r+0xee>
 801dcaa:	4e37      	ldr	r6, [pc, #220]	@ (801dd88 <_free_r+0x17c>)
 801dcac:	42b1      	cmp	r1, r6
 801dcae:	d124      	bne.n	801dcfa <_free_r+0xee>
 801dcb0:	e9c5 3304 	strd	r3, r3, [r5, #16]
 801dcb4:	e9c3 1102 	strd	r1, r1, [r3, #8]
 801dcb8:	2201      	movs	r2, #1
 801dcba:	f040 0101 	orr.w	r1, r0, #1
 801dcbe:	6059      	str	r1, [r3, #4]
 801dcc0:	5018      	str	r0, [r3, r0]
 801dcc2:	2a00      	cmp	r2, #0
 801dcc4:	d1d3      	bne.n	801dc6e <_free_r+0x62>
 801dcc6:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 801dcca:	d21b      	bcs.n	801dd04 <_free_r+0xf8>
 801dccc:	08c2      	lsrs	r2, r0, #3
 801dcce:	2101      	movs	r1, #1
 801dcd0:	0940      	lsrs	r0, r0, #5
 801dcd2:	4081      	lsls	r1, r0
 801dcd4:	6868      	ldr	r0, [r5, #4]
 801dcd6:	3201      	adds	r2, #1
 801dcd8:	4301      	orrs	r1, r0
 801dcda:	6069      	str	r1, [r5, #4]
 801dcdc:	f855 0032 	ldr.w	r0, [r5, r2, lsl #3]
 801dce0:	eb05 01c2 	add.w	r1, r5, r2, lsl #3
 801dce4:	3908      	subs	r1, #8
 801dce6:	e9c3 0102 	strd	r0, r1, [r3, #8]
 801dcea:	f845 3032 	str.w	r3, [r5, r2, lsl #3]
 801dcee:	60c3      	str	r3, [r0, #12]
 801dcf0:	e7bd      	b.n	801dc6e <_free_r+0x62>
 801dcf2:	2200      	movs	r2, #0
 801dcf4:	e7d0      	b.n	801dc98 <_free_r+0x8c>
 801dcf6:	2201      	movs	r2, #1
 801dcf8:	e7ce      	b.n	801dc98 <_free_r+0x8c>
 801dcfa:	f8dc 600c 	ldr.w	r6, [ip, #12]
 801dcfe:	60ce      	str	r6, [r1, #12]
 801dd00:	60b1      	str	r1, [r6, #8]
 801dd02:	e7da      	b.n	801dcba <_free_r+0xae>
 801dd04:	f5b0 6f20 	cmp.w	r0, #2560	@ 0xa00
 801dd08:	ea4f 2250 	mov.w	r2, r0, lsr #9
 801dd0c:	d214      	bcs.n	801dd38 <_free_r+0x12c>
 801dd0e:	0982      	lsrs	r2, r0, #6
 801dd10:	3238      	adds	r2, #56	@ 0x38
 801dd12:	1c51      	adds	r1, r2, #1
 801dd14:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 801dd18:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 801dd1c:	428e      	cmp	r6, r1
 801dd1e:	d125      	bne.n	801dd6c <_free_r+0x160>
 801dd20:	2001      	movs	r0, #1
 801dd22:	1092      	asrs	r2, r2, #2
 801dd24:	fa00 f202 	lsl.w	r2, r0, r2
 801dd28:	6868      	ldr	r0, [r5, #4]
 801dd2a:	4302      	orrs	r2, r0
 801dd2c:	606a      	str	r2, [r5, #4]
 801dd2e:	e9c3 1602 	strd	r1, r6, [r3, #8]
 801dd32:	60b3      	str	r3, [r6, #8]
 801dd34:	60cb      	str	r3, [r1, #12]
 801dd36:	e79a      	b.n	801dc6e <_free_r+0x62>
 801dd38:	2a14      	cmp	r2, #20
 801dd3a:	d801      	bhi.n	801dd40 <_free_r+0x134>
 801dd3c:	325b      	adds	r2, #91	@ 0x5b
 801dd3e:	e7e8      	b.n	801dd12 <_free_r+0x106>
 801dd40:	2a54      	cmp	r2, #84	@ 0x54
 801dd42:	d802      	bhi.n	801dd4a <_free_r+0x13e>
 801dd44:	0b02      	lsrs	r2, r0, #12
 801dd46:	326e      	adds	r2, #110	@ 0x6e
 801dd48:	e7e3      	b.n	801dd12 <_free_r+0x106>
 801dd4a:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801dd4e:	d802      	bhi.n	801dd56 <_free_r+0x14a>
 801dd50:	0bc2      	lsrs	r2, r0, #15
 801dd52:	3277      	adds	r2, #119	@ 0x77
 801dd54:	e7dd      	b.n	801dd12 <_free_r+0x106>
 801dd56:	f240 5154 	movw	r1, #1364	@ 0x554
 801dd5a:	428a      	cmp	r2, r1
 801dd5c:	bf9a      	itte	ls
 801dd5e:	0c82      	lsrls	r2, r0, #18
 801dd60:	327c      	addls	r2, #124	@ 0x7c
 801dd62:	227e      	movhi	r2, #126	@ 0x7e
 801dd64:	e7d5      	b.n	801dd12 <_free_r+0x106>
 801dd66:	6889      	ldr	r1, [r1, #8]
 801dd68:	428e      	cmp	r6, r1
 801dd6a:	d004      	beq.n	801dd76 <_free_r+0x16a>
 801dd6c:	684a      	ldr	r2, [r1, #4]
 801dd6e:	f022 0203 	bic.w	r2, r2, #3
 801dd72:	4282      	cmp	r2, r0
 801dd74:	d8f7      	bhi.n	801dd66 <_free_r+0x15a>
 801dd76:	68ce      	ldr	r6, [r1, #12]
 801dd78:	e7d9      	b.n	801dd2e <_free_r+0x122>
 801dd7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dd7c:	20000284 	.word	0x20000284
 801dd80:	20000280 	.word	0x20000280
 801dd84:	2000d4c4 	.word	0x2000d4c4
 801dd88:	2000028c 	.word	0x2000028c

0801dd8c <_malloc_r>:
 801dd8c:	f101 030b 	add.w	r3, r1, #11
 801dd90:	2b16      	cmp	r3, #22
 801dd92:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd96:	4605      	mov	r5, r0
 801dd98:	d906      	bls.n	801dda8 <_malloc_r+0x1c>
 801dd9a:	f033 0707 	bics.w	r7, r3, #7
 801dd9e:	d504      	bpl.n	801ddaa <_malloc_r+0x1e>
 801dda0:	230c      	movs	r3, #12
 801dda2:	602b      	str	r3, [r5, #0]
 801dda4:	2400      	movs	r4, #0
 801dda6:	e1a3      	b.n	801e0f0 <_malloc_r+0x364>
 801dda8:	2710      	movs	r7, #16
 801ddaa:	42b9      	cmp	r1, r7
 801ddac:	d8f8      	bhi.n	801dda0 <_malloc_r+0x14>
 801ddae:	4628      	mov	r0, r5
 801ddb0:	f000 fa26 	bl	801e200 <__malloc_lock>
 801ddb4:	f5b7 7ffc 	cmp.w	r7, #504	@ 0x1f8
 801ddb8:	4eaf      	ldr	r6, [pc, #700]	@ (801e078 <_malloc_r+0x2ec>)
 801ddba:	d237      	bcs.n	801de2c <_malloc_r+0xa0>
 801ddbc:	f107 0208 	add.w	r2, r7, #8
 801ddc0:	4432      	add	r2, r6
 801ddc2:	f1a2 0108 	sub.w	r1, r2, #8
 801ddc6:	6854      	ldr	r4, [r2, #4]
 801ddc8:	428c      	cmp	r4, r1
 801ddca:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 801ddce:	d102      	bne.n	801ddd6 <_malloc_r+0x4a>
 801ddd0:	68d4      	ldr	r4, [r2, #12]
 801ddd2:	42a2      	cmp	r2, r4
 801ddd4:	d010      	beq.n	801ddf8 <_malloc_r+0x6c>
 801ddd6:	6863      	ldr	r3, [r4, #4]
 801ddd8:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 801dddc:	f023 0303 	bic.w	r3, r3, #3
 801dde0:	60ca      	str	r2, [r1, #12]
 801dde2:	4423      	add	r3, r4
 801dde4:	6091      	str	r1, [r2, #8]
 801dde6:	685a      	ldr	r2, [r3, #4]
 801dde8:	f042 0201 	orr.w	r2, r2, #1
 801ddec:	605a      	str	r2, [r3, #4]
 801ddee:	4628      	mov	r0, r5
 801ddf0:	f000 fa0c 	bl	801e20c <__malloc_unlock>
 801ddf4:	3408      	adds	r4, #8
 801ddf6:	e17b      	b.n	801e0f0 <_malloc_r+0x364>
 801ddf8:	3302      	adds	r3, #2
 801ddfa:	6934      	ldr	r4, [r6, #16]
 801ddfc:	499f      	ldr	r1, [pc, #636]	@ (801e07c <_malloc_r+0x2f0>)
 801ddfe:	428c      	cmp	r4, r1
 801de00:	d077      	beq.n	801def2 <_malloc_r+0x166>
 801de02:	6862      	ldr	r2, [r4, #4]
 801de04:	f022 0c03 	bic.w	ip, r2, #3
 801de08:	ebac 0007 	sub.w	r0, ip, r7
 801de0c:	280f      	cmp	r0, #15
 801de0e:	dd48      	ble.n	801dea2 <_malloc_r+0x116>
 801de10:	19e2      	adds	r2, r4, r7
 801de12:	f040 0301 	orr.w	r3, r0, #1
 801de16:	f047 0701 	orr.w	r7, r7, #1
 801de1a:	6067      	str	r7, [r4, #4]
 801de1c:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801de20:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801de24:	6053      	str	r3, [r2, #4]
 801de26:	f844 000c 	str.w	r0, [r4, ip]
 801de2a:	e7e0      	b.n	801ddee <_malloc_r+0x62>
 801de2c:	0a7b      	lsrs	r3, r7, #9
 801de2e:	d02a      	beq.n	801de86 <_malloc_r+0xfa>
 801de30:	2b04      	cmp	r3, #4
 801de32:	d812      	bhi.n	801de5a <_malloc_r+0xce>
 801de34:	09bb      	lsrs	r3, r7, #6
 801de36:	3338      	adds	r3, #56	@ 0x38
 801de38:	1c5a      	adds	r2, r3, #1
 801de3a:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 801de3e:	f1a2 0c08 	sub.w	ip, r2, #8
 801de42:	6854      	ldr	r4, [r2, #4]
 801de44:	4564      	cmp	r4, ip
 801de46:	d006      	beq.n	801de56 <_malloc_r+0xca>
 801de48:	6862      	ldr	r2, [r4, #4]
 801de4a:	f022 0203 	bic.w	r2, r2, #3
 801de4e:	1bd0      	subs	r0, r2, r7
 801de50:	280f      	cmp	r0, #15
 801de52:	dd1c      	ble.n	801de8e <_malloc_r+0x102>
 801de54:	3b01      	subs	r3, #1
 801de56:	3301      	adds	r3, #1
 801de58:	e7cf      	b.n	801ddfa <_malloc_r+0x6e>
 801de5a:	2b14      	cmp	r3, #20
 801de5c:	d801      	bhi.n	801de62 <_malloc_r+0xd6>
 801de5e:	335b      	adds	r3, #91	@ 0x5b
 801de60:	e7ea      	b.n	801de38 <_malloc_r+0xac>
 801de62:	2b54      	cmp	r3, #84	@ 0x54
 801de64:	d802      	bhi.n	801de6c <_malloc_r+0xe0>
 801de66:	0b3b      	lsrs	r3, r7, #12
 801de68:	336e      	adds	r3, #110	@ 0x6e
 801de6a:	e7e5      	b.n	801de38 <_malloc_r+0xac>
 801de6c:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
 801de70:	d802      	bhi.n	801de78 <_malloc_r+0xec>
 801de72:	0bfb      	lsrs	r3, r7, #15
 801de74:	3377      	adds	r3, #119	@ 0x77
 801de76:	e7df      	b.n	801de38 <_malloc_r+0xac>
 801de78:	f240 5254 	movw	r2, #1364	@ 0x554
 801de7c:	4293      	cmp	r3, r2
 801de7e:	d804      	bhi.n	801de8a <_malloc_r+0xfe>
 801de80:	0cbb      	lsrs	r3, r7, #18
 801de82:	337c      	adds	r3, #124	@ 0x7c
 801de84:	e7d8      	b.n	801de38 <_malloc_r+0xac>
 801de86:	233f      	movs	r3, #63	@ 0x3f
 801de88:	e7d6      	b.n	801de38 <_malloc_r+0xac>
 801de8a:	237e      	movs	r3, #126	@ 0x7e
 801de8c:	e7d4      	b.n	801de38 <_malloc_r+0xac>
 801de8e:	2800      	cmp	r0, #0
 801de90:	68e1      	ldr	r1, [r4, #12]
 801de92:	db04      	blt.n	801de9e <_malloc_r+0x112>
 801de94:	68a3      	ldr	r3, [r4, #8]
 801de96:	60d9      	str	r1, [r3, #12]
 801de98:	608b      	str	r3, [r1, #8]
 801de9a:	18a3      	adds	r3, r4, r2
 801de9c:	e7a3      	b.n	801dde6 <_malloc_r+0x5a>
 801de9e:	460c      	mov	r4, r1
 801dea0:	e7d0      	b.n	801de44 <_malloc_r+0xb8>
 801dea2:	2800      	cmp	r0, #0
 801dea4:	e9c6 1104 	strd	r1, r1, [r6, #16]
 801dea8:	db07      	blt.n	801deba <_malloc_r+0x12e>
 801deaa:	44a4      	add	ip, r4
 801deac:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801deb0:	f043 0301 	orr.w	r3, r3, #1
 801deb4:	f8cc 3004 	str.w	r3, [ip, #4]
 801deb8:	e799      	b.n	801ddee <_malloc_r+0x62>
 801deba:	f5bc 7f00 	cmp.w	ip, #512	@ 0x200
 801debe:	6870      	ldr	r0, [r6, #4]
 801dec0:	f080 8095 	bcs.w	801dfee <_malloc_r+0x262>
 801dec4:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 801dec8:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 801decc:	f04f 0c01 	mov.w	ip, #1
 801ded0:	3201      	adds	r2, #1
 801ded2:	fa0c fc0e 	lsl.w	ip, ip, lr
 801ded6:	ea4c 0000 	orr.w	r0, ip, r0
 801deda:	6070      	str	r0, [r6, #4]
 801dedc:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 801dee0:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 801dee4:	3808      	subs	r0, #8
 801dee6:	e9c4 c002 	strd	ip, r0, [r4, #8]
 801deea:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 801deee:	f8cc 400c 	str.w	r4, [ip, #12]
 801def2:	1098      	asrs	r0, r3, #2
 801def4:	2201      	movs	r2, #1
 801def6:	4082      	lsls	r2, r0
 801def8:	6870      	ldr	r0, [r6, #4]
 801defa:	4290      	cmp	r0, r2
 801defc:	d326      	bcc.n	801df4c <_malloc_r+0x1c0>
 801defe:	4210      	tst	r0, r2
 801df00:	d106      	bne.n	801df10 <_malloc_r+0x184>
 801df02:	f023 0303 	bic.w	r3, r3, #3
 801df06:	0052      	lsls	r2, r2, #1
 801df08:	4210      	tst	r0, r2
 801df0a:	f103 0304 	add.w	r3, r3, #4
 801df0e:	d0fa      	beq.n	801df06 <_malloc_r+0x17a>
 801df10:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 801df14:	46c1      	mov	r9, r8
 801df16:	469e      	mov	lr, r3
 801df18:	f8d9 400c 	ldr.w	r4, [r9, #12]
 801df1c:	454c      	cmp	r4, r9
 801df1e:	f040 80b9 	bne.w	801e094 <_malloc_r+0x308>
 801df22:	f10e 0e01 	add.w	lr, lr, #1
 801df26:	f01e 0f03 	tst.w	lr, #3
 801df2a:	f109 0908 	add.w	r9, r9, #8
 801df2e:	d1f3      	bne.n	801df18 <_malloc_r+0x18c>
 801df30:	0798      	lsls	r0, r3, #30
 801df32:	f040 80e3 	bne.w	801e0fc <_malloc_r+0x370>
 801df36:	6873      	ldr	r3, [r6, #4]
 801df38:	ea23 0302 	bic.w	r3, r3, r2
 801df3c:	6073      	str	r3, [r6, #4]
 801df3e:	6870      	ldr	r0, [r6, #4]
 801df40:	0052      	lsls	r2, r2, #1
 801df42:	4290      	cmp	r0, r2
 801df44:	d302      	bcc.n	801df4c <_malloc_r+0x1c0>
 801df46:	2a00      	cmp	r2, #0
 801df48:	f040 80e5 	bne.w	801e116 <_malloc_r+0x38a>
 801df4c:	f8d6 a008 	ldr.w	sl, [r6, #8]
 801df50:	f8da 3004 	ldr.w	r3, [sl, #4]
 801df54:	f023 0903 	bic.w	r9, r3, #3
 801df58:	45b9      	cmp	r9, r7
 801df5a:	d304      	bcc.n	801df66 <_malloc_r+0x1da>
 801df5c:	eba9 0207 	sub.w	r2, r9, r7
 801df60:	2a0f      	cmp	r2, #15
 801df62:	f300 8141 	bgt.w	801e1e8 <_malloc_r+0x45c>
 801df66:	4b46      	ldr	r3, [pc, #280]	@ (801e080 <_malloc_r+0x2f4>)
 801df68:	6819      	ldr	r1, [r3, #0]
 801df6a:	3110      	adds	r1, #16
 801df6c:	4439      	add	r1, r7
 801df6e:	2008      	movs	r0, #8
 801df70:	9101      	str	r1, [sp, #4]
 801df72:	f001 fc73 	bl	801f85c <sysconf>
 801df76:	4a43      	ldr	r2, [pc, #268]	@ (801e084 <_malloc_r+0x2f8>)
 801df78:	9901      	ldr	r1, [sp, #4]
 801df7a:	6813      	ldr	r3, [r2, #0]
 801df7c:	3301      	adds	r3, #1
 801df7e:	bf1f      	itttt	ne
 801df80:	f101 31ff 	addne.w	r1, r1, #4294967295
 801df84:	1809      	addne	r1, r1, r0
 801df86:	4243      	negne	r3, r0
 801df88:	4019      	andne	r1, r3
 801df8a:	4680      	mov	r8, r0
 801df8c:	4628      	mov	r0, r5
 801df8e:	9101      	str	r1, [sp, #4]
 801df90:	f001 fc40 	bl	801f814 <_sbrk_r>
 801df94:	1c42      	adds	r2, r0, #1
 801df96:	eb0a 0b09 	add.w	fp, sl, r9
 801df9a:	4604      	mov	r4, r0
 801df9c:	f000 80f7 	beq.w	801e18e <_malloc_r+0x402>
 801dfa0:	4583      	cmp	fp, r0
 801dfa2:	9901      	ldr	r1, [sp, #4]
 801dfa4:	4a37      	ldr	r2, [pc, #220]	@ (801e084 <_malloc_r+0x2f8>)
 801dfa6:	d902      	bls.n	801dfae <_malloc_r+0x222>
 801dfa8:	45b2      	cmp	sl, r6
 801dfaa:	f040 80f0 	bne.w	801e18e <_malloc_r+0x402>
 801dfae:	4b36      	ldr	r3, [pc, #216]	@ (801e088 <_malloc_r+0x2fc>)
 801dfb0:	6818      	ldr	r0, [r3, #0]
 801dfb2:	45a3      	cmp	fp, r4
 801dfb4:	eb00 0e01 	add.w	lr, r0, r1
 801dfb8:	f8c3 e000 	str.w	lr, [r3]
 801dfbc:	f108 3cff 	add.w	ip, r8, #4294967295
 801dfc0:	f040 80ab 	bne.w	801e11a <_malloc_r+0x38e>
 801dfc4:	ea1b 0f0c 	tst.w	fp, ip
 801dfc8:	f040 80a7 	bne.w	801e11a <_malloc_r+0x38e>
 801dfcc:	68b2      	ldr	r2, [r6, #8]
 801dfce:	4449      	add	r1, r9
 801dfd0:	f041 0101 	orr.w	r1, r1, #1
 801dfd4:	6051      	str	r1, [r2, #4]
 801dfd6:	4a2d      	ldr	r2, [pc, #180]	@ (801e08c <_malloc_r+0x300>)
 801dfd8:	681b      	ldr	r3, [r3, #0]
 801dfda:	6811      	ldr	r1, [r2, #0]
 801dfdc:	428b      	cmp	r3, r1
 801dfde:	bf88      	it	hi
 801dfe0:	6013      	strhi	r3, [r2, #0]
 801dfe2:	4a2b      	ldr	r2, [pc, #172]	@ (801e090 <_malloc_r+0x304>)
 801dfe4:	6811      	ldr	r1, [r2, #0]
 801dfe6:	428b      	cmp	r3, r1
 801dfe8:	bf88      	it	hi
 801dfea:	6013      	strhi	r3, [r2, #0]
 801dfec:	e0cf      	b.n	801e18e <_malloc_r+0x402>
 801dfee:	f5bc 6f20 	cmp.w	ip, #2560	@ 0xa00
 801dff2:	ea4f 225c 	mov.w	r2, ip, lsr #9
 801dff6:	d218      	bcs.n	801e02a <_malloc_r+0x29e>
 801dff8:	ea4f 129c 	mov.w	r2, ip, lsr #6
 801dffc:	3238      	adds	r2, #56	@ 0x38
 801dffe:	f102 0e01 	add.w	lr, r2, #1
 801e002:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 801e006:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 801e00a:	45f0      	cmp	r8, lr
 801e00c:	d12b      	bne.n	801e066 <_malloc_r+0x2da>
 801e00e:	1092      	asrs	r2, r2, #2
 801e010:	f04f 0c01 	mov.w	ip, #1
 801e014:	fa0c f202 	lsl.w	r2, ip, r2
 801e018:	4302      	orrs	r2, r0
 801e01a:	6072      	str	r2, [r6, #4]
 801e01c:	e9c4 e802 	strd	lr, r8, [r4, #8]
 801e020:	f8c8 4008 	str.w	r4, [r8, #8]
 801e024:	f8ce 400c 	str.w	r4, [lr, #12]
 801e028:	e763      	b.n	801def2 <_malloc_r+0x166>
 801e02a:	2a14      	cmp	r2, #20
 801e02c:	d801      	bhi.n	801e032 <_malloc_r+0x2a6>
 801e02e:	325b      	adds	r2, #91	@ 0x5b
 801e030:	e7e5      	b.n	801dffe <_malloc_r+0x272>
 801e032:	2a54      	cmp	r2, #84	@ 0x54
 801e034:	d803      	bhi.n	801e03e <_malloc_r+0x2b2>
 801e036:	ea4f 321c 	mov.w	r2, ip, lsr #12
 801e03a:	326e      	adds	r2, #110	@ 0x6e
 801e03c:	e7df      	b.n	801dffe <_malloc_r+0x272>
 801e03e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
 801e042:	d803      	bhi.n	801e04c <_malloc_r+0x2c0>
 801e044:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 801e048:	3277      	adds	r2, #119	@ 0x77
 801e04a:	e7d8      	b.n	801dffe <_malloc_r+0x272>
 801e04c:	f240 5e54 	movw	lr, #1364	@ 0x554
 801e050:	4572      	cmp	r2, lr
 801e052:	bf9a      	itte	ls
 801e054:	ea4f 429c 	movls.w	r2, ip, lsr #18
 801e058:	327c      	addls	r2, #124	@ 0x7c
 801e05a:	227e      	movhi	r2, #126	@ 0x7e
 801e05c:	e7cf      	b.n	801dffe <_malloc_r+0x272>
 801e05e:	f8de e008 	ldr.w	lr, [lr, #8]
 801e062:	45f0      	cmp	r8, lr
 801e064:	d005      	beq.n	801e072 <_malloc_r+0x2e6>
 801e066:	f8de 2004 	ldr.w	r2, [lr, #4]
 801e06a:	f022 0203 	bic.w	r2, r2, #3
 801e06e:	4562      	cmp	r2, ip
 801e070:	d8f5      	bhi.n	801e05e <_malloc_r+0x2d2>
 801e072:	f8de 800c 	ldr.w	r8, [lr, #12]
 801e076:	e7d1      	b.n	801e01c <_malloc_r+0x290>
 801e078:	20000284 	.word	0x20000284
 801e07c:	2000028c 	.word	0x2000028c
 801e080:	2000d4c4 	.word	0x2000d4c4
 801e084:	2000027c 	.word	0x2000027c
 801e088:	2000d494 	.word	0x2000d494
 801e08c:	2000d4c0 	.word	0x2000d4c0
 801e090:	2000d4bc 	.word	0x2000d4bc
 801e094:	6860      	ldr	r0, [r4, #4]
 801e096:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 801e09a:	f020 0003 	bic.w	r0, r0, #3
 801e09e:	eba0 0a07 	sub.w	sl, r0, r7
 801e0a2:	f1ba 0f0f 	cmp.w	sl, #15
 801e0a6:	dd12      	ble.n	801e0ce <_malloc_r+0x342>
 801e0a8:	68a3      	ldr	r3, [r4, #8]
 801e0aa:	19e2      	adds	r2, r4, r7
 801e0ac:	f047 0701 	orr.w	r7, r7, #1
 801e0b0:	6067      	str	r7, [r4, #4]
 801e0b2:	f8c3 c00c 	str.w	ip, [r3, #12]
 801e0b6:	f8cc 3008 	str.w	r3, [ip, #8]
 801e0ba:	f04a 0301 	orr.w	r3, sl, #1
 801e0be:	e9c6 2204 	strd	r2, r2, [r6, #16]
 801e0c2:	e9c2 1102 	strd	r1, r1, [r2, #8]
 801e0c6:	6053      	str	r3, [r2, #4]
 801e0c8:	f844 a000 	str.w	sl, [r4, r0]
 801e0cc:	e68f      	b.n	801ddee <_malloc_r+0x62>
 801e0ce:	f1ba 0f00 	cmp.w	sl, #0
 801e0d2:	db11      	blt.n	801e0f8 <_malloc_r+0x36c>
 801e0d4:	4420      	add	r0, r4
 801e0d6:	6843      	ldr	r3, [r0, #4]
 801e0d8:	f043 0301 	orr.w	r3, r3, #1
 801e0dc:	6043      	str	r3, [r0, #4]
 801e0de:	f854 3f08 	ldr.w	r3, [r4, #8]!
 801e0e2:	4628      	mov	r0, r5
 801e0e4:	f8c3 c00c 	str.w	ip, [r3, #12]
 801e0e8:	f8cc 3008 	str.w	r3, [ip, #8]
 801e0ec:	f000 f88e 	bl	801e20c <__malloc_unlock>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	b003      	add	sp, #12
 801e0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e0f8:	4664      	mov	r4, ip
 801e0fa:	e70f      	b.n	801df1c <_malloc_r+0x190>
 801e0fc:	f858 0908 	ldr.w	r0, [r8], #-8
 801e100:	4540      	cmp	r0, r8
 801e102:	f103 33ff 	add.w	r3, r3, #4294967295
 801e106:	f43f af13 	beq.w	801df30 <_malloc_r+0x1a4>
 801e10a:	e718      	b.n	801df3e <_malloc_r+0x1b2>
 801e10c:	3304      	adds	r3, #4
 801e10e:	0052      	lsls	r2, r2, #1
 801e110:	4210      	tst	r0, r2
 801e112:	d0fb      	beq.n	801e10c <_malloc_r+0x380>
 801e114:	e6fc      	b.n	801df10 <_malloc_r+0x184>
 801e116:	4673      	mov	r3, lr
 801e118:	e7fa      	b.n	801e110 <_malloc_r+0x384>
 801e11a:	6810      	ldr	r0, [r2, #0]
 801e11c:	3001      	adds	r0, #1
 801e11e:	bf1b      	ittet	ne
 801e120:	eba4 0b0b 	subne.w	fp, r4, fp
 801e124:	eb0b 020e 	addne.w	r2, fp, lr
 801e128:	6014      	streq	r4, [r2, #0]
 801e12a:	601a      	strne	r2, [r3, #0]
 801e12c:	f014 0b07 	ands.w	fp, r4, #7
 801e130:	bf1a      	itte	ne
 801e132:	f1cb 0008 	rsbne	r0, fp, #8
 801e136:	1824      	addne	r4, r4, r0
 801e138:	4658      	moveq	r0, fp
 801e13a:	1862      	adds	r2, r4, r1
 801e13c:	ea02 010c 	and.w	r1, r2, ip
 801e140:	4480      	add	r8, r0
 801e142:	eba8 0801 	sub.w	r8, r8, r1
 801e146:	ea08 080c 	and.w	r8, r8, ip
 801e14a:	4641      	mov	r1, r8
 801e14c:	4628      	mov	r0, r5
 801e14e:	9201      	str	r2, [sp, #4]
 801e150:	f001 fb60 	bl	801f814 <_sbrk_r>
 801e154:	1c43      	adds	r3, r0, #1
 801e156:	9a01      	ldr	r2, [sp, #4]
 801e158:	4b28      	ldr	r3, [pc, #160]	@ (801e1fc <_malloc_r+0x470>)
 801e15a:	d107      	bne.n	801e16c <_malloc_r+0x3e0>
 801e15c:	f1bb 0f00 	cmp.w	fp, #0
 801e160:	d023      	beq.n	801e1aa <_malloc_r+0x41e>
 801e162:	f1ab 0008 	sub.w	r0, fp, #8
 801e166:	4410      	add	r0, r2
 801e168:	f04f 0800 	mov.w	r8, #0
 801e16c:	681a      	ldr	r2, [r3, #0]
 801e16e:	60b4      	str	r4, [r6, #8]
 801e170:	1b00      	subs	r0, r0, r4
 801e172:	4440      	add	r0, r8
 801e174:	4442      	add	r2, r8
 801e176:	f040 0001 	orr.w	r0, r0, #1
 801e17a:	45b2      	cmp	sl, r6
 801e17c:	601a      	str	r2, [r3, #0]
 801e17e:	6060      	str	r0, [r4, #4]
 801e180:	f43f af29 	beq.w	801dfd6 <_malloc_r+0x24a>
 801e184:	f1b9 0f0f 	cmp.w	r9, #15
 801e188:	d812      	bhi.n	801e1b0 <_malloc_r+0x424>
 801e18a:	2301      	movs	r3, #1
 801e18c:	6063      	str	r3, [r4, #4]
 801e18e:	68b3      	ldr	r3, [r6, #8]
 801e190:	685b      	ldr	r3, [r3, #4]
 801e192:	f023 0303 	bic.w	r3, r3, #3
 801e196:	42bb      	cmp	r3, r7
 801e198:	eba3 0207 	sub.w	r2, r3, r7
 801e19c:	d301      	bcc.n	801e1a2 <_malloc_r+0x416>
 801e19e:	2a0f      	cmp	r2, #15
 801e1a0:	dc22      	bgt.n	801e1e8 <_malloc_r+0x45c>
 801e1a2:	4628      	mov	r0, r5
 801e1a4:	f000 f832 	bl	801e20c <__malloc_unlock>
 801e1a8:	e5fc      	b.n	801dda4 <_malloc_r+0x18>
 801e1aa:	4610      	mov	r0, r2
 801e1ac:	46d8      	mov	r8, fp
 801e1ae:	e7dd      	b.n	801e16c <_malloc_r+0x3e0>
 801e1b0:	f8da 2004 	ldr.w	r2, [sl, #4]
 801e1b4:	f1a9 090c 	sub.w	r9, r9, #12
 801e1b8:	f029 0907 	bic.w	r9, r9, #7
 801e1bc:	f002 0201 	and.w	r2, r2, #1
 801e1c0:	ea42 0209 	orr.w	r2, r2, r9
 801e1c4:	f8ca 2004 	str.w	r2, [sl, #4]
 801e1c8:	2105      	movs	r1, #5
 801e1ca:	eb0a 0209 	add.w	r2, sl, r9
 801e1ce:	f1b9 0f0f 	cmp.w	r9, #15
 801e1d2:	e9c2 1101 	strd	r1, r1, [r2, #4]
 801e1d6:	f67f aefe 	bls.w	801dfd6 <_malloc_r+0x24a>
 801e1da:	f10a 0108 	add.w	r1, sl, #8
 801e1de:	4628      	mov	r0, r5
 801e1e0:	f7ff fd14 	bl	801dc0c <_free_r>
 801e1e4:	4b05      	ldr	r3, [pc, #20]	@ (801e1fc <_malloc_r+0x470>)
 801e1e6:	e6f6      	b.n	801dfd6 <_malloc_r+0x24a>
 801e1e8:	68b4      	ldr	r4, [r6, #8]
 801e1ea:	f047 0301 	orr.w	r3, r7, #1
 801e1ee:	4427      	add	r7, r4
 801e1f0:	f042 0201 	orr.w	r2, r2, #1
 801e1f4:	6063      	str	r3, [r4, #4]
 801e1f6:	60b7      	str	r7, [r6, #8]
 801e1f8:	607a      	str	r2, [r7, #4]
 801e1fa:	e5f8      	b.n	801ddee <_malloc_r+0x62>
 801e1fc:	2000d494 	.word	0x2000d494

0801e200 <__malloc_lock>:
 801e200:	4801      	ldr	r0, [pc, #4]	@ (801e208 <__malloc_lock+0x8>)
 801e202:	f7ff bc8d 	b.w	801db20 <__retarget_lock_acquire_recursive>
 801e206:	bf00      	nop
 801e208:	2000d48c 	.word	0x2000d48c

0801e20c <__malloc_unlock>:
 801e20c:	4801      	ldr	r0, [pc, #4]	@ (801e214 <__malloc_unlock+0x8>)
 801e20e:	f7ff bc88 	b.w	801db22 <__retarget_lock_release_recursive>
 801e212:	bf00      	nop
 801e214:	2000d48c 	.word	0x2000d48c

0801e218 <_svfprintf_r>:
 801e218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e21c:	b0d3      	sub	sp, #332	@ 0x14c
 801e21e:	468b      	mov	fp, r1
 801e220:	4691      	mov	r9, r2
 801e222:	461e      	mov	r6, r3
 801e224:	9003      	str	r0, [sp, #12]
 801e226:	f001 faf1 	bl	801f80c <_localeconv_r>
 801e22a:	6803      	ldr	r3, [r0, #0]
 801e22c:	9316      	str	r3, [sp, #88]	@ 0x58
 801e22e:	4618      	mov	r0, r3
 801e230:	f7e1 ffce 	bl	80001d0 <strlen>
 801e234:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801e238:	900d      	str	r0, [sp, #52]	@ 0x34
 801e23a:	061b      	lsls	r3, r3, #24
 801e23c:	d515      	bpl.n	801e26a <_svfprintf_r+0x52>
 801e23e:	f8db 3010 	ldr.w	r3, [fp, #16]
 801e242:	b993      	cbnz	r3, 801e26a <_svfprintf_r+0x52>
 801e244:	9803      	ldr	r0, [sp, #12]
 801e246:	2140      	movs	r1, #64	@ 0x40
 801e248:	f7ff fda0 	bl	801dd8c <_malloc_r>
 801e24c:	f8cb 0000 	str.w	r0, [fp]
 801e250:	f8cb 0010 	str.w	r0, [fp, #16]
 801e254:	b930      	cbnz	r0, 801e264 <_svfprintf_r+0x4c>
 801e256:	9a03      	ldr	r2, [sp, #12]
 801e258:	230c      	movs	r3, #12
 801e25a:	6013      	str	r3, [r2, #0]
 801e25c:	f04f 33ff 	mov.w	r3, #4294967295
 801e260:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e262:	e1f7      	b.n	801e654 <_svfprintf_r+0x43c>
 801e264:	2340      	movs	r3, #64	@ 0x40
 801e266:	f8cb 3014 	str.w	r3, [fp, #20]
 801e26a:	ed9f 7b93 	vldr	d7, [pc, #588]	@ 801e4b8 <_svfprintf_r+0x2a0>
 801e26e:	2300      	movs	r3, #0
 801e270:	e9cd 3327 	strd	r3, r3, [sp, #156]	@ 0x9c
 801e274:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801e278:	e9cd 3318 	strd	r3, r3, [sp, #96]	@ 0x60
 801e27c:	ac29      	add	r4, sp, #164	@ 0xa4
 801e27e:	9426      	str	r4, [sp, #152]	@ 0x98
 801e280:	9304      	str	r3, [sp, #16]
 801e282:	9309      	str	r3, [sp, #36]	@ 0x24
 801e284:	9312      	str	r3, [sp, #72]	@ 0x48
 801e286:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e288:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e28a:	464b      	mov	r3, r9
 801e28c:	461d      	mov	r5, r3
 801e28e:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e292:	b10a      	cbz	r2, 801e298 <_svfprintf_r+0x80>
 801e294:	2a25      	cmp	r2, #37	@ 0x25
 801e296:	d1f9      	bne.n	801e28c <_svfprintf_r+0x74>
 801e298:	ebb5 0709 	subs.w	r7, r5, r9
 801e29c:	d00d      	beq.n	801e2ba <_svfprintf_r+0xa2>
 801e29e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e2a0:	443b      	add	r3, r7
 801e2a2:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e2a4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e2a6:	3301      	adds	r3, #1
 801e2a8:	2b07      	cmp	r3, #7
 801e2aa:	e9c4 9700 	strd	r9, r7, [r4]
 801e2ae:	9327      	str	r3, [sp, #156]	@ 0x9c
 801e2b0:	dc75      	bgt.n	801e39e <_svfprintf_r+0x186>
 801e2b2:	3408      	adds	r4, #8
 801e2b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e2b6:	443b      	add	r3, r7
 801e2b8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e2ba:	782b      	ldrb	r3, [r5, #0]
 801e2bc:	2b00      	cmp	r3, #0
 801e2be:	f001 8148 	beq.w	801f552 <_svfprintf_r+0x133a>
 801e2c2:	2200      	movs	r2, #0
 801e2c4:	1c6b      	adds	r3, r5, #1
 801e2c6:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801e2ca:	f04f 38ff 	mov.w	r8, #4294967295
 801e2ce:	920e      	str	r2, [sp, #56]	@ 0x38
 801e2d0:	4615      	mov	r5, r2
 801e2d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e2d6:	9206      	str	r2, [sp, #24]
 801e2d8:	930c      	str	r3, [sp, #48]	@ 0x30
 801e2da:	9b06      	ldr	r3, [sp, #24]
 801e2dc:	3b20      	subs	r3, #32
 801e2de:	2b5a      	cmp	r3, #90	@ 0x5a
 801e2e0:	f200 85a4 	bhi.w	801ee2c <_svfprintf_r+0xc14>
 801e2e4:	e8df f013 	tbh	[pc, r3, lsl #1]
 801e2e8:	05a2009d 	.word	0x05a2009d
 801e2ec:	00a505a2 	.word	0x00a505a2
 801e2f0:	05a205a2 	.word	0x05a205a2
 801e2f4:	008505a2 	.word	0x008505a2
 801e2f8:	05a205a2 	.word	0x05a205a2
 801e2fc:	00b200a8 	.word	0x00b200a8
 801e300:	00af05a2 	.word	0x00af05a2
 801e304:	05a200b4 	.word	0x05a200b4
 801e308:	00d100ce 	.word	0x00d100ce
 801e30c:	00d100d1 	.word	0x00d100d1
 801e310:	00d100d1 	.word	0x00d100d1
 801e314:	00d100d1 	.word	0x00d100d1
 801e318:	00d100d1 	.word	0x00d100d1
 801e31c:	05a205a2 	.word	0x05a205a2
 801e320:	05a205a2 	.word	0x05a205a2
 801e324:	05a205a2 	.word	0x05a205a2
 801e328:	014705a2 	.word	0x014705a2
 801e32c:	010805a2 	.word	0x010805a2
 801e330:	0147011b 	.word	0x0147011b
 801e334:	01470147 	.word	0x01470147
 801e338:	05a205a2 	.word	0x05a205a2
 801e33c:	05a205a2 	.word	0x05a205a2
 801e340:	05a200e2 	.word	0x05a200e2
 801e344:	049d05a2 	.word	0x049d05a2
 801e348:	05a205a2 	.word	0x05a205a2
 801e34c:	04e705a2 	.word	0x04e705a2
 801e350:	050805a2 	.word	0x050805a2
 801e354:	05a205a2 	.word	0x05a205a2
 801e358:	05a2052a 	.word	0x05a2052a
 801e35c:	05a205a2 	.word	0x05a205a2
 801e360:	05a205a2 	.word	0x05a205a2
 801e364:	05a205a2 	.word	0x05a205a2
 801e368:	014705a2 	.word	0x014705a2
 801e36c:	010805a2 	.word	0x010805a2
 801e370:	0147011d 	.word	0x0147011d
 801e374:	01470147 	.word	0x01470147
 801e378:	011d00ee 	.word	0x011d00ee
 801e37c:	05a20102 	.word	0x05a20102
 801e380:	05a200fb 	.word	0x05a200fb
 801e384:	049f047e 	.word	0x049f047e
 801e388:	010204d6 	.word	0x010204d6
 801e38c:	04e705a2 	.word	0x04e705a2
 801e390:	050a009b 	.word	0x050a009b
 801e394:	05a205a2 	.word	0x05a205a2
 801e398:	05a20065 	.word	0x05a20065
 801e39c:	009b      	.short	0x009b
 801e39e:	9803      	ldr	r0, [sp, #12]
 801e3a0:	aa26      	add	r2, sp, #152	@ 0x98
 801e3a2:	4659      	mov	r1, fp
 801e3a4:	f002 fe0b 	bl	8020fbe <__ssprint_r>
 801e3a8:	2800      	cmp	r0, #0
 801e3aa:	f040 814e 	bne.w	801e64a <_svfprintf_r+0x432>
 801e3ae:	ac29      	add	r4, sp, #164	@ 0xa4
 801e3b0:	e780      	b.n	801e2b4 <_svfprintf_r+0x9c>
 801e3b2:	4b43      	ldr	r3, [pc, #268]	@ (801e4c0 <_svfprintf_r+0x2a8>)
 801e3b4:	9319      	str	r3, [sp, #100]	@ 0x64
 801e3b6:	f015 0320 	ands.w	r3, r5, #32
 801e3ba:	f000 84c2 	beq.w	801ed42 <_svfprintf_r+0xb2a>
 801e3be:	3607      	adds	r6, #7
 801e3c0:	f026 0307 	bic.w	r3, r6, #7
 801e3c4:	461a      	mov	r2, r3
 801e3c6:	685f      	ldr	r7, [r3, #4]
 801e3c8:	f852 6b08 	ldr.w	r6, [r2], #8
 801e3cc:	9207      	str	r2, [sp, #28]
 801e3ce:	07eb      	lsls	r3, r5, #31
 801e3d0:	d50a      	bpl.n	801e3e8 <_svfprintf_r+0x1d0>
 801e3d2:	ea56 0307 	orrs.w	r3, r6, r7
 801e3d6:	d007      	beq.n	801e3e8 <_svfprintf_r+0x1d0>
 801e3d8:	2330      	movs	r3, #48	@ 0x30
 801e3da:	f88d 307c 	strb.w	r3, [sp, #124]	@ 0x7c
 801e3de:	9b06      	ldr	r3, [sp, #24]
 801e3e0:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801e3e4:	f045 0502 	orr.w	r5, r5, #2
 801e3e8:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801e3ec:	2302      	movs	r3, #2
 801e3ee:	f000 bc28 	b.w	801ec42 <_svfprintf_r+0xa2a>
 801e3f2:	9803      	ldr	r0, [sp, #12]
 801e3f4:	f001 fa0a 	bl	801f80c <_localeconv_r>
 801e3f8:	6843      	ldr	r3, [r0, #4]
 801e3fa:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e3fc:	4618      	mov	r0, r3
 801e3fe:	f7e1 fee7 	bl	80001d0 <strlen>
 801e402:	9012      	str	r0, [sp, #72]	@ 0x48
 801e404:	9803      	ldr	r0, [sp, #12]
 801e406:	f001 fa01 	bl	801f80c <_localeconv_r>
 801e40a:	6883      	ldr	r3, [r0, #8]
 801e40c:	9309      	str	r3, [sp, #36]	@ 0x24
 801e40e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e410:	b12b      	cbz	r3, 801e41e <_svfprintf_r+0x206>
 801e412:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e414:	b11b      	cbz	r3, 801e41e <_svfprintf_r+0x206>
 801e416:	781b      	ldrb	r3, [r3, #0]
 801e418:	b10b      	cbz	r3, 801e41e <_svfprintf_r+0x206>
 801e41a:	f445 6580 	orr.w	r5, r5, #1024	@ 0x400
 801e41e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e420:	e757      	b.n	801e2d2 <_svfprintf_r+0xba>
 801e422:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801e426:	2b00      	cmp	r3, #0
 801e428:	d1f9      	bne.n	801e41e <_svfprintf_r+0x206>
 801e42a:	2320      	movs	r3, #32
 801e42c:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801e430:	e7f5      	b.n	801e41e <_svfprintf_r+0x206>
 801e432:	f045 0501 	orr.w	r5, r5, #1
 801e436:	e7f2      	b.n	801e41e <_svfprintf_r+0x206>
 801e438:	f856 3b04 	ldr.w	r3, [r6], #4
 801e43c:	930e      	str	r3, [sp, #56]	@ 0x38
 801e43e:	2b00      	cmp	r3, #0
 801e440:	daed      	bge.n	801e41e <_svfprintf_r+0x206>
 801e442:	425b      	negs	r3, r3
 801e444:	930e      	str	r3, [sp, #56]	@ 0x38
 801e446:	f045 0504 	orr.w	r5, r5, #4
 801e44a:	e7e8      	b.n	801e41e <_svfprintf_r+0x206>
 801e44c:	232b      	movs	r3, #43	@ 0x2b
 801e44e:	e7ed      	b.n	801e42c <_svfprintf_r+0x214>
 801e450:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e452:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e456:	9206      	str	r2, [sp, #24]
 801e458:	2a2a      	cmp	r2, #42	@ 0x2a
 801e45a:	d10f      	bne.n	801e47c <_svfprintf_r+0x264>
 801e45c:	f856 2b04 	ldr.w	r2, [r6], #4
 801e460:	930c      	str	r3, [sp, #48]	@ 0x30
 801e462:	ea42 78e2 	orr.w	r8, r2, r2, asr #31
 801e466:	e7da      	b.n	801e41e <_svfprintf_r+0x206>
 801e468:	fb01 2808 	mla	r8, r1, r8, r2
 801e46c:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e470:	9206      	str	r2, [sp, #24]
 801e472:	9a06      	ldr	r2, [sp, #24]
 801e474:	3a30      	subs	r2, #48	@ 0x30
 801e476:	2a09      	cmp	r2, #9
 801e478:	d9f6      	bls.n	801e468 <_svfprintf_r+0x250>
 801e47a:	e72d      	b.n	801e2d8 <_svfprintf_r+0xc0>
 801e47c:	f04f 0800 	mov.w	r8, #0
 801e480:	210a      	movs	r1, #10
 801e482:	e7f6      	b.n	801e472 <_svfprintf_r+0x25a>
 801e484:	f045 0580 	orr.w	r5, r5, #128	@ 0x80
 801e488:	e7c9      	b.n	801e41e <_svfprintf_r+0x206>
 801e48a:	2200      	movs	r2, #0
 801e48c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e48e:	920e      	str	r2, [sp, #56]	@ 0x38
 801e490:	210a      	movs	r1, #10
 801e492:	9a06      	ldr	r2, [sp, #24]
 801e494:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801e496:	3a30      	subs	r2, #48	@ 0x30
 801e498:	fb01 2200 	mla	r2, r1, r0, r2
 801e49c:	920e      	str	r2, [sp, #56]	@ 0x38
 801e49e:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e4a2:	9206      	str	r2, [sp, #24]
 801e4a4:	3a30      	subs	r2, #48	@ 0x30
 801e4a6:	2a09      	cmp	r2, #9
 801e4a8:	d9f3      	bls.n	801e492 <_svfprintf_r+0x27a>
 801e4aa:	e715      	b.n	801e2d8 <_svfprintf_r+0xc0>
 801e4ac:	f045 0508 	orr.w	r5, r5, #8
 801e4b0:	e7b5      	b.n	801e41e <_svfprintf_r+0x206>
 801e4b2:	bf00      	nop
 801e4b4:	f3af 8000 	nop.w
	...
 801e4c0:	08024e08 	.word	0x08024e08
 801e4c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e4c6:	781b      	ldrb	r3, [r3, #0]
 801e4c8:	2b68      	cmp	r3, #104	@ 0x68
 801e4ca:	bf01      	itttt	eq
 801e4cc:	9b0c      	ldreq	r3, [sp, #48]	@ 0x30
 801e4ce:	3301      	addeq	r3, #1
 801e4d0:	930c      	streq	r3, [sp, #48]	@ 0x30
 801e4d2:	f445 7500 	orreq.w	r5, r5, #512	@ 0x200
 801e4d6:	bf18      	it	ne
 801e4d8:	f045 0540 	orrne.w	r5, r5, #64	@ 0x40
 801e4dc:	e79f      	b.n	801e41e <_svfprintf_r+0x206>
 801e4de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e4e0:	781b      	ldrb	r3, [r3, #0]
 801e4e2:	2b6c      	cmp	r3, #108	@ 0x6c
 801e4e4:	d105      	bne.n	801e4f2 <_svfprintf_r+0x2da>
 801e4e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e4e8:	3301      	adds	r3, #1
 801e4ea:	930c      	str	r3, [sp, #48]	@ 0x30
 801e4ec:	f045 0520 	orr.w	r5, r5, #32
 801e4f0:	e795      	b.n	801e41e <_svfprintf_r+0x206>
 801e4f2:	f045 0510 	orr.w	r5, r5, #16
 801e4f6:	e792      	b.n	801e41e <_svfprintf_r+0x206>
 801e4f8:	4632      	mov	r2, r6
 801e4fa:	f852 3b04 	ldr.w	r3, [r2], #4
 801e4fe:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801e502:	2300      	movs	r3, #0
 801e504:	9207      	str	r2, [sp, #28]
 801e506:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801e50a:	469a      	mov	sl, r3
 801e50c:	f04f 0801 	mov.w	r8, #1
 801e510:	9310      	str	r3, [sp, #64]	@ 0x40
 801e512:	461f      	mov	r7, r3
 801e514:	9308      	str	r3, [sp, #32]
 801e516:	461e      	mov	r6, r3
 801e518:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801e51c:	e1d2      	b.n	801e8c4 <_svfprintf_r+0x6ac>
 801e51e:	f045 0510 	orr.w	r5, r5, #16
 801e522:	06af      	lsls	r7, r5, #26
 801e524:	d512      	bpl.n	801e54c <_svfprintf_r+0x334>
 801e526:	3607      	adds	r6, #7
 801e528:	f026 0307 	bic.w	r3, r6, #7
 801e52c:	461a      	mov	r2, r3
 801e52e:	685f      	ldr	r7, [r3, #4]
 801e530:	f852 6b08 	ldr.w	r6, [r2], #8
 801e534:	9207      	str	r2, [sp, #28]
 801e536:	2f00      	cmp	r7, #0
 801e538:	da06      	bge.n	801e548 <_svfprintf_r+0x330>
 801e53a:	4276      	negs	r6, r6
 801e53c:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 801e540:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 801e544:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801e548:	2301      	movs	r3, #1
 801e54a:	e37d      	b.n	801ec48 <_svfprintf_r+0xa30>
 801e54c:	4633      	mov	r3, r6
 801e54e:	06ee      	lsls	r6, r5, #27
 801e550:	f853 7b04 	ldr.w	r7, [r3], #4
 801e554:	9307      	str	r3, [sp, #28]
 801e556:	d502      	bpl.n	801e55e <_svfprintf_r+0x346>
 801e558:	463e      	mov	r6, r7
 801e55a:	17ff      	asrs	r7, r7, #31
 801e55c:	e7eb      	b.n	801e536 <_svfprintf_r+0x31e>
 801e55e:	0668      	lsls	r0, r5, #25
 801e560:	d503      	bpl.n	801e56a <_svfprintf_r+0x352>
 801e562:	b23e      	sxth	r6, r7
 801e564:	f347 37c0 	sbfx	r7, r7, #15, #1
 801e568:	e7e5      	b.n	801e536 <_svfprintf_r+0x31e>
 801e56a:	05a9      	lsls	r1, r5, #22
 801e56c:	d5f4      	bpl.n	801e558 <_svfprintf_r+0x340>
 801e56e:	b27e      	sxtb	r6, r7
 801e570:	f347 17c0 	sbfx	r7, r7, #7, #1
 801e574:	e7df      	b.n	801e536 <_svfprintf_r+0x31e>
 801e576:	3607      	adds	r6, #7
 801e578:	f026 0307 	bic.w	r3, r6, #7
 801e57c:	ecb3 7b02 	vldmia	r3!, {d7}
 801e580:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 801e584:	9307      	str	r3, [sp, #28]
 801e586:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e588:	931a      	str	r3, [sp, #104]	@ 0x68
 801e58a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e58c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 801e590:	931b      	str	r3, [sp, #108]	@ 0x6c
 801e592:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801e596:	4b81      	ldr	r3, [pc, #516]	@ (801e79c <_svfprintf_r+0x584>)
 801e598:	f04f 32ff 	mov.w	r2, #4294967295
 801e59c:	f7e2 fac6 	bl	8000b2c <__aeabi_dcmpun>
 801e5a0:	bb10      	cbnz	r0, 801e5e8 <_svfprintf_r+0x3d0>
 801e5a2:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	@ 0x68
 801e5a6:	4b7d      	ldr	r3, [pc, #500]	@ (801e79c <_svfprintf_r+0x584>)
 801e5a8:	f04f 32ff 	mov.w	r2, #4294967295
 801e5ac:	f7e2 faa0 	bl	8000af0 <__aeabi_dcmple>
 801e5b0:	b9d0      	cbnz	r0, 801e5e8 <_svfprintf_r+0x3d0>
 801e5b2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801e5b6:	2200      	movs	r2, #0
 801e5b8:	2300      	movs	r3, #0
 801e5ba:	f7e2 fa8f 	bl	8000adc <__aeabi_dcmplt>
 801e5be:	b110      	cbz	r0, 801e5c6 <_svfprintf_r+0x3ae>
 801e5c0:	232d      	movs	r3, #45	@ 0x2d
 801e5c2:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801e5c6:	4a76      	ldr	r2, [pc, #472]	@ (801e7a0 <_svfprintf_r+0x588>)
 801e5c8:	4b76      	ldr	r3, [pc, #472]	@ (801e7a4 <_svfprintf_r+0x58c>)
 801e5ca:	9906      	ldr	r1, [sp, #24]
 801e5cc:	f025 0580 	bic.w	r5, r5, #128	@ 0x80
 801e5d0:	2947      	cmp	r1, #71	@ 0x47
 801e5d2:	bfd4      	ite	le
 801e5d4:	4691      	movle	r9, r2
 801e5d6:	4699      	movgt	r9, r3
 801e5d8:	f04f 0a00 	mov.w	sl, #0
 801e5dc:	f04f 0803 	mov.w	r8, #3
 801e5e0:	f8cd a040 	str.w	sl, [sp, #64]	@ 0x40
 801e5e4:	f000 bfec 	b.w	801f5c0 <_svfprintf_r+0x13a8>
 801e5e8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801e5ec:	4610      	mov	r0, r2
 801e5ee:	4619      	mov	r1, r3
 801e5f0:	f7e2 fa9c 	bl	8000b2c <__aeabi_dcmpun>
 801e5f4:	4682      	mov	sl, r0
 801e5f6:	b140      	cbz	r0, 801e60a <_svfprintf_r+0x3f2>
 801e5f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e5fa:	4a6b      	ldr	r2, [pc, #428]	@ (801e7a8 <_svfprintf_r+0x590>)
 801e5fc:	2b00      	cmp	r3, #0
 801e5fe:	bfbc      	itt	lt
 801e600:	232d      	movlt	r3, #45	@ 0x2d
 801e602:	f88d 307b 	strblt.w	r3, [sp, #123]	@ 0x7b
 801e606:	4b69      	ldr	r3, [pc, #420]	@ (801e7ac <_svfprintf_r+0x594>)
 801e608:	e7df      	b.n	801e5ca <_svfprintf_r+0x3b2>
 801e60a:	9b06      	ldr	r3, [sp, #24]
 801e60c:	2b61      	cmp	r3, #97	@ 0x61
 801e60e:	d025      	beq.n	801e65c <_svfprintf_r+0x444>
 801e610:	2b41      	cmp	r3, #65	@ 0x41
 801e612:	d125      	bne.n	801e660 <_svfprintf_r+0x448>
 801e614:	2358      	movs	r3, #88	@ 0x58
 801e616:	2230      	movs	r2, #48	@ 0x30
 801e618:	f1b8 0f63 	cmp.w	r8, #99	@ 0x63
 801e61c:	f88d 207c 	strb.w	r2, [sp, #124]	@ 0x7c
 801e620:	f88d 307d 	strb.w	r3, [sp, #125]	@ 0x7d
 801e624:	f045 0502 	orr.w	r5, r5, #2
 801e628:	f340 80a5 	ble.w	801e776 <_svfprintf_r+0x55e>
 801e62c:	9803      	ldr	r0, [sp, #12]
 801e62e:	f108 0101 	add.w	r1, r8, #1
 801e632:	f7ff fbab 	bl	801dd8c <_malloc_r>
 801e636:	4681      	mov	r9, r0
 801e638:	2800      	cmp	r0, #0
 801e63a:	f040 80a1 	bne.w	801e780 <_svfprintf_r+0x568>
 801e63e:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801e642:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801e646:	f8ab 300c 	strh.w	r3, [fp, #12]
 801e64a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
 801e64e:	065b      	lsls	r3, r3, #25
 801e650:	f53f ae04 	bmi.w	801e25c <_svfprintf_r+0x44>
 801e654:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801e656:	b053      	add	sp, #332	@ 0x14c
 801e658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e65c:	2378      	movs	r3, #120	@ 0x78
 801e65e:	e7da      	b.n	801e616 <_svfprintf_r+0x3fe>
 801e660:	f1b8 3fff 	cmp.w	r8, #4294967295
 801e664:	f000 808e 	beq.w	801e784 <_svfprintf_r+0x56c>
 801e668:	9b06      	ldr	r3, [sp, #24]
 801e66a:	f023 0320 	bic.w	r3, r3, #32
 801e66e:	2b47      	cmp	r3, #71	@ 0x47
 801e670:	d105      	bne.n	801e67e <_svfprintf_r+0x466>
 801e672:	f1b8 0f00 	cmp.w	r8, #0
 801e676:	d102      	bne.n	801e67e <_svfprintf_r+0x466>
 801e678:	46c2      	mov	sl, r8
 801e67a:	f04f 0801 	mov.w	r8, #1
 801e67e:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801e682:	9311      	str	r3, [sp, #68]	@ 0x44
 801e684:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e686:	2b00      	cmp	r3, #0
 801e688:	da7f      	bge.n	801e78a <_svfprintf_r+0x572>
 801e68a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e68c:	9314      	str	r3, [sp, #80]	@ 0x50
 801e68e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e690:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e694:	9315      	str	r3, [sp, #84]	@ 0x54
 801e696:	232d      	movs	r3, #45	@ 0x2d
 801e698:	931c      	str	r3, [sp, #112]	@ 0x70
 801e69a:	9b06      	ldr	r3, [sp, #24]
 801e69c:	f023 0320 	bic.w	r3, r3, #32
 801e6a0:	2b41      	cmp	r3, #65	@ 0x41
 801e6a2:	9308      	str	r3, [sp, #32]
 801e6a4:	f040 81e6 	bne.w	801ea74 <_svfprintf_r+0x85c>
 801e6a8:	a820      	add	r0, sp, #128	@ 0x80
 801e6aa:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801e6ae:	f001 f8e1 	bl	801f874 <frexp>
 801e6b2:	2200      	movs	r2, #0
 801e6b4:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 801e6b8:	ec51 0b10 	vmov	r0, r1, d0
 801e6bc:	f7e1 ff9c 	bl	80005f8 <__aeabi_dmul>
 801e6c0:	4602      	mov	r2, r0
 801e6c2:	460b      	mov	r3, r1
 801e6c4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801e6c8:	2200      	movs	r2, #0
 801e6ca:	2300      	movs	r3, #0
 801e6cc:	f7e2 f9fc 	bl	8000ac8 <__aeabi_dcmpeq>
 801e6d0:	b108      	cbz	r0, 801e6d6 <_svfprintf_r+0x4be>
 801e6d2:	2301      	movs	r3, #1
 801e6d4:	9320      	str	r3, [sp, #128]	@ 0x80
 801e6d6:	4a36      	ldr	r2, [pc, #216]	@ (801e7b0 <_svfprintf_r+0x598>)
 801e6d8:	4b36      	ldr	r3, [pc, #216]	@ (801e7b4 <_svfprintf_r+0x59c>)
 801e6da:	9906      	ldr	r1, [sp, #24]
 801e6dc:	2961      	cmp	r1, #97	@ 0x61
 801e6de:	bf18      	it	ne
 801e6e0:	461a      	movne	r2, r3
 801e6e2:	9210      	str	r2, [sp, #64]	@ 0x40
 801e6e4:	f108 37ff 	add.w	r7, r8, #4294967295
 801e6e8:	464e      	mov	r6, r9
 801e6ea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801e6ee:	4b32      	ldr	r3, [pc, #200]	@ (801e7b8 <_svfprintf_r+0x5a0>)
 801e6f0:	2200      	movs	r2, #0
 801e6f2:	f7e1 ff81 	bl	80005f8 <__aeabi_dmul>
 801e6f6:	4602      	mov	r2, r0
 801e6f8:	460b      	mov	r3, r1
 801e6fa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801e6fe:	f7e2 fa2b 	bl	8000b58 <__aeabi_d2iz>
 801e702:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e704:	f7e1 ff0e 	bl	8000524 <__aeabi_i2d>
 801e708:	4602      	mov	r2, r0
 801e70a:	460b      	mov	r3, r1
 801e70c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801e710:	f7e1 fdba 	bl	8000288 <__aeabi_dsub>
 801e714:	4602      	mov	r2, r0
 801e716:	460b      	mov	r3, r1
 801e718:	e9cd 2304 	strd	r2, r3, [sp, #16]
 801e71c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801e71e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e720:	5c9b      	ldrb	r3, [r3, r2]
 801e722:	f806 3b01 	strb.w	r3, [r6], #1
 801e726:	1c7a      	adds	r2, r7, #1
 801e728:	d006      	beq.n	801e738 <_svfprintf_r+0x520>
 801e72a:	1e7b      	subs	r3, r7, #1
 801e72c:	931d      	str	r3, [sp, #116]	@ 0x74
 801e72e:	2200      	movs	r2, #0
 801e730:	2300      	movs	r3, #0
 801e732:	f7e2 f9c9 	bl	8000ac8 <__aeabi_dcmpeq>
 801e736:	b370      	cbz	r0, 801e796 <_svfprintf_r+0x57e>
 801e738:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801e73c:	4b1f      	ldr	r3, [pc, #124]	@ (801e7bc <_svfprintf_r+0x5a4>)
 801e73e:	2200      	movs	r2, #0
 801e740:	f7e2 f9ea 	bl	8000b18 <__aeabi_dcmpgt>
 801e744:	2800      	cmp	r0, #0
 801e746:	d13b      	bne.n	801e7c0 <_svfprintf_r+0x5a8>
 801e748:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801e74c:	4b1b      	ldr	r3, [pc, #108]	@ (801e7bc <_svfprintf_r+0x5a4>)
 801e74e:	2200      	movs	r2, #0
 801e750:	f7e2 f9ba 	bl	8000ac8 <__aeabi_dcmpeq>
 801e754:	b110      	cbz	r0, 801e75c <_svfprintf_r+0x544>
 801e756:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e758:	07db      	lsls	r3, r3, #31
 801e75a:	d431      	bmi.n	801e7c0 <_svfprintf_r+0x5a8>
 801e75c:	4633      	mov	r3, r6
 801e75e:	19f1      	adds	r1, r6, r7
 801e760:	2030      	movs	r0, #48	@ 0x30
 801e762:	1aca      	subs	r2, r1, r3
 801e764:	2a00      	cmp	r2, #0
 801e766:	f280 8182 	bge.w	801ea6e <_svfprintf_r+0x856>
 801e76a:	1c7b      	adds	r3, r7, #1
 801e76c:	3701      	adds	r7, #1
 801e76e:	bfb8      	it	lt
 801e770:	2300      	movlt	r3, #0
 801e772:	441e      	add	r6, r3
 801e774:	e038      	b.n	801e7e8 <_svfprintf_r+0x5d0>
 801e776:	f04f 0a00 	mov.w	sl, #0
 801e77a:	f10d 09e4 	add.w	r9, sp, #228	@ 0xe4
 801e77e:	e77e      	b.n	801e67e <_svfprintf_r+0x466>
 801e780:	4682      	mov	sl, r0
 801e782:	e77c      	b.n	801e67e <_svfprintf_r+0x466>
 801e784:	f04f 0806 	mov.w	r8, #6
 801e788:	e779      	b.n	801e67e <_svfprintf_r+0x466>
 801e78a:	ed9d 7b0a 	vldr	d7, [sp, #40]	@ 0x28
 801e78e:	2300      	movs	r3, #0
 801e790:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
 801e794:	e780      	b.n	801e698 <_svfprintf_r+0x480>
 801e796:	9f1d      	ldr	r7, [sp, #116]	@ 0x74
 801e798:	e7a7      	b.n	801e6ea <_svfprintf_r+0x4d2>
 801e79a:	bf00      	nop
 801e79c:	7fefffff 	.word	0x7fefffff
 801e7a0:	08024df8 	.word	0x08024df8
 801e7a4:	08024dfc 	.word	0x08024dfc
 801e7a8:	08024e00 	.word	0x08024e00
 801e7ac:	08024e04 	.word	0x08024e04
 801e7b0:	08024e08 	.word	0x08024e08
 801e7b4:	08024e19 	.word	0x08024e19
 801e7b8:	40300000 	.word	0x40300000
 801e7bc:	3fe00000 	.word	0x3fe00000
 801e7c0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e7c2:	9624      	str	r6, [sp, #144]	@ 0x90
 801e7c4:	7bd9      	ldrb	r1, [r3, #15]
 801e7c6:	2030      	movs	r0, #48	@ 0x30
 801e7c8:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801e7ca:	1e53      	subs	r3, r2, #1
 801e7cc:	9324      	str	r3, [sp, #144]	@ 0x90
 801e7ce:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 801e7d2:	428b      	cmp	r3, r1
 801e7d4:	f000 8148 	beq.w	801ea68 <_svfprintf_r+0x850>
 801e7d8:	2b39      	cmp	r3, #57	@ 0x39
 801e7da:	bf0b      	itete	eq
 801e7dc:	9b10      	ldreq	r3, [sp, #64]	@ 0x40
 801e7de:	3301      	addne	r3, #1
 801e7e0:	7a9b      	ldrbeq	r3, [r3, #10]
 801e7e2:	b2db      	uxtbne	r3, r3
 801e7e4:	f802 3c01 	strb.w	r3, [r2, #-1]
 801e7e8:	eba6 0309 	sub.w	r3, r6, r9
 801e7ec:	9304      	str	r3, [sp, #16]
 801e7ee:	9b08      	ldr	r3, [sp, #32]
 801e7f0:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801e7f2:	2b47      	cmp	r3, #71	@ 0x47
 801e7f4:	f040 8187 	bne.w	801eb06 <_svfprintf_r+0x8ee>
 801e7f8:	1cf1      	adds	r1, r6, #3
 801e7fa:	db02      	blt.n	801e802 <_svfprintf_r+0x5ea>
 801e7fc:	4546      	cmp	r6, r8
 801e7fe:	f340 81a5 	ble.w	801eb4c <_svfprintf_r+0x934>
 801e802:	9b06      	ldr	r3, [sp, #24]
 801e804:	3b02      	subs	r3, #2
 801e806:	9306      	str	r3, [sp, #24]
 801e808:	9906      	ldr	r1, [sp, #24]
 801e80a:	f89d 2018 	ldrb.w	r2, [sp, #24]
 801e80e:	f021 0120 	bic.w	r1, r1, #32
 801e812:	2941      	cmp	r1, #65	@ 0x41
 801e814:	bf08      	it	eq
 801e816:	320f      	addeq	r2, #15
 801e818:	f106 33ff 	add.w	r3, r6, #4294967295
 801e81c:	bf06      	itte	eq
 801e81e:	b2d2      	uxtbeq	r2, r2
 801e820:	2101      	moveq	r1, #1
 801e822:	2100      	movne	r1, #0
 801e824:	2b00      	cmp	r3, #0
 801e826:	9320      	str	r3, [sp, #128]	@ 0x80
 801e828:	bfb8      	it	lt
 801e82a:	f1c6 0301 	rsblt	r3, r6, #1
 801e82e:	f88d 2088 	strb.w	r2, [sp, #136]	@ 0x88
 801e832:	bfb4      	ite	lt
 801e834:	222d      	movlt	r2, #45	@ 0x2d
 801e836:	222b      	movge	r2, #43	@ 0x2b
 801e838:	2b09      	cmp	r3, #9
 801e83a:	f88d 2089 	strb.w	r2, [sp, #137]	@ 0x89
 801e83e:	f340 8178 	ble.w	801eb32 <_svfprintf_r+0x91a>
 801e842:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801e846:	270a      	movs	r7, #10
 801e848:	4602      	mov	r2, r0
 801e84a:	fbb3 f6f7 	udiv	r6, r3, r7
 801e84e:	fb07 3116 	mls	r1, r7, r6, r3
 801e852:	3130      	adds	r1, #48	@ 0x30
 801e854:	f802 1c01 	strb.w	r1, [r2, #-1]
 801e858:	4619      	mov	r1, r3
 801e85a:	2963      	cmp	r1, #99	@ 0x63
 801e85c:	f100 30ff 	add.w	r0, r0, #4294967295
 801e860:	4633      	mov	r3, r6
 801e862:	dcf1      	bgt.n	801e848 <_svfprintf_r+0x630>
 801e864:	3330      	adds	r3, #48	@ 0x30
 801e866:	1e91      	subs	r1, r2, #2
 801e868:	f800 3c01 	strb.w	r3, [r0, #-1]
 801e86c:	f10d 0689 	add.w	r6, sp, #137	@ 0x89
 801e870:	460b      	mov	r3, r1
 801e872:	f10d 0097 	add.w	r0, sp, #151	@ 0x97
 801e876:	4283      	cmp	r3, r0
 801e878:	f0c0 8156 	bcc.w	801eb28 <_svfprintf_r+0x910>
 801e87c:	f10d 0399 	add.w	r3, sp, #153	@ 0x99
 801e880:	1a9b      	subs	r3, r3, r2
 801e882:	4281      	cmp	r1, r0
 801e884:	bf88      	it	hi
 801e886:	2300      	movhi	r3, #0
 801e888:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801e88c:	441a      	add	r2, r3
 801e88e:	ab22      	add	r3, sp, #136	@ 0x88
 801e890:	1ad3      	subs	r3, r2, r3
 801e892:	9a04      	ldr	r2, [sp, #16]
 801e894:	9318      	str	r3, [sp, #96]	@ 0x60
 801e896:	2a01      	cmp	r2, #1
 801e898:	eb03 0802 	add.w	r8, r3, r2
 801e89c:	dc01      	bgt.n	801e8a2 <_svfprintf_r+0x68a>
 801e89e:	07ea      	lsls	r2, r5, #31
 801e8a0:	d501      	bpl.n	801e8a6 <_svfprintf_r+0x68e>
 801e8a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e8a4:	4498      	add	r8, r3
 801e8a6:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801e8aa:	2700      	movs	r7, #0
 801e8ac:	f445 7380 	orr.w	r3, r5, #256	@ 0x100
 801e8b0:	9311      	str	r3, [sp, #68]	@ 0x44
 801e8b2:	9708      	str	r7, [sp, #32]
 801e8b4:	463e      	mov	r6, r7
 801e8b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e8b8:	2b00      	cmp	r3, #0
 801e8ba:	f040 818f 	bne.w	801ebdc <_svfprintf_r+0x9c4>
 801e8be:	2300      	movs	r3, #0
 801e8c0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e8c2:	9310      	str	r3, [sp, #64]	@ 0x40
 801e8c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e8c6:	4543      	cmp	r3, r8
 801e8c8:	bfb8      	it	lt
 801e8ca:	4643      	movlt	r3, r8
 801e8cc:	9311      	str	r3, [sp, #68]	@ 0x44
 801e8ce:	f89d 307b 	ldrb.w	r3, [sp, #123]	@ 0x7b
 801e8d2:	b113      	cbz	r3, 801e8da <_svfprintf_r+0x6c2>
 801e8d4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e8d6:	3301      	adds	r3, #1
 801e8d8:	9311      	str	r3, [sp, #68]	@ 0x44
 801e8da:	f015 0302 	ands.w	r3, r5, #2
 801e8de:	931c      	str	r3, [sp, #112]	@ 0x70
 801e8e0:	bf1e      	ittt	ne
 801e8e2:	9b11      	ldrne	r3, [sp, #68]	@ 0x44
 801e8e4:	3302      	addne	r3, #2
 801e8e6:	9311      	strne	r3, [sp, #68]	@ 0x44
 801e8e8:	f015 0384 	ands.w	r3, r5, #132	@ 0x84
 801e8ec:	931d      	str	r3, [sp, #116]	@ 0x74
 801e8ee:	d122      	bne.n	801e936 <_svfprintf_r+0x71e>
 801e8f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e8f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e8f4:	1a9b      	subs	r3, r3, r2
 801e8f6:	2b00      	cmp	r3, #0
 801e8f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e8fa:	dd1c      	ble.n	801e936 <_svfprintf_r+0x71e>
 801e8fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e8fe:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801e902:	2810      	cmp	r0, #16
 801e904:	489e      	ldr	r0, [pc, #632]	@ (801eb80 <_svfprintf_r+0x968>)
 801e906:	6020      	str	r0, [r4, #0]
 801e908:	f102 0201 	add.w	r2, r2, #1
 801e90c:	f104 0108 	add.w	r1, r4, #8
 801e910:	f300 8298 	bgt.w	801ee44 <_svfprintf_r+0xc2c>
 801e914:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e916:	6060      	str	r0, [r4, #4]
 801e918:	4403      	add	r3, r0
 801e91a:	2a07      	cmp	r2, #7
 801e91c:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801e920:	f340 82a5 	ble.w	801ee6e <_svfprintf_r+0xc56>
 801e924:	9803      	ldr	r0, [sp, #12]
 801e926:	aa26      	add	r2, sp, #152	@ 0x98
 801e928:	4659      	mov	r1, fp
 801e92a:	f002 fb48 	bl	8020fbe <__ssprint_r>
 801e92e:	2800      	cmp	r0, #0
 801e930:	f040 85ed 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801e934:	ac29      	add	r4, sp, #164	@ 0xa4
 801e936:	f89d 207b 	ldrb.w	r2, [sp, #123]	@ 0x7b
 801e93a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e93c:	b16a      	cbz	r2, 801e95a <_svfprintf_r+0x742>
 801e93e:	f10d 027b 	add.w	r2, sp, #123	@ 0x7b
 801e942:	6022      	str	r2, [r4, #0]
 801e944:	2201      	movs	r2, #1
 801e946:	4413      	add	r3, r2
 801e948:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e94a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e94c:	6062      	str	r2, [r4, #4]
 801e94e:	4413      	add	r3, r2
 801e950:	2b07      	cmp	r3, #7
 801e952:	9327      	str	r3, [sp, #156]	@ 0x9c
 801e954:	f300 828d 	bgt.w	801ee72 <_svfprintf_r+0xc5a>
 801e958:	3408      	adds	r4, #8
 801e95a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801e95c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e95e:	b162      	cbz	r2, 801e97a <_svfprintf_r+0x762>
 801e960:	aa1f      	add	r2, sp, #124	@ 0x7c
 801e962:	6022      	str	r2, [r4, #0]
 801e964:	2202      	movs	r2, #2
 801e966:	4413      	add	r3, r2
 801e968:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e96a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e96c:	6062      	str	r2, [r4, #4]
 801e96e:	3301      	adds	r3, #1
 801e970:	2b07      	cmp	r3, #7
 801e972:	9327      	str	r3, [sp, #156]	@ 0x9c
 801e974:	f300 8287 	bgt.w	801ee86 <_svfprintf_r+0xc6e>
 801e978:	3408      	adds	r4, #8
 801e97a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e97c:	2b80      	cmp	r3, #128	@ 0x80
 801e97e:	d122      	bne.n	801e9c6 <_svfprintf_r+0x7ae>
 801e980:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e982:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e984:	1a9b      	subs	r3, r3, r2
 801e986:	2b00      	cmp	r3, #0
 801e988:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e98a:	dd1c      	ble.n	801e9c6 <_svfprintf_r+0x7ae>
 801e98c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e98e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801e992:	2810      	cmp	r0, #16
 801e994:	487b      	ldr	r0, [pc, #492]	@ (801eb84 <_svfprintf_r+0x96c>)
 801e996:	6020      	str	r0, [r4, #0]
 801e998:	f102 0201 	add.w	r2, r2, #1
 801e99c:	f104 0108 	add.w	r1, r4, #8
 801e9a0:	f300 827b 	bgt.w	801ee9a <_svfprintf_r+0xc82>
 801e9a4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e9a6:	6060      	str	r0, [r4, #4]
 801e9a8:	4403      	add	r3, r0
 801e9aa:	2a07      	cmp	r2, #7
 801e9ac:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801e9b0:	f340 8288 	ble.w	801eec4 <_svfprintf_r+0xcac>
 801e9b4:	9803      	ldr	r0, [sp, #12]
 801e9b6:	aa26      	add	r2, sp, #152	@ 0x98
 801e9b8:	4659      	mov	r1, fp
 801e9ba:	f002 fb00 	bl	8020fbe <__ssprint_r>
 801e9be:	2800      	cmp	r0, #0
 801e9c0:	f040 85a5 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801e9c4:	ac29      	add	r4, sp, #164	@ 0xa4
 801e9c6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e9c8:	eba3 0308 	sub.w	r3, r3, r8
 801e9cc:	2b00      	cmp	r3, #0
 801e9ce:	9310      	str	r3, [sp, #64]	@ 0x40
 801e9d0:	dd1c      	ble.n	801ea0c <_svfprintf_r+0x7f4>
 801e9d2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801e9d4:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801e9d8:	2810      	cmp	r0, #16
 801e9da:	486a      	ldr	r0, [pc, #424]	@ (801eb84 <_svfprintf_r+0x96c>)
 801e9dc:	6020      	str	r0, [r4, #0]
 801e9de:	f102 0201 	add.w	r2, r2, #1
 801e9e2:	f104 0108 	add.w	r1, r4, #8
 801e9e6:	f300 826f 	bgt.w	801eec8 <_svfprintf_r+0xcb0>
 801e9ea:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801e9ec:	6060      	str	r0, [r4, #4]
 801e9ee:	4403      	add	r3, r0
 801e9f0:	2a07      	cmp	r2, #7
 801e9f2:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801e9f6:	f340 827c 	ble.w	801eef2 <_svfprintf_r+0xcda>
 801e9fa:	9803      	ldr	r0, [sp, #12]
 801e9fc:	aa26      	add	r2, sp, #152	@ 0x98
 801e9fe:	4659      	mov	r1, fp
 801ea00:	f002 fadd 	bl	8020fbe <__ssprint_r>
 801ea04:	2800      	cmp	r0, #0
 801ea06:	f040 8582 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801ea0a:	ac29      	add	r4, sp, #164	@ 0xa4
 801ea0c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ea0e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ea10:	05ea      	lsls	r2, r5, #23
 801ea12:	f100 8275 	bmi.w	801ef00 <_svfprintf_r+0xce8>
 801ea16:	4443      	add	r3, r8
 801ea18:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ea1a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ea1c:	3301      	adds	r3, #1
 801ea1e:	2b07      	cmp	r3, #7
 801ea20:	e9c4 9800 	strd	r9, r8, [r4]
 801ea24:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ea26:	f300 82b1 	bgt.w	801ef8c <_svfprintf_r+0xd74>
 801ea2a:	3408      	adds	r4, #8
 801ea2c:	076a      	lsls	r2, r5, #29
 801ea2e:	f100 8550 	bmi.w	801f4d2 <_svfprintf_r+0x12ba>
 801ea32:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 801ea36:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801ea38:	428a      	cmp	r2, r1
 801ea3a:	bfac      	ite	ge
 801ea3c:	189b      	addge	r3, r3, r2
 801ea3e:	185b      	addlt	r3, r3, r1
 801ea40:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ea42:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ea44:	b13b      	cbz	r3, 801ea56 <_svfprintf_r+0x83e>
 801ea46:	9803      	ldr	r0, [sp, #12]
 801ea48:	aa26      	add	r2, sp, #152	@ 0x98
 801ea4a:	4659      	mov	r1, fp
 801ea4c:	f002 fab7 	bl	8020fbe <__ssprint_r>
 801ea50:	2800      	cmp	r0, #0
 801ea52:	f040 855c 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801ea56:	2300      	movs	r3, #0
 801ea58:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ea5a:	f1ba 0f00 	cmp.w	sl, #0
 801ea5e:	f040 8572 	bne.w	801f546 <_svfprintf_r+0x132e>
 801ea62:	9e07      	ldr	r6, [sp, #28]
 801ea64:	ac29      	add	r4, sp, #164	@ 0xa4
 801ea66:	e0c6      	b.n	801ebf6 <_svfprintf_r+0x9de>
 801ea68:	f802 0c01 	strb.w	r0, [r2, #-1]
 801ea6c:	e6ac      	b.n	801e7c8 <_svfprintf_r+0x5b0>
 801ea6e:	f803 0b01 	strb.w	r0, [r3], #1
 801ea72:	e676      	b.n	801e762 <_svfprintf_r+0x54a>
 801ea74:	9b08      	ldr	r3, [sp, #32]
 801ea76:	2b46      	cmp	r3, #70	@ 0x46
 801ea78:	d005      	beq.n	801ea86 <_svfprintf_r+0x86e>
 801ea7a:	2b45      	cmp	r3, #69	@ 0x45
 801ea7c:	d11a      	bne.n	801eab4 <_svfprintf_r+0x89c>
 801ea7e:	f108 0601 	add.w	r6, r8, #1
 801ea82:	2102      	movs	r1, #2
 801ea84:	e001      	b.n	801ea8a <_svfprintf_r+0x872>
 801ea86:	4646      	mov	r6, r8
 801ea88:	2103      	movs	r1, #3
 801ea8a:	ab24      	add	r3, sp, #144	@ 0x90
 801ea8c:	9301      	str	r3, [sp, #4]
 801ea8e:	ab21      	add	r3, sp, #132	@ 0x84
 801ea90:	9300      	str	r3, [sp, #0]
 801ea92:	ed9d 0b14 	vldr	d0, [sp, #80]	@ 0x50
 801ea96:	ab20      	add	r3, sp, #128	@ 0x80
 801ea98:	9803      	ldr	r0, [sp, #12]
 801ea9a:	4632      	mov	r2, r6
 801ea9c:	f000 ffe8 	bl	801fa70 <_dtoa_r>
 801eaa0:	9b08      	ldr	r3, [sp, #32]
 801eaa2:	2b47      	cmp	r3, #71	@ 0x47
 801eaa4:	4681      	mov	r9, r0
 801eaa6:	d119      	bne.n	801eadc <_svfprintf_r+0x8c4>
 801eaa8:	07e8      	lsls	r0, r5, #31
 801eaaa:	d405      	bmi.n	801eab8 <_svfprintf_r+0x8a0>
 801eaac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eaae:	eba3 0309 	sub.w	r3, r3, r9
 801eab2:	e69b      	b.n	801e7ec <_svfprintf_r+0x5d4>
 801eab4:	4646      	mov	r6, r8
 801eab6:	e7e4      	b.n	801ea82 <_svfprintf_r+0x86a>
 801eab8:	eb09 0706 	add.w	r7, r9, r6
 801eabc:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801eac0:	2200      	movs	r2, #0
 801eac2:	2300      	movs	r3, #0
 801eac4:	f7e2 f800 	bl	8000ac8 <__aeabi_dcmpeq>
 801eac8:	b100      	cbz	r0, 801eacc <_svfprintf_r+0x8b4>
 801eaca:	9724      	str	r7, [sp, #144]	@ 0x90
 801eacc:	2230      	movs	r2, #48	@ 0x30
 801eace:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ead0:	429f      	cmp	r7, r3
 801ead2:	d9eb      	bls.n	801eaac <_svfprintf_r+0x894>
 801ead4:	1c59      	adds	r1, r3, #1
 801ead6:	9124      	str	r1, [sp, #144]	@ 0x90
 801ead8:	701a      	strb	r2, [r3, #0]
 801eada:	e7f8      	b.n	801eace <_svfprintf_r+0x8b6>
 801eadc:	9b08      	ldr	r3, [sp, #32]
 801eade:	2b46      	cmp	r3, #70	@ 0x46
 801eae0:	eb00 0706 	add.w	r7, r0, r6
 801eae4:	d1ea      	bne.n	801eabc <_svfprintf_r+0x8a4>
 801eae6:	7803      	ldrb	r3, [r0, #0]
 801eae8:	2b30      	cmp	r3, #48	@ 0x30
 801eaea:	d109      	bne.n	801eb00 <_svfprintf_r+0x8e8>
 801eaec:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
 801eaf0:	2200      	movs	r2, #0
 801eaf2:	2300      	movs	r3, #0
 801eaf4:	f7e1 ffe8 	bl	8000ac8 <__aeabi_dcmpeq>
 801eaf8:	b910      	cbnz	r0, 801eb00 <_svfprintf_r+0x8e8>
 801eafa:	f1c6 0601 	rsb	r6, r6, #1
 801eafe:	9620      	str	r6, [sp, #128]	@ 0x80
 801eb00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eb02:	441f      	add	r7, r3
 801eb04:	e7da      	b.n	801eabc <_svfprintf_r+0x8a4>
 801eb06:	9b08      	ldr	r3, [sp, #32]
 801eb08:	2b46      	cmp	r3, #70	@ 0x46
 801eb0a:	f47f ae7d 	bne.w	801e808 <_svfprintf_r+0x5f0>
 801eb0e:	f005 0301 	and.w	r3, r5, #1
 801eb12:	2e00      	cmp	r6, #0
 801eb14:	ea43 0308 	orr.w	r3, r3, r8
 801eb18:	dd25      	ble.n	801eb66 <_svfprintf_r+0x94e>
 801eb1a:	b37b      	cbz	r3, 801eb7c <_svfprintf_r+0x964>
 801eb1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801eb1e:	18f3      	adds	r3, r6, r3
 801eb20:	4498      	add	r8, r3
 801eb22:	2366      	movs	r3, #102	@ 0x66
 801eb24:	9306      	str	r3, [sp, #24]
 801eb26:	e033      	b.n	801eb90 <_svfprintf_r+0x978>
 801eb28:	f813 7b01 	ldrb.w	r7, [r3], #1
 801eb2c:	f806 7f01 	strb.w	r7, [r6, #1]!
 801eb30:	e6a1      	b.n	801e876 <_svfprintf_r+0x65e>
 801eb32:	b941      	cbnz	r1, 801eb46 <_svfprintf_r+0x92e>
 801eb34:	2230      	movs	r2, #48	@ 0x30
 801eb36:	f88d 208a 	strb.w	r2, [sp, #138]	@ 0x8a
 801eb3a:	f10d 028b 	add.w	r2, sp, #139	@ 0x8b
 801eb3e:	3330      	adds	r3, #48	@ 0x30
 801eb40:	f802 3b01 	strb.w	r3, [r2], #1
 801eb44:	e6a3      	b.n	801e88e <_svfprintf_r+0x676>
 801eb46:	f10d 028a 	add.w	r2, sp, #138	@ 0x8a
 801eb4a:	e7f8      	b.n	801eb3e <_svfprintf_r+0x926>
 801eb4c:	9b04      	ldr	r3, [sp, #16]
 801eb4e:	429e      	cmp	r6, r3
 801eb50:	da0d      	bge.n	801eb6e <_svfprintf_r+0x956>
 801eb52:	9b04      	ldr	r3, [sp, #16]
 801eb54:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801eb56:	2e00      	cmp	r6, #0
 801eb58:	eb03 0802 	add.w	r8, r3, r2
 801eb5c:	dc0c      	bgt.n	801eb78 <_svfprintf_r+0x960>
 801eb5e:	f1c6 0301 	rsb	r3, r6, #1
 801eb62:	4498      	add	r8, r3
 801eb64:	e008      	b.n	801eb78 <_svfprintf_r+0x960>
 801eb66:	b17b      	cbz	r3, 801eb88 <_svfprintf_r+0x970>
 801eb68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801eb6a:	3301      	adds	r3, #1
 801eb6c:	e7d8      	b.n	801eb20 <_svfprintf_r+0x908>
 801eb6e:	07eb      	lsls	r3, r5, #31
 801eb70:	d521      	bpl.n	801ebb6 <_svfprintf_r+0x99e>
 801eb72:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801eb74:	eb06 0803 	add.w	r8, r6, r3
 801eb78:	2367      	movs	r3, #103	@ 0x67
 801eb7a:	e7d3      	b.n	801eb24 <_svfprintf_r+0x90c>
 801eb7c:	46b0      	mov	r8, r6
 801eb7e:	e7d0      	b.n	801eb22 <_svfprintf_r+0x90a>
 801eb80:	08024e3c 	.word	0x08024e3c
 801eb84:	08024e2c 	.word	0x08024e2c
 801eb88:	2366      	movs	r3, #102	@ 0x66
 801eb8a:	9306      	str	r3, [sp, #24]
 801eb8c:	f04f 0801 	mov.w	r8, #1
 801eb90:	f415 6380 	ands.w	r3, r5, #1024	@ 0x400
 801eb94:	9308      	str	r3, [sp, #32]
 801eb96:	d01f      	beq.n	801ebd8 <_svfprintf_r+0x9c0>
 801eb98:	2700      	movs	r7, #0
 801eb9a:	2e00      	cmp	r6, #0
 801eb9c:	9708      	str	r7, [sp, #32]
 801eb9e:	f77f ae8a 	ble.w	801e8b6 <_svfprintf_r+0x69e>
 801eba2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801eba4:	781b      	ldrb	r3, [r3, #0]
 801eba6:	2bff      	cmp	r3, #255	@ 0xff
 801eba8:	d107      	bne.n	801ebba <_svfprintf_r+0x9a2>
 801ebaa:	9b08      	ldr	r3, [sp, #32]
 801ebac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ebae:	443b      	add	r3, r7
 801ebb0:	fb02 8803 	mla	r8, r2, r3, r8
 801ebb4:	e67f      	b.n	801e8b6 <_svfprintf_r+0x69e>
 801ebb6:	46b0      	mov	r8, r6
 801ebb8:	e7de      	b.n	801eb78 <_svfprintf_r+0x960>
 801ebba:	42b3      	cmp	r3, r6
 801ebbc:	daf5      	bge.n	801ebaa <_svfprintf_r+0x992>
 801ebbe:	1af6      	subs	r6, r6, r3
 801ebc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ebc2:	785b      	ldrb	r3, [r3, #1]
 801ebc4:	b133      	cbz	r3, 801ebd4 <_svfprintf_r+0x9bc>
 801ebc6:	9b08      	ldr	r3, [sp, #32]
 801ebc8:	3301      	adds	r3, #1
 801ebca:	9308      	str	r3, [sp, #32]
 801ebcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ebce:	3301      	adds	r3, #1
 801ebd0:	9309      	str	r3, [sp, #36]	@ 0x24
 801ebd2:	e7e6      	b.n	801eba2 <_svfprintf_r+0x98a>
 801ebd4:	3701      	adds	r7, #1
 801ebd6:	e7e4      	b.n	801eba2 <_svfprintf_r+0x98a>
 801ebd8:	9f08      	ldr	r7, [sp, #32]
 801ebda:	e66c      	b.n	801e8b6 <_svfprintf_r+0x69e>
 801ebdc:	232d      	movs	r3, #45	@ 0x2d
 801ebde:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801ebe2:	e66c      	b.n	801e8be <_svfprintf_r+0x6a6>
 801ebe4:	06af      	lsls	r7, r5, #26
 801ebe6:	d50a      	bpl.n	801ebfe <_svfprintf_r+0x9e6>
 801ebe8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ebea:	6833      	ldr	r3, [r6, #0]
 801ebec:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ebee:	17d2      	asrs	r2, r2, #31
 801ebf0:	e9c3 1200 	strd	r1, r2, [r3]
 801ebf4:	3604      	adds	r6, #4
 801ebf6:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801ebfa:	f7ff bb46 	b.w	801e28a <_svfprintf_r+0x72>
 801ebfe:	06e8      	lsls	r0, r5, #27
 801ec00:	d503      	bpl.n	801ec0a <_svfprintf_r+0x9f2>
 801ec02:	6833      	ldr	r3, [r6, #0]
 801ec04:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ec06:	601a      	str	r2, [r3, #0]
 801ec08:	e7f4      	b.n	801ebf4 <_svfprintf_r+0x9dc>
 801ec0a:	0669      	lsls	r1, r5, #25
 801ec0c:	d503      	bpl.n	801ec16 <_svfprintf_r+0x9fe>
 801ec0e:	6833      	ldr	r3, [r6, #0]
 801ec10:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ec12:	801a      	strh	r2, [r3, #0]
 801ec14:	e7ee      	b.n	801ebf4 <_svfprintf_r+0x9dc>
 801ec16:	05aa      	lsls	r2, r5, #22
 801ec18:	d5f3      	bpl.n	801ec02 <_svfprintf_r+0x9ea>
 801ec1a:	6833      	ldr	r3, [r6, #0]
 801ec1c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ec1e:	701a      	strb	r2, [r3, #0]
 801ec20:	e7e8      	b.n	801ebf4 <_svfprintf_r+0x9dc>
 801ec22:	f045 0510 	orr.w	r5, r5, #16
 801ec26:	f015 0320 	ands.w	r3, r5, #32
 801ec2a:	d020      	beq.n	801ec6e <_svfprintf_r+0xa56>
 801ec2c:	3607      	adds	r6, #7
 801ec2e:	f026 0307 	bic.w	r3, r6, #7
 801ec32:	461a      	mov	r2, r3
 801ec34:	685f      	ldr	r7, [r3, #4]
 801ec36:	f852 6b08 	ldr.w	r6, [r2], #8
 801ec3a:	9207      	str	r2, [sp, #28]
 801ec3c:	f425 6580 	bic.w	r5, r5, #1024	@ 0x400
 801ec40:	2300      	movs	r3, #0
 801ec42:	2200      	movs	r2, #0
 801ec44:	f88d 207b 	strb.w	r2, [sp, #123]	@ 0x7b
 801ec48:	f1b8 3fff 	cmp.w	r8, #4294967295
 801ec4c:	f000 848c 	beq.w	801f568 <_svfprintf_r+0x1350>
 801ec50:	f025 0280 	bic.w	r2, r5, #128	@ 0x80
 801ec54:	9208      	str	r2, [sp, #32]
 801ec56:	ea56 0207 	orrs.w	r2, r6, r7
 801ec5a:	f040 848a 	bne.w	801f572 <_svfprintf_r+0x135a>
 801ec5e:	f1b8 0f00 	cmp.w	r8, #0
 801ec62:	f000 80db 	beq.w	801ee1c <_svfprintf_r+0xc04>
 801ec66:	2b01      	cmp	r3, #1
 801ec68:	f040 8486 	bne.w	801f578 <_svfprintf_r+0x1360>
 801ec6c:	e083      	b.n	801ed76 <_svfprintf_r+0xb5e>
 801ec6e:	4632      	mov	r2, r6
 801ec70:	f015 0710 	ands.w	r7, r5, #16
 801ec74:	f852 6b04 	ldr.w	r6, [r2], #4
 801ec78:	9207      	str	r2, [sp, #28]
 801ec7a:	d001      	beq.n	801ec80 <_svfprintf_r+0xa68>
 801ec7c:	461f      	mov	r7, r3
 801ec7e:	e7dd      	b.n	801ec3c <_svfprintf_r+0xa24>
 801ec80:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801ec84:	d001      	beq.n	801ec8a <_svfprintf_r+0xa72>
 801ec86:	b2b6      	uxth	r6, r6
 801ec88:	e7d8      	b.n	801ec3c <_svfprintf_r+0xa24>
 801ec8a:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801ec8e:	d0d5      	beq.n	801ec3c <_svfprintf_r+0xa24>
 801ec90:	b2f6      	uxtb	r6, r6
 801ec92:	e7f3      	b.n	801ec7c <_svfprintf_r+0xa64>
 801ec94:	4633      	mov	r3, r6
 801ec96:	2278      	movs	r2, #120	@ 0x78
 801ec98:	f853 6b04 	ldr.w	r6, [r3], #4
 801ec9c:	9307      	str	r3, [sp, #28]
 801ec9e:	f647 0330 	movw	r3, #30768	@ 0x7830
 801eca2:	f8ad 307c 	strh.w	r3, [sp, #124]	@ 0x7c
 801eca6:	4b94      	ldr	r3, [pc, #592]	@ (801eef8 <_svfprintf_r+0xce0>)
 801eca8:	9319      	str	r3, [sp, #100]	@ 0x64
 801ecaa:	2700      	movs	r7, #0
 801ecac:	f045 0502 	orr.w	r5, r5, #2
 801ecb0:	2302      	movs	r3, #2
 801ecb2:	9206      	str	r2, [sp, #24]
 801ecb4:	e7c5      	b.n	801ec42 <_svfprintf_r+0xa2a>
 801ecb6:	4633      	mov	r3, r6
 801ecb8:	f1b8 3fff 	cmp.w	r8, #4294967295
 801ecbc:	f853 9b04 	ldr.w	r9, [r3], #4
 801ecc0:	9307      	str	r3, [sp, #28]
 801ecc2:	f04f 0600 	mov.w	r6, #0
 801ecc6:	f88d 607b 	strb.w	r6, [sp, #123]	@ 0x7b
 801ecca:	d00f      	beq.n	801ecec <_svfprintf_r+0xad4>
 801eccc:	4642      	mov	r2, r8
 801ecce:	4631      	mov	r1, r6
 801ecd0:	4648      	mov	r0, r9
 801ecd2:	f7e1 fa85 	bl	80001e0 <memchr>
 801ecd6:	4682      	mov	sl, r0
 801ecd8:	2800      	cmp	r0, #0
 801ecda:	f43f ac81 	beq.w	801e5e0 <_svfprintf_r+0x3c8>
 801ecde:	eba0 0809 	sub.w	r8, r0, r9
 801ece2:	46b2      	mov	sl, r6
 801ece4:	9610      	str	r6, [sp, #64]	@ 0x40
 801ece6:	4637      	mov	r7, r6
 801ece8:	9608      	str	r6, [sp, #32]
 801ecea:	e5eb      	b.n	801e8c4 <_svfprintf_r+0x6ac>
 801ecec:	4648      	mov	r0, r9
 801ecee:	f7e1 fa6f 	bl	80001d0 <strlen>
 801ecf2:	46b2      	mov	sl, r6
 801ecf4:	4680      	mov	r8, r0
 801ecf6:	e473      	b.n	801e5e0 <_svfprintf_r+0x3c8>
 801ecf8:	f045 0510 	orr.w	r5, r5, #16
 801ecfc:	f015 0320 	ands.w	r3, r5, #32
 801ed00:	d009      	beq.n	801ed16 <_svfprintf_r+0xafe>
 801ed02:	3607      	adds	r6, #7
 801ed04:	f026 0307 	bic.w	r3, r6, #7
 801ed08:	461a      	mov	r2, r3
 801ed0a:	685f      	ldr	r7, [r3, #4]
 801ed0c:	f852 6b08 	ldr.w	r6, [r2], #8
 801ed10:	9207      	str	r2, [sp, #28]
 801ed12:	2301      	movs	r3, #1
 801ed14:	e795      	b.n	801ec42 <_svfprintf_r+0xa2a>
 801ed16:	4632      	mov	r2, r6
 801ed18:	f015 0710 	ands.w	r7, r5, #16
 801ed1c:	f852 6b04 	ldr.w	r6, [r2], #4
 801ed20:	9207      	str	r2, [sp, #28]
 801ed22:	d001      	beq.n	801ed28 <_svfprintf_r+0xb10>
 801ed24:	461f      	mov	r7, r3
 801ed26:	e7f4      	b.n	801ed12 <_svfprintf_r+0xafa>
 801ed28:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801ed2c:	d001      	beq.n	801ed32 <_svfprintf_r+0xb1a>
 801ed2e:	b2b6      	uxth	r6, r6
 801ed30:	e7ef      	b.n	801ed12 <_svfprintf_r+0xafa>
 801ed32:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801ed36:	d0ec      	beq.n	801ed12 <_svfprintf_r+0xafa>
 801ed38:	b2f6      	uxtb	r6, r6
 801ed3a:	e7f3      	b.n	801ed24 <_svfprintf_r+0xb0c>
 801ed3c:	4b6f      	ldr	r3, [pc, #444]	@ (801eefc <_svfprintf_r+0xce4>)
 801ed3e:	f7ff bb39 	b.w	801e3b4 <_svfprintf_r+0x19c>
 801ed42:	4632      	mov	r2, r6
 801ed44:	f015 0710 	ands.w	r7, r5, #16
 801ed48:	f852 6b04 	ldr.w	r6, [r2], #4
 801ed4c:	9207      	str	r2, [sp, #28]
 801ed4e:	d002      	beq.n	801ed56 <_svfprintf_r+0xb3e>
 801ed50:	461f      	mov	r7, r3
 801ed52:	f7ff bb3c 	b.w	801e3ce <_svfprintf_r+0x1b6>
 801ed56:	f015 0340 	ands.w	r3, r5, #64	@ 0x40
 801ed5a:	d002      	beq.n	801ed62 <_svfprintf_r+0xb4a>
 801ed5c:	b2b6      	uxth	r6, r6
 801ed5e:	f7ff bb36 	b.w	801e3ce <_svfprintf_r+0x1b6>
 801ed62:	f415 7700 	ands.w	r7, r5, #512	@ 0x200
 801ed66:	f43f ab32 	beq.w	801e3ce <_svfprintf_r+0x1b6>
 801ed6a:	b2f6      	uxtb	r6, r6
 801ed6c:	e7f0      	b.n	801ed50 <_svfprintf_r+0xb38>
 801ed6e:	2e0a      	cmp	r6, #10
 801ed70:	f177 0300 	sbcs.w	r3, r7, #0
 801ed74:	d207      	bcs.n	801ed86 <_svfprintf_r+0xb6e>
 801ed76:	3630      	adds	r6, #48	@ 0x30
 801ed78:	b2f6      	uxtb	r6, r6
 801ed7a:	f88d 6147 	strb.w	r6, [sp, #327]	@ 0x147
 801ed7e:	f20d 1947 	addw	r9, sp, #327	@ 0x147
 801ed82:	f000 bc15 	b.w	801f5b0 <_svfprintf_r+0x1398>
 801ed86:	2300      	movs	r3, #0
 801ed88:	9304      	str	r3, [sp, #16]
 801ed8a:	9b08      	ldr	r3, [sp, #32]
 801ed8c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 801ed90:	ad52      	add	r5, sp, #328	@ 0x148
 801ed92:	9310      	str	r3, [sp, #64]	@ 0x40
 801ed94:	220a      	movs	r2, #10
 801ed96:	2300      	movs	r3, #0
 801ed98:	4630      	mov	r0, r6
 801ed9a:	4639      	mov	r1, r7
 801ed9c:	f7e1 ff74 	bl	8000c88 <__aeabi_uldivmod>
 801eda0:	9b04      	ldr	r3, [sp, #16]
 801eda2:	9011      	str	r0, [sp, #68]	@ 0x44
 801eda4:	3301      	adds	r3, #1
 801eda6:	9304      	str	r3, [sp, #16]
 801eda8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801edaa:	3230      	adds	r2, #48	@ 0x30
 801edac:	468a      	mov	sl, r1
 801edae:	f105 39ff 	add.w	r9, r5, #4294967295
 801edb2:	f805 2c01 	strb.w	r2, [r5, #-1]
 801edb6:	b1d3      	cbz	r3, 801edee <_svfprintf_r+0xbd6>
 801edb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801edba:	9a04      	ldr	r2, [sp, #16]
 801edbc:	781b      	ldrb	r3, [r3, #0]
 801edbe:	429a      	cmp	r2, r3
 801edc0:	d115      	bne.n	801edee <_svfprintf_r+0xbd6>
 801edc2:	2aff      	cmp	r2, #255	@ 0xff
 801edc4:	d013      	beq.n	801edee <_svfprintf_r+0xbd6>
 801edc6:	2e0a      	cmp	r6, #10
 801edc8:	f177 0300 	sbcs.w	r3, r7, #0
 801edcc:	d30f      	bcc.n	801edee <_svfprintf_r+0xbd6>
 801edce:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801edd0:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801edd2:	eba9 0903 	sub.w	r9, r9, r3
 801edd6:	461a      	mov	r2, r3
 801edd8:	4648      	mov	r0, r9
 801edda:	f000 fcfe 	bl	801f7da <strncpy>
 801edde:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ede0:	785b      	ldrb	r3, [r3, #1]
 801ede2:	b11b      	cbz	r3, 801edec <_svfprintf_r+0xbd4>
 801ede4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ede6:	3301      	adds	r3, #1
 801ede8:	9309      	str	r3, [sp, #36]	@ 0x24
 801edea:	2300      	movs	r3, #0
 801edec:	9304      	str	r3, [sp, #16]
 801edee:	2e0a      	cmp	r6, #10
 801edf0:	f177 0700 	sbcs.w	r7, r7, #0
 801edf4:	f0c0 83dc 	bcc.w	801f5b0 <_svfprintf_r+0x1398>
 801edf8:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801edfa:	4657      	mov	r7, sl
 801edfc:	464d      	mov	r5, r9
 801edfe:	e7c9      	b.n	801ed94 <_svfprintf_r+0xb7c>
 801ee00:	f006 030f 	and.w	r3, r6, #15
 801ee04:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801ee06:	0936      	lsrs	r6, r6, #4
 801ee08:	5cd3      	ldrb	r3, [r2, r3]
 801ee0a:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801ee0e:	ea46 7607 	orr.w	r6, r6, r7, lsl #28
 801ee12:	093f      	lsrs	r7, r7, #4
 801ee14:	ea56 0307 	orrs.w	r3, r6, r7
 801ee18:	d1f2      	bne.n	801ee00 <_svfprintf_r+0xbe8>
 801ee1a:	e3c9      	b.n	801f5b0 <_svfprintf_r+0x1398>
 801ee1c:	b91b      	cbnz	r3, 801ee26 <_svfprintf_r+0xc0e>
 801ee1e:	07e9      	lsls	r1, r5, #31
 801ee20:	d501      	bpl.n	801ee26 <_svfprintf_r+0xc0e>
 801ee22:	2630      	movs	r6, #48	@ 0x30
 801ee24:	e7a9      	b.n	801ed7a <_svfprintf_r+0xb62>
 801ee26:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801ee2a:	e3c1      	b.n	801f5b0 <_svfprintf_r+0x1398>
 801ee2c:	9b06      	ldr	r3, [sp, #24]
 801ee2e:	2b00      	cmp	r3, #0
 801ee30:	f000 838f 	beq.w	801f552 <_svfprintf_r+0x133a>
 801ee34:	f88d 30e4 	strb.w	r3, [sp, #228]	@ 0xe4
 801ee38:	2300      	movs	r3, #0
 801ee3a:	f88d 307b 	strb.w	r3, [sp, #123]	@ 0x7b
 801ee3e:	9607      	str	r6, [sp, #28]
 801ee40:	f7ff bb63 	b.w	801e50a <_svfprintf_r+0x2f2>
 801ee44:	2010      	movs	r0, #16
 801ee46:	4403      	add	r3, r0
 801ee48:	2a07      	cmp	r2, #7
 801ee4a:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801ee4e:	6060      	str	r0, [r4, #4]
 801ee50:	dd08      	ble.n	801ee64 <_svfprintf_r+0xc4c>
 801ee52:	9803      	ldr	r0, [sp, #12]
 801ee54:	aa26      	add	r2, sp, #152	@ 0x98
 801ee56:	4659      	mov	r1, fp
 801ee58:	f002 f8b1 	bl	8020fbe <__ssprint_r>
 801ee5c:	2800      	cmp	r0, #0
 801ee5e:	f040 8356 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801ee62:	a929      	add	r1, sp, #164	@ 0xa4
 801ee64:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ee66:	3b10      	subs	r3, #16
 801ee68:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ee6a:	460c      	mov	r4, r1
 801ee6c:	e546      	b.n	801e8fc <_svfprintf_r+0x6e4>
 801ee6e:	460c      	mov	r4, r1
 801ee70:	e561      	b.n	801e936 <_svfprintf_r+0x71e>
 801ee72:	9803      	ldr	r0, [sp, #12]
 801ee74:	aa26      	add	r2, sp, #152	@ 0x98
 801ee76:	4659      	mov	r1, fp
 801ee78:	f002 f8a1 	bl	8020fbe <__ssprint_r>
 801ee7c:	2800      	cmp	r0, #0
 801ee7e:	f040 8346 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801ee82:	ac29      	add	r4, sp, #164	@ 0xa4
 801ee84:	e569      	b.n	801e95a <_svfprintf_r+0x742>
 801ee86:	9803      	ldr	r0, [sp, #12]
 801ee88:	aa26      	add	r2, sp, #152	@ 0x98
 801ee8a:	4659      	mov	r1, fp
 801ee8c:	f002 f897 	bl	8020fbe <__ssprint_r>
 801ee90:	2800      	cmp	r0, #0
 801ee92:	f040 833c 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801ee96:	ac29      	add	r4, sp, #164	@ 0xa4
 801ee98:	e56f      	b.n	801e97a <_svfprintf_r+0x762>
 801ee9a:	2010      	movs	r0, #16
 801ee9c:	4403      	add	r3, r0
 801ee9e:	2a07      	cmp	r2, #7
 801eea0:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801eea4:	6060      	str	r0, [r4, #4]
 801eea6:	dd08      	ble.n	801eeba <_svfprintf_r+0xca2>
 801eea8:	9803      	ldr	r0, [sp, #12]
 801eeaa:	aa26      	add	r2, sp, #152	@ 0x98
 801eeac:	4659      	mov	r1, fp
 801eeae:	f002 f886 	bl	8020fbe <__ssprint_r>
 801eeb2:	2800      	cmp	r0, #0
 801eeb4:	f040 832b 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801eeb8:	a929      	add	r1, sp, #164	@ 0xa4
 801eeba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801eebc:	3b10      	subs	r3, #16
 801eebe:	9313      	str	r3, [sp, #76]	@ 0x4c
 801eec0:	460c      	mov	r4, r1
 801eec2:	e563      	b.n	801e98c <_svfprintf_r+0x774>
 801eec4:	460c      	mov	r4, r1
 801eec6:	e57e      	b.n	801e9c6 <_svfprintf_r+0x7ae>
 801eec8:	2010      	movs	r0, #16
 801eeca:	4403      	add	r3, r0
 801eecc:	2a07      	cmp	r2, #7
 801eece:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801eed2:	6060      	str	r0, [r4, #4]
 801eed4:	dd08      	ble.n	801eee8 <_svfprintf_r+0xcd0>
 801eed6:	9803      	ldr	r0, [sp, #12]
 801eed8:	aa26      	add	r2, sp, #152	@ 0x98
 801eeda:	4659      	mov	r1, fp
 801eedc:	f002 f86f 	bl	8020fbe <__ssprint_r>
 801eee0:	2800      	cmp	r0, #0
 801eee2:	f040 8314 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801eee6:	a929      	add	r1, sp, #164	@ 0xa4
 801eee8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801eeea:	3b10      	subs	r3, #16
 801eeec:	9310      	str	r3, [sp, #64]	@ 0x40
 801eeee:	460c      	mov	r4, r1
 801eef0:	e56f      	b.n	801e9d2 <_svfprintf_r+0x7ba>
 801eef2:	460c      	mov	r4, r1
 801eef4:	e58a      	b.n	801ea0c <_svfprintf_r+0x7f4>
 801eef6:	bf00      	nop
 801eef8:	08024e08 	.word	0x08024e08
 801eefc:	08024e19 	.word	0x08024e19
 801ef00:	9b06      	ldr	r3, [sp, #24]
 801ef02:	2b65      	cmp	r3, #101	@ 0x65
 801ef04:	f340 8246 	ble.w	801f394 <_svfprintf_r+0x117c>
 801ef08:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801ef0c:	2200      	movs	r2, #0
 801ef0e:	2300      	movs	r3, #0
 801ef10:	f7e1 fdda 	bl	8000ac8 <__aeabi_dcmpeq>
 801ef14:	2800      	cmp	r0, #0
 801ef16:	d06a      	beq.n	801efee <_svfprintf_r+0xdd6>
 801ef18:	4b73      	ldr	r3, [pc, #460]	@ (801f0e8 <_svfprintf_r+0xed0>)
 801ef1a:	6023      	str	r3, [r4, #0]
 801ef1c:	2301      	movs	r3, #1
 801ef1e:	6063      	str	r3, [r4, #4]
 801ef20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ef22:	3301      	adds	r3, #1
 801ef24:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ef26:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef28:	3301      	adds	r3, #1
 801ef2a:	2b07      	cmp	r3, #7
 801ef2c:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ef2e:	dc37      	bgt.n	801efa0 <_svfprintf_r+0xd88>
 801ef30:	3408      	adds	r4, #8
 801ef32:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ef34:	9a04      	ldr	r2, [sp, #16]
 801ef36:	4293      	cmp	r3, r2
 801ef38:	db02      	blt.n	801ef40 <_svfprintf_r+0xd28>
 801ef3a:	07ef      	lsls	r7, r5, #31
 801ef3c:	f57f ad76 	bpl.w	801ea2c <_svfprintf_r+0x814>
 801ef40:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ef42:	6023      	str	r3, [r4, #0]
 801ef44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ef46:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801ef48:	6063      	str	r3, [r4, #4]
 801ef4a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ef4c:	4413      	add	r3, r2
 801ef4e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801ef50:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ef52:	3301      	adds	r3, #1
 801ef54:	2b07      	cmp	r3, #7
 801ef56:	9327      	str	r3, [sp, #156]	@ 0x9c
 801ef58:	dc2c      	bgt.n	801efb4 <_svfprintf_r+0xd9c>
 801ef5a:	3408      	adds	r4, #8
 801ef5c:	9b04      	ldr	r3, [sp, #16]
 801ef5e:	1e5e      	subs	r6, r3, #1
 801ef60:	2e00      	cmp	r6, #0
 801ef62:	f77f ad63 	ble.w	801ea2c <_svfprintf_r+0x814>
 801ef66:	4f61      	ldr	r7, [pc, #388]	@ (801f0ec <_svfprintf_r+0xed4>)
 801ef68:	f04f 0810 	mov.w	r8, #16
 801ef6c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801ef70:	2e10      	cmp	r6, #16
 801ef72:	f103 0301 	add.w	r3, r3, #1
 801ef76:	f104 0108 	add.w	r1, r4, #8
 801ef7a:	6027      	str	r7, [r4, #0]
 801ef7c:	dc24      	bgt.n	801efc8 <_svfprintf_r+0xdb0>
 801ef7e:	6066      	str	r6, [r4, #4]
 801ef80:	2b07      	cmp	r3, #7
 801ef82:	4416      	add	r6, r2
 801ef84:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801ef88:	f340 82a0 	ble.w	801f4cc <_svfprintf_r+0x12b4>
 801ef8c:	9803      	ldr	r0, [sp, #12]
 801ef8e:	aa26      	add	r2, sp, #152	@ 0x98
 801ef90:	4659      	mov	r1, fp
 801ef92:	f002 f814 	bl	8020fbe <__ssprint_r>
 801ef96:	2800      	cmp	r0, #0
 801ef98:	f040 82b9 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801ef9c:	ac29      	add	r4, sp, #164	@ 0xa4
 801ef9e:	e545      	b.n	801ea2c <_svfprintf_r+0x814>
 801efa0:	9803      	ldr	r0, [sp, #12]
 801efa2:	aa26      	add	r2, sp, #152	@ 0x98
 801efa4:	4659      	mov	r1, fp
 801efa6:	f002 f80a 	bl	8020fbe <__ssprint_r>
 801efaa:	2800      	cmp	r0, #0
 801efac:	f040 82af 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801efb0:	ac29      	add	r4, sp, #164	@ 0xa4
 801efb2:	e7be      	b.n	801ef32 <_svfprintf_r+0xd1a>
 801efb4:	9803      	ldr	r0, [sp, #12]
 801efb6:	aa26      	add	r2, sp, #152	@ 0x98
 801efb8:	4659      	mov	r1, fp
 801efba:	f002 f800 	bl	8020fbe <__ssprint_r>
 801efbe:	2800      	cmp	r0, #0
 801efc0:	f040 82a5 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801efc4:	ac29      	add	r4, sp, #164	@ 0xa4
 801efc6:	e7c9      	b.n	801ef5c <_svfprintf_r+0xd44>
 801efc8:	3210      	adds	r2, #16
 801efca:	2b07      	cmp	r3, #7
 801efcc:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801efd0:	f8c4 8004 	str.w	r8, [r4, #4]
 801efd4:	dd08      	ble.n	801efe8 <_svfprintf_r+0xdd0>
 801efd6:	9803      	ldr	r0, [sp, #12]
 801efd8:	aa26      	add	r2, sp, #152	@ 0x98
 801efda:	4659      	mov	r1, fp
 801efdc:	f001 ffef 	bl	8020fbe <__ssprint_r>
 801efe0:	2800      	cmp	r0, #0
 801efe2:	f040 8294 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801efe6:	a929      	add	r1, sp, #164	@ 0xa4
 801efe8:	3e10      	subs	r6, #16
 801efea:	460c      	mov	r4, r1
 801efec:	e7be      	b.n	801ef6c <_svfprintf_r+0xd54>
 801efee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eff0:	2b00      	cmp	r3, #0
 801eff2:	dc7d      	bgt.n	801f0f0 <_svfprintf_r+0xed8>
 801eff4:	4b3c      	ldr	r3, [pc, #240]	@ (801f0e8 <_svfprintf_r+0xed0>)
 801eff6:	6023      	str	r3, [r4, #0]
 801eff8:	2301      	movs	r3, #1
 801effa:	6063      	str	r3, [r4, #4]
 801effc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801effe:	3301      	adds	r3, #1
 801f000:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f002:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f004:	3301      	adds	r3, #1
 801f006:	2b07      	cmp	r3, #7
 801f008:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f00a:	dc46      	bgt.n	801f09a <_svfprintf_r+0xe82>
 801f00c:	3408      	adds	r4, #8
 801f00e:	9904      	ldr	r1, [sp, #16]
 801f010:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f012:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801f014:	430b      	orrs	r3, r1
 801f016:	f005 0101 	and.w	r1, r5, #1
 801f01a:	430b      	orrs	r3, r1
 801f01c:	f43f ad06 	beq.w	801ea2c <_svfprintf_r+0x814>
 801f020:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f022:	6023      	str	r3, [r4, #0]
 801f024:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f026:	6063      	str	r3, [r4, #4]
 801f028:	441a      	add	r2, r3
 801f02a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f02c:	9228      	str	r2, [sp, #160]	@ 0xa0
 801f02e:	3301      	adds	r3, #1
 801f030:	2b07      	cmp	r3, #7
 801f032:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f034:	dc3b      	bgt.n	801f0ae <_svfprintf_r+0xe96>
 801f036:	f104 0308 	add.w	r3, r4, #8
 801f03a:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801f03c:	2e00      	cmp	r6, #0
 801f03e:	da1b      	bge.n	801f078 <_svfprintf_r+0xe60>
 801f040:	4f2a      	ldr	r7, [pc, #168]	@ (801f0ec <_svfprintf_r+0xed4>)
 801f042:	4276      	negs	r6, r6
 801f044:	461a      	mov	r2, r3
 801f046:	2410      	movs	r4, #16
 801f048:	e9dd 1027 	ldrd	r1, r0, [sp, #156]	@ 0x9c
 801f04c:	2e10      	cmp	r6, #16
 801f04e:	f101 0101 	add.w	r1, r1, #1
 801f052:	f103 0308 	add.w	r3, r3, #8
 801f056:	6017      	str	r7, [r2, #0]
 801f058:	dc33      	bgt.n	801f0c2 <_svfprintf_r+0xeaa>
 801f05a:	6056      	str	r6, [r2, #4]
 801f05c:	2907      	cmp	r1, #7
 801f05e:	4406      	add	r6, r0
 801f060:	e9cd 1627 	strd	r1, r6, [sp, #156]	@ 0x9c
 801f064:	dd08      	ble.n	801f078 <_svfprintf_r+0xe60>
 801f066:	9803      	ldr	r0, [sp, #12]
 801f068:	aa26      	add	r2, sp, #152	@ 0x98
 801f06a:	4659      	mov	r1, fp
 801f06c:	f001 ffa7 	bl	8020fbe <__ssprint_r>
 801f070:	2800      	cmp	r0, #0
 801f072:	f040 824c 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f076:	ab29      	add	r3, sp, #164	@ 0xa4
 801f078:	9a04      	ldr	r2, [sp, #16]
 801f07a:	9904      	ldr	r1, [sp, #16]
 801f07c:	605a      	str	r2, [r3, #4]
 801f07e:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
 801f080:	f8c3 9000 	str.w	r9, [r3]
 801f084:	440a      	add	r2, r1
 801f086:	9228      	str	r2, [sp, #160]	@ 0xa0
 801f088:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801f08a:	3201      	adds	r2, #1
 801f08c:	2a07      	cmp	r2, #7
 801f08e:	9227      	str	r2, [sp, #156]	@ 0x9c
 801f090:	f73f af7c 	bgt.w	801ef8c <_svfprintf_r+0xd74>
 801f094:	f103 0408 	add.w	r4, r3, #8
 801f098:	e4c8      	b.n	801ea2c <_svfprintf_r+0x814>
 801f09a:	9803      	ldr	r0, [sp, #12]
 801f09c:	aa26      	add	r2, sp, #152	@ 0x98
 801f09e:	4659      	mov	r1, fp
 801f0a0:	f001 ff8d 	bl	8020fbe <__ssprint_r>
 801f0a4:	2800      	cmp	r0, #0
 801f0a6:	f040 8232 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f0aa:	ac29      	add	r4, sp, #164	@ 0xa4
 801f0ac:	e7af      	b.n	801f00e <_svfprintf_r+0xdf6>
 801f0ae:	9803      	ldr	r0, [sp, #12]
 801f0b0:	aa26      	add	r2, sp, #152	@ 0x98
 801f0b2:	4659      	mov	r1, fp
 801f0b4:	f001 ff83 	bl	8020fbe <__ssprint_r>
 801f0b8:	2800      	cmp	r0, #0
 801f0ba:	f040 8228 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f0be:	ab29      	add	r3, sp, #164	@ 0xa4
 801f0c0:	e7bb      	b.n	801f03a <_svfprintf_r+0xe22>
 801f0c2:	3010      	adds	r0, #16
 801f0c4:	2907      	cmp	r1, #7
 801f0c6:	e9cd 1027 	strd	r1, r0, [sp, #156]	@ 0x9c
 801f0ca:	6054      	str	r4, [r2, #4]
 801f0cc:	dd08      	ble.n	801f0e0 <_svfprintf_r+0xec8>
 801f0ce:	9803      	ldr	r0, [sp, #12]
 801f0d0:	aa26      	add	r2, sp, #152	@ 0x98
 801f0d2:	4659      	mov	r1, fp
 801f0d4:	f001 ff73 	bl	8020fbe <__ssprint_r>
 801f0d8:	2800      	cmp	r0, #0
 801f0da:	f040 8218 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f0de:	ab29      	add	r3, sp, #164	@ 0xa4
 801f0e0:	3e10      	subs	r6, #16
 801f0e2:	461a      	mov	r2, r3
 801f0e4:	e7b0      	b.n	801f048 <_svfprintf_r+0xe30>
 801f0e6:	bf00      	nop
 801f0e8:	08024e2a 	.word	0x08024e2a
 801f0ec:	08024e2c 	.word	0x08024e2c
 801f0f0:	9b04      	ldr	r3, [sp, #16]
 801f0f2:	444b      	add	r3, r9
 801f0f4:	9306      	str	r3, [sp, #24]
 801f0f6:	9b04      	ldr	r3, [sp, #16]
 801f0f8:	42b3      	cmp	r3, r6
 801f0fa:	bfa8      	it	ge
 801f0fc:	4633      	movge	r3, r6
 801f0fe:	2b00      	cmp	r3, #0
 801f100:	4698      	mov	r8, r3
 801f102:	dd0b      	ble.n	801f11c <_svfprintf_r+0xf04>
 801f104:	e9c4 9300 	strd	r9, r3, [r4]
 801f108:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f10a:	4443      	add	r3, r8
 801f10c:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f10e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f110:	3301      	adds	r3, #1
 801f112:	2b07      	cmp	r3, #7
 801f114:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f116:	f300 8089 	bgt.w	801f22c <_svfprintf_r+0x1014>
 801f11a:	3408      	adds	r4, #8
 801f11c:	4643      	mov	r3, r8
 801f11e:	2b00      	cmp	r3, #0
 801f120:	bfac      	ite	ge
 801f122:	eba6 0808 	subge.w	r8, r6, r8
 801f126:	46b0      	movlt	r8, r6
 801f128:	f1b8 0f00 	cmp.w	r8, #0
 801f12c:	dd1b      	ble.n	801f166 <_svfprintf_r+0xf4e>
 801f12e:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	@ 0x9c
 801f132:	4897      	ldr	r0, [pc, #604]	@ (801f390 <_svfprintf_r+0x1178>)
 801f134:	6020      	str	r0, [r4, #0]
 801f136:	f1b8 0f10 	cmp.w	r8, #16
 801f13a:	f102 0201 	add.w	r2, r2, #1
 801f13e:	f104 0108 	add.w	r1, r4, #8
 801f142:	dc7d      	bgt.n	801f240 <_svfprintf_r+0x1028>
 801f144:	4443      	add	r3, r8
 801f146:	2a07      	cmp	r2, #7
 801f148:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801f14c:	f8c4 8004 	str.w	r8, [r4, #4]
 801f150:	f340 808a 	ble.w	801f268 <_svfprintf_r+0x1050>
 801f154:	9803      	ldr	r0, [sp, #12]
 801f156:	aa26      	add	r2, sp, #152	@ 0x98
 801f158:	4659      	mov	r1, fp
 801f15a:	f001 ff30 	bl	8020fbe <__ssprint_r>
 801f15e:	2800      	cmp	r0, #0
 801f160:	f040 81d5 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f164:	ac29      	add	r4, sp, #164	@ 0xa4
 801f166:	eb09 0806 	add.w	r8, r9, r6
 801f16a:	056e      	lsls	r6, r5, #21
 801f16c:	d508      	bpl.n	801f180 <_svfprintf_r+0xf68>
 801f16e:	9b08      	ldr	r3, [sp, #32]
 801f170:	2b00      	cmp	r3, #0
 801f172:	d17b      	bne.n	801f26c <_svfprintf_r+0x1054>
 801f174:	2f00      	cmp	r7, #0
 801f176:	d17b      	bne.n	801f270 <_svfprintf_r+0x1058>
 801f178:	9b06      	ldr	r3, [sp, #24]
 801f17a:	4598      	cmp	r8, r3
 801f17c:	bf28      	it	cs
 801f17e:	4698      	movcs	r8, r3
 801f180:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f182:	9a04      	ldr	r2, [sp, #16]
 801f184:	4293      	cmp	r3, r2
 801f186:	db01      	blt.n	801f18c <_svfprintf_r+0xf74>
 801f188:	07e8      	lsls	r0, r5, #31
 801f18a:	d50e      	bpl.n	801f1aa <_svfprintf_r+0xf92>
 801f18c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f18e:	6023      	str	r3, [r4, #0]
 801f190:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f192:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801f194:	6063      	str	r3, [r4, #4]
 801f196:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f198:	4413      	add	r3, r2
 801f19a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f19c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f19e:	3301      	adds	r3, #1
 801f1a0:	2b07      	cmp	r3, #7
 801f1a2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f1a4:	f300 80df 	bgt.w	801f366 <_svfprintf_r+0x114e>
 801f1a8:	3408      	adds	r4, #8
 801f1aa:	9b04      	ldr	r3, [sp, #16]
 801f1ac:	9f20      	ldr	r7, [sp, #128]	@ 0x80
 801f1ae:	1bdf      	subs	r7, r3, r7
 801f1b0:	9b06      	ldr	r3, [sp, #24]
 801f1b2:	eba3 0308 	sub.w	r3, r3, r8
 801f1b6:	429f      	cmp	r7, r3
 801f1b8:	bfa8      	it	ge
 801f1ba:	461f      	movge	r7, r3
 801f1bc:	2f00      	cmp	r7, #0
 801f1be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f1c0:	dd0a      	ble.n	801f1d8 <_svfprintf_r+0xfc0>
 801f1c2:	443b      	add	r3, r7
 801f1c4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f1c6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f1c8:	3301      	adds	r3, #1
 801f1ca:	2b07      	cmp	r3, #7
 801f1cc:	e9c4 8700 	strd	r8, r7, [r4]
 801f1d0:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f1d2:	f300 80d2 	bgt.w	801f37a <_svfprintf_r+0x1162>
 801f1d6:	3408      	adds	r4, #8
 801f1d8:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 801f1da:	9b04      	ldr	r3, [sp, #16]
 801f1dc:	2f00      	cmp	r7, #0
 801f1de:	eba3 0606 	sub.w	r6, r3, r6
 801f1e2:	bfa8      	it	ge
 801f1e4:	1bf6      	subge	r6, r6, r7
 801f1e6:	2e00      	cmp	r6, #0
 801f1e8:	f77f ac20 	ble.w	801ea2c <_svfprintf_r+0x814>
 801f1ec:	4f68      	ldr	r7, [pc, #416]	@ (801f390 <_svfprintf_r+0x1178>)
 801f1ee:	f04f 0810 	mov.w	r8, #16
 801f1f2:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801f1f6:	2e10      	cmp	r6, #16
 801f1f8:	f103 0301 	add.w	r3, r3, #1
 801f1fc:	f104 0108 	add.w	r1, r4, #8
 801f200:	6027      	str	r7, [r4, #0]
 801f202:	f77f aebc 	ble.w	801ef7e <_svfprintf_r+0xd66>
 801f206:	3210      	adds	r2, #16
 801f208:	2b07      	cmp	r3, #7
 801f20a:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801f20e:	f8c4 8004 	str.w	r8, [r4, #4]
 801f212:	dd08      	ble.n	801f226 <_svfprintf_r+0x100e>
 801f214:	9803      	ldr	r0, [sp, #12]
 801f216:	aa26      	add	r2, sp, #152	@ 0x98
 801f218:	4659      	mov	r1, fp
 801f21a:	f001 fed0 	bl	8020fbe <__ssprint_r>
 801f21e:	2800      	cmp	r0, #0
 801f220:	f040 8175 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f224:	a929      	add	r1, sp, #164	@ 0xa4
 801f226:	3e10      	subs	r6, #16
 801f228:	460c      	mov	r4, r1
 801f22a:	e7e2      	b.n	801f1f2 <_svfprintf_r+0xfda>
 801f22c:	9803      	ldr	r0, [sp, #12]
 801f22e:	aa26      	add	r2, sp, #152	@ 0x98
 801f230:	4659      	mov	r1, fp
 801f232:	f001 fec4 	bl	8020fbe <__ssprint_r>
 801f236:	2800      	cmp	r0, #0
 801f238:	f040 8169 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f23c:	ac29      	add	r4, sp, #164	@ 0xa4
 801f23e:	e76d      	b.n	801f11c <_svfprintf_r+0xf04>
 801f240:	2010      	movs	r0, #16
 801f242:	4403      	add	r3, r0
 801f244:	2a07      	cmp	r2, #7
 801f246:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801f24a:	6060      	str	r0, [r4, #4]
 801f24c:	dd08      	ble.n	801f260 <_svfprintf_r+0x1048>
 801f24e:	9803      	ldr	r0, [sp, #12]
 801f250:	aa26      	add	r2, sp, #152	@ 0x98
 801f252:	4659      	mov	r1, fp
 801f254:	f001 feb3 	bl	8020fbe <__ssprint_r>
 801f258:	2800      	cmp	r0, #0
 801f25a:	f040 8158 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f25e:	a929      	add	r1, sp, #164	@ 0xa4
 801f260:	f1a8 0810 	sub.w	r8, r8, #16
 801f264:	460c      	mov	r4, r1
 801f266:	e762      	b.n	801f12e <_svfprintf_r+0xf16>
 801f268:	460c      	mov	r4, r1
 801f26a:	e77c      	b.n	801f166 <_svfprintf_r+0xf4e>
 801f26c:	2f00      	cmp	r7, #0
 801f26e:	d04a      	beq.n	801f306 <_svfprintf_r+0x10ee>
 801f270:	3f01      	subs	r7, #1
 801f272:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f274:	6023      	str	r3, [r4, #0]
 801f276:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f278:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f27a:	6063      	str	r3, [r4, #4]
 801f27c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f27e:	4413      	add	r3, r2
 801f280:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f282:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f284:	3301      	adds	r3, #1
 801f286:	2b07      	cmp	r3, #7
 801f288:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f28a:	dc43      	bgt.n	801f314 <_svfprintf_r+0x10fc>
 801f28c:	3408      	adds	r4, #8
 801f28e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f290:	781a      	ldrb	r2, [r3, #0]
 801f292:	9b06      	ldr	r3, [sp, #24]
 801f294:	eba3 0308 	sub.w	r3, r3, r8
 801f298:	429a      	cmp	r2, r3
 801f29a:	bfa8      	it	ge
 801f29c:	461a      	movge	r2, r3
 801f29e:	2a00      	cmp	r2, #0
 801f2a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f2a2:	4691      	mov	r9, r2
 801f2a4:	dd09      	ble.n	801f2ba <_svfprintf_r+0x10a2>
 801f2a6:	4413      	add	r3, r2
 801f2a8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f2aa:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f2ac:	3301      	adds	r3, #1
 801f2ae:	2b07      	cmp	r3, #7
 801f2b0:	e9c4 8200 	strd	r8, r2, [r4]
 801f2b4:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f2b6:	dc37      	bgt.n	801f328 <_svfprintf_r+0x1110>
 801f2b8:	3408      	adds	r4, #8
 801f2ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f2bc:	781e      	ldrb	r6, [r3, #0]
 801f2be:	f1b9 0f00 	cmp.w	r9, #0
 801f2c2:	bfa8      	it	ge
 801f2c4:	eba6 0609 	subge.w	r6, r6, r9
 801f2c8:	2e00      	cmp	r6, #0
 801f2ca:	dd18      	ble.n	801f2fe <_svfprintf_r+0x10e6>
 801f2cc:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801f2d0:	482f      	ldr	r0, [pc, #188]	@ (801f390 <_svfprintf_r+0x1178>)
 801f2d2:	6020      	str	r0, [r4, #0]
 801f2d4:	2e10      	cmp	r6, #16
 801f2d6:	f103 0301 	add.w	r3, r3, #1
 801f2da:	f104 0108 	add.w	r1, r4, #8
 801f2de:	dc2d      	bgt.n	801f33c <_svfprintf_r+0x1124>
 801f2e0:	6066      	str	r6, [r4, #4]
 801f2e2:	2b07      	cmp	r3, #7
 801f2e4:	4416      	add	r6, r2
 801f2e6:	e9cd 3627 	strd	r3, r6, [sp, #156]	@ 0x9c
 801f2ea:	dd3a      	ble.n	801f362 <_svfprintf_r+0x114a>
 801f2ec:	9803      	ldr	r0, [sp, #12]
 801f2ee:	aa26      	add	r2, sp, #152	@ 0x98
 801f2f0:	4659      	mov	r1, fp
 801f2f2:	f001 fe64 	bl	8020fbe <__ssprint_r>
 801f2f6:	2800      	cmp	r0, #0
 801f2f8:	f040 8109 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f2fc:	ac29      	add	r4, sp, #164	@ 0xa4
 801f2fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f300:	781b      	ldrb	r3, [r3, #0]
 801f302:	4498      	add	r8, r3
 801f304:	e733      	b.n	801f16e <_svfprintf_r+0xf56>
 801f306:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f308:	3b01      	subs	r3, #1
 801f30a:	9309      	str	r3, [sp, #36]	@ 0x24
 801f30c:	9b08      	ldr	r3, [sp, #32]
 801f30e:	3b01      	subs	r3, #1
 801f310:	9308      	str	r3, [sp, #32]
 801f312:	e7ae      	b.n	801f272 <_svfprintf_r+0x105a>
 801f314:	9803      	ldr	r0, [sp, #12]
 801f316:	aa26      	add	r2, sp, #152	@ 0x98
 801f318:	4659      	mov	r1, fp
 801f31a:	f001 fe50 	bl	8020fbe <__ssprint_r>
 801f31e:	2800      	cmp	r0, #0
 801f320:	f040 80f5 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f324:	ac29      	add	r4, sp, #164	@ 0xa4
 801f326:	e7b2      	b.n	801f28e <_svfprintf_r+0x1076>
 801f328:	9803      	ldr	r0, [sp, #12]
 801f32a:	aa26      	add	r2, sp, #152	@ 0x98
 801f32c:	4659      	mov	r1, fp
 801f32e:	f001 fe46 	bl	8020fbe <__ssprint_r>
 801f332:	2800      	cmp	r0, #0
 801f334:	f040 80eb 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f338:	ac29      	add	r4, sp, #164	@ 0xa4
 801f33a:	e7be      	b.n	801f2ba <_svfprintf_r+0x10a2>
 801f33c:	2010      	movs	r0, #16
 801f33e:	4402      	add	r2, r0
 801f340:	2b07      	cmp	r3, #7
 801f342:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801f346:	6060      	str	r0, [r4, #4]
 801f348:	dd08      	ble.n	801f35c <_svfprintf_r+0x1144>
 801f34a:	9803      	ldr	r0, [sp, #12]
 801f34c:	aa26      	add	r2, sp, #152	@ 0x98
 801f34e:	4659      	mov	r1, fp
 801f350:	f001 fe35 	bl	8020fbe <__ssprint_r>
 801f354:	2800      	cmp	r0, #0
 801f356:	f040 80da 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f35a:	a929      	add	r1, sp, #164	@ 0xa4
 801f35c:	3e10      	subs	r6, #16
 801f35e:	460c      	mov	r4, r1
 801f360:	e7b4      	b.n	801f2cc <_svfprintf_r+0x10b4>
 801f362:	460c      	mov	r4, r1
 801f364:	e7cb      	b.n	801f2fe <_svfprintf_r+0x10e6>
 801f366:	9803      	ldr	r0, [sp, #12]
 801f368:	aa26      	add	r2, sp, #152	@ 0x98
 801f36a:	4659      	mov	r1, fp
 801f36c:	f001 fe27 	bl	8020fbe <__ssprint_r>
 801f370:	2800      	cmp	r0, #0
 801f372:	f040 80cc 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f376:	ac29      	add	r4, sp, #164	@ 0xa4
 801f378:	e717      	b.n	801f1aa <_svfprintf_r+0xf92>
 801f37a:	9803      	ldr	r0, [sp, #12]
 801f37c:	aa26      	add	r2, sp, #152	@ 0x98
 801f37e:	4659      	mov	r1, fp
 801f380:	f001 fe1d 	bl	8020fbe <__ssprint_r>
 801f384:	2800      	cmp	r0, #0
 801f386:	f040 80c2 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f38a:	ac29      	add	r4, sp, #164	@ 0xa4
 801f38c:	e724      	b.n	801f1d8 <_svfprintf_r+0xfc0>
 801f38e:	bf00      	nop
 801f390:	08024e2c 	.word	0x08024e2c
 801f394:	9904      	ldr	r1, [sp, #16]
 801f396:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f398:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801f39a:	2901      	cmp	r1, #1
 801f39c:	f103 0301 	add.w	r3, r3, #1
 801f3a0:	f102 0201 	add.w	r2, r2, #1
 801f3a4:	f104 0608 	add.w	r6, r4, #8
 801f3a8:	dc02      	bgt.n	801f3b0 <_svfprintf_r+0x1198>
 801f3aa:	07e9      	lsls	r1, r5, #31
 801f3ac:	f140 8083 	bpl.w	801f4b6 <_svfprintf_r+0x129e>
 801f3b0:	2101      	movs	r1, #1
 801f3b2:	2a07      	cmp	r2, #7
 801f3b4:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801f3b8:	f8c4 9000 	str.w	r9, [r4]
 801f3bc:	6061      	str	r1, [r4, #4]
 801f3be:	dd08      	ble.n	801f3d2 <_svfprintf_r+0x11ba>
 801f3c0:	9803      	ldr	r0, [sp, #12]
 801f3c2:	aa26      	add	r2, sp, #152	@ 0x98
 801f3c4:	4659      	mov	r1, fp
 801f3c6:	f001 fdfa 	bl	8020fbe <__ssprint_r>
 801f3ca:	2800      	cmp	r0, #0
 801f3cc:	f040 809f 	bne.w	801f50e <_svfprintf_r+0x12f6>
 801f3d0:	ae29      	add	r6, sp, #164	@ 0xa4
 801f3d2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f3d4:	6033      	str	r3, [r6, #0]
 801f3d6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f3d8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801f3da:	6073      	str	r3, [r6, #4]
 801f3dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f3de:	4413      	add	r3, r2
 801f3e0:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f3e2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f3e4:	3301      	adds	r3, #1
 801f3e6:	2b07      	cmp	r3, #7
 801f3e8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f3ea:	dc33      	bgt.n	801f454 <_svfprintf_r+0x123c>
 801f3ec:	3608      	adds	r6, #8
 801f3ee:	9b04      	ldr	r3, [sp, #16]
 801f3f0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 801f3f4:	1e5c      	subs	r4, r3, #1
 801f3f6:	2200      	movs	r2, #0
 801f3f8:	2300      	movs	r3, #0
 801f3fa:	e9dd 8727 	ldrd	r8, r7, [sp, #156]	@ 0x9c
 801f3fe:	f7e1 fb63 	bl	8000ac8 <__aeabi_dcmpeq>
 801f402:	2800      	cmp	r0, #0
 801f404:	d12f      	bne.n	801f466 <_svfprintf_r+0x124e>
 801f406:	f109 0201 	add.w	r2, r9, #1
 801f40a:	e9c6 2400 	strd	r2, r4, [r6]
 801f40e:	9a04      	ldr	r2, [sp, #16]
 801f410:	f108 0301 	add.w	r3, r8, #1
 801f414:	3f01      	subs	r7, #1
 801f416:	4417      	add	r7, r2
 801f418:	2b07      	cmp	r3, #7
 801f41a:	e9cd 3727 	strd	r3, r7, [sp, #156]	@ 0x9c
 801f41e:	dd53      	ble.n	801f4c8 <_svfprintf_r+0x12b0>
 801f420:	9803      	ldr	r0, [sp, #12]
 801f422:	aa26      	add	r2, sp, #152	@ 0x98
 801f424:	4659      	mov	r1, fp
 801f426:	f001 fdca 	bl	8020fbe <__ssprint_r>
 801f42a:	2800      	cmp	r0, #0
 801f42c:	d16f      	bne.n	801f50e <_svfprintf_r+0x12f6>
 801f42e:	ae29      	add	r6, sp, #164	@ 0xa4
 801f430:	ab22      	add	r3, sp, #136	@ 0x88
 801f432:	6033      	str	r3, [r6, #0]
 801f434:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f436:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f438:	6073      	str	r3, [r6, #4]
 801f43a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f43c:	4413      	add	r3, r2
 801f43e:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f440:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f442:	3301      	adds	r3, #1
 801f444:	2b07      	cmp	r3, #7
 801f446:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f448:	f73f ada0 	bgt.w	801ef8c <_svfprintf_r+0xd74>
 801f44c:	f106 0408 	add.w	r4, r6, #8
 801f450:	f7ff baec 	b.w	801ea2c <_svfprintf_r+0x814>
 801f454:	9803      	ldr	r0, [sp, #12]
 801f456:	aa26      	add	r2, sp, #152	@ 0x98
 801f458:	4659      	mov	r1, fp
 801f45a:	f001 fdb0 	bl	8020fbe <__ssprint_r>
 801f45e:	2800      	cmp	r0, #0
 801f460:	d155      	bne.n	801f50e <_svfprintf_r+0x12f6>
 801f462:	ae29      	add	r6, sp, #164	@ 0xa4
 801f464:	e7c3      	b.n	801f3ee <_svfprintf_r+0x11d6>
 801f466:	9b04      	ldr	r3, [sp, #16]
 801f468:	2b01      	cmp	r3, #1
 801f46a:	dde1      	ble.n	801f430 <_svfprintf_r+0x1218>
 801f46c:	4f57      	ldr	r7, [pc, #348]	@ (801f5cc <_svfprintf_r+0x13b4>)
 801f46e:	f04f 0810 	mov.w	r8, #16
 801f472:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801f476:	2c10      	cmp	r4, #16
 801f478:	f103 0301 	add.w	r3, r3, #1
 801f47c:	f106 0108 	add.w	r1, r6, #8
 801f480:	6037      	str	r7, [r6, #0]
 801f482:	dc07      	bgt.n	801f494 <_svfprintf_r+0x127c>
 801f484:	6074      	str	r4, [r6, #4]
 801f486:	2b07      	cmp	r3, #7
 801f488:	4414      	add	r4, r2
 801f48a:	e9cd 3427 	strd	r3, r4, [sp, #156]	@ 0x9c
 801f48e:	dcc7      	bgt.n	801f420 <_svfprintf_r+0x1208>
 801f490:	460e      	mov	r6, r1
 801f492:	e7cd      	b.n	801f430 <_svfprintf_r+0x1218>
 801f494:	3210      	adds	r2, #16
 801f496:	2b07      	cmp	r3, #7
 801f498:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801f49c:	f8c6 8004 	str.w	r8, [r6, #4]
 801f4a0:	dd06      	ble.n	801f4b0 <_svfprintf_r+0x1298>
 801f4a2:	9803      	ldr	r0, [sp, #12]
 801f4a4:	aa26      	add	r2, sp, #152	@ 0x98
 801f4a6:	4659      	mov	r1, fp
 801f4a8:	f001 fd89 	bl	8020fbe <__ssprint_r>
 801f4ac:	bb78      	cbnz	r0, 801f50e <_svfprintf_r+0x12f6>
 801f4ae:	a929      	add	r1, sp, #164	@ 0xa4
 801f4b0:	3c10      	subs	r4, #16
 801f4b2:	460e      	mov	r6, r1
 801f4b4:	e7dd      	b.n	801f472 <_svfprintf_r+0x125a>
 801f4b6:	2101      	movs	r1, #1
 801f4b8:	2a07      	cmp	r2, #7
 801f4ba:	e9cd 2327 	strd	r2, r3, [sp, #156]	@ 0x9c
 801f4be:	f8c4 9000 	str.w	r9, [r4]
 801f4c2:	6061      	str	r1, [r4, #4]
 801f4c4:	ddb4      	ble.n	801f430 <_svfprintf_r+0x1218>
 801f4c6:	e7ab      	b.n	801f420 <_svfprintf_r+0x1208>
 801f4c8:	3608      	adds	r6, #8
 801f4ca:	e7b1      	b.n	801f430 <_svfprintf_r+0x1218>
 801f4cc:	460c      	mov	r4, r1
 801f4ce:	f7ff baad 	b.w	801ea2c <_svfprintf_r+0x814>
 801f4d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f4d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f4d6:	1a9d      	subs	r5, r3, r2
 801f4d8:	2d00      	cmp	r5, #0
 801f4da:	f77f aaaa 	ble.w	801ea32 <_svfprintf_r+0x81a>
 801f4de:	4e3c      	ldr	r6, [pc, #240]	@ (801f5d0 <_svfprintf_r+0x13b8>)
 801f4e0:	2710      	movs	r7, #16
 801f4e2:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	@ 0x9c
 801f4e6:	2d10      	cmp	r5, #16
 801f4e8:	f103 0301 	add.w	r3, r3, #1
 801f4ec:	6026      	str	r6, [r4, #0]
 801f4ee:	dc18      	bgt.n	801f522 <_svfprintf_r+0x130a>
 801f4f0:	442a      	add	r2, r5
 801f4f2:	2b07      	cmp	r3, #7
 801f4f4:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801f4f8:	6065      	str	r5, [r4, #4]
 801f4fa:	f77f aa9a 	ble.w	801ea32 <_svfprintf_r+0x81a>
 801f4fe:	9803      	ldr	r0, [sp, #12]
 801f500:	aa26      	add	r2, sp, #152	@ 0x98
 801f502:	4659      	mov	r1, fp
 801f504:	f001 fd5b 	bl	8020fbe <__ssprint_r>
 801f508:	2800      	cmp	r0, #0
 801f50a:	f43f aa92 	beq.w	801ea32 <_svfprintf_r+0x81a>
 801f50e:	f1ba 0f00 	cmp.w	sl, #0
 801f512:	f43f a89a 	beq.w	801e64a <_svfprintf_r+0x432>
 801f516:	9803      	ldr	r0, [sp, #12]
 801f518:	4651      	mov	r1, sl
 801f51a:	f7fe fb77 	bl	801dc0c <_free_r>
 801f51e:	f7ff b894 	b.w	801e64a <_svfprintf_r+0x432>
 801f522:	3210      	adds	r2, #16
 801f524:	2b07      	cmp	r3, #7
 801f526:	e9cd 3227 	strd	r3, r2, [sp, #156]	@ 0x9c
 801f52a:	6067      	str	r7, [r4, #4]
 801f52c:	dc02      	bgt.n	801f534 <_svfprintf_r+0x131c>
 801f52e:	3408      	adds	r4, #8
 801f530:	3d10      	subs	r5, #16
 801f532:	e7d6      	b.n	801f4e2 <_svfprintf_r+0x12ca>
 801f534:	9803      	ldr	r0, [sp, #12]
 801f536:	aa26      	add	r2, sp, #152	@ 0x98
 801f538:	4659      	mov	r1, fp
 801f53a:	f001 fd40 	bl	8020fbe <__ssprint_r>
 801f53e:	2800      	cmp	r0, #0
 801f540:	d1e5      	bne.n	801f50e <_svfprintf_r+0x12f6>
 801f542:	ac29      	add	r4, sp, #164	@ 0xa4
 801f544:	e7f4      	b.n	801f530 <_svfprintf_r+0x1318>
 801f546:	9803      	ldr	r0, [sp, #12]
 801f548:	4651      	mov	r1, sl
 801f54a:	f7fe fb5f 	bl	801dc0c <_free_r>
 801f54e:	f7ff ba88 	b.w	801ea62 <_svfprintf_r+0x84a>
 801f552:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f554:	2b00      	cmp	r3, #0
 801f556:	f43f a878 	beq.w	801e64a <_svfprintf_r+0x432>
 801f55a:	9803      	ldr	r0, [sp, #12]
 801f55c:	aa26      	add	r2, sp, #152	@ 0x98
 801f55e:	4659      	mov	r1, fp
 801f560:	f001 fd2d 	bl	8020fbe <__ssprint_r>
 801f564:	f7ff b871 	b.w	801e64a <_svfprintf_r+0x432>
 801f568:	ea56 0207 	orrs.w	r2, r6, r7
 801f56c:	9508      	str	r5, [sp, #32]
 801f56e:	f43f ab7a 	beq.w	801ec66 <_svfprintf_r+0xa4e>
 801f572:	2b01      	cmp	r3, #1
 801f574:	f43f abfb 	beq.w	801ed6e <_svfprintf_r+0xb56>
 801f578:	2b02      	cmp	r3, #2
 801f57a:	f50d 79a4 	add.w	r9, sp, #328	@ 0x148
 801f57e:	f43f ac3f 	beq.w	801ee00 <_svfprintf_r+0xbe8>
 801f582:	f006 0307 	and.w	r3, r6, #7
 801f586:	08f6      	lsrs	r6, r6, #3
 801f588:	ea46 7647 	orr.w	r6, r6, r7, lsl #29
 801f58c:	08ff      	lsrs	r7, r7, #3
 801f58e:	3330      	adds	r3, #48	@ 0x30
 801f590:	ea56 0107 	orrs.w	r1, r6, r7
 801f594:	464a      	mov	r2, r9
 801f596:	f809 3d01 	strb.w	r3, [r9, #-1]!
 801f59a:	d1f2      	bne.n	801f582 <_svfprintf_r+0x136a>
 801f59c:	9908      	ldr	r1, [sp, #32]
 801f59e:	07c8      	lsls	r0, r1, #31
 801f5a0:	d506      	bpl.n	801f5b0 <_svfprintf_r+0x1398>
 801f5a2:	2b30      	cmp	r3, #48	@ 0x30
 801f5a4:	d004      	beq.n	801f5b0 <_svfprintf_r+0x1398>
 801f5a6:	2330      	movs	r3, #48	@ 0x30
 801f5a8:	f809 3c01 	strb.w	r3, [r9, #-1]
 801f5ac:	f1a2 0902 	sub.w	r9, r2, #2
 801f5b0:	ab52      	add	r3, sp, #328	@ 0x148
 801f5b2:	9d08      	ldr	r5, [sp, #32]
 801f5b4:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 801f5b8:	f04f 0a00 	mov.w	sl, #0
 801f5bc:	eba3 0809 	sub.w	r8, r3, r9
 801f5c0:	4657      	mov	r7, sl
 801f5c2:	f8cd a020 	str.w	sl, [sp, #32]
 801f5c6:	4656      	mov	r6, sl
 801f5c8:	f7ff b97c 	b.w	801e8c4 <_svfprintf_r+0x6ac>
 801f5cc:	08024e2c 	.word	0x08024e2c
 801f5d0:	08024e3c 	.word	0x08024e3c

0801f5d4 <_fclose_r>:
 801f5d4:	b570      	push	{r4, r5, r6, lr}
 801f5d6:	4605      	mov	r5, r0
 801f5d8:	460c      	mov	r4, r1
 801f5da:	b1b1      	cbz	r1, 801f60a <_fclose_r+0x36>
 801f5dc:	b118      	cbz	r0, 801f5e6 <_fclose_r+0x12>
 801f5de:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f5e0:	b90b      	cbnz	r3, 801f5e6 <_fclose_r+0x12>
 801f5e2:	f7fe f949 	bl	801d878 <__sinit>
 801f5e6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f5e8:	07de      	lsls	r6, r3, #31
 801f5ea:	d405      	bmi.n	801f5f8 <_fclose_r+0x24>
 801f5ec:	89a3      	ldrh	r3, [r4, #12]
 801f5ee:	0598      	lsls	r0, r3, #22
 801f5f0:	d402      	bmi.n	801f5f8 <_fclose_r+0x24>
 801f5f2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f5f4:	f7fe fa94 	bl	801db20 <__retarget_lock_acquire_recursive>
 801f5f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f5fc:	b943      	cbnz	r3, 801f610 <_fclose_r+0x3c>
 801f5fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f600:	07d9      	lsls	r1, r3, #31
 801f602:	d402      	bmi.n	801f60a <_fclose_r+0x36>
 801f604:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f606:	f7fe fa8c 	bl	801db22 <__retarget_lock_release_recursive>
 801f60a:	2600      	movs	r6, #0
 801f60c:	4630      	mov	r0, r6
 801f60e:	bd70      	pop	{r4, r5, r6, pc}
 801f610:	4621      	mov	r1, r4
 801f612:	4628      	mov	r0, r5
 801f614:	f000 f834 	bl	801f680 <__sflush_r>
 801f618:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801f61a:	4606      	mov	r6, r0
 801f61c:	b133      	cbz	r3, 801f62c <_fclose_r+0x58>
 801f61e:	69e1      	ldr	r1, [r4, #28]
 801f620:	4628      	mov	r0, r5
 801f622:	4798      	blx	r3
 801f624:	2800      	cmp	r0, #0
 801f626:	bfb8      	it	lt
 801f628:	f04f 36ff 	movlt.w	r6, #4294967295
 801f62c:	89a3      	ldrh	r3, [r4, #12]
 801f62e:	061a      	lsls	r2, r3, #24
 801f630:	d503      	bpl.n	801f63a <_fclose_r+0x66>
 801f632:	6921      	ldr	r1, [r4, #16]
 801f634:	4628      	mov	r0, r5
 801f636:	f7fe fae9 	bl	801dc0c <_free_r>
 801f63a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801f63c:	b141      	cbz	r1, 801f650 <_fclose_r+0x7c>
 801f63e:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801f642:	4299      	cmp	r1, r3
 801f644:	d002      	beq.n	801f64c <_fclose_r+0x78>
 801f646:	4628      	mov	r0, r5
 801f648:	f7fe fae0 	bl	801dc0c <_free_r>
 801f64c:	2300      	movs	r3, #0
 801f64e:	6323      	str	r3, [r4, #48]	@ 0x30
 801f650:	6c61      	ldr	r1, [r4, #68]	@ 0x44
 801f652:	b121      	cbz	r1, 801f65e <_fclose_r+0x8a>
 801f654:	4628      	mov	r0, r5
 801f656:	f7fe fad9 	bl	801dc0c <_free_r>
 801f65a:	2300      	movs	r3, #0
 801f65c:	6463      	str	r3, [r4, #68]	@ 0x44
 801f65e:	f7fe f8ff 	bl	801d860 <__sfp_lock_acquire>
 801f662:	2300      	movs	r3, #0
 801f664:	81a3      	strh	r3, [r4, #12]
 801f666:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f668:	07db      	lsls	r3, r3, #31
 801f66a:	d402      	bmi.n	801f672 <_fclose_r+0x9e>
 801f66c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f66e:	f7fe fa58 	bl	801db22 <__retarget_lock_release_recursive>
 801f672:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f674:	f7fe fa53 	bl	801db1e <__retarget_lock_close_recursive>
 801f678:	f7fe f8f8 	bl	801d86c <__sfp_lock_release>
 801f67c:	e7c6      	b.n	801f60c <_fclose_r+0x38>
	...

0801f680 <__sflush_r>:
 801f680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f684:	4605      	mov	r5, r0
 801f686:	f9b1 000c 	ldrsh.w	r0, [r1, #12]
 801f68a:	0706      	lsls	r6, r0, #28
 801f68c:	460c      	mov	r4, r1
 801f68e:	d457      	bmi.n	801f740 <__sflush_r+0xc0>
 801f690:	f440 6300 	orr.w	r3, r0, #2048	@ 0x800
 801f694:	818b      	strh	r3, [r1, #12]
 801f696:	684b      	ldr	r3, [r1, #4]
 801f698:	2b00      	cmp	r3, #0
 801f69a:	dc02      	bgt.n	801f6a2 <__sflush_r+0x22>
 801f69c:	6bcb      	ldr	r3, [r1, #60]	@ 0x3c
 801f69e:	2b00      	cmp	r3, #0
 801f6a0:	dd4c      	ble.n	801f73c <__sflush_r+0xbc>
 801f6a2:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801f6a4:	2e00      	cmp	r6, #0
 801f6a6:	d049      	beq.n	801f73c <__sflush_r+0xbc>
 801f6a8:	2300      	movs	r3, #0
 801f6aa:	f410 5280 	ands.w	r2, r0, #4096	@ 0x1000
 801f6ae:	682f      	ldr	r7, [r5, #0]
 801f6b0:	69e1      	ldr	r1, [r4, #28]
 801f6b2:	602b      	str	r3, [r5, #0]
 801f6b4:	d034      	beq.n	801f720 <__sflush_r+0xa0>
 801f6b6:	6d22      	ldr	r2, [r4, #80]	@ 0x50
 801f6b8:	89a3      	ldrh	r3, [r4, #12]
 801f6ba:	0759      	lsls	r1, r3, #29
 801f6bc:	d505      	bpl.n	801f6ca <__sflush_r+0x4a>
 801f6be:	6863      	ldr	r3, [r4, #4]
 801f6c0:	1ad2      	subs	r2, r2, r3
 801f6c2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 801f6c4:	b10b      	cbz	r3, 801f6ca <__sflush_r+0x4a>
 801f6c6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 801f6c8:	1ad2      	subs	r2, r2, r3
 801f6ca:	2300      	movs	r3, #0
 801f6cc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 801f6ce:	69e1      	ldr	r1, [r4, #28]
 801f6d0:	4628      	mov	r0, r5
 801f6d2:	47b0      	blx	r6
 801f6d4:	1c43      	adds	r3, r0, #1
 801f6d6:	d106      	bne.n	801f6e6 <__sflush_r+0x66>
 801f6d8:	682a      	ldr	r2, [r5, #0]
 801f6da:	2a1d      	cmp	r2, #29
 801f6dc:	d848      	bhi.n	801f770 <__sflush_r+0xf0>
 801f6de:	4b2b      	ldr	r3, [pc, #172]	@ (801f78c <__sflush_r+0x10c>)
 801f6e0:	4113      	asrs	r3, r2
 801f6e2:	07de      	lsls	r6, r3, #31
 801f6e4:	d444      	bmi.n	801f770 <__sflush_r+0xf0>
 801f6e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f6ea:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 801f6ee:	81a2      	strh	r2, [r4, #12]
 801f6f0:	2200      	movs	r2, #0
 801f6f2:	6062      	str	r2, [r4, #4]
 801f6f4:	04d9      	lsls	r1, r3, #19
 801f6f6:	6922      	ldr	r2, [r4, #16]
 801f6f8:	6022      	str	r2, [r4, #0]
 801f6fa:	d504      	bpl.n	801f706 <__sflush_r+0x86>
 801f6fc:	1c42      	adds	r2, r0, #1
 801f6fe:	d101      	bne.n	801f704 <__sflush_r+0x84>
 801f700:	682b      	ldr	r3, [r5, #0]
 801f702:	b903      	cbnz	r3, 801f706 <__sflush_r+0x86>
 801f704:	6520      	str	r0, [r4, #80]	@ 0x50
 801f706:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801f708:	602f      	str	r7, [r5, #0]
 801f70a:	b1b9      	cbz	r1, 801f73c <__sflush_r+0xbc>
 801f70c:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 801f710:	4299      	cmp	r1, r3
 801f712:	d002      	beq.n	801f71a <__sflush_r+0x9a>
 801f714:	4628      	mov	r0, r5
 801f716:	f7fe fa79 	bl	801dc0c <_free_r>
 801f71a:	2300      	movs	r3, #0
 801f71c:	6323      	str	r3, [r4, #48]	@ 0x30
 801f71e:	e00d      	b.n	801f73c <__sflush_r+0xbc>
 801f720:	2301      	movs	r3, #1
 801f722:	4628      	mov	r0, r5
 801f724:	47b0      	blx	r6
 801f726:	4602      	mov	r2, r0
 801f728:	1c50      	adds	r0, r2, #1
 801f72a:	d1c5      	bne.n	801f6b8 <__sflush_r+0x38>
 801f72c:	682b      	ldr	r3, [r5, #0]
 801f72e:	2b00      	cmp	r3, #0
 801f730:	d0c2      	beq.n	801f6b8 <__sflush_r+0x38>
 801f732:	2b1d      	cmp	r3, #29
 801f734:	d001      	beq.n	801f73a <__sflush_r+0xba>
 801f736:	2b16      	cmp	r3, #22
 801f738:	d11a      	bne.n	801f770 <__sflush_r+0xf0>
 801f73a:	602f      	str	r7, [r5, #0]
 801f73c:	2000      	movs	r0, #0
 801f73e:	e01e      	b.n	801f77e <__sflush_r+0xfe>
 801f740:	690f      	ldr	r7, [r1, #16]
 801f742:	2f00      	cmp	r7, #0
 801f744:	d0fa      	beq.n	801f73c <__sflush_r+0xbc>
 801f746:	0783      	lsls	r3, r0, #30
 801f748:	680e      	ldr	r6, [r1, #0]
 801f74a:	bf08      	it	eq
 801f74c:	694b      	ldreq	r3, [r1, #20]
 801f74e:	600f      	str	r7, [r1, #0]
 801f750:	bf18      	it	ne
 801f752:	2300      	movne	r3, #0
 801f754:	eba6 0807 	sub.w	r8, r6, r7
 801f758:	608b      	str	r3, [r1, #8]
 801f75a:	f1b8 0f00 	cmp.w	r8, #0
 801f75e:	dded      	ble.n	801f73c <__sflush_r+0xbc>
 801f760:	69e1      	ldr	r1, [r4, #28]
 801f762:	6a66      	ldr	r6, [r4, #36]	@ 0x24
 801f764:	4643      	mov	r3, r8
 801f766:	463a      	mov	r2, r7
 801f768:	4628      	mov	r0, r5
 801f76a:	47b0      	blx	r6
 801f76c:	2800      	cmp	r0, #0
 801f76e:	dc08      	bgt.n	801f782 <__sflush_r+0x102>
 801f770:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801f774:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 801f778:	81a3      	strh	r3, [r4, #12]
 801f77a:	f04f 30ff 	mov.w	r0, #4294967295
 801f77e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f782:	4407      	add	r7, r0
 801f784:	eba8 0800 	sub.w	r8, r8, r0
 801f788:	e7e7      	b.n	801f75a <__sflush_r+0xda>
 801f78a:	bf00      	nop
 801f78c:	dfbffffe 	.word	0xdfbffffe

0801f790 <_fflush_r>:
 801f790:	b538      	push	{r3, r4, r5, lr}
 801f792:	460c      	mov	r4, r1
 801f794:	4605      	mov	r5, r0
 801f796:	b118      	cbz	r0, 801f7a0 <_fflush_r+0x10>
 801f798:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801f79a:	b90b      	cbnz	r3, 801f7a0 <_fflush_r+0x10>
 801f79c:	f7fe f86c 	bl	801d878 <__sinit>
 801f7a0:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 801f7a4:	b1b8      	cbz	r0, 801f7d6 <_fflush_r+0x46>
 801f7a6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f7a8:	07db      	lsls	r3, r3, #31
 801f7aa:	d404      	bmi.n	801f7b6 <_fflush_r+0x26>
 801f7ac:	0581      	lsls	r1, r0, #22
 801f7ae:	d402      	bmi.n	801f7b6 <_fflush_r+0x26>
 801f7b0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f7b2:	f7fe f9b5 	bl	801db20 <__retarget_lock_acquire_recursive>
 801f7b6:	4628      	mov	r0, r5
 801f7b8:	4621      	mov	r1, r4
 801f7ba:	f7ff ff61 	bl	801f680 <__sflush_r>
 801f7be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 801f7c0:	07da      	lsls	r2, r3, #31
 801f7c2:	4605      	mov	r5, r0
 801f7c4:	d405      	bmi.n	801f7d2 <_fflush_r+0x42>
 801f7c6:	89a3      	ldrh	r3, [r4, #12]
 801f7c8:	059b      	lsls	r3, r3, #22
 801f7ca:	d402      	bmi.n	801f7d2 <_fflush_r+0x42>
 801f7cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 801f7ce:	f7fe f9a8 	bl	801db22 <__retarget_lock_release_recursive>
 801f7d2:	4628      	mov	r0, r5
 801f7d4:	bd38      	pop	{r3, r4, r5, pc}
 801f7d6:	4605      	mov	r5, r0
 801f7d8:	e7fb      	b.n	801f7d2 <_fflush_r+0x42>

0801f7da <strncpy>:
 801f7da:	b510      	push	{r4, lr}
 801f7dc:	3901      	subs	r1, #1
 801f7de:	4603      	mov	r3, r0
 801f7e0:	b132      	cbz	r2, 801f7f0 <strncpy+0x16>
 801f7e2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 801f7e6:	f803 4b01 	strb.w	r4, [r3], #1
 801f7ea:	3a01      	subs	r2, #1
 801f7ec:	2c00      	cmp	r4, #0
 801f7ee:	d1f7      	bne.n	801f7e0 <strncpy+0x6>
 801f7f0:	441a      	add	r2, r3
 801f7f2:	2100      	movs	r1, #0
 801f7f4:	4293      	cmp	r3, r2
 801f7f6:	d100      	bne.n	801f7fa <strncpy+0x20>
 801f7f8:	bd10      	pop	{r4, pc}
 801f7fa:	f803 1b01 	strb.w	r1, [r3], #1
 801f7fe:	e7f9      	b.n	801f7f4 <strncpy+0x1a>

0801f800 <__locale_mb_cur_max>:
 801f800:	4b01      	ldr	r3, [pc, #4]	@ (801f808 <__locale_mb_cur_max+0x8>)
 801f802:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
 801f806:	4770      	bx	lr
 801f808:	2000068c 	.word	0x2000068c

0801f80c <_localeconv_r>:
 801f80c:	4800      	ldr	r0, [pc, #0]	@ (801f810 <_localeconv_r+0x4>)
 801f80e:	4770      	bx	lr
 801f810:	2000077c 	.word	0x2000077c

0801f814 <_sbrk_r>:
 801f814:	b538      	push	{r3, r4, r5, lr}
 801f816:	4d06      	ldr	r5, [pc, #24]	@ (801f830 <_sbrk_r+0x1c>)
 801f818:	2300      	movs	r3, #0
 801f81a:	4604      	mov	r4, r0
 801f81c:	4608      	mov	r0, r1
 801f81e:	602b      	str	r3, [r5, #0]
 801f820:	f7e4 fb5c 	bl	8003edc <_sbrk>
 801f824:	1c43      	adds	r3, r0, #1
 801f826:	d102      	bne.n	801f82e <_sbrk_r+0x1a>
 801f828:	682b      	ldr	r3, [r5, #0]
 801f82a:	b103      	cbz	r3, 801f82e <_sbrk_r+0x1a>
 801f82c:	6023      	str	r3, [r4, #0]
 801f82e:	bd38      	pop	{r3, r4, r5, pc}
 801f830:	2000d488 	.word	0x2000d488

0801f834 <__libc_fini_array>:
 801f834:	b538      	push	{r3, r4, r5, lr}
 801f836:	4d07      	ldr	r5, [pc, #28]	@ (801f854 <__libc_fini_array+0x20>)
 801f838:	4c07      	ldr	r4, [pc, #28]	@ (801f858 <__libc_fini_array+0x24>)
 801f83a:	1b64      	subs	r4, r4, r5
 801f83c:	10a4      	asrs	r4, r4, #2
 801f83e:	b91c      	cbnz	r4, 801f848 <__libc_fini_array+0x14>
 801f840:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f844:	f004 bee2 	b.w	802460c <_fini>
 801f848:	3c01      	subs	r4, #1
 801f84a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 801f84e:	4798      	blx	r3
 801f850:	e7f5      	b.n	801f83e <__libc_fini_array+0xa>
 801f852:	bf00      	nop
 801f854:	08025410 	.word	0x08025410
 801f858:	08025414 	.word	0x08025414

0801f85c <sysconf>:
 801f85c:	2808      	cmp	r0, #8
 801f85e:	b508      	push	{r3, lr}
 801f860:	d006      	beq.n	801f870 <sysconf+0x14>
 801f862:	f7fe f931 	bl	801dac8 <__errno>
 801f866:	2316      	movs	r3, #22
 801f868:	6003      	str	r3, [r0, #0]
 801f86a:	f04f 30ff 	mov.w	r0, #4294967295
 801f86e:	bd08      	pop	{r3, pc}
 801f870:	2080      	movs	r0, #128	@ 0x80
 801f872:	e7fc      	b.n	801f86e <sysconf+0x12>

0801f874 <frexp>:
 801f874:	b570      	push	{r4, r5, r6, lr}
 801f876:	2100      	movs	r1, #0
 801f878:	ec55 4b10 	vmov	r4, r5, d0
 801f87c:	6001      	str	r1, [r0, #0]
 801f87e:	4915      	ldr	r1, [pc, #84]	@ (801f8d4 <frexp+0x60>)
 801f880:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 801f884:	428a      	cmp	r2, r1
 801f886:	4606      	mov	r6, r0
 801f888:	462b      	mov	r3, r5
 801f88a:	d820      	bhi.n	801f8ce <frexp+0x5a>
 801f88c:	4621      	mov	r1, r4
 801f88e:	4311      	orrs	r1, r2
 801f890:	d01d      	beq.n	801f8ce <frexp+0x5a>
 801f892:	4911      	ldr	r1, [pc, #68]	@ (801f8d8 <frexp+0x64>)
 801f894:	4029      	ands	r1, r5
 801f896:	b961      	cbnz	r1, 801f8b2 <frexp+0x3e>
 801f898:	4b10      	ldr	r3, [pc, #64]	@ (801f8dc <frexp+0x68>)
 801f89a:	2200      	movs	r2, #0
 801f89c:	4620      	mov	r0, r4
 801f89e:	4629      	mov	r1, r5
 801f8a0:	f7e0 feaa 	bl	80005f8 <__aeabi_dmul>
 801f8a4:	460b      	mov	r3, r1
 801f8a6:	f021 4200 	bic.w	r2, r1, #2147483648	@ 0x80000000
 801f8aa:	f06f 0135 	mvn.w	r1, #53	@ 0x35
 801f8ae:	4604      	mov	r4, r0
 801f8b0:	6031      	str	r1, [r6, #0]
 801f8b2:	6831      	ldr	r1, [r6, #0]
 801f8b4:	1512      	asrs	r2, r2, #20
 801f8b6:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 801f8ba:	f2a2 32fe 	subw	r2, r2, #1022	@ 0x3fe
 801f8be:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 801f8c2:	4411      	add	r1, r2
 801f8c4:	f043 557f 	orr.w	r5, r3, #1069547520	@ 0x3fc00000
 801f8c8:	6031      	str	r1, [r6, #0]
 801f8ca:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
 801f8ce:	ec45 4b10 	vmov	d0, r4, r5
 801f8d2:	bd70      	pop	{r4, r5, r6, pc}
 801f8d4:	7fefffff 	.word	0x7fefffff
 801f8d8:	7ff00000 	.word	0x7ff00000
 801f8dc:	43500000 	.word	0x43500000

0801f8e0 <__register_exitproc>:
 801f8e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f8e4:	f8df a074 	ldr.w	sl, [pc, #116]	@ 801f95c <__register_exitproc+0x7c>
 801f8e8:	4606      	mov	r6, r0
 801f8ea:	f8da 0000 	ldr.w	r0, [sl]
 801f8ee:	4698      	mov	r8, r3
 801f8f0:	460f      	mov	r7, r1
 801f8f2:	4691      	mov	r9, r2
 801f8f4:	f7fe f914 	bl	801db20 <__retarget_lock_acquire_recursive>
 801f8f8:	4b16      	ldr	r3, [pc, #88]	@ (801f954 <__register_exitproc+0x74>)
 801f8fa:	681c      	ldr	r4, [r3, #0]
 801f8fc:	b90c      	cbnz	r4, 801f902 <__register_exitproc+0x22>
 801f8fe:	4c16      	ldr	r4, [pc, #88]	@ (801f958 <__register_exitproc+0x78>)
 801f900:	601c      	str	r4, [r3, #0]
 801f902:	6865      	ldr	r5, [r4, #4]
 801f904:	f8da 0000 	ldr.w	r0, [sl]
 801f908:	2d1f      	cmp	r5, #31
 801f90a:	dd05      	ble.n	801f918 <__register_exitproc+0x38>
 801f90c:	f7fe f909 	bl	801db22 <__retarget_lock_release_recursive>
 801f910:	f04f 30ff 	mov.w	r0, #4294967295
 801f914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f918:	b19e      	cbz	r6, 801f942 <__register_exitproc+0x62>
 801f91a:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 801f91e:	2201      	movs	r2, #1
 801f920:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
 801f924:	f8d4 3188 	ldr.w	r3, [r4, #392]	@ 0x188
 801f928:	40aa      	lsls	r2, r5
 801f92a:	4313      	orrs	r3, r2
 801f92c:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
 801f930:	2e02      	cmp	r6, #2
 801f932:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
 801f936:	bf02      	ittt	eq
 801f938:	f8d4 318c 	ldreq.w	r3, [r4, #396]	@ 0x18c
 801f93c:	4313      	orreq	r3, r2
 801f93e:	f8c4 318c 	streq.w	r3, [r4, #396]	@ 0x18c
 801f942:	1c6b      	adds	r3, r5, #1
 801f944:	3502      	adds	r5, #2
 801f946:	6063      	str	r3, [r4, #4]
 801f948:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 801f94c:	f7fe f8e9 	bl	801db22 <__retarget_lock_release_recursive>
 801f950:	2000      	movs	r0, #0
 801f952:	e7df      	b.n	801f914 <__register_exitproc+0x34>
 801f954:	2000d490 	.word	0x2000d490
 801f958:	2000d4c8 	.word	0x2000d4c8
 801f95c:	20000278 	.word	0x20000278

0801f960 <quorem>:
 801f960:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f964:	6903      	ldr	r3, [r0, #16]
 801f966:	690c      	ldr	r4, [r1, #16]
 801f968:	42a3      	cmp	r3, r4
 801f96a:	4607      	mov	r7, r0
 801f96c:	db7e      	blt.n	801fa6c <quorem+0x10c>
 801f96e:	3c01      	subs	r4, #1
 801f970:	f101 0814 	add.w	r8, r1, #20
 801f974:	00a3      	lsls	r3, r4, #2
 801f976:	f100 0514 	add.w	r5, r0, #20
 801f97a:	9300      	str	r3, [sp, #0]
 801f97c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801f980:	9301      	str	r3, [sp, #4]
 801f982:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801f986:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801f98a:	3301      	adds	r3, #1
 801f98c:	429a      	cmp	r2, r3
 801f98e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801f992:	fbb2 f6f3 	udiv	r6, r2, r3
 801f996:	d32e      	bcc.n	801f9f6 <quorem+0x96>
 801f998:	f04f 0a00 	mov.w	sl, #0
 801f99c:	46c4      	mov	ip, r8
 801f99e:	46ae      	mov	lr, r5
 801f9a0:	46d3      	mov	fp, sl
 801f9a2:	f85c 3b04 	ldr.w	r3, [ip], #4
 801f9a6:	b298      	uxth	r0, r3
 801f9a8:	fb06 a000 	mla	r0, r6, r0, sl
 801f9ac:	0c02      	lsrs	r2, r0, #16
 801f9ae:	0c1b      	lsrs	r3, r3, #16
 801f9b0:	fb06 2303 	mla	r3, r6, r3, r2
 801f9b4:	f8de 2000 	ldr.w	r2, [lr]
 801f9b8:	b280      	uxth	r0, r0
 801f9ba:	b292      	uxth	r2, r2
 801f9bc:	1a12      	subs	r2, r2, r0
 801f9be:	445a      	add	r2, fp
 801f9c0:	f8de 0000 	ldr.w	r0, [lr]
 801f9c4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 801f9c8:	b29b      	uxth	r3, r3
 801f9ca:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 801f9ce:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 801f9d2:	b292      	uxth	r2, r2
 801f9d4:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 801f9d8:	45e1      	cmp	r9, ip
 801f9da:	f84e 2b04 	str.w	r2, [lr], #4
 801f9de:	ea4f 4b23 	mov.w	fp, r3, asr #16
 801f9e2:	d2de      	bcs.n	801f9a2 <quorem+0x42>
 801f9e4:	9b00      	ldr	r3, [sp, #0]
 801f9e6:	58eb      	ldr	r3, [r5, r3]
 801f9e8:	b92b      	cbnz	r3, 801f9f6 <quorem+0x96>
 801f9ea:	9b01      	ldr	r3, [sp, #4]
 801f9ec:	3b04      	subs	r3, #4
 801f9ee:	429d      	cmp	r5, r3
 801f9f0:	461a      	mov	r2, r3
 801f9f2:	d32f      	bcc.n	801fa54 <quorem+0xf4>
 801f9f4:	613c      	str	r4, [r7, #16]
 801f9f6:	4638      	mov	r0, r7
 801f9f8:	f001 f824 	bl	8020a44 <__mcmp>
 801f9fc:	2800      	cmp	r0, #0
 801f9fe:	db25      	blt.n	801fa4c <quorem+0xec>
 801fa00:	4629      	mov	r1, r5
 801fa02:	2000      	movs	r0, #0
 801fa04:	f858 2b04 	ldr.w	r2, [r8], #4
 801fa08:	f8d1 c000 	ldr.w	ip, [r1]
 801fa0c:	fa1f fe82 	uxth.w	lr, r2
 801fa10:	fa1f f38c 	uxth.w	r3, ip
 801fa14:	eba3 030e 	sub.w	r3, r3, lr
 801fa18:	4403      	add	r3, r0
 801fa1a:	0c12      	lsrs	r2, r2, #16
 801fa1c:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 801fa20:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 801fa24:	b29b      	uxth	r3, r3
 801fa26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fa2a:	45c1      	cmp	r9, r8
 801fa2c:	f841 3b04 	str.w	r3, [r1], #4
 801fa30:	ea4f 4022 	mov.w	r0, r2, asr #16
 801fa34:	d2e6      	bcs.n	801fa04 <quorem+0xa4>
 801fa36:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801fa3a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801fa3e:	b922      	cbnz	r2, 801fa4a <quorem+0xea>
 801fa40:	3b04      	subs	r3, #4
 801fa42:	429d      	cmp	r5, r3
 801fa44:	461a      	mov	r2, r3
 801fa46:	d30b      	bcc.n	801fa60 <quorem+0x100>
 801fa48:	613c      	str	r4, [r7, #16]
 801fa4a:	3601      	adds	r6, #1
 801fa4c:	4630      	mov	r0, r6
 801fa4e:	b003      	add	sp, #12
 801fa50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa54:	6812      	ldr	r2, [r2, #0]
 801fa56:	3b04      	subs	r3, #4
 801fa58:	2a00      	cmp	r2, #0
 801fa5a:	d1cb      	bne.n	801f9f4 <quorem+0x94>
 801fa5c:	3c01      	subs	r4, #1
 801fa5e:	e7c6      	b.n	801f9ee <quorem+0x8e>
 801fa60:	6812      	ldr	r2, [r2, #0]
 801fa62:	3b04      	subs	r3, #4
 801fa64:	2a00      	cmp	r2, #0
 801fa66:	d1ef      	bne.n	801fa48 <quorem+0xe8>
 801fa68:	3c01      	subs	r4, #1
 801fa6a:	e7ea      	b.n	801fa42 <quorem+0xe2>
 801fa6c:	2000      	movs	r0, #0
 801fa6e:	e7ee      	b.n	801fa4e <quorem+0xee>

0801fa70 <_dtoa_r>:
 801fa70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa74:	b099      	sub	sp, #100	@ 0x64
 801fa76:	ed8d 0b02 	vstr	d0, [sp, #8]
 801fa7a:	9109      	str	r1, [sp, #36]	@ 0x24
 801fa7c:	6b81      	ldr	r1, [r0, #56]	@ 0x38
 801fa7e:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801fa80:	920e      	str	r2, [sp, #56]	@ 0x38
 801fa82:	ec55 4b10 	vmov	r4, r5, d0
 801fa86:	4683      	mov	fp, r0
 801fa88:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fa8a:	b149      	cbz	r1, 801faa0 <_dtoa_r+0x30>
 801fa8c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 801fa8e:	604a      	str	r2, [r1, #4]
 801fa90:	2301      	movs	r3, #1
 801fa92:	4093      	lsls	r3, r2
 801fa94:	608b      	str	r3, [r1, #8]
 801fa96:	f000 fdce 	bl	8020636 <_Bfree>
 801fa9a:	2300      	movs	r3, #0
 801fa9c:	f8cb 3038 	str.w	r3, [fp, #56]	@ 0x38
 801faa0:	1e2b      	subs	r3, r5, #0
 801faa2:	bfb9      	ittee	lt
 801faa4:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 801faa8:	9303      	strlt	r3, [sp, #12]
 801faaa:	2300      	movge	r3, #0
 801faac:	6033      	strge	r3, [r6, #0]
 801faae:	9f03      	ldr	r7, [sp, #12]
 801fab0:	4b97      	ldr	r3, [pc, #604]	@ (801fd10 <_dtoa_r+0x2a0>)
 801fab2:	bfbc      	itt	lt
 801fab4:	2201      	movlt	r2, #1
 801fab6:	6032      	strlt	r2, [r6, #0]
 801fab8:	43bb      	bics	r3, r7
 801faba:	d114      	bne.n	801fae6 <_dtoa_r+0x76>
 801fabc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fabe:	f242 730f 	movw	r3, #9999	@ 0x270f
 801fac2:	6013      	str	r3, [r2, #0]
 801fac4:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801fac8:	4323      	orrs	r3, r4
 801faca:	f000 854c 	beq.w	8020566 <_dtoa_r+0xaf6>
 801face:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fad0:	f8df a254 	ldr.w	sl, [pc, #596]	@ 801fd28 <_dtoa_r+0x2b8>
 801fad4:	b11b      	cbz	r3, 801fade <_dtoa_r+0x6e>
 801fad6:	f10a 0303 	add.w	r3, sl, #3
 801fada:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fadc:	6013      	str	r3, [r2, #0]
 801fade:	4650      	mov	r0, sl
 801fae0:	b019      	add	sp, #100	@ 0x64
 801fae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fae6:	ed9d 7b02 	vldr	d7, [sp, #8]
 801faea:	2200      	movs	r2, #0
 801faec:	ec51 0b17 	vmov	r0, r1, d7
 801faf0:	2300      	movs	r3, #0
 801faf2:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 801faf6:	f7e0 ffe7 	bl	8000ac8 <__aeabi_dcmpeq>
 801fafa:	4680      	mov	r8, r0
 801fafc:	b150      	cbz	r0, 801fb14 <_dtoa_r+0xa4>
 801fafe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fb00:	2301      	movs	r3, #1
 801fb02:	6013      	str	r3, [r2, #0]
 801fb04:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fb06:	b113      	cbz	r3, 801fb0e <_dtoa_r+0x9e>
 801fb08:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fb0a:	4b82      	ldr	r3, [pc, #520]	@ (801fd14 <_dtoa_r+0x2a4>)
 801fb0c:	6013      	str	r3, [r2, #0]
 801fb0e:	f8df a21c 	ldr.w	sl, [pc, #540]	@ 801fd2c <_dtoa_r+0x2bc>
 801fb12:	e7e4      	b.n	801fade <_dtoa_r+0x6e>
 801fb14:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 801fb18:	aa16      	add	r2, sp, #88	@ 0x58
 801fb1a:	a917      	add	r1, sp, #92	@ 0x5c
 801fb1c:	4658      	mov	r0, fp
 801fb1e:	f001 f841 	bl	8020ba4 <__d2b>
 801fb22:	f3c7 560a 	ubfx	r6, r7, #20, #11
 801fb26:	4681      	mov	r9, r0
 801fb28:	2e00      	cmp	r6, #0
 801fb2a:	d077      	beq.n	801fc1c <_dtoa_r+0x1ac>
 801fb2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fb2e:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 801fb32:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801fb36:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801fb3a:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 801fb3e:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 801fb42:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 801fb46:	4619      	mov	r1, r3
 801fb48:	2200      	movs	r2, #0
 801fb4a:	4b73      	ldr	r3, [pc, #460]	@ (801fd18 <_dtoa_r+0x2a8>)
 801fb4c:	f7e0 fb9c 	bl	8000288 <__aeabi_dsub>
 801fb50:	a369      	add	r3, pc, #420	@ (adr r3, 801fcf8 <_dtoa_r+0x288>)
 801fb52:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fb56:	f7e0 fd4f 	bl	80005f8 <__aeabi_dmul>
 801fb5a:	a369      	add	r3, pc, #420	@ (adr r3, 801fd00 <_dtoa_r+0x290>)
 801fb5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fb60:	f7e0 fb94 	bl	800028c <__adddf3>
 801fb64:	4604      	mov	r4, r0
 801fb66:	4630      	mov	r0, r6
 801fb68:	460d      	mov	r5, r1
 801fb6a:	f7e0 fcdb 	bl	8000524 <__aeabi_i2d>
 801fb6e:	a366      	add	r3, pc, #408	@ (adr r3, 801fd08 <_dtoa_r+0x298>)
 801fb70:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fb74:	f7e0 fd40 	bl	80005f8 <__aeabi_dmul>
 801fb78:	4602      	mov	r2, r0
 801fb7a:	460b      	mov	r3, r1
 801fb7c:	4620      	mov	r0, r4
 801fb7e:	4629      	mov	r1, r5
 801fb80:	f7e0 fb84 	bl	800028c <__adddf3>
 801fb84:	4604      	mov	r4, r0
 801fb86:	460d      	mov	r5, r1
 801fb88:	f7e0 ffe6 	bl	8000b58 <__aeabi_d2iz>
 801fb8c:	2200      	movs	r2, #0
 801fb8e:	4607      	mov	r7, r0
 801fb90:	2300      	movs	r3, #0
 801fb92:	4620      	mov	r0, r4
 801fb94:	4629      	mov	r1, r5
 801fb96:	f7e0 ffa1 	bl	8000adc <__aeabi_dcmplt>
 801fb9a:	b140      	cbz	r0, 801fbae <_dtoa_r+0x13e>
 801fb9c:	4638      	mov	r0, r7
 801fb9e:	f7e0 fcc1 	bl	8000524 <__aeabi_i2d>
 801fba2:	4622      	mov	r2, r4
 801fba4:	462b      	mov	r3, r5
 801fba6:	f7e0 ff8f 	bl	8000ac8 <__aeabi_dcmpeq>
 801fbaa:	b900      	cbnz	r0, 801fbae <_dtoa_r+0x13e>
 801fbac:	3f01      	subs	r7, #1
 801fbae:	2f16      	cmp	r7, #22
 801fbb0:	d851      	bhi.n	801fc56 <_dtoa_r+0x1e6>
 801fbb2:	4b5a      	ldr	r3, [pc, #360]	@ (801fd1c <_dtoa_r+0x2ac>)
 801fbb4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801fbb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fbbc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801fbc0:	f7e0 ff8c 	bl	8000adc <__aeabi_dcmplt>
 801fbc4:	2800      	cmp	r0, #0
 801fbc6:	d048      	beq.n	801fc5a <_dtoa_r+0x1ea>
 801fbc8:	3f01      	subs	r7, #1
 801fbca:	2300      	movs	r3, #0
 801fbcc:	9312      	str	r3, [sp, #72]	@ 0x48
 801fbce:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801fbd0:	1b9b      	subs	r3, r3, r6
 801fbd2:	1e5a      	subs	r2, r3, #1
 801fbd4:	bf44      	itt	mi
 801fbd6:	f1c3 0801 	rsbmi	r8, r3, #1
 801fbda:	2300      	movmi	r3, #0
 801fbdc:	9208      	str	r2, [sp, #32]
 801fbde:	bf54      	ite	pl
 801fbe0:	f04f 0800 	movpl.w	r8, #0
 801fbe4:	9308      	strmi	r3, [sp, #32]
 801fbe6:	2f00      	cmp	r7, #0
 801fbe8:	db39      	blt.n	801fc5e <_dtoa_r+0x1ee>
 801fbea:	9b08      	ldr	r3, [sp, #32]
 801fbec:	970f      	str	r7, [sp, #60]	@ 0x3c
 801fbee:	443b      	add	r3, r7
 801fbf0:	9308      	str	r3, [sp, #32]
 801fbf2:	2300      	movs	r3, #0
 801fbf4:	930a      	str	r3, [sp, #40]	@ 0x28
 801fbf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbf8:	2b09      	cmp	r3, #9
 801fbfa:	d865      	bhi.n	801fcc8 <_dtoa_r+0x258>
 801fbfc:	2b05      	cmp	r3, #5
 801fbfe:	bfc4      	itt	gt
 801fc00:	3b04      	subgt	r3, #4
 801fc02:	9309      	strgt	r3, [sp, #36]	@ 0x24
 801fc04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc06:	f1a3 0302 	sub.w	r3, r3, #2
 801fc0a:	bfcc      	ite	gt
 801fc0c:	2400      	movgt	r4, #0
 801fc0e:	2401      	movle	r4, #1
 801fc10:	2b03      	cmp	r3, #3
 801fc12:	d864      	bhi.n	801fcde <_dtoa_r+0x26e>
 801fc14:	e8df f003 	tbb	[pc, r3]
 801fc18:	5635372a 	.word	0x5635372a
 801fc1c:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 801fc20:	441e      	add	r6, r3
 801fc22:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 801fc26:	2b20      	cmp	r3, #32
 801fc28:	bfc1      	itttt	gt
 801fc2a:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 801fc2e:	409f      	lslgt	r7, r3
 801fc30:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 801fc34:	fa24 f303 	lsrgt.w	r3, r4, r3
 801fc38:	bfd6      	itet	le
 801fc3a:	f1c3 0320 	rsble	r3, r3, #32
 801fc3e:	ea47 0003 	orrgt.w	r0, r7, r3
 801fc42:	fa04 f003 	lslle.w	r0, r4, r3
 801fc46:	f7e0 fc5d 	bl	8000504 <__aeabi_ui2d>
 801fc4a:	2201      	movs	r2, #1
 801fc4c:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 801fc50:	3e01      	subs	r6, #1
 801fc52:	9214      	str	r2, [sp, #80]	@ 0x50
 801fc54:	e777      	b.n	801fb46 <_dtoa_r+0xd6>
 801fc56:	2301      	movs	r3, #1
 801fc58:	e7b8      	b.n	801fbcc <_dtoa_r+0x15c>
 801fc5a:	9012      	str	r0, [sp, #72]	@ 0x48
 801fc5c:	e7b7      	b.n	801fbce <_dtoa_r+0x15e>
 801fc5e:	427b      	negs	r3, r7
 801fc60:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc62:	2300      	movs	r3, #0
 801fc64:	eba8 0807 	sub.w	r8, r8, r7
 801fc68:	930f      	str	r3, [sp, #60]	@ 0x3c
 801fc6a:	e7c4      	b.n	801fbf6 <_dtoa_r+0x186>
 801fc6c:	2300      	movs	r3, #0
 801fc6e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc70:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fc72:	2b00      	cmp	r3, #0
 801fc74:	dc36      	bgt.n	801fce4 <_dtoa_r+0x274>
 801fc76:	2301      	movs	r3, #1
 801fc78:	9300      	str	r3, [sp, #0]
 801fc7a:	9307      	str	r3, [sp, #28]
 801fc7c:	461a      	mov	r2, r3
 801fc7e:	920e      	str	r2, [sp, #56]	@ 0x38
 801fc80:	e00b      	b.n	801fc9a <_dtoa_r+0x22a>
 801fc82:	2301      	movs	r3, #1
 801fc84:	e7f3      	b.n	801fc6e <_dtoa_r+0x1fe>
 801fc86:	2300      	movs	r3, #0
 801fc88:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fc8c:	18fb      	adds	r3, r7, r3
 801fc8e:	9300      	str	r3, [sp, #0]
 801fc90:	3301      	adds	r3, #1
 801fc92:	2b01      	cmp	r3, #1
 801fc94:	9307      	str	r3, [sp, #28]
 801fc96:	bfb8      	it	lt
 801fc98:	2301      	movlt	r3, #1
 801fc9a:	2100      	movs	r1, #0
 801fc9c:	2204      	movs	r2, #4
 801fc9e:	f102 0014 	add.w	r0, r2, #20
 801fca2:	4298      	cmp	r0, r3
 801fca4:	d922      	bls.n	801fcec <_dtoa_r+0x27c>
 801fca6:	f8cb 103c 	str.w	r1, [fp, #60]	@ 0x3c
 801fcaa:	4658      	mov	r0, fp
 801fcac:	f000 fc9e 	bl	80205ec <_Balloc>
 801fcb0:	4682      	mov	sl, r0
 801fcb2:	2800      	cmp	r0, #0
 801fcb4:	d13c      	bne.n	801fd30 <_dtoa_r+0x2c0>
 801fcb6:	4b1a      	ldr	r3, [pc, #104]	@ (801fd20 <_dtoa_r+0x2b0>)
 801fcb8:	4602      	mov	r2, r0
 801fcba:	f240 11af 	movw	r1, #431	@ 0x1af
 801fcbe:	4819      	ldr	r0, [pc, #100]	@ (801fd24 <_dtoa_r+0x2b4>)
 801fcc0:	f001 fa14 	bl	80210ec <__assert_func>
 801fcc4:	2301      	movs	r3, #1
 801fcc6:	e7df      	b.n	801fc88 <_dtoa_r+0x218>
 801fcc8:	2401      	movs	r4, #1
 801fcca:	2300      	movs	r3, #0
 801fccc:	9309      	str	r3, [sp, #36]	@ 0x24
 801fcce:	940b      	str	r4, [sp, #44]	@ 0x2c
 801fcd0:	f04f 33ff 	mov.w	r3, #4294967295
 801fcd4:	9300      	str	r3, [sp, #0]
 801fcd6:	9307      	str	r3, [sp, #28]
 801fcd8:	2200      	movs	r2, #0
 801fcda:	2312      	movs	r3, #18
 801fcdc:	e7cf      	b.n	801fc7e <_dtoa_r+0x20e>
 801fcde:	2301      	movs	r3, #1
 801fce0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fce2:	e7f5      	b.n	801fcd0 <_dtoa_r+0x260>
 801fce4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fce6:	9300      	str	r3, [sp, #0]
 801fce8:	9307      	str	r3, [sp, #28]
 801fcea:	e7d6      	b.n	801fc9a <_dtoa_r+0x22a>
 801fcec:	3101      	adds	r1, #1
 801fcee:	0052      	lsls	r2, r2, #1
 801fcf0:	e7d5      	b.n	801fc9e <_dtoa_r+0x22e>
 801fcf2:	bf00      	nop
 801fcf4:	f3af 8000 	nop.w
 801fcf8:	636f4361 	.word	0x636f4361
 801fcfc:	3fd287a7 	.word	0x3fd287a7
 801fd00:	8b60c8b3 	.word	0x8b60c8b3
 801fd04:	3fc68a28 	.word	0x3fc68a28
 801fd08:	509f79fb 	.word	0x509f79fb
 801fd0c:	3fd34413 	.word	0x3fd34413
 801fd10:	7ff00000 	.word	0x7ff00000
 801fd14:	08024e2b 	.word	0x08024e2b
 801fd18:	3ff80000 	.word	0x3ff80000
 801fd1c:	08024f60 	.word	0x08024f60
 801fd20:	08024e63 	.word	0x08024e63
 801fd24:	08024e74 	.word	0x08024e74
 801fd28:	08024e5f 	.word	0x08024e5f
 801fd2c:	08024e2a 	.word	0x08024e2a
 801fd30:	9b07      	ldr	r3, [sp, #28]
 801fd32:	f8cb 0038 	str.w	r0, [fp, #56]	@ 0x38
 801fd36:	2b0e      	cmp	r3, #14
 801fd38:	f200 80a4 	bhi.w	801fe84 <_dtoa_r+0x414>
 801fd3c:	2c00      	cmp	r4, #0
 801fd3e:	f000 80a1 	beq.w	801fe84 <_dtoa_r+0x414>
 801fd42:	2f00      	cmp	r7, #0
 801fd44:	dd33      	ble.n	801fdae <_dtoa_r+0x33e>
 801fd46:	4bae      	ldr	r3, [pc, #696]	@ (8020000 <_dtoa_r+0x590>)
 801fd48:	f007 020f 	and.w	r2, r7, #15
 801fd4c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801fd50:	ed93 7b00 	vldr	d7, [r3]
 801fd54:	05f8      	lsls	r0, r7, #23
 801fd56:	ed8d 7b04 	vstr	d7, [sp, #16]
 801fd5a:	ea4f 1427 	mov.w	r4, r7, asr #4
 801fd5e:	d516      	bpl.n	801fd8e <_dtoa_r+0x31e>
 801fd60:	4ba8      	ldr	r3, [pc, #672]	@ (8020004 <_dtoa_r+0x594>)
 801fd62:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801fd66:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801fd6a:	f7e0 fd6f 	bl	800084c <__aeabi_ddiv>
 801fd6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801fd72:	f004 040f 	and.w	r4, r4, #15
 801fd76:	2603      	movs	r6, #3
 801fd78:	4da2      	ldr	r5, [pc, #648]	@ (8020004 <_dtoa_r+0x594>)
 801fd7a:	b954      	cbnz	r4, 801fd92 <_dtoa_r+0x322>
 801fd7c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801fd80:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801fd84:	f7e0 fd62 	bl	800084c <__aeabi_ddiv>
 801fd88:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801fd8c:	e028      	b.n	801fde0 <_dtoa_r+0x370>
 801fd8e:	2602      	movs	r6, #2
 801fd90:	e7f2      	b.n	801fd78 <_dtoa_r+0x308>
 801fd92:	07e1      	lsls	r1, r4, #31
 801fd94:	d508      	bpl.n	801fda8 <_dtoa_r+0x338>
 801fd96:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801fd9a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801fd9e:	f7e0 fc2b 	bl	80005f8 <__aeabi_dmul>
 801fda2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801fda6:	3601      	adds	r6, #1
 801fda8:	1064      	asrs	r4, r4, #1
 801fdaa:	3508      	adds	r5, #8
 801fdac:	e7e5      	b.n	801fd7a <_dtoa_r+0x30a>
 801fdae:	f000 80d2 	beq.w	801ff56 <_dtoa_r+0x4e6>
 801fdb2:	427c      	negs	r4, r7
 801fdb4:	4b92      	ldr	r3, [pc, #584]	@ (8020000 <_dtoa_r+0x590>)
 801fdb6:	4d93      	ldr	r5, [pc, #588]	@ (8020004 <_dtoa_r+0x594>)
 801fdb8:	f004 020f 	and.w	r2, r4, #15
 801fdbc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801fdc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fdc4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 801fdc8:	f7e0 fc16 	bl	80005f8 <__aeabi_dmul>
 801fdcc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801fdd0:	1124      	asrs	r4, r4, #4
 801fdd2:	2300      	movs	r3, #0
 801fdd4:	2602      	movs	r6, #2
 801fdd6:	2c00      	cmp	r4, #0
 801fdd8:	f040 80b2 	bne.w	801ff40 <_dtoa_r+0x4d0>
 801fddc:	2b00      	cmp	r3, #0
 801fdde:	d1d3      	bne.n	801fd88 <_dtoa_r+0x318>
 801fde0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801fde2:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801fde6:	2b00      	cmp	r3, #0
 801fde8:	f000 80b7 	beq.w	801ff5a <_dtoa_r+0x4ea>
 801fdec:	4b86      	ldr	r3, [pc, #536]	@ (8020008 <_dtoa_r+0x598>)
 801fdee:	2200      	movs	r2, #0
 801fdf0:	4620      	mov	r0, r4
 801fdf2:	4629      	mov	r1, r5
 801fdf4:	f7e0 fe72 	bl	8000adc <__aeabi_dcmplt>
 801fdf8:	2800      	cmp	r0, #0
 801fdfa:	f000 80ae 	beq.w	801ff5a <_dtoa_r+0x4ea>
 801fdfe:	9b07      	ldr	r3, [sp, #28]
 801fe00:	2b00      	cmp	r3, #0
 801fe02:	f000 80aa 	beq.w	801ff5a <_dtoa_r+0x4ea>
 801fe06:	9b00      	ldr	r3, [sp, #0]
 801fe08:	2b00      	cmp	r3, #0
 801fe0a:	dd37      	ble.n	801fe7c <_dtoa_r+0x40c>
 801fe0c:	1e7b      	subs	r3, r7, #1
 801fe0e:	9304      	str	r3, [sp, #16]
 801fe10:	4620      	mov	r0, r4
 801fe12:	4b7e      	ldr	r3, [pc, #504]	@ (802000c <_dtoa_r+0x59c>)
 801fe14:	2200      	movs	r2, #0
 801fe16:	4629      	mov	r1, r5
 801fe18:	f7e0 fbee 	bl	80005f8 <__aeabi_dmul>
 801fe1c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801fe20:	9c00      	ldr	r4, [sp, #0]
 801fe22:	3601      	adds	r6, #1
 801fe24:	4630      	mov	r0, r6
 801fe26:	f7e0 fb7d 	bl	8000524 <__aeabi_i2d>
 801fe2a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801fe2e:	f7e0 fbe3 	bl	80005f8 <__aeabi_dmul>
 801fe32:	4b77      	ldr	r3, [pc, #476]	@ (8020010 <_dtoa_r+0x5a0>)
 801fe34:	2200      	movs	r2, #0
 801fe36:	f7e0 fa29 	bl	800028c <__adddf3>
 801fe3a:	4605      	mov	r5, r0
 801fe3c:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 801fe40:	2c00      	cmp	r4, #0
 801fe42:	f040 808d 	bne.w	801ff60 <_dtoa_r+0x4f0>
 801fe46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801fe4a:	4b72      	ldr	r3, [pc, #456]	@ (8020014 <_dtoa_r+0x5a4>)
 801fe4c:	2200      	movs	r2, #0
 801fe4e:	f7e0 fa1b 	bl	8000288 <__aeabi_dsub>
 801fe52:	4602      	mov	r2, r0
 801fe54:	460b      	mov	r3, r1
 801fe56:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801fe5a:	462a      	mov	r2, r5
 801fe5c:	4633      	mov	r3, r6
 801fe5e:	f7e0 fe5b 	bl	8000b18 <__aeabi_dcmpgt>
 801fe62:	2800      	cmp	r0, #0
 801fe64:	f040 828c 	bne.w	8020380 <_dtoa_r+0x910>
 801fe68:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801fe6c:	462a      	mov	r2, r5
 801fe6e:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 801fe72:	f7e0 fe33 	bl	8000adc <__aeabi_dcmplt>
 801fe76:	2800      	cmp	r0, #0
 801fe78:	f040 8129 	bne.w	80200ce <_dtoa_r+0x65e>
 801fe7c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 801fe80:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801fe84:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fe86:	2b00      	cmp	r3, #0
 801fe88:	f2c0 815b 	blt.w	8020142 <_dtoa_r+0x6d2>
 801fe8c:	2f0e      	cmp	r7, #14
 801fe8e:	f300 8158 	bgt.w	8020142 <_dtoa_r+0x6d2>
 801fe92:	4b5b      	ldr	r3, [pc, #364]	@ (8020000 <_dtoa_r+0x590>)
 801fe94:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801fe98:	ed93 7b00 	vldr	d7, [r3]
 801fe9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fe9e:	2b00      	cmp	r3, #0
 801fea0:	ed8d 7b00 	vstr	d7, [sp]
 801fea4:	da03      	bge.n	801feae <_dtoa_r+0x43e>
 801fea6:	9b07      	ldr	r3, [sp, #28]
 801fea8:	2b00      	cmp	r3, #0
 801feaa:	f340 8102 	ble.w	80200b2 <_dtoa_r+0x642>
 801feae:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 801feb2:	4656      	mov	r6, sl
 801feb4:	e9dd 2300 	ldrd	r2, r3, [sp]
 801feb8:	4620      	mov	r0, r4
 801feba:	4629      	mov	r1, r5
 801febc:	f7e0 fcc6 	bl	800084c <__aeabi_ddiv>
 801fec0:	f7e0 fe4a 	bl	8000b58 <__aeabi_d2iz>
 801fec4:	4680      	mov	r8, r0
 801fec6:	f7e0 fb2d 	bl	8000524 <__aeabi_i2d>
 801feca:	e9dd 2300 	ldrd	r2, r3, [sp]
 801fece:	f7e0 fb93 	bl	80005f8 <__aeabi_dmul>
 801fed2:	4602      	mov	r2, r0
 801fed4:	460b      	mov	r3, r1
 801fed6:	4620      	mov	r0, r4
 801fed8:	4629      	mov	r1, r5
 801feda:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 801fede:	f7e0 f9d3 	bl	8000288 <__aeabi_dsub>
 801fee2:	f806 4b01 	strb.w	r4, [r6], #1
 801fee6:	9d07      	ldr	r5, [sp, #28]
 801fee8:	eba6 040a 	sub.w	r4, r6, sl
 801feec:	42a5      	cmp	r5, r4
 801feee:	4602      	mov	r2, r0
 801fef0:	460b      	mov	r3, r1
 801fef2:	f040 8118 	bne.w	8020126 <_dtoa_r+0x6b6>
 801fef6:	f7e0 f9c9 	bl	800028c <__adddf3>
 801fefa:	e9dd 2300 	ldrd	r2, r3, [sp]
 801fefe:	4604      	mov	r4, r0
 801ff00:	460d      	mov	r5, r1
 801ff02:	f7e0 fe09 	bl	8000b18 <__aeabi_dcmpgt>
 801ff06:	2800      	cmp	r0, #0
 801ff08:	f040 80fa 	bne.w	8020100 <_dtoa_r+0x690>
 801ff0c:	e9dd 2300 	ldrd	r2, r3, [sp]
 801ff10:	4620      	mov	r0, r4
 801ff12:	4629      	mov	r1, r5
 801ff14:	f7e0 fdd8 	bl	8000ac8 <__aeabi_dcmpeq>
 801ff18:	b118      	cbz	r0, 801ff22 <_dtoa_r+0x4b2>
 801ff1a:	f018 0f01 	tst.w	r8, #1
 801ff1e:	f040 80ef 	bne.w	8020100 <_dtoa_r+0x690>
 801ff22:	4649      	mov	r1, r9
 801ff24:	4658      	mov	r0, fp
 801ff26:	f000 fb86 	bl	8020636 <_Bfree>
 801ff2a:	2300      	movs	r3, #0
 801ff2c:	7033      	strb	r3, [r6, #0]
 801ff2e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ff30:	3701      	adds	r7, #1
 801ff32:	601f      	str	r7, [r3, #0]
 801ff34:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801ff36:	2b00      	cmp	r3, #0
 801ff38:	f43f add1 	beq.w	801fade <_dtoa_r+0x6e>
 801ff3c:	601e      	str	r6, [r3, #0]
 801ff3e:	e5ce      	b.n	801fade <_dtoa_r+0x6e>
 801ff40:	07e2      	lsls	r2, r4, #31
 801ff42:	d505      	bpl.n	801ff50 <_dtoa_r+0x4e0>
 801ff44:	e9d5 2300 	ldrd	r2, r3, [r5]
 801ff48:	f7e0 fb56 	bl	80005f8 <__aeabi_dmul>
 801ff4c:	3601      	adds	r6, #1
 801ff4e:	2301      	movs	r3, #1
 801ff50:	1064      	asrs	r4, r4, #1
 801ff52:	3508      	adds	r5, #8
 801ff54:	e73f      	b.n	801fdd6 <_dtoa_r+0x366>
 801ff56:	2602      	movs	r6, #2
 801ff58:	e742      	b.n	801fde0 <_dtoa_r+0x370>
 801ff5a:	9c07      	ldr	r4, [sp, #28]
 801ff5c:	9704      	str	r7, [sp, #16]
 801ff5e:	e761      	b.n	801fe24 <_dtoa_r+0x3b4>
 801ff60:	4b27      	ldr	r3, [pc, #156]	@ (8020000 <_dtoa_r+0x590>)
 801ff62:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801ff64:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801ff68:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801ff6c:	4454      	add	r4, sl
 801ff6e:	2900      	cmp	r1, #0
 801ff70:	d054      	beq.n	802001c <_dtoa_r+0x5ac>
 801ff72:	4929      	ldr	r1, [pc, #164]	@ (8020018 <_dtoa_r+0x5a8>)
 801ff74:	2000      	movs	r0, #0
 801ff76:	f7e0 fc69 	bl	800084c <__aeabi_ddiv>
 801ff7a:	4633      	mov	r3, r6
 801ff7c:	462a      	mov	r2, r5
 801ff7e:	f7e0 f983 	bl	8000288 <__aeabi_dsub>
 801ff82:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801ff86:	4656      	mov	r6, sl
 801ff88:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801ff8c:	f7e0 fde4 	bl	8000b58 <__aeabi_d2iz>
 801ff90:	4605      	mov	r5, r0
 801ff92:	f7e0 fac7 	bl	8000524 <__aeabi_i2d>
 801ff96:	4602      	mov	r2, r0
 801ff98:	460b      	mov	r3, r1
 801ff9a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801ff9e:	f7e0 f973 	bl	8000288 <__aeabi_dsub>
 801ffa2:	3530      	adds	r5, #48	@ 0x30
 801ffa4:	4602      	mov	r2, r0
 801ffa6:	460b      	mov	r3, r1
 801ffa8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801ffac:	f806 5b01 	strb.w	r5, [r6], #1
 801ffb0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801ffb4:	f7e0 fd92 	bl	8000adc <__aeabi_dcmplt>
 801ffb8:	2800      	cmp	r0, #0
 801ffba:	d172      	bne.n	80200a2 <_dtoa_r+0x632>
 801ffbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 801ffc0:	4911      	ldr	r1, [pc, #68]	@ (8020008 <_dtoa_r+0x598>)
 801ffc2:	2000      	movs	r0, #0
 801ffc4:	f7e0 f960 	bl	8000288 <__aeabi_dsub>
 801ffc8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 801ffcc:	f7e0 fd86 	bl	8000adc <__aeabi_dcmplt>
 801ffd0:	2800      	cmp	r0, #0
 801ffd2:	f040 8096 	bne.w	8020102 <_dtoa_r+0x692>
 801ffd6:	42a6      	cmp	r6, r4
 801ffd8:	f43f af50 	beq.w	801fe7c <_dtoa_r+0x40c>
 801ffdc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 801ffe0:	4b0a      	ldr	r3, [pc, #40]	@ (802000c <_dtoa_r+0x59c>)
 801ffe2:	2200      	movs	r2, #0
 801ffe4:	f7e0 fb08 	bl	80005f8 <__aeabi_dmul>
 801ffe8:	4b08      	ldr	r3, [pc, #32]	@ (802000c <_dtoa_r+0x59c>)
 801ffea:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 801ffee:	2200      	movs	r2, #0
 801fff0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801fff4:	f7e0 fb00 	bl	80005f8 <__aeabi_dmul>
 801fff8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801fffc:	e7c4      	b.n	801ff88 <_dtoa_r+0x518>
 801fffe:	bf00      	nop
 8020000:	08024f60 	.word	0x08024f60
 8020004:	08024f38 	.word	0x08024f38
 8020008:	3ff00000 	.word	0x3ff00000
 802000c:	40240000 	.word	0x40240000
 8020010:	401c0000 	.word	0x401c0000
 8020014:	40140000 	.word	0x40140000
 8020018:	3fe00000 	.word	0x3fe00000
 802001c:	4631      	mov	r1, r6
 802001e:	4628      	mov	r0, r5
 8020020:	f7e0 faea 	bl	80005f8 <__aeabi_dmul>
 8020024:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8020028:	9415      	str	r4, [sp, #84]	@ 0x54
 802002a:	4656      	mov	r6, sl
 802002c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020030:	f7e0 fd92 	bl	8000b58 <__aeabi_d2iz>
 8020034:	4605      	mov	r5, r0
 8020036:	f7e0 fa75 	bl	8000524 <__aeabi_i2d>
 802003a:	4602      	mov	r2, r0
 802003c:	460b      	mov	r3, r1
 802003e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020042:	f7e0 f921 	bl	8000288 <__aeabi_dsub>
 8020046:	3530      	adds	r5, #48	@ 0x30
 8020048:	f806 5b01 	strb.w	r5, [r6], #1
 802004c:	4602      	mov	r2, r0
 802004e:	460b      	mov	r3, r1
 8020050:	42a6      	cmp	r6, r4
 8020052:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8020056:	f04f 0200 	mov.w	r2, #0
 802005a:	d124      	bne.n	80200a6 <_dtoa_r+0x636>
 802005c:	4bac      	ldr	r3, [pc, #688]	@ (8020310 <_dtoa_r+0x8a0>)
 802005e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8020062:	f7e0 f913 	bl	800028c <__adddf3>
 8020066:	4602      	mov	r2, r0
 8020068:	460b      	mov	r3, r1
 802006a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802006e:	f7e0 fd53 	bl	8000b18 <__aeabi_dcmpgt>
 8020072:	2800      	cmp	r0, #0
 8020074:	d145      	bne.n	8020102 <_dtoa_r+0x692>
 8020076:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 802007a:	49a5      	ldr	r1, [pc, #660]	@ (8020310 <_dtoa_r+0x8a0>)
 802007c:	2000      	movs	r0, #0
 802007e:	f7e0 f903 	bl	8000288 <__aeabi_dsub>
 8020082:	4602      	mov	r2, r0
 8020084:	460b      	mov	r3, r1
 8020086:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 802008a:	f7e0 fd27 	bl	8000adc <__aeabi_dcmplt>
 802008e:	2800      	cmp	r0, #0
 8020090:	f43f aef4 	beq.w	801fe7c <_dtoa_r+0x40c>
 8020094:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8020096:	1e73      	subs	r3, r6, #1
 8020098:	9315      	str	r3, [sp, #84]	@ 0x54
 802009a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 802009e:	2b30      	cmp	r3, #48	@ 0x30
 80200a0:	d0f8      	beq.n	8020094 <_dtoa_r+0x624>
 80200a2:	9f04      	ldr	r7, [sp, #16]
 80200a4:	e73d      	b.n	801ff22 <_dtoa_r+0x4b2>
 80200a6:	4b9b      	ldr	r3, [pc, #620]	@ (8020314 <_dtoa_r+0x8a4>)
 80200a8:	f7e0 faa6 	bl	80005f8 <__aeabi_dmul>
 80200ac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80200b0:	e7bc      	b.n	802002c <_dtoa_r+0x5bc>
 80200b2:	d10c      	bne.n	80200ce <_dtoa_r+0x65e>
 80200b4:	4b98      	ldr	r3, [pc, #608]	@ (8020318 <_dtoa_r+0x8a8>)
 80200b6:	2200      	movs	r2, #0
 80200b8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80200bc:	f7e0 fa9c 	bl	80005f8 <__aeabi_dmul>
 80200c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80200c4:	f7e0 fd1e 	bl	8000b04 <__aeabi_dcmpge>
 80200c8:	2800      	cmp	r0, #0
 80200ca:	f000 8157 	beq.w	802037c <_dtoa_r+0x90c>
 80200ce:	2400      	movs	r4, #0
 80200d0:	4625      	mov	r5, r4
 80200d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80200d4:	43db      	mvns	r3, r3
 80200d6:	9304      	str	r3, [sp, #16]
 80200d8:	4656      	mov	r6, sl
 80200da:	2700      	movs	r7, #0
 80200dc:	4621      	mov	r1, r4
 80200de:	4658      	mov	r0, fp
 80200e0:	f000 faa9 	bl	8020636 <_Bfree>
 80200e4:	2d00      	cmp	r5, #0
 80200e6:	d0dc      	beq.n	80200a2 <_dtoa_r+0x632>
 80200e8:	b12f      	cbz	r7, 80200f6 <_dtoa_r+0x686>
 80200ea:	42af      	cmp	r7, r5
 80200ec:	d003      	beq.n	80200f6 <_dtoa_r+0x686>
 80200ee:	4639      	mov	r1, r7
 80200f0:	4658      	mov	r0, fp
 80200f2:	f000 faa0 	bl	8020636 <_Bfree>
 80200f6:	4629      	mov	r1, r5
 80200f8:	4658      	mov	r0, fp
 80200fa:	f000 fa9c 	bl	8020636 <_Bfree>
 80200fe:	e7d0      	b.n	80200a2 <_dtoa_r+0x632>
 8020100:	9704      	str	r7, [sp, #16]
 8020102:	4633      	mov	r3, r6
 8020104:	461e      	mov	r6, r3
 8020106:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802010a:	2a39      	cmp	r2, #57	@ 0x39
 802010c:	d107      	bne.n	802011e <_dtoa_r+0x6ae>
 802010e:	459a      	cmp	sl, r3
 8020110:	d1f8      	bne.n	8020104 <_dtoa_r+0x694>
 8020112:	9a04      	ldr	r2, [sp, #16]
 8020114:	3201      	adds	r2, #1
 8020116:	9204      	str	r2, [sp, #16]
 8020118:	2230      	movs	r2, #48	@ 0x30
 802011a:	f88a 2000 	strb.w	r2, [sl]
 802011e:	781a      	ldrb	r2, [r3, #0]
 8020120:	3201      	adds	r2, #1
 8020122:	701a      	strb	r2, [r3, #0]
 8020124:	e7bd      	b.n	80200a2 <_dtoa_r+0x632>
 8020126:	4b7b      	ldr	r3, [pc, #492]	@ (8020314 <_dtoa_r+0x8a4>)
 8020128:	2200      	movs	r2, #0
 802012a:	f7e0 fa65 	bl	80005f8 <__aeabi_dmul>
 802012e:	2200      	movs	r2, #0
 8020130:	2300      	movs	r3, #0
 8020132:	4604      	mov	r4, r0
 8020134:	460d      	mov	r5, r1
 8020136:	f7e0 fcc7 	bl	8000ac8 <__aeabi_dcmpeq>
 802013a:	2800      	cmp	r0, #0
 802013c:	f43f aeba 	beq.w	801feb4 <_dtoa_r+0x444>
 8020140:	e6ef      	b.n	801ff22 <_dtoa_r+0x4b2>
 8020142:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020144:	2a00      	cmp	r2, #0
 8020146:	f000 80db 	beq.w	8020300 <_dtoa_r+0x890>
 802014a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802014c:	2a01      	cmp	r2, #1
 802014e:	f300 80bf 	bgt.w	80202d0 <_dtoa_r+0x860>
 8020152:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020154:	2a00      	cmp	r2, #0
 8020156:	f000 80b7 	beq.w	80202c8 <_dtoa_r+0x858>
 802015a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 802015e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020160:	4646      	mov	r6, r8
 8020162:	9a08      	ldr	r2, [sp, #32]
 8020164:	2101      	movs	r1, #1
 8020166:	441a      	add	r2, r3
 8020168:	4658      	mov	r0, fp
 802016a:	4498      	add	r8, r3
 802016c:	9208      	str	r2, [sp, #32]
 802016e:	f000 fafd 	bl	802076c <__i2b>
 8020172:	4605      	mov	r5, r0
 8020174:	b15e      	cbz	r6, 802018e <_dtoa_r+0x71e>
 8020176:	9b08      	ldr	r3, [sp, #32]
 8020178:	2b00      	cmp	r3, #0
 802017a:	dd08      	ble.n	802018e <_dtoa_r+0x71e>
 802017c:	42b3      	cmp	r3, r6
 802017e:	9a08      	ldr	r2, [sp, #32]
 8020180:	bfa8      	it	ge
 8020182:	4633      	movge	r3, r6
 8020184:	eba8 0803 	sub.w	r8, r8, r3
 8020188:	1af6      	subs	r6, r6, r3
 802018a:	1ad3      	subs	r3, r2, r3
 802018c:	9308      	str	r3, [sp, #32]
 802018e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020190:	b1f3      	cbz	r3, 80201d0 <_dtoa_r+0x760>
 8020192:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020194:	2b00      	cmp	r3, #0
 8020196:	f000 80b7 	beq.w	8020308 <_dtoa_r+0x898>
 802019a:	b18c      	cbz	r4, 80201c0 <_dtoa_r+0x750>
 802019c:	4629      	mov	r1, r5
 802019e:	4622      	mov	r2, r4
 80201a0:	4658      	mov	r0, fp
 80201a2:	f000 fba3 	bl	80208ec <__pow5mult>
 80201a6:	464a      	mov	r2, r9
 80201a8:	4601      	mov	r1, r0
 80201aa:	4605      	mov	r5, r0
 80201ac:	4658      	mov	r0, fp
 80201ae:	f000 faf3 	bl	8020798 <__multiply>
 80201b2:	4649      	mov	r1, r9
 80201b4:	9004      	str	r0, [sp, #16]
 80201b6:	4658      	mov	r0, fp
 80201b8:	f000 fa3d 	bl	8020636 <_Bfree>
 80201bc:	9b04      	ldr	r3, [sp, #16]
 80201be:	4699      	mov	r9, r3
 80201c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80201c2:	1b1a      	subs	r2, r3, r4
 80201c4:	d004      	beq.n	80201d0 <_dtoa_r+0x760>
 80201c6:	4649      	mov	r1, r9
 80201c8:	4658      	mov	r0, fp
 80201ca:	f000 fb8f 	bl	80208ec <__pow5mult>
 80201ce:	4681      	mov	r9, r0
 80201d0:	2101      	movs	r1, #1
 80201d2:	4658      	mov	r0, fp
 80201d4:	f000 faca 	bl	802076c <__i2b>
 80201d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80201da:	4604      	mov	r4, r0
 80201dc:	2b00      	cmp	r3, #0
 80201de:	f000 81cc 	beq.w	802057a <_dtoa_r+0xb0a>
 80201e2:	461a      	mov	r2, r3
 80201e4:	4601      	mov	r1, r0
 80201e6:	4658      	mov	r0, fp
 80201e8:	f000 fb80 	bl	80208ec <__pow5mult>
 80201ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201ee:	2b01      	cmp	r3, #1
 80201f0:	4604      	mov	r4, r0
 80201f2:	f300 8095 	bgt.w	8020320 <_dtoa_r+0x8b0>
 80201f6:	9b02      	ldr	r3, [sp, #8]
 80201f8:	2b00      	cmp	r3, #0
 80201fa:	f040 8087 	bne.w	802030c <_dtoa_r+0x89c>
 80201fe:	9b03      	ldr	r3, [sp, #12]
 8020200:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8020204:	2b00      	cmp	r3, #0
 8020206:	f040 8089 	bne.w	802031c <_dtoa_r+0x8ac>
 802020a:	9b03      	ldr	r3, [sp, #12]
 802020c:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8020210:	0d1b      	lsrs	r3, r3, #20
 8020212:	051b      	lsls	r3, r3, #20
 8020214:	b12b      	cbz	r3, 8020222 <_dtoa_r+0x7b2>
 8020216:	9b08      	ldr	r3, [sp, #32]
 8020218:	3301      	adds	r3, #1
 802021a:	9308      	str	r3, [sp, #32]
 802021c:	f108 0801 	add.w	r8, r8, #1
 8020220:	2301      	movs	r3, #1
 8020222:	930a      	str	r3, [sp, #40]	@ 0x28
 8020224:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020226:	2b00      	cmp	r3, #0
 8020228:	f000 81ad 	beq.w	8020586 <_dtoa_r+0xb16>
 802022c:	6923      	ldr	r3, [r4, #16]
 802022e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8020232:	6918      	ldr	r0, [r3, #16]
 8020234:	f000 fa4e 	bl	80206d4 <__hi0bits>
 8020238:	f1c0 0020 	rsb	r0, r0, #32
 802023c:	9b08      	ldr	r3, [sp, #32]
 802023e:	4418      	add	r0, r3
 8020240:	f010 001f 	ands.w	r0, r0, #31
 8020244:	d077      	beq.n	8020336 <_dtoa_r+0x8c6>
 8020246:	f1c0 0320 	rsb	r3, r0, #32
 802024a:	2b04      	cmp	r3, #4
 802024c:	dd6b      	ble.n	8020326 <_dtoa_r+0x8b6>
 802024e:	9b08      	ldr	r3, [sp, #32]
 8020250:	f1c0 001c 	rsb	r0, r0, #28
 8020254:	4403      	add	r3, r0
 8020256:	4480      	add	r8, r0
 8020258:	4406      	add	r6, r0
 802025a:	9308      	str	r3, [sp, #32]
 802025c:	f1b8 0f00 	cmp.w	r8, #0
 8020260:	dd05      	ble.n	802026e <_dtoa_r+0x7fe>
 8020262:	4649      	mov	r1, r9
 8020264:	4642      	mov	r2, r8
 8020266:	4658      	mov	r0, fp
 8020268:	f000 fb80 	bl	802096c <__lshift>
 802026c:	4681      	mov	r9, r0
 802026e:	9b08      	ldr	r3, [sp, #32]
 8020270:	2b00      	cmp	r3, #0
 8020272:	dd05      	ble.n	8020280 <_dtoa_r+0x810>
 8020274:	4621      	mov	r1, r4
 8020276:	461a      	mov	r2, r3
 8020278:	4658      	mov	r0, fp
 802027a:	f000 fb77 	bl	802096c <__lshift>
 802027e:	4604      	mov	r4, r0
 8020280:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020282:	2b00      	cmp	r3, #0
 8020284:	d059      	beq.n	802033a <_dtoa_r+0x8ca>
 8020286:	4621      	mov	r1, r4
 8020288:	4648      	mov	r0, r9
 802028a:	f000 fbdb 	bl	8020a44 <__mcmp>
 802028e:	2800      	cmp	r0, #0
 8020290:	da53      	bge.n	802033a <_dtoa_r+0x8ca>
 8020292:	1e7b      	subs	r3, r7, #1
 8020294:	9304      	str	r3, [sp, #16]
 8020296:	4649      	mov	r1, r9
 8020298:	2300      	movs	r3, #0
 802029a:	220a      	movs	r2, #10
 802029c:	4658      	mov	r0, fp
 802029e:	f000 f9d3 	bl	8020648 <__multadd>
 80202a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80202a4:	4681      	mov	r9, r0
 80202a6:	2b00      	cmp	r3, #0
 80202a8:	f000 816f 	beq.w	802058a <_dtoa_r+0xb1a>
 80202ac:	2300      	movs	r3, #0
 80202ae:	4629      	mov	r1, r5
 80202b0:	220a      	movs	r2, #10
 80202b2:	4658      	mov	r0, fp
 80202b4:	f000 f9c8 	bl	8020648 <__multadd>
 80202b8:	9b00      	ldr	r3, [sp, #0]
 80202ba:	2b00      	cmp	r3, #0
 80202bc:	4605      	mov	r5, r0
 80202be:	dc67      	bgt.n	8020390 <_dtoa_r+0x920>
 80202c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80202c2:	2b02      	cmp	r3, #2
 80202c4:	dc41      	bgt.n	802034a <_dtoa_r+0x8da>
 80202c6:	e063      	b.n	8020390 <_dtoa_r+0x920>
 80202c8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80202ca:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80202ce:	e746      	b.n	802015e <_dtoa_r+0x6ee>
 80202d0:	9b07      	ldr	r3, [sp, #28]
 80202d2:	1e5c      	subs	r4, r3, #1
 80202d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80202d6:	42a3      	cmp	r3, r4
 80202d8:	bfbf      	itttt	lt
 80202da:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 80202dc:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 80202de:	940a      	strlt	r4, [sp, #40]	@ 0x28
 80202e0:	1ae3      	sublt	r3, r4, r3
 80202e2:	bfb4      	ite	lt
 80202e4:	18d2      	addlt	r2, r2, r3
 80202e6:	1b1c      	subge	r4, r3, r4
 80202e8:	9b07      	ldr	r3, [sp, #28]
 80202ea:	bfbc      	itt	lt
 80202ec:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 80202ee:	2400      	movlt	r4, #0
 80202f0:	2b00      	cmp	r3, #0
 80202f2:	bfb5      	itete	lt
 80202f4:	eba8 0603 	sublt.w	r6, r8, r3
 80202f8:	9b07      	ldrge	r3, [sp, #28]
 80202fa:	2300      	movlt	r3, #0
 80202fc:	4646      	movge	r6, r8
 80202fe:	e730      	b.n	8020162 <_dtoa_r+0x6f2>
 8020300:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020302:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020304:	4646      	mov	r6, r8
 8020306:	e735      	b.n	8020174 <_dtoa_r+0x704>
 8020308:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802030a:	e75c      	b.n	80201c6 <_dtoa_r+0x756>
 802030c:	2300      	movs	r3, #0
 802030e:	e788      	b.n	8020222 <_dtoa_r+0x7b2>
 8020310:	3fe00000 	.word	0x3fe00000
 8020314:	40240000 	.word	0x40240000
 8020318:	40140000 	.word	0x40140000
 802031c:	9b02      	ldr	r3, [sp, #8]
 802031e:	e780      	b.n	8020222 <_dtoa_r+0x7b2>
 8020320:	2300      	movs	r3, #0
 8020322:	930a      	str	r3, [sp, #40]	@ 0x28
 8020324:	e782      	b.n	802022c <_dtoa_r+0x7bc>
 8020326:	d099      	beq.n	802025c <_dtoa_r+0x7ec>
 8020328:	9a08      	ldr	r2, [sp, #32]
 802032a:	331c      	adds	r3, #28
 802032c:	441a      	add	r2, r3
 802032e:	4498      	add	r8, r3
 8020330:	441e      	add	r6, r3
 8020332:	9208      	str	r2, [sp, #32]
 8020334:	e792      	b.n	802025c <_dtoa_r+0x7ec>
 8020336:	4603      	mov	r3, r0
 8020338:	e7f6      	b.n	8020328 <_dtoa_r+0x8b8>
 802033a:	9b07      	ldr	r3, [sp, #28]
 802033c:	9704      	str	r7, [sp, #16]
 802033e:	2b00      	cmp	r3, #0
 8020340:	dc20      	bgt.n	8020384 <_dtoa_r+0x914>
 8020342:	9300      	str	r3, [sp, #0]
 8020344:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020346:	2b02      	cmp	r3, #2
 8020348:	dd1e      	ble.n	8020388 <_dtoa_r+0x918>
 802034a:	9b00      	ldr	r3, [sp, #0]
 802034c:	2b00      	cmp	r3, #0
 802034e:	f47f aec0 	bne.w	80200d2 <_dtoa_r+0x662>
 8020352:	4621      	mov	r1, r4
 8020354:	2205      	movs	r2, #5
 8020356:	4658      	mov	r0, fp
 8020358:	f000 f976 	bl	8020648 <__multadd>
 802035c:	4601      	mov	r1, r0
 802035e:	4604      	mov	r4, r0
 8020360:	4648      	mov	r0, r9
 8020362:	f000 fb6f 	bl	8020a44 <__mcmp>
 8020366:	2800      	cmp	r0, #0
 8020368:	f77f aeb3 	ble.w	80200d2 <_dtoa_r+0x662>
 802036c:	4656      	mov	r6, sl
 802036e:	2331      	movs	r3, #49	@ 0x31
 8020370:	f806 3b01 	strb.w	r3, [r6], #1
 8020374:	9b04      	ldr	r3, [sp, #16]
 8020376:	3301      	adds	r3, #1
 8020378:	9304      	str	r3, [sp, #16]
 802037a:	e6ae      	b.n	80200da <_dtoa_r+0x66a>
 802037c:	9c07      	ldr	r4, [sp, #28]
 802037e:	9704      	str	r7, [sp, #16]
 8020380:	4625      	mov	r5, r4
 8020382:	e7f3      	b.n	802036c <_dtoa_r+0x8fc>
 8020384:	9b07      	ldr	r3, [sp, #28]
 8020386:	9300      	str	r3, [sp, #0]
 8020388:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802038a:	2b00      	cmp	r3, #0
 802038c:	f000 8101 	beq.w	8020592 <_dtoa_r+0xb22>
 8020390:	2e00      	cmp	r6, #0
 8020392:	dd05      	ble.n	80203a0 <_dtoa_r+0x930>
 8020394:	4629      	mov	r1, r5
 8020396:	4632      	mov	r2, r6
 8020398:	4658      	mov	r0, fp
 802039a:	f000 fae7 	bl	802096c <__lshift>
 802039e:	4605      	mov	r5, r0
 80203a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80203a2:	2b00      	cmp	r3, #0
 80203a4:	d059      	beq.n	802045a <_dtoa_r+0x9ea>
 80203a6:	6869      	ldr	r1, [r5, #4]
 80203a8:	4658      	mov	r0, fp
 80203aa:	f000 f91f 	bl	80205ec <_Balloc>
 80203ae:	4606      	mov	r6, r0
 80203b0:	b920      	cbnz	r0, 80203bc <_dtoa_r+0x94c>
 80203b2:	4b83      	ldr	r3, [pc, #524]	@ (80205c0 <_dtoa_r+0xb50>)
 80203b4:	4602      	mov	r2, r0
 80203b6:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80203ba:	e480      	b.n	801fcbe <_dtoa_r+0x24e>
 80203bc:	692a      	ldr	r2, [r5, #16]
 80203be:	3202      	adds	r2, #2
 80203c0:	0092      	lsls	r2, r2, #2
 80203c2:	f105 010c 	add.w	r1, r5, #12
 80203c6:	300c      	adds	r0, #12
 80203c8:	f7fd fbac 	bl	801db24 <memcpy>
 80203cc:	2201      	movs	r2, #1
 80203ce:	4631      	mov	r1, r6
 80203d0:	4658      	mov	r0, fp
 80203d2:	f000 facb 	bl	802096c <__lshift>
 80203d6:	f10a 0301 	add.w	r3, sl, #1
 80203da:	9307      	str	r3, [sp, #28]
 80203dc:	9b00      	ldr	r3, [sp, #0]
 80203de:	4453      	add	r3, sl
 80203e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80203e2:	9b02      	ldr	r3, [sp, #8]
 80203e4:	f003 0301 	and.w	r3, r3, #1
 80203e8:	462f      	mov	r7, r5
 80203ea:	930a      	str	r3, [sp, #40]	@ 0x28
 80203ec:	4605      	mov	r5, r0
 80203ee:	9b07      	ldr	r3, [sp, #28]
 80203f0:	4621      	mov	r1, r4
 80203f2:	3b01      	subs	r3, #1
 80203f4:	4648      	mov	r0, r9
 80203f6:	9300      	str	r3, [sp, #0]
 80203f8:	f7ff fab2 	bl	801f960 <quorem>
 80203fc:	4639      	mov	r1, r7
 80203fe:	9002      	str	r0, [sp, #8]
 8020400:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8020404:	4648      	mov	r0, r9
 8020406:	f000 fb1d 	bl	8020a44 <__mcmp>
 802040a:	462a      	mov	r2, r5
 802040c:	9008      	str	r0, [sp, #32]
 802040e:	4621      	mov	r1, r4
 8020410:	4658      	mov	r0, fp
 8020412:	f000 fb33 	bl	8020a7c <__mdiff>
 8020416:	68c2      	ldr	r2, [r0, #12]
 8020418:	4606      	mov	r6, r0
 802041a:	bb02      	cbnz	r2, 802045e <_dtoa_r+0x9ee>
 802041c:	4601      	mov	r1, r0
 802041e:	4648      	mov	r0, r9
 8020420:	f000 fb10 	bl	8020a44 <__mcmp>
 8020424:	4602      	mov	r2, r0
 8020426:	4631      	mov	r1, r6
 8020428:	4658      	mov	r0, fp
 802042a:	920e      	str	r2, [sp, #56]	@ 0x38
 802042c:	f000 f903 	bl	8020636 <_Bfree>
 8020430:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020432:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020434:	9e07      	ldr	r6, [sp, #28]
 8020436:	ea43 0102 	orr.w	r1, r3, r2
 802043a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802043c:	4319      	orrs	r1, r3
 802043e:	d110      	bne.n	8020462 <_dtoa_r+0x9f2>
 8020440:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8020444:	d029      	beq.n	802049a <_dtoa_r+0xa2a>
 8020446:	9b08      	ldr	r3, [sp, #32]
 8020448:	2b00      	cmp	r3, #0
 802044a:	dd02      	ble.n	8020452 <_dtoa_r+0x9e2>
 802044c:	9b02      	ldr	r3, [sp, #8]
 802044e:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8020452:	9b00      	ldr	r3, [sp, #0]
 8020454:	f883 8000 	strb.w	r8, [r3]
 8020458:	e640      	b.n	80200dc <_dtoa_r+0x66c>
 802045a:	4628      	mov	r0, r5
 802045c:	e7bb      	b.n	80203d6 <_dtoa_r+0x966>
 802045e:	2201      	movs	r2, #1
 8020460:	e7e1      	b.n	8020426 <_dtoa_r+0x9b6>
 8020462:	9b08      	ldr	r3, [sp, #32]
 8020464:	2b00      	cmp	r3, #0
 8020466:	db04      	blt.n	8020472 <_dtoa_r+0xa02>
 8020468:	9909      	ldr	r1, [sp, #36]	@ 0x24
 802046a:	430b      	orrs	r3, r1
 802046c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802046e:	430b      	orrs	r3, r1
 8020470:	d120      	bne.n	80204b4 <_dtoa_r+0xa44>
 8020472:	2a00      	cmp	r2, #0
 8020474:	dded      	ble.n	8020452 <_dtoa_r+0x9e2>
 8020476:	4649      	mov	r1, r9
 8020478:	2201      	movs	r2, #1
 802047a:	4658      	mov	r0, fp
 802047c:	f000 fa76 	bl	802096c <__lshift>
 8020480:	4621      	mov	r1, r4
 8020482:	4681      	mov	r9, r0
 8020484:	f000 fade 	bl	8020a44 <__mcmp>
 8020488:	2800      	cmp	r0, #0
 802048a:	dc03      	bgt.n	8020494 <_dtoa_r+0xa24>
 802048c:	d1e1      	bne.n	8020452 <_dtoa_r+0x9e2>
 802048e:	f018 0f01 	tst.w	r8, #1
 8020492:	d0de      	beq.n	8020452 <_dtoa_r+0x9e2>
 8020494:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8020498:	d1d8      	bne.n	802044c <_dtoa_r+0x9dc>
 802049a:	9a00      	ldr	r2, [sp, #0]
 802049c:	2339      	movs	r3, #57	@ 0x39
 802049e:	7013      	strb	r3, [r2, #0]
 80204a0:	4633      	mov	r3, r6
 80204a2:	461e      	mov	r6, r3
 80204a4:	3b01      	subs	r3, #1
 80204a6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80204aa:	2a39      	cmp	r2, #57	@ 0x39
 80204ac:	d052      	beq.n	8020554 <_dtoa_r+0xae4>
 80204ae:	3201      	adds	r2, #1
 80204b0:	701a      	strb	r2, [r3, #0]
 80204b2:	e613      	b.n	80200dc <_dtoa_r+0x66c>
 80204b4:	2a00      	cmp	r2, #0
 80204b6:	dd07      	ble.n	80204c8 <_dtoa_r+0xa58>
 80204b8:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80204bc:	d0ed      	beq.n	802049a <_dtoa_r+0xa2a>
 80204be:	9a00      	ldr	r2, [sp, #0]
 80204c0:	f108 0301 	add.w	r3, r8, #1
 80204c4:	7013      	strb	r3, [r2, #0]
 80204c6:	e609      	b.n	80200dc <_dtoa_r+0x66c>
 80204c8:	9b07      	ldr	r3, [sp, #28]
 80204ca:	9a07      	ldr	r2, [sp, #28]
 80204cc:	f803 8c01 	strb.w	r8, [r3, #-1]
 80204d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80204d2:	4293      	cmp	r3, r2
 80204d4:	d028      	beq.n	8020528 <_dtoa_r+0xab8>
 80204d6:	4649      	mov	r1, r9
 80204d8:	2300      	movs	r3, #0
 80204da:	220a      	movs	r2, #10
 80204dc:	4658      	mov	r0, fp
 80204de:	f000 f8b3 	bl	8020648 <__multadd>
 80204e2:	42af      	cmp	r7, r5
 80204e4:	4681      	mov	r9, r0
 80204e6:	f04f 0300 	mov.w	r3, #0
 80204ea:	f04f 020a 	mov.w	r2, #10
 80204ee:	4639      	mov	r1, r7
 80204f0:	4658      	mov	r0, fp
 80204f2:	d107      	bne.n	8020504 <_dtoa_r+0xa94>
 80204f4:	f000 f8a8 	bl	8020648 <__multadd>
 80204f8:	4607      	mov	r7, r0
 80204fa:	4605      	mov	r5, r0
 80204fc:	9b07      	ldr	r3, [sp, #28]
 80204fe:	3301      	adds	r3, #1
 8020500:	9307      	str	r3, [sp, #28]
 8020502:	e774      	b.n	80203ee <_dtoa_r+0x97e>
 8020504:	f000 f8a0 	bl	8020648 <__multadd>
 8020508:	4629      	mov	r1, r5
 802050a:	4607      	mov	r7, r0
 802050c:	2300      	movs	r3, #0
 802050e:	220a      	movs	r2, #10
 8020510:	4658      	mov	r0, fp
 8020512:	f000 f899 	bl	8020648 <__multadd>
 8020516:	4605      	mov	r5, r0
 8020518:	e7f0      	b.n	80204fc <_dtoa_r+0xa8c>
 802051a:	9b00      	ldr	r3, [sp, #0]
 802051c:	2b00      	cmp	r3, #0
 802051e:	bfcc      	ite	gt
 8020520:	461e      	movgt	r6, r3
 8020522:	2601      	movle	r6, #1
 8020524:	4456      	add	r6, sl
 8020526:	2700      	movs	r7, #0
 8020528:	4649      	mov	r1, r9
 802052a:	2201      	movs	r2, #1
 802052c:	4658      	mov	r0, fp
 802052e:	f000 fa1d 	bl	802096c <__lshift>
 8020532:	4621      	mov	r1, r4
 8020534:	4681      	mov	r9, r0
 8020536:	f000 fa85 	bl	8020a44 <__mcmp>
 802053a:	2800      	cmp	r0, #0
 802053c:	dcb0      	bgt.n	80204a0 <_dtoa_r+0xa30>
 802053e:	d102      	bne.n	8020546 <_dtoa_r+0xad6>
 8020540:	f018 0f01 	tst.w	r8, #1
 8020544:	d1ac      	bne.n	80204a0 <_dtoa_r+0xa30>
 8020546:	4633      	mov	r3, r6
 8020548:	461e      	mov	r6, r3
 802054a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 802054e:	2a30      	cmp	r2, #48	@ 0x30
 8020550:	d0fa      	beq.n	8020548 <_dtoa_r+0xad8>
 8020552:	e5c3      	b.n	80200dc <_dtoa_r+0x66c>
 8020554:	459a      	cmp	sl, r3
 8020556:	d1a4      	bne.n	80204a2 <_dtoa_r+0xa32>
 8020558:	9b04      	ldr	r3, [sp, #16]
 802055a:	3301      	adds	r3, #1
 802055c:	9304      	str	r3, [sp, #16]
 802055e:	2331      	movs	r3, #49	@ 0x31
 8020560:	f88a 3000 	strb.w	r3, [sl]
 8020564:	e5ba      	b.n	80200dc <_dtoa_r+0x66c>
 8020566:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020568:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80205c4 <_dtoa_r+0xb54>
 802056c:	2b00      	cmp	r3, #0
 802056e:	f43f aab6 	beq.w	801fade <_dtoa_r+0x6e>
 8020572:	f10a 0308 	add.w	r3, sl, #8
 8020576:	f7ff bab0 	b.w	801fada <_dtoa_r+0x6a>
 802057a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802057c:	2b01      	cmp	r3, #1
 802057e:	f77f ae3a 	ble.w	80201f6 <_dtoa_r+0x786>
 8020582:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020584:	930a      	str	r3, [sp, #40]	@ 0x28
 8020586:	2001      	movs	r0, #1
 8020588:	e658      	b.n	802023c <_dtoa_r+0x7cc>
 802058a:	9b00      	ldr	r3, [sp, #0]
 802058c:	2b00      	cmp	r3, #0
 802058e:	f77f aed9 	ble.w	8020344 <_dtoa_r+0x8d4>
 8020592:	4656      	mov	r6, sl
 8020594:	4621      	mov	r1, r4
 8020596:	4648      	mov	r0, r9
 8020598:	f7ff f9e2 	bl	801f960 <quorem>
 802059c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80205a0:	f806 8b01 	strb.w	r8, [r6], #1
 80205a4:	9b00      	ldr	r3, [sp, #0]
 80205a6:	eba6 020a 	sub.w	r2, r6, sl
 80205aa:	4293      	cmp	r3, r2
 80205ac:	ddb5      	ble.n	802051a <_dtoa_r+0xaaa>
 80205ae:	4649      	mov	r1, r9
 80205b0:	2300      	movs	r3, #0
 80205b2:	220a      	movs	r2, #10
 80205b4:	4658      	mov	r0, fp
 80205b6:	f000 f847 	bl	8020648 <__multadd>
 80205ba:	4681      	mov	r9, r0
 80205bc:	e7ea      	b.n	8020594 <_dtoa_r+0xb24>
 80205be:	bf00      	nop
 80205c0:	08024e63 	.word	0x08024e63
 80205c4:	08024e56 	.word	0x08024e56

080205c8 <__ascii_mbtowc>:
 80205c8:	b082      	sub	sp, #8
 80205ca:	b901      	cbnz	r1, 80205ce <__ascii_mbtowc+0x6>
 80205cc:	a901      	add	r1, sp, #4
 80205ce:	b142      	cbz	r2, 80205e2 <__ascii_mbtowc+0x1a>
 80205d0:	b14b      	cbz	r3, 80205e6 <__ascii_mbtowc+0x1e>
 80205d2:	7813      	ldrb	r3, [r2, #0]
 80205d4:	600b      	str	r3, [r1, #0]
 80205d6:	7812      	ldrb	r2, [r2, #0]
 80205d8:	1e10      	subs	r0, r2, #0
 80205da:	bf18      	it	ne
 80205dc:	2001      	movne	r0, #1
 80205de:	b002      	add	sp, #8
 80205e0:	4770      	bx	lr
 80205e2:	4610      	mov	r0, r2
 80205e4:	e7fb      	b.n	80205de <__ascii_mbtowc+0x16>
 80205e6:	f06f 0001 	mvn.w	r0, #1
 80205ea:	e7f8      	b.n	80205de <__ascii_mbtowc+0x16>

080205ec <_Balloc>:
 80205ec:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80205ee:	b570      	push	{r4, r5, r6, lr}
 80205f0:	4605      	mov	r5, r0
 80205f2:	460c      	mov	r4, r1
 80205f4:	b17b      	cbz	r3, 8020616 <_Balloc+0x2a>
 80205f6:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 80205f8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80205fc:	b9a0      	cbnz	r0, 8020628 <_Balloc+0x3c>
 80205fe:	2101      	movs	r1, #1
 8020600:	fa01 f604 	lsl.w	r6, r1, r4
 8020604:	1d72      	adds	r2, r6, #5
 8020606:	0092      	lsls	r2, r2, #2
 8020608:	4628      	mov	r0, r5
 802060a:	f000 fd8d 	bl	8021128 <_calloc_r>
 802060e:	b148      	cbz	r0, 8020624 <_Balloc+0x38>
 8020610:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8020614:	e00b      	b.n	802062e <_Balloc+0x42>
 8020616:	2221      	movs	r2, #33	@ 0x21
 8020618:	2104      	movs	r1, #4
 802061a:	f000 fd85 	bl	8021128 <_calloc_r>
 802061e:	6468      	str	r0, [r5, #68]	@ 0x44
 8020620:	2800      	cmp	r0, #0
 8020622:	d1e8      	bne.n	80205f6 <_Balloc+0xa>
 8020624:	2000      	movs	r0, #0
 8020626:	bd70      	pop	{r4, r5, r6, pc}
 8020628:	6802      	ldr	r2, [r0, #0]
 802062a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 802062e:	2300      	movs	r3, #0
 8020630:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8020634:	e7f7      	b.n	8020626 <_Balloc+0x3a>

08020636 <_Bfree>:
 8020636:	b131      	cbz	r1, 8020646 <_Bfree+0x10>
 8020638:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 802063a:	684a      	ldr	r2, [r1, #4]
 802063c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020640:	6008      	str	r0, [r1, #0]
 8020642:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8020646:	4770      	bx	lr

08020648 <__multadd>:
 8020648:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802064c:	690d      	ldr	r5, [r1, #16]
 802064e:	4607      	mov	r7, r0
 8020650:	460c      	mov	r4, r1
 8020652:	461e      	mov	r6, r3
 8020654:	f101 0c14 	add.w	ip, r1, #20
 8020658:	2000      	movs	r0, #0
 802065a:	f8dc 3000 	ldr.w	r3, [ip]
 802065e:	b299      	uxth	r1, r3
 8020660:	fb02 6101 	mla	r1, r2, r1, r6
 8020664:	0c1e      	lsrs	r6, r3, #16
 8020666:	0c0b      	lsrs	r3, r1, #16
 8020668:	fb02 3306 	mla	r3, r2, r6, r3
 802066c:	b289      	uxth	r1, r1
 802066e:	3001      	adds	r0, #1
 8020670:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8020674:	4285      	cmp	r5, r0
 8020676:	f84c 1b04 	str.w	r1, [ip], #4
 802067a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 802067e:	dcec      	bgt.n	802065a <__multadd+0x12>
 8020680:	b30e      	cbz	r6, 80206c6 <__multadd+0x7e>
 8020682:	68a3      	ldr	r3, [r4, #8]
 8020684:	42ab      	cmp	r3, r5
 8020686:	dc19      	bgt.n	80206bc <__multadd+0x74>
 8020688:	6861      	ldr	r1, [r4, #4]
 802068a:	4638      	mov	r0, r7
 802068c:	3101      	adds	r1, #1
 802068e:	f7ff ffad 	bl	80205ec <_Balloc>
 8020692:	4680      	mov	r8, r0
 8020694:	b928      	cbnz	r0, 80206a2 <__multadd+0x5a>
 8020696:	4602      	mov	r2, r0
 8020698:	4b0c      	ldr	r3, [pc, #48]	@ (80206cc <__multadd+0x84>)
 802069a:	480d      	ldr	r0, [pc, #52]	@ (80206d0 <__multadd+0x88>)
 802069c:	21ba      	movs	r1, #186	@ 0xba
 802069e:	f000 fd25 	bl	80210ec <__assert_func>
 80206a2:	6922      	ldr	r2, [r4, #16]
 80206a4:	3202      	adds	r2, #2
 80206a6:	f104 010c 	add.w	r1, r4, #12
 80206aa:	0092      	lsls	r2, r2, #2
 80206ac:	300c      	adds	r0, #12
 80206ae:	f7fd fa39 	bl	801db24 <memcpy>
 80206b2:	4621      	mov	r1, r4
 80206b4:	4638      	mov	r0, r7
 80206b6:	f7ff ffbe 	bl	8020636 <_Bfree>
 80206ba:	4644      	mov	r4, r8
 80206bc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80206c0:	3501      	adds	r5, #1
 80206c2:	615e      	str	r6, [r3, #20]
 80206c4:	6125      	str	r5, [r4, #16]
 80206c6:	4620      	mov	r0, r4
 80206c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80206cc:	08024e63 	.word	0x08024e63
 80206d0:	08024ecc 	.word	0x08024ecc

080206d4 <__hi0bits>:
 80206d4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80206d8:	4603      	mov	r3, r0
 80206da:	bf36      	itet	cc
 80206dc:	0403      	lslcc	r3, r0, #16
 80206de:	2000      	movcs	r0, #0
 80206e0:	2010      	movcc	r0, #16
 80206e2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80206e6:	bf3c      	itt	cc
 80206e8:	021b      	lslcc	r3, r3, #8
 80206ea:	3008      	addcc	r0, #8
 80206ec:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80206f0:	bf3c      	itt	cc
 80206f2:	011b      	lslcc	r3, r3, #4
 80206f4:	3004      	addcc	r0, #4
 80206f6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80206fa:	bf3c      	itt	cc
 80206fc:	009b      	lslcc	r3, r3, #2
 80206fe:	3002      	addcc	r0, #2
 8020700:	2b00      	cmp	r3, #0
 8020702:	db05      	blt.n	8020710 <__hi0bits+0x3c>
 8020704:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8020708:	f100 0001 	add.w	r0, r0, #1
 802070c:	bf08      	it	eq
 802070e:	2020      	moveq	r0, #32
 8020710:	4770      	bx	lr

08020712 <__lo0bits>:
 8020712:	6803      	ldr	r3, [r0, #0]
 8020714:	4602      	mov	r2, r0
 8020716:	f013 0007 	ands.w	r0, r3, #7
 802071a:	d00b      	beq.n	8020734 <__lo0bits+0x22>
 802071c:	07d9      	lsls	r1, r3, #31
 802071e:	d421      	bmi.n	8020764 <__lo0bits+0x52>
 8020720:	0798      	lsls	r0, r3, #30
 8020722:	bf49      	itett	mi
 8020724:	085b      	lsrmi	r3, r3, #1
 8020726:	089b      	lsrpl	r3, r3, #2
 8020728:	2001      	movmi	r0, #1
 802072a:	6013      	strmi	r3, [r2, #0]
 802072c:	bf5c      	itt	pl
 802072e:	6013      	strpl	r3, [r2, #0]
 8020730:	2002      	movpl	r0, #2
 8020732:	4770      	bx	lr
 8020734:	b299      	uxth	r1, r3
 8020736:	b909      	cbnz	r1, 802073c <__lo0bits+0x2a>
 8020738:	0c1b      	lsrs	r3, r3, #16
 802073a:	2010      	movs	r0, #16
 802073c:	b2d9      	uxtb	r1, r3
 802073e:	b909      	cbnz	r1, 8020744 <__lo0bits+0x32>
 8020740:	3008      	adds	r0, #8
 8020742:	0a1b      	lsrs	r3, r3, #8
 8020744:	0719      	lsls	r1, r3, #28
 8020746:	bf04      	itt	eq
 8020748:	091b      	lsreq	r3, r3, #4
 802074a:	3004      	addeq	r0, #4
 802074c:	0799      	lsls	r1, r3, #30
 802074e:	bf04      	itt	eq
 8020750:	089b      	lsreq	r3, r3, #2
 8020752:	3002      	addeq	r0, #2
 8020754:	07d9      	lsls	r1, r3, #31
 8020756:	d403      	bmi.n	8020760 <__lo0bits+0x4e>
 8020758:	085b      	lsrs	r3, r3, #1
 802075a:	f100 0001 	add.w	r0, r0, #1
 802075e:	d003      	beq.n	8020768 <__lo0bits+0x56>
 8020760:	6013      	str	r3, [r2, #0]
 8020762:	4770      	bx	lr
 8020764:	2000      	movs	r0, #0
 8020766:	4770      	bx	lr
 8020768:	2020      	movs	r0, #32
 802076a:	4770      	bx	lr

0802076c <__i2b>:
 802076c:	b510      	push	{r4, lr}
 802076e:	460c      	mov	r4, r1
 8020770:	2101      	movs	r1, #1
 8020772:	f7ff ff3b 	bl	80205ec <_Balloc>
 8020776:	4602      	mov	r2, r0
 8020778:	b928      	cbnz	r0, 8020786 <__i2b+0x1a>
 802077a:	4b05      	ldr	r3, [pc, #20]	@ (8020790 <__i2b+0x24>)
 802077c:	4805      	ldr	r0, [pc, #20]	@ (8020794 <__i2b+0x28>)
 802077e:	f240 1145 	movw	r1, #325	@ 0x145
 8020782:	f000 fcb3 	bl	80210ec <__assert_func>
 8020786:	2301      	movs	r3, #1
 8020788:	6144      	str	r4, [r0, #20]
 802078a:	6103      	str	r3, [r0, #16]
 802078c:	bd10      	pop	{r4, pc}
 802078e:	bf00      	nop
 8020790:	08024e63 	.word	0x08024e63
 8020794:	08024ecc 	.word	0x08024ecc

08020798 <__multiply>:
 8020798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802079c:	4614      	mov	r4, r2
 802079e:	690a      	ldr	r2, [r1, #16]
 80207a0:	6923      	ldr	r3, [r4, #16]
 80207a2:	429a      	cmp	r2, r3
 80207a4:	bfa8      	it	ge
 80207a6:	4623      	movge	r3, r4
 80207a8:	460f      	mov	r7, r1
 80207aa:	bfa4      	itt	ge
 80207ac:	460c      	movge	r4, r1
 80207ae:	461f      	movge	r7, r3
 80207b0:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80207b4:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80207b8:	68a3      	ldr	r3, [r4, #8]
 80207ba:	6861      	ldr	r1, [r4, #4]
 80207bc:	eb0a 0609 	add.w	r6, sl, r9
 80207c0:	42b3      	cmp	r3, r6
 80207c2:	b085      	sub	sp, #20
 80207c4:	bfb8      	it	lt
 80207c6:	3101      	addlt	r1, #1
 80207c8:	f7ff ff10 	bl	80205ec <_Balloc>
 80207cc:	b930      	cbnz	r0, 80207dc <__multiply+0x44>
 80207ce:	4602      	mov	r2, r0
 80207d0:	4b44      	ldr	r3, [pc, #272]	@ (80208e4 <__multiply+0x14c>)
 80207d2:	4845      	ldr	r0, [pc, #276]	@ (80208e8 <__multiply+0x150>)
 80207d4:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80207d8:	f000 fc88 	bl	80210ec <__assert_func>
 80207dc:	f100 0514 	add.w	r5, r0, #20
 80207e0:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80207e4:	462b      	mov	r3, r5
 80207e6:	2200      	movs	r2, #0
 80207e8:	4543      	cmp	r3, r8
 80207ea:	d321      	bcc.n	8020830 <__multiply+0x98>
 80207ec:	f107 0114 	add.w	r1, r7, #20
 80207f0:	f104 0214 	add.w	r2, r4, #20
 80207f4:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80207f8:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80207fc:	9302      	str	r3, [sp, #8]
 80207fe:	1b13      	subs	r3, r2, r4
 8020800:	3b15      	subs	r3, #21
 8020802:	f023 0303 	bic.w	r3, r3, #3
 8020806:	3304      	adds	r3, #4
 8020808:	f104 0715 	add.w	r7, r4, #21
 802080c:	42ba      	cmp	r2, r7
 802080e:	bf38      	it	cc
 8020810:	2304      	movcc	r3, #4
 8020812:	9301      	str	r3, [sp, #4]
 8020814:	9b02      	ldr	r3, [sp, #8]
 8020816:	9103      	str	r1, [sp, #12]
 8020818:	428b      	cmp	r3, r1
 802081a:	d80c      	bhi.n	8020836 <__multiply+0x9e>
 802081c:	2e00      	cmp	r6, #0
 802081e:	dd03      	ble.n	8020828 <__multiply+0x90>
 8020820:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8020824:	2b00      	cmp	r3, #0
 8020826:	d05b      	beq.n	80208e0 <__multiply+0x148>
 8020828:	6106      	str	r6, [r0, #16]
 802082a:	b005      	add	sp, #20
 802082c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020830:	f843 2b04 	str.w	r2, [r3], #4
 8020834:	e7d8      	b.n	80207e8 <__multiply+0x50>
 8020836:	f8b1 a000 	ldrh.w	sl, [r1]
 802083a:	f1ba 0f00 	cmp.w	sl, #0
 802083e:	d024      	beq.n	802088a <__multiply+0xf2>
 8020840:	f104 0e14 	add.w	lr, r4, #20
 8020844:	46a9      	mov	r9, r5
 8020846:	f04f 0c00 	mov.w	ip, #0
 802084a:	f85e 7b04 	ldr.w	r7, [lr], #4
 802084e:	f8d9 3000 	ldr.w	r3, [r9]
 8020852:	fa1f fb87 	uxth.w	fp, r7
 8020856:	b29b      	uxth	r3, r3
 8020858:	fb0a 330b 	mla	r3, sl, fp, r3
 802085c:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8020860:	f8d9 7000 	ldr.w	r7, [r9]
 8020864:	4463      	add	r3, ip
 8020866:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 802086a:	fb0a c70b 	mla	r7, sl, fp, ip
 802086e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8020872:	b29b      	uxth	r3, r3
 8020874:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8020878:	4572      	cmp	r2, lr
 802087a:	f849 3b04 	str.w	r3, [r9], #4
 802087e:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8020882:	d8e2      	bhi.n	802084a <__multiply+0xb2>
 8020884:	9b01      	ldr	r3, [sp, #4]
 8020886:	f845 c003 	str.w	ip, [r5, r3]
 802088a:	9b03      	ldr	r3, [sp, #12]
 802088c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8020890:	3104      	adds	r1, #4
 8020892:	f1b9 0f00 	cmp.w	r9, #0
 8020896:	d021      	beq.n	80208dc <__multiply+0x144>
 8020898:	682b      	ldr	r3, [r5, #0]
 802089a:	f104 0c14 	add.w	ip, r4, #20
 802089e:	46ae      	mov	lr, r5
 80208a0:	f04f 0a00 	mov.w	sl, #0
 80208a4:	f8bc b000 	ldrh.w	fp, [ip]
 80208a8:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80208ac:	fb09 770b 	mla	r7, r9, fp, r7
 80208b0:	4457      	add	r7, sl
 80208b2:	b29b      	uxth	r3, r3
 80208b4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80208b8:	f84e 3b04 	str.w	r3, [lr], #4
 80208bc:	f85c 3b04 	ldr.w	r3, [ip], #4
 80208c0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80208c4:	f8be 3000 	ldrh.w	r3, [lr]
 80208c8:	fb09 330a 	mla	r3, r9, sl, r3
 80208cc:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80208d0:	4562      	cmp	r2, ip
 80208d2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80208d6:	d8e5      	bhi.n	80208a4 <__multiply+0x10c>
 80208d8:	9f01      	ldr	r7, [sp, #4]
 80208da:	51eb      	str	r3, [r5, r7]
 80208dc:	3504      	adds	r5, #4
 80208de:	e799      	b.n	8020814 <__multiply+0x7c>
 80208e0:	3e01      	subs	r6, #1
 80208e2:	e79b      	b.n	802081c <__multiply+0x84>
 80208e4:	08024e63 	.word	0x08024e63
 80208e8:	08024ecc 	.word	0x08024ecc

080208ec <__pow5mult>:
 80208ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80208f0:	4615      	mov	r5, r2
 80208f2:	f012 0203 	ands.w	r2, r2, #3
 80208f6:	4607      	mov	r7, r0
 80208f8:	460e      	mov	r6, r1
 80208fa:	d007      	beq.n	802090c <__pow5mult+0x20>
 80208fc:	4c1a      	ldr	r4, [pc, #104]	@ (8020968 <__pow5mult+0x7c>)
 80208fe:	3a01      	subs	r2, #1
 8020900:	2300      	movs	r3, #0
 8020902:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8020906:	f7ff fe9f 	bl	8020648 <__multadd>
 802090a:	4606      	mov	r6, r0
 802090c:	10ad      	asrs	r5, r5, #2
 802090e:	d027      	beq.n	8020960 <__pow5mult+0x74>
 8020910:	6c3c      	ldr	r4, [r7, #64]	@ 0x40
 8020912:	b944      	cbnz	r4, 8020926 <__pow5mult+0x3a>
 8020914:	f240 2171 	movw	r1, #625	@ 0x271
 8020918:	4638      	mov	r0, r7
 802091a:	f7ff ff27 	bl	802076c <__i2b>
 802091e:	2300      	movs	r3, #0
 8020920:	6438      	str	r0, [r7, #64]	@ 0x40
 8020922:	4604      	mov	r4, r0
 8020924:	6003      	str	r3, [r0, #0]
 8020926:	f04f 0900 	mov.w	r9, #0
 802092a:	07eb      	lsls	r3, r5, #31
 802092c:	d50a      	bpl.n	8020944 <__pow5mult+0x58>
 802092e:	4631      	mov	r1, r6
 8020930:	4622      	mov	r2, r4
 8020932:	4638      	mov	r0, r7
 8020934:	f7ff ff30 	bl	8020798 <__multiply>
 8020938:	4631      	mov	r1, r6
 802093a:	4680      	mov	r8, r0
 802093c:	4638      	mov	r0, r7
 802093e:	f7ff fe7a 	bl	8020636 <_Bfree>
 8020942:	4646      	mov	r6, r8
 8020944:	106d      	asrs	r5, r5, #1
 8020946:	d00b      	beq.n	8020960 <__pow5mult+0x74>
 8020948:	6820      	ldr	r0, [r4, #0]
 802094a:	b938      	cbnz	r0, 802095c <__pow5mult+0x70>
 802094c:	4622      	mov	r2, r4
 802094e:	4621      	mov	r1, r4
 8020950:	4638      	mov	r0, r7
 8020952:	f7ff ff21 	bl	8020798 <__multiply>
 8020956:	6020      	str	r0, [r4, #0]
 8020958:	f8c0 9000 	str.w	r9, [r0]
 802095c:	4604      	mov	r4, r0
 802095e:	e7e4      	b.n	802092a <__pow5mult+0x3e>
 8020960:	4630      	mov	r0, r6
 8020962:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020966:	bf00      	nop
 8020968:	08024f28 	.word	0x08024f28

0802096c <__lshift>:
 802096c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020970:	460c      	mov	r4, r1
 8020972:	6849      	ldr	r1, [r1, #4]
 8020974:	6923      	ldr	r3, [r4, #16]
 8020976:	eb03 1862 	add.w	r8, r3, r2, asr #5
 802097a:	68a3      	ldr	r3, [r4, #8]
 802097c:	4607      	mov	r7, r0
 802097e:	4691      	mov	r9, r2
 8020980:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8020984:	f108 0601 	add.w	r6, r8, #1
 8020988:	42b3      	cmp	r3, r6
 802098a:	db0b      	blt.n	80209a4 <__lshift+0x38>
 802098c:	4638      	mov	r0, r7
 802098e:	f7ff fe2d 	bl	80205ec <_Balloc>
 8020992:	4605      	mov	r5, r0
 8020994:	b948      	cbnz	r0, 80209aa <__lshift+0x3e>
 8020996:	4602      	mov	r2, r0
 8020998:	4b28      	ldr	r3, [pc, #160]	@ (8020a3c <__lshift+0xd0>)
 802099a:	4829      	ldr	r0, [pc, #164]	@ (8020a40 <__lshift+0xd4>)
 802099c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80209a0:	f000 fba4 	bl	80210ec <__assert_func>
 80209a4:	3101      	adds	r1, #1
 80209a6:	005b      	lsls	r3, r3, #1
 80209a8:	e7ee      	b.n	8020988 <__lshift+0x1c>
 80209aa:	2300      	movs	r3, #0
 80209ac:	f100 0114 	add.w	r1, r0, #20
 80209b0:	f100 0210 	add.w	r2, r0, #16
 80209b4:	4618      	mov	r0, r3
 80209b6:	4553      	cmp	r3, sl
 80209b8:	db33      	blt.n	8020a22 <__lshift+0xb6>
 80209ba:	6920      	ldr	r0, [r4, #16]
 80209bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80209c0:	f104 0314 	add.w	r3, r4, #20
 80209c4:	f019 091f 	ands.w	r9, r9, #31
 80209c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80209cc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80209d0:	d02b      	beq.n	8020a2a <__lshift+0xbe>
 80209d2:	f1c9 0e20 	rsb	lr, r9, #32
 80209d6:	468a      	mov	sl, r1
 80209d8:	2200      	movs	r2, #0
 80209da:	6818      	ldr	r0, [r3, #0]
 80209dc:	fa00 f009 	lsl.w	r0, r0, r9
 80209e0:	4310      	orrs	r0, r2
 80209e2:	f84a 0b04 	str.w	r0, [sl], #4
 80209e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80209ea:	459c      	cmp	ip, r3
 80209ec:	fa22 f20e 	lsr.w	r2, r2, lr
 80209f0:	d8f3      	bhi.n	80209da <__lshift+0x6e>
 80209f2:	ebac 0304 	sub.w	r3, ip, r4
 80209f6:	3b15      	subs	r3, #21
 80209f8:	f023 0303 	bic.w	r3, r3, #3
 80209fc:	3304      	adds	r3, #4
 80209fe:	f104 0015 	add.w	r0, r4, #21
 8020a02:	4584      	cmp	ip, r0
 8020a04:	bf38      	it	cc
 8020a06:	2304      	movcc	r3, #4
 8020a08:	50ca      	str	r2, [r1, r3]
 8020a0a:	b10a      	cbz	r2, 8020a10 <__lshift+0xa4>
 8020a0c:	f108 0602 	add.w	r6, r8, #2
 8020a10:	3e01      	subs	r6, #1
 8020a12:	4638      	mov	r0, r7
 8020a14:	612e      	str	r6, [r5, #16]
 8020a16:	4621      	mov	r1, r4
 8020a18:	f7ff fe0d 	bl	8020636 <_Bfree>
 8020a1c:	4628      	mov	r0, r5
 8020a1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a22:	f842 0f04 	str.w	r0, [r2, #4]!
 8020a26:	3301      	adds	r3, #1
 8020a28:	e7c5      	b.n	80209b6 <__lshift+0x4a>
 8020a2a:	3904      	subs	r1, #4
 8020a2c:	f853 2b04 	ldr.w	r2, [r3], #4
 8020a30:	f841 2f04 	str.w	r2, [r1, #4]!
 8020a34:	459c      	cmp	ip, r3
 8020a36:	d8f9      	bhi.n	8020a2c <__lshift+0xc0>
 8020a38:	e7ea      	b.n	8020a10 <__lshift+0xa4>
 8020a3a:	bf00      	nop
 8020a3c:	08024e63 	.word	0x08024e63
 8020a40:	08024ecc 	.word	0x08024ecc

08020a44 <__mcmp>:
 8020a44:	690a      	ldr	r2, [r1, #16]
 8020a46:	4603      	mov	r3, r0
 8020a48:	6900      	ldr	r0, [r0, #16]
 8020a4a:	1a80      	subs	r0, r0, r2
 8020a4c:	b530      	push	{r4, r5, lr}
 8020a4e:	d10e      	bne.n	8020a6e <__mcmp+0x2a>
 8020a50:	3314      	adds	r3, #20
 8020a52:	3114      	adds	r1, #20
 8020a54:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8020a58:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8020a5c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8020a60:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8020a64:	4295      	cmp	r5, r2
 8020a66:	d003      	beq.n	8020a70 <__mcmp+0x2c>
 8020a68:	d205      	bcs.n	8020a76 <__mcmp+0x32>
 8020a6a:	f04f 30ff 	mov.w	r0, #4294967295
 8020a6e:	bd30      	pop	{r4, r5, pc}
 8020a70:	42a3      	cmp	r3, r4
 8020a72:	d3f3      	bcc.n	8020a5c <__mcmp+0x18>
 8020a74:	e7fb      	b.n	8020a6e <__mcmp+0x2a>
 8020a76:	2001      	movs	r0, #1
 8020a78:	e7f9      	b.n	8020a6e <__mcmp+0x2a>
	...

08020a7c <__mdiff>:
 8020a7c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a80:	4689      	mov	r9, r1
 8020a82:	4606      	mov	r6, r0
 8020a84:	4611      	mov	r1, r2
 8020a86:	4648      	mov	r0, r9
 8020a88:	4614      	mov	r4, r2
 8020a8a:	f7ff ffdb 	bl	8020a44 <__mcmp>
 8020a8e:	1e05      	subs	r5, r0, #0
 8020a90:	d112      	bne.n	8020ab8 <__mdiff+0x3c>
 8020a92:	4629      	mov	r1, r5
 8020a94:	4630      	mov	r0, r6
 8020a96:	f7ff fda9 	bl	80205ec <_Balloc>
 8020a9a:	4602      	mov	r2, r0
 8020a9c:	b928      	cbnz	r0, 8020aaa <__mdiff+0x2e>
 8020a9e:	4b3f      	ldr	r3, [pc, #252]	@ (8020b9c <__mdiff+0x120>)
 8020aa0:	f240 2137 	movw	r1, #567	@ 0x237
 8020aa4:	483e      	ldr	r0, [pc, #248]	@ (8020ba0 <__mdiff+0x124>)
 8020aa6:	f000 fb21 	bl	80210ec <__assert_func>
 8020aaa:	2301      	movs	r3, #1
 8020aac:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8020ab0:	4610      	mov	r0, r2
 8020ab2:	b003      	add	sp, #12
 8020ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ab8:	bfbc      	itt	lt
 8020aba:	464b      	movlt	r3, r9
 8020abc:	46a1      	movlt	r9, r4
 8020abe:	4630      	mov	r0, r6
 8020ac0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8020ac4:	bfba      	itte	lt
 8020ac6:	461c      	movlt	r4, r3
 8020ac8:	2501      	movlt	r5, #1
 8020aca:	2500      	movge	r5, #0
 8020acc:	f7ff fd8e 	bl	80205ec <_Balloc>
 8020ad0:	4602      	mov	r2, r0
 8020ad2:	b918      	cbnz	r0, 8020adc <__mdiff+0x60>
 8020ad4:	4b31      	ldr	r3, [pc, #196]	@ (8020b9c <__mdiff+0x120>)
 8020ad6:	f240 2145 	movw	r1, #581	@ 0x245
 8020ada:	e7e3      	b.n	8020aa4 <__mdiff+0x28>
 8020adc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8020ae0:	6926      	ldr	r6, [r4, #16]
 8020ae2:	60c5      	str	r5, [r0, #12]
 8020ae4:	f109 0310 	add.w	r3, r9, #16
 8020ae8:	f109 0514 	add.w	r5, r9, #20
 8020aec:	f104 0e14 	add.w	lr, r4, #20
 8020af0:	f100 0b14 	add.w	fp, r0, #20
 8020af4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8020af8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8020afc:	9301      	str	r3, [sp, #4]
 8020afe:	46d9      	mov	r9, fp
 8020b00:	f04f 0c00 	mov.w	ip, #0
 8020b04:	9b01      	ldr	r3, [sp, #4]
 8020b06:	f85e 0b04 	ldr.w	r0, [lr], #4
 8020b0a:	f853 af04 	ldr.w	sl, [r3, #4]!
 8020b0e:	9301      	str	r3, [sp, #4]
 8020b10:	fa1f f38a 	uxth.w	r3, sl
 8020b14:	4619      	mov	r1, r3
 8020b16:	b283      	uxth	r3, r0
 8020b18:	1acb      	subs	r3, r1, r3
 8020b1a:	0c00      	lsrs	r0, r0, #16
 8020b1c:	4463      	add	r3, ip
 8020b1e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8020b22:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8020b26:	b29b      	uxth	r3, r3
 8020b28:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8020b2c:	4576      	cmp	r6, lr
 8020b2e:	f849 3b04 	str.w	r3, [r9], #4
 8020b32:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8020b36:	d8e5      	bhi.n	8020b04 <__mdiff+0x88>
 8020b38:	1b33      	subs	r3, r6, r4
 8020b3a:	3b15      	subs	r3, #21
 8020b3c:	f023 0303 	bic.w	r3, r3, #3
 8020b40:	3415      	adds	r4, #21
 8020b42:	3304      	adds	r3, #4
 8020b44:	42a6      	cmp	r6, r4
 8020b46:	bf38      	it	cc
 8020b48:	2304      	movcc	r3, #4
 8020b4a:	441d      	add	r5, r3
 8020b4c:	445b      	add	r3, fp
 8020b4e:	461e      	mov	r6, r3
 8020b50:	462c      	mov	r4, r5
 8020b52:	4544      	cmp	r4, r8
 8020b54:	d30e      	bcc.n	8020b74 <__mdiff+0xf8>
 8020b56:	f108 0103 	add.w	r1, r8, #3
 8020b5a:	1b49      	subs	r1, r1, r5
 8020b5c:	f021 0103 	bic.w	r1, r1, #3
 8020b60:	3d03      	subs	r5, #3
 8020b62:	45a8      	cmp	r8, r5
 8020b64:	bf38      	it	cc
 8020b66:	2100      	movcc	r1, #0
 8020b68:	440b      	add	r3, r1
 8020b6a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8020b6e:	b191      	cbz	r1, 8020b96 <__mdiff+0x11a>
 8020b70:	6117      	str	r7, [r2, #16]
 8020b72:	e79d      	b.n	8020ab0 <__mdiff+0x34>
 8020b74:	f854 1b04 	ldr.w	r1, [r4], #4
 8020b78:	46e6      	mov	lr, ip
 8020b7a:	0c08      	lsrs	r0, r1, #16
 8020b7c:	fa1c fc81 	uxtah	ip, ip, r1
 8020b80:	4471      	add	r1, lr
 8020b82:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8020b86:	b289      	uxth	r1, r1
 8020b88:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8020b8c:	f846 1b04 	str.w	r1, [r6], #4
 8020b90:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8020b94:	e7dd      	b.n	8020b52 <__mdiff+0xd6>
 8020b96:	3f01      	subs	r7, #1
 8020b98:	e7e7      	b.n	8020b6a <__mdiff+0xee>
 8020b9a:	bf00      	nop
 8020b9c:	08024e63 	.word	0x08024e63
 8020ba0:	08024ecc 	.word	0x08024ecc

08020ba4 <__d2b>:
 8020ba4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8020ba8:	460f      	mov	r7, r1
 8020baa:	2101      	movs	r1, #1
 8020bac:	ec59 8b10 	vmov	r8, r9, d0
 8020bb0:	4616      	mov	r6, r2
 8020bb2:	f7ff fd1b 	bl	80205ec <_Balloc>
 8020bb6:	4604      	mov	r4, r0
 8020bb8:	b930      	cbnz	r0, 8020bc8 <__d2b+0x24>
 8020bba:	4602      	mov	r2, r0
 8020bbc:	4b23      	ldr	r3, [pc, #140]	@ (8020c4c <__d2b+0xa8>)
 8020bbe:	4824      	ldr	r0, [pc, #144]	@ (8020c50 <__d2b+0xac>)
 8020bc0:	f240 310f 	movw	r1, #783	@ 0x30f
 8020bc4:	f000 fa92 	bl	80210ec <__assert_func>
 8020bc8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8020bcc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8020bd0:	b10d      	cbz	r5, 8020bd6 <__d2b+0x32>
 8020bd2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8020bd6:	9301      	str	r3, [sp, #4]
 8020bd8:	f1b8 0300 	subs.w	r3, r8, #0
 8020bdc:	d023      	beq.n	8020c26 <__d2b+0x82>
 8020bde:	4668      	mov	r0, sp
 8020be0:	9300      	str	r3, [sp, #0]
 8020be2:	f7ff fd96 	bl	8020712 <__lo0bits>
 8020be6:	e9dd 1200 	ldrd	r1, r2, [sp]
 8020bea:	b1d0      	cbz	r0, 8020c22 <__d2b+0x7e>
 8020bec:	f1c0 0320 	rsb	r3, r0, #32
 8020bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8020bf4:	430b      	orrs	r3, r1
 8020bf6:	40c2      	lsrs	r2, r0
 8020bf8:	6163      	str	r3, [r4, #20]
 8020bfa:	9201      	str	r2, [sp, #4]
 8020bfc:	9b01      	ldr	r3, [sp, #4]
 8020bfe:	61a3      	str	r3, [r4, #24]
 8020c00:	2b00      	cmp	r3, #0
 8020c02:	bf0c      	ite	eq
 8020c04:	2201      	moveq	r2, #1
 8020c06:	2202      	movne	r2, #2
 8020c08:	6122      	str	r2, [r4, #16]
 8020c0a:	b1a5      	cbz	r5, 8020c36 <__d2b+0x92>
 8020c0c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8020c10:	4405      	add	r5, r0
 8020c12:	603d      	str	r5, [r7, #0]
 8020c14:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8020c18:	6030      	str	r0, [r6, #0]
 8020c1a:	4620      	mov	r0, r4
 8020c1c:	b003      	add	sp, #12
 8020c1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020c22:	6161      	str	r1, [r4, #20]
 8020c24:	e7ea      	b.n	8020bfc <__d2b+0x58>
 8020c26:	a801      	add	r0, sp, #4
 8020c28:	f7ff fd73 	bl	8020712 <__lo0bits>
 8020c2c:	9b01      	ldr	r3, [sp, #4]
 8020c2e:	6163      	str	r3, [r4, #20]
 8020c30:	3020      	adds	r0, #32
 8020c32:	2201      	movs	r2, #1
 8020c34:	e7e8      	b.n	8020c08 <__d2b+0x64>
 8020c36:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8020c3a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8020c3e:	6038      	str	r0, [r7, #0]
 8020c40:	6918      	ldr	r0, [r3, #16]
 8020c42:	f7ff fd47 	bl	80206d4 <__hi0bits>
 8020c46:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8020c4a:	e7e5      	b.n	8020c18 <__d2b+0x74>
 8020c4c:	08024e63 	.word	0x08024e63
 8020c50:	08024ecc 	.word	0x08024ecc

08020c54 <_realloc_r>:
 8020c54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c58:	4682      	mov	sl, r0
 8020c5a:	4693      	mov	fp, r2
 8020c5c:	460c      	mov	r4, r1
 8020c5e:	b929      	cbnz	r1, 8020c6c <_realloc_r+0x18>
 8020c60:	4611      	mov	r1, r2
 8020c62:	b003      	add	sp, #12
 8020c64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c68:	f7fd b890 	b.w	801dd8c <_malloc_r>
 8020c6c:	f7fd fac8 	bl	801e200 <__malloc_lock>
 8020c70:	f10b 080b 	add.w	r8, fp, #11
 8020c74:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8020c78:	f1b8 0f16 	cmp.w	r8, #22
 8020c7c:	f1a4 0908 	sub.w	r9, r4, #8
 8020c80:	f025 0603 	bic.w	r6, r5, #3
 8020c84:	d908      	bls.n	8020c98 <_realloc_r+0x44>
 8020c86:	f038 0807 	bics.w	r8, r8, #7
 8020c8a:	d507      	bpl.n	8020c9c <_realloc_r+0x48>
 8020c8c:	230c      	movs	r3, #12
 8020c8e:	f8ca 3000 	str.w	r3, [sl]
 8020c92:	f04f 0b00 	mov.w	fp, #0
 8020c96:	e032      	b.n	8020cfe <_realloc_r+0xaa>
 8020c98:	f04f 0810 	mov.w	r8, #16
 8020c9c:	45c3      	cmp	fp, r8
 8020c9e:	d8f5      	bhi.n	8020c8c <_realloc_r+0x38>
 8020ca0:	4546      	cmp	r6, r8
 8020ca2:	f280 8174 	bge.w	8020f8e <_realloc_r+0x33a>
 8020ca6:	4b9e      	ldr	r3, [pc, #632]	@ (8020f20 <_realloc_r+0x2cc>)
 8020ca8:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8020cac:	eb09 0106 	add.w	r1, r9, r6
 8020cb0:	458c      	cmp	ip, r1
 8020cb2:	6848      	ldr	r0, [r1, #4]
 8020cb4:	d005      	beq.n	8020cc2 <_realloc_r+0x6e>
 8020cb6:	f020 0201 	bic.w	r2, r0, #1
 8020cba:	440a      	add	r2, r1
 8020cbc:	6852      	ldr	r2, [r2, #4]
 8020cbe:	07d7      	lsls	r7, r2, #31
 8020cc0:	d449      	bmi.n	8020d56 <_realloc_r+0x102>
 8020cc2:	f020 0003 	bic.w	r0, r0, #3
 8020cc6:	458c      	cmp	ip, r1
 8020cc8:	eb06 0700 	add.w	r7, r6, r0
 8020ccc:	d11b      	bne.n	8020d06 <_realloc_r+0xb2>
 8020cce:	f108 0210 	add.w	r2, r8, #16
 8020cd2:	42ba      	cmp	r2, r7
 8020cd4:	dc41      	bgt.n	8020d5a <_realloc_r+0x106>
 8020cd6:	eb09 0208 	add.w	r2, r9, r8
 8020cda:	eba7 0708 	sub.w	r7, r7, r8
 8020cde:	f047 0701 	orr.w	r7, r7, #1
 8020ce2:	609a      	str	r2, [r3, #8]
 8020ce4:	6057      	str	r7, [r2, #4]
 8020ce6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8020cea:	f003 0301 	and.w	r3, r3, #1
 8020cee:	ea43 0308 	orr.w	r3, r3, r8
 8020cf2:	f844 3c04 	str.w	r3, [r4, #-4]
 8020cf6:	4650      	mov	r0, sl
 8020cf8:	f7fd fa88 	bl	801e20c <__malloc_unlock>
 8020cfc:	46a3      	mov	fp, r4
 8020cfe:	4658      	mov	r0, fp
 8020d00:	b003      	add	sp, #12
 8020d02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d06:	45b8      	cmp	r8, r7
 8020d08:	dc27      	bgt.n	8020d5a <_realloc_r+0x106>
 8020d0a:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 8020d0e:	60d3      	str	r3, [r2, #12]
 8020d10:	609a      	str	r2, [r3, #8]
 8020d12:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8020d16:	eba7 0008 	sub.w	r0, r7, r8
 8020d1a:	280f      	cmp	r0, #15
 8020d1c:	f003 0301 	and.w	r3, r3, #1
 8020d20:	eb09 0207 	add.w	r2, r9, r7
 8020d24:	f240 8135 	bls.w	8020f92 <_realloc_r+0x33e>
 8020d28:	eb09 0108 	add.w	r1, r9, r8
 8020d2c:	ea48 0303 	orr.w	r3, r8, r3
 8020d30:	f040 0001 	orr.w	r0, r0, #1
 8020d34:	f8c9 3004 	str.w	r3, [r9, #4]
 8020d38:	6048      	str	r0, [r1, #4]
 8020d3a:	6853      	ldr	r3, [r2, #4]
 8020d3c:	f043 0301 	orr.w	r3, r3, #1
 8020d40:	6053      	str	r3, [r2, #4]
 8020d42:	3108      	adds	r1, #8
 8020d44:	4650      	mov	r0, sl
 8020d46:	f7fc ff61 	bl	801dc0c <_free_r>
 8020d4a:	4650      	mov	r0, sl
 8020d4c:	f7fd fa5e 	bl	801e20c <__malloc_unlock>
 8020d50:	f109 0b08 	add.w	fp, r9, #8
 8020d54:	e7d3      	b.n	8020cfe <_realloc_r+0xaa>
 8020d56:	2000      	movs	r0, #0
 8020d58:	4601      	mov	r1, r0
 8020d5a:	07ea      	lsls	r2, r5, #31
 8020d5c:	f100 80c7 	bmi.w	8020eee <_realloc_r+0x29a>
 8020d60:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8020d64:	eba9 0505 	sub.w	r5, r9, r5
 8020d68:	686a      	ldr	r2, [r5, #4]
 8020d6a:	f022 0203 	bic.w	r2, r2, #3
 8020d6e:	4432      	add	r2, r6
 8020d70:	9201      	str	r2, [sp, #4]
 8020d72:	2900      	cmp	r1, #0
 8020d74:	f000 8086 	beq.w	8020e84 <_realloc_r+0x230>
 8020d78:	458c      	cmp	ip, r1
 8020d7a:	eb00 0702 	add.w	r7, r0, r2
 8020d7e:	d149      	bne.n	8020e14 <_realloc_r+0x1c0>
 8020d80:	f108 0210 	add.w	r2, r8, #16
 8020d84:	42ba      	cmp	r2, r7
 8020d86:	dc7d      	bgt.n	8020e84 <_realloc_r+0x230>
 8020d88:	46ab      	mov	fp, r5
 8020d8a:	68ea      	ldr	r2, [r5, #12]
 8020d8c:	f85b 1f08 	ldr.w	r1, [fp, #8]!
 8020d90:	60ca      	str	r2, [r1, #12]
 8020d92:	6091      	str	r1, [r2, #8]
 8020d94:	1f32      	subs	r2, r6, #4
 8020d96:	2a24      	cmp	r2, #36	@ 0x24
 8020d98:	d836      	bhi.n	8020e08 <_realloc_r+0x1b4>
 8020d9a:	2a13      	cmp	r2, #19
 8020d9c:	d932      	bls.n	8020e04 <_realloc_r+0x1b0>
 8020d9e:	6821      	ldr	r1, [r4, #0]
 8020da0:	60a9      	str	r1, [r5, #8]
 8020da2:	6861      	ldr	r1, [r4, #4]
 8020da4:	60e9      	str	r1, [r5, #12]
 8020da6:	2a1b      	cmp	r2, #27
 8020da8:	d81a      	bhi.n	8020de0 <_realloc_r+0x18c>
 8020daa:	3408      	adds	r4, #8
 8020dac:	f105 0210 	add.w	r2, r5, #16
 8020db0:	6821      	ldr	r1, [r4, #0]
 8020db2:	6011      	str	r1, [r2, #0]
 8020db4:	6861      	ldr	r1, [r4, #4]
 8020db6:	6051      	str	r1, [r2, #4]
 8020db8:	68a1      	ldr	r1, [r4, #8]
 8020dba:	6091      	str	r1, [r2, #8]
 8020dbc:	eb05 0208 	add.w	r2, r5, r8
 8020dc0:	eba7 0708 	sub.w	r7, r7, r8
 8020dc4:	f047 0701 	orr.w	r7, r7, #1
 8020dc8:	609a      	str	r2, [r3, #8]
 8020dca:	6057      	str	r7, [r2, #4]
 8020dcc:	686b      	ldr	r3, [r5, #4]
 8020dce:	f003 0301 	and.w	r3, r3, #1
 8020dd2:	ea43 0308 	orr.w	r3, r3, r8
 8020dd6:	606b      	str	r3, [r5, #4]
 8020dd8:	4650      	mov	r0, sl
 8020dda:	f7fd fa17 	bl	801e20c <__malloc_unlock>
 8020dde:	e78e      	b.n	8020cfe <_realloc_r+0xaa>
 8020de0:	68a1      	ldr	r1, [r4, #8]
 8020de2:	6129      	str	r1, [r5, #16]
 8020de4:	68e1      	ldr	r1, [r4, #12]
 8020de6:	6169      	str	r1, [r5, #20]
 8020de8:	2a24      	cmp	r2, #36	@ 0x24
 8020dea:	bf01      	itttt	eq
 8020dec:	6922      	ldreq	r2, [r4, #16]
 8020dee:	61aa      	streq	r2, [r5, #24]
 8020df0:	6961      	ldreq	r1, [r4, #20]
 8020df2:	61e9      	streq	r1, [r5, #28]
 8020df4:	bf19      	ittee	ne
 8020df6:	3410      	addne	r4, #16
 8020df8:	f105 0218 	addne.w	r2, r5, #24
 8020dfc:	f105 0220 	addeq.w	r2, r5, #32
 8020e00:	3418      	addeq	r4, #24
 8020e02:	e7d5      	b.n	8020db0 <_realloc_r+0x15c>
 8020e04:	465a      	mov	r2, fp
 8020e06:	e7d3      	b.n	8020db0 <_realloc_r+0x15c>
 8020e08:	4621      	mov	r1, r4
 8020e0a:	4658      	mov	r0, fp
 8020e0c:	f000 f954 	bl	80210b8 <memmove>
 8020e10:	4b43      	ldr	r3, [pc, #268]	@ (8020f20 <_realloc_r+0x2cc>)
 8020e12:	e7d3      	b.n	8020dbc <_realloc_r+0x168>
 8020e14:	45b8      	cmp	r8, r7
 8020e16:	dc35      	bgt.n	8020e84 <_realloc_r+0x230>
 8020e18:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
 8020e1c:	4628      	mov	r0, r5
 8020e1e:	60d3      	str	r3, [r2, #12]
 8020e20:	609a      	str	r2, [r3, #8]
 8020e22:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8020e26:	68eb      	ldr	r3, [r5, #12]
 8020e28:	60d3      	str	r3, [r2, #12]
 8020e2a:	609a      	str	r2, [r3, #8]
 8020e2c:	1f32      	subs	r2, r6, #4
 8020e2e:	2a24      	cmp	r2, #36	@ 0x24
 8020e30:	d824      	bhi.n	8020e7c <_realloc_r+0x228>
 8020e32:	2a13      	cmp	r2, #19
 8020e34:	d908      	bls.n	8020e48 <_realloc_r+0x1f4>
 8020e36:	6823      	ldr	r3, [r4, #0]
 8020e38:	60ab      	str	r3, [r5, #8]
 8020e3a:	6863      	ldr	r3, [r4, #4]
 8020e3c:	60eb      	str	r3, [r5, #12]
 8020e3e:	2a1b      	cmp	r2, #27
 8020e40:	d80a      	bhi.n	8020e58 <_realloc_r+0x204>
 8020e42:	3408      	adds	r4, #8
 8020e44:	f105 0010 	add.w	r0, r5, #16
 8020e48:	6823      	ldr	r3, [r4, #0]
 8020e4a:	6003      	str	r3, [r0, #0]
 8020e4c:	6863      	ldr	r3, [r4, #4]
 8020e4e:	6043      	str	r3, [r0, #4]
 8020e50:	68a3      	ldr	r3, [r4, #8]
 8020e52:	6083      	str	r3, [r0, #8]
 8020e54:	46a9      	mov	r9, r5
 8020e56:	e75c      	b.n	8020d12 <_realloc_r+0xbe>
 8020e58:	68a3      	ldr	r3, [r4, #8]
 8020e5a:	612b      	str	r3, [r5, #16]
 8020e5c:	68e3      	ldr	r3, [r4, #12]
 8020e5e:	616b      	str	r3, [r5, #20]
 8020e60:	2a24      	cmp	r2, #36	@ 0x24
 8020e62:	bf01      	itttt	eq
 8020e64:	6923      	ldreq	r3, [r4, #16]
 8020e66:	61ab      	streq	r3, [r5, #24]
 8020e68:	6963      	ldreq	r3, [r4, #20]
 8020e6a:	61eb      	streq	r3, [r5, #28]
 8020e6c:	bf19      	ittee	ne
 8020e6e:	3410      	addne	r4, #16
 8020e70:	f105 0018 	addne.w	r0, r5, #24
 8020e74:	f105 0020 	addeq.w	r0, r5, #32
 8020e78:	3418      	addeq	r4, #24
 8020e7a:	e7e5      	b.n	8020e48 <_realloc_r+0x1f4>
 8020e7c:	4621      	mov	r1, r4
 8020e7e:	f000 f91b 	bl	80210b8 <memmove>
 8020e82:	e7e7      	b.n	8020e54 <_realloc_r+0x200>
 8020e84:	9b01      	ldr	r3, [sp, #4]
 8020e86:	4598      	cmp	r8, r3
 8020e88:	dc31      	bgt.n	8020eee <_realloc_r+0x29a>
 8020e8a:	4628      	mov	r0, r5
 8020e8c:	68eb      	ldr	r3, [r5, #12]
 8020e8e:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8020e92:	60d3      	str	r3, [r2, #12]
 8020e94:	609a      	str	r2, [r3, #8]
 8020e96:	1f32      	subs	r2, r6, #4
 8020e98:	2a24      	cmp	r2, #36	@ 0x24
 8020e9a:	d824      	bhi.n	8020ee6 <_realloc_r+0x292>
 8020e9c:	2a13      	cmp	r2, #19
 8020e9e:	d908      	bls.n	8020eb2 <_realloc_r+0x25e>
 8020ea0:	6823      	ldr	r3, [r4, #0]
 8020ea2:	60ab      	str	r3, [r5, #8]
 8020ea4:	6863      	ldr	r3, [r4, #4]
 8020ea6:	60eb      	str	r3, [r5, #12]
 8020ea8:	2a1b      	cmp	r2, #27
 8020eaa:	d80a      	bhi.n	8020ec2 <_realloc_r+0x26e>
 8020eac:	3408      	adds	r4, #8
 8020eae:	f105 0010 	add.w	r0, r5, #16
 8020eb2:	6823      	ldr	r3, [r4, #0]
 8020eb4:	6003      	str	r3, [r0, #0]
 8020eb6:	6863      	ldr	r3, [r4, #4]
 8020eb8:	6043      	str	r3, [r0, #4]
 8020eba:	68a3      	ldr	r3, [r4, #8]
 8020ebc:	6083      	str	r3, [r0, #8]
 8020ebe:	9f01      	ldr	r7, [sp, #4]
 8020ec0:	e7c8      	b.n	8020e54 <_realloc_r+0x200>
 8020ec2:	68a3      	ldr	r3, [r4, #8]
 8020ec4:	612b      	str	r3, [r5, #16]
 8020ec6:	68e3      	ldr	r3, [r4, #12]
 8020ec8:	616b      	str	r3, [r5, #20]
 8020eca:	2a24      	cmp	r2, #36	@ 0x24
 8020ecc:	bf01      	itttt	eq
 8020ece:	6923      	ldreq	r3, [r4, #16]
 8020ed0:	61ab      	streq	r3, [r5, #24]
 8020ed2:	6963      	ldreq	r3, [r4, #20]
 8020ed4:	61eb      	streq	r3, [r5, #28]
 8020ed6:	bf19      	ittee	ne
 8020ed8:	3410      	addne	r4, #16
 8020eda:	f105 0018 	addne.w	r0, r5, #24
 8020ede:	f105 0020 	addeq.w	r0, r5, #32
 8020ee2:	3418      	addeq	r4, #24
 8020ee4:	e7e5      	b.n	8020eb2 <_realloc_r+0x25e>
 8020ee6:	4621      	mov	r1, r4
 8020ee8:	f000 f8e6 	bl	80210b8 <memmove>
 8020eec:	e7e7      	b.n	8020ebe <_realloc_r+0x26a>
 8020eee:	4659      	mov	r1, fp
 8020ef0:	4650      	mov	r0, sl
 8020ef2:	f7fc ff4b 	bl	801dd8c <_malloc_r>
 8020ef6:	4683      	mov	fp, r0
 8020ef8:	b918      	cbnz	r0, 8020f02 <_realloc_r+0x2ae>
 8020efa:	4650      	mov	r0, sl
 8020efc:	f7fd f986 	bl	801e20c <__malloc_unlock>
 8020f00:	e6c7      	b.n	8020c92 <_realloc_r+0x3e>
 8020f02:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8020f06:	f023 0301 	bic.w	r3, r3, #1
 8020f0a:	444b      	add	r3, r9
 8020f0c:	f1a0 0208 	sub.w	r2, r0, #8
 8020f10:	4293      	cmp	r3, r2
 8020f12:	d107      	bne.n	8020f24 <_realloc_r+0x2d0>
 8020f14:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8020f18:	f027 0703 	bic.w	r7, r7, #3
 8020f1c:	4437      	add	r7, r6
 8020f1e:	e6f8      	b.n	8020d12 <_realloc_r+0xbe>
 8020f20:	20000284 	.word	0x20000284
 8020f24:	1f32      	subs	r2, r6, #4
 8020f26:	2a24      	cmp	r2, #36	@ 0x24
 8020f28:	d82d      	bhi.n	8020f86 <_realloc_r+0x332>
 8020f2a:	2a13      	cmp	r2, #19
 8020f2c:	d928      	bls.n	8020f80 <_realloc_r+0x32c>
 8020f2e:	6823      	ldr	r3, [r4, #0]
 8020f30:	6003      	str	r3, [r0, #0]
 8020f32:	6863      	ldr	r3, [r4, #4]
 8020f34:	6043      	str	r3, [r0, #4]
 8020f36:	2a1b      	cmp	r2, #27
 8020f38:	d80e      	bhi.n	8020f58 <_realloc_r+0x304>
 8020f3a:	f104 0208 	add.w	r2, r4, #8
 8020f3e:	f100 0308 	add.w	r3, r0, #8
 8020f42:	6811      	ldr	r1, [r2, #0]
 8020f44:	6019      	str	r1, [r3, #0]
 8020f46:	6851      	ldr	r1, [r2, #4]
 8020f48:	6059      	str	r1, [r3, #4]
 8020f4a:	6892      	ldr	r2, [r2, #8]
 8020f4c:	609a      	str	r2, [r3, #8]
 8020f4e:	4621      	mov	r1, r4
 8020f50:	4650      	mov	r0, sl
 8020f52:	f7fc fe5b 	bl	801dc0c <_free_r>
 8020f56:	e73f      	b.n	8020dd8 <_realloc_r+0x184>
 8020f58:	68a3      	ldr	r3, [r4, #8]
 8020f5a:	6083      	str	r3, [r0, #8]
 8020f5c:	68e3      	ldr	r3, [r4, #12]
 8020f5e:	60c3      	str	r3, [r0, #12]
 8020f60:	2a24      	cmp	r2, #36	@ 0x24
 8020f62:	bf01      	itttt	eq
 8020f64:	6923      	ldreq	r3, [r4, #16]
 8020f66:	6103      	streq	r3, [r0, #16]
 8020f68:	6961      	ldreq	r1, [r4, #20]
 8020f6a:	6141      	streq	r1, [r0, #20]
 8020f6c:	bf19      	ittee	ne
 8020f6e:	f104 0210 	addne.w	r2, r4, #16
 8020f72:	f100 0310 	addne.w	r3, r0, #16
 8020f76:	f104 0218 	addeq.w	r2, r4, #24
 8020f7a:	f100 0318 	addeq.w	r3, r0, #24
 8020f7e:	e7e0      	b.n	8020f42 <_realloc_r+0x2ee>
 8020f80:	4603      	mov	r3, r0
 8020f82:	4622      	mov	r2, r4
 8020f84:	e7dd      	b.n	8020f42 <_realloc_r+0x2ee>
 8020f86:	4621      	mov	r1, r4
 8020f88:	f000 f896 	bl	80210b8 <memmove>
 8020f8c:	e7df      	b.n	8020f4e <_realloc_r+0x2fa>
 8020f8e:	4637      	mov	r7, r6
 8020f90:	e6bf      	b.n	8020d12 <_realloc_r+0xbe>
 8020f92:	431f      	orrs	r7, r3
 8020f94:	f8c9 7004 	str.w	r7, [r9, #4]
 8020f98:	6853      	ldr	r3, [r2, #4]
 8020f9a:	f043 0301 	orr.w	r3, r3, #1
 8020f9e:	6053      	str	r3, [r2, #4]
 8020fa0:	e6d3      	b.n	8020d4a <_realloc_r+0xf6>
 8020fa2:	bf00      	nop

08020fa4 <__ascii_wctomb>:
 8020fa4:	4603      	mov	r3, r0
 8020fa6:	4608      	mov	r0, r1
 8020fa8:	b141      	cbz	r1, 8020fbc <__ascii_wctomb+0x18>
 8020faa:	2aff      	cmp	r2, #255	@ 0xff
 8020fac:	d904      	bls.n	8020fb8 <__ascii_wctomb+0x14>
 8020fae:	228a      	movs	r2, #138	@ 0x8a
 8020fb0:	601a      	str	r2, [r3, #0]
 8020fb2:	f04f 30ff 	mov.w	r0, #4294967295
 8020fb6:	4770      	bx	lr
 8020fb8:	700a      	strb	r2, [r1, #0]
 8020fba:	2001      	movs	r0, #1
 8020fbc:	4770      	bx	lr

08020fbe <__ssprint_r>:
 8020fbe:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fc2:	6893      	ldr	r3, [r2, #8]
 8020fc4:	f8d2 b000 	ldr.w	fp, [r2]
 8020fc8:	9001      	str	r0, [sp, #4]
 8020fca:	460c      	mov	r4, r1
 8020fcc:	4617      	mov	r7, r2
 8020fce:	2b00      	cmp	r3, #0
 8020fd0:	d157      	bne.n	8021082 <__ssprint_r+0xc4>
 8020fd2:	2000      	movs	r0, #0
 8020fd4:	2300      	movs	r3, #0
 8020fd6:	607b      	str	r3, [r7, #4]
 8020fd8:	b003      	add	sp, #12
 8020fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020fde:	e9db a800 	ldrd	sl, r8, [fp]
 8020fe2:	f10b 0b08 	add.w	fp, fp, #8
 8020fe6:	68a6      	ldr	r6, [r4, #8]
 8020fe8:	6820      	ldr	r0, [r4, #0]
 8020fea:	f1b8 0f00 	cmp.w	r8, #0
 8020fee:	d0f6      	beq.n	8020fde <__ssprint_r+0x20>
 8020ff0:	45b0      	cmp	r8, r6
 8020ff2:	d32e      	bcc.n	8021052 <__ssprint_r+0x94>
 8020ff4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020ff8:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8020ffc:	d029      	beq.n	8021052 <__ssprint_r+0x94>
 8020ffe:	6921      	ldr	r1, [r4, #16]
 8021000:	6965      	ldr	r5, [r4, #20]
 8021002:	eba0 0901 	sub.w	r9, r0, r1
 8021006:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802100a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802100e:	f109 0001 	add.w	r0, r9, #1
 8021012:	106d      	asrs	r5, r5, #1
 8021014:	4440      	add	r0, r8
 8021016:	4285      	cmp	r5, r0
 8021018:	bf38      	it	cc
 802101a:	4605      	movcc	r5, r0
 802101c:	0553      	lsls	r3, r2, #21
 802101e:	d534      	bpl.n	802108a <__ssprint_r+0xcc>
 8021020:	9801      	ldr	r0, [sp, #4]
 8021022:	4629      	mov	r1, r5
 8021024:	f7fc feb2 	bl	801dd8c <_malloc_r>
 8021028:	4606      	mov	r6, r0
 802102a:	2800      	cmp	r0, #0
 802102c:	d038      	beq.n	80210a0 <__ssprint_r+0xe2>
 802102e:	464a      	mov	r2, r9
 8021030:	6921      	ldr	r1, [r4, #16]
 8021032:	f7fc fd77 	bl	801db24 <memcpy>
 8021036:	89a2      	ldrh	r2, [r4, #12]
 8021038:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 802103c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8021040:	81a2      	strh	r2, [r4, #12]
 8021042:	6126      	str	r6, [r4, #16]
 8021044:	6165      	str	r5, [r4, #20]
 8021046:	444e      	add	r6, r9
 8021048:	eba5 0509 	sub.w	r5, r5, r9
 802104c:	6026      	str	r6, [r4, #0]
 802104e:	60a5      	str	r5, [r4, #8]
 8021050:	4646      	mov	r6, r8
 8021052:	4546      	cmp	r6, r8
 8021054:	bf28      	it	cs
 8021056:	4646      	movcs	r6, r8
 8021058:	4632      	mov	r2, r6
 802105a:	4651      	mov	r1, sl
 802105c:	6820      	ldr	r0, [r4, #0]
 802105e:	f000 f82b 	bl	80210b8 <memmove>
 8021062:	68a2      	ldr	r2, [r4, #8]
 8021064:	1b92      	subs	r2, r2, r6
 8021066:	60a2      	str	r2, [r4, #8]
 8021068:	6822      	ldr	r2, [r4, #0]
 802106a:	4432      	add	r2, r6
 802106c:	6022      	str	r2, [r4, #0]
 802106e:	68ba      	ldr	r2, [r7, #8]
 8021070:	eba2 0308 	sub.w	r3, r2, r8
 8021074:	44c2      	add	sl, r8
 8021076:	60bb      	str	r3, [r7, #8]
 8021078:	2b00      	cmp	r3, #0
 802107a:	d0aa      	beq.n	8020fd2 <__ssprint_r+0x14>
 802107c:	f04f 0800 	mov.w	r8, #0
 8021080:	e7b1      	b.n	8020fe6 <__ssprint_r+0x28>
 8021082:	f04f 0a00 	mov.w	sl, #0
 8021086:	46d0      	mov	r8, sl
 8021088:	e7ad      	b.n	8020fe6 <__ssprint_r+0x28>
 802108a:	9801      	ldr	r0, [sp, #4]
 802108c:	462a      	mov	r2, r5
 802108e:	f7ff fde1 	bl	8020c54 <_realloc_r>
 8021092:	4606      	mov	r6, r0
 8021094:	2800      	cmp	r0, #0
 8021096:	d1d4      	bne.n	8021042 <__ssprint_r+0x84>
 8021098:	6921      	ldr	r1, [r4, #16]
 802109a:	9801      	ldr	r0, [sp, #4]
 802109c:	f7fc fdb6 	bl	801dc0c <_free_r>
 80210a0:	9a01      	ldr	r2, [sp, #4]
 80210a2:	230c      	movs	r3, #12
 80210a4:	6013      	str	r3, [r2, #0]
 80210a6:	89a3      	ldrh	r3, [r4, #12]
 80210a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80210ac:	81a3      	strh	r3, [r4, #12]
 80210ae:	2300      	movs	r3, #0
 80210b0:	60bb      	str	r3, [r7, #8]
 80210b2:	f04f 30ff 	mov.w	r0, #4294967295
 80210b6:	e78d      	b.n	8020fd4 <__ssprint_r+0x16>

080210b8 <memmove>:
 80210b8:	4288      	cmp	r0, r1
 80210ba:	b510      	push	{r4, lr}
 80210bc:	eb01 0402 	add.w	r4, r1, r2
 80210c0:	d902      	bls.n	80210c8 <memmove+0x10>
 80210c2:	4284      	cmp	r4, r0
 80210c4:	4623      	mov	r3, r4
 80210c6:	d807      	bhi.n	80210d8 <memmove+0x20>
 80210c8:	1e43      	subs	r3, r0, #1
 80210ca:	42a1      	cmp	r1, r4
 80210cc:	d008      	beq.n	80210e0 <memmove+0x28>
 80210ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 80210d2:	f803 2f01 	strb.w	r2, [r3, #1]!
 80210d6:	e7f8      	b.n	80210ca <memmove+0x12>
 80210d8:	4402      	add	r2, r0
 80210da:	4601      	mov	r1, r0
 80210dc:	428a      	cmp	r2, r1
 80210de:	d100      	bne.n	80210e2 <memmove+0x2a>
 80210e0:	bd10      	pop	{r4, pc}
 80210e2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80210e6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80210ea:	e7f7      	b.n	80210dc <memmove+0x24>

080210ec <__assert_func>:
 80210ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80210ee:	4614      	mov	r4, r2
 80210f0:	461a      	mov	r2, r3
 80210f2:	4b09      	ldr	r3, [pc, #36]	@ (8021118 <__assert_func+0x2c>)
 80210f4:	681b      	ldr	r3, [r3, #0]
 80210f6:	4605      	mov	r5, r0
 80210f8:	68d8      	ldr	r0, [r3, #12]
 80210fa:	b954      	cbnz	r4, 8021112 <__assert_func+0x26>
 80210fc:	4b07      	ldr	r3, [pc, #28]	@ (802111c <__assert_func+0x30>)
 80210fe:	461c      	mov	r4, r3
 8021100:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8021104:	9100      	str	r1, [sp, #0]
 8021106:	462b      	mov	r3, r5
 8021108:	4905      	ldr	r1, [pc, #20]	@ (8021120 <__assert_func+0x34>)
 802110a:	f000 f843 	bl	8021194 <fiprintf>
 802110e:	f000 ff59 	bl	8021fc4 <abort>
 8021112:	4b04      	ldr	r3, [pc, #16]	@ (8021124 <__assert_func+0x38>)
 8021114:	e7f4      	b.n	8021100 <__assert_func+0x14>
 8021116:	bf00      	nop
 8021118:	20000150 	.word	0x20000150
 802111c:	08025164 	.word	0x08025164
 8021120:	08025136 	.word	0x08025136
 8021124:	08025129 	.word	0x08025129

08021128 <_calloc_r>:
 8021128:	b538      	push	{r3, r4, r5, lr}
 802112a:	fba1 1502 	umull	r1, r5, r1, r2
 802112e:	b935      	cbnz	r5, 802113e <_calloc_r+0x16>
 8021130:	f7fc fe2c 	bl	801dd8c <_malloc_r>
 8021134:	4604      	mov	r4, r0
 8021136:	b938      	cbnz	r0, 8021148 <_calloc_r+0x20>
 8021138:	2400      	movs	r4, #0
 802113a:	4620      	mov	r0, r4
 802113c:	bd38      	pop	{r3, r4, r5, pc}
 802113e:	f7fc fcc3 	bl	801dac8 <__errno>
 8021142:	230c      	movs	r3, #12
 8021144:	6003      	str	r3, [r0, #0]
 8021146:	e7f7      	b.n	8021138 <_calloc_r+0x10>
 8021148:	f850 2c04 	ldr.w	r2, [r0, #-4]
 802114c:	f022 0203 	bic.w	r2, r2, #3
 8021150:	3a04      	subs	r2, #4
 8021152:	2a24      	cmp	r2, #36	@ 0x24
 8021154:	d819      	bhi.n	802118a <_calloc_r+0x62>
 8021156:	2a13      	cmp	r2, #19
 8021158:	d915      	bls.n	8021186 <_calloc_r+0x5e>
 802115a:	2a1b      	cmp	r2, #27
 802115c:	e9c0 5500 	strd	r5, r5, [r0]
 8021160:	d806      	bhi.n	8021170 <_calloc_r+0x48>
 8021162:	f100 0308 	add.w	r3, r0, #8
 8021166:	2200      	movs	r2, #0
 8021168:	e9c3 2200 	strd	r2, r2, [r3]
 802116c:	609a      	str	r2, [r3, #8]
 802116e:	e7e4      	b.n	802113a <_calloc_r+0x12>
 8021170:	2a24      	cmp	r2, #36	@ 0x24
 8021172:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8021176:	bf11      	iteee	ne
 8021178:	f100 0310 	addne.w	r3, r0, #16
 802117c:	6105      	streq	r5, [r0, #16]
 802117e:	f100 0318 	addeq.w	r3, r0, #24
 8021182:	6145      	streq	r5, [r0, #20]
 8021184:	e7ef      	b.n	8021166 <_calloc_r+0x3e>
 8021186:	4603      	mov	r3, r0
 8021188:	e7ed      	b.n	8021166 <_calloc_r+0x3e>
 802118a:	4629      	mov	r1, r5
 802118c:	f7fc fc21 	bl	801d9d2 <memset>
 8021190:	e7d3      	b.n	802113a <_calloc_r+0x12>
	...

08021194 <fiprintf>:
 8021194:	b40e      	push	{r1, r2, r3}
 8021196:	b503      	push	{r0, r1, lr}
 8021198:	4601      	mov	r1, r0
 802119a:	ab03      	add	r3, sp, #12
 802119c:	4805      	ldr	r0, [pc, #20]	@ (80211b4 <fiprintf+0x20>)
 802119e:	f853 2b04 	ldr.w	r2, [r3], #4
 80211a2:	6800      	ldr	r0, [r0, #0]
 80211a4:	9301      	str	r3, [sp, #4]
 80211a6:	f000 f839 	bl	802121c <_vfiprintf_r>
 80211aa:	b002      	add	sp, #8
 80211ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80211b0:	b003      	add	sp, #12
 80211b2:	4770      	bx	lr
 80211b4:	20000150 	.word	0x20000150

080211b8 <__sprint_r>:
 80211b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211bc:	6893      	ldr	r3, [r2, #8]
 80211be:	4680      	mov	r8, r0
 80211c0:	460e      	mov	r6, r1
 80211c2:	4614      	mov	r4, r2
 80211c4:	b343      	cbz	r3, 8021218 <__sprint_r+0x60>
 80211c6:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 80211c8:	049d      	lsls	r5, r3, #18
 80211ca:	d522      	bpl.n	8021212 <__sprint_r+0x5a>
 80211cc:	6815      	ldr	r5, [r2, #0]
 80211ce:	68a0      	ldr	r0, [r4, #8]
 80211d0:	3508      	adds	r5, #8
 80211d2:	b928      	cbnz	r0, 80211e0 <__sprint_r+0x28>
 80211d4:	2300      	movs	r3, #0
 80211d6:	60a3      	str	r3, [r4, #8]
 80211d8:	2300      	movs	r3, #0
 80211da:	6063      	str	r3, [r4, #4]
 80211dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211e0:	e955 b702 	ldrd	fp, r7, [r5, #-8]
 80211e4:	f04f 0900 	mov.w	r9, #0
 80211e8:	ea4f 0a97 	mov.w	sl, r7, lsr #2
 80211ec:	45ca      	cmp	sl, r9
 80211ee:	dc05      	bgt.n	80211fc <__sprint_r+0x44>
 80211f0:	68a3      	ldr	r3, [r4, #8]
 80211f2:	f027 0703 	bic.w	r7, r7, #3
 80211f6:	1bdb      	subs	r3, r3, r7
 80211f8:	60a3      	str	r3, [r4, #8]
 80211fa:	e7e8      	b.n	80211ce <__sprint_r+0x16>
 80211fc:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 8021200:	4632      	mov	r2, r6
 8021202:	4640      	mov	r0, r8
 8021204:	f000 feb5 	bl	8021f72 <_fputwc_r>
 8021208:	1c43      	adds	r3, r0, #1
 802120a:	d0e3      	beq.n	80211d4 <__sprint_r+0x1c>
 802120c:	f109 0901 	add.w	r9, r9, #1
 8021210:	e7ec      	b.n	80211ec <__sprint_r+0x34>
 8021212:	f000 fccb 	bl	8021bac <__sfvwrite_r>
 8021216:	e7dd      	b.n	80211d4 <__sprint_r+0x1c>
 8021218:	4618      	mov	r0, r3
 802121a:	e7dd      	b.n	80211d8 <__sprint_r+0x20>

0802121c <_vfiprintf_r>:
 802121c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021220:	b0bb      	sub	sp, #236	@ 0xec
 8021222:	460f      	mov	r7, r1
 8021224:	4693      	mov	fp, r2
 8021226:	461c      	mov	r4, r3
 8021228:	461d      	mov	r5, r3
 802122a:	9000      	str	r0, [sp, #0]
 802122c:	b118      	cbz	r0, 8021236 <_vfiprintf_r+0x1a>
 802122e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8021230:	b90b      	cbnz	r3, 8021236 <_vfiprintf_r+0x1a>
 8021232:	f7fc fb21 	bl	801d878 <__sinit>
 8021236:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8021238:	07db      	lsls	r3, r3, #31
 802123a:	d405      	bmi.n	8021248 <_vfiprintf_r+0x2c>
 802123c:	89bb      	ldrh	r3, [r7, #12]
 802123e:	059e      	lsls	r6, r3, #22
 8021240:	d402      	bmi.n	8021248 <_vfiprintf_r+0x2c>
 8021242:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8021244:	f7fc fc6c 	bl	801db20 <__retarget_lock_acquire_recursive>
 8021248:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 802124c:	0498      	lsls	r0, r3, #18
 802124e:	d406      	bmi.n	802125e <_vfiprintf_r+0x42>
 8021250:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8021254:	81bb      	strh	r3, [r7, #12]
 8021256:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8021258:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 802125c:	667b      	str	r3, [r7, #100]	@ 0x64
 802125e:	89bb      	ldrh	r3, [r7, #12]
 8021260:	0719      	lsls	r1, r3, #28
 8021262:	d501      	bpl.n	8021268 <_vfiprintf_r+0x4c>
 8021264:	693b      	ldr	r3, [r7, #16]
 8021266:	b9ab      	cbnz	r3, 8021294 <_vfiprintf_r+0x78>
 8021268:	9800      	ldr	r0, [sp, #0]
 802126a:	4639      	mov	r1, r7
 802126c:	f000 fdea 	bl	8021e44 <__swsetup_r>
 8021270:	b180      	cbz	r0, 8021294 <_vfiprintf_r+0x78>
 8021272:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8021274:	07da      	lsls	r2, r3, #31
 8021276:	d506      	bpl.n	8021286 <_vfiprintf_r+0x6a>
 8021278:	f04f 33ff 	mov.w	r3, #4294967295
 802127c:	9303      	str	r3, [sp, #12]
 802127e:	9803      	ldr	r0, [sp, #12]
 8021280:	b03b      	add	sp, #236	@ 0xec
 8021282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021286:	89bb      	ldrh	r3, [r7, #12]
 8021288:	059b      	lsls	r3, r3, #22
 802128a:	d4f5      	bmi.n	8021278 <_vfiprintf_r+0x5c>
 802128c:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 802128e:	f7fc fc48 	bl	801db22 <__retarget_lock_release_recursive>
 8021292:	e7f1      	b.n	8021278 <_vfiprintf_r+0x5c>
 8021294:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8021298:	f003 021a 	and.w	r2, r3, #26
 802129c:	2a0a      	cmp	r2, #10
 802129e:	d114      	bne.n	80212ca <_vfiprintf_r+0xae>
 80212a0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80212a4:	2a00      	cmp	r2, #0
 80212a6:	db10      	blt.n	80212ca <_vfiprintf_r+0xae>
 80212a8:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 80212aa:	07d6      	lsls	r6, r2, #31
 80212ac:	d404      	bmi.n	80212b8 <_vfiprintf_r+0x9c>
 80212ae:	059d      	lsls	r5, r3, #22
 80212b0:	d402      	bmi.n	80212b8 <_vfiprintf_r+0x9c>
 80212b2:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80212b4:	f7fc fc35 	bl	801db22 <__retarget_lock_release_recursive>
 80212b8:	9800      	ldr	r0, [sp, #0]
 80212ba:	4623      	mov	r3, r4
 80212bc:	465a      	mov	r2, fp
 80212be:	4639      	mov	r1, r7
 80212c0:	b03b      	add	sp, #236	@ 0xec
 80212c2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212c6:	f000 bc31 	b.w	8021b2c <__sbprintf>
 80212ca:	2300      	movs	r3, #0
 80212cc:	e9cd 330f 	strd	r3, r3, [sp, #60]	@ 0x3c
 80212d0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80212d4:	ae11      	add	r6, sp, #68	@ 0x44
 80212d6:	960e      	str	r6, [sp, #56]	@ 0x38
 80212d8:	9307      	str	r3, [sp, #28]
 80212da:	9309      	str	r3, [sp, #36]	@ 0x24
 80212dc:	9303      	str	r3, [sp, #12]
 80212de:	465b      	mov	r3, fp
 80212e0:	461c      	mov	r4, r3
 80212e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80212e6:	b10a      	cbz	r2, 80212ec <_vfiprintf_r+0xd0>
 80212e8:	2a25      	cmp	r2, #37	@ 0x25
 80212ea:	d1f9      	bne.n	80212e0 <_vfiprintf_r+0xc4>
 80212ec:	ebb4 080b 	subs.w	r8, r4, fp
 80212f0:	d00d      	beq.n	802130e <_vfiprintf_r+0xf2>
 80212f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80212f4:	4443      	add	r3, r8
 80212f6:	9310      	str	r3, [sp, #64]	@ 0x40
 80212f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80212fa:	3301      	adds	r3, #1
 80212fc:	2b07      	cmp	r3, #7
 80212fe:	e9c6 b800 	strd	fp, r8, [r6]
 8021302:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021304:	dc75      	bgt.n	80213f2 <_vfiprintf_r+0x1d6>
 8021306:	3608      	adds	r6, #8
 8021308:	9b03      	ldr	r3, [sp, #12]
 802130a:	4443      	add	r3, r8
 802130c:	9303      	str	r3, [sp, #12]
 802130e:	7823      	ldrb	r3, [r4, #0]
 8021310:	2b00      	cmp	r3, #0
 8021312:	f000 83cd 	beq.w	8021ab0 <_vfiprintf_r+0x894>
 8021316:	2300      	movs	r3, #0
 8021318:	f04f 32ff 	mov.w	r2, #4294967295
 802131c:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8021320:	3401      	adds	r4, #1
 8021322:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 8021326:	469a      	mov	sl, r3
 8021328:	46a3      	mov	fp, r4
 802132a:	f81b 3b01 	ldrb.w	r3, [fp], #1
 802132e:	f1a3 0220 	sub.w	r2, r3, #32
 8021332:	2a5a      	cmp	r2, #90	@ 0x5a
 8021334:	f200 8316 	bhi.w	8021964 <_vfiprintf_r+0x748>
 8021338:	e8df f012 	tbh	[pc, r2, lsl #1]
 802133c:	0314009a 	.word	0x0314009a
 8021340:	00a20314 	.word	0x00a20314
 8021344:	03140314 	.word	0x03140314
 8021348:	00820314 	.word	0x00820314
 802134c:	03140314 	.word	0x03140314
 8021350:	00af00a5 	.word	0x00af00a5
 8021354:	00ac0314 	.word	0x00ac0314
 8021358:	031400b1 	.word	0x031400b1
 802135c:	00d000cd 	.word	0x00d000cd
 8021360:	00d000d0 	.word	0x00d000d0
 8021364:	00d000d0 	.word	0x00d000d0
 8021368:	00d000d0 	.word	0x00d000d0
 802136c:	00d000d0 	.word	0x00d000d0
 8021370:	03140314 	.word	0x03140314
 8021374:	03140314 	.word	0x03140314
 8021378:	03140314 	.word	0x03140314
 802137c:	03140314 	.word	0x03140314
 8021380:	00f70314 	.word	0x00f70314
 8021384:	03140104 	.word	0x03140104
 8021388:	03140314 	.word	0x03140314
 802138c:	03140314 	.word	0x03140314
 8021390:	03140314 	.word	0x03140314
 8021394:	03140314 	.word	0x03140314
 8021398:	01520314 	.word	0x01520314
 802139c:	03140314 	.word	0x03140314
 80213a0:	019a0314 	.word	0x019a0314
 80213a4:	027a0314 	.word	0x027a0314
 80213a8:	03140314 	.word	0x03140314
 80213ac:	0314029a 	.word	0x0314029a
 80213b0:	03140314 	.word	0x03140314
 80213b4:	03140314 	.word	0x03140314
 80213b8:	03140314 	.word	0x03140314
 80213bc:	03140314 	.word	0x03140314
 80213c0:	00f70314 	.word	0x00f70314
 80213c4:	03140106 	.word	0x03140106
 80213c8:	03140314 	.word	0x03140314
 80213cc:	010600e0 	.word	0x010600e0
 80213d0:	031400f1 	.word	0x031400f1
 80213d4:	031400eb 	.word	0x031400eb
 80213d8:	01540132 	.word	0x01540132
 80213dc:	00f10189 	.word	0x00f10189
 80213e0:	019a0314 	.word	0x019a0314
 80213e4:	027c0098 	.word	0x027c0098
 80213e8:	03140314 	.word	0x03140314
 80213ec:	03140065 	.word	0x03140065
 80213f0:	0098      	.short	0x0098
 80213f2:	9800      	ldr	r0, [sp, #0]
 80213f4:	aa0e      	add	r2, sp, #56	@ 0x38
 80213f6:	4639      	mov	r1, r7
 80213f8:	f7ff fede 	bl	80211b8 <__sprint_r>
 80213fc:	2800      	cmp	r0, #0
 80213fe:	f040 8336 	bne.w	8021a6e <_vfiprintf_r+0x852>
 8021402:	ae11      	add	r6, sp, #68	@ 0x44
 8021404:	e780      	b.n	8021308 <_vfiprintf_r+0xec>
 8021406:	4a99      	ldr	r2, [pc, #612]	@ (802166c <_vfiprintf_r+0x450>)
 8021408:	9205      	str	r2, [sp, #20]
 802140a:	f01a 0220 	ands.w	r2, sl, #32
 802140e:	f000 8231 	beq.w	8021874 <_vfiprintf_r+0x658>
 8021412:	3507      	adds	r5, #7
 8021414:	f025 0507 	bic.w	r5, r5, #7
 8021418:	46a8      	mov	r8, r5
 802141a:	686d      	ldr	r5, [r5, #4]
 802141c:	f858 4b08 	ldr.w	r4, [r8], #8
 8021420:	f01a 0f01 	tst.w	sl, #1
 8021424:	d009      	beq.n	802143a <_vfiprintf_r+0x21e>
 8021426:	ea54 0205 	orrs.w	r2, r4, r5
 802142a:	bf1f      	itttt	ne
 802142c:	2230      	movne	r2, #48	@ 0x30
 802142e:	f88d 2034 	strbne.w	r2, [sp, #52]	@ 0x34
 8021432:	f88d 3035 	strbne.w	r3, [sp, #53]	@ 0x35
 8021436:	f04a 0a02 	orrne.w	sl, sl, #2
 802143a:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 802143e:	e112      	b.n	8021666 <_vfiprintf_r+0x44a>
 8021440:	9800      	ldr	r0, [sp, #0]
 8021442:	f7fe f9e3 	bl	801f80c <_localeconv_r>
 8021446:	6843      	ldr	r3, [r0, #4]
 8021448:	9309      	str	r3, [sp, #36]	@ 0x24
 802144a:	4618      	mov	r0, r3
 802144c:	f7de fec0 	bl	80001d0 <strlen>
 8021450:	9007      	str	r0, [sp, #28]
 8021452:	9800      	ldr	r0, [sp, #0]
 8021454:	f7fe f9da 	bl	801f80c <_localeconv_r>
 8021458:	6883      	ldr	r3, [r0, #8]
 802145a:	9306      	str	r3, [sp, #24]
 802145c:	9b07      	ldr	r3, [sp, #28]
 802145e:	b12b      	cbz	r3, 802146c <_vfiprintf_r+0x250>
 8021460:	9b06      	ldr	r3, [sp, #24]
 8021462:	b11b      	cbz	r3, 802146c <_vfiprintf_r+0x250>
 8021464:	781b      	ldrb	r3, [r3, #0]
 8021466:	b10b      	cbz	r3, 802146c <_vfiprintf_r+0x250>
 8021468:	f44a 6a80 	orr.w	sl, sl, #1024	@ 0x400
 802146c:	465c      	mov	r4, fp
 802146e:	e75b      	b.n	8021328 <_vfiprintf_r+0x10c>
 8021470:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 8021474:	2b00      	cmp	r3, #0
 8021476:	d1f9      	bne.n	802146c <_vfiprintf_r+0x250>
 8021478:	2320      	movs	r3, #32
 802147a:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 802147e:	e7f5      	b.n	802146c <_vfiprintf_r+0x250>
 8021480:	f04a 0a01 	orr.w	sl, sl, #1
 8021484:	e7f2      	b.n	802146c <_vfiprintf_r+0x250>
 8021486:	f855 3b04 	ldr.w	r3, [r5], #4
 802148a:	9302      	str	r3, [sp, #8]
 802148c:	2b00      	cmp	r3, #0
 802148e:	daed      	bge.n	802146c <_vfiprintf_r+0x250>
 8021490:	425b      	negs	r3, r3
 8021492:	9302      	str	r3, [sp, #8]
 8021494:	f04a 0a04 	orr.w	sl, sl, #4
 8021498:	e7e8      	b.n	802146c <_vfiprintf_r+0x250>
 802149a:	232b      	movs	r3, #43	@ 0x2b
 802149c:	e7ed      	b.n	802147a <_vfiprintf_r+0x25e>
 802149e:	465a      	mov	r2, fp
 80214a0:	f812 3b01 	ldrb.w	r3, [r2], #1
 80214a4:	2b2a      	cmp	r3, #42	@ 0x2a
 80214a6:	d112      	bne.n	80214ce <_vfiprintf_r+0x2b2>
 80214a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80214ac:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80214b0:	9301      	str	r3, [sp, #4]
 80214b2:	4693      	mov	fp, r2
 80214b4:	e7da      	b.n	802146c <_vfiprintf_r+0x250>
 80214b6:	9b01      	ldr	r3, [sp, #4]
 80214b8:	fb00 1303 	mla	r3, r0, r3, r1
 80214bc:	9301      	str	r3, [sp, #4]
 80214be:	f812 3b01 	ldrb.w	r3, [r2], #1
 80214c2:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 80214c6:	2909      	cmp	r1, #9
 80214c8:	d9f5      	bls.n	80214b6 <_vfiprintf_r+0x29a>
 80214ca:	4693      	mov	fp, r2
 80214cc:	e72f      	b.n	802132e <_vfiprintf_r+0x112>
 80214ce:	2100      	movs	r1, #0
 80214d0:	9101      	str	r1, [sp, #4]
 80214d2:	200a      	movs	r0, #10
 80214d4:	e7f5      	b.n	80214c2 <_vfiprintf_r+0x2a6>
 80214d6:	f04a 0a80 	orr.w	sl, sl, #128	@ 0x80
 80214da:	e7c7      	b.n	802146c <_vfiprintf_r+0x250>
 80214dc:	2100      	movs	r1, #0
 80214de:	465a      	mov	r2, fp
 80214e0:	9102      	str	r1, [sp, #8]
 80214e2:	200a      	movs	r0, #10
 80214e4:	9902      	ldr	r1, [sp, #8]
 80214e6:	3b30      	subs	r3, #48	@ 0x30
 80214e8:	fb00 3301 	mla	r3, r0, r1, r3
 80214ec:	9302      	str	r3, [sp, #8]
 80214ee:	f812 3b01 	ldrb.w	r3, [r2], #1
 80214f2:	f1a3 0130 	sub.w	r1, r3, #48	@ 0x30
 80214f6:	2909      	cmp	r1, #9
 80214f8:	d9f4      	bls.n	80214e4 <_vfiprintf_r+0x2c8>
 80214fa:	e7e6      	b.n	80214ca <_vfiprintf_r+0x2ae>
 80214fc:	f89b 3000 	ldrb.w	r3, [fp]
 8021500:	2b68      	cmp	r3, #104	@ 0x68
 8021502:	bf06      	itte	eq
 8021504:	f10b 0b01 	addeq.w	fp, fp, #1
 8021508:	f44a 7a00 	orreq.w	sl, sl, #512	@ 0x200
 802150c:	f04a 0a40 	orrne.w	sl, sl, #64	@ 0x40
 8021510:	e7ac      	b.n	802146c <_vfiprintf_r+0x250>
 8021512:	f89b 3000 	ldrb.w	r3, [fp]
 8021516:	2b6c      	cmp	r3, #108	@ 0x6c
 8021518:	d104      	bne.n	8021524 <_vfiprintf_r+0x308>
 802151a:	f10b 0b01 	add.w	fp, fp, #1
 802151e:	f04a 0a20 	orr.w	sl, sl, #32
 8021522:	e7a3      	b.n	802146c <_vfiprintf_r+0x250>
 8021524:	f04a 0a10 	orr.w	sl, sl, #16
 8021528:	e7a0      	b.n	802146c <_vfiprintf_r+0x250>
 802152a:	46a8      	mov	r8, r5
 802152c:	2400      	movs	r4, #0
 802152e:	f858 3b04 	ldr.w	r3, [r8], #4
 8021532:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 8021536:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 802153a:	2301      	movs	r3, #1
 802153c:	9301      	str	r3, [sp, #4]
 802153e:	f10d 0984 	add.w	r9, sp, #132	@ 0x84
 8021542:	e0ab      	b.n	802169c <_vfiprintf_r+0x480>
 8021544:	f04a 0a10 	orr.w	sl, sl, #16
 8021548:	f01a 0f20 	tst.w	sl, #32
 802154c:	d011      	beq.n	8021572 <_vfiprintf_r+0x356>
 802154e:	3507      	adds	r5, #7
 8021550:	f025 0507 	bic.w	r5, r5, #7
 8021554:	46a8      	mov	r8, r5
 8021556:	686d      	ldr	r5, [r5, #4]
 8021558:	f858 4b08 	ldr.w	r4, [r8], #8
 802155c:	2d00      	cmp	r5, #0
 802155e:	da06      	bge.n	802156e <_vfiprintf_r+0x352>
 8021560:	4264      	negs	r4, r4
 8021562:	f04f 032d 	mov.w	r3, #45	@ 0x2d
 8021566:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 802156a:	f88d 3033 	strb.w	r3, [sp, #51]	@ 0x33
 802156e:	2301      	movs	r3, #1
 8021570:	e048      	b.n	8021604 <_vfiprintf_r+0x3e8>
 8021572:	46a8      	mov	r8, r5
 8021574:	f01a 0f10 	tst.w	sl, #16
 8021578:	f858 5b04 	ldr.w	r5, [r8], #4
 802157c:	d002      	beq.n	8021584 <_vfiprintf_r+0x368>
 802157e:	462c      	mov	r4, r5
 8021580:	17ed      	asrs	r5, r5, #31
 8021582:	e7eb      	b.n	802155c <_vfiprintf_r+0x340>
 8021584:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 8021588:	d003      	beq.n	8021592 <_vfiprintf_r+0x376>
 802158a:	b22c      	sxth	r4, r5
 802158c:	f345 35c0 	sbfx	r5, r5, #15, #1
 8021590:	e7e4      	b.n	802155c <_vfiprintf_r+0x340>
 8021592:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 8021596:	d0f2      	beq.n	802157e <_vfiprintf_r+0x362>
 8021598:	b26c      	sxtb	r4, r5
 802159a:	f345 15c0 	sbfx	r5, r5, #7, #1
 802159e:	e7dd      	b.n	802155c <_vfiprintf_r+0x340>
 80215a0:	f01a 0f20 	tst.w	sl, #32
 80215a4:	d007      	beq.n	80215b6 <_vfiprintf_r+0x39a>
 80215a6:	9a03      	ldr	r2, [sp, #12]
 80215a8:	682b      	ldr	r3, [r5, #0]
 80215aa:	9903      	ldr	r1, [sp, #12]
 80215ac:	17d2      	asrs	r2, r2, #31
 80215ae:	e9c3 1200 	strd	r1, r2, [r3]
 80215b2:	3504      	adds	r5, #4
 80215b4:	e693      	b.n	80212de <_vfiprintf_r+0xc2>
 80215b6:	f01a 0f10 	tst.w	sl, #16
 80215ba:	d003      	beq.n	80215c4 <_vfiprintf_r+0x3a8>
 80215bc:	682b      	ldr	r3, [r5, #0]
 80215be:	9a03      	ldr	r2, [sp, #12]
 80215c0:	601a      	str	r2, [r3, #0]
 80215c2:	e7f6      	b.n	80215b2 <_vfiprintf_r+0x396>
 80215c4:	f01a 0f40 	tst.w	sl, #64	@ 0x40
 80215c8:	d003      	beq.n	80215d2 <_vfiprintf_r+0x3b6>
 80215ca:	682b      	ldr	r3, [r5, #0]
 80215cc:	9a03      	ldr	r2, [sp, #12]
 80215ce:	801a      	strh	r2, [r3, #0]
 80215d0:	e7ef      	b.n	80215b2 <_vfiprintf_r+0x396>
 80215d2:	f41a 7f00 	tst.w	sl, #512	@ 0x200
 80215d6:	d0f1      	beq.n	80215bc <_vfiprintf_r+0x3a0>
 80215d8:	682b      	ldr	r3, [r5, #0]
 80215da:	9a03      	ldr	r2, [sp, #12]
 80215dc:	701a      	strb	r2, [r3, #0]
 80215de:	e7e8      	b.n	80215b2 <_vfiprintf_r+0x396>
 80215e0:	f04a 0a10 	orr.w	sl, sl, #16
 80215e4:	f01a 0320 	ands.w	r3, sl, #32
 80215e8:	d01f      	beq.n	802162a <_vfiprintf_r+0x40e>
 80215ea:	3507      	adds	r5, #7
 80215ec:	f025 0507 	bic.w	r5, r5, #7
 80215f0:	46a8      	mov	r8, r5
 80215f2:	686d      	ldr	r5, [r5, #4]
 80215f4:	f858 4b08 	ldr.w	r4, [r8], #8
 80215f8:	f42a 6a80 	bic.w	sl, sl, #1024	@ 0x400
 80215fc:	2300      	movs	r3, #0
 80215fe:	2200      	movs	r2, #0
 8021600:	f88d 2033 	strb.w	r2, [sp, #51]	@ 0x33
 8021604:	9a01      	ldr	r2, [sp, #4]
 8021606:	3201      	adds	r2, #1
 8021608:	f000 825f 	beq.w	8021aca <_vfiprintf_r+0x8ae>
 802160c:	f02a 0280 	bic.w	r2, sl, #128	@ 0x80
 8021610:	9204      	str	r2, [sp, #16]
 8021612:	ea54 0205 	orrs.w	r2, r4, r5
 8021616:	f040 825e 	bne.w	8021ad6 <_vfiprintf_r+0x8ba>
 802161a:	9a01      	ldr	r2, [sp, #4]
 802161c:	2a00      	cmp	r2, #0
 802161e:	f000 8198 	beq.w	8021952 <_vfiprintf_r+0x736>
 8021622:	2b01      	cmp	r3, #1
 8021624:	f040 825a 	bne.w	8021adc <_vfiprintf_r+0x8c0>
 8021628:	e13b      	b.n	80218a2 <_vfiprintf_r+0x686>
 802162a:	46a8      	mov	r8, r5
 802162c:	f01a 0510 	ands.w	r5, sl, #16
 8021630:	f858 4b04 	ldr.w	r4, [r8], #4
 8021634:	d001      	beq.n	802163a <_vfiprintf_r+0x41e>
 8021636:	461d      	mov	r5, r3
 8021638:	e7de      	b.n	80215f8 <_vfiprintf_r+0x3dc>
 802163a:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 802163e:	d001      	beq.n	8021644 <_vfiprintf_r+0x428>
 8021640:	b2a4      	uxth	r4, r4
 8021642:	e7d9      	b.n	80215f8 <_vfiprintf_r+0x3dc>
 8021644:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 8021648:	d0d6      	beq.n	80215f8 <_vfiprintf_r+0x3dc>
 802164a:	b2e4      	uxtb	r4, r4
 802164c:	e7f3      	b.n	8021636 <_vfiprintf_r+0x41a>
 802164e:	46a8      	mov	r8, r5
 8021650:	f647 0330 	movw	r3, #30768	@ 0x7830
 8021654:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8021658:	f858 4b04 	ldr.w	r4, [r8], #4
 802165c:	4b03      	ldr	r3, [pc, #12]	@ (802166c <_vfiprintf_r+0x450>)
 802165e:	9305      	str	r3, [sp, #20]
 8021660:	2500      	movs	r5, #0
 8021662:	f04a 0a02 	orr.w	sl, sl, #2
 8021666:	2302      	movs	r3, #2
 8021668:	e7c9      	b.n	80215fe <_vfiprintf_r+0x3e2>
 802166a:	bf00      	nop
 802166c:	08024e08 	.word	0x08024e08
 8021670:	9b01      	ldr	r3, [sp, #4]
 8021672:	46a8      	mov	r8, r5
 8021674:	1c5c      	adds	r4, r3, #1
 8021676:	f04f 0500 	mov.w	r5, #0
 802167a:	f858 9b04 	ldr.w	r9, [r8], #4
 802167e:	f88d 5033 	strb.w	r5, [sp, #51]	@ 0x33
 8021682:	f000 80d0 	beq.w	8021826 <_vfiprintf_r+0x60a>
 8021686:	461a      	mov	r2, r3
 8021688:	4629      	mov	r1, r5
 802168a:	4648      	mov	r0, r9
 802168c:	f7de fda8 	bl	80001e0 <memchr>
 8021690:	4604      	mov	r4, r0
 8021692:	b118      	cbz	r0, 802169c <_vfiprintf_r+0x480>
 8021694:	eba0 0309 	sub.w	r3, r0, r9
 8021698:	9301      	str	r3, [sp, #4]
 802169a:	462c      	mov	r4, r5
 802169c:	9b01      	ldr	r3, [sp, #4]
 802169e:	42a3      	cmp	r3, r4
 80216a0:	bfb8      	it	lt
 80216a2:	4623      	movlt	r3, r4
 80216a4:	9304      	str	r3, [sp, #16]
 80216a6:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80216aa:	b113      	cbz	r3, 80216b2 <_vfiprintf_r+0x496>
 80216ac:	9b04      	ldr	r3, [sp, #16]
 80216ae:	3301      	adds	r3, #1
 80216b0:	9304      	str	r3, [sp, #16]
 80216b2:	f01a 0302 	ands.w	r3, sl, #2
 80216b6:	9308      	str	r3, [sp, #32]
 80216b8:	bf1e      	ittt	ne
 80216ba:	9b04      	ldrne	r3, [sp, #16]
 80216bc:	3302      	addne	r3, #2
 80216be:	9304      	strne	r3, [sp, #16]
 80216c0:	f01a 0384 	ands.w	r3, sl, #132	@ 0x84
 80216c4:	930a      	str	r3, [sp, #40]	@ 0x28
 80216c6:	d11f      	bne.n	8021708 <_vfiprintf_r+0x4ec>
 80216c8:	9b02      	ldr	r3, [sp, #8]
 80216ca:	9a04      	ldr	r2, [sp, #16]
 80216cc:	1a9d      	subs	r5, r3, r2
 80216ce:	2d00      	cmp	r5, #0
 80216d0:	dd1a      	ble.n	8021708 <_vfiprintf_r+0x4ec>
 80216d2:	4ba9      	ldr	r3, [pc, #676]	@ (8021978 <_vfiprintf_r+0x75c>)
 80216d4:	6033      	str	r3, [r6, #0]
 80216d6:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 80216da:	2d10      	cmp	r5, #16
 80216dc:	f102 0201 	add.w	r2, r2, #1
 80216e0:	f106 0008 	add.w	r0, r6, #8
 80216e4:	f300 814e 	bgt.w	8021984 <_vfiprintf_r+0x768>
 80216e8:	6075      	str	r5, [r6, #4]
 80216ea:	2a07      	cmp	r2, #7
 80216ec:	4465      	add	r5, ip
 80216ee:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 80216f2:	f340 815a 	ble.w	80219aa <_vfiprintf_r+0x78e>
 80216f6:	9800      	ldr	r0, [sp, #0]
 80216f8:	aa0e      	add	r2, sp, #56	@ 0x38
 80216fa:	4639      	mov	r1, r7
 80216fc:	f7ff fd5c 	bl	80211b8 <__sprint_r>
 8021700:	2800      	cmp	r0, #0
 8021702:	f040 81b4 	bne.w	8021a6e <_vfiprintf_r+0x852>
 8021706:	ae11      	add	r6, sp, #68	@ 0x44
 8021708:	f89d 1033 	ldrb.w	r1, [sp, #51]	@ 0x33
 802170c:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 8021710:	b161      	cbz	r1, 802172c <_vfiprintf_r+0x510>
 8021712:	f10d 0133 	add.w	r1, sp, #51	@ 0x33
 8021716:	3301      	adds	r3, #1
 8021718:	6031      	str	r1, [r6, #0]
 802171a:	2101      	movs	r1, #1
 802171c:	440a      	add	r2, r1
 802171e:	2b07      	cmp	r3, #7
 8021720:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 8021724:	6071      	str	r1, [r6, #4]
 8021726:	f300 8142 	bgt.w	80219ae <_vfiprintf_r+0x792>
 802172a:	3608      	adds	r6, #8
 802172c:	9908      	ldr	r1, [sp, #32]
 802172e:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 8021732:	b159      	cbz	r1, 802174c <_vfiprintf_r+0x530>
 8021734:	a90d      	add	r1, sp, #52	@ 0x34
 8021736:	3301      	adds	r3, #1
 8021738:	6031      	str	r1, [r6, #0]
 802173a:	2102      	movs	r1, #2
 802173c:	440a      	add	r2, r1
 802173e:	2b07      	cmp	r3, #7
 8021740:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 8021744:	6071      	str	r1, [r6, #4]
 8021746:	f300 813b 	bgt.w	80219c0 <_vfiprintf_r+0x7a4>
 802174a:	3608      	adds	r6, #8
 802174c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802174e:	2b80      	cmp	r3, #128	@ 0x80
 8021750:	d11f      	bne.n	8021792 <_vfiprintf_r+0x576>
 8021752:	9b02      	ldr	r3, [sp, #8]
 8021754:	9a04      	ldr	r2, [sp, #16]
 8021756:	1a9d      	subs	r5, r3, r2
 8021758:	2d00      	cmp	r5, #0
 802175a:	dd1a      	ble.n	8021792 <_vfiprintf_r+0x576>
 802175c:	4b87      	ldr	r3, [pc, #540]	@ (802197c <_vfiprintf_r+0x760>)
 802175e:	6033      	str	r3, [r6, #0]
 8021760:	e9dd 2c0f 	ldrd	r2, ip, [sp, #60]	@ 0x3c
 8021764:	2d10      	cmp	r5, #16
 8021766:	f102 0201 	add.w	r2, r2, #1
 802176a:	f106 0008 	add.w	r0, r6, #8
 802176e:	f300 8130 	bgt.w	80219d2 <_vfiprintf_r+0x7b6>
 8021772:	6075      	str	r5, [r6, #4]
 8021774:	2a07      	cmp	r2, #7
 8021776:	4465      	add	r5, ip
 8021778:	e9cd 250f 	strd	r2, r5, [sp, #60]	@ 0x3c
 802177c:	f340 813c 	ble.w	80219f8 <_vfiprintf_r+0x7dc>
 8021780:	9800      	ldr	r0, [sp, #0]
 8021782:	aa0e      	add	r2, sp, #56	@ 0x38
 8021784:	4639      	mov	r1, r7
 8021786:	f7ff fd17 	bl	80211b8 <__sprint_r>
 802178a:	2800      	cmp	r0, #0
 802178c:	f040 816f 	bne.w	8021a6e <_vfiprintf_r+0x852>
 8021790:	ae11      	add	r6, sp, #68	@ 0x44
 8021792:	9b01      	ldr	r3, [sp, #4]
 8021794:	1ae4      	subs	r4, r4, r3
 8021796:	2c00      	cmp	r4, #0
 8021798:	dd1a      	ble.n	80217d0 <_vfiprintf_r+0x5b4>
 802179a:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	@ 0x3c
 802179e:	4877      	ldr	r0, [pc, #476]	@ (802197c <_vfiprintf_r+0x760>)
 80217a0:	6030      	str	r0, [r6, #0]
 80217a2:	2c10      	cmp	r4, #16
 80217a4:	f103 0301 	add.w	r3, r3, #1
 80217a8:	f106 0108 	add.w	r1, r6, #8
 80217ac:	f300 8126 	bgt.w	80219fc <_vfiprintf_r+0x7e0>
 80217b0:	6074      	str	r4, [r6, #4]
 80217b2:	2b07      	cmp	r3, #7
 80217b4:	4414      	add	r4, r2
 80217b6:	e9cd 340f 	strd	r3, r4, [sp, #60]	@ 0x3c
 80217ba:	f340 8130 	ble.w	8021a1e <_vfiprintf_r+0x802>
 80217be:	9800      	ldr	r0, [sp, #0]
 80217c0:	aa0e      	add	r2, sp, #56	@ 0x38
 80217c2:	4639      	mov	r1, r7
 80217c4:	f7ff fcf8 	bl	80211b8 <__sprint_r>
 80217c8:	2800      	cmp	r0, #0
 80217ca:	f040 8150 	bne.w	8021a6e <_vfiprintf_r+0x852>
 80217ce:	ae11      	add	r6, sp, #68	@ 0x44
 80217d0:	9b01      	ldr	r3, [sp, #4]
 80217d2:	9a01      	ldr	r2, [sp, #4]
 80217d4:	6073      	str	r3, [r6, #4]
 80217d6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80217d8:	f8c6 9000 	str.w	r9, [r6]
 80217dc:	4413      	add	r3, r2
 80217de:	9310      	str	r3, [sp, #64]	@ 0x40
 80217e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80217e2:	3301      	adds	r3, #1
 80217e4:	2b07      	cmp	r3, #7
 80217e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 80217e8:	f300 811b 	bgt.w	8021a22 <_vfiprintf_r+0x806>
 80217ec:	f106 0308 	add.w	r3, r6, #8
 80217f0:	f01a 0f04 	tst.w	sl, #4
 80217f4:	f040 811d 	bne.w	8021a32 <_vfiprintf_r+0x816>
 80217f8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80217fc:	9904      	ldr	r1, [sp, #16]
 80217fe:	428a      	cmp	r2, r1
 8021800:	bfac      	ite	ge
 8021802:	189b      	addge	r3, r3, r2
 8021804:	185b      	addlt	r3, r3, r1
 8021806:	9303      	str	r3, [sp, #12]
 8021808:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802180a:	b13b      	cbz	r3, 802181c <_vfiprintf_r+0x600>
 802180c:	9800      	ldr	r0, [sp, #0]
 802180e:	aa0e      	add	r2, sp, #56	@ 0x38
 8021810:	4639      	mov	r1, r7
 8021812:	f7ff fcd1 	bl	80211b8 <__sprint_r>
 8021816:	2800      	cmp	r0, #0
 8021818:	f040 8129 	bne.w	8021a6e <_vfiprintf_r+0x852>
 802181c:	2300      	movs	r3, #0
 802181e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021820:	4645      	mov	r5, r8
 8021822:	ae11      	add	r6, sp, #68	@ 0x44
 8021824:	e55b      	b.n	80212de <_vfiprintf_r+0xc2>
 8021826:	4648      	mov	r0, r9
 8021828:	f7de fcd2 	bl	80001d0 <strlen>
 802182c:	9001      	str	r0, [sp, #4]
 802182e:	e734      	b.n	802169a <_vfiprintf_r+0x47e>
 8021830:	f04a 0a10 	orr.w	sl, sl, #16
 8021834:	f01a 0320 	ands.w	r3, sl, #32
 8021838:	d008      	beq.n	802184c <_vfiprintf_r+0x630>
 802183a:	3507      	adds	r5, #7
 802183c:	f025 0507 	bic.w	r5, r5, #7
 8021840:	46a8      	mov	r8, r5
 8021842:	686d      	ldr	r5, [r5, #4]
 8021844:	f858 4b08 	ldr.w	r4, [r8], #8
 8021848:	2301      	movs	r3, #1
 802184a:	e6d8      	b.n	80215fe <_vfiprintf_r+0x3e2>
 802184c:	46a8      	mov	r8, r5
 802184e:	f01a 0510 	ands.w	r5, sl, #16
 8021852:	f858 4b04 	ldr.w	r4, [r8], #4
 8021856:	d001      	beq.n	802185c <_vfiprintf_r+0x640>
 8021858:	461d      	mov	r5, r3
 802185a:	e7f5      	b.n	8021848 <_vfiprintf_r+0x62c>
 802185c:	f01a 0340 	ands.w	r3, sl, #64	@ 0x40
 8021860:	d001      	beq.n	8021866 <_vfiprintf_r+0x64a>
 8021862:	b2a4      	uxth	r4, r4
 8021864:	e7f0      	b.n	8021848 <_vfiprintf_r+0x62c>
 8021866:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 802186a:	d0ed      	beq.n	8021848 <_vfiprintf_r+0x62c>
 802186c:	b2e4      	uxtb	r4, r4
 802186e:	e7f3      	b.n	8021858 <_vfiprintf_r+0x63c>
 8021870:	4a43      	ldr	r2, [pc, #268]	@ (8021980 <_vfiprintf_r+0x764>)
 8021872:	e5c9      	b.n	8021408 <_vfiprintf_r+0x1ec>
 8021874:	46a8      	mov	r8, r5
 8021876:	f01a 0510 	ands.w	r5, sl, #16
 802187a:	f858 4b04 	ldr.w	r4, [r8], #4
 802187e:	d001      	beq.n	8021884 <_vfiprintf_r+0x668>
 8021880:	4615      	mov	r5, r2
 8021882:	e5cd      	b.n	8021420 <_vfiprintf_r+0x204>
 8021884:	f01a 0240 	ands.w	r2, sl, #64	@ 0x40
 8021888:	d001      	beq.n	802188e <_vfiprintf_r+0x672>
 802188a:	b2a4      	uxth	r4, r4
 802188c:	e5c8      	b.n	8021420 <_vfiprintf_r+0x204>
 802188e:	f41a 7500 	ands.w	r5, sl, #512	@ 0x200
 8021892:	f43f adc5 	beq.w	8021420 <_vfiprintf_r+0x204>
 8021896:	b2e4      	uxtb	r4, r4
 8021898:	e7f2      	b.n	8021880 <_vfiprintf_r+0x664>
 802189a:	2c0a      	cmp	r4, #10
 802189c:	f175 0300 	sbcs.w	r3, r5, #0
 80218a0:	d206      	bcs.n	80218b0 <_vfiprintf_r+0x694>
 80218a2:	3430      	adds	r4, #48	@ 0x30
 80218a4:	b2e4      	uxtb	r4, r4
 80218a6:	f88d 40e7 	strb.w	r4, [sp, #231]	@ 0xe7
 80218aa:	f10d 09e7 	add.w	r9, sp, #231	@ 0xe7
 80218ae:	e131      	b.n	8021b14 <_vfiprintf_r+0x8f8>
 80218b0:	ab3a      	add	r3, sp, #232	@ 0xe8
 80218b2:	9308      	str	r3, [sp, #32]
 80218b4:	9b04      	ldr	r3, [sp, #16]
 80218b6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80218ba:	f04f 0a00 	mov.w	sl, #0
 80218be:	930a      	str	r3, [sp, #40]	@ 0x28
 80218c0:	220a      	movs	r2, #10
 80218c2:	2300      	movs	r3, #0
 80218c4:	4620      	mov	r0, r4
 80218c6:	4629      	mov	r1, r5
 80218c8:	f7df f9de 	bl	8000c88 <__aeabi_uldivmod>
 80218cc:	460b      	mov	r3, r1
 80218ce:	9908      	ldr	r1, [sp, #32]
 80218d0:	900b      	str	r0, [sp, #44]	@ 0x2c
 80218d2:	3230      	adds	r2, #48	@ 0x30
 80218d4:	f801 2c01 	strb.w	r2, [r1, #-1]
 80218d8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80218da:	f101 39ff 	add.w	r9, r1, #4294967295
 80218de:	f10a 0a01 	add.w	sl, sl, #1
 80218e2:	b1e2      	cbz	r2, 802191e <_vfiprintf_r+0x702>
 80218e4:	9a06      	ldr	r2, [sp, #24]
 80218e6:	7812      	ldrb	r2, [r2, #0]
 80218e8:	4552      	cmp	r2, sl
 80218ea:	d118      	bne.n	802191e <_vfiprintf_r+0x702>
 80218ec:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80218f0:	d015      	beq.n	802191e <_vfiprintf_r+0x702>
 80218f2:	2c0a      	cmp	r4, #10
 80218f4:	f175 0200 	sbcs.w	r2, r5, #0
 80218f8:	d311      	bcc.n	802191e <_vfiprintf_r+0x702>
 80218fa:	9308      	str	r3, [sp, #32]
 80218fc:	9b07      	ldr	r3, [sp, #28]
 80218fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021900:	eba9 0903 	sub.w	r9, r9, r3
 8021904:	461a      	mov	r2, r3
 8021906:	4648      	mov	r0, r9
 8021908:	f7fd ff67 	bl	801f7da <strncpy>
 802190c:	9b06      	ldr	r3, [sp, #24]
 802190e:	785a      	ldrb	r2, [r3, #1]
 8021910:	9b08      	ldr	r3, [sp, #32]
 8021912:	b172      	cbz	r2, 8021932 <_vfiprintf_r+0x716>
 8021914:	9a06      	ldr	r2, [sp, #24]
 8021916:	3201      	adds	r2, #1
 8021918:	9206      	str	r2, [sp, #24]
 802191a:	f04f 0a00 	mov.w	sl, #0
 802191e:	2c0a      	cmp	r4, #10
 8021920:	f175 0500 	sbcs.w	r5, r5, #0
 8021924:	f0c0 80f6 	bcc.w	8021b14 <_vfiprintf_r+0x8f8>
 8021928:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802192a:	f8cd 9020 	str.w	r9, [sp, #32]
 802192e:	461d      	mov	r5, r3
 8021930:	e7c6      	b.n	80218c0 <_vfiprintf_r+0x6a4>
 8021932:	4692      	mov	sl, r2
 8021934:	e7f3      	b.n	802191e <_vfiprintf_r+0x702>
 8021936:	f004 030f 	and.w	r3, r4, #15
 802193a:	9a05      	ldr	r2, [sp, #20]
 802193c:	0924      	lsrs	r4, r4, #4
 802193e:	5cd3      	ldrb	r3, [r2, r3]
 8021940:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8021944:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
 8021948:	092d      	lsrs	r5, r5, #4
 802194a:	ea54 0305 	orrs.w	r3, r4, r5
 802194e:	d1f2      	bne.n	8021936 <_vfiprintf_r+0x71a>
 8021950:	e0e0      	b.n	8021b14 <_vfiprintf_r+0x8f8>
 8021952:	b923      	cbnz	r3, 802195e <_vfiprintf_r+0x742>
 8021954:	f01a 0f01 	tst.w	sl, #1
 8021958:	d001      	beq.n	802195e <_vfiprintf_r+0x742>
 802195a:	2430      	movs	r4, #48	@ 0x30
 802195c:	e7a3      	b.n	80218a6 <_vfiprintf_r+0x68a>
 802195e:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 8021962:	e0d7      	b.n	8021b14 <_vfiprintf_r+0x8f8>
 8021964:	2b00      	cmp	r3, #0
 8021966:	f000 80a3 	beq.w	8021ab0 <_vfiprintf_r+0x894>
 802196a:	2400      	movs	r4, #0
 802196c:	f88d 3084 	strb.w	r3, [sp, #132]	@ 0x84
 8021970:	f88d 4033 	strb.w	r4, [sp, #51]	@ 0x33
 8021974:	46a8      	mov	r8, r5
 8021976:	e5e0      	b.n	802153a <_vfiprintf_r+0x31e>
 8021978:	08025175 	.word	0x08025175
 802197c:	08025165 	.word	0x08025165
 8021980:	08024e19 	.word	0x08024e19
 8021984:	2110      	movs	r1, #16
 8021986:	6071      	str	r1, [r6, #4]
 8021988:	2a07      	cmp	r2, #7
 802198a:	4461      	add	r1, ip
 802198c:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 8021990:	dd08      	ble.n	80219a4 <_vfiprintf_r+0x788>
 8021992:	9800      	ldr	r0, [sp, #0]
 8021994:	aa0e      	add	r2, sp, #56	@ 0x38
 8021996:	4639      	mov	r1, r7
 8021998:	f7ff fc0e 	bl	80211b8 <__sprint_r>
 802199c:	2800      	cmp	r0, #0
 802199e:	d166      	bne.n	8021a6e <_vfiprintf_r+0x852>
 80219a0:	4b60      	ldr	r3, [pc, #384]	@ (8021b24 <_vfiprintf_r+0x908>)
 80219a2:	a811      	add	r0, sp, #68	@ 0x44
 80219a4:	3d10      	subs	r5, #16
 80219a6:	4606      	mov	r6, r0
 80219a8:	e694      	b.n	80216d4 <_vfiprintf_r+0x4b8>
 80219aa:	4606      	mov	r6, r0
 80219ac:	e6ac      	b.n	8021708 <_vfiprintf_r+0x4ec>
 80219ae:	9800      	ldr	r0, [sp, #0]
 80219b0:	aa0e      	add	r2, sp, #56	@ 0x38
 80219b2:	4639      	mov	r1, r7
 80219b4:	f7ff fc00 	bl	80211b8 <__sprint_r>
 80219b8:	2800      	cmp	r0, #0
 80219ba:	d158      	bne.n	8021a6e <_vfiprintf_r+0x852>
 80219bc:	ae11      	add	r6, sp, #68	@ 0x44
 80219be:	e6b5      	b.n	802172c <_vfiprintf_r+0x510>
 80219c0:	9800      	ldr	r0, [sp, #0]
 80219c2:	aa0e      	add	r2, sp, #56	@ 0x38
 80219c4:	4639      	mov	r1, r7
 80219c6:	f7ff fbf7 	bl	80211b8 <__sprint_r>
 80219ca:	2800      	cmp	r0, #0
 80219cc:	d14f      	bne.n	8021a6e <_vfiprintf_r+0x852>
 80219ce:	ae11      	add	r6, sp, #68	@ 0x44
 80219d0:	e6bc      	b.n	802174c <_vfiprintf_r+0x530>
 80219d2:	2110      	movs	r1, #16
 80219d4:	6071      	str	r1, [r6, #4]
 80219d6:	2a07      	cmp	r2, #7
 80219d8:	4461      	add	r1, ip
 80219da:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 80219de:	dd08      	ble.n	80219f2 <_vfiprintf_r+0x7d6>
 80219e0:	9800      	ldr	r0, [sp, #0]
 80219e2:	aa0e      	add	r2, sp, #56	@ 0x38
 80219e4:	4639      	mov	r1, r7
 80219e6:	f7ff fbe7 	bl	80211b8 <__sprint_r>
 80219ea:	2800      	cmp	r0, #0
 80219ec:	d13f      	bne.n	8021a6e <_vfiprintf_r+0x852>
 80219ee:	4b4e      	ldr	r3, [pc, #312]	@ (8021b28 <_vfiprintf_r+0x90c>)
 80219f0:	a811      	add	r0, sp, #68	@ 0x44
 80219f2:	3d10      	subs	r5, #16
 80219f4:	4606      	mov	r6, r0
 80219f6:	e6b2      	b.n	802175e <_vfiprintf_r+0x542>
 80219f8:	4606      	mov	r6, r0
 80219fa:	e6ca      	b.n	8021792 <_vfiprintf_r+0x576>
 80219fc:	2010      	movs	r0, #16
 80219fe:	4402      	add	r2, r0
 8021a00:	2b07      	cmp	r3, #7
 8021a02:	e9cd 320f 	strd	r3, r2, [sp, #60]	@ 0x3c
 8021a06:	6070      	str	r0, [r6, #4]
 8021a08:	dd06      	ble.n	8021a18 <_vfiprintf_r+0x7fc>
 8021a0a:	9800      	ldr	r0, [sp, #0]
 8021a0c:	aa0e      	add	r2, sp, #56	@ 0x38
 8021a0e:	4639      	mov	r1, r7
 8021a10:	f7ff fbd2 	bl	80211b8 <__sprint_r>
 8021a14:	bb58      	cbnz	r0, 8021a6e <_vfiprintf_r+0x852>
 8021a16:	a911      	add	r1, sp, #68	@ 0x44
 8021a18:	3c10      	subs	r4, #16
 8021a1a:	460e      	mov	r6, r1
 8021a1c:	e6bd      	b.n	802179a <_vfiprintf_r+0x57e>
 8021a1e:	460e      	mov	r6, r1
 8021a20:	e6d6      	b.n	80217d0 <_vfiprintf_r+0x5b4>
 8021a22:	9800      	ldr	r0, [sp, #0]
 8021a24:	aa0e      	add	r2, sp, #56	@ 0x38
 8021a26:	4639      	mov	r1, r7
 8021a28:	f7ff fbc6 	bl	80211b8 <__sprint_r>
 8021a2c:	b9f8      	cbnz	r0, 8021a6e <_vfiprintf_r+0x852>
 8021a2e:	ab11      	add	r3, sp, #68	@ 0x44
 8021a30:	e6de      	b.n	80217f0 <_vfiprintf_r+0x5d4>
 8021a32:	9a02      	ldr	r2, [sp, #8]
 8021a34:	9904      	ldr	r1, [sp, #16]
 8021a36:	1a54      	subs	r4, r2, r1
 8021a38:	2c00      	cmp	r4, #0
 8021a3a:	f77f aedd 	ble.w	80217f8 <_vfiprintf_r+0x5dc>
 8021a3e:	4d39      	ldr	r5, [pc, #228]	@ (8021b24 <_vfiprintf_r+0x908>)
 8021a40:	2610      	movs	r6, #16
 8021a42:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	@ 0x3c
 8021a46:	2c10      	cmp	r4, #16
 8021a48:	f102 0201 	add.w	r2, r2, #1
 8021a4c:	601d      	str	r5, [r3, #0]
 8021a4e:	dc1d      	bgt.n	8021a8c <_vfiprintf_r+0x870>
 8021a50:	605c      	str	r4, [r3, #4]
 8021a52:	2a07      	cmp	r2, #7
 8021a54:	440c      	add	r4, r1
 8021a56:	e9cd 240f 	strd	r2, r4, [sp, #60]	@ 0x3c
 8021a5a:	f77f aecd 	ble.w	80217f8 <_vfiprintf_r+0x5dc>
 8021a5e:	9800      	ldr	r0, [sp, #0]
 8021a60:	aa0e      	add	r2, sp, #56	@ 0x38
 8021a62:	4639      	mov	r1, r7
 8021a64:	f7ff fba8 	bl	80211b8 <__sprint_r>
 8021a68:	2800      	cmp	r0, #0
 8021a6a:	f43f aec5 	beq.w	80217f8 <_vfiprintf_r+0x5dc>
 8021a6e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8021a70:	07d9      	lsls	r1, r3, #31
 8021a72:	d405      	bmi.n	8021a80 <_vfiprintf_r+0x864>
 8021a74:	89bb      	ldrh	r3, [r7, #12]
 8021a76:	059a      	lsls	r2, r3, #22
 8021a78:	d402      	bmi.n	8021a80 <_vfiprintf_r+0x864>
 8021a7a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8021a7c:	f7fc f851 	bl	801db22 <__retarget_lock_release_recursive>
 8021a80:	89bb      	ldrh	r3, [r7, #12]
 8021a82:	065b      	lsls	r3, r3, #25
 8021a84:	f57f abfb 	bpl.w	802127e <_vfiprintf_r+0x62>
 8021a88:	f7ff bbf6 	b.w	8021278 <_vfiprintf_r+0x5c>
 8021a8c:	3110      	adds	r1, #16
 8021a8e:	2a07      	cmp	r2, #7
 8021a90:	e9cd 210f 	strd	r2, r1, [sp, #60]	@ 0x3c
 8021a94:	605e      	str	r6, [r3, #4]
 8021a96:	dc02      	bgt.n	8021a9e <_vfiprintf_r+0x882>
 8021a98:	3308      	adds	r3, #8
 8021a9a:	3c10      	subs	r4, #16
 8021a9c:	e7d1      	b.n	8021a42 <_vfiprintf_r+0x826>
 8021a9e:	9800      	ldr	r0, [sp, #0]
 8021aa0:	aa0e      	add	r2, sp, #56	@ 0x38
 8021aa2:	4639      	mov	r1, r7
 8021aa4:	f7ff fb88 	bl	80211b8 <__sprint_r>
 8021aa8:	2800      	cmp	r0, #0
 8021aaa:	d1e0      	bne.n	8021a6e <_vfiprintf_r+0x852>
 8021aac:	ab11      	add	r3, sp, #68	@ 0x44
 8021aae:	e7f4      	b.n	8021a9a <_vfiprintf_r+0x87e>
 8021ab0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021ab2:	b913      	cbnz	r3, 8021aba <_vfiprintf_r+0x89e>
 8021ab4:	2300      	movs	r3, #0
 8021ab6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021ab8:	e7d9      	b.n	8021a6e <_vfiprintf_r+0x852>
 8021aba:	9800      	ldr	r0, [sp, #0]
 8021abc:	aa0e      	add	r2, sp, #56	@ 0x38
 8021abe:	4639      	mov	r1, r7
 8021ac0:	f7ff fb7a 	bl	80211b8 <__sprint_r>
 8021ac4:	2800      	cmp	r0, #0
 8021ac6:	d0f5      	beq.n	8021ab4 <_vfiprintf_r+0x898>
 8021ac8:	e7d1      	b.n	8021a6e <_vfiprintf_r+0x852>
 8021aca:	ea54 0205 	orrs.w	r2, r4, r5
 8021ace:	f8cd a010 	str.w	sl, [sp, #16]
 8021ad2:	f43f ada6 	beq.w	8021622 <_vfiprintf_r+0x406>
 8021ad6:	2b01      	cmp	r3, #1
 8021ad8:	f43f aedf 	beq.w	802189a <_vfiprintf_r+0x67e>
 8021adc:	2b02      	cmp	r3, #2
 8021ade:	f10d 09e8 	add.w	r9, sp, #232	@ 0xe8
 8021ae2:	f43f af28 	beq.w	8021936 <_vfiprintf_r+0x71a>
 8021ae6:	f004 0307 	and.w	r3, r4, #7
 8021aea:	08e4      	lsrs	r4, r4, #3
 8021aec:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
 8021af0:	08ed      	lsrs	r5, r5, #3
 8021af2:	3330      	adds	r3, #48	@ 0x30
 8021af4:	ea54 0105 	orrs.w	r1, r4, r5
 8021af8:	464a      	mov	r2, r9
 8021afa:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8021afe:	d1f2      	bne.n	8021ae6 <_vfiprintf_r+0x8ca>
 8021b00:	9904      	ldr	r1, [sp, #16]
 8021b02:	07c8      	lsls	r0, r1, #31
 8021b04:	d506      	bpl.n	8021b14 <_vfiprintf_r+0x8f8>
 8021b06:	2b30      	cmp	r3, #48	@ 0x30
 8021b08:	d004      	beq.n	8021b14 <_vfiprintf_r+0x8f8>
 8021b0a:	2330      	movs	r3, #48	@ 0x30
 8021b0c:	f809 3c01 	strb.w	r3, [r9, #-1]
 8021b10:	f1a2 0902 	sub.w	r9, r2, #2
 8021b14:	ab3a      	add	r3, sp, #232	@ 0xe8
 8021b16:	eba3 0309 	sub.w	r3, r3, r9
 8021b1a:	9c01      	ldr	r4, [sp, #4]
 8021b1c:	f8dd a010 	ldr.w	sl, [sp, #16]
 8021b20:	9301      	str	r3, [sp, #4]
 8021b22:	e5bb      	b.n	802169c <_vfiprintf_r+0x480>
 8021b24:	08025175 	.word	0x08025175
 8021b28:	08025165 	.word	0x08025165

08021b2c <__sbprintf>:
 8021b2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021b2e:	461f      	mov	r7, r3
 8021b30:	898b      	ldrh	r3, [r1, #12]
 8021b32:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
 8021b36:	f023 0302 	bic.w	r3, r3, #2
 8021b3a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8021b3e:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
 8021b40:	9319      	str	r3, [sp, #100]	@ 0x64
 8021b42:	89cb      	ldrh	r3, [r1, #14]
 8021b44:	f8ad 300e 	strh.w	r3, [sp, #14]
 8021b48:	69cb      	ldr	r3, [r1, #28]
 8021b4a:	9307      	str	r3, [sp, #28]
 8021b4c:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
 8021b4e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021b50:	ab1a      	add	r3, sp, #104	@ 0x68
 8021b52:	9300      	str	r3, [sp, #0]
 8021b54:	9304      	str	r3, [sp, #16]
 8021b56:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8021b5a:	4615      	mov	r5, r2
 8021b5c:	4606      	mov	r6, r0
 8021b5e:	9302      	str	r3, [sp, #8]
 8021b60:	9305      	str	r3, [sp, #20]
 8021b62:	a816      	add	r0, sp, #88	@ 0x58
 8021b64:	2300      	movs	r3, #0
 8021b66:	460c      	mov	r4, r1
 8021b68:	9306      	str	r3, [sp, #24]
 8021b6a:	f7fb ffd7 	bl	801db1c <__retarget_lock_init_recursive>
 8021b6e:	462a      	mov	r2, r5
 8021b70:	463b      	mov	r3, r7
 8021b72:	4669      	mov	r1, sp
 8021b74:	4630      	mov	r0, r6
 8021b76:	f7ff fb51 	bl	802121c <_vfiprintf_r>
 8021b7a:	1e05      	subs	r5, r0, #0
 8021b7c:	db07      	blt.n	8021b8e <__sbprintf+0x62>
 8021b7e:	4669      	mov	r1, sp
 8021b80:	4630      	mov	r0, r6
 8021b82:	f7fd fe05 	bl	801f790 <_fflush_r>
 8021b86:	2800      	cmp	r0, #0
 8021b88:	bf18      	it	ne
 8021b8a:	f04f 35ff 	movne.w	r5, #4294967295
 8021b8e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8021b92:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8021b94:	065b      	lsls	r3, r3, #25
 8021b96:	bf42      	ittt	mi
 8021b98:	89a3      	ldrhmi	r3, [r4, #12]
 8021b9a:	f043 0340 	orrmi.w	r3, r3, #64	@ 0x40
 8021b9e:	81a3      	strhmi	r3, [r4, #12]
 8021ba0:	f7fb ffbd 	bl	801db1e <__retarget_lock_close_recursive>
 8021ba4:	4628      	mov	r0, r5
 8021ba6:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
 8021baa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08021bac <__sfvwrite_r>:
 8021bac:	6893      	ldr	r3, [r2, #8]
 8021bae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bb2:	4606      	mov	r6, r0
 8021bb4:	460c      	mov	r4, r1
 8021bb6:	4691      	mov	r9, r2
 8021bb8:	b91b      	cbnz	r3, 8021bc2 <__sfvwrite_r+0x16>
 8021bba:	2000      	movs	r0, #0
 8021bbc:	b003      	add	sp, #12
 8021bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021bc2:	898b      	ldrh	r3, [r1, #12]
 8021bc4:	0718      	lsls	r0, r3, #28
 8021bc6:	d550      	bpl.n	8021c6a <__sfvwrite_r+0xbe>
 8021bc8:	690b      	ldr	r3, [r1, #16]
 8021bca:	2b00      	cmp	r3, #0
 8021bcc:	d04d      	beq.n	8021c6a <__sfvwrite_r+0xbe>
 8021bce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021bd2:	f8d9 8000 	ldr.w	r8, [r9]
 8021bd6:	f013 0702 	ands.w	r7, r3, #2
 8021bda:	d16b      	bne.n	8021cb4 <__sfvwrite_r+0x108>
 8021bdc:	f013 0301 	ands.w	r3, r3, #1
 8021be0:	f000 809c 	beq.w	8021d1c <__sfvwrite_r+0x170>
 8021be4:	4638      	mov	r0, r7
 8021be6:	46ba      	mov	sl, r7
 8021be8:	46bb      	mov	fp, r7
 8021bea:	f1bb 0f00 	cmp.w	fp, #0
 8021bee:	f000 8103 	beq.w	8021df8 <__sfvwrite_r+0x24c>
 8021bf2:	b950      	cbnz	r0, 8021c0a <__sfvwrite_r+0x5e>
 8021bf4:	465a      	mov	r2, fp
 8021bf6:	210a      	movs	r1, #10
 8021bf8:	4650      	mov	r0, sl
 8021bfa:	f7de faf1 	bl	80001e0 <memchr>
 8021bfe:	2800      	cmp	r0, #0
 8021c00:	f000 8100 	beq.w	8021e04 <__sfvwrite_r+0x258>
 8021c04:	3001      	adds	r0, #1
 8021c06:	eba0 070a 	sub.w	r7, r0, sl
 8021c0a:	6820      	ldr	r0, [r4, #0]
 8021c0c:	6921      	ldr	r1, [r4, #16]
 8021c0e:	68a5      	ldr	r5, [r4, #8]
 8021c10:	6963      	ldr	r3, [r4, #20]
 8021c12:	455f      	cmp	r7, fp
 8021c14:	463a      	mov	r2, r7
 8021c16:	bf28      	it	cs
 8021c18:	465a      	movcs	r2, fp
 8021c1a:	4288      	cmp	r0, r1
 8021c1c:	f240 80f5 	bls.w	8021e0a <__sfvwrite_r+0x25e>
 8021c20:	441d      	add	r5, r3
 8021c22:	42aa      	cmp	r2, r5
 8021c24:	f340 80f1 	ble.w	8021e0a <__sfvwrite_r+0x25e>
 8021c28:	4651      	mov	r1, sl
 8021c2a:	462a      	mov	r2, r5
 8021c2c:	f7ff fa44 	bl	80210b8 <memmove>
 8021c30:	6823      	ldr	r3, [r4, #0]
 8021c32:	442b      	add	r3, r5
 8021c34:	6023      	str	r3, [r4, #0]
 8021c36:	4621      	mov	r1, r4
 8021c38:	4630      	mov	r0, r6
 8021c3a:	f7fd fda9 	bl	801f790 <_fflush_r>
 8021c3e:	2800      	cmp	r0, #0
 8021c40:	d167      	bne.n	8021d12 <__sfvwrite_r+0x166>
 8021c42:	1b7f      	subs	r7, r7, r5
 8021c44:	f040 80f9 	bne.w	8021e3a <__sfvwrite_r+0x28e>
 8021c48:	4621      	mov	r1, r4
 8021c4a:	4630      	mov	r0, r6
 8021c4c:	f7fd fda0 	bl	801f790 <_fflush_r>
 8021c50:	2800      	cmp	r0, #0
 8021c52:	d15e      	bne.n	8021d12 <__sfvwrite_r+0x166>
 8021c54:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8021c58:	1b5b      	subs	r3, r3, r5
 8021c5a:	44aa      	add	sl, r5
 8021c5c:	ebab 0b05 	sub.w	fp, fp, r5
 8021c60:	f8c9 3008 	str.w	r3, [r9, #8]
 8021c64:	2b00      	cmp	r3, #0
 8021c66:	d1c0      	bne.n	8021bea <__sfvwrite_r+0x3e>
 8021c68:	e7a7      	b.n	8021bba <__sfvwrite_r+0xe>
 8021c6a:	4621      	mov	r1, r4
 8021c6c:	4630      	mov	r0, r6
 8021c6e:	f000 f8e9 	bl	8021e44 <__swsetup_r>
 8021c72:	2800      	cmp	r0, #0
 8021c74:	d0ab      	beq.n	8021bce <__sfvwrite_r+0x22>
 8021c76:	f04f 30ff 	mov.w	r0, #4294967295
 8021c7a:	e79f      	b.n	8021bbc <__sfvwrite_r+0x10>
 8021c7c:	e9d8 a500 	ldrd	sl, r5, [r8]
 8021c80:	f108 0808 	add.w	r8, r8, #8
 8021c84:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
 8021c88:	69e1      	ldr	r1, [r4, #28]
 8021c8a:	2d00      	cmp	r5, #0
 8021c8c:	d0f6      	beq.n	8021c7c <__sfvwrite_r+0xd0>
 8021c8e:	42bd      	cmp	r5, r7
 8021c90:	462b      	mov	r3, r5
 8021c92:	4652      	mov	r2, sl
 8021c94:	bf28      	it	cs
 8021c96:	463b      	movcs	r3, r7
 8021c98:	4630      	mov	r0, r6
 8021c9a:	47d8      	blx	fp
 8021c9c:	2800      	cmp	r0, #0
 8021c9e:	dd38      	ble.n	8021d12 <__sfvwrite_r+0x166>
 8021ca0:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8021ca4:	1a1b      	subs	r3, r3, r0
 8021ca6:	4482      	add	sl, r0
 8021ca8:	1a2d      	subs	r5, r5, r0
 8021caa:	f8c9 3008 	str.w	r3, [r9, #8]
 8021cae:	2b00      	cmp	r3, #0
 8021cb0:	d1e8      	bne.n	8021c84 <__sfvwrite_r+0xd8>
 8021cb2:	e782      	b.n	8021bba <__sfvwrite_r+0xe>
 8021cb4:	f04f 0a00 	mov.w	sl, #0
 8021cb8:	4f61      	ldr	r7, [pc, #388]	@ (8021e40 <__sfvwrite_r+0x294>)
 8021cba:	4655      	mov	r5, sl
 8021cbc:	e7e2      	b.n	8021c84 <__sfvwrite_r+0xd8>
 8021cbe:	e9d8 7a00 	ldrd	r7, sl, [r8]
 8021cc2:	f108 0808 	add.w	r8, r8, #8
 8021cc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021cca:	6820      	ldr	r0, [r4, #0]
 8021ccc:	68a2      	ldr	r2, [r4, #8]
 8021cce:	f1ba 0f00 	cmp.w	sl, #0
 8021cd2:	d0f4      	beq.n	8021cbe <__sfvwrite_r+0x112>
 8021cd4:	0599      	lsls	r1, r3, #22
 8021cd6:	d563      	bpl.n	8021da0 <__sfvwrite_r+0x1f4>
 8021cd8:	4552      	cmp	r2, sl
 8021cda:	d836      	bhi.n	8021d4a <__sfvwrite_r+0x19e>
 8021cdc:	f413 6f90 	tst.w	r3, #1152	@ 0x480
 8021ce0:	d033      	beq.n	8021d4a <__sfvwrite_r+0x19e>
 8021ce2:	6921      	ldr	r1, [r4, #16]
 8021ce4:	6965      	ldr	r5, [r4, #20]
 8021ce6:	eba0 0b01 	sub.w	fp, r0, r1
 8021cea:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021cee:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8021cf2:	f10b 0201 	add.w	r2, fp, #1
 8021cf6:	106d      	asrs	r5, r5, #1
 8021cf8:	4452      	add	r2, sl
 8021cfa:	4295      	cmp	r5, r2
 8021cfc:	bf38      	it	cc
 8021cfe:	4615      	movcc	r5, r2
 8021d00:	055b      	lsls	r3, r3, #21
 8021d02:	d53d      	bpl.n	8021d80 <__sfvwrite_r+0x1d4>
 8021d04:	4629      	mov	r1, r5
 8021d06:	4630      	mov	r0, r6
 8021d08:	f7fc f840 	bl	801dd8c <_malloc_r>
 8021d0c:	b948      	cbnz	r0, 8021d22 <__sfvwrite_r+0x176>
 8021d0e:	230c      	movs	r3, #12
 8021d10:	6033      	str	r3, [r6, #0]
 8021d12:	89a3      	ldrh	r3, [r4, #12]
 8021d14:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021d18:	81a3      	strh	r3, [r4, #12]
 8021d1a:	e7ac      	b.n	8021c76 <__sfvwrite_r+0xca>
 8021d1c:	461f      	mov	r7, r3
 8021d1e:	469a      	mov	sl, r3
 8021d20:	e7d1      	b.n	8021cc6 <__sfvwrite_r+0x11a>
 8021d22:	465a      	mov	r2, fp
 8021d24:	6921      	ldr	r1, [r4, #16]
 8021d26:	9001      	str	r0, [sp, #4]
 8021d28:	f7fb fefc 	bl	801db24 <memcpy>
 8021d2c:	89a2      	ldrh	r2, [r4, #12]
 8021d2e:	9b01      	ldr	r3, [sp, #4]
 8021d30:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
 8021d34:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8021d38:	81a2      	strh	r2, [r4, #12]
 8021d3a:	6123      	str	r3, [r4, #16]
 8021d3c:	6165      	str	r5, [r4, #20]
 8021d3e:	445b      	add	r3, fp
 8021d40:	eba5 050b 	sub.w	r5, r5, fp
 8021d44:	6023      	str	r3, [r4, #0]
 8021d46:	4652      	mov	r2, sl
 8021d48:	60a5      	str	r5, [r4, #8]
 8021d4a:	4552      	cmp	r2, sl
 8021d4c:	bf28      	it	cs
 8021d4e:	4652      	movcs	r2, sl
 8021d50:	6820      	ldr	r0, [r4, #0]
 8021d52:	9201      	str	r2, [sp, #4]
 8021d54:	4639      	mov	r1, r7
 8021d56:	f7ff f9af 	bl	80210b8 <memmove>
 8021d5a:	68a3      	ldr	r3, [r4, #8]
 8021d5c:	9a01      	ldr	r2, [sp, #4]
 8021d5e:	1a9b      	subs	r3, r3, r2
 8021d60:	60a3      	str	r3, [r4, #8]
 8021d62:	6823      	ldr	r3, [r4, #0]
 8021d64:	4413      	add	r3, r2
 8021d66:	4655      	mov	r5, sl
 8021d68:	6023      	str	r3, [r4, #0]
 8021d6a:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8021d6e:	1b5b      	subs	r3, r3, r5
 8021d70:	442f      	add	r7, r5
 8021d72:	ebaa 0a05 	sub.w	sl, sl, r5
 8021d76:	f8c9 3008 	str.w	r3, [r9, #8]
 8021d7a:	2b00      	cmp	r3, #0
 8021d7c:	d1a3      	bne.n	8021cc6 <__sfvwrite_r+0x11a>
 8021d7e:	e71c      	b.n	8021bba <__sfvwrite_r+0xe>
 8021d80:	462a      	mov	r2, r5
 8021d82:	4630      	mov	r0, r6
 8021d84:	f7fe ff66 	bl	8020c54 <_realloc_r>
 8021d88:	4603      	mov	r3, r0
 8021d8a:	2800      	cmp	r0, #0
 8021d8c:	d1d5      	bne.n	8021d3a <__sfvwrite_r+0x18e>
 8021d8e:	6921      	ldr	r1, [r4, #16]
 8021d90:	4630      	mov	r0, r6
 8021d92:	f7fb ff3b 	bl	801dc0c <_free_r>
 8021d96:	89a3      	ldrh	r3, [r4, #12]
 8021d98:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8021d9c:	81a3      	strh	r3, [r4, #12]
 8021d9e:	e7b6      	b.n	8021d0e <__sfvwrite_r+0x162>
 8021da0:	6923      	ldr	r3, [r4, #16]
 8021da2:	4283      	cmp	r3, r0
 8021da4:	d302      	bcc.n	8021dac <__sfvwrite_r+0x200>
 8021da6:	6961      	ldr	r1, [r4, #20]
 8021da8:	4551      	cmp	r1, sl
 8021daa:	d915      	bls.n	8021dd8 <__sfvwrite_r+0x22c>
 8021dac:	4552      	cmp	r2, sl
 8021dae:	bf28      	it	cs
 8021db0:	4652      	movcs	r2, sl
 8021db2:	4639      	mov	r1, r7
 8021db4:	4615      	mov	r5, r2
 8021db6:	f7ff f97f 	bl	80210b8 <memmove>
 8021dba:	68a3      	ldr	r3, [r4, #8]
 8021dbc:	6822      	ldr	r2, [r4, #0]
 8021dbe:	1b5b      	subs	r3, r3, r5
 8021dc0:	442a      	add	r2, r5
 8021dc2:	60a3      	str	r3, [r4, #8]
 8021dc4:	6022      	str	r2, [r4, #0]
 8021dc6:	2b00      	cmp	r3, #0
 8021dc8:	d1cf      	bne.n	8021d6a <__sfvwrite_r+0x1be>
 8021dca:	4621      	mov	r1, r4
 8021dcc:	4630      	mov	r0, r6
 8021dce:	f7fd fcdf 	bl	801f790 <_fflush_r>
 8021dd2:	2800      	cmp	r0, #0
 8021dd4:	d0c9      	beq.n	8021d6a <__sfvwrite_r+0x1be>
 8021dd6:	e79c      	b.n	8021d12 <__sfvwrite_r+0x166>
 8021dd8:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 8021ddc:	4553      	cmp	r3, sl
 8021dde:	bf28      	it	cs
 8021de0:	4653      	movcs	r3, sl
 8021de2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8021de4:	fb93 f3f1 	sdiv	r3, r3, r1
 8021de8:	463a      	mov	r2, r7
 8021dea:	434b      	muls	r3, r1
 8021dec:	4630      	mov	r0, r6
 8021dee:	69e1      	ldr	r1, [r4, #28]
 8021df0:	47a8      	blx	r5
 8021df2:	1e05      	subs	r5, r0, #0
 8021df4:	dcb9      	bgt.n	8021d6a <__sfvwrite_r+0x1be>
 8021df6:	e78c      	b.n	8021d12 <__sfvwrite_r+0x166>
 8021df8:	e9d8 ab00 	ldrd	sl, fp, [r8]
 8021dfc:	2000      	movs	r0, #0
 8021dfe:	f108 0808 	add.w	r8, r8, #8
 8021e02:	e6f2      	b.n	8021bea <__sfvwrite_r+0x3e>
 8021e04:	f10b 0701 	add.w	r7, fp, #1
 8021e08:	e6ff      	b.n	8021c0a <__sfvwrite_r+0x5e>
 8021e0a:	4293      	cmp	r3, r2
 8021e0c:	dc08      	bgt.n	8021e20 <__sfvwrite_r+0x274>
 8021e0e:	6a65      	ldr	r5, [r4, #36]	@ 0x24
 8021e10:	69e1      	ldr	r1, [r4, #28]
 8021e12:	4652      	mov	r2, sl
 8021e14:	4630      	mov	r0, r6
 8021e16:	47a8      	blx	r5
 8021e18:	1e05      	subs	r5, r0, #0
 8021e1a:	f73f af12 	bgt.w	8021c42 <__sfvwrite_r+0x96>
 8021e1e:	e778      	b.n	8021d12 <__sfvwrite_r+0x166>
 8021e20:	4651      	mov	r1, sl
 8021e22:	9201      	str	r2, [sp, #4]
 8021e24:	f7ff f948 	bl	80210b8 <memmove>
 8021e28:	9a01      	ldr	r2, [sp, #4]
 8021e2a:	68a3      	ldr	r3, [r4, #8]
 8021e2c:	1a9b      	subs	r3, r3, r2
 8021e2e:	60a3      	str	r3, [r4, #8]
 8021e30:	6823      	ldr	r3, [r4, #0]
 8021e32:	4413      	add	r3, r2
 8021e34:	6023      	str	r3, [r4, #0]
 8021e36:	4615      	mov	r5, r2
 8021e38:	e703      	b.n	8021c42 <__sfvwrite_r+0x96>
 8021e3a:	2001      	movs	r0, #1
 8021e3c:	e70a      	b.n	8021c54 <__sfvwrite_r+0xa8>
 8021e3e:	bf00      	nop
 8021e40:	7ffffc00 	.word	0x7ffffc00

08021e44 <__swsetup_r>:
 8021e44:	b538      	push	{r3, r4, r5, lr}
 8021e46:	4b29      	ldr	r3, [pc, #164]	@ (8021eec <__swsetup_r+0xa8>)
 8021e48:	4605      	mov	r5, r0
 8021e4a:	6818      	ldr	r0, [r3, #0]
 8021e4c:	460c      	mov	r4, r1
 8021e4e:	b118      	cbz	r0, 8021e58 <__swsetup_r+0x14>
 8021e50:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8021e52:	b90b      	cbnz	r3, 8021e58 <__swsetup_r+0x14>
 8021e54:	f7fb fd10 	bl	801d878 <__sinit>
 8021e58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021e5c:	0719      	lsls	r1, r3, #28
 8021e5e:	d422      	bmi.n	8021ea6 <__swsetup_r+0x62>
 8021e60:	06da      	lsls	r2, r3, #27
 8021e62:	d407      	bmi.n	8021e74 <__swsetup_r+0x30>
 8021e64:	2209      	movs	r2, #9
 8021e66:	602a      	str	r2, [r5, #0]
 8021e68:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021e6c:	81a3      	strh	r3, [r4, #12]
 8021e6e:	f04f 30ff 	mov.w	r0, #4294967295
 8021e72:	e033      	b.n	8021edc <__swsetup_r+0x98>
 8021e74:	0758      	lsls	r0, r3, #29
 8021e76:	d512      	bpl.n	8021e9e <__swsetup_r+0x5a>
 8021e78:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8021e7a:	b141      	cbz	r1, 8021e8e <__swsetup_r+0x4a>
 8021e7c:	f104 0340 	add.w	r3, r4, #64	@ 0x40
 8021e80:	4299      	cmp	r1, r3
 8021e82:	d002      	beq.n	8021e8a <__swsetup_r+0x46>
 8021e84:	4628      	mov	r0, r5
 8021e86:	f7fb fec1 	bl	801dc0c <_free_r>
 8021e8a:	2300      	movs	r3, #0
 8021e8c:	6323      	str	r3, [r4, #48]	@ 0x30
 8021e8e:	89a3      	ldrh	r3, [r4, #12]
 8021e90:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8021e94:	81a3      	strh	r3, [r4, #12]
 8021e96:	2300      	movs	r3, #0
 8021e98:	6063      	str	r3, [r4, #4]
 8021e9a:	6923      	ldr	r3, [r4, #16]
 8021e9c:	6023      	str	r3, [r4, #0]
 8021e9e:	89a3      	ldrh	r3, [r4, #12]
 8021ea0:	f043 0308 	orr.w	r3, r3, #8
 8021ea4:	81a3      	strh	r3, [r4, #12]
 8021ea6:	6923      	ldr	r3, [r4, #16]
 8021ea8:	b94b      	cbnz	r3, 8021ebe <__swsetup_r+0x7a>
 8021eaa:	89a3      	ldrh	r3, [r4, #12]
 8021eac:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8021eb0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8021eb4:	d003      	beq.n	8021ebe <__swsetup_r+0x7a>
 8021eb6:	4621      	mov	r1, r4
 8021eb8:	4628      	mov	r0, r5
 8021eba:	f000 f8c9 	bl	8022050 <__smakebuf_r>
 8021ebe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021ec2:	f013 0201 	ands.w	r2, r3, #1
 8021ec6:	d00a      	beq.n	8021ede <__swsetup_r+0x9a>
 8021ec8:	2200      	movs	r2, #0
 8021eca:	60a2      	str	r2, [r4, #8]
 8021ecc:	6962      	ldr	r2, [r4, #20]
 8021ece:	4252      	negs	r2, r2
 8021ed0:	61a2      	str	r2, [r4, #24]
 8021ed2:	6922      	ldr	r2, [r4, #16]
 8021ed4:	b942      	cbnz	r2, 8021ee8 <__swsetup_r+0xa4>
 8021ed6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8021eda:	d1c5      	bne.n	8021e68 <__swsetup_r+0x24>
 8021edc:	bd38      	pop	{r3, r4, r5, pc}
 8021ede:	0799      	lsls	r1, r3, #30
 8021ee0:	bf58      	it	pl
 8021ee2:	6962      	ldrpl	r2, [r4, #20]
 8021ee4:	60a2      	str	r2, [r4, #8]
 8021ee6:	e7f4      	b.n	8021ed2 <__swsetup_r+0x8e>
 8021ee8:	2000      	movs	r0, #0
 8021eea:	e7f7      	b.n	8021edc <__swsetup_r+0x98>
 8021eec:	20000150 	.word	0x20000150

08021ef0 <__fputwc>:
 8021ef0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8021ef4:	4680      	mov	r8, r0
 8021ef6:	460f      	mov	r7, r1
 8021ef8:	4614      	mov	r4, r2
 8021efa:	f7fd fc81 	bl	801f800 <__locale_mb_cur_max>
 8021efe:	2801      	cmp	r0, #1
 8021f00:	4605      	mov	r5, r0
 8021f02:	d11b      	bne.n	8021f3c <__fputwc+0x4c>
 8021f04:	1e7b      	subs	r3, r7, #1
 8021f06:	2bfe      	cmp	r3, #254	@ 0xfe
 8021f08:	d818      	bhi.n	8021f3c <__fputwc+0x4c>
 8021f0a:	f88d 7004 	strb.w	r7, [sp, #4]
 8021f0e:	2600      	movs	r6, #0
 8021f10:	f10d 0904 	add.w	r9, sp, #4
 8021f14:	42ae      	cmp	r6, r5
 8021f16:	d021      	beq.n	8021f5c <__fputwc+0x6c>
 8021f18:	68a3      	ldr	r3, [r4, #8]
 8021f1a:	f816 1009 	ldrb.w	r1, [r6, r9]
 8021f1e:	3b01      	subs	r3, #1
 8021f20:	2b00      	cmp	r3, #0
 8021f22:	60a3      	str	r3, [r4, #8]
 8021f24:	da04      	bge.n	8021f30 <__fputwc+0x40>
 8021f26:	69a2      	ldr	r2, [r4, #24]
 8021f28:	4293      	cmp	r3, r2
 8021f2a:	db1b      	blt.n	8021f64 <__fputwc+0x74>
 8021f2c:	290a      	cmp	r1, #10
 8021f2e:	d019      	beq.n	8021f64 <__fputwc+0x74>
 8021f30:	6823      	ldr	r3, [r4, #0]
 8021f32:	1c5a      	adds	r2, r3, #1
 8021f34:	6022      	str	r2, [r4, #0]
 8021f36:	7019      	strb	r1, [r3, #0]
 8021f38:	3601      	adds	r6, #1
 8021f3a:	e7eb      	b.n	8021f14 <__fputwc+0x24>
 8021f3c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
 8021f40:	463a      	mov	r2, r7
 8021f42:	a901      	add	r1, sp, #4
 8021f44:	4640      	mov	r0, r8
 8021f46:	f000 f845 	bl	8021fd4 <_wcrtomb_r>
 8021f4a:	1c43      	adds	r3, r0, #1
 8021f4c:	4605      	mov	r5, r0
 8021f4e:	d1de      	bne.n	8021f0e <__fputwc+0x1e>
 8021f50:	89a3      	ldrh	r3, [r4, #12]
 8021f52:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021f56:	81a3      	strh	r3, [r4, #12]
 8021f58:	f04f 37ff 	mov.w	r7, #4294967295
 8021f5c:	4638      	mov	r0, r7
 8021f5e:	b003      	add	sp, #12
 8021f60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8021f64:	4622      	mov	r2, r4
 8021f66:	4640      	mov	r0, r8
 8021f68:	f000 f8ae 	bl	80220c8 <__swbuf_r>
 8021f6c:	3001      	adds	r0, #1
 8021f6e:	d1e3      	bne.n	8021f38 <__fputwc+0x48>
 8021f70:	e7f2      	b.n	8021f58 <__fputwc+0x68>

08021f72 <_fputwc_r>:
 8021f72:	6e53      	ldr	r3, [r2, #100]	@ 0x64
 8021f74:	07db      	lsls	r3, r3, #31
 8021f76:	b570      	push	{r4, r5, r6, lr}
 8021f78:	4605      	mov	r5, r0
 8021f7a:	460e      	mov	r6, r1
 8021f7c:	4614      	mov	r4, r2
 8021f7e:	d405      	bmi.n	8021f8c <_fputwc_r+0x1a>
 8021f80:	8993      	ldrh	r3, [r2, #12]
 8021f82:	0598      	lsls	r0, r3, #22
 8021f84:	d402      	bmi.n	8021f8c <_fputwc_r+0x1a>
 8021f86:	6d90      	ldr	r0, [r2, #88]	@ 0x58
 8021f88:	f7fb fdca 	bl	801db20 <__retarget_lock_acquire_recursive>
 8021f8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021f90:	0499      	lsls	r1, r3, #18
 8021f92:	d406      	bmi.n	8021fa2 <_fputwc_r+0x30>
 8021f94:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8021f98:	81a3      	strh	r3, [r4, #12]
 8021f9a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8021f9c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8021fa0:	6663      	str	r3, [r4, #100]	@ 0x64
 8021fa2:	4622      	mov	r2, r4
 8021fa4:	4628      	mov	r0, r5
 8021fa6:	4631      	mov	r1, r6
 8021fa8:	f7ff ffa2 	bl	8021ef0 <__fputwc>
 8021fac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8021fae:	07da      	lsls	r2, r3, #31
 8021fb0:	4605      	mov	r5, r0
 8021fb2:	d405      	bmi.n	8021fc0 <_fputwc_r+0x4e>
 8021fb4:	89a3      	ldrh	r3, [r4, #12]
 8021fb6:	059b      	lsls	r3, r3, #22
 8021fb8:	d402      	bmi.n	8021fc0 <_fputwc_r+0x4e>
 8021fba:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021fbc:	f7fb fdb1 	bl	801db22 <__retarget_lock_release_recursive>
 8021fc0:	4628      	mov	r0, r5
 8021fc2:	bd70      	pop	{r4, r5, r6, pc}

08021fc4 <abort>:
 8021fc4:	b508      	push	{r3, lr}
 8021fc6:	2006      	movs	r0, #6
 8021fc8:	f000 f8f0 	bl	80221ac <raise>
 8021fcc:	2001      	movs	r0, #1
 8021fce:	f7e1 ff0d 	bl	8003dec <_exit>
	...

08021fd4 <_wcrtomb_r>:
 8021fd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021fd6:	4c09      	ldr	r4, [pc, #36]	@ (8021ffc <_wcrtomb_r+0x28>)
 8021fd8:	b085      	sub	sp, #20
 8021fda:	f8d4 70e0 	ldr.w	r7, [r4, #224]	@ 0xe0
 8021fde:	4605      	mov	r5, r0
 8021fe0:	461e      	mov	r6, r3
 8021fe2:	b909      	cbnz	r1, 8021fe8 <_wcrtomb_r+0x14>
 8021fe4:	460a      	mov	r2, r1
 8021fe6:	a901      	add	r1, sp, #4
 8021fe8:	47b8      	blx	r7
 8021fea:	1c43      	adds	r3, r0, #1
 8021fec:	bf01      	itttt	eq
 8021fee:	2300      	moveq	r3, #0
 8021ff0:	6033      	streq	r3, [r6, #0]
 8021ff2:	238a      	moveq	r3, #138	@ 0x8a
 8021ff4:	602b      	streq	r3, [r5, #0]
 8021ff6:	b005      	add	sp, #20
 8021ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021ffa:	bf00      	nop
 8021ffc:	2000068c 	.word	0x2000068c

08022000 <__swhatbuf_r>:
 8022000:	b570      	push	{r4, r5, r6, lr}
 8022002:	460c      	mov	r4, r1
 8022004:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022008:	2900      	cmp	r1, #0
 802200a:	b096      	sub	sp, #88	@ 0x58
 802200c:	4615      	mov	r5, r2
 802200e:	461e      	mov	r6, r3
 8022010:	da07      	bge.n	8022022 <__swhatbuf_r+0x22>
 8022012:	89a1      	ldrh	r1, [r4, #12]
 8022014:	f011 0180 	ands.w	r1, r1, #128	@ 0x80
 8022018:	d117      	bne.n	802204a <__swhatbuf_r+0x4a>
 802201a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802201e:	4608      	mov	r0, r1
 8022020:	e00f      	b.n	8022042 <__swhatbuf_r+0x42>
 8022022:	466a      	mov	r2, sp
 8022024:	f000 f8ca 	bl	80221bc <_fstat_r>
 8022028:	2800      	cmp	r0, #0
 802202a:	dbf2      	blt.n	8022012 <__swhatbuf_r+0x12>
 802202c:	9901      	ldr	r1, [sp, #4]
 802202e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8022032:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8022036:	4259      	negs	r1, r3
 8022038:	4159      	adcs	r1, r3
 802203a:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 802203e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8022042:	6031      	str	r1, [r6, #0]
 8022044:	602b      	str	r3, [r5, #0]
 8022046:	b016      	add	sp, #88	@ 0x58
 8022048:	bd70      	pop	{r4, r5, r6, pc}
 802204a:	2100      	movs	r1, #0
 802204c:	2340      	movs	r3, #64	@ 0x40
 802204e:	e7e6      	b.n	802201e <__swhatbuf_r+0x1e>

08022050 <__smakebuf_r>:
 8022050:	898b      	ldrh	r3, [r1, #12]
 8022052:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8022054:	079d      	lsls	r5, r3, #30
 8022056:	4606      	mov	r6, r0
 8022058:	460c      	mov	r4, r1
 802205a:	d507      	bpl.n	802206c <__smakebuf_r+0x1c>
 802205c:	f104 0343 	add.w	r3, r4, #67	@ 0x43
 8022060:	6023      	str	r3, [r4, #0]
 8022062:	6123      	str	r3, [r4, #16]
 8022064:	2301      	movs	r3, #1
 8022066:	6163      	str	r3, [r4, #20]
 8022068:	b003      	add	sp, #12
 802206a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802206c:	ab01      	add	r3, sp, #4
 802206e:	466a      	mov	r2, sp
 8022070:	f7ff ffc6 	bl	8022000 <__swhatbuf_r>
 8022074:	9f00      	ldr	r7, [sp, #0]
 8022076:	4605      	mov	r5, r0
 8022078:	4639      	mov	r1, r7
 802207a:	4630      	mov	r0, r6
 802207c:	f7fb fe86 	bl	801dd8c <_malloc_r>
 8022080:	b948      	cbnz	r0, 8022096 <__smakebuf_r+0x46>
 8022082:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022086:	059a      	lsls	r2, r3, #22
 8022088:	d4ee      	bmi.n	8022068 <__smakebuf_r+0x18>
 802208a:	f023 0303 	bic.w	r3, r3, #3
 802208e:	f043 0302 	orr.w	r3, r3, #2
 8022092:	81a3      	strh	r3, [r4, #12]
 8022094:	e7e2      	b.n	802205c <__smakebuf_r+0xc>
 8022096:	89a3      	ldrh	r3, [r4, #12]
 8022098:	6020      	str	r0, [r4, #0]
 802209a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 802209e:	81a3      	strh	r3, [r4, #12]
 80220a0:	9b01      	ldr	r3, [sp, #4]
 80220a2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80220a6:	b15b      	cbz	r3, 80220c0 <__smakebuf_r+0x70>
 80220a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80220ac:	4630      	mov	r0, r6
 80220ae:	f000 f897 	bl	80221e0 <_isatty_r>
 80220b2:	b128      	cbz	r0, 80220c0 <__smakebuf_r+0x70>
 80220b4:	89a3      	ldrh	r3, [r4, #12]
 80220b6:	f023 0303 	bic.w	r3, r3, #3
 80220ba:	f043 0301 	orr.w	r3, r3, #1
 80220be:	81a3      	strh	r3, [r4, #12]
 80220c0:	89a3      	ldrh	r3, [r4, #12]
 80220c2:	431d      	orrs	r5, r3
 80220c4:	81a5      	strh	r5, [r4, #12]
 80220c6:	e7cf      	b.n	8022068 <__smakebuf_r+0x18>

080220c8 <__swbuf_r>:
 80220c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80220ca:	460e      	mov	r6, r1
 80220cc:	4614      	mov	r4, r2
 80220ce:	4605      	mov	r5, r0
 80220d0:	b118      	cbz	r0, 80220da <__swbuf_r+0x12>
 80220d2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80220d4:	b90b      	cbnz	r3, 80220da <__swbuf_r+0x12>
 80220d6:	f7fb fbcf 	bl	801d878 <__sinit>
 80220da:	69a3      	ldr	r3, [r4, #24]
 80220dc:	60a3      	str	r3, [r4, #8]
 80220de:	89a3      	ldrh	r3, [r4, #12]
 80220e0:	0719      	lsls	r1, r3, #28
 80220e2:	d501      	bpl.n	80220e8 <__swbuf_r+0x20>
 80220e4:	6923      	ldr	r3, [r4, #16]
 80220e6:	b943      	cbnz	r3, 80220fa <__swbuf_r+0x32>
 80220e8:	4621      	mov	r1, r4
 80220ea:	4628      	mov	r0, r5
 80220ec:	f7ff feaa 	bl	8021e44 <__swsetup_r>
 80220f0:	b118      	cbz	r0, 80220fa <__swbuf_r+0x32>
 80220f2:	f04f 37ff 	mov.w	r7, #4294967295
 80220f6:	4638      	mov	r0, r7
 80220f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80220fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80220fe:	b2f6      	uxtb	r6, r6
 8022100:	049a      	lsls	r2, r3, #18
 8022102:	4637      	mov	r7, r6
 8022104:	d406      	bmi.n	8022114 <__swbuf_r+0x4c>
 8022106:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 802210a:	81a3      	strh	r3, [r4, #12]
 802210c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802210e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8022112:	6663      	str	r3, [r4, #100]	@ 0x64
 8022114:	6823      	ldr	r3, [r4, #0]
 8022116:	6922      	ldr	r2, [r4, #16]
 8022118:	1a98      	subs	r0, r3, r2
 802211a:	6963      	ldr	r3, [r4, #20]
 802211c:	4283      	cmp	r3, r0
 802211e:	dc05      	bgt.n	802212c <__swbuf_r+0x64>
 8022120:	4621      	mov	r1, r4
 8022122:	4628      	mov	r0, r5
 8022124:	f7fd fb34 	bl	801f790 <_fflush_r>
 8022128:	2800      	cmp	r0, #0
 802212a:	d1e2      	bne.n	80220f2 <__swbuf_r+0x2a>
 802212c:	68a3      	ldr	r3, [r4, #8]
 802212e:	3b01      	subs	r3, #1
 8022130:	60a3      	str	r3, [r4, #8]
 8022132:	6823      	ldr	r3, [r4, #0]
 8022134:	1c5a      	adds	r2, r3, #1
 8022136:	6022      	str	r2, [r4, #0]
 8022138:	701e      	strb	r6, [r3, #0]
 802213a:	6962      	ldr	r2, [r4, #20]
 802213c:	1c43      	adds	r3, r0, #1
 802213e:	429a      	cmp	r2, r3
 8022140:	d004      	beq.n	802214c <__swbuf_r+0x84>
 8022142:	89a3      	ldrh	r3, [r4, #12]
 8022144:	07db      	lsls	r3, r3, #31
 8022146:	d5d6      	bpl.n	80220f6 <__swbuf_r+0x2e>
 8022148:	2e0a      	cmp	r6, #10
 802214a:	d1d4      	bne.n	80220f6 <__swbuf_r+0x2e>
 802214c:	4621      	mov	r1, r4
 802214e:	4628      	mov	r0, r5
 8022150:	f7fd fb1e 	bl	801f790 <_fflush_r>
 8022154:	2800      	cmp	r0, #0
 8022156:	d0ce      	beq.n	80220f6 <__swbuf_r+0x2e>
 8022158:	e7cb      	b.n	80220f2 <__swbuf_r+0x2a>

0802215a <_raise_r>:
 802215a:	291f      	cmp	r1, #31
 802215c:	b538      	push	{r3, r4, r5, lr}
 802215e:	4605      	mov	r5, r0
 8022160:	460c      	mov	r4, r1
 8022162:	d904      	bls.n	802216e <_raise_r+0x14>
 8022164:	2316      	movs	r3, #22
 8022166:	6003      	str	r3, [r0, #0]
 8022168:	f04f 30ff 	mov.w	r0, #4294967295
 802216c:	bd38      	pop	{r3, r4, r5, pc}
 802216e:	f8d0 2118 	ldr.w	r2, [r0, #280]	@ 0x118
 8022172:	b112      	cbz	r2, 802217a <_raise_r+0x20>
 8022174:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022178:	b94b      	cbnz	r3, 802218e <_raise_r+0x34>
 802217a:	4628      	mov	r0, r5
 802217c:	f000 f852 	bl	8022224 <_getpid_r>
 8022180:	4622      	mov	r2, r4
 8022182:	4601      	mov	r1, r0
 8022184:	4628      	mov	r0, r5
 8022186:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802218a:	f000 b839 	b.w	8022200 <_kill_r>
 802218e:	2b01      	cmp	r3, #1
 8022190:	d00a      	beq.n	80221a8 <_raise_r+0x4e>
 8022192:	1c59      	adds	r1, r3, #1
 8022194:	d103      	bne.n	802219e <_raise_r+0x44>
 8022196:	2316      	movs	r3, #22
 8022198:	6003      	str	r3, [r0, #0]
 802219a:	2001      	movs	r0, #1
 802219c:	e7e6      	b.n	802216c <_raise_r+0x12>
 802219e:	2100      	movs	r1, #0
 80221a0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80221a4:	4620      	mov	r0, r4
 80221a6:	4798      	blx	r3
 80221a8:	2000      	movs	r0, #0
 80221aa:	e7df      	b.n	802216c <_raise_r+0x12>

080221ac <raise>:
 80221ac:	4b02      	ldr	r3, [pc, #8]	@ (80221b8 <raise+0xc>)
 80221ae:	4601      	mov	r1, r0
 80221b0:	6818      	ldr	r0, [r3, #0]
 80221b2:	f7ff bfd2 	b.w	802215a <_raise_r>
 80221b6:	bf00      	nop
 80221b8:	20000150 	.word	0x20000150

080221bc <_fstat_r>:
 80221bc:	b538      	push	{r3, r4, r5, lr}
 80221be:	4d07      	ldr	r5, [pc, #28]	@ (80221dc <_fstat_r+0x20>)
 80221c0:	2300      	movs	r3, #0
 80221c2:	4604      	mov	r4, r0
 80221c4:	4608      	mov	r0, r1
 80221c6:	4611      	mov	r1, r2
 80221c8:	602b      	str	r3, [r5, #0]
 80221ca:	f7e1 fe5f 	bl	8003e8c <_fstat>
 80221ce:	1c43      	adds	r3, r0, #1
 80221d0:	d102      	bne.n	80221d8 <_fstat_r+0x1c>
 80221d2:	682b      	ldr	r3, [r5, #0]
 80221d4:	b103      	cbz	r3, 80221d8 <_fstat_r+0x1c>
 80221d6:	6023      	str	r3, [r4, #0]
 80221d8:	bd38      	pop	{r3, r4, r5, pc}
 80221da:	bf00      	nop
 80221dc:	2000d488 	.word	0x2000d488

080221e0 <_isatty_r>:
 80221e0:	b538      	push	{r3, r4, r5, lr}
 80221e2:	4d06      	ldr	r5, [pc, #24]	@ (80221fc <_isatty_r+0x1c>)
 80221e4:	2300      	movs	r3, #0
 80221e6:	4604      	mov	r4, r0
 80221e8:	4608      	mov	r0, r1
 80221ea:	602b      	str	r3, [r5, #0]
 80221ec:	f7e1 fe5e 	bl	8003eac <_isatty>
 80221f0:	1c43      	adds	r3, r0, #1
 80221f2:	d102      	bne.n	80221fa <_isatty_r+0x1a>
 80221f4:	682b      	ldr	r3, [r5, #0]
 80221f6:	b103      	cbz	r3, 80221fa <_isatty_r+0x1a>
 80221f8:	6023      	str	r3, [r4, #0]
 80221fa:	bd38      	pop	{r3, r4, r5, pc}
 80221fc:	2000d488 	.word	0x2000d488

08022200 <_kill_r>:
 8022200:	b538      	push	{r3, r4, r5, lr}
 8022202:	4d07      	ldr	r5, [pc, #28]	@ (8022220 <_kill_r+0x20>)
 8022204:	2300      	movs	r3, #0
 8022206:	4604      	mov	r4, r0
 8022208:	4608      	mov	r0, r1
 802220a:	4611      	mov	r1, r2
 802220c:	602b      	str	r3, [r5, #0]
 802220e:	f7e1 fddd 	bl	8003dcc <_kill>
 8022212:	1c43      	adds	r3, r0, #1
 8022214:	d102      	bne.n	802221c <_kill_r+0x1c>
 8022216:	682b      	ldr	r3, [r5, #0]
 8022218:	b103      	cbz	r3, 802221c <_kill_r+0x1c>
 802221a:	6023      	str	r3, [r4, #0]
 802221c:	bd38      	pop	{r3, r4, r5, pc}
 802221e:	bf00      	nop
 8022220:	2000d488 	.word	0x2000d488

08022224 <_getpid_r>:
 8022224:	f7e1 bdca 	b.w	8003dbc <_getpid>

08022228 <atan2>:
 8022228:	f000 bdce 	b.w	8022dc8 <__ieee754_atan2>

0802222c <pow>:
 802222c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802222e:	ed2d 8b02 	vpush	{d8}
 8022232:	eeb0 8a40 	vmov.f32	s16, s0
 8022236:	eef0 8a60 	vmov.f32	s17, s1
 802223a:	ec55 4b11 	vmov	r4, r5, d1
 802223e:	f000 fe8b 	bl	8022f58 <__ieee754_pow>
 8022242:	4622      	mov	r2, r4
 8022244:	462b      	mov	r3, r5
 8022246:	4620      	mov	r0, r4
 8022248:	4629      	mov	r1, r5
 802224a:	ec57 6b10 	vmov	r6, r7, d0
 802224e:	f7de fc6d 	bl	8000b2c <__aeabi_dcmpun>
 8022252:	2800      	cmp	r0, #0
 8022254:	d13b      	bne.n	80222ce <pow+0xa2>
 8022256:	ec51 0b18 	vmov	r0, r1, d8
 802225a:	2200      	movs	r2, #0
 802225c:	2300      	movs	r3, #0
 802225e:	f7de fc33 	bl	8000ac8 <__aeabi_dcmpeq>
 8022262:	b1b8      	cbz	r0, 8022294 <pow+0x68>
 8022264:	2200      	movs	r2, #0
 8022266:	2300      	movs	r3, #0
 8022268:	4620      	mov	r0, r4
 802226a:	4629      	mov	r1, r5
 802226c:	f7de fc2c 	bl	8000ac8 <__aeabi_dcmpeq>
 8022270:	2800      	cmp	r0, #0
 8022272:	d146      	bne.n	8022302 <pow+0xd6>
 8022274:	ec45 4b10 	vmov	d0, r4, r5
 8022278:	f000 fabe 	bl	80227f8 <finite>
 802227c:	b338      	cbz	r0, 80222ce <pow+0xa2>
 802227e:	2200      	movs	r2, #0
 8022280:	2300      	movs	r3, #0
 8022282:	4620      	mov	r0, r4
 8022284:	4629      	mov	r1, r5
 8022286:	f7de fc29 	bl	8000adc <__aeabi_dcmplt>
 802228a:	b300      	cbz	r0, 80222ce <pow+0xa2>
 802228c:	f7fb fc1c 	bl	801dac8 <__errno>
 8022290:	2322      	movs	r3, #34	@ 0x22
 8022292:	e01b      	b.n	80222cc <pow+0xa0>
 8022294:	ec47 6b10 	vmov	d0, r6, r7
 8022298:	f000 faae 	bl	80227f8 <finite>
 802229c:	b9e0      	cbnz	r0, 80222d8 <pow+0xac>
 802229e:	eeb0 0a48 	vmov.f32	s0, s16
 80222a2:	eef0 0a68 	vmov.f32	s1, s17
 80222a6:	f000 faa7 	bl	80227f8 <finite>
 80222aa:	b1a8      	cbz	r0, 80222d8 <pow+0xac>
 80222ac:	ec45 4b10 	vmov	d0, r4, r5
 80222b0:	f000 faa2 	bl	80227f8 <finite>
 80222b4:	b180      	cbz	r0, 80222d8 <pow+0xac>
 80222b6:	4632      	mov	r2, r6
 80222b8:	463b      	mov	r3, r7
 80222ba:	4630      	mov	r0, r6
 80222bc:	4639      	mov	r1, r7
 80222be:	f7de fc35 	bl	8000b2c <__aeabi_dcmpun>
 80222c2:	2800      	cmp	r0, #0
 80222c4:	d0e2      	beq.n	802228c <pow+0x60>
 80222c6:	f7fb fbff 	bl	801dac8 <__errno>
 80222ca:	2321      	movs	r3, #33	@ 0x21
 80222cc:	6003      	str	r3, [r0, #0]
 80222ce:	ecbd 8b02 	vpop	{d8}
 80222d2:	ec47 6b10 	vmov	d0, r6, r7
 80222d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80222d8:	2200      	movs	r2, #0
 80222da:	2300      	movs	r3, #0
 80222dc:	4630      	mov	r0, r6
 80222de:	4639      	mov	r1, r7
 80222e0:	f7de fbf2 	bl	8000ac8 <__aeabi_dcmpeq>
 80222e4:	2800      	cmp	r0, #0
 80222e6:	d0f2      	beq.n	80222ce <pow+0xa2>
 80222e8:	eeb0 0a48 	vmov.f32	s0, s16
 80222ec:	eef0 0a68 	vmov.f32	s1, s17
 80222f0:	f000 fa82 	bl	80227f8 <finite>
 80222f4:	2800      	cmp	r0, #0
 80222f6:	d0ea      	beq.n	80222ce <pow+0xa2>
 80222f8:	ec45 4b10 	vmov	d0, r4, r5
 80222fc:	f000 fa7c 	bl	80227f8 <finite>
 8022300:	e7c3      	b.n	802228a <pow+0x5e>
 8022302:	4f01      	ldr	r7, [pc, #4]	@ (8022308 <pow+0xdc>)
 8022304:	2600      	movs	r6, #0
 8022306:	e7e2      	b.n	80222ce <pow+0xa2>
 8022308:	3ff00000 	.word	0x3ff00000

0802230c <sqrt>:
 802230c:	b538      	push	{r3, r4, r5, lr}
 802230e:	ed2d 8b02 	vpush	{d8}
 8022312:	ec55 4b10 	vmov	r4, r5, d0
 8022316:	f000 fa7b 	bl	8022810 <__ieee754_sqrt>
 802231a:	4622      	mov	r2, r4
 802231c:	462b      	mov	r3, r5
 802231e:	4620      	mov	r0, r4
 8022320:	4629      	mov	r1, r5
 8022322:	eeb0 8a40 	vmov.f32	s16, s0
 8022326:	eef0 8a60 	vmov.f32	s17, s1
 802232a:	f7de fbff 	bl	8000b2c <__aeabi_dcmpun>
 802232e:	b990      	cbnz	r0, 8022356 <sqrt+0x4a>
 8022330:	2200      	movs	r2, #0
 8022332:	2300      	movs	r3, #0
 8022334:	4620      	mov	r0, r4
 8022336:	4629      	mov	r1, r5
 8022338:	f7de fbd0 	bl	8000adc <__aeabi_dcmplt>
 802233c:	b158      	cbz	r0, 8022356 <sqrt+0x4a>
 802233e:	f7fb fbc3 	bl	801dac8 <__errno>
 8022342:	2321      	movs	r3, #33	@ 0x21
 8022344:	6003      	str	r3, [r0, #0]
 8022346:	2200      	movs	r2, #0
 8022348:	2300      	movs	r3, #0
 802234a:	4610      	mov	r0, r2
 802234c:	4619      	mov	r1, r3
 802234e:	f7de fa7d 	bl	800084c <__aeabi_ddiv>
 8022352:	ec41 0b18 	vmov	d8, r0, r1
 8022356:	eeb0 0a48 	vmov.f32	s0, s16
 802235a:	eef0 0a68 	vmov.f32	s1, s17
 802235e:	ecbd 8b02 	vpop	{d8}
 8022362:	bd38      	pop	{r3, r4, r5, pc}
 8022364:	0000      	movs	r0, r0
	...

08022368 <atan>:
 8022368:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802236c:	ec55 4b10 	vmov	r4, r5, d0
 8022370:	4bbf      	ldr	r3, [pc, #764]	@ (8022670 <atan+0x308>)
 8022372:	f025 4600 	bic.w	r6, r5, #2147483648	@ 0x80000000
 8022376:	429e      	cmp	r6, r3
 8022378:	46ab      	mov	fp, r5
 802237a:	d918      	bls.n	80223ae <atan+0x46>
 802237c:	4bbd      	ldr	r3, [pc, #756]	@ (8022674 <atan+0x30c>)
 802237e:	429e      	cmp	r6, r3
 8022380:	d801      	bhi.n	8022386 <atan+0x1e>
 8022382:	d109      	bne.n	8022398 <atan+0x30>
 8022384:	b144      	cbz	r4, 8022398 <atan+0x30>
 8022386:	4622      	mov	r2, r4
 8022388:	462b      	mov	r3, r5
 802238a:	4620      	mov	r0, r4
 802238c:	4629      	mov	r1, r5
 802238e:	f7dd ff7d 	bl	800028c <__adddf3>
 8022392:	4604      	mov	r4, r0
 8022394:	460d      	mov	r5, r1
 8022396:	e006      	b.n	80223a6 <atan+0x3e>
 8022398:	f1bb 0f00 	cmp.w	fp, #0
 802239c:	f340 812b 	ble.w	80225f6 <atan+0x28e>
 80223a0:	a597      	add	r5, pc, #604	@ (adr r5, 8022600 <atan+0x298>)
 80223a2:	e9d5 4500 	ldrd	r4, r5, [r5]
 80223a6:	ec45 4b10 	vmov	d0, r4, r5
 80223aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80223ae:	4bb2      	ldr	r3, [pc, #712]	@ (8022678 <atan+0x310>)
 80223b0:	429e      	cmp	r6, r3
 80223b2:	d813      	bhi.n	80223dc <atan+0x74>
 80223b4:	f1a3 73de 	sub.w	r3, r3, #29097984	@ 0x1bc0000
 80223b8:	429e      	cmp	r6, r3
 80223ba:	d80c      	bhi.n	80223d6 <atan+0x6e>
 80223bc:	a392      	add	r3, pc, #584	@ (adr r3, 8022608 <atan+0x2a0>)
 80223be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80223c2:	4620      	mov	r0, r4
 80223c4:	4629      	mov	r1, r5
 80223c6:	f7dd ff61 	bl	800028c <__adddf3>
 80223ca:	4bac      	ldr	r3, [pc, #688]	@ (802267c <atan+0x314>)
 80223cc:	2200      	movs	r2, #0
 80223ce:	f7de fba3 	bl	8000b18 <__aeabi_dcmpgt>
 80223d2:	2800      	cmp	r0, #0
 80223d4:	d1e7      	bne.n	80223a6 <atan+0x3e>
 80223d6:	f04f 3aff 	mov.w	sl, #4294967295
 80223da:	e029      	b.n	8022430 <atan+0xc8>
 80223dc:	f000 f9b0 	bl	8022740 <fabs>
 80223e0:	4ba7      	ldr	r3, [pc, #668]	@ (8022680 <atan+0x318>)
 80223e2:	429e      	cmp	r6, r3
 80223e4:	ec55 4b10 	vmov	r4, r5, d0
 80223e8:	f200 80bc 	bhi.w	8022564 <atan+0x1fc>
 80223ec:	f5a3 2350 	sub.w	r3, r3, #851968	@ 0xd0000
 80223f0:	429e      	cmp	r6, r3
 80223f2:	f200 809e 	bhi.w	8022532 <atan+0x1ca>
 80223f6:	4622      	mov	r2, r4
 80223f8:	462b      	mov	r3, r5
 80223fa:	4620      	mov	r0, r4
 80223fc:	4629      	mov	r1, r5
 80223fe:	f7dd ff45 	bl	800028c <__adddf3>
 8022402:	4b9e      	ldr	r3, [pc, #632]	@ (802267c <atan+0x314>)
 8022404:	2200      	movs	r2, #0
 8022406:	f7dd ff3f 	bl	8000288 <__aeabi_dsub>
 802240a:	2200      	movs	r2, #0
 802240c:	4606      	mov	r6, r0
 802240e:	460f      	mov	r7, r1
 8022410:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8022414:	4620      	mov	r0, r4
 8022416:	4629      	mov	r1, r5
 8022418:	f7dd ff38 	bl	800028c <__adddf3>
 802241c:	4602      	mov	r2, r0
 802241e:	460b      	mov	r3, r1
 8022420:	4630      	mov	r0, r6
 8022422:	4639      	mov	r1, r7
 8022424:	f7de fa12 	bl	800084c <__aeabi_ddiv>
 8022428:	f04f 0a00 	mov.w	sl, #0
 802242c:	4604      	mov	r4, r0
 802242e:	460d      	mov	r5, r1
 8022430:	4622      	mov	r2, r4
 8022432:	462b      	mov	r3, r5
 8022434:	4620      	mov	r0, r4
 8022436:	4629      	mov	r1, r5
 8022438:	f7de f8de 	bl	80005f8 <__aeabi_dmul>
 802243c:	4602      	mov	r2, r0
 802243e:	460b      	mov	r3, r1
 8022440:	4680      	mov	r8, r0
 8022442:	4689      	mov	r9, r1
 8022444:	f7de f8d8 	bl	80005f8 <__aeabi_dmul>
 8022448:	a371      	add	r3, pc, #452	@ (adr r3, 8022610 <atan+0x2a8>)
 802244a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802244e:	4606      	mov	r6, r0
 8022450:	460f      	mov	r7, r1
 8022452:	f7de f8d1 	bl	80005f8 <__aeabi_dmul>
 8022456:	a370      	add	r3, pc, #448	@ (adr r3, 8022618 <atan+0x2b0>)
 8022458:	e9d3 2300 	ldrd	r2, r3, [r3]
 802245c:	f7dd ff16 	bl	800028c <__adddf3>
 8022460:	4632      	mov	r2, r6
 8022462:	463b      	mov	r3, r7
 8022464:	f7de f8c8 	bl	80005f8 <__aeabi_dmul>
 8022468:	a36d      	add	r3, pc, #436	@ (adr r3, 8022620 <atan+0x2b8>)
 802246a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802246e:	f7dd ff0d 	bl	800028c <__adddf3>
 8022472:	4632      	mov	r2, r6
 8022474:	463b      	mov	r3, r7
 8022476:	f7de f8bf 	bl	80005f8 <__aeabi_dmul>
 802247a:	a36b      	add	r3, pc, #428	@ (adr r3, 8022628 <atan+0x2c0>)
 802247c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022480:	f7dd ff04 	bl	800028c <__adddf3>
 8022484:	4632      	mov	r2, r6
 8022486:	463b      	mov	r3, r7
 8022488:	f7de f8b6 	bl	80005f8 <__aeabi_dmul>
 802248c:	a368      	add	r3, pc, #416	@ (adr r3, 8022630 <atan+0x2c8>)
 802248e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022492:	f7dd fefb 	bl	800028c <__adddf3>
 8022496:	4632      	mov	r2, r6
 8022498:	463b      	mov	r3, r7
 802249a:	f7de f8ad 	bl	80005f8 <__aeabi_dmul>
 802249e:	a366      	add	r3, pc, #408	@ (adr r3, 8022638 <atan+0x2d0>)
 80224a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224a4:	f7dd fef2 	bl	800028c <__adddf3>
 80224a8:	4642      	mov	r2, r8
 80224aa:	464b      	mov	r3, r9
 80224ac:	f7de f8a4 	bl	80005f8 <__aeabi_dmul>
 80224b0:	a363      	add	r3, pc, #396	@ (adr r3, 8022640 <atan+0x2d8>)
 80224b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224b6:	4680      	mov	r8, r0
 80224b8:	4689      	mov	r9, r1
 80224ba:	4630      	mov	r0, r6
 80224bc:	4639      	mov	r1, r7
 80224be:	f7de f89b 	bl	80005f8 <__aeabi_dmul>
 80224c2:	a361      	add	r3, pc, #388	@ (adr r3, 8022648 <atan+0x2e0>)
 80224c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224c8:	f7dd fede 	bl	8000288 <__aeabi_dsub>
 80224cc:	4632      	mov	r2, r6
 80224ce:	463b      	mov	r3, r7
 80224d0:	f7de f892 	bl	80005f8 <__aeabi_dmul>
 80224d4:	a35e      	add	r3, pc, #376	@ (adr r3, 8022650 <atan+0x2e8>)
 80224d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224da:	f7dd fed5 	bl	8000288 <__aeabi_dsub>
 80224de:	4632      	mov	r2, r6
 80224e0:	463b      	mov	r3, r7
 80224e2:	f7de f889 	bl	80005f8 <__aeabi_dmul>
 80224e6:	a35c      	add	r3, pc, #368	@ (adr r3, 8022658 <atan+0x2f0>)
 80224e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224ec:	f7dd fecc 	bl	8000288 <__aeabi_dsub>
 80224f0:	4632      	mov	r2, r6
 80224f2:	463b      	mov	r3, r7
 80224f4:	f7de f880 	bl	80005f8 <__aeabi_dmul>
 80224f8:	a359      	add	r3, pc, #356	@ (adr r3, 8022660 <atan+0x2f8>)
 80224fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80224fe:	f7dd fec3 	bl	8000288 <__aeabi_dsub>
 8022502:	4632      	mov	r2, r6
 8022504:	463b      	mov	r3, r7
 8022506:	f7de f877 	bl	80005f8 <__aeabi_dmul>
 802250a:	4602      	mov	r2, r0
 802250c:	460b      	mov	r3, r1
 802250e:	4640      	mov	r0, r8
 8022510:	4649      	mov	r1, r9
 8022512:	f7dd febb 	bl	800028c <__adddf3>
 8022516:	4622      	mov	r2, r4
 8022518:	462b      	mov	r3, r5
 802251a:	f7de f86d 	bl	80005f8 <__aeabi_dmul>
 802251e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8022522:	4602      	mov	r2, r0
 8022524:	460b      	mov	r3, r1
 8022526:	d148      	bne.n	80225ba <atan+0x252>
 8022528:	4620      	mov	r0, r4
 802252a:	4629      	mov	r1, r5
 802252c:	f7dd feac 	bl	8000288 <__aeabi_dsub>
 8022530:	e72f      	b.n	8022392 <atan+0x2a>
 8022532:	4b52      	ldr	r3, [pc, #328]	@ (802267c <atan+0x314>)
 8022534:	2200      	movs	r2, #0
 8022536:	4620      	mov	r0, r4
 8022538:	4629      	mov	r1, r5
 802253a:	f7dd fea5 	bl	8000288 <__aeabi_dsub>
 802253e:	4b4f      	ldr	r3, [pc, #316]	@ (802267c <atan+0x314>)
 8022540:	4606      	mov	r6, r0
 8022542:	460f      	mov	r7, r1
 8022544:	2200      	movs	r2, #0
 8022546:	4620      	mov	r0, r4
 8022548:	4629      	mov	r1, r5
 802254a:	f7dd fe9f 	bl	800028c <__adddf3>
 802254e:	4602      	mov	r2, r0
 8022550:	460b      	mov	r3, r1
 8022552:	4630      	mov	r0, r6
 8022554:	4639      	mov	r1, r7
 8022556:	f7de f979 	bl	800084c <__aeabi_ddiv>
 802255a:	f04f 0a01 	mov.w	sl, #1
 802255e:	4604      	mov	r4, r0
 8022560:	460d      	mov	r5, r1
 8022562:	e765      	b.n	8022430 <atan+0xc8>
 8022564:	4b47      	ldr	r3, [pc, #284]	@ (8022684 <atan+0x31c>)
 8022566:	429e      	cmp	r6, r3
 8022568:	d21c      	bcs.n	80225a4 <atan+0x23c>
 802256a:	4b47      	ldr	r3, [pc, #284]	@ (8022688 <atan+0x320>)
 802256c:	2200      	movs	r2, #0
 802256e:	4620      	mov	r0, r4
 8022570:	4629      	mov	r1, r5
 8022572:	f7dd fe89 	bl	8000288 <__aeabi_dsub>
 8022576:	4b44      	ldr	r3, [pc, #272]	@ (8022688 <atan+0x320>)
 8022578:	4606      	mov	r6, r0
 802257a:	460f      	mov	r7, r1
 802257c:	2200      	movs	r2, #0
 802257e:	4620      	mov	r0, r4
 8022580:	4629      	mov	r1, r5
 8022582:	f7de f839 	bl	80005f8 <__aeabi_dmul>
 8022586:	4b3d      	ldr	r3, [pc, #244]	@ (802267c <atan+0x314>)
 8022588:	2200      	movs	r2, #0
 802258a:	f7dd fe7f 	bl	800028c <__adddf3>
 802258e:	4602      	mov	r2, r0
 8022590:	460b      	mov	r3, r1
 8022592:	4630      	mov	r0, r6
 8022594:	4639      	mov	r1, r7
 8022596:	f7de f959 	bl	800084c <__aeabi_ddiv>
 802259a:	f04f 0a02 	mov.w	sl, #2
 802259e:	4604      	mov	r4, r0
 80225a0:	460d      	mov	r5, r1
 80225a2:	e745      	b.n	8022430 <atan+0xc8>
 80225a4:	4622      	mov	r2, r4
 80225a6:	462b      	mov	r3, r5
 80225a8:	4938      	ldr	r1, [pc, #224]	@ (802268c <atan+0x324>)
 80225aa:	2000      	movs	r0, #0
 80225ac:	f7de f94e 	bl	800084c <__aeabi_ddiv>
 80225b0:	f04f 0a03 	mov.w	sl, #3
 80225b4:	4604      	mov	r4, r0
 80225b6:	460d      	mov	r5, r1
 80225b8:	e73a      	b.n	8022430 <atan+0xc8>
 80225ba:	4b35      	ldr	r3, [pc, #212]	@ (8022690 <atan+0x328>)
 80225bc:	4e35      	ldr	r6, [pc, #212]	@ (8022694 <atan+0x32c>)
 80225be:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80225c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80225c6:	f7dd fe5f 	bl	8000288 <__aeabi_dsub>
 80225ca:	4622      	mov	r2, r4
 80225cc:	462b      	mov	r3, r5
 80225ce:	f7dd fe5b 	bl	8000288 <__aeabi_dsub>
 80225d2:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 80225d6:	4602      	mov	r2, r0
 80225d8:	460b      	mov	r3, r1
 80225da:	e9d6 0100 	ldrd	r0, r1, [r6]
 80225de:	f7dd fe53 	bl	8000288 <__aeabi_dsub>
 80225e2:	f1bb 0f00 	cmp.w	fp, #0
 80225e6:	4604      	mov	r4, r0
 80225e8:	460d      	mov	r5, r1
 80225ea:	f6bf aedc 	bge.w	80223a6 <atan+0x3e>
 80225ee:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80225f2:	461d      	mov	r5, r3
 80225f4:	e6d7      	b.n	80223a6 <atan+0x3e>
 80225f6:	a51c      	add	r5, pc, #112	@ (adr r5, 8022668 <atan+0x300>)
 80225f8:	e9d5 4500 	ldrd	r4, r5, [r5]
 80225fc:	e6d3      	b.n	80223a6 <atan+0x3e>
 80225fe:	bf00      	nop
 8022600:	54442d18 	.word	0x54442d18
 8022604:	3ff921fb 	.word	0x3ff921fb
 8022608:	8800759c 	.word	0x8800759c
 802260c:	7e37e43c 	.word	0x7e37e43c
 8022610:	e322da11 	.word	0xe322da11
 8022614:	3f90ad3a 	.word	0x3f90ad3a
 8022618:	24760deb 	.word	0x24760deb
 802261c:	3fa97b4b 	.word	0x3fa97b4b
 8022620:	a0d03d51 	.word	0xa0d03d51
 8022624:	3fb10d66 	.word	0x3fb10d66
 8022628:	c54c206e 	.word	0xc54c206e
 802262c:	3fb745cd 	.word	0x3fb745cd
 8022630:	920083ff 	.word	0x920083ff
 8022634:	3fc24924 	.word	0x3fc24924
 8022638:	5555550d 	.word	0x5555550d
 802263c:	3fd55555 	.word	0x3fd55555
 8022640:	2c6a6c2f 	.word	0x2c6a6c2f
 8022644:	bfa2b444 	.word	0xbfa2b444
 8022648:	52defd9a 	.word	0x52defd9a
 802264c:	3fadde2d 	.word	0x3fadde2d
 8022650:	af749a6d 	.word	0xaf749a6d
 8022654:	3fb3b0f2 	.word	0x3fb3b0f2
 8022658:	fe231671 	.word	0xfe231671
 802265c:	3fbc71c6 	.word	0x3fbc71c6
 8022660:	9998ebc4 	.word	0x9998ebc4
 8022664:	3fc99999 	.word	0x3fc99999
 8022668:	54442d18 	.word	0x54442d18
 802266c:	bff921fb 	.word	0xbff921fb
 8022670:	440fffff 	.word	0x440fffff
 8022674:	7ff00000 	.word	0x7ff00000
 8022678:	3fdbffff 	.word	0x3fdbffff
 802267c:	3ff00000 	.word	0x3ff00000
 8022680:	3ff2ffff 	.word	0x3ff2ffff
 8022684:	40038000 	.word	0x40038000
 8022688:	3ff80000 	.word	0x3ff80000
 802268c:	bff00000 	.word	0xbff00000
 8022690:	08025188 	.word	0x08025188
 8022694:	080251a8 	.word	0x080251a8

08022698 <cos>:
 8022698:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802269a:	ec53 2b10 	vmov	r2, r3, d0
 802269e:	4826      	ldr	r0, [pc, #152]	@ (8022738 <cos+0xa0>)
 80226a0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80226a4:	4281      	cmp	r1, r0
 80226a6:	d806      	bhi.n	80226b6 <cos+0x1e>
 80226a8:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 8022730 <cos+0x98>
 80226ac:	b005      	add	sp, #20
 80226ae:	f85d eb04 	ldr.w	lr, [sp], #4
 80226b2:	f000 ba05 	b.w	8022ac0 <__kernel_cos>
 80226b6:	4821      	ldr	r0, [pc, #132]	@ (802273c <cos+0xa4>)
 80226b8:	4281      	cmp	r1, r0
 80226ba:	d908      	bls.n	80226ce <cos+0x36>
 80226bc:	4610      	mov	r0, r2
 80226be:	4619      	mov	r1, r3
 80226c0:	f7dd fde2 	bl	8000288 <__aeabi_dsub>
 80226c4:	ec41 0b10 	vmov	d0, r0, r1
 80226c8:	b005      	add	sp, #20
 80226ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80226ce:	4668      	mov	r0, sp
 80226d0:	f001 f986 	bl	80239e0 <__ieee754_rem_pio2>
 80226d4:	f000 0003 	and.w	r0, r0, #3
 80226d8:	2801      	cmp	r0, #1
 80226da:	d00b      	beq.n	80226f4 <cos+0x5c>
 80226dc:	2802      	cmp	r0, #2
 80226de:	d015      	beq.n	802270c <cos+0x74>
 80226e0:	b9d8      	cbnz	r0, 802271a <cos+0x82>
 80226e2:	ed9d 1b02 	vldr	d1, [sp, #8]
 80226e6:	ed9d 0b00 	vldr	d0, [sp]
 80226ea:	f000 f9e9 	bl	8022ac0 <__kernel_cos>
 80226ee:	ec51 0b10 	vmov	r0, r1, d0
 80226f2:	e7e7      	b.n	80226c4 <cos+0x2c>
 80226f4:	ed9d 1b02 	vldr	d1, [sp, #8]
 80226f8:	ed9d 0b00 	vldr	d0, [sp]
 80226fc:	f000 faa8 	bl	8022c50 <__kernel_sin>
 8022700:	ec53 2b10 	vmov	r2, r3, d0
 8022704:	4610      	mov	r0, r2
 8022706:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 802270a:	e7db      	b.n	80226c4 <cos+0x2c>
 802270c:	ed9d 1b02 	vldr	d1, [sp, #8]
 8022710:	ed9d 0b00 	vldr	d0, [sp]
 8022714:	f000 f9d4 	bl	8022ac0 <__kernel_cos>
 8022718:	e7f2      	b.n	8022700 <cos+0x68>
 802271a:	ed9d 1b02 	vldr	d1, [sp, #8]
 802271e:	ed9d 0b00 	vldr	d0, [sp]
 8022722:	2001      	movs	r0, #1
 8022724:	f000 fa94 	bl	8022c50 <__kernel_sin>
 8022728:	e7e1      	b.n	80226ee <cos+0x56>
 802272a:	bf00      	nop
 802272c:	f3af 8000 	nop.w
	...
 8022738:	3fe921fb 	.word	0x3fe921fb
 802273c:	7fefffff 	.word	0x7fefffff

08022740 <fabs>:
 8022740:	ec51 0b10 	vmov	r0, r1, d0
 8022744:	4602      	mov	r2, r0
 8022746:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 802274a:	ec43 2b10 	vmov	d0, r2, r3
 802274e:	4770      	bx	lr

08022750 <sin>:
 8022750:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022752:	ec53 2b10 	vmov	r2, r3, d0
 8022756:	4826      	ldr	r0, [pc, #152]	@ (80227f0 <sin+0xa0>)
 8022758:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 802275c:	4281      	cmp	r1, r0
 802275e:	d807      	bhi.n	8022770 <sin+0x20>
 8022760:	ed9f 1b21 	vldr	d1, [pc, #132]	@ 80227e8 <sin+0x98>
 8022764:	2000      	movs	r0, #0
 8022766:	b005      	add	sp, #20
 8022768:	f85d eb04 	ldr.w	lr, [sp], #4
 802276c:	f000 ba70 	b.w	8022c50 <__kernel_sin>
 8022770:	4820      	ldr	r0, [pc, #128]	@ (80227f4 <sin+0xa4>)
 8022772:	4281      	cmp	r1, r0
 8022774:	d908      	bls.n	8022788 <sin+0x38>
 8022776:	4610      	mov	r0, r2
 8022778:	4619      	mov	r1, r3
 802277a:	f7dd fd85 	bl	8000288 <__aeabi_dsub>
 802277e:	ec41 0b10 	vmov	d0, r0, r1
 8022782:	b005      	add	sp, #20
 8022784:	f85d fb04 	ldr.w	pc, [sp], #4
 8022788:	4668      	mov	r0, sp
 802278a:	f001 f929 	bl	80239e0 <__ieee754_rem_pio2>
 802278e:	f000 0003 	and.w	r0, r0, #3
 8022792:	2801      	cmp	r0, #1
 8022794:	d00c      	beq.n	80227b0 <sin+0x60>
 8022796:	2802      	cmp	r0, #2
 8022798:	d011      	beq.n	80227be <sin+0x6e>
 802279a:	b9e8      	cbnz	r0, 80227d8 <sin+0x88>
 802279c:	ed9d 1b02 	vldr	d1, [sp, #8]
 80227a0:	ed9d 0b00 	vldr	d0, [sp]
 80227a4:	2001      	movs	r0, #1
 80227a6:	f000 fa53 	bl	8022c50 <__kernel_sin>
 80227aa:	ec51 0b10 	vmov	r0, r1, d0
 80227ae:	e7e6      	b.n	802277e <sin+0x2e>
 80227b0:	ed9d 1b02 	vldr	d1, [sp, #8]
 80227b4:	ed9d 0b00 	vldr	d0, [sp]
 80227b8:	f000 f982 	bl	8022ac0 <__kernel_cos>
 80227bc:	e7f5      	b.n	80227aa <sin+0x5a>
 80227be:	ed9d 1b02 	vldr	d1, [sp, #8]
 80227c2:	ed9d 0b00 	vldr	d0, [sp]
 80227c6:	2001      	movs	r0, #1
 80227c8:	f000 fa42 	bl	8022c50 <__kernel_sin>
 80227cc:	ec53 2b10 	vmov	r2, r3, d0
 80227d0:	4610      	mov	r0, r2
 80227d2:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 80227d6:	e7d2      	b.n	802277e <sin+0x2e>
 80227d8:	ed9d 1b02 	vldr	d1, [sp, #8]
 80227dc:	ed9d 0b00 	vldr	d0, [sp]
 80227e0:	f000 f96e 	bl	8022ac0 <__kernel_cos>
 80227e4:	e7f2      	b.n	80227cc <sin+0x7c>
 80227e6:	bf00      	nop
	...
 80227f0:	3fe921fb 	.word	0x3fe921fb
 80227f4:	7fefffff 	.word	0x7fefffff

080227f8 <finite>:
 80227f8:	b082      	sub	sp, #8
 80227fa:	ed8d 0b00 	vstr	d0, [sp]
 80227fe:	9801      	ldr	r0, [sp, #4]
 8022800:	f040 4000 	orr.w	r0, r0, #2147483648	@ 0x80000000
 8022804:	f500 1080 	add.w	r0, r0, #1048576	@ 0x100000
 8022808:	0fc0      	lsrs	r0, r0, #31
 802280a:	b002      	add	sp, #8
 802280c:	4770      	bx	lr
	...

08022810 <__ieee754_sqrt>:
 8022810:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022814:	4a68      	ldr	r2, [pc, #416]	@ (80229b8 <__ieee754_sqrt+0x1a8>)
 8022816:	ec55 4b10 	vmov	r4, r5, d0
 802281a:	43aa      	bics	r2, r5
 802281c:	462b      	mov	r3, r5
 802281e:	4621      	mov	r1, r4
 8022820:	d110      	bne.n	8022844 <__ieee754_sqrt+0x34>
 8022822:	4622      	mov	r2, r4
 8022824:	4620      	mov	r0, r4
 8022826:	4629      	mov	r1, r5
 8022828:	f7dd fee6 	bl	80005f8 <__aeabi_dmul>
 802282c:	4602      	mov	r2, r0
 802282e:	460b      	mov	r3, r1
 8022830:	4620      	mov	r0, r4
 8022832:	4629      	mov	r1, r5
 8022834:	f7dd fd2a 	bl	800028c <__adddf3>
 8022838:	4604      	mov	r4, r0
 802283a:	460d      	mov	r5, r1
 802283c:	ec45 4b10 	vmov	d0, r4, r5
 8022840:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022844:	2d00      	cmp	r5, #0
 8022846:	dc0e      	bgt.n	8022866 <__ieee754_sqrt+0x56>
 8022848:	f025 4200 	bic.w	r2, r5, #2147483648	@ 0x80000000
 802284c:	4322      	orrs	r2, r4
 802284e:	d0f5      	beq.n	802283c <__ieee754_sqrt+0x2c>
 8022850:	b19d      	cbz	r5, 802287a <__ieee754_sqrt+0x6a>
 8022852:	4622      	mov	r2, r4
 8022854:	4620      	mov	r0, r4
 8022856:	4629      	mov	r1, r5
 8022858:	f7dd fd16 	bl	8000288 <__aeabi_dsub>
 802285c:	4602      	mov	r2, r0
 802285e:	460b      	mov	r3, r1
 8022860:	f7dd fff4 	bl	800084c <__aeabi_ddiv>
 8022864:	e7e8      	b.n	8022838 <__ieee754_sqrt+0x28>
 8022866:	152a      	asrs	r2, r5, #20
 8022868:	d115      	bne.n	8022896 <__ieee754_sqrt+0x86>
 802286a:	2000      	movs	r0, #0
 802286c:	e009      	b.n	8022882 <__ieee754_sqrt+0x72>
 802286e:	0acb      	lsrs	r3, r1, #11
 8022870:	3a15      	subs	r2, #21
 8022872:	0549      	lsls	r1, r1, #21
 8022874:	2b00      	cmp	r3, #0
 8022876:	d0fa      	beq.n	802286e <__ieee754_sqrt+0x5e>
 8022878:	e7f7      	b.n	802286a <__ieee754_sqrt+0x5a>
 802287a:	462a      	mov	r2, r5
 802287c:	e7fa      	b.n	8022874 <__ieee754_sqrt+0x64>
 802287e:	005b      	lsls	r3, r3, #1
 8022880:	3001      	adds	r0, #1
 8022882:	02dc      	lsls	r4, r3, #11
 8022884:	d5fb      	bpl.n	802287e <__ieee754_sqrt+0x6e>
 8022886:	1e44      	subs	r4, r0, #1
 8022888:	1b12      	subs	r2, r2, r4
 802288a:	f1c0 0420 	rsb	r4, r0, #32
 802288e:	fa21 f404 	lsr.w	r4, r1, r4
 8022892:	4323      	orrs	r3, r4
 8022894:	4081      	lsls	r1, r0
 8022896:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802289a:	f2a2 35ff 	subw	r5, r2, #1023	@ 0x3ff
 802289e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80228a2:	07d2      	lsls	r2, r2, #31
 80228a4:	bf5c      	itt	pl
 80228a6:	005b      	lslpl	r3, r3, #1
 80228a8:	eb03 73d1 	addpl.w	r3, r3, r1, lsr #31
 80228ac:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80228b0:	bf58      	it	pl
 80228b2:	0049      	lslpl	r1, r1, #1
 80228b4:	2600      	movs	r6, #0
 80228b6:	eb03 73d1 	add.w	r3, r3, r1, lsr #31
 80228ba:	106d      	asrs	r5, r5, #1
 80228bc:	0049      	lsls	r1, r1, #1
 80228be:	2016      	movs	r0, #22
 80228c0:	4632      	mov	r2, r6
 80228c2:	f44f 1400 	mov.w	r4, #2097152	@ 0x200000
 80228c6:	1917      	adds	r7, r2, r4
 80228c8:	429f      	cmp	r7, r3
 80228ca:	bfde      	ittt	le
 80228cc:	193a      	addle	r2, r7, r4
 80228ce:	1bdb      	suble	r3, r3, r7
 80228d0:	1936      	addle	r6, r6, r4
 80228d2:	0fcf      	lsrs	r7, r1, #31
 80228d4:	3801      	subs	r0, #1
 80228d6:	eb07 0343 	add.w	r3, r7, r3, lsl #1
 80228da:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80228de:	ea4f 0454 	mov.w	r4, r4, lsr #1
 80228e2:	d1f0      	bne.n	80228c6 <__ieee754_sqrt+0xb6>
 80228e4:	4604      	mov	r4, r0
 80228e6:	2720      	movs	r7, #32
 80228e8:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80228ec:	429a      	cmp	r2, r3
 80228ee:	eb00 0e0c 	add.w	lr, r0, ip
 80228f2:	db02      	blt.n	80228fa <__ieee754_sqrt+0xea>
 80228f4:	d113      	bne.n	802291e <__ieee754_sqrt+0x10e>
 80228f6:	458e      	cmp	lr, r1
 80228f8:	d811      	bhi.n	802291e <__ieee754_sqrt+0x10e>
 80228fa:	f1be 0f00 	cmp.w	lr, #0
 80228fe:	eb0e 000c 	add.w	r0, lr, ip
 8022902:	da42      	bge.n	802298a <__ieee754_sqrt+0x17a>
 8022904:	2800      	cmp	r0, #0
 8022906:	db40      	blt.n	802298a <__ieee754_sqrt+0x17a>
 8022908:	f102 0801 	add.w	r8, r2, #1
 802290c:	1a9b      	subs	r3, r3, r2
 802290e:	458e      	cmp	lr, r1
 8022910:	bf88      	it	hi
 8022912:	f103 33ff 	addhi.w	r3, r3, #4294967295
 8022916:	eba1 010e 	sub.w	r1, r1, lr
 802291a:	4464      	add	r4, ip
 802291c:	4642      	mov	r2, r8
 802291e:	ea4f 7ed1 	mov.w	lr, r1, lsr #31
 8022922:	3f01      	subs	r7, #1
 8022924:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8022928:	ea4f 0141 	mov.w	r1, r1, lsl #1
 802292c:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8022930:	d1dc      	bne.n	80228ec <__ieee754_sqrt+0xdc>
 8022932:	4319      	orrs	r1, r3
 8022934:	d01b      	beq.n	802296e <__ieee754_sqrt+0x15e>
 8022936:	f8df a084 	ldr.w	sl, [pc, #132]	@ 80229bc <__ieee754_sqrt+0x1ac>
 802293a:	f8df b084 	ldr.w	fp, [pc, #132]	@ 80229c0 <__ieee754_sqrt+0x1b0>
 802293e:	e9da 0100 	ldrd	r0, r1, [sl]
 8022942:	e9db 2300 	ldrd	r2, r3, [fp]
 8022946:	f7dd fc9f 	bl	8000288 <__aeabi_dsub>
 802294a:	e9da 8900 	ldrd	r8, r9, [sl]
 802294e:	4602      	mov	r2, r0
 8022950:	460b      	mov	r3, r1
 8022952:	4640      	mov	r0, r8
 8022954:	4649      	mov	r1, r9
 8022956:	f7de f8cb 	bl	8000af0 <__aeabi_dcmple>
 802295a:	b140      	cbz	r0, 802296e <__ieee754_sqrt+0x15e>
 802295c:	f1b4 3fff 	cmp.w	r4, #4294967295
 8022960:	e9da 0100 	ldrd	r0, r1, [sl]
 8022964:	e9db 2300 	ldrd	r2, r3, [fp]
 8022968:	d111      	bne.n	802298e <__ieee754_sqrt+0x17e>
 802296a:	3601      	adds	r6, #1
 802296c:	463c      	mov	r4, r7
 802296e:	1072      	asrs	r2, r6, #1
 8022970:	0863      	lsrs	r3, r4, #1
 8022972:	07f1      	lsls	r1, r6, #31
 8022974:	f102 527f 	add.w	r2, r2, #1069547520	@ 0x3fc00000
 8022978:	f502 1200 	add.w	r2, r2, #2097152	@ 0x200000
 802297c:	bf48      	it	mi
 802297e:	f043 4300 	orrmi.w	r3, r3, #2147483648	@ 0x80000000
 8022982:	eb02 5105 	add.w	r1, r2, r5, lsl #20
 8022986:	4618      	mov	r0, r3
 8022988:	e756      	b.n	8022838 <__ieee754_sqrt+0x28>
 802298a:	4690      	mov	r8, r2
 802298c:	e7be      	b.n	802290c <__ieee754_sqrt+0xfc>
 802298e:	f7dd fc7d 	bl	800028c <__adddf3>
 8022992:	e9da 8900 	ldrd	r8, r9, [sl]
 8022996:	4602      	mov	r2, r0
 8022998:	460b      	mov	r3, r1
 802299a:	4640      	mov	r0, r8
 802299c:	4649      	mov	r1, r9
 802299e:	f7de f89d 	bl	8000adc <__aeabi_dcmplt>
 80229a2:	b120      	cbz	r0, 80229ae <__ieee754_sqrt+0x19e>
 80229a4:	1ca0      	adds	r0, r4, #2
 80229a6:	bf08      	it	eq
 80229a8:	3601      	addeq	r6, #1
 80229aa:	3402      	adds	r4, #2
 80229ac:	e7df      	b.n	802296e <__ieee754_sqrt+0x15e>
 80229ae:	1c63      	adds	r3, r4, #1
 80229b0:	f023 0401 	bic.w	r4, r3, #1
 80229b4:	e7db      	b.n	802296e <__ieee754_sqrt+0x15e>
 80229b6:	bf00      	nop
 80229b8:	7ff00000 	.word	0x7ff00000
 80229bc:	20000800 	.word	0x20000800
 80229c0:	200007f8 	.word	0x200007f8
 80229c4:	00000000 	.word	0x00000000

080229c8 <floor>:
 80229c8:	ec51 0b10 	vmov	r0, r1, d0
 80229cc:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80229d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80229d4:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 80229d8:	2e13      	cmp	r6, #19
 80229da:	460c      	mov	r4, r1
 80229dc:	4605      	mov	r5, r0
 80229de:	4680      	mov	r8, r0
 80229e0:	dc34      	bgt.n	8022a4c <floor+0x84>
 80229e2:	2e00      	cmp	r6, #0
 80229e4:	da17      	bge.n	8022a16 <floor+0x4e>
 80229e6:	a332      	add	r3, pc, #200	@ (adr r3, 8022ab0 <floor+0xe8>)
 80229e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80229ec:	f7dd fc4e 	bl	800028c <__adddf3>
 80229f0:	2200      	movs	r2, #0
 80229f2:	2300      	movs	r3, #0
 80229f4:	f7de f890 	bl	8000b18 <__aeabi_dcmpgt>
 80229f8:	b150      	cbz	r0, 8022a10 <floor+0x48>
 80229fa:	2c00      	cmp	r4, #0
 80229fc:	da55      	bge.n	8022aaa <floor+0xe2>
 80229fe:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8022a02:	432c      	orrs	r4, r5
 8022a04:	2500      	movs	r5, #0
 8022a06:	42ac      	cmp	r4, r5
 8022a08:	4c2b      	ldr	r4, [pc, #172]	@ (8022ab8 <floor+0xf0>)
 8022a0a:	bf08      	it	eq
 8022a0c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8022a10:	4621      	mov	r1, r4
 8022a12:	4628      	mov	r0, r5
 8022a14:	e023      	b.n	8022a5e <floor+0x96>
 8022a16:	4f29      	ldr	r7, [pc, #164]	@ (8022abc <floor+0xf4>)
 8022a18:	4137      	asrs	r7, r6
 8022a1a:	ea01 0307 	and.w	r3, r1, r7
 8022a1e:	4303      	orrs	r3, r0
 8022a20:	d01d      	beq.n	8022a5e <floor+0x96>
 8022a22:	a323      	add	r3, pc, #140	@ (adr r3, 8022ab0 <floor+0xe8>)
 8022a24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022a28:	f7dd fc30 	bl	800028c <__adddf3>
 8022a2c:	2200      	movs	r2, #0
 8022a2e:	2300      	movs	r3, #0
 8022a30:	f7de f872 	bl	8000b18 <__aeabi_dcmpgt>
 8022a34:	2800      	cmp	r0, #0
 8022a36:	d0eb      	beq.n	8022a10 <floor+0x48>
 8022a38:	2c00      	cmp	r4, #0
 8022a3a:	bfbe      	ittt	lt
 8022a3c:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8022a40:	4133      	asrlt	r3, r6
 8022a42:	18e4      	addlt	r4, r4, r3
 8022a44:	ea24 0407 	bic.w	r4, r4, r7
 8022a48:	2500      	movs	r5, #0
 8022a4a:	e7e1      	b.n	8022a10 <floor+0x48>
 8022a4c:	2e33      	cmp	r6, #51	@ 0x33
 8022a4e:	dd0a      	ble.n	8022a66 <floor+0x9e>
 8022a50:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8022a54:	d103      	bne.n	8022a5e <floor+0x96>
 8022a56:	4602      	mov	r2, r0
 8022a58:	460b      	mov	r3, r1
 8022a5a:	f7dd fc17 	bl	800028c <__adddf3>
 8022a5e:	ec41 0b10 	vmov	d0, r0, r1
 8022a62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022a66:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8022a6a:	f04f 37ff 	mov.w	r7, #4294967295
 8022a6e:	40df      	lsrs	r7, r3
 8022a70:	4207      	tst	r7, r0
 8022a72:	d0f4      	beq.n	8022a5e <floor+0x96>
 8022a74:	a30e      	add	r3, pc, #56	@ (adr r3, 8022ab0 <floor+0xe8>)
 8022a76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022a7a:	f7dd fc07 	bl	800028c <__adddf3>
 8022a7e:	2200      	movs	r2, #0
 8022a80:	2300      	movs	r3, #0
 8022a82:	f7de f849 	bl	8000b18 <__aeabi_dcmpgt>
 8022a86:	2800      	cmp	r0, #0
 8022a88:	d0c2      	beq.n	8022a10 <floor+0x48>
 8022a8a:	2c00      	cmp	r4, #0
 8022a8c:	da0a      	bge.n	8022aa4 <floor+0xdc>
 8022a8e:	2e14      	cmp	r6, #20
 8022a90:	d101      	bne.n	8022a96 <floor+0xce>
 8022a92:	3401      	adds	r4, #1
 8022a94:	e006      	b.n	8022aa4 <floor+0xdc>
 8022a96:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8022a9a:	2301      	movs	r3, #1
 8022a9c:	40b3      	lsls	r3, r6
 8022a9e:	441d      	add	r5, r3
 8022aa0:	4545      	cmp	r5, r8
 8022aa2:	d3f6      	bcc.n	8022a92 <floor+0xca>
 8022aa4:	ea25 0507 	bic.w	r5, r5, r7
 8022aa8:	e7b2      	b.n	8022a10 <floor+0x48>
 8022aaa:	2500      	movs	r5, #0
 8022aac:	462c      	mov	r4, r5
 8022aae:	e7af      	b.n	8022a10 <floor+0x48>
 8022ab0:	8800759c 	.word	0x8800759c
 8022ab4:	7e37e43c 	.word	0x7e37e43c
 8022ab8:	bff00000 	.word	0xbff00000
 8022abc:	000fffff 	.word	0x000fffff

08022ac0 <__kernel_cos>:
 8022ac0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ac4:	ec57 6b10 	vmov	r6, r7, d0
 8022ac8:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8022acc:	f1b8 5f79 	cmp.w	r8, #1044381696	@ 0x3e400000
 8022ad0:	ed8d 1b00 	vstr	d1, [sp]
 8022ad4:	d206      	bcs.n	8022ae4 <__kernel_cos+0x24>
 8022ad6:	4630      	mov	r0, r6
 8022ad8:	4639      	mov	r1, r7
 8022ada:	f7de f83d 	bl	8000b58 <__aeabi_d2iz>
 8022ade:	2800      	cmp	r0, #0
 8022ae0:	f000 8088 	beq.w	8022bf4 <__kernel_cos+0x134>
 8022ae4:	4632      	mov	r2, r6
 8022ae6:	463b      	mov	r3, r7
 8022ae8:	4630      	mov	r0, r6
 8022aea:	4639      	mov	r1, r7
 8022aec:	f7dd fd84 	bl	80005f8 <__aeabi_dmul>
 8022af0:	4b51      	ldr	r3, [pc, #324]	@ (8022c38 <__kernel_cos+0x178>)
 8022af2:	2200      	movs	r2, #0
 8022af4:	4604      	mov	r4, r0
 8022af6:	460d      	mov	r5, r1
 8022af8:	f7dd fd7e 	bl	80005f8 <__aeabi_dmul>
 8022afc:	a340      	add	r3, pc, #256	@ (adr r3, 8022c00 <__kernel_cos+0x140>)
 8022afe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b02:	4682      	mov	sl, r0
 8022b04:	468b      	mov	fp, r1
 8022b06:	4620      	mov	r0, r4
 8022b08:	4629      	mov	r1, r5
 8022b0a:	f7dd fd75 	bl	80005f8 <__aeabi_dmul>
 8022b0e:	a33e      	add	r3, pc, #248	@ (adr r3, 8022c08 <__kernel_cos+0x148>)
 8022b10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b14:	f7dd fbba 	bl	800028c <__adddf3>
 8022b18:	4622      	mov	r2, r4
 8022b1a:	462b      	mov	r3, r5
 8022b1c:	f7dd fd6c 	bl	80005f8 <__aeabi_dmul>
 8022b20:	a33b      	add	r3, pc, #236	@ (adr r3, 8022c10 <__kernel_cos+0x150>)
 8022b22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b26:	f7dd fbaf 	bl	8000288 <__aeabi_dsub>
 8022b2a:	4622      	mov	r2, r4
 8022b2c:	462b      	mov	r3, r5
 8022b2e:	f7dd fd63 	bl	80005f8 <__aeabi_dmul>
 8022b32:	a339      	add	r3, pc, #228	@ (adr r3, 8022c18 <__kernel_cos+0x158>)
 8022b34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b38:	f7dd fba8 	bl	800028c <__adddf3>
 8022b3c:	4622      	mov	r2, r4
 8022b3e:	462b      	mov	r3, r5
 8022b40:	f7dd fd5a 	bl	80005f8 <__aeabi_dmul>
 8022b44:	a336      	add	r3, pc, #216	@ (adr r3, 8022c20 <__kernel_cos+0x160>)
 8022b46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b4a:	f7dd fb9d 	bl	8000288 <__aeabi_dsub>
 8022b4e:	4622      	mov	r2, r4
 8022b50:	462b      	mov	r3, r5
 8022b52:	f7dd fd51 	bl	80005f8 <__aeabi_dmul>
 8022b56:	a334      	add	r3, pc, #208	@ (adr r3, 8022c28 <__kernel_cos+0x168>)
 8022b58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022b5c:	f7dd fb96 	bl	800028c <__adddf3>
 8022b60:	4622      	mov	r2, r4
 8022b62:	462b      	mov	r3, r5
 8022b64:	f7dd fd48 	bl	80005f8 <__aeabi_dmul>
 8022b68:	4622      	mov	r2, r4
 8022b6a:	462b      	mov	r3, r5
 8022b6c:	f7dd fd44 	bl	80005f8 <__aeabi_dmul>
 8022b70:	e9dd 2300 	ldrd	r2, r3, [sp]
 8022b74:	4604      	mov	r4, r0
 8022b76:	460d      	mov	r5, r1
 8022b78:	4630      	mov	r0, r6
 8022b7a:	4639      	mov	r1, r7
 8022b7c:	f7dd fd3c 	bl	80005f8 <__aeabi_dmul>
 8022b80:	460b      	mov	r3, r1
 8022b82:	4602      	mov	r2, r0
 8022b84:	4629      	mov	r1, r5
 8022b86:	4620      	mov	r0, r4
 8022b88:	f7dd fb7e 	bl	8000288 <__aeabi_dsub>
 8022b8c:	4b2b      	ldr	r3, [pc, #172]	@ (8022c3c <__kernel_cos+0x17c>)
 8022b8e:	4598      	cmp	r8, r3
 8022b90:	4606      	mov	r6, r0
 8022b92:	460f      	mov	r7, r1
 8022b94:	d810      	bhi.n	8022bb8 <__kernel_cos+0xf8>
 8022b96:	4602      	mov	r2, r0
 8022b98:	460b      	mov	r3, r1
 8022b9a:	4650      	mov	r0, sl
 8022b9c:	4659      	mov	r1, fp
 8022b9e:	f7dd fb73 	bl	8000288 <__aeabi_dsub>
 8022ba2:	460b      	mov	r3, r1
 8022ba4:	4926      	ldr	r1, [pc, #152]	@ (8022c40 <__kernel_cos+0x180>)
 8022ba6:	4602      	mov	r2, r0
 8022ba8:	2000      	movs	r0, #0
 8022baa:	f7dd fb6d 	bl	8000288 <__aeabi_dsub>
 8022bae:	ec41 0b10 	vmov	d0, r0, r1
 8022bb2:	b003      	add	sp, #12
 8022bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022bb8:	4b22      	ldr	r3, [pc, #136]	@ (8022c44 <__kernel_cos+0x184>)
 8022bba:	4921      	ldr	r1, [pc, #132]	@ (8022c40 <__kernel_cos+0x180>)
 8022bbc:	4598      	cmp	r8, r3
 8022bbe:	bf8c      	ite	hi
 8022bc0:	4d21      	ldrhi	r5, [pc, #132]	@ (8022c48 <__kernel_cos+0x188>)
 8022bc2:	f5a8 1500 	subls.w	r5, r8, #2097152	@ 0x200000
 8022bc6:	2400      	movs	r4, #0
 8022bc8:	4622      	mov	r2, r4
 8022bca:	462b      	mov	r3, r5
 8022bcc:	2000      	movs	r0, #0
 8022bce:	f7dd fb5b 	bl	8000288 <__aeabi_dsub>
 8022bd2:	4622      	mov	r2, r4
 8022bd4:	4680      	mov	r8, r0
 8022bd6:	4689      	mov	r9, r1
 8022bd8:	462b      	mov	r3, r5
 8022bda:	4650      	mov	r0, sl
 8022bdc:	4659      	mov	r1, fp
 8022bde:	f7dd fb53 	bl	8000288 <__aeabi_dsub>
 8022be2:	4632      	mov	r2, r6
 8022be4:	463b      	mov	r3, r7
 8022be6:	f7dd fb4f 	bl	8000288 <__aeabi_dsub>
 8022bea:	4602      	mov	r2, r0
 8022bec:	460b      	mov	r3, r1
 8022bee:	4640      	mov	r0, r8
 8022bf0:	4649      	mov	r1, r9
 8022bf2:	e7da      	b.n	8022baa <__kernel_cos+0xea>
 8022bf4:	ed9f 0b0e 	vldr	d0, [pc, #56]	@ 8022c30 <__kernel_cos+0x170>
 8022bf8:	e7db      	b.n	8022bb2 <__kernel_cos+0xf2>
 8022bfa:	bf00      	nop
 8022bfc:	f3af 8000 	nop.w
 8022c00:	be8838d4 	.word	0xbe8838d4
 8022c04:	bda8fae9 	.word	0xbda8fae9
 8022c08:	bdb4b1c4 	.word	0xbdb4b1c4
 8022c0c:	3e21ee9e 	.word	0x3e21ee9e
 8022c10:	809c52ad 	.word	0x809c52ad
 8022c14:	3e927e4f 	.word	0x3e927e4f
 8022c18:	19cb1590 	.word	0x19cb1590
 8022c1c:	3efa01a0 	.word	0x3efa01a0
 8022c20:	16c15177 	.word	0x16c15177
 8022c24:	3f56c16c 	.word	0x3f56c16c
 8022c28:	5555554c 	.word	0x5555554c
 8022c2c:	3fa55555 	.word	0x3fa55555
 8022c30:	00000000 	.word	0x00000000
 8022c34:	3ff00000 	.word	0x3ff00000
 8022c38:	3fe00000 	.word	0x3fe00000
 8022c3c:	3fd33332 	.word	0x3fd33332
 8022c40:	3ff00000 	.word	0x3ff00000
 8022c44:	3fe90000 	.word	0x3fe90000
 8022c48:	3fd20000 	.word	0x3fd20000
 8022c4c:	00000000 	.word	0x00000000

08022c50 <__kernel_sin>:
 8022c50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c54:	ec55 4b10 	vmov	r4, r5, d0
 8022c58:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8022c5c:	b085      	sub	sp, #20
 8022c5e:	f1b3 5f79 	cmp.w	r3, #1044381696	@ 0x3e400000
 8022c62:	ed8d 1b02 	vstr	d1, [sp, #8]
 8022c66:	4680      	mov	r8, r0
 8022c68:	d205      	bcs.n	8022c76 <__kernel_sin+0x26>
 8022c6a:	4620      	mov	r0, r4
 8022c6c:	4629      	mov	r1, r5
 8022c6e:	f7dd ff73 	bl	8000b58 <__aeabi_d2iz>
 8022c72:	2800      	cmp	r0, #0
 8022c74:	d052      	beq.n	8022d1c <__kernel_sin+0xcc>
 8022c76:	4622      	mov	r2, r4
 8022c78:	462b      	mov	r3, r5
 8022c7a:	4620      	mov	r0, r4
 8022c7c:	4629      	mov	r1, r5
 8022c7e:	f7dd fcbb 	bl	80005f8 <__aeabi_dmul>
 8022c82:	4682      	mov	sl, r0
 8022c84:	468b      	mov	fp, r1
 8022c86:	4602      	mov	r2, r0
 8022c88:	460b      	mov	r3, r1
 8022c8a:	4620      	mov	r0, r4
 8022c8c:	4629      	mov	r1, r5
 8022c8e:	f7dd fcb3 	bl	80005f8 <__aeabi_dmul>
 8022c92:	a342      	add	r3, pc, #264	@ (adr r3, 8022d9c <__kernel_sin+0x14c>)
 8022c94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022c98:	e9cd 0100 	strd	r0, r1, [sp]
 8022c9c:	4650      	mov	r0, sl
 8022c9e:	4659      	mov	r1, fp
 8022ca0:	f7dd fcaa 	bl	80005f8 <__aeabi_dmul>
 8022ca4:	a33f      	add	r3, pc, #252	@ (adr r3, 8022da4 <__kernel_sin+0x154>)
 8022ca6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022caa:	f7dd faed 	bl	8000288 <__aeabi_dsub>
 8022cae:	4652      	mov	r2, sl
 8022cb0:	465b      	mov	r3, fp
 8022cb2:	f7dd fca1 	bl	80005f8 <__aeabi_dmul>
 8022cb6:	a33d      	add	r3, pc, #244	@ (adr r3, 8022dac <__kernel_sin+0x15c>)
 8022cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022cbc:	f7dd fae6 	bl	800028c <__adddf3>
 8022cc0:	4652      	mov	r2, sl
 8022cc2:	465b      	mov	r3, fp
 8022cc4:	f7dd fc98 	bl	80005f8 <__aeabi_dmul>
 8022cc8:	a33a      	add	r3, pc, #232	@ (adr r3, 8022db4 <__kernel_sin+0x164>)
 8022cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022cce:	f7dd fadb 	bl	8000288 <__aeabi_dsub>
 8022cd2:	4652      	mov	r2, sl
 8022cd4:	465b      	mov	r3, fp
 8022cd6:	f7dd fc8f 	bl	80005f8 <__aeabi_dmul>
 8022cda:	a338      	add	r3, pc, #224	@ (adr r3, 8022dbc <__kernel_sin+0x16c>)
 8022cdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022ce0:	f7dd fad4 	bl	800028c <__adddf3>
 8022ce4:	4606      	mov	r6, r0
 8022ce6:	460f      	mov	r7, r1
 8022ce8:	f1b8 0f00 	cmp.w	r8, #0
 8022cec:	d11b      	bne.n	8022d26 <__kernel_sin+0xd6>
 8022cee:	4602      	mov	r2, r0
 8022cf0:	460b      	mov	r3, r1
 8022cf2:	4650      	mov	r0, sl
 8022cf4:	4659      	mov	r1, fp
 8022cf6:	f7dd fc7f 	bl	80005f8 <__aeabi_dmul>
 8022cfa:	a325      	add	r3, pc, #148	@ (adr r3, 8022d90 <__kernel_sin+0x140>)
 8022cfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022d00:	f7dd fac2 	bl	8000288 <__aeabi_dsub>
 8022d04:	e9dd 2300 	ldrd	r2, r3, [sp]
 8022d08:	f7dd fc76 	bl	80005f8 <__aeabi_dmul>
 8022d0c:	4602      	mov	r2, r0
 8022d0e:	460b      	mov	r3, r1
 8022d10:	4620      	mov	r0, r4
 8022d12:	4629      	mov	r1, r5
 8022d14:	f7dd faba 	bl	800028c <__adddf3>
 8022d18:	4604      	mov	r4, r0
 8022d1a:	460d      	mov	r5, r1
 8022d1c:	ec45 4b10 	vmov	d0, r4, r5
 8022d20:	b005      	add	sp, #20
 8022d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d26:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8022d2a:	4b1b      	ldr	r3, [pc, #108]	@ (8022d98 <__kernel_sin+0x148>)
 8022d2c:	2200      	movs	r2, #0
 8022d2e:	f7dd fc63 	bl	80005f8 <__aeabi_dmul>
 8022d32:	4632      	mov	r2, r6
 8022d34:	4680      	mov	r8, r0
 8022d36:	4689      	mov	r9, r1
 8022d38:	463b      	mov	r3, r7
 8022d3a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8022d3e:	f7dd fc5b 	bl	80005f8 <__aeabi_dmul>
 8022d42:	4602      	mov	r2, r0
 8022d44:	460b      	mov	r3, r1
 8022d46:	4640      	mov	r0, r8
 8022d48:	4649      	mov	r1, r9
 8022d4a:	f7dd fa9d 	bl	8000288 <__aeabi_dsub>
 8022d4e:	4652      	mov	r2, sl
 8022d50:	465b      	mov	r3, fp
 8022d52:	f7dd fc51 	bl	80005f8 <__aeabi_dmul>
 8022d56:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8022d5a:	f7dd fa95 	bl	8000288 <__aeabi_dsub>
 8022d5e:	a30c      	add	r3, pc, #48	@ (adr r3, 8022d90 <__kernel_sin+0x140>)
 8022d60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022d64:	4606      	mov	r6, r0
 8022d66:	460f      	mov	r7, r1
 8022d68:	e9dd 0100 	ldrd	r0, r1, [sp]
 8022d6c:	f7dd fc44 	bl	80005f8 <__aeabi_dmul>
 8022d70:	4602      	mov	r2, r0
 8022d72:	460b      	mov	r3, r1
 8022d74:	4630      	mov	r0, r6
 8022d76:	4639      	mov	r1, r7
 8022d78:	f7dd fa88 	bl	800028c <__adddf3>
 8022d7c:	4602      	mov	r2, r0
 8022d7e:	460b      	mov	r3, r1
 8022d80:	4620      	mov	r0, r4
 8022d82:	4629      	mov	r1, r5
 8022d84:	f7dd fa80 	bl	8000288 <__aeabi_dsub>
 8022d88:	e7c6      	b.n	8022d18 <__kernel_sin+0xc8>
 8022d8a:	bf00      	nop
 8022d8c:	f3af 8000 	nop.w
 8022d90:	55555549 	.word	0x55555549
 8022d94:	3fc55555 	.word	0x3fc55555
 8022d98:	3fe00000 	.word	0x3fe00000
 8022d9c:	5acfd57c 	.word	0x5acfd57c
 8022da0:	3de5d93a 	.word	0x3de5d93a
 8022da4:	8a2b9ceb 	.word	0x8a2b9ceb
 8022da8:	3e5ae5e6 	.word	0x3e5ae5e6
 8022dac:	57b1fe7d 	.word	0x57b1fe7d
 8022db0:	3ec71de3 	.word	0x3ec71de3
 8022db4:	19c161d5 	.word	0x19c161d5
 8022db8:	3f2a01a0 	.word	0x3f2a01a0
 8022dbc:	1110f8a6 	.word	0x1110f8a6
 8022dc0:	3f811111 	.word	0x3f811111
 8022dc4:	00000000 	.word	0x00000000

08022dc8 <__ieee754_atan2>:
 8022dc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022dcc:	ec57 6b11 	vmov	r6, r7, d1
 8022dd0:	4273      	negs	r3, r6
 8022dd2:	f8df 817c 	ldr.w	r8, [pc, #380]	@ 8022f50 <__ieee754_atan2+0x188>
 8022dd6:	f027 4200 	bic.w	r2, r7, #2147483648	@ 0x80000000
 8022dda:	4333      	orrs	r3, r6
 8022ddc:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 8022de0:	4543      	cmp	r3, r8
 8022de2:	ec51 0b10 	vmov	r0, r1, d0
 8022de6:	4635      	mov	r5, r6
 8022de8:	d809      	bhi.n	8022dfe <__ieee754_atan2+0x36>
 8022dea:	4244      	negs	r4, r0
 8022dec:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8022df0:	4304      	orrs	r4, r0
 8022df2:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 8022df6:	4544      	cmp	r4, r8
 8022df8:	468e      	mov	lr, r1
 8022dfa:	4681      	mov	r9, r0
 8022dfc:	d907      	bls.n	8022e0e <__ieee754_atan2+0x46>
 8022dfe:	4632      	mov	r2, r6
 8022e00:	463b      	mov	r3, r7
 8022e02:	f7dd fa43 	bl	800028c <__adddf3>
 8022e06:	ec41 0b10 	vmov	d0, r0, r1
 8022e0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022e0e:	f107 4440 	add.w	r4, r7, #3221225472	@ 0xc0000000
 8022e12:	f504 1480 	add.w	r4, r4, #1048576	@ 0x100000
 8022e16:	4334      	orrs	r4, r6
 8022e18:	d103      	bne.n	8022e22 <__ieee754_atan2+0x5a>
 8022e1a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022e1e:	f7ff baa3 	b.w	8022368 <atan>
 8022e22:	17bc      	asrs	r4, r7, #30
 8022e24:	f004 0402 	and.w	r4, r4, #2
 8022e28:	ea53 0909 	orrs.w	r9, r3, r9
 8022e2c:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 8022e30:	d107      	bne.n	8022e42 <__ieee754_atan2+0x7a>
 8022e32:	2c02      	cmp	r4, #2
 8022e34:	d05f      	beq.n	8022ef6 <__ieee754_atan2+0x12e>
 8022e36:	2c03      	cmp	r4, #3
 8022e38:	d1e5      	bne.n	8022e06 <__ieee754_atan2+0x3e>
 8022e3a:	a141      	add	r1, pc, #260	@ (adr r1, 8022f40 <__ieee754_atan2+0x178>)
 8022e3c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022e40:	e7e1      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022e42:	4315      	orrs	r5, r2
 8022e44:	d106      	bne.n	8022e54 <__ieee754_atan2+0x8c>
 8022e46:	f1be 0f00 	cmp.w	lr, #0
 8022e4a:	da5f      	bge.n	8022f0c <__ieee754_atan2+0x144>
 8022e4c:	a13e      	add	r1, pc, #248	@ (adr r1, 8022f48 <__ieee754_atan2+0x180>)
 8022e4e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022e52:	e7d8      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022e54:	4542      	cmp	r2, r8
 8022e56:	d10f      	bne.n	8022e78 <__ieee754_atan2+0xb0>
 8022e58:	4293      	cmp	r3, r2
 8022e5a:	f104 34ff 	add.w	r4, r4, #4294967295
 8022e5e:	d107      	bne.n	8022e70 <__ieee754_atan2+0xa8>
 8022e60:	2c02      	cmp	r4, #2
 8022e62:	d84c      	bhi.n	8022efe <__ieee754_atan2+0x136>
 8022e64:	4b34      	ldr	r3, [pc, #208]	@ (8022f38 <__ieee754_atan2+0x170>)
 8022e66:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8022e6a:	e9d3 0100 	ldrd	r0, r1, [r3]
 8022e6e:	e7ca      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022e70:	2c02      	cmp	r4, #2
 8022e72:	d848      	bhi.n	8022f06 <__ieee754_atan2+0x13e>
 8022e74:	4b31      	ldr	r3, [pc, #196]	@ (8022f3c <__ieee754_atan2+0x174>)
 8022e76:	e7f6      	b.n	8022e66 <__ieee754_atan2+0x9e>
 8022e78:	4543      	cmp	r3, r8
 8022e7a:	d0e4      	beq.n	8022e46 <__ieee754_atan2+0x7e>
 8022e7c:	1a9b      	subs	r3, r3, r2
 8022e7e:	f1b3 7f74 	cmp.w	r3, #63963136	@ 0x3d00000
 8022e82:	ea4f 5223 	mov.w	r2, r3, asr #20
 8022e86:	da1e      	bge.n	8022ec6 <__ieee754_atan2+0xfe>
 8022e88:	2f00      	cmp	r7, #0
 8022e8a:	da01      	bge.n	8022e90 <__ieee754_atan2+0xc8>
 8022e8c:	323c      	adds	r2, #60	@ 0x3c
 8022e8e:	db1e      	blt.n	8022ece <__ieee754_atan2+0x106>
 8022e90:	4632      	mov	r2, r6
 8022e92:	463b      	mov	r3, r7
 8022e94:	f7dd fcda 	bl	800084c <__aeabi_ddiv>
 8022e98:	ec41 0b10 	vmov	d0, r0, r1
 8022e9c:	f7ff fc50 	bl	8022740 <fabs>
 8022ea0:	f7ff fa62 	bl	8022368 <atan>
 8022ea4:	ec51 0b10 	vmov	r0, r1, d0
 8022ea8:	2c01      	cmp	r4, #1
 8022eaa:	d013      	beq.n	8022ed4 <__ieee754_atan2+0x10c>
 8022eac:	2c02      	cmp	r4, #2
 8022eae:	d015      	beq.n	8022edc <__ieee754_atan2+0x114>
 8022eb0:	2c00      	cmp	r4, #0
 8022eb2:	d0a8      	beq.n	8022e06 <__ieee754_atan2+0x3e>
 8022eb4:	a318      	add	r3, pc, #96	@ (adr r3, 8022f18 <__ieee754_atan2+0x150>)
 8022eb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022eba:	f7dd f9e5 	bl	8000288 <__aeabi_dsub>
 8022ebe:	a318      	add	r3, pc, #96	@ (adr r3, 8022f20 <__ieee754_atan2+0x158>)
 8022ec0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022ec4:	e014      	b.n	8022ef0 <__ieee754_atan2+0x128>
 8022ec6:	a118      	add	r1, pc, #96	@ (adr r1, 8022f28 <__ieee754_atan2+0x160>)
 8022ec8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022ecc:	e7ec      	b.n	8022ea8 <__ieee754_atan2+0xe0>
 8022ece:	2000      	movs	r0, #0
 8022ed0:	2100      	movs	r1, #0
 8022ed2:	e7e9      	b.n	8022ea8 <__ieee754_atan2+0xe0>
 8022ed4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8022ed8:	4619      	mov	r1, r3
 8022eda:	e794      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022edc:	a30e      	add	r3, pc, #56	@ (adr r3, 8022f18 <__ieee754_atan2+0x150>)
 8022ede:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022ee2:	f7dd f9d1 	bl	8000288 <__aeabi_dsub>
 8022ee6:	4602      	mov	r2, r0
 8022ee8:	460b      	mov	r3, r1
 8022eea:	a10d      	add	r1, pc, #52	@ (adr r1, 8022f20 <__ieee754_atan2+0x158>)
 8022eec:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022ef0:	f7dd f9ca 	bl	8000288 <__aeabi_dsub>
 8022ef4:	e787      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022ef6:	a10a      	add	r1, pc, #40	@ (adr r1, 8022f20 <__ieee754_atan2+0x158>)
 8022ef8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022efc:	e783      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022efe:	a10c      	add	r1, pc, #48	@ (adr r1, 8022f30 <__ieee754_atan2+0x168>)
 8022f00:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022f04:	e77f      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022f06:	2000      	movs	r0, #0
 8022f08:	2100      	movs	r1, #0
 8022f0a:	e77c      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022f0c:	a106      	add	r1, pc, #24	@ (adr r1, 8022f28 <__ieee754_atan2+0x160>)
 8022f0e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8022f12:	e778      	b.n	8022e06 <__ieee754_atan2+0x3e>
 8022f14:	f3af 8000 	nop.w
 8022f18:	33145c07 	.word	0x33145c07
 8022f1c:	3ca1a626 	.word	0x3ca1a626
 8022f20:	54442d18 	.word	0x54442d18
 8022f24:	400921fb 	.word	0x400921fb
 8022f28:	54442d18 	.word	0x54442d18
 8022f2c:	3ff921fb 	.word	0x3ff921fb
 8022f30:	54442d18 	.word	0x54442d18
 8022f34:	3fe921fb 	.word	0x3fe921fb
 8022f38:	080251e0 	.word	0x080251e0
 8022f3c:	080251c8 	.word	0x080251c8
 8022f40:	54442d18 	.word	0x54442d18
 8022f44:	c00921fb 	.word	0xc00921fb
 8022f48:	54442d18 	.word	0x54442d18
 8022f4c:	bff921fb 	.word	0xbff921fb
 8022f50:	7ff00000 	.word	0x7ff00000
 8022f54:	00000000 	.word	0x00000000

08022f58 <__ieee754_pow>:
 8022f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f5c:	b091      	sub	sp, #68	@ 0x44
 8022f5e:	ed8d 1b00 	vstr	d1, [sp]
 8022f62:	e9dd 1900 	ldrd	r1, r9, [sp]
 8022f66:	f029 4a00 	bic.w	sl, r9, #2147483648	@ 0x80000000
 8022f6a:	ea5a 0001 	orrs.w	r0, sl, r1
 8022f6e:	ec57 6b10 	vmov	r6, r7, d0
 8022f72:	d113      	bne.n	8022f9c <__ieee754_pow+0x44>
 8022f74:	19b3      	adds	r3, r6, r6
 8022f76:	f487 2200 	eor.w	r2, r7, #524288	@ 0x80000
 8022f7a:	4152      	adcs	r2, r2
 8022f7c:	4298      	cmp	r0, r3
 8022f7e:	4b98      	ldr	r3, [pc, #608]	@ (80231e0 <__ieee754_pow+0x288>)
 8022f80:	4193      	sbcs	r3, r2
 8022f82:	f080 84ea 	bcs.w	802395a <__ieee754_pow+0xa02>
 8022f86:	e9dd 2300 	ldrd	r2, r3, [sp]
 8022f8a:	4630      	mov	r0, r6
 8022f8c:	4639      	mov	r1, r7
 8022f8e:	f7dd f97d 	bl	800028c <__adddf3>
 8022f92:	ec41 0b10 	vmov	d0, r0, r1
 8022f96:	b011      	add	sp, #68	@ 0x44
 8022f98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f9c:	4a91      	ldr	r2, [pc, #580]	@ (80231e4 <__ieee754_pow+0x28c>)
 8022f9e:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 8022fa2:	4590      	cmp	r8, r2
 8022fa4:	463d      	mov	r5, r7
 8022fa6:	4633      	mov	r3, r6
 8022fa8:	d806      	bhi.n	8022fb8 <__ieee754_pow+0x60>
 8022faa:	d101      	bne.n	8022fb0 <__ieee754_pow+0x58>
 8022fac:	2e00      	cmp	r6, #0
 8022fae:	d1ea      	bne.n	8022f86 <__ieee754_pow+0x2e>
 8022fb0:	4592      	cmp	sl, r2
 8022fb2:	d801      	bhi.n	8022fb8 <__ieee754_pow+0x60>
 8022fb4:	d10e      	bne.n	8022fd4 <__ieee754_pow+0x7c>
 8022fb6:	b169      	cbz	r1, 8022fd4 <__ieee754_pow+0x7c>
 8022fb8:	f105 4540 	add.w	r5, r5, #3221225472	@ 0xc0000000
 8022fbc:	f505 1580 	add.w	r5, r5, #1048576	@ 0x100000
 8022fc0:	431d      	orrs	r5, r3
 8022fc2:	d1e0      	bne.n	8022f86 <__ieee754_pow+0x2e>
 8022fc4:	e9dd 3200 	ldrd	r3, r2, [sp]
 8022fc8:	18db      	adds	r3, r3, r3
 8022fca:	f482 2200 	eor.w	r2, r2, #524288	@ 0x80000
 8022fce:	4152      	adcs	r2, r2
 8022fd0:	429d      	cmp	r5, r3
 8022fd2:	e7d4      	b.n	8022f7e <__ieee754_pow+0x26>
 8022fd4:	2d00      	cmp	r5, #0
 8022fd6:	46c3      	mov	fp, r8
 8022fd8:	da3a      	bge.n	8023050 <__ieee754_pow+0xf8>
 8022fda:	4a83      	ldr	r2, [pc, #524]	@ (80231e8 <__ieee754_pow+0x290>)
 8022fdc:	4592      	cmp	sl, r2
 8022fde:	d84d      	bhi.n	802307c <__ieee754_pow+0x124>
 8022fe0:	f1a2 7254 	sub.w	r2, r2, #55574528	@ 0x3500000
 8022fe4:	4592      	cmp	sl, r2
 8022fe6:	f240 84c7 	bls.w	8023978 <__ieee754_pow+0xa20>
 8022fea:	ea4f 522a 	mov.w	r2, sl, asr #20
 8022fee:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 8022ff2:	2a14      	cmp	r2, #20
 8022ff4:	dd0f      	ble.n	8023016 <__ieee754_pow+0xbe>
 8022ff6:	f1c2 0234 	rsb	r2, r2, #52	@ 0x34
 8022ffa:	fa21 f402 	lsr.w	r4, r1, r2
 8022ffe:	fa04 f202 	lsl.w	r2, r4, r2
 8023002:	428a      	cmp	r2, r1
 8023004:	f040 84b8 	bne.w	8023978 <__ieee754_pow+0xa20>
 8023008:	f004 0401 	and.w	r4, r4, #1
 802300c:	f1c4 0402 	rsb	r4, r4, #2
 8023010:	2900      	cmp	r1, #0
 8023012:	d158      	bne.n	80230c6 <__ieee754_pow+0x16e>
 8023014:	e00e      	b.n	8023034 <__ieee754_pow+0xdc>
 8023016:	2900      	cmp	r1, #0
 8023018:	d154      	bne.n	80230c4 <__ieee754_pow+0x16c>
 802301a:	f1c2 0214 	rsb	r2, r2, #20
 802301e:	fa4a f402 	asr.w	r4, sl, r2
 8023022:	fa04 f202 	lsl.w	r2, r4, r2
 8023026:	4552      	cmp	r2, sl
 8023028:	f040 84a3 	bne.w	8023972 <__ieee754_pow+0xa1a>
 802302c:	f004 0401 	and.w	r4, r4, #1
 8023030:	f1c4 0402 	rsb	r4, r4, #2
 8023034:	4a6d      	ldr	r2, [pc, #436]	@ (80231ec <__ieee754_pow+0x294>)
 8023036:	4592      	cmp	sl, r2
 8023038:	d12e      	bne.n	8023098 <__ieee754_pow+0x140>
 802303a:	f1b9 0f00 	cmp.w	r9, #0
 802303e:	f280 8494 	bge.w	802396a <__ieee754_pow+0xa12>
 8023042:	496a      	ldr	r1, [pc, #424]	@ (80231ec <__ieee754_pow+0x294>)
 8023044:	4632      	mov	r2, r6
 8023046:	463b      	mov	r3, r7
 8023048:	2000      	movs	r0, #0
 802304a:	f7dd fbff 	bl	800084c <__aeabi_ddiv>
 802304e:	e7a0      	b.n	8022f92 <__ieee754_pow+0x3a>
 8023050:	2400      	movs	r4, #0
 8023052:	bbc1      	cbnz	r1, 80230c6 <__ieee754_pow+0x16e>
 8023054:	4a63      	ldr	r2, [pc, #396]	@ (80231e4 <__ieee754_pow+0x28c>)
 8023056:	4592      	cmp	sl, r2
 8023058:	d1ec      	bne.n	8023034 <__ieee754_pow+0xdc>
 802305a:	f108 4240 	add.w	r2, r8, #3221225472	@ 0xc0000000
 802305e:	f502 1280 	add.w	r2, r2, #1048576	@ 0x100000
 8023062:	431a      	orrs	r2, r3
 8023064:	f000 8479 	beq.w	802395a <__ieee754_pow+0xa02>
 8023068:	4b61      	ldr	r3, [pc, #388]	@ (80231f0 <__ieee754_pow+0x298>)
 802306a:	4598      	cmp	r8, r3
 802306c:	d908      	bls.n	8023080 <__ieee754_pow+0x128>
 802306e:	f1b9 0f00 	cmp.w	r9, #0
 8023072:	f2c0 8476 	blt.w	8023962 <__ieee754_pow+0xa0a>
 8023076:	e9dd 0100 	ldrd	r0, r1, [sp]
 802307a:	e78a      	b.n	8022f92 <__ieee754_pow+0x3a>
 802307c:	2402      	movs	r4, #2
 802307e:	e7e8      	b.n	8023052 <__ieee754_pow+0xfa>
 8023080:	f1b9 0f00 	cmp.w	r9, #0
 8023084:	f04f 0000 	mov.w	r0, #0
 8023088:	f04f 0100 	mov.w	r1, #0
 802308c:	da81      	bge.n	8022f92 <__ieee754_pow+0x3a>
 802308e:	e9dd 0300 	ldrd	r0, r3, [sp]
 8023092:	f103 4100 	add.w	r1, r3, #2147483648	@ 0x80000000
 8023096:	e77c      	b.n	8022f92 <__ieee754_pow+0x3a>
 8023098:	f1b9 4f80 	cmp.w	r9, #1073741824	@ 0x40000000
 802309c:	d106      	bne.n	80230ac <__ieee754_pow+0x154>
 802309e:	4632      	mov	r2, r6
 80230a0:	463b      	mov	r3, r7
 80230a2:	4630      	mov	r0, r6
 80230a4:	4639      	mov	r1, r7
 80230a6:	f7dd faa7 	bl	80005f8 <__aeabi_dmul>
 80230aa:	e772      	b.n	8022f92 <__ieee754_pow+0x3a>
 80230ac:	4a51      	ldr	r2, [pc, #324]	@ (80231f4 <__ieee754_pow+0x29c>)
 80230ae:	4591      	cmp	r9, r2
 80230b0:	d109      	bne.n	80230c6 <__ieee754_pow+0x16e>
 80230b2:	2d00      	cmp	r5, #0
 80230b4:	db07      	blt.n	80230c6 <__ieee754_pow+0x16e>
 80230b6:	ec47 6b10 	vmov	d0, r6, r7
 80230ba:	b011      	add	sp, #68	@ 0x44
 80230bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230c0:	f7ff bba6 	b.w	8022810 <__ieee754_sqrt>
 80230c4:	2400      	movs	r4, #0
 80230c6:	ec47 6b10 	vmov	d0, r6, r7
 80230ca:	9302      	str	r3, [sp, #8]
 80230cc:	f7ff fb38 	bl	8022740 <fabs>
 80230d0:	9b02      	ldr	r3, [sp, #8]
 80230d2:	ec51 0b10 	vmov	r0, r1, d0
 80230d6:	bb53      	cbnz	r3, 802312e <__ieee754_pow+0x1d6>
 80230d8:	4b44      	ldr	r3, [pc, #272]	@ (80231ec <__ieee754_pow+0x294>)
 80230da:	f025 4240 	bic.w	r2, r5, #3221225472	@ 0xc0000000
 80230de:	429a      	cmp	r2, r3
 80230e0:	d002      	beq.n	80230e8 <__ieee754_pow+0x190>
 80230e2:	f1b8 0f00 	cmp.w	r8, #0
 80230e6:	d122      	bne.n	802312e <__ieee754_pow+0x1d6>
 80230e8:	f1b9 0f00 	cmp.w	r9, #0
 80230ec:	da05      	bge.n	80230fa <__ieee754_pow+0x1a2>
 80230ee:	4602      	mov	r2, r0
 80230f0:	460b      	mov	r3, r1
 80230f2:	2000      	movs	r0, #0
 80230f4:	493d      	ldr	r1, [pc, #244]	@ (80231ec <__ieee754_pow+0x294>)
 80230f6:	f7dd fba9 	bl	800084c <__aeabi_ddiv>
 80230fa:	2d00      	cmp	r5, #0
 80230fc:	f6bf af49 	bge.w	8022f92 <__ieee754_pow+0x3a>
 8023100:	f108 4840 	add.w	r8, r8, #3221225472	@ 0xc0000000
 8023104:	f508 1880 	add.w	r8, r8, #1048576	@ 0x100000
 8023108:	ea58 0804 	orrs.w	r8, r8, r4
 802310c:	d108      	bne.n	8023120 <__ieee754_pow+0x1c8>
 802310e:	4602      	mov	r2, r0
 8023110:	460b      	mov	r3, r1
 8023112:	4610      	mov	r0, r2
 8023114:	4619      	mov	r1, r3
 8023116:	f7dd f8b7 	bl	8000288 <__aeabi_dsub>
 802311a:	4602      	mov	r2, r0
 802311c:	460b      	mov	r3, r1
 802311e:	e794      	b.n	802304a <__ieee754_pow+0xf2>
 8023120:	2c01      	cmp	r4, #1
 8023122:	f47f af36 	bne.w	8022f92 <__ieee754_pow+0x3a>
 8023126:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 802312a:	4619      	mov	r1, r3
 802312c:	e731      	b.n	8022f92 <__ieee754_pow+0x3a>
 802312e:	0feb      	lsrs	r3, r5, #31
 8023130:	3b01      	subs	r3, #1
 8023132:	ea53 0204 	orrs.w	r2, r3, r4
 8023136:	d102      	bne.n	802313e <__ieee754_pow+0x1e6>
 8023138:	4632      	mov	r2, r6
 802313a:	463b      	mov	r3, r7
 802313c:	e7e9      	b.n	8023112 <__ieee754_pow+0x1ba>
 802313e:	3c01      	subs	r4, #1
 8023140:	431c      	orrs	r4, r3
 8023142:	d016      	beq.n	8023172 <__ieee754_pow+0x21a>
 8023144:	ed9f 7b22 	vldr	d7, [pc, #136]	@ 80231d0 <__ieee754_pow+0x278>
 8023148:	f1ba 4f84 	cmp.w	sl, #1107296256	@ 0x42000000
 802314c:	ed8d 7b02 	vstr	d7, [sp, #8]
 8023150:	f240 8112 	bls.w	8023378 <__ieee754_pow+0x420>
 8023154:	4b28      	ldr	r3, [pc, #160]	@ (80231f8 <__ieee754_pow+0x2a0>)
 8023156:	459a      	cmp	sl, r3
 8023158:	4b25      	ldr	r3, [pc, #148]	@ (80231f0 <__ieee754_pow+0x298>)
 802315a:	d916      	bls.n	802318a <__ieee754_pow+0x232>
 802315c:	4598      	cmp	r8, r3
 802315e:	d80b      	bhi.n	8023178 <__ieee754_pow+0x220>
 8023160:	f1b9 0f00 	cmp.w	r9, #0
 8023164:	da0b      	bge.n	802317e <__ieee754_pow+0x226>
 8023166:	2000      	movs	r0, #0
 8023168:	b011      	add	sp, #68	@ 0x44
 802316a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802316e:	f000 bee7 	b.w	8023f40 <__math_oflow>
 8023172:	ed9f 7b19 	vldr	d7, [pc, #100]	@ 80231d8 <__ieee754_pow+0x280>
 8023176:	e7e7      	b.n	8023148 <__ieee754_pow+0x1f0>
 8023178:	f1b9 0f00 	cmp.w	r9, #0
 802317c:	dcf3      	bgt.n	8023166 <__ieee754_pow+0x20e>
 802317e:	2000      	movs	r0, #0
 8023180:	b011      	add	sp, #68	@ 0x44
 8023182:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023186:	f000 bed3 	b.w	8023f30 <__math_uflow>
 802318a:	4598      	cmp	r8, r3
 802318c:	d20c      	bcs.n	80231a8 <__ieee754_pow+0x250>
 802318e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023192:	2200      	movs	r2, #0
 8023194:	2300      	movs	r3, #0
 8023196:	f7dd fca1 	bl	8000adc <__aeabi_dcmplt>
 802319a:	3800      	subs	r0, #0
 802319c:	bf18      	it	ne
 802319e:	2001      	movne	r0, #1
 80231a0:	f1b9 0f00 	cmp.w	r9, #0
 80231a4:	daec      	bge.n	8023180 <__ieee754_pow+0x228>
 80231a6:	e7df      	b.n	8023168 <__ieee754_pow+0x210>
 80231a8:	4b10      	ldr	r3, [pc, #64]	@ (80231ec <__ieee754_pow+0x294>)
 80231aa:	4598      	cmp	r8, r3
 80231ac:	f04f 0200 	mov.w	r2, #0
 80231b0:	d924      	bls.n	80231fc <__ieee754_pow+0x2a4>
 80231b2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80231b6:	2300      	movs	r3, #0
 80231b8:	f7dd fc90 	bl	8000adc <__aeabi_dcmplt>
 80231bc:	3800      	subs	r0, #0
 80231be:	bf18      	it	ne
 80231c0:	2001      	movne	r0, #1
 80231c2:	f1b9 0f00 	cmp.w	r9, #0
 80231c6:	dccf      	bgt.n	8023168 <__ieee754_pow+0x210>
 80231c8:	e7da      	b.n	8023180 <__ieee754_pow+0x228>
 80231ca:	bf00      	nop
 80231cc:	f3af 8000 	nop.w
 80231d0:	00000000 	.word	0x00000000
 80231d4:	3ff00000 	.word	0x3ff00000
 80231d8:	00000000 	.word	0x00000000
 80231dc:	bff00000 	.word	0xbff00000
 80231e0:	fff00000 	.word	0xfff00000
 80231e4:	7ff00000 	.word	0x7ff00000
 80231e8:	433fffff 	.word	0x433fffff
 80231ec:	3ff00000 	.word	0x3ff00000
 80231f0:	3fefffff 	.word	0x3fefffff
 80231f4:	3fe00000 	.word	0x3fe00000
 80231f8:	43f00000 	.word	0x43f00000
 80231fc:	4b5a      	ldr	r3, [pc, #360]	@ (8023368 <__ieee754_pow+0x410>)
 80231fe:	f7dd f843 	bl	8000288 <__aeabi_dsub>
 8023202:	a351      	add	r3, pc, #324	@ (adr r3, 8023348 <__ieee754_pow+0x3f0>)
 8023204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023208:	4604      	mov	r4, r0
 802320a:	460d      	mov	r5, r1
 802320c:	f7dd f9f4 	bl	80005f8 <__aeabi_dmul>
 8023210:	a34f      	add	r3, pc, #316	@ (adr r3, 8023350 <__ieee754_pow+0x3f8>)
 8023212:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023216:	4606      	mov	r6, r0
 8023218:	460f      	mov	r7, r1
 802321a:	4620      	mov	r0, r4
 802321c:	4629      	mov	r1, r5
 802321e:	f7dd f9eb 	bl	80005f8 <__aeabi_dmul>
 8023222:	4b52      	ldr	r3, [pc, #328]	@ (802336c <__ieee754_pow+0x414>)
 8023224:	4682      	mov	sl, r0
 8023226:	468b      	mov	fp, r1
 8023228:	2200      	movs	r2, #0
 802322a:	4620      	mov	r0, r4
 802322c:	4629      	mov	r1, r5
 802322e:	f7dd f9e3 	bl	80005f8 <__aeabi_dmul>
 8023232:	4602      	mov	r2, r0
 8023234:	460b      	mov	r3, r1
 8023236:	a148      	add	r1, pc, #288	@ (adr r1, 8023358 <__ieee754_pow+0x400>)
 8023238:	e9d1 0100 	ldrd	r0, r1, [r1]
 802323c:	f7dd f824 	bl	8000288 <__aeabi_dsub>
 8023240:	4622      	mov	r2, r4
 8023242:	462b      	mov	r3, r5
 8023244:	f7dd f9d8 	bl	80005f8 <__aeabi_dmul>
 8023248:	4602      	mov	r2, r0
 802324a:	460b      	mov	r3, r1
 802324c:	2000      	movs	r0, #0
 802324e:	4948      	ldr	r1, [pc, #288]	@ (8023370 <__ieee754_pow+0x418>)
 8023250:	f7dd f81a 	bl	8000288 <__aeabi_dsub>
 8023254:	4622      	mov	r2, r4
 8023256:	4680      	mov	r8, r0
 8023258:	4689      	mov	r9, r1
 802325a:	462b      	mov	r3, r5
 802325c:	4620      	mov	r0, r4
 802325e:	4629      	mov	r1, r5
 8023260:	f7dd f9ca 	bl	80005f8 <__aeabi_dmul>
 8023264:	4602      	mov	r2, r0
 8023266:	460b      	mov	r3, r1
 8023268:	4640      	mov	r0, r8
 802326a:	4649      	mov	r1, r9
 802326c:	f7dd f9c4 	bl	80005f8 <__aeabi_dmul>
 8023270:	a33b      	add	r3, pc, #236	@ (adr r3, 8023360 <__ieee754_pow+0x408>)
 8023272:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023276:	f7dd f9bf 	bl	80005f8 <__aeabi_dmul>
 802327a:	4602      	mov	r2, r0
 802327c:	460b      	mov	r3, r1
 802327e:	4650      	mov	r0, sl
 8023280:	4659      	mov	r1, fp
 8023282:	f7dd f801 	bl	8000288 <__aeabi_dsub>
 8023286:	4602      	mov	r2, r0
 8023288:	460b      	mov	r3, r1
 802328a:	4680      	mov	r8, r0
 802328c:	4689      	mov	r9, r1
 802328e:	4630      	mov	r0, r6
 8023290:	4639      	mov	r1, r7
 8023292:	f7dc fffb 	bl	800028c <__adddf3>
 8023296:	2400      	movs	r4, #0
 8023298:	4632      	mov	r2, r6
 802329a:	463b      	mov	r3, r7
 802329c:	4620      	mov	r0, r4
 802329e:	460d      	mov	r5, r1
 80232a0:	f7dc fff2 	bl	8000288 <__aeabi_dsub>
 80232a4:	4602      	mov	r2, r0
 80232a6:	460b      	mov	r3, r1
 80232a8:	4640      	mov	r0, r8
 80232aa:	4649      	mov	r1, r9
 80232ac:	f7dc ffec 	bl	8000288 <__aeabi_dsub>
 80232b0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80232b4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80232b8:	2300      	movs	r3, #0
 80232ba:	9304      	str	r3, [sp, #16]
 80232bc:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
 80232c0:	4606      	mov	r6, r0
 80232c2:	460f      	mov	r7, r1
 80232c4:	4652      	mov	r2, sl
 80232c6:	465b      	mov	r3, fp
 80232c8:	e9dd 0100 	ldrd	r0, r1, [sp]
 80232cc:	f7dc ffdc 	bl	8000288 <__aeabi_dsub>
 80232d0:	4622      	mov	r2, r4
 80232d2:	462b      	mov	r3, r5
 80232d4:	f7dd f990 	bl	80005f8 <__aeabi_dmul>
 80232d8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80232dc:	4680      	mov	r8, r0
 80232de:	4689      	mov	r9, r1
 80232e0:	4630      	mov	r0, r6
 80232e2:	4639      	mov	r1, r7
 80232e4:	f7dd f988 	bl	80005f8 <__aeabi_dmul>
 80232e8:	4602      	mov	r2, r0
 80232ea:	460b      	mov	r3, r1
 80232ec:	4640      	mov	r0, r8
 80232ee:	4649      	mov	r1, r9
 80232f0:	f7dc ffcc 	bl	800028c <__adddf3>
 80232f4:	4652      	mov	r2, sl
 80232f6:	465b      	mov	r3, fp
 80232f8:	4606      	mov	r6, r0
 80232fa:	460f      	mov	r7, r1
 80232fc:	4620      	mov	r0, r4
 80232fe:	4629      	mov	r1, r5
 8023300:	f7dd f97a 	bl	80005f8 <__aeabi_dmul>
 8023304:	460b      	mov	r3, r1
 8023306:	4602      	mov	r2, r0
 8023308:	4680      	mov	r8, r0
 802330a:	4689      	mov	r9, r1
 802330c:	4630      	mov	r0, r6
 802330e:	4639      	mov	r1, r7
 8023310:	f7dc ffbc 	bl	800028c <__adddf3>
 8023314:	4b17      	ldr	r3, [pc, #92]	@ (8023374 <__ieee754_pow+0x41c>)
 8023316:	4299      	cmp	r1, r3
 8023318:	4604      	mov	r4, r0
 802331a:	460d      	mov	r5, r1
 802331c:	468a      	mov	sl, r1
 802331e:	468b      	mov	fp, r1
 8023320:	f340 82ef 	ble.w	8023902 <__ieee754_pow+0x9aa>
 8023324:	f101 433f 	add.w	r3, r1, #3204448256	@ 0xbf000000
 8023328:	f503 03e0 	add.w	r3, r3, #7340032	@ 0x700000
 802332c:	4303      	orrs	r3, r0
 802332e:	f000 81e8 	beq.w	8023702 <__ieee754_pow+0x7aa>
 8023332:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023336:	2200      	movs	r2, #0
 8023338:	2300      	movs	r3, #0
 802333a:	f7dd fbcf 	bl	8000adc <__aeabi_dcmplt>
 802333e:	3800      	subs	r0, #0
 8023340:	bf18      	it	ne
 8023342:	2001      	movne	r0, #1
 8023344:	e710      	b.n	8023168 <__ieee754_pow+0x210>
 8023346:	bf00      	nop
 8023348:	60000000 	.word	0x60000000
 802334c:	3ff71547 	.word	0x3ff71547
 8023350:	f85ddf44 	.word	0xf85ddf44
 8023354:	3e54ae0b 	.word	0x3e54ae0b
 8023358:	55555555 	.word	0x55555555
 802335c:	3fd55555 	.word	0x3fd55555
 8023360:	652b82fe 	.word	0x652b82fe
 8023364:	3ff71547 	.word	0x3ff71547
 8023368:	3ff00000 	.word	0x3ff00000
 802336c:	3fd00000 	.word	0x3fd00000
 8023370:	3fe00000 	.word	0x3fe00000
 8023374:	408fffff 	.word	0x408fffff
 8023378:	4bd5      	ldr	r3, [pc, #852]	@ (80236d0 <__ieee754_pow+0x778>)
 802337a:	402b      	ands	r3, r5
 802337c:	2200      	movs	r2, #0
 802337e:	b92b      	cbnz	r3, 802338c <__ieee754_pow+0x434>
 8023380:	4bd4      	ldr	r3, [pc, #848]	@ (80236d4 <__ieee754_pow+0x77c>)
 8023382:	f7dd f939 	bl	80005f8 <__aeabi_dmul>
 8023386:	f06f 0234 	mvn.w	r2, #52	@ 0x34
 802338a:	468b      	mov	fp, r1
 802338c:	ea4f 532b 	mov.w	r3, fp, asr #20
 8023390:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 8023394:	4413      	add	r3, r2
 8023396:	930a      	str	r3, [sp, #40]	@ 0x28
 8023398:	4bcf      	ldr	r3, [pc, #828]	@ (80236d8 <__ieee754_pow+0x780>)
 802339a:	f3cb 0b13 	ubfx	fp, fp, #0, #20
 802339e:	f04b 557f 	orr.w	r5, fp, #1069547520	@ 0x3fc00000
 80233a2:	459b      	cmp	fp, r3
 80233a4:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 80233a8:	dd08      	ble.n	80233bc <__ieee754_pow+0x464>
 80233aa:	4bcc      	ldr	r3, [pc, #816]	@ (80236dc <__ieee754_pow+0x784>)
 80233ac:	459b      	cmp	fp, r3
 80233ae:	f340 81a5 	ble.w	80236fc <__ieee754_pow+0x7a4>
 80233b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80233b4:	3301      	adds	r3, #1
 80233b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80233b8:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
 80233bc:	f04f 0a00 	mov.w	sl, #0
 80233c0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80233c4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80233c6:	4bc6      	ldr	r3, [pc, #792]	@ (80236e0 <__ieee754_pow+0x788>)
 80233c8:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80233cc:	ed93 7b00 	vldr	d7, [r3]
 80233d0:	4629      	mov	r1, r5
 80233d2:	ec53 2b17 	vmov	r2, r3, d7
 80233d6:	ed8d 7b06 	vstr	d7, [sp, #24]
 80233da:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80233de:	f7dc ff53 	bl	8000288 <__aeabi_dsub>
 80233e2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80233e6:	4606      	mov	r6, r0
 80233e8:	460f      	mov	r7, r1
 80233ea:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80233ee:	f7dc ff4d 	bl	800028c <__adddf3>
 80233f2:	4602      	mov	r2, r0
 80233f4:	460b      	mov	r3, r1
 80233f6:	2000      	movs	r0, #0
 80233f8:	49ba      	ldr	r1, [pc, #744]	@ (80236e4 <__ieee754_pow+0x78c>)
 80233fa:	f7dd fa27 	bl	800084c <__aeabi_ddiv>
 80233fe:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
 8023402:	4602      	mov	r2, r0
 8023404:	460b      	mov	r3, r1
 8023406:	4630      	mov	r0, r6
 8023408:	4639      	mov	r1, r7
 802340a:	f7dd f8f5 	bl	80005f8 <__aeabi_dmul>
 802340e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8023412:	e9dd bc04 	ldrd	fp, ip, [sp, #16]
 8023416:	106d      	asrs	r5, r5, #1
 8023418:	f045 5500 	orr.w	r5, r5, #536870912	@ 0x20000000
 802341c:	f04f 0b00 	mov.w	fp, #0
 8023420:	f505 2500 	add.w	r5, r5, #524288	@ 0x80000
 8023424:	4661      	mov	r1, ip
 8023426:	2200      	movs	r2, #0
 8023428:	eb05 438a 	add.w	r3, r5, sl, lsl #18
 802342c:	4658      	mov	r0, fp
 802342e:	46e1      	mov	r9, ip
 8023430:	e9cd bc0e 	strd	fp, ip, [sp, #56]	@ 0x38
 8023434:	4614      	mov	r4, r2
 8023436:	461d      	mov	r5, r3
 8023438:	f7dd f8de 	bl	80005f8 <__aeabi_dmul>
 802343c:	4602      	mov	r2, r0
 802343e:	460b      	mov	r3, r1
 8023440:	4630      	mov	r0, r6
 8023442:	4639      	mov	r1, r7
 8023444:	f7dc ff20 	bl	8000288 <__aeabi_dsub>
 8023448:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802344c:	4606      	mov	r6, r0
 802344e:	460f      	mov	r7, r1
 8023450:	4620      	mov	r0, r4
 8023452:	4629      	mov	r1, r5
 8023454:	f7dc ff18 	bl	8000288 <__aeabi_dsub>
 8023458:	4602      	mov	r2, r0
 802345a:	460b      	mov	r3, r1
 802345c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8023460:	f7dc ff12 	bl	8000288 <__aeabi_dsub>
 8023464:	465a      	mov	r2, fp
 8023466:	464b      	mov	r3, r9
 8023468:	f7dd f8c6 	bl	80005f8 <__aeabi_dmul>
 802346c:	4602      	mov	r2, r0
 802346e:	460b      	mov	r3, r1
 8023470:	4630      	mov	r0, r6
 8023472:	4639      	mov	r1, r7
 8023474:	f7dc ff08 	bl	8000288 <__aeabi_dsub>
 8023478:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 802347c:	f7dd f8bc 	bl	80005f8 <__aeabi_dmul>
 8023480:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023484:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8023488:	4610      	mov	r0, r2
 802348a:	4619      	mov	r1, r3
 802348c:	f7dd f8b4 	bl	80005f8 <__aeabi_dmul>
 8023490:	a37d      	add	r3, pc, #500	@ (adr r3, 8023688 <__ieee754_pow+0x730>)
 8023492:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023496:	4604      	mov	r4, r0
 8023498:	460d      	mov	r5, r1
 802349a:	f7dd f8ad 	bl	80005f8 <__aeabi_dmul>
 802349e:	a37c      	add	r3, pc, #496	@ (adr r3, 8023690 <__ieee754_pow+0x738>)
 80234a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234a4:	f7dc fef2 	bl	800028c <__adddf3>
 80234a8:	4622      	mov	r2, r4
 80234aa:	462b      	mov	r3, r5
 80234ac:	f7dd f8a4 	bl	80005f8 <__aeabi_dmul>
 80234b0:	a379      	add	r3, pc, #484	@ (adr r3, 8023698 <__ieee754_pow+0x740>)
 80234b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234b6:	f7dc fee9 	bl	800028c <__adddf3>
 80234ba:	4622      	mov	r2, r4
 80234bc:	462b      	mov	r3, r5
 80234be:	f7dd f89b 	bl	80005f8 <__aeabi_dmul>
 80234c2:	a377      	add	r3, pc, #476	@ (adr r3, 80236a0 <__ieee754_pow+0x748>)
 80234c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234c8:	f7dc fee0 	bl	800028c <__adddf3>
 80234cc:	4622      	mov	r2, r4
 80234ce:	462b      	mov	r3, r5
 80234d0:	f7dd f892 	bl	80005f8 <__aeabi_dmul>
 80234d4:	a374      	add	r3, pc, #464	@ (adr r3, 80236a8 <__ieee754_pow+0x750>)
 80234d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234da:	f7dc fed7 	bl	800028c <__adddf3>
 80234de:	4622      	mov	r2, r4
 80234e0:	462b      	mov	r3, r5
 80234e2:	f7dd f889 	bl	80005f8 <__aeabi_dmul>
 80234e6:	a372      	add	r3, pc, #456	@ (adr r3, 80236b0 <__ieee754_pow+0x758>)
 80234e8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80234ec:	f7dc fece 	bl	800028c <__adddf3>
 80234f0:	4622      	mov	r2, r4
 80234f2:	4606      	mov	r6, r0
 80234f4:	460f      	mov	r7, r1
 80234f6:	462b      	mov	r3, r5
 80234f8:	4620      	mov	r0, r4
 80234fa:	4629      	mov	r1, r5
 80234fc:	f7dd f87c 	bl	80005f8 <__aeabi_dmul>
 8023500:	4602      	mov	r2, r0
 8023502:	460b      	mov	r3, r1
 8023504:	4630      	mov	r0, r6
 8023506:	4639      	mov	r1, r7
 8023508:	f7dd f876 	bl	80005f8 <__aeabi_dmul>
 802350c:	465a      	mov	r2, fp
 802350e:	4604      	mov	r4, r0
 8023510:	460d      	mov	r5, r1
 8023512:	464b      	mov	r3, r9
 8023514:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8023518:	f7dc feb8 	bl	800028c <__adddf3>
 802351c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023520:	f7dd f86a 	bl	80005f8 <__aeabi_dmul>
 8023524:	4622      	mov	r2, r4
 8023526:	462b      	mov	r3, r5
 8023528:	f7dc feb0 	bl	800028c <__adddf3>
 802352c:	465a      	mov	r2, fp
 802352e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8023532:	464b      	mov	r3, r9
 8023534:	4658      	mov	r0, fp
 8023536:	4649      	mov	r1, r9
 8023538:	f7dd f85e 	bl	80005f8 <__aeabi_dmul>
 802353c:	4b6a      	ldr	r3, [pc, #424]	@ (80236e8 <__ieee754_pow+0x790>)
 802353e:	2200      	movs	r2, #0
 8023540:	4606      	mov	r6, r0
 8023542:	460f      	mov	r7, r1
 8023544:	f7dc fea2 	bl	800028c <__adddf3>
 8023548:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 802354c:	f7dc fe9e 	bl	800028c <__adddf3>
 8023550:	46d8      	mov	r8, fp
 8023552:	e9dd bc0e 	ldrd	fp, ip, [sp, #56]	@ 0x38
 8023556:	460d      	mov	r5, r1
 8023558:	465a      	mov	r2, fp
 802355a:	460b      	mov	r3, r1
 802355c:	4640      	mov	r0, r8
 802355e:	4649      	mov	r1, r9
 8023560:	e9cd bc0c 	strd	fp, ip, [sp, #48]	@ 0x30
 8023564:	f7dd f848 	bl	80005f8 <__aeabi_dmul>
 8023568:	465c      	mov	r4, fp
 802356a:	4680      	mov	r8, r0
 802356c:	4689      	mov	r9, r1
 802356e:	4b5e      	ldr	r3, [pc, #376]	@ (80236e8 <__ieee754_pow+0x790>)
 8023570:	2200      	movs	r2, #0
 8023572:	4620      	mov	r0, r4
 8023574:	4629      	mov	r1, r5
 8023576:	f7dc fe87 	bl	8000288 <__aeabi_dsub>
 802357a:	4632      	mov	r2, r6
 802357c:	463b      	mov	r3, r7
 802357e:	f7dc fe83 	bl	8000288 <__aeabi_dsub>
 8023582:	4602      	mov	r2, r0
 8023584:	460b      	mov	r3, r1
 8023586:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 802358a:	f7dc fe7d 	bl	8000288 <__aeabi_dsub>
 802358e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8023592:	f7dd f831 	bl	80005f8 <__aeabi_dmul>
 8023596:	4622      	mov	r2, r4
 8023598:	4606      	mov	r6, r0
 802359a:	460f      	mov	r7, r1
 802359c:	462b      	mov	r3, r5
 802359e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80235a2:	f7dd f829 	bl	80005f8 <__aeabi_dmul>
 80235a6:	4602      	mov	r2, r0
 80235a8:	460b      	mov	r3, r1
 80235aa:	4630      	mov	r0, r6
 80235ac:	4639      	mov	r1, r7
 80235ae:	f7dc fe6d 	bl	800028c <__adddf3>
 80235b2:	4606      	mov	r6, r0
 80235b4:	460f      	mov	r7, r1
 80235b6:	4602      	mov	r2, r0
 80235b8:	460b      	mov	r3, r1
 80235ba:	4640      	mov	r0, r8
 80235bc:	4649      	mov	r1, r9
 80235be:	f7dc fe65 	bl	800028c <__adddf3>
 80235c2:	e9dd bc0c 	ldrd	fp, ip, [sp, #48]	@ 0x30
 80235c6:	a33c      	add	r3, pc, #240	@ (adr r3, 80236b8 <__ieee754_pow+0x760>)
 80235c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80235cc:	4658      	mov	r0, fp
 80235ce:	e9cd bc08 	strd	fp, ip, [sp, #32]
 80235d2:	460d      	mov	r5, r1
 80235d4:	f7dd f810 	bl	80005f8 <__aeabi_dmul>
 80235d8:	465c      	mov	r4, fp
 80235da:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80235de:	4642      	mov	r2, r8
 80235e0:	464b      	mov	r3, r9
 80235e2:	4620      	mov	r0, r4
 80235e4:	4629      	mov	r1, r5
 80235e6:	f7dc fe4f 	bl	8000288 <__aeabi_dsub>
 80235ea:	4602      	mov	r2, r0
 80235ec:	460b      	mov	r3, r1
 80235ee:	4630      	mov	r0, r6
 80235f0:	4639      	mov	r1, r7
 80235f2:	f7dc fe49 	bl	8000288 <__aeabi_dsub>
 80235f6:	a332      	add	r3, pc, #200	@ (adr r3, 80236c0 <__ieee754_pow+0x768>)
 80235f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80235fc:	f7dc fffc 	bl	80005f8 <__aeabi_dmul>
 8023600:	a331      	add	r3, pc, #196	@ (adr r3, 80236c8 <__ieee754_pow+0x770>)
 8023602:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023606:	4606      	mov	r6, r0
 8023608:	460f      	mov	r7, r1
 802360a:	4620      	mov	r0, r4
 802360c:	4629      	mov	r1, r5
 802360e:	f7dc fff3 	bl	80005f8 <__aeabi_dmul>
 8023612:	4602      	mov	r2, r0
 8023614:	460b      	mov	r3, r1
 8023616:	4630      	mov	r0, r6
 8023618:	4639      	mov	r1, r7
 802361a:	f7dc fe37 	bl	800028c <__adddf3>
 802361e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023620:	4b32      	ldr	r3, [pc, #200]	@ (80236ec <__ieee754_pow+0x794>)
 8023622:	4413      	add	r3, r2
 8023624:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023628:	f7dc fe30 	bl	800028c <__adddf3>
 802362c:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8023630:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8023632:	f7dc ff77 	bl	8000524 <__aeabi_i2d>
 8023636:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023638:	4b2d      	ldr	r3, [pc, #180]	@ (80236f0 <__ieee754_pow+0x798>)
 802363a:	4413      	add	r3, r2
 802363c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8023640:	4606      	mov	r6, r0
 8023642:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8023646:	460f      	mov	r7, r1
 8023648:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 802364c:	f7dc fe1e 	bl	800028c <__adddf3>
 8023650:	4642      	mov	r2, r8
 8023652:	464b      	mov	r3, r9
 8023654:	f7dc fe1a 	bl	800028c <__adddf3>
 8023658:	4632      	mov	r2, r6
 802365a:	463b      	mov	r3, r7
 802365c:	f7dc fe16 	bl	800028c <__adddf3>
 8023660:	e9dd bc08 	ldrd	fp, ip, [sp, #32]
 8023664:	4632      	mov	r2, r6
 8023666:	463b      	mov	r3, r7
 8023668:	4658      	mov	r0, fp
 802366a:	460d      	mov	r5, r1
 802366c:	f7dc fe0c 	bl	8000288 <__aeabi_dsub>
 8023670:	4642      	mov	r2, r8
 8023672:	464b      	mov	r3, r9
 8023674:	f7dc fe08 	bl	8000288 <__aeabi_dsub>
 8023678:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 802367c:	f7dc fe04 	bl	8000288 <__aeabi_dsub>
 8023680:	465c      	mov	r4, fp
 8023682:	4602      	mov	r2, r0
 8023684:	e036      	b.n	80236f4 <__ieee754_pow+0x79c>
 8023686:	bf00      	nop
 8023688:	4a454eef 	.word	0x4a454eef
 802368c:	3fca7e28 	.word	0x3fca7e28
 8023690:	93c9db65 	.word	0x93c9db65
 8023694:	3fcd864a 	.word	0x3fcd864a
 8023698:	a91d4101 	.word	0xa91d4101
 802369c:	3fd17460 	.word	0x3fd17460
 80236a0:	518f264d 	.word	0x518f264d
 80236a4:	3fd55555 	.word	0x3fd55555
 80236a8:	db6fabff 	.word	0xdb6fabff
 80236ac:	3fdb6db6 	.word	0x3fdb6db6
 80236b0:	33333303 	.word	0x33333303
 80236b4:	3fe33333 	.word	0x3fe33333
 80236b8:	e0000000 	.word	0xe0000000
 80236bc:	3feec709 	.word	0x3feec709
 80236c0:	dc3a03fd 	.word	0xdc3a03fd
 80236c4:	3feec709 	.word	0x3feec709
 80236c8:	145b01f5 	.word	0x145b01f5
 80236cc:	be3e2fe0 	.word	0xbe3e2fe0
 80236d0:	7ff00000 	.word	0x7ff00000
 80236d4:	43400000 	.word	0x43400000
 80236d8:	0003988e 	.word	0x0003988e
 80236dc:	000bb679 	.word	0x000bb679
 80236e0:	08025218 	.word	0x08025218
 80236e4:	3ff00000 	.word	0x3ff00000
 80236e8:	40080000 	.word	0x40080000
 80236ec:	080251f8 	.word	0x080251f8
 80236f0:	08025208 	.word	0x08025208
 80236f4:	460b      	mov	r3, r1
 80236f6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80236fa:	e5d7      	b.n	80232ac <__ieee754_pow+0x354>
 80236fc:	f04f 0a01 	mov.w	sl, #1
 8023700:	e65e      	b.n	80233c0 <__ieee754_pow+0x468>
 8023702:	a3b4      	add	r3, pc, #720	@ (adr r3, 80239d4 <__ieee754_pow+0xa7c>)
 8023704:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023708:	4630      	mov	r0, r6
 802370a:	4639      	mov	r1, r7
 802370c:	f7dc fdbe 	bl	800028c <__adddf3>
 8023710:	4642      	mov	r2, r8
 8023712:	e9cd 0100 	strd	r0, r1, [sp]
 8023716:	464b      	mov	r3, r9
 8023718:	4620      	mov	r0, r4
 802371a:	4629      	mov	r1, r5
 802371c:	f7dc fdb4 	bl	8000288 <__aeabi_dsub>
 8023720:	4602      	mov	r2, r0
 8023722:	460b      	mov	r3, r1
 8023724:	e9dd 0100 	ldrd	r0, r1, [sp]
 8023728:	f7dd f9f6 	bl	8000b18 <__aeabi_dcmpgt>
 802372c:	2800      	cmp	r0, #0
 802372e:	f47f ae00 	bne.w	8023332 <__ieee754_pow+0x3da>
 8023732:	ea4f 5a2a 	mov.w	sl, sl, asr #20
 8023736:	f44f 1380 	mov.w	r3, #1048576	@ 0x100000
 802373a:	f2aa 3afe 	subw	sl, sl, #1022	@ 0x3fe
 802373e:	fa43 fa0a 	asr.w	sl, r3, sl
 8023742:	44da      	add	sl, fp
 8023744:	f3ca 510a 	ubfx	r1, sl, #20, #11
 8023748:	489d      	ldr	r0, [pc, #628]	@ (80239c0 <__ieee754_pow+0xa68>)
 802374a:	f2a1 31ff 	subw	r1, r1, #1023	@ 0x3ff
 802374e:	4108      	asrs	r0, r1
 8023750:	ea00 030a 	and.w	r3, r0, sl
 8023754:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 8023758:	f1c1 0114 	rsb	r1, r1, #20
 802375c:	f44a 1a80 	orr.w	sl, sl, #1048576	@ 0x100000
 8023760:	fa4a fa01 	asr.w	sl, sl, r1
 8023764:	f1bb 0f00 	cmp.w	fp, #0
 8023768:	4640      	mov	r0, r8
 802376a:	4649      	mov	r1, r9
 802376c:	f04f 0200 	mov.w	r2, #0
 8023770:	bfb8      	it	lt
 8023772:	f1ca 0a00 	rsblt	sl, sl, #0
 8023776:	f7dc fd87 	bl	8000288 <__aeabi_dsub>
 802377a:	4680      	mov	r8, r0
 802377c:	4689      	mov	r9, r1
 802377e:	4632      	mov	r2, r6
 8023780:	463b      	mov	r3, r7
 8023782:	4640      	mov	r0, r8
 8023784:	4649      	mov	r1, r9
 8023786:	f7dc fd81 	bl	800028c <__adddf3>
 802378a:	2400      	movs	r4, #0
 802378c:	a37c      	add	r3, pc, #496	@ (adr r3, 8023980 <__ieee754_pow+0xa28>)
 802378e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023792:	4620      	mov	r0, r4
 8023794:	460d      	mov	r5, r1
 8023796:	f7dc ff2f 	bl	80005f8 <__aeabi_dmul>
 802379a:	4642      	mov	r2, r8
 802379c:	e9cd 0100 	strd	r0, r1, [sp]
 80237a0:	464b      	mov	r3, r9
 80237a2:	4620      	mov	r0, r4
 80237a4:	4629      	mov	r1, r5
 80237a6:	f7dc fd6f 	bl	8000288 <__aeabi_dsub>
 80237aa:	4602      	mov	r2, r0
 80237ac:	460b      	mov	r3, r1
 80237ae:	4630      	mov	r0, r6
 80237b0:	4639      	mov	r1, r7
 80237b2:	f7dc fd69 	bl	8000288 <__aeabi_dsub>
 80237b6:	a374      	add	r3, pc, #464	@ (adr r3, 8023988 <__ieee754_pow+0xa30>)
 80237b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237bc:	f7dc ff1c 	bl	80005f8 <__aeabi_dmul>
 80237c0:	a373      	add	r3, pc, #460	@ (adr r3, 8023990 <__ieee754_pow+0xa38>)
 80237c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80237c6:	4680      	mov	r8, r0
 80237c8:	4689      	mov	r9, r1
 80237ca:	4620      	mov	r0, r4
 80237cc:	4629      	mov	r1, r5
 80237ce:	f7dc ff13 	bl	80005f8 <__aeabi_dmul>
 80237d2:	4602      	mov	r2, r0
 80237d4:	460b      	mov	r3, r1
 80237d6:	4640      	mov	r0, r8
 80237d8:	4649      	mov	r1, r9
 80237da:	f7dc fd57 	bl	800028c <__adddf3>
 80237de:	4604      	mov	r4, r0
 80237e0:	460d      	mov	r5, r1
 80237e2:	4602      	mov	r2, r0
 80237e4:	460b      	mov	r3, r1
 80237e6:	e9dd 0100 	ldrd	r0, r1, [sp]
 80237ea:	f7dc fd4f 	bl	800028c <__adddf3>
 80237ee:	e9dd 2300 	ldrd	r2, r3, [sp]
 80237f2:	4680      	mov	r8, r0
 80237f4:	4689      	mov	r9, r1
 80237f6:	f7dc fd47 	bl	8000288 <__aeabi_dsub>
 80237fa:	4602      	mov	r2, r0
 80237fc:	460b      	mov	r3, r1
 80237fe:	4620      	mov	r0, r4
 8023800:	4629      	mov	r1, r5
 8023802:	f7dc fd41 	bl	8000288 <__aeabi_dsub>
 8023806:	4642      	mov	r2, r8
 8023808:	4606      	mov	r6, r0
 802380a:	460f      	mov	r7, r1
 802380c:	464b      	mov	r3, r9
 802380e:	4640      	mov	r0, r8
 8023810:	4649      	mov	r1, r9
 8023812:	f7dc fef1 	bl	80005f8 <__aeabi_dmul>
 8023816:	a360      	add	r3, pc, #384	@ (adr r3, 8023998 <__ieee754_pow+0xa40>)
 8023818:	e9d3 2300 	ldrd	r2, r3, [r3]
 802381c:	4604      	mov	r4, r0
 802381e:	460d      	mov	r5, r1
 8023820:	f7dc feea 	bl	80005f8 <__aeabi_dmul>
 8023824:	a35e      	add	r3, pc, #376	@ (adr r3, 80239a0 <__ieee754_pow+0xa48>)
 8023826:	e9d3 2300 	ldrd	r2, r3, [r3]
 802382a:	f7dc fd2d 	bl	8000288 <__aeabi_dsub>
 802382e:	4622      	mov	r2, r4
 8023830:	462b      	mov	r3, r5
 8023832:	f7dc fee1 	bl	80005f8 <__aeabi_dmul>
 8023836:	a35c      	add	r3, pc, #368	@ (adr r3, 80239a8 <__ieee754_pow+0xa50>)
 8023838:	e9d3 2300 	ldrd	r2, r3, [r3]
 802383c:	f7dc fd26 	bl	800028c <__adddf3>
 8023840:	4622      	mov	r2, r4
 8023842:	462b      	mov	r3, r5
 8023844:	f7dc fed8 	bl	80005f8 <__aeabi_dmul>
 8023848:	a359      	add	r3, pc, #356	@ (adr r3, 80239b0 <__ieee754_pow+0xa58>)
 802384a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802384e:	f7dc fd1b 	bl	8000288 <__aeabi_dsub>
 8023852:	4622      	mov	r2, r4
 8023854:	462b      	mov	r3, r5
 8023856:	f7dc fecf 	bl	80005f8 <__aeabi_dmul>
 802385a:	a357      	add	r3, pc, #348	@ (adr r3, 80239b8 <__ieee754_pow+0xa60>)
 802385c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023860:	f7dc fd14 	bl	800028c <__adddf3>
 8023864:	4622      	mov	r2, r4
 8023866:	462b      	mov	r3, r5
 8023868:	f7dc fec6 	bl	80005f8 <__aeabi_dmul>
 802386c:	4602      	mov	r2, r0
 802386e:	460b      	mov	r3, r1
 8023870:	4640      	mov	r0, r8
 8023872:	4649      	mov	r1, r9
 8023874:	f7dc fd08 	bl	8000288 <__aeabi_dsub>
 8023878:	4604      	mov	r4, r0
 802387a:	460d      	mov	r5, r1
 802387c:	4602      	mov	r2, r0
 802387e:	460b      	mov	r3, r1
 8023880:	4640      	mov	r0, r8
 8023882:	4649      	mov	r1, r9
 8023884:	f7dc feb8 	bl	80005f8 <__aeabi_dmul>
 8023888:	2200      	movs	r2, #0
 802388a:	e9cd 0100 	strd	r0, r1, [sp]
 802388e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8023892:	4620      	mov	r0, r4
 8023894:	4629      	mov	r1, r5
 8023896:	f7dc fcf7 	bl	8000288 <__aeabi_dsub>
 802389a:	4602      	mov	r2, r0
 802389c:	460b      	mov	r3, r1
 802389e:	e9dd 0100 	ldrd	r0, r1, [sp]
 80238a2:	f7dc ffd3 	bl	800084c <__aeabi_ddiv>
 80238a6:	4632      	mov	r2, r6
 80238a8:	4604      	mov	r4, r0
 80238aa:	460d      	mov	r5, r1
 80238ac:	463b      	mov	r3, r7
 80238ae:	4640      	mov	r0, r8
 80238b0:	4649      	mov	r1, r9
 80238b2:	f7dc fea1 	bl	80005f8 <__aeabi_dmul>
 80238b6:	4632      	mov	r2, r6
 80238b8:	463b      	mov	r3, r7
 80238ba:	f7dc fce7 	bl	800028c <__adddf3>
 80238be:	4602      	mov	r2, r0
 80238c0:	460b      	mov	r3, r1
 80238c2:	4620      	mov	r0, r4
 80238c4:	4629      	mov	r1, r5
 80238c6:	f7dc fcdf 	bl	8000288 <__aeabi_dsub>
 80238ca:	4642      	mov	r2, r8
 80238cc:	464b      	mov	r3, r9
 80238ce:	f7dc fcdb 	bl	8000288 <__aeabi_dsub>
 80238d2:	460b      	mov	r3, r1
 80238d4:	4602      	mov	r2, r0
 80238d6:	493b      	ldr	r1, [pc, #236]	@ (80239c4 <__ieee754_pow+0xa6c>)
 80238d8:	2000      	movs	r0, #0
 80238da:	f7dc fcd5 	bl	8000288 <__aeabi_dsub>
 80238de:	ec41 0b10 	vmov	d0, r0, r1
 80238e2:	ee10 3a90 	vmov	r3, s1
 80238e6:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80238ea:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80238ee:	da30      	bge.n	8023952 <__ieee754_pow+0x9fa>
 80238f0:	4650      	mov	r0, sl
 80238f2:	f000 fa71 	bl	8023dd8 <scalbn>
 80238f6:	ec51 0b10 	vmov	r0, r1, d0
 80238fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80238fe:	f7ff bbd2 	b.w	80230a6 <__ieee754_pow+0x14e>
 8023902:	4c31      	ldr	r4, [pc, #196]	@ (80239c8 <__ieee754_pow+0xa70>)
 8023904:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
 8023908:	42a3      	cmp	r3, r4
 802390a:	d91a      	bls.n	8023942 <__ieee754_pow+0x9ea>
 802390c:	4b2f      	ldr	r3, [pc, #188]	@ (80239cc <__ieee754_pow+0xa74>)
 802390e:	440b      	add	r3, r1
 8023910:	4303      	orrs	r3, r0
 8023912:	d009      	beq.n	8023928 <__ieee754_pow+0x9d0>
 8023914:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023918:	2200      	movs	r2, #0
 802391a:	2300      	movs	r3, #0
 802391c:	f7dd f8de 	bl	8000adc <__aeabi_dcmplt>
 8023920:	3800      	subs	r0, #0
 8023922:	bf18      	it	ne
 8023924:	2001      	movne	r0, #1
 8023926:	e42b      	b.n	8023180 <__ieee754_pow+0x228>
 8023928:	4642      	mov	r2, r8
 802392a:	464b      	mov	r3, r9
 802392c:	f7dc fcac 	bl	8000288 <__aeabi_dsub>
 8023930:	4632      	mov	r2, r6
 8023932:	463b      	mov	r3, r7
 8023934:	f7dd f8e6 	bl	8000b04 <__aeabi_dcmpge>
 8023938:	2800      	cmp	r0, #0
 802393a:	d1eb      	bne.n	8023914 <__ieee754_pow+0x9bc>
 802393c:	f8df a09c 	ldr.w	sl, [pc, #156]	@ 80239dc <__ieee754_pow+0xa84>
 8023940:	e6f7      	b.n	8023732 <__ieee754_pow+0x7da>
 8023942:	469a      	mov	sl, r3
 8023944:	4b22      	ldr	r3, [pc, #136]	@ (80239d0 <__ieee754_pow+0xa78>)
 8023946:	459a      	cmp	sl, r3
 8023948:	f63f aef3 	bhi.w	8023732 <__ieee754_pow+0x7da>
 802394c:	f8dd a010 	ldr.w	sl, [sp, #16]
 8023950:	e715      	b.n	802377e <__ieee754_pow+0x826>
 8023952:	ec51 0b10 	vmov	r0, r1, d0
 8023956:	4619      	mov	r1, r3
 8023958:	e7cf      	b.n	80238fa <__ieee754_pow+0x9a2>
 802395a:	491a      	ldr	r1, [pc, #104]	@ (80239c4 <__ieee754_pow+0xa6c>)
 802395c:	2000      	movs	r0, #0
 802395e:	f7ff bb18 	b.w	8022f92 <__ieee754_pow+0x3a>
 8023962:	2000      	movs	r0, #0
 8023964:	2100      	movs	r1, #0
 8023966:	f7ff bb14 	b.w	8022f92 <__ieee754_pow+0x3a>
 802396a:	4630      	mov	r0, r6
 802396c:	4639      	mov	r1, r7
 802396e:	f7ff bb10 	b.w	8022f92 <__ieee754_pow+0x3a>
 8023972:	460c      	mov	r4, r1
 8023974:	f7ff bb5e 	b.w	8023034 <__ieee754_pow+0xdc>
 8023978:	2400      	movs	r4, #0
 802397a:	f7ff bb49 	b.w	8023010 <__ieee754_pow+0xb8>
 802397e:	bf00      	nop
 8023980:	00000000 	.word	0x00000000
 8023984:	3fe62e43 	.word	0x3fe62e43
 8023988:	fefa39ef 	.word	0xfefa39ef
 802398c:	3fe62e42 	.word	0x3fe62e42
 8023990:	0ca86c39 	.word	0x0ca86c39
 8023994:	be205c61 	.word	0xbe205c61
 8023998:	72bea4d0 	.word	0x72bea4d0
 802399c:	3e663769 	.word	0x3e663769
 80239a0:	c5d26bf1 	.word	0xc5d26bf1
 80239a4:	3ebbbd41 	.word	0x3ebbbd41
 80239a8:	af25de2c 	.word	0xaf25de2c
 80239ac:	3f11566a 	.word	0x3f11566a
 80239b0:	16bebd93 	.word	0x16bebd93
 80239b4:	3f66c16c 	.word	0x3f66c16c
 80239b8:	5555553e 	.word	0x5555553e
 80239bc:	3fc55555 	.word	0x3fc55555
 80239c0:	fff00000 	.word	0xfff00000
 80239c4:	3ff00000 	.word	0x3ff00000
 80239c8:	4090cbff 	.word	0x4090cbff
 80239cc:	3f6f3400 	.word	0x3f6f3400
 80239d0:	3fe00000 	.word	0x3fe00000
 80239d4:	652b82fe 	.word	0x652b82fe
 80239d8:	3c971547 	.word	0x3c971547
 80239dc:	4090cc00 	.word	0x4090cc00

080239e0 <__ieee754_rem_pio2>:
 80239e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80239e4:	ec57 6b10 	vmov	r6, r7, d0
 80239e8:	4bc5      	ldr	r3, [pc, #788]	@ (8023d00 <__ieee754_rem_pio2+0x320>)
 80239ea:	b08d      	sub	sp, #52	@ 0x34
 80239ec:	f027 4800 	bic.w	r8, r7, #2147483648	@ 0x80000000
 80239f0:	4598      	cmp	r8, r3
 80239f2:	4604      	mov	r4, r0
 80239f4:	9704      	str	r7, [sp, #16]
 80239f6:	d807      	bhi.n	8023a08 <__ieee754_rem_pio2+0x28>
 80239f8:	2200      	movs	r2, #0
 80239fa:	2300      	movs	r3, #0
 80239fc:	ed80 0b00 	vstr	d0, [r0]
 8023a00:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8023a04:	2500      	movs	r5, #0
 8023a06:	e028      	b.n	8023a5a <__ieee754_rem_pio2+0x7a>
 8023a08:	4bbe      	ldr	r3, [pc, #760]	@ (8023d04 <__ieee754_rem_pio2+0x324>)
 8023a0a:	4598      	cmp	r8, r3
 8023a0c:	d878      	bhi.n	8023b00 <__ieee754_rem_pio2+0x120>
 8023a0e:	9b04      	ldr	r3, [sp, #16]
 8023a10:	4dbd      	ldr	r5, [pc, #756]	@ (8023d08 <__ieee754_rem_pio2+0x328>)
 8023a12:	2b00      	cmp	r3, #0
 8023a14:	4630      	mov	r0, r6
 8023a16:	a3ac      	add	r3, pc, #688	@ (adr r3, 8023cc8 <__ieee754_rem_pio2+0x2e8>)
 8023a18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a1c:	4639      	mov	r1, r7
 8023a1e:	dd38      	ble.n	8023a92 <__ieee754_rem_pio2+0xb2>
 8023a20:	f7dc fc32 	bl	8000288 <__aeabi_dsub>
 8023a24:	45a8      	cmp	r8, r5
 8023a26:	4606      	mov	r6, r0
 8023a28:	460f      	mov	r7, r1
 8023a2a:	d01a      	beq.n	8023a62 <__ieee754_rem_pio2+0x82>
 8023a2c:	a3a8      	add	r3, pc, #672	@ (adr r3, 8023cd0 <__ieee754_rem_pio2+0x2f0>)
 8023a2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a32:	f7dc fc29 	bl	8000288 <__aeabi_dsub>
 8023a36:	4602      	mov	r2, r0
 8023a38:	460b      	mov	r3, r1
 8023a3a:	4680      	mov	r8, r0
 8023a3c:	4689      	mov	r9, r1
 8023a3e:	4630      	mov	r0, r6
 8023a40:	4639      	mov	r1, r7
 8023a42:	f7dc fc21 	bl	8000288 <__aeabi_dsub>
 8023a46:	a3a2      	add	r3, pc, #648	@ (adr r3, 8023cd0 <__ieee754_rem_pio2+0x2f0>)
 8023a48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a4c:	f7dc fc1c 	bl	8000288 <__aeabi_dsub>
 8023a50:	e9c4 8900 	strd	r8, r9, [r4]
 8023a54:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8023a58:	2501      	movs	r5, #1
 8023a5a:	4628      	mov	r0, r5
 8023a5c:	b00d      	add	sp, #52	@ 0x34
 8023a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023a62:	a39d      	add	r3, pc, #628	@ (adr r3, 8023cd8 <__ieee754_rem_pio2+0x2f8>)
 8023a64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a68:	f7dc fc0e 	bl	8000288 <__aeabi_dsub>
 8023a6c:	a39c      	add	r3, pc, #624	@ (adr r3, 8023ce0 <__ieee754_rem_pio2+0x300>)
 8023a6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a72:	4606      	mov	r6, r0
 8023a74:	460f      	mov	r7, r1
 8023a76:	f7dc fc07 	bl	8000288 <__aeabi_dsub>
 8023a7a:	4602      	mov	r2, r0
 8023a7c:	460b      	mov	r3, r1
 8023a7e:	4680      	mov	r8, r0
 8023a80:	4689      	mov	r9, r1
 8023a82:	4630      	mov	r0, r6
 8023a84:	4639      	mov	r1, r7
 8023a86:	f7dc fbff 	bl	8000288 <__aeabi_dsub>
 8023a8a:	a395      	add	r3, pc, #596	@ (adr r3, 8023ce0 <__ieee754_rem_pio2+0x300>)
 8023a8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023a90:	e7dc      	b.n	8023a4c <__ieee754_rem_pio2+0x6c>
 8023a92:	f7dc fbfb 	bl	800028c <__adddf3>
 8023a96:	45a8      	cmp	r8, r5
 8023a98:	4606      	mov	r6, r0
 8023a9a:	460f      	mov	r7, r1
 8023a9c:	d018      	beq.n	8023ad0 <__ieee754_rem_pio2+0xf0>
 8023a9e:	a38c      	add	r3, pc, #560	@ (adr r3, 8023cd0 <__ieee754_rem_pio2+0x2f0>)
 8023aa0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023aa4:	f7dc fbf2 	bl	800028c <__adddf3>
 8023aa8:	4602      	mov	r2, r0
 8023aaa:	460b      	mov	r3, r1
 8023aac:	4680      	mov	r8, r0
 8023aae:	4689      	mov	r9, r1
 8023ab0:	4630      	mov	r0, r6
 8023ab2:	4639      	mov	r1, r7
 8023ab4:	f7dc fbe8 	bl	8000288 <__aeabi_dsub>
 8023ab8:	a385      	add	r3, pc, #532	@ (adr r3, 8023cd0 <__ieee754_rem_pio2+0x2f0>)
 8023aba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023abe:	f7dc fbe5 	bl	800028c <__adddf3>
 8023ac2:	f04f 35ff 	mov.w	r5, #4294967295
 8023ac6:	e9c4 8900 	strd	r8, r9, [r4]
 8023aca:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8023ace:	e7c4      	b.n	8023a5a <__ieee754_rem_pio2+0x7a>
 8023ad0:	a381      	add	r3, pc, #516	@ (adr r3, 8023cd8 <__ieee754_rem_pio2+0x2f8>)
 8023ad2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ad6:	f7dc fbd9 	bl	800028c <__adddf3>
 8023ada:	a381      	add	r3, pc, #516	@ (adr r3, 8023ce0 <__ieee754_rem_pio2+0x300>)
 8023adc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023ae0:	4606      	mov	r6, r0
 8023ae2:	460f      	mov	r7, r1
 8023ae4:	f7dc fbd2 	bl	800028c <__adddf3>
 8023ae8:	4602      	mov	r2, r0
 8023aea:	460b      	mov	r3, r1
 8023aec:	4680      	mov	r8, r0
 8023aee:	4689      	mov	r9, r1
 8023af0:	4630      	mov	r0, r6
 8023af2:	4639      	mov	r1, r7
 8023af4:	f7dc fbc8 	bl	8000288 <__aeabi_dsub>
 8023af8:	a379      	add	r3, pc, #484	@ (adr r3, 8023ce0 <__ieee754_rem_pio2+0x300>)
 8023afa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023afe:	e7de      	b.n	8023abe <__ieee754_rem_pio2+0xde>
 8023b00:	4b82      	ldr	r3, [pc, #520]	@ (8023d0c <__ieee754_rem_pio2+0x32c>)
 8023b02:	4598      	cmp	r8, r3
 8023b04:	f200 80d1 	bhi.w	8023caa <__ieee754_rem_pio2+0x2ca>
 8023b08:	f7fe fe1a 	bl	8022740 <fabs>
 8023b0c:	ec57 6b10 	vmov	r6, r7, d0
 8023b10:	a375      	add	r3, pc, #468	@ (adr r3, 8023ce8 <__ieee754_rem_pio2+0x308>)
 8023b12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b16:	4630      	mov	r0, r6
 8023b18:	4639      	mov	r1, r7
 8023b1a:	f7dc fd6d 	bl	80005f8 <__aeabi_dmul>
 8023b1e:	4b7c      	ldr	r3, [pc, #496]	@ (8023d10 <__ieee754_rem_pio2+0x330>)
 8023b20:	2200      	movs	r2, #0
 8023b22:	f7dc fbb3 	bl	800028c <__adddf3>
 8023b26:	f7dd f817 	bl	8000b58 <__aeabi_d2iz>
 8023b2a:	4605      	mov	r5, r0
 8023b2c:	f7dc fcfa 	bl	8000524 <__aeabi_i2d>
 8023b30:	4602      	mov	r2, r0
 8023b32:	460b      	mov	r3, r1
 8023b34:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8023b38:	a363      	add	r3, pc, #396	@ (adr r3, 8023cc8 <__ieee754_rem_pio2+0x2e8>)
 8023b3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b3e:	f7dc fd5b 	bl	80005f8 <__aeabi_dmul>
 8023b42:	4602      	mov	r2, r0
 8023b44:	460b      	mov	r3, r1
 8023b46:	4630      	mov	r0, r6
 8023b48:	4639      	mov	r1, r7
 8023b4a:	f7dc fb9d 	bl	8000288 <__aeabi_dsub>
 8023b4e:	a360      	add	r3, pc, #384	@ (adr r3, 8023cd0 <__ieee754_rem_pio2+0x2f0>)
 8023b50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023b54:	4682      	mov	sl, r0
 8023b56:	468b      	mov	fp, r1
 8023b58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023b5c:	f7dc fd4c 	bl	80005f8 <__aeabi_dmul>
 8023b60:	2d1f      	cmp	r5, #31
 8023b62:	4606      	mov	r6, r0
 8023b64:	460f      	mov	r7, r1
 8023b66:	dc0c      	bgt.n	8023b82 <__ieee754_rem_pio2+0x1a2>
 8023b68:	4b6a      	ldr	r3, [pc, #424]	@ (8023d14 <__ieee754_rem_pio2+0x334>)
 8023b6a:	1e6a      	subs	r2, r5, #1
 8023b6c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8023b70:	4543      	cmp	r3, r8
 8023b72:	d006      	beq.n	8023b82 <__ieee754_rem_pio2+0x1a2>
 8023b74:	4632      	mov	r2, r6
 8023b76:	463b      	mov	r3, r7
 8023b78:	4650      	mov	r0, sl
 8023b7a:	4659      	mov	r1, fp
 8023b7c:	f7dc fb84 	bl	8000288 <__aeabi_dsub>
 8023b80:	e00e      	b.n	8023ba0 <__ieee754_rem_pio2+0x1c0>
 8023b82:	463b      	mov	r3, r7
 8023b84:	4632      	mov	r2, r6
 8023b86:	4650      	mov	r0, sl
 8023b88:	4659      	mov	r1, fp
 8023b8a:	f7dc fb7d 	bl	8000288 <__aeabi_dsub>
 8023b8e:	ea4f 5328 	mov.w	r3, r8, asr #20
 8023b92:	9305      	str	r3, [sp, #20]
 8023b94:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8023b98:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 8023b9c:	2b10      	cmp	r3, #16
 8023b9e:	dc02      	bgt.n	8023ba6 <__ieee754_rem_pio2+0x1c6>
 8023ba0:	e9c4 0100 	strd	r0, r1, [r4]
 8023ba4:	e039      	b.n	8023c1a <__ieee754_rem_pio2+0x23a>
 8023ba6:	a34c      	add	r3, pc, #304	@ (adr r3, 8023cd8 <__ieee754_rem_pio2+0x2f8>)
 8023ba8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023bac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023bb0:	f7dc fd22 	bl	80005f8 <__aeabi_dmul>
 8023bb4:	4606      	mov	r6, r0
 8023bb6:	460f      	mov	r7, r1
 8023bb8:	4602      	mov	r2, r0
 8023bba:	460b      	mov	r3, r1
 8023bbc:	4650      	mov	r0, sl
 8023bbe:	4659      	mov	r1, fp
 8023bc0:	f7dc fb62 	bl	8000288 <__aeabi_dsub>
 8023bc4:	4602      	mov	r2, r0
 8023bc6:	460b      	mov	r3, r1
 8023bc8:	4680      	mov	r8, r0
 8023bca:	4689      	mov	r9, r1
 8023bcc:	4650      	mov	r0, sl
 8023bce:	4659      	mov	r1, fp
 8023bd0:	f7dc fb5a 	bl	8000288 <__aeabi_dsub>
 8023bd4:	4632      	mov	r2, r6
 8023bd6:	463b      	mov	r3, r7
 8023bd8:	f7dc fb56 	bl	8000288 <__aeabi_dsub>
 8023bdc:	a340      	add	r3, pc, #256	@ (adr r3, 8023ce0 <__ieee754_rem_pio2+0x300>)
 8023bde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023be2:	4606      	mov	r6, r0
 8023be4:	460f      	mov	r7, r1
 8023be6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023bea:	f7dc fd05 	bl	80005f8 <__aeabi_dmul>
 8023bee:	4632      	mov	r2, r6
 8023bf0:	463b      	mov	r3, r7
 8023bf2:	f7dc fb49 	bl	8000288 <__aeabi_dsub>
 8023bf6:	4602      	mov	r2, r0
 8023bf8:	460b      	mov	r3, r1
 8023bfa:	4606      	mov	r6, r0
 8023bfc:	460f      	mov	r7, r1
 8023bfe:	4640      	mov	r0, r8
 8023c00:	4649      	mov	r1, r9
 8023c02:	f7dc fb41 	bl	8000288 <__aeabi_dsub>
 8023c06:	9a05      	ldr	r2, [sp, #20]
 8023c08:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8023c0c:	1ad3      	subs	r3, r2, r3
 8023c0e:	2b31      	cmp	r3, #49	@ 0x31
 8023c10:	dc20      	bgt.n	8023c54 <__ieee754_rem_pio2+0x274>
 8023c12:	e9c4 0100 	strd	r0, r1, [r4]
 8023c16:	46c2      	mov	sl, r8
 8023c18:	46cb      	mov	fp, r9
 8023c1a:	e9d4 8900 	ldrd	r8, r9, [r4]
 8023c1e:	4650      	mov	r0, sl
 8023c20:	4642      	mov	r2, r8
 8023c22:	464b      	mov	r3, r9
 8023c24:	4659      	mov	r1, fp
 8023c26:	f7dc fb2f 	bl	8000288 <__aeabi_dsub>
 8023c2a:	463b      	mov	r3, r7
 8023c2c:	4632      	mov	r2, r6
 8023c2e:	f7dc fb2b 	bl	8000288 <__aeabi_dsub>
 8023c32:	9b04      	ldr	r3, [sp, #16]
 8023c34:	2b00      	cmp	r3, #0
 8023c36:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8023c3a:	f6bf af0e 	bge.w	8023a5a <__ieee754_rem_pio2+0x7a>
 8023c3e:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
 8023c42:	6063      	str	r3, [r4, #4]
 8023c44:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8023c48:	f8c4 8000 	str.w	r8, [r4]
 8023c4c:	60a0      	str	r0, [r4, #8]
 8023c4e:	60e3      	str	r3, [r4, #12]
 8023c50:	426d      	negs	r5, r5
 8023c52:	e702      	b.n	8023a5a <__ieee754_rem_pio2+0x7a>
 8023c54:	a326      	add	r3, pc, #152	@ (adr r3, 8023cf0 <__ieee754_rem_pio2+0x310>)
 8023c56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c5a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023c5e:	f7dc fccb 	bl	80005f8 <__aeabi_dmul>
 8023c62:	4606      	mov	r6, r0
 8023c64:	460f      	mov	r7, r1
 8023c66:	4602      	mov	r2, r0
 8023c68:	460b      	mov	r3, r1
 8023c6a:	4640      	mov	r0, r8
 8023c6c:	4649      	mov	r1, r9
 8023c6e:	f7dc fb0b 	bl	8000288 <__aeabi_dsub>
 8023c72:	4602      	mov	r2, r0
 8023c74:	460b      	mov	r3, r1
 8023c76:	4682      	mov	sl, r0
 8023c78:	468b      	mov	fp, r1
 8023c7a:	4640      	mov	r0, r8
 8023c7c:	4649      	mov	r1, r9
 8023c7e:	f7dc fb03 	bl	8000288 <__aeabi_dsub>
 8023c82:	4632      	mov	r2, r6
 8023c84:	463b      	mov	r3, r7
 8023c86:	f7dc faff 	bl	8000288 <__aeabi_dsub>
 8023c8a:	a31b      	add	r3, pc, #108	@ (adr r3, 8023cf8 <__ieee754_rem_pio2+0x318>)
 8023c8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c90:	4606      	mov	r6, r0
 8023c92:	460f      	mov	r7, r1
 8023c94:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8023c98:	f7dc fcae 	bl	80005f8 <__aeabi_dmul>
 8023c9c:	4632      	mov	r2, r6
 8023c9e:	463b      	mov	r3, r7
 8023ca0:	f7dc faf2 	bl	8000288 <__aeabi_dsub>
 8023ca4:	4606      	mov	r6, r0
 8023ca6:	460f      	mov	r7, r1
 8023ca8:	e764      	b.n	8023b74 <__ieee754_rem_pio2+0x194>
 8023caa:	4b1b      	ldr	r3, [pc, #108]	@ (8023d18 <__ieee754_rem_pio2+0x338>)
 8023cac:	4598      	cmp	r8, r3
 8023cae:	d935      	bls.n	8023d1c <__ieee754_rem_pio2+0x33c>
 8023cb0:	4632      	mov	r2, r6
 8023cb2:	463b      	mov	r3, r7
 8023cb4:	4630      	mov	r0, r6
 8023cb6:	4639      	mov	r1, r7
 8023cb8:	f7dc fae6 	bl	8000288 <__aeabi_dsub>
 8023cbc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8023cc0:	e9c4 0100 	strd	r0, r1, [r4]
 8023cc4:	e69e      	b.n	8023a04 <__ieee754_rem_pio2+0x24>
 8023cc6:	bf00      	nop
 8023cc8:	54400000 	.word	0x54400000
 8023ccc:	3ff921fb 	.word	0x3ff921fb
 8023cd0:	1a626331 	.word	0x1a626331
 8023cd4:	3dd0b461 	.word	0x3dd0b461
 8023cd8:	1a600000 	.word	0x1a600000
 8023cdc:	3dd0b461 	.word	0x3dd0b461
 8023ce0:	2e037073 	.word	0x2e037073
 8023ce4:	3ba3198a 	.word	0x3ba3198a
 8023ce8:	6dc9c883 	.word	0x6dc9c883
 8023cec:	3fe45f30 	.word	0x3fe45f30
 8023cf0:	2e000000 	.word	0x2e000000
 8023cf4:	3ba3198a 	.word	0x3ba3198a
 8023cf8:	252049c1 	.word	0x252049c1
 8023cfc:	397b839a 	.word	0x397b839a
 8023d00:	3fe921fb 	.word	0x3fe921fb
 8023d04:	4002d97b 	.word	0x4002d97b
 8023d08:	3ff921fb 	.word	0x3ff921fb
 8023d0c:	413921fb 	.word	0x413921fb
 8023d10:	3fe00000 	.word	0x3fe00000
 8023d14:	08025228 	.word	0x08025228
 8023d18:	7fefffff 	.word	0x7fefffff
 8023d1c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8023d20:	f2a5 4516 	subw	r5, r5, #1046	@ 0x416
 8023d24:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8023d28:	4630      	mov	r0, r6
 8023d2a:	460f      	mov	r7, r1
 8023d2c:	f7dc ff14 	bl	8000b58 <__aeabi_d2iz>
 8023d30:	f7dc fbf8 	bl	8000524 <__aeabi_i2d>
 8023d34:	4602      	mov	r2, r0
 8023d36:	460b      	mov	r3, r1
 8023d38:	4630      	mov	r0, r6
 8023d3a:	4639      	mov	r1, r7
 8023d3c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8023d40:	f7dc faa2 	bl	8000288 <__aeabi_dsub>
 8023d44:	4b22      	ldr	r3, [pc, #136]	@ (8023dd0 <__ieee754_rem_pio2+0x3f0>)
 8023d46:	2200      	movs	r2, #0
 8023d48:	f7dc fc56 	bl	80005f8 <__aeabi_dmul>
 8023d4c:	460f      	mov	r7, r1
 8023d4e:	4606      	mov	r6, r0
 8023d50:	f7dc ff02 	bl	8000b58 <__aeabi_d2iz>
 8023d54:	f7dc fbe6 	bl	8000524 <__aeabi_i2d>
 8023d58:	4602      	mov	r2, r0
 8023d5a:	460b      	mov	r3, r1
 8023d5c:	4630      	mov	r0, r6
 8023d5e:	4639      	mov	r1, r7
 8023d60:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8023d64:	f7dc fa90 	bl	8000288 <__aeabi_dsub>
 8023d68:	4b19      	ldr	r3, [pc, #100]	@ (8023dd0 <__ieee754_rem_pio2+0x3f0>)
 8023d6a:	2200      	movs	r2, #0
 8023d6c:	f7dc fc44 	bl	80005f8 <__aeabi_dmul>
 8023d70:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
 8023d74:	f10d 0930 	add.w	r9, sp, #48	@ 0x30
 8023d78:	f04f 0803 	mov.w	r8, #3
 8023d7c:	2600      	movs	r6, #0
 8023d7e:	2700      	movs	r7, #0
 8023d80:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8023d84:	4632      	mov	r2, r6
 8023d86:	463b      	mov	r3, r7
 8023d88:	46c2      	mov	sl, r8
 8023d8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8023d8e:	f7dc fe9b 	bl	8000ac8 <__aeabi_dcmpeq>
 8023d92:	2800      	cmp	r0, #0
 8023d94:	d1f4      	bne.n	8023d80 <__ieee754_rem_pio2+0x3a0>
 8023d96:	4b0f      	ldr	r3, [pc, #60]	@ (8023dd4 <__ieee754_rem_pio2+0x3f4>)
 8023d98:	9301      	str	r3, [sp, #4]
 8023d9a:	2302      	movs	r3, #2
 8023d9c:	9300      	str	r3, [sp, #0]
 8023d9e:	462a      	mov	r2, r5
 8023da0:	4653      	mov	r3, sl
 8023da2:	4621      	mov	r1, r4
 8023da4:	a806      	add	r0, sp, #24
 8023da6:	f000 f8d3 	bl	8023f50 <__kernel_rem_pio2>
 8023daa:	9b04      	ldr	r3, [sp, #16]
 8023dac:	2b00      	cmp	r3, #0
 8023dae:	4605      	mov	r5, r0
 8023db0:	f6bf ae53 	bge.w	8023a5a <__ieee754_rem_pio2+0x7a>
 8023db4:	e9d4 2100 	ldrd	r2, r1, [r4]
 8023db8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8023dbc:	e9c4 2300 	strd	r2, r3, [r4]
 8023dc0:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
 8023dc4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8023dc8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8023dcc:	e740      	b.n	8023c50 <__ieee754_rem_pio2+0x270>
 8023dce:	bf00      	nop
 8023dd0:	41700000 	.word	0x41700000
 8023dd4:	080252a8 	.word	0x080252a8

08023dd8 <scalbn>:
 8023dd8:	b570      	push	{r4, r5, r6, lr}
 8023dda:	ec55 4b10 	vmov	r4, r5, d0
 8023dde:	f3c5 510a 	ubfx	r1, r5, #20, #11
 8023de2:	4606      	mov	r6, r0
 8023de4:	462b      	mov	r3, r5
 8023de6:	b991      	cbnz	r1, 8023e0e <scalbn+0x36>
 8023de8:	f025 4300 	bic.w	r3, r5, #2147483648	@ 0x80000000
 8023dec:	4323      	orrs	r3, r4
 8023dee:	d03d      	beq.n	8023e6c <scalbn+0x94>
 8023df0:	4b35      	ldr	r3, [pc, #212]	@ (8023ec8 <scalbn+0xf0>)
 8023df2:	4620      	mov	r0, r4
 8023df4:	4629      	mov	r1, r5
 8023df6:	2200      	movs	r2, #0
 8023df8:	f7dc fbfe 	bl	80005f8 <__aeabi_dmul>
 8023dfc:	4b33      	ldr	r3, [pc, #204]	@ (8023ecc <scalbn+0xf4>)
 8023dfe:	429e      	cmp	r6, r3
 8023e00:	4604      	mov	r4, r0
 8023e02:	460d      	mov	r5, r1
 8023e04:	da0f      	bge.n	8023e26 <scalbn+0x4e>
 8023e06:	a328      	add	r3, pc, #160	@ (adr r3, 8023ea8 <scalbn+0xd0>)
 8023e08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023e0c:	e01e      	b.n	8023e4c <scalbn+0x74>
 8023e0e:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8023e12:	4291      	cmp	r1, r2
 8023e14:	d10b      	bne.n	8023e2e <scalbn+0x56>
 8023e16:	4622      	mov	r2, r4
 8023e18:	4620      	mov	r0, r4
 8023e1a:	4629      	mov	r1, r5
 8023e1c:	f7dc fa36 	bl	800028c <__adddf3>
 8023e20:	4604      	mov	r4, r0
 8023e22:	460d      	mov	r5, r1
 8023e24:	e022      	b.n	8023e6c <scalbn+0x94>
 8023e26:	460b      	mov	r3, r1
 8023e28:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8023e2c:	3936      	subs	r1, #54	@ 0x36
 8023e2e:	f24c 3250 	movw	r2, #50000	@ 0xc350
 8023e32:	4296      	cmp	r6, r2
 8023e34:	dd0d      	ble.n	8023e52 <scalbn+0x7a>
 8023e36:	2d00      	cmp	r5, #0
 8023e38:	a11d      	add	r1, pc, #116	@ (adr r1, 8023eb0 <scalbn+0xd8>)
 8023e3a:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023e3e:	da02      	bge.n	8023e46 <scalbn+0x6e>
 8023e40:	a11d      	add	r1, pc, #116	@ (adr r1, 8023eb8 <scalbn+0xe0>)
 8023e42:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023e46:	a31a      	add	r3, pc, #104	@ (adr r3, 8023eb0 <scalbn+0xd8>)
 8023e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023e4c:	f7dc fbd4 	bl	80005f8 <__aeabi_dmul>
 8023e50:	e7e6      	b.n	8023e20 <scalbn+0x48>
 8023e52:	1872      	adds	r2, r6, r1
 8023e54:	f240 71fe 	movw	r1, #2046	@ 0x7fe
 8023e58:	428a      	cmp	r2, r1
 8023e5a:	dcec      	bgt.n	8023e36 <scalbn+0x5e>
 8023e5c:	2a00      	cmp	r2, #0
 8023e5e:	dd08      	ble.n	8023e72 <scalbn+0x9a>
 8023e60:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8023e64:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8023e68:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8023e6c:	ec45 4b10 	vmov	d0, r4, r5
 8023e70:	bd70      	pop	{r4, r5, r6, pc}
 8023e72:	f112 0f35 	cmn.w	r2, #53	@ 0x35
 8023e76:	da08      	bge.n	8023e8a <scalbn+0xb2>
 8023e78:	2d00      	cmp	r5, #0
 8023e7a:	a10b      	add	r1, pc, #44	@ (adr r1, 8023ea8 <scalbn+0xd0>)
 8023e7c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023e80:	dac1      	bge.n	8023e06 <scalbn+0x2e>
 8023e82:	a10f      	add	r1, pc, #60	@ (adr r1, 8023ec0 <scalbn+0xe8>)
 8023e84:	e9d1 0100 	ldrd	r0, r1, [r1]
 8023e88:	e7bd      	b.n	8023e06 <scalbn+0x2e>
 8023e8a:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8023e8e:	3236      	adds	r2, #54	@ 0x36
 8023e90:	f423 03e0 	bic.w	r3, r3, #7340032	@ 0x700000
 8023e94:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8023e98:	4620      	mov	r0, r4
 8023e9a:	4b0d      	ldr	r3, [pc, #52]	@ (8023ed0 <scalbn+0xf8>)
 8023e9c:	4629      	mov	r1, r5
 8023e9e:	2200      	movs	r2, #0
 8023ea0:	e7d4      	b.n	8023e4c <scalbn+0x74>
 8023ea2:	bf00      	nop
 8023ea4:	f3af 8000 	nop.w
 8023ea8:	c2f8f359 	.word	0xc2f8f359
 8023eac:	01a56e1f 	.word	0x01a56e1f
 8023eb0:	8800759c 	.word	0x8800759c
 8023eb4:	7e37e43c 	.word	0x7e37e43c
 8023eb8:	8800759c 	.word	0x8800759c
 8023ebc:	fe37e43c 	.word	0xfe37e43c
 8023ec0:	c2f8f359 	.word	0xc2f8f359
 8023ec4:	81a56e1f 	.word	0x81a56e1f
 8023ec8:	43500000 	.word	0x43500000
 8023ecc:	ffff3cb0 	.word	0xffff3cb0
 8023ed0:	3c900000 	.word	0x3c900000

08023ed4 <with_errno>:
 8023ed4:	b510      	push	{r4, lr}
 8023ed6:	ed2d 8b02 	vpush	{d8}
 8023eda:	eeb0 8a40 	vmov.f32	s16, s0
 8023ede:	eef0 8a60 	vmov.f32	s17, s1
 8023ee2:	4604      	mov	r4, r0
 8023ee4:	f7f9 fdf0 	bl	801dac8 <__errno>
 8023ee8:	eeb0 0a48 	vmov.f32	s0, s16
 8023eec:	eef0 0a68 	vmov.f32	s1, s17
 8023ef0:	ecbd 8b02 	vpop	{d8}
 8023ef4:	6004      	str	r4, [r0, #0]
 8023ef6:	bd10      	pop	{r4, pc}

08023ef8 <xflow>:
 8023ef8:	4603      	mov	r3, r0
 8023efa:	b507      	push	{r0, r1, r2, lr}
 8023efc:	ec51 0b10 	vmov	r0, r1, d0
 8023f00:	b183      	cbz	r3, 8023f24 <xflow+0x2c>
 8023f02:	4602      	mov	r2, r0
 8023f04:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8023f08:	e9cd 2300 	strd	r2, r3, [sp]
 8023f0c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8023f10:	f7dc fb72 	bl	80005f8 <__aeabi_dmul>
 8023f14:	ec41 0b10 	vmov	d0, r0, r1
 8023f18:	2022      	movs	r0, #34	@ 0x22
 8023f1a:	b003      	add	sp, #12
 8023f1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8023f20:	f7ff bfd8 	b.w	8023ed4 <with_errno>
 8023f24:	4602      	mov	r2, r0
 8023f26:	460b      	mov	r3, r1
 8023f28:	e7ee      	b.n	8023f08 <xflow+0x10>
 8023f2a:	0000      	movs	r0, r0
 8023f2c:	0000      	movs	r0, r0
	...

08023f30 <__math_uflow>:
 8023f30:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8023f38 <__math_uflow+0x8>
 8023f34:	f7ff bfe0 	b.w	8023ef8 <xflow>
 8023f38:	00000000 	.word	0x00000000
 8023f3c:	10000000 	.word	0x10000000

08023f40 <__math_oflow>:
 8023f40:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 8023f48 <__math_oflow+0x8>
 8023f44:	f7ff bfd8 	b.w	8023ef8 <xflow>
 8023f48:	00000000 	.word	0x00000000
 8023f4c:	70000000 	.word	0x70000000

08023f50 <__kernel_rem_pio2>:
 8023f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f54:	ed2d 8b02 	vpush	{d8}
 8023f58:	f5ad 7d19 	sub.w	sp, sp, #612	@ 0x264
 8023f5c:	f112 0f14 	cmn.w	r2, #20
 8023f60:	9306      	str	r3, [sp, #24]
 8023f62:	9104      	str	r1, [sp, #16]
 8023f64:	4bbe      	ldr	r3, [pc, #760]	@ (8024260 <__kernel_rem_pio2+0x310>)
 8023f66:	99a4      	ldr	r1, [sp, #656]	@ 0x290
 8023f68:	9008      	str	r0, [sp, #32]
 8023f6a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8023f6e:	9300      	str	r3, [sp, #0]
 8023f70:	9b06      	ldr	r3, [sp, #24]
 8023f72:	f103 33ff 	add.w	r3, r3, #4294967295
 8023f76:	bfa8      	it	ge
 8023f78:	1ed4      	subge	r4, r2, #3
 8023f7a:	9305      	str	r3, [sp, #20]
 8023f7c:	bfb2      	itee	lt
 8023f7e:	2400      	movlt	r4, #0
 8023f80:	2318      	movge	r3, #24
 8023f82:	fb94 f4f3 	sdivge	r4, r4, r3
 8023f86:	f06f 0317 	mvn.w	r3, #23
 8023f8a:	fb04 3303 	mla	r3, r4, r3, r3
 8023f8e:	eb03 0b02 	add.w	fp, r3, r2
 8023f92:	9b00      	ldr	r3, [sp, #0]
 8023f94:	9a05      	ldr	r2, [sp, #20]
 8023f96:	ed9f 8bae 	vldr	d8, [pc, #696]	@ 8024250 <__kernel_rem_pio2+0x300>
 8023f9a:	eb03 0802 	add.w	r8, r3, r2
 8023f9e:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8023fa0:	1aa7      	subs	r7, r4, r2
 8023fa2:	ae20      	add	r6, sp, #128	@ 0x80
 8023fa4:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8023fa8:	2500      	movs	r5, #0
 8023faa:	4545      	cmp	r5, r8
 8023fac:	dd13      	ble.n	8023fd6 <__kernel_rem_pio2+0x86>
 8023fae:	9b06      	ldr	r3, [sp, #24]
 8023fb0:	aa20      	add	r2, sp, #128	@ 0x80
 8023fb2:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8023fb6:	f50d 7ae0 	add.w	sl, sp, #448	@ 0x1c0
 8023fba:	f04f 0800 	mov.w	r8, #0
 8023fbe:	9b00      	ldr	r3, [sp, #0]
 8023fc0:	4598      	cmp	r8, r3
 8023fc2:	dc31      	bgt.n	8024028 <__kernel_rem_pio2+0xd8>
 8023fc4:	ed9f 7ba2 	vldr	d7, [pc, #648]	@ 8024250 <__kernel_rem_pio2+0x300>
 8023fc8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8023fcc:	ed8d 7b02 	vstr	d7, [sp, #8]
 8023fd0:	462f      	mov	r7, r5
 8023fd2:	2600      	movs	r6, #0
 8023fd4:	e01b      	b.n	802400e <__kernel_rem_pio2+0xbe>
 8023fd6:	42ef      	cmn	r7, r5
 8023fd8:	d407      	bmi.n	8023fea <__kernel_rem_pio2+0x9a>
 8023fda:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8023fde:	f7dc faa1 	bl	8000524 <__aeabi_i2d>
 8023fe2:	e8e6 0102 	strd	r0, r1, [r6], #8
 8023fe6:	3501      	adds	r5, #1
 8023fe8:	e7df      	b.n	8023faa <__kernel_rem_pio2+0x5a>
 8023fea:	ec51 0b18 	vmov	r0, r1, d8
 8023fee:	e7f8      	b.n	8023fe2 <__kernel_rem_pio2+0x92>
 8023ff0:	e9d7 2300 	ldrd	r2, r3, [r7]
 8023ff4:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8023ff8:	f7dc fafe 	bl	80005f8 <__aeabi_dmul>
 8023ffc:	4602      	mov	r2, r0
 8023ffe:	460b      	mov	r3, r1
 8024000:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024004:	f7dc f942 	bl	800028c <__adddf3>
 8024008:	e9cd 0102 	strd	r0, r1, [sp, #8]
 802400c:	3601      	adds	r6, #1
 802400e:	9b05      	ldr	r3, [sp, #20]
 8024010:	429e      	cmp	r6, r3
 8024012:	f1a7 0708 	sub.w	r7, r7, #8
 8024016:	ddeb      	ble.n	8023ff0 <__kernel_rem_pio2+0xa0>
 8024018:	ed9d 7b02 	vldr	d7, [sp, #8]
 802401c:	f108 0801 	add.w	r8, r8, #1
 8024020:	ecaa 7b02 	vstmia	sl!, {d7}
 8024024:	3508      	adds	r5, #8
 8024026:	e7ca      	b.n	8023fbe <__kernel_rem_pio2+0x6e>
 8024028:	9b00      	ldr	r3, [sp, #0]
 802402a:	f8dd 8000 	ldr.w	r8, [sp]
 802402e:	aa0c      	add	r2, sp, #48	@ 0x30
 8024030:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8024034:	930a      	str	r3, [sp, #40]	@ 0x28
 8024036:	9ba5      	ldr	r3, [sp, #660]	@ 0x294
 8024038:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 802403c:	9309      	str	r3, [sp, #36]	@ 0x24
 802403e:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8024042:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024044:	ab98      	add	r3, sp, #608	@ 0x260
 8024046:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 802404a:	ed13 7b28 	vldr	d7, [r3, #-160]	@ 0xffffff60
 802404e:	ed8d 7b02 	vstr	d7, [sp, #8]
 8024052:	ac0c      	add	r4, sp, #48	@ 0x30
 8024054:	ab70      	add	r3, sp, #448	@ 0x1c0
 8024056:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 802405a:	46a1      	mov	r9, r4
 802405c:	46c2      	mov	sl, r8
 802405e:	f1ba 0f00 	cmp.w	sl, #0
 8024062:	f1a5 0508 	sub.w	r5, r5, #8
 8024066:	dc77      	bgt.n	8024158 <__kernel_rem_pio2+0x208>
 8024068:	4658      	mov	r0, fp
 802406a:	ed9d 0b02 	vldr	d0, [sp, #8]
 802406e:	f7ff feb3 	bl	8023dd8 <scalbn>
 8024072:	ec57 6b10 	vmov	r6, r7, d0
 8024076:	2200      	movs	r2, #0
 8024078:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
 802407c:	4630      	mov	r0, r6
 802407e:	4639      	mov	r1, r7
 8024080:	f7dc faba 	bl	80005f8 <__aeabi_dmul>
 8024084:	ec41 0b10 	vmov	d0, r0, r1
 8024088:	f7fe fc9e 	bl	80229c8 <floor>
 802408c:	4b75      	ldr	r3, [pc, #468]	@ (8024264 <__kernel_rem_pio2+0x314>)
 802408e:	ec51 0b10 	vmov	r0, r1, d0
 8024092:	2200      	movs	r2, #0
 8024094:	f7dc fab0 	bl	80005f8 <__aeabi_dmul>
 8024098:	4602      	mov	r2, r0
 802409a:	460b      	mov	r3, r1
 802409c:	4630      	mov	r0, r6
 802409e:	4639      	mov	r1, r7
 80240a0:	f7dc f8f2 	bl	8000288 <__aeabi_dsub>
 80240a4:	460f      	mov	r7, r1
 80240a6:	4606      	mov	r6, r0
 80240a8:	f7dc fd56 	bl	8000b58 <__aeabi_d2iz>
 80240ac:	9002      	str	r0, [sp, #8]
 80240ae:	f7dc fa39 	bl	8000524 <__aeabi_i2d>
 80240b2:	4602      	mov	r2, r0
 80240b4:	460b      	mov	r3, r1
 80240b6:	4630      	mov	r0, r6
 80240b8:	4639      	mov	r1, r7
 80240ba:	f7dc f8e5 	bl	8000288 <__aeabi_dsub>
 80240be:	f1bb 0f00 	cmp.w	fp, #0
 80240c2:	4606      	mov	r6, r0
 80240c4:	460f      	mov	r7, r1
 80240c6:	dd6c      	ble.n	80241a2 <__kernel_rem_pio2+0x252>
 80240c8:	f108 31ff 	add.w	r1, r8, #4294967295
 80240cc:	ab0c      	add	r3, sp, #48	@ 0x30
 80240ce:	9d02      	ldr	r5, [sp, #8]
 80240d0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80240d4:	f1cb 0018 	rsb	r0, fp, #24
 80240d8:	fa43 f200 	asr.w	r2, r3, r0
 80240dc:	4415      	add	r5, r2
 80240de:	4082      	lsls	r2, r0
 80240e0:	1a9b      	subs	r3, r3, r2
 80240e2:	aa0c      	add	r2, sp, #48	@ 0x30
 80240e4:	9502      	str	r5, [sp, #8]
 80240e6:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 80240ea:	f1cb 0217 	rsb	r2, fp, #23
 80240ee:	fa43 f902 	asr.w	r9, r3, r2
 80240f2:	f1b9 0f00 	cmp.w	r9, #0
 80240f6:	dd64      	ble.n	80241c2 <__kernel_rem_pio2+0x272>
 80240f8:	9b02      	ldr	r3, [sp, #8]
 80240fa:	2200      	movs	r2, #0
 80240fc:	3301      	adds	r3, #1
 80240fe:	9302      	str	r3, [sp, #8]
 8024100:	4615      	mov	r5, r2
 8024102:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
 8024106:	4590      	cmp	r8, r2
 8024108:	f300 80b8 	bgt.w	802427c <__kernel_rem_pio2+0x32c>
 802410c:	f1bb 0f00 	cmp.w	fp, #0
 8024110:	dd07      	ble.n	8024122 <__kernel_rem_pio2+0x1d2>
 8024112:	f1bb 0f01 	cmp.w	fp, #1
 8024116:	f000 80bf 	beq.w	8024298 <__kernel_rem_pio2+0x348>
 802411a:	f1bb 0f02 	cmp.w	fp, #2
 802411e:	f000 80c6 	beq.w	80242ae <__kernel_rem_pio2+0x35e>
 8024122:	f1b9 0f02 	cmp.w	r9, #2
 8024126:	d14c      	bne.n	80241c2 <__kernel_rem_pio2+0x272>
 8024128:	4632      	mov	r2, r6
 802412a:	463b      	mov	r3, r7
 802412c:	494e      	ldr	r1, [pc, #312]	@ (8024268 <__kernel_rem_pio2+0x318>)
 802412e:	2000      	movs	r0, #0
 8024130:	f7dc f8aa 	bl	8000288 <__aeabi_dsub>
 8024134:	4606      	mov	r6, r0
 8024136:	460f      	mov	r7, r1
 8024138:	2d00      	cmp	r5, #0
 802413a:	d042      	beq.n	80241c2 <__kernel_rem_pio2+0x272>
 802413c:	4658      	mov	r0, fp
 802413e:	ed9f 0b46 	vldr	d0, [pc, #280]	@ 8024258 <__kernel_rem_pio2+0x308>
 8024142:	f7ff fe49 	bl	8023dd8 <scalbn>
 8024146:	4630      	mov	r0, r6
 8024148:	4639      	mov	r1, r7
 802414a:	ec53 2b10 	vmov	r2, r3, d0
 802414e:	f7dc f89b 	bl	8000288 <__aeabi_dsub>
 8024152:	4606      	mov	r6, r0
 8024154:	460f      	mov	r7, r1
 8024156:	e034      	b.n	80241c2 <__kernel_rem_pio2+0x272>
 8024158:	4b44      	ldr	r3, [pc, #272]	@ (802426c <__kernel_rem_pio2+0x31c>)
 802415a:	2200      	movs	r2, #0
 802415c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024160:	f7dc fa4a 	bl	80005f8 <__aeabi_dmul>
 8024164:	f7dc fcf8 	bl	8000b58 <__aeabi_d2iz>
 8024168:	f7dc f9dc 	bl	8000524 <__aeabi_i2d>
 802416c:	4b40      	ldr	r3, [pc, #256]	@ (8024270 <__kernel_rem_pio2+0x320>)
 802416e:	2200      	movs	r2, #0
 8024170:	4606      	mov	r6, r0
 8024172:	460f      	mov	r7, r1
 8024174:	f7dc fa40 	bl	80005f8 <__aeabi_dmul>
 8024178:	4602      	mov	r2, r0
 802417a:	460b      	mov	r3, r1
 802417c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024180:	f7dc f882 	bl	8000288 <__aeabi_dsub>
 8024184:	f7dc fce8 	bl	8000b58 <__aeabi_d2iz>
 8024188:	e9d5 2300 	ldrd	r2, r3, [r5]
 802418c:	f849 0b04 	str.w	r0, [r9], #4
 8024190:	4639      	mov	r1, r7
 8024192:	4630      	mov	r0, r6
 8024194:	f7dc f87a 	bl	800028c <__adddf3>
 8024198:	f10a 3aff 	add.w	sl, sl, #4294967295
 802419c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80241a0:	e75d      	b.n	802405e <__kernel_rem_pio2+0x10e>
 80241a2:	d107      	bne.n	80241b4 <__kernel_rem_pio2+0x264>
 80241a4:	f108 33ff 	add.w	r3, r8, #4294967295
 80241a8:	aa0c      	add	r2, sp, #48	@ 0x30
 80241aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80241ae:	ea4f 59e3 	mov.w	r9, r3, asr #23
 80241b2:	e79e      	b.n	80240f2 <__kernel_rem_pio2+0x1a2>
 80241b4:	4b2f      	ldr	r3, [pc, #188]	@ (8024274 <__kernel_rem_pio2+0x324>)
 80241b6:	2200      	movs	r2, #0
 80241b8:	f7dc fca4 	bl	8000b04 <__aeabi_dcmpge>
 80241bc:	2800      	cmp	r0, #0
 80241be:	d143      	bne.n	8024248 <__kernel_rem_pio2+0x2f8>
 80241c0:	4681      	mov	r9, r0
 80241c2:	2200      	movs	r2, #0
 80241c4:	2300      	movs	r3, #0
 80241c6:	4630      	mov	r0, r6
 80241c8:	4639      	mov	r1, r7
 80241ca:	f7dc fc7d 	bl	8000ac8 <__aeabi_dcmpeq>
 80241ce:	2800      	cmp	r0, #0
 80241d0:	f000 80bf 	beq.w	8024352 <__kernel_rem_pio2+0x402>
 80241d4:	f108 33ff 	add.w	r3, r8, #4294967295
 80241d8:	2200      	movs	r2, #0
 80241da:	9900      	ldr	r1, [sp, #0]
 80241dc:	428b      	cmp	r3, r1
 80241de:	da6e      	bge.n	80242be <__kernel_rem_pio2+0x36e>
 80241e0:	2a00      	cmp	r2, #0
 80241e2:	f000 8089 	beq.w	80242f8 <__kernel_rem_pio2+0x3a8>
 80241e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80241ea:	ab0c      	add	r3, sp, #48	@ 0x30
 80241ec:	f1ab 0b18 	sub.w	fp, fp, #24
 80241f0:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
 80241f4:	2b00      	cmp	r3, #0
 80241f6:	d0f6      	beq.n	80241e6 <__kernel_rem_pio2+0x296>
 80241f8:	4658      	mov	r0, fp
 80241fa:	ed9f 0b17 	vldr	d0, [pc, #92]	@ 8024258 <__kernel_rem_pio2+0x308>
 80241fe:	f7ff fdeb 	bl	8023dd8 <scalbn>
 8024202:	f108 0301 	add.w	r3, r8, #1
 8024206:	00da      	lsls	r2, r3, #3
 8024208:	9205      	str	r2, [sp, #20]
 802420a:	ec55 4b10 	vmov	r4, r5, d0
 802420e:	aa70      	add	r2, sp, #448	@ 0x1c0
 8024210:	f8df b058 	ldr.w	fp, [pc, #88]	@ 802426c <__kernel_rem_pio2+0x31c>
 8024214:	eb02 07c3 	add.w	r7, r2, r3, lsl #3
 8024218:	4646      	mov	r6, r8
 802421a:	f04f 0a00 	mov.w	sl, #0
 802421e:	2e00      	cmp	r6, #0
 8024220:	f280 80cf 	bge.w	80243c2 <__kernel_rem_pio2+0x472>
 8024224:	4644      	mov	r4, r8
 8024226:	2c00      	cmp	r4, #0
 8024228:	f2c0 80fd 	blt.w	8024426 <__kernel_rem_pio2+0x4d6>
 802422c:	4b12      	ldr	r3, [pc, #72]	@ (8024278 <__kernel_rem_pio2+0x328>)
 802422e:	461f      	mov	r7, r3
 8024230:	ab70      	add	r3, sp, #448	@ 0x1c0
 8024232:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8024236:	9306      	str	r3, [sp, #24]
 8024238:	f04f 0a00 	mov.w	sl, #0
 802423c:	f04f 0b00 	mov.w	fp, #0
 8024240:	2600      	movs	r6, #0
 8024242:	eba8 0504 	sub.w	r5, r8, r4
 8024246:	e0e2      	b.n	802440e <__kernel_rem_pio2+0x4be>
 8024248:	f04f 0902 	mov.w	r9, #2
 802424c:	e754      	b.n	80240f8 <__kernel_rem_pio2+0x1a8>
 802424e:	bf00      	nop
	...
 802425c:	3ff00000 	.word	0x3ff00000
 8024260:	080253f0 	.word	0x080253f0
 8024264:	40200000 	.word	0x40200000
 8024268:	3ff00000 	.word	0x3ff00000
 802426c:	3e700000 	.word	0x3e700000
 8024270:	41700000 	.word	0x41700000
 8024274:	3fe00000 	.word	0x3fe00000
 8024278:	080253b0 	.word	0x080253b0
 802427c:	f854 3b04 	ldr.w	r3, [r4], #4
 8024280:	b945      	cbnz	r5, 8024294 <__kernel_rem_pio2+0x344>
 8024282:	b123      	cbz	r3, 802428e <__kernel_rem_pio2+0x33e>
 8024284:	f1c3 7380 	rsb	r3, r3, #16777216	@ 0x1000000
 8024288:	f844 3c04 	str.w	r3, [r4, #-4]
 802428c:	2301      	movs	r3, #1
 802428e:	3201      	adds	r2, #1
 8024290:	461d      	mov	r5, r3
 8024292:	e738      	b.n	8024106 <__kernel_rem_pio2+0x1b6>
 8024294:	1acb      	subs	r3, r1, r3
 8024296:	e7f7      	b.n	8024288 <__kernel_rem_pio2+0x338>
 8024298:	f108 32ff 	add.w	r2, r8, #4294967295
 802429c:	ab0c      	add	r3, sp, #48	@ 0x30
 802429e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80242a2:	f3c3 0316 	ubfx	r3, r3, #0, #23
 80242a6:	a90c      	add	r1, sp, #48	@ 0x30
 80242a8:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 80242ac:	e739      	b.n	8024122 <__kernel_rem_pio2+0x1d2>
 80242ae:	f108 32ff 	add.w	r2, r8, #4294967295
 80242b2:	ab0c      	add	r3, sp, #48	@ 0x30
 80242b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80242b8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80242bc:	e7f3      	b.n	80242a6 <__kernel_rem_pio2+0x356>
 80242be:	a90c      	add	r1, sp, #48	@ 0x30
 80242c0:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80242c4:	3b01      	subs	r3, #1
 80242c6:	430a      	orrs	r2, r1
 80242c8:	e787      	b.n	80241da <__kernel_rem_pio2+0x28a>
 80242ca:	3401      	adds	r4, #1
 80242cc:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80242d0:	2a00      	cmp	r2, #0
 80242d2:	d0fa      	beq.n	80242ca <__kernel_rem_pio2+0x37a>
 80242d4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80242d6:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 80242da:	eb0d 0503 	add.w	r5, sp, r3
 80242de:	9b06      	ldr	r3, [sp, #24]
 80242e0:	aa20      	add	r2, sp, #128	@ 0x80
 80242e2:	4443      	add	r3, r8
 80242e4:	f108 0701 	add.w	r7, r8, #1
 80242e8:	3d98      	subs	r5, #152	@ 0x98
 80242ea:	eb02 06c3 	add.w	r6, r2, r3, lsl #3
 80242ee:	4444      	add	r4, r8
 80242f0:	42bc      	cmp	r4, r7
 80242f2:	da04      	bge.n	80242fe <__kernel_rem_pio2+0x3ae>
 80242f4:	46a0      	mov	r8, r4
 80242f6:	e6a2      	b.n	802403e <__kernel_rem_pio2+0xee>
 80242f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80242fa:	2401      	movs	r4, #1
 80242fc:	e7e6      	b.n	80242cc <__kernel_rem_pio2+0x37c>
 80242fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024300:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8024304:	f7dc f90e 	bl	8000524 <__aeabi_i2d>
 8024308:	ed9f 7bb1 	vldr	d7, [pc, #708]	@ 80245d0 <__kernel_rem_pio2+0x680>
 802430c:	e8e6 0102 	strd	r0, r1, [r6], #8
 8024310:	ed8d 7b02 	vstr	d7, [sp, #8]
 8024314:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8024318:	46b2      	mov	sl, r6
 802431a:	f04f 0800 	mov.w	r8, #0
 802431e:	9b05      	ldr	r3, [sp, #20]
 8024320:	4598      	cmp	r8, r3
 8024322:	dd05      	ble.n	8024330 <__kernel_rem_pio2+0x3e0>
 8024324:	ed9d 7b02 	vldr	d7, [sp, #8]
 8024328:	3701      	adds	r7, #1
 802432a:	eca5 7b02 	vstmia	r5!, {d7}
 802432e:	e7df      	b.n	80242f0 <__kernel_rem_pio2+0x3a0>
 8024330:	e97a 2302 	ldrd	r2, r3, [sl, #-8]!
 8024334:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8024338:	f7dc f95e 	bl	80005f8 <__aeabi_dmul>
 802433c:	4602      	mov	r2, r0
 802433e:	460b      	mov	r3, r1
 8024340:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8024344:	f7db ffa2 	bl	800028c <__adddf3>
 8024348:	f108 0801 	add.w	r8, r8, #1
 802434c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8024350:	e7e5      	b.n	802431e <__kernel_rem_pio2+0x3ce>
 8024352:	f1cb 0000 	rsb	r0, fp, #0
 8024356:	ec47 6b10 	vmov	d0, r6, r7
 802435a:	f7ff fd3d 	bl	8023dd8 <scalbn>
 802435e:	ec55 4b10 	vmov	r4, r5, d0
 8024362:	4b9d      	ldr	r3, [pc, #628]	@ (80245d8 <__kernel_rem_pio2+0x688>)
 8024364:	2200      	movs	r2, #0
 8024366:	4620      	mov	r0, r4
 8024368:	4629      	mov	r1, r5
 802436a:	f7dc fbcb 	bl	8000b04 <__aeabi_dcmpge>
 802436e:	b300      	cbz	r0, 80243b2 <__kernel_rem_pio2+0x462>
 8024370:	4b9a      	ldr	r3, [pc, #616]	@ (80245dc <__kernel_rem_pio2+0x68c>)
 8024372:	2200      	movs	r2, #0
 8024374:	4620      	mov	r0, r4
 8024376:	4629      	mov	r1, r5
 8024378:	f7dc f93e 	bl	80005f8 <__aeabi_dmul>
 802437c:	f7dc fbec 	bl	8000b58 <__aeabi_d2iz>
 8024380:	4606      	mov	r6, r0
 8024382:	f7dc f8cf 	bl	8000524 <__aeabi_i2d>
 8024386:	4b94      	ldr	r3, [pc, #592]	@ (80245d8 <__kernel_rem_pio2+0x688>)
 8024388:	2200      	movs	r2, #0
 802438a:	f7dc f935 	bl	80005f8 <__aeabi_dmul>
 802438e:	460b      	mov	r3, r1
 8024390:	4602      	mov	r2, r0
 8024392:	4629      	mov	r1, r5
 8024394:	4620      	mov	r0, r4
 8024396:	f7db ff77 	bl	8000288 <__aeabi_dsub>
 802439a:	f7dc fbdd 	bl	8000b58 <__aeabi_d2iz>
 802439e:	ab0c      	add	r3, sp, #48	@ 0x30
 80243a0:	f10b 0b18 	add.w	fp, fp, #24
 80243a4:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80243a8:	f108 0801 	add.w	r8, r8, #1
 80243ac:	f843 6028 	str.w	r6, [r3, r8, lsl #2]
 80243b0:	e722      	b.n	80241f8 <__kernel_rem_pio2+0x2a8>
 80243b2:	4620      	mov	r0, r4
 80243b4:	4629      	mov	r1, r5
 80243b6:	f7dc fbcf 	bl	8000b58 <__aeabi_d2iz>
 80243ba:	ab0c      	add	r3, sp, #48	@ 0x30
 80243bc:	f843 0028 	str.w	r0, [r3, r8, lsl #2]
 80243c0:	e71a      	b.n	80241f8 <__kernel_rem_pio2+0x2a8>
 80243c2:	ab0c      	add	r3, sp, #48	@ 0x30
 80243c4:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80243c8:	f7dc f8ac 	bl	8000524 <__aeabi_i2d>
 80243cc:	4622      	mov	r2, r4
 80243ce:	462b      	mov	r3, r5
 80243d0:	f7dc f912 	bl	80005f8 <__aeabi_dmul>
 80243d4:	4652      	mov	r2, sl
 80243d6:	e967 0102 	strd	r0, r1, [r7, #-8]!
 80243da:	465b      	mov	r3, fp
 80243dc:	4620      	mov	r0, r4
 80243de:	4629      	mov	r1, r5
 80243e0:	f7dc f90a 	bl	80005f8 <__aeabi_dmul>
 80243e4:	3e01      	subs	r6, #1
 80243e6:	4604      	mov	r4, r0
 80243e8:	460d      	mov	r5, r1
 80243ea:	e718      	b.n	802421e <__kernel_rem_pio2+0x2ce>
 80243ec:	9906      	ldr	r1, [sp, #24]
 80243ee:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 80243f2:	9106      	str	r1, [sp, #24]
 80243f4:	e8f7 0102 	ldrd	r0, r1, [r7], #8
 80243f8:	f7dc f8fe 	bl	80005f8 <__aeabi_dmul>
 80243fc:	4602      	mov	r2, r0
 80243fe:	460b      	mov	r3, r1
 8024400:	4650      	mov	r0, sl
 8024402:	4659      	mov	r1, fp
 8024404:	f7db ff42 	bl	800028c <__adddf3>
 8024408:	3601      	adds	r6, #1
 802440a:	4682      	mov	sl, r0
 802440c:	468b      	mov	fp, r1
 802440e:	9b00      	ldr	r3, [sp, #0]
 8024410:	429e      	cmp	r6, r3
 8024412:	dc01      	bgt.n	8024418 <__kernel_rem_pio2+0x4c8>
 8024414:	42b5      	cmp	r5, r6
 8024416:	dae9      	bge.n	80243ec <__kernel_rem_pio2+0x49c>
 8024418:	ab48      	add	r3, sp, #288	@ 0x120
 802441a:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 802441e:	e9c5 ab00 	strd	sl, fp, [r5]
 8024422:	3c01      	subs	r4, #1
 8024424:	e6ff      	b.n	8024226 <__kernel_rem_pio2+0x2d6>
 8024426:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8024428:	2b02      	cmp	r3, #2
 802442a:	dc0b      	bgt.n	8024444 <__kernel_rem_pio2+0x4f4>
 802442c:	2b00      	cmp	r3, #0
 802442e:	dc39      	bgt.n	80244a4 <__kernel_rem_pio2+0x554>
 8024430:	d05d      	beq.n	80244ee <__kernel_rem_pio2+0x59e>
 8024432:	9b02      	ldr	r3, [sp, #8]
 8024434:	f003 0007 	and.w	r0, r3, #7
 8024438:	f50d 7d19 	add.w	sp, sp, #612	@ 0x264
 802443c:	ecbd 8b02 	vpop	{d8}
 8024440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024444:	9ba4      	ldr	r3, [sp, #656]	@ 0x290
 8024446:	2b03      	cmp	r3, #3
 8024448:	d1f3      	bne.n	8024432 <__kernel_rem_pio2+0x4e2>
 802444a:	9b05      	ldr	r3, [sp, #20]
 802444c:	f503 7318 	add.w	r3, r3, #608	@ 0x260
 8024450:	eb0d 0403 	add.w	r4, sp, r3
 8024454:	f5a4 74a4 	sub.w	r4, r4, #328	@ 0x148
 8024458:	4625      	mov	r5, r4
 802445a:	46c2      	mov	sl, r8
 802445c:	f1ba 0f00 	cmp.w	sl, #0
 8024460:	f1a5 0508 	sub.w	r5, r5, #8
 8024464:	dc6b      	bgt.n	802453e <__kernel_rem_pio2+0x5ee>
 8024466:	4645      	mov	r5, r8
 8024468:	2d01      	cmp	r5, #1
 802446a:	f1a4 0408 	sub.w	r4, r4, #8
 802446e:	f300 8087 	bgt.w	8024580 <__kernel_rem_pio2+0x630>
 8024472:	9c05      	ldr	r4, [sp, #20]
 8024474:	ab48      	add	r3, sp, #288	@ 0x120
 8024476:	441c      	add	r4, r3
 8024478:	2000      	movs	r0, #0
 802447a:	2100      	movs	r1, #0
 802447c:	f1b8 0f01 	cmp.w	r8, #1
 8024480:	f300 809c 	bgt.w	80245bc <__kernel_rem_pio2+0x66c>
 8024484:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	@ 0x120
 8024488:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	@ 0x128
 802448c:	f1b9 0f00 	cmp.w	r9, #0
 8024490:	f040 80a6 	bne.w	80245e0 <__kernel_rem_pio2+0x690>
 8024494:	9b04      	ldr	r3, [sp, #16]
 8024496:	e9c3 7800 	strd	r7, r8, [r3]
 802449a:	e9c3 5602 	strd	r5, r6, [r3, #8]
 802449e:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80244a2:	e7c6      	b.n	8024432 <__kernel_rem_pio2+0x4e2>
 80244a4:	9d05      	ldr	r5, [sp, #20]
 80244a6:	ab48      	add	r3, sp, #288	@ 0x120
 80244a8:	441d      	add	r5, r3
 80244aa:	4644      	mov	r4, r8
 80244ac:	2000      	movs	r0, #0
 80244ae:	2100      	movs	r1, #0
 80244b0:	2c00      	cmp	r4, #0
 80244b2:	da35      	bge.n	8024520 <__kernel_rem_pio2+0x5d0>
 80244b4:	f1b9 0f00 	cmp.w	r9, #0
 80244b8:	d038      	beq.n	802452c <__kernel_rem_pio2+0x5dc>
 80244ba:	4602      	mov	r2, r0
 80244bc:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80244c0:	9c04      	ldr	r4, [sp, #16]
 80244c2:	e9c4 2300 	strd	r2, r3, [r4]
 80244c6:	4602      	mov	r2, r0
 80244c8:	460b      	mov	r3, r1
 80244ca:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	@ 0x120
 80244ce:	f7db fedb 	bl	8000288 <__aeabi_dsub>
 80244d2:	ad4a      	add	r5, sp, #296	@ 0x128
 80244d4:	2401      	movs	r4, #1
 80244d6:	45a0      	cmp	r8, r4
 80244d8:	da2b      	bge.n	8024532 <__kernel_rem_pio2+0x5e2>
 80244da:	f1b9 0f00 	cmp.w	r9, #0
 80244de:	d002      	beq.n	80244e6 <__kernel_rem_pio2+0x596>
 80244e0:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80244e4:	4619      	mov	r1, r3
 80244e6:	9b04      	ldr	r3, [sp, #16]
 80244e8:	e9c3 0102 	strd	r0, r1, [r3, #8]
 80244ec:	e7a1      	b.n	8024432 <__kernel_rem_pio2+0x4e2>
 80244ee:	9c05      	ldr	r4, [sp, #20]
 80244f0:	ab48      	add	r3, sp, #288	@ 0x120
 80244f2:	441c      	add	r4, r3
 80244f4:	2000      	movs	r0, #0
 80244f6:	2100      	movs	r1, #0
 80244f8:	f1b8 0f00 	cmp.w	r8, #0
 80244fc:	da09      	bge.n	8024512 <__kernel_rem_pio2+0x5c2>
 80244fe:	f1b9 0f00 	cmp.w	r9, #0
 8024502:	d002      	beq.n	802450a <__kernel_rem_pio2+0x5ba>
 8024504:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 8024508:	4619      	mov	r1, r3
 802450a:	9b04      	ldr	r3, [sp, #16]
 802450c:	e9c3 0100 	strd	r0, r1, [r3]
 8024510:	e78f      	b.n	8024432 <__kernel_rem_pio2+0x4e2>
 8024512:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8024516:	f7db feb9 	bl	800028c <__adddf3>
 802451a:	f108 38ff 	add.w	r8, r8, #4294967295
 802451e:	e7eb      	b.n	80244f8 <__kernel_rem_pio2+0x5a8>
 8024520:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8024524:	f7db feb2 	bl	800028c <__adddf3>
 8024528:	3c01      	subs	r4, #1
 802452a:	e7c1      	b.n	80244b0 <__kernel_rem_pio2+0x560>
 802452c:	4602      	mov	r2, r0
 802452e:	460b      	mov	r3, r1
 8024530:	e7c6      	b.n	80244c0 <__kernel_rem_pio2+0x570>
 8024532:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8024536:	f7db fea9 	bl	800028c <__adddf3>
 802453a:	3401      	adds	r4, #1
 802453c:	e7cb      	b.n	80244d6 <__kernel_rem_pio2+0x586>
 802453e:	ed95 7b00 	vldr	d7, [r5]
 8024542:	ed8d 7b00 	vstr	d7, [sp]
 8024546:	ed95 7b02 	vldr	d7, [r5, #8]
 802454a:	e9dd 0100 	ldrd	r0, r1, [sp]
 802454e:	ec53 2b17 	vmov	r2, r3, d7
 8024552:	ed8d 7b06 	vstr	d7, [sp, #24]
 8024556:	f7db fe99 	bl	800028c <__adddf3>
 802455a:	4602      	mov	r2, r0
 802455c:	460b      	mov	r3, r1
 802455e:	4606      	mov	r6, r0
 8024560:	460f      	mov	r7, r1
 8024562:	e9dd 0100 	ldrd	r0, r1, [sp]
 8024566:	f7db fe8f 	bl	8000288 <__aeabi_dsub>
 802456a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 802456e:	f7db fe8d 	bl	800028c <__adddf3>
 8024572:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024576:	e9c5 0102 	strd	r0, r1, [r5, #8]
 802457a:	e9c5 6700 	strd	r6, r7, [r5]
 802457e:	e76d      	b.n	802445c <__kernel_rem_pio2+0x50c>
 8024580:	ed94 7b00 	vldr	d7, [r4]
 8024584:	e9d4 ab02 	ldrd	sl, fp, [r4, #8]
 8024588:	ec51 0b17 	vmov	r0, r1, d7
 802458c:	4652      	mov	r2, sl
 802458e:	465b      	mov	r3, fp
 8024590:	ed8d 7b00 	vstr	d7, [sp]
 8024594:	f7db fe7a 	bl	800028c <__adddf3>
 8024598:	4602      	mov	r2, r0
 802459a:	460b      	mov	r3, r1
 802459c:	4606      	mov	r6, r0
 802459e:	460f      	mov	r7, r1
 80245a0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80245a4:	f7db fe70 	bl	8000288 <__aeabi_dsub>
 80245a8:	4652      	mov	r2, sl
 80245aa:	465b      	mov	r3, fp
 80245ac:	f7db fe6e 	bl	800028c <__adddf3>
 80245b0:	3d01      	subs	r5, #1
 80245b2:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80245b6:	e9c4 6700 	strd	r6, r7, [r4]
 80245ba:	e755      	b.n	8024468 <__kernel_rem_pio2+0x518>
 80245bc:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80245c0:	f7db fe64 	bl	800028c <__adddf3>
 80245c4:	f108 38ff 	add.w	r8, r8, #4294967295
 80245c8:	e758      	b.n	802447c <__kernel_rem_pio2+0x52c>
 80245ca:	bf00      	nop
 80245cc:	f3af 8000 	nop.w
	...
 80245d8:	41700000 	.word	0x41700000
 80245dc:	3e700000 	.word	0x3e700000
 80245e0:	9b04      	ldr	r3, [sp, #16]
 80245e2:	9a04      	ldr	r2, [sp, #16]
 80245e4:	601f      	str	r7, [r3, #0]
 80245e6:	f108 4400 	add.w	r4, r8, #2147483648	@ 0x80000000
 80245ea:	605c      	str	r4, [r3, #4]
 80245ec:	609d      	str	r5, [r3, #8]
 80245ee:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80245f2:	60d3      	str	r3, [r2, #12]
 80245f4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80245f8:	6110      	str	r0, [r2, #16]
 80245fa:	6153      	str	r3, [r2, #20]
 80245fc:	e719      	b.n	8024432 <__kernel_rem_pio2+0x4e2>
 80245fe:	bf00      	nop

08024600 <_init>:
 8024600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024602:	bf00      	nop
 8024604:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024606:	bc08      	pop	{r3}
 8024608:	469e      	mov	lr, r3
 802460a:	4770      	bx	lr

0802460c <_fini>:
 802460c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802460e:	bf00      	nop
 8024610:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024612:	bc08      	pop	{r3}
 8024614:	469e      	mov	lr, r3
 8024616:	4770      	bx	lr
